push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
shr
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
jne
mov
mov
mov
cmpl
je
movl
mov
mov
sub
mov
mov
push
call
add
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
movl
movl
movl
movl
mov
mov
movzwl
and
add
mov
movl
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
mov
mov
movl
movl
movl
mov
movb
mov
movb
mov
push
mov
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
call
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
mov
mov
push
push
mov
push
call
add
popa
mov
mov
mov
add
xor
dec
jmp
ret
ret
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
cmpl
jne
movl
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
jmp
mov
pop
ret
int3
int3
int3
add
add
add
dec
xor
add
add
xor
add
xor
add
sbb
add
mov
or
cmp
or
cmp
or
mov
or
cmp
or
movsl
or
cmp
lds
mov
push
jg
into
or
mov
adc
leave
add
push
push
aad
jmp
sldt
push
and
cmc
das
add
add
xor
xor
add
sbb
pushl
jle
cmc
xor
adc
xor
add
xor
add
cld
add
loopne
jnp
enter
lock
xor
add
xor
xor
dec
xor
add
add
aad
mov
mov
add
xor
add
xor
fnstenv
lsl
xor
add
xor
add
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
add
push
xor
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
xor
pop
imul
std
dec
insb
mov
jg
pop
dec
mov
adc
fwait
test
add
or
test
xor
dec
dec
scas
pop
std
repnz
xchg
inc
cltd
cmp
jb
xor
mov
out
jo
add
cmpsb
pop
push
mov
xchg
or
in
arpl
fmull
sbb
jnp
inc
and
imul
sub
cmpsb
ljmp
or
adc
add
int3
arpl
sti
dec
pop
ljmp
mov
mov
mov
dec
dec
mov
ss
or
mov
cmpsl
mov
dec
mov
and
sbb
cmp
dec
decl
cmc
inc
dec
pop
jb
pop
jno
xor
fs
out
xchg
xchg
adc
adc
mov
mov
insl
ljmp
shll
hlt
leave
stos
push
xchg
leave
cmp
and
adc
mov
xchg
pusha
in
add
in
sub
cltd
lods
jae
in
inc
daa
add
mov
push
mov
mov
fistps
hlt
in
addr16
andb
cmp
cmp
cwtl
arpl
cwtl
in
push
insb
cmp
mov
in
mov
data16
and
and
aad
jmp
jnp
xchg
pop
xchg
rcl
sbb
dec
inc
fistpll
sbb
ss
mov
sub
pop
cmp
ljmp
xor
fcoms
mov
mov
push
sub
push
cli
in
lret
mov
adc
icebp
aad
das
or
push
jmp
pop
lret
xor
test
jecxz
pop
out
ret
lcall
jno
adc
cmp
pop
mov
inc
test
cmpsl
out
lds
lea
or
fistpll
jb
pop
adc
mov
xchg
scas
repz
jmp
jmp
jmp
jmp
jmp
jmp
jb
add
inc
fs
jo
xor
add
add
inc
gs
jo
outsb
dec
gs
add
add
add
dec
add
inc
add
add
xor
inc
add
add
add
inc
add
add
add
add
sub
add
add
add
inc
add
add
xor
xor
inc
add
cmp
xor
add
add
pop
add
outsl
add
je
jb
outsl
add
add
add
add
jae
je
add
xor
xor
pop
add
popa
add
imul
je
add
add
add
adc
push
and
je
and
inc
sub
inc
add
adc
pop
bound
inc
jns
jmp
pop
popa
fs
inc
jns
leave
add
mov
dec
scas
push
jne
lods
js
outsb
mov
gs
push
xor
add
push
inc
imul
je
jb
je
push
xor
add
add
outsl
inc
inc
imul
jns
push
xor
add
push
je
es
jne
xor
popa
outsb
sub
xor
add
inc
add
inc
add
xor
or
inc
add
xor
fnstenv
inc
add
push
je
ret
pop
arpl
push
jb
ret
add
push
bound
inc
jns
add
cltd
outsl
add
stos
push
jb
je
xor
aaa
push
insb
insb
push
xor
add
arpl
cs
add
insb
push
insl
jae
inc
add
cmp
jbe
inc
inc
cs
push
insl
arpl
inc
add
call
je
dec
insb
inc
and
xor
add
push
jb
add
insb
inc
in
outsl
arpl
add
cld
pop
insl
popa
loope
imul
add
add
add
jl
inc
mov
push
jb
les
push
ret
pop
je
mov
add
cltd
push
popa
jo
pop
insb
outsl
mov
add
jp
jb
insb
pop
xor
das
push
insb
insb
push
xor
add
pop
arpl
inc
dec
gs
add
push
xor
add
pop
add
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
roll
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
xor
add
jmp
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
jmp
add
jmp
jmp
push
xor
jmp
push
xor
jmp
push
xor
cltd
adc
add
fnstsw
jmp
push
xor
leave
dec
cs
push
ss
mov
add
add
add
push
xor
rclb
add
xor
add
push
jo
jmp
add
dec
xor
in
push
das
add
push
xor
in
push
das
add
push
xor
jmp
push
lret
push
xor
jmp
xor
add
sbb
adc
call
sub
add
test
add
test
add
insb
cwtl
add
mov
sub
add
js
add
js
add
push
sub
js
add
lock
add
push
sub
add
cmp
add
sub
add
cmp
add
sub
add
clc
sub
add
adc
push
sub
add
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
icebp
outsl
cmp
ret
add
adc
push
xlat
lds
push
xlat
decl
xlat
add
push
xlat
add
push
aaa
add
icebp
and
fnsave
add
and
push
xlat
jecxz
push
add
mov
add
add
push
flds
add
add
adc
jno
movsl
bound
push
xor
sub
jmp
daa
push
xor
lds
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
add
add
add
push
xor
jmp
push
xor
jmp
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
js
add
push
xor
add
add
js
add
push
xor
add
xor
add
xor
add
xor
add
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xlat
add
add
push
xlat
add
push
sarl
add
mov
add
mov
add
leave
add
leave
add
leave
add
leave
add
leave
add
lret
pop
lret
jno
add
and
lret
dec
lret
dec
lret
popf
lret
lret
in
lret
int
push
xor
lret
push
xor
push
xor
push
xor
lret
push
xor
push
xor
lret
push
xor
mov
push
xor
mov
push
xor
add
rcll
rclb
rclb
rclb
rcll
rclb
mov
push
xor
add
jecxz
push
xor
outsl
comiss
out
das
add
add
imulb
add
add
add
add
out
add
fildll
add
iret
add
add
cs
mov
add
adc
add
push
xor
adc
cs
push
xor
sub
in
cs
in
add
cld
add
in
add
mov
add
add
mov
add
xchg
add
cwtl
xchg
add
cmp
add
and
add
adc
add
je
add
dec
xchg
add
sbb
add
jbe
add
xchg
xchg
add
in
add
aam
add
xor
add
sbb
add
ljmp
add
add
add
and
add
rclb
add
add
and
add
add
add
pop
addb
cmpsb
xchg
add
outsb
xchg
add
push
lds
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
mov
push
sub
mov
push
sbb
add
mov
add
push
jnp
add
rolb
push
push
rolb
push
fwait
rolb
push
mov
add
rolb
push
add
test
add
test
add
jnp
push
xor
push
xor
push
xor
lods
push
xor
lods
push
xor
lods
push
xor
lods
push
xor
lods
push
xor
lods
push
xor
lods
push
xor
push
xor
add
push
xor
push
xor
stos
push
xor
stos
push
xor
stos
push
xor
stos
push
xor
stos
push
xor
lods
push
xor
stos
push
xor
push
xor
mov
xor
push
xor
mov
xor
push
xor
xchg
xor
xor
xor
or
cmpsl
xor
out
lahf
xor
mov
add
cld
xor
lahf
add
add
xor
push
in
add
xor
popa
in
add
fdivl
add
mov
xor
adc
xor
loope
xor
push
cltd
xor
dec
cltd
xor
pop
or
add
or
add
xor
push
stc
xor
sub
add
fnstenv
add
sbb
add
ja
add
add
xchg
add
ja
add
addb
push
loop
add
jl
add
jl
add
xor
add
xor
xorb
add
xor
cmp
add
lret
add
js
add
js
add
xor
add
jns
add
add
push
jns
add
jns
add
add
jns
add
jns
add
mov
add
mov
add
add
shll
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
push
inc
ret
jge
add
ret
cltd
ret
mov
add
ret
add
std
ret
or
push
xor
ret
out
push
xor
rcll
rcll
rcll
rcll
push
xor
push
xor
push
xor
push
xor
push
xor
lds
cltd
push
xor
add
add
add
add
in
push
xor
push
xor
push
xor
push
xor
push
xor
push
xor
push
xor
push
xor
push
xor
icebp
xchg
das
add
nop
das
add
xchg
das
add
xchg
das
add
das
add
das
add
mov
add
das
add
scas
das
add
add
sahf
das
add
clc
add
call
cs
clc
add
call
cs
mov
das
add
das
add
adc
add
adc
add
adc
add
add
sbb
add
sub
add
cld
out
add
ret
add
out
add
lock
add
add
sub
add
out
add
jb
add
mov
add
mov
add
mov
add
out
add
scas
lock
scas
lock
jle
add
mov
add
insb
lock
jp
add
adc
add
jp
add
repz
fdiv
add
sub
add
sbb
add
cld
mov
add
test
add
add
test
add
test
add
rolb
push
mov
add
aam
push
movl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
push
mov
add
mov
add
add
mov
add
mov
mov
push
xor
add
jmp
push
mov
add
aad
push
mov
add
xlat
add
out
add
insl
mov
xor
push
xor
add
or
push
mov
mov
xor
mov
xor
add
testb
mov
mov
push
mov
add
inc
mov
add
add
add
push
xor
mov
push
mov
add
mov
mov
push
xor
add
flds
push
mov
add
add
push
xor
in
push
xor
jmp
mov
xor
lret
mov
xor
mov
xor
imul
add
xor
outsl
movsl
xor
push
popf
xor
cmp
add
xor
roll
add
push
xor
std
or
add
or
add
sti
xor
mov
call
xor
push
fdivs
add
xor
jns
xor
add
xor
add
xor
add
scas
mov
popa
push
testb
out
adc
mov
movsl
cmp
testb
push
jae
out
scas
push
idiv
rcrb
add
xor
pop
imull
mov
mov
mov
xor
sbbl
and
scas
insb
pop
lcall
xor
jno
jmp
inc
rclb
lret
mov
xchg
mov
sub
dec
rclb
mov
ds
push
fnstenv
stc
mov
add
add
push
mov
add
daa
outsl
mov
cld
sbb
inc
movsb
dec
call
pop
cmp
sub
mov
and
mov
inc
pop
sbb
push
sub
es
ja
pop
mov
jle
jns
or
ficoml
adc
arpl
sub
fwait
scas
xchg
lahf
xlat
std
jge
or
dec
popa
rclb
xor
add
fsubs
movsl
idivl
ss
and
push
xchg
push
lock
hlt
mov
popf
inc
aam
jo
pop
jno
push
mov
cmp
or
daa
test
push
mov
lock
lods
leave
punpckhwd
xchg
push
jno
push
mov
cmp
jo
daa
fwait
pop
adcl
in
outsb
popf
inc
aam
jo
push
jno
push
mov
dec
add
daa
or
pop
aam
push
push
push
xchg
dec
addr16
enter
clc
jmp
adc
xor
jmp
mov
loopne
dec
jno
shrb
test
std
mov
loopne
mov
shrb
mov
or
loopne
xchg
sbb
shrb
aas
xor
xor
mov
sbb
add
je
jmp
pop
ficoms
push
mov
shrb
xchg
les
ficoms
insb
cmpsb
xor
inc
push
scas
add
adc
cli
cmp
inc
add
add
jge
adcl
rclb
xchg
mov
jo
add
adc
add
xor
xorl
std
rclb
mov
shlb
nop
inc
add
bound
rclb
inc
add
add
addr16
rclb
add
jbe
call
mov
adc
jbe
push
gs
add
and
push
bnd
mov
xor
pusha
cltd
lret
add
add
xchg
mov
rolb
lret
add
add
sahf
or
add
mov
adcl
adc
inc
pushf
mov
adc
aaa
sbb
push
mov
out
xchg
mov
fdivl
add
add
fisttpll
shll
std
incl
add
mov
hlt
jns
rolb
xchg
lret
cs
jmp
sti
add
xchg
xor
add
loope
dec
xor
xchg
xor
add
add
cmp
xchg
xor
add
leave
add
xor
xchg
xor
add
flds
inc
xor
xchg
xor
add
or
xor
adc
icebp
add
imul
adc
loope
jno
imul
adc
leave
add
das
jmp
push
sub
adc
leave
add
add
add
push
xor
imul
add
push
xor
dec
dec
xor
jmp
dec
inc
add
pop
and
fisttpl
add
dec
and
jmp
pop
jo
stc
dec
cmp
jmp
dec
push
add
pop
rolb
jmp
dec
mov
jmp
pop
nop
add
dec
ss
dec
or
jmp
pop
rolb
add
dec
imul
dec
sub
jmp
pop
addb
dec
inc
add
dec
sbb
add
sub
js
mov
js
or
push
cmp
cmp
add
add
sub
push
add
cmp
add
sub
sub
je
sub
xor
clc
cmp
add
ss
add
cmp
clc
cmp
add
add
cmp
mov
xor
pop
add
cmp
add
cmp
js
fadds
push
stos
push
pop
push
cltd
or
or
cltd
or
push
cltd
or
cltd
or
xchg
or
push
cmpsl
add
push
xchg
or
xchg
or
push
test
mov
push
xchg
or
add
or
push
xchg
or
push
test
or
or
xchg
or
push
xchg
or
xchg
or
push
xchg
or
push
cmpsl
add
push
xchg
or
xchg
or
push
xchg
or
xchg
or
xor
or
jmp
add
xor
or
das
jmp
or
xor
or
xor
or
add
xor
add
xor
or
xor
or
xor
add
xor
or
xor
or
xor
or
jmp
or
xor
or
das
jmp
or
xor
or
xor
or
jmp
fstl
add
dec
cs
pop
outsb
add
add
pop
mov
sti
push
dec
add
dec
push
add
pop
pop
add
pop
in
add
dec
ds
dec
mov
call
push
xor
jmp
pop
inc
add
pop
scas
add
push
dec
add
dec
and
jmp
push
outsb
add
push
ss
dec
adc
jmp
push
into
add
dec
xor
jmp
pop
icebp
call
add
push
xor
jmp
mov
cmp
add
cmp
test
jns
js
cmp
js
rolb
jns
adc
push
aaa
sub
js
mov
push
aaa
mov
cmp
dec
add
cmp
add
cs
sub
push
add
aaa
adc
add
sub
jne
clc
ss
add
sub
call
ss
add
ss
add
cmp
add
add
push
cltd
or
cltd
or
push
lea
push
push
cltd
or
cltd
or
push
cmpsl
add
push
cltd
or
cltd
or
push
cltd
or
push
xchg
or
xchg
or
push
cmpsl
add
push
xchg
or
add
or
push
test
ret
push
xchg
and
or
xchg
or
push
xchg
or
push
test
or
or
xchg
or
push
xchg
or
push
xchg
or
adc
jmp
add
jmp
or
jmp
add
xor
or
xor
or
jmp
add
jmp
or
add
xor
or
xor
or
das
jmp
or
stc
add
or
xor
or
xor
add
jmp
or
xor
or
xor
add
jmp
or
xor
or
xor
jmp
pop
icebp
call
push
aaa
add
pop
or
jmp
add
dec
lret
push
or
add
pop
imul
sti
push
inc
add
pop
sbb
jmp
dec
ljmp
pop
mov
jmp
dec
cmpsb
add
test
jmp
pop
inc
add
dec
and
fistl
inc
add
pop
and
jmp
dec
jno
stc
idivl
add
pop
adc
add
cmp
add
xor
add
add
cmp
add
cmp
test
loope
mov
cmp
mov
xor
add
cmp
js
js
js
cmp
push
cmpsb
adc
js
push
add
mov
push
cmp
add
xor
add
cmpsb
add
cmp
push
add
cmp
add
movsl
sub
add
clc
cmp
cmp
call
test
or
cltd
or
or
cltd
or
push
cltd
or
cltd
or
cltd
or
push
test
or
or
cltd
or
push
test
push
push
cltd
or
or
cltd
or
push
stos
push
push
cltd
or
or
cltd
or
push
cltd
or
xchg
or
add
add
add
or
or
push
cmpsl
cld
add
or
xchg
or
push
jl
mov
push
xchg
or
xor
or
jmp
cld
pop
xor
or
jmp
or
jmp
or
xor
or
jmp
or
xor
or
jmp
or
add
xor
or
jmp
or
xor
or
jmp
or
xor
cld
push
xor
or
jmp
or
xor
fimull
push
add
dec
pop
add
dec
jae
clc
in
xor
add
dec
dec
add
dec
roll
jmp
pop
scas
add
dec
out
call
add
add
add
dec
xchg
add
lods
aaa
add
pop
push
add
dec
inc
add
dec
ret
add
lea
add
pop
es
dec
data16
dec
addl
insl
dec
add
pop
push
add
dec
push
add
dec
jecxz
jmp
pop
mov
jmp
xor
xor
jmp
sub
addb
aaa
pop
add
cmpsl
jo
call
movsb
ret
add
or
clc
cmpsl
pusha
add
cmpsl
and
call
cmpsl
add
mov
cmpsl
inc
add
ss
add
cmpsl
sbb
test
xchg
add
cmpsl
js
push
movsb
rolb
imul
push
add
mov
cmp
mov
sub
repnz
or
add
sti
push
push
cltd
sti
adc
mov
add
or
push
cltd
sti
je
cltd
sti
xor
cltd
cld
lret
or
push
cltd
sti
and
cltd
cld
stos
push
cltd
sti
add
cltd
sti
test
sti
inc
push
cltd
cld
ljmp
sti
pop
push
cltd
sti
sbb
cltd
cld
lcall
sti
jl
cltd
sti
cmp
cltd
cld
ficoml
or
push
cltd
sti
insb
add
push
cltd
sti
sub
cltd
cld
mov
push
xchg
sti
mov
jmp
cli
sub
stc
or
jmp
sti
inc
xor
sti
adc
fimull
xor
jmp
sti
inc
xor
cli
pop
xor
or
jmp
sti
xor
jmp
sti
push
xor
sti
shll
jmp
cli
mov
stc
or
jmp
sti
add
cmp
jmp
or
xor
sti
sti
das
jmp
cli
xchg
sti
or
jmp
sti
sub
jmp
jmp
cmp
call
pop
sub
jmp
sbb
add
or
pop
add
cli
sbb
jmp
jmp
add
pop
xor
jmp
fimull
jmp
add
add
add
lret
roll
jmp
mov
jmp
add
pop
aaa
add
lcall
jmp
pop
or
add
jp
add
imul
jmp
push
fwait
mov
add
pushf
mov
sub
add
sub
add
sub
add
sub
add
sub
adc
add
sub
add
sub
in
sub
inc
call
sub
add
sub
add
or
mov
sub
add
sub
add
add
test
sub
push
jne
popa
add
add
cltd
or
mov
or
push
jge
add
add
or
inc
lahf
or
push
dec
or
push
cltd
add
push
fwait
add
push
mov
add
push
xchg
add
push
movsl
add
push
mov
add
add
push
jle
add
add
push
mov
add
add
push
mov
add
add
push
mov
add
add
push
mov
add
add
push
mov
add
add
push
mov
add
add
jmp
push
xor
add
jmp
push
xor
add
ljmp
xor
add
ljmp
xor
add
in
add
in
push
xor
add
in
push
xor
add
in
push
xor
add
stc
repnz
xor
add
ss
dec
xor
add
add
jmp
add
jmp
add
add
add
add
jmp
add
call
add
jmp
push
xor
ljmp
add
push
xor
in
xor
in
push
xor
in
xor
out
push
xor
out
xor
out
push
xor
out
xor
icebp
push
xor
icebp
push
xor
loopne
xor
loopne
xor
repz
xor
repz
xor
loop
xor
loop
xor
cmc
push
xor
in
add
push
xor
in
xor
fcoml
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
js
add
js
add
push
xor
add
add
js
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
or
mov
or
add
je
or
mov
or
fs
add
xor
add
or
push
xor
add
add
or
movsb
xor
add
or
les
or
and
or
mov
xor
add
add
push
inc
add
push
daa
add
push
cmpsl
add
push
add
push
out
or
add
push
pop
add
push
xlat
add
add
push
push
add
push
xlat
add
push
push
add
push
pop
add
push
xchg
add
push
lahf
add
push
pop
add
push
dec
add
push
iret
add
push
aas
add
push
mov
add
push
outsl
add
push
das
add
push
scas
add
push
pop
add
push
filds
or
add
push
out
add
push
lahf
add
push
pop
add
push
xor
add
add
scas
add
daa
add
add
pop
xor
add
inc
add
incl
pop
xor
dec
xor
add
mov
add
jg
dec
xor
add
testl
dec
xor
add
xor
add
xor
add
xor
add
xor
dec
xor
add
xor
add
add
aas
add
xor
notl
add
sub
call
push
sub
test
sub
sub
add
dec
sub
mov
add
push
sub
dec
push
sub
clc
push
sub
js
sub
mov
push
sub
mov
push
sub
js
sub
clc
push
sub
lock
sub
jo
sub
and
add
dec
sub
nop
add
push
sub
inc
dec
sub
rclb
add
add
dec
sub
mov
sub
add
sub
or
and
or
xor
sub
add
xor
add
sub
add
sub
or
in
or
xchg
sub
add
xor
add
add
xor
add
sub
add
or
in
sub
add
or
int
or
lea
add
sub
add
or
push
pop
add
push
les
push
insb
add
push
push
add
push
pushf
add
push
add
or
add
push
lcall
push
sbb
or
add
push
cmp
add
push
cmp
or
add
push
cli
add
push
cli
add
push
sbb
or
add
push
lcall
push
mov
add
push
adc
or
add
push
bound
push
bound
or
add
push
xor
add
rolb
xor
pop
xor
pop
xor
add
xor
add
pop
xor
add
add
add
add
add
xor
add
pop
xor
pop
xor
add
xor
add
adc
xor
add
loop
dec
xor
pop
xor
pop
xor
add
xor
add
repnz
out
add
out
dec
xor
pop
xor
pop
xor
add
xor
add
add
push
daa
add
add
push
daa
add
push
daa
add
daa
add
daa
add
push
daa
add
push
daa
add
push
daa
add
push
daa
add
push
daa
add
daa
add
daa
add
push
daa
add
push
daa
add
push
daa
add
push
daa
add
push
daa
add
daa
add
daa
add
daa
add
daa
add
push
daa
add
push
daa
add
push
daa
add
add
push
daa
add
daa
add
daa
add
inc
sub
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
or
xlat
xor
add
xor
add
or
xchg
xor
add
xor
add
xor
add
xor
add
or
push
xor
add
or
ja
or
add
cmpsl
das
or
xchg
or
xlat
das
or
mov
or
daa
das
or
aaa
xor
add
xor
add
pop
add
add
push
jmp
add
push
cmp
push
cltd
add
push
pop
add
push
mov
add
push
jno
pop
push
xor
push
xchg
add
push
push
add
push
loope
pop
push
mov
add
push
int
pop
push
and
push
insl
add
push
jne
pop
push
mov
add
push
fldl
pop
push
xchg
or
add
push
movb
push
inc
add
push
add
push
out
or
add
push
es
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
sub
out
sub
loope
sub
loope
sub
lock
dec
daa
or
pop
daa
or
push
es
dec
es
inc
es
pop
es
push
and
or
inc
and
or
push
and
fisttpll
or
inc
and
in
pop
and
in
and
fisttpll
or
inc
and
in
pop
and
in
and
hlt
inc
and
in
and
add
add
aas
push
push
ds
push
push
aas
push
push
ds
push
out
ds
push
push
aas
push
push
ds
push
ds
push
out
ds
push
ds
push
fidivrs
push
push
mov
ds
push
sahf
ds
push
mov
ds
push
scas
aas
movq
setg
movq
movq
setg
movq
movq
sldt
outsl
aas
movq
maxps
and
sqrtps
adc
inc
xchg
divps
add
inc
imul
test
adc
xchg
push
pop
outsb
push
pop
inc
pushw
pop
ds
sbb
cmp
sbb
xor
imul
sbb
pop
sbbb
nop
sbb
dec
nop
sbb
dec
arpl
sbb
add
arpl
sbb
xor
sbb
sbb
imul
sbb
sbb
dec
xchg
sbb
dec
bound
sbb
bound
sbb
xor
sbb
add
push
repnz
repnz
loop
dec
sub
sbb
aad
cmp
sub
and
std
pop
gs
pop
pop
sub
pop
push
sub
pop
dec
sub
pop
inc
sub
pop
cmp
add
sub
pop
gs
pop
pop
sub
pop
push
sub
pop
dec
sub
pop
inc
sub
and
add
insb
sub
hlt
and
and
and
and
aam
sub
sbb
cld
jno
sbb
in
jno
sbb
fdivl
sbb
in
ss
icebp
add
pop
aaa
or
pop
cmp
in
cmp
faddl
or
out
push
cmp
adc
inc
and
clc
arpl
adc
arpl
adc
pusha
and
sti
pusha
and
fiaddl
adc
inc
and
fldl
adc
ds
std
data16
cmc
pop
and
cld
and
hlt
pop
and
adc
jle
push
push
jle
push
push
dec
and
push
add
and
push
aas
and
pop
aas
and
pop
pop
pop
jmp
pop
pop
add
sbb
add
sbb
push
sub
sbb
sbb
add
sbb
add
sbb
lock
sbb
sub
sbb
sub
sbb
sub
sbb
sbb
push
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sbb
push
sub
sbb
sbb
add
push
sbbl
sbb
sbb
dec
xchg
sbb
cmp
sbb
bound
sbb
sbb
push
sbb
pop
jle
sbb
sbb
dec
mov
sbb
sbb
cmp
cwtl
add
push
xchg
add
push
xchg
add
push
popf
add
push
xchg
add
push
fwait
add
push
xchg
add
push
xchg
add
push
popl
add
add
push
fwait
add
push
mov
add
add
add
push
xchg
add
push
insl
add
push
jns
add
add
push
xor
add
xor
add
xor
add
leave
add
mov
add
xor
add
xor
add
xor
add
jmp
add
call
add
ljmp
xor
add
loope
push
xor
add
add
flds
push
xor
add
or
xor
add
sub
xor
add
xor
push
xor
add
xor
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
cmp
add
jb
jmp
xchg
xor
jmp
push
xor
ja
xor
add
insl
cmp
inc
test
cltd
rcl
sbb
pop
mov
or
sahf
sbb
gs
test
jns
mov
pop
xchg
add
mov
out
leavew
nop
or
mov
push
pusha
cmp
mov
sbb
rcr
insl
leave
sbb
hlt
aaa
or
xorl
imul
std
add
or
mov
pop
push
arpl
orl
lea
insl
cmp
sbb
dec
push
in
pop
aad
addr16
add
js
dec
in
or
movsl
and
mov
jne
fldt
lds
test
fiadds
xor
fcoml
adc
fdivs
add
add
push
xlat
mov
rolb
add
dec
scas
mov
jbe
mov
mov
mov
mov
mov
xchg
xor
outsl
jle
inc
push
adc
decl
inc
fsubl
in
loop
mov
adc
xorb
dec
mov
mov
jmp
sbb
imul
xchg
fwait
push
lock
push
add
clc
insb
pop
xor
xor
mov
and
xor
addb
sub
mov
mov
mov
mov
and
lahf
mov
push
sbb
mov
cmp
mov
inc
sbb
hlt
push
push
fmull
add
rorb
hlt
fistpl
pusha
cs
adc
add
add
add
add
inc
push
shlb
loop
pop
arpl
js
int3
fdivl
das
mov
cltd
jnp
push
cmp
xor
inc
or
stos
mov
xor
push
inc
or
cmp
int3
add
push
cmp
push
and
mov
into
out
gs
jno
push
mov
ljmp
push
add
cmpsb
ret
mov
outsb
lret
ror
in
push
mov
mov
je
dec
pop
ljmp
imul
fs
pop
adc
gs
pop
insl
or
mov
push
in
mov
add
sbb
ljmp
push
push
jb
imul
sbbb
jbe
aam
sbb
ficoml
and
fsubl
pop
mov
mov
cli
mov
jge
mov
push
lahf
shll
mov
and
ror
repz
aas
inc
xchg
mov
push
shr
or
sbb
scas
les
pop
idivl
add
fisubl
jmp
push
jbe
add
pop
or
lcall
outsl
insb
mov
sub
iret
or
add
popf
clc
mov
mov
mov
mov
mov
xlat
adc
xchg
fldenv
fimuls
imul
pushf
jg
insl
push
lock
or
shr
or
dec
stc
pop
push
sub
cmpsb
popf
cmc
sub
mov
xor
fdivl
lea
xchg
add
rorb
stos
sub
je
ja
mov
ljmp
dec
cmpsb
sub
pop
mov
xor
dec
or
xchg
lods
mov
popa
mov
cmp
mov
sar
aad
add
xchg
sub
dec
add
pop
adc
xor
sbb
sub
and
scas
lods
mov
dec
popa
inc
mov
xor
test
es
mov
xor
fadd
mov
mov
idivl
mov
adc
bound
imul
xchg
sbb
jmp
add
pop
push
das
adc
inc
xor
ret
add
sub
insb
repz
test
daa
sbb
stos
dec
xor
fisubrl
hlt
js
fs
ja
popw
pop
push
mov
inc
dec
lock
enter
shll
out
cli
add
jecxz
lock
pop
ds
mov
popa
sbbb
sbb
dec
cwtl
mov
push
mov
add
in
out
popa
gs
movsb
xlat
mov
aaa
stc
xchg
sbb
mov
add
pusha
out
lcall
ss
or
insb
decl
cs
int
cmc
out
les
dec
mov
mov
test
add
aam
jmp
in
jne
or
nop
inc
lea
shrb
scas
jo
add
test
dec
sub
cli
push
pop
xor
sbb
stc
inc
jle
pop
pop
popl
imul
sub
arpl
pop
rcr
lahf
inc
popf
jle
inc
jo
test
test
repz
call
adc
add
jmp
cwtl
andb
lahf
jb
setge
jge
add
insb
inc
lods
push
xor
stos
int
mov
sbb
addr16
scas
xchg
aam
loopne
fsubl
cmc
lahf
cmc
jno
stos
push
mov
mov
cmp
pop
icebp
rcrl
fsubl
fcomps
cmp
imul
movsl
fmuls
daa
jns
lock
mov
cs
rolb
add
and
inc
cmp
mov
dec
cmp
pop
mov
push
test
outsb
dec
dec
lahf
mov
sbb
adc
xor
mov
lods
mov
shlb
lahf
dec
inc
sub
ret
pop
jecxz
rclb
cli
adc
loop
insl
aas
das
push
pop
push
ss
pop
sub
jnp
loop
cmp
out
flds
add
pop
push
mov
jl
add
lret
int3
addb
lcall
cmpsl
test
test
xchg
and
mov
cmpb
pop
push
push
hlt
inc
movsl
mov
insl
je
shll
repz
sarl
jbe
outsl
arpl
xchg
scas
shrl
movsl
add
sub
sbb
pop
pop
push
mov
insb
pop
cmpsb
cmp
adc
aam
sbb
and
jns
cwtl
cwtl
mov
and
jecxz
hlt
adc
mov
adc
inc
xchg
fldenv
xor
out
jle
mov
pushf
sub
xor
imul
cmp
add
or
sub
inc
add
lock
add
dec
ljmp
or
mov
push
mov
test
popa
jne
lahf
push
lahf
mov
mov
repz
xor
test
enter
mov
cltd
out
dec
pop
push
push
inc
sti
inc
jnp
mov
mov
mov
notb
aam
add
push
xor
xchg
xchg
mov
loopne
ret
mov
jo
lcall
pop
mov
lods
jmp
inc
fs
dec
dec
sub
cli
test
sub
addr16
pop
mov
mov
cwtl
arpl
popf
xchg
movb
push
in
adc
subb
xlat
inc
push
stc
int
sbb
js
push
pop
sub
adc
mov
sub
js
mov
cmp
push
add
pop
adc
imul
fbstp
and
inc
push
sub
push
adcl
and
mov
movsb
push
lahf
test
leave
repnz
pusha
jmp
fwait
jl
lret
fsts
adc
mov
add
add
aas
inc
pop
iret
jo
pop
lret
imul
cmp
fsubl
push
out
push
xchg
mov
cmpsb
adc
mov
add
daa
sbb
add
imul
push
jae
push
lret
add
push
dec
add
das
mov
stc
xchg
or
add
add
add
mov
sbb
dec
mov
popf
or
pop
or
gs
push
mov
mov
push
repz
cs
fisubs
in
dec
inc
leave
stos
cmp
outsb
imul
ljmp
pusha
fdivs
jae
pop
dec
cmp
es
std
cmp
int3
lahf
jp
daa
inc
dec
dec
inc
fmuls
cmp
stos
or
add
ret
cltd
inc
mov
daa
xor
push
add
adc
cmp
pushf
jle
fiaddl
push
xchg
popa
xor
add
jns
cli
push
inc
js
push
xchg
outsl
push
mov
and
and
loopne
dec
or
sub
dec
out
leave
or
cmp
dec
cmp
add
add
add
add
inc
cmpl
inc
sub
add
mov
pop
add
sbb
aad
ret
inc
cmp
cld
and
fdiv
sbb
sti
dec
cmc
pop
and
mov
pop
dec
bnd
xor
outsb
jnp
cmpsl
mov
insb
cmpsl
stos
cmp
fnstsw
add
add
leave
ljmp
add
adc
subb
bound
pusha
add
popa
cwtl
or
into
gs
mov
push
data16
xor
addr16
lret
pop
dec
imulb
dec
mov
jecxz
addb
cmc
xor
and
sbb
outsl
fimull
or
inc
jle
cs
add
cmp
inc
jmp
or
imul
inc
add
adcb
dec
adc
push
dec
xor
push
xchg
push
jne
andl
and
cmp
daa
jl
sbb
test
pop
ja
pop
pop
scas
cwtl
pop
mov
popf
jmp
cmp
sub
outsb
pop
lds
pop
js
xor
loopne
mov
jae
les
cmp
shll
cmp
mov
add
add
add
add
jle
in
pop
cmp
mov
jecxz
scas
adc
scas
pusha
mov
lcall
stos
aam
imul
rcl
jge
sbb
outsb
imul
imul
pop
leave
mov
pop
dec
iret
lcall
and
dec
inc
and
inc
or
push
lea
inc
movsl
dec
add
pop
cmpsl
inc
js
mov
jp
sbb
or
scas
jno
adc
loop
push
les
xchg
cmp
sbb
cmpsb
pop
push
pop
xor
mov
pop
adc
pusha
cmp
xor
imul
ficompl
insl
movsl
dec
jno
out
jo
addl
add
das
sub
imul
cld
xchg
fs
push
xlat
gs
adc
push
bound
cmpsl
insb
mov
loopne
stc
lahf
add
int
inc
mov
nop
xchg
rcrl
repnz
pop
mov
jbe
or
dec
sti
cwtl
xor
inc
fwait
sbb
jg
fldcw
add
out
daa
lods
and
popl
mov
sub
xchg
ss
mov
xchg
orl
adc
popf
push
lahf
test
test
test
sbb
xchg
fs
xchg
lea
add
sub
push
movsb
stos
pop
pop
jmp
mov
sub
push
lods
lods
shrb
cmpsb
add
jbe
jne
jns
mov
hlt
xor
fucomi
cmp
or
sbb
mov
jae
mov
push
inc
mov
pop
xorb
fisttpl
mov
sbb
mov
out
in
mov
sub
nop
mov
stos
int
mov
pop
pop
xchg
mov
push
lods
sub
add
xchg
jp
into
mov
ficomps
imul
rcr
in
in
mov
or
mov
add
pusha
or
fbstp
hlt
bound
cli
cmp
and
adcb
js
lods
adc
les
xor
out
lds
jb
sub
into
adc
and
fs
pop
movsb
outsb
shll
add
add
add
add
and
repz
push
in
shlb
mov
xlat
jo
shlb
sub
sbb
mov
fldl
cwtl
lret
xchg
sub
mov
mov
fisubs
jmp
stc
outsb
repz
lret
mov
and
fwait
sub
rcl
xor
sub
xor
add
icebp
pop
or
push
inc
fisubs
pop
jb
sub
iret
mov
jnp
add
mov
lods
xor
add
adc
mov
inc
fwait
mov
xchg
and
bound
sbb
xchg
mov
push
lods
enter
gs
jae
mov
mov
cltd
hlt
std
out
dec
insb
divb
leave
add
int
push
adc
cmp
jae
xchg
xor
sub
fstp
inc
pop
mov
cld
out
in
add
mov
aaa
test
add
lahf
mov
fstpt
fildl
mov
pop
outsl
insl
xchg
jmp
es
loop
andl
xchg
push
sub
sub
clc
or
add
jge
cmpsb
xchg
lods
xchg
xor
cs
pop
addr16
sti
out
jno
pop
dec
leave
test
stc
fstpt
sarl
imul
adc
sbb
shrl
jns
test
and
pop
clc
into
push
dec
dec
in
out
push
mov
aaa
inc
out
inc
orb
cmp
jo
sbb
push
mov
add
fisubl
push
pop
inc
adcb
popf
mov
test
sbb
jmp
mov
cmp
inc
xchg
in
imul
ss
xor
push
pop
fimull
out
jne
xor
ret
cmp
cmp
sti
mov
cld
push
xchg
dec
and
scas
ljmp
fldt
loope
jp
cld
mov
add
add
add
out
mov
insl
cltd
jo
add
test
nop
fcmovbe
cmp
cmp
jge
out
sbb
imul
sbb
jae
adc
or
lea
mov
add
mov
loop
jg
rclb
and
jg
in
sub
je
aam
xchg
ret
fildll
dec
inc
jae
add
add
ljmp
cmc
mov
fwait
aas
xchg
inc
lods
pushf
sub
addr16
sbb
jb
stc
push
out
inc
mov
jb
or
leave
or
xchg
push
cmpsb
test
push
sub
inc
out
movsb
std
jne
je
out
fistl
xchg
push
stc
mov
mov
push
sahf
add
jmp
xchg
imul
add
add
sbb
insl
cld
mov
xchg
mov
mov
jo,pn
add
lea
inc
pop
mov
loopne
scas
push
xor
adc
nop
aas
add
cmpl
rcrl
jmp
icebp
dec
subb
aam
jbe
das
fnsave
jle
hlt
jle
mov
add
mov
lret
mov
mov
repz
negl
lret
adc
cmp
insb
aad
mov
sub
test
and
sbbb
push
cli
lock
xchg
adc
daa
test
sarl
add
mov
repnz
rcll
pop
xchg
fildl
add
mov
addb
sahf
leave
or
jmp
mov
pop
pop
add
push
ret
mov
rorb
push
fwait
pop
sub
push
andb
repnz
mov
mov
aas
add
dec
cmp
push
jl
xor
pop
push
mov
add
jp
loopne
fs
add
adc
sti
mov
push
pop
mov
ljmp
int3
jo
daa
leave
add
sub
outsl
inc
es
jb
or
lods
stc
leave
add
and
cmp
imul
shrb
xor
sub
sbb
nop
push
dec
and
mov
mov
mov
push
aam
test
stc
sub
push
cwtl
out
cli
add
lret
and
or
sarb
push
ret
sub
stos
pop
lods
cmp
jg
mov
pop
mov
pushf
insb
and
pushf
mov
lgdtl
sahf
scas
daa
mov
das
push
mov
push
cmp
xchg
xor
push
xor
add
push
cmpsl
inc
sub
lods
mov
add
and
movsl
rcll
js
ficoms
xor
xor
mov
sbb
sub
into
adc
sbb
je
popa
in
adc
fcomp
adc
dec
push
xchg
in
and
rcrl
fld
sub
call
ljmp
sbb
dec
add
test
dec
gs
popa
pop
add
push
into
mov
add
xor
repnz
movsl
inc
cmc
stos
xchg
xlat
int3
fwait
les
xchg
hlt
sti
push
sbb
fstps
xchg
and
add
sbb
push
movsb
or
add
outsb
add
out
or
inc
mov
sub
insb
ja
test
xchg
sbb
add
add
add
add
and
into
popf
mov
push
xor
cwtl
jae
scas
test
rclb
gs
or
cmp
pop
insb
mov
loope
mov
pop
dec
loop
fistl
jmp
mov
mov
mov
out
xor
mov
inc
mov
and
jne
pop
lods
hlt
sub
inc
sub
cwtl
int
xchg
cmp
jle
repz
add
lahf
cltd
add
mov
out
arpl
paddd
data16
sahf
add
mov
add
jg
into
sub
push
mov
ficomps
push
fnstcw
fwait
je
pop
es
push
out
data16
mov
jp
scas
mov
dec
mov
in
mov
ret
add
sbb
int
inc
sbb
es
fnsave
add
dec
mov
add
fidivrl
dec
dec
call
cmc
sub
pop
xchg
xor
sbbl
out
daa
cmp
mov
mov
int3
sub
dec
movsl
dec
fistl
push
cmp
sub
daa
mov
adc
add
mov
cmpsl
je
jae
aad
ret
movsb
xchg
sbb
std
add
ds
add
mov
or
push
test
sbb
test
adc
hlt
jns
adc
sub
sub
mov
mov
xchg
fbld
negb
loop
inc
mov
subl
adc
pop
pop
pushl
push
pop
inc
ja
fs
out
das
push
add
push
cmp
lret
or
sahf
incl
scas
imul
inc
iret
inc
push
stc
std
loope
sbb
shl
lcall
xchg
icebp
sub
xor
push
mov
inc
and
stos
mov
or
mov
negl
cmp
mov
sahf
mov
push
iret
out
mov
js
dec
repnz
inc
push
xchg
add
subl
ss
les
push
js
lods
addr16
sub
or
sub
jecxz
mov
mov
ret
or
inc
int3
add
push
xor
out
and
mov
loopne
insl
lea
xchg
sub
sbb
stos
cs
mov
cmp
mov
add
test
test
xor
div
xchg
inc
jno
movb
stos
xor
cwtl
sarl
nop
mov
mov
das
cmp
insb
in
in
int
imul
push
jb
call
test
dec
pop
add
xor
sbb
aaa
xor
pop
pusha
cmp
dec
daa
ljmp
add
fimull
add
jg
stos
loopne
and
popf
gs
xchg
stos
and
insb
je
aaa
pop
arpl
mov
push
out
repnz
aaa
sub
jbe
insl
mov
sbb
cmpsl
daa
sub
jne
aad
xor
testl
shll
nop
xor
mov
lods
mov
jns
push
out
cmp
add
mov
sbb
mov
dec
add
jp
sub
jae
sbb
sbb
mov
adc
push
out
insb
fadd
inc
aam
or
and
stos
mov
into
fs
or
stos
bound
add
pop
push
or
imul
out
xchg
out
cwtl
push
out
outsl
test
add
add
add
add
lret
xchg
push
jnp
xlat
jne
or
insb
mov
mov
nop
ds
jle
adc
insl
lret
outsl
or
mov
lods
movsl
pop
mov
mov
cmp
cmpb
cmp
jo
push
std
xor
iret
jg
lock
mov
cmp
mov
or
add
add
add
add
stos
sub
jne
js
xchg
inc
push
push
cld
sbb
adc
mov
loop
loopne
pop
loope
or
and
nop
adc
sub
mov
push
aas
pop
push
je
cltd
pop
dec
jge
push
data16
rolb
clc
sub
pop
lret
fstps
test
sahf
adc
cmpsb
xchg
cmp
imul
add
fisubrl
inc
icebp
ret
xor
adc
lahf
cmc
pop
fbstp
add
jae
jmp
lret
cmp
sub
stc
sub
sbb
fcoml
out
sbb
push
cmp
pop
push
cmp
nop
movsl
xor
mov
push
push
jb
rorb
adc
jb
and
adc
aad
add
dec
pushf
jmp
mov
dec
sub
pop
xlat
in
sbb
stos
loope
cmp
adc
cs
out
loope
xchg
xor
sbb
loopne
and
and
rorb
jb
fxch
mov
lea
mov
int3
cmp
mov
jnp
imulb
addl
or
ret
mov
jg
pusha
and
add
add
add
gs
inc
xor
jle
jae
aas
loope
leave
cmp
cmc
mov
xorb
or
dec
mov
mov
dec
movsb
test
data16
or
aam
enter
mov
imul
pusha
les
or
inc
and
shrb
adcl
out
add
cmpsl
push
cli
cmpsb
fdivr
lock
adc
int
xor
or
dec
cwtd
lea
outsb
mov
in
mov
sbb
gs
xorl
call
add
and
hlt
les
xchg
das
in
mov
mov
pusha
fists
pop
lret
jne
inc
dec
lods
lods
je
add
neg
jl
cs
mov
lea
int
mov
xor
jge
sbb
mov
xchg
add
xchg
adc
xor
jp
and
stos
fs
ss
and
cmp
loop
cld
mov
pusha
jae
or
jp
aad
call
lds
and
jg
lret
add
div
in
cld
idivb
xchg
inc
in
jbe
sahf
in
aas
mov
hlt
and
hlt
jo
sub
dec
add
jl
fs
mov
or
cs
cmp
xor
inc
out
loope
fbstp
sub
or
lods
sarl
jns
add
mov
enter
fsubs
in
nop
faddl
add
notl
aad
pop
and
mov
dec
roll
or
ret
mov
mov
mov
scas
shlb
push
sbb
add
cmp
push
stc
fisubrl
jge
ret
ss
test
imul
aam
jp
imul
pop
add
sbb
in
or
mov
pop
leave
sbb
dec
dec
add
sbb
es
xchg
cltd
and
repnz
push
out
pop
popa
test
inc
pusha
push
jno
inc
sbb
in
jne
push
cmpsl
enter
mov
shr
out
cmp
scas
cmp
and
push
and
cld
inc
lock
mov
jl
or
cmp
pop
adc
test
inc
push
add
ret
mov
dec
sub
add
stc
pop
daa
mov
mov
paddsb
aam
push
adcb
pop
push
adc
outsl
imul
repnz
loope
fwait
lods
mov
lret
jno
lock
pop
mov
movsl
arpl
das
xor
add
add
add
add
shrl
mov
shr
es
outsb
xchg
pop
pop
and
mov
push
jecxz
cmp
fnsave
cmp
rcll
sbb
dec
pop
sub
mov
movsl
sbb
call
push
mov
mov
mov
scas
mov
lcall
push
mov
mov
add
add
add
add
pop
shrb
or
xchg
adc
ja
jle
ja
int3
add
and
mov
repz
int3
xor
dec
in
test
xchg
clc
sbb
mov
lea
add
movsb
les
jae
and
sbb
insb
inc
popa
cmp
dec
inc
dec
pop
adc
cmp
std
adc
cwtl
or
pop
test
xor
pop
xor
sbb
mov
jae
loop
ds
cmc
mov
lea
dec
in
aaa
or
stc
gs
aam
fdivs
enter
mov
mov
push
je
pop
cmc
or
hlt
lret
xchg
daa
out
sub
inc
aas
dec
cli
add
int3
jmp
cmp
imul
scas
test
fadd
lahf
inc
xchg
jnp
and
icebp
sub
pop
je
aad
inc
pop
outsl
rcrl
jle
mov
xchg
adc
adc
inc
jg
cltd
sub
pop
ds
aam
ljmp
mov
lods
add
xchg
cmp
hlt
jge
mov
mov
add
scas
xor
rol
int3
mov
dec
fistl
loope
ret
mov
into
filds
dec
shl
dec
and
fisttpl
test
xchg
int3
test
aam
jb
outsb
sbb
addr16
inc
and
inc
and
mov
push
bound
aaa
pop
inc
outsl
sbb
cmp
repnz
or
je
aaa
xchg
push
clc
add
icebp
mov
insb
mov
dec
xchg
fidivs
push
or
aas
ret
notl
cmp
and
adc
adc
cwtl
mov
pop
xor
xchg
sbb
sub
add
add
add
add
pop
add
cmpsb
mov
ss
andl
fstps
sbb
jmp
test
push
pop
push
out
data16
push
mov
pusha
xor
repnz
mov
dec
inc
loope
push
scas
push
fs
push
test
mov
mov
and
pop
stc
sahf
sub
mov
sub
push
jno
add
sbb
enter
lods
faddl
inc
sub
shll
arpl
adc
sti
outsl
xor
sahf
add
call
inc
sub
pop
lods
rclb
or
scas
sarb
mov
cmpsl
add
xchg
jl
imul
jne
loop
leave
xchg
xchg
adc
mov
mov
sub
xchg
enter
add
je
jecxz
or
fcomps
mov
jb
xor
ficoml
outsb
imul
movb
dec
jae
jge
sarb
rolb
cwtl
sbb
jg,pn
ret
jge
cmp
pop
dec
dec
ja
jecxz
lret
ret
je
stos
aas
or
mov
into
sub
pop
xchg
incl
jo
inc
pusha
aad
movsb
jo
ja
pop
cmpsb
lea
fistps
lock
jg
adc
push
lcall
repz
js
mov
xchg
sbb
push
jmp
das
push
out
into
mov
inc
sub
mov
xchg
sbb
bswap
xchg
push
out
into
rcll
add
jp
pop
inc
shlb
rcl
das
mov
stc
pop
cmp
jnp
add
shrl
mov
xchg
xchg
pop
daa
cs
xlat
int3
es
cmp
mov
jl
add
leave
aaa
in
aas
icebp
lods
mov
xor
dec
ret
xor
lret
or
push
dec
inc
push
add
push
and
mull
pop
push
in
shl
idivl
adc
and
test
gs
ficompl
cmpl
cmp
scas
or
das
daa
aad
pop
adc
testb
inc
push
out
iret
mov
aam
orb
stc
in
add
cmp
sbb
or
insl
push
add
or
mov
add
jp
das
pop
dec
dec
fimull
jbe
jb
adc
dec
mov
enter
lods
cs
int
rolb
movsl
pop
cmpsb
pop
sbb
push
cmp
stos
xchg
xchg
push
psllw
in
push
sbb
push
push
rorb
push
mov
xchg
aaa
and
fnstcw
jmp
ljmp
add
add
dec
dec
push
pop
out
popa
repnz
popf
add
lea
fcomps
cmp
push
push
inc
icebp
dec
lret
hlt
dec
sub
or
test
inc
loope
out
fstps
scas
mov
xchg
fldenv
data16
add
dec
scas
out
enter
icebp
jae
sbb
call
stos
into
in
push
sub
add
xor
jnp
test
cwtl
nop
push
cmp
pop
sahf
mov
jge
js
shlb
mov
push
pmullw
sub
jg
fadds
sub
loopne
iret
jmp
dec
jne
mov
ret
aas
xor
jp
lea
hlt
mov
fs
xlat
fcompl
mov
add
js
cmp
adc
lds
xor
cs
xchg
lahf
xor
jp
sti
adc
jg
outsl
in
test
leave
jle
dec
cmpsl
popa
nop
sbb
xor
xor
bound
inc
mov
out
mov
add
dec
addb
add
outsl
pop
fildll
xor
iret
test
sub
add
jg
dec
loopne
mov
cmp
push
xchg
mov
jp
mov
or
clc
call
ret
cwtl
repz
pop
mov
jp
std
iret
xchg
aas
push
xor
ljmp
add
push
cmp
lock
ss
push
cmp
ficoms
add
push
and
add
add
push
adc
add
sub
add
xor
add
add
xor
add
add
sub
adc
sub
adc
clc
sub
add
sub
adc
cli
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
xor
add
sub
add
add
push
pop
incl
dec
pop
or
pop
pop
adc
imul
add
dec
add
push
dec
add
push
push
add
push
push
adc
add
inc
add
push
inc
add
push
inc
add
push
push
add
push
push
add
push
bound
sbb
add
add
add
push
cltd
add
nop
jmp
arpl
loope
xor
jo
leave
repz
das
or
out
sub
mov
inc
and
mov
dec
out
cmp
add
mov
insb
xchg
xor
add
out
adc
imul
shrl
and
aad
insb
add
add
sbb
fildll
push
cmp
sub
or
add
mov
roll
push
xor
jmp
cmp
sti
shlb
aaa
add
push
xor
jmp
push
xor
dec
jb
gs
jne
push
push
shll
mov
outsb
xor
inc
call
dec
lret
lcall
add
push
decl
dec
aam
fsts
add
push
int3
decl
xor
lock
int3
dec
iret
or
jno
in
shrl
out
js
in
shll
mov
ja
push
xor
lcall
dec
mov
jno
lods
shrl
out
js
loopne
insl
fcoml
ljmp
mov
inc
add
popf
inc
add
add
pusha
dec
add
jo
pop
jno
push
pop
gs
add
mov
test
mov
lea
cmpl
add
xor
push
dec
loop
add
sub
aam
out
clc
xor
call
in
subb
testb
int3
push
jae
push
mov
add
add
icebp
jne
jl
dec
adc
les
mov
ficompl
repz
push
loope
imul
repnz
sub
hlt
jp
push
add
push
lahf
mov
fcmovb
mov
shr
lea
jg
mov
lock
test
stos
add
add
pop
sub
sbb
sub
dec
inc
or
add
push
mov
rorl
push
add
dec
cmp
pop
xor
add
mov
lret
imul
mov
lds
inc
lods
mov
xchg
add
je
mov
nop
mov
mov
out
mov
lods
int
jecxz
aad
fcoml
mov
and
xchg
and
add
add
add
add
call
call
lcall
and
push
xor
inc
ss
jns
cmp
inc
add
xor
sbb
cmp
sbb
dec
call
adc
push
add
in
ds
push
add
push
sbb
pop
sub
or
push
xor
out
sbb
jecxz
add
add
test
sbbl
mov
cmpsl
outsl
lret
jne
mov
inc
mov
xchg
stos
mov
movsl
mov
addr16
outsb
enter
mov
cmp
rcr
movsb
addb
mov
xlat
imul
xchg
push
in
aad
sub
test
cmp
subl
add
adc
cmc
cmc
aam
add
cmp
pop
imul
sbb
dec
cmpb
ja
pop
xor
dec
and
push
push
and
push
jno
pop
sub
or
jo
fs
daa
punpckldq
mov
addl
jl
push
je
xor
push
cltd
ret
pop
sbb
imulb
add
push
ret
pop
and
outsb
pop
xor
pop
cmp
pop
jmp
pop
pop
scas
push
adc
mov
fs
dec
push
mov
xchg
pushl
arpl
push
xchg
adc
xchg
xchg
add
jns
push
mov
popf
mov
mov
loopw
test
add
add
push
xor
adc
dec
stos
xchg
lea
sbb
xchg
dec
push
ja
dec
dec
popa
mov
cmp
add
imul
cmp
xchg
fsubs
cmp
fiadds
add
xor
mov
aas
rcll
in
ja
out
jge
movsb
jno
std
jnp
stos
add
push
xor
push
insl
push
lock
jae
int
xor
mov
cmp
sar
call
loop
push
lret
pusha
ret
jle
test
pushl
push
xor
je
xchg
mov
in
mov
cmc
jns
arpl
xchg
pusha
add
mov
shlb
dec
mov
jg
add
cli
das
add
dec
sub
fisttps
xor
aam
roll
sub
sbb
aad
cmc
sbb
jmp
aad
rcl
mov
ret
stc
test
repz
iret
xlat
in
xchg
xchg
in
mov
mov
xchg
lcall
aad
inc
mov
shlb
mov
andl
loop
add
mov
addl
lea
testl
add
jle
jecxz
xchg
popf
jmp
xchg
fcos
push
fdivp
lock
jl
jle
mov
pusha
nop
inc
jne
push
inc
pop
and
push
sbb
jno
out
addb
push
adc
inc
xchg
sbb
ja
imul
push
call
xchg
xchg
add
loop
jg
test
mov
mov
leave
xchg
push
repz
loopne
jg
fsub
push
xchg
xlat
loope
xchg
lret
cltd
aam
nop
xchg
ret
in
outsb
add
push
cmpsb
scas
cli
lods
cmpsb
loop
cmpsl
pop
mov
idivb
cltd
mov
jge
mov
xchg
mov
add
xor
or
fimuls
pop
loopne
or
ficoms
mov
call
clc
inc
and
add
cmp
cmp
mov
gs
cmp
mov
add
xor
adcb
mov
dec
cmc
cwtl
push
xor
icebp
ret
ljmp
idivb
mov
lds
adc
jp
add
jnp
cmp
js
cmp
cmp
and
xor
cmp
push
xor
xchg
jecxz
xchg
hlt
jp
aaa
cmc
jle
ds
pop
push
xor
mov
push
sti
inc
movsl
mov
fiadds
push
xor
repz
ds
mull
add
es
cmp
sub
push
xor
lcall
insb
cwtl
add
cltd
fisubl
jb
jmp
add
lods
pop
push
enter
enter
add
movsl
pop
jle
imul
pushf
push
dec
je
push
jmp
pop
dec
dec
push
push
inc
push
push
pop
sub
add
test
scas
insb
mov
xor
popf
mov
lods
xchg
test
out
inc
arpl
pop
imul
mov
adcb
nop
xchg
mov
subl
enter
cmc
int3
popa
fsqrt
cld
test
incb
mov
sahf
cmpsl
mov
test
test
mov
push
and
dec
mov
mov
pop
movsb
sti
lds
adc
dec
xchg
std
add
push
cwtl
inc
inc
roll
or
repnz
rclb
mov
jle
jle
inc
or
icebp
insl
adc
mov
notb
xor
or
dec
inc
add
push
mov
out
loope
dec
add
xor
dec
sub
or
mov
lock
movsb
lock
add
add
add
add
js
mov
xchg
jmp
rorb
and
push
xor
add
es
lock
xorl
xor
mov
and
out
mov
jecxz
xor
sub
sub
sub
mov
pop
add
fcoml
popa
xchg
fcmovnbe
add
shlb
mov
add
cmp
sbb
push
xor
aaa
xor
jns
xor
mov
jmp
mov
add
push
xor
jo
cmp
fcos
mov
add
jge
adc
jo
ss
pusha
sub
or
das
push
jp
cmp
test
ljmp
add
add
add
add
xchg
enter
lock
add
jle
push
js
add
sub
leave
rorl
iret
cltd
int
stc
cmp
add
mov
in
xor
add
lret
mov
jmp
mov
lods
fdivrs
in
in
cld
repz
mov
rol
iret
mov
aad
xor
add
add
inc
bound
sbb
fwait
push
xor
push
mov
or
cmp
and
add
xchg
mov
into
xchg
sti
scas
mov
push
sub
test
rorb
cmp
pop
inc
add
push
xorb
outsb
testl
jne
add
icebp
jbe
pop
fldt
imul
data16
enter
jl
add
push
subl
scas
arpl
popf
xchg
imul
push
fbld
add
scas
mov
push
pop
mov
push
lahf
sar
lods
mov
rcrb
leave
lcall
mov
imul
push
xor
fnstenv
mov
add
test
sbb
xchg
sbb
jp
daa
rolb
lret
imul
xchg
test
push
lods
jae
fbld
jmp
cmpsb
xchg
mov
stos
add
inc
push
mov
scas
push
dec
xchg
or
inc
add
sbb
xor
cmpsb
sbbl
in
xorl
fstl
lcall
xchg
gs
pushf
xchg
push
lahf
mov
movsb
push
lods
addl
mov
ja
dec
movsl
xchg
dec
mov
add
aas
bnd
das
add
push
sbb
push
sub
call
push
xor
add
lea
add
add
add
add
scas
xchg
add
pop
sbb
and
add
or
jne
add
cltd
adc
add
mov
repnz
pop
cli
test
sub
add
arpl
or
add
inc
jl
dec
cmp
inc
jnp
sbb
push
add
sti
rcr
int
rcr
in
add
nop
hlt
in
pop
xchg
testb
xorps
dec
add
inc
adc
add
ja
sarl
add
and
adcl
mov
nop
mov
lock
test
add
pop
mov
dec
mov
push
mov
std
mov
dec
add
xor
jae
add
push
adc
add
add
add
add
dec
add
imul
sbb
sub
dec
adc
pop
dec
or
cmp
push
inc
inc
or
sbb
add
sbb
add
add
inc
or
pusha
add
sub
and
das
outsb
std
icebp
adc
es
dec
stc
rcrl
call
stc
pop
pop
clc
push
inc
sbb
jmp
gs
add
rorb
fidivl
push
shrb
or
outsl
das
sbb
push
xor
xchg
imul
stos
inc
or
mov
add
ret
aas
out
pop
outsl
daa
add
xor
sbb
add
out
stos
xchg
icebp
fistpll
mov
mov
mov
fdivrs
imul
cmpsl
push
fcmove
mov
add
lds
loop
xchg
outsb
ror
fdivrl
ss
inc
and
and
loope
mov
shll
sbb
mov
jmp
in
retw
push
fadd
xchg
rclb
icebp
xchg
jg
or
fcomps
jecxz
xor
or
fwait
adc
popf
or
popa
out
cli
inc
movzbl
or
pop
push
push
ret
jmp
mov
pop
adc
push
inc
enter
orb
rolb
xchg
adc
iret
add
push
call
sub
adc
xor
dec
add
sub
pop
xor
xor
sbb
loop
adc
sub
xor
add
loop
insl
cmp
inc
xchg
stc
daa
xor
sbb
and
aam
jge
adc
mov
mov
aas
and
ret
fnstsw
push
lret
mov
push
popa
add
sub
sbb
ficoms
mov
out
out
loop
in
mov
inc
mov
adcl
add
fxch
inc
leave
xlat
mov
rcl
cld
sbb
mov
mul
inc
mov
movsl
adc
stos
aad
movsb
popf
fiadds
in
xchg
add
fdivs
push
xchg
repnz
mov
data16
fldln2
es
jge
dec
dec
sahf
push
or
ljmp
push
jns
adc
adc
add
add
add
add
add
clc
add
and
push
or
out
or
xor
push
dec
adc
mov
push
cs
pop
xor
fisttpll
aaa
push
add
es
sub
iret
xor
roll
add
insl
cmp
inc
push
mov
stos
jo
pushw
xchg
aaa
pop
pcmpgtw
add
xor
xor
movsb
add
mov
jb
adcb
jno
mov
insb
shll
add
es
adc
shrb
out
jmp
pop
dec
or
sarl
mov
fistpll
jg
mov
out
clc
add
out
inc
inc
icebp
inc
popa
cmp
sbb
sub
push
cmp
xor
or
data16
adc
mov
rcrb
in
sarb
xlat
movl
outsl
add
dec
push
sub
jg
xor
add
loop
pop
mov
and
push
fwait
inc
or
pop
push
es
xor
sub
cmp
mov
pop
xlat
add
xchg
mov
pop
out
sbb
add
inc
iret
add
sbb
add
push
cmc
icebp
adc
pop
out
or
stc
decl
add
push
shrl
scas
push
mov
pop
add
push
jp
enter
fistpll
ficomps
sahf
mov
mov
lods
cmpsl
test
push
or
and
movlps
push
in
inc
push
sbb
inc
or
int
xchg
int3
add
add
push
sti
adc
pop
xor
adc
adc
adc
add
xor
jb
rcrl
incb
cmp
sbb
add
xchg
push
xor
repnz
fbstp
call
jp
lds
xchg
jb
enter
les
out
push
outsl
dec
cli
adc
xor
daa
xor
and
add
sahf
sahf
sbb
fsubl
sub
ljmp
imul
jb
in
cmc
call
arpl
sub
pop
in
xor
call
sbb
push
and
dec
adc
or
sbb
pop
or
call
pop
pusha
xor
out
push
xor
ljmp
dec
sbb
adc
ret
inc
adc
nop
mov
add
arpl
adc
sub
stos
xchg
cmp
mov
mov
jnp
fcomip
dec
sbb
into
scas
pop
mov
mov
mov
movsl
add
shrl
add
fnstsw
sub
add
into
enter
int
popf
rol
mov
mov
call
mov
roll
test
xchg
lret
lret
jg
lahf
mov
pop
enter
mov
mov
push
add
iret
popl
sub
lcall
sub
add
xchg
loop
dec
jge
add
std
test
adc
mov
pop
xor
push
pop
jns
scas
jne
cmpsb
mov
xchg
mov
sub
mov
push
rolb
add
pop
add
push
sbb
push
inc
or
add
push
cmpb
sbb
add
xor
push
out
test
add
aaa
mov
call
add
cli
push
sbb
lods
dec
pop
pop
add
push
mov
mov
pop
add
push
movsb
fs
ljmp
add
push
aam
xor
enter
imul
mov
add
add
add
add
cmc
int3
push
and
out
add
imul
jno
adc
data16
add
xor
jp
ss
push
xor
enter
mov
jb
add
arpl
adc
mov
fmul
insl
outsl
aad
cltd
dec
xchg
out
add
call
stc
push
subl
add
clc
xchg
roll
push
xor
pop
push
xor
nop
mov
inc
scas
push
dec
sbb
jne
pop
mov
xchg
inc
adc
pop
outsb
inc
mov
inc
sbb
push
jb
mov
inc
pop
or
pop
add
les
in
rclb
add
cmpsl
or
into
mov
mov
sahf
sub
xchg
mov
jmp
mov
in
lahf
fsubrs
add
cmp
sti
mov
js
cwtl
stos
jns
xchg
cmp
push
fiaddl
mov
int
xor
xchg
add
add
inc
ja
aad
pushf
cwtl
iret
add
mov
push
dec
xor
cmp
add
shlb
xor
das
add
rcrl
xchg
add
or
hlt
sub
add
add
enter
enter
mov
clc
add
fnsave
mov
pop
cs
lcall
push
aas
pop
xor
push
pop
pop
lods
addr16
pop
inc
or
pop
push
mov
das
in
sub
insl
lock
pop
fadds
in
test
cmp
clc
push
das
clc
cmp
loop
test
pop
pushf
test
jecxz
add
cwtl
add
xchg
test
loop
mov
pop
js
xchg
and
in
test
sahf
mov
cwtl
inc
pop
mov
mov
lahf
mov
in
js
stos
js
loop
sub
sub
sub
jecxz
sbb
adc
sbb
loop
or
test
in
xchg
add
das
call
add
das
call
add
add
call
add
push
cs
push
cs
push
sub
add
push
cs
dec
sub
add
push
cs
push
sub
pop
push
cs
push
das
call
push
xor
add
sub
add
sub
ljmp
sub
call
add
sub
add
add
push
das
add
push
das
add
push
xor
jmp
push
xor
xor
push
xor
call
in
add
push
xor
xchg
push
xor
jge
outsl
add
push
xor
loope
xor
jns
jo
fsts
add
push
xor
inc
popf
jo
lock
xor
icebp
push
xor
sub
xor
in
xor
call
push
xor
jmp
add
jmp
xor
call
push
xor
add
xor
add
xor
add
xor
add
jne
add
add
insl
jne
add
xor
add
xor
add
je
add
xor
add
je
add
xor
add
inc
add
xor
add
inc
add
roll
xor
add
add
inc
add
inc
add
add
jmp
inc
add
add
sub
add
add
push
push
add
push
fiadds
push
js
add
mov
jnp
add
popl
lcall
push
popf
add
push
pop
popl
jl
add
popl
jg
add
inc
inc
push
sahf
add
push
incl
add
push
mov
inc
inc
push
nop
add
push
add
addl
push
mov
add
inc
inc
push
pop
add
push
adc
push
dec
pop
cld
or
add
inc
div
adc
clc
adc
cmp
std
lock
leave
and
push
lds
outsl
push
rcrl
dec
int
addr16
mov
sbb
and
push
pop
test
add
add
add
add
nop
xchg
rcr
call
mov
fcomp
movsb
mov
mov
jl
in
xchg
test
lods
xchg
xchg
fsubrl
lea
mov
movsl
popa
lret
cwtl
cltd
pop
iret
xchg
popf
imul
lret
test
jg
lods
lcall
ret
pop
xchg
subl
sahf
dec
repnz
add
add
add
add
aad
push
fcmove
stos
dec
int
cmp
loope
xor
lret
popf
fnstsw
and
cmp
lret
out
into
sbb
add
adc
sub
fidivrl
mov
jecxz
scas
adc
adc
or
stc
sbbl
cmc
jg
mul
mov
sti
fldl
cs
dec
xor
pop
or
in
or
adc
and
sbb
or
and
sub
test
cs
call
inc
ss
jo
cmp
xor
ds
mov
adc
mov
cli
insb
outsl
test
jo
pushf
add
mov
js
xchg
lret
fsubr
inc
inc
in
icebp
inc
inc
add
dec
dec
add
in
dec
dec
enter
mov
int
jnp
jmp
test
mov
jns
fidivrs
xchg
ret
xchg
mov
lcall
movsl
mov
testb
scas
pop
xchg
mov
fs
mov
rorb
into
dec
inc
ret
inc
xchg
pusha
cmp
into
add
sahf
cmp
xchg
fidivrl
sub
sub
xor
out
inc
pop
ljmp
push
repnz
mulb
xor
dec
sbb
fisttpll
sbb
or
call
add
jmp
add
jmp
add
jmp
add
jmp
add
xor
add
jmp
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
dec
ss
add
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
mov
push
xor
jmp
add
add
add
push
xor
jmp
push
xor
jmp
push
sbb
xchg
sbb
jmp
push
xor
jmp
push
xor
jmp
or
incl
sbb
sbb
jg
push
xor
jmp
push
xor
jmp
push
xor
push
mov
incl
dec
imul
jg
xor
add
xor
add
add
xor
add
xor
add
xor
add
imul
clc
stc
xor
js
xor
add
xor
add
xor
add
push
add
test
add
mov
xor
add
xor
add
add
clc
xor
add
add
push
xor
add
add
push
xor
add
add
xor
add
add
push
mov
add
addl
std
out
cmp
sub
add
rorl
jmp
sbb
lock
lock
lock
lock
icebp
adc
mov
popa
or
sbb
jmp
adc
lock
lock
lock
icebp
adc
mov
add
push
or
add
add
push
or
add
add
push
or
add
add
push
xor
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
das
mov
xor
add
das
add
dec
nop
add
jbe
push
dec
mov
inc
push
xchg
add
dec
xchg
add
cltd
add
dec
sub
cmp
add
dec
jb
pushf
push
push
add
push
in
add
add
add
add
push
popl
adcl
adcb
jne
lcall
push
xchg
add
xchg
add
push
xor
lods
push
push
add
push
and
mov
push
cmp
cs
add
push
inc
add
push
jno
add
inc
add
xor
inc
xor
xchg
das
jo
xchg
bound
dec
das
push
add
add
add
pop
das
cmp
dec
das
pop
add
or
add
sbb
pop
das
lidtl
das
adc
sbb
inc
add
cs
add
outsl
add
jno,pn
out
arpl
out
flds
or
add
xor
add
xor
adc
push
add
add
xor
add
xor
xor
add
push
lods
add
add
add
add
push
dec
add
push
inc
add
push
cmp
and
add
push
add
add
add
push
and
or
add
push
and
sbb
push
or
pop
push
cmpsl
push
cmp
push
push
push
lods
push
sub
push
cmp
push
adc
push
and
pop
push
jbe
push
push
jl
sub
pop
cmp
jg
adc
pop
and
pop
add
push
pop
pop
dec
push
inc
pop
dec
push
xor
pop
push
xor
pop
das
xor
pop
cmp
sbb
or
sbb
or
xor
pop
ret
das
inc
pop
mov
das
or
push
das
push
pop
jle
adc
pop
push
clc
push
das
sti
push
pushf
das
fiaddl
ds
loopne
subb
push
push
das
inc
or
push
mov
push
pusha
mov
add
inc
pusha
mov
pop
pusha
dec
pop
push
pusha
inc
pop
mov
pusha
inc
pop
lock
push
pop
repnz
push
pop
hlt
pusha
add
leave
das
inc
push
das
xchg
dec
or
xor
push
in
das
jns
adc
js
into
das
jnp
int3
das
jp
lret
dec
enter
das
pop
dec
lds
push
push
ret
das
inc
dec
shrl
push
fildll
xor
das
xor
add
das
movsl
pop
fldcw
pushf
dec
xlat
das
xchg
dec
aad
mov
das
test
dec
out
das
stos
dec
in
das
stos
pop
ljmp
dec
out
scas
dec
in
cmpsb
pop
in
add
daa
int
loope
into
xor
daa
iret
xor
sub
xor
sub
xor
fidivs
dec
sub
xor
sub
xor
sub
xor
loop
add
test
in
test
out
jbe
call
xor
ljmp
cmp
xor
in
xor
out
xor
aaa
fwait
xor
ss
shll
sbb
pop
ss
push
stc
and
cli
and
jmp
and
push
fldl
and
push
add
sub
add
sub
add
push
sub
push
sub
sub
sub
push
pop
push
das
dec
sub
xor
push
xor
push
xor
push
xor
push
xor
inc
push
xor
push
es
aaa
dec
and
cmp
push
cmp
or
push
stc
or
clc
or
sti
or
cli
or
cmc
or
or
testl
or
ss
or
add
orb
orl
ss
or
lea
add
ss
pop
ss
or
ss
or
ss
or
ss
or
mov
add
push
add
push
mov
xor
push
movsb
xor
push
lahf
xor
push
xchg
push
mov
push
js
push
push
jnp
inc
push
stos
xor
push
movsl
xor
add
xchg
xor
add
add
add
add
mov
add
push
xor
add
push
das
add
dec
xor
pop
push
xor
dec
ss
push
xor
add
push
aaa
add
dec
cmp
push
cmp
push
mov
add
push
cmp
add
push
inc
add
dec
aas
add
push
jbe
and
push
inc
add
dec
je
cs
inc
add
add
dec
jae
xor
xor
and
sbb
push
dec
add
dec
dec
add
push
dec
add
dec
dec
add
mov
xor
inc
add
xor
inc
add
xor
xor
xor
dec
add
xor
dec
add
xor
dec
add
ss
add
ss
add
ss
add
adc
adc
xor
add
xor
dec
xor
add
xor
add
xor
add
xor
add
xor
add
sbb
ss
push
dec
jmp
add
dec
movl
dec
lds
push
lods
add
dec
mov
add
dec
mov
add
add
dec
scas
add
push
jle
sub
add
sub
add
sub
add
push
mov
mov
add
push
jp
mov
add
push
jo
stos
push
outsb
add
push
arpl
xor
lods
push
inc
add
push
xor
add
das
xchg
add
jle,pn
add
add
jae
add
bound
xchg
test
shrb
add
cs
add
lods
add
cs
add
cmpsb
add
xor
fldcw
xor
enter
lret
and
mov
cs
in
sub
push
add
sub
cmp
lock
xor
add
sub
add
add
push
roll
adc
add
push
xlat
add
push
mov
add
push
mov
add
push
ret
add
push
ret
push
roll
push
enter
movl
adcb
xchg
push
int3
add
lret
push
leave
add
lock
out
add
in
add
out
add
push
repz
push
repnz
add
push
icebp
add
push
clc
add
push
testl
dec
dec
cmp
add
xor
and
xchg
xor
mov
and
cmp
ret
cmp
and
cmp
and
cmp
and
cmp
and
cmp
cmp
and
cmp
and
sub
mov
cmp
add
add
add
add
cmp
and
cmp
and
cmp
and
xor
and
popa
and
sbb
xchg
xor
and
cmp
or
jae
or
xor
or
xor
or
xor
or
xor
or
xor
or
jne
or
insb
clc
or
insl
mov
jne
or
jne
or
mov
or
xor
or
pop
or
ja
cmp
outsb
or
xor
add
mov
jb
or
xor
jne
pop
or
push
or
adc
push
dec
dec
or
push
push
dec
or
dec
push
mov
push
push
xchg
add
pop
push
mov
dec
push
orl
gs
xchg
or
test
jb
jg
outsl
push
push
or
or
push
pop
or
push
cmp
daa
push
xor
or
push
aaa
or
push
sahf
or
push
mov
or
lea
sub
or
jg
jnp
add
dec
imul
sub
arpl
daa
pop
and
add
dec
push
and
dec
and
xor
pop
mov
and
dec
aad
mov
pop
daa
and
dec
and
popf
pop
and
dec
inc
and
pop
aam
mov
dec
mov
and
pop
and
pop
push
and
mov
and
pop
shll
cs
add
dec
push
and
lahf
aaa
stos
and
xchg
aaa
mov
es
aaa
push
es
aaa
arpl
push
aaa
es
cmp
or
and
or
and
cli
aaa
and
sti
aaa
adc
or
pop
daa
std
cmp
cmp
cmp
nop
cmp
xchg
cmp
add
adc
and
cmp
and
cmp
and
cmp
and
aaa
cmp
add
push
aaa
add
aaa
sub
adc
daa
and
aaa
movsl
and
aaa
sub
push
push
or
xor
pop
push
aas
or
jae
or
jae
or
je
or
jb
or
jae
or
xor
mov
xor
or
xor
or
push
clc
push
rorl
rclb
rorl
aam
hlt
push
aad
add
push
repnz
xlat
dec
icebp
push
fcoms
ficoml
fisttpl
fcoml
fisttpll
ficoms
fisttps
loopne
xor
jo
pop
pop
jae
pop
pop
jb
push
pop
xor
sub
ds
cs
and
cmp
dec
push
push
xor
push
xor
push
xor
add
push
xor
xor
push
xor
add
addb
xor
add
lea
dec
xor
pop
xor
push
xor
inc
xor
inc
xor
arpl
cmp
bound
xor
cmp
sbb
push
sahf
push
sbb
mov
push
sub
xchg
push
es
adcb
jge
and
je
add
push
outsl
push
and
push
and
sub
push
sub
push
sub
push
sub
push
and
push
dec
push
daa
push
dec
push
scas
push
dec
push
mov
pop
push
mov
push
push
push
mov
push
push
lods
push
push
push
movsb
push
push
push
lahf
push
push
push
mov
push
push
mov
push
aas
push
mov
jmp
xor
in
xor
aad
xor
add
add
add
add
xor
push
daa
xor
push
adc
cmp
and
cmp
xorb
push
outsb
xor
push
pop
xor
push
mov
inc
push
cltd
xor
pop
xor
dec
xor
inc
xor
xor
push
xor
push
xor
push
xor
push
xor
add
dec
push
add
dec
push
or
dec
push
or
add
stc
add
cli
add
jmp
push
push
add
les
push
push
lds
push
push
push
mov
push
push
scas
push
dec
mov
pop
inc
js
xor
jne
xor
mov
xor
stos
add
mov
xor
subb
cmp
mov
cmp
add
pusha
insl
add
je
cmp
inc
data16
inc
cmp
inc
inc
cmp
inc
and
add
lcall
add
add
add
and
add
cmpsl
add
jle
inc
xorb
dec
pusha
addl
pusha
xor
or
add
inc
dec
add
inc
inc
add
inc
test
add
inc
stos
add
inc
sub
add
add
inc
sub
movsb
inc
daa
add
inc
xor
cltd
inc
and
mov
add
inc
sub
add
add
add
add
and
lods
inc
pop
add
inc
sbb
jno
sbb
jo
sbb
jae
mov
scas
and
clc
and
ljmp
xchg
cmpsl
int3
adc
lahf
int
mov
mov
adc
ja
adc
les
dec
pop
lds
inc
push
adc
dec
mov
adc
mov
adc
mov
adc
pop
mov
adc
icebp
adc
add
adc
decl
clc
in
test
sti
in
xor
fdivl
xor
int3
mov
xlat
les
xor
sti
out
adc
sti
notl
idiv
cmpsl
and
lods
and
push
add
add
and
or
lahf
and
adc
and
adc
and
adc
iret
adc
and
adc
and
adc
add
xor
add
dec
add
add
add
repz
add
add
add
in
add
in
add
push
cli
sub
push
cli
add
add
push
adc
push
adc
add
sub
push
std
add
push
aaa
sub
add
sub
add
sub
add
sub
add
sub
push
pop
add
push
mov
add
push
fwait
sub
push
daa
add
push
lcall
push
test
add
push
test
add
add
push
cmpsl
sub
add
push
fiadds
add
sub
push
mov
push
sub
push
xor
push
xor
add
imul
xor
push
xor
add
je
push
xor
add
js
push
xor
add
xor
push
xor
add
pop
sub
xor
add
jge
push
xor
add
jl
push
xor
sub
xor
add
push
xor
push
xor
add
xor
add
jo
push
xor
add
gs
xor
add
add
xor
enter
subb
add
push
xor
je
xor
fstl
add
xor
or
xor
push
jp
add
push
xor
push
push
add
push
xor
inc
cmp
add
push
xor
push
sub
add
add
cmp
add
push
xor
xchg
sub
add
push
xor
xchg
add
push
add
push
xor
js
xor
enter
pop
push
add
cmp
add
xor
add
aam
add
and
sub
add
push
xor
add
inc
add
pop
xor
add
inc
add
add
add
inc
adc
add
inc
add
push
inc
add
pop
xor
add
sub
add
pop
sub
add
and
add
jnp
add
and
inc
add
out
add
jne
add
out
add
inc
add
mov
add
push
dec
sub
push
mov
sub
push
lods
add
push
push
sub
push
jle
add
add
sub
push
pop
add
push
into
sub
push
insb
add
push
ret
sub
push
cmp
push
aam
add
add
push
shrl
push
xchg
push
shrb
add
add
push
xchg
sub
push
test
push
cwtl
sub
push
xchg
push
xor
add
push
cmp
add
add
push
adc
add
push
adc
add
add
push
xor
sub
add
dec
add
xor
sub
dec
add
xor
sub
dec
add
xor
add
shrb
push
xor
sub
test
push
xor
sub
and
xor
sub
or
sub
cmp
push
xor
add
leave
mov
push
xor
add
out
add
mov
add
sbb
add
add
add
inc
imul
add
jmp
add
jmp
jmp
push
xor
jmp
push
xor
jmp
pop
dec
daa
jmp
incl
jecxz
xor
mov
xor
jmp
lock
int3
mov
enter
in
jae
loopne
ja
mov
push
pop
or
add
addr16
mov
enter
movsl
xorb
jl
loope
ja
fstl
add
push
xor
jmp
cmp
add
cmp
add
sub
add
sub
add
clc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
add
push
xor
add
add
js
add
push
xor
add
xor
add
xor
add
pushl
ljmpw
outsb
jmp
ss
ds
inc
decl
dec
incl
push
es
sbb
incl
add
sub
and
fiadds
add
push
or
push
push
stc
inc
aad
mov
aam
push
scas
in
and
cmpsb
mov
lcall
lds
mov
and
xchg
stc
or
hlt
push
outsb
lods
and
data16
lcall
and
decl
and
pop
and
push
xor
add
jmp
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
call
push
xor
call
push
xor
call
dec
xor
call
dec
xor
call
dec
xor
call
add
dec
xor
call
dec
xor
call
dec
xor
call
jns
add
imul
add
cmp
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
clc
sub
add
call
sub
add
clc
sub
add
call
add
sub
add
test
add
mov
sub
add
test
add
js
add
js
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
out
mov
pop
add
push
pop
add
push
xor
inc
push
movsb
aas
inc
push
pop
add
add
push
adc
push
jmp
inc
push
pop
repz
out
push
sub
fs
orb
lahf
add
inc
shlb
mov
andl
push
loop
adc
ljmp
xor
fsubrp
adc
repz
or
fistpl
fsubr
xor
outsl
mov
dec
ja
cmpsb
mov
push
adc
mov
flds
add
into
xchg
pop
das
cltd
mov
in
sahf
xor
pop
out
cmp
jae
call
stos
xchg
je
loope
sub
cmp
pop
lock
daa
leave
ret
out
aas
loopne
xchg
enter
lea
mov
jno
dec
cli
mov
fidivl
scas
xchg
mov
cmp
in
sti
add
mov
xchg
inc
test
cli
ljmp
pop
stos
mov
xchg
jo
sbb
lods
pushf
repnz
leave
ret
push
das
lret
arpl
in
pushf
mov
jno
inc
lcall
mov
into
xorb
pusha
movb
inc
sbb
push
imul
cld
mov
jbe
mov
ss
dec
addl
inc
add
xchg
scas
jp
xor
push
imul
cwtl
lea
fdivs
xchg
test
pop
and
aaa
cltd
mov
int
cli
pop
jns
jmp
push
sbbb
sbb
or
ljmp
push
inc
in
movsl
testl
cmp
ds
add
add
add
add
mov
ljmp
sub
add
or
or
xchg
or
jne
push
out
stos
cmc
ljmp
stc
sti
arpl
clc
lret
mov
aas
sbb
loope
sub
cmp
cmp
jl
vpsrld
je
push
int
adc
add
add
add
add
jne
push
and
fwait
pop
inc
sti
xlat
imul
jnp
pop
fmuls
and
sub
inc
mov
jecxz
adc
pop
sub
sbb
sub
cmc
aad
es
pop
es
adc
clc
cs
sub
daa
inc
mov
push
pop
nop
sub
repnz
mov
and
add
cli
es
mov
add
mov
sub
fidivrl
lods
and
xchg
xchg
inc
pop
rcr
pop
mov
aam
xchg
gs
cmpb
xchg
mov
xchg
mov
xchg
test
jbe
push
aad
xor
jne
aaa
cmpsb
decb
jnp
xor
fbstp
mov
cmp
inc
add
scas
push
cmp
xor
dec
cmp
sub
cmp
xlat
cld
mov
in
mov
icebp
cmp
daa
lahf
cmp
pop
cmp
xchg
or
cmp
stos
inc
add
dec
loopne
mov
or
mov
cmp
nop
outsb
orl
xor
add
adc
mov
sbb
add
push
icebp
jbe
pushf
sbb
scas
std
aas
imul
aaa
jns
pop
pushf
insl
mov
xor
xor
xor
add
xchg
xor
int
jnp
cmp
ficoml
xchg
aam
mov
cmp
dec
add
xor
inc
xor
add
add
jge
jp
adc
scas
arpl
mov
add
mov
jnp
stos
enter
lds
jle
pop
iret
cmp
into
pop
jge
shl
test
into
enter
sub
xor
inc
test
sarb
sbb
in
jae
std
mov
cmp
fisubl
sbb
clc
add
mov
subl
or
add
mov
mov
inc
push
fstpt
dec
sbb
jnp
test
xor
push
or
sbb
inc
cld
mov
sub
sub
arpl
int
push
xor
shll
sbb
mov
int3
jne
in
shl
push
dec
in
xchg
mov
lahf
push
add
add
pop
push
adc
sbb
mov
aad
mov
or
pop
mov
pmaddwd
subl
push
mov
xchg
pop
ret
shlb
add
aaa
sbb
popf
inc
mov
ljmp
in
enter
fnstcw
pop
xchg
or
in
lea
and
add
cmp
loop
aaa
push
push
aas
mov
cmpb
inc
mov
add
loop
in
ss
adc
iret
sub
ds
arpl
insb
mov
out
add
xor
clc
add
adc
out
ds
or
aas
push
or
aas
add
cs
std
pop
subl
add
add
add
jb
sbb
data16
jmp
and
js
sbb
pop
js
mov
aas
loop
fistpll
idivb
xchg
fnstenv
push
mov
int3
cmpsl
jmp
int
popa
push
jne
pop
pop
xchg
add
pop
sti
imul
xchg
sti
xchg
inc
das
pop
pop
aam
jmp
sbb
add
je
push
push
push
pop
insb
pop
cltd
jg
dec
mov
push
add
imul
mov
out
cld
loope
lock
sub
fnstsw
jns
sub
dec
loope
cmp
jne
or
push
je
lods
das
cmp
cmp
jp
imul
int
add
arpl
movsl
test
adc
mov
push
cmpl
xor
mov
addr16
pop
in
pop
mov
push
fidivl
jnp
fcmovu
push
in
or
sahf
mov
jb
int
cmpsl
imul
and
inc
push
pop
add
movsl
gs
mov
lods
cmp
aam
ja
dec
sbb
js
repz
add
add
add
add
sub
jmp
jmp
pop
xlat
movsl
shlb
mov
mov
xor
fldenv
or
jb
or
rorl
insb
jns
xor
aas
add
jnp
hlt
stc
es
jp
shl
xchg
pop
and
adc
push
nop
popa
cmp
das
insb
push
fdivs
imul
imul
or
test
dec
jle
xchg
mov
repz
push
xor
imul
add
dec
xor
add
xor
pusha
push
xor
mov
add
push
xor
push
push
xor
add
das
add
subl
add
sub
add
add
push
sub
add
add
mov
add
add
add
add
and
str
ds
or
cwtl
mov
add
sub
ds
cs
mov
add
lods
mov
add
add
je
ds
sub
mov
cmp
add
sub
add
add
push
cmp
add
push
int
add
add
add
add
push
sub
push
push
fwait
mov
push
addb
xor
or
mov
push
mov
push
push
das
mov
push
adc
push
cltd
add
push
shll
adc
mov
push
stos
add
push
shll
push
push
sti
mov
push
test
mov
push
pushf
add
push
divl
add
mov
push
xor
add
xor
add
dec
mov
xor
push
xor
jbe
addb
xor
mov
xor
add
test
inc
xor
mov
xor
xor
add
lea
dec
xor
add
int
xchg
add
loope
jbe
dec
add
fnstenv
add
jo
int
push
xor
inc
xor
add
xor
xor
jp
xor
gs
add
push
inc
add
cmpsb
and
xchg
push
das
add
negb
add
out
add
negb
add
out
add
inc
add
mov
add
pop
add
push
inc
add
mov
add
add
mov
add
add
add
sub
and
and
sub
add
loope
add
aaa
add
push
sub
add
icebp
xor
add
add
add
add
adc
add
add
xor
add
ds
xor
add
mov
add
add
xor
add
xor
add
mov
add
mov
lldt
ds
xor
add
mov
add
xor
test
add
or
pushf
mov
add
add
add
push
jmp
add
push
push
stos
aas
push
xlat
add
or
sub
test
push
push
add
add
push
iret
test
push
xchg
add
push
ret
lods
aas
push
ds
push
mov
add
push
pop
lods
aas
push
push
add
push
push
lods
aas
push
repnz
inc
lods
aas
push
hlt
add
stos
aas
push
scas
add
imull
add
out
stos
aas
push
and
push
sti
stos
aas
push
push
add
push
add
outsl
xor
stos
dec
xor
dec
xor
stos
add
xor
dec
xor
add
xchg
stos
push
xor
stos
mov
aam
push
xor
jle
dec
xor
outsb
xor
cmp
xor
stos
dec
xor
dec
xor
stos
ds
add
xchg
stos
xor
add
popf
stos
push
xor
push
xor
add
icebp
stos
jle
lsl
add
jmp
dec
push
cmp
add
dec
sub
add
dec
inc
add
dec
cmp
add
sbb
out
sub
adc
add
add
add
in
add
sub
and
sbb
add
add
dec
sub
add
dec
sub
aad
add
ds
movsl
sbb
jmp
cmp
or
sbb
pusha
dec
and
cmp
push
xor
add
mov
or
clc
mov
or
clc
movsb
ds
das
pop
add
mov
adc
sbb
add
inc
mov
add
mov
add
jo
add
mov
xor
or
fsubs
add
ds
cs
add
movsb
ds
cs
add
movsb
add
das
ltr
mov
push
add
add
add
sub
or
mov
push
call
mov
push
cld
add
push
xchg
mov
push
mov
mov
push
roll
push
jge
aas
push
add
or
add
mov
push
es
push
inc
mov
push
filds
or
mov
push
jmp
mov
push
push
add
push
cmp
adc
push
sbb
push
lret
scas
aas
push
jnp
sqrtps
scas
aas
push
push
add
push
or
add
sbb
dec
xor
mov
xor
add
xor
add
xor
add
add
add
push
xor
add
xor
add
jne
ss
add
gs
xor
add
xor
mov
xor
add
cmp
add
mov
xor
scas
data16
add
aad
push
xor
xor
scas
inc
xor
mov
xor
mov
xor
sub
lahf
sbb
or
add
add
push
xor
add
sub
add
push
xor
xchg
fistps
add
push
xor
sub
push
cmp
std
mov
xor
add
push
es
popf
sbb
push
add
push
adc
dec
call
add
add
fcoml
add
push
sub
add
pop
add
push
inc
add
add
add
add
mov
cmp
or
dec
sub
add
add
sub
add
add
add
mov
cmp
add
mov
add
add
or
test
cmp
mov
sub
add
sub
add
mov
or
shlb
stos
xor
add
or
mov
xor
add
ds
xor
add
mov
add
mov
add
inc
mov
push
cmp
mov
push
sbb
adc
mov
push
mov
or
mov
or
mov
push
jmp
pop
push
xor
adc
mov
push
add
add
push
push
mov
push
int3
add
jne
aas
push
es
push
dec
mov
push
fadds
or
push
inc
add
push
daa
mov
push
and
mov
push
push
add
push
fwait
mov
push
xor
add
xor
mov
xor
add
xor
add
jmp
add
xor
add
leave
add
add
jmp
add
add
int3
add
xor
add
xor
add
jne
cld
das
pop
add
xor
add
or
inc
xor
add
das
pop
add
xor
add
xor
loop
add
xorl
jmp
add
es
xor
add
xor
add
xor
adc
push
inc
add
push
dec
add
push
je
jmp
mov
push
mov
add
add
add
mov
outsb
iret
mov
pusha
push
fists
test
pop
gs
fs
dec
jb
rclb
push
xor
lahf
fidivs
dec
mov
gs
mov
pop
shll
mov
gs
dec
jb
ret
inc
arpl
add
loope
jne
jecxz
dec
pop
xlat
inc
jb
repz
imul
add
dec
xchg
arpl
xor
add
push
sub
arpl
mov
lcall
bound
in
mov
inc
aad
inc
insb
int3
xchg
pop
outsb
les
fs
das
je
test
add
mov
das
push
add
inc
add
sub
add
dec
add
sub
add
sub
add
sub
add
add
sub
add
add
outsb
add
add
add
push
jmp
add
push
push
add
push
xlat
add
sub
outsb
push
cmc
add
in
add
testb
push
xchg
add
lea
push
push
xchg
add
jecxz
imul
add
mov
je
popf
add
push
mov
add
mov
insb
add
push
lods
add
jl
popa
push
push
gs
sbb
push
jge
push
push
leave
jbe
cmp
jbe
push
xor
lds
pop
sti
es
push
add
xor
add
xor
add
xor
or
push
xor
adc
jecxz
push
xor
push
xor
or
push
xor
out
mov
xchg
mov
add
xor
mov
xor
add
cwtl
ljmp
sbb
adc
roll
adc
push
add
xor
jns
add
in
cs
loop
cmp
je
xor
cs
pop
push
adc
inc
add
mov
dec
popa
std
test
dec
jo
xchg
and
add
inc
jo
jge
jo
pop
dec
dec
aam
dec
gs
ss
jo
cmp
xor
dec
outsl
lea
pop
jae
xor
xor
cmpsb
cs
jo
stc
pop
dec
jl
dec
gs
dec
outsl
inc
out
pop
jae
push
xor
es
inc
jo
cmp
and
addr16
push
gs
gs
add
add
into
sub
out
pop
mov
aaa
out
ljmp
add
cmp
mov
inc
add
cmp
iret
cmp
lea
aas
add
sub
aam
inc
add
inc
add
sub
inc
add
inc
add
cmp
sub
sub
and
aas
add
push
inc
add
xor
add
add
add
push
or
add
push
jne
insb
push
jne
add
dec
inc
mov
dec
outsb
cmpsb
es
mov
or
test
cmp
cmp
push
xor
add
add
xor
push
icebp
xor
push
icebp
xor
push
std
imul
lea
icebp
je
push
mov
add
push
fiaddl
add
push
fildl
push
ret
or
jno
or
pop
rorl
pop
dec
fs
das
pop
js
xor
loop
adc
xor
gs
dec
and
xor
add
stc
xor
xor
nop
xor
nop
xor
nop
xor
nop
xor
xor
xor
aaa
nop
xor
xchg
xchg
xor
add
nop
xor
xchg
xchg
xor
aaa
adc
jle
adc
jnp
adc
pop
mov
xor
adc
pop
mov
xor
adc
cmp
adc
add
push
xor
xor
outsl
push
daa
add
pop
notb
pop
loop
add
dec
adc
cmp
add
push
xor
or
add
dec
adc
leave
push
adc
sbb
add
push
jb
add
cmpsl
inc
cs
adcl
imul
iret
popa
push
outsb
fstl
xor
lods
imul
cmp
jb
sub
gs
jb,pt
mov
pop
add
cmp
test
pop
and
mov
jae
jge
imul
inc
and
inc
aas
and
pop
pop
je
pop
pop
add
or
add
js
arpl
adc
xchg
cmp
and
push
inc
and
jbe
and
sub
add
pop
xor
sbb
and
adc
xor
add
xor
clc
das
add
xor
add
das
add
test
add
test
add
mov
xor
push
adc
push
add
dec
push
inc
push
pusha
push
inc
add
push
adcl
push
and
add
add
push
jb
push
push
pusha
add
push
adc
add
push
sub
mov
add
inc
push
xchg
adc
push
add
push
jl
push
inc
mov
es
inc
mov
pushf
add
push
fwait
dec
push
cwtl
fwait
pop
add
sub
inc
sbb
add
push
xchg
inc
push
add
push
xchg
add
push
xor
dec
cld
arpl
add
pushf
dec
adc
dec
daa
jns
pop
push
xor
push
push
xor
sbb
xor
inc
adc
dec
push
xor
push
sahf
pusha
sbb
insl
and
xor
push
xchg
dec
lahf
je
add
and
xchg
add
xor
xchg
jns
add
xor
add
add
stos
dec
andl
push
nop
insl
movsb
add
mov
and
xor
stos
or
movsb
pcmpgtb
mov
sbb
jmp
adc
jmp
adc
adc
adc
add
pop
outsb
inc
out
inc
imul
pop
js
js
outsl
dec
mov
pop
outsb
jmp
add
mov
inc
sub
adc
test
cli
jo
jb
jno
arpl
xchg
push
outsb
into
push
xor
aam
push
jb
jle
add
push
outsb
add
dec
gs
push
insb
imul
push
outsl
jae
sub
add
pop
je
adcb
lret
push
insl
das
push
inc
je
add
xor
das
ja
ds
push
insb
popf
sbb
xchg
sbb
add
scas
add
scas
add
cmp
add
add
xor
add
dec
add
dec
add
cmp
ret
xor
add
add
push
adc
aas
push
xchg
xor
inc
push
mov
mov
rcll
add
push
scas
mov
sbb
inc
push
call
add
push
jmp
inc
push
pop
xchg
inc
push
sahf
cmpsb
inc
push
stos
cmpsb
inc
push
stos
cmpsb
inc
push
dec
cmpsl
inc
push
cmpsl
inc
push
dec
cmpsl
inc
push
lods
das
inc
push
push
test
push
add
add
push
imul
add
push
aaa
add
push
xor
fildl
jo
iret
add
lds
add
jo
aad
cmp
add
xor
add
xchg
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
push
xor
daa
jnp
xor
pusha
push
xor
push
xor
arpl
je
data16
cmp
pop
add
je
leave
add
sub
push
add
cmp
je
and
dec
cmp
fsubl
insl
mov
xor
scas
xor
shrb
les
outsl
mov
cmp
xchg
and
mov
add
xor
iret
push
cmp
jno
cmp
jmp
dec
xor
mov
jo
in
jo
sti
or
stos
add
add
outsl
add
push
dec
add
dec
pop
add
push
add
push
push
add
push
sub
add
insb
add
add
xor
add
aas
add
sub
add
xor
add
jo
int3
xor
shll
add
xor
aad
mov
pop
inc
add
sub
add
sub
add
sub
add
insb
add
dec
inc
push
popa
je
sub
add
dec
inc
push
xor
pop
add
inc
dec
xchg
xor
arpl
ret
pop
je
xchg
aas
dec
xchg
in
outsl
je
ljmp
push
inc
add
jg
inc
add
push
pop
loopne
push
les
jbe
flds
add
add
iret
or
leave
or
call
inc
push
pusha
adc
push
daa
adc
out
inc
push
clc
decb
sub
shlb
mov
pop
add
push
adc
inc
scas
mov
inc
xor
add
mov
je
and
push
lock
sbbl
add
add
add
and
push
lock
js
xor
int3
les
mov
lock
sbb
dec
lret
xor
and
cmpsb
xorb
dec
lret
adc
and
xchg
repnz
sub
adc
call
xor
adc
xor
push
mov
popa
sbb
pop
and
xchg
js
xchg
add
dec
xor
adc
xor
cmp
add
dec
je
adc
add
push
pop
add
push
dec
add
push
std
lcall
push
xor
lods
push
insb
add
push
push
add
push
push
add
push
push
add
push
dec
add
push
ja
mov
push
push
jnp
dec
add
xor
stos
push
push
add
add
add
push
add
add
push
add
mov
add
inc
add
jae
sub
xor
sub
cmp
call
sub
add
sub
add
popa
add
add
incb
pop
dec
in
sub
add
dec
inc
add
inc
add
sbb
shll
add
inc
add
fs
add
sub
add
sub
add
sub
add
sub
sub
push
jne
gs
jbe
gs
leave
add
push
das
add
push
add
push
cmp
add
add
push
pop
mov
inc
push
sti
lahf
inc
push
sti
lahf
inc
push
lahf
inc
push
sti
lahf
inc
push
sahf
lahf
inc
push
ficomps
add
add
add
add
add
nop
test
inc
push
cmpsb
add
xchg
add
push
and
mov
inc
xor
xor
aaa
fnstenv
xor
add
push
fwait
dec
inc
xor
add
push
test
cld
adc
or
nop
xor
push
cmpsb
outsl
pop
scas
sub
dec
pop
mov
jmp
push
jle
adc
add
cmp
add
xor
push
xchg
bound
jne
sbb
addr16
pop
gs
jmp
add
test
adc
push
push
lods
inc
push
pusha
cwtl
push
add
push
pop
rorb
mov
push
mov
dec
sbbb
xchg
jae
inc
jp
in
add
cmp
and
xor
jl
das
jmp
add
push
xor
inc
imul
cmp
inc
js
stos
cmp
ss
sub
inc
xor
dec
sub
jl
push
adc
sub
add
sbb
popa
lret
xor
aaa
dec
imul
aas
jno
push
xor
movsl
push
add
add
add
mov
add
mov
push
and
add
mov
xor
add
inc
add
and
add
and
inc
add
xor
add
jl
adc
jb
inc
mov
jmp
clc
bound
out
out
add
imul
icebp
mov
xor
shl
cmp
jl
cmp
call
imul
add
mov
cmp
xor
std
ljmp
mov
push
push
pop
lea
inc
add
jg
jp
add
jns
lea
inc
add
into
shl
shl
add
dec
movsb
push
jecxz
leave
das
add
or
jnp
aam
xlat
inc
push
dec
ljmp
dec
ljmp
pop
add
fcmove
das
inc
add
dec
out
xor
in
sub
ja
or
filds
push
stos
jae
push
shrb
inc
ret
add
add
repz
outsb
aam
xor
mov
push
test
lds
jno
or
in
jle
iret
test
inc
inc
outsl
jmp
inc
push
ljmp
fcoms
les
add
add
lock
fisttpl
mov
adc
cmpsl
jecxz
jmp
int3
out
mov
mov
adc
icebp
sub
lret
mov
cmp
pop
inc
push
mov
jmp
in
cmp
xor
cld
xor
inc
jmp
push
test
gs
sbb
add
inc
and
test
add
add
add
push
out
jg
dec
lds
push
pop
mov
dec
sbb
mov
sbb
mov
pop
sub
jg
or
inc
jmp
loope
decb
adc
or
xor
in
les
push
cmp
jmp
pushl
xchg
incb
pop
lds
outsl
gs
pop
imul
and
add
sub
out
jne
add
jmp
aad
jmp
xor
pop
mov
and
xchg
repnz
jle
idivb
pushf
adc
dec
pop
movzbl
ljmp
aad
jmp
lds
add
outsb
cmp
jb
daa
retw
pop
mov
jnp
adc
inc
adc
test
std
incl
xchg
add
aad
call
ljmp
xlat
roll
inc
push
or
loope
inc
add
roll
inc
push
or
aad
inc
add
jbe
mov
jp
inc
jle
push
iret
fldl
add
aas
or
jmp
push
xorl
std
es
call
add
ds
in
incl
push
or
inc
mov
in
mov
or
add
insb
flds
orl
cmp
insl
push
test
test
cmpsl
stos
xor
call
jb
push
dec
leave
dec
imull
or
add
icebp
and
add
sub
pop
sbb
cmp
call
add
and
repnz
cmp
orl
sub
mov
pop
stos
sbb
pop
jle
popa
shr
fsubs
sub
fnsave
and
cmp
insb
in
jbe
pop
add
mov
not
jbe
jmp
int
add
es
inc
mov
daa
mov
out
or
lods
mov
je
fnstenv
cmc
imul
add
cmp
xor
negl
or
enter
mov
call
ss
dec
dec
sub
ljmp
cs
mulb
stos
cmc
adc
jns
jo
mov
add
inc
or
push
flds
mov
xor
outsl
or
xchg
xor
jo
and
mov
mov
popa
add
ljmp
subl
mov
lds
repnz
mov
in
jae
cmc
call
jmp
cmc
call
add
and
add
ret
roll
test
push
mov
aam
lret
sub
test
inc
mov
add
sbb
jmp
mov
mov
push
add
xchg
outsl
and
scas
ror
push
jg
cmc
xchg
xchg
push
mov
ret
dec
mov
jae
ljmp
jo
call
aas
inc
call
inc
jg
adc
mull
mov
mov
push
call
mov
cli
in
dec
icebp
mov
push
leave
jle
popf
int3
pop
test
adc
add
fiadds
jecxz
pop
xor
jg
cmp
xor
jno
add
lock
ret
jb
sarb
test
dec
pusha
shld
test
fcom
int3
push
cmpl
sbb
xchg
xchg
adc
in
in
push
pcmpeqw
test
outsb
dec
sub
add
jne
mov
add
cs
or
arpl
and
jae
jne
sbb
add
sub
add
push
addb
js
pop
stos
inc
xor
push
pusha
push
pop
daa
mov
mov
adc
test
cltd
and
bound
mov
nop
add
scas
fs
add
add
add
push
pop
xor
sbb
lea
call
cmp
and
add
add
adc
mov
clc
pusha
fwait
sub
add
outsl
leave
ret
pushl
push
mov
and
mov
and
xlat
sbb
adc
mov
je
or
clc
mov
push
sub
inc
test
jne
add
push
or
dec
int
lock
insl
add
pusha
int
add
data16
and
push
fwait
jb
sbb
int
push
mov
mov
insl
add
and
pop
sbb
sub
add
ret
hlt
xchg
enter
inc
add
jecxz
imul
out
repz
xchg
sbb
mov
inc
ret
cmc
aas
push
out
lds
das
mov
jmp
aas
push
cmpsb
out
repz
sbb
shrb
insb
sub
add
mov
sbb
push
and
sbb
fdivrl
mov
lahf
sahf
notb
bound
sub
dec
add
add
xchg
xor
dec
xchg
xor
sub
aad
xchg
xor
add
push
sahf
testl
cwtl
fcoms
pop
adc
xor
inc
push
imul
pop
sbb
adc
mov
inc
push
sarl
fcoms
xor
lds
inc
bound
cmp
repz
xchg
cmpsl
xor
sahf
cmpsl
and
ficompl
push
xchg
int
adc
mov
push
mov
popf
cld
push
xor
fsin
push
rcrl
lods
mov
out
je
fs
and
sub
jmp
xchg
xor
xchg
and
push
repz
mov
or
mov
fst
sub
push
cmp
dec
push
cmp
aaa
add
aad
or
or
cmp
cmp
setl
pop
inc
aas
jne
test
int
push
add
cmp
xor
and
mov
std
je
mov
or
lea
push
mov
mov
dec
outsb
leave
ret
push
mov
arpl
inc
cmp
adc
add
imul
aas
mov
adc
xchg
adc
xor
xorb
add
lea
std
idiv
call
hlt
jae
and
pop
or
adc
call
mov
push
aas
lahf
sti
dec
scas
xchg
add
xchg
popl
xchg
sti
ss
adc
mov
rolb
insb
mov
shlb
andb
gs
xor
mov
adc
push
add
inc
xchg
inc
xor
or
ficoms
ret
jae
sbb
push
and
push
dec
xor
cmp
popl
cmpsl
xor
jg
or
jnp
add
jecxz
lea
inc
add
xor
inc
xor
pop
inc
mov
push
mov
je
imul
add
add
add
jnp
int
les
mov
cmp
cmp
sub
fstp
test
push
push
stos
cmp
pop
scas
idiv
sub
mov
fisttps
stos
hlt
adc
push
xor
insl
cmp
xchg
sub
and
or
xor
cmp
mov
ficompl
mov
add
add
add
sahf
stos
push
xchg
ljmp
xchg
push
sbb
jmp
dec
mov
cli
and
mov
je
cmp
fiadds
pop
fistl
push
movsb
jbe
fsubs
lock
std
jmp
xor
popf
test
lcall
add
lret
xor
stos
es
push
insb
pop
cmp
test
xchg
inc
lock
adc
test
cmp
aam
mov
sbb
jg
lds
imul
push
sti
aaa
mov
shlb
mov
icebp
imul
mov
mov
cltd
out
mov
out
cmp
add
insb
push
or
jl
push
call
subl
in
sub
divl
mov
fcmovnb
add
lcall
outsl
or
push
push
mov
cmp
cmc
cmp
jne
xchg
adc
add
push
je
push
out
das
xor
inc
adcl
pop
jle
or
push
xchg
cli
dec
adc
add
ffree
push
lret
clts
xchg
test
pop
and
cmpl
dec
or
dec
xor
add
lahf
xchg
adc
sub
add
push
inc
int
dec
enter
xor
xchg
in
adc
inc
add
outsl
orb
lret
xor
stos
or
fsin
out
cwtl
add
fisubrl
pop
sbbb
insl
imul
aad
inc
xor
push
cmp
shlb
dec
sbb
xchg
xchg
out
add
call
aas
pop
inc
push
add
inc
push
mov
pop
shll
dec
lea
push
dec
lea
push
jns
cmpsb
push
mov
dec
xor
xchg
sbb
jg
xor
add
and
call
xchg
cmpsl
adc
mov
cmp
aam
mov
push
add
nop
in
xlat
call
xor
add
cltd
sbb
pusha
test
mov
jb
jge
push
inc
cmp
mov
cmp
push
push
mov
lds
and
adc
je
imul
icebp
xlat
jmp
sbb
insl
add
jle
jmp
ret
repz
sbb
addl
add
add
add
xchg
loopne
sub
test
jae
rclb
rcrb
push
add
mov
orl
jl
arpl
push
lods
inc
call
jns
test
les
jne
lods
inc
hlt
or
test
les
pushl
jle
call
sbb
push
mov
xchg
lea
add
stc
xor
jne
xchg
test
jmp
cltd
adc
inc
and
push
sub
in
out
in
add
xchg
mov
push
imul
cmp
ljmp
test
xor
xor
add
jb
daa
push
lea
retw
push
or
inc
icebp
addr16
xlat
add
pop
and
push
add
jg
push
nop
adc
pop
add
fisubl
add
add
mov
sbb
add
xchg
add
push
fcomps
shll
xchg
xor
in
sbb
add
xor
ret
shrb
pop
hlt
lock
cmp
xlat
outsb
std
sbbb
jmp
add
jmp
add
loopne
pusha
mov
or
outsl
adc
and
outsb
testb
push
push
sub
add
mov
sbb
in
dec
sbbl
xchg
adc
push
jmp
stos
andl
cmp
dec
pop
xor
cmp
outsl
in
sbb
add
repz
push
xor
orl
movsb
mov
push
xchg
dec
adc
and
add
mov
add
stc
push
cli
mov
ss
push
and
and
movsl
pop
and
popf
cmp
ficoml
xor
out
call
mov
pop
sub
mov
and
and
inc
jle
and
dec
push
jb
sub
sahf
and
xor
fldln2
xchg
add
dec
cli
add
pop
add
pop
mov
add
sub
clc
push
in
pushl
add
xchg
testb
xchg
pop
push
mov
sub
mov
sti
mov
cli
mov
mov
inc
sahf
mov
dec
mov
add
mov
add
ja
mov
ret
mov
mov
push
decl
mov
add
add
and
push
push
jp
shll
add
aaa
xchg
lds
xchg
add
jns
addb
push
in
push
xchg
adc
mov
pop
add
addw
inc
and
jl
push
add
cmpsb
push
sbb
jg
les
call
jmp
xor
dec
outsb
in
sbb
roll
mov
jg
les
scas
push
or
pop
or
in
add
mov
ficompl
and
mov
mov
fwait
jmp
in
pop
xor
lret
add
push
xor
add
jle
nop
pop
dec
jge
sub
in
je
cmpsl
xchg
push
dec
push
xor
lret
xchg
add
sbb
jmp
add
stos
dec
iret
ja
add
lahf
pop
push
mov
jmp
add
sbbl
lahf
add
add
push
xor
pop
adc
xor
pop
pop
lahf
adc
sti
pop
add
sub
push
add
add
ficoms
push
sub
ret
cmc
int
sti
sahf
lods
inc
xor
add
add
add
or
jne
notb
dec
jge
stos
jl
push
xor
push
push
xor
loope
add
xchg
push
xor
out
sbbb
jb
daa
cli
push
and
mov
push
xor
add
push
clc
xor
je
sbb
xor
mov
pop
jmp
mov
and
add
xor
push
add
mov
mov
call
mov
decl
mov
xor
pop
les
cmp
xor
mov
je
incb
push
jg
enter
test
push
push
lea
jnp
add
push
mov
xchg
add
add
add
mov
inc
dec
enter
inc
xor
cmpsb
adc
xchg
cmpl
jecxz
pop
adc
decl
add
hlt
sbb
push
and
mov
decb
insl
pushl
inc
add
dec
inc
xor
and
into
adc
cltd
inc
add
aam
test
ljmp
add
stc
test
rorb
mov
jb
fldt
sbb
mov
push
mov
iret
das
mov
adc
lock
mov
adc
popf
push
mov
inc
xchg
icebp
xor
or
xor
add
adc
negb
ljmp
add
iret
cmp
inc
sub
jae
xchg
push
add
jns
jmp
into
sbb
inc
test
add
inc
lea
jmp
sbb
lcall
adc
sbb
cmp
sub
popa
sub
push
jg
xor
lea
pop
clc
pop
pop
imul
adc
mov
xchg
add
cmp
scas
enter
add
iret
lds
out
xchg
xchg
and
and
lret
in
cmp
cwtl
cmp
inc
pop
mov
or
xlat
mov
sbb
psrlq
or
cmp
lods
sbb
jecxz
add
out
pop
or
insl
sbb
pop
je
in
push
loope
in
ret
or
add
xchg
imul
repz
sbb
test
in
addr16
bound
jp
test
pop
dec
sarl
rcrb
cwtl
in
push
dec
test
lods
sbb
sbb
push
rcll
lods
sbb
push
mov
xorl
cmp
addr16
sub
loop
add
lds
jns
dec
shrl
mov
repz
mov
and
jno
cmp
inc
or
lret
test
fidivrl
enter
stc
sbb
in
adc
test
lcall
fadds
push
push
xor
mov
lods
cmc
adc
repnz
add
cltd
sti
pop
pop
lock
xor
or
add
fs
jns
ret
lret
or
gs
cli
inc
push
movsl
adc
movsb
ror
xor
out
xor
inc
sub
dec
xor
or
push
pop
stos
pop
shr
psrld
out
stos
cmp
out
test
sub
lahf
lds
popa
dec
iret
out
call
add
add
add
add
sbb
stc
scas
inc
push
add
pop
int
sub
stos
ljmp
cltd
outsb
inc
push
push
shrb
ret
std
rcr
je
or
mov
mov
jmp
movsl
jl
out
ret
in
mov
out
lcall
lea
out
inc
xchg
je
adc
and
add
out
adc
push
lods
mov
mov
jl
mov
stos
ret
xchg
cmpsb
cwtl
sbb
insb
jle
dec
adcl
push
sahf
adc
cmp
incl
mov
push
aam
test
call
pop
out
incl
mov
dec
jo
ljmp
pusha
xor
sbb
add
add
add
add
js
sub
clc
xchg
ljmp
mov
cmp
es
cmp
add
mov
adc
or
inc
movsl
add
adc
cmc
jne
cmp
jmp
lods
jnp
mov
xor
dec
or
es
out
jecxz
add
sarb
sbb
add
and
rolb
xchg
push
mov
test
add
add
notl
dec
cmp
add
push
add
jae
or
and
out
xor
push
mov
movb
mov
jle
call
fildl
jg
mov
mov
xor
add
test
call
cs
add
aad
sti
mov
data16
ljmp
jp
daa
push
pop
cmpsl
test
xor
cmp
mov
push
test
aam
xchg
pop
pusha
inc
xchg
mov
mov
jp
mov
jge
das
jmp
out
xor
adc
jmp
jge
add
xor
jmp
or
push
sub
push
xor
pop
and
call
ljmp
push
sub
push
push
decb
fldt
dec
imul
test
push
movsl
mov
or
incb
scas
lock
stos
insl
dec
adc
mov
call
add
fldl
lds
xchg
pop
push
outsb
mov
pop
add
call
das
test
cmpsl
pop
mov
test
push
push
js
inc
ret
ljmp
insb
adc
incl
push
xorw
jae
sub
jge
inc
shlb
mov
pop
orb
das
add
sbb
sbb
add
add
add
add
das
add
andl
cs
cmpsb
in
add
das
lea
outsb
sub
inc
mov
clc
mov
mov
cmp
mov
addl
fcmove
fidivl
xchg
test
cmpb
fld
mov
ret
sti
mov
mov
mov
pop
es
xchg
mov
mov
les
repz
mov
mov
jne
add
push
jbe
xadd
pop
dec
push
mov
dec
call
dec
adc
cmp
rclb
je
push
lret
test
mov
stc
mov
pop
orl
dec
or
je
add
mov
xorl
pop
sub
mov
jmp
insb
pop
out
or
dec
sbb
push
mov
jmp
imul
pop
shrb
mov
test
pop
xchg
sti
popa
mov
cli
sbb
and
imul
push
call
inc
push
sbb
ret
fiaddl
movsl
cmp
jns
in
aaa
dec
push
mov
popf
cmp
ret
cmp
push
imul
add
add
adc
sti
xchg
xor
sbb
call
pop
xlat
insl
pop
or
and
cmp
test
or
or
add
outsl
das
push
jle
sub
fdivl
ljmp
shl
mov
inc
lock
sbb
add
hlt
mull
xor
jns,pn
mov
incl
in
add
jp
xor
push
loopne
add
jl
mov
jp
xor
mov
je
sub
or
daa
lock
xor
rclb
inc
rorb
xchg
sub
sub
push
iret
mov
adc
iret
dec
or
jne
adc
test
add
out
mov
mov
cmpb
add
add
repz
add
push
jmp
adc
push
mov
mov
add
pop
push
les
mov
push
mov
lcall
mov
xchg
cltd
dec
cmp
pop
cmc
hlt
cmc
fsubp
or
arpl
test
cltd
sub
cwtl
add
fsubr
mov
or
cltd
add
add
add
add
lea
testl
add
and
ss
jge
add
ret
jae
jae
push
mov
cwtl
sub
push
xchg
ret
xor
rolb
inc
push
mov
shlb
call
cmc
in
xchg
pop
or
add
lock
pop
lret
mov
xor
add
add
out
xchg
int
mov
mov
call
inc
push
clc
sarl
cld
inc
jg
cltd
xchg
jge
push
sbb
xor
je
lock
add
lret
push
rcrl
sub
xor
adcb
push
inc
add
add
jne
pop
enter
out
cld
xchg
pop
cwtl
lret
xchg
push
xor
jmp
add
imul
out
add
xor
add
bound
jmp
fxch
jae
insb
mov
pop
js
pcmpeqd
xor
popf
add
in
jne
je
ja
push
add
xchg
dec
ret
mov
lret
fstpl
adc
inc
lock
mov
aam
mov
add
or
add
push
test
int
mov
or
data16
call
jnp
std
jne
pop
add
and
adc
das
test
jl
test
dec
or
mov
mov
in
pop
pop
xor
ret
push
mov
mov
clc
cmp
push
add
das
push
push
push
je
inc
js
notl
mull
adc
idivl
push
dec
lea
cltd
push
lea
insb
lcall
inc
mov
and
add
cmp
push
sbb
xchg
dec
xchg
add
mov
imul
aam
ss
fists
rcpps
lea
subl
and
sub
add
add
add
mov
je
add
push
push
xchg
cmpl
adc
push
jmp
inc
push
xor
data16
adc
xor
inc
push
mov
pop
push
mov
xchg
rcrb
mov
adc
mov
xchg
pop
mov
cmp
negb
call
rolb
add
jo
push
xchg
call
add
add
sub
test
mov
and
add
cmp
mov
add
mov
scas
jl
dec
add
pop
adc
adc
adc
sub
sub
lods
or
pushl
repz
push
jecxz
lea
add
mov
add
cmpsl
loop
mov
mov
loopne
lds
in
sub
mov
xchg
lock
int3
cld
mov
dec
je
adc
jmp
fnstenv
dec
xchg
inc
les
sub
test
adc
std
lcall
adc
pop
ds
cmc
call
add
xchg
sub
test
enter
lret
push
dec
sarb
pushl
jle
data16
or
and
mov
jne
ljmp
call
pop
push
mov
pop
cmp
jb
cli
xor
push
inc
fdivrs
pushf
xor
add
push
push
enter
imul
add
mov
push
mov
inc
dec
mov
imul
and
mov
and
add
add
mov
jb
xorb
inc
cld
jle
pop
es
decb
xor
dec
push
cltd
sub
fwait
adc
lock
lods
std
out
xchg
stos
dec
lcall
sub
in
inc
inc
gs
jne
add
mov
pop
stos
xchg
jp
xlat
pop
add
dec
xor
lret
mov
imull
add
mov
cmp
push
sbb
pop
jo
inc
push
out
pop
cwtl
jno
add
dec
test
mov
add
bnd
mov
push
stos
sub
aad
call
pop
dec
xor
xchg
xor
jle
add
xor
add
inc
sbb
push
sti
cmp
jnp
add
mov
xor
pusha
mov
xor
ret
cmpsl
add
jnp
sub
jmp
sarb
sbb
bound
incl
inc
push
mov
mov
cld
or
push
sub
mov
jge
fcoml
repnz
out
jmp
cmp
add
subl
gs
ljmp
sub
adc
xor
les
js
xchg
xor
adc
mov
out
and
mov
and
cld
or
push
sub
fst
jl
add
les
mov
sub
push
xor
cmp
sub
test
xor
add
or
icebp
jmp
add
sub
adc
icebp
pushl
xchg
idiv
das
mov
ljmp
decl
inc
adc
mov
and
ljmp
pop
jle
push
into
push
jns
sub
mov
push
inc
mov
pop
inc
add
fs
adc
inc
add
add
cltd
jg
inc
addr16
cmpl
inc
add
in
push
mov
scas
inc
push
and
add
dec
push
cmc
adc
incb
jg
lds
and
cmp
add
decl
add
xchg
sbb
add
mov
test
test
add
in
push
scas
mov
mov
add
inc
xor
inc
push
mov
push
out
call
repnz
sti
out
xorb
inc
push
xor
add
ficompl
add
rorb
adc
stos
dec
lret
push
and
push
add
add
ds
add
lock
inc
push
sti
stos
test
push
enter
add
xchg
xor
sahf
jnp
add
or
add
xor
pusha
jg
aam
push
inc
jmp
insl
mov
hlt
mov
inc
jmp
shl
sti
sbb
or
fucomi
pushl
push
mov
pushl
ret
xchg
push
xor
mov
mov
sub
inc
gs
ja
jb
add
std
aaa
rcll
xor
and
pop
mov
mov
push
dec
ljmp
jecxz
jae
bound
out
xchg
xor
add
jb
mov
jno
ror
roll
inc
and
out
sbb
mov
mov
add
cmp
add
sub
fsts
movsl
in
inc
add
js
imul
add
inc
mov
jne
mov
std
in
jb
cmp
or
cmp
push
jnp
adc
mov
jb
cwtl
xor
adc
xor
push
jne
jns
je
fnstenv
adc
push
pop
mov
jl
scas
arpl
fs
mov
pop
add
fcmovu
fstpt
add
add
add
pop
mov
add
jge
jl
xor
add
mov
cmp
fnstsw
mov
lret
pop
pop
lret
jge
mov
pop
ljmp
les
add
push
out
or
jnp
push
pop
inc
add
std
imul
pop
inc
push
mov
popf
cmp
sbb
lods
add
out
pusha
push
mov
stos
mov
push
imul
mov
jle
incb
xchg
add
mov
ret
and
mov
pop
movsl
mov
add
xchg
scas
jne
xchg
jl
fisttps
outsl
fs
xchg
pop
jle
jl
pop
cli
inc
push
or
mov
or
testb
ljmp
ds
xor
pop
cmp
xchg
enter
push
test
shll
fnstcw
cmc
stos
push
rol
notl
or
xchg
pop
repz
jmp
xor
cwtl
mov
iret
lahf
adc
pushl
push
aaa
cmp
sti
push
cmp
add
add
add
add
aaa
cmp
fsubl
cmp
fdivrl
cmp
aad
rolb
xorl
rol
pop
leave
push
add
insb
and
pusha
mov
jb
imul
idivb
or
mov
out
data16
incl
xor
test
aaa
add
clc
jmp
or
add
jae
pushl
int
add
out
cli
xor
mov
in
jo
adc
sbb
jmp
mov
jae
incl
mov
push
or
je
sub
add
bound
xchg
mov
ljmp
into
xchg
decl
out
cmc
xchg
mov
incl
sbb
leave
add
loope
inc
push
call
xchg
mov
inc
push
filds
pop
test
cltd
add
ja
ret
lahf
subb
inc
or
call
add
mov
test
sahf
jmp
add
xchg
add
outsl
aam
mov
call
lods
sub
xor
pop
test
test
scas
add
mov
and
jmp
mov
out
call
ret
xchg
js
mov
mov
jmp
push
pop
jecxz
xchg
das
jmp
test
xor
cld
int3
stos
call
lock
adc
out
cli
sub
les
test
imul
aad
subl
pushl
sarb
push
loopne
cld
add
sahf
sbb
je
mov
cmp
push
mov
jmp
mov
xor
push
mov
lock
decb
push
es
push
fnsave
jmp
cmpsb
addb
shl
sub
adc
push
das
je
int
mov
notb
pop
aas
add
add
sub
addb
and
add
push
push
xrelease
adc
push
incl
cmpl
sbb
push
adc
add
sub
mov
andl
call
jnp
or
pop
mov
push
pop
xor
mov
inc
add
test
in
add
and
mov
nop
xor
js
scas
mov
sub
mov
lcall
xor
inc
or
rolb
pop
push
push
mov
leave
add
adc
mov
shrb
pushf
sub
mov
xchg
sbb
pop
push
inc
add
or
cld
negb
push
call
add
add
add
cltd
lcall
adc
dec
mov
mov
in
push
mov
int3
ret
lods
scas
adc
sbb
addr16
inc
add
add
cld
mov
push
lcall
push
adc
push
jns
cmp
xor
push
push
or
add
imul
jne
sahf
outsl
and
ds
bound
add
jae
sbb
movsl
imul
sti
mov
lock
jl
je
aas
jmp
and
test
jbe
out
xor
xorb
subl
mov
jle
je
test
insb
lcall
push
xor
cmpsb
fiaddl
sbb
push
or
in
into
jl
jmp
add
add
add
fistl
mov
sahf
ljmp
jno
xor
hlt
and
cmp
jge
mov
dec
inc
shl
add
push
push
add
push
das
call
mov
rolb
stos
jb
jb
mov
add
mov
out
push
xor
and
add
cmpsl
sbb
clc
bnd
test
add
movb
add
aas
or
lods
lret
in
imul
jno
imul
add
js
adc
or
add
shll
adc
jmp
mov
mov
pop
outsb
das
mov
push
or
hlt
mov
mov
or
aas
clc
mov
sbb
stos
xor
sarb
add
push
push
push
and
add
test
sbb
cmpl
cmpsb
jnp
push
adc
sar
mov
ljmp
xchg
fsubs
add
cmp
adc
or
jg
dec
add
bnd
inc
push
mov
movsl
ss
sti
fstpt
push
or
movsl
je
loope
sti
push
cmp
add
push
or
cmpsb
adc
ja
add
pop
test
mov
movb
dec
aas
add
mov
sbbl
mov
in
movsb
out
call
add
ja
aad
mov
fs
xor
fwait
je
jmp
loopne
xor
add
jae
push
pop
out
call
add
pop
addb
ficoml
add
inc
jae
movsl
mov
jae
and
gs
jae
scas
lea
jmp
push
mov
test
jae
add
xor
rolb
inc
xlat
popa
lahf
test
add
addr16
scas
sub
jmp
sub
jmp
xor
gs
xor
fs
jb
faddl
jmp
push
xor
jmp
add
add
lods
sti
pop
insb
es
adc
push
ja
jmp
lods
mov
call
add
sub
clc
je
dec
or
hlt
out
decl
call
out
fs
and
test
push
xor
pushf
jno
cmp
lods
rorb
in
outsl
add
in
ljmp
daa
addr16
jp
mov
cld
add
mov
and
xor
and
sbb
cwtl
std
ljmp
mov
add
rolb
sbb
inc
cwtl
clc
int
or
lahf
inc
cwtl
fadds
push
dec
ja
adc
xchg
jb
loop
push
jmp
fcoms
inc
add
push
xchg
jg
xchg
je
cltd
mov
add
jle
mov
push
push
lret
cmc
adc
pop
incl
mov
aad
js
add
push
sub
inc
or
adc
mov
mov
int3
sbb
add
xchg
mov
inc
add
push
fisubl
push
fisubl
xchg
pop
xor
add
xor
push
in
call
fwait
int
fdivl
pop
push
mov
cmc
cmc
xor
push
sbb
push
movsb
repz
pushf
int
shlb
add
mov
push
outsb
sub
adc
popa
and
mov
call
add
jo
add
cmc
jge
jge
jae
push
test
lahf
xchg
xor
sub
push
push
push
outsl
push
mov
in
mov
push
in
sub
call
fiaddl
inc
jmp
mov
inc
adc
shl
std
lahf
ljmp
mov
dec
rcl
jno
outsb
adc
push
add
push
push
lea
add
and
sbb
jmp
pop
add
or
aas
pop
mov
push
xor
xchg
notb
int
insb
xlat
xchg
xor
lea
jmp
iret
mov
dec
icebp
outsb
push
add
nop
aam
sub
lea
fdivrs
std
fstpl
mov
test
std
incl
add
push
lea
and
ret
inc
mov
mov
mov
ljmp
and
sub
add
push
test
add
mov
cmp
adcb
push
cmpsl
sub
bound
xor
mov
jl
mov
stc
pop
inc
xchg
add
xchg
scas
xor
xchg
fimull
mov
call
stos
pop
add
and
data16
and
nop
jl
icebp
add
pushf
inc
add
pop
push
push
rolb
fcomps
and
fcoml
pop
rclb
call
mov
jmp
dec
stos
push
jl
add
inc
lods
xchg
xchg
xor
add
add
add
in
mov
add
mov
int3
cmc
inc
sahf
jge
cwtl
mov
fwait
pop
adc
add
sbb
jmp
mov
xor
outsb
call
test
imul
xchg
in
ret
aaa
pop
xor
call
popf
pop
fcom
inc
add
push
mov
sbb
add
inc
push
scas
movsb
adc
jb
int3
fadds
rorl
jmp
pop
arpl
data16
push
push
jmp
dec
xor
rcll
jmp
fsubrl
sub
xor
bound
mov
xor
out
push
cs
xlat
stos
jae
xlat
mov
push
lahf
cmpb
roll
add
sub
jae
mov
mov
push
xor
jmp
stos
pop
mov
fcoms
xchg
mov
add
and
push
push
pop
das
add
xorl
or
int3
std
push
div
not
iret
int
call
cmp
xor
jb
add
or
std
inc
imul
jne
cmpb
add
sti
insl
lea
sub
decb
push
mov
push
add
add
mov
push
ret
xchg
scas
hlt
jle
mov
jbe
pop
cld
push
mov
pushf
out
xor
xchg
nopl
or
cmovp
icebp
push
push
jle
movsl
mov
add
adc
add
sub
je
out
xor
push
push
aad
mov
and
adc
imul
lret
pop
cwtl
adc
add
cmpsl
subb
xor
jae
push
pop
add
jp
jae
into
xchg
out
dec
add
jp
aad
mov
mov
pop
lds
aad
add
push
xor
fs
call
add
add
jle
push
xor
dec
xor
punpckhdq
inc
add
xor
ficoms
lcall
pop
stos
std
repz
lret
add
loop
call
add
sub
leave
cvtps2pd
add
cltd
mov
xor
add
xor
lret
and
cmp
add
push
add
and
jmp
mov
sbb
or
stc
push
lea
push
sub
adc
jge
mov
inc
mov
testb
inc
jmp
push
fimull
inc
and
add
and
push
test
pop
mov
testb
inc
jmp
push
pop
add
jecxz
ljmp
add
call
mov
cmp
sbb
fstl
xor
mov
bound
aad
cmp
stos
ss
jp
add
dec
xchg
add
jns
pop
pop
adc
add
adc
or
cmp
lea
and
jne
jo
cmp
adc
or
incl
enter
gs
clc
sbb
mov
add
add
add
cmp
std
call
sub
sub
push
xor
mov
pusha
pop
cmp
test
mov
lcall
mov
pop
mov
call
jle
or
mov
jmp
aas
push
pop
mov
lret
xchg
ret
xchg
xchg
je
lock
stos
roll
or
cmpsl
addb
xor
es
push
rol
jae
addl
stc
and
add
add
push
imul
out
adc
adc
imul
push
push
add
les
add
fildl
cmp
mov
fcom
add
mov
add
icebp
mov
das
adc
cltd
fs
rol
jo
popa
jg
jno
add
les
add
add
add
jp
sbb
and
ljmp
popf
mov
int
bnd
das
mov
jl
pop
push
insb
push
fs
ret
popf
or
jo
push
sbb
stc
arpl
enter
cwtl
call
or
outsl
push
xor
push
push
adc
lret
lahf
mov
xor
jmp
add
mov
sub
jae
mov
or
stos
insl
fildll
mov
or
pop
inc
or
jo
or
xchg
inc
addr16
xchg
fcomps
or
inc
sub
and
xor
call
push
push
mov
add
std
push
add
push
xor
xchg
mov
lods
mov
jmp
add
add
add
push
add
fs
popf
dec
test
push
mov
pop
push
shrb
xchg
notb
inc
js
out
test
cs
xchg
pop
cmovo
sbb
mov
cmp
add
xor
xor
inc
sub
add
pop
mov
jb
mov
sub
lea
clc
sub
pushl
dec
jge
and
sti
sub
std
call
mov
and
popa
mov
test
mov
inc
and
aas
jg
push
push
test
fwait
xor
cmp
hlt
aas
push
aam
and
push
ret
dec
sbb
inc
xchg
sbb
add
sti
inc
push
push
cwtl
add
roll
cmp
push
add
add
add
push
push
add
jmp
pop
jg
insl
xor
pop
inc
inc
sub
ret
lcall
cmpsl
sbb
imul
xchg
test
mov
pop
dec
cmp
inc
out
aas
push
xor
fwait
dec
fs
out
das
push
mov
jecxz
idivl
lods
insb
out
inc
testb
sub
inc
mov
fwait
mov
lds
int
in
adc
jmp
add
jmp
mov
pusha
lea
adc
add
pop
and
dec
inc
test
sbb
xchg
sub
xor
sub
add
cmp
pop
pop
xor
xchg
xlat
jmp
adc
call
add
add
add
add
add
dec
sub
call
dec
xor
jmp
loopne
sub
into
leave
lahf
push
insb
xchg
pop
jmp
outsb
mov
adc
jmp
push
lods
mov
lret
jmp
push
test
int
sbb
fmulp
ret
push
lods
inc
add
inc
enter
xor
add
gs
or
xor
push
nop
jmp
add
mov
cmovge
and
mov
and
fdivrl
push
adc
cmp
push
sti
jl
jge
mov
pop
push
dec
add
mov
dec
adc
xor
je
dec
xchg
xchg
push
or
repnz
ljmp
dec
push
rcll
add
or
decl
sub
and
cmp
lcall
push
call
nop
jae
das
xchg
xchg
mov
gs
gs
out
mov
add
xchg
incb
cmp
xor
cmp
mov
scas
mov
add
test
sti
lcall
sbb
stos
out
lcall
add
jle
add
out
push
adcb
adc
pop
inc
add
or
adc
jns
add
pop
add
sbb
and
add
movsl
imul
out
movb
movsl
mov
rolb
pop
es
cld
inc
adc
dec
in
cmp
adc
push
dec
enter
popl
push
pop
fistl
add
aas
lock
inc
push
dec
lock
loopne
sub
les
mov
inc
sub
gs
pop
loope
jmp
add
ss
xchg
xchg
xor
jns
in
sbb
ljmp
hlt
incl
jmp
mov
adc
skinit
test
orb
mov
and
sub
add
add
add
fistps
inc
into
jbe
hlt
in
mov
xchg
scas
leave
incb
test
cli
pop
and
sub
sbbl
movsl
clc
sub
cli
xchg
add
hlt
out
inc
jmp
sbb
and
addr16
adc
shlb
add
das
add
jmp
or
ret
imul
add
add
add
add
jmp
jmp
std
mov
stos
xor
jne
jb
jae
lcall
push
je
out
add
push
incl
xor
mov
jo
clc
add
push
push
add
lcall
sub
and
push
cs
xor
add
xor
add
arpl
lret
pop
adc
mov
aas
add
test
pop
jecxz
inc
push
into
mov
fmulp
jle
fstps
mov
shlb
je
enter
inc
add
xor
ja
cmp
sti
pop
push
inc
xor
mov
add
add
push
loopne
lahf
jl
add
add
push
xchg
mov
dec
xchg
push
pop
test
adc
inc
test
cli
sbbl
jmp
clc
sub
cs
call
cli
shrb
push
pop
sti
sti
mulb
mov
mov
adc
sar
out
pop
push
mov
mov
sti
rclb
mov
maxps
jmp
add
fistpll
add
xor
push
push
xor
add
fcmovu
add
repnz
adc
das
jmp
push
pop
xor
add
push
add
sub
push
insl
jg
dec
xor
jmp
daa
jno
rclb
mov
jge
cmp
sub
ds
add
hlt
sbb
sbb
ss
push
into
add
fbld
data16
mov
and
add
dec
or
push
xor
jbe
lret
ljmp
pushf
cmc
xor
xchg
hlt
setl
lcall
mov
negl
push
add
aam
inc
inc
jmp
push
decl
mov
add
add
xor
out
sbb
mov
add
daa
add
push
and
fldl
add
sub
test
es
mov
in
call
inc
adc
test
cmpl
je
cmpsl
jb
loopne
mov
pop
test
push
mov
test
push
adc
xor
lods
xor
lcall
inc
inc
push
out
out
std
mov
inc
adc
cmpsl
jb
push
dec
lcall
ret
nop
jae
add
adc
or
enter
push
inc
and
es
std
push
scas
das
cmp
repz
push
ds
sub
repnz
push
xchg
jnp
lahf
testb
pop
jae
je
out
in
dec
aas
xchg
mov
les
repnz
inc
sbb
pop
ds
or
mov
mov
lret
pop
add
xchg
ja
push
ficoml
mov
std
jbe,pn
or
and
adc
push
in
add
cmp
call
dec
cmp
out
xchg
pusha
inc
pop
stos
test
xchg
stos
xchg
adc
cs
daa
push
les
and
lret
cli
sub
lea
and
xor
out
adc
imulb
adc
orl
add
add
add
push
test
scas
sbb
mov
dec
xor
cmp
in
fildl
out
sub
out
fs
and
mov
dec
ficoms
repz
faddl
shrl
push
fs
je
xlat
faddl
subl
pop
and
and
adc
inc
push
pop
mov
adc
add
fcompl
jb
and
aam
push
je
xor
je
das
push
je
iret
cmp
xlat
adc
mov
lods
cmc
popf
outsl
dec
mov
xlat
push
subl
cli
mov
xorl
xchg
and
in
pop
jno
repz
fisttpll
sbb
mov
ss
add
xor
jne
mov
cld
shrd
test
adc
clc
add
out
and
jmp
push
daa
sub
jne
shrb
mov
je
stos
jae
shlb
inc
sbb
or
pop
cmp
push
jae
jg
js
jmp
add
xchg
cs
mov
out
incl
push
push
add
movb
push
aad
test
dec
ja
imul
add
aam
add
jns
or
loope
add
xchg
mov
inc
jge
mov
loope
add
dec
inc
pop
pop
adc
cltd
xor
mov
add
cli
pusha
jne
push
aaa
sbb
push
inc
add
pop
add
add
idivl
pop
pop
js
dec
cltd
lcall
adc
inc
dec
sub
xchg
dec
add
stos
xor
in
loopne
test
add
push
addb
stos
cmp
or
movsl
push
fwait
and
outsl
add
aad
mov
in
mov
aas
mov
sub
nop
add
jmp
jmp
sub
add
stos
clc
jge
push
adc
push
fucomi
fs
dec
pop
add
or
add
aam
fcmovne
fdiv
imul
add
ljmp
inc
xor
lahf
pop
dec
cmp
dec
xor
lods
push
push
push
cmp
adc
in
psubq
lahf
mov
inc
and
xor
inc
sub
jmp
dec
xor
scas
loopne
bound
jg
push
xor
cmp
dec
je
shr
addl
add
add
add
iret
add
jae
rol
sti
bound
les
push
orb
rol
mull
push
shr
dec
xor
or
jle
test
push
call
mov
cmp
xchg
mov
or
fisubrs
push
add
or
push
repz
jb
and
sub
stc
inc
cld
adc
incb
add
pop
out
outsl
pushl
xor
add
inc
or
cmp
xor
mov
mov
je
fs
call
in
mov
add
mov
push
out
mov
repnz
mov
cmpl
add
add
sar
and
rorb
push
pop
xchg
pop
ret
add
cld
inc
shl
pop
pop
add
jbe
or
jns
add
xor
lcall
xor
sub
push
cs
lds
stos
push
lea
ja
cwtl
or
jg
lea
test
dec
or
push
xor
add
into
adc
xor
push
and
or
add
les
int3
cmp
mov
add
xor
bswap
repz
jmp
xor
add
add
push
mov
testl
jo
enter
xor
jbe
mov
sub
add
adc
imul
xor
cs
hlt
mov
dec
call
add
outsl
cld
sbb
pop
jg
fcos
fadds
add
lock
add
cld
cli
and
and
sub
push
push
add
and
push
mov
call
dec
xor
pop
shll
xadd
fsqrt
imul
lcall
fs
sbb
cmovl
out
shlb
filds
call
aaa
mov
mov
aad
dec
xor
add
add
add
add
out
pop
jb
in
shr
loop
bound
pushf
cld
add
lret
lock
mov
inc
adc
adc
arpl
test
add
adc
das
pop
pop
imul
or
inc
push
dec
in
lea
xlat
add
mov
xor
push
js
push
je
mov
mov
outsl
subb
cmpb
add
jecxz
or
iret
repnz
adc
ja
sbb
cmp
cmp
icebp
push
xor
push
incl
adc
add
inc
add
inc
or
push
jg
push
or
pop
adc
push
lret
push
pop
add
add
fucomip
push
gs
leave
dec
pop
pop
xor
mov
repz
stos
push
lea
into
or
mov
push
pop
add
fs
cmovo
lds
aam
clc
adc
or
jmp
adc
or
iret
fs
cmovo
std
notl
int
sahf
aam
sti
movsb
fs
and
ret
call
insb
or
sarb
or
mov
add
jo
add
lret
mov
loope
imul
mov
aam
xor
mov
xor
mov
lcall
sbb
pop
inc
push
xor
and
loop
pop
mov
push
and
fisttpl
lock
repnz
jbe
nop
in
and
push
mov
push
pusha
add
add
dec
adc
aam
push
inc
jmp
push
ret
xor
jle
jae
cmp
lock
out
cmpsl
cltd
out
sub
mov
xor
lods
adc
adc
loop
cld
push
inc
jmp
cli
add
aam
pop
inc
jmp
adc
jmp
push
mov
insb
rol
bound
add
adc
cmp
push
and
dec
lret
rorl
test
add
mov
insb
push
cmp
and
sub
dec
sbb
add
mov
je
push
cmpl
addl
mov
loopne
mov
ret
fisttpl
subb
mov
push
pop
jle
js
dec
push
add
push
fimuls
cmpl
je
jnp
adc
lods
ljmp
push
push
pop
push
insb
pop
sbb
adc
shr
pop
sub
lea
sbb
mov
push
push
cmpsl
xor
incb
call
aad
out
push
mov
int
push
jmp
fldenv
mov
shll
add
jo
push
in
cltd
add
xchg
lret
dec
jae
ret
xchg
cltd
add
inc
movsl
or
sbb
add
outsb
sbb
incl
xor
shll
adc
xchg
mov
call
lea
mov
test
xor
cmp
ret
xchg
insb
pop
mov
call
mov
mov
jns
pusha
add
das
arpl
icebp
call
add
jo
vmovlps
adc
inc
mov
test
js
xor
add
or
xor
stos
xchg
jmp
xor
icebp
xchg
add
mov
mov
dec
xor
ds
out
or
cs
mov
add
nopl
add
add
cli
xchg
lods
enter
jb
fistpl
jmp
mov
das
ret
repnz
pop
fnstcw
jno
push
inc
rolb
pop
xchg
push
dec
xor
bound
add
flds
pusha
xchg
xor
lock
icebp
pop
jo
xor
out
push
mov
push
add
cmp
xor
jne
mul
mov
add
or
jp
inc
add
cmp
je
push
add
sub
pop
pop
sti
push
mov
mulb
jne
add
inc
lock
je
pop
out
mov
mov
push
call
das
push
push
call
andnps
call
outsl
push
push
call
outsl
push
es
add
add
add
sub
call
push
out
je
jle
std
add
mov
add
push
push
aaa
loopne
push
add
cmp
in
push
fsubrs
insb
xchg
cmp
add
mov
pop
add
add
push
jno
cld
push
pop
das
fisttpl
adc
into
in
or
imul
je
rorb
lock
fidivrs
push
call
add
lock
jbe
push
into
jnp
xchg
pop
rorl
push
mov
add
push
in
adc
xor
jne
scas
filds
cld
cmp
das
jmp
cmp
sarb
mov
in
add
and
dec
out
call
ljmp
enter
sarl
pop
dec
stos
rclb
inc
xlat
stos
insl
xor
add
add
add
cli
scas
test
push
inc
jge
jle
jg
filds
jle
inc
gs
call
add
jo
jg
das
jmp
xchg
int3
pushl
and
fcoml
push
stos
mov
jmp
addr16
push
adc
imul
int3
cli
out
loop
mov
ficomps
add
test
push
xor
mov
inc
adc
aas
lock
inc
push
addl
sbb
mov
inc
adc
mov
cmp
inc
imul
faddp
movsb
inc
inc
push
add
scas
inc
enter
pop
cmc
ds
iret
pop
add
xchg
jae
clc
imul
add
add
push
pop
idiv
addr16
push
push
repz
dec
decl
adc
mov
or
add
ret
sub
add
jne
push
mov
dec
xor
pop
mov
arpl
adc
insl
repz
jne
push
addr16
in
pop
sti
jmp
inc
adc
lret
cmp
fcompl
add
outsl
jnp
rorb
add
jmp
push
add
aaa
les
dec
int3
int3
out
jbe
rorl
cltd
pop
cmp
dec
add
fdivr
js
inc
bound
int3
hlt
outsb
ss
pop
cmp
add
inc
jae
xchg
rorl
jno
pop
lret
sbb
push
sahf
rcrb
nop
inc
add
jge
shlb
add
add
add
add
fcoms
or
in
and
lds
jb
scas
jno
stos
cs
lods
arpl
scas
dec
xchg
add
sub
int
call
scas
call
fld1
xor
jle
mov
cmc
push
and
test
ds
xchg
xor
add
pushf
jo
fsqrt
dec
add
ss
or
sub
repz
add
pop
xchg
test
cmp
ljmp
shll
mov
mov
fdivrl
ds
inc
lock
push
test
dec
sahf
and
xrelease
aas
iret
jge
lock
add
push
add
push
pop
cmp
aam
push
inc
jmp
add
add
add
loope
sti
out
fs
dec
mov
inc
cmp
lea
dec
add
ds
jns
fmulp
stos
clc
test
jg
bound
inc
jmp
jp
push
sarl
add
pop
mov
xor
adc
xor
xor
add
mov
add
adc
scas
add
add
call
xor
gs
into
push
out
add
mov
mov
call
and
cmp
fsubs
sub
add
mov
je
push
inc
lea
sti
std
fistpll
out
mov
pop
mov
pop
out
adc
add
push
push
ret
sub
push
int
jae
mov
outsb
dec
lret
add
mov
fiadds
sti
scas
ljmp
lret
jmp
xchg
aam
inc
push
fcmovnb
test
pavgb
mov
inc
push
xor
sbb
mov
mov
mov
mov
add
mov
lahf
mov
push
add
mov
jmp
push
add
mov
cmp
xor
add
xlat
outsl
aaa
mov
out
pushf
insl
out
lods
aam
cmpsl
mov
inc
lock
mov
int3
mov
and
aam
add
outsl
adc
ds
sub
mov
call
pop
dec
insb
sbb
insb
and
cmp
ficompl
popl
xor
flds
pop
sbb
in
pop
loope
add
stc
cmp
add
arpl
sub
mov
sarl
sbb
lods
adc
jb
sub
movsb
pushf
adc
jb
xchg
xor
mov
cmp
rcll
cld
sub
pop
adc
cmpsb
jmp
push
lds
mov
push
inc
call
fsubp
out
dec
cmp
ret
inc
stos
jl
mov
xor
cmp
add
add
add
add
jl
out
fistps
cli
or
push
mov
fmulp
push
add
push
movb
mov
fbld
out
jb
add
lods
hlt
or
add
ljmp
cs
add
mov
or
add
ljmp
sub
inc
shlb
add
pop
out
xchg
sub
mov
add
add
add
add
xchg
cmpl
je
and
outsl
mov
mov
lods
in
shlb
add
cmpl
je
lds
push
mov
jno
pop
push
dec
jnp
or
inc
push
int
push
add
fcomip
push
repz
jl
lret
test
faddl
dec
fimull
fidivs
out
adc
aam
out
inc
rolb
dec
lds
add
test
stc
xchg
add
add
mov
out
pusha
add
aam
outsb
mov
dec
lcall
dec
jge
jne
mov
add
sbb
xor
cmpb
add
bound
push
xor
jl
add
push
add
in
enter
jmp
xor
bnd
jg
mov
sti
fwait
es
mov
mov
leave
out
jl
inc
imul
ret
sti
xchg
in
dec
xor
jmp
jge
inc
fnsave
adc
call
pop
cmp
enter
xchg
mov
xchg
cmp
pushl
xor
jmp
lods
dec
out
mov
stos
dec
loope
aaa
je
dec
push
jo
sub
sub
sub
into
insl
repnz
nop
xor
imul
dec
sbb
ljmp
call
lea
mov
xchg
sub
push
inc
add
fsubrl
cs
in
idivl
jg
lcall
xor
mov
leave
xor
aaa
dec
mov
jb
sub
mov
mov
adc
outsl
lret
or
jnp
hlt
aas
add
cmp
jmp
or
std
dec
mov
call
iret
int3
std
sub
push
mov
das
leave
add
das
int
inc
xor
call
ds
bound
and
aas
testb
cmc
out
push
sub
mov
addr16
jne
mov
pop
dec
in
or
mov
mov
fbstp
lea
gs
or
dec
lret
incb
ja
push
dec
jns
add
int3
xchg
out
daa
rclb
lcall
inc
and
js
and
mov
add
aad
out
or
test
mov
rol
xor
rol
fimull
xchg
jg
data16
sub
data16
roll
lret
pop
jno
pop
das
sub
ret
hlt
inc
xor
jp
lods
fsubrp
add
push
ljmp
add
push
and
mov
aam
push
shl
mov
call
jg
mov
sub
xor
adc
sbb
or
dec
movsl
stos
push
push
xor
das
inc
lock
iret
dec
fiadds
push
ficoml
jge
add
mov
mov
jne
add
dec
xor
or
push
jmp
lcall
pop
hlt
push
xor
ljmp
push
jmp
or
out
ja
cli
xchg
inc
sbb
jmp
xor
bound
push
sub
cs
and
adc
inc
adcb
fs
mov
xorb
loope
sbb
add
mov
jne
insl
aaa
inc
adc
add
cmp
rolb
std
je
xor
inc
add
lds
inc
inc
sub
sub
pop
test
je
ja
les
aaa
adc
cmp
call
pop
int
sbb
insb
pop
arpl
pop
ret
sbb
je
add
push
ljmp
mov
jae
sub
daa
mov
sub
xchg
loope
mov
repz
jmp
cli
clc
adc
add
jl
arpl
rorb
arpl
das
xchg
push
and
aas
push
into
mov
push
lret
sub
lea
or
push
aam
test
or
add
fcoml
out
aad
popa
icebp
shl
sbb
ja
popa
fdivs
fnstcw
punpckhbw
add
adc
sbb
shll
fdivrp
add
fcomi
mov
das
aam
jbe
cmp
nop
out
lahf
sbb
cmp
push
lcall
push
cwtl
sub
xor
clc
inc
cmpsl
add
add
cmp
mov
daa
xlat
dec
js
mov
dec
mov
setge
lock
pop
mov
cmp
mov
sbb
fidivs
call
or
jne
mov
pop
das
add
pop
inc
inc
jmp
aam
and
push
sub
push
push
fidivl
stc
xlat
stos
and
add
mov
sub
push
jb
mov
xor
inc
std
xlat
fisttpl
and
stos
fstl
push
mov
lds
xchg
dec
mov
adc
push
xor
push
xor
cmp
push
mov
call
gs
ds
push
xor
add
dec
pop
call
add
xor
jmp
xor
and
std
incl
lret
xor
sub
nop
push
mov
je
dec
std
adc
sti
je
push
mov
in
jne
decb
ret
js
sti
xor
adc
std
pushl
clc
and
lea
or
std
mov
xor
call
fs
test
add
clc
and
mov
adc
xchg
pop
xor
test
mov
imul
imul
xor
dec
aam
and
dec
jmp
mov
jmp
push
cmp
add
lds
mov
lret
inc
insl
or
add
add
int3
addr16
adc
loop
add
jge
sub
gs
jmp
popf
inc
jae
mov
add
adc
imul
mov
pop
push
aaa
push
pop
inc
push
ret
mov
dec
jns
push
xor
mov
sbb
add
enter
push
mov
cmp
push
xchg
sti
mov
add
sbb
push
loopne
push
pop
daa
mov
popf
out
jecxz
pushf
mov
cmpb
lcall
cmp
mov
mov
add
xor
dec
scas
dec
pusha
mov
add
movsb
adc
stos
dec
xor
sbb
call
iret
stos
aam
and
cltd
sub
push
imul
pop
add
jae
mov
cli
sub
push
mov
cwtl
ret
cmp
jnp
jo
es
imul
das
clc
push
xor
cmp
imul
xchg
sub
push
inc
mov
in
lods
sub
add
fisubs
inc
mov
sbb
call
insl
jno
add
xor
fmuls
repnz
call
cmp
call
add
repnz
call
in
insb
jno
add
add
push
and
mov
in
data16
jns
in
cmp
inc
inc
cs
sub
call
push
add
add
xlat
add
int3
fisttpll
test
inc
pop
or
pop
bnd
mov
add
and
notl
cmpl
xor
add
sub
mov
out
xchg
fcomp
add
dec
fisttpl
call
adc
outsb
jmp
mov
fldl
idivb
ja
push
sbb
push
add
aad
pop
ss
add
or
adc
notl
pop
hlt
pop
sahf
jmp
fwait
cmp
mov
call
mov
xor
sub
cvtps2pi
or
or
mov
fdivl
js
loope
jo
add
call
inc
push
xor
push
jg
iret
xor
je
add
pop
mov
out
jbe
aaa
add
adc
sahf
pop
inc
mov
fistl
imul
mov
inc
mov
jecxz
fnstcw
fisubrl
lea
test
xor
push
inc
add
ds
adc
mov
std
mov
mov
jbe
scas
popf
cwtl
sbb
fwait
int3
orl
mov
sbb
push
adc
out
or
out
std
inc
imul
mov
rcr
add
inc
call
fs
sbb
bound
sub
add
pop
or
sbb
mov
stc
call
movsb
jno
shrl
pop
inc
jns
add
fcoml
add
mov
xor
add
add
add
add
jno
push
cs
jne
fisttps
push
cltd
sub
xor
clc
testb
mov
sbb
out
add
push
sbb
mov
cltd
repz
mov
sarb
mov
stos
jne
cmp
sbb
push
lret
or
lcall
add
push
mov
test
test
sbbb
push
inc
xlat
inc
add
push
pop
mov
dec
jmp
push
fdivrl
pop
xor
loopne
push
mov
fmull
das
mov
cmpsl
jmp
xchg
push
cmp
add
xchg
stos
push
dec
mov
sbb
or
add
add
add
add
aam
repz
mov
push
xor
dec
xor
test
popf
out
lods
jb,pn
push
pop
lods
daa
pop
int
ljmp
jo
lcall
lahf
imul
mov
out
fistpll
das
out
cmp
outsl
add
ljmp
test
add
xor
repz
popf
xlat
push
sbb
add
das
out
lret
dec
leave
test
leave
adc
push
fldcw
cmp
pushaw
xchg
pop
mov
imul
mov
xchg
cmp
push
push
pop
jmp
gs
xor
push
ljmp
scas
add
push
fidivs
movsl
addr16
fsts
pop
fldenv
xor
sahf
add
xchg
ss
notb
sub
and
jmp
int
add
push
addr16
fdivrl
imul
add
leave
imul
loope
jge
js
jmp
add
dec
lea
push
pusha
add
add
mov
mov
push
daa
adc
adc
sub
je
div
add
inc
add
call
sub
add
sub
je
adc
in
push
mov
cmp
sub
ljmp
jl
mov
cld
inc
test
pop
mov
sub
movsb
out
push
jp
mov
jle
pop
xchg
cmp
push
pop
mov
call
pop
add
fcom
xor
out
je
xchg
inc
aaa
add
test
aas
cld
xchg
push
pop
mov
enter
pop
pushf
dec
jne
sahf
mov
aaa
jmp
sub
jmp
sahf
mov
ficoms
pop
lret
les
pop
mov
xchg
or
mov
jge
int
add
aam
fcoms
lret
decl
dec
mov
pusha
jbe
arpl
add
jp
mov
add
addr16
xor
sarb
xor
jle
or
imul
out
andb
xor
jne
push
shld
push
lcall
pop
int3
cmp
lret
add
cmpsl
add
aas
call
push
fistpl
lock
das
gs
pop
call
cmpl
out
aaa
pop
xor
add
sbb
sbb
jbe
stos
inc
jns
pop
sub
or
pop
negl
bound
stos
inc
dec
fisttpll
test
cmpsb
pop
fsubrp
fisttps
sbb
and
icebp
sub
test
xor
jb
paddd
or
and
push
jno
mov
push
stos
inc
mov
leave
outsb
call
nop
insb
sbb
xchg
xor
in
xchg
xchg
insl
addb
pop
cmp
movsl
or
xchg
adc
push
push
pop
daa
mov
pop
sti
pop
jmp
sub
je
sub
xchg
sub
inc
jo
cmc
in
mov
cmp
inc
je
cmc
jmp
inc
dec
push
jl
add
popf
dec
in
ret
pop
push
xchg
mov
imul
mov
jp
in
jno
decb
or
outsb
inc
add
es
adc
add
xchg
mov
push
lahf
add
adc
pop
faddl
stc
jbe
incb
lret
sbb
mov
cmp
cmc
aas
push
pop
orps
std
incb
add
sqrtps
push
std
pop
xchg
loop
ret
loope
jl
jl
jns
jl
jne
inc
cld
xchg
pop
mov
add
fs
icebp
aas
push
pop
mov
gs
push
out
popf
cld
xchg
pop
jnp
ror
add
sbb
cmpsb
stc
bound
add
push
orb
dec
sbb
rorb
gs
ret
add
xchg
pop
xchg
jl
sbb
add
ret
pop
flds
lahf
out
lahf
dec
test
test
rep
or
pop
ss
std
push
js
dec
mov
clc
ds
cmpsl
add
js
pop
push
jg
jnp
mov
loopne
cmpsb
mov
xor
ss
sub
add
xchg
jmp
sldt
popf
sbb
and
xchg
test
pop
imul
out
sti
sub
std
fdivrl
inc
jmp
das
sub
mov
cmpsb
je
jne
std
fdivrl
add
cs
pop
push
cmp
adc
lahf
sbb
xchg
sbb
or
lahf
inc
shr
sbb
cwtl
sub
add
jne
jmp
adc
sub
xor
push
std
push
adc
lret
pop
mov
enter
loope
in
sub
std
mov
in
sbb
ja
scas
add
call
test
sbb
add
mov
je
push
lret
or
cmp
push
hlt
push
imul
add
add
add
aaa
mov
add
cs
push
pop
and
adc
imul
sbb
sti
call
stos
push
push
push
pop
loopne
inc
add
das
inc
or
fs
mov
mov
fdivl
mov
mov
lret
xchg
jg
sub
adc
add
jns
pop
pop
mov
dec
inc
pop
jns
insl
lcall
sub
mov
aas
push
push
push
pop
mov
cmp
icebp
aas
push
xor
movhps
adc
or
clc
xchg
jp
jg
jp
dec
mov
sbb
sbb
inc
mov
push
push
xor
push
call
and
sbb
aam
ret
mov
add
add
add
mov
push
add
cmp
and
addr16
mov
stos
add
ja
cmp
add
jge
push
fistpll
rcrl
push
xor
jle
or
aaa
sbb
aad
out
loop
out
rcl
lret
jg
sbb
add
lods
add
xor
bound
sub
xor
insl
int3
pop
jmp
add
pop
fwait
and
sub
pop
mov
aad
jmp
das
mov
popa
push
xor
andl
and
push
daa
test
dec
xor
add
push
jne
popa
pop
adc
fs
add
push
sub
push
add
or
aam
adc
mov
cmp
mov
loopne
add
mov
add
decb
jmp
hlt
ret
inc
mov
out
push
imul
jne
jp
out
xor
rclb
mov
mov
mov
sub
add
fcoml
js
mov
js
movb
addr16
mov
jp
or
xchg
xchg
andl
jmp
mov
add
push
shr
int3
xor
push
mov
les
push
mov
mov
push
inc
je
test
sub
pop
fsubrl
lret
jnp
rsm
out
mov
mov
mov
and
mov
xor
mov
lds
pop
dec
pop
mov
mov
mov
add
add
loope
add
lret
sbb
and
mov
aad
in
test
stc
mov
or
popa
jb
mov
imul
xchg
adc
sub
dec
jnp
negb
clc
inc
pop
adc
mov
pop
out
adc
enter
rorb
dec
clc
bound
enter
test
cmp
sti
jnp
fcmovne
add
dec
jge
enter
jp
dec
out
sbbb
das
pop
jle
call
out
lea
add
insl
iret
jp
dec
repz
je
rorl
xlat
push
cmpsl
lds
xchg
adc
inc
add
push
xor
movsb
and
mov
scas
es
mov
adc
pushf
jnp
subl
add
add
add
mov
pop
std
adc
lahf
imul
and
scas
shlb
adc
hlt
mov
inc
jmp
xchg
sbb
je
or
addl
sbb
fisttpll
shlb
add
push
adc
stos
push
scas
js
or
jae
mov
and
enter
pushl
mov
add
add
add
add
xor
cmp
sbb
loopne
cld
inc
clc
imul
jge
pushl
adc
imul
es
pop
ret
and
inc
mov
out
std
xor
jmp
mov
mov
js
test
incl
xchg
enter
rolb
cs
jmp
scas
clc
sub
ljmp
add
add
add
dec
cmp
push
fprem1
pop
sbb
xchg
cli
jg
sbb
call
rcrb
test
mov
div
nop
or
xchg
add
stos
ret
pop
and
jle
pop
xorl
dec
cmpl
adc
mov
dec
in
cmp
inc
xor
push
mov
mov
push
sub
in
pop
add
shrb
add
push
lcall
cmpsl
sti
sub
add
inc
lret
out
mov
add
fstps
and
pop
sbb
add
cmp
stos
fucomi
sub
lods
das
inc
jmp
push
testl
mov
and
xchg
adc
std
add
pop
fldenv
push
mov
xor
icebp
inc
fstps
sbb
call
cmpsb
or
lea
add
xor
jp
and
push
jnp
out
jp
and
test
sub
inc
cmc
or
xor
sub
or
jmp
or
aad
or
adc
push
or
adc
push
or
adc
add
add
add
add
adc
add
adc
into
adc
cmp
adc
inc
rcll
dec
rcll
push
rcll
mov
stc
fdivl
subb
ja
out
dec
push
ss
cltd
add
pop
pop
dec
xchg
push
cmp
mov
mov
in
push
imul
xor
test
add
test
sub
add
xchg
mov
in
adc
xor
mov
jnp
call
dec
and
popa
dec
je
jge
int
adc
mov
mov
cltd
and
pop
idiv
mov
sar
sti
mov
decb
push
jge
ret
push
xchg
sbb
aad
mov
xchg
aas
ret
jbe
cmp
sbb
mov
push
scas
inc
lds
repnz
lods
add
jbe,pt
push
pop
inc
add
int3
sub
je
pop
add
and
mov
fcomip
pushf
push
je
push
add
addl
pop
mov
sbb
ret
jmp
push
or
movb
add
ds
cmpsl
mov
cmp
mov
cmc
call
sub
cmc
call
adcl
jecxz
data16
fdivr
imulb
pop
push
arpl
rcrl
mov
sub
or
outsl
pop
dec
xor
test
dec
mov
cmc
jmp
jo
sub
aas
rcll
jmp
add
or
out
rorb
fistpll
gs
fdivrs
inc
cmp
sub
add
push
xor
lret
jae
fiaddl
enter
xor
cwtl
loopne
call
xchg
xchg
or
jbe
je
gs
cmp
call
and
push
cmp
movsb
jp
jnp
jge
add
loopne
xor
add
insl
sub
mov
cmp
mov
jmp
jg
dec
or
jmp
jge
call
loop
out
push
add
push
mov
mov
call
mov
dec
inc
pop
enter
pop
add
js
push
push
repz
add
repz
xchg
mov
push
lods
push
dec
mov
mov
jecxz
add
pushl
testb
pop
je
or
add
add
pop
or
into
mov
dec
adc
shr
push
into
rorl
rcr
mov
dec
adc
shr
bswap
rcll
or
add
pop
jle
sarb
or
cmpb
push
cmp
add
push
sarb
iret
nop
mov
or
adc
dec
mov
imul
iret
nop
ja
or
cli
mov
ljmp
sub
loope
adc
or
repnz
add
xor
dec
inc
jmp
lock
shrl
sbb
push
mov
push
xor
jecxz
test
add
or
dec
mov
mov
xor
push
lods
or
enter
cmp
ss
or
mov
fstpl
imul
push
das
sbb
mov
jo
mov
bound
cs
mov
sub
push
bound
jb
jb
xchg
fs
movsl
xor
pop
adc
inc
sbb
js
add
add
add
push
mov
mov
sbb
insl
xchg
jge
bound
out
xor
insb
mov
ss
std
jp
push
mov
push
push
mov
mov
imul
jmp
mov
test
adc
cmp
adc
push
add
xor
xor
mov
push
lcall
add
add
add
sub
rol
or
lods
pop
pop
jne
sub
std
stc
aam
std
scas
repnz
rolb
cmp
push
aad
push
rclb
inc
call
dec
adc
lret
mov
mov
push
mov
decl
loopne
in
sub
lea
sbb
inc
push
push
incl
add
mov
cmp
je
scas
and
clc
xor
cld
and
add
mov
mov
and
dec
push
push
pusha
mov
rcll
mov
cmpsl
push
xchg
scas
pop
fiaddl
mov
adc
xchg
sbb
mov
cmc
addl
inc
incl
add
add
push
es
mov
add
cld
mov
dec
add
dec
pop
adc
jg
leave
aas
test
and
adc
cmp
fcoms
mov
orl
xlat
pop
jp
xor
xor
pop
lret
and
inc
out
out
add
rolb
pop
hlt
fnsave
sub
lock
loopne
jl
adc
jl
adc
add
cmp
fcmovb
xchg
lods
cmpsl
mov
dec
out
adc
lret
movsl
decl
xchg
add
clc
jle
add
filds
pop
mov
divb
lcall
inc
sub
sub
push
jle
ljmp
aaa
pop
movl
add
add
add
push
push
push
push
ljmpw
mov
dec
jmp
repnz
scas
push
add
inc
and
sub
sarb
andl
dec
xor
mov
mov
stc
adc
add
push
je
pop
andl
rcll
and
out
add
push
repnz
rorl
add
add
xchg
push
cs
add
jg
in
sbb
add
lock
push
mov
decb
xor
or
rorb
shlb
mov
das
pop
ret
cmpl
je
imul
cmp
jno
mov
adc
mov
std
mov
mov
jno
nop
js
add
mov
add
add
add
add
sub
mov
std
pushl
outsb
add
dec
repnz
aas
mov
test
sarb
inc
cmp
or
mov
jle
pop
inc
push
mov
mov
add
dec
push
incl
lea
mov
mov
cmc
or
out
sbb
add
pop
sub
rcrb
push
inc
into
push
fcmovbe
xchg
sbb
out
call
mov
mov
popa
mov
out
sahf
lea
sbb
movsb
add
aad
mov
lret
inc
xor
adc
mov
jecxz
out
add
inc
add
cmpsb
aad
out
jecxz
xchg
fstl
inc
jo
jle
add
sbb
cmp
aad
xchg
sbb
add
lret
int
add
scas
pop
lods
es
pop
sub
sub
out
insb
btr
xor
pop
mov
or
sub
scas
incl
sub
lret
or
aas
stc
movsb
jp
jle
and
pop
xor
sar
pop
lds
add
mov
or
push
mov
push
mov
pushw
add
jne
dec
mov
push
jbe
lods
cli
in
sub
xor
mov
jbe
lods
cli
in
and
push
sbb
jge
loope
outsl
xor
jns
ror
mov
jmp
fs
insl
push
jl
jns
adc
pop
stos
test
in
push
xor
push
aas
idivb
pop
push
sub
add
add
add
add
in
dec
loopne
icebp
btc
cmp
adc
inc
ljmp
mov
hlt
sub
je
jle
cmp
or
in
inc
cmp
icebp
mov
sti
inc
popa
jmp
mov
jle
call
inc
dec
mov
jle
or
decl
arpl
incl
add
push
test
xor
add
inc
jno
dec
jg
call
push
xchg
fdivr
ficompl
xchg
test
or
notb
sar
push
jle
lds
subb
pop
xlat
incb
inc
push
mov
mov
mov
addr16
rcrl
loope
pop
mov
shrl
add
cmp
add
test
sub
cmp
test
and
mov
inc
or
inc
and
popl
test
addr16
add
je
xor
das
imul
cld
rcrl
test
aas
mov
push
push
push
jge
inc
test
add
sub
cmpsl
xor
ljmp
movsb
das
fldenv
in
adc
push
std
out
push
mov
jecxz
sub
dec
jl
cmpl
and
imul
sub
out
test
stos
sbb
andb
dec
jae
jmp
cld
sbbb
imul
clc
pop
cmc
push
mov
faddl
add
xor
and
ljmp
inc
sbb
je
jmp
icebp
push
xor
in
or
cli
fwait
cs
pushf
push
std
dec
or
cs
dec
add
mov
push
xor
add
fadds
jmp
enter
mov
cmp
add
pop
inc
mov
nop
ljmp
add
cmp
cmpsb
mov
clc
repz
icebp
inc
loope
stc
mov
dec
mov
pop
or
in
inc
mov
mov
scas
in
pop
leave
imul
in
stos
push
or
fidivs
orl
mov
loop
inc
inc
jge
hlt
add
cmpl
add
or
dec
or
scas
clc
or
add
add
add
pop
testb
movsl
push
inc
jno
cs
push
sarb
add
ja
aam
add
rcl
fbstp
push
mov
lods
sbb
cmp
sbbb
adc
jg
jno
xchg
or
jno
mov
or
gs
fidivrl
inc
movd
rclb
into
jae
and
add
add
fisubrs
jno
in
sub
mov
sub
je
les
out
push
loope
sbb
xlat
out
aad
cmp
int
xor
inc
lock
test
outsl
out
imul
jp
stos
sbb
notl
xlat
data16
xchg
int
repz
outsl
jns
add
inc
push
cmpsl
in
lret
icebp
push
loope
cli
push
jns
add
jae
jns
or
dec
push
cli
push
pop
pop
enter
js
lods
or
andb
jg
push
jnp
add
iret
fidivs
pushf
lcall
add
xor
incb
mov
sub
sub
stc
mov
cmpsb
lret
xchg
add
rolb
or
push
xchg
andl
push
xchg
subl
add
add
add
je
call
pusha
jo
pop
ds
mov
data16
pop
dec
and
jmp
add
jnp
push
movsl
pop
cmp
or
jno
pushf
cmp
dec
pop
xchg
jns
cmpsl
ja
in
iret
std
mov
jp
jnp
aas
clc
ljmp
incb
add
and
mov
add
in
xor
push
jnp
jnp
out
cmc
mov
cmc
jg
iret
inc
decb
mov
add
call
or
gs
push
divl
mov
sti
mov
mov
je
mov
jno
stos
xor
jmp
jne
je
sti
jae
jmp
or
push
or
add
leave
add
add
add
add
iret
divb
incb
push
inc
iret
hlt
push
out
mov
aad
lods
push
push
addl
iret
std
in
push
cltd
fdivp
add
into
push
mov
jg
rcrb
in
sar
addb
mov
xor
sub
shll
cmp
push
xlat
or
lds
add
jno
sub
xor
cmp
std
out
mov
stos
sub
into
lds
sub
sahf
leave
and
stos
sti
rcrb
stos
loopne
sbb
call
push
adc
out
sbb
das
out
int3
idivb
inc
lock
sbb
das
out
and
nop
js
mul
aam
adc
adc
dec
jl
test
and
scas
add
jno
add
sbb
jl,pt
fcoml
insb
inc
mov
and
repz
inc
cwtl
sub
mov
sub
pushf
fistpl
cmp
jo
sub
jl
lods
divb
lods
rcrb
inc
shlb
out
inc
or
cmp
mov
jmp
out
add
insb
out
jl
add
push
das
sub
imul
mov
sbb
stos
cmp
push
bound
mov
fidivrl
aad
std
and
and
push
mov
jge
or
inc
je
stos
adc
sti
cmp
mov
cld
pop
cmp
jne
adc
jno
xor
add
push
jae
inc
loope
push
mov
test
dec
pop
ret
pop
out
jnp
sub
lea
or
in
lcall
adc
xor
sub
push
and
push
xor
add
outsl
push
mov
add
int3
adc
mov
xor
test
testb
incb
add
ss
or
jmp
mov
mov
ds
mov
mov
xor
aam
clc
dec
sahf
push
cld
mov
mov
fmuls
jns
mov
int3
sahf
mov
aam
mov
data16
testb
sbb
xlat
aam
or
cmp
sbb
jmp
xor
sub
mov
add
xchg
and
rorb
pop
sub
aad
mov
idivl
scas
fsub
add
daa
jb
fisubl
bound
jl
push
push
mov
or
scas
repnz
int
imull
lahf
jl
and
dec
fbld
movsl
mov
cltd
jbe
scas
mov
and
sbb
out
xchg
out
add
enter
ret
jnp
sub
jne
cmpsl
inc
loope
xor
jmp
mov
sub
jmp
or
and
xor
scas
clc
xchg
cmpsb
sub
fs
jl
xchg
push
pop
data16
lods
ret
cmpsb
incl
push
lods
mov
mov
mov
sbb
push
in
mov
sbb
cmp
add
mov
sub
add
out
bound
inc
inc
add
inc
mov
jno
sarb
or
jno
add
decl
ljmp
in
inc
fists
jns
inc
sbb
in
push
adc
dec
call
imul
push
ljmp
jmp
mov
js
adc
add
jbe
loopne
mov
mov
in
jle
lcall
addb
xor
into
adc
xchg
xlat
xor
mov
inc
mov
movl
inc
fcmovbe
enter
repz
lahf
aad
sbb
add
adc
decl
fimull
add
lahf
xchg
dec
ret
add
aad
add
push
rcrb
dec
inc
push
clc
push
fcmove
std
xchg
sbb
dec
gs
cmc
nop
rcll
jg
xor
mov
movb
xchg
cmp
ljmp
clc
stos
cmp
or
popa
or
pushf
repz
inc
mov
and
je
lea
add
mov
dec
xor
mov
mov
adc
mov
dec
mov
and
out
pop
sub
stos
fucomip
push
lret
ucomiss
adc
mov
aas
insb
mov
out
out
lea
aas
push
xchg
out
lea
push
xor
xchg
mov
sub
add
std
and
das
std
sub
mov
or
xlat
cmp
mov
sarb
ljmp
inc
je
or
lods
out
jno
std
jb
mov
adc
sarl
jecxz
sub
xor
mov
xor
push
cwtl
mov
outsb
cmp
ljmp
lret
add
add
xchg
mov
mov
sbb
add
xor
mov
in
add
mov
inc
cmp
in
rcl
push
sti
call
lock
push
ret
sbb
dec
cld
dec
sahf
add
adc
idiv
push
cmpsl
out
adc
jmp
add
testb
add
mov
xor
mov
adc
imulb
jae
cmp
add
jge
jae,pn
sub
dec
inc
gs
sub
add
cmp
xlat
cwtl
add
repnz
aas
sbb
add
push
dec
fbstp
sbb
or
fcoms
add
sbb
cmc
add
popf
call
add
jp
ja
cltd
add
sbb
mov
xchg
inc
add
lret
add
and
pop
push
movsb
mov
and
andb
dec
test
fstps
je
xor
sahf
sbb
inc
daa
add
lock
std
and
jmp
or
cmp
pop
fnstsw
pop
cwtl
data16
add
xor
add
add
add
add
lahf
push
shl
jecxz
push
sub
mov
xor
sub
test
das
jg
movsb
negl
cli
dec
push
test
add
fs
push
and
fdiv
push
jo
push
and
daa
push
lea
push
gs
ret
mov
mov
sbb
or
mov
push
loope
push
fsubp
xor
add
add
add
add
cmpb
jae
jle
adc
push
mov
cmp
jmp
adc
mov
xor
adc
inc
sub
insb
lea
push
jmp
add
adc
xchg
fdivr
ret
orl
push
loop
lcall
add
push
cli
sbb
pushf
inc
mov
sbb
gs
aaa
add
test
inc
cld
xchg
jo
add
out
mov
add
outsl
jno
mov
mov
hlt
arpl
sub
stc
stc
push
dec
dec
je
dec
dec
je
scas
add
in
je
ret
repnz
or
dec
ljmp
sbb
ljmp
fnstsw
pop
ret
jne
or
lahf
xor
add
fcomps
sbb
add
adc
das
add
fistl
inc
fs
aas
push
pop
inc
pop
xchg
rolb
push
jge
jne
add
push
mov
addr16
filds
add
xor
jle
andb
xlat
add
pop
mov
add
xchg
jo
scas
push
daa
inc
push
inc
inc
loopne
lret
jae
sbb
add
add
add
lahf
flds
xor
xchg
add
in
test
add
fcoms
add
mov
fimull
mov
mov
jno
call
xor
adc
or
add
cs
add
out
movsl
inc
push
xor
push
jb
out
xchg
mov
iret
negl
fincstp
lret
xor
hlt
clc
cmp
add
out
sti
mov
call
outsb
mov
cmpsl
popl
lcall
clc
jb
push
fcmovnu
sub
cmp
adc
int
add
mov
out
adc
jmp
divb
mov
imul
jp
push
jmp
pop
gs
rorl
add
push
xor
add
in
ffreep
jp
cmc
xlat
insb
adc
inc
iret
mov
cmpsb
mov
adcl
adc
inc
out
add
ds
xor
mov
or
pusha
stos
sub
push
xor
cmc
jg,pn
aaa
sub
add
int
adc
fucomp
call
insb
cmp
or
adc
arpl
mov
add
add
mov
nop
into
cli
add
mov
mov
stc
mov
push
mov
xchg
stos
xor
add
mov
std
js
repz
fs
ljmp
call
in
jo
add
and
xor
lea
mov
inc
or
maskmovq
testl
sub
add
add
xor
dec
test
inc
or
stos
mov
xlat
cli
push
xlat
mov
sbb
lret
scas
and
add
inc
stc
sbb
mov
add
xchg
pop
push
pop
repnz
ljmp
fimull
or
push
add
lret
pop
jp
stos
sub
xlat
add
popl
push
and
jmp
add
mov
push
lret
push
lret
xchg
add
push
pusha
xchg
rep
xor
xchg
ss
stc
xor
inc
orb
xor
mov
call
mov
lcall
xorl
mov
adc
fsubrl
jb
leave
insl
out
mov
xor
push
std
jecxz
rolb
dec
fcomp
sbb
xor
data16
adc
loop
push
in
mov
mov
mov
fcomps
mov
jecxz
mov
out
repz
mov
jg
pop
lret
fistl
jecxz
sub
and
pop
psrad
sarl
inc
jmp
aas
std
add
roll
je
fldcw
mov
add
dec
jecxz
adc
shll
es
pop
cld
add
pop
cld
jo
mov
imul
mov
jge
aad
dec
sbb
and
push
fcomp
push
sahf
or
inc
test
loop
jmp
sbb
cmp
fcomps
in
std
addr16
lock
adc
divb
in
add
sub
movsl
cmp
add
ret
and
test
mov
stc
push
xor
mov
cmp
test
addl
sub
cmp
outsl
popa
testb
sub
test
js
add
imul
fisubrs
popa
fiadds
cmp
jne
mov
inc
je
add
mov
cmpsl
fwait
xchg
pop
int3
incb
sar
push
lea
push
cmp
sub
adc
push
xchg
cmpsl
rsqrtps
stos
mov
mov
lret
sbb
add
stos
adc
out
inc
add
push
pop
add
push
dec
mov
inc
push
and
adc
fadd
dec
xchg
xchg
jne
jl
jae
pop
xchg
mov
add
sbb
jne
insl
hlt
lea
call
xor
mov
push
inc
ss
leave
out
cmpsl
lock
xor
out
lret
lahf
into
cmp
nop
dec
in
jb
dec
daa
lock
jge
xor
je
cmpsb
subb
ss
fbstp
stos
movsb
or
cld
push
fistpll
push
dec
stos
mov
add
add
add
add
and
mov
add
jle
fcom
add
or
test
popf
push
stos
test
scas
xor
cmp
xor
iret
xchg
hlt
arpl
pusha
push
lods
lock
filds
dec
filds
jmp
push
repz
aam
push
int3
ficoms
jmp
mov
mov
adc
sti
add
adc
mov
push
inc
icebp
cli
jbe
lock
adc
push
xor
add
sbb
hlt
mov
std
jl
test
ds
inc
adc
xchg
fidivrs
push
in
jmp
subb
je
mov
add
repz
out
xor
call
in
adc
pop
mov
jae
mov
pushf
jno
add
jae
add
xchg
in
adc
cmp
add
push
std
aad
inc
mov
adc
pop
in
mov
flds
out
lds
inc
ljmp
je
fidivl
jle
roll
arpl
push
jne
pop
inc
or
jno
push
setne
mov
add
movl
sti
push
inc
add
sahf
cmp
add
add
add
add
xchg
adc
xchg
movl
pushf
lret
adc
fdivr
pop
xchg
icebp
aas
push
lahf
sbb
pop
pop
shr
push
pop
xor
cmp
cmp
push
lret
push
pop
sti
repnz
movl
add
ss
inc
push
mov
dec
dec
pop
and
das
ret
pop
mov
insl
das
cmp
add
sub
cmp
mov
add
sub
cltd
inc
cmc
and
bound
out
cmp
leave
cmp
add
daa
or
gs
mov
fs
cltd
push
lods
xor
addl
out
push
xor
or
gs
cwtl
pop
pop
daa
sbb
daa
sbb
out
push
stos
out
push
jp
inc
sbb
sub
mov
adc
add
ficoml
xcrypt-cfb
cmpsl
fstpt
fstpt
aam
push
mov
sub
sub
out
scas
rclb
inc
push
push
fstps
call
pop
lret
out
pop
mov
mov
fnstenv
add
push
add
cs
lcall
sub
clc
mov
pop
pusha
pop
ret
cmc
pop
fwait
mov
pop
cmpsb
lock
add
dec
add
imulb
pop
xchg
mov
lcall
add
xor
sub
add
out
std
incb
loope
add
fldenv
clc
xor
push
movsl
adc
sub
aam
out
std
pop
mov
pop
xchg
adc
mov
mov
add
cs
mov
mov
inc
call
test
std
adc
jno
in
mov
fildl
lea
movsb
jne
jae
mov
inc
or
insl
lds
add
sbb
push
movl
jbe
cmp
xlat
call
std
adc
add
add
int
add
push
inc
cmp
lahf
xchg
adc
inc
sbb
inc
inc
cld
adcl
add
xchg
inc
mull
adc
sbb
push
rolb
mov
mov
add
inc
xor
push
pop
adc
leave
test
adc
mov
test
fdivs
xchg
aam
push
add
shl
add
push
not
jg
fcomi
xor
add
andl
popl
add
push
cmpsl
xchg
xchg
stos
sbb
lds
add
out
popf
fdivrl
pop
xor
jg
pop
sarb
fdivs
mov
gs
jge
shl
movsb
pop
fldcw
or
enter
xlat
arpl
inc
sub
das
nop
call
push
and
push
ror
cmp
lods
mov
dec
push
push
loopne
std
aam
daa
inc
jmp
inc
aad
out
pop
lock
sbb
pop
lods
mov
dec
std
cmp
iret
or
dec
jbe
adc
test
dec
js
in
fiadds
xor
gs
push
sub
add
push
jle
mov
jne
in
lods
neg
call
insb
add
lret
jb
leave
cld
fmull
add
cld
jno
clc
lods
mov
hlt
sub
inc
fistpl
or
cld
ficoml
sub
jmp
push
addl
dec
cs
add
insb
push
cmp
incl
push
out
cmp
cmpsb
pop
inc
add
stos
jb
cmp
mov
in
imul
je
cmp
incl
cmp
rorb
cmp
push
jle
das
push
mov
mov
add
daa
push
add
mov
jns
dec
ss
dec
inc
xchg
addl
or
push
pusha
stos
bswap
mov
jp
add
xor
and
mov
add
jnp
mov
and
inc
push
ss
jne
dec
das
aam
adc
scas
or
jne
bound
add
pop
jmp
das
jb
xor
aas
idivb
xor
inc
inc
imul
xor
cmp
add
stos
xacquire
push
ss
dec
fdivs
aad
jl
and
dec
inc
outsb
aam
leave
cmp
and
and
aaa
jmp
incl
sub
jmp
hlt
rcll
out
mov
cmp
cmp
arpl
push
shll
leave
ret
sarl
test
add
and
adc
popa
add
add
push
insl
je
rcr
fs
loope
mov
scas
arpl
push
movsl
inc
icebp
loop
inc
adc
mov
xor
add
imul
aas
add
ds
jmp
dec
and
push
shlb
and
jmp
shrb
or
pop
icebp
push
pop
or
add
sub
mov
adcl
cmp
ret
sub
sbb
out
std
pop
je
pop
je
lods
jl
adc
or
jne
sub
rorb
jg
cmc
pop
jno
adc
leave
popf
push
mov
in
cmp
push
xor
or
js
push
movsl
ret
push
cs
sub
add
das
add
add
sub
std
mov
inc
adc
test
sub
add
sub
rclb
jne
dec
in
or
add
pop
inc
repz
add
xchg
sahf
inc
jno
xchg
jbe
int3
lret
add
push
mov
sbb
ret
push
movl
fcmovnu
cmc
add
fadd
jmp
lods
loopne
add
gs
add
lds
pop
push
mov
jg
or
pop
jnp
imul
mov
out
jp
js
dec
clc
sar
ficoms
ds
xchg
jo
push
ljmp
sub
add
push
inc
out
jmp
add
cmpsl
push
ljmp
or
or
push
cmp
inc
into
add
push
mov
cltd
scas
shl
sti
push
insb
out
test
in
repz
insb
out
sub
pop
add
cmp
lret
clc
or
movsb
roll
enter
xchg
xor
outsb
dec
mov
mov
mov
aam
cld
cmpsb
sti
mov
adc
fdiv
je
cli
lcall
add
xor
inc
jno
pop
adc
sti
mov
frstor
jnp
dec
inc
pop
jb
enter
lock
popl
test
jno
fdivl
xor
xlat
add
adc
push
mov
push
xor
jmp
xor
jmp
stos
lock
ja
push
mull
insb
push
add
js
jg
add
sti
test
adc
imul
clc
mov
je
pop
jg
call
mov
fists
gs
fcomps
jmp
call
data16
adc
and
gs
add
stc
push
call
sarb
sub
call
push
lahf
jno
rcr
xchg
add
ja
imul
xchg
call
lea
push
inc
push
movsl
pop
jne
push
sbb
add
or
fadds
out
mov
sarb
arpl
imul
je
imul
mov
std
rclb
jbe
sub
inc
mov
add
inc
jne
stc
push
inc
xchg
mov
lea
xchg
inc
adc
or
push
push
fadds
cmp
adc
xor
cmp
mov
push
flds
aas
fldl2t
xor
inc
mov
and
cmpl
sbb
xor
inc
andl
push
fidivl
push
into
push
jmp
mov
push
insb
jbe
addr16
fnclex
int3
dec
insl
and
sub
lods
int3
rcll
mov
icebp
jl
xchg
mov
stos
mov
push
enter
add
add
faddl
movsb
mov
push
cli
mov
std
shl
std
into
pushf
arpl
jmp
inc
inc
pop
fisubrl
std
cmpsb
push
popa
mov
add
add
add
add
addb
lock
rorl
jmp
popa
pusha
push
xorl
mov
mov
in
aas
movl
aas
mov
and
repz
add
and
xchg
dec
add
add
dec
in
int
call
test
cmp
mov
add
sti
jne
mov
call
out
mov
lea
test
lcall
cmp
push
cmp
push
imull
rorb
jne
add
call
rcrb
xlat
mov
mov
addr16
xor
pop
or
das
add
and
mov
push
mov
add
jo
add
cmp
push
pop
scas
add
mov
mov
push
sti
or
push
push
cmp
inc
pop
xchg
add
mov
xchg
dec
push
xchg
push
xlat
cmpl
push
xlat
add
lret
push
clc
dec
sti
adcl
xor
xchg
add
mov
mov
outsb
sti
std
add
sbb
pop
mov
outsl
cmpsb
loope
xor
mov
shlb
popa
mov
adc
xchg
mov
fiaddl
incl
adc
inc
add
xor
leave
arpl
popf
sub
inc
dec
aaa
bound
mov
cmp
leave
xchg
cld
call
xlat
xchg
ret
add
push
xor
in
bound
mov
imul
lds
add
jb
lds
lret
out
enter
pop
scas
dec
or
add
add
lret
jae
fildll
bound
dec
in
push
xor
cmpsb
dec
je,pn
iret
lods
clc
in
pop
lret
scas
std
jae
insb
adc
pusha
std
fdivrl
inc
jmp
add
add
add
xlat
jne
std
mov
call
gs
xor
out
lds
add
adc
add
xor
jae
mov
pop
pop
adc
aam
mov
sti
dec
fcmovnbe
mov
das
rol
ret
pusha
xchg
sti
iret
clc
adcl
push
in
and
mov
daa
xchg
add
addr16
cmc
ja
dec
mov
mov
push
out
push
and
je
inc
add
pop
and
mov
and
mov
push
adc
sub
rcrb
push
xchg
push
and
xor
jmp
addr16
or
test
mov
test
mov
add
adc
xchg
sbb
and
add
add
xchg
xchg
sbb
add
flds
add
mov
push
int3
xchg
sbb
xor
add
xchg
xor
and
sbb
adc
and
push
lahf
add
ret
add
mov
inc
add
test
mov
mov
pop
adc
add
stos
sub
sub
add
fdivl
lods
mull
mov
out
and
pop
test
add
cmp
rorl
imul
jb
stc
test
xchg
mov
push
stc
fsubr
insb
fstp
xor
add
out
push
pop
call
add
jmp
push
sub
mov
push
gs
lea
pop
push
insb
push
and
add
add
jb
popa
mov
add
or
insl
pop
lds
inc
sub
fcoms
push
add
jmp
push
ret
adc
inc
jo
shrl
push
fs
hlt
push
and
inc
and
adc
out
andl
push
mov
fstl
adc
push
aas
ds
hlt
fiadds
add
cmp
cld
pop
inc
jmp
inc
mov
lods
stos
cmp
mov
lds
mov
adc
and
sub
jecxz
sti
das
add
mov
gs
mov
imul
call
xlat
loope
mov
pop
inc
arpl
jne
aam
mov
xor
or
add
jo
decl
das
mov
pop
pop
pop
xor
adc
in
in
adcl
in
fs
dec
and
mov
cmovo
jne
push
mov
sti
shll
call
xorl
call
or
adc
mov
xchg
aaa
pop
fldl
xchg
loop
cmp
add
dec
add
mov
out
xlat
add
fimull
incl
jbe
andb
add
push
fdivs
push
fmuls
sbb
xchg
xlat
hlt
jae
dec
inc
and
repnz
adc
ljmp
lea
call
lahf
xor
xor
stc
jle
loop
mov
add
add
add
loope
test
dec
lods
imul
xor
jne
out
int
call
sub
sti
add
adc
or
mov
pop
fsub
xchg
pop
dec
sub
or
mov
push
jns
pop
add
mov
pop
sub
lret
cmp
imul
and
cmp
jno
imul
pop
push
add
sub
add
push
xor
add
das
add
push
stc
adc
outsb
xor
cmc
ss
cld
std
outsb
cld
push
orl
ficompl
dec
or
aad
or
push
js
add
lret
imul
out
je
lret
jmp
pop
fadds
adc
je
xlat
imul
add
add
add
pop
std
jge
adc
out
xor
jmp
xchg
xor
es
daa
cmp
dec
push
decl
cmp
xor
loopne
cwtl
call
pop
call
cmp
sbb
inc
addb
push
cmp
rorb
add
fcoml
test
xchg
test
ds
and
cmp
sbb
push
addl
inc
ret
je
push
push
mov
cmp
adc
std
je
pop
add
js
mov
call
mov
or
mov
or
mov
jg
inc
xor
push
inc
sbb
and
xor
mov
push
enter
adc
adc
inc
and
enter
xor
add
fiaddl
fimull
adc
add
das
dec
mov
insl
and
leave
jne
cmpsb
in
xor
dec
out
std
add
xchg
add
loopne
inc
dec
aad
xor
xor
add
sbb
inc
mov
jmp
sarb
sub
fmul
jg
xor
jl
sub
add
jbe
xchg
xor
add
sarb
ficomps
inc
out
inc
filds
pop
imul
push
pop
enter
xor
pop
into
jbe
fstpt
push
icebp
mov
pop
xchg
fildl
add
jbe
xchg
sbb
push
xor
pusha
insb
icebp
push
mov
add
xor
icebp
ret
add
cmpsb
add
cltd
mov
stc
add
mov
cld
cmp
or
push
sbb
mov
fcoml
inc
adc
mov
lock
orl
jbe
insb
sbb
push
add
add
inc
or
cmpsl
add
sub
bound
and
inc
mov
cmpsl
dec
in
hlt
je
sti
insl
and
or
push
add
popa
inc
or
mov
add
inc
push
mov
je
pop
sbb
lds
add
mov
cmp
xor
push
lret
jno
adc
test
call
jb
add
addl
ljmp
cld
add
lret
movb
in
das
lret
sti
push
add
add
mov
xor
call
add
mov
data16
das
push
mov
clc
sti
iret
jl
push
mov
xor
mov
std
cmpl
stc
orb
jp
les
fdivr
daa
and
jne
std
push
push
rorl
ds
or
idiv
push
inc
and
ds
push
stc
scas
or
out
inc
and
add
jno
je
and
leave
out
adc
xor
adc
pusha
loopne
scas
enter
dec
jg
sahf
enter
flds
xor
roll
add
xor
xor
xor
inc
lret
daa
cmp
rolb
mov
ja
stos
mov
mov
popf
adc
fcmovnb
ja
add
add
xchg
adc
or
dec
sub
sub
sub
cmp
cld
inc
out
lds
bound
sbb
cmp
sbb
enter
mov
cmpsl
add
xor
add
pop
jb
and
add
pop
movsl
jl
sub
mov
add
inc
std
bound
dec
mov
jl
pop
pop
call
cmp
mov
andl
pop
and
sub
jl
idivl
add
imul
jae
and
xor
mov
mov
or
lods
push
inc
notb
mov
xor
sbb
jp
and
sub
add
add
mov
test
add
sbb
inc
js
fs
pusha
sub
sub
jo
sbb
and
cltd
pop
add
pop
push
add
sub
jl
xchg
test
popf
sub
clc
decl
xor
adc
push
cs
add
and
popa
clc
add
je
dec
xchg
fistl
mov
add
je
test
xchg
mov
mov
adc
leave
fiadds
into
aad
inc
push
aas
and
lds
lret
fidivrl
push
inc
inc
and
push
aaa
adc
dec
add
fs
inc
push
inc
outsl
or
xchg
icebp
std
ss
pop
neg
and
ljmp
test
add
jbe
push
dec
icebp
std
mov
add
jle
xor
lret
cmp
or
adc
bound
add
or
out
add
or
adc
xor
dec
fmul
mov
jle
mov
std
outsl
xchg
ss
mov
jo
cmp
pop
push
xor
mov
loop
push
jo
mov
mov
jo
jl
and
inc
mov
andl
mov
jmp
subb
inc
push
push
test
fdivr
imul
xchg
pop
xchg
xlat
outsl
fs
testl
add
inc
adc
and
aam
mov
test
add
pop
xchg
test
std
mov
add
adc
add
std
push
or
pop
push
outsb
mov
test
push
popa
mov
or
sar
mov
ficomps
mov
and
cmp
xor
pop
push
mov
inc
push
sub
cmc
adc
cmp
add
cmc
cld
adc
fs
add
adc
je
and
xor
add
add
je
mov
jno
mov
test
test
test
mov
push
lea
jno
sub
imul
push
enter
repz
push
sub
inc
sbb
jno
incl
pushl
push
jmp
and
pop
aaa
loope
stos
and
push
jae
jg
mov
in
sub
aam
mov
add
add
add
push
lcall
mov
in
cmc
ss
jo
pop
sbb
adc
or
cld
daa
push
leave
add
inc
push
or
popa
xorb
sub
pop
add
mov
std
mov
shl
in
inc
add
cmp
adc
push
and
or
and
add
stc
dec
std
jl
xor
jmp
inc
jmp
inc
sub
cmpsl
and
aad
out
out
sbb
jo
pusha
xchg
mov
ret
bound
inc
fmul
or
cmp
cmp
clc
cld
mov
lahf
bound
jp
mov
std
or
add
mov
cmovo
push
out
mov
push
enter
mov
out
sbb
inc
push
push
lea
push
test
fsubrs
dec
mov
or
cmpsl
jo
std
cmpsb
sub
imul
jl
aaa
and
cmp
cmp
insl
or
leave
leave
inc
jle
mov
subl
pop
sub
push
jb
pop
call
mulb
test
add
add
xorl
or
shlb
fsubs
xorl
sbb
pushf
pop
inc
mov
cmp
add
sub
cmp
std
pop
inc
pop
std
push
adc
jo
das
mov
adc
call
out
jmp
int3
jno
gs
push
lret
jno
push
sub
add
ja
call
scas
clc
incl
add
fcoml
inc
mov
popa
xchg
add
shlb
mov
adc
insb
add
inc
int3
sti
xorl
je
shll
add
mov
adc
pop
or
sub
je
mov
cmp
call
stc
adc
jbe
les
call
add
add
add
xchg
pop
pop
lret
or
add
daa
mov
pop
add
jle
loopne
int
pop
pop
ficoml
or
push
daa
int3
cmp
add
cmc
test
cwtl
pop
adc
cld
xchg
sbb
in
mov
jmp
pop
dec
jl
adc
and
sarb
add
aaa
push
add
fisubl
mov
push
inc
push
and
outsl
add
and
into
sbbl
addr16
popa
inc
add
or
xchg
and
sti
sub
in
repz
pop
sbb
inc
xchg
cmc
xor
mov
outsl
mov
add
add
dec
xor
ret
adc
fisttps
jne
jb
xor
out
adc
jo
jmp
shrb
subl
mov
mov
jmp
mov
dec
cwtl
sbb
push
xor
and
pop
and
pop
movsl
pop
mov
push
mov
pop
xor
bound
push
add
add
pop
cwtl
out
xchg
push
xor
aad
cmp
dec
mov
mov
mov
aas
inc
jmp
pop
mov
jmp
dec
add
add
add
mov
je
mov
jnp
das
clc
cmpxchg
fwait
or
movsl
mov
call
jbe
add
xchg
adc
int3
jae
mov
and
add
clc
arpl
jmp
mov
inc
and
mov
inc
add
mov
mov
jo
xor
mov
adc
movsb
push
adc
stc
or
push
dec
mov
test
push
jmp
cltd
loopne
cli
xchg
add
push
ds
mov
int
sbb
fstps
push
push
sub
add
pop
sub
int3
dec
sub
pop
sub
pop
jp
push
icebp
fwait
or
cltd
jo
cltd
add
xchg
std
and
pop
jl
push
add
sahf
outsb
ret
dec
ds
fidivrl
lds
mov
add
incl
push
push
add
flds
call
pop
push
mov
pop
or
xor
sbb
add
leave
icebp
loop
jge
wrmsr
jecxz
out
push
or
push
dec
cwtl
add
push
xor
dec
xor
dec
xor
subl
fsubrs
or
gs
stos
fistpl
push
mov
or
push
dec
add
mov
insb
std
out
add
test
aas
insl
cmp
or
dec
addr16
dec
xor
clc
add
sbb
xor
pop
test
das
add
aas
or
jb
cltd
inc
movsb
push
xor
adc
call
call
xor
rcr
add
fnstenv
stos
dec
xor
add
dec
push
jnp
mov
stos
std
bound
cwtl
push
lea
subl
xor
xchg
add
jo
push
test
addl
pop
jb
add
push
js
std
insb
xchg
sbb
add
js
add
cmp
ret
push
mov
cmp
pusha
sti
adc
mov
or
insb
inc
push
movsl
testl
add
mov
js
mov
jne
jl
cmp
inc
hlt
pop
call
test
add
push
jno
push
cmp
rcrb
ss
mov
mov
je
mov
test
add
adc
jno
xor
cld
jg
add
pop
jne
mov
call
push
out
out
push
xchg
jns
or
push
ret
and
xchg
inc
or
pop
push
or
dec
sbb
cs
add
add
fdivr
push
mov
inc
dec
in
lds
push
pop
in
shlb
jg
or
lea
and
push
rol
fnstcw
push
and
adc
popa
das
sbb
pushw
push
cmp
enter
pop
xor
inc
or
push
loop
fisubl
cld
in
mov
stos
pop
add
xor
lahf
inc
push
xor
jne
rol
inc
lods
stos
add
pop
pop
out
enter
cmp
bound
iret
jnp
xor
mov
aaa
arpl
stc
inc
testb
cmpsl
cmp
inc
cwtl
lahf
adc
jb
mov
mov
ljmp
cli
ljmp
loopne
ljmp
push
sub
pushw
jo
gs
cmpsb
std
jmp
adc
sub
das
add
jnp
and
filds
std
cmp
inc
jmp
push
xor
jmp
cmp
clc
cwtl
jmp
mov
xor
pop
inc
out
shlb
add
dec
mov
add
and
call
add
add
add
add
dec
adc
push
sbb
dec
xchg
adc
pushl
push
inc
js
add
push
clc
xor
adc
lcall
sub
add
xor
sub
push
lods
sub
cmp
add
pop
ds
pushl
add
call
add
add
add
add
out
adc
xlat
cmp
or
jne
add
call
push
sub
nop
movsb
jg
out
lods
test
sub
add
outsb
add
cmp
add
shll
push
les
sbb
push
and
push
or
jle
std
jae
inc
paddusw
push
pop
jnp
push
adc
jge
loope
add
enter
add
aad
sbb
leave
xor
int3
or
add
sbb
sub
push
or
je
icebp
mov
push
cltd
je
adc
and
pushf
lods
adc
xor
cmpsl
mov
mov
add
lcall
insb
push
inc
out
xchg
cmp
addr16
sub
mov
out
add
fisubrl
movsl
dec
cmp
xor
jne
pop
inc
insl
pusha
mov
lds
lea
test
out
lea
in
in
out
lea
movsl
out
out
lea
mov
dec
and
out
out
lea
sub
mov
mov
push
mov
imul
cld
jmp
add
push
mov
mov
ss
call
bound
dec
adc
jge
call
push
xor
inc
jo
jb
push
ret
decl
jmp
xor
leave
sbb
call
shll
dec
jmp
dec
lods
mov
push
xor
shrl
jae
xchg
mov
and
xor
mov
add
add
testl
sub
std
ljmp
sub
aas
add
xchg
mov
push
sub
add
pop
xchg
push
call
cmc
mov
std
pop
jnp
add
sub
stc
incl
scas
enter
sar
push
mov
mov
das
sti
jne
mov
in
add
or
cmp
push
push
fsubrs
sar
aam
mov
xchg
imul
mov
xchg
add
aam
leave
sti
mov
push
dec
jae
jle
push
or
add
add
xchg
xchg
inc
xadd
add
cmp
add
mov
outsb
adc
xchg
addr16
lret
rcll
add
cs
add
shll
jnp
xchg
dec
adc
cmp
in
sub
dec
std
push
and
or
mov
ror
dec
jb
xor
pop
pop
call
and
fimuls
mov
dec
or
adc
sub
sahf
sbb
xor
add
inc
jecxz
pop
xor
shlb
sbbb
push
push
pusha
repnz
xor
out
pop
icebp
out
push
xor
add
sbb
dec
and
adc
jp
push
lahf
pushf
fildll
pop
dec
add
mov
rclb
arpl
push
jg
cwtl
punpckhwd
sbb
jmp
dec
sub
std
shlb
mov
call
xor
call
add
push
xor
call
ja
ret
add
sbb
push
shll
int3
adc
test
icebp
xlat
adc
jmp
push
stc
jae
hlt
aas
mov
push
test
inc
lea
rcrl
sbb
xchg
xor
rcrl
hlt
add
cmp
insl
out
push
popf
add
mov
add
cmp
add
inc
int3
clts
hlt
lea
gs
arpl
out
jg
les
mov
add
cld
addr16
add
movsl
inc
adc
xor
inc
jo
rorb
or
add
adc
imul
add
xchg
sahf
cld
jne
adcb
sub
incl
in
cwtl
std
jae
add
cli
push
push
shlb
xchg
mov
push
jl
setno
push
pop
lret
push
xchg
xchg
fcoml
aam
or
fnstcw
xor
rcl
cmc
mov
jnp
push
mov
or
sbb
or
push
adc
and
xchg
testl
jmp
ds
jg
add
fnstcw
add
add
add
das
xchg
adcl
icebp
push
cmp
add
push
or
xor
add
fld
mov
sarl
mov
sbb
xchg
pop
push
or
idivb
and
adc
fwait
out
xchg
push
sti
mov
es
inc
testb
add
mov
inc
push
add
add
jmp
iret
lods
mov
call
call
push
mov
add
xor
xor
inc
jg
lea
repz
xchg
adc
and
push
xchg
adcb
add
lar
mov
jae
push
push
or
jns
std
pop
aas
xor
xchg
xor
bound
dec
lds
pop
fnstenv
cmpsl
push
mov
dec
cmpsb
ret
add
movsl
push
xchg
xchg
add
pop
xor
ret
push
dec
rclb
cmpsl
gs
and
mov
xor
mov
cmp
call
ror
jae
xchg
repz
dec
xor
jmp
ljmp
std
add
xor
jg
push
in
push
and
fdivr
incl
inc
and
jbe
test
add
sbb
dec
call
insl
insl
or
gs
push
xchg
jmp
je
inc
add
sub
jg
fs
push
add
sbb
idiv
dec
rcrb
les
mov
push
push
pop
mov
jg
sbb
fs
std
rclb
dec
les
call
add
add
add
fwait
rolb
xchg
push
add
adc
std
cmp
repnz
push
test
push
xchg
orl
and
add
rcrl
jbe
test
add
and
jb
or
cmp
lock
add
inc
cld
add
js
fcoms
subb
adc
xor
xchg
inc
ret
add
ja
push
pop
xchg
mov
ret
inc
xor
popa
je
pop
movsl
movsb
ret
andl
daa
push
pusha
push
jb
ja
lods
roll
xor
xchg
pushf
push
cmp
in
loop
or
adc
and
inc
std
add
add
sbb
out
rcll
out
and
adcb
mov
jbe
sub
push
out
std
jno
and
push
orl
outsl
inc
sbb
add
pop
jns
lds
xchg
std
mov
sbb
mov
mov
mov
mov
add
cli
popa
xorl
push
inc
push
mov
jmp
add
imul
jbe
cmovle
push
pop
jmp
imul
imul
inc
das
lret
jae
jmp
pop
pop
lahf
call
adc
mov
push
das
lret
je
movzwl
inc
jmp
inc
test
add
les
jg
sub
test
mov
pop
pop
cmp
lds
adc
test
push
mov
adc
rolb
cs
jmp
mov
sub
jg
pop
sub
jg
hlt
cmc
or
mov
push
or
xor
roll
mov
jecxz
mov
clc
mov
mov
push
cmpb
fdivs
roll
call
lcall
pop
and
enter
xchg
adc
mov
xchg
add
lea
xchg
xchg
lahf
jnp
adc
inc
add
lret
bswap
das
mov
outsb
hlt
inc
xchg
inc
jne
add
faddl
testb
push
xor
add
dec
insl
in
imul
out
xchg
sbb
xor
cmc
xor
inc
mov
add
mov
sti
dec
sbb
out
ds
enter
inc
push
test
pushf
add
pusha
daa
inc
adc
inc
gs
movhps
ret
adc
scas
cmp
fadds
jnp
pop
cmpsl
inc
add
ficompl
mov
mov
test
inc
mov
mov
pop
or
adc
jmp
orl
call
lea
ret
dec
cmpsb
inc
pop
jge
inc
dec
sbb
lods
sarb
xchg
push
je
mov
sbb
xchg
std
insl
adc
add
xchg
std
gs
or
xchg
insb
call
out
out
cmp
insb
or
mov
push
sub
mov
jbe
imul
and
push
push
imul
push
outsl
xchg
mov
add
repz
out
mov
shrb
push
cltd
mov
shll
mov
xor
push
hlt
adc
add
add
add
add
push
inc
add
push
and
mov
decl
jmp
push
add
fwait
addr16
loope
sbb
push
subl
add
idiv
adc
loop
add
sbb
ret
aad
lret
clc
pop
pop
sbb
mov
and
adc
int
push
push
ret
adc
inc
add
mov
repz
adc
or
sbb
mov
repz
xchg
push
inc
pushf
jmp
inc
dec
ds
je
iret
dec
sbb
mov
inc
inc
or
add
test
pop
movl
mov
jnp
fcoms
cmpsb
jbe
aas
push
xor
call
lock
gs
test
mov
add
push
in
out
push
mov
inc
push
xchg
hlt
jmp
out
nop
sbb
pop
lds
aam
inc
lock
sbb
insl
fdiv
shll
mov
cmp
mov
push
hlt
out
cmp
mov
xor
nop
mov
and
mov
leave
std
repnz
dec
xor
add
mov
push
add
push
xor
je
mov
push
sub
icebp
pop
mov
and
jmp
std
cmp
bswap
jmp
in
sahf
push
mov
sbbb
pop
stos
pop
xor
mov
xor
repz
xlat
inc
pop
fmull
inc
stc
push
loope
jb
cmp
jmp
test
add
mov
jb
int
call
bound
add
xorl
fbstp
sbb
lahf
mov
add
sahf
cmp
inc
adc
out
inc
or
out
daa
push
les
inc
add
pusha
call
lea
jae
add
insl
je
ret
loopne
lea
orl
pop
aas
test
cmp
and
add
les
mov
push
stos
orps
insb
sub
xchg
xchg
xchg
push
cwtl
cmp
rcrl
add
mov
sbb
push
icebp
pop
pop
aaa
adc
mov
mov
sbb
add
mov
adc
lea
add
rcl
adc
mov
adc
hlt
mov
xchg
xchg
add
or
mov
sbb
push
stos
repnz
ss
loope
xchg
xchg
xchg
popf
aaa
cmpl
xor
push
out
dec
pop
xchg
cmpsl
enter
adc
jecxz
or
out
mov
jno
rcrb
addb
stos
jmp
xchg
adc
test
add
and
add
daa
outsl
loope
roll
ret
inc
mov
add
adc
fcomi
lcall
and
jmp
mov
loope
sub
pop
lock
adc
insl
mov
add
jns
jnp
test
lds
add
aad
push
fmulp
mov
or
in
rolb
clc
in
mov
mov
pop
mov
rorl
jl
jle
out
jbe
add
lea
mov
out
or
addl
mov
cld
cld
dec
jb
mov
xchg
mov
std
aas
enter
add
lret
add
jg
sub
jne
aam
mov
xchg
mov
mov
aaa
mov
in
push
leave
test
dec
decl
jge
push
lcall
push
sti
mov
mov
clc
inc
jge
or
out
in
cmp
push
mov
push
jge
cmovo
inc
cld
call
add
mov
je
xchg
hlt
mov
mov
and
push
mov
fisubrl
adc
add
xchg
adc
sbb
jmp
flds
aam
xor
mov
add
cmp
mov
je
cwtl
daa
es
bound
adcl
cmpsb
fs
adc
xchg
test
push
xchg
add
mov
inc
push
xchg
popl
push
fisubl
push
push
and
jp
inc
les
sbb
inc
push
cmp
fisttpl
sbb
repnz
sub
movl
insb
les
mov
xlat
push
add
jmp
mov
repnz
mov
cmp
repnz
imul
mov
test
xchg
mov
mov
test
add
insl
cld
pop
and
push
imul
fcompl
ss
sbb
add
jmp
lock
mov
mov
add
add
pop
test
sbb
xchg
cmp
mov
push
mov
sub
aad
mov
inc
icebp
jo
inc
mov
repz
push
xor
cld
add
xor
or
das
pop
xchg
stos
push
xor
mov
ficoms
filds
lea
das
fildl
add
lret
scas
lret
sti
test
fs
xchg
push
sub
sub
in
sti
adc
add
cmp
ljmp
pop
aam
ret
xchg
adc
add
call
pop
mov
shlb
in
mov
sub
mov
xor
incl
call
add
add
add
add
xor
jmp
call
add
int
pop
or
ret
add
pop
lock
test
jbe
add
cmpsb
out
and
lds
add
push
xor
adc
or
cmp
test
or
mov
std
scas
push
and
xor
cmpsb
ret
add
movsb
mov
rolb
repz
add
enter
add
mov
adc
push
jge
add
stos
add
stc
dec
jge
sbb
roll
add
xchg
inc
gs
faddl
push
xor
mov
insb
addr16
xor
mov
stos
daa
or
and
or
addr16
pop
xor
das
mov
or
imul
call
add
add
add
inc
stos
cmp
xor
fucomi
out
push
lock
stos
sbb
fidivrs
xor
add
shl
push
sbb
pop
push
sbb
inc
push
cwtl
add
leave
cmp
xchg
sti
push
scas
aas
xchg
pop
das
add
nop
lock
jmp
dec
mov
pushl
ss
pop
dec
xchg
xor
icebp
add
push
cwtl
jecxz
jmp
cmp
movsb
fnstenv
into
inc
test
mov
icebp
lock
pushf
cmp
aaa
bnd
cwtl
xor
fidivs
je
cmp
sub
dec
jae
lret
add
mov
in
push
push
lods
push
sbb
push
sub
lcall
mov
jne
mov
clc
sti
lock
add
add
add
add
scas
xor
and
xor
push
jecxz
testl
out
mov
lock
or
mov
fiaddl
add
ss
leave
cmp
add
mov
cld
cmp
add
clc
fldl
or
scas
cmc
and
ret
add
xchg
call
jae
scas
cmc
sub
test
xor
add
outsl
inc
jno
sbb
lods
sbb
notl
sbb
jg
push
cs
fcmovnb
shr
sbb
out
mov
shll
add
rcll
or
iret
push
mov
shl
std
jg
mov
iret
fstps
icebp
add
push
call
xchg
xlat
cli
jnp
jnp
sbbb
std
add
jp
mov
ret
mov
out
sub
and
and
xor
mov
xorl
loopne
cwtl
repnz
xorl
movd
add
mov
subl
cmc
add
bound
inc
push
mov
mov
sub
pop
sub
mov
pop
sbb
lock
mov
sldt
rorb
mov
fstps
stc
inc
sub
aaa
jmp
andb
pop
ret
jmp
push
pop
sti
call
lret
fisttpll
jne
scas
jnp
push
cld
inc
push
and
pop
adc
int
es
cmp
fdivrp
xor
adcl
popa
lock
cld
push
jb
test
adc
in
rolb
pop
and
jae
jmp
add
add
add
sar
pminsw
mov
nop
xchg
clc
xchg
mov
inc
test
fdivl
mov
or
xorb
cld
or
mov
jp
lcall
inc
add
les
cmp
jns
test
pop
subl
jns
mov
int3
aas
jmp
pop
hlt
add
testl
add
decl
mov
and
add
cmp
dec
add
rolb
mov
mov
jmp
std
jmp
mov
and
adc
jae
or
cld
scas
cmp
push
bound
lds
dec
push
push
cmpsl
mov
inc
pop
inc
add
push
add
add
add
add
or
mov
and
jl
movsl
jno
std
adc
jle
xchg
and
orl
or
or
dec
jge
imul
aaa
das
shrl
fsubl
push
dec
test
std
pop
jecxz
inc
push
adc
jae
and
cld
xchg
aaa
cld
jg
pop
push
je
jle
pop
or
or
std
call
cmp
push
xor
add
add
add
fcmovnu
jno
push
fnsave
enter
popa
loope
mov
and
clc
andb
add
and
movsb
bound
dec
cmpsl
and
enter
inc
sub
into
fstpt
gs
xor
pop
add
lods
mov
cmpsl
and
shlb
xchg
das
out
fdivr
jbe
adc
jge
adc
jnp
add
xchg
xor
or
lock
cmp
sbb
incl
ret
bound
popa
je
addr16
adc
in
icebp
notl
pop
cmpsl
into
adc
jmp
sbb
add
push
xor
mul
add
scas
push
sbb
mov
push
sbb
xchg
add
push
stc
sti
jb
sub
cltd
add
push
subl
movsl
cs
jo
sub
jns
div
bound
scas
pop
data16
pop
jb
sub
mov
outsb
adc
jg
in
add
in
mov
orl
call
rcl
int
mov
inc
pop
cmp
push
push
push
inc
or
popf
dec
cmovo
out
dec
mov
cld
and
sti
lea
test
add
cmp
xor
sbb
cmp
movsl
add
inc
mov
jne
lret
pop
out
decb
add
cwtl
sar
xchg
lea
add
mov
mov
add
mov
sar
scas
jae
inc
call
xchg
stos
dec
adc
sub
mov
add
add
mov
shrl
or
add
sbb
fisttpl
mov
imul
jg
sub
or
mov
lods
or
test
insl
insl
mov
fcoml
push
mov
imull
lock
or
add
enter
movsl
das
mov
add
sbb
inc
sbb
add
cmpsl
add
js
scas
jge
add
sbb
out
jmp
movsl
pushf
cmp
push
pop
cmpsl
call
add
jmp
jl
jae
test
xor
jns
jne
dec
sub
add
call
dec
sub
jg
push
and
cmp
add
jno
ret
mov
add
add
add
add
outsl
std
sub
ljmp
jg
out
push
loopne
faddl
imul
push
inc
jmp
add
lods
rcrb
jmp
and
cmpsl
and
jmp
push
xor
vpmovq2m
jae
pop
call
mov
or
adc
std
ss
mov
add
add
add
add
subl
xor
add
push
xchg
bound
xor
fs
dec
add
xor
call
jg
and
lods
inc
push
jmp
or
pop
cli
xor
mull
shl
in
ret
push
mov
clc
inc
push
mov
push
jne
sbb
into
fbld
inc
repz
aaa
das
call
add
add
add
add
xor
test
inc
add
call
fdivr
js
sti
je
sbb
jle
lret
je
cwtl
lret
nop
and
add
fcomps
test
fcomps
aas
or
jge
cmp
rol
dec
jle
push
adc
fadd
dec
xchg
mov
add
inc
push
push
mov
mov
sahf
push
fidivl
pushf
adc
add
add
xchg
insl
stc
bound
add
fiaddl
ret
stos
jbe
inc
add
enter
mov
add
mov
orl
jo
cmp
sbb
or
pop
and
std
das
cmp
inc
scas
push
jbe
inc
test
cmpsl
sub
orb
fidivrl
sbb
jns
fdivl
add
add
add
add
out
adc
loop
push
xlat
sub
mov
test
jle
fidivs
xor
stos
jmp
fs
xor
add
notb
add
sub
add
movsb
adc
jmp
jl
sbb
jge
fst
das
pop
test
out
dec
mov
add
and
orl
add
sub
xchg
lret
or
test
add
loopne
and
inc
and
mov
jmp
mov
test
mov
and
aam
push
inc
jmp
cmc
cmpsl
inc
stc
pop
icebp
pop
push
and
sub
adc
push
clc
stos
shl
mov
jmp
fsubl
and
jmp
popa
sub
mov
add
and
add
in
jae
repz
xchg
xor
test
xor
mov
ret
inc
mov
ljmp
xchg
sbb
outsb
push
xchg
push
mov
or
cmp
sti
ja
faddl
xor
test
inc
xor
cli
dec
adc
repnz
xchg
cld
pushl
hlt
inc
push
imul
jge
lods
clc
add
add
add
add
aad
mov
mov
add
icebp
push
sbb
rcrb
xor
push
outsb
scas
push
fidivl
rorl
cmove
jns
mov
mov
stc
add
push
dec
pushf
incb
mov
adc
flds
xchg
add
popf
cs
pop
push
or
dec
loop
or
add
ret
lret
mov
add
rolb
jae
add
adc
inc
cmpl
add
push
mov
or
xchg
jp
mov
xor
aas
insl
sub
das
push
fstpt
jp
shrb
cs
imul
fsubr
out
pop
pushf
out
lret
add
jg
dec
jb
js
push
pop
add
cmp
mov
push
shrb
push
enter
cmpsl
fnstcw
ja
das
out
mov
jb
into
sti
cmp
fdiv
fidivrs
insb
lods
pop
fldt
subl
popa
mov
aas
pop
add
daa
das
adc
jl
cmpsl
cmp
outsb
and
sbb
sbb
sbb
je
push
lods
or
out
push
add
vunpckhps
ljmp
daa
subl
sub
ljmp
popf
add
and
sti
pusha
inc
sbb
cmpsb
dec
and
adc
jns
outsb
or
pop
xor
dec
or
push
xor
push
orl
and
or
add
daa
jno
mov
sub
pop
and
sub
ret
push
std
subb
add
cltd
lret
jbe
ror
add
sahf
inc
and
xor
push
push
outsb
push
call
mov
pop
ret
push
mov
clc
jns
or
clc
xor
pop
je
inc
jge
and
arpl
inc
movsb
xor
xor
add
lods
inc
and
and
and
flds
add
jl
int
add
fcom
faddl
aad
jne
push
pop
add
mov
dec
popa
rolb
mov
push
cmp
fimull
inc
add
mov
or
push
aam
and
sub
add
jne
loope
pop
add
add
lea
dec
sbb
xchg
or
call
xchg
dec
xchg
push
pop
xchg
add
push
xor
mov
pop
add
xor
pop
imulb
movsb
outsb
fs
jne
out
push
test
add
iret
test
lds
add
mov
jmp
inc
xor
inc
aaa
popl
add
insb
inc
insl
and
xchg
xchg
adc
xor
arpl
mov
sti
shll
js
test
add
xor
pop
xor
inc
mov
dec
mov
hlt
inc
sbb
mov
lods
testb
inc
mov
int
mov
add
jo
out
repz
jb
adc
ds
popf
mov
mov
ljmp
push
add
dec
jbe
or
imul
mov
leave
mov
and
push
cmp
test
add
fdivs
add
ds
xor
mov
jge
xor
or
addl
clc
xor
cld
cld
call
xor
inc
addr16
and
add
xor
xor
push
and
mov
jle
test
aaa
inc
pop
fs
test
add
repnz
and
pcmpeqb
push
imul
imul
xor
add
inc
test
sub
add
sbb
add
cmp
xchg
cmpsl
pop
add
insb
pop
or
std
repz
xor
add
pop
add
push
sub
or
fucom
xchg
push
pop
add
pushf
icebp
imul
xchg
inc
aad
cld
scas
xor
mov
aam
add
push
into
pop
and
pop
add
fcmovbe
out
push
pop
add
mov
add
push
pop
mov
rorb
add
insl
add
lret
testb
movsl
inc
mov
ficompl
sbb
or
mov
repz
out
std
js
push
add
ret
das
out
pop
adc
add
sub
or
cmpsb
nop
adc
jmp
add
outsl
testb
sbb
add
sti
ret
or
jno
xor
xor
and
add
cmpsb
bound
add
scas
sahf
dec
add
cmpb
add
divb
pop
nop
je
xor
push
push
mov
adc
dec
pop
sub
dec
pop
data16
push
xor
mov
in
pop
call
push
mov
mov
pop
shl
xor
sub
mov
dec
xor
mov
push
add
mov
mov
mov
mov
push
mov
pop
dec
add
int3
orb
sbb
ret
std
mov
add
test
in
pop
std
adc
mov
add
xchg
cld
adc
jae
sbb
call
xor
inc
push
insb
dec
jmp
or
add
insl
loopne
mov
push
push
adc
add
add
mov
jg
jmp
mov
and
scas
clc
incl
pusha
cmp
mov
sbb
cmpsb
mov
mov
push
push
lock
lcall
and
lds
push
rorb
mov
std
es
daa
lock
pop
in
lret
add
xor
fwait
std
test
in
mulb
test
aam
adc
fcoms
pop
lret
mov
mov
mov
sarb
xor
mov
addr16
test
xor
xor
inc
or
or
dec
pop
add
int3
mov
lods
inc
mov
lahf
test
cmpsb
pop
add
add
cltd
fcompl
add
divb
mov
pop
mov
xor
ret
xor
in
jp
dec
or
aad
fidivrs
das
out
lret
xor
fcoml
xchg
dec
fwait
int
idivb
das
out
push
add
lods
xchg
push
xor
repz
pop
mov
xchg
mov
stos
daa
adc
je
xchg
cmp
testb
les
dec
je
add
jge
mov
outsb
out
shrb
lds
push
mov
mov
arpl
xlat
stc
sti
sahf
sbbb
push
xor
stos
inc
inc
push
xchg
pop
xor
jmp
arpl
std
outsb
movsl
push
call
fsubs
popa
ljmp
jo
xor
movsb
mov
arpl
je
xor
push
add
fstpt
stc
pop
dec
push
sbb
call
xor
mov
out
arpl
roll
insl
ret
xor
test
add
movsb
push
cmp
push
or
scas
mov
sti
call
adc
fidivl
mov
popa
mov
scas
inc
mov
add
jnp
mov
gs
incb
stc
jo
inc
aas
or
pop
inc
add
lahf
xor
add
daa
or
cmc
cmp
out
push
pop
pushl
inc
or
imul
jl
push
push
add
mov
test
dec
or
ds
cmp
cmp
add
es
in
iret
pop
add
std
fsubs
cmpsl
inc
mov
std
out
shlb
or
xchg
add
add
jmp
mov
mov
dec
les
in
mov
xor
movsl
xor
inc
mov
aas
push
outsb
les
int3
inc
inc
test
xor
shrb
sbb
xor
add
dec
or
out
out
les
lods
pop
push
scas
xchg
shrb
jo
es
adc
cmpsl
push
into
sub
push
arpl
mov
push
jl
or
iret
inc
mov
jo
enter
adc
daa
push
ljmp
rorb
test
das
jmp
or
repz
jno
add
aaa
mov
cwtl
pushf
bound
add
inc
lods
pop
add
xor
fs
or
daa
adc
jmp
push
mov
sbb
push
lods
sarb
lods
and
push
xor
sbb
in
and
sbbb
push
xor
xor
mov
cs
gs
pop
insb
fmull
pop
sbb
fs
xor
mov
int3
and
add
push
push
and
adc
subl
cmp
rcr
cmp
loope
aaa
mov
call
xchg
add
mov
or
adc
call
mov
std
out
and
cmpsb
sub
inc
xorl
or
mov
pop
ljmp
in
scas
in
cmp
adc
jecxz
sti
ljmp
rorl
add
sub
fdivs
or
dec
and
jno
and
nop
cmp
sysenter
mov
je
push
xchg
imul
push
scas
xor
loop
add
int
add
adc
mov
xchg
add
adcl
adc
outsl
add
add
pop
cmp
imul
push
dec
jge
inc
int
add
xchg
xor
fucom
add
lret
testb
sub
cmp
fsts
test
push
leave
adc
inc
dec
add
rorl
add
movsb
or
inc
cmpsl
xchg
divl
mov
stos
pop
jle
in
xchg
sbb
int
stos
cmp
call
filds
add
test
sub
lods
dec
call
push
xor
fnstenv
push
roll
add
adc
fadds
sub
outsb
add
stos
ja
pop
in
xchg
jge
xlat
cmp
sbb
test
out
dec
mov
adc
stos
sub
mov
push
add
in
add
xor
ficoml
push
pop
sub
push
jb
mov
add
dec
and
push
xor
push
std
mov
push
ss
mov
call
push
pop
std
sbb
aad
call
jecxz
fstp
into
in
call
push
out
xchg
shlb
add
sub
rorb
add
adc
aad
jmp
add
lret
push
inc
adc
mov
int3
push
add
lock
mov
gs
xor
add
mov
repz
dec
in
sub
add
faddp
push
rclb
dec
call
cld
jae
test
sub
div
ljmp
and
or
add
xor
push
fiadds
push
add
les
add
mov
sar
clc
imul
and
jno
add
dec
call
push
lret
ret
or
push
xor
jae
jno
push
test
lret
and
push
adc
mov
push
jns
cli
incb
rorl
and
adc
cltd
sub
push
rol
call
add
add
add
add
nop
std
aad
adc
aas
push
dec
add
stc
mov
add
adc
in
push
dec
add
mov
sbb
jns
sub
dec
add
xchg
xor
jle
adc
pushf
lea
nop
int3
pop
dec
mov
test
cmpsb
mov
nop
pusha
dec
pusha
jge
xor
add
add
cmpsb
xor
cmpsl
add
xchg
inc
out
enter
rorb
cld
or
xor
mov
sbb
out
push
fucomip
int3
mov
and
sub
popa
add
cmpsl
lret
or
iret
jp
lods
sub
mov
cld
lret
outsb
and
sub
aam
add
ljmp
ljmp
add
add
add
add
movsl
fcoms
push
std
mov
jp
ret
decl
push
pop
add
xlat
ficoms
insb
or
or
mov
call
sbbb
add
xor
mov
pop
jae
shr
jmp
lds
jae
cwtl
js
cwtl
lea
add
je
je
add
jg
hlt
push
mov
jno
outsl
cmp
call
jb
sti
jne
mov
mov
pushf
mov
in
mov
push
inc
push
mov
jle
call
hlt
insb
je
dec
cmp
cmp
pop
cld
jne
xlat
inc
or
adc
xor
cs
jmp
mov
add
or
ret
add
arpl
xchg
mov
sub
mov
push
aaa
sbb
push
inc
add
sbb
hlt
mov
add
and
add
push
subb
cli
mov
into
xchg
xor
faddl
int3
rcrl
std
inc
jmp
aas
push
int3
ret
je
int3
test
xchg
inc
mov
jmp
ret
je
int3
test
je
mov
add
bound
push
lret
shlb
or
or
push
fmul
xchg
sti
inc
outsl
xor
xchg
xchg
mov
lret
sarl
test
test
sub
jae
mov
fadds
xor
jle
adcl
sub
popa
push
push
fdivr
cmp
es
leave
cs
push
dec
xlat
les
pop
jmp
push
xor
add
mov
push
add
out
push
movsl
lods
movsl
and
out
push
clc
push
dec
and
sbb
clc
mov
dec
pop
xchg
stos
and
dec
xor
add
pop
inc
sub
repz
stos
xor
sarl
add
cmpsl
pop
andl
add
sub
call
faddl
std
xchg
outsl
jae
push
sub
sbb
inc
insb
incl
add
push
jae
dec
repz
mov
ficoml
call
xchg
sub
xchg
daa
inc
dec
mov
xor
std
pushf
mov
testb
and
test
mov
loope
and
push
test
and
pop
xor
lret
pop
inc
or
and
jno
out
inc
adc
add
add
icebp
mov
add
sar
lock
adc
sbb
decl
lock
fs
in
sbb
and
lcall
xor
addl
mov
and
in
mov
add
pop
cmp
inc
push
sub
lods
mov
push
addr16
cmp
mov
mov
lcall
adc
add
jl
cmpsb
add
mov
int3
cmp
sbbl
adc
pop
inc
add
pop
add
adc
mov
xchg
cmp
icebp
aas
push
cmp
jmp
and
or
xchg
sbbl
xchg
orl
inc
fwait
icebp
aas
push
int3
ret
je
lcall
add
add
add
aam
cltd
push
and
or
adc
inc
jle
fnsave
adc
clc
inc
push
stos
cmpsl
push
push
lahf
call
out
and
daa
add
outsl
and
fadds
andb
sbb
bound
inc
push
lods
cmpsl
clc
sarb
xchg
inc
daa
add
in
bound
cmp
ljmp
daa
push
add
inc
push
fdiv
inc
lock
test
in
sub
xchg
faddl
add
pop
int3
sbb
xchg
mov
push
xchg
sbb
ficoml
fs
fdivrl
out
push
adc
inc
adc
adc
fsubrl
aas
adc
add
dec
ds
xchg
xor
stos
inc
cmp
sbb
pop
push
dec
or
add
push
and
jmp
push
cli
out
pop
xor
iret
fdivp
pop
sarb
push
cmc
mov
push
rcrl
add
sbb
aas
jmp
adc
subl
adc
or
mov
lcall
lea
test
add
clc
xchg
mov
pextrw
insl
vandnps
jmp
add
sbb
push
xor
jle
data16
cld
cmp
inc
sbb
xlat
inc
test
sbb
adc
imul
add
sub
dec
cld
xor
or
dec
or
stos
jno
xor
push
push
sbb
incl
mov
je
fs
push
mov
imul
adc
jns
addb
add
icebp
cld
in
ja
jge
inc
add
xorl
scas
mov
es
adc
push
fisubrl
xor
hlt
cmp
pop
xor
jb
mov
or
jns
push
pop
pushf
adc
inc
cwtl
adc
push
cmc
cld
fs
sbb
int3
push
std
mov
adc
push
sbb
jnp
jae
sbb
add
add
add
add
das
minps
out
enter
xchg
cmp
fadds
cwtl
stc
clc
mov
inc
push
cmpsl
fs
dec
es
xchg
pusha
ds
or
hlt
shlb
add
adc
bound
push
fcoms
test
push
add
mov
out
jg
xor
add
ja
jg
add
xor
add
aam
fcomi
dec
xor
int
test
mov
call
sbb
sti
je
test
mov
adc
mov
ret
dec
nop
cmp
dec
xor
lds
mov
hlt
mov
jo
jmp
push
xor
in
add
push
push
cld
jecxz
sbb
add
adc
pop
lock
les
mov
shll
cld
jle
bound
push
xchg
xor
fdivrl
dec
push
cmp
pop
sub
adc
xor
xor
pop
jno
pop
add
jp
push
add
rcll
test
add
dec
mov
add
jmp
adc
add
jge
in
lea
push
push
mov
adc
dec
or
pop
cmp
add
sub
adc
add
std
in
inc
call
xor
shlb
in
adc
addr16
lea
popa
cld
jne
dec
adcb
inc
sar
fdivrl
push
rorl
push
mov
fsubrp
add
nop
mov
sub
add
add
add
add
mov
jbe
inc
or
xchg
mov
out
nop
add
jg
add
lldt
test
mov
pop
xor
or
outsl
jg
sti
add
push
sub
mov
ret
push
pop
in
and
push
add
cmp
jg
int
je
aam
mov
faddp
rorl
into
das
mov
loopne
ret
mov
add
ret
adc
iret
das
enter
scas
ljmp
rolb
adc
cwtl
out
push
loopne
notl
insb
mov
jbe
xchg
adcb
fldt
pop
shlb
out
sbb
mov
out
rolb
ror
lock
inc
xor
add
lea
add
adc
lahf
scas
popl
add
add
add
outsl
rorb
or
dec
out
rolb
add
pop
xor
xchg
dec
inc
adc
dec
std
jmp
pop
dec
mov
fcoml
cmc
cmp
push
push
popl
xchg
add
dec
push
insb
xlat
test
not
ffreep
movsb
push
hlt
call
push
xor
jmp
scas
inc
fsub
add
xchg
inc
fcom
dec
mov
jge
dec
std
sbb
dec
cmpsb
xchg
mov
in
push
fisttps
add
popl
call
pop
add
push
inc
test
xlat
sbb
mov
std
in
cli
and
ja
orb
leave
add
xor
inc
push
sbb
daa
cmc
add
stos
add
stos
aas
lret
add
and
add
xchg
add
cmp
cmc
jnp
std
push
fildll
sbb
push
sbb
ds
adcl
mov
adc
popl
adc
push
lret
ficoms
add
or
push
shl
lahf
fadds
add
adc
rorl
mov
add
add
push
xlat
mov
xlat
aas
sub
xor
pushl
sbb
xchg
add
push
push
clc
sbb
cmp
roll
pusha
lcall
fwait
sbb
push
pop
jne
push
pop
aam
fs
adc
xor
fildll
leave
dec
xchg
jge
fsub
and
fsubrl
out
bound
ss
add
iret
dec
out
dec
dec
popw
jne
cmpsl
add
outsl
fistl
add
mov
clc
cmp
add
jae
or
and
mull
push
push
push
mov
jmp
or
out
fildl
fsubrs
iret
test
dec
out
mov
out
xor
push
mov
add
add
fcoms
call
push
call
in
std
std
push
cmp
inc
jle
in
ret
or
leave
xor
sub
fiaddl
shrb
aas
ret
dec
mov
inc
call
mov
lock
mov
push
lret
out
add
jo
push
das
add
jge
inc
pushf
shrb
and
xlat
adc
das
add
dec
mov
push
outsl
fisttpll
and
std
hlt
sahf
and
sub
jle
mov
sti
adc
imul
or
mov
clc
xlat
aas
adc
cld
adc
aaa
inc
add
mov
lods
dec
add
mov
or
leave
adc
jb
sbbb
in
andl
add
pop
push
dec
inc
cld
adc
in
jmp
push
jecxz
push
mov
fstl
cli
cli
push
sub
sarb
dec
call
mov
xor
add
fists
and
mov
and
call
aam
lock
fisttps
and
cmp
add
add
or
divl
cmp
jp
add
imul
xchg
push
add
add
outsb
ljmp
add
push
aam
sti
add
jg
addr16
jmp
lahf
jp
push
push
jp
pop
push
sar
xor
add
hlt
pop
inc
lock
adc
lds
pop
fildl
push
xor
push
inc
jo
inc
push
xor
mov
clc
adc
cltd
mov
adc
adc
adc
jns
das
int3
inc
cmp
bound
push
nop
jg
inc
pop
jle
pop
sbb
inc
nop
fistl
xor
add
clc
lcall
add
inc
sti
and
inc
add
add
lcall
in
sub
and
inc
adc
lock
add
mov
loopne
xor
inc
jbe
mov
clc
aam
inc
test
jo
mov
sub
cmp
push
dec
bound
inc
push
adc
jae
fucomi
sti
outsb
dec
aam
test
xlat
out
sti
mov
mov
sbb
add
sub
inc
je
jbe
jo
jmp
xor
test
add
jae
aas
ret
push
mov
xor
pusha
push
mov
mov
call
mov
jae
xchg
lcall
lock
in
jae
out
xchg
incl
bound
jmp
std
les
test
int3
sbb
mov
pop
push
push
sbb
add
repnz
push
sub
mov
mov
les
sarb
mov
inc
add
ss
push
movsb
das
jmp
daa
inc
ror
mov
mov
test
inc
inc
fstl
call
int3
xchg
in
loop
arpl
push
std
pop
std
pop
aas
or
inc
inc
pop
xchg
out
dec
ret
lret
mov
inc
sbbb
push
inc
in
mov
and
add
add
add
dec
int3
cmc
add
roll
pop
fbld
sti
cmpsb
fidivrl
mov
mov
js
add
out
sub
add
mov
js
inc
xor
out
sbb
rcrb
loop
inc
dec
fadd
dec
lods
daa
lock
repz
sub
vmwrite
daa
add
outsl
push
add
rorb
or
and
xchg
xor
add
jmp
fsubs
add
jo
adc
into
leave
push
push
add
fiaddl
divb
gs
aad
shrl
mov
pop
shrb
imul
jmp
pushf
test
std
adc
insb
mov
mov
xchg
jl
push
les
std
xchg
sbb
in
add
mov
rorl
push
xor
daa
stos
adcl
std
push
push
loopne
mov
add
aaa
mov
dec
mov
cmc
jp
cli
sahf
pop
xchg
std
mov
das
and
hlt
push
xor
dec
cmp
push
inc
add
inc
data16
inc
data16
sub
pop
cld
add
les
lea
lret
mov
add
add
add
add
les
adc
test
add
dec
push
in
mov
jno
sub
jge
cmp
sti
inc
cld
mov
dec
sub
cmp
repz
leave
stos
daa
add
arpl
dec
push
arpl
out
mov
mov
push
cld
mov
dec
mov
rcll
add
sahf
jb
mov
test
xchg
fs
arpl
push
xchg
adc
dec
xlat
imul
mov
fnstsw
fimull
push
sub
sarb
mulb
mov
pop
cmp
insb
std
es
je
rolb
addr16
sti
pop
jnp
pop
sbbl
push
push
jno
test
sti
aaa
jb
lea
incl
add
jg
push
imul
into
push
cld
pop
outsl
pop
inc
push
jp
pop
pop
cs
push
xor
frstor
cmp
fadds
mov
scas
sbb
xor
sti
jle
popa
pop
rorb
add
jno
fdivrs
jb
push
loopne
inc
dec
loopne
mov
mov
out
pop
jp
sahf
jb
hlt
cld
ret
es
sbb
push
xor
add
stos
sub
mov
movswl
adc
aad
xchg
fs
notl
sub
or
or
mov
add
stos
cmp
pop
ret
add
jp
and
push
cmp
adc
cli
adc
xchg
cmp
rcl
icebp
loopne
adc
push
aaa
std
push
sti
bound
add
xor
and
xchg
scas
adc
cltd
sarl
stc
mov
xor
cld
dec
and
dec
outsb
or
and
xor
sub
cmp
ljmp
jbe
in
mov
inc
movl
add
xor
fsubs
jmp
cmp
add
add
sbb
jmp
cmp
call
or
daa
js
jno
aas
inc
add
mov
cmp
pusha
js
add
mov
jne
mov
add
jne
jo
mov
jp
mov
std
rorl
add
jmp
lret
mov
xor
icebp
arpl
out
mov
cli
push
push
mov
add
cmp
add
or
inc
dec
outsb
adc
add
rclb
sub
fwait
jp
push
insl
adc
ss
ret
push
add
les
adc
add
mov
mov
inc
cmc
add
push
jae
pop
clc
bswap
dec
outsb
jae
into
cmp
jl
outsb
push
popa
roll
add
mov
add
pop
mov
xor
sub
out
adc
lahf
inc
popa
xor
mov
xchg
call
sarl
and
jne
push
movsl
lods
outsl
inc
lock
daa
sub
xchg
ret
movsb
mov
testl
out
push
movsl
movsl
sti
mov
mov
notl
mov
mov
cmpsl
movsb
sti
inc
ret
adcb
jl
add
sub
xor
rclb
adc
loop
pop
dec
popf
push
cmp
test
jb
dec
idiv
shl
pop
jmp
xchg
dec
scas
stc
call
inc
dec
add
push
inc
or
call
xchg
xor
push
xor
filds
jbe
and
lods
rcl
scas
leave
inc
shlb
mov
add
cmp
inc
fldcw
xor
sub
mov
inc
add
cltd
and
dec
subl
inc
cmc
add
add
push
cwtl
std
push
adc
xor
jmp
sbb
stc
mov
xor
std
pop
adc
mov
mov
xor
inc
bound
sti
xrelease
bound
jne
mov
aaa
push
lock
xor
leave
cmp
add
add
push
stos
mov
sub
xor
sahf
les
adc
jae
jg
sbb
inc
sub
jno
pusha
add
jmp
scas
shlb
sub
outsb
std
bound
xchg
sbb
xchg
dec
iret
cld
fs
push
inc
push
ret
mov
mul
test
cmp
add
jle
and
push
add
ret
lahf
shrl
mov
push
mov
inc
push
je
push
out
pop
pop
mov
sbb
add
add
push
xorl
sub
sub
pusha
cmp
add
push
or
sbb
lcall
xor
push
jo
adc
add
add
add
adc
add
xor
aas
xor
add
add
jmp
push
xor
jmp
adc
jo
mov
sub
inc
mov
push
cmpsl
add
loopne
js
xor
fninit
cmp
and
test
push
xor
sti
iret
shrl
push
mov
push
lock
add
add
mov
ret
add
add
icebp
pop
and
inc
aad
xor
int
roll
sbb
cld
xor
xor
insb
lea
and
xor
jo
sub
sbb
xor
sbb
imulb
in
push
loope
jge
inc
or
sbb
sub
scas
arpl
add
fsubrs
mov
add
push
xor
lods
stc
das
std
mov
test
and
jne
jmp
shll
lret
out
repz
pusha
addr16
sbb
add
mov
subl
jb
jae,pn
sbbb
add
push
mulb
push
call
fcmovne
push
call
iret
adc
mov
pop
jle
mov
mov
push
add
sub
sub
jnp
add
popa
mov
push
das
and
mov
ret
add
pop
call
hlt
out
jae
aaa
xor
cmc
stos
das
dec
test
ret
push
dec
iret
cld
fs
adc
push
mov
sub
into
mov
inc
adc
popa
shl
push
pop
aam
test
adc
add
mov
adc
js
push
sub
xor
sarb
cld
lcall
jbe
push
incb
add
pop
mov
repnz
cld
pop
xor
pop
sub
jae
loope
icebp
data16
jg
in
add
int3
mov
inc
insb
in
sbb
out
lahf
xor
or
out
add
push
ffree
push
movsl
movsb
xorl
out
push
fldl
cld
mov
dec
shlb
sbb
jmp
rcr
mov
cmp
xor
lds
inc
inc
push
xor
inc
aam
cmpsb
scas
stos
mull
addb
das
mov
addr16
xchg
popa
push
rolb
jbe
out
jns
mov
push
cmpsl
add
add
add
add
lods
shlb
adc
add
test
icebp
arpl
xchg
test
cmp
inc
fwait
out
pop
jb
and
and
cmpsl
inc
loope
in
sbb
sub
cs
push
lods
sarb
in
jecxz
push
xor
sahf
mov
orl
in
xlat
sbb
add
in
sub
add
add
push
xor
jmp
jp
jnp
fs
je
scas
clc
add
sub
push
mul
in
out
mov
in
pop
cmpsl
jns
movsl
out
test
daa
push
add
adc
jge
or
push
out
test
pop
mov
add
xor
xor
call
add
push
in
mov
xchg
push
add
out
call
mov
or
test
mov
xchg
popf
mov
lret
cld
and
push
add
jge
dec
pushf
sahf
add
js
cmp
inc
std
sbbl
adc
mov
ss
pminub
pop
call
int
hlt
xorl
add
add
add
add
push
jmp
std
jl
into
out
dec
or
pop
addl
adc
or
add
loop
or
and
jno
mov
pop
push
fcoms
lret
push
xor
push
das
hlt
push
bound
mov
xor
pop
xor
fnsave
fstps
stos
cmp
add
adc
stc
mov
add
call
ss
testb
fwait
sub
shrb
rclb
sbb
sub
adc
out
das
test
or
add
cmpsl
or
jnp
outsb
push
mov
pop
mov
das
xchg
fsubs
sub
push
ret
add
xor
push
test
or
add
je
fstp
jl
icebp
test
jae
dec
sub
push
cmp
xchg
cmp
fcmovnbe
das
add
xor
mov
das
cmc
xor
jge
movsb
jp
inc
icebp
jecxz
fists
push
xor
fisubs
cmp
sub
sub
ret
adc
andl
fdivl
push
dec
push
push
add
push
sar
call
add
add
add
push
cmp
add
cmc
add
call
mov
sahf
add
sti
adc
sti
ja
test
aas
test
test
repz
cmc
fwait
das
idiv
mov
lock
ds
add
mov
cld
adc
add
nop
out
mov
jmp
add
or
lea
push
pop
add
push
add
mov
push
sub
in
mov
je
stc
jge
xchg
add
mov
jb
push
scas
or
fiadds
add
sti
and
adc
int3
mov
pusha
adcl
or
je
xor
mul
sbb
dec
cltd
mov
mov
push
outsb
add
push
aaa
jb
mov
or
add
add
mov
push
sbb
mov
add
add
add
test
add
adc
pop
cwtl
ltr
das
sub
lret
cs
call
mov
inc
adc
pop
xor
xchg
adc
dec
pop
and
pop
xchg
jno
add
jno
mov
cmp
pop
loop
int
pop
cmp
add
dec
xorb
mov
cmpsl
add
hlt
repnz
and
into
jae
push
mov
pop
jl
paddusw
incb
jbe
adc
std
mov
sbb
sub
pop
inc
mov
ret
fisubrs
jmp
dec
out
imul
cltd
xor
les
fmuls
std
cld
pop
ljmp
add
sbb
sub
jge
pop
pop
jge
inc
rcrl
mov
jg
mov
mov
xor
pusha
lock
bound
cmp
mov
scas
std
in
xor
int3
repnz
ficoml
cmc
pop
or
clc
pusha
push
and
mov
and
mov
adc
call
add
add
add
add
mov
je
mov
or
dec
xchg
rolb
mov
adc
in
mov
sub
jge
mov
popf
jno
call
lock
sub
mov
or
ret
xor
inc
cs
lock
xor
jp
xchg
in
mov
insb
xor
xor
add
inc
shr
scas
jne
adc
pop
in
add
aad
inc
call
pop
pusha
or
test
xchg
inc
jle
cltd
fdivp
push
and
mov
mov
fiaddl
mov
add
imul
faddl
imul
add
xchg
ret
rcrb
sbb
add
push
or
adc
lea
leave
or
xchg
adc
jl
add
xchg
add
adc
mov
adc
stc
xor
add
or
insb
sub
ficompl
pushf
mov
adc
sahf
es
jle
sahf
rcrb
insb
inc
mov
inc
pop
mov
add
add
add
add
xlat
add
sub
push
pushf
decl
lea
add
lock
out
in
inc
mov
jnp
addb
xchg
cmpsl
add
in
jmp
shl
jae
adc
add
mov
jp
inc
push
push
push
mov
add
add
std
rcll
cmpsb
leave
sub
jo
in
add
add
add
add
adc
add
xchg
sub
jo
stc
xchg
cli
data16
scas
add
push
pop
add
std
mov
add
cmp
lock
add
xlat
gs
and
outsl
and
fsubl
and
mov
cmp
xor
xor
add
mov
loopne
add
adc
gs
mov
outsb
add
test
xchg
push
pop
mov
arpl
xchg
xorl
outsb
rsqrtps
cld
jne
loop
adc
sti
outsl
or
sub
or
jno
add
xor
jge
cli
fucomp
inc
pop
cld
fldt
xor
add
divl
and
add
push
sbb
add
xchg
xchg
push
sbb
push
jmp
incb
xor
mov
push
cli
dec
push
dec
inc
insb
add
inc
and
add
mov
add
ficoml
cmpl
sub
int
add
push
das
push
pop
out
lahf
mov
daa
out
and
push
bound
out
sbb
fmul
cmpsb
mov
test
loope
mov
inc
add
xor
mov
mov
inc
mov
bound
repnz
ja
and
dec
sbbb
icebp
cmp
add
fldt
test
jmp
jmp
lods
and
lea
and
push
test
mov
or
add
ljmp
and
jb
cmpsl
jne
and
inc
mov
cmpsl
mov
mov
and
sahf
lods
mov
stc
mov
jnp
mov
cmpsl
and
insb
fcoms
cmpsl
sbb
cli
lahf
and
fnstsw
push
pop
popa
push
cld
daa
jle
sbb
mov
add
add
add
add
cs
call
push
popf
loopne
cmp
or
jmp
push
lods
mov
call
arpl
push
das
insb
and
mov
cmp
je
or
incb
mov
adc
cld
jne
mov
adc
insb
sub
cmpl
inc
jns
jp
out
add
out
add
jbe
pushl
adc
add
add
jb
mov
lock
test
inc
adc
sub
call
shrl
je
xlat
call
dec
call
pop
xchg
pop
insl
js
mov
xchg
and
sbb
sub
mov
add
aad
rcrb
add
xor
ds
jg
leave
add
test
mov
outsl
inc
daa
push
push
or
dec
push
or
std
jmp
out
mov
cmp
push
std
test
add
push
movsb
mov
xchg
adc
lret
incl
add
std
pop
sbb
pop
adc
lock
das
sti
xchg
add
das
mov
pop
inc
addr16
push
xor
pop
mov
iret
push
jae
cmp
js
xlat
rorl
or
andl
pushf
or
je
cmp
sbb
fildll
mov
add
movsb
repz
js
call
leave
into
mov
mov
inc
push
cli
xchg
jb
mov
fstp
inc
xorb
sahf
stc
add
ss
daa
add
repz
lds
inc
push
sbb
call
mov
faddl
mov
jmp
adc
stc
xchg
add
sub
push
jb
repz
add
icebp
cld
push
stos
je
icebp
dec
movsb
push
xchg
lcall
xchg
xor
cmp
or
int
push
std
jmp
add
add
add
lahf
adcl
scas
cld
adc
push
xor
inc
xor
jmp
push
xor
sbb
xlat
sbb
add
jno
jne
les
je
add
cmc
xorl
test
decb
xor
cmpb
je
movzwl
popf
repnz
pusha
add
jo
push
mov
lock
push
adc
fdivl
stos
jo
push
fs
inc
add
ss
divb
jg
or
cltd
jle
nop
test
mov
je
adc
sub
push
xchg
inc
std
popa
cli
inc
pop
daa
push
cmp
dec
pop
jl
jmp
rcl
stc
xchg
push
mov
cld
fs
aas
add
push
sahf
lds
rclb
call
orl
adcl
and
or
push
pop
mov
mov
push
jbe
sahf
dec
call
lret
mov
aas
push
mov
enter
adc
jb
jmp
cmpsl
fistpl
xor
add
test
pop
jg
push
jge
mov
jnp
sbb
repz
cld
mov
jmp
push
orl
inc
cmpsl
add
repz
fsubs
cli
xor
inc
scas
es
enter
xor
xchg
add
add
inc
lock
inc
push
xor
add
pop
cmp
in
mov
add
sbb
mov
and
push
push
lods
or
cmp
jecxz
ljmp
call
sub
mov
lea
outsl
adc
es
sbb
adc
scas
repz
sbb
repz
sahf
sbb
call
lea
std
xchg
xorb
popf
sub
clc
xor
or
test
ljmp
mov
add
es
inc
lock
push
sub
push
pop
rol
jge
add
jno
xor
add
add
loop
jmp
mov
je
scas
js
push
lret
je
xor
roll
and
testl
and
xchg
sbb
call
xor
xchg
js
or
add
pop
ret
ret
add
imul
mov
std
jl
das
ror
cmp
notl
hlt
subl
adc
sbb
dec
xlat
or
repnz
dec
pop
inc
add
lahf
loope
movb
mov
lods
push
mov
xor
pop
adc
dec
aaa
mov
jbe
stc
xchg
mov
cmc
pop
add
inc
movl
sbbb
pop
adcb
push
lret
call
shlb
jae
inc
nopl
add
fadd
dec
jmp
test
dec
jbe
push
rcll
stc
jp
jmp
nop
xor
sbb
push
ds
popf
fisttps
cmc
ret
mov
out
or
pusha
stos
push
or
dec
add
xchg
pop
jb
fcoms
testl
jns
jbe
fs
jbe
loop
dec
das
jmp
sbb
aaa
mov
jbe
test
repnz
xchg
dec
push
fsts
mov
cmp
bound
adc
daa
in
push
jmp
mov
xchg
xor
mov
add
push
add
or
jle
fcompl
inc
jmp
sbb
xlat
xchg
push
push
jb
adc
add
sbb
notl
jne
cmpsl
mov
push
mov
aas
add
push
jle
jb
and
test
xor
arpl
lcall
mov
mov
cmp
and
mov
add
add
add
scas
dec
jge
das
xchg
lods
std
push
push
insl
xchg
fs
out
push
push
out
and
js
test
lods
testl
cmp
push
jmp
sti
adc
mov
fs
push
jo
out
insb
cmp
hlt
sti
dec
sti
mov
push
icebp
scas
imul
imul
scas
loope
mov
sti
incl
add
xchg
cltd
push
inc
scas
testl
outsl
push
pop
jnp
je
push
dec
std
jmp
sbb
push
mov
jge
lret
mov
jp
adcb
pop
add
push
icebp
fidivl
cld
sub
add
mov
push
pop
jne
mov
hlt
add
ja
inc
call
int3
xchg
rclb
lret
loopne
xlat
inc
jae
test
inc
jnp
push
sub
pushl
pop
inc
cmp
inc
and
mov
out
rcrb
add
cmp
insb
inc
bound
mov
xor
dec
inc
pop
aad
scas
scas
dec
das
ja
inc
push
xor
mov
adc
xchg
add
fisubrl
mov
jg
popf
out
rcl
call
jl
filds
dec
loop
mov
into
push
jo
sbb
dec
adc
out
test
mov
xchg
and
add
ds
bound
add
push
mov
es
and
rclb
sbb
mov
dec
fists
adc
out
add
shrl
and
add
xchg
adc
pop
pop
popa
rolb
add
and
inc
push
sbb
test
push
aas
in
xchg
adc
andb
dec
mov
xchg
in
pop
stos
mov
jbe
ljmp
out
dec
xor
insl
xchg
popf
add
lea
pop
add
push
adc
add
imul
push
push
sub
cmp
jecxz
mov
pop
ret
push
mov
ret
lock
mov
mov
je
shlb
ljmp
mov
sub
test
loope
mov
adc
add
mov
in
mov
push
mov
imulb
adc
incl
add
push
ljmp
and
push
movl
clc
push
shll
mov
std
call
ret
pop
adc
inc
adc
lret
pusha
push
out
rep
adc
mov
mov
inc
jae
std
nop
std
inc
and
std
pop
push
icebp
aas
push
ljmp
and
outsl
add
add
popa
pop
inc
adc
iret
or
mov
add
push
mov
cld
lea
cmp
xor
inc
adc
xchg
inc
mov
sbb
jg
or
pushf
div
test
pop
adc
add
dec
gs
movl
testl
add
add
inc
sub
out
loop
daa
add
lock
adc
push
add
xor
add
xor
mov
xchg
test
inc
bound
clc
ret
outsb
mov
mov
ss
jmp
rorb
fs
inc
imulb
call
bound
xor
sbb
cwtl
clc
push
mov
pop
aaa
add
sbb
push
add
lret
pop
add
push
mov
inc
add
jp
add
pop
std
out
pop
testl
cli
mov
push
std
cmp
xor
out
gs
dec
mov
in
icebp
mov
imul
mov
xor
add
add
das
sar
add
inc
jg
pop
in
push
add
lods
not
push
mul
push
popf
imul
push
mov
insl
call
test
and
movsl
cmp
add
call
mov
add
jae,pn
jno
call
lock
es
fbstp
add
mov
add
xchg
push
xchg
ss
add
adc
mov
ficomps
cld
jb
or
std
fsubrl
and
out
outsb
inc
std
sub
repz
ficompl
icebp
pop
aam
jb
into
pop
aaa
test
mov
push
lods
and
add
mov
push
stc
int
std
out
add
adc
dec
mov
mov
mov
js
pop
jb
out
xlat
push
jmp
jge
inc
push
pop
fisttps
std
xchg
lds
add
xchg
std
das
stc
mov
and
xor
or
mov
or
sub
mov
jnp
out
outsb
inc
rorb
rorl
enter
mov
and
mov
movl
sbb
repnz
or
adc
bound
data16
add
add
add
add
push
xor
pminub
out
push
pusha
iret
jno
or
mov
repz
push
xchg
push
push
cmp
insl
wrmsr
add
int
or
test
sahf
mov
pop
std
mov
jo
adc
jmp
cltd
add
dec
cwtl
add
push
jo
insb
jle
std
dec
add
sub
add
xchg
mov
mov
and
jae
outsb
or
cmp
push
xchg
mov
jge
scas
jp
push
jg
push
add
je
arpl
mov
dec
fdivrp
ss
cld
or
inc
jmp
js
inc
hlt
cmp
dec
lea
call
test
and
adc
sti
loopne
ds
adc
add
mov
lods
cmp
call
push
out
xchg
dec
mov
xorl
inc
and
fisubrl
dec
xor
xlat
jmp
leave
sub
add
inc
jge
in
add
stos
jecxz
fstpt
in
cld
add
je
adc
or
call
jmp
sbb
out
daa
cmp
bound
adc
push
mov
add
aam
aas
std
jle
pop
push
push
pop
nop
cmpl
std
add
add
faddl
add
das
ret
cmp
stc
ss
imul
sub
cld
cmp
cmovo
inc
je
in
add
test
cld
inc
lret
adc
insb
mov
fidivl
ds
jmp
add
push
add
test
or
and
push
and
cwtl
xor
push
add
or
out
nop
push
xor
js
flds
mov
mov
mov
or
rcrb
test
sub
inc
push
cmp
xor
add
test
add
outsb
ss
es
mov
hlt
jge
cmp
out
push
mov
sbb
dec
pop
add
clc
mov
jae
push
pop
jmp
pop
call
insb
pop
jl
push
fnsave
add
mov
mov
std
xchg
stos
mov
int3
bound
out
sbb
push
dec
mov
std
outsb
and
icebp
mov
add
dec
mov
out
std
mov
pop
pop
call
popa
pop
add
adc
add
fdivs
mov
push
push
add
jge
lock
add
call
push
add
adc
jno
sbb
jg
add
call
add
repz
call
mov
shl
incl
add
cmp
call
data16
test
dec
sti
push
mov
push
in
push
call
mov
inc
sti
je
dec
jno
sub
push
aas
mov
adc
scas
testl
push
push
scas
adc
call
sub
xor
add
pop
ffree
xchg
out
push
lret
in
sbb
dec
lea
add
gs
incl
orb
repz
incb
imul
jns
repnz
data16
scas
or
into
cmp
daa
cmp
mov
int
into
stc
push
add
xchg
mov
xor
jbe
inc
dec
cmpsl
cmp
pop
inc
mov
test
test
xor
mov
lcall
dec
pop
cmp
add
add
mov
sbb
inc
cmp
jge
lods
dec
sbb
test
sub
scas
push
cmp
lret
fdivl
stc
cmp
lods
mov
pusha
cmpsb
push
add
jle
cmpsb
das
out
xchg
jnp
mov
jnp
lods
push
pop
jg
aaa
add
rorl
push
xchg
xor
aaa
push
add
or
in
out
push
xchg
push
xor
ret
inc
cwtl
pop
ja
add
or
jp
clc
sti
dec
stos
sub
data16
je
mov
and
push
push
jae
xchg
inc
dec
push
std
push
push
push
bound
pusha
std
aam
sbb
aad
or
inc
fs
add
add
jmp
add
scas
cmc
std
inc
pusha
std
hlt
dec
pop
std
cld
cli
sbb
jmp
push
and
std
add
push
and
fcomp
push
mov
ret
inc
xor
sarb
jno
push
jg
add
sti
mov
add
std
push
and
in
scas
jmp
pop
repnz
cld
cvtps2pi
jle
std
incl
inc
call
add
add
add
add
sub
cmp
jnp
push
mov
call
mov
aaa
notl
cmpb
lock
push
outsl
in
push
pop
lret
mov
pusha
enter
jge
test
mov
stc
les
fwait
jmp
pop
mov
sbbl
add
push
popf
decb
enter
add
test
jle
push
aam
loopne
test
mov
or
push
mov
mov
and
adc
mov
add
push
pop
add
xchg
lods
and
sub
adcl
repz
cmpsl
out
int
rclb
or
or
imul
divb
mov
add
add
add
add
jmp
gs
repz
sub
outsb
addl
insb
scas
jb
pushl
xchg
jnp
xor
dec
testl
imul
jns
jo
xor
dec
jnp
int3
push
sbb
add
add
into
fwait
dec
add
mov
sbb
bound
push
lds
std
fldl
add
and
pop
ret
call
pop
test
imul
xor
int
sub
add
xor
jecxz
cmp
mov
orl
push
adc
mov
cmpl
stos
jae
test
cld
mov
push
and
and
lret
cwtl
mov
push
sub
and
subl
jno
push
jb
add
push
cmp
or
xor
scas
add
push
inc
adc
xor
jg
and
jg
push
incl
je
sub
mov
adc
lock
push
lock
and
dec
popa
dec
jmp
and
je
and
adc
xchg
dec
je
xor
push
dec
sub
inc
arpl
call
dec
pop
ret
push
mov
inc
cmc
cmp
push
daa
mov
aas
add
xor
gs
sar
hlt
mov
jae
mov
aaa
push
push
add
push
or
shrb
pop
inc
add
popf
xor
pop
fcmovb
incl
jmp
sub
vxorps
cld
add
add
add
add
pop
filds
inc
push
ss
or
aam
enter
sub
jge
cmpsb
cld
lods
adc
pop
jle
pop
fiadds
test
fistps
push
pop
jle
int3
movb
test
add
das
cmp
sbb
and
add
fldcw
out
adc
add
pop
push
add
pop
enter
enter
outsl
lret
fcmovbe
jp
jl
add
and
adc
push
xor
pop
add
sbb
stos
das
mov
cld
jp
lret
xorb
testb
loope
cld
pop
mov
mov
push
adc
adc
push
xor
imul
pop
add
std
push
add
iret
out
jae
fildll
cmp
out
mov
sti
cld
lea
add
add
add
add
cld
sti
cltd
or
sbb
pop
jmp
pop
test
sbb
daa
cmp
push
cld
jmp
jmp
cld
cld
cmpsb
pop
call
ret
cmp
push
cld
mov
adc
sub
xchg
clc
fs
sti
in
push
add
pop
sbb
adc
sub
dec
add
or
add
add
add
sub
test
loopne
cmp
loopne
icebp
mov
loopne
imul
or
je
add
mov
inc
xchg
cmp
sarb
dec
cld
xchg
add
call
cmp
aas
add
push
add
jnp
adc
inc
xchg
mov
cld
test
dec
cmp
mov
movsb
add
mov
mov
add
mov
add
jl
popa
xchg
dec
or
push
jle
or
jp
pop
pop
adc
addr16
xor
js
pop
fcmovnu
icebp
jp
jp
dec
jle
rsqrtps
jp
xor
jns
push
xchg
or
cmp
arpl
pop
jp
in
cs
jno
adc
add
orb
addb
out
repz
dec
push
adc
mov
flds
iret
adc
push
lock
pop
xor
sub
pop
stc
sub
js
jmp
orb
mov
repnz
jo
jp
pop
push
pop
stc
fadds
adc
add
fiaddl
stos
and
or
insb
out
lret
push
jmp
dec
add
pop
arpl
cmp
scas
ds
pop
shr
test
add
fcmovnu
push
jo
jl
adc
inc
pop
push
mov
mov
mov
push
movsl
push
jl
fadd
cmp
movsl
lcall
insb
sti
subl
jge
mov
sti
adc
arpl
mov
pop
sarb
jge
xchg
add
mov
pop
in
pop
mov
imul
cld
hlt
sub
adc
push
fadds
movsb
xor
or
lea
bound
cmc
xor
dec
inc
pop
jmp
repnz
mov
jno
adc
add
dec
incl
add
pop
add
cmp
mov
scas
cmc
je
mov
add
mov
cmpsl
jp
fdivr
add
jae
jns
or
insb
push
incl
test
scas
mov
add
insb
test
jns
fdivl
or
pop
adc
sbb
add
scas
mov
loopne
fimuls
test
mov
test
imul
mov
add
dec
mov
adc
mov
sub
mov
arpl
das
rolb
push
leave
aas
mov
orb
out
mov
push
dec
stc
ljmp
loope
mov
xor
add
jnp
jbe
sti
lret
mov
add
shl
sbb
add
scas
inc
aam
cli
xchg
mov
scas
cmp
mov
mov
dec
dec
xchg
jge
pop
and
add
dec
xchg
iret
or
xlat
ds
testb
lds
inc
add
and
adc
lock
inc
fmuls
out
or
add
adc
out
dec
xor
and
dec
inc
cmp
imul
fwait
dec
sbb
faddp
pop
or
outsl
push
mov
adc
xor
adc
cmc
out
add
dec
pop
pop
sub
repz
push
test
pop
sub
dec
call
jle
pop
mov
into
pop
call
jle
pop
xchg
sub
pop
add
push
xor
mov
arpl
mov
add
lods
push
pusha
xchg
adc
xchg
pop
data16
loopne
test
push
test
inc
movsl
add
dec
pop
xchg
call
dec
cmpsl
inc
mov
daa
adcl
mov
iret
cld
pop
adc
outsl
hlt
bound
cmc
jb
cmp
dec
cli
adc
xor
outsl
in
sub
cmp
or
cld
imul
roll
inc
lret
out
cld
mov
sbb
mov
cmp
inc
dec
cmpb
xchg
add
sbb
xchg
xor
sbb
mov
in
push
mov
call
data16
lea
dec
lea
das
add
mov
inc
cmp
cld
test
rorl
mov
repnz
shrb
xor
out
pop
inc
insl
or
mov
mov
mov
cwtl
adcb
cld
addb
je
add
pop
jle
sti
cwtl
inc
into
mov
push
into
sti
add
mov
mov
cld
push
xchg
dec
jle
or
in
sbb
popa
lea
cld
mov
rolb
mov
ljmp
add
push
jb
xchg
add
add
xor
cmp
push
push
addr16
out
icebp
out
fidivs
jle
das
out
imul
cmp
mov
cmp
adc
sub
insl
ret
cmpsl
icebp
out
cmpsb
ss
pop
das
out
sti
sbb
inc
shl
or
add
cmc
lret
xchg
mov
push
stos
fildl
xor
stc
in
data16
add
pop
stos
jns
and
out
jle
out
jp
sbbl
sti
add
idiv
scas
in
and
imul
pop
pop
sub
or
stc
push
jb
divb
cmp
clc
das
lods
push
mov
loopne
or
imul
sub
es
je
divb
je
sbbl
add
add
add
add
pop
roll
shrl
jae
enter
aad
das
xor
hlt
inc
mov
add
movntq
adcb
xor
add
pop
ret
test
sub
je
sti
ljmp
hlt
aas
and
sub
mov
or
int
sbb
cmp
incl
sahf
xchg
push
add
jae
mov
mov
sti
mov
out
sbb
jne
dec
lock
addb
js
add
cld
mov
and
sbb
jne
dec
lock
cmpsb
addb
push
fldcw
jae
pop
sub
xchg
lcall
push
shrl
add
push
mov
stos
ds
inc
stos
ds
xor
stos
ds
je
ds
imull
ds
mov
ds
mov
stos
ds
push
lods
ds
lods
ds
les
sar
sbb
popa
sub
lock
mov
mov
mov
sti
lea
cmp
add
jb
push
mov
push
and
add
div
enter
xchg
gs
test
xor
sub
out
xchg
repnz
cmc
bound
rorb
cmp
add
stc
pusha
lret
data16
cli
test
cmp
and
les
clc
add
and
xor
insb
add
add
and
insb
add
sub
pusha
arpl
out
and
xchg
cmp
cmp
push
xor
jmp
std
daa
pop
insl
jle
push
jo
call
push
xor
scas
push
js
inc
icebp
cmp
cs
mov
jo
in
jl
popa
cmp
inc
cmp
add
add
add
add
adc
std
push
cmp
jae
mov
xor
shr
push
xor
xor
or
cmp
cmp
inc
or
jle
xor
cltd
mov
or
sub
cmp
inc
adc
hlt
rcll
add
idiv
xor
xchg
mov
je
mov
cld
mov
push
xor
shrb
notb
and
inc
add
out
call
jnp
in
rorl
paddw
and
das
in
xchg
adc
adcb
or
rorb
push
pop
sbb
inc
push
pop
or
inc
inc
push
in
sub
xchg
pop
cmpb
jae
fcmovnbe
inc
call
int3
rorb
add
push
fwait
jno,pt
jb
pop
lahf
adc
adc
xor
cltd
inc
loopne
ffreep
and
adc
cltd
lock
xor
sbb
test
dec
pop
mov
cmc
lahf
xchg
dec
pop
std
jle
jb
xor
leave
pop
flds
leave
dec
pop
sub
inc
mov
adc
xlat
jl
add
out
enter
dec
and
in
ficoml
mov
lea
mov
call
inc
lods
loop
pop
xor
or
insb
or
iret
insb
add
sub
loope
xor
push
mov
out
mov
stos
out
mov
or
pop
into
pop
cmp
xor
inc
comiss
rcll
dec
out
add
pop
jmp
fs
mov
cmc
f2xm1
jae
fiaddl
fldcw
ds
stc
cld
cltd
jae
enter
int3
cmp
jno
inc
mov
push
or
or
jle
scas
arpl
or
out
pop
jmp
imul
add
shl
or
and
jmp
mov
or
jne
push
jmp
add
push
mov
fs
cmp
or
aam
and
repz
cmp
xchg
sarb
xor
or
hlt
dec
or
push
xlat
inc
or
sbb
fs
stc
or
mov
testb
aas
or
mov
push
cli
insl
inc
add
insl
inc
add
sbb
or
add
xor
or
lods
testb
mov
addl
add
jbe
std
add
xor
stc
std
fldl
psubusb
out
add
mov
aam
add
push
xchg
ret
lock
or
cmp
test
flds
xchg
fmuls
out
fldl
add
xchg
jmp
add
int3
add
push
pop
decb
mov
push
jne
das
or
and
mov
pop
ret
decb
xlat
or
cmp
pushf
or
psubusb
out
add
and
sub
sbb
int3
movsl
leave
insl
mull
pop
cmpsb
xor
imul
mov
mov
add
pop
cmp
add
insl
fnstenv
sub
xor
xchg
fmuls
xchg
mov
rcr
mov
das
repz
cmp
add
jmp
and
dec
xlat
sub
pop
and
fsubs
into
inc
outsl
mov
daa
push
das
xor
add
repz
f2xm1
scas
inc
sti
ja
mov
add
mov
dec
adcl
outsb
jmp
call
push
xor
push
dec
xor
arpl
xor
push
pop
xor
fs
cmc
cmp
jecxz
data16
inc
data16
mull
lea
xchg
and
pushaw
adc
mov
pop
int3
push
adc
add
shl
or
in
fs
fadd
aas
addb
add
shll
outsb
out
std
push
adc
pop
add
xor
inc
mov
xor
addb
test
out
std
sub
aaa
pop
add
testb
mov
add
or
sbb
or
cmp
cmp
add
or
into
incl
jbe
sti
mov
cmp
cmp
cmp
add
add
add
add
xor
cmp
cmp
movzbl
inc
fisubrs
movb
add
inc
cltd
sub
popf
int
inc
sub
loope
and
mov
icebp
or
ds
fildll
pop
mov
push
push
ds
pop
xlat
sub
adc
jnp
inc
inc
inc
fldcw
inc
or
add
sbb
pop
cld
sub
add
shl
jae
adc
sbb
cmp
enter
or
push
xchg
mov
lds
mov
repz
cmc
repz
das
inc
call
call
sbb
lock
lods
icebp
dec
lcall
adc
addr16
pop
aam
daa
das
out
add
jnp
stos
add
lock
sub
out
lret
jns
push
pop
out
clc
dec
xor
aas
loop
cmpl
xor
scas
out
nop
push
mov
int3
mov
addb
loop
orl
out
orb
add
push
mov
sbb
shl
xor
cmpsl
in
sub
inc
dec
xor
imul
mov
popa
stc
cmpsb
loope
cmpsl
add
mov
xor
imul
out
xchg
pop
ljmp
push
xor
imul
push
cmc
sub
mov
jmp
lods
jno
push
xor
inc
dec
xor
cmpsl
in
cmp
nop
mov
fcoms
call
add
or
mov
adc
add
cmpl
addb
push
jne
and
lods
adc
jno
jbe
adc
sahf
jl
jmp
sub
mov
adc
mov
stc
add
mov
jno
mov
adc
or
stc
outsl
mov
andb
jno
negb
jl
and
sbbl
sub
test
add
add
push
dec
pop
push
pop
push
lds
push
leave
cmp
int3
adc
leave
aas
jmp
sbb
push
in
aad
or
push
dec
cwtl
and
lea
fimull
fcompl
shll
cmp
fiadds
mov
enter
test
std
mov
decb
add
lret
jmp
add
out
add
rcl
push
je
add
sbb
stc
jno
sbb
or
and
mov
cmc
and
jo
out
ror
push
pusha
mov
jle
jmp
iret
jne
add
out
loop
into
jne
mov
das
imul
xor
mov
adc
or
jb
add
stos
sbb
jl
es
in
jb
loop
add
fnstenv
mov
inc
lret
xchg
jae
add
mov
sbb
lahf
xor
out
push
sub
add
fiaddl
add
fsub
add
sarl
ljmp
inc
xor
jmp
leave
clc
sti
xchg
testb
xlat
out
push
xor
scas
inc
cmpsl
sbb
and
xor
jmp
fldenv
add
add
add
add
inc
call
push
xor
mov
cld
das
mov
and
das
xor
jmp
mov
xchg
rorb
jne
scas
mov
daa
ror
xor
jmp
fldcw
add
inc
movb
in
aas
xor
lea
cmp
daa
stos
addr16
mov
data16
jbe
adc
arpl
add
add
add
cs
inc
jmp
xor
andb
or
out
sub
mov
or
inc
in
adc
andb
test
jmp
out
and
fstl
jmp
cs
ss
xlat
add
push
mov
jne
xor
push
sub
jnp
jne
jns
add
insl
std
mov
unpcklps
add
or
cs
in
sub
cmp
xchg
jns
leave
add
xchg
xbegin
add
mov
add
push
or
add
push
push
leave
inc
inc
push
enter
leave
add
mov
sar
or
addl
add
ret
inc
or
inc
push
jbe
add
push
leave
mov
cmp
push
xor
leave
push
sbb
add
out
aam
insl
shlb
das
sti
mov
sbb
sbb
jb
iret
jl
in
subb
inc
jmp
lret
pop
jmp
push
dec
leave
and
push
xor
push
cmpsb
lods
add
fsub
add
hlt
out
push
sub
jnp
pop
jg
xor
xchg
add
das
out
rcr
out
add
adc
add
lods
add
push
xor
add
fdivr
fcoms
xchg
jmp
sbb
addb
mov
call
pop
ljmp
shl
or
mov
adc
loope
fmulp
add
jmp
call
xor
daa
add
push
cmpsb
dec
ljmp
mov
fwait
scas
pop
xchg
fnstenv
shl
pmaxsw
mov
jmp
fwait
shlb
cmpsl
push
cmpsb
dec
ljmp
mov
pop
out
fdivr
repz
je
lods
hlt
push
jg
test
cmp
in
xor
int
test
add
div
call
mov
idivb
add
xor
stc
xchg
adc
call
cmpsl
cli
je
push
inc
and
cmc
mov
xlat
xor
repz
fcos
xchg
loope
inc
xchg
jnp
hlt
rorb
sysexit
stc
hlt
ljmp
arpl
sub
and
add
sarl
ret
and
push
subb
or
add
add
cmp
test
push
leave
add
and
mov
inc
jne
xchg
pop
lret
psubusb
add
leave
ud0
fcoml
and
leave
inc
xor
movb
cld
cmp
cmc
fmull
or
mov
test
and
xor
xchg
outsl
movb
pop
stos
lods
hlt
xor
enter
xchg
or
dec
lret
negl
popa
or
or
in
xor
out
es
mov
dec
mov
cli
mov
imul
add
mov
dec
jo
test
jno
push
inc
out
lret
and
adc
cld
aad
loop
push
daa
xchg
inc
add
rol
push
imul
out
jp
and
rcll
add
mov
loopne
outsb
add
imul
jmp
pop
lock
and
mov
push
xor
daa
mov
cs
add
push
cmpsl
jl
rcl
out
dec
sar
testb
and
sub
jmp
push
xor
mov
add
add
sub
add
popf
popa
or
fidivl
out
dec
xor
imul
add
mov
pop
ss
xor
sub
mov
data16
mov
or
xor
cltd
leave
push
clc
mov
sbb
push
push
dec
add
pop
xor
jle
sub
add
out
or
add
stos
stc
add
xor
clc
out
sub
xor
mov
test
xor
call
push
dec
add
add
outsl
and
jmp
mov
jb
jecxz
clc
xor
test
or
mov
or
pop
inc
iret
add
ds
push
negl
sub
add
rorb
cli
jae
dec
inc
lock
add
add
data16
inc
inc
push
xchg
add
inc
lret
dec
add
mov
lret
xor
push
or
sub
decl
cli
push
addl
push
leave
add
xchg
repnz
enter
add
mov
lret
aam
pop
or
rol
push
mov
rorl
cmpsb
sub
jle
cs
add
xchg
push
repnz
test
add
and
push
lods
adcb
shl
push
ucomiss
inc
ljmp
loop
lahf
clc
shll
repz
lods
call
sti
das
push
jmp
ljmp
pop
jmp
add
push
push
xor
stc
mov
cmpsb
popa
cmpsb
in
push
and
inc
ror
jns
add
out
push
adcb
test
leave
cmp
jmp
xor
sub
aad
cmpsl
orl
adc
aad
adc
sti
inc
aad
push
cs
xchg
cmp
jmp
xchg
lock
lcall
fs
sar
jmp
out
mov
add
mov
out
push
xor
fs
pop
xchg
imul
movl
sub
repz
add
or
sahf
add
sub
ret
call
add
js
add
pop
sub
shl
or
pop
scas
mov
lcall
jnp
and
ret
xchg
and
rcll
and
push
inc
and
xor
add
sub
and
in
cld
cmp
sub
sqrtps
xchg
fmuls
cld
xchg
cmp
fwait
sbb
movl
push
popl
add
push
lret
fistl
jbe
movl
push
rcrl
incl
add
mov
outsb
jns
push
pop
mov
mov
push
push
sub
sbb
cmp
xlat
jle
push
flds
jne
xor
push
fidivl
xor
idivb
xor
add
outsb
fistpll
cmp
sub
out
fdivrs
out
mov
aas
insb
inc
ret
jns
add
cmp
push
xor
mov
dec
adc
mov
xor
sbb
jne
js
adc
js
cmp
cmpsb
dec
sbb
add
and
mov
xchg
push
or
xchg
push
mov
pop
loopne
xor
dec
add
jns
jae
push
iret
outsl
mov
dec
mov
pop
icebp
jnp
or
hlt
inc
call
add
add
add
sbb
pop
imul
cld
jle
dec
and
push
testb
inc
dec
jb
and
mov
xchg
sub
loop
int
gs
mov
cmpsb
mov
out
cli
jne
jae
and
ljmp
cli
push
int
test
add
inc
dec
stc
jecxz
mov
fstl
addb
das
push
cld
and
add
add
add
jns
mov
insb
sbb
mov
push
inc
and
and
mov
add
jl
cld
clc
mov
or
push
daa
dec
dec
adc
xor
test
or
movsb
mov
movl
js
add
push
xor
or
fmull
add
add
add
push
adc
addb
xor
or
fidivs
push
sbb
pop
jmp
insl
gs
inc
pop
xor
adc
out
push
out
fadds
add
xchg
je
lret
aam
add
shl
loope
xorb
push
xor
push
sbbb
jne
test
add
add
ficoml
aad
push
adc
xchg
sbb
rorb
mov
jmp
arpl
and
pop
ljmp
fdivs
repz
jb
lea
hlt
sbb
sub
mov
dec
or
push
inc
std
mov
adc
xor
jl
pop
mov
cmpsb
js
add
sub
insl
mov
pop
leave
jb
stc
or
ficoms
shlb
add
mov
xchg
inc
push
lea
adc
lea
popa
jb
insl
loopne
dec
inc
adc
adc
movsb
sbb
add
sarl
push
push
int
push
adc
jmp
dec
scas
mov
or
pop
jp
cmpsl
add
push
loopne
test
pop
adc
in
pop
mov
adc
xchg
mov
int
stos
dec
xor
bound
or
sbb
add
adc
or
addb
add
or
or
lahf
fimuls
add
iret
dec
cmp
add
cmp
add
add
add
add
scas
cmp
or
cmp
add
dec
cmp
add
dec
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
mov
add
lods
cmp
add
mov
add
add
mov
add
mov
add
test
push
lret
push
in
aas
push
inc
test
push
in
ds
xchg
jnp
push
mov
aas
push
bound
ds
test
ds
and
aas
push
lcall
push
xchg
test
push
lds
aas
push
push
mov
push
pop
test
push
jo
ds
lea
add
add
add
add
test
push
iret
jle
push
cmpb
cmpsb
jle
push
out
jle
push
mov
ds
mov
ds
xor
das
xor
daa
xor
add
insl
divb
pop
pop
mov
enter
mov
cmp
cmp
dec
cmp
cmp
mov
sbb
outsb
out
and
add
cmp
and
xor
jbe
rolb
add
and
subb
jne
mov
sbb
hlt
repnz
pop
cmp
in
aam
pushl
xchg
pop
pop
sub
jge
sti
punpckhdq
add
adc
jo
jae
add
mov
in
xor
out
dec
and
push
scas
jge
test
inc
add
inc
push
addb
in
fiadds
addb
xchg
push
repnz
fadds
loop
pop
xor
push
or
jmp
mov
add
jg
and
sbb
mov
and
call
push
andb
cmp
push
icebp
inc
js
sti
adc
add
andb
push
outsb
cs
sub
add
xor
insl
add
sub
sub
lcall
mov
lock
hlt
mov
cmp
cmp
add
dec
cld
lods
mov
pop
push
call
cmp
jno
push
outsl
sti
adcb
add
in
add
add
fadds
or
push
mov
inc
call
xor
cmp
and
pop
cmp
add
in
adc
in
add
inc
add
mov
cmp
add
aam
add
pop
ret
out
inc
push
ljmp
in
add
jl
prefetchnta
add
inc
push
pop
in
fmuls
hlt
xchg
add
mov
sbb
mov
push
mov
insl
xor
aas
push
popa
mov
test
push
push
and
popa
or
arpl
add
lcall
aaa
jo
imul
jo
repz
xor
aas
outsb
testb
pop
cmp
mov
sbb
add
in
push
jg
xchg
add
out
lret
out
adc
adc
imul
jl
repz
popa
jo
jle
cmp
add
daa
ret
push
outsb
pop
push
mov
lods
sahf
jae
call
push
lds
popf
bound
insb
lea
aaa
pop
cs
dec
insb
push
rorb
ret
xchg
jo
fs
add
les
add
add
or
jg
cld
fsub
and
aad
cld
mov
shll
sub
xchg
push
stos
pop
loope
insl
cld
adcb
jae
mov
push
xor
inc
adc
push
cmc
mov
add
jno
pop
loope
rol
sti
adc
jmp
jbe
add
outsl
mov
cld
cmc
out
jo
inc
inc
cmp
push
push
sbb
lds
jno
aas
loope
rolb
call
imul
pop
shr
add
ret
pusha
xchg
dec
pop
mov
pop
mov
aad
mov
lcall
sub
push
test
call
push
mov
and
jno,pn
es
call
fisubl
xchg
roll
push
lret
jecxz
push
call
out
push
push
push
or
mov
fcomps
cmpsl
cld
ds
les
mov
add
rclb
jl
popf
enter
out
daa
iret
push
xlat
mov
test
add
lds
das
sub
add
rolb
add
in
push
pusha
jg
test
fiaddl
inc
xor
jne
push
ds
dec
imul
aas
stc
cmp
out
daa
and
enter
push
xor
lods
das
sub
jmp
andb
into
bound
jne
and
cmp
das
push
ret
adc
jecxz
adc
out
loope
test
add
add
add
add
popf
inc
push
mov
add
sub
jo
add
stos
add
repnz
and
arpl
push
push
popa
push
jb
sub
daa
push
mov
jmp
ds
sbb
stc
hlt
inc
or
push
cmc
inc
or
push
leave
push
ret
pop
pop
lds
push
xor
movsl
sbb
add
push
xor
in
pop
and
leave
jb
aad
fstps
push
xor
jne
sbb
mov
call
push
mov
add
jmp
adc
push
adc
and
clc
cmp
call
andl
pop
sub
jmp
cmp
add
xor
inc
pop
and
call
add
add
add
or
xor
jmp
aas
mov
and
scas
je
push
and
setl
or
xchg
sti
push
mov
and
fmull
lods
test
adc
shr
add
push
dec
mov
jno
add
push
push
sub
movl
call
in
sti
add
adc
jg
insl
sbb
add
dec
and
pop
dec
and
ja
jae
and
inc
xor
fsubrs
jbe
imul
dec
and
out
aas
push
pop
lahf
stos
push
push
fstl
mov
jge
dec
dec
mov
sub
dec
out
decl
xor
dec
mov
out
xchg
adc
jl
adc
addl
add
add
add
inc
or
or
add
aad
es
je
xor
sub
jge
popa
inc
push
enter
mov
scas
inc
insl
adc
sbbb
outsl
insl
and
jle
adc
jle
inc
jecxz
adc
push
je
mov
sbb
xor
add
arpl
cmpsl
push
call
enter
add
fidivrl
add
or
lods
out
and
inc
or
scas
cmpsl
aas
jmp
in
call
pop
xor
sbb
icebp
pop
js
imul
pop
push
xchg
xchg
mov
ror
bound
adc
jae
mov
jne
into
fdivs
push
lock
and
jecxz
vsubps
mov
mov
cmp
add
mov
loopne,pn
xor
mull
out
bound
xlat
repnz
call
pop
into
imul
cmp
pop
jecxz
outsl
add
hlt
mov
mov
or
je
sbb
ljmp
mov
pop
mov
fildl
mov
or
jb
or
repz
mov
cmpb
inc
push
pcmpgtd
xchg
add
xchg
out
aaa
enter
call
hlt
out
jo
mov
ret
jmp
scas
cmp
xor
sub
cmp
inc
sub
push
sbb
xorl
and
jnp
sub
jp
jne
jb
insl
lock
jle
jno
dec
sub
inc
in
add
mov
add
dec
pop
adc
aaa
push
jg
hlt
mov
mov
in
mov
stos
js
int3
mov
scas
adc
dec
rolb
jne
jbe
pop
imul
mov
icebp
shl
cld
dec
in
mov
movl
lock
jns
pop
inc
addr16
xor
mull
dec
cmp
inc
out
fwait
sub
dec
and
jmp
mov
into
inc
repnz
xchg
sub
dec
dec
cmc
and
or
js
iret
lds
arpl
mov
sub
sub
lret
inc
fwait
dec
test
cld
cwtl
stos
stos
es
out
jmp
and
push
enter
and
add
dec
jl
mov
pop
xchg
jp
ss
add
sub
jmp
pop
jae
ljmp
std
imulb
inc
lds
push
jb
in
add
pop
push
pop
call
jb
push
ret
arpl
push
push
popa
push
ss
jnp
jno
xor
push
add
and
mov
or
lods
mov
fstps
pop
or
and
ss
push
bound
add
mov
add
cmp
xor
insb
mov
out
xorb
cld
push
dec
pushf
mov
add
push
inc
testb
jne
mov
je
stos
inc
and
clc
cmp
mov
mov
shr
xor
add
aaa
andl
aaa
andl
aaa
inc
and
aam
in
add
ret
aaa
lods
out
inc
mov
jg
cs
popf
jae
sbb
or
push
leave
jge
sub
cwtl
ja
cbtw
add
popa
inc
repz
add
add
sub
add
inc
xchg
mov
jecxz
push
fimull
out
add
clc
subl
cld
call
lahf
mov
add
add
add
add
pop
aaa
lea
pop
sbb
jle
out
xchg
cld
ficoml
and
incl
cmp
jge
scas
mov
imul
adcl
data16
sbb
push
push
sub
clc
xor
pop
mov
dec
jl
loopne
mov
fcomi
mov
xorb
add
scas
add
jb
add
sarl
sub
jecxz
mov
push
stc
std
mov
std
pop
mov
js
or
jmp
and
sub
popa
cmpsb
jae
enter
mov
scas
jb
out
push
mov
out
test
mov
ja
mov
mov
or
and
add
push
pop
push
xchg
add
flds
out
cmpsl
mov
ficoml
cmpsl
inc
pop
mov
push
in
pusha
cltd
mov
pop
std
sti
xor
call
ret
je
orb
mov
call
stc
ds
mov
lret
scas
ds
jns
push
xor
xchg
sub
add
leave
dec
lea
add
dec
call
hlt
jmp
pop
pop
inc
cld
call
enter
ret
test
aam
aaa
push
aaa
pop
clc
shrl
in
in
pop
das
add
cmp
lock
cmc
or
enter
add
cmp
cmp
repz
push
pop
cmpb
bswap
xchg
cmp
inc
call
add
leave
sub
sti
jne
xor
call
push
mov
add
sbb
mov
in
push
leave
add
je
call
jae
mov
mov
ds
repz
std
mov
ja
mov
lret
push
push
mov
xchg
pop
xor
xor
add
imul
mov
push
aas
pushf
cmpl
in
pop
aam
add
jg
jae
xor
dec
xchg
out
clc
scas
pusha
jg
pop
xor
ret
ucomiss
stos
push
fadd
pop
push
pop
stos
gs
std
inc
xor
stos
sti
add
dec
jno
mov
divl
out
push
movsl
addl
add
add
sarl
sub
dec
cmp
out
stos
es
movsl
jnp
xchg
inc
cmc
add
jmp
iret
jmp
xor
jp
stos
mov
test
daa
fs
add
cmpsl
lds
sbb
shl
pop
mov
mov
add
push
cmpsl
inc
icebp
arpl
xor
out
jb
stos
or
idivl
add
inc
pusha
std
cld
ljmp
push
cmpsb
std
call
xorb
out
out
jb
push
jne
icebp
ss
jmp
es
mov
or
jmp
cmp
mov
add
pop
inc
lods
jb
in
gs
add
mov
inc
add
jo
or
out
in
test
add
sbb
std
pop
add
arpl
rcll
std
push
mov
mov
add
sub
movsb
popf
repz
jge
data16
xchg
in
jae
push
mov
xor
pop
jnp
inc
or
xchg
adc
stos
cld
ret
jmp
ljmp
add
mov
xor
sbb
cld
in
jno
push
movb
add
xchg
adc
or
or
aas
push
mov
jae
adc
adc
jecxz
push
pop
call
push
inc
sbb
pop
dec
jecxz
push
push
push
mov
xchg
xchg
jge
push
adc
push
add
dec
mov
popl
add
jecxz
sbb
or
adc
lods
add
inc
xlat
add
dec
fwait
insl
or
sub
std
xor
inc
mov
add
xor
add
scas
jne
or
das
out
les
idivl
insb
les
pop
jecxz
lods
out
adc
fiadds
cmp
jecxz
xor
scas
insl
jecxz
lods
sti
pop
arpl
out
adc
insb
hlt
lret
mov
loop
add
into
sbb
out
out
inc
inc
mov
dec
dec
mov
adc
mov
add
daa
arpl
call
xlat
in
adc
loopne
out
rep
dec
mov
std
mov
sub
jmp
adc
adc
std
aaa
dec
stos
aam
lcall
xchg
or
jmp
dec
stos
adc
add
lods
jae
int3
in
call
pop
jae
shlb
xor
data16
dec
lcall
jae
lods
cmp
js
adc
push
cmp
add
mov
xorl
das
xchg
jne
or
or
add
adc
cmc
ret
push
inc
mov
add
repz
push
inc
repz
push
imul
jmp
mov
je
mov
jo
imul
aaa
dec
jl
xor
mov
mov
mov
cld
mov
incl
fs
jmp
cltd
mov
push
enter
add
loope
call
mov
add
repz
jmp
adc
jae
adcb
inc
inc
add
and
aas
pop
sub
ret
dec
mov
shr
hlt
push
push
xchg
add
push
push
sub
inc
std
add
mov
and
jmp
pop
add
jns
loopne
pop
adc
ss
incl
lods
xor
mov
lahf
ret
jae
adc
clc
add
js
repz
inc
push
mul
cmpsl
add
call
mov
cmp
push
pop
test
out
sahf
and
mov
push
call
fdivrl
push
cmp
movsb
and
repnz
xor
inc
jb
andl
or
sti
jmp
add
out
adc
ds
xor
ss
inc
adc
xchg
add
dec
stos
jb
cmp
sbb
pop
pop
sub
push
jb
mov
aad
add
jl
mov
std
ljmp
push
push
mov
rcll
push
push
push
add
push
scas
bound
stos
stos
jb
lret
sbb
cld
sbb
stos
jb
add
mov
lods
mov
loope
in
pop
jle
inc
mov
stos
movsb
cld
data16
call
jmp
aam
nop
int
dec
xor
std
and
cmp
mov
push
leave
jp
cld
push
mov
adc
or
hlt
decl
jge
pop
push
dec
dec
test
adc
add
add
add
movsb
mov
sbb
test
add
test
inc
stos
out
lods
das
or
test
or
push
cmc
out
sti
push
outsl
sti
vmread
push
icebp
sti
fldt
inc
cld
xor
inc
push
push
movb
cltd
out
cmpsb
add
push
cltd
cmp
les
adc
inc
add
push
cmp
pop
xor
bound
add
stc
hlt
aas
push
mov
data16
mov
aaa
xchg
jge
inc
fwait
lock
adc
sbb
adc
inc
je
jno
das
push
cltd
xchg
int3
lds
push
loopne
xor
std
add
fcmovnbe
shlb
inc
or
fcoms
das
mov
iret
aaa
jb
imul
out
add
xorb
push
jae
add
or
add
lock
lret
xor
movsl
jnp
add
arpl
andl
cmc
sbb
faddl
clc
inc
push
mov
pop
bound
inc
aad
cmpsb
push
inc
dec
iret
cmp
stos
mov
push
mov
fcomps
std
movsl
push
push
movsl
adc
jle
fcoml
cltd
out
xor
add
mov
push
popa
add
pop
xor
jns
dec
push
mov
cld
aam
mov
add
mov
inc
inc
jmp
hlt
cld
xchg
push
jecxz
push
dec
xor
mov
in
popf
sbb
fcoms
and
xchg
movsb
cmp
dec
jmp
sub
xor
jo
test
test
add
add
add
push
push
sbb
inc
pop
clc
adc
std
adc
mov
jb
inc
mov
rolb
repz
jne
popf
jl
or
out
imul
jb
jno
nop
fildll
add
cmp
pop
fisubs
ret
push
mov
or
popa
xchg
xlat
adc
sti
push
jge
repz
loop
sti
jne
add
mov
cld
jmp
xchg
add
mov
cld
imul
or
out
repz
mov
sti
xlat
push
push
push
clc
push
cmp
pop
daa
dec
leave
rcll
mov
xor
adc
add
push
jns
add
pop
jmp
shlb
mov
test
stos
cltd
test
leave
test
add
leave
xlat
jb
dec
dec
or
pop
jge
pushf
rcl
adc
inc
add
xor
cmp
cmp
call
fidivl
fsubs
outsb
add
push
fmull
jb
or
arpl
cmp
or
jae
xor
cltd
mov
fidivs
popf
mov
cmp
jns
pop
push
std
popa
out
pop
xchg
sbb
add
xor
addr16
xor
sbb
and
adc
xchg
adc
pushf
add
dec
pop
std
sub
arpl
out
adc
or
stos
inc
lea
fidivl
sbb
jmp
push
add
repnz
inc
cmp
push
push
pop
mov
jbe
mov
subb
add
cld
sub
fs
sbb
push
push
sahf
push
or
mov
jae
xchg
inc
adcl
repnz
in
adc
add
mov
pop
sub
scas
mov
mov
call
negb
add
fnstenv
std
pop
dec
push
add
add
cmpl
inc
jmp
lea
adc
popa
jp
jae
inc
inc
adc
mov
pop
mov
mov
push
jns
or
jb
jne
xchg
cltd
push
jns
clc
mov
je
cs
test
aas
fmuls
xchg
lods
insl
jo
mov
add
add
in
sub
je
xchg
dec
adc
jo
fimuls
out
jae
pop
pop
xchg
jb
add
jne
push
push
mov
push
es
lahf
mov
shl
insl
push
add
cmpsb
or
dec
or
xor
cwtl
roll
sub
add
lcall
test
mov
add
add
lret
sbb
add
aam
sar
add
and
pop
shrl
cwtl
dec
andl
adc
inc
add
dec
push
xor
int3
cmp
pop
xchg
jg
inc
xor
jo
mov
stos
sub
xor
lcall
movsl
sahf
arpl
dec
lds
adc
lcall
add
add
add
lret
mov
fdivs
push
aad
inc
push
or
xchg
mov
aam
sti
loope
xchg
pushf
out
push
xor
decl
imul
lock
dec
sbb
ljmp
adc
and
xchg
stc
jmp
shl
das
fwait
cld
push
sub
ja
xor
bound
add
test
cld
sbb
mov
sbb
fnstcw
sbb
or
sbb
or
jmp
in
cld
sbb
dec
inc
pop
add
mov
dec
cwtl
inc
std
faddl
inc
jmp
bound
cld
adc
add
mov
pushf
dec
add
xorl
add
add
add
movb
test
clc
add
and
xorb
pusha
pop
push
xchg
in
push
in
inc
mov
xor
decl
cmp
loopne
jmp
push
xor
cmc
sar
out
data16
ljmp
call
xor
pushf
mov
shlb
xor
push
add
push
mov
inc
add
mov
inc
sar
jmp
lods
cmp
push
cmp
lods
cmpb
cld
and
std
pop
in
lock
push
ds
jge
and
inc
std
repz
pop
incb
leave
imul
adc
into
cld
add
roll
add
dec
add
cmp
jae
adc
into
cld
int3
adc
std
inc
sbb
lea
dec
iret
imul
push
adc
lcall
cmc
add
sahf
push
shrl
sbb
fcompl
add
sarb
imul
lcall
lret
rcrb
lods
arpl
test
add
clc
out
push
lods
imul
lcall
insl
lcall
push
scas
add
push
cmpsl
stos
rcl
cwtl
pop
add
cmp
add
fwait
lret
xor
lcall
or
scas
andl
popf
dec
adc
mov
add
push
mov
insb
add
fldenv
inc
rcrl
lods
mov
call
movsl
jb
inc
ja
push
fwait
cld
lea
mov
daa
scas
jp
dec
and
pop
sbb
jmp
xchg
movsl
inc
jmp
fdivs
sbb
sub
push
cmpsl
testl
lods
xorb
sti
adc
jnp
sti
jmp
add
arpl
lods
fs
call
adc
pop
mov
jg
call
inc
add
cmp
std
sbb
sahf
cmp
cmp
idiv
sub
jo
cmc
cmpsl
cmp
imul
push
add
mov
je
hlt
out
mov
cmp
lock
js
clc
xor
add
add
add
add
xchg
aaa
out
call
js
add
loop
dec
clc
sub
pop
lock
popf
js
xchg
mov
mov
cmc
iret
cld
out
add
xchg
rclb
lret
call
mov
in
lret
mov
inc
sbb
xchg
ss
mov
pop
add
adc
jle
add
push
or
jle
test
add
add
add
push
mov
notb
xor
aam
lret
cld
push
cmp
jb
xor
inc
inc
mov
add
stc
int3
arpl
cmc
inc
push
lods
es
inc
mov
int
and
push
xchg
ror
arpl
out
cli
or
adc
pop
push
movsl
imul
xchg
std
xor
in
push
xor
in
fldl
mov
or
jle
stc
aad
mov
pop
inc
add
mov
into
cmp
out
add
push
xchg
lods
int3
gs
arpl
xchg
xchg
xor
in
xchg
xchg
in
cmc
pop
jns
rolb
push
or
jmp
mov
outsb
sbb
mov
add
sbb
in
scas
repnz
push
sahf
inc
fstl
or
xchg
and
xchg
adc
push
xor
loop
repz
adc
add
add
inc
mov
and
je
je
cmpsl
adc
scas
adc
add
jmp
repnz
push
xor
adc
and
call
fidivrl
mov
js
xchg
jmp
xor
mov
pop
push
push
jns
test
imul
xchg
jns
xlat
push
add
inc
add
xchg
pop
xchg
mov
loopne
fsubs
or
dec
testl
clc
cltd
mov
push
pop
push
lea
stc
mov
imul
pop
stos
xor
shufps
jmp
pop
cmp
in
cmp
adc
add
leave
mov
push
stc
mov
pop
inc
in
add
mov
xor
int
cld
aad
cli
adcl
add
mov
inc
in
jns
sub
add
push
or
add
inc
lret
dec
ss
add
les
cmp
or
adc
add
int3
mov
cmp
push
cmc
repz
out
jmp
xchg
add
stc
les
add
push
add
out
adc
cmc
add
out
adc
jge
sub
inc
push
test
fadds
push
xor
cmp
loop
clc
rorl
call
sti
addl
inc
leave
sbb
xchg
xor
cmp
xchg
out
xor
out
enter
aas
push
xchg
xor
xchg
js
les
cli
add
xor
add
cmp
jbe
xchg
shrl
fisubrl
adc
xor
xor
inc
cmc
sar
scas
push
rorl
dec
div
out
xchg
call
cmp
insb
xlat
ds
jbe
loop
sub
xchg
cld
insl
adc
add
shr
popa
scas
cs
or
push
lcall
dec
jo
add
push
inc
jmp
adc
hlt
in
sti
mov
shlb
push
or
insb
lds
in
push
xor
roll
cmp
sub
jno
rolb
insb
push
enter
push
sub
addr16
cld
ud0
in
mov
aaa
ret
dec
xchg
ret
sub
fisttpll
scas
xor
add
sbb
adc
add
flds
add
out
mov
nop
int
pushl
mov
je
notb
push
push
inc
cli
push
add
push
adc
adc
push
cs
repnz
data16
repnz
and
mov
lods
mov
call
lret
push
sub
fsubl
rol
xchg
xor
cld
cld
outsb
fdiv
add
xor
add
xchg
inc
es
mov
cld
decl
int
int3
jns
cmpb
add
mov
cmp
push
cmpsl
aas
ret
mov
add
sbb
cmp
inc
cmc
dec
and
add
mov
cltd
add
movsl
sbb
mov
adc
sub
sahf
ret
xor
out
mov
jo
jle
add
out
lret
xor
mov
lea
iret
in
xor
mov
add
or
lds
or
lds
jecxz
jmp
insl
lds
pop
ja
pop
push
lds
outsl
aas
sub
pusha
add
mov
pop
dec
roll
hlt
out
inc
xor
inc
add
push
mov
lock
stos
out
add
push
lea
cmp
or
xchg
add
aas
test
imul
popf
mov
in
xor
mov
mov
iret
pusha
das
insb
xchg
jae
fisttpll
add
and
addb
xor
jmp
lahf
and
inc
add
or
lea
rcll
jb
adc
xor
add
xor
incl
mov
ja
lock
cld
pushl
or
imul
push
std
mov
mov
jno
add
cli
jne
jno
add
icebp
decl
xchg
or
add
add
add
shlb
rsm
inc
add
sub
test
call
mov
shld
add
clc
push
jg
cli
inc
push
mov
cld
ljmp
lea
jmp
andb
flds
popl
aam
and
mov
xchg
add
push
xchg
add
int3
xchg
add
push
cmc
cli
sbb
add
adc
pop
insl
sub
cld
in
popl
add
xchg
cmp
incl
test
pop
insb
or
int3
mov
mov
mov
cmp
lcall
mov
sbb
inc
push
cmp
push
scas
and
mov
imul
add
dec
add
dec
mov
add
xor
inc
cmp
cmpsl
mov
sub
rcrl
lea
xlat
mov
inc
scas
shll
inc
popa
sub
add
push
in
mov
sbb
out
push
mov
or
outsl
in
shll
add
xchg
xor
mov
mov
mov
test
cmp
add
dec
add
add
or
cld
jmp
adc
dec
jo
jl
fs
lea
loope
lock
cmp
sbb
jl
scas
inc
and
fs
inc
dec
in
and
adc
mov
imul
inc
fldenv
sbb
pop
iret
push
std
data16
adc
out
sub
sub
lea
int
test
jno
sub
jne
jo
adc
in
ljmp
mov
add
push
test
shlb
mov
fisttpll
lcall
inc
lock
sub
push
add
or
mov
pop
jmp
incb
add
loope
sub
leave
jno
push
mov
cmp
sti
push
adc
push
mov
sub
leave
sti
push
adc
or
push
add
cld
inc
mov
xchg
stos
push
mov
neg
xchg
test
xchg
add
xchg
adc
xchg
mov
rclb
xchg
sti
pop
jge
call
add
add
add
add
sbb
cld
xchg
jns
inc
lods
dec
sbb
subb
dec
aam
xchg
jmp
sbb
push
subl
pop
push
test
cltd
add
ss
mov
xor
mov
in
push
xchg
aaa
arpl
mov
mov
loope
mov
xchg
push
test
pop
sub
add
add
add
add
sub
push
int3
std
adc
push
dec
sub
inc
aaa
ss
jp
in
pop
cmc
mov
es
aaa
pop
dec
push
push
push
cmp
pop
ret
je
mov
jmp
cmc
mov
pop
pop
popl
ss
sbb
sbb
ficoms
data16
mov
xor
push
mov
cld
cwtl
iret
cli
xor
mov
xor
pushf
scas
mov
cld
mov
and
and
aam
xor
jmp
mov
push
orl
lods
orb
cmp
xchg
xor
mov
push
scas
lods
mov
xchg
fstpt
push
cmp
mov
cld
add
add
cli
adc
movsl
jno
xor
sti
jmp
or
call
ds
mov
std
ljmp
mov
jne
add
xor
inc
aaa
xor
icebp
mov
dec
jg
cmpsl
dec
test
or
mov
or
mov
test
out
xor
add
add
add
rolb
hlt
sub
add
loope
lock
movsl
mov
cld
push
test
xchg
jg
mov
mov
mov
add
aam
or
push
sbb
call
lret
sbbb
push
push
jle
das
or
jmp
mov
or
add
mov
test
add
jge
mov
lods
pop
call
or
jne
je
aad
stc
push
bound
ja
stc
mov
aad
out
shrb
movsl
mov
pop
sub
popa
inc
test
mov
daa
test
push
xor
push
enter
sub
faddl
pop
out
xor
pop
add
call
andl
push
xor
enter
ror
mov
mov
imul
in
mov
movsb
push
fidivrs
xchg
pop
les
mov
popa
mov
push
or
and
and
mov
repz
repnz
cld
push
insl
inc
jge
xor
jmp
add
dec
sbb
lahf
ret
jae
int
cld
inc
or
push
test
inc
push
lret
iret
fucomp
in
push
mov
and
rolb
and
je
jl
addr16
lods
incb
cld
sbb
rorl
pop
mov
xor
push
xor
push
dec
aam
lahf
add
mov
das
leave
je
or
das
mov
fldl
call
lods
insl
jno
cmp
sub
add
cld
mov
push
and
mov
fucom
and
cmp
jmp
mov
out
outsb
and
mov
outsb
out
ret
imul
mov
xor
roll
mov
sarl
cmc
sub
jle
add
add
xchg
es
dec
mov
fldenv
and
addl
jae
push
cmp
xchg
add
lahf
inc
stos
jns
loop
mov
dec
mov
cmp
jp
cmp
or
xlat
add
mov
pop
jmp
add
add
add
orb
lock
xchg
sub
lret
cmp
push
sbb
xor
adc
aaa
mov
mov
lods
adc
cli
mov
arpl
aad
push
inc
mov
scas
clc
imul
ljmp
and
test
pop
mov
or
inc
push
mov
pop
mov
cmc
ss
fcomip
inc
dec
pop
mov
add
add
lahf
das
push
jbe
scas
cltd
mov
add
fs
add
jno
iret
add
lcall
out
stos
push
jle
mov
js
imul
repnz
cmp
repnz
cmp
test
fxch
xchg
ja
jl
mov
add
push
sub
sub
fsub
dec
push
xor
ds
cli
mov
add
add
add
add
inc
xchg
enter
sbb
in
orl
xchg
push
ss
out
cmpl
jg
cld
push
jnp
gs
jge
sarb
xchg
into
je
adc
inc
adc
pop
add
cmpsl
inc
in
test
jecxz
sub
lret
lahf
ret
xchg
jmp
sti
sldt
in
sti
ljmp
ret
sti
jmp
loope
jo
sti
and
jno
xchg
xorl
mov
add
in
cld
out
or
js
testl
aaa
xlat
jae
das
dec
in
jmp
leave
xor
das
les
jmp
or
lods
mov
ds
add
add
mov
push
xchg
std
cmp
adc
push
adc
jae
adc
aam
aaa
sub
sub
out
jg
jae
pop
jns
rcl
loopne
push
or
jl
xor
add
jae
mov
imul
dec
push
mov
or
add
push
push
xchg
add
int
inc
add
xor
sbb
pop
cmpsl
add
repz
jno
xchg
das
out
fadds
adc
xor
fstps
pop
adc
jge
call
cmp
mov
xchg
repz
xchg
add
xor
lret
jecxz
test
xor
bound
adc
andb
inc
add
push
loopne
inc
insl
push
mov
adcb
mov
add
push
out
push
cmpsl
stos
out
aaa
sub
dec
aas
add
mov
xor
jo
push
sbb
sub
push
push
xor
orl
lods
mov
push
insb
push
push
and
jecxz
subb
xor
sarl
add
jl
cmp
popa
jl
bound
add
pop
inc
jmp
mov
lock
cmpsw
jae
jecxz,pt
or
jl
fs
dec
js
push
xor
mov
jnp
out
mov
and
movsl
sub
push
add
testl
dec
test
call
idiv
mov
sbb
pop
adc
cs
sti
repnz
ljmp
push
and
add
sub
adc
test
test
imul
add
xor
inc
dec
xor
xor
shll
pushf
repz
cs
lcall
decl
cld
inc
and
loope
pop
mov
pop
ret
int
call
in
push
jecxz
add
push
mov
std
pop
push
scas
jb
cltd
scas
adc
lret
in
add
int3
inc
add
aam
add
adc
push
or
or
mov
add
out
call
mov
jle
cmpl
xchg
add
add
or
stos
add
push
add
and
aaa
lods
adc
inc
add
lret
add
push
dec
pushf
push
xchg
fdivl
and
xor
scas
add
lret
mov
add
js
fwait
lds
scas
push
shll
xchg
push
add
out
loopne
push
stos
push
inc
das
out
add
out
add
mov
lret
dec
jns
sub
shrb
xor
repnz
fdivs
repz
loopne
add
pop
scas
dec
lods
cmpsb
aaa
sahf
stos
adc
js
sbb
add
movsl
sub
data16
sbb
add
dec
or
add
movsl
aas
jmp
mov
xor
and
inc
icebp
jl
jae
dec
mov
ss
mov
popf
pop
jne
lds
inc
int
jne
lds
push
xchg
push
mov
out
je
cld
adc
bound
dec
adc
jmp
add
push
mov
inc
pop
sub
mov
jg
ss
push
mov
push
xor
xchg
es
jmp
inc
xor
add
jno
clc
sti
adc
arpl
add
cmc
cmp
lea
fs
rcr
bound
call
imul
push
jmp
xchg
add
jmp
xor
lods
jae
shl
cld
js
test
cmpb
xor
js
inc
mov
jg
in
or
ds
jmp
lret
mov
jb
mov
and
jae
push
jb
adc
adc
xchg
shll
popa
aad
adc
pop
fprem1
xchg
pop
xorb
xor
add
xor
cld
ret
inc
add
add
dec
lcall
das
cmpb
arpl
dec
xchg
cld
jae
add
or
enter
xchg
add
testl
push
xchg
std
inc
xor
cmp
xor
int3
cmp
sub
repz
add
data16
or
stos
xor
lods
adc
out
clc
andl
cmp
das
out
xor
cmpsl
xchg
jmp
lds
jno
add
test
jecxz
push
loope
dec
dec
ficoms
add
mov
in
enter
add
subb
iret
push
pop
je
js
ret
pushl
add
add
add
sti
je
pop
ror
clc
cmpsb
jmp
cld
hlt
lret
jmp
cli
je
in
cmp
jmp
insb
sbb
outsb
ljmp
out
rcrl
call
dec
cmpsl
xchg
xchg
test
jne
in
shll
decb
sub
jmp
sti
je
fisubs
scas
call
dec
cld
and
cli
out
add
mov
xor
gs
call
bound
pop
cli
add
faddl
test
inc
ret
je
jae
sti
sbb
imul
movsb
ret
enter
sub
xchg
repz
pop
shll
sti
mov
sti
pushl
cmp
jmp
sub
jbe
add
add
stc
xchg
lods
push
leave
sti
push
jmp
dec
or
pushl
xchg
arpl
xchg
repnz
jo
jo
and
dec
call
push
add
testl
mov
sub
cli
ss
push
std
movsb
cmpsl
adc
testl
sar
add
add
push
rorb
mov
or
jb
push
cmpsl
adc
sbb
cmp
or
pop
js
adc
adc
push
rcrb
rcll
xor
hlt
cld
xor
xor
fimull
dec
pop
xor
adc
test
inc
jno
imul
clc
inc
sbb
xchg
xor
inc
es
add
popa
ds
cmpsl
imull
and
cmpsl
orb
movsb
flds
stos
xor
movsb
div
and
add
es
test
add
sahf
not
data16
leave
out
jl
and
repz
fsubrp
cwtl
std
mov
js
pushf
ljmp
push
push
xchg
jns
cmpl
add
xchg
pop
aas
shrb
das
or
mov
iret
add
push
add
in
add
add
jo
cld
jmp
cli
insb
jae
js
pop
pop
mov
out
lret
dec
and
mov
cmpb
ret
push
add
adc
call
xchg
jecxz
push
add
outsl
cld
add
xchg
sti
call
push
xchg
fdivr
outsl
add
clc
out
add
cmc
jae
test
xor
add
das
or
clc
dec
xor
or
mov
in
daa
xor
test
pop
insl
push
dec
cwtl
mov
xor
leave
clc
xor
inc
lret
call
stc
imul
xor
add
add
xor
test
inc
push
in
cld
clc
dec
lret
xor
ss
xor
push
pop
jl
sbb
outsb
mov
xor
cltd
add
fistpl
outsb
lea
lcall
pop
pop
add
xchg
jmp
daa
inc
cmc
cld
pop
scas
lods
adc
dec
call
add
inc
xchg
inc
pop
stos
nop
mov
out
sahf
loop
add
push
test
mov
add
cwtl
les
add
adc
xor
xor
lock
dec
push
ljmp
xor
inc
enter
push
xor
mov
mov
imul
pop
mov
or
adc
add
add
add
add
adc
lret
lret
imul
out
xchg
adc
sub
out
out
into
repz
or
dec
or
jecxz
int
add
in
inc
cmp
out
enter
shrb
mov
add
inc
out
add
iret
clc
and
repz
mov
sbb
fs
loope
jb
cmp
adc
mov
add
add
add
cmp
add
push
cld
pop
sbb
cmp
insl
push
xor
dec
fsubr
and
testb
sub
mov
cmp
jne
adcb
aas
imul
ficoml
mov
out
inc
call
add
inc
or
out
daa
call
mov
mov
repz
aas
add
add
outsl
mov
cld
jmp
aaa
sti
mov
dec
incl
repnz
pushf
addr16
mov
inc
and
pop
test
in
lea
test
int3
cld
jmp
sbb
jl
adc
xchg
das
push
pusha
pushf
jle
cmp
sti
je
pop
in
xchg
xchg
sti
xor
repnz
clc
pop
fs
subb
pop
and
nop
adc
add
add
add
in
out
decl
cmp
call
in
dec
notb
push
test
lods
pop
add
or
jnp
mov
cwtl
add
test
in
stc
pop
add
roll
xorb
push
xor
imul
adc
adc
call
push
mov
mov
les
call
add
add
inc
pop
lret
rcrl
call
out
push
push
sub
xchg
push
adc
lahf
scas
mov
mov
sub
push
std
mov
fnstcw
mov
into
xor
fcoml
icebp
push
add
xor
fcoml
jecxz
push
push
orl
fxtract
jbe
popa
xchg
sub
out
xor
sbb
add
out
xchg
in
mov
call
sbb
testb
ljmp
sbb
ljmp
pop
xor
push
imul
scas
dec
int3
lea
push
mov
in
mov
outsl
jb
mov
call
sahf
cli
notl
jmp
fstl
sti
iret
imul
dec
xor
push
imul
add
mov
or
xchg
std
mov
rcrl
daa
pop
std
push
inc
ljmp
adc
out
xlat
call
inc
clc
out
jecxz
cld
insl
adc
add
adc
xchg
sbb
add
xorl
adc
sub
dec
sbb
push
jg
jge
adcb
jg
in
mov
dec
sbb
add
daa
test
mov
aaa
add
sti
jne
fwait
push
stc
mov
xor
mov
cmp
cmp
add
mov
adc
inc
and
push
mov
add
mov
ljmp
inc
and
sbb
je
dec
in
add
pop
and
dec
pop
xor
je
inc
adc
cld
mov
call
aas
add
stc
loop
dec
ret
or
flds
add
movb
add
add
mov
dec
mov
test
mov
popa
xchg
jae
mov
in
add
iret
mov
push
aad
jae
data16
popa
int3
pop
and
xor
cli
push
pop
test
sub
xchg
xor
inc
and
add
adc
popa
int3
dec
and
outsl
xor
push
xor
mov
sub
call
add
in
ret
fmul
jecxz
dec
jns
push
mov
out
pop
xor
arpl
jne
aas
arpl
xor
pushf
inc
or
lods
lea
add
in
add
data16
out
sub
lea
pop
sub
xor
push
add
ja
loope
loop
iret
stos
cmc
popa
out
and
cmp
mov
out
fcoms
mov
ss
call
out
imul
mov
cld
cmp
arpl
decl
inc
out
mov
cld
sbb
arpl
fists
inc
add
hlt
arpl
pop
add
add
push
xor
lock
or
negb
cld
call
push
hlt
call
dec
cmp
jne
or
jge
adc
out
arpl
jae
dec
xor
sub
jle
xor
and
add
mov
mov
cmp
test
sub
add
cmp
and
inc
push
push
lcall
call
xorl
and
inc
and
add
clc
jno
and
das
xor
mov
mov
lea
xchg
imulb
outsl
add
mov
and
mov
and
and
sub
xchg
js
test
xor
xchg
out
xor
js
xchg
adc
cmp
fdivl
add
and
dec
and
lea
aas
and
xchg
in
xor
add
add
lea
mov
or
inc
incb
test
movsl
mov
or
call
test
mov
xchg
adcl
clc
jno
fiadds
inc
ret
mov
or
insl
xorb
outsb
xchg
cld
adc
jg
and
or
pop
pop
xchg
inc
sub
xor
add
add
or
add
sub
loopne
xor
xor
mov
add
inc
popf
pop
xor
lea
push
call
loopne
pop
xchg
or
insb
sysexit
adc
dec
divb
out
bound
lods
stc
xor
add
fmull
in
scas
jle
add
mov
or
xchg
cmp
insl
xchg
mov
cld
jno
add
rorl
or
jecxz
nop
fsubrp
sub
insl
popa
incl
dec
push
shlb
ret
std
mov
rorb
push
filds
push
dec
pop
cmc
mov
add
add
mov
incb
dec
pop
inc
out
shr
arpl
out
imul
arpl
sub
push
jb
loope
or
add
add
add
push
xor
mov
dec
popa
push
jb
test
ss
stos
xor
scas
xchg
lret
push
lods
sub
push
xor
out
mov
fwait
in
incl
add
xor
das
mov
pop
movl
test
mov
addr16
movb
aam
jge
ffreep
xchg
add
and
jo
push
test
sti
push
dec
mov
outsl
movb
or
sti
jne
test
lock
and
hlt
and
clc
call
xor
jo
outsl
cmpb
xor
cld
jle
xchg
mov
xchg
xchg
test
xor
xlat
push
push
sub
add
sti
lahf
out
inc
xchg
cld
add
sub
sub
push
dec
add
push
cmp
ja
or
inc
dec
add
push
inc
push
mov
cvtdq2ps
or
out
fwait
add
jg
iret
cwtl
jg
pop
sahf
test
test
xchg
mov
xor
std
mov
movl
xor
push
push
das
data16
add
insb
pop
pushf
xchg
jecxz
lcall
pop
in
sahf
dec
insb
jl
pop
imul
ret
and
push
xor
cmp
jae
add
ret
or
xor
sub
mov
push
icebp
mov
pop
jge
adc
test
ficoms
xchg
aad
sub
into
add
add
xor
mov
outsb
xor
add
rcrl
mov
and
call
addl
inc
jmp
and
dec
bound
shlb
mov
pop
stc
in
push
lcall
add
cmp
stos
jle
add
ret
loopne
in
fs
dec
dec
dec
mov
push
pop
jae
push
add
push
xor
fcompl
stos
pop
xor
add
mov
jmp
dec
xor
mov
out
push
cld
push
ds
out
lcall
add
sar
test
xlat
cmp
inc
inc
push
scas
dec
fdivrs
rcll
mov
cmp
inc
xor
mov
mov
adc
push
das
rorb
dec
push
mov
int3
std
out
dec
call
add
add
add
jg
sti
jge
or
icebp
cmpb
mov
add
xlat
adc
add
cli
push
push
aam
iret
mov
xchg
dec
scas
jl
adc
dec
test
dec
push
and
xchg
add
dec
xor
sbb
cmp
packsswb
xchg
je
in
iret
fs
mov
mov
std
mov
add
cwtl
mov
inc
sbb
xchg
push
mov
mov
cmp
push
les
pop
stc
mov
leave
out
mov
pop
sbb
pop
and
push
push
add
inc
filds
add
xor
sub
out
cltd
inc
aas
pushf
cmp
xor
or
adc
push
xor
xchg
xor
add
fmuls
mov
ja
mov
add
jge
sub
pop
pop
out
push
sbb
pop
mov
add
insb
push
sub
xor
jl
add
sbb
int
add
cmpsb
push
aaa
negb
cmp
not
fsubr
jp
sub
inc
push
cmp
lea
lods
aas
jmp
add
movsl
jb
cs
pop
fisubs
cltd
call
adc
je
das
loope
lds
cmp
testb
cld
fs
fidivs
xchg
pop
push
mov
push
xor
int3
lret
fildl
jo
sub
daa
dec
cmp
dec
jae
lods
scas
sbb
shl
cmp
pushf
cmpss
cli
adc
cmc
jo
sub
fildl
add
cld
pop
xor
xchg
imul
mov
sbb
xchg
xchg
or
rolb
je
lods
jns
stos
fildl
js
inc
and
inc
or
mov
mov
in
data16
sbb
pushl
aad
or
out
and
ljmp
mov
mov
xchg
pop
cmpsl
add
add
mov
sti
je
pop
sti
ja
mov
add
sub
xor
pop
cs
fisubl
mov
lret
rolb
pop
xchg
jns
lret
sub
jge
andb
xchg
loopne
pop
jns
inc
jge
cwtl
loop
dec
add
cmp
lods
add
pop
dec
add
xchg
mov
xchg
inc
add
fcoml
push
loop
cld
ss
out
mov
cwtl
mov
cmpb
dec
jbe
stos
jb
push
fisubrl
xchg
xor
aam
add
stos
std
shlb
lret
pop
sub
xchg
das
out
cmp
rclb
out
mov
bnd
sub
add
shlb
add
add
add
out
les
xlat
in
push
and
jle
push
xchg
xor
out
jmp
call
add
cmp
push
mov
jmp
push
test
pop
inc
mov
mov
inc
dec
mov
cld
push
fdivrp
rorl
push
out
push
xor
jb
push
cmp
lret
jmp
add
jl
std
jbe
xchg
jae
adcb
rclb
bound
popa
in
psubq
outsl
add
mov
push
mov
lock
mov
push
mov
add
scas
jp
push
call
leave
ja
clc
bound
test
push
xor
dec
nop
call
and
add
add
shlb
add
jno
inc
in
scas
mov
add
in
cwtl
add
aam
je
jl
inc
add
or
test
add
aad
cld
jmp
or
push
push
mov
pop
xchg
stc
mov
add
dec
mov
aad
add
scas
mov
ljmp
dec
or
xchg
adc
add
cmp
xchg
shrl
push
jg
push
inc
cmp
int
jae
jmp
sub
add
mov
fimull
add
push
cmp
and
and
push
mov
pop
loopne
add
or
fsts
add
mov
jg
lods
cli
mov
dec
cwtl
ds
mov
fadd
mov
xchg
xor
add
add
add
jg
xor
sub
shrl
cld
aam
or
shll
add
push
xor
enter
pusha
jo
sub
mov
out
repz
test
sti
push
mov
jb
dec
lods
scas
adc
out
out
testb
fs
cmp
outsb
hlt
ror
out
add
add
inc
jle
push
xor
aas
inc
scas
out
mov
push
out
lret
cmpl
add
outsb
mov
push
out
repz
out
repz
out
push
jmp
sbb
mov
shlb
ss
and
mov
add
push
xor
sub
push
or
jmp
add
add
add
insl
out
out
pop
pop
mov
fisubrl
call
jp
cld
jmp
fisubrs
std
push
and
and
sahf
push
xor
fs
xor
cli
leave
and
xor
aas
jmp
leave
push
out
sbb
xchg
aam
push
push
push
cmp
lfs
incl
add
adc
cmovbe
add
push
clc
jno
in
mov
pop
mov
jnp
push
je
lods
cmc
or
ljmp
sub
sti
cmp
aas
sbb
mov
addl
or
cs
sti
imul
lods
test
or
xor
add
jno
loope
imul
push
mov
incl
add
ret
jae
les
ficompl
pushf
mov
test
push
sub
cltd
or
lret
mov
enter
jns
jmp
xchg
aas
cld
sub
or
xor
cld
inc
jg
iret
into
test
test
add
push
ret
fsubrl
mov
lock
mov
add
js
add
sbb
push
lret
xchg
mov
fidivrl
push
xor
scas
mov
call
inc
mov
fisubs
dec
out
pop
mov
into
pop
push
xor
adcb
popa
aas
add
loope
in
imul
push
ja
mov
add
hlt
jp
dec
inc
jle
push
xor
sbb
push
mov
xor
cld
xchg
jecxz
cwtl
rcrl
xor
out
popa
mov
adc
das
cs
arpl
inc
cmp
std
jl
cwtl
mov
shr
jmp
outsl
pop
dec
rcr
push
call
lahf
ret
mov
call
add
add
add
lcall
call
mov
dec
cld
insl
adc
adc
out
in
dec
cld
inc
das
dec
cld
jmp
push
scas
bound
mov
mov
push
xor
int
in
push
xor
jmp
xchg
pop
mov
add
jmp
or
adc
push
mov
push
add
add
add
lahf
xor
add
in
cmp
xor
sub
xchg
pop
adc
ljmp
rclb
mov
frstor
pop
mov
or
packssdw
inc
sbb
hlt
add
add
pop
adc
out
xor
call
adcb
faddl
pop
ret
enter
add
dec
pop
insl
inc
ficompl
inc
movsl
movsl
jns
rcrb
test
pop
pop
imulb
pop
into
inc
sub
jns
mov
in
jnp
push
inc
call
ret
push
fistps
pop
sub
sub
das
jl
xchg
xchg
test
xor
jno
fcos
or
leave
mov
jp
in
out
add
xor
sbb
scas
pop
aaa
push
push
xor
test
fnstenv
jmp
fistpl
mov
pop
shll
jmp
push
mov
mov
insb
pop
dec
std
or
inc
xchg
jmp
das
out
cmp
pusha
pop
cs
jmp
je
in
add
mov
testl
mov
add
jp
push
xor
insb
lea
add
jns
stos
dec
xor
sub
mov
test
negb
xchg
addl
loop
out
cmc
call
add
xor
test
icebp
cmp
push
bound
cmp
push
add
jb
negl
push
pop
or
rorl
add
loope
out
push
fisubrs
ja
cld
jmp
push
pop
xor
mov
or
movsb
pop
das
rorb
jg
cmp
movzwl
andb
jo
sti
lds
pop
add
mov
mov
push
jg
popa
dec
add
add
sbb
sbb
icebp
outsl
bound
sub
mov
out
popf
imul
cs
xchg
jg
ljmp
je
lods
les
push
mov
mov
xchg
ffree
int3
movsb
notl
add
data16
testl
insb
pop
push
outsl
imul
add
push
inc
add
inc
jb
bound
idivb
mov
imul
or
add
or
scas
aam
jae
fimull
inc
push
dec
cmpsl
push
mov
jge
push
lock
lcall
dec
adc
inc
jg
jge
or
into
pop
xor
xor
mov
xor
add
sub
addb
mov
and
sbb
loopne,pt
fdivrl
testl
or
dec
push
repz
imul
dec
ja
call
push
fcmovnbe
mov
pop
push
fisubs
push
jle
clc
push
decl
mov
mov
pop
or
out
mov
pop
jmp
add
add
sub
call
js
andl
sarb
imulb
add
pop
test
xor
out
inc
notb
jne
add
ds
add
push
xor
inc
and
rolb
adc
filds
mov
mov
lret
push
xor
adcl
xchg
mov
in
add
aas
rol
jmp
xor
jmp
dec
mov
mul
or
jg
iret
inc
cld
add
cmp
and
clc
inc
and
call
xor
add
or
xor
shrb
mov
fcoms
xor
adc
jbe
mov
jmp
imul
mov
add
rolb
add
jle
mov
cmp
jg
cmp
mov
mov
add
lods
mov
fnsave
inc
sub
adc
jno
ljmp
cs
push
adc
push
aam
jb
dec
inc
ror
mov
adc
mull
push
push
out
or
pop
push
subl
jns
add
insl
dec
jg
and
sar
pop
xchg
add
push
add
xchg
add
dec
cmpsl
ljmp
push
jns
stc
addr16
push
out
add
pop
insl
add
push
mov
adc
adcl
inc
das
inc
push
xchg
add
cmp
adc
xor
add
push
into
out
xor
add
std
es
xchg
xor
add
add
sub
jecxz
inc
push
xchg
out
jb
add
std
es
or
and
add
sub
ror
inc
imul
fs
pop
movsl
jp
jnp
push
jge
inc
cmpb
jbe
xor
roll
sbb
divl
jb
sbb
dec
xor
sbb
lahf
xlat
mov
or
add
lahf
jmp
jae
sub
stos
push
xor
add
or
std
inc
cld
mov
push
xorb
xor
adc
push
fcoms
cmc
lds
pop
xor
ljmp
subl
sbb
dec
orl
push
sub
adc
ficoml
in
in
add
push
fcmove
cli
jnp
push
mov
daa
lock
add
jne
jo
cmp
mov
add
or
jbe
daa
ret
sti
je
xor
add
xor
sub
les
xor
and
enter
jo
xchg
pop
sti
adc
add
sti
add
test
push
or
add
and
aas
loope
cmp
ret
xchg
inc
shlb
push
pop
dec
je
fwait
adc
adc
add
cmp
push
inc
push
cmp
loope
imul
push
add
lds
test
push
pop
mov
out
mov
jmp
mov
in
add
add
mov
xchg
incl
xorb
jp
mov
leave
imul
fstpt
pop
push
popa
stc
xchg
int
add
aad
fstpl
dec
jg
xor
popl
stos
mov
xlat
mov
loope
add
jbe
sub
in
dec
aas
pop
adc
dec
lds
inc
pop
mov
add
push
aas
cmp
cmc
into
jmp
aas
push
add
add
jbe
test
nop
ljmp
dec
mov
xchg
aas
jge
adc
mov
sti
lods
pop
add
mov
xchg
jb
add
stos
push
test
jmp
arpl
push
jae
push
xor
push
and
bound
addr16
lods
addb
push
xor
push
test
call
inc
jo
sub
or
not
push
add
clc
and
mov
jmp
cld
fidivrs
cmp
push
mov
sbb
popf
push
inc
mov
pushw
cld
inc
stos
inc
xchg
jge
fs
pop
loop
xor
pushf
jne
add
cmpsl
call
add
add
add
add
cld
ljmp
sti
adc
ret
les
inc
pop
sub
add
lds
sbb
inc
add
mov
hlt
mov
popa
ret
xor
adc
jb
mov
daa
sti
pushl
in
cmp
popa
sti
adc
xor
addr16
inc
in
add
push
and
inc
addb
push
inc
add
or
incl
push
lret
imul
fs
xchg
inc
jg
push
mov
mov
dec
pop
dec
add
cld
sub
add
sarb
icebp
outsl
ror
int3
or
jmp
mov
cld
push
inc
xchg
add
aad
inc
or
xchg
fmuls
out
mov
jo
mov
roll
inc
sarb
inc
sahf
das
mov
iret
in
icebp
pop
and
repnz
aam
lods
dec
add
mov
clc
dec
divl
lock
shrl
pop
dec
fildll
cmp
leave
cmp
jle
cs
pop
scas
push
out
jl
es
inc
scas
imul
ds
jmp
outsl
cmc
cmp
test
fsubr
add
sbb
cltd
xor
add
jae
cli
cmp
out
arpl
clc
ret
scas
cmpsb
ret
fistpll
out
adc
ljmp
mov
cli
add
mov
es
xor
sub
push
shr
rcl
push
loopne
push
iret
outsl
or
imul
add
add
add
push
test
adc
adc
mov
push
xor
ret
mov
dec
sub
es
subb
jb
leave
cmp
cmpsl
inc
sar
orb
xor
mov
adc
xchg
mov
jmp
add
mov
fcmovnb
and
test
data16
jb
push
add
sti
xlat
jmp
or
mov
dec
lea
orb
adc
outsb
cld
test
add
push
fistpl
dec
nop
pop
cld
add
scas
mov
cwtl
clc
scas
int
ds
cli
push
cmp
sbb
jae
in
sbb
mov
pop
clc
xor
shl
test
add
add
add
add
push
xchg
stos
stos
outsl
mov
xchg
pop
push
pop
imul
out
imul
iret
adc
mov
inc
push
imul
out
int
fcmovnu
inc
fcoms
xchg
dec
out
mov
out
xchg
pop
out
mov
out
xchg
push
pushl
and
cld
pop
inc
mov
dec
inc
dec
or
or
addb
adc
arpl
cld
pop
dec
mov
inc
movb
pop
mov
push
xor
aam
popa
popa
shll
ret
fsts
jle
lret
ret
rcll
outsl
fcmovnb
inc
pop
test
repnz
and
inc
push
xor
add
imul
inc
lods
rcll
pusha
lock
sbb
adc
add
es
shll
hlt
out
outsb
fcomip
pop
inc
adc
pop
push
jmp
lods
cmpsb
negl
jmp
jecxz
out
push
loopne
ret
add
and
ficoml
inc
inc
jmp
or
aaa
scas
inc
in
push
push
je
aaa
jae
cmpsl
xor
mov
loopne
stos
push
ret
adc
push
ja
fsub
sbb
add
inc
inc
jmp
pop
and
xor
jge
adc
bound
xor
sub
sub
aam
es
jmp
or
pop
stos
es
push
aas
jle
leave
xor
jmp
pop
pop
test
sub
push
jno
fwait
repnz
stos
xor
push
push
xor
xor
add
out
and
jp
add
negl
add
test
xchg
xor
jo
cmc
cmpsl
and
mov
xor
push
jle
std
mov
or
cmovo
scas
mov
and
sub
add
jno
mov
cmp
test
and
ret
adc
sar
dec
cltd
mov
cld
lret
add
iret
jle
lds
xchg
and
add
push
rol
and
int3
and
int3
and
int3
and
mov
aas
mov
sbb
cmp
add
fimull
add
fdivl
add
push
ds
scas
lret
mov
les
inc
aam
and
pop
add
fs
inc
add
push
mov
add
xor
sti
sarb
add
fnstsw
das
out
mov
out
push
stos
addl
and
mov
push
and
arpl
mov
xor
add
or
push
xor
fucomi
or
xor
out
xchg
and
jg
xor
ss
pop
addb
jb
call
and
xor
add
lock
jp
mov
sub
call
insb
xchg
mov
and
xor
cmp
sbb
xor
test
mov
jg
push
mov
cmp
mov
and
andb
int
das
jmp
in
dec
or
mov
add
insb
inc
or
std
inc
jmp
inc
add
nop
out
and
jb
rclb
fsubrs
inc
mov
add
mov
in
sub
and
test
xchg
test
mov
and
mov
push
jae
and
outsb
push
mov
mov
xchg
push
inc
test
xchg
xchg
push
mov
add
add
mov
add
jo
ud0
adc
inc
and
push
cmp
push
leave
sti
cmpb
repz
mov
add
call
ret
out
pop
pop
adc
add
test
push
subb
into
push
jnp
xor
lahf
into
push
mov
sub
xchg
add
sub
lds
inc
add
stos
xlat
addr16
lret
sbb
xchg
or
push
mov
jne
sub
sbb
shl
jnp
addr16
inc
xchg
push
inc
add
xchg
mov
fisubrs
inc
dec
pop
addr16
jmp
in
and
jae
aad
add
push
xor
mov
jmp
es
jg
xor
add
out
push
and
xor
test
not
dec
out
push
dec
repz
fdivl
or
arpl
mov
add
loopne
cmp
out
dec
lods
and
scas
and
cmpsb
xor
xor
jmp
xor
mov
inc
lcall
lods
not
outsl
sarb
addr16
aam
add
out
lods
incb
ret
mov
adc
je
das
push
xor
add
and
dec
jne
sub
cmp
add
pop
cli
movsl
push
bound
ljmp
push
std
sub
push
cmp
cmp
xchg
xchg
gs
mov
out
jmp
dec
div
cwtl
add
xor
xchg
cmp
sti
outsb
push
xor
cmpsb
push
sub
or
add
js
lea
cld
dec
xor
pop
and
mov
and
nop
decl
sub
aas
and
stos
jne
lods
popf
or
or
adc
out
jmp
pusha
fldcw
mov
pop
xchg
mov
inc
mov
pop
adc
jp
add
xor
xor
jne
test
sbb
scas
mov
and
movsl
ja
mov
xchg
jle
jl
incb
std
inc
pop
inc
mov
add
aad
xor
cmpsl
jg
repnz
outsl
add
arpl
cld
ss
je
and
mov
test
getsec
aas
lds
mov
cmpl
sbb
add
test
fimull
rclb
dec
out
mov
sub
mov
sub
mov
cld
xchg
aas
jae
cmc
mov
and
mov
pop
push
in
lret
fs
sub
jae
xor
sub
enter
imul
mov
push
andl
dec
mov
fwait
enter
inc
add
push
xor
addl
repz
push
mov
neg
jb
rcll
test
stc
sarb
sub
out
pop
daa
enter
sbb
repnz
pop
inc
test
bound
mov
and
dec
inc
jnp
outsl
push
mov
pop
iret
jl
nop
adc
sbb
mov
add
sub
mov
add
inc
rclb
inc
xor
ljmp
es
mov
xor
test
sub
lea
xor
dec
pop
jo
adc
cltd
fnsave
sub
sti
mov
xor
std
mov
fwait
cmp
sbb
push
push
xchg
mov
inc
xchg
mov
inc
mov
pop
jle
add
mov
clc
jmp
das
push
push
inc
inc
shlb
mov
ja
lods
fisubrl
and
mov
test
fcoml
xor
ja
aam
xchg
sbbl
call
jge
pop
test
add
aaa
repz
cmp
popa
lock
inc
jno
pop
inc
nop
cmpsl
mov
add
inc
mov
nop
mov
pop
mov
mov
sahf
stos
add
int
rcrl
int3
xchg
sub
push
sub
adcl
decb
lea
lea
sar
shll
dec
enter
and
and
shll
pusha
add
enter
and
fcomp
and
aam
sbb
xchg
call
aam
sub
pop
add
lret
sbb
mov
mov
pop
push
ss
outsl
lock
xor
pusha
test
cmpsb
adc
imul
add
insl
daa
cltd
xor
add
mov
sub
xchg
mov
push
xlat
cmp
mov
mov
add
xchg
stc
mov
xchg
cltd
mov
out
mov
into
mov
repz
cmc
lret
inc
jo
mov
push
loope
adc
gs
ljmp
jle
mov
xlat
nop
stc
es
xor
pop
pop
inc
insb
inc
inc
test
jb
add
mov
jns
xchg
jecxz
lea
jge
mov
add
dec
cmp
test
jg
mov
inc
or
pop
xchg
cmp
es
sbb
mov
movsl
int3
sbb
mov
sti
cld
adc
jmp
fldt
push
push
mov
dec
xchg
ret
loope
jae
int
mov
or
sub
and
cld
into
loope
and
add
push
xchg
cmp
test
xchg
call
mov
sub
cwtl
jnp
fisubrs
test
jl
mov
mov
add
jecxz
push
dec
mov
cmpl
call
shr
lds
sti
ljmp
xor
popa
inc
xor
mov
dec
push
mov
add
or
adc
pushl
negl
insb
pop
shl
mov
mov
adc
pop
add
push
sbb
push
mov
lds
fisttpl
leave
push
add
push
push
or
cld
in
rorb
daa
setbe
cmp
xlat
add
add
sbbb
add
dec
test
add
push
pop
mov
pop
xchg
shlb
lcall
stc
movsb
clc
cld
out
fsubs
test
shr
cmp
dec
insb
xor
pop
leave
imul
pop
mov
pop
or
in
add
sbb
fwait
icebp
pop
add
adcl
mov
or
xchg
mov
push
inc
add
gs
lds
imul
pop
xlat
jb
inc
aaa
ss
push
mov
push
mov
jge
add
xor
lret
cmpb
push
stos
sub
in
jmp
jmp
push
jmp
in
xor
test
sub
add
nop
sub
jmp
pop
ljmp
add
add
add
push
xor
stos
mov
add
push
rcll
fs
and
cmp
cmc
cmp
ljmp
out
xor
push
inc
inc
addr16
push
xor
xor
jmp
xchg
sahf
mov
push
jo
icebp
lret
jl
cld
mov
scas
repnz
mov
mov
je
mov
jmp
adc
mov
xchg
cld
pushl
aaa
std
jmp
cmp
mov
mov
add
xor
jne
mov
adc
outsb
outsl
inc
icebp
inc
jmp
js
imul
gs
call
test
decl
or
ss
adc
mov
mov
mov
outsl
or
add
jb
cld
push
push
xor
out
cmp
shlb
pop
xchg
cmpl
inc
xor
test
and
mov
or
fldpi
filds
add
inc
lret
pop
ret
pop
imul
das
std
andb
cld
cmp
out
aas
push
nop
call
push
dec
push
add
push
pop
add
push
les
bound
sbb
std
push
xor
iret
inc
push
pop
add
xchg
mov
sarl
in
mov
mov
and
int3
pop
mov
lock
jg
icebp
iret
pop
mov
or
ds
popf
cmp
repnz
xor
js
outsb
inc
jns
pop
mov
add
add
add
dec
cmpsb
iret
dec
jmp
ljmp
in
loope
add
outsb
push
rcrl
fmulp
shll
dec
iret
mov
mov
dec
js
mov
movsl
sub
sub
sbb
fsts
mov
call
gs
popf
psadbw
jne
imul
out
lods
rclb
inc
shrl
dec
test
add
mov
xor
aad
out
shll
jne
push
sub
jmp
push
or
push
xor
xchg
popf
sbb
fisubl
jbe
xor
mov
shrb
dec
sahf
pusha
rolb
jb
rcr
lds
mov
insb
cld
ret
int
out
push
sub
call
xchg
push
add
push
add
lods
sub
sub
xor
test
add
ljmp
js
jmp
cmp
call
and
pop
push
lds
aas
xor
add
push
leave
mov
int
je
and
je
and
inc
out
cld
pop
stos
stos
aas
and
into
cld
je
and
cld
mov
ja
cld
add
xchg
inc
jne
scas
mov
push
push
cld
cmpsl
dec
xchg
adc
stos
cld
gs
add
adc
push
cld
jbe
mov
mov
or
mov
add
pop
push
jb
mov
call
inc
jae
jl
testl
inc
jae
cli
aas
xchg
mov
leave
stos
mov
add
push
push
cmpsl
xor
pop
popf
mov
jmp
loop
inc
fmulp
ss
insl
mov
mov
popa
addl
xor
push
fstpl
jmp
push
stos
sub
push
scas
mov
lods
mov
insl
icebp
outsb
xor
lea
sbb
add
add
add
add
sbb
jmp
push
jnp
xchg
mov
inc
into
dec
loop
outsb
pop
test
add
repz
imul
push
mov
loope
sti
fdivl
cs
jmp
cmp
jnp
xlat
sub
loope
sbb
pop
repz
lret
jmp
sub
icebp
test
fists
sbb
shl
or
es
das
test
push
pusha
shrb
addb
fisubl
jbe
lods
sbb
jmp
pop
push
cld
xchg
testb
imul
imul
inc
pop
adc
test
sbb
mov
incl
in
inc
pusha
in
adc
add
add
add
cwtl
and
outsl
adc
or
cld
adc
jae
mov
loopne
push
addl
incl
adc
jp
xor
clc
add
push
popf
cli
mov
fmuls
pop
push
or
push
fcmovu
imul
or
mov
mov
jb
add
enter
testl
xorl
push
xchg
or
call
repz
mov
jb
mov
pop
fcmove
testl
fmulp
call
int3
adc
or
les
inc
out
out
add
enter
or
call
jnp
mov
movsb
push
jge
cmp
add
add
add
call
inc
add
inc
fcoml
adcb
jne
dec
xchg
lretw
inc
xor
cli
jns
fcompl
xor
jp
lods
fs
sub
inc
mov
jae
jl
sub
sub
jmp
pop
sbb
lock
jns
or
lock
add
xor
xchg
xor
add
cmp
mov
std
or
add
jmp
add
shr
push
mov
adc
sbb
sub
add
push
mov
loope
out
je
cwtl
test
popf
pop
pop
add
gs
inc
jmp
mov
stos
inc
jmp
dec
sbb
jb
xor
rcrl
pusha
adc
sti
mull
nop
pop
outsb
adc
mov
add
sub
adc
xor
cli
sub
pop
js
pop
ret
popa
pop
in
sahf
and
or
or
sub
cmp
push
xor
inc
push
rorb
xor
add
test
push
lcall
test
shr
sub
add
add
sbb
push
lcall
mov
addr16
jns
add
call
lods
das
push
mov
loop
fildl
xor
test
mov
adc
sldt
lret
xchg
xchg
lds
mov
add
inc
pop
nop
addr16
dec
or
mov
and
movl
add
add
add
lahf
ja
push
or
mov
pop
add
lret
addr16
mov
add
dec
adc
mov
imul
or
or
push
out
adc
dec
mov
xchg
sldt
and
fcoms
sahf
das
sub
adc
les
xor
jl
jmp
add
add
xchg
xchg
ret
xchg
adc
cltd
jo
jle
and
test
jb
mov
jg
js
sub
fsubrs
adcb
mov
xchg
mov
inc
push
xor
push
push
fnstsw
sub
push
pushf
in
ss
icebp
adcb
inc
subl
mov
fwait
cmc
dec
inc
inc
xlat
ret
into
stos
add
add
popa
testl
sbb
adc
xchg
xchg
test
icebp
stos
xor
jmp
sbb
loopne
push
mov
adc
jl
sbb
test
mov
dec
xor
xchg
adc
adc
in
loope
xor
xchg
adc
push
cltd
imul
ljmp
bound
and
test
add
add
add
push
push
aaa
and
dec
xchg
sub
inc
jmp
stos
xor
pop
repnz
push
out
jg
scas
fildl
xor
jg
scas
lahf
sarb
subb
je
call
les
call
jecxz
std
jne
jae
call
das
vcmpss
mov
xchg
ds
js
add
xor
add
push
sbb
fcoms
cld
pushl
outsl
and
pop
push
jae
decl
addr16
lea
dec
cli
fisubs
mov
loop
inc
cld
das
lea
sbb
xchg
and
xor
push
jnp
rcl
or
adc
rcr
cmp
mov
insb
sub
add
inc
and
cmp
int3
cmp
xchg
rclb
xchg
inc
adcl
jl
push
or
std
mov
jb
adcl
jl
push
or
mov
mov
jbe
push
nop
shr
das
les
cmp
cmc
xor
out
rorl
data16
adc
sahf
iret
push
jo
rol
jae
lret
insb
aad
popf
test
pop
add
or
rorb
jne
shlb
sub
test
lds
xor
dec
adc
clc
shr
stc
inc
adc
call
jnp
es
push
ljmp
sub
imul
lods
das
xchg
pushf
out
mov
or
cmpsl
push
popf
lock
addl
ss
sub
test
lea
xchg
and
ficoms
add
imul
stc
call
mov
loope
lock
push
sub
shrb
ljmp
int
or
bound
push
jb
and
es
cmpsl
jae
cmp
and
stos
insl
push
mov
mov
hlt
fcompp
fwait
xor
xorb
add
xchg
or
fwait
jle
aad
add
test
add
or
xchg
je
jae
pop
sub
and
pop
lock
rcr
in
sti
mov
and
add
jae
mov
xchg
jne
mov
and
outsl
cld
jnp
idivl
mov
sub
je
xchg
ds
push
mov
sub
jmp
repnz
dec
xchg
adc
add
add
add
add
xor
jb
xor
sub
idivl
jnp
fsubr
inc
cmp
dec
jb
mov
ja
enter
dec
lcall
push
movsb
inc
add
mov
add
jbe
shlb
scas
push
push
push
rorl
ficoml
pop
pusha
sub
add
test
dec
mov
xor
mov
test
movsl
add
push
sbb
pop
loope
pextrw
push
cwtl
add
sbb
orl
xor
cvtdq2ps
paddusw
iret
insb
cmp
test
mov
leave
inc
cmc
push
out
add
and
repnz
and
add
addl
add
mov
por
mov
mov
fidivrs
jl
into
fs
or
xor
jg
push
mov
cmp
sub
cmp
jo
jbe
ljmp
dec
test
push
pop
test
xchg
sbb
mov
push
mov
sub
cmpsb
or
add
test
mov
cld
cltd
xchg
cltd
add
jecxz
sub
mov
setne
mov
in
pop
mov
push
adc
cmp
mov
daa
sub
jb
bound
cld
and
mov
adc
mov
sar
mov
inc
pop
ret
xchg
cmp
cmp
mov
or
sbb
std
xchg
or
or
dec
or
mov
or
add
mov
mov
add
add
add
add
cmp
pop
lea
jg
mov
je
sbb
jae
fsubrs
icebp
sti
mov
add
incl
imul
inc
inc
xor
std
mov
test
add
inc
into
pop
mov
rorb
aam
lahf
mov
mov
sbb
fdivs
xor
mov
in
xor
add
loope
movsb
mov
outsl
adc
stc
push
jle
or
jae
xchg
leave
ret
subl
inc
fcos
adcb
stos
push
push
add
lea
xor
jmp
sbb
pop
loope
adc
lods
das
cld
fs
adc
push
mov
pop
and
cld
mov
lods
ss
add
push
adc
add
add
add
add
dec
mov
fwait
add
scas
add
popa
pop
add
aas
jb
ret
inc
pop
add
or
icebp
lods
pop
mov
xchg
inc
dec
or
pop
dec
jo
cmpl
jmp
sub
dec
mov
xorb
popa
xor
ret
divb
mov
pop
and
add
jl
std
dec
pop
jo
mov
cmp
pushf
mov
xchg
aad
and
pop
popf
test
cmp
test
jl
and
adc
xor
fbld
add
test
jbe
adc
aas
adc
enter
dec
cmp
cmp
adc
mov
cmp
jle
add
push
data16
sti
hlt
inc
sbb
ret
push
mov
sbb
nop
pusha
sti
cld
das
inc
jmp
adc
out
sbb
in
push
imul
rcrb
jbe
adc
xchg
adc
enter
dec
insb
xchg
xchg
adc
adc
push
jo
or
in
sti
imul
jecxz
jecxz
cld
incl
add
push
lcall
out
adc
mov
clc
pop
push
in
ret
sub
je
popa
jmp
push
lock
cmp
jne
out
adc
fwait
mov
jecxz
arpl
push
fisubrs
or
and
sbb
push
mov
inc
push
pop
add
ficompl
pop
add
daa
sub
dec
jns
dec
std
xchg
inc
jae
pushf
cmp
stos
stc
adcl
std
pop
insl
adc
cmpb
ljmp
pop
shl
cmpb
lret
xchg
ret
into
add
jl
or
jno
loope
push
xchg
push
add
jmp
rcll
add
adc
sbb
pop
sbb
add
add
sbb
fidivrl
pop
and
neg
ds
pop
sbb
ret
and
add
lock
mov
imul
cmp
arpl
cmc
ret
ds
or
outsb
das
and
dec
xor
test
push
insb
sbb
push
xchg
jnp
ds
lods
out
testb
add
add
add
add
jmp
mov
dec
mov
enter
or
jl
ds
fld
mov
mov
call
inc
add
push
loope
jo
cmpsl
imul
in
mov
or
xor
cmpsb
leave
je
lea
jmp
push
sti
hlt
mov
inc
jmp
sub
pop
out
add
leave
inc
or
pop
sti
hlt
xchg
and
and
add
inc
xor
xchg
flds
call
insl
lea
lods
push
add
inc
bound
add
sar
mov
sti
add
in
add
cmpsl
adc
jb,pt
jmp
sub
push
jecxz
pop
or
pmulhuw
add
mov
mov
add
push
movsb
cmp
sti
test
mov
outsl
add
xor
cld
je
and
adc
mov
mov
mul
nop
cmc
inc
clc
sub
mov
pop
mov
cs
jg
in
cld
xor
push
adc
mov
add
cmpb
inc
pop
lods
or
push
mov
inc
mov
inc
sub
jno
aaa
sub
pushl
es
jne
adc
mov
stos
adc
pop
add
or
inc
push
es
inc
enter
cmp
adc
push
ret
xchg
xchg
call
test
push
out
fsubrl
adc
push
or
jl
outsb
sub
add
sub
in
leave
gs
inc
adcb
lcall
cmp
out
xchg
add
pop
pop
jo
mov
fldt
add
mov
add
fs
cmp
xor
jae
jo
xchg
and
scas
imul
dec
add
ja
jo
lods
es
or
pop
add
addb
or
jmp
add
add
add
add
daa
sub
std
jns
ret
iret
imul
ret
out
add
push
ljmp
add
sti
xchg
dec
popa
sti
cld
push
pop
inc
jmp
push
xor
outsb
mov
add
jecxz
jmp
mov
popa
push
into
inc
mov
out
xor
insl
inc
add
jmp
push
xor
loope
add
scas
dec
testl
mov
repz
and
dec
and
jb
mov
sbb
inc
add
jge
jne
ds
in
xor
xor
addb
rol
shrb
adc
jle
pushl
mov
ret
sbb
add
mov
adc
add
cmc
andl
sbb
outsb
cli
mov
cld
push
push
test
inc
lret
imul
dec
decl
stos
mov
or
mov
std
out
imul
setno
addl
addb
aam
inc
mov
sti
add
scas
sub
out
sarb
cld
aam
stos
add
sub
sti
push
mov
inc
mov
out
dec
lods
out
pop
add
out
xor
popf
in
call
leave
mov
mov
jne
inc
push
mov
pop
cs
loope
pop
or
rorl
shlb
push
in
addr16
add
and
mov
ret
add
out
hlt
xchg
jmp
ret
into
cmp
mov
test
cli
push
test
mov
sbb
add
xchg
push
je
test
pop
xor
push
test
jmp
ss
sub
jno
jb
jmp
add
xor
add
ljmp
add
add
pop
in
jno
subb
push
movsb
shlb
test
push
push
push
mov
sub
push
sub
hlt
inc
dec
sub
add
push
out
ss
fsubl
inc
jmp
mov
outsb
sti
pop
xor
cmpsl
inc
xor
and
call
add
add
add
add
cld
sti
pop
into
test
cmpsb
jl
call
popa
idiv
out
insb
jb
add
mov
ljmp
test
sti
jae
dec
ds
or
inc
jmp
ss
out
mov
jge
or
sub
mov
mov
jb
adc
jb
jmp
sub
jne
inc
push
push
js
adc
inc
je
lahf
cs
add
mov
jge
add
call
test
and
adc
std
push
data16
out
lret
pop
incl
inc
outsb
or
cmp
cmpsb
sysexit
mov
pop
add
push
in
adc
mov
add
xchg
xor
call
inc
stos
push
fcmove
jo
push
or
call
add
add
add
sub
call
in
cld
inc
cmp
inc
push
pop
test
sahf
std
addl
mov
inc
cld
sbb
adcb
aam
inc
jecxz
inc
push
popa
push
mov
aam
sahf
sbb
loopne
xor
add
sub
dec
jne
aam
les
sbb
and
adc
pop
out
loope
mov
add
clc
data16
mov
pop
jl
jmp
xor
shlb
xor
inc
mov
lcall
fsubrs
cmp
xor
add
test
orb
or
cmp
xor
test
mov
cmpsl
in
aaa
inc
jo
fcmovbe
lock
lret
je
or
fnstcw
rclb
xor
adc
bound
adc
adc
test
imul
lods
notb
push
pop
lahf
scas
shl
mov
test
cmpsb
inc
sti
mov
test
adc
adc
and
cld
xchg
cmpl
sub
jne
jo
dec
sub
ds
adc
jne
push
sub
das
jb
add
sbbb
cmpsl
in
xor
mov
adc
shr
add
jge
lods
aas
or
shlb
add
lcall
sub
add
sti
bnd
insb
je
sbb
out
mov
cmpsb
add
sub
inc
lock
jmp
call
mov
dec
cmp
lds
mov
add
xchg
imul
adc
jmp
pop
test
mov
ficoml
fistps
dec
dec
cs
inc
cmp
adc
cmpsl
adc
inc
and
lret
jmp
sbb
mov
mov
repnz
xor
push
pop
test
add
add
add
adc
dec
xchg
pop
mov
pop
add
lret
cmp
add
rol
bound
sar
sbb
cltd
fmuls
pop
xor
fs
mov
shl
call
sbb
out
xor
mov
stos
cltd
mov
sub
sub
subl
add
jne
cs
or
idivl
sbb
inc
fmuls
clc
dec
repz
push
mov
lds
loopne
sbb
fs
inc
inc
mov
stos
adc
pop
or
popf
imull
sar
je
inc
lock
outsb
pop
push
jb
nopl
btr
hlt
xchg
add
ljmp
rcll
jmp
stos
das
push
loopne
push
dec
outsl
hlt
lock
frndint
jp
mov
jg
dec
popa
bound
xor
xlat
in
cmpsl
push
or
jo
sub
fs
fwait
push
pop
sub
pop
das
es
xlat
mov
dec
xchg
push
in
bound
sub
das
add
and
adc
add
jb
push
outsl
mov
adc
or
imul
out
testl
sub
in
negl
cmp
add
jns
and
fmull
call
movsl
insb
jl
jnp
pop
push
jae
pop
or
movsb
cld
ljmp
mov
jmp
add
arpl
pop
or
pop
or
in
decl
add
add
add
icebp
sub
xor
jnp
rolb
mov
addr16
mov
outsl
dec
out
out
push
call
ret
adc
fimull
or
dec
call
and
cmc
adcb
iret
adcb
sbb
pop
add
movsb
or
jmp
jb
push
lret
dec
push
push
jns
pop
or
out
add
sub
aad
cld
cmpl
add
push
jbe
sarl
mov
lret
das
out
mov
pusha
into
lcall
add
clc
sbb
sub
mov
ret
outsb
mov
clc
shr
pop
iret
pop
push
jg
hlt
inc
xchg
and
lret
jg
or
sub
add
cmpsl
test
fidivrs
out
stos
cmp
rcrl
push
add
xchg
xor
dec
rep
das
fnstenv
jle
cld
shl
push
ret
push
je
jg
sub
cmp
or
push
hlt
sti
jns
pop
pop
insl
icebp
add
daa
outsb
cld
insb
adc
pop
call
adc
int
repz
xchg
idiv
xchg
mov
add
cmc
sti
pusha
xchg
das
xchg
jnp
shlb
rol
test
in
mov
loope
cmp
sahf
jnp
rcrb
mov
test
cmc
xor
jl
add
popa
mov
test
pop
mov
das
add
out
push
std
xor
xchg
stos
add
and
popl
cld
pop
add
jno
mov
add
cmpsb
jg
cld
mov
insl
idiv
ja
mov
cmp
imul
mov
jo
mov
jmp
out
mov
add
add
jl
sub
push
mov
rcrl
jp
sbb
jmp
push
test
push
sbb
sti
adcb
addb
adc
rorl
mov
test
inc
cmpb
pushf
punpckhdq
lds
pushl
mov
lds
decb
lret
sub
jae
xchg
enterw
xchg
ljmp
ret
pinsrw
mov
cld
jg
xchg
pop
test
inc
mov
jae
add
adc
pop
lahf
jns
mov
adc
fsubr
push
imul
inc
xchg
jbe
dec
mov
sub
rol
mov
push
add
out
sub
cmpsb
out
and
imul
mov
add
push
enter
sti
outsb
test
jnp
mov
in
push
sub
inc
add
mov
cmp
lret
jp
shrl
hlt
xchg
daa
sub
mov
mov
out
and
enter
pop
sub
adc
dec
loope
fldt
mov
cmp
and
adc
in
xchg
cmp
fs
xor
pop
sbb
orl
inc
add
movsl
in
adc
push
add
cmp
push
daa
aaa
inc
push
insb
lret
push
in
pop
xor
add
lret
lock
and
xlat
push
sub
add
xor
sti
bound
adc
out
or
jbe
and
outsl
inc
xor
out
jle
mov
jle
add
inc
andl
andl
pop
pop
sub
sti
mov
dec
hlt
xor
push
cmp
shrb
add
xchg
dec
xor
cmp
leave
out
repnz
in
mov
adc
add
repnz
mov
mov
repnz
enter
mov
adc
popf
out
pop
pop
outsl
dec
mov
ds
dec
and
mov
sbb
mov
cmp
adc
sbb
dec
add
fcoml
dec
out
jg
xchg
xlat
add
adc
pop
push
movsb
js
rolb
int
les
scas
push
sbb
mov
xchg
jb
popf
das
scas
push
mov
jae
pop
xor
or
arpl
jb
pop
aad
cld
add
out
shlb
push
adc
inc
push
pop
aas
jae
adcl
cs
jns
add
cmp
pop
cli
sbb
sbb
idivb
and
mov
scas
pop
mov
jb
cmpsl
fucomp
add
insb
fsubr
pop
cmp
inc
out
add
xor
ret
scas
push
fnstenv
mov
and
jg
and
pop
sti
ret
mov
std
sbb
aaa
cli
and
mov
loop
add
pop
in
sub
jecxz
pop
inc
lods
mov
sbb
addb
cmc
fidivrs
jmp
daa
sub
imul
xor
cmp
xchg
scas
shl
mov
sub
cwtl
cs
pop
push
in
add
xchg
jmp
xchg
cltd
xor
pop
adc
sbb
sti
ss
je
inc
in
adc
push
add
aaa
repz
xor
push
pop
adc
mov
mov
pop
scas
aas
lea
dec
orb
aam
mov
cmpsb
cmp
shrl
cltd
xor
ret
pop
lea
dec
lea
push
dec
sbb
lea
xor
xlat
out
push
sub
mov
in
add
cltd
addb
add
cld
jmp
xchg
fldcw
xchg
fiadds
inc
dec
movsb
cld
rcrl
jae
jmp
pushf
or
addr16
add
into
mov
push
push
repz
sub
adc
clc
add
push
xchg
xchg
push
add
int
sbb
fwait
adc
sbb
ljmp
adc
push
fcompl
repz
add
push
movsl
sub
imul
leave
pop
rclb
mulb
or
cmp
xchg
adc
int3
cltd
cld
dec
mov
cmpsb
mov
jmp
ret
push
push
push
add
mov
test
push
push
inc
pop
negl
sub
push
mov
sti
sahf
lods
decl
cld
inc
xor
push
xor
pop
mov
stos
pop
jo
sbb
add
inc
test
inc
shr
shrl
push
andb
les
inc
pop
loope
cld
add
jns
mov
pop
sub
and
cmpl
out
pop
jp
test
xchg
cmp
or
push
pusha
enter
lods
push
mov
stos
call
jmp
out
add
mov
iret
add
int
or
dec
test
pop
inc
xchg
jge
lahf
jmp
stos
scas
icebp
dec
xor
jb
mov
cmp
push
in
push
call
mov
aas
add
push
xchg
aam
clc
jmp
cmpsb
mov
inc
bound
adcl
dec
xor
add
outsb
out
pop
push
jb
lds
movsl
add
fisttpl
add
push
scas
inc
add
orb
xor
mov
sti
mov
stos
popa
sub
inc
add
mov
ds
ret
lret
add
pop
cmp
mulb
inc
les
arpl
or
add
inc
sti
dec
mov
incl
add
xor
adc
gs
adc
pop
mov
or
mov
sysexit
test
mov
fdivr
ljmp
ds
jg
cmp
push
test
sbb
shlb
add
push
stos
aas
gs
dec
fldenv
xchg
ljmp
out
xchg
into
ss
cmpl
iret
push
push
add
dec
pop
cld
subl
out
stc
repz
cld
push
push
adc
push
or
cmp
sbbl
decl
fcmovnbe
cmp
inc
mov
xchg
das
dec
push
jle
das
aam
xchg
sbb
pop
fwait
iret
scas
jae
int
xchg
push
lret
cld
das
and
out
mov
ljmp
cmpsb
inc
ret
dec
scas
inc
loopne
xor
add
jecxz
jmp
hlt
mov
ss
test
mov
in
inc
mov
das
outsb
dec
add
in
mov
xor
sbb
pushf
sbb
xor
lcall
js
push
rcl
hlt
xchg
dec
xor
cmp
out
add
dec
xor
popl
add
daa
ret
out
ljmp
xchg
or
push
dec
mov
iret
fimull
insl
sti
jmp
mov
into
std
or
push
idiv
out
mov
xchg
mov
pop
xchg
xor
jmp
shlb
xchg
outsb
in
push
xor
addb
nop
iret
add
add
push
xor
loopne
call
add
outsb
dec
push
mov
push
stc
ss
push
pop
in
imul
rcr
lods
aas
or
js
mov
enter
mov
das
mov
scas
jbe
cmp
sti
push
pop
lahf
das
mov
cli
inc
adc
ds
sub
jbe
in
xor
in
cld
mov
xor
or
dec
or
xlat
add
mov
mov
sub
inc
add
jp
fcos
adcl
xlat
decb
fdivr
dec
dec
sbbb
fcos
std
shl
add
push
pop
enter
mov
jae
ficoml
mov
dec
pop
or
add
int
in
fcomps
subb
call
cwtl
add
mov
jp
inc
test
daa
sbb
jns
sar
mov
mov
or
xor
push
loope
mov
loope
mov
push
jp
mov
test
add
add
arpl
arpl
add
add
add
outsl
loope
fmull
aad
push
push
orb
cmp
lea
mov
or
loope
mov
das
jmp
and
lods
in
add
cmp
cld
jg
mov
jmp
jmp
sbb
ret
fidivs
scas
adc
add
rorb
jmp
push
xor
bound
add
ljmp
push
and
inc
icebp
pop
mov
dec
push
addr16
push
test
out
add
push
ljmp
push
sub
loopne
lret
addl
arpl
xchg
dec
xor
jae
sub
cmpsl
gs
jmp
rcrb
sti
jmp
add
dec
push
add
pop
shr
mov
push
adc
outsl
or
xchg
out
add
std
add
mov
cmp
shl
and
test
mov
mov
mov
sbb
lods
mov
push
outsl
pop
mov
jmp
mov
or
movsb
xor
push
push
mov
ljmp
mov
cld
push
mov
repz
ljmp
sub
jl
std
sahf
and
clc
les
call
sti
cmp
mov
nop
or
or
fsts
adc
push
push
sar
xchg
adc
xchg
or
cmpsb
dec
cwtl
cli
push
movsb
out
mov
roll
inc
push
jle
call
jae
dec
xchg
outsl
push
pop
jmp
and
stos
incb
add
xchg
dec
loopne
push
add
mov
cld
mov
popa
ret
sahf
jmp
inc
pop
add
xchg
lahf
mov
xor
andb
outsl
push
in
fstpl
out
sub
sub
inc
shl
mov
or
leave
int3
data16
mov
repz
bnd
xor
add
mov
add
add
outsl
shll
sbb
and
das
jmp
daa
push
inc
mov
push
sahf
das
jmp
popa
ss
mov
sub
push
test
jno
mov
popa
dec
les
jmp
loopne
add
cmp
dec
mov
cmpsl
jb
fnstenv
push
add
inc
repz
mov
inc
lea
cwtl
insb
sti
aam
inc
inc
jmp
adc
jae
fstpt
cmpsl
push
adc
scas
in
movsb
dec
sbb
jnp
das
xchg
fld1
call
jb
xor
test
push
xor
pop
fisubrl
jne
cmp
adc
das
mov
add
xor
sbbl
mov
xor
call
mov
jecxz
add
add
fdivs
sarl
jmp
cmpxchg
js
mov
adc
test
int3
push
pushl
mov
das
test
int3
xlat
push
mov
inc
add
das
pop
pop
add
leave
add
push
xor
and
push
les
decb
leave
mov
dec
inc
lret
push
cmp
jl
flds
ret
and
pop
sbb
cmpsl
inc
enter
sub
rolb
jp
xor
push
popf
pinsrw
mov
inc
add
and
fsubs
incb
add
push
aam
loopne
test
enter
mov
aam
incl
add
cmp
add
inc
popa
jb
das
jmp
adc
enter
fldcw
pop
cmp
aad
push
xor
adc
fldl2t
mov
mov
pusha
jb
das
jmp
add
push
cmp
je
add
add
mov
add
insb
mov
das
jmp
test
jmp
add
cmp
push
xor
add
add
push
or
push
shll
call
pop
stos
dec
xor
mov
stos
inc
jmp
push
xor
push
lods
leave
sbb
push
fistl
push
sub
fwait
and
add
add
shlb
pop
push
mov
add
rcrb
push
xor
adc
addl
jb
sub
test
push
xor
mov
cmpsb
fsincos
jmp
inc
test
add
outsl
pop
call
hlt
sti
mov
movsb
cld
lods
scas
popl
sub
pushl
add
xor
call
dec
outsl
add
sub
pop
mov
popf
stos
add
jecxz
mov
mov
sti
pushl
outsb
push
fdivs
mov
add
leave
add
cmp
test
test
les
shlb
xchg
mov
push
ds
push
ds
adc
jle
xchg
add
push
or
add
inc
push
mov
push
xor
stc
ss
cmpl
enter
jb
jae
pop
push
push
push
leave
jmp
lea
xchg
sub
or
push
out
fistl
push
xchg
leave
jbe
jns
dec
fidivrs
push
push
pop
push
leave
cld
inc
add
scas
inc
mov
lds
add
sahf
sti
pop
cld
cmp
out
aas
push
arpl
cld
cwtl
or
add
add
add
add
sbb
lret
sti
add
outsb
mov
sub
gs
push
xor
je
mov
jmp
push
ds
pop
into
imul
inc
cmp
ret
es
jnp
fcoms
push
jle
jmp
andl
stos
mov
xchg
pop
sub
bound
pop
ret
dec
mov
neg
clc
fiadds
out
psubb
lock
mov
aad
addl
pop
jo
adcb
pop
addl
sbb
sbb
and
add
clc
scas
push
call
ljmp
sbb
mov
outsb
pop
int
sti
jmp
pop
xor
out
aam
aad
inc
sbb
adc
mov
je
mov
xor
adc
leave
jg
idivb
push
push
ljmpw
add
add
add
add
fdivs
les
test
push
scas
jge
push
cmpsl
ja
adc
sti
jmp
jle
xor
push
aam
lods
outsb
scas
inc
stc
sbb
add
mov
cli
ljmp
push
adc
jg
mov
andb
cmpl
add
lods
sub
push
mov
cld
jne
and
pop
call
add
mov
ret
xor
call
insb
insb
outsl
add
icebp
cld
add
or
clc
push
push
lock
repz
cltd
out
jne
daa
xor
gs
ljmp
fs
inc
daa
xchg
popa
push
add
push
out
push
insl
clc
subb
pop
ficoml
jnp
loope
dec
mov
mov
loope
inc
imul
add
add
add
add
cmpb
pop
leave
dec
arpl
shl
scas
add
popf
cmpl
nop
sbb
add
jp
pop
pusha
shl
leave
js
std
cmp
add
pushl
inc
mov
xor
jl
mov
mov
std
scas
das
bound
aam
scas
xchg
in
loope
add
add
xchg
mov
fildll
dec
fistl
out
mov
fwait
icebp
xor
mov
sbb
ficoms
or
out
xchg
add
shr
js
lock
inc
cs
cmc
or
xor
dec
pop
jmp
lret
xchg
shlb
sub
pop
and
jge
inc
test
jmp
mov
pop
arpl
add
add
add
add
test
add
adc
jmp
pop
ds
xchg
roll
insl
mov
inc
pop
test
fs
test
xor
pop
scas
jmp
sbb
test
lds
cmp
sbb
movsl
jge
loope
jmpw
cltd
pop
aam
hlt
jno
sti
bound
inc
in
out
in
movb
pop
test
callw
jge
pop
aam
sub
test
icebp
cmp
shrl
aad
add
or
shlb
jecxz
cs
test
or
arpl
jg
movsb
rol
inc
adc
std
xor
adc
jecxz
ss
subb
test
ficoms
adc
xor
add
add
add
add
je
js
jecxz
cmp
subb
std
decl
push
xor
adc
dec
ds
add
xor
mov
cmpsb
add
shll
aaa
push
mov
mov
cmpsb
inc
sar
test
add
sbb
je
add
sub
add
add
or
ja
jns
adc
clc
aad
nop
adc
data16
incb
test
sbbb
enter
cld
ficoms
adc
push
mov
lcall
add
add
mov
mov
mov
push
inc
and
ret
into
add
xorb
jmp
add
add
pusha
shlb
jmp
nop
push
mov
test
jge
fs
inc
mov
xor
pop
xor
push
add
js
xor
add
je
add
push
lret
lret
jae
scas
sahf
int
fwait
cmp
jmp
inc
dec
mov
jmp
add
mov
add
sarl
add
mulb
xchg
xor
add
inc
push
std
add
xchg
mov
jmp
enter
adc
pop
rorl
sti
call
outsb
and
test
push
mov
bound
aad
adc
int3
test
rcrl
int3
leave
jp
bound
repnz
jmp
push
int3
test
shll
sub
add
pop
push
add
mov
testb
xor
pusha
stc
xor
call
mov
repz
jge
mov
scas
ds
nop
testl
pushl
xor
lock
ficoms
adc
xor
or
lea
call
add
rorl
cmpsb
sti
clc
inc
cli
incl
add
push
mov
lock
testb
mov
or
mov
orl
sub
add
pop
dec
push
push
dec
std
sti
adc
inc
push
pop
js
mov
xchg
mov
cmp
push
sub
push
fcos
dec
movb
add
insl
add
fdivs
rcl
sub
push
fcos
mov
xor
push
std
jnp
push
filds
and
fcos
jns
mov
and
aas
mov
xchg
and
pushf
and
mov
fdivr
fcomps
push
xor
inc
push
push
loope
lea
jbe
in
insl
inc
mov
jmp
ret
push
hlt
in
mov
add
jae
pop
test
scas
dec
daa
aad
jmp
daa
shll
add
insl
daa
add
jmp
daa
pop
repz
fnsave
jmp
add
xchg
in
push
lret
aad
jno
push
xor
mov
adc
add
add
mov
jmp
imul
and
add
cmp
add
fbstp
push
lret
call
ret
push
fmuls
push
int3
test
fidivl
add
movsl
sar
sbb
fcom
dec
push
int3
test
push
xor
ds
mov
mov
push
xor
inc
cld
mov
add
push
xor
add
add
das
adc
add
in
xor
add
inc
add
out
cmp
clc
sub
rcrl
idiv
jge
and
adc
add
add
add
lahf
mov
add
sub
jne
jecxz
je
and
call
jmp
mov
and
pop
scas
inc
inc
and
test
add
xor
add
mov
or
cmpb
add
cmp
adc
out
and
fiaddl
pushl
and
decl
pop
or
jg
cli
adc
int3
cltd
or
fists
dec
cmp
cmc
mov
push
xchg
xchg
push
les
aam
add
add
push
mov
aad
out
add
out
jne
incl
pop
add
jns
fcos
mov
xor
dec
xchg
sbb
or
jge
scas
test
adcl
add
sub
push
pop
jns
push
xor
lods
in
push
popa
je
xor
popa
pop
int
add
pop
loope
loope
fwait
jge
mov
daa
shrl
add
lods
test
daa
shrl
add
mov
daa
popf
das
jmp
jmp
pop
push
mov
outsb
fst
out
push
imul
ss
or
push
ret
into
or
lret
roll
jmp
adc
test
add
lahf
or
jb
fsincos
iret
add
push
shll
sti
into
ljmp
add
push
xor
jmp
push
xor
cmp
add
push
icebp
test
das
add
repnz
jmp
mov
add
icebp
or
leave
je
pop
push
and
pushf
sub
je
pop
not
add
lds
sbb
sti
add
mov
and
popa
not
movsl
mov
add
adc
pop
and
add
arpl
jae
pop
ret
pop
in
mov
in
mov
cmp
cmpb
addl
dec
mov
cmp
outsb
or
pop
jmp
push
pop
lea
pop
call
add
mov
icebp
inc
pop
fisubl
xor
jmp
test
xchg
out
push
fcos
cs
jl
sti
xchg
adcb
lea
cmp
jge
mov
in
cmp
jns
idiv
aad
mov
push
test
fcos
jmp
addr16
dec
fcos
dec
les
mov
dec
les
inc
lcall
dec
mov
sub
ret
mov
add
pushl
pop
add
sar
imul
jecxz
outsb
js
sbb
inc
sub
fcoms
lds
inc
insl
xor
ret
jl
mov
inc
cmp
fucomp
ss
mov
cli
test
add
jge
fisttpll
pminsw
add
cli
fidivl
lret
ret
cs
lods
cmpsb
push
shrl
add
call
jne
pop
dec
aad
lock
mov
pop
and
fs
mov
dec
out
enter
push
inc
clc
jmp
push
jg
dec
xor
add
shll
add
add
add
and
mov
sub
out
iret
jae
bound
das
add
int
in
into
lock
mov
jge
mov
mov
lret
pusha
jle
call
xchg
push
mov
push
mov
xchg
cli
mov
xorl
test
test
lea
and
jecxz
pop
push
add
adc
add
bts
jne
push
mov
mov
pop
notl
mov
stos
inc
lock
fs
das
idiv
imul
push
adc
mov
pop
enter
sub
push
pop
enter
aad
add
mov
in
push
scas
pop
out
mov
inc
in
jb
add
push
mov
sti
push
mov
in
clc
rclb
adc
xchg
pop
imul
popa
inc
data16
mov
fstp
adc
fwait
xlat
mov
sbb
mov
mov
mov
xor
stc
es
jnp
dec
push
sbb
jge
lret
jb
fcomps
jl
cmp
xchg
adc
push
or
cmpl
add
add
add
add
or
xchg
fldl
notb
outsb
inc
mov
jne
jb
add
adc
rolb
insb
ret
push
xor
cmp
xor
add
cs
inc
lods
aam
jns
test
pop
mov
jo
dec
fisttpll
mov
out
mov
jo
adcb
es
pop
and
add
test
pusha
pop
mov
mov
inc
add
adc
ret
out
ljmp
mov
sbb
bnd
gs
sub
push
lock
push
aam
std
inc
mov
call
jo
lock
dec
test
call
pop
mov
in
lret
jg
call
and
pop
add
xchg
test
mov
xchg
xor
push
push
add
or
fs
callw
lea
xor
leave
icebp
call
bound
cmp
push
mov
ret
mov
scas
clc
add
xor
mov
inc
clc
ret
dec
orl
inc
adc
repz
add
pop
into
jecxz
in
sub
jecxz
idiv
xchg
push
dec
pop
pop
test
std
add
mov
dec
xor
imul
mov
mov
xor
ret
imul
pop
leave
idiv
shlb
add
jne
call
imul
adc
jne
push
jb
lret
xchg
push
enter
push
xor
cmpps
add
lret
xchg
inc
call
dec
xchg
mov
push
mov
push
int3
sbb
cmpsb
jb
sti
jp
sbbb
sbb
pop
jne
rcr
mov
or
sti
push
push
in
je
adc
sub
sti
cs
mov
loopne
stos
loope
push
inc
pop
or
ret
fisubrl
dec
jmp
add
movsl
sub
jne
add
out
repz
jne
lret
mov
jne
jg
hlt
jo
in
cmp
pop
dec
outsb
notl
xor
sub
popa
jo
subl
sub
xor
pushl
jmp
jno
xor
xchg
mov
adc
repz
mov
fsubrl
add
add
add
sub
aam
sbb
add
push
pop
xchg
mov
mov
push
mov
lds
push
aaa
jp
stc
cmp
movaps
inc
or
out
mov
mov
cli
adc
call
jb
or
ret
push
sbb
or
sbbl
or
mov
add
arpl
xchg
dec
xor
rcll
or
mov
jo
insb
adc
push
cmp
verw
sub
call
mov
or
je
or
pcmpeqb
mov
lcall
and
push
sub
call
cmp
cmp
push
sarb
mov
iret
mov
and
add
shlb
and
add
push
scas
mov
js
mov
addl
jg
mov
popf
add
sub
and
mov
das
jecxz
push
sub
inc
xor
fcos
jno
dec
dec
add
inc
popl
push
push
mov
decl
ret
mov
xchg
movl
add
add
jl
dec
dec
ja
push
incl
push
neg
rcrb
test
sub
jae
xchg
sub
ror
and
dec
aad
out
pop
rcl
addr16
jbe
push
adc
ds
filds
jne
push
ret
jb
in
xor
ds
inc
lds
imul
inc
insl
sbb
inc
inc
inc
in
add
aad
repnz
cli
stos
mov
outsl
xor
mov
pop
or
insl
add
sub
or
ja
stos
mov
out
into
outsb
in
subb
lock
mov
and
jmp
xor
jmp
add
pop
adc
xor
fcomi
mov
fcoml
push
pop
push
les
aas
out
dec
lods
sub
arpl
sahf
add
cwtl
mov
inc
xchg
mov
and
xchg
xor
xlat
cli
or
sarb
sub
push
dec
xor
cmp
sbb
cli
xchg
xor
jns
xor
push
adc
mov
add
test
cmpsb
lods
inc
in
push
ja
mov
sbb
sub
pop
sbb
scas
in
xchg
popa
xchg
add
xor
scas
in
sti
pop
push
or
call
mov
cmp
push
mov
jnp
jo
in
inc
jmp
dec
mov
add
mov
pop
add
inc
or
outsb
movb
clc
cmp
cmp
jmp
and
inc
pop
pop
test
sub
add
dec
push
pop
pop
dec
push
nop
xchg
scas
add
add
pop
mov
and
fidivrl
pop
cmc
ds
cmc
aas
and
sti
mov
mov
adc
and
sub
push
xchg
inc
push
out
dec
les
xlat
add
hlt
in
bound
pop
cld
or
push
std
mov
jecxz
dec
cltd
fwait
add
mov
add
inc
mov
pop
idiv
es
not
mov
cmpl
add
add
add
add
fistpll
sti
in
das
xchg
inc
in
call
lret
sbb
xchg
pop
push
inc
adc
sbb
xchg
mov
push
les
sub
inc
call
aad
jae
inc
xchg
out
xor
fnstenv
mov
or
add
pop
inc
add
mov
jno
lods
daa
jno
pop
inc
push
enter
mov
ja
add
in
sbb
pop
insb
int
xchg
sub
stos
decl
in
ljmp
dec
xchg
jmp
fsubr
cs
jo
dec
data16
push
cmp
js
push
pushf
jmp
enter
mov
popa
test
popaw
test
push
jns
mov
aaa
jmp
inc
mov
pop
fsubrp
sti
faddl
add
add
push
enter
mov
mov
cmp
sti
push
mov
mov
add
push
xor
lcall
das
testl
xor
push
xor
cmp
das
add
test
or
inc
mov
call
aas
pop
fistl
add
lods
xchg
add
lds
xchg
adc
dec
mov
call
lea
call
mov
mov
jecxz
cmp
add
inc
ljmp
clc
sub
sbb
xor
and
push
and
add
aad
adc
sub
inc
call
add
push
push
lea
push
push
push
add
and
sbb
inc
xchg
add
jb
xor
lcall
jbe
push
lret
mov
inc
dec
inc
add
sub
adc
push
sbbb
push
cmpsb
repnz
arpl
lock
lahf
ja
push
push
sti
cmp
adc
dec
les
push
sti
add
fs
push
inc
push
xchg
call
add
loop
in
and
pop
pop
fcompl
pop
mov
jno
or
xlat
jne
sub
int
test
aam
mov
cld
mov
loope
int3
sbb
cmc
daa
lock
outsl
std
test
cmpsl
sub
dec
ret
data16
inc
dec
dec
mov
push
scas
or
pop
mov
add
add
add
add
mov
mov
test
cwtl
push
jp
mov
aas
sub
scas
cli
out
jo
sub
vcvtpd2dqy
and
sub
and
stos
push
int3
hlt
add
xchg
hlt
decl
jae
int
xor
jmp
outsb
scas
sti
jmp
ja
pop
jb
or
ljmp
jmp
outsb
stos
push
inc
subb
repnz
stos
call
and
add
sbb
test
push
pusha
dec
movsb
lea
mov
xor
add
in
push
cmp
outsl
or
add
dec
xor
mov
arpl
aaa
repz
incb
add
push
lcall
test
cmpsl
scas
popl
js
addl
or
mov
sbb
out
int3
add
test
jge
and
pop
inc
call
mov
jmp
adc
sbb
ja
cmp
notb
lods
jno
ss
push
mov
xchg
cmp
xchg
je
subl
jnp
imul
sbb
idiv
add
insb
je
adc
adc
push
xlat
pop
or
push
add
test
inc
faddl
or
jns
popf
sbb
inc
pop
push
fsubrl
adc
ficoml
dec
and
call
cmp
cmp
fimull
in
inc
and
push
dec
out
sti
mov
cwtl
in
dec
test
or
stos
in
push
push
imul
add
xchg
dec
sti
mov
adc
push
imul
shlb
pop
sbb
je
dec
pushl
in
xor
in
lock
inc
cmc
insl
add
cli
fcoms
xor
push
cmp
adc
cli
pushf
dec
mov
fnstsw
lods
cld
adc
jnp
push
sub
into
aaa
sbb
add
outsb
add
lods
aam
add
lahf
stos
mov
sarl
icebp
js
cmp
or
add
call
dec
jns
pop
inc
push
sbb
jbe
xor
jmp
sub
add
xchg
mov
mov
aaa
mov
or
lea
dec
mov
sti
gs
cmpsl
push
std
leave
jo
cmp
jnp
sub
add
mov
sbb
arpl
std
cmp
inc
insl
and
cmpsl
sti
mov
xor
lret
cs
inc
jmp
movsl
cmpsb
sti
cs
test
push
repnz
mov
mov
notl
mov
or
xchg
es
arpl
sti
cmp
test
shlb
lahf
adc
push
leave
sti
addr16
fwait
jl
test
dec
push
inc
lret
add
js
dec
lea
arpl
jne
mov
notl
mov
je
mov
or
fwait
or
rolb
and
call
mov
cmp
test
notl
or
push
push
inc
das
adc
cmp
add
add
add
add
mov
ds
gs
mov
jg
test
mov
dec
int3
or
cld
mov
das
sti
and
cmp
add
insl
sti
les
cld
mov
xor
jns
cmp
push
faddl
add
push
adc
and
aam
pop
add
jl
add
nop
mov
call
loopne
popa
sbb
je
add
arpl
push
insl
dec
lea
imul
push
lahf
mov
jmp
mov
loope
add
fwait
shll
pop
aam
repz
xchg
cmp
add
ja
add
xor
jmp
adc
and
add
sbb
fdiv
xor
sub
xchg
jns
popf
loope
add
lods
lcall
fucomp
jp
loopne
push
add
and
push
loopne
cwtl
cmp
xchg
jmp
std
jmp
mov
gs
xor
mov
loope
incl
ljmp
mov
cmp
xor
jmp
addl
xor
stos
push
sub
jo
insb
in
xor
jmp
add
mov
stos
push
std
fnstenv
fs
xor
jmp
push
scas
inc
test
cmp
jbe
push
jg
push
xor
mov
push
xor
bound
lds
add
xor
jge
idiv
bound
sti
inc
or
pop
adc
sub
add
adc
test
mov
add
mov
addl
or
sub
push
dec
xchg
sub
test
adc
lea
cmp
add
test
mov
sbb
pop
scas
pop
call
and
sarb
mov
stc
mov
xchg
adc
push
or
iret
je
jne
sbb
add
xlat
decl
out
inc
aad
xor
aas
push
and
jnp
popf
fnstsw
mov
jne
and
call
outsl
js
mov
cmp
sub
add
adc
jae
icebp
push
lea
cmp
pop
or
sti
int3
push
fcoml
mov
aam
leave
mov
push
std
in
addr16
xor
add
jmp
mov
dec
sahf
lods
xlat
dec
sbb
imul
movsl
je
or
xchg
aad
push
imul
and
jbe
out
push
sbb
add
inc
adc
xchg
ljmp
lds
fildl
aaa
push
adc
sbb
rorl
aad
mov
or
sbb
iret
imul
lahf
out
add
sbb
outsb
push
xor
not
insl
add
enter
or
call
push
leave
cmp
arpl
xchg
movsb
dec
cltd
cmc
add
adc
test
xchg
xchg
xchg
inc
cmpsl
push
loope
cs
push
and
xchg
aaa
clc
out
stos
pop
pop
inc
xchg
jecxz
jb
mov
add
dec
xor
cmp
mov
cwtl
mov
cmpsl
sti
cmp
stos
ret
push
push
je
sbb
sahf
lcall
xor
jo
add
xor
xlat
push
notl
mov
jne
mov
or
add
idiv
subl
sarb
add
cwtl
sub
mov
ss
mov
add
bound
xchg
filds
mov
callw
test
push
xchg
outsb
mov
pop
call
inc
pop
bound
lock
nop
adc
mov
mov
fcoml
xchg
pop
call
das
mov
in
fcoms
or
dec
xlat
cmp
sbb
test
insb
fisttps
sub
inc
add
sub
arpl
test
scas
pop
jmp
cmp
fimull
push
into
mov
aas
lcall
sahf
jg
lods
mov
add
xchg
aas
push
push
cmp
outsb
push
jae
jns
push
int3
xorl
and
or
or
outsb
cwtl
faddl
add
jmp
dec
dec
pop
test
test
mov
es
xchg
mov
lea
inc
adcb
clc
xchg
sub
mov
mov
add
out
mov
test
dec
inc
mov
xor
lcall
mov
loop
repnz
mov
fsubrs
pop
je
pop
mov
stc
xchg
add
aam
sti
inc
daa
mov
popa
cmp
xchg
test
lods
inc
jno
imul
xorb
pop
hlt
mov
xchg
je
int
xchg
inc
out
push
mov
cmpsl
pop
sti
inc
stc
fwait
jne
stc
and
sti
push
aad
xchg
ljmp
cmc
or
hlt
add
lret
stc
and
push
test
add
add
add
push
fwait
shr
adc
sti
mov
out
jne
xchg
rolb
and
negb
pop
leave
ret
push
mov
mov
mov
sub
xor
shlb
dec
aad
notl
jmp
idiv
lods
je
test
mov
std
xchg
xchg
sub
dec
incl
rorb
add
add
dec
xorl
decb
and
add
xor
add
test
dec
push
xchg
arpl
mov
ds
les
pop
jns
test
xchg
dec
or
aad
ret
add
push
stos
cli
lods
push
or
jae
movups
stc
inc
aad
add
dec
or
add
jle
pop
xchg
aam
xchg
pop
sub
jg
push
and
fimull
xchg
mov
xchg
call
inc
push
or
add
lret
out
or
push
mov
lea
cmp
mov
sub
into
sub
add
pop
add
add
jo
pop
and
add
add
add
add
push
lcall
mov
fcoml
stc
xchg
subb
mov
cwtl
outsb
das
cmp
movsl
nop
test
out
call
mov
hlt
pop
adcl
test
out
pop
jbe
jmp
jae
xor
xor
pushf
cli
xor
bnd
orb
lods
cmpsb
cltd
jne
add
fstps
clc
into
in
mov
inc
push
dec
xlat
gs
sub
sbb
xlat
xchg
xchg
cli
xchg
fstps
lock
pop
sub
xchg
daa
push
jb
add
insl
and
lcall
push
stc
out
test
push
xchg
fldcw
bound
call
insl
adc
jae
add
xchg
xchg
pop
add
pop
cli
add
inc
or
dec
add
test
or
pop
cld
ljmp
cmpl
dec
in
mov
jmp
jg
or
pop
push
mov
jg
or
clc
sti
mov
notl
popa
jecxz
mov
sti
test
idiv
mov
notl
inc
ror
pushf
sti
push
add
mov
sub
or
inc
lock
pop
xchg
sub
lea
addr16
call
push
push
les
xlat
dec
cli
into
mov
sub
ja
sar
lret
aam
iret
sti
cmpsb
pop
mov
push
mov
aam
sar
mov
sar
inc
lret
inc
or
cmp
xchg
cmpl
add
and
test
mov
cli
ds
inc
clc
mov
adc
sti
add
dec
enter
xchg
pop
into
adc
int3
inc
pop
adc
aam
push
sahf
xor
subl
or
scas
xor
fdiv
clc
test
cltd
jl
xor
pop
dec
roll
roll
inc
push
lods
lods
add
adc
clc
shlb
or
sub
int3
repz
je
std
lcall
adc
pusha
inc
jne
insb
pusha
dec
cltd
jp
aam
cwtl
leave
xchg
js
add
sub
das
jmp
out
cltd
jmp
rorl
movsl
pushf
fbstp
jo
icebp
xchg
sub
push
or
int
push
add
pop
mov
flds
pop
mov
push
add
push
jmp
mov
out
add
xchg
xchg
imul
mov
jmp
xor
stos
push
mov
ljmp
adc
jo
xorb
push
lods
jmp
push
xor
scas
adc
jge
add
rolb
xchg
sahf
xlat
adc
add
scas
mov
push
gs
cld
push
jne
loopne
inc
jecxz
shl
stos
add
adc
dec
fst
dec
push
and
ljmp
test
mov
jb
test
addl
or
pop
insb
dec
push
divl
addr16
sub
cmp
imul
xor
add
mov
test
add
xor
add
add
add
add
sbb
in
jp
push
push
fxch
push
pop
or
or
lea
push
and
lret
push
or
and
push
mov
xchg
stos
dec
and
xor
int3
dec
sti
test
dec
mov
cld
js
sbb
mov
pop
insl
and
int3
push
add
cmp
add
test
or
pop
loopne
xlat
nop
jl
fisubl
call
push
and
xchg
xor
pop
xchg
add
mov
test
das
or
icebp
sbbb
insb
inc
stc
mov
mov
negb
inc
pop
or
repnz
xor
pop
into
lret
pop
push
mov
dec
mov
xchg
pop
incb
add
mov
int
jecxz
fdiv
imul
fmul
mov
hlt
daa
jo
add
lock
imul
inc
xor
and
sti
outsb
inc
jge
lods
push
cltd
jb
cltd
sub
bound
sti
movsb
and
out
push
mov
cli
sub
sbb
xchg
xchg
add
and
cli
mov
dec
sub
subb
movsb
push
lods
or
push
xchg
sti
pop
cmc
lods
or
mov
pop
bound
nop
xchg
inc
cltd
push
icebp
or
sti
jb
in
sbb
pop
mov
std
push
xchg
or
rclb
push
negl
jae
mov
in
in
add
dec
pop
dec
push
add
cmovo
add
js
xchg
clc
das
cmp
loop
test
xchg
jg
jmp
adc
adc
jnp
bound
cli
jecxz
push
mov
incl
outsb
pop
lea
pop
dec
ljmp
test
scas
mov
add
pop
clc
push
addr16
and
imul
insl
sub
add
or
idiv
adc
push
mov
xchg
sarl
stos
xor
add
xor
cmpl
push
cmp
dec
add
push
push
inc
in
ficoml
push
pusha
leavew
decl
ja
rcrb
add
roll
divb
aam
sti
mov
mov
mov
call
or
add
cld
jp
mov
pop
fmull
add
sbb
inc
jg
dec
jmp
jp
add
sub
fisubrl
icebp
xor
in
adcb
fs
dec
xchg
xorb
cmp
divl
insb
ret
movsl
pop
pop
adcb
xor
repz
lret
mov
test
jecxz
fistl
push
lretw
pop
sbb
xchg
das
xchg
test
add
ljmp
jmp
jge
add
xor
pop
in
jmp
jge
add
xor
sub
sub
leave
and
insb
xchg
test
or
xchg
sti
sahf
sbb
sub
xchg
or
adc
cmc
pop
adc
rclb
xor
outsb
out
xor
push
pop
xchg
sti
push
sub
adc
call
inc
jmp
pop
out
push
or
add
sti
cltd
sti
push
jp
sti
mov
lcall
dec
std
xchg
aas
jmp
dec
mov
jmp
xor
add
dec
or
pop
in
inc
cwtl
mov
adc
loope
in
xor
lea
adc
mov
call
add
add
add
add
jns
leave
cli
xchg
push
mov
mov
lock
mov
or
inc
dec
mov
xor
jae
or
sub
adc
pusha
mov
xor
jnp
inc
push
in
mov
mov
or
mov
add
sbb
or
sbb
add
push
inc
jge
jp
push
cltd
incl
add
add
add
pop
xchg
orb
jnp
push
cltd
push
adc
jnp
push
cltd
jg
push
add
pop
push
lds
push
cltd
aas
or
cmpsl
add
push
add
call
fs
cli
xchg
dec
ja
inc
rorl
int
dec
cltd
lds
jmp
and
jae
sbb
adc
addb
cltd
movsb
js
aad
ss
xchg
push
jbe
sub
jo
add
das
sub
iret
hlt
fimull
sub
iret
cld
rcr
inc
mov
adc
cmp
aam
xor
adc
inc
jo
repz
mov
jp
cld
inc
inc
jo
and
std
or
icebp
loopne
xchg
cmp
in
xchg
mov
dec
xor
rolw
cwtl
xor
mul
xor
lea
push
and
add
ret
dec
cmp
cmp
roll
mov
push
push
add
test
shll
sti
ficoms
add
xchg
inc
inc
mov
adc
cmp
sti
xchg
xchg
repnz
fwait
orl
xchg
cmp
hlt
sub
xor
jmp
and
push
xor
cs
call
jo
int3
test
subl
movsb
cmp
mov
adc
inc
or
mov
mov
call
dec
add
test
rorb
pop
icebp
sbbl
adc
rorl
call
lahf
or
pmuludq
sti
ljmp
jne
ret
frstor
add
push
xor
adc
je
test
test
cmp
add
and
bound
cmpb
scas
or
pcmpeqb
sti
call
frstor
add
call
test
test
jmp
add
push
xchg
jbe
rcll
dec
test
aas
add
and
pop
jb
orl
add
push
rolb
add
hlt
iret
add
inc
enter
movb
mov
jno
adc
add
mov
scas
ds
pusha
call
subps
jg
test
push
insb
scas
push
incb
dec
pop
rorl
sti
ficoms
jne
xor
xchg
add
push
xor
aam
xchg
fildl
add
xchg
ret
jbe
mov
scas
lahf
mov
mov
scas
out
add
test
bound
mov
mov
xor
les
jmp
add
xor
pop
cmp
push
xor
mov
add
icebp
loopne
adc
mov
push
add
call
fs
xor
mov
push
cmp
add
push
xor
andl
inc
mov
jmp
das
mov
sti
add
jmp
fadds
incl
jl
add
fnsave
cmp
xor
sbb
mov
jmp
sbb
mov
fisttps
clc
fdivr
cld
jbe
inc
jmp
into
mov
sti
cvtpi2ps
cli
cmc
add
push
or
fstpl
das
test
int3
mov
ret
adc
add
and
daa
mov
notl
jbe
jmp
mov
add
sub
jmp
jno
add
outsl
lea
mov
mov
notl
inc
or
xchg
fsub
mov
add
test
xchg
shr
jne
sub
lods
cmpsl
cld
jmp
or
add
xor
test
xor
inc
jno
stc
mov
mov
add
or
push
or
or
in
nop
and
test
dec
rolb
ljmp
into
cld
mov
shrb
adc
loope
mov
nop
lea
add
xchg
scas
xchg
fdivrl
push
sti
xchg
push
int3
std
mov
add
push
push
mov
push
cltd
decl
dec
into
sbb
popa
pop
add
adc
lea
push
push
jle
mov
pop
mov
sti
fs
adc
lods
sub
std
sub
inc
sub
inc
push
mov
or
cmp
or
add
jmp
mov
add
into
lret
pop
scas
clc
add
outsb
inc
dec
mov
out
add
xor
dec
jge
roll
sbb
jbe
ret
in
les
mov
xor
inc
mov
jecxz
stos
js
jmp
push
and
add
add
push
shlb
out
add
fistpl
jg
push
push
sbb
and
push
push
xchg
sub
mov
or
imul
and
add
jl
stos
clc
mov
ret
js
pushf
call
repz
adc
std
mov
fucomp
mov
fmulp
repz
pusha
push
rolb
push
fmuls
jge
in
xor
inc
pop
popf
jle
aaa
stos
add
xchg
lea
xor
add
mov
cli
orb
leave
and
mov
je
mov
arpl
lock
incb
repz
mov
mov
sbb
imul
stos
mov
or
in
jecxz
mov
in
jecxz
sbb
fpatan
jg
dec
jmp
test
sldt
push
out
lahf
push
loope
cmp
daa
adc
push
jmp
cmp
cmp
and
or
push
scas
push
lea
cli
sahf
rorl
push
cltd
xchg
add
fs
add
clc
inc
sbb
lcall
sbb
stos
jg
jno
push
push
push
cmp
add
fcmove
aas
test
cltd
jle
jno
or
roll
push
loope
add
daa
hlt
sbb
decl
push
fsubr
orl
mov
sub
int3
push
mov
mov
add
outsl
bnd
xor
add
insb
mov
xor
push
cld
jmp
add
stos
scas
loopne
call
add
add
add
add
rolb
scas
xor
push
xor
rorl
scas
xorl
movsb
lahf
int3
outsl
bnd
xor
add
cmp
inc
push
sbbl
xorl
jns
sarl
dec
mov
int3
imul
stos
in
add
jmp
push
mov
cltd
addb
add
add
add
add
in
daa
xchg
ss
fucomp
fildll
test
insl
cwtl
das
add
and
data16
jmp
mov
add
mov
inc
iret
mov
idivb
push
add
push
test
aaa
sub
mov
movsl
sti
neg
jmp
mov
jp
repz
testb
mov
scas
int3
add
add
xorl
inc
lock
add
add
mov
test
test
xchg
rorl
test
cmp
xorb
repz
insb
mov
test
fildl
subl
add
inc
jmp
dec
data16
test
xchg
mov
lods
push
xor
call
add
mov
mov
fdivs
inc
lods
sub
add
cmpsl
sub
cld
pop
jnp
fsubrl
xchg
cmpl
ret
in
xlat
mov
sar
insb
dec
lea
mov
scas
push
gs
xchg
mov
rolb
hlt
push
inc
dec
call
push
inc
xchg
add
or
aam
xchg
mov
test
push
mov
push
scas
pushf
stos
call
stos
xchg
jp
sbb
mov
lcall
outsb
inc
jge
and
add
adc
outsb
cmp
test
xor
xorl
add
stos
and
sub
mov
imul
fimuls
add
add
add
add
mov
xor
jmp
add
out
sub
movsl
add
and
adc
xor
mov
call
aas
push
test
cmc
stos
pop
stos
jecxz
mov
add
inc
inc
stc
das
dec
repnz
push
xor
faddl
and
icebp
arpl
shll
jo
dec
lret
sub
add
jge
push
orb
mov
lret
fildl
adc
aas
jmp
xchg
xor
divb
call
push
and
xorl
lret
push
pop
sbb
jmp
jno
add
jo
jb
jb
push
push
cmpsl
inc
and
test
test
jg
lret
add
jmp
aad
out
incl
add
xor
add
test
call
cmp
push
idivl
add
xor
xor
test
call
fcmovnb
xor
pushl
adc
mov
ljmp
push
push
cmpsb
jmp
jmp
sbb
inc
call
mov
inc
or
idiv
xchg
jns
incb
jnp
mov
pop
xor
mov
add
push
or
lock
movsb
adc
mov
mov
and
lea
outsb
ss
add
jle
push
add
add
mov
mov
ljmp
xchg
das
cli
ss
mov
fcmove
test
int3
adc
sti
push
mov
sti
test
mov
mov
adc
pop
add
test
pop
push
das
add
adc
cmc
out
mov
or
std
call
jp
dec
mov
push
xor
inc
sbb
pop
or
mov
adcb
pusha
lock
mov
ret
std
in
jae
sbb
sbbb
cwtl
rcrl
ret
jno
xchg
aaa
mov
push
mov
jo
jnp
dec
and
in
adcb
add
add
add
add
insb
inc
or
push
aam
xchg
scas
cli
jp
pushf
shll
stc
inc
push
mov
mov
mov
jp
or
dec
mov
test
mov
dec
dec
xlat
adc
add
cmpsl
leave
incb
dec
lret
incl
dec
lret
add
dec
sub
jg
aam
sub
jmp
xchg
xchg
fsubl
dec
or
add
add
add
pop
cli
out
jle
dec
out
jp
jmp
shll
add
push
jmp
pop
sub
in
ret
das
addb
mov
add
mov
aam
stos
jne
mov
mov
add
mov
clc
mov
sub
addb
inc
or
mov
decl
add
notb
rcr
sbb
call
jecxz
rolb
xor
inc
aam
testb
or
bsr
je
sarb
inc
xchg
cmpsl
add
sub
cmp
xlat
mov
push
xor
in
sbb
inc
clc
mov
or
adc
aam
jmp
mov
or
add
add
add
add
xchg
xor
sbb
test
sub
incl
xchg
outsb
xchg
mov
movsb
ds
pop
xchg
subb
sar
inc
mov
call
sub
sti
cs
mov
pop
sti
pushf
xchg
pop
sti
fs
inc
push
sbb
mov
add
add
mov
adc
fcoml
in
xor
mov
js
mov
pop
push
push
lret
jle
pop
inc
ret
sub
push
enter
int
aam
or
hlt
jne
jnp
adc
iret
outsl
pop
sarl
scas
push
test
in
cmp
aad
cmp
in
adc
repnz
cmp
outsw
sbb
aaa
pusha
stos
es
pop
outsl
adc
aaa
sub
les
cmpsb
jp
cmpl
push
xor
jnp
add
and
jp
and
adc
es
push
xchg
mov
mov
in
sti
mov
inc
insl
pop
mov
outsl
mov
jno
or
out
add
imul
stc
cs
jge
push
push
mov
jmp
lock
hlt
std
sub
sti
or
lds
push
test
add
je
dec
rclb
jg
mov
jae
jmp
pop
sti
jbe
mov
or
mov
jge
test
leave
or
cmc
leave
or
add
xor
add
test
cmp
ss
jne
loop
lea
jmp
testl
sbbb
pop
aas
and
lcall
push
clc
lods
lret
fwait
add
cmp
jno
push
adc
adc
lahf
loop
dec
lds
adc
idivl
jno
add
mov
and
ljmp
add
add
add
shlb
lcall
and
sbb
mov
pop
test
adc
push
cmp
stos
sti
enter
or
add
int
call
and
push
cmp
push
sti
cmp
adc
in
pop
xor
inc
add
aam
xor
jl
add
jb
mov
sbb
aam
adc
testl
add
add
add
call
pushf
aam
cmc
or
mov
xor
loope
xor
lret
call
in
inc
push
icebp
or
lods
fs
inc
push
jae
ljmp
mov
sbb
jae
xchg
xor
add
xor
lods
jp
jg
add
pop
inc
lock
xorl
jmp
add
add
add
add
jb
stos
cmp
jmp
sti
sbb
aam
xor
push
std
ja
dec
movsl
mov
mov
add
stos
or
insb
adcb
mov
jbe
push
test
jb
mov
addr16
jmp
dec
shlb
lods
subb
adc
xor
lods
sbb
mov
add
fisttpll
and
mov
sti
out
add
push
cmp
stos
sub
dec
sahf
shlb
jo
add
int3
or
push
hlt
inc
or
xchg
notl
rclb
jne
xchg
out
xlat
movb
jnp
clc
divl
in
call
jle
testl
or
add
add
cmp
add
notl
fsubrl
jnp
mov
jne
and
aaa
and
sti
je
in
jle
testl
les
pushl
inc
clc
push
cmp
sbb
add
movsb
xchg
xchg
dec
xchg
cmp
xchg
xchg
mov
call
pusha
fimull
aam
call
dec
add
add
cld
repz
push
call
stos
cmp
add
push
xchg
push
imull
lcall
cmp
aas
sbb
jb
adc
add
mov
testb
cs
sbb
dec
sti
in
ja
gs
cmp
push
xor
cmp
das
jmp
ja
xor
add
test
and
add
aad
test
dec
mov
out
gs
cmp
cmc
cmpb
lock
inc
insl
pop
push
xor
push
mov
jecxz
pop
jl
dec
pop
adc
pop
mov
cmp
pop
add
js
mov
outsb
pusha
jo
test
lock
xor
popf
fsubrl
jle
in
and
xchg
add
add
add
push
in
push
outsb
outsb
sti
mul
xrelease
pop
push
pop
push
shl
sar
lret
out
std
repz
pop
outsb
dec
je
pop
call
cmp
inc
push
movsl
jmp
push
xchg
outsb
mov
inc
add
pop
mov
orl
scas
stos
popa
or
imul
or
add
add
rclb
push
adc
push
xchg
push
mov
out
add
jmp
addb
call
jmp
dec
add
dec
and
and
push
jne
add
or
test
pop
out
pushf
add
xor
call
jmp
mov
pop
xchg
lea
add
or
xor
test
add
push
movntq
out
jmp
xor
mov
leave
sub
pop
xchg
xorl
negl
mov
jg
testb
ficompl
adc
add
aas
hlt
pop
test
adc
les
jae
stc
es
sti
fs
or
loop
or
pop
jb
cmp
decb
hlt
rcrb
inc
add
add
adc
lcall
xchg
out
js
aam
cmc
test
movsb
sti
fistl
mov
dec
push
dec
xchg
lds
jo
xchg
jbe
popf
das
outsb
ret
inc
bound
mov
inc
into
jge,pn
fcompl
int3
out
cs
pop
je
push
jb
dec
inc
loopne
icebp
push
pop
jbe
add
push
xor
push
mov
fsubs
and
push
mov
mov
dec
add
push
add
jp
push
addb
imul
in
jo
gs
pop
fldl
je
leave
add
lret
imul
fs
cmp
xor
jg
xor
jmp
pop
cmc
repz
lods
fisttpl
push
das
cmp
push
add
daa
pusha
call
gs
aaa
test
push
xor
bound
fs
pop
inc
into
in
psraw
mov
add
pusha
call
push
push
test
push
xor
and
aaa
jg
push
xor
jb
inc
lea
dec
es
out
test
mov
jne
mov
add
std
pop
test
mov
mov
test
divl
addr16
adc
imul
imul
subl
jne
lea
enter
jle
decl
dec
pop
ret
sub
push
mov
cli
mov
xorl
mov
push
out
arpl
push
imul
lds
adc
adc
cmp
add
jge
call
mov
movntps
es
push
test
inc
popf
mov
xchg
sbb
out
stc
repz
sbb
and
mov
lret
int3
repz
add
adc
lcall
clc
mov
pop
add
jnp
add
add
pop
dec
mov
adc
add
sub
je
push
int
sti
scas
icebp
cmp
adc
push
lret
in
xor
ss
adc
jge
loopne
in
sbb
mov
mov
scas
loopne
add
pop
push
mov
add
or
pop
scas
lcall
add
sbb
dec
mov
pxor
mov
sbb
add
enter
add
into
icebp
aam
lods
pusha
or
cmp
in
aam
cmp
fiaddl
into
xor
push
aaa
addr16
xor
fcoml
xor
add
push
or
jb
pop
jl
mov
pop
sahf
mov
clc
dec
add
xchg
adc
sahf
fwait
mov
or
jl
mov
mov
iret
daa
add
cmp
lods
add
ljmp
push
xor
std
pop
pop
pop
pop
push
je
pusha
push
incb
and
imul
in
sti
rcll
outsl
je
xlat
in
jecxz
dec
push
add
int
sti
mov
in
bound
inc
movsl
push
mov
mov
or
imul
shl
repz
cmp
jmp
divl
push
xchg
std
add
add
movl
incl
sbb
add
adc
mov
das
jne
pusha
test
add
xor
push
jne
or
lcall
sub
push
or
ss
mov
inc
popa
cmp
outsl
pop
jae
add
mov
add
ds
adcl
jb
mov
xchg
push
pop
jo
or
gs
adc
mov
xchg
push
pop
adc
adc
push
xchg
test
adc
push
xchg
rcll
or
push
mov
pop
or
pop
in
inc
gs
mov
fsubl
outsl
mov
push
lcall
or
xchg
add
fadds
pop
xorl
adc
in
cmpb
or
add
cmp
popf
arpl
sub
fs
inc
inc
andl
adc
cmp
fs
popf
and
inc
xor
fs
popf
and
dec
shlb
lock
jbe
js
jp
add
add
shll
fs
imul
jnp
cmp
pop
popf
dec
fs
hlt
ss
js
cmp
mov
scas
lret
cli
insl
xchg
mov
loope
popf
or
in
push
sbb
adc
sti
cmpsb
aas
xor
bnd
addr16
bound
in
pop
push
add
pop
test
in
fsubl
and
fsubr
pop
aad
shl
les
jmp
add
add
add
push
adc
iret
xchg
in
and
push
xor
ljmp
mov
push
push
sub
mov
mov
xor
xchg
or
add
pop
and
dec
lods
cmp
push
xor
ja
dec
add
je
cmp
je
xor
je
cld
lds
mov
pop
cmp
add
add
add
add
sub
inc
sbb
xchg
inc
mov
mov
cmpb
push
xchg
rorb
add
sub
leave
js
or
jmp
push
sub
test
divl
dec
mov
stos
adc
cmp
test
dec
mov
and
and
in
cmc
xchg
sti
mov
std
xchg
xchg
add
dec
cs
fs
lock
push
in
in
jge
inc
pop
jmp
into
pop
or
dec
fcoml
popa
lret
cli
popa
orl
or
iret
pop
cli
mov
mov
pop
cmp
push
jge
sti
sbb
test
adc
je
sub
push
cmp
sub
fisttpl
rcll
add
rcrb
je
mov
adc
in
sahf
fdiv
add
xor
xchg
or
add
jmp
cwtl
pop
insb
aam
push
lods
mov
sbb
xor
pop
cmp
call
cwtl
pop
mov
inc
push
popa
fstp
pop
popa
hlt
pop
inc
lock
sbbl
lcallw
add
sub
pusha
and
and
ret
push
mov
aaa
xchg
sub
cwtl
lds
mov
fstps
or
leave
pop
data16
jecxz
pop
inc
adc
and
jns
mov
or
inc
jmp
adc
cmp
hlt
and
and
pop
mov
adc
xchg
cli
stos
sti
jbe
hlt
and
add
aad
sti
fstpl
loop
bound
sbb
cmp
inc
inc
sti
stc
jmp
xor
ds
xchg
sti
bound
adc
cmpsb
jge
outsb
add
lods
jl
xor
lea
dec
lea
push
mov
push
call
mov
jnp
jne
lea
mov
and
push
add
lods
pushl
adc
add
cmp
lcall
dec
mov
repnz
or
dec
call
xor
dec
or
sbb
push
outsw
and
and
sub
add
pusha
cmp
push
sarb
or
or
add
inc
cmpsb
or
cmpsl
and
xchg
adc
inc
or
add
mov
or
mov
daa
lret
aaa
sbb
in
ficoml
add
add
pop
sbbb
loopne
or
cltd
adc
sbb
pop
nop
loopne
or
xchg
xchg
jnp
inc
jg
lea
inc
cmpsl
xchg
ljmp
addl
pop
lret
push
popf
rorb
enter
or
icebp
sbb
add
inc
shrl
dec
das
xchg
push
outsl
out
xchg
sub
outsl
adc
flds
jns
les
mov
cwtl
sbb
test
add
xor
cs
dec
data16
mov
cwtl
push
add
pop
push
insb
inc
cltd
sub
stos
stc
loopne
out
mov
jl
mov
inc
sbb
bound
stos
pop
lret
addb
cltd
daa
xlat
icebp
iret
lock
loop
loop
pop
add
fnstsw
jb
sub
cld
outsb
sub
pshufw
inc
adc
fldl
cli
xchg
xor
xchg
and
inc
pop
and
out
inc
xor
test
fs
xlat
push
xor
ret
add
fdivs
bound
push
xchg
add
fstpl
je
ds
test
fst
adc
push
push
xor
rcll
lret
mov
jmp
dec
sub
cmp
call
loop
call
mov
inc
icebp
add
sub
in
xor
sbb
inc
clc
mov
cmp
mov
addb
add
add
add
cs
mov
jno
add
inc
add
mov
add
incb
jnp
lods
sub
add
daa
add
xor
add
test
out
mov
push
add
aas
popa
mov
aam
sbb
rorl
loopne
cmpsb
nop
add
fcomp
mov
add
inc
ljmp
stc
sbb
mov
cmpsb
sti
jp
dec
cld
jg
or
push
aam
outsb
idiv
mov
cmpb
iret
test
mov
jnp
aad
mov
adc
push
negb
nop
mov
pop
xor
mov
mov
xchg
add
cmpsl
jmp
scas
fnsave
outsb
dec
dec
movsl
rcrl
pop
jno
dec
dec
mov
push
xor
dec
inc
out
out
clc
inc
sub
test
call
das
push
movsl
es
add
in
mov
pop
or
mov
das
pusha
pmaddwd
gs
int3
pop
jmp
cmp
in
int
add
jae
aad
sub
pop
or
push
lret
jmp
push
push
mov
push
xor
jb
inc
not
loope
jmp
es
push
rolb
push
xor
jmp
sarb
es
inc
mov
xchg
and
push
aaa
repz
cmp
mov
in
jb
nop
add
and
leave
cmp
jo
cmp
outsb
ljmpw
push
scas
lock
out
pop
mov
aad
call
and
add
xchg
xor
add
jne
add
clc
jmp
lods
shrb
divl
aas
cmp
test
idiv
xchg
and
hlt
dec
pop
addr16
call
outsl
or
cmc
mov
inc
add
xor
pop
mov
xorl
cmp
lea
push
dec
mov
mov
mov
mov
cmpsb
test
and
inc
push
push
fnstcw
call
mov
loope
in
push
mov
fisubl
mov
sbb
inc
mov
test
sti
fimull
mov
rorl
fidivl
int3
xchg
add
aaa
add
fisttpl
sti
inc
mov
daa
lret
push
mov
xchg
push
jl
and
ja
mov
pop
or
in
jg
adcl
insb
jae
jg
xor
add
add
mov
cs
arpl
out
popa
mov
movsl
xor
push
push
leave
add
and
add
add
add
enter
adc
adc
jns
mov
adc
cmpsb
repz
ret
ds
adcb
xor
sbb
add
mov
push
repnz
imul
push
test
fisttpl
push
mov
mov
lods
inc
loope
sbb
sahf
les
fisubrs
jmp
jno
sti
jle
xchg
out
popa
pop
jne
lret
data16
clc
pop
ret
or
inc
lods
in
push
push
in
xchg
stc
rolb
lds
jmp
cmp
pop
bound
dec
push
sub
shr
push
xor
jmp
mov
xor
rcl
fldl
add
jo
add
cmp
xchg
mov
decl
mov
rorb
mov
movsb
notl
loop
pushl
stos
rorb
fiadds
add
movsl
idiv
stos
cmp
in
idiv
pop
and
xchg
sub
xor
daa
movsb
pcmpeqw
idiv
aaa
pop
push
decb
add
xchg
shlb
jecxz
ljmp
add
das
addl
lods
mov
push
dec
decl
ret
jo
xchg
dec
jl
cmc
lret
mov
add
push
nop
push
dec
decl
mov
cli
mov
icebp
add
jp
cmpsb
sbb
dec
js
aam
ficoms
or
xchg
pop
jnp
add
push
dec
jmp
int3
inc
hlt
add
inc
mov
aas
mov
xchg
pusha
sub
and
jg
inc
das
aam
mov
xor
mov
xor
sbb
leave
mov
lret
fwait
jmp
add
ja
push
xor
cmpsl
xor
subb
incl
xchg
xchg
mov
push
jp
add
aam
jae
stos
add
dec
mov
push
sbb
mov
fstpt
jle
lods
push
pop
in
std
vpaddw
into
data16
stos
fsubr
fiadds
xchg
cld
fisubl
add
das
add
mov
dec
inc
imul
inc
loope
xor
popf
lods
add
push
dec
lds
add
add
add
dec
xor
clc
pop
jmp
aas
int3
outsl
or
call
xorb
daa
mov
cmp
jmp
pusha
sti
fadd
std
xchg
mov
shl
out
dec
enter
mov
test
cmpl
push
mov
mov
lret
dec
xchg
mov
addb
or
mov
outsl
pop
mov
add
dec
jp
and
mov
test
mov
or
lret
dec
and
into
inc
or
jae
addb
inc
and
iret
enter
add
mov
lea
jecxz
sub
scas
jle
das
jae
mov
mov
in
sub
push
add
cmp
out
add
xorb
add
add
add
add
pop
add
aad
add
ds
jmp
xchg
pop
jl
aam
or
fcmove
cli
jle
pop
or
pop
sbb
jg
push
aaa
jne
or
add
xrelease
pop
sarb
or
adc
xchg
cmp
inc
xchg
push
iret
movsl
addl
into
cmp
push
enter
dec
ret
add
stc
pop
incl
push
icebp
fdivrl
pop
jnp
cld
push
call
int3
and
or
pop
jbe
jmp
call
sub
jae
add
xchg
rolb
out
jp
mov
jne
leave
repz
outsl
das
pusha
inc
stc
js
inc
sbb
xchg
mov
adc
add
dec
fimuls
add
add
add
cmp
dec
mov
test
jb
into
jne
sarl
sbb
repz
lret
or
int
in
jp
pop
add
mov
sti
rorl
fwait
sub
ds
sbb
sub
inc
xor
stos
push
mov
xlat
popw
and
enter
pop
je
cmp
aad
dec
sti
bound
add
push
pop
popf
dec
xor
and
mov
push
inc
jg
mov
sbb
inc
lds
loopne
jmp
adc
cmpsl
adc
jmp
or
and
mov
mov
add
out
jae
in
jae
test
xor
add
bound
clc
enter
add
das
bound
ret
pop
mov
lret
in
shrd
clc
daa
mov
clc
das
divl
adc
mov
adcl
jge
add
mov
jo
test
inc
push
mov
sub
add
mov
mov
call
push
mov
add
mov
cmp
pop
sti
cmp
add
add
push
hlt
jge
add
push
mov
pop
hlt
mov
pop
dec
lods
fistpl
fcmovb
out
test
pop
jne
push
dec
xor
jle
push
push
mov
iret
jmp
pop
aam
je
xor
jne
cmp
ss
xor
and
mov
push
xchg
inc
add
add
cmp
add
add
add
add
jge
lea
das
insl
orl
sub
dec
jb
daa
pop
xor
into
ret
add
imul
enter
add
jmp
pushl
fiaddl
into
hlt
les
sti
fmuls
cld
or
fdivrs
cltd
add
ljmp
push
pop
pop
dec
push
xor
add
add
add
add
and
pop
int
stos
xor
iret
pop
cmp
xlat
push
push
add
mov
add
dec
sbb
adcb
sbb
add
leave
cli
push
leave
jo
fistpll
mov
rolb
xor
dec
cs
jg
out
iret
dec
xchg
cs
or
mov
add
add
push
fiadds
out
mov
push
ss
das
bound
xor
aad
or
jne
scas
mov
mov
pop
xor
inc
test
mov
scas
adc
call
dec
push
pop
mov
or
lds
orl
dec
mov
mov
gs
mov
incb
add
shlb
cld
sub
sbb
sub
es
aas
imul
and
test
test
addl
dec
or
into
call
je
je
inc
aam
sbbl
enter
addl
cmp
cld
scas
add
jno
push
mov
nop
push
pop
decl
inc
sti
dec
xlat
out
add
cmp
sbb
xchg
xchg
sbb
add
push
jne
call
mov
inc
mov
fisubl
loope,pt
inc
xchg
or
pop
inc
mov
cmp
int3
push
jp
decb
jnp
push
pop
inc
int3
pop
jp
fimuls
push
jno
stos
push
pop
xchg
das
icebp
add
add
lea
sub
jmp
call
sahf
outsl
jb
push
mov
outsb
pop
out
hlt
nop
add
push
pop
test
insl
inc
in
insl
pop
into
mov
mov
int3
imul
adc
jmp
pushf
pop
into
ret
loopne
xchg
xor
into
dec
mov
inc
xchg
sub
add
add
inc
pusha
fstpl
loop
adc
call
push
ljmp
cmp
mov
rcll
cs
das
mov
sbbl
idiv
mov
sti
push
fadds
add
dec
sti
mov
dec
jne
iret
mov
sti
es
leave
outsl
jne
add
fldt
jg
ds
into
shrl
adc
push
loope
jmp
fcomp
push
xchg
pop
sub
loop
lods
jo
loopne
icebp
cmp
lock
mov
pop
dec
and
cmp
and
xchg
je
or
xor
call
test
cmp
push
mov
addb
test
test
dec
subl
push
call
mov
mov
stos
divl
cmp
adc
add
jge
jae
idiv
addb
je
and
call
jl
in
les
fiadds
or
mov
mov
arpl
call
jno
not
mov
repnz
add
dec
jo
or
mov
addb
inc
mov
outsb
fs
call
lret
xchg
mov
or
pop
push
pop
push
je
inc
xor
es
and
lds
adc
jbe
sti
push
into
outsb
test
mov
or
jnp
mov
sub
mov
xchg
xor
pop
push
fiaddl
jmp
push
mov
fidivl
sbb
bnd
das
jmp
dec
jns
imul
pop
addl
add
out
cld
mov
ljmp
mov
cmp
ljmp
push
pop
into
cmp
or
cs
add
pushf
xor
jl
cmp
or
add
jg
push
test
sti
into
shll
mov
push
test
add
dec
xor
adc
xchg
pop
scas
loope
sub
pusha
mov
add
test
sti
outsb
iret
inc
test
scas
adc
sti
sbb
inc
aas
jmp
xchg
inc
xchg
fucom
or
xchg
xor
add
ret
out
xor
jmp
cmp
pop
mov
sbb
mov
subl
je
arpl
mov
stos
rclb
hlt
mov
mov
cld
mov
mov
or
in
push
test
sub
add
aaa
lea
mov
add
mov
mov
mov
mov
or
jae
mov
add
mov
mov
or
hlt
jae
test
stos
rclb
adc
es
xorb
insb
xor
mov
sub
call
clc
aam
jmp
lret
cmp
jle
add
lcall
xor
inc
call
aad
jmp
imul
and
inc
movl
pop
sbb
jns
cmpsb
dec
call
ja
inc
ret
or
hlt
xchg
ja
arpl
pushl
movq
addb
cmpsb
lods
add
ja
push
rorb
inc
fdivrl
aaa
xor
js
dec
dec
add
lods
bswap
pop
pop
inc
sub
ja
jo
fldenv
out
add
add
mov
test
add
aas
into
add
outsb
cmp
sub
add
and
adc
xor
aad
adc
or
xor
mov
and
into
jne
push
add
cmc
imul
imul
dec
ja
jo
inc
push
xor
pop
das
add
add
icebp
mov
add
dec
mov
jmp
cmp
push
out
or
xor
jmp
insl
das
mov
ret
adc
pop
push
test
cmp
insl
out
xor
jmp
scas
hlt
cli
xor
mov
sti
jmp
daa
cmp
mov
pop
les
jb
mov
rorl
outsb
incl
xchg
push
xor
fs
cmp
push
add
pop
cmp
je
inc
stos
iret
mov
test
xchg
imul
xchg
xchg
add
inc
inc
subl
out
add
aad
sub
pusha
push
stos
incb
mov
or
scas
arpl
adc
imul
test
dec
adc
jge
ret
test
jl
jp
mov
mov
xor
add
jbe
jge
js
add
dec
jl
pop
mov
or
sub
pop
sub
push
and
pop
mov
rcrb
test
mov
int3
xchg
inc
push
jbe
dec
andb
movhps
jae
push
cmp
jg
jp
fdivrl
jl
pop
xchg
push
inc
je
not
push
add
and
shufps
sub
add
dec
aaa
xchg
sbb
addr16
scas
or
inc
pop
rcll
enter
popa
rol
add
xor
or
imul
pop
pop
dec
enter
fs
mov
sub
je
adc
imul
jmp
add
dec
cs
jmp
xor
add
mov
jno
cmp
jae
sub
sbb
sub
push
insb
dec
dec
pop
divb
inc
mov
and
test
insb
mov
cmpsl
cmpsb
pop
cltd
xchg
xorl
cmc
adc
mov
das
sub
xor
ret
bound
shlb
push
in
xchg
add
mov
sub
addr16
xor
mov
mov
lock
jg,pn
add
mov
push
xor
fisttps
lods
inc
gs
adc
mov
inc
mov
lods
push
mov
dec
cmpsl
aas
loope
outsb
je
test
lea
loopne
sti
lds
stc
add
mov
test
add
add
in
inc
js
notb
loope
pop
cmp
inc
lods
push
mov
test
push
sbb
sbb
cmc
mov
push
out
adc
sbb
mov
and
in
popa
add
jg
loopne
lcall
mov
arpl
pop
in
push
xchg
sub
lahf
and
push
out
test
incl
add
push
push
pop
notb
push
pop
dec
or
push
jno
xchg
call
ja
dec
xchg
ret
notb
adc
inc
xchg
mov
sub
pop
int
add
jl
xor
push
iret
mov
push
pop
dec
push
repz
sarl
add
push
inc
adc
add
iret
push
xchg
ret
pop
or
repnz
bound
repz
adc
xor
scas
inc
lock
xchg
add
in
jmp
xchg
dec
out
cs
fnstcw
sub
fisttpll
into
push
dec
test
sub
jp
cld
push
cmp
sub
dec
mov
call
add
add
add
add
push
jmp
incl
aaa
or
cmp
pop
arpl
cli
outsl
outsl
and
jle
hlt
cmp
fldcw
jl
jno
ss
das
jmp
add
add
xchg
ja
call
pop
xor
sub
mov
add
shrl
insb
xchg
out
xorl
fbld
add
pushf
xchg
sbb
lret
stc
dec
shr
sbbl
inc
aas
jmp
adc
mov
xor
jmp
or
sti
push
push
cmp
jno
std
bnd
aam
and
pop
mov
call
movb
add
sub
addl
mov
lds
incl
add
mov
pop
imul
inc
cmp
lds
pop
jno
mov
out
add
or
sti
push
ret
roll
fdivl
push
lcall
cmp
adc
xor
pop
mov
divb
notb
arpl
test
pop
push
xchg
add
aaa
add
inc
iret
cli
pop
mov
inc
push
rolb
test
jne
jl
aaa
pushl
rolb
test
cld
xlat
add
insb
adc
lret
iret
add
add
inc
iret
cli
and
adcl
add
cs
cmp
xchg
dec
js
mov
dec
or
sahf
sbb
iret
leave
incl
add
inc
je
lahf
decl
push
mov
xchg
dec
sub
push
xor
add
dec
add
xor
adc
jp
add
ret
sbb
add
push
add
shrl
cmpsb
pop
push
cmpsl
and
mov
add
test
daa
push
xor
std
ret
outsb
xchg
and
cvtdq2ps
lods
das
icebp
mov
add
add
mov
mov
add
hlt
xchg
mov
add
in
xor
inc
out
mov
sti
fs
iret
das
add
push
mov
add
push
mov
popa
push
inc
clc
pop
sbb
mov
das
add
mov
xor
ficoml
lods
push
call
pushf
xor
ljmp
add
add
xlat
addr16
insb
jl
je
xlat
adc
and
push
je
xlat
push
push
jb
mov
xor
inc
aam
push
xor
inc
js
test
lret
jmp
lds
gs
js
js
push
std
dec
out
and
adc
test
and
jp
push
xor
gs
sti
mov
push
add
adc
dec
arpl
popa
dec
std
jo
or
js
je
cmpb
mov
jne
pop
mov
jp
sti
out
ret
in
jae
mov
sub
jmp
push
sti
mov
in
std
outsl
push
mov
sub
mov
add
shrl
sub
mov
shrl
cmp
jp
add
test
call
inc
call
test
sub
lea
enter
add
rorb
outsl
pop
mov
mov
push
cmc
push
jle
pop
adc
inc
outsl
pop
pop
adc
in
iret
mov
shl
cmc
je
sti
sbb
push
lret
inc
popa
jbe
add
sbb
xchg
sbb
call
fsubl
add
xor
xor
in
adc
movsl
push
cmc
rcl
notl
pop
test
repnz
add
movsb
or
out
jb
shr
jb
aaa
pop
pop
add
cmp
into
iret
sbb
pop
cltd
mov
add
imul
clc
shrb
push
mov
push
push
xor
dec
das
cld
pop
add
gs
jl
mov
clc
rorb
pop
inc
das
xchg
push
adc
adc
das
add
push
mov
xchg
pop
orb
inc
or
adc
jg
sti
ds
lcall
mov
xchg
mov
mov
dec
or
jmp
cs
jns
xor
jmp
push
xor
xorb
hlt
add
push
inc
jmp
out
cmp
addb
jmp
jge
and
ss
cld
lcall
add
xor
addr16
add
std
test
jl
ss
add
lods
dec
adc
pop
mov
add
xor
inc
or
adc
dec
std
push
adc
mov
es
add
test
add
dec
std
cmc
jne
xchg
adc
test
es
js
add
xchg
jne
out
pop
sub
sbb
inc
add
cmc
adc
roll
out
inc
pop
inc
add
cmp
je
push
dec
inc
out
ljmp
push
lcall
inc
cmpsb
aas
push
jns
add
push
dec
lock
sub
adc
add
outsb
dec
sar
jl
xor
mov
cli
inc
pop
jbe
insl
aas
aas
jmp
adc
jb
jne
ja
insl
xor
jne
push
push
frstor
sub
fs
adc
mov
add
cmp
push
inc
push
inc
ret
inc
jns
lods
xor
cld
inc
test
mov
rclb
add
xor
sbb
jmp
fcmovnbe
jns
sbb
mov
xchg
adc
jne
gs
cmp
out
push
xor
and
cmp
out
push
sub
movsl
loope
pop
pusha
cmc
ret
scas
clc
cmpsb
mull
outsl
jmp
push
lock
xor
sub
add
jmp
add
add
add
add
sbb
mov
xor
bound
aaa
je
movsl
fsubl
mov
mov
popa
push
je
mov
cltd
jge
ss
xor
je
daa
sti
adc
jne
jne
adc
pop
cmp
test
inc
xor
jle
add
in
or
call
gs
mov
push
movsl
adc
mov
std
sahf
repnz
xchg
cwtl
ds
adc
cmp
gs
ds
mov
in
cmpsb
aaa
mov
push
mov
pop
je
pushf
and
lea
mov
inc
add
sbb
dec
adc
pop
add
adc
divb
jne
mov
add
fildll
xor
sub
sti
push
inc
cltd
out
add
mov
xorl
or
je
orl
xor
jne
fisttps
or
in
fbld
pop
out
stos
fcoms
push
sub
push
dec
and
sti
pop
cmpsl
repz
push
jmp
mov
mov
xchg
insb
xchg
add
jno
pop
test
lret
divb
inc
lahf
add
cli
and
pop
jmp
sub
pop
jne
imul
mov
dec
movups
rcrl
push
lret
add
push
inc
lea
xor
bound
test
inc
gs
insb
jmp
test
cmp
add
add
add
add
bound
daa
aam
cmp
frstor
cmp
ret
add
daa
clc
push
jge
jo
cs
pop
ds
mov
xor
out
call
dec
mov
add
push
mov
icebp
imul
pusha
mov
lret
daa
cmp
add
xor
lcall
shufps
jmp
add
add
add
scas
jmp
dec
shl
sub
push
bound
je
ljmp
std
dec
pop
xor
faddl
jne
lds
pop
das
call
push
and
jne
mov
adc
mov
pop
sub
daa
push
bound
add
in
cwtl
lods
je
decb
jg
sub
adc
and
add
adc
mov
sbb
sub
movsb
lcall
or
cmp
inc
divl
test
pop
xor
mov
in
inc
cmp
dec
mov
pop
push
xchg
mov
xor
je
xchg
mov
xor
imul
sti
xchg
push
pop
orps
add
pop
mov
and
add
dec
add
je
leave
enter
mov
adc
pop
fadds
fstps
mov
push
ficoml
std
or
outsl
sbb
mov
adc
push
fmuls
push
shlb
mov
xchg
or
repnz
pop
add
sti
push
je
outsl
test
add
daa
jbe
shlb
xchg
outsl
jnp
push
push
mov
test
daa
lahf
xchg
rcl
subb
jno
xor
enter
add
into
add
adc
pop
mov
add
int3
cmpl
jle
xlat
dec
pushf
or
mov
int
xor
aam
sbb
imul
xchg
pop
int3
out
adc
add
hlt
push
sbb
out
mov
lea
push
jp
mull
inc
test
or
outsb
jo
adc
push
push
sarb
roll
xchg
mov
mov
fsubrs
ret
push
outsb
push
sbb
hlt
and
sti
fs
jle
sub
sub
pusha
xchg
sti
mov
add
out
les
adc
loop
jmp
pop
repnz
mov
aas
jmp
dec
pushf
das
xchg
jmp
cli
jbe
out
jae
xlat
sbb
xor
jae
inc
loope
lret
stc
dec
jge
mov
xchg
fbstp
jp
jo
popf
mov
sarb
fbstp
test
sub
add
add
jnp
mov
fisttps
inc
outsl
mov
mov
and
out
call
and
pop
test
sub
add
je
nop
lods
xor
scas
scas
mov
js
pop
lock
call
shrl
mov
loop
add
test
subb
bound
and
dec
cld
add
or
ljmp
test
add
mov
add
sub
iret
xor
pop
lcall
push
popa
mov
xchg
incl
shlb
mov
mov
and
xchg
cld
cmpsb
cmpb
roll
aam
cmp
and
xchg
mov
sbb
add
mov
je
mov
sti
inc
adc
aas
push
xchg
aas
je
movl
pop
stos
pusha
inc
push
lahf
ret
jmp
das
insb
inc
gs
outsb
xor
or
lods
mov
pop
lret
repz
lods
mov
mov
pop
into
push
jle
fs
sbb
push
inc
mov
pop
shlb
pop
fsubrs
sarl
mov
mov
xchg
lcall
add
add
add
add
mov
inc
or
xor
lods
xchg
cld
lahf
xchg
xorb
arpl
imul
pop
pop
fdivs
sbb
das
gs
push
xor
in
or
xchg
mov
or
jae
sbb
lea
test
xor
mov
movsl
call
push
shl
jae
fnsave
mov
sbb
inc
jmp
add
xchg
inc
dec
jno
daa
lea
jg
in
jne
sbb
arpl
xchg
pop
lock
aad
cld
in
pop
dec
je
sbb
xchg
aaa
sti
sbb
sbb
mov
mov
std
jo
inc
icebp
imul
cmp
xor
jmp
sbb
dec
pop
sub
add
idiv
mov
jecxz
in
jae
divl
mov
cmp
add
divl
inc
push
pop
adc
mov
shl
mov
test
push
adc
stos
jne
xchg
cmp
add
mov
cmp
xchg
insl
pushl
mov
stos
dec
cld
jp
adc
enter
cmpb
lods
inc
clc
mov
div
jns
jne
lods
je
adc
add
add
add
push
icebp
decb
xchg
cmp
adc
push
sti
int
shll
or
inc
loope
mov
mov
nop
mov
add
data16
mov
add
pop
mov
sbb
jno
jg
pop
mov
fcmove
data16
test
mulb
add
pop
movb
add
add
add
int3
loop
aas
aam
fmull
inc
push
adc
ror
push
out
xor
sbb
sbb
mov
cld
iret
cmc
insl
dec
jmp
test
pop
inc
cmpsl
out
adc
mov
loope
push
lret
mov
ja
or
pop
addr16
jb
cmpb
push
inc
add
pop
add
add
sbb
cmp
mov
xchg
mov
sbb
hlt
daa
outsb
mov
out
data16
xor
inc
xor
add
cmpsb
add
out
cli
hlt
orb
and
test
add
in
iret
jne
mov
lahf
pop
jg
movsb
inc
bound
and
mov
mov
add
xor
sub
out
fwait
and
shlb
xor
push
stc
lahf
xor
in
mov
and
test
aad
jne
test
jb
pusha
lock
adc
fiaddl
jmp
or
xchg
cmpsb
outsb
or
int3
push
mov
stos
add
popa
push
mov
or
push
roll
jmp
push
add
fisttpll
xchg
cmp
test
insl
push
xchg
xchg
cmp
jnp
mov
dec
mov
push
xor
inc
dec
hlt
xor
rorl
push
jge
or
xor
jbe
inc
mov
mov
cmpsl
mov
mov
scas
inc
hlt
push
pop
dec
xor
inc
push
xchg
pop
mov
lds
jge
add
loop
dec
jns
stc
out
scas
push
push
inc
adc
push
sahf
std
add
jg
pop
aas
jge
dec
sti
pop
daa
pop
aaa
insl
cmp
pop
das
sbb
add
loop
ficomps
mov
push
nop
adc
adc
lcall
add
push
or
nop
adc
xlat
jecxz
inc
add
push
add
push
nop
scas
pop
add
fsubrs
sub
nop
jno
push
pop
inc
sub
fidivrl
cmp
push
xor
jl
push
or
dec
sub
cmp
and
ss
jmp
scas
movl
lods
daa
pop
das
mov
orb
sbb
jp
in
add
mov
lods
jns
mov
sub
mov
add
jge
jge
sub
lcall
sub
cmpsl
sbb
add
push
jae
roll
cmpsb
fsubrl
aas
sar
das
outsb
add
test
inc
sti
testl
add
fisttpl
push
rolb
scas
inc
dec
push
jae
mov
out
aas
mov
sbb
mov
repnz
in
add
push
sarl
jp
addr16
and
add
jnp
push
jb
andl
add
pusha
in
xchg
pusha
loope
repz
add
add
out
imul
insb
lods
fs
js
jl
js
outsb
pusha
jecxz
push
lea
add
xor
jno
xor
mov
cmc
decb
push
mov
add
sbb
add
push
mov
lods
ret
or
pop
addb
push
test
scas
jmp
xor
jae
adc
stc
inc
test
nop
inc
test
lahf
push
dec
call
cmp
jmp
sub
fidivl
add
ss
sbb
or
mov
mov
push
ja
add
jbe
dec
mov
or
add
addl
adc
dec
cli
je
cmpsl
stos
pop
scas
out
sub
add
mov
mov
pop
push
fdivr
xchg
dec
or
test
test
jecxz
add
leave
test
inc
mov
dec
and
pop
ficoml
add
inc
xor
dec
fucomp
and
cmp
add
es
inc
repz
out
inc
adc
cld
ret
inc
or
dec
adcl
subl
dec
movsb
and
adc
dec
xor
push
stos
sub
dec
adc
cmp
dec
jmp
enter
dec
dec
and
adc
add
dec
sub
add
loop
xchg
fwait
add
out
hlt
push
mov
push
or
adc
mov
and
dec
add
lods
mov
bound
push
or
test
into
lock
xor
cmp
add
add
pop
call
out
loop
dec
data16
mov
pop
push
xor
lahf
pop
pop
sti
pusha
pop
push
test
add
push
push
and
shr
add
cmpsb
daa
jne
pop
insl
or
daa
xchg
and
rolb
xchg
outsl
add
ja
push
and
bound
ljmp
mov
gs
mov
adc
enter
xorl
mov
outsl
add
jecxz,pn
popf
ljmp
add
ljmp
or
stc
push
push
mov
scas
fs
call
xchg
inc
or
fidivrl
mov
push
xorl
add
arpl
add
push
push
adc
enter
dec
sahf
mov
fadd
test
or
ss
idivb
or
fimull
icebp
add
pop
add
push
pop
add
add
cmp
mov
jmp
adc
adc
rorb
lret
out
inc
inc
sti
aam
shlb
fidivrl
xchg
aam
lds
push
hlt
mov
push
std
out
xchg
inc
test
aad
xchg
cli
gs
jle
and
cmp
adc
or
push
movsl
rcll
pop
roll
add
pusha
sarl
sub
js
fimull
movsl
sub
imul
push
out
cmp
sub
push
pop
test
pop
arpl
sub
jmp
jg
lods
test
xchg
dec
test
rorb
inc
fildll
jmp
pop
push
xor
js
adc
cltd
jp
lahf
jmp
add
add
add
push
stos
mov
call
cmp
mov
or
sahf
jmp
sarl
dec
mov
adc
sti
or
or
das
add
jl
xorl
cltd
pusha
call
insb
xchg
test
add
xor
or
jb
mov
std
fnstenv
mov
add
add
add
add
adc
and
cmp
mov
ja
call
insl
je
daa
jmp
repnz
jnp
inc
jo
incb
and
test
sbb
incb
call
add
add
jmp
insb
pop
movsb
js
cmpb
jne
cmc
int
push
nop
push
rorb
add
jl
sub
pop
lea
push
call
mov
add
cld
clc
incb
lea
lret
push
sub
shlb
xchg
cltd
push
or
cmpsl
scas
cs
int
gs
faddl
sub
call
cmp
jbe
test
jmp
push
adc
jbe
test
mov
add
adc
mov
add
add
aad
sarb
inc
lods
in
aas
push
add
sti
lds
inc
jne
scas
lock
mov
iret
or
or
in
aas
push
rol
popf
out
jge
add
or
cmp
inc
mov
cmp
cmp
jp
push
pop
adc
jae
or
or
add
add
gs
ljmp
lock
ret
xchg
mov
pop
pushf
mov
loope
sub
lret
add
mov
ret
push
dec
sub
lds
mov
or
add
sti
mov
xchg
inc
movsl
xor
jns
sbb
pop
in
xchg
and
fwait
pop
das
sub
fbld
das
test
iret
ffreep
enter
bound
outsl
push
dec
cmp
cld
mov
pop
lcall
sub
push
addl
or
adc
cmp
loopne
mov
stos
push
xor
aaa
arpl
sbb
add
aas
loope
or
jmp
mov
mov
or
add
jmp
xor
and
pusha
cmp
cli
std
inc
push
aaa
jno
and
jp
ljmp
inc
in
add
clc
lahf
add
pop
fildl
orl
jp
mov
sub
add
js
add
sub
mov
shl
and
cmp
sub
or
jbe
inc
add
push
sbb
call
mov
je
ret
inc
call
adcl
je
ljmp
movsl
adc
clc
jns
out
mov
in
sbb
jmp
insl
out
mov
int3
sbb
lret
not
inc
inc
test
fcompl
adc
leave
push
in
fwait
and
imul
mov
add
insl
sbb
je
dec
jle
lea
mov
xchg
or
aam
or
mov
add
adc
rcll
and
adc
shll
add
inc
sub
inc
push
xor
jb
scas
les
fcomp
fldcw
inc
icebp
cs
pop
mov
dec
loop
xor
mov
fmulp
fiaddl
add
pop
pop
lret
dec
xchg
sub
sub
cmp
or
incb
std
cmp
rclb
pop
or
or
jbe
inc
inc
push
and
xor
xor
repnz
outsb
or
xchg
nop
push
cmp
jle
sub
lret
add
stc
mov
push
or
bnd
addl
add
add
add
cli
iretw
mov
push
dec
or
mov
lea
push
pop
sti
fcompl
ds
xlat
mov
out
dec
and
fidivrs
sti
jge
sub
sub
add
dec
out
mov
jbe
faddp
out
mov
inc
jmpw
outsl
add
outsb
testl
cmp
push
add
push
dec
cmp
sub
pop
mov
sub
mov
jl
add
fdiv
adc
xchg
mov
divb
jo
sbb
mov
notl
xchg
in
in
insl
and
in
mov
andl
pop
or
sbb
jne
jno
and
add
fs
fdivr
aas
jne
out
mov
add
adc
inc
pop
add
mov
daa
add
cmp
sbb
test
sbb
call
rorl
test
sbb
call
sti
or
push
lea
push
sbb
lods
xchg
test
push
cmpl
outsb
adc
inc
fsin
test
sbb
dec
test
jg
das
add
aam
adc
cmpsb
mov
sub
iret
out
into
inc
sti
fimull
mov
xor
test
stc
mov
test
nop
aam
les
pop
pop
mov
jle
xor
aas
ss
call
adc
movsl
jo
mov
sub
icebp
add
ss
mov
inc
pushf
sub
add
add
inc
aas
fisubl
neg
mov
and
mov
call
adc
and
xchg
add
xor
test
outsb
or
out
pop
fs
sub
jne
cs
sti
xchg
add
sub
add
sub
sub
cli
scas
out
je
xor
and
cmp
lods
je
add
pop
pop
sti
cld
inc
mov
jle
sub
fcompl
or
lret
pop
sti
aam
or
daa
sbb
push
adc
jns
ja
flds
je
rorl
popf
popl
inc
push
push
sub
jmp
je
inc
add
xor
jne
fdivrs
mov
sub
adc
cmc
imul
call
add
add
add
add
sub
jmp
add
sbbb
dec
jmp
in
mov
jmp
dec
mov
add
inc
adcl
adc
mov
xor
push
sub
rolb
add
add
cwtl
sbb
clts
daa
pop
mov
add
int3
inc
pop
or
outsl
mov
inc
sbb
mov
fisttpl
int3
inc
nopl
jne
mov
pusha
fisubs
adc
and
in
jge
gs
jmp
cmp
sub
sbb
xchg
xorb
push
xchg
stc
add
stc
fmull
xchg
ret
lret
dec
mov
shl
cs
jmp
add
pop
inc
fsubrs
test
pop
jmp
and
sub
xor
jne
xor
jno
cs
pop
aaa
test
fisubrl
lea
repnz
jmp
add
stos
call
ret
push
mov
test
imul
xor
shr
and
add
clc
outsl
shll
std
dec
dec
mov
icebp
mov
jmp
loop
xor
inc
sub
inc
out
adc
loop
mov
and
jle
rolb
aam
mov
shrl
mov
push
xor
jno
xor
jmp
popa
nop
add
fiadds
add
mov
mov
xchg
lea
dec
xor
lock
mov
insl
sub
push
arpl
outsb
adc
jmp
scas
pop
jg
mov
push
add
inc
push
inc
test
imul
mov
stos
add
test
inc
and
fsubl
sub
jne
mov
push
xchg
or
std
sub
jne
add
nop
incb
aaa
test
clc
rolb
es
idiv
aaa
jg
sub
xor
jl
dec
inc
add
xor
mov
xor
mov
mov
add
aaa
adcl
cmp
cli
xor
adcl
add
pusha
fwait
or
or
call
daa
shr
or
mov
or
add
add
add
add
jmp
mov
fidivs
push
dec
and
pop
dec
std
inc
cmpl
inc
inc
cmpb
pop
sub
aaa
xchg
sub
lea
or
dec
dec
sub
jns
enter
jmp
jne
mov
push
fimull
jg
or
cli
fs
adc
and
test
xor
out
insb
pop
or
add
xor
and
daa
add
cmp
dec
mov
test
je
cmpsl
call
cld
or
outsl
je
cmp
jo
outsb
stos
stos
jbe
mov
stos
sub
out
out
adc
pop
shll
loopne
jae
adcl
sbb
les
adc
sub
push
insb
inc
pushf
inc
outsb
leave
cs
add
add
add
add
dec
pop
add
adc
test
hlt
dec
mov
fst
cmp
jmp
push
xor
es
movsb
pop
mov
outsl
and
dec
sub
icebp
pop
out
and
jnp
jmp
sahf
sub
push
std
jge
ds
or
add
sub
sbb
add
add
add
add
adcl
mov
je
jg
or
popa
cld
cli
cmpsb
jne
and
push
mov
jge
xor
mov
inc
idiv
out
mov
add
mov
mov
lods
inc
clc
cmp
xor
add
cli
cld
add
add
shr
add
mov
outsl
aas
inc
addl
fs
mov
and
add
inc
in
decb
push
mov
xor
loope
arpl
dec
jo
lsl
adc
inc
inc
test
out
outsb
adc
fidivs
adc
lea
inc
idiv
mov
dec
xor
xchg
icebp
lods
inc
fimull
xchg
cmc
test
xchg
mov
dec
fiadds
adc
dec
stos
and
les
or
add
flds
mov
or
ficomps
inc
xchg
faddp
add
nop
mov
dec
sub
xor
out
fimull
pop
sub
sti
ficoml
jg
pop
xchg
jle
out
push
dec
loopne
xchg
mov
cmp
leave
and
add
pop
fs
pop
mov
xor
add
out
cmp
push
sub
or
adc
or
cmpsl
push
push
xor
call
pop
lock
adc
mov
mov
and
mov
and
sbb
je
add
jmp
movsl
js
stc
add
jb
add
push
inc
jno
out
inc
int3
and
jl
lcall
aad
jmp
scas
dec
icebp
and
push
xor
jmp
add
add
add
push
pop
stos
call
push
out
fucomp
xchg
arpl
sub
daa
mov
or
mov
cli
mov
in
icebp
es
lds
inc
pop
in
adc
shll
shr
jae
push
clc
xor
jmp
push
xor
xor
sbb
jmp
sbb
push
mov
jo
movsb
call
add
or
jge
ficomps
sbb
adc
ret
mov
addl
ret
or
call
idiv
daa
ja
add
adc
sarl
cmp
xor
add
adc
std
sbb
lret
daa
mov
loop
adc
testl
ja
and
add
add
add
push
dec
idiv
ja
scas
and
sub
mov
xor
mov
xor
loopne
stc
mov
push
cld
jl
push
jecxz
push
push
inc
cld
jg
cmp
test
aas
dec
in
pop
test
mov
or
mov
or
loopne
adc
decb
jl
rorl
call
movb
fsts
xchg
add
popf
inc
faddl
lea
or
cli
cmp
jnp
scas
mov
cli
sbb
pop
xor
dec
xor
or
test
std
incl
sti
jle
orb
std
das
sti
fnstsw
loop
fldl
push
dec
not
mov
lods
test
push
xor
jmp
add
and
dec
mov
icebp
cld
add
adc
xchg
orl
cwtl
negb
bnd
xor
jns
xor
add
scas
and
bound
outsb
xor
xchg
out
in
mov
mov
cltd
add
xchg
dec
inc
in
sub
jmp
mov
test
stos
ja
ljmp
push
add
insl
lret
das
add
dec
rolb
add
push
pusha
enter
lods
inc
in
lods
stos
outsl
mov
stc
xchg
mov
js
sahf
lods
dec
loope
out
mov
cli
xchg
jle
stc
xchg
push
hlt
mov
imul
lock
loop
mov
push
out
stos
lock
dec
mov
insl
or
push
xor
xchg
sub
add
scas
ljmp
mov
cmp
add
mov
xchg
inc
roll
inc
sub
add
cmp
cmp
sub
and
jmp
mov
mov
jns
and
fsubl
mov
divl
jp
push
outsl
mov
cmc
jne
sbb
clc
cmovbe
add
test
mov
idiv
jg
mov
mov
sub
mov
into
add
jno
test
das
jg
add
xchg
lds
lret
testb
adc
or
push
shlb
cli
je
push
enter
enter
add
jae
mov
push
fimull
js
test
xchg
add
out
jb
pop
loope
adcl
push
jg
push
or
pop
shlb
xchg
clc
pop
dec
ja
dec
mov
and
mov
push
lret
aam
lods
cld
adc
xor
pop
xchg
sub
adc
mov
pop
cli
mov
repz
pop
jge
sbb
out
jmp
add
je
sbb
mov
pop
mov
loope
adc
mov
and
inc
xchg
sub
cmpsb
and
xchg
jo
lcall
jno
inc
cmpsl
popf
aad
jl
sub
and
mov
or
xor
repnz
lods
loop,pn
bnd
out
addr16
daa
jb
pop
sub
jg
sahf
jle
add
cmc
cli
push
lea
add
fcompl
daa
add
xor
pop
and
jg
and
jb
dec
inc
cmp
icebp
stc
push
dec
mov
sbb
pop
sti
cmp
cmc
je
imul
cli
sahf
shl
or
add
push
xchg
xacquire
insl
or
adc
or
lcall
ljmp
jmp
fiadds
add
cmpsl
jg
add
or
jo
mov
add
add
add
add
aaa
popa
add
push
jb
jb
sbb
mov
push
lock
push
jmp
stos
fs
in
test
and
add
xchg
add
lods
clc
pop
daa
jno
sbb
sub
jle
add
add
add
push
je
lods
clc
out
xchg
add
sub
mov
sub
mov
xor
loope
add
icebp
ret
xrelease
push
jl
int
ljmp
or
shll
pop
ljmp
jle
xchg
neg
push
test
jbe
pop
sti
jns
cmp
xchg
mov
sti
jb
pop
adc
rclb
bswap
addr16
add
jns
popf
xor
inc
push
sub
xchg
push
stc
mov
insl
add
add
push
add
inc
clc
cli
addr16
adc
lret
push
adc
popa
xor
scas
mov
clc
leave
jne
sbb
out
sub
jne
subl
mov
mov
mov
jbe
gs
jp
adc
iret
add
add
mov
mov
add
ds
pop
or
xchg
rolb
cli
mov
cld
cs
sub
mov
clc
int
stc
add
sub
dec
mov
or
inc
fld
push
push
xor
push
sub
cmc
lret
and
inc
add
repnz
dec
out
outsb
ret
sub
fs
add
inc
add
or
fs
or
xor
add
add
orb
cmp
imulb
mov
fmulp
xor
jmp
decl
mov
jle
add
stos
cmc
es
aas
ss
stc
cmp
push
das
je
js
add
mov
or
add
clc
scas
out
gs
loope
xor
add
fcmovbe
jmp
imul
add
adc
inc
mov
je
and
xor
in
add
jo
ja
push
imul
loope
ds
sub
fldcw
adcb
xor
lgs
testl
cmp
sbbl
ljmp
andl
add
push
cmp
jge
dec
je
add
popa
mov
sbb
shl
sbb
cmp
into
mov
jmp
mov
scas
push
aas
or
ljmp
lsl
dec
inc
repnz
dec
loope
dec
and
xlat
jle
xlat
stos
or
cltd
add
pmuludq
test
ficompl
cwtl
es
in
adc
aaa
sub
incl
add
shll
sti
push
dec
mov
dec
shl
push
xor
or
lock
daa
or
adc
sbb
dec
outsb
inc
jmp
mov
scas
jne
sub
cmp
jbe
xor
add
mov
pop
jbe
std
dec
and
pop
stc
inc
jp
scas
cmpsb
scas
and
add
es
in
pop
mov
or
add
repnz
daa
mov
ss
push
mov
jmp
mov
sbb
jmp
or
call
loop
push
outsb
jns
jl
xchg
psrld
xor
loope
cmp
stos
lds
das
sub
or
movsb
mov
add
xor
in
add
mov
out
or
roll
fisubl
and
out
test
or
cmp
divb
inc
ror
jbe
insb
xchg
fs
and
inc
push
orb
add
call
mov
shl
pushl
xor
enter
sbb
cmp
dec
movsb
enter
xor
test
push
idiv
xor
cmp
add
add
incl
cmp
cltd
add
jmp
divb
push
or
pop
xchg
push
idiv
fwait
jl
mov
mov
hlt
mov
mov
pop
fidivs
orl
lock
iret
add
sub
sbb
outsb
aad
pop
fistl
fdivrs
call
push
add
add
jge
test
sub
sbb
mov
xchg
add
cld
pop
push
sti
jp
stos
outsb
vaddpd
fistl
push
add
fiaddl
or
xchg
sbb
out
xchg
push
aaa
pop
imul
cld
xor
sti
inc
and
xchg
shr
out
xor
add
stos
sub
adc
cmp
push
dec
lods
fistps
or
loope
xor
test
cltd
push
mov
pcmpgtw
jmp
jecxz
out
mov
and
push
mov
pop
aad
sub
pop
lcall
out
test
xacquire
add
fldcw
and
int
ljmp
adc
xor
xor
add
adc
cmp
dec
cmp
mov
out
out
mov
mov
and
or
in
sahf
packuswb
jmp
xor
cmp
repnz
out
aam
cld
jbe
and
or
jecxz
pop
sbb
jmp
add
add
add
push
cmp
nop
inc
add
popa
lods
arpl
jmp
jmp
adc
cli
push
lea
cli
push
xor
mov
imul
cmp
sub
mov
idiv
das
mov
or
scas
push
cld
incl
clc
dec
xor
idivl
out
lods
or
scas
inc
cmp
jmp
std
xor
add
add
ss
int
idivl
scas
stos
ljmp
sub
sysenter
adc
dec
push
and
dec
idiv
lea
xor
js
push
std
das
inc
xor
ss
dec
inc
testl
sarb
push
or
insb
pop
sti
dec
pop
sbb
push
push
ds
ds
filds
mov
jecxz
push
xlat
or
add
add
add
mov
sbb
dec
inc
in
push
into
test
xchg
sbb
sub
and
fiadds
pop
push
pop
pop
test
pop
jle
dec
push
test
dec
sbb
push
push
mov
and
decb
xlat
in
sbb
xchg
jmp
push
xlat
or
push
scas
sbb
loope
adc
ficoml
xor
and
add
sub
adc
stc
jb
mov
pop
or
stc
push
add
and
jmp
adc
sbb
test
pop
mov
pop
mov
aam
jo
loop
sub
push
and
xchg
adc
or
push
xor
mov
pop
xor
sbb
xor
enter
jecxz
call
dec
add
pop
lcall
dec
mov
inc
and
out
pusha
mov
xchg
adc
inc
xor
rolb
jo
xlat
or
push
aaa
mov
jmp
fldt
xchg
pop
or
out
fisubrl
and
test
inc
out
fisubl
and
std
mov
je
add
leave
jl
outsb
xchg
fldl2e
out
jne
cli
insb
adc
test
lahf
loop
add
out
ljmp
pop
inc
cld
cmpsb
orl
inc
clc
jae
pop
test
idiv
jmp
out
inc
stos
mov
inc
inc
mov
push
inc
mov
scas
adc
sub
sbb
cmp
movb
testl
add
test
test
in
sub
jmp
lea
sub
cltd
mov
hlt
inc
sub
ss
mov
nop
add
leave
push
cmp
or
mov
in
lea
rclb
push
sbb
mov
inc
loopne
fiadds
cmp
mov
fmuls
sub
inc
sbb
add
pusha
enter
xchg
mov
add
iret
push
std
pusha
xchg
xlat
mov
inc
stc
dec
aas
jne
dec
push
sti
out
sub
and
enter
sbb
mov
sahf
dec
jl
sahf
mov
mov
sub
dec
data16
gs
outsb
push
and
imul
xor
mov
add
add
add
add
sbb
inc
mov
pop
sbb
cltd
sbb
call
icebp
sbb
insl
std
or
div
add
sub
push
test
pop
lock
loopne
ret
mov
inc
pop
lods
loopne
out
outsb
add
dec
mov
sbb
mov
jns
adc
or
mov
jne
inc
add
add
dec
mov
or
dec
pop
cmp
push
xlat
int
and
fiadds
imul
sub
jne
push
fwait
xchg
jne
call
mov
cmp
into
cmpsl
jb
pop
stos
add
sub
inc
pop
gs
push
xor
jmp
xchg
jo
and
test
and
xor
add
xacquire
lock
sub
xor
mov
cmp
scas
js
inc
cltd
repnz
inc
add
testb
sub
mov
out
lock
pusha
xor
in
xor
mov
add
mov
jecxz
shlb
cmp
mov
xor
jl
loope
add
imul
cmp
mov
out
imul
dec
add
mov
daa
cmp
sub
ficompl
sti
into
scas
rclb
and
cmp
xchg
aam
popl
test
pop
adc
rcl
and
dec
push
adc
mov
inc
dec
jge
pusha
leave
adc
mov
dec
pminub
or
or
xchg
and
inc
rcll
xchg
ljmp
add
add
add
inc
testb
cli
aad
pop
gs
dec
jge
inc
or
in
sbb
push
dec
cwtl
out
push
out
cmp
popf
adc
xchg
mov
adc
fisubrl
sub
push
cmpsl
and
mov
cmp
dec
mov
fsts
and
push
dec
enter
fsubrl
xor
xor
fisubl
add
inc
push
jp
mov
add
xor
sbbb
in
jle
push
into
push
adc
dec
sub
or
lods
cmovp
jmp
sbb
cmc
xchg
sti
pop
mov
adc
push
test
lcall
sahf
xlat
ss
or
sbb
cmp
gs
rolb
idivl
jl
js
xchg
leave
mov
frstor
sub
and
lock
fdivr
rcrb
jmp
cmp
les
jle
inc
xlat
cli
bound
cmovo
psubq
rclb
fptan
cli
je
cmp
in
cmp
int3
cli
into
sbb
push
call
add
idiv
rep
packssdw
out
scas
or
inc
sbb
add
mov
das
orb
mov
push
sub
push
jno
pop
inc
pop
mov
sub
mov
inc
jns
scas
dec
push
loopne
arpl
inc
fs
add
add
sub
scas
push
cmp
cmp
or
je
shrb
pop
inc
mov
adc
push
adc
incb
inc
sarl
enter
ret
inc
test
inc
enter
stos
or
mov
enter
lds
loopne
adc
out
push
lcall
sbb
jo
jnp
jge
push
mov
add
test
xchg
inc
fcoms
mov
filds
fimull
mov
xchg
sbb
xor
jl
in
xchg
das
jmp
add
sub
add
sub
push
aad
adc
aam
sbb
add
add
cmp
iret
imul
add
pop
pop
adc
add
push
int3
adc
call
cmp
out
pop
inc
add
push
add
push
testl
xchg
xchg
int3
jg
jge
fs
cmp
iret
mov
and
jecxz
gs
jne
pop
sti
sub
sbb
fdivp
out
test
fs
pop
lar
jmp
aaa
test
stos
dec
sahf
inc
fstpt
add
xor
insb
and
je
test
bnd
scas
inc
int
test
lds
and
pop
dec
add
cmp
mov
pop
adc
sub
mov
iret
ss
inc
fildl
push
xor
fisubrl
push
cmc
push
pusha
scas
dec
add
adc
xor
add
in
insb
pop
lods
shl
inc
pop
mov
add
jmp
dec
and
test
fadds
adc
and
enter
ljmp
mov
das
test
cltd
xor
mov
xor
popf
cld
xor
mov
aaa
dec
and
and
out
push
cmp
lds
je
jecxz
or
pop
inc
pop
xor
push
inc
sbb
add
ds
mov
push
fiadds
aaa
test
cli
jge
fmull
sti
lret
aas
fmuls
cli
jl
ja
imul
jne
bound
sti
fs
mov
pop
testl
pop
jmp
dec
inc
or
cmp
mov
fidivl
jmp
push
adc
ret
std
xchg
push
inc
ret
or
add
inc
add
jne
inc
jns
add
push
into
push
dec
push
notb
xor
and
xchg
fcom
cmp
lock
cvtps2pd
shrl
fwait
or
inc
stos
enter
add
test
sbb
push
sbb
and
shl
sub
adc
daa
incl
gs
inc
mov
mov
add
xchg
push
add
xor
cli
xchg
enter
in
insl
inc
push
shl
jl
vaddsubpd
ret
jbe
cmpl
add
cmpsl
ljmp
leave
out
icebp
popf
xlat
cli
push
xlat
test
adc
mov
hlt
insb
xchg
daa
mov
nop
fidivrl
adc
and
aam
fdivrp
mov
sub
imulb
call
add
add
add
push
test
sub
adc
xchg
es
rcll
jmp
pop
pop
sbb
xchg
inc
lods
mov
pop
push
stos
inc
push
pop
or
movb
pop
outsl
sbb
fdivs
push
mov
pop
test
cltd
cmp
icebp
add
jmp
ljmp
add
add
add
in
fidivrl
push
add
clc
push
dec
insb
arpl
stos
mov
xlat
add
cli
clc
imul
add
imul
cmove
mov
scas
cltd
hlt
and
mov
out
jns
mov
mov
jmp
mov
or
fnstsw
jne
sbb
push
leave
sti
test
adc
sahf
decl
mov
add
add
add
add
or
gs
adc
pop
push
jne
ss
push
nop
jmp
cmp
repnz
jle
leave
cmc
mov
sbb
sti
out
ficoml
xchg
inc
or
dec
inc
loop
addb
ret
cmpl
stos
push
sti
or
lret
inc
inc
fnstenv
jmp
add
xchg
xor
xlat
out
lret
add
mov
pop
pop
shl
push
inc
insl
pushw
pop
pop
clc
xchg
adc
add
xor
sbbb
or
imul
xchg
cmp
xor
shl
add
sub
push
xor
add
out
lret
add
and
fcmovbe
loope
inc
insl
or
cld
xchg
add
fstl
add
bnd
fnstsw
lcall
out
inc
fwait
call
outsb
das
add
push
push
clc
call
push
xor
lahf
and
cli
fisubs
or
fdivrp
push
iret
or
es
insb
push
xor
out
shll
testb
aad
jne
addr16
fsts
add
push
xor
mov
sbb
xor
jmp
sysret
pop
cmp
push
xor
push
mov
cmp
sub
roll
add
cmp
inc
je
inc
adc
sbb
sbb
add
cmp
xchg
cld
mov
js
sti
xor
divb
pop
mov
jns
sub
int
push
and
or
add
jmp
loopne
cmovg
icebp
dec
cmp
inc
add
inc
adc
sbb
xor
xor
hlt
xchg
cld
mov
add
sub
xor
hlt
xor
leave
jns
in
xor
cmovbe
adcl
mov
add
jns
mov
in
lds
and
incl
les
dec
pop
jno
push
fstps
incl
add
or
ss
in
jle
fdivr
incl
cld
xchg
lcall
inc
daa
or
xchg
ret
lds
and
ds
adc
push
sub
cmp
clc
out
out
dec
pop
fisubrl
mov
test
add
xor
jns
cmc
test
jb
mov
add
cmpsl
mov
in
test
movsl
cli
cmp
rcrb
jmp
scas
inc
mov
inc
hlt
pop
mov
adc
int
roll
out
enter
or
not
pop
add
cmp
fs
xor
jp
les
pop
mov
pop
mov
fdecstp
roll
add
add
lret
inc
jnp
add
add
and
xor
int3
and
mov
bound
adc
xor
rcrl
inc
aad
bound
jb
clc
int3
cmp
pop
das
je
jmp
add
lahf
sbb
leave
inc
fstpl
shrl
sarb
inc
lea
divb
stos
call
mov
add
add
add
add
add
fdivrl
das
and
icebp
or
sar
rorb
jmp
or
idivl
xor
and
pushl
mov
inc
inc
mov
lcall
adc
mov
ret
lcall
mov
jne
rcrb
add
dec
push
push
js
xor
mov
idiv
imul
mov
add
mov
mov
mov
pop
mov
mov
or
jo
nop
adcb
jae
push
iret
jns
repnz
cli
je
mov
or
out
jle
in
mov
shr
jns
push
fpatan
test
addb
adc
lock
lahf
sahf
cli
scas
mov
jg
sahf
mov
or
in
negb
jp
add
xchg
jg
cmp
adcl
add
rcrb
add
repz
add
adc
push
daa
inc
sbb
lahf
mov
add
pop
imul
adc
sub
or
int3
rolb
sti
xor
inc
ds
pop
fdivr
lret
ljmp
add
leave
jmp
push
pop
mov
add
add
cmp
test
xchg
xchg
addl
aad
jb
mov
call
add
test
in
mov
push
adc
movsb
xor
dec
cmp
mov
lods
push
shld
data16
pop
inc
clc
xchg
jge
rol
arpl
xor
out
mov
out
push
or
add
or
lret
cli
aad
adc
adc
lea
xor
sbb
cli
scas
arpl
jno
add
in
xor
insb
push
cli
mov
lds
jnp
std
jo
dec
ja
lds
mul
or
pop
push
add
inc
dec
and
lds
jg
mov
cmc
dec
xor
in
arpl
mov
lods
add
inc
inc
fiaddl
inc
lret
int
adc
adc
add
inc
push
insb
packssdw
sti
out
and
div
and
pcmpeqw
sti
decl
outsb
testl
shl
ljmp
xor
mov
xor
pop
pushf
and
int
testl
leave
decb
imul
testl
add
test
decl
mov
add
incl
insb
bts
scas
add
push
xor
int
adc
cwtl
cld
push
movb
in
dec
gs
loope
iret
lret
cli
fmuls
sbb
adc
mov
cmc
pushl
ja
adc
test
cli
push
inc
add
daa
mov
je
adc
pop
and
jl
lahf
push
std
mov
mov
aad
mov
int3
mov
mov
int
out
into
mov
dec
push
sbb
pop
pop
sbb
sarl
xchg
jecxz
xor
adc
jne
adc
pop
in
ret
fmulp
leave
jae
add
or
add
xor
jno
lock
xchg
adc
add
mov
add
add
ja
dec
jne
sbb
cmp
lds
and
js
push
jo
sbb
lds
adc
stc
cmpl
imul
add
jmp
add
mov
add
shl
or
xor
xor
inc
call
adc
inc
cmp
xchg
push
testb
fldenv
mov
dec
cmpb
jo
ljmp
data16
cmp
pop
sub
dec
and
xor
leave
je
stos
mov
mov
jmp
stos
or
push
fstl
and
mov
jbe
adc
xor
aam
fadd
dec
pop
leave
test
inc
stos
movb
xor
addl
outsl
jnp,pn
dec
sub
push
inc
outsb
add
xor
pop
ret
inc
aam
or
xor
popa
xchg
add
clc
mov
and
jge
add
mov
add
cmp
mov
mov
adc
jge
push
lods
fisubl
sub
jne
xor
loopne
lds
cld
xlat
lds
pop
cmp
add
jge
notl
xchg
test
jge
mov
jmp
dec
push
push
fnstcw
in
call
add
or
or
xor
incb
push
inc
pop
or
lret
icebp
mov
sbb
cli
cld
je
dec
enter
sti
je
loope
ffreep
addl
add
add
add
add
mov
lods
mov
call
lret
inc
add
add
cld
in
mov
mov
jb
push
xor
push
push
stc
mov
cmp
jmp
loop
cld
int
jmp
add
and
ret
call
jne
pop
push
push
jo
cld
test
repnz
shll
jp
jecxz
jo
cld
add
gs
ret
push
adc
icebp
shll
mov
sti
inc
cmp
test
xor
xor
mov
daa
jmp
call
or
xor
sub
adc
out
cs
hlt
inc
xor
inc
jmp
sbbl
bound
sti
mov
fdivs
push
cmp
test
pop
stos
lock
push
xor
adc
inc
cli
jb
or
aaa
mov
cmp
fisubs
xor
inc
jmp
xchg
pop
sti
cmp
ror
inc
xor
mov
mov
orb
mov
in
std
pop
or
add
cmc
jmp
iret
add
push
pop
divl
xor
aas
sbb
mov
fisubl
xor
jne
aaa
iret
push
jg
adc
jg
or
mov
cmc
pushl
sub
add
int3
inc
ljmp
scas
push
stc
jae
incl
mov
jp
sbb
test
mov
stos
jecxz
jne
lods
sar
sub
outsl
fidivrs
push
mov
test
sar
dec
xlat
repnz
jle
out
jbe
lea
mov
std
fstpt
mov
int
dec
cmp
test
mov
or
pushf
add
dec
mov
xchg
repnz
push
fadd
imul
test
out
dec
pop
and
cmp
inc
cmp
pop
and
add
pop
divl
mov
mov
inc
add
lea
fisubrl
scas
push
lcall
outsb
pop
enter
mov
mov
or
fsubp
add
mov
leave
lods
add
loop
fwait
das
fidivl
push
sub
add
mov
dec
movsl
mov
push
test
sbb
pop
test
fnstcw
call
outsb
fldcw
les
pop
test
outsb
cmp
mov
pop
inc
pop
cmpsl
bound
xchg
pushl
adc
sbb
xor
adc
sub
jmp
pop
sti
hlt
bound
sti
hlt
pop
enter
mov
dec
out
push
xor
pop
xor
add
push
mov
mov
xchg
mov
push
jb
jae
jo
cmp
inc
loope
outsb
jo
nop
sub
outsl
mov
cld
fisubrs
mov
pop
je
lret
incb
mov
lret
testb
xor
mov
xor
mov
xor
or
add
jo
cmp
loopne
ljmp
scas
inc
cmp
fisttps
xor
xchg
cmpsb
adcb
mov
lods
adcb
jnp
sti
lods
jnp
jno
loopne
push
and
ljmp
push
mov
sub
push
push
add
or
jp
inc
lret
test
cli
incl
add
jmp
or
sbb
hlt
adc
mov
adc
or
test
cmp
fcmovne
jg
push
lea
pop
inc
rclb
incb
xchg
sbb
mov
ret
xor
add
push
push
test
xchg
adc
jg
imul
pushf
add
jl
out
sbb
in
notl
jp
add
push
leave
cmp
xor
hlt
fldt
gs
mov
loop
pop
mov
insb
subl
cmpsl
jecxz
push
outsb
lods
mov
add
adc
outsb
xor
xor
sub
push
addr16
xchg
push
out
ret
or
test
mov
sbb
ret
add
add
mov
cmc
sbb
mov
or
movsl
add
push
jmp
in
cli
and
cmp
sub
inc
cmc
popf
movsl
add
push
mov
cltd
cs
fsubl
popf
call
mov
cmp
jecxz
push
or
sub
inc
int
arpl
add
add
sbb
enter
and
mov
mov
or
inc
mov
mov
lea
sti
mov
push
js
xchg
aad
cmc
jne
cmp
mov
fsubrl
rcr
mov
mov
mov
and
test
jae
and
cmc
jne
cmp
push
out
aaa
adc
xor
add
mov
out
fs
mov
xchg
or
jge
mov
hlt
jmp
jbe
arpl
aas
adc
int
cmc
inc
add
inc
adc
imul
mov
xchg
push
aaa
lahf
xor
divb
jp
aas
fadds
jge
out
into
lock
add
add
lock
lret
inc
enter
and
jge
cmp
out
je
push
mov
sti
add
out
je
sahf
jb
imul
les
aam
or
push
repnz
hlt
sbb
outsb
andl
dec
push
jge
lds
aad
loop
xor
pop
dec
out
es
sub
dec
mov
sub
and
aas
lock
nop
push
into
mov
add
add
add
jmp
stos
stos
jmp
insl
aad
aam
or
mov
mov
jmp
test
or
jl
mov
in
sti
pop
lods
cwtl
add
xchg
mov
mov
int
push
mov
adc
fiadds
pop
push
f2xm1
in
push
dec
enter
mov
ret
ret
sarb
mov
jp
add
pusha
push
mov
add
push
cmp
fiaddl
into
push
xor
cmp
scas
dec
sbb
dec
sub
mov
lods
inc
std
inc
icebp
addr16
add
jl
lea
adc
sub
and
jo
push
aaa
test
stos
push
iret
scas
mov
jle
js
cli
jb
or
pusha
or
adc
lods
rclb
add
push
mov
cli
cld
dec
sti
hlt
inc
mov
or
xlat
cli
push
enter
nop
mov
add
cli
xor
inc
aam
mov
cmc
pushl
mov
fmuls
cmp
mov
cmc
incl
jecxz
out
inc
jl
in
add
pushl
or
jnp,pn
jmp
repnz
popf
add
insl
or
jne
mov
pop
jecxz
add
cmp
int3
cmc
jmp
test
mov
repz
nopl
hlt
shrd
ljmp
leave
jmp
cli
movsb
loope
jg
js
push
xchg
cli
cli
jl
stos
sbb
ljmp
fimull
add
add
add
add
test
push
ljmp
adc
inc
xor
mov
sarb
mov
in
or
aas
cmp
in
cli
mov
sti
cld
in
pop
add
adc
fidivrl
sti
jmp
dec
cmp
imul
insb
push
aas
mov
js
or
jp
or
fdivrs
mov
cld
add
in
or
ret
scas
adc
sti
mov
mov
movsl
lcall
stc
mov
loope
mov
inc
gs
sub
xor
jbe
cmpsl
mov
mov
stos
cmp
in
and
mov
xchg
cmp
jle
jmp
inc
enter
jbe
outsb
inc
imul
ljmp
mov
mov
add
cli
pop
cmp
imul
inc
filds
mov
aad
cmp
je
mov
cli
pushf
pop
test
adc
jg
sti
xchg
ljmp
sub
call
add
xchg
call
test
insb
and
sub
and
test
jmp
imul
adc
cmpsb
add
jp
dec
or
cs
cli
mov
xor
add
mov
and
rclb
push
jmp
cmc
test
xor
vpor
inc
sbb
je
sub
jne
stos
repnz
xor
loop
lds
fbstp
enter
orl
jmp
inc
cmp
add
add
add
add
add
cmp
lcall
popf
cmp
cmp
add
xor
cli
ljmp
mov
jo
jmp
or
daa
test
decb
int3
cmp
mov
test
mov
call
inc
insb
inc
sbb
ss
cmpsb
jg
push
cltd
sub
call
out
push
sbb
xor
add
xchg
jp
repz
mov
ljmp
jg
jns
jno
mov
jns
mov
call
add
dec
sahf
andb
call
jp
xor
pop
xchg
xchg
jmp
adc
add
xor
icebp
push
cmp
fmull
xor
ljmp
push
pop
cmp
add
in
push
fwait
jne
mov
dec
xor
adc
std
hlt
icebp
push
cmp
fdivl
xor
adc
sbb
jmp
add
inc
scas
jae
outsl
xor
outsb
insl
mov
outsb
mov
mov
cmp
incb
ds
scas
pushl
sbb
pop
inc
mov
pop
jo
push
sti
jno
add
dec
add
sub
jb
dec
mov
ja
dec
shll
push
out
ja
push
xorl
push
scas
ja
push
js,pt
push
or
stos
push
dec
jns
push
mov
stos
push
stos
js
push
and
push
in
stos
push
pusha
jae
push
dec
jae
push
in
outsl
stos
push
xorb
jb
push
pop
jge
dec
sti
jl
push
call
jl
add
push
mov
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
cmpb
or
sub
cmpb
cmpb
sub
dec
sub
aad
cli
xor
cli
xor
ljmp
cmpb
mov
jl
xor
jnp
xor
jb
xor
add
add
add
add
xor
jo
xor
push
out
push
mov
push
pop
add
fistpl
stc
enter
and
pop
add
std
pop
add
lret
mov
ficompl
dec
aad
add
int
add
lds
or
push
add
ficoml
push
xlat
decb
xlat
incb
xlat
scas
mov
xchg
std
add
cld
add
add
clc
push
push
lea
dec
dec
mov
adc
inc
lods
or
dec
mov
or
cmp
push
and
and
jo
pop
and
add
jb
add
pop
add
push
pop
xor
sbb
pop
cmp
stc
stc
adc
pusha
fdivs
es
and
fsubrl
imul
and
add
add
add
mov
daa
inc
jle
stos
cmp
dec
mov
add
cmpsb
add
mov
add
mov
add
cmpsb
add
scas
cmpsb
add
scas
cmpsb
add
scas
cmpsb
add
les
add
ljmp
push
mov
subl
roll
sub
mov
dec
pop
mov
push
sbb
sub
add
subl
push
test
sub
xchg
sub
xchg
sub
subl
fwait
subb
inc
mov
push
js
stos
push
notb
push
adc
stos
push
sbb
stos
push
mov
xchg
stos
push
mov
xchg
stos
push
inc
xchg
add
sub
or
xchg
add
push
cmp
mov
add
cmp
xor
repz
pop
push
fwait
jecxz
mov
data16
and
mov
call
testl
xor
add
add
adc
dec
push
adc
mov
cmp
adc
imul
clc
sub
mov
pop
adc
or
sar
mov
into
mov
and
mov
push
str
adc
sti
xchg
jno
test
ficompl
mov
mov
les
inc
clc
mov
inc
add
jns
dec
adc
and
or
stc
inc
pop
das
push
add
divl
pmaxub
dec
out
add
cmp
xchg
or
loop
incl
mov
adc
shr
test
push
mov
add
in
xor
mov
mov
lcall
pop
add
mov
loope
cmpsl
jmp
mov
aaa
xchg
dec
cmp
in
add
xor
aaa
sarl
ret
lret
adc
mov
sub
or
cwtl
frstor
mov
aam
sub
inc
aas
jno
xchg
in
lock
add
adc
cli
jb
test
fs
lock
call
mov
cli
jo
psubq
mov
xchg
insl
mov
cli
jo
mov
xor
mov
insl
lret
sti
ret
pusha
add
pop
in
insb
dec
stos
cli
mov
aas
xor
jmp
pop
jno
imulb
pop
pop
mov
add
mov
sbb
lods
push
xor
jmp
push
push
add
mov
jmp
sub
xor
xor
push
call
lcall
cmc
xor
mov
idiv
add
push
inc
testl
xor
stc
mov
mov
mov
mov
push
xchg
add
out
or
sub
xchg
roll
lea
dec
inc
test
adc
mov
mov
mov
std
pop
push
add
mov
mov
add
add
add
add
les
adc
xchg
jno
cwtl
mov
ss
das
lea
gs
push
adc
shlb
aas
add
lea
jno
add
xchg
jmp
push
xchg
inc
or
add
push
xchg
in
fimull
mov
mov
mov
push
mov
push
lock
shl
pop
sti
push
mov
jle
std
add
adc
or
xor
add
in
inc
sbb
push
mov
sbb
dec
sub
out
jae
sahf
push
cmp
push
and
scas
out
fiadds
in
mov
sti
mov
pop
ljmp
sbb
adc
push
jb
xchg
inc
gs
xorl
add
rorb
testb
inc
cltd
sbb
mov
or
or
sub
inc
ljmp
adc
jo
icebp
rorl
jg
push
mov
div
fsubrl
add
mov
inc
cmc
fsincos
sti
jo
test
xor
xchg
mov
imul
push
add
leave
jle
fldenv
ss
adc
sti
mov
xchg
sbb
bound
mov
cli
sahf
iret
mov
xchg
iret
test
jne
cwtl
and
hlt
test
pushl
insl
push
mov
xor
lds
cmc
jmp
xor
add
add
add
movsl
test
inc
sub
cmp
add
js
inc
hlt
cmp
cmp
stc
sub
add
mov
jg
add
inc
movsb
xor
add
pop
cld
cmp
push
xchg
cli
js
scas
add
sqrtss
xchg
decl
inc
mov
jmp
ljmp
and
or
test
add
in
or
add
push
popa
jg
aad
notb
outsb
jno
dec
push
in
lret
sar
pop
daa
mov
arpl
mov
aad
add
jg
sbb
jmp
lret
sti
xchg
jns
inc
loope
mov
test
cmp
cli
jbe
lds
xchg
sahf
push
jne
xor
push
sbb
lea
add
cli
xchg
fimull
and
movsl
pushf
mov
andl
inc
sbb
cbtw
dec
lahf
dec
fiaddl
mov
rcrl
push
push
repnz
xor
stos
mov
pop
inc
pop
movsb
lahf
inc
adc
dec
rcrl
xchg
dec
daa
sbb
add
or
mov
add
add
add
add
cmp
rorb
add
add
shlb
repnz
jae
cmp
retw
sbb
xchg
pop
rclb
sub
push
xor
out
loopne
inc
mov
mov
insl
pop
sub
dec
and
sub
push
xor
pusha
inc
addb
pop
jo
cltd
and
cli
je
push
sti
push
clc
jmp
addb
push
add
ficompl
cwtl
jo
rorb
idivb
dec
leave
jb
push
dec
gs
aaa
cmp
rorb
sti
jb
cmc
pushl
out
js
cmp
cmp
mov
in
cmc
cmp
out
dec
shufps
ljmp
mov
push
movsb
js
jle
cmp
cli
ljmp
lods
jnp
mov
int
imul
add
add
add
icebp
idiv
daa
in
das
cmp
out
jecxz
movsl
or
cmc
jmp
js
out
test
test
test
jo
jge
cld
les
mov
int3
dec
sar
jbe
lds
adc
aaa
dec
cmp
jle
push
sar
dec
mov
fistl
xor
ds
dec
add
xor
sub
jl
loopne
fsubs
orb
pop
clc
addb
dec
in
repnz
xchg
push
jne
or
add
jge
adc
cli
push
ret
or
lret
mov
dec
add
adc
jo
mov
xlat
fwait
pushf
iret
mov
pushf
rcll
sahf
mov
adc
jge
cmp
add
cwtl
iret
xlat
imul
outsb
mov
inc
or
rcrb
push
xchg
dec
push
cmpsl
movsl
in
jmp
in
push
sbbb
or
lret
mov
lods
or
add
in
lock
call
push
and
je
cs
add
add
add
cmp
out
jmp
fs
xchg
cli
rcr
pop
cmp
hlt
punpckhdq
adc
sub
fnstsw
and
mov
into
pop
sti
mov
adc
adc
add
cli
cli
jbe
lcall
leave
repz
cmpb
rclb
cwtl
std
lret
decb
push
cli
mov
popa
cmp
mov
add
leave
add
into
xchg
incb
jns
mov
mov
or
jl
ljmp
cs
js
jae
adc
call
test
mov
clc
lods
xor
scas
mov
shlb
rcl
divl
mov
clc
lods
test
push
push
dec
xchg
inc
add
sub
add
sbb
ret
push
mov
jae
das
dec
or
outsl
ljmp
mov
sbb
and
shll
cmpsb
jl
adc
xchg
sbb
mov
dec
or
scas
jns
push
aaa
fsubrl
pop
fxch
jle
xchg
xchg
dec
pop
faddl
add
mov
outsb
insl
stos
into
pop
sahf
mov
iret
je
and
roll
add
je
hlt
jmp
jb
lea
out
pop
sar
fimull
sti
inc
lahf
repz
push
xor
int
sub
int
call
xorb
call
rcl
bound
lret
push
rolb
add
sbb
add
mov
xor
lods
rolb
adc
jmp
sarb
lods
test
rolb
fs
es
mov
pop
sbbb
rolb
lock
shr
cmp
add
test
add
xchg
lret
add
add
in
negl
add
push
lahf
andl
push
das
ret
clc
push
xor
add
sub
rcrl
bound
inc
mov
push
fwait
je
addb
dec
and
or
jg
insl
cwtl
add
jbe
mov
adc
add
add
std
xchg
pop
adc
add
mov
add
xchg
nop
push
in
adcb
sar
xchg
lea
jle
xor
xchg
inc
xor
cmc
xchg
mov
daa
mov
cmp
adc
mov
xchg
test
into
lds
or
dec
sbb
jle
pop
iret
imul
adc
bound
popw
pop
adc
fistl
dec
adc
xor
xor
push
dec
xor
lahf
sub
jmp
add
dec
push
jo
xor
addr16
sub
cmp
rcll
sbb
push
cmp
pop
ror
sbb
fiadds
inc
xchg
stc
stc
movsb
lock
and
hlt
adc
addr16
movsl
aaa
js
mov
push
xchg
mov
sub
aaa
or
xchg
pop
jno
sbb
sub
ficomps
xor
loop
or
sub
xchg
push
icebp
ret
dec
adc
ss
hlt
lods
jb
out
or
popa
arpl
jle
cs
cmp
dec
stos
jp
cmp
lods
sbb
add
jmp
xor
jae
mov
inc
inc
or
inc
jno
jnp
scas
mov
xor
push
xor
iret
frstor
inc
sbb
lock
inc
push
scas
lods
inc
fldl
lea
jmp
imul
imull
push
xchg
test
sahf
inc
xchg
adc
cli
test
adc
push
xor
es
add
jmp
ja
adc
adc
shrl
adcl
out
xchg
adc
dec
lods
mov
sub
adc
lahf
xchg
outsb
repz
rorb
lea
jecxz
jmp
jbe
xchg
add
out
xlat
cwtl
cli
add
cmpsl
mov
data16
jno
sti
outsl
gs
xor
insl
stos
sti
lahf
gs
incl
test
sti
jg
or
mov
gs
pop
gs
mov
data16
add
cs
mov
add
inc
rcll
stc
lret
mov
loopne
imul
insl
sti
push
insb
dec
jmp
add
pop
inc
hlt
xor
test
call
dec
lods
jmp
mov
js
mov
xchg
stos
or
jge
jns
jmp
in
lret
cli
orb
dec
mov
dec
aaa
xor
mov
aam
cli
mov
pop
add
and
add
repnz
inc
incb
out
cli
xchg
adc
add
add
adc
fmull
mulb
xor
push
aaa
adc
jbe
add
das
test
int3
lds
mov
push
jge
sbb
mov
push
add
lock
add
jo
push
push
xor
jnp
xchg
pop
sub
xor
ljmp
add
lods
jmp
mov
ljmp
enter
gs
inc
push
cmpsl
sub
inc
insl
push
pushl
and
nop
call
jg
das
add
push
pop
bnd
or
cli
jmp
scas
hlt
testl
mov
mov
push
add
test
add
test
sub
mov
jmp
add
add
add
push
xor
inc
and
jbe
aaa
fwait
mov
mov
mov
cli
mov
fwait
mov
mov
jle
mov
dec
cltd
mov
cltd
stos
les
mov
test
mov
cmp
dec
in
sar
incl
inc
dec
call
lods
je
sub
test
add
imul
js
rcrb
test
or
shufps
cmc
call
and
inc
call
mov
jns
fnstsw
adc
cmp
jmp
mov
insl
clc
call
ja
push
shlb
jmp
xor
adc
push
adc
je
add
int
dec
mov
es
cli
mov
cmpsb
movl
comiss
mov
jae
pop
cmp
push
add
sti
mov
sub
adc
jnp
shl
jp
push
xchg
xor
adc
pop
les
out
fsin
inc
sbb
stc
scas
xlat
inc
xchg
incb
add
push
lret
xchg
add
pop
in
xor
int
fcmovb
imul
xor
or
cmp
inc
or
mov
dec
pop
inc
test
inc
add
icebp
call
sbb
nop
rorl
push
les
cld
daa
jo
jl
das
pop
jmp
or
int
xor
add
lret
fbstp
scas
aad
push
mov
xor
or
or
stos
add
jae
test
lcall
pop
pop
lea
cmp
jae
roll
dec
aam
lea
dec
add
mulb
aad
cli
insb
adc
xchg
test
inc
jo
jo
cmp
jbe
add
mov
cli
mov
cltd
lea
jmp
xchg
xor
inc
loope
or
xor
xor
xchg
decl
xchg
sti
cli
hlt
fidivrs
adc
push
mov
cmc
jmp
add
jg
mov
xorb
push
xor
std
add
jg
loop
insl
das
add
stos
clc
dec
push
add
inc
lea
add
add
add
cli
jno
js
dec
jmp
cmp
inc
js
cmp
filds
adc
jnp
lret
outsb
pusha
mov
add
xor
add
nop
pop
clc
std
popl
inc
mov
pop
rcll
repz
jg
dec
call
and
ss
shlb
jnp
popf
xor
mov
xor
cli
xchg
jle
add
pop
mov
or
pop
add
aam
vorps
jae
push
ret
mov
pop
ret
dec
jae
inc
int
cli
andl
xchg
decl
cwtl
mov
add
mov
pop
ret
jno
pop
adc
cli
adcl
dec
les
clc
into
dec
das
xchg
xchg
decb
add
mov
adcb
outsb
mov
mov
movsl
add
ljmp
xor
nop
int
loopne
cwtl
add
pop
or
pop
orb
adc
call
pop
push
xor
cld
push
hlt
call
push
xchg
xor
add
cmp
ret
fldt
add
lcall
push
xor
cld
dec
cmp
cmc
into
call
dec
hlt
incl
push
xor
inc
jmp
pop
hlt
jmp
jo
inc
nop
subb
adc
in
xor
jmp
aas
jo
cmc
push
shrl
in
add
xchg
xor
inc
clc
push
sbb
xchg
lds
lcall
dec
push
es
sbb
adc
mov
fidivs
inc
add
es
test
and
inc
mov
and
add
and
cmc
cs
push
push
rcrl
jmp
mov
add
sbb
add
lcall
adc
sub
dec
mov
pop
jno
adc
repz
jmp
xor
dec
or
call
xor
ds
ja
outsb
and
loop
fs
in
cli
jg
jmp
adc
push
add
pop
or
sbb
mov
mov
jg
sbb
push
xchg
cmp
add
add
add
pop
adc
cmpsb
testl
subb
stc
add
decb
int3
test
sti
add
push
add
push
add
push
or
jbe
push
cwtl
popa
push
xchg
out
add
jae
mov
repz
mov
lods
add
movsb
out
stos
sub
add
es
out
enter
xor
movsl
andl
and
lock
add
iret
rolb
or
xor
jnp
leave
adc
xor
mov
push
mov
call
push
das
jmp
mov
jmp
mov
cmpsb
insb
clc
mov
loopne
rol
test
push
pop
mov
imul
aam
xor
cmp
push
xor
fsubrl
add
arpl
js
lcall
pop
fstl
xor
jmp
mov
push
fs
push
test
push
xor
pop
repnz
mov
mov
scas
sbb
xor
rorl
or
cmp
cmp
sbb
pop
xchg
xor
filds
add
bound
dec
adc
pusha
and
mov
mov
inc
lds
out
pop
jno
jmp
adc
lcall
out
in
jb
jmp
dec
or
ret
adc
out
decl
adc
mov
jmp
and
add
sti
pushl
scas
clc
or
add
ja
je
daa
lds
aam
out
decl
xchg
mov
jnp
cmp
adcl
jne
mov
loope
inc
lds
sub
xor
fwait
mov
pushw
es
or
jae
push
cld
add
jge
inc
push
jno
nop
adc
mov
cli
mov
mov
add
add
cmp
push
and
and
xor
fsubs
push
lret
pop
pop
pushf
rolb
push
inc
sbb
xchg
mov
mov
nop
jb
cli
mov
popl
add
rolb
ret
cltd
rcll
aaa
xor
mov
push
cli
loopne
lock
pop
inc
ljmp
add
add
add
add
cld
add
into
div
mov
dec
push
push
cmp
push
ret
xor
push
xor
dec
mov
mov
shlb
xchg
xchg
mov
mov
push
mov
sbb
das
xchg
mov
shlb
nop
xchg
mov
mov
cltd
sub
dec
loopne
testb
test
fsubrl
arpl
jb
adc
inc
js
add
cwtl
sub
push
in
insl
inc
mov
adc
xor
inc
add
xchg
dec
rclb
pop
cmpsb
stos
push
insl
inc
test
xchg
in
inc
out
ss
add
adc
and
xor
lods
scas
sub
mov
jg
out
adc
push
add
sti
out
xlat
outsb
pop
stos
pop
cmp
jno
lea
add
inc
jnp
add
sbb
out
add
mov
cli
sub
mov
ja
inc
and
mov
adc
xorl
pop
mov
loop
dec
mov
xor
cmp
mov
jecxz
adc
sub
or
dec
and
xor
shrb
add
mov
jge
adc
mov
jne
xchg
std
xor
into
cld
scas
jns
push
ret
push
mov
or
mov
call
jns
mov
push
mov
push
stos
orb
and
les
or
cld
push
jl
xchg
repz
push
dec
mov
push
push
xchg
add
cmc
mov
add
dec
lods
push
lcall
push
xchg
sbb
sub
dec
lods
inc
int3
int3
sbb
lret
out
loop
mov
fldenv
jno
iret
in
inc
fldenv
and
push
add
mov
sub
in
mov
push
stos
inc
mov
mov
push
mov
add
xchg
jb
add
out
push
loope
push
imul
push
or
in
push
in
push
and
je
sub
adc
xchg
cli
jno
imulb
aad
es
jge
and
mov
xor
jmp
lcall
cmp
adc
sub
add
mov
and
push
cmp
add
push
and
add
je
jne
call
test
mov
loope
dec
mov
insb
lea
xchg
sub
mov
inc
jmp
push
stos
test
fdivrs
jno
lock
pushf
enter
push
in
add
test
or
add
mov
outsl
mov
add
out
incl
sarl
push
ret
adc
lock
jg
js
inc
sub
jne
shlb
out
sti
mov
cmp
out
jmp
xor
push
pop
and
adc
xor
in
add
inc
fdiv
sti
das
notl
inc
mov
inc
ret
add
jp
incl
add
push
popf
push
push
jle
lret
mov
mov
push
push
inc
and
adc
push
pop
stc
xchg
pop
mov
jmp
jle
imul
dec
jne
or
test
inc
push
or
aaa
add
add
jl
cmpsb
jg
stc
mov
adc
jg
int
add
push
mov
push
mov
add
xchg
and
lods
addl
mov
adc
stc
push
xor
add
sub
pop
mov
jnp
in
xchg
xchg
push
pop
jp
aaa
push
cmpsb
stos
stos
ret
mov
and
cs
jns
mov
xchg
xor
pop
movsl
stos
stos
ret
mov
fisubrl
add
add
add
add
xor
cli
scas
test
push
xor
xorl
push
dec
andb
stos
cmp
ret
cmp
xchg
jmp
mov
sub
push
mov
add
jns
sub
xchg
and
jmp
shlb
push
inc
lock
mov
shl
ret
jmp
mov
xor
sub
add
js
jmp
loop
ljmp
fdivr
mov
call
cli
cmpsb
in
fildl
push
mov
in
push
fs
cli
xchg
mov
imul
lcall
cs
addl
jmp
mov
add
sub
std
addr16
cmp
sti
mov
inc
or
add
mov
sbbl
mov
add
ret
ret
xor
and
lea
push
js
jne
adc
idiv
out
jae
and
mov
push
faddl
inc
clc
fwait
ss
retw
mov
ficoms
cmc
mov
push
or
iret
add
mov
lods
rcll
dec
sbb
jl
sahf
dec
leave
xchg
xchg
push
ficompl
fwait
dec
push
mov
dec
pop
mov
add
push
and
push
mov
sub
cmpl
ds
jp
insl
jns
push
jp
dec
jmp
lock
add
mov
xchg
gs
movsl
insl
fdivrp
orl
je
add
inc
and
sbb
xor
insl
loop
fsubrl
in
push
pop
cmp
push
fldl
das
jmp
xchg
das
jmp
or
xlat
push
jp
les
int3
paddq
call
add
xor
add
shrl
ret
jl
mov
or
add
jbe
aaa
jne
test
lods
add
push
xor
push
aam
les
aam
dec
jmp
test
jbe
dec
test
xchg
ljmp
in
mov
jmp
inc
mov
insb
push
pusha
call
adc
je
add
and
pop
push
pusha
call
add
adc
je
bound
in
adc
push
aas
shr
sti
cmp
call
fs
je
xor
lods
das
cmp
std
adc
xor
out
pop
jns
add
sub
fimuls
jne
dec
push
cwtl
xchg
pop
lds
pop
xor
sti
test
aaa
sbb
add
jne
loop
adc
add
out
push
imul
mov
add
xlat
sub
enter
hlt
add
sub
divb
cwtl
popf
lcall
ret
jle
gs
jl
je
jno
cmc
mov
mov
fbld
push
cmp
stc
jp
add
jl
push
mov
sub
add
add
insb
pop
leave
jle
test
lods
mov
jne
add
cmp
test
aam
cld
and
stos
cli
lret
icebp
in
lock
pop
push
cmpsl
or
test
or
cltd
push
sti
mov
jnp
add
call
clc
push
sti
es
pop
or
pop
add
push
mov
add
call
scas
jmp
pop
mov
jns
in
jl
push
push
jmp
mov
jb
lods
aad
roll
stos
jb
lds
shrb
roll
jmp
add
addr16
pushf
cmp
adc
pop
loopne
add
xor
ss
mov
dec
jb
les
add
sbb
ss
or
adc
sub
sub
sarb
sarl
lea
xor
adc
jbe
adc
push
lea
loop
pop
in
std
in
stos
out
fs
cld
add
xchg
mov
bound
je
inc
mov
shrb
cld
pop
cs
or
test
add
sbb
mov
mov
addr16
or
jg
add
or
subb
and
loope
cld
dec
push
inc
jmp
movsl
out
fistl
dec
bound
xchg
add
adc
test
js
xlat
mov
clc
inc
add
sub
shrb
sub
fiadds
mov
js
xor
add
dec
mov
enter
lock
test
lea
fsub
and
cmc
test
jne
stos
push
je
mov
movsl
je
push
loope
imul
ficoml
or
and
call
jp
pushf
push
push
call
bound
jbe
stc
shlb
in
enter
xchg
vpmaxsw
out
add
pop
push
cmp
sub
mov
mov
xchg
inc
sti
cmp
ja
test
pop
jp
and
sarb
in
sahf
lods
cmpsb
out
rep
cli
fildl
je
icebp
and
js
jne
ja
outsb
inc
jge
jp
movsl
je
leave
movsl
adc
mov
add
sbb
fcmovbe
xchg
xchg
out
xor
cmp
cmpsb
das
xor
ja
pop
shlb
jo
shll
rorb
mov
push
or
jb
add
cmp
hlt
nop
push
imul
inc
lods
lret
outsb
pop
mov
hlt
imul
cld
pusha
push
dec
and
jge
push
push
mov
cmpl
xor
add
add
psrlw
add
jae
jle
jecxz
test
add
push
incl
push
jb
out
push
add
add
imul
aaa
xchg
ja
in
add
jmp
int
or
inc
sbb
sbb
push
icebp
lret
xchg
mov
in
mov
cmp
add
insl
cli
jmp
jmp
adcb
stc
mov
inc
cwtl
sar
ror
insl
cli
jmp
add
add
add
test
cli
or
add
fs
insb
dec
or
leave
loop
dec
xchg
or
mov
cld
push
int3
pop
pop
sahf
adc
data16
jne
and
mov
jae
or
jns
scas
xchg
sub
mov
jnp
adc
cli
push
es
jae
gs
xor
or
add
add
add
add
divb
call
mov
scas
lock
pop
mov
cltd
test
add
aas
xchg
push
mov
xor
ret
inc
data16
mov
pop
push
in
mov
dec
lret
inc
push
test
add
movsb
into
xchg
push
lahf
sub
sub
pop
out
jg
cli
lret
icebp
test
ja
add
add
in
int
nop
test
or
adc
insl
dec
into
aaa
or
pop
jne
mov
mov
pop
mov
sti
incl
and
pop
dec
push
push
test
test
push
add
push
into
cmpsb
push
jle
ficoml
imul
insl
mov
bound
fldl
fcomps
push
xor
cs
lock
cmp
pop
lret
add
cs
sub
call
add
shlb
imul
push
xor
ljmp
push
jns
call
stos
fldt
mov
into
hlt
je
jns
xchg
inc
ret
shlb
fstp
js
cmp
into
jo
cld
and
push
mov
stc
xchg
or
sub
push
jb
add
call
fcomip
sti
mov
stos
gs
jb
mov
jne
mov
cmc
pop
and
sbb
in
and
insl
loopne
add
pusha
push
mov
rorb
add
lock
gs
cli
adc
leave
stos
imulb
jb
ljmp
push
stc
push
and
test
mov
in
cmpl
push
add
ja
sub
mov
add
movsb
in
incl
sbb
daa
out
jmp
inc
add
pusha
mov
jmp
repnz
cmp
mov
jae
call
outsb
sbb
jnp
adc
cmp
inc
add
add
cmp
inc
jmp
cmpl
ret
cmpb
add
inc
pushl
test
addl
mov
orb
mov
add
js
jae
push
aam
or
cmp
push
jmp
jle
lea
int3
push
sbb
adc
and
cmpsl
popf
adc
push
adc
fimull
add
mov
popf
cli
aad
pop
add
cltd
test
dec
add
dec
pop
dec
add
outsb
adc
dec
lahf
adc
xchg
add
lea
add
loop
ret
cli
mov
inc
push
loop
ret
cli
push
push
dec
add
inc
ret
xor
and
shll
shrb
cmp
std
aaa
fs
in
xlat
ret
outsl
clc
mov
pop
cmp
pop
push
add
push
mov
add
sub
or
xor
lock
push
sbb
or
mul
test
xor
test
xor
cli
sbb
test
push
dec
pop
jecxz
movsl
inc
xchg
mov
cvttps2pi
cmp
pusha
nop
cmc
mov
repnz
push
faddl
mov
lock
shll
cmp
out
add
sarl
xlat
cmpsb
jae
lds
push
and
jg
pop
xor
jmp
cmp
sbbb
in
xor
sub
int3
imul
push
xor
sbb
add
mov
push
test
aad
sti
jmp
sub
add
int
sti
insb
adc
push
bound
push
add
sbb
add
pop
xor
and
addl
add
and
mov
mov
clc
scas
scas
mov
or
in
shlb
push
mov
addl
arpl
push
lds
and
push
cli
mov
mov
push
icebp
jmp
cmpsb
sub
add
and
incl
add
push
incl
mov
xor
push
into
es
xchg
arpl
or
adc
bswap
push
xor
inc
faddl
sub
xchg
cltd
dec
inc
int3
ret
je
loop
push
mov
ret
jae
rolb
push
data16
push
das
addr16
cltd
adc
push
add
or
pop
adc
push
lret
xchg
cmp
test
incb
lods
jge
xchg
push
cld
mov
fimull
mov
int3
mov
sub
xor
andl
in
mov
pop
mov
sub
mov
mov
popa
xor
sub
ja
dec
sbb
mov
stos
xor
sahf
xlat
push
xlat
ret
ja
outsb
dec
dec
incl
xchg
dec
arpl
mov
lods
cli
pop
push
push
push
stos
bound
cwtl
jecxz
xchg
andl
int3
xchg
ja
mov
xor
add
mov
outsb
fcoms
incl
outsl
add
bound
add
push
mov
mov
ficoml
add
or
call
add
adc
pop
enter
pop
xor
loop
inc
in
xchg
xor
or
sub
add
test
in
pop
mov
sub
jg
push
faddl
imul
shrb
std
xchg
inc
loope
int
mov
add
divl
adc
bound
mov
or
adc
add
stos
mov
cld
sub
insl
mov
aam
fdivrp
dec
sbb
subb
add
call
repz
sub
xor
movsl
xchg
xchg
std
and
andl
sub
cmovo
mov
mov
lret
ret
xor
add
fiadds
push
add
push
outsl
sti
inc
pop
jb
sti
inc
jmp
ds
mov
cmpsb
push
stc
push
mov
xchg
mov
fildl
add
notb
adc
sti
cmp
repz
push
insl
add
jnp
sbb
fwait
cld
jbe
inc
insb
sub
adc
and
inc
jmp
jmp
es
add
pop
imul
les
imulb
cmpsb
fdivrs
decb
xor
imulb
add
cmpsb
pop
xchg
lret
test
pop
xor
add
fwait
cmp
sbb
inc
adc
in
xchg
inc
add
addr16
lea
sub
enter
xor
pop
pop
lcall
arpl
add
dec
lds
fnsave
pop
sub
sub
push
lods
arpl
pop
lock
adc
imul
pop
stc
xor
inc
add
pop
add
cld
out
out
cli
hlt
add
outsl
shll
cld
rcrl
je
test
jge
mov
sub
call
add
pop
pop
ds
test
inc
fxch
repnz
ljmp
mov
cli
inc
cmp
mov
fs
dec
inc
loop
cli
es
xor
out
add
add
ret
xchg
cld
cli
cli
add
mov
push
xorl
ret
push
mov
dec
push
inc
stos
cmp
and
pushl
mov
dec
push
add
add
add
mov
stos
in
call
sbb
push
push
xor
imul
imulb
add
nop
divl
jnp
jne
test
inc
pop
push
leave
cmp
sub
xchg
lret
xor
xlat
or
cmc
xor
pop
and
jo
cmc
call
mov
std
call
dec
loopne
ss
out
inc
incl
add
sarl
push
dec
xchg
dec
les
jl
cmpsb
jle
cmpsl
bound
add
adc
push
out
xorl
xchg
inc
xchg
add
xchg
sub
pop
push
ds
xchg
adc
rcl
cli
cmpsb
in
lea
stos
xchg
out
cmp
adcl
xchg
add
scas
int
push
mov
add
add
data16
gs
xor
add
int3
idivl
inc
cmp
dec
jne
jo
dec
pop
and
aam
jmp
push
mov
dec
xlat
or
pop
movsl
xchg
bound
stos
push
sub
out
hlt
call
mov
push
mov
push
mov
stos
and
push
add
push
inc
test
icebp
pop
rolb
add
lock
out
call
push
and
add
lret
xor
mov
call
or
push
push
add
push
push
xor
jle
sti
out
rclb
add
xor
stos
ss
push
es
loope
jge
int
push
push
fsubs
pop
les
bound
add
shlb
adc
aas
jmp
xor
call
fpatan
pop
pusha
lahf
mov
lock
inc
mov
jle
mov
insl
inc
add
add
js
inc
adc
pop
arpl
push
xor
call
rol
push
lea
outsl
and
push
add
xchg
addl
add
add
add
scas
out
jmp
sub
cmp
sub
dec
call
cmp
add
jne
mov
hlt
mov
add
sub
rorl
test
cmp
incb
adc
shll
dec
dec
xchg
push
push
jmp
cmpl
xchg
xchg
add
fnsave
scas
jo
jb
push
dec
add
mov
jg
pop
pop
xor
and
cli
roll
and
incl
add
push
sbb
mov
lret
ret
cmpsb
jno
xchg
mov
mov
les
dec
jns
addb
pop
into
add
pop
mov
add
add
add
add
pop
inc
sbb
cs
xor
sub
mov
inc
nop
stos
fwait
sub
or
popf
or
dec
mov
pop
jmp
xchg
or
lea
jmp
add
lods
rclb
xor
push
push
testl
cmp
inc
addr16
pop
xor
add
mov
add
imul
add
pop
xchg
in
and
add
test
sti
mov
rcrb
shrl
xchg
push
cli
xchg
push
decb
rcrb
jmp
shl
lods
lea
inc
je
pop
je
xchg
out
cmp
movsl
pushf
int
pop
cli
cmpsb
xchg
pusha
ljmp
add
add
push
xor
inc
ret
pop
cli
insl
or
fcomi
pop
das
push
sarb
imul
add
or
cmp
cs
add
or
repz
push
mov
or
out
repz
in
out
notl
repnz
shll
pop
adc
xor
leave
mov
idivl
fstl
and
add
clc
push
pushl
pop
or
add
clc
inc
pop
mov
jmp
ds
xor
adc
inc
clc
cmp
or
gs
cmc
adc
push
mov
aaa
sti
sbb
mov
das
pop
cwtl
mov
lcall
loop
push
decl
push
inc
cmpl
leave
xchg
add
xchg
mov
std
ret
cli
les
push
push
inc
jle
cmp
add
fwait
aas
xchg
and
int3
or
das
sub
xchg
addr16
add
or
dec
jle
adc
cli
ss
push
divl
out
cmp
das
in
jnp
push
outsb
lods
mov
pop
ret
or
mov
call
add
cmpsl
scas
sub
jb
add
std
insl
mov
std
inc
loope
xor
sarb
es
sbb
sbb
xchg
addr16
divb
pop
push
sbb
mov
push
mov
ds
call
xor
aad
loope
mov
cmp
add
insb
clc
dec
pop
xor
adc
inc
cli
pop
push
cmp
add
loop
pop
jb
add
pop
xor
jae
sahf
fiadds
add
fxtract
cwtl
stos
dec
int
lods
enter
cmp
sub
jae
sbb
incl
add
add
add
add
xchg
add
pusha
jae
fsts
out
xchg
mov
mov
stos
ret
sub
insb
add
adc
fdivrp
imul
fidivs
add
movsb
cmc
call
sbb
pusha
cmp
cmp
sub
inc
jne
stos
int3
jne
jecxz
add
push
cmp
sub
ret
jecxz
sti
dec
cli
mov
add
add
clc
stos
mov
je
scas
and
sub
push
addl
mov
add
sub
cld
je
insl
cld
jg
in
cmp
cli
mov
jo
rol
and
push
jae
push
enter
bound
mov
xchg
dec
decb
cmp
cs
mov
mov
mov
cld
test
inc
jbe
adc
cmp
je
mov
jmp
add
or
fwait
add
adc
push
lret
jg
xor
dec
xchg
nop
cs
xchg
jae
mov
jl
jle
test
shl
or
das
mov
dec
lret
outsl
outsl
out
es
pushf
jnp
mov
push
push
imul
subl
jge
movsl
and
aad
sbb
add
fdivs
pop
inc
popf
icebp
sbb
xor
inc
pop
sbbl
ficompl
push
push
mov
stos
sub
push
lods
xor
dec
jp
xor
pop
xchg
orb
in
idivb
xor
lds
orl
js
sub
dec
mov
mov
je
popa
nop
dec
enter
jmp
popa
cmp
lds
rorl
sarb
in
test
subl
adc
jne
jo
sbb
inc
fadds
in
into
loopne
sub
out
pop
mov
icebp
or
pop
sbb
pop
push
lretw
dec
pop
sub
push
bound
dec
xchg
mov
stc
cs
mov
mov
test
dec
cli
push
rorl
aad
cmc
jne
jl
cld
test
dec
lock
cmp
jns
pop
movl
or
paddb
xor
cmp
dec
sub
push
lret
or
jne
incl
add
in
out
and
pop
mov
ds
stos
repnz
mov
push
lea
and
mov
and
sbb
ljmp
push
mov
adcl
jmp
pop
jle
add
adc
pop
jnp
int3
jb
add
jb
jg
pop
inc
mov
push
rcrb
inc
cli
mov
adc
xchg
aam
push
add
or
test
sarl
add
add
add
add
or
and
cli
cld
inc
jnp
imul
xchg
lret
stc
fistl
jg
insb
jle
inc
push
or
imull
jmp
sub
es
mov
lcall
loopne
lea
sti
daa
jo
mov
xorb
dec
xorl
xorl
ror
add
mov
or
push
mov
daa
push
rcll
add
scas
movsl
add
xor
andb
popa
xchg
lret
out
dec
imul
repnz
add
ss
xchg
ljmp
popa
sbb
mov
mov
stc
xlat
les
jb
dec
xchg
mov
mov
push
rol
sbb
dec
inc
pushl
mov
and
fmulp
mov
aaa
sub
stc
push
xchg
iret
lret
out
roll
int3
cmp
mull
cmp
mov
out
and
bound
lds
inc
jae
adcb
xlat
inc
mov
cli
push
xor
push
es
call
mov
mov
jp
cli
mov
inc
mov
add
add
inc
dec
flds
data16
divl
mov
dec
sub
decl
out
push
mov
dec
xor
sbb
xchg
xor
push
notl
pop
cmpsb
push
js
xor
jl
cmp
test
pusha
mov
adc
pop
cmp
loopne
repz
leave
repnz
cmp
test
pop
push
idivl
or
add
pop
or
inc
push
pop
ja
lret
fld
inc
sub
mov
mov
decb
subl
subl
push
push
test
dec
insb
setno
je
in
mov
pop
imul
xchg
push
ljmp
sub
cmp
jmp
test
aas
ja
add
stos
repz
dec
sarb
mov
jle
loop
adc
mov
adc
cmp
add
pop
xchg
jg
inc
rcrb
cmp
cmp
adc
enter
test
dec
or
pop
and
inc
push
jmp
xchg
js
mov
and
dec
dec
sti
pop
add
inc
lock
or
in
aaa
lods
push
sar
jne
pop
lret
mov
divl
call
sbb
sbb
insl
lret
fcmovbe
cld
mov
dec
fs
in
or
jmp
or
cmova
pusha
jae
sub
ja
rorl
push
sbb
push
add
push
ljmp
sbb
dec
pop
sbb
cmp
in
neg
cmp
sub
xlat
adc
inc
cli
jmp
into
lods
call
stos
xor
jmp
cli
adc
dec
mov
rolb
adc
inc
push
incl
adc
inc
push
aas
sub
add
in
push
je
and
push
push
imul
xor
adc
call
sbb
add
mov
aam
jae
mov
mov
cld
test
sub
addl
ja
mov
mov
dec
incl
jnp
incb
cmc
adc
push
pop
mov
add
push
sub
xchg
inc
push
sbb
mov
cmp
cli
and
pop
fstl
sbb
cs
enter
xor
add
test
xchg
test
mov
mov
gs
in
test
lea
dec
pop
repz
or
ss
jmp
ret
push
xlat
cli
mov
outsb
adc
bound
add
add
or
and
mov
cltd
mov
adc
add
xchg
testb
jmp
fsubrl
jb
xor
notl
push
pop
push
inc
push
mov
in
inc
push
xor
mov
imul
andb
fwait
mov
xor
push
xor
aas
inc
jl
add
jae
mov
pop
add
int3
in
and
xchg
out
pusha
lock
add
into
outsl
adc
bound
and
test
sub
mov
xchg
lods
inc
in
aad
inc
jmp
sbb
dec
sbb
sbb
inc
jge
inc
into
adc
push
jle
cld
xor
dec
cmc
sub
loopne
xor
rol
add
mov
shl
mov
xchg
fists
inc
jge
popa
mov
rorl
xor
data16
out
xor
mov
jge
mov
mov
cld
xchg
ss
jg
add
mov
cmc
jne
ret
dec
ret
jae
xlat
dec
add
jge
cmc
jne
js
leave
ret
pop
das
push
mov
out
cmp
add
dec
add
sub
cmp
push
outsl
jle
cmp
mov
cmp
idivb
aas
cmp
aam
clc
ljmp
out
xchg
ljmp
jno
data16
dec
mov
stos
cmc
je
lods
jnp
push
pop
repnz
cmp
out
add
xor
mov
gs
dec
mov
xchg
scas
std
xchg
notl
fcmovb
imul
or
stos
fnstcw
pop
or
xchg
add
adc
and
lret
mov
dec
psubb
dec
push
clc
cs
call
or
pop
test
hlt
mov
push
out
mov
add
cs
inc
je
icebp
mov
out
out
js
jl
repz
jmp
add
sub
repz
in
outsl
aam
leave
jmp
sbb
push
leave
jmp
outsl
or
jmp
ret
ds
mov
fsubr
lods
shrl
pop
gs
dec
lods
mov
jmp
add
aam
mov
sti
pop
gs
dec
inc
jae
xlat
ljmp
and
or
insl
pop
xchg
xor
jg
pop
sub
in
jg
out
pop
jle
rcr
in
adc
push
pop
jp
sbb
push
gs
xchg
push
push
aaa
cli
jno
cld
xor
ror
mov
or
nop
or
rol
aas
xor
mov
add
jae
inc
stos
cmp
in
push
xor
fs
or
xor
push
jne
sub
push
mov
add
clc
out
sub
dec
gs
push
jns
movl
sub
stc
jae
push
rol
imul
loope
je
sub
add
je
mov
add
add
imul
cmp
enter
sarl
push
out
dec
push
or
lret
or
lahf
mov
sub
imull
dec
mov
inc
or
ja
mov
add
stos
add
int
xchg
jne
cmpsl
xchg
jne
push
idivb
loopne
dec
or
pop
or
dec
cmpsb
inc
xchg
xchg
add
push
dec
decb
fimuls
fcoms
shrb
or
push
jo
jl
dec
lock
adc
xchg
add
or
js
dec
pop
roll
push
or
xchg
add
mov
dec
dec
rol
push
xchg
jbe
push
test
xchg
loop
push
test
ret
xor
add
aaa
out
aad
add
lea
out
divl
pop
adc
xchg
jb
and
mov
push
stos
aad
inc
out
and
mov
cmpsl
sub
loope
call
fldcw
lea
test
push
out
xor
jg
outsl
into
cmpsl
mov
mov
sub
add
add
int
pop
pusha
pop
pop
mov
jecxz
rorb
add
dec
xchg
jmp
mov
and
add
fldlg2
cli
scas
nop
pop
add
push
xor
cmp
mov
repz
xchg
out
xchg
dec
mov
jge
sub
hlt
fs
ss
inc
mov
sbb
out
fnstsw
aam
mov
jle
adc
idivl
cs
sub
arpl
clc
cmpsb
jnp
stc
cmp
inc
and
jl
cmpsl
jnp
arpl
sub
jno
push
dec
cmpsl
push
lock
mov
xchg
xlat
inc
xor
shll
data16
pop
mov
pop
add
int3
lods
push
loopne
aaa
push
add
jno
je
test
add
pop
or
pop
pusha
push
cmp
das
add
std
jp
inc
das
xorl
out
add
fwait
jno
pop
cmp
loopne
dec
inc
xchg
mov
dec
mov
decb
push
rol
xor
cmp
fnstcw
xchg
cmp
filds
add
or
iret
lret
add
add
push
out
repnz
add
xchg
mov
rclb
push
js
sbb
cmp
xor
xchg
jae
gs
rcr
sbb
pushf
xor
clc
push
cmp
cmp
inc
jne
pop
out
cli
das
movsb
addr16
cmc
mov
jne
cmp
add
dec
cmpsb
mov
cmp
movsb
sbb
xor
inc
sti
into
iret
dec
gs
into
out
int
cmpsl
and
hlt
mov
in
outsl
inc
stos
mov
mov
jo
mov
repz
sub
xor
sub
inc
jmp
vmwrite
out
xlat
movsb
add
add
push
adc
ljmp
mov
outsl
jl
fcomi
repz
fs
cmp
and
push
jge
add
inc
repz
dec
out
inc
ss
out
fcomi
bound
mov
fs
dec
stos
cmp
cwtl
outsb
add
add
pusha
mov
add
inc
add
xor
fstpt
pop
jns
xchg
sub
add
lahf
mov
cmp
ret
add
cmp
lds
sbb
inc
pop
cmp
jmp
ret
dec
fdivrs
mov
enter
add
imul
cmp
jo
xor
mov
jecxz
add
and
mov
jp
fnsave
mov
aas
add
xor
xor
xchg
add
adc
add
fdivl
call
std
pop
rorl
dec
dec
repnz
pop
jo
fdivrs
je
xor
mulb
inc
jbe
pop
bswap
stc
push
rcl
xchg
and
or
enter
add
add
add
bnd
mov
cli
inc
cmp
pop
test
cmpsb
ret
inc
je
data16
mov
or
adc
add
jl
lds
stos
or
sbb
into
in
xchg
jl
adcb
and
jno
aas
in
sahf
dec
dec
insl
dec
ss
mov
jmp
test
jo
jg
cmp
add
jmp
test
clc
sub
js
jg
adc
aad
dec
mov
adc
fldt
push
inc
aam
fnsave
xor
leave
fcmovnu
jp
push
pop
out
scas
negl
sbb
addl
iret
sub
dec
cltd
std
jecxz
jo
cmp
mov
push
xor
jns
mov
add
popf
sub
mov
sub
fwait
test
xor
pop
push
add
push
xor
lods
rep
dec
sbb
divl
pop
xchg
mov
xchg
and
lods
dec
icebp
mov
cs
and
and
fsubr
std
out
push
dec
cmpsl
jl
test
out
jge
mov
hlt
add
sti
fiadds
ss
jge
aas
stc
inc
shll
jnp
int3
sub
add
sbb
test
inc
loop
add
pop
rolb
mov
call
mov
pop
lock
cmp
mov
pop
jle
mov
call
out
mov
fsubs
fiadds
divl
jne
and
add
pop
scas
jge
sti
rcll
ss
mov
call
fcmovnbe
hlt
ltr
hlt
pushl
mov
mov
pop
add
inc
js
mov
dec
xorl
dec
nop
loopne,pt
aam
cli
dec
std
xlat
leave
test
add
add
mov
iret
rcrl
lock
ficoml
ror
jae
xchg
add
or
shrb
jne
mov
jne
imul
mov
ret
addr16
lock
sbb
in
rolb
dec
insl
mov
or
jp
xor
in
std
fisubrl
mov
or
in
push
in
les
into
push
cmp
cmp
add
push
movsl
sub
mov
pop
inc
inc
xor
inc
das
cmp
js
lods
inc
aam
jecxz
js
adc
aam
jecxz
jns
sbb
push
add
pushl
jecxz
mov
stos
xor
test
jmp
adc
into
push
xor
add
mov
and
mov
stos
xor
jmp
add
adc
popa
xchg
gs
in
mov
mov
pop
pop
cmp
fcoml
inc
xor
jecxz
neg
fucomi
jb
sub
cmp
mov
dec
in
gs
cmp
adc
call
scas
arpl
mov
mov
push
data16
std
jmp
aas
scas
mov
xchg
add
in
inc
shrb
scas
sarl
test
add
pop
sbb
push
lods
xor
add
inc
faddl
testl
nop
stc
je
scas
leave
jne
add
cmc
xchg
je
jg
fisttpll
xor
mov
add
mov
lds
mov
inc
push
cmp
mov
add
add
add
add
iret
fistpll
cmp
mov
cmp
jge
lea
inc
jae
cltd
idiv
into
sbb
inc
out
xchg
mov
stc
push
mov
add
aam
std
call
testb
sub
fcomps
addr16
and
xchg
jmp
fildl
jbe
add
fcmovbe
inc
xchg
inc
out
xchg
mov
shr
jo
sahf
mov
add
adc
add
ss
out
xchg
mov
daa
push
or
out
cmpsb
jg
out
mov
cs
int
cmp
mov
imul
mov
call
mov
ss
jb
add
dec
mov
pop
imul
cs
lahf
jae
adc
jae
test
xlat
sub
in
add
xchg
cs
mov
or
sub
dec
cli
push
cmp
sub
push
bound
scas
in
adc
lcall
cs
test
jo
sbb
sbb
add
mov
cmpsl
xor
dec
mov
jnp
pusha
xchg
ss
mov
call
test
adc
outsl
out
xchg
and
mov
call
lds
inc
call
jae
xor
adc
cmpb
cmp
mov
lods
cmp
inc
jnp
xor
icebp
cmp
add
jnp
add
inc
cmp
add
int3
pop
jnp
inc
xor
call
xor
mov
orb
mov
mov
ficoms
and
jl
cmpsl
jl
mov
jmp
sar
icebp
mov
jne
push
sbb
aam
add
xchg
fcoms
stos
outsb
add
paddq
xchg
cli
xchg
push
mov
pushf
mov
inc
push
jns
dec
mov
divps
rclb
nop
idiv
mov
jae
push
sbb
cli
adc
jge
sbb
dec
insb
add
or
lahf
mov
add
push
sub
enter
popf
ljmp
cmp
shll
data16
add
sub
inc
xor
rcrb
ss
cs
scas
and
enter
lea
popa
enter
call
xlat
jl
add
mov
or
wbinvd
jl
pop
pop
scas
insb
imul
outsl
out
inc
mov
cld
xchg
jmp
fidivs
mov
stos
sarl
mov
jle
sbb
xlat
jl
sub
sbb
add
pop
je
jns
inc
shlb
dec
sub
wrmsr
add
lock
push
jnp
test
cmpsb
xchg
push
lods
mov
fisttpll
mov
sahf
adc
sub
sub
jb
stos
in
mov
lcall
jb
cmp
ljmp
inc
out
out
inc
ficoms
dec
cltd
add
sbb
test
mov
and
ret
push
cmc
jmp
adc
mov
push
xor
int3
jecxz
addl
loop
mov
xchg
xor
std
das
xchg
test
enter
add
xchg
push
mov
test
jne
and
push
cmp
je
arpl
add
dec
cltd
idiv
add
xor
icebp
nop
in
adc
stc
add
stc
adc
stc
adcb
mov
idivb
mov
xor
xor
shrb
jp
enter
push
mov
mov
cmp
push
cmpsb
fildll
add
flds
pmullw
dec
int3
cmp
mov
adc
int
cli
add
xchg
inc
cmpl
push
dec
iret
push
mov
pop
jno
xchg
xlat
fcmovb
cmp
dec
mov
xor
jae
loop
ret
sbb
mov
inc
in
xchg
mov
push
mov
lea
gs
fnstcw
sub
pop
in
and
push
mov
pop
shll
add
add
adc
hlt
xor
mov
in
push
mov
fistl
pop
sub
or
xor
mov
icebp
dec
or
imul
lock
mov
add
inc
out
or
sub
or
sub
stos
das
pop
or
inc
fcmovbe
xchg
es
pop
mov
insb
cmc
and
add
add
add
add
add
ss
jle
or
push
cli
adc
cmp
cltd
aam
mov
cld
dec
mov
stc
add
insb
mov
lods
and
es
mov
push
jg
jo
daa
cli
ljmp
inc
cmp
cmp
jns
push
xor
inc
adc
xchg
enter
mov
add
fiadds
out
xor
mov
vpunpcklqdq
mov
stc
ljmp
dec
mov
sub
je
cmp
cmp
fldl
lea
push
mov
cwtl
fcomi
xlat
popl
mov
icebp
add
inc
scas
inc
call
sbb
adc
mov
data16
test
jne
inc
ljmp
add
add
add
mov
mov
inc
cmp
sti
out
jmp
mov
add
and
repnz
sbbb
sub
inc
jecxz
imul
sbb
sti
lods
pop
or
jp
add
push
and
movb
test
ret
or
push
adc
or
or
divl
xor
pop
adc
push
lret
dec
inc
adc
inc
cmpb
xlat
add
xchg
or
mov
dec
or
adc
call
xchg
inc
push
push
or
lods
xchg
mov
rcll
mov
mov
xchg
xor
in
mov
xlat
rclb
cmp
outsl
sub
xchg
scas
mov
adc
dec
scas
and
add
push
xor
or
call
add
cmp
jle
inc
inc
fldcw
loop
out
jge
jo
repnz
inc
iret
pushf
inc
sub
xor
insb
nop
popf
in
add
push
xor
leave
insb
adc
xchg
in
push
mov
ret
xchg
add
push
aaa
mov
push
ss
inc
aaa
mov
add
pop
fbstp
xchg
into
dec
xlat
fdiv
movsl
out
xchg
and
push
test
mulb
ss
imul
inc
cmp
push
xor
call
push
xor
jmp
push
or
es
clc
xchg
stos
dec
std
sub
std
fstpt
ret
dec
push
xor
add
dec
inc
shrb
cli
jbe
dec
jmp
add
cli
inc
mov
cli
add
push
fabs
add
add
lock
jne
mov
rclb
push
inc
inc
xor
scas
mov
in
sub
add
jmp
js
std
push
add
jne
call
xor
sub
sub
mov
xor
jae
push
mov
out
dec
inc
lahf
sarb
pop
adc
xor
cmpl
dec
into
into
iret
push
sbb
pushl
pop
jle
inc
pushl
sbb
sti
repnz
or
add
push
fmuls
ficoml
lea
add
jg
adcl
jp
push
or
xchg
mov
inc
mov
outsl
xor
mov
sub
xchg
pusha
mov
xchg
pop
mov
xchg
sub
xchg
jo
push
xchg
pop
mov
xchg
sub
xchg
jo
push
stos
xor
imul
push
sub
or
add
iret
mov
movsl
jae
jbe
lods
pop
pop
or
or
ja
int3
ret
rcrb
pop
rclb
or
or
pop
popf
clc
pop
mov
pop
cmc
pop
iret
je
mov
clc
dec
jno
push
push
outsb
ss
aad
iret
test
pop
sbb
push
addl
jnp,pn
push
mov
sbb
jae
mov
or
mov
add
add
add
mov
jge
mov
std
clc
jae
je
das
or
or
or
cmpsb
ljmp
scas
std
adc
pop
pop
movsb
test
test
push
xor
cmp
xchg
popl
insb
out
push
jbe
bound
daa
call
insl
xchg
mov
cli
add
mov
add
es
rcrb
xor
je
push
inc
in
inc
stos
mov
pop
fmul
ret
sub
push
xor
call
sbb
adcb
mov
cmp
ret
push
mov
dec
push
push
add
sbb
lods
icebp
mov
js
add
icebp
stc
mov
adc
sub
xorw
mov
add
rcll
or
leave
call
nop
dec
pop
xlat
scas
dec
and
movups
jnp
cmp
or
jmp
sti
lods
mov
scas
dec
jns
out
incl
mov
test
ficompl
lret
or
add
ret
stc
add
enter
push
sbb
jge
push
nop
mov
lea
stos
mov
ds
dec
out
outsl
fwait
icebp
or
daa
mov
xchg
mov
sub
push
movsl
repnz
sbb
shll
movsb
dec
cmp
out
scas
ss
outsb
movsl
cld
add
or
xor
add
sub
imul
add
jb
mov
jb
mov
je
imul
fwait
push
int
mov
mov
je
imul
jnp
int
add
loop
inc
rol
inc
pop
jp
cli
pop
cmpsl
xchg
adc
jp
ljmp
jo
out
jo
fdivp
jo
das
add
jmp
add
lahf
add
int
sti
push
fnsave
insb
adc
stc
mov
xchg
sbb
push
push
out
inc
push
jg
js
sbb
imul
jae
std
inc
aam
adc
push
xchg
sub
xchg
xchg
sub
std
out
adc
clc
in
stc
incb
push
notl
lahf
ljmp
add
add
add
mov
idiv
lahf
ljmp
pop
ljmp
out
ss
outsb
cmpl
pop
jmp
or
test
and
xor
jmp
mov
sub
fistl
jae
shr
outsb
loopne
arpl
inc
pushf
pop
decb
sub
pop
stos
xor
push
leave
pop
add
aam
leave
movq
push
call
aad
leave
add
pop
imul
adc
push
ficompl
jmp
add
mov
jg
mov
add
cwtl
mov
jge
inc
jns
pop
xchg
push
add
out
es
gs
xchg
mov
addb
add
faddl
or
dec
add
cltd
aaa
mov
xor
dec
cli
aam
std
test
ljmp
insl
mov
lods
pop
pop
leave
sbb
cmpsl
or
insb
shrl
fsub
add
cltd
leave
cmc
daa
xchg
sar
sub
fiadds
daa
or
adc
push
cltd
xor
add
out
inc
pop
scas
jae
push
xor
aaa
incl
jle
pop
leave
scas
outsl
xchg
addb
add
pop
xchg
pop
insl
sti
jle
stos
mov
je
push
add
pop
xor
push
xchg
inc
jbe
add
orb
nop
cmp
fdivp
add
je
das
in
xchg
sbb
and
sbb
jmp
push
xor
fnstenv
jmp
out
push
push
jb
add
das
mov
sbb
insl
adc
test
dec
xor
imul
data16
sub
xchg
inc
jno
mov
or
and
scas
roll
push
xchg
inc
mov
cmc
push
xchg
roll
xor
cmp
sbb
add
mov
jae
pop
mov
adc
rorl
mov
or
dec
jecxz
shl
pop
add
sahf
lcall
test
stc
mov
call
iret
jns
or
bound
or
xchg
add
cmp
lea
fmull
pop
repnz
cli
test
cmp
rolb
mov
ret
mov
pop
cmp
jg
mov
add
push
jae
ss
je
test
pop
jmp
mov
add
or
std
mov
push
std
decl
pop
std
call
xor
les
push
dec
ret
movsl
jbe
js
xor
adc
dec
cli
add
daa
xor
dec
mov
lcall
data16
repnz
out
mov
aas
and
out
xchg
sub
adc
or
dec
sub
mov
adc
dec
cmp
push
and
push
xor
mov
sub
repz
mov
dec
inc
ret
cmpsb
movsb
call
sub
mov
cmpsl
lods
dec
aas
testl
add
add
add
int3
adc
cs
jp
add
shrl
add
xor
je
jp
push
sahf
inc
aaa
push
pushf
or
or
roll
test
pop
xor
insb
xchg
es
dec
xor
push
xor
stos
insb
adc
pop
insl
clc
adc
push
dec
adc
movsb
jae
stos
push
out
cmc
sub
add
mov
cli
push
sbb
test
pop
inc
inc
mov
adc
gs
pop
cli
es
pushf
adc
test
or
movhps
inc
pop
push
cli
imul
idivl
fs
jg
rolb
add
call
xor
add
adc
sub
add
stos
sub
cmp
dec
sldt
mov
add
sub
push
test
adc
push
and
mov
fsub
mov
arpl
test
adc
in
add
cld
adc
xchg
sub
popf
out
arpl
test
jle
push
add
dec
mov
xchg
pop
jns
nop
sub
sub
loopne
repnz
lcall
ds
add
pop
pop
dec
lds
adc
add
ljmp
mov
stc
ss
dec
test
add
addr16
cmp
call
adc
push
stc
pop
lret
cmpl
push
sahf
ret
fildl
pop
rorl
fsts
jmp
push
dec
cli
fcmovu
cmc
addr16
call
jle
and
dec
shr
fiaddl
add
add
add
jns
out
repz
movsb
push
dec
mov
outsl
daa
jge
daa
adc
dec
cmp
stos
cmpsl
loop
push
sti
in
loope
jne
rcll
rcrl
loopne
aas
test
mov
out
xlat
jne
jle
add
mov
jmp
cmp
andb
cmp
ret
xchg
ss
aam
repz
add
cwtl
dec
lods
negb
add
cld
mov
lock
add
incl
in
divb
clc
je
pop
stc
cmp
mov
jecxz
lock
imul
cwtl
or
js
enter
flds
xchg
push
cmp
cmpsb
clc
or
ja
mov
pop
repz
add
xchg
push
cmp
jmp
loop
pop
ret
pop
mov
jmp
imul
add
in
bound
in
pop
dec
call
cmpsl
mov
push
mov
arpl
in
push
orl
inc
notb
imul
xchg
jge
ljmp
cmc
into
lea
fs
xchg
sti
cmp
sub
xchg
rclb
mov
mov
mov
rcl
and
add
enter
and
repz
addb
loopne
cmp
or
jnp
jmp
cli
fcmove
cmc
addr16
in
ljmp
adc
popf
push
xchg
and
push
jp
push
pop
popa
nop
fdivl
pop
out
push
mov
inc
add
mov
lret
in
std
or
xlat
adc
and
jne
sbb
adc
sub
add
cmp
cmc
inc
rcl
divb
xchg
lahf
shr
dec
xor
je
mov
data16
jae
std
das
dec
in
lock
imul
out
lret
ss
mov
cld
xchg
mov
or
stos
push
rolb
or
ret
and
out
push
or
orl
daa
clc
rcr
call
sti
imulb
jmp
xchg
in
adc
mov
inc
shl
bnd
xor
add
and
mov
sbb
icebp
int3
inc
es
inc
cmp
fcompp
outsl
das
fmulp
lock
aaa
mov
xchg
push
pushl
add
jo
jge,pn
jecxz
mov
call
stos
or
inc
mov
loope
test
shr
nop
call
push
pop
rolb
add
pushf
inc
cmp
out
mov
ljmp
adc
mov
xchg
adc
jb
sub
repnz
ss
push
icebp
loop
xchg
adc
repnz
sub
add
add
add
add
outsl
test
cmp
xchg
jae
adc
dec
adc
ss
dec
cli
mov
cmc
add
inc
shl
test
and
enter
out
fwait
pusha
push
mov
rol
mov
enter
inc
push
sti
jbe
jne
lods
jb
push
je
push
add
xor
add
add
add
sub
inc
add
sbb
adc
xchg
mov
jmp
add
cs
jae
data16
in
mov
call
imul
cli
orps
xchg
inc
adcl
jp
push
pop
incb
ds
gs
pushf
mov
jne
pop
cmpb
test
sldt
add
dec
push
rorl
rclb
popa
nop
pop
xchg
not
mov
mov
insl
hlt
or
jne
pop
pushf
mov
xor
xor
jns
les
ret
stc
data16
sti
lods
cld
out
idivb
gs
out
xchg
pop
cmpsl
add
xor
add
loope
inc
lret
mov
pop
add
sub
inc
inc
mov
adc
inc
mov
pop
push
scas
jp
inc
fwait
adc
inc
sbb
sbb
movsl
daa
mull
push
aad
je
int3
xor
loop
push
push
sbb
or
inc
push
mov
lock
push
jl
incl
lods
repz
push
jmp
arpl
adc
push
test
or
lea
mov
sub
xor
icebp
lcall
inc
push
xor
sarl
adc
cmp
push
cmp
jle
cli
jmp
sbb
jge
push
and
add
jnp
add
adc
call
pop
jg
push
mov
add
mov
add
and
std
out
inc
or
mov
ljmp
jecxz
mov
outsl
imulb
aam
lea
xchg
cld
call
lea
lahf
jg
call
jmp
add
xor
inc
jp
xchg
outsl
testb
imul
jp
jecxz
pop
outsb
stos
xor
ss
add
add
add
gs
mov
aad
mov
out
std
push
fimuls
mov
adc
enter
push
pop
rorl
mov
addb
push
pop
push
jnp
aad
pop
add
inc
push
lcall
jnp
xchg
xchg
lret
cmp
aas
xchg
push
add
push
xchg
stc
addr16
std
mov
ret
stos
paddusb
cmpsb
pop
into
mov
xchg
add
push
movl
push
fs
push
pop
decb
lcall
jle
dec
pop
pop
xor
mov
or
add
pop
mov
das
out
mov
xor
add
mov
je
push
sub
add
add
in
push
mov
pop
push
xor
ror
lock
add
faddl
sbb
call
dec
scas
mov
ds
psubusb
into
in
aas
mov
loop
out
mov
jo
out
lods
jecxz
push
xor
je
add
push
lods
mov
je
xor
push
mov
and
stc
lret
jb
cwtl
adc
dec
mov
add
add
cmp
xor
cmp
mov
jmp
sahf
mov
out
xor
jmp
dec
xor
mov
gs
jnp
xor
push
dec
shrb
call
cltd
pop
mov
xor
jmp
jecxz
add
mov
das
cmc
adc
cmc
imul
lahf
aas
fsubrl
add
add
xor
sub
xchg
add
cmp
push
mov
add
lods
fldl
call
lods
mov
add
cs
test
xor
cmp
cs
push
sbb
cs
push
fdivr
incb
mov
jle
lahf
test
add
add
push
mov
js
sbb
add
pop
mov
leave
push
sbb
mov
add
push
pop
or
rcl
std
call
mov
add
mov
les
sub
fwait
cmp
daa
mov
sbb
incl
xchg
adc
std
test
shlb
add
add
add
add
jno
je
cs
jl
push
ds
fcoms
mov
sbb
push
das
jo
push
out
and
mov
or
out
mov
cli
cmp
xor
xchg
pop
add
rol
stos
fistpll
pop
xor
cmpb
sbb
jb
mov
pop
mov
sbb
decb
push
xor
cli
lods
mov
rcll
je
add
push
xor
add
jg
or
imul
stos
add
push
xor
ror
imul
test
mov
or
adc
call
scas
sub
maxps
add
push
xor
lahf
fistpll
call
mov
sbb
push
popa
bound
add
push
sti
adc
add
add
inc
cmp
pop
addl
dec
and
ficompl
data16
andl
xor
inc
mov
sub
inc
adcl
cwtl
mov
dec
rolb
inc
orb
push
xor
xor
rorb
divb
adc
mov
push
loope
in
ficomps
push
add
lret
cmp
jns
stc
cmp
mov
xor
iret
incb
mov
bound
pop
iret
sbb
add
xor
std
lret
clc
lods
cmp
into
jmp
ss
fistpll
jmp
scas
inc
and
in
call
dec
xlat
push
ss
lcall
add
and
dec
adc
leave
std
ss
sahf
jge
jbe
jle
fdivrl
add
mov
cmp
jmp
cmp
cs
xchg
inc
push
xchg
mov
inc
or
and
inc
je
xchg
mov
es
add
in
fiaddl
add
mov
mov
stos
movsb
or
std
fdivrl
and
inc
push
int
mov
add
lods
pop
cwtl
std
idivb
sub
jecxz
push
adc
jbe
add
imul
rcrl
ret
jnp
cmp
xlat
jle
test
shll
jo
jle
and
fbld
sti
std
stos
rolb
add
std
sarl
pop
cmp
push
std
adc
push
std
fadd
cmp
enter
cli
test
cmpsb
xor
hlt
xchg
and
aaa
mov
inc
sub
jle
add
mov
sahf
add
push
test
push
sub
scas
or
mov
push
lcall
adc
push
test
dec
mov
dec
bound
stc
hlt
sbb
clc
add
xor
scas
pusha
insb
adc
dec
divl
int3
je
cmpl
mov
call
icebp
add
sti
rorl
cmc
imul
les
add
loopne
std
por
pop
roll
jne
push
inc
js
jmp
push
add
fimuls
pop
roll
add
cmp
das
pushl
adc
fcomip
adc
xchg
loope
push
inc
testb
fs
xor
pop
fildll
inc
stc
in
notb
push
loope
cli
fs
pop
add
lock
xorl
adc
cld
mov
pop
add
pop
mov
pushf
jle
pop
int3
push
and
test
imulb
mov
push
pop
cmp
or
cs
in
cmp
lret
fwait
jle
in
filds
cwtl
std
out
aaa
lret
sub
push
xchg
pop
mov
push
mov
add
inc
dec
xor
push
xor
cli
pusha
jecxz
and
stc
add
nop
sub
push
ljmp
rcl
fsubrl
jo
test
out
inc
fnstsw
mov
xor
pop
xor
xor
imull
sub
je
or
loope
into
jo
scas
push
push
test
add
push
arpl
iret
or
cmp
incb
fs
add
iret
xor
cs
scas
je
add
dec
es
push
mov
scas
mov
aaa
cli
xchg
roll
sbb
movsb
stos
inc
addl
pop
data16
and
fcoms
dec
jmpw
cmc
mov
clc
cmc
stc
fcompl
mov
stc
call
inc
test
xchg
pop
pop
pushw
and
clc
jns
add
and
je
jmp
or
je
and
jae
cli
stos
or
shll
sub
sub
dec
call
or
cmp
pop
sub
add
std
adc
push
aaa
loop
push
xor
push
pop
ja
or
addr16
jae
outsl
sbb
jmp
aaa
pop
pop
mov
lock
sbbl
xorl
add
rorb
xor
js
dec
push
inc
adc
jns
stc
mov
repz
jae
cld
jae
outsl
xor
mov
cmc
xchg
dec
add
push
aas
xor
cmc
add
cli
int3
enter
push
add
testb
xchg
add
inc
bndldx
incl
mov
pop
cmp
dec
sbb
add
mov
sbb
sarl
xchg
std
test
jge
ds
mov
xchg
push
ret
add
adc
cmp
xchg
lret
std
mov
sarl
outsl
xor
notb
daa
add
enter
shrl
add
inc
xor
fs
adc
add
lock
ret
out
scas
and
cmp
adc
add
mov
ret
mov
xor
fs
or
add
loopne
ret
xchg
rcr
daa
dec
xor
fs
add
ror
daa
daa
xor
inc
jo
fs
or
add
xlat
add
adc
sahf
xchg
add
jbe
add
mov
in
dec
iret
push
notl
cmc
sahf
inc
imul
inc
jmp
push
iret
dec
call
cmc
sahf
xorl
push
inc
jmp
dec
iret
xor
xchg
hlt
sahf
xor
add
sbb
jmp
push
iret
or
xchg
hlt
sahf
xor
add
cmc
or
stos
push
iret
cmp
xchg
hlt
sahf
and
add
add
and
in
sub
stos
push
iret
lock
stc
mov
cltd
fwait
or
in
sub
add
lock
mov
leave
mov
inc
sub
lahf
in
sub
stc
mov
mov
inc
clc
mov
cmp
xor
out
stc
mov
sbb
mov
sub
and
rorb
add
fmull
in
das
lahf
in
movsb
out
stc
mov
leave
pop
or
in
das
lahf
clc
push
cmc
mov
ds
push
pop
out
std
mov
repz
ds
test
adc
inc
add
and
mov
ds
test
adc
inc
add
sub
mov
add
add
add
add
push
pop
inc
mov
add
jns
mov
ds
test
adc
or
scas
gs
mov
ds
test
adc
or
ja
std
mov
outsb
int
and
inc
jo
bound
pop
aam
inc
iret
das
and
pop
jo
pusha
push
or
add
push
cld
ret
add
push
iret
scas
es
xor
pusha
out
or
add
pushf
xlat
ret
test
es
xor
push
jo
pusha
push
or
add
fcom
ret
into
xchg
add
sbb
xor
movsl
sbb
dec
jo
fwait
mov
cmpsl
add
icebp
adc
pop
popf
add
add
pop
mov
js
icebp
push
dec
insl
push
ds
add
add
add
and
xor
xchg
mov
loope
push
cmc
rolb
add
icebp
cli
mov
insb
xor
mov
or
cld
mov
stos
fsubs
jge
cmpsb
out
loope
dec
test
loope
dec
cmc
xor
je
add
xor
sub
xor
scas
aad
pop
xchg
stos
mov
cmp
add
out
xchg
and
or
cmp
lods
sub
fndisi(8087
loope
lcall
cmovo
jmp
lds
xor
mov
add
shlb
dec
decl
xor
add
mov
mov
clc
push
push
push
xchg
xor
cmc
jne
sbb
test
xor
cmp
inc
inc
add
add
add
test
pop
sbb
sbbl
jmp
inc
push
xlat
fmuls
push
mov
add
movsl
cld
jle
or
sbb
fdiv
frstor
pusha
and
mov
outsl
inc
pop
out
inc
dec
ficoms
fcomps
add
inc
notl
and
pop
enter
ja
ljmp
and
sti
add
test
into
cli
fs
adc
call
sub
adc
aaa
lret
push
mov
lahf
enter
es
xor
jge
cmpsl
add
je
lret
and
xor
fninit
and
and
outsb
mov
adc
xchg
fs
int
or
push
mov
lahf
fdivs
sub
jl
mov
popf
cmp
sbb
loop
sub
cmc
xor
xlat
jae
add
xlat
or
pop
gs
and
and
cld
test
xor
adc
push
je
xor
ljmp
jns
out
call
sub
or
cmp
add
add
add
add
loopne
dec
out
in
mov
test
iret
mov
call
imul
cmpl
push
leave
cmp
xor
or
jmp
push
scas
jmp
dec
pushl
xor
fstl
mov
ljmp
loope
xor
add
in
xor
add
dec
or
push
pop
repnz
testb
push
lock
push
leave
cmp
stc
push
jecxz
sub
in
insl
and
add
adc
insl
push
and
out
sbb
or
pop
rorb
inc
outsl
mov
mov
in
xor
orl
jge
xor
add
add
imul
dec
sub
fwait
mov
notl
push
cmpsl
or
clc
test
mov
xchg
fdivr
inc
pop
lods
sbb
pushf
and
std
fdivrs
nop
adc
repnz
adc
push
dec
shlb
inc
jmp
iret
cmp
scas
pop
and
fldenv
das
jno
fisubrl
add
sbb
or
idiv
sar
test
xchg
std
mov
das
in
dec
cmp
fsubrl
xchg
sub
sti
in
mov
repnz
and
cmp
add
mov
scas
std
imul
fistps
inc
mov
outsl
lret
push
mov
out
add
push
xor
bnd
jmp
mov
xchg
cmp
inc
pop
xor
sub
fs
iret
pop
jno
add
stos
cmc
ja
add
push
xor
xor
into
loop
pop
dec
fistpl
lods
sbb
imul
mov
xor
push
hlt
xor
lahf
adc
add
sbb
add
dec
pop
or
or
xchg
sub
clc
push
and
outsl
sub
clc
je
xchg
out
popa
or
shl
add
movsb
mov
jne
mov
icebp
test
mull
call
call
and
mov
int
lock
jmp
dec
adc
add
inc
sti
or
sti
divb
mov
jg
adc
add
insb
loope
ljmp
addl
jns
ret
jl
fcom
cvtpi2ps
idiv
daa
repz
inc
or
sub
mov
incl
repz
pop
icebp
repnz
adc
loop
inc
inc
inc
dec
mov
xchg
sbb
jl
add
jmp
add
or
push
inc
jae
add
shrb
out
jmp
push
mov
in
mov
cwtl
daa
mov
adc
mov
mov
fisubrl
call
std
xchg
popa
pop
and
cmc
push
mov
add
adc
add
addr16
pop
dec
pop
arpl
add
push
xchg
clc
add
iret
cli
jp
or
rdseed
add
push
xchg
into
je
mov
push
or
movsl
or
in
push
xor
xchg
xor
inc
push
add
outsb
ds
add
in
jecxz
push
xor
push
push
xor
xchg
or
and
icebp
ret
mov
sub
mov
addb
cmp
cltd
inc
mov
out
inc
sbb
daa
pop
and
mov
mov
push
add
sbb
add
add
add
add
inc
push
in
aad
xchg
mov
std
and
incb
cmp
mov
ja
out
add
int
in
jo
in
int
add
fdiv
call
cltd
push
movsl
cmpl
scas
or
in
in
or
xor
js
adc
test
jae
stc
xchg
test
orb
push
add
fsubrs
stc
pop
adc
jo
aad
stc
fsts
shll
mov
int
add
int
test
and
scas
ret
js
in
aaa
push
add
cli
dec
mov
mov
arpl
fistpl
mov
stos
out
icebp
mov
xchg
cli
xor
inc
lock
push
call
jae
test
add
xor
addb
fisttps
testb
fmuls
test
mov
mov
ficomps
divb
cmp
push
ret
dec
mov
mov
andl
je
mov
sub
add
jo
ret
xchg
cmpsb
cmp
inc
idiv
push
cmp
out
xor
outsl
push
pop
inc
xchg
xor
negb
shll
push
add
ficoml
sbb
sahf
pop
mov
test
and
das
adc
iret
xchg
sub
inc
cli
int3
jae
adc
dec
cmp
scas
out
fs
mov
xlat
cmpsl
add
pop
inc
xchg
jp
pop
jle
push
xchg
or
push
sbb
dec
jle
dec
xor
xlat
icebp
mov
add
adc
push
xor
jae
or
fsts
sbb
or
orb
mov
mov
sub
mov
aad
xor
int3
push
sbb
fsubrs
outsb
inc
scas
aaa
cmp
add
inc
push
xor
stos
stos
loop
negl
xor
pop
mov
or
out
add
or
mov
xor
add
mov
movsl
jbe
xchg
xor
jmp
aad
adc
push
xor
xchg
ds
cltd
and
cmp
fstl
loop
sub
jno
hlt
push
xor
ds
sub
fdivrl
das
stc
fmull
inc
jmp
popa
xor
andl
bound
add
stc
xchg
cmp
stc
faddl
xor
leave
outsl
adc
sub
call
test
add
push
pop
adc
loope
cmc
mov
fidivrs
add
call
cmc
cmp
stos
mov
cmp
jae
mov
or
data16
clc
xlat
xchg
add
sub
add
sub
stc
mov
lods
inc
mov
xor
hlt
insl
adc
adc
insl
sbb
sub
xorl
call
lods
fiaddl
xor
sbb
mov
out
pusha
mov
out
push
mov
jl
popa
mov
dec
ds
adc
leave
cmpb
add
gs
inc
or
aas
push
jo
call
nop
pop
jnp
mov
adc
ja
or
jnp
push
adc
std
mov
es
lods
or
leave
std
dec
lret
es
mov
and
adc
sti
and
adc
ljmp
xor
mov
push
pop
rorl
add
xor
push
add
clc
or
nop
adc
or
xchg
jecxz
icebp
fwait
imulb
fiaddl
adc
or
aad
lret
xchg
fsubr
add
adc
push
neg
out
hlt
imulb
mov
aas
stos
rcr
out
push
lret
ljmp
xor
mov
xor
iret
je
dec
add
add
push
xor
fisubrs
xor
bound
push
mov
push
xor
push
push
arpl
insl
pop
fs
jo
stc
cld
fiadds
jmp
pop
sahf
xchg
xor
jmp
push
xor
jmp
add
inc
icebp
int
or
lret
push
call
push
xor
jo
dec
call
add
or
push
jb
orb
mov
cmc
jg
iret
xor
ljmp
das
cli
js
add
push
cmp
int
adc
xor
add
je
das
orb
cmc
push
loop
push
mov
mov
rcrb
ror
arpl
pop
scas
add
cmc
insb
or
je
add
jl
ljmp
sbbl
call
xor
cmova
cmpb
mov
cli
sbb
xchg
in
sbb
sbb
testl
gs
cmp
outsb
cmp
sbb
push
mov
push
fwait
add
cli
mov
add
lret
pop
inc
mov
cmp
mov
or
clc
call
jns
push
leave
std
jle
movl
call
std
jae
inc
adc
inc
fildl
add
xlat
mov
inc
adc
popa
mov
out
pusha
sbb
sti
out
nop
out
push
fs
add
push
push
mov
xor
mov
add
das
mov
cmovg
mov
jns
pop
dec
cmpsl
movsb
sti
iret
jl
pop
lds
mov
mov
xchg
out
push
gs
mov
nop
out
push
gs
stos
decb
sub
sbb
add
push
stc
sahf
dec
mov
push
dec
mov
push
call
dec
xlat
sarl
incl
cmpsb
fidivrl
push
xor
negb
leave
add
push
sbb
in
test
fs
sbb
jmp
push
xor
mov
add
xor
mov
push
add
adc
dec
add
stc
push
jnp
cmp
xor
out
rcll
stc
mulb
fstl
and
push
push
jg
and
push
xor
add
shl
pop
add
pop
mov
inc
idiv
cmp
adc
scas
repnz
loop
sti
mov
inc
idivb
cmpsl
pop
cli
pop
inc
mov
or
jmp
xor
xor
out
push
inc
imul
push
inc
idiv
roll
add
pushf
add
sub
add
add
add
mov
stc
stc
incl
add
cs
fdivs
insl
and
clc
sub
add
pop
insb
mov
add
std
or
loop
cli
ficomps
popa
int3
xchg
pop
mov
ds
rcll
mov
mov
scas
cmp
sub
stos
xchg
cmp
push
inc
push
xchg
mov
enter
sub
inc
dec
enter
add
xchg
in
xchg
sbb
ds
lcall
mov
gs
sahf
lods
cs
inc
push
cmc
push
xlat
and
push
leave
xchg
push
dec
jge
jo
repnz
idivl
idivb
inc
fldcw
jg
inc
pop
rorl
cld
leave
test
add
xor
push
stos
sbb
leave
test
add
xor
add
add
add
add
icebp
add
outsb
mov
adc
popf
push
lret
jmp
std
add
stos
mov
xlat
pusha
mov
mov
pop
pop
pop
jmp
push
lret
loope
out
outsl
fwait
std
andl
mov
xlat
jo
divb
je
fsubrl
in
pop
xchg
adc
xorl
jb
daa
stc
jns
xor
jmp
add
add
add
sarl
scas
and
add
push
dec
fs
dec
inc
ss
inc
scas
clc
bound
test
jge
fiadds
sahf
dec
lock
bound
std
xchg
test
push
xor
outsb
xchg
add
adc
xchg
outsl
pushl
jmp
inc
cmp
lret
jmp
movsl
insb
cld
bound
stc
add
idiv
nop
icebp
insl
and
add
shr
cmc
mov
push
pmaxub
adc
sub
add
xor
stc
cmovo
add
cmp
movsl
dec
or
je
scas
divb
je
aaa
inc
in
mov
mov
add
bnd
mov
or
stc
incl
arpl
adc
bound
cmp
push
add
jno
testb
enter
mov
jle
shll
hlt
and
xchg
movl
mov
xlat
add
inc
loop
jle
out
je
ss
jbe
or
or
faddl
pop
test
adc
loop
into
pop
mov
lret
lret
cmc
jle
add
jbe
jae
lcall
jmp
jle
icebp
mov
add
mov
add
in
push
xor
xchg
cmpsb
movsb
pop
xchg
jl
xlat
ljmp
jge
out
dec
jg
pushf
mov
out
jns
in
push
cmc
adc
insl
jg
pushf
out
xor
add
sub
add
sbb
mov
add
enter
shll
jbe
repz
pop
jnp
addr16
out
push
cs
jbe
push
leave
dec
inc
fcomi
mov
fwait
push
cs
dec
pop
add
shrb
cltd
inc
pop
cld
jb
lret
mov
lods
sbb
je
jecxz
push
xchg
push
sar
jmp
or
test
add
dec
fiadds
push
sub
jmp
mov
sub
inc
es
test
out
fwait
ljmp
pop
pop
cld
jle
dec
adc
push
ja
adc
mov
fdivl
popf
xchg
inc
test
js
adc
sub
scas
subl
add
dec
fldl
roll
imul
cmp
dec
out
inc
call
mov
mov
and
stos
mov
nop
mov
sub
ljmp
pop
sti
inc
mov
sub
sub
push
insl
loop
pop
leave
sub
or
cmp
jl
daa
call
push
inc
inc
jae
test
std
add
xchg
js
insl
lret
jbe
push
enter
mov
pop
fcmovu
insl
std
xchg
jbe
push
enter
pop
les
cmp
mov
icebp
xchg
movl
inc
stc
cld
push
cld
fiadds
jae
dec
test
cmpsl
sbb
push
daa
xor
testl
repnz
mov
pop
cli
test
add
mov
add
fisubrl
mov
add
xor
inc
ja
mov
call
add
bound
adc
ds
ret
je
sub
hlt
dec
inc
jo
js
mov
push
xchg
pop
arpl
mov
jmp
test
jae
sbb
sub
daa
repz
add
and
jle
testb
add
inc
jo
adc
xchg
sahf
xor
nop
psubusb
inc
add
icebp
and
sub
or
je
and
cmp
call
cld
ss
call
xor
aam
and
rorl
push
mov
push
je
add
sar
mov
mov
lahf
xchg
imul
add
add
add
add
and
jmp
push
inc
aaa
push
adc
sbb
xlat
ficomps
repnz
xor
cmp
roll
je
sub
and
mov
jmp
nop
and
add
mov
add
xchg
je
jmp
xor
je
fdiv
je
fmull
and
dec
icebp
push
add
nop
push
idiv
outsl
dec
mov
add
dec
insl
and
xor
adc
divb
divb
dec
incl
dec
icebp
push
add
mov
add
in
inc
mov
adc
gs
test
je
data16
adc
push
int3
mov
out
mov
cli
lret
pop
adc
lock
add
in
cmc
push
pop
in
cli
fmul
or
mov
lahf
jbe
sub
xchg
scas
adc
xchg
mulb
push
lret
jmp
mov
xchg
leave
xchg
std
mov
mov
ss
jns
push
xlat
std
addr16
dec
mov
add
or
call
jbe
cltd
das
jo
add
mov
loop
adc
out
push
mov
sub
and
xchg
jle
cmp
rclb
out
punpcklwd
xchg
outsl
out
gs
test
mov
mov
add
xchg
or
mov
loop
repz
add
add
xchg
popf
hlt
push
out
out
lret
xchg
or
mov
pop
out
pop
in
jge
mov
lret
fcoml
testb
je
sbb
xor
xchg
lret
test
popa
mov
test
add
jge
stc
xchg
stc
xchg
popf
jae
fdivl
mov
and
stc
adc
mov
mov
and
inc
clc
ja,pn
inc
inc
or
add
add
add
add
adc
inc
in
loopne
dec
lcall
adc
or
pop
aad
sub
xchg
dec
je
add
pop
and
ret
dec
test
jne
xor
pushf
out
stc
insl
int3
mov
xor
aaa
out
std
testl
lcall
divb
xor
jge
notb
add
xchg
mov
or
fwait
notb
and
test
jne
xor
or
stc
cmp
mov
not
out
int
std
lds
inc
call
xchg
push
leave
push
xchg
add
int3
nop
nop
adc
jae
add
icebp
cli
and
in
push
adc
sbb
bound
loopne
int3
nop
repz
add
xchg
dec
sub
xchg
pop
mov
outsb
idivb
mov
in
cmpb
std
jae
bound
adc
call
ror
ficoml
xlat
inc
insl
sarl
dec
dec
ds
sub
add
adc
jp
jge
lods
cli
inc
lock
push
push
fildll
pop
loopne
leave
hlt
mov
push
inc
jecxz
aam
jp
add
call
fsubrl
sbb
sahf
rclb
xchg
enter
std
lods
lret
and
push
ret
es
leave
fsubr
push
jo
lret
cmp
inc
icebp
sbb
jg
add
lock
leave
and
and
pop
mov
sub
inc
and
jbe
clc
mov
pop
jbe
add
insl
das
mov
cmp
dec
js
jmp
in
shrb
scas
arpl
xchg
test
sbb
stc
cli
xchg
lcall
out
leave
lock
stos
dec
xor
sub
daa
insl
dec
xor
push
xor
xchg
adc
jmp
adc
inc
dec
pop
push
scas
inc
loope
sldt
lods
add
or
add
pop
pop
cwtl
add
mov
call
push
les
jb
cmp
fsqrt
in
cmp
push
scas
inc
add
xor
insb
mov
inc
push
movsb
idiv
out
lods
inc
cld
scas
mov
in
sub
add
and
cmp
scas
add
sub
add
js
ljmp
xor
xor
aam
inc
aam
idiv
add
out
lods
inc
cld
out
mov
in
idivl
cmp
add
adc
js
outsb
add
in
scas
add
mov
or
outsl
mov
cld
xlat
push
push
push
inc
push
dec
dec
test
cmp
push
inc
dec
in
mov
stc
ljmp
arpl
adc
jge
repz
push
jae
pop
jle
test
add
xlat
std
sti
into
pop
push
xchg
imul
inc
xor
test
out
push
inc
mov
dec
inc
in
inc
inc
nop
mov
inc
add
push
inc
xchg
mov
inc
add
xchg
cltd
xchg
dec
inc
adc
mov
mov
mov
jmp
int3
push
push
insl
imul
insl
lds
push
imul
add
add
add
insl
add
push
imul
push
imul
in
pusha
dec
insl
mov
sbb
or
xlat
pop
and
jg
and
hlt
fwait
inc
jo
xor
xlat
xchg
test
movsl
or
fldt
mov
add
mov
add
int3
call
out
xchg
cmp
cmp
add
add
jno
jb
fadd
movsb
add
out
test
push
push
inc
dec
or
cli
fwait
jle
push
addb
xor
xchg
movl
cld
jmp
jge
adc
push
xor
cli
xchg
jo
bound
fadd
sub
test
sahf
xchg
xchg
jle
inc
test
jle
push
addb
xor
rolb
jmp
inc
aas
adc
add
leave
xor
subb
cmp
inc
adc
sub
jecxz
cmpl
inc
sub
in
out
testl
cmp
add
enter
xchg
lods
in
adc
dec
xor
xor
dec
aas
push
enter
divl
lahf
push
cld
loopne
cmp
out
cmp
add
add
add
add
sub
add
ja
and
pop
orb
add
sbb
rclb
mov
or
xchg
popa
stc
pushf
mov
dec
cld
sub
inc
stc
push
pop
pop
mov
cli
stc
enter
push
mov
std
mov
std
mov
ds
cmpl
std
jl
add
xor
rol
call
inc
clc
out
ja
mov
sub
jle
cmpb
jno
pop
lahf
loop
push
xlat
add
push
mov
sub
dec
pop
dec
pop
inc
push
mov
xlat
repnz
inc
ja
mov
ljmp
idivb
sbb
mov
mov
shrl
push
daa
adc
out
xchg
psubw
daa
incb
add
mov
or
out
jl
outsl
ret
or
shl
dec
jo
mov
xor
popf
mov
sub
push
mov
adc
inc
pop
mov
xor
outsl
js
mov
add
pop
inc
imul
pop
add
xchg
xor
aam
popa
push
mov
inc
jo
jo
cld
xor
add
cmpsl
das
push
inc
push
icebp
cli
movsl
enter
mov
jns
jl
clc
hlt
mov
pop
cmp
add
dec
loope
pusha
stc
cld
cmpsb
das
inc
jmp
int
or
push
xor
cmp
inc
in
sub
xor
jb
xor
aaa
in
out
sub
add
pop
xor
add
js
push
rep
or
add
call
push
into
xchg
xor
mov
sar
pop
rolb
divl
int3
cmp
ds
idiv
imul
pop
mov
xor
cmp
dec
push
cmpsl
jbe
mov
jne
mov
xor
sub
ds
divl
pop
cld
jbe
mov
xor
add
ljmp
imul
mov
sub
or
cmp
add
push
sarl
loopne
sar
insb
popa
push
inc
cld
lret
xor
cs
in
inc
push
xchg
mov
push
aas
xor
pop
push
std
mov
imul
push
jo
idivb
les
jo
fsubp
adc
mov
add
inc
push
sbb
pop
sbb
mov
shl
adc
push
xchg
cmp
push
xchg
and
add
mov
je
dec
pusha
jo
cmpl
and
es
lret
jno
test
or
lock
xchg
les
dec
test
fs
dec
xor
clc
mov
and
jecxz
adc
mov
add
pushf
pop
push
inc
jecxz
push
cmpsl
fisttps
dec
leave
into
mov
and
test
fisttpll
pop
mov
xor
das
sub
dec
cmpsl
add
push
roll
repnz
add
aaa
mov
inc
loope
cmp
sti
iret
mov
jns
and
ficoml
pop
push
xor
add
add
ds
fxch
mov
stc
jmp
pop
mov
in
mov
lds
lret
push
add
sbb
mov
inc
jmp
push
inc
pop
push
mov
add
rcll
push
or
and
ret
test
or
mov
adc
rcrb
add
pushf
mov
je
fs
call
jecxz
addl
inc
and
mov
jne
test
pop
mov
and
mov
es
std
push
or
scas
divl
call
test
inc
cmp
clc
pop
call
test
inc
xor
pop
sbb
sarb
divl
mov
xor
adc
add
add
add
lahf
inc
fildl
mov
dec
inc
push
push
sbb
std
les
repnz
mov
inc
push
push
scas
jecxz
pop
dec
loopne
xchg
adc
in
dec
inc
repnz
push
jbe
test
mov
jbe
adc
icebp
and
mov
inc
outsl
mov
adc
jo
rclb
sbb
add
add
add
add
pop
mov
or
or
decl
jo
and
loop
pop
sbb
roll
mov
add
adc
cmp
mov
addr16
jle
out
pushf
cmpsl
and
xchg
jae
add
stos
and
add
jp
aad
loop
cli
das
out
xlat
jb
in
pop
sti
pop
cmc
aam
data16
inc
jecxz
inc
add
sbb
mov
je
es
lret
push
pusha
sbb
jge
cmpsl
add
pop
inc
dec
inc
mov
mov
push
adc
push
je
mov
pop
dec
adc
dec
cmp
mov
xchg
sub
inc
mov
sbb
shl
cmp
pop
fisubrl
lds
cli
mov
clc
je
xchg
push
add
add
add
add
add
leave
xor
cmpsl
stc
dec
insb
outsl
rclb
xor
mov
inc
sub
cli
imul
mov
stc
ljmp
sub
icebp
or
jmp
cmp
call
mov
xor
jg
clc
lea
call
mov
add
nop
add
push
sub
add
test
fs
push
iret
cmp
mov
or
inc
cmp
ja
jge
jle
testl
je
je
out
jns
mov
aam
jne
std
mov
xchg
dec
dec
stc
sub
push
call
add
aad
js
les
stc
scas
aad
mov
dec
mov
add
stc
xchg
sbb
and
ja
mov
and
stc
jle
in
jae
cmp
stc
fdivrs
push
notl
cmp
out
stc
les
cli
dec
aaa
jnp
cmp
js
stos
movl
mov
jp
push
pop
push
xor
call
add
xor
push
xor
push
xorb
jle
sub
mov
jmp
add
cmp
cmp
push
add
dec
jmp
test
lods
cmpsl
ja
add
add
cs
ja
test
out
sbb
jg
sbb
cltd
icebp
ret
inc
inc
enter
mov
int
add
push
sub
push
xor
jle
push
cmp
fwait
or
callw
pushf
and
mov
jb
mov
jecxz
loope
test
jl
je
inc
das
test
gs
pop
pop
xor
mov
out
jmp
cmp
add
or
fistpl
inc
aaa
sahf
add
popa
cli
mov
fstp
sub
sbb
leave
addl
sub
leave
sti
and
add
gs
add
push
cwtl
add
das
sub
nop
call
cmp
add
out
add
push
push
jg
push
shrb
xchg
mov
aaa
cmp
addb
add
sti
idiv
cmp
jnp
nop
sub
push
leave
stos
sub
push
xlat
in
in
ret
push
lea
sub
pop
scas
push
inc
push
in
je
or
loope
sub
add
jg
sbb
in
std
in
push
push
mov
dec
insl
mov
sbbl
std
jb
out
add
stc
xchg
stc
ficompl
and
sub
sbbb
dec
inc
gs
xor
test
les
les
int
mov
xor
dec
adc
inc
rorl
jno
adc
mov
shll
icebp
add
push
fldt
jmp
int
je
dec
cmp
dec
cld
popa
mov
incl
js
stos
nop
inc
ljmp
clc
pop
push
fwait
add
lods
into
pop
add
insl
cmp
jp
lods
daa
ja
lods
daa
sti
insb
and
out
inc
mov
inc
push
lods
sub
shl
xchg
adc
jge
jnp
and
dec
lods
mov
push
ds
xor
shlb
loope
mov
or
sub
adc
xor
add
and
imul
add
mov
add
push
jo
js
stos
add
and
ja
sub
das
sub
test
test
xor
fstps
stc
ss
jge
cli
mov
pushf
ljmp
pop
push
xor
hlt
adc
mov
frstor
add
adc
adc
inc
sti
push
flds
stc
cmpb
add
sub
mov
pop
sti
push
mov
pop
test
xchg
xchg
sub
icebp
jb
mov
jne
mov
call
inc
sub
mov
jecxz
mov
cld
cmp
testb
fistpl
mov
jno
add
add
sub
add
mov
testb
arpl
inc
add
test
imul
mov
je
das
cmp
repz
imul
je
repz
mov
cmp
add
push
adc
or
notb
cmpsl
unpcklps
add
or
out
xchg
and
ss
push
xor
addr16
adc
in
adc
adc
add
add
add
xchg
stos
pop
push
out
jge
xchg
cltd
add
sbb
je
mov
clc
inc
pop
jp
insl
sbb
and
ret
mov
xor
adc
bound
pop
fcmovnu
dec
mov
sub
scas
enter
mov
das
repnz
enter
add
std
cmovs
mov
mov
lock
add
or
jb
jle
scas
fcos
testb
mov
sti
testb
jle
push
jecxz
insb
xor
aam
outsb
inc
dec
sbb
neg
and
sbb
imul
negl
add
push
outsl
jo
les
mov
repz
imul
add
xchg
xor
bound
push
add
add
adc
insl
clc
fldt
adc
sbb
cli
jle
out
add
out
int3
popf
jmp
jnp
sub
lea
sbb
popf
cwtl
ret
lahf
push
xor
jae
repnz
jno
mov
xchg
cmp
or
or
add
inc
cmp
jns
lods
jb
dec
pop
adc
cmp
pop
add
inc
and
bound
or
stos
in
int3
movsb
in
int3
dec
sub
push
repz
jge
push
cmp
daa
sub
add
xor
push
xor
adc
xorl
inc
je
mov
pop
sub
jnp
nopl
adcl
xchg
add
das
je
xlat
xlat
idiv
aaa
cwtl
push
pop
sub
clc
cmpsl
jle
fsubl
addb
not
cmp
or
insb
mov
je
es
and
imul
rcr
cld
test
lea
adc
je
push
xor
push
cmp
add
sarl
xchg
jbe
gs
ds
fdivs
lret
push
ficompl
push
es
push
dec
sbb
rclb
push
add
push
push
mov
xchg
adc
mov
call
xor
mov
cmp
pop
sbb
add
test
popf
or
in
xor
int3
test
out
xor
les
outsl
mov
push
add
push
jns
adc
mov
or
lock
dec
and
xor
add
xor
and
xchg
pusha
pop
mov
pop
and
mov
inc
push
xor
inc
das
stc
add
cmp
mov
mov
jge
mov
jge
mov
jl
jp
pushl
jl
lods
push
add
test
test
push
jno
sbb
imul
mov
mov
lock
add
push
dec
sbb
pop
jmp
enter
lea
daa
cs
sub
cmc
pop
pop
pop
insb
sub
out
push
sub
stos
sub
xchg
outsl
xchg
test
jmp
push
sub
and
sub
xchg
std
mov
add
test
push
xor
add
test
push
je
repz
pushf
call
add
and
mov
sub
lea
insl
mov
sub
adc
mov
inc
addl
pop
or
inc
aam
aas
dec
jne
je
jae
dec
mov
sti
addb
scas
inc
or
sbbl
mov
addr16
or
mov
push
addl
fsubs
out
das
and
insb
fcmovbe
xor
xchg
in
frstor
cwtl
adc
mov
lcall
push
or
jae
sbb
push
cwtl
std
jmp
pushf
mov
rclb
add
leave
cli
ds
adcl
push
and
add
cmpsb
popf
add
push
insl
aas
inc
into
test
sbb
push
cltd
std
jno
mov
out
cwtl
mov
lcall
push
xor
xchg
mov
out
int3
mov
push
xor
rcll
outsb
in
push
xor
int3
cmp
pop
push
aam
pop
push
cmp
scas
cmp
cwtl
out
push
xor
dec
xor
add
inc
xor
inc
movsb
mov
cmp
sub
cmp
pop
mov
fiadds
cmpsb
out
pop
movsl
bound
push
and
mov
mov
add
inc
outsb
loope
aas
cmp
call
mov
fmulp
fadds
jmp
xlat
cli
pop
bound
movsb
test
push
xor
jmp
push
pop
sarb
dec
shlb
add
xchg
add
push
adc
jmp
jbe
jmp
sbb
test
shrl
daa
xchg
cwtl
pop
lea
cmpsl
test
aad
adc
jle
test
xchg
stos
push
std
vmovntpd
ret
call
pusha
es
lock
addl
add
mov
cs
adc
dec
push
push
cltd
mov
add
add
add
add
mov
subl
hlt
cwtl
lret
popl
add
pushl
push
xor
imul
test
xor
add
add
ret
add
or
mov
sti
rcl
sub
mov
push
leave
push
cmp
imul
adc
mov
add
cmp
js
ficompl
in
pop
dec
add
pop
rcrb
test
mov
jle
jp
or
js
push
dec
cmp
in
arpl
add
sub
dec
push
cltd
xchg
or
mov
orl
incl
arpl
dec
lret
push
cltd
std
lcall
add
sbb
aad
int3
or
cmp
lcall
pop
inc
jge
loope
push
xor
frstor
in
add
dec
scas
pushf
sqrtps
imul
mov
mov
jne
int3
jmp
outsb
xor
mov
xchg
dec
add
pop
cs
ljmp
int3
stc
lea
out
add
movsl
dec
sbb
aam
pavgb
popa
pop
in
popa
bound
subb
inc
test
cmp
push
dec
mov
jno
and
out
mov
add
cmp
mov
jle
push
xor
popl
add
imulb
imul
bound
adc
push
stos
inc
dec
fsub
movsb
notl
or
and
mov
adc
push
push
std
pusha
pop
pop
incl
dec
faddp
out
mov
bound
cmp
mov
movsb
sbb
shrl
add
or
enter
mov
xor
add
add
add
add
push
inc
add
insl
loop
mov
in
jmp
and
mov
add
test
shrl
inc
jle
cmpsb
sub
mov
or
xchg
test
test
cmpb
ja
scas
icebp
add
pop
dec
mov
stc
pop
pop
test
dec
mov
cmp
xchg
orl
xor
dec
inc
add
lret
movsl
adc
xor
iret
inc
or
xchg
ds
ja
add
push
inc
insb
lret
test
arpl
xor
call
push
mov
or
call
inc
insb
fidivrl
mov
dec
inc
pusha
push
mov
call
add
inc
mov
and
pop
ds
push
mov
adc
cmp
add
xchg
add
ds
outsb
jb
inc
out
jl
add
icebp
inc
out
int3
lods
dec
repnz
lahf
pop
add
andl
mov
add
xor
mov
mov
jo
xor
push
xchg
dec
cs
push
das
jnp
test
xchg
mov
sahf
ljmp
in
mov
add
add
add
mov
ljmp
xor
aam
cmp
dec
cwtl
xor
or
add
fcomip
imul
stc
int
pop
xchg
mov
sub
sbb
cltd
stc
jle
cli
sub
dec
stc
mov
xor
cwtl
ficoml
call
dec
xor
ja
inc
add
sbbl
mov
mov
loope
add
in
pop
jne
ret
dec
mov
bound
push
mov
pop
jge
xorb
out
mov
sbb
daa
xchg
test
add
ret
jmp
mov
je
lods
dec
pop
lods
out
pop
ret
ljmp
icebp
or
dec
push
rolb
insb
jae
jnp
clc
test
mov
stos
incb
insb
adc
call
push
push
mov
push
ret
fs
int3
int3
fs
in
push
fisubrs
stc
ljmp
jmp
stc
ljmp
and
xchg
mov
push
xchg
test
add
push
mov
jmp
mov
or
loopne
test
mov
incl
add
test
push
aaa
inc
test
push
das
insb
fisubl
inc
cmp
inc
rcpps
mov
dec
lea
fiaddl
mov
add
imul
jb
or
push
iret
mov
push
das
inc
aaa
push
push
insb
das
and
inc
fcmovbe
pop
test
sbb
add
ljmp
add
icebp
mov
push
pop
push
jno
push
xor
push
cmpsl
sbb
jmp
nop
aaa
fwait
out
push
and
xor
xor
dec
test
in
dec
imul
push
xor
dec
inc
scas
pop
add
pop
jne,pn
mov
pop
xchg
out
lcall
adc
data16
out
adc
loop
sub
add
cmpsl
cltd
xor
pop
aam
incl
insl
test
fstps
or
fsubr
ja
iret
jno
pop
mov
add
lods
mov
sbb
mov
xlat
push
xor
jmp
sub
mov
mov
cltd
fwait
dec
cld
cltd
stc
out
rclb
xchg
xor
jle
cwtl
in
xor
jmp
add
pushl
add
and
enter
mov
dec
fidivrs
jge
incl
pop
daa
mov
xchg
xchg
add
lahf
stos
jp
mov
and
jno
add
js
mov
mov
es
push
xchg
stc
cmpsb
lret
sub
sub
je
je
mov
orb
inc
add
arpl
or
xlat
pop
inc
addl
inc
cmpsl
inc
pop
jae
xor
enter
ljmp
mov
dec
mov
ds
fildll
adcl
addb
scas
inc
fsubl
inc
push
adc
inc
fiaddl
inc
js
push
std
pop
cmc
add
cmp
insb
add
std
rorb
std
call
add
insb
jae
stc
fidivrl
cmp
add
add
add
and
test
mov
mov
pop
sub
cwtl
xor
push
adc
dec
cmp
enter
lret
jbe
mov
mov
sar
jle
adc
jp
sarb
std
or
cli
cld
call
cmp
mov
xlat
in
out
aam
mov
pop
test
ds
cmp
orl
add
add
add
fnstcw
out
int3
cmpsb
xchg
outsb
xchg
outsl
or
jno
inc
xor
add
mov
fs
mov
imul
pop
imul
push
scas
push
mov
stos
mov
mov
add
add
in
sarb
mov
hlt
iret
in
call
add
add
scas
adc
stc
push
push
push
sbbb
jne
cli
add
out
iret
sbb
push
repnz
icebp
lods
inc
adc
jmp
int
test
test
inc
add
addr16
bound
out
test
inc
add
cmpsl
stos
cwtl
call
mov
sbb
xchg
stc
out
call
mov
jmp
add
fdivrs
rcrl
bound
sti
cld
mov
sub
or
xor
insl
cmp
pop
jmp
sti
leave
arpl
sub
jmp
mov
sub
adc
mov
pusha
call
mov
cmp
cmp
pop
setge
stos
insb
cli
pop
sti
stos
mov
add
push
xor
add
adcl
lret
adc
sti
shl
add
imul
js
dec
clc
xor
cmp
dec
hlt
xchg
lret
aad
ret
test
inc
adc
andl
and
push
cld
dec
ror
xor
int3
popf
pop
ror
inc
ror
mov
in
lret
push
and
lret
jp
add
cmp
cmovge
pop
clc
xchg
mov
sub
add
cmpsl
incb
popa
test
dec
jns
jo
and
fcomps
jbe
xor
xor
push
test
mov
mov
and
xchg
out
nop
mov
in
mov
sub
test
ret
or
and
push
fcoms
rolb
add
sub
mov
lea
cmpsl
pushf
sti
cmp
xor
movsl
pop
inc
add
jns
pop
and
push
fistpl
outsb
jecxz
jmp
cmc
movsb
or
cmp
and
lods
mov
jge
add
rcll
push
bound
cs
out
jbe
push
add
pop
push
jge
pop
pop
std
imul
push
add
sub
insb
std
mov
xchg
or
or
xor
sbb
pop
dec
je
and
and
mov
and
adc
loope
lock
push
xor
sbb
call
inc
jp
pop
stos
sbb
stc
cs
rorb
add
add
ror
int3
lods
ror
int3
push
adc
dec
xor
scas
add
call
scas
jne
push
divl
inc
clc
pop
cmp
push
mov
dec
sbbl
and
and
xchg
push
mov
mov
mov
sub
cmc
lret
sbb
bound
sub
mov
les
insl
or
inc
mov
pop
add
pop
outsb
adc
mov
or
mov
sbb
inc
xor
sub
push
push
lods
subl
clc
test
cmp
and
enter
lock
xchg
pop
jg
mov
incl
std
lret
int
mov
test
dec
jno
cmp
pop
push
xchg
rclb
sbb
inc
sub
int3
add
test
js
inc
push
dec
xor
pop
ja
fsubrl
xor
or
fldl
sahf
sub
into
shlb
stos
call
not
xchg
push
fisubrs
xor
add
insl
out
jae
ret
idivb
sub
arpl
xchg
inc
pusha
inc
jge
mov
insb
or
js
pop
dec
daa
pop
pop
cmp
add
xchg
pop
add
xor
cwtl
ja
push
xor
cmp
shrb
divb
adc
jae
inc
and
pop
add
or
jg
mov
repnz
mov
jns
sbb
mov
popf
into
jae
ret
and
mov
cmpsb
cmp
xor
bound
add
pop
jge
fnstenv
push
add
mov
mov
scas
bound
stc
add
shll
mov
int
pusha
insl
in
push
jg
mov
jmp
jecxz
jnp
pushf
out
fwait
test
mov
out
leave
or
in
roll
or
sub
jge
or
add
add
add
add
xor
insl
or
mov
adc
xor
add
std
out
test
clc
push
dec
or
addl
push
xor
mov
jne
inc
pop
push
call
loop
mov
popa
adcl
lock
add
xchg
or
push
sub
decl
fisttpll
cmpl
and
jae
or
xor
daa
sub
test
lret
rcl
cld
xchg
hlt
insl
pop
or
pop
jg
gs
push
test
push
popa
std
gs
fcomip
dec
push
xchg
jbe
imul
xchg
jp
dec
test
call
lret
sub
add
inc
sub
std
ljmp
out
pushl
aas
and
xchg
std
adcb
push
leave
dec
mov
rcll
mov
jno
out
nop
fistpll
sar
jno
mov
sub
add
cwtl
jle
push
adc
mov
clc
jbe
out
dec
pop
mov
cld
int
outsb
rclb
push
shll
out
add
adc
push
mov
test
scas
sub
shll
or
xchg
mov
add
das
ss
das
jge
jecxz
clc
out
aam
jmp
in
imull
jge
icebp
mov
or
xchg
xor
sub
mov
std
ret
mov
js
mov
jb
cmp
sub
push
mov
add
push
mov
adcl
cli
flds
xor
insl
scas
pop
add
mov
test
add
xchg
pop
outsb
nop
punpckhwd
and
jmp
push
xor
add
pop
jl
repz
call
jecxz
and
repz
or
add
aas
adc
xor
add
pop
fdivl
inc
test
add
sbb
insb
sahf
dec
call
or
sbb
mov
call
jae
jae
lods
jne
test
jge
cwtl
sub
testl
out
jp
mov
aad
push
ja
fcmove
rcrb
xchg
add
xchg
lret
xchg
call
adc
fcmovb
mov
adc
outsb
in
gs
add
in
fstps
mov
pop
cs
xor
orl
test
test
fsincos
cld
out
xchg
std
in
push
ret
jne
jnp
xchg
hlt
subl
clc
or
jbe
mov
jle
push
add
test
dec
fcmove
das
stos
and
outsl
xchg
in
int
push
add
imul
js
push
outsb
shll
repnz
xor
add
clc
jnp
xchg
test
dec
sbb
jbe
xchg
outsl
cmp
mov
jo
imul
incb
out
out
xchg
bound
push
add
aas
mov
push
aaa
imul
xor
mov
repnz
movsb
pop
add
and
sbb
pop
jo
lock
test
stc
push
xchg
jmp
jle
in
clc
test
fsubp
pop
cmp
xor
loope
pop
sub
cs
add
inc
stc
push
xor
jmp
push
xor
es
xor
push
cmp
mov
test
scas
inc
pop
into
lds
xlat
movb
into
adc
add
mov
inc
adc
loope
test
xor
mov
xchg
dec
inc
repz
mov
je
add
sub
mov
jecxz
js
loop
sub
addl
dec
clc
mov
sbb
add
xor
call
orl
dec
push
rcrb
inc
add
mov
clc
popa
cli
pop
mov
shrb
push
adcb
ja
push
xchg
push
sbbl
cmp
rclb
call
inc
adc
std
incl
add
xchg
push
xchg
cmpb
push
test
jge
jmp
push
nop
inc
push
mov
inc
xlat
mov
add
fcoms
adcl
faddl
adc
je
add
pop
dec
in
inc
adc
fistl
mov
rolb
push
clc
shlb
test
gs
inc
fnsave
cld
arpl
mov
inc
xchg
add
push
xor
sbb
repnz
lea
add
mov
pop
fbstp
push
mov
into
mov
jl
inc
lea
aaa
test
mov
mov
mov
xchg
xor
add
dec
xor
cmpsl
pop
push
xor
add
in
es
xor
enter
add
and
and
add
outsl
add
ds
xchg
jo
daa
xor
add
daa
mov
mov
add
rep
dec
shrl
adc
lock
stos
adc
bound
pop
xchg
icebp
aas
incl
je
aad
repz
test
mov
xor
jge
lods
dec
cmc
lret
bound
sub
mov
xor
icebp
lret
out
repz
add
push
in
int
mul
leave
cs
push
lea
jb
push
subl
cmp
push
jno
add
add
addr16
add
add
notb
stos
xchg
xchg
sub
sti
add
cs
mov
roll
jb
loopne
lods
mov
add
scas
notb
fisubl
iret
es
add
pop
mov
sti
pop
shrl
fwait
mov
shlb
adc
les
orl
orl
out
das
add
add
pop
add
aad
dec
clc
sub
dec
clc
push
adc
fcomps
rorb
call
or
xchg
jle
jno
fistpll
std
or
outsb
or
push
mov
scas
movsb
mov
add
rorb
xchg
ds
xlat
rclb
insl
cmpsl
inc
test
cmp
clc
push
xchg
inc
ficoml
call
sub
mov
test
rolb
xlat
sub
push
xchg
std
jl
mov
or
adc
add
or
add
andb
into
call
outsb
push
add
fldcw
or
out
dec
xor
or
arpl
add
aam
push
xor
dec
xor
sbbb
out
cmp
sub
test
addr16
add
fldl
push
lods
or
hlt
push
push
push
lret
add
data16
dec
xor
xchg
sub
add
in
mov
sbb
and
push
sbb
sbbb
add
add
das
mov
cwtl
mov
jg
mov
dec
in
sarl
adc
stos
cmp
lods
push
sub
jmp
jmp
push
jmp
flds
or
xchg
xor
add
mov
call
sub
xor
jmp
xorb
jmp
xchg
sbb
add
xor
jmp
sti
jl
xchg
push
xor
add
mov
rcll
mov
and
jl
mov
pop
test
add
incb
or
sarl
subl
fadds
inc
outsl
add
gs
rcll
xor
cmpsl
scas
adc
push
mov
jnp
movsb
xor
add
add
add
add
xor
paddb
add
js
decl
push
repnz
rorb
sbb
ljmp
scas
inc
cld
jae
outsb
add
xchg
arpl
jb
add
xchg
addl
xchg
clc
fimull
xorl
ret
std
test
inc
cld
js
mov
adc
add
into
cmp
call
cmc
push
insl
outsl
or
and
or
cld
push
pop
jns
dec
xchg
or
adc
int
leave
add
add
push
dec
cmp
stc
test
or
mov
call
inc
ret
xor
outsb
int
nop
fiaddl
xor
or
push
sbb
add
jl
mov
sub
jp
leave
sbb
push
nop
hlt
into
add
out
push
pop
out
push
test
mov
xchg
xor
test
add
or
mov
pop
push
push
pusha
pop
inc
aam
out
mov
stc
ljmp
mov
outsl
rcrb
sub
add
lds
xor
mov
outsl
mov
xor
xchg
loope
fsubrl
push
add
push
inc
inc
add
and
push
xor
bound
or
ss
fistps
cmp
push
cmpsb
bound
rcrl
cmp
sbb
call
loope
call
push
loopne
add
push
xor
add
bound
mov
cs
mov
jnp
push
lods
cmp
test
sub
add
and
add
movsl
aas
fs
pusha
cmp
dec
pop
sbb
add
jae
push
mov
mov
in
sbb
xor
jns
jmp
or
mov
lret
xchg
pop
test
add
add
jg
cli
lods
ret
pop
aam
dec
mov
jp
pusha
sub
std
call
movsb
test
lds
ficoml
lods
or
mov
rcrl
or
jge
pop
cs
adc
or
ror
in
cwtl
xchg
xor
inc
imul
fcmove
call
rol
pushl
push
in
mov
xchg
call
cmp
push
pop
jns
dec
xchg
or
test
int
push
dec
hlt
adc
mov
aas
push
mov
test
mov
aam
mov
add
stos
je
fs
dec
mov
std
jns,pn
insb
xchg
icebp
inc
mov
lods
movl
hlt
sub
in
cmpsb
sub
jl
in
mov
out
jae
sbb
push
sub
ljmp
test
data16
mov
xor
add
in
sbb
mov
gs
inc
sub
xor
adc
mov
mov
sub
jp
adc
add
mov
sar
sti
jmp
push
xor
lahf
push
jns
int
push
leave
fldpi
fldt
shlb
ljmp
mul
mov
lods
mov
test
xchg
lea
inc
or
jbe
mov
js
repz
mov
jmp
push
shll
std
mov
hlt
lds
push
add
je
jecxz
in
jnp
inc
add
jmp
pushl
jmp
out
dec
jnp
cmp
insl
in
mov
add
xor
xor
push
ret
testl
mov
add
pop
scas
mov
clc
xor
add
imul
fwait
lock
dec
test
fmull
add
mov
faddl
push
icebp
hlt
dec
push
mov
fcom
dec
std
xorb
mov
movsl
jl
add
dec
fadd
inc
push
mov
mov
add
jp
mov
jg
xchg
xlat
push
push
outsl
stos
inc
push
xchg
fmul
incb
rolb
fidivl
roll
dec
jp
call
xorl
push
std
call
xor
push
jns
jg
testl
xor
aad
jle,pt
andb
test
outsb
inc
jno
xchg
adc
fldt
push
loopne
push
into
aad
jl
xor
mov
xor
jle
sub
push
test
scas
jle
xor
pop
cmp
enterw
add
add
add
add
adc
iret
loop
jnp
js
inc
add
xor
enter
add
mov
pop
push
xor
jge
call
movsb
nop
lods
mov
jmp
mov
test
and
dec
jb
test
and
insl
xchg
stos
stc
push
je
mov
jmp
mov
add
fdivrl
and
gs
nop
in
cmp
call
jg
fidivl
jo
jl
scas
cmp
shr
xor
jmp
adc
add
xor
mov
mov
rorl
hlt
inc
in
mov
add
add
add
adc
inc
hlt
cmp
mov
das
scas
dec
and
cmp
sub
sti
shlb
outsb
pop
arpl
test
stos
inc
cld
add
stos
sbb
sub
testl
popw
mov
hlt
cmp
out
cld
rolb
add
clc
cs
loopne
icebp
jecxz
push
ret
cld
xchg
cmp
add
xchg
xchg
pushf
or
inc
lret
or
test
dec
xorb
les
or
cmp
jnp
xchg
pop
std
fiaddl
out
xorb
or
adc
jp
jl
xor
pop
jl
xchg
or
jae
ret
push
xchg
out
cmp
mov
add
adc
add
add
add
push
xchg
add
std
clc
xor
pop
push
xor
pop
and
pop
imul
add
sub
add
cmp
sbb
sub
inc
xor
add
jmp
mov
xorl
xor
xchg
sub
add
in
or
sbb
movsl
adcb
jo
cmp
shr
int
loopne
imul
out
or
push
mov
dec
cmpsb
add
mov
outsb
cmp
lods
sbb
jmp
push
xor
call
test
mov
sbb
sub
in
mov
loope
mov
xor
push
je
fmulp
pusha
std
call
movsl
in
bound
add
fdivrs
inc
in
stc
jmp
test
xchg
xor
in
scas
out
and
fs
xor
or
stos
orl
cs
sub
xor
rcr
call
mov
hlt
stc
lret
add
stc
call
addl
scas
dec
dec
ljmp
jb
rclb
push
sti
sbb
cmp
push
call
inc
fcoml
cld
inc
sub
mov
ljmp
jo
clc
ljmp
xor
loopne
sub
adcl
xchg
pushf
or
shlb
ficoml
add
xchg
int
call
push
sbb
xor
pop
and
test
add
lret
out
pop
outsl
push
mov
in
sub
insl
rolb
or
cwtl
std
out
pop
std
fimull
cmc
mov
sbb
xchg
push
std
adc
std
test
add
in
out
loope
xchg
shl
push
cmp
mov
sbb
out
jl
push
push
ss
mov
out
push
addl
xlat
mov
jb
cmp
out
push
dec
out
push
mov
mov
cmp
out
sbb
cmp
mov
cmp
outsl
jo
add
inc
sub
push
dec
out
push
cmp
add
cmpsl
imull
mov
loop
adc
mov
adc
inc
fs
add
ljmp
dec
xchg
pop
idivl
jo
mov
test
cmp
jb
lock
mov
xchg
sub
repz
xor
sub
icebp
repz
add
mov
pop
cld
clc
fistl
mov
inc
push
ljmp
pushf
mov
aaa
in
repz
test
add
pop
inc
das
and
mov
insl
in
stos
sbb
pop
jmp
add
das
mov
add
pop
cli
call
push
add
sub
pop
inc
out
and
mov
mov
add
add
add
add
das
add
loope
stc
mov
push
add
std
dec
and
sti
adc
add
das
pop
mov
cwtl
inc
cld
repz
loopne
mov
or
stc
testl
push
mov
inc
inc
fidivs
or
or
popl
mov
call
cmp
push
dec
add
jge
xchg
ds
std
in
jno
aaa
push
pop
jbe
dec
fimuls
fcoms
or
adc
jbe
rcr
loopne
xchg
das
sbb
push
into
mov
mov
mov
pop
fsubs
mov
ficompl
les
lret
sti
adc
daa
f2xm1
out
movsl
sbb
ljmp
add
add
add
out
test
out
sarb
bound
cmp
push
xor
cmp
push
loop
jmp
add
outsb
add
loop
fildll
test
jp
mov
iret
add
jecxz
mov
jnp
cmp
inc
push
jno
or
out
push
lods
dec
add
js
jg
push
add
or
bound
mov
icebp
lret
cmc
out
mov
bound
mov
in
fistpll
xchg
popf
pop
cmp
push
pop
test
mov
sub
jmp
adc
push
add
hlt
test
clc
or
pusha
xchg
sub
sti
jo
inc
xchg
add
push
jmp
rcll
and
fistpll
aam
mov
dec
push
mov
add
fwait
adc
sbb
insl
and
daa
loopne
add
testl
cmp
push
mov
call
stc
mov
mov
add
out
fildll
ss
inc
loopne
push
adc
in
sbb
add
add
add
daa
fs
mov
je
sub
or
add
or
mov
int3
push
cmp
xchg
cmp
sbb
and
push
test
call
fcoms
js
shlb
adc
cmp
push
pop
std
call
adc
jb
push
cmp
push
pop
std
ficompl
mov
add
popf
inc
shlb
or
add
lcall
rcrl
call
add
ficompl
rclb
xor
aad
dec
cmpb
sbb
fimull
mov
mov
or
cwtl
stc
cmpsb
in
test
inc
fsubrs
xor
lds
mov
aam
movsb
lds
ljmp
xor
ljmp
test
and
jge
cmpsb
jmp
xor
in
insl
xor
xor
out
push
xor
out
inc
xor
cmp
xor
xor
and
xor
adc
xor
sarl
mov
jne
into
insl
xor
xor
inc
jns
add
and
adc
add
and
pop
mov
xor
and
pop
outsl
and
xor
ds
xor
push
je
mov
dec
cmp
cmpsl
push
mov
jge
stos
dec
vpunpcklqdq
out
xor
add
cmp
stos
dec
add
bound
jg
lods
push
outsl
inc
std
push
xor
jmp
add
add
add
popf
movsb
pop
sub
sub
add
xchg
idiv
pop
repnz
ret
int3
int3
in
jg
int3
cmp
int3
int3
sub
int3
int3
mov
in
push
repz
sub
add
in
notb
and
sarb
das
insl
comiss
cmp
mov
jge
mov
mov
inc
add
dec
ljmp
les
daa
test
rolb
in
push
add
sub
dec
mov
mov
cld
arpl
add
mov
nop
testl
and
mov
dec
lods
mov
push
add
jge
push
test
dec
or
sbb
xchg
mov
add
mov
ret
push
pop
std
call
mov
movsb
push
leave
int3
or
movsb
mov
andb
add
add
add
add
xor
push
push
xchg
cltd
add
std
out
dec
cltd
stc
lret
jge
push
xchg
aam
pop
or
sbb
stc
int
cld
rorb
mov
xchg
fsub
nop
adc
inc
arpl
orl
nop
mov
fs
lahf
in
imul
xchg
mov
add
outsb
push
dec
add
mov
into
aas
mov
mov
das
out
push
xor
rolb
lods
sti
sete
cmp
int3
pop
aaa
xchg
fs
push
xor
push
mov
mov
sub
mov
fdivs
push
mov
icebp
out
les
push
sub
mov
add
in
sti
push
pop
mov
sub
imul
mov
jecxz
in
js
lods
out
mov
pop
mov
dec
mov
movsb
jmp
popf
mov
sub
and
in
sti
push
push
mov
test
inc
add
hlt
sti
add
xchg
sub
xchg
ret
add
mov
nop
xchg
or
jge
pop
xor
sbb
ret
in
aaa
or
jmp
or
sub
xor
std
add
cmp
cltd
sub
leave
std
addb
push
mov
les
idiv
cltd
mov
sub
add
or
sbb
daa
clc
pop
addl
xchg
jl
mov
ds
push
dec
std
call
cmp
dec
mov
test
leave
int3
lea
leave
int3
popf
cmp
in
rcr
loopne
lret
push
push
loop
or
jmp
cld
cmpsb
xor
mov
xchg
and
call
add
add
add
sub
rclb
adc
bound
cmp
cmpsb
xor
inc
push
dec
mov
shrb
stos
or
ja
cmp
pop
push
imulb
lahf
fcomps
add
pusha
cmp
data16
out
scas
enter
or
aas
push
mov
or
hlt
jp
xchg
jecxz
xlat
cltd
jecxz
push
xor
lret
dec
mov
add
xor
pop
loope
fimuls
xor
scas
pop
rcrb
stos
mov
aam
adc
xor
out
push
pop
data16
sbb
push
pop
in
in
daa
outsb
jb
int
jmp
popa
pusha
in
fldl
in
pusha
cltd
pusha
test
dec
test
fwait
inc
shll
push
inc
in
add
mov
in
cmpsl
ja
and
mov
loope
xor
inc
in
out
wrmsr
add
inc
subl
int
mov
mov
cmc
pop
out
dec
jb
sub
in
push
into
push
aas
xor
stos
leave
mov
push
mov
add
cmp
and
js
or
mov
push
subb
test
cmpb
add
add
add
add
xor
jae
fnstsw
cltd
mov
sbb
dec
call
lock
lock
mov
dec
mov
or
cmc
repz
mov
push
or
push
mov
pop
cmp
mov
pop
push
pop
ret
mov
in
cmpl
or
inc
or
push
cmp
incb
add
mov
push
dec
std
xchg
jae
rorb
call
push
mov
add
and
ret
push
and
cmp
dec
fidivs
mov
mov
inc
aaa
or
lcall
xchg
xchg
push
sti
inc
sub
pop
loope
adc
add
cmp
aam
or
dec
std
xor
xor
andb
out
int3
hlt
sbb
xchg
dec
out
push
inc
aad
mov
pop
ss
add
mov
mov
add
xor
addb
inc
aas
sub
add
or
hlt
mov
xlat
add
lea
pusha
pop
sbb
pop
into
adc
add
scas
sti
or
lds
out
fimull
out
pop
jecxz
pop
fsin
movsl
xor
add
in
sub
jmp
push
jmp
add
inc
subl
leave
test
ljmp
push
mov
in
push
into
push
inc
xor
sub
mov
lds
mov
icebp
add
sbb
imul
andb
fnstcw
push
das
je
shll
movsb
mov
sub
pusha
adc
fsubrl
inc
popa
test
out
out
adc
dec
mov
call
pop
andb
pushl
rorb
ret
sub
mov
rolb
add
neg
test
out
xorl
add
or
aam
ljmp
adc
clc
xor
push
ret
testl
cld
mov
cmp
test
xor
mov
lea
dec
mov
mov
jmp
add
cmp
jge
push
ret
idivl
push
mov
stc
dec
fsubl
repnz
add
ss
jg
push
push
stc
push
int
cld
adc
psadbw
push
add
push
xchg
stc
out
lret
push
inc
jp
fdivrl
test
dec
lods
cmp
dec
push
aas
lods
sbb
dec
std
jl
jge
rcrb
sti
cmpsb
mov
push
popf
sbb
xor
dec
jp
dec
jge
add
insl
xor
jle
push
push
xchg
int3
in
sub
stos
push
cmp
dec
pushf
rorb
pushf
or
insl
mov
adc
mov
inc
xlat
mov
test
fisubl
sub
outsl
push
inc
stos
push
cld
dec
test
test
jno
std
iret
jle
stos
mov
add
add
add
add
push
out
xchg
stos
test
mov
sub
lds
test
xor
adc
push
dec
outsl
pop
jo
sub
jecxz
sti
mov
xor
adc
pushf
mov
jge
dec
jecxz
mov
push
jge
push
cmp
mov
xchg
sub
push
ljmp
dec
xor
add
and
dec
aas
mov
inc
jmp
fnstenv
in
imul
lcall
fldenv
push
sub
push
stc
push
sub
test
ret
ret
jmp
sub
jae
out
out
roll
cltd
test
mov
cmp
addl
dec
nop
ljmp
incl
add
cmp
test
and
call
jnp
add
test
sti
xorb
inc
cwtl
imul
idiv
sub
test
aaa
sti
and
addl
dec
pushf
push
sbb
jns
mov
xchg
movl
xchg
popl
aam
mov
stc
lret
mov
add
jae
adc
je
mov
mov
or
push
and
je
mov
mov
inc
xor
mov
push
leave
bound
rolb
lds
or
push
fidivl
sub
aad
jo
in
adc
jns
xchg
nop
add
mov
repz
data16
adc
pop
ds
jno
nop
pop
scas
sub
shrb
add
addr16
jl
and
std
pop
sarl
xor
shrb
add
adc
jo
jl
and
jmp
scas
sub
shrb
add
loopw
xchg
and
add
mov
scas
stos
or
add
outsl
xor
xor
add
push
inc
mov
lods
pop
scas
rclb
out
sti
sbb
in
das
bound
pop
jge
dec
scas
rcl
aad
push
lret
pusha
pusha
dec
test
cmpsb
test
sti
insb
cli
daa
subl
jb
inc
subl
adc
lcall
sti
adc
add
dec
cmc
fsts
enter
add
std
sti
jb
and
test
bound
dec
add
rolb
in
sti
xor
and
aam
cld
sub
aas
sbb
pop
xor
sbb
push
add
movsb
jnp
hlt
sub
and
out
mov
pop
push
push
mov
cmp
sbb
shlb
cmp
jnp,pn
ja
jne
sub
and
or
dec
sbb
inc
push
push
jae
add
leave
mov
sub
xor
push
push
les
mov
inc
stc
fnstsw
cld
mov
inc
xor
lret
aad
les
dec
ret
loopne
jbe
inc
insl
iret
sub
add
inc
pop
scas
push
incl
xchg
js
orl
clc
jl
jno
inc
and
and
jl
das
jg
leave
pop
cld
xor
lahf
int
test
test
xor
icebp
out
add
xor
xor
aam
push
jg
dec
xor
xchg
mov
mov
pop
cmpsl
mov
sbb
push
sbb
sbb
add
adc
lret
cmc
push
xor
divb
xchg
push
mov
pop
push
mov
fsubr
vmovd
ret
inc
cmpl
sub
in
sub
xchg
cmpsl
subb
hlt
int
mov
adcb
jp
jno
dec
stc
push
add
xor
test
xchg
leave
mov
aad
mov
stc
das
jp
movsl
rorb
xchg
xor
cld
pop
sti
divl
add
xor
inc
pop
add
xor
popa
mov
std
dec
mov
bound
inc
test
mov
pop
push
repz
aam
stc
inc
lret
out
shrl
or
outsb
jb
mov
add
add
add
add
add
push
leave
adc
je
inc
xor
jne
call
mov
push
mov
dec
push
nop
push
xor
adc
jno
add
mov
test
cmp
stc
jne
into
je
repz
and
insb
add
xor
filds
shlb
lret
scas
pop
add
add
into
fcompl
mov
jne
mov
or
cmp
mov
sub
add
xor
test
or
test
jl
fdivrs
pop
xchg
rcll
sub
popf
lcall
lret
test
jnp
dec
daa
jnp
dec
sub
inc
sub
inc
pop
jnp
pop
or
push
pop
jnp
add
dec
scas
fcomip
jbe
add
sub
and
jnp
pop
rorb
or
in
or
fcoml
add
lret
test
pop
sbb
mov
xchg
and
jb
xor
add
xor
xor
jb
cmp
xor
add
repz
add
out
lahf
inc
fimull
cmp
pop
jg
add
mov
dec
jge
ljmp
popf
jl
mov
jl
jge
loop
push
dec
mov
push
pop
mov
movsb
lcall
and
repnz
mov
dec
dec
mov
pushl
out
mov
or
lea
dec
add
push
mov
sbb
loopne
scas
ss
call
or
or
add
test
lods
stc
not
in
sub
dec
xchg
xor
jmp
push
xor
jmp
sub
push
pop
push
out
push
inc
dec
sar
imul
loopne
add
ljmp
in
jae
addr16
push
sti
mov
das
add
and
stc
pop
lret
sub
je
fs
aaa
xchg
add
xchg
mov
add
or
mov
add
int3
xor
int3
int3
mov
inc
test
scas
in
or
cmp
jno
cmpb
xor
add
add
xor
dec
adc
xchg
add
mov
add
push
lods
push
cmp
jnp
jl
shlb
jmp
vminps
sti
push
add
repz
jle
sbb
jnp
push
loop
or
jnp
push
lcall
stc
push
add
adc
mov
cmp
sbb
adcb
jl
xor
and
aaa
clc
or
call
rcrb
jl
popa
ja
sub
mov
and
add
add
add
add
xchg
add
jl
xchg
xchg
push
int3
test
ja
push
push
movb
repz
or
sarb
mov
ja
inc
mov
xchg
add
cmp
and
shlb
add
je
add
pop
xchg
xchg
clc
inc
pop
daa
jmp
jo
pop
ja
cwtl
lods
ljmp
add
add
add
cmp
jl
jae
push
xor
shlb
push
xchg
test
insb
ds
loopne
cmp
adc
test
jecxz
xchg
mov
jle
aad
addb
inc
add
outsb
adc
mov
test
jmp
mov
mov
jae
lea
inc
stc
lahf
sti
sti
cwtl
mov
in
add
loopne
stc
push
sub
push
aad
sub
inc
jge
aad
pop
insb
int
sbb
dec
xor
push
dec
std
orl
test
dec
stc
bound
testb
lods
pop
xchg
into
imul
mov
imul
jns
divl
add
add
xchg
incl
add
sub
dec
mov
add
lcall
les
loope
mov
inc
add
clc
push
xchg
call
adc
mov
cmp
or
sub
add
mov
ret
in
cmc
lret
int3
xor
sbb
leave
mov
xor
add
push
and
mov
rorl
pop
ret
push
push
std
xor
cmp
mov
lahf
ret
adc
ss
pop
or
jg
addr16
adc
dec
fidivl
or
pop
filds
rol
or
xchg
or
xchg
int
std
incl
testb
lods
test
push
push
testl
add
push
push
repnz
fidivrl
dec
cmp
dec
cmp
roll
and
add
adc
pop
jecxz
rcrb
aaa
pop
fcmovb
das
xchg
mov
xor
mov
xor
add
pop
add
xor
lcall
or
jns
xchg
xor
add
lods
daa
stc
add
push
mov
in
mov
imul
xor
xchg
xor
add
out
push
pop
xor
aad
jae
push
xor
inc
push
repz
sbb
scas
mov
push
xor
popa
add
jmp
adc
andl
add
lods
xchg
cmp
fmuls
dec
jb
mov
jmp
add
flds
add
or
stc
jmp
push
aas
jo
das
xchg
cmp
ja
sbb
test
das
add
iret
outsl
or
das
add
int
enter
add
mul
pop
lods
fucomip
push
xor
dec
js
sti
mov
dec
mov
dec
fcmovbe
ret
jo
sarb
jbe
push
add
roll
mov
jne
ret
hlt
adc
cmp
cmp
ds
mov
pop
loope
push
sub
sub
add
call
push
sbb
add
call
ja
add
sarl
cmp
dec
jae
and
cmp
pop
into
lret
stc
pushl
mov
dec
jg
std
fstpt
rcl
icebp
adc
nop
inc
push
into
rolb
fstpt
or
adc
pop
xor
inc
popa
into
lret
es
pushl
jmp
add
jge
push
push
mov
pusha
fwait
test
std
es
sub
pop
pop
sti
cltd
add
fs
add
fst
cli
adc
adcb
jnp
add
or
fistl
outsb
sbb
add
in
inc
or
out
std
lods
scas
jge
mov
ffreep
xor
dec
lea
push
test
push
popf
jae
mov
xor
rolb
or
frstor
xor
out
rolb
or
imulb
xchg
xor
add
add
add
pushf
adc
sahf
das
add
xor
mov
jp
lret
mov
incl
push
hlt
ljmp
sub
popf
aaa
shr
xor
jmp
dec
loopne
sbb
cmp
pop
jnp
ret
aas
stc
jmp
push
hlt
ljmp
sub
aad
add
push
xor
jmp
sub
mov
xor
add
add
add
xchg
sahf
insb
int3
mov
dec
aas
stc
jmp
addb
insb
xchg
stc
adcl
hlt
minps
dec
add
mov
sub
and
addl
add
cmp
notb
call
mov
mov
or
add
addb
test
cmc
maskmovq
iret
popa
dec
push
push
jge
scas
mov
aad
cmp
add
or
add
stos
lock
inc
mov
idiv
popf
addr16
push
jge
hlt
decb
out
push
xor
stc
rclb
add
lcall
stc
int3
movsb
popa
dec
les
scas
pop
gs
add
add
mov
jbe
xchg
push
add
dec
add
int3
mov
and
mov
les
push
in
data16
add
aam
je
lret
fcmovbe
sbb
inc
movb
cmp
pop
popa
stc
es
aam
jmp
test
xor
push
aam
out
mov
das
and
cs
call
add
outsl
xchg
push
push
imul
mov
adc
jns
stos
pop
outsl
mov
dec
fidivrl
je
jle
ret
in
mov
jg
cmp
add
cmp
xchg
inc
mov
addr16
mov
lock
mov
jns
mov
js
cmp
iret
inc
fistps
cmp
add
mov
add
jo
add
add
jle
cmp
ss
adc
cmp
push
divb
add
fisttps
in
or
mov
int
cmp
pop
aam
out
ljmp
sub
into
sbb
je
int
stc
fs
clc
scas
stc
filds
iret
cmpsl
hlt
xchg
fnstcw
call
push
add
cmp
mov
mov
cmp
jmp
cltd
cmp
movl
call
jae
or
sti
pop
or
cmpsb
cmp
lret
inc
lods
lea
mov
dec
lea
pop
cmpb
lods
xor
scas
shlb
pushl
mov
call
add
xchg
nop
cli
loop
mov
les
out
mov
maskmovq
xlat
cmpsl
dec
lock
test
mov
call
mov
inc
cld
adcb
mov
jno
push
int
hlt
incl
jno
sub
jo
rorb
add
or
test
faddl
cli
add
mov
dec
jb
xchg
dec
add
inc
jle
sahf
into
iret
sti
les
push
fcmove
sbb
xchg
mov
in
stc
outsb
xchg
mov
imul
jmp
test
and
xor
push
cmc
imul
cmp
dec
test
stc
test
mov
add
int3
mov
ja
cmp
fisubrs
in
adc
ss
jne
lods
sub
shrl
add
pop
shrb
fidivl
stos
cmp
cmc
cmp
jne
jp
jne
cmp
adcl
movsb
and
int3
mov
je
cmp
aaa
jp
movsl
add
add
stos
hlt
addr16
cmp
push
movsl
in
test
je
shrl
mov
cs
mov
jb
sar
pop
lods
ljmp
stc
ret
or
push
jno
imul
shrb
stc
into
fldcw
push
sbb
or
pop
fstps
add
adc
test
pop
test
iret
mov
lea
mov
add
add
dec
mov
stos
lea
mov
clc
aas
stos
lods
pusha
aas
mov
orb
or
cmc
jbe
mov
mov
or
fdivs
adc
ljmp
ret
mov
in
incl
add
push
mov
data16
cmp
out
lret
int3
lods
out
lret
int3
push
mov
subl
shlb
sub
push
inc
std
mov
xchg
jno
enter
mov
lods
jmp
dec
std
mov
insb
jge
dec
into
pop
into
mov
dec
cwtl
movsl
out
inc
std
sub
and
hlt
ficoms
add
add
add
add
dec
jge
jecxz
or
lcall
add
test
pop
int3
push
clc
pop
int3
or
add
shlb
std
jae
sbb
outsb
test
aaa
jp
inc
xor
inc
loopne
jae
fdivrp
add
xlat
or
add
add
xor
or
fs
add
add
add
add
mov
jmp
sbb
rcl
dec
mov
xor
jp
sub
sub
stos
out
cli
jno
test
out
jmp
out
push
mov
int
mov
sbb
bt
and
and
sbb
test
lret
xchg
and
sbb
sbb
lret
mov
xor
inc
aam
or
cmpb
and
push
inc
data16
movsl
push
lods
dec
cmp
movsb
jecxz
mov
stos
dec
mov
fists
push
and
ljmp
xchg
push
xor
mov
mov
adc
dec
in
ljmp
sub
mov
stc
add
add
bound
or
inc
inc
cmp
mov
cmp
xor
cmp
mov
add
das
jnp
lods
call
call
nop
sub
stc
call
cs
clc
jecxz,pn
das
add
call
das
add
xor
rcll
jnp
add
mov
je
mov
add
sub
add
push
mov
mov
push
dec
jbe
int3
lods
jl
push
dec
lods
add
lods
int
inc
enter
push
dec
jbe
popf
push
push
fimull
in
lret
add
jle
push
cmp
xor
push
xlat
rcl
add
push
dec
std
call
jnp
push
inc
std
xchg
add
inc
std
fcoms
add
push
shlb
std
test
jmp
add
mov
add
cs
push
iret
dec
add
out
rcll
lods
test
push
pop
pusha
ljmp
and
push
out
push
aad
stos
jne
out
sti
cld
cmpsb
into
aad
xor
pop
xor
dec
mov
push
jp
add
movl
add
add
add
scas
jl
or
xor
out
mov
incb
mov
negl
dec
dec
fdivs
outsb
jae
cmp
test
fiadds
push
xor
mov
xor
fsubl
inc
jmp
sbb
or
stos
imul
int3
mov
fs
lods
adc
call
add
dec
icebp
or
adc
add
movsl
cli
mov
lret
lods
xchg
cld
lret
sbb
sbb
push
cwtl
stos
or
dec
xor
jmp
dec
xor
jmp
add
xor
imul
add
or
add
shl
jmp
addr16
mov
jno
je
je
incl
add
xor
add
mov
or
xor
add
mov
add
int3
int3
pushf
outsl
int3
int3
cld
outsb
int3
int3
sub
jmp
dec
es
inc
or
xor
or
push
scas
inc
sub
in
xor
ja
test
inc
aam
test
add
idivl
ds
idivl
int3
add
jl
int3
int3
push
in
ja
lret
jge
or
push
fs
aam
insl
mov
gs
ficoml
jl
adc
std
adc
inc
je
xchg
iret
testl
push
push
inc
rorb
push
in
arpl
test
shl
cs
lds
mov
aaa
int3
add
pop
cmp
add
adc
in
jae
sub
repnz
sub
aam
lock
xor
and
mov
ret
scas
mov
icebp
push
sub
out
cltd
push
pop
push
cmp
outsl
rcll
push
mov
mov
popf
cld
stos
aaa
xchg
cld
sbb
jg
jg
cmp
inc
jb
addb
jle
add
lahf
out
insl
mov
and
mov
sbb
sub
ret
push
mov
lock
sub
out
stc
push
mov
rcll
stos
jbe
test
lret
xor
jle
lret
mov
mov
jg
dec
idiv
push
daa
xor
idivl
sub
push
cmp
add
test
jo
sub
aam
cmp
push
es
int
adc
adc
mov
test
mov
mov
mov
or
mov
popa
mov
mov
xchg
cld
lret
sbb
and
int3
int3
xor
int3
int3
mov
sbb
ljmp
orl
loopne
add
sub
inc
je
out
xor
add
test
add
mov
test
lods
inc
adc
jmp
clc
adc
jmp
divl
cwtl
or
mov
jnp
xbegin
push
pop
sti
int3
int3
cmp
lods
jne
jnp
testl
jge
int
inc
dec
adc
add
outsl
push
imul
adc
adc
call
pop
cmc
pop
ficoml
pop
xchg
jmp
in
lret
jl
xor
sbb
les
test
popf
in
int3
xchg
fdivl
int3
lea
in
lret
rclb
cmp
rol
add
dec
mov
scas
movsl
push
add
xchg
sbb
push
xchg
pop
cmp
inc
iret
cmp
fcmovb
adc
inc
mov
add
add
add
add
pop
or
jg
add
xchg
xor
add
xor
enter
aaa
add
std
xor
adc
std
arpl
push
dec
call
loopne
xor
insl
xor
mov
mov
xor
lods
cmp
out
cmp
dec
jge
lods
cmpsb
call
mov
fldl
push
out
add
insb
fbstp
xor
insl
add
repz
adcb
xor
inc
call
or
pop
cmpsl
jl
add
ljmp
cmp
mov
push
xor
jmp
es
lret
xor
es
lret
pushf
pop
sbb
push
jnp
jb
xor
jmp
and
aaa
mov
xor
insb
add
inc
mov
jno
xor
jmp
js
stc
fidivrs
dec
cltd
inc
sub
insl
shlb
xchg
adcb
lods
mov
or
add
inc
xor
add
xor
mov
or
xor
push
jl
mov
xchg
xor
sbb
insl
adc
hlt
mov
adc
xor
pushf
out
or
mov
add
clc
add
test
nop
push
movsb
xor
mov
sub
push
mov
dec
jl
mov
ds
and
jno
push
pushf
test
or
stos
xchg
mov
stc
incl
fstpl
test
stc
jle
and
pop
aas
int3
sbb
fnsave
int3
or
inc
ja
shlb
test
add
mov
enter
inc
nop
lret
xbegin
test
or
fsub
pop
or
push
or
cmp
sbb
xchg
fdiv
call
sbb
xchg
pusha
or
push
mov
std
xchg
push
mov
std
xchg
inc
or
push
xchg
mov
out
aam
outsb
rolb
dec
xor
push
push
pusha
rcl
xor
test
add
lea
mov
sbb
push
xor
nop
xchg
out
fidivrl
mov
and
sub
shll
mov
push
push
dec
push
or
mov
pop
repz
ja
push
insb
add
call
mov
xchg
fs
add
add
xlat
adc
loopne
pop
fisttps
pop
dec
mov
sahf
inc
xlat
enter
adc
push
stos
dec
xchg
fldlg2
jae
arpl
push
js
and
out
ret
js
inc
add
xlat
test
jb
sbb
movsb
jle
stc
movsb
mov
test
cmpsl
cmp
push
xor
add
add
add
add
insl
bound
ja
repnz
xor
fs
js
loop
xor
iret
lret
and
push
xor
push
and
add
sbb
pop
sub
or
xor
mov
dec
das
xchg
dec
adc
add
mov
pop
add
lods
in
lods
xchg
mov
or
cmc
xchg
pop
mov
mov
hlt
insl
xchg
je
jae
call
or
add
das
test
xor
hlt
jmp
jg
out
lods
mov
loopne
repnz
xchg
inc
scas
jl
sub
cli
sbb
test
xchg
jo
sti
repz
pandn
orl
xchg
mov
mov
jmp
test
pop
pop
pop
test
fmull
jae
mov
jmp
mov
jo
pop
mov
mov
add
add
inc
mov
shlb
test
pop
adc
push
int3
push
stc
fisubrs
xchg
roll
int3
pop
rolb
clc
sahf
std
call
int
out
pusha
add
test
adc
mov
test
dec
test
das
outsb
loope
mov
xlat
mov
ffree
sbb
add
sub
mov
jnp
mov
out
xor
insb
inc
popf
cmp
enter
in
lods
popa
loopne
xor
in
stos
sub
push
xor
jne
in
ficoms
push
xchg
aaa
out
hlt
sub
pop
shr
in
add
adc
cmp
pusha
mov
out
aas
sub
xchg
or
sub
add
ja
je
add
add
dec
xor
jmp
mov
jae
cmpsl
xchg
jmp
hlt
lret
lods
sahf
hlt
lret
sbb
adc
je,pt
jb
aaa
mov
push
push
into
ficompl
shll
stc
xchg
pop
jne
imul
jmp
sbb
add
sbb
std
call
inc
mov
jge
dec
outsl
xchg
add
add
add
test
stc
jmp
mov
or
stos
jb
xchg
cs
mov
mov
cld
ret
pop
jne
xor
test
f2xm1
paddw
ljmp
mov
add
lds
add
lods
mov
adc
xor
sub
cmp
jle
sub
add
clc
adc
fimull
add
add
add
shrb
or
or
cwtl
shlb
jmp
or
lods
and
inc
movsb
sub
cwtl
inc
es
incl
or
call
sbb
jmp
stc
xchg
decl
std
es
idivl
push
add
mov
mov
repnz
lret
jl
or
popa
and
loop
loope
repz
or
add
std
decl
in
push
mov
andnps
std
cmp
add
jl
or
mov
mov
std
call
inc
push
xchg
mov
jp
xor
ss
push
ja
fldl
push
test
add
jb
loopne
mov
jg
rcl
lock
add
ljmp
inc
outsb
fsubl
cs
shrb
push
pop
lock
test
out
stos
or
mov
seta
mov
add
mov
pushf
inc
xor
outsb
ds
pop
cwtl
mov
xchg
push
arpl
test
je
sbb
mov
push
xor
stos
or
mov
mov
add
push
xor
test
xchg
sbb
popa
faddp
sarb
mov
or
adc
mov
mov
std
int3
scas
mov
push
xor
test
adc
sbb
and
mov
mulb
test
inc
add
add
cwtl
in
add
dec
ret
mov
or
mov
fldl
add
adc
mov
pop
rorl
add
jnp
lock
mov
add
xchg
cmpl
cli
push
mov
pop
rcr
lods
inc
or
mov
adcl
sub
jg
push
xor
mov
push
test
das
pop
adc
cld
or
push
or
fidivrl
adc
mov
or
aaa
push
addr16
aaa
test
das
nop
pushf
mov
and
std
push
xor
pushf
adc
test
pop
or
jl
pop
or
add
add
add
push
lcall
sub
xchg
adc
sbb
xchg
xor
mov
enter
mov
bound
cmc
das
leave
or
xlat
lock
mov
int3
scas
mov
into
sbb
push
cmpsl
mov
mov
inc
pop
lret
push
cmpsb
jbe
inc
xor
mov
pop
jae
inc
out
aam
adc
sub
add
xor
mov
cmpsb
fwait
pop
fiaddl
lcall
xchg
pusha
pushf
or
add
inc
mov
lock
push
xchg
xchg
pop
aam
out
sbb
or
push
sub
inc
out
push
sbb
mov
fwait
mov
out
mov
dec
in
frstor
xor
pop
in
add
lret
adcb
add
fcoms
jmp
fldt
call
cmpsb
mov
push
jg
stc
jb
xor
xor
mov
movlps
mov
rcr
in
pusha
ret
jmp
fidivrl
call
add
nop
popa
sub
stc
push
sbb
clc
push
xor
add
test
add
subl
add
add
mov
iret
stc
pop
mov
pop
add
mov
pop
fimull
add
add
and
or
sub
add
repz
faddl
mov
test
movsl
inc
or
pushf
mov
js
mov
cmpsl
mov
std
xchg
push
inc
ret
cvtpi2ps
test
lea
mov
add
test
mov
push
pop
std
cli
jmp
add
loope
xchg
cwtl
adc
fildl
test
or
test
or
call
dec
dec
jge
adc
push
fdivrs
dec
dec
mov
insl
mov
and
xchg
leave
add
std
push
cmp
add
cltd
xchg
adc
mov
xchg
jmp
adc
mov
or
scas
xor
mov
sar
add
pusha
fwait
leave
cmp
add
pop
mov
jae
cmp
jmp
add
mov
into
mov
fldcw
xor
mov
push
or
sbb
add
out
nop
insb
lldt
out
dec
fabs
add
sub
push
mov
push
push
dec
cmp
dec
lods
mov
dec
push
sub
std
in
inc
add
add
bound
test
inc
add
fbstp
stc
xchg
mov
xor
jmp
mov
in
bound
inc
xchg
inc
add
add
dec
orb
fcmovnu
adc
push
test
fmuls
adc
sub
adc
push
stos
jns
pop
push
jb
sbb
dec
mov
scas
fsts
sbb
sarl
enter
push
or
add
mov
sub
jnp
cmp
xor
mov
orl
lods
lock
add
pop
mov
push
int3
loop
out
or
cmp
test
dec
or
mov
mov
sub
inc
xchg
mov
test
cmpl
inc
or
call
adcl
fimuls
mov
ret
jns
ret
mov
cmpsb
mov
push
pop
loopne
push
adc
jl
add
add
cld
fiaddl
xlat
test
lcall
xchg
sar
jns
and
outsl
popa
test
sub
xchg
test
cmp
test
shl
call
mov
lock
shl
mov
ret
hlt
test
jbe
inc
or
hlt
sbb
adc
dec
out
jns
inc
hlt
enter
add
push
or
xchg
popa
idiv
cs
xorb
jmp
dec
adc
dec
test
out
cmp
hlt
pop
mov
pop
sbb
sbb
shll
pop
js
dec
daa
add
fldt
jnp
out
jae
xchg
jmp
inc
mov
jns
cmp
add
jo
arpl
out
and
outsl
out
inc
adc
add
add
add
add
push
mov
out
or
mov
aad
push
stc
xchg
pop
repz
mov
out
push
xor
call
add
cmp
mov
or
loopne
add
stos
mov
stc
inc
popa
lock
fcoms
jmp
test
std
orl
stc
jbe
add
cmpsb
xchg
jge
xor
jb
or
push
pop
test
sub
jmp
sbb
stc
mov
lods
loop
adc
lret
sub
or
add
fidivl
mov
sbb
jg
mov
push
or
mov
adc
cwtl
push
sub
cmpsb
cmp
inc
mov
mov
dec
cld
jne
pop
test
sub
add
mov
verw
sub
xlat
xor
push
mov
xchg
into
data16
orl
add
scas
mov
add
mov
adc
or
dec
fdivp
test
pop
jne
inc
mov
inc
pop
std
clc
add
adc
js
pop
test
and
int3
sub
xchg
mov
inc
jg
adc
ja
fisubrs
sbb
cld
pop
xchg
jl
addr16
test
cld
call
mov
ficomps
add
push
cmpb
std
mov
sbb
ljmp
pop
pop
lahf
aas
cmpsb
sbb
mov
sbb
add
mov
add
js
in
mov
repnz
leave
enter
mov
fmuls
repnz
jmp
mov
fistpll
and
in
and
fistl
add
add
jnp
lret
clc
add
pusha
xchg
mov
imul
repz
fwait
pop
mov
ja
ss
add
push
lret
testb
xor
sub
fs
js
cmp
cmp
xchg
add
lds
add
push
bound
lock
loope
xor
stc
test
mov
push
xor
fadds
test
notl
test
inc
mov
loope
sub
jb
int3
adc
push
mov
mov
sbb
adc
jecxz
add
push
stc
test
xlat
push
xor
shl
mov
xor
add
mov
ffree
lds
std
fwait
or
stc
jmp
sbb
mov
scas
shlb
xor
js
inc
add
mov
js
add
arpl
jle
je
mov
mov
sub
scas
cwtl
sar
clc
jmp
cmp
inc
cld
or
incl
add
mov
cmp
stos
adc
dec
pop
rcll
inc
lock
lds
lock
std
ljmp
cld
sti
scas
jmp
push
jl
aad
cld
lcall
xorb
jle
rolb
inc
gs
adc
add
xlat
cld
in
cmpb
push
out
inc
push
jle
or
scas
push
mov
sbb
mov
sbb
jp
je
and
cmp
mov
scas
outsl
jle
bound
mov
cmc
call
insb
mov
and
les
scas
out
dec
ret
arpl
out
add
outsl
call
add
add
add
push
mov
mov
out
adc
hlt
xor
mov
mov
push
lret
push
into
mov
outsb
scas
push
jo
cltd
and
add
cmpsl
pop
xchg
outsb
out
xchg
mov
mov
outsl
mov
out
sbb
out
pop
lds
and
push
mov
clc
shlb
sti
mov
pop
daa
add
mov
icebp
out
cmp
add
fimuls
add
xor
mov
bound
mov
dec
xor
fidivl
ja
enter
mov
aad
sub
es
push
or
ret
push
mov
cmc
in
ja
jno
cmp
jmp
inc
push
lds
adc
vmovups
push
mov
adc
mov
out
add
mov
stc
inc
mov
bound
lds
add
push
negl
mov
pop
jae
push
ret
in
dec
int3
int3
jl
int3
int3
insb
dec
int3
int3
loop
mov
lea
addb
test
inc
add
stc
jae
jmp
cmp
ds
jmp
add
push
lods
negl
fisubs
orl
ljmp
insl
xor
scas
mov
add
cmp
pop
sbb
add
sub
add
cmp
add
inc
add
cmpl
add
or
add
ds
or
cmp
fiaddl
cmp
pop
mov
subb
xchg
inc
xor
lea
int3
test
std
dec
add
rorb
jb
sbb
fcmovb
call
sbb
or
mov
sbb
test
sub
sub
jo
mov
out
dec
orl
jnp
xor
push
mov
dec
out
out
pop
pop
call
cmpsb
push
out
fdivs
adc
rolb
push
or
jp
add
enter
imul
popf
hlt
sbb
xchg
hlt
xor
hlt
sub
test
pop
jl
push
out
adc
pop
cld
clc
push
ljmp
mov
out
jnp
and
ret
inc
mov
fcomip
add
into
repz
push
repnz
fistpll
sbb
imul
out
leave
and
fcoms
xchg
xchg
and
jmp
add
add
add
jnp
mov
stos
push
hlt
lret
mov
hlt
lret
lods
push
hlt
lret
sbb
adc
pop
dec
filds
or
jl
ljmp
fmuls
cs
bound
invd
jno
pop
stc
test
jmp
add
jno
pop
stc
test
leave
pusha
or
dec
test
cmp
add
add
add
add
inc
cmc
xor
xchg
jae
or
push
xor
push
adcb
and
idivl
fstl
pop
xor
mov
addl
popf
dec
sub
lock
add
out
pop
mov
or
stos
cmp
add
scas
into
mov
clc
addr16
fdivl
dec
mov
js
add
jge
fsubl
pop
mov
out
mov
pop
mov
call
push
jne
add
dec
stc
in
lahf
lret
fiadds
and
in
rol
add
xchg
call
push
lret
inc
pop
xchg
int
add
jl
mov
aad
push
pop
pop
std
call
std
ror
adc
push
sbb
add
push
jp
add
cmpl
xchg
int
push
pop
mov
enter
pop
pop
std
xchg
inc
test
iret
adc
push
pop
mov
cmp
repnz
nop
roll
xchg
or
lods
ret
push
xor
mov
lcall
hlt
movb
aam
xor
mov
pusha
repz
push
test
out
cmpsl
xor
add
add
jo
shr
push
sub
add
jno
arpl
out
test
loopne
pushw
jbe
xchg
sbb
data16
out
xchg
outsb
xlat
dec
mov
mov
push
xor
pushf
mov
push
pop
scas
std
add
and
lcall
stc
xor
jmp
push
add
outsb
clc
pusha
pop
sti
in
lret
and
add
push
xor
fcomps
jmp
push
sub
jmp
push
xor
enter
push
mov
jno
stos
mov
push
xor
sbbl
pop
repnz
xor
adc
xchg
mov
xor
jb
pop
adc
push
stos
fwait
cmpsb
sub
jmp
push
xor
jmp
dec
xor
add
mov
xchg
sub
lahf
add
mov
lock
xchg
cmp
orb
ret
add
pop
pop
mov
mov
orl
mov
adc
sub
adcl
stc
mov
int3
add
mov
push
dec
xor
cmovno
mov
mov
movsb
sub
cmp
dec
inc
testl
add
add
add
repz
adcl
mov
pop
enter
dec
pop
std
test
pop
stc
ljmp
xchg
cmp
pop
std
out
jecxz
stc
xchg
test
jl
dec
int3
add
rorl
adc
mov
add
lds
std
jg
add
subb
cld
fcoml
shl
mov
add
nop
in
add
pop
int
xchg
pop
cmp
rorb
mov
jp
nop
inc
push
or
cmp
das
data16
sub
lods
dec
mov
out
int
push
mov
ret
jne
cmp
les
xchg
data16
fldl
push
xor
push
sti
insl
jo
movsl
test
add
add
sahf
add
arpl
push
and
lea
repz
adc
enter
pop
cmpl
es
sti
repnz
lods
stos
ret
push
xor
addr16
and
jmp
add
lret
sub
leave
or
movsb
dec
mov
inc
xor
push
sub
and
je
xchg
test
add
sbb
loopne
mov
jmp
mov
add
fstps
popa
pop
das
or
adc
push
stc
aas
cmc
fldenv
bound
aaa
mov
inc
mov
inc
xor
jle
and
lcall
in
jo
mov
push
fucomp
mov
add
and
add
xlat
bound
adc
jmp
mov
add
outsl
pop
mov
add
mov
push
cmp
orl
add
mov
add
cmp
sti
pop
cmp
sub
mov
int3
les
int3
mov
int3
int3
pop
lods
jmp
sub
ds
mov
int3
int3
sbb
lods
push
adc
insb
or
jp
add
out
hlt
add
scas
xor
std
add
sbb
jbe
xchg
sub
jmp
outsl
in
sti
outsb
push
xchg
add
jmp
les
ds
lret
adc
mov
ror
or
adc
enter
dec
cmp
push
xchg
lret
xchg
xchg
dec
add
aam
test
lret
push
add
and
into
out
jge
stc
ror
or
add
das
mov
decl
fwait
add
push
dec
pop
mov
add
outsb
mov
jp
mov
xor
cmp
jle
mov
jno
cwtl
btr
imul
fwait
adc
pop
rcll
add
jae
or
lcall
bound
fstps
mov
mov
and
mov
fisttps
xchg
and
add
test
out
dec
xchg
add
sub
mov
adc
push
mov
dec
fsubl
test
xor
aas
cwtl
xchg
insl
call
insb
shrl
mov
das
add
and
add
add
add
add
stc
test
adc
fildll
add
aad
mov
push
inc
cmpsl
inc
jmp
add
inc
pop
xchg
test
or
loopne
mov
jmp
pop
push
add
lds
popa
sub
add
pop
mov
jbe
add
loope
mov
xchg
mov
lock
mov
imul
cmp
xchg
add
mov
push
js
jecxz
arpl
data16
mov
cmp
jnp
cmp
add
add
and
cmp
idiv
stos
jo
mov
dec
ds
inc
stc
add
div
mov
dec
push
ret
lods
push
test
ficompl
dec
ficoml
lret
jmp
add
scas
pop
std
jl
or
or
idiv
xor
push
pop
scas
add
pusha
xor
push
pop
not
dec
xor
push
pop
scas
add
sub
stc
push
pop
xchg
adc
adc
pop
dec
aad
adc
std
push
lret
andl
pop
mov
cmp
or
xchg
adc
aad
movsb
xor
adc
push
iret
mov
add
add
add
add
das
cs
scas
lahf
xor
das
out
push
scas
jg
enter
cs
add
test
pop
movsl
movsb
inc
mov
push
inc
pushf
icebp
mov
or
push
lods
inc
push
xor
shll
add
adc
push
xor
scas
mov
jl,pn
or
into
repz
popf
add
xor
xor
insl
inc
xor
add
add
xor
add
push
xor
add
push
xor
add
push
cld
mov
push
cld
mov
ret
push
cld
mov
push
cld
mov
ret
push
cld
mov
push
cld
xor
jecxz
cld
and
repnz
cld
xor
in
cld
and
hlt
push
cld
xor
add
out
cld
and
notb
cld
xor
jl
inc
push
clc
out
xchg
test
sub
dec
xor
add
xor
mov
scas
adc
psubsb
testl
mov
xor
xlat
cmp
jbe
add
sub
mov
jb
add
xchg
sbb
add
ja
push
add
sub
push
imul
scas
push
jp
icebp
add
sub
push
imul
add
sub
push
cmp
icebp
add
scas
push
sub
sub
push
ds
add
scas
push
das
das
icebp
add
xor
notl
cld
mov
add
notl
cld
mov
adc
notl
cld
mov
add
notl
cld
mov
or
testl
add
add
add
cld
mov
cld
add
push
sar
pop
or
cld
mov
incb
notl
and
divl
jbe
dec
je
push
ja
push
dec
cld
pop
ret
cltd
cwtl
jl
rcll
fwait
int
pop
cs
push
inc
insb
outsl
roll
sbb
test
mov
push
cmc
flds
pop
test
not
add
push
out
sbb
aas
sbb
cld
xchg
mov
jnp
subb
cltd
inc
les
mov
adc
push
xor
cwtl
push
inc
cmpsl
add
aam
sbb
xor
and
out
jnp
dec
or
hlt
cmc
add
fbld
sbb
insb
daa
push
add
push
or
push
xor
add
loop
mov
ffree
xor
test
xor
sub
sub
stc
jmp
iret
xor
sub
dec
in
gs
roll
jmp
xlat
xor
sub
aad
pop
sub
xorb
jmp
lahf
xor
bound
mov
add
add
stc
call
dec
cmp
add
xor
std
mov
xlat
mov
push
push
xor
push
push
lods
adc
xchg
sub
inc
cmp
or
cmp
cmp
mov
mov
popf
clc
sarl
add
add
call
add
add
mov
inc
add
call
std
cmp
xor
jmp
lods
test
add
mov
pushl
add
sbb
adc
xor
jns
pop
das
add
pop
sub
xor
adc
jecxz
jmp
adcl
std
cs
pop
jle
ss
jmp
mov
pop
cld
test
dec
sbb
inc
add
push
or
incl
xchg
cmp
sub
adc
adc
add
fiadds
std
dec
add
test
cmpsb
sub
push
pop
out
add
pop
clc
aas
push
mov
stos
fucomip
add
push
stc
push
pop
std
sub
jl
aaa
adc
jle
xor
ret
not
imul
mov
xor
push
add
sbb
jo
test
out
push
cmp
cmpsl
add
add
xlat
cmpsl
sbb
pause
push
inc
daa
add
icebp
out
push
cmp
daa
add
pop
mov
lahf
out
mov
add
loop
push
aas
daa
add
aad
sbb
test
push
xor
repnz
xchg
out
pop
xor
add
repnz
xchg
out
inc
xor
js
out
and
pop
add
jo
mov
and
clc
push
sub
mov
add
add
add
lret
add
ficoml
mov
push
inc
outsl
loope
push
xor
bound
stos
pushl
xchg
aad
push
push
sbb
inc
jmp
push
sbb
inc
jmp
push
sbb
inc
jmp
cmp
jb
pushf
test
out
aas
sub
jmp
add
test
jl
sbb
xchg
jns
add
and
int3
int3
mov
out
jge
in
xor
rolb
or
push
sbb
add
mov
cmpsl
or
xor
pop
rorl
scas
insl
testl
in
mov
out
addl
inc
add
add
xor
inc
jno
icebp
pop
sti
cs
int3
hlt
cs
int3
cmp
dec
and
int3
xor
push
fwait
movsb
test
mov
call
aas
test
in
push
frstor
mov
fsubr
loopne
shll
call
jae
pop
std
fisttpl
jbe
jne
ja
pop
push
mov
push
bound
dec
and
add
lret
fcom
testl
test
xlat
cld
and
push
add
enter
push
jp
jne
cmc
mov
pusha
enter
insl
pop
pop
pop
jnp
xor
outsl
outsb
adc
xor
ds
movsl
repnz
jno
out
add
icebp
jnp
xor
add
stos
hlt
cmp
es
add
mov
xor
push
sub
jge
adc
scas
xor
cmpsl
xor
out
int3
jae
adc
mov
out
lret
sti
iret
in
out
dec
and
incl
jecxz
adc
jmp
push
mov
sti
and
incl
sub
popa
add
out
mov
imul
je
jnp
jne
shl
in
clc
jmp
es
mov
jmp
test
adc
adc
xor
mov
or
dec
mov
pop
in
jp
insl
fs
dec
loopne
xor
or
ljmp
xchg
aaa
test
sahf
rcrb
xchg
push
and
add
add
add
movsb
adcl
pop
push
cmp
jg
insb
mov
pop
scas
repnz
int3
push
bound
cmp
add
bound
sub
add
cmp
add
cmp
add
aaa
das
add
das
das
add
pop
das
add
das
xor
add
das
add
pop
add
sysenter
add
lahf
das
lahf
out
pushl
add
out
xlat
clc
fists
daa
add
daa
jmp
imul
or
sub
push
push
sub
push
mov
jns
subb
push
jp
stc
push
jb
stc
push
sub
stc
dec
and
stc
pop
sbb
stc
data16
stc
jle
sub
mov
sub
mov
test
xchg
jmp
je
mov
insl
dec
iret
add
fscale
iret
sar
hlt
xchg
xor
test
enter
jbe
inc
cs
lods
adc
add
xor
cmp
mov
out
pop
ret
fcmovne
jl
adc
jno
jnp
andb
cmp
xor
add
or
fistps
mov
lret
test
sahf
jl
adc
jp
add
mov
out
iret
jae
out
xlat
jnp
repz
or
aad
mov
mov
sbb
mov
orb
inc
dec
adc
out
sub
jae
xor
int3
idiv
stc
adc
movsl
pop
testb
out
or
xchg
dec
ffreep
ljmp
shlb
test
xor
call
or
add
add
add
imul
jmp
lods
xchg
push
xor
cmpb
into
mov
or
push
adc
test
jle
cmp
jae
sub
jle
out
push
loope
jg
mov
pop
jg
ljmp
call
jo
out
rcl
or
imul
adc
add
dec
or
lods
repz
add
dec
add
lods
repz
xor
add
dec
jg
clc
sbb
ja
loopne
lds
cmpb
lret
loopne
dec
adcl
dec
and
ror
mov
or
lods
insb
insl
sbb
adc
pop
gs
add
xor
je
aaa
outsl
les
cld
clc
addr16
and
enter
test
add
std
call
push
or
out
bound
ja
sbbb
mov
test
frndint
incl
stc
cmp
movsb
cmc
add
mov
fwait
stos
lret
and
inc
sub
and
mov
inc
cmp
push
mov
adc
xchg
bound
scas
add
push
xlat
cld
jg
fildll
push
lock
shll
cmpsb
hlt
add
repz
icebp
js
cmp
int3
cmc
mov
lock
int
jb
fiadds
mov
add
xor
jb
outsb
sbb
sub
push
mov
in
xchg
xor
outsl
lods
mov
push
add
mov
mov
and
gs
inc
pop
insb
fnstsw
jne
shlb
pop
or
outsl
lret
adc
mov
in
pop
mov
add
out
xchg
adc
sub
xor
xchg
dec
xor
jmp
mov
mov
bound
out
jo
clc
push
xchg
aaa
orl
xor
jmp
add
or
mov
bound
out
xor
clc
jb
stos
inc
add
mov
aaa
jle
dec
xor
ljmp
jae
mov
and
push
mov
in
inc
iret
loope
add
push
dec
cmp
leave
dec
sub
cmp
inc
mov
and
add
je
inc
sub
rorb
add
add
add
cmp
es
cmp
xor
stc
push
sub
cmp
ljmp
mov
and
add
jbe
aam
repz
out
sub
mov
repz
jae
cmp
or
adc
outsb
jne
loop
fmulp
sbb
iret
or
outsb
push
lods
loopne
dec
mov
or
and
incl
add
leave
xor
arpl
scas
repnz
jae
jl
aad
in
fists
and
inc
or
leave
lahf
fcmovne
int3
orl
pushf
punpckhdq
inc
cmc
mov
adc
add
add
nop
and
pop
out
xlat
cld
fisubrl
ds
mov
or
js
call
sbb
int
lret
scas
movl
add
add
add
cmp
psrld
cmp
or
gs
jno
aad
jnp
jmp
pop
dec
fucomp
adcl
repnz
mov
call
dec
bound
or
push
int3
or
testl
push
xor
dec
pop
xor
test
icebp
lods
xchg
xor
inc
sub
lds
shlb
jbe
inc
in
or
ss
out
push
mov
mov
add
ror
cld
bound
add
loop
mov
arpl
ljmp
jge
push
shll
bound
or
clc
out
push
jae
std
fs
mov
stos
add
jecxz
cs
mov
std
imul
add
add
add
sub
push
fildl
stc
mov
stos
clc
push
xchg
aaa
sbbl
aaa
or
jae
subl
add
or
stc
add
repz
test
xor
add
je
jle
rolb
mov
sbb
sti
push
add
or
incl
ds
imul
add
arpl
pop
or
add
mov
add
je
leave
mov
jbe
leave
leave
repz
out
sub
movb
inc
movsb
mov
enter
test
shlb
je
cmp
lock
out
sbb
xchg
and
fisubl
das
jp
xchg
adc
fiaddl
in
add
sub
out
push
xlat
into
xchg
out
add
icebp
sub
xchg
add
je
inc
xchg
and
mov
test
call
jmp
mov
leave
cld
jmp
cld
call
clc
mov
cmp
fsub
cld
call
in
test
hlt
call
mov
xor
int3
jae
mov
add
into
addr16
mov
xor
jle
movsl
add
gs
or
sub
sub
sbb
xor
cmp
pop
jmp
cmpsl
sbb
dec
lret
jmp
jl
lock
aam
pusha
mov
aam
jmp
lods
sub
mov
inc
pusha
aam
das
out
push
add
and
xor
nop
dec
sub
pop
pop
lods
or
adc
bound
bound
adc
pop
mov
inc
inc
adc
push
mov
repnz
add
stc
adc
bnd
or
push
mov
jo
sub
in
in
cs
out
xor
test
stos
fwait
lret
mov
in
lret
lods
xchg
in
lret
cmp
lret
jl
out
push
flds
add
mov
test
inc
add
dec
aad
test
xchg
mov
push
fnsave
add
lock
xor
lods
je
cmc
and
das
test
outsl
orl
aam
dec
dec
aam
xor
cli
or
mov
inc
mov
nop
mov
inc
xchg
das
insl
push
shlb
add
add
add
add
addl
lods
cmp
arpl
test
addl
vmptrld
cmp
mov
cmpsb
add
xor
jnp
mov
mov
add
cmp
fidivl
call
fstpt
sub
fmul
ret
xor
notl
xor
lods
insl
pop
incl
cld
test
dec
mov
add
add
add
add
dec
je
mov
into
jp
pushf
adc
xor
jp
dec
push
je
inc
sbb
or
pop
rclb
pop
pop
mov
and
push
dec
enter
fs
and
leave
cld
jmp
push
dec
push
push
lahf
cld
sbb
in
pop
sbb
in
iret
imul
or
call
hlt
sub
or
test
add
sub
or
lcall
push
cmp
push
stos
lcall
add
inc
xchg
enter
fimull
sbb
scas
dec
icebp
mov
add
je
inc
lcall
aam
xor
into
or
add
jo
lcall
add
jmp
add
add
add
insl
in
push
xor
xchg
dec
mov
cmc
cmpsb
nop
int
jmp
sub
sub
jo
fldl
push
lods
fprem
jmp
add
test
addr16
pusha
enter
push
dec
xor
pop
push
push
ljmp
std
jnp
adc
or
fprem
jmp
add
mov
jo
jmp
mov
add
movsl
insb
in
outsb
and
xor
or
pop
xor
enter
or
out
or
pop
stos
cmp
rol
jbe
add
call
dec
fsubrs
mov
movsl
inc
fmull
movsl
cmp
xchg
sub
leave
outsb
lock
movsl
inc
adc
push
cmpl
stc
incl
add
xor
loop
call
inc
call
mov
xor
testl
xor
add
inc
and
mov
enter
mov
js
and
leave
cld
call
sub
xchg
aad
mov
push
push
mov
cli
rclb
add
jg
add
inc
lret
push
stc
inc
leave
cld
popa
push
test
pop
cmp
leave
cld
test
mov
dec
dec
test
or
hlt
adc
mulb
lret
xor
pop
or
bnd
aad
adc
jl
jle
pop
fisttps
ret
mov
enter
movsb
loop
aam
int
into
insb
pop
mov
out
add
test
mov
inc
jge
nop
pop
movsl
repnz
mov
loope
sub
mov
rcll
and
dec
xchg
or
mov
in
insl
scas
push
stos
mov
add
inc
add
test
das
into
jnp
orb
pushf
or
xor
or
mov
push
mov
dec
test
pop
test
jns
sub
add
add
add
add
inc
pop
dec
stos
add
int
mov
fsub
popa
jo
movsl
std
mov
clc
xchg
push
jno
fs
loope
fwait
mov
sub
mov
test
jno
clc
fmuls
jmp
dec
sub
jo
add
mov
mov
mov
add
add
jo
int3
lds
mov
adc
adc
or
test
dec
push
sbb
mov
faddl
dec
dec
sahf
adcl
not
sti
insb
or
stos
adc
int3
mov
adc
int3
inc
push
in
mov
cmpsl
mov
sbb
cwtl
or
ret
cwtl
or
add
rolb
mov
loop
jne
leave
push
gs
mov
fidivrl
dec
lret
dec
lret
dec
into
cltd
add
sbb
int3
lea
aas
int3
popf
test
int3
xchg
xor
in
lret
jl
frndint
test
mov
dec
dec
les
jbe
add
xor
test
add
in
rcl
sti
jl
dec
xchg
add
add
pushf
inc
sub
ss
in
shlb
es
pop
inc
xor
jo
or
adc
repz
clc
test
sub
sar
jp
sti
repz
test
xor
shl
jp
in
adc
dec
arpl
aam
adc
movsb
jae
stos
sarb
push
add
cwtl
rolb
shr
mov
xchg
aam
adc
mov
subl
rcrb
push
test
popa
jle
sub
xchg
shl
add
stos
cmp
sub
insl
ret
sub
jmp
iret
int3
cli
es
xlat
adc
cld
adc
bound
ds
push
jmp
test
add
inc
xlat
lret
mov
in
lods
adc
lret
adc
loopne
dec
pop
std
stos
push
xor
mov
dec
jle
mov
jae
ret
lods
clc
arpl
popa
gs
xchg
adc
pop
adc
lret
popf
adc
lret
xor
xchg
in
bound
test
and
outsb
outsb
mov
add
sub
dec
mov
add
scas
inc
add
hlt
mov
out
ja
mov
and
sub
add
or
mov
lods
ret
or
insl
jbe
xor
sti
je
in
jbe
push
inc
or
cwtl
add
mov
adc
repnz
add
push
adc
cmp
repz
add
cmp
cmp
add
push
fwait
push
mov
mov
add
push
cmp
adc
push
or
or
cld
jmp
push
nop
or
add
and
in
adc
fsts
decl
fsts
mov
or
in
stos
push
test
pop
push
xchg
bswap
xchg
std
repz
add
cmc
into
mov
clc
fcoms
add
cld
ljmp
or
dec
xor
pop
outsb
mov
inc
mov
in
and
pop
sub
ds
xchg
out
push
xor
or
out
push
xor
sub
aad
loopne
cmpsb
sub
jb
aad
iret
js
and
mov
arpl
mov
mov
repz
scas
lods
out
push
mov
jmp
js
gs
mov
fs
orb
pop
mov
mov
or
push
add
popf
push
aad
hlt
or
or
pop
test
mov
xbegin
xchg
jecxz
push
fst
hlt
or
or
mov
repnz
inc
xbegin
add
add
add
add
adc
pop
shll
pushf
ljmp
push
cmp
test
loop
std
sub
and
sbb
adc
adc
test
stc
je
ret
xor
add
cmp
jmp
or
clc
mov
xor
adc
or
or
add
lds
pop
mov
xor
push
xor
scas
adc
stc
push
cmpsb
jg
mov
dec
dec
lock
leave
jne
std
out
pcmpeqw
jmp
pop
cmp
mov
movsl
sbb
add
or
sahf
sahf
adc
cmp
dec
adc
or
loope
out
pop
jmp
inc
inc
add
xchg
ficoml
or
add
or
scas
push
add
adc
xchg
lock
push
test
cmp
and
adc
cmp
repz
js
adc
xchg
and
xchg
jns
fnstcw
nop
bswap
movsb
add
cmp
push
stc
mov
xchg
adc
sbb
xchg
push
mov
scas
cli
je
aam
pop
stc
sahf
sbb
add
popf
mov
mov
hlt
xlat
dec
lahf
sbb
lret
aam
idivl
gs
mov
jmp
jo
inc
bound
cmp
push
or
fs
jnp
enter
dec
stc
sbb
xor
sbb
mov
fisttps
mov
filds
mov
xchg
popa
call
outsb
out
flds
add
add
dec
shlb
and
dec
push
pusha
fisubrs
jae
aam
addr16
jl
adc
add
mov
cmpsl
into
add
xchg
pop
inc
add
cmp
sub
mov
lret
js
push
sub
jmp
push
xor
in
xor
jb
xor
jne
lret
add
mov
xor
jmp
mov
or
add
push
xor
jne
mov
or
mov
xbegin
add
divl
and
jnp
test
adcl
add
sub
dec
mov
add
mov
adc
add
sbb
loopne
xchg
xor
cmpl
sub
dec
push
mov
insl
sub
or
sub
or
not
adc
loop
dec
inc
mov
add
sub
rcrb
sub
mov
dec
mov
bound
push
outsl
push
adcb
mov
out
cld
push
sub
insb
sub
sub
adc
add
add
outsb
push
cmp
xchg
hlt
decl
lcall
fiaddl
in
pop
inc
rolb
inc
test
xchg
pop
bound
test
clc
push
push
shl
frndint
call
sub
stc
jns
cld
pop
jmp
aaa
out
lock
fidivl
sub
push
push
rorb
xor
add
aaa
repnz
scas
out
sbb
pop
mov
iret
insl
iret
jns
sub
jp
lods
push
add
stos
out
push
xor
mov
sub
mov
pusha
mov
bound
pop
add
shr
lret
jae
mov
or
mov
add
adc
jne
sbb
add
in
aad
es
fwait
test
cmp
ljmp
or
test
loop
adc
inc
aad
xor
jmp
test
dec
loopne
loopne
lcall
jmp
addr16
or
jmp
fs
cmp
pushl
adc
jb
push
cmp
dec
add
push
movl
or
inc
stos
adc
jno
bound
lods
add
imul
je
dec
inc
add
cld
sub
sub
or
data16
into
dec
and
jmp
addl
inc
or
jmp
idivl
jno
or
hlt
push
inc
or
imul
add
add
dec
idiv
iret
rcrl
mov
daa
inc
add
xor
int3
out
dec
xor
xor
adcl
fadds
jnp
call
mov
and
mov
rorl
rclb
and
cltd
mov
sub
rcrb
dec
jne
mov
jecxz
into
add
xchg
sub
xchg
mov
ficoml
sub
fiaddl
sub
or
adc
mov
ja
inc
dec
mov
mulb
sbb
add
loope
or
pop
movsl
and
shll
xchg
and
xchg
dec
sub
cltd
cmp
xchg
scas
popa
js
add
ret
xchg
mov
add
ret
out
cmpsb
fsubs
in
xor
test
and
jo
jno
and
in
xor
cmp
minps
and
outsl
out
aad
fwait
in
jge
add
push
dec
imul
fsubs
add
outsl
out
xchg
xor
jmp
add
add
add
int
add
cmc
lret
fildll
dec
pop
lret
cmp
int
fisttps
adc
cmp
push
xor
call
push
movsl
sti
into
adc
iret
cmp
dec
sub
test
adc
xor
pusha
iret
cmpsb
push
mov
xchg
clc
mov
das
stc
faddl
inc
jmp
push
adc
add
add
pop
sub
sub
clc
clc
xchg
xor
aas
xchg
push
add
icebp
int3
fidivs
jne
mov
and
mov
and
cld
leave
idivl
mov
mov
or
test
enter
mov
mov
mov
leave
jmp
mov
mov
mov
mov
or
xchg
fcmovnbe
rcll
add
mov
testl
and
mov
push
cmp
ja
aas
pop
cmp
or
jbe
jae
inc
push
xor
sub
dec
and
into
push
and
add
lock
test
fisubrl
lret
mov
popf
movsl
push
mov
aaa
cmp
dec
cli
cmpsb
fdivrl
ds
and
add
inc
or
adc
push
dec
and
pop
pop
sub
mov
mov
popf
jp
lret
xchg
xchg
enter
cli
push
lret
dec
pop
jno
push
push
leave
bound
push
mov
mov
add
mov
push
xchg
xor
js
add
mov
jae
scas
sbb
and
mov
es
sbb
xor
sbb
sub
add
or
pop
incb
sub
test
das
push
add
push
and
xor
mov
fidivl
rol
pop
sbb
cmp
cli
hlt
sub
dec
xor
inc
in
out
into
cmp
pop
xor
repnz
or
enter
xor
push
mov
inc
jmp
sbb
push
insb
add
or
sub
pop
cld
mov
nop
fwait
mov
mov
mov
int
xlat
sbb
add
jb
bswap
mov
adc
inc
or
xor
shl
jge
test
mov
rorl
clc
cli
xchg
jne
push
xor
bound
adc
repnz
bound
adc
xchg
add
xor
cmp
loope
flds
fs
sti
xlat
mov
sar
shl
out
or
adc
mov
push
divl
jae
and
jno
and
pop
dec
and
add
dec
push
xchg
xchg
cmp
sti
xor
inc
dec
add
pushl
icebp
cmp
jmp
outsl
clc
lea
pop
mov
add
mov
stos
add
pop
pop
pop
push
pop
jecxz
push
push
stos
lods
notl
push
call
jb
mov
or
les
jno
inc
add
pop
jno
push
pop
add
xor
adc
inc
ret
fidivs
push
cld
incl
inc
push
and
repnz
mov
add
push
aas
cld
xchg
xchg
lock
cmpsb
aad
xchg
xchg
push
decl
add
arpl
lret
cld
call
pop
pop
mov
dec
xchg
das
mov
add
jmp
push
aam
ret
sbb
sbb
insb
ret
bswap
je
adc
hlt
int
insl
aas
jne
push
hlt
int
cmp
push
sub
and
add
sub
fcoms
in
pop
fldln2
int3
arpl
adc
int
sbb
sbb
int
lret
xadd
in
and
scas
dec
jne
jb
aaa
xor
inc
jne
push
add
pushl
push
xor
stc
jns
out
push
xor
xchg
push
xor
cmpsl
pop
mov
pushl
sti
call
cmp
ljmp
add
call
sbb
lcall
std
call
clc
mov
xor
pop
std
call
fdivs
out
pop
std
call
mov
std
jmp
pop
std
call
cltd
mov
jb
std
jmp
std
call
xchg
mov
lcall
cmp
dec
sub
add
add
add
mov
idiv
push
stc
cmp
inc
stc
cmp
cmp
add
xlat
mov
cmp
es
cmp
cmp
add
mov
idiv
jbe
cmp
cli
dec
cmp
clc
sub
idiv
jns
cmp
insl
inc
cmp
clc
sub
idiv
push
cmp
pop
cmp
mov
mov
cmp
arpl
add
add
cmp
insl
aas
push
cld
call
lock
jbe
add
push
fldl
push
xchg
lock
push
dec
sahf
aas
push
cmp
call
lock
ss
aas
push
push
mov
call
icebp
clc
push
dec
addr16
push
popa
addr16
push
cld
call
cld
call
cld
call
jge
cs
fisttps
jns
jg
add
cld
pop
pusha
cld
pop
pusha
cld
push
pusha
cld
push
pusha
cld
arpl
cld
fwait
inc
cld
xchg
out
int
out
adc
out
inc
pop
out
cmp
out
cmp
pop
out
in
out
jmp
push
out
jno
out
gs
add
out
pop
and
add
out
test
out
mov
out
lea
out
add
push
and
add
and
add
and
add
out
and
and
add
and
add
and
add
and
jmp
push
xchg
push
jmp
push
lock
psubsw
psubsw
psubsw
psubsw
psubsw
push
jmp
push
nop
psubsw
add
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
adc
push
cmp
jmp
push
lods
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
verw
xor
adc
xor
adc
xor
adc
rclb
add
mov
adc
mov
js
mov
push
xor
adc
xor
sub
sub
sub
and
cmp
and
cmp
sbb
sub
sbb
sub
adc
clc
xor
adc
xor
call
xor
clc
xor
adc
xor
psubsb
clc
psubsb
hlt
xor
sqrtps
cld
jmp
cld
or
add
cld
rcrl
cld
test
inc
cld
mov
data16
cld
pusha
cld
mov
inc
cld
sub
cld
mov
dec
cld
mov
cld
mov
cld
mov
cld
scas
dec
cld
stos
inc
cld
cmpsl
pop
cld
mov
dec
cld
fwait
inc
cld
xchg
pop
cld
xchg
push
cld
dec
cld
mov
cld
xchg
add
cld
adcl
jg
cld
jnp
xor
add
out
pushf
and
add
push
out
cwtl
and
add
and
out
or
out
adc
out
cmp
out
and
out
sub
out
andl
out
imul
out
add
jno
out
cmp
and
add
out
popa
and
add
out
mov
out
push
and
add
add
push
mov
jmp
push
mov
adc
push
pusha
adc
push
hlt
psubsw
adc
push
rorb
jmp
push
fmuls
jmp
push
fmull
jmp
push
call
or
push
lock
add
push
je
jmp
push
jl
jmp
push
orb
push
test
jmp
push
mov
jmp
push
xchg
or
push
cwtl
or
push
rorb
jmp
push
fmuls
add
cs
clc
rorb
call
cs
les
mov
cs
push
test
scas
cs
mov
jp,pn
add
test
mov
vmread
insb
punpckhbw
dec
push
push
cs
push
js
inc
push
push
cs
push
cmp
and
sub
sbb
sub
sbb
cmp
adc
cmp
and
sub
pop
movaps
sbb
clc
sub
adcb
cld
mov
dec
cld
test
cld
and
cmp
cld
flds
add
cld
cs
repz
cld
out
inc
cld
jmp
cld
out
cld
jecxz
cld
filds
fistpl
xlat
push
cld
cmovg
cld
or
cld
rcrl
push
cld
mov
inc
cld
mov
cld
mov
cld
jns
cld
stos
inc
cld
in
inc
cld
xor
cld
lahf
dec
cld
fwait
inc
cld
sub
out
add
lahf
and
add
and
add
and
add
and
add
and
add
and
add
out
stc
pop
out
xchg
pop
out
lahf
pop
out
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
cmp
out
add
jno
out
push
cmp
out
cmp
cmp
or
push
cmp
jmp
push
mov
jmp
push
test
jmp
push
mov
or
push
cwtl
or
push
xchg
or
push
pop
or
push
push
or
push
push
or
push
dec
or
push
push
jmp
push
bound
jmp
push
jo
jmp
add
add
add
push
in
or
push
call
or
push
loopne
jmp
push
fmuls
jmp
push
loopne
jmp
push
fmuls
add
xor
sub
pushf
or
xor
push
clc
xor
push
call
xor
push
clc
xor
adc
call
xor
push
mov
xor
push
test
pusha
or
xor
add
xor
xor
test
dec
or
xor
js
inc
or
xor
push
xor
or
xor
push
xor
cmp
sub
xor
sub
and
xchg
cld
sbb
cld
pop
push
xchg
cld
adc
cld
cmovne
cld
pop
push
xchg
cld
add
cld
incl
cld
sti
pop
xchg
cld
testl
add
add
add
cld
repz
xchg
cld
out
dec
xchg
cld
jmp
xchg
cld
out
xchg
cld
jecxz
xchg
cld
fisttps
cld
fistpl
cld
xlat
pop
xchg
cld
rorl
cld
iret
dec
xchg
cld
lret
pop
xchg
cld
pop
xchg
cld
ret
dec
xchg
cld
mov
pop
xchg
cld
mov
xchg
cld
mov
xchg
cld
dec
xchg
cld
ret
cld
cmpsl
pop
xor
add
cmp
add
cmp
add
aas
out
inc
aas
out
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
out
repz
add
cmp
add
out
cmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
jmp
push
sub
jmp
push
dec
add
jmp
push
inc
add
jmp
push
xor
jmp
push
lods
add
jmp
push
mov
add
jmp
push
mov
add
jmp
push
cmc
add
add
push
jl
jmp
push
pop
or
push
addb
push
js
add
mov
push
das
lods
or
das
push
or
das
mov
or
das
cwtl
or
das
xchg
or
das
nop
or
mov
clc
mov
call
orb
mov
clc
cs
push
call
jo,pn
mov
add
cs
cs
or
cs
or
cs
or
dec
or
rorl
push
cltd
cld
dec
pop
cltd
cld
inc
dec
cltd
cld
inc
dec
cltd
cld
aas
pop
xchg
cld
cmp
cld
aaa
dec
xchg
cld
xor
cld
pop
pop
xchg
cld
sbb
cld
pop
dec
xchg
cld
adc
cld
cvtdq2ps
cld
cmpsb
add
dec
xchg
cld
add
cld
lcall
cld
sti
pop
xchg
cld
testl
cld
out
pop
xchg
cld
jmp
xchg
cld
out
xchg
cld
jecxz
xchg
cld
fistps
cld
fistpl
cld
xlat
dec
xchg
cld
rorl
cld
iret
pop
xchg
cld
lret
pop
xchg
cld
dec
xor
add
aaa
out
movsl
aaa
out
cltd
aaa
out
popf
aaa
out
add
out
cmc
ss
jmp
add
ss
sub
ss
mov
ss
loope
out
aad
out
leave
ss
int
out
shll
out
gs
out
pop
aaa
out
pop
aaa
out
inc
aaa
out
xor
aaa
out
xchg
add
aaa
out
add
ss
std
ss
and
add
push
cld
push
jmp
push
hlt
push
jmp
add
add
add
push
lock
jmp
push
push
pop
jmp
push
mov
add
push
mov
jmp
push
scas
add
push
mov
jmp
push
dec
pop
jmp
push
and
jmp
push
push
add
jmp
push
mov
pop
jmp
push
testb
lahf
pop
jmp
add
add
add
push
mov
pop
add
xor
or
fisttpll
push
xor
or
rorl
js
int
push
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
add
add
add
add
xor
or
xor
test
jns
test
jne
mov
cltd
cld
jb
cltd
cld
rorl
mov
pop
cltd
cld
mov
cltd
cld
mov
cltd
cld
lods
pop
cltd
cld
test
dec
cltd
cld
mov
pop
xchg
cld
cltd
pop
xchg
cld
xchg
dec
xchg
cld
xchg
dec
xchg
cld
lea
cld
mov
cld
test
cld
addl
add
add
add
cld
jge
xchg
cld
jns
xchg
cld
jne
xchg
cld
jno
xchg
cld
insl
pop
xchg
cld
imul
cld
popa
dec
xchg
cld
pop
pop
xchg
cld
pop
pop
xchg
cld
push
dec
xchg
cld
push
dec
xor
add
cmp
add
cmp
add
cmp
add
cmp
add
out
dec
cmp
add
out
inc
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
out
imul
add
out
arpl
out
pop
cmp
add
out
push
cmp
add
out
getsec
out
or
out
pop
aaa
out
add
out
pushl
out
sti
ss
divl
out
repz
scas
ss
stos
ss
push
jle
jmp
push
jbe
jmp
push
outsb
push
jmp
push
out
jmp
add
add
add
push
ljmp
push
loop
jmp
push
fiaddl
jmp
push
rolb
jmp
push
movb
push
mov
push
jmp
push
mov
jmp
push
scas
push
jmp
push
es
jmp
push
push
pop
jmp
push
push
pop
jmp
push
push
pop
add
das
push
or
add
das
dec
or
das
inc
or
das
or
cmp
js
or
xor
push
das
sub
js
or
and
push
das
sbb
cmp
push
or
das
adc
sub
push
or
das
or
cmp
push
or
das
add
sub
decb
clc
cs
or
testb
repnz
add
cs
or
cs
cltd
cld
in
cltd
cld
loope
cltd
cld
fstpl
cld
cld
aad
cltd
cld
rcrl
cld
int
cltd
cld
leave
dec
cltd
cld
lds
cld
rcrl
mov
dec
cltd
cld
mov
cltd
cld
mov
cltd
cld
lods
pop
cltd
cld
test
dec
cltd
cld
mov
pop
xchg
cld
cltd
dec
xchg
cld
xchg
dec
xchg
cld
xchg
add
pop
xchg
cld
lea
cld
mov
cld
test
cld
sbbl
cld
jns
xchg
cld
jne
xchg
cld
jno
xor
add
out
imul
add
out
xor
out
daa
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
out
cmp
out
aas
cmp
add
cmp
add
add
cmp
add
cmp
add
cmp
add
out
addr16
add
out
pop
cmp
add
out
push
cmp
add
out
insb
sub
add
out
pop
sub
add
sub
jmp
push
sahf
add
push
xchg
add
push
xchg
add
push
mov
jmp
push
addb
push
xchg
jmp
push
jle
jmp
add
push
jbe
jmp
push
outsb
add
push
loop
jmp
push
fiaddl
jmp
push
rolb
jmp
push
lsl
push
std
add
push
stc
add
push
add
add
push
in
add
push
push
add
push
stos
add
push
mov
jmp
clc
xor
call
xor
add
clc
xor
add
add
call
xor
mov
xor
test
push
pop
mov
xor
test
add
js
sti
add
xor
pop
push
xor
pop
js
cs
js
sub
push
xor
pop
cmp
push
pop
cmp
sbb
sub
push
pop
sub
adc
cmp
push
pop
cmp
or
sub
push
pop
push
mov
add
add
add
add
push
mov
add
cld
std
push
mov
stc
dec
mov
cmc
push
mov
icebp
dec
mov
in
push
mov
jmp
push
mov
loope
mov
fstl
cld
cld
aad
mov
rorl
cld
int
mov
test
cld
adcb
jl
mov
mov
dec
mov
mov
mov
mov
mov
lods
push
mov
test
push
xchg
mov
add
add
add
dec
xchg
popf
push
xchg
cltd
dec
xchg
xchg
push
xchg
xchg
dec
xor
add
ss
lret
ss
xlat
ss
shll
out
jg
out
jnp
out
addr16
arpl
out
outsl
ss
imul
add
ss
xor
out
pop
ss
sbb
out
pop
ss
add
out
out
dec
xor
add
out
test
out
add
js
out
cmp
out
daa
ss
and
out
das
ss
sub
out
ja
out
jae
out
pop
ss
pop
ss
push
inc
add
push
inc
add
push
cs
push
sub
jmp
push
xor
jmp
push
lcall
push
mov
add
push
mov
jmp
push
xchg
add
push
jle
jmp
add
add
add
push
jp
jmp
push
addb
push
outsb
add
push
push
jmp
push
jb
jmp
push
fiaddl
jmp
push
loop
jmp
push
lret
push
rolb
jmp
sub
lcall
xor
add
sub
xchg
clc
das
jle
call
das
jbe
add
clc
das
jb
clc
das
outsb
add
call
das
bound
test
pop
add
mov
das
dec
add
test
inc
add
js
ds
push
das
xor
push
das
es
dec
mov
and
sbb
push
mov
adc
add
add
add
dec
mov
adc
or
push
mov
add
push
mov
std
dec
mov
stc
push
mov
cmc
dec
mov
icebp
push
mov
in
dec
mov
jmp
dec
mov
loope
mov
fisttpll
cld
fsts
cld
aad
mov
rcll
cld
int
mov
leave
push
mov
lds
cld
rcll
mov
push
mov
mov
mov
mov
add
out
cmpsl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
out
imul
pop
xor
add
out
addr16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
push
pop
add
push
dec
add
push
inc
add
push
push
add
push
dec
add
push
cmp
push
ss
push
inc
add
push
ds
push
sub
push
es
push
xor
push
cs
push
lcall
push
mov
cld
call
add
push
xchg
call
push
mov
call
push
jbe
call
push
jle
call
push
cmp
call
push
inc
ljmp
or
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
push
mov
mov
mov
inc
push
imul
add
mov
call
or
inc
les
add
add
push
adc
sbb
push
pop
call
enter
or
clc
popf
xchg
sub
outsb
xor
dec
mov
call
cmp
sub
rolb
push
mov
inc
dec
or
and
mov
push
fdivr
jl
xor
call
cld
call
rcll
testl
add
add
add
push
movsl
ljmp
xchg
push
rcl
lds
out
out
cs
test
inc
test
gs
push
push
inc
and
add
xor
jo
pop
mov
repnz
sbb
cmpb
dec
dec
mov
cli
push
jno
push
push
push
repz
int3
call
sbb
adcb
in
mov
dec
aam
test
scas
in
add
jmp
cwtl
inc
or
sarl
inc
jae
push
clc
push
popf
aam
lods
push
xor
sub
sbb
fmuls
sub
clc
out
xor
jmp
lea
add
jbe
clc
jmp
push
adc
jmp
adc
push
xor
stos
into
icebp
sbb
pop
adc
jmp
and
push
xor
stos
add
into
sbb
enter
and
xor
sub
xchg
inc
or
lock
and
stc
aas
test
add
in
dec
addl
scas
or
daa
xchg
push
fdivrl
add
testl
lock
and
jmp
cmpb
insl
push
adc
stc
cmp
inc
pop
das
scas
or
add
stos
mov
subl
sbb
sub
das
insl
push
sar
call
das
scas
or
xchg
mov
cli
lods
mov
sub
push
into
jl
or
mov
dec
sbb
inc
leave
push
add
add
push
inc
addb
sarl
mov
add
add
add
ror
and
adc
dec
sub
insb
mov
call
jno
stc
cs
out
ror
clc
rcrb
cld
popf
mov
cmpsl
bswap
into
mov
push
movb
insb
cmpl
push
inc
sbb
xor
repz
sub
test
sub
push
push
scas
stos
and
outsl
gs
cmp
test
xor
push
add
push
mov
fmull
scas
mov
outsb
sbb
fildl
xchg
stc
rcrb
sbb
fistl
scas
pop
push
popa
sbb
fstpt
leave
shr
mov
test
mov
push
xor
push
push
lods
sub
dec
sub
repz
cmpl
adc
add
add
add
add
xor
jne
mov
dec
sub
xor
jne
mov
mov
mov
push
xor
pushf
dec
adc
pop
sarl
sub
clc
not
push
adc
cmpsl
cs
stos
sbb
sarl
lock
shr
sbb
adc
jmp
sbb
add
add
adc
jnp
dec
sbb
clc
add
insb
loopne
call
popa
idiv
aas
insl
jnp
imul
push
and
lcall
insl
loopne
sbb
dec
stc
ret
stc
pop
fcoml
testl
pop
lods
cmp
mov
push
idiv
jmp
or
inc
push
xor
sbb
add
jmp
jne
cmp
std
out
jle
jmp
sbb
stc
sbb
jnp
stc
pop
pop
and
xchg
leave
clc
stc
ror
clc
out
push
adc
cmc
test
dec
sbb
addr16
push
add
pop
jbe
dec
cwtl
inc
sbb
xchg
icebp
xor
mov
xchg
test
jl
xchg
jb
adc
add
push
aam
jge
jp
mov
fstpl
lret
pop
out
xchg
cmp
jb
mov
clc
cmp
iret
clc
push
sbb
push
inc
add
push
xor
xor
and
add
gs
inc
ss
add
leave
jb
aam
mov
adc
call
and
add
mov
int
or
aas
mov
mov
rcl
cld
add
push
inc
dec
xor
fsubrl
xor
int3
pop
mov
cmc
dec
add
out
rcr
out
push
mov
push
cmp
out
mov
mov
xor
jae
rorl
push
ljmp
jge
out
mov
pop
rorb
cli
or
jle
int
hlt
les
push
ljmp
call
sub
or
ljmp
jae
stos
jecxz
cs
int3
jl
test
jae
rorl
push
ljmp
clc
sub
or
in
xor
mov
mov
sub
or
out
mov
mov
or
int3
jl
xchg
cmp
add
divb
pop
xorl
jne
call
jbe
mov
js
mov
mov
and
jns
call
cmp
or
in
jns
ret
and
adc
mov
xor
idiv
pusha
xor
inc
mov
push
js
std
out
ja
ljmp
mov
push
add
cmp
std
out
jns
jmp
jne
sub
std
out
mov
clc
xlat
cmpl
mov
cmpl
or
cmpl
adc
clc
jns
cmp
and
xchg
mov
cmc
mov
cltd
dec
add
push
cmpb
dec
add
push
cmpb
pop
xchg
dec
punpckhwd
lret
push
dec
push
push
lods
xor
sbb
clc
xchg
push
dec
adc
jmp
mov
adc
pop
repz
sub
stc
ror
scas
cmp
push
add
test
repnz
add
xchg
leave
gs
popl
mov
jb
leave
outsb
pop
aas
add
xor
cmc
add
into
test
xor
mov
inc
arpl
mov
imul
inc
cs
repnz
insl
bswap
pop
scas
cmp
xchg
fisttpl
push
sbb
jl
inc
lea
sbb
sti
ficomps
int
push
and
jae
cli
test
or
sub
jne
clc
scas
adc
add
incb
xchg
imul
push
xchg
mov
push
ljmp
clc
sub
int3
test
out
sbb
lea
jl
orb
es
jl
pusha
mov
mov
sti
push
mov
jl
int
cli
je
gs
stc
aas
jno
jge
xor
test
add
and
ljmp
es
sbb
inc
and
shll
sub
insb
or
iret
jo
call
stos
lods
jne
in
std
out
jo
sti
lods
jne
mov
std
out
jne
jnp
jne
mov
or
or
sub
add
les
call
ret
jmp
or
jge
jl
adc
add
shl
cmp
dec
xchg
dec
or
pop
pop
fdivl
lret
xchg
cmp
jb
mov
clc
shr
jmp
nop
or
std
or
stc
cld
call
jno
out
mov
jae
mov
jle
pop
lcall
test
pop
jle
aas
fwait
dec
adc
add
sbb
push
xchg
jg
push
cltd
cld
out
inc
ret
xor
inc
xor
pop
mov
stc
push
cld
xchg
fisttpl
jae
push
std
loopne
orb
out
push
std
neg
cmp
add
iret
in
xchg
std
andl
clc
out
cltd
subl
fmulp
add
flds
loop
push
cwtl
jnp
mov
jl
lds
xor
aam
or
mov
add
xchg
xorl
js
push
xchg
ret
jl
test
sub
jnp
push
add
add
jnp
out
add
xadd
or
ljmp
add
add
lahf
and
mov
mov
stos
rorl
adc
xchg
clc
push
cs
sbb
lea
xchg
sarl
jle
lods
inc
rcll
sbb
ja
sub
xchg
jmp
jo
jp
pop
jnp
push
and
inc
jo
inc
dec
jnp
or
test
add
sarl
cmp
inc
add
sbb
and
and
xor
ret
mov
mov
push
mov
sbb
mov
subl
rcr
mov
push
mov
negb
addb
jne
fdivr
stc
inc
jno
mov
pop
mov
test
mov
cmpsb
je
xchg
clc
test
clc
or
lret
cld
incb
add
shl
or
cltd
cld
jl
mov
call
aad
jg
ja
jae
xor
ss
roll
xchg
jae
sbb
addr16
sub
gs
jge
jae
xchg
imul
outsl
jae
pop
outsb
jae
jne
jae
insl
sub
das
je
mov
dec
aad
je
xor
adc
in
out
int3
in
add
pop
fldt
out
mov
in
out
lods
subl
fisttpl
cmp
sahf
mov
xchg
dec
ljmp
das
out
sub
les
mov
sbb
add
aas
outsl
xor
stc
push
rol
outsb
pop
inc
push
xor
add
fisubrl
out
push
scas
cmpsb
or
pop
movsl
rcll
addl
std
out
ljmp
lods
lods
aaa
mov
iret
scas
mov
inc
xor
ljmp
mov
jmp
jne
mov
push
inc
mov
clc
stos
ss
adc
add
sarb
testb
test
add
inc
or
out
sbb
or
xor
jmp
js
push
roll
call
push
push
lcall
sub
jnp
pop
push
pop
add
lods
lock
aas
insb
xor
jl
mov
roll
add
add
insl
or
mov
jo
addl
aaa
sti
jbe
dec
clc
add
aas
jo
addl
push
push
clc
idiv
dec
insb
jnp
ss
out
idiv
jnp
icebp
pop
test
call
ret
stos
ret
pop
jne
aam
clc
xadd
pushl
adc
xor
das
mov
add
cld
test
or
push
xchg
cld
js
scas
repnz
adc
aas
xchg
cmp
test
add
xchg
cld
jnp
add
mov
imul
rorb
je
pop
leave
lock
sbb
add
dec
mov
ds
lods
mov
xchg
inc
jb
dec
sbb
cmp
dec
sbb
cmp
inc
sbb
or
mov
push
push
add
sbbb
aaa
add
pop
mov
push
push
jmp
stos
jg
data16
jg
add
inc
jo
fisttps
inc
push
or
fdivrs
bound
mov
into
andb
adc
pop
jae
mov
inc
sub
mov
inc
jg
mov
mov
loope
jb
inc
aas
xor
add
and
add
pop
add
mov
call
mov
sti
jp
push
cli
sbb
xchg
nop
cmp
jmp
lret
mov
mov
jae
add
push
loopne
clc
pop
nop
xchg
loope
int3
ja
movsb
push
icebp
sbb
xchg
outsl
inc
rcll
add
fyl2x
sbb
in
fcmovnbe
jle
jmp
js
push
add
add
sti
jp
push
idiv
add
xchg
mov
fnstsw
sbb
jle
jmp
adc
loope
mov
or
daa
jnp
lock
idiv
stos
mov
ss
ret
loopne
jmp
aaa
test
sbb
cli
ret
adc
test
add
mov
xor
jg
add
mov
jbe
inc
loopne
pushl
jo
sarb
add
mov
shrl
insl
or
leave
sub
idivl
mov
push
adc
push
push
dec
loope
mov
add
push
xchg
test
idivl
pusha
scas
dec
in
mov
xchg
ss
add
mov
leave
idivb
or
ret
mov
jge
subb
imul
xor
test
mov
xchg
or
notb
sbb
xorb
sub
clc
cs
xor
sbb
out
aaa
push
mov
stos
in
leave
mov
xchg
dec
inc
dec
cmpsb
movl
add
add
add
insl
stos
imul
xor
add
arpl
jnp
adc
je
jnp
add
out
push
xor
push
push
xor
imul
xor
adc
mov
add
out
push
xor
int3
dec
jnp
push
push
xor
add
out
push
xor
stos
adc
clc
cltd
add
inc
xor
shll
add
push
xor
gs
clc
cltd
pop
xor
lea
clc
jmp
push
xor
sub
clc
inc
arpl
add
jl
jmp
push
xor
mov
cmp
jl
jmp
push
xor
pop
cltd
jnp
inc
dec
xor
pop
jmp
clc
jmp
push
xor
sbb
add
cmp
jl
jmp
push
xor
add
jmp
sti
ljmp
add
sub
add
adc
lcall
add
call
sub
sti
fsubl
add
add
mov
fs
fcompl
cld
mov
sub
sti
incl
add
cld
ljmp
add
push
pop
sti
jmp
sub
add
cmp
cld
call
cld
call
mov
cld
add
cld
push
cmpsl
mov
cld
push
sarl
cld
divb
mov
cld
ficoms
cld
out
mov
cld
add
and
cld
mov
mov
cld
cmpsb
lcall
xchg
mov
cld
xchg
mov
cld
jbe
mov
cld
dec
mov
cld
push
das
pop
mov
inc
js
lret
cmp
js
shrb
push
leave
sbb
js
leave
or
js
leave
add
std
ja
enter
in
ja
enter
add
int
aad
push
mov
ja
lret
mov
jl
lods
ja
lret
mov
lret
lcall
ja
lret
lods
lret
or
insl
ja
lret
call
jge
clc
jmp
lds
mov
add
je
mov
je
lahf
cwtl
je
mov
je
imul
je
jg
je
mov
je
xchg
pop
je
mov
dec
je
std
dec
je
lds
je
int
je
xor
sub
sbb
sbb
or
or
clc
jae
clc
jae
add
add
stc
sti
incl
sti
lcall
sti
ljmp
sti
decl
decl
sti
decl
sti
call
sti
lcall
sti
call
std
sti
mov
sti
out
sti
decl
sti
call
jmp
sti
pushl
std
sti
call
sti
pushl
sti
jmp
sti
incl
sti
incl
add
push
sti
inc
sti
jmp
sti
pushl
call
jb
jbe
jb
outsb
sub
mov
pop
fwait
jb
push
mov
int
inc
pop
into
cld
ds
int
cmpsl
int
cs
outsl
int
push
dec
jbe
push
sbb
push
push
mov
push
mul
push
out
loopne
cld
out
imul
add
dec
imul
jl
cld
into
xor
movb
mov
imul
xchg
imul
mov
insb
cld
xchg
call
jne
test
jge
fisubrl
je
imul
imul
imul
imul
insb
dec
je
imul
jnp
je
jnp
je
jnp
je
jnp
je
outsl
sbb
add
je
jnp
je
jnp
jae
jnp
jae
jnp
jae
jnp
jae
jp
jae
jp
jae
jns
jae
jns
jae
jns
jae
jns
jae
jns
jae
jns
jae
jns
jae
cli
sbb
or
or
sti
jae
add
jae
icebp
call
jae
inc
fnstenv
dec
fnstenv
pop
add
leave
je
xor
je
push
mov
je
jae
je
sbb
cltd
je
jnp
je
mov
je
sbb
je
iret
imul
popa
je
jmp
mov
jae
xchg
xor
loope
xor
subb
add
add
push
sti
jle
sti
pushl
sti
js
add
sub
sti
cmp
sti
ljmp
sti
ljmp
sti
inc
mov
decl
mov
call
mov
pushl
mov
sub
sti
cld
mov
call
mov
lcall
mov
call
mov
incl
add
mov
call
mov
scas
pop
mov
cmpsb
sbb
mov
cld
mov
mov
cld
jbe
mov
call
mov
cld
push
arpl
cld
inc
lds
cld
ss
cld
cs
mov
cld
push
pop
ret
mov
cld
push
dec
mov
cld
add
mul
mov
cld
out
mov
cld
scas
mov
cld
das
mov
mov
jo
ret
mov
movsl
jo
ret
mov
jo
ret
and
test
ret
aam
jne
rol
insl
jo
ret
gs
ret
pop
jo
ret
push
jo
ret
dec
jo
enter
enter
enter
enter
add
add
add
add
jo
enter
enter
lds
jo
std
outsl
mov
outsl
in
outsl
mov
in
movsb
aad
call
insb
clc
xorl
popa
sub
clc
movsl
and
clc
mov
insb
clc
jge
insb
clc
subl
clc
imul
lea
xchg
insb
clc
inc
xchg
insb
clc
xor
add
insb
clc
xchg
insb
clc
mov
insb
clc
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
fs
clc
sarl
je
clc
add
dec
ja
ljmp
js
ljmp
js
lcall
sti
decl
ljmp
jp
sti
incl
add
jbe
incl
jno
fdivs
ljmp
lcall
sti
jmp
fdivr
dec
fdivr
dec
jp
sti
jl
sti
ljmp
xor
add
cmp
sub
sti
ljmp
xor
add
call
lods
sti
call
mov
cld
fidivs
mov
add
add
add
add
xor
cld
movsl
mov
cld
mov
mov
cld
cmpsb
lahf
mov
cld
xchg
pop
mov
cld
xchg
cld
jle
mov
cld
outsb
cmpl
pop
push
cld
call
cld
call
stos
cld
call
cmp
shrl
call
fs
call
pop
cld
call
or
cld
push
mov
incl
add
cmp
call
das
mov
cmc
insb
movsb
mov
push
mov
add
cmp
aad
loope
push
mov
add
inc
mov
mov
out
push
mov
add
mov
mov
xchg
insb
or
mov
add
in
push
mov
add
nop
mov
push
mov
add
out
push
xor
roll
add
sarl
insb
sahf
shrl
insb
pop
aam
insb
pop
aam
insb
pop
aam
insb
incl
insl
clc
cmp
insl
clc
mov
insl
clc
mov
insl
clc
xchg
add
xor
or
pop
insl
clc
jmp
insb
clc
cltd
hlt
insb
clc
mov
in
clc
push
fsubrl
aam
clc
pop
int3
insb
clc
jmp
add
push
sti
jb
cmp
dec
les
push
lret
imul
in
shlb
xchg
adc
std
lahf
dec
shll
jne
data16
jb
sbb
flds
gs
sbb
sahf
xor
add
pop
jbe
cmc
imul
add
outsb
mov
inc
je
add
pop
cmc
imul
add
outsb
test
leave
add
insb
test
jb
and
mov
gs
sbb
mov
dec
add
dec
je
jle
inc
data16
cmp
pop
add
dec
je
loope
pop
push
filds
je
mov
cld
pop
push
lcall
jne
xor
outsl
mov
arpl
add
sbb
pop
arpl
cmp
push
inc
add
arpl
lock
arpl
std
inc
sub
ds
inc
adc
insl
push
cld
mov
in
sbb
mov
xor
sbbb
clc
jb
push
push
mov
xor
adcb
xchg
lods
push
bound
sbb
nop
rcll
add
add
add
add
out
ds
xor
popf
shll
cmpsb
fnstsw
outsl
fidivrs
push
xor
nop
rcll
ja
inc
inc
jne
push
and
add
repnz
sbb
add
sbb
xor
xor
clc
pop
push
xor
das
sub
std
shl
and
xlat
add
and
jnp
adc
fidivrl
sti
rol
xor
add
into
rcrb
fldenv
mov
call
jno
inc
nop
inc
sarl
xchg
jbe
mov
bound
push
icebp
bound
fldcw
xor
fisubl
push
add
sub
push
inc
xor
dec
inc
pop
iret
imul
adc
fistpl
bswap
bound
jle
inc
adc
call
and
bound
add
arpl
pop
or
aad
jmp
xor
jae
pop
dec
rolb
les
push
data16
xor
ljmp
or
insl
gs
pop
add
mov
cmp
or
incb
gs
or
sarl
push
sub
call
insb
loope
pop
je
sub
int3
ds
add
xor
adc
inc
pop
add
dec
add
mov
gs
inc
push
or
add
sub
aas
gs
add
dec
es
insb
dec
push
pop
insl
dec
cmc
call
adc
imul
pop
push
js
jns
mov
test
inc
call
jle
ja
push
cld
jmp
lds
insb
xchg
leave
sbb
int3
std
inc
mov
dec
arpl
dec
add
add
add
jmp
cmp
add
std
inc
push
es
arpl
clc
dec
sub
adc
adc
imul
or
inc
sub
xor
cmp
push
push
test
inc
stc
sbb
or
jb
das
aad
sti
rol
adc
out
aad
xor
lret
mov
add
test
mov
push
mov
xchg
xor
lret
mov
push
js
nop
das
mov
lret
jp
xchg
fdivrl
jb
pusha
pop
pop
lret
dec
dec
imul
add
xor
sub
dec
push
xor
dec
xor
call
and
fdivl
push
cmp
add
sub
das
or
adc
loope
push
sbb
add
push
xor
data16
dec
out
cmc
pop
xlat
push
dec
fsubl
add
add
mov
pop
int
shlb
mov
jp
cmc
imul
bound
ds
inc
nop
ss
dec
mov
push
jmp
inc
iret
pop
pop
cmp
jno
and
push
jmp
je
jae
adc
xor
fsubl
or
jg
pop
sbb
dec
aam
sbb
cmp
add
cmp
cmp
add
sub
xchg
and
push
push
pop
je
add
cmp
pop
jae
repz
aaa
dec
jb
cmp
mov
cmp
fstpl
inc
add
insb
sbb
add
clc
cmp
aaa
or
pop
outsb
popa
and
push
jb
push
popa
insb
adc
push
pop
push
mov
or
pop
outsb
popa
push
inc
and
bound
addr16
xor
add
adc
je
pusha
adc
xor
imul
dec
insl
adc
or
nop
push
cld
mov
xchg
adc
mov
and
push
cld
mov
add
add
add
push
cmpsb
adc
push
js
and
and
imul
push
mov
je
add
arpl
sub
imul
sub
inc
sub
push
imul
xor
push
xor
pop
and
lret
push
xor
daa
add
fsubrp
add
lret
stos
sub
add
ffree
adc
out
das
cmpsb
adc
xchg
ret
xor
lret
xchg
push
xor
mov
mov
mov
fnsave
jecxz
xchg
adc
jl
mov
outsb
ficoms
xorb
add
fstl
je
dec
sbb
stc
out
sti
das
add
inc
int
xor
popa
fsubs
cmp
add
add
xor
imul
sub
jo
and
push
mov
add
inc
int
jmp
jns
outsl
stos
pusha
rcrl
imul
bound
mov
insl
mov
add
push
out
bound
sub
jae
push
je
lods
cmp
cmp
inc
into
bound
add
pop
sub
arpl
push
movl
add
add
add
add
push
add
inc
pop
popa
or
push
pop
inc
popa
je
xor
add
or
insb
push
insl
or
sub
xor
dec
or
push
adc
imul
insl
xchg
add
ss
imul
and
cld
pop
pop
je
cmp
add
inc
insl
popa
repz
js
xor
add
add
inc
popa
jb
or
gs
inc
dec
popa
push
pop
bound
push
push
sub
sbb
je
pop
decl
call
or
add
pop
push
stc
cmp
pop
in
jns
dec
hlt
xor
add
cld
inc
hlt
pop
inc
pop
divl
arpl
xchg
imul
jbe
add
add
push
pop
add
shll
push
add
sbb
je
xor
push
decl
mov
dec
test
and
inc
cld
cmc
push
mov
packsswb
out
xor
and
inc
shll
sub
xor
and
add
adc
sub
adc
ucomiss
xor
push
and
add
add
sub
pop
adc
int3
sbb
in
jecxz
inc
fsubp
ret
add
in
inc
in
aaa
test
shlb
mov
mov
add
shll
add
add
xchg
shll
cltd
sar
xchg
add
push
out
bound
into
push
jo
ja
jo
ds
out
bound
jo
inc
dec
add
jae
jb
inc
add
insb
lret
xor
jmp
xor
dec
push
xor
pop
or
hlt
insl
add
insb
jmp
xor
dec
fstpt
ficompl
addr16
push
int3
insb
mov
std
push
arpl
add
push
icebp
imul
push
mov
insb
add
xor
gs
add
pop
sbb
mov
je
in
dec
popa
push
popa
pop
adc
add
xor
gs
jae
out
imul
adc
add
adc
adc
inc
in
gs
inc
gs
fs
outsb
inc
xor
add
or
gs
inc
outsl
sbb
pop
je
or
adc
add
pop
push
add
roll
push
fcomip
pusha
insb
push
lods
sub
mov
ds
lds
je
cmpsb
daa
jo
dec
cld
and
sub
and
dec
ss
insb
pop
lock
arpl
xchg
call
push
aas
arpl
sub
enter
insl
and
push
lock
or
mov
push
hlt
push
and
daa
adc
push
daa
pop
in
jne
add
add
add
cmp
je
cmp
mov
and
data16
cltd
cld
mov
jg
mov
imul
sub
nop
shll
fidivs
in
sub
inc
and
aam
add
out
cmp
sub
out
xchg
xor
sub
xor
xor
popa
add
stc
fldl
and
add
in
add
add
xor
sbb
fisttpll
and
in
stc
sub
rcr
sqrtps
stos
add
scas
leave
lds
movsb
incl
int
test
in
lahf
outsl
sbb
pop
imul
imul
xor
imul
insl
std
and
add
imul
fs
je
jae
je
dec
cmp
bound
popa
xor
and
arpl
push
and
add
adc
data16
adc
arpl
enter
int3
decl
out
imul
jae
bound
sbb
gs
adc
push
sub
add
adc
xlat
adc
int3
pop
pop
arpl
add
adc
daa
add
mov
out
sub
xchg
aaa
insb
insb
mov
xor
je
add
imul
and
jnp
pop
jb
movq
in
incl
sub
gs
pop
popa
outsb
dec
movq
arpl
dec
gs
adc
imul
dec
and
dec
je
xor
add
adc
jo
cmpsb
jle
imul
add
add
add
insb
decb
insl
pop
pop
mov
xlat
add
mov
and
and
dec
cld
push
push
mov
je
mov
sub
sub
decb
inc
inc
out
push
lock
cld
dec
ds
sbb
dec
cld
adcb
je
ds
clc
and
dec
cld
aaa
push
or
jecxz
and
add
and
add
add
or
lds
sub
int
sub
xor
add
lret
mov
jle
lret
sub
xor
add
les
adc
push
push
xor
add
jp
push
fmull
xor
lret
inc
adc
stc
add
adc
add
std
out
arpl
pop
and
hlt
loopne
sbb
dec
xor
loope
movhlps
fiaddl
sub
out
and
out
fldl
leave
dec
int3
inc
lretw
add
cmc
insb
mov
pop
in
imul
pusha
add
dec
push
jmp
inc
out
mov
add
push
pop
test
bound
int
dec
jb
dec
pop
jb
push
jmp
push
ret
insb
dec
cmp
push
jmp
addr16
sbb
xor
jmp
cmp
push
inc
or
push
outsl
sub
push
in
or
sbb
pop
push
cmp
sbb
testl
ja
add
jge
inc
outsb
in
push
aad
je
lds
je
ja
aas
gs
leave
cmp
lds
je
scas
das
cmp
xor
data16
das
mov
ja
or
test
xchg
add
je
adc
outsl
addr16
out
add
sbb
daa
pop
fisttpll
lea
daa
je
das
push
fs
add
add
jge
arpl
jbe
popa
mov
cld
xchg
daa
je
cltd
and
xor
dec
cld
fistl
push
mov
dec
cld
jbe
mov
je
shll
insl
mov
adc
dec
sub
adc
inc
in
adc
adc
mov
push
add
fs
push
and
adc
add
add
add
add
out
shrb
daa
repz
push
push
call
xor
and
int3
leave
sbb
xor
add
ret
mov
mov
cmp
cmpsb
and
xchg
sbb
xchg
sbb
xor
nop
lret
xchg
ss
je
jg
andl
jnp
cmp
xor
push
add
pop
lret
dec
sbb
inc
push
les
sub
out
out
das
add
push
xor
bound
jmpw
push
xor
jno
in
bound
es
inc
sub
ret
xchg
xor
push
push
in
iret
xchg
les
pop
pop
test
loope
movsl
outsl
fmull
jo
inc
mov
lds
addr16
jae
push
dec
std
mov
pop
in
bound
add
add
add
dec
fsubrl
push
mov
dec
movsl
sbb
push
jnp
repz
jmp
push
int3
push
add
jmp
sub
gs
out
pop
outsb
cmp
pop
add
jp
aas
gs
in
imul
inc
popa
inc
pop
dec
add
sub
pop
insl
push
sbb
and
push
das
dec
add
add
push
jb
adc
pop
and
jo
sbb
lods
cmp
add
lock
outsb
int
je
add
pop
xor
mov
daa
pop
jb
das
pop
jae
stc
ja
test
inc
add
daa
je
hlt
sbb
inc
decb
call
inc
add
push
pop
push
out
pop
sbb
decb
cmp
inc
in
sub
add
add
add
add
dec
xor
push
arpl
dec
sarl
mov
pop
je
jl
gs
iret
cld
inc
lods
ja
outsb
mov
daa
push
mov
in
cld
inc
insb
ja
insb
jbe
push
imul
daa
je
movsb
push
dec
je
pop
add
decb
xor
pop
inc
xor
cmp
xor
aas
xor
cmp
add
sbb
xor
adc
xor
jmp
repz
hlt
ret
add
xor
add
aad
sbb
ret
add
mov
lds
daa
lods
rol
mov
out
popf
xor
pop
mov
movsl
pop
jbe
mov
mov
out
hlt
xor
and
addl
das
stos
es
icebp
jp
popa
rclb
and
add
call
ja
inc
dec
dec
out
push
pop
jb
jmp
cmp
fisubl
pop
sti
jae
pop
aad
pop
cmp
add
sti
bound
xor
inc
or
shll
xor
and
insb
popa
roll
popa
shll
inc
xor
rcll
aad
fisubrs
outsl
fldt
fisubl
add
pop
sti
jae
data16
xchg
push
sar
inc
rcrl
das
fbld
xlat
jo
mov
sub
mov
sub
jae
add
adc
outsl
push
add
je
pop
sub
add
xor
push
sbb
imul
fs
and
pop
and
dec
xor
add
es
popa
push
cmove
sub
incl
add
aas
gs
pop
jae
adc
imul
ss
gs
adc
adc
and
call
adc
and
sub
bound
sub
cmp
arpl
pop
cld
test
pop
je
in
insl
ss
imul
sbb
je
clc
adc
pop
add
add
add
sub
pop
loope
movd
pop
cld
push
push
adc
je
cmp
insl
mov
pop
aas
push
push
add
dec
sub
jno
jp
push
data16
aam
nop
adc
arpl
imul
jo
data16
add
stos
and
js
jb
jp
aas
xor
add
aad
inc
sub
fistl
add
add
inc
add
aad
xor
mov
arpl
adc
xor
out
add
inc
and
adc
adc
add
add
jmp
stc
add
shrl
mov
frstor
ss
adc
mov
cs
mov
aam
jbe
lret
cmp
mov
stc
push
cli
fsubrl
dec
repz
add
add
add
push
scas
lahf
inc
fbld
repz
push
out
bound
int
dec
inc
fmuls
xor
inc
push
or
inc
int
cmp
push
pusha
sbb
push
jmp
inc
iret
dec
sbb
fidivl
xor
jb
mov
push
jmp
pop
iret
dec
stc
push
inc
int3
pop
in
ja
push
std
mov
add
add
add
aas
iret
dec
les
pop
add
pop
inc
adc
add
sub
cmp
sbb
inc
fnstsw
dec
popa
lret
and
popa
mov
sub
je
fistpl
cmp
cmp
or
add
jecxz
cmp
and
push
or
outsl
push
and
cmp
stos
add
push
jno
dec
in
imul
sbb
xor
jb
sbb
inc
dec
and
xor
add
pusha
sub
jb
and
dec
push
js
push
push
push
add
insb
adc
outsb
sbb
imul
add
movsl
sub
pop
adc
or
lret
sbb
cld
sti
push
cmpsb
or
aas
add
pop
push
cs
push
add
inc
add
hlt
add
addr16
sub
pop
adc
push
call
sbb
push
push
push
pop
je
inc
adc
bound
xor
push
push
cld
cmp
xor
and
int
adc
icebp
aad
jl
mov
push
xor
xlat
rcrl
rclb
jb
subl
xor
add
add
xchg
push
xor
xorb
fnstenv
cmp
xor
push
aas
adc
sarl
sbb
int
pop
and
xor
add
shlb
loope
adc
push
xor
or
sbb
repnz
adc
roll
pop
inc
or
ficoml
imul
popa
mov
dec
int3
xor
insl
rolb
add
inc
int3
popa
jecxz
rolb
fwait
xlat
dec
test
shrl
mov
insl
nop
bound
movsb
push
out
bound
rcrl
int
pusha
adc
insb
dec
inc
int
push
fs
dec
dec
xor
incl
inc
rcrl
int
and
shrl
int
sbb
jo
decl
inc
outsb
popa
and
add
xor
dec
jns
xor
insl
je
sbb
outsb
in
dec
add
xor
push
and
cmp
and
push
popa
data16
pusha
addr16
adc
and
cmp
and
xor
and
pop
jb
aas
clc
jmp
sub
jb
cmp
dec
dec
cmp
jb
jne
jns
xor
jo
add
pop
jae
addr16
push
jno
push
sbb
push
nop
or
sub
pop
loopne
lods
pop
cld
sbb
xchg
inc
in
dec
jle
cld
mov
jecxz
test
xchg
push
push
test
out
outsb
fs
subb
call
into
add
popf
in
sub
in
jno
mov
imul
bound
lcall
add
add
add
push
or
jae
sbb
arpl
clc
loopne
add
add
push
sub
jae
es
cli
out
lock
push
out
in
roll
imul
add
xor
cli
mov
shl
jmp
mov
mov
cmpsl
add
das
mov
xchg
int
call
push
ret
inc
jne
pushf
clc
mov
call
add
add
add
xchg
int
fcmovbe
inc
jl
and
jne
pop
rolb
sbb
je
cmp
xor
pop
xor
add
rcrl
pop
mov
inc
clc
jmp
inc
cli
push
loopne
xor
xchg
mov
pushw
inc
loope
adc
pop
std
sub
pop
cmc
sub
in
jmp
xor
sbb
inc
clc
mov
loopne
mov
push
aam
mov
in
into
insl
mov
repz
arpl
mov
bound
cmpsb
sarl
mov
out
cmp
xlat
arpl
cmp
push
addr16
lcall
dec
je
imul
jne
add
sub
popa
add
insb
push
dec
jne
cmp
cmp
cmp
out
sub
cmp
insl
clc
call
dec
je
insb
gs
addr16
lcall
dec
je
imul
sub
add
cmp
sarb
add
pop
inc
cs
push
add
push
pop
outsb
fdivl
outsb
int
addr16
cli
dec
outsb
push
test
mov
inc
add
in
fcmovb
push
and
mull
push
cld
sbb
in
sbb
ja
xor
add
adc
dec
cmpb
movsl
sub
out
mov
insb
in
insb
mov
out
push
ds
inc
ja
out
jbe
jge
bound
dec
cld
sbb
out
test
out
bound
sar
jp
pop
add
inc
mov
call
cmp
lcall
sub
push
repnz
ss
in
enter
ret
adc
pop
enter
add
or
loop
xor
icebp
cltd
into
push
stos
iret
add
stos
xor
add
iret
sbb
mov
sbb
stos
not
call
dec
iret
movsl
icebp
jae
shr
xchg
into
mov
add
xchg
into
ds
iret
xchg
in
ja
imull
mov
inc
aad
add
xor
imull
rorl
cltd
mov
ret
push
stc
ljmp
jl
imul
les
jne
clc
dec
push
std
push
cmp
sub
imul
inc
shrl
insb
aam
adc
add
ss
pop
xlat
pop
add
fildll
push
aad
mov
add
inc
stos
push
sar
repz
clc
stc
push
sti
insl
repz
lret
pop
test
nop
std
fistl
push
aad
insb
push
xlat
dec
clc
jmp
das
dec
gs
push
pop
je
push
bound
cmp
call
push
insb
gs
push
bound
add
cmp
jmp
jbe
jne
dec
clc
inc
gs
insb
gs
clc
incl
arpl
daa
inc
addr16
imul
cmp
decl
cmp
push
insb
gs
dec
gs
inc
popa
bound
cmp
dec
pop
jo
xor
add
push
insb
inc
push
nop
mov
xor
out
bound
ret
loope
sbb
xor
in
daa
inc
cld
sub
lock
inc
adc
add
push
or
jae
jmp
jmp
rolb
es
add
push
add
mov
adc
shlb
inc
cld
push
push
sbb
addb
cmpsl
push
push
insb
push
icebp
push
push
pop
cld
push
mov
ja
insb
bound
jmp
add
outsb
xor
xchg
xchg
loopne
les
out
scas
cmp
add
fbld
out
add
out
xor
cmp
aas
cmc
cmp
jmp
dec
lock
xor
adc
dec
ljmp
cmp
ret
add
xlat
ja
adc
mov
lret
leave
das
add
mov
filds
add
iret
jmp
das
ret
ror
fistpll
loope
xor
sahf
pop
or
fs
mov
clc
enter
fwait
scas
out
bound
mov
jae
mov
pop
mov
lds
int3
jmp
sahf
int3
jae
jge
imul
outsb
jmp
inc
addr16
jmp
cs
jae
add
cmp
insb
or
mov
clc
ficoms
inc
and
outsl
push
daa
mov
dec
lret
jmp
pop
int3
jae
call
pop
push
add
arpl
dec
pop
jae
inc
dec
je
inc
pop
add
dec
cmp
fcoms
arpl
dec
pop
inc
int
insb
imul
pop
cmp
inc
pop
js
xor
add
add
outsb
push
inc
and
sub
pop
jb
arpl
pop
cmp
add
jno
pop
imul
dec
inc
cmp
sub
clc
jnp
push
push
cmp
sub
dec
dec
fs
sub
outsb
sbb
push
push
insb
call
inc
js
fcos
out
cld
inc
gs
dec
insb
jns
dec
xor
jmp
ja
inc
cld
push
add
push
cwtl
jmp
imul
stos
cld
inc
add
call
out
bound
jecxz
ja
inc
cld
lods
push
add
jae
hlt
loope
fstl
jecxz
mov
sub
ret
ljmp
roll
inc
mov
fildll
and
dec
pushf
sub
jbe
xor
out
cmpsl
icebp
shl
ja
loope
int
add
add
int
in
mov
mov
sti
xchg
dec
add
lcall
int
ss
out
sti
das
lahf
out
add
xor
loope
mov
out
adc
fdivl
sbb
in
cmp
mov
xor
int
out
mov
mov
mov
imul
aad
rclb
aaa
clc
mov
add
arpl
add
outsb
mov
icebp
aad
int3
loopne
push
jmp
mov
outsl
test
rorb
mov
out
bound
xchg
ss
xchg
push
call
bound
in
pop
outsb
shrl
ss
inc
push
out
imul
add
add
add
popa
repz
inc
dec
aaa
shrb
dec
cltd
ljmp
aaa
ret
das
shll
shrl
push
imul
dec
inc
sub
imul
dec
insb
sub
stos
aas
pop
arpl
addr16
mov
dec
insb
gs
inc
cmovge
aad
clc
fnstenv
inc
outsb
aam
push
aad
cmp
dec
pop
arpl
clc
incl
add
sub
add
push
adc
inc
jno
sbb
outsl
cs
incl
dec
je
cmp
jo
dec
dec
mov
jae
jno
inc
xor
push
adc
insl
mov
and
ds
push
lds
or
call
inc
nop
jl
sub
sub
cld
clc
push
jge
jae
jp
insl
mov
add
aas
insl
jecxz
mov
mov
popa
aaa
lods
out
inc
and
dec
sub
leave
insb
hlt
mov
add
sti
ret
sbb
sub
repnz
data16
inc
hlt
cli
ret
div
lods
xor
divl
xor
aam
in
lds
in
add
mov
push
xor
or
lret
out
mov
mov
neg
xor
push
js
mov
fistpll
xor
loop
xor
or
out
test
iret
jle
mov
incl
cli
int3
push
out
mov
inc
jmp
repz
fisttpl
in
mov
call
dec
jae
add
cmp
clc
scas
dec
fnstenv
xor
outsl
sbb
jae
push
push
imul
clc
xor
ficoms
pop
ficoml
insb
fcomip
les
out
imul
add
scas
int
les
imul
jge
bound
loopne
lea
das
add
jno
push
inc
add
jg
inc
jae
imul
dec
dec
add
imul
outsl
inc
mov
add
dec
gs
popaw
insb
pop
pop
imul
add
insb
jo
cmp
sbb
popa
outsb
movq
jmp
sub
movsb
pop
data16
push
pop
add
sub
insl
jb
dec
data16
cmp
int
imul
add
dec
outsb
rorb
les
inc
rorb
or
outsb
scas
push
fs
cmp
dec
sub
push
rcl
imul
jecxz
inc
fxam
loopne
imul
repnz
mov
hlt
jae
das
sbb
insl
bound
call
cld
call
cld
call
cld
call
cld
call
cld
incl
add
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
and
mov
push
dec
std
call
std
call
cld
call
adc
push
xor
and
xor
add
icebp
add
fiaddl
push
xor
add
scas
and
xor
add
out
push
xor
add
call
data16
pop
jmp
or
push
xor
or
dec
jmp
add
jmp
pop
push
xor
outsl
fldcw
cmc
add
repnz
test
add
imul
das
repnz
loope
push
xor
add
jbe
push
xor
jmp
push
xor
jmp
push
xor
jmp
sbb
inc
jmp
add
add
add
push
xor
jmp
mov
xor
jmp
sarl
jmp
push
xor
sbb
xor
jmp
xchg
add
push
xor
jmp
push
xor
jge
inc
inc
jmp
push
jmp
inc
jmp
data16
sbb
add
add
add
dec
test
xor
add
and
push
mov
rclb
inc
int
inc
adc
xchg
inc
or
mov
inc
scas
pusha
shll
inc
jb
inc
pop
je
mov
mov
inc
xchg
mov
pop
push
pop
pop
mov
sbb
mov
cmpl
jno
jl
push
das
add
xor
and
adc
jne
in
inc
push
xor
fimuls
mov
enter
shl
sahf
test
mov
adc
addl
pop
ret
mov
xor
mov
sbb
pop
jp
test
and
rolb
data16
nop
push
add
jbe
mov
add
movsl
popf
sbb
inc
jg
sarl
xchg
ss
xor
and
add
aaa
lret
aaa
lret
test
sub
cs
add
mov
inc
or
fildl
sub
mov
insb
mov
movups
movsb
mov
add
out
addl
add
add
add
outsb
and
lds
xor
sbb
or
repnz
mov
insb
jnp
xchg
addr16
or
mov
lds
sar
add
mov
loop
jmp
daa
movsl
aaa
mov
jl
fstpt
pop
test
test
jge
out
aaa
or
add
add
add
cmp
jmp
push
mov
lret
cmpsl
ds
cltd
jle
dec
cs
or
mov
xor
adc
dec
inc
fcoms
cli
cmp
sarb
jp
or
movsb
adc
addr16
cmp
pop
outsb
inc
out
shrl
jns
cmp
and
dec
jnp
out
icebp
mov
mov
add
add
add
add
jl
orb
mov
dec
pop
cmpsb
adc
add
pop
sub
jmp
sub
gs
and
test
mov
orl
pop
pop
mov
adc
cmc
mov
scas
cs
ficompl
mov
iret
or
sub
add
in
cwtl
jo
aaa
add
add
add
jnp
push
imul
jg
aas
push
jae
aas
push
ja
aas
push
cmp
push
outsl
jnp
push
arpl
push
addr16
push
dec
jnp
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
mov
add
push
pop
add
push
pop
add
push
testl
add
add
push
pop
add
push
add
aas
push
pop
add
add
push
pop
add
push
pop
add
push
cltd
push
aas
push
pop
add
push
pop
add
push
xor
add
sbb
push
xor
add
jmp
add
and
jle
jmp
add
jmp
adc
jmp
add
jmp
adc
xor
add
jmp
add
nop
nopl
jmp
add
add
jmp
movd
jmp
add
jmp
or
jmp
add
jmp
or
xor
jmp
push
xor
jmp
dec
addr16
push
xor
jmp
push
xor
adc
jmp
push
xor
jmp
adc
jmp
push
xor
jmp
add
add
add
push
xor
fstpt
add
push
xor
jmp
push
xor
gs
add
push
xor
jmp
push
xor
lods
jl
add
push
xor
jmp
push
xor
inc
push
gs
push
xor
jmp
clc
xor
add
xor
add
xor
add
xor
add
divb
add
xor
add
add
xor
add
xor
add
cli
xor
add
add
js
add
repz
xor
add
add
js
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
stc
xor
add
add
push
pop
add
push
jo
cmp
add
add
add
push
pop
add
push
pop
add
push
pop
add
push
xchg
cmp
push
pop
add
push
pop
add
push
cmp
push
pop
add
push
pop
add
push
push
lret
pop
add
push
pop
add
push
pop
add
push
adc
cmp
push
pop
add
push
pop
add
push
outsb
leave
cmp
push
pop
add
push
pop
add
push
mov
cmp
add
push
pop
add
push
xor
add
add
xor
add
jmp
add
jb
aaa
xor
add
jmp
add
xor
xor
add
jmp
add
lcall
xor
add
jmp
add
jl
push
xor
add
jmp
add
cmp
add
jmp
add
add
add
add
jmp
outsl
pop
xor
add
jmp
add
jo,pn
xor
jmp
push
xor
jmp
dec
gs
push
xor
jmp
push
xor
repnz
gs
push
xor
jmp
push
xor
mov
push
xor
jmp
push
xor
outsb
dec
gs
push
xor
jmp
add
push
xor
adc
add
push
xor
jmp
push
xor
rorb
jmp
push
xor
jmp
dec
gs
push
xor
jmp
sub
add
sub
xor
add
das
add
sub
add
add
xor
add
add
call
cmp
add
add
call
add
shll
add
add
push
aad
add
add
test
add
adc
add
add
push
lods
aaa
add
add
js
add
push
mov
add
add
push
pop
add
push
pop
add
push
in
aas
push
pop
add
push
pop
add
push
pop
add
push
push
xor
add
push
pop
add
push
pop
add
push
pop
add
push
xchg
push
pop
add
push
pop
add
push
pop
add
push
out
aas
push
pop
add
push
pop
add
push
pop
add
push
xor
push
pop
add
push
pop
add
push
jns
push
fnstsw
push
cmpsl
nop
aas
push
adcl
push
mov
xchg
push
cmpsl
xchg
push
xor
push
xor
mov
xor
add
add
add
xchg
cmp
jbe
sub
data16
nop
pop
xor
push
xor
nop
dec
xor
popl
fisttpll
xor
xor
mov
xor
mov
xor
mov
xor
xchg
jbe
jmp
add
jmp
add
jmp
xrelease
out
add
push
xor
mov
data16
dec
or
stc
cmp
icebp
cmp
jmp
push
xor
adc
push
inc
aaa
loope
cmp
or
add
xor
clc
xor
add
movsb
xor
lods
xor
aam
popf
pop
cld
xor
cmp
xor
inc
sub
std
inc
cmp
add
arpl
pusha
insb
xor
add
add
add
pusha
jl
lds
xor
inc
lods
xor
mov
clc
std
push
xor
or
cmp
js
clc
cmp
aas
js
idiv
fdivs
add
fs
add
inc
inc
adc
push
inc
and
fs
xor
fs
inc
xor
xor
je
movsb
inc
test
test
xor
mov
movsb
inc
les
add
les
xor
inc
in
fs
hlt
xor
inc
add
les
xor
xor
xor
inc
inc
xor
inc
push
xor
je
and
test
add
xchg
xor
or
inc
test
inc
dec
or
and
fsubl
sub
adc
and
adc
sub
sub
inc
adc
dec
adc
adc
arpl
insb
arpl
jl
mov
mov
adc
adcl
inc
lret
adc
and
adc
and
adc
and
adc
and
sbb
sub
sub
inc
adc
lret
adc
adc
adc
adc
gs
popa
insl
adc
popa
inc
adc
popa
and
adc
add
in
adc
in
pop
fs
pop
gs
sbb
and
sbb
fs
pop
frstor
pop
in
inc
pop
lods
arpl
mov
movsl
pop
sbb
test
in
arpl
aad
in
pop
arpl
push
arpl
pop
jne
movsl
push
sbb
arpl
int
mov
add
add
add
add
pushf
sub
jne
mov
sub
sub
aas
cld
sub
cmc
cmp
cs
pusha
sub
cmc
pusha
cmp
or
arpl
inc
insb
cs
inc
mov
cmp
mov
jno
lods
cmp
insb
cmp
push
test
and
or
add
cmp
xor
add
cmp
mov
popa
pop
lods
cmp
les
add
cmp
cmp
movsb
cmp
dec
cmp
cmp
pop
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
pusha
cmp
xchg
cmp
pop
cmp
xor
cmpb
add
add
add
cmp
cmpb
cmp
cmpb
cmp
and
xchg
fdivrs
pushf
loopne,pt
movsb
ds
mov
sbb
sbb
sbb
sbb
cltd
sbb
or
sbb
call
adc
adc
and
adc
and
adc
orl
adc
add
push
adc
arpl
push
pusha
inc
adc
inc
adc
adc
adc
mov
push
test
push
push
mov
ret
and
or
adc
adc
adc
pop
rclb
pop
pop
adc
jmp
pop
cmp
js
and
fs
cs
es
sbb
sti
arpl
pcmpgtb
dec
fs
jnp
arpl
adc
popa
fstps
xchg
pop
dec
sbb
pop
gs
push
pop
sbb
push
jle
mov
push
sbb
mov
sbb
pop
ficomps
dec
push
add
cmp
lds
cmp
push
cmp
pop
je
movsb
pop
imul
add
dec
jnp
rorl
cmp
cmp
cmp
insl
push
lds
cmp
popfw
xor
pop
xor
fwait
dec
xchg
insb
cmp
aaa
jmp
push
xor
clc
bound
xor
gs
aas
pop
pushf
xor
test
xor
enter
aad
lds
add
xor
arpl
xor
inc
push
xor
add
sub
daa
sbb
daa
mov
inc
mov
addb
out
inc
pop
xor
fsubs
inc
aaa
xchg
imul
imul
cmp
xor
cmp
xor
cmp
xor
sub
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
pop
cmp
add
aas
mov
out
ds
cmp
cmp
cmp
sub
push
or
adc
and
out
inc
pop
dec
push
push
sub
push
cmpl
or
into
addr16
or
jmp
dec
decl
sbb
ds
push
cmp
loopne,pn
gs
push
jbe
mov
addl
add
add
add
jns
xchg
mov
xchg
or
fildll
or
add
xchg
call
pusha
add
push
or
hlt
adc
mov
adc
and
pusha
cmp
in
pusha
or
insb
pop
notb
rcrl
adc
pop
jg
xchg
pop
adc
pop
adc
pop
icebp
adc
ficoml
add
bound
adc
int
das
into
adc
bound
adc
bound
mov
bound
adc
in
inc
popa
icebp
adc
adc
pusha
outsl
adc
popa
add
push
xor
lret
dec
dec
sub
inc
data16
inc
xchg
sub
push
xchg
inc
lcall
pop
pop
sub
add
add
add
add
sub
jae
xlat
sub
ss
stc
sub
adc
movsb
pop
jg
lea
xchg
dec
xchg
push
pop
mov
inc
push
fisubrl
sub
inc
sbb
jmp
push
xor
sub
das
xor
das
leave
dec
push
xor
dec
xor
add
sub
cmp
mov
int
lds
add
enter
cmp
and
cmp
and
cmp
and
mov
sub
mov
jmp
sti
cmp
and
cmp
arpl
jno
jno
les
cmp
inc
out
inc
inc
adc
cmpsl
inc
cmp
cld
inc
xchg
cmp
dec
inc
hlt
cmp
push
inc
jns
insb
adc
mov
add
cmp
adc
push
or
leave
add
push
adc
inc
inc
or
inc
pop
or
inc
rcll
icebp
inc
mov
and
or
sahf
and
lds
mov
or
popl
dec
or
push
bound
divps
push
lcall
push
int
sub
or
add
nopl
and
sbb
xchg
sbb
jl
sbb
test
sbb
jecxz
rcrb
push
push
sbb
pop
and
mov
mov
or
push
jge
ss
sub
jno
push
adc
push
lret
push
push
push
maxps
pmuludq
shrd
ud1
adc
push
adcl
add
add
add
hlt
push
jmp
add
xor
adc
pusha
and
pop
outsl
adc
in
adc
pop
pop
mov
push
pop
pop
in
dec
pop
fistl
pop
add
pop
dec
xor
pop
jle
push
inc
xorl
outsl
inc
int
xchg
cmp
shll
cmpsl
pop
push
sub
mov
cmp
pop
xor
ret
pop
pop
cmp
add
dec
jp
adc
cmp
out
cmp
popa
cmp
xor
mov
inc
jge
aam
mov
ss
pusha
mov
sub
aaa
pop
popa
mov
xor
xor
jmp
push
xor
in
jbe
add
ds
xor
call
xor
xor
inc
xor
and
add
add
add
add
and
xor
and
xor
and
xor
mov
andb
xor
daa
dec
xor
sub
xor
sub
fisubl
pushl
lahf
es
popa
daa
sub
imul
cmp
cmp
cmp
idivl
jge
out
cmp
cmp
cmp
cmp
cmp
cmp
or
sbb
lea
test
fidivrl
adc
lahf
adc
addr16
mov
push
dec
pop
add
push
incl
sub
adc
call
cmove
or
dec
xchg
mov
jnp
or
jnp
or
push
or
cmc
or
pop
or
gs
int
add
add
cmp
xor
push
push
xor
add
add
loop
jl
sub
xor
adc
aas
rclb
aas
sbb
addr16
sub
mov
cmp
fidivrl
lods
adc
sbb
pop
inc
mov
adc
adc
inc
into
adc
inc
dec
adc
inc
jecxz
cmp
inc
sbb
add
inc
lds
outsb
inc
lods
push
or
inc
iret
push
in
inc
nop
pop
mov
cmp
addr16
call
cmpsb
mov
cs
inc
imull
out
cmp
icebp
inc
dec
das
mov
gs
das
jp
test
jbe
mov
pop
pop
stos
das
xchg
inc
repnz
sarl
xor
jecxz
push
cmp
mov
push
pop
test
cmp
add
cmp
push
xor
inc
fdivs
dec
cmc
xor
test
rcll
dec
fdivl
cmpsl
inc
cmp
add
jmp
push
xor
repnz
icebp
xor
inc
and
xor
pop
and
pop
mov
xor
out
xor
or
and
xor
and
xor
and
xor
and
xor
add
pusha
xor
adc
sub
pop
push
mov
lds
xlat
ss
negl
inc
aaa
enter
rcrb
aaa
in
aaa
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jg
inc
push
enter
or
aas
cwtl
or
das
js
cmpsl
add
daa
push
or
push
sbb
dec
gs
call
adc
adc
adc
or
xchg
or
pusha
cs
cs
lcall
inc
xchg
adc
and
adc
sbb
adc
mov
mov
xchg
adc
xchg
adc
xor
jle
xor
mov
add
inc
jl
loopne
test
xchg
inc
sub
xchg
inc
pop
adc
rorl
xor
or
dec
into
or
dec
orb
das
or
dec
mov
or
pushf
inc
gs
mov
dec
pop
pop
hlt
dec
popf
pop
add
aaa
dec
hlt
or
jmp
add
xor
adc
inc
mov
adc
add
je
pop
sub
fistpll
xchg
push
xchg
xor
pop
pusha
sub
inc
movsl
sub
dec
movsb
sub
push
arpl
das
sub
dec
cmp
pop
iret
cmp
shll
xchg
or
xor
add
arpl
xchg
xor
inc
pop
sub
inc
fisubrl
push
jmp
sub
sub
add
sub
push
dec
into
sub
rcrb
fiaddl
sbb
imul
add
pop
test
sbb
test
aaa
das
and
loope
pop
cmp
cmpsb
cmp
xor
cmp
cmp
xor
out
xchg
cmp
into
cmp
cmp
xor
cwtl
xor
in
cmp
cmc
cmp
xor
and
dec
cmp
bound
push
loope
in
cmp
xor
cmp
cmp
popa
cmp
je
xchg
cmp
cmp
cmp
push
or
mov
decb
dec
ja
dec
incb
jbe
sub
call
mov
sahf
popf
cld
call
adc
inc
les
lods
inc
mov
add
add
add
inc
push
or
inc
out
and
or
imul
std
adc
adc
xorb
clc
cmp
add
pop
adc
gs
adc
adc
nop
pop
mov
mov
pop
shlb
xor
cmpsb
cmp
adc
fwait
adc
cmp
adc
mov
add
add
add
add
adc
xor
or
push
ds
or
jg
fwait
push
in
out
or
dec
imul
inc
fimull
dec
push
or
dec
fwait
or
inc
ret
add
xor
jecxz
push
bound
push
xor
adc
pop
adc
aas
adc
aas
adc
inc
adc
inc
add
add
inc
mov
sub
dec
push
sub
inc
inc
sub
popa
sahf
sub
popa
lods
sub
jmp
pop
aas
sub
xor
cs
inc
sub
das
adc
addr16
ret
das
dec
clc
cmp
pop
jo
popf
pop
stos
cmp
dec
adc
jmp
pop
cmp
jg
xor
fnsave
jmp
add
add
add
add
clc
insl
push
xor
icebp
inc
push
xor
pop
jbe
add
sbb
xor
sbb
xor
xor
ret
xor
insl
xor
and
xor
pop
sub
dec
pop
js
jle
sahf
xor
xor
xor
xor
popa
xor
xor
in
xor
aaa
inc
xor
aaa
add
dec
xor
aaa
inc
xor
aaa
push
xor
aaa
sub
cld
aaa
inc
cmp
or
icebp
cmp
add
sub
add
push
pop
in
jo
jge
jmp
or
out
test
lahf
clc
and
push
stc
lods
daa
mov
xlat
sbb
cmc
fisttps
test
out
js
cmc
idivl
cmc
ljmp
testb
in
cvtdq2ps
pop
add
mulb
dec
add
divb
cmp
cmc
inc
sub
cmc
push
sbb
cmc
pop
mov
cmc
outsl
jnp
cmc
ja
test
jg
xchg
testb
xor
mov
inc
test
scas
inc
jne
scas
inc
jne
mov
inc
movsl
std
push
inc
xchg
std
push
inc
mov
incb
std
add
scas
inc
test
scas
inc
jne
scas
inc
jne
mov
inc
jnp
lahf
inc
jmp
incl
add
push
inc
stos
std
inc
jae
movl
ljmp
pop
incl
inc
movsb
add
inc
jno
aad
push
add
inc
add
ret
test
add
add
add
jge
push
std
les
xchg
in
xor
out
xor
fdivr
xor
add
enter
mov
je
add
out
das
pushf
cwtl
fldt
bound
pop
cmp
mov
into
jp
cmp
insl
dec
cmp
add
add
insl
cmp
dec
xchg
cmp
inc
xor
testb
cmp
add
cmp
add
cmp
add
jns
mov
add
cmp
add
imul
cmp
aam
leave
aas
clc
mov
incl
add
mov
pop
xor
std
mov
xor
imul
std
jae
add
int
sbb
sti
inc
xor
xor
jns
addb
aaa
lea
jne
add
invd
cmp
adc
push
cmp
add
cmp
fwait
add
push
or
xchg
add
repz
popa
in
pop
inc
and
aas
inc
stos
in
movb
cmp
repnz
sbb
repz
and
repz
and
clc
mov
test
out
inc
add
pop
out
ficompl
out
ss
dec
hlt
inc
pop
mov
cmc
test
push
cmc
dec
cmp
add
xchg
div
daa
add
jg
das
mul
push
xor
dec
jmp
add
call
repz
push
hlt
or
hlt
sbb
cmc
add
icebp
xor
repz
inc
xchg
notl
inc
xlat
clc
sti
inc
shl
jl
dec
cld
add
mov
aam
inc
cmp
jmp
cmp
add
pop
jmp
cmp
lcall
cmp
fscale
outsb
ds
sarl
jle
ds
jle
jmp
add
sub
aas
add
divl
icebp
pop
jg
cmp
xor
inc
jge
pusha
inc
mov
xor
and
xor
add
and
xor
and
xor
add
xor
add
push
add
xor
ficoms
sub
filds
cs
cmp
mov
ret
stos
cmp
add
or
xchg
shll
pushf
jl
cmp
xor
testl
outsb
add
xor
add
add
hlt
add
xor
push
xor
inc
xor
add
xor
xor
in
xor
add
xor
fnstenv
and
repnz
incl
xor
decl
pop
jmp
xor
sub
fdivr
xor
jl
mov
add
xor
add
sbb
xor
stos
add
ss
mov
add
inc
add
aaa
repz
push
sbb
aas
cmp
sti
push
sub
sti
jg
jns
sbb
sbb
sti
xor
hlt
cli
outsb
mov
cli
js
cli
imull
cli
sbb
stc
inc
pop
mov
mov
stc
movsl
dec
test
repnz
cmp
negl
cmp
idivl
sub
sub
jns
negl
mov
neg
add
mov
lock
clc
push
insl
and
jnp
push
clc
xchg
pop
inc
clc
push
mov
call
clc
xlat
cmp
inc
stc
cmp
cmp
stc
fnstsw
cli
out
push
cli
add
sub
dec
cmp
sti
sbb
push
sti
es
jmp
add
xor
hlt
mov
hlt
add
mov
cmpsb
repz
inc
jno
inc
aas
data16
lock
jge
pop
lock
lock
inc
stos
icebp
daa
inc
pop
repnz
jbe
test
cmp
sti
pop
cmp
sbb
lea
loope
mov
xor
cmp
jne
cmp
cltd
cmp
pop
or
xor
lea
ss
cmp
jns
add
mov
imul
push
cli
negl
and
or
or
xor
add
xor
and
adc
cwtl
xor
fs
add
cs
sarl
add
jecxz
mov
cmc
mov
sbb
dec
cmp
cmc
sbb
cmp
jp
and
idiv
add
js
idiv
lods
sub
popf
xor
add
xor
mov
xor
add
xor
push
xor
test
mov
add
adc
aaa
pop
cld
xor
jb
mov
sbb
idivb
cmp
sti
and
lock
ds
push
aas
sub
idiv
push
pop
in
scas
ss
incl
add
repz
push
repz
pusha
lods
repnz
in
xor
in
xlat
inc
cmp
gs
nop
out
sbb
out
and
icebp
add
in
sti
mov
notb
cmpsb
cmc
mov
out
lret
stc
jae
mov
stc
enter
call
or
std
push
xchg
add
in
cld
inc
jo
mov
in
mov
xchg
repnz
xchg
repz
add
and
repz
fsub
sub
xor
lock
cmp
out
fdivrs
hlt
out
jb
shr
outsb
cmp
cld
leave
cmp
cld
cmp
cli
fistpll
mov
cli
ja
pop
cli
jp
clc
cli
inc
cmp
mull
xor
testl
xor
clc
aas
xor
clc
jne
mov
lea
mov
cmc
pushl
jmp
add
add
add
add
mov
icebp
xlat
inc
xor
inc
repnz
lock
ds
cltd
ds
out
pushl
mov
inc
cmp
or
hlt
testl
mov
enter
fidivs
jb
push
xor
test
xor
pusha
xorl
pusha
mov
xor
pusha
rdpmc
aaa
add
inc
and
std
inc
xor
inc
jl
push
fsubrs
and
sub
hlt
push
cs
cs
out
jl,pn
enter
or
pop
aaa
push
add
aaa
jle
dec
aaa
sbb
xchg
or
stos
aaa
in
add
aaa
faddl
add
pushf
stc
sbb
cmp
hlt
mov
add
loopne
loope
hlt
repz
cmp
inc
cmp
stc
cmpsl
cmp
stc
sarl
push
stc
add
and
cmp
in
push
cmp
cli
test
sar
xchg
cmp
cli
mov
cmp
notl
cmp
mov
ljmp
cmp
daa
pop
movsb
std
fidivrs
add
in
push
sbbl
mov
add
add
add
cmp
repz
fbld
repnz
arpl
mov
inc
data16
inc
fsub
das
inc
dec
out
aas
out
insl
daa
mov
test
ds
daa
cmpsl
in
sbb
cli
xor
mov
cli
sbb
stc
aas
imul
xchg
pop
mov
mov
dec
or
pop
dec
sar
adc
xor
out
add
inc
aaa
adc
push
xor
out
ss
lock
ss
icebp
jnp
ja
into
repz
add
dec
hlt
inc
ds
adc
aaa
dec
lock
orl
repz
dec
imulb
test
adc
ret
out
add
pop
out
xchg
fsubr
cmpsl
xor
lock
or
cmc
xor
icebp
pop
xor
repnz
mov
and
xchg
sbb
aad
push
xor
repz
iret
sub
clc
mov
scas
stc
in
sub
mov
sub
iret
leave
add
mov
mov
sub
out
test
ljmp
adc
iret
cwtl
dec
cs
mov
mov
scas
js
cs
js
cs
push
add
cs
pop
push
cs
pop
mov
iret
dec
test
mov
cmp
cmp
jg
pushf
outsl
sbb
ss
mull
ss
ss
test
scas
not
ss
push
negl
push
mull
xchg
insl
aaa
outsb
divl
idivl
testl
add
add
testl
aaa
push
mull
aaa
scas
divl
aaa
cs
aaa
cs
aaa
xchg
neg
aaa
mov
in
xchg
in
aaa
outsb
div
aaa
ss
in
or
pop
push
test
repnz
lock
sbb
push
push
fs
out
testb
push
clc
repz
xor
and
fiadds
mov
out
imul
in
shll
in
aaa
bound
bound
inc
std
out
adc
mov
pop
inc
sti
out
mov
shr
lahf
sbb
cli
ds
in
stc
scas
pop
dec
stc
faddl
and
xchg
xchg
or
outsl
sub
jmp
sub
jmp
add
sub
fisubrs
cmp
mov
sub
in
push
sub
in
dec
sub
in
sub
in
push
sub
in
xor
push
in
out
sub
add
mov
jmp
add
jmp
mov
xchg
sub
sub
or
in
sub
cmp
sub
out
add
shr
sub
out
iret
sub
lock
lock
mov
ss
inc
jecxz
sarl
xorb
ss
das
sahf
sub
cmc
ss
pushl
pop
not
ss
in
xor
ret
aaa
and
testb
cmpsb
out
aaa
jmp
push
xor
loope
bound
movsb
ret
sub
xor
cltd
push
cmp
out
cmp
add
insl
push
cmp
lret
jnp
cmp
cmp
push
cmp
imul
cmp
fiadds
cmp
ficomps
cmp
fstpl
mov
sarl
loope
cmp
loopne
cmp
fsubrl
ds
fildl
ds
mov
test
sarl
or
fcomi
mov
xor
add
add
loop
xor
fistps
ss
in
aaa
cmp
pop
aaa
sub
test
aaa
jae
push
cmp
fistpl
cmc
sbb
ljmp
xchg
ljmp
mov
mov
imul
pop
add
fcompl
push
std
push
testl
cmp
fsub
or
add
dec
in
outsl
in
push
push
in
and
into
jle
call
in
inc
cmp
inc
xorl
arpl
clc
pop
pop
cmc
in
shll
in
pop
pop
jmp
dec
cmp
jmp
daa
xor
xor
mov
and
jnp
sti
in
jae
imul
mov
pop
in
iret
sub
in
sub
add
sbb
add
jae
int
xchg
sub
in
sbb
in
jmp
add
ljmp
and
mov
mov
hlt
int
lock
pop
and
hlt
popa
and
hlt
push
and
hlt
jne
fxtract
arpl
jecxz
pop
and
cmc
sbb
and
cmc
icebp
and
add
gs
scas
xor
add
jge
ret
inc
int3
xor
inc
mov
xor
and
xor
sbb
xor
or
or
add
in
jmp
xor
in
cmp
xlat
in
xor
fisttps
xor
sub
xor
jg
adc
cmpsl
push
xor
lahf
pop
xor
cmpsl
xor
add
xor
lock
xor
in
xor
lods
xor
in
xor
in
xor
aam
mov
jecxz
xor
xor
jecxz
xor
jecxz
xor
sbb
add
push
xor
loop
xor
jecxz
xor
loop
xor
loop
xor
jae
jae
jbe
jo
mov
add
inc
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
loopne
xor
jle
aad
dec
out
aas
arpl
stos
inc
xchg
repnz
ds
movsl
sub
in
sbb
sbb
in
mov
loopne
jge
call
imulb
fimuls
pop
push
ljmp
aaa
cld
incl
add
in
testb
ds
mov
leave
and
out
ljmp
in
xor
adc
push
xorb
pop
in
mov
xchg
in
loop
out
in
cli
bound
ljmp
and
out
sbb
out
iret
and
mov
and
out
sub
shr
aam
jp
mov
sub
push
dec
out
inc
push
icebp
add
ja
out
icebp
xchg
push
mov
mov
push
or
aaa
pop
sbb
sbb
ljmp
pop
pop
lock
cmp
mov
and
pop
and
lock
pop
iret
out
loopne
and
imul
sub
xchg
sub
ljmp
cmp
scas
ds
mov
xor
test
cmp
sub
xor
add
add
add
add
ss
outsl
cmp
aaa
dec
outsb
out
jmp
dec
xor
push
inc
xor
test
lret
xor
and
xor
and
mov
add
jge
pop
cmp
imul
ss
out
jmp
push
xor
pop
loop
xor
loope
sub
mov
ss
cmp
add
sbb
add
loopne
xor
les
inc
aam
cmp
cmp
cmp
fidivrl
in
xchg
or
cmp
xchg
cmp
ficompl
cmp
fldcw
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcom
cmp
call
xor
add
add
cmp
lret
idiv
call
pop
cld
call
in
dec
addb
arpl
icebp
loope
sbb
sbbb
rolb
lock
out
inc
jb
out
push
daa
daa
out
in
pop
xchg
in
daa
mov
mov
call
repz
orl
jge
lock
scas
pop
sbb
in
add
pop
aam
adc
jmp
incl
xlat
mov
bound
add
in
add
or
sbb
icebp
repnz
xor
repz
push
repz
push
jns
ljmp
repnz
push
mov
icebp
cmp
push
and
icebp
shll
jnp
call
and
icebp
pop
and
lock
and
add
pop
sbb
mov
call
or
inc
call
inc
and
in
and
adcl
fwait
repnz
add
lock
jo
ret
sbb
das
sub
sti
das
cmp
lods
inc
cmp
movsb
or
lcall
and
cmp
test
cmp
cmp
add
cmp
xchg
cmp
ljmp
test
cmp
mov
cmp
cmp
push
push
xor
xor
xor
cltd
xor
xor
imul
xor
add
sarl
cmp
dec
shr
cmp
mov
add
rcrb
ds
into
sub
mov
into
dec
ds
into
pop
ds
idiv
test
hlt
fsubrs
add
js
add
test
wrmsr
pushf
decb
dec
sti
push
xor
xor
xor
xor
ja
mov
fwait
xor
pushf
cli
sti
xor
sbb
cli
cmp
stc
pop
xor
stc
jnp
push
dec
iret
fwait
add
inc
and
mov
and
lret
fcomps
and
fdivrs
sbb
iret
pop
test
jnp
dec
iret
fwait
test
mov
fs
sti
pop
lret
fstps
jcxz
cmp
ficompl
xor
jnp
dec
ficompl
aas
fcmovu
daa
mov
sti
pop
lret
fcomps
mov
fcomps
repz
sti
fdivrs
dec
flds
add
add
add
jle
pop
jnp
lahf
stos
fldenv
mov
sbb
mov
sbb
fsin
sbb
fsubr
sbb
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
js
add
push
xor
add
add
js
add
push
xor
add
xor
add
xor
add
add
push
movl
add
add
push
movl
add
add
add
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
add
push
xor
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
add
add
push
das
add
cmp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
clc
add
clc
add
call
add
add
clc
add
clc
add
call
add
mov
add
test
add
test
add
mov
add
test
add
test
add
js
add
js
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
movl
add
add
push
movl
add
add
add
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
jmp
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
add
xor
add
add
js
add
push
xor
add
add
js
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
movl
add
add
add
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
push
xor
jmp
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
add
add
add
push
xor
jmp
push
xor
add
das
add
mov
das
add
test
add
test
add
mov
das
add
test
add
test
add
js
add
js
add
push
das
add
js
add
js
add
push
das
add
cmp
add
cmp
add
sub
add
sub
add
cmp
cmp
add
sub
add
sub
add
clc
add
clc
add
call
add
clc
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
push
leave
add
add
push
leave
add
push
leave
add
push
movl
add
add
push
movl
add
add
push
movl
add
add
push
movl
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
clc
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
js
add
push
xor
add
add
js
add
push
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
xlat
add
push
xlat
add
push
xlat
add
push
xor
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
cmp
add
sub
add
sub
add
cmp
add
cmp
sub
add
sub
add
clc
das
add
clc
das
add
call
das
add
clc
das
add
clc
das
add
call
das
add
mov
das
add
test
add
test
add
mov
das
add
test
add
test
add
js
add
js
add
push
das
add
js
add
js
add
push
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
add
add
push
flds
add
add
push
flds
add
add
push
flds
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
add
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
xor
jmp
push
sub
add
add
js
add
push
sub
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sti
daa
insl
xchg
jne
daa
xor
fwait
std
push
jbe
cmpsb
ja
sbb
call
adc
add
push
mov
add
in
leave
ss
pop
add
jns
fisubl
add
pop
mov
stos
adc
cmp
xor
sub
les
cli
jmp
mov
xor
hlt
and
xchg
mov
fxch
in
mov
mov
pop
daa
push
int3
xor
cmp
sub
add
insb
jbe
push
pop
cmp
daa
inc
inc
cmpsl
add
push
icebp
jmp
sub
push
sti
pop
hlt
push
aad
add
push
pop
div
sub
mov
imul
mov
sahf
ret
fnstsw
mov
insl
mov
adc
push
mov
or
xchg
xor
ljmp
dec
scas
xor
xor
clc
and
nop
jg
add
loope
fs
stos
sbb
daa
jne
insl
xchg
inc
imul
mov
roll
jnp
in
mov
sbb
mov
push
dec
sti
ret
dec
add
test
lahf
ja
pop
pop
push
mov
cmp
mov
adc
mov
jno
jnp
pop
push
pushf
cld
mov
aam
mov
insb
pushf
mov
test
add
inc
and
fistpll
stos
jecxz
dec
lods
ret
cmpsb
insb
outsb
nop
mov
and
inc
xor
rclb
xor
xor
dec
push
add
mov
ja
cmp
adc
and
ljmp
cmpsb
in
les
sbb
incl
ret
outsb
in
or
sub
xchg
popf
pop
fiadds
add
pop
mov
jp
ret
test
add
testl
sarl
outsl
jb
or
adc
push
jp
cmpl
sub
mov
imul
hlt
int3
test
int3
add
in
fisubrl
mov
inc
dec
int
ret
and
in
add
pop
pop
xor
cmc
mov
xor
cmp
out
mov
mov
and
lds
cmpb
cmp
jmp
arpl
sub
ret
int3
test
mov
mov
loopne
movsb
rolb
push
inc
mov
fmull
pop
mov
clc
mov
mov
clc
mov
adc
push
add
dec
mov
clc
mov
and
dec
pop
mov
in
add
add
pop
mov
hlt
shr
add
jns
inc
hlt
sub
jae
mov
lock
inc
dec
mov
push
mov
add
shr
add
adc
mov
scas
or
mov
in
ficompl
mov
loope
cmp
dec
loope
roll
lock
std
mov
int3
xchg
hlt
int3
hlt
int3
test
int3
add
in
mov
call
mov
mov
pusha
call
adcl
add
sub
call
adc
xor
push
push
add
sub
mov
add
jmp
add
sub
mov
lods
ret
pop
hlt
cmpl
xor
jge
push
jo
push
lret
push
sbb
xor
mov
sbb
stos
fisttps
int3
xchg
repz
int3
repz
int3
test
int3
and
in
jno
cmp
aas
mov
xor
jb
fdivs
pop
add
xchg
repz
int3
repz
int3
test
int3
movsb
stos
in
mov
mov
or
push
pop
ret
int3
adc
in
int3
add
stos
in
cmc
sub
imul
fcoml
add
inc
test
inc
push
test
add
stos
cmp
inc
mov
cmp
push
fisubl
push
fidivl
push
add
sahf
gs
mov
in
mov
add
add
dec
stos
cmp
mov
mov
sti
inc
adc
push
mov
xor
push
xchg
mov
scas
adc
insb
pop
jmp
lret
cld
ljmp
ret
int3
adc
in
int3
add
stos
in
dec
xor
add
or
add
add
add
inc
rorb
push
pop
ret
int3
xchg
jmp
int3
jmp
int3
test
int3
add
in
mov
mov
mov
add
das
jl
push
xor
mov
mov
mov
or
stos
cmp
mov
mov
add
or
push
cmpsl
inc
cld
lret
cmp
hlt
mov
sar
add
cli
add
inc
std
test
or
rcl
testl
fldcw
add
pop
test
adc
adc
mov
test
mov
cmpsl
cld
or
test
cld
mov
jmp
mov
int3
add
in
jne
mov
cmpsl
cmp
mov
test
call
add
inc
lock
lock
sti
add
mov
xor
fsubs
mov
pop
test
das
add
jnp
push
lret
mov
push
pop
notl
enter
or
cmpl
inc
sbb
dec
xor
mov
ret
mov
test
or
adc
add
add
add
or
jmp
lret
mov
add
cmpsl
cmp
mov
daa
add
fsubs
mov
mov
mov
adc
pop
mov
inc
mov
mov
scas
cmp
test
inc
std
cmpsl
or
roll
test
mov
sub
idiv
dec
pusha
mov
popa
call
addl
lea
mov
adc
cld
ret
mov
lret
std
daa
add
jne
push
jns
cmc
jle
mov
mov
mov
test
add
test
in
adc
dec
sub
rolb
loopne
sub
lcall
cmpsl
fstpl
in
int3
movsb
cmpsl
in
cmc
daa
push
lcall
inc
add
push
test
add
cmpsl
cmp
std
into
mov
cmp
push
lret
push
fidivl
cmpsb
fs
mov
int3
and
in
jne
cmp
xchg
das
push
inc
push
test
mov
pop
ret
int3
test
int3
movsb
movsl
in
xor
je
mov
dec
fidivl
mov
add
cmpsb
sarb
lret
mov
test
hlt
fidivl
mov
movsl
dec
clc
enter
push
xor
add
lock
inc
sarb
clc
add
sarb
push
sbb
or
movsl
cmp
mov
sbb
push
cltd
movsl
cmp
mov
jp
mov
movsl
adc
imul
xor
add
push
jmp
and
mov
lods
in
int3
adc
in
int3
add
movsl
in
xor
xor
add
cld
add
je
push
jmp
lods
mov
push
movsl
inc
clc
andb
mov
pusha
push
push
mov
or
push
lods
xor
add
mov
jmp
add
movsl
add
mov
push
push
fisubl
pushf
adc
xor
add
enter
mov
add
xchg
xor
mov
inc
push
or
mov
inc
push
stos
or
push
mov
or
push
pusha
mov
call
orl
cmp
push
pop
or
add
add
add
and
mov
mov
mov
int3
add
in
or
cmp
inc
decl
jp
mov
push
ret
int3
in
int3
test
int3
add
in
jne
mov
add
stos
cmp
mov
push
cmp
pop
loopne
xchg
rolb
mov
sbb
push
xor
cmp
aas
add
push
stos
add
push
jmp
mov
or
insb
lock
dec
add
push
xor
adc
push
mov
lock
sbb
mov
pusha
mov
popa
mov
popa
call
adcl
add
push
lret
or
push
test
loopne
cmpsb
pusha
cmp
mov
call
je
add
adc
movsl
hlt
mov
stos
inc
adc
arpl
mov
mov
dec
icebp
add
testl
pusha
mov
test
or
lret
mov
add
pusha
call
orl
shrl
arpl
jmp
test
push
cld
mov
sbb
adc
mov
add
add
add
add
add
test
mov
adcl
inc
push
xor
fisubl
rclb
cmpl
cmp
xchg
dec
add
push
xor
inc
icebp
test
xor
mov
lock
or
push
leave
or
xor
mov
popa
push
into
pop
lock
shl
fwait
adc
xor
jne
add
push
lret
push
sub
notl
nop
pushf
adc
xor
fmul
pop
fmuls
and
loopne
add
mov
or
push
popa
call
adcl
mov
add
cmpsl
inc
fcoms
mov
dec
in
dec
loopne
mov
add
push
pop
inc
xor
fmull
push
cmpsl
add
push
ficompl
push
mov
push
call
shr
add
or
mov
push
popa
sub
push
scas
xor
add
add
push
lret
adc
xor
fs
push
pop
call
orl
add
imul
add
push
scas
mov
xor
jo
mov
inc
push
popa
call
adcl
or
push
lret
mov
inc
push
das
dec
sub
cmpsl
or
push
mov
scas
mov
inc
push
sub
mov
lea
push
push
inc
decb
push
pop
notl
loop
add
push
mov
add
add
push
in
int3
add
movsl
in
mov
mov
push
ret
int3
add
movsl
in
lahf
pop
mov
lret
adc
xor
add
pop
pop
adc
int3
and
in
cmp
push
pop
adc
xor
std
mov
or
dec
pop
push
add
ficompl
call
jmp
mov
adc
int3
add
in
jne
mov
add
cmp
add
imul
push
xor
mov
inc
sub
movsl
inc
or
and
adc
xor
test
adc
add
testl
dec
call
add
push
lds
push
call
push
das
add
push
lods
xor
add
mov
add
add
shl
adc
xor
jne
inc
add
mov
rclb
cmp
enter
cmp
or
push
mov
xor
sub
jmp
xor
add
inc
nop
adc
xor
dec
mov
add
push
and
pusha
add
xor
add
scas
add
rcr
adc
xor
adc
repnz
or
push
rcl
adc
xor
in
idiv
shlb
adc
mov
add
aad
scas
testl
cld
lahf
push
push
sarl
in
cmpsb
idiv
shlb
mov
xor
lock
mov
inc
faddl
scas
add
rcl
adc
xor
add
xor
inc
cmc
decl
add
repz
mov
mov
or
add
add
add
mov
repz
mov
mov
rclb
lcall
add
add
add
adc
add
push
xor
or
add
adcl
cmp
jae
mov
incl
pushf
test
adc
clc
mov
push
repz
push
xor
add
clc
xor
mov
inc
fnstenv
and
mov
inc
push
popa
leave
mov
inc
add
push
popa
leave
mov
or
push
cwtl
inc
testl
sti
idivl
rclb
mov
pop
rorl
push
iret
mov
call
shlb
mov
inc
push
jmp
aad
lods
testl
sub
or
push
mov
add
push
adc
xor
je
iret
pushf
adc
add
xor
pop
int3
lods
testl
xchg
mov
int3
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
push
xor
add
add
add
enter
xor
add
push
fwait
add
data16
add
je
add
test
add
scas
fwait
add
mov
add
add
add
add
je
add
test
add
scas
fwait
add
mov
add
add
push
imul
insb
insb
outsl
arpl
add
js
inc
jb
popa
je
inc
imul
outsl
popa
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
dec
inc
dec
xor
cs
insb
add
add
repz
add
add
add
js
add
add
add
js
add
mov
add
add
add
sbbb
add
cmp
add
repz
add
add
add
add
add
push
add
addb
add
repz
add
add
add
or
add
add
test
add
repz
add
add
add
add
add
nop
add
addb
add
repz
add
add
add
or
add
mov
add
add
add
mov
add
add
add
call
add
addb
add
repz
add
add
add
or
add
add
add
add
add
repz
add
add
add
add
add
adc
add
repz
add
add
add
or
add
add
add
add
add
mov
add
add
add
add
add
push
add
addb
add
repz
add
add
add
or
add
add
push
mov
add
add
add
add
add
add
push
add
add
add
int
int
rolb
add
add
add
add
add
adc
add
add
add
add
add
mov
mov
testb
sbb
adc
ret
adc
dec
ja
lea
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xorb
pop
jo
add
jo
add
xchg
lock
hlt
les
lock
add
jo
add
jo
add
add
add
add
add
inc
inc
add
les
push
lock
inc
inc
sldt
cmova
inc
push
ud0
incl
pushl
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sub
add
add
rolb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
inc
mov
add
push
add
inc
mov
aas
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
cld
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
jo
outsl
add
popa
add
add
outsb
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
add
jb
add
add
insb
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
pop
add
je
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
dec
add
dec
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
jno
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
dec
add
add
pop
add
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
imul
add
add
add
inc
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
sub
jns
imul
sub
dec
imul
je
inc
outsl
jb
outsl
jb
je
outsl
outsb
and
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
and
insl
gs
insl
outsl
outsb
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jbe
jb
imul
xor
xor
xor
and
gs
xor
and
ds
jae
jb
jo
imul
insl
outsl
outsb
cmp
fs
jb
jo
imul
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
and
gs
gs
gs
js
arpl
imul
insb
or
and
and
and
and
and
and
and
gs
cmp
outsb
jbe
imul
or
and
and
and
and
and
and
and
inc
arpl
jae
cmp
jae
and
and
and
and
and
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
je
jne
je
outsb
outsw
ds
jae
gs
bound
.byte
.byte
add
add
insb
add
add
xor
xor
xor
jae
jnp
xorl
lret
xor
xor
xor
xor
xor
xor
dec
xor
jns
pop
xor
xor
xor
dec
ss
ss
xchg
fbstp
add
adc
sbb
and
inc
aaa
dec
aaa
pop
aaa
bound
repnz
add
or
adc
push
add
