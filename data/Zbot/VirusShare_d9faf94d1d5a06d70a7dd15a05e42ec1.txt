call
in
add
push
lea
push
lea
push
push
pushl
add
push
aaa
pop
sti
jg
push
call
leave
ret
les
or
call
in
push
add
add
ljmp
mov
cld
lea
push
push
addr16
inc
jo
inc
add
adc
in
inc
sub
add
jmp
add
or
xor
fs
lea
mov
push
push
cmp
pop
sbb
gs
mov
or
lock
in
pop
gs
rclb
sbb
ficoms
push
adc
add
mov
repnz
ljmp
push
jge
inc
addr16
daa
mov
addr16
icebp
adc
adc
jg
fbld
jnp
icebp
push
add
jge
jge
adc
adc
icebp
jnp
or
daa
push
adc
addr16
mov
outsl
mov
mov
daa
es
push
pop
imul
dec
es
jae
jnp
inc
addr16
sub
sti
insl
imul
adc
adc
dec
mov
divb
push
icebp
add
es
mov
mov
pop
push
adc
add
icebp
popf
adc
imul
or
and
in
fisubrs
daa
add
es
sub
adc
mov
mov
icebp
push
adc
jae
lods
mov
push
mov
dec
pop
fcmovnu
jbe
inc
pop
add
cmp
fistpl
adc
mov
push
lcall
xor
jb
push
or
fwait
aaa
adc
xchg
mov
insl
fwait
ds
xor
inc
es
pop
pop
push
imulb
test
aaa
daa
add
inc
pop
fcmovnu
adc
xor
call
int
mov
jae
adc
jmp
mov
ret
or
push
add
fnsave
orb
jnp
mov
pop
imul
inc
adc
push
xlat
pop
ss
or
push
pop
jne
pop
leave
inc
xor
imul
lea
and
fsubl
lods
es
cld
lret
shl
stos
int
int3
mov
or
test
add
pop
and
outsb
mov
push
inc
inc
shrl
int
aad
daa
fcomps
imul
imul
arpl
push
dec
push
and
jae
rclb
add
fwait
sbb
adc
push
icebp
pop
jne
lods
rorb
inc
adc
xor
push
mov
imul
mov
add
leave
xchg
aam
and
mov
fsts
adc
lds
cmp
mov
inc
lods
mov
cmp
jne
cmp
or
jge
sbb
popa
popl
mov
mov
test
loope
out
subb
xchg
or
mov
adc
sbb
mov
jae
lcall
adc
jmp
inc
add
adc
test
jmp
aad
mov
sub
test
push
add
dec
cmpsl
popa
outsl
jbe
dec
sub
adc
sbb
push
or
ret
negl
push
and
lret
cld
aas
add
add
xchg
mov
push
add
fcmovnbe
ret
in
sub
and
iret
scas
inc
push
sarb
pushf
push
std
push
jge
jecxz
int3
outsl
imul
fsts
xor
jnp
sahf
jmp
mov
mov
imul
jae
jnp
pop
rorl
lods
push
loop
es
mov
daa
lods
psubsw
ret
mov
pop
adc
adc
push
push
sbb
mov
rcrb
dec
pop
in
cmp
sub
int3
and
adc
sub
push
outsb
and
out
mov
scas
push
push
adc
dec
lods
adc
and
mov
or
fiaddl
in
daa
popf
inc
das
sub
pushw
cs
xchg
rcrl
sbb
cld
frstor
mov
push
jnp
rcl
pushf
push
scas
ljmp
insb
outsl
jnp
sbb
repz
rorb
cmp
jnp
dec
push
imul
jl
fisttpl
lods
mov
icebp
inc
sbb
mov
inc
sub
lods
xor
xchg
loopne
sarl
add
scas
add
mov
shrl
test
pop
imul
mov
sub
test
push
scas
loopne
pop
push
add
gs
add
pusha
lods
shll
das
adc
out
push
xlat
adc
adc
pushf
test
popa
xor
xor
in
lods
mov
pop
xchg
add
cmp
loopne
mov
repnz
add
int
sahf
aaa
cltd
clc
adc
in
sbb
stos
push
mov
mov
xchg
sbb
pop
int
imul
jp
sbb
xlat
daa
bound
xchg
stos
mov
adc
mov
push
xor
cltd
sahf
shl
cmp
fwait
stos
test
popa
es
sahf
xchg
rcrb
mov
sbb
scas
pop
or
mov
dec
xchg
xchg
sbb
out
test
push
sub
fdivl
mov
add
jo
leave
mov
adc
fisttpl
insl
aaa
and
out
add
inc
push
push
popa
push
mov
cmp
sbb
mov
xchg
or
scas
xlat
clc
jge,pt
insb
xor
cmp
mov
jb
lods
lock
adc
add
and
ja
cmovo
or
add
movl
mov
push
jle
push
adc
adc
call
movsb
stos
sbb
mov
imul
jmp
lcall
scas
out
inc
loopne
lcall
pop
call
pop
sbb
cmp
loope
lds
pop
lods
cltd
push
pop
aas
rcrl
mov
and
test
in
sub
jge
push
xor
cld
cltd
dec
lods
insl
mov
out
push
mov
icebp
sub
or
hlt
xchg
or
lcall
arpl
jb
pop
push
adc
sub
daa
or
push
data16
xor
addl
inc
imul
fistpll
mov
xor
cmp
adc
mov
pop
jnp
les
loopne
cmpl
int
lret
imul
mov
xor
test
push
mov
lods
jmp
test
stc
sbb
xchg
mov
in
int
xchg
mov
mov
int
dec
dec
push
pop
int
lea
pop
int
cmp
jge
push
out
pop
push
leave
cmp
xchg
cmc
mov
dec
mov
fcompl
es
jb
sub
pop
push
mov
js
push
push
cmovl
imul
rolb
sub
dec
loopne
pop
imul
sub
push
cli
jo
push
lods
inc
repnz
push
pop
push
adc
push
cs
roll
add
addr16
jnp
or
ljmp
add
push
dec
lea
mov
fs
fsubl
adc
es
xor
jns
add
lcall
jae
adc
pop
xor
mov
js
cltd
mov
dec
imul
jge
push
mov
inc
das
push
addr16
xchg
mov
es
jmp
mov
dec
jae
add
mov
mov
lcall
mov
and
jmp
rcl
imul
cwtl
popa
xor
cmp
push
sbb
or
jne
adc
les
add
push
jge
mov
sbb
dec
xchg
push
inc
mov
xor
jg
mov
lcall
xchg
jne
push
mov
jmp
xor
inc
es
jg
call
add
bt
dec
int
aam
rclb
addr16
es
inc
inc
into
in
inc
dec
adc
dec
int
mov
push
cmp
ljmp
jmp
test
mov
inc
mov
popa
std
call
xchg
inc
mov
loopne
pop
cmp
push
inc
push
das
adcl
inc
sbb
push
push
or
xchg
ret
mov
adc
push
jge
sub
inc
xchg
xchg
js
mov
pop
cmp
xchg
jb
pop
pushf
mov
fst
dec
cmp
push
xchg
int
or
dec
mov
loop
loope
sub
loop
inc
pusha
lret
outsl
xor
faddl
jg
imul
xchg
and
or
clc
nop
loope
cwtl
lret
pop
test
mov
mov
stos
jae
pop
int
fmuls
pop
daa
es
or
mov
fucomi
mov
scas
mov
mov
add
push
jae
mov
or
push
xor
adc
clc
push
xlat
mov
sub
push
inc
lret
mov
cmp
push
pop
mov
xlat
push
shlb
int
sbb
and
ss
fimull
xchg
vorps
scas
sbb
inc
dec
ss
push
cmp
outsb
xchg
icebp
push
adc
leave
in
pop
test
faddl
and
pop
icebp
push
int3
inc
adc
or
pop
cmpsb
push
mov
or
mov
mov
push
push
lds
lcall
aam
orl
out
add
pushf
ret
fidivs
jmp
divb
mov
aam
es
inc
jae
mov
add
add
je
push
add
push
adc
sub
or
adcl
lds
jmp
pop
aaa
jge
dec
test
pushf
add
cmp
sahf
addl
mov
pusha
enter
in
push
shlb
sbb
ljmp
aam
add
or
icebp
inc
push
lret
sbb
rol
mov
orb
rcrl
sub
xor
xor
dec
icebp
add
cmp
adc
cli
fistpl
push
rcrb
movb
in
or
xlat
push
push
cmp
xchg
sbbl
shr
das
sub
sbb
and
push
pop
cmpsl
cli
sti
fs
mov
sub
mov
scas
mov
jae
lcall
out
sbb
sub
hlt
push
rorl
cltd
mov
idivl
andb
mov
imul
adc
lds
lods
in
adc
subb
std
add
data16
test
les
cltd
sub
cmp
arpl
mov
pop
inc
push
imul
mov
xor
icebp
xor
cmp
fs
mov
add
push
push
xchg
mov
mov
daa
shll
iret
jg
addr16
loopne
mov
add
or
and
cmpl
bound
rcrl
fdivrl
pop
fs
addr16
popa
or
push
adc
or
stos
add
dec
cli
scas
xor
mov
mov
adc
cmp
mov
sti
cmpsl
or
or
or
sub
sahf
xchg
dec
lcall
test
addb
mov
inc
jae
add
data16
mov
inc
ret
test
adc
cmc
sub
in
int
data16
cmp
or
xor
xchg
dec
push
or
jg
ret
push
mov
fistpl
das
in
inc
cmp
in
shr
pop
mov
push
mov
shll
repz
adc
dec
pop
lahf
add
push
push
lret
test
add
stc
lcall
icebp
xlat
mov
mov
insl
int
or
push
js
dec
mov
adc
addl
mov
push
jg
inc
cmp
add
nop
or
shlb
shll
ret
add
add
inc
cld
fistps
sbb
push
out
negl
push
mov
push
dec
xor
fmuls
int3
adc
dec
sbb
testb
in
and
lea
push
cmp
add
clc
cld
sbb
adc
lds
push
and
adc
or
pop
add
mov
inc
inc
or
or
sub
inc
sub
mov
dec
into
shl
jle
add
xor
nop
out
push
cmp
dec
xchg
imul
pop
add
fs
cmpsl
mov
fs
sbb
cmpsb
inc
jmp
sbb
mov
push
addr16
xor
lret
fwait
adc
or
or
dec
cmp
jnp
call
ficompl
cli
add
add
xchg
adc
andl
enterw
and
lcall
pop
pop
sti
adc
in
int
mov
in
xor
sahf
shll
pop
mov
icebp
aaa
arpl
sub
pop
sub
outsl
leave
mov
xchg
adc
mov
pop
pop
add
xor
cltd
or
lcall
jae
jno
adc
pop
mov
jo
push
addr16
mov
xor
int
sbb
les
xor
sbb
aam
xchg
sub
subl
lcall
push
test
add
testb
cmp
add
add
push
jae
or
adc
sbb
scas
iret
cmp
ret
push
imul
ss
jbe
es
rclb
out
pop
mov
or
push
mov
push
js
add
jl
jle
inc
jne
sbb
rclb
xor
data16
adc
cld
and
pop
das
pop
nop
xor
sub
xchg
sub
add
push
sbb
mov
jmp
dec
mov
pop
not
mov
push
xchg
push
and
lea
jmp
and
push
push
insl
add
ljmp
push
xor
into
push
xor
lret
cmp
loop
sbb
sub
out
and
push
cltd
call
dec
xor
les
pop
jnp
xorl
adc
dec
shll
ljmp
cmp
inc
imul
lret
jne
xor
adc
popa
enter
inc
test
xor
mov
shrb
pusha
xor
sbb
adc
gs
sub
sbb
in
add
xchg
jmp
pop
out
jae
pop
sbb
push
inc
shr
push
inc
add
jno
sub
sbb
mov
cltd
lcall
add
jo
add
fildl
inc
pop
movsl
push
pop
jge
push
xor
pop
and
adc
mov
adc
cmp
jle
xor
pop
mov
inc
xchg
fcomps
mov
push
in
xor
add
mov
adc
xor
maskmovq
notl
ja
sbb
shll
mov
into
adc
int
add
lret
xchg
mov
cmpb
lods
cmp
inc
dec
mov
test
popf
imul
addr16
inc
jge
loopne
jne
mov
mov
addr16
ja
imul
mov
or
das
add
push
inc
stos
mov
popa
mov
in
push
inc
pop
add
decl
out
inc
leave
aad
dec
aas
cmp
jb
andl
stos
daa
mov
shl
jns
fisubs
loopne
dec
xchg
sub
push
stos
inc
and
in
dec
sbb
xor
add
jae
out
mov
lods
adc
xchg
rcrl
les
cmp
cmp
cltd
sbb
pop
adc
int
push
iret
adc
shlb
pop
add
loopne
xor
scas
les
push
pushf
mov
inc
xor
jno
repnz
jb
push
movsl
push
sbb
xchg
jns
mov
push
adc
inc
rcrl
daa
pop
add
mov
pusha
add
loope
dec
popf
mov
loop
filds
sub
sbb
shl
incb
cmp
loopne
push
adcb
lods
cltd
mov
cmp
mov
scas
cmp
fwait
or
push
mov
jo
xchg
mov
push
and
enter
ljmp
xchg
adc
loopne
popf
mov
addr16
out
loopne
push
jae
or
pop
loopne
or
je
xchg
or
loopne
add
jl
repnz
cs
sbb
andb
or
cs
syscall
addr16
or
mov
push
dec
mov
cmp
andb
pusha
scas
jae
sub
daa
pop
pushf
push
aam
lods
inc
mov
jo
rol
std
sbb
orl
outsb
loopne
inc
xchg
ljmp
or
add
add
or
shl
ret
adc
mov
aad
pusha
shlb
add
fiaddl
xchg
xor
xorb
sbb
inc
pushf
in
insl
mov
push
int
jae,pn
jmp
pushf
out
hlt
mov
push
iret
fcompl
mov
add
mov
mov
sub
mov
mov
inc
data16
jnp
add
push
cltd
sbb
jp
aad
cli
push
imul
adc
sub
gs
jmp
or
into
shlb
and
sub
sbb
adc
rorb
fs
mov
xchg
jb
inc
sti
mov
sbb
push
cmp
popa
inc
jmp
push
xchg
fdivrl
loope
or
inc
jne
leave
push
xor
adc
addr16
jb
pop
jae
push
sub
mov
lods
shll
sub
pop
scas
cld
bound
das
adc
mov
or
cltd
add
nop
ret
pusha
daa
mov
into
in
adc
cli
roll
popa
jo
cmp
inc
jecxz
pop
es
mov
mov
xchg
and
sbbl
adc
sub
sub
jle,pt
pusha
mov
mul
test
and
sarl
inc
or
ret
add
jnp
jo
push
mov
sbb
add
loopne
or
push
sti
xchg
gs
in
jg
adc
mov
mov
loopne
mov
xor
sbb
not
add
cmp
jb
sub
or
mov
mov
sbb
mov
icebp
into
inc
es
push
outsb
adc
lahf
xlat
dec
cmp
aaa
daa
notl
xor
out
test
cmp
cmp
mov
sbb
xor
adc
push
push
in
in
mov
mov
dec
pop
aaa
sbb
push
mov
adc
rcl
or
nop
xor
lahf
or
js
in
jle
insl
aad
outsb
test
mov
cmpb
mov
xor
xchg
mov
mov
xlat
cmp
xchg
ret
loopne
mov
sbb
sbb
mov
or
add
test
cmp
lods
jae
js
out
mov
enter
and
cmpsb
sbb
push
add
or
mov
jo
mov
or
push
mov
rcrl
fcmovnu
xchg
adcb
mov
dec
or
cwtl
sub
sbb
xchg
and
inc
scas
sbb
mov
adc
daa
stos
adc
push
pop
cmpsb
pop
fs
movb
cmpl
push
push
pop
das
inc
orb
sub
or
mov
test
bound
aam
jae
xchg
lea
dec
mov
lods
add
pop
jge
sub
jnp
jae
xor
cmpsb
fiaddl
int
push
es
popa
daa
pushf
out
push
add
leave
xchg
xlat
aad
popa
dec
add
pop
sbb
les
cwtl
pop
orl
les
sbb
jmp
test
sbbl
inc
jo
dec
loope
sbb
stc
sbb
push
sti
push
jnp
in
add
mov
dec
call
push
or
subb
pop
cmp
mov
into
int
bound
push
sbb
adc
xchg
push
icebp
jo
out
iret
stc
push
sbb
cmpsl
push
inc
inc
divl
add
paddd
incb
mov
shrb
add
icebp
pop
add
pop
mov
pop
pop
mov
or
add
dec
out
sub
mov
dec
in
rcr
push
popf
cld
test
inc
test
jno
dec
jge
arpl
jmp
addb
call
daa
in
std
push
mov
push
push
addb
add
sbb
pop
xchg
icebp
xor
inc
inc
dec
and
stos
sub
pop
aam
inc
leave
adc
mov
push
lcall
sbb
rcll
dec
jae
xlat
jle
test
push
and
or
rclb
mov
push
cmp
push
mov
daa
arpl
jge
jne
test
or
aad
scas
or
adc
lods
scas
inc
xchg
aam
push
adc
ds
cmp
mov
mov
ret
cmp
inc
das
push
mov
mov
inc
and
mov
clc
fs
mov
in
xor
mov
adc
loopne
lea
aam
cmc
aam
pop
mov
push
sbb
xor
jne
and
push
cwtl
daa
es
pop
int
dec
in
pop
jg
fisubs
pop
jae
pusha
movaps
push
xor
xor
jo
out
daa
std
cmpsl
andb
pusha
push
sub
dec
ja
lret
nop
lret
aad
daa
inc
loope
sbb
pusha
loopne
mov
xchg
adc
xchg
sub
mov
jno
popa
mov
stos
or
lcall
dec
in
pusha
movsb
push
mov
cmp
orl
push
xlat
mov
nop
adc
scas
adc
push
in
in
xchg
imul
mov
cmp
adc
adc
mov
or
sbb
ret
int
pop
jl
xor
bound
lcall
jmp
cmovl
add
push
popa
or
push
and
sbb
out
add
mov
sbb
rcll
fildl
jae
daa
push
mov
mov
es
jle
push
int3
add
movsb
or
ret
int3
adc
lcall
scas
xor
iret
cmpsl
stos
push
jb
enter
rorb
xchg
cmp
les
push
pusha
adc
ret
rolb
inc
xor
push
or
test
cmc
insl
scas
cltd
test
pop
push
sub
or
addb
test
rcll
lods
mov
in
xchg
notb
add
push
nop
outsb
imul
fcoms
int
mov
nop
mov
arpl
sub
les
jge
push
aas
leave
lods
loopne
mov
popl
out
and
cmp
add
scas
subl
cmp
test
pop
xchg
fiadds
rclb
push
lret
dec
push
add
ljmp
fimuls
adcb
add
add
pop
push
sbb
xchg
adc
iret
add
mov
leave
aas
push
push
mov
int
xor
push
sub
inc
push
roll
pop
cltd
andb
in
jae
pop
pop
mov
sbb
jo
push
orb
dec
mov
cmp
ror
jae
insb
adc
pop
xor
and
xchg
cmp
jmp
add
add
enter
cmp
pop
pop
mov
push
sub
in
imul
inc
jle
lods
gs
and
pop
enter
or
cwtl
pop
addb
sbb
rol
orl
imul
cs
cmpsl
dec
lods
ret
popa
xchg
jae
push
inc
jae
jb
xchg
icebp
dec
pusha
sub
adc
or
sbb
sbb
outsb
stos
dec
pop
xor
dec
mov
sbb
je
mov
adc
scas
jo
add
push
cwtl
ja
dec
popa
ljmp
inc
or
outsb
adcb
mov
jo
addb
fstpt
ljmp
lcall
cwtl
sbb
int
adc
fwait
faddl
inc
jae
dec
push
inc
int
and
sbb
rcpps
mov
lahf
mov
or
mov
inc
pop
cmc
jne
jge
and
mov
jmp
test
adc
or
adc
sub
mov
mov
fnstcw
rcrl
loopne
mov
dec
push
xchg
or
outsl
dec
fs
or
test
sbb
in
mov
daa
insb
push
shll
sbb
jo
ds
and
addr16
pusha
test
and
popa
push
pop
into
cmc
adc
mov
sahf
xchg
xchg
xor
into
dec
xchg
xor
add
dec
popa
inc
jno
nop
cltd
xor
dec
test
dec
cmp
std
movsb
jge
mov
add
jnp
in
sbb
push
sarl
movb
xlat
push
addl
inc
addl
sbbb
jnp
js
jb
and
lods
xchg
call
pop
cli
das
sbb
xorl
lret
xchg
rcll
aad
fcompl
add
in
lock
fcomps
pop
pextrw
and
cmp
addb
outsl
mov
jnp
pushf
imul
push
xor
cmp
test
jmp
inc
adc
adc
loopne
roll
add
loopne
push
mov
cmp
mov
pop
and
lock
outsb
sbb
mov
rclb
mov
sub
sbb
add
dec
sbb
jle
xor
movsb
imul
add
mov
into
inc
add
std
dec
and
ret
or
add
repz
jg
pop
sbb
in
sub
loopne
mov
xchg
es
xlat
add
nop
data16
aam
aam
sub
hlt
loope
adc
mov
repz
mov
lret
iret
lsl
sbb
mov
cwtl
popa
sub
mov
push
sbb
ja
push
push
mov
icebp
lret
js
jnp
pop
scas
data16
and
sub
lret
add
push
aad
push
add
adc
push
sub
jmp
mov
daa
xor
lcall
mov
push
push
jae
dec
in
ds
dec
add
sbb
pop
imul
pop
xorl
scas
push
xchg
inc
jnp
push
addr16
pop
mov
sub
mov
inc
int3
daa
sbb
pop
push
jg
test
sub
jo
dec
mov
aad
xor
test
cmp
addb
daa
test
ljmp
xchg
cld
add
sub
cmpl
push
imul
pop
mov
mov
jle
jmp
push
cwtl
ret
repnz
mov
or
stos
jecxz
addb
pop
int3
xchg
or
lret
push
xor
stos
cltd
test
or
inc
aaa
leave
mov
call
stos
adc
push
stos
inc
xor
ret
or
sarl
rclb
push
addb
lret
in
out
popa
ljmp
push
jle
push
xor
aas
daa
or
xchg
jae
or
push
dec
add
aam
xchg
mov
inc
inc
add
jb
repz
and
inc
pop
or
loopne
pusha
sub
incb
data16
inc
cli
data16
mov
push
or
cld
hlt
or
adc
jns
jmp
mov
ret
fadds
push
les
push
scas
jmp
cmp
push
push
push
orb
movsb
mov
adc
xchg
mov
mov
sub
dec
fs
mov
jne
arpl
xor
sub
pop
pop
mov
dec
inc
iret
scas
mov
xlat
cld
clc
and
and
inc
xor
mov
mov
pusha
gs
sub
clc
push
and
cmpsb
data16
sti
insl
leave
adc
popa
sub
or
add
lcall
pushl
jno
jne
dec
popf
gs
adcl
insb
sbb
mov
or
pop
mov
xchg
mov
xchg
add
scas
xchg
mov
push
lea
jno
xchg
test
cmp
lds
rdtsc
pop
dec
cmp
dec
jge
push
mov
dec
jne
mov
or
xchg
mov
pop
cmc
push
aas
add
inc
pmaxub
add
adc
pop
xor
dec
test
dec
mov
push
sahf
push
pop
or
adc
lcall
jmp
test
add
adc
xchg
mov
jl
insl
aad
mov
push
mov
dec
icebp
add
pop
loope
push
or
push
inc
cmp
push
stos
push
sbb
loopw
rclb
jae
dec
shrb
leave
push
jae
arpl
fisubrl
inc
into
jle
mov
in
orl
bound
or
fisubl
fiadds
sub
mov
or
cld
adc
xchg
jae
or
popa
sub
lret
or
push
inc
xchg
cmp
xorb
xchg
jmp
imulb
push
cmp
int
dec
sti
inc
lret
sbb
fnsave
daa
mov
bound
cmp
xor
movsl
xlat
mov
xor
mov
mov
xchg
aas
xor
and
sbb
mov
mov
sub
inc
mov
dec
test
in
inc
lret
push
mov
sbb
push
xchg
mov
adc
das
shlb
xor
scas
data16
ret
jns
ret
push
call
or
scas
aaa
jo
nop
add
andb
scas
popa
jo
rorb
arpl
dec
and
mov
lcall
sahf
in
add
jne
cmpsl
push
dec
popf
mov
rol
leave
add
xchg
mov
adc
add
ss
mov
sbb
stc
mov
nop
push
leave
aam
or
push
jb
lds
adc
insb
lock
adc
push
mov
movsb
addb
mov
cmp
test
adc
push
and
aas
inc
int3
jnp
push
stos
orb
cltd
mov
fdivs
add
push
and
cmc
jge
push
scas
rclb
mov
loop
loop
push
push
adc
xor
aam
add
jno
bound
add
jge
popa
add
adc
jo
xor
and
add
shll
jo
ja
ret
ss
xor
sub
xlat
shll
mov
sbb
rcl
fdivrs
or
add
imul
ret
inc
setb
call
scas
les
cwtl
int
adc
stos
mov
push
or
rolb
jo
and
xor
fildll
cmp
sub
push
jmp
flds
ljmp
imul
jne
sbb
adc
dec
xorb
sub
loope
out
lock
pop
xchg
jg
and
loopne
sbbl
rcll
mov
push
dec
arpl
add
enter
push
xchg
jb
mov
and
hlt
mov
cmp
es
mov
or
shlb
push
outsb
mov
xor
loop
and
shll
es
lods
jae
sbb
and
xchg
dec
nop
sub
pop
shrd
mov
subb
jecxz
push
pusha
or
mov
imul
or
inc
pop
mov
loopne
mov
ret
jle
mov
orb
pop
add
push
cmp
push
btc
test
mov
subb
mov
push
rclb
das
and
mov
fs
mov
outsb
xor
or
in
xchg
push
clc
push
jno
data16
fisubrl
push
enter
pop
ret
test
jge
nop
rcll
jg
lahf
jae
lret
add
out
fcoms
repz
add
inc
sub
push
inc
sbb
mov
mov
adc
ret
push
sub
enter
xchg
mov
add
dec
rcll
add
or
and
pop
mov
fsub
outsl
jg
lcall
adc
dec
cmp
xchg
movsb
test
sub
push
jno
xor
jae
jmp
jo
repnz
pop
xor
jbe
in
incb
scas
inc
sbb
imul
fs
xor
mov
or
sahf
hlt
xor
rcrb
push
mov
cmpsb
and
andb
xorb
or
mov
movsb
data16
leave
fldcw
and
stos
dec
loopne
pusha
or
push
add
mov
push
xor
js
add
mov
cmpsb
test
inc
pop
fcompl
sti
sbb
mov
adc
sbbb
fmul
xchg
adc
les
popa
hlt
push
add
adc
sub
fs
in
and
dec
jge
cs
sti
in
add
cwtl
or
lret
xchg
lcall
sub
xor
mov
and
dec
cvtps2pd
mov
enter
pop
in
xorl
jns
or
jne
jge
stos
pop
jae
pop
push
enter
fstl
or
call
adc
adc
push
jnp
push
stos
pushf
ret
jp
add
mov
mov
push
jo
stos
cmpl
mov
mov
es
cwtl
dec
pop
push
cmpsb
inc
sbb
cmpsb
or
xchg
sti
push
in
add
dec
push
mov
xor
movsb
mov
movaps
adc
shlb
cmp
filds
insb
pusha
mov
adc
push
xchg
stos
outsb
push
sbb
subb
xor
push
xchg
pop
push
fstpt
sub
pushf
push
xor
insb
mov
mov
pusha
test
mov
add
es
mov
or
mov
and
jae
loop
push
push
addr16
inc
push
pop
push
clc
jle
xchg
ret
lds
mov
xlat
pop
sarl
dec
xchg
stos
add
fs
add
sub
adc
adc
jecxz
cmp
aas
xor
hlt
jb
or
in
stos
filds
sub
push
mov
arpl
mov
fs
inc
xor
xchg
out
mov
xchg
inc
adc
jo
mov
xor
fcompl
shlb
inc
popa
addr16
clc
incl
sub
jge
jecxz
fiadds
inc
mov
pop
dec
xor
or
into
sbb
push
ds
add
scas
pop
jae
popf
add
dec
mov
or
mov
push
loope
scas
mov
add
mov
cmp
jb
dec
in
jmp
add
test
lret
loopne
dec
mov
mov
sbb
or
inc
mov
addb
mov
sbb
jae
jae
xchg
std
sub
inc
mov
sar
inc
mov
das
xchg
add
push
loopne
sbb
subb
inc
xor
out
cmp
imul
scas
mov
or
sbb
push
icebp
jo
cmp
inc
faddl
jb
rcll
gs
xlat
add
adc
xlat
pushf
pop
scas
ja
pusha
push
sbb
pop
lods
popf
mov
xchg
push
adc
xchg
popa
scas
sub
and
ljmp
adc
daa
adc
xlat
fsubrl
or
adcl
xchg
enter
adc
pop
mov
dec
sub
jae
mov
aam
push
loopne
add
add
or
mov
in
add
xchg
sbb
push
inc
and
sbb
scas
loopne
das
xor
sub
and
cmp
wrmsr
jne
sub
or
clc
xchg
sahf
shrb
mov
push
sbb
pushf
or
cltd
arpl
mov
push
or
pop
mov
dec
xor
jb
ret
ja
sub
push
loop,pn
not
daa
mov
dec
icebp
fsubrl
push
dec
adc
xor
cmp
lods
cltd
mov
hlt
pop
sbb
sub
sbb
imul
arpl
or
cs
mov
push
ret
popa
imul
cmp
xor
add
sarb
jo
jb
push
sbb
mov
cmp
cli
inc
mov
inc
jb
sub
cmp
cmp
int3
call
call
outsl
mov
push
cmp
out
loop
lret
adcb
mov
jno
mov
faddl
or
push
cwtl
inc
je
fwait
add
gs
jno
fists
lret
cmpsb
scas
test
or
fldcw
inc
inc
xor
ja
enter
stos
lcall
adc
inc
and
out
es
xorl
cltd
or
mov
pop
mov
scas
test
enter
adc
xor
mov
into
js
loope
test
lret
pop
test
rolb
inc
cmp
push
sti
sbb
sbb
lret
repz
je
add
xchg
stos
add
pop
xor
mov
ret
test
sub
mov
fistps
mov
push
xor
push
push
push
xchg
stos
push
subl
sbb
mov
imul
into
clc
adc
jbe
dec
mov
popa
add
push
pusha
ret
mov
and
cs
xchg
push
test
orl
xor
fnstsw
pop
aam
jae
or
imul
roll
inc
jne
icebp
push
cltd
sub
pop
mov
push
and
xchg
pop
push
xor
lods
ret
subps
test
cmp
cmpsl
bswap
xchg
addr16
inc
cmp
xchg
add
pop
xchg
jns
add
pop
jge
scas
dec
fs
pop
and
cs
pushf
orl
and
or
add
cwtl
pop
and
push
xor
mov
outsl
sarb
xor
adc
push
scas
rorb
and
xor
jno
insl
loopne
xor
pop
cmp
lea
add
push
sub
scas
pushw
rcrl
inc
xor
arpl
repnz
jo
or
rclb
iret
jne
jnp
iret
mov
push
push
les
enter
lods
into
repnz
and
cmove
inc
rcrl
xor
mov
inc
pop
lea
loop
cmp
scas
subb
pusha
imul
push
lcall
mov
cmpl
dec
jge
and
outsb
or
mov
jb
insl
mov
add
or
inc
test
lret
adcl
mov
add
mov
repz
pop
scas
add
ret
ret
loope
icebp
jnp
xorl
shll
pop
lods
and
mov
mov
push
sbb
lret
add
lret
daa
dec
push
int
push
aam
pop
jae
inc
xor
push
inc
xchg
mov
outsl
lds
and
push
loopne
sbb
adc
push
and
jnp
rclb
adc
cs
es
mov
add
cmpl
sbb
adc
adc
sbb
icebp
shr
xchg
push
imul
jno
pop
cwtl
sbb
sbb
sbb
movsb
adc
aaa
rorb
xchg
rorb
int
icebp
pop
dec
in
lock
or
xchg
mov
push
adc
out
lock
add
push
cld
xchg
cmp
mov
ret
mov
mov
pushf
repnz
adc
sbb
xchg
test
icebp
fldt
push
push
push
pusha
push
lret
xchg
add
pop
mov
push
xchg
jns
jno
imul
mov
xor
dec
aam
jl
pop
je
mov
cwtl
or
sub
leave
add
push
call
pop
and
fwait
sbb
inc
push
jb
adc
cltd
jae
stos
inc
xchg
mov
pop
xorl
aad
icebp
je
push
cmpsl
xor
dec
push
mov
std
ss
cs
rol
jae
inc
jnp
aaa
aas
or
popa
mov
ljmp
sbb
or
loope
inc
push
pop
add
push
xchg
add
adc
outsl
ja
lock
out
dec
inc
jno
mov
rcl
imul
xchg
movsl
sub
jno
jmp
mov
ja
enter
xchg
add
sbb
sub
inc
testl
je
add
iret
lret
addr16
lods
mov
xor
pop
or
push
sbb
sub
jne
adc
call
in
xchg
inc
mov
fistl
and
inc
push
xlat
dec
jge
punpckhbw
rorb
cmp
sub
fistl
mov
mov
mov
sbb
pushl
sbb
jae
push
and
out
js
and
or
cmp
inc
adc
xchg
pushf
roll
imul
out
inc
add
or
or
jae
imul
jle
daa
mov
push
pop
sub
pusha
sub
nop
daa
icebp
adc
cltd
cmp
mov
push
push
xor
jae
jb
test
ret
movb
cld
add
pop
cltd
je
call
push
inc
xchg
lods
add
scas
jbe
add
dec
ret
pop
sbb
in
enter
mov
in
in
push
sbb
and
fisubrl
das
or
xor
and
sub
jmp
push
insl
jae
inc
call
or
ud0
adc
push
out
xorb
outsb
rclb
mov
jbe
push
int
dec
cwtl
mov
test
addr16
xor
xor
repz
mov
shl
pushf
add
les
mov
rcl
mov
adc
inc
add
mov
std
jbe
and
adc
jnp
in
ret
sahf
pop
es
lcall
jle
add
lcall
pop
aad
xlat
fstpt
lods
ret
adc
shrl
jb
movsl
sbb
add
rcrb
mov
dec
xor
inc
sahf
push
mov
nop
xchg
iret
add
out
out
push
cmovo
js
xor
shrb
incl
enter
jb
mov
sbb
and
rolb
xchg
sahf
jo
stos
jnp
aas
sbb
or
push
mov
jo
jecxz
imul
jb
mov
lcall
push
push
xor
pop
xor
adc
andl
adc
enter
push
out
xor
in
andb
cmpsl
adc
xchg
or
xor
mov
inc
aaa
xor
or
imul
loope
pop
das
dec
jno
cltd
xor
movl
ret
dec
cmc
ret
inc
inc
sub
mov
sbb
lds
dec
int
sarb
push
jo
rcll
fnstcw
lret
push
out
aam
mov
aad
imul
nop
pop
jno
sub
sbb
ret
std
les
add
js
xor
push
pop
or
add
or
ret
mov
pop
out
rorl
loope
data16
addl
cmpsb
les
in
mov
loop
push
or
and
add
jecxz
mov
and
scas
xor
andb
jb
fsubs
ds
mov
xchg
pop
dec
pop
mov
mov
pop
aas
jge
adc
add
or
cmpsb
xor
push
jnp
test
and
or
out
cmp
dec
mov
int
sub
sub
aam
mov
sub
and
or
xor
cmp
xchg
andb
pusha
mov
cs
xor
xor
mov
aad
xor
cwtl
push
mov
or
pop
xor
push
push
push
xchg
icebp
mov
cmp
sub
call
push
xchg
fcomps
pusha
test
push
movsb
in
push
loope
adc
push
sahf
add
and
inc
imul
rorl
add
aaa
lret
inc
cmp
int
cmpl
or
cltd
dec
fcoml
adc
iret
xor
aam
mov
push
push
pop
lea
push
push
mov
dec
fmuls
mov
call
hlt
push
push
push
push
mull
xchg
fiaddl
dec
cwtl
sbb
stos
dec
jne
pop
xor
lods
push
or
xchg
cmp
hlt
mov
int
push
xlat
clc
add
clc
movsb
das
rclb
stc
push
enter
cmpsl
mov
xor
adc
pushf
sbb
js
push
adc
adc
imul
adc
addl
insl
fnstcw
sub
sbb
aas
sbb
call
movb
addb
test
push
sub
mov
push
inc
imul
mov
rcll
out
mov
push
push
sub
dec
stos
xor
mov
add
push
jg
add
lcall
jb
push
lea
and
sub
jp
daa
int3
push
mov
push
inc
or
sub
dec
mov
pusha
std
lods
dec
iret
in
inc
mov
out
call
pop
call
lcall
loope
inc
out
jbe
stc
jae
andl
ret
ret
push
adc
imul
jb
ret
push
jl
inc
xor
adc
mov
stos
mov
into
inc
sbb
inc
jbe
sbb
jae
or
imul
cwtl
mov
test
jae
rolb
pop
scas
push
add
aas
pop
mov
push
mov
fs
dec
pop
lods
cmp
dec
mov
add
data16
in
mov
dec
int
mov
es
cmp
or
or
subl
stos
add
cmp
xlat
int3
dec
xor
lahf
es
jb
mov
es
jb
push
and
xchg
sub
ret
inc
into
add
sub
xor
add
mov
inc
pop
pop
lea
jo
lock
repz
xor
mov
shrb
mov
jns
sub
cwtl
sbb
ret
push
xor
jne
jns
lret
xchg
js
cld
insb
notl
lods
ss
scas
sbb
vphsubdq
adc
loope
adc
inc
or
orl
xchg
imul
mov
ljmp
lods
adc
jne
adc
cltd
xchg
andb
data16
mov
add
or
xchg
addb
pop
or
mov
ror
push
inc
lea
sbb
xor
cmp
lcall
inc
mov
ret
jge
cs
inc
add
add
cmp
jnp
lret
pop
mov
mov
xor
inc
sbb
test
push
dec
jne
mov
leave
or
ret
fs
cmpsl
sub
cmpsb
push
inc
push
mov
fistpl
sbb
adc
add
iret
adc
das
fsubl
es
jb
pop
sub
mov
push
cmp
add
int3
adc
add
push
hlt
inc
mov
mov
cs
stos
push
or
pop
xor
rep
mov
inc
stos
sub
fidivl
mov
cmp
dec
shll
push
add
push
fisubrl
jl
mov
aam
ud0
push
ss
adc
xlat
dec
push
insb
dec
pop
adc
push
xor
pop
push
ja
cmovl
das
jo
mov
add
cmp
subl
out
lock
enter
mov
or
loopew
add
lea
mov
pop
adc
shll
and
rcl
fwait
jns,pn
add
cltd
mov
push
or
jo
mov
imul
jae
inc
aam
notl
jnp
cmp
int
xor
mov
mov
mov
mov
enter
mov
ret
xchg
mov
loop
lcall
loopne
xchg
xor
xchg
or
fisttpl
push
jb
cmp
add
pop
les
fcom
push
scas
call
inc
cmp
aad
lret
inc
cltd
mov
dec
into
inc
popl
cmp
lea
test
stc
sbb
pusha
mov
movsb
rorb
dec
pop
pop
es
or
pop
xchg
je
aas
xor
push
inc
sub
lock
push
add
mov
ljmp
add
jno
orb
mov
cmp
inc
les
mov
mov
add
sbbb
push
push
clc
mov
mov
sbbb
test
cmc
jae
sti
and
cmc
jge
inc
push
inc
cmp
add
js
pop
cmp
stos
and
rorb
divl
inc
add
adc
xchg
ret
stc
and
inc
int
pop
sub
pushf
or
xor
rcrl
mov
lret
mov
push
jne
pop
or
mov
jge
addl
inc
pop
dec
dec
lret
push
sub
mov
mulps
dec
add
dec
adc
lret
call
push
notb
scas
ret
cmpsb
sbb
aam
nop
sbb
cmp
aad
mov
sbb
pusha
loopne
loopne
add
sbb
shrb
push
and
jae
add
sbb
sbbb
inc
scas
push
mov
cmpsb
lcall
int
ret
jb
movl
xchg
sub
inc
inc
addr16
mov
nop
xchg
pop
inc
es
or
addb
shrb
mov
pop
divl
mov
or
pop
push
pop
loopne
test
fadds
xor
faddl
daa
sbb
xchg
xchg
mov
rcrb
inc
hlt
add
outsb
pop
inc
mov
inc
das
jmp
ljmp
stos
dec
push
dec
inc
call
cltd
pushf
pop
xor
add
pop
or
or
cmpsb
push
sbb
add
sub
add
cmp
add
push
adc
add
jo
aad
pop
nopl
xor
sub
shll
lcall
ficoms
mov
jge
orb
xchg
jge
nop
stos
mov
or
push
cmp
incl
jae
addb
sub
push
ret
test
inc
or
pop
scas
adc
jg
cltd
jo
add
cmpsl
test
int3
mov
andl
fcom
fsubrl
push
mov
loopne
cmp
push
rorl
pusha
daa
rolb
add
adc
jmp
andl
mov
addr16
inc
add
adc
sbb
jle
in
scas
pusha
xchg
ds
mov
pop
mov
sbb
xor
dec
sub
xchg
cmpsb
add
push
and
push
adc
shll
sti
push
inc
out
and
sub
loope
shrl
seto
sub
andb
lcall
mov
lret
xchg
or
data16
popa
call
fs
lea
xor
es
or
lods
inc
or
testl
imul
sub
add
or
pop
imul
rolb
daa
into
aam
lea
adc
mov
inc
xorb
sbb
rolb
xor
daa
outsb
imul
push
push
lahf
sbb
ret
adc
je
test
pop
xchg
adc
mul
inc
ffreep
loope
mov
ret
sbb
cmp
sbb
retw
into
push
in
in
fsubs
pop
xchg
mov
mov
add
xorl
mov
adc
bswap
cmp
cmp
aad
out
mov
je
sbb
adc
and
xchg
movsb
subl
shl
je
add
addr16
inc
push
adc
inc
sub
add
rorl
rolb
into
inc
leave
loope
shrb
inc
lcall
in
mov
pushf
or
ja
ret
sub
add
pop
js
loope
push
cmp
test
sbb
mov
test
add
or
push
add
cs
std
adc
outsb
mov
mov
mov
xchg
cwtl
pop
int
cmpsl
cld
mov
push
xor
xchg
pushf
movsl
push
test
sub
push
faddl
clc
inc
ret
ffreep
pusha
rolb
fs
jo
lcall
or
sbb
jmp
dec
push
jne
push
mov
xchg
mov
pop
popa
add
add
adc
push
mov
mov
mov
inc
rol
adc
pop
and
dec
js
inc
mov
loopne
lods
push
mov
in
adcb
sub
dec
mov
data16
push
test
xlat
sti
fistl
jo
push
and
and
lret
cltd
popa
js
mov
and
dec
pop
imul
mov
jecxz
inc
sbb
or
jecxz
das
fwait
add
ret
leave
ret
rcrb
push
and
adc
push
push
mov
inc
inc
mov
call
jae
bt
adc
lahf
out
add
mov
mov
jg
jmp
mov
les
cwtl
enter
and
cltd
push
dec
lds
mov
add
shll
mov
push
stos
lret
xchg
cltd
mov
adc
xlat
cmc
pusha
xor
subb
jl
call
sub
je
icebp
dec
mov
mov
sbb
or
stos
pusha
add
test
pop
dec
jecxz
loope
or
pushf
mov
or
or
and
pop
aaa
adc
sbb
sub
pop
dec
data16
lret
sub
lods
mov
mov
xor
int
jmp
cltd
dec
orl
sbb
sbb
xor
and
fs
jp
xor
out
pushf
rcll
jne
mov
inc
push
xor
add
mov
cwtl
push
sbb
push
jae
mov
inc
sub
add
sub
mov
lock
addr16
inc
sub
int3
or
js
in
test
or
push
es
add
pushf
cld
nop
addb
dec
xor
loopne
cmc
cwtl
or
push
and
sbb
dec
mov
xor
loopne
xor
int
inc
dec
and
sub
jle
xchg
push
sarl
sbb
mov
ret
ret
push
mov
ret
xor
push
fldl2e
add
add
push
push
jns
push
mov
dec
in
sar
xchg
dec
inc
imul
clc
in
pop
icebp
pushf
or
cwtl
loop
loope
or
inc
pop
cmp
mov
pushf
mov
push
push
shll
xchg
arpl
xor
add
add
dec
push
in
cmp
data16
fbld
xchg
inc
test
sbb
and
test
insl
or
punpckldq
jmp
pop
xchg
stos
daa
bound
fsubl
fidivrl
or
pop
push
fwait
cmp
lcall
test
cmp
sub
in
push
xlat
shlb
stos
dec
or
adc
scas
mov
loop
push
dec
inc
inc
or
and
xor
adc
mov
push
mov
jo
sbb
and
stos
cmpsb
or
cmp
or
stos
xchg
sub
add
push
cmp
and
or
adc
push
adc
dec
adc
mov
or
jo
jb
cmpl
cltd
enter
jle
in
mov
test
mov
add
add
xor
ss
es
jg
es
cmp
nop
push
cmp
out
pop
mov
inc
and
dec
inc
sub
or
push
mov
sbb
inc
rolb
xlat
push
jnp
mov
je
pop
and
add
adc
es
pop
pop
mov
adc
add
rolb
out
add
xchg
mov
sub
xor
jns
push
in
enter
dec
jne
inc
pop
pextrw
mov
ret
push
sbb
or
in
scas
jge
and
ret
addb
jmp
loope
inc
cmp
push
lods
test
cltd
push
inc
and
cmp
popa
inc
popa
pmulhuw
jle
addr16
pop
xchg
mov
mov
mov
pop
inc
emms
ret
mov
pop
andb
jne
push
xor
and
fdivp
ljmp
mov
push
xchg
les
sub
int3
push
lods
cmp
push
lock
cmp
sbb
jecxz
adc
lock
cli
aam
leave
rol
mov
cmp
rcrb
push
popa
and
add
bound
pop
es
fsubr
adc
mov
in
pusha
or
push
mov
push
pop
jae
push
popl
mov
cmp
push
rcrl
shrl
mov
popa
test
mov
pop
das
add
iretw
inc
cmp
pop
adc
cs
jae
xor
ret
pop
xchg
subl
sarb
dec
dec
fistps
adc
xor
int3
xor
add
frstor
xlat
icebp
xor
aam
jge
popl
scas
xor
xor
rol
in
cmpb
push
pushf
ljmp
cmp
cmpsl
pop
out
xor
int
xor
adc
pop
aam
jo
shlb
out
loopne
mov
adc
or
ror
in
ret
in
loop
fdivrl
push
sbb
xor
loop
ret
adc
inc
das
xchg
ret
scas
test
push
pop
xchg
cmpsb
mov
xor
cmp
mov
push
xor
add
aas
outsb
ficoml
push
cs
jecxz
xor
mov
jo
cmp
sbb
mov
mov
lock
mov
sbb
pop
cwtl
xor
bound
push
leave
cltd
lcall
das
jne
je
add
pop
adc
dec
push
or
and
xchg
leave
popa
jp
push
sbb
and
ret
lret
loop
push
shl
jnp
in
inc
dec
xchg
and
xchg
inc
iret
pushf
orl
shrl
add
sbb
movsb
leave
loope
or
push
mov
test
mov
or
xor
orb
ss
mov
lret
icebp
ja
subb
roll
jge
xchg
add
lcall
lcall
stos
scas
data16
movsl
xor
mov
mov
fisubrl
imul
jp
dec
int
jp
xor
enter
add
xchg
inc
push
scas
push
sbb
xorl
sub
js
pop
subb
or
ret
imul
xor
pop
in
push
add
cwtl
push
sub
jne
int
ret
xchg
dec
sub
add
or
or
orb
cmc
iret
ljmp
jecxz
ljmp
sub
jne
loopne
jno
stos
pop
in
nop
or
pop
sbb
jp
mov
dec
cmp
xor
popf
insl
in
push
adc
sbb
out
lock
popf
adc
cmp
sbb
pushf
or
xchg
fsubrl
xchg
out
repz
in
aad
stos
lahf
iret
popa
push
add
add
mov
repnz
and
cmpsb
pusha
add
push
or
jo
loop
inc
subb
cmc
adc
stos
clc
add
dec
mov
or
leave
shll
mov
int3
adc
inc
xor
inc
aam
inc
xchg
xor
cld
lock
add
mov
ljmp
cmpsb
mov
cmp
sub
sbb
and
inc
loopne
sub
fneni(8087
xchg
or
cmpsb
lret
es
add
repnz
push
lcall
dec
nop
cmp
daa
sbb
ret
ret
movsb
lea
or
pand
sbbl
push
fwait
xor
add
or
int
add
cmp
or
and
in
push
pop
mov
mull
add
xor
mov
sbb
out
and
xchg
cmpsl
popa
sbb
push
ss
repz
jb
mov
jg
loopnew
sbb
std
es
jmp
inc
dec
aam
push
sbb
enter
cmovge
lcall
test
push
sub
xor
ret
adc
test
addr16
pop
rcrl
dec
xlat
enter
push
xlat
push
xchg
aad
call
push
ret
push
pop
es
cltd
inc
mov
adc
bswap
or
jnp
lods
adc
xlat
pushf
and
es
rcll
jo
ret
jae
cmpsl
or
in
xor
xor
test
jne
test
lods
pop
cmp
jecxz
adc
xchg
pop
cltd
ljmp
sub
inc
lcall
mov
jb
popa
loopne
or
sahf
call
jnp
jmp
jb
mov
out
xor
scas
sub
stc
in
add
test
hlt
fisttps
cmc
inc
stos
int3
add
jae
sbb
imul
mov
push
add
adc
inc
insb
nop
mov
pop
loop
sar
inc
mov
pushf
add
cmpsb
and
mov
andl
repz
shll
and
pop
add
xor
push
aam
testb
movsl
ffree
iret
test
ljmp
jae
push
decl
fptan
add
add
shlb
pop
add
inc
jg
adc
or
das
mov
mov
or
in
insl
add
sbb
dec
test
add
sbbb
jae
push
into
mov
sbb
adc
icebp
aad
jbe
fiaddl
adc
sbb
scas
and
xor
repz
rolb
add
loopne
mov
inc
sbb
mov
iret
loopne
leave
xor
fidivrs
aaa
ror
inc
or
popf
jl
ret
inc
cwtl
mov
add
ja
lods
adc
mov
adc
shl
rcrb
xchg
icebp
pop
mov
ret
or
movsl
arpl
es
cmp
arpl
dec
add
adc
mov
mov
cltd
dec
mov
cmp
pop
es
jecxz
ljmp
and
xor
xor
mov
or
pop
add
push
add
push
es
push
enter
adc
push
pop
shll
rorb
loopne
bound
inc
inc
mov
cwtl
pushf
sbb
call
andb
dec
push
sbb
or
add
jo
test
mov
cmpsb
loop
adc
mov
cmp
xor
bound
sub
repz
rolb
pushf
sub
add
sub
pop
jae
outsb
or
or
out
xor
test
sbb
scas
push
lea
addb
push
lret
inc
and
add
add
pop
scas
add
or
orb
lds
shrb
pop
inc
and
add
mov
pop
xor
xchg
push
or
jae
xchg
test
xchg
mov
jbe
jle
pushl
cmp
lret
inc
adc
adcl
cli
xchg
mov
or
cltd
sbb
inc
jp
push
orl
rclb
ds
pop
lock
mov
in
push
sti
int
push
lods
lret
add
mov
or
mov
push
ss
push
dec
std
add
xchg
pushf
daa
push
or
cmpsl
push
daa
xchg
lcall
add
xchg
and
xlat
test
stc
sbb
sbb
push
cmp
pusha
push
xor
and
out
addr16
push
push
cmp
divb
push
loopne
jae
mov
in
jp
add
dec
push
push
inc
cmp
cmp
sub
shrl
pop
loopne
adc
mov
cmp
push
jo
add
stos
push
in
xchg
jmp
int
sub
adc
stos
dec
rorb
imul
pop
imul
or
cmpsb
lahf
mov
jb
dec
xchg
mov
fldcw
mov
cmpsb
inc
mov
jae
lcall
jae
sub
popf
stc
push
jo,pn
inc
test
xlat
dec
es
cwtl
cwtl
jnp
jl
adc
mov
pop
jo
push
jo
xchg
jecxz
push
and
mov
test
aad
icebp
jb
add
fisttps
push
out
sub
andl
jle
push
mov
mov
fsubs
call
or
imul
push
sbb
xor
xchg
add
paddusw
loope
cmp
in
sub
sbb
xor
ds
jne
stos
pop
fisttpll
sahf
jae
pop
cwtl
jb
push
jne
pop
mov
xor
pushw
mov
roll
sbb
call
addr16
lcall
jge
xchg
jae
mov
sub
push
or
lds
cmp
lds
sub
roll
pop
insb
addr16
push
mov
icebp
jo
push
pop
adc
pop
js
mov
cs
icebp
adc
add
inc
inc
leave
call
pop
jno
fidivrs
cmpsb
mov
push
mov
sbb
add
adc
fwait
stos
daa
je
inc
in
hlt
add
fimull
jg
shrl
push
add
sub
mov
shlb
pop
pop
iret
dec
mov
es
and
icebp
or
scas
out
jge
cltd
pop
add
jbe
mov
and
stc
shrb
std
jp
sub
addr16
adc
mov
pop
xor
add
jo
cmp
es
xor
je
mov
add
rolb
jne
sub
stos
addr16
jae
push
pop
mov
add
addr16
in
xchg
mov
push
sbb
xchg
lock
push
mov
add
loopne
inc
call
jge
and
jl
sbb
and
push
je
aam
xchg
aas
dec
sub
push
sub
or
and
sbb
pop
pop
cmp
sub
inc
sub
lcall
js
addr16
lret
jns
mov
push
sbb
inc
mov
addr16
push
pusha
add
or
loopne
push
clc
xchg
loopne
push
sub
sub
or
lahf
je
call
xchg
cs
test
dec
daa
xchg
and
insl
mov
xor
cmp
sub
mov
jb
push
je
push
lcall
adc
jp
adc
adc
test
pop
xor
sbb
cmpl
sbb
sbb
jp
jnp
xchg
sub
xor
jo
add
pop
out
enter
jno
cs
push
mov
adc
popf
movb
jb
sub
sub
arpl
xlat
pop
xchg
cmpl
es
push
inc
pushf
sub
icebp
mov
or
push
cltd
sub
orb
push
insb
dec
dec
mov
mov
add
lcall
movsb
pop
jo
cltd
pop
and
in
push
jno
cmc
stos
mov
shrb
adc
out
insl
xchg
jne
inc
xor
loop
push
and
sub
inc
dec
push
sbb
push
mov
add
add
and
sub
cmp
push
push
inc
ret
add
and
xor
bound
push
es
inc
push
sub
aas
shrb
xor
addb
mov
movsl
push
push
int
jb
or
popa
pop
sbbl
xchg
mov
insb
xchg
mov
addr16
pop
stos
and
push
inc
popa
mov
gs
inc
inc
xchg
addb
or
pop
sub
xchg
cltd
fiaddl
cmpsb
outsb
jp
and
loopne
xchg
and
inc
adc
jno
adcl
test
or
int
sbb
cs
aad
push
mov
int3
sub
xor
mov
sub
in
inc
jecxz
int
xor
xchg
das
dec
pop
push
jae
imul
in
xchg
stos
enter
clc
jnp
xor
inc
lods
inc
mov
lock
mov
and
aaa
mov
xchg
imul
jb
pop
lock
leave
shl
test
mov
xor
inc
in
xchg
adc
mov
popa
xor
in
test
out
loope
jg
cld
imul
xchg
xor
push
mov
add
aaa
cmpsl
pushf
and
cmp
rcll
mov
pop
ss
cmp
pand
add
adc
jo
adc
cmc
mov
add
jb
sub
fcompl
push
dec
adc
add
aaa
loope
jae
inc
cmpsb
adcb
mov
pop
push
mov
mov
ljmp
pop
jae
push
dec
and
inc
cmpsb
xchg
xchg
add
gs
mov
cwtl
popa
xor
jl
push
xor
jp
lret
shll
mov
fistpll
inc
jae
add
cmp
roll
sub
mov
jnp
aam
scas
enter
inc
aad
xchg
jnp
cs
cltd
sarl
std
jb
pop
addl
pusha
mov
jae
add
pop
xchg
pop
jo
mov
or
lock
add
lock
inc
out
movsb
jg
add
add
xchg
add
add
test
push
mov
pop
inc
mov
loop
and
push
call
pop
mov
shlb
add
mov
test
push
fucomip
cmp
jae
out
fwait
roll
push
sbb
and
and
adc
xchg
add
mov
lret
inc
out
adc
and
daa
or
xchg
xor
sub
shrb
cmp
inc
xchg
mov
rcrl
inc
sbb
gs
jo
cmp
cmpsb
cmp
sbb
testb
cmp
add
sbb
icebp
push
xchg
jo
sbb
cmp
shl
sbb
out
stos
add
sub
inc
push
or
nop
xor
jge
xchg
pop
cltd
orb
push
jae
rcrl
add
pushf
mov
stos
rcrb
sbb
or
jge
mov
add
scas
cmpsb
pop
scas
adc
dec
mov
add
ds
pop
daa
inc
into
addl
lock
icebp
adc
push
sbb
inc
into
pop
sub
mov
jle
adc
xor
jnp
adc
pop
jecxz
push
loope
pushf
sarl
inc
dec
scas
add
cmp
xchg
rcll
loopne
jae
push
dec
in
jb
push
aam
dec
test
fimull
dec
mov
jo
cmpsb
adc
pop
leave
jae
inc
mov
add
out
push
scas
and
repnz
ret
or
jecxz
adc
sub
cmp
leave
lods
xor
lds
loop
mov
jb
cld
adc
mov
add
xchg
mov
stos
test
or
cltd
adc
add
pop
sbb
xchg
add
xchg
mov
jecxz
scas
enter
scas
loope
sub
cltd
movsb
test
xchg
testb
cltd
test
sar
aad
and
push
loop
adc
nop
ret
push
pop
sbb
cmp
mov
and
xchg
or
sbb
cmp
mov
aam
jp
sbb
pop
mov
loopne
mov
jp
sub
cmp
ud0
outsl
cs
inc
sub
daa
add
or
add
sub
pop
add
sub
push
and
inc
mov
ret
mov
push
lods
pop
add
xchg
sbb
fcomps
bnd
andb
push
push
in
push
add
inc
sbb
xor
mov
push
fld
inc
hlt
jg
jg
cmpb
sbb
outsb
sub
add
or
dec
shlb
jne
jb
and
test
sub
pop
sub
je
data16
sub
or
cs
inc
sbbb
imul
outsl
add
fsubrp
add
orb
lret
rclb
mov
popf
mov
loope
dec
jnp
mov
fimuls
mov
pop
mov
mov
add
std
xchg
or
xor
pop
jae
lods
pslld
loope
js
daa
sahf
ljmp
addr16
jb
repz
mov
jnp
aam
int
push
lcall
scas
xor
lcall
jae
or
add
test
shll
xchg
and
sub
sub
rolb
xchg
ljmp
inc
and
imul
add
xchg
inc
sbb
iret
leave
sbb
mov
loopne
aam
jo
or
mov
adc
negl
lcall
loopne
into
aam
leave
pusha
or
mov
jp
xor
adc
adc
dec
in
mov
fadds
roll
add
dec
inc
xchg
pop
inc
cmp
mov
cmpsb
dec
add
mov
jl
call
and
pop
and
xor
mov
andb
cmc
test
mov
decb
push
inc
hlt
or
cmc
jae
test
popf
fwait
cmp
push
sbb
inc
pop
mov
dec
inc
int
cmpsb
sbb
sub
ret
scas
jbe
or
push
mov
rcrb
insl
xchg
xor
or
call
jo
sub
xchg
shrb
sub
daa
inc
cmp
add
ret
sbb
adc
add
and
movsb
jae
int3
decb
arpl
rorb
or
add
and
and
je
in
movsb
and
popf
mov
jbe
fmul
sbb
or
pusha
mov
icebp
aas
test
orb
das
jb
enter
cmp
fisubs
sbb
test
mov
push
add
mov
inc
push
or
xchg
add
push
cmp
xor
push
data16
fsubrs
pop
adc
pop
mov
subb
data16
cwtl
cmp
in
cmp
and
add
cs
push
leave
adc
or
je
add
adc
jmp
jnp
test
xor
es
in
sub
push
cmp
sbb
lock
out
roll
xchg
cmpsb
sbb
push
lds
or
sbb
ror
inc
repz
pop
popf
hlt
dec
xor
test
sub
nop
andl
pop
add
pushf
cmpsl
iret
push
inc
scas
push
add
sbb
inc
mov
sub
xor
or
sub
cmp
movsb
pop
fisubrs
ret
test
mov
ss
mov
dec
pop
xchg
mov
sub
cmp
rclb
gs
xchg
inc
scas
mov
xchg
or
xor
pop
outsb
sbb
cmp
inc
xchg
stos
xor
inc
cltd
das
repnz
mov
pop
jl
repnz
inc
out
push
push
rcl
mov
xor
inc
in
inc
xchg
cs
enter
sub
inc
mov
push
mov
push
scas
mov
mov
test
mov
andl
jle
dec
rolb
ds
and
jnp
test
jp
ja
push
sbb
out
shrl
push
stos
aam
and
js
sbb
bound
out
mov
pop
push
push
jbe
fsubrl
push
xor
fstpt
sbb
push
push
flds
cmp
mov
test
rolb
pop
pop
cmp
test
xor
pop
lcall
inc
sub
xchg
imul
loope
roll
mov
xor
pop
sbb
leave
inc
add
cmpsb
pop
test
filds
enter
adc
sbb
sbb
stos
idiv
add
in
rcr
push
andb
lret
sbb
mov
cmpsl
xor
int
mov
add
mov
mov
jge
out
push
adc
stc
sub
push
push
xor
jg
loope
push
cmpsb
sub
int
sbb
cs
adc
lret
cmp
adc
jo
jnp
push
mov
or
cmp
ret
mov
fdivrs
into
push
ret
inc
mov
push
pop
in
add
adc
and
inc
imul
mov
jo
leave
mov
push
jge
or
into
cmp
rolb
scas
stos
jae
or
ficomps
dec
push
sub
jne
fs
xlat
pop
cmpsl
pop
cld
adc
sbb
jbe
xchg
xor
ds
addr16
push
push
push
add
stos
xchg
push
in
les
xchg
popf
lods
daa
mov
sub
xchg
xor
shrl
cwtl
inc
jp
sub
scas
or
in
je
push
sub
push
push
push
dec
in
stos
movsl
or
clc
push
jae
xor
adc
fcompl
and
xchg
inc
or
test
push
adc
add
sub
cmpl
mov
loope
xor
xor
dec
stos
push
es
out
dec
jp
adc
lcall
adc
mov
insb
adc
lea
push
movl
dec
mov
mov
ret
sbb
cld
mov
or
pop
sbb
jne
push
add
mov
pop
imul
push
int
subl
push
test
adc
daa
out
cmp
xor
shll
dec
mov
cmp
imul
cmc
test
andb
sub
je
jmp
adc
pop
sub
mov
cli
daa
push
in
loopne
das
push
test
xchg
in
jg
and
mov
mov
movsl
call
inc
adc
fiadds
mov
orb
add
push
add
cmpsl
in
push
push
mov
cmp
mov
adc
dec
add
jle
inc
jae
jne
add
or
adc
daa
ss
or
call
scas
jl
lock
push
ss
lret
adc
add
dec
sub
inc
pusha
out
shl
aas
subb
sbb
jecxz
dec
scas
test
or
xlat
test
jae
scas
inc
add
jo
subl
xchg
mov
push
mov
push
jno
adcb
pop
cmp
iret
ret
cmp
mov
sbb
lock
aam
aad
out
data16
pop
sbb
or
test
leave
ret
lods
data16
addb
shl
and
sbb
xor
jns
imul
test
jge
push
add
punpckldq
cs
cltd
jg
mov
or
add
inc
data16
dec
jp
or
pusha
sbbb
push
stos
jl
aam
mov
lock
cmpsl
push
adc
cs
add
pop
gs
jg
pop
mov
xchg
sub
adc
mov
push
loopne
sub
dec
es
es
cmc
pusha
in
push
sbb
popa
enter
push
hlt
mov
pop
pusha
adc
sub
or
repnz
pop
sbb
outsl
jmp
xchg
xchg
xchg
mov
sahf
cmc
dec
xchg
stos
push
pop
jb
dec
inc
mov
push
loop
mov
jge
cmovae
lds
inc
mov
dec
pop
aam
int
outsb
jno
and
add
xor
inc
roll
pop
fwait
add
cs
mov
jns
lods
adc
cmp
test
shll
sub
xchg
iret
outsb
orl
and
xor
xor
cmp
ret
cwtl
push
pop
mov
cmp
test
jae
addb
loopne
or
mov
mov
sub
mov
ret
scas
sbb
add
stos
cmp
movsb
push
mov
mov
push
out
jo,pn
dec
addr16
daa
test
and
je
push
nop
ficoms
and
clc
out
add
mov
movsb
jo
push
jb
movl
jns
pop
mov
cmp
sbb
cmpsb
or
sub
add
mov
pop
cmp
or
mov
dec
xor
xchg
cmp
adc
daa
iret
xor
test
repz
inc
xchg
mov
out
or
or
sub
jmp
add
sbb
enter
push
xor
mov
and
into
rorb
pop
cli
subb
cli
or
cmp
int
add
push
cmp
mov
push
cmp
push
xor
mov
adc
mov
in
add
int3
clc
push
mov
decl
sbb
inc
add
lcall
cmpsb
push
rcl
scas
clc
mov
dec
mov
sbb
inc
test
sub
dec
ds
add
hlt
cmpsb
daa
cmp
mov
pop
ret
mov
cmp
or
add
outsl
pop
sbb
out
jno
adc
sbb
loopne
add
daa
cmp
jne
cs
adc
lret
or
fdivs
addr16
mov
jo
or
dec
inc
repz
xchg
or
gs
lea
cmp
or
leave
xor
loopne
sbb
mov
icebp
pop
fbstp
sub
sbb
pop
pop
ljmp
movsb
adc
and
bound
push
bound
cmpb
adc
push
or
icebp
addr16
adcb
enter
xchg
mov
pop
das
jge
sbb
mov
or
mov
cmp
cmp
push
dec
inc
inc
inc
cwtl
popa
test
adc
out
adc
inc
xchg
repnz
xor
loope
cmpsl
cltd
sbb
add
int3
mov
or
out
push
xor
xchg
sbb
popf
sub
sub
sub
or
sbb
rolb
xor
adc
in
xchg
mov
shl
mov
adc
jno
mov
test
sbb
pop
sub
push
incl
adc
add
xchg
out
xor
cmp
jns
mov
jae
mov
xor
pop
hlt
add
sbb
sbb
inc
push
push
es
jae
subb
xor
jo
enter
mov
add
push
cmp
inc
jae
inc
xor
adc
loope
inc
push
lahf
imul
jmp
ljmp
adc
ljmp
and
xchg
in
in
push
add
mov
rcpps
in
adc
pusha
push
or
loopne
rolb
shrl
jb
cmp
fistl
fs
iret
xchg
mov
sti
inc
cwtl
cmp
mov
or
lcall
and
or
push
push
ja
int
dec
xor
int
call
mov
lret
xor
sub
int3
jo
jp
or
xchg
cld
insb
dec
add
imul
popa
xor
cmpsl
cmp
loope
or
gs
xchg
cld
sbb
inc
mov
or
xchg
adc
sbb
ret
or
sub
std
iret
xor
sub
push
cltd
pop
push
pop
mov
ljmp
outsl
test
in
dec
add
or
push
adc
jge
add
jg
lret
add
in
adc
enter
sub
add
decl
cmp
stc
dec
add
pop
mov
fwait
sbb
repz
add
cmpsb
adc
roll
add
cltd
inc
cs
into
sbb
jne
cmpb
pop
or
or
inc
and
dec
rclb
call
sub
es
mov
test
aam
sbb
imul
push
fnstenv
icebp
jg
push
jae
repz
pusha
push
nop
addl
lcall
test
mov
or
jae
mov
in
gs
xor
icebp
ljmp
repnz
cld
ret
inc
adc
cmp
xchg
stos
ret
test
and
jmp
inc
jae
jbe
sysenter
xor
push
inc
movsl
cwtl
jo
xor
xor
xorb
imul
dec
adc
arpl
lcall
sbb
dec
lods
shl
call
or
xor
sbb
cmc
adcb
mov
xchg
sahf
incl
add
pop
mov
fincstp
or
xor
dec
dec
rcrl
test
cmp
add
mov
mov
enter
outsb
mov
dec
ret
stc
pop
pushf
call
repz
jae
stos
xor
lcall
push
mov
mov
out
popa
mov
int
sub
and
in
inc
sub
pop
sahf
stos
pop
add
in
test
pop
sbb
mov
insb
mov
leave
xchg
add
dec
mov
push
pop
xor
loop
add
jnp
or
mov
pop
sarb
adcb
shl
cmp
sub
outsl
push
push
xor
out
push
icebp
test
sbb
sahf
movsl
sbb
inc
xor
call
jae
sub
add
loope
adc
or
jmp
cmp
mov
and
test
jmp
sbb
ret
cs
mov
and
test
xor
imul
jge
jmp
stos
pop
xchg
jmp
push
imull
loopne
add
xor
scas
es
subl
ljmp
pop
scas
xchg
imul
sub
add
pop
xchg
aaa
cmpl
jge
cmp
fisttpll
test
adc
mov
mov
mov
xor
bound
mov
daa
iret
jecxz
stos
mov
cmpsl
test
mov
and
xor
xchg
or
xor
fildl
adc
xor
mov
aas
mov
lea
add
add
lock
lds
loope
adcl
dec
adcb
xor
and
hlt
xchg
adc
pushf
mov
adc
xor
shrl
pop
xchg
rol
clc
jmp
cwtl
or
inc
inc
inc
pop
mov
push
mov
mov
inc
sub
mov
rol
rolb
sub
in
in
push
aad
inc
aad
xor
jo
shll
jmp
add
nop
mov
jb
xchg
inc
sub
js
insl
shrb
scas
popf
sbb
or
mov
imul
push
jnp
and
loope
mov
loopne
adc
nop
mov
cmpsb
cmpsb
add
out
adc
imul
add
cmp
cmp
pop
cld
sub
adc
push
mov
nop
add
jp
jo
and
jge
xor
jo
pop
rcl
add
jo
pusha
sti
test
push
icebp
sbb
xchg
or
inc
popf
and
xchg
sbb
pop
xor
jp
inc
inc
push
xor
xor
in
add
add
pop
push
mov
and
mov
pop
les
jge
xchg
lods
add
clc
and
and
push
mov
xor
ret
xchg
xorl
mov
adc
adc
loopne
jb
dec
das
call
pop
dec
xor
inc
xchg
mov
mov
jmp
out
sub
movsbl
lods
xor
std
test
xchg
push
and
das
stos
dec
in
push
push
shll
int
shrb
sub
push
mov
sbb
cmp
enter
mov
ljmp
pushf
rcll
and
cwtl
dec
pop
pusha
adc
fstl
pop
pusha
adc
mov
xor
jae
xor
out
rcrl
or
push
cmp
and
lcall
mov
cwtl
jmp
in
scas
clc
fidivrl
jmp
hlt
and
xchg
xor
fistpll
push
lcall
pop
adc
add
push
xor
shrl
aas
push
in
pop
aad
push
sub
clc
pop
call
cmp
imul
js
add
je
jb
push
sqrtps
push
stos
or
aas
xor
pop
int
pop
add
push
mov
addb
sub
ljmp
icebp
dec
sbb
pop
sbb
sti
aad
ret
xor
xchg
es
insl
add
adc
fistps
addb
adc
pop
scas
mov
xchg
sub
int3
mov
sbb
dec
mov
pop
testl
mov
and
mov
cwtl
add
insb
adcb
ret
bound
mov
add
xlat
xor
mov
sub
or
push
xor
and
out
fidivl
inc
imul
lcall
and
movsb
in
les
and
pop
popa
jnp
adc
sbbl
sub
scas
fisubl
or
mov
cld
adc
je
cmp
jp
xchg
add
rcrl
or
sub
push
or
dec
jnp
pop
aam
sbb
ret
imulb
add
cld
lock
adc
aad
adcl
and
add
nop
and
dec
and
jo
leave
mov
cmp
std
jp
enter
cli
scas
mov
les
add
inc
push
mov
lods
mov
adc
xchg
jmp
xor
ljmp
adc
xor
ja
das
inc
jnp
enter
mov
inc
mov
pushf
mov
inc
data16
in
and
push
cmp
js
inc
push
inc
jp
sbb
add
lods
das
dec
pop
lock
mov
push
add
jb
xchg
stc
mov
lret
mov
jae
pop
add
test
xchg
inc
pushf
adc
inc
nop
xorb
cmp
into
inc
or
cmpsl
aas
add
andb
sbb
or
xor
jb
fidivs
push
xlat
clc
sbb
pusha
sub
sbb
int
add
jbe
pop
ljmp
adc
sub
inc
cmpsb
pop
push
add
test
ret
outsb
loope
shlb
adc
add
mov
outsb
sub
sub
shrb
cld
xor
lret
popf
add
pop
mov
testl
rolb
add
js
xlat
push
push
jae
pushf
fdivl
add
jno
add
je
adc
adc
popf
shlb
test
int
loope
test
repz
or
jo
push
add
xchg
leave
or
stos
cmp
fadds
jne
sbb
aaa
jmp
sub
mov
lods
jbe
push
jo
xchg
cmp
xor
xchg
in
push
mov
nop
add
pop
stos
sbb
jo
insb
push
mov
mov
adc
scas
jo
ret
cmp
stos
cmp
pop
inc
xorb
push
out
mov
jge
das
adc
ja
shll
lods
adc
pusha
mov
push
int3
add
jb
sbb
pop
cmp
or
add
in
adc
cmp
les
push
push
jae
imul
jo
pushf
sub
scas
lcall
pusha
push
push
jo
inc
jecxz
clc
and
push
pop
xchg
jae
stos
mov
lds
fisubl
scas
pushw
sub
gs
add
add
out
or
xchg
xor
cmp
xchg
xchg
push
cltd
in
cmpsb
or
mov
pop
loope
sub
imul
xor
lock
mov
add
push
add
mov
or
jge
test
push
pop
mov
jae
or
jg
insl
pop
push
sub
test
or
or
push
sub
cmp
rolb
pop
xchg
int
rorb
mov
push
add
mov
lret
add
jge
xor
pop
pop
sub
mov
sbb
mov
jl
enter
pmaxsw
mov
subb
jb
push
pop
cmpsl
sahf
push
adc
xlat
icebp
mov
jnp
mov
mov
mov
cltd
test
xor
sarl
mov
add
pop
fsubs
adc
fsubs
dec
mov
mov
sti
add
loopne
pop
inc
push
lock
pop
add
test
jnp
cmp
rcll
xchg
leave
gs
jno
push
push
push
rclb
cmp
xchg
andl
push
jo
cs
sub
jg
faddl
push
lea
adc
adc
cmp
sub
pop
mov
mov
inc
leave
aam
jae
cmp
stos
cmp
inc
sub
mov
cmp
call
push
and
pushf
leave
jno
in
add
dec
push
or
sub
lods
pop
cmpsb
push
rcll
cmp
sub
xor
jb
int
daa
push
ret
test
pop
leave
pop
cmpsb
jb
adc
jge
addl
icebp
xchg
out
cld
xor
sub
xor
dec
ja
imul
add
push
pop
shll
push
adc
adc
iret
push
or
shrb
jae
pusha
inc
pop
push
call
cld
pusha
xor
pop
push
mov
inc
mov
or
pop
jecxz
sbb
pop
sub
aam
inc
pop
daa
mov
rolb
pop
jae
or
sub
cmpsb
adc
and
lret
lds
addr16
ss
cmp
and
xor
jae
sbb
jmp
loope
stos
mov
and
shll
mov
add
arpl
outsl
es
es
cwtl
sbb
lcall
mov
enter
jge
cltd
js
test
cmp
mov
lret
pop
subl
add
or
and
imulb
jo
nop
add
add
jo
mov
cltd
xor
scas
inc
pop
adc
inc
jae
cmp
arpl
ljmp
pop
adc
adc
adc
adc
shll
jo
imul
cwtl
adc
std
jo
add
fiaddl
push
addr16
pop
push
ljmp
add
pop
dec
add
test
xchg
stos
xor
xchg
in
ret
mov
cld
adc
push
add
loopne
add
lods
insl
out
test
into
add
sub
mov
sub
push
outsb
mov
xor
das
call
sub
sub
sbb
pop
cltd
jns
ret
mov
or
add
adc
stos
ljmp
outsl
faddl
fcmovne
mov
outsb
cwtl
rorb
inc
push
xor
nop
sbb
sbb
lret
push
out
cmp
or
pop
mov
cltd
dec
cli
mov
and
addb
dec
push
xchg
out
in
inc
mov
pop
test
jmp
push
fs
mov
jo
ret
push
es
ror
inc
int
adc
add
mov
rorb
xor
push
xor
xor
jp
out
test
inc
roll
jge
mov
fnstcw
shll
andps
cmp
enter
aaa
add
jno
xor
stos
inc
mov
je
ret
push
mov
jo
push
sbb
out
add
and
xlat
lcall
pop
or
shrl
loope
xchg
out
sbb
xchg
imul
jae
mov
lret
in
pop
int
sub
mov
xchg
or
xor
sub
dec
mov
lret
movl
add
cmp
inc
xor
pushf
inc
mov
imul
lods
sub
mov
sbb
mov
cmpsl
push
jae
scas
and
add
in
clc
or
js
pop
inc
mov
mov
and
xlat
lea
cmp
xor
fsubrp
ss
aam
cmp
insb
daa
dec
adc
xchg
mov
add
lods
mov
adc
pusha
and
add
mov
or
nop
in
stos
mov
stos
cmp
lret
and
lcall
sub
or
mov
pop
jmp
gs
cltd
lods
xchg
sbb
js
cltd
push
or
lret
inc
sbb
addr16
aas
jne
sbb
inc
adc
imul
cmp
outsb
pop
add
dec
ror
xchg
imul
addr16
mov
sub
mov
xlat
ljmp
lcall
pop
add
shlb
subb
mov
fmull
aas
pop
push
push
push
out
jge
out
scas
and
loope
push
test
sbbl
int
mov
test
push
sub
sbb
or
inc
mov
adc
cmp
or
or
push
push
test
repz
push
push
jne
xchg
inc
ret
sbb
or
enter
sbb
jmp
jb,pn
mov
lea
mov
inc
jmp
js
pushf
add
sub
movsb
mov
inc
int
add
push
sbb
mov
mov
mov
jne
js
pusha
jo
xor
push
cs
fldl
push
das
cmpsl
adc
fs
js
jb
or
push
inc
xor
push
add
jb
daa
or
jae
mov
in
mov
lcall
mov
inc
mov
cmp
mov
pop
push
cmp
push
loopne
orl
arpl
dec
sbb
mov
push
gs
inc
xor
xchg
jle
sub
add
xchg
mov
and
stos
add
loopne
stos
hlt
in
cs
xchg
add
andl
mov
dec
test
es
pop
imul
inc
jns
not
sub
sbb
dec
cmp
das
pop
or
push
push
inc
sbb
push
and
loope
add
sbb
inc
int
add
adc
fs
or
pop
cmpsb
push
lret
mov
add
sbb
mov
pop
pop
imul
lahf
adc
dec
cmc
inc
mov
mov
in
mov
push
scas
ret
ret
add
rcrb
dec
xor
or
xor
push
adc
popa
test
push
and
shll
insl
push
jae
jbe
inc
dec
popa
lret
ret
jo
scas
pop
mov
jne
call
cmp
add
pop
xchg
call
repz
cmp
xchg
clc
outsl
out
mov
xchg
mov
mov
push
test
loope
and
xlat
cmc
outsl
outsb
inc
sarb
sbb
or
jne
subb
adc
mov
adc
mov
cmp
in
addl
pop
mov
js
loop
cmpb
add
xchg
mov
fsubrp
jmp
adc
sub
dec
add
add
in
jg
sbb
jge
std
pop
shr
scas
loope
and
cmpb
lods
ljmp
loop
xchg
in
jb
mov
scas
lret
push
xor
or
mov
lods
sub
add
sub
movsb
mov
loope
ret
pop
adc
shll
pop
bound
outsb
jne
mov
shrl
cmp
mov
rolb
pop
jg
jo
dec
lret
int3
jne
aam
add
sahf
add
dec
int
sub
clc
and
enter
mov
xor
xchg
adc
pop
xchg
jecxz
lock
mov
pushf
jb
jo
or
add
push
sub
fstl
lret
call
mov
xchg
rol
in
add
inc
inc
xor
pop
andb
sahf
imul
arpl
xchg
add
nop
mov
mov
in
xor
stos
mov
repnz
push
and
iret
add
test
inc
mov
or
push
mov
jo
rolb
inc
ret
add
in
ret
cwtl
pop
push
nop
leave
inc
and
mov
stos
cmpsl
push
jae
adc
stos
ret
rclb
or
cmp
sub
ljmp
pushf
push
jo
push
xchg
loop
inc
xlat
sub
scas
mov
push
xor
fldt
inc
es
or
mov
orb
daa
lcall
shlb
push
dec
push
data16
push
xor
sub
fs
pop
out
pop
scas
add
xorb
cmp
mov
fiaddl
leave
inc
test
mov
rorl
jo
cmp
and
dec
add
cs
mov
dec
faddl
mov
dec
jge
jo
ljmp
mov
hlt
cmp
push
repz
lods
jo
add
mov
fists
es
jae
inc
push
xchg
mov
call
mov
pop
mov
push
inc
or
fadds
adc
lret
dec
iret
outsl
in
xchg
sub
loopne
mov
notb
jb
scas
adc
les
enter
push
jb
inc
or
or
mov
sbb
mov
fcmovb
les
inc
dec
adc
popf
add
stos
push
sbb
jbe
dec
popa
mov
pop
inc
pop
loopne
dec
adc
test
adc
inc
int
jae
es
xor
push
cmp
in
sahf
xchg
and
cmpsl
icebp
jns
add
or
dec
jl
and
dec
adc
mov
jl
adc
fbld
lock
rorl
mov
stos
dec
int
in
incl
mov
push
in
test
push
mov
es
es
mov
fdivp
aam
sbb
cmp
sub
enter
jae
js
lahf
cmpsl
fistps
in
adc
push
adc
ret
xchg
mov
push
mov
inc
pop
fdivrs
in
bound
aas
aam
inc
scas
pop
outsb
loop
sub
loope
jb
sub
test
popa
sub
inc
cmpsl
das
cli
push
push
add
hlt
ret
jb
mov
push
cwtl
pushf
or
pop
mov
sbb
stos
add
jno
mov
xor
orb
add
ret
sbb
lret
push
mov
movsb
push
lods
in
jle
pop
push
cmpl
push
sbb
cmpps
aam
pop
in
daa
sbb
test
xlat
or
sub
aas
mov
test
push
rorb
xorl
cmpsb
push
push
test
push
jbe
fadds
pop
adc
mov
or
push
fsubrl
test
test
popf
aad
sub
adc
inc
mov
dec
push
test
mov
push
dec
orl
add
cmp
mov
jmp
jae
lret
ffree
xor
sbb
jo
sub
sbb
cwtl
leave
scas
shlb
filds
push
pusha
test
test
jg
fbstp
xchg
data16
pop
mov
mov
mov
iret
mov
xlat
or
test
or
outsl
add
repz
jp
or
cmpsl
sub
stos
jne
dec
aas
idivb
adc
inc
add
das
fwait
into
fsubr
addl
xchg
cmp
cmp
scas
std
dec
inc
adc
in
std
push
and
imul
and
neg
or
jge
mov
popf
insb
call
xor
or
jnp
ja
aad
push
sbb
add
or
les
mov
or
aad
faddl
push
inc
cmp
jmp
cmpl
jno
std
cmp
mov
pop
shrb
fsubrl
loope
sbb
in
mov
pop
mov
mov
dec
mov
dec
divl
cli
icebp
dec
push
test
xchg
xor
out
mov
mov
jns
inc
inc
mov
xchg
adc
sub
stos
mov
lods
pop
and
cmp
xlat
js
mov
jnp
jae
mov
jmp
enter
in
mov
ret
pop
add
idivb
lods
out
les
add
inc
lock
mov
cmp
jbe
movsl
fstpt
push
jbe
in
bound
idiv
lret
lods
cmp
enter
pop
or
ja
mov
mov
add
fidivrl
int
out
and
cmp
push
imul
jno
call
push
xor
bound
mov
inc
jl
jecxz
and
sub
aaa
add
fists
and
mul
mov
lret
js
xchg
das
in
mov
in
mov
push
ja
dec
cmpsb
and
push
cmpsb
std
xchg
int
ret
pop
and
repnz
into
jge
cmpsb
lret
xor
addl
mov
xchg
decl
xchg
push
mulb
into
std
idiv
push
cmp
xor
mov
dec
jge
andl
lds
int
jae
ja
lods
call
dec
dec
sbb
ret
std
jbe
jecxz
ds
insl
add
sub
cltd
cs
mov
out
movsl
ljmp
sahf
and
ret
cmpl
jge
push
ljmp
sbb
add
push
lock
int3
pushl
aas
add
adc
ret
jnp
mov
out
popf
cld
xlat
jne
out
gs
jmp
cmovl
pop
scas
adc
aas
loope
loope
and
sub
call
icebp
andb
cmpsb
xchg
mov
call
ja
loopne
sub
ljmp
or
pop
stc
push
stos
aas
xchg
into
cmp
in
cmp
jl
movsb
dec
push
xchg
pop
push
or
fxch
aaa
mov
mov
insb
iret
sbb
and
xchg
ja
mov
push
lret
xlat
out
mov
push
and
iret
std
iret
mov
jge
pop
push
jns
aad
mov
lahf
sti
pushf
add
pop
loopne
xor
ret
adc
mov
mov
xchg
ss
lods
arpl
call
fwait
and
jo
dec
stos
and
mov
inc
clc
int
es
fdivl
add
call
into
lock
mov
outsl
dec
jns
cltd
xor
add
inc
add
or
fbstp
dec
cwtl
rcr
leave
push
add
push
pop
loopne
mov
aas
and
sbb
lock
ss
dec
clc
inc
shrb
push
bound
sbbl
stos
mov
mov
in
mov
js
rorb
lahf
sub
sub
sbb
sub
pop
lods
mov
or
out
jg
jmp
mov
xchg
jno
inc
sbb
or
std
fildll
push
inc
inc
push
sub
call
xchg
outsl
xor
subl
rolb
and
xlat
jmp
dec
xor
in
bnd
inc
xor
push
xchg
sub
inc
mov
push
xor
inc
mov
sbb
std
bound
aad
jbe
mov
jecxz
div
pop
sbb
mov
pop
xor
dec
cmpsb
lcall
rorl
mov
jne
xor
or
decl
xor
adc
xor
sbb
jae
jle
fwait
arpl
xchg
sbb
iret
jge
jle
fwait
les
arpl
in
adcl
jb
mov
and
fdivr
loope
dec
popa
mov
add
sub
mov
xchg
aas
jl
out
outsl
shll
cmp
and
movsl
push
out
lea
fidivl
xchg
fucomp
iret
clc
je
dec
fiaddl
jo
add
rcrl
pop
loop
xchg
test
mov
sti
push
div
addr16
arpl
mov
outsl
fdiv
jmp
icebp
sub
add
sub
fldt
out
stos
hlt
je
in
inc
addr16
adc
cmp
arpl
add
stc
cmp
push
sti
out
imul
daa
ret
out
mov
inc
loope
fld
std
pop
push
jmp
movsl
cmp
out
mov
sub
or
dec
dec
sub
aaa
das
fdivl
add
stc
push
pop
ljmp
jns
push
add
pop
aad
mov
push
out
mov
ror
andb
push
pop
out
mov
lahf
pop
in
and
inc
ror
pop
sti
and
out
and
ja
sub
push
push
xchg
mov
in
das
idivb
subl
mov
jp
mov
mov
call
jg
leave
dec
sub
sbb
addb
cmpsl
shrb
adcb
jae
dec
jb
arpl
cli
jmp
hlt
jg
cmp
cwtl
pop
in
lret
test
pop
jno
sbb
out
push
pushl
adc
out
in
xchg
rorl
pop
mov
aas
fiadds
push
xor
dec
inc
sahf
daa
test
jnp
loopne
ja
xor
mov
jg
jle
sbb
dec
add
sarl
iret
add
cs
cmp
out
fdivr
xchg
inc
sub
clc
jmp
std
sub
orb
xchg
and
fninit
mov
pushf
notb
movzbl
shl
sub
iret
std
fdivrs
les
cmp
mov
mov
xlat
push
loop
in
icebp
fstpt
mov
mov
jle
clc
mov
sub
adc
mov
maskmovq
aaa
mov
pop
jmp
cld
jo
mov
add
ljmp
call
loop
rcpps
fs
pop
in
push
aas
ret
fcmovnb
lods
adc
test
jb
pop
jmp
sub
les
les
loopne
sti
outsb
mov
fisttpl
xor
pushf
mov
fnsave
sbb
push
jnp
adc
imul
cmp
sbb
in
sbb
push
loop
add
lods
aam
jl
in
pop
cmp
incl
cmpsb
cmc
push
inc
jecxz
xor
lcall
hlt
fildl
inc
lods
popa
pushf
jbe
or
ret
push
aaa
xchg
jns
cli
lock
or
pushf
fsubl
pushf
btr
cmpsl
dec
cld
jo
mov
mov
shll
mov
incl
roll
imul
idiv
das
adc
cmp
push
xchg
add
jge
xchg
movsl
test
jne
add
pop
xchg
cmp
mov
aaa
add
mov
push
lea
in
sbb
mov
out
or
test
inc
mov
dec
jmp
std
ret
mov
xor
cld
aad
xchg
mov
pop
cmp
adc
std
and
pop
in
mov
jo
sub
mov
dec
inc
jo
outsb
push
jne
and
jmp
adc
xchg
ss
cmpsl
jge
pop
hlt
push
adc
sub
push
dec
js
out
fdivrl
pushf
or
sbbb
mov
fld
cli
into
mov
sbb
rorl
out
roll
outsl
mov
dec
hlt
inc
jb
add
insb
call
mov
push
add
mov
sbb
gs
and
sub
push
and
sbb
loope
and
mov
incl
lcall
arpl
enter
cmc
daa
mov
popa
or
jg
andl
xchg
jnp
or
cmp
rcll
pop
jle
sbb
imul
push
movsb
movsb
subb
sti
push
mov
inc
addb
in
aam
jns
out
std
push
cmp
out
popa
push
dec
pushf
inc
sbb
test
mov
pop
xchg
movsb
cmp
pop
shrl
fsubrl
js
push
test
aas
mov
jo
es
xchg
mov
lock
adc
scas
pop
jl
mov
js
int3
mov
mov
stc
push
popf
sbb
das
or
and
push
jge
add
idiv
in
push
sbb
add
cli
insl
adc
lds
jb
inc
in
pop
lock
jecxz
push
in
sahf
lods
fsubs
cmp
les
pop
mov
outsl
jae
inc
sti
pop
leave
data16
scas
imul
pop
mov
pop
mov
pop
mov
mov
popf
sti
dec
dec
xchg
mov
out
pop
xchg
iret
test
pop
and
pushl
in
push
xchg
cmc
xor
jg
pop
sahf
sbb
lret
shl
mov
out
lock
rcll
dec
cmp
aas
bound
pop
incb
jns
bound
loope
xor
lock
and
roll
cmp
fdivs
mov
shrb
xchg
outsb
idiv
push
pop
popa
fadd
dec
mov
mov
mov
ss
push
xor
pushf
fadds
sub
stc
and
push
ja
pop
pusha
dec
push
stos
loopne
outsl
iret
lods
jbe
sub
loope
mov
mov
add
cmp
lret
ret
mov
or
mov
cmpsb
mov
cld
mov
loope
mov
mov
xor
xlat
add
int
or
mov
lock
jmp
cwtl
out
shlb
fistpll
sahf
popa
out
push
add
fsubrp
lcall
int3
into
ljmp
stos
lcall
aad
movsb
sbb
vdivss
dec
jne
xchg
call
jge
notl
sub
sub
cmp
mov
mov
popf
popa
or
mov
mov
insl
dec
xchg
jmp
std
ret
mov
push
test
inc
or
inc
sti
idivb
sub
dec
fimull
lock
xor
mov
add
pop
out
sbb
imul
data16
xlat
insb
cmc
pop
push
jbe
adc
js
xlat
inc
jle
pop
ljmp
cmp
andl
lods
xor
cwtl
rcr
test
cmpsl
or
xor
std
das
test
inc
shl
cli
mov
incl
pop
xchg
gs
adc
fdiv
test
add
xchg
xchg
call
mov
les
pushl
stos
dec
fdivl
sub
cwtl
test
clc
mov
or
jae
cli
jno
cmp
dec
jae
adc
subl
and
ret
inc
out
mov
jle
mov
pop
insb
icebp
push
jnp
push
sahf
std
mov
shrb
adc
aas
ficoml
jmp
mov
sub
jne
ja
fidivrs
aam
cs
jg
cmp
adc
jp
test
dec
jp
nop
repz
out
push
fistpll
iret
cmp
inc
in
jns
daa
sub
push
mov
mov
push
jl
jg
idiv
mov
inc
xchg
lock
movsl
add
mov
gs
in
aas
inc
icebp
fnstcw
adc
nop
xlat
xlat
test
jmp
mov
mov
inc
mov
test
hlt
loope
lds
inc
xor
pusha
inc
jb
sub
push
mov
gs
push
int
rcl
xor
and
addr16
jo
test
push
push
pushf
inc
jg
add
sarl
icebp
arpl
testl
mov
bound
lods
call
jne
dec
jl
inc
test
mov
jg
pusha
mov
fnstsw
inc
adc
or
jb
jg
push
sbb
into
iret
fsubrs
pusha
pop
dec
outsl
push
jmp
das
push
dec
inc
cs
aas
mov
addr16
imul
adc
pop
sbb
inc
loopne
mov
sti
pop
pushf
sbb
inc
push
pop
aad
out
movl
movd
cmp
and
imull
sub
fisubs
pushf
fstl
xchg
adc
loop
add
add
mov
jb
adc
inc
xor
mov
mov
mov
mov
pop
ffreep
cmpsb
ljmp
add
pop
dec
pusha
xchg
jbe
mov
in
sahf
push
test
stc
xor
std
out
std
mul
add
stos
add
test
sub
or
popfw
outsl
outsl
test
push
adc
pop
cmp
inc
ljmp
or
psubusw
ficoml
ja
cli
xchg
mov
dec
enter
inc
ljmp
cltd
pop
pop
in
call
sbb
cli
scas
enter
in
jge
add
sbb
pop
jo
pop
test
shlb
cmp
insl
jb
lds
ds
mov
jno
sbb
out
jnp
cmp
lods
fs
sbb
scas
push
outsb
mov
fucom
mov
pushf
jge
andl
std
jb
and
test
adc
mov
pop
stos
sub
jno
mov
stc
push
adc
les
jmp
aas
nop
xor
dec
shll
int3
add
push
daa
call
les
mov
ret
imul
pop
loope
sahf
or
int3
rcr
incl
ja
enter
mov
lods
jmp
jge
inc
stos
xlat
jg
xlat
mov
xchg
nop
pop
rcll
mov
addr16
cld
xchg
or
cmp
push
int3
sti
or
dec
sub
jae
lock
cmp
clc
xor
xchg
fidivrs
adc
mov
mov
pop
cmpsl
clc
mov
fwait
mov
outsl
out
jmp
and
orb
call
lds
push
std
sbb
aas
subl
push
rclb
fistl
lods
xor
mull
push
jo
sbb
ja
push
loop
fucomp
cmp
mov
pusha
lcall
test
xchg
cmp
xchg
ja
inc
insb
xor
add
xchg
mov
outsl
pop
outsl
arpl
in
ret
cmpsb
clc
outsb
inc
fucomip
pop
mov
xor
xchg
jl
jno
inc
movsb
xor
incl
jbe
cmp
ljmp
sahf
jp
mov
add
clc
cld
xchg
adc
jno
lahf
fmull
scas
mov
push
push
push
clc
sub
inc
sub
cltd
nop
dec
or
aam
inc
test
sub
dec
jecxz
lock
jp
inc
lds
xchg
mov
cli
loop
and
cmp
mov
or
lock
jmp
nop
loop
sbb
add
push
inc
jmp
sar
divb
xchg
repz
fwait
adc
imul
sti
fadds
xlat
pop
shrl
inc
mov
pop
push
and
mov
dec
mov
mov
dec
mov
cmpsb
xor
dec
lret
shl
das
mov
pop
cmp
ljmp
push
lret
insb
stc
lret
icebp
sbb
ss
pushf
mov
cld
push
and
enter
xchg
cmp
out
push
out
mov
dec
hlt
rolb
dec
xlat
xor
std
out
lock
iret
sub
out
and
jmp
jno
aad
and
and
push
out
adc
aas
int
xchg
adc
loop
sbb
mov
sub
inc
fcomip
jmp
jne
aaa
dec
lcall
push
jns
dec
xchg
jmp
push
ljmp
popa
out
mov
jb
lcall
and
jp
mov
jg
jmp
sub
push
filds
jo
in
pop
call
les
lods
inc
lcall
imulb
lds
jne
mov
adc
decl
or
lret
scas
push
ljmp
decl
outsb
pop
ret
hlt
out
jge
add
sub
push
mov
daa
pop
cs
xchg
pop
mov
loop
and
fcomp
imul
push
jne
out
adc
adc
mov
push
sub
jno
enter
add
mov
subl
dec
jne
out
lock
jne
sub
push
jmp
cld
or
ret
pop
pop
cli
sub
xorl
push
mov
int
cmp
jbe
inc
test
and
int3
xchg
mov
mov
les
pop
lock
pusha
sub
adc
std
ja
adc
sub
cmp
aad
sti
lahf
stc
pop
in
lds
jb
dec
mov
decb
std
inc
dec
sub
mov
jo
aas
xlat
lahf
pop
push
cmc
aaa
jne
jmp
xor
jbe
sbb
ficoml
inc
lahf
mov
dec
into
les
push
loope
mov
push
push
fwait
push
addl
pop
fnsave
hlt
jmp
loop
out
incl
in
stos
xchg
mov
push
sbb
sub
pop
xor
in
jnp
push
pop
push
or
js
push
push
mov
call
shll
call
bound
mov
dec
into
icebp
push
imul
or
jmp
mov
mov
loope
mov
icebp
mov
lret
hlt
pop
mov
sbb
fnstenv
add
insb
adc
arpl
cld
dec
shrb
push
mov
mov
cs
je
enter
adc
pop
cli
cmc
mov
inc
mov
jmp
push
mov
outsl
decb
rcrb
clc
loope
data16
jns
out
jno
mov
adc
fdivrp
xchg
inc
insb
mov
fs
pop
ja
loopne
sti
jp
add
pop
mov
mov
mov
std
in
jg
add
outsb
icebp
jecxz
xor
sahf
rorb
ds
pusha
mov
imul
scas
sub
fidivrs
outsb
lahf
dec
js
mov
rorb
out
push
std
inc
mov
popa
jmp
lods
clc
xchg
add
stos
ds
cli
imul
fs
js
loop
push
cli
jecxz
mov
jno
aad
cmp
xchg
lods
cmpl
movsl
cmp
das
daa
lret
cli
rol
scas
add
mov
jmp
mov
mov
mov
mov
xchg
cli
xor
out
mov
jo
iret
lock
and
in
mov
mov
and
test
cmp
inc
mov
jp
mov
sub
push
adc
clc
mov
fcomps
fsubr
or
push
cltd
outsl
js
pop
aam
mov
icebp
rcll
shrl
mov
dec
mov
jb
add
sbb
fdivr
and
and
mov
ret
out
icebp
jg
sarb
aam
cwtl
insb
adc
sub
mov
or
scas
lds
ja
jle
frstor
dec
push
mov
notb
aas
mov
mov
ja
add
adc
inc
push
jg
aam
dec
mov
maskmovq
divl
mov
loopne
cld
xchg
lcall
push
psubsw
mov
sti
mov
adc
mov
push
fs
or
repnz
sub
sahf
mov
test
mov
inc
cld
flds
sub
push
or
jp
insl
and
fs
dec
jb
popf
and
outsb
and
mov
mov
call
xor
mov
mov
mov
xor
and
jo
mov
sbb
cli
addr16
jge
push
dec
scas
call
or
aas
idiv
ljmp
inc
mov
ja
pop
jecxz
fwait
adc
call
loope
insb
jg
jne
in
insl
sahf
push
test
or
adc
inc
xor
movsb
in
stos
mov
nop
inc
popa
xchg
or
sahf
add
xchg
mov
cmp
push
push
negl
imul
inc
std
enter
sub
incb
or
mov
push
sti
dec
adc
jl
mov
popa
mov
lret
mov
add
push
cli
pop
sahf
insb
idivl
or
in
hlt
xchg
imul
mov
push
sub
nopl
aad
push
sti
icebp
test
mov
lods
xlat
push
sbb
cld
dec
scas
lcall
xchg
jne
mov
popa
dec
iret
and
jmp
mov
shll
pop
aaa
mov
pop
or
aas
mov
lods
push
out
mov
add
testb
and
cli
mov
sbb
scas
xor
jecxz
or
push
dec
push
dec
xor
and
int
movsb
call
xor
cs
mov
es
fst
jmp
jge
stc
mov
clc
arpl
fldt
ds
mov
mov
cwtl
in
fwait
loope
sti
decb
cmc
out
xchg
sub
fadd
jne
jp
insb
cmp
xchg
sbb
loopne
and
mov
mov
lods
mov
fiaddl
ds
mov
fisttps
and
iret
fistpll
mov
mov
les
aaa
pop
cmpsl
decl
pushf
xlat
xchg
shll
cmp
fldenv
mov
std
insl
cmpsl
lcall
mov
ljmp
lret
int
jb
xor
stc
pushf
rol
add
mov
xchg
lods
xchg
push
pop
mov
lock
insl
out
js
nop
sub
mov
aas
ror
xor
icebp
xchg
mov
ds
mov
jg
push
bndldx
and
adc
mov
aas
mov
jge
jne
call
stos
ljmp
pop
mov
lods
mov
mov
jmp
fadds
mov
mov
mov
cmp
fiadds
cmpsb
or
aas
xchg
sar
add
mov
add
pushf
fcoms
out
jle
sti
sub
ret
xchg
xor
push
cmp
insb
sub
xor
cli
je
mov
aad
enter
add
clc
dec
cli
mov
push
cli
pop
call
or
push
into
xor
inc
mov
cld
mov
mov
jmp
adc
or
out
push
lcall
cld
sub
daa
fadds
out
clc
push
pop
out
mov
lods
sub
jmp
push
sub
lods
push
in
xor
or
mov
lock
and
sub
icebp
popf
sti
xlat
fdivrs
sti
push
dec
andl
push
je
call
lock
mov
shl
inc
ret
cmpsl
out
cld
and
addr16
xor
hlt
pushf
inc
das
icebp
cmp
pop
xchg
dec
mov
lds
jg
push
out
jp
mov
mov
mov
lcall
jg
add
test
loop
fwait
push
rclb
aam
sub
fistpll
jnp
push
lock
cmp
mov
adcb
mov
xchg
sbb
pop
jne
mov
outsl
dec
or
orb
inc
out
mov
lcall
jp
jge
dec
sub
scas
inc
jl
add
into
xchg
bnd
add
scas
jo
sbb
cmc
pop
imul
loope
fsts
mov
mov
dec
xchg
shr
call
mov
push
aas
jmp
push
scas
popf
xchg
add
in
shr
imul
and
fidivs
inc
in
aas
inc
loop
cli
add
push
bound
jbe
outsb
pop
loope
pop
in
mov
iret
sub
push
mov
clc
iret
jge
enter
mov
jno
xor
std
pop
stos
pop
ds
or
lret
dec
sahf
popf
xor
fucom
comiss
addb
test
les
icebp
xor
mov
xchg
xchg
cmc
icebp
clc
xchg
mov
add
fsubs
loope
call
pop
stos
lret
or
je
xchg
decb
or
cmp
movsl
fbstp
js
mov
inc
add
fs
call
ss
daa
fidivrs
cmp
pop
mov
dec
call
xor
jle
xor
mov
and
pop
dec
or
mov
ds
shl
addr16
mov
or
jp
jnp
out
push
ss
fnstenv
pop
loop
out
imul
add
addl
clc
out
inc
scas
push
push
push
scas
aad
mov
into
std
fdiv
in
pop
icebp
daa
sbb
dec
aam
ss
push
jg
jno
cmp
and
incb
sub
mov
pop
push
adc
pusha
imul
adcl
ret
sbb
fs
dec
mov
cmpsl
out
cwtl
push
clc
gs
jae
and
ret
jp
in
test
sarb
dec
jg
pop
add
in
lods
pop
pushf
lahf
xchg
sbb
ja
clc
and
sub
movsb
cltd
mov
shr
sarb
jle
pop
add
addr16
cmp
fidivrs
push
xor
mov
shrl
cmp
dec
lcall
sub
or
pop
das
jle
xor
imul
push
push
or
imull
xchg
rclb
sub
mov
xchg
pop
jg
jg
pop
sbb
inc
lcall
iret
add
dec
jg
mov
jp
gs
pushf
mov
ret
push
inc
jae
mov
sub
mov
test
sbb
aas
in
adc
jg
mov
cmpsl
add
out
xchg
test
xchg
ds
push
lcall
test
jb
mov
pop
stos
loop
sub
mov
ret
xchg
cmp
outsl
adc
test
jg
or
dec
mov
mov
loopne
cld
call
imul
mov
cmc
in
fsubrl
fbstp
test
aad
ret
xor
es
xlat
fwait
test
dec
sub
test
jne
adc
cli
decl
stos
inc
adcb
aaa
fdiv
add
mov
and
adc
and
xchg
xor
ret
out
lahf
xor
xor
ja
xor
pop
jp
fnstsw
adc
test
xchg
jne
outsl
std
push
push
aas
dec
cmpsb
cs
pop
push
mov
ljmp
or
adc
int3
ret
pop
aad
cmp
and
das
xor
jecxz
sbb
les
out
js
jg
or
cmp
cli
sbb
pop
out
adc
ret
out
lahf
fsubrl
mov
inc
cmp
xor
jl
fistpll
adc
insl
jg
clc
pop
jmp
pushf
jecxz
les
pop
jg
xor
xor
cmpsb
mov
xorb
outsl
jp
jne
pushl
push
or
sbb
mov
jl
idivb
inc
mov
and
adc
mov
pop
pushl
mov
fiadds
movsb
add
movsl
scas
adc
out
push
movsl
jp
cmpsb
dec
int3
stc
jno
cmpsl
call
sbbl
pop
mov
mov
ja
call
sbb
das
inc
je
idivl
sub
cwtl
shl
sbb
int
cltd
out
jns
add
mov
movsb
push
xchg
lock
jp
adc
mov
xor
cmpsb
ja
add
ret
sub
std
or
jbe
ljmp
add
or
jno
fisubrl
js
mov
aas
push
dec
pop
std
cld
sub
cmp
inc
out
bound
fdivrs
cmp
out
xadd
xor
pop
or
lret
fcoms
and
bound
aas
cmp
inc
out
cmp
add
repnz
shll
pop
decb
cltd
sahf
andl
add
pop
mov
loopne
sub
mov
int3
cmp
dec
mov
std
cs
insl
into
movsl
xchg
jecxz
sub
incl
xchg
or
push
adc
fs
mov
jmp
popf
adc
mov
jmp
push
mov
testb
add
push
sbb
andb
dec
inc
sub
out
inc
mov
xor
mov
jae
aas
jnp
nop
call
cmpsl
adc
loopne
imul
inc
hlt
inc
jl
js
jmp
cli
xchg
imulb
dec
jp
add
pusha
pop
push
into
rcrb
cmc
mov
stos
sbb
sbb
jnp
jecxz
insl
jg
cmp
or
loope
xchg
into
sbb
xor
out
insl
mov
sbb
cmp
mov
pop
and
lahf
ror
sbbb
sar
sbb
push
adcb
lock
lock
out
out
fwait
sbb
ret
cmc
fsubr
lcall
pop
cmp
das
insl
clc
mov
stos
jle
std
pop
mov
inc
dec
in
mov
lcall
scas
cmp
dec
imul
ds
mov
xor
adc
aas
mov
out
filds
test
rcl
dec
dec
popf
jmp
mov
call
cmpsl
and
and
inc
out
jg
insl
mov
adc
sbb
dec
push
test
sbb
movb
ss
add
push
and
roll
add
insb
xor
loope
icebp
nop
jae
mov
or
aas
inc
inc
shrl
stos
xchg
sbb
inc
aas
adc
rcrb
int
adc
mov
ja
lods
out
scas
lods
mov
lahf
fidivrs
data16
pop
loope
and
add
adc
lahf
sar
sbb
std
xchg
ret
pop
frstor
in
cmpsl
dec
adc
and
addb
int3
mov
xor
mov
pop
gs
stos
xchg
ja
scas
nop
out
lods
add
insb
push
mov
jnp
movsl
ret
in
jecxz
test
cld
jne
mov
mov
adc
call
cmpsl
insl
or
jg
xor
mov
sbb
in
pop
out
std
cwtl
mov
jo
lods
pop
add
cmp
push
adc
jbe
or
ret
out
lock
or
push
mov
xlat
adc
lahf
push
ljmp
test
iret
in
mov
test
pusha
out
cmp
push
cmp
ds
cli
ja
ret
mov
xor
addb
stc
fistpll
icebp
jno
cmp
adc
into
movsl
call
mov
push
dec
cmp
add
mov
fildll
ja
sahf
add
adcb
js
fcoms
adc
add
lret
rcrb
into
pushf
sub
jp
ja
pop
jge
jno
test
jle
frstor
cli
xchg
xor
repz
push
sub
push
incb
mov
xchg
push
rolb
mov
ficomps
aas
push
dec
cltd
mov
dec
std
push
out
pop
jns
or
inc
icebp
pop
push
out
mov
pusha
push
fxch
out
into
jg
clc
cmp
shlb
lret
xorl
cli
shll
xlat
insl
jnp
mov
or
mov
out
fistps
ja
ljmp
push
xor
pop
jne
push
lret
sbb
shl
js
adc
popa
push
and
lret
mov
mov
dec
push
adc
xchg
lret
ja
mov
and
addr16
insb
xlat
and
and
mov
mov
dec
mov
enter
pop
inc
sub
sub
je
addr16
fucomip
out
jo,pn
iret
sti
shl
fidivl
pushl
or
ja
or
pop
push
push
add
movsb
xor
nop
sbb
ljmp
dec
fisttpl
add
xchg
adc
pusha
sbb
or
jmp
cmc
rcl
jno
das
negl
cs
in
dec
jnp
into
fs
pop
es
shll
cwtl
js
jbe
pusha
rcr
and
sbb
dec
fwait
sub
jg
aas
jp
inc
pop
ret
inc
jl
push
lea
ret
shr
xor
out
pop
sti
dec
xchg
arpl
test
sub
sbb
addr16
push
sti
mov
or
icebp
inc
mov
into
loop
daa
or
sbb
lret
std
aas
pop
movsb
andl
daa
adc
mov
scas
imul
test
ja
decl
adc
mov
fcompl
icebp
fiadds
rorl
std
sub
cmc
pushf
rorl
xchg
and
rclb
loop
divl
fdivs
push
aaa
jo
hlt
ja
jb
cmp
mov
push
fmuls
iret
std
jae
xchg
and
hlt
pop
in
cld
add
clc
filds
sbb
mov
sbb
test
jns
rolb
test
sar
or
jge
cltd
mov
imul
fadds
dec
bound
pop
movsb
jg
sub
in
fstl
mov
in
jbe
jne
jbe
inc
fists
push
imul
pop
pop
sahf
dec
js
jp
leave
or
aad
daa
ret
stos
aad
dec
xchg
add
push
popl
jp
and
fiadds
das
ljmp
xchg
or
faddl
xor
and
call
pop
cli
pop
jo
gs
dec
or
lock
push
std
aas
sbb
mov
in
sbb
jle
dec
lcall
jecxz
adc
push
ja
call
shlb
xchg
jle
push
sub
movsl
fisubl
sub
movsb
cli
fistps
push
cmp
enter
or
sbbb
jb
pop
inc
lret
jnp
xchg
cmpsb
sbb
aaa
sub
cld
pop
push
mov
add
psubusw
push
jbe
or
xchg
pop
movsl
jg
stc
inc
or
negb
mov
sahf
pop
shlb
cs
adc
loop
fsubp
sahf
pop
xor
test
fdivs
lea
push
pop
pop
or
sub
inc
pop
movsb
hlt
sahf
push
movsl
push
stos
jno
idiv
adcl
fmull
cmpsb
pop
fnstenv
adc
loopne
test
xchg
loope
out
hlt
loop
fistps
pop
aaa
fildl
dec
add
fwait
cltd
test
or
adc
and
aas
sbb
and
dec
sbb
idivl
dec
cmc
sbb
jmp
sbb
leave
jp
fnsave
mov
fistpll
cmp
cmp
push
arpl
mov
xchg
mov
loopne
cmc
inc
outsb
adc
xor
sbb
icebp
fucom
mov
mov
dec
jecxz
sub
adc
fsub
fwait
in
lods
arpl
xor
or
jmp
jbe
or
cmp
xchg
jnp
jae
inc
movsb
push
sub
ja
jg
jle
sbb
test
jnp
fdivrs
dec
gs
inc
pop
or
pop
and
ficoml
and
lods
aad
mov
mov
cmp
push
or
popa
ja
addl
aad
mov
jg
pop
lock
std
test
xchg
mov
mov
pop
nop
shlb
idiv
xchg
call
loop
pop
xlat
mov
mov
sub
mov
lahf
fisubrs
pinsrw
mov
jmp
mov
dec
or
mov
jl
xor
outsl
js
das
push
push
mov
add
int3
cmp
iret
std
mov
pop
aas
jae
mov
addps
bound
movsl
std
adc
jnp
dec
aad
addr16
sub
cmp
adc
das
shr
jle
int3
jne
add
shlb
add
add
shl
scas
adc
lret
stc
ss
loopne
call
aas
push
mov
ja
call
daa
xchg
fcomip
rolb
cwtl
adc
xchg
and
rclb
sub
adc
popa
and
lahf
sti
fisttpll
sub
mov
arpl
call
mov
dec
pushf
mov
push
clc
mov
addr16
lahf
push
stos
fnstcw
rclb
or
mov
repz
mov
mov
jle
movsl
add
mov
movsb
dec
or
mov
fisttps
fldl
cmpsb
lahf
xchg
mov
xchg
stc
aaa
fimuls
inc
inc
cltd
sub
lock
dec
cmc
mov
xor
outsl
sbb
cmp
pop
ja
xchg
adc
push
cs
cmc
jg
ja
mov
enter
lds
sti
adc
enter
ljmp
dec
inc
mov
dec
in
leave
repnz
jo
mov
mov
lods
inc
enter
jmp
rcr
loop
sbb
into
xchg
iret
adc
jp
sarb
add
mov
ret
hlt
fistpll
das
int
push
pop
mov
std
mov
loop
das
push
cmp
pop
cmp
adc
pop
maxps
popf
movsl
out
mov
rorb
jo
sub
test
cli
push
adc
push
mov
fwait
adc
insb
or
fimull
mov
outsl
iret
xor
es
popf
idivl
stos
jle
mov
js
pop
or
mov
sub
addr16
cmp
sbb
pop
cmp
fistpl
out
mov
stc
lods
cltd
scas
aad
dec
fistpll
xchg
call
xchg
fcoms
cmc
lcall
inc
pushl
dec
lahf
inc
mov
enter
sub
in
push
mov
fs
adc
adc
test
mov
dec
xor
xchg
popf
decb
cmp
loope
add
mov
inc
mov
adc
orl
pop
stos
adc
mov
out
into
leave
dec
rcll
sbb
mov
shll
pop
mov
icebp
out
call
xchg
ljmp
test
fildll
mov
xor
aas
adc
sbb
dec
add
add
mov
adc
dec
cld
jg
jg
es
jecxz
aas
mov
dec
adc
cltd
ret
cld
jo
dec
sub
out
ja
pop
test
add
ret
cmp
mov
add
dec
scas
fs
add
clc
aas
adc
sbb
bound
mov
negl
loope
pusha
xor
popf
bnd
pusha
hlt
ja
mov
and
cmp
std
or
and
mov
inc
out
lar
mov
pop
or
cld
xchg
cld
fbstp
xor
imul
xchg
cs
lods
push
test
sub
mov
paddb
inc
hlt
mov
mov
cmp
push
xchg
sub
sbb
sbb
test
pop
xchg
inc
cld
pop
rcr
jl
pop
sub
test
cltd
arpl
ljmp
pop
not
in
js
push
sbb
lea
sub
nop
mov
lcall
mov
jg
ljmp
popf
mov
test
pop
scas
cld
dec
pop
outsl
scas
stos
aas
mov
hlt
lcall
das
sarb
cli
adc
mov
jne
fwait
xor
in
lods
mov
out
and
jnp
push
xlat
in
mov
push
adc
jge
sbb
xchg
movsl
clc
xchg
out
and
idivb
cmpl
ror
das
lahf
test
decb
jg
mov
test
add
and
jp
shll
push
incl
xchg
addr16
mov
aas
jbe
jne
jle
jo
das
je
lahf
add
and
ret
xchg
popa
mov
popa
dec
mov
cmp
pop
xchg
in
cli
in
imul
xchg
mov
inc
sbb
or
icebp
in
jmp
ljmp
sub
adc
sarb
mov
fistpll
mov
cmp
rorb
push
dec
rcrl
ret
sbb
jae
sbb
imul
mov
push
iret
shrb
clc
popl
jnp
pop
pop
frstor
pushf
jb
mov
inc
dec
mov
sbb
mov
jl
clc
adc
ret
out
jbe
xor
outsl
fisttpll
scas
les
ljmp
jg
lock
mov
pop
das
test
and
push
jae
in
ret
push
dec
cli
pop
sbb
mov
adc
jno
push
push
aad
lret
fidivs
fprem
mov
mov
push
popa
pusha
mov
sbb
in
out
mov
mov
ret
subb
cmc
sahf
jp
ret
push
setp
mulb
sar
out
lock
jnp
fwait
and
add
jecxz
adc
or
and
cmpl
sarb
lock
or
mull
std
or
mov
jle
cli
aaa
xor
loope
bound
mov
stc
int3
arpl
mov
sbb
pxor
sbb
in
xacquire
popf
mov
or
sub
or
or
lds
pop
mov
mov
cmp
lret
loop
jecxz
out
mov
push
in
inc
jno
ja
add
dec
lds
cmp
sbb
aad
dec
rcr
stos
je
cmpsl
fisttpll
xor
test
loope
sbb
adc
sub
cmp
int
jl
pop
jge
jnp
insb
pop
push
cs
repnz
xchg
ffreep
scas
adc
push
ret
mov
jle
icebp
pop
cmp
mov
and
in
inc
mov
stos
movsb
mov
test
pusha
cld
inc
add
arpl
pop
dec
mov
je
cmp
jnp
cmp
out
push
cltd
inc
outsb
sub
pushf
icebp
pop
pop
sarl
lcall
dec
sti
mov
repz
mov
mov
dec
push
mov
scas
push
data16
mov
pop
incl
fwait
idivl
mov
or
push
add
rorb
ja
out
cmp
lahf
mov
loopne
fwait
mov
movsb
fdivrl
and
pop
sub
movsl
out
push
pop
jp
and
lcall
jne
jo
call
mov
insl
sti
or
decl
push
xchg
jmp
jg
test
aas
ss
mov
xchg
adc
jmp
in
aaa
mov
aas
enter
je
ljmp
nop
add
loope
call
in
imul
adc
imul
xor
pop
mov
or
xchg
ljmp
imul
decl
icebp
dec
loopne
cmp
imul
and
mov
icebp
pop
push
push
lret
cmovl
andb
pop
jecxz
sti
fwait
add
cli
cmp
push
in
roll
jg
mov
in
or
xor
push
mov
lods
scas
out
das
outsl
dec
jp
scas
xchg
cli
mov
push
mov
and
inc
cli
ja
andb
data16
shlb
outsl
fbstp
ret
add
or
xchg
fcompl
sub
mov
pop
fwait
push
xor
out
fidivrs
cmc
mov
sbb
data16
aas
inc
std
psrlq
ret
pushf
xchg
xchg
xchg
addr16
inc
clc
loope
lea
inc
xchg
lret
pop
sub
std
shl
loop
push
in
rorb
push
std
mov
sbb
xor
fucom
repnz
call
loope
mov
jle
cs
arpl
cld
scas
imul
imul
mov
and
inc
leave
dec
xchg
xchg
pop
sbb
sub
xor
pop
sti
and
lods
inc
sti
mov
repz
int
sti
inc
das
cmp
scas
mov
dec
shlb
mov
rcrl
inc
decb
cmp
scas
flds
outsb
cld
bound
ret
gs
fistpll
xchg
push
jno
data16
iret
clc
movsl
push
adc
incb
js
pop
imul
xchg
fidivrl
fistpll
ja
daa
sarl
fucomi
mov
jmp
xor
lahf
mov
jne
jmp
nop
fs
imull
xchg
test
test
and
xor
rcl
inc
jmp
aam
repz
ret
insl
jbe
and
mov
lds
xrelease
mov
jg
lods
mov
ds
sub
out
lock
mov
mov
in
test
adc
lock
les
push
push
jg
out
dec
mov
cmc
aaa
sbb
loop
test
push
xlat
rorb
jg
lods
mov
cli
jmp
out
call
mov
xchg
and
stos
fdivr
icebp
mov
cmp
mov
into
lret
jle
inc
loopne
mov
inc
mov
ret
hlt
pop
bound
pusha
imul
mov
movb
dec
jne
xlat
cli
adc
shrb
cmp
je
nop
dec
jb
movsb
hlt
mov
jo
popf
inc
push
aas
mov
jmp
nop
cmp
andb
sub
add
pushf
or
insb
out
fdivrs
ret
add
push
sbb
adc
push
hlt
arpl
fs
xlat
rcr
neg
jecxz
fdivrl
lea
mov
sub
imul
or
mov
arpl
push
and
pushf
loopne
jmp
jg
push
jae
pusha
les
dec
icebp
iret
repnz
cld
jmp
rcrb
adc
pop
push
push
cmp
mull
rclb
imul
or
loopne
xchg
test
inc
fisubrl
mov
xlat
repz
pop
mov
xor
js
dec
or
push
jmp
mov
mov
cld
xchg
lss
cmp
jg
jg
push
cmp
ljmp
fidivrs
sub
adc
fnstcw
out
adc
iret
inc
mov
mov
call
fmul
sbbl
jnp
xchg
ret
loop
mov
jnp
adc
test
jno
lahf
roll
xchg
divl
addr16
std
jmp
adc
jmp
insb
shll
push
in
or
incl
jo
or
sub
jnp
push
cmp
fnsave
cmpsl
sti
mov
push
xor
popf
sub
mov
mov
push
sbb
and
jl
outsl
and
imul
and
dec
sahf
or
cmp
and
adc
rorb
ret
pop
stos
scas
cmpsl
scas
fs
mov
in
aas
and
in
cmp
dec
clc
pop
js
pushl
or
pop
jecxz
out
decl
je
pop
cmp
aam
clc
int
xchg
jae
imull
aas
or
push
fisttpll
add
cmp
sbb
rorl
or
ds
gs
xchg
jp
jns
fists
sti
sbb
test
sti
xor
xor
in
ss
and
fbstp
mov
icebp
aam
add
push
sar
mov
cmpsb
xchg
roll
inc
rorl
jecxz
jo
loopne
mov
sub
push
add
mov
and
xchg
ja
pop
pop
mov
pushf
jecxz
stos
js
jle
cli
daa
mov
or
mov
cmpsl
mov
mov
lock
mov
pop
repz
mov
pop
mov
push
fs
push
sarl
icebp
pushf
pop
mov
mov
jmp
push
je
lods
mulb
divb
pop
cwtl
out
test
bound
js
pop
or
loopne
lods
cmc
stos
outsl
ds
incl
dec
rol
aas
and
movsb
das
sbb
mov
mov
sbb
push
ud0
es
pop
loopne
les
cmc
dec
lock
in
cmp
jno
orl
adc
cmpsb
pop
decb
fidivs
sahf
jp
adc
mov
daa
popa
add
pusha
push
ss
add
pop
cli
mov
lret
mov
pop
and
test
lea
aad
dec
dec
pop
xchg
inc
push
sbb
nop
mov
pop
hlt
push
pusha
ja
cmp
sbb
lret
jne
push
xor
push
les
dec
sub
inc
ljmp
sub
ss
sarb
addr16
loopne
dec
xchg
mov
negl
into
cmp
in
div
pop
popa
pop
movsb
fildll
rolb
mov
lcall
or
sbb
stc
lcall
test
loopne
add
jg
inc
loopne
mov
stc
cmp
cmp
xor
jge
push
mov
enter
cld
orl
and
clc
push
cwtl
mov
sahf
les
test
sub
stos
cld
push
push
test
iret
je
mov
xor
inc
out
mov
dec
imul
fwait
int3
loopne
push
cld
adc
call
pushaw
movsb
daa
cmp
sarb
cmp
push
jg
jo
loope
sub
das
dec
push
dec
push
sub
mov
stos
xchg
pop
jmp
lret
jg
mov
fs
nop
or
lret
dec
mov
stc
sti
fidivrs
jns
mov
inc
ret
xor
pop
ds
mov
shll
hlt
out
bound
test
andb
into
and
out
data16
nop
inc
pusha
pop
xchg
lods
lock
cwtl
cld
xchg
movq
mov
and
daa
and
push
inc
inc
adc
nop
pusha
sahf
pop
std
jmp
or
add
pushf
mov
mov
scas
push
adc
push
int
push
mov
fldl
xor
mov
push
cli
lock
pop
xor
push
shl
aaa
or
cwtl
sbb
mov
xor
aas
sbb
stc
repz
mov
adc
cmp
pop
adc
fadds
sub
rcll
pop
lret
jmp
mov
decb
xchg
stos
lret
cltd
fstl
clc
add
push
jle
adc
inc
pop
sub
jo
pop
and
xchg
in
sbb
sub
in
fwait
out
icebp
pop
dec
mov
paddd
mov
icebp
mov
jno
lock
cmp
fistps
dec
dec
adc
inc
addr16
jnp
inc
sti
xor
loop
cli
outsl
and
and
cwtl
pop
sbb
notb
mov
push
dec
aam
or
jae
bound
sbb
sbb
loop
mov
bound
push
cmc
iret
mov
mov
mov
movsb
incl
cmp
pop
movsb
pop
pop
mov
clc
inc
inc
icebp
rcrl
fidivrs
sti
mov
adc
cmp
jp
cmp
or
popl
jg
aaa
popa
loope
mov
or
test
jmp
loope
dec
cmp
mov
pop
shll
sub
push
cli
dec
out
testl
out
adc
ds
movsl
pop
aad
jmp
cmp
ljmp
jle
ljmp
lret
clc
cmc
jle
loope
xchg
stc
stc
dec
sub
and
int
mov
adc
or
sahf
sbb
loopne
loope
push
cmpsl
testl
jle
sub
divb
loopne
int
js
mov
fcompl
mov
clc
jg
jmp
test
aas
out
enter
test
jp
test
rol
call
test
pop
cmpsb
stc
mov
cli
xchg
insl
xor
xchg
ja
pop
incl
or
dec
mov
and
incl
push
xchg
mov
and
mov
sbb
aas
sbb
cmp
shlb
scas
jbe
dec
cmpl
mov
or
loopne
push
and
mov
leave
lret
pop
jae
fcmovne
aaa
push
rcr
xchg
lods
adc
repz
dec
inc
mov
iret
cld
mov
jnp
push
or
mov
ss
out
mov
push
loopne
outsb
mov
cmp
andb
clc
mov
ret
lret
fcmovbe
dec
inc
aas
imul
sub
jno
sbb
pmulhw
std
pop
add
push
cli
incb
xlat
and
mov
movsl
sti
sub
xor
pop
aas
mov
mov
and
loope
push
mov
adc
mov
mov
ss
stos
ret
sub
inc
out
out
mov
inc
mov
sarb
addr16
popa
sbb
dec
xor
jmp
mov
sub
mov
and
loopne
sub
jmp
aad
test
push
cmp
fucomi
pop
loope
inc
push
out
out
mov
call
aas
add
ret
dec
cmpsl
cld
pop
mov
in
add
push
aaa
add
lds
mov
lods
mov
add
jg
std
frstor
loop
jge
xor
popa
rcrl
aam
les
or
repz
inc
xchg
cld
cld
xchg
lret
jecxz
jb
pop
and
cmc
cmpsl
lea
mov
decl
pusha
lret
push
lods
sbb
xchg
push
lods
dec
xchg
sar
mov
jbe,pt
out
shrl
gs
mov
add
cmp
outsb
push
iret
loopne
sti
inc
aaa
das
adcb
sub
jae
jo
iret
std
test
stos
or
adc
jmp
xorl
mov
movsl
push
mov
and
aas
pop
movsb
mov
rcll
aas
or
mov
add
xchg
sar
inc
xor
aad
jnp
out
mov
sub
cmp
fdivl
hlt
pop
mov
aaa
mov
adc
mov
out
cmp
mov
imul
adc
cli
dec
add
xlat
loope
and
aaa
xor
fst
adc
testl
sub
or
cli
lcall
lock
mov
loope
lret
adc
jge
pusha
jns
out
jg
xchg
dec
mov
or
lods
cmc
enter
mov
or
jg
mov
ffree
or
xchg
pushl
int3
mov
inc
sub
cmp
cld
or
mov
add
movsb
adc
loope
frstor
iret
mov
mov
lods
pushf
outsl
dec
mov
movsl
lock
aad
sar
idivl
shl
loop
out
and
ficomps
rep
das
leave
add
cli
mov
dec
push
aam
mov
scas
xchg
pop
sub
mov
push
sub
mov
jmp
ds
push
sbb
ljmp
pop
sbb
ror
mov
mov
push
mov
or
adc
sarb
outsl
push
incl
movsl
xor
mov
lea
arpl
cli
and
aas
mov
aaa
add
enter
outsb
or
loopne
push
test
filds
icebp
pop
cmc
jbe
sar
fistl
scas
dec
or
shrb
bnd
cmp
test
ljmp
sub
dec
xchg
das
insb
lock
scas
je
loop
pop
arpl
and
jg
jmp
sub
mov
sti
daa
scas
mov
out
and
in
lea
adc
loop
cli
call
cmp
push
cld
out
bound
int
lahf
add
imul
mov
sub
push
adc
ja
xor
pop
dec
and
sbb
sub
mov
psubsw
inc
fildl
mov
sbb
setne
adc
sbb
inc
cmpsb
fisubrs
fimull
push
das
in
push
aas
inc
mov
test
js
idiv
cmp
or
ret
decb
mov
or
dec
adc
and
lahf
mov
ljmp
sti
mov
jp
dec
scas
pop
xor
outsb
mov
xor
mov
lahf
sbb
fisttps
lea
stos
fidivrl
jae
hlt
outsb
int3
sub
fwait
pop
push
push
es
push
popf
mov
pop
mov
aas
mull
cmp
lea
iret
aaa
inc
lar
iret
jo
loopne
dec
movb
xor
or
jmp
and
mov
call
mov
fcmovnb
and
popa
jg
lock
mov
xchg
and
pop
inc
mov
gs
push
or
inc
cmp
jp
popa
mov
out
push
outsb
fdivrl
ja
movb
repz
shrb
pushl
paddb
ret
icebp
aas
mov
and
sbb
incl
icebp
mov
dec
andb
repz
jae
cs
dec
adc
mov
jns
or
pop
add
out
add
mov
push
loope
mov
fmuls
mov
repnz
xchg
or
lock
roll
flds
pop
jmp
stos
mov
scas
adc
pop
xor
sahf
mov
out
outsl
rorb
xchg
cli
mov
clc
aad
cwtl
shrl
cmp
jnp
adc
add
add
ljmp
xor
adc
cld
cs
decl
leave
aam
out
jnp
dec
mov
pop
push
adc
jg
aaa
sbb
cmp
jl
decl
and
pop
ljmp
gs
cmpsl
mov
fisubs
and
mov
mov
mov
cmc
outsb
jg
decl
pop
jecxz
jae
ret
mov
movsl
pop
hlt
loop
cmc
mov
pop
test
ljmp
cmp
decl
fisubs
fbld
xor
aas
add
cltd
iret
std
jnp
and
cmp
pop
ret
pop
aam
xor
in
lds
rorl
jns
or
cmp
jg
or
add
pop
std
cmp
dec
testl
mov
aas
mov
dec
out
cmc
adc
in
dec
aam
aad
iret
popf
xchg
inc
sti
or
sbb
pop
mov
loope
and
pop
fbld
out
test
in
outsb
cmp
sub
mov
das
loope
or
ret
xlat
fbstp
xchg
fucomp
dec
mov
lret
idivb
xchg
out
mov
sub
adc
pop
mov
call
cmp
enter
in
sbb
push
icebp
aad
jo
out
faddl
mov
das
inc
movsl
mov
icebp
verw
in
incl
adc
les
hlt
pop
ret
pop
dec
ficoml
xchg
icebp
mov
ficomps
shlb
push
jge
insl
cmp
inc
add
and
enter
inc
xchg
pop
lahf
sti
lahf
push
mov
js
lock
mov
int3
lock
pop
icebp
cmp
and
sbb
inc
dec
inc
scas
add
or
mov
inc
adc
inc
and
add
cld
out
fdivp
stos
mov
lock
mov
lcall
xchg
insl
xchg
xor
lods
dec
mov
out
cld
sbb
lret
inc
mov
and
mov
dec
cli
pop
mov
fisubrs
xchg
jg
or
outsl
jo
cmc
es
incl
notl
aaa
pushf
or
pop
insl
mov
inc
mov
arpl
push
adc
xor
mov
movsb
push
loop
push
mov
sub
clc
das
adc
sbb
inc
ret
popa
push
dec
jg
fiadds
xchg
negb
fs
xor
and
icebp
inc
adc
mov
decl
outsl
add
sub
push
decb
aam
jno
xorb
cmp
xor
imul
call
cmp
pop
xor
and
out
or
arpl
adc
loope
mov
nop
into
xchg
dec
movsb
cmpsl
sarl
js
add
decl
mov
mov
jle
mov
xor
and
mov
jo
pusha
mov
sbb
sbb
int3
dec
rcr
inc
es
ret
push
xadd
scas
inc
xchg
shrl
push
xorps
dec
jg
cmp
cmp
sahf
xchg
cs
lcall
mov
xchg
fwait
pop
push
es
sub
fucomp
incl
mov
dec
shll
ja
sub
cli
mov
lods
dec
inc
arpl
ret
and
jne
outsb
cmp
push
out
data16
pop
inc
mov
add
xor
dec
cmp
mov
out
pop
inc
std
pop
add
std
cmp
daa
dec
or
nop
lea
xchg
xchg
or
enter
xchg
loop
mov
fwait
lock
jle
adc
out
adc
inc
adc
lock
cwtl
xor
mov
aas
or
cmp
sub
mov
jg
add
std
addb
adc
jl
fwait
mov
aad
divl
jmp
stc
mov
in
and
mov
insb
decl
adc
sti
jecxz
fnstsw
sub
mov
les
std
xlat
or
je
mov
xchg
add
test
ljmp
lcall
loop
jge
xor
xchg
inc
arpl
jmp
push
les
xor
mov
mov
mov
xchg
leave
popa
add
out
mov
dec
ficoms
mov
sbb
repz
jnp
ja
loop
rolb
sbb
and
icebp
fldl
adc
dec
inc
or
scas
jle
inc
mov
cltd
mov
icebp
insb
loope
mov
add
xchg
mov
scas
int3
mov
aam
in
addr16
or
movb
jg
pop
stos
mov
sbb
stos
loopne
negl
jg
push
cmp
jne
bnd
mov
into
inc
pop
jge
or
pushf
push
test
mov
pop
rcrb
cli
fcom
mov
push
pop
mov
sbb
movsb
sbb
pop
cmp
jnp
jnp
dec
mov
ret
fcompl
pop
ds
push
in
inc
adc
loopne
addr16
jmp
js
mov
mov
pop
or
jecxz
fs
jmp
jge
adc
dec
jnp
mov
clc
cmpsl
clc
mov
notl
je
filds
lock
rorl
arpl
fnsave
and
pop
mov
std
xchg
or
cmp
jbe
lret
jns
jbe
pop
jns
stos
lock
data16
mov
inc
or
rcl
lret
pop
mov
je
mov
repz
js
mov
jge
pushl
mov
xor
mov
dec
lahf
loopne
inc
lret
clc
lea
jbe
aas
push
dec
jg
inc
subl
cld
sbb
mov
pop
aaa
add
cmp
data16
sbb
pop
out
mov
inc
pop
and
stc
cmc
in
std
inc
addl
sbb
mov
test
icebp
inc
hlt
inc
push
and
cld
and
and
push
cmp
pop
push
nop
mov
xor
rcll
xchg
or
aas
test
jae
fcompl
dec
rol
dec
add
pop
mov
addl
ja
ss
ja
fstps
popf
sub
test
fdivl
dec
cmpb
pop
les
dec
movsl
hlt
xchg
shrl
in
aaa
loope
clc
mov
lods
adc
jmp
sub
sub
dec
arpl
jg
pop
stc
je
dec
into
pop
imul
sub
aaa
mov
les
dec
outsl
cmp
pop
mov
cmp
scas
and
mov
push
pop
repz
dec
jg
jg
addr16
lods
push
lcall
xchg
scas
lcall
sub
inc
scas
cwtl
mov
sbb
mov
mov
mov
inc
add
test
lret
cmp
or
cld
cmpsb
js
cmp
xchg
xor
xchg
add
std
jmp
mov
icebp
dec
lock
sbb
popa
call
pop
insl
clc
lea
rcrl
out
jg
filds
fmull
fs
dec
cld
sbb
cld
add
ja
cld
xchg
add
jg
out
sbb
out
outsb
lock
subps
add
xor
mov
xor
xorb
dec
xor
jno
fidivrl
jmp
ds
cs
outsl
data16
js
mov
or
test
lcall
sub
fucom
cmpsl
cli
jg
fcoml
dec
mov
clc
pushl
mov
ret
pop
insb
sub
push
icebp
pop
pop
faddl
les
push
pushf
and
push
xor
adc
cwtl
orb
jl
sidtl
push
push
mov
mov
cli
ja
sbb
jne
outsb
stos
jns
filds
add
cmp
pop
addb
ja
dec
sub
push
sbb
mov
ret
jecxz
dec
push
adc
jg
mov
icebp
leave
pop
sbbl
dec
stos
sub
sub
dec
lock
addb
rolb
negl
pop
call
or
mov
test
push
ja
call
lds
clc
jl
es
mov
dec
adc
cwtl
aaa
cmp
in
sbbb
sub
lock
mov
call
xor
add
inc
xor
int
or
popl
xor
call
dec
mov
mov
daa
in
add
incb
pop
push
push
push
xor
pop
negb
inc
sti
repz
jbe
popa
loop
std
add
scas
clc
push
cmpsb
outsl
add
jno
das
icebp
mov
and
out
sbb
jmp
dec
jbe
jmp
jp
mov
aaa
rcrb
idivb
add
xor
jg
lds
repz
cmc
add
mov
sar
call
mov
rcr
aam
jne
ficoml
push
push
aaa
sbb
xchg
loopne
mov
roll
xor
ficoml
icebp
adc
sub
int3
in
sub
and
pop
rcll
adc
xor
movsl
jo
sub
jg
movsl
add
fs
out
xor
xchg
ljmp
xchg
rclb
lahf
pop
call
mov
or
inc
mov
lds
xchg
fnstsw
push
push
popf
inc
mov
out
outsl
inc
notb
mov
pushw
mov
stos
out
inc
or
mov
jl
jg
mov
dec
fstpl
cmc
out
lea
hlt
mov
sbb
rol
jg
call
pop
shll
std
inc
sbb
cmp
jmp
fisubs
jl
sbb
pop
jbe
mov
es
push
pop
in
out
lock
inc
sbb
push
push
mov
cmp
mov
mov
and
xor
sahf
mov
ja
cmpb
cmp
pushf
imul
aas
loop
push
movsl
hlt
adc
popl
sahf
jge
pop
shrb
scas
cmp
stc
aam
fwait
rcrb
xor
stc
sbb
fucomp
sbb
cmpsb
ja
xor
cmp
addr16
outsb
loop
and
and
ja
or
jp
sbb
addr16
jo
dec
gs
cli
mov
loop
jno
mov
repz
fstps
rcl
out
out
push
inc
fistps
aaa
jno
or
aas
jecxz
xchg
fwait
sarl
mov
mov
jnp
and
mov
mov
jne
adc
cltd
imul
inc
adc
scas
xor
add
mov
mov
cmp
call
hlt
jmp
xchg
out
lods
lahf
rolb
lcall
pop
rcl
and
mov
xor
xlat
sti
bsr
dec
xchg
aad
outsl
pusha
sbbb
ret
pop
cmp
cmp
sbb
movsb
ja
aas
mov
dec
ljmp
mov
xor
gs
jns
sarb
roll
dec
arpl
cmc
mov
loopne
or
jnp
adc
hlt
das
xor
jp
fsubs
scas
cld
sbb
inc
add
ds
or
sti
cmp
sbb
aaa
mov
push
inc
clc
ret
negl
mov
pop
sbb
ljmp
jmp
jmp
aaa
rorl
daa
mov
mov
jge
adc
repz
cmc
inc
ljmp
add
loop
cmpsb
outsb
jmp
aas
mov
rcr
jl
xchg
and
cmp
js
add
filds
lcall
lahf
ret
inc
stos
dec
push
sub
scas
adc
push
decl
xor
xor
gs
sbb
call
jl
out
stos
push
outsb
cld
pop
loop
mov
mov
sub
scas
jg
or
clc
aam
sbb
daa
mov
insl
cmp
mulb
lahf
ljmp
jae
mov
or
dec
mov
pop
sbb
repnz
std
mov
clc
add
jmp
push
stos
or
insb
ljmp
add
xor
mov
pop
add
fistpl
in
ret
mov
jo
stc
fsubl
add
mov
std
nop
jmp
xchg
sbb
nop
jg
mull
rcl
jne
daa
mov
aas
sti
mov
adc
mov
push
jb
testb
dec
mov
loop
iret
jle
test
idivb
or
pop
add
arpl
xchg
mov
mov
jns
or
call
rorb
sarl
jbe
pop
movsb
ds
mul
inc
mov
and
push
call
xlat
shlb
scas
lcall
jmp
in
ja
repnz
or
decl
paddd
dec
and
cmp
int
pop
inc
mov
decl
rolb
test
aas
push
sarb
mov
es
outsb
adc
inc
jb
xorl
scas
pop
mov
adc
lock
xchg
push
dec
dec
out
int3
jl
gs
mov
les
mov
in
leave
adc
popf
rcrb
mov
cs
lahf
sti
sub
cmp
insl
imul
jl
mov
fistps
addr16
dec
insb
in
mov
fbstp
inc
lcall
fs
mov
push
adc
std
mov
and
xchg
mov
xchg
push
jbe
int
xchg
inc
out
push
xchg
daa
lret
add
mov
mov
push
popa
sbb
std
nop
mov
sub
pop
or
jmp
mov
and
test
cwtl
loopne
mov
mov
lds
std
mov
inc
shll
add
pop
xchg
pop
roll
sub
dec
pop
mov
daa
sti
sub
cli
xor
jecxz
push
aas
test
jno
xor
clc
pop
mov
jne,pn
dec
lock
jg
jmp
frstor
adc
pop
lds
aaa
jo
mov
daa
dec
imul
divb
pop
insb
cli
xchg
inc
aas
adc
mov
mov
add
xor
out
ljmp
push
sti
push
push
stos
mov
jmp
push
rcrb
jg
testb
mov
push
mov
cmp
ljmp
mov
lea
inc
fisubs
push
pop
jb
das
aad
popf
or
clc
pop
lods
decl
adc
sarl
clc
lahf
dec
icebp
add
push
adc
pusha
imul
push
mov
sbb
sar
mov
insb
out
xchg
popa
fidivrl
sbb
bound
hlt
pop
mov
inc
arpl
pushf
dec
sub
fidivrs
and
ljmp
cmpsl
lret
mov
inc
movsb
inc
push
dec
lahf
lahf
mov
cli
xchg
rcrb
cmp
or
mov
or
pop
sbb
inc
jge
jmp
add
bound
sbb
xchg
aas
mov
popa
subl
dec
stos
ja
incl
jg
jle
outsl
ljmp
std
call
jp
iret
and
dec
ds
shlb
popa
je
aaa
mov
roll
mov
in
push
cmpsb
lods
adc
mov
scas
negl
mov
mov
ja
stos
add
pop
xchg
repz
fcomps
sbb
scas
push
loopne
faddl
shr
mov
lods
les
pushf
incb
mov
sub
shrl
pushf
in
push
pop
in
xor
xor
add
fiaddl
ror
push
mov
sbbb
mov
mov
sbb
aas
aad
pop
push
repz
into
ficomps
cmpsl
test
adc
addr16
jle
scas
jbe
movsb
test
jb
jnp
repnz
ret
xor
add
jl
push
dec
jns
int3
loopne
test
xchg
addr16
fists
fwait
cmp
addr16
std
call
add
shrb
in
adcl
mov
fistpll
or
pusha
cmp
test
add
pop
andb
mov
add
inc
xor
pop
sub
in
mov
jge
loopne
cltd
outsl
cmp
dec
inc
lods
jg
adc
add
dec
pop
sbb
movsb
sub
clc
xor
rolb
sahf
ret
popl
std
int3
pop
pop
xor
xchg
movsl
ret
cmc
sarl
sub
std
xchg
sahf
pop
pop
xchg
in
jns
xor
pusha
fcoms
test
adc
cmpsb
popf
mov
stos
movsb
jle
clc
imul
mov
rclb
jns
and
cli
fcmovnu
add
pusha
nop
add
adc
xchg
pinsrw
je
push
decl
dec
lods
test
imul
sti
fcomps
xor
cmpsb
cmc
add
or
jo
inc
mov
dec
rolb
movsl
sbb
or
xchg
jb
ret
popa
inc
stos
sti
andl
incb
or
imul
jbe
xchg
mov
testl
test
rcrb
jns
sub
fwait
cmpsl
pop
add
sbb
push
ds
sar
xor
xor
std
fucomip
xchg
mov
sahf
and
cmp
fucom
mov
stos
mov
pop
cld
push
and
cmpsl
pushf
and
outsb
iret
push
hlt
dec
cmc
iret
mov
sbb
imul
sub
mov
leave
xor
adc
incl
add
cmp
mov
je
scas
fstl
fcomip
subb
cmp
fdivrl
clc
push
insl
inc
inc
icebp
stos
ljmp
cmp
loop
and
clc
arpl
jne
out
ja
mov
iret
std
iret
and
lds
and
push
and
add
pop
mov
xor
sahf
pop
nop
sub
dec
cmp
pop
lock
les
outsl
aad
dec
ja
pushf
icebp
clc
std
mov
lea
sbb
dec
movb
incl
dec
fiaddl
sbb
cmp
dec
std
aas
mov
and
in
orl
aad
out
mov
sar
add
inc
and
scas
cli
mov
add
addr16
sub
loopne
mov
jg
lds
movsl
mov
xchg
mov
add
sub
adc
ja
pop
xchg
dec
and
lods
xchg
mov
imul
pop
jns
pop
movsl
es
dec
mov
popf
adc
incb
or
or
aaa
jecxz
fcomps
sbb
mov
sbb
aam
mov
daa
imul
fadd
fs
aaa
aam
lahf
fs
jb
push
mov
jle
loopne
push
shlb
sub
arpl
in
push
lcall
cmpsl
cld
mov
xchg
jmp
sub
cmp
inc
notb
pushf
pop
ret
aas
arpl
fists
mov
lahf
inc
cmp
and
sbb
push
or
fisubs
aam
je
or
fsubrs
push
and
inc
mov
xor
fsubrp
xchg
stc
jne
aas
and
sub
rolb
cltd
cwtl
call
or
sbb
adc
and
icebp
jg
sub
and
lock
mov
mov
mov
inc
push
xchg
mull
jmp
sti
cmpsb
push
repnz
mov
test
insb
hlt
xchg
mov
add
sub
imul
inc
dec
and
pop
subb
insb
divl
mov
mov
shll
or
lahf
add
and
das
adc
jo
jb
push
pushl
enter
out
std
xchg
jo
inc
sbb
scas
aas
loope
add
cmpsl
pop
and
jmp
pop
jg
push
out
push
dec
popf
lret
adc
fildl
push
outsl
cli
cmp
loopne
incl
loopne
mov
test
dec
xlat
rcll
push
inc
jnp
ds
and
or
in
ja
ljmp
push
icebp
fsubs
aaa
pop
out
call
jge
or
movsb
lds
cmc
imul
daa
adc
ja
xor
std
pop
inc
pushl
xor
mov
jecxz
push
cld
mov
mov
mov
and
inc
xchg
mov
or
and
popf
insl
clc
jg
push
jp
lods
push
jns
ja
inc
std
aad
mov
call
push
sbb
jae
lahf
cmp
shll
movsb
popa
ficoml
sub
add
sub
fildll
dec
inc
push
ljmp
enter
mov
mov
ss
cld
orl
adc
jb
outsl
pop
les
call
mov
pop
loop
adc
into
xchg
leave
push
ds
dec
inc
jl
clc
xchg
xchg
es
leave
cmc
aad
aas
adc
pop
int
push
mov
mov
out
popf
and
daa
push
ss
xor
adc
aas
clc
cltd
out
pop
loopne
xchg
or
ss
ss
or
mov
push
dec
fstps
mov
lods
aaa
mov
sub
ret
ds
fcompl
test
push
data16
add
insl
mov
and
or
lahf
es
push
dec
cli
lcall
adc
leave
dec
adc
cld
sub
add
outsl
rcrl
cli
arpl
lods
in
inc
sbb
aam
out
xchg
nop
mov
adc
jg
call
add
call
movsb
cmpsl
jg
ret
or
cs
int3
std
movl
stc
cmp
xchg
mov
cmp
call
call
mov
adc
push
lods
mov
in
cmp
or
dec
and
and
jbe
sbb
adc
jo
stos
cmp
pop
jl
lahf
lock
mov
pop
fwait
cs
in
ret
or
fistl
and
mov
fmuls
jg
xchg
mov
pop
aas
jno
fsubrl
out
and
add
ja
mov
hlt
scas
mov
adc
pusha
movsb
inc
jp
pop
hlt
pop
mov
inc
sbb
js
fdivrl
cli
xlat
pop
fcom
js
push
shlb
mov
jecxz
clc
xor
xchg
fs
imul
mov
adc
imul
cmp
insb
stos
pop
jmp
shrb
sub
push
lock
or
ja
ja
ret
arpl
cmc
pop
iret
and
icebp
sub
daa
repz
insl
xchg
mov
out
ja
lret
stos
xor
shlb
frstor
ja
fdivl
mov
or
ljmp
lret
stos
loope
std
mov
arpl
cmp
leave
mov
andl
mov
inc
add
out
mov
push
sbb
pop
testl
xchg
ja
ljmp
jge
mov
mov
push
pusha
or
add
addl
loope
insb
sbb
fdivs
scas
pusha
pushl
and
add
loop
cmp
in
and
or
mov
cmpsl
in
or
std
lds
cmp
popa
mov
add
mov
add
jge
mov
inc
lcall
mov
mov
cld
call
pop
inc
popa
or
dec
mov
test
insl
out
lods
fwait
push
inc
mov
pop
shlb
call
repz
mov
dec
cli
fimuls
pop
cmp
mov
inc
lods
mov
sti
dec
popa
rorl
xchg
lods
cmpsl
push
mov
test
xor
cmc
arpl
sub
les
jmp
fs
add
out
cmp
inc
popf
ljmp
jb
es
test
inc
cmp
ds
add
jecxz
lahf
std
pop
shr
mov
sbb
push
movsl
or
iret
or
divl
enter
out
jl
icebp
add
jle
push
jmp
mov
xchg
rcrl
or
lods
add
sahf
push
sti
sbb
cs
xor
andb
inc
mov
int3
nop
fmulp
xor
pop
scas
push
les
xchg
out
movsl
add
sti
lahf
inc
jmp
and
repz
shrl
sar
add
cmp
sahf
dec
sbb
scas
hlt
xor
shll
add
ds
scas
cmp
jg
pop
std
pop
push
adc
movsl
pop
fsubrp
fcoms
arpl
sti
ja
sar
shlb
scas
pop
jno
arpl
xchg
pop
decl
in
add
out
jno
jae
outsb
ljmp
lea
cmp
sbb
out
js
mov
loopne
or
mov
fldt
insl
pop
adc
mov
xchg
push
inc
pop
fwait
sbb
cmc
lock
test
test
xchg
sahf
adc
or
mov
test
push
subb
mov
js
pop
sti
cli
add
hlt
jecxz
decl
xor
ret
and
xor
xor
es
push
mov
cmc
dec
inc
and
inc
or
and
out
std
or
adc
out
push
or
pushf
fldl
loop
lods
lcall
and
mov
ss
nop
cmp
cmp
ret
jecxz
daa
adc
outsb
fbld
mov
rol
jbe
repnz
incb
ret
inc
test
mov
lock
add
add
lea
sbb
js
mov
out
xor
adc
jl
aas
sbb
sbb
add
test
add
push
inc
imul
cltd
ja
sbb
neg
inc
sub
sti
repz
mov
jbe
push
in
sbb
and
push
mov
or
and
out
mov
mov
push
and
dec
fistpll
cmp
cmp
test
xchg
out
popf
xor
mov
xchg
sub
push
out
outsl
mov
xchg
test
das
pop
fbld
add
pop
lock
mov
add
inc
aam
mov
inc
fadds
pop
add
add
ss
cmc
mov
xrelease
orb
sarl
sub
sub
adc
xchg
pop
dec
add
mov
insb
insb
add
sub
add
and
aam
or
sub
inc
cld
adc
hlt
jne
push
push
push
or
iret
insl
inc
inc
fdivrl
shlb
orb
notb
sub
ret
add
sbb
xchg
sbb
sub
push
add
adc
lock
xor
push
xor
sub
inc
je
pusha
cmp
sbb
lsl
cld
mov
daa
mov
add
and
and
jae
inc
mov
jnp
daa
adc
pop
xchg
mov
test
push
shll
xor
ret
mov
mov
adc
aas
jnp
pop
dec
add
mov
mov
test
mov
or
inc
push
add
xor
and
lret
cmp
push
push
add
mov
dec
push
cwtl
add
push
inc
test
into
push
divl
push
fsubrs
movzwl
jmp
aad
cmp
add
fmull
test
add
push
add
lcall
lods
insl
dec
es
mov
daa
scas
mov
xor
pop
mov
lahf
mov
arpl
out
punpckhbw
jge
or
fisubs
add
jg
int
in
adc
pop
push
cmpb
or
sub
add
lods
das
dec
jno
mov
rcrl
cwtl
xorb
mov
stos
sub
jae
pusha
mov
sub
mov
movups
adc
inc
add
xor
mov
sahf
ret
mov
add
jbe
push
mov
iret
jge
int
cmp
fisubl
and
jo
dec
and
xchg
popf
sub
lea
pusha
or
adc
xchg
mov
inc
bound
cmp
sub
and
lods
cltd
or
cld
das
jno
mov
les
daa
push
in
mov
pop
adc
out
jg
mov
sbb
loopne
sbb
subl
jnp
leave
imul
pushf
loop
mov
inc
lahf
mov
sbb
sbb
xchg
lret
push
inc
in
push
cmp
pop
mov
es
xchg
call
out
rcll
adc
rorb
add
adc
orl
lcall
inc
add
inc
int
cwtl
fwait
les
data16
or
mov
xchg
fcom
pop
jae
mov
out
sbb
cmp
jp
or
mov
or
fdivs
ret
iret
and
xor
cmp
jb
sub
out
adc
mov
shr
leave
or
mov
push
in
rcll
or
pop
xor
xor
xorb
inc
xor
mov
push
les
or
jnp
sti
in
add
loop
xchg
sub
or
xor
lret
ret
test
xchg
pop
call
lret
orb
adc
or
data16
scas
xor
jo
mov
pop
push
test
call
xorl
and
pop
sub
sub
add
sti
andl
adc
dec
and
test
mov
push
icebp
fwait
push
stc
xchg
scas
stos
shlb
mov
stos
mov
inc
movsl
and
mov
dec
add
daa
mov
mov
dec
mov
adc
test
add
loopne
push
pop
hlt
ret
loopne
lods
xor
inc
xor
popf
in
enter
jmp
push
ucomiss
inc
out
inc
or
mov
sub
mov
mov
frstpm(287
pop
stos
rcl
add
lcall
inc
call
cmp
push
inc
imul
inc
add
sbb
xor
sbb
jae
or
mov
sbb
cltd
pushf
rorl
out
daa
push
adc
inc
mov
xchg
lods
imul
sbb
inc
data16
sbb
inc
lahf
mov
sub
lods
mov
xor
rol
rcll
rcl
shrb
add
jge
leave
xor
lods
dec
bound
xor
dec
mov
sbb
inc
mov
rorb
lcall
xchg
dec
inc
stc
in
push
pop
enter
or
scas
pop
add
or
and
xlat
add
inc
jle
ret
lock
ror
adc
inc
add
ret
xchg
mov
jge
add
in
fsub
add
fwait
push
cmc
or
adc
dec
addr16
push
andb
cmc
push
push
mov
pop
mov
dec
call
jle
cld
push
push
sub
les
and
mov
or
leave
cmp
insl
in
push
or
push
mov
mov
fs
das
or
test
movl
call
les
adc
jge
arpl
pop
pop
adcb
inc
adc
sub
loopne
das
cmp
jae
jle
mov
pop
imul
loopne
mov
push
adc
add
fdivrl
and
pop
inc
sbb
andb
out
data16
addr16
dec
popf
lds
cs
pusha
sub
adc
ret
ret
adc
pusha
cmp
and
outsb
mov
lcall
in
jle
pop
adc
popf
and
pop
cs
push
xchg
in
test
xchg
movsl
scas
fs
push
je
push
jbe
mov
mov
mov
pushf
adc
mov
mov
lcall
imul
cmp
cmp
mov
mov
mov
jo
mov
nop
sbb
dec
add
push
push
add
xchg
xorps
repz
aaa
leave
push
cmpsl
lock
cmp
adc
shll
outsl
lock
jnp
mov
mov
out
je
cmp
mov
sbb
xor
sahf
int3
xor
adc
inc
test
insb
mov
inc
nop
vcmpgtpd
int
mov
jmp
xchg
add
pusha
ficompl
call
push
adc
cmp
out
xor
jne
sbb
rolb
and
test
popa
add
and
lea
lcall
mov
mov
nop
jp
sub
popf
test
cmp
inc
int
sbb
daa
and
or
jnp
sub
fistps
mov
jae
jb
andb
mov
or
lretw
pop
sbb
or
mov
jb
push
pop
mov
pop
rcrb
ret
xchg
push
inc
inc
add
enter
sar
aam
lret
shll
inc
sbb
rolb
sbb
mov
add
test
pusha
nop
mov
sarl
sub
pop
xchg
jo
fwait
mov
pushf
lcall
out
iret
adc
jle
mov
aaa
or
rorl
in
jne
cmpsl
or
jns
stos
mov
push
or
rcrl
xchg
xor
fs
adc
inc
ss
sub
and
lods
adcb
fwait
ret
push
push
jae
push
jo
mov
mov
cld
je
and
je
sbb
xor
les
cmp
mov
in
add
sub
sar
push
cltd
sbb
inc
repnz
ficomps
push
cmp
sub
add
mov
jae
popa
shlb
idivb
sbb
mov
and
jp
loopne
out
adc
es
push
shlb
jge
adc
and
jmp
int
push
outsl
push
rolb
call
xor
jge
std
ficoms
cmc
loop
ficomps
adc
and
jge
popf
ret
add
xorl
mov
inc
sarl
iret
inc
mov
jno
imul
shrb
inc
insb
cmpsl
push
inc
adc
sub
shrl
jmp
sahf
adc
loopne
jae
aad
int
pop
sbb
sbb
pop
mov
scas
adc
daa
pop
in
in
sbb
xor
push
xor
xor
mov
push
nop
negl
add
inc
xchg
adc
xchg
xor
psubusw
sbb
rolb
loopne
inc
popa
aaa
cwtl
mov
xorb
daa
iret
cmp
andl
add
and
mov
scas
sbb
and
aad
orl
sub
mov
add
in
jns
sub
add
repnz
out
imul
and
daa
es
pop
es
sbb
mov
pop
push
xor
sbb
insl
cs
cmpsb
sbb
push
xor
ret
dec
stos
push
cmpsb
dec
adc
jmp
lods
mov
add
aaa
mov
jp
shl
jb
jge
push
inc
sub
icebp
adc
adc
int
imul
inc
push
in
mov
mov
push
jle
mov
xchg
sub
push
lods
push
inc
int
or
cmp
cmp
mov
insb
fwait
nopl
pop
inc
sub
aam
dec
pop
xor
icebp
ret
add
inc
cmpsl
mov
fadds
lret
sbbb
jl
test
or
imul
mov
jae
xchg
adc
repnz
lds
clc
cmpsb
sub
dec
add
sub
mov
fwait
nop
adc
mov
sub
push
add
sub
and
movsb
inc
push
adc
andl
fnstcw
dec
and
dec
add
xchg
xchg
loopne
loopne
popa
mov
push
leave
pop
jl
push
and
xor
loop
inc
jno
popf
push
imulb
sbb
mov
mov
gs
aas
gs
jle
lods
add
mov
cmp
mov
leave
adc
inc
jo
in
aam
sbb
xor
adc
icebp
mov
pop
add
add
xchg
jmp
arpl
add
imul
loope
cli
inc
inc
icebp
push
mov
out
imul
cltd
jns
lds
pop
mov
inc
popa
mov
movl
and
mov
inc
add
xchg
mov
insb
jb
popa
cmpb
fld1
or
add
test
add
test
pusha
push
scas
test
lret
mov
inc
cmp
inc
lcall
loope
shll
push
cs
add
jmp
ss
daa
pop
ds
sbb
cwtl
and
roll
js
jb
mov
mov
mov
pushf
into
in
mov
sbb
jb
enter
ret
adc
subl
xor
les
inc
sub
adc
sub
mov
sbb
xchg
adc
pop
adc
and
fnop
fmull
push
and
add
xor
out
xchg
cmp
adc
add
mov
inc
lods
sbb
imul
scas
inc
inc
int
les
orb
pusha
or
sbb
aam
xor
hlt
je
int
pop
cmp
inc
xchg
out
cmpsl
pop
push
in
inc
push
push
cmpsb
or
call
cltd
sub
scas
add
mov
push
sbbb
push
adc
call
jbe
movsl
cmp
das
addr16
pop
push
xchg
scas
push
xorl
mov
adc
jno
xchg
out
fwait
pop
dec
or
add
pushf
and
add
push
hlt
stos
mov
add
subps
aas
mov
sti
jo
add
ret
addr16
cwtl
call
sbb
fistpll
divl
scas
mov
xor
rol
aad
sti
insl
push
pop
add
push
lcall
test
sub
push
cmpsb
dec
outsl
inc
jae
jb
inc
xor
xor
mov
jo
popa
lahf
jmp
jb
lods
or
mov
mov
cwtl
cmp
js
aam
rorl
inc
jae
pop
dec
sbb
dec
pop
sbb
cvtps2pd
cmp
cmp
cs
mov
or
mov
push
and
int
lcall
pop
jae
jo
jbe
test
add
pop
pop
xor
movsl
outsb
cmp
leave
loope
mov
dec
push
jo
jae
mov
dec
rcrl
pusha
add
and
jae
addl
push
outsl
das
jae
pushw
mov
addl
test
pusha
push
rcrb
push
or
cmp
cmpsl
push
xchg
roll
xchg
sarb
adc
in
xchg
icebp
jge
or
fisttps
pop
xchg
jmp
xchg
leave
das
jle
cmp
sub
test
lcall
pusha
stos
call
adc
inc
or
or
inc
adc
daa
xor
xchg
add
out
popa
test
mov
insb
ja
sbb
in
add
and
sbb
and
cmp
push
test
inc
scas
pusha
enter
loope
ficompl
adc
js
mov
and
or
push
and
push
xor
scas
inc
daa
xor
dec
int
imul
pop
fldl2e
nop
mov
sub
adc
or
pusha
dec
push
sub
imul
jnp
aam
popa
ret
out
pusha
popa
call
in
or
scas
shl
add
fisubl
cmpsl
adc
jae
xchg
arpl
cmp
add
sbb
call
in
sub
aad
cmc
stos
mov
shr
push
sbb
ljmp
pop
push
xchg
ss
or
scas
mov
or
pop
rclb
xor
rcrb
test
sub
daa
andl
aas
and
sbb
add
push
mov
jae
inc
mov
mov
adc
cmp
push
ds
dec
cltd
jb
sti
mov
add
xlat
push
mov
cmp
jbe
jecxz
push
or
out
clc
test
or
or
mov
push
repnz
nop
and
mov
ret
adc
cmp
add
or
push
sbb
jp
push
add
or
mov
xchg
icebp
fwait
sbb
sub
inc
shrb
push
stos
stos
ss
dec
push
or
mov
cmp
cltd
cmp
loope
addr16
add
enter
pop
aad
cmp
aam
cmp
push
push
lcall
mov
sub
xchg
sbb
les
adc
push
cmp
lret
jle
xor
shl
cmpsb
addr16
rcll
cmp
mov
adc
bound
cmp
and
inc
jnp
xor
call
push
loop
imul
and
inc
xchg
xor
ficoms
icebp
add
in
sbb
andb
adc
out
inc
rorl
daa
dec
add
and
popf
sbb
inc
in
inc
pusha
xor
lcall
loopne
int
cmpsl
hlt
lock
add
or
shll
scas
mov
xchg
or
mov
mov
cltd
outsl
xor
lods
mov
lahf
es
jmp
das
call
sub
add
xor
mov
fimull
xchg
push
add
jb
jb
sub
movsl
jbe
sub
addb
jne
add
jo
sbb
inc
cmp
push
add
aad
subl
mov
jb
cmpsl
fnstsw
push
xlat
push
push
push
fimull
cmp
inc
inc
xor
jo
int
bound
stos
jp
xchg
mov
xlat
ret
add
lahf
outsb
and
nop
and
outsl
rolb
adc
insb
pusha
mov
into
jmp
in
sbb
mov
scas
int
push
push
mov
jnp
add
jmp
movsb
push
push
ljmp
and
test
cmp
adc
push
test
mov
sub
mov
xchg
jno
cs
sbb
push
sub
push
in
ljmp
xchg
rorl
pop
in
pop
jp
inc
xchg
jb
pop
jo
les
mov
rolb
mov
xor
pop
movsl
add
nop
and
inc
sbb
or
sbb
shl
orl
sbb
scas
inc
int
push
and
ss
xchg
add
push
int
or
or
enter
adc
and
jbe
inc
mov
cmp
adc
cmpsb
mov
inc
lret
test
aaa
lods
pushf
mov
dec
mov
xlat
pop
mov
leave
adc
dec
insb
mov
push
xor
movsb
add
mov
xor
push
jbe
or
push
jae
pop
cs
and
jae
add
fisttpl
rolb
movsl
xchg
push
js
mov
sub
push
mov
inc
pop
cwtl
xor
adc
pop
inc
daa
mov
adc
ret
mov
loopne
mov
mov
push
add
push
sbb
inc
lret
mov
xor
mov
nop
mov
inc
mov
cmp
aad
sbb
addr16
jne
jo
lret
mov
push
sbb
add
in
jne
icebp
sarl
inc
cmpsl
dec
or
inc
xor
sub
addl
mov
subl
insl
sbb
popa
popf
dec
fdivp
inc
inc
das
inc
jmp
dec
push
jb
enter
and
cmp
jl
loopne
or
xor
mov
pop
sbb
jnp
push
xchg
test
in
cwtl
cmp
mov
call
jne
cmp
icebp
mov
or
push
inc
jp
jb
mov
xor
push
pop
mov
rorb
sbb
cmp
xor
xchg
add
sahf
addl
iret
push
addr16
clc
and
jo
ret
jno
loope
sub
cmpsb
pop
sbb
lock
mov
xchg
imul
orb
push
jl
cmp
fs
test
ds
add
push
stos
xchg
cmc
add
push
xor
push
push
test
and
jae
sub
pop
inc
ss
or
mov
scas
mov
nop
and
adc
push
sub
cwtl
out
rolb
and
adc
push
mov
jge
lret
add
movsb
popa
inc
mov
and
out
sub
and
sbb
popa
outsl
xor
ss
pop
js
roll
push
xchg
or
pand
sbb
jp
adc
mov
addb
push
cmp
jecxz
jae
call
gs
pop
mov
es
gs
enter
or
sbb
scas
or
stos
mov
data16
out
bound
or
push
add
aad
lcall
loopne
shrl
test
adc
movsb
daa
lea
rorl
xorb
sub
movsb
jo
adc
test
in
fnop
adc
jb
sub
outsb
sub
jecxz
push
scas
cmp
jae
pop
cmpl
cmp
cmpsl
sbb
into
push
jns
addr16
cmpsl
cmp
jecxz
jl
inc
mov
jns
push
push
push
adc
push
dec
sbb
stos
insb
arpl
sub
inc
adc
loopne
loopne
hlt
out
aad
cltd
jo
mov
mov
jae
xor
push
pop
int
sbb
mov
xchg
imul
dec
pusha
mov
xchg
jae
pushf
xor
xchg
push
mov
lcall
mov
in
mov
test
cwtl
push
inc
push
sub
pop
add
in
jo
ret
cmpl
inc
add
sub
enter
pop
shl
lret
lock
hlt
in
adc
or
loopne
fsubrl
stos
adc
in
sbb
lret
cs
jo
addr16
je
add
mov
add
pop
int
std
shll
popa
inc
xor
dec
cltd
cmp
jmp
call
xchg
addr16
sbb
roll
pop
add
subl
push
jae
mov
add
adc
sarl
sbb
icebp
push
add
addr16
mov
inc
sub
mov
ret
sbb
rcrl
and
push
jno
add
fisttpll
inc
add
dec
cmp
jne
push
dec
sub
add
jge
sbb
inc
inc
push
jp
call
fwait
cwtl
insb
xor
cwtl
adc
imul
xchg
dec
mov
daa
inc
lret
cld
add
xor
mov
adc
adcb
or
jnp
xchg
sbb
lea
jb
xor
ja
or
dec
or
es
or
ja
inc
jae
dec
stos
out
adc
push
notl
loope
push
stos
inc
xor
inc
aam
arpl
loop
jbe
adc
lahf
push
sub
loopne
mov
pushf
dec
sbb
subb
push
pushf
jnp
jbe
subl
mov
jge
add
sub
and
adc
daa
lahf
mov
push
xor
or
and
xchg
ret
out
subb
ljmp
arpl
pusha
scas
jns
inc
jbe
loope
int
pop
or
pop
icebp
adcl
cs
bound
or
xchg
int3
push
add
xor
or
xor
fnstcw
aam
xchg
ret
nop
movsl
repnz
inc
jae
mov
je
out
or
lock
fldcw
mov
mov
mov
arpl
mov
xchg
stos
add
fidivl
popf
dec
jo
xchg
dec
arpl
push
and
cmp
xchg
leave
xchg
jae
dec
or
pop
pop
adc
inc
sub
adc
dec
outsl
sub
inc
jmp
sub
mov
cwtl
xor
pop
push
cmp
jp
pop
push
pusha
xor
or
punpcklbw
and
dec
inc
cmp
movsl
push
mov
enter
xor
out
fsubl
subb
scas
adc
dec
mov
or
mov
add
daa
cmp
xchg
pop
cmp
sahf
add
add
xchg
stos
mov
mov
pop
adc
jae
mov
inc
call
int3
mov
xor
lods
rorb
add
std
add
push
push
scas
jp
xchg
int
jnp
mov
pop
pop
jle
sub
adc
xor
push
pop
daa
push
push
int
inc
dec
adc
jmp
add
loopne
jmp
adcl
add
adc
mov
jo
xor
rclb
add
jl
add
jg
fsubs
jae
push
xbegin
shll
add
add
orl
or
inc
xor
mov
mul
push
dec
inc
sbb
add
in
fiaddl
add
icebp
jle
adc
inc
shlb
cmpb
lock
movsb
jle
add
stos
pop
loopne
leave
js
in
or
mov
in
or
xchg
fcomps
sbb
push
adc
mov
ljmp
cltd
lret
adc
sbb
cld
movsl
pusha
xchg
hlt
push
cmp
daa
add
nop
ret
jg
mov
sbb
pop
lcall
inc
and
add
push
and
sub
dec
cmc
or
cmp
mov
push
lods
scas
push
mov
or
jae
loop
pop
inc
adc
jb
stos
xor
inc
cwtl
pop
mov
add
lret
adc
jo
push
cmp
dec
inc
mov
subb
outsb
add
xchg
mov
test
sbb
loopne
dec
xor
xor
cmp
push
movsl
sbb
push
in
mov
arpl
inc
xchg
jae
in
push
jnp
xor
and
adc
call
mov
sub
dec
cmp
sub
lret
mov
imul
xor
xchg
ret
das
and
lret
push
mov
adc
or
inc
mov
xchg
fldl
inc
rcll
rolb
push
xorb
sub
inc
imul
push
cmp
jb
mov
xorb
pop
jne
inc
sub
test
adc
pusha
push
adc
xchg
xor
sbb
sbb
pop
scas
sub
and
jno
mov
adc
fisubrs
adc
into
data16
leave
inc
add
out
adc
xchg
push
mov
and
mov
loopne
mov
xchg
cwtl
xchg
daa
add
cmp
lcall
sub
inc
lcall
hlt
jnp
dec
add
lret
inc
scas
insb
movsl
xlat
dec
aam
sbb
jne
xorl
loopne
adc
into
add
lds
or
inc
test
je
add
and
inc
xchg
dec
orb
test
xchg
jge
insb
jns
adcl
addr16
js
xor
pop
mov
dec
push
jns
or
lcall
cmp
int
push
pop
adc
add
xor
adc
or
enter
orb
lods
das
mov
popa
jo
sub
ss
push
inc
inc
xchg
rcll
ss
loope
xchg
cmp
push
pushf
test
jmp
adc
inc
xor
adc
pushf
add
into
and
inc
mov
push
mov
cwtl
dec
repnz
movsb
xlat
pop
cltd
or
xor
pop
in
push
adc
dec
sub
orb
pop
aad
push
push
or
pop
push
es
dec
adc
lret
and
out
cmp
mov
aas
xor
call
cmp
xor
push
ficomps
sub
cmp
or
cmp
cmp
in
cltd
mov
lcall
in
loope
fs
push
pop
sbb
xor
or
add
shlb
leave
add
adc
and
scas
mov
inc
cmp
dec
pcmpgtb
jge
jae
loopne
lret
cmpsb
shlb
push
xchg
daa
xchg
push
push
pop
mov
dec
push
jmp
xchg
jo
fadd
movsb
sub
sbb
je
dec
mov
pop
sbb
out
xchg
les
cltd
sbb
mov
es
push
xor
lcall
or
cmp
xor
jle
push
push
test
sbb
ss
mov
mov
cmp
cs
int
es
fadds
push
inc
inc
push
jle
push
test
pop
push
push
adc
jo
dec
test
in
mov
mov
or
xlat
cmc
addl
push
mov
or
xchg
imul
mov
mov
sbb
pushl
mov
pop
inc
xlat
pop
add
sub
inc
addl
jmp
stc
in
fcoms
cmp
movsl
js
and
aas
repnz
setge
sub
jne
subb
adc
mov
mov
jmp
imul
add
cmp
dec
mov
cmp
push
fs
inc
jnp
cmp
dec
aad
test
pop
shll
xor
push
sub
xor
sbb
pop
pop
mov
test
fidivrs
xchg
pop
int3
mov
andl
ret
ds
sbb
jb
movsb
or
loopne
inc
aas
icebp
dec
lea
inc
roll
mov
xchg
sub
je
mov
cwtl
push
jp
pop
push
scas
xor
stos
sub
xor
fmul
lock
cli
test
mov
jp
mov
xchg
sub
and
add
and
rolb
or
rorl
orl
add
push
addr16
jge
lods
jae
mov
and
mov
jge
es
popf
stos
rclb
jae
adc
xchg
addr16
push
stos
adc
inc
xor
loope
popa
in
lcall
pop
loope
in
cmpsl
stc
jo
clc
and
push
lea
push
xorl
xor
shl
inc
dec
into
lahf
add
out
fiadds
stos
mov
xor
and
ljmp
lds
add
jo
push
push
ficoms
scas
cmp
add
ret
jnp
mov
xchg
xor
inc
sbb
sub
scas
and
daa
dec
push
mov
mov
jnp
fstpt
push
xchg
adcb
xorl
cmp
ret
outsb
push
inc
push
jge
aad
movsb
or
mov
xchg
xchg
jae
ret
pop
push
scas
xlat
test
arpl
pop
adc
mov
mov
push
inc
loop
orl
mov
shll
xchg
and
inc
scas
iret
xor
repz
sbbl
xor
outsb
jg
ret
or
xor
pop
cmp
das
or
cmp
ljmp
jb
aaa
mov
ret
fwait
xorb
mov
sbb
pop
xor
fidivs
inc
mov
cmp
adc
push
iret
xor
shll
and
mov
jmp
into
gs
movsl
push
push
add
lods
leave
xor
fistps
cmp
cmpsl
push
xor
and
pushf
sub
xchg
push
push
or
ret
in
cli
push
mov
push
jae
mov
mov
adc
dec
aam
adc
xor
loop
sub
mov
bndstx
dec
aad
hlt
pop
cmpps
jnp
stos
iret
sub
fistl
pop
xorb
jo
out
addr16
cmp
subb
icebp
lea
push
popa
xchg
mov
mov
js
lcall
ret
sarb
and
jo
add
insb
and
mov
adc
jb
out
xor
pop
adc
inc
adc
dec
mov
add
push
cmp
pop
insb
popa
push
inc
rol
sbb
xchg
je
push
and
and
jge
lcall
adc
int3
insb
inc
sub
nop
mov
pusha
mov
lcall
jge
add
add
add
jmp
xor
ficoml
or
inc
shll
xor
das
loop
sbb
pop
stos
es
mov
jp
mov
xor
cmp
leave
das
aad
push
popf
push
or
push
lcall
shrl
es
roll
or
pop
dec
inc
imul
stos
subl
push
test
sti
mov
pop
in
sub
pop
jne
and
cmp
addr16
test
aaa
cmp
leave
rcrl
mov
popf
nop
or
mov
or
push
cltd
add
mov
ret
iret
push
xchg
or
add
push
mov
ds
enter
int
cmp
pusha
and
or
xchg
mov
sbb
std
outsl
jb,pn
dec
mov
inc
add
jmp
mov
inc
into
or
call
fsts
insb
stos
fisttps
push
pop
js
inc
add
pop
shrl
pusha
mov
lret
cmp
bound
sbb
xor
setb
push
addr16
fiaddl
adc
jae
and
mov
adc
cmp
dec
out
rolb
inc
fidivl
sbb
inc
repnz
cwtl
testb
mov
lcall
js
sarb
imul
arpl
adc
push
notl
mov
xchg
jns
push
sbb
or
xchg
cltd
dec
pop
adc
cs
gs
xor
inc
jl
adc
push
call
cmp
imull
lock
mov
pop
or
lds
fs
mov
push
dec
pusha
aaa
dec
adc
rolb
bound
rcr
or
cmp
add
clc
test
push
xor
cmc
cli
inc
scas
push
scas
mov
aam
push
jae
mov
pop
push
loopne
inc
pop
in
jno
faddl
shl
xchg
mov
call
xor
cmpsb
mov
add
adc
stos
lret
jp
or
jae
adc
adc
pop
ljmp
lock
push
mov
pop
xchg
fdiv
cs
in
popa
add
lock
stos
inc
mov
ret
and
cltd
pop
push
cmp
push
es
and
pushf
cmpsb
orb
sub
loope
scas
pop
int
adc
popf
inc
xchg
mov
arpl
stos
pop
sub
lea
mov
out
add
xor
aad
xchg
pop
mov
push
fwait
arpl
jg
addr16
and
xor
push
daa
mov
pop
jge
xlat
sbbb
scas
jmp
subb
dec
add
jge
pmulhuw
mov
push
addb
mov
insb
loopne
add
cwtl
mov
lcall
push
sbb
out
dec
hlt
ret
lcall
jge
lock
scas
or
push
push
movsb
xchg
jle
addl
xchg
sub
or
mov
cmp
jno
fwait
push
repz
sbb
or
mov
dec
inc
mov
cwtl
std
enter
stos
mov
outsl
leave
jg
loop
inc
add
pop
mov
sub
dec
mov
std
inc
mov
adc
dec
nop
jns
arpl
out
dec
mov
push
xor
add
outsl
insb
pop
shrb
test
sti
and
add
lods
incl
out
add
mov
push
pop
dec
and
adc
mov
jae
or
xor
push
mov
sub
inc
fdivrp
cs
or
rclb
mov
sti
out
rorl
push
lahf
or
ret
sub
movl
push
mov
mov
rorb
stc
adc
pop
movsl
inc
lock
mov
scas
xchg
fstpl
ret
jno
mov
nop
or
jg
add
dec
xor
push
lea
rcr
push
push
or
add
sbb
add
dec
add
add
jo
pop
mov
cmp
xor
adc
dec
and
test
and
mov
inc
packssdw
sbb
int
mov
add
or
xchg
imul
leave
xchg
das
or
xchg
mov
clc
cltd
push
fs
mov
add
jo
push
inc
cmpsb
pop
dec
pop
test
cmc
mov
cmpsb
jmp
adc
mov
jge
xlat
and
out
or
push
test
into
add
add
enter
imul
xchg
push
mov
loop
stos
cltd
sub
mov
or
out
mov
jmp
aad
jo
rcrb
mov
jge
dec
rolb
andl
mov
gs
pushf
add
sbbb
add
dec
push
js
dec
daa
lcall
pop
and
adc
out
add
sbb
jl
add
or
cmpsb
icebp
sub
or
jae
sub
or
inc
xchg
pusha
cmp
and
adc
cltd
inc
add
inc
push
loope
and
mov
loope
adc
fsubrs
imul
inc
aam
sbb
adc
int
add
and
sbb
and
dec
scas
out
sub
xchg
rolb
cmpsb
or
sbb
push
fidivrl
xchg
scas
adc
push
xor
mov
fwait
jecxz
imul
cltd
push
mov
xor
inc
mov
or
mov
pop
shl
dec
mov
lea
icebp
mov
andl
and
xlat
pop
add
xchg
jo
lahf
or
cmp
sub
sbb
pop
adc
push
sub
pop
cmp
adc
test
push
xchg
loopne
jne
and
push
mov
aas
sbb
inc
popf
popa
iret
add
sbb
lea
call
sbb
dec
add
mov
cltd
cwtl
rolb
ljmp
sbb
push
sti
andb
lret
in
add
push
push
inc
imul
cs
scas
mov
rclb
sahf
adc
xchg
sub
jno
sub
divl
add
clc
sbb
movsl
fs
inc
xchg
add
lret
push
inc
jae
test
es
orl
xchg
jb
inc
fiadds
inc
pop
pop
test
and
xchg
sbb
fs
jo
or
xlat
inc
or
cmp
insl
int
mov
daa
rcrb
push
sbb
leave
mov
daa
and
stos
or
loope
add
cmpsl
jae
bound
adc
xor
adc
sbb
jae
fsubrl
mov
cmp
adc
jo
sub
mov
imul
mov
loop
insb
and
xor
dec
pop
pop
adc
add
inc
push
xorl
mov
shrb
push
push
into
and
popa
stos
dec
mov
pop
scas
and
or
add
in
sbb
xchg
test
jp
xorl
jo
sub
add
adc
in
mov
xchg
leave
pop
mov
and
xor
adc
sbb
imul
mov
cmp
enter
pop
aam
outsl
inc
adc
lods
add
inc
or
add
scas
inc
mov
into
pusha
stos
pop
and
xchg
test
addr16
or
mov
or
ja
xor
ja
adc
ret
lcall
sub
shrb
into
mov
xor
add
dec
or
push
push
sub
jbe
mov
inc
cmp
and
lods
add
cmp
xor
in
inc
jge
test
add
push
mov
cmp
pop
out
add
add
xchg
sub
mov
jno
enter
push
jnp
out
xchg
add
ficompl
xchg
andl
xor
sbb
leave
add
aam
in
add
push
lds
xorb
sub
push
push
cmpl
xchg
lahf
clc
dec
sbb
test
add
sbb
add
not
loop
inc
sbb
adc
sub
inc
or
xor
pusha
mov
ljmp
dec
leave
add
or
fiaddl
lret
xor
xor
test
xor
add
jge
or
cli
callw
je
in
adc
adc
popf
test
adc
fsubl
sub
sbb
add
sub
mov
push
test
je
adc
punpckhbw
jg
test
xchg
adc
adc
sbb
es
sub
dec
dec
mov
lcall
adc
adc
mov
je
or
iret
aam
in
out
push
stos
jns
xor
sbb
leave
gs
inc
xchg
jae
rolb
jne
sub
mov
orb
dec
fwait
jno
jmp
pop
add
mov
sub
add
enter
add
push
jae
sub
cmpsl
loop
mov
stos
and
addr16
test
adc
in
dec
cltd
or
push
cmp
mov
mov
inc
scas
cmp
adc
es
push
or
into
clc
shlb
jae
fsubrs
xor
shlb
adc
or
loope
fstpt
or
int
adc
xchg
mov
pop
add
out
insl
mov
jge
xor
sbb
xchg
xor
xchg
add
push
test
push
push
push
add
add
adc
inc
cltd
add
mov
or
data16
and
roll
clc
sub
push
addr16
inc
daa
sbb
sbb
push
cltd
xor
add
push
and
gs
data16
sbb
mov
jae
test
cmpsl
hlt
or
mov
sbb
push
xchg
cmpsl
sbb
lcall
pusha
sub
lret
sub
inc
inc
scas
in
inc
in
inc
scas
cmp
loopne
nop
adc
mov
mov
roll
mov
sbb
mull
lahf
fs
pop
mov
pop
xchg
sub
jg
add
bound
fwait
sub
imul
orb
mov
or
mov
mov
ljmp
add
push
xor
dec
lods
lsl
adc
xchg
add
xlat
fstl
xchg
mov
cmp
subl
ljmp
cmpsb
push
or
cmp
adc
xor
stc
imul
ss
in
sub
mov
sar
pop
add
xchg
jnp
aaa
call
daa
jnp
mov
stos
popf
or
xchg
sahf
sub
push
xor
aam
ds
sbb
inc
add
inc
int
dec
fwait
and
xchg
mov
cmpsb
add
pop
push
mov
mov
xchg
cmp
or
sub
mov
test
xchg
add
mov
roll
dec
das
sahf
paddq
add
into
add
push
pop
push
cwtl
push
int
cmp
arpl
in
push
lea
lret
loopne
push
scas
add
test
push
clc
add
cmpsb
ljmp
push
jae
sbb
xor
cmp
mov
add
dec
rcrb
and
mov
mov
stos
mov
jbe
dec
mov
add
cmpb
jo
add
rcr
xor
adc
shll
out
andb
add
cmc
scas
cmp
ret
icebp
int
dec
int
adc
cmp
or
fstps
mov
enter
xchg
xchg
or
mov
adc
xor
push
inc
mov
adc
push
mov
in
out
loopne
mov
sub
dec
cmpb
loopne
adc
inc
mov
push
pusha
lret
dec
cmp
mov
loop
mov
sbb
add
test
and
in
add
test
xchg
sahf
fisttps
in
push
add
call
push
sub
icebp
add
ret
in
dec
lock
aam
add
shlb
shll
fisubs
push
sar
add
sub
cli
inc
int
mov
mov
loopne
out
push
or
xchg
pusha
xor
repz
enter
adcl
adc
lret
into
shll
dec
lret
sub
pusha
xor
and
dec
addr16
je
add
in
es
stos
add
jb
pop
xchg
pop
out
js
loope
nop
sti
shlb
in
xchg
addb
fwait
add
jo
mov
push
cmp
push
jge
addl
lret
in
dec
dec
imul
and
imul
add
add
inc
push
mov
sbb
mov
fsubl
ficompl
orb
movsb
adc
jge
addb
push
mov
jmp
dec
cwtl
and
sub
mov
cmp
xchg
push
push
orb
and
adc
sub
sbb
xor
adc
adc
add
sub
jae
push
jae
aam
scas
xor
mov
xchg
add
add
cli
popf
pop
in
push
les
or
xor
inc
stc
cmpsb
ret
pop
inc
push
dec
lret
loope
jecxz
in
scas
mov
jae
icebp
sub
or
or
jno
mov
or
data16
cmp
shll
sbb
inc
xchg
fstp
push
add
cmp
adc
push
into
jmp
xchg
and
cmp
into
hlt
inc
push
jae
nop
mov
push
jo
pop
xor
mov
leave
add
loop
popa
xchg
leave
xor
test
test
mov
add
ljmp
mov
in
adc
add
jo
sahf
rclb
xchg
movsb
scas
add
out
and
lret
lds
push
xor
xor
inc
inc
leave
sub
add
out
adc
stos
iret
cltd
addr16
adc
inc
sbbl
shl
das
std
jg
mov
pop
push
mov
and
mov
bnd
add
js
cmp
sub
add
mov
inc
dec
pop
push
sub
mov
stc
xchg
fcomp
dec
add
push
jns
mov
inc
add
push
add
dec
push
push
adc
add
push
inc
adc
sub
push
fwait
mov
add
cmc
inc
dec
adc
sbb
les
sub
mov
push
mov
or
pop
nop
add
mov
in
push
int3
mov
add
mov
dec
inc
jno
push
mov
or
jle
xchg
gs
lret
insl
outsb
pop
mov
shrb
push
cld
sahf
lahf
cmp
mov
loopne
adc
movsb
and
inc
aad
cmp
cmp
jg
xchg
pop
inc
lahf
andb
xchg
mov
sub
add
and
rorl
push
rcrl
pushf
ret
and
cmp
loopne
hlt
sub
jb
test
outsl
push
in
add
cmpsb
inc
sbb
jo
pop
jecxz
lock
shll
rolb
insl
ret
loopne
adc
popa
and
mov
out
cmp
mov
sbb
and
or
jae
pop
gs
push
and
cmpsb
push
inc
movsb
jae
dec
xchg
and
cmpsl
sub
into
inc
inc
cmp
pop
jnp
dec
add
adcl
hlt
pushf
movsl
push
xchg
lcall
les
cmp
mov
repnz
cmp
imul
sub
push
jo
imul
ljmp
lahf
push
inc
imul
xor
xor
stos
int
add
stos
fdivrs
adc
pop
add
cmp
movsb
and
xlat
mov
add
xor
pop
cmp
rcrl
xchg
mov
aam
add
jge
test
inc
mov
add
mov
stos
sbb
cmp
xor
scas
jg
enter
or
push
jae
jge
roll
mov
das
or
xchg
dec
cld
test
cltd
mov
in
cwtl
andb
std
loope
push
xor
mov
inc
add
jo,pt
or
test
push
adc
dec
sbb
pushf
rorb
addr16
scas
ja
add
add
andb
mov
or
sub
and
push
orb
inc
out
sub
xor
mov
jg
mov
dec
jo
cmp
dec
stc
dec
inc
jae
push
sub
ljmp
add
scas
sub
mov
mov
mov
or
push
repz
dec
jle
mov
pusha
add
imul
icebp
pop
jmp
sub
and
jge
cltd
inc
inc
cmp
cmpsb
mov
es
call
jmp
shl
fcmovbe
je
mov
loopne
sbb
mov
icebp
call
dec
faddl
push
xchg
js
dec
jp
push
andb
cld
push
cli
sub
jb
pop
pusha
int3
mov
pop
or
addb
test
sbb
loope
or
int
xor
pop
push
push
aad
jb
call
sbb
and
xchg
dec
dec
push
inc
xor
push
or
int
subb
sub
push
nop
fisubrs
pop
fs
push
shll
cmp
ret
push
sbb
jnp
adc
sub
mov
add
push
inc
clc
adc
push
and
scas
dec
jg
shlb
fnstenv
inc
int
cmp
loopne
cmpl
notb
xchg
scas
jge
dec
xor
push
and
cmpsb
push
popa
sub
xor
mov
sub
int
or
or
lds
dec
xlat
fdivl
int
mov
mov
push
add
dec
cwtl
xor
mov
orl
push
cmp
fadds
enter
sub
and
popa
jb
fcoms
in
cmp
popa
add
sub
pop
pop
pop
xchg
pop
pop
mov
mov
sub
xor
addb
cld
xor
orl
inc
or
or
pop
mov
dec
scas
push
adc
aad
test
inc
movsb
xor
shrl
mov
push
loope
push
out
das
fidivs
adc
inc
jae
add
inc
or
into
loopne
or
and
pop
sbb
jo
or
je
bound
push
int
icebp
cmp
or
mov
fldt
ret
adc
mov
sbb
inc
loope
aas
pop
push
decl
loope
cwtl
mov
and
mov
popf
or
mov
add
inc
push
or
jb
jnp
mov
les
mov
add
arpl
ret
cmp
or
pop
and
inc
jp
push
sbb
inc
fs
jns
mov
adc
int
dec
inc
imul
push
push
mov
fadds
inc
lcall
or
cmpb
mov
push
push
pop
mov
test
push
cld
push
aas
sbbb
dec
insb
imul
mov
jo
push
push
test
fsubrl
fwait
cli
lds
mov
ret
add
enter
jne
lcall
in
daa
cli
xor
inc
mov
sub
inc
xor
or
lahf
add
cltd
mov
gs
sbb
loop
dec
pop
divb
insl
mov
inc
nop
and
mov
mov
pusha
loopne
rorb
ret
dec
stos
or
add
jo
mov
daa
lea
sub
enter
and
aam
lds
cwtl
out
mov
pushf
fstpt
ficoml
mov
subl
xor
into
xchg
sub
mov
cmp
mov
sbb
test
das
fisubl
jb
sbb
jge
out
lcall
xor
mov
movsl
inc
je
mov
inc
in
jbe
addr16
xchg
je
adc
sbb
std
mov
clc
push
pop
or
jo
jg
xor
sti
lcall
pop
pop
or
lcall
inc
jae
orl
mov
jo
orb
mov
lahf
insb
pop
jb
and
mov
add
mov
inc
fiaddl
data16
jne
inc
scas
andb
jp
movsb
int
xor
sub
pop
sub
xchg
mov
les
es
fstps
popf
jnp
rorb
jae
add
cmp
mov
add
subb
sbb
mov
add
and
adc
sbb
leave
add
dec
sbb
loopne
sub
mov
aam
mov
int
hlt
sti
cmp
test
adc
shll
cs
pop
aam
inc
adc
inc
sbb
xchg
rclb
in
lcall
ljmp
add
leave
imul
pusha
add
fdivrs
or
add
shr
sbb
sbb
test
scas
lods
aam
mov
add
adc
mov
in
cmpb
rcrl
rclb
or
sarb
outsl
mov
lahf
sbb
push
mov
dec
test
addl
ss
add
jle
iret
mov
cmp
sub
mov
cmp
add
or
sbb
ret
pop
jo
mov
aas
ret
gs
outsb
xchg
jae
or
add
push
or
mov
push
mov
sbb
scas
sub
mov
xor
rcll
sbb
sbb
jae
sub
mov
inc
xor
push
mov
adc
pop
inc
and
daa
adc
sbb
cmp
das
test
xor
and
call
es
dec
je
push
pushf
add
pop
mov
mov
push
add
or
out
and
rorb
loope
pusha
call
adc
test
pop
sub
and
or
mov
mov
hlt
add
test
sub
pushf
imul
pop
loopne
xchg
push
pop
xor
int
or
add
pop
ss
sub
xchg
mov
aam
adc
adc
push
xchg
repnz
sarl
sarl
xlat
or
and
jo
adc
sar
adc
add
dec
mov
inc
xchg
add
scas
add
add
ret
shlb
cmp
pushf
pop
mov
subl
leave
push
xor
and
mov
add
mov
xchg
or
test
imul
jnp
inc
xor
aaa
mov
std
xlat
jp
out
adc
jne
jg
shlb
mov
shl
ret
lods
xchg
mov
ret
push
rcrb
sub
xlat
idivl
data16
add
adc
in
push
xchg
mov
mov
lcall
mov
push
push
mov
inc
out
add
mov
shrb
dec
outsb
sbb
cmp
daa
xchg
pop
adc
adc
sbb
mov
jnp
popl
or
pop
scas
adc
add
push
adc
ljmp
inc
mov
sbb
ret
push
les
inc
andl
jae
imul
push
cwtl
inc
ret
inc
fisubrs
into
hlt
and
iret
addr16
sub
scas
mov
out
js
xor
add
mov
push
inc
lahf
xor
out
add
stos
shrb
add
adc
and
adc
scas
mov
adc
xlat
inc
mov
or
in
popa
adc
test
inc
aad
scas
test
leave
push
jnp
ret
xchg
lea
adcl
or
add
in
hlt
add
mov
jmp
jecxz
push
repz
sbb
add
jge
adc
add
and
pop
ret
xchg
push
adc
clc
adc
adcl
aas
cltd
or
mov
scas
inc
les
or
mov
mov
adc
dec
repnz
jmp
leave
loopne
mov
push
test
test
inc
adc
xor
fst
sub
pop
jb
repnz
and
cmp
scas
jo
pop
prefetch
rclb
push
scas
cld
orb
int
imul
and
add
loop
adc
aad
push
mov
pop
xor
inc
cltd
xor
jnp
mov
shlb
stos
loopne
adcl
les
shl
shll
inc
fsubs
mov
call
xchg
jecxz
mov
cwtl
xor
lock
and
addr16
call
mov
inc
add
insl
add
inc
test
jle
or
cs
add
or
push
pop
dec
fbstp
incl
call
sub
or
sbb
mov
add
int3
in
sub
es
stc
mov
nop
shll
loopne
sbb
xor
js
loope
sub
popa
or
stos
adc
push
sub
imul
and
cmp
orl
add
cmp
jge
lret
adc
inc
add
push
dec
call
sbb
jp
adc
adcl
adc
leave
in
xor
push
add
mov
jb,pt
or
inc
sub
add
sub
test
lret
and
cmc
enter
and
stos
fcoml
cltd
pop
xor
mov
pushf
and
mov
mov
or
jno
push
mov
sbb
xor
xchg
add
lret
sbb
aam
jle
inc
adc
mov
dec
shlb
add
lcall
mov
cmp
mov
arpl
inc
xchg
pop
sbb
cwtl
and
add
or
pop
aaa
pop
add
push
mov
xor
cmp
lret
xchg
test
stos
outsl
ret
jo
pusha
push
jb
or
inc
fnstcw
and
sub
xor
sbb
cs
dec
in
inc
jae
sub
gs
sbb
rdmsr
cmp
cltd
mov
add
stos
inc
das
mov
cmp
div
add
push
dec
mov
adc
add
cmp
cmp
stc
push
pop
mov
sub
mov
pop
test
in
and
fildl
lret
and
stc
dec
in
loope
and
cwtl
orb
adc
pop
xor
push
lret
cs
sti
test
push
je
jae
gs
popa
mov
and
subl
bound
cltd
mov
incl
mov
add
cmp
cmpsl
bnd
outsl
add
enter
test
xchg
imul
pop
xchg
aad
dec
std
mov
sbbl
inc
test
lcall
or
cld
sub
add
push
dec
cs
xchg
adc
push
mov
andl
cmc
add
sbb
ror
aaa
xchg
sbb
xchg
loopne
mov
sbb
or
out
jo
push
in
arpl
push
push
pop
xchg
int3
test
mov
frstor
loope
push
jecxz
popl
bound
push
sub
mov
aam
fisttpll
adc
xor
cmp
push
pop
insb
jae
lret
addr16
stos
data16
daa
rol
add
mov
add
popf
sub
loopne
add
loopne
es
cmp
test
int3
fwait
push
nop
sbb
sarb
pop
cmp
paddq
and
xor
mov
int3
ss
fisubl
push
cmp
pop
cmp
js
push
adc
sbb
not
str
fdivrl
mov
xor
xlat
and
jae
sub
jo
and
cmp
loop
addr16
mov
ror
jle
cmp
jae
orl
pop
mov
pop
push
adc
cmp
or
ret
xchg
fnstsw
mov
cmp
ret
jo
jnp
jb
cmpsb
lretw
icebp
clc
nop
cmp
pop
popa
fisubrs
andl
dec
add
inc
xor
cmp
push
push
xchg
mov
sub
scas
sbbb
fstl
daa
fnstenv
js
add
lret
cs
inc
and
sub
lds
xchg
and
add
xor
dec
aad
fcmovnbe
ds
sbb
fisubrl
and
sbb
test
addb
popa
jo
xchg
xor
mov
dec
xchg
add
jae
inc
ss
pop
add
testb
dec
rolb
lret
sbb
jle
sub
mov
push
jnp
dec
lret
mov
aad
dec
cs
or
test
andb
jne
pop
mov
dec
sub
sbb
pop
cmc
shll
mov
pop
loopne
push
out
scas
movsl
nop
and
push
cltd
or
outsb
push
add
mov
add
cmp
or
into
test
test
dec
jae
lock
jae
mov
xchg
add
xchg
or
lret
sub
inc
sbb
mov
jb
out
mov
rolb
stos
cs
mov
popf
test
dec
sub
call
push
xchg
je
dec
jp
mov
sub
xorl
pop
lock
js
mov
mov
shll
sub
gs
add
test
mov
jb
dec
sbb
aam
jnp
in
retw
scas
adc
jb
scas
lret
jae
insb
xor
pop
mov
xchg
sub
adc
pushf
fimull
aam
into
icebp
mov
xchg
or
je
push
enter
push
mov
push
cwtl
fimull
clc
pop
cs
movsb
cmpb
sub
xor
xor
pop
rclb
popf
add
xchg
dec
xchg
push
cltd
and
fs
out
cmc
push
imul
popa
js
js
mov
pop
add
dec
clc
pusha
test
ret
pushf
add
jp
push
inc
aad
or
pop
shll
es
mov
movsl
jl
ret
mov
scas
call
add
loopne
adc
add
push
cli
daa
ljmp
push
adc
xor
xchg
stos
int3
loop
aad
fsubl
mov
adc
inc
or
adc
mov
sub
mov
inc
mov
orb
cmp
or
packuswb
arpl
cltd
mov
lods
sub
cltd
shll
repnz
push
adc
jne
jmp
adc
mov
xlat
insb
add
inc
fbstp
mov
cmpsl
dec
pop
pop
outsl
sub
es
and
popa
mov
mov
push
ret
push
adc
adc
cmc
jno
push
icebp
lret
ficoms
test
pop
mov
cmp
ret
pop
es
jae
andb
jae
fisubl
sub
pop
add
xor
xchg
adc
aam
and
inc
push
add
mov
jge
in
add
mov
call
test
xchg
and
push
mov
das
and
jbe
in
mov
push
nop
xorl
xor
or
in
inc
xor
jne
movl
fbstp
movsl
jo
xorb
push
jo
rol
xor
mov
or
bswap
subl
bound
xchg
jmp
cmp
stos
test
popf
sbb
mov
lds
imul
shl
in
adc
ret
lcall
push
xor
xchg
or
push
sub
daa
es
or
push
enter
sbb
adc
jp
jae
sub
pop
mov
jae
lcall
pop
iret
in
mov
insb
lahf
push
xchg
nop
xor
dec
orl
pop
into
test
cld
jmp
add
inc
ds
sbb
sbb
dec
mov
flds
sbb
mov
push
xor
icebp
mov
andl
in
cmp
push
xor
les
push
jae
je
les
lcall
push
add
xchg
jmp
mov
int
ret
mov
add
mov
gs
mov
push
insl
pop
pop
adc
adc
add
sti
add
jo
sbb
ds
popa
jo
add
add
inc
xchg
jmp
mov
lcall
popl
sub
daa
jo
adc
imul
call
mov
rorb
adcb
pop
test
prefetch
cmp
sbb
xlat
bound
notl
out
int3
mov
add
or
mov
es
xor
push
movb
scas
sbb
rcll
cmc
sbb
mov
jp
test
orb
arpl
movsl
add
mov
adcb
mov
pop
cmp
mov
push
in
loopne
sbb
or
or
inc
adc
jo
xor
jl
sar
push
xchg
jmp
push
and
mov
xchg
mov
scas
pop
pop
clc
ret
pop
lahf
inc
xchg
xor
in
imul
sub
add
mov
sbb
or
loop
cmp
xor
sbbb
push
int3
xchg
mov
mov
push
popa
jb
inc
in
imul
scas
pop
loop
jae
or
cwtl
imul
add
daa
sub
jmp
jp
test
jae
mov
push
inc
shlb
mov
cmp
cli
mov
movsb
dec
imul
js
and
jl
jo
sub
mov
push
mov
mov
addr16
xor
es
rorl
inc
push
cmp
push
add
out
mov
dec
aaa
es
shrb
jp
xchg
jge
add
popf
mov
xchg
adc
into
jge
into
fwait
icebp
outsl
dec
push
or
nopl
jge
orb
xchg
data16
or
sub
cmpb
repnz
and
or
scas
pop
cwtl
pop
es
xor
push
sub
sbb
mov
xor
push
rolb
adc
push
push
mov
popa
cmp
cmp
push
jb
xlat
pop
xor
mov
mov
mov
aad
push
aas
cmp
loope
leave
outsl
xor
mov
inc
xor
cmp
in
jb
sbbb
fnstcw
scas
shr
jae
mov
dec
ljmp
dec
fwait
dec
pushf
jecxz
adc
test
ja
movsl
jb
inc
pop
adcb
mov
lret
add
int
pop
cltd
ret
lahf
addb
les
into
adc
jb
and
mov
ss
mov
icebp
fists
stos
or
pusha
jbe
lret
xchg
add
and
test
test
cmc
cmp
in
cmp
or
cmp
xchg
push
pop
cmpsl
push
sbb
push
jmp
fisubl
inc
gs
inc
pushf
les
dec
rcll
mov
jecxz
pop
push
fisttps
inc
call
xor
push
lret
inc
loopne
pop
cmp
mov
imul
push
cltd
mov
arpl
push
mov
and
mov
sub
insl
into
addb
push
rolb
jae
and
adc
pop
mov
orb
push
jb
push
es
daa
jns
dec
push
jo
mov
ret
or
roll
in
arpl
jb
jo
mov
int
xor
and
sub
iret
je
xchg
or
cmpsb
pop
add
inc
sub
jae
aaa
push
out
imul
cmpsl
inc
pop
in
xor
push
cmpsl
addb
cltd
popa
stos
rcrl
es
xchg
rclb
pop
mov
cmp
test
cltd
jb
add
dec
mov
mov
addb
sbb
jb
clc
rorb
push
and
subl
stc
std
sarl
jg
jne
push
pop
inc
xchg
push
adc
lods
sbb
sub
iret
data16
jb
pop
push
mov
mov
inc
jae
rcll
leave
lock
shrb
push
stos
sti
sub
adc
lcall
insb
or
sub
outsl
fisubrl
cmp
add
adc
or
push
test
jle
inc
add
jb
cmp
pop
mov
adc
clc
and
dec
sahf
add
adcb
or
xor
mov
push
mov
mov
cmp
lcall
adc
cmp
arpl
gs
pop
ljmp
jb
dec
fisubs
or
mov
dec
jb
push
pop
push
sub
imul
or
push
push
cmp
rcrl
add
cmp
hlt
push
dec
push
and
xchg
ret
pop
js
insl
xchg
mov
xor
call
add
nop
shll
jnp
testb
and
or
jo
pop
push
aas
addr16
or
xorb
ret
xor
test
rcrb
andl
mov
mov
test
xchg
cld
bound
cwtl
in
push
icebp
mov
adc
pop
repnz
out
roll
test
lretw
nop
imul
shlb
mov
jo
adc
sub
inc
cwtl
cmp
add
xor
pop
pusha
xor
dec
xlat
jl
mov
push
adc
or
lods
inc
in
add
dec
test
inc
imul
push
mov
sbb
sbb
push
adc
cltd
and
sbb
sti
and
lret
jmp
or
xchg
adc
xor
jne
xchg
adc
lret
das
add
data16
and
punpckhwd
notl
femms
ret
pop
fs
push
aas
add
dec
adc
scas
arpl
cwtl
cmpl
iret
lods
jl
push
add
jge
jo
sbb
addr16
ss
ret
in
cmp
push
nop
rcl
repz
xchg
icebp
or
or
daa
fcmovnbe
or
push
decl
add
sub
sbb
adc
pop
in
lret
lahf
in
es
lcall
stos
inc
aaa
mov
ror
inc
add
pop
daa
xchg
or
jne
lahf
inc
into
adc
mov
test
mov
push
sub
lcall
repz
add
inc
cmp
push
mov
out
loop
loop
loopne
mov
pop
movsb
test
aaa
mov
adc
mov
mov
aas
mov
sub
ljmp
pop
or
xorb
cmp
rorl
or
int
xchg
sbb
rclb
push
subb
cmp
mov
rcl
lods
push
es
andl
test
mov
xchg
or
ffreep
mov
pop
mov
inc
cltd
enter
pusha
inc
cmp
roll
inc
xchg
aam
and
and
mov
aas
jnp
add
dec
jns
addr16
push
mov
popf
sub
gs
in
cmpsl
mov
aam
rcrb
ficomps
dec
scas
inc
jnp
es
sub
add
imul
pop
mov
mov
inc
mov
test
dec
call
cmp
mov
add
fs
inc
pushf
mov
out
inc
push
sub
xor
ret
cmp
psubw
adc
mov
or
or
pop
and
addb
out
popf
dec
lret
push
add
dec
mov
dec
enter
es
arpl
cs
or
shll
pop
inc
push
popa
adc
xchg
sub
hlt
sub
add
fs
xor
jp
daa
cmc
or
sub
and
push
inc
loopne
adc
add
sbb
sub
push
ret
cwtl
adcl
or
pop
and
nop
add
push
movsb
xor
xchg
or
in
pusha
add
in
cltd
inc
xchg
push
sub
push
lods
loopne
inc
adc
pusha
xor
adc
in
adc
cmpsb
test
sub
loope
add
and
or
pushf
bnd
cltd
cli
sub
ljmp
jecxz
add
xchg
push
xor
sub
jecxz
or
orl
scas
adc
roll
cmp
or
inc
lods
push
add
movl
mov
pop
sbb
and
sub
xor
lret
fs
fadd
jae
jae
ret
movl
push
test
test
dec
loopne
imulb
jb
sub
mov
in
push
adc
push
int
test
push
pop
int3
and
pop
lahf
cmp
ret
sbb
loopne
sbbl
inc
adc
add
fnstcw
in
dec
gs
xchg
inc
in
adc
fmulp
inc
int
mov
sbb
out
add
inc
addb
and
sub
mov
push
icebp
int
or
lods
cmp
inc
mov
mov
ret
aas
ret
xchg
test
js
out
mov
or
push
add
inc
jae
enter
adc
add
dec
insl
or
push
cltd
sbbb
push
xor
inc
fwait
pop
push
stos
enter
ljmp
jg
dec
push
push
stos
shrl
pop
pop
bswap
jo
mov
mov
test
dec
scas
pop
push
or
jb
vpavgb
popa
dec
fsubl
sbb
lock
mov
cmc
xor
je
in
scas
xchg
sub
je
insl
sbb
pop
jp
xlat
dec
push
xchg
mov
stc
shl
mov
cmp
data16
add
pop
xchg
and
and
mov
scas
mov
mov
movl
or
cmp
inc
pop
or
jb
test
das
xchg
pop
andl
mov
out
enter
xor
int
xor
aas
adc
out
aad
shl
or
push
push
not
outsl
xchg
push
ljmp
out
cltd
pop
and
add
jp
or
inc
jg
push
push
xchg
lcall
push
test
mov
add
ret
out
cs
scas
pop
adc
out
cmpsb
add
sub
pushl
stos
dec
xchg
add
ljmp
push
ror
xchg
inc
arpl
jbe
or
sbb
rolb
cmc
pop
cmp
sbb
inc
subb
pop
rcrb
loopne
out
lods
rcr
jae
xchg
or
scas
or
in
cmp
enter
jecxz
flds
inc
je
add
icebp
mov
xor
jg
add
mov
int
or
aam
adc
enter
pop
xchg
cmc
inc
popa
jo
cmpsb
pop
adc
mov
shr
inc
push
push
movl
stos
dec
push
outsl
sbb
or
cmp
pop
sbb
shlb
aam
xor
or
scas
subl
inc
pop
xor
lcall
cmpsb
stos
or
mov
enter
and
mov
das
inc
sub
jo
push
daa
mov
mov
xor
cmp
pushf
enter
push
aam
shlb
or
fiaddl
imul
xor
test
sbb
inc
mov
xor
or
ljmp
push
push
pusha
xor
cmp
mov
inc
sbb
inc
cld
pop
xor
lret
adcb
roll
sub
inc
pop
xor
pop
aas
pop
adcl
in
mov
or
adc
shll
lcall
jo
xor
inc
push
loop
or
jbe
push
adc
push
add
addr16
mov
push
sub
or
lods
add
push
mov
jb
in
es
push
jne
test
scas
imul
cltd
push
iret
push
add
push
lret
imul
repnz
test
inc
push
out
xchg
or
push
loopne
pop
ret
inc
cmp
rcrl
or
cmp
and
pop
sbb
mov
xchg
or
mov
jbe
mov
pop
adc
push
adc
jns
push
or
jge
inc
outsl
xor
in
or
inc
mov
data16
fsubl
inc
lock
push
add
xor
fcomps
add
addr16
cmp
js
jbe
mov
imul
rcrl
push
hlt
lock
mov
sbb
mov
xor
test
adc
or
int3
xchg
addr16
rclb
jns
adc
xor
enter
movl
mov
int
lret
push
push
push
incb
inc
das
pop
cmpsl
in
je
stos
jo
loop
cmp
push
mov
jb
xor
inc
add
iret
xchg
mov
xchg
pop
je
mov
dec
cmpsb
or
jp
push
add
xor
lock
xor
shrl
lcall
and
cmp
test
pop
sub
cmp
ffree
jp
nop
add
inc
sub
andl
sbb
scas
mov
data16
bound
adc
aam
push
ror
or
int
pop
outsb
lahf
out
jg
stos
mov
fiaddl
and
sub
xor
cltd
clc
xchg
scas
or
shrl
and
inc
push
stos
or
sbb
lret
jmp
add
dec
sub
imul
inc
leave
mov
mov
xchg
loope
push
int3
dec
into
add
adc
mov
test
inc
inc
cmp
or
inc
add
or
mov
xor
pop
cwtl
jo
inc
cld
addr16
pop
into
push
add
mov
push
push
push
shl
cld
rcll
pushf
mov
jecxz
xor
jp
or
xor
loopne
in
inc
push
dec
cs
cmp
fiaddl
dec
adc
fsubs
orl
ja
roll
jo
add
push
lret
cmp
xor
or
sub
gs
icebp
push
dec
xchg
lret
jne
mov
cs
mov
pop
scas
sub
out
pop
cs
lcall
and
push
mov
sbb
adc
pop
cmc
jb
orb
out
or
xchg
mov
shrb
sahf
and
jle
and
inc
insl
xchg
push
mov
jg
popw
dec
and
lret
nop
call
scas
je
ljmp
adc
jno
ljmp
mov
cmp
dec
push
xchg
pushf
sub
or
sarl
cmc
lret
xlat
ds
sub
sbb
push
add
pop
andb
jo
cs
hlt
xchg
or
in
dec
cli
cmovne
sub
js
add
enter
jp
add
pop
shlb
sbb
ljmp
sbb
and
mov
je
xor
add
inc
mov
inc
and
inc
loopne
loopne
mov
test
xor
push
pop
jae
sub
ret
loope
mov
xchg
mov
mov
cltd
mov
lods
add
imul
inc
into
aaa
xor
xor
dec
adc
adc
movsl
imull
js
jb
pop
inc
pop
xor
jb
les
adc
or
js
inc
or
adc
cs
push
pop
push
add
aad
dec
xchg
test
aaa
push
sbb
mov
mov
clc
imul
jo
pop
subps
inc
ljmp
sub
mov
aaa
xor
sahf
sub
inc
daa
mov
xor
add
sti
cmp
das
test
jo
sub
cmp
inc
mov
cmc
fistps
mov
inc
dec
push
dec
xchg
sbb
shrb
push
clc
or
stos
in
loopne
sub
roll
negl
scas
mov
dec
outsb
lret
jbe
stos
cltd
mov
lahf
test
xor
inc
pop
mov
je
loopne
lock
push
add
push
add
adc
xchg
sbb
ret
or
or
xlat
imul
js
int3
or
or
mov
nop
das
fcmovb
rorb
dec
cmp
cmc
cmpsb
and
fs
cmp
int
xor
stos
inc
sub
adc
aad
nop
mov
xchg
add
lcall
inc
mov
inc
add
pop
rol
fldl
fimuls
enter
mov
push
jbe
in
shll
jb
ja
xor
enter
loope
test
dec
add
sbb
adcl
repnz
loopne
xor
or
or
daa
cli
and
aad
mov
sbb
mulb
jae
dec
add
adc
pushf
fsubrl
cmpsl
lcall
xlat
cmp
inc
inc
push
dec
lock
xlat
xor
scas
mov
addr16
mov
imul
dec
mov
push
inc
test
cmp
loopne
jg
xor
dec
loop
scas
rcl
fcoml
push
lods
inc
cwtl
or
int3
out
mov
mov
mov
and
cmp
arpl
loope
inc
mov
adc
push
popa
xor
adc
dec
pusha
xor
test
or
push
sub
jae
xor
sub
mov
pop
aad
out
jne
jb
stc
jnp
adc
push
sbb
inc
mov
gs
adc
inc
xchg
cmp
shrb
push
mov
add
inc
in
push
call
dec
das
add
xor
push
inc
outsl
push
inc
cs
lret
pop
inc
fwait
push
add
addl
into
lret
sbb
and
add
in
lcall
leave
adc
or
mov
jo
sub
insl
addr16
enter
jae
out
push
cmp
xchg
sub
jae
addr16
dec
fadds
xor
das
push
jae
adc
mov
lods
push
scas
imul
cmpsb
enter
or
xor
dec
push
xor
cltd
jp
pushf
fs
lret
pop
add
bswap
mov
in
in
dec
mov
mov
out
scas
push
mov
lret
rolb
pop
repnz
into
push
rcl
loop
inc
jmp
xchg
adc
push
push
adc
nop
sub
cmc
out
sub
inc
pop
fwait
and
and
adc
push
mov
xor
fwait
dec
cmp
mov
invd
test
daa
rorb
xor
fsts
adc
or
jo
xor
mov
ja
cmc
add
fildl
hlt
xchg
ljmp
out
mov
cmp
sbb
in
shll
js
fdiv
sub
dec
into
xor
jge
push
rclb
jo
push
stc
xlat
push
inc
sbb
xchg
leave
lds
out
rolb
mov
or
insb
push
mov
pop
or
loope
subl
test
xorl
fs
xorb
insl
xor
push
cmp
loopne
jne
out
rcll
je
shll
int
xchg
arpl
cmp
or
rorb
jp
push
mov
add
movsl
add
push
xor
jl
xor
sub
in
lods
jbe
adc
inc
jnp
mov
and
mov
xchg
mov
adc
jo
lahf
cmpl
xor
es
inc
xorl
mov
pop
sbb
adc
sub
rolb
push
adc
fiaddl
inc
jmp
push
out
leave
pusha
jb
pop
lea
daa
cld
addr16
inc
jg
add
lcall
mov
loopne
js
lret
jbe
push
test
in
decl
repz
xchg
stos
jo
add
cmp
sub
or
pop
daa
bound
daa
lds
sub
inc
testl
shll
loope
mov
dec
mov
dec
adc
js
push
mov
loopne
mov
xchg
add
test
xor
in
xor
add
leave
addb
push
xchg
sbb
xor
pop
lcall
mov
inc
adc
dec
and
xchg
pop
stc
or
enter
mov
sbb
jp
loope
jo
enter
inc
add
or
push
or
outsl
pop
inc
cmp
stc
jl
repnz
sub
mov
add
mov
cs
and
ja
push
sarb
ret
rolb
filds
mov
add
add
std
popf
jp
cmp
and
dec
sub
and
rcrb
push
andb
lds
adc
mov
mov
sbb
int3
xor
mov
shrb
ret
icebp
int3
push
inc
sbb
icebp
adc
push
or
or
push
add
mov
rcrl
add
fs
inc
mov
inc
les
and
cmpsb
and
sbb
sub
add
repz
pop
into
inc
cmp
pop
sub
or
enter
pushf
mov
push
push
ret
sarl
jb
sbb
push
jnp
xor
mov
push
jecxz
xchg
pop
in
add
xchg
xor
push
rorl
push
push
mov
int
mov
lock
inc
out
stos
jo
push
and
add
je
jbe
adc
push
rclb
movsl
cmp
andl
ret
sbb
lea
add
add
mov
add
aad
in
add
popf
push
int
sub
mov
int
popa
stos
jge
test
es
rcl
lea
rcll
andl
pop
sarb
xchg
and
xchg
insb
adc
cltd
mov
scas
dec
hlt
shl
nop
into
jnp
add
cs
mov
test
nop
or
jno
ficompl
mov
sbb
cmp
xchg
xor
jo
sarl
mov
outsb
enter
or
mov
cmpsb
dec
xchg
mov
cmc
sub
adc
hlt
push
push
sbb
mov
adc
or
or
int
jb
jg
xor
xor
xchg
push
xor
add
cmp
nop
mov
leave
les
pop
mov
jg
sbb
lcall
push
test
mov
stos
scas
add
xorl
mov
push
push
pop
jge
mov
test
popa
lret
test
xchg
sub
mov
jae
jmp
xchg
cmc
adc
test
imul
int
xor
push
adc
lret
std
lock
push
mov
enter
cs
test
ljmp
inc
arpl
push
add
out
hlt
sbb
shr
addl
push
gs
and
jae
stos
push
mov
xchg
sbbl
les
cmpsl
or
push
imul
jnp
and
inc
push
pop
cmc
inc
test
and
push
icebp
fimull
xor
adc
add
adc
loopne
inc
scas
in
in
add
sub
push
xor
inc
dec
fs
push
mov
mov
sbb
aaa
jns
sbb
es
mov
push
mov
push
test
mov
fidivrs
jb
sub
xor
or
loopne
pusha
leave
add
push
and
xchg
dec
lock
jp
ja
jae
cmp
cltd
and
int3
lcall
jg
mov
repz
popa
push
mov
popa
test
test
jo
pop
scas
inc
xor
jmp
das
outsl
pop
mov
mov
in
adcl
cmpsl
ss
mov
adc
and
stos
lcall
shrl
jnp
subb
jae
test
lods
jb
aad
or
std
sbb
mov
sbb
mov
loope
pushl
testl
xlat
sub
loop
lahf
adc
icebp
sbb
push
add
jl
ret
xchg
sub
stos
mov
cltd
xlat
fsubrl
inc
push
dec
fs
sbb
roll
xchg
add
dec
mov
enter
gs
insb
xor
stos
rorb
push
roll
xor
pop
std
push
hlt
adc
ja
add
xchg
jmp
negl
test
les
inc
sbb
aad
dec
mov
xor
outsb
xor
mov
lods
inc
lock
shlb
fs
mov
sbb
xor
cmp
enter
push
inc
cmp
inc
fsubp
sbb
jo
sub
cwtl
stc
jo
adc
jg
xchg
xchg
add
ret
out
push
loopne
daa
xlat
cwtl
movl
xor
out
clc
pop
push
mov
insl
daa
cmpsl
jo
lea
scas
push
mov
mov
and
leave
pop
xor
adc
or
into
daa
mov
lods
cmp
scas
add
inc
test
daa
push
mov
push
dec
push
xchg
sub
mov
into
aad
add
add
adc
inc
aam
addr16
nop
jae
ljmp
inc
add
scas
add
ret
dec
shll
adc
in
cwtl
inc
sbb
mov
rol
push
in
outsl
and
xor
or
pushf
xorl
jo
negb
int3
sbb
dec
xor
shl
fldcw
add
add
test
mov
adc
inc
int
andl
or
inc
ljmp
and
cmp
mov
loope
dec
jb
or
subl
mov
and
and
lds
adc
cmp
test
xchg
cmpsb
or
scas
faddl
lret
mov
cmc
and
jo
and
push
mov
cli
mov
das
mov
test
lret
shrl
ret
in
sub
adc
inc
leave
loope
jb
gs
cwtl
fldenv
mov
out
jno
xchg
dec
xchg
sbb
sub
enter
sub
pushf
pop
gs
jmp
xchg
jp
mov
loope
rorl
sbb
adc
daa
addb
ds
lods
mov
clc
mov
loope
popa
jb
clc
cmpb
aam
xor
xchg
mov
jo
mov
in
mov
adc
xor
sbb
or
add
adc
mov
je
loope
in
or
popa
and
sub
add
xor
or
add
pop
xor
adc
arpl
pop
push
add
sar
mov
mov
les
cmp
rcrl
jno
fisubl
lcall
xchg
shll
das
sub
add
pop
and
nop
lret
test
pop
push
cmpsb
xor
andl
jmp
sbb
xor
cmp
mov
mov
dec
mov
shrl
or
popf
lock
lret
addl
pop
cs
adc
fisttpll
movsl
daa
add
cwtl
jmp
and
fs
add
sbb
push
mov
bndstx
mov
or
jo
jo
cmp
mov
scas
sbb
push
jae
loopne
add
push
fildll
sti
xor
add
mov
ret
push
sbb
sarb
das
push
mov
mov
xchg
ds
adc
loope
ds
cwtl
lret
adc
aad
mov
ret
pop
sbb
shll
jno
inc
popa
sbb
cmpsb
adc
xchg
inc
push
dec
nop
test
lret
cmp
jge
je
int
sub
js
and
dec
ljmp
aas
insb
push
cld
les
dec
mov
addl
push
push
push
xchg
pop
and
cmp
std
jg
sbb
adc
push
stos
add
and
sbb
push
clc
or
sbb
jp
sub
or
push
daa
test
adc
push
jns
stos
fisubl
loopne
and
shrl
mov
rcll
push
xor
mov
push
mov
or
inc
cltd
push
mov
popa
xor
push
adc
pop
jne
adc
jnp
jb
inc
loopne
out
pusha
cwtl
dec
loope
pop
xchg
orb
in
mov
jb
cmpsl
mov
mov
and
lods
xor
adc
or
or
mov
test
js
sbb
vcmpps
adc
pushf
shr
fsubrs
jmp
shl
cmp
stos
rorl
push
sbb
lret
in
lods
rolb
push
ja
add
sbb
jl
inc
lock
cmc
inc
daa
xor
xchg
andb
or
rolb
pop
je
dec
sub
push
add
pushl
sub
sub
subb
ret
sbb
jae
test
lock
xchg
rclb
push
jmp
or
xor
mov
lret
out
push
addb
mov
nop
lret
sub
xor
pop
mov
mov
lock
pop
push
xor
adc
das
xchg
jno
lcall
or
fnstsw
jnp
inc
xorl
pop
dec
add
mov
push
push
push
in
add
test
loope
add
icebp
rcl
lock
sub
popa
fs
or
pop
punpckhbw
movl
pusha
or
add
xor
aam
dec
fnstcw
dec
das
je
push
jae
adc
es
cld
iret
lret
rolb
cmpsb
adc
in
adc
or
rcr
leave
xchg
out
lods
lea
nop
das
imul
ret
xchg
test
xor
nop
mov
jns
loope
lret
shlb
sbb
ljmp
push
clc
mov
aas
sub
xchg
cmpsb
ret
xlat
push
mov
in
inc
xchg
nop
xor
movsb
add
mov
sbb
ret
pop
push
mov
es
inc
addr16
pop
push
sbb
repz
es
sbb
nop
mov
cmp
jl
cli
gs
gs
hlt
or
pop
adc
stos
stos
and
imull
jmp
das
cmpsb
mov
sbb
push
or
shlb
or
mov
jae
xchg
roll
lret
out
loope
or
in
ret
add
inc
pushf
sub
xor
push
out
mov
ja
adc
dec
mov
lahf
cmpl
pop
rorl
testb
pop
mov
add
cmp
sub
inc
push
push
mov
push
inc
and
jl
cltd
dec
adc
add
mov
jae
aad
test
add
call
jge
add
xchg
lods
inc
icebp
adc
push
addl
mov
sti
or
call
pslld
ret
arpl
add
jge
push
roll
js
xchg
in
hlt
inc
push
lahf
mov
cmc
sti
addb
hlt
cmc
ret
sbb
sbb
sarl
cld
pop
jecxz
add
add
scas
add
clc
add
push
mov
adc
aas
or
adcl
fistl
jg
mov
in
adc
jns
popa
mov
inc
lock
add
test
mov
sub
jl
xchg
imul
int3
sbb
cmp
adc
or
sub
imul
inc
cmp
cmp
jnp
mov
stos
inc
add
jp
verw
add
push
mov
int
jo
jge
imul
ret
mov
sbb
inc
aad
jo
sbb
adc
daa
or
jge
dec
cwtl
sbb
dec
pop
push
push
xor
mov
or
clc
fisttpl
nop
dec
sub
out
mov
add
pop
add
or
shlb
push
inc
lods
sbb
fstl
popf
xor
dec
and
cmp
and
outsl
adc
xor
xor
push
jge
jnp
add
add
popf
push
inc
mov
pop
cmp
fld
mov
pushf
in
hlt
dec
xchg
shl
arpl
loope
push
adc
in
mov
pop
loopne
sub
icebp
pop
jns
xchg
jmp
pusha
shl
aad
icebp
fistl
jns
lret
sbb
or
adc
lret
test
jo
data16
mov
and
xor
inc
rorb
loope
dec
sbb
cmp
imulb
in
and
or
sub
xor
pop
rolb
and
test
pop
sbb
stos
add
sub
fisubl
or
mov
or
xchg
leave
pushl
clc
mov
or
xchg
add
push
roll
and
pop
sbb
pusha
ljmp
sub
jo
lret
movsb
jp
inc
inc
mov
inc
pop
xchg
mov
mov
shlb
cs
jmp
enter
sbb
add
pop
pop
sti
mov
xor
xchg
push
test
push
inc
xor
jns
popa
jo
xlat
inc
pushf
pusha
sub
sbb
sbb
push
stos
inc
mov
enter
jge
or
pop
xor
mov
sbb
enter
orb
inc
mov
stos
and
add
push
mov
ret
add
xchg
push
scas
or
pop
cmp
lods
lock
xorb
addr16
test
fwait
push
test
push
adc
addr16
adc
inc
mov
hlt
lret
push
dec
cltd
or
xchg
push
cmpl
lcall
pop
and
sahf
test
rclb
pop
es
scas
cmp
push
rclb
xor
fsub
dec
push
push
loopne
loope
adc
xor
ret
lret
pop
or
pop
sbb
lret
das
jns
and
sub
jp
mov
loopne
enter
and
push
jae
xor
loope
pop
push
add
rcll
push
adc
mov
adc
mov
cmc
dec
add
in
inc
fdivl
and
mov
icebp
pop
sbb
xchg
loop
xor
xor
or
leave
rcrl
inc
imul
sub
jne
mov
dec
dec
cmpsl
dec
loope
nop
outsl
pop
and
push
out
add
mov
xchg
cli
sbb
inc
mov
cmpsl
sub
maxps
test
push
sub
push
shl
aaa
pop
pushf
pop
xor
add
cmc
jnp
roll
gs
rorb
pushf
and
leave
cmp
push
pop
scas
orl
or
add
jo
push
nop
xor
push
or
lret
nop
sarl
lret
pop
push
repz
fsts
push
pop
mov
rolb
ret
cmp
shrl
fsubl
inc
stos
pop
das
lds
inc
adc
add
cmpsb
push
shlb
fnstsw
ret
jb
daa
mov
inc
mov
sbb
into
lock
lods
sahf
sub
pop
out
add
push
xor
jp
push
mov
and
mov
test
mull
sub
mov
cmpl
xchg
sub
rclb
loopne
ret
gs
xor
xor
cwtl
fmul
add
shlb
outsb
aam
xor
cwtl
cmpsl
mov
inc
subb
imul
mov
cltd
loop
js
test
xor
mov
pusha
rclb
repnz
int
shll
and
add
mov
lock
inc
popa
jae
xchg
lret
xchg
fucomp
xor
or
lock
pushf
xor
jo
sub
xor
cltd
inc
and
je
pop
xor
cmp
cmpsb
push
and
je
sub
pop
int
idivl
sbb
das
ret
push
mov
aad
jno
xor
sbb
cmp
pop
pop
push
es
sahf
lods
sub
inc
arpl
in
and
sbbb
push
push
les
add
mov
cmc
mov
fs
leave
subl
push
xchg
inc
sub
in
inc
inc
xchg
sub
mov
mov
cmp
inc
fs
addr16
es
ret
loop
xchg
push
mov
add
aad
xor
xor
fildl
cmc
cs
addb
adc
out
and
shll
add
jnp
inc
push
es
mov
ljmp
sbb
ret
mov
ret
add
add
inc
popf
push
jb
mov
fsubs
nop
or
mov
xorb
subb
xor
in
push
cmp
adc
mov
cpuid
call
es
stos
test
out
mov
dec
add
sub
push
jbe
mov
mov
dec
adc
jg
jo
or
xor
out
and
jne
xlat
nop
mov
push
jle
nop
iret
adc
test
mov
cmpsb
and
push
idivl
out
faddl
out
xorb
or
pusha
push
adc
mov
shrb
popa
pop
push
cs
pop
int3
add
jo
jp
sbb
stos
push
sbbl
mov
cmpsl
test
push
xor
dec
push
sbb
popa
and
orl
inc
add
test
xadd
dec
push
jp
mov
cmp
cmp
fidivl
imul
or
push
shll
inc
mov
or
lcall
mov
cmp
pusha
or
pop
push
pushf
xor
xor
bound
mov
xor
test
inc
pop
pop
cmc
stos
stos
xor
mov
lret
int
cmpsl
jb
mov
xchg
fisttpll
and
cld
pop
es
in
das
sub
invd
xor
ljmp
xchg
in
jno
jne
int
add
cmp
inc
adc
data16
lret
aas
jbe
xor
add
lcall
push
inc
mov
jmp
adc
stos
xor
fisubrs
push
dec
sub
and
or
jns
push
cltd
imul
mov
inc
cs
cmp
jo
sub
ljmp
or
jge
lods
jb
inc
jns
jns
sub
adc
xlat
pop
jno
jge
mov
sub
add
pushf
into
xor
and
cs
scas
mov
loop
mov
push
jo
or
pop
cmpb
or
add
hlt
das
xchg
xchg
push
mov
mov
xchg
ljmp
mov
outsb
pop
lret
jb
iret
out
sub
lock
and
cmp
arpl
adc
push
lret
and
sub
out
jge
into
lds
ret
adc
sbb
loopne
jl
push
push
xlat
xor
imul
push
sub
or
push
push
loop
out
mov
add
adc
jg
roll
jae
cmp
mov
pushf
mov
gs
pop
sub
xor
mov
test
xor
cmp
aam
hlt
push
rcrb
or
xor
and
nop
sub
scas
mov
push
std
push
popf
jecxz
inc
jp
icebp
adc
push
xor
pop
add
in
mov
loope
push
or
mov
push
push
mov
addl
ror
test
sub
jecxz
jo
mov
addr16
mov
push
pop
sub
adc
mov
or
or
dec
xchg
cs
adc
mov
sbb
mov
cmp
or
cmp
lcall
aad
pop
and
push
mov
adc
push
ja
xor
push
xchg
into
push
push
push
inc
test
add
out
pop
rcl
add
pop
stos
outsl
and
jo
inc
xchg
enter
addr16
push
pop
loopne
mov
push
js
sub
insb
fdivrs
gs
mov
adc
popa
lcall
shrb
inc
es
mov
mov
push
adcb
xor
sbb
dec
lea
loop
fcom
dec
rcrb
or
inc
rolb
leave
lret
or
push
cmpsb
push
lcall
in
adc
popa
lods
push
leave
xchg
leave
adc
nop
pop
rcrl
xchg
fidivrs
xchg
add
cltd
jo
mov
mov
add
loopne
gs
jns,pn
sbb
adc
lcall
push
add
ror
pusha
mov
cltd
mov
push
xor
sbb
inc
jae
fidivl
xor
mov
jb
add
add
pop
data16
xor
cltd
push
add
pop
add
shlb
cmp
push
sbb
add
mov
bnd
int
mov
test
xchg
inc
mov
mov
cmp
push
cmp
sbbb
pushf
aas
shlb
and
push
xchg
loope
add
adc
jno
and
xlat
xchg
add
mov
xor
jne
mov
dec
xor
or
inc
jae
movsl
xchg
push
sbbl
sbb
xchg
xor
aad
push
cmp
adc
cmp
in
je
add
push
dec
je
sbb
lds
or
or
jnp
xor
or
in
cwtl
imul
jo
or
dec
out
pop
cmovae
out
sbbl
mov
adc
mov
mov
daa
mov
inc
ret
xchg
xlat
cmpsb
mov
je
lods
pop
pop
push
xor
pop
and
jb
add
jne
xchg
idivb
jb
add
enter
xlat
mov
cwtl
lods
and
sbb
adc
int
mov
sysenter
daa
add
mov
xor
jo
dec
jno
je
popf
push
xchg
aaa
xor
movsb
enter
mov
adc
shlb
aad
sbb
clc
ss
pop
push
dec
shlb
out
rclb
adc
cmp
sub
loop
jnp
inc
xor
inc
inc
jnp
mov
adc
jnp
push
push
and
cmp
dec
arpl
push
sbb
sti
lods
jb
inc
mov
push
addr16
add
cltd
inc
mov
mov
pop
pop
or
scas
popa
add
push
out
add
add
imul
jbe
jno
or
dec
cmp
dec
sub
leave
add
sub
push
test
pushf
cmpsb
loopne
mov
inc
xor
fidivl
cmp
dec
mov
push
fld
jo
fisubl
cli
loop
sub
daa
jo
xor
push
rcrl
rorb
sub
daa
sbb
or
stos
or
inc
scas
cmpxchg
test
out
sbb
rorb
mov
mov
ficoml
xchg
call
adc
jmp
scas
and
adc
dec
sbb
mov
jg
std
mov
mov
add
shl
jge
out
das
adc
clc
sub
mov
dec
mov
out
or
push
outsl
and
test
inc
out
dec
pop
sub
sbb
add
mov
add
sbb
mov
mov
dec
add
dec
or
add
aaa
sub
sbb
addl
fs
jns
mov
sub
adc
mov
call
add
sbb
sub
sar
xchg
insl
repz
inc
lock
inc
mov
sarb
xlat
stos
rclb
push
sub
mov
addl
or
or
imul
popa
nop
mov
pushf
mov
mov
addl
sub
jae
push
loope
cmp
dec
push
jae
inc
pop
cmp
push
insb
mov
mov
adc
inc
cwtl
sub
and
out
outsl
gs
cmp
ret
cmp
in
jb
stc
cwtl
out
cmp
xor
pop
ss
push
icebp
test
jge
mov
mov
adc
inc
lret
pop
nop
ret
test
repz
push
mov
adc
push
jae
fmul
cmp
xchg
push
cs
testl
mov
jnp
nop
mov
pop
mov
dec
sub
shrb
inc
xor
ljmp
push
inc
pushf
and
pop
push
fsubr
push
jae
gs
lods
jmp
insb
arpl
cmp
inc
mov
jl
xor
call
in
jnp
cmp
adc
xchg
pop
jae
pop
outsl
adc
scas
dec
shrb
incb
push
in
leave
test
scas
xchg
rcrl
inc
mov
add
icebp
inc
adc
xrelease
cltd
fstps
inc
xchg
push
sbbl
jo
out
sub
pop
nop
mov
pop
cmp
pop
ds
xor
push
push
sub
mov
loop,pn
push
std
push
popa
pop
rolb
insl
pop
add
in
or
loop
pop
aad
xchg
ljmp
test
or
cs
inc
pop
add
push
xor
lret
cld
sahf
pop
movsl
jo
sbb
push
sbb
mov
push
dec
shl
mov
jge
adc
shl
or
cmp
xor
or
add
sbb
adc
cld
push
cmp
sbb
or
and
ret
mov
pop
pop
mov
inc
movsl
ljmp
dec
movsl
gs
ja
pushf
movl
and
and
push
add
cmp
test
jne
scas
les
scas
cld
inc
cmp
stos
push
xor
push
and
push
add
arpl
mov
push
sub
dec
or
lret
pop
fwait
cld
sbb
xchg
lock
dec
inc
pop
das
lea
cmp
rorb
jo
roll
or
cmc
cs
test
stos
adc
gs
scas
xor
dec
adc
andl
test
cmp
jns
or
ret
and
push
push
rorb
decb
mov
hlt
mov
or
loopne
shlb
xor
sub
mov
test
inc
loope
cwtl
adc
loop
mov
push
cmp
test
cmp
pop
xor
mov
jmp
xor
ror
inc
daa
lcall
arpl
ds
inc
jae
ret
mov
adc
jo
xor
xchg
pop
inc
cs
aam
or
ljmp
in
mov
adc
dec
stos
cmp
jbe
xorb
add
ds
cmpsb
or
inc
mov
cltd
pop
xchg
jae
das
pushf
jae
lcall
push
jnp
and
adc
rolb
jne
cmp
ja
or
sub
adc
push
xor
ret
test
or
in
cmp
lcall
inc
cs
push
ja
and
pop
jbe
xor
and
cmpsb
ror
jae
dec
testb
xchg
push
cli
ja
gs
cmp
push
add
cmp
push
pop
es
adc
lods
adc
pusha
add
fs
xchg
xchg
mov
push
mov
mov
pop
test
add
pusha
jb
mov
pop
and
mov
out
adc
lret
nop
mov
dec
sbb
inc
xchg
popf
testb
sbb
rclb
mov
xchg
insb
adc
test
add
push
icebp
test
jb
dec
out
add
ret
jo
test
add
add
dec
pusha
loopne
jns
das
sub
jb
pop
daa
cmpsb
push
inc
push
sbbb
push
push
add
mov
inc
jae
xchg
xor
sub
sub
adc
sbb
inc
add
pop
push
addl
add
filds
invd
daa
call
sub
mov
and
fiaddl
call
pop
or
add
add
and
frndint
inc
adc
dec
sub
xor
mov
fstps
xor
pop
xor
sub
push
fadds
add
push
lcall
push
sbb
add
push
pop
idivl
fwait
mov
push
dec
inc
pop
inc
push
cmp
sbb
add
adc
xchg
imul
push
sbb
mov
enter
pop
mov
or
mov
jl
vpsubq
ret
pushl
add
rclb
xor
int3
cmovge
inc
adc
xor
xor
mov
filds
or
xor
sub
test
adc
xor
cvttps2pi
adcb
sbb
mov
in
xchg
lds
dec
push
pop
sub
sbb
aam
inc
dec
jo
cmp
enter
pop
jno
test
scas
jb
add
aad
call
mov
jp
push
dec
mov
mov
push
out
test
pop
xchg
push
imul
xor
mov
cmp
sub
push
xor
inc
into
adc
push
mov
push
xor
mov
or
fs
sbb
dec
xchg
leave
push
cltd
and
sub
push
jae
rolb
jne
xchg
or
mov
cwtl
jmp
jae
sbb
sbb
fstpl
inc
jae
les
mov
addb
daa
pushf
sub
mov
adc
js
fnstenv
cmpsl
and
jle
test
imul
nop
push
sbb
xchg
hlt
pushf
or
mov
jbe
xlat
dec
adc
jo
jo
test
orb
cmp
test
test
xlat
pushf
lret
movsb
xchg
push
xchg
cmpl
adc
xchg
cmp
sub
js
fimull
addl
push
out
movsl
add
push
pop
rcrl
test
out
andl
xchg
mov
mov
adc
nop
and
push
in
daa
outsb
lock
cmp
pop
icebp
and
jge
rolb
cmp
push
mov
test
adc
jbe
aam
lcall
mov
inc
jbe
loop
mov
jae
pop
out
sub
cmpsl
mov
push
cmp
mov
aas
xor
out
cmpsl
inc
adc
xor
sub
xor
xor
jno
and
adc
scas
inc
lock
insb
push
xlat
cmpsb
in
pop
ja
xor
mov
mov
lahf
into
add
or
lcall
fildll
push
repnz
fwait
add
and
popf
lods
mov
sbb
jp
and
cmpsb
mov
leave
cld
xchg
jo
sub
mov
xor
xchg
mov
adc
jne
inc
mov
pop
in
cmp
fstpl
aad
icebp
pop
jnp
and
add
push
popa
or
pusha
pop
das
xchg
sub
add
cwtl
add
cmpsb
scas
push
or
jo
fucomi
xchg
mov
mov
inc
inc
adc
adc
mov
mov
pop
xchg
push
les
lret
push
nop
xor
add
imulb
jnp
or
aad
xchg
icebp
sub
popa
push
pop
sbb
xor
aam
xor
enter
add
inc
mov
and
sbb
mov
pushf
popw
add
add
test
out
push
cmpsb
push
addr16
icebp
add
cmp
xchg
jno
pop
loopne
adc
mov
mov
or
inc
xor
test
cwtl
dec
pop
lret
cmpsb
jae
leave
popa
rol
jl
sub
jp
inc
jo
sbbb
pop
nop
dec
adc
and
mulb
mov
addb
pop
test
pop
lods
add
fs
inc
sbb
sbb
xor
aad
es
sbbl
sub
and
jp
mov
push
lock
outsb
add
and
andl
push
loope
push
xor
test
cli
repnz
push
lahf
lret
cmp
inc
movsb
subl
and
and
test
pop
ljmp
in
popa
mov
lock
jbe
xor
dec
jge
cmpsb
mov
repnz
imul
rcrl
jmp
or
scas
sub
xor
inc
add
loopne
nop
lahf
sub
dec
inc
cs
push
sbb
loope
push
xorl
sbb
iret
fists
insb
push
cltd
inc
and
add
xor
pusha
movsl
or
or
add
or
jb
pushf
hlt
and
jp
pop
xchg
mov
call
mov
cmovbe
popf
sub
gs
aad
add
or
test
aam
and
xor
or
imul
mov
lret
mov
add
dec
xchg
push
incb
nop
xor
mov
mov
sbb
dec
adc
sub
lods
sbb
ljmp
es
jae
xor
add
and
or
cmpsl
cmp
hlt
cmp
adc
and
mov
jo
jg
inc
push
xor
and
dec
sub
or
scas
sbb
sbb
inc
push
add
push
and
es
rolb
adc
ret
jnp
dec
cmpsb
add
jge
dec
add
and
mov
aad
sbb
mov
cltd
or
loope
mov
pop
aam
mov
inc
int
shlb
cltd
push
cmp
or
lea
xor
in
or
int
inc
sub
push
ret
push
adc
ss
and
setl
xchg
add
xchg
dec
push
xor
or
push
and
or
xchg
mov
shlb
cmpb
lds
jmp
inc
loopne
ret
std
cwtl
mov
push
ret
xchg
xor
aas
std
dec
xor
xchg
jge
repnz
adc
add
inc
int
xchg
flds
clc
das
add
addb
fmull
xor
pop
test
xlat
jnp
push
jae
stc
imul
xor
push
rcrb
mov
or
mov
adc
loopne
and
dec
add
aaa
jnp
shlb
jge
repz
orb
sahf
inc
xchg
and
xchg
in
cmpsb
xor
test
xor
pop
xchg
mov
adc
mov
aam
mov
or
xor
or
jb
inc
mov
mov
retw
sub
orb
push
jae
jno
inc
xor
push
jae
pop
scas
into
sbb
lcall
adc
xchg
xchg
lret
test
add
cmp
xchg
add
cmp
popa
rclb
push
mov
dec
push
mov
and
fcmovnb
rol
mov
inc
add
inc
sbb
fcompl
xlat
adcb
mov
adcl
test
dec
ljmp
dec
xchg
rorl
pop
mov
cwtl
jo
sbb
mov
add
loope
or
call
orl
xor
or
lods
sti
jge
xchg
and
mov
push
ret
stc
call
in
lods
add
lahf
jge
push
adc
inc
mov
push
or
xlat
popa
rclb
xor
lcall
out
mov
add
rclb
add
adc
or
mov
popf
test
fistpll
push
rcrl
cltd
scas
sub
movsl
aad
inc
cmp
mov
jno
mov
mov
jecxz
adc
subb
cmpl
pop
inc
loope
mov
jne
add
xor
pushf
leave
gs
or
je
in
not
mov
das
jb
xor
shrb
in
icebp
andl
dec
ret
inc
in
inc
jae
leave
push
fwait
inc
xor
pop
aam
xor
or
out
or
pop
rorb
push
mov
pop
mov
sbb
adc
push
jae
test
ljmpw
js
pop
pusha
xor
push
test
cmp
or
inc
in
inc
add
out
push
add
sbbb
sbb
add
dec
add
mov
loop
pop
in
pop
into
inc
sbb
push
and
sub
lods
cmp
jb
push
or
sbb
push
bound
mov
cltd
mov
call
es
pop
loopne
inc
mov
sbb
cmp
cmp
in
lret
cmp
lret
gs
inc
or
add
fxch
shrb
push
sbb
xchg
loope
mov
adc
cmpsb
pop
pop
inc
sbb
xor
xchg
xchg
decl
int
and
leave
sti
adc
fisubl
push
add
mov
mov
mov
insb
push
and
or
sub
xchg
xchg
inc
jp
adcb
mov
or
xchg
imul
andb
mov
pop
loopne
in
gs
jne
inc
jae
xor
xchg
push
push
xor
jno
mov
sub
push
sub
adc
push
cmp
dec
cmp
mov
sub
add
add
cmp
push
cs
lret
push
test
jb
leave
rorl
or
test
add
popf
lods
out
pop
mov
push
push
stos
add
pop
jb
jo
cmp
push
sbb
push
popa
dec
sbb
cmc
orb
xchg
xchg
inc
or
cmpsb
enter
inc
loop
sbb
jo
test
or
mov
inc
lea
fiadds
pop
jne
sub
sbbl
js
sub
adcl
pop
subl
int
sbb
int
jmp
sbb
jb
add
popa
xor
mov
cmp
mov
jge
jle
xor
jo
std
push
imul
mov
xor
roll
ja
test
jo
nop
and
nop
adcl
cmp
push
test
test
fmull
test
enter
sbb
sub
xor
or
pop
divl
inc
jnp
pop
nop
push
sbb
xchg
cmpsb
sub
das
clc
sub
rolb
scas
push
addr16
sub
add
les
mov
push
es
cmc
enter
ret
lcall
cmpsb
cmp
or
sub
lea
add
sbb
ret
push
lods
mov
rclb
jmp
lsl
jecxz
out
pop
mov
aaa
xor
movsl
gs
mov
sub
add
xor
cltd
xor
mulb
lahf
inc
cmp
sbb
fchs
sbbb
xchg
decb
xchg
push
inc
inc
jp
add
mov
test
mov
add
sub
fs
push
cmpsb
aam
dec
clc
push
cmpsb
ljmp
or
push
movsb
adcb
cld
and
push
inc
leave
stos
aas
outsb
xorb
pop
inc
scas
adc
push
xlat
adc
adc
adc
adc
push
gs
mov
lea
inc
xorl
dec
xchg
add
xor
or
pop
sti
repz
pop
inc
into
push
sub
pop
mov
jp
inc
xor
ljmp
outsb
pop
jns
rcl
adcb
lods
adc
xor
popa
loop
cmp
out
jo
stos
pushfw
das
and
sbb
jge
cs
pop
faddl
xchg
scas
loopne
mov
adc
dec
insb
adc
test
adc
popa
and
pop
jg
mov
in
int
sbb
add
mov
dec
add
sbb
lcall
adc
imul
cmp
lea
sub
es
mov
rcrb
mov
jae
cltd
cmp
.byte
call
in
add
push
lea
push
lea
push
push
pushl
add
push
aaa
pop
sti
jg
push
call
leave
ret
les
or
call
in
push
add
add
ljmp
mov
cld
lea
push
push
addr16
inc
jo
inc
add
adc
in
inc
sub
add
jmp
add
or
xor
fs
lea
mov
push
push
cmp
pop
sbb
gs
mov
or
lock
in
pop
gs
rclb
sbb
ficoms
push
adc
add
mov
repnz
ljmp
push
jge
inc
addr16
daa
mov
addr16
icebp
adc
adc
jg
fbld
jnp
icebp
push
add
jge
jge
adc
adc
icebp
jnp
or
daa
push
adc
addr16
mov
outsl
mov
mov
daa
es
push
pop
imul
dec
es
jae
jnp
inc
addr16
sub
sti
insl
imul
adc
adc
dec
mov
divb
push
icebp
add
es
mov
mov
pop
push
adc
add
icebp
popf
adc
imul
or
and
in
fisubrs
daa
add
es
sub
adc
mov
mov
icebp
push
adc
jae
lods
mov
push
mov
dec
pop
fcmovnu
jbe
inc
pop
add
cmp
fistpl
adc
mov
push
lcall
xor
jb
push
or
fwait
aaa
adc
xchg
mov
insl
fwait
ds
xor
inc
es
pop
pop
push
imulb
test
aaa
daa
add
inc
pop
fcmovnu
adc
xor
call
int
mov
jae
adc
jmp
mov
ret
or
push
add
fnsave
orb
jnp
mov
pop
imul
inc
adc
push
xlat
pop
ss
or
push
pop
jne
pop
leave
inc
xor
imul
lea
and
fsubl
lods
es
cld
lret
shl
stos
int
int3
mov
or
test
add
pop
and
outsb
mov
push
inc
inc
shrl
int
aad
daa
fcomps
imul
imul
arpl
push
dec
push
and
jae
rclb
add
fwait
sbb
adc
push
icebp
pop
jne
lods
rorb
inc
adc
xor
push
mov
imul
mov
add
leave
xchg
aam
and
mov
fsts
adc
lds
cmp
mov
inc
lods
mov
cmp
jne
cmp
or
jge
sbb
popa
popl
mov
mov
test
loope
out
subb
xchg
or
mov
adc
sbb
mov
jae
lcall
adc
jmp
inc
add
adc
test
jmp
aad
mov
sub
test
push
add
dec
cmpsl
popa
outsl
jbe
dec
sub
adc
sbb
push
or
ret
negl
push
and
lret
cld
aas
add
add
xchg
mov
push
add
fcmovnbe
ret
in
sub
and
iret
scas
inc
push
sarb
pushf
push
std
push
jge
jecxz
int3
outsl
imul
fsts
xor
jnp
sahf
jmp
mov
mov
imul
jae
jnp
pop
rorl
lods
push
loop
es
mov
daa
lods
psubsw
ret
mov
pop
adc
adc
push
push
sbb
mov
rcrb
dec
pop
in
cmp
sub
int3
and
adc
sub
push
outsb
and
out
mov
scas
push
push
adc
dec
lods
adc
and
mov
or
fiaddl
in
daa
popf
inc
das
sub
pushw
cs
xchg
rcrl
sbb
cld
frstor
mov
push
jnp
rcl
pushf
push
scas
ljmp
insb
outsl
jnp
sbb
repz
rorb
cmp
jnp
dec
push
imul
jl
fisttpl
lods
mov
icebp
inc
sbb
mov
inc
sub
lods
xor
xchg
loopne
sarl
add
scas
add
mov
shrl
test
pop
imul
mov
sub
test
push
scas
loopne
pop
push
add
gs
add
pusha
lods
shll
das
adc
out
push
xlat
adc
adc
pushf
test
popa
xor
xor
in
lods
mov
pop
xchg
add
cmp
loopne
mov
repnz
add
int
sahf
aaa
cltd
clc
adc
in
sbb
stos
push
mov
mov
xchg
sbb
pop
int
imul
jp
sbb
xlat
daa
bound
xchg
stos
mov
adc
mov
push
xor
cltd
sahf
shl
cmp
fwait
stos
test
popa
es
sahf
xchg
rcrb
mov
sbb
scas
pop
or
mov
dec
xchg
xchg
sbb
out
test
push
sub
fdivl
mov
add
jo
leave
mov
adc
fisttpl
insl
aaa
and
out
add
inc
push
push
popa
push
mov
cmp
sbb
mov
xchg
or
scas
xlat
clc
jge,pt
insb
xor
cmp
mov
jb
lods
lock
adc
add
and
ja
cmovo
or
add
movl
mov
push
jle
push
adc
adc
call
movsb
stos
sbb
mov
imul
jmp
lcall
scas
out
inc
loopne
lcall
pop
call
pop
sbb
cmp
loope
lds
pop
lods
cltd
push
pop
aas
rcrl
mov
and
test
in
sub
jge
push
xor
cld
cltd
dec
lods
insl
mov
out
push
mov
icebp
sub
or
hlt
xchg
or
lcall
arpl
jb
pop
push
adc
sub
daa
or
push
data16
xor
addl
inc
imul
fistpll
mov
xor
cmp
adc
mov
pop
jnp
les
loopne
cmpl
int
lret
imul
mov
xor
test
push
mov
lods
jmp
test
stc
sbb
xchg
mov
in
int
xchg
mov
mov
int
dec
dec
push
pop
int
lea
pop
int
cmp
jge
push
out
pop
push
leave
cmp
xchg
cmc
mov
dec
mov
fcompl
es
jb
sub
pop
push
mov
js
push
push
cmovl
imul
rolb
sub
dec
loopne
pop
imul
sub
push
cli
jo
push
lods
inc
repnz
push
pop
push
adc
push
cs
roll
add
addr16
jnp
or
ljmp
add
push
dec
lea
mov
fs
fsubl
adc
es
xor
jns
add
lcall
jae
adc
pop
xor
mov
js
cltd
mov
dec
imul
jge
push
mov
inc
das
push
addr16
xchg
mov
es
jmp
mov
dec
jae
add
mov
mov
lcall
mov
and
jmp
rcl
imul
cwtl
popa
xor
cmp
push
sbb
or
jne
adc
les
add
push
jge
mov
sbb
dec
xchg
push
inc
mov
xor
jg
mov
lcall
xchg
jne
push
mov
jmp
xor
inc
es
jg
call
add
bt
dec
int
aam
rclb
addr16
es
inc
inc
into
in
inc
dec
adc
dec
int
mov
push
cmp
ljmp
jmp
test
mov
inc
mov
popa
std
call
xchg
inc
mov
loopne
pop
cmp
push
inc
push
das
adcl
inc
sbb
push
push
or
xchg
ret
mov
adc
push
jge
sub
inc
xchg
xchg
js
mov
pop
cmp
xchg
jb
pop
pushf
mov
fst
dec
cmp
push
xchg
int
or
dec
mov
loop
loope
sub
loop
inc
pusha
lret
outsl
xor
faddl
jg
imul
xchg
and
or
clc
nop
loope
cwtl
lret
pop
test
mov
mov
stos
jae
pop
int
fmuls
pop
daa
es
or
mov
fucomi
mov
scas
mov
mov
add
push
jae
mov
or
push
xor
adc
clc
push
xlat
mov
sub
push
inc
lret
mov
cmp
push
pop
mov
xlat
push
shlb
int
sbb
and
ss
fimull
xchg
vorps
scas
sbb
inc
dec
ss
push
cmp
outsb
xchg
icebp
push
adc
leave
in
pop
test
faddl
and
pop
icebp
push
int3
inc
adc
or
pop
cmpsb
push
mov
or
mov
mov
push
push
lds
lcall
aam
orl
out
add
pushf
ret
fidivs
jmp
divb
mov
aam
es
inc
jae
mov
add
add
je
push
add
push
adc
sub
or
adcl
lds
jmp
pop
aaa
jge
dec
test
pushf
add
cmp
sahf
addl
mov
pusha
enter
in
push
shlb
sbb
ljmp
aam
add
or
icebp
inc
push
lret
sbb
rol
mov
orb
rcrl
sub
xor
xor
dec
icebp
add
cmp
adc
cli
fistpl
push
rcrb
movb
in
or
xlat
push
push
cmp
xchg
sbbl
shr
das
sub
sbb
and
push
pop
cmpsl
cli
sti
fs
mov
sub
mov
scas
mov
jae
lcall
out
sbb
sub
hlt
push
rorl
cltd
mov
idivl
andb
mov
imul
adc
lds
lods
in
adc
subb
std
add
data16
test
les
cltd
sub
cmp
arpl
mov
pop
inc
push
imul
mov
xor
icebp
xor
cmp
fs
mov
add
push
push
xchg
mov
mov
daa
shll
iret
jg
addr16
loopne
mov
add
or
and
cmpl
bound
rcrl
fdivrl
pop
fs
addr16
popa
or
push
adc
or
stos
add
dec
cli
scas
xor
mov
mov
adc
cmp
mov
sti
cmpsl
or
or
or
sub
sahf
xchg
dec
lcall
test
addb
mov
inc
jae
add
data16
mov
inc
ret
test
adc
cmc
sub
in
int
data16
cmp
or
xor
xchg
dec
push
or
jg
ret
push
mov
fistpl
das
in
inc
cmp
in
shr
pop
mov
push
mov
shll
repz
adc
dec
pop
lahf
add
push
push
lret
test
add
stc
lcall
icebp
xlat
mov
mov
insl
int
or
push
js
dec
mov
adc
addl
mov
push
jg
inc
cmp
add
nop
or
shlb
shll
ret
add
add
inc
cld
fistps
sbb
push
out
negl
push
mov
push
dec
xor
fmuls
int3
adc
dec
sbb
testb
in
and
lea
push
cmp
add
clc
cld
sbb
adc
lds
push
and
adc
or
pop
add
mov
inc
inc
or
or
sub
inc
sub
mov
dec
into
shl
jle
add
xor
nop
out
push
cmp
dec
xchg
imul
pop
add
fs
cmpsl
mov
fs
sbb
cmpsb
inc
jmp
sbb
mov
push
addr16
xor
lret
fwait
adc
or
or
dec
cmp
jnp
call
ficompl
cli
add
add
xchg
adc
andl
enterw
and
lcall
pop
pop
sti
adc
in
int
mov
in
xor
sahf
shll
pop
mov
icebp
aaa
arpl
sub
pop
sub
outsl
leave
mov
xchg
adc
mov
pop
pop
add
xor
cltd
or
lcall
jae
jno
adc
pop
mov
jo
push
addr16
mov
xor
int
sbb
les
xor
sbb
aam
xchg
sub
subl
lcall
push
test
add
testb
cmp
add
add
push
jae
or
adc
sbb
scas
iret
cmp
ret
push
imul
ss
jbe
es
rclb
out
pop
mov
or
push
mov
push
js
add
jl
jle
inc
jne
sbb
rclb
xor
data16
adc
cld
and
pop
das
pop
nop
xor
sub
xchg
sub
add
push
sbb
mov
jmp
dec
mov
pop
not
mov
push
xchg
push
and
lea
jmp
and
push
push
insl
add
ljmp
push
xor
into
push
xor
lret
cmp
loop
sbb
sub
out
and
push
cltd
call
dec
xor
les
pop
jnp
xorl
adc
dec
shll
ljmp
cmp
inc
imul
lret
jne
xor
adc
popa
enter
inc
test
xor
mov
shrb
pusha
xor
sbb
adc
gs
sub
sbb
in
add
xchg
jmp
pop
out
jae
pop
sbb
push
inc
shr
push
inc
add
jno
sub
sbb
mov
cltd
lcall
add
jo
add
fildl
inc
pop
movsl
push
pop
jge
push
xor
pop
and
adc
mov
adc
cmp
jle
xor
pop
mov
inc
xchg
fcomps
mov
push
in
xor
add
mov
adc
xor
maskmovq
notl
ja
sbb
shll
mov
into
adc
int
add
lret
xchg
mov
cmpb
lods
cmp
inc
dec
mov
test
popf
imul
addr16
inc
jge
loopne
jne
mov
mov
addr16
ja
imul
mov
or
das
add
push
inc
stos
mov
popa
mov
in
push
inc
pop
add
decl
out
inc
leave
aad
dec
aas
cmp
jb
andl
stos
daa
mov
shl
jns
fisubs
loopne
dec
xchg
sub
push
stos
inc
and
in
dec
sbb
xor
add
jae
out
mov
lods
adc
xchg
rcrl
les
cmp
cmp
cltd
sbb
pop
adc
int
push
iret
adc
shlb
pop
add
loopne
xor
scas
les
push
pushf
mov
inc
xor
jno
repnz
jb
push
movsl
push
sbb
xchg
jns
mov
push
adc
inc
rcrl
daa
pop
add
mov
pusha
add
loope
dec
popf
mov
loop
filds
sub
sbb
shl
incb
cmp
loopne
push
adcb
lods
cltd
mov
cmp
mov
scas
cmp
fwait
or
push
mov
jo
xchg
mov
push
and
enter
ljmp
xchg
adc
loopne
popf
mov
addr16
out
loopne
push
jae
or
pop
loopne
or
je
xchg
or
loopne
add
jl
repnz
cs
sbb
andb
or
cs
syscall
addr16
or
mov
push
dec
mov
cmp
andb
pusha
scas
jae
sub
daa
pop
pushf
push
aam
lods
inc
mov
jo
rol
std
sbb
orl
outsb
loopne
inc
xchg
ljmp
or
add
add
or
shl
ret
adc
mov
aad
pusha
shlb
add
fiaddl
xchg
xor
xorb
sbb
inc
pushf
in
insl
mov
push
int
jae,pn
jmp
pushf
out
hlt
mov
push
iret
fcompl
mov
add
mov
mov
sub
mov
mov
inc
data16
jnp
add
push
cltd
sbb
jp
aad
cli
push
imul
adc
sub
gs
jmp
or
into
shlb
and
sub
sbb
adc
rorb
fs
mov
xchg
jb
inc
sti
mov
sbb
push
cmp
popa
inc
jmp
push
xchg
fdivrl
loope
or
inc
jne
leave
push
xor
adc
addr16
jb
pop
jae
push
sub
mov
lods
shll
sub
pop
scas
cld
bound
das
adc
mov
or
cltd
add
nop
ret
pusha
daa
mov
into
in
adc
cli
roll
popa
jo
cmp
inc
jecxz
pop
es
mov
mov
xchg
and
sbbl
adc
sub
sub
jle,pt
pusha
mov
mul
test
and
sarl
inc
or
ret
add
jnp
jo
push
mov
sbb
add
loopne
or
push
sti
xchg
gs
in
jg
adc
mov
mov
loopne
mov
xor
sbb
not
add
cmp
jb
sub
or
mov
mov
sbb
mov
icebp
into
inc
es
push
outsb
adc
lahf
xlat
dec
cmp
aaa
daa
notl
xor
out
test
cmp
cmp
mov
sbb
xor
adc
push
push
in
in
mov
mov
dec
pop
aaa
sbb
push
mov
adc
rcl
or
nop
xor
lahf
or
js
in
jle
insl
aad
outsb
test
mov
cmpb
mov
xor
xchg
mov
mov
xlat
cmp
xchg
ret
loopne
mov
sbb
sbb
mov
or
add
test
cmp
lods
jae
js
out
mov
enter
and
cmpsb
sbb
push
add
or
mov
jo
mov
or
push
mov
rcrl
fcmovnu
xchg
adcb
mov
dec
or
cwtl
sub
sbb
xchg
and
inc
scas
sbb
mov
adc
daa
stos
adc
push
pop
cmpsb
pop
fs
movb
cmpl
push
push
pop
das
inc
orb
sub
or
mov
test
bound
aam
jae
xchg
lea
dec
mov
lods
add
pop
jge
sub
jnp
jae
xor
cmpsb
fiaddl
int
push
es
popa
daa
pushf
out
push
add
leave
xchg
xlat
aad
popa
dec
add
pop
sbb
les
cwtl
pop
orl
les
sbb
jmp
test
sbbl
inc
jo
dec
loope
sbb
stc
sbb
push
sti
push
jnp
in
add
mov
dec
call
push
or
subb
pop
cmp
mov
into
int
bound
push
sbb
adc
xchg
push
icebp
jo
out
iret
stc
push
sbb
cmpsl
push
inc
inc
divl
add
paddd
incb
mov
shrb
add
icebp
pop
add
pop
mov
pop
pop
mov
or
add
dec
out
sub
mov
dec
in
rcr
push
popf
cld
test
inc
test
jno
dec
jge
arpl
jmp
addb
call
daa
in
std
push
mov
push
push
addb
add
sbb
pop
xchg
icebp
xor
inc
inc
dec
and
stos
sub
pop
aam
inc
leave
adc
mov
push
lcall
sbb
rcll
dec
jae
xlat
jle
test
push
and
or
rclb
mov
push
cmp
push
mov
daa
arpl
jge
jne
test
or
aad
scas
or
adc
lods
scas
inc
xchg
aam
push
adc
ds
cmp
mov
mov
ret
cmp
inc
das
push
mov
mov
inc
and
mov
clc
fs
mov
in
xor
mov
adc
loopne
lea
aam
cmc
aam
pop
mov
push
sbb
xor
jne
and
push
cwtl
daa
es
pop
int
dec
in
pop
jg
fisubs
pop
jae
pusha
movaps
push
xor
xor
jo
out
daa
std
cmpsl
andb
pusha
push
sub
dec
ja
lret
nop
lret
aad
daa
inc
loope
sbb
pusha
loopne
mov
xchg
adc
xchg
sub
mov
jno
popa
mov
stos
or
lcall
dec
in
pusha
movsb
push
mov
cmp
orl
push
xlat
mov
nop
adc
scas
adc
push
in
in
xchg
imul
mov
cmp
adc
adc
mov
or
sbb
ret
int
pop
jl
xor
bound
lcall
jmp
cmovl
add
push
popa
or
push
and
sbb
out
add
mov
sbb
rcll
fildl
jae
daa
push
mov
mov
es
jle
push
int3
add
movsb
or
ret
int3
adc
lcall
scas
xor
iret
cmpsl
stos
push
jb
enter
rorb
xchg
cmp
les
push
pusha
adc
ret
rolb
inc
xor
push
or
test
cmc
insl
scas
cltd
test
pop
push
sub
or
addb
test
rcll
lods
mov
in
xchg
notb
add
push
nop
outsb
imul
fcoms
int
mov
nop
mov
arpl
sub
les
jge
push
aas
leave
lods
loopne
mov
popl
out
and
cmp
add
scas
subl
cmp
test
pop
xchg
fiadds
rclb
push
lret
dec
push
add
ljmp
fimuls
adcb
add
add
pop
push
sbb
xchg
adc
iret
add
mov
leave
aas
push
push
mov
int
xor
push
sub
inc
push
roll
pop
cltd
andb
in
jae
pop
pop
mov
sbb
jo
push
orb
dec
mov
cmp
ror
jae
insb
adc
pop
xor
and
xchg
cmp
jmp
add
add
enter
cmp
pop
pop
mov
push
sub
in
imul
inc
jle
lods
gs
and
pop
enter
or
cwtl
pop
addb
sbb
rol
orl
imul
cs
cmpsl
dec
lods
ret
popa
xchg
jae
push
inc
jae
jb
xchg
icebp
dec
pusha
sub
adc
or
sbb
sbb
outsb
stos
dec
pop
xor
dec
mov
sbb
je
mov
adc
scas
jo
add
push
cwtl
ja
dec
popa
ljmp
inc
or
outsb
adcb
mov
jo
addb
fstpt
ljmp
lcall
cwtl
sbb
int
adc
fwait
faddl
inc
jae
dec
push
inc
int
and
sbb
rcpps
mov
lahf
mov
or
mov
inc
pop
cmc
jne
jge
and
mov
jmp
test
adc
or
adc
sub
mov
mov
fnstcw
rcrl
loopne
mov
dec
push
xchg
or
outsl
dec
fs
or
test
sbb
in
mov
daa
insb
push
shll
sbb
jo
ds
and
addr16
pusha
test
and
popa
push
pop
into
cmc
adc
mov
sahf
xchg
xchg
xor
into
dec
xchg
xor
add
dec
popa
inc
jno
nop
cltd
xor
dec
test
dec
cmp
std
movsb
jge
mov
add
jnp
in
sbb
push
sarl
movb
xlat
push
addl
inc
addl
sbbb
jnp
js
jb
and
lods
xchg
call
pop
cli
das
sbb
xorl
lret
xchg
rcll
aad
fcompl
add
in
lock
fcomps
pop
pextrw
and
cmp
addb
outsl
mov
jnp
pushf
imul
push
xor
cmp
test
jmp
inc
adc
adc
loopne
roll
add
loopne
push
mov
cmp
mov
pop
and
lock
outsb
sbb
mov
rclb
mov
sub
sbb
add
dec
sbb
jle
xor
movsb
imul
add
mov
into
inc
add
std
dec
and
ret
or
add
repz
jg
pop
sbb
in
sub
loopne
mov
xchg
es
xlat
add
nop
data16
aam
aam
sub
hlt
loope
adc
mov
repz
mov
lret
iret
lsl
sbb
mov
cwtl
popa
sub
mov
push
sbb
ja
push
push
mov
icebp
lret
js
jnp
pop
scas
data16
and
sub
lret
add
push
aad
push
add
adc
push
sub
jmp
mov
daa
xor
lcall
mov
push
push
jae
dec
in
ds
dec
add
sbb
pop
imul
pop
xorl
scas
push
xchg
inc
jnp
push
addr16
pop
mov
sub
mov
inc
int3
daa
sbb
pop
push
jg
test
sub
jo
dec
mov
aad
xor
test
cmp
addb
daa
test
ljmp
xchg
cld
add
sub
cmpl
push
imul
pop
mov
mov
jle
jmp
push
cwtl
ret
repnz
mov
or
stos
jecxz
addb
pop
int3
xchg
or
lret
push
xor
stos
cltd
test
or
inc
aaa
leave
mov
call
stos
adc
push
stos
inc
xor
ret
or
sarl
rclb
push
addb
lret
in
out
popa
ljmp
push
jle
push
xor
aas
daa
or
xchg
jae
or
push
dec
add
aam
xchg
mov
inc
inc
add
jb
repz
and
inc
pop
or
loopne
pusha
sub
incb
data16
inc
cli
data16
mov
push
or
cld
hlt
or
adc
jns
jmp
mov
ret
fadds
push
les
push
scas
jmp
cmp
push
push
push
orb
movsb
mov
adc
xchg
mov
mov
sub
dec
fs
mov
jne
arpl
xor
sub
pop
pop
mov
dec
inc
iret
scas
mov
xlat
cld
clc
and
and
inc
xor
mov
mov
pusha
gs
sub
clc
push
and
cmpsb
data16
sti
insl
leave
adc
popa
sub
or
add
lcall
pushl
jno
jne
dec
popf
gs
adcl
insb
sbb
mov
or
pop
mov
xchg
mov
xchg
add
scas
xchg
mov
push
lea
jno
xchg
test
cmp
lds
rdtsc
pop
dec
cmp
dec
jge
push
mov
dec
jne
mov
or
xchg
mov
pop
cmc
push
aas
add
inc
pmaxub
add
adc
pop
xor
dec
test
dec
mov
push
sahf
push
pop
or
adc
lcall
jmp
test
add
adc
xchg
mov
jl
insl
aad
mov
push
mov
dec
icebp
add
pop
loope
push
or
push
inc
cmp
push
stos
push
sbb
loopw
rclb
jae
dec
shrb
leave
push
jae
arpl
fisubrl
inc
into
jle
mov
in
orl
bound
or
fisubl
fiadds
sub
mov
or
cld
adc
xchg
jae
or
popa
sub
lret
or
push
inc
xchg
cmp
xorb
xchg
jmp
imulb
push
cmp
int
dec
sti
inc
lret
sbb
fnsave
daa
mov
bound
cmp
xor
movsl
xlat
mov
xor
mov
mov
xchg
aas
xor
and
sbb
mov
mov
sub
inc
mov
dec
test
in
inc
lret
push
mov
sbb
push
xchg
mov
adc
das
shlb
xor
scas
data16
ret
jns
ret
push
call
or
scas
aaa
jo
nop
add
andb
scas
popa
jo
rorb
arpl
dec
and
mov
lcall
sahf
in
add
jne
cmpsl
push
dec
popf
mov
rol
leave
add
xchg
mov
adc
add
ss
mov
sbb
stc
mov
nop
push
leave
aam
or
push
jb
lds
adc
insb
lock
adc
push
mov
movsb
addb
mov
cmp
test
adc
push
and
aas
inc
int3
jnp
push
stos
orb
cltd
mov
fdivs
add
push
and
cmc
jge
push
scas
rclb
mov
loop
loop
push
push
adc
xor
aam
add
jno
bound
add
jge
popa
add
adc
jo
xor
and
add
shll
jo
ja
ret
ss
xor
sub
xlat
shll
mov
sbb
rcl
fdivrs
or
add
imul
ret
inc
setb
call
scas
les
cwtl
int
adc
stos
mov
push
or
rolb
jo
and
xor
fildll
cmp
sub
push
jmp
flds
ljmp
imul
jne
sbb
adc
dec
xorb
sub
loope
out
lock
pop
xchg
jg
and
loopne
sbbl
rcll
mov
push
dec
arpl
add
enter
push
xchg
jb
mov
and
hlt
mov
cmp
es
mov
or
shlb
push
outsb
mov
xor
loop
and
shll
es
lods
jae
sbb
and
xchg
dec
nop
sub
pop
shrd
mov
subb
jecxz
push
pusha
or
mov
imul
or
inc
pop
mov
loopne
mov
ret
jle
mov
orb
pop
add
push
cmp
push
btc
test
mov
subb
mov
push
rclb
das
and
mov
fs
mov
outsb
xor
or
in
xchg
push
clc
push
jno
data16
fisubrl
push
enter
pop
ret
test
jge
nop
rcll
jg
lahf
jae
lret
add
out
fcoms
repz
add
inc
sub
push
inc
sbb
mov
mov
adc
ret
push
sub
enter
xchg
mov
add
dec
rcll
add
or
and
pop
mov
fsub
outsl
jg
lcall
adc
dec
cmp
xchg
movsb
test
sub
push
jno
xor
jae
jmp
jo
repnz
pop
xor
jbe
in
incb
scas
inc
sbb
imul
fs
xor
mov
or
sahf
hlt
xor
rcrb
push
mov
cmpsb
and
andb
xorb
or
mov
movsb
data16
leave
fldcw
and
stos
dec
loopne
pusha
or
push
add
mov
push
xor
js
add
mov
cmpsb
test
inc
pop
fcompl
sti
sbb
mov
adc
sbbb
fmul
xchg
adc
les
popa
hlt
push
add
adc
sub
fs
in
and
dec
jge
cs
sti
in
add
cwtl
or
lret
xchg
lcall
sub
xor
mov
and
dec
cvtps2pd
mov
enter
pop
in
xorl
jns
or
jne
jge
stos
pop
jae
pop
push
enter
fstl
or
call
adc
adc
push
jnp
push
stos
pushf
ret
jp
add
mov
mov
push
jo
stos
cmpl
mov
mov
es
cwtl
dec
pop
push
cmpsb
inc
sbb
cmpsb
or
xchg
sti
push
in
add
dec
push
mov
xor
movsb
mov
movaps
adc
shlb
cmp
filds
insb
pusha
mov
adc
push
xchg
stos
outsb
push
sbb
subb
xor
push
xchg
pop
push
fstpt
sub
pushf
push
xor
insb
mov
mov
pusha
test
mov
add
es
mov
or
mov
and
jae
loop
push
push
addr16
inc
push
pop
push
clc
jle
xchg
ret
lds
mov
xlat
pop
sarl
dec
xchg
stos
add
fs
add
sub
adc
adc
jecxz
cmp
aas
xor
hlt
jb
or
in
stos
filds
sub
push
mov
arpl
mov
fs
inc
xor
xchg
out
mov
xchg
inc
adc
jo
mov
xor
fcompl
shlb
inc
popa
addr16
clc
incl
sub
jge
jecxz
fiadds
inc
mov
pop
dec
xor
or
into
sbb
push
ds
add
scas
pop
jae
popf
add
dec
mov
or
mov
push
loope
scas
mov
add
mov
cmp
jb
dec
in
jmp
add
test
lret
loopne
dec
mov
mov
sbb
or
inc
mov
addb
mov
sbb
jae
jae
xchg
std
sub
inc
mov
sar
inc
mov
das
xchg
add
push
loopne
sbb
subb
inc
xor
out
cmp
imul
scas
mov
or
sbb
push
icebp
jo
cmp
inc
faddl
jb
rcll
gs
xlat
add
adc
xlat
pushf
pop
scas
ja
pusha
push
sbb
pop
lods
popf
mov
xchg
push
adc
xchg
popa
scas
sub
and
ljmp
adc
daa
adc
xlat
fsubrl
or
adcl
xchg
enter
adc
pop
mov
dec
sub
jae
mov
aam
push
loopne
add
add
or
mov
in
add
xchg
sbb
push
inc
and
sbb
scas
loopne
das
xor
sub
and
cmp
wrmsr
jne
sub
or
clc
xchg
sahf
shrb
mov
push
sbb
pushf
or
cltd
arpl
mov
push
or
pop
mov
dec
xor
jb
ret
ja
sub
push
loop,pn
not
daa
mov
dec
icebp
fsubrl
push
dec
adc
xor
cmp
lods
cltd
mov
hlt
pop
sbb
sub
sbb
imul
arpl
or
cs
mov
push
ret
popa
imul
cmp
xor
add
sarb
jo
jb
push
sbb
mov
cmp
cli
inc
mov
inc
jb
sub
cmp
cmp
int3
call
call
outsl
mov
push
cmp
out
loop
lret
adcb
mov
jno
mov
faddl
or
push
cwtl
inc
je
fwait
add
gs
jno
fists
lret
cmpsb
scas
test
or
fldcw
inc
inc
xor
ja
enter
stos
lcall
adc
inc
and
out
es
xorl
cltd
or
mov
pop
mov
scas
test
enter
adc
xor
mov
into
js
loope
test
lret
pop
test
rolb
inc
cmp
push
sti
sbb
sbb
lret
repz
je
add
xchg
stos
add
pop
xor
mov
ret
test
sub
mov
fistps
mov
push
xor
push
push
push
xchg
stos
push
subl
sbb
mov
imul
into
clc
adc
jbe
dec
mov
popa
add
push
pusha
ret
mov
and
cs
xchg
push
test
orl
xor
fnstsw
pop
aam
jae
or
imul
roll
inc
jne
icebp
push
cltd
sub
pop
mov
push
and
xchg
pop
push
xor
lods
ret
subps
test
cmp
cmpsl
bswap
xchg
addr16
inc
cmp
xchg
add
pop
xchg
jns
add
pop
jge
scas
dec
fs
pop
and
cs
pushf
orl
and
or
add
cwtl
pop
and
push
xor
mov
outsl
sarb
xor
adc
push
scas
rorb
and
xor
jno
insl
loopne
xor
pop
cmp
lea
add
push
sub
scas
pushw
rcrl
inc
xor
arpl
repnz
jo
or
rclb
iret
jne
jnp
iret
mov
push
push
les
enter
lods
into
repnz
and
cmove
inc
rcrl
xor
mov
inc
pop
lea
loop
cmp
scas
subb
pusha
imul
push
lcall
mov
cmpl
dec
jge
and
outsb
or
mov
jb
insl
mov
add
or
inc
test
lret
adcl
mov
add
mov
repz
pop
scas
add
ret
ret
loope
icebp
jnp
xorl
shll
pop
lods
and
mov
mov
push
sbb
lret
add
lret
daa
dec
push
int
push
aam
pop
jae
inc
xor
push
inc
xchg
mov
outsl
lds
and
push
loopne
sbb
adc
push
and
jnp
rclb
adc
cs
es
mov
add
cmpl
sbb
adc
adc
sbb
icebp
shr
xchg
push
imul
jno
pop
cwtl
sbb
sbb
sbb
movsb
adc
aaa
rorb
xchg
rorb
int
icebp
pop
dec
in
lock
or
xchg
mov
push
adc
out
lock
add
push
cld
xchg
cmp
mov
ret
mov
mov
pushf
repnz
adc
sbb
xchg
test
icebp
fldt
push
push
push
pusha
push
lret
xchg
add
pop
mov
push
xchg
jns
jno
imul
mov
xor
dec
aam
jl
pop
je
mov
cwtl
or
sub
leave
add
push
call
pop
and
fwait
sbb
inc
push
jb
adc
cltd
jae
stos
inc
xchg
mov
pop
xorl
aad
icebp
je
push
cmpsl
xor
dec
push
mov
std
ss
cs
rol
jae
inc
jnp
aaa
aas
or
popa
mov
ljmp
sbb
or
loope
inc
push
pop
add
push
xchg
add
adc
outsl
ja
lock
out
dec
inc
jno
mov
rcl
imul
xchg
movsl
sub
jno
jmp
mov
ja
enter
xchg
add
sbb
sub
inc
testl
je
add
iret
lret
addr16
lods
mov
xor
pop
or
push
sbb
sub
jne
adc
call
in
xchg
inc
mov
fistl
and
inc
push
xlat
dec
jge
punpckhbw
rorb
cmp
sub
fistl
mov
mov
mov
sbb
pushl
sbb
jae
push
and
out
js
and
or
cmp
inc
adc
xchg
pushf
roll
imul
out
inc
add
or
or
jae
imul
jle
daa
mov
push
pop
sub
pusha
sub
nop
daa
icebp
adc
cltd
cmp
mov
push
push
xor
jae
jb
test
ret
movb
cld
add
pop
cltd
je
call
push
inc
xchg
lods
add
scas
jbe
add
dec
ret
pop
sbb
in
enter
mov
in
in
push
sbb
and
fisubrl
das
or
xor
and
sub
jmp
push
insl
jae
inc
call
or
ud0
adc
push
out
xorb
outsb
rclb
mov
jbe
push
int
dec
cwtl
mov
test
addr16
xor
xor
repz
mov
shl
pushf
add
les
mov
rcl
mov
adc
inc
add
mov
std
jbe
and
adc
jnp
in
ret
sahf
pop
es
lcall
jle
add
lcall
pop
aad
xlat
fstpt
lods
ret
adc
shrl
jb
movsl
sbb
add
rcrb
mov
dec
xor
inc
sahf
push
mov
nop
xchg
iret
add
out
out
push
cmovo
js
xor
shrb
incl
enter
jb
mov
sbb
and
rolb
xchg
sahf
jo
stos
jnp
aas
sbb
or
push
mov
jo
jecxz
imul
jb
mov
lcall
push
push
xor
pop
xor
adc
andl
adc
enter
push
out
xor
in
andb
cmpsl
adc
xchg
or
xor
mov
inc
aaa
xor
or
imul
loope
pop
das
dec
jno
cltd
xor
movl
ret
dec
cmc
ret
inc
inc
sub
mov
sbb
lds
dec
int
sarb
push
jo
rcll
fnstcw
lret
push
out
aam
mov
aad
imul
nop
pop
jno
sub
sbb
ret
std
les
add
js
xor
push
pop
or
add
or
ret
mov
pop
out
rorl
loope
data16
addl
cmpsb
les
in
mov
loop
push
or
and
add
jecxz
mov
and
scas
xor
andb
jb
fsubs
ds
mov
xchg
pop
dec
pop
mov
mov
pop
aas
jge
adc
add
or
cmpsb
xor
push
jnp
test
and
or
out
cmp
dec
mov
int
sub
sub
aam
mov
sub
and
or
xor
cmp
xchg
andb
pusha
mov
cs
xor
xor
mov
aad
xor
cwtl
push
mov
or
pop
xor
push
push
push
xchg
icebp
mov
cmp
sub
call
push
xchg
fcomps
pusha
test
push
movsb
in
push
loope
adc
push
sahf
add
and
inc
imul
rorl
add
aaa
lret
inc
cmp
int
cmpl
or
cltd
dec
fcoml
adc
iret
xor
aam
mov
push
push
pop
lea
push
push
mov
dec
fmuls
mov
call
hlt
push
push
push
push
mull
xchg
fiaddl
dec
cwtl
sbb
stos
dec
jne
pop
xor
lods
push
or
xchg
cmp
hlt
mov
int
push
xlat
clc
add
clc
movsb
das
rclb
stc
push
enter
cmpsl
mov
xor
adc
pushf
sbb
js
push
adc
adc
imul
adc
addl
insl
fnstcw
sub
sbb
aas
sbb
call
movb
addb
test
push
sub
mov
push
inc
imul
mov
rcll
out
mov
push
push
sub
dec
stos
xor
mov
add
push
jg
add
lcall
jb
push
lea
and
sub
jp
daa
int3
push
mov
push
inc
or
sub
dec
mov
pusha
std
lods
dec
iret
in
inc
mov
out
call
pop
call
lcall
loope
inc
out
jbe
stc
jae
andl
ret
ret
push
adc
imul
jb
ret
push
jl
inc
xor
adc
mov
stos
mov
into
inc
sbb
inc
jbe
sbb
jae
or
imul
cwtl
mov
test
jae
rolb
pop
scas
push
add
aas
pop
mov
push
mov
fs
dec
pop
lods
cmp
dec
mov
add
data16
in
mov
dec
int
mov
es
cmp
or
or
subl
stos
add
cmp
xlat
int3
dec
xor
lahf
es
jb
mov
es
jb
push
and
xchg
sub
ret
inc
into
add
sub
xor
add
mov
inc
pop
pop
lea
jo
lock
repz
xor
mov
shrb
mov
jns
sub
cwtl
sbb
ret
push
xor
jne
jns
lret
xchg
js
cld
insb
notl
lods
ss
scas
sbb
vphsubdq
adc
loope
adc
inc
or
orl
xchg
imul
mov
ljmp
lods
adc
jne
adc
cltd
xchg
andb
data16
mov
add
or
xchg
addb
pop
or
mov
ror
push
inc
lea
sbb
xor
cmp
lcall
inc
mov
ret
jge
cs
inc
add
add
cmp
jnp
lret
pop
mov
mov
xor
inc
sbb
test
push
dec
jne
mov
leave
or
ret
fs
cmpsl
sub
cmpsb
push
inc
push
mov
fistpl
sbb
adc
add
iret
adc
das
fsubl
es
jb
pop
sub
mov
push
cmp
add
int3
adc
add
push
hlt
inc
mov
mov
cs
stos
push
or
pop
xor
rep
mov
inc
stos
sub
fidivl
mov
cmp
dec
shll
push
add
push
fisubrl
jl
mov
aam
ud0
push
ss
adc
xlat
dec
push
insb
dec
pop
adc
push
xor
pop
push
ja
cmovl
das
jo
mov
add
cmp
subl
out
lock
enter
mov
or
loopew
add
lea
mov
pop
adc
shll
and
rcl
fwait
jns,pn
add
cltd
mov
push
or
jo
mov
imul
jae
inc
aam
notl
jnp
cmp
int
xor
mov
mov
mov
mov
enter
mov
ret
xchg
mov
loop
lcall
loopne
xchg
xor
xchg
or
fisttpl
push
jb
cmp
add
pop
les
fcom
push
scas
call
inc
cmp
aad
lret
inc
cltd
mov
dec
into
inc
popl
cmp
lea
test
stc
sbb
pusha
mov
movsb
rorb
dec
pop
pop
es
or
pop
xchg
je
aas
xor
push
inc
sub
lock
push
add
mov
ljmp
add
jno
orb
mov
cmp
inc
les
mov
mov
add
sbbb
push
push
clc
mov
mov
sbbb
test
cmc
jae
sti
and
cmc
jge
inc
push
inc
cmp
add
js
pop
cmp
stos
and
rorb
divl
inc
add
adc
xchg
ret
stc
and
inc
int
pop
sub
pushf
or
xor
rcrl
mov
lret
mov
push
jne
pop
or
mov
jge
addl
inc
pop
dec
dec
lret
push
sub
mov
mulps
dec
add
dec
adc
lret
call
push
notb
scas
ret
cmpsb
sbb
aam
nop
sbb
cmp
aad
mov
sbb
pusha
loopne
loopne
add
sbb
shrb
push
and
jae
add
sbb
sbbb
inc
scas
push
mov
cmpsb
lcall
int
ret
jb
movl
xchg
sub
inc
inc
addr16
mov
nop
xchg
pop
inc
es
or
addb
shrb
mov
pop
divl
mov
or
pop
push
pop
loopne
test
fadds
xor
faddl
daa
sbb
xchg
xchg
mov
rcrb
inc
hlt
add
outsb
pop
inc
mov
inc
das
jmp
ljmp
stos
dec
push
dec
inc
call
cltd
pushf
pop
xor
add
pop
or
or
cmpsb
push
sbb
add
sub
add
cmp
add
push
adc
add
jo
aad
pop
nopl
xor
sub
shll
lcall
ficoms
mov
jge
orb
xchg
jge
nop
stos
mov
or
push
cmp
incl
jae
addb
sub
push
ret
test
inc
or
pop
scas
adc
jg
cltd
jo
add
cmpsl
test
int3
mov
andl
fcom
fsubrl
push
mov
loopne
cmp
push
rorl
pusha
daa
rolb
add
adc
jmp
andl
mov
addr16
inc
add
adc
sbb
jle
in
scas
pusha
xchg
ds
mov
pop
mov
sbb
xor
dec
sub
xchg
cmpsb
add
push
and
push
adc
shll
sti
push
inc
out
and
sub
loope
shrl
seto
sub
andb
lcall
mov
lret
xchg
or
data16
popa
call
fs
lea
xor
es
or
lods
inc
or
testl
imul
sub
add
or
pop
imul
rolb
daa
into
aam
lea
adc
mov
inc
xorb
sbb
rolb
xor
daa
outsb
imul
push
push
lahf
sbb
ret
adc
je
test
pop
xchg
adc
mul
inc
ffreep
loope
mov
ret
sbb
cmp
sbb
retw
into
push
in
in
fsubs
pop
xchg
mov
mov
add
xorl
mov
adc
bswap
cmp
cmp
aad
out
mov
je
sbb
adc
and
xchg
movsb
subl
shl
je
add
addr16
inc
push
adc
inc
sub
add
rorl
rolb
into
inc
leave
loope
shrb
inc
lcall
in
mov
pushf
or
ja
ret
sub
add
pop
js
loope
push
cmp
test
sbb
mov
test
add
or
push
add
cs
std
adc
outsb
mov
mov
mov
xchg
cwtl
pop
int
cmpsl
cld
mov
push
xor
xchg
pushf
movsl
push
test
sub
push
faddl
clc
inc
ret
ffreep
pusha
rolb
fs
jo
lcall
or
sbb
jmp
dec
push
jne
push
mov
xchg
mov
pop
popa
add
add
adc
push
mov
mov
mov
inc
rol
adc
pop
and
dec
js
inc
mov
loopne
lods
push
mov
in
adcb
sub
dec
mov
data16
push
test
xlat
sti
fistl
jo
push
and
and
lret
cltd
popa
js
mov
and
dec
pop
imul
mov
jecxz
inc
sbb
or
jecxz
das
fwait
add
ret
leave
ret
rcrb
push
and
adc
push
push
mov
inc
inc
mov
call
jae
bt
adc
lahf
out
add
mov
mov
jg
jmp
mov
les
cwtl
enter
and
cltd
push
dec
lds
mov
add
shll
mov
push
stos
lret
xchg
cltd
mov
adc
xlat
cmc
pusha
xor
subb
jl
call
sub
je
icebp
dec
mov
mov
sbb
or
stos
pusha
add
test
pop
dec
jecxz
loope
or
pushf
mov
or
or
and
pop
aaa
adc
sbb
sub
pop
dec
data16
lret
sub
lods
mov
mov
xor
int
jmp
cltd
dec
orl
sbb
sbb
xor
and
fs
jp
xor
out
pushf
rcll
jne
mov
inc
push
xor
add
mov
cwtl
push
sbb
push
jae
mov
inc
sub
add
sub
mov
lock
addr16
inc
sub
int3
or
js
in
test
or
push
es
add
pushf
cld
nop
addb
dec
xor
loopne
cmc
cwtl
or
push
and
sbb
dec
mov
xor
loopne
xor
int
inc
dec
and
sub
jle
xchg
push
sarl
sbb
mov
ret
ret
push
mov
ret
xor
push
fldl2e
add
add
push
push
jns
push
mov
dec
in
sar
xchg
dec
inc
imul
clc
in
pop
icebp
pushf
or
cwtl
loop
loope
or
inc
pop
cmp
mov
pushf
mov
push
push
shll
xchg
arpl
xor
add
add
dec
push
in
cmp
data16
fbld
xchg
inc
test
sbb
and
test
insl
or
punpckldq
jmp
pop
xchg
stos
daa
bound
fsubl
fidivrl
or
pop
push
fwait
cmp
lcall
test
cmp
sub
in
push
xlat
shlb
stos
dec
or
adc
scas
mov
loop
push
dec
inc
inc
or
and
xor
adc
mov
push
mov
jo
sbb
and
stos
cmpsb
or
cmp
or
stos
xchg
sub
add
push
cmp
and
or
adc
push
adc
dec
adc
mov
or
jo
jb
cmpl
cltd
enter
jle
in
mov
test
mov
add
add
xor
ss
es
jg
es
cmp
nop
push
cmp
out
pop
mov
inc
and
dec
inc
sub
or
push
mov
sbb
inc
rolb
xlat
push
jnp
mov
je
pop
and
add
adc
es
pop
pop
mov
adc
add
rolb
out
add
xchg
mov
sub
xor
jns
push
in
enter
dec
jne
inc
pop
pextrw
mov
ret
push
sbb
or
in
scas
jge
and
ret
addb
jmp
loope
inc
cmp
push
lods
test
cltd
push
inc
and
cmp
popa
inc
popa
pmulhuw
jle
addr16
pop
xchg
mov
mov
mov
pop
inc
emms
ret
mov
pop
andb
jne
push
xor
and
fdivp
ljmp
mov
push
xchg
les
sub
int3
push
lods
cmp
push
lock
cmp
sbb
jecxz
adc
lock
cli
aam
leave
rol
mov
cmp
rcrb
push
popa
and
add
bound
pop
es
fsubr
adc
mov
in
pusha
or
push
mov
push
pop
jae
push
popl
mov
cmp
push
rcrl
shrl
mov
popa
test
mov
pop
das
add
iretw
inc
cmp
pop
adc
cs
jae
xor
ret
pop
xchg
subl
sarb
dec
dec
fistps
adc
xor
int3
xor
add
frstor
xlat
icebp
xor
aam
jge
popl
scas
xor
xor
rol
in
cmpb
push
pushf
ljmp
cmp
cmpsl
pop
out
xor
int
xor
adc
pop
aam
jo
shlb
out
loopne
mov
adc
or
ror
in
ret
in
loop
fdivrl
push
sbb
xor
loop
ret
adc
inc
das
xchg
ret
scas
test
push
pop
xchg
cmpsb
mov
xor
cmp
mov
push
xor
add
aas
outsb
ficoml
push
cs
jecxz
xor
mov
jo
cmp
sbb
mov
mov
lock
mov
sbb
pop
cwtl
xor
bound
push
leave
cltd
lcall
das
jne
je
add
pop
adc
dec
push
or
and
xchg
leave
popa
jp
push
sbb
and
ret
lret
loop
push
shl
jnp
in
inc
dec
xchg
and
xchg
inc
iret
pushf
orl
shrl
add
sbb
movsb
leave
loope
or
push
mov
test
mov
or
xor
orb
ss
mov
lret
icebp
ja
subb
roll
jge
xchg
add
lcall
lcall
stos
scas
data16
movsl
xor
mov
mov
fisubrl
imul
jp
dec
int
jp
xor
enter
add
xchg
inc
push
scas
push
sbb
xorl
sub
js
pop
subb
or
ret
imul
xor
pop
in
push
add
cwtl
push
sub
jne
int
ret
xchg
dec
sub
add
or
or
orb
cmc
iret
ljmp
jecxz
ljmp
sub
jne
loopne
jno
stos
pop
in
nop
or
pop
sbb
jp
mov
dec
cmp
xor
popf
insl
in
push
adc
sbb
out
lock
popf
adc
cmp
sbb
pushf
or
xchg
fsubrl
xchg
out
repz
in
aad
stos
lahf
iret
popa
push
add
add
mov
repnz
and
cmpsb
pusha
add
push
or
jo
loop
inc
subb
cmc
adc
stos
clc
add
dec
mov
or
leave
shll
mov
int3
adc
inc
xor
inc
aam
inc
xchg
xor
cld
lock
add
mov
ljmp
cmpsb
mov
cmp
sub
sbb
and
inc
loopne
sub
fneni(8087
xchg
or
cmpsb
lret
es
add
repnz
push
lcall
dec
nop
cmp
daa
sbb
ret
ret
movsb
lea
or
pand
sbbl
push
fwait
xor
add
or
int
add
cmp
or
and
in
push
pop
mov
mull
add
xor
mov
sbb
out
and
xchg
cmpsl
popa
sbb
push
ss
repz
jb
mov
jg
loopnew
sbb
std
es
jmp
inc
dec
aam
push
sbb
enter
cmovge
lcall
test
push
sub
xor
ret
adc
test
addr16
pop
rcrl
dec
xlat
enter
push
xlat
push
xchg
aad
call
push
ret
push
pop
es
cltd
inc
mov
adc
bswap
or
jnp
lods
adc
xlat
pushf
and
es
rcll
jo
ret
jae
cmpsl
or
in
xor
xor
test
jne
test
lods
pop
cmp
jecxz
adc
xchg
pop
cltd
ljmp
sub
inc
lcall
mov
jb
popa
loopne
or
sahf
call
jnp
jmp
jb
mov
out
xor
scas
sub
stc
in
add
test
hlt
fisttps
cmc
inc
stos
int3
add
jae
sbb
imul
mov
push
add
adc
inc
insb
nop
mov
pop
loop
sar
inc
mov
pushf
add
cmpsb
and
mov
andl
repz
shll
and
pop
add
xor
push
aam
testb
movsl
ffree
iret
test
ljmp
jae
push
decl
fptan
add
add
shlb
pop
add
inc
jg
adc
or
das
mov
mov
or
in
insl
add
sbb
dec
test
add
sbbb
jae
push
into
mov
sbb
adc
icebp
aad
jbe
fiaddl
adc
sbb
scas
and
xor
repz
rolb
add
loopne
mov
inc
sbb
mov
iret
loopne
leave
xor
fidivrs
aaa
ror
inc
or
popf
jl
ret
inc
cwtl
mov
add
ja
lods
adc
mov
adc
shl
rcrb
xchg
icebp
pop
mov
ret
or
movsl
arpl
es
cmp
arpl
dec
add
adc
mov
mov
cltd
dec
mov
cmp
pop
es
jecxz
ljmp
and
xor
xor
mov
or
pop
add
push
add
push
es
push
enter
adc
push
pop
shll
rorb
loopne
bound
inc
inc
mov
cwtl
pushf
sbb
call
andb
dec
push
sbb
or
add
jo
test
mov
cmpsb
loop
adc
mov
cmp
xor
bound
sub
repz
rolb
pushf
sub
add
sub
pop
jae
outsb
or
or
out
xor
test
sbb
scas
push
lea
addb
push
lret
inc
and
add
add
pop
scas
add
or
orb
lds
shrb
pop
inc
and
add
mov
pop
xor
xchg
push
or
jae
xchg
test
xchg
mov
jbe
jle
pushl
cmp
lret
inc
adc
adcl
cli
xchg
mov
or
cltd
sbb
inc
jp
push
orl
rclb
ds
pop
lock
mov
in
push
sti
int
push
lods
lret
add
mov
or
mov
push
ss
push
dec
std
add
xchg
pushf
daa
push
or
cmpsl
push
daa
xchg
lcall
add
xchg
and
xlat
test
stc
sbb
sbb
push
cmp
pusha
push
xor
and
out
addr16
push
push
cmp
divb
push
loopne
jae
mov
in
jp
add
dec
push
push
inc
cmp
cmp
sub
shrl
pop
loopne
adc
mov
cmp
push
jo
add
stos
push
in
xchg
jmp
int
sub
adc
stos
dec
rorb
imul
pop
imul
or
cmpsb
lahf
mov
jb
dec
xchg
mov
fldcw
mov
cmpsb
inc
mov
jae
lcall
jae
sub
popf
stc
push
jo,pn
inc
test
xlat
dec
es
cwtl
cwtl
jnp
jl
adc
mov
pop
jo
push
jo
xchg
jecxz
push
and
mov
test
aad
icebp
jb
add
fisttps
push
out
sub
andl
jle
push
mov
mov
fsubs
call
or
imul
push
sbb
xor
xchg
add
paddusw
loope
cmp
in
sub
sbb
xor
ds
jne
stos
pop
fisttpll
sahf
jae
pop
cwtl
jb
push
jne
pop
mov
xor
pushw
mov
roll
sbb
call
addr16
lcall
jge
xchg
jae
mov
sub
push
or
lds
cmp
lds
sub
roll
pop
insb
addr16
push
mov
icebp
jo
push
pop
adc
pop
js
mov
cs
icebp
adc
add
inc
inc
leave
call
pop
jno
fidivrs
cmpsb
mov
push
mov
sbb
add
adc
fwait
stos
daa
je
inc
in
hlt
add
fimull
jg
shrl
push
add
sub
mov
shlb
pop
pop
iret
dec
mov
es
and
icebp
or
scas
out
jge
cltd
pop
add
jbe
mov
and
stc
shrb
std
jp
sub
addr16
adc
mov
pop
xor
add
jo
cmp
es
xor
je
mov
add
rolb
jne
sub
stos
addr16
jae
push
pop
mov
add
addr16
in
xchg
mov
push
sbb
xchg
lock
push
mov
add
loopne
inc
call
jge
and
jl
sbb
and
push
je
aam
xchg
aas
dec
sub
push
sub
or
and
sbb
pop
pop
cmp
sub
inc
sub
lcall
js
addr16
lret
jns
mov
push
sbb
inc
mov
addr16
push
pusha
add
or
loopne
push
clc
xchg
loopne
push
sub
sub
or
lahf
je
call
xchg
cs
test
dec
daa
xchg
and
insl
mov
xor
cmp
sub
mov
jb
push
je
push
lcall
adc
jp
adc
adc
test
pop
xor
sbb
cmpl
sbb
sbb
jp
jnp
xchg
sub
xor
jo
add
pop
out
enter
jno
cs
push
mov
adc
popf
movb
jb
sub
sub
arpl
xlat
pop
xchg
cmpl
es
push
inc
pushf
sub
icebp
mov
or
push
cltd
sub
orb
push
insb
dec
dec
mov
mov
add
lcall
movsb
pop
jo
cltd
pop
and
in
push
jno
cmc
stos
mov
shrb
adc
out
insl
xchg
jne
inc
xor
loop
push
and
sub
inc
dec
push
sbb
push
mov
add
add
and
sub
cmp
push
push
inc
ret
add
and
xor
bound
push
es
inc
push
sub
aas
shrb
xor
addb
mov
movsl
push
push
int
jb
or
popa
pop
sbbl
xchg
mov
insb
xchg
mov
addr16
pop
stos
and
push
inc
popa
mov
gs
inc
inc
xchg
addb
or
pop
sub
xchg
cltd
fiaddl
cmpsb
outsb
jp
and
loopne
xchg
and
inc
adc
jno
adcl
test
or
int
sbb
cs
aad
push
mov
int3
sub
xor
mov
sub
in
inc
jecxz
int
xor
xchg
das
dec
pop
push
jae
imul
in
xchg
stos
enter
clc
jnp
xor
inc
lods
inc
mov
lock
mov
and
aaa
mov
xchg
imul
jb
pop
lock
leave
shl
test
mov
xor
inc
in
xchg
adc
mov
popa
xor
in
test
out
loope
jg
cld
imul
xchg
xor
push
mov
add
aaa
cmpsl
pushf
and
cmp
rcll
mov
pop
ss
cmp
pand
add
adc
jo
adc
cmc
mov
add
jb
sub
fcompl
push
dec
adc
add
aaa
loope
jae
inc
cmpsb
adcb
mov
pop
push
mov
mov
ljmp
pop
jae
push
dec
and
inc
cmpsb
xchg
xchg
add
gs
mov
cwtl
popa
xor
jl
push
xor
jp
lret
shll
mov
fistpll
inc
jae
add
cmp
roll
sub
mov
jnp
aam
scas
enter
inc
aad
xchg
jnp
cs
cltd
sarl
std
jb
pop
addl
pusha
mov
jae
add
pop
xchg
pop
jo
mov
or
lock
add
lock
inc
out
movsb
jg
add
add
xchg
add
add
test
push
mov
pop
inc
mov
loop
and
push
call
pop
mov
shlb
add
mov
test
push
fucomip
cmp
jae
out
fwait
roll
push
sbb
and
and
adc
xchg
add
mov
lret
inc
out
adc
and
daa
or
xchg
xor
sub
shrb
cmp
inc
xchg
mov
rcrl
inc
sbb
gs
jo
cmp
cmpsb
cmp
sbb
testb
cmp
add
sbb
icebp
push
xchg
jo
sbb
cmp
shl
sbb
out
stos
add
sub
inc
push
or
nop
xor
jge
xchg
pop
cltd
orb
push
jae
rcrl
add
pushf
mov
stos
rcrb
sbb
or
jge
mov
add
scas
cmpsb
pop
scas
adc
dec
mov
add
ds
pop
daa
inc
into
addl
lock
icebp
adc
push
sbb
inc
into
pop
sub
mov
jle
adc
xor
jnp
adc
pop
jecxz
push
loope
pushf
sarl
inc
dec
scas
add
cmp
xchg
rcll
loopne
jae
push
dec
in
jb
push
aam
dec
test
fimull
dec
mov
jo
cmpsb
adc
pop
leave
jae
inc
mov
add
out
push
scas
and
repnz
ret
or
jecxz
adc
sub
cmp
leave
lods
xor
lds
loop
mov
jb
cld
adc
mov
add
xchg
mov
stos
test
or
cltd
adc
add
pop
sbb
xchg
add
xchg
mov
jecxz
scas
enter
scas
loope
sub
cltd
movsb
test
xchg
testb
cltd
test
sar
aad
and
push
loop
adc
nop
ret
push
pop
sbb
cmp
mov
and
xchg
or
sbb
cmp
mov
aam
jp
sbb
pop
mov
loopne
mov
jp
sub
cmp
ud0
outsl
cs
inc
sub
daa
add
or
add
sub
pop
add
sub
push
and
inc
mov
ret
mov
push
lods
pop
add
xchg
sbb
fcomps
bnd
andb
push
push
in
push
add
inc
sbb
xor
mov
push
fld
inc
hlt
jg
jg
cmpb
sbb
outsb
sub
add
or
dec
shlb
jne
jb
and
test
sub
pop
sub
je
data16
sub
or
cs
inc
sbbb
imul
outsl
add
fsubrp
add
orb
lret
rclb
mov
popf
mov
loope
dec
jnp
mov
fimuls
mov
pop
mov
mov
add
std
xchg
or
xor
pop
jae
lods
pslld
loope
js
daa
sahf
ljmp
addr16
jb
repz
mov
jnp
aam
int
push
lcall
scas
xor
lcall
jae
or
add
test
shll
xchg
and
sub
sub
rolb
xchg
ljmp
inc
and
imul
add
xchg
inc
sbb
iret
leave
sbb
mov
loopne
aam
jo
or
mov
adc
negl
lcall
loopne
into
aam
leave
pusha
or
mov
jp
xor
adc
adc
dec
in
mov
fadds
roll
add
dec
inc
xchg
pop
inc
cmp
mov
cmpsb
dec
add
mov
jl
call
and
pop
and
xor
mov
andb
cmc
test
mov
decb
push
inc
hlt
or
cmc
jae
test
popf
fwait
cmp
push
sbb
inc
pop
mov
dec
inc
int
cmpsb
sbb
sub
ret
scas
jbe
or
push
mov
rcrb
insl
xchg
xor
or
call
jo
sub
xchg
shrb
sub
daa
inc
cmp
add
ret
sbb
adc
add
and
movsb
jae
int3
decb
arpl
rorb
or
add
and
and
je
in
movsb
and
popf
mov
jbe
fmul
sbb
or
pusha
mov
icebp
aas
test
orb
das
jb
enter
cmp
fisubs
sbb
test
mov
push
add
mov
inc
push
or
xchg
add
push
cmp
xor
push
data16
fsubrs
pop
adc
pop
mov
subb
data16
cwtl
cmp
in
cmp
and
add
cs
push
leave
adc
or
je
add
adc
jmp
jnp
test
xor
es
in
sub
push
cmp
sbb
lock
out
roll
xchg
cmpsb
sbb
push
lds
or
sbb
ror
inc
repz
pop
popf
hlt
dec
xor
test
sub
nop
andl
pop
add
pushf
cmpsl
iret
push
inc
scas
push
add
sbb
inc
mov
sub
xor
or
sub
cmp
movsb
pop
fisubrs
ret
test
mov
ss
mov
dec
pop
xchg
mov
sub
cmp
rclb
gs
xchg
inc
scas
mov
xchg
or
xor
pop
outsb
sbb
cmp
inc
xchg
stos
xor
inc
cltd
das
repnz
mov
pop
jl
repnz
inc
out
push
push
rcl
mov
xor
inc
in
inc
xchg
cs
enter
sub
inc
mov
push
mov
push
scas
mov
mov
test
mov
andl
jle
dec
rolb
ds
and
jnp
test
jp
ja
push
sbb
out
shrl
push
stos
aam
and
js
sbb
bound
out
mov
pop
push
push
jbe
fsubrl
push
xor
fstpt
sbb
push
push
flds
cmp
mov
test
rolb
pop
pop
cmp
test
xor
pop
lcall
inc
sub
xchg
imul
loope
roll
mov
xor
pop
sbb
leave
inc
add
cmpsb
pop
test
filds
enter
adc
sbb
sbb
stos
idiv
add
in
rcr
push
andb
lret
sbb
mov
cmpsl
xor
int
mov
add
mov
mov
jge
out
push
adc
stc
sub
push
push
xor
jg
loope
push
cmpsb
sub
int
sbb
cs
adc
lret
cmp
adc
jo
jnp
push
mov
or
cmp
ret
mov
fdivrs
into
push
ret
inc
mov
push
pop
in
add
adc
and
inc
imul
mov
jo
leave
mov
push
jge
or
into
cmp
rolb
scas
stos
jae
or
ficomps
dec
push
sub
jne
fs
xlat
pop
cmpsl
pop
cld
adc
sbb
jbe
xchg
xor
ds
addr16
push
push
push
add
stos
xchg
push
in
les
xchg
popf
lods
daa
mov
sub
xchg
xor
shrl
cwtl
inc
jp
sub
scas
or
in
je
push
sub
push
push
push
dec
in
stos
movsl
or
clc
push
jae
xor
adc
fcompl
and
xchg
inc
or
test
push
adc
add
sub
cmpl
mov
loope
xor
xor
dec
stos
push
es
out
dec
jp
adc
lcall
adc
mov
insb
adc
lea
push
movl
dec
mov
mov
ret
sbb
cld
mov
or
pop
sbb
jne
push
add
mov
pop
imul
push
int
subl
push
test
adc
daa
out
cmp
xor
shll
dec
mov
cmp
imul
cmc
test
andb
sub
je
jmp
adc
pop
sub
mov
cli
daa
push
in
loopne
das
push
test
xchg
in
jg
and
mov
mov
movsl
call
inc
adc
fiadds
mov
orb
add
push
add
cmpsl
in
push
push
mov
cmp
mov
adc
dec
add
jle
inc
jae
jne
add
or
adc
daa
ss
or
call
scas
jl
lock
push
ss
lret
adc
add
dec
sub
inc
pusha
out
shl
aas
subb
sbb
jecxz
dec
scas
test
or
xlat
test
jae
scas
inc
add
jo
subl
xchg
mov
push
mov
push
jno
adcb
pop
cmp
iret
ret
cmp
mov
sbb
lock
aam
aad
out
data16
pop
sbb
or
test
leave
ret
lods
data16
addb
shl
and
sbb
xor
jns
imul
test
jge
push
add
punpckldq
cs
cltd
jg
mov
or
add
inc
data16
dec
jp
or
pusha
sbbb
push
stos
jl
aam
mov
lock
cmpsl
push
adc
cs
add
pop
gs
jg
pop
mov
xchg
sub
adc
mov
push
loopne
sub
dec
es
es
cmc
pusha
in
push
sbb
popa
enter
push
hlt
mov
pop
pusha
adc
sub
or
repnz
pop
sbb
outsl
jmp
xchg
xchg
xchg
mov
sahf
cmc
dec
xchg
stos
push
pop
jb
dec
inc
mov
push
loop
mov
jge
cmovae
lds
inc
mov
dec
pop
aam
int
outsb
jno
and
add
xor
inc
roll
pop
fwait
add
cs
mov
jns
lods
adc
cmp
test
shll
sub
xchg
iret
outsb
orl
and
xor
xor
cmp
ret
cwtl
push
pop
mov
cmp
test
jae
addb
loopne
or
mov
mov
sub
mov
ret
scas
sbb
add
stos
cmp
movsb
push
mov
mov
push
out
jo,pn
dec
addr16
daa
test
and
je
push
nop
ficoms
and
clc
out
add
mov
movsb
jo
push
jb
movl
jns
pop
mov
cmp
sbb
cmpsb
or
sub
add
mov
pop
cmp
or
mov
dec
xor
xchg
cmp
adc
daa
iret
xor
test
repz
inc
xchg
mov
out
or
or
sub
jmp
add
sbb
enter
push
xor
mov
and
into
rorb
pop
cli
subb
cli
or
cmp
int
add
push
cmp
mov
push
cmp
push
xor
mov
adc
mov
in
add
int3
clc
push
mov
decl
sbb
inc
add
lcall
cmpsb
push
rcl
scas
clc
mov
dec
mov
sbb
inc
test
sub
dec
ds
add
hlt
cmpsb
daa
cmp
mov
pop
ret
mov
cmp
or
add
outsl
pop
sbb
out
jno
adc
sbb
loopne
add
daa
cmp
jne
cs
adc
lret
or
fdivs
addr16
mov
jo
or
dec
inc
repz
xchg
or
gs
lea
cmp
or
leave
xor
loopne
sbb
mov
icebp
pop
fbstp
sub
sbb
pop
pop
ljmp
movsb
adc
and
bound
push
bound
cmpb
adc
push
or
icebp
addr16
adcb
enter
xchg
mov
pop
das
jge
sbb
mov
or
mov
cmp
cmp
push
dec
inc
inc
inc
cwtl
popa
test
adc
out
adc
inc
xchg
repnz
xor
loope
cmpsl
cltd
sbb
add
int3
mov
or
out
push
xor
xchg
sbb
popf
sub
sub
sub
or
sbb
rolb
xor
adc
in
xchg
mov
shl
mov
adc
jno
mov
test
sbb
pop
sub
push
incl
adc
add
xchg
out
xor
cmp
jns
mov
jae
mov
xor
pop
hlt
add
sbb
sbb
inc
push
push
es
jae
subb
xor
jo
enter
mov
add
push
cmp
inc
jae
inc
xor
adc
loope
inc
push
lahf
imul
jmp
ljmp
adc
ljmp
and
xchg
in
in
push
add
mov
rcpps
in
adc
pusha
push
or
loopne
rolb
shrl
jb
cmp
fistl
fs
iret
xchg
mov
sti
inc
cwtl
cmp
mov
or
lcall
and
or
push
push
ja
int
dec
xor
int
call
mov
lret
xor
sub
int3
jo
jp
or
xchg
cld
insb
dec
add
imul
popa
xor
cmpsl
cmp
loope
or
gs
xchg
cld
sbb
inc
mov
or
xchg
adc
sbb
ret
or
sub
std
iret
xor
sub
push
cltd
pop
push
pop
mov
ljmp
outsl
test
in
dec
add
or
push
adc
jge
add
jg
lret
add
in
adc
enter
sub
add
decl
cmp
stc
dec
add
pop
mov
fwait
sbb
repz
add
cmpsb
adc
roll
add
cltd
inc
cs
into
sbb
jne
cmpb
pop
or
or
inc
and
dec
rclb
call
sub
es
mov
test
aam
sbb
imul
push
fnstenv
icebp
jg
push
jae
repz
pusha
push
nop
addl
lcall
test
mov
or
jae
mov
in
gs
xor
icebp
ljmp
repnz
cld
ret
inc
adc
cmp
xchg
stos
ret
test
and
jmp
inc
jae
jbe
sysenter
xor
push
inc
movsl
cwtl
jo
xor
xor
xorb
imul
dec
adc
arpl
lcall
sbb
dec
lods
shl
call
or
xor
sbb
cmc
adcb
mov
xchg
sahf
incl
add
pop
mov
fincstp
or
xor
dec
dec
rcrl
test
cmp
add
mov
mov
enter
outsb
mov
dec
ret
stc
pop
pushf
call
repz
jae
stos
xor
lcall
push
mov
mov
out
popa
mov
int
sub
and
in
inc
sub
pop
sahf
stos
pop
add
in
test
pop
sbb
mov
insb
mov
leave
xchg
add
dec
mov
push
pop
xor
loop
add
jnp
or
mov
pop
sarb
adcb
shl
cmp
sub
outsl
push
push
xor
out
push
icebp
test
sbb
sahf
movsl
sbb
inc
xor
call
jae
sub
add
loope
adc
or
jmp
cmp
mov
and
test
jmp
sbb
ret
cs
mov
and
test
xor
imul
jge
jmp
stos
pop
xchg
jmp
push
imull
loopne
add
xor
scas
es
subl
ljmp
pop
scas
xchg
imul
sub
add
pop
xchg
aaa
cmpl
jge
cmp
fisttpll
test
adc
mov
mov
mov
xor
bound
mov
daa
iret
jecxz
stos
mov
cmpsl
test
mov
and
xor
xchg
or
xor
fildl
adc
xor
mov
aas
mov
lea
add
add
lock
lds
loope
adcl
dec
adcb
xor
and
hlt
xchg
adc
pushf
mov
adc
xor
shrl
pop
xchg
rol
clc
jmp
cwtl
or
inc
inc
inc
pop
mov
push
mov
mov
inc
sub
mov
rol
rolb
sub
in
in
push
aad
inc
aad
xor
jo
shll
jmp
add
nop
mov
jb
xchg
inc
sub
js
insl
shrb
scas
popf
sbb
or
mov
imul
push
jnp
and
loope
mov
loopne
adc
nop
mov
cmpsb
cmpsb
add
out
adc
imul
add
cmp
cmp
pop
cld
sub
adc
push
mov
nop
add
jp
jo
and
jge
xor
jo
pop
rcl
add
jo
pusha
sti
test
push
icebp
sbb
xchg
or
inc
popf
and
xchg
sbb
pop
xor
jp
inc
inc
push
xor
xor
in
add
add
pop
push
mov
and
mov
pop
les
jge
xchg
lods
add
clc
and
and
push
mov
xor
ret
xchg
xorl
mov
adc
adc
loopne
jb
dec
das
call
pop
dec
xor
inc
xchg
mov
mov
jmp
out
sub
movsbl
lods
xor
std
test
xchg
push
and
das
stos
dec
in
push
push
shll
int
shrb
sub
push
mov
sbb
cmp
enter
mov
ljmp
pushf
rcll
and
cwtl
dec
pop
pusha
adc
fstl
pop
pusha
adc
mov
xor
jae
xor
out
rcrl
or
push
cmp
and
lcall
mov
cwtl
jmp
in
scas
clc
fidivrl
jmp
hlt
and
xchg
xor
fistpll
push
lcall
pop
adc
add
push
xor
shrl
aas
push
in
pop
aad
push
sub
clc
pop
call
cmp
imul
js
add
je
jb
push
sqrtps
push
stos
or
aas
xor
pop
int
pop
add
push
mov
addb
sub
ljmp
icebp
dec
sbb
pop
sbb
sti
aad
ret
xor
xchg
es
insl
add
adc
fistps
addb
adc
pop
scas
mov
xchg
sub
int3
mov
sbb
dec
mov
pop
testl
mov
and
mov
cwtl
add
insb
adcb
ret
bound
mov
add
xlat
xor
mov
sub
or
push
xor
and
out
fidivl
inc
imul
lcall
and
movsb
in
les
and
pop
popa
jnp
adc
sbbl
sub
scas
fisubl
or
mov
cld
adc
je
cmp
jp
xchg
add
rcrl
or
sub
push
or
dec
jnp
pop
aam
sbb
ret
imulb
add
cld
lock
adc
aad
adcl
and
add
nop
and
dec
and
jo
leave
mov
cmp
std
jp
enter
cli
scas
mov
les
add
inc
push
mov
lods
mov
adc
xchg
jmp
xor
ljmp
adc
xor
ja
das
inc
jnp
enter
mov
inc
mov
pushf
mov
inc
data16
in
and
push
cmp
js
inc
push
inc
jp
sbb
add
lods
das
dec
pop
lock
mov
push
add
jb
xchg
stc
mov
lret
mov
jae
pop
add
test
xchg
inc
pushf
adc
inc
nop
xorb
cmp
into
inc
or
cmpsl
aas
add
andb
sbb
or
xor
jb
fidivs
push
xlat
clc
sbb
pusha
sub
sbb
int
add
jbe
pop
ljmp
adc
sub
inc
cmpsb
pop
push
add
test
ret
outsb
loope
shlb
adc
add
mov
outsb
sub
sub
shrb
cld
xor
lret
popf
add
pop
mov
testl
rolb
add
js
xlat
push
push
jae
pushf
fdivl
add
jno
add
je
adc
adc
popf
shlb
test
int
loope
test
repz
or
jo
push
add
xchg
leave
or
stos
cmp
fadds
jne
sbb
aaa
jmp
sub
mov
lods
jbe
push
jo
xchg
cmp
xor
xchg
in
push
mov
nop
add
pop
stos
sbb
jo
insb
push
mov
mov
adc
scas
jo
ret
cmp
stos
cmp
pop
inc
xorb
push
out
mov
jge
das
adc
ja
shll
lods
adc
pusha
mov
push
int3
add
jb
sbb
pop
cmp
or
add
in
adc
cmp
les
push
push
jae
imul
jo
pushf
sub
scas
lcall
pusha
push
push
jo
inc
jecxz
clc
and
push
pop
xchg
jae
stos
mov
lds
fisubl
scas
pushw
sub
gs
add
add
out
or
xchg
xor
cmp
xchg
xchg
push
cltd
in
cmpsb
or
mov
pop
loope
sub
imul
xor
lock
mov
add
push
add
mov
or
jge
test
push
pop
mov
jae
or
jg
insl
pop
push
sub
test
or
or
push
sub
cmp
rolb
pop
xchg
int
rorb
mov
push
add
mov
lret
add
jge
xor
pop
pop
sub
mov
sbb
mov
jl
enter
pmaxsw
mov
subb
jb
push
pop
cmpsl
sahf
push
adc
xlat
icebp
mov
jnp
mov
mov
mov
cltd
test
xor
sarl
mov
add
pop
fsubs
adc
fsubs
dec
mov
mov
sti
add
loopne
pop
inc
push
lock
pop
add
test
jnp
cmp
rcll
xchg
leave
gs
jno
push
push
push
rclb
cmp
xchg
andl
push
jo
cs
sub
jg
faddl
push
lea
adc
adc
cmp
sub
pop
mov
mov
inc
leave
aam
jae
cmp
stos
cmp
inc
sub
mov
cmp
call
push
and
pushf
leave
jno
in
add
dec
push
or
sub
lods
pop
cmpsb
push
rcll
cmp
sub
xor
jb
int
daa
push
ret
test
pop
leave
pop
cmpsb
jb
adc
jge
addl
icebp
xchg
out
cld
xor
sub
xor
dec
ja
imul
add
push
pop
shll
push
adc
adc
iret
push
or
shrb
jae
pusha
inc
pop
push
call
cld
pusha
xor
pop
push
mov
inc
mov
or
pop
jecxz
sbb
pop
sub
aam
inc
pop
daa
mov
rolb
pop
jae
or
sub
cmpsb
adc
and
lret
lds
addr16
ss
cmp
and
xor
jae
sbb
jmp
loope
stos
mov
and
shll
mov
add
arpl
outsl
es
es
cwtl
sbb
lcall
mov
enter
jge
cltd
js
test
cmp
mov
lret
pop
subl
add
or
and
imulb
jo
nop
add
add
jo
mov
cltd
xor
scas
inc
pop
adc
inc
jae
cmp
arpl
ljmp
pop
adc
adc
adc
adc
shll
jo
imul
cwtl
adc
std
jo
add
fiaddl
push
addr16
pop
push
ljmp
add
pop
dec
add
test
xchg
stos
xor
xchg
in
ret
mov
cld
adc
push
add
loopne
add
lods
insl
out
test
into
add
sub
mov
sub
push
outsb
mov
xor
das
call
sub
sub
sbb
pop
cltd
jns
ret
mov
or
add
adc
stos
ljmp
outsl
faddl
fcmovne
mov
outsb
cwtl
rorb
inc
push
xor
nop
sbb
sbb
lret
push
out
cmp
or
pop
mov
cltd
dec
cli
mov
and
addb
dec
push
xchg
out
in
inc
mov
pop
test
jmp
push
fs
mov
jo
ret
push
es
ror
inc
int
adc
add
mov
rorb
xor
push
xor
xor
jp
out
test
inc
roll
jge
mov
fnstcw
shll
andps
cmp
enter
aaa
add
jno
xor
stos
inc
mov
je
ret
push
mov
jo
push
sbb
out
add
and
xlat
lcall
pop
or
shrl
loope
xchg
out
sbb
xchg
imul
jae
mov
lret
in
pop
int
sub
mov
xchg
or
xor
sub
dec
mov
lret
movl
add
cmp
inc
xor
pushf
inc
mov
imul
lods
sub
mov
sbb
mov
cmpsl
push
jae
scas
and
add
in
clc
or
js
pop
inc
mov
mov
and
xlat
lea
cmp
xor
fsubrp
ss
aam
cmp
insb
daa
dec
adc
xchg
mov
add
lods
mov
adc
pusha
and
add
mov
or
nop
in
stos
mov
stos
cmp
lret
and
lcall
sub
or
mov
pop
jmp
gs
cltd
lods
xchg
sbb
js
cltd
push
or
lret
inc
sbb
addr16
aas
jne
sbb
inc
adc
imul
cmp
outsb
pop
add
dec
ror
xchg
imul
addr16
mov
sub
mov
xlat
ljmp
lcall
pop
add
shlb
subb
mov
fmull
aas
pop
push
push
push
out
jge
out
scas
and
loope
push
test
sbbl
int
mov
test
push
sub
sbb
or
inc
mov
adc
cmp
or
or
push
push
test
repz
push
push
jne
xchg
inc
ret
sbb
or
enter
sbb
jmp
jb,pn
mov
lea
mov
inc
jmp
js
pushf
add
sub
movsb
mov
inc
int
add
push
sbb
mov
mov
mov
jne
js
pusha
jo
xor
push
cs
fldl
push
das
cmpsl
adc
fs
js
jb
or
push
inc
xor
push
add
jb
daa
or
jae
mov
in
mov
lcall
mov
inc
mov
cmp
mov
pop
push
cmp
push
loopne
orl
arpl
dec
sbb
mov
push
gs
inc
xor
xchg
jle
sub
add
xchg
mov
and
stos
add
loopne
stos
hlt
in
cs
xchg
add
andl
mov
dec
test
es
pop
imul
inc
jns
not
sub
sbb
dec
cmp
das
pop
or
push
push
inc
sbb
push
and
loope
add
sbb
inc
int
add
adc
fs
or
pop
cmpsb
push
lret
mov
add
sbb
mov
pop
pop
imul
lahf
adc
dec
cmc
inc
mov
mov
in
mov
push
scas
ret
ret
add
rcrb
dec
xor
or
xor
push
adc
popa
test
push
and
shll
insl
push
jae
jbe
inc
dec
popa
lret
ret
jo
scas
pop
mov
jne
call
cmp
add
pop
xchg
call
repz
cmp
xchg
clc
outsl
out
mov
xchg
mov
mov
push
test
loope
and
xlat
cmc
outsl
outsb
inc
sarb
sbb
or
jne
subb
adc
mov
adc
mov
cmp
in
addl
pop
mov
js
loop
cmpb
add
xchg
mov
fsubrp
jmp
adc
sub
dec
add
add
in
jg
sbb
jge
std
pop
shr
scas
loope
and
cmpb
lods
ljmp
loop
xchg
in
jb
mov
scas
lret
push
xor
or
mov
lods
sub
add
sub
movsb
mov
loope
ret
pop
adc
shll
pop
bound
outsb
jne
mov
shrl
cmp
mov
rolb
pop
jg
jo
dec
lret
int3
jne
aam
add
sahf
add
dec
int
sub
clc
and
enter
mov
xor
xchg
adc
pop
xchg
jecxz
lock
mov
pushf
jb
jo
or
add
push
sub
fstl
lret
call
mov
xchg
rol
in
add
inc
inc
xor
pop
andb
sahf
imul
arpl
xchg
add
nop
mov
mov
in
xor
stos
mov
repnz
push
and
iret
add
test
inc
mov
or
push
mov
jo
rolb
inc
ret
add
in
ret
cwtl
pop
push
nop
leave
inc
and
mov
stos
cmpsl
push
jae
adc
stos
ret
rclb
or
cmp
sub
ljmp
pushf
push
jo
push
xchg
loop
inc
xlat
sub
scas
mov
push
xor
fldt
inc
es
or
mov
orb
daa
lcall
shlb
push
dec
push
data16
push
xor
sub
fs
pop
out
pop
scas
add
xorb
cmp
mov
fiaddl
leave
inc
test
mov
rorl
jo
cmp
and
dec
add
cs
mov
dec
faddl
mov
dec
jge
jo
ljmp
mov
hlt
cmp
push
repz
lods
jo
add
mov
fists
es
jae
inc
push
xchg
mov
call
mov
pop
mov
push
inc
or
fadds
adc
lret
dec
iret
outsl
in
xchg
sub
loopne
mov
notb
jb
scas
adc
les
enter
push
jb
inc
or
or
mov
sbb
mov
fcmovb
les
inc
dec
adc
popf
add
stos
push
sbb
jbe
dec
popa
mov
pop
inc
pop
loopne
dec
adc
test
adc
inc
int
jae
es
xor
push
cmp
in
sahf
xchg
and
cmpsl
icebp
jns
add
or
dec
jl
and
dec
adc
mov
jl
adc
fbld
lock
rorl
mov
stos
dec
int
in
incl
mov
push
in
test
push
mov
es
es
mov
fdivp
aam
sbb
cmp
sub
enter
jae
js
lahf
cmpsl
fistps
in
adc
push
adc
ret
xchg
mov
push
mov
inc
pop
fdivrs
in
bound
aas
aam
inc
scas
pop
outsb
loop
sub
loope
jb
sub
test
popa
sub
inc
cmpsl
das
cli
push
push
add
hlt
ret
jb
mov
push
cwtl
pushf
or
pop
mov
sbb
stos
add
jno
mov
xor
orb
add
ret
sbb
lret
push
mov
movsb
push
lods
in
jle
pop
push
cmpl
push
sbb
cmpps
aam
pop
in
daa
sbb
test
xlat
or
sub
aas
mov
test
push
rorb
xorl
cmpsb
push
push
test
push
jbe
fadds
pop
adc
mov
or
push
fsubrl
test
test
popf
aad
sub
adc
inc
mov
dec
push
test
mov
push
dec
orl
add
cmp
mov
jmp
jae
lret
ffree
xor
sbb
jo
sub
sbb
cwtl
leave
scas
shlb
filds
push
pusha
test
test
jg
fbstp
xchg
data16
pop
mov
mov
mov
iret
mov
xlat
or
test
or
outsl
add
repz
jp
or
cmpsl
sub
stos
jne
dec
aas
idivb
adc
inc
add
das
fwait
into
fsubr
addl
xchg
cmp
cmp
scas
std
dec
inc
adc
in
std
push
and
imul
and
neg
or
jge
mov
popf
insb
call
xor
or
jnp
ja
aad
push
sbb
add
or
les
mov
or
aad
faddl
push
inc
cmp
jmp
cmpl
jno
std
cmp
mov
pop
shrb
fsubrl
loope
sbb
in
mov
pop
mov
mov
dec
mov
dec
divl
cli
icebp
dec
push
test
xchg
xor
out
mov
mov
jns
inc
inc
mov
xchg
adc
sub
stos
mov
lods
pop
and
cmp
xlat
js
mov
jnp
jae
mov
jmp
enter
in
mov
ret
pop
add
idivb
lods
out
les
add
inc
lock
mov
cmp
jbe
movsl
fstpt
push
jbe
in
bound
idiv
lret
lods
cmp
enter
pop
or
ja
mov
mov
add
fidivrl
int
out
and
cmp
push
imul
jno
call
push
xor
bound
mov
inc
jl
jecxz
and
sub
aaa
add
fists
and
mul
mov
lret
js
xchg
das
in
mov
in
mov
push
ja
dec
cmpsb
and
push
cmpsb
std
xchg
int
ret
pop
and
repnz
into
jge
cmpsb
lret
xor
addl
mov
xchg
decl
xchg
push
mulb
into
std
idiv
push
cmp
xor
mov
dec
jge
andl
lds
int
jae
ja
lods
call
dec
dec
sbb
ret
std
jbe
jecxz
ds
insl
add
sub
cltd
cs
mov
out
movsl
ljmp
sahf
and
ret
cmpl
jge
push
ljmp
sbb
add
push
lock
int3
pushl
aas
add
adc
ret
jnp
mov
out
popf
cld
xlat
jne
out
gs
jmp
cmovl
pop
scas
adc
aas
loope
loope
and
sub
call
icebp
andb
cmpsb
xchg
mov
call
ja
loopne
sub
ljmp
or
pop
stc
push
stos
aas
xchg
into
cmp
in
cmp
jl
movsb
dec
push
xchg
pop
push
or
fxch
aaa
mov
mov
insb
iret
sbb
and
xchg
ja
mov
push
lret
xlat
out
mov
push
and
iret
std
iret
mov
jge
pop
push
jns
aad
mov
lahf
sti
pushf
add
pop
loopne
xor
ret
adc
mov
mov
xchg
ss
lods
arpl
call
fwait
and
jo
dec
stos
and
mov
inc
clc
int
es
fdivl
add
call
into
lock
mov
outsl
dec
jns
cltd
xor
add
inc
add
or
fbstp
dec
cwtl
rcr
leave
push
add
push
pop
loopne
mov
aas
and
sbb
lock
ss
dec
clc
inc
shrb
push
bound
sbbl
stos
mov
mov
in
mov
js
rorb
lahf
sub
sub
sbb
sub
pop
lods
mov
or
out
jg
jmp
mov
xchg
jno
inc
sbb
or
std
fildll
push
inc
inc
push
sub
call
xchg
outsl
xor
subl
rolb
and
xlat
jmp
dec
xor
in
bnd
inc
xor
push
xchg
sub
inc
mov
push
xor
inc
mov
sbb
std
bound
aad
jbe
mov
jecxz
div
pop
sbb
mov
pop
xor
dec
cmpsb
lcall
rorl
mov
jne
xor
or
decl
xor
adc
xor
sbb
jae
jle
fwait
arpl
xchg
sbb
iret
jge
jle
fwait
les
arpl
in
adcl
jb
mov
and
fdivr
loope
dec
popa
mov
add
sub
mov
xchg
aas
jl
out
outsl
shll
cmp
and
movsl
push
out
lea
fidivl
xchg
fucomp
iret
clc
je
dec
fiaddl
jo
add
rcrl
pop
loop
xchg
test
mov
sti
push
div
addr16
arpl
mov
outsl
fdiv
jmp
icebp
sub
add
sub
fldt
out
stos
hlt
je
in
inc
addr16
adc
cmp
arpl
add
stc
cmp
push
sti
out
imul
daa
ret
out
mov
inc
loope
fld
std
pop
push
jmp
movsl
cmp
out
mov
sub
or
dec
dec
sub
aaa
das
fdivl
add
stc
push
pop
ljmp
jns
push
add
pop
aad
mov
push
out
mov
ror
andb
push
pop
out
mov
lahf
pop
in
and
inc
ror
pop
sti
and
out
and
ja
sub
push
push
xchg
mov
in
das
idivb
subl
mov
jp
mov
mov
call
jg
leave
dec
sub
sbb
addb
cmpsl
shrb
adcb
jae
dec
jb
arpl
cli
jmp
hlt
jg
cmp
cwtl
pop
in
lret
test
pop
jno
sbb
out
push
pushl
adc
out
in
xchg
rorl
pop
mov
aas
fiadds
push
xor
dec
inc
sahf
daa
test
jnp
loopne
ja
xor
mov
jg
jle
sbb
dec
add
sarl
iret
add
cs
cmp
out
fdivr
xchg
inc
sub
clc
jmp
std
sub
orb
xchg
and
fninit
mov
pushf
notb
movzbl
shl
sub
iret
std
fdivrs
les
cmp
mov
mov
xlat
push
loop
in
icebp
fstpt
mov
mov
jle
clc
mov
sub
adc
mov
maskmovq
aaa
mov
pop
jmp
cld
jo
mov
add
ljmp
call
loop
rcpps
fs
pop
in
push
aas
ret
fcmovnb
lods
adc
test
jb
pop
jmp
sub
les
les
loopne
sti
outsb
mov
fisttpl
xor
pushf
mov
fnsave
sbb
push
jnp
adc
imul
cmp
sbb
in
sbb
push
loop
add
lods
aam
jl
in
pop
cmp
incl
cmpsb
cmc
push
inc
jecxz
xor
lcall
hlt
fildl
inc
lods
popa
pushf
jbe
or
ret
push
aaa
xchg
jns
cli
lock
or
pushf
fsubl
pushf
btr
cmpsl
dec
cld
jo
mov
mov
shll
mov
incl
roll
imul
idiv
das
adc
cmp
push
xchg
add
jge
xchg
movsl
test
jne
add
pop
xchg
cmp
mov
aaa
add
mov
push
lea
in
sbb
mov
out
or
test
inc
mov
dec
jmp
std
ret
mov
xor
cld
aad
xchg
mov
pop
cmp
adc
std
and
pop
in
mov
jo
sub
mov
dec
inc
jo
outsb
push
jne
and
jmp
adc
xchg
ss
cmpsl
jge
pop
hlt
push
adc
sub
push
dec
js
out
fdivrl
pushf
or
sbbb
mov
fld
cli
into
mov
sbb
rorl
out
roll
outsl
mov
dec
hlt
inc
jb
add
insb
call
mov
push
add
mov
sbb
gs
and
sub
push
and
sbb
loope
and
mov
incl
lcall
arpl
enter
cmc
daa
mov
popa
or
jg
andl
xchg
jnp
or
cmp
rcll
pop
jle
sbb
imul
push
movsb
movsb
subb
sti
push
mov
inc
addb
in
aam
jns
out
std
push
cmp
out
popa
push
dec
pushf
inc
sbb
test
mov
pop
xchg
movsb
cmp
pop
shrl
fsubrl
js
push
test
aas
mov
jo
es
xchg
mov
lock
adc
scas
pop
jl
mov
js
int3
mov
mov
stc
push
popf
sbb
das
or
and
push
jge
add
idiv
in
push
sbb
add
cli
insl
adc
lds
jb
inc
in
pop
lock
jecxz
push
in
sahf
lods
fsubs
cmp
les
pop
mov
outsl
jae
inc
sti
pop
leave
data16
scas
imul
pop
mov
pop
mov
pop
mov
mov
popf
sti
dec
dec
xchg
mov
out
pop
xchg
iret
test
pop
and
pushl
in
push
xchg
cmc
xor
jg
pop
sahf
sbb
lret
shl
mov
out
lock
rcll
dec
cmp
aas
bound
pop
incb
jns
bound
loope
xor
lock
and
roll
cmp
fdivs
mov
shrb
xchg
outsb
idiv
push
pop
popa
fadd
dec
mov
mov
mov
ss
push
xor
pushf
fadds
sub
stc
and
push
ja
pop
pusha
dec
push
stos
loopne
outsl
iret
lods
jbe
sub
loope
mov
mov
add
cmp
lret
ret
mov
or
mov
cmpsb
mov
cld
mov
loope
mov
mov
xor
xlat
add
int
or
mov
lock
jmp
cwtl
out
shlb
fistpll
sahf
popa
out
push
add
fsubrp
lcall
int3
into
ljmp
stos
lcall
aad
movsb
sbb
vdivss
dec
jne
xchg
call
jge
notl
sub
sub
cmp
mov
mov
popf
popa
or
mov
mov
insl
dec
xchg
jmp
std
ret
mov
push
test
inc
or
inc
sti
idivb
sub
dec
fimull
lock
xor
mov
add
pop
out
sbb
imul
data16
xlat
insb
cmc
pop
push
jbe
adc
js
xlat
inc
jle
pop
ljmp
cmp
andl
lods
xor
cwtl
rcr
test
cmpsl
or
xor
std
das
test
inc
shl
cli
mov
incl
pop
xchg
gs
adc
fdiv
test
add
xchg
xchg
call
mov
les
pushl
stos
dec
fdivl
sub
cwtl
test
clc
mov
or
jae
cli
jno
cmp
dec
jae
adc
subl
and
ret
inc
out
mov
jle
mov
pop
insb
icebp
push
jnp
push
sahf
std
mov
shrb
adc
aas
ficoml
jmp
mov
sub
jne
ja
fidivrs
aam
cs
jg
cmp
adc
jp
test
dec
jp
nop
repz
out
push
fistpll
iret
cmp
inc
in
jns
daa
sub
push
mov
mov
push
jl
jg
idiv
mov
inc
xchg
lock
movsl
add
mov
gs
in
aas
inc
icebp
fnstcw
adc
nop
xlat
xlat
test
jmp
mov
mov
inc
mov
test
hlt
loope
lds
inc
xor
pusha
inc
jb
sub
push
mov
gs
push
int
rcl
xor
and
addr16
jo
test
push
push
pushf
inc
jg
add
sarl
icebp
arpl
testl
mov
bound
lods
call
jne
dec
jl
inc
test
mov
jg
pusha
mov
fnstsw
inc
adc
or
jb
jg
push
sbb
into
iret
fsubrs
pusha
pop
dec
outsl
push
jmp
das
push
dec
inc
cs
aas
mov
addr16
imul
adc
pop
sbb
inc
loopne
mov
sti
pop
pushf
sbb
inc
push
pop
aad
out
movl
movd
cmp
and
imull
sub
fisubs
pushf
fstl
xchg
adc
loop
add
add
mov
jb
adc
inc
xor
mov
mov
mov
mov
pop
ffreep
cmpsb
ljmp
add
pop
dec
pusha
xchg
jbe
mov
in
sahf
push
test
stc
xor
std
out
std
mul
add
stos
add
test
sub
or
popfw
outsl
outsl
test
push
adc
pop
cmp
inc
ljmp
or
psubusw
ficoml
ja
cli
xchg
mov
dec
enter
inc
ljmp
cltd
pop
pop
in
call
sbb
cli
scas
enter
in
jge
add
sbb
pop
jo
pop
test
shlb
cmp
insl
jb
lds
ds
mov
jno
sbb
out
jnp
cmp
lods
fs
sbb
scas
push
outsb
mov
fucom
mov
pushf
jge
andl
std
jb
and
test
adc
mov
pop
stos
sub
jno
mov
stc
push
adc
les
jmp
aas
nop
xor
dec
shll
int3
add
push
daa
call
les
mov
ret
imul
pop
loope
sahf
or
int3
rcr
incl
ja
enter
mov
lods
jmp
jge
inc
stos
xlat
jg
xlat
mov
xchg
nop
pop
rcll
mov
addr16
cld
xchg
or
cmp
push
int3
sti
or
dec
sub
jae
lock
cmp
clc
xor
xchg
fidivrs
adc
mov
mov
pop
cmpsl
clc
mov
fwait
mov
outsl
out
jmp
and
orb
call
lds
push
std
sbb
aas
subl
push
rclb
fistl
lods
xor
mull
push
jo
sbb
ja
push
loop
fucomp
cmp
mov
pusha
lcall
test
xchg
cmp
xchg
ja
inc
insb
xor
add
xchg
mov
outsl
pop
outsl
arpl
in
ret
cmpsb
clc
outsb
inc
fucomip
pop
mov
xor
xchg
jl
jno
inc
movsb
xor
incl
jbe
cmp
ljmp
sahf
jp
mov
add
clc
cld
xchg
adc
jno
lahf
fmull
scas
mov
push
push
push
clc
sub
inc
sub
cltd
nop
dec
or
aam
inc
test
sub
dec
jecxz
lock
jp
inc
lds
xchg
mov
cli
loop
and
cmp
mov
or
lock
jmp
nop
loop
sbb
add
push
inc
jmp
sar
divb
xchg
repz
fwait
adc
imul
sti
fadds
xlat
pop
shrl
inc
mov
pop
push
and
mov
dec
mov
mov
dec
mov
cmpsb
xor
dec
lret
shl
das
mov
pop
cmp
ljmp
push
lret
insb
stc
lret
icebp
sbb
ss
pushf
mov
cld
push
and
enter
xchg
cmp
out
push
out
mov
dec
hlt
rolb
dec
xlat
xor
std
out
lock
iret
sub
out
and
jmp
jno
aad
and
and
push
out
adc
aas
int
xchg
adc
loop
sbb
mov
sub
inc
fcomip
jmp
jne
aaa
dec
lcall
push
jns
dec
xchg
jmp
push
ljmp
popa
out
mov
jb
lcall
and
jp
mov
jg
jmp
sub
push
filds
jo
in
pop
call
les
lods
inc
lcall
imulb
lds
jne
mov
adc
decl
or
lret
scas
push
ljmp
decl
outsb
pop
ret
hlt
out
jge
add
sub
push
mov
daa
pop
cs
xchg
pop
mov
loop
and
fcomp
imul
push
jne
out
adc
adc
mov
push
sub
jno
enter
add
mov
subl
dec
jne
out
lock
jne
sub
push
jmp
cld
or
ret
pop
pop
cli
sub
xorl
push
mov
int
cmp
jbe
inc
test
and
int3
xchg
mov
mov
les
pop
lock
pusha
sub
adc
std
ja
adc
sub
cmp
aad
sti
lahf
stc
pop
in
lds
jb
dec
mov
decb
std
inc
dec
sub
mov
jo
aas
xlat
lahf
pop
push
cmc
aaa
jne
jmp
xor
jbe
sbb
ficoml
inc
lahf
mov
dec
into
les
push
loope
mov
push
push
fwait
push
addl
pop
fnsave
hlt
jmp
loop
out
incl
in
stos
xchg
mov
push
sbb
sub
pop
xor
in
jnp
push
pop
push
or
js
push
push
mov
call
shll
call
bound
mov
dec
into
icebp
push
imul
or
jmp
mov
mov
loope
mov
icebp
mov
lret
hlt
pop
mov
sbb
fnstenv
add
insb
adc
arpl
cld
dec
shrb
push
mov
mov
cs
je
enter
adc
pop
cli
cmc
mov
inc
mov
jmp
push
mov
outsl
decb
rcrb
clc
loope
data16
jns
out
jno
mov
adc
fdivrp
xchg
inc
insb
mov
fs
pop
ja
loopne
sti
jp
add
pop
mov
mov
mov
std
in
jg
add
outsb
icebp
jecxz
xor
sahf
rorb
ds
pusha
mov
imul
scas
sub
fidivrs
outsb
lahf
dec
js
mov
rorb
out
push
std
inc
mov
popa
jmp
lods
clc
xchg
add
stos
ds
cli
imul
fs
js
loop
push
cli
jecxz
mov
jno
aad
cmp
xchg
lods
cmpl
movsl
cmp
das
daa
lret
cli
rol
scas
add
mov
jmp
mov
mov
mov
mov
xchg
cli
xor
out
mov
jo
iret
lock
and
in
mov
mov
and
test
cmp
inc
mov
jp
mov
sub
push
adc
clc
mov
fcomps
fsubr
or
push
cltd
outsl
js
pop
aam
mov
icebp
rcll
shrl
mov
dec
mov
jb
add
sbb
fdivr
and
and
mov
ret
out
icebp
jg
sarb
aam
cwtl
insb
adc
sub
mov
or
scas
lds
ja
jle
frstor
dec
push
mov
notb
aas
mov
mov
ja
add
adc
inc
push
jg
aam
dec
mov
maskmovq
divl
mov
loopne
cld
xchg
lcall
push
psubsw
mov
sti
mov
adc
mov
push
fs
or
repnz
sub
sahf
mov
test
mov
inc
cld
flds
sub
push
or
jp
insl
and
fs
dec
jb
popf
and
outsb
and
mov
mov
call
xor
mov
mov
mov
xor
and
jo
mov
sbb
cli
addr16
jge
push
dec
scas
call
or
aas
idiv
ljmp
inc
mov
ja
pop
jecxz
fwait
adc
call
loope
insb
jg
jne
in
insl
sahf
push
test
or
adc
inc
xor
movsb
in
stos
mov
nop
inc
popa
xchg
or
sahf
add
xchg
mov
cmp
push
push
negl
imul
inc
std
enter
sub
incb
or
mov
push
sti
dec
adc
jl
mov
popa
mov
lret
mov
add
push
cli
pop
sahf
insb
idivl
or
in
hlt
xchg
imul
mov
push
sub
nopl
aad
push
sti
icebp
test
mov
lods
xlat
push
sbb
cld
dec
scas
lcall
xchg
jne
mov
popa
dec
iret
and
jmp
mov
shll
pop
aaa
mov
pop
or
aas
mov
lods
push
out
mov
add
testb
and
cli
mov
sbb
scas
xor
jecxz
or
push
dec
push
dec
xor
and
int
movsb
call
xor
cs
mov
es
fst
jmp
jge
stc
mov
clc
arpl
fldt
ds
mov
mov
cwtl
in
fwait
loope
sti
decb
cmc
out
xchg
sub
fadd
jne
jp
insb
cmp
xchg
sbb
loopne
and
mov
mov
lods
mov
fiaddl
ds
mov
fisttps
and
iret
fistpll
mov
mov
les
aaa
pop
cmpsl
decl
pushf
xlat
xchg
shll
cmp
fldenv
mov
std
insl
cmpsl
lcall
mov
ljmp
lret
int
jb
xor
stc
pushf
rol
add
mov
xchg
lods
xchg
push
pop
mov
lock
insl
out
js
nop
sub
mov
aas
ror
xor
icebp
xchg
mov
ds
mov
jg
push
bndldx
and
adc
mov
aas
mov
jge
jne
call
stos
ljmp
pop
mov
lods
mov
mov
jmp
fadds
mov
mov
mov
cmp
fiadds
cmpsb
or
aas
xchg
sar
add
mov
add
pushf
fcoms
out
jle
sti
sub
ret
xchg
xor
push
cmp
insb
sub
xor
cli
je
mov
aad
enter
add
clc
dec
cli
mov
push
cli
pop
call
or
push
into
xor
inc
mov
cld
mov
mov
jmp
adc
or
out
push
lcall
cld
sub
daa
fadds
out
clc
push
pop
out
mov
lods
sub
jmp
push
sub
lods
push
in
xor
or
mov
lock
and
sub
icebp
popf
sti
xlat
fdivrs
sti
push
dec
andl
push
je
call
lock
mov
shl
inc
ret
cmpsl
out
cld
and
addr16
xor
hlt
pushf
inc
das
icebp
cmp
pop
xchg
dec
mov
lds
jg
push
out
jp
mov
mov
mov
lcall
jg
add
test
loop
fwait
push
rclb
aam
sub
fistpll
jnp
push
lock
cmp
mov
adcb
mov
xchg
sbb
pop
jne
mov
outsl
dec
or
orb
inc
out
mov
lcall
jp
jge
dec
sub
scas
inc
jl
add
into
xchg
bnd
add
scas
jo
sbb
cmc
pop
imul
loope
fsts
mov
mov
dec
xchg
shr
call
mov
push
aas
jmp
push
scas
popf
xchg
add
in
shr
imul
and
fidivs
inc
in
aas
inc
loop
cli
add
push
bound
jbe
outsb
pop
loope
pop
in
mov
iret
sub
push
mov
clc
iret
jge
enter
mov
jno
xor
std
pop
stos
pop
ds
or
lret
dec
sahf
popf
xor
fucom
comiss
addb
test
les
icebp
xor
mov
xchg
xchg
cmc
icebp
clc
xchg
mov
add
fsubs
loope
call
pop
stos
lret
or
je
xchg
decb
or
cmp
movsl
fbstp
js
mov
inc
add
fs
call
ss
daa
fidivrs
cmp
pop
mov
dec
call
xor
jle
xor
mov
and
pop
dec
or
mov
ds
shl
addr16
mov
or
jp
jnp
out
push
ss
fnstenv
pop
loop
out
imul
add
addl
clc
out
inc
scas
push
push
push
scas
aad
mov
into
std
fdiv
in
pop
icebp
daa
sbb
dec
aam
ss
push
jg
jno
cmp
and
incb
sub
mov
pop
push
adc
pusha
imul
adcl
ret
sbb
fs
dec
mov
cmpsl
out
cwtl
push
clc
gs
jae
and
ret
jp
in
test
sarb
dec
jg
pop
add
in
lods
pop
pushf
lahf
xchg
sbb
ja
clc
and
sub
movsb
cltd
mov
shr
sarb
jle
pop
add
addr16
cmp
fidivrs
push
xor
mov
shrl
cmp
dec
lcall
sub
or
pop
das
jle
xor
imul
push
push
or
imull
xchg
rclb
sub
mov
xchg
pop
jg
jg
pop
sbb
inc
lcall
iret
add
dec
jg
mov
jp
gs
pushf
mov
ret
push
inc
jae
mov
sub
mov
test
sbb
aas
in
adc
jg
mov
cmpsl
add
out
xchg
test
xchg
ds
push
lcall
test
jb
mov
pop
stos
loop
sub
mov
ret
xchg
cmp
outsl
adc
test
jg
or
dec
mov
mov
loopne
cld
call
imul
mov
cmc
in
fsubrl
fbstp
test
aad
ret
xor
es
xlat
fwait
test
dec
sub
test
jne
adc
cli
decl
stos
inc
adcb
aaa
fdiv
add
mov
and
adc
and
xchg
xor
ret
out
lahf
xor
xor
ja
xor
pop
jp
fnstsw
adc
test
xchg
jne
outsl
std
push
push
aas
dec
cmpsb
cs
pop
push
mov
ljmp
or
adc
int3
ret
pop
aad
cmp
and
das
xor
jecxz
sbb
les
out
js
jg
or
cmp
cli
sbb
pop
out
adc
ret
out
lahf
fsubrl
mov
inc
cmp
xor
jl
fistpll
adc
insl
jg
clc
pop
jmp
pushf
jecxz
les
pop
jg
xor
xor
cmpsb
mov
xorb
outsl
jp
jne
pushl
push
or
sbb
mov
jl
idivb
inc
mov
and
adc
mov
pop
pushl
mov
fiadds
movsb
add
movsl
scas
adc
out
push
movsl
jp
cmpsb
dec
int3
stc
jno
cmpsl
call
sbbl
pop
mov
mov
ja
call
sbb
das
inc
je
idivl
sub
cwtl
shl
sbb
int
cltd
out
jns
add
mov
movsb
push
xchg
lock
jp
adc
mov
xor
cmpsb
ja
add
ret
sub
std
or
jbe
ljmp
add
or
jno
fisubrl
js
mov
aas
push
dec
pop
std
cld
sub
cmp
inc
out
bound
fdivrs
cmp
out
xadd
xor
pop
or
lret
fcoms
and
bound
aas
cmp
inc
out
cmp
add
repnz
shll
pop
decb
cltd
sahf
andl
add
pop
mov
loopne
sub
mov
int3
cmp
dec
mov
std
cs
insl
into
movsl
xchg
jecxz
sub
incl
xchg
or
push
adc
fs
mov
jmp
popf
adc
mov
jmp
push
mov
testb
add
push
sbb
andb
dec
inc
sub
out
inc
mov
xor
mov
jae
aas
jnp
nop
call
cmpsl
adc
loopne
imul
inc
hlt
inc
jl
js
jmp
cli
xchg
imulb
dec
jp
add
pusha
pop
push
into
rcrb
cmc
mov
stos
sbb
sbb
jnp
jecxz
insl
jg
cmp
or
loope
xchg
into
sbb
xor
out
insl
mov
sbb
cmp
mov
pop
and
lahf
ror
sbbb
sar
sbb
push
adcb
lock
lock
out
out
fwait
sbb
ret
cmc
fsubr
lcall
pop
cmp
das
insl
clc
mov
stos
jle
std
pop
mov
inc
dec
in
mov
lcall
scas
cmp
dec
imul
ds
mov
xor
adc
aas
mov
out
filds
test
rcl
dec
dec
popf
jmp
mov
call
cmpsl
and
and
inc
out
jg
insl
mov
adc
sbb
dec
push
test
sbb
movb
ss
add
push
and
roll
add
insb
xor
loope
icebp
nop
jae
mov
or
aas
inc
inc
shrl
stos
xchg
sbb
inc
aas
adc
rcrb
int
adc
mov
ja
lods
out
scas
lods
mov
lahf
fidivrs
data16
pop
loope
and
add
adc
lahf
sar
sbb
std
xchg
ret
pop
frstor
in
cmpsl
dec
adc
and
addb
int3
mov
xor
mov
pop
gs
stos
xchg
ja
scas
nop
out
lods
add
insb
push
mov
jnp
movsl
ret
in
jecxz
test
cld
jne
mov
mov
adc
call
cmpsl
insl
or
jg
xor
mov
sbb
in
pop
out
std
cwtl
mov
jo
lods
pop
add
cmp
push
adc
jbe
or
ret
out
lock
or
push
mov
xlat
adc
lahf
push
ljmp
test
iret
in
mov
test
pusha
out
cmp
push
cmp
ds
cli
ja
ret
mov
xor
addb
stc
fistpll
icebp
jno
cmp
adc
into
movsl
call
mov
push
dec
cmp
add
mov
fildll
ja
sahf
add
adcb
js
fcoms
adc
add
lret
rcrb
into
pushf
sub
jp
ja
pop
jge
jno
test
jle
frstor
cli
xchg
xor
repz
push
sub
push
incb
mov
xchg
push
rolb
mov
ficomps
aas
push
dec
cltd
mov
dec
std
push
out
pop
jns
or
inc
icebp
pop
push
out
mov
pusha
push
fxch
out
into
jg
clc
cmp
shlb
lret
xorl
cli
shll
xlat
insl
jnp
mov
or
mov
out
fistps
ja
ljmp
push
xor
pop
jne
push
lret
sbb
shl
js
adc
popa
push
and
lret
mov
mov
dec
push
adc
xchg
lret
ja
mov
and
addr16
insb
xlat
and
and
mov
mov
dec
mov
enter
pop
inc
sub
sub
je
addr16
fucomip
out
jo,pn
iret
sti
shl
fidivl
pushl
or
ja
or
pop
push
push
add
movsb
xor
nop
sbb
ljmp
dec
fisttpl
add
xchg
adc
pusha
sbb
or
jmp
cmc
rcl
jno
das
negl
cs
in
dec
jnp
into
fs
pop
es
shll
cwtl
js
jbe
pusha
rcr
and
sbb
dec
fwait
sub
jg
aas
jp
inc
pop
ret
inc
jl
push
lea
ret
shr
xor
out
pop
sti
dec
xchg
arpl
test
sub
sbb
addr16
push
sti
mov
or
icebp
inc
mov
into
loop
daa
or
sbb
lret
std
aas
pop
movsb
andl
daa
adc
mov
scas
imul
test
ja
decl
adc
mov
fcompl
icebp
fiadds
rorl
std
sub
cmc
pushf
rorl
xchg
and
rclb
loop
divl
fdivs
push
aaa
jo
hlt
ja
jb
cmp
mov
push
fmuls
iret
std
jae
xchg
and
hlt
pop
in
cld
add
clc
filds
sbb
mov
sbb
test
jns
rolb
test
sar
or
jge
cltd
mov
imul
fadds
dec
bound
pop
movsb
jg
sub
in
fstl
mov
in
jbe
jne
jbe
inc
fists
push
imul
pop
pop
sahf
dec
js
jp
leave
or
aad
daa
ret
stos
aad
dec
xchg
add
push
popl
jp
and
fiadds
das
ljmp
xchg
or
faddl
xor
and
call
pop
cli
pop
jo
gs
dec
or
lock
push
std
aas
sbb
mov
in
sbb
jle
dec
lcall
jecxz
adc
push
ja
call
shlb
xchg
jle
push
sub
movsl
fisubl
sub
movsb
cli
fistps
push
cmp
enter
or
sbbb
jb
pop
inc
lret
jnp
xchg
cmpsb
sbb
aaa
sub
cld
pop
push
mov
add
psubusw
push
jbe
or
xchg
pop
movsl
jg
stc
inc
or
negb
mov
sahf
pop
shlb
cs
adc
loop
fsubp
sahf
pop
xor
test
fdivs
lea
push
pop
pop
or
sub
inc
pop
movsb
hlt
sahf
push
movsl
push
stos
jno
idiv
adcl
fmull
cmpsb
pop
fnstenv
adc
loopne
test
xchg
loope
out
hlt
loop
fistps
pop
aaa
fildl
dec
add
fwait
cltd
test
or
adc
and
aas
sbb
and
dec
sbb
idivl
dec
cmc
sbb
jmp
sbb
leave
jp
fnsave
mov
fistpll
cmp
cmp
push
arpl
mov
xchg
mov
loopne
cmc
inc
outsb
adc
xor
sbb
icebp
fucom
mov
mov
dec
jecxz
sub
adc
fsub
fwait
in
lods
arpl
xor
or
jmp
jbe
or
cmp
xchg
jnp
jae
inc
movsb
push
sub
ja
jg
jle
sbb
test
jnp
fdivrs
dec
gs
inc
pop
or
pop
and
ficoml
and
lods
aad
mov
mov
cmp
push
or
popa
ja
addl
aad
mov
jg
pop
lock
std
test
xchg
mov
mov
pop
nop
shlb
idiv
xchg
call
loop
pop
xlat
mov
mov
sub
mov
lahf
fisubrs
pinsrw
mov
jmp
mov
dec
or
mov
jl
xor
outsl
js
das
push
push
mov
add
int3
cmp
iret
std
mov
pop
aas
jae
mov
addps
bound
movsl
std
adc
jnp
dec
aad
addr16
sub
cmp
adc
das
shr
jle
int3
jne
add
shlb
add
add
shl
scas
adc
lret
stc
ss
loopne
call
aas
push
mov
ja
call
daa
xchg
fcomip
rolb
cwtl
adc
xchg
and
rclb
sub
adc
popa
and
lahf
sti
fisttpll
sub
mov
arpl
call
mov
dec
pushf
mov
push
clc
mov
addr16
lahf
push
stos
fnstcw
rclb
or
mov
repz
mov
mov
jle
movsl
add
mov
movsb
dec
or
mov
fisttps
fldl
cmpsb
lahf
xchg
mov
xchg
stc
aaa
fimuls
inc
inc
cltd
sub
lock
dec
cmc
mov
xor
outsl
sbb
cmp
pop
ja
xchg
adc
push
cs
cmc
jg
ja
mov
enter
lds
sti
adc
enter
ljmp
dec
inc
mov
dec
in
leave
repnz
jo
mov
mov
lods
inc
enter
jmp
rcr
loop
sbb
into
xchg
iret
adc
jp
sarb
add
mov
ret
hlt
fistpll
das
int
push
pop
mov
std
mov
loop
das
push
cmp
pop
cmp
adc
pop
maxps
popf
movsl
out
mov
rorb
jo
sub
test
cli
push
adc
push
mov
fwait
adc
insb
or
fimull
mov
outsl
iret
xor
es
popf
idivl
stos
jle
mov
js
pop
or
mov
sub
addr16
cmp
sbb
pop
cmp
fistpl
out
mov
stc
lods
cltd
scas
aad
dec
fistpll
xchg
call
xchg
fcoms
cmc
lcall
inc
pushl
dec
lahf
inc
mov
enter
sub
in
push
mov
fs
adc
adc
test
mov
dec
xor
xchg
popf
decb
cmp
loope
add
mov
inc
mov
adc
orl
pop
stos
adc
mov
out
into
leave
dec
rcll
sbb
mov
shll
pop
mov
icebp
out
call
xchg
ljmp
test
fildll
mov
xor
aas
adc
sbb
dec
add
add
mov
adc
dec
cld
jg
jg
es
jecxz
aas
mov
dec
adc
cltd
ret
cld
jo
dec
sub
out
ja
pop
test
add
ret
cmp
mov
add
dec
scas
fs
add
clc
aas
adc
sbb
bound
mov
negl
loope
pusha
xor
popf
bnd
pusha
hlt
ja
mov
and
cmp
std
or
and
mov
inc
out
lar
mov
pop
or
cld
xchg
cld
fbstp
xor
imul
xchg
cs
lods
push
test
sub
mov
paddb
inc
hlt
mov
mov
cmp
push
xchg
sub
sbb
sbb
test
pop
xchg
inc
cld
pop
rcr
jl
pop
sub
test
cltd
arpl
ljmp
pop
not
in
js
push
sbb
lea
sub
nop
mov
lcall
mov
jg
ljmp
popf
mov
test
pop
scas
cld
dec
pop
outsl
scas
stos
aas
mov
hlt
lcall
das
sarb
cli
adc
mov
jne
fwait
xor
in
lods
mov
out
and
jnp
push
xlat
in
mov
push
adc
jge
sbb
xchg
movsl
clc
xchg
out
and
idivb
cmpl
ror
das
lahf
test
decb
jg
mov
test
add
and
jp
shll
push
incl
xchg
addr16
mov
aas
jbe
jne
jle
jo
das
je
lahf
add
and
ret
xchg
popa
mov
popa
dec
mov
cmp
pop
xchg
in
cli
in
imul
xchg
mov
inc
sbb
or
icebp
in
jmp
ljmp
sub
adc
sarb
mov
fistpll
mov
cmp
rorb
push
dec
rcrl
ret
sbb
jae
sbb
imul
mov
push
iret
shrb
clc
popl
jnp
pop
pop
frstor
pushf
jb
mov
inc
dec
mov
sbb
mov
jl
clc
adc
ret
out
jbe
xor
outsl
fisttpll
scas
les
ljmp
jg
lock
mov
pop
das
test
and
push
jae
in
ret
push
dec
cli
pop
sbb
mov
adc
jno
push
push
aad
lret
fidivs
fprem
mov
mov
push
popa
pusha
mov
sbb
in
out
mov
mov
ret
subb
cmc
sahf
jp
ret
push
setp
mulb
sar
out
lock
jnp
fwait
and
add
jecxz
adc
or
and
cmpl
sarb
lock
or
mull
std
or
mov
jle
cli
aaa
xor
loope
bound
mov
stc
int3
arpl
mov
sbb
pxor
sbb
in
xacquire
popf
mov
or
sub
or
or
lds
pop
mov
mov
cmp
lret
loop
jecxz
out
mov
push
in
inc
jno
ja
add
dec
lds
cmp
sbb
aad
dec
rcr
stos
je
cmpsl
fisttpll
xor
test
loope
sbb
adc
sub
cmp
int
jl
pop
jge
jnp
insb
pop
push
cs
repnz
xchg
ffreep
scas
adc
push
ret
mov
jle
icebp
pop
cmp
mov
and
in
inc
mov
stos
movsb
mov
test
pusha
cld
inc
add
arpl
pop
dec
mov
je
cmp
jnp
cmp
out
push
cltd
inc
outsb
sub
pushf
icebp
pop
pop
sarl
lcall
dec
sti
mov
repz
mov
mov
dec
push
mov
scas
push
data16
mov
pop
incl
fwait
idivl
mov
or
push
add
rorb
ja
out
cmp
lahf
mov
loopne
fwait
mov
movsb
fdivrl
and
pop
sub
movsl
out
push
pop
jp
and
lcall
jne
jo
call
mov
insl
sti
or
decl
push
xchg
jmp
jg
test
aas
ss
mov
xchg
adc
jmp
in
aaa
mov
aas
enter
je
ljmp
nop
add
loope
call
in
imul
adc
imul
xor
pop
mov
or
xchg
ljmp
imul
decl
icebp
dec
loopne
cmp
imul
and
mov
icebp
pop
push
push
lret
cmovl
andb
pop
jecxz
sti
fwait
add
cli
cmp
push
in
roll
jg
mov
in
or
xor
push
mov
lods
scas
out
das
outsl
dec
jp
scas
xchg
cli
mov
push
mov
and
inc
cli
ja
andb
data16
shlb
outsl
fbstp
ret
add
or
xchg
fcompl
sub
mov
pop
fwait
push
xor
out
fidivrs
cmc
mov
sbb
data16
aas
inc
std
psrlq
ret
pushf
xchg
xchg
xchg
addr16
inc
clc
loope
lea
inc
xchg
lret
pop
sub
std
shl
loop
push
in
rorb
push
std
mov
sbb
xor
fucom
repnz
call
loope
mov
jle
cs
arpl
cld
scas
imul
imul
mov
and
inc
leave
dec
xchg
xchg
pop
sbb
sub
xor
pop
sti
and
lods
inc
sti
mov
repz
int
sti
inc
das
cmp
scas
mov
dec
shlb
mov
rcrl
inc
decb
cmp
scas
flds
outsb
cld
bound
ret
gs
fistpll
xchg
push
jno
data16
iret
clc
movsl
push
adc
incb
js
pop
imul
xchg
fidivrl
fistpll
ja
daa
sarl
fucomi
mov
jmp
xor
lahf
mov
jne
jmp
nop
fs
imull
xchg
test
test
and
xor
rcl
inc
jmp
aam
repz
ret
insl
jbe
and
mov
lds
xrelease
mov
jg
lods
mov
ds
sub
out
lock
mov
mov
in
test
adc
lock
les
push
push
jg
out
dec
mov
cmc
aaa
sbb
loop
test
push
xlat
rorb
jg
lods
mov
cli
jmp
out
call
mov
xchg
and
stos
fdivr
icebp
mov
cmp
mov
into
lret
jle
inc
loopne
mov
inc
mov
ret
hlt
pop
bound
pusha
imul
mov
movb
dec
jne
xlat
cli
adc
shrb
cmp
je
nop
dec
jb
movsb
hlt
mov
jo
popf
inc
push
aas
mov
jmp
nop
cmp
andb
sub
add
pushf
or
insb
out
fdivrs
ret
add
push
sbb
adc
push
hlt
arpl
fs
xlat
rcr
neg
jecxz
fdivrl
lea
mov
sub
imul
or
mov
arpl
push
and
pushf
loopne
jmp
jg
push
jae
pusha
les
dec
icebp
iret
repnz
cld
jmp
rcrb
adc
pop
push
push
cmp
mull
rclb
imul
or
loopne
xchg
test
inc
fisubrl
mov
xlat
repz
pop
mov
xor
js
dec
or
push
jmp
mov
mov
cld
xchg
lss
cmp
jg
jg
push
cmp
ljmp
fidivrs
sub
adc
fnstcw
out
adc
iret
inc
mov
mov
call
fmul
sbbl
jnp
xchg
ret
loop
mov
jnp
adc
test
jno
lahf
roll
xchg
divl
addr16
std
jmp
adc
jmp
insb
shll
push
in
or
incl
jo
or
sub
jnp
push
cmp
fnsave
cmpsl
sti
mov
push
xor
popf
sub
mov
mov
push
sbb
and
jl
outsl
and
imul
and
dec
sahf
or
cmp
and
adc
rorb
ret
pop
stos
scas
cmpsl
scas
fs
mov
in
aas
and
in
cmp
dec
clc
pop
js
pushl
or
pop
jecxz
out
decl
je
pop
cmp
aam
clc
int
xchg
jae
imull
aas
or
push
fisttpll
add
cmp
sbb
rorl
or
ds
gs
xchg
jp
jns
fists
sti
sbb
test
sti
xor
xor
in
ss
and
fbstp
mov
icebp
aam
add
push
sar
mov
cmpsb
xchg
roll
inc
rorl
jecxz
jo
loopne
mov
sub
push
add
mov
and
xchg
ja
pop
pop
mov
pushf
jecxz
stos
js
jle
cli
daa
mov
or
mov
cmpsl
mov
mov
lock
mov
pop
repz
mov
pop
mov
push
fs
push
sarl
icebp
pushf
pop
mov
mov
jmp
push
je
lods
mulb
divb
pop
cwtl
out
test
bound
js
pop
or
loopne
lods
cmc
stos
outsl
ds
incl
dec
rol
aas
and
movsb
das
sbb
mov
mov
sbb
push
ud0
es
pop
loopne
les
cmc
dec
lock
in
cmp
jno
orl
adc
cmpsb
pop
decb
fidivs
sahf
jp
adc
mov
daa
popa
add
pusha
push
ss
add
pop
cli
mov
lret
mov
pop
and
test
lea
aad
dec
dec
pop
xchg
inc
push
sbb
nop
mov
pop
hlt
push
pusha
ja
cmp
sbb
lret
jne
push
xor
push
les
dec
sub
inc
ljmp
sub
ss
sarb
addr16
loopne
dec
xchg
mov
negl
into
cmp
in
div
pop
popa
pop
movsb
fildll
rolb
mov
lcall
or
sbb
stc
lcall
test
loopne
add
jg
inc
loopne
mov
stc
cmp
cmp
xor
jge
push
mov
enter
cld
orl
and
clc
push
cwtl
mov
sahf
les
test
sub
stos
cld
push
push
test
iret
je
mov
xor
inc
out
mov
dec
imul
fwait
int3
loopne
push
cld
adc
call
pushaw
movsb
daa
cmp
sarb
cmp
push
jg
jo
loope
sub
das
dec
push
dec
push
sub
mov
stos
xchg
pop
jmp
lret
jg
mov
fs
nop
or
lret
dec
mov
stc
sti
fidivrs
jns
mov
inc
ret
xor
pop
ds
mov
shll
hlt
out
bound
test
andb
into
and
out
data16
nop
inc
pusha
pop
xchg
lods
lock
cwtl
cld
xchg
movq
mov
and
daa
and
push
inc
inc
adc
nop
pusha
sahf
pop
std
jmp
or
add
pushf
mov
mov
scas
push
adc
push
int
push
mov
fldl
xor
mov
push
cli
lock
pop
xor
push
shl
aaa
or
cwtl
sbb
mov
xor
aas
sbb
stc
repz
mov
adc
cmp
pop
adc
fadds
sub
rcll
pop
lret
jmp
mov
decb
xchg
stos
lret
cltd
fstl
clc
add
push
jle
adc
inc
pop
sub
jo
pop
and
xchg
in
sbb
sub
in
fwait
out
icebp
pop
dec
mov
paddd
mov
icebp
mov
jno
lock
cmp
fistps
dec
dec
adc
inc
addr16
jnp
inc
sti
xor
loop
cli
outsl
and
and
cwtl
pop
sbb
notb
mov
push
dec
aam
or
jae
bound
sbb
sbb
loop
mov
bound
push
cmc
iret
mov
mov
mov
movsb
incl
cmp
pop
movsb
pop
pop
mov
clc
inc
inc
icebp
rcrl
fidivrs
sti
mov
adc
cmp
jp
cmp
or
popl
jg
aaa
popa
loope
mov
or
test
jmp
loope
dec
cmp
mov
pop
shll
sub
push
cli
dec
out
testl
out
adc
ds
movsl
pop
aad
jmp
cmp
ljmp
jle
ljmp
lret
clc
cmc
jle
loope
xchg
stc
stc
dec
sub
and
int
mov
adc
or
sahf
sbb
loopne
loope
push
cmpsl
testl
jle
sub
divb
loopne
int
js
mov
fcompl
mov
clc
jg
jmp
test
aas
out
enter
test
jp
test
rol
call
test
pop
cmpsb
stc
mov
cli
xchg
insl
xor
xchg
ja
pop
incl
or
dec
mov
and
incl
push
xchg
mov
and
mov
sbb
aas
sbb
cmp
shlb
scas
jbe
dec
cmpl
mov
or
loopne
push
and
mov
leave
lret
pop
jae
fcmovne
aaa
push
rcr
xchg
lods
adc
repz
dec
inc
mov
iret
cld
mov
jnp
push
or
mov
ss
out
mov
push
loopne
outsb
mov
cmp
andb
clc
mov
ret
lret
fcmovbe
dec
inc
aas
imul
sub
jno
sbb
pmulhw
std
pop
add
push
cli
incb
xlat
and
mov
movsl
sti
sub
xor
pop
aas
mov
mov
and
loope
push
mov
adc
mov
mov
ss
stos
ret
sub
inc
out
out
mov
inc
mov
sarb
addr16
popa
sbb
dec
xor
jmp
mov
sub
mov
and
loopne
sub
jmp
aad
test
push
cmp
fucomi
pop
loope
inc
push
out
out
mov
call
aas
add
ret
dec
cmpsl
cld
pop
mov
in
add
push
aaa
add
lds
mov
lods
mov
add
jg
std
frstor
loop
jge
xor
popa
rcrl
aam
les
or
repz
inc
xchg
cld
cld
xchg
lret
jecxz
jb
pop
and
cmc
cmpsl
lea
mov
decl
pusha
lret
push
lods
sbb
xchg
push
lods
dec
xchg
sar
mov
jbe,pt
out
shrl
gs
mov
add
cmp
outsb
push
iret
loopne
sti
inc
aaa
das
adcb
sub
jae
jo
iret
std
test
stos
or
adc
jmp
xorl
mov
movsl
push
mov
and
aas
pop
movsb
mov
rcll
aas
or
mov
add
xchg
sar
inc
xor
aad
jnp
out
mov
sub
cmp
fdivl
hlt
pop
mov
aaa
mov
adc
mov
out
cmp
mov
imul
adc
cli
dec
add
xlat
loope
and
aaa
xor
fst
adc
testl
sub
or
cli
lcall
lock
mov
loope
lret
adc
jge
pusha
jns
out
jg
xchg
dec
mov
or
lods
cmc
enter
mov
or
jg
mov
ffree
or
xchg
pushl
int3
mov
inc
sub
cmp
cld
or
mov
add
movsb
adc
loope
frstor
iret
mov
mov
lods
pushf
outsl
dec
mov
movsl
lock
aad
sar
idivl
shl
loop
out
and
ficomps
rep
das
leave
add
cli
mov
dec
push
aam
mov
scas
xchg
pop
sub
mov
push
sub
mov
jmp
ds
push
sbb
ljmp
pop
sbb
ror
mov
mov
push
mov
or
adc
sarb
outsl
push
incl
movsl
xor
mov
lea
arpl
cli
and
aas
mov
aaa
add
enter
outsb
or
loopne
push
test
filds
icebp
pop
cmc
jbe
sar
fistl
scas
dec
or
shrb
bnd
cmp
test
ljmp
sub
dec
xchg
das
insb
lock
scas
je
loop
pop
arpl
and
jg
jmp
sub
mov
sti
daa
scas
mov
out
and
in
lea
adc
loop
cli
call
cmp
push
cld
out
bound
int
lahf
add
imul
mov
sub
push
adc
ja
xor
pop
dec
and
sbb
sub
mov
psubsw
inc
fildl
mov
sbb
setne
adc
sbb
inc
cmpsb
fisubrs
fimull
push
das
in
push
aas
inc
mov
test
js
idiv
cmp
or
ret
decb
mov
or
dec
adc
and
lahf
mov
ljmp
sti
mov
jp
dec
scas
pop
xor
outsb
mov
xor
mov
lahf
sbb
fisttps
lea
stos
fidivrl
jae
hlt
outsb
int3
sub
fwait
pop
push
push
es
push
popf
mov
pop
mov
aas
mull
cmp
lea
iret
aaa
inc
lar
iret
jo
loopne
dec
movb
xor
or
jmp
and
mov
call
mov
fcmovnb
and
popa
jg
lock
mov
xchg
and
pop
inc
mov
gs
push
or
inc
cmp
jp
popa
mov
out
push
outsb
fdivrl
ja
movb
repz
shrb
pushl
paddb
ret
icebp
aas
mov
and
sbb
incl
icebp
mov
dec
andb
repz
jae
cs
dec
adc
mov
jns
or
pop
add
out
add
mov
push
loope
mov
fmuls
mov
repnz
xchg
or
lock
roll
flds
pop
jmp
stos
mov
scas
adc
pop
xor
sahf
mov
out
outsl
rorb
xchg
cli
mov
clc
aad
cwtl
shrl
cmp
jnp
adc
add
add
ljmp
xor
adc
cld
cs
decl
leave
aam
out
jnp
dec
mov
pop
push
adc
jg
aaa
sbb
cmp
jl
decl
and
pop
ljmp
gs
cmpsl
mov
fisubs
and
mov
mov
mov
cmc
outsb
jg
decl
pop
jecxz
jae
ret
mov
movsl
pop
hlt
loop
cmc
mov
pop
test
ljmp
cmp
decl
fisubs
fbld
xor
aas
add
cltd
iret
std
jnp
and
cmp
pop
ret
pop
aam
xor
in
lds
rorl
jns
or
cmp
jg
or
add
pop
std
cmp
dec
testl
mov
aas
mov
dec
out
cmc
adc
in
dec
aam
aad
iret
popf
xchg
inc
sti
or
sbb
pop
mov
loope
and
pop
fbld
out
test
in
outsb
cmp
sub
mov
das
loope
or
ret
xlat
fbstp
xchg
fucomp
dec
mov
lret
idivb
xchg
out
mov
sub
adc
pop
mov
call
cmp
enter
in
sbb
push
icebp
aad
jo
out
faddl
mov
das
inc
movsl
mov
icebp
verw
in
incl
adc
les
hlt
pop
ret
pop
dec
ficoml
xchg
icebp
mov
ficomps
shlb
push
jge
insl
cmp
inc
add
and
enter
inc
xchg
pop
lahf
sti
lahf
push
mov
js
lock
mov
int3
lock
pop
icebp
cmp
and
sbb
inc
dec
inc
scas
add
or
mov
inc
adc
inc
and
add
cld
out
fdivp
stos
mov
lock
mov
lcall
xchg
insl
xchg
xor
lods
dec
mov
out
cld
sbb
lret
inc
mov
and
mov
dec
cli
pop
mov
fisubrs
xchg
jg
or
outsl
jo
cmc
es
incl
notl
aaa
pushf
or
pop
insl
mov
inc
mov
arpl
push
adc
xor
mov
movsb
push
loop
push
mov
sub
clc
das
adc
sbb
inc
ret
popa
push
dec
jg
fiadds
xchg
negb
fs
xor
and
icebp
inc
adc
mov
decl
outsl
add
sub
push
decb
aam
jno
xorb
cmp
xor
imul
call
cmp
pop
xor
and
out
or
arpl
adc
loope
mov
nop
into
xchg
dec
movsb
cmpsl
sarl
js
add
decl
mov
mov
jle
mov
xor
and
mov
jo
pusha
mov
sbb
sbb
int3
dec
rcr
inc
es
ret
push
xadd
scas
inc
xchg
shrl
push
xorps
dec
jg
cmp
cmp
sahf
xchg
cs
lcall
mov
xchg
fwait
pop
push
es
sub
fucomp
incl
mov
dec
shll
ja
sub
cli
mov
lods
dec
inc
arpl
ret
and
jne
outsb
cmp
push
out
data16
pop
inc
mov
add
xor
dec
cmp
mov
out
pop
inc
std
pop
add
std
cmp
daa
dec
or
nop
lea
xchg
xchg
or
enter
xchg
loop
mov
fwait
lock
jle
adc
out
adc
inc
adc
lock
cwtl
xor
mov
aas
or
cmp
sub
mov
jg
add
std
addb
adc
jl
fwait
mov
aad
divl
jmp
stc
mov
in
and
mov
insb
decl
adc
sti
jecxz
fnstsw
sub
mov
les
std
xlat
or
je
mov
xchg
add
test
ljmp
lcall
loop
jge
xor
xchg
inc
arpl
jmp
push
les
xor
mov
mov
mov
xchg
leave
popa
add
out
mov
dec
ficoms
mov
sbb
repz
jnp
ja
loop
rolb
sbb
and
icebp
fldl
adc
dec
inc
or
scas
jle
inc
mov
cltd
mov
icebp
insb
loope
mov
add
xchg
mov
scas
int3
mov
aam
in
addr16
or
movb
jg
pop
stos
mov
sbb
stos
loopne
negl
jg
push
cmp
jne
bnd
mov
into
inc
pop
jge
or
pushf
push
test
mov
pop
rcrb
cli
fcom
mov
push
pop
mov
sbb
movsb
sbb
pop
cmp
jnp
jnp
dec
mov
ret
fcompl
pop
ds
push
in
inc
adc
loopne
addr16
jmp
js
mov
mov
pop
or
jecxz
fs
jmp
jge
adc
dec
jnp
mov
clc
cmpsl
clc
mov
notl
je
filds
lock
rorl
arpl
fnsave
and
pop
mov
std
xchg
or
cmp
jbe
lret
jns
jbe
pop
jns
stos
lock
data16
mov
inc
or
rcl
lret
pop
mov
je
mov
repz
js
mov
jge
pushl
mov
xor
mov
dec
lahf
loopne
inc
lret
clc
lea
jbe
aas
push
dec
jg
inc
subl
cld
sbb
mov
pop
aaa
add
cmp
data16
sbb
pop
out
mov
inc
pop
and
stc
cmc
in
std
inc
addl
sbb
mov
test
icebp
inc
hlt
inc
push
and
cld
and
and
push
cmp
pop
push
nop
mov
xor
rcll
xchg
or
aas
test
jae
fcompl
dec
rol
dec
add
pop
mov
addl
ja
ss
ja
fstps
popf
sub
test
fdivl
dec
cmpb
pop
les
dec
movsl
hlt
xchg
shrl
in
aaa
loope
clc
mov
lods
adc
jmp
sub
sub
dec
arpl
jg
pop
stc
je
dec
into
pop
imul
sub
aaa
mov
les
dec
outsl
cmp
pop
mov
cmp
scas
and
mov
push
pop
repz
dec
jg
jg
addr16
lods
push
lcall
xchg
scas
lcall
sub
inc
scas
cwtl
mov
sbb
mov
mov
mov
inc
add
test
lret
cmp
or
cld
cmpsb
js
cmp
xchg
xor
xchg
add
std
jmp
mov
icebp
dec
lock
sbb
popa
call
pop
insl
clc
lea
rcrl
out
jg
filds
fmull
fs
dec
cld
sbb
cld
add
ja
cld
xchg
add
jg
out
sbb
out
outsb
lock
subps
add
xor
mov
xor
xorb
dec
xor
jno
fidivrl
jmp
ds
cs
outsl
data16
js
mov
or
test
lcall
sub
fucom
cmpsl
cli
jg
fcoml
dec
mov
clc
pushl
mov
ret
pop
insb
sub
push
icebp
pop
pop
faddl
les
push
pushf
and
push
xor
adc
cwtl
orb
jl
sidtl
push
push
mov
mov
cli
ja
sbb
jne
outsb
stos
jns
filds
add
cmp
pop
addb
ja
dec
sub
push
sbb
mov
ret
jecxz
dec
push
adc
jg
mov
icebp
leave
pop
sbbl
dec
stos
sub
sub
dec
lock
addb
rolb
negl
pop
call
or
mov
test
push
ja
call
lds
clc
jl
es
mov
dec
adc
cwtl
aaa
cmp
in
sbbb
sub
lock
mov
call
xor
add
inc
xor
int
or
popl
xor
call
dec
mov
mov
daa
in
add
incb
pop
push
push
push
xor
pop
negb
inc
sti
repz
jbe
popa
loop
std
add
scas
clc
push
cmpsb
outsl
add
jno
das
icebp
mov
and
out
sbb
jmp
dec
jbe
jmp
jp
mov
aaa
rcrb
idivb
add
xor
jg
lds
repz
cmc
add
mov
sar
call
mov
rcr
aam
jne
ficoml
push
push
aaa
sbb
xchg
loopne
mov
roll
xor
ficoml
icebp
adc
sub
int3
in
sub
and
pop
rcll
adc
xor
movsl
jo
sub
jg
movsl
add
fs
out
xor
xchg
ljmp
xchg
rclb
lahf
pop
call
mov
or
inc
mov
lds
xchg
fnstsw
push
push
popf
inc
mov
out
outsl
inc
notb
mov
pushw
mov
stos
out
inc
or
mov
jl
jg
mov
dec
fstpl
cmc
out
lea
hlt
mov
sbb
rol
jg
call
pop
shll
std
inc
sbb
cmp
jmp
fisubs
jl
sbb
pop
jbe
mov
es
push
pop
in
out
lock
inc
sbb
push
push
mov
cmp
mov
mov
and
xor
sahf
mov
ja
cmpb
cmp
pushf
imul
aas
loop
push
movsl
hlt
adc
popl
sahf
jge
pop
shrb
scas
cmp
stc
aam
fwait
rcrb
xor
stc
sbb
fucomp
sbb
cmpsb
ja
xor
cmp
addr16
outsb
loop
and
and
ja
or
jp
sbb
addr16
jo
dec
gs
cli
mov
loop
jno
mov
repz
fstps
rcl
out
out
push
inc
fistps
aaa
jno
or
aas
jecxz
xchg
fwait
sarl
mov
mov
jnp
and
mov
mov
jne
adc
cltd
imul
inc
adc
scas
xor
add
mov
mov
cmp
call
hlt
jmp
xchg
out
lods
lahf
rolb
lcall
pop
rcl
and
mov
xor
xlat
sti
bsr
dec
xchg
aad
outsl
pusha
sbbb
ret
pop
cmp
cmp
sbb
movsb
ja
aas
mov
dec
ljmp
mov
xor
gs
jns
sarb
roll
dec
arpl
cmc
mov
loopne
or
jnp
adc
hlt
das
xor
jp
fsubs
scas
cld
sbb
inc
add
ds
or
sti
cmp
sbb
aaa
mov
push
inc
clc
ret
negl
mov
pop
sbb
ljmp
jmp
jmp
aaa
rorl
daa
mov
mov
jge
adc
repz
cmc
inc
ljmp
add
loop
cmpsb
outsb
jmp
aas
mov
rcr
jl
xchg
and
cmp
js
add
filds
lcall
lahf
ret
inc
stos
dec
push
sub
scas
adc
push
decl
xor
xor
gs
sbb
call
jl
out
stos
push
outsb
cld
pop
loop
mov
mov
sub
scas
jg
or
clc
aam
sbb
daa
mov
insl
cmp
mulb
lahf
ljmp
jae
mov
or
dec
mov
pop
sbb
repnz
std
mov
clc
add
jmp
push
stos
or
insb
ljmp
add
xor
mov
pop
add
fistpl
in
ret
mov
jo
stc
fsubl
add
mov
std
nop
jmp
xchg
sbb
nop
jg
mull
rcl
jne
daa
mov
aas
sti
mov
adc
mov
push
jb
testb
dec
mov
loop
iret
jle
test
idivb
or
pop
add
arpl
xchg
mov
mov
jns
or
call
rorb
sarl
jbe
pop
movsb
ds
mul
inc
mov
and
push
call
xlat
shlb
scas
lcall
jmp
in
ja
repnz
or
decl
paddd
dec
and
cmp
int
pop
inc
mov
decl
rolb
test
aas
push
sarb
mov
es
outsb
adc
inc
jb
xorl
scas
pop
mov
adc
lock
xchg
push
dec
dec
out
int3
jl
gs
mov
les
mov
in
leave
adc
popf
rcrb
mov
cs
lahf
sti
sub
cmp
insl
imul
jl
mov
fistps
addr16
dec
insb
in
mov
fbstp
inc
lcall
fs
mov
push
adc
std
mov
and
xchg
mov
xchg
push
jbe
int
xchg
inc
out
push
xchg
daa
lret
add
mov
mov
push
popa
sbb
std
nop
mov
sub
pop
or
jmp
mov
and
test
cwtl
loopne
mov
mov
lds
std
mov
inc
shll
add
pop
xchg
pop
roll
sub
dec
pop
mov
daa
sti
sub
cli
xor
jecxz
push
aas
test
jno
xor
clc
pop
mov
jne,pn
dec
lock
jg
jmp
frstor
adc
pop
lds
aaa
jo
mov
daa
dec
imul
divb
pop
insb
cli
xchg
inc
aas
adc
mov
mov
add
xor
out
ljmp
push
sti
push
push
stos
mov
jmp
push
rcrb
jg
testb
mov
push
mov
cmp
ljmp
mov
lea
inc
fisubs
push
pop
jb
das
aad
popf
or
clc
pop
lods
decl
adc
sarl
clc
lahf
dec
icebp
add
push
adc
pusha
imul
push
mov
sbb
sar
mov
insb
out
xchg
popa
fidivrl
sbb
bound
hlt
pop
mov
inc
arpl
pushf
dec
sub
fidivrs
and
ljmp
cmpsl
lret
mov
inc
movsb
inc
push
dec
lahf
lahf
mov
cli
xchg
rcrb
cmp
or
mov
or
pop
sbb
inc
jge
jmp
add
bound
sbb
xchg
aas
mov
popa
subl
dec
stos
ja
incl
jg
jle
outsl
ljmp
std
call
jp
iret
and
dec
ds
shlb
popa
je
aaa
mov
roll
mov
in
push
cmpsb
lods
adc
mov
scas
negl
mov
mov
ja
stos
add
pop
xchg
repz
fcomps
sbb
scas
push
loopne
faddl
shr
mov
lods
les
pushf
incb
mov
sub
shrl
pushf
in
push
pop
in
xor
xor
add
fiaddl
ror
push
mov
sbbb
mov
mov
sbb
aas
aad
pop
push
repz
into
ficomps
cmpsl
test
adc
addr16
jle
scas
jbe
movsb
test
jb
jnp
repnz
ret
xor
add
jl
push
dec
jns
int3
loopne
test
xchg
addr16
fists
fwait
cmp
addr16
std
call
add
shrb
in
adcl
mov
fistpll
or
pusha
cmp
test
add
pop
andb
mov
add
inc
xor
pop
sub
in
mov
jge
loopne
cltd
outsl
cmp
dec
inc
lods
jg
adc
add
dec
pop
sbb
movsb
sub
clc
xor
rolb
sahf
ret
popl
std
int3
pop
pop
xor
xchg
movsl
ret
cmc
sarl
sub
std
xchg
sahf
pop
pop
xchg
in
jns
xor
pusha
fcoms
test
adc
cmpsb
popf
mov
stos
movsb
jle
clc
imul
mov
rclb
jns
and
cli
fcmovnu
add
pusha
nop
add
adc
xchg
pinsrw
je
push
decl
dec
lods
test
imul
sti
fcomps
xor
cmpsb
cmc
add
or
jo
inc
mov
dec
rolb
movsl
sbb
or
xchg
jb
ret
popa
inc
stos
sti
andl
incb
or
imul
jbe
xchg
mov
testl
test
rcrb
jns
sub
fwait
cmpsl
pop
add
sbb
push
ds
sar
xor
xor
std
fucomip
xchg
mov
sahf
and
cmp
fucom
mov
stos
mov
pop
cld
push
and
cmpsl
pushf
and
outsb
iret
push
hlt
dec
cmc
iret
mov
sbb
imul
sub
mov
leave
xor
adc
incl
add
cmp
mov
je
scas
fstl
fcomip
subb
cmp
fdivrl
clc
push
insl
inc
inc
icebp
stos
ljmp
cmp
loop
and
clc
arpl
jne
out
ja
mov
iret
std
iret
and
lds
and
push
and
add
pop
mov
xor
sahf
pop
nop
sub
dec
cmp
pop
lock
les
outsl
aad
dec
ja
pushf
icebp
clc
std
mov
lea
sbb
dec
movb
incl
dec
fiaddl
sbb
cmp
dec
std
aas
mov
and
in
orl
aad
out
mov
sar
add
inc
and
scas
cli
mov
add
addr16
sub
loopne
mov
jg
lds
movsl
mov
xchg
mov
add
sub
adc
ja
pop
xchg
dec
and
lods
xchg
mov
imul
pop
jns
pop
movsl
es
dec
mov
popf
adc
incb
or
or
aaa
jecxz
fcomps
sbb
mov
sbb
aam
mov
daa
imul
fadd
fs
aaa
aam
lahf
fs
jb
push
mov
jle
loopne
push
shlb
sub
arpl
in
push
lcall
cmpsl
cld
mov
xchg
jmp
sub
cmp
inc
notb
pushf
pop
ret
aas
arpl
fists
mov
lahf
inc
cmp
and
sbb
push
or
fisubs
aam
je
or
fsubrs
push
and
inc
mov
xor
fsubrp
xchg
stc
jne
aas
and
sub
rolb
cltd
cwtl
call
or
sbb
adc
and
icebp
jg
sub
and
lock
mov
mov
mov
inc
push
xchg
mull
jmp
sti
cmpsb
push
repnz
mov
test
insb
hlt
xchg
mov
add
sub
imul
inc
dec
and
pop
subb
insb
divl
mov
mov
shll
or
lahf
add
and
das
adc
jo
jb
push
pushl
enter
out
std
xchg
jo
inc
sbb
scas
aas
loope
add
cmpsl
pop
and
jmp
pop
jg
push
out
push
dec
popf
lret
adc
fildl
push
outsl
cli
cmp
loopne
incl
loopne
mov
test
dec
xlat
rcll
push
inc
jnp
ds
and
or
in
ja
ljmp
push
icebp
fsubs
aaa
pop
out
call
jge
or
movsb
lds
cmc
imul
daa
adc
ja
xor
std
pop
inc
pushl
xor
mov
jecxz
push
cld
mov
mov
mov
and
inc
xchg
mov
or
and
popf
insl
clc
jg
push
jp
lods
push
jns
ja
inc
std
aad
mov
call
push
sbb
jae
lahf
cmp
shll
movsb
popa
ficoml
sub
add
sub
fildll
dec
inc
push
ljmp
enter
mov
mov
ss
cld
orl
adc
jb
outsl
pop
les
call
mov
pop
loop
adc
into
xchg
leave
push
ds
dec
inc
jl
clc
xchg
xchg
es
leave
cmc
aad
aas
adc
pop
int
push
mov
mov
out
popf
and
daa
push
ss
xor
adc
aas
clc
cltd
out
pop
loopne
xchg
or
ss
ss
or
mov
push
dec
fstps
mov
lods
aaa
mov
sub
ret
ds
fcompl
test
push
data16
add
insl
mov
and
or
lahf
es
push
dec
cli
lcall
adc
leave
dec
adc
cld
sub
add
outsl
rcrl
cli
arpl
lods
in
inc
sbb
aam
out
xchg
nop
mov
adc
jg
call
add
call
movsb
cmpsl
jg
ret
or
cs
int3
std
movl
stc
cmp
xchg
mov
cmp
call
call
mov
adc
push
lods
mov
in
cmp
or
dec
and
and
jbe
sbb
adc
jo
stos
cmp
pop
jl
lahf
lock
mov
pop
fwait
cs
in
ret
or
fistl
and
mov
fmuls
jg
xchg
mov
pop
aas
jno
fsubrl
out
and
add
ja
mov
hlt
scas
mov
adc
pusha
movsb
inc
jp
pop
hlt
pop
mov
inc
sbb
js
fdivrl
cli
xlat
pop
fcom
js
push
shlb
mov
jecxz
clc
xor
xchg
fs
imul
mov
adc
imul
cmp
insb
stos
pop
jmp
shrb
sub
push
lock
or
ja
ja
ret
arpl
cmc
pop
iret
and
icebp
sub
daa
repz
insl
xchg
mov
out
ja
lret
stos
xor
shlb
frstor
ja
fdivl
mov
or
ljmp
lret
stos
loope
std
mov
arpl
cmp
leave
mov
andl
mov
inc
add
out
mov
push
sbb
pop
testl
xchg
ja
ljmp
jge
mov
mov
push
pusha
or
add
addl
loope
insb
sbb
fdivs
scas
pusha
pushl
and
add
loop
cmp
in
and
or
mov
cmpsl
in
or
std
lds
cmp
popa
mov
add
mov
add
jge
mov
inc
lcall
mov
mov
cld
call
pop
inc
popa
or
dec
mov
test
insl
out
lods
fwait
push
inc
mov
pop
shlb
call
repz
mov
dec
cli
fimuls
pop
cmp
mov
inc
lods
mov
sti
dec
popa
rorl
xchg
lods
cmpsl
push
mov
test
xor
cmc
arpl
sub
les
jmp
fs
add
out
cmp
inc
popf
ljmp
jb
es
test
inc
cmp
ds
add
jecxz
lahf
std
pop
shr
mov
sbb
push
movsl
or
iret
or
divl
enter
out
jl
icebp
add
jle
push
jmp
mov
xchg
rcrl
or
lods
add
sahf
push
sti
sbb
cs
xor
andb
inc
mov
int3
nop
fmulp
xor
pop
scas
push
les
xchg
out
movsl
add
sti
lahf
inc
jmp
and
repz
shrl
sar
add
cmp
sahf
dec
sbb
scas
hlt
xor
shll
add
ds
scas
cmp
jg
pop
std
pop
push
adc
movsl
pop
fsubrp
fcoms
arpl
sti
ja
sar
shlb
scas
pop
jno
arpl
xchg
pop
decl
in
add
out
jno
jae
outsb
ljmp
lea
cmp
sbb
out
js
mov
loopne
or
mov
fldt
insl
pop
adc
mov
xchg
push
inc
pop
fwait
sbb
cmc
lock
test
test
xchg
sahf
adc
or
mov
test
push
subb
mov
js
pop
sti
cli
add
hlt
jecxz
decl
xor
ret
and
xor
xor
es
push
mov
cmc
dec
inc
and
inc
or
and
out
std
or
adc
out
push
or
pushf
fldl
loop
lods
lcall
and
mov
ss
nop
cmp
cmp
ret
jecxz
daa
adc
outsb
fbld
mov
rol
jbe
repnz
incb
ret
inc
test
mov
lock
add
add
lea
sbb
js
mov
out
xor
adc
jl
aas
sbb
sbb
add
test
add
push
inc
imul
cltd
ja
sbb
neg
inc
sub
sti
repz
mov
jbe
push
in
sbb
and
push
mov
or
and
out
mov
mov
push
and
dec
fistpll
cmp
cmp
test
xchg
out
popf
xor
mov
xchg
sub
push
out
outsl
mov
xchg
test
das
pop
fbld
add
pop
lock
mov
add
inc
aam
mov
inc
fadds
pop
add
add
ss
cmc
mov
xrelease
orb
sarl
sub
sub
adc
xchg
pop
dec
add
mov
insb
insb
add
sub
add
and
aam
or
sub
inc
cld
adc
hlt
jne
push
push
push
or
iret
insl
inc
inc
fdivrl
shlb
orb
notb
sub
ret
add
sbb
xchg
sbb
sub
push
add
adc
lock
xor
push
xor
sub
inc
je
pusha
cmp
sbb
lsl
cld
mov
daa
mov
add
and
and
jae
inc
mov
jnp
daa
adc
pop
xchg
mov
test
push
shll
xor
ret
mov
mov
adc
aas
jnp
pop
dec
add
mov
mov
test
mov
or
inc
push
add
xor
and
lret
cmp
push
push
add
mov
dec
push
cwtl
add
push
inc
test
into
push
divl
push
fsubrs
movzwl
jmp
aad
cmp
add
fmull
test
add
push
add
lcall
lods
insl
dec
es
mov
daa
scas
mov
xor
pop
mov
lahf
mov
arpl
out
punpckhbw
jge
or
fisubs
add
jg
int
in
adc
pop
push
cmpb
or
sub
add
lods
das
dec
jno
mov
rcrl
cwtl
xorb
mov
stos
sub
jae
pusha
mov
sub
mov
movups
adc
inc
add
xor
mov
sahf
ret
mov
add
jbe
push
mov
iret
jge
int
cmp
fisubl
and
jo
dec
and
xchg
popf
sub
lea
pusha
or
adc
xchg
mov
inc
bound
cmp
sub
and
lods
cltd
or
cld
das
jno
mov
les
daa
push
in
mov
pop
adc
out
jg
mov
sbb
loopne
sbb
subl
jnp
leave
imul
pushf
loop
mov
inc
lahf
mov
sbb
sbb
xchg
lret
push
inc
in
push
cmp
pop
mov
es
xchg
call
out
rcll
adc
rorb
add
adc
orl
lcall
inc
add
inc
int
cwtl
fwait
les
data16
or
mov
xchg
fcom
pop
jae
mov
out
sbb
cmp
jp
or
mov
or
fdivs
ret
iret
and
xor
cmp
jb
sub
out
adc
mov
shr
leave
or
mov
push
in
rcll
or
pop
xor
xor
xorb
inc
xor
mov
push
les
or
jnp
sti
in
add
loop
xchg
sub
or
xor
lret
ret
test
xchg
pop
call
lret
orb
adc
or
data16
scas
xor
jo
mov
pop
push
test
call
xorl
and
pop
sub
sub
add
sti
andl
adc
dec
and
test
mov
push
icebp
fwait
push
stc
xchg
scas
stos
shlb
mov
stos
mov
inc
movsl
and
mov
dec
add
daa
mov
mov
dec
mov
adc
test
add
loopne
push
pop
hlt
ret
loopne
lods
xor
inc
xor
popf
in
enter
jmp
push
ucomiss
inc
out
inc
or
mov
sub
mov
mov
frstpm(287
pop
stos
rcl
add
lcall
inc
call
cmp
push
inc
imul
inc
add
sbb
xor
sbb
jae
or
mov
sbb
cltd
pushf
rorl
out
daa
push
adc
inc
mov
xchg
lods
imul
sbb
inc
data16
sbb
inc
lahf
mov
sub
lods
mov
xor
rol
rcll
rcl
shrb
add
jge
leave
xor
lods
dec
bound
xor
dec
mov
sbb
inc
mov
rorb
lcall
xchg
dec
inc
stc
in
push
pop
enter
or
scas
pop
add
or
and
xlat
add
inc
jle
ret
lock
ror
adc
inc
add
ret
xchg
mov
jge
add
in
fsub
add
fwait
push
cmc
or
adc
dec
addr16
push
andb
cmc
push
push
mov
pop
mov
dec
call
jle
cld
push
push
sub
les
and
mov
or
leave
cmp
insl
in
push
or
push
mov
mov
fs
das
or
test
movl
call
les
adc
jge
arpl
pop
pop
adcb
inc
adc
sub
loopne
das
cmp
jae
jle
mov
pop
imul
loopne
mov
push
adc
add
fdivrl
and
pop
inc
sbb
andb
out
data16
addr16
dec
popf
lds
cs
pusha
sub
adc
ret
ret
adc
pusha
cmp
and
outsb
mov
lcall
in
jle
pop
adc
popf
and
pop
cs
push
xchg
in
test
xchg
movsl
scas
fs
push
je
push
jbe
mov
mov
mov
pushf
adc
mov
mov
lcall
imul
cmp
cmp
mov
mov
mov
jo
mov
nop
sbb
dec
add
push
push
add
xchg
xorps
repz
aaa
leave
push
cmpsl
lock
cmp
adc
shll
outsl
lock
jnp
mov
mov
out
je
cmp
mov
sbb
xor
sahf
int3
xor
adc
inc
test
insb
mov
inc
nop
vcmpgtpd
int
mov
jmp
xchg
add
pusha
ficompl
call
push
adc
cmp
out
xor
jne
sbb
rolb
and
test
popa
add
and
lea
lcall
mov
mov
nop
jp
sub
popf
test
cmp
inc
int
sbb
daa
and
or
jnp
sub
fistps
mov
jae
jb
andb
mov
or
lretw
pop
sbb
or
mov
jb
push
pop
mov
pop
rcrb
ret
xchg
push
inc
inc
add
enter
sar
aam
lret
shll
inc
sbb
rolb
sbb
mov
add
test
pusha
nop
mov
sarl
sub
pop
xchg
jo
fwait
mov
pushf
lcall
out
iret
adc
jle
mov
aaa
or
rorl
in
jne
cmpsl
or
jns
stos
mov
push
or
rcrl
xchg
xor
fs
adc
inc
ss
sub
and
lods
adcb
fwait
ret
push
push
jae
push
jo
mov
mov
cld
je
and
je
sbb
xor
les
cmp
mov
in
add
sub
sar
push
cltd
sbb
inc
repnz
ficomps
push
cmp
sub
add
mov
jae
popa
shlb
idivb
sbb
mov
and
jp
loopne
out
adc
es
push
shlb
jge
adc
and
jmp
int
push
outsl
push
rolb
call
xor
jge
std
ficoms
cmc
loop
ficomps
adc
and
jge
popf
ret
add
xorl
mov
inc
sarl
iret
inc
mov
jno
imul
shrb
inc
insb
cmpsl
push
inc
adc
sub
shrl
jmp
sahf
adc
loopne
jae
aad
int
pop
sbb
sbb
pop
mov
scas
adc
daa
pop
in
in
sbb
xor
push
xor
xor
mov
push
nop
negl
add
inc
xchg
adc
xchg
xor
psubusw
sbb
rolb
loopne
inc
popa
aaa
cwtl
mov
xorb
daa
iret
cmp
andl
add
and
mov
scas
sbb
and
aad
orl
sub
mov
add
in
jns
sub
add
repnz
out
imul
and
daa
es
pop
es
sbb
mov
pop
push
xor
sbb
insl
cs
cmpsb
sbb
push
xor
ret
dec
stos
push
cmpsb
dec
adc
jmp
lods
mov
add
aaa
mov
jp
shl
jb
jge
push
inc
sub
icebp
adc
adc
int
imul
inc
push
in
mov
mov
push
jle
mov
xchg
sub
push
lods
push
inc
int
or
cmp
cmp
mov
insb
fwait
nopl
pop
inc
sub
aam
dec
pop
xor
icebp
ret
add
inc
cmpsl
mov
fadds
lret
sbbb
jl
test
or
imul
mov
jae
xchg
adc
repnz
lds
clc
cmpsb
sub
dec
add
sub
mov
fwait
nop
adc
mov
sub
push
add
sub
and
movsb
inc
push
adc
andl
fnstcw
dec
and
dec
add
xchg
xchg
loopne
loopne
popa
mov
push
leave
pop
jl
push
and
xor
loop
inc
jno
popf
push
imulb
sbb
mov
mov
gs
aas
gs
jle
lods
add
mov
cmp
mov
leave
adc
inc
jo
in
aam
sbb
xor
adc
icebp
mov
pop
add
add
xchg
jmp
arpl
add
imul
loope
cli
inc
inc
icebp
push
mov
out
imul
cltd
jns
lds
pop
mov
inc
popa
mov
movl
and
mov
inc
add
xchg
mov
insb
jb
popa
cmpb
fld1
or
add
test
add
test
pusha
push
scas
test
lret
mov
inc
cmp
inc
lcall
loope
shll
push
cs
add
jmp
ss
daa
pop
ds
sbb
cwtl
and
roll
js
jb
mov
mov
mov
pushf
into
in
mov
sbb
jb
enter
ret
adc
subl
xor
les
inc
sub
adc
sub
mov
sbb
xchg
adc
pop
adc
and
fnop
fmull
push
and
add
xor
out
xchg
cmp
adc
add
mov
inc
lods
sbb
imul
scas
inc
inc
int
les
orb
pusha
or
sbb
aam
xor
hlt
je
int
pop
cmp
inc
xchg
out
cmpsl
pop
push
in
inc
push
push
cmpsb
or
call
cltd
sub
scas
add
mov
push
sbbb
push
adc
call
jbe
movsl
cmp
das
addr16
pop
push
xchg
scas
push
xorl
mov
adc
jno
xchg
out
fwait
pop
dec
or
add
pushf
and
add
push
hlt
stos
mov
add
subps
aas
mov
sti
jo
add
ret
addr16
cwtl
call
sbb
fistpll
divl
scas
mov
xor
rol
aad
sti
insl
push
pop
add
push
lcall
test
sub
push
cmpsb
dec
outsl
inc
jae
jb
inc
xor
xor
mov
jo
popa
lahf
jmp
jb
lods
or
mov
mov
cwtl
cmp
js
aam
rorl
inc
jae
pop
dec
sbb
dec
pop
sbb
cvtps2pd
cmp
cmp
cs
mov
or
mov
push
and
int
lcall
pop
jae
jo
jbe
test
add
pop
pop
xor
movsl
outsb
cmp
leave
loope
mov
dec
push
jo
jae
mov
dec
rcrl
pusha
add
and
jae
addl
push
outsl
das
jae
pushw
mov
addl
test
pusha
push
rcrb
push
or
cmp
cmpsl
push
xchg
roll
xchg
sarb
adc
in
xchg
icebp
jge
or
fisttps
pop
xchg
jmp
xchg
leave
das
jle
cmp
sub
test
lcall
pusha
stos
call
adc
inc
or
or
inc
adc
daa
xor
xchg
add
out
popa
test
mov
insb
ja
sbb
in
add
and
sbb
and
cmp
push
test
inc
scas
pusha
enter
loope
ficompl
adc
js
mov
and
or
push
and
push
xor
scas
inc
daa
xor
dec
int
imul
pop
fldl2e
nop
mov
sub
adc
or
pusha
dec
push
sub
imul
jnp
aam
popa
ret
out
pusha
popa
call
in
or
scas
shl
add
fisubl
cmpsl
adc
jae
xchg
arpl
cmp
add
sbb
call
in
sub
aad
cmc
stos
mov
shr
push
sbb
ljmp
pop
push
xchg
ss
or
scas
mov
or
pop
rclb
xor
rcrb
test
sub
daa
andl
aas
and
sbb
add
push
mov
jae
inc
mov
mov
adc
cmp
push
ds
dec
cltd
jb
sti
mov
add
xlat
push
mov
cmp
jbe
jecxz
push
or
out
clc
test
or
or
mov
push
repnz
nop
and
mov
ret
adc
cmp
add
or
push
sbb
jp
push
add
or
mov
xchg
icebp
fwait
sbb
sub
inc
shrb
push
stos
stos
ss
dec
push
or
mov
cmp
cltd
cmp
loope
addr16
add
enter
pop
aad
cmp
aam
cmp
push
push
lcall
mov
sub
xchg
sbb
les
adc
push
cmp
lret
jle
xor
shl
cmpsb
addr16
rcll
cmp
mov
adc
bound
cmp
and
inc
jnp
xor
call
push
loop
imul
and
inc
xchg
xor
ficoms
icebp
add
in
sbb
andb
adc
out
inc
rorl
daa
dec
add
and
popf
sbb
inc
in
inc
pusha
xor
lcall
loopne
int
cmpsl
hlt
lock
add
or
shll
scas
mov
xchg
or
mov
mov
cltd
outsl
xor
lods
mov
lahf
es
jmp
das
call
sub
add
xor
mov
fimull
xchg
push
add
jb
jb
sub
movsl
jbe
sub
addb
jne
add
jo
sbb
inc
cmp
push
add
aad
subl
mov
jb
cmpsl
fnstsw
push
xlat
push
push
push
fimull
cmp
inc
inc
xor
jo
int
bound
stos
jp
xchg
mov
xlat
ret
add
lahf
outsb
and
nop
and
outsl
rolb
adc
insb
pusha
mov
into
jmp
in
sbb
mov
scas
int
push
push
mov
jnp
add
jmp
movsb
push
push
ljmp
and
test
cmp
adc
push
test
mov
sub
mov
xchg
jno
cs
sbb
push
sub
push
in
ljmp
xchg
rorl
pop
in
pop
jp
inc
xchg
jb
pop
jo
les
mov
rolb
mov
xor
pop
movsl
add
nop
and
inc
sbb
or
sbb
shl
orl
sbb
scas
inc
int
push
and
ss
xchg
add
push
int
or
or
enter
adc
and
jbe
inc
mov
cmp
adc
cmpsb
mov
inc
lret
test
aaa
lods
pushf
mov
dec
mov
xlat
pop
mov
leave
adc
dec
insb
mov
push
xor
movsb
add
mov
xor
push
jbe
or
push
jae
pop
cs
and
jae
add
fisttpl
rolb
movsl
xchg
push
js
mov
sub
push
mov
inc
pop
cwtl
xor
adc
pop
inc
daa
mov
adc
ret
mov
loopne
mov
mov
push
add
push
sbb
inc
lret
mov
xor
mov
nop
mov
inc
mov
cmp
aad
sbb
addr16
jne
jo
lret
mov
push
sbb
add
in
jne
icebp
sarl
inc
cmpsl
dec
or
inc
xor
sub
addl
mov
subl
insl
sbb
popa
popf
dec
fdivp
inc
inc
das
inc
jmp
dec
push
jb
enter
and
cmp
jl
loopne
or
xor
mov
pop
sbb
jnp
push
xchg
test
in
cwtl
cmp
mov
call
jne
cmp
icebp
mov
or
push
inc
jp
jb
mov
xor
push
pop
mov
rorb
sbb
cmp
xor
xchg
add
sahf
addl
iret
push
addr16
clc
and
jo
ret
jno
loope
sub
cmpsb
pop
sbb
lock
mov
xchg
imul
orb
push
jl
cmp
fs
test
ds
add
push
stos
xchg
cmc
add
push
xor
push
push
test
and
jae
sub
pop
inc
ss
or
mov
scas
mov
nop
and
adc
push
sub
cwtl
out
rolb
and
adc
push
mov
jge
lret
add
movsb
popa
inc
mov
and
out
sub
and
sbb
popa
outsl
xor
ss
pop
js
roll
push
xchg
or
pand
sbb
jp
adc
mov
addb
push
cmp
jecxz
jae
call
gs
pop
mov
es
gs
enter
or
sbb
scas
or
stos
mov
data16
out
bound
or
push
add
aad
lcall
loopne
shrl
test
adc
movsb
daa
lea
rorl
xorb
sub
movsb
jo
adc
test
in
fnop
adc
jb
sub
outsb
sub
jecxz
push
scas
cmp
jae
pop
cmpl
cmp
cmpsl
sbb
into
push
jns
addr16
cmpsl
cmp
jecxz
jl
inc
mov
jns
push
push
push
adc
push
dec
sbb
stos
insb
arpl
sub
inc
adc
loopne
loopne
hlt
out
aad
cltd
jo
mov
mov
jae
xor
push
pop
int
sbb
mov
xchg
imul
dec
pusha
mov
xchg
jae
pushf
xor
xchg
push
mov
lcall
mov
in
mov
test
cwtl
push
inc
push
sub
pop
add
in
jo
ret
cmpl
inc
add
sub
enter
pop
shl
lret
lock
hlt
in
adc
or
loopne
fsubrl
stos
adc
in
sbb
lret
cs
jo
addr16
je
add
mov
add
pop
int
std
shll
popa
inc
xor
dec
cltd
cmp
jmp
call
xchg
addr16
sbb
roll
pop
add
subl
push
jae
mov
add
adc
sarl
sbb
icebp
push
add
addr16
mov
inc
sub
mov
ret
sbb
rcrl
and
push
jno
add
fisttpll
inc
add
dec
cmp
jne
push
dec
sub
add
jge
sbb
inc
inc
push
jp
call
fwait
cwtl
insb
xor
cwtl
adc
imul
xchg
dec
mov
daa
inc
lret
cld
add
xor
mov
adc
adcb
or
jnp
xchg
sbb
lea
jb
xor
ja
or
dec
or
es
or
ja
inc
jae
dec
stos
out
adc
push
notl
loope
push
stos
inc
xor
inc
aam
arpl
loop
jbe
adc
lahf
push
sub
loopne
mov
pushf
dec
sbb
subb
push
pushf
jnp
jbe
subl
mov
jge
add
sub
and
adc
daa
lahf
mov
push
xor
or
and
xchg
ret
out
subb
ljmp
arpl
pusha
scas
jns
inc
jbe
loope
int
pop
or
pop
icebp
adcl
cs
bound
or
xchg
int3
push
add
xor
or
xor
fnstcw
aam
xchg
ret
nop
movsl
repnz
inc
jae
mov
je
out
or
lock
fldcw
mov
mov
mov
arpl
mov
xchg
stos
add
fidivl
popf
dec
jo
xchg
dec
arpl
push
and
cmp
xchg
leave
xchg
jae
dec
or
pop
pop
adc
inc
sub
adc
dec
outsl
sub
inc
jmp
sub
mov
cwtl
xor
pop
push
cmp
jp
pop
push
pusha
xor
or
punpcklbw
and
dec
inc
cmp
movsl
push
mov
enter
xor
out
fsubl
subb
scas
adc
dec
mov
or
mov
add
daa
cmp
xchg
pop
cmp
sahf
add
add
xchg
stos
mov
mov
pop
adc
jae
mov
inc
call
int3
mov
xor
lods
rorb
add
std
add
push
push
scas
jp
xchg
int
jnp
mov
pop
pop
jle
sub
adc
xor
push
pop
daa
push
push
int
inc
dec
adc
jmp
add
loopne
jmp
adcl
add
adc
mov
jo
xor
rclb
add
jl
add
jg
fsubs
jae
push
xbegin
shll
add
add
orl
or
inc
xor
mov
mul
push
dec
inc
sbb
add
in
fiaddl
add
icebp
jle
adc
inc
shlb
cmpb
lock
movsb
jle
add
stos
pop
loopne
leave
js
in
or
mov
in
or
xchg
fcomps
sbb
push
adc
mov
ljmp
cltd
lret
adc
sbb
cld
movsl
pusha
xchg
hlt
push
cmp
daa
add
nop
ret
jg
mov
sbb
pop
lcall
inc
and
add
push
and
sub
dec
cmc
or
cmp
mov
push
lods
scas
push
mov
or
jae
loop
pop
inc
adc
jb
stos
xor
inc
cwtl
pop
mov
add
lret
adc
jo
push
cmp
dec
inc
mov
subb
outsb
add
xchg
mov
test
sbb
loopne
dec
xor
xor
cmp
push
movsl
sbb
push
in
mov
arpl
inc
xchg
jae
in
push
jnp
xor
and
adc
call
mov
sub
dec
cmp
sub
lret
mov
imul
xor
xchg
ret
das
and
lret
push
mov
adc
or
inc
mov
xchg
fldl
inc
rcll
rolb
push
xorb
sub
inc
imul
push
cmp
jb
mov
xorb
pop
jne
inc
sub
test
adc
pusha
push
adc
xchg
xor
sbb
sbb
pop
scas
sub
and
jno
mov
adc
fisubrs
adc
into
data16
leave
inc
add
out
adc
xchg
push
mov
and
mov
loopne
mov
xchg
cwtl
xchg
daa
add
cmp
lcall
sub
inc
lcall
hlt
jnp
dec
add
lret
inc
scas
insb
movsl
xlat
dec
aam
sbb
jne
xorl
loopne
adc
into
add
lds
or
inc
test
je
add
and
inc
xchg
dec
orb
test
xchg
jge
insb
jns
adcl
addr16
js
xor
pop
mov
dec
push
jns
or
lcall
cmp
int
push
pop
adc
add
xor
adc
or
enter
orb
lods
das
mov
popa
jo
sub
ss
push
inc
inc
xchg
rcll
ss
loope
xchg
cmp
push
pushf
test
jmp
adc
inc
xor
adc
pushf
add
into
and
inc
mov
push
mov
cwtl
dec
repnz
movsb
xlat
pop
cltd
or
xor
pop
in
push
adc
dec
sub
orb
pop
aad
push
push
or
pop
push
es
dec
adc
lret
and
out
cmp
mov
aas
xor
call
cmp
xor
push
ficomps
sub
cmp
or
cmp
cmp
in
cltd
mov
lcall
in
loope
fs
push
pop
sbb
xor
or
add
shlb
leave
add
adc
and
scas
mov
inc
cmp
dec
pcmpgtb
jge
jae
loopne
lret
cmpsb
shlb
push
xchg
daa
xchg
push
push
pop
mov
dec
push
jmp
xchg
jo
fadd
movsb
sub
sbb
je
dec
mov
pop
sbb
out
xchg
les
cltd
sbb
mov
es
push
xor
lcall
or
cmp
xor
jle
push
push
test
sbb
ss
mov
mov
cmp
cs
int
es
fadds
push
inc
inc
push
jle
push
test
pop
push
push
adc
jo
dec
test
in
mov
mov
or
xlat
cmc
addl
push
mov
or
xchg
imul
mov
mov
sbb
pushl
mov
pop
inc
xlat
pop
add
sub
inc
addl
jmp
stc
in
fcoms
cmp
movsl
js
and
aas
repnz
setge
sub
jne
subb
adc
mov
mov
jmp
imul
add
cmp
dec
mov
cmp
push
fs
inc
jnp
cmp
dec
aad
test
pop
shll
xor
push
sub
xor
sbb
pop
pop
mov
test
fidivrs
xchg
pop
int3
mov
andl
ret
ds
sbb
jb
movsb
or
loopne
inc
aas
icebp
dec
lea
inc
roll
mov
xchg
sub
je
mov
cwtl
push
jp
pop
push
scas
xor
stos
sub
xor
fmul
lock
cli
test
mov
jp
mov
xchg
sub
and
add
and
rolb
or
rorl
orl
add
push
addr16
jge
lods
jae
mov
and
mov
jge
es
popf
stos
rclb
jae
adc
xchg
addr16
push
stos
adc
inc
xor
loope
popa
in
lcall
pop
loope
in
cmpsl
stc
jo
clc
and
push
lea
push
xorl
xor
shl
inc
dec
into
lahf
add
out
fiadds
stos
mov
xor
and
ljmp
lds
add
jo
push
push
ficoms
scas
cmp
add
ret
jnp
mov
xchg
xor
inc
sbb
sub
scas
and
daa
dec
push
mov
mov
jnp
fstpt
push
xchg
adcb
xorl
cmp
ret
outsb
push
inc
push
jge
aad
movsb
or
mov
xchg
xchg
jae
ret
pop
push
scas
xlat
test
arpl
pop
adc
mov
mov
push
inc
loop
orl
mov
shll
xchg
and
inc
scas
iret
xor
repz
sbbl
xor
outsb
jg
ret
or
xor
pop
cmp
das
or
cmp
ljmp
jb
aaa
mov
ret
fwait
xorb
mov
sbb
pop
xor
fidivs
inc
mov
cmp
adc
push
iret
xor
shll
and
mov
jmp
into
gs
movsl
push
push
add
lods
leave
xor
fistps
cmp
cmpsl
push
xor
and
pushf
sub
xchg
push
push
or
ret
in
cli
push
mov
push
jae
mov
mov
adc
dec
aam
adc
xor
loop
sub
mov
bndstx
dec
aad
hlt
pop
cmpps
jnp
stos
iret
sub
fistl
pop
xorb
jo
out
addr16
cmp
subb
icebp
lea
push
popa
xchg
mov
mov
js
lcall
ret
sarb
and
jo
add
insb
and
mov
adc
jb
out
xor
pop
adc
inc
adc
dec
mov
add
push
cmp
pop
insb
popa
push
inc
rol
sbb
xchg
je
push
and
and
jge
lcall
adc
int3
insb
inc
sub
nop
mov
pusha
mov
lcall
jge
add
add
add
jmp
xor
ficoml
or
inc
shll
xor
das
loop
sbb
pop
stos
es
mov
jp
mov
xor
cmp
leave
das
aad
push
popf
push
or
push
lcall
shrl
es
roll
or
pop
dec
inc
imul
stos
subl
push
test
sti
mov
pop
in
sub
pop
jne
and
cmp
addr16
test
aaa
cmp
leave
rcrl
mov
popf
nop
or
mov
or
push
cltd
add
mov
ret
iret
push
xchg
or
add
push
mov
ds
enter
int
cmp
pusha
and
or
xchg
mov
sbb
std
outsl
jb,pn
dec
mov
inc
add
jmp
mov
inc
into
or
call
fsts
insb
stos
fisttps
push
pop
js
inc
add
pop
shrl
pusha
mov
lret
cmp
bound
sbb
xor
setb
push
addr16
fiaddl
adc
jae
and
mov
adc
cmp
dec
out
rolb
inc
fidivl
sbb
inc
repnz
cwtl
testb
mov
lcall
js
sarb
imul
arpl
adc
push
notl
mov
xchg
jns
push
sbb
or
xchg
cltd
dec
pop
adc
cs
gs
xor
inc
jl
adc
push
call
cmp
imull
lock
mov
pop
or
lds
fs
mov
push
dec
pusha
aaa
dec
adc
rolb
bound
rcr
or
cmp
add
clc
test
push
xor
cmc
cli
inc
scas
push
scas
mov
aam
push
jae
mov
pop
push
loopne
inc
pop
in
jno
faddl
shl
xchg
mov
call
xor
cmpsb
mov
add
adc
stos
lret
jp
or
jae
adc
adc
pop
ljmp
lock
push
mov
pop
xchg
fdiv
cs
in
popa
add
lock
stos
inc
mov
ret
and
cltd
pop
push
cmp
push
es
and
pushf
cmpsb
orb
sub
loope
scas
pop
int
adc
popf
inc
xchg
mov
arpl
stos
pop
sub
lea
mov
out
add
xor
aad
xchg
pop
mov
push
fwait
arpl
jg
addr16
and
xor
push
daa
mov
pop
jge
xlat
sbbb
scas
jmp
subb
dec
add
jge
pmulhuw
mov
push
addb
mov
insb
loopne
add
cwtl
mov
lcall
push
sbb
out
dec
hlt
ret
lcall
jge
lock
scas
or
push
push
movsb
xchg
jle
addl
xchg
sub
or
mov
cmp
jno
fwait
push
repz
sbb
or
mov
dec
inc
mov
cwtl
std
enter
stos
mov
outsl
leave
jg
loop
inc
add
pop
mov
sub
dec
mov
std
inc
mov
adc
dec
nop
jns
arpl
out
dec
mov
push
xor
add
outsl
insb
pop
shrb
test
sti
and
add
lods
incl
out
add
mov
push
pop
dec
and
adc
mov
jae
or
xor
push
mov
sub
inc
fdivrp
cs
or
rclb
mov
sti
out
rorl
push
lahf
or
ret
sub
movl
push
mov
mov
rorb
stc
adc
pop
movsl
inc
lock
mov
scas
xchg
fstpl
ret
jno
mov
nop
or
jg
add
dec
xor
push
lea
rcr
push
push
or
add
sbb
add
dec
add
add
jo
pop
mov
cmp
xor
adc
dec
and
test
and
mov
inc
packssdw
sbb
int
mov
add
or
xchg
imul
leave
xchg
das
or
xchg
mov
clc
cltd
push
fs
mov
add
jo
push
inc
cmpsb
pop
dec
pop
test
cmc
mov
cmpsb
jmp
adc
mov
jge
xlat
and
out
or
push
test
into
add
add
enter
imul
xchg
push
mov
loop
stos
cltd
sub
mov
or
out
mov
jmp
aad
jo
rcrb
mov
jge
dec
rolb
andl
mov
gs
pushf
add
sbbb
add
dec
push
js
dec
daa
lcall
pop
and
adc
out
add
sbb
jl
add
or
cmpsb
icebp
sub
or
jae
sub
or
inc
xchg
pusha
cmp
and
adc
cltd
inc
add
inc
push
loope
and
mov
loope
adc
fsubrs
imul
inc
aam
sbb
adc
int
add
and
sbb
and
dec
scas
out
sub
xchg
rolb
cmpsb
or
sbb
push
fidivrl
xchg
scas
adc
push
xor
mov
fwait
jecxz
imul
cltd
push
mov
xor
inc
mov
or
mov
pop
shl
dec
mov
lea
icebp
mov
andl
and
xlat
pop
add
xchg
jo
lahf
or
cmp
sub
sbb
pop
adc
push
sub
pop
cmp
adc
test
push
xchg
loopne
jne
and
push
mov
aas
sbb
inc
popf
popa
iret
add
sbb
lea
call
sbb
dec
add
mov
cltd
cwtl
rolb
ljmp
sbb
push
sti
andb
lret
in
add
push
push
inc
imul
cs
scas
mov
rclb
sahf
adc
xchg
sub
jno
sub
divl
add
clc
sbb
movsl
fs
inc
xchg
add
lret
push
inc
jae
test
es
orl
xchg
jb
inc
fiadds
inc
pop
pop
test
and
xchg
sbb
fs
jo
or
xlat
inc
or
cmp
insl
int
mov
daa
rcrb
push
sbb
leave
mov
daa
and
stos
or
loope
add
cmpsl
jae
bound
adc
xor
adc
sbb
jae
fsubrl
mov
cmp
adc
jo
sub
mov
imul
mov
loop
insb
and
xor
dec
pop
pop
adc
add
inc
push
xorl
mov
shrb
push
push
into
and
popa
stos
dec
mov
pop
scas
and
or
add
in
sbb
xchg
test
jp
xorl
jo
sub
add
adc
in
mov
xchg
leave
pop
mov
and
xor
adc
sbb
imul
mov
cmp
enter
pop
aam
outsl
inc
adc
lods
add
inc
or
add
scas
inc
mov
into
pusha
stos
pop
and
xchg
test
addr16
or
mov
or
ja
xor
ja
adc
ret
lcall
sub
shrb
into
mov
xor
add
dec
or
push
push
sub
jbe
mov
inc
cmp
and
lods
add
cmp
xor
in
inc
jge
test
add
push
mov
cmp
pop
out
add
add
xchg
sub
mov
jno
enter
push
jnp
out
xchg
add
ficompl
xchg
andl
xor
sbb
leave
add
aam
in
add
push
lds
xorb
sub
push
push
cmpl
xchg
lahf
clc
dec
sbb
test
add
sbb
add
not
loop
inc
sbb
adc
sub
inc
or
xor
pusha
mov
ljmp
dec
leave
add
or
fiaddl
lret
xor
xor
test
xor
add
jge
or
cli
callw
je
in
adc
adc
popf
test
adc
fsubl
sub
sbb
add
sub
mov
push
test
je
adc
punpckhbw
jg
test
xchg
adc
adc
sbb
es
sub
dec
dec
mov
lcall
adc
adc
mov
je
or
iret
aam
in
out
push
stos
jns
xor
sbb
leave
gs
inc
xchg
jae
rolb
jne
sub
mov
orb
dec
fwait
jno
jmp
pop
add
mov
sub
add
enter
add
push
jae
sub
cmpsl
loop
mov
stos
and
addr16
test
adc
in
dec
cltd
or
push
cmp
mov
mov
inc
scas
cmp
adc
es
push
or
into
clc
shlb
jae
fsubrs
xor
shlb
adc
or
loope
fstpt
or
int
adc
xchg
mov
pop
add
out
insl
mov
jge
xor
sbb
xchg
xor
xchg
add
push
test
push
push
push
add
add
adc
inc
cltd
add
mov
or
data16
and
roll
clc
sub
push
addr16
inc
daa
sbb
sbb
push
cltd
xor
add
push
and
gs
data16
sbb
mov
jae
test
cmpsl
hlt
or
mov
sbb
push
xchg
cmpsl
sbb
lcall
pusha
sub
lret
sub
inc
inc
scas
in
inc
in
inc
scas
cmp
loopne
nop
adc
mov
mov
roll
mov
sbb
mull
lahf
fs
pop
mov
pop
xchg
sub
jg
add
bound
fwait
sub
imul
orb
mov
or
mov
mov
ljmp
add
push
xor
dec
lods
lsl
adc
xchg
add
xlat
fstl
xchg
mov
cmp
subl
ljmp
cmpsb
push
or
cmp
adc
xor
stc
imul
ss
in
sub
mov
sar
pop
add
xchg
jnp
aaa
call
daa
jnp
mov
stos
popf
or
xchg
sahf
sub
push
xor
aam
ds
sbb
inc
add
inc
int
dec
fwait
and
xchg
mov
cmpsb
add
pop
push
mov
mov
xchg
cmp
or
sub
mov
test
xchg
add
mov
roll
dec
das
sahf
paddq
add
into
add
push
pop
push
cwtl
push
int
cmp
arpl
in
push
lea
lret
loopne
push
scas
add
test
push
clc
add
cmpsb
ljmp
push
jae
sbb
xor
cmp
mov
add
dec
rcrb
and
mov
mov
stos
mov
jbe
dec
mov
add
cmpb
jo
add
rcr
xor
adc
shll
out
andb
add
cmc
scas
cmp
ret
icebp
int
dec
int
adc
cmp
or
fstps
mov
enter
xchg
xchg
or
mov
adc
xor
push
inc
mov
adc
push
mov
in
out
loopne
mov
sub
dec
cmpb
loopne
adc
inc
mov
push
pusha
lret
dec
cmp
mov
loop
mov
sbb
add
test
and
in
add
test
xchg
sahf
fisttps
in
push
add
call
push
sub
icebp
add
ret
in
dec
lock
aam
add
shlb
shll
fisubs
push
sar
add
sub
cli
inc
int
mov
mov
loopne
out
push
or
xchg
pusha
xor
repz
enter
adcl
adc
lret
into
shll
dec
lret
sub
pusha
xor
and
dec
addr16
je
add
in
es
stos
add
jb
pop
xchg
pop
out
js
loope
nop
sti
shlb
in
xchg
addb
fwait
add
jo
mov
push
cmp
push
jge
addl
lret
in
dec
dec
imul
and
imul
add
add
inc
push
mov
sbb
mov
fsubl
ficompl
orb
movsb
adc
jge
addb
push
mov
jmp
dec
cwtl
and
sub
mov
cmp
xchg
push
push
orb
and
adc
sub
sbb
xor
adc
adc
add
sub
jae
push
jae
aam
scas
xor
mov
xchg
add
add
cli
popf
pop
in
push
les
or
xor
inc
stc
cmpsb
ret
pop
inc
push
dec
lret
loope
jecxz
in
scas
mov
jae
icebp
sub
or
or
jno
mov
or
data16
cmp
shll
sbb
inc
xchg
fstp
push
add
cmp
adc
push
into
jmp
xchg
and
cmp
into
hlt
inc
push
jae
nop
mov
push
jo
pop
xor
mov
leave
add
loop
popa
xchg
leave
xor
test
test
mov
add
ljmp
mov
in
adc
add
jo
sahf
rclb
xchg
movsb
scas
add
out
and
lret
lds
push
xor
xor
inc
inc
leave
sub
add
out
adc
stos
iret
cltd
addr16
adc
inc
sbbl
shl
das
std
jg
mov
pop
push
mov
and
mov
bnd
add
js
cmp
sub
add
mov
inc
dec
pop
push
sub
mov
stc
xchg
fcomp
dec
add
push
jns
mov
inc
add
push
add
dec
push
push
adc
add
push
inc
adc
sub
push
fwait
mov
add
cmc
inc
dec
adc
sbb
les
sub
mov
push
mov
or
pop
nop
add
mov
in
push
int3
mov
add
mov
dec
inc
jno
push
mov
or
jle
xchg
gs
lret
insl
outsb
pop
mov
shrb
push
cld
sahf
lahf
cmp
mov
loopne
adc
movsb
and
inc
aad
cmp
cmp
jg
xchg
pop
inc
lahf
andb
xchg
mov
sub
add
and
rorl
push
rcrl
pushf
ret
and
cmp
loopne
hlt
sub
jb
test
outsl
push
in
add
cmpsb
inc
sbb
jo
pop
jecxz
lock
shll
rolb
insl
ret
loopne
adc
popa
and
mov
out
cmp
mov
sbb
and
or
jae
pop
gs
push
and
cmpsb
push
inc
movsb
jae
dec
xchg
and
cmpsl
sub
into
inc
inc
cmp
pop
jnp
dec
add
adcl
hlt
pushf
movsl
push
xchg
lcall
les
cmp
mov
repnz
cmp
imul
sub
push
jo
imul
ljmp
lahf
push
inc
imul
xor
xor
stos
int
add
stos
fdivrs
adc
pop
add
cmp
movsb
and
xlat
mov
add
xor
pop
cmp
rcrl
xchg
mov
aam
add
jge
test
inc
mov
add
mov
stos
sbb
cmp
xor
scas
jg
enter
or
push
jae
jge
roll
mov
das
or
xchg
dec
cld
test
cltd
mov
in
cwtl
andb
std
loope
push
xor
mov
inc
add
jo,pt
or
test
push
adc
dec
sbb
pushf
rorb
addr16
scas
ja
add
add
andb
mov
or
sub
and
push
orb
inc
out
sub
xor
mov
jg
mov
dec
jo
cmp
dec
stc
dec
inc
jae
push
sub
ljmp
add
scas
sub
mov
mov
mov
or
push
repz
dec
jle
mov
pusha
add
imul
icebp
pop
jmp
sub
and
jge
cltd
inc
inc
cmp
cmpsb
mov
es
call
jmp
shl
fcmovbe
je
mov
loopne
sbb
mov
icebp
call
dec
faddl
push
xchg
js
dec
jp
push
andb
cld
push
cli
sub
jb
pop
pusha
int3
mov
pop
or
addb
test
sbb
loope
or
int
xor
pop
push
push
aad
jb
call
sbb
and
xchg
dec
dec
push
inc
xor
push
or
int
subb
sub
push
nop
fisubrs
pop
fs
push
shll
cmp
ret
push
sbb
jnp
adc
sub
mov
add
push
inc
clc
adc
push
and
scas
dec
jg
shlb
fnstenv
inc
int
cmp
loopne
cmpl
notb
xchg
scas
jge
dec
xor
push
and
cmpsb
push
popa
sub
xor
mov
sub
int
or
or
lds
dec
xlat
fdivl
int
mov
mov
push
add
dec
cwtl
xor
mov
orl
push
cmp
fadds
enter
sub
and
popa
jb
fcoms
in
cmp
popa
add
sub
pop
pop
pop
xchg
pop
pop
mov
mov
sub
xor
addb
cld
xor
orl
inc
or
or
pop
mov
dec
scas
push
adc
aad
test
inc
movsb
xor
shrl
mov
push
loope
push
out
das
fidivs
adc
inc
jae
add
inc
or
into
loopne
or
and
pop
sbb
jo
or
je
bound
push
int
icebp
cmp
or
mov
fldt
ret
adc
mov
sbb
inc
loope
aas
pop
push
decl
loope
cwtl
mov
and
mov
popf
or
mov
add
inc
push
or
jb
jnp
mov
les
mov
add
arpl
ret
cmp
or
pop
and
inc
jp
push
sbb
inc
fs
jns
mov
adc
int
dec
inc
imul
push
push
mov
fadds
inc
lcall
or
cmpb
mov
push
push
pop
mov
test
push
cld
push
aas
sbbb
dec
insb
imul
mov
jo
push
push
test
fsubrl
fwait
cli
lds
mov
ret
add
enter
jne
lcall
in
daa
cli
xor
inc
mov
sub
inc
xor
or
lahf
add
cltd
mov
gs
sbb
loop
dec
pop
divb
insl
mov
inc
nop
and
mov
mov
pusha
loopne
rorb
ret
dec
stos
or
add
jo
mov
daa
lea
sub
enter
and
aam
lds
cwtl
out
mov
pushf
fstpt
ficoml
mov
subl
xor
into
xchg
sub
mov
cmp
mov
sbb
test
das
fisubl
jb
sbb
jge
out
lcall
xor
mov
movsl
inc
je
mov
inc
in
jbe
addr16
xchg
je
adc
sbb
std
mov
clc
push
pop
or
jo
jg
xor
sti
lcall
pop
pop
or
lcall
inc
jae
orl
mov
jo
orb
mov
lahf
insb
pop
jb
and
mov
add
mov
inc
fiaddl
data16
jne
inc
scas
andb
jp
movsb
int
xor
sub
pop
sub
xchg
mov
les
es
fstps
popf
jnp
rorb
jae
add
cmp
mov
add
subb
sbb
mov
add
and
adc
sbb
leave
add
dec
sbb
loopne
sub
mov
aam
mov
int
hlt
sti
cmp
test
adc
shll
cs
pop
aam
inc
adc
inc
sbb
xchg
rclb
in
lcall
ljmp
add
leave
imul
pusha
add
fdivrs
or
add
shr
sbb
sbb
test
scas
lods
aam
mov
add
adc
mov
in
cmpb
rcrl
rclb
or
sarb
outsl
mov
lahf
sbb
push
mov
dec
test
addl
ss
add
jle
iret
mov
cmp
sub
mov
cmp
add
or
sbb
ret
pop
jo
mov
aas
ret
gs
outsb
xchg
jae
or
add
push
or
mov
push
mov
sbb
scas
sub
mov
xor
rcll
sbb
sbb
jae
sub
mov
inc
xor
push
mov
adc
pop
inc
and
daa
adc
sbb
cmp
das
test
xor
and
call
es
dec
je
push
pushf
add
pop
mov
mov
push
add
or
out
and
rorb
loope
pusha
call
adc
test
pop
sub
and
or
mov
mov
hlt
add
test
sub
pushf
imul
pop
loopne
xchg
push
pop
xor
int
or
add
pop
ss
sub
xchg
mov
aam
adc
adc
push
xchg
repnz
sarl
sarl
xlat
or
and
jo
adc
sar
adc
add
dec
mov
inc
xchg
add
scas
add
add
ret
shlb
cmp
pushf
pop
mov
subl
leave
push
xor
and
mov
add
mov
xchg
or
test
imul
jnp
inc
xor
aaa
mov
std
xlat
jp
out
adc
jne
jg
shlb
mov
shl
ret
lods
xchg
mov
ret
push
rcrb
sub
xlat
idivl
data16
add
adc
in
push
xchg
mov
mov
lcall
mov
push
push
mov
inc
out
add
mov
shrb
dec
outsb
sbb
cmp
daa
xchg
pop
adc
adc
sbb
mov
jnp
popl
or
pop
scas
adc
add
push
adc
ljmp
inc
mov
sbb
ret
push
les
inc
andl
jae
imul
push
cwtl
inc
ret
inc
fisubrs
into
hlt
and
iret
addr16
sub
scas
mov
out
js
xor
add
mov
push
inc
lahf
xor
out
add
stos
shrb
add
adc
and
adc
scas
mov
adc
xlat
inc
mov
or
in
popa
adc
test
inc
aad
scas
test
leave
push
jnp
ret
xchg
lea
adcl
or
add
in
hlt
add
mov
jmp
jecxz
push
repz
sbb
add
jge
adc
add
and
pop
ret
xchg
push
adc
clc
adc
adcl
aas
cltd
or
mov
scas
inc
les
or
mov
mov
adc
dec
repnz
jmp
leave
loopne
mov
push
test
test
inc
adc
xor
fst
sub
pop
jb
repnz
and
cmp
scas
jo
pop
prefetch
rclb
push
scas
cld
orb
int
imul
and
add
loop
adc
aad
push
mov
pop
xor
inc
cltd
xor
jnp
mov
shlb
stos
loopne
adcl
les
shl
shll
inc
fsubs
mov
call
xchg
jecxz
mov
cwtl
xor
lock
and
addr16
call
mov
inc
add
insl
add
inc
test
jle
or
cs
add
or
push
pop
dec
fbstp
incl
call
sub
or
sbb
mov
add
int3
in
sub
es
stc
mov
nop
shll
loopne
sbb
xor
js
loope
sub
popa
or
stos
adc
push
sub
imul
and
cmp
orl
add
cmp
jge
lret
adc
inc
add
push
dec
call
sbb
jp
adc
adcl
adc
leave
in
xor
push
add
mov
jb,pt
or
inc
sub
add
sub
test
lret
and
cmc
enter
and
stos
fcoml
cltd
pop
xor
mov
pushf
and
mov
mov
or
jno
push
mov
sbb
xor
xchg
add
lret
sbb
aam
jle
inc
adc
mov
dec
shlb
add
lcall
mov
cmp
mov
arpl
inc
xchg
pop
sbb
cwtl
and
add
or
pop
aaa
pop
add
push
mov
xor
cmp
lret
xchg
test
stos
outsl
ret
jo
pusha
push
jb
or
inc
fnstcw
and
sub
xor
sbb
cs
dec
in
inc
jae
sub
gs
sbb
rdmsr
cmp
cltd
mov
add
stos
inc
das
mov
cmp
div
add
push
dec
mov
adc
add
cmp
cmp
stc
push
pop
mov
sub
mov
pop
test
in
and
fildl
lret
and
stc
dec
in
loope
and
cwtl
orb
adc
pop
xor
push
lret
cs
sti
test
push
je
jae
gs
popa
mov
and
subl
bound
cltd
mov
incl
mov
add
cmp
cmpsl
bnd
outsl
add
enter
test
xchg
imul
pop
xchg
aad
dec
std
mov
sbbl
inc
test
lcall
or
cld
sub
add
push
dec
cs
xchg
adc
push
mov
andl
cmc
add
sbb
ror
aaa
xchg
sbb
xchg
loopne
mov
sbb
or
out
jo
push
in
arpl
push
push
pop
xchg
int3
test
mov
frstor
loope
push
jecxz
popl
bound
push
sub
mov
aam
fisttpll
adc
xor
cmp
push
pop
insb
jae
lret
addr16
stos
data16
daa
rol
add
mov
add
popf
sub
loopne
add
loopne
es
cmp
test
int3
fwait
push
nop
sbb
sarb
pop
cmp
paddq
and
xor
mov
int3
ss
fisubl
push
cmp
pop
cmp
js
push
adc
sbb
not
str
fdivrl
mov
xor
xlat
and
jae
sub
jo
and
cmp
loop
addr16
mov
ror
jle
cmp
jae
orl
pop
mov
pop
push
adc
cmp
or
ret
xchg
fnstsw
mov
cmp
ret
jo
jnp
jb
cmpsb
lretw
icebp
clc
nop
cmp
pop
popa
fisubrs
andl
dec
add
inc
xor
cmp
push
push
xchg
mov
sub
scas
sbbb
fstl
daa
fnstenv
js
add
lret
cs
inc
and
sub
lds
xchg
and
add
xor
dec
aad
fcmovnbe
ds
sbb
fisubrl
and
sbb
test
addb
popa
jo
xchg
xor
mov
dec
xchg
add
jae
inc
ss
pop
add
testb
dec
rolb
lret
sbb
jle
sub
mov
push
jnp
dec
lret
mov
aad
dec
cs
or
test
andb
jne
pop
mov
dec
sub
sbb
pop
cmc
shll
mov
pop
loopne
push
out
scas
movsl
nop
and
push
cltd
or
outsb
push
add
mov
add
cmp
or
into
test
test
dec
jae
lock
jae
mov
xchg
add
xchg
or
lret
sub
inc
sbb
mov
jb
out
mov
rolb
stos
cs
mov
popf
test
dec
sub
call
push
xchg
je
dec
jp
mov
sub
xorl
pop
lock
js
mov
mov
shll
sub
gs
add
test
mov
jb
dec
sbb
aam
jnp
in
retw
scas
adc
jb
scas
lret
jae
insb
xor
pop
mov
xchg
sub
adc
pushf
fimull
aam
into
icebp
mov
xchg
or
je
push
enter
push
mov
push
cwtl
fimull
clc
pop
cs
movsb
cmpb
sub
xor
xor
pop
rclb
popf
add
xchg
dec
xchg
push
cltd
and
fs
out
cmc
push
imul
popa
js
js
mov
pop
add
dec
clc
pusha
test
ret
pushf
add
jp
push
inc
aad
or
pop
shll
es
mov
movsl
jl
ret
mov
scas
call
add
loopne
adc
add
push
cli
daa
ljmp
push
adc
xor
xchg
stos
int3
loop
aad
fsubl
mov
adc
inc
or
adc
mov
sub
mov
inc
mov
orb
cmp
or
packuswb
arpl
cltd
mov
lods
sub
cltd
shll
repnz
push
adc
jne
jmp
adc
mov
xlat
insb
add
inc
fbstp
mov
cmpsl
dec
pop
pop
outsl
sub
es
and
popa
mov
mov
push
ret
push
adc
adc
cmc
jno
push
icebp
lret
ficoms
test
pop
mov
cmp
ret
pop
es
jae
andb
jae
fisubl
sub
pop
add
xor
xchg
adc
aam
and
inc
push
add
mov
jge
in
add
mov
call
test
xchg
and
push
mov
das
and
jbe
in
mov
push
nop
xorl
xor
or
in
inc
xor
jne
movl
fbstp
movsl
jo
xorb
push
jo
rol
xor
mov
or
bswap
subl
bound
xchg
jmp
cmp
stos
test
popf
sbb
mov
lds
imul
shl
in
adc
ret
lcall
push
xor
xchg
or
push
sub
daa
es
or
push
enter
sbb
adc
jp
jae
sub
pop
mov
jae
lcall
pop
iret
in
mov
insb
lahf
push
xchg
nop
xor
dec
orl
pop
into
test
cld
jmp
add
inc
ds
sbb
sbb
dec
mov
flds
sbb
mov
push
xor
icebp
mov
andl
in
cmp
push
xor
les
push
jae
je
les
lcall
push
add
xchg
jmp
mov
int
ret
mov
add
mov
gs
mov
push
insl
pop
pop
adc
adc
add
sti
add
jo
sbb
ds
popa
jo
add
add
inc
xchg
jmp
mov
lcall
popl
sub
daa
jo
adc
imul
call
mov
rorb
adcb
pop
test
prefetch
cmp
sbb
xlat
bound
notl
out
int3
mov
add
or
mov
es
xor
push
movb
scas
sbb
rcll
cmc
sbb
mov
jp
test
orb
arpl
movsl
add
mov
adcb
mov
pop
cmp
mov
push
in
loopne
sbb
or
or
inc
adc
jo
xor
jl
sar
push
xchg
jmp
push
and
mov
xchg
mov
scas
pop
pop
clc
ret
pop
lahf
inc
xchg
xor
in
imul
sub
add
mov
sbb
or
loop
cmp
xor
sbbb
push
int3
xchg
mov
mov
push
popa
jb
inc
in
imul
scas
pop
loop
jae
or
cwtl
imul
add
daa
sub
jmp
jp
test
jae
mov
push
inc
shlb
mov
cmp
cli
mov
movsb
dec
imul
js
and
jl
jo
sub
mov
push
mov
mov
addr16
xor
es
rorl
inc
push
cmp
push
add
out
mov
dec
aaa
es
shrb
jp
xchg
jge
add
popf
mov
xchg
adc
into
jge
into
fwait
icebp
outsl
dec
push
or
nopl
jge
orb
xchg
data16
or
sub
cmpb
repnz
and
or
scas
pop
cwtl
pop
es
xor
push
sub
sbb
mov
xor
push
rolb
adc
push
push
mov
popa
cmp
cmp
push
jb
xlat
pop
xor
mov
mov
mov
aad
push
aas
cmp
loope
leave
outsl
xor
mov
inc
xor
cmp
in
jb
sbbb
fnstcw
scas
shr
jae
mov
dec
ljmp
dec
fwait
dec
pushf
jecxz
adc
test
ja
movsl
jb
inc
pop
adcb
mov
lret
add
int
pop
cltd
ret
lahf
addb
les
into
adc
jb
and
mov
ss
mov
icebp
fists
stos
or
pusha
jbe
lret
xchg
add
and
test
test
cmc
cmp
in
cmp
or
cmp
xchg
push
pop
cmpsl
push
sbb
push
jmp
fisubl
inc
gs
inc
pushf
les
dec
rcll
mov
jecxz
pop
push
fisttps
inc
call
xor
push
lret
inc
loopne
pop
cmp
mov
imul
push
cltd
mov
arpl
push
mov
and
mov
sub
insl
into
addb
push
rolb
jae
and
adc
pop
mov
orb
push
jb
push
es
daa
jns
dec
push
jo
mov
ret
or
roll
in
arpl
jb
jo
mov
int
xor
and
sub
iret
je
xchg
or
cmpsb
pop
add
inc
sub
jae
aaa
push
out
imul
cmpsl
inc
pop
in
xor
push
cmpsl
addb
cltd
popa
stos
rcrl
es
xchg
rclb
pop
mov
cmp
test
cltd
jb
add
dec
mov
mov
addb
sbb
jb
clc
rorb
push
and
subl
stc
std
sarl
jg
jne
push
pop
inc
xchg
push
adc
lods
sbb
sub
iret
data16
jb
pop
push
mov
mov
inc
jae
rcll
leave
lock
shrb
push
stos
sti
sub
adc
lcall
insb
or
sub
outsl
fisubrl
cmp
add
adc
or
push
test
jle
inc
add
jb
cmp
pop
mov
adc
clc
and
dec
sahf
add
adcb
or
xor
mov
push
mov
mov
cmp
lcall
adc
cmp
arpl
gs
pop
ljmp
jb
dec
fisubs
or
mov
dec
jb
push
pop
push
sub
imul
or
push
push
cmp
rcrl
add
cmp
hlt
push
dec
push
and
xchg
ret
pop
js
insl
xchg
mov
xor
call
add
nop
shll
jnp
testb
and
or
jo
pop
push
aas
addr16
or
xorb
ret
xor
test
rcrb
andl
mov
mov
test
xchg
cld
bound
cwtl
in
push
icebp
mov
adc
pop
repnz
out
roll
test
lretw
nop
imul
shlb
mov
jo
adc
sub
inc
cwtl
cmp
add
xor
pop
pusha
xor
dec
xlat
jl
mov
push
adc
or
lods
inc
in
add
dec
test
inc
imul
push
mov
sbb
sbb
push
adc
cltd
and
sbb
sti
and
lret
jmp
or
xchg
adc
xor
jne
xchg
adc
lret
das
add
data16
and
punpckhwd
notl
femms
ret
pop
fs
push
aas
add
dec
adc
scas
arpl
cwtl
cmpl
iret
lods
jl
push
add
jge
jo
sbb
addr16
ss
ret
in
cmp
push
nop
rcl
repz
xchg
icebp
or
or
daa
fcmovnbe
or
push
decl
add
sub
sbb
adc
pop
in
lret
lahf
in
es
lcall
stos
inc
aaa
mov
ror
inc
add
pop
daa
xchg
or
jne
lahf
inc
into
adc
mov
test
mov
push
sub
lcall
repz
add
inc
cmp
push
mov
out
loop
loop
loopne
mov
pop
movsb
test
aaa
mov
adc
mov
mov
aas
mov
sub
ljmp
pop
or
xorb
cmp
rorl
or
int
xchg
sbb
rclb
push
subb
cmp
mov
rcl
lods
push
es
andl
test
mov
xchg
or
ffreep
mov
pop
mov
inc
cltd
enter
pusha
inc
cmp
roll
inc
xchg
aam
and
and
mov
aas
jnp
add
dec
jns
addr16
push
mov
popf
sub
gs
in
cmpsl
mov
aam
rcrb
ficomps
dec
scas
inc
jnp
es
sub
add
imul
pop
mov
mov
inc
mov
test
dec
call
cmp
mov
add
fs
inc
pushf
mov
out
inc
push
sub
xor
ret
cmp
psubw
adc
mov
or
or
pop
and
addb
out
popf
dec
lret
push
add
dec
mov
dec
enter
es
arpl
cs
or
shll
pop
inc
push
popa
adc
xchg
sub
hlt
sub
add
fs
xor
jp
daa
cmc
or
sub
and
push
inc
loopne
adc
add
sbb
sub
push
ret
cwtl
adcl
or
pop
and
nop
add
push
movsb
xor
xchg
or
in
pusha
add
in
cltd
inc
xchg
push
sub
push
lods
loopne
inc
adc
pusha
xor
adc
in
adc
cmpsb
test
sub
loope
add
and
or
pushf
bnd
cltd
cli
sub
ljmp
jecxz
add
xchg
push
xor
sub
jecxz
or
orl
scas
adc
roll
cmp
or
inc
lods
push
add
movl
mov
pop
sbb
and
sub
xor
lret
fs
fadd
jae
jae
ret
movl
push
test
test
dec
loopne
imulb
jb
sub
mov
in
push
adc
push
int
test
push
pop
int3
and
pop
lahf
cmp
ret
sbb
loopne
sbbl
inc
adc
add
fnstcw
in
dec
gs
xchg
inc
in
adc
fmulp
inc
int
mov
sbb
out
add
inc
addb
and
sub
mov
push
icebp
int
or
lods
cmp
inc
mov
mov
ret
aas
ret
xchg
test
js
out
mov
or
push
add
inc
jae
enter
adc
add
dec
insl
or
push
cltd
sbbb
push
xor
inc
fwait
pop
push
stos
enter
ljmp
jg
dec
push
push
stos
shrl
pop
pop
bswap
jo
mov
mov
test
dec
scas
pop
push
or
jb
vpavgb
popa
dec
fsubl
sbb
lock
mov
cmc
xor
je
in
scas
xchg
sub
je
insl
sbb
pop
jp
xlat
dec
push
xchg
mov
stc
shl
mov
cmp
data16
add
pop
xchg
and
and
mov
scas
mov
mov
movl
or
cmp
inc
pop
or
jb
test
das
xchg
pop
andl
mov
out
enter
xor
int
xor
aas
adc
out
aad
shl
or
push
push
not
outsl
xchg
push
ljmp
out
cltd
pop
and
add
jp
or
inc
jg
push
push
xchg
lcall
push
test
mov
add
ret
out
cs
scas
pop
adc
out
cmpsb
add
sub
pushl
stos
dec
xchg
add
ljmp
push
ror
xchg
inc
arpl
jbe
or
sbb
rolb
cmc
pop
cmp
sbb
inc
subb
pop
rcrb
loopne
out
lods
rcr
jae
xchg
or
scas
or
in
cmp
enter
jecxz
flds
inc
je
add
icebp
mov
xor
jg
add
mov
int
or
aam
adc
enter
pop
xchg
cmc
inc
popa
jo
cmpsb
pop
adc
mov
shr
inc
push
push
movl
stos
dec
push
outsl
sbb
or
cmp
pop
sbb
shlb
aam
xor
or
scas
subl
inc
pop
xor
lcall
cmpsb
stos
or
mov
enter
and
mov
das
inc
sub
jo
push
daa
mov
mov
xor
cmp
pushf
enter
push
aam
shlb
or
fiaddl
imul
xor
test
sbb
inc
mov
xor
or
ljmp
push
push
pusha
xor
cmp
mov
inc
sbb
inc
cld
pop
xor
lret
adcb
roll
sub
inc
pop
xor
pop
aas
pop
adcl
in
mov
or
adc
shll
lcall
jo
xor
inc
push
loop
or
jbe
push
adc
push
add
addr16
mov
push
sub
or
lods
add
push
mov
jb
in
es
push
jne
test
scas
imul
cltd
push
iret
push
add
push
lret
imul
repnz
test
inc
push
out
xchg
or
push
loopne
pop
ret
inc
cmp
rcrl
or
cmp
and
pop
sbb
mov
xchg
or
mov
jbe
mov
pop
adc
push
adc
jns
push
or
jge
inc
outsl
xor
in
or
inc
mov
data16
fsubl
inc
lock
push
add
xor
fcomps
add
addr16
cmp
js
jbe
mov
imul
rcrl
push
hlt
lock
mov
sbb
mov
xor
test
adc
or
int3
xchg
addr16
rclb
jns
adc
xor
enter
movl
mov
int
lret
push
push
push
incb
inc
das
pop
cmpsl
in
je
stos
jo
loop
cmp
push
mov
jb
xor
inc
add
iret
xchg
mov
xchg
pop
je
mov
dec
cmpsb
or
jp
push
add
xor
lock
xor
shrl
lcall
and
cmp
test
pop
sub
cmp
ffree
jp
nop
add
inc
sub
andl
sbb
scas
mov
data16
bound
adc
aam
push
ror
or
int
pop
outsb
lahf
out
jg
stos
mov
fiaddl
and
sub
xor
cltd
clc
xchg
scas
or
shrl
and
inc
push
stos
or
sbb
lret
jmp
add
dec
sub
imul
inc
leave
mov
mov
xchg
loope
push
int3
dec
into
add
adc
mov
test
inc
inc
cmp
or
inc
add
or
mov
xor
pop
cwtl
jo
inc
cld
addr16
pop
into
push
add
mov
push
push
push
shl
cld
rcll
pushf
mov
jecxz
xor
jp
or
xor
loopne
in
inc
push
dec
cs
cmp
fiaddl
dec
adc
fsubs
orl
ja
roll
jo
add
push
lret
cmp
xor
or
sub
gs
icebp
push
dec
xchg
lret
jne
mov
cs
mov
pop
scas
sub
out
pop
cs
lcall
and
push
mov
sbb
adc
pop
cmc
jb
orb
out
or
xchg
mov
shrb
sahf
and
jle
and
inc
insl
xchg
push
mov
jg
popw
dec
and
lret
nop
call
scas
je
ljmp
adc
jno
ljmp
mov
cmp
dec
push
xchg
pushf
sub
or
sarl
cmc
lret
xlat
ds
sub
sbb
push
add
pop
andb
jo
cs
hlt
xchg
or
in
dec
cli
cmovne
sub
js
add
enter
jp
add
pop
shlb
sbb
ljmp
sbb
and
mov
je
xor
add
inc
mov
inc
and
inc
loopne
loopne
mov
test
xor
push
pop
jae
sub
ret
loope
mov
xchg
mov
mov
cltd
mov
lods
add
imul
inc
into
aaa
xor
xor
dec
adc
adc
movsl
imull
js
jb
pop
inc
pop
xor
jb
les
adc
or
js
inc
or
adc
cs
push
pop
push
add
aad
dec
xchg
test
aaa
push
sbb
mov
mov
clc
imul
jo
pop
subps
inc
ljmp
sub
mov
aaa
xor
sahf
sub
inc
daa
mov
xor
add
sti
cmp
das
test
jo
sub
cmp
inc
mov
cmc
fistps
mov
inc
dec
push
dec
xchg
sbb
shrb
push
clc
or
stos
in
loopne
sub
roll
negl
scas
mov
dec
outsb
lret
jbe
stos
cltd
mov
lahf
test
xor
inc
pop
mov
je
loopne
lock
push
add
push
add
adc
xchg
sbb
ret
or
or
xlat
imul
js
int3
or
or
mov
nop
das
fcmovb
rorb
dec
cmp
cmc
cmpsb
and
fs
cmp
int
xor
stos
inc
sub
adc
aad
nop
mov
xchg
add
lcall
inc
mov
inc
add
pop
rol
fldl
fimuls
enter
mov
push
jbe
in
shll
jb
ja
xor
enter
loope
test
dec
add
sbb
adcl
repnz
loopne
xor
or
or
daa
cli
and
aad
mov
sbb
mulb
jae
dec
add
adc
pushf
fsubrl
cmpsl
lcall
xlat
cmp
inc
inc
push
dec
lock
xlat
xor
scas
mov
addr16
mov
imul
dec
mov
push
inc
test
cmp
loopne
jg
xor
dec
loop
scas
rcl
fcoml
push
lods
inc
cwtl
or
int3
out
mov
mov
mov
and
cmp
arpl
loope
inc
mov
adc
push
popa
xor
adc
dec
pusha
xor
test
or
push
sub
jae
xor
sub
mov
pop
aad
out
jne
jb
stc
jnp
adc
push
sbb
inc
mov
gs
adc
inc
xchg
cmp
shrb
push
mov
add
inc
in
push
call
dec
das
add
xor
push
inc
outsl
push
inc
cs
lret
pop
inc
fwait
push
add
addl
into
lret
sbb
and
add
in
lcall
leave
adc
or
mov
jo
sub
insl
addr16
enter
jae
out
push
cmp
xchg
sub
jae
addr16
dec
fadds
xor
das
push
jae
adc
mov
lods
push
scas
imul
cmpsb
enter
or
xor
dec
push
xor
cltd
jp
pushf
fs
lret
pop
add
bswap
mov
in
in
dec
mov
mov
out
scas
push
mov
lret
rolb
pop
repnz
into
push
rcl
loop
inc
jmp
xchg
adc
push
push
adc
nop
sub
cmc
out
sub
inc
pop
fwait
and
and
adc
push
mov
xor
fwait
dec
cmp
mov
invd
test
daa
rorb
xor
fsts
adc
or
jo
xor
mov
ja
cmc
add
fildl
hlt
xchg
ljmp
out
mov
cmp
sbb
in
shll
js
fdiv
sub
dec
into
xor
jge
push
rclb
jo
push
stc
xlat
push
inc
sbb
xchg
leave
lds
out
rolb
mov
or
insb
push
mov
pop
or
loope
subl
test
xorl
fs
xorb
insl
xor
push
cmp
loopne
jne
out
rcll
je
shll
int
xchg
arpl
cmp
or
rorb
jp
push
mov
add
movsl
add
push
xor
jl
xor
sub
in
lods
jbe
adc
inc
jnp
mov
and
mov
xchg
mov
adc
jo
lahf
cmpl
xor
es
inc
xorl
mov
pop
sbb
adc
sub
rolb
push
adc
fiaddl
inc
jmp
push
out
leave
pusha
jb
pop
lea
daa
cld
addr16
inc
jg
add
lcall
mov
loopne
js
lret
jbe
push
test
in
decl
repz
xchg
stos
jo
add
cmp
sub
or
pop
daa
bound
daa
lds
sub
inc
testl
shll
loope
mov
dec
mov
dec
adc
js
push
mov
loopne
mov
xchg
add
test
xor
in
xor
add
leave
addb
push
xchg
sbb
xor
pop
lcall
mov
inc
adc
dec
and
xchg
pop
stc
or
enter
mov
sbb
jp
loope
jo
enter
inc
add
or
push
or
outsl
pop
inc
cmp
stc
jl
repnz
sub
mov
add
mov
cs
and
ja
push
sarb
ret
rolb
filds
mov
add
add
std
popf
jp
cmp
and
dec
sub
and
rcrb
push
andb
lds
adc
mov
mov
sbb
int3
xor
mov
shrb
ret
icebp
int3
push
inc
sbb
icebp
adc
push
or
or
push
add
mov
rcrl
add
fs
inc
mov
inc
les
and
cmpsb
and
sbb
sub
add
repz
pop
into
inc
cmp
pop
sub
or
enter
pushf
mov
push
push
ret
sarl
jb
sbb
push
jnp
xor
mov
push
jecxz
xchg
pop
in
add
xchg
xor
push
rorl
push
push
mov
int
mov
lock
inc
out
stos
jo
push
and
add
je
jbe
adc
push
rclb
movsl
cmp
andl
ret
sbb
lea
add
add
mov
add
aad
in
add
popf
push
int
sub
mov
int
popa
stos
jge
test
es
rcl
lea
rcll
andl
pop
sarb
xchg
and
xchg
insb
adc
cltd
mov
scas
dec
hlt
shl
nop
into
jnp
add
cs
mov
test
nop
or
jno
ficompl
mov
sbb
cmp
xchg
xor
jo
sarl
mov
outsb
enter
or
mov
cmpsb
dec
xchg
mov
cmc
sub
adc
hlt
push
push
sbb
mov
adc
or
or
int
jb
jg
xor
xor
xchg
push
xor
add
cmp
nop
mov
leave
les
pop
mov
jg
sbb
lcall
push
test
mov
stos
scas
add
xorl
mov
push
push
pop
jge
mov
test
popa
lret
test
xchg
sub
mov
jae
jmp
xchg
cmc
adc
test
imul
int
xor
push
adc
lret
std
lock
push
mov
enter
cs
test
ljmp
inc
arpl
push
add
out
hlt
sbb
shr
addl
push
gs
and
jae
stos
push
mov
xchg
sbbl
les
cmpsl
or
push
imul
jnp
and
inc
push
pop
cmc
inc
test
and
push
icebp
fimull
xor
adc
add
adc
loopne
inc
scas
in
in
add
sub
push
xor
inc
dec
fs
push
mov
mov
sbb
aaa
jns
sbb
es
mov
push
mov
push
test
mov
fidivrs
jb
sub
xor
or
loopne
pusha
leave
add
push
and
xchg
dec
lock
jp
ja
jae
cmp
cltd
and
int3
lcall
jg
mov
repz
popa
push
mov
popa
test
test
jo
pop
scas
inc
xor
jmp
das
outsl
pop
mov
mov
in
adcl
cmpsl
ss
mov
adc
and
stos
lcall
shrl
jnp
subb
jae
test
lods
jb
aad
or
std
sbb
mov
sbb
mov
loope
pushl
testl
xlat
sub
loop
lahf
adc
icebp
sbb
push
add
jl
ret
xchg
sub
stos
mov
cltd
xlat
fsubrl
inc
push
dec
fs
sbb
roll
xchg
add
dec
mov
enter
gs
insb
xor
stos
rorb
push
roll
xor
pop
std
push
hlt
adc
ja
add
xchg
jmp
negl
test
les
inc
sbb
aad
dec
mov
xor
outsb
xor
mov
lods
inc
lock
shlb
fs
mov
sbb
xor
cmp
enter
push
inc
cmp
inc
fsubp
sbb
jo
sub
cwtl
stc
jo
adc
jg
xchg
xchg
add
ret
out
push
loopne
daa
xlat
cwtl
movl
xor
out
clc
pop
push
mov
insl
daa
cmpsl
jo
lea
scas
push
mov
mov
and
leave
pop
xor
adc
or
into
daa
mov
lods
cmp
scas
add
inc
test
daa
push
mov
push
dec
push
xchg
sub
mov
into
aad
add
add
adc
inc
aam
addr16
nop
jae
ljmp
inc
add
scas
add
ret
dec
shll
adc
in
cwtl
inc
sbb
mov
rol
push
in
outsl
and
xor
or
pushf
xorl
jo
negb
int3
sbb
dec
xor
shl
fldcw
add
add
test
mov
adc
inc
int
andl
or
inc
ljmp
and
cmp
mov
loope
dec
jb
or
subl
mov
and
and
lds
adc
cmp
test
xchg
cmpsb
or
scas
faddl
lret
mov
cmc
and
jo
and
push
mov
cli
mov
das
mov
test
lret
shrl
ret
in
sub
adc
inc
leave
loope
jb
gs
cwtl
fldenv
mov
out
jno
xchg
dec
xchg
sbb
sub
enter
sub
pushf
pop
gs
jmp
xchg
jp
mov
loope
rorl
sbb
adc
daa
addb
ds
lods
mov
clc
mov
loope
popa
jb
clc
cmpb
aam
xor
xchg
mov
jo
mov
in
mov
adc
xor
sbb
or
add
adc
mov
je
loope
in
or
popa
and
sub
add
xor
or
add
pop
xor
adc
arpl
pop
push
add
sar
mov
mov
les
cmp
rcrl
jno
fisubl
lcall
xchg
shll
das
sub
add
pop
and
nop
lret
test
pop
push
cmpsb
xor
andl
jmp
sbb
xor
cmp
mov
mov
dec
mov
shrl
or
popf
lock
lret
addl
pop
cs
adc
fisttpll
movsl
daa
add
cwtl
jmp
and
fs
add
sbb
push
mov
bndstx
mov
or
jo
jo
cmp
mov
scas
sbb
push
jae
loopne
add
push
fildll
sti
xor
add
mov
ret
push
sbb
sarb
das
push
mov
mov
xchg
ds
adc
loope
ds
cwtl
lret
adc
aad
mov
ret
pop
sbb
shll
jno
inc
popa
sbb
cmpsb
adc
xchg
inc
push
dec
nop
test
lret
cmp
jge
je
int
sub
js
and
dec
ljmp
aas
insb
push
cld
les
dec
mov
addl
push
push
push
xchg
pop
and
cmp
std
jg
sbb
adc
push
stos
add
and
sbb
push
clc
or
sbb
jp
sub
or
push
daa
test
adc
push
jns
stos
fisubl
loopne
and
shrl
mov
rcll
push
xor
mov
push
mov
or
inc
cltd
push
mov
popa
xor
push
adc
pop
jne
adc
jnp
jb
inc
loopne
out
pusha
cwtl
dec
loope
pop
xchg
orb
in
mov
jb
cmpsl
mov
mov
and
lods
xor
adc
or
or
mov
test
js
sbb
vcmpps
adc
pushf
shr
fsubrs
jmp
shl
cmp
stos
rorl
push
sbb
lret
in
lods
rolb
push
ja
add
sbb
jl
inc
lock
cmc
inc
daa
xor
xchg
andb
or
rolb
pop
je
dec
sub
push
add
pushl
sub
sub
subb
ret
sbb
jae
test
lock
xchg
rclb
push
jmp
or
xor
mov
lret
out
push
addb
mov
nop
lret
sub
xor
pop
mov
mov
lock
pop
push
xor
adc
das
xchg
jno
lcall
or
fnstsw
jnp
inc
xorl
pop
dec
add
mov
push
push
push
in
add
test
loope
add
icebp
rcl
lock
sub
popa
fs
or
pop
punpckhbw
movl
pusha
or
add
xor
aam
dec
fnstcw
dec
das
je
push
jae
adc
es
cld
iret
lret
rolb
cmpsb
adc
in
adc
or
rcr
leave
xchg
out
lods
lea
nop
das
imul
ret
xchg
test
xor
nop
mov
jns
loope
lret
shlb
sbb
ljmp
push
clc
mov
aas
sub
xchg
cmpsb
ret
xlat
push
mov
in
inc
xchg
nop
xor
movsb
add
mov
sbb
ret
pop
push
mov
es
inc
addr16
pop
push
sbb
repz
es
sbb
nop
mov
cmp
jl
cli
gs
gs
hlt
or
pop
adc
stos
stos
and
imull
jmp
das
cmpsb
mov
sbb
push
or
shlb
or
mov
jae
xchg
roll
lret
out
loope
or
in
ret
add
inc
pushf
sub
xor
push
out
mov
ja
adc
dec
mov
lahf
cmpl
pop
rorl
testb
pop
mov
add
cmp
sub
inc
push
push
mov
push
inc
and
jl
cltd
dec
adc
add
mov
jae
aad
test
add
call
jge
add
xchg
lods
inc
icebp
adc
push
addl
mov
sti
or
call
pslld
ret
arpl
add
jge
push
roll
js
xchg
in
hlt
inc
push
lahf
mov
cmc
sti
addb
hlt
cmc
ret
sbb
sbb
sarl
cld
pop
jecxz
add
add
scas
add
clc
add
push
mov
adc
aas
or
adcl
fistl
jg
mov
in
adc
jns
popa
mov
inc
lock
add
test
mov
sub
jl
xchg
imul
int3
sbb
cmp
adc
or
sub
imul
inc
cmp
cmp
jnp
mov
stos
inc
add
jp
verw
add
push
mov
int
jo
jge
imul
ret
mov
sbb
inc
aad
jo
sbb
adc
daa
or
jge
dec
cwtl
sbb
dec
pop
push
push
xor
mov
or
clc
fisttpl
nop
dec
sub
out
mov
add
pop
add
or
shlb
push
inc
lods
sbb
fstl
popf
xor
dec
and
cmp
and
outsl
adc
xor
xor
push
jge
jnp
add
add
popf
push
inc
mov
pop
cmp
fld
mov
pushf
in
hlt
dec
xchg
shl
arpl
loope
push
adc
in
mov
pop
loopne
sub
icebp
pop
jns
xchg
jmp
pusha
shl
aad
icebp
fistl
jns
lret
sbb
or
adc
lret
test
jo
data16
mov
and
xor
inc
rorb
loope
dec
sbb
cmp
imulb
in
and
or
sub
xor
pop
rolb
and
test
pop
sbb
stos
add
sub
fisubl
or
mov
or
xchg
leave
pushl
clc
mov
or
xchg
add
push
roll
and
pop
sbb
pusha
ljmp
sub
jo
lret
movsb
jp
inc
inc
mov
inc
pop
xchg
mov
mov
shlb
cs
jmp
enter
sbb
add
pop
pop
sti
mov
xor
xchg
push
test
push
inc
xor
jns
popa
jo
xlat
inc
pushf
pusha
sub
sbb
sbb
push
stos
inc
mov
enter
jge
or
pop
xor
mov
sbb
enter
orb
inc
mov
stos
and
add
push
mov
ret
add
xchg
push
scas
or
pop
cmp
lods
lock
xorb
addr16
test
fwait
push
test
push
adc
addr16
adc
inc
mov
hlt
lret
push
dec
cltd
or
xchg
push
cmpl
lcall
pop
and
sahf
test
rclb
pop
es
scas
cmp
push
rclb
xor
fsub
dec
push
push
loopne
loope
adc
xor
ret
lret
pop
or
pop
sbb
lret
das
jns
and
sub
jp
mov
loopne
enter
and
push
jae
xor
loope
pop
push
add
rcll
push
adc
mov
adc
mov
cmc
dec
add
in
inc
fdivl
and
mov
icebp
pop
sbb
xchg
loop
xor
xor
or
leave
rcrl
inc
imul
sub
jne
mov
dec
dec
cmpsl
dec
loope
nop
outsl
pop
and
push
out
add
mov
xchg
cli
sbb
inc
mov
cmpsl
sub
maxps
test
push
sub
push
shl
aaa
pop
pushf
pop
xor
add
cmc
jnp
roll
gs
rorb
pushf
and
leave
cmp
push
pop
scas
orl
or
add
jo
push
nop
xor
push
or
lret
nop
sarl
lret
pop
push
repz
fsts
push
pop
mov
rolb
ret
cmp
shrl
fsubl
inc
stos
pop
das
lds
inc
adc
add
cmpsb
push
shlb
fnstsw
ret
jb
daa
mov
inc
mov
sbb
into
lock
lods
sahf
sub
pop
out
add
push
xor
jp
push
mov
and
mov
test
mull
sub
mov
cmpl
xchg
sub
rclb
loopne
ret
gs
xor
xor
cwtl
fmul
add
shlb
outsb
aam
xor
cwtl
cmpsl
mov
inc
subb
imul
mov
cltd
loop
js
test
xor
mov
pusha
rclb
repnz
int
shll
and
add
mov
lock
inc
popa
jae
xchg
lret
xchg
fucomp
xor
or
lock
pushf
xor
jo
sub
xor
cltd
inc
and
je
pop
xor
cmp
cmpsb
push
and
je
sub
pop
int
idivl
sbb
das
ret
push
mov
aad
jno
xor
sbb
cmp
pop
pop
push
es
sahf
lods
sub
inc
arpl
in
and
sbbb
push
push
les
add
mov
cmc
mov
fs
leave
subl
push
xchg
inc
sub
in
inc
inc
xchg
sub
mov
mov
cmp
inc
fs
addr16
es
ret
loop
xchg
push
mov
add
aad
xor
xor
fildl
cmc
cs
addb
adc
out
and
shll
add
jnp
inc
push
es
mov
ljmp
sbb
ret
mov
ret
add
add
inc
popf
push
jb
mov
fsubs
nop
or
mov
xorb
subb
xor
in
push
cmp
adc
mov
cpuid
call
es
stos
test
out
mov
dec
add
sub
push
jbe
mov
mov
dec
adc
jg
jo
or
xor
out
and
jne
xlat
nop
mov
push
jle
nop
iret
adc
test
mov
cmpsb
and
push
idivl
out
faddl
out
xorb
or
pusha
push
adc
mov
shrb
popa
pop
push
cs
pop
int3
add
jo
jp
sbb
stos
push
sbbl
mov
cmpsl
test
push
xor
dec
push
sbb
popa
and
orl
inc
add
test
xadd
dec
push
jp
mov
cmp
cmp
fidivl
imul
or
push
shll
inc
mov
or
lcall
mov
cmp
pusha
or
pop
push
pushf
xor
xor
bound
mov
xor
test
inc
pop
pop
cmc
stos
stos
xor
mov
lret
int
cmpsl
jb
mov
xchg
fisttpll
and
cld
pop
es
in
das
sub
invd
xor
ljmp
xchg
in
jno
jne
int
add
cmp
inc
adc
data16
lret
aas
jbe
xor
add
lcall
push
inc
mov
jmp
adc
stos
xor
fisubrs
push
dec
sub
and
or
jns
push
cltd
imul
mov
inc
cs
cmp
jo
sub
ljmp
or
jge
lods
jb
inc
jns
jns
sub
adc
xlat
pop
jno
jge
mov
sub
add
pushf
into
xor
and
cs
scas
mov
loop
mov
push
jo
or
pop
cmpb
or
add
hlt
das
xchg
xchg
push
mov
mov
xchg
ljmp
mov
outsb
pop
lret
jb
iret
out
sub
lock
and
cmp
arpl
adc
push
lret
and
sub
out
jge
into
lds
ret
adc
sbb
loopne
jl
push
push
xlat
xor
imul
push
sub
or
push
push
loop
out
mov
add
adc
jg
roll
jae
cmp
mov
pushf
mov
gs
pop
sub
xor
mov
test
xor
cmp
aam
hlt
push
rcrb
or
xor
and
nop
sub
scas
mov
push
std
push
popf
jecxz
inc
jp
icebp
adc
push
xor
pop
add
in
mov
loope
push
or
mov
push
push
mov
addl
ror
test
sub
jecxz
jo
mov
addr16
mov
push
pop
sub
adc
mov
or
or
dec
xchg
cs
adc
mov
sbb
mov
cmp
or
cmp
lcall
aad
pop
and
push
mov
adc
push
ja
xor
push
xchg
into
push
push
push
inc
test
add
out
pop
rcl
add
pop
stos
outsl
and
jo
inc
xchg
enter
addr16
push
pop
loopne
mov
push
js
sub
insb
fdivrs
gs
mov
adc
popa
lcall
shrb
inc
es
mov
mov
push
adcb
xor
sbb
dec
lea
loop
fcom
dec
rcrb
or
inc
rolb
leave
lret
or
push
cmpsb
push
lcall
in
adc
popa
lods
push
leave
xchg
leave
adc
nop
pop
rcrl
xchg
fidivrs
xchg
add
cltd
jo
mov
mov
add
loopne
gs
jns,pn
sbb
adc
lcall
push
add
ror
pusha
mov
cltd
mov
push
xor
sbb
inc
jae
fidivl
xor
mov
jb
add
add
pop
data16
xor
cltd
push
add
pop
add
shlb
cmp
push
sbb
add
mov
bnd
int
mov
test
xchg
inc
mov
mov
cmp
push
cmp
sbbb
pushf
aas
shlb
and
push
xchg
loope
add
adc
jno
and
xlat
xchg
add
mov
xor
jne
mov
dec
xor
or
inc
jae
movsl
xchg
push
sbbl
sbb
xchg
xor
aad
push
cmp
adc
cmp
in
je
add
push
dec
je
sbb
lds
or
or
jnp
xor
or
in
cwtl
imul
jo
or
dec
out
pop
cmovae
out
sbbl
mov
adc
mov
mov
daa
mov
inc
ret
xchg
xlat
cmpsb
mov
je
lods
pop
pop
push
xor
pop
and
jb
add
jne
xchg
idivb
jb
add
enter
xlat
mov
cwtl
lods
and
sbb
adc
int
mov
sysenter
daa
add
mov
xor
jo
dec
jno
je
popf
push
xchg
aaa
xor
movsb
enter
mov
adc
shlb
aad
sbb
clc
ss
pop
push
dec
shlb
out
rclb
adc
cmp
sub
loop
jnp
inc
xor
inc
inc
jnp
mov
adc
jnp
push
push
and
cmp
dec
arpl
push
sbb
sti
lods
jb
inc
mov
push
addr16
add
cltd
inc
mov
mov
pop
pop
or
scas
popa
add
push
out
add
add
imul
jbe
jno
or
dec
cmp
dec
sub
leave
add
sub
push
test
pushf
cmpsb
loopne
mov
inc
xor
fidivl
cmp
dec
mov
push
fld
jo
fisubl
cli
loop
sub
daa
jo
xor
push
rcrl
rorb
sub
daa
sbb
or
stos
or
inc
scas
cmpxchg
test
out
sbb
rorb
mov
mov
ficoml
xchg
call
adc
jmp
scas
and
adc
dec
sbb
mov
jg
std
mov
mov
add
shl
jge
out
das
adc
clc
sub
mov
dec
mov
out
or
push
outsl
and
test
inc
out
dec
pop
sub
sbb
add
mov
add
sbb
mov
mov
dec
add
dec
or
add
aaa
sub
sbb
addl
fs
jns
mov
sub
adc
mov
call
add
sbb
sub
sar
xchg
insl
repz
inc
lock
inc
mov
sarb
xlat
stos
rclb
push
sub
mov
addl
or
or
imul
popa
nop
mov
pushf
mov
mov
addl
sub
jae
push
loope
cmp
dec
push
jae
inc
pop
cmp
push
insb
mov
mov
adc
inc
cwtl
sub
and
out
outsl
gs
cmp
ret
cmp
in
jb
stc
cwtl
out
cmp
xor
pop
ss
push
icebp
test
jge
mov
mov
adc
inc
lret
pop
nop
ret
test
repz
push
mov
adc
push
jae
fmul
cmp
xchg
push
cs
testl
mov
jnp
nop
mov
pop
mov
dec
sub
shrb
inc
xor
ljmp
push
inc
pushf
and
pop
push
fsubr
push
jae
gs
lods
jmp
insb
arpl
cmp
inc
mov
jl
xor
call
in
jnp
cmp
adc
xchg
pop
jae
pop
outsl
adc
scas
dec
shrb
incb
push
in
leave
test
scas
xchg
rcrl
inc
mov
add
icebp
inc
adc
xrelease
cltd
fstps
inc
xchg
push
sbbl
jo
out
sub
pop
nop
mov
pop
cmp
pop
ds
xor
push
push
sub
mov
loop,pn
push
std
push
popa
pop
rolb
insl
pop
add
in
or
loop
pop
aad
xchg
ljmp
test
or
cs
inc
pop
add
push
xor
lret
cld
sahf
pop
movsl
jo
sbb
push
sbb
mov
push
dec
shl
mov
jge
adc
shl
or
cmp
xor
or
add
sbb
adc
cld
push
cmp
sbb
or
and
ret
mov
pop
pop
mov
inc
movsl
ljmp
dec
movsl
gs
ja
pushf
movl
and
and
push
add
cmp
test
jne
scas
les
scas
cld
inc
cmp
stos
push
xor
push
and
push
add
arpl
mov
push
sub
dec
or
lret
pop
fwait
cld
sbb
xchg
lock
dec
inc
pop
das
lea
cmp
rorb
jo
roll
or
cmc
cs
test
stos
adc
gs
scas
xor
dec
adc
andl
test
cmp
jns
or
ret
and
push
push
rorb
decb
mov
hlt
mov
or
loopne
shlb
xor
sub
mov
test
inc
loope
cwtl
adc
loop
mov
push
cmp
test
cmp
pop
xor
mov
jmp
xor
ror
inc
daa
lcall
arpl
ds
inc
jae
ret
mov
adc
jo
xor
xchg
pop
inc
cs
aam
or
ljmp
in
mov
adc
dec
stos
cmp
jbe
xorb
add
ds
cmpsb
or
inc
mov
cltd
pop
xchg
jae
das
pushf
jae
lcall
push
jnp
and
adc
rolb
jne
cmp
ja
or
sub
adc
push
xor
ret
test
or
in
cmp
lcall
inc
cs
push
ja
and
pop
jbe
xor
and
cmpsb
ror
jae
dec
testb
xchg
push
cli
ja
gs
cmp
push
add
cmp
push
pop
es
adc
lods
adc
pusha
add
fs
xchg
xchg
mov
push
mov
mov
pop
test
add
pusha
jb
mov
pop
and
mov
out
adc
lret
nop
mov
dec
sbb
inc
xchg
popf
testb
sbb
rclb
mov
xchg
insb
adc
test
add
push
icebp
test
jb
dec
out
add
ret
jo
test
add
add
dec
pusha
loopne
jns
das
sub
jb
pop
daa
cmpsb
push
inc
push
sbbb
push
push
add
mov
inc
jae
xchg
xor
sub
sub
adc
sbb
inc
add
pop
push
addl
add
filds
invd
daa
call
sub
mov
and
fiaddl
call
pop
or
add
add
and
frndint
inc
adc
dec
sub
xor
mov
fstps
xor
pop
xor
sub
push
fadds
add
push
lcall
push
sbb
add
push
pop
idivl
fwait
mov
push
dec
inc
pop
inc
push
cmp
sbb
add
adc
xchg
imul
push
sbb
mov
enter
pop
mov
or
mov
jl
vpsubq
ret
pushl
add
rclb
xor
int3
cmovge
inc
adc
xor
xor
mov
filds
or
xor
sub
test
adc
xor
cvttps2pi
adcb
sbb
mov
in
xchg
lds
dec
push
pop
sub
sbb
aam
inc
dec
jo
cmp
enter
pop
jno
test
scas
jb
add
aad
call
mov
jp
push
dec
mov
mov
push
out
test
pop
xchg
push
imul
xor
mov
cmp
sub
push
xor
inc
into
adc
push
mov
push
xor
mov
or
fs
sbb
dec
xchg
leave
push
cltd
and
sub
push
jae
rolb
jne
xchg
or
mov
cwtl
jmp
jae
sbb
sbb
fstpl
inc
jae
les
mov
addb
daa
pushf
sub
mov
adc
js
fnstenv
cmpsl
and
jle
test
imul
nop
push
sbb
xchg
hlt
pushf
or
mov
jbe
xlat
dec
adc
jo
jo
test
orb
cmp
test
test
xlat
pushf
lret
movsb
xchg
push
xchg
cmpl
adc
xchg
cmp
sub
js
fimull
addl
push
out
movsl
add
push
pop
rcrl
test
out
andl
xchg
mov
mov
adc
nop
and
push
in
daa
outsb
lock
cmp
pop
icebp
and
jge
rolb
cmp
push
mov
test
adc
jbe
aam
lcall
mov
inc
jbe
loop
mov
jae
pop
out
sub
cmpsl
mov
push
cmp
mov
aas
xor
out
cmpsl
inc
adc
xor
sub
xor
xor
jno
and
adc
scas
inc
lock
insb
push
xlat
cmpsb
in
pop
ja
xor
mov
mov
lahf
into
add
or
lcall
fildll
push
repnz
fwait
add
and
popf
lods
mov
sbb
jp
and
cmpsb
mov
leave
cld
xchg
jo
sub
mov
xor
xchg
mov
adc
jne
inc
mov
pop
in
cmp
fstpl
aad
icebp
pop
jnp
and
add
push
popa
or
pusha
pop
das
xchg
sub
add
cwtl
add
cmpsb
scas
push
or
jo
fucomi
xchg
mov
mov
inc
inc
adc
adc
mov
mov
pop
xchg
push
les
lret
push
nop
xor
add
imulb
jnp
or
aad
xchg
icebp
sub
popa
push
pop
sbb
xor
aam
xor
enter
add
inc
mov
and
sbb
mov
pushf
popw
add
add
test
out
push
cmpsb
push
addr16
icebp
add
cmp
xchg
jno
pop
loopne
adc
mov
mov
or
inc
xor
test
cwtl
dec
pop
lret
cmpsb
jae
leave
popa
rol
jl
sub
jp
inc
jo
sbbb
pop
nop
dec
adc
and
mulb
mov
addb
pop
test
pop
lods
add
fs
inc
sbb
sbb
xor
aad
es
sbbl
sub
and
jp
mov
push
lock
outsb
add
and
andl
push
loope
push
xor
test
cli
repnz
push
lahf
lret
cmp
inc
movsb
subl
and
and
test
pop
ljmp
in
popa
mov
lock
jbe
xor
dec
jge
cmpsb
mov
repnz
imul
rcrl
jmp
or
scas
sub
xor
inc
add
loopne
nop
lahf
sub
dec
inc
cs
push
sbb
loope
push
xorl
sbb
iret
fists
insb
push
cltd
inc
and
add
xor
pusha
movsl
or
or
add
or
jb
pushf
hlt
and
jp
pop
xchg
mov
call
mov
cmovbe
popf
sub
gs
aad
add
or
test
aam
and
xor
or
imul
mov
lret
mov
add
dec
xchg
push
incb
nop
xor
mov
mov
sbb
dec
adc
sub
lods
sbb
ljmp
es
jae
xor
add
and
or
cmpsl
cmp
hlt
cmp
adc
and
mov
jo
jg
inc
push
xor
and
dec
sub
or
scas
sbb
sbb
inc
push
add
push
and
es
rolb
adc
ret
jnp
dec
cmpsb
add
jge
dec
add
and
mov
aad
sbb
mov
cltd
or
loope
mov
pop
aam
mov
inc
int
shlb
cltd
push
cmp
or
lea
xor
in
or
int
inc
sub
push
ret
push
adc
ss
and
setl
xchg
add
xchg
dec
push
xor
or
push
and
or
xchg
mov
shlb
cmpb
lds
jmp
inc
loopne
ret
std
cwtl
mov
push
ret
xchg
xor
aas
std
dec
xor
xchg
jge
repnz
adc
add
inc
int
xchg
flds
clc
das
add
addb
fmull
xor
pop
test
xlat
jnp
push
jae
stc
imul
xor
push
rcrb
mov
or
mov
adc
loopne
and
dec
add
aaa
jnp
shlb
jge
repz
orb
sahf
inc
xchg
and
xchg
in
cmpsb
xor
test
xor
pop
xchg
mov
adc
mov
aam
mov
or
xor
or
jb
inc
mov
mov
retw
sub
orb
push
jae
jno
inc
xor
push
jae
pop
scas
into
sbb
lcall
adc
xchg
xchg
lret
test
add
cmp
xchg
add
cmp
popa
rclb
push
mov
dec
push
mov
and
fcmovnb
rol
mov
inc
add
inc
sbb
fcompl
xlat
adcb
mov
adcl
test
dec
ljmp
dec
xchg
rorl
pop
mov
cwtl
jo
sbb
mov
add
loope
or
call
orl
xor
or
lods
sti
jge
xchg
and
mov
push
ret
stc
call
in
lods
add
lahf
jge
push
adc
inc
mov
push
or
xlat
popa
rclb
xor
lcall
out
mov
add
rclb
add
adc
or
mov
popf
test
fistpll
push
rcrl
cltd
scas
sub
movsl
aad
inc
cmp
mov
jno
mov
mov
jecxz
adc
subb
cmpl
pop
inc
loope
mov
jne
add
xor
pushf
leave
gs
or
je
in
not
mov
das
jb
xor
shrb
in
icebp
andl
dec
ret
inc
in
inc
jae
leave
push
fwait
inc
xor
pop
aam
xor
or
out
or
pop
rorb
push
mov
pop
mov
sbb
adc
push
jae
test
ljmpw
js
pop
pusha
xor
push
test
cmp
or
inc
in
inc
add
out
push
add
sbbb
sbb
add
dec
add
mov
loop
pop
in
pop
into
inc
sbb
push
and
sub
lods
cmp
jb
push
or
sbb
push
bound
mov
cltd
mov
call
es
pop
loopne
inc
mov
sbb
cmp
cmp
in
lret
cmp
lret
gs
inc
or
add
fxch
shrb
push
sbb
xchg
loope
mov
adc
cmpsb
pop
pop
inc
sbb
xor
xchg
xchg
decl
int
and
leave
sti
adc
fisubl
push
add
mov
mov
mov
insb
push
and
or
sub
xchg
xchg
inc
jp
adcb
mov
or
xchg
imul
andb
mov
pop
loopne
in
gs
jne
inc
jae
xor
xchg
push
push
xor
jno
mov
sub
push
sub
adc
push
cmp
dec
cmp
mov
sub
add
add
cmp
push
cs
lret
push
test
jb
leave
rorl
or
test
add
popf
lods
out
pop
mov
push
push
stos
add
pop
jb
jo
cmp
push
sbb
push
popa
dec
sbb
cmc
orb
xchg
xchg
inc
or
cmpsb
enter
inc
loop
sbb
jo
test
or
mov
inc
lea
fiadds
pop
jne
sub
sbbl
js
sub
adcl
pop
subl
int
sbb
int
jmp
sbb
jb
add
popa
xor
mov
cmp
mov
jge
jle
xor
jo
std
push
imul
mov
xor
roll
ja
test
jo
nop
and
nop
adcl
cmp
push
test
test
fmull
test
enter
sbb
sub
xor
or
pop
divl
inc
jnp
pop
nop
push
sbb
xchg
cmpsb
sub
das
clc
sub
rolb
scas
push
addr16
sub
add
les
mov
push
es
cmc
enter
ret
lcall
cmpsb
cmp
or
sub
lea
add
sbb
ret
push
lods
mov
rclb
jmp
lsl
jecxz
out
pop
mov
aaa
xor
movsl
gs
mov
sub
add
xor
cltd
xor
mulb
lahf
inc
cmp
sbb
fchs
sbbb
xchg
decb
xchg
push
inc
inc
jp
add
mov
test
mov
add
sub
fs
push
cmpsb
aam
dec
clc
push
cmpsb
ljmp
or
push
movsb
adcb
cld
and
push
inc
leave
stos
aas
outsb
xorb
pop
inc
scas
adc
push
xlat
adc
adc
adc
adc
push
gs
mov
lea
inc
xorl
dec
xchg
add
xor
or
pop
sti
repz
pop
inc
into
push
sub
pop
mov
jp
inc
xor
ljmp
outsb
pop
jns
rcl
adcb
lods
adc
xor
popa
loop
cmp
out
jo
stos
pushfw
das
and
sbb
jge
cs
pop
faddl
xchg
scas
loopne
mov
adc
dec
insb
adc
test
adc
popa
and
pop
jg
mov
in
int
sbb
add
mov
dec
add
sbb
lcall
adc
imul
cmp
lea
sub
es
mov
rcrb
mov
jae
cltd
cmp
loope
dec
push
addr16
add
imul
and
ficoms
sbbb
testb
scas
sbb
xchg
imul
add
push
cs
adc
cmp
cmp
or
xlat
add
movsl
ja
cmp
xchg
stos
add
mov
ljmp
or
dec
push
jae
lret
push
push
test
push
inc
in
pushf
psubsb
inc
sbb
scas
mov
xor
cmp
add
ret
sbb
push
lret
nop
mov
pop
push
jo
mov
mov
jns
pop
inc
popa
add
dec
test
or
sbb
test
mov
adc
or
ret
add
pop
dec
int
mov
or
cwtl
test
mov
test
inc
jae
clc
ljmp
dec
outsl
add
sbb
add
ret
mov
xchg
inc
adc
sub
pop
es
insl
fimuls
xchg
and
ret
xchg
adc
fiadds
fs
cmpb
rorb
cwtl
adc
xchg
lret
push
int
and
js
incb
inc
push
aam
adc
pop
cmp
inc
mov
addr16
fisttps
dec
sbb
push
sbb
js
pop
push
mov
inc
sarl
xchg
jg
cmp
in
sbb
add
adc
mov
pop
call
outsl
push
bound
xchg
fstpt
jne
icebp
pop
inc
loope
adc
cmp
and
mov
xchg
or
add
mov
inc
jae
push
pop
out
add
jmp
hlt
punpcklbw
xor
and
hlt
or
xchg
mov
div
push
mov
loope
rorb
rcrb
mov
adc
dec
jmp
mov
mov
push
cmp
stos
cmp
or
sub
subl
stc
add
test
fs
scas
adc
mov
rorb
xlat
js
xor
push
push
cmp
lock
xchg
xor
xor
mov
add
aam
add
add
jb
pop
test
cmp
or
or
jecxz
ret
rclb
xor
dec
mov
adc
int
sbb
push
cmp
xchg
jb
xlat
cmp
ljmp
pop
push
jae
fsubs
mov
loope
jo
jge
push
fs
das
outsl
sub
or
xor
or
sti
imul
test
mov
mov
icebp
aaa
and
jo
and
and
jo
push
fwait
pop
daa
aad
fmull
stos
loope
fiaddl
pop
cmc
lret
adc
xor
push
adc
mov
out
aam
xchg
pushf
sub
in
loop
push
push
and
jle
inc
push
loopne
stos
mov
jo
pop
add
dec
adc
daa
ret
and
leave
orb
shlb
jle
aas
push
les
icebp
inc
lahf
outsl
out
add
in
add
or
leave
lods
add
xor
negl
mov
add
and
adc
call
add
lock
add
sbb
sub
mov
and
ret
adc
sbb
add
sub
xor
lret
cmpsb
add
inc
andl
test
pusha
jb
dec
adc
daa
inc
xor
movsb
push
add
clc
mov
sbb
sub
push
cmpsb
push
les
add
push
xchg
jp
inc
pop
clc
add
add
cwtl
sub
sub
mov
pop
xor
test
loope
or
scas
sbb
pop
mov
and
inc
lea
push
xchg
cmpsl
lods
push
jb
loope
adc
pusha
bound
sbb
add
divb
jl
in
adc
push
loopne
lods
psubusb
and
icebp
mov
ret
add
add
daa
sub
hlt
pop
mov
scas
loopne
mov
call
mov
cmp
cwtl
dec
scas
imul
pop
loopne
test
std
leave
inc
cmp
adc
jecxz
cmpsl
call
popa
aam
add
sahf
aad
jmp
add
adc
test
call
out
cmp
in
add
and
mov
push
adc
xor
shrl
jbe
sarl
js
data16
mov
sbb
jge
jb
sbb
rcll
cs
adc
add
pushf
add
imul
subb
into
xor
sub
test
push
int
jmp
jne
sbb
dec
xor
cltd
adc
mov
push
inc
popa
inc
outsb
addb
adc
push
cmp
dec
cs
mov
rolb
movsl
push
cmp
ror
sub
mov
cmp
shll
cwtl
inc
inc
scas
dec
scas
sbbl
andl
cwtl
mov
scas
jae
or
popa
mov
popa
pop
cs
roll
pop
cmp
jb
inc
loopne
pop
aam
je
dec
sbb
xchg
dec
js
loopne
sbb
xor
jae
lcall
ret
clc
pop
push
stc
push
test
enter
je
cmp
lret
imul
scas
or
out
mov
and
movsl
xor
mov
push
sub
js
das
push
lcall
mov
or
pop
inc
mov
adc
mov
push
mov
xor
arpl
add
xor
cli
jns
lret
leave
je
enter
push
add
std
repz
add
and
sti
dec
push
cmp
add
fildl
jno
jg
pop
xor
mov
fstpt
inc
add
or
orl
ja
xorl
repnz
xchg
cltd
and
daa
sbb
and
dec
mov
add
outsl
stc
mov
rcll
sbb
pop
mov
lods
add
addr16
push
or
xor
jg,pn
xchg
xor
and
repnz
outsb
mov
mov
or
add
sub
lret
bound
and
mov
in
cmp
adc
cmp
mov
jle
mov
fwait
popa
test
dec
add
sti
dec
pop
dec
mov
int
movlps
in
or
add
icebp
inc
mov
in
enter
adc
sub
test
pop
jle
lret
pop
sahf
mov
xchg
ja
xchg
push
inc
adc
mov
enter
int3
dec
inc
jg
mov
jbe
inc
pop
mov
mov
or
adc
adc
jne
in
das
cld
out
mov
jns
negl
enter
dec
sbb
inc
addr16
jg
add
outsb
inc
mov
in
or
add
stc
sub
xchg
pop
adc
lcall
iret
add
dec
sbb
add
in
stc
xchg
fistl
jns
jmp
stos
add
jnp
mov
mov
add
and
in
jle
iret
test
push
or
inc
mov
std
and
dec
cs
lret
outsl
stos
add
pusha
fld
test
lea
xchg
in
pop
mov
push
inc
xchg
sti
aas
xor
dec
inc
sub
iret
inc
or
aaa
cmp
stc
in
push
repnz
insb
mov
or
stos
mov
pop
adc
pop
mov
xchg
and
xlat
jl
pop
mov
mov
jmp
ficoms
fimull
inc
inc
cwtl
sub
mov
sti
fcomip
leave
iret
jle
and
test
bound
mov
lcall
mov
adc
mov
lock
scas
sbb
sub
and
ficomps
insb
push
ss
pop
mov
inc
sbb
push
sbb
pop
iret
in
cltd
mov
outsb
mov
mov
stos
sbb
mov
imul
mov
inc
or
push
int3
movsb
outsl
xchg
pop
jb
insb
add
push
lret
iret
ret
xor
mov
jo
test
outsb
int3
pop
jns
sti
jl
jg
iret
jns
mov
cmp
repnz
add
les
and
and
pop
or
inc
cwtl
xchg
mov
lret
sub
testb
call
xlat
jecxz
nop
cmpl
add
outsb
insb
stc
insb
int3
add
jle
enter
les
and
arpl
lods
xor
aam
jl
mov
fwait
dec
push
mov
insl
adc
pusha
and
dec
mov
je
mov
xchg
cltd
pushf
out
cmpsb
jo
jnp
inc
cwtl
mov
in
enter
xor
push
pop
divb
push
iret
gs
mov
mov
mov
shll
ljmp
cs
ret
arpl
push
xor
sbb
scas
repnz
xchg
mov
shlb
pop
pop
xchg
shrb
sub
xor
lcall
lahf
in
or
stc
push
mov
repnz
shlb
fcoms
jmp
pop
mov
push
mov
adc
or
cmpsl
imul
fcmovnbe
inc
cmp
mov
lahf
xor
mov
movsl
sbb
je
dec
jmp
mov
mov
sbb
jle
mov
jb
pop
clc
sbb
or
mov
mov
xor
xchg
iret
cs
mov
mov
adc
adc
out
fwait
repnz
imul
fwait
mov
or
sti
mov
xor
mov
pop
push
lods
sbb
jmp
sti
dec
mov
jle
inc
adc
mov
adcl
call
sbb
insb
adc
fwait
enter
pop
aaa
push
pop
mov
jecxz
loope
sub
int
pop
mov
mov
dec
dec
lods
pushf
add
mov
movsl
sahf
mov
ja
test
sub
mov
insl
mov
jns
sti
aas
xchg
in
sbbl
mov
dec
fldenv
in
mov
lea
hlt
into
data16
or
mov
fsts
xor
mov
add
repnz
mov
xor
add
ret
pop
jmp
lret
out
add
out
add
adc
xchg
test
outsb
mov
jbe
pop
iret
adc
jge
jno
fbstp
add
or
pop
mov
inc
add
cli
lock
sub
mov
pop
add
insl
int
sbb
xor
sbbl
jne
rol
in
out
cmpsl
pusha
mov
movsl
addr16
daa
add
ds
xchg
in
es
sub
test
jb
sbb
xchg
jl
inc
icebp
insl
scas
fwait
rorb
int3
xor
mov
push
adc
push
dec
imul
mov
mull
sbb
out
xchg
fs
jae
jl
sbb
xchg
aaa
add
mov
mov
inc
in
lds
xor
sahf
rcll
repz
lret
repnz
pslld
test
mov
xchg
movsl
popa
addr16
iret
mov
ret
mov
sbb
push
push
sub
test
subl
lods
sbb
cs
pusha
or
push
sahf
sti
rcl
cld
lcall
mov
popf
push
ja
mov
xor
mov
ljmp
hlt
jge
mov
insb
inc
or
mov
and
pop
aaa
cld
sbb
imul
aad
test
sbbl
cmp
lret
mov
lods
or
and
and
xchg
mov
fs
mov
cmp
mov
xor
lea
mov
pop
xlat
xor
les
ss
insb
rclb
movsb
jo
fnstcw
inc
data16
mov
adc
arpl
ja
mov
fidivl
inc
mov
jne
pop
adc
arpl
mov
add
dec
inc
sbb
and
popl
sub
out
iret
mov
mov
shr
jecxz
jl
add
push
add
sbb
into
cmp
mov
push
shll
rcr
dec
inc
aad
push
ljmp
adc
sub
add
shrl
lcall
inc
dec
sbb
jae
xor
and
enter
add
push
icebp
or
fadds
das
mov
push
or
push
cmp
adc
and
sarl
iret
mov
pop
rcrl
xchg
mov
pop
inc
icebp
cmpsb
mov
fadds
mov
ljmp
je
or
sahf
lea
lock
and
ja
sub
mov
xchg
adc
xor
cmc
or
jae
cmpb
fbld
add
push
cmp
sbb
xor
mov
xor
add
adc
xor
loopne
adc
or
orl
push
sub
add
adc
add
data16
push
addb
addb
scas
rolb
mov
inc
xchg
sbbb
mov
or
cmpsb
adc
pusha
repz
add
and
mov
nop
lods
cmp
enter
dec
enter
js
outsl
out
pop
adc
add
and
add
push
adc
push
jnp
mov
sbb
adc
inc
loopne
fs
mov
addl
scas
fdivp
jns
loope
fisttps
adc
add
push
dec
add
loopne
pop
inc
mov
inc
loopne
ss
repnz
cltd
ljmp
add
inc
das
test
lods
pop
aad
push
add
ds
mov
xor
sub
push
mov
pop
mov
mull
adc
adc
mulb
push
popf
test
xchg
cli
or
call
inc
push
add
jo
imul
dec
shrl
pusha
xor
aas
out
push
add
pusha
mov
aam
push
push
imul
add
jmp
loop
sbbb
mov
push
clc
and
inc
loope
neg
adc
mov
add
ret
adc
lcall
sub
lea
sti
mov
repz
inc
subl
stos
pop
es
and
mov
or
jp
pusha
imul
pop
cmpsl
insb
cmp
pop
push
jne
mov
push
invd
add
cmp
add
mov
aam
dec
mov
sbb
pop
fs
sub
roll
sub
push
mov
scas
jge
insl
ds
int
out
test
int
sbb
test
or
pop
inc
add
insb
fcmovb
push
xor
adc
sbb
loopne
mov
inc
xor
out
pop
out
dec
cvttps2pi
lahf
iret
or
lock
ffree
dec
lods
mov
lret
inc
int3
jle
push
mov
mov
es
loope
mov
popa
test
cmp
cmp
addb
stos
add
out
mov
lret
push
mov
cmpsb
test
mov
out
scas
sub
push
push
loope
sbb
xor
js
test
cld
dec
adc
add
lcall
ret
inc
jnp
and
xor
xor
mov
xchg
aad
push
sub
movsb
jb
adc
push
inc
ret
in
loopne
loope
cld
add
or
adc
or
pop
orl
sarb
or
and
inc
in
mov
mov
xchg
or
das
insl
cs
xor
cmpsb
xor
pushw
or
inc
int
mov
leave
addr16
inc
les
inc
in
scas
push
xor
push
xchg
xrelease
bound
adc
mov
xlat
adc
push
sbb
nop
test
and
scas
cmpsb
data16
fsubl
inc
mov
in
push
jae
push
xor
cmp
adc
sub
mov
jmp
mov
pop
mov
adc
mov
out
push
xor
push
mov
sbb
xchg
jne
sbb
lcall
pop
sahf
ret
and
and
and
xchg
lret
inc
lret
inc
push
push
xorl
ljmp
test
dec
sub
xor
sbb
xchg
cwtl
dec
in
push
out
ret
add
loop
adc
cltd
int
mov
sbbl
add
mov
and
inc
lods
lcall
das
in
xor
sub
add
cmpsb
data16
mov
adc
add
mov
test
mov
push
xor
cs
add
jp
lea
stos
push
push
sbb
aas
pop
push
mov
int
cld
inc
pushf
shl
ret
aas
jecxz
fldenv
nop
push
in
adc
and
add
loop
mov
outsl
inc
push
push
push
test
test
scas
test
cld
orb
and
jmp
push
leave
les
test
mov
inc
sub
mov
and
mov
pop
cmc
cli
sub
adc
sbb
fucomp
call
int
xlat
rolb
loope
or
popa
cmpsl
pop
push
jae
sbb
and
jl
andb
cli
lods
push
loopne
inc
xor
jbe
cltd
add
pusha
rorb
in
push
pop
xchg
in
cmp
or
xor
addr16
roll
int3
jnp
cwtl
fstl
lret
loopne
add
or
and
sub
ret
inc
xor
mov
rcll
inc
lods
cmp
xor
jo
jp
sbb
inc
cltd
xchg
push
shll
sbb
push
int3
rorl
fnsave
sti
adc
nop
imul
repnz
leave
jle
popf
ret
xor
testl
lods
sahf
dec
enter
icebp
lcall
andb
mov
jae
enter
fwait
imul
lods
xchg
push
test
jo
and
and
inc
and
rcrl
adc
pop
ror
adc
data16
jo
movsb
xor
push
popa
js
mov
leave
mov
add
movsl
cmpsb
add
ljmp
add
sbb
cltd
jo
mov
sub
xchg
dec
mov
sbb
or
xor
int3
shlb
negb
pop
outsb
sbb
jl
xchg
adc
test
leave
andl
scas
adc
dec
xchg
lds
mov
push
xchg
mov
cmpb
cmovno
sbb
rorb
sbbb
jo
ret
and
adc
orb
xor
icebp
push
push
mov
mov
cmp
dec
jne
insb
jb
or
scas
es
xor
mov
icebp
js
jg
add
xor
test
jae
inc
jge
pop
popf
imul
mov
xor
xor
addb
mov
push
outsb
adc
push
popa
ret
mov
dec
sub
inc
jo
rclb
lcall
pop
pmulhuw
fidivrl
push
inc
popa
cmp
cmp
inc
mov
add
inc
imul
mov
xchg
mov
test
or
aas
insl
add
ljmp
mov
scas
inc
in
cmp
adc
cmp
xor
add
inc
fisttps
out
sbb
cmc
into
test
insl
inc
icebp
loope
ret
and
add
popf
sbb
ret
push
aad
lret
cwtl
jo
bound
lret
jb
sbb
jne
mov
aam
xor
mov
mov
jge
lock
lret
cmp
lret
sbb
leave
jae
imull
pop
nop
in
dec
adc
mov
pop
shlb
add
jnp
cmp
add
test
jns
in
adc
test
aaa
mov
add
cmpsb
or
cs
pop
fldl
ds
lcall
fcmovne
add
pop
lods
pushf
stos
loope
push
pop
mov
inc
mov
popf
test
sub
xor
cmpb
xchg
adc
sbb
cmp
mov
sbb
gs
xorb
xchg
and
or
in
mov
inc
je
out
mov
adc
out
gs
add
xor
xchg
cs
add
push
popa
dec
sub
push
cmp
jne
sbb
inc
hlt
inc
orb
mov
insb
push
xlat
inc
cmc
ljmp
or
dec
test
or
scas
lea
sahf
add
or
mov
mov
or
and
imul
jae
aaa
aad
jle
fisubrl
cmpsl
cmp
mov
lret
subb
es
aad
inc
push
dec
cmpsl
and
scas
data16
fs
or
test
pop
adc
cmp
push
in
das
leave
jno
outsl
ljmp
mov
xchg
push
dec
inc
mov
mov
adc
in
xabort
mov
test
shlb
adc
and
roll
lock
xchg
adc
xor
call
rorb
dec
inc
jne
jo
sbb
sub
movl
js
lds
inc
and
sub
jmp
adc
or
or
mov
and
sub
aam
push
pusha
add
call
shlb
mov
pushl
or
movsl
incl
jno
push
xor
adc
mov
and
addb
loope
dec
push
adc
ret
xor
scas
add
dec
das
dec
push
adc
adcb
xor
aad
ljmp
rorl
or
adc
test
sahf
sbb
dec
mov
mov
es
jae
shlb
scas
sub
stos
cld
mov
jo
mov
mov
sarb
inc
push
push
and
test
push
daa
fldenv
push
mov
add
inc
dec
in
or
add
mov
inc
in
adc
xchg
or
inc
add
jns
inc
imul
das
and
xchg
pop
jae
mov
and
dec
mov
int
aam
call
add
cltd
jae
dec
test
imul
and
mov
cld
addr16
xorb
inc
sub
nop
or
test
add
jge
xchg
sub
xor
push
addb
popa
xor
mov
xchg
add
sub
lcall
or
icebp
push
in
out
outsb
inc
cmpsb
lock
adc
repz
dec
nop
jbe
fiaddl
mov
subb
add
inc
cmp
js
mov
mov
sbb
pop
jge
cmp
add
mov
xchg
push
sub
out
in
inc
andl
jp
lea
sub
sti
add
fs
jecxz
bndstx
loopne
push
sti
rcll
shll
sbb
cmp
xchg
mov
inc
cmp
outsb
push
push
xor
push
lea
shll
or
popf
into
ret
ficoml
insb
ret
adc
or
inc
jo
push
mov
add
and
sbb
mov
fs
push
jae
arpl
inc
push
fstpt
jle
sub
aas
xor
orb
bound
lcall
adc
dec
push
sub
mov
jo
mov
jb
popa
in
push
mov
loope
pop
ss
adcl
lods
dec
cltd
or
and
adc
out
or
bnd
nop
test
mov
mov
sbb
push
testl
fisubl
mov
dec
loopne
inc
xlat
cmpsb
es
roll
jp
daa
xchg
pop
inc
daa
out
addr16
test
push
xchg
adc
rcll
cmp
push
ss
ljmp
inc
test
ret
add
ljmp
sub
sub
xor
sahf
jnp
cmpsb
mov
in
stc
push
cmc
sub
lcall
movsb
and
push
cwtl
sub
add
icebp
or
adc
mov
push
cmp
push
push
push
fwait
and
rorl
adcl
scas
loop
push
xchg
adcl
push
es
push
imul
mov
push
adc
into
inc
rclb
loopne
and
push
pusha
ficompl
daa
add
push
jl
xchg
in
sbb
daa
cvtps2pd
mov
mov
adc
push
adc
aas
push
cltd
shr
and
xor
inc
xchg
arpl
and
inc
cli
push
xchg
mov
or
pusha
js
add
test
aam
out
add
xchg
and
pop
pop
scas
or
fs
mov
outsb
push
pop
fisubl
push
mov
inc
xor
mov
and
ds
cwtl
dec
sub
push
add
cmp
cmp
aam
xor
xchg
fsts
mov
pushf
leave
hlt
sbb
leave
dec
sbbb
aam
jge
sahf
insb
adc
xor
loope
push
loop
add
add
shlb
shl
jo
inc
mov
or
mov
sbb
lea
and
jb
cmp
orb
aad
xor
es
push
add
add
push
iret
pushf
shlb
mov
das
sub
xor
pop
add
xchg
std
icebp
jae
stos
and
xchg
insb
push
push
push
add
push
lods
enter
daa
movl
scas
insl
mov
xchg
mov
daa
push
js
in
cmp
push
stos
or
loope
hlt
stos
push
out
push
movsb
xor
movsl
in
or
sarb
adc
xor
dec
inc
scas
add
or
or
addr16
scas
inc
cltd
mov
cmp
jo
adcl
dec
jge
arpl
cmp
test
push
inc
ror
incb
push
add
pop
inc
xor
push
inc
imul
fisubrl
cmp
xor
insb
add
mov
xor
mov
lods
adc
fnstenv
mov
or
adc
sub
adc
ja
add
dec
stos
sbb
cmp
in
push
in
cmp
pop
sbb
dec
mov
push
push
mov
jb
inc
mov
mov
jmp
xor
dec
daa
ret
loope
rcrb
inc
imul
out
fwait
pushf
sbbb
push
lret
fwait
andl
and
out
cmc
sbb
jnp
sub
xchg
cmp
popa
fdivrs
mov
xchg
or
pop
jecxz
sbb
xchg
dec
test
adcl
mov
loope
push
loope
jecxz
inc
icebp
cmc
jb
scas
dec
out
fildl
stos
jnp
and
pop
scas
push
mov
andl
pushf
dec
push
or
sbbb
jge
ja
jb
sub
in
adc
dec
scas
andb
cwtl
and
adc
dec
xchg
jae
movsl
mov
xor
lahf
dec
push
dec
push
adc
dec
es
shlb
pusha
add
sbb
mov
sub
aam
xor
es
and
pop
jae
mov
push
test
sbb
xor
movsb
adc
xor
jle
pop
in
sarl
dec
daa
sub
cld
dec
int
adc
rcl
add
add
xadd
fiaddl
adc
dec
xchg
movsl
out
scas
enter
shll
loopne
loope
jmp
icebp
lcall
imul
sbb
xchg
push
jne
add
stos
sub
mov
sub
mov
jo
mov
test
push
bsr
int3
mov
or
add
sbb
outsb
addb
or
jo
inc
mov
or
bound
push
pusha
cmp
mov
xor
adc
sub
push
addr16
es
mov
inc
xor
sub
cmp
push
mov
and
stos
push
insb
loop
cmpsb
pop
push
adc
imul
xlat
jecxz
inc
imul
adc
add
cltd
cs
dec
cwtl
and
add
imul
mov
in
pop
jnp
push
sub
loope
inc
jns
les
mov
js
je
mov
imul
incl
or
inc
jae
int
add
sub
sbb
inc
jae
push
es
lcall
aad
push
mov
cltd
xor
dec
push
call
rcll
shlb
inc
mov
xchg
mov
mov
mov
aad
das
pop
ds
mov
jp
xor
mov
rcrl
imul
xchg
sub
fcoml
xchg
enter
mov
or
andl
sub
mov
dec
xchg
push
xchg
push
cmovo
sbb
or
stos
jnp
mov
xor
xchg
mov
fimull
mov
push
gs
adc
arpl
or
clc
fsubs
ret
jnp
sbb
aas
xor
push
hlt
push
xlat
add
add
adc
aam
add
nop
jo
stos
pushf
inc
pop
jp
std
sbb
and
add
jb
in
aas
sbb
jbe
dec
cltd
cmp
popa
jbe
pop
in
jae
lcall
lahf
roll
pusha
sub
add
or
or
pop
pop
cmp
and
ret
sub
mov
fwait
aam
cmp
lret
mov
inc
ds
add
inc
scas
push
call
push
adc
andl
xchg
jae
scas
cmp
pop
adc
adc
enter
dec
xchg
inc
push
cltd
jmp
fisttps
cmpsl
mov
and
and
fiaddl
lret
sbbl
or
inc
stc
bound
ljmp
leave
jne
cwtl
dec
inc
lods
in
loope
nop
ret
mov
xchg
or
inc
mov
push
in
dec
adc
cmp
stos
mov
mov
shrl
stc
xlat
sbb
pushf
pop
orb
push
sbb
add
pop
jno
addr16
mov
mov
or
es
push
jo
jae
repz
push
pop
decl
subb
jae
add
adc
movsl
push
dec
int
lods
xchg
rcl
sbb
cmpsb
push
sarl
adc
scas
mov
cmp
stos
subb
je
je
js
call
xorb
es
aam
add
push
mov
test
cmp
pushf
push
adc
pop
push
pop
sbb
aad
adc
dec
addb
aad
sbbb
lret
inc
add
mov
mov
push
cmp
xor
icebp
mov
lods
sub
xchg
sti
push
sbb
cs
push
push
adc
xchg
and
xchg
int3
arpl
push
inc
mov
dec
cwtl
xor
pop
add
sub
mov
xchg
add
dec
and
lods
pusha
push
adc
enter
aad
adc
xchg
jns
jae
inc
into
loopne
lds
sub
lds
sub
lods
mov
stc
add
xchg
push
sahf
push
cld
into
push
popf
inc
xor
add
or
jb
sahf
cmpl
xor
loope
xchg
sub
test
fsubrs
jo
adc
lcall
lods
rol
adc
jno
cmp
sbb
test
inc
push
popa
add
push
sub
or
mov
lahf
scas
pushf
movsl
pop
xchg
push
rclb
cmpsb
or
adc
inc
test
push
hlt
test
mov
imul
addl
xlat
je
xlat
pusha
rolb
xchg
adc
scas
sbb
mov
test
nop
inc
daa
add
mov
adc
fdivrl
loopne
leave
rorb
cmpsb
cld
sbb
in
cmp
bound
add
push
pop
adc
sub
in
cmp
rcrb
jnp
xor
lock
mov
mov
shrl
xchg
sbb
add
add
push
pusha
xchg
mov
or
push
imul
cmpb
pop
dec
sarl
cmp
lds
push
jo
sub
mov
sbb
insl
cmp
jmp
xor
push
xorl
roll
push
mov
in
cmpsb
adc
dec
cmp
push
jae
or
pop
jns
xor
repz
inc
jae
adc
sbb
movsl
xor
mov
and
add
lock
js
or
lock
cwtl
jo
out
mov
push
pop
add
mov
xor
out
incl
jae
jecxz
xor
shrl
cmp
cmpsl
negl
push
jnp
mov
scas
or
mov
mov
test
adc
int
jo
les
ret
sbb
mov
push
add
in
push
sub
repnz
add
push
xchg
jg
pusha
enter
or
mov
fisubl
add
jg
jg
jne
pop
mov
inc
xchg
sub
pop
inc
jecxz
clc
loopne
addb
or
cmp
shlb
pop
je
push
inc
in
sahf
sbb
ret
cltd
and
xchg
imul
repnz
pusha
add
fstp
js
popa
and
or
mov
xchg
jae
mov
aad
stos
inc
mov
xchg
loope
or
fisubl
inc
scas
ds
xchg
test
pop
test
int
xlat
adc
xchg
jl
ljmp
mov
adcl
add
or
aad
xchg
or
push
cltd
sub
pushf
or
mov
divl
or
jb
pop
test
ficoml
cwtl
clc
popf
dec
sub
sbb
nop
mov
mov
add
popf
insb
pusha
ljmp
push
mov
pushf
mov
pop
jnp
mov
push
inc
scas
sbb
mov
pop
rcll
jge
xor
in
call
hlt
loop
mov
sbb
sti
mov
jae
sbb
push
xor
mov
pop
adc
mov
stos
addr16
push
or
add
sub
jge
sbb
mov
test
mov
mov
jae
out
movsb
inc
addr16
or
jo
test
pusha
xor
pop
jge
add
adc
inc
sbb
adc
mov
xchg
shrb
nop
cmp
sbb
sti
daa
mov
jo
xchg
hlt
mov
out
icebp
push
mul
inc
cmp
cmpsb
push
add
orl
sub
push
sub
cli
loop
jnp
cli
call
addr16
and
or
shl
cs
loopne
es
sbb
imul
jno
loope
and
or
lcall
inc
cmpsb
and
inc
pop
pop
in
sbb
push
push
cmp
jnp
call
std
ljmp
into
fs
sub
sbbb
and
sarb
inc
cmovge
push
cmpsb
sarb
add
xchg
outsb
xor
das
lock
mov
bound
hlt
and
in
decb
stos
xchg
roll
popf
in
in
jl
mov
xchg
stos
lret
jno
cmpsl
testb
and
mov
mov
icebp
mov
jmp
mov
adc
inc
jae
pop
ret
adc
clc
or
and
xchg
jb
loope
fs
sub
jnp
shl
push
xchg
lock
div
jge
enter
jo
stos
add
add
pop
dec
mov
std
add
ret
or
xchg
pop
mov
pop
in
popa
rcrb
arpl
js
gs
lret
clc
xor
shl
repz
test
loopne
jnp
aad
test
shll
cwtl
add
push
addr16
add
add
dec
dec
sbb
adc
cmp
add
sti
cwtl
es
fiadds
js
in
push
out
inc
mov
xchg
mov
and
push
mov
mulb
subb
and
dec
mov
out
mov
jae
push
push
je
mov
imul
add
or
sbb
push
clc
jae
in
jb
mov
inc
mov
pop
jmp
rcll
add
push
jno
cmp
jmp
jb
add
rolb
push
add
imull
add
pop
hlt
xchg
sbb
popf
ljmp
inc
adc
adc
popa
call
mov
dec
cmp
rcrl
xor
push
cmpsb
rcll
push
cmpsb
out
jb
pop
fs
into
rorl
sub
scas
pop
adc
sbb
inc
cmp
add
push
xchg
cmc
mov
sbb
es
xor
or
cmp
pop
jnp
jns
leave
loope
daa
lcall
or
call
sub
shrl
in
mov
loop
inc
pop
popa
stos
sbb
dec
sub
test
adc
movsl
add
push
mov
dec
rolb
or
jnp
push
cmp
mov
push
negl
in
loope
cwtl
xor
jo
jmp
sbbb
push
shlb
jb
jno
push
sub
add
push
aas
inc
bound
dec
cmp
fs
rorb
pop
dec
cmc
lods
and
jb
mov
loopne
xorl
xor
and
add
nop
pop
and
xchg
loop
popa
js
xchg
loope
outsl
inc
mov
push
and
pop
jae
xor
mov
push
xchg
pop
adc
sbb
jae
mov
jo
int
add
mov
jbe
and
sbb
push
test
lock
test
lea
mov
cmp
or
push
ja
jb
xor
sbbb
jae
scas
dec
movsl
sbbb
and
scas
adc
rol
push
mov
divb
xchg
xor
inc
repnz
mov
test
out
sbb
xchg
jnp
sarb
es
lret
xchg
inc
pop
sbbb
add
test
inc
ss
aaa
addb
pop
sbb
push
add
xor
cmp
out
adc
add
jo
and
inc
add
aad
sub
out
inc
mov
inc
jge
inc
loopne
aam
pop
xchg
loopne
xor
inc
jnp
int
cmp
sub
loopne
je
push
jo
lret
in
pop
in
mov
inc
mov
cmc
xchg
jecxz
js
ss
cmp
rorl
cmp
pop
inc
arpl
out
push
inc
sub
pop
das
push
cmp
out
mov
push
in
aas
sbb
scas
lret
dec
jae
and
mov
gs
mov
pop
in
mov
push
movsl
mov
push
mov
sbbb
pusha
push
rcrb
shrl
adc
adc
cmp
xor
lods
adc
dec
jge
fdivrs
and
mov
mov
test
sub
loopne
sbb
xor
add
adc
xchg
xor
push
bnd
mov
sub
sbb
movsl
movsb
inc
lea
jg
pop
add
std
or
or
push
cmpsb
mov
aad
push
inc
push
push
fstps
sahf
aas
test
add
addl
clc
inc
loopne
in
orl
into
ljmp
sub
popa
out
add
push
mov
adc
pushf
or
popa
xor
ficomps
cwtl
mov
popf
dec
sbb
cmp
or
cmp
clc
add
sbb
push
gs
scas
sbb
cli
jmp
push
ror
push
cs
jg
test
sbb
stos
adc
mov
inc
cmpsl
dec
loope
or
push
push
and
cli
and
out
and
sbb
nop
push
sub
or
stos
push
cmc
test
adc
mov
xor
mov
push
push
scas
jb
loope
into
xchg
lea
test
adc
xchg
and
pop
xchg
dec
in
scas
ds
leave
cmp
push
ret
pop
inc
int
adc
push
inc
adc
xor
push
jae
or
xor
insb
mov
sbb
xor
aam
inc
or
dec
scas
fsubl
ret
mov
jae
add
and
mov
shrl
mov
dec
mov
mov
pushf
xor
shrl
xchg
cwtl
or
pop
jmp
mov
xchg
aad
inc
loopne
dec
and
jnp
into
gs
loop
xor
inc
push
insb
add
jmp
pushf
add
fidivrl
ret
xor
imul
pop
pop
xor
add
add
roll
cmp
cmpsl
mov
repz
test
xor
ja
andb
mov
rcrb
xchg
xchg
mov
xchg
rorl
or
out
pop
xchg
sbb
xchg
jmp
jmp
jg
mov
xchg
dec
lods
rorl
and
cltd
pop
add
les
or
test
push
pop
in
jp
loop
jnp
inc
rorl
add
jp
mov
into
out
jnp
test
sub
xlat
mov
cltd
pushf
orb
fists
or
aas
leave
adc
mov
inc
mov
mov
adc
or
rcl
ss
cmpsl
addb
xchg
cmp
popl
pop
sub
sub
dec
imul
push
push
jge
mov
mov
ret
mov
add
push
push
xchg
sahf
adc
add
into
inc
mov
jg
jmp
and
and
clc
and
pop
cmc
stos
or
xchg
cmp
daa
inc
inc
scas
jmp
imul
test
mov
inc
xchg
gs
dec
inc
shlb
jo
aad
or
lcall
inc
push
adc
ja
jb
or
mov
push
adc
jb
inc
add
dec
int
icebp
inc
mov
cmp
insl
dec
xor
loopne
lret
negl
stos
cmc
jnp
sbb
cmp
inc
out
jae
mov
les
je
testl
dec
push
jnp
inc
popl
mov
adc
fcomip
push
add
inc
movl
add
aas
or
sbb
xchg
sub
adc
add
inc
das
inc
cmp
xor
push
ds
and
outsl
xor
sub
push
mov
daa
mov
stc
lock
sub
out
cwtl
add
mov
pop
jb
inc
mov
popa
das
adc
sub
jnp
xor
fiaddl
ret
push
mov
imul
cmp
or
pushf
stos
dec
out
jg
mov
sbb
test
daa
popa
sub
lea
popa
mov
inc
orb
add
in
mov
cmp
sub
gs
ljmp
pop
clc
fisubl
or
push
cs
mov
lock
pushf
jo
push
jo
mov
adcl
bound
jge
cmp
pusha
mov
mov
or
mov
sub
inc
xchg
xchg
dec
orl
cmp
push
cmp
mov
popa
roll
and
dec
jns
xchg
stos
shlb
add
jne
scas
stc
or
enter
push
xor
dec
int
jae
imul
loopne
sbb
aaa
pop
dec
ljmp
inc
add
mov
jg
cmp
lret
test
push
or
scas
cmp
inc
pop
stos
xor
scas
push
pop
push
inc
scas
mov
mov
das
stos
add
fisttpll
stos
ja
sub
jge
sub
inc
sbb
in
pop
mov
arpl
repz
sahf
sub
dec
lds
cld
gs
roll
push
inc
scas
dec
adc
fmuls
inc
adc
aad
outsb
jo
movl
and
sbb
shll
pop
mov
rorl
hlt
sarb
push
adc
int
cmc
ja
daa
fistpll
cwtl
mov
cmp
dec
inc
cvtpi2ps
lock
push
xchg
inc
pop
push
divl
add
arpl
sub
and
and
nop
cmp
mov
popa
adc
pop
sbb
xor
lds
add
xor
imul
mov
out
add
sbb
inc
daa
push
addr16
inc
sbb
sarl
xchg
shl
push
cmp
push
add
inc
mov
shll
lods
cmp
out
mov
pop
xor
or
and
popf
mov
nop
xor
jo
loope
adc
or
movsl
dec
pop
jae
je
and
outsb
das
loopne
int
pop
fbld
mov
xor
xor
outsb
es
filds
imul
pushf
addl
add
loopne
inc
or
pusha
rolb
push
sub
push
scas
stos
lret
add
and
mov
adc
push
jo,pn
and
or
or
shlb
inc
add
fsubl
pop
or
add
xor
dec
inc
pop
js
push
inc
es
dec
lods
xor
mov
xchg
add
add
std
sub
mov
inc
xor
sarl
push
pop
adc
dec
cvtdq2ps
sbb
test
push
sbb
mov
ret
add
test
popa
mov
xchg
sbb
push
int3
iret
pop
orl
pop
pop
cld
ret
adc
lock
lods
test
rclb
jecxz
lret
or
das
pop
jge
es
pop
lcall
in
sbb
mov
roll
lret
pusha
pop
push
xor
loopne
add
dec
es
lret
fmul
add
push
into
cld
jb
push
add
ret
push
add
sub
sub
xor
or
xchg
add
or
pop
adc
into
inc
sldt
imul
pusha
add
cs
mov
arpl
cmp
jnp
dec
cmp
xorl
out
gs
mov
lret
pushf
leave
or
pop
sub
jo
push
cmp
je
push
adc
fistpll
int
call
pop
push
sbb
cwtl
xchg
test
xchg
dec
and
add
add
sbb
or
pop
enter
inc
adc
sbb
enter
sbb
xchg
das
mov
and
jb
mov
push
or
sbb
inc
add
call
js
and
xorl
mov
pop
mov
movsl
sbb
inc
cs
stc
fwait
shll
pop
loop
leave
xchg
add
or
andb
push
xchg
push
mov
add
push
xchg
jmp
mov
cmpsl
shrb
shrl
ret
cltd
push
mov
int
popa
ret
push
adc
sbb
fs
push
add
xor
jae
negb
push
cwtl
mulb
leave
insb
add
aam
add
jo
fidivs
mov
push
xchg
or
fs
xchg
cmp
aaa
sub
cmp
cmp
lahf
or
jb
popa
mov
xorb
sahf
adc
push
mov
roll
jnp
jmp
add
clc
xor
stos
push
cmp
sbb
ret
mov
movsl
imul
mov
pop
adc
jp
xchg
push
adcl
cmp
push
je
and
mov
mov
adc
xor
arpl
into
or
push
push
in
test
add
xchg
and
inc
cmpsb
xchg
test
adcb
roll
test
mov
leave
popa
or
or
out
mov
cmc
fsubl
imull
xor
push
jo
cmc
lcall
test
js
add
add
adc
and
xor
push
xchg
test
scas
push
cmp
cltd
mov
add
rclb
orb
clc
addl
push
xchg
not
mov
pop
lcall
pusha
stos
jno
inc
xorl
ret
shl
cltd
or
xchg
and
pushf
shll
mov
inc
mov
mov
xor
sbb
jae
push
imul
or
and
cs
jp
adc
rolb
js
sub
sub
rcll
scas
sbb
ja
outsb
mov
sub
jnp
test
adc
dec
cwtl
push
mov
push
repz
das
imul
and
dec
icebp
out
xor
scas
jae
mov
xchg
and
daa
ret
sbb
lret
repnz
das
push
add
les
add
loope
orl
js
xchg
add
mov
or
dec
neg
aam
shrl
jae
sub
pop
pushf
adc
pop
adc
sarl
scas
inc
es
shrl
xlat
nop
loope
loope
pop
hlt
push
dec
scas
pop
xor
fiaddl
inc
mov
jmp
or
and
sub
cmp
cmp
dec
cmpsl
adcl
shrl
sbb
jb
mov
sbb
mov
xchg
and
scas
mov
dec
addl
int
outsb
cs
jae
aam
push
cmpsb
jbe
pop
add
mov
sub
call
fs
adc
or
fs
mov
inc
cltd
and
cmp
push
inc
push
in
mov
adc
mov
arpl
inc
mov
xor
jge
or
out
sub
or
push
push
xor
sbb
push
jae
push
scas
pusha
jnp
pusha
mov
js
add
enter
lret
xchg
sbb
pusha
mov
test
pusha
loop
add
int
push
fwait
test
jae
or
std
xor
jmp
xchg
cs
add
sub
dec
xor
fmull
lcall
daa
cltd
jo
loope
fcoml
addb
lods
ret
cmp
mov
aad
jo
xor
lods
and
pop
andb
pushf
test
jo
jmp
mov
rcrb
inc
int
or
lcall
cs
mov
pop
add
push
adc
into
jo
add
sub
mov
fnsave
push
cmpsb
arpl
pushf
mov
out
inc
fildll
inc
imul
outsl
scas
jg
inc
mov
jg
jge
jbe
jge
cmp
lds
loopne
push
fstps
mov
ret
mov
pop
add
mov
sbb
scas
out
insl
pop
jne
push
addr16
js
aam
bound
adc
test
add
cmpsb
jp
cmp
scas
mov
cmpsl
adc
rorl
call
incb
out
in
sarb
loopne
ret
aad
std
pop
int3
int
jne
xlat
jns
jo
add
test
cmp
cmp
ret
mov
pop
je
sbb
mov
jno
leave
shlb
mov
xor
push
jb
xor
cmp
adc
ror
inc
jno
xchg
mov
mov
and
aam
mov
jo
cwtl
sub
mov
or
push
rorb
out
in
cmp
push
cltd
cmp
lock
xor
aad
inc
in
xchg
jecxz
jne
push
push
xor
cltd
sub
hlt
jge
jnp
mov
inc
loope
mov
pop
scas
sbbb
jbe
into
push
add
sub
repz
fmuls
adc
das
bound
lahf
mov
orl
popa
imul
popf
inc
mov
sbb
or
loopne
and
add
stos
cmp
lea
xor
dec
je
mov
sbb
pop
in
jbe
inc
xor
pop
icebp
or
mov
cs
push
xlat
cmp
jo
cmp
test
out
xchg
adcl
push
mov
pop
iret
jae
adc
pop
cmpsb
out
push
mov
andl
push
movsl
js
xchg
ret
pop
mov
mov
mov
mov
push
scas
out
and
sbb
std
enter
mov
aad
mov
inc
jnp
shl
imul
xchg
push
and
jmp
cmp
mov
inc
mov
sbb
jnp
negl
sub
aad
pop
or
aad
cmp
xchg
loopne
xchg
roll
cmc
femms
or
jge
adc
sbb
xchg
push
jae
cmpsl
subb
push
pop
cwtl
call
int
enter
cltd
cmp
sub
or
xor
daa
es
xor
jecxz
or
push
cmp
xchg
rolb
je
sarb
and
sbb
xor
and
or
adc
rcrb
dec
cmp
adc
mov
xor
call
mov
dec
daa
insl
es
cmp
push
inc
fiaddl
cwtl
pop
mov
sbb
or
xchg
inc
sub
sbb
stos
leave
shll
jbe
mov
pusha
push
bt
jo
dec
adc
ret
mov
xor
mov
jnp
jo
push
mov
call
cmpsl
fsubr
shlb
ret
dec
cs
mov
in
imul
jb
stos
sbb
inc
sub
sbb
das
push
lcall
xor
inc
cs
xor
test
test
mov
addr16
imul
ret
iret
sub
jmp
xchg
xchg
jmp
add
cmp
add
rorb
inc
das
adc
repnz
xor
mov
add
stc
add
sub
loopne
push
stos
inc
jno
subb
and
in
adc
xlat
cmpsb
add
pusha
cmp
xchg
mov
inc
push
rorl
xor
add
cmpb
sbb
ljmp
pop
shl
and
shl
and
jo
cmp
cmp
test
jb
jg
push
mov
ss
stos
test
push
mov
sub
mov
testb
mov
sub
into
inc
sbb
adc
adc
adcb
mov
clc
ds
jp
push
clc
mov
cmpl
cmc
lods
adc
movl
and
shlb
ds
xor
test
jo
jns
rcl
gs
addr16
int
push
add
mov
push
cmpsb
jo
jb
cmp
push
xor
push
pop
pop
fs
mov
push
push
mov
dec
pop
incl
mov
addl
dec
lret
mov
sub
add
ljmp
jns
push
push
adc
inc
cmp
loope
pop
xor
and
jo
xchg
cltd
pop
jo
sbb
cmp
mov
cmp
pop
loop
sbb
or
add
jg
pushf
mov
shlb
and
push
push
push
pop
push
dec
scas
xchg
sbb
mov
out
pusha
dec
es
xchg
bound
push
mov
jl
pop
jnp
dec
pop
mov
xchg
adc
movsb
in
mov
out
mov
mov
cwtl
cmp
mov
jo
mov
enter
aad
icebp
rcrb
dec
call
test
into
rorb
mov
int
out
out
mov
imul
jnp
and
cmp
or
xchg
xchg
movsl
notb
xor
mov
xchg
sub
inc
adc
test
xor
test
mov
xchg
adc
inc
jno
stos
jecxz
adc
lcall
adc
mov
pushf
add
ljmp
or
jb
or
cmpl
mov
lock
cld
push
adc
rorl
push
ds
xchg
sbbl
mov
stos
popf
xor
insl
test
int
lret
arpl
adc
adc
stos
mov
push
inc
js,pn
addr16
push
cmpb
orl
add
addb
add
push
das
add
das
mov
rclb
add
push
push
pusha
xchg
mov
fimull
inc
js
inc
sbb
mov
rolb
gs
out
add
mov
test
enter
lret
dec
cltd
mov
loope
or
sbb
pop
adc
shll
cmp
mov
xor
hlt
jne
or
fs
push
in
pusha
cmpb
jae
stos
mov
adc
stos
andl
mov
dec
pushw
scas
ret
mov
or
jbe
gs
loope
cmp
es
lret
xchg
xor
loope
hlt
push
fldl
sbb
xchg
jnp
and
iret
xchg
push
inc
sbb
and
sbb
push
xor
mov
ret
loope
push
pop
imul
jb
decl
cmp
sbb
or
add
push
add
xchg
sbb
cmp
sbbl
adc
add
cmp
mov
sub
scas
push
hlt
pop
jge
pop
mov
hlt
pop
adc
out
cltd
or
cmp
ljmp
or
hlt
outsl
pop
add
and
into
daa
sub
out
mov
jb
xchg
mov
mov
adc
and
push
shrl
inc
mov
or
stos
daa
test
inc
je
pop
sbb
pop
es
hlt
cmp
filds
cs
test
mov
addr16
adc
loope
xchg
ret
and
jb
or
and
int3
sbb
es
bnd
push
nop
cmp
roll
adc
xor
cmp
dec
ljmp
xchg
scas
and
pushf
ljmp
sbb
scas
aad
divb
je
daa
mov
cmp
push
cmpsb
cmc
outsb
adc
or
sbb
mov
sub
sbb
cmp
fs
sbbb
mov
sub
jb
add
cmp
lcall
or
adc
pop
daa
add
xchg
push
mov
sbbb
andl
test
jnp
pop
int
or
js
mulb
insb
icebp
adc
dec
pop
jne
scas
test
sbb
add
push
jae
sahf
xlat
add
sbb
stos
add
push
jo
xchg
and
and
add
cmpl
add
inc
mov
imulb
shl
and
dec
sub
orb
test
cltd
and
add
out
loopne
add
aas
xor
jo
adc
or
scas
inc
movsb
dec
adc
inc
mov
or
jg,pt
stos
out
lcall
or
or
and
jb
ret
jne
xor
sbb
dec
mov
push
pop
inc
lods
add
outsb
lret
jecxz
sbbb
inc
or
mov
push
pop
jae
mov
push
push
in
mov
mov
mov
push
xor
lret
mov
andl
or
and
mov
mov
or
ja
inc
mov
mov
push
daa
lods
xor
test
jg
hlt
mov
mov
push
mov
inc
fwait
lret
or
jp
cld
inc
pushf
clc
ret
jb
adc
or
dec
inc
pop
add
cmp
push
dec
jle
adc
and
and
imull
inc
sub
inc
int
lcall
pusha
enter
mov
inc
cmp
in
inc
pop
cmp
or
icebp
xchg
jo
inc
inc
in
scas
push
je
jge
pusha
mov
cmp
adc
pop
jge
out
xor
pushf
mov
ret
test
or
jmp
or
and
adc
scas
and
fcompl
or
mov
xlat
sub
loop
aad
push
push
orl
inc
sub
or
mov
pushf
sub
inc
stc
push
loope
mov
and
ja
inc
in
inc
add
pushf
andb
pusha
rclb
std
adc
inc
cltd
inc
or
push
push
push
add
mov
jo
pop
jno
push
cmpsl
or
sub
push
push
adc
ss
lock
inc
addr16
in
rolb
daa
inc
les
dec
pushf
cltd
add
aam
adc
or
shll
pop
add
rol
sbb
ret
int
sbb
cmc
fdivrp
mov
adc
cmp
stos
push
test
mov
sbb
cmp
sbb
push
int
pushf
lret
push
xchg
leave
gs
lods
xchg
push
inc
cltd
dec
push
ret
add
js
lock
cmovo
xor
dec
xor
lret
repz
xchg
xor
ss
jbe
mov
xchg
jo
xor
shlb
mov
xor
inc
std
or
jo
imull
push
mov
cmp
call
add
jae
lock
scas
sbb
aam
or
pop
push
or
sbb
stos
lret
or
sbb
push
xor
inc
les
pop
into
subb
arpl
mov
mov
clc
push
hlt
or
pushf
or
daa
dec
gs
dec
adc
sbb
in
xor
push
fisubs
push
ret
mov
push
push
xchg
out
mov
rcrb
sbb
stos
jb
sbb
adc
cld
mov
dec
pop
mov
scas
jb
mov
outsl
xor
negb
sbb
arpl
mov
push
or
popa
test
cs
push
mov
mov
insb
addl
add
push
out
xor
sub
pop
mov
jmp
add
les
or
pop
push
xchg
mov
mov
inc
inc
push
into
and
loopne
xchg
jb
xchg
std
andb
jb
dec
push
fnstcw
rcrl
loopne
rcrl
and
cwtl
push
or
sbb
lds
das
cmp
adc
pop
cli
jb
ljmp
pop
shll
sub
mov
mov
and
lret
sub
dec
cmp
icebp
leave
pop
mov
dec
fcomps
cmp
xchg
or
inc
adcl
xchg
dec
xor
mov
cmp
jle
ret
adcl
sbb
sub
cmp
or
into
dec
sbb
jno
sbb
lret
loopne
loopne
jno
shrl
inc
pop
sbb
ret
or
and
mov
leave
push
sub
push
paddsb
mov
inc
sub
push
adc
push
pop
fs
inc
lahf
lret
pop
mov
and
inc
cmp
add
add
xchg
rorl
mov
add
es
jo
rclb
push
xchg
test
dec
scas
mov
adc
add
push
mov
jo
test
cmpsb
repnz
xlat
test
es
shlb
inc
sbb
add
mov
es
test
std
jge
pusha
sbb
ret
xor
adc
lds
mov
test
add
pushf
cld
push
imul
mov
in
cmp
js
test
sub
inc
pop
sub
scas
sub
adc
xor
pop
rcl
adc
xor
hlt
rclb
adcb
or
icebp
add
inc
icebp
call
leave
push
stos
push
mov
push
push
xchg
int
imulb
sub
pop
fnstsw
scas
pop
cmp
add
loopne
insl
jae
les
lea
xor
or
push
jb
push
mov
mov
fstpt
push
rolb
cmp
imulb
out
sbb
scas
jge
insb
rol
xor
flds
in
rolb
jb
dec
in
pop
pusha
cmp
sub
js
xchg
test
ret
add
stc
stc
dec
adc
xchg
pop
mov
dec
adc
pop
iret
mov
cmpsb
xor
or
orb
mov
fsubrs
or
mov
cltd
test
inc
std
int
into
push
jo
push
xchg
or
lret
jae
fisubl
adc
or
push
loope
jmp
mov
inc
push
addl
loope
jae
mov
adc
jb
jo
aam
mov
addr16
lds
add
mov
leave
add
mov
enter
inc
nop
xchg
cmp
add
add
xor
or
push
icebp
test
rcrl
inc
imul
add
lret
ds
es
xchg
lds
xor
xchg
dec
jle
xchg
test
fwait
cmpsl
and
scas
jp
fs
stc
push
adc
jnp
cli
xlat
push
mov
jnp
push
test
or
push
lea
add
es
cwtl
cmp
mov
movsb
sub
push
jae
lcall
cmp
mov
pop
shrl
push
xor
stos
loopne
cmp
aad
test
popf
mov
add
adc
in
mov
pusha
and
mov
dec
push
xor
push
dec
rorb
cmp
adc
pushf
test
icebp
cmp
ret
jae
adc
mov
popf
jb
jge
push
xchg
mov
or
mov
cli
xor
arpl
add
loope
add
pop
mov
jmp
xlat
rclb
orb
mov
enter
xchg
push
add
mov
daa
xchg
fsts
out
cmova
jnp
sub
xor
xchg
leave
pop
sahf
sub
xchg
adc
adc
push
jbe
xchg
imul
push
jo
push
push
loope
imul
inc
rcl
icebp
cmpsb
rcll
mov
ret
out
jo
loop
inc
je
and
outsw
pushf
ret
clc
xchg
aad
inc
mov
test
xchg
push
push
pop
loope
add
out
xlat
fmull
add
icebp
add
js
xlat
inc
push
daa
or
push
inc
loopne
or
and
dec
lock
inc
fs
pop
adc
jo
call
mov
or
roll
daa
push
rolb
xchg
jnp
dec
mov
sub
jns
jne
xchg
ret
insl
xlat
mov
adc
xor
cmp
cltd
js
sub
xchg
ret
ds
xchg
mov
hlt
rcll
jle
sti
pusha
mov
fisubl
cmp
jl
popf
test
xchg
push
xchg
add
dec
subb
fldl
adc
add
rolb
popa
enter
loope
xchg
mov
mov
cmp
jo
inc
fildl
dec
cmp
add
popa
pop
mov
fimull
pushf
xorl
ret
test
and
sbb
push
lds
push
xor
pop
in
push
lods
mov
cltd
repnz
orl
push
js
in
or
cmp
inc
mov
add
xchg
js
sub
push
xchg
sbb
nop
pop
int3
mov
stos
add
inc
cmp
rcl
in
or
and
in
pusha
jo
es
and
outsl
lods
pop
mov
ljmp
outsb
jno
scas
mov
test
cmpsb
inc
push
sbb
sbb
scas
sti
cli
cltd
loope
and
loopne
or
idivl
xchg
push
cmp
and
xchg
or
push
test
push
push
scas
or
sub
add
pop
cltd
xor
xor
orl
pop
and
test
xor
pop
repz
sub
test
and
cmp
pop
cld
push
jns
popa
jb
xorb
adc
pop
sbb
xchg
add
mov
rcrl
cli
daa
cmp
dec
xchg
add
jecxz
aad
lcall
sbb
cs
scas
dec
push
dec
mov
sbb
dec
mov
rolb
je
jge
outsl
mov
mov
push
push
lret
cmpsb
jle
push
jae
jmp
adc
or
sub
fldl
add
add
jae
je
sbb
fwait
mov
js
push
mov
pop
scas
push
out
inc
shll
hlt
in
xchg
int
ret
xor
stc
rolb
divl
cmp
bound
roll
push
icebp
sub
data16
daa
sbb
fidivrs
ret
and
add
adc
out
dec
xchg
out
mov
or
daa
dec
das
mov
lock
or
aas
call
mov
loopne
sbb
sbb
push
mov
xchg
cltd
push
adc
ljmp
insb
sbb
js
lcall
rclb
adc
or
sbb
jle
sti
inc
mov
sbb
push
cld
xchg
ret
xchg
push
flds
std
adc
out
adc
pop
frstor
sub
and
adc
mov
inc
jne
jae
push
js
movsbl
xor
dec
repz
scas
add
cmp
mov
cltd
jb
add
stos
mov
enter
out
adc
lret
push
lahf
add
aad
cmpsb
lcall
or
shll
add
loope
pop
out
jge
add
add
mov
data16
cmp
lea
jne
mov
cmp
lret
in
push
cli
js
ljmp
fs
add
dec
dec
mov
movsw
cmp
add
lea
pop
add
movsb
add
push
loopne
add
or
pushf
or
pop
fimull
or
push
inc
mov
sbbl
xchg
rorl
adc
add
sub
out
insb
sub
adc
xor
dec
push
adc
mov
and
xchg
es
repnz
sbb
call
mov
lcall
dec
mov
jle
lock
mov
cmp
push
lret
loopne
xor
xor
lret
add
les
cmp
fsubs
sbb
xlat
hlt
adc
jecxz
sbb
ja
dec
int3
mov
mov
inc
cmp
add
and
int
into
jae
lcall
clc
cmp
lds
dec
sbb
fwait
jle
test
cmpsl
inc
inc
enter
adc
out
add
inc
pusha
mov
je
into
shrb
add
stc
jb
or
cmc
inc
mov
push
push
mov
pop
nopl
stos
sbb
jb
cmp
in
pop
sbb
jo
add
jo
add
adc
and
or
inc
stc
shll
in
aam
test
sub
adc
mov
pop
mov
dec
mov
mov
inc
mov
nop
popa
movsb
pop
jge
cs
add
cmp
inc
fmuls
icebp
add
movl
push
push
pop
cwtl
jge
xchg
or
xor
push
int
pop
loope
test
or
pushf
outsb
mov
imul
xchg
lcall
xor
lret
add
call
clc
xchg
mov
xor
mov
pop
imul
jge
aaa
xor
ficoms
ret
pop
or
adc
push
xor
push
out
sahf
jb
mov
sbb
lcall
or
or
out
rcrb
inc
push
in
sbbl
and
insl
jnp
test
insb
mov
jl
subb
enter
fs
incl
dec
les
inc
add
cmp
stos
mov
xor
jo
or
xchg
jb,pn
pop
fs
jae
loope
loope
or
push
or
or
loopne
add
push
je
sbb
rcrb
cmp
hlt
cld
sub
adc
nop
push
lock
cmovge
xchg
inc
in
jge
ret
mov
ret
dec
ja
cmc
enter
jecxz
daa
adc
divb
xor
mov
add
movsl
mov
popf
and
inc
adc
fcomps
orl
or
test
fisubrs
or
mov
jo
sub
pop
lcall
addb
sbb
add
and
add
iret
popa
jb
fwait
xor
lcall
jo
pop
xchg
int
mov
mov
dec
icebp
psllw
cmp
push
jge
add
sbb
cmp
mov
lea
orb
pop
push
shrl
push
loopne
scas
or
or
push
mov
mov
loopne
roll
pop
outsl
stos
adc
cmp
and
test
or
sbb
lret
aas
sti
xor
push
adc
xor
or
push
test
cs
addl
pusha
jp
ret
call
dec
iret
jmp
es
loopne
sbb
xor
lock
cmp
jmp
inc
daa
push
sub
loope
jns
inc
aas
inc
or
ret
loope
jle
adc
adc
jnp
and
push
sbb
int
pop
push
sbb
mov
push
mov
add
inc
cs
daa
rcrb
xor
add
fsubrs
dec
lahf
push
xorb
stc
push
cmp
pop
shll
int
cmp
fwait
inc
inc
mov
mov
xchg
ret
rorl
rclb
or
jo
nop
push
mov
mov
fs
mov
jno
or
push
iret
adc
jb
push
pop
add
movsb
add
ret
push
out
xchg
rcrl
fdivrs
fsubl
sahf
jnp
lcall
adc
mov
fisubrl
shr
xor
cmp
xorb
inc
mov
enter
jbe
and
test
stos
or
daa
xchg
add
xlat
int3
add
pop
cmpsb
jb
stos
mov
gs
pusha
addr16
cmp
popa
jp
popl
jnp
push
enter
mov
push
push
fnstsw
inc
mov
decl
adc
scas
adc
push
repnz
dec
jp
mov
mov
adc
shll
inc
jmp
mov
adc
adc
cmp
mov
cs
out
adc
xchg
push
in
mov
sbb
and
xor
add
jo
ret
inc
xlat
ficompl
add
inc
mov
ljmp
mov
test
sub
je
pop
push
adc
add
jp
dec
add
jo
mov
das
decb
and
xor
scas
mov
adcb
inc
xor
jb
lret
xlat
cmp
sbb
aad
lret
mov
push
add
in
clc
adc
int
ret
inc
mov
inc
jae
xor
scas
pop
rorb
mov
int
ficoms
xchg
leave
in
or
sub
cltd
js
or
push
mov
aad
in
js
or
and
adc
repz
inc
push
jb
ret
xor
adc
pop
xchg
call
test
dec
push
add
mov
rol
dec
mov
jge
sbb
or
js
adc
add
addl
pop
cld
es
sbb
inc
or
mov
movl
mov
pop
daa
add
push
mov
cmp
ljmp
rcll
add
out
push
jmp
call
shlb
or
out
stos
jp
add
icebp
sub
push
lock
or
inc
mov
add
bound
sbb
sub
add
inc
sbb
aas
rcrl
sbbb
out
push
aaa
outsl
cmp
add
dec
adc
gs
loopne
dec
pop
cmp
andl
mov
or
jnp
sbb
add
mov
add
push
fldcw
in
mov
jo
pop
pop
fisttps
fs
jge
mov
scas
mov
push
popf
mov
loope
sahf
pop
jle
es
mov
add
jecxz
sbb
les
fsubrl
inc
xchg
sbb
or
sbb
and
jae
dec
fsubp
sbb
push
dec
nop
lret
test
pop
or
sub
rcrl
popa
and
enter
bsf
mov
int3
cmc
dec
rolb
into
nop
or
lods
pusha
add
out
shll
mov
push
scas
lcall
aam
jb
xchg
in
add
cmp
es
mov
adc
or
adc
cmp
test
mov
cmp
push
adc
ja
sbb
enter
xor
in
pusha
or
test
adc
sub
mov
in
icebp
sub
push
imul
jo
adcl
hlt
sub
jae
add
xchg
push
rclb
or
scas
jbe
or
fstl
or
fcoms
adc
test
xorb
sbb
adc
dec
push
mov
cltd
xor
xor
loopne
hlt
test
lret
sbb
add
nop
das
or
cmpsb
cmpsb
xor
pop
ljmp
push
sub
daa
pop
mov
push
push
add
pop
mov
sbb
pop
dec
fdivs
and
je
sbb
sbb
cmpb
mov
jo
inc
and
addl
nop
call
dec
xchg
add
arpl
hlt
js
sub
loopne
popl
icebp
rorl
push
mov
cmovle
mov
and
sbb
mov
cwtl
pushf
stos
add
stos
mov
adc
push
xchg
int
jae
sbb
rolb
dec
xchg
test
aam
sub
xchg
sarb
dec
sti
cs
mov
roll
sbb
push
sbb
movsl
jge
push
inc
sub
xor
mov
jae
imul
adc
clc
add
sub
add
sbb
orl
inc
cmp
shll
daa
jb
cmp
pop
pop
mov
inc
mov
pop
cmp
jge
in
into
shrb
lock
jo
lret
adc
mov
mov
jne
pop
jle
clc
subl
xlat
pop
daa
stc
lea
add
mull
pop
jnp
cmp
rclb
rclb
insl
or
or
pushf
insl
out
orl
lods
mov
pusha
mov
inc
cmp
cmp
adc
add
xor
bound
push
loopne
aas
jmp
int
scas
call
cmp
jo
mov
adc
das
andb
sub
and
sbb
mov
add
mov
js,pn
xor
or
inc
mov
xchg
leave
jo
movsb
loopne
or
dec
or
mov
popl
fisubl
push
adc
pushf
mov
adc
dec
andl
cltd
mov
addb
stos
shl
push
inc
stos
cmp
sub
sar
outsl
test
mov
jns
ret
add
fidivl
pop
stos
dec
cmpsb
mov
cs
sbb
and
ljmp
popf
and
lcall
mov
clc
add
or
inc
xchg
mov
mov
mov
lret
jnp
mov
out
jae
push
jo
lret
dec
iret
out
ret
mov
jmp
push
add
mov
dec
andb
push
inc
mov
enter
dec
lidtl
push
cld
xchg
pushf
dec
sbb
test
mov
mov
cmp
sbb
or
dec
adc
sub
pop
inc
cs
push
in
xorl
das
mov
and
pop
scas
or
dec
cld
fwait
mov
jae
adc
ret
sti
ret
addb
mov
push
mov
hlt
mov
inc
loope
test
insb
shrl
push
push
and
test
dec
in
test
add
inc
mov
in
adc
pop
idivl
loopew
cmp
loope
xlat
scas
mov
fdivs
pop
or
std
push
scas
adc
and
push
push
push
fstl
or
pop
adc
and
or
lret
mov
add
or
jno
icebp
add
es
adc
inc
popa
jo
jnp
push
mov
sub
es
add
xchg
cmp
outsl
xor
pop
pop
loopne
mov
lcall
jb
xchg
ret
cmc
rcrb
pop
lret
xor
repnz
push
xchg
int
pop
fstpl
inc
pop
fwait
mov
xor
shl
and
ret
add
call
lock
or
jo
addr16
inc
scas
loopne
cmp
mov
lret
sbb
pop
das
mov
cmp
cmp
subl
mov
icebp
jo
or
push
iret
mov
mov
cmpsb
aaa
mov
nop
xor
dec
sub
imulb
mov
push
cmc
shl
jnp
test
test
out
and
sarl
lcall
test
pop
push
adc
daa
sub
fiaddl
loope
adc
inc
pushf
push
or
andb
fisubrl
mov
add
lods
ret
adc
ss
xor
icebp
outsb
pushf
cwtl
cmp
cltd
in
xchg
xchg
jge
lret
adc
inc
xorl
mov
cmp
aas
rclb
test
jecxz
and
pop
mov
xchg
wrmsr
movb
orl
mov
stos
xor
or
enter
xchg
stos
push
ja
stos
mov
pop
xchg
in
insb
mov
sbbb
movsb
lret
jbe
add
jae
adcb
sub
rorb
fwait
test
pop
mov
pop
jae
repz
scas
push
or
inc
push
test
lcall
adc
inc
sub
push
rolb
inc
cmp
mov
les
movsb
fadds
mov
pushf
add
lds
leave
test
adc
mov
loope
mov
or
add
or
jno
in
mov
mov
push
pop
dec
and
push
call
push
sbb
dec
cmp
inc
xor
xlat
sbb
popf
pop
les
pop
dec
add
or
or
xor
add
shll
push
jb
jb
adc
adc
jno
and
movl
jp
cmp
js
bound
sbb
mov
leave
adc
inc
fmuls
push
and
loope
inc
ds
xlat
pop
inc
into
ret
mov
xor
pusha
mov
dec
pop
lea
sub
push
mov
outsl
rolb
out
xchg
fwait
scas
add
aaa
orl
cwtl
push
add
jp
stc
enter
lods
ljmp
inc
or
add
cmpsl
cmp
inc
das
jno
adc
add
cmc
mov
stos
xor
xchg
mov
dec
mov
pusha
jnp
pop
incb
mov
sbb
test
lcall
ret
inc
mov
inc
mov
mov
push
push
cs
jnp
dec
xor
aaa
int3
or
xchg
inc
mov
xorl
sub
add
push
push
jnp
push
shrl
aam
cmp
and
and
call
xor
loope
test
fadds
adc
sub
xchg
jecxz
mov
rcll
push
test
out
or
es
inc
xchg
loop
xor
cmp
adc
rcrb
adc
xor
dec
adc
in
push
std
mov
sub
lret
sbb
cs
flds
jp
das
popa
and
adc
inc
imul
mov
aaa
xlat
test
xchg
stos
push
aad
push
jno
sbb
outsb
in
out
int
push
xor
dec
mov
xchg
sbb
pop
call
dec
dec
mov
or
or
add
subl
mov
xchg
stc
aam
xor
push
xor
arpl
cmp
stos
call
dec
pop
and
cltd
jo
pop
mov
add
sbb
ret
sub
and
sbb
xor
popa
xor
gs
jg
or
mov
leave
in
cmp
push
pop
js
pop
aad
fmull
cmp
js
cs
pusha
mov
es
mov
jo
lret
stos
jo
enter
xchg
push
pop
int
and
nop
mov
adc
cltd
mov
add
sub
out
rclb
sbb
lods
jnp
orb
or
ljmp
ret
xor
dec
sbb
mov
jge
cmpsb
and
cmpsb
push
rorb
out
add
jge
adc
loopne
inc
inc
jb
mov
adc
pop
push
dec
jno
fmull
dec
xor
and
mov
xorb
pop
dec
or
frstor
cmpsb
add
leave
fisttps
orl
fs
cmpsb
xor
mov
sub
clc
in
pusha
xor
icebp
idivl
jnp
sbb
xor
jge
inc
mov
rolb
arpl
scas
or
ret
mov
fsubrp
mov
add
jmp
pop
clc
push
jg
dec
xchg
lret
cli
pop
or
sbb
adc
push
push
mov
xor
mov
inc
inc
int
jb
stos
and
mov
xor
icebp
mov
mov
mov
sub
mov
inc
je
and
in
aam
ret
aas
push
push
in
js
ret
sbb
aad
or
adc
and
sub
push
je
pop
sbb
inc
add
ret
lret
add
or
adcb
jecxz
das
dec
inc
add
dec
cmp
gs
int
xor
and
adc
mov
js
das
push
adc
out
jno
daa
lret
xor
push
inc
pusha
add
inc
pop
loop
dec
ret
sub
adcb
xchg
push
jno
pop
xchg
pop
cmpsb
jmp
sbb
cltd
mov
adc
jmp
fidivl
cmp
enter
lods
aam
cltd
dec
into
inc
scas
cmp
pop
dec
popa
xor
aas
xorl
jo
mov
inc
lret
mov
test
cwtl
sub
cmp
mov
loope
push
cmp
xchg
sub
loope
std
mov
cs
daa
das
push
in
or
adc
fimuls
push
les
push
push
jnp
inc
scas
andl
sti
dec
add
add
inc
loopne
loope
sub
xorb
stos
mov
and
jo
aam
paddd
mov
or
test
dec
scas
lret
push
fists
faddl
pop
es
pushf
dec
or
stos
push
mov
fistpll
cmp
lcall
sarl
cs
xchg
or
cmpsb
ja
adc
sbb
push
or
mov
addr16
rcll
mov
cmp
iret
lret
stos
and
xchg
or
cmc
or
sub
insl
push
jnp
aam
mov
addl
inc
rorb
and
cmpb
jae
xchg
add
jno
fidivrs
add
sub
mov
add
call
jle
rorb
adcb
or
xor
xchg
add
push
add
push
popf
popf
jecxz
adc
push
xchg
je
js
lret
cmp
ljmp
js
leave
or
je
push
push
adc
mov
xchg
mov
adc
push
pop
cs
xor
or
sbb
sub
aam
arpl
aad
sbb
mov
lea
or
test
iret
leave
fs
cwtl
adc
jo
shlb
adc
lret
stos
lods
xor
mov
add
std
sbb
sub
or
inc
loopne
pop
jno
pop
pop
adc
fistpll
and
jns
dec
adc
jecxz
mov
lock
adc
cmp
inc
cmc
es
push
mov
jb
sbb
pop
cli
ret
out
movsb
xlat
or
mov
andb
add
mov
adc
push
add
cmp
lea
fiaddl
test
pushf
imul
or
test
test
sbb
xor
inc
shll
je
and
pusha
test
and
leave
adc
push
pop
sti
in
hlt
inc
pop
sti
push
add
cmp
cmp
push
lods
lcall
xlat
or
jp
push
add
mov
stos
and
cmp
mov
iret
inc
xor
and
bound
lods
les
mov
push
lea
orl
jge
loopne
add
adc
popa
or
or
or
loope
out
xorl
gs
aaa
or
dec
cmp
jl
sub
adc
add
mov
fs
push
cmpl
jb
adc
jae
pop
xorl
mov
adc
mov
sbb
push
sub
sbb
pop
dec
cli
adc
js
scas
mov
and
pop
stc
add
cmpsb
sbb
stos
andb
mov
pop
daa
scas
mov
popf
sbb
ljmp
sub
dec
enter
scas
rcrb
or
jg
xor
or
stos
push
add
dec
fdivr
push
lods
push
add
daa
xchg
hlt
cmp
repz
pop
mov
cmp
add
xchg
cmp
xchg
add
adc
xor
dec
add
or
pop
andb
stos
test
and
xor
jb
loop
sbb
jno
and
mov
lret
les
fsubrl
adc
loop
add
das
sbb
mov
push
lods
fdivr
xor
and
cmp
subb
loope
add
dec
mov
mov
mov
push
cli
jmp
add
cmp
lcall
mov
lods
cwtl
mov
out
or
or
dec
sti
loop
dec
cmp
setle
cltd
or
inc
jno
inc
or
pop
cwtl
ljmp
sbbb
sbbl
inc
lods
mov
dec
dec
scas
pop
int
daa
and
sub
xor
mov
loope
adc
xchg
lds
jb
jae
or
dec
popf
sub
xorb
pop
mov
in
dec
inc
cmp
daa
pop
scas
and
ljmp
cmpsb
std
je
pop
mov
jno
mov
add
push
xchg
add
aas
xchg
notl
stos
rclb
loopne
add
loope
adc
pop
push
shr
popa
add
push
cmp
imul
xor
daa
xchg
cmp
cmc
in
adc
push
addr16
into
inc
cmp
nop
mov
pop
sbb
mov
sahf
pop
pushl
sbb
mov
sbb
loopne
jbe
sub
enter
xor
shr
inc
push
dec
sbb
test
mov
mov
decl
mov
inc
in
push
mov
shlb
cmp
cli
pop
cmp
adc
add
sahf
add
push
push
xor
dec
ja
rolb
inc
inc
dec
test
push
mov
stc
adc
and
das
or
fcmove
xchg
or
dec
mov
sub
rorb
push
lahf
jge
pop
push
xlat
add
adc
add
imul
xor
inc
icebp
test
int
outsb
jg
push
lret
jb
inc
pusha
leave
cmp
add
pop
mov
jo
or
dec
cwtl
push
js
jb
push
push
sbbb
test
addr16
mov
cmc
or
bound
adc
test
je
add
fs
add
int
addl
mov
pop
int
cmp
push
jbe
add
mov
lahf
jge
stos
or
mov
jne
sub
sub
cmpsb
sub
jmp
dec
subb
test
mov
push
xchg
push
xor
add
sbb
add
loopne
test
push
sbb
mov
lea
or
adcl
xchg
cmp
js
subl
mov
ljmp
and
dec
in
add
xor
rcrb
aas
mov
sbb
sbb
lea
popf
or
les
lcall
sub
mov
je
scas
sub
mov
or
loopne
ret
and
push
mov
cmp
repz
rorb
adc
and
add
daa
add
and
adc
xchg
leave
push
rcrl
or
mov
adc
mov
daa
lods
mov
sbb
push
mov
mov
out
push
push
stos
add
inc
aas
add
imul
in
xchg
cmp
jp
icebp
and
loopne
xor
jb
loope
mov
pusha
inc
xchg
out
or
add
lret
sahf
mov
inc
out
iret
inc
inc
daa
insb
loop
add
inc
dec
inc
stc
imul
loope
xchg
or
leave
imul
test
insb
mov
leave
fwait
test
popa
lock
in
imul
lock
lock
pushf
xchg
ret
pusha
jo
rorl
push
push
xor
add
fimull
sub
js
sbb
jb
rolb
adc
mov
inc
push
add
cmp
js
dec
std
hlt
and
adc
sbb
es
push
dec
inc
mov
pushf
lret
push
call
jl
push
push
inc
push
mov
or
push
sub
ret
lcall
test
push
mov
and
or
cmp
inc
xor
mov
pop
cmp
push
dec
test
push
add
pop
dec
add
mov
push
mov
jb
test
ljmp
pop
inc
shr
fisubs
das
mov
dec
inc
pop
xchg
inc
imul
pusha
lret
pop
cmpsl
pop
dec
pop
pusha
das
add
leave
mov
mov
loope
add
in
jo
outsl
mov
mov
mov
sbb
push
into
nop
cwtl
pushl
mov
push
xchg
jmp
adc
loopne
mov
xor
mov
stos
sbb
fdivrl
into
inc
out
aas
pusha
in
addr16
stos
inc
cmp
inc
test
jae
lret
addl
scas
lock
pop
adc
in
stos
mov
shll
sbb
mov
pop
cmp
les
cmp
test
fs
sbb
cmp
mov
mov
mov
mov
xor
in
cld
outsl
mov
daa
sub
and
in
push
das
xor
pop
cmpsb
push
dec
add
outsb
imul
das
pop
sbb
mov
mov
inc
cs
pusha
xor
jb
call
sbb
idivl
sbb
loopne
xchg
jp
adc
lds
lcall
inc
xor
add
fs
stos
dec
popf
iret
imul
xchg
or
xor
push
ret
incl
lret
outsl
inc
or
mov
shlb
pusha
mov
jns
outsl
pop
sub
add
mov
or
das
or
jle
pop
and
sbb
icebp
fmul
addb
cmp
jne
ds
jo
sub
mov
inc
stos
retw
add
push
vsqrtss
mov
xor
inc
xchg
sbb
cwtl
push
sbb
into
add
lcall
cmpsb
enter
sbb
rorl
cmp
xor
hlt
mov
or
shrl
test
xor
pusha
pop
or
mov
and
push
movsb
cmc
pop
pop
scas
jb
cld
pop
mov
lds
mov
add
pushf
leave
lret
mov
cwtl
lret
pop
push
movsl
xor
push
mov
daa
stos
pop
push
and
pusha
sub
mov
push
add
mov
push
add
adc
hlt
lods
cmp
adc
pop
mov
sahf
and
jo
ljmp
lods
aas
stos
cmc
inc
jno
sbb
mov
cmp
pop
xchg
cmp
jae
int
and
nop
or
mov
aam
ss
cmp
adc
xor
sbb
sbb
cmp
mov
adcl
adcl
pop
test
xor
les
add
jge
jl
xchg
jae
mov
push
jnp
inc
add
nopl
adc
test
sbb
lret
mov
mov
mov
popa
ret
xor
push
xchg
lret
repz
popf
mov
mul
push
adc
js
adc
iret
ficomps
push
adc
push
adc
addl
adc
cmp
inc
mov
sub
mov
pop
jae
mov
jb
add
mov
dec
or
leave
icebp
enter
mov
xchg
mov
push
int
fwait
icebp
fisttpl
mov
or
mov
cltd
and
call
leave
xchg
sbb
xchg
movsl
adc
push
xchg
add
push
inc
stos
sahf
insl
or
mov
inc
in
repnz
jmp
dec
cwtl
add
pop
les
pop
pop
hlt
gs
inc
adc
mov
adc
stos
mov
push
fisttps
jge
sub
push
cmc
push
xchg
loopne
imull
mov
rcrl
sub
mov
and
mov
push
mov
xlat
fmuls
lock
mov
add
inc
lahf
push
jae
or
repnz
scas
jmp
jno
push
adc
add
enter
js
test
lcall
adc
mov
push
add
enter
jbe
xchg
test
imul
rorb
in
jb
sub
shll
add
int
mov
mov
outsl
sub
jnp
push
in
and
adc
inc
int
inc
and
fs
push
push
push
out
adc
pop
push
iret
lcall
pushf
lcall
adc
push
add
pushf
sbb
insb
inc
jo
add
xchg
fsubs
sbb
stos
test
push
inc
mov
pop
jns
xchg
and
rcr
or
lret
cmp
add
jbe
inc
test
xor
pushf
inc
scas
mov
fisubl
enter
mov
adcb
sub
jb
ret
push
popf
mov
jge
cmp
jo
movl
mov
inc
shlb
xchg
mov
loope
ljmp
adc
lock
jg
mov
xor
loopne
push
sub
cmp
aas
imul
scas
orb
test
outsl
outsl
fwait
js
stos
mov
sub
test
movl
lock
fisubs
lea
push
into
xchg
test
leave
mov
je
dec
popa
ljmp
loope
lret
mov
jne
test
push
pop
xchg
adc
push
in
xchg
aaa
adc
aam
sti
xchg
cmpsl
mov
movsl
loopne
sbb
test
adc
mov
or
scas
clc
adc
mov
jle
push
push
mov
test
push
out
push
stos
jmp
and
stos
push
data16
dec
add
sub
aas
or
pusha
rorb
pop
mov
push
scas
in
inc
ss
xlat
add
enter
mov
pop
imul
xlat
add
pop
mov
add
ret
pextrw
or
push
adc
xor
and
cmp
cmpsl
push
mov
or
scas
ss
xchg
or
pop
fs
inc
or
cltd
mov
rorl
test
xchg
ret
add
cmp
add
jmp
cs
push
pop
or
movsl
xor
sub
cmp
push
sbb
cmp
stos
icebp
or
mov
pop
pushf
fdiv
adc
pop
jbe
push
add
sbb
xor
or
es
mov
push
outsb
and
add
cmp
in
imul
aas
pop
popa
add
fsub
inc
push
push
mov
or
push
pop
or
adc
in
pop
mov
inc
sbb
xchg
stos
adc
jb
xchg
ret
es
jae
lock
mov
das
mov
stos
sub
jo
sbb
jo
push
push
imul
xor
je
pop
jae
mov
ja
iret
xchg
cmp
push
dec
aam
dec
mov
enter
hlt
sbb
mov
sub
or
mov
cmp
lcall
pusha
icebp
lret
test
ljmp
push
sbb
out
cmp
sti
ljmp
adc
or
cmc
add
cltd
add
cwtl
pop
and
subb
push
or
xchg
mov
mov
xchg
or
or
xchg
inc
mov
sub
and
or
loopne
adc
cld
pushl
cmc
fildl
inc
popa
add
mov
addb
cmp
mov
rcl
adc
push
push
aad
test
sub
nop
ret
loope
push
mov
imul
lock
ret
sarb
inc
push
sbb
movsl
mov
inc
call
mov
cmpb
or
jo
ret
shl
push
adc
call
daa
or
pop
xchg
push
sbb
xchg
sub
xchg
push
cmp
icebp
xor
es
sbb
adc
and
dec
and
pop
test
inc
cmp
mov
fst
pop
out
pop
xchg
pop
jae
pop
sbb
rcll
pop
daa
sbb
xchg
mov
adcl
andb
adcb
add
rol
inc
xor
icebp
outsb
mov
jbe
lcall
pushf
stos
pop
fwait
lret
dec
sub
dec
adcb
das
icebp
div
sub
xor
icebp
sub
adc
inc
sahf
sbb
adc
add
test
lock
lcall
jae
test
shrl
mov
sub
cwtl
dec
test
adcb
aas
mov
mov
pop
shlb
nop
loope
or
add
hlt
jecxz
fcompl
andl
addl
dec
jae
push
or
ret
sub
out
pop
cmpsb
cmpsb
inc
andb
daa
cmp
dec
in
add
mov
inc
pop
outsb
icebp
jne
jmp
lock
mov
aad
mov
cs
cmp
cmpsl
jo
jae
lds
std
loop
jb
loop
mov
cmp
lcall
inc
out
xchg
adc
mov
push
adc
test
in
mov
xchg
xor
sbb
fidivl
test
add
in
inc
dec
xchg
and
fcmovnbe
or
sbb
xchg
mov
adc
cmpsb
jl
xor
jae
pop
sbb
adc
subl
pop
or
xlat
stos
jecxz
mov
testl
dec
std
mov
daa
and
ret
mov
shll
addr16
jp
xor
aad
mov
lods
cmp
sub
jb
adc
mov
icebp
mov
cs
jno
cmp
hlt
xor
xchg
sub
jnp
icebp
or
or
daa
in
sub
mov
pop
scas
pop
xchg
and
xchg
mov
fisubrl
sub
shlb
test
ficompl
sbb
mov
mov
outsb
sub
add
and
pushf
add
add
pop
lea
xor
andl
int3
xchg
lret
pop
lea
push
fwait
stos
scas
push
mov
pop
mov
outsb
inc
mov
inc
mov
les
push
into
push
outsl
mov
dec
cwtl
pop
mov
loopne
add
add
mov
arpl
adc
xor
int
cmovae
testl
or
xlat
xchg
or
push
add
jo
dec
daa
or
xchg
adc
cmp
inc
mov
add
inc
ds
jae
lcall
and
lea
lods
test
mov
inc
ret
icebp
mov
cli
or
test
pop
adc
cwtl
or
push
rcll
and
dec
es
in
sahf
mov
add
and
dec
outsb
xchg
dec
loope
push
pop
push
mov
mov
mov
js
or
ljmp
sbb
jg
sbb
jb
loop
cmp
jb
push
popa
mov
add
test
incb
sbb
cmp
mov
sahf
pop
pop
or
fbld
lods
xchg
mov
in
jnp
jmp
es
sbb
mov
nop
mov
ljmp
in
mov
add
pop
pop
xor
xchg
cmpsb
sbb
add
jb
cmp
sub
cmp
loopne
push
sar
xchg
add
pop
mov
pop
loope
pop
rorl
in
add
aaa
outsl
jecxz
xor
inc
sahf
popl
and
ja
add
mov
or
mov
addl
enter
es
jl
ljmp
pop
sbb
add
mov
push
cmovo
int3
call
or
push
xor
add
push
xchg
xchg
jae
loopne
sbb
jo
cs
icebp
xchg
xor
subl
pusha
jp
mov
pop
or
inc
insb
sub
test
and
cmp
dec
lods
cltd
lcall
lcall
cltd
int3
mov
fs
loope
ret
orl
std
lahf
add
test
add
popf
jo
call
addb
sbb
lcall
pop
add
adc
into
mov
inc
cltd
cmp
js
rorb
sbb
addl
add
and
push
xor
lahf
inc
add
inc
add
push
inc
scas
test
jo
imul
add
addb
test
scas
xor
rcrb
out
add
jb
out
shll
jb
enter
mov
fldcw
jne
jns
mov
add
lods
inc
sahf
jo
loopne
lds
sbb
xchg
add
arpl
test
adc
pushf
add
inc
shl
jmp
sbb
adc
xchg
fldenv
jp
sbb
jae
push
ja
inc
cmp
or
sub
fstl
sarb
mov
cmp
lret
adc
imul
jle
adc
cmpl
movsl
push
xor
sarb
adc
and
xchg
xor
xor
aaa
sub
jbe
mov
inc
rcrb
cmp
cli
ja
inc
cmp
lahf
add
cmpsb
lcall
pop
mov
enter
andb
jo
xlat
cltd
adc
sbb
or
jb
shll
add
movsl
pop
hlt
xchg
sbb
xchg
mov
sub
and
dec
icebp
add
and
mov
push
aas
add
scas
pop
inc
repnz
scas
inc
outsl
in
lret
sub
loopew
xor
cmp
mov
test
xor
xchg
mov
andl
xchg
ret
in
aaa
lret
fsubs
mov
mov
jo
mov
lods
push
test
push
into
cmp
and
push
and
or
add
sbb
sbb
inc
fisubrs
adcb
push
xor
aam
inc
lahf
in
les
or
mov
xor
fdivrs
loopne
mov
cmp
mov
xor
pop
ds
scas
out
jl
xor
daa
shl
xor
sub
xchg
or
add
xchg
addr16
lock
test
xor
out
pop
cltd
jb
fxch
add
inc
or
icebp
or
push
lds
push
inc
mov
aad
out
sbb
inc
in
inc
loopne
mov
jp
arpl
inc
movsl
xor
mov
xor
addr16
inc
add
sub
xchg
sub
mov
push
or
test
ljmp
pop
loopne
loope
lret
test
mov
add
iret
mov
mov
push
jbe
mov
sar
jle
pop
push
pop
int
cs
cli
daa
out
cltd
mov
adc
gs
mov
jnp
add
xchg
popa
mov
xchg
addr16
lcall
fwait
inc
pop
xor
push
inc
add
and
pusha
sub
mov
sub
aam
inc
aad
add
lods
ret
enter
or
add
in
mov
mov
inc
xor
sub
dec
sahf
cltd
and
es
mov
inc
in
or
adc
add
adc
incl
inc
sub
add
mov
sbb
mov
sub
ror
loopne
jb
add
loope
mov
rolb
daa
ljmp
sub
add
sbb
xlat
sbb
push
icebp
jne
mov
addr16
pop
cmp
add
or
inc
xchg
mov
sbb
add
fdivp
mov
je
push
and
xor
cmp
mov
push
push
mov
loopne
add
xor
xor
cmp
repz
std
insb
sbb
rcll
jae
jno
mov
mov
sbb
pop
mov
dec
sbb
cmpsb
test
xchg
inc
popl
mov
icebp
stos
mov
addr16
sub
mov
das
push
sbb
lods
xor
jmp
in
or
mov
and
pop
xor
pop
push
xchg
cmp
and
add
push
jp
fldl
test
nop
shrl
mov
adc
enter
jnp
inc
and
jb
fdiv
cmp
add
sti
rclb
scas
movsl
daa
call
movsb
hlt
or
sar
adc
inc
xor
sub
jecxz
jnp
enter
adc
cmp
lcall
daa
das
ret
lret
add
int3
nop
add
pop
dec
mov
jb
ret
and
cmp
push
lcall
fwait
out
mov
and
adc
ficoml
aad
mov
sahf
push
adc
xlat
pop
sbb
sub
out
stc
ss
sbb
and
push
test
push
aad
scas
ret
xchg
lea
dec
in
jo
stos
pop
jnp
push
pop
es
loopne
cmp
jge
addb
or
call
push
loope
jo
cwtl
push
es
cwtl
dec
xlat
xchg
adcb
add
aad
loop
cmp
xchg
push
push
dec
cmp
and
cmpsb
mov
movl
push
shrl
or
lahf
test
inc
ss
adc
shll
or
mov
push
add
call
pop
adc
and
icebp
lahf
pop
test
in
push
adc
in
mov
inc
iret
loopne
gs
jae
icebp
push
addb
jno
stos
push
leave
mov
push
jl
sbb
jp
pop
scas
mov
add
lahf
xor
aaa
xor
mov
cmp
inc
sbb
add
push
mov
adc
pop
rcrb
pop
stc
in
mov
cltd
mov
adc
mov
push
cmp
rol
xor
pop
cs
pop
sub
mov
sahf
pop
push
and
adc
int
xor
and
fs
scas
loop
sbb
push
dec
mov
push
mov
rol
cmc
in
adc
inc
xor
icebp
push
xchg
leave
outsl
sbb
xor
out
xchg
jecxz
sub
das
out
dec
pushf
or
int
cltd
sbb
adc
pop
rcll
les
test
jno
xchg
cmc
pop
aad
sub
inc
cmp
pop
test
mov
push
xor
inc
arpl
in
rcrl
sbb
sbb
cmp
gs
loope
add
bound
pop
dec
adc
hlt
ret
mov
pushf
mov
es
ljmp
lcall
in
aad
pop
mov
je
push
mov
inc
jg
sbb
sbb
cli
or
hlt
cs
scas
mov
test
inc
loope
gs
sub
pop
push
inc
pop
fsubrs
shll
push
das
pop
repz
shl
xchg
mov
dec
or
leave
mov
jp
jns
addb
cmp
jbe
mov
inc
test
adc
cmp
mov
emms
setns
xor
mov
fimull
inc
aaa
push
es
xor
ret
push
mov
fs
and
rorb
push
pusha
test
fistl
fucomi
sbb
adc
mov
std
inc
cli
aaa
add
inc
cmp
push
outsb
addl
mov
rclb
xor
inc
pop
inc
inc
add
mov
call
test
popa
adc
sub
xlat
add
push
jbe
test
adcl
push
or
xchg
mov
adc
inc
scas
jge
in
inc
add
pop
add
call
dec
out
add
cs
inc
push
push
loope
sti
xor
subl
jb
or
mov
sysenter
sbb
push
sbb
push
xor
scas
pop
or
cmpsl
or
adc
xor
inc
xor
mov
add
test
sbb
push
add
adc
mov
inc
or
call
adc
roll
jnp
jo
pop
clc
fisubl
jo
movsb
rcl
inc
cmpsl
sbb
mov
pusha
jb
pop
cmp
out
pusha
add
inc
mov
mov
xor
xchg
add
mov
cmp
push
movsl
in
stos
popf
or
push
rorb
arpl
enter
repnz
push
aad
push
add
mov
add
add
add
jnp
std
jnp
pusha
push
pop
shlb
cmp
fs
pop
jb
sbb
cltd
sub
adc
subl
out
pop
add
xor
in
push
addb
add
js
daa
gs
je
dec
ret
add
sub
add
mov
push
out
adc
icebp
sti
push
mov
mov
xor
sub
inc
or
loop
mov
popa
leave
cmp
or
cli
aad
mov
push
fwait
jge
or
ret
mov
xor
shrb
scas
cwtl
jo
sub
fildl
call
fadds
push
or
mov
xchg
mov
ret
out
cmpsl
sbb
scas
pop
arpl
push
fmull
icebp
inc
mov
mov
in
mov
mov
je
jb
or
addb
ret
icebp
or
push
push
test
adc
test
push
loope
popl
fdivl
push
out
stos
cmp
cmp
popf
inc
dec
pop
scas
int
sub
in
sbb
add
cmpsw
and
cmp
xor
xchg
xor
pop
adc
cmc
mov
in
push
cmp
xor
pop
popf
push
subl
xchg
dec
mov
ret
stos
and
mov
cli
or
mov
dec
scas
push
mov
push
mov
push
arpl
or
sbbl
mov
xlat
and
cltd
sahf
and
add
add
jo
in
ds
xchg
rclb
movsb
cwtl
push
push
mov
dec
cmp
into
cmp
sub
xchg
jae
test
insl
dec
stos
sbb
push
dec
xchg
cwtd
cmp
ret
push
aad
add
mov
cmp
cltd
enter
mov
or
dec
or
push
or
and
js
jl
mov
push
mov
mov
filds
mov
add
dec
push
rcrl
sub
loopne
stos
push
adc
inc
jnp
xchg
testl
mov
hlt
sbb
lcall
pop
gs
cmp
add
loope
ljmp
inc
push
jb
mov
xorb
push
insb
iret
in
jbe
in
xchg
jp
xlat
orb
test
cli
lods
inc
xor
and
dec
add
inc
mov
inc
jno
sub
and
add
or
hlt
mov
cmpsb
int
jo
sub
sbb
adc
jo
mov
aad
inc
add
sahf
fbld
ret
cmp
pop
adc
pop
inc
push
dec
push
pop
dec
pop
inc
add
leave
cmp
add
adc
mov
xchg
mov
jnp
mov
ret
leave
lea
leave
fisttpll
loopne
testl
mov
nop
xchg
clc
mov
fsubl
lret
pop
pop
shl
or
pusha
pushf
sbb
data16
or
aad
mov
push
subl
add
adcb
cmp
push
test
shlb
jne
ljmp
leave
setne
cmp
xchg
xor
cmp
cmpsl
lret
scas
ljmp
xchg
or
shlb
adc
mov
loopne
and
jns
std
dec
mov
inc
cmp
mov
outsb
dec
xor
rcll
and
stos
or
lds
and
sbb
push
xchg
xor
pop
sbb
cmp
loopne
je
add
out
add
test
xlat
adc
inc
les
mov
cmp
andb
addl
fisubs
push
cld
cwtl
fiaddl
adc
loop
ficoml
mov
cwtl
sub
ja
push
jnp
es
or
mov
jae
jo
data16
imul
outsb
xor
test
xchg
aam
test
xchg
mov
push
xchg
mov
test
push
cltd
inc
sbbb
mov
fbld
mov
out
sub
push
cmp
pop
divl
daa
jmp
jo
jp
sbb
xorl
add
test
notb
mov
xchg
cmp
pop
adc
and
scas
mov
pop
cwtl
bound
je
rcrb
add
sbb
xor
adc
mov
cltd
add
pop
adc
loop
sub
jae
adc
push
mov
mov
cmp
test
mov
xor
xorl
das
mov
movzbl
cmp
ja
cmpl
cmp
hlt
outsl
jo
loope
or
sub
inc
ljmp
jle
rorb
insl
mov
jne
mov
or
dec
fucomi
add
pop
mov
int
daa
lret
sarl
jo
jns
sahf
jne
movsl
jb
jo
lahf
test
xchg
or
dec
sub
dec
mov
leave
and
or
pop
push
into
cmp
roll
enter
aam
rorl
jge
popa
loopne
in
int3
jo
lret
pop
in
push
jae
out
xchg
pop
xor
push
rolb
imul
pop
or
add
mov
sbb
out
inc
das
mov
fisubrl
pop
test
sbb
xor
add
mov
loop
rorb
cmc
inc
add
mov
cmc
push
out
adc
jne
and
loop
cltd
dec
daa
dec
or
xchg
add
shll
xorl
dec
add
dec
inc
inc
mov
loop
push
scas
test
push
insl
pop
inc
ja
sbb
mov
loopne
into
nop
add
fsubl
adc
pop
add
pop
add
cmpsb
jnp
cltd
test
lcall
inc
dec
les
fstpl
push
pushf
sub
adc
aaa
xor
mov
scas
sbb
mov
xchg
adc
lret
xchg
cli
rcrb
and
call
adc
inc
inc
add
test
jne
inc
js
daa
push
inc
loope
cmp
call
push
subl
fidivrs
xor
lea
and
ds
adc
or
out
sbb
sbb
xlat
in
push
aam
jo
or
cmp
sub
xchg
jae
push
scas
hlt
lret
lahf
or
mov
xchg
mov
jb
push
mov
loope
repnz
mov
jecxz
push
loope
push
xor
and
xchg
testb
fimull
push
adc
cmpsl
rclb
adc
pop
scas
jb
ja
add
push
mov
inc
ds
mov
dec
mov
add
loopne
push
sub
int3
or
insb
test
lret
andb
push
rol
mov
cltd
add
pop
xor
push
pop
popa
xor
stc
rorb
and
xor
cmpl
fwait
daa
xor
jo
jg
outsb
add
or
scas
int
inc
scas
sbb
sub
les
pop
out
jb
es
or
pop
jo
stos
mov
push
cmp
gs
movsb
push
mov
or
xchg
inc
push
ljmp
ret
or
cltd
lret
pusha
add
or
cs
popf
repz
xchg
or
add
fsts
jo
jo
or
dec
rorl
push
jle
xor
push
push
daa
xchg
pop
cmp
fisubl
jne
inc
sti
or
shlb
inc
gs
cmp
mov
popa
lea
scas
pop
xor
inc
mov
mov
mov
xor
mov
pop
das
mov
mov
icebp
repnz
lds
aam
outsl
test
insl
mov
adc
ret
fwait
mov
int
jnp
push
push
push
xchg
popl
fs
aaa
out
cmp
ret
lock
pop
xchg
push
add
sbb
mov
pop
xorl
mov
pop
add
add
js
ret
inc
jg
cmp
push
jle
sbb
adc
push
inc
jb
sub
push
out
xchg
stos
mov
ss
sbb
push
subl
rcrb
adcb
add
pusha
push
push
and
int
mov
cmp
loopne
fs
mov
divl
rolb
or
mov
subl
adc
loopne
or
sub
jno
enter
das
inc
mov
cmc
or
sti
incl
arpl
shlb
add
test
push
lret
mov
sub
cmp
lds
xchg
add
adc
inc
cmp
mov
test
adc
jge
sub
dec
rcll
aam
push
sub
jno
add
jae
shl
cmp
sbb
daa
stc
popa
and
jecxz
xorb
and
push
lret
cmpsl
push
ret
or
xor
xor
cmp
xor
cmpsl
pop
inc
in
cmp
mov
push
mov
sbb
push
cwtl
sbb
sbb
jae
daa
sahf
lods
icebp
imul
push
mov
pop
call
xchg
out
in
hlt
jmp
sarb
add
mov
xor
lock
pusha
xor
or
aaa
jbe
adc
mov
xchg
lahf
test
inc
popf
pop
scas
dec
pop
andl
add
mov
pushf
and
mov
in
xor
push
hlt
lret
or
bound
dec
push
mov
aam
adc
xor
and
sub
jmp
decl
jge
xchg
mov
int3
inc
pushf
mov
in
in
jcxz
xor
andb
popa
add
dec
pop
add
sbb
sub
outsb
sub
xchg
jae
fwait
xor
fs
neg
adc
lcall
stos
daa
sbb
lcall
hlt
push
push
int
push
add
pop
and
mov
es
xchg
iret
push
les
mov
and
or
stos
pop
icebp
pop
adc
into
inc
add
int
test
dec
cltd
push
fcoml
and
push
xor
add
gs
decb
sbb
ret
loop
insl
jp
in
cmp
pop
or
test
invd
test
scas
jae
xchg
push
sub
xor
and
xchg
sub
ret
xchg
fcomps
add
cmp
insl
adc
int
mov
xor
add
inc
adc
inc
sbb
sub
shlb
cmp
in
and
mov
loop
or
push
pop
andb
scas
ret
icebp
or
shrl
xchg
jns
xchg
es
inc
shll
pop
jae
in
loopne
icebp
dec
sti
jb
pop
adc
or
sbb
sbb
ret
xchg
popa
jo
or
push
inc
lods
cld
and
jo
dec
jo
cmpb
scas
mov
cmpsl
clc
add
es
cmp
xchg
pop
inc
cltd
mov
cmp
sub
gs
fisubl
sub
cmpl
jb
mov
or
loopne
out
icebp
add
addb
ret
divl
arpl
ja
mov
rolb
mov
lcall
movsl
ss
and
rolb
adc
adc
and
in
xor
inc
iret
add
and
stos
daa
rcrl
or
adc
int3
inc
sub
inc
out
sbb
mov
dec
inc
scas
jecxz
flds
lods
inc
lahf
xor
sbb
popa
stos
out
inc
mov
push
test
dec
sbb
push
pop
push
or
xchg
mov
jl
jno
aam
adc
ret
sub
rorl
or
cs
xchg
sbb
cwtl
cmp
bound
stc
jge
pop
in
add
inc
mov
mov
jmp
sbb
ss
ljmp
or
rcl
insl
mov
lcall
and
pop
adc
push
push
xchg
aaa
and
int3
lahf
xor
inc
sub
cmp
cmp
mov
popf
fnsave
cltd
mov
ror
inc
jae
pop
das
dec
in
inc
loope
call
pop
fisubl
dec
push
out
in
mov
mov
and
addr16
mov
out
xor
dec
mov
stc
sub
add
daa
and
scas
cmp
cmp
or
sub
xchg
icebp
jbe
daa
pop
push
sbb
sbb
and
fs
pop
and
sub
cltd
ss
hlt
and
pop
dec
sbb
rcrb
lea
xchg
data16
push
daa
adc
inc
pop
cmp
cmpsl
dec
mov
cli
mov
in
mov
rcll
and
push
or
xchg
add
popa
xor
pop
lcall
add
sbb
push
popa
add
dec
cmpsb
pop
cs
imul
pop
cmp
roll
push
lock
and
mov
add
fmuls
push
jecxz
sub
mov
sub
cmp
flds
cwtl
sbb
repz
xor
loope
fs
jo
push
lock
ds
cmp
mov
scas
and
mov
or
add
inc
inc
loope
in
mov
add
addb
movl
mov
xchg
loop
add
inc
cmp
add
mov
mov
lret
daa
pop
mov
insb
jge
xor
hlt
add
push
rolb
mov
leave
dec
insl
add
test
cmpsl
or
xor
mov
mov
jge
inc
test
loopne
inc
aad
mov
push
sub
in
inc
cli
sbbl
lea
test
lahf
and
mov
mov
fwait
xor
popf
or
push
or
jg
jge
out
dec
inc
dec
cmpb
push
scas
inc
xor
sub
cltd
stos
push
jo
dec
dec
add
xorb
pop
inc
loope
jno
test
xchg
test
adc
jo
adc
les
subl
sbb
adc
inc
xorb
jae
or
jo
mov
or
or
add
sbb
cmpsb
add
inc
pop
sbb
xor
out
xchg
push
sbb
push
dec
sbb
jae
decb
dec
lods
inc
mov
enter
lret
adc
jmp
push
movsl
dec
icebp
ja
and
cmp
add
lods
push
xor
xor
dec
bound
nopl
sbb
psubw
adc
addr16
jmp
sbb
jno
mov
movsb
push
mov
and
and
mov
pop
scas
imul
daa
adc
xchg
sub
icebp
int
mov
sbb
orb
imul
fs
shll
jb
int
aaa
add
lcall
imul
hlt
test
add
add
aad
push
jae
push
movsb
mov
xor
and
rorl
push
int3
loope
mov
push
pushf
push
es
leave
sbb
andb
adc
or
shrb
orl
pushf
lret
negb
das
imul
mov
cmp
mov
push
jno
jg
sub
add
notb
cmp
ret
jae
or
sub
int
stos
xor
mov
cmc
push
imul
pusha
popw
adc
inc
daa
fisubrl
test
and
jge
gs
push
dec
jb,pn
aas
push
push
daa
pusha
mov
into
rorl
inc
leave
push
mov
sbbb
int3
jmp
add
jno
sbb
inc
add
lret
insl
je
pop
movsb
sti
and
xchg
add
call
clc
sahf
ret
xor
adc
push
mov
inc
into
or
jo
adc
nop
xor
cmp
dec
sbb
sub
clc
test
mov
jge
push
adc
sub
js
inc
daa
jns
push
or
push
pop
push
cmp
jb
mov
flds
push
cltd
loopne
pop
add
mov
pop
mov
inc
sub
cmp
mov
mov
pop
lcall
mov
shll
xchg
cmp
or
and
rorl
mov
sub
subb
decb
pop
sbb
jmp
pop
add
pop
adcl
ret
sub
add
jo
sub
push
jp
sbbl
test
out
loopne
dec
int3
mov
test
push
push
push
add
fcoml
mov
faddl
js
mov
ret
add
rcrl
and
testb
inc
cs
popa
mov
addl
je
sbb
add
sbb
dec
jno
jno
pushf
ret
and
dec
dec
xor
lret
or
shlb
and
sbb
mov
lcall
cmp
push
cmp
add
add
leave
jno
popf
leave
adc
test
dec
adc
xlat
add
je
jb
jae
insb
jns
jae
push
xchg
and
sbb
pop
repnz
adc
adc
shll
push
push
inc
into
sbb
add
sub
lcall
sub
lret
cmc
lahf
xlat
and
cwtl
dec
and
mov
rcrl
mov
lods
addb
pop
sbb
pop
mov
stos
add
dec
leave
flds
or
loop
sub
jge
cmpsb
sbb
cld
es
or
sub
xor
add
repz
xor
cmp
inc
int
add
gs
shrb
add
or
push
adc
pusha
push
mov
inc
xchg
mov
imul
mov
push
sahf
adc
cmp
out
cmp
test
dec
inc
in
ret
push
inc
jl
aad
enter
and
cwtl
xor
jo
inc
test
push
sbb
push
push
xor
inc
xor
inc
loop
mov
mov
test
mull
sbbb
or
xchg
mov
icebp
add
push
xor
sub
jbe
fmul
rol
sbb
stc
jb
push
sarl
push
or
cmc
add
sti
sti
push
adc
xlat
stc
or
inc
or
fists
adc
xlat
push
pop
jmp
sub
add
cltd
sub
nop
sub
sbb
scas
inc
inc
dec
inc
mov
push
adc
aaa
cld
lahf
add
add
sbb
adc
jp
cmc
mov
cmp
ret
pop
add
or
mov
ficoml
dec
inc
jb
mov
je
push
test
sub
popf
insl
sbb
clc
popa
mov
sqrtps
mov
sbb
jge
push
cmpb
add
arpl
cmp
jp
fxrstor
sub
add
jo
xor
shll
push
dec
adc
ficoml
into
lcall
sbb
adc
add
ret
jbe
push
popa
xor
test
xor
cmpsl
loop
add
pop
jne
js
add
and
and
xorb
jnp
sbb
add
pop
mov
add
inc
push
mov
and
jne
mov
in
mov
adc
jo
mov
add
mov
push
adc
adc
loopne
dec
or
imul
lret
into
stc
int
fildl
js
add
jmp
mov
cmpsb
pop
push
sub
adcb
shlb
icebp
mov
call
adc
jns
imulb
push
push
nop
sbb
inc
jle
out
icebp
mov
jmp
popf
in
pushf
add
xchg
mov
dec
mov
adc
sbb
add
pop
adc
roll
stos
push
sub
mov
xor
push
in
mov
jno
pop
sbb
push
and
sahf
loope
jno
cltd
jmp
pop
loopne
xor
pop
xorb
push
repnz
push
push
push
pop
pushf
mov
cmp
addb
mov
aad
cltd
xor
insl
or
push
cmpsb
jmp
xor
stos
adc
daa
scas
add
incl
jge
inc
mov
out
add
out
and
sub
lock
stos
mov
xchg
adc
or
lret
xor
popf
sti
leave
rcl
pop
jge
jg
nop
lret
inc
xor
sbb
push
xor
pop
int
add
clc
andb
add
loopne
jae
stos
mov
xchg
sbb
int
mov
mov
dec
jnp
xchg
mov
add
sbb
aas
std
push
add
fs
adc
xchg
sub
popa
jp
fs
test
ss
dec
push
sub
pop
add
push
mov
ret
test
lock
stos
sti
nop
rorl
mov
cmp
fnstenv
shll
out
inc
outsl
xor
sahf
mov
aam
imul
enter
push
lock
mov
jo
mov
stos
mov
out
inc
xor
addl
shrb
add
dec
cltd
std
mov
inc
push
inc
push
jl
inc
jae
sub
mov
shlb
mov
int
ja
insb
mov
je
inc
pop
mov
xlat
add
adc
jnp
mov
push
das
stos
xor
jmp
dec
popa
and
xor
mov
lret
test
xchg
sub
xor
jae
and
std
adc
pop
push
cmpsl
push
inc
cmp
je
outsl
mov
sbb
adcb
cvtpi2ps
mov
gs
xor
out
test
popf
add
xchg
mov
jo
pop
stc
test
pop
push
clc
aas
push
or
andl
lret
aaa
shr
xchg
add
dec
dec
add
add
cmp
sbb
cmp
ss
popa
stos
xor
mov
sbb
mov
add
adc
jo
xor
inc
xor
data16
fnstsw
or
xorb
out
add
inc
roll
cmp
popf
pusha
gs
sbb
sbb
mov
mov
testb
aad
leave
pop
jae
cmp
jno
addl
inc
pusha
sub
add
add
mov
mov
jno
add
sub
push
cmp
int
fs
jmp
nop
insb
pop
adc
push
daa
popa
push
pop
sub
es
sub
movsb
std
cmc
sbb
lods
jo
pop
scas
adc
adc
add
dec
mov
stos
loopne
xchg
test
pop
push
push
push
imul
mov
jecxz
iret
inc
xchg
outsb
inc
mov
adc
jl
push
mov
xor
hlt
shll
jle
inc
jnp
sbb
sbb
addr16
ficomps
pushf
fwait
push
sbb
psubw
adc
cwtl
addr16
xor
or
fnstsw
lcall
push
jno
xorb
mov
in
push
ljmp
push
into
and
mov
xor
adc
mov
push
orl
jb
call
add
sbb
jp
cs
enter
pop
sub
and
sub
out
mov
adc
sub
ljmp
or
jb
icebp
adc
inc
adc
divl
and
out
pop
and
sbb
mov
rcll
iret
addb
xchg
dec
xchg
sbb
jns
adc
xchg
xchg
cmp
cltd
clc
fnstsw
add
xorb
enter
in
mov
int
and
push
adc
adc
inc
cmp
sub
inc
test
xor
dec
jns
into
add
or
add
xor
mul
mov
lds
adc
es
jge
and
jae
inc
mov
or
mov
sub
fcompl
pushf
ret
push
shr
cmpb
add
xchg
mov
aam
cmp
dec
cwtl
loopne
xor
inc
add
mov
cmp
pop
push
lock
sub
xor
jno
fstl
pop
inc
scas
dec
int
jne
mov
jb
mov
pop
push
push
cmpsb
add
sub
stos
pop
inc
mov
movl
lds
inc
sbb
push
aam
sbbl
jno
in
inc
mov
and
xchg
test
cwtl
lcall
pushf
push
pop
shlb
adc
enter
mov
data16
test
daa
add
or
shlb
mov
cmp
repz
mov
imul
nop
sahf
in
dec
cwtl
loop
adc
inc
pop
test
xor
push
xor
hlt
cvtps2pi
or
enter
enter
cmp
pop
in
addb
inc
inc
push
push
push
adc
push
mov
sbb
mov
lahf
ja
mov
xor
inc
cmc
test
in
cmp
pop
jb
andl
nop
jmp
mov
cltd
cmpsl
push
js
or
ds
add
js
mov
insl
std
sub
pop
and
sub
cmpb
push
sbb
and
aam
iret
aad
adc
xchg
je
inc
orl
clc
lds
mov
pop
in
push
js
iret
sbb
mov
lcall
clc
cs
lcall
imul
es
gs
mov
pop
sub
add
fists
adc
push
jo
sarb
ret
mov
push
push
cmp
int
adc
xorl
ret
pop
cmp
adc
xor
call
pop
lret
inc
xor
and
mov
cmp
push
cwtl
stos
push
pop
cli
movsl
mov
inc
add
adc
or
sub
jge
addl
sbb
inc
insb
add
mov
mov
pusha
scas
roll
dec
out
test
addl
pop
add
mov
dec
fcompl
lret
flds
jae
adc
dec
xchg
jl
les
lret
xorb
and
bound
push
mov
inc
xor
inc
or
or
lock
push
push
mov
popf
cmp
fst
sub
pop
pop
inc
sbb
es
sub
movsl
das
mov
fisubrs
mov
or
xor
call
sbb
outsb
jg
jae
loopne
sbb
loope
call
jb
push
call
add
prefetcht2
loopne
pop
jge
cmp
adc
add
repz
icebp
or
jl
dec
adc
shl
cmp
cmp
sub
lret
aaa
push
pop
gs
cmp
lcall
enter
lret
lret
lock
jo
mov
xor
add
cmpsl
or
add
sbb
icebp
xor
call
sub
in
jg
adc
push
push
adc
inc
les
inc
in
inc
dec
inc
jge
ljmp
xor
push
dec
xor
push
jb
sub
ljmp
xchg
sub
jmp
dec
mov
das
and
mov
shl
add
push
es
cmp
xor
lds
adc
mov
xchg
leave
rorl
xchg
and
pop
add
jp
int
jae
xor
icebp
push
push
and
jb
loop
jbe
and
cltd
cltd
sbb
pmovmskb
push
cmp
xor
bound
in
xor
sub
push
shrb
or
lds
fsub
inc
push
inc
in
mov
adc
sub
push
mov
add
push
adc
stc
or
inc
xor
add
mov
mov
subl
push
xor
lret
mov
jp
lcall
and
mov
lret
enter
cltd
cmp
ret
cmp
mov
js
popa
loopne
inc
mov
xor
dec
xor
xor
nop
add
sub
sbb
mov
sub
jb
int
mov
scas
sub
push
pop
cmp
into
push
outsb
pop
sub
gs
rol
std
mov
loope
mov
mov
pop
xchg
jmp
push
out
add
cs
inc
push
int
nop
test
pop
xor
mov
rolb
in
roll
add
jge
mov
adc
pushf
xchg
lds
scas
push
mov
add
mov
lcall
mov
loop
or
or
les
mov
movsb
lcall
adc
mov
rcrb
mov
int
jle
or
xor
test
es
adc
xchg
in
xchg
jo
sbb
lods
mov
jo
lock
mov
fincstp
inc
mov
sub
push
adc
or
sbb
mov
movsl
push
insl
push
int
in
add
adc
fidivrl
push
adc
shrb
inc
jae
cmp
push
andb
or
or
xor
sbb
outsb
mov
mov
xchg
push
jbe
pusha
sbbb
and
clgi
es
push
cmp
pop
cmp
lahf
sub
jae
and
jnp
push
cmp
mov
loopne
and
xor
adc
adc
ret
adc
push
lret
in
mov
rorb
cmp
les
sub
cmpsb
aad
or
adc
aad
cmp
ret
add
cmp
jmp
dec
sbb
adc
push
xchg
cmpsb
sub
cmc
shlb
xchg
xor
and
xor
jae
inc
mov
in
cld
cvttps2pi
add
sbb
push
inc
jl
movsb
inc
clc
cmpsl
or
xchg
mov
pop
dec
adc
push
loope
cltd
sub
push
sub
cmp
dec
scas
inc
add
sub
addb
sbb
js
sbbb
out
das
add
cmp
pusha
mov
or
and
mov
mov
enter
test
push
mov
and
dec
sub
add
loope
notl
add
in
out
fdivrl
jl
adc
je
in
rcl
std
pop
mov
adc
arpl
sub
xchg
jb
je
push
xor
adc
add
add
mov
inc
lcall
mov
adc
int
pop
lea
hlt
mov
and
or
cmp
push
rcl
xchg
addl
cmp
jecxz
or
in
loopne
cmovo
pop
jae
cs
inc
jae
enter
dec
and
or
sub
mov
xchg
lret
pop
sub
xlat
mov
inc
or
es
jnp
test
dec
push
inc
scas
cmp
cltd
jo
cmp
aam
in
push
adc
mov
scas
daa
daa
dec
push
dec
sbb
xorl
scas
in
icebp
add
gs
add
inc
loope
lods
roll
in
stos
adc
cs
icebp
push
add
testl
sahf
inc
ljmp
stos
enter
xchg
lcall
jg
adc
mov
inc
movsb
adc
mov
rcrb
or
xlat
sbb
addr16
pusha
xor
lret
add
xchg
dec
xor
gs
add
pop
lods
push
jno
xor
pop
jo
call
pusha
leave
inc
mov
stos
loopne,pt
add
stos
js
loope
scas
xchg
mov
jmp
pop
and
sbb
jne
filds
mov
cmp
pusha
enter
xorl
add
nop
lahf
xchg
add
cmp
stos
push
mov
and
lahf
pop
mov
jnp
adc
cmp
inc
pusha
inc
testl
outsb
sbb
xorb
insl
inc
jne
test
cmp
add
push
xchg
lret
adc
mov
cmp
test
inc
hlt
pop
in
subl
mov
or
popf
je
fisubl
fldenv
mov
adc
cvtps2pd
packuswb
rcrl
into
aam
jp
add
adc
rclb
cmp
into
loope
shlb
adc
call
or
mov
popf
push
ljmp
cmp
fbld
pushf
and
jae
shlb
stos
clc
sub
push
or
mov
and
test
and
aam
xor
aam
cwtl
and
inc
mov
or
cmp
sbb
or
xor
mov
in
dec
out
inc
or
inc
cmc
pop
dec
fstl
dec
nop
int
daa
sub
clc
dec
xchg
and
push
rcr
int
nop
shrl
scas
daa
jb
cmpsl
xorb
push
fistps
cmp
push
lods
ret
or
xchg
cmp
push
sub
adc
ret
push
mov
xor
fmull
repz
pop
mov
in
mov
xchg
mov
push
jo
xor
mov
jbe
xlat
leave
in
cmp
cmpsb
pop
scas
addl
out
repnz
mov
adc
add
sbb
outsb
push
dec
loope
add
cmp
mov
sbb
inc
pop
sub
sub
nop
cmp
rcrl
cmpl
add
inc
jb
add
pop
pop
mov
jnp
pop
or
adc
sbb
ficoms
inc
mov
ficompl
dec
sbb
addr16
cmp
xor
xor
mov
mov
add
cmc
sbb
push
int
jmp
ret
fnstcw
adc
and
mull
pop
aam
sub
in
divb
lcall
sbb
sub
inc
add
jae
xor
or
adc
enter
imul
push
xor
sub
icebp
fsubr
jo
mov
scas
xchg
sub
push
and
jp
pop
cmp
subl
sbb
dec
les
jg
push
mov
adc
subl
faddl
loopne
hlt
std
pcmpgtb
sbb
dec
push
add
cmp
roll
addr16
out
cmp
loopne
adc
outsb
adc
stos
push
jmp
ret
sbb
xchg
dec
leave
cltd
jp
mov
aam
cmpsb
adcb
push
mov
push
sbb
repnz
jo
and
mov
in
into
jmp
les
incb
mov
mov
mov
add
xor
adc
mov
sub
sbb
cmp
push
mov
mov
ss
fs
gs
and
pusha
xchg
dec
rorl
mov
jecxz
add
push
jge
fucomip
in
scas
cltd
stos
test
mov
dec
mov
or
inc
jnp
sub
sub
test
subb
ficoml
add
data16
scas
andl
or
ja
sbb
rorb
push
cld
popf
out
jp
mov
jnp
adc
push
or
int3
lret
push
cmc
cmp
mov
xor
insb
cmpsl
and
shll
push
dec
cs
enter
push
xor
add
dec
add
test
cmp
sbb
lret
lds
cmp
loopne
push
sub
fmul
rclb
adc
mov
es
push
or
lret
inc
xor
push
add
mov
cmpsl
or
xor
or
inc
pop
pop
into
popa
jo
pusha
mov
mov
or
cmp
xchg
mov
mov
icebp
les
dec
pop
add
adc
pop
jge
les
cli
push
add
fstpt
mov
out
pop
inc
loope
mov
test
cs
fs
jp
addb
hlt
movsl
pop
dec
movsl
daa
sbb
push
xchg
call
or
js
push
popf
mov
hlt
and
add
push
dec
xchg
mov
inc
orl
call
mov
es
push
jg
js
nop
sub
or
cwtl
ret
adc
cmp
jb
add
mov
sub
and
push
add
int
adc
dec
mov
aad
cmovns
add
adc
into
adc
fisttpl
loope
push
dec
push
sbb
fucomip
lock
loope
daa
lcall
rorl
jns
xchg
and
hlt
ret
add
out
mov
push
lods
push
pushf
sbb
cmp
in
mov
push
jnp
or
mov
cs
push
out
adc
inc
stos
pop
jmp
jg
pop
fs
call
pop
cmp
adc
arpl
cmpb
jae
push
cmp
cli
mov
inc
add
loopne
addr16
jnp
out
cmp
in
into
lahf
sahf
mov
je
mov
dec
subb
xchg
roll
inc
and
stos
jo
inc
ds
inc
inc
sub
das
add
sub
stos
inc
push
enter
cmpsl
stos
adc
mov
nop
stos
pop
adc
or
push
xor
aam
xorb
aaa
push
bound
icebp
jge
sti
adc
and
stos
loopne
sbb
inc
lods
int
lret
xor
jo
mov
fcomps
inc
jge
push
jg
jp
test
jg
loopne,pt
adc
sub
ss
pop
push
repnz
cmp
ljmp
push
dec
and
jge
inc
test
out
call
mov
jb
or
out
cmp
adc
xlat
inc
pushf
push
mov
jb
or
sbb
mov
mov
dec
movsl
add
test
popf
and
mov
push
dec
incl
mov
push
cs
dec
xor
pop
pop
addl
inc
or
nop
mov
dec
shll
and
add
scas
inc
inc
xchg
arpl
jnp
jb
jo
dec
sbb
es
sarb
add
push
add
add
out
pop
jb
dec
mov
add
imul
int
scas
sbb
pop
ficomps
lock
imul
mov
lcall
sbb
xor
fimuls
addr16
fs
cwtl
lret
adc
prefetchwt1
or
sbb
es
push
adc
push
push
iret
nop
xor
daa
pushf
or
mov
cmp
fs
enter
inc
imul
lds
add
or
cmp
scas
adc
mov
pop
loope
mulb
dec
test
dec
xor
pop
pop
cmp
pop
xchg
push
push
adc
adc
cmp
dec
xchg
and
jns
adc
pusha
xchg
std
subb
push
outsb
mov
cwtl
add
hlt
call
sbb
mov
repz
stos
push
into
fs
adc
add
jle
add
mov
inc
xor
orb
push
shlb
jge
mov
das
push
inc
jae
test
stos
push
jno
dec
punpckhdq
cmp
cltd
mov
xor
push
pop
sbb
inc
sub
daa
pop
loope
out
pusha
or
push
sarb
adc
daa
loopne
pop
inc
adc
mov
push
inc
xchg
adc
xchg
mov
inc
mov
ret
jle
and
push
out
adc
pop
sub
jle
mov
inc
jl
pop
shr
or
mov
push
mov
aam
cmpsb
dec
jo
outsl
insb
cmp
adc
fwait
lcall
xchg
inc
movsl
inc
or
rcl
cmp
add
jo
stos
sub
xor
out
push
adc
mov
test
subb
inc
push
pop
ja
or
add
push
push
cmp
lret
push
sbb
es
jg
pop
shrb
mov
pop
jp
sub
push
or
pushf
test
jae
jo
stc
out
enter
mov
lds
cmp
fdivs
jg
and
push
jb
cmpsb
inc
call
dec
and
push
cltd
rep
push
inc
cmp
push
mov
or
call
arpl
dec
mov
pop
and
ret
loope
in
adc
add
pusha
jo
aam
jg
xchg
popa
jo
sbb
jge
ds
add
jg
xor
jmp
or
push
mov
or
ret
imul
push
or
xor
imul
xchg
adc
dec
xor
pop
icebp
push
loopne
cli
es
cs
leave
jo
pop
out
in
scas
cmp
dec
sti
mov
int3
xor
adc
jb
enter
lock
push
js
mov
push
pop
sbb
and
adc
sub
arpl
pop
int
mov
addb
cmp
jnp
mov
fisttpl
add
xor
mov
dec
cmp
in
daa
mov
pusha
mov
xchg
in
prefetcht1
jge
dec
adc
xor
mov
sti
inc
sub
push
xor
insl
cmp
pusha
mov
loope
ljmp
mov
xchg
mov
js
sbb
loop
dec
fs
and
in
push
enter
and
inc
xor
les
popf
xor
cmpb
decb
cmp
add
adc
aad
cvtps2pd
pop
xchg
mov
icebp
sub
shrl
loop
cmp
cmp
dec
leave
push
in
inc
cmp
jp
fs
loopne
shll
jno
cmp
mov
push
bound
inc
pop
jns
movsb
aas
imul
gs
xor
cs
insb
ja
out
filds
xchg
ljmp
lahf
jae
push
sbb
inc
inc
movsl
dec
cmp
shl
inc
sbb
push
or
sbb
cmp
sub
sbb
or
dec
test
pop
lods
cltd
xor
push
dec
mov
cmp
pusha
mov
xor
clc
fs
ret
inc
lock
test
insb
add
jo
inc
sub
cmp
mov
ja
push
jae
mov
mov
ja
sub
xchg
test
adc
outsb
add
mov
inc
das
and
inc
xchg
jae
push
jp
pop
scas
cmp
ret
push
icebp
hlt
add
cmpl
inc
rolb
push
inc
icebp
enter
ds
stos
adc
cmp
mov
mov
push
fs
adc
adc
push
adc
mov
aam
incl
mov
cmp
lds
aam
adc
inc
ret
inc
cmpsl
ja
pop
fdiv
sub
addr16
xor
xor
and
lret
mov
mov
xchg
sbbb
in
pushf
ret
adc
sbb
int
push
and
orl
es
jge
push
add
jge
mov
pushf
jmp
or
adc
dec
inc
adc
orb
push
add
or
andl
lret
leave
icebp
cs
or
adc
xchg
jecxz
xor
cld
in
push
cmpsb
sbbb
lds
icebp
sbb
sar
xchg
cmp
pop
pusha
lahf
pushf
addr16
push
test
cmc
add
loope
popa
cmpb
jb
push
shrl
adc
pop
sbb
enter
pushf
sub
loope
push
ss
mov
outsl
adc
pop
cmp
lods
dec
pusha
push
jne
clc
orb
fisubl
ds
jne
push
sarl
mov
or
add
insl
cmp
or
and
push
or
jnp
pop
jne
ds
movsb
out
cltd
mov
test
jge
lcall
lret
cmp
or
xchg
xor
movb
xor
push
inc
es
adc
push
or
adc
xor
jmp
jno
dec
aad
adc
cmp
push
xchg
lods
jl
add
xchg
add
adc
jne
mov
movsl
xchg
lock
mov
add
jb
push
cmp
arpl
icebp
test
cmp
testb
jo
add
ret
dec
inc
cwtl
or
fdivl
adc
nop
test
fdivrs
rorb
jo
into
pusha
sbbb
lods
dec
cmp
add
push
arpl
push
loopne
into
xchg
aad
jbe
loope
test
add
sahf
and
imul
add
insb
adc
test
xor
mov
cmpsl
xor
loopne
fwait
out
test
loope
or
lock
push
cmp
ja
aas
daa
add
cmp
or
cwtl
cmp
scas
push
insb
jg
xor
mov
outsb
adc
or
loopne
jb
mov
push
jb
push
pop
push
pop
push
cmp
mov
aad
test
loope
xchg
sub
fimull
test
xor
dec
xchg
push
jae
mov
ret
mov
inc
sub
aas
cmpsl
inc
je
pop
push
in
cld
push
mov
icebp
xor
stos
mov
push
fidivl
cmc
call
sbbb
xor
jge
inc
inc
dec
xchg
imul
enter
or
adc
mov
pop
adc
pop
xor
int
rolb
push
xchg
sub
aam
cmp
cmp
add
mov
jo
imul
ret
clc
xor
pop
aas
inc
shlb
in
iret
jo
loopne
xchg
mov
int3
clc
ljmp
adcb
jae
add
test
shlb
mov
dec
inc
movsl
cli
out
dec
in
fmull
add
xor
daa
xchg
sbb
icebp
mov
push
mov
nop
dec
lds
add
daa
pop
pop
negl
fistpl
mov
dec
add
cmp
loope
or
fadds
push
movsl
xchg
push
inc
scas
sbb
call
cs
sti
stos
cltd
mov
popa
sbb
test
leave
test
sbb
push
cmp
xchg
clc
movlps
jo
inc
stos
test
adc
sub
sub
jle
mov
push
in
and
shrl
add
faddl
add
or
daa
xor
iret
push
jae
mov
push
fadd
cmp
push
pop
sbb
mov
and
into
inc
int3
and
or
out
shlb
stos
inc
adc
fnsave
cs
mov
call
and
push
cmpsb
stos
xor
les
push
movsl
hlt
adc
fwait
js
andb
cmc
push
inc
jo
or
xchg
pop
or
pop
add
add
lahf
arpl
xor
mov
pop
xor
es
xchg
mov
movsl
dec
int
cmp
or
cmp
mov
out
data16
add
jmp
sub
and
mov
jle
xor
cltd
add
push
mov
in
and
pop
mov
jae
sbb
adc
xor
test
push
add
test
add
push
data16
js
push
add
and
jb
ret
push
inc
push
in
push
stos
or
out
adc
cmp
insb
sbb
enter
fwait
js
xor
pop
jnp
lock
pop
fiaddl
push
int
pushf
inc
notl
out
adc
add
test
jo
sbb
pop
cwtl
ret
out
inc
inc
stos
pushf
add
cld
jmp
add
cwtl
outsl
orb
data16
pushf
call
hlt
add
adc
pop
push
and
mov
push
cwtl
push
inc
pusha
inc
out
in
push
xchg
jb
sbb
inc
xlat
or
out
in
enter
sub
xchg
xor
or
lret
jo
enter
cmp
rolb
push
push
and
mov
pop
mov
lds
add
pop
test
enter
roll
xor
jecxz
loope
inc
int
jae
dec
ret
in
pushf
in
sbb
mov
xorl
rcrl
pop
push
sbb
dec
dec
and
cmpsl
pop
andl
pop
sub
pop
movb
sub
xor
sbb
jecxz
cwtl
xor
divb
cmpsb
lods
js
pushf
scas
lahf
jp
test
sbb
int3
or
adc
jp
mov
icebp
lock
xchg
xor
pop
push
jnp
icebp
add
lcall
insl
jnp
add
mov
push
in
add
cmp
jo
pop
mov
push
adc
push
sarb
add
and
xor
sbb
rorb
loope
add
push
adc
gs
mov
xchg
xor
shl
outsl
out
add
aam
xlat
sbb
lret
jecxz
push
jb
add
mov
and
fstl
mov
sarl
jb
mov
stos
dec
into
xor
pushf
js
adc
jb
cmp
push
stos
enter
test
lods
ret
ja
ficoml
sbb
sarb
popf
sarl
fidivs
sub
mov
inc
sub
stos
cs
mov
sub
data16
push
ret
pop
mov
mov
pop
imull
inc
inc
hlt
dec
add
adc
mov
adc
frstor
cmc
xchg
leave
sub
mov
sub
dec
adc
sti
push
icebp
inc
rol
jge
cltd
push
dec
or
addl
dec
cli
lods
movsb
ret
pop
mov
add
push
mov
jae
xchg
or
repnz
bound
jb
ret
insl
xchg
add
stos
xor
cmp
imul
pop
lds
cltd
sbb
pop
mov
xchg
jae
addl
loopne
jne
sbb
sub
je
fs
or
movmskps
int
mov
hlt
jb
sbb
out
aad
test
and
rclb
inc
mov
nop
mov
xor
fstl
subl
sbb
loope
pop
cmp
push
jnp
ja
setl
rcrl
arpl
xchg
push
ja
dec
jb
mov
jne
add
cmp
pop
add
sbb
inc
mov
mov
clc
lret
cmp
push
or
std
inc
loop
bound
and
lea
mov
sub
jne
xor
ja
push
data16
daa
sub
test
mov
pop
add
add
loope
sbb
dec
mov
push
push
std
testl
cmpsb
pop
cs
xchg
ja
adc
inc
es
mov
push
fs
pop
xlat
pop
int
sbb
lds
xchg
pop
aad
pop
adcb
fisttpll
sbb
test
jo
dec
lahf
es
push
adcb
sti
push
pushf
cmp
aaa
test
mov
or
sbb
jl
mov
adc
jnp
in
ss
push
push
subb
add
es
outsl
sub
cmpsb
addr16
pop
and
inc
sbb
xor
push
pop
push
dec
pop
cs
push
adc
cmp
sbb
stos
sti
das
cmp
in
and
test
jp
or
mov
sub
add
adcb
fldcw
mov
push
mov
or
jecxz
clc
daa
in
outsb
sub
mov
cld
sub
das
add
jle
xchg
add
mov
add
enter
mov
fisttps
add
adc
jae
push
lcall
inc
js
jo
dec
or
enter
cmp
xor
add
push
es
mov
shl
mov
mov
cltd
or
add
push
jae
je
mov
cltd
pop
jecxz
or
add
nop
push
add
out
in
cmp
inc
dec
int3
inc
jge
loope
cltd
adc
lods
mov
aas
stc
test
push
jae
jne
cmc
out
or
lret
add
les
es
sub
mov
cmp
stos
jo
shlb
jb
aaa
add
popa
lods
in
xor
adcl
fbld
andb
cli
xor
lcall
inc
xor
xor
inc
into
das
orb
shlb
pop
jae
stos
xor
push
cmp
or
add
in
cwtl
push
or
cmp
mov
add
inc
das
add
mov
lahf
sbb
in
xchg
inc
inc
sarb
cmc
call
push
jae
add
jb
push
push
movl
mov
or
cmp
jl
in
pushf
jo
cmp
or
jne
pop
sar
ds
movsb
jge
mov
out
test
adc
aaa
int
and
sbb
lock
iret
cmp
push
xor
inc
aam
xchg
jnp
pop
addb
push
jg
push
push
subl
xchg
jae
xor
das
mov
and
xor
dec
add
shrl
adc
mov
es
mov
imul
pop
cmpsb
cmp
jb
jb
loope
nop
outsl
inc
sbb
cmp
aas
inc
add
inc
adc
hlt
add
lods
cmp
orb
xlat
cmp
dec
cltd
mov
or
sbb
mov
jno
sub
sub
and
inc
lods
fwait
ss
fs
pushf
mov
mov
icebp
ljmp
pop
shlb
push
mov
sub
or
in
jne
and
sbb
add
rclb
jl
xor
add
push
mov
in
mov
pop
adc
mov
xor
lds
push
popa
xor
push
pusha
inc
lds
or
js
push
xchg
test
sbb
data16
pop
inc
inc
adc
ljmp
or
adc
and
cmp
mov
push
mov
leave
lock
xchg
add
lcall
inc
push
adc
loop
inc
int
add
mov
sub
inc
jge
cmpsb
cmp
inc
mov
or
add
push
sbb
rcl
inc
stc
jnp
mov
mov
or
loopne
loopne
mov
cltd
dec
cmpsb
rorb
sbb
jle
rcrb
xchg
frstor
lods
sub
inc
cltd
lea
mov
addl
test
mov
push
dec
sbb
loopne
push
scas
mov
scas
jl
add
mov
mov
inc
pop
loope
adc
mov
or
xchg
xchg
sub
push
pushf
sbb
sub
jo
cltd
mov
push
cwtl
xor
push
ret
cmpsb
test
cmpsb
pushf
jo
bound
inc
lock
jae
dec
sbb
loopne
sub
push
sub
mov
in
cmp
mov
out
outsl
mov
mov
push
xor
and
cltd
or
adc
push
push
jae
loopne
dec
int3
mov
test
push
jno
popa
add
push
ja
addb
inc
push
inc
lea
inc
jle
pop
loope
sbb
jo
test
dec
mov
mov
shlb
xor
inc
jne
add
mov
push
or
rorl
ljmp
add
or
call
outsb
faddl
mov
gs
adc
push
cmp
adc
imul
shlb
push
das
ret
rcll
and
lock
mov
jnp
jo
inc
adc
and
jg
subl
jo
mov
add
js
jo
add
fsubr
mov
add
icebp
clc
push
cmp
pop
jge
add
fs
push
mov
jecxz
push
fsubrs
push
aad
add
enter
push
mov
push
aas
xor
mov
cmpsl
sbb
rcll
and
cltd
push
jae
or
cmp
or
push
adc
ret
sbb
out
subl
lret
dec
mov
add
jle
mov
pop
and
push
testb
ret
adc
xchg
jmp
in
sbbl
add
push
jae
clc
sbb
push
cmp
cmp
xor
push
cmp
mov
out
das
xor
cmpsb
pop
mov
push
push
cmp
jmp
test
xor
rclb
cmpsl
mov
enter
or
xor
push
xchg
ja
es
sbb
jp
mov
dec
out
adc
test
rcr
pop
lods
daa
leave
mov
adc
mov
dec
lock
push
mov
add
lea
test
cmpsl
stos
xor
ret
dec
shlb
sbb
xor
loopne
ret
inc
sbb
insl
es
jae
mov
or
test
cmp
mov
add
out
push
push
sahf
adc
fsubl
ds
mov
or
hlt
add
jmp
dec
imull
xchg
leave
adc
clc
outsb
mov
pop
shrl
push
jae
jp
or
cmp
outsl
cmp
cmc
loopne
movsl
fisubl
push
icebp
incl
insl
in
cmp
mov
adc
pop
xor
rol
push
xchg
test
push
push
jge
sahf
push
loope
test
jb,pn
push
shr
mov
dec
jmp
mov
jnp
or
das
xchg
pop
sub
jo
add
add
push
adc
mov
in
cmp
cmpb
loope
mov
mov
dec
adcl
mov
xlat
pop
xor
shrb
movsl
cmpsl
jns
leave
loopne
lods
jo
cmp
and
xor
xorl
adc
lods
adc
ds
mov
or
or
add
out
mov
push
and
movsl
sub
cmp
stos
sub
mov
add
cmp
sub
inc
add
cmp
add
pop
jle
cwtl
out
sbb
insl
out
adc
cmpsl
sub
or
push
xor
and
lcall
out
clc
inc
and
jo
cmpsb
dec
jne
pushf
add
push
in
pushf
pop
xor
aad
popa
inc
loope
mov
xchg
inc
ret
loopw
xchg
sbb
jnp
pop
sub
insl
push
enter
loop
bound
xor
rcll
loope
dec
out
mov
push
leave
in
rcrl
mov
mov
sbb
test
push
or
pop
mov
aas
sub
xor
test
sbb
and
lret
jo
push
mov
lock
adc
jo
test
push
xor
cs
pop
mov
les
pop
inc
mov
xchg
es
cltd
mov
fists
orb
and
popf
pop
aas
and
xlat
mov
test
rolb
mov
inc
push
into
rol
and
push
push
rolb
stos
add
cmp
push
ret
jno
aam
lds
in
mov
xor
jno
jb
clc
jns
repnz
leave
enter
push
out
cmc
inc
das
dec
sbb
jo
flds
or
jo
adc
push
jo
gs
adc
test
das
call
cmp
pop
adc
insb
xchg
add
push
mov
cs
xchg
and
cmpsb
xlat
mov
xchg
inc
mov
sbb
rcll
std
sbbb
push
mov
adc
aaa
push
cmc
and
std
push
stos
popf
sub
sbb
dec
cmp
jne
or
aaa
js
or
push
push
shl
dec
xchg
cmp
mov
int
jnp
xchg
out
out
rolb
outsb
sub
mov
lret
push
aas
cmpsb
push
sbb
mov
and
or
rcll
cmp
xchg
leave
adc
cmp
es
std
cmp
adc
or
xor
cli
ret
test
pop
cmp
push
pop
das
lods
fdivs
mov
out
fsubl
mov
andb
pop
mov
push
mov
jo
or
mov
mov
mov
jmp
inc
cmpl
mov
pop
adc
push
adc
xor
std
leave
xchg
into
adc
add
ljmp
cli
repnz
cmp
mov
pop
pushf
js
inc
mov
cmpsb
popa
adc
sub
push
orl
pop
push
sub
in
mov
mov
rclb
push
addl
inc
xorl
xor
rclb
mov
aad
sbb
loope
inc
sub
adc
xor
frstor
jb
cmp
es
jo
fdiv
sub
inc
jae
leave
jge
xchg
sbb
add
enter
loop
mov
iret
addl
sbb
dec
xchg
mov
scas
xchg
dec
popa
push
add
add
pusha
push
icebp
add
insl
scas
sbb
jg
mov
shlb
inc
inc
mov
pop
add
xor
jp
add
inc
mov
add
filds
pop
jne
andb
idivl
mov
mov
jo
cli
lret
adc
push
ljmp
sbb
es
dec
ja
inc
push
mov
cmp
shlb
jnp
mov
scas
popf
lcall
or
cmp
repz
stos
cmp
sbb
mov
ja
push
in
adc
dec
push
cmp
mov
std
lret
mov
enter
sahf
and
xchg
mov
scas
test
push
add
push
shlb
pop
xor
adc
push
lods
js
mov
inc
jnp
jae
fldl
scas
jp
imul
mov
and
lret
les
je
in
push
adc
ss
dec
sbb
lea
xor
cmp
push
imull
xor
and
xchg
cs
or
ret
inc
les
and
into
push
loopne
jge
das
push
xor
add
into
adc
or
adc
aaa
enter
popa
mov
stc
mov
enter
cmp
jnp
aam
inc
sbb
cmpl
add
mov
mov
inc
adc
les
add
aad
mov
push
loop
mov
icebp
filds
inc
jbe
mov
pop
pop
push
test
jmp
mov
xor
popa
sub
inc
dec
test
cmp
xor
and
ret
rcrl
icebp
sbb
adc
push
push
daa
mov
push
inc
jp
add
add
cmp
add
scas
xor
std
inc
ja
push
jg
push
adc
xchg
loopne
jge
mov
popf
inc
xor
push
movsb
pushf
leave
add
or
mov
inc
inc
push
or
ret
and
cs
jb
mov
and
incl
mov
lds
add
orb
push
and
enter
add
out
scas
repz
jbe
dec
mov
mov
push
mov
add
push
test
mov
addl
aas
addl
int
xchg
inc
into
test
jo
adc
sub
test
sbb
jo
outsl
mov
adc
xor
pop
popa
arpl
push
je
push
sub
and
es
loope
lock
push
push
or
mov
stos
cltd
xor
xor
xchg
push
add
mov
jle
sub
mov
mov
loope
dec
mov
inc
mov
mov
or
xor
gs
push
mov
jns
lret
adc
mov
inc
subb
mov
mulb
js
push
jmp
loope
hlt
cmp
or
jno
rcr
repnz
inc
mov
push
iret
shl
xor
or
lea
orb
mov
cmp
sbb
mov
push
inc
gs
pop
jnp
ret
dec
add
scas
pop
mov
lods
in
aaa
scas
pushf
add
add
and
sub
adc
push
adc
lods
add
add
jo
lcall
mov
out
fiadds
or
add
fs
mov
jp
pushf
nop
push
and
es
adc
and
cmp
inc
mov
lock
scas
push
push
data16
pop
cmpsl
mov
mov
call
pop
pop
fidivrl
mov
sub
aam
adc
or
ret
pop
jbe
push
mov
pop
or
and
pop
incb
fs
in
add
adc
inc
rolb
push
scas
xlat
add
inc
xor
adc
xchg
cmp
and
mov
jle
andb
inc
cmpsb
cmp
push
sbb
cmp
push
int
cmpsl
jae
lret
sbbb
push
movsl
or
xchg
enter
mov
cmp
ja
and
or
mov
add
lods
aad
inc
aam
jbe
pushf
xchg
rol
push
orb
pushf
sbb
fldenv
push
ret
mov
iret
sbb
push
sbb
jae
call
pusha
xor
sbb
int
add
stc
xor
push
xchg
add
xchg
dec
in
push
sub
jo
dec
mov
lahf
jbe
add
icebp
mov
stos
jb
pop
inc
cli
inc
push
inc
imul
push
sub
inc
mov
dec
pop
cld
sbb
or
das
inc
cmpsb
inc
fldt
mov
adc
cmp
push
jno
mov
or
lock
mov
xor
pushf
cmp
pop
or
fisubrl
and
push
cli
cmp
inc
mov
sbbb
xchg
xor
lret
cmpsb
mov
in
and
jp
in
inc
mov
and
cmp
jae
inc
test
add
mov
dec
rorb
and
ljmp
xchg
les
push
scas
xor
jns
cwtl
add
xchg
xlat
cmp
popa
and
fiaddl
fisubrl
ror
sbb
pushf
jnp
scas
loopne
adc
mov
lea
pusha
jb
mov
add
into
xor
ss
mov
inc
jecxz
xlat
pushf
jecxz
mov
lock
pop
es
dec
push
mov
cmpb
scas
add
push
jb
daa
orb
add
testb
sub
inc
xchg
sub
inc
cs
adc
cwtl
adc
or
xor
cmp
mov
roll
dec
push
stos
stos
aam
sub
xor
adc
lret
cmpsl
jl
cmp
repnz
testl
test
in
stos
mov
fs
xor
int
loopne
fstpl
push
aaa
mov
icebp
mov
ret
mov
loope
lret
fs
add
push
scas
inc
cwtl
das
iret
sbb
push
jge
push
adc
out
mov
push
sarl
sarb
lcall
adc
jae
dec
inc
cmp
inc
xchg
jno
ljmp
gs
or
sub
cmc
mov
mov
popf
and
dec
add
push
and
adc
mov
xor
adc
adc
mov
test
popf
push
push
push
and
jnp
push
xor
push
or
jo
sbb
add
mov
push
cmp
loop
push
js
popa
mov
push
jnp
or
lods
xor
mov
and
mov
sub
sbb
cmpl
jnp
cwtl
mov
pop
int
sub
into
or
call
mov
pop
inc
dec
or
inc
lahf
icebp
sbb
or
sbb
call
sbb
adc
popf
and
ficoml
add
pop
cmp
shr
jo
loope
mov
jmp
add
loope
dec
add
adc
mov
push
xor
jl
adc
or
inc
xchg
loope
inc
xchg
pop
inc
push
mov
and
test
jle
push
jno
lret
fidivl
add
mov
cs
in
mov
rcrb
stos
xchg
sub
or
ret
stos
xor
ret
pop
sbb
jno
movsb
dec
in
adc
scas
ljmp
add
mov
loopne
jae
das
adc
roll
testl
test
pop
push
xchg
lock
ja
fnstcw
aaa
mov
push
xchg
push
out
adc
icebp
and
test
dec
cmp
in
add
test
push
pop
in
xor
jcxz
cmp
pop
js
push
xor
xchg
loop
mov
push
mov
and
jo
int3
xchg
int3
test
loopne
push
adc
leave
inc
sbb
adc
inc
mov
dec
sub
add
and
mov
call
add
mov
shll
aam
add
and
rclb
add
pop
aad
add
xor
hlt
fidivl
push
push
lahf
jns
decb
stos
addr16
popa
mov
cmp
jmp
mov
add
mov
jo
mov
cpuid
push
rorb
popf
cmp
push
inc
dec
in
test
mov
bnd
or
or
out
sbb
inc
lcall
or
mov
xor
mov
mov
push
shlb
ret
xchg
push
inc
adc
pop
dec
ret
lods
and
cmpsb
mov
mov
cmp
push
xchg
adc
or
imul
rsqrtps
fdivp
daa
andl
cmpsl
hlt
or
inc
and
mov
cmpsb
ljmp
adc
pop
inc
ret
sbb
inc
std
enter
out
xlat
and
inc
cmpsb
ljmp
in
cli
adc
lcall
and
cmp
pop
push
inc
and
fimull
popa
mov
cwtl
add
add
pop
cs
loopne
jae
mov
and
sbb
rclb
adc
or
push
test
inc
hlt
rclb
push
sbb
ret
jo
inc
in
push
dec
mov
imul
and
fisubl
fsubrp
inc
aam
stos
lcall
cs
mov
cwtl
add
dec
lds
and
es
xor
cmp
rcrl
inc
mov
ret
jge
loope
sub
roll
addr16
mov
mov
dec
push
xchg
add
test
cmpsl
pop
push
jns
pop
jo
inc
scas
adc
add
add
ret
push
sti
mov
cltd
sbb
outsb
int
jb
loope
loop
sbb
loopne
add
gs
and
fists
lret
add
jno
addb
inc
sbb
add
test
or
sbb
jmp
stc
test
loope
jae
addb
pushf
outsl
cmp
mov
lahf
mov
jb
or
sub
popf
add
shlb
jne
insb
test
sub
scas
ja
mov
inc
scas
add
cmp
cwtl
lock
cmp
das
sub
andl
jnp
sbb
addr16
mov
sub
into
jne
addr16
xchg
cltd
dec
aam
xchg
push
jns
and
inc
and
test
je
adc
in
xor
and
jmp
inc
mov
xor
mov
int
and
aad
mov
mov
cmp
push
inc
push
sub
and
add
xchg
xchg
add
out
imul
mov
ret
sbb
push
addr16
inc
scas
std
jns
mov
jnp
negb
cmpsl
cmp
pop
pusha
test
mov
jb
pop
mov
mov
add
lods
jo
icebp
dec
icebp
add
sub
test
sub
or
scas
sbb
xor
loopne
pop
xchg
and
inc
popa
ljmp
or
ret
inc
xchg
xchg
mov
rcl
addb
bound
stos
ret
xchg
aam
subl
or
push
inc
and
jb
or
xchg
arpl
lea
in
push
or
push
enter
ret
xor
push
mov
pop
inc
dec
lret
imull
imul
addr16
jae
push
sub
sahf
push
cmp
inc
test
dec
add
cmpsb
ljmp
aad
push
test
js
or
cltd
and
in
in
add
sbb
imulb
inc
pusha
cmp
int
int
lds
cmc
ja
lcall
or
add
shl
stos
shrb
xor
movsb
aam
mov
aad
out
mov
inc
adc
sbb
sbbb
or
dec
adc
roll
add
scas
mov
lret
mov
jl
rcrl
fmuls
in
sbbl
outsb
sub
cli
cmp
lret
push
or
push
outsl
shrl
mov
dec
cltd
xchg
mov
sbb
mov
outsl
pop
push
ret
dec
lock
stos
lret
sub
inc
xor
push
pop
cmpsb
lret
cmp
adc
mov
pop
and
scas
lock
jnp
mov
pop
add
cmp
jno
and
push
ds
push
test
push
scas
add
rclb
or
or
insl
call
jmp
mov
xchg
sbb
out
and
sub
es
xor
xchg
sarl
add
test
adc
imul
test
in
popf
push
xor
loope
push
ja
fstpt
add
cmp
cmp
cmp
xor
int3
xchg
lods
js
push
dec
mov
in
push
in
std
cmp
sahf
jmp
or
loop
cmp
sub
popf
test
jp
and
sbb
or
mov
push
insb
mov
mulb
mov
enter
xor
push
adc
shlb
mov
push
add
adc
mov
or
ret
jg
aas
pusha
xor
into
dec
xor
lret
repnz
push
pop
inc
xor
add
loop
mov
push
jnp
mov
orb
add
shlb
jns
js
inc
mov
xor
ljmp
add
jp
adc
mov
cltd
or
repnz
or
push
xlat
addl
inc
inc
mov
add
lret
addr16
inc
repnz
cmpb
cmpsb
cmp
jbe
jge
scas
stos
push
inc
push
jns
inc
xchg
pop
cs
and
pop
adc
or
data16
mov
dec
jae
mov
xchg
push
mov
add
xchg
jo
sbb
ljmp
push
inc
cmpsb
daa
fadds
cltd
lcall
loop
cmpl
addl
pop
xor
shlb
xor
sub
cltd
mov
loope
icebp
lock
aaa
sbb
sbb
jo
jb
add
adc
dec
adc
push
shlb
aad
xchg
call
push
in
fs
sbb
add
imul
inc
inc
movsb
add
pop
ds
int
push
stos
or
mov
repnz
sbb
rclb
jnp
test
sub
xor
push
test
sbb
xchg
add
jne
out
icebp
adc
inc
push
in
adc
jo
add
arpl
andl
pop
cmp
adc
pushf
jmp
pop
andl
push
je
out
push
mov
leave
imul
push
jnp
xor
ret
insb
mov
int3
or
or
ret
or
cmpsl
hlt
jns
pop
jnp
jecxz
ud1
jo
xchg
pop
sbb
xlat
rclb
lods
cmp
add
mov
ret
lcall
push
push
cmpsl
add
inc
int
or
jo
faddl
lret
xor
int
jmp
xchg
push
cmp
jecxz
js
das
popf
add
mov
scas
pop
adc
adc
xorl
sbbl
xchg
cmp
int
scas
pop
popa
lods
push
add
mov
daa
icebp
jnp
shrl
sbb
or
add
lret
xor
or
daa
nop
jbe
imul
adcb
mov
shll
in
addr16
mov
xor
and
pop
xchg
add
xlat
or
jmp
inc
cmp
enter
xorb
sbb
mov
loopne
xchg
test
mov
or
push
ret
and
sbb
sysenter
int
or
push
mov
cltd
xchg
inc
xor
mov
fcomps
push
add
adc
mulb
js
sbb
lret
in
adc
cmp
add
adc
in
cmpsl
lcall
scas
push
jo
inc
jae
mov
aas
rclb
add
mov
xchg
sub
jb
mov
pop
lcall
mov
push
call
dec
test
test
jnp
loope
add
fadds
cs
jnp
int
inc
nop
dec
adc
lret
adcb
xor
mov
sub
push
orb
sbbb
fstpt
push
js
and
inc
add
xorb
jo
mov
pop
push
sbb
mov
jl
sbb
or
xchg
and
loopne
xchg
jb
xchg
sbb
sti
outsl
pop
das
or
adc
sbb
add
or
dec
push
inc
out
mov
and
mov
js
aaa
cmp
cmp
adc
pushf
mov
out
mov
ret
fsts
pop
in
push
testl
and
dec
push
jbe
cmpsl
inc
rcl
sahf
adc
push
cmp
push
sub
xor
ret
push
or
sbb
loopne
push
push
dec
adc
xchg
mov
gs
add
adc
sub
loopne
jle
dec
sub
xchg
mov
cltd
add
pop
lret
xchg
inc
jnp
cmp
gs
loope
mov
cmp
adc
xchg
and
loop
shrl
adc
push
es
aas
dec
incl
and
add
push
xorb
mov
daa
xor
dec
or
jge
or
sub
sbb
add
pop
mov
ret
xchg
dec
icebp
aam
test
mov
pop
add
xlat
sbb
adc
inc
in
sub
les
mov
enter
xchg
add
sbb
loopne
push
sub
sub
in
enter
jge
xor
movsl
jmp
ljmp
in
adc
adc
mov
add
ficoml
aam
addr16
push
stc
push
inc
sbb
or
sub
sbb
ja
das
sbb
jno
add
mov
sbb
enter
in
add
or
adc
jae
lret
in
adc
or
pop
insl
jb
or
xchg
jo
mov
movsb
in
or
es
dec
rorl
mov
enter
negb
cwtl
jo
dec
mov
xchg
push
add
pusha
jb
jb
loope
dec
nop
or
sarb
shlb
push
sahf
xchg
mov
adc
push
lcall
aad
cltd
jo
lcall
mov
inc
jp
or
loop
push
rcrl
sbb
lret
data16
xchg
dec
inc
loopne
cmp
jno
push
mov
xchg
xor
lahf
outsb
mov
xor
out
dec
in
jbe
lock
or
int
push
dec
push
in
xchg
xchg
icebp
add
fdivrs
push
xor
sub
xor
addr16
call
adc
orb
cmp
shll
adc
adc
sbb
push
cmp
mov
jp
and
or
ds
outsb
flds
addb
push
xlat
orb
adc
faddl
dec
xor
xchg
add
shrl
add
test
scas
pop
mov
pushf
lods
popf
xchg
loopne
xlat
pop
cmpsb
sbb
mov
dec
mov
pop
jbe
stos
pop
add
mov
adc
mov
inc
jmp
call
xorb
push
cltd
jb
data16
push
mov
test
push
xchg
xor
mov
nop
sub
xchg
bound
in
cmp
cmpsl
or
and
addl
xor
mov
push
subb
push
adc
mov
pushf
add
mov
dec
sbb
jnp
aam
and
dec
xor
add
dec
inc
inc
fisubl
test
xlat
xor
sub
cmp
push
or
cs
mov
pusha
jo
jnp
call
cmp
lock
xchg
ret
jne
sbb
lock
xchg
xor
pop
sbb
sub
nop
es
jno
imulb
fstpl
sbb
sub
enter
stos
dec
nop
nop
mov
es
jo
subl
test
addl
jb
into
popf
ficoms
loopne
and
jmp
in
jp
cmp
pop
in
or
push
inc
es
adc
inc
mov
adc
push
dec
jge
push
and
or
and
adc
jo
xor
iret
popf
dec
add
jg
xor
add
and
fs
cmc
jp
or
jno
shlb
jl
nop
add
scas
stos
pop
inc
mov
push
sbb
add
rclb
cmp
inc
cmp
xor
fwait
jecxz
sub
pop
cmp
pusha
add
xlat
dec
aad
test
ljmp
orl
sub
int
jecxz
mov
or
jne
cmpsl
mov
or
inc
mov
repz
dec
stos
sub
or
push
jp,pn
arpl
fisubs
add
push
add
sbbb
outsl
cmp
push
mov
rcll
adc
loop
out
add
add
mov
or
sbb
dec
inc
jg
lock
cmc
iret
inc
xchg
std
push
xchg
adc
push
xor
jo
mov
adc
lcall
push
ret
out
enter
add
add
cmpsb
pop
out
inc
adc
test
or
call
adc
push
sub
jno
mov
inc
iret
adc
pop
jp
push
sub
sub
xchg
int
push
shrd
sub
imul
lret
fmul
inc
in
adc
mov
ret
es
cltd
or
or
aam
in
cmp
xchg
xlat
pushf
sub
imul
dec
push
cmp
pop
jmp
xchg
leave
ljmp
iret
sub
and
xchg
xchg
test
add
sub
pop
cmpsb
mov
shl
and
scas
fs
sbb
outsl
icebp
sbb
adc
jnp
push
shll
xor
cs
push
push
shlb
pop
jae
sub
fsubrl
sbb
adcb
jle
scas
push
push
push
xlat
sbb
cwtl
add
pop
pop
test
xor
es
jae
dec
or
orb
or
popf
dec
push
int
dec
or
mov
cmc
pop
jnp
add
loopne
leave
push
cltd
ja
sbbb
xchg
inc
cmp
mov
loope
or
and
jecxz
lock
jo
cwtl
and
cmpsb
push
push
lods
xor
pop
and
fwait
push
stos
mov
insb
loope
cmp
push
jp
sub
divb
adc
or
jmp
xchg
mov
adc
sub
scas
data16
adc
dec
adc
and
jae
inc
add
cltd
mov
jge,pn
lcall
stos
pushf
sub
or
adc
es
jg
sub
sarl
xchg
lea
push
add
adc
inc
loopne
pop
or
enter
pop
loopne
hlt
enter
add
pop
movb
inc
stos
jo
out
push
inc
and
jl
shl
nop
outsb
sub
xor
mov
call
sbb
adcb
xchg
push
sub
xchg
add
and
adc
insb
or
ret
das
cmp
mov
or
inc
xor
sub
add
fldl
inc
mov
sbb
lret
cmp
lods
push
jno
aad
cmp
adc
pushf
pop
mov
adc
jo
xor
movsl
cmp
das
pop
es
inc
test
cmp
and
mov
and
cmp
jg
testb
sahf
leave
shll
inc
loopne
addb
inc
jnp
in
mov
cmp
inc
pop
bound
pop
add
cmc
ret
or
pusha
adc
push
adc
push
and
and
fwait
inc
shll
push
add
and
cld
mov
adcb
addr16
adc
inc
jae
jnp
ja
dec
lock
pop
adc
sub
shlb
imul
dec
push
cmp
adc
cmpsb
mov
loope
mov
cmc
jne
sub
pusha
mov
mov
push
roll
cs
and
mov
sub
cs
pop
shll
or
mov
imul
pop
xchg
add
mov
ret
fildll
sub
sahf
add
hlt
and
add
ja
xchg
jb
cmc
push
sahf
push
lock
hlt
jo
inc
mov
mov
mov
mov
aad
enter
pop
xor
and
inc
dec
cmpsb
int3
inc
xchg
jge
jno
cmp
lea
fisttpll
xchg
notb
cmp
in
xor
sub
sub
in
push
xchg
roll
loopne
fisttpl
int
sub
dec
xchg
sub
lods
js
cmp
lods
insl
cmpsb
js
and
test
jno
xchg
mov
push
or
ret
jns
pushf
js
dec
decl
add
test
push
push
js
sub
cmp
out
xchg
inc
mov
mov
adcb
sub
roll
pop
xchg
and
ret
outsl
mov
movsl
pop
loope
cmp
mov
jl
adc
shll
jo
or
or
or
add
sbb
or
ss
push
in
inc
mov
add
inc
fsubl
subl
setl
test
addl
inc
cmpsb
push
loop
and
loope
xorl
adc
sahf
xor
push
add
mov
dec
pusha
call
push
push
adc
or
leave
inc
rorl
push
jae
jne
sub
push
adc
mov
push
aaa
cmp
mov
inc
popf
mov
inc
xchg
mov
jo
rolb
stos
inc
sub
test
push
cmpsl
adc
cmp
adc
add
add
mov
dec
inc
nop
fisubl
in
or
push
add
imul
xchg
push
icebp
sub
add
sub
jnp
shlb
sbb
dec
cltd
push
pop
cmpsb
ret
pop
ds
push
dec
inc
pop
jge
mov
testl
mov
pusha
push
imul
inc
mov
push
pushf
mov
add
test
xor
push
dec
mov
aaa
cltd
lea
xchg
std
les
inc
sbb
sub
cs
add
or
adc
push
lods
mov
mov
add
sbb
jg
test
nop
jae
test
push
out
or
jmp
push
js
adc
xchg
rolb
adc
ret
in
pop
or
cmpsb
outsb
cltd
cltd
adc
jno
rcr
mov
std
enter
xor
push
icebp
push
nop
test
fsubrl
sbb
pop
sbb
mov
adc
lcall
or
xlat
pop
sbb
push
fidivrs
push
popl
add
pop
adc
cli
pop
popa
adc
dec
jp
adcb
pushf
dec
pop
mov
gs
add
stos
mov
push
jae
jp
fs
cwtl
adc
xor
lret
add
movsb
aad
push
mov
imul
popa
sub
pushf
jae
fsub
movsl
dec
add
push
lds
stos
jns
idivb
cs
rcl
es
stos
mov
push
mov
ja
add
pushf
inc
out
push
cmp
mov
in
pusha
and
dec
orl
adc
mov
push
push
push
loopne
pop
rorl
loope
xchg
sub
loopne
popa
add
test
fwait
icebp
stos
ret
pushf
adc
push
aam
jg
cmp
push
sub
jo
in
mov
test
js
jo
jp
cli
add
sub
pop
add
pop
cltd
xor
adc
mov
dec
xor
jb
xor
pop
inc
inc
inc
cmp
cwtl
or
cld
jp
mov
mov
cmp
movsl
repz
dec
inc
testb
add
mov
sarb
imul
test
pop
in
adc
xchg
cwtl
pop
fs
push
mov
xor
popa
adcb
dec
or
addr16
mov
jae
lret
or
add
xchg
sub
xor
sub
push
jo
adc
mul
aas
pusha
push
ljmp
pop
jae
inc
sub
xchg
mov
xor
push
add
push
ret
rclb
add
dec
sbbl
mov
shrl
leave
adc
push
inc
mov
rolb
scas
ret
push
mov
cmc
adc
jo
mov
and
add
push
jae
mov
sarl
lret
rorl
arpl
push
roll
push
push
inc
xchg
orl
cli
ja
sbb
mov
bound
movsb
clc
jns
test
jb
jecxz
adcb
jge
mov
jge
jns
cmovae
fiaddl
sub
pop
push
lds
xor
ja
xor
mov
inc
push
ret
jb
rcrb
add
dec
add
jp
idiv
test
mov
das
pusha
jb
sbb
sbb
test
stos
scas
inc
or
jge
pop
push
out
pop
sub
popf
pop
pusha
sti
shlb
xor
enter
pushf
and
pop
adc
sub
in
and
add
pop
icebp
pop
xchg
or
icebp
xchg
and
and
test
cmpsl
and
push
pushf
jno
mov
xchg
mov
movsl
xor
xor
dec
adc
mov
push
and
icebp
add
loop
sub
aad
sub
les
or
dec
or
adc
push
sbb
and
inc
inc
mov
add
sbb
or
jmp
xor
nop
test
xor
shlb
or
movsl
push
adc
mov
test
add
in
adc
or
loope
push
push
sbb
nop
inc
dec
inc
fs
dec
sub
adc
xor
or
pusha
jg
aam
pop
inc
cwtl
aaa
shl
cmpl
fisttpll
adc
push
push
mov
fsubl
jb
clc
movsl
bound
adc
fdivr
jb
pop
add
lock
mov
and
jg
cmp
nop
ret
mov
or
gs
outsb
sub
or
cld
mov
pop
fnstcw
sbb
push
nop
sarl
test
mov
xchg
stos
adc
inc
int
xor
jno
shl
lcall
daa
jb
ljmp
jne
fcompl
push
stos
sarl
inc
jecxz
xor
mov
std
add
lcall
cmp
sbb
jmp
jo
add
jmp
data16
dec
andb
inc
pop
aaa
adc
push
push
xor
mov
mov
mov
mov
inc
cs
sub
imul
jb
mov
scas
loopne
jmp
es
stos
and
pop
mov
push
int3
xchg
loope
mov
push
sub
jne
pop
lods
inc
dec
sub
mov
bound
jo
test
ja
push
sbb
pushf
jg
or
test
pusha
enter
xor
ret
aad
insl
pop
arpl
sub
sub
jge
push
icebp
icebp
sub
cmp
push
xchg
mov
pop
bnd
add
pop
scas
lods
add
fmuls
inc
fstpl
loopne
in
cs
and
inc
lods
pmullw
lret
lds
cmp
lods
mov
dec
pop
xor
add
adc
ret
add
scas
push
inc
les
add
sub
dec
xor
daa
sub
xchg
push
mov
add
enter
mov
arpl
add
mov
subb
push
mov
sbbb
or
add
arpl
add
push
incl
xlat
push
cmp
xchg
cmpsl
rcll
mov
mov
ljmp
out
inc
inc
push
mov
and
pusha
stos
mov
sbb
inc
repnz
jb
or
add
and
xchg
inc
mov
outsb
pop
xchg
adcl
psubw
push
jae
push
pop
cli
shrl
mov
inc
sbb
adc
ss
xchg
rclb
ret
out
sub
jge
push
xor
inc
mov
cwtl
das
or
pop
test
lock
mov
pop
adc
adc
inc
jae
add
hlt
mov
xor
cmp
xor
rcrl
adc
dec
push
dec
push
pop
sbb
enter
or
mov
mov
mov
dec
cmp
jl
or
adc
mov
out
pop
pop
add
mov
sub
stc
ljmp
cwtl
push
and
add
inc
gs
jne
jb
outsb
je
push
popa
fs
adc
insl
popa
outsb
fs
imul
test
dec
outsb
outsw
inc
js
push
dec
popa
jae
or
jo
imul
push
push
popa
insb
push
popa
addr16
or
sbb
out
pop
jnp
jae
push
sub
je
inc
insb
outsl
bound
jbe
fstpt
je
inc
outsb
and
fstpt
push
push
outsl
insb
jne
gs
popa
add
jb
mov
in
testb
cwtl
push
outsl
test
outsl
jbe
mov
ja
inc
imul
inc
gs
fstpl
push
jo
dec
push
jp
jb
mov
mov
fistpll
fs
gs
lds
jo
in
divb
or
pop
jnp
mov
inc
dec
gs
fstpt
imul
push
pusha
orps
dec
bound
add
jb
sub
pop
divl
and
imul
mov
sub
insl
scas
ja
push
je
push
fildll
xchg
gs
or
jb
inc
gs
pop
in
mov
gs
test
jae
xor
popf
dec
daa
je
push
outsb
ja
mov
sti
adc
imul
mov
bound
inc
jge
inc
ret
pop
dec
adc
js
jbe
push
addr16
shrb
sub
scas
imul
pop
and
loopne
cmpsb
insl
add
mov
lods
insl
jae
xor
mov
insb
in
or
inc
mov
orps
ja
data16
add
nop
insl
movb
sub
push
sub
mov
imul
or
inc
in
sbb
pop
push
inc
fs
test
cwtl
mov
je
and
sbb
add
jae
push
inc
push
sbb
mov
mov
js
adc
popa
or
outsb
daa
addr16
outsb
outsl
ret
jp
jne
insl
xlat
pop
sbb
mov
cmp
cmp
push
mov
push
push
outsl
push
pop
bound
jbe
pop
jns
push
enter
inc
cmpsl
push
jg
sub
push
inc
inc
inc
push
movsb
gs
dec
pop
inc
jns
cltd
and
jne
lods
push
push
add
add
pop
outsb
imul
or
adc
mov
sbb
dec
jo
sub
inc
mov
outsb
or
dec
adc
daa
fidivrl
insb
fnstenv
adc
imul
adc
add
xchg
add
insb
or
gs
xchg
push
adc
add
push
pop
das
adc
pop
lock
inc
push
or
push
ret
dec
jne
push
sbb
jae
das
inc
sbb
dec
cmp
dec
frstor
xor
outsb
clc
sub
mov
xchg
inc
sub
sbb
mov
or
ja
sbb
pop
inc
or
mov
adc
jbe
imul
and
mov
pop
sti
jno
sub
pop
dec
jo
je
jo
push
pop
sbb
packssdw
jp
jp
outsb
add
pop
test
xor
adc
fbld
adc
arpl
dec
mov
lret
xchg
rcrb
pop
pop
mov
push
pop
or
push
jae
adc
and
xor
lods
push
jne
sbb
mov
test
fldt
imul
adc
mov
popf
test
or
xor
imul
jl
push
mov
imul
pop
aas
imul
sub
shrl
dec
xchg
push
mov
inc
in
xor
imul
bound
rcll
data16
pushf
push
inc
data16
stos
test
jb
imul
jae
js
imul
inc
jbe
in
mov
or
mov
pushf
popa
addr16
notb
or
inc
sbb
add
mov
xchg
jo
jo
bound
jb
mov
lcall
in
nop
add
xchg
sub
pop
add
dec
loope
xchg
xor
in
out
dec
dec
push
sbb
push
push
ja
into
sbb
inc
xchg
push
dec
dec
dec
dec
push
xor
cmp
add
imul
push
sbb
pop
push
jne
sub
into
fimull
cmp
and
pusha
jns
dec
push
arpl
cmp
mov
xor
jnp
dec
fdivrs
mov
leave
fsubrl
mov
and
inc
mov
aaa
add
in
inc
push
jae
cs
dec
pop
sub
pop
mov
cld
and
ja
push
mov
sub
lods
pusha
das
jno
xchg
hlt
mov
dec
inc
add
mov
xor
jae
jb
lods
cmpsb
test
jecxz
popf
inc
jge
pop
mull
inc
sub
sbb
jge
mov
jae
aam
aam
ret
pushf
dec
loop
fisubs
ret
outsb
mov
xor
cmpsb
push
sbb
inc
int
nop
xchg
xchg
cwtl
dec
ss
sub
lods
mov
addr16
sub
nop
push
rorb
xchg
ljmp
adc
dec
adc
dec
in
and
or
rclb
and
and
cmp
pop
xor
pop
addl
mov
nop
das
xlat
jo
add
adc
nop
push
divb
and
pusha
pop
push
jne
es
and
cmp
data16
andb
scas
rcrl
ja
inc
and
mov
out
mov
push
outsl
jo
insl
into
icebp
pop
inc
bound
or
fnstsw
negb
sahf
xchg
cmp
push
mov
mov
adc
pop
xor
mov
les
test
mov
mov
mov
movlps
jo
jns
mov
mov
lods
neg
aad
adc
sub
fsts
dec
ret
cltd
inc
push
nop
xorl
xor
sub
adc
ja
and
pushf
es
xor
pop
or
mov
arpl
dec
push
lods
cmp
xor
push
imul
inc
stos
and
jb
fisubrl
mov
cmp
imul
inc
pop
sbb
sub
adc
sub
test
fsubs
push
imul
mov
out
pop
test
rol
cmp
add
adc
shrb
mov
int3
xor
test
and
es
roll
add
bound
add
add
add
cmp
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
icebp
test
test
add
and
gs
or
jae
daa
push
dec
enter
ljmp
aam
xor
jae
dec
fisttpll
fbld
icebp
push
mov
int3
add
movsl
xor
xchg
jle
and
sub
xor
sub
incb
ss
sbb
bound
imul
and
ds
stc
rcll
pop
lods
mov
mov
aad
lods
insb
push
shll
pushl
mov
insb
mov
icebp
mov
jl
xchg
lea
test
sbb
pop
jno
adc
pop
or
adc
xchg
add
fwait
mov
fcompl
jne
mov
bound
mov
lcall
mov
inc
xor
lods
movsl
mov
adc
push
sahf
mov
mov
int
enter
or
dec
imul
sbb
pop
xchg
push
jmp
andl
cld
sbb
mov
mov
aam
rcl
test
pop
fidivl
jb
sbb
icebp
cltd
sbb
dec
adc
sbb
mov
ja
in
push
test
mov
aaa
fsts
repnz
cmp
movsb
jge
iret
popa
xchg
jo
mov
xchg
outsl
pop
imul
mov
pop
outsb
dec
sbb
loope
mov
rorb
xor
mov
cmc
xor
les
outsl
pop
jbe
jb
mov
stc
sub
repnz
nop
in
cs
shll
sbb
add
inc
dec
loope
xor
insb
dec
pop
aam
sub
aaa
lret
xor
pop
es
shll
das
scas
icebp
fidivl
imul
.byte
cwtl
loopne
out
data16
push
inc
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
rolb
add
add
add
add
pop
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
lock
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
add
jae
and
dec
add
add
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jae
jae
jns
and
dec
add
je
popa
add
add
popa
add
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
insb
add
jns
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
roll
add
roll
add
roll
add
roll
add
add
add
roll
add
roll
add
roll
add
aam
add
aam
add
aam
add
add
add
add
add
add
cmp
add
add
add
dec
aam
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jb
fs
insb
add
jae
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
dec
gs
gs
jae
jb
add
push
popa
jae
gs
jo
jb
add
add
inc
push
