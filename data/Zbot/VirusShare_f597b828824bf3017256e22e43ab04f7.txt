jg
lahf
nop
add
das
mov
add
stc
add
jnp
push
pop
loop
inc
mov
mov
push
hlt
nop
mov
add
add
xchg
xchg
fstpl
ja
cmp
repz
xor
xchg
adc
stos
mov
push
cld
enter
add
mov
out
in
push
add
call
pushl
ret
sub
sti
jb
sahf
lods
push
addr16
pusha
push
outsl
out
push
add
inc
push
dec
sbb
sbb
sbb
sbb
loope
pop
xor
cld
xchg
sub
mov
xor
in
fldenv
loopne
nop
mov
mov
into
test
sti
popf
insb
aas
add
dec
lret
pusha
loope
fs
xor
das
lret
in
dec
scas
in
mov
inc
mov
jmp
in
sbb
inc
call
lret
out
in
sbb
lds
int
adc
inc
jbe
jb
scas
push
cld
sahf
xor
xchg
pop
push
push
jle
fwait
cmp
movsb
lea
iret
outsl
fpatan
repnz
sub
int
cwtl
or
lret
lret
pop
adc
mov
mov
jmp
and
pop
out
lods
mov
rorb
leave
mov
scas
call
or
mov
fidivl
cwtl
xchg
sbb
mov
repz
repz
testl
lret
lret
out
dec
icebp
and
cmpl
js
lret
xchg
int
cli
jne
outsb
into
inc
add
daa
int
es
adc
dec
lcall
xchg
lahf
and
sahf
ds
add
jns
pop
pop
pop
sahf
lods
outsl
jle
jno
faddl
jae
cmp
jns
mov
or
push
lock
jns
adc
xchg
mov
shrl
das
das
mov
call
mov
pusha
inc
fmull
scas
dec
pop
xor
jnp
mov
adc
repz
adcl
in
lock
or
gs
hlt
movsb
jns
hlt
add
bound
sbb
xor
das
mov
mov
xchg
aas
inc
sahf
fsts
cli
mov
jl
lcall
les
daa
jns
jbe
dec
xchg
out
in
insl
insl
mov
lret
lret
lret
push
rcll
stos
adc
es
xchg
xchg
daa
clc
repz
je
mov
push
das
mov
mov
xlat
xor
inc
pop
js
sahf
mov
sub
popa
add
ss
sbb
cmpsb
mov
inc
and
das
das
lock
push
pop
pop
jns
stc
loope
testl
and
repnz
mov
mov
dec
jmp
daa
int
loope
lea
xchg
out
in
mov
mov
mov
mov
js
mov
lret
xchg
cwtl
mov
xor
pop
sahf
mov
andb
mov
ret
pop
and
sbb
sarb
mov
jbe
repz
repnz
mov
ss
loope
cltd
push
add
mov
in
enter
imul
fists
ret
mov
popf
pop
das
dec
lcall
test
xchg
cmp
jle
xor
cltd
lcall
rcr
leave
pop
mov
inc
jne
or
enter
jge
xchg
sahf
addl
ja
popf
call
js
xorl
testb
inc
push
negb
dec
fwait
andl
xchg
xchg
ret
pop
sub
xchg
ja
xchg
xchg
xchg
loopne
xor
mov
cmp
push
hlt
aas
inc
mov
mov
stc
popf
popf
xor
xor
flds
movsb
jns
js
sbb
inc
aas
mov
xchg
out
add
xor
pop
pop
ds
push
insl
shll
add
mov
or
cmp
mov
jns
shlb
cmp
jle
jns
cs
mov
ds
int3
jg
imul
popa
imul
das
pop
inc
and
inc
fs
xchg
out
sbb
lds
inc
aas
xchg
repnz
dec
mov
in
in
pop
loopne
xor
pop
lret
lret
xchg
out
stos
cmp
mov
test
jne
pushf
xor
mov
xor
xchg
sarb
pop
inc
or
jns
sbb
xchg
aad
or
xchg
jae
sbb
jle
jo
push
ljmp
repz
jns
stc
std
sahf
inc
imul
inc
mov
insl
dec
lret
xchg
pop
pop
pop
mov
addr16
inc
sbb
cmpl
in
iret
cwtl
sub
js
mov
leave
int
out
cmp
pop
pop
stc
cwtl
bnd
pop
rcl
mov
ljmp
jns
insb
or
enter
add
lret
pop
daa
cs
pop
push
subl
stos
cmpsl
xchg
scas
xchg
xor
shlb
inc
imul
jl
in
xor
and
lret
in
stc
into
xchg
fwait
stc
inc
std
push
aad
enter
test
mov
xchg
out
in
and
popf
sbb
fdivrs
adc
push
mov
inc
rcll
das
das
dec
lcall
inc
or
xor
in
cmpsl
xchg
iret
les
cmp
pop
pop
dec
aas
inc
dec
in
sti
into
sarb
shll
pop
mov
movsb
mov
mov
int
jae
vmwrite
mov
std
add
daa
jns
and
lcall
cmp
pop
pop
add
inc
mov
cmpsb
call
jns
jns
loopne
testb
inc
repnz
and
pop
fsub
in
repz
lret
push
icebp
popf
lret
xchg
out
xor
sub
sarl
daa
int
lret
mov
in
ret
fidivrs
sbb
nop
sub
inc
cmpsb
shll
dec
mov
pop
mov
and
in
dec
jmp
nop
mov
and
sbb
add
mull
mov
gs
mov
repnz
and
sbb
and
sbb
js
inc
inc
repz
sub
sub
out
mov
fimuls
out
and
cli
inc
push
push
or
mov
add
repz
pop
pop
popf
xor
pop
es
pop
sarb
and
or
lret
insl
xor
test
js
jecxz
insb
mov
adc
dec
cli
pop
fcoms
enter
jle
xor
mov
inc
lea
stc
cmc
inc
cwtl
push
mov
lock
sbb
in
adcl
cmp
jns
popf
in
and
popf
or
jl
movsb
jns
andl
xchg
fsub
mov
setae
in
sub
push
int
lret
lret
dec
in
jb
lea
pusha
xchg
dec
inc
mov
pop
xchg
adc
jge
ljmp
das
dec
lcall
imull
das
daa
test
lret
mov
fwait
std
push
out
and
js
adc
lahf
mov
push
and
mov
mov
xor
in
in
mov
xlat
rorb
out
out
sbb
cwtl
xchg
sbb
xchg
out
in
sub
in
pop
add
xchg
addr16
mov
pop
ror
sti
bnd
xchg
testb
aad
push
rcll
pop
xchg
jbe
dec
repz
pop
add
sbb
lds
dec
xor
sbb
xchg
cltd
push
xor
xchg
adc
lods
jg
dec
sub
or
nop
xchg
xchg
fs
pop
hlt
add
mov
imul
dec
shlb
or
sub
mov
ficoml
mov
fs
jb
sarb
adc
jb
repz
sarb
dec
repz
jmp
push
pop
pop
call
loop
pop
and
mov
inc
mov
aaa
outsb
mov
sahf
xchg
filds
jno
add
inc
ja
shlb
lcall
pop
in
sbb
dec
add
in
in
add
pop
testl
xchg
mov
fistpl
rep
das
mov
lret
mov
inc
lcall
xchg
insl
mov
and
pop
sti
stos
and
push
push
lock
add
jmp
sub
or
push
stc
xor
mulb
stos
sbb
jg
repnz
and
lret
lret
out
dec
pop
and
inc
push
lret
lret
mov
jle
fwait
sti
cmp
jno
test
mov
mov
mov
das
ja
push
and
out
in
movsb
dec
push
push
data16
rclb
cmp
into
loope
enter
lret
xchg
cmpsb
mov
mov
add
xchg
fldl
pop
lds
rorb
sti
mov
cmp
xchg
or
mov
pop
and
adc
rorl
dec
jg
or
xor
sub
mov
push
adcl
fs
xchg
imul
sbb
repnz
aad
adc
xor
sbb
dec
push
data16
jo
movl
in
push
gs
and
jno
xchg
fucomp
xor
test
xor
mov
int3
ss
test
adc
lock
fstl
in
out
sbb
rcrb
add
fwait
add
fidivrs
inc
add
ss
int
ss
xchg
jg
test
bnd
fcmovnbe
push
arpl
xlat
mov
jne
iret
pop
in
test
scas
jmp
dec
jle
daa
add
dec
cli
sbb
popf
add
mov
and
in
cmp
and
mov
fists
jl
inc
cmp
lods
into
dec
lcall
mov
xchg
mov
lret
mov
jns
jns
lret
xor
aam
repnz
pop
repnz
add
add
lret
out
dec
repz
cmc
repz
insl
mov
les
lds
sahf
xor
das
jle
aaa
inc
xor
xchg
imul
adc
movsl
out
mov
ja
rorl
outsb
cmp
sarb
add
sub
repz
dec
or
loopne
sub
mov
cmp
sub
fimull
add
inc
scas
repnz
mov
stos
out
xchg
aaa
push
dec
lods
sub
pop
adc
aaa
movb
xchg
push
inc
mov
cmovae
mul
mov
ficoml
js
fbstp
mov
lahf
pop
jnp
adc
dec
fnstcw
rorl
test
inc
pop
test
out
in
push
mov
inc
push
push
mov
cld
jmp
das
mov
push
inc
push
mov
xor
sbb
movsb
cmpsb
mov
stos
add
sbb
dec
gs
pop
inc
mov
xor
pop
cmp
jb
int
ds
sub
or
pusha
lcall
cli
lea
mov
pop
aas
nop
mov
mov
dec
sub
imul
push
jns
mov
inc
mov
jno
nop
aaa
sbb
cmp
orb
lahf
xlat
je
out
repnz
ljmp
jbe
vunpckhpd
cmp
lock
imul
clc
mov
fstl
or
or
orl
lahf
xor
cmp
add
inc
iret
mov
mov
dec
cmp
and
sbb
dec
das
jge
xor
pop
not
mov
mov
sub
and
push
and
arpl
mov
xchg
aas
pop
sub
inc
cmp
mov
cmp
mov
lods
insb
xchg
sbb
insl
and
and
fmull
fists
push
sbbl
lcall
pop
inc
pusha
push
pop
mov
inc
xor
gs
outsl
jge
or
stc
cmp
cmp
lcall
pop
in
stos
mov
nop
xchg
ja
addl
scas
into
or
cmp
fdivs
dec
andb
add
xchg
cmpsb
lret
push
cltd
mov
imul
lret
push
hlt
ljmp
repnz
inc
test
loope
rolb
xchg
add
and
popf
addr16
pop
cmp
add
jp
imul
sub
loop
jno
lods
push
sbbl
ljmp
mov
andl
pop
pop
adcb
pop
cs
xchg
and
cwtl
xchg
xchg
xchg
das
fisttps
enter
mov
push
fisttpl
cmpsb
mov
and
xor
das
mov
push
jns
sti
call
add
out
cmpsl
loop
mov
or
cmc
pop
pop
push
push
dec
repnz
fwait
rclb
iret
mulb
push
jnp
stc
popf
and
xchg
push
loopne
push
add
pop
fldl
das
aam
push
mov
mov
scas
movsb
jns
inc
xchg
daa
outsb
out
lret
dec
or
repz
inc
lret
pusha
gs
sub
addr16
mov
dec
lret
push
mov
push
mulps
stos
mov
cmc
jns
mulps
push
lods
and
push
pushf
addl
jp
xchg
mov
test
sbb
in
insb
movsl
daa
in
or
xorb
jbe
test
stos
shl
inc
xchg
out
gs
add
repnz
mov
in
in
push
mov
aad
cmp
push
cwtl
in
push
dec
pusha
or
imul
gs
loope
daa
sarb
aaa
cmp
or
cmp
and
xor
shl
xor
pop
pop
fyl2x
push
nopl
jnp
aaa
leave
lret
lret
pop
pop
sbb
lret
cmp
rcrl
mov
add
push
mov
lds
push
push
mov
stos
jns
and
sbb
cmpsw
jmp
mov
pop
in
cmp
lcall
lods
daa
iret
in
jg
lods
inc
inc
xchg
push
cli
cmp
lea
jns
daa
arpl
mov
loopne
rolb
mov
jns
mov
mov
xor
repnz
pop
cwtl
sub
sub
test
das
cmc
iret
xor
loopne
push
in
inc
mov
cmpsb
sub
mov
ss
lahf
pop
out
xor
pop
shl
lahf
mov
push
push
pop
test
dec
insb
movsb
stc
popf
sub
hlt
lcall
filds
xorl
notl
push
inc
add
std
add
xchg
mov
mull
repz
negb
ficoml
stos
mov
xor
pop
int3
test
xor
pop
pop
pop
sahf
fisubs
pop
out
adc
stos
cmp
cmp
jne
es
into
inc
lcall
or
jp
mov
push
pusha
xchg
xor
enter
sti
sti
xor
push
jmp
out
bnd
faddl
lret
xchg
mov
lds
mov
pop
loope
das
dec
lcall
in
pop
sahf
xor
xor
sahf
mov
add
lret
ret
lret
sbb
idiv
das
mov
movsb
jg
lahf
or
sbb
pop
xchg
push
xor
sbb
fmul
loopne
adc
pop
pop
mov
add
out
and
lds
cld
jo
push
test
jns
jns
icebp
pop
and
pop
dec
xchg
pop
daa
jns
popa
or
test
adc
lods
lods
insb
or
push
dec
repnz
cmc
add
dec
repz
mov
jno
push
push
sub
fs
jb
rcl
sbb
cmp
xor
xchg
subl
and
aaa
int
test
bnd
lods
in
mov
mov
xchg
xchg
xchg
push
fstps
les
adc
jns
icebp
in
nop
mov
xor
insl
data16
loope
inc
insb
mov
ss
xchg
xchg
je
push
or
add
and
add
mov
adcl
jbe
arpl
pop
inc
dec
lcall
mov
jbe
das
das
das
dec
ljmp
iret
das
das
inc
and
jle
adc
xor
mov
cmp
xchg
xorb
pop
sub
xchg
cmc
fstl
jbe
adc
or
jmp
insb
je
aad
sub
mov
pop
dec
out
add
lret
lret
xchg
sbbl
xchg
xchg
daa
int
xchg
divl
cltd
jecxz
jb
cmp
mov
or
out
mov
pop
jns
xor
lret
inc
cmp
sub
mov
xchg
ffreep
sbb
xchg
adc
jnp
dec
lcall
js
and
sub
jb
push
mov
int
lret
es
xor
test
cmp
mov
mov
lret
xchg
cld
push
mov
outsb
and
inc
adc
jp
mov
or
mov
xchg
fimuls
cmc
or
cmp
cmp
sub
rol
bnd
jns
jns
mov
adc
repnz
jns
jo
cltd
mov
divl
repz
pop
aad
mov
repnz
xor
jae
add
cli
pop
cmp
mov
pop
pop
ja
xchg
xor
sbb
mov
stc
jae
xchg
popa
cmpsl
sarb
mov
sub
lret
sbb
into
push
stos
push
js
cmp
cs
mov
dec
mov
mov
xchg
inc
iret
fwait
sbb
mov
lret
xchg
lods
in
and
mov
stos
mov
das
mov
pusha
clc
sbb
insb
add
sahf
xor
cmp
mov
xchg
je
push
mov
push
mov
sub
sub
dec
pop
jmp
mov
daa
xchg
or
ss
fs
pop
pop
cmp
sub
push
data16
pop
jle
push
in
adc
inc
inc
roll
cmp
push
mov
repnz
rol
jae
stc
mov
stos
cmpsl
mov
push
mov
xchg
rcl
jae
mov
roll
dec
fistpll
jns
icebp
fmuls
jmp
subb
nop
pop
inc
lods
in
lods
push
and
sub
test
cmp
out
pop
sbb
push
jmp
ja
fs
lret
inc
and
jb
insb
xchg
cltd
in
mov
push
mov
mov
inc
add
cmp
xchg
push
push
jbe
add
xchg
xchg
aaa
jno
int
mov
das
dec
lcall
mov
das
mov
pop
pop
fnstenv
xor
sub
pop
jb
pop
pop
jle
adc
lods
dec
in
ss
fidivrl
dec
cmp
cmp
es
mov
mov
cmpsb
sbbb
in
push
mov
mov
mov
mov
push
push
mov
outsl
cld
push
cmp
rcll
jl
pop
pop
outsl
adc
and
add
mov
mov
cmp
pop
inc
mov
enter
push
pop
fsts
dec
mov
mov
adc
notb
adc
cmp
outsl
popa
gs
lods
lods
insb
or
jl
and
mov
xchg
mov
xor
xchg
and
push
cmpb
or
push
fwait
in
and
inc
pop
mov
aaa
or
les
flds
or
push
xchg
inc
inc
out
adc
gs
xchg
out
sub
shll
lret
lret
xchg
sahf
outsb
mov
dec
mov
cmp
pop
xor
sbb
pmulhw
lods
shr
sub
xor
sub
ret
mov
push
xor
sahf
mov
sub
sub
sub
cwtl
mov
lret
lret
out
inc
pop
inc
and
pop
or
add
adc
pop
pop
mov
fwait
and
sub
pop
and
out
popa
mov
rorl
cs
xchg
sahf
fs
cmp
les
test
cmp
push
int
inc
cmc
add
push
jnp
insb
sub
adc
jns
loope
insb
les
mov
into
es
or
imulb
dec
lcall
loop
jb
xor
das
dec
xor
int
clc
aaa
xor
pop
pop
pop
clc
fwait
push
das
sub
cmp
aam
shl
push
cmp
push
mov
ja
lcall
and
adc
in
jnp
out
and
xorl
adc
xchg
and
dec
enter
dec
lcall
sbbb
mov
sarl
inc
xor
mov
adcb
lret
lret
lret
pop
jle
and
outsl
scas
jmp
push
mov
jb
cmp
into
inc
push
inc
sbb
pop
or
test
jns
sbb
loope
sbb
fcmove
lret
pop
daa
ror
lret
and
lret
and
or
movsb
stc
jecxz
add
cmp
repz
imul
lret
cmp
push
and
bnd
pop
jp
iret
cld
out
subl
mov
int3
lret
aaa
sub
int3
sbb
push
pop
pop
cmp
xchg
jmp
out
adc
mov
mov
jg
movl
shll
sbb
sbb
gs
push
xor
out
fmull
sub
fwait
testl
lods
sub
lock
pop
sahf
lret
push
stos
aad
jecxz
test
adc
and
lcall
push
sub
xchg
enter
xchg
imul
jp
jnp
sbb
xchg
adc
lret
ret
popa
xor
fcomp
arpl
jno
jmp
xchg
xchg
and
cmovns
enter
leave
xor
sbb
dec
push
subl
push
fs
idivl
fwait
jle
shlb
in
popa
mull
push
mov
xchg
ja
jb
lods
ja
shr
xor
push
add
jb
inc
fistpll
sub
lods
insb
mov
jns
sub
push
lret
ljmp
xchg
xchg
sahf
clc
clc
orb
mov
pop
popf
lret
pop
mov
cmpsl
lock
jne
mov
icebp
xchg
insl
pop
dec
sbb
mov
push
out
add
cmpsl
adc
jmp
notb
arpl
jl
mov
clc
adcl
inc
adc
rclb
fildl
fstps
fdivr
jle
or
sub
daa
and
cmp
sahf
je
imul
sub
push
dec
gs
repnz
hlt
pop
lods
lods
lods
pushf
aas
test
dec
mov
lods
in
mov
add
sbb
addb
repz
ret
lods
lods
xor
ret
fld1
pop
inc
mov
fsts
test
sub
movsl
imul
fbld
testl
mov
test
inc
push
loope
lret
lods
in
jmp
das
mov
stc
jmp
div
sbb
jo
movsb
jns
outsl
push
jne
sbb
mov
and
cltd
sub
mov
mov
pushf
add
pop
mov
mov
pop
lret
jbe
xchg
rcr
nop
xchg
xchg
popf
arpl
xadd
and
pop
pop
loope
sub
pop
aas
test
int
xchg
jne
cmc
jecxz
das
aas
cmc
mov
loop
sub
cmp
xchg
out
les
addr16
insb
insb
cmp
pop
adc
mov
xorb
ret
fldt
rorl
pop
add
das
xchg
xchg
xchg
push
shll
rcrb
mov
dec
rcrl
sbb
movsl
das
mov
sar
pop
insb
in
add
xor
xchg
jnp
xor
xchg
lea
loopne
jbe
fidivl
sbb
jmp
jmp
xchg
push
sbb
inc
xor
pop
mov
sbb
jecxz
add
jmp
xchg
xor
push
dec
aad
fsts
mov
mov
jl
xchg
cwtl
jae
or
push
cmp
rorl
je
mov
cmp
xchg
xchg
jae
xchg
mov
clc
dec
mov
push
shl
mov
xchg
mov
mov
dec
movsb
xchg
mov
adc
xchg
notb
xor
or
and
lds
cld
into
push
add
and
fbld
mov
mov
sub
shrl
sub
lret
mov
mov
add
inc
outsb
sub
mov
lret
ret
cli
insb
test
sub
add
sub
mov
sub
lea
repnz
and
dec
daa
fisttps
sbb
mov
sbb
add
jecxz
insl
and
sub
sbb
je
int
jp
mov
jge
cmp
pop
sahf
xor
mov
push
lcall
aaa
add
rorb
pop
dec
notb
mov
mov
pand
lret
bound
jo,pt
lret
lods
xchg
xor
lods
insb
add
sbb
lods
insb
mov
jge
dec
inc
xchg
jae
test
mov
xchg
xchg
je
sbb
mov
jb
imul
lret
add
bnd
lret
sbb
out
inc
dec
dec
loopne
xor
imul
jmp
cmpsl
mov
loop
clc
inc
or
insb
insb
sub
notl
test
je
jmp
xor
sub
mov
cmp
pop
and
test
notl
sbb
jne
rolb
out
in
sbb
push
scas
movsb
js
ret
lds
fnsave
fsts
xor
psubusw
jns
add
dec
inc
pop
jle
in
dec
mov
or
imul
fmull
in
stos
xor
icebp
and
pop
rep
lods
insb
or
dec
or
mov
movsb
xchg
int
rcrl
sub
ror
inc
sti
or
hlt
lret
enter
xor
enter
jge
adc
and
mov
shll
cmp
xor
dec
gs
rorl
lret
outsl
flds
inc
lea
pop
pop
dec
ljmp
leave
lret
lret
xchg
xchg
or
pop
fwait
xchg
dec
xorl
pop
pop
xchg
lods
nop
push
int
add
xor
in
cli
xlat
mov
pop
ljmp
jbe
mov
lret
rcr
adc
mov
pop
jp
lret
pop
fstpt
movsl
repnz
lret
outsl
and
in
dec
repz
xchg
ret
insb
pop
mov
enter
pop
push
shrb
lea
pop
fsts
or
mulps
test
mov
int
cwtl
lahf
iret
mov
lret
xchg
mov
pop
stos
mov
repnz
icebp
mov
fcomps
mov
lds
outsb
mov
fstps
cli
stc
pushf
mov
xor
fstps
add
jl
xor
inc
xor
mov
adc
xchg
xchg
xchg
push
mov
inc
lahf
push
mov
imul
cmp
adc
and
sub
cmpsl
mov
out
pop
test
out
arpl
mov
fcomip
pop
and
subl
test
push
ret
hlt
nop
xchg
xchg
int
pop
aad
xor
mov
mov
xor
cld
jne
xchg
in
mov
vucomisd
cmp
subl
es
xchg
out
mov
andl
inc
popf
pop
mov
mov
loope
das
jg
push
rol
in
std
movsl
les
and
repz
cltd
jg
fs
test
sub
ss
das
pop
pop
and
popa
or
inc
or
mov
sahf
xor
mov
leave
pop
dec
iret
stc
cmp
clc
lods
fdivs
pop
sbb
sti
in
jecxz
push
insl
pop
pop
jle
ret
aaa
mov
xchg
pop
jmp
aad
test
jecxz
sub
loopne
iret
lea
or
or
inc
jp
int3
jnp
xorl
add
inc
rcrl
add
fdivrs
push
psubusw
insl
sub
sub
jecxz
inc
dec
es
out
inc
adc
iret
ret
jb
sbb
inc
inc
test
cld
hlt
movsb
stc
cmpl
or
and
mov
and
addl
dec
in
data16
inc
xchg
mov
add
adc
in
xchg
inc
cmc
xor
xchg
out
inc
and
cmpsb
mov
fwait
xchg
and
or
popf
out
mov
notl
fdivrl
xor
push
sub
sbb
dec
inc
jge
jae
insb
mov
mov
arpl
lods
mov
mov
mov
cmp
push
dec
sbb
rcrb
inc
dec
test
cltd
in
xchg
xchg
xchg
je
push
adc
leave
cmpsl
ds
push
mov
das
shlb
sub
xchg
xchg
icebp
adc
push
and
dec
pop
aaa
cmpsb
mov
jecxz
pop
push
sbb
enter
aaa
out
rcrl
test
push
pop
mov
push
popf
xor
int3
call
push
xchg
jno
pop
lahf
repnz
or
inc
insl
jo
test
add
inc
lcall
xor
xchg
pusha
sub
sbb
cmp
movsl
mov
push
js
lret
mov
xor
in
mov
xchg
xor
in
ficompl
cmp
addr16
push
sbb
mov
jecxz
inc
cmp
call
dec
dec
mov
jno
and
or
jno
adc
mov
sub
sbb
pop
bound
out
mov
push
pop
lock
xchg
or
out
loope
mov
xchg
mov
popf
pop
jo
lret
push
stos
sub
inc
pop
lret
stos
test
test
pop
push
xor
push
dec
repz
jecxz
push
or
xor
enter
insb
cltd
inc
and
mov
dec
loope
fs
ds
and
movb
mov
sbb
xor
dec
insb
enter
inc
and
in
imul
mov
pop
rcrl
imul
nop
enter
push
lret
pop
push
out
int
xchg
ror
cmp
bound
or
or
outsb
ficoml
movsl
mov
std
stos
dec
and
sbb
adc
int3
out
jae
movl
adc
in
xchg
fstl
out
loope
and
stc
sbb
outsl
outsl
pop
leave
out
xchg
js
xchg
ficoms
add
outsb
mov
or
xor
js
mov
lret
xchg
cld
xlat
mov
lods
iret
pcmpgtw
in
jge
cmp
in
sbb
push
into
add
fldenv
fadds
xchg
xchg
xchg
xor
xchg
jnp
imul
push
xor
dec
jg
dec
mov
cmp
sbb
loop
pop
mov
pop
add
xor
nop
and
sub
adc
fmul
lret
lret
out
shrb
stos
pop
xchg
or
pop
pusha
mov
xchg
cmp
mov
mov
arpl
xchg
leave
mov
out
push
stc
add
loope
rcll
mov
xor
repz
xlat
pusha
repz
jbe
enter
arpl
dec
sub
inc
push
push
fimull
pop
push
mov
cs
mov
xor
fildll
cmp
aad
pop
scas
mull
inc
aam
in
inc
dec
xchg
or
cld
jmp
xchg
push
add
jb
rcll
and
pop
jne
sub
addr16
mov
fsubrs
les
sub
lret
enter
cmpsl
or
lret
pop
pop
sub
js
xchg
pop
jle
pop
jmp
jle
pop
pop
push
sub
shrb
int
lds
pop
das
mov
cmpb
pop
dec
repnz
pop
loop
push
push
push
jbe
testl
scas
xor
adc
leave
cmp
jecxz
adcl
enter
in
sub
fwait
loope
cmp
mov
out
mov
xchg
pop
sahf
xor
jmp
aad
or
dec
and
push
and
inc
push
push
push
scas
jle
dec
pop
or
mov
xchg
std
cli
xlat
xchg
inc
fwait
lods
or
xchg
in
inc
push
pop
int3
pop
shlb
in
inc
int3
sub
pop
pop
leave
loop
push
xchg
inc
adc
rcr
imul
jge
mov
push
jno
imul
setns
inc
mov
pop
movsl
ss
loope
cli
adc
adcl
int3
xchg
or
cmc
jle
push
ss
sub
jecxz
adc
xlat
cmp
adc
ret
jb
inc
aas
stos
shlb
and
push
pop
cmp
cmp
out
and
mov
outsl
or
test
dec
in
lret
call
xchg
mov
cmp
lcall
adc
mulps
iret
xor
pop
fabs
inc
mov
xchg
shr
or
icebp
loope
lods
pushf
sbb
jmp
stos
dec
mov
and
sub
scas
push
lock
dec
mov
test
pop
jl
jo
rclb
aas
mov
xchg
xchg
sbb
jg
in
mov
push
sub
rcrb
jns
insb
movsb
mov
lods
insl
pop
push
cmp
push
stos
jo
adc
inc
dec
sbb
xchg
pop
cmp
ja
lock
inc
inc
js
jl
test
rcrl
push
negl
cmp
jae
aam
xor
in
inc
push
gs
fs
mov
mov
dec
gs
mov
fsubs
push
mov
cmc
mul
mov
lret
push
mov
lea
sub
sub
pop
inc
sub
lret
dec
mov
xchg
inc
mov
push
fists
js
test
push
out
into
lcall
movsl
pop
loope
fdiv
jbe
cld
push
mov
rol
adc
cmp
adc
mov
cmpsb
movsb
pop
sbb
in
dec
push
mov
arpl
cli
dec
rorb
out
test
xchg
pop
pop
jp
push
mov
adc
push
les
dec
adc
lret
push
sahf
xor
push
lea
inc
add
ret
xchg
fbld
orl
xchg
sbbb
pop
cmpb
cs
dec
test
loope
xchg
lds
mov
in
sub
lahf
and
lcall
pop
cmp
cmp
enter
sub
adc
jae
fwait
inc
aas
push
adc
test
or
xchg
aas
lret
pop
flds
addr16
jbe
lret
pop
mulps
stc
mov
cmp
lret
pop
push
repnz
mulps
pop
adc
sub
hlt
cmp
mov
ljmp
das
lcall
lret
popf
insl
jp
in
and
cltd
push
pop
inc
mov
repnz
mov
push
mov
mov
cs
fistps
mov
mov
xchg
adc
mov
sub
xchg
pop
xor
icebp
scas
sahf
movsb
mov
adc
sbb
push
cmp
into
inc
mov
and
push
push
outsb
dec
leave
mov
xchg
push
idivb
push
sub
bnd
xor
je
adc
xchg
aas
dec
mov
mov
pop
push
sahf
fldt
and
sub
jnp
sub
jnp
clc
leave
dec
outsb
mov
inc
adc
jns
pop
into
movsl
cmpsb
xor
fimuls
icebp
pop
sub
or
jmp
lret
lods
ficomps
cmpb
lods
push
xor
ret
lahf
mov
add
repz
bound
and
xchg
push
vphadduwd
mov
mov
mov
add
or
mov
mov
out
adc
nop
lea
and
gs
mov
mov
insb
insl
cmp
cmc
stc
inc
mov
mov
xor
jle
std
aaa
repz
or
subb
lods
jle
dec
imul
lods
push
pushf
xlat
xor
out
in
int
scas
xor
mov
lock
int3
sahf
lcall
dec
adc
mov
jg
push
adc
clc
dec
jne
push
ret
js
mov
sbbb
inc
push
push
or
xchg
mov
cmp
in
nop
ret
mov
jne
icebp
js
rorb
sbb
mov
fadds
lods
inc
cmpl
stos
cmp
xchg
xor
test
pop
pop
cmp
xchg
sti
add
nopl
frstor
push
jle
push
push
mov
popf
cs
xor
jg
pop
pop
pop
std
jae
es
cmp
xchg
pop
dec
add
imul
jo
add
mov
inc
dec
jge
xor
push
mov
icebp
cmp
and
push
aam
shl
rorb
in
push
cmp
cmp
sbb
add
pop
mov
push
imul
aam
and
jno
mov
adc
dec
insb
sub
fs
fsubr
or
cmc
addr16
lods
jns
mov
and
icebp
xor
xchg
int3
je
out
sub
ja
arpl
pop
xlat
inc
dec
xor
mov
roll
shlb
xor
lret
jbe
lahf
cmp
xor
mov
addb
call
add
xchg
pop
fs
jecxz
gs
cmp
negl
gs
fs
fs
pop
inc
gs
or
push
pop
fstps
fwait
pop
inc
leave
mov
dec
inc
cmp
pop
mov
add
lahf
mov
lods
jmp
mov
inc
es
je
and
push
jbe
fmuls
out
xchg
mov
xorl
jne
aad
mov
aam
add
enter
ficomps
cwtl
test
mov
dec
lea
mov
and
lock
xorl
lock
mov
and
test
jp
mov
fsub
inc
xchg
jns
shrl
rclb
push
xor
scas
sbb
shrb
lret
enter
leave
fwait
sbb
and
push
pop
popf
and
shll
iret
xchg
popf
gs
mov
cmp
dec
and
iret
fisubl
mov
shrl
cltd
lahf
jne
lds
lret
popa
gs
and
xchg
push
jg
fs
movsl
cli
xor
mov
das
jg
mov
test
movsl
inc
xor
pop
mov
or
xchg
sbbl
icebp
xchg
and
movsb
pushf
lods
std
aas
push
add
pop
pop
add
enter
arpl
xor
mov
test
sbb
adc
xchg
fistpll
xchg
rorl
loope
sbb
cli
test
push
aam
mov
test
push
push
sub
test
xchg
lods
in
dec
cmp
or
in
pop
mov
xchg
sbb
out
add
xchg
xchg
les
lds
imul
jl
xchg
fsubp
mov
lcall
iret
in
test
ret
ret
shll
jns
sub
jmp
dec
jb
leave
xchg
out
push
sbb
lods
mov
test
pop
pop
fldenv
pop
lahf
cmc
mov
adc
jne
sbb
jns
xchg
insb
sub
push
sub
mov
jae
pop
mov
nop
xchg
xchg
shr
push
int3
xchg
shll
sbb
dec
ret
jbe
push
mov
push
insb
mov
dec
pop
mov
xor
test
sub
ljmp
stos
and
add
fdivs
mov
mov
xor
mov
xchg
outsb
add
xchg
lea
repnz
stos
add
leave
mov
lcall
imul
sub
push
mov
loope
loope
sub
out
mov
fs
cmp
cmpsb
pop
test
fstl
pop
and
js
inc
xchg
adc
sbb
sub
inc
mov
gs
aad
mov
pop
dec
ret
or
fstps
inc
movsb
sub
sub
cli
push
arpl
xchg
std
jecxz
movsb
push
dec
sub
nop
xchg
sub
addr16
mov
cwtl
lea
shll
lds
dec
aam
sub
les
dec
jge
ds
or
pop
mov
mov
incb
mov
ss
xchg
movsl
jo
fisttpll
mov
xor
mov
jnp
cmp
das
xchg
xor
iret
push
popa
popa
rcrl
repnz
jmp
mov
cmp
xorl
jae
sbb
loopne
adc
mov
cs
imul
push
mov
mov
sbb
sub
or
mov
add
inc
psubusw
stos
push
testl
sbb
inc
push
ss
sarb
mov
mov
cwtl
lock
loopne
in
movsl
jne
stc
dec
gs
shlb
daa
adc
in
bound
sub
aam
sti
push
nop
xchg
sub
loopne
xor
cmpb
jp
push
sbb
xchg
dec
xor
mulps
cmp
andb
sub
mov
test
gs
gs
fisubs
rcr
hlt
push
add
inc
push
testb
mov
xchg
add
mov
hlt
pop
push
sub
push
pop
and
pop
xchg
pop
ds
gs
loopne
push
add
xor
cmp
pop
mov
push
xor
cwtl
mov
sbb
adc
lock
lahf
jecxz
bound
icebp
or
int3
pop
cmp
sbb
adc
add
or
mov
mov
or
push
ss
pop
lds
enter
cmp
shll
inc
sbb
pop
pop
cmp
fsubrl
pop
push
cld
push
popf
or
gs
xchg
rcr
lret
xchg
jae
dec
lods
push
pop
mov
xchg
icebp
nop
xchg
xchg
es
mov
nop
xchg
xchg
mov
mov
inc
pushf
loopne
int
fcomps
pop
sbb
cmpsb
inc
push
pop
fsts
idiv
aas
sbb
cmpsl
adc
push
or
lret
out
push
movsb
jo
xchg
sbb
and
in
in
pop
aas
leave
push
ret
inc
push
jns,pn
mov
push
cmpxchg
repnz
addr16
lret
rcrb
mov
int3
pop
jle
enter
call
int
les
in
xchg
mov
lret
fwait
cmp
outsb
lds
dec
repz
xchg
test
stc
push
loop
mov
decb
lret
scas
xlat
test
or
repnz
xchg
imul
fsts
movsl
cmp
mov
sub
fsts
add
addr16
and
mov
lods
insb
sub
push
mov
inc
xchg
sub
and
sti
or
adc
xor
je
aaa
aaa
sub
sub
fisttps
addr16
jge
gs
sbb
adc
insb
dec
cmp
mov
xchg
push
push
nop
xchg
xchg
sub
stos
and
push
in
notl
cmpsl
cmpl
stos
or
addr16
fs
adc
pop
pop
dec
add
sub
fidivrl
out
ss
sub
and
mov
mov
mov
popl
pop
cmc
adc
sarb
arpl
pop
pop
xchg
mov
into
clc
lahf
sub
or
sub
fisttpl
aas
pop
jnp
in
and
lret
and
lret
push
cli
popa
cli
sub
sub
movntps
aas
inc
sbb
mov
and
pop
xchg
sbb
xor
lods
lods
lods
das
out
testb
insb
or
pop
xchg
daa
or
js
out
int3
cmp
and
mov
cltd
cmp
xchg
scas
mov
push
lcall
inc
mov
pop
int3
imul
mov
jg
xchg
hlt
mov
pop
shll
jo
or
xchg
lock
pop
cwtl
outsw
int3
gs
fistps
jge
pop
sbb
mov
mov
sub
mov
daa
jns
repnz
xor
push
mov
test
fstps
sub
aas
xor
pop
punpcklwd
mov
mov
iret
fsubrl
sub
xor
push
sti
enter
insl
dec
add
add
xchg
jno
dec
jmp
lea
jo
test
jecxz
push
inc
mov
out
dec
lods
insb
add
cs
and
jmp
xchg
xchg
or
rorb
gs
hlt
nop
addl
lods
in
add
pushf
pop
mov
mov
loope
sub
sub
push
xlat
dec
jae
into
js
lret
ror
sub
jnp
lret
add
movsb
inc
push
jbe
xor
and
xor
enter
imul
mov
jle
pop
fstps
cmp
xchg
sarb
push
ja
jbe
lret
pop
inc
movsl
xchg
insb
mov
add
insb
sub
stc
aad
lahf
test
in
dec
cmp
jg
enter
ja
test
jns
ljmp
add
fs
add
sti
sbb
fwait
adc
roll
cmp
shl
pop
daa
push
push
pop
jnp
mov
imul
sub
sbb
jns
mov
out
in
test
lret
cmp
jnp
lock
jno
imul
sub
sub
aaa
or
out
sub
sbb
or
sub
in
push
adc
and
lods
leave
mov
jg
mov
jl
pxor
rcpps
cmp
rcl
sahf
xchg
cmp
gs
inc
xchg
add
adc
inc
stc
cmp
sti
xor
repnz
jns
mov
adc
xor
repnz
aad
jb
xchg
xchg
pmuludq
movsl
jnp
cmpsl
lret
dec
xchg
sub
pop
sub
xchg
dec
daa
jae
fldenv
sub
stos
in
mov
les
ss
pop
xlat
jno
sarb
test
and
cmp
sbb
xchg
pop
push
push
into
test
or
jo
xchg
push
scas
pop
movsl
inc
cwtl
jbe
mov
inc
repz
jmp
incb
sub
adcl
inc
mulps
out
mov
adc
add
inc
push
ret
fnstcw
xchg
mov
xchg
clc
or
pop
pop
fldt
mov
sbb
mov
nop
jg
lods
lods
pushf
or
fisttps
out
add
xchg
loope
pop
loopne
jnp
push
arpl
xor
lods
lods
in
or
fldl
jmp
enter
call
xchg
ret
or
jecxz
mov
lret
orb
pop
pop
mov
and
sub
imul
lock
xor
movsb
mov
add
mov
les
test
addl
sbb
mov
sub
into
inc
mov
mov
push
inc
mov
inc
push
ds
push
push
lea
dec
jnp
nop
xchg
xchg
lods
lahf
jnp
cmpsl
sub
mov
xor
scas
aaa
mov
push
push
mov
sbb
mov
inc
push
push
sti
xor
test
jno
loopne
and
mov
mov
in
movb
enter
or
dec
push
les
push
fwait
and
ret
push
push
lods
rcr
inc
bound
sub
inc
push
negb
mov
aad
push
notb
xchg
popf
push
pushf
lcall
pop
pop
jns
ja
jle
or
rclb
ret
mov
and
add
ja
pop
in
mulps
and
addr16
shll
sub
sbb
push
xchg
iret
push
js
and
aaa
cli
jae
push
jp
fwait
test
push
in
call
jbe
gs
icebp
outsb
sti
sbb
pushf
sbb
rcl
popl
lods
lods
push
lods
mov
mov
loop
std
sbbb
popa
sti
into
out
test
ljmp
or
flds
xor
incl
pop
mulps
and
sub
sbb
pop
ds
std
fldcw
cmp
pushf
aam
rolb
cmp
in
test
sub
out
jno
dec
test
pop
loope
jmp
sub
jecxz
mov
cmp
gs
insb
arpl
das
das
pop
frstor
xor
dec
xchg
arpl
pop
pop
pop
sahf
jmp
gs
sbb
mov
mov
test
shll
mov
popa
movsb
add
arpl
or
mov
pushaw
inc
ljmp
stc
cmp
cmpsb
cmp
les
push
push
addr16
fists
mov
jno
xchg
xchg
imul
jne
out
mov
mov
iret
dec
mov
sub
xchg
gs
popf
sbb
mov
cmp
cmp
roll
mov
mov
lret
xchg
mov
jns
xor
pop
jp
pop
aas
rcrb
xchg
sub
dec
push
out
mov
cmp
repnz
sub
sub
sub
push
les
iret
add
or
lret
xchg
fwait
pop
pop
and
loope
jg
test
gs
ljmp
int3
xlat
inc
cmp
syscall
sub
mov
push
xor
push
dec
add
inc
call
jmp
stc
xor
xchg
and
cmc
mov
push
add
inc
inc
or
imul
imul
mov
sarb
stos
push
aaa
inc
fiaddl
mov
imul
imul
stc
call
dec
loope
pop
inc
sub
daa
pop
fstl
cwtl
loope
sub
pop
lahf
jmp
scas
leave
inc
mov
mov
push
mov
test
sub
or
and
test
and
pop
or
aad
sbb
sbb
lods
xlat
add
sbb
push
and
xchg
movsb
pop
push
adc
pop
dec
addb
sub
in
ljmp
das
jmp
and
fnstenv
das
or
gs
hlt
jecxz
imul
xchg
xchg
popf
pop
push
sbb
cmpsb
xchg
das
and
dec
jne
sbb
lods
addl
hlt
nop
xchg
xchg
ljmp
mov
mov
xchg
insb
jg
pop
add
push
xor
addb
movsb
push
mov
call
test
inc
push
push
test
cltd
pop
aaa
mov
nop
mov
popa
into
mov
icebp
stos
cmc
aam
dec
frstor
cmpsl
mulb
push
mov
jl
push
mov
xadd
push
sbb
cmp
inc
scas
cltd
dec
xchg
leave
arpl
and
add
jnp
push
xchg
push
push
dec
repz
xchg
stc
push
cmc
push
jmp
in
xchg
gs
dec
das
sub
call
dec
jns
sti
outsl
xor
inc
popa
outsb
mov
push
testb
inc
dec
jne
inc
xchg
sahf
sub
inc
push
mov
pushf
adc
enter
pop
enter
mov
dec
jle
out
lock
jnp
xor
push
pop
xchg
add
sub
loop
sub
cmp
gs
xchg
cs
das
aas
jno
mov
push
ret
fldenv
stc
push
mov
jb
inc
push
lcall
and
icebp
out
push
subl
add
shlb
sbb
jmp
nop
xchg
mov
movsb
xchg
and
jns
sbb
mov
pusha
pop
pop
fldcw
das
sub
cmc
add
cmp
jge
repnz
pop
cmp
inc
imul
sub
jne
mov
add
cltd
loopne
dec
gs
imul
orl
cbtw
cwtl
cmp
push
push
mov
sub
daa
in
adc
push
popf
add
aam
and
cmc
je
shl
cmp
push
mulps
dec
xor
pusha
dec
lahf
test
fists
dec
imul
stc
popf
jmp
dec
out
dec
mov
jg
pop
and
fistps
sbb
psubw
cmp
adcl
inc
add
stos
hlt
nop
xchg
sub
xor
mov
adc
jnp
cmpsb
push
mov
push
lds
mov
inc
push
pop
js
dec
js
lret
sub
xor
add
push
mov
adc
dec
lret
fsubrs
adc
pop
mov
xor
pushf
rcll
mov
cmp
gs
push
mov
iret
cmp
bound
mov
sub
in
or
xor
hlt
sbb
and
lock
xchg
xchg
imul
push
jl
mov
mov
xor
adc
and
int
sbb
xor
fs
pop
sti
push
addl
pop
ja
adc
pop
pop
cmp
xor
inc
ss
push
js
cli
pop
add
add
lds
gs
add
leave
and
call
mov
pop
push
mov
jb
add
mov
scas
xchg
cli
loope
push
inc
push
push
cmp
jbe
xchg
xchg
mov
cmc
cmpb
cmpsb
nop
dec
mov
lea
repz
xchg
lret
push
outsl
jbe
imul
mov
or
jb
mov
dec
fs
mov
mov
icebp
mov
push
push
jbe
leave
jae
xlat
adc
repz
int
test
jb
call
sub
idivb
in
pop
aad
imul
in
or
in
mov
aas
lock
add
push
dec
mov
sbb
gs
inc
sbb
and
jmp
ret
ret
inc
popa
sub
pop
dec
mov
loope
aam
pop
movb
dec
adc
enter
test
test
lret
adc
shlb
pop
pop
fiadds
sarl
cmp
addr16
push
mulps
jnp
cmp
mov
sub
add
xchg
jns
stc
jmp
dec
cmp
add
repnz
cwtl
xor
dec
xor
dec
bnd
repz
enter
int3
push
and
out
mov
in
in
jbe
sbb
clc
dec
addr16
lret
pop
cmp
data16
xchg
push
cmp
fs
sti
fists
push
imul
rcrb
adc
in
leave
cmp
add
es
test
fxch
movl
jmp
pop
adc
pop
ds
roll
daa
mov
pop
fsts
jo
or
sbb
pop
pop
jnp
roll
sub
push
and
sub
xor
dec
fnstcw
cmp
ret
test
std
repnz
cwtl
outsl
cltd
add
dec
push
xchg
cltd
outsb
push
repz
int
xchg
xchg
sahf
btr
mov
adc
jne
add
dec
sub
inc
ljmp
lods
cmp
push
into
dec
mov
nop
push
js
dec
xchg
enter
not
je
shl
jnp
xor
out
pop
jne
pop
ss
and
sub
daa
int3
repnz
sub
andl
gs
frndint
push
mov
shll
jae
dec
xor
cli
hlt
nop
xchg
xchg
fs
div
fmull
mov
mov
mov
jbe
sbb
mov
xchg
push
lret
push
mov
push
mov
mov
add
sarl
mov
mov
xlat
enter
xchg
lahf
push
cmp
fucomip
mov
mov
mov
hlt
sub
push
cmp
ss
mov
push
lret
inc
cmp
enter
enter
mov
js
lret
icebp
mov
mov
in
sub
jnp
dec
int
stos
out
push
sub
and
shl
jo
and
push
sbb
mov
aaa
inc
shl
fbld
xchg
out
or
sbb
xchg
lock
cmpsl
mov
into
dec
rep
mov
dec
call
repz
and
mov
push
xchg
andb
adc
lret
cltd
jmp
loopne
fld
jp
shlb
popa
push
mov
pop
or
pop
aam
mov
adc
mov
cmp
xchg
mov
mov
or
lock
sahf
pop
sbb
mov
cs
outsb
pop
xchg
xchg
je
addb
inc
mov
push
mov
pushf
in
xchg
push
xchg
movsb
fistps
add
dec
mov
pop
fildl
das
das
test
xchg
or
ret
add
sbb
fldcw
mov
adc
or
rorb
sub
add
or
adc
push
dec
loope
adc
sub
in
and
fidivl
test
int3
sbb
xchg
xchg
xchg
jle
addb
in
ss
mov
fsub
test
sbb
sub
push
mov
mov
dec
ljmp
push
and
ja
fsts
inc
mov
push
mov
pop
jbe
mov
mov
and
sub
movsl
aaa
mov
shlb
idivl
int
icebp
lods
dec
pop
jmp
add
cmpsl
xlat
jmp
push
mov
inc
jb
es
gs
in
lods
in
add
sub
movsl
test
cmp
push
mov
mov
pusha
imul
xchg
cmp
xchg
pop
xchg
in
xlat
push
lret
daa
jmp
jnp
lret
mov
sub
shr
dec
jge
jo
mov
push
jbe
mov
pop
xchg
xchg
repnz
stos
dec
push
stc
sub
cmp
mov
insl
jle
pop
jnp
or
mov
push
je
outsl
loope
ja
je
mov
sbb
stc
out
hlt
cmp
mov
repz
rcl
mov
mov
jmp
push
mov
and
sbb
push
pop
inc
loop
sub
in
pop
pop
cmp
dec
fsubrs
insl
mov
enter
inc
fisubs
loopne
xchg
sbb
sbb
push
dec
inc
xor
inc
sbb
inc
push
push
stc
cmpsl
rorb
not
push
push
mov
adc
mov
jnp
pop
cmp
push
adc
or
es
mov
pop
lahf
xchg
cli
or
movsl
mulps
add
fdivr
adc
stc
add
xor
sbb
and
jns
test
push
ja
sbb
cmp
lahf
sub
jns
test
adc
xor
lcall
dec
insb
adc
fs
sbb
mov
shl
cmp
push
sbb
in
or
ja
mov
jl
cmp
in
push
adc
aad
push
adc
mov
push
push
testb
mov
push
mov
cmp
mov
sbb
inc
int3
lds
in
test
jl
inc
push
xor
xchg
xchg
xchg
xor
or
mov
lock
fdivl
das
push
mov
push
adc
push
lods
fwait
dec
push
xchg
xchg
stc
mov
add
push
cmpsb
mov
jb
in
xor
jb
xchg
mov
or
xchg
xchg
mov
cwtl
insb
popa
sbb
xchg
rorl
pop
rcl
dec
shrl
repnz
and
push
idivb
mov
repz
fbld
sbb
inc
popf
mov
icebp
iret
das
out
push
push
scas
fucomp
and
das
cmp
shll
add
lds
sti
adc
lods
insb
dec
cmp
movb
or
xchg
push
or
mov
enter
pop
jecxz
xchg
xchg
xchg
rcrl
fwait
dec
mulb
lret
add
pop
adc
add
int
mulps
shll
daa
add
mov
lds
mov
mov
jmp
push
mov
loopne
in
fildl
mov
push
mov
sbb
imulb
je
movsb
cmpsb
mov
stc
cmp
inc
stos
cmpsb
lods
in
lods
mov
inc
mov
daa
aad
mov
pop
sahf
fnsave
fiaddl
fdecstp
aam
and
mov
aaa
lcall
pop
push
jne
mov
xor
mov
and
xchg
fnsave
xor
xor
cwtl
movb
mov
rcll
enter
sub
jno
sub
adc
pushf
pop
mov
scas
dec
pmullw
inc
bound
faddp
and
sbb
add
mov
jne
xlat
and
dec
push
sub
lcall
cmp
xchg
cmp
or
jmp
mov
sub
jnp
lahf
xor
insb
or
or
enter
out
data16
test
push
daa
or
ret
and
lea
fnop
js
add
clc
pop
data16
mov
mulps
and
xorl
lods
int3
das
adc
pop
popa
sub
daa
xor
push
jmp
push
mov
sub
lcall
popf
mov
cmp
inc
outsb
popf
arpl
add
xchg
gs
pop
ja
gs
inc
cmp
sbb
adc
jae
sub
cltd
leave
lret
lret
lret
int3
fstpt
sbb
xchg
or
add
cmc
nop
gs
enter
mov
mov
cmc
sti
inc
push
push
mov
dec
aam
pop
sbb
rcl
mov
into
enter
push
xchg
jecxz
fistpl
mov
cltd
ret
jg
stos
jp
test
loope
jmp
xchg
cmp
roll
int
out
lret
mov
xor
repnz
inc
adc
push
add
xor
test
scas
cmp
fnstsw
call
nop
ficoml
imul
sub
jbe
dec
sbb
lea
add
mov
mov
inc
lahf
xchg
adc
xchg
enter
lock
lds
xor
mov
aad
push
adc
cmpsl
inc
xor
jmp
cmp
push
mov
mov
jmp
repnz
jne
xor
fwait
rcrl
push
mov
adc
xchg
or
sub
sub
dec
mov
mov
jecxz
adcb
dec
jp
lret
sub
mov
pop
push
flds
sub
pop
cmc
mov
xor
icebp
push
xchg
outsb
cli
sub
sbb
jmp
sahf
test
and
xchg
xchg
popf
cmp
cli
cmp
xor
outsl
lea
xlat
jnp
or
xor
mov
inc
mov
fs
cwtl
cli
xor
mov
dec
mov
ja
xor
into
jne
out
fisttpll
lea
sub
sahf
xchg
cmp
xor
xorb
sub
stos
mov
mov
aaa
cmp
add
popa
jle
test
les
addr16
and
lcall
fsub
and
sub
pop
mov
pop
sbb
mov
dec
nop
popa
mov
lret
xchg
aaa
in
pop
popf
cli
or
js
test
xchg
xchg
stos
xchg
mov
add
cmpsb
mov
movsl
and
and
and
dec
mov
pop
pop
mov
int3
mulps
popa
dec
xchg
std
or
pop
mov
sub
fildll
cmp
call
push
cmc
nop
xchg
xchg
cmp
ret
mov
xchg
mov
sub
leave
repnz
lcall
jmp
stos
add
enter
loopne
mov
pop
pop
fstps
in
cs
sti
punpcklbw
push
mov
cmp
test
push
inc
std
xor
sub
mov
push
push
insl
rcl
ljmpw
repz
xor
mov
dec
cmp
out
test
mov
and
mov
stc
arpl
cltd
jnp
and
and
cmp
rorb
mov
sub
lds
sub
or
lods
pushf
rcrb
data16
or
test
or
loop
sub
pop
mov
adcl
hlt
or
or
sub
dec
cwtl
xchg
adcl
sub
std
iret
shlb
xor
loop
cmp
gs
lds
lods
movsb
sbb
inc
insb
add
jno
jnp
dec
repz
stc
std
cli
test
push
mov
leave
icebp
loopne
or
pop
jae
sarb
nop
pop
pop
push
pop
fld
mov
bound
lock
xchg
xchg
add
shll
je
cmp
fsts
rorb
push
push
xor
inc
mulps
xchg
andb
test
pop
mov
mov
iret
ror
sbb
sub
mov
xor
mov
fdivl
xchg
lds
pop
stc
push
adc
repnz
and
lret
push
dec
rcr
xchg
xor
js
sub
jecxz
and
sub
mov
adcl
cld
lock
and
mov
mov
mov
cmpsl
cmpb
mov
push
jmp
sub
jne
or
pop
sti
jne
jp
lret
std
jp
xor
jp
lret
rcl
aaa
adc
adc
into
inc
nop
and
sub
inc
sub
sarb
sub
and
mov
sub
mov
lods
lods
jge
sbb
jb
fnstenv
add
mov
pop
stos
cmp
inc
insb
adc
gs
pop
mov
psubsw
test
loop
bound
push
or
xor
jbe
push
mov
and
push
movb
in
lock
dec
pop
push
loope
setge
sarl
xchg
out
add
out
inc
movsw
xchg
fnsave
pop
cmc
mov
aad
fxch
ret
fcmovbe
cli
mov
hlt
cmp
xor
mov
je
movsl
lret
fisubl
push
pop
movsl
mov
arpl
roll
mov
adc
stos
shll
pop
jecxz
fistpll
mov
gs
stc
mov
sub
sub
xor
out
mov
rcrb
mov
cmp
push
int3
push
notb
loope,pn
adc
ret
stc
dec
cmpsl
pop
lea
sbb
pop
jmp
repnz
popa
mov
lahf
out
testb
out
jp
inc
push
push
pop
movzbl
lret
xor
pop
outsl
clc
pop
fxch
jp
icebp
gs
xchg
lock
inc
mulps
loope
cmp
lret
andb
sub
jnp
popf
jmp
sbb
inc
fldcw
popa
js
pop
jp
and
rorl
popf
adc
insb
xlat
inc
cwtl
popf
inc
ja
sub
jno
adc
loop
jnp
aaa
and
add
gs
mov
sub
mov
and
int3
cmp
push
push
push
fcmovnbe
aam
jns
repz
adc
sbb
lea
sar
jge
enter
les
lea
lret
jne
int
repz
lret
lret
js
mov
shlb
xchg
mov
cmc
test
pop
sbb
xorb
adc
shrb
leave
lcall
sahf
pusha
pop
mov
push
or
xchg
xchg
xchg
xor
dec
xor
lcall
pop
or
push
dec
jnp
das
adc
sbb
lret
setnp
and
sbb
int
imul
enter
pushf
jmp
les
xor
xchg
sbb
inc
mov
xchg
hlt
nop
xchg
dec
xor
mov
and
mov
sub
lret
inc
cmp
xor
push
ret
aam
mov
pop
or
jecxz
repnz
inc
push
pop
push
push
aas
jbe
rorl
les
or
jg
xchg
xchg
adc
adc
popa
shll
jbe
daa
mov
faddl
add
jmp
fsubs
enter
jl
loopne
mov
mov
sbb
mov
cmp
les
add
push
divb
push
mov
mov
push
pop
pop
pop
inc
call
mov
push
xchg
xchg
xchg
aaa
mov
xor
cwtl
pop
mov
xchg
jne
std
and
dec
push
inc
mov
pushf
jne
push
mov
loope
lds
xchg
cmpsl
lcall
lret
pushf
ret
mov
js
leave
loop
dec
loopw
rorb
lret
sub
pop
fstps
push
ja
aam
xchg
es
mov
inc
jbe
sbb
iret
cmp
cs
cmp
scas
or
subl
jg
std
das
jmp
jmp
cmp
adc
dec
inc
lods
or
jecxz
in
loop
pop
lods
mov
ret
or
and
add
pop
sbb
cmp
add
repz
pop
dec
mov
popa
mov
cmpsl
mov
xchg
add
cmc
insb
insb
popf
in
xchg
mov
xchg
popf
dec
pop
add
popf
inc
or
imul
in
or
and
dec
mov
testb
sub
mov
xor
mov
push
jbe
push
fdiv
rolb
scas
pop
inc
push
fdivl
jno
jo
lret
sbb
pop
test
imul
aam
and
jmp
add
lret
adc
in
xchg
xchg
or
pop
sub
pop
aas
jne
into
stc
movsb
and
aam
add
pop
pop
ds
xchg
test
stc
sub
cmp
inc
or
pop
jno
or
jle
test
mov
jb
jno
fstpl
sub
mov
cmp
std
jns
sarb
sub
jns
js
lods
pop
cmp
mov
inc
sbb
aaa
push
mov
xor
mov
mov
sub
mov
leave
out
aaa
stos
test
mov
and
sub
adc
int
jns
gs
aad
lods
bound
cmp
fs
int3
sbb
inc
jp
add
push
sub
jns
mov
push
aad
aaa
daa
push
scas
sarl
inc
shrb
pop
sub
or
ss
mov
ljmp
dec
inc
outsl
sub
adc
vhsubps
fldenv
mov
cmpsb
jp
lret
sub
repz
mov
stc
xchg
inc
add
shll
adc
dec
in
adc
cmc
rcll
psrlq
addr16
push
enter
gs
dec
xor
lret
js
xchg
in
scas
add
pop
pop
xchg
mov
and
sub
leave
stc
and
gs
inc
imul
fldl
lcall
gs
cli
cmp
dec
mov
and
test
xchg
jge
or
lret
xchg
cmp
js
add
xchg
push
pop
pmullw
push
in
inc
cmpsb
shlb
aas
mov
lods
xchg
pushf
fmuls
add
nop
sub
or
push
mov
mov
pop
inc
dec
xor
leave
pop
cmp
xchg
lahf
or
adc
sub
adc
xchg
filds
shlw
jne
daa
mov
iret
cld
or
mov
mov
vorps
and
mov
fwait
hlt
bnd
inc
push
xor
adc
cmc
dec
lds
mov
pop
add
enter
or
sub
pop
flds
cmp
push
pop
test
push
inc
test
sti
std
jns
jns
push
shll
xchg
pop
add
cmp
iret
add
addr16
and
xor
xor
test
std
push
push
jbe
shrb
daa
es
test
pop
shl
flds
enter
pop
pop
cmc
rcrl
dec
xchg
adc
in
xor
mov
fistpll
je
into
insl
loope
dec
div
mov
cmp
push
push
shlb
popf
ja
out
push
mov
add
js
adcl
lds
mov
lods
cmp
imul
popl
pop
popa
test
scas
sub
pop
inc
jnp
dec
std
sbb
jae
cmp
and
sub
pusha
pop
push
jecxz
sbb
sub
lods
lods
insb
or
cld
cmpsl
stc
cwtl
and
shrl
js
mov
aas
dec
xacquire
out
pop
out
pop
test
data16
int
jae
aaa
fs
add
cs
aas
cmp
ret
pusha
das
das
das
jp
in
xchg
insb
fninit
daa
andb
das
mov
aaa
lods
xchg
sub
jmp
mov
sbb
sub
xchg
sub
xchg
xor
nop
xchg
add
lock
int3
jecxz
mov
inc
movsb
adc
std
mov
xchg
mov
lods
insb
lods
pop
outsl
jg
adc
jmp
xchg
or
jnp
in
pusha
popf
loop
xchg
adc
ret
test
icebp
cld
cwtl
dec
push
pop
add
jbe
and
lcall
lret
xchg
hlt
jle
outsb
sub
inc
imul
cmc
push
pop
jo
jne
imul
mov
pushf
mov
test
repnz
cmp
sbb
ds
nop
xchg
xchg
mov
mov
imul
bnd
fnstsw
roll
stc
je
mov
aas
add
and
and
xor
and
mov
mov
shr
xchg
cmp
repz
nop
xchg
dec
aad
inc
lods
fistl
insb
pop
imul
and
lods
push
adc
mulb
arpl
sub
aam
push
mov
mov
movb
pushf
je
lret
imul
cmp
jae
mov
push
and
in
mov
add
popf
negl
lcall
sub
lss
insl
or
and
mov
xlat
mov
cmp
gs
jbe
movsb
insl
push
test
push
or
push
lods
test
mov
es
movsl
and
adc
pop
or
mov
adc
xchg
mov
sbb
mov
lods
sbb
outsb
int
mov
mov
fwait
and
cmp
fwait
xchg
fstpt
add
or
inc
mov
jo
insl
fisttps
mov
stc
aam
jns
jno
jl
icebp
nop
sti
movsl
inc
in
xchg
lret
js
add
mov
or
mov
jle
popf
test
clc
xor
pop
dec
jns
and
lcall
jle
and
sub
ss
andb
loopne
inc
out
mov
lock
popf
aad
enter
cmp
insl
sub
jo
bnd
jp
xor
mov
frstor
adc
jg
sahf
popa
jno
xor
mov
movl
fidivrl
shrb
xor
shlb
addl
js
lret
in
sar
mulps
mov
and
in
bnd
testb
jle
inc
lds
ja
outsl
lret
inc
cmpsl
popf
xlat
gs
js
lret
mov
fldcw
sarb
popa
push
sub
pop
add
in
in
int
sub
loop
jle
dec
je
out
mov
or
jns
push
mov
call
scas
sbb
sub
add
and
cmp
xchg
mov
arpl
out
cmpb
cmp
dec
gs
mov
pushw
loopne
popf
mov
or
fimuls
push
jbe
mov
cli
add
mov
or
test
test
cli
out
aaa
jo
push
inc
jmp
lds
xchg
ret
mov
cmp
jnp
mov
gs
jne
pop
push
xchg
xchg
xchg
adc
jae
into
inc
mov
xchg
xchg
and
insb
int3
arpl
imul
loopne
loope
inc
xor
lods
insb
pop
cltd
data16
sub
sub
fnsave
out
mov
and
or
in
lock
and
sarl
pushf
push
sub
xor
gs
icebp
jnp
insb
int
lock
and
cmp
push
aaa
sbb
ss
cmp
repz
pusha
rolb
mov
out
insb
dec
or
mov
dec
stc
testl
gs
xchg
addl
gs
push
dec
gs
fistl
pop
and
sub
leave
jp
xor
cmp
fbstp
rclb
cs
push
inc
sub
push
pop
pop
push
cmpsl
or
and
cmp
and
lret
push
fistl
cld
jge
sub
sub
mov
dec
popf
cmc
mov
and
out
cltd
or
jp
xor
es
mov
nop
xchg
sbb
mov
mov
xor
aas
jb
xchg
mov
or
xor
nop
dec
xchg
xchg
and
test
mov
xchg
or
test
cmpsb
jb
outsb
fwait
mov
jb
inc
jbe
mov
dec
popf
sbb
inc
sub
fistl
cmp
cwtl
rol
inc
filds
inc
xchg
or
or
inc
call
inc
adc
or
or
push
add
push
push
mov
movsl
push
ja
mov
lret
inc
inc
fildl
push
xchg
jp
lret
pop
mov
enter
sbb
rcrb
mov
pop
jle
popl
sub
cmp
lock
shl
dec
imul
sbb
and
das
pop
imul
loope
cltd
jmp
jmp
dec
mov
mov
mov
cli
scas
cmp
in
in
or
lods
insb
or
insb
push
aam
scas
adc
xchg
xchg
push
aas
lods
stos
lea
mov
gs
push
fstl
ja
lret
lods
in
inc
cmp
nop
lea
lea
hlt
sub
xchg
adc
stos
dec
pop
jge
adc
popf
out
sarb
mov
xor
adc
or
mov
xchg
xchg
sbb
popa
mov
and
lods
xchg
jb
loop
or
rclb
xlat
sub
insl
and
or
dec
icebp
jbe
or
xchg
pop
or
and
sbb
imul
push
nop
cmp
xor
hlt
icebp
mov
xchg
pop
out
rcrl
lods
mov
lcall
dec
mov
add
mov
daa
stc
arpl
popa
rcrb
jb
inc
sub
xor
cmpl
repz
xchg
sub
and
pop
fmul
cmp
cmp
push
push
and
cmp
or
insb
addl
insl
push
xchg
ss
lea
sti
popf
hlt
adcb
xchg
mov
daa
jecxz
andl
xor
repnz
xor
jbe
lret
into
pop
inc
out
repnz
mov
arpl
sub
imul
dec
int
pop
pop
fsts
cmpl
push
push
pop
flds
adc
daa
in
inc
adc
jb
testb
das
das
push
xchg
xchg
mov
push
inc
ds
out
lret
out
adc
dec
inc
or
pop
dec
js
rcl
ficoml
dec
pop
pop
pop
push
sub
lret
fldl
fwait
sub
sbb
lcall
in
and
fistpll
rolb
stos
push
mov
gs
push
mov
addr16
jo
xchg
adc
stos
rclb
int
adc
rclb
mov
mov
sub
out
rcrl
jbe
call
cmp
cmp
repz
and
push
int
and
das
aas
cmc
xchg
leave
imul
ja
in
test
andb
rclb
pop
xor
out
dec
dec
int3
push
push
pop
flds
push
sbb
pop
add
push
dec
xchg
cwtl
cmp
jae
add
and
sbb
int
sub
daa
outsl
adc
sbb
cmp
out
and
cli
pusha
sub
xchg
fs
adc
xorl
das
pop
daa
in
sbb
movsl
gs
fsubrs
out
jns
popf
gs
or
jmp
loop
je
add
into
es
movsl
stos
adc
repnz
andb
shrl
cmp
jge
mov
pop
test
ja
inc
lea
adc
lods
in
hlt
xchg
pop
gs
and
cwtl
fs
adc
pop
pop
push
mov
add
cmp
mov
and
and
inc
push
mov
in
ret
fs
pop
mov
in
scas
fdivrl
dec
cmp
icebp
loope
in
movsl
jg
int
sub
into
es
mov
mov
pop
mov
cmp
lea
imul
icebp
nop
or
aas
inc
cmp
imul
adc
xchg
xchg
or
in
lods
xchg
cwtl
fsubl
in
test
jno
adc
test
or
fs
loopne
xchg
jmp
outsl
cmp
adc
xchg
mov
lock
in
jecxz
loope
std
mov
lcall
imul
xor
lret
mov
addr16
cmp
popf
cld
nop
xchg
xchg
or
and
cmc
mov
sbb
lret
xor
xor
enter
xchg
jle
frstor
lock
les
xorw
inc
popf
lret
cmpsl
icebp
aam
push
push
dec
xor
je
xchg
jo
add
ja
pusha
mov
stc
inc
out
and
push
push
test
inc
mov
xchg
jae
pop
mov
and
cmpsb
or
cltd
cmp
js
dec
and
das
aam
xchg
fs
cmp
js
add
gs
inc
sub
xorb
adc
lret
test
cmp
add
xlat
in
mulps
popf
or
ljmp
cltd
sbb
cmp
xchg
outsb
shrl
cli
add
adc
ret
mov
mov
xchg
inc
jecxz
mov
int
push
dec
dec
mul
and
add
enter
xlat
or
cmp
sub
sti
sbb
arpl
sbb
test
addb
pop
push
mov
fcmovne
daa
aam
lcall
mov
inc
ss
lret
inc
xchg
push
lahf
rolb
in
lea
fxch
push
or
jne
sbb
xor
stos
jl
jb
loope
sub
xchg
pop
dec
inc
sub
push
cmp
lods
lods
pushf
repz
xchg
loop
lods
insb
lea
xchg
imul
sahf
lea
and
sahf
lret
mov
sbb
sbb
xor
nop
xlat
pop
and
lea
aad
je
pop
xchg
push
push
divb
push
mov
out
repnz
cmpb
fsubl
mov
sbb
push
mov
call
xchg
xchg
dec
aaa
shlb
pop
idivl
adcl
mov
dec
xchg
mov
push
out
icebp
dec
cmp
sub
sub
insl
bound
pop
or
popf
lods
or
and
or
xchg
jne
aad
mov
push
xor
fildll
lret
inc
fildl
jecxz
outsb
pop
or
push
imul
imul
mov
or
fs
popf
ret
ds
lods
insb
addl
sarb
cmp
adc
xorb
in
movsl
and
fwait
adc
or
testl
jecxz
mov
sti
adc
das
lds
flds
fdivrl
push
pop
dec
sbb
pop
pop
add
push
and
sub
es
jg
les
add
jb
gs
fcomp
xlat
adc
gs
xor
dec
ss
pop
pushf
das
js
das
jecxz
push
cmp
das
das
test
mov
dec
sub
add
scas
out
pushf
add
jae
inc
mov
lods
lods
sub
jnp,pn
mov
orl
fsts
mov
ret
dec
sub
in
orb
sbb
push
rolb
int
repz
pop
pop
pop
dec
mov
sub
lock
in
xlat
mov
jecxz
sub
push
pop
sbbb
inc
lds
xor
mov
xchg
lret
mov
nop
adc
test
aad
xchg
testb
mov
outsl
inc
imul
lds
sub
mov
pop
pop
mov
in
test
pop
mov
adc
mov
bnd
rcrb
sub
push
daa
dec
repnz
hlt
mov
jmp
mov
cmp
add
lret
pop
out
addr16
push
js
leave
or
dec
sbb
lcall
pop
xchg
popf
add
pop
out
cmp
adc
nopl
push
je
xchg
xchg
stos
dec
xchg
sub
pop
add
mov
inc
loope
mov
in
in
daa
sbb
imul
push
stos
cwtl
inc
mov
lea
pop
test
jle
inc
cmp
xor
push
mov
fs
lret
divl
das
ljmp
out
sbb
cmp
lods
les
lret
sub
or
fs
cmpsl
fbstp
xor
lods
test
mov
add
nop
xchg
xorl
mov
mov
int
push
pop
mov
mov
aaa
outsl
mov
mov
sbbl
lods
fdivl
test
xchg
icebp
push
in
pop
sub
cmp
out
mov
lods
out
mov
out
repnz
fwait
rcrb
cmp
scas
cmp
xchg
sub
xchg
cmpl
inc
pop
je
sti
or
arpl
xchg
in
jmp
sti
add
adc
jns
xchg
ficomps
dec
bound
adc
dec
mov
cmp
cltd
leave
lret
lret
lret
push
push
data16
imul
sbb
cmp
in
cmp
mov
js
dec
js
lods
or
popf
das
enter
leave
jg
add
push
pop
das
test
jp
aas
inc
xor
sub
cmp
mov
ja
fs
sub
call
pop
cmp
hlt
je
mov
ret
mov
push
pop
pop
fnstenv
xlat
xlat
pop
add
inc
adc
dec
jmp
cmp
jne
jne
data16
mov
addr16
pop
jle
int3
leave
or
pop
cltd
jge
add
mov
push
jb
adc
loope
pop
sub
push
adc
flds
sub
call
pop
or
push
incb
mov
nop
xchg
xor
xchg
mov
mov
pop
and
out
bound
mov
cmp
pop
divl
enter
int
push
out
sarl
and
aad
repnz
or
cmp
sbbl
xor
arpl
lcall
lds
pushf
cltd
inc
roll
xchg
xchg
lods
lods
lods
adcl
mov
xchg
and
mov
push
sbbb
sti
pop
stos
pusha
jecxz
fiaddl
pop
shlb
insl
push
loop
xchg
jle
pop
add
icebp
cwtl
test
inc
mov
mov
fldcw
icebp
jmp
mov
jecxz
in
inc
out
dec
lods
cmpsb
pop
and
nop
sub
shll
mov
jnp
sbb
cmp
icebp
adc
scas
mov
ljmp
movsl
call
push
inc
inc
pop
cld
lods
in
and
gs
jecxz
cmp
xchg
lods
sbb
jl
add
and
sub
cmp
fs
inc
mov
push
cmp
adc
imul
repnz
or
lret
in
lret
cmp
inc
xor
xchg
cmp
jnp
xor
mov
dec
jno
fldt
leave
add
push
mov
ljmp
and
fwait
ret
int3
aam
push
sub
pop
add
sbb
and
insl
or
test
xlat
dec
popf
inc
sbb
pop
lods
insb
or
mov
sbb
addl
arpl
sub
shrl
xchg
fisttpl
inc
out
xchg
cmp
mov
push
popa
push
cs
psubusw
add
test
mov
inc
xchg
mov
inc
jbe
fisubrs
movsb
lcall
xor
js
lret
addr16
xor
jge
cmpsb
adc
leave
int
lds
inc
js
add
and
sub
addr16
leave
inc
mov
test
dec
loop
mov
push
enter
and
mov
rolb
add
fstpl
repnz
sub
test
mulps
ret
xchg
in
nop
jae
int3
dec
inc
jle
lock
sub
les
call
aaa
mov
jecxz
into
inc
rcl
insl
cmp
jl
int
dec
push
icebp
pop
and
pop
pop
fdivp
ljmp
and
daa
sahf
in
popf
mov
stc
mov
gs
mov
testl
or
pop
pop
aam
sub
mov
addr16
ret
add
and
push
push
mov
push
inc
xchg
jae
dec
push
mov
mov
push
inc
shlb
sub
mov
push
in
mov
pop
lcall
hlt
aas
xchg
mov
dec
pop
mov
adc
stos
aam
push
push
addr16
or
ss
add
fmul
lret
rcrl
xlat
mov
mov
mov
push
iret
cwtl
push
jl,pt
lods
lods
pushf
jae
sarb
mov
sbb
or
nop
xchg
inc
or
pop
pusha
out
lret
repz
dec
jns
xchg
xor
pop
push
push
fisubs
xchg
xchg
and
in
or
repnz
or
sub
pop
inc
jnp
jl
insl
dec
arpl
pop
ljmp
rcl
sub
and
arpl
push
stos
cmp
inc
dec
sbb
dec
sbb
es
inc
pop
fcoms
popa
cmp
mov
das
das
sub
pushf
inc
aad
test
push
dec
mov
xchg
push
pop
push
jo
cmp
out
cmpsl
iret
cltd
lock
xchg
xchg
mov
flds
adc
xor
lret
mov
jl
xchg
pop
dec
movsl
les
fstl
dec
mov
mov
test
test
nop
adcb
push
mov
sbb
or
mov
adc
pop
dec
pusha
pop
pop
xor
out
adc
in
inc
add
mov
and
movsl
cld
cmc
sbb
dec
hlt
xor
add
pop
test
test
mov
ret
jno
cmp
or
rolb
adc
lea
jl
push
and
inc
mov
in
gs
mov
xlat
or
or
push
cmpsb
rorl
mov
sub
popf
rcrb
pusha
inc
rcr
adc
jne
test
pop
cmp
int
gs
jno
adc
and
icebp
cltd
pop
stos
adc
xor
and
sbb
es
test
mov
fldenv
lret
jbe
push
inc
pop
xchg
movl
inc
inc
lods
add
shlb
or
sub
daa
enter
mov
imul
in
insl
ss
mov
jb
int
cmpsb
rolb
push
jbe
push
mov
jp
mov
dec
push
push
xor
jae
addb
in
pop
push
ljmp
cmp
inc
push
mov
aam
pop
xchg
xchg
mov
pop
shl
cmpsl
pop
xor
out
cmp
mov
rcll
loopne
push
ss
sahf
add
in
test
jl
pop
mov
addl
mov
mov
push
in
arpl
pmaddwd
sbb
repz
sbb
push
mov
mov
xor
aam
mov
cltd
xchg
popf
sub
lds
xchg
lods
hlt
nop
pop
scas
jnp
jl
xor
cmc
nop
xchg
mov
lcall
mov
mov
mov
roll
xor
lahf
dec
pop
lret
mov
aas
and
int
mov
lret
push
lds
lret
sub
pop
pop
pop
cmp
pop
imul
push
sbb
xchg
aaa
gs
addr16
loopne
pop
jg
sbb
sub
dec
fistl
cmp
adc
adc
int3
rcr
ss
push
into
data16
stc
call
js
test
test
mov
cmp
je
and
sub
sub
xchg
insb
popa
loope
imul
fucomip
rclb
ret
gs
nop
xchg
xchg
pop
cmp
mov
xor
in
pop
xchg
xchg
fbstp
xchg
fcmovnb
jecxz
jb
ds
dec
and
out
lcall
push
pop
inc
loopne
adc
dec
cmpsl
sub
or
inc
jo
scas
or
jecxz
mov
inc
adc
mov
insb
cmp
stc
or
jg
inc
jle
xchg
cmp
xchg
jecxz
hlt
flds
jp
and
or
pop
pop
xor
dec
lcall
pop
stos
adc
stos
pop
add
jg
aaa
jno
sbb
and
pop
andl
cmp
xchg
lret
repnz
cld
mov
xor
inc
mov
xchg
xchg
mov
fldenv
aas
es
add
xchg
inc
sub
js
mov
pop
or
pop
sbbl
pop
enter
pop
cmp
lods
lods
lods
pushf
aaa
cmp
adc
repnz
add
or
and
movsb
pop
ja
rcll
rcll
ret
pop
pop
cmp
mov
pop
mov
arpl
pop
pop
cmp
jle
push
push
mov
and
pop
mov
push
jbe
inc
lret
jmp
xchg
into
les
xor
ret
push
loopne
leave
lret
pop
addr16
stc
loope
das
pop
add
lods
pop
lods
lods
insb
fs
aaa
push
add
popf
dec
mov
in
xchg
nop
cmp
clc
sbb
cmp
pushf
pop
insb
xchg
mov
mov
dec
inc
xchg
mov
sbb
inc
jno
push
xor
add
jne
mov
xchg
jb
xor
lock
xchg
xchg
out
mov
pushf
leave
pop
adc
mov
xlat
jl
inc
push
pop
adc
adcb
pop
cmp
lock
xchg
aas
dec
push
push
jnp
insb
xchg
pop
cltd
sub
shll
push
jmp
lret
fmuls
inc
loope
stos
jmp
or
pop
je
or
jle
pop
lcall
cmpl
inc
pop
std
xor
sarl
sbb
fidivrs
ficomps
sbb
cmp
gs
int
orl
cmc
mov
lea
sbb
fldl
pmulhw
cltd
flds
push
adc
pop
pop
mov
cltd
sub
sbb
aas
fadd
in
nop
xchg
mov
pop
ror
jg
and
cmp
xor
pop
test
mov
iret
jecxz
xchg
and
push
negb
lds
divl
lret
out
inc
in
scas
cmc
inc
fwait
ret
les
stos
mov
outsl
inc
mov
popf
loopne
lret
fimuls
pop
xlat
std
test
nop
xchg
xchg
xchg
popa
and
orb
xchg
lods
sub
loopne
pusha
notb
dec
mov
mov
xor
lods
lods
lods
pushf
aad
into
push
das
mov
lea
inc
add
mov
mov
mov
pop
repnz
mov
jl
jmp
sub
xchg
sbb
push
loop
sub
adc
jl
inc
loop
sub
adc
bound
xlat
inc
aam
inc
movsb
fildl
sbb
dec
fcomip
enter
cmc
nop
jge
mov
pop
frstor
sbb
push
mov
pop
push
mov
pop
or
insl
ficomps
sti
mov
cwtl
cmp
pop
rorl
js
ret
pop
mov
pop
pop
fldcw
scas
or
mov
jo
push
pop
xor
mov
cmc
in
jbe
push
mov
mov
xchg
fwait
pop
pusha
cmp
cmpsb
mov
add
mov
cwtl
xorl
push
pop
pop
scas
xchg
add
lret
movsb
daa
cmc
mov
leave
sbb
outsb
stos
mov
xchg
lret
and
jle
shll
push
es
daa
sbb
dec
and
xchg
mov
jmp
out
scas
xor
xchg
push
std
mov
push
inc
push
push
push
mov
mov
adc
orl
pop
push
mov
idivb
sub
mov
in
call
pop
add
cmp
push
mov
cmp
frstor
sbb
mov
adcl
or
pshufw
mov
orl
or
xchg
xchg
cmpsl
into
add
inc
add
push
push
push
mov
pop
jg
fxch
lret
ja
jnp
xlat
fcmovne
pop
js
arpl
loope
mov
js
lret
add
out
pop
push
pop
xchg
lret
add
sub
add
sbb
in
cmp
push
mov
fildll
sbb
inc
mov
nop
xchg
lea
mov
mov
push
sub
sbb
adc
jno
push
xchg
jne
in
repz
ficoms
ss
scas
aad
ljmp
mov
and
lret
jg
mov
jmp
and
aaa
sbb
cmp
xchg
lret
mov
jmp
jns
inc
push
push
negb
mov
jnp
rcrb
scas
cmc
pop
cmpl
push
mov
push
sbb
ret
cmp
sbb
and
mov
or
mulps
leave
sbb
sub
cmp
dec
out
cmpsl
shll
gs
xor
mov
jge
push
jns
cmp
cmc
inc
sub
cmpsl
jns
xchg
addl
inc
iret
in
in
xchg
xchg
lea
ljmp
in
into
fldenv
mov
js
lret
push
in
mov
sbb
ljmp
cwtl
jge
jns
mov
and
or
cmpsb
cmpsb
sti
cmp
int3
loop
movsl
ja
stos
rcll
mov
test
loopne
mov
mov
jecxz
or
mov
adc
popf
stos
repz
pop
and
pop
inc
jl
sub
xchg
xchg
jae
std
hlt
mov
mov
clc
rclb
add
inc
push
jne
cs
pop
pop
pop
dec
jnp
and
sub
jo
mov
or
mov
sub
lods
insb
sub
xchg
pop
insb
cmpsb
rcll
mov
arpl
aam
push
push
jecxz
xchg
stos
in
lea
popf
stos
test
rclb
insl
nop
insl
cli
inc
fwait
xor
lods
lods
in
push
sahf
jp
mov
xchg
or
cmpsl
push
ss
adc
jae
dec
jge
roll
push
jmp
stos
dec
repnz
stos
inc
push
lret
and
test
jp
int
cld
pop
mov
xor
and
sub
pushf
push
loope
lds
push
fstps
pop
cld
aad
sub
or
mov
and
andl
lods
xchg
mov
test
sbb
adc
bound
outsl
int3
dec
stos
movsl
ret
dec
insl
fstps
xchg
or
dec
adc
jl
hlt
mov
add
mov
and
inc
mov
sub
adc
pmaxub
ret
flds
xchg
test
mov
xor
lahf
mov
icebp
nop
xchg
xchg
movsb
fnsave
dec
ret
push
and
lcall
fldl
inc
push
pop
push
sbb
lods
lods
lods
pushf
arpl
in
jnp
fistpl
in
lods
xchg
jns
imul
jecxz
adc
adc
mov
pop
cmc
push
sbb
inc
inc
dec
mov
in
in
push
popa
add
inc
and
pusha
loop
popf
mov
movsl
pop
push
xor
fldl
pusha
mov
addl
sbb
xor
xchg
sbb
mov
sub
nop
popf
cmc
ror
es
and
xor
xchg
or
std
mov
or
push
addr16
mov
push
mov
cmc
cli
nop
insl
shll
sbb
pop
sub
sub
pop
jno
lret
loopew
jg
cmp
fs
lcall
mov
lret
lret
xor
in
adc
lock
pushf
cld
cmp
mov
es
ds
iret
out
arpl
cmp
or
adc
lds
cltd
mov
pop
gs
fwait
outsb
jb
cmp
cli
inc
adc
push
cmp
inc
push
jbe
pop
stos
pop
jecxz
sbb
jnp
push
jns
shl
push
in
inc
shll
xor
ss
cmp
gs
mov
mov
sarl
lret
inc
jmp
mov
fldcw
pop
xchg
jge
fdiv
push
xchg
outsb
movsl
into
addr16
jno
sub
flds
cli
cmp
inc
push
mov
mulps
ljmp
xchg
push
sub
aas
dec
test
and
dec
into
or
lds
inc
jne
lret
call
movsl
push
sub
or
cld
bnd
inc
xchg
pop
cwtl
dec
jns
jns
loopne
or
stc
loop
ret
daa
jns
xor
fwait
inc
add
pop
inc
jo
push
inc
int
pop
xchg
sahf
lret
lret
add
outsb
cmpsl
cwtl
fwait
pop
pop
pop
cmp
aas
addr16
dec
dec
xchg
and
sub
cwtl
or
rcll
aas
jae
stc
sub
out
and
xlat
loope
loop
sub
rcrb
in
xchg
xchg
mov
xchg
popf
mov
rorl
xchg
es
fwait
in
test
adc
cmp
xchg
mov
push
mov
in
dec
sbb
push
js
aad
int3
and
lret
sbb
cmpsl
xchg
mov
sbb
sub
lret
out
and
mov
shll
negb
mov
xor
andb
stos
test
add
adcl
mov
fs
inc
push
push
movsb
mov
stos
shr
xor
out
jmp
repnz
lea
daa
cmpb
mov
or
ja
imul
xchg
or
dec
sbb
push
pop
fstps
or
gs
inc
outsb
aaa
dec
adc
mov
adc
push
cld
sbb
in
jne
cmp
aaa
loope
loop
xchg
lea
mov
adc
shl
mov
fstpl
push
js
mov
sub
jecxz
xlat
push
cmp
cmp
lea
xchg
inc
notb
mov
popf
lcall
repnz
enter
dec
rorl
push
adc
push
cld
sub
mov
jecxz
xchg
icebp
mov
out
xor
cmpsb
mov
jle
dec
pushw
cmp
insb
gs
inc
pop
lds
xchg
sub
dec
pop
cmp
sub
lock
data16
js
pop
mov
in
push
mulps
gs
ja
imul
add
cltd
lods
sub
es
leave
xor
lret
mov
jne
pusha
jge
lret
sbb
mov
pop
pop
pop
fiadds
xor
mov
scas
mov
or
jnp
dec
aad
inc
adc
xchg
xchg
xchg
mov
int3
int3
pop
cmp
ja
xor
lods
lods
pushf
shrb
xchg
imul
lods
push
ret
jae
nop
xchg
xchg
popf
sub
hlt
mov
jl
and
mov
mov
mov
test
mov
mov
nop
xchg
xchg
sub
bound
in
sub
inc
dec
push
inc
js
jp
jns
fwait
sahf
or
enter
pop
sbbl
pop
pop
pop
idivb
leave
fiadds
gs
push
mov
imul
fs
movsl
ret
mov
lods
fsubrs
and
xchg
insb
jo
mov
mov
push
rcrb
test
mov
jne
pop
test
dec
aam
mov
in
sbb
lret
lret
cmp
out
fxch
js
in
hlt
shll
call
into
add
sahf
cmp
gs
and
jbe
mov
lret
sub
sub
push
jb
popa
dec
das
cmp
bound
dec
xchg
mov
mov
gs
inc
pushf
jae
enter
mov
and
fnstenv
xorb
jmp
xor
sbb
lret
movb
jbe
into
imul
mov
jae
xchg
enter
xchg
jg
add
pop
pop
fld
aad
seta
cmp
gs
or
insb
sub
or
xlat
pop
lret
lahf
push
or
jae
xchg
int
pusha
push
and
iret
sub
add
out
lods
pushf
enter
lahf
lock
mov
pushf
icebp
cmp
mov
mov
mov
mov
mov
xorl
loope
dec
dec
cltd
daa
sbb
mov
mov
es
dec
jbe
mov
sub
aas
lret
notb
rolb
mov
xchg
rolb
aas
mov
enter
movsl
pop
mov
insb
test
loope
push
mov
and
xor
sahf
add
sbb
and
cmpsl
lahf
adc
inc
mov
add
cltd
in
lds
lods
cmp
jle
nopl
mov
mov
mov
and
ror
into
les
rcll
cmc
int
jne
lret
inc
and
push
sub
xchg
or
sub
inc
fstl
outsb
xchg
dec
dec
outsl
lret
xorl
push
push
mov
mulps
outsb
fdivrs
jbe
gs
imul
adc
xchg
mov
fnsetpm(287
and
xchg
into
orb
nop
xchg
xchg
mov
je
lods
mov
jmp
adc
ljmp
sti
adc
js
lret
cmp
xlat
mov
pop
pop
fsts
cld
arpl
add
pop
fnstenv
sbb
jne
mov
pop
dec
lods
imul
loopne
fs
js
mov
mov
jnp
push
rolb
shll
push
cmp
push
test
jo
adc
lret
rcl
xlat
lods
jg
and
xlat
pop
scas
jecxz
pop
loope
das
das
fiaddl
cs
clc
or
sub
cmp
movsl
clc
lret
xchg
call
addb
in
mov
dec
ret
in
mov
inc
mov
push
push
loop
mov
mov
mov
stos
shlb
das
dec
std
fwait
sarb
dec
mov
int
push
jae
push
push
pop
xorl
roll
push
jg
and
mov
dec
je
jno
cmpsb
or
aam
push
jp
lret
js
lret
or
cltd
pop
pop
pop
cmpsl
rclb
jne
stc
aas
inc
call
test
mov
loop
int3
ljmp
and
mov
cmp
or
mov
icebp
lcall
insb
popa
popf
sbb
sub
xchg
inc
and
cmp
rcll
mov
mov
adc
mov
mov
and
push
loopne
sbb
gs
sub
addr16
xchg
lcall
mov
fcoml
jbe
out
lahf
ret
or
in
es
dec
or
enter
out
hlt
nop
xchg
xchg
mov
test
and
cmp
aad
jge
lahf
out
cmp
mov
xor
adc
enter
popf
cmp
push
xor
stc
xor
push
xor
mov
mov
mov
adc
push
pop
aam
inc
push
push
mov
stos
enter
jo
and
icebp
xchg
add
sbb
and
popf
stc
pop
daa
and
cwtl
sbb
enter
iret
fisubs
daa
cmp
adc
push
insb
mov
imul
xor
xchg
dec
xchg
stos
into
adc
nop
xchg
lret
push
inc
cmc
lods
inc
push
imulb
rcll
into
inc
cmp
stos
mov
mov
inc
pop
xor
insb
jno
pop
sbb
ds
inc
pop
cmp
jne
jl
lcall
pop
mov
inc
andl
dec
add
mov
mov
adc
in
adc
xchg
fcmovne
adc
mov
mov
add
fstpl
mov
jnp
mov
mov
mov
cmp
movsb
adc
js
mov
inc
sbb
test
sub
and
in
pop
jns
xchg
jno
jns
inc
jle
pop
loope
or
mov
or
sbb
in
push
enter
push
push
inc
jno
pusha
adc
mov
daa
test
lods
popf
mov
addr16
pushf
mov
sbb
and
push
out
jmp
mov
push
push
pop
test
adcl
sbb
xchg
leave
xchg
or
dec
pop
cmp
cmc
nop
xchg
arpl
loopne
int
and
loope
daa
and
mov
repnz
sbbb
mov
xchg
mov
in
cmp
mulps
add
ret
movsl
gs
adc
or
jno
adc
adc
pop
es
dec
inc
fcmovne
fldenv
addr16
xor
enter
xchg
fwait
loopne
enter
pop
mov
or
xchg
push
xchg
mov
and
ret
loope
dec
mov
push
mov
add
mov
imul
repnz
cmpsb
mov
shll
ljmp
add
into
mov
outsl
loop
xlat
inc
loop
in
or
fs
leave
push
rclb
sub
and
jecxz
fs
xchg
push
push
pop
lods
lods
lods
pushf
adc
and
xchg
dec
mov
sub
cmpl
dec
xchg
xchg
xchg
sub
mov
xchg
xchg
in
add
sbb
xchg
xchg
xchg
aaa
or
add
sub
mov
jnp
ret
inc
in
ss
xchg
cld
jno
adc
jmp
enter
movb
xor
std
pop
cmpsl
rcll
ss
inc
and
jle
cmpsl
lret
inc
aam
loope
mov
lahf
movsl
or
in
xor
fldenv
push
pushf
jns
push
dec
xor
adc
adc
dec
jle
fists
movsb
dec
inc
cmp
scas
mov
shl
add
jp
and
push
pop
cmp
xor
mulps
add
xor
push
lahf
out
cmp
addl
mov
fisubrl
xchg
gs
mov
lods
hlt
enter
pop
nop
xchg
xchg
sub
mov
push
loope
push
imul
daa
int
cld
adc
dec
or
dec
iret
lret
inc
fs
sbb
lock
pop
repnz
mov
sbb
mov
repnz
push
push
push
dec
gs
in
push
cmp
nop
pop
popa
mov
cmp
push
popa
cs
or
insl
cmp
pusha
mov
arpl
leave
les
or
aaa
scas
inc
pop
popf
inc
pop
or
sub
add
lods
sub
sub
push
imul
enter
pushf
int3
cmpsb
pop
push
pop
inc
scas
xchg
dec
into
jmp
fwait
jae
mov
jae
xchg
movsb
inc
sub
mov
mov
adc
loope
dec
mulb
inc
dec
lret
mov
xorb
mov
int3
inc
sub
cltd
dec
xchg
loope
in
dec
cmp
jmp
add
add
faddl
xchg
into
add
pop
stos
out
in
mov
pop
aad
push
fdivs
cmovbe
enter
sub
imul
mov
xchg
cmc
stc
push
jp
xor
lock
cmc
nop
cmpsl
ja
sub
xor
data16
inc
push
dec
add
in
and
dec
inc
xchg
mov
cmc
mulps
fimuls
ret
sbb
in
cltd
jge
mov
sub
out
sub
outsl
aas
out
and
inc
dec
mov
addb
andb
lret
xor
sub
or
pop
sub
jo
xchg
arpl
repnz
sbb
cmc
adc
xor
out
push
dec
pop
cmp
sarl
pop
fstps
pushf
cmp
adc
push
push
fildll
outsl
add
mov
sbb
lret
repnz
clc
sbb
pushf
dec
or
shll
idivl
dec
pop
shlb
leave
lret
int
ret
sbb
rcll
fs
jbe
testb
lcall
pop
fldl
add
mov
in
add
push
ja
adc
jecxz
xchg
jo
test
stos
sbb
xchg
push
cmp
fstps
psubusw
lahf
ljmp
movsl
xchg
dec
mov
lock
out
xchg
sub
popf
sbb
std
pop
jmp
flds
iret
push
mov
push
das
cli
add
pop
pop
cvtps2pi
outsb
ljmp
fwait
or
mov
shll
push
mov
insb
add
or
mov
test
adcl
sub
add
ja
repnz
jmp
insb
mov
inc
loop
dec
dec
cmp
in
xchg
lea
or
dec
aaa
dec
addb
jo
xchg
jge
mov
mov
xchg
lds
and
push
test
pop
rorb
sahf
stc
dec
mov
leave
int
push
ret
jp
lret
bound
sbb
and
fstl
inc
dec
mov
and
jnp
cld
and
dec
gs
mov
and
or
or
rcl
dec
loop
xchg
mov
and
das
aas
cmc
mov
das
gs
call
je
jo
fs
leave
add
repz
mov
insl
jl
pop
and
iret
insb
in
mov
ss
xchg
dec
mov
imul
add
cmp
stos
movsl
inc
push
push
push
fldl
stos
lods
insb
test
inc
sarb
xchg
mull
and
xchg
addl
sub
add
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
and
and
mov
jmp
xor
jo
inc
rcrl
aaa
test
mov
aam
std
stos
sbb
pop
dec
fimull
lods
sbb
inc
jp
add
mov
jae
dec
fwait
adc
or
push
sub
mov
call
sub
push
add
mov
push
push
int3
daa
push
mov
mov
mov
mov
das
push
sub
jne
lock
jle
push
add
jle
loope
lea
popaw
arpl
cmc
xchg
pop
sub
push
lcall
aaa
call
addb
mov
movb
or
add
les
into
pushl
pushl
add
stc
add
aad
add
test
cld
add
add
adc
push
addb
adc
std
mov
incl
add
sbb
jo
sub
sub
jne
mov
push
pop
or
xor
por
idivl
xorl
pop
test
in
movsl
jmp
movsb
mov
pop
add
sbb
ds
rolb
xadd
mov
add
add
test
filds
test
cmp
mov
imul
into
or
jg
add
notl
fiadds
mov
add
push
push
mov
push
ja
inc
lcall
xor
decl
imul
add
pop
pop
add
mov
dec
int
fildll
jmp
insl
lcall
aad
add
fldt
xor
adcl
idivl
add
inc
and
mov
dec
arpl
pop
shll
sbb
cmp
shl
lret
flds
jge
fwait
push
push
add
pop
jmp
lea
lods
cs
stos
mov
add
sahf
outsb
mov
adcl
mov
dec
jns
out
pop
sti
out
adc
mov
loopne
loopne
sarl
inc
arpl
dec
daa
xor
mov
jg
or
popf
sbb
loopne
jne
rorl
rcll
daa
mov
mull
pusha
or
icebp
imul
xor
sarl
rcll
aad
add
pusha
pop
out
loopne
daa
adc
jl
dec
lock
int
mov
and
js
mov
push
inc
pop
mov
shlb
cmp
fbstp
and
pop
test
stos
insl
push
dec
icebp
mov
test
rol
jmp
pop
mov
sub
push
sbb
sub
fwait
cmpsl
loop
pop
dec
insb
jnp
loope
rclb
mov
xor
inc
popa
add
inc
cmp
ret
mov
aam
fwait
sub
out
push
sub
sbb
cmp
fimull
mov
fcmovu
int
loopne
mov
or
pop
loope
mov
jle
sub
aaa
mov
in
adc
mov
test
loopne
stos
sub
jnp
cld
mov
insl
inc
loop
loopne
stos
cmp
loopne
jno
dec
loopne
stos
push
inc
and
pusha
jne
xor
sbb
out
shll
dec
pop
insb
pop
xchg
mov
int
push
sbb
jns
sbb
xchg
mov
scas
mov
pop
mov
mov
fwait
mov
sbb
jmp
sub
or
test
jns
neg
sbb
xor
cmp
add
insl
sbb
inc
mov
imul
ja
fcmovnbe
xor
stos
aaa
jo
or
xor
pop
and
adc
imul
mov
sbb
clc
mov
add
dec
push
mov
xor
test
xor
mov
cmpsb
push
xor
lcall
adc
negl
notl
sub
dec
sbb
fwait
jbe
add
ja
pop
mov
aam
es
data16
out
jo
loopne
lcall
outsl
and
in
fildl
adc
rcrl
mov
mov
xorl
xlat
sub
sub
xor
aaa
mov
mov
dec
sahf
sbb
mov
cmp
add
fnstenv
aad
iret
pop
mov
push
add
in
repz
pushl
add
movsl
push
cld
add
dec
ret
add
push
aam
jl
pop
lds
fiaddl
sub
jg
orb
leave
in
mov
std
sbb
sbb
cmpl
jae
cmpsb
ja
add
or
js
inc
cmp
stos
sbb
roll
dec
xorb
fdivr
or
xchg
pop
add
iret
enter
push
cmc
test
outsl
das
pusha
mov
incl
dec
xchg
dec
sub
add
stos
pop
push
or
lcall
xorl
rorb
dec
imul
pop
imul
dec
adc
ds
mov
adc
mov
sub
lcall
push
pop
add
push
sub
lods
mov
cmp
rclb
cs
insl
lcall
jge
test
add
xor
xor
inc
push
add
sbb
adc
fnsave
rolb
add
push
push
add
xor
das
mov
pop
jnp
sbb
mov
dec
cwtl
cli
mov
ret
jg
fildll
lret
mov
leave
iret
xchg
sarl
das
clc
mov
out
dec
movsb
mov
pop
repnz
ret
dec
pusha
jle
push
cmp
test
sub
mov
adc
xchg
ljmp
sub
clc
cmp
or
xor
mov
lcall
les
iret
jg
fsubr
lret
add
and
adcl
scas
xchg
imulb
or
push
mov
lcall
jp
and
dec
push
xor
inc
out
inc
mov
stos
cmp
jle
cld
decl
or
pop
add
xchg
sarb
add
and
xchg
lds
adc
jbe
ljmp
jbe
or
fst
cmpsl
popf
nop
std
jo
push
aaa
fwait
dec
outsb
mov
cmp
loop
addb
cli
mov
or
push
cmp
pushf
pop
ja
cmpb
push
lar
or
sub
mov
add
and
mov
add
adc
inc
jnp
jp
jo
adcl
lods
in
pop
push
add
push
xor
cli
jbe
push
xor
add
or
mov
cmc
dec
int
cs
loopne
mov
sub
add
roll
shl
cmp
movb
rorb
mov
cltd
jge
add
les
outsb
js
xchg
fst
jb
pop
push
mov
test
outsl
cli
fdivl
scas
out
inc
repz
cmpsb
cmp
mov
mov
sub
jg
ljmp
outsb
mov
imul
dec
xor
mov
and
xchg
mov
lahf
pop
adc
mov
insl
hlt
nop
lret
mov
pop
cld
sbb
sub
mov
mov
hlt
mov
jnp
inc
jle
pop
lock
push
xor
negl
testl
push
decl
sub
pop
push
fs
arpl
ret
or
test
inc
aam
mov
jne
dec
cmp
data16
testl
fs
sub
or
nop
dec
stos
sbb
xchg
mov
cli
mov
push
rcrl
push
dec
cmp
sub
and
mov
test
mov
or
out
in
hlt
dec
mov
xlat
fdivrl
in
clc
or
mov
lock
stc
shll
icebp
gs
pop
loope
fcomip
ljmp
xor
mov
xor
cmp
aas
add
insl
push
pop
inc
and
leave
out
jg
fldt
js
movsl
dec
popa
lea
inc
jmp
jge
mov
icebp
in
shrb
lock
popa
adc
sub
jg
aam
ss
mov
outsl
les
and
jg
push
jb
nop
in
mov
pop
xor
sub
jo
jg
lcall
repnz
push
mov
pop
repz
repz
dec
mov
sbb
jbe
cmpb
push
aad
rorb
popa
cmpsb
cmp
cld
add
call
and
jns
cltd
lret
fistpl
push
test
out
jmp
decb
pop
jb
test
add
negb
cmp
cld
mov
jo
hlt
ja
lcall
mulb
test
cli
inc
push
scas
incl
jge
loop
xlat
xchg
add
stc
mov
mov
clc
cmp
decl
ret
jae
out
stos
cld
xchg
fadd
jbe
cmpsb
mov
mov
enter
rorb
fwait
mov
pop
cld
incl
push
dec
jbe
push
mov
andl
lock
pop
in
or
out
aas
jne
xor
mov
dec
push
add
mov
in
and
jns
movsl
movsl
pushf
repnz
or
add
xor
filds
sub
adc
jbe
mov
fmulp
data16
das
mov
cltd
loopne
ret
inc
pop
outsb
add
mov
adc
pop
jmp
fadd
pop
mov
sbbb
das
mov
fcoms
dec
add
cmpsb
jg
jg
mov
lods
add
js
insl
mov
pop
mov
in
jmp
insl
into
xor
add
push
outsb
js
mov
pushf
fidivl
sub
aaa
sbb
or
orb
pushf
mov
rol
add
cli
cmp
int
iret
into
leave
enter
aam
rcl
shll
incl
in
out
loope
jecxz
add
in
out
out
jmp
mov
icebp
lock
cld
stc
clc
sti
cli
add
mov
stos
scas
lods
lods
scas
scas
test
mov
mov
mov
mov
mov
std
lcall
add
mov
inc
inc
inc
inc
inc
inc
dec
add
ljmp
cli
dec
dec
dec
dec
dec
movsb
push
push
push
push
push
push
push
pop
add
pop
pop
pop
pop
mov
addr16
pusha
arpl
outsb
outsl
outsb
imul
ja
jno
jae
stos
incb
jle
js
jp
add
push
add
add
or
decl
push
or
or
adc
adc
adc
sbb
sbb
sbb
and
jmp
and
and
sub
sub
sub
es
xor
xor
cmp
sbb
aas
cmp
cmp
fidivs
test
orb
mov
push
ret
xchg
xchg
nop
xchg
xchg
popf
or
lahf
jg
aas
sti
push
mov
lods
cmp
mov
or
roll
fistpll
testl
aad
rolb
rcrl
add
pop
inc
or
sbb
cmpl
rolb
inc
jecxz
pusha
add
fbld
add
lea
ret
rorl
mov
or
mov
push
filds
outsb
mov
jp
in
loopne
adc
fildl
aam
add
aas
or
sub
xchg
ljmp
in
inc
add
push
loopne
incl
xor
inc
pop
sti
ljmp
xchg
add
out
fs
scas
pop
add
add
add
ss
fcomip
add
les
pusha
data16
aas
pop
add
outsb
pop
adc
outsl
notb
push
rol
les
les
clc
les
les
outsl
out
les
les
mov
imul
les
out
mov
les
jbe
xchg
jo
les
sahf
les
out
add
jl
movsb
les
les
mov
outsl
pop
sub
les
jnp
mov
les
sbb
mov
lds
cld
in
or
adc
les
ffree
or
les
lret
inc
adc
filds
cld
les
xchg
pop
add
les
sbb
stos
int
cld
int
push
mov
sbb
cmpsl
les
mov
cld
int
cld
les
enter
fadd
sub
les
lret
int
aam
xor
add
les
les
les
in
les
les
fs
jecxz
addl
cmc
ficompl
pusha
icebp
enter
loopne
jl
hlt
pusha
inc
xor
pushf
ficoml
lock
iret
sub
das
mov
xor
in
adc
push
or
test
insb
inc
adc
cmp
adc
int3
rclb
in
fwait
sbb
cmp
test
cwtl
mov
les
mov
ret
xchg
mov
in
rol
scas
adc
lcall
rclb
mov
mov
in
data16
fcomp
stc
js
fcmovb
out
xor
xchg
adc
or
les
push
jmp
fmull
fsubl
add
push
repz
into
lods
adc
scas
fcom
sbb
les
adc
push
rcr
int3
xchg
adc
or
adcl
les
repnz
rorb
adc
adc
pop
mov
scas
les
xchg
hlt
addr16
data16
cmc
mov
sbb
pusha
adc
cmc
arpl
aaa
cmc
bound
shll
mov
cmc
outsl
shll
insb
cmc
imul
cmc
stc
fwait
mov
cmc
push
cmc
jne
cmp
je
cmc
ja
popa
cmc
jbe
stc
fwait
mov
insl
cmc
jo
cmc
jae
outsb
cmc
jb
cmc
jge
push
stc
fisttpl
jl
cmc
xchg
jbe
jle
jo
jns
jb
js
dec
fwait
mov
jle
jp
cmc
sbb
add
add
aaa
adcl
or
mov
adc
cmc
add
add
or
or
fwait
mov
adc
cmc
pushf
or
push
adc
cmc
or
adc
or
aaa
jg
cmc
or
push
cmc
or
cmc
adc
and
cmc
push
int
lock
daa
cmc
adc
and
adc
and
adc
sub
int
cld
cmc
sbb
cs
pop
shrl
push
sub
sbb
sub
sbb
cmc
sbb
pop
cmc
sbb
leave
ret
jle
fildll
jp
fcmovb
add
in
cmpsb
out
push
adc
ret
add
loope
int
add
jecxz
add
ret
or
in
cld
int
cld
ret
xadd
ret
push
out
ret
or
jmp
or
jmp
or
cld
int
ljmp
hlt
ret
pop
shl
push
test
shl
int
adc
ret
adc
repz
adc
ret
sbb
cld
cld
int
cld
ret
pop
sar
and
test
daa
xchg
rolb
filds
ret
and
ret
sub
mov
int
das
pop
rorb
rorb
ret
sub
mov
xor
xchg
ret
aaa
xchg
ret
fs
xchg
shll
repz
lds
bound
xchg
shll
shll
bound
mov
je
popf
shrl
outsl
lcall
sahf
shrl
shrl
shrl
stc
fldt
nop
ret
lcall
ret
mov
insl
xchg
mov
rol
ret
rol
ret
adc
ret
ret
adc
sarl
jg
mov
sar
in
into
sarl
sarl
sarl
ret
lret
dec
icebp
int
adc
roll
roll
xor
icebp
sbb
fdivr
rol
lock
rcll
fists
add
ret
std
rorl
push
ret
inc
or
in
sbb
stc
rorl
clc
push
ret
sti
rcll
cld
rcll
rcll
rcll
test
adc
cld
in
xchg
adc
repz
test
ret
mov
pop
repnz
in
sbb
sbb
mov
sbb
mov
sbb
push
adc
push
adc
push
out
rol
jecxz
adc
shll
rol
and
jae
jae
loop
adcb
shrl
adcb
jg
jl
shrl
filds
ret
fld
sub
aaa
shll
shll
ljmp
aaa
jg
ret
in
xor
shll
out
xor
shll
xlat
sarl
sarl
sarl
inc
in
mov
jmp
outsl
adc
sarl
in
sarl
sarl
out
shll
addr16
data16
cs
dec
popa
ret
pusha
xchg
dec
insl
adc
jg
jp
insb
ret
adc
imul
push
in
jg
mov
ret
adc
jbe
imul
push
jo
shufps
scas
aaa
push
jb
test
or
jl
push
jg
repz
jg
jle
or
add
movb
push
movb
movb
push
mov
jg
aaa
push
movb
push
movb
or
pop
psllq
jg
ret
push
pop
or
pop
or
or
pop
or
aaa
jg
adc
fs
pop
ret
adc
rorb
popa
adc
in
adc
adc
bound
sbb
ret
and
daa
ret
es
and
jno
and
jo
and
and
out
adc
sub
jl
das
ret
jle,pn
sub
out
out
sub
sub
jnp
sub
xor
out
incb
aaa
ret
ss
xor
add
xor
xor
add
xor
cmp
or
fs
out
int
loopne
int
mov
or
popa
adc
out
int
out
loopne
int
out
int
data16
int
out
arpl
outsb
int
out
pop
out
int
int
cld
int
imul
int
out
imul
js
cld
int
cld
out
int
out
out
out
int
out
fsub
pop
int
out
int
ret
int
out
xchg
or
adc
or
in
int
int
cld
int
adc
out
int
out
inc
out
int
out
out
cld
int
cld
out
int
out
in
out
int
out
push
les
int
in
dec
fists
int
in
push
in
int3
out
and
and
push
loopne
outsl
out
int3
loope
int3
leave
loope
enter
iret
loope
loope
sub
jg
stos
cmc
into
loope
int3
or
int3
aad
sub
shrb
int3
shl
sub
stc
loopne
int3
jg
xor
loopne
adc
ss
int3
js
xor
loopne
xchg
loopne
adc
loopne
int3
jmp
stos
in
aas
sbb
in
iret
adc
push
in
adc
in
fwait
mov
in
int
iret
int3
in
iret
in
iret
shl
outsl
stos
stc
fwait
mov
out
imul
push
loopne
jne
sti
fwait
mov
in
adc
in
xchg
in
iret
popf
in
mov
pushf
in
iret
lahf
in
in
iret
xlat
in
in
out
iret
jmp
jnp
cld
int
out
out
iret
sahf
in
cltd
in
iret
cwtl
in
fwait
in
iret
out
jg
iret
in
jecxz
iret
add
or
jb
or
push
loopne
push
adc
iret
fucom
adc
in
iret
fxam
push
fsub
adc
fnsetpm(287
adc
in
aas
jg
in
iret
mul
sbb
push
iret
imul
sbb
jae
sbb
loopne
iret
imul
and
fwait
mov
iret
jbe
and
and
mov
fwait
fwait
mov
loopne
ja
sub
jns
das
jecxz,pn
mov
out
adc
jecxz
mov
xor
out
in
aaa
iret
in
ss
loop
iret
shl
xor
jecxz
push
jecxz
iret
test
cmp
jecxz
iret
shl
ds
pusha
outsb
scas
sahf
iret
std
in
mov
into
js
mov
sub
into
sti
push
into
out
insb
into
push
jnp
jmp
add
pusha
out
adc
mov
into
lods
add
lcall
push
out
into
popa
out
cld
aaa
cwtl
or
xchg
out
into
jo
sbb
sbb
adc
into
addr16
into
data16
shl
and
call
adc
daa
leave
pop
es
push
shlb
adc
leave
adc
and
int
adc
leave
adc
sub
sbb
das
leave
pop
cs
int
cld
leave
push
shrb
sbb
leave
sbb
sub
sbb
leave
sbb
xor
sbb
shlb
ss
shlb
xor
and
xor
xor
and
cmp
sarb
fs
std
lret
addr16
enter
enter
enter
enter
int
enter
enter
int3
lret
outsl
enter
into
lret
imul
leave
push
add
push
lret
enter
outsl
je
aam
ja
xlat
jbe
lret
jno
shll
ror
jae
shrl
out
jb
ror
jge
fnstsw
lret
jg
fistpll
fmulp
out
out
enter
fmul
jnp
fstpt
fcmove
add
outsl
incb
in
pop
enter
out
add
enter
outsl
out
enter
loop
or
in
lret
bswap
out
out
decb
enter
enter
call
or
ljmp
out
adc
hlt
lret
pop
enter
test
enter
lock
out
out
enter
repnz
sbb
cld
lret
pop
enter
outsl
sbb
sti
lret
sbb
cli
and
enter
xchg
es
out
and
or
enter
enter
lret
out
out
enter
lret
cs
mov
sub
mov
out
xor
enter
xchg
lret
ss
xchg
lret
xor
nop
or
enter
enter
popf
lret
cmp
pushf
lret
repnz
repz
cld
hlt
hlt
addr16
div
lret
div
popa
lret
icebp
adc
lock
arpl
repz
aaa
jg
lret
repnz
insl
lret
std
insb
lret
cld
hlt
outsl
lret
ljmp
hlt
imul
aaa
push
lret
sti
push
cli
hlt
jne
test
repz
jg
hlt
ja
xchg
xchg
jno
xorl
cmpl
jg
lret
xor
lret
lea
hlt
jg
jle
mov
jns
mov
jg
aaa
js
mov
jnp
mov
mov
add
xchg
repz
jg
hlt
pop
lret
xchg
push
lret
xchg
hlt
add
xchg
hlt
add
xchg
jg
aaa
jg
lret
xchg
hlt
or
pushf
hlt
bswap
lahf
push
lret
sahf
hlt
or
cltd
aaa
jg
aaa
or
cwtl
hlt
or
fwait
or
lcall
movsb
aaa
je
repz
pop
lret
cmpsl
push
lret
cmpsb
hlt
adc
aam
mov
adc
aam
adcb
lret
push
mov
adcb
lret
push
sbb
aam
mov
sbb
aam
adcb
lret
jo
outsl
mov
daa
adcb
lret
jb
and
aam
mov
and
aam
adcb
lret
js
outsl
mov
das
adcb
lret
jp
sub
aam
loopne
mov
adcb
lret
test
xor
lret
mov
jg
mov
adc
lret
inc
hlt
xor
inc
xor
inc
hlt
xor
dec
xor
dec
add
aaa
xchg
lret
xor
or
lcall
imul
les
xchg
aam
mov
les
add
in
or
popa
inc
in
insl
fisubrl
or
push
insl
in
cmp
outsl
in
add
add
cmp
mov
mov
add
into
push
leave
add
sbb
or
xchg
addr16
cmpb
jmp
rcrl
loope
add
xchg
sbb
imul
imul
add
movsl
mov
sub
or
out
pop
repz
push
cmpsb
sbb
loopne
scas
ljmp
add
mov
dec
mov
imul
enter
push
or
or
mov
push
imul
push
sbb
cmpsl
imul
mov
add
pop
data16
in
ds
pop
out
pop
and
shlb
outsl
add
imul
out
imul
mov
enter
jbe
sbb
jo
jae
jb
fisubl
mov
jl
lods
bnd
sub
push
jp
or
push
loopne
push
imul
lds
mov
imul
imul
out
mov
out
lcall
lcall
pop
inc
push
imul
imul
fbstp
and
das
lcall
sahf
sub
cltd
add
inc
cltd
orl
push
add
and
jg
loopne
rcrb
add
inc
ret
add
add
incl
rolb
rolb
add
add
push
subb
mov
jl
jns
and
lret
adc
mov
stc
cld
add
ljmp
je
xor
sbb
cld
subl
mov
push
or
push
add
pop
mov
add
scas
sti
mov
cmp
jo
out
loopne
in
sub
fldl
or
mov
sarl
cmc
add
loopne
stos
pop
sub
loopne
add
add
add
mov
dec
add
fwait
loopne
push
add
lods
sub
xchg
add
add
arpl
not
loopne
jle
jle
sub
mov
dec
lret
xchg
inc
and
pop
sbb
pop
cwtl
icebp
add
lcall
loopne
sub
mov
push
mov
or
push
andb
lods
push
stos
std
mov
div
mov
stos
in
inc
sub
imul
sbb
add
sbb
into
sub
les
sbb
push
jne
add
lock
xlat
mov
pop
out
jo
sub
loop
xchg
in
in
fcmovnu
stos
lods
push
cmpsb
lock
sub
lea
aaa
fimull
pushf
mov
lea
addb
jl
xor
jo
mov
test
neg
mov
add
lock
or
pop
cwtl
in
jo
shrb
addb
rcr
mov
dec
inc
gs
mov
or
add
outsl
rcr
pop
pop
push
sti
outsb
nop
add
in
mov
adc
xor
inc
adc
mov
sti
data16
mov
push
mov
stos
shr
lret
mov
push
add
adcl
xchg
push
aaa
adc
jo
or
bound
rcl
jne
ret
jp
pop
or
inc
jnp
push
mov
ret
std
push
ret
mov
and
mov
mov
loopne
lods
jecxz
loope
sbbb
push
lock
dec
jo
dec
lret
xor
nop
push
jo
in
lods
adc
cs
mov
jo
stos
adc
or
push
adc
je
adc
enter
sub
sahf
fnsave
subl
mov
or
or
lock
lods
mov
mov
sub
stos
jo
popa
insb
sub
push
sbb
outsl
lock
add
pop
sahf
repz
jnp
jo
and
enter
stos
loope
imul
cmpsb
fldenv
cmp
or
scas
lock
movaps
loope
jmp
and
push
adc
or
test
shrl
pop
xor
ds
ss
in
mov
mov
add
xor
pop
mov
lock
jo
stos
jmp
fdivs
adc
mov
pushf
std
cmp
repnz
es
jo
xor
xor
fstpl
dec
call
out
out
daa
in
imul
jo
imul
jnp
lret
push
aas
add
test
cmp
add
sbb
notl
mov
and
lcall
imul
mov
jp
jg
sub
sbb
add
imul
and
jecxz
inc
xchg
cltd
jbe
stos
inc
dec
insl
into
mov
jb
divb
aaa
out
dec
lret
popf
call
push
inc
sbb
jmp
mov
scas
pop
in
ret
icebp
push
xchg
push
pop
cmp
xor
in
lock
jbe
sbb
push
pop
jle
adc
add
rorl
jge
repnz
shlb
or
fsubrs
or
into
data16
mov
pop
mov
fdivs
sub
add
xchg
sbb
jle
jo
or
aad
adc
sbb
lock
lods
mov
push
xor
xchg
pop
sarl
data16
popf
cmp
add
mov
shl
aaa
into
hlt
and
cmp
push
or
lods
sub
cmp
push
or
mov
or
sbb
xor
sbb
pop
mov
lock
fistpll
icebp
sbb
ss
adc
sub
test
pop
gs
out
adc
dec
pop
or
adcb
fs
punpcklbw
jo
mov
clc
sub
jmp
loope
xor
add
cs
outsb
add
imul
push
jmp
test
xchg
stos
rcrl
pop
sbb
test
popf
inc
xchg
stos
inc
cmpsb
loopne
mov
sbb
xchg
jno
clc
pop
push
sub
jno
test
pop
xor
pop
and
xchg
stos
mov
jne
arpl
push
cmp
pushf
lock
stos
cltd
out
mov
fmul
and
dec
dec
enter
aas
int3
mov
pop
adc
lock
lcall
test
add
and
push
lods
test
add
push
push
push
lock
pop
adc
adc
lcall
pop
add
popa
inc
push
jg
cs
inc
dec
inc
inc
dec
outsl
inc
add
inc
push
dec
push
pop
ja
inc
mov
jmp
in
out
enter
lcall
idiv
lock
fdivr
fmul
inc
rol
fcompl
pop
cltd
lea
or
out
ud0
fadd
fnop
enter
sbb
iret
into
lret
int3
into
rolb
icebp
add
decl
in
cli
loop
mov
mov
push
dec
add
ljmp
gs
jp,pn
pop
outsl
push
addr16
pop
dec
push
arpl
dec
push
pop
ljmp
dec
pop
jnp
mov
pop
push
inc
pop
inc
pop
sub
or
adc
mov
sbb
lds
inc
adc
xor
mov
fwait
cwtl
fmulp
iret
xchg
fst
rcr
add
les
rorb
ret
lret
rclb
leave
iret
lret
int
aam
mov
cmpsb
mov
xorb
sub
push
sahf
mov
mov
mov
sbbb
in
jg
bound
arpl
jge
imul
icebp
add
aas
repz
fnstsw
ljmp
cli
rcl
stc
rol
inc
ffreep
enter
fmul
fmul
out
in
out
icebp
xchg
and
idiv
hlt
jecxz
mov
int
out
rcll
or
iret
int3
leave
leave
int3
and
aaa
and
stos
out
pop
xor
xor
sub
xor
das
xor
or
dec
lds
push
ja
fildll
xchg
xchg
orb
mov
mov
mov
divl
decl
popa
addr16
sub
arpl
push
pop
push
sbb
decl
out
sbb
sub
push
sbb
and
adc
sub
pop
adc
incl
add
cmp
sub
cmp
sub
push
xor
je
ljmp
inc
inc
cmp
push
adc
popa
xor
das
jnp,pt
or
lcall
jbe
jae
gs
lds
adc
sbb
or
pop
pop
jne
pop
adc
fistl
add
sub
outsl
data16
and
lahf
adc
adc
push
adc
push
ss
sub
sub
jle
jge
insb
data16
lods
sti
fists
je
and
pop
daa
sub
sub
bound
jle
jno
push
add
mov
inc
mov
sub
push
jge
das
sub
xchg
inc
mov
jl
jo
jp
jge
incl
push
jnp
fidivrs
xor
cmp
pushl
and
imul
scas
and
arpl
call
mov
pop
pop
pop
or
scas
inc
aam
xchg
rcrb
hlt
fstpl
lret
int3
int3
lret
outsb
fcmovnu
leave
ffreep
cli
cli
mov
aam
mov
adcb
fadd
leave
enter
ret
adc
aad
ror
hlt
hlt
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
notl
outsb
cmp
jno
ja
xor
js
ja
adc
daa
mov
push
in
aad
decl
neg
add
lret
aam
lock
rol
int3
add
leave
fmul
loopne
shr
clc
fcom
ffree
ficompl
iret
rol
hlt
int
add
mov
lods
test
stos
test
lods
mov
cmpl
outsb
inc
xchg
lcall
jns
js
addr16
insl
outsb
jl
push
mov
addr16
xorb
jno
dec
pusha
in
dec
div
in
fptan
imul
in
pushl
aad
out
loop
out
out
jge
outsl
jns
js
arpl
outsb
insb
outsb
inc
pop
sarl
lcall
pop
ja
dec
pop
push
push
jns
inc
dec
dec
push
pop
lock
hlt
fimuls
pop
cmc
jg
stc
call
jmp
lods
stos
jle
mov
mov
mov
fistps
mov
test
mov
mov
mov
mov
mov
xlat
out
push
push
push
mov
mov
jge
aas
jge
popf
popf
xchg
xchg
into
icebp
mul
cmc
fcomip
lock
jmp
notb
aad
fbstp
pushf
mov
sahf
lcall
stc
decl
pop
or
sbb
adc
adc
incl
inc
out
dec
loop
les
add
adc
or
adc
das
pop
push
or
pop
aaa
or
push
push
sbb
inc
mov
stos
test
mov
jmp
mov
mov
ss
xor
pop
push
movhps
dec
or
in
int
fstp
loop
xlat
push
dec
inc
pop
jne
pop
dec
dec
loopne
mov
push
xchg
gs
jp
bound
mov
std
movsb
mov
mov
cmp
cmp
cmp
sub
mov
jb
inc
outsl
jne
pusha
cli
add
add
fldt
mov
out
xchg
ret
iret
loop
mov
xlat
jno
mov
cld
test
int3
roll
dec
mov
lret
iret
roll
xchg
mov
push
lahf
xchg
nop
xchg
and
and
or
or
aas
add
into
hlt
in
decl
inc
pop
xor
sbb
cmp
inc
or
xor
xor
mov
mov
mov
mov
scas
movsb
rcl
rcl
jmp
out
sti
cld
in
in
hlt
cli
clc
cmc
std
out
adcb
scas
mov
jmp
out
or
inc
cld
sub
sbb
add
lret
ret
fildl
aad
fdivr
lds
sbb
imul
ss
jg
das
pop
jmp
rcl
loop
ror
ror
in
lret
ret
bound
xchg
in
jle
jbe
inc
inc
add
cld
mov
aaa
or
mov
add
jg
mov
mov
test
incl
xchg
mov
sbbl
lret
leave
into
into
jp
ja
ficomps
call
mov
mov
cmpsl
pop
jl
aas
es
mov
or
inc
push
inc
push
fistl
mov
push
pop
or
sbb
bnd
call
dec
dec
push
push
or
push
pop
add
jnp
jp
js
jg
fldl
fdivl
mov
mov
mov
inc
pop
push
pop
push
enter
enter
out
xor
iret
push
loop
sti
mov
clc
loopne
std
mul
shl
jmp
repz
movsl
mov
out
das
sub
lret
int3
xlat
rcl
rclb
mov
mov
mov
mov
mov
push
mov
notl
fstl
lcall
mov
into
ror
leave
pop
mov
adc
into
and
icebp
jl
pushl
loope
std
shr
stc
repnz
out
cmc
repz
insb
jg
insb
jl
jl
inc
adc
dec
push
pop
push
push
dec
pusha
pop
push
insb
pop
pop
inc
push
xchg
mov
iret
jg
inc
inc
dec
jo
inc
inc
inc
mov
xchg
addr16
lret
add
push
add
cmp
cmp
sub
xchg
cmovno
bswap
insl
push
mov
xchg
cs
adc
es
jp
ja
xchg
mov
incl
ret
sub
mov
jg
clc
mov
movsb
mov
xchg
mov
xchg
sub
aas
add
pop
lock
popf
ljmp
or
adc
pop
loopne
add
repnz
outsl
push
jge
xor
pop
inc
lock
push
shr
repnz
mov
in
in
mov
jbe
clc
add
mov
mov
cwtl
cld
sbb
or
fistpl
rcr
hlt
mov
out
mov
ljmp
mov
movsb
lods
scas
mov
decb
clc
aam
lret
lret
nop
mov
outsl
imul
jg
clc
jbe
pop
inc
pop
push
inc
je
inc
pop
dec
inc
push
insb
dec
dec
dec
inc
dec
inc
inc
push
dec
clc
pop
push
pop
lret
lea
ficoms
ss
pop
test
or
fdiv
mov
sbb
fcmovbe
aad
fsub
xlat
mov
fcmovnb
mov
enter
add
sbb
cs
push
or
lret
faddp
leave
rorl
into
icebp
out
repz
sti
repnz
ljmp
sti
in
sti
loopne
ja
aaa
lret
out
loop
xchg
adcl
xchg
cmp
jmp
aas
xchg
jmp
loopne
loopne
mov
or
or
pop
pop
out
in
imul
clc
icebp
sti
jmp
push
das
push
arpl
adc
sbb
sub
and
clc
mov
sub
and
cmp
add
inc
sub
ss
xor
or
rcl
mov
xchg
xchg
mov
out
mov
decl
adc
add
pop
sbb
arpl
push
sbb
dec
repnz
adc
clc
xchg
orb
pushl
sbbb
inc
inc
push
push
dec
jno
inc
inc
inc
dec
fwait
jmp
pop
mov
lods
cli
aad
push
jo
jnp
out
jle
push
pop
cmp
jb
xor
roll
subb
loop
pop
out
mov
je
push
rolb
jg
xchg
orb
mov
rclb
xchg
sub
mov
fstp
xorl
test
mov
pusha
jnp
cmp
jae
es
sub
insb
xor
sub
pop
clc
pushl
ror
jecxz
jmp
loope
loop
xchg
fiadds
neg
ret
sbb
arpl
pop
dec
dec
dec
push
jle
push
dec
xor
xchg
movsl
orl
xchg
gs
pop
push
pop
inc
inc
adc
das
stos
mov
cltd
mov
xor
das
sar
cmp
sub
mov
adcl
mov
mov
xchg
stos
lods
test
mov
lods
call
mov
jmp
repnz
xor
shl
stos
incb
loopne
shrl
clc
icebp
scas
jb
int3
iret
rcrl
rcl
ret
fidivrl
hlt
ljmp
xor
and
add
popf
lcall
lcall
adc
inc
jecxz
or
jnp
gs
push
cmp
dec
jnp
imul
pushl
sbb
adc
sbb
lds
loop
sbb
invd
sbb
add
inc
sub
sub
cli
lar
or
sub
jnp
add
adc
xor
xor
inc
pop
inc
notb
add
lock
rol
ret
fcmovu
jecxz
mov
ljmp
lods
lods
mov
mov
mov
cmpsl
mov
fwait
lea
fildl
mov
mov
insb
pusha
jns
sub
data16
jge
gs
jne
and
push
jae
loopne
mov
out
cli
out
div
push
jmp
in
sti
out
scas
in
fidivl
out
cltd
fwait
xchg
lods
adc
aaa
cld
mov
mov
xor
add
sbb
dec
inc
add
in
repz
jbe
insl
imul
bound
mov
data16
jle
push
outsl
data16
popa
ja
xor
jo
inc
push
sbb
sbb
fsubrp
les
rclb
cmp
bound
sarl
popf
add
and
cmp
sub
fdivp
cmp
sbb
shlb
das
xor
ss
xor
jmp
and
add
cmp
sbb
add
adc
or
sbb
movlps
adc
mov
pop
sbb
jnp
subb
stos
mov
in
shr
cli
fcmove
int
lret
cli
fst
rcr
fmulp
fcomi
in
test
rolb
fcmovnbe
int
in
stc
out
lret
ljmp
jo
jle
jg
dec
ljmp
and
sub
incb
sti
int3
int3
fmul
cld
in
lret
lcall
inc
lret
fmulp
pusha
ror
fcmovne
xchg
icebp
int
sti
out
stc
rcr
pushl
or
in
jecxz
out
cwtl
cld
call
bound
inc
jne
pop
loopne
jl
push
in
out
out
loopne
loope
lods
mov
loop
out
fdivr
jecxz
hlt
in
mov
ljmp
cli
cmp
les
mov
mov
mov
movsb
test
out
incl
movsb
mov
cmpsb
cmpsb
mov
movsl
stos
scas
repnz
mov
test
into
ret
push
and
ret
int
out
adc
stos
mov
fistps
popf
mov
test
mov
in
cli
cmp
inc
mov
movsb
test
add
push
inc
insb
inc
inc
ljmp
pop
push
pop
dec
dec
push
push
dec
or
dec
dec
dec
lds
inc
inc
inc
dec
call
call
jge
gs
bound
and
shlb
pop
jb
imul
pop
mov
cvtdq2ps
pop
pop
adc
xor
cs
push
sbb
decl
dec
inc
dec
or
add
xor
pop
and
cmp
sub
aas
aas
jo
xor
pushl
xor
xor
pusha
cmp
ret
aad
or
fcomp
cltd
xchg
cltd
xchg
lret
mov
hlt
ficoml
icebp
mov
in
imul
in
and
neg
lock
loope
call
shl
in
out
out
cmpsl
sti
lahf
cltd
subb
lcall
popf
into
fucomp
out
xchg
xchg
test
ret
mov
mov
cmpsb
mov
mov
stos
scas
mov
push
mov
lcall
movsl
or
out
scas
push
pop
inc
push
sbb
cmp
dec
incl
cld
fwait
fs
dec
pop
inc
push
pop
push
xchg
inc
pop
push
add
inc
jg
dec
fidivrs
gs
jbe
outsb
jns
outsl
imul
insl
imul
insb
imul
incb
fs
pop
dec
push
mov
mov
mov
fwait
xchg
cltd
xchg
adcl
iret
jnp
ljmp
xchg
popl
les
test
call
stc
fcmove
fst
out
cli
aam
fcmovu
ret
cld
stos
in
lcall
clc
scas
inc
nop
xchg
mov
clc
stos
icebp
cmc
movsb
repnz
in
cwtl
add
add
add
sub
data16
ljmp
inc
cld
jp
out
cmp
sbb
outsl
xchg
jmp
mov
push
inc
jmp
rorb
inc
pop
jp
push
jge
push
jg
pop
jno
gs
scas
loopne
fistpll
std
loopne
out
mov
sub
aam
out
lods
test
pop
int3
inc
inc
cmp
es
dec
in
arpl
out
ja
std
jne
jne
insb
push
movsb
xchg
xchg
nop
scas
addb
mov
cmp
mov
xchg
aad
popl
hlt
loop
icebp
test
sub
xchg
jno
jne
js
add
and
inc
nop
in
ljmp
das
ret
xorb
adc
adc
and
push
sbb
cwtl
aam
mov
nop
repnz
cld
icebp
repz
sar
std
icebp
call
movsl
mov
pushf
stos
stos
jge
rolb
test
les
mov
insb
loope
repnz
movsl
scas
test
mov
adc
out
into
ror
int
xchg
rcr
add
movl
incl
inc
pop
pop
pop
sub
jge
bound
imul
or
jb
lea
jp
jno
cmp
and
xor
adc
add
sysret
sbb
or
pop
pop
hlt
decl
add
adc
or
adc
add
pusha
insl
pusha
aaa
xchg
aaa
add
sub
adc
add
int3
nop
xchg
mov
jmp
xchg
xchg
rcrl
add
xchg
lcall
sbb
sahf
xchg
ficoms
push
and
add
ret
mov
and
in
call
fsubl
mov
loop
push
and
aad
mov
lahf
imulb
outsb
rcl
fldl
dec
lea
leave
lret
test
fmul
cmpsl
mov
mov
xchg
mov
mov
lret
xchg
pop
inc
sub
and
sbb
fildl
sbb
adc
adc
adc
adc
sub
in
out
add
add
shl
int3
cltd
into
mov
fstp
adc
adc
fistpll
loop
add
out
push
add
jg
jle
rcrb
add
int3
mov
mov
cmc
lcall
cltd
mov
xorl
aam
rcl
lret
and
push
pop
inc
pop
sbb
or
cmpl
add
fimuls
mov
xorl
icebp
fists
xchg
std
rol
mov
add
inc
push
aam
cmp
add
mov
pop
mov
add
stc
in
jmp
add
mulb
sub
push
add
sub
push
add
scas
or
loope
pop
hlt
iret
roll
aam
fmul
ret
adc
or
mov
fbstp
and
inc
add
fs
cs
add
or
shrl
add
push
sbb
push
sbb
inc
adc
add
mov
jg
and
jl
imul
mov
xor
cmp
jne
jne
jno
imul
imul
outsl
cmp
aaa
sub
dec
adc
dec
pop
add
rcl
hlt
lcall
push
add
mov
or
outsl
ljmp
or
push
sub
cmp
sub
nop
es
pushl
das
das
add
xor
or
add
add
or
add
adc
call
dec
pop
and
sub
push
xor
inc
add
mov
mov
call
sbb
adc
sbb
xchg
cmpl
rolb
cmpsl
jo
add
in
sbb
stc
inc
cmp
filds
inc
xchg
ret
pop
xchg
inc
popf
add
int3
pop
insb
push
leave
and
mov
adc
dec
push
rorb
xor
adc
xchg
sbb
add
shlb
mov
scas
add
xor
lock
movb
mov
add
adc
dec
mov
cmp
sbb
mov
xchg
inc
add
pop
sbb
adc
in
mov
mov
insb
adc
adc
adc
lods
add
pushf
testb
jnp
adc
and
scas
mov
or
and
mov
cltd
dec
sarl
xchg
mov
cmp
mov
add
iret
jg
mov
add
or
mov
movsb
stos
cmpsl
mov
pop
test
outsb
ljmp
in
shrb
xchg
inc
cs
pushf
xchg
call
or
bound
fsubl
sub
cmpsb
inc
insb
nop
push
in
or
pop
addb
call
mov
sub
mov
fisubl
fbld
mov
loopne
mov
add
mov
add
in
and
and
pusha
sub
xchg
mov
inc
lods
adc
add
cs
and
mov
lcall
cmp
bound
loopne
add
loop
cmpsl
add
mov
adc
lods
and
filds
std
adc
in
cmc
testb
loope
inc
mov
stos
scas
mov
xchg
xchg
xchg
ljmp
dec
mov
hlt
popa
add
add
push
and
sub
pop
xchg
nop
xchg
xchg
cld
jg
mov
andb
call
xchg
xchg
add
jg
jo
add
addb
or
adc
xchg
adcb
xchg
cwtl
nop
mov
pusha
seta
test
incb
orl
rorl
push
jl
mov
ret
adc
xchg
mov
inc
sti
xorb
adc
add
js
mov
lea
test
addl
addb
push
data16
stos
mov
mov
xchg
mov
mov
or
mov
pop
xchg
movsb
stos
mov
call
test
jne
add
sub
add
cld
sbb
or
ret
loopne
test
add
push
mov
adc
mov
inc
cmpsl
push
cmpsb
movsb
int3
jle
mov
mov
push
pop
sub
xor
shll
test
test
mov
lods
push
xchg
popa
mov
andl
into
jecxz
or
or
and
loopne
xor
into
xor
inc
push
imul
pop
add
xchg
and
pop
pop
call
sar
loope
ret
xorb
pusha
push
mov
subb
and
mov
lods
cmpsl
fs
test
cld
sub
add
mov
adc
jno
add
nop
mov
add
xorl
add
mov
movsb
mov
and
push
std
dec
or
test
mov
push
pusha
dec
mov
inc
pop
mov
adc
das
mov
xchg
add
mov
out
decl
adc
pop
sbb
or
in
loope
push
pop
hlt
stos
enter
mov
pop
stos
inc
sub
and
nop
add
or
ss
jecxz
addl
inc
adc
pusha
mov
push
inc
ret
adc
jb
repz
repz
pop
sbb
sub
add
lahf
jb
fwait
lcall
test
outsl
outsl
clc
aas
mov
mov
or
add
add
mov
mov
cmpb
sbb
xchg
lock
adc
dec
lods
adc
fistpll
push
add
inc
mov
push
sbb
pop
mov
inc
ret
ret
sbb
sar
sbb
push
cmc
in
pusha
mov
test
dec
pop
push
sbb
cmp
insl
xor
mov
lods
ss
scas
fcoms
mov
push
repnz
incl
rcrb
add
push
xchg
movsb
test
clc
cmp
inc
add
lock
jo
incl
aas
call
cwtl
jbe
shlb
scas
xor
mov
pop
xor
xor
and
mov
xchg
nop
add
icebp
and
mov
mov
in
mov
xor
and
mov
btr
nop
jle
mov
sub
jo
scas
mov
ret
insl
addl
mov
cmp
test
pop
lock
in
mov
andb
jecxz
pop
jo
xchg
pop
xchg
push
test
cwtl
sbb
jg
nop
dec
push
arpl
ljmp
ljmp
nop
inc
push
test
insl
mov
push
push
dec
adc
sbb
jl
lds
icebp
dec
lcall
jno
xchg
sbb
and
xor
xchg
dec
das
dec
mov
adc
js
mov
and
rolb
aad
xchg
jo
sub
mov
add
adc
and
imul
incl
cmpsb
shlb
or
jb
xor
movsb
xor
bound
add
stos
push
add
dec
movsb
inc
ret
nop
add
push
repnz
std
pop
dec
std
pushl
xchg
xor
or
mov
popf
out
clc
icebp
mov
push
repnz
inc
add
rol
dec
xor
add
mov
inc
loopne
pop
sarl
enter
incb
add
iret
sar
mov
popf
cs
notb
ret
add
les
inc
fldt
out
adc
clc
mov
mov
leave
mov
inc
add
inc
repnz
mov
push
inc
mov
in
js
rcrl
out
scas
clc
jo
or
cld
and
jae,pn
fwait
pop
int
ljmp
sub
lea
add
testb
pop
mov
xor
cli
movsb
mov
jle
jnp
jmp
sub
push
jmp
add
subb
scas
add
filds
or
enter
or
inc
inc
xor
hlt
dec
enter
add
dec
rorb
ljmp
push
adc
or
add
and
or
xchg
clc
ja
mov
cmp
jp
mov
add
dec
call
fbld
sbb
add
add
cs
dec
xor
add
xor
pop
gs
sbb
lods
jp
xchg
add
add
push
pop
out
orl
shl
ss
lock
add
pop
adc
mov
dec
inc
rcll
cmp
incb
mov
and
xchg
fisttpll
sub
dec
cmp
push
loope
sarb
dec
push
sahf
pop
inc
dec
mov
dec
call
or
or
dec
mov
dec
adc
xor
mov
test
add
sti
ss
scas
add
mov
test
or
dec
std
aaa
sti
filds
pop
jb
bound
fimuls
aad
and
cmc
sti
dec
test
dec
add
mov
es
add
ret
add
mov
scas
scas
mov
lock
jo
add
dec
mov
inc
adc
mov
pop
mov
das
test
mov
push
nop
add
xor
xlat
outsl
mov
jle
insl
les
inc
inc
testb
rclb
out
cmp
fisubrs
aad
adc
sbb
sbb
sub
mov
sub
ret
mov
sbb
lcall
scas
cmc
add
and
adc
ret
movl
sub
clc
adc
imulb
inc
incl
ljmp
mov
test
jb
loopne
add
lock
neg
push
ret
lcall
cld
stos
aad
mov
dec
mov
faddl
inc
jg
cmp
cmc
adc
lcall
push
ljmp
xchg
das
mov
dec
inc
or
aam
jo
inc
cld
pop
int3
inc
sub
pop
jl
fildl
mov
aaa
cmp
adc
xchg
sub
in
mov
xlat
dec
or
mov
and
clc
popa
sbb
scas
hlt
dec
sub
ds
scas
repz
mov
popf
faddp
xchg
insl
add
cmp
in
xchg
sbb
lods
jle
xchg
cmp
sbb
out
lret
loopne
xchg
call
dec
pop
push
ja
adc
sbb
inc
hlt
rolb
std
dec
and
fistpll
xor
inc
sub
add
jle
fistl
adcb
inc
and
adc
in
fwait
jbe
sbbb
mov
xor
ljmp
int
mov
add
subb
lahf
dec
mov
pop
cmc
mov
inc
cmp
jno
lods
add
scas
mov
mov
push
dec
cmp
mov
lods
xor
lock
shll
pop
adc
jp
outsl
das
jb
loopne
gs
push
fwait
dec
and
mov
in
pop
and
sub
ret
scas
cltd
stos
mov
mov
dec
std
mov
mov
mov
loope
dec
xor
jecxz
les
inc
pusha
mov
sub
dec
dec
outsb
cs
or
mov
adc
or
enter
inc
mov
dec
inc
call
sahf
fwait
or
xor
test
repnz
mov
dec
sbb
shr
icebp
jg
jg
push
cmp
pusha
adc
mov
addb
xchg
lods
push
and
adcl
pop
les
ret
jne
dec
dec
clc
add
dec
dec
sbb
loopne
addb
sub
sti
dec
js
cmp
ss
negl
sub
dec
lock
add
add
jle
add
cmp
jp
mov
xchg
adc
cld
mov
mov
push
test
fmull
dec
cmpsb
movsb
push
js
scas
js
pop
xchg
xchg
es
add
shll
sahf
add
sub
lcall
dec
push
add
sbb
lcall
nop
sub
in
cld
fwait
add
sahf
or
push
sub
lods
inc
clc
imul
mov
xchg
dec
fmulp
add
cmp
xchg
mov
rclb
inc
sbb
adcb
push
inc
add
sar
push
into
mov
dec
or
movl
mov
es
and
add
sbb
shlb
popf
add
mov
push
pop
stos
xchg
dec
sbb
inc
push
jle
in
push
jno
scas
clc
cld
pop
dec
sub
dec
fistps
push
cmp
xorb
add
cmpb
mov
push
sub
add
sub
xor
and
push
pushf
sub
fwait
add
pop
mov
mov
xchg
xor
pop
pusha
addb
inc
fcoms
add
adc
decl
dec
addb
addb
movsw
or
add
inc
icebp
or
scas
ljmp
adc
lock
add
int3
inc
add
test
fs
mov
xchg
adcb
jbe
cli
or
lcall
or
add
or
mull
cmpb
lock
push
data16
cld
fadds
adc
mov
or
shrb
push
sbb
mov
pop
addb
ret
xchg
loopne
lcall
addb
add
mov
adc
cltd
add
sbb
ljmp
pop
sub
ja
mov
imul
lods
dec
cmc
jg
popf
dec
mov
les
push
divb
xlat
add
adc
or
push
or
scas
js
and
add
inc
or
xor
pop
mov
dec
and
inc
or
jb
jge
imul
or
or
rorl
adc
xor
mov
inc
outsl
add
mov
mov
pop
fnstsw
pop
xchg
and
add
or
mov
sub
or
mov
sbb
lret
dec
nop
adc
mov
rcrb
fimull
inc
mov
clc
add
sar
subb
dec
stos
out
mov
sub
iret
push
xor
adc
jbe
test
scas
ret
icebp
or
mov
cld
mov
dec
ret
pop
sbb
imulb
cmp
stos
fsubs
int3
jb
test
je
dec
mov
scas
int
mov
add
rorl
movb
or
push
fiaddl
sub
add
test
adc
sub
or
adc
loopne
das
clc
push
xchg
and
cmp
leave
jle
inc
cld
ljmp
leave
mov
dec
xchg
int
xor
aad
cmp
leave
pushl
xchg
add
out
add
xor
add
test
loope
les
mov
cmp
mov
in
negb
add
dec
mov
add
xchg
jl
add
add
out
rolb
cmp
test
sub
cmpsb
adc
addb
popf
movsb
sub
push
push
aam
or
in
outsl
fiaddl
flds
lea
inc
cmp
lret
lcall
or
mov
jp
in
scas
out
orb
rorl
cmp
adc
jbe
xchg
ja
sti
pop
push
add
cmc
xchg
or
inc
and
pusha
repnz
rclb
jno
inc
add
out
lds
mov
std
outsl
cld
sub
addl
sub
and
mov
pop
leave
and
inc
lcall
sub
mov
cmp
mov
sbb
add
lods
stos
sub
jg
push
cmp
dec
mov
mov
sbb
pop
hlt
mov
cmpsb
loopne
loope
fcmovu
add
or
aam
adcb
lock
cwtl
sub
testb
mov
ljmp
pop
out
sbb
or
sar
fadds
mov
mov
sti
inc
ds
xchg
sub
push
pop
sub
cmp
adc
cli
decl
xchg
cmp
adc
jge
aad
pop
mov
popa
inc
xchg
inc
and
pusha
out
or
test
test
orb
mov
xlat
add
add
loop
cmp
sub
inc
add
add
inc
out
or
ficoms
xchg
js
inc
cltd
notb
xor
decl
shrb
push
add
inc
lcall
loope
and
cmp
add
push
mov
scas
xor
test
call
loope
jp
loope
xchg
pusha
outsl
mov
sub
add
shrb
add
mov
or
mov
dec
mov
std
mov
inc
lret
call
lcall
loope
sub
cmp
jecxz
fsubl
decb
mov
mov
sbb
mov
lcall
jp
into
dec
cmc
hlt
jg
outsb
mov
or
jb
mov
mov
mov
lcall
push
mov
dec
pop
add
pop
int
les
shlb
sarl
adc
cmp
aad
aas
enter
iret
mov
ja
inc
cmp
lea
sub
inc
sub
inc
inc
pop
add
pop
jl
dec
mov
fnstsw
add
dec
and
push
push
mov
xorl
pusha
and
mov
sub
mov
in
push
mov
add
clc
dec
cltd
loope
xchg
hlt
int
cmc
in
pop
push
pop
inc
push
and
add
xor
pop
shr
int3
test
test
add
cwtl
shlb
ret
push
loopne
push
mov
and
adc
scas
loopne
mov
fdivs
gs
sub
push
dec
mov
xchg
loopne
jmp
adc
or
fildll
xor
sub
adc
pmuludq
decl
jp
shrl
adc
dec
jo
sub
push
push
xor
mov
add
adc
add
jl
fsubs
jmp
loope
test
fisubs
sbb
inc
or
ljmp
push
mov
fisubs
sbb
rorb
push
pop
addl
xchg
xor
sbb
lock
jb
and
scas
roll
test
call
inc
mov
into
loope
jmp
decb
inc
pop
sti
das
mov
imul
ret
jo
in
dec
sub
and
jmp
stos
pop
shrb
mov
jne
add
and
pushl
inc
jno
mov
mov
push
pop
stos
push
je
mov
mov
push
cmp
add
jo
xor
aas
testl
sub
jg
sbb
xchg
adc
push
push
cs
push
push
insb
adc
xlat
or
mov
iret
mov
jb
pusha
cmp
add
aam
push
dec
or
fisttpl
nop
cmp
fnstsw
aam
add
xor
inc
adcb
lock
push
add
out
call
or
adc
mov
adc
mov
pusha
pushf
sub
call
push
add
or
add
add
dec
fwait
shlb
adc
dec
sahf
insb
sub
idivb
lods
call
mov
inc
test
les
rorb
ljmp
mov
add
xor
push
fidivs
sahf
jl
jbe
adc
add
outsb
add
xchg
out
les
inc
jmp
mov
or
sub
rcll
mov
fisubrl
mov
movsl
outsl
add
or
filds
orb
test
subb
cmpsb
scas
outsl
mov
lock
dec
lcall
nop
lods
mov
mov
sub
add
mov
or
sub
push
push
xchg
fsubl
les
add
pop
and
add
addb
dec
in
push
push
dec
popf
mov
or
lcall
push
jo
out
mov
decl
push
adc
lcall
sarl
dec
xchg
xchg
nop
cmp
add
pushl
cld
xorb
mov
scas
icebp
jb
lea
mov
xchg
ret
lcall
aad
sub
or
or
mov
dec
sahf
sarl
adc
dec
mov
jnp
push
jle
incl
add
repz
mov
push
push
lods
popf
orl
outsl
push
mulb
pop
dec
mov
fs
int
test
les
push
sub
or
std
pusha
push
add
and
mov
sbb
cmp
insl
push
dec
inc
inc
scas
sahf
mov
xchg
pusha
or
pop
lock
fimuls
rcrb
add
push
mov
pop
movsl
out
rcl
xor
sbb
inc
and
rolb
inc
repnz
hlt
xchg
inc
add
nop
add
xchg
cwtl
scas
adc
fcmove
push
add
mov
mov
add
bound
sar
call
mov
rcll
adc
xchg
jnp
nop
and
mov
inc
aas
mov
pop
addb
shll
and
test
push
xorb
hlt
jg
mov
arpl
loop
mov
shlb
mov
mov
and
mov
out
inc
test
dec
stos
mov
jle
inc
mov
clc
and
jle
bound
xchg
cmp
sub
add
pop
repnz
pop
bound
mov
mov
pusha
cs
cld
and
push
and
in
popa
add
xchg
cs
rcrb
add
icebp
jmp
xchg
xchg
xor
add
sub
in
sub
loope
jge
popf
inc
xchg
cs
push
xorb
mov
cld
cwtl
and
xchg
mov
jmp
ja
in
and
inc
jo
mov
mov
xor
sub
push
mov
add
or
inc
orl
ret
add
mov
jne
outsl
and
adcl
mov
addb
ljmp
jecxz
cli
jb
mov
dec
inc
in
sar
ljmp
xchg
adc
or
adc
sub
xor
dec
pop
clc
incl
add
xor
and
imulb
incl
cld
mov
or
test
mov
outsb
js
sbb
out
adc
mov
or
jmp
aaa
cld
cvtsd2si
pusha
add
mov
dec
mov
decb
mov
inc
push
stos
popf
sarb
dec
adc
mov
test
push
std
inc
mov
adc
adc
add
mov
fidivs
imul
inc
mov
mov
out
mov
push
dec
stos
cmp
or
inc
inc
xchg
push
or
loopne
jl
mov
jo
sub
adc
mov
add
jo
mov
sub
clc
test
mov
or
add
mov
jg
and
push
lret
or
mov
in
jge
add
test
dec
ficomps
inc
mov
or
test
mov
add
mov
jb
pop
hlt
push
cld
mov
xchg
mov
aaa
xchg
fs
pusha
or
lock
add
in
cmp
fcomip
pushl
or
add
xchg
lods
xor
sub
fnstenv
push
cmp
mov
add
and
jg
jae
orl
les
add
je
jo
adc
in
sbb
testb
xor
lcall
test
clc
sub
imulb
loopne
lods
dec
push
cs
or
push
int
push
sub
sbbb
add
and
fcoml
stos
push
repnz
leave
imulb
add
cmp
lcall
lea
jo
mov
xor
hlt
scas
mov
add
xchg
xchg
hlt
loope
push
popf
and
bound
xor
cltd
jecxz
fsubs
cmp
jnp
test
mov
decl
mov
into
sbb
push
orb
aaa
cmp
or
cmp
mov
dec
popf
mov
in
xorb
aad
cli
cmp
les
mov
push
subl
ror
xor
pop
and
ljmp
pop
cld
mov
out
push
dec
sbb
ret
out
sbb
add
jnp
scas
xchg
jp
pop
xchg
add
add
incb
pop
dec
mov
sbb
inc
ss
pop
fldl
pusha
fisttpll
pusha
incl
adc
mov
popf
lods
test
ss
mov
out
and
add
jb
clc
lods
or
add
movsb
imul
add
pop
cmp
inc
or
adc
addb
cmp
add
xchg
xor
xor
clc
mov
add
sub
cmpb
frstor
lods
push
pop
insb
push
incb
fadds
inc
mov
push
sub
test
or
popf
and
lock
stos
lods
aad
or
xchg
dec
push
subl
shrl
jle
pop
cmpsb
clc
mov
les
and
mov
add
js
test
add
xor
outsb
stc
cs
repnz
cmp
xor
adc
pop
pushl
adc
inc
add
roll
lods
sbb
shlb
cmpsl
in
cmpsb
clc
sub
cmp
stos
out
push
inc
cmpb
dec
inc
xor
shrl
fsubrs
push
inc
clc
inc
push
test
xchg
rolb
pop
shlb
rcr
shrb
sub
pusha
dec
rolb
rclb
dec
ja
scas
cmp
std
sbb
cltd
inc
mov
ret
hlt
xchg
clc
icebp
sbb
inc
cmpb
dec
sub
mov
xchg
lcall
jbe
mov
add
les
xchg
mov
inc
mov
in
cli
pop
loopne
rol
lods
sub
rclb
and
adcb
fists
inc
xor
xlat
inc
sbb
adc
push
add
xchg
xchg
jb
punpcklbw
rolb
or
mov
addb
fimull
mov
sub
cmp
mov
sbb
mov
sahf
inc
ret
inc
sbb
scas
orb
out
sub
popa
pusha
add
cmp
or
mov
sub
inc
ja
loope
push
or
test
dec
call
cld
add
add
xor
loope
mov
inc
pop
fldl
pusha
push
int
leave
mov
mov
dec
mov
shrb
and
mov
clc
inc
aad
inc
test
cltd
rorl
and
xchg
mov
inc
inc
lret
mov
mov
add
into
cmpsb
mov
mov
mov
aam
and
stos
ss
data16
sbb
inc
cmpsb
movsl
arpl
cli
rcrl
aaa
sbb
cltd
adc
sub
arpl
jg
mov
loop
sbb
sub
and
addb
ret
mov
les
adc
scas
cld
ss
cmpsb
mov
sub
mov
fs
arpl
xchg
cmpl
or
ds
ja
in
jmp
test
dec
stc
test
shl
or
inc
in
shl
mov
cmp
mov
cmp
shlb
into
call
add
dec
sahf
ret
out
add
push
cmc
and
sub
ja
into
or
mov
dec
xchg
movb
lret
rorl
les
mov
adc
out
lcall
mov
aaa
dec
call
and
mov
pusha
mov
push
rcll
add
cmp
mov
enter
mov
sub
push
scas
push
xor
xor
push
sub
hlt
out
or
ljmp
jns
popa
mov
loopne
pop
mov
or
pop
test
inc
ss
leave
sbb
clc
outsl
cmpb
sbb
xchg
iret
icebp
out
aaa
out
cmpb
lcall
es
aad
add
and
dec
xchg
add
inc
aas
int
sub
lods
std
dec
mov
cmp
ret
nop
and
jmp
mov
icebp
mov
pop
mov
inc
daa
lock
mov
adc
nop
pop
shll
pop
sar
mov
lcall
add
in
decl
cmp
orb
and
sahf
shrl
popa
sbb
dec
push
fdivl
xchg
sbb
pop
inc
leave
sbb
and
ljmp
add
add
ret
fcoml
mov
dec
xchg
and
or
xchg
loopne
jo
loopne
pop
je
pop
sbb
xchg
adc
dec
or
decl
mov
xchg
mov
sub
fnstsw
mov
sbb
push
sbbl
loop
js
loopne
sub
mov
lcall
pusha
or
add
rorl
and
cld
lcallw
rcll
and
clc
push
sub
mov
das
orb
pusha
mov
mov
xor
xchg
sti
dec
fwait
push
mov
mov
nop
cmpsb
mov
adc
dec
fcmovnb
sbb
andb
in
add
sbb
xabort
mov
sbbb
jge
adc
mov
loopne
and
xchg
push
out
dec
les
loop
call
inc
bound
adc
loopne
pop
int
or
adc
push
cmp
adc
adc
test
pop
movsb
ficoml
sub
adcb
xchg
loop
inc
decb
loopne
and
orl
lret
loopne
decl
or
add
sbb
cld
fiaddl
divb
aad
add
push
leave
dec
aad
addb
fidivrs
lcall
sbb
or
test
pusha
dec
andb
aam
shrl
inc
or
pop
push
adc
adc
ja
jmp
push
dec
add
sbb
pop
aam
cmp
call
dec
pop
adc
mov
fidivs
in
adc
add
rcrb
sub
mov
rcrl
mov
sub
xor
fsubrl
sub
out
dec
js
cmp
cmp
push
mov
jo
insb
sub
dec
dec
or
xor
mov
das
xor
add
add
fidivs
and
cmp
int
test
xchg
dec
lahf
call
mov
jg
mulb
rclb
jne
out
dec
xor
add
clc
mul
jns
adc
xchg
lods
jno
xchg
fdivl
or
mov
add
and
cmp
test
fcompl
dec
sarb
mov
push
test
pop
add
inc
push
jg
lock
mov
xor
sub
add
in
outsl
je
sbb
cld
inc
mov
dec
cwtl
into
mov
push
push
jb
pusha
sub
sbb
mov
iret
call
mov
mov
ja
xor
cltd
and
gs
pusha
jo
jg
adc
nop
adc
mov
jo
xchg
push
std
fbstp
mov
mov
inc
inc
xor
sbb
mov
dec
jb
adc
les
push
adc
aaa
subb
mov
cld
fildll
mov
adc
adc
xor
and
pusha
mov
xor
sbb
inc
adc
cld
push
fmuls
xor
add
outsl
mov
push
xchg
scas
sbb
ret
adc
dec
xor
jmp
xchg
adc
rorb
and
ds
fistpll
mov
push
mov
mov
inc
cmp
add
call
cld
mov
inc
dec
add
pop
adc
cmp
lcall
inc
pop
xor
jbe
xor
inc
mov
add
testb
sub
pusha
pop
decb
ljmp
dec
stos
push
icebp
sub
sub
daa
xchg
in
mov
or
or
cmc
or
add
ljmp
or
sbb
es
sbb
adc
cwtl
and
mov
fisttpl
sbb
sub
mov
add
add
or
je
xchg
sub
jbe
add
ljmp
dec
or
lods
imull
pop
testb
mov
fsubr
mov
xor
dec
shrl
std
test
sti
xor
mov
fwait
adcl
fiadds
pop
add
mov
rolw
mov
xchg
mov
or
addr16
jnp
stc
lret
ds
filds
add
inc
add
or
loope
mov
lcall
aam
je
leave
addl
and
mov
inc
cli
inc
ljmp
outsl
fs
dec
jo
nop
and
and
cmpb
ret
sbb
out
and
push
xor
add
sub
sub
dec
ret
xor
test
pop
cld
out
and
pusha
mov
mov
divb
push
addl
inc
add
scas
es
repz
xor
adc
sub
cwtl
jmp
ljmp
lock
mov
add
jo
out
sub
xchg
add
imul
test
add
xchg
adc
les
add
mov
enter
mov
sahf
lods
ljmp
add
and
ds
lea
test
idiv
lcall
out
jns
loopne
cmp
lock
and
loopne
test
out
jg
insl
dec
mov
sub
mov
adc
inc
sbb
or
xor
fiadds
xchg
xor
lcall
mov
adc
xor
hlt
adc
xchg
add
xchg
lock
mov
mov
ffreep
xor
lods
dec
xor
dec
sub
scas
adc
inc
int
popf
xor
jno
lcall
xchg
scas
mov
and
pop
adc
pop
push
xor
sbb
lods
das
adc
and
cs
pusha
or
pusha
fadd
sbb
test
scas
xchg
or
test
mov
cmp
add
jo
adc
or
push
add
xlat
fistpll
jmp
inc
mov
movsl
push
add
sbb
addb
cmp
add
incl
into
dec
sbb
add
xor
add
add
jns
adc
dec
mov
dec
mov
xchg
and
scas
xchg
sbb
xchg
loopne
xchg
adc
and
inc
dec
shrb
jne
pop
xchg
call
lcall
cmp
in
roll
add
cmp
jp
nop
sub
and
rclb
add
add
lods
pop
cs
andb
arpl
call
mov
fsts
xorl
jbe
push
lods
adc
xor
mov
sub
popa
inc
push
cld
mov
inc
jo
rcl
adc
xor
outsb
repnz
push
sub
inc
sahf
mov
xor
sub
leave
mov
push
mov
fildl
push
test
mov
dec
or
loopne
adc
out
pop
or
in
test
adc
or
orb
roll
xchg
xor
xchg
push
jmp
cmpb
dec
dec
popf
nop
nop
xor
or
in
scas
and
fwait
cld
andb
dec
adc
cmp
rcll
pop
cld
aad
pusha
push
sbb
je
add
bound
push
mov
cmp
jnp
inc
aad
call
add
nop
cld
pop
and
adcb
and
pop
dec
movsl
inc
sub
lods
fcmovu
cli
xchg
dec
lods
popa
and
push
add
sub
adc
add
push
push
into
scas
cmpsb
ret
lods
jne
xchg
sahf
leave
pushf
mov
sub
hlt
lods
std
leave
xchg
add
movl
mov
jb
lods
mov
mov
cmp
push
or
add
outsl
push
xchg
adc
adc
sub
add
lcall
pop
lods
fldl
jl
add
cmp
mov
xchg
scas
int
xor
mov
clc
insl
xchg
lods
push
stos
mov
sbb
push
jne
lock
cmp
push
jo
inc
sar
add
inc
fsubrs
cmp
dec
xchg
add
pusha
test
in
xchg
into
jl
icebp
add
out
ret
inc
mov
lock
inc
orl
xchg
sbb
sbb
fldl
sbb
rorb
cs
adcb
xchg
xchg
je
jo
add
adc
bound
fldl
pop
or
add
pop
decl
sub
xlat
adcb
or
cmp
fadds
adc
xchg
and
sarl
adc
js
dec
cmp
or
pop
mov
aas
inc
inc
fstpt
mov
adc
mov
add
jge
mov
subb
inc
pop
lret
inc
inc
mov
xchg
sub
mov
xchg
pop
in
sub
lds
sarb
dec
addb
sub
sbb
xor
in
inc
inc
sub
fisubrs
rcrb
inc
sahf
inc
ret
sub
lock
mov
sbb
fadd
mov
mov
or
subb
inc
rcll
cmp
rolb
shr
jg
stos
pop
add
cmp
xchg
mov
pop
push
add
add
sub
jo
call
mov
std
inc
or
inc
cld
cwtl
xor
or
jg
xchg
dec
push
inc
inc
pop
xchg
lods
xor
push
insl
jnp
nop
inc
sbbl
repnz
and
push
sbb
adc
push
test
roll
sbb
push
jo,pn
inc
rolb
scas
inc
mov
inc
push
cmp
js
add
fadd
dec
adc
insb
mov
decb
mov
pop
popa
dec
jbe
ss
mov
jge
or
sbb
inc
xchg
inc
pop
or
adc
xchg
mov
push
aad
cmpsb
shl
lods
sub
adc
out
ret
shlb
xor
mov
scas
stos
mov
mov
pop
sbb
mov
add
xor
pop
bound
xlat
lods
xor
pop
or
out
mov
outsb
add
js
inc
xor
sti
push
mov
push
roll
nop
push
pushf
pop
push
add
sbb
jnp
movsb
lds
clts
or
mov
add
enter
adc
push
int
test
xchg
imul
rcrl
push
pop
jmp
call
or
roll
adc
push
dec
xor
incb
mov
stos
cmp
inc
xor
add
aaa
inc
lea
jg
add
or
loopne
lahf
push
or
ret
scas
cli
outsb
adc
jno
sbbb
pop
xor
popa
mov
popa
lds
or
mov
pushf
pop
push
add
fstpt
xor
stos
inc
inc
fimull
gs
jo
mov
inc
cs
mulb
hlt
sub
mov
add
xchg
scas
lods
dec
adc
push
mov
scas
inc
and
dec
fsubrs
sarw
mov
scas
push
adc
and
pusha
add
test
jmp
push
xor
std
cwtl
and
ret
loopne
add
ret
inc
sti
jg
dec
and
cs
sbb
dec
and
cmp
mov
lcall
adc
or
pop
mov
loopne
scas
leave
lahf
dec
adc
outsb
loopne
sbbb
subb
hlt
subb
sub
mov
jmp
test
or
add
mov
cmp
push
sti
pop
out
pop
adc
out
adc
sbb
fcoms
dec
ljmp
hlt
stos
sub
cli
or
add
xchg
and
xchg
or
sub
aad
js
stos
mov
notb
pusha
loope
lock
decl
sar
xlat
test
sbb
or
adc
sarl
aam
rclb
jns
loope
mov
dec
mov
adcl
lock
xchg
and
pop
add
pusha
adc
andl
push
jge
roll
xor
or
loope
or
imul
cmpb
jae
mov
pop
sub
jae
insl
clc
mov
sub
pop
or
test
int3
dec
fmull
inc
enter
test
ss
push
jo
push
das
add
push
xchg
pusha
imul
inc
add
sub
inc
mov
and
mov
mov
dec
test
dec
and
inc
pop
xor
addl
push
adc
loope
push
loop
mov
pop
adc
xor
and
sbbb
jecxz
cwtl
add
sub
cmp
sub
shlb
repnz
mov
andl
cld
or
push
jecxz
push
sbb
loopne
push
and
enter
sub
incb
adc
cs
inc
xor
push
cmp
daa
push
sbb
outsl
add
sub
add
mov
xchg
add
push
cmp
int3
nop
adc
adc
popa
add
mov
dec
ret
cmp
into
mov
add
jl
lea
fdivrs
push
data16
or
mov
orb
ficompl
xor
dec
mov
and
mov
in
mov
lcall
and
jl
es
les
push
push
add
add
cmp
inc
adc
pop
or
adc
inc
mov
andb
enter
xchg
and
push
out
dec
xor
inc
mov
das
and
inc
pusha
test
add
xchg
adc
inc
jo
cs
mov
inc
add
push
scas
sbbb
jmp
shll
inc
jle
add
mov
pusha
and
cmpsb
sub
cmp
dec
add
roll
cwtl
jo
pop
and
cli
fists
or
sbb
add
or
ret
push
insb
dec
cwtl
and
mov
add
mov
xchg
loope
incl
push
jo
test
fdivp
add
loopne
lock
lock
leave
scas
int
pusha
ljmp
xchg
add
jl
or
add
add
push
xchg
and
mov
scas
jp
fs
xchg
add
mov
push
scas
inc
les
and
cmp
in
add
pop
jl
loop
inc
push
jp
movsb
sub
pop
dec
push
adc
adc
pusha
mov
es
add
push
add
mov
pusha
les
inc
sub
push
icebp
or
and
cmp
cmc
lock
xorl
rclb
bound
pusha
data16
xor
shrb
insl
inc
inc
into
loope
push
xchg
xchg
xchg
and
push
test
cmp
js
pop
sbb
nop
mov
xchg
xchg
lock
xchg
mov
mov
adc
aad
jo
sbb
push
sub
jnp
es
mov
add
mov
adc
xchg
sbb
in
fldt
sub
in
add
loope
add
push
adcb
data16
mov
mov
sbb
jle
add
or
stos
and
and
jg
mov
shl
fwait
rorl
inc
push
pop
sub
int
ljmp
ret
push
stos
dec
int
add
push
cmc
mov
mov
mov
dec
mov
sub
and
add
xor
add
mov
add
ja
mov
xchg
push
mov
add
decl
test
and
add
push
or
decl
roll
pop
nop
cs
pop
fdivl
dec
inc
add
aad
sbbl
mov
mov
add
lock
mov
xchg
cmp
and
fimull
xchg
out
mov
loop
pusha
add
adc
cmp
cmp
sbb
inc
add
ret
push
icebp
cmpsb
add
push
dec
push
je
je
ss
daa
ja
xchg
or
call
or
sub
cs
and
scas
nop
ret
add
add
xchg
fcomps
movsb
push
sub
adc
xor
popf
jbe
pop
cmp
sbb
jecxz
jo
mov
inc
push
cmp
and
lods
leave
mov
add
adcb
lcall
incb
add
mov
push
xor
or
jo
inc
insb
push
cmp
inc
cmp
mov
icebp
jo
test
sbb
push
mov
movb
add
mov
fmul
adc
adc
adc
pop
inc
adc
inc
inc
mov
inc
js
add
pop
cmpl
lret
ss
pushf
add
fs
ss
in
sub
push
and
xchg
testl
ja
fisttps
aaa
pop
adc
xor
inc
mov
icebp
js
pushl
adc
mov
xchg
rdpmc
xchg
jae
add
loopne
adc
mov
push
mov
mov
repnz
xchg
popf
mov
or
xchg
add
outsl
incl
loop
mov
push
pop
pusha
mov
add
ja
mov
sub
mov
rolb
incl
pushf
mov
rol
xchg
adc
popa
sahf
popa
les
fimull
fwait
jb
stos
les
jo
dec
shrb
ljmp
clc
scas
cmp
add
popf
cmp
sub
push
sub
push
push
cmp
mov
sub
ret
add
jge
or
sub
mov
mov
xchg
decl
lock
mov
divb
shrb
shll
jo
dec
jg
lock
add
add
pop
mov
cmp
mov
jg
incl
divb
cmpb
pushf
and
inc
sub
mov
inc
roll
mov
or
dec
mov
pop
lock
push
scas
xor
lock
xchg
and
lcall
adc
push
cmp
pusha
int3
leave
add
lods
sbb
push
call
leave
fnstenv
jmp
rclb
mov
aaa
push
xchg
loope
dec
movsb
sub
xchg
fcoms
xchg
adc
ret
aad
xlat
nop
mov
fcomip
nop
out
test
test
add
or
shlb
mov
mov
dec
in
mov
jg
add
adc
dec
aaa
shlb
mov
dec
pop
add
adc
mov
sub
xchg
jl
filds
add
cmp
scas
mov
and
addb
popf
inc
push
inc
add
incl
adc
sub
stos
icebp
popf
adc
stos
mov
mov
test
mov
fcomi
fisttps
mov
sbb
mov
call
sbbb
add
std
push
cmc
push
inc
adc
pop
mov
push
dec
cmp
push
add
sub
inc
dec
dec
orb
fsts
adc
add
cmp
xchg
add
pop
add
jp
dec
or
xchg
scas
adc
or
or
movsb
xchg
push
add
cs
mov
add
mov
jo
aaa
in
ljmp
xchg
add
rclb
xchg
dec
jle
add
inc
add
cs
roll
das
xlat
push
xchg
xchg
jno
and
inc
mov
cmp
push
mov
data16
pusha
sbb
aam
cmp
push
outsb
mov
stc
inc
dec
rcr
sub
rolb
rorb
jne
sbb
shll
movsb
inc
sbb
xchg
cmp
negb
xchg
add
mov
into
inc
fiaddl
add
adc
add
add
mov
rorl
jnp
roll
les
movsl
and
ss
addb
push
sub
add
in
incb
mov
fmull
xor
dec
cwtl
ss
lret
lds
jg
orb
test
cmpsb
jg
mov
push
rcrl
mov
das
pushl
mov
sbbl
addl
loope
icebp
inc
mov
adc
pop
adc
add
jno
xchg
pop
sbb
mov
in
dec
sbbl
xchg
cli
test
std
xchg
fdiv
in
loope
adcb
in
fsubrl
cmp
mov
or
adc
mov
orb
sbb
lods
repnz
add
int3
cmpb
and
mov
cld
add
add
add
cmp
cmp
sbb
add
sbb
dec
add
pop
push
decl
jecxz
movsb
pop
ret
inc
sub
xor
add
ds
add
adc
add
jmp
js
filds
fwait
add
push
mov
jge
cmp
pop
sub
inc
add
loope
int3
jl
es
lret
xchg
insb
aam
mov
push
cs
cmp
das
inc
add
addb
leave
inc
ja
dec
mov
dec
inc
cmp
xchg
jge
pop
int3
add
xorl
xor
inc
ss
cmp
add
shrl
add
push
mov
cmp
incb
mov
pop
jno
fwait
daa
outsb
xlat
sbbb
jge
je
add
add
adc
inc
clc
add
and
inc
inc
sbb
xor
add
add
inc
inc
push
stos
imul
or
add
fmull
into
add
jmp
adc
pop
push
shlb
adc
dec
xor
pop
adc
adc
jnp
sub
cli
pushl
dec
sub
or
addl
add
lret
mov
pop
mov
or
push
dec
push
add
fwait
sub
loope
scas
mov
jo
add
out
add
and
cmp
filds
insl
push
or
rolb
xchg
inc
adc
push
test
pop
shll
jno
inc
cmp
mov
mov
add
fsts
jb
mov
andb
es
add
es
scas
test
bound
xorb
sbb
decl
lcall
pusha
xchg
xchg
add
aaa
loopne
int
lahf
ret
xchg
and
rolb
fidivl
add
shl
add
mov
mov
sbb
and
fcoms
leave
loopne
outsl
jnp
pusha
adc
or
incl
cmc
mov
add
mov
mov
out
jge
mov
mov
sbb
jne
addb
lcall
rol
aas
pusha
pop
cmp
repz
pushf
notl
and
dec
jl
mov
mov
adc
aad
add
cmc
cmpb
mov
inc
cmp
fcomip
jle
and
stos
push
jle
adcb
jge
shrl
jge
popa
add
fwait
lods
fbld
cmpsb
icebp
sarl
mov
mov
cmp
test
insl
test
cmc
addl
push
mov
xchg
pusha
jp
loopne
xchg
rclb
loope
fsubs
cwtl
sub
out
shrl
jp
jno
jb
outsb
and
popa
mov
and
mov
xchg
or
and
jbe
ljmp
mov
inc
cmp
mov
inc
add
je
test
sbb
leave
mov
mov
sbb
sub
push
cmpl
sub
mov
ljmp
and
ljmp
dec
bound
xor
push
mov
mov
ret
mov
and
or
loopne
outsl
cli
aas
enter
sbb
cmp
pop
rolb
sbb
incl
push
xchg
cwtl
dec
push
loope
sbb
call
xor
jg
loop
adcb
rclb
sub
pop
sub
adc
add
in
adc
add
mov
mov
or
pop
fs
sub
push
pop
ret
or
and
xchg
jge
mov
cmp
aas
test
inc
add
mov
mov
ffreep
dec
popa
sbb
xor
dec
int3
pushf
push
imul
adc
adc
icebp
dec
clc
jmp
incb
cs
shll
dec
bound
xchg
loope
and
or
xor
xchg
jno
cmp
pushf
std
out
shlb
nop
push
or
aad
test
mov
repz
xchg
rolb
orb
pop
jb
inc
push
push
xchg
add
adc
sahf
push
les
adc
sub
mov
adc
and
inc
and
insl
jg
test
decl
stos
push
mov
insb
lret
test
test
mov
insl
rorb
jg
jo
sahf
subb
inc
xor
sub
jo
in
lcall
sub
and
int3
test
sbb
mov
mov
sub
jge
cvtps2pi
push
shrb
cli
jg
ss
shll
xchg
icebp
xor
ret
sbb
xor
cld
decl
test
add
bound
loopne
mov
mov
lock
sub
push
jg
fdivp
push
movsb
adc
insb
fstl
add
xchg
push
shrl
xor
pushl
test
and
es
add
ror
and
dec
pop
testl
xchg
popa
das
jo
ljmp
mov
loopne
fs
jbe
cld
pusha
xor
std
jge
icebp
add
cs
addb
test
int
dec
in
lods
test
cmp
mov
lods
add
hlt
loopne
jo
andl
and
sbb
adc
add
lods
sbbb
test
dec
pop
adc
cmpsb
mov
aad
and
push
movsb
dec
xchg
sbb
pop
pusha
movsl
aad
jno
cwtl
xchg
add
popa
movsl
clc
idiv
add
cmp
call
add
add
cmpsl
inc
add
mov
push
xchg
sbb
mov
sub
or
adc
xor
fstl
mov
loopne
fisubrl
or
add
xchg
dec
push
popf
or
xchg
add
cmp
insl
mov
loope
lahf
push
sub
test
movsb
inc
mov
add
enter
push
inc
mov
push
mov
sbb
cmp
and
std
or
loope
inc
add
adc
out
push
adc
mov
outsl
mov
xor
mov
push
add
add
ret
dec
rolb
cmp
adc
les
dec
mov
mul
adc
nop
cmp
outsl
clc
mov
push
mov
push
das
icebp
cmp
mov
mov
add
ss
mov
adc
out
incb
mov
out
mov
cmpsl
push
jmp
push
cmp
sub
pop
xchg
adc
sub
adc
out
fdiv
or
dec
int
int
push
sbb
sti
mov
dec
mov
mov
inc
inc
pusha
int
cmp
adc
adc
and
jge
test
jg
add
rcl
add
and
loope
and
in
mov
or
dec
std
inc
outsl
clc
jg
add
jns
xchg
mov
shll
jecxz
sbb
pop
xorb
mov
mov
push
decl
xor
pop
adc
sbb
jp
mov
xor
xor
mov
mov
xchg
inc
push
add
dec
dec
les
mov
out
mov
dec
cmpb
adc
jo
add
adc
shrl
cmp
mov
mov
mov
fwait
ljmp
mov
fnop
ja
xchg
add
sbb
add
pop
loope
icebp
mov
push
and
sub
sub
push
loope
add
cmp
cmp
adc
inc
cmp
mov
xchg
popa
mov
push
or
push
test
sub
xchg
ja
insb
popf
adc
roll
popa
roll
lods
ret
mov
fisubl
adc
popa
push
dec
adc
hlt
cmpsb
xor
int3
loop
push
in
in
stc
lods
and
push
add
call
call
std
mov
adc
loope
hlt
lock
adc
adc
and
lock
hlt
add
fstl
mov
mov
jecxz
jmp
inc
push
xor
push
or
cmp
or
fbstp
stos
mov
nop
add
neg
cltd
fiaddl
insl
sub
mov
inc
sub
addl
stc
imul
and
xor
add
adc
xchg
ljmp
loope
sub
adc
xchg
mov
xchg
pushl
cld
sub
xchg
inc
or
xchg
inc
xchg
inc
jmp
scas
idiv
outsl
dec
ffree
push
jno
jae
push
add
sub
aaa
fisubl
loop
cmp
loopne
adc
ss
xor
das
push
dec
pusha
add
sahf
xchg
dec
sbb
lods
lea
mov
loopne
mov
cmp
adcl
mov
sub
fstl
rolb
add
and
adc
jb,pn
loop
push
pop
loopne
testb
hlt
xchg
add
jg
icebp
add
and
stos
jne
ja
cmc
roll
add
push
jmp
adc
cmpsb
inc
movb
aad
int
cmp
sbb
lret
xlat
add
pop
std
ja
data16
mov
inc
dec
in
lods
push
add
stos
out
mov
mov
jbe
int3
add
inc
test
fmull
lcall
sbb
or
imul
cltd
push
and
inc
and
push
or
sahf
test
mov
dec
cld
sub
mov
enter
pop
hlt
lahf
mov
pop
push
cmpl
ja
dec
fstl
and
add
cs
or
insb
push
les
mov
push
mov
jg
cwtl
rcll
push
jno
add
adc
int
call
dec
loope
pop
jo
mov
out
and
adc
test
enter
inc
mov
iret
mov
xchg
xchg
adc
pop
sbb
jecxz
leave
addb
adc
pop
xor
je
xorb
xor
and
fsubl
mov
add
test
jmp
fisubl
subl
mov
fcomip
insb
pop
jge
movb
std
add
pop
pop
add
dec
and
shlb
push
sub
call
push
mov
in
push
stc
cld
insb
adc
push
hlt
mov
enter
sarl
inc
dec
push
pop
sub
andb
push
inc
jne
sbb
xchg
cmc
pop
pop
rcrl
jl
nop
xor
inc
pop
decl
ror
mov
mov
test
jmp
cli
jmp
stc
inc
addb
inc
mov
pop
shlb
in
xor
mov
add
call
inc
jno
ss
fsubrl
sbbb
jg
rolb
or
add
cwtl
inc
cmp
or
mov
push
ja
rcrb
rorl
jle
jbe
pop
fld
pop
dec
xor
inc
sub
cwtl
cmc
xchg
sub
sbb
xor
mov
add
dec
push
cmp
fldl
inc
scas
mov
pusha
push
popa
in
lcall
sbb
dec
and
xchg
xchg
xchg
mov
jg
add
jg
inc
imul
sub
inc
mov
out
rcll
or
shr
mov
loope
add
mov
push
ret
push
xchg
je
sarl
sarl
sbb
jg
lea
add
loope
shrl
sub
sub
sub
mov
ja
sub
pushf
dec
and
mov
loope
dec
std
aam
xor
adc
imul
incb
dec
and
adc
add
sbb
cld
aas
sbbb
sbbl
stos
pop
vxorps
xchg
rorb
imul
or
add
mov
push
out
jb
jmp
push
inc
or
fbstp
sub
lock
add
loope
or
lcall
and
ret
mov
lds
fs
mov
out
add
cmp
inc
xor
inc
loopne
cmp
mov
push
adc
imul
lods
jne
std
mov
push
and
adc
sarb
loope
test
or
inc
in
fxch
inc
lcall
dec
pusha
ljmp
ltr
inc
stc
jne
lock
cmp
jne
ljmp
jo
cmc
loope
fldenv
add
out
and
test
or
mov
xor
lcall
inc
cmp
jbe
adc
mov
aad
ss
stos
outsb
es
rol
inc
add
adcb
mov
movsb
stos
stos
cmpsb
add
mov
add
adc
ret
dec
outsl
adc
add
mov
add
add
les
outsb
push
popa
or
out
es
pop
mov
loope
xchg
dec
ret
add
or
push
or
hlt
cmp
testb
movb
mov
inc
icebp
cmc
fmull
idiv
cmc
add
add
mov
xor
sub
mov
shll
dec
mov
mov
cld
loopne
add
add
pop
fcoms
sbb
cmp
std
stos
rorb
add
in
pmulhw
ja
aam
inc
out
and
sub
test
shrb
mov
test
push
std
das
pop
sub
les
rolb
call
call
xchg
rclb
xor
sub
inc
inc
pop
aad
xchg
shlb
sbb
fisttps
add
out
dec
mov
inc
testb
and
pop
mov
mov
mov
mov
rcll
loopne
mov
sub
mov
xor
imul
imul
jg
fbld
adc
sub
sbb
adc
stos
fists
jbe
sbb
mov
bound
mov
mov
cli
jbe
adc
mov
sbb
mov
add
xchg
pushl
push
xchg
rolb
and
xchg
lods
add
pop
mov
hlt
ffree
mov
and
imull
add
cli
jl
jmp
xchg
lock
popa
add
aad
pop
fnstenv
push
addl
mov
repnz
add
push
xor
aaa
pusha
add
pop
mov
add
mov
pushl
pop
shl
sub
sub
push
mov
lds
cmc
pop
push
lock
sub
pop
lods
push
jecxz
imul
aad
inc
insl
out
rorb
dec
sub
xor
ja
mov
call
or
xchg
inc
pop
inc
add
rcrl
loopne
add
pop
arpl
sub
adc
sub
pop
inc
adc
sub
xchg
or
decl
inc
je
das
or
scas
ret
and
in
sarl
hlt
out
clc
jb
adc
in
xor
add
dec
inc
sub
add
sbb
xchg
and
mov
xor
fwait
push
add
or
mov
jge
sbb
adc
jge
sti
testb
lret
jge
mov
jge
xchg
or
push
jge
and
or
jge
xor
add
daa
pusha
arpl
add
jle
mov
cmp
idivb
and
scas
and
pop
jge
nop
mov
xchg
jo
mov
addr16
popa
sbb
jge
and
mov
insl
jge
in
je
andb
push
insl
outsl
mov
adc
or
jge
inc
pop
ja
in
or
pop
jae
dec
sub
sub
jge
inc
dec
or
jge
shlb
dec
adc
jnp
adc
cmp
or
imul
orl
jge
and
add
jge
mov
push
mov
sub
or
pusha
xor
lcall
jge
imulb
pop
mov
test
adc
xor
dec
imul
mov
fwait
sbb
sub
fimull
pop
xchg
out
sbb
gs
sbb
rorl
insl
pop
inc
and
std
repz
jge
mov
outsl
fwait
xchg
jge
jo
push
sub
jge
jnp
repz
pop
lcall
jge
bound
mov
inc
outsl
rolb
insb
dec
lods
inc
xor
mov
mov
imul
mov
cmp
lods
xor
cmp
inc
push
add
or
push
jge
xrelease
sarl
ret
jge
push
or
jge
fildll
or
add
adc
lret
dec
mov
ljmp
pop
jecxz
xlat
jge
mov
sarl
jle
sarl
sarb
fnstsw
int3
fnstsw
stos
or
cmp
dec
add
fstpt
mov
call
dec
add
jl
sub
jl
cld
inc
loope
jl
in
jmp
adc
xchg
jecxz
sbb
in
jl
push
xchg
out
jl
push
xor
add
insl
clc
jmp
pop
sbb
cmp
push
sub
imul
cltd
pop
xor
adc
inc
pop
icebp
lods
loop
sar
jl
push
nop
fcompl
fucomip
add
inc
jl
add
dec
test
mov
mov
xor
xchg
clc
lock
lea
andb
sti
stos
outsb
sbb
rorb
mov
and
mov
jo
inc
xchg
jge
pop
ret
push
xchg
cli
jae
jl
pop
lock
loope
adc
add
mov
mov
mov
mov
sbb
clc
and
cmpb
mov
hlt
rclb
jne
sub
fists
jge
mov
adc
cmp
lcall
loopne
repz
jge
xor
dec
add
nop
add
sub
daa
dec
icebp
movl
mov
decl
inc
dec
mov
xchg
mov
mov
loop
orb
mov
mov
int3
mov
into
adc
notb
xor
and
push
aad
test
mov
std
pop
lods
or
mov
inc
sub
lock
in
fistl
jl
shlb
push
xchg
lods
push
mov
jg
lock
stc
mov
fistps
xor
xor
clc
jmp
test
jmp
adcl
test
add
and
inc
sarb
dec
push
xchg
rolb
loopne
mul
loope
xchg
adc
cli
cwtl
adc
sbb
jmp
and
mov
xor
sarb
or
ljmp
sub
mov
je
dec
mov
popa
call
or
jl
inc
leave
cmp
pusha
inc
add
nop
ss
into
adc
push
or
in
sub
or
and
pop
mov
jmp
enter
cmpsb
sbb
add
inc
mov
in
pop
jo
or
add
xor
xor
jne
std
fistpll
jae
mov
cmp
inc
leave
je
sub
sbbb
jbe
cmp
adc
insl
mov
test
fcoms
add
push
dec
dec
cld
add
sub
loop
rcr
sarb
sub
js
inc
push
add
sub
push
decb
push
inc
add
mov
cld
lock
inc
or
add
je
scas
movb
pusha
mov
xchg
aam
rolb
das
or
adc
scas
add
mov
fsubrl
add
sub
xor
add
stos
cmpsb
add
xchg
ss
cmp
inc
add
fisttpll
hlt
xor
sub
push
mov
loop
sub
sub
pop
or
sbbb
mov
or
cwtl
rcrb
adc
sub
add
pop
adc
cmp
add
shlb
sahf
and
sbb
dec
out
xorb
or
fbstp
mov
dec
add
push
adc
neg
adc
adc
jge
orl
sbb
movsl
adc
std
fisttpll
fdecstp
xor
add
adcb
rol
cmp
mov
push
pop
inc
repnz
lock
call
popf
cwtl
inc
fidivs
andb
push
pushf
loop
subb
add
aam
mov
test
dec
add
pop
or
cmc
add
sub
cmp
addl
add
loopne
pop
imul
fs
cmp
push
jnp
cmc
xor
add
imul
lods
in
mov
mov
mov
pushf
sub
xor
dec
or
mov
insl
jns
push
add
or
sbb
inc
enter
daa
jecxz
pop
nop
dec
fwait
mov
fwait
adcb
inc
push
aad
sti
cmp
push
leave
js
test
cld
mov
sub
mov
mov
enter
ds
pop
mov
mov
xchg
mov
push
dec
xor
aam
iret
rcr
sbb
les
shl
push
push
cltd
iret
cmp
xchg
lods
inc
lcall
rolb
add
fptan
cwtl
dec
jecxz
rcr
inc
cmp
cmp
mov
or
lret
iret
and
clc
add
in
das
mov
rolb
jp
ret
xchg
negb
in
outsl
cmpsl
and
fwait
lea
mov
mov
sbb
and
movsb
add
pop
rcrb
data16
shll
push
stos
pop
add
fcoms
out
mov
sub
add
xchg
aaa
sti
cmpsb
das
jbe
sbbl
sbbb
sub
add
or
xchg
xor
adc
mov
bound
cvtpi2ps
add
ret
or
test
nop
dec
hlt
pushl
insl
subl
rcrb
orb
mov
jg
mov
adc
adc
sub
lret
mov
add
in
or
test
out
es
push
mov
add
sub
addl
cmp
adc
mov
adc
dec
lock
rcll
pop
adc
push
mov
les
xchg
clc
fbstp
jmp
and
inc
mov
jle
cmpsb
add
push
int
jg
imul
fsubp
ds
and
mov
mov
out
lret
mov
rolb
data16
add
scas
popf
lcall
dec
movsl
pusha
jae
add
adc
dec
mov
push
mov
add
adc
lcall
xchg
and
push
lea
out
xchg
mov
cmc
data16
call
inc
inc
leave
dec
xchg
hlt
cmp
nop
cmp
inc
and
stos
mov
sbb
add
std
xchg
repnz
pushf
dec
or
outsl
incl
shl
call
hlt
mov
adc
call
mov
dec
xchg
lcall
mov
dec
xchg
into
inc
add
dec
popf
roll
in
sub
mov
dec
filds
out
adc
aas
add
cmp
push
mov
mov
dec
mov
mov
outsl
in
int
in
xchg
adc
push
mov
hlt
lret
push
and
fldt
mov
jg
pop
mov
xchg
bound
movsb
sub
cmp
xchg
pop
adc
inc
cmp
sub
testb
add
inc
pop
add
dec
mov
mov
cmp
je
adc
dec
cltd
dec
add
inc
or
adc
lcall
jg
mov
lock
push
xor
dec
xchg
cmc
dec
adcb
xor
leave
and
sub
je
mov
inc
or
lcall
adc
mov
aaa
stos
shlb
and
xor
push
sub
lods
cmc
dec
ss
add
fbld
sar
mov
sbb
dec
mov
mov
add
leave
jbe
sarl
cmpsb
pop
mov
inc
add
pop
and
and
loop
inc
mov
or
push
loope
cs
jb
pop
add
dec
leave
dec
sarb
fcomps
out
xor
mov
dec
lcall
mov
mov
mov
loopne
test
inc
mov
cmp
mov
add
rdmsr
je
push
jae
mov
sbb
movb
in
cli
ja
jb
icebp
inc
dec
shlb
push
lock
leave
mov
cltd
sbbb
dec
or
mov
xchg
loope
sbb
aaa
mov
xorb
roll
sarl
adc
in
pop
rcr
or
cs
sbb
loope
dec
sar
add
cmp
lods
adc
pop
inc
cmp
lcall
cmp
inc
pop
mov
adc
cmc
cmc
inc
add
adc
pushl
int
icebp
icebp
icebp
fwait
bound
addl
inc
sbb
xor
push
fiadds
mov
cmp
xor
xor
int3
mov
add
xor
add
rclb
repz
dec
adc
sbb
lret
inc
sub
push
dec
mov
xlat
or
roll
lock
shlb
je
loop
sbb
mov
ret
xor
mov
out
pusha
and
shlb
xor
xor
mov
add
lds
pusha
cmp
xchg
rorb
stos
mov
lcall
pop
xchg
pusha
add
push
dec
mulb
roll
out
sub
xchg
push
mov
loop
mov
decb
cmp
add
sub
dec
push
or
fs
outsl
push
xchg
fdivs
mov
add
or
add
cmpsb
inc
pushl
sbb
sbbb
mov
mov
int
cld
popf
mov
inc
xor
mov
mov
fwait
jp
dec
inc
add
adc
das
sbb
adc
xor
rcr
dec
xor
push
shlb
or
icebp
sbb
dec
rcll
out
push
dec
jmp
dec
adc
aas
cmc
dec
lret
sub
mov
js
xchg
les
les
mov
push
aad
jle
call
and
mov
shlb
jno
in
add
icebp
adc
stos
scas
mov
rorl
sbb
lock
add
loope
jb
xchg
dec
push
adc
sub
inc
clc
push
jb
mov
sub
jmp
xor
enter
sbb
les
xor
xchg
dec
sbb
inc
ds
xchg
scas
rcrl
sbb
js
mov
adc
add
cmp
ds
inc
es
incl
add
or
sub
mov
es
dec
ds
and
sub
mov
xchg
push
nop
mov
clc
aaa
inc
rclb
cmp
jo
sub
outsl
sub
rcr
cmc
call
mov
or
out
or
nop
sub
mov
rolb
push
or
add
or
cmp
sarb
sub
repz
mov
ja
push
pop
test
add
push
inc
sbb
in
arpl
dec
add
add
rorl
inc
adc
dec
rorb
cwtl
adc
rcrb
inc
std
inc
cmp
or
jmp
orl
push
cs
dec
xchg
int3
add
int3
imul
adc
dec
iret
adc
adc
xchg
dec
std
push
pop
mov
mov
cmc
xchg
add
imul
add
xchg
addl
popf
sub
adc
scas
mov
ret
add
sahf
pusha
mov
sbb
lea
mov
addl
nop
xchg
enter
mov
rol
jp
mov
xorl
movsl
andb
xor
push
inc
sub
lock
adc
shrb
dec
mov
mov
push
clc
call
pusha
mov
pop
push
add
add
add
stc
outsb
test
sub
push
test
xor
sbbb
into
pusha
outsl
adc
mov
add
ficompl
shll
scas
inc
stc
push
or
or
es
push
jp
test
xor
push
xchg
aad
notb
cld
stos
or
sub
add
cltd
out
adcb
mov
push
add
mov
pusha
add
mov
fiaddl
in
inc
mov
sbb
inc
loopne
stos
incb
sbb
dec
jmp
inc
or
push
dec
in
inc
stc
mov
dec
xor
rorl
lock
cli
mov
dec
add
dec
add
das
mov
add
or
and
loope
fisttpll
inc
or
add
rcr
cmc
push
push
push
mov
clc
add
push
cmc
das
decb
rol
add
icebp
or
scas
fs
mov
mov
dec
cltd
dec
fisubrl
inc
incl
xor
cmp
xchg
or
adc
or
xor
or
lock
out
sub
movb
or
clc
aaa
add
loope
or
mov
mov
andl
xor
in
movsb
and
push
jne
mov
hlt
xchg
and
pusha
mov
cmp
add
mov
hlt
or
sbb
add
xor
push
sub
jo
xor
xorl
js
inc
or
sbb
or
push
push
mov
adc
or
repnz
mov
imulb
cmp
adc
rorb
cmp
mov
addb
les
xorb
rcrb
inc
dec
ficomps
jno
pop
sbb
adc
adc
jo
les
popw
test
popf
cli
cmp
mov
aam
es
movl
shll
aad
xor
xchg
notb
sbb
sbb
nop
and
nop
push
mov
pop
cmc
push
les
or
push
inc
and
es
pop
pop
rcr
scas
fimull
mov
fidivl
or
dec
leave
filds
xor
dec
fdiv
js
icebp
mov
or
inc
filds
fldl
mov
mov
leave
mov
push
dec
push
adc
xchg
cmp
loopne
fcoms
mov
jb
pop
cmp
mov
or
xchg
jle
sub
cmp
shrb
aam
jbe
in
mov
sub
pusha
ficompl
cmp
push
stc
push
dec
and
dec
icebp
mov
xchg
mov
mov
cmpsb
or
cmp
orb
fstl
jb
push
movl
in
xor
fimuls
sbb
pop
enter
insl
in
out
clc
dec
dec
add
mov
icebp
or
dec
fxtract
test
loopne
and
dec
fistl
or
sub
outsb
sub
shlb
pop
roll
add
dec
cmp
pop
add
add
negl
std
js
aad
les
cmp
icebp
inc
adc
inc
and
jle
sti
pushl
shrl
push
add
and
lea
stos
adc
and
adc
mov
jo
std
xchg
gs
and
fnsave
push
add
add
fcomip
lcall
into
dec
roll
cmp
lock
mov
sub
dec
stos
imull
adc
out
mov
sub
and
out
out
test
test
mov
xchg
cmp
test
xchg
adc
mov
add
test
inc
mov
jne
fwait
push
rolb
adc
push
mov
stos
in
push
mov
dec
shll
lods
aaa
push
xchg
std
out
adc
aas
mov
sbb
xchg
mov
dec
fisttps
pop
je
xor
fdivr
ror
dec
testb
stos
xchg
loopne
cmp
lcall
aam
ret
push
aad
outsl
xor
cmp
mov
cs
add
outsb
pop
dec
pop
pop
ljmp
xchg
ror
hlt
dec
sbb
mov
roll
adcl
inc
icebp
scas
stos
add
cs
in
and
push
lods
adc
adc
or
or
stos
and
fnstenv
je
orb
add
lock
call
in
fimuls
push
inc
and
sbbl
adc
and
or
movl
inc
mov
and
enter
push
mov
addb
inc
imul
dec
mov
or
mov
or
lods
out
mov
jnp
add
andb
dec
sub
and
adc
andb
jne
sub
xor
rcl
cmpsb
cmpb
adc
or
into
push
xchg
xor
sbb
add
pop
shlb
inc
inc
add
cmpb
inc
mov
adc
adc
mov
daa
sub
jns
cmpl
jno
inc
pop
mov
orb
xchg
mov
push
adc
dec
hlt
inc
cmp
aam
adcl
adc
mov
push
mov
pop
in
or
sbb
arpl
sbb
dec
leave
or
or
dec
bnd
push
push
dec
jl
sub
sub
inc
add
arpl
cmc
ljmp
clc
fstpt
cmp
inc
inc
cmpb
mov
add
hlt
jg
mov
pop
xchg
add
add
pop
or
inc
and
fsubl
fisubl
pop
data16
mov
in
outsl
clc
or
mov
shlb
push
sub
xchg
pusha
jl
les
cmpsl
sbb
mov
mov
cmp
roll
sbbl
jb
or
add
data16
hlt
sub
in
mov
or
pop
push
out
test
xchg
shlb
shlb
pop
gs
test
lock
daa
les
hlt
pushl
jno
xadd
adc
sbb
std
pop
and
inc
sbb
inc
lret
dec
sbb
inc
sbb
idivb
aas
inc
sarl
cmp
push
inc
xor
pusha
das
mov
inc
cli
xchg
xchg
in
outsl
mov
insb
mov
nop
inc
pop
ret
movl
mov
test
add
sub
jecxz
mov
mov
aaa
cld
mov
inc
arpl
mov
clc
mov
stos
push
cli
shlb
incb
mov
fisttpll
cmp
fs
fs
arpl
pop
cmp
arpl
in
les
in
sub
add
mov
es
imul
arpl
inc
and
aam
test
inc
add
push
pop
dec
loop
out
add
xor
dec
push
mov
in
xor
or
pop
dec
cld
dec
push
rcrb
xor
sub
add
dec
int3
add
add
shrb
push
dec
andl
inc
xor
mov
push
add
pusha
dec
pusha
ret
fsubrs
dec
inc
dec
dec
nop
inc
loop
movsb
xchg
sarl
cmc
add
mov
xor
xchg
aad
adc
call
dec
ror
add
inc
jle
lods
dec
mov
roll
imulb
cmp
pusha
push
dec
adc
mov
pop
jnp
mov
lock
out
into
push
cld
jecxz
push
jmp
lret
push
lret
push
scas
pop
push
jne
aad
mov
push
sub
mov
and
adc
jmp
add
loopne
inc
add
ds
jae
or
inc
xor
sub
incl
and
subb
push
aas
cmpb
and
fsubl
mov
call
std
jmp
dec
addb
xchg
and
adc
mov
mov
xchg
nop
or
es
inc
rolb
stos
cmp
ret
add
sti
ljmp
fs
inc
add
sub
or
adc
loopne
inc
adc
ljmp
push
inc
add
mov
roll
clc
or
jg
sti
inc
jae
push
cs
fwait
and
sbb
add
rorb
mov
and
out
sti
idiv
sbb
sbb
add
fnstsw
add
mov
or
adc
mov
sbb
sbb
mov
dec
pop
cltd
loope
dec
mov
add
mov
add
dec
dec
mov
add
or
movb
rcrb
add
push
cld
outsl
add
pop
mov
in
dec
lods
rorb
inc
mov
pushl
ret
mov
dec
inc
cmp
inc
test
sub
add
dec
loopne
ljmp
and
ds
mov
jmp
jg
incl
cmpl
gs
ret
dec
mov
stc
cmp
fidivs
mov
pop
incl
ds
fwait
mov
or
jp
mov
dec
add
std
fdivl
shll
cmovbe
and
into
xor
mov
mov
or
xchg
jp
shrb
sbb
add
mov
icebp
sub
and
mov
push
xor
jo
js
or
add
ljmp
mov
sub
andb
push
andb
pusha
das
mov
xor
shl
stos
repnz
add
in
or
adc
and
mov
mov
lret
lea
dec
movb
mov
jo
loope
xchg
push
rorb
dec
xchg
insl
adc
or
das
adc
loopne
inc
pop
push
push
push
mov
xorb
add
out
rolb
aad
and
dec
lods
clc
inc
dec
int3
jno
mov
fldcw
rcl
dec
fdivrl
sub
adc
in
or
nop
jp
lahf
add
jae
or
push
or
mov
ds
cmpsl
mov
mov
test
rcll
scas
clc
or
dec
ror
push
pop
xor
test
dec
int3
add
cs
lock
xchg
dec
dec
das
mov
push
out
dec
jno
push
hlt
adcl
out
orl
int3
mov
std
fbld
pop
inc
pop
mov
cld
pop
fdivl
dec
xchg
dec
insl
or
dec
jmp
add
cmp
xor
mov
dec
shlb
inc
stos
push
sbbl
movsb
jl
outsb
or
and
jo
adc
std
fisttps
cmpsb
pop
adc
sub
or
xor
sahf
mov
lret
inc
fcomip
add
out
mov
pop
cli
and
inc
test
sub
add
ffree
aam
dec
lods
sbb
fildl
fwait
test
cmpl
in
fiadds
add
loopne
xchg
xchg
dec
xchg
push
push
sub
jb
mov
cs
or
lods
loopne
xor
aam
call
nop
xchg
ret
ljmp
sub
and
push
or
pop
sub
loope
dec
mov
movb
sbb
int
aaa
mov
andb
roll
lret
or
aaa
in
mov
roll
inc
dec
rolb
decl
sar
fistps
xchg
adcb
test
cs
lcall
xchg
add
movsb
inc
add
fcmovbe
or
mov
stos
ss
add
inc
icebp
imul
cld
stos
push
fildll
xchg
or
add
xchg
add
out
fwait
add
mov
push
adc
fdivr
cmpsb
push
pop
hlt
loop
mov
loopne
or
dec
jl
add
xor
mov
testb
std
or
xchg
fneni(8087
sbb
or
xor
and
or
loopne
mov
addb
mov
sub
push
inc
add
sarl
add
mov
dec
xchg
or
jae
shl
mov
int
sub
inc
dec
push
or
add
les
mov
adc
mov
ret
pushl
xchg
adc
jbe
pop
rol
pop
adc
dec
xchg
and
rol
add
les
rolb
notb
incb
adc
add
sbb
test
add
int
push
cld
xor
push
arpl
push
jo
ficoms
out
xchg
or
jmp
add
loopne
adc
mov
repz
lock
ret
icebp
mov
add
xor
orb
xchg
xor
and
clc
call
and
or
mov
test
or
or
xor
pop
mov
add
lods
mov
mov
mov
shrl
add
decl
add
sub
rolb
add
les
mov
hlt
jo
add
jl
or
inc
mov
adc
mov
sti
std
push
add
sub
mov
sub
jae
inc
add
add
mov
iret
adc
in
outsl
js
mov
add
cmpsb
push
leave
mov
pop
mov
clc
xchg
shlb
in
push
inc
shl
clc
adc
mov
sahf
rolb
and
mov
xchg
sub
and
sbb
adc
aas
dec
aam
bound
sub
push
add
mov
jl
mov
mov
es
fldt
int3
adc
and
inc
pusha
push
clc
gs
inc
popa
sub
inc
mov
mov
ror
and
mov
push
inc
stos
push
lcall
mov
shrb
add
mov
cmc
pusha
add
loop
imulb
inc
test
iret
aad
pop
xor
clc
push
mov
add
add
mov
pop
mov
sub
shll
aas
test
cmp
inc
adc
and
lret
add
das
js
in
adc
inc
mov
popa
dec
add
mov
test
adc
push
adc
or
hlt
mov
lods
ljmp
dec
imul
fwait
xor
and
or
loopne
das
movsl
ret
adc
enter
dec
jo
xor
jp
push
xchg
dec
nop
inc
xor
aaa
mov
pop
lock
mov
or
sbb
loopne
mov
mov
or
xor
inc
mov
mov
data16
fs
mov
and
cli
jge
pop
jmp
nop
add
inc
add
adc
add
ja
das
adc
lretw
push
test
incl
add
add
pop
push
ja
push
jb
xchg
xchg
mov
xchg
in
mov
or
xchg
hlt
scas
sub
aam
inc
rolb
rclb
mov
cmp
mov
sbb
adc
decb
inc
mov
sahf
adc
inc
add
subb
and
xchg
insb
inc
add
or
add
push
fcomip
push
out
push
shrb
dec
cmp
in
mov
test
test
aaa
add
in
clc
add
xchg
or
push
push
cmpb
addl
repnz
pushf
cs
mov
lods
andb
cvtpi2ps
inc
dec
cs
dec
or
add
mov
decl
dec
add
sahf
aas
cmpb
dec
cld
adc
xchg
sub
add
addl
or
mov
push
adc
out
cmpsb
insb
dec
std
aad
lea
mov
movb
andb
xor
or
adc
add
add
push
push
pusha
sti
inc
jg
rol
inc
push
shl
pop
inc
jo
mov
add
add
and
es
pop
stos
nop
push
xchg
sub
inc
mov
mov
jecxz
shl
adc
add
outsb
cli
or
subb
cs
sub
add
loop
push
lea
in
inc
hlt
push
mov
sahf
or
dec
int3
cmp
testb
leave
aam
clc
arpl
call
adc
call
adcb
sarb
ret
xchg
cs
cmp
xor
dec
push
adc
add
popl
pusha
cmp
mov
adc
orb
loopne
add
add
cs
mov
xor
inc
rolb
dec
add
shrb
test
cli
adcb
mov
inc
pop
add
cmp
dec
mov
flds
stos
fildl
mov
sub
add
mov
push
loopne
sub
rorl
ljmp
pop
inc
cmp
mov
movsb
sbbb
into
ret
xor
xlat
out
and
ret
test
shll
adc
insb
xorl
jg
aam
push
rorb
xor
adc
mov
loopne
add
adc
pop
sbb
adc
es
loopne
and
pop
sar
jb
and
sarl
fiadds
xchg
les
leave
int
std
mov
and
enter
mov
and
jg
addb
cs
orl
push
sub
xchg
dec
testb
xchg
dec
test
outsl
cli
jmp
mov
push
into
add
cs
push
adc
push
fld
push
dec
loope
push
push
mov
aam
addr16
and
push
and
xor
push
cmp
shll
inc
mov
jmp
push
fidivl
insl
rorb
cmp
inc
mov
fstl
loopne
or
arpl
pop
das
js
adc
sahf
rclb
vmread
push
jg
add
int3
push
ljmp
iret
push
pop
sbb
pop
xor
or
sbb
sub
insl
lods
test
adc
outsl
or
or
popa
popf
xchg
mov
cmp
scas
sub
jecxz
sub
dec
pusha
mov
lahf
inc
aam
xchg
je
ljmp
cltd
cmp
andb
lods
sbb
xor
fs
sub
cmpsb
mov
and
mov
push
sbb
dec
push
loopne
xchg
xor
add
add
ja
push
mov
inc
xor
push
add
subb
shl
or
jl
inc
lcall
sbb
cmpb
pop
pop
aas
inc
aas
lret
cmp
inc
adc
push
cmp
int3
rcrl
decl
ret
sbb
inc
mov
pushl
addb
nop
add
fldenv
mov
dec
xchg
fldenv
pop
sub
mov
add
push
adc
xor
addps
decl
rorl
jg
push
rolb
dec
mov
jmp
mov
or
jg
inc
mov
mov
mov
sar
test
sbb
shll
push
jg
inc
push
lock
xchg
iret
mov
fimuls
rolb
mov
mov
enter
xchg
aas
mov
test
pusha
push
push
cmpsl
nop
add
add
pop
mov
inc
dec
mov
test
and
push
popf
adc
adc
xchg
inc
es
add
in
inc
inc
faddl
sbb
jg
lock
add
lcall
xchg
or
mov
xchg
clc
pop
ret
mov
hlt
add
aaa
loop
or
sub
and
incl
and
add
mov
mov
push
outsb
and
inc
dec
aaa
add
adc
add
or
ret
dec
xor
dec
mov
mov
pop
add
adc
rcrb
mov
rolb
adc
stos
sbb
inc
into
pop
icebp
dec
incb
outsl
lcall
sbb
fdivrl
sarl
testb
and
dec
jle
and
or
xchg
fs
dec
push
mov
nop
mov
inc
pop
mov
add
test
dec
loopne
nop
in
add
inc
add
inc
add
inc
jo,pn
adc
and
shll
jne
push
adc
adc
loop
pop
add
cli
adc
ljmp
mov
sbb
fisttps
ss
or
add
mov
xchg
jno
fcoms
dec
jmp
ss
push
add
dec
incl
pop
jg
loop
mov
inc
sbb
call
mov
jbe
add
adc
in
mov
call
add
mov
dec
roll
pop
and
push
out
in
pushl
pop
pop
int3
xchg
xchg
lret
test
xchg
xorb
or
outsl
push
dec
mov
lock
call
xor
loope
in
cmp
addb
mov
fcmove
xorl
cld
or
jo
push
or
sub
movsl
and
sub
inc
loope
adc
mov
mov
cmp
adc
xchg
out
mov
xchg
add
fdivrl
int3
addb
ret
decl
jo
inc
jbe
cmp
sbb
xor
pop
mov
or
inc
and
or
or
stc
fcmove
fmuls
mov
pop
bound
shlb
xor
lcall
fwait
push
arpl
and
or
pop
enter
dec
and
bound
or
dec
mov
adc
jno
pop
cld
mov
mov
aad
aaa
cltd
push
mov
adc
sub
push
adc
xchg
push
add
sbb
out
xor
add
fldcw
aam
add
cmp
and
cmp
xor
jns
ss
loopne
mov
das
jge
push
adc
dec
push
add
push
sub
mov
das
mov
cmpsl
xchg
hlt
call
add
rol
add
mov
lret
and
cmp
cmc
mov
lock
mov
ficoml
or
push
loopne
push
ss
clc
xor
movsb
adc
popf
shr
mov
mov
das
adc
push
lret
push
cmp
fldl
adc
sar
arpl
sahf
and
cmp
add
adc
xchg
into
dec
loope
hlt
fistpll
xor
jae
cmpsl
aam
or
stc
std
fisubl
mov
addr16
decl
push
jbe
mov
ss
dec
nop
shrl
aaa
mov
push
fwait
mov
push
push
cs
dec
fs
clc
push
std
mov
nop
add
jne
rorb
push
rolb
test
inc
cli
mov
dec
add
and
ret
lret
add
scas
push
les
cmp
sub
add
mov
adc
test
andb
inc
test
int
and
adc
adc
dec
enter
push
mov
cmp
jmp
rol
sub
pushf
nop
cli
into
dec
xchg
mov
cmp
inc
inc
add
sub
dec
sub
mov
jl
inc
add
or
sub
lret
rolb
xchg
pusha
xchg
sbb
fxch
sbb
inc
adc
and
call
ljmp
add
cmp
mov
add
sbb
cmp
int3
es
fisttps
sti
or
add
push
inc
les
jge
add
outsb
mov
push
cs
js
inc
add
cs
enter
add
sub
shlb
incb
call
jge
flds
inc
xor
sbb
addr16
ljmp
lret
mov
and
addb
inc
ja
and
push
jge
sub
push
mov
stos
push
and
push
or
sbb
sub
bound
dec
mov
shrl
aad
mov
sbb
inc
shrl
push
dec
dec
aad
aaa
in
inc
addb
lods
mov
fmuls
mov
in
addl
or
test
xchg
les
mov
andl
addl
shll
sbb
jle
test
xchg
sbb
mov
push
add
lea
jo
cmp
inc
push
outsb
cs
mov
xor
add
mov
inc
sub
lret
dec
les
inc
stos
negb
sub
push
arpl
and
scas
mov
sub
or
xchg
in
or
inc
dec
lds
push
push
subl
sub
adc
aad
idivb
xorl
sbb
add
rolb
mov
sub
adc
and
popa
lea
mov
addb
mov
andb
add
xchg
mov
test
adc
and
inc
pop
rcrb
data16
adc
push
mov
popf
cmp
dec
sahf
cmp
ret
fildll
mov
fstpt
cmpsb
and
fldcw
inc
dec
add
bound
adc
scas
or
sub
inc
sbb
enter
add
sbb
inc
sub
subb
loope
aas
fimull
add
stc
movsb
fidivrs
mov
add
enter
cmp
add
in
mov
sub
pusha
cmpsl
fidivrl
loope
cmp
roll
jg
sub
and
and
and
shlb
bound
mov
in
pushl
adc
or
inc
lea
and
and
das
sarb
cmp
insb
nop
adc
dec
inc
and
and
clc
ja
call
jb
loopne
sub
inc
pusha
add
add
mov
dec
call
gs
pusha
xor
inc
cld
xchg
jecxz
roll
sahf
add
clc
fists
sub
fs
add
cwtl
cld
mov
ss
push
and
cmpxchg
das
push
xor
cmpb
andps
movsl
insb
scas
cmp
jp
and
bound
ja
enter
aas
push
test
mov
fs
add
orl
xchg
loop
sbb
sub
sbb
mov
mov
rclb
outsb
loope
mov
and
pusha
sbb
hlt
mov
icebp
rclb
jno
jecxz
pusha
mov
test
scas
mov
and
add
mov
sub
and
and
inc
xchg
push
sub
mov
add
mov
sbb
movsl
or
ret
and
and
shrb
movsl
inc
pusha
inc
or
lcall
dec
inc
pop
loopne
cmp
pop
sbb
andb
adc
and
ror
adc
sub
or
in
xchg
or
mov
out
mov
add
jmp
fmul
dec
xchg
rclb
and
std
fisttpl
mov
mov
and
adc
and
or
mov
inc
or
sub
loopne
push
mov
sub
aaa
add
add
jp
add
dec
inc
pop
mov
lds
mov
inc
push
popa
add
push
push
and
sbb
sbb
cmpsb
fidivrs
pushl
and
sbb
and
in
test
repz
filds
push
orl
mov
xchg
mov
out
push
test
es
and
out
addb
inc
push
rolb
or
decb
xor
loope
imul
inc
inc
lds
fildl
pop
add
push
add
push
add
pusha
xchg
fiadds
enter
fsubp
mov
movsl
and
arpl
add
lock
enter
push
loopne
scas
add
mov
xchg
xchg
pop
data16
out
xor
mov
orb
xor
fldz
or
call
stos
or
shlb
push
loope
adc
sub
jp
test
lcall
inc
add
xchg
lret
inc
mov
inc
cmp
dec
mov
mov
and
gs
mov
inc
jge
leave
mov
inc
loop
and
inc
inc
add
aaa
xchg
inc
jl
cld
les
imul
xor
inc
data16
adc
pop
cmpsb
mov
push
mov
push
add
in
sbbb
sahf
xchg
gs
add
mov
sti
mov
pop
mov
inc
mov
add
pop
lock
adc
rolb
jbe
xchg
mov
pop
mov
or
lock
push
mov
push
or
mov
xor
cld
mov
dec
test
out
addl
jbe,pn
jg
in
mov
and
and
push
daa
outsl
dec
shr
push
mov
push
loop
cs
scas
ds
mov
or
in
push
xlat
add
bound
insl
pop
and
movl
mov
and
imul
add
cltd
or
inc
jbe
or
or
inc
lock
fidivl
rorb
push
cltd
inc
mov
push
or
insl
sti
mov
add
or
pushf
sub
mov
stos
call
pushf
imul
push
jecxz
int
outsl
xor
push
or
adc
imul
pop
cld
in
or
push
and
stos
fs
sahf
sbb
lahf
int
test
pop
mov
rol
xor
divb
dec
xor
pop
push
imul
xlat
add
push
push
movsl
sbb
ret
rcrl
in
sbb
ret
mov
or
and
incb
xchg
and
sub
mov
int
leave
mov
push
icebp
lret
mov
mov
mov
pop
pop
add
fiadds
arpl
in
lock
and
imul
fcmovnb
and
add
js
div
add
repz
inc
insb
add
andb
ret
sbb
imul
sbb
cmp
inc
imul
add
and
seto
adc
mov
negb
jo
xor
push
and
outsb
scas
mov
add
add
arpl
sbb
in
fildll
adc
xor
cmc
add
sbb
insl
inc
imul
add
scas
cmp
sub
test
out
cmpsb
xor
or
add
push
in
cmp
nop
imul
dec
adc
push
imul
aas
nop
int
sarb
call
dec
js
rorl
cmp
lods
cltd
in
fildll
cmp
lea
dec
mov
and
rolb
decl
add
push
stos
lahf
lret
ret
cmp
fwait
test
clc
popf
push
test
jno
adc
pushf
loopne
testb
mov
mov
or
scas
dec
je
lock
fs
bound
sbb
outsl
out
add
inc
lea
sbb
test
jge
or
xchg
mov
or
and
stos
mov
in
jge
scas
cmc
jg
cltd
ljmp
adcb
loop
popa
daa
add
aam
lea
mov
or
xor
pop
add
int
sahf
sub
inc
sub
test
cli
insl
adcl
jo
pop
mov
ljmp
out
add
mov
or
or
ja
push
xchg
mov
mov
jno
orb
fldl
mov
jno
aad
dec
push
xchg
xor
pop
nop
pushf
mov
or
mov
and
add
test
aad
faddl
push
xor
sar
mov
int
movsl
or
lcall
pop
adc
push
les
lret
sbbb
dec
and
pop
incb
test
js
cmp
xchg
xchg
add
aad
inc
out
dec
js
loopne
mov
mov
clc
adc
outsb
cmp
lret
pusha
jp
and
scas
sub
fcomip
scas
dec
cld
in
idiv
nop
or
rol
or
add
iret
dec
not
push
add
andl
call
rolb
mov
mov
and
and
mov
or
add
cmp
rcr
das
rolb
mov
dec
std
add
pop
jo
pop
mov
mov
cli
iret
enter
sub
cmp
jmp
pusha
sbb
clc
fstpt
dec
inc
dec
mov
inc
mov
add
ljmp
sub
iret
mov
enter
dec
push
and
cs
dec
adc
inc
incl
cld
mov
xor
or
movsl
icebp
stos
push
decl
flds
adc
mov
pop
and
subb
add
push
jg
cmp
xor
decb
mov
inc
hlt
fwait
fs
or
mov
lret
inc
adc
dec
mov
decl
and
or
cli
mov
inc
pusha
popf
adc
ss
mov
fimull
add
add
add
dec
add
dec
test
and
dec
fnstcw
js
push
mov
loopne
inc
dec
leave
jge
sub
inc
dec
adc
xchg
out
adc
jb
mov
je
pop
sub
adc
xor
add
push
in
leave
movl
push
jb
and
sub
inc
rcll
sbb
pop
mov
neg
jae
int
and
shll
add
das
add
add
test
push
mov
daa
pusha
xor
mov
dec
inc
xchg
fsubl
add
aad
es
shrl
cmpsb
inc
scas
cld
leave
out
or
movl
sub
add
pop
lock
dec
cmp
mov
cltd
lcall
int3
out
sub
inc
cmp
push
dec
push
orl
xchg
sub
mov
push
mov
testb
add
loopne
cmp
mov
add
roll
js
or
dec
add
and
mov
loopne
mov
dec
sub
clc
lcall
xor
push
sbb
lock
ficomps
push
les
test
incb
and
dec
icebp
cmp
decb
jo
daa
sub
into
adc
or
adc
outsb
mov
sub
sbb
inc
fnstcw
mov
or
js
cmp
je
push
lods
cs
mov
or
loop
mov
mov
outsb
loopne
dec
subl
sub
mov
shlb
cmp
insb
push
es
mov
add
jge
push
mov
and
inc
ss
xchg
cli
mov
add
enter
mov
in
sbb
pop
mov
mov
cwtl
mov
mov
inc
cld
iret
mov
roll
ror
mov
and
loope
lods
cld
ficomps
cmpsb
adc
mov
sbbb
clc
aam
cmp
inc
sbb
mov
mov
or
mov
repnz
lods
inc
jns
aas
je
cwtl
test
xor
lock
mov
fsubrs
mov
fstl
push
ret
les
les
hlt
mov
in
roll
dec
nop
inc
lock
inc
aaa
xor
loop
fldl
dec
shll
xchg
in
inc
xchg
lds
pusha
fidivrl
push
add
or
jmp
out
or
inc
aaa
loopne
mov
call
inc
push
movl
clc
fiadds
fstps
jg
lret
adc
fildl
sbb
icebp
or
mov
dec
mov
adc
adc
mov
push
adcl
bound
or
and
ss
mov
adcl
mov
inc
cltd
ret
movb
sbb
cmpsl
adc
pop
add
mov
insb
mov
adc
mov
mov
inc
insb
clc
jg
adc
pushf
loopne
shl
mov
and
addr16
ret
stos
out
sar
aaa
add
add
inc
mov
pop
inc
shrl
aam
and
xchg
add
clc
fadd
mov
sub
xchg
jp
or
call
loope
cmp
test
inc
shll
enter
int
adc
mov
push
adc
in
fsts
dec
add
xchg
repnz
adcb
adc
shrl
add
jo
sub
addb
dec
mov
lcall
xchg
sarl
xorl
int
and
scas
xchg
push
roll
inc
test
outsl
cmp
mov
mov
sbb
cmp
xor
hlt
adc
mov
das
movsb
push
rclb
loopne
adc
cmp
pushf
mov
out
nop
dec
pop
fs
fcoml
dec
aam
push
ljmp
inc
mov
fisttpll
xchg
mov
aad
push
and
mov
add
xchg
inc
cmp
popl
cmp
fldenv
xor
push
cmp
flds
adc
rcrl
mov
jl
rorb
loope
add
sub
mov
pusha
add
add
rcrb
mov
adc
add
leave
inc
and
add
cmp
xor
adc
decl
inc
push
sub
cmp
mov
psubq
in
cmp
and
out
fsubl
xchg
add
decl
add
adc
jbe
add
mov
loopne
shl
xchg
xchg
dec
adc
inc
add
mov
sbb
adc
repz
mov
sub
jbe
push
popa
add
data16
cs
cmpb
negb
inc
clc
add
add
orl
push
lock
test
xchg
adcb
js
dec
fisttps
inc
sbbb
jmp
lea
adc
dec
ss
filds
or
out
push
xor
sub
sti
pop
in
aaa
or
xchg
push
mov
pusha
repnz
fs
testb
mov
mov
loopne
lret
inc
mov
adc
add
sbb
inc
jecxz
les
divb
mov
out
and
stos
ds
mov
mov
les
popa
sub
aas
int
aas
inc
stc
pusha
stc
lahf
xchg
dec
fimull
enter
ficompl
inc
fstpt
pushf
loopne
pusha
rol
adc
and
jle
shrb
add
andl
pusha
and
push
scas
into
xchg
sub
adc
sub
or
or
xchg
outsb
pop
adc
into
cmp
pusha
xor
je
ljmp
mov
adc
sub
add
and
addb
push
mov
inc
outsb
test
jbe
fwait
dec
xchg
mov
dec
addb
and
sub
adc
pop
int3
cmpb
dec
fscale
jbe
aam
popf
push
sub
pop
pop
mov
push
adc
push
dec
fwait
lret
cs
add
or
xchg
clc
inc
jne
les
xchg
loopne
dec
divb
jb
add
mov
ljmp
xor
rclb
sub
test
inc
add
mov
sbb
data16
sub
pusha
and
sub
in
sub
xchg
mov
xchg
rclb
shll
aad
lods
nop
sub
push
add
cmc
push
add
sbb
cs
push
call
pop
or
jo
pop
push
add
daa
lods
std
sub
sub
cmp
les
fbld
add
scas
push
loope
add
fucompp
incl
lock
stc
in
aad
int3
mov
stc
enter
stc
sti
jg
fimull
cld
sub
inc
es
not
ret
test
cmp
sbb
sbb
cld
mov
push
decb
repz
or
shlb
or
lock
neg
sti
shlb
adc
add
push
mov
cmpsl
in
or
mov
xor
ret
cmpb
mov
mov
hlt
into
ret
clc
ljmp
pop
dec
mov
adc
add
and
test
fxch
sbbb
fidivrs
sbbb
pushl
ja
add
mov
rclb
shlb
int3
rolb
les
shr
add
push
or
insb
push
jle
pop
cmc
lret
pop
pop
popa
xchg
add
icebp
inc
test
and
sub
and
leave
sbb
sti
mov
adc
lcall
cs
clc
mov
loopne
add
or
stc
iret
mov
and
pop
rclb
mov
jecxz
call
cmp
rol
out
shrb
sub
out
adc
adc
enter
push
inc
add
fucom
out
test
sub
fadd
xchg
sub
mov
pop
fwait
dec
insl
shrb
mov
jno
pusha
sbb
movsl
and
addb
xchg
fstpt
rcl
dec
leave
lret
in
add
lcall
mov
mov
and
jo
add
mov
adc
push
icebp
cld
mov
dec
xchg
and
aas
shlb
idivb
mov
dec
adc
das
add
inc
and
aas
int3
testb
or
cmp
inc
es
push
cmc
pop
lock
cmp
inc
daa
and
cmc
or
loopne
adc
cltd
cmc
inc
dec
or
sar
aam
scas
dec
leave
cmc
addb
mov
add
jo
adc
cld
lcall
adcb
scas
add
sub
mov
out
shll
sub
mov
and
push
dec
push
inc
sarb
iret
sub
cli
push
sub
hlt
adc
xchg
pushf
add
fcoms
inc
in
sbb
incb
mov
mov
xor
cld
rorb
ljmp
ljmp
mov
inc
mov
inc
mov
dec
mov
fists
popw
int3
add
aas
inc
stc
pushl
xor
lcall
mov
add
cmp
shlb
mov
rclb
push
out
lea
out
and
and
fisubl
sbb
jg
xlat
dec
lret
xchg
mov
push
enter
cld
sub
xchg
mov
mov
and
shlb
les
out
sbb
mov
adc
xchg
jno
xor
cmpsb
mov
fidivrl
leave
push
mov
cld
cltd
mov
movb
cmp
jmp
mov
xor
rorb
mov
les
ljmp
sbb
inc
dec
shlb
in
push
dec
pop
adc
adc
mov
xchg
mov
std
mov
test
add
push
mov
mov
sbb
add
decl
leave
push
inc
and
pushl
out
push
xchg
add
out
push
in
add
dec
dec
in
test
sub
mov
subb
js
inc
jecxz
add
aad
or
mov
sbb
inc
mov
or
add
aad
or
inc
data16
mov
xor
pop
mov
bnd
loopne
inc
dec
pop
shrb
mov
test
jmp
push
sub
mov
and
cmp
mov
incb
add
frstor
arpl
insl
adc
adc
add
jecxz
pop
pop
sbb
rorb
add
push
sbb
dec
cmp
enter
add
push
incl
rorl
mov
leave
adc
les
lcall
lcall
bound
dec
test
jmp
sub
jmp
testb
ja
dec
add
sub
stos
mov
or
cwtl
mov
flds
sti
ljmp
jo
sub
add
add
pop
fcomip
pop
mov
adc
aam
sbb
and
pop
and
dec
xchg
sti
push
add
std
les
aas
jmp
iret
sahf
xor
xlat
mov
mov
adc
inc
xchg
jle
add
xor
nop
int
mov
sbb
rorb
adc
push
subb
les
mov
push
push
cld
bound
sub
hlt
mov
ja
ljmp
and
hlt
mov
sub
orb
add
rcr
aad
repnz
jo
adc
sahf
mov
mov
leave
jecxz
lea
add
jne
lock
lods
adcl
mov
mov
push
jecxz
push
enter
lods
xchg
addb
dec
loop
pusha
add
fbstp
sbb
xor
pop
sbb
mov
adc
and
lods
mov
or
sahf
fisubrs
imul
xor
pop
icebp
add
add
lods
test
insl
scas
lods
test
mov
mov
or
cwtl
jge
or
xor
lret
dec
cmp
or
rolb
mov
push
sub
push
mov
pop
dec
mov
rcrl
push
sbb
rcrb
cmp
adc
xchg
sarb
rolb
pop
sbb
shlb
aaa
loope
incl
and
push
lock
push
push
or
add
ficomps
mulb
inc
clc
out
pop
lret
or
in
fiadds
add
mov
in
test
lods
loop
loope
rolb
and
cld
adc
mov
in
push
loope
stos
out
mov
and
adcb
nop
add
xchg
add
add
xchg
or
xchg
mov
mov
sub
sub
test
adcb
mov
jno
or
xor
idivb
or
or
ds
je
cmp
shlb
fnstenv
add
push
sbb
pop
mov
sub
xchg
mov
xor
test
scas
add
dec
inc
cmpsl
dec
add
fldt
jno
xchg
and
je
lea
inc
jns
shrl
mov
xor
jo
in
sbb
jns
sub
add
mov
mov
add
sub
xchg
cmp
dec
mov
or
ret
int
push
stos
sub
sub
mov
aad
add
stos
push
lcall
fnstenv
and
push
bound
pop
sbb
mov
push
out
push
cs
push
mov
call
dec
push
subb
push
subb
sub
pop
or
add
inc
aaa
js
add
sbb
xchg
scas
dec
sub
add
les
or
insb
das
mov
out
push
xor
bound
adcl
adc
add
adc
call
and
cmc
xor
lret
add
dec
lret
cmp
les
adc
or
mov
push
sahf
add
cwtl
leave
les
add
mov
dec
mov
xchg
jl
inc
dec
ret
add
sahf
orb
adc
pop
add
dec
sub
or
xor
lock
cmpb
adc
shrb
inc
push
hlt
jb
jge
mov
add
xorb
nop
aad
movsb
pop
movsl
jb
out
sub
or
mov
rorb
cmp
and
imul
mov
push
out
jnp
or
pop
inc
jb
xchg
outsb
in
sarb
sbb
cli
inc
push
out
das
add
or
negl
dec
pop
mov
rcrb
dec
or
idivl
sub
aaa
mov
ret
fwait
cmp
add
call
sub
inc
js
xlat
les
inc
insb
mov
sub
mov
push
push
rolb
inc
xchg
cmp
jbe
sub
or
mov
or
mov
sub
or
stos
roll
and
xchg
ljmp
xchg
lods
cld
in
xlat
les
add
and
rolb
dec
xchg
inc
aam
inc
dec
int3
and
xchg
jmp
jle
addb
inc
fsubs
cli
iret
aam
icebp
add
inc
sbb
and
push
add
idivb
dec
ret
mov
les
in
popf
je
icebp
sub
or
push
inc
scas
mov
xor
popa
pop
loopne
adc
les
sub
nop
dec
sub
call
add
es
push
ret
ret
xchg
adc
lea
fld
subb
sub
or
aad
sub
les
pop
rclb
scas
xor
fldl
jge
outsl
call
lock
adc
and
shll
mov
adc
rclb
or
insb
mov
pop
sub
lahf
movsb
pop
cli
nop
sub
and
or
adc
and
or
jne
add
incb
loopne
ret
test
popa
pop
scas
xorb
pusha
fs
out
out
sub
or
xchg
and
dec
sub
and
nop
loop
xchg
cmp
pusha
pop
lcall
mov
sub
hlt
sahf
mov
mov
mov
pop
dec
mov
idiv
and
inc
inc
adc
inc
mov
psrad
sub
sbb
pop
mov
adc
sub
icebp
decl
sbb
push
dec
clc
stc
fisubs
fwait
jecxz
cwtl
lods
loop
dec
xor
sub
sti
add
or
mov
or
or
aam
mov
cmp
into
call
mov
cmpb
loope
rcrl
cmpsb
loopne
fcos
and
mov
js
jp
sub
sub
ds
xchg
cwtl
leave
stos
mov
mov
mov
pusha
add
push
shll
loope
mov
cmp
jmp
aam
pop
in
sub
inc
dec
mov
inc
and
shrb
push
mov
push
ret
mov
xor
xchg
int
xchg
dec
fsubl
decl
mov
out
push
lret
push
pop
xchg
lret
adcb
mov
gs
mov
or
push
mov
mov
xchg
dec
ljmp
call
or
cs
dec
add
mov
outsl
inc
xchg
out
cwtl
add
cmp
jne
xorb
sar
std
stc
les
fnsave
add
add
sbb
dec
lret
adc
fildll
incb
mov
cs
push
stc
mov
roll
cli
in
fadd
add
or
aad
roll
inc
pusha
decb
add
xor
in
stc
sub
mov
popa
add
dec
pop
aad
test
mov
add
jae
ja
sbb
jb
subl
lret
imul
xchg
inc
push
adc
push
xor
fwait
xor
int3
inc
les
push
test
or
adc
loopne
iret
add
xor
movsb
std
std
es
inc
mov
insl
mov
loopne
adcb
pop
mov
call
sbb
push
xor
add
aas
push
push
mov
popa
push
mov
or
or
xchg
xchg
jecxz
lock
mov
mov
add
decl
lret
pop
dec
nop
aas
call
mov
inc
dec
sub
lods
ds
push
mov
add
pop
dec
lret
inc
std
mov
mov
add
xor
clc
or
mov
mov
adc
sub
stos
and
or
orl
decl
iret
mov
mov
and
xor
adcb
orb
adc
xchg
ljmp
xor
and
int3
push
jle
push
cltd
sub
ss
lcall
mov
xchg
push
subl
rorb
insb
rclb
adc
mov
les
cwtl
jns
mov
sub
sub
mov
out
inc
adc
popa
lock
rcrb
jne
and
or
pop
mov
sbbb
lock
test
mov
imul
aas
ljmp
out
in
mov
shlb
lock
or
fildl
add
sbb
mov
or
mov
xchg
int3
inc
mov
in
jg
and
sub
rolb
sbb
cmp
adcb
push
pop
rclb
cmp
jns
add
inc
and
and
sub
sub
push
fstps
push
loopne
mov
mov
mov
outsl
xorb
shll
pop
sbb
or
add
stos
and
add
or
sub
insl
je
aad
shll
adc
insb
lret
xchg
pusha
mov
mov
mov
jp
or
xchg
subb
roll
ret
adc
xorl
fs
outsl
adc
jg
or
adc
add
lret
pop
add
add
ds
rsm
faddl
or
lahf
mov
sbb
mov
das
xchg
sbb
push
loopne
xor
mov
add
mov
and
mov
mov
test
push
rolb
dec
jno
hlt
ljmp
pushf
add
subb
popf
xchg
dec
dec
adc
incb
incb
and
xchg
mov
lock
push
lahf
xchg
xor
pop
shll
aad
adc
xchg
push
int
add
iret
adc
jg
mov
or
pop
lcall
clc
push
add
sub
fildll
jp
jmp
xchg
mov
jo
cs
loope
and
movsl
xor
icebp
add
inc
and
incl
sbb
and
lcall
add
out
add
mov
int3
rcl
mov
xor
aam
mov
fisttps
pusha
mov
or
sub
adc
lods
or
mov
aad
jp
test
ret
push
cmp
cmp
mov
out
add
mov
leave
cmpsb
test
add
adc
mov
lcall
or
mov
stos
sub
mov
mov
mov
add
mov
or
incl
or
movsl
loopne
call
arpl
test
int
test
dec
mov
inc
shll
add
dec
lcall
fpatan
xor
ret
add
or
mov
and
push
sub
in
mov
scas
or
and
jl
subb
std
mov
adc
adc
das
or
sub
scas
sub
xor
popf
cmp
mov
push
movb
jo
mov
pop
adc
in
xchg
push
xchg
clc
jno
test
sub
aaa
pop
and
dec
jbe
push
add
cmpsl
jo
js
rorl
aaa
xlat
subb
test
repnz
sub
sub
xchg
lahf
xchg
stos
insl
jecxz
xlat
outsl
xorb
cmp
outsb
nop
insl
loopne
push
jge
push
mov
xor
sub
lock
push
fs
inc
and
scas
jbe
cmc
nop
lods
xor
ret
mov
push
mov
sarb
and
aad
repz
lock
lods
adc
cs
sbbb
pop
scas
adc
add
test
dec
add
sub
lods
adc
mov
sbb
aad
sbb
add
pop
incb
cmp
adc
push
cld
mov
enter
pop
sub
scas
add
inc
loope
adc
add
xchg
cmp
cld
push
push
jo
and
pushl
adc
lret
add
xchg
dec
loopne
loope
inc
sbb
sti
pop
and
jge
inc
inc
sbb
mov
or
mov
xchg
mov
cld
mov
xchg
xchg
or
xchg
sub
and
push
push
mov
repnz
test
dec
jb
lock
inc
mov
loopne
aad
xchg
aam
and
adc
fmuls
into
add
adc
mov
in
xchg
lods
int
mov
pushf
adc
mov
adc
dec
jne
lock
mov
fcomp
outsb
insb
xchg
xchg
adc
push
out
cli
pushl
inc
cmp
movsb
jbe
rcll
pop
xchg
add
mov
add
cs
call
adc
mov
fisttps
or
ss
or
push
add
test
jg
add
test
xchg
loopne
and
mov
mov
test
cmp
addb
mov
lret
adc
sub
and
cmpb
mov
sbb
add
dec
aaa
mov
xchg
add
stc
dec
pop
and
push
sbb
or
jnp
pop
mov
inc
pop
aaa
test
add
dec
lea
loope
add
adc
mov
loopne
rorb
mov
fildl
addl
mov
add
xchg
jmp
pop
je
xchg
es
loop
add
add
les
xchg
cmp
push
xchg
add
xchg
pop
sub
or
cs
testl
cwtl
ret
inc
or
adc
das
pop
push
outsb
jb
ljmp
mov
push
inc
insb
pop
inc
push
add
aas
mov
adc
sbb
push
add
sbbb
fsubs
int
jl
mov
adc
int3
int
and
ljmp
subb
cwtl
leave
subl
sahf
clc
or
pop
add
rcr
daa
mov
roll
test
xchg
push
and
addb
mov
fadds
push
or
xor
add
lock
test
xchg
sbbb
scas
rclb
pusha
ljmp
adc
and
adc
int
mov
or
add
outsb
loopne
add
push
jge
sbb
add
leave
xor
cmp
dec
cmc
and
mov
mov
aaa
and
lock
and
les
adc
lcall
add
insb
dec
mov
dec
jp
negb
push
shrl
xchg
push
mov
das
jp
nop
mov
and
mov
flds
test
or
mov
hlt
loop
pop
shrb
add
rorl
lods
add
hlt
test
mov
add
add
push
sub
sbb
inc
mov
push
sub
mov
into
inc
sub
mov
pop
movsb
mov
insb
inc
lds
jo
add
add
sub
cmp
mov
dec
hlt
rolb
test
mov
jle
and
dec
xchg
mov
cmp
sbb
cwtl
xor
push
push
cld
pop
outsb
mov
loopne
inc
or
push
sti
cmpsb
or
rclb
aad
push
inc
test
repz
roll
push
add
ja
pop
lock
add
mov
jl
es
fwait
or
test
mov
es
scas
inc
in
xchg
inc
paddq
xor
andb
cmp
mov
es
scas
les
add
cmp
mov
xchg
and
loope
push
pop
cmp
popf
dec
sub
loop
push
loopne
add
and
jg
fs
mov
sub
or
lods
xor
adc
enter
sbb
orl
jl
ret
scas
js
inc
add
or
enter
lds
pop
hlt
out
add
into
add
xchg
orb
loope
adc
clc
aaa
xchg
push
adc
pop
adc
adc
xchg
sub
fucomp
push
call
inc
fisubrs
dec
scas
add
enter
lods
add
add
dec
sar
int3
cmovb
ret
adc
adc
xor
leave
sbb
sbbb
add
push
add
inc
pop
rolb
jg
add
rorb
xchg
mov
ljmp
add
push
inc
fwait
jecxz
orb
fs
mov
inc
push
mov
fbld
outsl
push
repz
sbb
cmpsb
cli
and
and
inc
ljmp
lock
push
push
add
cld
ret
rolb
orl
sub
xor
pop
pusha
clc
mov
cld
dec
mov
cmp
cmp
idiv
push
push
rclb
add
jge
addl
jge
rorl
inc
pop
mov
inc
push
or
push
ret
xor
or
es
jne
loopne
adcl
ljmp
add
sub
insb
sbb
flds
and
mov
inc
dec
es
pusha
shrl
andb
inc
mov
movsb
jg
mov
add
sahf
nop
adc
int3
inc
add
out
xchg
lcall
lret
add
loopne
sbb
icebp
in
add
cltd
loop
mov
mov
and
or
inc
xchg
loopne
sarl
aas
pop
int3
aad
mov
push
and
bound
mov
xchg
test
clc
outsl
inc
push
pop
mov
sub
push
mov
dec
add
fiaddl
pop
lock
movsb
sub
mov
inc
add
dec
add
stos
jb
inc
int3
inc
add
pushf
xchg
iret
or
nop
inc
add
xchg
mov
inc
jne
and
pop
out
mov
jne
inc
fcomps
test
ljmp
ds
popa
cmp
xlat
and
cmp
cwtl
adc
add
insl
and
add
lods
int
orb
mov
jg
xor
adc
xor
sbb
cmp
mov
sbb
imul
and
add
mov
add
cld
negl
push
cmp
jmp
add
dec
rol
cmc
scas
mov
inc
xorb
add
ret
faddl
xor
dec
adc
push
push
add
xor
mov
ss
mov
xor
xor
pop
aas
pop
inc
cmp
loopne
jnp
fwait
ljmp
jg
add
push
in
add
stc
mov
jg
icebp
outsl
sub
xchg
dec
mov
add
stc
cmc
mov
stc
ret
cld
mov
rolb
scas
pushf
inc
sti
fwait
mov
pusha
movsl
lock
add
or
or
mov
popf
aaa
test
cli
sbbl
sub
incb
sub
add
mov
mov
or
inc
into
lods
or
cmpsb
xchg
adc
xchg
ret
add
cs
cwtl
sbb
rorl
sub
fdivs
add
and
sbb
and
xor
push
aad
and
pop
incl
or
mov
mov
jge
cmpsb
pushf
or
es
test
cmp
cmpsl
hlt
es
cmp
jp
fcmovu
xor
in
in
decl
mov
cmp
shlb
jb
add
push
add
clc
fucomip
rolb
out
push
sub
scas
ret
loopne
mov
mov
cmpsb
outsb
add
scas
pusha
pop
add
scas
sbb
into
cmc
ja
decl
cld
nop
cmp
ss
xchg
lods
in
imul
and
xchg
xchg
cmp
jo
icebp
rcrl
pop
add
mov
sub
lock
sub
xor
cmp
lock
test
xchg
jnp
add
push
xchg
add
les
test
dec
les
jmp
fcoml
adc
or
dec
mov
dec
popf
cli
aaa
cmp
inc
cmp
sub
ds
jae
icebp
pusha
aam
test
cld
mov
mov
sbb
inc
out
xchg
inc
hlt
popa
sbb
xor
fs
loop
jno
cmp
add
je
js
dec
mov
or
nop
pop
push
adc
fsubrl
add
cs
lods
sub
pop
sbb
jo
inc
add
inc
into
lock
xor
jl
loope
sbb
dec
lock
or
jb
mov
sbb
xchg
jg
mov
call
orl
lcall
clc
adc
mov
push
lcall
repnz
inc
pop
clc
adc
fiaddl
aad
int3
popl
adc
out
cmp
adc
dec
mov
or
clc
aas
nop
add
sub
push
inc
sub
adc
push
inc
or
adc
rolb
pop
xchg
test
pusha
or
js
addb
add
xchg
or
xor
popf
cld
inc
and
or
ret
xor
test
mov
shl
inc
js
movsl
or
dec
jo
call
ljmp
inc
pop
lock
out
mov
pop
xor
mov
addl
stos
mov
mov
and
mov
mov
mov
cs
std
xorb
decl
lock
add
loope
fiaddl
add
add
in
shrb
push
scas
inc
ret
fwait
sub
or
or
test
or
mov
orb
add
bound
test
adcb
sbb
inc
jg
sub
ret
jge
pop
mov
enter
add
outsl
js
lcall
xor
inc
or
add
ljmp
or
mov
mov
mov
inc
shl
push
cmpsl
nop
int
cmpsb
notl
push
mov
inc
sub
shlb
aad
xor
clc
mov
and
js
test
stc
sar
fildll
and
clc
jge
jo
sub
push
loopne
cmpsl
jle
std
jmp
loopne
cmp
sarb
ret
lea
cmp
add
stos
ret
inc
cmp
stc
and
lcall
icebp
sbb
loopne
inc
adc
leave
mov
pop
adc
je
popf
lock
xor
xor
cmp
stos
popa
clc
mov
mov
sub
aam
inc
adc
and
mov
shrl
out
cmpsb
xchg
and
xchg
cmp
jmp
add
pop
hlt
lahf
loope
icebp
lds
xor
shlb
and
in
filds
xor
cmp
xor
xor
scas
pop
mov
addl
jmp
xchg
bound
rcll
xlat
rorb
cs
or
xor
das
test
adc
aad
movsb
or
bound
sarl
sbb
lret
ds
test
add
dec
inc
mov
dec
cmp
mov
xor
cmp
push
xor
rol
rcll
lcall
cld
shrb
popa
push
shl
mov
xor
outsl
jg
cwtl
or
inc
jmp
sbb
std
cwtl
pop
fimuls
loope
xchg
push
and
insl
xchg
ret
pop
lock
iret
movsb
mov
std
add
rcl
and
or
jle
xchg
pop
push
cmp
cmp
and
movb
jb
mov
push
adc
add
subb
mov
inc
mov
add
jp
dec
adc
add
rol
jl
sbb
dec
or
xor
hlt
add
enter
xor
dec
ret
mov
scas
rcrb
and
out
add
xorb
or
aas
push
mov
into
rolb
lea
orb
fabs
sbb
cld
pop
loopne
aad
inc
push
jl
inc
icebp
push
sti
nop
add
cmp
xor
ja
fcomp
imul
cmp
cmc
adc
or
sbb
sub
and
xor
pushl
adcb
les
and
sbb
lock
rclb
xchg
rcll
popf
cld
sbb
add
jmp
dec
pop
add
inc
or
popa
dec
pop
icebp
mov
or
int3
inc
sbb
rorl
testl
icebp
outsl
mov
dec
jge
shll
outsl
mov
test
cmp
inc
mov
lcall
pop
int3
loop
mov
mov
cmp
or
ror
and
lock
sbb
dec
popf
aad
filds
adc
adc
adc
and
ljmp
sgdtl
cmp
js
flds
mov
and
add
dec
mov
ret
mov
ret
cmpsb
xchg
jp
mov
pusha
sub
mov
xor
mov
rolb
inc
mov
jl
rorb
movsb
addb
dec
sub
shrl
ret
add
xorb
orb
mov
jmp
sub
inc
or
imul
adc
lret
sbb
cmp
push
mov
jmp
add
mov
pop
aam
or
movsb
sub
jmp
sbb
ret
mov
add
xor
jb
jle
mov
add
lcall
sbb
and
loop
sbb
out
adc
jp
inc
sub
add
enter
sbb
or
sbb
or
push
flds
imul
icebp
add
adc
sbb
push
fstl
sbb
loope
pop
lods
dec
ror
dec
or
bound
movsb
inc
mov
dec
sub
mov
dec
js
lahf
sub
lds
pop
icebp
add
dec
fsubrs
dec
mov
sub
stos
sbbb
push
inc
add
outsb
clc
stos
mov
or
dec
pop
dec
in
add
fisubs
add
icebp
subb
flds
cli
fistpl
fimuls
inc
fildl
sbb
push
add
add
cld
fcmove
inc
sub
testl
sub
dec
sub
push
or
or
js
push
rolb
add
add
xchg
jg
dec
lods
subl
test
pop
sbb
nop
add
xchg
sub
shll
data16
outsl
add
es
jp
dec
lods
orb
push
xchg
andb
das
ret
js
xorb
shrl
ss
loopne
mov
cs
xor
ret
movsl
ljmp
mov
adc
lret
adc
or
test
add
sahf
rcr
pop
subb
xor
dec
ret
out
rcr
inc
xor
jg
loope
push
notl
add
repz
jbe
aas
add
dec
lahf
stos
andl
sub
sarb
movsb
aas
mov
add
xchg
mov
lcall
data16
ret
roll
mov
cmp
loopne
out
add
cs
xchg
jg
and
pop
enter
loop
dec
inc
xchg
cmp
inc
pop
sub
loopne
cld
sub
incb
mov
inc
mov
clc
test
data16
sbb
xchg
dec
rol
fs
hlt
pop
add
sub
shrb
or
lcall
movsl
lea
scas
push
mov
cld
pop
stos
sub
icebp
mov
jns
cmp
push
stos
push
and
xchg
mov
inc
test
jbe
mov
ffree
or
pushf
inc
and
cmpb
pop
cmp
test
mov
sub
ret
xchg
sar
or
mov
jle
mov
dec
inc
dec
cld
mov
jmp
xchg
lret
movl
jno
in
jg
or
and
cmp
sub
mov
iret
inc
test
lret
add
test
inc
mov
xor
dec
xchg
push
mov
xor
and
orl
inc
ret
fnsave
adc
xchg
xchg
sbb
inc
jo
push
loope
and
int3
testb
push
or
shlb
inc
sahf
dec
orb
aaa
insl
inc
dec
ss
push
and
add
inc
outsb
sub
pop
and
inc
shlb
andb
and
sub
data16
sbbl
nop
ljmp
mov
pop
fucom
mov
add
mov
push
mov
test
jb
adcb
add
loopne
pop
dec
pushf
rorl
pusha
xchg
loopne
and
test
das
js
mov
xchg
xchg
mulb
push
push
mov
ss
adcb
jb
xchg
pusha
cmpl
ret
js
adc
jg
xchg
xor
inc
or
loope
adc
xor
pop
into
and
in
ja
mov
inc
fs
pop
sbb
xorb
or
mov
insb
ds
mov
and
imulb
jmp
mov
sbb
scas
repz
push
loop
xadd
mov
or
jne
rclb
pop
lea
sub
or
ds
mov
js
cmp
xor
jbe
sub
cmp
mov
sub
shrb
sub
and
leave
sub
inc
enter
mov
or
js
add
and
aam
or
gs
fiaddl
cmp
inc
jnp
fwait
jbe
cli
sbb
scas
cs
cmp
mov
test
cmpsb
imul
subb
xor
inc
dec
les
loopne
test
pop
add
ret
jbe
or
push
add
ljmp
mov
add
mov
std
add
cld
mov
xchg
sbb
adc
sbb
call
xor
scas
add
popf
pusha
xorb
and
enter
and
inc
pushf
das
sub
and
lcall
cld
loopne
xchg
add
dec
sbb
and
or
into
dec
or
into
push
inc
daa
add
es
jmp
add
insb
loopne
lahf
clc
and
inc
aas
lret
ljmp
or
dec
orl
or
outsl
pusha
int3
lret
addl
mov
sub
mov
xchg
mov
les
mov
pushf
mov
push
sahf
add
mov
jb
cs
inc
decb
inc
xor
je
fsin
add
mov
xlat
mov
in
subb
fcomip
sub
pop
add
add
lahf
pusha
inc
and
in
inc
sbb
jb
sbb
adc
shrl
hlt
mov
call
mov
mov
jmp
sub
and
jbe
hlt
aas
push
adc
and
xchg
pop
xchg
shl
out
sub
xchg
add
or
dec
loopne
mov
insb
sub
popa
sti
and
imul
insl
lds
int3
push
mov
xchg
adc
add
jbe
jp
out
xor
bound
xor
xor
test
cld
sub
adc
pop
into
push
mov
mov
sub
jg
dec
mov
repnz
fmull
sbb
or
inc
push
push
mov
or
inc
push
xor
aaa
insl
fbld
addb
pop
sbb
adc
push
dec
nop
sub
push
sub
and
xchg
test
pop
sbbl
lret
mov
fcmovnu
add
cld
inc
mov
call
cmp
add
adc
add
cmpl
push
bswap
and
cli
dec
enter
and
inc
leave
test
sbb
dec
clc
icebp
rcrb
inc
cld
and
add
push
cmp
and
dec
ljmp
push
and
pusha
shrd
cs
mov
inc
sub
out
jecxz
shlb
fistpl
jo
inc
sti
cli
enter
add
add
mov
sub
pusha
sub
or
pop
xchg
or
rolb
rorb
mov
xchg
dec
mov
pop
add
loop
add
adc
test
add
gs
sub
cmp
popa
les
mov
add
xchg
rorb
clc
adc
adc
lcall
add
sbbb
sahf
mov
int
push
pop
jo
xor
or
pop
inc
shr
mov
inc
sub
cmp
mov
addr16
add
ror
dec
jge
dec
or
ret
sbbb
call
shrl
jp
add
add
test
mov
adc
ljmp
jle
jb
aad
add
loope
arpl
movb
mov
test
in
ret
sub
ret
push
repnz
xchg
xor
adc
mov
jae
lock
subb
fldt
aad
add
adc
jbe
add
and
pop
scas
xor
pop
in
test
pop
jne
push
jo
mov
ret
mov
cmp
shrl
stos
inc
mov
fdivs
dec
popa
add
faddl
add
mov
inc
add
xchg
jp
adc
add
int
mov
dec
les
sub
ret
ljmp
sub
and
jno
mov
jle
sbb
jo
pop
push
or
inc
decl
fsubrs
lret
inc
and
into
dec
xchg
mov
aad
jecxz
adc
outsl
mov
xchg
adc
shrb
cmp
sbb
inc
mov
jg
stc
dec
add
mov
push
lret
dec
adc
add
add
ficoms
add
add
mov
pusha
jl
or
and
test
cmc
mov
push
add
outsb
or
call
add
jb
repz
add
add
incb
mov
shll
in
pop
lock
fdivr
mov
pop
mov
mov
ja
push
xchg
es
callw
ljmp
push
hlt
adc
fnstenv
mov
mov
mov
loope
pop
cli
pushf
mov
mov
add
out
cs
pop
push
or
movsb
loope
das
xchg
or
ds
adc
outsl
idivb
mov
movsl
xchg
add
xchg
or
mov
mov
das
push
cmp
cs
dec
mov
clc
mov
xchg
aam
and
roll
push
pushf
cmp
or
fbstp
shlb
sarb
xlat
loopne
mov
push
nop
clc
and
jo
sub
xor
jne
xchg
nop
dec
test
out
das
mov
cmp
cs
inc
imul
adcl
in
aaa
cmp
cld
mov
scas
xor
scas
cli
in
aaa
adc
test
scas
or
jnp
fimuls
and
push
and
sahf
lahf
xchg
dec
xor
test
in
mov
add
roll
aam
cmp
and
aad
pop
stos
adc
in
push
and
rcll
sahf
and
pusha
sub
push
mov
inc
inc
jecxz
mov
mov
mov
or
push
in
inc
repnz
cmp
cld
sub
mov
jns
add
loope
lcall
jle
adc
or
addb
aam
movsl
es
cld
mov
sub
or
xor
inc
add
add
je
add
std
das
nop
dec
or
mov
inc
andb
adc
je
jge
and
jo
or
pop
inc
lret
mov
rolb
divb
xorl
cmp
mov
cmp
nop
push
int
add
jno
xor
into
add
mov
call
andl
fdivrs
xor
xor
icebp
nop
daa
negl
mov
push
orl
std
cltd
int
test
out
push
push
xchg
int
xor
add
cmp
jne
ret
ljmp
mov
dec
lret
fnstsw
add
nop
cmp
jg
shll
sub
sbb
loopne
lods
push
xchg
rolb
inc
add
jg
fildl
call
nop
nop
inc
lods
lock
fcmovnb
mov
inc
xor
inc
mov
mov
add
mov
loope
and
flds
adc
adc
dec
rolb
test
sub
loopne
hlt
push
add
jg,pn
and
xchg
adc
sub
aad
adc
hlt
in
jo
xchg
scas
out
dec
fnstcw
mov
lock
lret
stos
inc
mov
cs
nop
xor
add
xor
ror
or
data16
adc
jg
mov
lods
add
mov
iret
push
sub
pushf
dec
cmpb
call
sbb
les
fldt
pop
adc
enter
or
xchg
add
rclb
dec
jl
cmp
rcrb
add
xor
adcl
jp
mov
fdivs
movsb
cmpl
mov
mov
add
stos
int3
xor
int3
sub
inc
dec
scas
mov
xchg
add
rolb
and
inc
mov
push
jo
cmp
xor
sub
jne
ficomps
or
add
mov
retw
mov
xorl
jp
pop
outsl
adc
push
xchg
add
fwait
test
adc
push
sbbb
repz
or
hlt
scas
cli
dec
out
mov
pop
cmp
push
mov
add
and
adc
ljmp
xchg
push
and
mov
push
test
or
add
test
xchg
arpl
inc
cmpl
mov
or
jo
mov
call
jle
inc
dec
sti
lret
push
adc
add
test
and
xor
dec
mov
shlb
orb
mov
add
mov
lock
sub
adc
subb
andb
adc
mov
add
jecxz
and
sub
sbb
mov
push
push
add
pop
mov
sbb
mov
add
mov
ret
sbbb
pop
gs
aas
mov
or
cmp
adc
stos
mov
or
mov
mov
inc
pop
push
dec
fdivs
cmp
lahf
dec
js
xchg
ss
inc
add
pushl
add
add
cmpl
pop
shll
mov
jge
mov
sbb
ret
mov
jmp
add
pop
adc
jbe
inc
jg
dec
movsl
mov
jle
mov
mov
pop
mov
cwtl
xchg
imul
inc
cmp
mov
scas
or
jno
mov
or
jle
addb
dec
add
or
pop
scas
lock
xor
inc
or
scas
loope
or
mov
xor
cmp
adc
push
adc
dec
rclb
ss
sbb
hlt
and
dec
icebp
dec
mov
icebp
push
xchg
jl
add
sti
xchg
jne
pop
mov
dec
rcll
adc
cli
pop
mov
or
dec
int
push
test
dec
lock
loop
inc
xchg
mov
xchg
pusha
mov
cltd
in
cmp
gs
shrb
xchg
jp
clc
aaa
dec
pop
ret
outsb
xor
cmp
adcl
rorb
mov
sub
je
stos
cmp
jb
mov
enter
dec
or
push
shlb
out
test
inc
push
fnstenv
movsl
add
and
sbb
lock
jle
sbb
les
les
mov
adc
rcrb
add
les
repnz
ja
mov
aaa
xchg
mov
dec
push
insb
imul
pop
mov
add
inc
xor
insl
inc
or
mov
sbb
test
pop
and
or
cmpb
call
mov
loopne
xchg
hlt
cld
mov
ss
jne
lcall
add
movb
inc
rorb
mov
inc
add
leave
lds
cld
mov
pop
lods
add
adc
icebp
fwait
addl
mov
and
insl
call
dec
or
dec
cmp
shr
lea
orb
test
jmp
mov
pushf
scas
mov
xor
mov
adc
and
xchg
jnp
inc
sub
pusha
outsl
pushf
pusha
jl
add
sub
push
rorb
loope
sar
add
cmp
mov
pop
fnstsw
mov
add
insl
push
or
hlt
xlat
mov
add
sarb
push
add
pop
pop
leave
and
or
pop
push
sub
mov
clc
in
xorb
subb
lret
xor
cltd
add
xchg
mov
push
xchg
and
aam
xchg
or
mov
or
sbb
mov
ss
xchg
pop
sub
enter
mov
or
dec
fsubl
in
loop
jnp
add
sub
mov
les
xor
inc
lahf
test
sarb
jge
push
and
pushf
scas
or
out
jnp
add
dec
nop
or
adc
mov
xchg
push
adc
ret
enter
shlb
adc
popa
faddl
int
push
rcl
shrb
rolb
test
in
sarb
inc
pop
insl
loop
pusha
jae
cwtl
and
mov
adc
add
call
fwait
loopne
insb
or
mov
call
push
inc
mov
es
mov
inc
leave
loope
cmp
sbb
cmp
push
loopne
sub
dec
out
aaa
insl
ret
insb
mov
fxch
adc
dec
lahf
jbe
shrl
mov
xor
add
mov
ret
loopne
mov
xor
xchg
dec
ret
inc
fsts
test
jnp
aaa
pop
clc
stos
enter
les
cli
push
add
shl
push
pop
and
inc
jmp
and
mov
sub
xchg
dec
sbb
xor
push
xor
ret
inc
add
inc
call
div
and
dec
or
inc
or
or
sbb
cli
pop
ret
ja
pusha
test
push
addl
ss
push
in
pop
fadd
inc
ret
xchg
add
rolb
outsl
adcb
and
and
scas
in
push
or
and
pop
fldcw
arpl
fsubl
lret
repnz
outsl
jle
mov
sbb
add
jo
in
outsl
call
sbb
aad
add
mov
jge
and
shrl
push
xor
mov
jp
mov
inc
mov
add
xchg
addb
mov
inc
mov
mov
mov
aaa
push
adc
test
push
aad
and
mov
adc
cwtl
mov
adc
in
and
inc
or
inc
or
and
add
xchg
inc
and
scas
inc
cmp
lods
loope
jge
and
push
mull
add
repnz
jbe
ljmp
mov
insl
add
pop
xchg
es
mov
in
sbb
add
push
loope
mov
adc
and
jo
loope
fldl
aam
sub
sbb
ljmp
adc
lret
add
stos
add
lods
and
jmp
adc
orb
adc
mov
cmp
mov
add
add
dec
roll
pusha
cld
ja
fiaddl
roll
loopne
ficoml
or
inc
das
xchg
bound
enter
js
push
lock
nop
mov
xchg
mov
xor
ljmp
and
sub
cmp
inc
lock
jo
push
lods
out
fst
ljmp
scas
shlb
mov
sub
xchg
add
aad
xchg
xor
cli
sbb
inc
sbb
bound
insl
mov
cs
mov
clc
push
popa
inc
add
andl
dec
rcrb
outsl
or
in
loope
inc
jb
enter
das
dec
or
stos
mov
mov
pop
ret
dec
mov
or
scas
fld
add
jg
pop
mov
cmp
pop
push
sub
jmp
mov
scas
fadds
push
cmp
mov
mov
dec
mov
clc
and
mov
mov
adc
mov
xor
jb
addb
mov
adc
push
rcll
lods
inc
or
je
in
pop
add
push
xor
aaa
mov
rcll
aam
es
addl
xchg
aas
mov
mov
sarl
or
inc
sbb
int
push
insl
fdivr
pop
mov
jg
and
mov
decb
add
lret
jle
or
mov
mov
shrb
cmpsb
mov
sbb
sub
adc
rorb
inc
ljmp
sub
lret
cld
or
outsb
add
mov
jo
clc
incl
arpl
add
repnz
jg
das
dec
and
les
xor
dec
and
mov
daa
jmp
inc
cmp
adc
dec
add
add
adc
rolb
lret
loop
xchg
scas
fidivrl
in
popf
sub
aaa
pop
dec
inc
lock
mov
mov
add
loope
add
or
cmpb
xchg
mov
inc
push
std
incl
push
mov
rolb
lret
adc
nop
mov
mov
and
adc
andl
fimull
call
cld
or
and
lcall
popa
aam
adc
subb
in
insl
cmc
jbe
cmp
adc
lds
mov
add
push
out
loope
in
adc
and
std
pusha
aaa
sbb
mov
enter
and
push
shlb
cli
add
jae
push
xchg
jae
jg
mov
les
xor
mov
sbb
adc
lcall
mov
lret
leave
lret
push
mov
rolb
shll
adc
sub
sub
leave
outsl
mov
test
fisubrl
mov
call
jb
sub
cmp
dec
pusha
mov
ljmp
add
mov
xchg
xor
ljmp
cwtl
cmp
sbb
subl
insb
outsl
add
or
loop
xchg
add
add
jo
incl
roll
scas
fmul
inc
or
xchg
mov
inc
loopne
adc
pop
mov
divb
test
roll
sti
pushl
aad
mov
orl
mov
movsb
or
mov
sub
ja
add
loope
add
pushl
or
nop
int
cs
pusha
add
mov
sbb
pushl
inc
push
call
insl
ret
or
or
push
xchg
or
adc
mov
adc
adc
dec
std
mov
adc
jecxz
loope
out
loopne
add
jge
loopne
nop
shlb
dec
movsb
shll
or
mov
sub
es
fistps
push
test
sub
out
and
dec
mov
outsb
mov
cld
cld
or
fcoml
shrb
pop
xor
pop
bnd
test
adc
adc
cmpb
inc
cld
call
xchg
roll
and
sbb
add
rcll
les
incl
adc
push
sbb
add
mov
or
subl
push
pop
pusha
mov
and
or
mov
xchg
rcl
add
aad
out
or
dec
sub
xchg
and
xchg
jmp
sub
les
jle
rclb
xchg
pop
add
lret
jbe
ret
dec
test
outsl
in
jbe
in
add
add
mov
packsswb
push
fwait
subb
enter
cld
and
cli
roll
ja
pop
sbb
pop
jle
add
mov
jp
or
sub
es
negb
push
cltd
adc
es
mov
add
adc
lret
cmp
or
orl
scas
xchg
and
ret
xor
adc
xchg
fisubrl
sbb
test
cs
add
and
int
cmp
xchg
pop
loope
push
add
add
inc
test
xor
jb
mov
cs
orl
push
sub
or
pop
popa
push
mov
inc
orb
add
add
mov
sar
cs
push
dec
and
push
xor
mov
aaa
movsb
ds
icebp
andb
int
add
adc
cmp
test
orb
dec
xorb
call
push
xor
pop
ret
stos
sub
roll
add
pusha
inc
cmp
mov
or
mov
dec
inc
movsl
add
lcall
push
xor
int
js
cmp
mov
das
or
cwtl
rolb
mov
imul
pop
mov
add
rorb
into
lods
dec
ret
pop
lea
decb
add
fsubr
fcmovu
push
inc
scas
inc
pop
adc
das
adcl
rcrb
add
or
in
stc
or
xchg
mov
cmp
lock
push
or
leave
dec
push
and
fbstp
xorb
scas
inc
mov
inc
and
adcb
test
subb
adc
inc
mov
add
inc
mov
int
lcall
sub
add
leave
lds
rol
lret
jb
jo
push
mov
fcmovnu
push
sbb
gs
adc
sbbl
or
jbe
jg
es
leave
inc
add
inc
add
xchg
jl
popa
add
pusha
rcrb
sbb
fisubrl
cmc
dec
inc
in
nop
jo
mov
inc
ljmp
decl
ss
test
ret
mov
inc
sub
pusha
sbb
sbb
add
lcall
cli
inc
jae
push
sub
adc
and
sub
add
inc
push
imul
ret
xchg
xchg
xchg
push
testb
mov
xchg
hlt
mov
shll
adc
dec
and
sub
adc
dec
sbb
add
xor
into
sub
out
add
lcall
cs
jns
cmc
cs
mov
cmp
and
xchg
lea
add
inc
je
inc
or
iret
inc
and
mov
inc
out
cmc
dec
test
add
dec
cmp
int
xchg
adcb
mov
xchg
lret
or
dec
xor
call
cmp
or
mov
movsb
xchg
push
xor
leave
mov
sbb
dec
cwtl
ror
adc
mov
add
aaa
unpcklps
and
push
xor
inc
add
inc
pop
inc
and
es
add
cmpl
add
sbb
movsl
add
push
movb
sub
popf
push
mov
les
mov
mov
dec
mov
dec
cs
adc
sub
and
sbbl
aam
jmp
pop
xchg
xchg
sbb
fs
roll
sar
inc
jl
dec
pusha
mov
dec
inc
adc
adc
stos
inc
push
loope
leave
bound
mov
mov
pop
idivb
xor
mov
sub
mov
mov
push
into
fcmovnu
add
and
cmp
cmp
ret
add
cmp
rorl
decl
stos
stos
nop
out
xchg
adc
sub
sarl
inc
fcmovbe
mov
cmp
inc
ret
mov
cwtl
sbb
and
add
add
out
aaa
add
bound
jmp
fiadds
push
jo
mov
das
inc
mov
sub
jle
dec
bound
mov
mov
push
mov
mov
dec
mov
sub
adc
test
sbb
out
sub
mov
add
and
push
es
adc
aaa
xor
fdivr
sbb
inc
cmp
push
and
mov
or
or
es
aad
loop
sbb
jo
leave
jle
cmp
cs
mov
in
mov
orb
add
or
jne
sbb
cmp
sahf
push
cmp
clts
adc
dec
mov
xor
je
or
lock
mov
and
rclb
dec
shlb
loope
sub
cmpsb
adc
sti
ljmp
hlt
add
fincstp
test
decb
sub
mov
xor
mov
push
xor
adc
cmp
add
mov
icebp
dec
pop
mov
adc
sub
mov
test
inc
adc
int
sub
cmp
bound
adc
sarl
lea
stos
fdivs
dec
into
aas
rcrb
aas
xchg
push
call
rorb
in
fists
mov
add
dec
jg
xor
or
mov
or
add
addl
dec
fs
pop
push
and
mov
int
xchg
fcmove
aad
jo
add
mov
xor
and
add
push
fimull
sbb
sub
loopne
pop
or
cmp
push
and
mov
push
add
dec
stc
lret
addl
xchg
and
inc
mov
jb
adc
or
test
lods
adc
adc
outsb
push
mov
and
push
push
dec
aad
nop
cmp
mov
pusha
ret
and
or
shrb
shlb
insl
sub
xchg
cmp
and
aad
mov
cmp
jp
cmp
mov
mov
cwtl
mov
loopne
scas
add
jb
add
sub
push
pop
inc
inc
lret
rorl
divb
cmpl
add
aas
cs
cli
insl
or
mov
mov
inc
sbb
loopne
add
nop
ds
fmul
rorl
rol
add
scas
insl
cmp
nop
sbbl
aad
sub
dec
mov
imul
pop
add
lea
xor
rorb
inc
dec
repz
mov
or
adc
push
add
push
mov
pop
mov
mov
ss
sarl
sub
adc
inc
loopne
lret
sub
aad
push
mov
nop
add
adc
sub
or
jge
mov
sahf
lcall
add
pop
shl
sub
jmp
imul
rcrb
and
sub
lock
mov
inc
xor
or
sub
mov
and
mov
sub
mov
jb
and
bound
mov
add
rolb
add
fxch
mov
ljmp
or
mov
add
cmp
mov
xor
cmp
rcrl
ficompl
push
push
cmp
sub
test
cmp
inc
xor
mov
fisubs
cwtl
adc
push
rorb
aas
call
filds
adc
add
cmp
inc
cmp
dec
mov
cmp
dec
jle
cmp
cmp
xor
sub
adc
xor
outsl
or
mov
inc
pop
inc
in
cs
cmp
or
mov
or
sbb
or
aad
cmp
dec
lods
cmp
orl
data16
aad
cmp
cld
loope
xor
mov
push
xchg
cmpsl
cmp
jmp
xor
mov
push
sub
inc
or
shlb
and
jl
fwait
imul
push
cs
cmp
xlat
xor
and
lods
xor
insb
push
sub
xor
sbb
aam
sub
jno
adc
pop
shrl
add
inc
clc
xor
push
sub
cmp
repnz
fildll
sbb
cmp
int3
dec
adc
pop
adc
jo
dec
fadds
jmp
cmp
rolb
jns
ds
jo
mov
adc
pop
jl
int
and
push
sbb
sbb
pop
dec
mov
inc
sbb
lret
mov
sbb
pop
push
push
aas
pop
xor
add
sbb
addb
in
mov
adc
in
loopne
ss
mov
and
es
push
inc
adc
sbb
adc
mov
adc
add
jno
jg
fistl
into
ss
push
icebp
push
jno
clc
mov
push
test
xor
mov
and
adc
jne
out
scas
jge
fisttpl
sbb
jl
jl
sub
outsl
mov
dec
shll
sub
das
push
pop
xorb
and
jmp
pop
bound
jo
sarb
inc
inc
sub
pushf
jecxz
push
cld
cld
stc
into
mov
lret
rclb
jle
aas
xchg
jl
xor
inc
aas
sub
push
sub
movl
adc
aas
push
adc
ret
fmulp
add
in
fwait
push
inc
mov
add
sarl
fimull
fstpt
ficoms
or
jl
add
scas
pop
hlt
mov
ds
cmp
fcmovb
mov
decb
incb
jle
pusha
dec
mov
nop
sub
push
push
das
clc
and
movsl
shl
push
jecxz
inc
and
and
add
es
and
inc
inc
and
pop
rclb
mov
ljmp
scas
inc
push
jle
inc
push
jle
aad
jle
adc
cs
scas
mov
pusha
cmp
jle
sbb
inc
mov
aas
or
mov
insb
push
cmp
ret
jo
rcrb
pop
nop
xor
mov
lock
push
adc
add
popf
jnp
loopne
and
sbb
pop
decb
fs
and
xor
sarb
inc
es
inc
icebp
adc
pop
roll
or
cld
icebp
jge
rolb
mov
sbb
fdiv
jno
sar
sub
jp
sar
sarb
fildl
das
mov
insb
xchg
fcmovnb
subl
mov
add
lcall
mov
xor
cmp
xor
jp
mov
push
mov
icebp
inc
jg
outsb
push
add
aas
push
fidivl
and
add
fstl
push
xchg
add
cmp
cltd
pop
je
stos
test
loope
lods
test
cmp
mov
xchg
test
into
incl
mov
sub
inc
lret
insb
sub
adc
rolb
pop
les
ss
jno
and
dec
loop
sub
push
add
xchg
push
sbb
nop
dec
mov
test
sub
sahf
push
daa
mov
or
jecxz
call
add
inc
jle
je
jo
dec
mov
mov
imulb
cld
cwtl
shll
test
mov
stos
jnp
ljmp
cwtl
add
mov
dec
sbb
adc
test
xchg
push
inc
jg
add
dec
or
les
dec
fmull
lods
les
test
sub
movl
out
into
adc
inc
nop
shll
or
leave
dec
addl
call
mov
push
xchg
adcb
add
xchg
rorb
add
or
push
push
rorb
xchg
jne
jecxz
js
ret
mov
fbstp
add
push
es
adc
and
or
mov
add
dec
or
dec
add
lcall
jb
fwait
adc
movsl
fwait
sbb
xor
or
test
cs
add
cld
ficoms
in
testb
mov
je
das
push
pop
les
push
sub
sbb
mov
or
push
out
inc
add
mov
jb
repnz
add
and
adc
xor
inc
in
add
fisttpl
lret
scas
cltd
je
or
and
push
popa
ret
pop
push
add
xchg
mov
cwtl
cmp
cmpsb
fs
pop
mov
adcl
leave
and
sbb
jns
sub
mov
inc
cmp
fmull
push
lret
pop
xchg
sbb
add
mov
add
fldt
add
shr
or
call
lret
add
sub
mov
mov
sub
push
std
push
mov
dec
or
les
xchg
mov
cli
aaa
dec
and
rolb
pop
and
ret
cld
dec
sub
nop
cmc
xor
add
aaa
or
xor
sub
cli
inc
adc
lcall
xchg
repz
adc
jmp
inc
adc
dec
cld
lods
mov
push
pop
rorl
adc
mov
imul
lods
jg
in
movsb
mov
mov
iret
les
cs
pop
aam
inc
dec
add
mov
add
scas
push
xchg
sbb
inc
jecxz
sahf
jl
cmovo
or
push
ljmp
and
aad
add
mov
push
shlb
les
rorl
ret
inc
dec
xchg
xchg
dec
xchg
int
sbb
leave
push
and
sub
push
mov
jg
add
add
std
add
fadd
and
xchg
js
xchg
inc
and
adc
and
xchg
push
test
xor
xchg
push
xchg
sub
call
inc
add
rolb
mov
inc
test
jo
or
outsl
xor
adc
sub
push
sarb
add
test
or
pushf
scas
add
ja
in
shrb
or
cs
loopne
and
leave
loopne
jo
adc
inc
sbb
lret
sub
and
push
or
sbb
divb
fdivr
push
les
fidivl
cmp
and
or
add
adc
testl
adc
cmp
fisttps
inc
divb
dec
dec
pusha
mov
dec
mov
sub
add
scas
xchg
dec
adc
popf
and
mov
jb
shrb
ret
xchg
test
fistpl
call
lcall
ljmp
insl
inc
adc
imul
sbb
cli
xchg
lods
in
mov
cmp
sub
inc
xchg
sub
dec
fstpt
inc
xorb
loopne
lcall
mov
sub
dec
decb
popa
nop
or
cmp
inc
inc
das
and
push
dec
or
fwait
or
dec
loopne
es
pop
push
and
add
out
je
lret
int
add
decl
bound
inc
cmp
add
testb
orb
pusha
inc
subb
cmp
mov
popa
add
push
mov
aam
or
xor
xchg
push
loope
loopne
push
mov
loopne
jecxz
cmp
sti
or
add
xor
or
xchg
sub
addb
dec
or
cmpl
or
icebp
les
jnp
adc
or
sarl
mov
aad
jp
and
adc
pop
sub
add
pop
sub
sub
add
shlb
out
pop
in
aaa
lds
mov
and
gs
xchg
xchg
rorb
sub
or
ljmp
xchg
aad
neg
and
dec
or
or
fildl
inc
and
cmp
add
sbb
add
fwait
push
pop
sahf
int
sub
push
inc
and
add
pop
imul
dec
aad
adc
pop
mov
jbe
add
adc
test
fadd
push
adc
inc
aaa
sbb
repnz
lods
push
imul
or
ret
lods
clc
jg
outsb
and
and
popf
sub
lods
mov
bound
inc
jns
pop
pop
pusha
lods
sbb
and
dec
inc
add
sub
add
idivb
loop
cmp
fistps
or
sbb
add
aam
or
dec
mov
push
loopne
sarb
je
mov
cmp
jl
mov
adc
addl
or
adc
dec
test
sar
es
add
aad
pop
loopne
ret
das
les
dec
adc
push
add
or
adc
add
inc
and
pop
insb
inc
add
inc
adc
js
mov
in
xor
add
mov
mov
push
sbb
mov
or
decl
add
push
xchg
jge
and
fs
mov
or
sub
pop
sub
adc
dec
scas
nop
mov
sub
dec
loope
or
or
mov
dec
adc
sub
and
inc
jo
cmp
cmp
mov
push
and
lods
mov
aad
jecxz
sbb
subw
sub
gs
push
mov
insl
bound
popa
push
add
insl
int
nop
pop
add
and
and
cwtl
xor
inc
sub
and
clc
sbb
adc
cmp
es
aaa
je
or
xor
out
pop
dec
or
push
sbb
loope
test
sub
push
or
pop
jno
in
dec
cmp
inc
pop
sbb
jo
pop
int3
xchg
lods
shll
mov
lahf
push
fadds
add
adcl
pop
inc
aaa
inc
js
add
cld
xor
sub
cltd
pop
jne
fwait
movsl
ss
int
xchg
aad
sub
cwtl
mov
push
sub
scas
push
hlt
or
stos
sub
mov
ret
fisttps
rorb
int
mov
add
es
movsb
mov
loopne
add
inc
mov
cmp
jle
dec
or
daa
jg
dec
iret
scas
int3
in
loopne
cmp
jo
adc
xchg
int3
cmp
mov
lock
xor
pop
adc
or
adc
lea
push
push
test
scas
cld
cmp
sahf
add
mov
es
sub
adcb
sub
dec
insb
pop
mov
push
sbb
es
add
popf
clc
xchg
ret
jae
add
arpl
add
fs
mov
fdivr
pop
adc
cs
lock
ds
aas
into
adc
icebp
ds
fstpl
adc
fimull
test
add
sub
cmpsb
mov
sub
xchg
aam
inc
add
das
dec
cwtl
push
jp
or
enter
imul
sub
push
and
push
inc
fcomip
mov
out
add
rolb
xor
push
jmp
scas
sarb
inc
rolb
xchg
and
sbb
je
xor
pop
mov
jb
mov
jnp
inc
mov
sbb
sbb
stos
mov
push
call
push
mov
add
rorb
scas
mov
notl
adc
into
xor
testb
ja
es
shrl
aas
or
add
or
lds
aad
out
and
loope
decl
shrb
or
add
lea
and
loopne
add
aam
enter
clc
mov
xor
mov
sub
dec
rcrb
jbe
dec
cmp
xor
push
and
call
sub
xor
inc
xor
sub
inc
mov
loopne
adc
ret
cmp
pushf
add
adc
incl
pusha
sub
push
mov
add
test
add
icebp
pop
inc
adc
lcall
xchg
dec
into
or
popa
inc
xchg
add
int
jo
ja
fisttps
and
adc
add
insl
add
inc
add
or
adc
push
int
or
cmpsb
hlt
addl
push
das
rolb
or
ret
or
push
or
int3
xchg
jl
mov
divb
mov
cmp
xchg
dec
scas
or
xor
or
adc
test
cwtl
pop
or
xor
jnp
loopne
sub
repz
sub
icebp
or
pusha
rorl
sbb
fwait
or
or
jl
loope
call
push
dec
mov
mov
mov
or
xchg
or
dec
mov
js
or
movsb
pop
sahf
mov
gs
cmp
dec
push
sub
xchg
std
lcall
sub
orb
mov
push
dec
xchg
sbb
inc
inc
adc
inc
imul
pushf
sbb
int
das
push
adc
pop
xor
cld
push
mov
dec
mov
adc
orb
xchg
mov
shlb
mov
xor
cmp
add
int
sbb
adc
into
adc
dec
add
loope
mov
clc
outsl
mov
cmp
xor
jg
sbb
outsl
mov
inc
add
inc
jo
cmp
add
push
add
adc
rolb
add
aad
adc
mov
inc
aaa
addl
lds
mov
or
mov
xorb
mov
jge
sbbl
ss
scas
add
jno
xorb
mov
call
les
adc
mov
testb
addb
subb
mov
push
dec
cs
idivb
cs
mov
xor
jb
loopne
cs
or
mov
js
ret
jl
movsb
int
jbe
add
ret
xchg
sahf
sub
push
mov
mov
mov
push
push
xor
add
dec
cmp
add
fwait
test
lds
mov
add
daa
jo
cli
adc
mov
mov
scas
jne
adc
xchg
sub
push
pop
aaa
gs
xchg
jb
jg
lea
add
xchg
adc
shrl
or
cmp
mov
pop
pop
xor
cmp
xchg
inc
sub
fwait
xor
dec
push
sahf
shrb
inc
mov
das
cli
divb
inc
push
mov
mov
pop
rolb
scas
jmp
aaa
adc
sub
sbb
mov
lock
loopne
jbe
xor
inc
clc
sbb
es
out
xchg
and
loop
and
ja
add
ret
cmp
sub
dec
pop
add
inc
inc
andb
mov
int
jge
lret
pop
inc
sub
int
mov
sbb
mov
xchg
daa
sbb
sub
mov
and
roll
add
test
adc
xchg
cmp
push
fsubrs
inc
mov
lret
xchg
add
sbb
cmp
add
or
mov
add
cwtl
lcall
mov
or
add
lock
mov
adc
add
mov
lock
sub
add
add
data16
data16
push
loopne
add
lods
pop
jo
or
adc
mov
push
push
sbb
xchg
sbb
xor
fwait
add
mov
sbb
sub
dec
sub
xor
notb
hlt
pop
adc
ds
or
inc
mov
xchg
pop
in
roll
insb
das
or
add
je
add
ret
dec
or
mov
and
add
or
inc
adc
add
shrb
pop
aad
jb
add
rcll
or
test
mov
mov
add
mov
dec
cltd
sti
add
dec
mov
divb
push
andl
mov
sbbb
xchg
or
aaa
add
push
dec
sub
movl
mov
mov
lahf
pushf
and
dec
cs
mov
gs
icebp
incl
xor
movl
std
ljmp
jg
addb
and
or
daa
xorl
outsl
push
mov
adcb
add
inc
or
sahf
fwait
test
xor
sbb
and
adc
mov
and
mov
inc
and
cwtl
dec
xor
ljmp
ss
inc
ss
dec
ja
jecxz
pop
leave
cli
aad
inc
inc
dec
xor
add
cmp
fmull
jp
dec
rolb
je
mov
hlt
inc
mov
mov
add
or
and
push
lcall
loope
or
and
mov
inc
mov
hlt
incb
pop
test
push
mov
mov
inc
cmp
push
loopne
jo
in
dec
xchg
inc
xchg
mov
adc
add
or
mov
sub
or
dec
ja
xlat
es
addl
fsubl
loope
fimull
cltd
and
sbb
mov
inc
adc
rcrb
sub
inc
cld
lcall
inc
mov
sub
cld
arpl
mov
loope
test
mov
mov
or
in
add
and
sbb
pusha
add
mov
hlt
add
les
and
sub
add
inc
xor
push
sti
add
inc
je
sbb
popf
rorb
lret
mov
mov
aam
ror
xor
js
push
xchg
ljmp
leave
and
test
imulb
arpl
pop
or
repnz
push
sbb
inc
or
shrb
and
clc
shrl
stc
and
inc
sbb
hlt
mov
cs
es
fldt
mov
in
xchg
pusha
jge
add
outsl
add
mov
mov
ja
jl,pn
mov
inc
inc
push
pop
lock
out
shll
mov
mov
scas
add
pop
and
movsb
dec
inc
add
sbb
rolb
nop
enter
out
xor
in
pop
sub
push
pop
adc
mov
push
add
lods
xor
push
das
loop
inc
or
sarb
add
and
fdivrl
scas
adc
mov
loop
mov
mov
pop
aam
sub
sbb
push
inc
adc
lock
xchg
inc
inc
add
adc
cld
shlb
into
les
and
and
mov
mov
dec
test
xchg
scas
or
jge
jp
add
push
scas
and
push
and
lock
loop
and
adc
movsb
or
cmp
mov
or
add
mov
leave
inc
push
mov
sub
test
add
sub
inc
push
loopne
push
adc
adc
push
jne
dec
lock
adcb
inc
adcl
out
popa
add
and
repnz
rolb
add
mov
ljmp
or
dec
addb
daa
mov
call
lcall
les
push
shr
js
xchg
dec
sub
shlb
push
adc
mov
es
sub
andb
pop
arpl
loope
addb
add
cmp
push
dec
sbb
add
mov
add
inc
ds
sub
cltd
lea
sarb
mov
or
mov
xchg
andl
or
push
inc
je
or
add
sbb
loopne
jo
pop
mov
push
cmpsb
dec
mov
jb
inc
hlt
push
nop
aam
jb
mov
sti
add
dec
pop
out
inc
add
inc
add
push
sub
lock
mov
sarb
adc
mov
inc
cs
mov
imul
das
in
xor
icebp
popa
inc
test
or
call
inc
sub
js
or
adc
pop
pop
ret
mov
subb
mov
mov
xor
xor
out
hlt
add
inc
and
test
fs
inc
xchg
lock
adc
mov
mov
or
push
push
jbe
mov
adcb
mov
mov
pusha
into
lock
push
divb
addl
jl
mov
and
or
push
test
mov
dec
mov
jle
enter
xchg
dec
lock
mov
test
push
std
push
idiv
dec
nop
es
add
dec
cmp
fsubrs
add
out
pop
lcall
mov
mov
sub
add
sbb
cs
jl
sbb
pusha
stc
sub
addb
shlb
bound
cmp
loopne,pn
push
xchg
add
fisubrs
add
push
subb
test
sub
or
adc
fcomip
adc
out
decb
xor
loopne
pusha
aaa
inc
sub
adcl
add
sub
jo
xor
lock
push
and
lea
dec
lcall
push
mov
js
mov
xchg
adc
outsl
cmp
sarb
test
sarb
jg
test
cs
sub
push
and
adc
mov
sub
lret
data16
int
add
movl
sub
sbb
js
scas
jecxz
and
loopne
mov
sub
in
jl
sub
sbb
and
cltd
inc
loop
pop
in
add
repnz
push
lea
add
dec
sub
adc
mov
clc
push
add
outsb
rorb
mov
xor
inc
loopne
and
jmp
lock
icebp
pop
xor
rorl
or
out
pop
shlb
int3
dec
int
andb
lock
push
lret
add
pop
hlt
fldl
clc
mov
mov
add
cld
movsb
mov
mov
roll
inc
int
outsb
sahf
mov
mov
pop
sub
mov
and
cmp
and
mov
popa
and
andb
dec
push
mov
or
push
lock
inc
std
sub
test
push
dec
mov
adc
int
test
fbld
incb
addl
leave
test
add
push
adc
mov
orb
ret
push
in
jle
xchg
mov
mov
adc
nop
mov
pop
and
push
adc
mov
mov
sub
outsb
lods
xor
mov
inc
loop
adcb
xor
xchg
or
jo
mov
jbe
xchg
icebp
or
sbb
push
insl
lret
stos
loopne
loope
cltd
sahf
mov
inc
mov
xchg
mov
rcrb
sar
add
adc
jo
cmp
loop
scas
add
dec
mov
or
aaa
pop
jmp
mov
dec
add
int
inc
jbe
xchg
out
movsb
lcall
pop
sbb
cld
bound
sbb
xchg
adc
lds
push
leave
pusha
fildll
add
nop
pop
push
push
and
inc
icebp
push
call
push
sub
cmp
or
loope
shlb
mov
adc
push
sub
inc
lret
sbb
stc
adc
or
xchg
jmp
outsb
aam
mov
mov
negl
sub
jo
mov
cmp
mov
sub
pop
cld
pusha
or
push
inc
push
leave
xchg
andb
push
repnz
xchg
push
cmp
clc
mov
mov
fs
rclb
push
sub
and
dec
and
mov
call
xor
sahf
sub
add
shrb
cs
jbe
jbe
and
out
dec
or
lock
aaa
push
ljmp
nop
xchg
xor
xor
inc
sub
dec
jp
clc
jo
orl
lea
xor
inc
ds
mov
mov
or
shlb
xchg
xchg
lret
or
imul
enter
ficompl
ja
sub
imul
scas
sbb
inc
push
roll
or
in
mov
scas
out
decb
pusha
adc
mov
or
dec
dec
inc
add
ja
orb
push
mov
push
sub
push
aad
jmp
int3
inc
cwtl
sub
adc
push
mov
divb
gs
sub
pop
push
push
pop
fstpt
xor
mov
and
inc
or
add
cmc
add
repnz
bound
imul
aaa
jo
add
mov
or
sub
xor
dec
sub
insb
std
je
add
imul
shlb
scas
loope
dec
nop
popa
and
or
jge
and
arpl
xor
add
push
pop
mov
sub
mov
popf
bound
sbb
mov
adc
sub
dec
es
pop
xchg
std
fnsave
and
or
xor
int
or
fimuls
xor
inc
add
cmp
in
movb
outsb
clc
sub
push
lret
loop
sbb
sub
je
and
push
scas
cs
adc
ror
jge
sbb
divb
adc
adc
push
loop
fwait
in
mov
lret
lock
bound
sbb
test
adc
pop
int
push
inc
mov
out
in
enter
out
test
scas
rcrl
lret
mov
add
adc
cs
aad
inc
or
inc
pop
loope
js
cs
xor
pusha
add
xchg
scas
mov
add
dec
xor
pop
fsubs
out
adc
adc
test
mov
out
fwait
in
mov
mov
xor
sub
enter
lret
test
pusha
cmp
cld
add
mov
sbb
inc
pusha
in
and
ret
cmp
mov
movsl
lock
or
xor
mov
add
add
loop
jns
mov
adc
jo
add
or
dec
push
mov
mov
jg
push
stc
in
int3
scas
in
inc
pop
or
add
cmp
movsl
cli
pop
hlt
sbb
sub
or
or
pusha
je
lds
lahf
push
mov
cmpsl
add
sub
pop
sub
add
push
mov
scas
add
or
rorl
in
sub
mov
push
adc
inc
mov
adc
lock
mov
in
push
lods
nop
test
cli
call
push
ljmp
mov
cli
ljmp
xchg
xor
jo
push
push
sub
xchg
addb
jecxz
add
orb
sbb
cmpb
sub
mov
and
push
push
ss
push
ret
stos
fs
push
sbb
shl
xchg
sub
mov
mov
sbb
lea
mov
call
std
mov
lret
push
outsl
sub
pop
icebp
ja
pop
rcll
repnz
inc
inc
cli
sbb
fldenv
push
push
adc
ret
js
cld
cmpsb
mov
sbb
rorb
inc
aas
cmc
jbe
or
add
inc
add
ret
xor
or
int3
sahf
jb
sub
dec
push
inc
std
loopne
xchg
add
xor
xchg
xor
push
adc
cmp
mov
ret
sub
test
dec
nop
cmp
fsubrs
pop
bound
divl
add
mov
lret
and
push
jmp
add
fs
out
sbb
mov
xchg
loop
inc
mov
pop
adc
hlt
int
inc
add
inc
aaa
jo
ss
pop
adcl
cli
shll
cwtl
orb
or
aam
sbb
xor
fmuls
or
push
popa
pop
pusha
or
subl
mov
pusha
adc
xchg
pop
or
outsl
mov
lret
mov
adc
divb
jo
inc
inc
mov
pop
icebp
fnstsw
in
dec
std
add
inc
adc
std
cmp
loopne
or
rolb
hlt
add
icebp
xchg
scas
and
or
add
cmp
je
mov
add
aad
dec
addb
fmuls
inc
inc
movsb
jno
fbstp
in
aad
add
andb
shlb
aad
inc
mov
stos
sbb
fadds
sbb
mov
data16
stos
push
cwtl
and
dec
aas
inc
sub
add
cmpsb
subl
rclb
mov
addb
enter
addl
aam
nop
fdivrl
sbb
adc
mov
xchg
sahf
push
rolb
push
add
inc
jnp
cmp
mov
mov
jmp
add
lods
nop
add
adc
or
cli
inc
aam
mov
adc
xchg
push
inc
push
incb
mov
mov
xchg
out
mov
rol
js
test
xor
int3
aad
outsb
addb
lods
repnz
mov
sbb
sub
jns
add
pusha
sub
cmp
pop
sub
fldt
xchg
test
xchg
jo
xchg
or
fistps
fadd
adc
cld
inc
mov
or
clc
aad
adc
push
xchg
rcrb
imulb
add
dec
in
add
lock
out
cmp
faddp
or
push
insb
cld
or
xchg
inc
or
hlt
lods
sbb
lcall
les
fisubs
cmp
int
into
inc
pop
xor
mov
fwait
popa
cld
ret
dec
decb
in
push
je
into
inc
insb
add
push
sub
jp
and
int3
js
and
subl
out
int3
xor
rclb
ffree
jno
dec
inc
cmp
push
mov
sbb
js
or
lods
inc
add
xorb
shl
adc
add
sbb
test
mov
movb
cmp
ja
add
mov
xor
pusha
xchg
and
push
sub
push
lea
pop
add
sbb
or
and
in
jmp
dec
lret
mov
mov
aas
mov
nop
xchg
orb
adcb
mov
incl
xchg
xchg
data16
xchg
xchg
loop
aaa
add
cmp
andl
loopne
jge
mov
outsb
incb
inc
jbe
in
pop
and
add
sbb
subb
add
out
ret
dec
adc
xor
xchg
and
or
out
adc
repz
cmpb
sbb
or
pop
mov
cmp
rorl
pushf
push
mov
sub
lods
mov
sub
lods
or
xor
test
hlt
cli
xchg
sub
jge
jle
dec
and
add
and
dec
inc
pusha
add
dec
mov
sub
mov
int
cltd
call
push
and
rolb
mul
mov
lds
clc
mov
add
mov
enter
or
jno
out
icebp
aaa
movl
sub
add
and
int
fdivs
xchg
rolb
ret
push
sub
leave
mov
add
aam
pop
inc
daa
inc
je
and
fldl
pusha
ds
lret
add
pop
mov
lcall
rcl
push
in
cmp
out
es
adc
lock
push
out
jp
mov
fists
or
sub
iret
icebp
mov
inc
loopne
cwtl
xor
subb
or
das
jb
mov
mov
mov
repz
pop
and
neg
and
sub
or
jbe
test
mov
or
xor
icebp
dec
xor
sub
or
subb
fwait
lcall
inc
popa
push
and
sbb
mov
sub
mov
mov
push
mov
rolb
xor
data16
inc
movsb
lret
fiaddl
and
xchg
xchg
mov
xor
mov
loope
ss
jg
or
pusha
push
xor
or
mov
nop
add
pop
sub
or
cmp
inc
mov
ffree
jl
and
adc
imul
jno
pusha
mov
popl
sbb
dec
dec
inc
fdivs
shl
mov
xchg
push
pop
sti
add
mov
xchg
sub
add
cmp
sbb
pusha
pusha
arpl
pop
icebp
push
jg
inc
loope
popf
sub
or
loopne
pusha
aas
gs
addb
adc
add
mov
mov
push
mov
cmpsb
adc
cli
inc
in
pop
jns
or
mov
pusha
or
jo
mov
loop
loope
and
sbb
nop
mov
mov
add
enter
jg
and
inc
or
dec
or
and
lods
mov
inc
sbb
test
jae
mov
mov
je
and
pop
insb
jecxz
mov
mov
sbb
andl
pop
pusha
adc
pop
shrl
or
add
or
mov
sub
cmp
popa
pusha
sub
bound
std
aad
les
rol
in
push
xchg
mov
push
rolb
mov
push
sbb
push
or
or
shlb
add
inc
insb
jb
mov
add
sub
fmull
push
in
ret
add
xchg
pusha
les
cmp
mov
notl
fstl
lret
xchg
addb
sub
in
shl
hlt
mov
add
sub
aad
mov
mov
pop
imul
in
and
add
orb
lret
mov
inc
xor
je
mov
fcoms
flds
aaa
or
aam
mov
or
clc
add
lds
adcb
scas
fisttps
jo
sbb
jp
lods
mov
adc
in
xchg
fildl
and
jbe
lcall
or
loop
push
adc
dec
loopne
lret
sub
loop
cmp
xchg
dec
ret
idivb
inc
dec
mov
pop
add
daa
sub
sbb
cmc
sbb
test
lock
ret
je
mov
enter
lock
or
jg
cs
shl
add
sar
mov
mov
rolb
jp
orb
dec
mov
scas
or
or
jl
int3
mov
fwait
cs
mov
add
mov
in
push
les
fisubs
je
fldt
decl
sub
roll
xchg
inc
fsubl
pusha
shrl
add
mov
movsb
loop
cmpb
ljmp
adc
clc
mov
pop
add
leave
push
ds
xor
adc
and
imul
mov
sub
fstl
mov
pop
mov
mov
cld
xor
aad
lret
add
push
sub
adc
mov
subb
mov
push
adc
lea
add
pop
aam
add
xor
xchg
sub
les
mov
loope
jbe
add
aad
enter
adc
int
sti
mov
push
push
add
jle
sbb
jg
pop
subb
add
inc
push
orb
and
pop
sub
adc
or
cs
adc
out
dec
push
xor
adc
pusha
inc
inc
cli
mov
jbe
xor
and
add
imul
nop
out
insl
xchg
call
fsubrs
fisttpll
add
mov
aad
push
xor
dec
dec
sbb
aaa
mov
ret
mov
dec
daa
add
adc
mov
call
lods
xlat
jae
mov
add
loopne
nop
cmpsl
add
pop
push
pop
inc
fs
je
fcom
pusha
add
or
fwait
pop
inc
cmpb
icebp
rorb
movsb
das
cmpsb
int3
lock
add
es
fidivs
ljmp
xchg
add
add
mov
sahf
sub
push
add
pop
jl
ficomps
sub
addl
fisttpl
imul
pop
or
rorb
mov
pusha
push
ret
or
inc
fldenv
add
mov
add
loopne
cs
ja
or
bound
inc
add
or
test
dec
icebp
insl
nop
add
xor
lock
push
scas
and
adc
pop
cmp
rclb
fistl
add
add
add
adc
mov
pop
lahf
bound
pop
lea
nop
jo
pusha
push
loopne
mov
fisubrl
std
pop
outsl
fs
mov
or
mov
cmc
jb
jae
jg
sub
jo
rolb
flds
xor
adc
jae
lock
inc
sub
or
lods
dec
or
jno
rcll
and
jl
test
xchg
push
insb
xchg
push
aaa
and
pop
mov
push
sti
cmpsb
lds
or
mov
les
stos
lcall
or
push
hlt
adc
add
pusha
and
mov
xchg
ret
out
cli
jo
and
add
sahf
push
add
out
mov
adc
adc
dec
loope
sub
mov
xor
jg
pop
std
test
adc
xchg
sbb
in
adc
in
lock
xchg
and
iret
sub
nop
dec
push
or
mov
pusha
mov
ljmp
xchg
and
or
das
xorb
sarl
cli
call
xchg
mov
cmp
mov
xchg
cmp
loopne
repz
nop
pop
add
das
aam
push
cmpb
rorb
mov
push
push
fldl
insb
daa
lea
mov
xor
out
fisubrl
mov
dec
inc
mov
pusha
adc
sub
aas
mov
add
in
add
mov
pop
dec
ret
inc
inc
lret
dec
inc
sub
roll
sub
js
mov
mov
inc
push
es
aad
rcr
pop
mov
adc
das
mov
push
cmp
std
ret
repz
loopne
adcb
push
pusha
fidivl
add
pop
popa
push
insl
lock
cmp
and
in
xor
push
jae
xchg
jmp
mov
mov
imul
jg
bound
dec
rcl
adc
mov
adc
mov
rcll
sbb
push
lods
incl
adc
shll
add
mov
dec
loopne
ljmp
subb
mov
or
icebp
adc
test
out
mov
lods
inc
sbb
call
loope
aad
les
lock
inc
sub
divl
fwait
lods
push
sbb
jno
inc
bound
push
sbb
jp
xchg
mov
push
call
adc
aad
dec
push
add
lods
add
or
ret
enter
pusha
add
and
scas
push
pop
jo
mov
mov
lock
xor
insl
mov
popa
mov
lret
je
aad
mov
lea
xor
ficomps
mov
and
cmp
mov
testb
clc
and
adc
rclb
ret
mov
orb
fidivrs
imul
nop
inc
mov
push
jge
out
inc
pop
add
add
test
insb
adc
lret
lock
dec
mov
add
inc
dec
mov
mov
dec
cmp
and
cmp
xchg
xor
pushl
nop
mov
adc
movsl
cmp
xchg
shll
add
ja
cli
mov
mov
insb
sbb
inc
imul
dec
xchg
add
xor
cli
add
fiaddl
jle
mov
into
pop
pop
insb
scas
into
and
xchg
inc
add
xchg
adc
xchg
add
insb
jl
jb
je
xchg
outsl
mull
adcb
fmull
sahf
movsb
inc
add
enter
inc
dec
add
enter
mov
or
out
jo
add
movsb
dec
out
add
lret
aaa
xor
add
lods
or
movsb
and
nop
ss
or
xlat
sub
sbb
cs
subb
jo
sbb
jge
test
dec
xchg
pop
cwtl
cli
mov
add
fdivrs
mov
push
popf
push
pushf
loope
pop
lds
or
inc
mov
add
jle
add
addb
pop
insb
mov
mov
add
lock
or
sbb
sub
cld
add
adcb
in
mov
subb
jecxz
add
mov
scas
or
sbb
sbb
int
sbb
dec
out
ret
lock
ja
mov
sahf
push
and
mov
dec
xchg
outsl
clc
dec
loop
lcall
add
xchg
pushf
xor
add
in
xchg
push
inc
pop
add
hlt
lret
movl
inc
add
xchg
sbb
es
mov
inc
adc
pop
push
sbb
adc
sti
sbb
adc
stos
and
hlt
mov
add
jb
add
lods
mov
mov
rcll
push
call
subl
cltd
inc
pop
decb
cmc
xorb
jbe
inc
jmp
mov
das
cli
adcl
lret
cmp
scas
shlb
shlb
jo
inc
test
inc
push
jp
or
je
sahf
sub
or
das
data16
in
push
jg
mov
fldcw
mov
fmuls
add
jo
data16
sbb
fisubl
es
inc
pushl
add
mov
mov
data16
daa
mov
int3
lock
inc
rolb
loop
rol
je
or
sub
mov
inc
or
dec
enter
cmp
adc
inc
add
mov
and
push
push
push
xchg
inc
jle
out
std
shlb
mov
insl
push
inc
push
je
push
js
mov
add
in
add
outsb
mov
stc
sub
pusha
mov
outsl
adc
mov
and
mov
imul
inc
xor
sub
rcrb
add
dec
cmc
inc
mov
add
nop
sub
add
dec
xchg
xchg
add
fists
jb
stos
int
push
aam
push
mov
es
mov
shll
mov
push
jo
js
test
mov
mov
cmp
xor
je
cmpsl
mov
lods
orb
sbb
sbb
sbb
pop
sar
cmp
aas
orl
inc
mov
pop
sti
rorb
or
cmp
cld
add
andb
add
lcall
imulb
or
xorb
hlt
stos
incl
aad
lods
test
cld
add
jmp
movsb
sbb
push
loopne
mov
lods
sti
out
fildll
hlt
mov
xchg
test
adc
je
xadd
push
sahf
or
and
fildl
xor
jle
and
scas
movb
aam
lret
fcmovnb
adc
adc
xor
inc
cmp
jg
push
dec
je
xchg
xchg
lods
add
loop
mov
mov
fs
adcl
out
dec
inc
pop
cmp
sub
inc
out
and
icebp
add
pop
mov
lods
shlb
mulb
and
pusha
and
sbb
lret
fadds
pop
mov
sbb
sub
inc
xor
scas
ret
adc
loopne
mov
negb
sub
loope
and
add
add
lods
add
lcall
dec
rolb
xchg
and
jg
popa
movsb
shrb
jl
fisttpll
loopne
push
es
cmp
xchg
add
fwait
dec
xchg
sub
dec
sarl
mov
xor
add
xor
mov
aam
pop
xchg
xchg
inc
movsl
mov
xchg
push
ljmp
pop
repnz
and
into
clc
add
mov
cld
cwtl
jge
repnz
push
or
loopne
pop
add
xchg
xor
xchg
cmp
ds
xchg
leave
rolb
xchg
scas
js
mov
insb
sbb
sbb
dec
xor
jecxz
rcl
jle
pusha
xor
mov
sub
data16
adc
sub
out
adcb
mov
lcall
test
or
lock
int
or
decl
movsb
popa
pushf
fwait
add
adc
loope
and
dec
jg
sbbb
lods
xor
loopne
and
divb
push
sbb
mov
xor
pop
push
or
jg
lock
xor
add
sbb
les
imul
in
inc
mov
mov
push
dec
pop
and
fisubs
jmp
incl
push
mov
push
sbb
or
ret
add
jmp
and
ret
leave
bound
mov
mov
lock
lds
push
xchg
mov
cltd
in
call
inc
lret
les
pop
pop
or
fwait
in
add
dec
addl
int3
es
aad
in
or
jmp
idivb
mov
mov
or
mov
or
out
repz
fst
cmp
mov
inc
adc
inc
inc
xlat
inc
xchg
dec
sub
fstl
test
add
adcl
fdivp
aad
or
movsb
or
aam
ja
nop
and
mov
clc
inc
or
dec
fidivrs
pusha
rcll
mov
and
out
call
add
mov
pop
mov
cli
inc
pop
test
insl
xchg
xchg
test
mov
cmp
adc
push
call
sbb
mov
mov
xchg
adc
int
push
cs
ret
sub
enter
adc
hlt
mov
cmp
sub
frstor
add
insb
xor
mov
inc
scas
cmp
les
add
and
mov
inc
inc
movsb
jecxz
ss
loopne
hlt
push
add
mov
xor
adc
adc
jp
sub
mov
pop
push
inc
pop
push
or
push
or
sbbb
addr16
jl
mov
and
shlb
imul
and
add
push
add
add
adc
fs
push
insl
loop
xchg
push
mov
roll
int
add
ljmp
adc
int3
add
adc
push
or
int
nop
mov
fidivrs
mov
dec
push
adc
add
add
adc
jmp
arpl
into
dec
jmp
mov
in
push
and
mov
push
mov
cmpb
sub
pop
aad
add
or
pop
aad
ss
lock
add
adc
mov
push
xchg
leave
xchg
add
ds
push
mov
movsb
or
outsb
mov
cmp
add
push
inc
add
roll
lret
and
mov
sub
nop
dec
js
add
add
not
add
filds
test
or
and
scas
nop
je
inc
sbb
add
push
push
push
sub
sub
or
add
ficoml
pop
xlat
sub
scas
fists
pusha
inc
cs
and
push
push
xor
das
and
sti
pop
test
dec
adc
nop
lahf
lret
inc
and
adc
add
mov
mov
or
test
add
add
and
call
and
fcoms
jb
in
aaa
add
in
dec
ret
mov
add
add
sub
adc
inc
or
sub
mov
mov
scas
je
inc
mov
test
jmp
add
jecxz
lret
sub
mov
test
sub
or
adc
mov
outsl
outsb
sub
ret
add
fnstenv
dec
cmpb
add
add
sub
and
decb
decl
push
xchg
xor
jo
in
stc
iret
data16
mov
mov
fsts
add
jle
addl
xchg
fsubrl
outsl
adc
mov
xorb
repnz
adc
leave
adc
pushf
adc
sti
lods
std
int
adc
ds
adc
ficoml
int
sub
push
pushl
cld
aaa
lods
mov
jno
add
jae
jmp
mov
into
sub
push
ud2
stos
mov
jg
callw
ljmp
mov
nop
lock
sub
outsb
xor
pop
hlt
adc
add
push
ljmp
dec
xchg
aad
and
repz
testb
iret
rorb
and
ret
push
leave
add
sbb
xor
pop
mov
adc
push
add
stc
lret
and
inc
aam
mov
add
add
cs
mov
push
adcb
inc
inc
ficoml
mov
or
insb
pop
cld
sbb
je
or
lock
in
dec
pushf
sub
adc
and
std
xorb
inc
push
xor
dec
les
adc
mov
lods
shr
adc
add
pop
movsb
sbb
pop
xchg
scas
adc
cmpsb
pop
mov
rol
add
cld
decl
leave
in
movsb
cmpb
xchg
test
and
rclb
and
jp
pop
xorb
dec
testl
ds
subb
mov
mov
into
je
shll
add
dec
push
inc
xor
fdivl
push
ss
rolb
mov
push
and
sbb
rcrb
mov
inc
js
movl
add
or
test
std
mov
loopne
adc
add
add
push
or
mov
faddl
or
mov
jg
jge
movsb
out
adc
inc
test
add
ret
dec
and
push
std
rclb
mov
inc
add
out
shll
aam
fistpll
sahf
xor
or
cmpsb
mull
loope
popf
push
adc
mov
mov
test
aas
cmp
mov
add
add
call
loopne
addl
pop
test
test
inc
push
adc
cld
push
jge
mov
sbb
add
aaa
cmp
pop
pop
dec
repnz
or
movsl
add
movsb
fistpll
mov
xchg
cmpsb
sub
mov
in
jbe
rolb
and
mov
inc
out
addb
rcrb
push
ljmp
shlb
lock
test
mov
fbstp
sub
pusha
push
out
sub
rclb
jbe
imul
add
cld
cwtl
pop
mov
je
and
jg
pop
sti
stos
xchg
add
loopne
pop
sbb
cmp
inc
fwait
add
mov
repnz
and
arpl
sub
adc
add
inc
orl
sub
leave
in
insb
ds
or
add
lods
in
and
add
aaa
xchg
cmc
lret
cmp
cld
mov
cmpsb
add
in
push
or
add
lods
shll
jecxz
fists
or
mov
mov
int
mov
negb
ret
sbb
sar
loop
or
add
les
or
add
dec
dec
add
clc
cmpl
enter
loope
adc
sahf
pusha
jo
and
lock
adc
sahf
adc
les
loope
scas
adcb
loopne
lret
lcall
pop
sub
add
add
mov
sti
sbb
pop
cmp
add
mov
mov
add
xorb
adc
incl
roll
lock
add
adcb
outsl
mov
ret
mov
add
dec
jge
in
outsl
add
int3
jl
rolb
aas
lock
xorb
test
sub
cmpb
int
orl
popa
andl
andl
andb
mov
lret
outsl
sbb
sbbl
lret
iret
cmp
sbb
loopne
aas
cmp
daa
cmc
incl
add
imul
out
jle
adc
lret
xchg
adc
outsl
es
inc
pop
rolb
push
and
fildll
adc
add
roll
ret
xorb
imul
cmp
in
adc
pop
rclb
rcrl
jl
nop
add
jbe
sub
test
add
add
lock
pop
and
push
rclb
addb
sete
sti
and
or
mov
sarb
idiv
jg
sbbl
enter
pop
int
jmp
inc
cvttps2pi
decl
movsb
in
fcomps
ret
inc
or
sub
add
in
cwtl
icebp
sub
shlb
pusha
in
lea
inc
sbb
lret
inc
int3
add
ljmp
pop
in
aam
dec
sbb
push
test
or
add
add
addb
or
sbb
sbb
andb
sub
inc
das
xor
add
adc
out
clc
aaa
in
inc
adc
or
cmpsb
mov
dec
adcb
enter
pusha
orb
xchg
mov
jo
sub
xor
mov
cmp
repnz
xchg
dec
dec
lock
leave
lret
adc
loope
add
cmpsb
add
lret
and
sub
add
push
inc
or
aad
sbb
adcb
inc
sub
loop
mov
test
push
or
stos
inc
sbb
pop
inc
push
dec
loopne
inc
jge
hlt
push
or
mov
mov
call
mov
lock
mov
mov
leave
and
and
mov
pop
pop
orb
add
mov
mov
pop
js
scas
adc
push
stos
enter
push
cltd
mov
cli
jg
xchg
iret
outsb
gs
rcrb
sbb
jg
xchg
test
inc
push
inc
loopne
ret
pusha
push
pop
xor
loop
lock
data16
add
call
jge
xor
dec
fstps
inc
mov
decl
ds
or
sub
push
test
in
mov
mov
dec
mov
pushl
inc
add
push
mov
add
jae
aas
popa
and
jge
mov
bound
jl
sbbb
imul
outsl
in
popa
or
add
and
lret
ret
ret
jg
in
inc
inc
add
enter
cmp
mov
hlt
jbe
lock
aad
xor
int
sub
shrl
and
push
xchg
dec
pop
add
sub
inc
mov
int
leave
pusha
pusha
adc
es
lods
enter
mov
fisttps
loope
hlt
xor
data16
sahf
mov
clc
sub
inc
add
cmp
arpl
push
xor
dec
add
adc
insl
aad
inc
mov
ret
add
shrb
mov
rolb
insl
js
and
orl
add
push
das
mov
into
sbb
jo
mov
mov
lock
lahf
fneni(8087
add
adc
sbbb
adc
movsb
loope
or
addl
fstps
xchg
sub
adc
leave
mov
cmp
popa
mov
xor
mov
mov
call
inc
clc
jl
add
rcrb
loope
and
in
fwait
lcall
pop
fs
sbb
mov
dec
bound
pop
lock
cld
in
sbb
pop
shrl
popa
mov
in
pop
shrb
add
and
add
subb
and
dec
dec
mov
lds
mov
in
mov
add
xor
in
inc
jne
push
jmp
jecxz
add
cmp
loop
cmc
dec
rcrl
inc
mov
shr
mov
sub
cwtl
rcll
xchg
pop
insb
fcomip
popa
add
roll
dec
mov
add
sub
lea
inc
movups
mov
dec
hlt
cs
add
arpl
sub
cmpsl
sbb
in
pop
aad
mov
rcl
mov
or
ljmp
jmp
les
iret
adc
leave
adc
push
and
adc
in
inc
and
sub
xor
mul
add
xor
or
push
xchg
loope
or
icebp
clc
mov
push
aam
mov
sub
psubsb
stos
cs
adc
push
sbb
mull
mov
xor
data16
inc
push
adc
sub
pop
inc
lcall
adc
and
rclb
pop
icebp
add
mov
lea
pop
inc
lods
mov
dec
leave
or
or
movb
or
test
rol
leave
lcall
cmp
lods
enter
orb
inc
push
lods
stos
cmc
xchg
or
push
and
sub
popf
or
imul
fildl
adc
xchg
test
imul
dec
test
nop
jge
shrl
push
std
dec
mov
dec
test
xor
shll
inc
jbe
imul
add
test
mov
adc
push
push
std
sbb
push
push
notl
dec
add
pop
stos
add
cli
or
stos
push
sub
imul
push
push
movq
sbb
or
add
dec
and
adc
dec
std
or
mov
aad
add
cmpb
dec
or
popf
lcall
es
lret
sub
dec
int
xor
and
cmc
int
aam
aad
xchg
je
aam
adc
lret
notb
icebp
push
test
push
xor
xchg
xlat
dec
or
shrl
es
xchg
rorl
or
pop
sbb
xchg
lock
test
in
xlat
test
xlat
xchg
add
add
nop
add
adc
out
and
fbld
mov
mov
int
add
push
rcl
pop
hlt
and
test
dec
rorb
lcall
xchg
out
pop
jl
rclb
mov
and
clc
clc
in
in
dec
push
mov
xlat
or
dec
mov
or
xor
jb
stos
xchg
orb
and
sbb
cs
and
and
mov
pop
incl
int3
xchg
pop
mov
ficoms
cwtl
inc
add
lock
inc
xchg
xchg
dec
incl
shrb
push
add
pushf
jo
xchg
cmp
mov
rorb
lcall
test
add
je
sbb
mov
sbb
bound
or
in
mov
push
inc
dec
or
stos
mov
xchg
std
sti
adc
cs
adc
sub
and
lock
in
outsl
in
add
dec
dec
fadds
add
mov
jecxz
call
and
dec
mov
xchg
push
xor
jecxz
nop
xor
js
dec
and
dec
pop
jge
cmp
pop
mov
sahf
mov
adc
or
sbb
or
add
mov
mov
add
aam
and
add
fs
cmp
push
or
sbb
ret
mov
or
insb
cwtl
add
and
cmpsb
or
xor
adc
daa
test
push
add
sub
cmp
add
add
jno
pop
push
mov
mov
add
subb
add
loopne
xor
inc
dec
roll
mov
clc
or
push
adc
clc
pop
fwait
cwtl
push
push
add
aas
fwait
push
push
add
push
add
add
aas
inc
aaa
mov
mov
sbb
jo
pushf
sub
sbb
add
addb
orl
and
int
sub
pop
enter
add
sti
lcall
push
or
push
rclb
sbb
or
adc
mov
adc
adc
loopne
shl
mov
pusha
add
xchg
sarb
push
sbb
loope
push
push
daa
hlt
incl
mov
movsb
inc
add
add
dec
inc
aad
in
sbb
add
cmp
decl
lock
jo
push
adc
lods
xor
xchg
ljmp
sub
cltd
orl
lock
xorb
sbb
filds
cld
jg
adc
fsts
push
pop
in
xor
adc
and
sub
mov
fildll
mov
or
ret
outsl
and
fadds
sbb
adc
sbb
inc
xchg
pop
cmp
mov
xchg
les
icebp
lock
inc
dec
or
mov
ret
and
and
cmp
incl
hlt
lcall
nop
inc
lret
pusha
pusha
aaa
lods
icebp
rclb
cmp
mov
loop
addb
and
add
mov
loopne
adc
lock
sbb
cld
popf
push
pop
add
adc
sub
fildl
lods
or
adc
data16
sti
adc
mov
add
jno
mov
cld
aaa
mov
add
jmp
push
shrl
int
xchg
mov
dec
int
les
pop
inc
inc
lock
xchg
push
testl
cmp
sub
les
enter
mov
lock
inc
cmp
add
sbb
jo
push
xor
add
add
inc
push
shlb
mov
daa
scas
sbb
fwait
sub
sti
inc
fistpl
std
cld
sub
sub
adc
lods
movb
adc
dec
mov
xlat
scas
fiadds
push
inc
add
mov
stos
sbb
xchg
sbb
aad
pop
loope
in
lods
xor
lock
dec
divl
es
add
in
add
imulb
inc
adc
xchg
lods
mov
cmpb
call
add
add
push
std
add
mov
test
lret
fimuls
lods
sub
mov
icebp
or
dec
cmp
into
pop
xchg
scas
and
push
dec
add
cmp
mov
xchg
jecxz
push
dec
add
add
adc
adc
lret
cmp
test
clc
call
dec
es
orl
dec
aaa
mov
push
addl
or
push
movb
aaa
add
add
lahf
sbb
jg
rcll
mov
sub
subb
push
add
adcb
or
ret
push
cwtl
les
pop
fimull
and
lods
loope
repnz
test
add
popa
in
cmpsb
or
adc
or
daa
push
add
fcomps
lcall
or
ss
jnp
pusha
jo
mov
iret
dec
adc
scas
divb
ret
pusha
in
mov
mov
inc
or
and
push
lcall
jo
adc
sub
xchg
fisubl
inc
adc
outsl
leave
andb
add
mov
or
dec
jo
ss
incl
mov
cltd
mov
shrb
int
add
aaa
mov
sarb
lcall
push
in
andb
cmp
jae
stos
clc
xorb
shll
sbb
lock
dec
test
and
movl
xor
and
les
cmp
dec
rolb
es
js
mov
pop
jle
or
pop
pop
sub
insl
loopne
imul
in
js
mov
cld
push
lock
add
mov
add
jo
movsb
pop
ret
add
loop
stc
ja
fbld
cs
test
aad
cli
jg
sbb
dec
sbb
ret
or
shlb
mov
xchg
repnz
or
dec
add
adc
jno
sbbl
mov
rcrb
gs
adcl
icebp
sti
mov
xchg
sbb
xor
sbb
outsb
mov
adc
and
int
orl
cmp
roll
notl
sub
mov
push
fwait
dec
mov
orl
pop
fstl
adc
mov
aaa
adc
decl
loopne
jge
outsl
inc
xchg
mov
pusha
sbb
adc
cld
cmp
test
add
sbb
add
add
mov
and
shll
ljmp
cmp
xchg
enter
rcrl
or
imul
and
pop
or
rorb
inc
popa
cwtl
sbb
js
or
rorb
sub
xor
cmpsb
mov
push
cs
or
sub
sbb
dec
clc
jg
test
dec
cs
jge
dec
ss
push
andl
sub
adc
aam
loopne
test
loop
dec
in
cmp
pop
mov
add
inc
pushf
pop
inc
inc
sub
pop
add
loopne
shrl
adc
fiadds
hlt
shll
out
ret
add
sbb
pop
inc
cmp
push
addb
mov
adc
mov
adc
aas
pop
push
ret
pusha
or
jp
xchg
loope
loope
rcrb
in
xor
incl
xchg
inc
and
les
or
and
in
pushl
push
inc
pop
add
popa
inc
and
bound
mov
sbb
loop
call
sti
negb
jmp
lods
and
loop
daa
pop
stos
rolb
loope
sub
fistl
loope
test
or
leave
out
mov
mov
pop
jne
out
inc
and
jmp
cmpsb
add
lret
cmpsb
lret
add
out
adc
adc
out
mov
xchg
ret
fwait
push
lds
clc
daa
inc
xchg
shll
add
mov
in
ret
xor
inc
ror
cld
sub
push
mov
inc
add
mov
lods
adc
mov
mov
jnp
je
mov
cwtl
sbb
and
add
js
enter
and
pusha
add
adc
add
rcll
jmp
and
and
popa
sbb
inc
xor
decl
rorb
scas
ja
ljmp
push
mov
lods
lods
xor
dec
mov
cmp
inc
mov
inc
and
aad
clc
sar
xor
popa
or
movsl
in
nop
insb
data16
jecxz
add
or
gs
addl
in
mov
mov
loope
popa
xor
ljmp
xor
sub
mov
adc
sub
push
or
xchg
add
leave
add
in
sub
pop
inc
jecxz
add
push
rcrb
lret
gs
and
push
push
cld
push
or
push
push
fistpl
jmp
test
inc
test
mov
and
iret
inc
or
push
dec
filds
xchg
andl
xor
add
fdivr
ljmp
mov
loope
xor
jne
pusha
sbbb
cmp
jo
mov
xchg
and
xor
out
xchg
xchg
sub
cld
mov
add
clc
sahf
add
je
add
inc
xor
or
add
add
add
cmp
add
nop
je
xchg
pop
add
int3
inc
pop
cmp
cld
and
push
aad
lods
inc
push
mov
movl
pop
jo
nop
jne
jp
icebp
lcall
inc
or
sub
dec
nop
jb
xor
dec
mov
add
sub
insb
lea
add
mov
outsb
lcall
pop
shlb
pcmpgtb
nop
push
push
push
dec
pop
dec
mov
test
adc
inc
and
test
outsl
cli
popa
adc
ret
loope
adc
nop
push
shlb
push
ret
adc
adc
push
test
loope
nop
divl
push
outsb
inc
fs
xor
pop
data16
aam
ljmp
or
jle
lock
mov
mov
push
test
cs
insl
jmp
sub
sti
ja
jmp
fs
fs
sbb
inc
jae
loope
inc
loop
mov
jo
sub
push
sub
outsb
mov
xchg
lock
sbbb
leave
jo
popf
sub
mov
inc
cld
arpl
nop
add
js
jo
sub
add
int3
inc
add
add
xor
into
dec
dec
dec
mov
incl
xchg
cmp
adc
fisubrl
in
mov
xor
adc
and
sub
push
cwtl
bound
movb
push
pop
lds
scas
mov
neg
outsb
pop
frstor
sub
sub
test
cmp
clc
shll
sbb
inc
or
xchg
xchg
loope
loop
jo
cmp
clc
mov
mov
dec
clc
fisttps
push
sub
lock
inc
insb
and
cmp
mov
frstor
jo
pop
push
adc
or
enter
cmpb
mov
sub
icebp
jne
add
mov
int
xor
add
cmp
or
and
xor
mov
add
std
push
in
mov
adc
pusha
add
or
gs
inc
pop
lock
sbb
fld
add
cmp
adc
add
jmp
fldlg2
dec
loope
mov
xchg
or
cwtl
rol
ljmp
adc
rolb
xchg
and
arpl
popa
adc
outsb
xchg
push
push
pop
call
flds
movsb
jp
cltd
mov
aaa
int3
inc
mov
cltd
mov
and
inc
jg
mov
inc
push
or
pop
pop
inc
test
xchg
xor
add
mov
mov
enter
test
stos
jl
push
incb
cmpsl
and
aam
outsb
es
xor
add
inc
inc
mov
andb
pusha
mov
inc
xor
std
jo
ljmp
pusha
adc
adc
in
inc
or
int
xchg
xchg
xchg
test
cltd
adc
outsb
leave
int3
or
popa
mov
pop
incl
imul
loope
mov
xchg
xchg
push
or
shll
push
test
inc
adc
xchg
shlb
xchg
mov
movsl
xchg
int3
movsb
rcll
js
orb
les
rclb
pop
xchg
inc
das
test
xchg
push
xchg
fs
rolb
dec
pusha
jno
loopne
fisubrs
jmp
jo
inc
xor
sbb
mov
xor
adc
call
jbe
dec
sbb
aaa
or
loopne
adc
xchg
mov
xchg
dec
fsubs
fcmovb
and
push
ljmp
out
inc
fnstenv
scas
clc
add
mov
sub
xor
test
dec
add
jmp
addb
adc
dec
dec
jge
add
test
push
and
enter
jp
sub
adc
mov
fdivs
xlat
adc
add
inc
lock
hlt
jecxz
test
test
sub
sub
pop
mov
outsb
or
jo
add
or
adc
incb
push
push
dec
ret
ficoml
push
mov
push
add
mov
inc
xchg
sub
adc
sbb
lea
aam
xchg
orl
xor
bound
xor
push
and
xor
stos
add
push
add
test
or
loopne
sbb
add
mov
adc
adc
mov
mov
dec
test
push
aaa
call
jbe
lods
call
cld
push
decl
sub
shlb
add
pusha
ret
imul
inc
add
pop
xchg
push
ret
jo
push
push
js
lcall
pushl
adc
jle
sbb
mov
pusha
mov
cs
mov
mov
jo
sbb
fstl
and
xor
mov
xchg
faddl
popa
call
popa
inc
pop
addl
mov
dec
ret
rorl
push
sbb
rcll
jae
lret
adc
sub
bound
ljmp
mov
adc
or
sbb
sbb
push
inc
xchg
adc
cld
and
cmp
jecxz
xor
lret
leave
sub
lods
inc
cli
xchg
loope
push
xor
mov
test
push
stos
lea
fmuls
dec
or
pushl
ljmp
sub
xor
add
fwait
mov
push
or
jle
rorb
data16
testb
roll
cld
and
data16
mov
shrl
xchg
sbb
add
or
adcb
lret
dec
jbe
push
cld
in
mov
rol
mov
sar
insb
dec
pop
add
dec
es
mov
dec
iret
filds
add
or
enter
xchg
inc
pop
outsb
fcoml
mov
cmp
add
push
and
jle
aaa
test
dec
pushf
push
xchg
dec
cwtl
roll
nop
fmulp
add
or
fdivr
mov
sub
or
jp
loop
rolb
dec
movb
fwait
add
fists
mov
or
iret
push
loop
or
mov
andb
and
jp
je
add
xchg
pusha
lcall
out
inc
pop
xchg
out
push
subb
test
push
test
lret
mov
mov
or
or
in
inc
outsb
rorl
pop
lret
into
cli
xor
sub
fldl
lret
cmp
and
outsb
cs
dec
lea
adcb
fwait
test
ds
add
lahf
dec
movsl
stos
or
addb
imul
sbb
add
lcall
shlb
adc
cmpsl
loop
cmpsb
cmp
dec
imul
add
mov
ja
add
mov
subl
add
shlb
xor
fisubrl
aad
hlt
in
out
xor
sbb
subl
jmp
mov
inc
adc
add
fwait
inc
and
mov
outsb
mov
sub
scas
xchg
sbb
add
sub
jb
sbb
sub
dec
mov
cmp
leave
cmc
test
lock
push
enter
sbbb
test
xor
cmp
adc
jbe
notb
mov
sub
cmp
jp
mov
cmp
lcall
test
mov
ret
xor
jns
and
stos
filds
rolb
addb
add
cmc
sarl
fwait
push
mov
out
lret
push
hlt
fists
rorl
inc
and
sbb
inc
cmp
fcomip
add
test
or
sub
mov
ljmp
inc
mov
add
lea
cmp
movb
or
sbb
es
or
ja
outsb
sub
popa
jl
jge
push
xchg
mov
rorb
gs
and
add
adc
movsl
push
into
faddl
mov
adc
movsb
rorb
lcall
orb
or
fs
cmc
push
xchg
cmc
xchg
or
orl
inc
jecxz
int3
dec
mov
xchg
inc
push
adc
push
add
pop
inc
pop
xor
dec
add
andb
es
add
add
std
add
jmp
pusha
aaa
sub
int3
xchg
inc
add
inc
fs
inc
mov
cltd
inc
dec
js
insl
inc
es
mov
rorb
mov
in
add
enter
mov
inc
mov
sub
gs
int3
aad
adc
pop
and
xlat
aaa
stos
rolb
sub
roll
mov
add
adc
xor
push
or
inc
divl
xor
mov
sbb
andb
mov
loopne
sbb
outsb
add
adc
ljmp
ja
pop
cmp
mov
cmpsb
popf
adc
aas
mov
mov
lods
loopne
add
adc
sub
sub
into
mov
sub
cld
mov
scas
mov
add
icebp
test
mov
sub
cld
add
lock
popf
jecxz
aad
mov
int
push
out
pop
insb
mov
cmp
notb
xchg
mov
mov
cmc
sub
and
mov
adc
xor
inc
cs
ret
add
xchg
adc
scas
inc
dec
add
push
pop
loope
test
adc
jae
aam
sbb
or
xchg
mov
xchg
xchg
add
pop
add
inc
inc
inc
lret
cmp
rolb
loop
mov
xchg
lods
or
push
ret
mov
outsb
and
loopne
dec
sbb
sbb
lret
incb
xchg
and
enter
addl
orb
rorl
sbb
out
pusha
push
mov
lcall
add
sahf
cwtl
and
dec
loopne
xchg
cs
incb
sti
loopne
add
cmp
sub
test
shll
mov
cmpsb
loopne
bound
shlb
arpl
rolb
stc
loopne
decb
dec
and
cs
push
push
ret
inc
xor
mov
dec
and
ret
mov
dec
adc
cmp
xor
lea
push
fstps
xor
ret
add
iret
lods
add
mov
dec
mov
xchg
mov
lret
push
testb
ds
es
pop
xchg
or
in
cmp
or
lahf
add
inc
loopne
inc
and
pop
ljmp
jmp
mov
push
mov
and
divb
movsl
clc
adc
lret
test
and
xor
xor
or
sub
cmpsb
and
pusha
movhps
loope
decl
sub
sub
pop
mov
mov
dec
lcall
es
mov
push
mov
inc
je
lcall
and
cmp
fs
mov
pop
sti
adc
adc
loopne
dec
sti
es
mov
fdivr
mov
add
or
sbb
fdivl
and
loopne
sub
push
cwtl
test
shll
sub
inc
mov
rclb
jb
add
mov
lods
inc
cmp
and
jge
outsb
js
and
je
inc
jnp
pop
xor
adc
xor
jl
fsubrl
adc
lods
loopne
mov
enter
repnz
push
addb
inc
in
push
sub
hlt
mov
ficoms
movsb
xor
sbb
cmpsb
push
or
insb
mov
aam
pop
lret
ds
sub
inc
lock
mov
test
mov
mov
ds
xchg
jecxz
lods
ja
xor
inc
mov
add
xor
mov
inc
ljmp
jae
mov
inc
xchg
add
mov
mov
xor
push
push
mov
dec
pusha
push
and
xor
rorl
mov
pop
dec
inc
inc
or
xor
jo
test
addr16
jb
cld
popa
xor
xlat
popf
xchg
mov
inc
test
jg
frstor
rolb
jmp
ljmp
in
add
xchg
dec
dec
adc
sub
imul
jo
rcll
outsl
pop
subb
or
shrb
out
xchg
jl
pop
bound
nop
arpl
shlb
lods
mov
ret
jmp
inc
mov
leave
lock
adc
push
nop
cmp
jbe
xchg
rclb
jbe
cs
pop
les
mov
adc
jbe
adc
sbb
mov
or
cmpsb
adc
xor
int3
and
mov
push
shll
xchg
mov
pushf
leave
jno
hlt
fbld
and
cmp
test
mov
and
jb
sbb
inc
ret
adc
pop
popa
cld
lods
push
sbb
das
xchg
adc
or
inc
mov
and
mov
rorb
xor
mov
movsb
imul
pusha
add
outsl
enter
mov
aam
adc
idivl
dec
jb
iret
jo
adc
shrl
or
or
or
adc
inc
pusha
inc
mov
clc
push
push
ldmxcsr
pop
lea
dec
xchg
jle
aaa
or
pop
cmp
and
ljmp
loopne
clc
fildl
or
xor
add
mov
push
jecxz
arpl
js
push
pop
jmp
test
sarl
or
inc
icebp
or
jg
lcall
xor
pop
mov
mov
sbb
fiadds
das
es
inc
orb
sbb
mov
data16
pop
xchg
ss
loopne
sbb
push
jo
xor
outsl
fwait
lahf
sbb
cwtl
sbb
inc
call
dec
into
lock
mov
fwait
lea
sub
xor
iret
xor
ss
dec
mov
sub
std
pop
inc
dec
inc
mov
and
pop
rolb
adc
push
mov
inc
push
add
add
mov
jp
or
mov
insb
mov
add
rcll
lcall
rcr
fstp
and
or
xor
cmpsl
pop
flds
ljmp
dec
sbb
insb
adc
ret
dec
mov
das
inc
jb
in
sub
sub
push
lcall
or
dec
add
cltd
loopne
stos
and
mov
arpl
fidivrl
test
pop
leave
dec
pop
jb
xor
das
mov
xorb
mov
movsl
xchg
cmpsb
fistl
push
incb
std
data16
xor
xchg
test
jge
cli
mov
aaa
pop
jb
rol
dec
aaa
addb
sbb
or
pop
or
mov
jbe
adc
push
dec
subb
clc
stos
sbb
and
inc
mov
adc
add
jnp
insb
pop
mov
xor
aad
hlt
sub
add
cwtl
xor
mov
sub
fnstenv
mov
in
jecxz
adc
add
add
mov
bound
jecxz
lret
mov
rorl
movsl
mov
fimuls
push
mov
out
pop
aam
jmp
or
sarb
stos
push
jne
adc
mov
lock
test
push
cmp
jl
inc
dec
lods
adcb
addb
rcrl
inc
leave
adcb
inc
or
cltd
xor
dec
push
mov
and
call
mov
mov
add
mov
cmp
call
add
mov
and
inc
insl
or
inc
int3
outsb
and
sti
negl
cs
cs
insl
cmpsb
das
or
or
test
adc
pushl
add
les
adc
cmc
icebp
push
cmp
test
mov
dec
xchg
jno
inc
clc
dec
or
add
out
dec
mov
pop
mov
fsqrt
add
adc
mov
push
or
in
inc
stos
xor
dec
inc
roll
push
es
pop
loopne
or
add
cmp
fisubrs
xchg
rorb
dec
jnp
add
hlt
filds
jnp
xchg
add
cmp
in
mov
push
ret
or
cld
lcall
ret
mov
rolb
sbb
or
push
and
sub
xchg
subb
xchg
inc
add
in
sar
repnz
shll
loope
mov
inc
add
inc
adc
or
jo
stos
aaa
nop
cwtl
adc
add
add
jl
cmpsb
mov
in
add
nop
cmpsb
les
adc
xorl
and
cmpb
sti
sub
push
rclb
fldl
add
inc
ds
dec
aam
mov
dec
shrb
es
mov
mul
ja
mov
call
pop
jg
mov
add
clc
add
mov
clc
stos
add
fisttpll
ljmp
into
loopne
sub
add
sbbl
cmp
adc
pushf
inc
hlt
dec
mov
pushf
fnsave
cmp
xchg
sub
push
lds
addb
mov
jb
insb
int
loopne
add
xlat
decl
outsb
sub
pop
xorb
xor
push
adc
je
lods
xlat
add
add
cs
jno
decl
ja
push
cs
add
add
lods
jl
nop
outsb
or
sbb
jo,pn
lret
dec
pop
inc
add
int3
pop
jge
adc
add
test
mov
cmp
push
mov
aam
xchg
or
mov
or
or
jge
xor
test
mov
xchg
pop
and
inc
sub
addb
inc
idivb
add
adcb
xorb
dec
test
mov
xchg
inc
mov
repnz
push
mov
aaa
subl
or
and
and
inc
loope
add
adc
sbb
test
mov
stos
push
cwtl
push
addb
imul
xorl
sbb
jl
push
rolb
jb
or
jge
xchg
mov
push
add
push
ja
push
push
mov
scas
shl
jns
or
shll
ss
and
push
fstpl
pusha
xor
rorb
jle
addb
out
xchg
push
aas
rclb
shrb
and
loopne
push
push
rcrl
mov
loop
jno
jne
mov
mov
mov
xor
iret
sub
test
mov
cmp
mov
test
push
or
nop
lahf
ret
and
sbb
lcall
push
popa
xor
jne
sbb
mov
enter
sub
or
insl
mov
loopne
xchg
lcall
mov
jne
pop
inc
fwait
cwtl
add
jl
decl
movsb
mov
out
adc
inc
rol
add
inc
mov
or
push
nop
rolb
and
push
lea
push
in
cmpsb
insl
data16
icebp
es
push
sub
or
add
sub
sub
xchg
mov
add
ja
adc
adc
adcb
shlb
aaa
or
mov
or
or
push
ret
jmp
repnz
enter
pop
ljmp
jno
adcb
xchg
mov
call
sub
inc
jp
inc
sbb
add
jo
xchg
stos
clc
cmp
es
into
fiadds
mov
xor
inc
sub
sbb
stos
push
push
adc
cs
inc
inc
leave
adc
or
orb
into
cmp
xchg
or
mov
pop
mov
jmp
shlb
inc
jl
adc
loop
lods
or
mov
xchg
add
pop
mov
out
sub
imul
incl
rclb
ret
cs
insl
sbb
int
push
mov
sub
lcall
rolb
jns
add
les
dec
dec
std
incl
or
inc
add
loop
xchg
aam
repnz
inc
inc
push
cmc
mov
or
mov
and
and
or
or
push
xchg
cli
jbe
shlb
add
jo
sbb
fcompl
hlt
out
cmpsb
out
fisttpll
int
mov
and
or
push
cmp
inc
adc
and
ljmp
push
loope
pusha
inc
out
pop
dec
and
inc
sub
rolb
inc
lods
cmp
pusha
or
jmp
pextrw
or
sub
pavgb
mov
and
outsl
push
inc
adc
or
cmp
addr16
int
lcall
pop
add
inc
push
ficomps
adc
pop
nop
mov
shl
loopne
cmp
xchg
push
sub
add
inc
cmpxchg
adc
add
inc
rorb
adc
sbb
std
filds
lcall
ret
or
jecxz
mov
loopne
fdivrs
shlb
xchg
test
xor
dec
fwait
test
and
and
frstor
adc
sub
adc
scas
aam
or
add
inc
arpl
push
push
out
push
xchg
dec
or
rcrb
loop
mov
rorb
dec
sub
inc
ljmp
sub
sub
mov
subl
cmpl
loop
add
inc
xor
xchg
mov
mov
lods
or
pop
jo
stos
inc
sbb
repnz
sbb
xor
loope
mov
add
stos
mov
in
in
mov
cmp
sbb
cwtl
test
les
mov
add
dec
add
xchg
sub
adc
mov
jo
or
xor
inc
xchg
cmc
push
aas
shlb
mov
mov
cli
mov
int
and
mov
inc
mov
adc
add
pop
mov
add
icebp
xchg
cmp
add
mov
clc
add
add
fldenv
and
xor
rorl
xor
in
lcall
lret
cmp
fisubl
push
push
cs
mov
in
cmp
and
addr16
add
sbb
in
aaa
dec
cli
lahf
sub
xlat
and
rolb
sub
mov
push
mov
add
aaa
insb
movb
and
rclb
or
mov
sub
xor
add
xor
test
es
xor
cld
pop
es
jo
inc
and
mov
xchg
sbb
push
je
adcb
adc
xchg
push
dec
ficompl
sbb
add
inc
push
mov
lock
fldl
add
jbe
and
xchg
sahf
adc
push
mov
lret
incb
push
add
xchg
scas
push
dec
clc
je
test
ficompl
ss
and
mov
xor
mov
test
clc
add
mov
or
sbb
push
add
jg
add
mov
xchg
add
adc
mov
sbb
add
sbb
shll
or
enter
and
stos
inc
add
lods
jmp
stc
mov
pop
flds
jecxz
ljmp
push
sub
loopne
sub
inc
aam
sub
push
nop
or
fistpll
add
mov
add
bound
pop
andb
mov
lods
sbb
and
adc
scas
leave
sbbb
fbstp
cmpsb
add
push
add
aad
sub
mov
push
and
or
mov
lret
es
mov
add
dec
loopne
addl
jg
inc
les
add
dec
inc
dec
jo
f2xm1
mov
leave
or
cmp
add
jmp
adc
icebp
xchg
pusha
cmp
cmp
jmp
inc
loope
dec
fsubs
xchg
mov
es
shlb
sbb
sub
mov
mov
xchg
cli
adc
in
mov
mov
add
adc
call
lea
movsl
and
xchg
adc
push
cltd
test
clc
dec
lods
mov
add
mov
sub
lock
and
or
cld
jg
cmp
nop
add
mov
sub
sbb
dec
cmp
outsl
js
xchg
decl
pop
inc
mov
in
sbb
jmp
xabort
clc
mov
adc
aad
push
bound
mov
push
lods
test
mov
icebp
sub
add
andb
push
or
fs
adc
mov
cld
push
adc
cmpl
inc
nop
xchg
push
and
mov
mov
push
xor
sbb
fcoms
xor
xor
jo
rsm
mov
and
decb
mov
inc
jl
jnp
decb
icebp
sbb
loop
fisubl
sub
or
add
mov
or
sub
mov
outsb
pop
xchg
jnp
push
outsb
lods
dec
rclb
loop
inc
outsl
push
sub
sbb
mov
rolb
sub
out
or
inc
xchg
sarb
push
enter
pop
sub
out
jo
xorb
add
mov
and
clc
cmp
scas
jne
push
fwait
inc
test
mov
inc
outsl
jp
add
out
test
sub
test
aaa
push
jo
mov
adc
push
and
mov
add
fcmovne
fsubl
ljmp
add
and
and
jns
rclb
fbstp
push
out
xchg
jmp
rol
pop
cmp
jmp
and
and
testb
dec
cwtl
loopne
inc
aaa
or
mov
push
call
mov
dec
int
icebp
pop
incl
or
mov
sarb
lret
mov
das
call
xchg
mov
mov
push
sbb
sbb
sub
mov
std
mov
test
int
sub
pop
pop
mov
out
xor
ss
push
or
or
das
adc
ret
add
pop
pop
mov
cwtl
pop
shrb
testl
mov
std
cmp
dec
cwtl
or
aad
sahf
jo
mov
inc
add
scas
fstpl
jo
outsb
pop
into
sar
incl
aam
shl
add
xchg
sub
test
loope
lret
je
outsb
hlt
orb
out
test
adc
add
mov
sbb
adc
pop
sbb
cmpsb
andb
cmc
js
lcall
ds
adc
jb
sub
mov
xchg
push
in
mov
out
xor
adc
adc
inc
sbb
cld
nop
xchg
adcl
add
les
test
int3
rorl
mov
adc
add
mov
nop
clc
incl
ljmp
sub
pop
mov
jno
in
in
loope
popf
adc
cmc
add
push
sub
movsb
mov
data16
mov
insb
sub
mov
xlat
add
test
out
push
gs
dec
push
mov
loop
nop
aaa
inc
mov
dec
dec
icebp
and
mov
push
cmc
adc
dec
bound
pop
out
int
adc
outsb
loopne
jg
mov
inc
mov
inc
shr
inc
mov
add
add
lock
or
lods
insb
mov
xchg
es
mov
pop
dec
sbb
ret
mov
inc
mov
call
fnsave
fsubl
adc
stc
in
sar
mov
mov
test
nop
add
pop
addb
imul
or
adc
add
or
mov
lock
test
add
push
into
inc
pushf
addb
pop
xchg
dec
and
mov
mov
push
lods
mov
xor
inc
les
dec
cmc
inc
xor
xchg
icebp
add
mov
mov
ljmp
push
xchg
call
jmp
loopne
fdivl
out
add
adc
or
aam
es
fdivrs
push
test
xor
les
test
xchg
push
mov
or
pop
jo
pop
loop
loope
push
sbb
test
sub
movsl
jno
cld
in
test
xor
mov
adc
lods
jge
dec
or
add
test
incb
or
sti
dec
push
out
add
mov
lea
loope
cmp
mov
add
lret
hlt
inc
jbe
imul
dec
cmp
inc
adcl
cli
and
shll
sub
cltd
lea
xchg
pop
push
shll
js
in
and
jge
shrb
mov
add
and
loope
xchg
sub
sbb
int
mov
add
xchg
push
xor
sub
in
sub
add
sbb
push
xor
push
fidivl
gs
sbb
dec
adc
jne
movsb
sbb
adcb
inc
add
es
mov
stc
inc
pusha
lea
es
lods
add
jl
mov
or
stos
xsha1
cmpsb
dec
inc
add
loopne
push
or
add
xchg
addb
icebp
rcrb
xchg
mov
add
add
jns
pushf
test
aaa
or
mov
sub
push
xchg
pop
or
ds
cmpsb
pop
adc
fwait
cmp
sub
lret
testb
lods
xor
fldl
sub
xchg
lods
cmp
pop
je
xchg
sub
mov
mov
es
lret
in
sbb
xchg
and
lock
pusha
adc
arpl
outsb
es
in
aam
inc
movsb
xor
add
inc
add
call
inc
and
stos
inc
add
lods
inc
pusha
push
cld
fwait
add
mov
pop
mov
dec
xor
push
cmpb
rclb
add
push
dec
cs
sarb
mov
pusha
mov
int3
mov
loopne
cmp
and
or
lahf
movsb
subb
rorl
stos
je
es
loop
ret
mov
cs
or
xor
and
cwtl
negb
pop
rcr
mov
sub
sarb
xchg
out
shrl
adc
xor
mov
mov
data16
icebp
xorb
gs
test
ffree
add
push
imul
pop
test
jbe
sub
inc
fs
cmpsb
lcall
inc
stos
lock
into
inc
fsubrl
ljmp
inc
andb
and
add
xor
add
mov
outsb
cmpsb
dec
enter
sbb
dec
mov
add
jno
pop
js
fnsave
push
fwait
sub
push
add
add
sub
je
lods
adc
shlb
sub
pop
inc
or
jle
inc
sub
and
push
inc
roll
mov
inc
rcr
and
adc
xor
shrb
jmp
fiadds
pop
nop
out
xchg
shrl
xchg
add
or
decl
sub
jmp
jp
adc
fcomp
subb
loopne
add
gs
push
mov
add
mov
mov
loopne
sbb
or
mov
pop
dec
dec
pop
inc
loope
mov
popa
and
shrb
jg
loopne
test
jg
inc
adc
sub
stc
add
mov
lea
sub
adc
addr16
js
xor
inc
push
and
adc
pop
fdivrs
and
pusha
add
cmp
loopne
lret
mov
add
push
jbe
ss
adc
lcall
jle
loopne
adc
adc
lods
mov
adc
xor
jmp
insl
incl
add
int3
jecxz
icebp
leave
dec
or
cmc
push
stc
mov
jle
sub
sub
sbb
inc
pusha
and
sub
mov
das
pusha
insl
and
js
and
or
adcb
subb
xor
jl
inc
dec
jmp
in
pushf
arpl
or
and
mov
pusha
add
jmp
in
add
and
jp
dec
push
or
sar
xchg
loopne
fnstsw
add
add
not
and
lea
scas
cmp
fdivl
pop
fldl
andl
nop
jmp
orb
push
mov
in
fs
add
inc
add
aad
inc
mov
subb
subl
sub
mov
loop
loopne
jp
pusha
add
mov
xchg
mov
js
fimull
subl
sub
icebp
pusha
lds
in
or
out
add
jne
sahf
pusha
rorb
and
push
pop
aad
or
sbb
xchg
rcrb
mov
ljmp
call
or
mov
sbbb
ficoms
dec
push
fcmovnu
mov
mov
shll
cmp
sub
sbb
ret
shrb
popa
adc
xlat
push
push
push
dec
jg
js
add
sub
andl
out
shll
sbb
adc
jmp
subl
fsubp
dec
xor
xchg
rolb
sub
pop
in
jb
loop
jg
repz
push
xorb
ljmp
fistps
dec
lret
cmp
and
dec
leave
inc
loopne,pt
jmp
or
jbe
jae
mov
loopne
loope
adc
cmp
loopne
inc
loope
or
adc
pusha
xchg
or
cmc
and
mov
xchg
jp
pop
popa
out
add
and
add
inc
or
sub
xor
xor
mov
and
sbb
adc
mov
inc
dec
add
loopne
bound
fs
and
sbb
popa
test
jg
je
pop
orb
mov
popa
and
adc
imulb
ljmp
inc
adc
std
pop
mov
pop
es
add
into
inc
loopne
ds
sub
data16
rolb
dec
pop
sub
add
aaa
rcr
in
pusha
or
mov
es
sub
stos
lcall
xor
aam
add
inc
fcomps
sti
mov
pop
mov
push
mov
test
dec
into
adc
and
cs
stos
jecxz
pusha
ds
xor
jns
xchg
pusha
inc
clc
xor
shrb
xor
xor
add
add
jno
sub
mov
lret
add
rorb
adc
ret
push
and
ret
xchg
inc
inc
mov
push
shl
lods
rolb
add
inc
inc
sbb
inc
jle
stos
or
adc
sub
mov
stos
add
adc
sbb
bound
enter
rorb
inc
jecxz
movsb
mov
inc
xor
inc
pmaxsw
nop
dec
inc
dec
adc
inc
push
sub
test
add
xchg
or
jg
addl
jg
add
and
test
clc
outsl
jmp
jo
scas
xor
pop
pop
enter
mov
lock
aaa
sbb
add
adc
adc
and
sahf
xor
loopne
xor
pop
mov
or
xchg
addl
cmpsl
aam
jl
add
orb
pop
jg
lea
orb
rcrl
jp
nop
mov
mov
sbb
or
rcrb
pop
cwtl
mov
in
fwait
dec
mov
int
xchg
ret
rorl
adc
sub
ljmp
add
out
inc
push
and
std
dec
test
mov
aaa
sbb
rorb
or
or
adc
xchg
loopne
aad
pop
jmp
shll
pop
shrb
mov
cmp
fs
aad
sbb
inc
adc
cs
mov
add
inc
adc
pop
std
mov
sub
push
dec
cmp
test
sar
shll
cmpsb
stc
sub
or
call
in
or
sub
sti
nop
or
push
xor
mov
mov
repnz
mov
test
and
xchg
mov
cmpb
scas
int
nop
bound
rclb
jo
dec
inc
xchg
mov
sbbb
test
nop
sbb
adc
mov
push
adc
cmpsb
mov
jo
push
subl
sbb
push
sub
cmpxchg
dec
test
mov
jg
inc
aaa
lret
cmp
mov
movl
xchg
push
lock
add
jae
pusha
scas
sub
das
dec
dec
movsb
xchg
testl
add
dec
loope
mov
add
xor
shlb
adc
push
sbb
test
mov
xchg
dec
adc
dec
mov
jo
push
add
loop
and
dec
sub
lods
dec
mov
leave
lock
mov
mov
inc
add
adc
xchg
add
pop
mov
lcall
xchg
or
jecxz
push
cwtl
test
push
pop
clc
dec
mov
cmp
cwtl
cmp
gs
fisubrl
fsubp
or
push
mov
or
add
xchg
pop
cwtl
xor
add
test
mov
inc
mov
pop
sarb
lods
out
dec
mov
call
adc
stos
jb
loopne
sub
loope
test
or
mov
shlb
call
scas
add
push
cmp
or
adcb
and
add
mov
stos
fcmovu
push
repnz
or
cmp
movsb
push
in
stos
xor
mov
rcll
cmpsb
fildll
xor
movb
adc
sub
scas
mov
dec
sub
je
sub
popa
add
push
sub
push
xchg
fildll
adc
adc
rcrb
inc
insb
lret
mov
pusha
xchg
ds
mov
enter
in
cmp
push
ret
push
movsb
cli
nop
pop
jecxz
push
adc
jmp
push
pop
and
push
lcall
xor
jae
sbb
cmp
js
push
fdivl
xchg
sbb
arpl
loopne
in
outsl
cli
aaa
and
mov
pusha
mov
mov
out
in
out
mov
xchg
mov
adc
jo
pusha
add
shlb
push
data16
jp
aad
fwait
xchg
pushf
push
or
xchg
jo
mov
add
jo
decb
inc
push
sbb
or
rclb
add
xor
call
sbb
rorb
add
jmp
int
pop
or
adc
pop
push
sarl
add
in
call
sbb
or
push
rolb
nop
test
rcll
hlt
sarl
or
adc
sarb
dec
loopne
loopne
sub
cwtl
lea
add
xchg
cmp
test
scas
cmp
pop
inc
cwtl
leave
sbb
add
movsl
lock
push
pop
ss
les
ljmp
adc
and
insb
cmc
add
xchg
leave
dec
xchg
ja
loopne
push
div
loope
movsb
mov
loopne
in
enter
xchg
sahf
add
or
jns
scas
dec
xchg
dec
xlat
adc
fildll
mov
cli
or
repnz
mov
icebp
insb
jge
and
les
sub
nop
pop
mov
daa
and
jb
inc
insl
popa
xchg
or
cmp
ljmp
out
adc
out
sub
lods
or
fbld
xchg
int3
lock
jae
adc
mov
sub
pop
cmp
inc
adcb
jl
push
inc
xchg
mov
inc
xor
fisubrl
pop
icebp
add
or
lock
movsw
and
sub
inc
mov
pop
inc
lods
or
pop
and
repz
icebp
pushl
add
clc
and
test
or
xchg
mov
test
aad
and
cs
jb
cwtl
adc
adc
lcall
movsb
mov
adc
clc
add
bound
enter
sbb
jp
inc
jnp
add
sub
add
or
fwait
cli
sahf
push
enter
jge
dec
ret
hlt
mov
sub
insl
pop
push
insb
mov
sahf
and
mov
adc
add
shll
sbb
cmp
adc
add
jbe
xchg
mov
jnp
add
or
scas
lock
inc
fimuls
movsb
add
cs
hlt
xchg
rcl
addb
movsb
roll
sbb
xchg
add
sub
add
xchg
sub
mov
add
sbb
fwait
jb
xor
xorl
xchg
pop
cmp
dec
pop
fcomip
clc
orl
idivb
out
dec
inc
gs
andb
andb
and
sbb
dec
xorl
sub
jb
pop
ret
cli
or
test
scas
mov
rolb
cmp
xor
pop
enter
nop
inc
xor
inc
cmp
shrb
lock
add
adc
js
cs
outsl
es
xor
add
and
cmp
or
inc
das
rol
inc
iret
scas
xchg
pusha
popa
loop
xchg
lods
jo
test
scas
in
jg,pn
add
sbbb
testb
dec
dec
push
and
fcoms
jge
and
out
xor
lea
xchg
mov
clc
add
int3
rcrb
add
inc
pushf
and
push
enter
ss
sbb
rorb
cmc
add
xor
push
push
xor
inc
or
shlb
inc
add
incb
jp
adc
orb
orl
add
and
clc
xchg
sub
sub
cmp
add
les
rcl
push
add
adcb
xchg
shrl
ret
sarb
sbb
add
mov
and
jmp
fstpl
js
rcrb
pusha
ss
xchg
adc
fcoml
inc
int
or
data16
outsb
loope
pop
sbb
ja
jmp
imul
add
roll
cld
in
data16
jbe
rcrb
inc
and
lods
inc
push
dec
add
aam
pusha
lods
or
clc
out
pop
add
rolb
jne
je
ret
nop
or
adc
inc
pop
jb
into
out
jge
mov
orb
pushf
shll
jb
lods
cmp
mov
insb
jmp
push
orw
push
ss
inc
filds
lea
sub
mov
fimuls
mov
in
inc
or
add
xor
pop
or
mov
clc
loope
in
mov
mov
or
out
sbb
and
in
jmp
lahf
and
loopne
jg
out
push
popa
or
add
and
xlat
push
push
inc
pop
sub
mov
std
jno
push
imul
ljmp
mov
inc
jbe
sbb
mov
jg
lret
adc
push
mov
jno
aad
inc
gs
loopne
or
aad
mov
add
jae
adc
dec
imul
roll
scas
dec
dec
test
std
mov
and
inc
mov
ret
movl
and
addr16
mov
fs
add
jg
dec
xor
sbb
sub
loopne
lds
rcrb
cli
stos
mov
or
xor
lahf
outsb
xchg
out
dec
mov
adcb
pop
fstpt
loopne
add
ss
nop
rcll
mov
clc
jb
fs
and
push
pop
test
out
fwait
ret
pop
inc
mov
dec
adc
pop
lods
roll
jg
scas
rorb
push
inc
sub
push
pusha
or
ficoml
sub
sbb
insb
mov
push
popa
pop
enter
in
rcll
insl
inc
xchg
and
mov
popa
testb
xchg
dec
xchg
mov
jo
push
push
push
pop
call
lds
adc
jbe
shlb
add
call
sbb
cs
mov
inc
fs
and
mov
movsl
and
jge
add
and
scas
roll
rolb
adc
cmp
mov
ljmp
add
add
jmp
out
sub
inc
add
jge
pop
dec
fstpl
clc
or
std
shlb
mov
mov
lods
push
xchg
fsubl
mov
push
rol
cmp
inc
jbe
fs
push
nop
xchg
cmp
dec
pop
or
cmp
cwtl
lods
adcb
adc
jecxz
enter
and
add
cmp
je
add
jle
mov
push
je
inc
mov
push
cmp
scas
shrb
ret
inc
pop
int3
xchg
arpl
into
lods
adc
push
addb
dec
add
xchg
push
call
xor
nop
push
fsubl
adc
dec
add
adc
sbb
inc
sbb
mov
movsl
inc
stc
jge
cmp
add
icebp
add
and
les
or
mov
out
mov
inc
push
push
scas
mov
jecxz
or
fs
cmp
mov
mov
rolb
and
mov
add
in
sub
and
inc
xor
popa
aam
or
add
sub
roll
aaa
pop
loop
pusha
das
je
fists
je
mov
dec
cmp
les
jb
ljmp
sub
mov
test
loope
bnd
mov
push
jae
dec
dec
push
push
xor
shlb
xor
inc
sub
inc
push
adc
call
sbb
push
les
sar
push
push
xchg
nop
push
rclb
inc
adc
and
addl
je
sbb
mov
ret
inc
jb
lods
push
jge
mov
sbb
add
in
xor
xor
scas
ret
inc
adc
xchg
ss
xor
lcall
ljmp
in
sub
notb
push
lods
frstor
add
std
ds
cmp
mov
fimull
or
lcall
andb
lock
sub
repnz
add
pop
jl
mov
mov
rcrb
mov
sbb
incl
lock
orb
int
fsubr
and
pop
lret
out
and
add
push
dec
push
xor
gs
dec
inc
sarl
push
or
inc
aad
mov
test
testb
push
sbb
nop
or
push
loopne
cmc
xchg
xchg
adc
in
sub
cwtl
mov
add
add
pop
imul
orl
rcl
inc
subl
je
pop
lods
jg
int
adc
es
lods
gs
mov
mov
inc
dec
jb
dec
cwtl
clc
or
add
add
clc
jg
sub
lret
aas
adc
sub
fidivl
cmc
adc
sarb
lock
lcall
sub
and
mov
sbb
lcall
cli
in
ljmp
xchg
adc
lods
sub
repz
enter
adc
test
or
clc
incl
test
pop
add
adc
mov
inc
or
lods
mov
dec
pop
rclb
andnps
loope
xchg
nop
pop
and
sbb
lods
or
or
push
jo
stos
gs
inc
jo
popa
cmpsb
push
xchg
add
add
test
xchg
out
in
movsl
and
sar
or
mov
push
sub
adc
repnz
pop
nop
adc
pop
andb
xor
push
mov
xchg
push
test
add
out
mov
inc
decl
subb
jge
shrl
mov
sbb
dec
dec
sti
push
add
decb
shll
ret
out
or
add
jo
mov
cmp
loopne
xchg
loopne
pop
loop,pn
cli
sahf
or
data16
sub
mov
mov
dec
cld
aaa
xchg
push
pusha
or
pop
test
add
xor
inc
or
push
xor
mov
xchg
shrl
mov
xor
mov
adc
adc
push
or
lock
mov
or
mov
jo
add
add
cmp
inc
cs
jp
or
les
or
mov
mov
push
mov
adc
cmc
adc
loope
pop
push
push
pop
shlb
les
call
adc
shrl
cld
mov
push
or
jae
sbb
dec
jbe
jg
push
lds
lock
inc
xor
sbb
sub
mov
mov
dec
into
xchg
test
cmp
loopne
mov
rorb
in
xchg
add
sbb
push
hlt
add
adcl
test
xor
aad
idiv
mov
out
jo
mov
mov
call
loopne
mov
xor
push
xor
rolb
jecxz
add
push
adcb
xchg
sahf
and
add
cld
ret
add
sub
and
adc
lock
clc
fwait
andb
test
dec
clc
mov
cmp
stc
push
mov
jne
and
and
add
xchg
call
xchg
mov
lock
push
pop
and
pop
pop
or
inc
rorb
push
clc
pop
test
lods
clc
ss
lods
add
pop
adc
xor
inc
sub
add
rolb
and
shrb
test
inc
or
or
push
rcrb
add
outsb
loopne
lods
jle
shrb
inc
xchg
in
movb
test
push
roll
pop
or
add
jbe
xchg
jg
jo
test
xchg
mov
adc
pop
scas
xor
sub
mov
popa
pop
icebp
jg
mulb
mov
xor
loopne
lods
jecxz
jno
rcrb
and
mov
fsubl
out
stc
inc
stc
loop
ljmp
into
lock
mov
in
or
pop
lock
add
popf
rorl
and
jg
cmp
lock
in
and
loop
jae
pop
nop
mov
push
pusha
loope
in
dec
loopne
add
jbe
mov
or
loopne
aad
in
out
xorb
jb
dec
aad
sbb
mov
sub
fisubrl
xor
call
fcoml
add
xchg
lods
cmc
aam
jno
jmp
push
std
sub
cmc
xchg
push
fcoms
es
cmpsb
loop
mov
clc
add
loop,pn
sub
adc
cld
addb
push
adc
lock
sbb
pop
push
sbb
jle
dec
aaa
adc
loop
sub
xchg
aad
pop
gs
and
mov
loopne
cmpsl
or
add
and
pop
loope
mov
hlt
nop
sub
jne
xchg
mov
xor
push
sbb
push
out
xorb
xchg
rcrl
test
push
pop
add
xor
add
dec
out
lods
mov
mov
out
js
rolb
inc
xchg
aad
ret
dec
jl
push
cld
ljmp
mov
adc
add
xor
add
pop
add
cmp
inc
notb
and
movb
call
sbbl
and
pop
int
in
sahf
loopne
cmp
or
mov
addl
fiaddl
dec
lret
inc
inc
andl
incl
or
push
push
jo
inc
outsb
test
push
scas
pop
and
pushf
add
shlb
test
ret
cmp
dec
ret
mov
push
std
sub
pop
xor
daa
mov
xor
adc
push
stc
mov
mov
test
mov
jo
call
and
jo
dec
aad
movsl
cmpsb
add
lods
imul
adc
lock
test
and
pushf
cmp
or
test
add
test
js
subb
mov
das
cli
loopne
mov
std
in
mov
cmp
addb
mov
mov
lods
sub
out
pop
sbb
mov
and
pop
pop
add
fists
add
add
xchg
xchg
inc
sbb
orb
and
mov
sub
mov
inc
lret
scas
out
add
inc
cmp
add
push
xchg
shrb
adc
testb
cmc
adc
aad
scas
mov
mov
inc
jae
inc
dec
push
lret
cmpl
pop
dec
fiadds
mov
lods
push
pop
mov
adc
loope
add
sbb
test
jp
sub
leave
dec
ret
or
pop
adcb
mov
push
and
xchg
dec
add
sub
lret
xchg
idiv
push
mov
sbbb
dec
xor
shlb
ret
addb
push
sbb
xor
inc
push
icebp
cs
neg
inc
and
test
pop
cld
je
mov
add
sub
pop
mov
ret
lret
shr
mov
jb
movl
or
and
mov
push
aas
dec
scas
add
or
outsb
test
or
stc
push
xor
sbb
outsl
and
leave
filds
rorl
sarb
jge
push
add
mov
sub
xor
fs
es
ljmp
push
adc
fildl
add
mov
add
addb
dec
andb
es
add
daa
jp
mov
push
in
and
ljmp
inc
stos
dec
mov
mov
scas
shlb
mov
hlt
pop
into
dec
js
cmpsb
fidivs
cmpsb
inc
inc
sub
negb
sub
pop
insb
sbb
insb
adc
xor
lods
das
push
aas
push
cld
scas
jle
sub
call
out
rolb
shlb
jg
ficompl
adc
mov
pop
testb
std
inc
or
dec
add
xchg
add
push
mov
and
mov
xchg
inc
sti
outsl
pop
xchg
out
cmp
inc
adc
in
adc
add
js
das
pop
or
add
mov
pop
mov
pop
mov
dec
dec
jbe
dec
dec
and
push
xor
andb
pop
and
shlb
rclb
pop
lock
xchg
call
cmpl
or
movb
inc
outsb
loopne
call
inc
inc
fs
inc
pop
jo
in
movsb
inc
scas
andb
les
add
inc
mov
shlb
je
inc
add
add
mov
les
aam
and
mov
aaa
mov
pusha
add
adc
fcos
out
nop
addb
lods
loopne
dec
ret
pop
loop
xchg
add
cmp
add
inc
jp
loope
test
and
add
jb
or
fistps
imul
jne
outsb
sub
es
mov
dec
adc
sbb
loopne
mov
cmp
sub
add
dec
dec
mov
sbb
inc
sti
cmp
shrb
and
pusha
sub
xchg
stos
cmp
out
dec
mov
fisttps
jecxz
int3
and
mull
loope
cmpl
jbe
push
adc
fisubl
insl
cwtl
adc
fbstp
inc
cmp
cwtl
xchg
mov
inc
and
cmpsb
hlt
mov
and
xchg
mov
jl
orl
loop
movb
push
inc
and
push
aad
scas
pop
cmp
xlat
sub
lock
std
pop
jne
cmp
lcall
cmc
mov
and
mov
test
and
mov
add
mov
or
add
fnsave
push
mov
dec
movsb
push
test
clc
outsl
movsb
fwait
rorb
ret
sbb
push
push
loopne
add
dec
add
inc
lock
roll
stos
mov
andb
inc
mov
add
popa
push
inc
sub
inc
rcrl
outsb
push
add
pop
add
inc
cltd
or
xor
add
insb
dec
add
leave
pusha
xor
roll
dec
cmp
loopne
ljmp
jp
or
xor
lahf
lea
xchg
dec
rorb
sbb
mov
or
or
movsb
movsb
scas
sub
xchg
and
cld
scas
mov
lret
roll
mov
inc
xor
adc
in
adc
and
add
in
mov
sarb
outsb
mov
lods
cltd
mov
jmp
or
and
mov
push
sbb
push
les
dec
push
cli
ret
cmovnp
inc
mov
std
jle
cmp
jp
repz
cmp
cmp
push
idivb
lock
push
add
jne
lea
lock
xchg
adc
fcoml
add
xor
movsb
in
cs
pop
inc
cmp
sbb
inc
cli
push
fs
shr
cld
sub
push
js
push
loopne
clc
add
enter
cs
add
adc
mov
adcl
hlt
and
or
mov
add
orb
aaa
sahf
jle
xchg
sub
sbb
dec
pop
or
xchg
add
lret
fnstenv
and
dec
mov
repnz
xor
icebp
ljmp
sbb
data16
clc
rolb
mov
xchg
sbb
push
insl
or
push
or
sbb
xchg
push
mov
xor
out
or
sub
mov
push
das
cs
add
and
mov
lock
sub
dec
mov
or
adcl
ret
mov
or
shrb
sub
fisubrs
push
imul
es
rcll
sbb
adc
push
test
jo
pushl
pop
dec
adcl
adc
or
xchg
loopne
push
cld
jo
jmp
jo
push
xchg
xlat
or
arpl
sub
inc
clc
inc
push
add
push
cmp
xchg
fcomp
icebp
or
pop
inc
fmuls
add
mov
subb
cmp
pop
data16
or
and
int3
rolb
faddl
jg
sub
push
and
jo
xor
outsl
mov
das
imul
addr16
or
fwait
mov
bound
add
push
inc
mov
in
jecxz
xchg
nop
pop
test
ret
xor
stos
ds
cli
and
sub
inc
lock
xor
mov
or
sbb
jo
rcl
inc
xchg
mov
mov
imulb
ret
mov
push
dec
loopne
out
add
cmp
add
xor
and
xor
adc
lock
adc
adc
and
adc
add
mov
cmp
adcb
jl
add
scas
loopne
test
enter
adc
inc
inc
insl
xchg
dec
nop
sub
cmp
sub
jg
icebp
adcb
xorl
and
add
sub
lods
loopne
mov
push
in
add
push
das
clc
pop
xor
sub
xor
cmp
or
dec
xchg
icebp
dec
add
addl
add
std
shrl
int3
xor
sub
orb
sub
and
inc
sub
adc
loop
or
xor
lcall
imul
test
stos
cld
shrb
add
cwtl
or
push
inc
xchg
fsub
mov
mov
push
and
and
dec
inc
cmp
out
sahf
cmp
sbb
and
lods
inc
xor
rorb
inc
xor
xchg
loope
les
aam
xchg
loope
into
jnp
nop
outsb
adc
pop
icebp
sub
adc
cld
mov
cmp
fs
and
jno
push
add
cli
mov
jmp
ss
xchg
adc
mov
adc
loopne
inc
les
imul
xchg
lods
push
test
aam
pop
nop
jae
je
scas
aad
mov
push
nop
or
or
push
mov
and
rclb
lret
negb
or
adc
and
les
xchg
dec
adc
fcoms
int
sub
fsubrl
arpl
imul
add
idivb
mov
cmp
add
sub
lcall
pop
adc
push
leave
adc
mov
sub
or
arpl
cmp
sub
scas
mov
pop
xchg
shlb
adc
adc
cld
ret
or
hlt
and
adc
jg
add
sub
xchg
decl
adc
scas
xchg
add
inc
add
pop
pushl
sbb
mov
or
jbe
inc
push
cld
fldt
je
je
add
icebp
es
mov
movsb
xchg
add
add
mov
inc
sub
icebp
pop
or
dec
ret
sub
popf
fidivs
add
inc
sbb
push
and
mov
inc
out
sub
fisubs
out
push
xchg
xchg
jp
pushl
aad
and
loopne
mov
test
cld
adcl
or
dec
adc
ret
pop
nop
sbb
in
shlb
add
inc
ret
adc
xchg
orb
sbb
loope
shlb
and
sub
mov
push
adc
popa
xchg
clc
mov
mov
cmp
movsl
sub
xor
mov
inc
dec
cmovle
dec
jp
dec
or
xchg
push
and
test
adc
inc
and
fdivrs
nop
ljmp
outsl
jb
xchg
inc
aas
es
cmp
stos
and
fbld
push
roll
push
test
fcmovb
out
outsl
outsb
adc
stc
mov
xor
pop
je
inc
add
inc
cmp
loopne
push
mov
inc
jno
fs
add
mov
addl
push
lcall
movsl
adc
dec
leave
inc
xchg
add
push
adc
jb
add
or
lcall
cmp
xchg
rcrl
push
insb
mov
xlat
testb
xor
lret
pop
and
and
xor
push
adc
popa
mov
rcr
pop
xchg
ss
icebp
lret
and
jo
inc
adc
cmpb
sbb
mov
add
pusha
icebp
add
aad
pusha
push
je
int3
cmp
ss
popa
add
loopne
inc
call
rolb
lock
mov
incl
cld
testb
andb
add
jge
sub
lcall
lods
aad
aaa
add
fcomi
aaa
add
xor
aas
xchg
push
mov
sub
or
push
cld
mov
jmp
jmp
inc
cmpsb
out
sbb
arpl
out
add
cli
or
mov
mov
inc
stos
test
inc
clc
lods
dec
adc
cmc
or
int
lahf
add
int3
enter
dec
adc
jge
js
ss
push
cmp
dec
xchg
gs
test
loopne
mov
add
adcb
jg
loope
add
mov
aam
adc
dec
mov
int3
aam
add
and
sbb
adc
sbb
adc
add
push
xor
dec
fs
popf
adc
andl
shrl
sub
xchg
mov
cwtl
int
leave
fmull
rol
sub
mov
pop
add
js
les
dec
fisttpl
dec
rol
orl
inc
cmp
pop
add
and
sub
xor
scas
cmp
pop
testb
pop
mov
das
rcrb
rol
and
ret
add
icebp
cmc
jmp
pop
aaa
or
and
bound
adc
roll
bound
dec
ljmp
cmp
lock
subb
adc
inc
sub
and
xchg
mov
dec
sub
pop
sarb
or
push
add
push
and
add
cmp
cld
sbbb
nop
mov
testl
repnz
cmp
pushf
adc
add
or
rcrb
add
xchg
test
add
mov
outsb
or
push
mov
cmp
or
push
add
mov
or
dec
mov
xor
add
dec
and
sarl
roll
add
daa
movl
iret
setle
sub
add
and
test
and
and
iret
push
cmpb
orl
dec
loopne
mov
icebp
xchg
mov
cmp
repnz
lds
scas
mov
lret
mov
mov
rclb
shrb
sahf
mov
les
lock
mov
dec
sub
fildl
leave
sbb
push
jp
repnz
rcl
inc
scas
lods
rorl
push
jmp
bound
roll
mov
mov
enter
jg
dec
xor
test
das
pusha
mov
sahf
int3
shlb
push
std
out
out
cmp
cmp
cmp
mov
insb
inc
dec
fmuls
or
fdiv
push
xchg
sub
xchg
cli
xor
and
mov
or
and
inc
or
lret
lret
inc
pop
imul
aas
incb
inc
pop
gs
shll
push
xchg
add
mov
sbb
or
add
outsb
sbb
adc
pop
sub
je
mov
lods
dec
ret
adc
aam
iret
ss
dec
cmp
pusha
rorl
insl
pop
fisubrl
lret
aam
push
test
mov
mov
add
pop
push
movsb
mov
add
xor
adc
push
fsubrs
push
and
cwtl
pusha
sbb
add
outsb
filds
add
add
rorb
add
sbb
sub
xor
sahf
add
add
mov
inc
int3
xchg
sub
inc
wbinvd
or
adc
insb
inc
fs
add
add
addb
int
xchg
inc
inc
les
push
xchg
push
or
add
sub
loope
pushf
mov
incb
inc
add
cmp
mov
jmp
push
or
or
inc
arpl
or
fcomps
dec
push
or
dec
inc
and
and
loope
out
es
pusha
or
and
dec
mov
pushf
add
sub
das
hlt
lcall
nop
in
ljmp
add
loopne
add
pusha
das
sbb
add
mov
adc
xchg
scas
int3
je
fwait
cmp
loope
mov
movsl
and
dec
jmp
cltd
cld
sub
or
sub
test
rcr
sub
dec
rorb
sub
dec
or
lock
mov
pop
fadd
mov
mov
lret
shlb
and
mov
icebp
jmp
int
mov
sub
or
jge
inc
push
mov
inc
pusha
xor
fiadds
sub
movsb
inc
cmp
incl
sbbb
shlb
dec
xchg
test
cmp
push
push
adc
sbb
adc
addb
adc
inc
jo
mov
lret
movsb
add
inc
aas
mov
pop
and
aad
push
stos
push
shl
xchg
pusha
dec
inc
jo
adc
aam
decl
and
xor
dec
or
dec
or
mov
add
sbb
xchg
and
cmp
adc
aam
test
movsb
std
add
fs
ljmp
add
or
and
cld
sub
sbb
sbb
mov
pushw
add
mov
and
pop
rcll
cmpb
lret
clc
imul
enter
pusha
add
mov
adc
outsl
and
push
negl
push
stos
les
jbe
mov
rcrb
out
cmp
add
rorb
xchg
jp,pn
and
adc
jecxz
xchg
sub
or
les
insb
add
jnp
fiadds
pop
or
add
clc
push
pop
inc
aad
and
and
shll
dec
mov
xor
inc
mov
and
jmp
xchg
ficomps
jp
nop
loopne
ljmp
and
and
lret
xchg
orb
sbb
pop
push
enter
movsl
jnp
pusha
mov
mov
sub
sbb
sbb
pop
int3
scas
cmp
sbb
sbb
sarb
iret
pop
test
pop
sbb
lret
movl
nop
add
sarb
and
leave
sub
push
xchg
cmp
xchg
add
mov
jmp
xor
mov
or
in
nop
cs
push
mov
cmpsb
jg
pop
outsb
sbb
rolb
mov
sub
cli
mov
inc
xor
das
adc
mov
hlt
jmp
mov
mov
mov
or
addl
add
xchg
or
incl
jne
xchg
xor
lock
lock
add
or
in
mov
roll
add
add
xor
arpl
mov
push
js
dec
pushl
push
inc
mov
xorb
lock
dec
sub
sarb
jb
sub
push
sub
add
add
pop
stos
nop
xor
xchg
push
out
cli
aaa
lds
stc
cs
mov
ljmp
icebp
adc
adc
sbb
loopne
sub
adc
mov
add
xchg
adc
and
adc
nop
xor
test
mov
push
lcall
in
call
scas
cmpsb
lock
add
cmp
leave
xlat
int
outsl
jg
decl
lods
jae
aaa
lods
jnp
das
adc
ja
int3
xchg
inc
nop
daa
sti
fwait
es
fldt
xor
nop
inc
insl
fiaddl
mov
nop
add
cmc
insl
xchg
cmp
fstpt
subl
sti
xchg
int
and
xor
jecxz
add
cmpsb
mov
mov
xchg
data16
lret
lods
inc
out
fdivrp
sbb
xor
jbe
add
fs
add
push
mov
fnstsw
gs
adc
cmp
dec
ds
add
outsl
outsl
push
xchg
add
xor
sub
cmp
add
add
dec
or
adc
add
mov
dec
mov
notb
add
lahf
cwtl
add
xlat
lods
pushl
sbb
lock
pop
aaa
mov
jg
jo
ja
mov
add
les
adc
aaa
call
out
adc
add
mov
mov
in
cli
xchg
popa
ret
lcall
jl
cmp
mov
or
or
push
adc
pop
lock
push
add
add
nop
adc
or
mov
mov
add
out
dec
mov
mov
decl
call
bound
lea
fldl
inc
out
test
in
xor
push
dec
add
dec
mov
add
or
shll
add
dec
xchg
test
mov
mov
jle
mov
scas
inc
addr16
adc
jns
xor
sti
lea
fldcw
movsb
int3
test
inc
xor
incl
fdivl
jl
adc
fs
jle
add
cltd
or
dec
pop
sbbb
nop
push
or
lret
lcall
cmp
mov
cmp
rorb
pop
imul
adc
jo
or
lcall
cmp
cmc
sbb
add
jg
dec
pop
je
cmp
adc
add
pop
mov
lds
leave
jno
pop
lock
popf
add
mov
mov
pop
outsb
out
dec
sbb
loopne
std
in
in
dec
es
sub
mov
outsl
mov
mov
adc
xchg
fdivr
ljmp
pop
int
loopne
test
flds
add
xor
inc
cmp
mov
jl
cmpsb
pushl
sub
test
imul
mov
mov
popl
push
xorl
outsb
xor
inc
mov
dec
cmp
in
incl
insb
cwtl
mov
inc
inc
les
fst
bound
cli
and
and
or
popa
adc
sub
cli
mov
xor
or
add
movsl
lock
lcall
sub
push
mov
jp
pusha
push
dec
or
sub
sub
sbb
mov
lock
sub
decb
sbb
push
mov
pop
icebp
outsb
stc
add
cltd
mov
xchg
mov
jg
push
in
cmpb
add
ret
mov
mov
inc
dec
xor
push
movsl
add
rcrl
sbb
push
shll
cmp
jmp
sub
cmp
push
gs
dec
andb
and
pusha
sbb
mov
test
or
pushl
ds
jno
sub
sti
jns
push
outsb
adc
scas
push
cld
xor
mov
insl
cmp
outsl
js
imul
push
sub
inc
mov
arpl
std
adc
add
je
sub
inc
adc
add
in
mov
inc
outsl
jg
xchg
jno
sbbl
jo
mov
popa
sbb
sbb
fistpll
popa
cwtl
xor
mov
mov
cmp
push
sbb
dec
mov
hlt
das
jbe
jle
adc
jg
in
ljmp
imul
mov
add
xchg
adc
sbb
mov
scas
es
cmpl
loopne
gs
cmp
pop
mov
cmp
cmpb
mov
outsb
shll
xor
xchg
add
xchg
sbb
or
divb
outsb
mov
rol
push
stos
dec
add
and
cmp
mov
hlt
push
fwait
mov
push
pusha
sub
and
int3
lock
ja
pushl
mov
xor
test
and
cmp
ljmp
sub
cltd
bound
lods
enter
mov
jnp
cmp
push
std
fildl
or
push
add
mov
addr16
dec
dec
mov
mov
aam
xchg
cmp
pop
jno
mov
push
inc
jg
cmp
test
xor
sbb
sub
jg
and
add
aaa
imul
sbb
add
stc
stos
imul
pop
decl
mov
xchg
arpl
or
mov
ret
bound
pusha
lods
aas
pop
mov
call
pusha
dec
dec
jbe
mov
mov
jmp
xor
ss
subl
pop
sub
dec
cmp
push
lock
and
or
scas
shl
dec
or
xchg
inc
or
mov
dec
add
shlb
sbb
and
xchg
test
push
test
inc
pop
add
sti
cmp
add
push
sti
cmpsl
mov
sub
nop
inc
dec
lock
push
cwtl
testb
sub
sub
shlb
addl
addb
xorb
icebp
add
jb
jb
nop
in
outsl
sub
pop
mov
mov
pop
jb
and
add
inc
push
negb
dec
and
add
addl
dec
cmp
mov
jb
jae
inc
add
xor
xchg
hlt
add
icebp
add
adc
cmp
loopne
mov
dec
ret
stos
push
shrd
pop
sub
stos
add
add
je
ret
add
dec
adc
mov
cmp
dec
sbb
mov
xlat
andb
push
jo
adc
jge
inc
sub
jp
push
mov
mov
or
sahf
pop
popa
rcr
je
xchg
push
cmp
inc
cmp
lock
add
ret
xor
jecxz
adc
cli
add
mov
cmp
add
inc
dec
mov
lods
je
call
das
add
inc
ret
inc
adc
jo
fidivl
add
es
pop
xchg
fcmovbe
and
add
test
or
and
xor
loopne
jge
inc
inc
std
incl
dec
inc
subb
pop
into
clc
das
subb
addb
daa
xor
adc
inc
and
cmp
test
push
fildl
sub
je
sarb
add
sbb
push
add
out
je
push
adc
jp
clc
insb
std
cmp
sbb
mov
jbe
add
push
imul
mov
or
and
add
mov
add
xor
fmuls
orb
mov
roll
mov
or
xor
adcb
or
jp
mov
push
cmp
divb
dec
addl
loopne
inc
mov
inc
lea
mov
cli
add
fbld
sub
inc
add
shll
inc
sbb
jl
hlt
fcomps
inc
and
xchg
sub
rcll
add
mov
rcrl
add
xchg
lock
xchg
lock
add
mov
xchg
sub
lock
rorb
cmp
push
test
pop
cmp
xchg
addl
add
fisubrs
cmp
imul
or
sbb
or
decl
sub
lods
rolb
movsb
inc
cli
inc
sub
push
test
rcr
movsl
rolb
rcrb
sub
lock
sbb
or
incb
jge
shrb
push
pop
jbe
incl
add
adc
or
or
adc
jp
mov
cmpb
mov
and
inc
mov
insb
ret
enter
push
sar
int
mov
shl
fwait
inc
sbb
rorl
sbb
inc
sub
nop
fcmovbe
adc
bound
pop
fists
add
mov
mov
shlb
inc
jle
mov
into
cmp
push
ds
stos
ret
jb
loope
xchg
add
shl
mov
cs
and
dec
cs
jb
test
cs
sbbb
mov
leave
xor
mov
mov
pushf
decl
ret
xor
cmp
mov
lret
cmp
loopne
add
mov
test
shll
aaa
mov
mov
divb
cs
inc
fldl
mov
nop
or
adc
leave
xor
rcrl
cmc
adc
or
ret
mov
test
jb
push
scas
cmp
sub
mov
mov
add
lds
push
xchg
shlb
aas
and
fistpll
or
ret
or
aad
loopne
test
lods
dec
xor
add
mov
push
fiaddl
cs
sbb
pop
add
xchg
xor
adc
dec
add
and
push
imulb
sbb
inc
add
cli
add
push
les
hlt
outsb
pusha
add
jo
push
adc
lds
add
loopne
sub
fcoms
xlat
les
inc
mov
rorb
dec
cmpsb
mov
mov
mov
jmp
mov
sbb
xchg
sub
push
pop
lidtl
ficoml
ds
fnsave
push
pushf
add
and
or
pop
xor
inc
fmull
iret
out
aaa
lea
pusha
dec
aad
and
mov
ror
fimuls
enter
jp
scas
and
into
dec
lret
rorb
popa
jl
jg
ljmp
push
xchg
inc
jne
adc
flds
pusha
push
les
fcmovb
push
in
or
mov
ja
aaa
bound
xor
decl
mov
lods
insl
push
xchg
test
push
mov
dec
inc
adc
sub
lret
add
pop
cs
or
add
add
mov
loopne
jle
subl
mov
mov
sbb
mov
cmp
mov
stc
into
push
pusha
add
gs
mov
insb
add
mov
sbb
pop
and
aaa
andl
mov
mov
pop
popa
movsb
mov
cs
jge
pusha
mov
mov
cmpsl
xorl
hlt
mov
cltd
add
rol
pop
lock
sbb
loopne
shll
andl
clc
mov
mov
aad
sbbb
andb
mov
iret
icebp
mov
sub
and
gs
xcrypt-ctr
cmpsl
sbb
shrl
or
add
push
loope
push
push
pusha
add
sub
push
frstor
jnp
cmpsb
mov
pusha
jle
in
add
jl
mov
mov
sub
ljmp
mov
mov
jge
mov
rolb
std
jge
add
pop
cmc
js
pusha
mov
xchg
mov
subb
test
lock
repz
inc
mov
enter
mov
fbstp
sub
aad
mov
mov
inc
adcb
mov
and
sub
bound
sub
or
sbb
test
aam
mov
cld
popa
popl
incl
xchg
mov
dec
inc
cmp
dec
call
sub
jb
inc
sbb
ret
mov
ja
jo
xor
mov
add
pop
inc
jo
incb
call
adcl
xor
mov
dec
cwtl
mov
vxorps
pusha
repnz
icebp
dec
inc
pop
and
xor
cmpb
add
inc
ss
subb
adc
sahf
shll
mov
test
or
loop
rcl
sbb
mov
in
outsl
mov
adc
inc
cmpsb
mov
shrl
fildll
mov
add
inc
adc
cld
xchg
xor
dec
ret
inc
xchg
loope
mov
addl
add
add
sbb
sub
mov
adc
cmp
pusha
nop
mov
xchg
mov
sahf
pushl
push
in
and
call
mov
shlb
xorb
mov
mov
mov
mov
lock
lret
mov
lods
inc
mov
and
or
mov
xchg
fwait
pop
mov
lds
xor
mov
scas
and
pop
movb
pop
ja
push
cmpsb
mov
sahf
jb
mov
je
test
pop
xor
insl
adc
mov
int
add
adc
ljmp
adc
push
insb
sti
ds
ss
add
cmp
cmp
push
add
fdivrl
cld
cmp
or
or
popf
xchg
js
cmp
sub
lock
sub
sbb
cs
adc
test
lcall
add
sbb
aam
add
push
sbb
fsubl
push
loop
inc
sub
ja
and
inc
push
cmp
aad
sbb
push
nop
jp
pop
or
or
shlb
push
adc
dec
aam
clc
nop
jo
inc
lfs
add
mov
gs
push
lods
adc
push
jno
shrb
popa
js
inc
not
and
xchg
enter
or
loopne
sub
nop
xor
imul
rolb
cmp
aas
subb
push
add
add
push
or
mov
sub
xchg
inc
loope
sbb
test
inc
mov
pusha
or
push
incl
out
lock
mov
jg
in
mov
fmul
addl
xchg
sub
scas
xor
scas
ss
adc
sbb
into
insb
mov
sub
cmpsb
or
cwtl
xchg
sub
inc
dec
push
ret
jg
sub
lahf
cmp
xor
pop
add
xchg
test
fdivl
mov
jge
aad
inc
outsb
or
std
scas
or
lods
out
rcl
ljmp
sbb
jge
add
mov
inc
movsb
dec
push
outsl
es
aad
dec
mov
insl
push
ds
push
push
mov
sbb
and
push
nop
sub
hlt
mov
adc
add
std
xchg
xchg
jle
notb
xchg
es
shll
rolb
xchg
popa
andl
add
pop
dec
mov
clc
outsl
ljmp
adc
lods
mov
shr
xor
add
sbb
push
mov
pop
add
pushl
and
leave
roll
ror
mov
mov
lock
cmp
add
sub
and
je
pushl
flds
push
nop
fsts
enter
lret
mov
mov
movsl
rorl
adc
leave
and
lret
push
cmpsb
scas
orb
push
hlt
pop
insb
mov
push
inc
adc
add
xchg
or
sub
xchg
cmpl
push
pop
mov
xor
xchg
fs
popa
push
imul
aam
roll
fiadds
nop
mov
xchg
add
dec
rclb
mov
fs
add
ss
adc
leave
add
insb
cmpsb
add
outsl
mov
xchg
adc
bound
scas
inc
mov
jg
icebp
mov
or
xor
ss
fdivrl
rolb
jo
fmull
add
pusha
cmp
fimuls
inc
xor
stos
xchg
sahf
or
cmp
xchg
push
sarb
mov
insl
jmp
add
push
xorb
test
arpl
rorb
clc
cmp
add
test
sbb
push
inc
mov
addb
adc
shlb
or
scas
cli
ja
mov
shlb
or
nop
movsl
lock
add
adc
loope
rcrb
inc
scas
push
loopne
loopne
push
adc
or
stos
nop
ljmp
jns
popf
loopne
fsubl
repnz
shrl
inc
xchg
jp
xchg
nop
insl
popf
add
or
add
movb
jo
mov
leave
xchg
lods
icebp
jmp
loope
adc
lret
rcrb
sbbb
cld
sub
fistps
aad
enter
lock
add
push
dec
ret
call
out
inc
xor
sub
jg
xchg
call
lock
in
xchg
or
add
leave
rcll
jo
aam
add
push
add
add
pop
mov
dec
incb
sub
rolb
xchg
push
sbb
in
shrb
pop
roll
lods
ljmp
pop
lods
add
loopne
push
loopne
dec
adc
fld
pop
adc
call
xchg
lods
xchg
roll
rorl
mov
inc
loopne
sbbl
add
mov
andb
adc
stos
cmpsb
rorb
ljmp
icebp
subl
pop
pop
pop
sub
gs
and
and
add
cmp
xchg
rcrb
and
sub
das
xchg
incb
rcll
cs
inc
jo
fidivl
add
outsb
jg
jp
jbe
ret
loope
je
xchg
bound
adc
xor
or
out
ljmp
sahf
xchg
and
ljmp
inc
call
lahf
push
add
int3
jo
or
das
call
pop
mov
xchg
adc
or
std
mov
leave
into
add
adc
inc
mov
jb
imul
pop
add
mov
jle
dec
cmp
lods
add
or
cmp
bound
pop
iret
js
pop
in
jo
cmp
xor
rcl
gs
es
lret
es
test
hlt
lcall
mov
roll
test
inc
jno
add
inc
add
dec
inc
mov
sub
das
sar
add
xchg
push
dec
add
add
add
nop
test
or
imul
lcall
aaa
xchg
addl
add
xchg
inc
jb
and
shlb
pop
push
sahf
mov
adc
cld
add
add
mov
les
inc
js
aas
cmp
xchg
icebp
pop
orb
mov
lcall
sbb
aaa
aad
nop
mov
movl
xor
sub
pop
mov
mov
or
test
stos
sub
sbb
leave
add
push
adc
jno
ret
nop
add
xchg
add
lods
xor
mov
xchg
rol
daa
lret
mov
or
out
push
sbbb
add
out
nop
push
add
sbb
or
fldl
add
add
or
aas
sahf
or
int3
pusha
call
pop
out
add
push
scas
into
popf
adcl
add
add
and
pushf
dec
shlb
push
lods
sub
sbb
js
push
push
test
mov
lcall
xor
sbbb
pop
je
ljmp
and
pop
movsb
enter
int
add
adc
outsb
ss
rcrb
xchg
std
rcr
inc
lock
and
cmpsb
push
sub
scas
inc
es
pusha
mov
sub
rclb
adc
in
push
xor
lcall
shll
sbbl
roll
ret
sub
icebp
inc
add
subl
aad
jle
hlt
push
adc
add
or
dec
ret
jp
or
mov
push
stos
or
lcall
sbb
add
or
cmp
xchg
cmp
rorb
cmp
fdivr
test
add
sub
add
pop
clc
add
cwtl
inc
cmp
dec
lahf
push
pop
inc
add
aam
ret
mov
sahf
xchg
or
mov
push
test
loopne
mov
cmp
call
or
je
movsl
addb
pop
and
jl
add
cmp
mov
lcall
les
adc
mov
and
sbb
fbld
mov
fs
test
popf
cmp
loopne
imul
push
mov
ret
addps
scas
add
lods
nop
xchg
xchg
rcl
stos
xchg
inc
sub
dec
jmp
push
cmc
xchg
add
fwait
cmp
add
cmp
fs
rorb
cmp
mov
xchg
es
js
mov
push
cltd
adcl
test
xorb
popa
adc
cmp
ss
jmp
inc
cs
or
mov
and
sub
add
lahf
xor
add
add
push
and
and
add
and
in
add
or
rcll
cmc
adc
sarl
xchg
sbb
stos
xor
cltd
cmpsl
mov
popa
add
push
xor
gs
sarl
add
imul
mov
fisubrs
insb
dec
gs
lods
mov
loop
inc
xchg
bound
jmp
xor
jnp
inc
adcl
rcr
jns
jns
stos
inc
rolb
xor
ja
rolb
loopne
insl
iret
in
aad
fucomip
mov
xchg
mov
dec
adc
ja
test
inc
shll
imull
or
aam
or
in
fsubs
lret
or
loope
add
lods
xor
jno
cmc
rclb
fldt
fsub
add
bound
into
add
insb
add
cld
lods
cli
inc
inc
lock
in
jp
lods
push
xchg
lock
pusha
pop
ficoml
xor
xchg
mov
xchg
xchg
mov
fiaddl
push
push
or
icebp
inc
add
push
shrb
add
add
lock
adc
lock
push
or
add
pop
ds
pop
jne
incl
arpl
push
cli
add
xchg
dec
mov
mov
xchg
dec
test
xchg
dec
in
call
push
add
sub
fwait
mov
sbb
inc
cmc
addr16
dec
sub
mov
add
or
and
mov
sbb
movsl
ljmp
lods
adc
inc
ljmp
sub
aad
testb
mov
pusha
mov
add
rolb
adc
xchg
scas
pop
xchg
adc
pushl
jecxz
int
mov
fildl
add
or
ret
add
sub
inc
and
mov
lret
sub
aaa
mov
movsb
stc
mov
sub
add
inc
out
cmp
xchg
pop
and
sahf
push
adc
adc
scas
rolb
mov
inc
test
add
push
cli
dec
jg
aam
int
les
stc
lock
outsl
out
xor
mov
lods
stos
mov
or
adc
push
icebp
rolb
xor
insb
fldl
sbb
outsb
add
scas
incl
cmp
std
ja
dec
mov
dec
push
adc
jo
adc
test
mov
xchg
xchg
sbb
mov
enter
mov
hlt
fistps
push
dec
fprem1
sahf
pusha
dec
jo
adc
dec
mov
add
cmp
mov
mov
add
mov
mov
add
shrw
mov
cli
fdivrs
cs
mov
pop
add
adc
add
ljmp
or
or
push
rolb
xchg
fsqrt
sub
xchg
es
jle
or
mov
mov
test
leave
cmpl
sahf
mov
in
sti
decl
cwtl
in
xchg
iret
or
push
andb
fstl
mov
push
push
ljmp
add
push
inc
pop
add
or
sbb
rorb
dec
cmp
sub
add
sbb
jmp
cs
push
mov
sarb
xor
inc
adc
or
mov
or
dec
adc
cli
add
inc
roll
inc
add
jg
adc
cmp
cmp
sar
idivb
push
push
call
mov
in
sbb
push
adc
inc
icebp
mulb
xor
or
cld
mov
jle
decl
movsl
add
adc
scas
int3
fwait
decl
aaa
fidivs
inc
and
inc
inc
add
aas
rcll
aaa
jo
scas
fs
cli
adc
ret
outsb
inc
hlt
cwtl
or
fwait
push
push
sbb
loopne
push
dec
ljmp
mov
movsb
add
sahf
add
andb
inc
std
push
push
js
out
roll
or
sub
sub
sbb
ljmp
cmp
aam
movsl
mov
add
mov
mov
add
push
add
adc
push
xor
stos
jg
dec
rolb
add
xor
dec
outsb
xor
mov
adc
or
push
jo
sbb
and
pusha
mov
fs
int3
ret
or
cmpsb
ficoms
lock
xchg
cld
sub
mov
cld
in
decl
rolb
leave
popa
add
ret
mulb
xchg
call
sub
add
xor
inc
add
sub
into
std
or
jle
xorb
cmp
adc
enter
int
enter
dec
test
push
es
adc
stos
xchg
pop
xorb
shr
jne
add
cmp
sub
add
cmc
test
cmc
lods
mov
mov
mov
jle
popf
mov
inc
int
add
mov
cmp
cs
add
push
mov
inc
add
inc
lds
not
and
lret
add
jmp
sbb
add
inc
or
push
std
jbe
je
adc
pop
mov
shrb
or
adc
dec
xchg
iret
adc
dec
data16
mov
xor
pop
dec
pop
push
aaa
sub
xchg
push
xor
fwait
inc
mov
jg
enter
rorb
test
pop
nop
or
xchg
es
es
or
aas
sbb
push
testb
adc
jp
fcoms
cs
or
sbbl
lret
test
or
repnz
stos
pop
sub
mov
iret
mov
dec
sub
mov
add
and
xor
sbb
ret
mov
sbb
imul
cwtl
push
xor
adc
add
mov
repnz
ret
fisttps
cmc
dec
les
test
call
mov
xchg
pop
sub
roll
aaa
fwait
sahf
adc
les
outsl
add
adc
push
push
cmc
jg
fisttpl
xchg
adc
rorb
ret
adc
xchg
xor
xchg
movsl
cmp
rorb
insb
les
xchg
outsb
sbb
mov
decb
les
imul
cs
cmpl
push
pop
pop
icebp
fildl
xchg
dec
fcmove
inc
cmp
mov
mov
and
adc
dec
or
dec
jne
sbb
ds
loopne
add
aad
nop
rcl
test
inc
ljmp
mov
enter
in
inc
adc
cmp
and
cmp
jb
ljmp
adc
lock
loope
lret
ficoms
add
ja
push
test
nop
sub
push
je
aam
sub
adcb
push
push
add
decl
mov
dec
and
dec
cvtps2pi
sti
out
sahf
mov
mov
adcb
cmpsb
jp
int
sub
adc
mov
addl
fbstp
mov
add
dec
mov
cmc
ljmp
dec
sti
rorw
aas
mov
shl
stos
scas
sub
or
cmp
cmp
lret
imul
lret
pop
pusha
bound
inc
mov
cmp
adcb
in
inc
sub
dec
adc
or
xor
cmp
cld
adc
inc
push
imul
loope
or
or
dec
enter
cmp
mov
cli
insl
xor
lock
popf
les
loop
adc
out
stos
dec
lods
sub
mov
or
inc
xchg
push
divb
or
mov
mov
dec
ds
inc
cmp
enter
fnstenv
andb
ds
push
xor
push
inc
mov
sbb
or
decl
push
lods
and
xchg
test
aaa
cld
pop
sbb
adc
adc
cmpb
or
jle
cmp
adc
mov
add
cmp
enter
mov
push
out
aam
xchg
xor
cmc
adc
push
xor
jbe
cld
or
inc
mov
push
fisubl
xor
cs
into
push
dec
adc
adc
mov
faddl
adc
int3
mov
or
mov
in
and
movw
outsb
pusha
mov
es
push
cmp
into
std
mov
daa
jae
dec
nop
mov
push
xchg
and
sub
aam
mov
and
inc
pop
sar
out
add
mov
lock
lret
data16
mov
lret
add
push
rolb
dec
ljmp
test
cwtl
or
fdivs
mov
in
in
add
sub
jmp
out
pusha
shl
data16
clc
cmp
mov
repnz
inc
add
mov
add
add
mov
lods
push
or
out
push
jnp
incl
push
lcall
push
mov
repnz
sar
or
jge
dec
dec
adc
loopne
mov
push
mov
xchg
mov
or
lods
fdivrl
or
rolb
and
add
addb
pop
adc
sub
add
pushf
lret
inc
rclb
cmpb
add
pop
mov
lods
loop,pn
lret
dec
addb
lock
push
cmc
adcb
scas
lods
add
jle
out
adc
out
pop
mov
idivb
or
hlt
sub
sub
xchg
pop
fmull
pop
into
push
add
fcmovbe
adc
add
add
or
push
sub
mov
or
decl
xchg
adc
mov
add
xorb
rolb
loop
scas
and
cmp
jmp
inc
push
xchg
ror
pusha
or
jle
rolb
push
icebp
xlat
xor
cli
inc
clc
test
les
sub
sub
or
sub
or
add
mov
imul
xchg
inc
pmulhuw
inc
xchg
cld
mov
call
push
ret
pop
inc
push
and
and
aam
shrl
or
lea
mov
push
adc
mov
sbbb
and
jae
mov
inc
adc
test
adc
int3
cmp
sbb
pop
jmp
and
in
and
int3
xchg
add
and
adc
fidivrs
es
xchg
sbb
dec
adc
add
xchg
add
add
xor
prefetch
sbb
add
adc
or
or
lock
inc
or
or
loopne
jne
and
orl
daa
mulb
inc
and
inc
rolb
push
mov
mov
add
ret
and
jp
dec
scas
mov
dec
add
adc
stos
and
cmpb
inc
mov
pop
adc
or
cltd
push
inc
cmp
jmp
inc
mov
loope
cmp
add
inc
subl
test
test
add
shrl
loopne
push
test
aas
cs
xchg
or
add
loop
cs
in
test
into
or
xchg
fildll
mov
mov
add
pop
sub
insb
les
add
fidivl
into
dec
stc
add
mov
add
sbb
jg
adc
dec
xchg
add
adc
fs
inc
dec
mov
dec
xor
test
adc
lret
pop
hlt
icebp
stos
push
add
xor
sbb
xchg
mov
test
loopne
ss
shlb
cmp
aam
add
aad
out
movb
xor
sbb
or
fs
and
je
adc
lret
cmp
dec
mov
dec
fldcw
aas
jl
test
add
mov
sbb
icebp
and
cmpsb
sbbl
inc
xchg
pusha
cld
sahf
sar
les
cmp
inc
loope
inc
fxch
or
mov
fiaddl
lcall
add
ss
add
mov
leave
dec
ret
fisttps
or
adc
add
mov
xor
push
dec
mov
cmp
mov
movb
dec
popl
rorb
ret
inc
pop
in
loopne
add
fcom
rcl
leave
or
outsb
push
sbb
or
adc
xchg
lcall
scas
sub
dec
fdivl
add
mov
and
adc
sti
adc
cltd
cld
les
shrb
test
inc
inc
iret
sbb
mov
stos
loopne
imul
mov
fildl
xchg
push
repnz
jo
cmp
aam
fistl
dec
push
inc
leave
and
out
xchg
jb
les
rcrb
sbbl
ret
pop
fcomps
xchg
jmp
push
aaa
loop
mov
ficoms
mov
shlb
mov
and
sub
jno
shll
xchg
xchg
cs
popa
sbb
push
rcll
dec
in
xorb
in
pop
jg
pop
cwtl
lock
rcr
xor
mov
add
xor
pop
sub
mov
pop
je
mov
add
ds
and
mov
cli
dec
loopne
pxor
cmc
mov
adc
push
push
xor
cmp
ss
add
sub
mov
push
call
jge
rcl
sub
mov
mov
clc
or
aad
shlb
push
flds
ret
in
andb
inc
and
add
mov
add
fxch
inc
loopne
adc
pop
add
xchg
pusha
or
adc
xor
xor
dec
push
sub
mov
dec
pop
or
sub
shlb
dec
push
fisubrs
dec
roll
mov
inc
add
add
sub
jle
ret
add
push
inc
adc
pushf
dec
and
mov
add
jo
mov
sbb
psraw
bound
push
push
and
and
gs
sbb
cmp
fcmove
rol
cli
fildll
pop
and
adc
cltd
shl
adcb
cmpsl
ss
or
ja
loopne,pn
shlb
dec
es
stos
mov
cmp
jg
and
add
push
push
xchg
sub
jge
jne
xchg
xchg
add
mov
test
lods
cmp
xor
jo
cld
rcrb
andl
mov
jge
xor
and
shll
mov
dec
or
je
and
xor
push
cli
inc
push
xor
jo
and
xchg
add
push
mov
mov
fwait
or
cs
xchg
iret
adc
mov
adc
add
hlt
push
add
or
adc
fs
adc
jo
or
clc
outsb
push
rcll
mov
xchg
mov
stos
in
mov
xor
movb
insb
dec
push
adc
fcomip
cmp
add
xchg
dec
dec
int
or
push
xor
add
cltd
inc
mov
and
rorb
adc
add
mov
sub
shrb
lock
xchg
adc
sub
push
mov
or
lods
adc
sub
int3
or
fbstp
inc
addb
inc
test
test
or
testb
add
sub
inc
adc
fisttps
stc
dec
xchg
fcomi
xchg
adc
out
ds
loop
inc
sub
cmpsb
xor
cmp
sbb
scas
sbb
inc
mov
push
pop
sti
testb
loopne
inc
push
mov
lret
and
sub
roll
jo
lods
mov
sub
sbb
add
cli
push
ja
push
add
add
in
int
rcl
mov
mov
outsl
mov
jecxz
xchg
jo
xchg
call
lods
les
push
inc
cmp
xor
jno
jb
xor
adc
xor
dec
inc
xchg
sub
repz
mov
xor
pushf
fs
pop
add
and
lea
push
scas
in
leave
data16
pusha
cli
cvtps2pd
sub
bound
fnstcw
xchg
lods
add
mov
mov
jno
mov
and
nop
es
mov
lods
aam
dec
inc
sub
and
loop
cmpsb
out
rclb
das
sbb
add
xlat
mov
rolb
outsl
mov
jg
data16
add
leave
mov
or
pop
push
jno
in
mov
add
inc
and
rorl
and
add
or
and
lods
in
push
adc
fcmovb
rcll
and
inc
jo
xchg
add
fwait
lods
or
push
arpl
jmp
in
inc
or
je
outsb
adc
and
icebp
fdivs
clc
jns
fisubl
mov
cmp
fiaddl
in
stos
cs
adc
and
mov
dec
and
imul
mov
fcompl
and
cmc
xor
rclb
movsl
or
fadds
pop
xchg
div
mov
jo
flds
pop
add
add
xchg
enter
inc
or
add
add
icebp
insl
push
adc
push
enter
or
mov
jl
lcall
lcall
imul
and
mov
jg
imul
inc
pop
sbbl
test
lea
lock
mov
and
pop
mov
shlb
push
jl
mov
sbb
xchg
cs
push
adc
pop
mov
aaa
bound
rcrl
cs
inc
movsl
pop
icebp
jmp
rcll
fldcw
repz
and
sldt
jge
push
sub
mov
add
cltd
and
adc
push
lods
push
jbe
jae
xorb
popf
arpl
cld
test
in
dec
cwtl
ss
loopne
dec
fdivs
jg
adc
push
xor
mov
mov
mov
pop
nop
sbb
inc
roll
nop
push
jno
dec
pop
push
jno
mov
or
or
mov
pop
enter
jne
or
pop
mov
inc
add
jge
test
roll
mov
decl
test
out
pop
cltd
and
clc
xor
mov
xchg
push
adc
and
mov
xor
push
std
jmp
insb
aad
jno
ror
adc
mov
data16
and
add
pop
dec
fxch
fwait
sahf
stc
inc
sti
fucomi
add
or
adc
pusha
mov
ficoms
mov
push
pusha
add
push
lock
dec
pop
dec
test
fdiv
and
mov
mov
enter
mov
fcompl
gs
dec
mov
scas
inc
xchg
push
les
or
repnz
shll
mov
mov
or
rorl
add
cld
or
jb
xor
cli
mov
aaa
cmp
cmove
scas
mov
repnz
addl
rolb
mov
inc
loop
push
xchg
ret
pop
xchg
pop
lods
mov
adc
adc
xchg
jnp
imul
cmp
int3
add
adc
shrl
or
xchg
push
cld
sub
out
xchg
push
dec
push
movsl
add
xor
rorb
xchg
mov
out
mov
push
dec
inc
xchg
and
push
inc
imul
xchg
sbb
sub
sbb
lock
sub
mov
sbb
inc
popa
and
iret
rclb
xchg
xor
cmpsl
cmp
inc
ja
dec
add
sbb
dec
sarb
imul
or
mov
insb
addr16
pop
inc
or
or
icebp
bound
int
inc
fcompl
or
addl
leave
je
nop
inc
push
adc
aaa
mov
cli
sub
inc
idivb
pop
lcall
movsl
mov
jle
add
ficompl
mov
inc
adc
aad
add
mov
xchg
loope
movb
add
jp
mov
mov
push
xchg
outsl
xchg
cmp
mov
incb
cwtl
add
add
and
dec
add
pop
in
cli
lret
jle
push
dec
cld
or
mov
shlb
mov
inc
add
or
xchg
lds
xor
add
xchg
lret
or
mov
add
add
jo
ficompl
mov
imul
or
in
add
loop
clc
mov
and
cs
xor
rol
loope
xor
mov
dec
jecxz
add
or
test
aam
addl
dec
cs
push
adc
insl
mov
add
sub
add
lods
or
es
or
addb
push
add
dec
mov
mov
out
xor
in
pop
mov
sbb
sub
pushf
es
aam
repnz
ds
add
xchg
mov
stos
or
fisubrs
imul
loopne
movsb
pop
cli
stc
and
add
mov
xor
daa
lcall
sub
pushf
or
sbb
lock
inc
loope
push
pop
push
jge
test
andl
push
std
adc
loopne
adcb
ss
add
call
loop
in
xchg
add
sub
adc
mov
rclb
hlt
sbb
rorb
loop
dec
pop
pushf
jns
fwait
adc
dec
pop
pop
shrl
mov
jg
dec
adc
push
adc
in
adc
movsl
or
add
frstor
cmp
test
rolb
lcall
roll
adc
shrb
fiaddl
loop
mov
jae
std
pushl
inc
push
xchg
adc
push
fstl
adc
pop
push
adc
inc
push
pop
fstpt
inc
adc
xchg
movsb
dec
inc
xorl
fmul
test
cmc
sbb
add
inc
push
addr16
inc
cld
decl
or
push
mov
jge
sar
pop
ljmp
sbbb
mov
rcrl
dec
cli
decl
push
add
rol
push
xor
loopne
and
and
pop
pop
int
ret
cld
mov
loopne
and
aas
call
add
shrb
add
sbb
adc
fsubrs
les
adc
adc
push
or
xchg
sbbb
or
lcall
mov
or
mov
cmc
sub
idiv
orl
out
and
jecxz
sti
cmc
mov
adc
pop
xor
inc
int
cmp
adc
pushf
mov
or
in
cmp
mov
or
sub
add
add
and
pop
or
ret
idiv
mov
clc
inc
sub
lods
mov
and
mov
push
nop
push
and
in
xchg
or
pusha
fsubrs
das
add
or
mov
adc
add
and
sub
xorb
or
xlat
mov
mov
and
and
mov
sbbb
fsub
ret
mov
je,pn
mov
inc
sub
mov
add
and
sub
mov
and
rorb
out
or
mov
cmp
push
aam
loop
mov
pop
cmp
push
lds
aaa
or
icebp
jge
sub
push
mov
inc
addb
and
mov
adc
sahf
jle
popa
push
shrb
nop
mov
shll
les
adc
shll
dec
add
cs
inc
lock
push
lods
gs
add
and
dec
in
lds
idivl
or
sbb
add
fisttps
cld
add
pop
add
mov
push
sbb
int3
shlb
lret
inc
enter
inc
into
fisubl
or
outsb
adc
dec
mov
sub
xchg
popa
sbb
das
add
sub
addb
jo
cmp
sbb
inc
jne
ret
sbb
and
push
or
mov
cmpsb
scas
push
add
and
outsl
shl
sbb
adc
testb
or
jmp
push
push
pop
push
into
or
and
mov
sbb
and
sub
xchg
inc
dec
movb
adc
outsl
call
mov
sub
push
or
shll
xor
xchg
les
enter
adc
in
push
jne
or
cmpb
mov
cmp
je
xchg
adc
and
daa
pusha
xchg
mov
mov
add
shrl
imulb
sub
inc
xor
nop
arpl
xor
lock
shufps
and
mov
stos
push
inc
add
daa
inc
fistpll
jmp
out
aas
ret
dec
sbb
fs
add
lcall
in
or
cmp
xor
mov
inc
test
jle,pn
dec
pop
sub
incl
cs
rorl
subb
inc
or
add
mov
or
inc
cwtl
cld
stos
push
mov
mov
fstp
cmp
or
and
daa
mov
cs
fnsave
sub
adcb
and
insb
fninit
in
pop
movsb
roll
add
mov
and
and
add
decl
mov
cmp
cmp
rol
sub
ja
sbb
add
jo
sub
and
loop
cmp
arpl
or
dec
jl
xchg
adc
jb
int
sbb
mov
add
js
adc
pop
and
in
inc
push
shrb
rorl
movsb
je
mov
add
mov
mov
loopne
in
icebp
sub
push
call
je
cmp
xchg
push
test
and
aam
shlb
dec
sub
dec
sahf
inc
outsl
xor
andb
pop
icebp
fistpl
add
sbb
add
xchg
add
loopne
adc
or
sub
int
sub
repnz
divb
dec
and
and
sbb
adc
pop
loopne
popa
adc
mov
xchg
popf
adc
repnz
scas
xchg
pop
mov
xor
icebp
push
call
in
and
or
fs
rolb
sub
shrb
or
out
lcall
test
stos
ss
or
je
lret
aam
add
shrb
push
mov
sub
xchg
mov
push
nop
add
and
adc
fsubrs
hlt
mov
jb
xchg
push
pushf
std
sub
fimuls
and
mov
int3
xchg
mov
inc
mov
dec
js
les
inc
loopne
call
popa
add
mov
mov
rclb
aaa
adc
pop
leave
lods
leave
mov
mov
xor
add
add
dec
ret
cmpsl
test
int
ret
jl
mov
and
adcb
and
shlb
shl
adc
in
and
in
add
enter
mov
dec
lea
sahf
lock
jl
jle
jo
lcall
push
les
pop
or
or
push
dec
lock
ret
pop
mov
dec
inc
pop
or
insb
fsubs
call
xchg
mov
push
or
or
into
mov
movsb
xor
xchg
xchg
jno
adc
sub
push
popa
mov
fidivrs
xchg
scas
or
push
test
shlb
adc
cwtl
fs
adc
fdivrs
outsb
cmp
or
cmp
mov
incb
call
incl
gs
mov
mov
cmp
pushf
push
ds
test
cwtl
push
test
rorl
movsl
lock
sub
mov
xorl
icebp
aaa
fcomp
data16
sahf
push
dec
xchg
add
mov
mov
add
add
leave
enter
push
test
mov
jl
inc
add
jo
adc
mov
lret
adc
add
add
jb
das
mov
sub
xchg
add
and
mov
cmp
ret
mov
or
repnz
adc
xchg
push
fs
adc
insl
fdivr
or
add
pop
mov
xor
clc
pusha
adc
loop
jg
ds
add
test
add
add
inc
xchg
dec
inc
or
mov
sbb
mov
add
push
cwtl
mov
sub
and
mov
mov
lcall
ljmp
mov
nop
jg
or
cld
mov
mov
mov
cmp
cmpsb
pop
rorb
movb
clc
bound
push
subb
sub
rol
sbb
push
mov
nop
inc
test
mov
and
sbb
adc
mov
orb
jo
jmp
add
adc
ret
sbb
out
testb
shlb
sar
mov
jo
mov
pop
or
pop
add
call
fwait
mov
jo
or
add
lds
insb
xor
mov
xchg
out
add
mov
into
adc
gs
mov
inc
mov
mov
stos
es
add
inc
nop
sbb
or
add
loopne
aad
or
push
frstor
sbb
leave
rcl
mov
imul
les
iret
arpl
call
pusha
or
rcll
aad
pusha
xor
add
and
sbb
xchg
xchg
jne
lock
cmp
push
or
or
pusha
push
dec
cmpl
or
int3
lock
xor
adc
and
xchg
xor
decl
push
rol
xchg
add
push
xchg
mov
insb
or
or
cmpsl
int3
into
add
sub
aas
mov
xor
das
add
mov
leave
add
mov
std
fbld
loop
xchg
add
dec
adc
adc
adc
das
adc
into
inc
add
sub
jg
xchg
js
fstpl
adc
add
in
out
fcmovne
mov
and
mov
mov
jbe
add
or
aas
and
and
dec
add
out
and
sbb
sbb
adc
add
fbld
repz
add
add
push
sarb
enter
jg
test
push
adcb
roll
lods
dec
aam
dec
lock
mov
and
or
pop
fistpl
mov
or
add
push
ss
ficomps
mov
mov
subb
add
ljmp
add
aad
movsl
push
lods
ret
adc
clc
mov
lods
mov
push
mov
inc
test
std
icebp
addl
sub
push
fbld
addb
fnsave
shll
daa
lea
push
xor
in
lods
outsb
add
cmp
insl
roll
int
and
add
and
insl
imul
orb
add
jge
jno
fwait
outsb
aaa
cmp
pop
rolb
mov
push
imul
imul
pop
stos
rorl
cmp
mov
arpl
lcall
addb
mov
aas
xchg
sbbb
sbb
sub
adc
and
sbb
lcall
in
sbb
in
lcall
imul
mov
xor
sub
rcrb
mov
imul
sbb
jnp
loopne
cmp
and
stos
or
ljmp
add
jns
pop
jno
add
add
paddsb
stos
insl
gs
stos
pop
push
lcall
sbb
inc
mov
push
push
and
pop
or
add
std
add
dec
jo
repnz
add
in
mov
push
shrb
add
lret
dec
aas
out
cltd
pusha
cmp
xorl
push
mov
insb
sbb
sbb
loop
loopne
pop
add
and
shll
push
gs
pop
jg
mov
in
or
or
in
push
pusha
add
push
cmc
xchg
xorl
push
inc
or
aad
sbb
cmp
pusha
jmp
mov
add
cmpsb
fldt
adc
lods
push
icebp
fcompl
fst
out
loopne
loop
fcompl
mov
mov
adc
faddl
shrl
hlt
loopne
insb
xor
sbb
sub
push
test
sbb
sbb
inc
push
add
add
xor
sub
mov
mov
rolb
repz
mov
lahf
loopne
push
push
push
dec
dec
add
jns
pop
fildl
push
mov
daa
jp
sbb
mov
jnp
or
cltd
loopne
xchg
addb
js
mov
ja
jns
jmp
xchg
sbb
pop
dec
adc
add
or
inc
js
add
leave
loopne
inc
pusha
add
js
jns
pop
sub
loopne
loope
in
sti
push
testl
jns
jge
fiaddl
push
popa
pop
add
xorb
sarb
loopne
das
push
xchg
daa
add
ret
sbb
adc
push
add
xchg
testb
out
sbb
jo
es
mov
pop
adcl
add
into
xchg
test
pusha
add
jle
sti
imul
imul
jge
jno
loopne
sahf
cmpsb
lds
jno
loopne
rcrb
and
je
stos
push
cld
xchg
pusha
xor
or
clc
inc
sahf
lods
mov
inc
lock
cmp
movsl
mov
inc
shll
push
out
movsb
mov
addl
cmp
adcb
or
int3
add
iret
adcb
pop
movhps
imul
loop
mov
shlb
add
adc
stos
sub
jno
and
divl
iret
stos
popa
loopne
xor
push
adc
dec
imul
add
dec
pop
inc
or
rcrl
mov
mov
mov
outsb
cltd
add
inc
imul
popf
xchg
xchg
add
shrl
stos
xor
stc
push
xor
test
std
jl
in
roll
add
aad
sub
xor
aaa
pop
call
lock
xor
sub
mulb
adc
add
imul
mov
popa
mov
pop
cmp
push
fiaddl
orb
sarl
sbb
xor
movsl
jo
adc
or
sbb
push
lock
lcall
sub
push
push
cld
mov
inc
jnp
and
lock
cmp
es
pop
stos
add
sbb
jo
imul
cmp
xor
xor
cmp
data16
fisubl
mull
mov
or
imul
jle
mov
je
add
pusha
xor
jo
pop
lods
jns
rcll
dec
sbb
lcall
mov
add
imul
dec
in
lcall
xor
mov
add
lahf
sbb
sbb
int
xchg
xchg
mov
int
sti
push
testl
out
sahf
jecxz
add
iret
ret
cmp
pop
aas
add
shll
aaa
leave
das
sbb
daa
sbb
adc
adc
lahf
sub
cmp
ds
xchg
add
ret
mov
mov
cs
or
sbb
inc
sbb
mov
mov
inc
sbb
inc
sbb
jno
mov
inc
push
jae
scas
sarb
mov
xchg
lock
loope
add
xor
mov
jecxz
sbb
repnz
stos
in
ret
jecxz
jecxz
in
push
repz
into
retw
xchg
enter
push
in
push
in
sbb
out
push
in
push
in
adc
aas
movl
and
jmp
mov
and
lock
addr16
jo
mov
mov
jmp
aaa
cmpsb
aaa
cmpsb
repz
jecxz
sbb
xor
jo
aaa
scas
aaa
and
scas
aaa
scas
arpl
sbb
sbb
scas
aaa
scas
inc
sub
mov
sbb
scas
aaa
scas
mov
sbb
inc
xor
or
cmpsb
pop
ficoml
add
cmp
aas
add
mov
xor
aaa
add
das
add
and
daa
add
pop
repz
or
add
stos
sarl
add
jg
jae
dec
sarl
pop
pop
and
add
dec
jns
imul
push
inc
add
mov
lcall
lcall
xchg
mov
addl
lcall
lods
jns
fcmovnu
rcl
add
iret
xorb
push
add
movb
add
das
mov
pop
repz
daa
add
pop
or
push
pop
or
in
stos
fmuls
repz
xlat
repz
add
lcall
cmp
sub
push
sbb
cmp
cmp
sbb
mov
sbb
mov
imul
cmc
cmp
push
mov
dec
and
addb
mov
push
add
testb
faddl
xchg
xor
xor
adc
adc
stos
dec
or
sub
lahf
sbbb
or
filds
test
loopne
add
jl
pmuludq
xor
iret
inc
cmp
push
add
ffreep
stos
add
pop
add
es
nop
lret
add
rol
test
add
adc
std
rcr
or
dec
adc
pusha
xor
in
in
ret
push
movl
sub
and
dec
adc
stos
dec
loopne
sub
or
sbb
addl
sub
adc
inc
mov
filds
and
addb
rclb
mov
ret
sub
cmp
push
sub
clc
add
sub
mov
sub
inc
cmp
add
push
push
mov
cli
mov
dec
rolb
add
int
add
add
push
out
pop
xchg
ret
push
add
ret
es
cmp
incl
hlt
out
subb
addb
pop
les
or
add
xor
das
inc
ljmp
lea
mov
imul
and
push
push
pop
or
addl
cmp
adc
ret
insl
insl
add
or
and
add
inc
add
int3
push
add
and
mov
std
outsl
jmp
xchg
and
and
mov
gs
stc
or
sub
dec
out
clc
ret
push
sub
or
add
jg
mov
sub
cmp
dec
add
push
push
adc
mov
pusha
call
pop
fimull
add
jmp
add
inc
push
add
inc
sub
cmp
sbb
divb
pop
addb
and
add
insb
sub
insb
jo
les
fcomps
scas
jecxz
xor
add
call
rorl
jmp
push
loope
shll
and
test
andb
mov
sub
ds
xor
ret
loop
loop
test
pop
jbe
pop
das
push
inc
and
push
ljmp
mov
jg
test
add
arpl
push
cmp
sub
lcall
outsb
sub
xor
add
mov
jp
cmp
cmpl
fbld
test
sarb
cmp
cmp
call
enter
push
addr16
or
sub
add
add
and
inc
loope
in
pushf
cmp
test
pop
test
movsb
add
outsl
mov
lahf
sub
lea
shl
mov
xchg
or
movsb
add
mov
mov
adc
shrb
ret
mov
or
or
mov
pusha
and
and
adcb
icebp
mov
loope
add
mov
inc
pusha
adc
fldt
imul
or
adc
or
in
pop
mov
shrb
pop
test
or
or
test
movsl
fadds
test
dec
inc
add
add
xchg
sub
clc
sub
mov
std
inc
push
ljmp
mov
and
or
mov
and
mov
cmp
sbb
push
jmp
add
imul
xchg
pop
aaa
mov
sahf
mov
or
cmp
orb
or
popf
xchg
push
xor
vpcmpgtd
rorl
pop
push
pop
adcb
dec
dec
mov
push
mov
add
and
data16
lock
xchg
movsb
or
sub
pop
and
jmp
bound
rcll
fadd
dec
aam
inc
fildll
roll
mov
sub
mov
sbb
lcall
mov
push
and
add
in
sub
adc
fidivs
or
leave
fs
or
and
sub
or
lods
js
icebp
or
bound
mov
mov
push
or
fistl
scas
push
pushf
push
sbb
or
subb
pushf
xchg
or
into
mov
and
out
cmc
scas
adc
sti
outsl
and
or
sub
ret
xor
xor
push
sub
pusha
pop
ja
jecxz
inc
pop
test
pop
bound
cli
xchg
sub
sbb
ljmp
popa
insb
xor
outsl
adc
sub
dec
push
dec
stc
jg
inc
adc
push
jne
test
add
jno
xor
fisttpl
je
mov
incl
lock
add
cwtl
add
cwtl
push
and
adc
sub
hlt
jbe
repz
mov
stc
imul
stc
push
ret
stc
lret
sub
jg
das
mov
add
adc
nop
adc
or
pop
push
mov
mov
mov
stc
arpl
stc
outsl
mov
stc
outsb
mov
jecxz
imul
mov
sar
test
push
stos
or
pop
les
pop
adc
les
lea
jmp
pop
int
inc
pop
dec
add
mov
pop
mov
imul
fwait
lods
mov
dec
aas
nop
push
add
add
leave
add
aas
cli
das
clc
jp
sub
shll
roll
ja
fisubl
and
rcrl
xchg
and
ret
sub
clc
add
dec
pop
add
decb
inc
and
inc
aas
add
jbe
and
andb
jg
lret
mov
push
push
push
xchg
repnz
inc
adcb
or
mov
add
stos
int3
fmull
and
orl
pop
add
sbb
xor
and
lret
cld
lds
pop
stos
inc
sbb
hlt
mov
adc
sub
xor
sahf
xor
sub
sub
push
mov
int
add
leave
fdivrp
fists
add
push
sar
int
inc
in
jg
add
movsbl
sub
rclb
mov
sbb
std
out
pop
femms
sbbb
ljmp
add
rorb
pop
enter
pusha
sbb
prefetchw
loop
lds
pop
or
jo
add
cs
pusha
push
rclb
xchg
push
lret
xor
clc
cvttps2pi
xchg
loope
mov
or
inc
fistpll
rcrb
fildl
add
cmp
pop
xor
subb
cmp
and
adc
add
sub
bound
add
add
inc
jne
outsl
fstpt
data16
sub
add
inc
enter
add
pop
cmp
and
push
mov
or
mov
and
inc
js
movb
cmp
or
fistps
pop
adc
adc
or
or
add
mov
add
inc
fdivs
sbb
jne
je
adc
inc
ja
cltd
inc
movl
pop
cwtl
xorb
inc
add
cmp
or
push
jae
dec
add
sbb
pop
test
pop
add
add
es
lea
fiadds
pop
sbb
sub
mov
or
cmp
inc
movsl
add
push
xchg
and
or
cmp
xlat
cmp
stos
fistl
add
dec
pop
imul
push
pop
add
inc
or
add
cmp
mov
lods
xchg
addb
add
inc
rolb
test
outsl
das
jno
fiadds
jbe
xor
inc
sahf
jns
cmpb
add
orb
or
mov
loop
adc
inc
or
testb
adc
push
add
sbb
push
xchg
sahf
ja
mov
lods
mov
out
cmp
and
inc
fmull
fisubrs
xchg
dec
movsl
dec
rcr
pop
inc
sbb
dec
jns
sbb
adc
addb
push
mov
cmp
sbbb
shlb
imul
push
xchg
dec
cmp
push
xchg
sbb
add
adc
es
inc
fildl
inc
sti
adc
sahf
cmpsb
mov
mov
imul
inc
sbb
jg
loopne
repz
cmpsb
imul
push
out
rcrb
idivl
int
mov
and
jae
cmp
pop
aaa
int
cmp
fbld
cmp
lcall
nop
insw
mov
test
sub
cmpsl
std
sti
fstl
lds
rorb
jnp
addb
nop
push
shll
mov
std
adc
inc
adc
push
loop
int3
cs
mov
mov
int
xchg
xchg
sbb
mov
fwait
rcrl
or
xchg
in
jl
repz
sub
jge
dec
orb
dec
mov
js
lock
rcll
mov
xlat
add
aaa
mov
test
mov
popa
xchg
and
xor
push
sbb
sub
push
push
or
xchg
pushf
fwait
push
jl
add
test
xor
jo
sbb
movsl
cmp
cmp
cmp
int
inc
xchg
xchg
sbb
jns
pop
mov
imull
xchg
pusha
or
add
imul
jge
test
xor
pusha
add
imul
pop
inc
sbb
cmpsb
xchg
xor
add
aas
insb
fucomi
xchg
hlt
aaa
loopne
or
xor
loopne
add
or
lret
add
xchg
push
shlb
dec
fcoms
lock
pusha
sub
test
push
out
inc
stos
mov
ret
pop
mov
das
or
rclb
iret
out
fildl
nop
mov
push
popa
out
imul
stos
shl
int
mov
outsl
loopne
add
nop
sbb
dec
rol
scas
and
pushf
enter
decl
inc
mov
inc
popa
pop
inc
mov
test
pushf
or
xor
add
cmp
adc
pusha
cltd
icebp
mov
xchg
std
mov
sub
add
xchg
movsb
lods
mov
sbb
mov
cs
lods
stos
mov
fcmovnb
xor
mov
fnsave
mov
adc
insb
mov
sub
or
jbe
xchg
adc
xchg
xchg
mov
in
mov
push
cmp
mov
stos
shrb
adc
add
xchg
xor
add
mov
mov
test
arpl
mov
adc
orb
mov
xor
cld
mov
xor
dec
das
loopne
or
inc
inc
or
or
fwait
add
jp
adcb
inc
addl
mov
testb
outsl
adc
stos
cmpsb
mov
pushf
xor
xor
sub
sub
std
sbb
lods
mov
sbb
cmpsl
dec
sbb
jl
mov
jbe
sub
cli
mov
adc
sub
xchg
lods
mov
mov
inc
test
mov
test
sbb
add
ds
loopne
adc
xchg
and
and
test
stos
rorb
adc
insb
xorl
sub
mov
popa
pop
fmull
loopne
pop
movsb
xorb
lcall
cmp
pop
xorb
add
stc
push
adc
add
inc
inc
cmc
mov
jl
xchg
loop
mov
mov
sub
sbb
or
jo
adc
mov
les
jo
push
mov
shr
adc
enter
sbb
sarb
xchg
loopne
lcall
mov
mov
mov
and
lea
push
mov
adc
xchg
clc
filds
or
add
jno
ret
and
das
ss
or
or
rcll
or
pop
adc
inc
add
daa
stos
add
and
dec
add
xchg
test
pusha
mov
pushf
mov
add
and
loop
test
xchg
add
xor
xchg
mov
in
jmp
hlt
add
push
xchg
stos
pop
push
mov
or
adc
stos
lods
icebp
and
shlb
mov
push
xchg
nop
stos
pusha
pop
sbb
adc
mov
insl
sub
mov
cmp
jb
pop
and
fsubrs
xor
cwtl
les
jb
andb
mov
sbb
or
rcr
or
or
pop
inc
je
or
or
aas
xor
into
add
push
sub
cli
outsl
mov
cmpsb
test
lods
dec
outsb
lds
mov
cmp
das
js
loop
xchg
pop
rcll
and
push
push
push
add
push
and
inc
sbb
mov
mov
test
add
push
or
adcl
add
outsb
mov
js
or
or
adc
or
jge
push
loope
add
adc
add
cli
xchg
jl
adc
outsl
call
mov
jle
xor
push
roll
adc
cld
jg
pop
and
and
sbb
xor
add
adc
and
adc
add
popf
push
loopne
sub
add
sub
stos
jo
inc
mov
add
xor
ljmp
cld
mov
pop
dec
dec
insb
push
or
sub
sti
dec
pop
ret
sbb
add
mull
inc
mov
pop
add
loope
nop
or
je
mov
add
outsl
jb
xor
stos
shlb
js
xor
sbb
adc
or
rclb
nop
sbb
pushl
movb
and
dec
out
clc
push
xorb
in
test
inc
mov
mov
push
rolb
shlb
dec
adc
ljmp
sbb
jmp
xor
orl
es
mov
subb
mov
push
add
mov
adc
negb
mov
adc
jne
pop
mov
jecxz
mov
push
add
add
loopnew
icebp
scas
incl
push
xchg
xchg
cltd
push
inc
test
stos
push
imul
push
xor
jno
pop
mov
adc
pop
fadds
xor
sbb
mov
dec
inc
xor
movsb
cmpsl
loope
insl
addr16
les
lock
rcr
mov
fiaddl
add
sahf
or
aam
pop
aad
or
pop
inc
push
adc
ret
push
or
add
mov
adc
mov
pop
hlt
push
and
rolb
add
ss
ljmp
filds
mov
rcll
adc
loope
mov
mov
xchg
std
outsl
and
js
rorl
sub
mov
mov
xchg
xchg
adc
cmp
mov
xchg
xor
sbb
pop
pushl
mulb
icebp
cmpsb
mov
mov
and
add
je
decl
icebp
pop
push
nop
mov
pop
mov
mov
cmpsb
outsl
sbb
adc
or
or
lods
mov
sbb
inc
inc
mov
pop
loopne
loopne
add
mov
cli
jecxz
je
add
mov
add
mov
addl
scas
lods
xchg
jl
mov
add
inc
stos
sub
pop
push
sub
nop
mov
mov
jb
xchg
and
mov
pop
orb
pushl
andb
fwait
xchg
or
or
pop
xor
xor
push
mov
sti
add
cwtl
roll
int
add
adc
mov
push
mov
popa
ss
js
cmp
mov
andb
push
lock
mov
xchg
add
add
add
adc
lods
stos
sar
test
mov
repnz
xor
orb
xchg
sbb
in
mov
movsb
jo
pop
out
mov
xchg
mov
cmc
add
push
es
cwtl
pop
push
pop
data16
jmp
add
xorl
int3
insb
jbe
les
mov
cmp
add
inc
pop
mov
mov
fwait
pop
pop
mov
sbb
and
add
add
call
in
dec
mov
add
push
clc
adc
in
adc
lret
and
mov
mov
mov
subb
xchg
lods
mov
push
mov
scas
mov
mov
ss
adc
add
pop
andb
andl
mov
mov
inc
xchg
inc
mov
icebp
mov
and
inc
sub
inc
cmp
sbbl
test
jge,pt
loopne
mov
stos
sub
int3
sbbl
mov
dec
fs
pop
xchg
mov
in
push
jle
add
push
inc
test
cmp
test
add
mov
test
rolb
cmpsb
push
push
popa
ss
inc
mov
inc
or
inc
cmpltps
pop
sub
mov
aaa
sub
sbb
inc
add
andl
add
mov
mov
push
inc
and
inc
push
inc
and
xchg
inc
outsb
add
push
and
pushf
addr16
cmpb
inc
repnz
sbb
fiadds
or
mov
enter
mov
aas
es
lcall
mov
andl
cmp
add
push
cmpsb
add
scas
mov
cwtl
push
test
jnp
fmuls
fstpt
dec
adc
adc
mov
test
xor
jg
mov
add
cmpsb
lods
inc
jb
pop
dec
jmp
pop
inc
adc
xchg
rclb
dec
sbb
out
inc
cmpsb
mov
mov
xor
inc
xor
mov
dec
adc
sub
adcb
mov
jl
outsw
les
jg
adc
sbb
xchg
and
xor
add
stos
sbb
inc
jo
dec
xlat
subb
sub
mov
mov
add
jb
xor
cmpsb
scas
push
mov
scas
cwtl
mov
hlt
pop
add
nop
gs
or
iret
cs
cmpsl
decl
mov
push
cmpsl
and
loopne
mov
jg
jg
xor
dec
adc
mov
ret
sub
xor
sub
pusha
mov
add
mov
or
outsb
mov
fdiv
or
push
nop
xchg
faddl
idivb
mov
adcl
or
fildl
cmc
adc
xchg
mov
popa
adc
scas
test
testb
les
cld
mov
add
inc
mov
add
int3
jae
sbb
dec
in
sub
movsb
test
jmp
add
add
mov
outsl
stos
mov
inc
cmpsb
add
pop
mov
jbe
and
loope
das
sub
add
xchg
loop
andb
lods
ret
jg
and
sub
or
or
popa
add
roll
mov
stos
mov
push
adc
mov
and
mov
and
add
movsl
mov
and
aam
fisubrs
arpl
push
cwtl
pop
cmc
test
xchg
pusha
and
clc
lods
adc
xchg
scas
lods
mov
sbb
incl
sbb
es
inc
movsb
push
loope
add
mov
loop
ret
test
push
add
add
and
ret
mov
es
push
shrb
adc
mov
add
addl
mov
xorb
popl
inc
popa
test
int3
mov
inc
je
das
add
inc
pop
test
push
stos
jno
inc
xchg
add
popf
imul
ret
jb
and
cld
ljmp
sbb
in
test
mov
loop
cs
loopne
stos
scas
data16
and
subl
inc
sub
pusha
mov
fidivl
sbb
inc
dec
loopne
jne
inc
pop
insb
fcoms
mov
stos
mov
rol
jg
and
add
sbb
add
or
cmpsb
pop
push
lock
pop
mov
mov
fldt
addb
sbb
add
stos
sbb
bound
fs
xor
push
hlt
xchg
mov
pop
lods
or
cmp
mov
and
cmp
test
das
push
mov
cmp
roll
jae
jg
xchg
lea
push
xor
push
pop
sahf
push
add
jg
push
cmpsb
nop
roll
lods
push
mov
stos
stos
andb
repnz
adc
cli
or
adcl
inc
pop
mov
adc
jle
nop
cwtl
add
jbe
xchg
psrad
fdivl
xchg
inc
fists
push
pop
xchg
mov
movsb
adc
sar
fistl
xchg
rclb
inc
push
jo
and
lods
test
adc
ret
add
test
pushf
cmp
rcrl
mov
out
loop
cmp
cmc
pushl
inc
mov
jo
enter
add
xorb
xchg
and
rcll
aaa
cmpb
add
mov
xchg
xchg
push
rcrb
jg
sar
add
mov
xor
fildl
mov
mov
add
arpl
fs
addl
dec
lcall
fists
cli
push
add
push
adc
je
pop
ljmp
push
pop
lods
cmpsl
clc
add
loop
lcall
pop
rolb
test
mov
jl
dec
fdivs
ss
in
call
cld
cmp
mov
push
adc
jo
call
test
inc
mov
and
push
sti
push
scas
movsb
mov
gs
mov
les
outsl
xor
inc
lock
inc
mov
loope
inc
mov
icebp
or
inc
xchg
push
test
cmpsb
lock
subl
mov
addb
clc
and
outsl
subb
stos
cwtl
mov
add
fs
test
pushw
fcomps
pop
mov
out
push
xorb
adc
add
cmpsb
mov
xor
xchg
negl
inc
mov
push
push
je
push
jl
cmpsb
add
test
pop
push
popa
mov
adc
mov
test
inc
jne
push
stos
xor
dec
xor
cmp
adc
and
loope
jp
loopne
incl
cld
les
ljmp
push
subl
add
mov
sub
push
add
xor
adc
add
rcll
lods
mov
adc
add
push
adc
xchg
xchg
les
pop
mov
pop
aam
roll
insl
xchg
ds
jle
xor
test
mov
sbb
gs
adc
xchg
jp
pushl
push
andb
adc
cwtl
cmp
adc
jbe
push
loopne
mov
cmpsb
call
mov
loope
cmpsl
nop
dec
xor
pop
add
inc
test
loopne
dec
hlt
push
movsb
push
sub
mov
adc
mov
pop
mov
fwait
mov
pop
add
cmp
xchg
subb
insb
push
jl
jno
add
or
std
in
divb
mov
push
xchg
fucom
push
lea
xchg
nop
test
mov
es
divb
pop
xchg
add
adc
add
lock
push
inc
sbb
mov
lods
mov
psadbw
mov
add
loopne
mov
add
dec
push
jbe
xor
aad
pop
mov
jl
pop
lods
adc
in
sbb
adcb
inc
xlat
call
mov
cmp
scas
jo
xchg
adc
dec
incb
lcall
je
lods
inc
ret
mov
xor
loopne
mov
insl
das
shrl
cmpsb
mov
sub
add
outsl
and
inc
mov
movsb
cmpsl
incl
test
cmpsb
mov
pop
add
mov
in
mov
mov
add
add
add
out
xor
add
mov
test
call
loopne
push
or
cld
or
or
push
add
push
decl
pop
aam
or
xchg
xor
mov
xor
push
and
stc
or
scas
sbb
pop
outsl
fistpll
movsl
mov
sub
in
mov
arpl
mov
xchg
outsb
in
mov
push
in
sti
es
jno
aas
test
push
xchg
mov
dec
xor
fldl
mov
imulb
test
or
add
ret
movsl
lret
inc
or
iret
mov
xchg
lods
or
bound
inc
jecxz
fwait
data16
int
sub
or
xchg
push
mov
sbb
dec
add
rolb
stc
dec
inc
aad
aaa
aam
add
mov
cmpsl
test
xchg
je
xchg
and
mov
jg
imul
jne
and
dec
lret
test
sbb
add
pop
cmc
jl
push
test
mov
test
push
sbb
dec
test
call
test
mov
lret
faddp
inc
adc
int
jbe
mov
aas
add
prefetch
push
mov
push
test
add
inc
repz
repz
repz
adc
imul
dec
ret
repz
sbb
and
sub
cmpsb
mov
shl
repnz
fsts
icebp
repnz
gs
adc
repnz
mov
mov
test
testl
negl
popa
adc
jno
aaa
jg
idivl
add
notl
negl
mull
sub
xor
cmp
shrl
cmp
shl
fdecstp
loope
jmp
testb
mov
mov
mov
notb
pop
div
imul
jno
jns
testb
adc
sbb
imulb
divb
idivb
neg
mov
mov
icebp
fyl2x
icebp
jmp
mov
mov
xchg
icebp
int
cld
int
icebp
icebp
test
icebp
icebp
dec
icebp
push
icebp
pop
icebp
icebp
cld
int
cld
imul
icebp
or
adc
sbb
icebp
sub
xor
cmp
int
lock
lock
f2xm1
lock
lock
xchg
lock
cld
int
lock
lock
lock
lock
lock
int
cld
imul
lock
adc
sbb
lock
xor
cmp
dec
fcomip
leave
repz
fpatan
repz
repz
aaa
cld
ljmp
inc
lods
sub
mov
loopne
xchg
add
cltd
and
test
repnz
repnz
jg
dec
repnz
repnz
repnz
repnz
adc
jg
aaa
jg
and
sub
xor
repnz
std
sar
std
loope
jmp
jle
mov
adc
std
cltd
mov
std
mov
inc
std
dec
std
int
cld
int
std
std
popa
std
imul
std
or
adc
std
cld
int
cld
and
sub
xor
std
sar
cld
sar
cld
loope
jmp
cld
int
cld
cmp
cld
mov
cld
cld
inc
cld
dec
cld
sub
cld
cld
popa
cld
imul
cld
cld
int
mov
mov
and
sub
xor
cld
sar
call
int
jmp
jmp
cmp
jmp
int
incl
dec
call
jmp
sbb
push
call
adc
add
dec
in
add
mov
mov
mov
push
sbb
dec
cli
dec
push
cli
push
cli
pop
cli
sbb
xor
sub
ds
shll
notb
cld
or
scas
jo
std
pop
cld
and
sub
call
mov
lock
jl
fdivr
mov
xlat
add
stc
dec
stc
push
stc
jno
jg
pop
loopne
mov
clc
dec
clc
push
clc
pop
adc
push
std
jg
aaa
adc
clc
xor
sti
lret
sti
in
add
jmp
repz
test
adcl
sti
push
ljmp
mov
popf
divl
sub
insl
idivl
push
add
cli
cmp
std
idiv
pop
mov
mov
repz
sbb
push
rep
repz
and
sbb
ljmp
cld
in
rorb
cs
jge
stc
or
idiv
adc
out
stc
hlt
and
stc
mov
sahf
push
fwait
mov
stc
dec
stc
pop
push
stc
inc
clc
hlt
clc
repnz
cli
clc
addl
out
adc
clc
pop
addr16
jns
cmp
push
add
sti
mov
inc
sti
jns
or
adc
mov
or
cmc
rolb
hlt
fdivp
test
mov
hlt
inc
mov
hlt
gs
hlt
shlb
cld
mulb
mov
pop
lock
sbb
lock
jecxz
data16
repnz
test
jecxz
bnd
add
and
cld
inc
cld
jle
cld
paddb
add
xor
jmp
adc
popf
rorb
mov
and
ss
addl
jg
addb
sbb
je
or
ds
and
pusha
test
das
adc
and
movsb
lock
or
or
es
std
hlt
cld
mov
clc
jmp
push
incl
cmp
loope
mov
clc
push
clc
popa
push
pop
or
outsb
bound
sti
popf
sub
std
xor
fcoms
incl
sub
hlt
scas
notl
testl
dec
lock
add
lock
repz
cld
xchg
cld
add
sbb
fcomip
call
fwait
nop
mov
jmp
cli
xor
xor
add
in
not
in
std
cmp
inc
lock
adc
int3
sti
addb
mov
or
decb
in
add
je
adc
mov
mov
push
sti
cmp
add
hlt
jbe
sbbl
stc
cmpl
inc
clc
clc
mov
adc
rcll
inc
inc
ja
push
dec
mov
lock
cli
push
xor
mov
sti
xchg
inc
cli
mov
sti
daa
sti
adc
and
adc
outsb
das
adc
jp
lock
inc
cld
cmpsb
repz
mov
mov
mov
inc
repz
push
push
adc
jmp
dec
repz
repz
pop
jo
bound
and
jbe
jb
jg
fcomi
jle
jp
push
repz
push
adc
repz
repz
push
sbb
es
jg
repz
cs
ss
ds
bnd
mov
lret
repnz
ficoms
out
loop
out
ljmp
lods
add
adc
repnz
adc
repnz
int
lcall
stos
repnz
mov
mov
cmp
out
repnz
std
add
std
into
std
lret
sar
fdivrp
out
std
out
std
out
inc
xor
repnz
std
cli
std
xchg
std
xchg
jg
ljmp
std
sahf
std
lcall
xor
and
std
mov
outsl
out
adc
dec
std
push
std
push
pop
std
pop
std
data16
bound
push
push
mov
out
std
jb
std
mov
jge
fsubs
add
in
scas
fsubrs
addr16
sub
hlt
aad
shl
div
xor
adc
hlt
push
hlt
push
hlt
ja
hlt
sbb
jp
jg
imul
icebp
mov
test
movsb
lock
push
lock
test
mov
movsb
cs
mov
cmp
shlb
jmp
adc
sar
loopne
mov
cmpsb
mov
adc
stc
fsin
int
icebp
stc
loopne
jmp
std
stc
test
xchg
stc
scas
clc
dec
clc
cmp
mov
or
test
sar
fdivrp
test
cs
cli
mov
cli
and
xor
ds
xorb
and
lods
or
enter
out
adc
mov
xchg
cmc
push
cmc
js
or
jecxz
mov
clc
hlt
jle
xor
lock
stc
testb
popa
sub
repnz
mov
inc
push
pusha
and
into
mov
call
lock
lock
sbb
lock
repz
repz
xchg
repz
andb
outsb
shl
repnz
mov
jp
repnz
repnz
repnz
repnz
repnz
push
mov
mov
add
mov
incb
std
dec
add
jnp
adc
push
fcmovnu
hlt
cmpsb
cmpb
fdivrp
call
cld
add
or
cmp
pop
gs
iret
out
push
and
in
or
nop
adc
lock
jg
pushl
push
fdivr
mov
cltd
ss
insb
decb
das
sarb
stc
rcl
adc
std
clc
xorb
cs
adc
sti
xlat
push
dec
xchg
enter
xor
loope
outsl
cli
test
cmpsl
cli
lods
cli
or
dec
cli
push
and
cli
addr16
insb
cli
pop
adc
cli
and
xor
iret
sbb
in
ds
cmc
icebp
cmc
test
lea
xchg
cmc
xchg
cmc
mov
mov
cmc
or
loope
xor
adc
icebp
hlt
mov
push
icebp
cmp
hlt
cmp
imulb
aam
divl
inc
lcall
xor
icebp
add
jae
icebp
repz
lock
lock
inc
mov
push
and
ret
aam
sub
repnz
fistps
repnz
std
cld
std
or
xor
push
sub
push
sub
pop
cld
mov
lods
cli
adc
cli
sbbl
cmc
mov
ret
not
or
loop
movsl
rol
lock
lock
add
push
pop
lock
lock
adc
sub
cmp
rclb
adc
jo
pushl
push
test
repnz
iret
std
mov
shlb
mov
mov
mov
lcall
push
cld
sbb
into
add
fst
adc
mov
add
lcall
cmp
add
xlat
clc
scas
lcall
jmp
mov
mov
inc
mov
pop
cli
incb
jg
dec
mov
das
xor
stc
lret
add
mov
xchg
stc
cltd
jmp
jg
stc
cmpsb
loop
stc
mov
adc
stc
cmp
ret
clc
rcrb
pop
and
sub
in
hlt
das
clc
add
mull
push
ss
testb
call
xor
push
and
std
sub
repnz
mov
repnz
sub
fstl
call
aaa
pushf
std
mov
xor
adc
call
jo
pusha
cld
push
adc
jmp
sarl
mov
decb
push
enter
out
xor
cwtl
add
mov
mov
adc
add
xchg
clc
mov
into
sti
idiv
cwtl
in
mov
dec
sti
push
sti
or
test
jecxz
loope
jb
adc
pop
jo
ljmp
imul
cmp
or
and
pop
je
neg
lock
mov
cmp
lahf
incb
data16
jae
add
adc
out
in
stc
shrb
lods
stc
mov
stc
push
loope
je
movsl
aam
xchg
xor
inc
testl
incb
repz
jle
repz
icebp
repnz
call
jge
pop
adc
bound
lods
push
adc
lcall
and
ja
add
fdiv
xchg
enter
push
cmc
push
adc
addr16
push
hlt
sbb
and
or
call
icebp
lock
sahf
testb
ja
sub
dec
mov
dec
icebp
push
sub
sub
icebp
cs
push
loopne
lock
test
repnz
pop
mov
lcall
decb
inc
mov
out
stc
pop
stc
xor
fmuls
loopne
pop
ucomiss
add
cli
fsqrt
and
jl
in
outsl
fwait
and
push
sar
int
pushf
divl
mulb
test
sub
aaa
ficoml
dec
std
dec
jg
sbb
in
pop
dec
jae
cmp
in
mov
mov
push
popa
pop
push
test
and
cmc
push
cmc
xchg
jl
enter
idivl
jecxz
sub
add
sub
mov
fistpl
lock
repz
add
enter
repz
fdiv
mov
repz
in
call
cld
adc
repz
xor
std
in
decl
nop
repz
repz
and
repz
adc
repz
push
repz
repz
out
div
pop
repz
adc
rep
repz
jl
js
repz
add
or
or
adc
adc
sbb
sbb
filds
ret
adc
xor
cmp
cmp
sub
push
cld
mov
dec
repnz
std
mov
jl
add
hlt
arpl
inc
dec
ljmp
or
out
out
div
incb
pop
imul
incb
or
clc
add
es
fdivr
out
mov
idiv
loopne
mov
xchg
stc
xchg
stc
mov
or
daa
stc
xor
aas
cmp
sar
clc
lret
pop
fwait
push
icebp
clc
sub
adc
clc
adc
pop
clc
sbb
ljmp
clc
outsl
inc
pop
lds
sti
or
and
sar
push
test
or
push
gs
and
pop
add
cmc
ljmp
pop
cmc
rorl
ja
fcomps
hlt
xchg
hlt
mov
hlt
lods
adc
and
cld
jle
notl
outsl
pop
cmp
testl
negb
testb
add
push
decl
cld
fbstp
jge
xor
lock
lock
pop
ret
sbbb
pop
repz
clc
repz
adc
icebp
repnz
call
and
cld
ljmp
lods
cld
mov
dec
cld
mov
mov
pop
mov
nop
lcall
adc
push
sti
pushf
cli
lcall
sub
inc
add
sub
add
divl
pop
mov
inc
mulb
jae
or
adc
adc
test
dec
lock
jle
push
fsubl
repz
repz
push
push
pop
shl
inc
clc
push
repz
jl
repnz
std
xor
lds
mov
in
test
lcall
shlb
loope
jg
incl
adc
popf
shrb
stc
jmp
cld
pop
shrb
cmc
cli
inc
rcrl
xor
pop
js
pmaddwd
and
decb
cmc
shl
loope
jle
fdivr
in
xchg
hlt
lods
adc
hlt
jno
hlt
adc
fcomip
mov
adc
hlt
int
fdivp
loope
out
idiv
testl
mov
insb
divl
sbb
shl
pop
add
sar
ja
lcall
lock
flds
fwait
adc
jp
push
repz
pop
mov
test
repnz
jecxz
inc
ret
cld
fisttps
jl
popf
clc
mov
je
orb
mov
sti
out
xor
outsl
push
sub
push
xor
cli
cmc
addr16
pop
mov
adc
cmc
hlt
into
hlt
hlt
outsb
hlt
out
pop
hlt
out
mov
testl
data16
cli
lock
loopne
lock
adc
daa
ljmp
fs
pop
jge
lea
jle
dec
add
inc
outsb
fdivrs
stc
leave
sub
stc
sar
loope
dec
fisubrl
mov
mov
lahf
adc
mov
stc
mov
and
jle
add
sbb
clc
iret
clc
out
sub
jmp
clc
and
ja
clc
js
psubb
clc
xor
xlat
sti
incl
cmp
sti
sahf
sti
cmpsl
sti
or
insl
sti
lds
adc
into
cli
aam
shlb
xchg
stos
adc
push
repz
jg
cli
pop
cli
insl
cli
jne
jae
jns
cli
or
add
mov
cli
cmp
and
cmc
int3
cmc
cmp
jmp
cmc
div
repnz
clc
cmc
orb
scas
pusha
pop
add
dec
cmc
insl
cmc
push
push
sbb
cmc
or
cmc
xor
loop
xchg
hlt
push
hlt
insl
hlt
imul
aad
adc
or
mov
testl
mull
pop
adc
idivl
fisttps
in
idiv
testb
xor
or
cs
in
lock
repz
lahf
bnd
incl
in
xor
cld
or
jge
push
adc
fst
ficoms
sarb
loop
add
xchg
jmp
and
incl
sar
mov
push
pop
cld
sbb
int
add
dec
stc
nop
stc
mov
stc
sub
mov
xor
loop
dec
inc
adc
clc
call
call
adc
and
fwait
bound
pop
sti
pop
mov
xchg
fs
cmp
cli
inc
cli
and
pop
cli
push
loope
xor
loopne
sub
into
cmc
aad
and
mov
dec
cmc
add
cmp
decl
dec
hlt
shrl
test
pusha
sbb
hlt
or
jg
sbb
daa
hlt
sub
xor
lret
testl
jg
ss
add
test
xchg
imulb
push
sub
inc
loopne
sub
iret
icebp
in
icebp
xchg
mov
icebp
ja
clc
mov
pusha
test
lock
das
repz
cmpsb
mov
js
vunpcklps
sbb
cmp
outsl
call
std
xor
cld
movsb
add
jg
into
decl
mov
lcall
ja
jl
lcall
sbb
add
iret
dec
out
out
adc
cld
cli
incb
pop
jl
mov
sub
stc
xchg
std
in
mov
pusha
mov
ret
sti
in
cli
add
cli
test
jp
and
and
xor
push
add
xlat
or
cmc
out
mov
out
aaa
cld
aaa
std
mov
cmc
and
cmp
test
xchg
pusha
insl
mov
push
test
insb
testb
imulb
mov
cmp
fdiv
scas
icebp
mov
and
ficoms
decl
andb
repnz
std
out
xchg
and
adc
dec
js
inc
std
cmpb
repnz
sti
insb
call
stc
xor
add
loopne
and
xor
fdivrp
and
loopne
mov
xchg
cli
bound
aad
das
xlat
in
xchg
xor
cmc
mov
sti
cmc
xchg
mov
cmpsb
cmc
mov
cmc
mov
mov
mov
cmc
pop
add
push
cmc
sub
cmpsl
scas
jb
jo
idivl
sbb
out
adc
cmc
sub
pusha
ficoms
loopne
shl
out
icebp
inc
ljmp
push
icebp
and
lret
rep
rep
inc
pusha
sarl
mov
daa
or
xabort
popf
lock
mov
push
std
pop
adc
sub
adc
sarb
cld
data16
sub
data16
dec
cld
jae
or
lcall
filds
lods
call
insl
jmp
adc
inc
inc
dec
std
mov
jo
or
lock
stc
outsb
stc
js
adc
in
clc
ljmp
ss
sbb
sti
lahf
sti
push
sti
mov
xchg
lods
jg
mov
and
xor
jo
jmp
mov
mov
mov
mov
cmc
movsb
cmc
mov
add
mov
mov
dec
cmc
push
mov
pop
rorb
andb
cmc
je
jae
jle
add
or
adc
mov
adc
sub
aaa
inc
cmc
xor
rorb
inc
hlt
shl
cmp
jg
jo
in
adc
sub
hlt
std
lock
xchg
sbbb
sahf
hlt
movsl
add
or
stos
hlt
mov
push
hlt
inc
hlt
dec
hlt
dec
das
cli
fstpt
pop
hlt
fs
arpl
hlt
jne
jo
cmp
imul
hlt
sbb
and
pop
xor
das
js,pt
in
test
or
neg
neg
mul
add
push
call
idiv
idiv
adc
test
xorl
notl
mull
ljmp
in
idivl
dec
notl
xor
data16
lock
jnp
add
push
notl
hlt
pop
test
dec
sbb
xor
inc
shll
inc
negb
cs
adc
push
push
mov
call
dec
sub
sti
jp
repnz
push
add
push
add
pop
nop
cld
ljmp
add
divb
testb
enter
repz
mov
outsl
repz
add
repnz
repnz
fildll
dec
insb
sbb
test
sub
pop
std
outsb
add
jg
pop
sub
cmp
rcll
cld
out
cld
xchg
cld
add
cld
push
call
jne
push
sbb
sahf
cmpsb
inc
pushf
push
inc
in
cmc
shlb
xchg
clc
mov
test
dec
adc
adc
clc
fbstp
xchg
mov
pushf
clc
lcall
cmp
clc
sbb
cmpl
sti
xchg
sti
mov
dec
sti
sar
jl
cld
ljmp
clc
or
xor
cmp
cmp
cli
inc
add
push
mov
or
adc
sub
test
orb
mov
push
adc
nop
sub
dec
inc
cmc
lods
adc
pop
add
pop
hlt
hlt
mov
sbb
jo
mov
in
idiv
testl
aaa
add
sahf
sbb
push
stos
decl
pop
imulb
aam
lock
adc
repnz
push
cmp
aad
sar
addl
jnp
aam
shrb
push
push
imul
gs
sub
mov
clc
rcll
inc
clc
adc
inc
xorl
adc
xor
jbe
mov
jb
popa
cmc
jno
push
push
adc
pusha
xor
lea
icebp
adc
adcl
std
mov
push
adc
xor
add
hlt
xor
and
mov
adcl
jae
nop
pop
push
mull
mov
jo
sar
add
mov
xchg
lcall
add
and
jmp
adc
lock
cmp
shl
icebp
leave
inc
lock
or
ljmp
stos
in
xchg
decb
loopne
sub
xor
mov
ljmp
add
jmp
push
jnp
dec
scas
mov
aas
adc
pop
mov
add
mov
fdivrs
mov
mov
inc
adc
add
je
ds
nop
mov
jl
cmpb
lahf
inc
sbb
xor
and
ror
mov
and
mov
or
sub
mov
mov
mov
ljmp
adcb
xor
fdivrp
lock
xchg
pop
cs
incl
std
lods
loop
sarb
xchg
inc
sbb
mov
add
push
rorb
pop
add
test
xor
movsl
ljmp
movsl
jmp
es
add
dec
inc
xor
or
jg
rorb
daa
add
fstps
and
dec
xor
fiadds
fdivs
cltd
push
fistl
cli
fwait
sub
mov
push
fwait
stc
test
xor
jne
decl
push
add
mov
jge
gs
mov
in
js
call
decl
test
jle
add
aam
out
xor
stos
test
and
inc
or
decl
add
arpl
into
inc
xchg
add
lahf
fisubrl
push
out
rorb
aaa
cld
call
push
adc
push
jb
add
sbb
in
pop
mov
lcall
mov
scas
add
jae
popf
imul
cmpsl
movsb
test
cmc
int3
mov
xchg
stc
sbb
or
cmp
pcmpgtd
into
scas
jno
aaa
cld
jmp
add
movsb
xor
je
jb
dec
jmp
data16
lods
sbb
incl
ret
xchg
mov
dec
pop
outsl
dec
std
add
mov
mov
mov
clc
fwait
hlt
pushl
add
add
dec
pop
stos
xor
arpl
mov
ud0
push
adc
dec
imul
in
mov
mov
add
jmp
clc
cs
push
cmp
xchg
es
dec
xlat
hlt
push
add
or
mov
mov
push
cmp
mov
lret
hlt
dec
push
lret
call
mov
daa
fdivr
or
fldcw
add
inc
jb
testl
push
clc
sub
or
aam
or
ja
mov
adc
xchg
jmp
sbb
cmp
fidivl
stos
cs
push
dec
add
xor
mov
add
sub
mov
test
push
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
add
mov
adc
aas
pushl
lret
adc
xor
loope
iret
mov
xor
std
call
xchg
xor
dec
int
addr16
xchg
mov
shl
cwtl
outsl
mov
sti
in
dec
adc
xchg
xchg
pop
cwtl
ret
sbbb
add
sarb
inc
adc
pusha
push
arpl
leave
adc
push
jge
pop
jge
add
jp
inc
int
divl
out
imul
jnp
pop
ret
jno
pop
adc
jns
pop
ret
pusha
sub
mov
jmp
mov
sbb
adc
jne
push
lret
arpl
push
loop
mov
push
xlat
inc
cmp
popa
sub
jmp
pop
iret
jle
pop
jg
in
jo
xchg
inc
xlat
inc
ss
dec
je
pusha
xchg
mov
ror
popa
jns
inc
push
or
cmp
pusha
sti
cmp
xor
movsb
dec
mov
lods
xchg
out
inc
in
jg
xor
xor
jns
push
iret
inc
cmp
lret
fs
lcall
ficoms
mov
cmp
dec
xor
and
inc
cs
lret
pop
cmp
insb
sahf
divl
inc
push
xchg
mov
xchg
ret
aaa
jl
fldt
dec
jge
pop
lea
pop
int
and
and
mov
adc
loope
loopne
push
into
ja
inc
cs
jb
ja
inc
shll
lock
mov
lret
inc
inc
pop
out
iretw
negb
hlt
jbe
xor
mov
push
test
loopne,pt
push
das
xor
adc
gs
jnp
pop
mov
add
es
jnp
iret
jo
lods
dec
pop
out
xlat
adc
pop
mov
push
cmp
hlt
push
xchg
fstpl
out
je
in
fwait
loope
pop
movsb
dec
push
inc
mov
adc
mov
adc
lcall
mov
adc
sbb
mov
aam
xor
daa
shlb
jg
idivb
adc
xor
lods
sbb
push
inc
mov
adc
leave
das
push
ret
clc
or
incl
dec
xchg
cwtl
dec
int3
sub
mov
push
or
jns
and
add
xor
add
push
xchg
incl
mov
mov
sub
and
stc
lods
fs
and
cwtl
mov
jle
jmp
sbb
es
lods
xchg
pop
sub
imull
jp
stos
cwtl
ss
fbstp
mov
cmc
cwtl
sbb
in
sub
dec
jno
addr16
scas
gs
outsl
jle
lods
daa
mov
push
loopne
fcompp
decl
mov
lcall
lcall
mov
mov
mov
out
clc
sub
je
jno
fs
mul
lock
xchg
sbb
std
dec
in
cmp
pop
jmp
out
xlat
push
pop
addr16
lcall
cmp
movsb
inc
pop
in
stc
ret
movsb
in
scas
inc
out
ret
adc
jne
incl
std
int3
cmpsb
jae
and
aam
pop
stos
push
jg
rol
pop
mov
mov
ljmp
ffree
je
cli
jnp
out
in
jp
adc
jle
lods
fisubrs
mov
daa
sub
movsb
jecxz
xor
sub
adc
mov
cmpsb
lcall
xchg
test
lods
sub
and
sahf
std
pushl
cld
cli
xor
pushf
jmp
cmp
push
xchg
gs
movsb
mov
cltd
push
mov
iret
lcall
scas
xchg
push
aas
mov
lcall
sarl
adc
pop
bound
push
inc
sub
jo
pop
lock
mov
adc
out
sub
sbb
xlat
cmp
lcall
mov
mov
xchg
fucom
push
les
cltd
shlb
fldpi
sub
adc
call
adc
adc
test
cmp
sub
aaa
cld
mov
sbb
aaa
cwtl
inc
cmp
daa
lea
ljmp
icebp
out
shrb
popf
test
cwtl
push
sub
sub
subb
sar
out
cmc
push
mov
jbe
mov
or
mov
icebp
jg
cmp
lahf
rcll
push
addr16
add
cli
stos
out
mov
repz
adc
pop
cld
mov
pushf
icebp
push
mov
adc
mov
jmp
push
out
nop
jp
xchg
scas
pop
xchg
inc
in
push
xchg
lods
pop
stos
cmp
lahf
mov
or
lods
jecxz
in
mov
outsb
data16
popa
decl
sarb
push
pushf
ds
cmp
adc
subl
out
out
mov
pop
push
lcall
popa
sbb
pop
call
adc
adc
jmp
push
das
fs
clc
das
ds
in
jge
mov
pusha
lcall
jg
jg
sub
lea
xchg
in
pusha
pop
or
flds
gs
xor
cmp
jmp
ss
leavew
mov
jae
xor
andl
repz
mov
push
push
outsl
decb
call
insb
push
xor
inc
inc
add
push
imul
addr16
push
dec
imul
mov
push
push
or
outsl
and
fbld
es
jno
js
imul
out
dec
aaa
jb
dec
pop
pop
push
add
dec
insl
gs
outsl
push
add
je
jo
jg
incl
push
arpl
add
xor
push
aaa
add
push
push
inc
insb
dec
imul
add
test
push
shll
push
jae
push
dec
xor
inc
pop
dec
add
or
jbe
push
inc
xor
push
dec
add
jo
inc
fstpt
inc
js
add
inc
xor
push
inc
push
inc
push
push
dec
push
je
inc
cmp
mov
push
cmp
arpl
xor
dec
jp
outsl
outsl
pop
or
jp
imul
addr16
jp
gs
jbe
das
adc
inc
ja
dec
dec
xor
pop
xor
aaa
inc
dec
or
cmp
add
push
imul
dec
sti
idivb
dec
outsb
inc
mov
push
outsb
dec
jae
imul
jb
xor
jg
inc
data16
inc
popa
imul
push
lcall
cmpb
push
pop
dec
imul
add
dec
rcr
push
jb
bound
aaa
adcb
imulb
add
data16
dec
dec
push
jp
je
jbe
popa
jbe
dec
add
sub
push
push
ss
inc
dec
push
xor
pop
rcrb
jae
inc
push
push
push
dec
push
data16
jne
aaa
jae
clc
sbb
jae
dec
inc
fdivrl
inc
jo
dec
push
sub
or
fistps
jns
dec
push
dec
jbe
nop
mov
dec
or
dec
add
sub
push
dec
add
dec
add
shl
bound
dec
insb
outsb
fs
jb
inc
xor
sbb
sbb
insb
jns
js
jp
push
xor
sbb
inc
outsb
push
ss
popa
or
das
clc
push
js
outsb
push
push
js
jns
cwtl
jg
mov
je
inc
inc
imul
inc
inc
add
xor
dec
pop
inc
jg
pusha
sub
bound
inc
cmp
push
pop
pop
push
popa
ss
xor
insb
dec
inc
xor
inc
jo
add
push
dec
out
popa
dec
inc
adc
jo
xor
dec
mov
notb
pop
jno
jne
jo
inc
pop
adc
push
xor
popa
arpl
fildl
fs
pop
jne
dec
outsb
bound
xor
xor
rorl
push
xor
dec
imul
push
jle
jae
inc
lock
ss
xor
ja
sbb
gs
xchg
bound
dec
addr16
insb
inc
inc
insb
dec
dec
inc
xor
insl
inc
jo
inc
fs
repnz
jbe
inc
sbb
in
push
ss
add
clc
push
push
cmp
jbe
xchg
es
jle
mov
jl
push
inc
push
gs
cmp
sub
or
push
jns
xor
subb
xor
pop
push
mov
adc
push
ja
mov
popa
popa
pop
lret
aas
clc
jbe
push
xor
xor
push
cmp
je
fs
dec
outsb
dec
orb
mov
dec
inc
dec
push
mov
je
xor
cmp
hlt
dec
ret
dec
sbb
and
jle
ljmp
sbb
ja
insl
fidivs
imul
mov
sbb
xchg
imul
hlt
add
inc
push
push
push
js
push
mov
insb
jne
ret
inc
mov
arpl
inc
cmp
insb
inc
imul
ret
dec
jns
pop
mov
push
dec
pop
inc
jo
add
mov
push
dec
and
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
sub
jnp
in
addb
add
dec
add
stos
add
js
or
add
fs
imul
js
add
inc
gs
jb
arpl
sti
fildl
jae
add
push
imul
xor
sti
je
arpl
jne
push
outsb
je
push
fsubrp
insl
push
gs
js
and
jae
insb
gs
insl
aas
sti
mov
sbb
outsb
fs
je
insl
aad
popa
jae
inc
jle
jb
rcr
mov
imul
insb
push
popa
imul
push
pusha
addr16
bound
inc
jb
lcall
push
popa
data16
insb
outsl
jae
dec
je
fldt
in
pusha
inc
in
gs
push
test
jne
inc
arpl
test
cmp
and
fs
mov
and
push
addr16
push
dec
dec
cmpb
cmc
mov
int3
push
inc
into
lods
loopne
imul
dec
dec
inc
xor
outsb
adc
loope
ss
dec
addb
insl
push
and
jg
lret
cmpl
loop
sti
and
fstpt
pop
dec
gs
bound
popa
sbb
or
push
ds
insb
mov
out
or
jo
jb
popa
arpl
dec
cmpsb
adc
adc
je
data16
xchg
fwait
or
fwait
mov
xor
sub
add
fstpl
imul
cld
stos
ror
jo
xchg
add
add
cwtl
inc
inc
and
add
and
addr16
xchg
push
sub
inc
insb
out
ret
sbb
sub
sbb
mov
push
insl
mov
je
jo
cwtl
add
lods
and
addr16
outsb
push
jae
shll
ror
sbb
test
rclb
jne
push
mov
movsl
rorl
pop
jge
leave
mov
jne
aas
test
fisttpl
fnstsw
pop
dec
inc
pop
mov
mov
repz
popa
fimull
int
push
sub
push
inc
and
pop
push
xchg
test
shll
sbb
popf
in
rorl
popa
or
lods
sub
lret
xlat
xchg
stos
pop
insb
push
dec
mov
loop
popa
insl
cli
push
imulb
jbe
cmpsl
lods
lahf
lret
test
and
lock
cmpsb
das
loope
shll
mov
out
lods
push
lahf
in
sbb
insl
mov
cld
mov
insl
jl
sub
mov
mov
roll
pushf
test
std
adc
push
inc
push
pusha
cmp
sub
or
push
pop
cmp
pusha
xor
cmp
aaa
loopne
sbb
icebp
add
push
jo
sbb
jne
cmpsb
arpl
push
mov
push
xchg
push
dec
and
stos
mov
loopne
mov
pop
out
insb
pop
add
pusha
test
pop
jae
push
push
pusha
mov
lea
pop
mov
sti
mov
push
fbstp
pop
xor
xlat
fists
jecxz
jns
mov
insl
inc
jne
arpl
xor
ss
mov
or
add
dec
or
push
loop
bound
or
push
stos
loop
mov
mov
popa
add
pusha
es
push
inc
fisubrl
fnsetpm(287
daa
subb
pusha
ja
push
ljmp
sub
dec
mov
sub
dec
push
sub
jae
and
sarl
ret
push
enter
inc
int3
mov
or
push
ss
sbb
mov
push
xchg
cltd
lods
popa
repnz
js
xor
inc
push
shr
or
mov
sub
sbb
lods
bound
arpl
jno
stos
jo
adc
and
fisubl
lea
cmpsl
mov
loop
pop
dec
xorl
push
fdivrl
xchg
stos
push
jno
mov
push
pusha
or
test
push
add
flds
sbb
leave
push
sbb
jno
leave
push
adc
pop
mov
lods
cmp
pop
inc
lods
mov
shrl
cld
fwait
bound
imul
mov
push
aad
mov
nop
inc
or
dec
pop
push
mov
ret
xchg
dec
ss
sub
ret
sbb
push
lea
rcrl
insl
gs
push
and
aaa
push
fiadds
pop
xchg
in
push
outsl
data16
or
bound
aam
jne
push
imul
mov
jb
lcall
lds
pop
sub
inc
mov
cmp
cmpsl
outsb
outsb
mov
dec
add
scas
adc
loopne
popl
scas
pop
nop
add
in
gs
fimuls
pop
xor
and
ret
ucomiss
jae
add
fcmovu
add
lea
mov
sub
outsb
mov
add
and
addb
push
add
and
idivb
popa
sbb
nop
push
and
dec
mov
add
push
cmpsb
dec
or
pusha
pop
dec
imul
cmp
xchg
or
push
daa
or
cli
test
xchg
aaa
sbb
mov
adc
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
inc
or
add
add
in
add
add
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
mov
inc
or
aam
add
in
add
add
add
add
add
add
add
enter
in
inc
or
aam
add
in
add
add
add
add
add
add
add
lock
add
dec
or
aam
add
in
add
add
add
add
dec
add
dec
add
add
or
or
inc
and
jecxz
adc
fiadds
flds
mov
sti
xor
ja
subb
test
hlt
data16
scas
push
or
jg
add
ja
leave
push
inc
addb
fbld
mov
and
ss
loopne
sbb
xor
insb
pop
jle
daa
xchg
add
ljmp
adc
fldt
shrb
lahf
push
cmp
notb
bound
lods
cltd
rcr
jecxz
mov
adc
dec
imul
je
loop
sbb
mov
mov
add
repz
bnd
xchg
add
imul
xchg
test
jbe
mov
dec
mov
sub
mov
mov
sub
repz
xor
inc
mov
jno
mov
leave
dec
adc
or
sub
or
pop
in
xchg
sub
mov
shlb
aam
xchg
mov
add
pop
and
dec
aam
add
addr16
out
aas
pop
lods
xchg
sub
jp
roll
cmp
xchg
push
lret
stc
popa
lret
arpl
or
testl
sub
mov
xchg
push
push
jle
cmp
mov
emms
push
dec
pop
sub
fnstenv
jo
andb
mov
sbb
cmpsb
leave
inc
dec
loop
call
in
dec
sub
jo
jne
imul
icebp
mov
jecxz
mov
xor
pop
inc
data16
movb
sarb
ret
sbb
push
mov
xor
in
popa
or
loop
pop
xchg
or
shl
adc
xchg
outsb
mov
into
sbb
loop
jge
cmp
or
or
aam
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
or
call
add
add
dec
or
add
or
cs
or
or
or
cmp
dec
dec
or
pop
dec
or
push
dec
or
test
add
add
xchg
dec
or
add
add
pushf
dec
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
gs
imul
je
jne
inc
insb
gs
outsb
jne
