in
sub
pop
jo
jne
add
add
sub
cmp
fistpl
or
lret
cli
push
enter
orb
insb
data16
das
lret
cmp
arpl
dec
popf
lahf
lods
movl
scas
fldt
push
shl
in
push
ljmp
push
je
pop
sbb
stc
adc
pushl
xor
dec
insb
xchg
jecxz
mov
lret
adc
dec
xchg
jne
jl
call
dec
sub
dec
mov
es
or
jmp
mov
sti
jle
incl
aad
insb
or
pop
sbb
inc
or
in
and
pushl
gs
out
gs
sub
pop
cmpsl
test
fistpl
imul
inc
mov
aad
pushl
int3
cmpb
mov
sti
je
and
xchg
jbe
loopne
jnp
xchg
addr16
sbb
out
cmpsl
insl
adc
imul
xchg
cmc
and
orb
decl
hlt
rcrb
lock
dec
inc
loop
and
jno
xchg
into
mov
fidivs
jno
fnstenv
mov
repnz
mov
xchg
lahf
decl
dec
pop
in
inc
lea
arpl
pop
and
fcomip
je
xor
mov
mov
ljmp
mov
push
std
mov
cmpsb
jmp
scas
and
jecxz
fucomi
inc
cmp
movsl
daa
int
pop
and
xchg
sbb
xor
jl
push
aaa
orl
cmp
fisttps
mov
push
orl
mov
inc
push
sbb
push
andl
incl
jo
xchg
lahf
cwtl
iret
dec
push
xchg
lds
enter
rcl
loopne
push
shrb
mov
jmp
mov
xor
lret
mov
mov
jecxz
dec
mov
movsb
repnz
mov
dec
sbb
cmp
xchg
pusha
jb
add
mov
cmp
ljmp
cs
pop
lret
sub
in
nop
test
pop
daa
popa
aaa
incl
adc
jmpw
mov
push
pop
mov
jecxz
ljmp
push
mov
lcall
xchg
mov
sbb
and
mov
xchg
aam
sbb
add
cld
lcall
sub
and
xchg
adc
push
js
int
jge
jl
mov
lcall
pushl
ljmp
lcall
std
rcrl
lods
sbb
push
cld
jmp
inc
xchg
cltd
ret
test
adc
mov
in
adc
push
or
pop
out
jmp
inc
jo
adc
mov
pop
hlt
push
ret
mov
es
mov
xchg
lret
mov
add
fwait
push
push
xchg
mov
push
xor
jno
cmp
frstor
cmp
xor
daa
in
enter
cld
enter
jge
or
push
dec
and
fmull
pop
cmp
out
inc
sbb
push
jns
inc
inc
mov
lahf
cmp
mov
fdivrp
pushl
pop
jae
push
mov
mov
mov
adc
push
mov
loope
and
dec
jmp
mov
adc
nop
mov
xor
movsb
jge
int
push
mov
mov
call
and
push
daa
aaa
daa
pop
outsl
shrb
inc
out
dec
lret
pop
inc
negb
mov
f2xm1
jns
in
lea
jne
push
outsl
sbb
xchg
dec
ja
scas
mov
es
push
pop
sbb
mov
int
xor
cli
jmp
call
negl
into
imul
fninit
iret
lret
cmpsl
cli
or
sbb
stos
mov
into
loop
xor
mov
push
push
enter
pop
mov
out
sbb
xchg
int
sub
pop
dec
and
lcall
filds
lret
push
loop
push
jne
enter
adc
std
repnz
loope
jg
pushl
mov
outsb
lcall
mov
sub
jmp
aas
fiadds
dec
dec
jmp
rcl
sub
subl
lods
push
out
push
jle
cmp
jne
jae
mov
bound
hlt
and
inc
daa
mov
mov
pop
movsb
testb
test
push
enter
sbb
jo
stc
rcr
stc
clc
loopne
jecxz
cmp
mov
addr16
scas
mov
and
cmpb
lcall
mov
loop
lods
ljmp
xor
fwait
shrb
fstpl
outsb
push
sbb
test
sar
ljmp
test
mov
mov
add
push
or
notb
call
pop
popa
xchg
out
xor
shl
outsl
into
sbb
out
or
push
mov
dec
pushl
fidivrl
cmp
cs
arpl
lea
xchg
xor
imul
decl
mov
sub
sub
loopne
mov
xor
and
insl
sti
fsubl
lock
jmp
sbb
mov
sbbb
in
dec
pop
or
cltd
std
sub
mov
or
decl
push
imul
fisttpll
push
jae
test
jp
inc
inc
insb
int
notl
push
add
mov
jmp
pop
mov
ret
dec
fs
push
scas
add
sbb
rorb
sar
frstor
and
incl
adc
mov
jo
dec
test
cwtl
fst
cmp
mov
popf
xor
mov
call
ljmp
pop
push
pop
inc
push
push
aas
push
arpl
sarb
mov
jmp
and
xor
dec
sub
aas
jbe
int3
fstp
into
scas
stc
pushf
inc
in
pusha
lahf
inc
jmp
jecxz
adc
cmp
push
stos
pusha
mov
and
lods
ficomps
test
xchg
jecxz
lcall
ljmp
test
rcll
repz
adc
cmpsl
test
decl
mov
jle
in
add
add
outsl
pop
dec
dec
push
lods
aaa
das
adc
mov
call
mov
call
fmulp
enter
dec
fs
divl
jge
stos
ljmp
out
fptan
xchg
lea
mov
imul
in
push
pushl
lcall
outsb
popa
push
cltd
sbb
push
pop
jp
cmpsb
outsl
dec
pop
jmp
jg
mov
hlt
mov
test
scas
push
sub
pop
enter
out
ljmp
or
pop
mov
fbstp
sub
gs
dec
and
es
pushl
jae
lahf
xor
jge
filds
ja
rcl
push
sahf
add
mov
cmc
mov
loop
fcomi
mov
out
outsb
pop
sbb
fwait
jbe
pop
mov
mov
out
clc
jmp
insl
sub
jno
sub
int3
sub
sub
call
mov
loop
repz
xchg
mov
fyl2x
loop
aas
fs
aaa
cld
ljmp
int3
ja
sub
andl
or
inc
sub
or
jmp
imul
jg
fwait
aam
movsb
jp
add
push
adc
add
add
ret
dec
daa
div
test
inc
idivl
xorl
popf
mov
push
bound
fildl
jmp
xor
mov
cmp
lods
sub
shll
lods
mov
icebp
int3
dec
xchg
mov
fnclex
daa
dec
lock
js
ljmp
stos
xacquire
sub
cmpsl
mov
jg
mov
lret
decb
jb
jnp
insb
loop
push
push
and
aad
mov
jle
jp
xchg
cmp
insb
mov
sahf
int3
mov
jle
xchg
pushl
mov
jb
and
mov
pop
jns
aas
mov
inc
pop
jmp
adcb
ljmp
mov
dec
stc
jl
cmp
ret
ja
inc
add
mov
enter
jbe
pop
mov
inc
mov
out
lcall
mov
mov
add
int
cwtl
rcll
cmp
dec
icebp
shlb
adc
xchg
adc
shl
push
inc
sbb
clc
daa
sbb
or
xchg
sub
fcomip
pop
jge
sbb
jnp
pop
and
mov
mov
add
call
push
or
pop
pop
mov
push
cmc
jbe
and
pop
inc
sub
incl
xchg
mov
sbb
or
popf
dec
or
loop
imul
mov
jmp
xlat
out
ja
mov
fs
xchg
popf
fwait
dec
mov
sub
pop
jp
ja
decl
jg
jmp
or
cmp
cmp
inc
add
fldt
ret
mov
mov
jle
mov
add
loopne
xor
sub
mov
out
mov
xor
lret
sbb
inc
cmp
jg
and
mov
jle
mov
mov
int
test
mov
mov
lds
test
dec
mov
insb
mov
sbb
add
mov
mov
jne
out
cltd
mov
dec
in
lret
cmp
fisttpll
push
mov
xchg
mov
mov
add
add
mov
sub
adcb
into
mov
das
rol
sub
fwait
aas
cmp
cmp
add
inc
iret
cmp
and
test
cltd
out
insl
jne
pusha
mov
loopne
ret
push
push
sbb
clc
js
mov
add
lock
and
jmp
xor
mov
jmp
popa
mov
adc
mov
in
adc
add
sub
sub
xchg
fcmovb
shl
cmp
mov
cmp
push
addl
mov
mov
mov
lsl
adc
mov
loop
jmp
mov
push
sarb
test
shll
insl
sub
mov
jmp
fldenv
xor
mov
movsb
add
dec
push
sub
xor
dec
push
std
test
push
add
sub
jg
or
cmp
mov
xor
pushf
test
xor
call
test
pop
push
inc
insb
cmp
xchg
aam
shlb
ss
xor
outsb
in
inc
sar
repnz
test
call
int
icebp
scas
xchg
inc
jmp
lds
adc
mov
xchg
lcall
or
mov
lret
adc
into
push
fidivl
daa
scas
loope
ljmp
loop
xchg
inc
pop
hlt
cmovle
ljmp
xchg
cmp
xchg
mov
xor
lcall
adc
and
adc
jb
and
cmc
or
dec
adc
pop
call
mov
xchg
stc
addr16
or
add
cmp
and
inc
pop
push
mov
push
adc
push
inc
jmp
fadd
push
lret
jle
in
xor
incl
pop
or
sahf
repz
pop
add
cld
mov
dec
inc
or
or
pop
xchg
lret
adc
mov
sub
pop
xor
mov
inc
mov
mov
mov
cmc
fisttpll
ficoml
cmp
xlat
mov
xchg
sub
insl
roll
pop
addr16
mov
andb
and
pop
xchg
pop
mov
emms
xor
out
mov
xor
into
fimuls
pop
jmp
pop
mov
xchg
cmp
js
or
sub
out
xchg
sub
pop
sub
stos
inc
add
push
ret
add
dec
mov
shr
ljmp
mov
sbb
inc
mov
push
jno
fdivs
adc
or
inc
inc
push
lea
orb
inc
add
nop
push
add
add
andb
sub
decl
adc
sbb
stos
add
jb
add
add
add
stos
inc
dec
add
loop
push
xor
decl
or
add
andb
add
test
sbb
add
push
add
orb
and
push
leave
shlb
sub
add
and
add
sub
add
add
subl
inc
add
bound
add
nop
inc
add
inc
add
push
ja
jg
rcr
cmpsb
leave
adc
adc
xchg
xchg
test
shll
dec
push
fsts
fadd
cld
mov
loop
xlat
and
xchg
cmp
out
loopne
sbb
jecxz
xchg
mov
lcall
pop
inc
mov
push
pop
arpl
cld
inc
cmovnp
int3
jge
sbb
decl
int
arpl
cwtl
mov
jbe
dec
add
xchg
jo
mov
ss
neg
mov
and
jmp
insl
xor
or
dec
nop
pushf
hlt
ljmp
lret
add
dec
aas
test
xchg
dec
cmc
pop
dec
adc
jecxz
jb
rcl
fsubl
outsb
ret
cld
sti
outsl
jmp
inc
sbb
mov
dec
in
inc
cwtl
outsb
repnz
push
outsb
inc
and
and
xor
decl
addr16
push
fisubrl
push
fldenv
mov
mov
mov
insb
out
sbb
cmpsb
test
push
aas
mov
cmp
int3
pushf
jo
into
testl
repnz
dec
sahf
add
xor
call
cmpsb
push
xor
lret
add
or
loopne
mov
and
mov
faddl
mov
sbb
adc
mov
jmp
push
inc
pushl
pop
inc
aaa
fadds
adc
pushf
xchg
mov
inc
imul
add
aas
out
cli
repz
js
call
lahf
leave
dec
inc
shll
or
mov
push
ret
push
lahf
out
sbb
andps
ljmp
popa
sbb
push
sbb
or
insl
lcall
inc
jns
and
and
sub
dec
lock
push
in
mov
outsb
fiaddl
or
imul
inc
fmul
sbbl
ss
pop
mov
push
cmpsb
repnz
aaa
lret
cs
aad
cmp
add
mov
inc
mov
call
gs
fisttpl
fst
inc
shl
les
jae
scas
test
xor
jbe
ljmp
incb
jb
pop
xor
lcall
scas
mov
xor
and
dec
lcall
push
or
popa
jmp
sbb
xchg
push
push
dec
push
push
cs
ljmp
sarb
pop
rorl
or
and
adcb
fdivr
and
lret
pop
cmp
xchg
lock
jmp
mov
je
and
fwait
jne
je
icebp
ficoms
sub
push
lock
in
adc
decl
out
mov
bound
push
fidivrl
cltd
test
or
mov
mov
ljmp
subl
push
adc
and
popa
add
adc
orb
adc
incl
mov
inc
pop
mov
push
jo
cmc
sub
mov
in
clc
inc
aas
cmp
sarb
mov
shll
inc
std
or
fwait
mov
in
std
sub
stos
cmp
mov
insb
add
testl
cmp
lods
shrl
jbe
call
mov
sbb
mov
mov
cmp
add
ljmp
jp
jmp
xor
bound
lods
push
insl
repnz
movsb
dec
enterw
sar
pushl
imul
test
jp
lea
repnz
imul
xchg
test
dec
jnp
insb
cmc
mov
pusha
loop
pop
dec
out
pop
jl
xchg
outsb
or
in
ljmp
xorl
push
fs
push
jge
lods
xchg
test
jl
xchg
mov
mov
or
idivb
jmp
push
add
mov
inc
jmp
test
repz
outsl
dec
pop
lods
imul
pop
mov
jg
cmc
inc
stc
pop
cld
adc
add
jno
mov
fistps
mov
and
mov
pop
stc
into
mull
lea
jg
movsl
push
bound
pop
pop
sbb
pusha
and
lahf
out
xchg
mov
pop
sub
bound
ss
out
adc
xchg
sub
stc
fisubrl
insl
sub
add
sub
cmp
cmp
mov
das
mov
incl
enter
or
rcll
dec
insl
into
ss
mov
imul
std
jmp
mov
and
and
jbe
mov
insl
sbb
mov
decl
fwait
into
inc
push
mov
or
stos
sbb
idivl
subb
push
push
fs
movsb
push
cmp
push
insl
dec
scas
insl
imull
iret
mov
mov
into
jge
mov
pop
push
push
into
or
int
lea
divl
inc
mov
imul
scas
push
dec
inc
scas
pop
pop
jge
insb
add
inc
inc
out
mov
pop
sub
or
inc
or
jg
repz
push
inc
dec
mov
adc
loopne
adc
or
rcr
sahf
sbb
test
xchg
xchg
movsbl
dec
test
insl
inc
mov
dec
mov
aam
insb
fisttpl
xor
jnp
pop
out
push
lock
sti
loope
push
jbe
negl
cmc
out
dec
sti
push
mov
mov
jno
decl
ds
dec
pop
sub
add
xchg
adc
mov
mov
cmpb
jl
add
scas
inc
push
or
subb
in
fwait
mov
aas
mov
pusha
out
sub
or
push
or
sti
push
sarb
icebp
in
testl
push
subl
call
cld
pop
mov
cmp
push
shr
jns
and
leave
mov
out
std
decl
inc
mov
mov
xlat
sahf
iret
push
adc
lea
outsb
ss
ljmp
imul
add
push
pop
push
into
and
stos
pop
push
sub
adcl
jle
dec
jbe
pop
shll
inc
ds
push
dec
pushl
int
or
mov
mov
dec
sub
into
into
inc
loop
call
cld
mov
push
orl
dec
pop
dec
xor
inc
clc
dec
incl
xor
cld
mov
dec
test
or
cld
ss
inc
mov
jne
push
add
xor
push
mov
or
sbb
pop
std
xor
filds
inc
rcrl
pop
inc
jmp
hlt
pushf
mov
dec
cli
decl
cld
mov
jle
lods
add
ljmp
ljmp
mov
mov
dec
sti
leave
dec
int3
mov
push
cmpsb
mov
cmp
mov
arpl
ljmp
sub
cmpsl
mov
ja
outsb
sahf
rorb
mov
bound
js
inc
fucomip
insb
mov
adc
or
xchg
sarb
sbb
xor
repz
add
add
mov
add
push
cmp
ljmp
lcall
fcoms
into
add
divl
pop
lock
pushl
insb
enter
les
xchg
or
push
push
or
pushl
jp
add
mov
or
lret
mov
inc
imul
xorl
popa
clc
sub
xchg
ss
ss
std
lcall
andl
jl
aaa
sti
or
mov
testl
lret
dec
sub
sub
fsub
std
subl
enter
mov
aam
add
cmp
andl
push
push
xchg
and
aaa
jo
stc
outsb
xor
xlat
icebp
push
out
pop
mov
add
aad
aad
cmp
dec
xchg
pop
push
lea
stc
pop
cmp
lahf
data16
fidivs
mov
js
mov
sti
jl
daa
lds
bound
mov
jmp
aas
insb
add
push
mov
imul
mov
pop
scas
std
movsb
push
mov
and
dec
into
movsl
jge
fbstp
jle
pop
xor
jecxz
outsb
je
push
cmp
call
dec
ret
test
shrb
test
ret
int
movl
int
fwait
incl
aas
sar
mov
pop
push
xor
or
test
sbbb
push
cli
jmp
stc
lret
jmp
pop
cmp
push
mov
scas
pop
dec
aam
push
fst
rcll
mov
mov
test
fsubrl
ret
dec
pop
push
jmp
adc
mov
jno
jo
or
decl
rolb
mov
mov
mov
dec
inc
test
lcall
ds
callw
inc
pop
dec
jne
je
jp
dec
push
dec
dec
aaa
dec
outsb
data16
data16
ja
dec
call
push
push
arpl
jno
inc
js
pop
push
ss
dec
push
inc
inc
dec
xor
lcall
mov
arpl
xor
xor
dec
xor
arpl
pop
jae
fs
outsb
jp
pushl
je
push
push
jo
pop
xor
jo
dec
gs
dec
dec
outsb
inc
dec
push
cmpsb
insb
push
pop
mov
fs
imul
push
jp
inc
adc
add
ss
es
push
pop
jo
dec
jne
inc
jns
inc
xor
dec
push
decl
push
jns
dec
jp
dec
push
jp
xor
jp
xor
jns
pop
dec
outsb
cmp
dec
fs
or
mov
ja
push
stos
insl
inc
jns
js
inc
pop
push
and
insl
lock
jg
popa
push
push
ss
jno
xor
popa
outsb
push
push
dec
xor
push
jle
insb
js
imul
push
dec
jne
xor
xor
inc
fbstp
lock
adc
js
push
insl
push
fs
pop
fildl
jne
jne
dec
pop
push
jb
inc
xor
jae
jle
aaa
adcb
add
dec
sbb
in
jns
pusha
or
lock
imul
outsb
xor
dec
push
inc
data16
sub
sahf
inc
bound
cmp
dec
pop
or
cmp
fldt
shlb
jbe
dec
push
dec
push
inc
loop
jns
inc
push
bound
ja
pop
mov
enter
data16
call
in
decl
aaa
imul
dec
bound
arpl
push
jo
add
inc
int3
sbb
andb
jl
data16
add
mov
xchg
lcall
xor
adc
and
and
ror
sbb
add
lock
nop
out
xor
xlat
loopne
cs
jbe
mov
out
or
adc
inc
ss
in
sbb
add
imul
or
test
inc
sahf
or
mov
insl
sarb
pop
jge
cld
pmaddwd
ja
and
ja
inc
sub
outsb
sbb
jbe
fldcw
push
or
push
mov
adc
and
add
mov
adc
adc
insb
fisttps
sbb
sbb
jbe
dec
lahf
xor
push
push
and
inc
mov
lods
aad
insb
mov
rorb
sahf
loop
lretw
cmp
loopne
inc
or
mov
fbstp
xchg
dec
dec
mov
push
mov
and
out
cmp
xchg
push
xchg
adc
mov
fbld
lcall
push
std
out
idivb
daa
out
dec
test
dec
fildll
inc
test
pop
jnp,pt
js
rolb
pop
sti
orb
cmpsl
cs
dec
mov
pop
adc
loopne
ss
push
in
sarl
push
inc
pop
insb
jo
inc
push
sbb
adc
cmpsl
dec
js
aaa
xor
xchg
xor
cs
ret
aam
xchg
jbe
pop
push
cmp
pusha
xchg
loop
xlat
inc
aas
inc
enter
or
jnp
xbegin
jbe
pop
addr16
lock
outsl
outsb
push
cmp
es
and
inc
adc
es
jb
fnstenv
adc
xor
cmp
aas
leave
fisubl
movswl
push
push
push
mov
jge
pop
push
jo
out
icebp
sarl
add
mov
insb
ss
nop
mov
sar
data16
jmp
pushl
jns
test
psubq
pop
sti
fidivl
data16
das
jge
insb
les
out
jmp
out
dec
ljmp
jl
daa
push
jae
lods
fdivrs
out
pop
inc
icebp
dec
push
scas
ds
out
dec
aad
mov
lds
in
mov
shl
or
or
fistpll
gs
gs
xor
cs
insb
pop
inc
sbb
gs
jb
mov
imul
arpl
outsl
outsb
cs
gs
jbe
mov
mov
add
pop
jb
dec
outsb
and
imul
push
imul
gs
fldt
dec
or
pop
xor
in
lods
loopne
xor
inc
outsl
jne
pop
push
jne
jnp
mov
jns
push
outsw
jb
popa
outsb
arpl
sbb
push
mov
fildll
jae
sbb
jb
cmp
push
fs
fs
push
mov
mov
call
das
adc
fcmovnu
pop
mov
jmp
loop
popa
into
push
cld
jb
outsl
dec
jne
mov
jns
sub
mov
das
int3
sub
sub
movsb
mov
pop
testb
sti
arpl
sbb
jb
push
and
lock
js
push
dec
cmc
gs
and
and
popa
divb
rolb
cmp
fs
jae
imul
hlt
gs
mov
imul
inc
imul
mov
arpl
mov
and
push
andl
outsl
insl
add
outsb
imul
outsb
sbb
fs
jb
scas
cmp
and
jae
mov
sub
push
idiv
push
push
out
in
shrl
fs
cmp
xor
jle
addr16
ss
push
outsl
xchg
and
pop
dec
data16
push
je
xorb
in
mov
cmp
popa
imul
xor
adc
pop
inc
in
mov
jns
inc
shrb
and
jne
rcl
adc
push
gs
pop
jb
outsb
sbbl
outsb
addr16
mov
popa
addr16
outsl
mov
dec
gs
pusha
jnp
je
inc
jbe
jo
jae
mov
push
add
es
mov
outsb
mov
add
icebp
mov
adc
je
push
jns
sbb
insb
mulb
pop
aas
and
push
lret
sub
lret
push
leave
in
loopne
or
or
inc
pusha
jno
cmpsb
out
mov
stos
cmpsl
pop
inc
sub
push
push
lcall
ss
push
dec
bound
repz
push
jo
cmpsb
sub
jbe
cwtl
pop
sbb
scas
mov
jbe
xlat
jbe
fldl2e
mov
fnstenv
jne
roll
adc
fstps
lret
and
and
rolb
arpl
xchg
add
mov
add
mov
insb
cwtl
loopne
lods
popl
insb
push
mov
jne
sbb
adc
roll
imul
ja
daa
inc
rclb
sub
insl
mov
imull
daa
push
push
xorb
notl
inc
sbb
ret
adc
cmpsl
ljmp
in
inc
xor
inc
mov
xchg
das
les
inc
jo
mov
pop
xor
adc
sbb
dec
nop
mov
add
sti
push
jecxz
sbb
mov
pusha
push
hlt
es
out
imul
inc
xor
addr16
push
sub
data16
fistl
in
jmp
dec
push
xor
inc
imul
sbb
insb
js
stos
rcrb
inc
xchg
movsl
jecxz
int3
icebp
pusha
jno
idivl
ret
or
imul
xorl
aaa
fdivrs
ss
ret
gs
js
jo
jmp
lock
pushf
movsl
movsl
shl
outsl
pop
inc
inc
imul
cmpsl
push
xchg
adc
mov
add
pushf
mov
xchg
jb
jae
ja
cld
roll
push
in
loopne
dec
addr16
push
in
mov
pop
sbb
in
shll
inc
add
jge
xor
pop
inc
lret
and
inc
enter
dec
mov
xchg
and
sub
push
add
push
add
adc
enter
nop
inc
add
push
mov
incl
sub
mov
add
adc
adc
nop
inc
push
and
mov
sbb
inc
add
fs
push
or
incl
add
adc
nop
inc
add
add
add
nop
adc
push
and
add
add
add
nop
add
add
subl
inc
add
fs
push
sbb
incl
pop
add
add
adc
enter
nop
inc
add
add
add
decl
add
adc
adc
nop
inc
add
test
mov
incl
adc
mov
sub
incl
push
and
test
add
push
adc
sub
test
pop
add
xorl
and
adc
mov
add
test
incl
adc
sub
test
pop
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
inc
leave
and
adc
subb
push
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
mov
in
sub
decl
jp
ret
and
add
sub
cmp
fistpl
or
lret
enter
call
orb
insb
data16
das
lret
cmp
arpl
dec
popf
lahf
lods
movl
mov
icebp
dec
in
push
ljmp
push
je
pop
sbb
stc
adc
mov
and
pushl
jmp
insb
mov
push
cli
loopne
adc
dec
xchg
jne
jl
lcall
decl
adc
stos
adc
mov
es
or
jmp
mov
sti
jle
sbbb
xchg
aad
insb
or
pop
sbb
inc
or
in
and
jne
gs
out
dec
jmp
sub
pop
cmpsl
test
fistpl
rcrl
inc
inc
mov
aad
and
cmp
jge
mov
mov
je
and
xchg
jbe
loopne
jnp
xchg
addr16
sbb
mov
std
adc
imul
xchg
cmc
and
orb
mov
sar
cmp
rcrb
lock
dec
inc
loop
and
jno
xchg
into
mov
jb
jno
dec
fnstenv
mov
repnz
mov
xchg
lahf
push
dec
pop
in
pushl
arpl
pop
and
fcomip
je
xor
mov
mov
stos
ss
jmp
mov
std
mov
cmpsb
jmp
scas
and
jecxz
fucomi
inc
cmp
lcall
ja
and
cmpsl
sbb
mov
xor
jl
push
aaa
orl
ret
pushl
fisttps
mov
push
orl
mov
inc
push
sbb
push
andl
call
push
xchg
lds
enter
rcl
loopne
push
shrb
mov
mov
xor
jge
mov
mov
jecxz
dec
mov
movsb
repnz
call
dec
sbb
cmp
xchg
pusha
jb
add
mov
scas
jl
adc
mov
adc
pop
lret
sub
in
nop
test
pop
daa
popa
aaa
andl
ret
adc
jmpw
mov
push
pop
mov
jecxz
ljmp
push
mov
xlat
sbb
xchg
mov
sbb
and
mov
xchg
aam
sbb
add
add
add
jmp
aas
xchg
adc
push
js
int
jge
jl
mov
je
cwtl
ljmp
in
lret
lock
std
rcrl
lods
sbb
data16
xchg
jg
inc
cltd
ret
test
adc
mov
in
adc
push
or
pop
out
pusha
lea
pushl
mov
pop
hlt
push
ret
mov
es
mov
call
mov
add
fwait
push
push
xchg
mov
push
xor
jno
sbb
cmp
pushl
movsl
mov
in
enter
cld
enter
jge
or
push
dec
and
fmull
pop
cmp
out
inc
sbb
push
jns
inc
inc
mov
lahf
cmp
mov
fidivs
pop
jae
call
sti
mov
mov
adc
push
mov
loope
and
dec
jmp
decl
ds
mov
xor
movsb
jge
int
push
mov
mov
adc
in
and
push
daa
aaa
daa
pop
outsl
shrb
inc
out
dec
lret
pop
inc
negb
lahf
ja
fcmovu
lock
jns
in
lea
jne
push
outsl
sbb
xchg
dec
ja
scas
mov
sbb
jl
pop
sbb
mov
int
xor
cli
jmp
lcall
pop
inc
negl
into
imul
fninit
iret
lret
cmpsl
cli
or
decl
mov
push
pop
into
loop
xor
mov
test
dec
ljmp
std
pop
mov
out
sbb
xchg
int
sub
pop
dec
and
filds
call
lret
push
loop
push
jne
enter
adc
std
repnz
loope
jae
mov
lcall
imull
mull
or
sub
data16
fdivrp
incl
dec
dec
jmp
rcl
sub
subl
lods
push
out
push
cmp
jne
aaa
cld
jmp
jae
mov
bound
hlt
and
inc
daa
mov
mov
pop
movsb
testb
test
push
enter
sbb
jo
stc
rcr
clc
loopne
jmp
mov
dec
mov
addr16
scas
mov
and
cmpb
lcall
ljmp
adc
shrb
fstpl
outsb
push
sbb
test
shrl
test
addr16
mov
mov
mov
add
push
or
notb
or
lcall
pop
popa
xchg
out
xor
shl
outsl
into
sbb
out
or
push
mov
dec
mov
sbb
push
fidivrl
cmp
cs
arpl
lea
xchg
xor
imul
test
call
sti
sub
sub
loopne
mov
xor
and
insl
sti
fsubl
out
fs
scas
test
add
in
dec
pop
or
cltd
std
sub
mov
or
mov
lods
fisttpll
push
jae
test
jp
inc
inc
insb
int
notl
push
add
mov
loope
mov
pushl
pop
ret
dec
fs
push
scas
add
sbb
rorb
sar
frstor
and
adc
lcall
mov
jo
dec
test
cwtl
fst
cmp
mov
popf
xor
mov
ljmp
popa
sbb
pop
push
pop
inc
push
push
aas
push
arpl
sarb
mov
mov
lcall
cmc
xor
dec
sub
aas
jbe
int3
fstp
into
scas
stc
pushf
inc
in
pusha
lahf
inc
jmp
jecxz
adc
xor
jmp
adc
in
fcmovb
and
lods
ficomps
test
xchg
jecxz
lcall
movsl
mov
aaa
std
call
test
rcll
repz
adc
cmpsl
test
ljmp
imul
add
outsl
pop
dec
dec
push
lods
aaa
das
adc
mov
mov
incl
inc
clc
fmulp
enter
dec
fs
divl
jge
ljmp
repnz
lea
mov
imul
in
push
pop
mov
xlat
ljmp
cltd
sbb
push
pop
jp
cmpsb
outsl
dec
pop
jmp
mov
hlt
mov
test
scas
push
sub
pop
enter
out
out
sub
xchg
or
pop
mov
fbstp
sub
gs
dec
and
es
data16
fidivl
lahf
xor
jge
filds
ja
rcl
push
sahf
add
in
cmc
mov
loop
fcomi
mov
out
outsb
pop
sbb
fwait
jbe
pop
mov
mov
daa
insl
sub
movl
shl
int3
sub
sub
pushl
push
mov
loop
repz
xchg
mov
fyl2x
loop
aas
fs
sub
ja
jg
ljmp
dec
out
andl
or
inc
sub
or
imul
push
jg
fwait
aam
movsb
jp
add
push
adc
add
add
ret
lret
lock
incl
pop
mov
push
scas
cli
popf
mov
push
bound
fildl
dec
xor
jmp
lock
lods
sub
shll
lods
mov
icebp
int3
dec
xchg
adcl
daa
dec
lock
js
ljmp
stos
xacquire
sub
cmpsl
mov
pushl
decb
jb
jnp
insb
loop
push
push
and
aad
mov
jp
decl
incl
pushf
cmp
insb
mov
sahf
int3
mov
jle
xchg
mov
scas
ljmp
insb
lods
loop
jae
in
movsb
mov
pop
jns
aas
mov
inc
pop
jmp
adcb
mov
dec
stc
jl
cmp
ret
ja
inc
add
mov
enter
jbe
pop
mov
out
lcall
mov
mov
mov
add
int
cwtl
rcll
cmp
icebp
addr16
pushl
mov
shll
dec
adc
shl
push
inc
sbb
clc
daa
sbb
or
xchg
pop
jge
sbb
decl
jnp
pop
and
mov
in
pop
inc
into
les
leave
jge
adc
dec
decl
mov
idivb
or
test
pushl
adc
mov
xchg
rcrl
loop
cltd
lods
movsb
add
dec
stc
jo
sbb
mov
dec
clc
lods
sbb
in
pusha
inc
pop
jnp
cwtl
popf
rcr
xchg
mov
jl
add
out
call
test
lea
push
clc
jmp
inc
mov
push
jns
mov
sarl
pop
lahf
mov
lea
add
repz
cs
push
outsl
std
loope
lret
push
cltd
xchg
sti
fimuls
fmull
lock
incl
ds
mov
ffreep
aad
sar
mov
mov
jo
idiv
ljmp
fwait
daa
aas
pop
xchg
inc
je
add
sub
je
out
lahf
lcall
shl
push
cmp
in
sub
sub
adc
mov
jl
cli
and
sbb
ljmp
jp
or
sbbl
dec
mov
jmp
incl
loopne
sbb
cmp
mov
rorb
sub
xor
fcomip
or
loop
fidivs
xchg
mov
fcomps
push
loopne
std
subl
loop
pop
ljmp
insl
sbb
cmp
cmpsb
in
mov
lcall
jb
stos
aad
mov
in
scas
iret
xchg
stos
dec
and
pop
cltd
mov
mov
jle
leave
cmpsl
mov
fcoms
jne
jb
roll
repz
or
pushl
dec
cmp
ss
incb
push
rolb
mov
add
mov
xchg
add
inc
dec
dec
jle
xor
setne
mov
fists
cld
fcomip
mov
and
jo
ret
sub
sub
jmp
rcrl
pop
rclb
sbb
jne
test
shlb
jb
pop
out
cmp
jle
lret
mov
fs
xor
gs
ret
mov
cli
pop
jmp
arpl
adc
shlb
push
sub
jb
fcomps
jnp
std
mov
hlt
imul
inc
imul
fucompp
pop
jmp
dec
cmc
incl
push
inc
dec
and
xor
pop
add
rorl
sbb
loop
xchg
out
icebp
xor
icebp
pusha
or
add
cmp
test
sbb
adcb
and
cmpsb
ja
cmpsb
insl
in
cmp
call
repz
mov
ja
sub
ds
call
sub
mov
cmpb
pusha
cli
jg
fidivl
rcl
dec
mov
pop
pop
mov
std
pop
fimull
xor
adc
std
or
negl
pushf
cs
ljmp
sub
jno
adc
stc
fbstp
mov
inc
jo
mov
incl
lods
lahf
pop
push
fs
pop
and
das
pusha
ds
jecxz
jno
pop
mov
out
mov
pop
push
inc
and
mov
adc
es
push
cmc
jecxz
lock
jmp
sarb
xchg
pop
xchg
pop
xchg
ljmp
pop
iret
and
ljmp
mov
pop
jb
ss
adc
inc
lods
xchg
hlt
lcall
mov
xchg
lea
nop
push
fwait
nop
cmp
mov
lcall
hlt
xchg
sahf
mov
xorb
hlt
rep
mov
outsb
fadd
rcrl
sub
or
decl
sub
lret
cli
js
jge
mov
stos
push
mov
mov
hlt
mov
pusha
lock
popa
mov
sbb
cwtl
in
popf
addb
add
mov
ljmp
call
cmc
shll
pop
sbb
sbb
leave
and
aad
testb
fld
iret
in
xor
dec
aad
cmp
std
cmpsb
push
mov
mov
pop
push
push
xlat
int3
imul
test
jg
ljmp
fidivrl
cmp
push
stos
push
insl
enter
outsl
mov
pop
xor
clc
push
decl
jbe
adc
cmpsb
cli
daa
sub
cmp
inc
xchg
cmpsl
jne
stc
dec
jne
pushl
cld
jmp
icebp
pop
scas
or
insl
fstpl
pop
dec
cmp
stos
mov
mov
jg
call
mov
fwait
sbb
mov
fisttps
xlat
aas
push
mov
pushl
shll
decb
dec
lret
mov
bound
xchg
pop
xchg
mov
mov
sub
push
adc
xor
sbb
lcall
aam
or
and
lcall
pop
idivl
mov
sbb
sbb
jno
pusha
add
jecxz
cmp
lret
push
fcomip
jmp
and
and
lahf
aas
adcb
dec
push
sbb
jmp
adc
cli
pop
sub
sahf
jl
and
xchg
pop
adc
dec
ja
or
sub
xor
les
or
and
es
mov
lret
ret
xor
lcall
lea
mov
pop
int3
and
vminss
xchg
mov
addr16
lahf
mov
inc
inc
rol
jecxz
ds
mov
lea
xchg
mov
add
mov
mov
incl
shr
mov
mov
pop
xor
sbb
call
cld
mov
gs
dec
aad
imul
fcompl
out
enter
sub
lods
mov
push
clc
jo
cmp
loopne
jb
incl
ret
mov
sbb
jmp
sbb
xor
popl
decl
xor
js
xor
popf
xor
inc
push
pop
xchg
loop
arpl
ja
imul
das
clc
out
leave
inc
or
pop
xchg
stos
jbe
enter
cmp
push
movsb
jmp
dec
push
aad
and
cwtl
sub
cmpsb
out
dec
xorb
outsl
imul
mov
adc
shlb
lds
cld
mov
xor
insb
xchg
cmp
cwtl
xor
mov
jmp
push
sti
adc
cmp
pop
cmp
cli
orb
or
jg
insb
js
pop
mov
stos
movsl
aas
shll
ret
inc
jns
das
insl
jl
out
test
pusha
lahf
add
js
lea
call
aaa
add
int3
xlat
sbb
push
jp
sbb
cmp
lds
push
push
sub
mov
xchg
or
into
cmp
ficoml
rclb
and
mov
les
or
and
adc
enter
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
adc
dec
mov
mov
orb
adc
iret
aas
les
add
add
xor
push
add
in
xor
inc
mov
int
incl
add
mov
test
pop
add
add
add
sbbb
dec
xorl
push
inc
add
adc
addb
inc
addl
es
fstpt
addl
orb
sbbl
sub
adcl
in
jg
mov
roll
adcl
aas
rorl
cwtl
js
lock
incl
sbb
je
in
mov
push
jge
shrb
xor
sub
lcall
pusha
shll
je
rorb
rclb
cmp
rolb
rorb
lds
mov
rcl
gs
nop
arpl
pop
shrb
or
data16
or
or
mov
rcrb
and
adc
add
or
in
xchg
pop
out
movsl
pusha
cmpsb
imul
inc
sarl
in
pusha
cmp
cmpsb
mov
xor
sbb
xor
stc
pop
jl
leave
scas
dec
fwait
adc
dec
imul
dec
sub
push
and
lods
mov
pmaddwd
push
fisttpll
lds
pusha
or
popa
push
pop
fs
rcrl
dec
addr16
lahf
mov
mov
std
gs
jne
ss
bound
mov
movsb
imul
lods
or
iret
cvtps2pd
lods
fstpt
sbb
push
cmp
jo
gs
jnp
ficoml
pop
push
ja
test
add
add
imul
xlat
outsb
scas
push
int
imul
sbb
inc
xor
add
push
jmp
idivl
js
mov
jns
or
push
push
add
add
push
push
loopne
aad
mov
xchg
rcrl
jnp
pop
add
mov
das
sub
insb
or
push
pop
jl
pop
int
mov
push
dec
roll
pusha
fucomip
push
addr16
mov
seta
push
push
leave
int
inc
ss
add
daa
push
cmp
jae
cltd
mov
adc
sbb
imul
sbb
push
pop
sbb
loop
jg
scas
sbb
push
pop
mov
mov
testl
sbb
mull
dec
arpl
xchg
and
int
imul
jecxz
and
push
inc
imul
add
mov
or
stos
inc
arpl
push
loopne
aad
aas
pop
loope
mulb
add
add
mov
mov
popa
add
inc
pop
popa
add
jo
ror
stos
popa
and
jo
sahf
inc
add
shll
fisubrs
jl
sub
fdivrs
push
pop
mov
jo
sbb
ja
push
lahf
cwtl
pop
xor
decb
xlat
fs
xchg
loopne
jae
xor
inc
dec
adc
xor
arpl
rorl
adc
sbb
sti
inc
imul
std
popa
loopne
push
sbb
and
out
mov
pop
jo
or
add
push
push
scas
add
sbb
xorl
jo
jecxz
lcall
or
ficoms
bound
jns
arpl
jo
outsl
jp
insl
xlat
pop
test
popl
sbb
sub
xor
cmc
push
outsb
add
push
mov
xorl
mov
push
cmp
xchg
stos
mov
jns
mov
icebp
jl
add
sbb
shll
neg
cmpsl
fucomp
xor
xor
ret
jo
mov
mov
pop
sti
xor
aaa
lcall
lock
sub
mov
pop
push
jnp
movsl
mov
iret
stos
stos
or
dec
and
sbb
mov
fimull
cmp
add
mov
jmp
fbld
pop
cmp
dec
mov
sub
insl
mov
jo
fucomp
add
dec
add
jg
pop
imul
clc
add
lods
and
add
jl
mov
xorb
stos
call
xor
sub
in
push
repnz
pusha
ret
mov
jno
jno
stos
sbb
jg
jne
pop
sbb
inc
sbb
mov
or
pop
xchg
jo
or
outsl
jo
pop
daa
xor
pop
inc
add
mov
xor
jle
xor
leave
enter
add
mov
cwtl
ds
push
push
cld
adcb
pop
xor
vmovsd
jbe
cld
outsl
cli
inc
incl
pop
loop
pop
cmp
inc
inc
pushf
dec
pop
ja
das
mov
idiv
decl
mov
xor
in
fiaddl
push
sbb
sbb
cmp
add
aaa
insb
dec
inc
xchg
lahf
add
out
push
jle
mov
outsb
fadds
cmp
aam
cmp
mov
inc
jno
int3
or
jne
cmp
daa
fldl
jo
pop
call
add
cld
inc
sub
ja
mov
add
dec
sub
mov
jbe
cld
in
das
inc
xchg
imul
gs
lea
jo
jae
fs
aaa
pushl
and
imul
arpl
nop
outsb
or
or
loopne
and
js
jb
stc
andb
xchg
lods
popf
or
jg
add
jmp
add
test
mov
push
jg
add
loop
daa
cmp
clc
test
mov
lock
xlat
orb
sti
testb
or
js
jo
add
shll
call
push
rcrb
push
jp
out
faddl
add
sbb
jg
push
notl
fnsave
or
adc
inc
mov
add
add
shl
lds
add
jb
mov
cmp
sub
pop
add
filds
std
add
fistpll
cmp
jp
into
xor
lret
pop
mov
sub
add
test
int
jbe
inc
or
sbb
xchg
int
jbe
les
decl
shr
pop
lock
pusha
lock
fimull
icebp
add
adc
mov
or
push
push
cmpsb
pop
js
std
dec
sbb
nop
add
js
cmp
in
mov
sbb
sub
push
outsl
pop
mov
dec
lock
push
mov
jecxz
lcall
mov
sbb
push
and
test
test
fiadds
add
push
sbbb
dec
pop
push
fs
sahf
imul
cli
sbb
xor
or
mov
imul
stos
push
adc
lock
mov
xor
sbb
bound
movsb
add
sahf
andb
add
pop
lods
imul
jo
cmpb
aam
rcrl
adc
sub
mov
dec
fs
add
cmpsb
cmp
dec
dec
xor
jbe
ss
dec
imul
data16
push
stos
xchg
inc
shll
in
or
pop
xor
cmpsb
imul
jle
fsubrl
imul
mov
testb
dec
xchg
lahf
repnz
push
adc
lock
shll
push
xor
ret
icebp
or
lcall
jnp
rorl
orl
icebp
or
sbb
push
xchg
lock
push
cmp
rclb
imul
mov
dec
repnz
int
nop
sbb
adc
add
insb
rcrl
xor
shll
dec
and
ljmp
pop
sbb
push
pusha
sub
cmp
mov
fisubrl
lea
xor
subb
adc
pop
jae
jo
or
iret
in
test
js
adc
loop
xorl
or
pop
pop
mov
jo
or
jo
je
fisttpll
pop
imul
dec
es
jnp
fists
pop
or
cs
clc
pop
ja
aaa
mov
push
addr16
lcall
push
xchg
push
cmpsb
mov
sbbb
push
sahf
inc
mov
jg
aas
notl
fidivrs
repnz
push
cmp
jnp
das
push
or
gs
push
add
dec
push
push
repz
out
push
jo
push
roll
push
pusha
jns
ja
and
inc
loope
cli
cmp
push
push
pop
sbb
jae
sahf
js
shrl
push
cmp
or
into
repz
ja
sub
xor
or
repz
test
jmp
lahf
pop
push
sbb
xchg
push
jl
mov
sahf
pop
insb
sub
repz
mov
add
repz
adc
iret
repz
or
iret
repz
movsl
add
iret
repz
sbb
iret
repz
adc
sub
or
jns
fsin
xor
jns
out
int
data16
out
sahf
lods
push
xchg
or
sahf
out
pop
push
popf
arpl
jle
addr16
fldl
ljmp
mov
push
mov
push
jns
js
adc
sahf
out
ret
popa
and
out
inc
jecxz
sbb
out
xchg
jns
shrl
sahf
out
sub
push
out
repz
dec
add
jns
sahf
addr16
lret
gs
stos
add
dec
sahf
out
sbb
cmp
push
sub
mov
dec
sti
adc
out
inc
jae
cs
or
xchg
out
jns
pop
sbb
jnp
xlat
imul
mov
mov
dec
test
pop
ja
iret
call
push
daa
scas
push
filds
incb
pop
pop
lahf
mov
repz
jg
aas
filds
lcall
mov
add
mov
dec
in
adc
add
mov
jno
ljmp
fsubp
push
outsb
in
push
jno
jmp
jecxz
and
add
jmp
cmp
mov
sbb
pop
push
popa
pusha
imul
xor
or
or
add
mov
cltd
push
push
ljmp
hlt
push
xor
repnz
xchg
jl
incl
imul
push
out
inc
push
ljmp
pop
jo
push
lret
jmp
int
fisttpl
pop
mov
aad
pushl
rclb
inc
jl
jle
sub
mov
sbb
mov
mov
jmp
inc
mov
sbb
mov
hlt
cmp
insb
adc
test
fs
std
jg
call
leave
mov
insb
push
arpl
pusha
aaa
and
mov
decl
pusha
aad
jno
mov
mov
test
movsl
add
cwtl
mov
incl
leave
mov
lods
sbb
fdivs
mov
xor
shrl
out
lcall
jmp
hlt
mov
fadd
mov
xchg
mov
mov
incl
sub
mov
fucomi
or
out
dec
push
rol
data16
inc
fdivl
jno
add
rcrb
jbe
mov
loopne
mov
pop
in
lahf
int3
aam
call
pop
loopne
js
pushf
test
xchg
out
push
loope
or
insl
or
pushl
pop
arpl
or
imul
gs
adc
add
ljmp
sarb
cwtl
test
pmaddwd
fnstenv
adc
mov
jmp
sbb
ficoml
lcall
dec
xor
cmp
jmp
mov
xchg
fdivrs
add
rcll
fldcw
mov
ljmp
mov
add
mov
jl
ffree
jno
push
push
inc
add
out
adc
mov
fidivl
outsl
and
aam
mov
icebp
stc
ficomps
leave
fldcw
fstpl
pushl
call
or
mov
rcr
mov
lcall
incl
shlb
ljmp
fildl
push
fdivl
or
jnp
fs
shrl
aas
sar
push
pop
push
hlt
iret
push
in
and
scas
add
dec
sahf
pop
jge
xchg
jg
sub
add
add
push
imul
ss
sbb
push
imul
ljmp
sbb
pop
sub
mov
dec
frstor
fistpll
mov
mov
jmp
mov
shll
lods
repnz
addr16
cmpsb
and
mov
mov
mov
decl
sub
scas
or
ss
jp
inc
cmp
pusha
fildll
mov
xchg
incl
mov
lret
in
mov
outsl
and
push
or
cld
inc
or
shlb
add
xor
mov
mov
pop
mov
sti
push
pop
pop
call
ret
shlb
fldcw
scas
ficomps
ret
fptan
arpl
arpl
insl
add
or
addr16
fistpll
jl
jge
mov
push
sub
or
mov
call
dec
out
fdivrl
fisttpl
sub
roll
pop
mov
push
xor
mov
andl
mov
sbb
mov
cmp
mov
std
pop
sub
clc
sub
imul
push
xchg
or
stos
mov
xor
cmp
push
pusha
shlb
ja
ds
shrl
and
fstps
cmp
aaa
lods
scas
mov
fiadds
mov
jecxz
jg
mov
lret
mov
pop
mov
sarb
push
ficoms
jmp
and
jp
mov
dec
popa
std
sbb
imul
sub
mov
or
in
add
fucomip
out
add
sbb
xor
sub
call
mov
hlt
ja
jns
pop
push
cmp
fxch
mov
ret
call
hlt
ljmp
mov
mov
mov
xor
xchg
and
push
sub
mov
out
popa
stos
xlat
scas
cs
mov
sub
addl
mov
fwait
xor
mov
insb
insb
jmp
aas
inc
ljmp
pop
and
xchg
sbb
lahf
mov
inc
mov
sahf
ja
mov
sbb
push
push
call
lcall
pop
adc
inc
inc
jg
pop
in
xchg
std
jo
fdivl
cmp
pop
sub
rorl
pop
or
pushl
std
pushl
inc
fisttps
pop
mov
iret
gs
sub
mov
dec
mov
lahf
pop
inc
lea
out
mov
add
jae
dec
call
inc
pushl
inc
sub
pop
cli
dec
jns
mov
sub
mov
fcomip
lea
mov
lds
and
xchg
or
xchg
lea
testb
dec
pop
mov
xlat
inc
je
cli
outsb
xor
pop
mov
mov
push
cwtl
adc
fsubrp
test
loope
insb
lret
cli
cmc
mov
out
imul
sbb
cmp
incl
push
out
adc
and
inc
and
inc
out
std
fimull
lret
push
fwait
cmp
dec
pop
scas
xchg
add
int3
cmpsl
xor
loope
lods
adc
pushl
adc
adcl
xchg
mov
xchg
leave
adc
inc
jle
xchg
ja
loop
jns
ljmp
dec
dec
and
mov
or
or
lea
fisubs
into
out
jle
add
out
jmp
inc
ret
adcl
int3
add
pop
xchg
lcall
cmpsl
test
cwtl
cmp
cmp
test
mov
ja
scas
adc
insb
hlt
inc
xor
fldcw
push
ret
adc
push
std
and
jo,pt
sarl
fdivrs
out
mov
mov
movsl
jnp
sbb
pushl
mov
ja
fldcw
dec
sub
or
sub
add
in
add
mov
outsl
bound
xchg
jmp
hlt
out
les
ret
xchg
fdecstp
push
mov
ljmp
xchg
fidivs
pushf
aad
test
push
lret
jo
nop
sbb
call
sub
push
fisubs
pop
lds
push
call
dec
sbb
mov
pop
ret
cwtl
xchg
test
fldenv
lahf
fdivrp
test
call
addb
mov
rorl
mov
incl
and
sub
adc
sub
mov
pop
dec
loope
dec
or
imul
inc
jp
decl
xlat
cli
lret
lock
shlb
mov
stc
jb
xlat
loopne
adc
mov
jo
popf
pushl
mov
add
insb
cmp
cmp
adc
sub
test
jns
pushl
dec
loopne
cmp
cmpsl
push
mov
xchg
adc
in
xor
data16
lcall
xlat
daa
push
add
dec
loope
test
sub
int3
in
mov
add
outsb
call
push
adc
jle
push
ret
xchg
xchg
dec
insb
shlb
mov
pop
adc
push
pop
or
xchg
rorb
aam
aas
adc
adc
mov
movsb
fsubrs
mov
pop
shr
popf
in
fsubr
out
inc
jmp
mov
or
xorl
lret
imul
ja
pop
dec
sar
ljmp
fmull
pop
jle
enter
mov
dec
testl
adc
sar
outsl
jne
and
dec
push
add
mov
mov
jg
ret
dec
jl
add
push
dec
add
jo
rorl
sub
push
or
stc
sbb
decl
lods
xchg
fmuls
cmc
sub
pop
or
leave
in
adc
cld
jmp
push
or
sbb
sbb
mov
sbb
repnz
pop
jmp
mov
outsb
dec
jae
jmp
cmp
fdivl
adc
mov
pop
pop
inc
dec
cmp
sub
cmp
call
or
ret
out
inc
aas
hlt
test
cmp
push
add
nop
jge
aaa
leave
cli
inc
fidivl
jnp
push
xor
xor
add
xor
imul
ljmp
daa
ss
sub
and
out
ljmp
sub
add
jmp
fidivrs
sub
sbb
cmp
mov
gs
lcall
push
mov
jo
out
jno
pop
push
jae
xor
jb
and
push
pushl
icebp
pop
je
fwait
aad
xchg
mov
mov
jg
or
jl
je
jns
push
inc
cmc
mov
cmp
lret
dec
cs
insl
and
cmp
nop
fbld
xchg
xchg
push
push
xor
cmp
imul
adc
sub
add
inc
jmp
gs
fs
add
data16
loopne
xlat
sbb
ljmp
mov
outsb
xchg
dec
add
dec
xor
sbb
insl
mov
dec
pop
fstpl
lds
xchg
push
lock
inc
or
inc
ds
inc
mov
pop
cmovo
out
incl
mov
push
cwtl
add
push
sarl
jae
clc
push
inc
stos
cmp
adc
call
jle
push
pop
cmp
pop
and
pop
jns
pop
dec
xchg
cld
sti
sub
outsl
lcall
das
lods
pop
jg
xor
loopne
iret
mov
movsl
jae
mov
fsin
out
addr16
in
or
es
lock
movsb
sahf
mov
in
sbb
das
call
jne
stos
jmp
pop
imul
cmp
sar
popa
insb
xchg
push
push
push
call
adc
decl
mov
scas
pop
clc
mov
add
addb
lock
push
incl
imul
pop
sub
cmc
add
decl
lahf
pop
js
test
mov
fcmovb
jecxz
fildl
jno
je
mov
sub
dec
aaa
fsubl
or
xlat
adc
dec
fsubr
aam
mov
ljmp
ror
into
mov
shll
pop
pushf
les
pushl
push
push
ret
xchg
ret
pop
adc
push
adc
push
scas
dec
lret
pusha
lds
enter
decl
adc
leave
mov
inc
int3
mov
rol
iret
sarb
xchg
mov
insl
incl
call
out
jmp
xchg
push
push
fs
and
pop
mov
sahf
imul
cli
popf
fldt
cwtl
in
add
mov
xor
dec
xor
dec
mov
mov
adc
inc
mov
add
dec
and
mov
pushl
lcall
mov
subb
faddl
pushf
cmpsb
push
test
sbb
xchg
jb
xchg
lcall
loop
push
add
stos
push
outsb
movsb
stos
cmpl
mov
sub
ljmp
out
icebp
cmpsl
fidivs
cmpsb
mov
movsb
mov
sub
mov
cmp
bound
les
inc
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
fcomip
btr
mov
mov
notb
into
pushf
xchg
mov
cli
mov
mov
pop
pop
mov
add
pop
loopne
je
stos
adc
int
fidivs
and
jmp
adc
mov
jne
or
loopne
outsl
incb
dec
and
push
int3
ja
idiv
jmp
test
push
sbb
xor
cli
mov
lods
inc
aaa
sarb
cmpsl
mov
or
fldcw
int
jg
xchg
ljmp
aas
popa
rcrb
xchg
call
jae
decl
inc
jp
shrl
sbb
cmp
das
add
das
push
pop
in
xchg
sbb
xchg
in
xchg
frstor
sub
ja
adc
ljmp
pop
push
repnz
inc
xchg
mov
sub
cmp
and
push
sahf
loop
outsl
dec
jg
outsb
pop
subb
push
aad
shlb
lahf
xor
cmp
xchg
lahf
fsubrl
daa
out
std
mov
insl
hlt
adc
call
adc
cmpsl
aas
test
dec
nop
sbb
mov
test
lods
push
pop
jg
jnp
jmp
push
sub
pop
sbb
cmpsb
mov
adc
rcrl
cmpb
das
lret
jnp
cli
jg
dec
ja
prefetchw
or
jae
movl
or
ljmp
cld
adcl
push
mov
mov
mov
out
mov
pop
mov
in
fistpl
adc
cmp
shrb
or
pusha
cld
mull
cmp
cmp
aas
das
xchg
adc
sub
pop
clc
or
dec
push
inc
iret
icebp
cmpsb
adc
xchg
pushl
cs
cwtl
pop
fwait
push
std
jo
in
inc
dec
lock
das
dec
leave
iret
cmp
stos
out
arpl
aas
imul
incl
movl
jns
aaa
pop
in
push
loope
mov
cwtl
call
scas
jmp
inc
addb
ds
mov
xlat
loopne
xor
mov
in
jmp
jle
inc
sub
in
call
inc
xchg
sbb
xor
jge
mov
sahf
in
sub
decl
push
nop
mov
xor
jl
cmpsl
sbb
pop
test
cmp
ds
add
mov
cmc
scas
or
and
imul
sub
mov
hlt
js
clc
call
scas
dec
sarb
std
rcrb
inc
push
pop
xchg
testl
and
scas
cli
pop
lret
dec
lahf
jle
out
shll
adc
ficomps
mov
ret
jmp
jmp
add
and
jo
arpl
sahf
and
sahf
push
mov
mov
mov
or
adc
add
into
movsl
out
xchg
cmc
pushl
xor
adc
mov
jbe
sbb
out
jbe
jp
add
jae
movsb
push
mov
cmp
inc
stc
out
dec
jbe
mov
into
jb
inc
fcoml
inc
clc
fs
jns
stc
lret
push
xchg
inc
and
lcall
stc
mov
mov
lock
imul
ss
test
cltd
xchg
jg
xchg
cs
add
call
push
loope
xor
ss
push
dec
mov
mov
addl
pop
add
dec
addr16
icebp
fiadds
subb
mov
into
mov
xor
jg
mov
mov
sub
lret
sbb
xlat
cmc
mov
sbb
adc
jle
test
sub
adc
ja
mov
jle
incl
jg
test
and
mov
mov
data16
fisubrs
mov
sar
call
out
mov
dec
or
sbb
pop
outsb
sti
cmp
fucomi
pop
xchg
addr16
std
ljmp
test
or
imul
push
push
add
pushl
xchg
adc
popa
sub
or
clc
insl
les
push
arpl
mov
xchg
sti
mov
push
push
mov
sub
mov
sbb
dec
jg
and
or
jno
jnp
inc
fsubp
fcmovbe
jge
fucom
jmp
aam
push
jl
test
in
insb
cwtl
push
lcall
stc
jp
gs
in
jmp
pop
dec
pushf
push
insb
flds
or
enter
pushl
pusha
inc
in
addr16
ret
add
shll
test
pop
or
cli
mov
mov
stc
inc
int
insb
jecxz
fistps
or
pop
xor
fiadds
cmp
xlat
push
addb
push
fidivs
and
mov
movsl
add
jmp
or
mov
or
and
outsl
jl
cmpsl
push
sbb
cmp
shlb
mov
mov
mov
pusha
mov
aam
xchg
leave
mov
lock
xor
or
sbb
insl
cmp
xchg
sbb
add
jmp
insb
popa
bound
xor
or
push
xchg
in
in
movsl
jnp
or
rorl
les
mov
movb
jmp
ljmp
sbb
dec
jae
jl
int3
dec
pushl
cld
gs
popa
pop
lds
mov
xor
mov
movsl
inc
ret
xlat
pop
sar
inc
insl
sub
hlt
sti
mov
outsb
frndint
push
mov
pusha
mov
jae
add
pusha
or
or
jno
fadds
inc
stos
inc
or
adc
push
ljmp
outsl
test
xor
lahf
mov
fxch
cwtl
dec
rcrb
mov
fcomip
cmpsb
mov
pop
rorb
aas
mov
andl
mov
loop
decl
mov
lcall
ja
sti
adc
sbb
or
imul
insl
push
test
test
push
iret
or
popf
cmc
add
mov
setae
mov
add
call
push
ret
bound
jg
addr16
out
ss
xor
jg
add
sbb
shrl
loopne
fidivrl
cwtl
fisttpll
push
mov
stc
call
mov
inc
lahf
mov
aad
mov
push
fadd
les
mov
lcall
push
shlb
mov
dec
daa
or
sbb
add
jle
jnp
mov
out
ret
cmp
jl
mov
mov
jg
fisubs
mov
sbbl
outsl
shlb
xor
xchg
inc
or
fldl
push
mov
cmp
or
aam
pop
xchg
mov
xlat
jmp
call
fstps
sbb
adc
mov
pushf
std
insl
xchg
or
push
test
decl
add
push
dec
sbbb
sub
insl
rorb
or
sbb
mov
fcmovnu
and
rcl
push
aam
inc
xchg
fnsave
outsb
jle
push
int
mov
call
mov
ja
or
add
push
cltd
push
cmp
out
add
pop
jo
sahf
incl
bound
lcall
insb
iret
inc
pop
or
js
or
adcl
ret
es
das
pusha
push
idiv
pushl
outsb
ja
push
shrl
es
pop
fdivrl
fdivrs
lock
mov
sahf
mov
mov
jmp
xor
mov
xor
mov
cmpsb
inc
shlb
add
ljmp
fldenv
dec
data16
cmp
mov
aad
sub
or
mov
movsl
add
out
jmp
sbb
inc
int
bound
fwait
insb
lds
incl
pop
cmpsl
xchg
dec
add
hlt
fxch
push
mov
or
mov
jle
popa
subl
ret
lods
fldenv
adc
out
inc
call
enter
jecxz
mov
cli
addl
add
fistl
lret
lcall
add
sub
fbstp
pop
push
sahf
push
and
jae
adc
and
ja
jmp
call
shl
cmp
andl
scas
stos
mov
imul
mov
ljmp
ljmp
xor
fildll
pop
out
hlt
pop
or
repz
mov
jo
lcall
push
jno
imul
sub
negl
ret
sbb
jne
pop
mov
sti
icebp
incl
jns
mov
cmp
dec
mov
cmpsl
fisubrs
cmp
jns
add
lock
cmp
sbb
imul
inc
pop
and
addl
ret
inc
mov
hlt
dec
cmc
xchg
cmpsl
in
lea
or
cli
bound
incl
pop
push
pop
mov
aas
outsb
xchg
push
xchg
and
cwtl
push
cmp
test
rorb
cli
lret
xchg
decl
jns
sbb
cmpsb
dec
test
lock
jo
ret
fwait
pushl
lcall
test
or
xchg
scas
mov
int3
cmpsl
int3
cmpsb
sbb
jmp
aad
std
pusha
push
and
scas
dec
aas
shr
pusha
adc
jns
mov
decl
stos
das
push
adc
sub
aas
jns
leave
and
mov
or
je
adc
xor
call
repnz
dec
lea
lahf
jle
xor
out
incb
std
ret
rclb
cmp
decl
pop
mov
push
cmpsl
gs
sbbl
divb
lret
mov
out
pop
dec
mov
fnstcw
int
ret
or
adc
inc
and
ds
jo
daa
ja
subb
pushl
xlat
inc
jno
out
pop
add
test
pop
mov
cwtl
movsl
insb
ljmp
push
repz
fcomps
sub
fldl
add
pop
xorl
je
bound
and
lcall
hlt
lds
cmp
adc
cmpsl
xchg
or
xchg
aad
pop
mov
test
xor
imul
mov
subb
sub
dec
lods
pop
pop
sbb
inc
sub
cltd
fidivs
loope
sub
mov
gs
or
in
ret
test
es
lcall
lds
stc
sub
int3
cmp
call
imul
or
push
test
jg
call
sbb
mov
pop
adc
xor
xor
mov
loope
scas
imul
test
ss
pop
mov
pushl
pushl
xlat
dec
sub
int3
mov
pop
xlat
push
push
xchg
adc
lea
or
jo
dec
jnp
inc
mov
and
in
insb
pop
into
adc
push
test
push
test
inc
mov
lret
cmpl
hlt
pop
dec
push
cmpsl
popf
push
adc
add
add
pop
sub
lcall
mov
dec
pop
scas
cli
jle
test
sub
aam
lea
push
loopne
call
xchg
stc
mov
repz
mov
mov
das
lds
ss
mov
sbb
aas
sub
jns
jo
dec
movsl
pop
xchg
sbb
mov
daa
or
lret
mov
mov
es
and
mov
cld
lcall
cmpl
xchg
mov
shlb
xchg
lret
adc
cmp
imul
push
adc
aaa
or
jbe
or
lock
int3
xor
jb
jg
ret
cld
test
outsb
std
inc
mov
fdivr
lret
ret
lea
dec
push
test
adc
mov
repnz
test
repz
out
loope
sbb
fs
xchg
push
cmc
sahf
sub
cmp
pushl
in
inc
loopne
ja
loope
sbb
lods
in
popa
fwait
out
ffreep
out
mov
in
xor
clc
enter
inc
cmpsb
out
jae
xchg
ljmp
and
mov
jp
jp
dec
dec
inc
loopne
sub
leave
xchg
mov
or
mov
roll
lcall
call
add
leave
pop
pop
pop
enter
lret
jp
test
test
xchg
inc
push
std
call
mov
shrl
int3
adc
fstp
imul
mov
cmpsl
fcom
fldcw
dec
dec
frstor
cltd
and
and
adc
aam
ficomps
cld
pusha
inc
incl
cld
xlat
or
jno
shll
enter
mov
sar
decl
push
pop
scas
fdivl
cltd
mov
dec
sub
aad
inc
orl
mov
orb
and
inc
push
xchg
test
lret
lret
mov
cli
scas
xchg
jl
nop
cmp
fisubs
nop
jmp
xchg
ja
pop
xchg
xor
add
scas
jg
pushf
insl
js
sub
cli
incl
aam
fs
cwtl
loopne
lea
adc
add
fs
fisubs
mov
or
mov
mov
mov
frstor
mov
inc
dec
idivb
int
inc
mov
dec
out
mov
decl
stos
xor
addr16
mov
or
stos
mov
scas
mov
jle
movsl
loop
call
cmpsb
in
xchg
xchg
xor
sub
add
outsl
inc
pop
mov
xor
jno
sbb
jae
fstps
cmp
pop
sbb
fists
xor
jp
add
adc
and
adc
hlt
popa
pop
das
mov
push
in
mov
adc
mov
adc
rcl
movl
ljmp
push
push
test
add
jp
push
sahf
les
pop
scas
jne
add
ret
je
push
adc
or
or
sub
or
int
js
pusha
daa
mov
mov
and
jecxz
and
mov
and
and
and
dec
in
imul
ljmp
test
xchg
sub
movsb
add
mov
jo
sub
mov
adc
pushf
xchg
daa
cmp
sub
inc
dec
cmp
xchg
cmp
roll
mov
xor
scas
test
pop
lahf
aaa
leave
jnp
or
icebp
xor
xor
sar
lcall
xor
mov
inc
outsl
insl
cld
ja
sub
insb
jmp
ds
push
and
mov
repnz
mov
lods
iret
arpl
adc
addr16
and
ja
incl
xor
jge
jb
xor
pop
add
loope
jo
mov
pushl
popf
in
je
neg
add
dec
xorb
mov
jl
mov
push
mov
out
cld
roll
jnp
int3
push
jp
cmpsb
arpl
js
sbb
jns
jb
add
shlb
pushl
mov
into
push
movsb
outsb
stc
add
js
push
sub
dec
add
lods
adc
and
icebp
push
sbbl
add
push
jbe
aas
inc
add
sub
pop
cmp
add
jl
stos
pop
mov
les
dec
push
sbb
add
cmpsl
mov
add
fisttpl
ud0
pushl
punpckldq
gs
add
push
add
testb
xchg
pushf
xor
inc
fdivp
push
decl
addl
pop
pop
fiaddl
xor
cmp
addr16
incl
mov
mov
out
add
xchg
push
enter
add
imul
dec
xlat
cmp
orb
mov
nop
mov
xchg
add
mov
fldl
pop
fbstp
cmpsl
arpl
push
add
movsl
xor
add
lahf
adc
inc
jno
and
enter
lods
add
into
outsl
add
pushl
jg
rclb
sbb
sti
js
rcrb
pop
jae
inc
add
sub
pop
cld
and
xor
pop
add
cmp
fildl
rolb
push
cmp
in
pop
enter
loop
in
es
shll
cmp
mov
xor
sub
add
pop
ja
add
push
mov
push
mov
add
sahf
push
dec
add
cmc
or
pushl
bound
cld
rcrb
lret
dec
jb
mov
add
sbb
fsubrs
jg
add
inc
pushl
lcall
std
inc
and
hlt
xchg
push
dec
call
cmp
add
sbb
pushl
add
jbe
push
lret
add
pop
loope
ret
pusha
test
mov
jg
sbb
mov
or
fistpll
cs
xchg
jle
loopne
test
das
push
cmp
dec
imul
incl
xor
cpuid
mov
add
sub
mov
outsl
cwtl
cmc
add
call
jle
scas
clc
ljmp
icebp
mov
inc
sub
mov
jecxz
mov
sbb
inc
xlat
jg
aam
js
insb
outsb
pop
hlt
add
testl
outsb
das
aas
mov
mov
orb
push
repz
pop
mov
pop
icebp
iret
mov
add
xchg
fucomip
mov
fwait
pop
adc
jo
add
dec
das
fidivs
sbb
xorb
inc
out
xchg
aas
mov
cld
ds
pop
xchg
pop
aaa
lret
mov
mov
incl
call
mov
jmp
sti
addb
ds
ljmp
sar
inc
and
scas
int3
pop
mov
add
pop
mov
stos
in
pop
add
jg
add
sbb
add
xchg
add
xor
out
mov
sahf
aam
push
stc
jg
pushl
pop
lds
cmp
xor
add
xchg
or
cmpsb
ljmp
insl
add
loope
cli
cld
sbb
call
cmc
dec
dec
add
and
jne
adc
ljmp
mov
sbb
dec
aas
dec
scas
add
inc
movsw
add
xchg
pop
sbb
sub
cmp
mov
and
repnz
xlat
jle
add
mov
add
lock
mov
add
inc
fldcw
mov
loop
ljmp
add
stc
popa
gs
add
mov
mov
push
mov
ss
dec
lcall
decl
xchg
lock
loope
add
fxch
aad
mov
adc
movsl
jbe
add
data16
lcall
iret
scas
xor
test
icebp
and
sbb
incl
lods
cmp
add
icebp
mov
and
fwait
clc
inc
call
incl
das
jns
mov
lods
es
adc
xchg
add
jmp
add
lock
bound
imul
daa
ss
xchg
pop
lcall
push
add
push
mov
cld
add
jno
lret
loope
ja
call
ljmp
into
out
mov
add
aas
out
inc
addl
movsb
pop
notb
add
lcall
push
push
ds
add
ds
inc
add
mov
stos
xorl
jg
cmp
add
pop
add
add
mov
adc
in
incl
orl
ret
jle
cmp
jmp
incb
add
mov
push
outsb
add
push
cmpsl
rcr
ret
outsl
fisubrs
decl
lock
mov
xor
inc
or
cs
add
ds
add
pop
sub
ret
scas
addr16
cmpsb
add
mov
pop
mov
jp
cltd
mov
push
in
or
icebp
fndisi(8087
jg
and
std
loopne
or
cld
or
or
add
popa
or
idiv
loop
aaa
and
push
cmc
add
rorb
gs
outsl
gs
decl
loopne
popa
test
loopne
push
or
pop
shll
mov
or
or
mov
add
push
jp
adc
add
popa
pop
repz
push
adc
stos
jae
xor
sbb
dec
repz
repz
addl
jge
cmp
fstpl
sbb
rep
lods
sub
xor
lea
fisubl
jecxz
aad
adc
cmpsb
jns
movsl
and
lcall
lcall
cltd
sbb
jns
cmpsb
jns
test
jns
cmpsb
mov
icebp
jno
lcall
xchg
adc
jns
cmpsb
jns
mov
jns
cmpsb
addl
cmpsb
jns
ficomps
push
out
jns
cmpsb
jns
scas
cs
dec
cmpsb
jns
cmpsb
mov
divb
lcall
xchg
push
out
lcall
inc
cmpsb
jns
cmpsb
xchg
cli
jp
lcall
lcall
push
mov
mov
dec
sbb
sahf
cmpsb
imul
dec
imul
mov
add
ret
push
xorb
mov
js
in
add
jo
ja
mov
sub
push
int3
add
jge
mov
push
hlt
add
jnp
mov
push
aam
push
sbb
xchg
add
adc
push
in
sbb
movsb
add
and
push
les
add
out
sbb
clc
add
add
idivl
sbb
cwtl
add
push
call
test
sub
push
out
mov
dec
sbb
mov
mov
jo
push
mov
xor
push
shl
out
jnp
add
add
add
pusha
sbb
mov
rolb
sbb
addb
jno
inc
add
repz
mov
sbb
divl
xchg
out
repz
xrelease
jmp
lret
mov
mov
and
add
mov
pop
pushf
push
sbb
rolb
out
subl
in
lcall
jmp
out
out
mul
cli
mov
stos
jg
inc
imul
in
clc
call
sti
mov
outsl
mov
into
add
pop
inc
pop
pop
testl
insl
mov
add
or
or
or
aaa
add
or
add
aas
add
add
add
ltr
add
jg
jmp
in
adc
adc
push
mov
call
out
add
int3
jle
sti
in
or
sbb
jecxz
add
loop
add
daa
repnz
add
jge
mov
mov
icebp
sbb
test
adc
adc
int3
in
fwait
add
adc
add
in
clc
negb
or
adc
cmc
adc
add
std
adc
std
push
out
mov
sbb
jg
mov
cmpb
mov
mov
mov
out
jmp
xor
lea
aad
cmp
mov
pop
outsb
pop
cmp
pop
inc
pop
xchg
pop
cwtl
icebp
push
clc
mov
pop
xor
push
mov
jno
xor
aas
icebp
add
xor
lret
clc
out
aam
sbbb
lea
idivb
mov
xor
or
adc
jmp
lcall
add
lcall
push
inc
out
outsb
push
xor
inc
inc
mov
dec
imulb
or
or
rclb
lock
xchg
adc
push
pop
insb
add
lret
add
and
nop
xchg
add
pushf
je
std
xor
pop
loopne
or
out
mov
out
mov
xorb
mov
adc
jnp
lock
xor
add
jo
out
and
test
xor
divb
lock
sbb
fidivs
mov
sarl
sub
add
add
incb
push
decb
add
adc
sbb
and
xor
inc
add
pusha
icebp
adc
aas
lods
jmp
ss
sbb
in
sbb
sbb
pop
cwtl
push
sub
sbb
imul
xor
out
out
insb
dec
fwait
pop
imul
push
popf
cmp
ds
add
cld
push
cmove
push
sarl
jb
je
xchg
bound
les
fdivl
pushf
and
and
insl
stc
aad
inc
jl
add
fisubl
push
jae
mov
nop
fldz
jbe
cli
add
mov
cmpsl
popf
int
scas
sub
push
outsl
and
out
decb
xchg
outsb
push
pushf
divb
xor
xor
dec
push
push
jo
inc
jle
add
add
mov
add
xchg
es
push
inc
jmp
scas
rcll
xchg
inc
inc
dec
mov
dec
dec
mov
dec
push
scas
cmp
mov
mov
pop
popa
bound
imul
lcall
jno
mov
mov
jp
xor
xor
xor
sub
xchg
andl
jb
je
jbe
js
jp
and
push
push
ds
mov
inc
sarb
scas
push
stos
push
aas
pop
pop
movsl
pop
pop
pop
mov
arpl
cltd
addr16
insb
ss
imul
mov
xchg
cld
jo
mov
mov
sahf
imul
dec
imull
decb
jle
fcomps
jle
inc
std
jnp
xchg
in
jg
push
mov
or
cmp
std
jns
jge,pt
inc
push
imulb
sub
push
xchg
or
add
or
in
adc
push
mov
iret
std
jg
pop
add
pop
add
add
add
cmp
add
push
add
ljmp
push
add
add
push
add
push
add
dec
add
add
add
pop
cmc
mov
add
add
add
popa
add
pop
add
mov
inc
add
fldl
lcall
mov
shr
mov
cmp
push
add
call
add
add
imul
sbb
add
add
add
push
add
sub
loopne
dec
daa
add
add
and
jo
and
bound
pop
adc
out
mov
sbb
pop
add
add
add
jb
cmp
add
mov
or
push
mov
jno
add
add
add
insb
push
fsubrl
add
xor
mov
add
dec
add
jp
lret
xor
pop
add
add
daa
add
and
mov
or
insb
push
xor
add
add
mov
add
add
add
jo
imul
sub
pop
mov
add
push
add
mov
add
insb
ss
ss
add
add
add
add
mov
add
add
pop
shrb
cmp
cs
add
add
add
sub
incb
jb
add
and
or
add
pop
add
or
fmuls
add
adc
sub
add
or
adc
push
add
imul
add
add
and
rcrb
xor
xor
pushl
sti
xor
repnz
mov
xor
movsl
xor
cmpsl
xor
pushl
push
add
xor
in
push
add
xor
ret
xor
cld
xor
mov
xor
pushl
dec
add
xor
stos
xor
stos
xor
lods
xor
scas
xor
mov
inc
add
xor
pushl
inc
add
xor
mov
xor
mov
xor
add
xor
add
pushl
cmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
xor
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
sub
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
incl
add
xor
add
xor
add
xor
add
sahf
add
sbb
inc
add
pop
push
ds
and
cmp
and
cmp
and
push
cmp
ljmp
push
ss
sub
xor
sub
xor
sub
push
xor
pushl
push
cs
xor
sub
xor
sub
xor
push
sub
cmp
es
cmp
pop
add
inc
push
sbb
add
inc
push
sbb
inc
push
sbb
inc
push
pop
add
dec
push
adc
add
dec
push
adc
dec
push
adc
dec
push
syscall
push
push
push
add
push
push
pop
push
sbb
lds
and
inc
pop
push
sub
pop
push
pop
push
bound
jb
push
adcb
lds
mov
push
mov
popa
fwait
ret
add
loop
pop
add
push
and
add
add
hlt
rolb
loop
pusha
sbb
add
add
or
push
sub
and
add
or
or
or
lds
fiaddl
cli
add
aas
push
repnz
popa
inc
ds
add
or
push
lret
inc
and
add
push
lret
or
ficoml
ljmp
or
adc
sub
inc
lret
pop
ljmp
jp
sbb
xchg
test
popa
jo
mov
sbb
fcmove
ljmp
mov
jo
sbb
sub
cmp
dec
stos
and
lret
ret
xchg
repnz
and
outsb
mov
adc
sbb
sbb
rcrb
ret
xchg
fiaddl
mov
fdivs
add
rolb
loop
adc
add
add
adc
jb
cmp
and
push
xchg
push
inc
or
add
loop
push
inc
lds
xchg
add
mov
call
add
xchg
mov
mov
add
aad
decl
add
mov
pop
pop
stos
add
mov
jmp
add
add
test
push
pop
adc
cli
pop
lods
call
pop
push
pop
scas
mov
scas
lcall
add
int3
add
pop
mov
inc
pop
int
pop
lret
xchg
pop
mov
inc
pop
into
add
pop
xchg
add
scas
xchg
add
xchg
cmp
xchg
add
pop
xchg
add
pop
xchg
ljmp
xchg
jp
cwtl
rolb
cltd
add
pop
fwait
add
mov
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
loop
mov
in
pop
cmc
add
movsb
inc
pop
movsl
lcall
rolb
cmpsl
add
pop
test
es
test
add
pop
mov
sbb
mov
incl
sbb
mov
sbb
mov
sbb
mov
pop
mov
adc
pop
mov
add
mov
adc
incl
mov
add
pop
rolb
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
jg
incl
movb
pop
movl
pop
leave
add
mov
pop
or
lcall
and
pop
or
and
add
push
or
and
cmpsb
and
and
call
popf
and
sahf
and
mov
and
lods
and
and
pusha
and
gs
mov
incl
sub
aas
or
or
and
shlb
aaa
or
or
xor
call
and
or
and
or
sub
sbb
and
or
and
or
and
or
and
or
and
mulb
or
xchg
enter
push
mov
add
and
or
pop
or
and
sbb
or
in
decl
sbb
or
and
sbb
push
or
and
or
and
adc
pop
lock
jg
adc
adc
adc
cmp
adc
mov
and
or
or
inc
imul
mov
and
xor
or
std
pop
ficomps
add
pop
or
and
pop
or
imul
pop
push
and
push
or
cmc
jmp
push
or
and
and
or
and
and
or
or
call
dec
or
dec
or
dec
or
dec
or
dec
or
inc
mov
inc
or
and
incl
sub
inc
or
add
sub
cmp
pop
and
or
or
cmp
pop
and
or
mov
xor
shll
or
and
das
or
and
outsl
decl
sbb
sub
or
and
or
and
or
and
push
daa
and
lods
xchg
jmp
and
mov
and
iret
sbb
scas
and
mov
dec
or
or
and
pushl
or
and
adc
adc
arpl
adc
data16
push
cld
adc
gs
push
and
popa
rcll
daa
or
pop
daa
in
outsl
es
inc
data16
push
mov
inc
les
push
es
mov
or
and
or
and
mov
cmp
pop
or
clc
pop
mov
add
jle
or
cmp
or
jg
mov
nop
and
or
xor
or
and
or
push
or
and
or
rolb
push
dec
mov
pop
or
add
call
add
sbb
roll
sbb
add
pop
or
add
flds
adc
fildl
adc
add
loopne
push
or
cs
jmp
add
or
jecxz
or
insb
or
add
ret
cmc
inc
aam
add
js
dec
ljmp
ljmp
or
pop
pop
or
ficompl
je
rorb
pop
jo
push
or
in
aaa
in
push
push
or
push
push
or
jg
push
or
adc
dec
or
adc
dec
or
adc
dec
or
call
push
dec
or
sbb
inc
or
sbb
inc
or
sbb
inc
or
push
hlt
lcall
push
inc
or
and
ds
and
cmp
inc
cmp
push
cld
pop
pushf
push
cmp
es
cmp
push
ss
sub
decl
xor
sub
xor
sub
push
xor
xor
cs
xor
sub
xor
sub
xor
push
sub
cmp
ljmp
jle
cmp
lock
and
push
pop
or
inc
push
lcall
or
inc
push
sbb
inc
push
sbb
dec
push
push
or
call
or
dec
push
adc
push
call
cmp
or
push
or
lods
or
push
push
or
push
push
or
xor
or
sub
xor
pop
push
pop
jp
insl
cmp
xor
xor
xor
xor
cmp
mov
lcall
aas
xor
mov
insb
sub
dec
cmp
fiaddl
ljmp
roll
inc
xor
inc
xor
sub
mov
dec
xor
xor
xor
xor
addb
dec
xor
pop
mov
dec
xor
xor
add
cmp
repnz
xor
fdivs
adc
and
xor
or
pop
xor
xor
xor
or
push
xchg
pop
xor
xchg
mov
xor
bound
shlb
sub
fsub
test
repnz
adc
adc
lods
adc
adc
pop
mov
scas
adc
adc
adc
adc
mov
adc
mov
adc
mov
loop
adc
in
fdivs
xor
mov
and
xor
push
mov
arpl
rclb
rcll
ret
insl
xor
jno
push
js
push
jg
rolb
push
push
test
xchg
add
pop
adc
xor
adc
adc
mov
addb
dec
adc
adc
add
js
pop
and
mov
mov
insb
and
cmpsl
aaa
icebp
mov
and
stos
and
push
mov
idiv
insb
add
push
div
cmp
repz
repz
out
cmp
in
in
add
add
fldt
sahf
out
lods
fsubrs
sahf
out
test
sahf
negl
push
rcrl
out
pushf
rclb
out
in
js
dec
fbstp
cs
jmp
push
mov
lea
push
jns
out
imul
jns
out
data16
arpl
in
sahf
xchg
fisubs
iret
repz
popa
push
shlb
push
xchg
cmp
repz
xchg
push
xchg
push
stc
cmp
repz
push
xchg
push
nop
add
repz
cmpsl
dec
lahf
dec
push
sahf
aad
add
insl
repz
stos
dec
add
add
add
fwait
stos
dec
push
lcall
add
stos
dec
push
cwtl
add
sbb
inc
xchg
inc
repnz
adcl
imul
imul
pop
jns
imul
add
sbb
cmpsb
test
cmpsb
jns
xor
jns
cmpsb
jns
jle
jge
cmpsb
jns
cmpsb
jl
jnp
jp
lods
jns
sub
js
push
addb
mov
rcr
stos
sbb
pop
sbbb
pop
mov
push
cs
addb
pop
or
movsb
and
mov
or
mov
push
outsl
xchg
or
fbld
and
and
and
sub
sub
movsl
das
jbe
jns
add
fwait
jg
daa
std
data16
outsl
divb
jae
jne
ja
jmp
decl
divps
cwtl
vmread
mov
mov
incl
jmp
push
pop
test
les
repnz
pushl
mov
jge
shll
add
or
push
aad
xor
jecxz
add
jnp
out
or
repz
aam
hlt
adc
adc
sbb
sbb
pop
xlat
sub
out
sar
sub
shr
pop
cmp
ret
cmp
adc
pop
cli
pop
jnp
pop
jg
sub
xchg
addb
or
outsl
mov
xchg
imul
fwait
arpl
add
jmp
jmp
push
lods
scas
scas
dec
mov
mov
dec
mov
mov
mov
mov
mov
ret
cmp
mov
leave
add
lret
xor
into
iret
das
clc
cld
decl
aad
xlat
daa
mov
fstp
fistps
loope
loop
sbb
out
pop
ljmp
pop
into
ljmp
icebp
xor
or
div
pop
stc
sar
add
stos
mov
out
lcall
pop
add
jg
pop
mov
pop
roll
loopne
push
cmpsl
pop
pop
inc
add
fiadds
and
pop
ds
dec
incl
daa
popa
mov
mov
adc
mov
add
add
sbb
pushf
ja
or
add
jg
or
fwait
repnz
lods
add
pusha
and
pusha
add
pop
sti
popa
pop
push
popa
fsubs
loop
lock
add
shll
jl
jg
andb
sub
lods
add
pop
add
add
or
or
sub
adc
push
std
mov
add
scas
iret
lock
add
add
xchg
mov
push
sbb
add
out
mov
pop
lock
or
add
pop
sub
jo
sti
or
cmp
sahf
add
xchg
divl
iret
jne
cli
lock
and
pop
sub
incl
mov
inc
repnz
or
push
inc
push
sar
idiv
pop
xchg
test
fisttps
add
push
hlt
push
dec
popa
inc
vpackssdw
fcomip
aaa
lcall
xchg
js
mov
inc
mov
repz
sbb
fstpt
repz
dec
push
dec
loopne
sahf
test
dec
cmc
filds
daa
push
pop
cs
mov
mov
add
pop
mov
rolb
push
adc
pop
aad
cmp
mov
cmp
movsb
adc
aaa
jg
cmp
cmp
jb
sbb
pop
dec
std
inc
jg
push
jno
mov
adc
in
pop
repnz
inc
fcomip
mov
mov
push
cmp
cmp
adc
cmp
cs
bound
dec
pop
std
xchg
push
cmp
or
js
ja
inc
fcmovnu
cmc
ja
pop
cmp
cmp
cmp
sub
cmp
and
sarl
xor
sbb
rclb
and
jae
jmp
int3
imul
idiv
xchg
cmp
add
push
sub
inc
push
cmp
les
xor
pop
std
int
in
xor
push
pop
in
push
cmp
pop
ss
jbe
sub
fnclex
sahf
jge
mov
loop
mov
cmpl
adc
xchg
arpl
xchg
ret
add
adc
and
sbb
cmpl
fcmovnu
lock
jecxz
and
sarl
xor
ret
aas
inc
adc
or
out
push
movsl
je
filds
jo
push
jl
jle
pop
inc
fdivr
divb
bound
int3
xlat
les
aas
aam
and
in
adc
hlt
mov
or
out
loopne
out
push
clc
pushl
insb
sub
bound
icebp
mov
dec
xor
decb
mov
jl
mov
imul
decl
add
jl
inc
lret
add
dec
push
pop
inc
dec
lds
enter
pop
or
or
pop
sar
xor
jmp
sbb
sub
lret
xor
incl
mov
pusha
lods
xor
pop
jl
and
sbb
lea
roll
in
outsl
incl
jge
das
jno
xor
sub
fcoml
sbb
in
xor
xor
sub
or
or
test
mov
or
dec
es
sub
mov
es
mov
fidivs
insb
xor
in
fistpll
mov
imul
adc
lods
xor
pop
loope
add
roll
lock
xor
add
js
leave
jae
add
push
sbb
push
xor
clc
mov
mov
xor
cmp
icebp
inc
jg
add
sar
mov
jg
pop
leave
faddl
jnp
and
xor
xor
inc
sbb
in
inc
push
xor
xor
adc
xor
xor
xor
filds
ret
lcall
sbb
call
std
mov
dec
sahf
incb
mov
inc
or
xorb
fdivr
ja
cmp
pop
cmp
cmp
cmp
mov
xchg
sub
pusha
shr
cli
inc
ds
jl
dec
mov
test
xor
in
das
mov
jl
xor
enter
xor
aas
jns
cld
call
jle
pop
add
push
xchg
stos
adc
sub
mov
mov
hlt
mov
call
cmp
int3
cmp
cmp
idivb
adc
sarl
rcrb
lcall
sbb
fidivl
js
mov
data16
rclb
dec
aas
outsl
sti
sub
out
push
push
mov
sbb
jno
movsb
adc
fdivrs
and
push
stos
pop
add
add
fldt
es
mov
addr16
scas
das
fsubrl
xor
xor
add
adc
inc
fsubrs
dec
fnstsw
pop
push
pop
sub
pop
sbb
std
dec
pop
andl
aaa
cmp
nop
ss
cmp
cmp
and
ja
repnz
inc
jmp
je
mov
divb
cmp
jbe
pop
cmc
add
sub
add
xorl
jno
dec
xor
xor
mov
pushf
push
pusha
imul
inc
jo
outsb
aaa
sub
pop
cmp
add
xor
mov
jne
xchg
addb
push
jle
mov
and
pop
in
xlat
sub
cmp
and
imul
in
sub
xchg
adc
cld
pushf
add
ja
out
fldcw
jo
fldt
rolb
daa
inc
push
frstor
push
test
push
add
decb
pop
iret
aas
jbe
cmp
cmp
out
out
ds
push
std
push
incl
stos
adc
les
out
out
and
in
mov
adc
into
jb
std
push
pusha
add
movsl
mov
dec
cmpb
sub
pop
movsb
xor
loopne
int
sub
add
in
sub
call
in
push
dec
or
fs
cwtl
ret
add
dec
add
dec
push
inc
pop
mov
jns
xchg
aas
mov
push
inc
and
pop
loopne
mov
movsb
je
ja
fdivs
lock
pusha
popf
sub
les
jmp
fwait
add
xchg
dec
fadds
or
xor
xlat
or
pop
in
andb
sbb
mov
inc
push
inc
xchg
and
inc
scas
cmc
xchg
and
inc
addr16
lret
add
xchg
stc
inc
or
mov
jl
mov
mov
jl
inc
xor
dec
daa
adc
mov
movb
mov
hlt
pop
xchg
add
push
loope
std
ljmp
lods
sahf
scas
lcall
cmp
jg
ljmp
cwtl
and
mov
push
in
data16
or
adc
push
fdiv
add
dec
in
movsl
out
rcr
repz
ss
mov
mov
mov
mov
cmpl
jg
jb
outsl
mov
stos
fdivl
gs
ljmp
add
fcomip
jae
push
dec
loopne
adc
lock
add
call
and
fbstp
xchg
inc
jle
cmp
sbb
mov
aas
xchg
mov
inc
leave
fwait
out
jp
movsl
sub
push
inc
adc
mov
cld
add
jb
mov
add
push
stos
lock
jo
std
mov
add
add
add
add
add
mov
push
cld
add
add
mov
add
mov
add
insl
std
imulb
shr
imul
push
aaa
jo
lret
ret
sbb
insb
pop
roll
dec
mov
sbb
xchg
adc
shll
xchg
je
add
or
sub
lcall
subb
adc
sub
pop
call
cmpsb
adc
es
adc
es
test
mov
and
xchg
add
add
andb
movl
cmpsb
mov
push
and
jle
inc
sbb
add
test
cmp
push
movsl
add
insl
mov
push
push
push
push
pop
mov
arpl
cs
lods
push
iret
add
push
and
and
imul
sbb
lahf
add
sbb
cmpsl
or
adc
stos
push
inc
adc
mov
push
inc
xor
dec
mov
insb
mov
roll
jmp
enter
mov
or
add
add
inc
mov
data16
inc
lcall
jl
pushw
sbb
dec
dec
push
push
inc
add
imul
xchg
pop
xchg
or
mov
lods
mov
xacquire
test
outsb
and
push
ds
in
neg
fwait
xchg
push
mov
roll
push
add
subb
das
orl
add
scas
test
lahf
fwait
jbe
imul
add
xor
pop
adc
add
cmc
subb
sbb
add
addb
rorb
pop
pop
xchg
xchg
nop
sahf
xorl
sbb
jae
lods
mov
lahf
arpl
pop
testb
outsl
outsl
xor
or
push
rorb
rolb
rolb
divb
and
add
add
sub
push
push
test
js
adc
addb
data16
or
rclb
fsubrs
out
xlat
fldl
push
push
outsl
pop
mov
adcl
pop
pop
sbb
insb
inc
add
pushf
rclb
les
mov
jg
pop
shlb
idivb
leave
inc
insb
scas
inc
rclb
dec
mov
int
jo
loop
mov
jmp
sbb
fbstp
pop
or
int3
cmpsb
mov
ljmp
mov
xor
push
stos
mov
or
cmpsl
cmpl
fwait
mov
adc
cmc
sub
sub
fbstp
add
push
ss
fucomip
and
daa
andl
cmp
add
sbb
sarb
out
jns
xchg
div
repz
ja,pn
pusha
rolb
insb
shlb
mov
mov
dec
or
or
or
pop
imul
sbbb
mov
shlb
jbe
jle
rcrl
cmp
popf
rcrl
sbb
sbb
das
adc
add
mov
mov
lret
sbb
rorb
xor
loopne
jecxz
add
jmp
loopne
outsl
incl
inc
pop
jg
aad
push
adc
cltd
add
out
dec
pop
imul
sub
cmc
loopne
aaa
adc
dec
sti
repz
cmp
push
dec
loopne
pop
push
xor
add
push
shrb
clc
loope
push
fwait
dec
test
mov
imul
add
stos
es
sbb
rcr
out
jle
loopne
imulb
in
pop
sti
not
lcall
jle
movsb
adc
add
test
adc
loopne
loopne
dec
mov
add
loopne
insl
loop
inc
or
loopne
dec
jp
rclw
inc
push
push
pop
sbb
cmpsb
mov
add
sbb
add
jg
dec
add
imul
xor
fwait
mov
loopne
xlat
aad
jecxz
call
clc
push
or
mov
jge
fs
punpcklbw
loopne
cmp
sbb
addr16
inc
pop
pop
fisubrl
cmp
add
jae
mov
cmp
dec
or
cmpsb
fcmovnu
fildll
loopne
call
sbb
loopne
out
jbe
fbstp
push
ljmp
ds
jae
mov
clc
lods
loopne
push
mov
and
pop
imul
add
adc
xor
dec
out
mov
push
add
loopne
inc
inc
es
clc
icebp
shlb
ret
dec
adc
sub
aam
stos
fadd
adc
xor
dec
ret
jnp
loopne
pop
clc
sbb
sbb
sub
sbb
loopne
cld
loope,pn
sar
enter
or
pusha
addl
push
movsb
jbe
push
aaa
and
stos
mov
jge
add
stos
insb
sbb
sbb
jbe
or
repz
nop
mov
inc
loopne
das
fidivrl
dec
in
fcomi
sti
loope
push
or
jnp
inc
loopne
push
mov
pop
cld
mov
mov
jb
sbb
xchg
loopne
sub
xchg
insb
pop
jns
stc
adc
sub
push
add
pop
fdivrp
mov
pop
xchg
es
sbb
mov
sbb
push
scas
out
loope
add
mov
mov
pop
mov
jnp
sbb
mov
sbb
addl
mov
mov
lds
cmp
loopne
mov
dec
cmpsb
clc
jbe
sub
jno
jmp
push
jo
add
mov
add
or
ja
push
or
inc
mov
ds
add
insl
mull
mov
sub
add
jno
imul
and
ret
mov
popa
fwait
cld
jo
push
sbb
lock
mov
out
repz
js
add
sub
adc
test
pop
add
cmp
nop
inc
bound
pusha
mov
jmp
cmp
ret
mov
add
mov
inc
mov
add
repnz
call
jg
pop
fidivs
or
dec
shl
jmp
cmc
inc
and
leave
xchg
add
daa
sub
inc
xchg
das
lcall
mov
push
ljmp
push
test
mov
xor
aaa
cld
mov
in
pop
scas
push
xorb
sub
decl
leave
adc
bound
dec
mov
lahf
jle
push
adc
popa
iret
or
rclb
shrb
sub
ljmp
cli
push
mov
inc
pop
pop
addb
outsl
leave
stos
movsb
pop
mov
mov
mov
icebp
push
sarb
not
sti
xchg
cmp
sbb
mov
ljmp
imul
lods
add
popa
lahf
aam
xchg
loopne
decb
sbb
and
inc
imul
mov
push
pop
cmp
add
gs
std
sti
push
mov
xchg
or
jmp
gs
xchg
cmpsl
xchg
inc
ja
add
xchg
jno
adc
adc
fsubrs
adc
btr
sbb
lods
xor
mov
add
add
popf
push
adc
add
mov
gs
lea
inc
fwait
fs
mov
mov
popa
jg
call
outsb
mov
bound
jb
add
add
and
gs
push
and
test
sbb
scas
inc
pop
mov
lcall
jne
push
dec
xchg
outsw
jle
popa
je
mov
ss
arpl
mov
push
lods
jo
in
pushl
xchg
ss
fwait
push
je
lea
je
push
fmuls
call
xchg
insb
mov
inc
lcall
popa
outsb
fwait
insb
test
rcl
push
sahf
push
sub
add
fisubs
pushl
jmp
in
ret
js
in
and
mov
inc
je
jo
das
das
ja
mov
bound
pushf
outsl
insl
das
xor
js
addr16
dec
aaa
loop
mov
arpl
dec
add
add
test
pop
xor
cmp
inc
fsubrl
push
loopne
out
add
nop
xchg
lcall
push
mov
clc
push
outsl
pushf
sbb
jno
mov
ret
rolb
add
push
decb
jno
lea
je
add
and
xor
mov
jmp
sub
insl
and
fldl
mov
gs
mov
movsl
dec
mov
mov
mov
pop
cmpsl
mov
dec
mov
or
jmp
add
rol
sbb
mov
aaa
out
cli
inc
in
xor
lock
add
rorb
iret
pop
or
loopne
mov
test
loop
pop
inc
dec
test
mov
stos
ljmp
call
dec
add
gs
and
int
jb
xor
call
add
ror
cmp
imul
stos
push
mov
cmpsb
loopne
mov
mov
mov
inc
icebp
pop
lock
mov
arpl
add
jg
push
sbb
sub
leave
and
daa
out
add
inc
sub
int3
loopne
ret
mov
clc
add
std
push
enter
repnz
fnsave
loop
mov
into
rolb
dec
xor
add
dec
shll
fdiv
push
cld
cmp
fsub
xor
iret
icebp
loopne
daa
and
aas
cmp
mov
cmp
dec
inc
push
or
inc
test
pusha
imul
popa
jle
mov
pop
js
jnp
imul
pop
add
pop
imul
jecxz
das
cli
push
cmpsl
inc
inc
inc
sub
aaa
aam
ret
into
and
je
ffreep
icebp
inc
mov
dec
pop
xchg
dec
adc
mov
incb
stos
repnz
cld
jo
mov
fnstsw
ror
cltd
and
add
fidivrs
and
and
sub
cmp
cmp
mov
mov
cmp
and
add
lcall
mov
add
xor
sahf
xor
mov
std
xor
xor
adc
sarl
sbb
cmp
add
add
call
sbb
ret
dec
das
mov
and
sub
lret
data16
ds
xor
std
or
mov
dec
cmp
sub
inc
cld
inc
pop
dec
mov
pop
or
push
ja
scas
pop
inc
pop
in
push
cmp
test
push
dec
add
pusha
aaa
sahf
bound
sar
jmp
das
les
insl
sub
cld
push
add
push
hlt
inc
push
sbb
and
mov
pop
dec
pop
mov
inc
inc
push
out
adc
call
icebp
sbb
push
testb
push
mov
mov
xchg
fbld
lret
cltd
pushl
inc
jmp
fcompl
pop
sbb
int3
push
push
loop
adc
in
adc
adc
or
add
and
cmpsb
dec
mov
int3
mov
xor
cmp
daa
mov
fcmovbe
pushl
pop
xchg
ret
fcmovu
pop
adc
mov
cwtl
and
das
pusha
aad
incl
bound
jne
jns
jo
jg
jbe
add
jp
jo
dec
cs
sub
les
sbb
jecxz
jle
repz
add
sbb
adc
cmp
push
negl
sbb
or
cmp
sti
scas
adc
ret
dec
cmc
mov
jmp
in
in
lock
rcrb
in
out
pop
cld
fistpll
std
icebp
adc
in
and
hlt
loopne
add
hlt
bound
ret
mov
inc
into
ret
faddp
xorb
iret
fsts
shll
jae
sahf
mov
jbe
pushf
nop
sahf
arpl
push
jmp
mov
mov
enter
into
sub
mov
jmp
mov
jb
fdivp
jg
inc
test
or
cmp
cmp
pop
or
loope
sub
jo
adc
fwait
mov
push
cmp
out
ljmp
pop
or
add
cld
jmp
add
es
testl
adc
test
jo
pop
std
int
enter
iret
mov
ret
dec
int3
add
pop
icebp
xor
aaa
loop
fiaddl
sub
ljmp
fisttps
out
clc
sub
out
and
mov
outsl
jle
jg
xchg
cmp
test
mov
sahf
or
out
and
mov
in
add
push
push
inc
mov
push
add
sub
jg
inc
imul
push
test
push
dec
add
xor
cmc
fdivs
int3
sbb
mov
inc
aas
jo
add
int3
jecxz
and
rorb
mov
jmp
clc
vmovaps
xlat
fnstenv
out
ss
add
es
pusha
cmp
das
sub
fdivs
sbb
into
sub
cmp
cmp
es
out
fldl
faddp
sub
jg
movsb
mov
lods
add
cmpsl
lock
or
ds
or
or
hlt
ljmp
cltd
mov
jne
addb
push
push
mov
pop
repnz
hlt
lock
cmc
cmc
cmp
js
jns
ja
fwait
pushf
arpl
lcall
mov
lahf
inc
mov
xchg
aas
pop
lret
fmul
cmp
mov
add
mov
dec
dec
clc
xchg
push
jg
mov
imul
push
pop
xchg
push
pop
dec
mov
push
test
pushf
and
nop
xchg
mov
decl
jp
mov
cmpsl
add
lock
jnp
mov
subb
jo
mov
fstpl
jle
lcall
jae
jno
jne
insb
es
in
lcall
std
push
out
call
rol
shll
fcmovbe
leave
insl
sbbl
roll
out
add
jmp
push
repnz
fnclex
in
ljmp
cli
out
add
mov
lods
scas
sbb
aam
cmove
outsl
lock
nop
pushf
packssdw
jmp
push
repz
std
and
lock
jle
cmp
insb
push
push
out
cmp
rcl
test
scas
insl
es
jp
mov
incl
out
nop
clc
pushl
imul
push
fcos
pop
ljmp
dec
pop
pop
test
mov
and
push
insb
insb
sbbl
in
mov
hlt
cmc
hlt
or
lock
mov
cmp
cmp
jl
sub
dec
cli
call
add
jae
fcmovb
cmp
js
fcmovne
xor
enter
out
mov
iret
sub
je
sub
add
mov
add
mov
sti
in
aas
jns
xchg
andb
xchg
pop
sub
shll
int
xor
mov
cmp
dec
inc
push
stos
inc
push
inc
lods
bound
andl
sub
je
xchg
jbe
outsb
xchg
sub
push
clc
sti
scas
dec
dec
dec
mov
mov
or
jecxz
cld
adc
add
sbb
adc
std
sub
incl
inc
mov
mov
ret
jg
loop
fcom
jmp
imul
pusha
inc
push
out
jle
dec
pushl
std
pushl
pop
dec
mov
inc
sub
ss
aam
sub
shll
adc
xchg
cli
add
and
iret
or
pop
ret
or
aaa
testb
stos
lods
movsl
bound
aam
fsubrl
int3
sub
xchg
add
lahf
inc
jle
ret
test
lret
cmc
sub
xor
jo
push
cmpsl
cmp
rorl
repnz
jmp
sbbl
loopne
push
loopne
mov
test
jae
add
jmp
lahf
mov
dec
lods
mov
dec
test
scas
xchg
or
loop
fdivrp
sbb
hlt
adc
cltd
xchg
out
or
dec
pop
pop
mov
cli
mov
fistps
imul
cmpsl
push
stos
mov
icebp
adc
clc
out
inc
and
pop
inc
pop
mov
add
inc
mov
out
sti
call
cltd
cmp
cmp
and
push
sarl
and
ds
jg
pushl
inc
inc
dec
mov
imulb
inc
push
inc
lods
dec
gs
loope
outsl
mov
jp
lea
push
jae
jge
jle
out
xchg
mov
push
push
dec
pop
pop
scas
test
pop
stos
movsb
pop
cld
lret
mov
cmpsl
cmpsl
mov
jmp
int3
fadd
xor
roll
subb
xchg
jnp
and
mul
pop
xlat
std
jg
ret
push
mov
or
or
sbb
divb
inc
inc
dec
mov
mov
cmp
sub
sub
or
cmp
and
test
xchg
ja
addr16
int3
fimull
arpl
decb
jb
xchg
je
sub
cld
testl
sti
jg
sub
daa
and
push
fstpl
push
ficompl
imul
xor
mov
sbb
jge
es
rolb
aaa
jae
mov
adc
outsb
notl
arpl
outsl
push
push
adc
sub
jo
cs
jbe
adc
push
mov
mov
lret
push
mov
sbb
mov
cmp
and
push
xchg
cmc
adc
lcall
outsl
inc
dec
cmpl
dec
push
jns
jle
jno
gs
pusha
das
lods
add
and
loop
add
fwait
xor
xor
fnstcw
das
js
or
and
adc
push
pop
icebp
pop
jbe
mov
dec
scas
push
push
jns
mov
call
and
sub
cmp
mov
add
iret
cmp
mov
push
incl
sbb
test
dec
sbb
shl
or
loopne
adc
cmpsl
mov
pop
icebp
mov
push
jmp
in
sbb
shlb
sub
loopne
sub
pop
add
jmp
adc
sbb
std
repz
in
es
icebp
fimuls
sbb
decl
cvtpi2ps
push
or
icebp
adc
mov
aas
mov
pop
ja
fwait
pop
sbb
jg
cwtl
pop
pop
push
movsb
inc
inc
pop
mov
push
imul
mov
ljmp
pop
das
adc
push
stc
jg
jae
push
jns
jg
pop
jle
pushf
jg
jge
js
pop
lahf
outsw
lea
dec
push
lds
data16
sti
cmp
and
test
jg
aas
xor
sbb
aad
and
add
and
cltd
jnp
xchg
incl
cwtl
cltd
jne
mov
sahf
pusha
addr16
pushl
cld
jae
je
add
jo
scas
insb
mov
xor
jg
xchg
mov
or
xlat
rolb
into
dec
and
and
rolb
cmp
int
cmp
fbstp
and
ljmp
fdivrp
mov
push
sub
loopne
or
movsb
or
push
int3
pop
adc
in
add
add
sub
div
clc
stc
add
cmp
mov
sub
add
jmp
and
ret
ss
adc
incl
cld
adc
adc
adc
cmp
xor
cli
pop
sbb
sti
add
jg
push
fdivrs
dec
dec
sbb
push
push
inc
lods
inc
inc
adc
pop
or
push
inc
cmpsl
inc
push
add
mov
fs
jg
call
jg
xchg
imul
mov
mov
cli
mov
mov
dec
scas
mov
adc
mov
add
ror
enter
pop
pop
mov
push
dec
pop
mov
pop
dec
stc
bound
dec
or
incl
mov
push
or
mov
fs
enter
fucomip
cli
rcrl
xchg
cmc
push
pop
frstor
shrd
pmullw
filds
in
cs
int3
and
and
add
sub
and
add
cmp
pop
lcall
das
sub
push
xor
jmp
xor
sbb
ljmp
and
add
push
jmp
adc
sbb
je
mov
jp
into
jl
pop
mov
scas
inc
push
inc
mov
incl
mov
inc
insb
js
inc
push
inc
stos
pop
dec
sbb
gs
push
jbe
subl
call
imul
jp
mov
dec
lock
orb
lock
sti
or
jg
insb
lcall
mov
push
push
lea
insl
xorl
mov
fcomip
pop
loopne
inc
inc
dec
dec
mov
cld
add
jg
loopne
mov
outsb
jge
outsb
jle
mov
decl
outsl
inc
push
imul
jbe
xor
dec
pop
lea
inc
mov
lcall
xchg
test
jb
lret
mov
lcall
xchg
xchg
incl
xlat
nop
outsl
xchg
cwtl
int3
movsl
movsb
loop
out
loope
call
mov
decl
cld
push
mov
mov
shrl
rcl
jp
enter
orl
out
addr16
mov
popa
ja
xor
jo
insb
insb
jne
outsl
sub
mov
in
and
arpl
mov
mov
incl
out
add
xor
push
dec
mov
or
dec
clc
mov
ret
and
xor
shrl
xor
rcll
loopne
add
insl
bound
adc
jp
add
ljmp
push
hlt
sbb
add
jmp
sbb
in
xor
add
loopne
decl
or
cli
cli
inc
mov
cld
sbb
hlt
jecxz
mov
ljmp
aam
sub
xchg
lds
rol
shrb
nop
or
add
ror
ret
sub
int
or
int3
test
inc
mov
mov
add
mov
sub
int3
shlb
stos
push
loopne
mov
ret
test
nop
pop
mov
mov
xlat
lcall
popf
mov
lret
mov
push
sbb
push
push
pushf
divb
arpl
fwait
js
and
inc
fisubs
pop
inc
insl
stos
push
dec
pop
movsl
dec
dec
pop
hlt
push
dec
dec
test
dec
or
inc
fnstenv
jle
mov
pop
dec
data16
dec
cmp
fucomp
sbb
lcall
adc
out
or
mov
insl
sub
shrl
cmp
aaa
cmp
cmp
int
insl
ja
mov
sbb
les
add
lret
dec
stc
sbb
cs
sub
pop
push
inc
mov
arpl
je
jb
lcall
adc
inc
test
mov
mov
mov
out
iret
and
loopne
cmp
add
adc
pop
fnstenv
add
ret
dec
lahf
lock
in
jecxz
and
neg
and
repnz
cli
aam
aas
fcmovnb
fldcw
pop
pop
lock
aas
xlat
pop
jmp
cpuid
adc
fidivrs
and
jg
clc
xor
sub
sarb
and
mov
mov
lcall
lds
adc
push
fimull
add
pop
ja
jg
iret
aam
enter
iret
iret
out
add
add
pop
and
out
mov
mov
or
lcall
icebp
mov
mov
sahf
inc
mov
mov
mov
mov
pop
in
jmp
xchg
iret
push
push
aaa
in
sbb
sbb
adc
sbb
dec
ja
xchg
jp
push
jp
push
and
loope
cmpsb
lods
dec
lods
mov
jle,pn
pop
repnz
cmp
adc
fists
push
jecxz
adc
sbb
pop
push
pop
stos
push
pop
add
cmpsb
dec
mov
dec
push
scas
and
add
sub
sub
loope
sbb
in
adc
cld
or
add
dec
mov
nop
mov
inc
inc
repnz
mov
call
int
rcr
shll
lds
rol
jne
lcall
leave
sahf
xchg
adc
jmp
push
clc
out
push
mov
loop
dec
ljmp
mov
or
add
pop
cld
inc
inc
jl
lcall
sbb
pop
pop
pop
cli
sbb
notb
adc
sbb
mov
push
cmp
pop
dec
dec
dec
sahf
add
inc
decl
mov
inc
sbb
mov
push
pop
stos
push
pop
push
mov
add
aam
es
cli
call
lret
enter
xchg
xchg
les
push
cmp
enter
iret
pop
jmp
scas
pop
test
stos
xchg
scas
aas
xor
aam
push
call
sub
mov
adc
repnz
cmpsb
mov
xchg
mov
sbb
mov
and
lcall
movsl
outsb
sar
iret
cmpsl
push
push
push
mov
push
pop
pop
inc
daa
loop
neg
xor
add
aad
jns
lcall
sub
xchg
cmp
sub
lret
into
ljmp
fdiv
xchg
lahf
cmp
mull
and
aad
adc
popa
mov
gs
sti
call
add
xchg
xchg
and
inc
sti
sti
in
sbb
push
mov
daa
int
into
cmpsl
mov
sbb
out
dec
stos
lods
fcomi
jge
mov
mov
dec
push
push
in
xchg
sbb
jmp
jo,pn
mov
pop
push
int
sub
shlb
jb
jl
xor
or
aaa
jp
jg
std
lcall
pusha
sub
fidivs
ja
in
ss
push
inc
sub
adc
or
aas
pop
push
out
mov
cmp
xor
outsb
push
hlt
div
or
call
sbb
lock
in
fldz
out
or
icebp
ljmp
mov
int
jl
cmp
lret
lret
ss
cltd
and
icebp
filds
add
cmpsb
mov
mov
les
dec
sub
jnp
add
cmp
push
fisttpll
cli
sti
dec
gs
pushf
add
mov
jns
cmpsl
push
add
frstor
push
lahf
mov
mov
incb
add
xor
or
lret
outsb
mov
pusha
outsb
aad
fldl
je
outsb
cmp
inc
inc
add
xor
push
outsb
sbb
fsubrp
pop
xadd
dec
push
add
outsl
dec
mov
popa
bound
gs
fwait
ret
add
incb
inc
lea
je
push
adc
imul
jne
push
lcall
aaa
mov
add
add
push
pop
xchg
jo
arpl
pop
mov
cmp
lock
cltd
jbe
push
outsb
xchg
or
pop
push
mov
jb
outsb
outsb
push
push
push
testl
jg
jnp
mov
xchg
and
test
pushw
xchg
mov
sbb
popa
xchg
push
cmpsl
repnz
lea
or
fidivrl
lds
jg
adc
cmp
arpl
cmp
mov
js
in
sbb
ret
outsl
add
ds
and
pop
add
into
clc
outsb
add
add
aad
cld
fstpt
arpl
je
dec
data16
addr16
cmp
pop
and
lods
cs
clc
hlt
cmp
push
and
testb
incb
ss
insb
insl
mov
cs
sbb
outsb
push
cmp
sar
jb
xchg
push
mov
outsb
add
pop
pop
or
nop
add
pop
shll
xchg
xor
int
inc
add
addb
pop
nop
sbb
mov
mov
pop
scas
stos
cmp
pop
ficoms
pop
fwait
inc
inc
add
popa
and
jnp
cmp
xchg
inc
fistl
pop
mov
orb
andb
incl
faddl
cmp
add
icebp
addb
dec
sub
daa
add
movl
lods
movsl
and
mov
subl
jg
fldt
push
inc
push
mov
inc
adc
push
mov
andl
lock
push
dec
mov
inc
mov
xorl
inc
orl
add
stos
dec
push
pusha
stos
mov
cmp
adcb
push
movsb
dec
dec
mov
push
decl
push
cld
scas
inc
sbb
dec
addl
inc
sbbl
dec
inc
mov
or
roll
or
roll
push
xchg
add
sbb
push
dec
dec
dec
mov
add
inc
inc
add
adc
dec
cmpsb
pushf
jne
decl
js
sub
gs
arpl
pop
push
adc
pop
je
shlb
pushf
mov
out
mov
outsb
mov
arpl
hlt
lahf
jbe
jo
jb
fs
pushf
push
stos
inc
pushl
or
shlb
cmp
rclb
mov
sub
xchg
adc
aad
cmpsl
mov
jo
scas
add
sub
mov
jb
or
add
nop
ja
ret
das
adc
mov
mov
push
sub
inc
dec
icebp
mov
inc
push
ret
imul
popa
inc
xor
fistpll
adc
cmp
addb
fwait
sub
imul
or
popa
jbe
mov
fistpll
lcall
popa
xchg
shrb
pop
sbb
inc
arpl
pop
mov
or
lock
xor
or
mov
inc
sahf
int3
add
rorb
ret
jae
outsl
mov
pusha
xor
dec
push
cld
rolb
push
aam
mov
xchg
and
ret
ret
inc
lea
aam
push
jbe
inc
ret
cmp
enter
pop
xchg
insl
xor
push
cmpsl
mov
pushf
imul
data16
fdivrs
inc
fdivl
shlb
adc
cwtl
outsb
mov
ss
arpl
add
insb
and
push
frstor
shlb
imul
and
push
sahf
popf
pusha
mov
jle
pop
mov
mov
and
imulb
push
outsl
fwait
insl
mov
mov
sbb
and
loopne
mov
mov
xorb
loope
fucom
add
ljmp
sbb
loopne
inc
sbbb
rcll
mov
popa
push
pop
stos
mov
push
lods
mov
adc
or
pop
jbe
cld
add
into
mov
push
das
adc
jnp
inc
je
aam
mov
lock
test
clc
ja
decb
sti
push
or
ret
push
stc
inc
cmp
jne
sbb
cmpsb
aas
xchg
mov
mov
jne
int3
leave
test
jle
mov
std
incl
lea
add
cmp
or
push
cmpb
xor
add
dec
es
movsb
test
clc
jg
lcall
jecxz
adc
sub
cs
or
inc
hlt
push
insl
xor
std
movsb
rcrb
ret
xchg
push
mov
push
je
cmp
test
fisttpl
fcoms
or
adc
add
jbe
inc
fmuls
or
or
clc
scas
push
push
decl
jl
jmp
mov
jne
xor
jmp
push
test
sub
jne
mov
mov
adc
push
cmp
push
inc
add
icebp
and
jg
das
jne
decl
fbld
clc
inc
sbb
mov
sbb
mov
lea
or
testl
cmp
sti
ljmp
adc
mov
fdivl
xor
cld
jno
adc
or
mov
pop
jne
inc
mov
xor
clc
lods
jbe
inc
mov
or
lea
or
push
pop
sbb
mov
inc
add
add
mov
in
hlt
mov
jg
fsts
fcompl
lret
push
mov
add
jmp
loope
std
or
inc
push
add
movb
mov
mov
jg
adc
sub
push
fdivl
call
jg
incl
inc
hlt
mov
movb
and
jne
inc
test
mov
std
ss
add
shlb
cmp
mov
or
je
mov
clc
je
cmpb
je
push
jl
fildll
lock
testb
dec
ret
ljmp
adc
fisttps
ficompl
adc
push
dec
std
out
add
sbb
fnstsw
add
loopne
ljmp
aam
lock
sti
cmp
jl
pop
pop
ss
test
cmp
ds
jg
out
add
ss
test
loop
pop
mov
test
sarl
mov
cmp
xchg
or
and
pop
in
push
and
mov
scas
test
cld
addl
adc
leave
clc
push
add
dec
add
push
jbe
clc
cmp
leave
inc
pop
jmp
xor
cld
adc
mov
cmpb
and
pop
jg
lock
xor
stc
cmp
mov
lods
ljmp
lcall
clc
aas
fisubs
jg
sbb
inc
pop
add
pop
stos
mov
add
mov
loopne,pn
xchg
jo
push
sbb
push
push
inc
mov
addl
mov
inc
cmpsb
mov
push
xor
pop
cmp
mov
mov
call
or
outsb
divb
incb
add
xchg
pusha
or
mov
movzbl
clc
jmp
divl
xor
push
mov
cmpsb
decl
into
mov
out
call
or
mov
aaa
adc
adc
pop
sbb
mov
scas
jl
dec
cmp
jne
addb
mov
inc
je
cmp
sub
es
sti
sarb
or
movl
pop
push
or
sub
ljmp
mov
add
jl
add
and
push
je
push
mov
sbb
inc
pop
mov
lock
fdiv
into
cmp
pop
pop
add
movl
cmp
sbb
adc
dec
dec
cmp
test
jns
xchg
or
mov
mov
stc
and
outsl
dec
iret
sub
addr16
jae
and
fs
shll
addb
jae
add
mov
jg
push
add
cli
cmp
pop
mov
add
ljmp
loope
addb
dec
sbbb
iret
add
lea
sbb
add
dec
sbbb
ret
xor
add
pop
mov
xor
xor
sahf
jmp
ja
fiaddl
cmp
enter
jb
dec
or
lcall
cmp
lock
and
imul
mov
jnp
lock
add
icebp
push
push
adc
mov
xor
je
add
mov
xor
jl
adc
xchg
divb
push
sub
in
inc
mov
jmp
jl
gs
dec
cmp
stos
or
lock
push
xchg
lods
enter
and
mov
cmp
jae
push
jb
clc
or
and
xor
cli
push
les
dec
mov
adc
cmpl
sbb
jg
inc
xor
jge
add
jo
jo
adc
inc
adc
or
rol
jp
or
inc
fadds
cmp
xorb
je
push
sahf
fidivs
push
add
dec
inc
adc
adc
jne
xor
mov
adc
das
cli
scas
cli
mov
jmp
pop
mov
fdivs
jne
mov
pusha
jnp
shll
movzbl
add
je
hlt
inc
add
lock
jl
add
dec
lock
adc
sbb
mov
std
jne
mov
mov
or
es
adc
lock
or
adc
ret
clc
add
mov
std
pop
lea
lea
mov
cmp
jbe
idivb
jg
sti
cmp
jg
add
and
sub
rorb
mov
xor
jg
mov
jne
mov
pop
cmc
adc
pop
jecxz
call
sbb
mov
cmp
jae
add
jge
call
jo
mov
mov
sub
push
xor
or
mov
and
cmp
into
mov
jmp
jge
cld
sub
scas
in
add
pushf
call
clc
addl
in
mov
fimuls
cmp
mov
sub
lcall
adc
lret
inc
fcmovbe
push
jg
andb
pop
push
jo
mov
wrmsr
cs
daa
sbb
pop
add
les
jae
mov
call
mov
pusha
data16
lea
sub
sub
jmp
jbe
test
xor
xor
insb
add
adc
cltd
loopne
mov
lret
inc
sub
je
in
stos
cld
mov
jp
fbld
adcl
dec
shl
lea
ljmp
add
int3
inc
imul
jae
test
scas
call
add
and
into
add
pop
scas
clc
incl
adc
push
call
jge
in
icebp
or
imul
ja
subb
push
mov
or
cmpsb
mov
lock
add
cwtl
cmp
or
or
jno
mov
test
or
rorb
pop
cwtl
pop
mov
ljmp
test
jle
lock
test
call
aas
je
scas
sub
or
imul
lcall
and
or
scas
add
fbstp
mov
cmpsb
xor
pop
jns
pusha
xor
or
decl
fcomps
rcr
add
ret
mov
inc
call
lcall
rcll
inc
pop
sti
adc
mov
orl
push
xchg
push
mov
add
cmpsl
sti
fcom
mov
xchg
lock
push
push
je
call
sbb
push
mov
ret
and
add
inc
adc
out
lea
cmp
shll
bound
lock
movl
push
mov
fadds
push
mov
pop
fldl
sahf
decl
push
inc
jmp
pop
mov
add
sar
mov
and
add
jbe
push
shlb
movsb
sub
cmpsb
jne
add
pop
es
mov
mov
call
sub
or
inc
fisttpl
mov
cld
les
add
pushf
xchg
jno
cmp
mov
jl
or
or
into
dec
mov
jmp
adc
push
push
jl
adc
cli
ss
andl
push
rclb
lods
push
out
mov
push
or
adc
mov
cmp
fimuls
add
sbb
mov
and
adc
pop
in
es
clc
push
push
adc
xor
add
add
lcall
jae
push
pop
mov
lock
pop
mov
ljmp
mov
xor
leave
and
xor
mov
adc
sub
scas
cli
cld
push
xor
dec
testb
xor
cld
leave
cmp
sub
pusha
cld
fucomip
push
into
mov
xor
push
jo
and
pusha
stos
push
inc
inc
jp
xor
add
mov
mov
jo
and
ljmp
sbb
or
push
iret
lock
mov
push
push
mov
xor
orb
or
jg
outsl
cli
divb
adc
ret
dec
push
jo
push
pop
and
inc
repnz
adc
nop
sbb
rclb
test
push
cmp
mov
or
lock
sbb
xor
push
mov
mov
out
ret
decl
imul
dec
mov
xor
pusha
inc
repz
daa
mov
jno
jne
add
sub
mov
push
pop
push
repnz
mov
jne
xor
jmp
push
lock
sbb
mov
mov
dec
inc
mov
mov
out
loopne
xor
hlt
sub
push
cld
push
call
mov
mov
jmp
mov
andl
push
mov
inc
jg
mov
scas
dec
mov
in
mov
add
in
add
jb
cmc
incl
add
dec
dec
push
mov
and
mov
fdivs
add
or
in
in
mov
std
inc
lea
mov
pushl
xchg
add
mov
fwait
jle
test
jo
push
mov
fsubrl
ja
pop
push
push
and
and
cmp
cmc
sub
push
mov
test
lcall
data16
pushl
call
sbb
loopne
test
testb
sbb
imul
loop
pushf
aam
mov
cmpsb
push
mov
mov
jl
push
popa
mov
pop
or
adc
ficoms
std
pop
es
jb
jno
lea
adc
je
movsb
mov
pop
jo
jbe
clc
push
sti
fisttps
andl
scas
xor
adc
pop
dec
rol
test
andl
jmp
mov
or
mov
jl
pushl
outsb
shr
fdivl
ret
sub
leave
adc
test
pop
cwtl
call
mov
adc
push
in
cmp
sub
cmpsb
add
lods
mov
mov
shl
pop
and
pop
imul
mov
inc
or
dec
push
mov
pushl
xor
loopne
inc
daa
sub
mov
add
adc
inc
xor
push
push
push
das
rorb
leave
inc
cmp
fadds
cmp
je
push
push
mov
mov
and
test
lea
insb
mov
add
ds
inc
xor
mov
clc
pop
and
cmp
jl
jmp
or
lods
pop
shrb
dec
in
daa
mov
subb
mov
add
or
mov
pop
sbb
adc
pushw
cmpb
dec
cmpsb
mov
and
fcmovnu
dec
adc
or
add
cmp
mov
sub
mov
jb
rolb
ljmp
jnp
add
jmp
dec
mov
je
add
or
mov
fcompl
xor
add
inc
out
xchg
lcall
dec
add
mov
cwtl
lock
js
add
lea
cmp
inc
cmp
hlt
hlt
sub
add
stos
xchg
lock
push
sar
bound
push
int3
aad
jno
pop
push
inc
mov
push
xlat
repz
popa
push
mov
or
xchg
inc
cltd
xchg
mov
xchg
cmp
sub
jecxz
xor
push
pop
cmpsb
add
sti
div
imul
dec
adc
rep
xor
add
fists
push
xlat
cld
fsubl
mov
add
nop
cld
jp
add
pushf
xor
push
std
xchg
adc
inc
push
adc
xchg
mov
mov
inc
xchg
inc
push
insb
lahf
xchg
roll
je
rorb
fdivp
sub
fistl
fwait
sahf
xlat
and
insl
cmp
aad
je
push
pusha
dec
mov
push
addr16
pop
rorb
test
adcb
and
clc
jle
mov
add
shrb
fs
mov
push
inc
test
cmpsb
mov
push
ret
and
jbe
and
add
call
xchg
testl
enter
rorb
jbe
pushl
adc
sti
je
test
stc
les
rcrb
dec
adc
ret
jne
adc
pop
or
loopne
out
xchg
adc
fdiv
pushl
shlb
into
pop
icebp
decl
pushf
cmp
jne
mov
scas
push
push
fwait
rolb
push
pop
lea
call
sarb
cmpsb
push
ljmp
xor
pop
mov
insb
int3
rorb
fldt
lea
stos
subl
jb
or
scas
ret
jg
daa
push
push
xchg
add
add
add
loopne
or
add
les
call
sub
stos
add
lea
cmp
jmp
mov
adc
sbb
inc
adc
pop
sbbb
scas
push
out
ljmp
dec
fnstenv
shrl
fistpl
xor
inc
xchg
fs
adc
shl
inc
dec
or
icebp
add
push
xor
xor
call
ljmp
sarl
cmp
add
fadds
stos
push
mov
mov
mov
je
sub
aaa
sbb
insb
add
or
jne
pop
mov
out
adc
jge
mov
je
mov
mov
repz
or
outsb
and
std
and
rorb
orb
or
and
sub
add
push
shlb
sbb
fdivrs
into
cmp
xor
mov
push
sete
movzbl
scas
lea
idivb
pop
or
pcmpgtb
arpl
add
call
lock
insl
xchg
in
cwtl
cmp
ss
in
push
idiv
ja
and
cld
in
pop
add
mov
jb
or
and
mov
cmpsl
lea
leave
je
jp
or
mov
pop
inc
pushf
jl
rclb
lcall
enter
pop
inc
ret
pop
fwait
hlt
in
mov
roll
clc
mov
lods
jecxz
jnp
dec
lods
ss
pop
lret
adc
mov
mov
xchg
loopne
xchg
dec
xchg
scas
or
hlt
or
xchg
enter
and
les
pop
sti
ljmp
subb
call
lea
pusha
adc
add
inc
add
mov
push
sbb
call
lods
mov
call
fldl
push
pusha
fwait
sbb
ss
push
decb
scas
xlat
mov
decb
lea
pop
cmp
adc
lea
in
test
add
ss
or
push
outsl
lret
sbb
dec
inc
dec
sub
adc
add
xchg
inc
jbe
add
loopne
mov
sar
jg
xchg
pop
cmp
je
cmovs
add
aaa
je
push
int3
not
mov
inc
jnp
iret
jne
and
addl
add
pop
jne
push
pop
cld
or
pusha
add
pop
das
cmpw
add
or
or
and
and
fildll
add
push
leave
jmp
jb
pusha
mov
xchg
add
hlt
add
add
fcomip
jmp
add
pushaw
pop
add
pop
cmp
or
loop
jle
je
sub
cmp
xchg
pusha
push
add
inc
andb
incl
shll
xor
cld
push
adc
xchg
std
ljmp
loopne
mov
push
or
sahf
and
push
xlat
add
and
out
push
adc
jo
cmp
mov
out
inc
fildl
inc
shl
xchg
or
data16
lea
mov
cltd
mov
inc
das
clc
call
notl
adc
cmp
mov
js
icebp
inc
add
pop
mov
ret
in
add
inc
and
hlt
call
jecxz
je
mov
or
pop
mov
scas
mov
mov
mov
push
call
cld
pop
je
jne
movsl
movsl
shlb
aas
loopne
add
cltd
cmpl
ret
add
or
lea
ljmp
inc
jl
jbe
ljmp
cld
push
inc
pushf
xor
jecxz
loopne
loope
je
popa
sbb
dec
mov
js
clc
lds
rorl
or
leave
cmp
add
pop
lods
shrb
lods
and
call
push
inc
push
dec
sub
pop
leave
mov
mov
jbe
lret
call
pusha
call
decl
enter
orl
sti
pop
xchg
movb
imul
ljmp
adc
addb
mov
pusha
dec
pop
push
add
in
add
loopne
test
cmpsl
dec
add
pop
rolb
jno
mov
add
pop
pop
stos
outsb
ret
lea
or
shlb
dec
inc
call
or
mov
jne
fiadds
dec
sti
andl
fwait
jle
fistpll
cmp
inc
mov
gs
pushl
and
jbe
sbb
mov
add
mov
jl
repz
push
je
mov
scas
pop
adc
pop
icebp
sbb
call
push
pop
outsb
jo
push
clc
pop
push
mov
push
sub
sti
jae
mov
scas
or
or
data16
push
test
stc
mov
call
cld
decb
jnp
pusha
mov
lea
or
sahf
jbe
shl
pop
call
cmp
fucomip
adc
mov
or
add
or
add
inc
xlat
inc
cld
mov
shl
adc
shl
lock
jle
shlb
sbb
fmul
adc
xchg
sbb
mov
je
fcoms
push
sbb
cld
add
add
rcll
add
push
push
clc
jp
mov
stos
popa
orb
mov
mov
jl
les
hlt
pop
orb
add
xor
mov
add
jl
xchg
adc
adc
cmpsl
mov
je
call
pop
mov
js
test
lcall
add
lods
ja
mov
shlb
faddl
rclb
call
rcrl
pop
mov
lret
test
inc
jp
dec
xor
outsb
mov
jg
shll
lods
push
cmpsl
mov
jb
add
add
jbe
or
or
divb
ds
jbe
mov
orb
sbb
mov
call
inc
jo
mov
xchg
mov
xor
out
xor
ljmp
stos
adc
je
in
pushl
insl
sub
in
loop
sbb
jo
mov
aad
add
pushf
stos
or
in
in
add
pop
or
dec
lock
xchg
add
pop
call
movsbl
jle
cmc
fistpl
adc
test
sbb
add
xchg
dec
jne
add
mov
sub
push
shll
in
xor
addb
repz
call
or
cld
ljmp
inc
into
xor
jb
sbb
mov
push
inc
cmp
filds
sub
add
mov
inc
add
mov
mov
push
pop
test
mov
jbe
jge
aam
jo
add
or
sti
jmp
jne
add
adc
mov
js
or
cld
mov
pop
lock
call
sub
sbb
je
jo
divl
cmp
cmp
and
mov
mov
or
insl
cmp
lock
punpckhdq
hlt
fists
cld
inc
imul
cmp
in
call
jno
sbb
pop
mov
push
cmp
ret
outsb
or
inc
or
or
lods
clc
call
inc
lock
repnz
jne
repnz
in
andb
cmp
mov
inc
ss
jl
in
loopne
cmp
ljmp
mov
call
mov
out
fadd
jne
push
sub
shrb
stos
dec
mov
test
incb
or
call
add
xchg
ret
fiadds
call
call
ret
jmp
push
call
xor
xor
inc
and
cmp
mov
cmp
sar
add
and
movb
dec
test
test
outsl
or
mov
xorl
adc
jl
and
out
push
dec
adc
pop
cmp
push
mov
jl
jo
pop
aam
and
add
mov
shlb
lock
adc
movsl
mov
add
pop
xor
push
cs
push
andb
cli
mov
adc
subb
push
call
jl
lock
push
xor
inc
mov
mov
stos
call
inc
lock
and
je
and
loope
adc
shll
ljmp
jecxz
inc
dec
cltd
cmp
xor
inc
push
jb
push
push
push
stos
fistpll
pop
cmpsl
ds
stos
jo
lret
lret
or
adc
push
add
test
test
mov
inc
sahf
jne
xchg
mov
cvtdq2ps
pop
ret
inc
push
push
cmovs
xor
jl
add
sbb
frstor
dec
clc
jbe
cld
jmp
jbe
mov
loope
mov
mov
and
lods
add
jne
ljmp
es
push
mov
xor
call
adc
adc
sbb
lcall
dec
mov
mov
je
add
pop
xor
lock
and
add
sahf
je
call
or
fistpll
adc
push
or
test
mov
andb
enter
jno
push
cmpsb
xor
cmp
in
mov
and
xor
add
push
testb
add
imul
or
xor
call
sub
jne
pop
push
iret
mov
add
jg
decb
lret
jne
pop
addb
addl
mov
add
push
add
sub
add
mov
inc
ret
mov
mov
add
xchg
adc
inc
fbld
inc
in
mov
jb
inc
mov
push
scas
call
out
call
mov
repnz
inc
mov
stos
xor
icebp
push
ja
cmc
call
or
call
xor
push
xor
sbb
or
lcall
mov
adc
cmp
add
stos
xchg
adc
call
pop
adc
push
scas
clc
pop
push
push
insb
pop
sbb
cmp
decl
push
mov
les
sbb
mov
fs
jg,pt
dec
adc
hlt
xor
test
je
decl
adc
hlt
icebp
aam
bound
pusha
dec
icebp
jnp
jg
adc
lock
int3
add
jo
push
scas
lcall
incb
xor
aas
adc
out
add
cmp
in
mov
sbb
movsb
pop
ret
jne
mov
push
test
sti
or
cli
push
std
mov
add
xor
mov
cmp
pushf
sbb
xchg
and
cmp
push
lock
stos
scas
inc
lock
je
test
add
js
add
adc
inc
add
ret
pop
cmp
xchg
or
cmp
shlb
int3
inc
cmc
or
pop
notl
mov
lods
jo
addl
adc
repnz
add
pushf
pop
fs
inc
add
sub
repnz
push
push
add
jo
pusha
push
or
jno
in
mov
fiaddl
lea
jo
loop
jg
xor
jne
in
es
add
xor
sahf
xor
push
repz
pop
add
add
addl
mov
pushf
add
shrb
push
cld
call
call
es
or
jb
js
test
add
lea
shl
pusha
aad
clc
mov
js
mov
cld
jmp
xchg
js
or
je
cmp
movsb
es
add
inc
jle
les
jb
add
jg
push
dec
clc
push
add
add
popa
or
fcomps
js
es
outsl
mov
jge
je
push
movb
scas
ret
filds
rclb
pop
fisttpl
data16
pop
and
sbb
sbbl
iret
in
repnz
rolb
cmp
sbb
and
adc
cltd
jl
stc
stos
add
data16
add
bound
pushl
clc
inc
das
cmp
inc
cld
rclb
or
ss
or
adcl
add
mov
ret
mov
in
add
push
clc
inc
dec
das
dec
call
adc
cmp
adc
cli
mov
or
or
test
sub
xor
and
jp
call
pushf
adc
mov
add
sbbb
or
call
mov
cs
pusha
jl
push
xchg
mov
sbbb
cmp
xchg
mov
adc
xor
push
in
sbb
loopne
xor
or
imul
mov
push
pop
xchg
dec
push
push
std
es
mov
mov
mov
lods
push
or
push
sarl
jecxz
mov
les
call
pop
test
sti
or
push
adcb
sbbb
dec
addl
rolb
in
mov
push
xchg
mov
cmpl
inc
add
sbbb
mov
or
mov
pop
pop
push
inc
pop
cmpl
mov
scas
add
add
aad
mov
subb
ret
or
jle
inc
ss
push
sbb
xchg
inc
jle
mov
push
jl
push
mov
negl
push
inc
inc
sarb
aam
lea
push
decl
jp
js
rorb
lret
dec
dec
xchg
pop
cmp
add
xadd
or
sbb
push
adc
call
inc
sub
jg
dec
mov
mov
into
cli
divb
fcomp
addb
push
mov
or
leave
incl
and
add
std
push
and
xor
jmp
inc
test
ja
mov
jl
add
data16
lods
jnp
in
xchg
in
repz
int3
insb
xchg
ds
pop
or
jl
push
or
cmp
jae
cld
xorb
out
add
pushf
mov
xorl
and
roll
icebp
jae
mov
cmp
push
jb
shrb
add
mov
xchg
lcall
pop
test
lods
inc
xor
cld
lret
adcb
dec
cmp
push
shrl
test
mov
into
jp
push
pop
jmp
test
dec
add
mov
loopne
shl
data16
inc
push
add
in
outsb
mov
call
inc
add
xor
lcall
push
sbb
ret
push
mov
enter
jmp
shlb
aaa
std
pop
inc
inc
clc
jl
aam
lea
js
push
mov
adc
cmp
or
or
adc
hlt
outsl
pop
add
dec
jns
adc
incb
insl
or
mov
in
call
jnp
outsb
mov
testl
imul
adc
sarb
pop
daa
jge
mov
je
lret
push
xorl
jmp
xchg
push
sarl
add
pusha
dec
je
andl
cmp
outsb
clc
in
or
inc
hlt
cmp
cld
mull
mov
call
or
inc
addb
jg
mov
jb
inc
sar
pop
add
sbb
lea
xorb
sti
mov
mov
sub
cld
jmp
jne
lods
fbstp
or
pop
add
or
sbb
fsubr
adc
incl
sub
pop
jne
int3
leave
fiadds
add
in
dec
mov
and
sar
and
cli
jb
push
jne
adc
incl
add
sub
sub
inc
bnd
add
mov
sub
scas
je
out
push
and
xchg
xor
push
mov
shr
cli
inc
dec
ret
jl
mov
mov
pusha
jo
and
mov
inc
test
mov
jmp
pusha
and
cld
call
push
les
call
push
popa
and
clc
add
or
or
dec
mov
mov
lock
mov
testl
jo
or
add
jl
add
test
ret
in
add
mov
add
add
mov
repnz
dec
and
jge
push
fcom
add
jb
cvttps2pi
sub
mov
add
addb
out
jo
cltd
cmp
jne
or
dec
mov
jmp
mov
fildl
cltd
shlb
mul
and
add
add
subl
mov
xor
add
rcll
sti
call
jl
aaa
loopne
jp
sbb
shrb
inc
adc
adc
subb
pop
call
push
fmuls
mov
je
add
add
je
and
clc
sahf
sbb
das
lret
and
sahf
or
ret
xchg
lock
adc
push
and
fstpt
pusha
and
pop
or
xchg
add
and
ss
or
sahf
out
or
mov
or
adc
push
inc
fs
pop
or
push
pusha
add
add
test
mov
or
std
mov
incl
push
add
pusha
pop
mov
pusha
pushf
dec
pushl
jl
hlt
mov
call
pop
pop
jl
clc
and
mov
imull
pop
cltd
push
add
mov
and
int
in
pop
mov
jnp
push
pushl
je
outsb
lret
xchg
jo
lock
repnz
stos
add
imul
push
xchg
and
fs
inc
or
add
inc
pusha
adc
lock
clc
inc
les
push
fldenv
or
rorl
push
jl
ljmp
sbb
cld
or
xor
mov
dec
fwait
mov
pusha
xchg
stc
cmp
or
ss
add
inc
lock
pushf
pusha
pop
adc
xor
aas
inc
jmp
stos
mov
loopne
fsub
bound
outsl
outsl
in
cmpl
and
movsbl
add
inc
aam
jne
aam
pusha
mov
subb
clc
and
bound
xchg
out
adc
push
ljmp
dec
or
mov
jmp
add
or
xchg
sahf
push
or
bound
jp
dec
sbb
rcrb
jle
test
adcl
sub
inc
inc
call
repnz
lcall
or
punpcklbw
xchg
fmuls
sbb
movsb
pusha
sub
movsl
add
es
test
jne
andl
jb
lahf
pop
add
outsb
inc
lock
push
xchg
mov
add
jae
je
in
sub
clc
lods
loop
in
or
and
add
adc
jne
mov
jo
push
push
lock
add
lock
adc
inc
push
xor
adc
mov
push
jne
push
mov
enter
sub
fbstp
jne
xor
and
push
gs
sbb
xor
dec
sbb
add
jl
sbbb
nop
repnz
lahf
sar
clc
fcomip
neg
sbb
pop
lea
incl
xchg
inc
add
push
or
mov
cmc
cmp
jmp
int3
mov
sub
xchg
shl
or
subb
std
mov
ret
jo
push
sbb
and
inc
cld
test
addb
sbb
call
loop
dec
ss
in
jmp
ljmp
push
orl
add
pushl
lcall
pop
and
jp
and
add
sbb
cmp
push
pop
dec
xor
and
scas
push
add
pop
addb
inc
inc
orb
or
pop
cmp
jno
add
dec
add
pop
inc
fcoml
dec
push
mov
or
xor
pop
jns
adc
mov
push
ds
push
mov
rorb
sub
dec
lcall
add
jo
or
call
inc
mov
and
add
std
call
inc
pusha
pop
jb
adc
cmp
sti
adcb
scas
mov
push
jbe
out
jo
repz
pop
jno
daa
hlt
mov
or
call
ljmp
pop
and
sbb
pop
repnz
add
push
decl
jo
lea
mov
sbb
pop
jns
mov
pop
rcl
mov
lds
cs
pop
leave
ret
cmp
sbb
pop
mov
adcb
dec
ds
mov
jmp
mov
jae
je
clc
jbe
daa
icebp
call
mov
jmp
bound
push
jo
adc
jg
add
imul
xchg
jmp
ficoms
push
std
clc
fnsave
and
je
mov
mov
call
cld
xchg
xchg
pop
into
cmp
add
mov
inc
cltd
mov
pop
movsl
jp
push
aaa
inc
xor
mov
cmp
hlt
mov
cmp
ljmp
inc
xchg
icebp
je
sub
cmp
mov
add
cmp
jae
cmpb
jp
cmp
jne
mov
xor
pop
loopne
lock
lret
add
jle
testb
push
loopne
xchg
and
add
rclb
call
adc
aaa
or
int3
fldt
add
mov
cld
mov
clc
pop
add
and
adc
lea
pusha
mov
and
inc
cmp
jb
fimuls
mov
cwtl
inc
shr
jbe
adc
sbb
or
jmp
inc
outsl
shlb
jnp
icebp
xor
dec
jbe
hlt
mov
sbb
loop
icebp
or
push
jne
les
int
mov
jle
jb
or
mov
jo
and
pop
aad
or
adc
mov
jle
or
frstor
clc
or
lea
stc
out
add
dec
inc
push
sbb
jmp
pop
add
stos
loop
sbb
adc
fwait
push
add
call
jmp
mov
add
lcall
or
mov
mov
push
or
cmp
js
shll
outsl
idivb
inc
mov
jo
pop
mov
std
inc
add
push
jmp
inc
or
add
roll
test
push
lcall
dec
pop
jo
jl
inc
dec
add
bound
lods
aaa
cmp
mov
xor
mov
cmp
adc
or
or
jbe
je
adcb
mov
xchg
or
or
mov
mov
or
je
cmp
xor
idivl
xor
push
push
xor
push
call
mov
cmp
lret
push
jno
adc
xor
ljmp
adc
pop
call
xchg
dec
pop
add
mov
mov
ret
lock
adcl
jecxz,pn
mov
lahf
lock
pop
push
add
lea
scas
push
add
incl
pushf
push
lock
ss
xchg
lcall
out
add
mov
xchg
add
or
xor
mov
data16
add
je
add
ret
fwait
test
dec
cwtl
faddl
mov
or
sbb
and
pop
sbb
cs
inc
adc
mov
mov
push
inc
pop
mov
aaa
ret
icebp
inc
or
mov
lock
inc
fdivp
push
mov
pop
unpckhps
sub
adc
inc
movsb
add
adc
xorl
call
ret
xor
jo
ljmp
pop
scas
outsb
popw
adc
rorl
pop
push
fsubl
clc
jo
push
mov
jne
adc
or
xchg
add
add
inc
inc
divl
inc
adc
jl
out
jle
incl
pop
xor
add
add
adc
aam
jno
jo
xchg
push
pop
and
adc
mov
pop
xorl
adc
push
jno
nop
ss
add
adc
adcb
inc
rcrl
pop
pop
cmp
or
push
xor
lea
push
xchg
add
push
push
lods
lock
jmp
sbbb
loopne
add
xchg
mov
cmpsb
lock
int
push
adc
fidivs
mov
add
push
add
add
adc
add
fimuls
lret
lock
scas
jg
or
es
mov
aaa
add
xor
or
pop
clc
adc
add
add
adc
call
cwtl
and
shl
shll
sbb
fcoms
mov
jo
stos
adc
mov
fldt
push
fdivr
enter
pop
pop
pusha
and
in
in
dec
jl
or
mov
inc
mov
repz
inc
xor
push
add
xor
add
jmp
neg
adc
and
ret
mov
push
scas
adc
push
mov
adc
clc
mov
cmp
jle
mov
jo
rolb
lret
xchg
enter
call
and
fcomip
scas
push
push
cltd
mov
dec
or
mov
push
cmpsb
lock
xor
add
inc
and
movzwl
fisttps
cmp
jbe
dec
mov
lea
add
fcoms
add
lea
mov
repz
nop
push
push
pop
data16
adc
jno
adc
sbb
and
mov
lcall
mov
or
call
and
pushl
mov
cld
icebp
add
mov
loopne
sbb
mov
icebp
add
les
sub
or
insl
rorb
cmpsl
pushl
aas
pop
clc
lods
test
cmp
rol
and
mov
push
sub
call
lock
in
jl
inc
jle
pop
adcl
inc
dec
mov
push
into
jnp
pop
lret
and
or
cmpsb
xor
inc
sti
cmp
clc
sarl
sub
shlb
clc
mov
shlb
xor
call
clc
add
pop
push
adc
popa
xor
cmp
mov
lods
mov
arpl
mov
sahf
test
inc
into
add
sub
out
mov
sbb
loope
push
add
cmc
or
or
call
push
scas
mov
shlb
rorb
add
or
mov
mov
push
ss
jae
ljmp
jmp
cmp
cmpl
je
les
scas
mov
jmp
push
pop
ret
mov
mov
push
jb
and
or
fimull
push
mov
dec
je
ja
pop
jle
testb
jg
xchg
fisubl
rorb
fadd
jmp
push
push
mov
fbstp
mov
inc
add
mov
add
test
cmpb
es
mov
jne
mov
js,pn
pop
mov
pop
push
sub
mov
outsl
ret
jp
test
jl
add
decb
jne
or
cmp
sub
mov
dec
mov
or
push
jmp
lods
adcb
adc
fadds
xor
je
je
mov
mov
pusha
pop
into
cld
js
dec
mov
push
xchg
adc
mov
and
loope
or
data16
lock
je
clc
pop
dec
cli
bound
push
lea
sub
std
push
mov
push
test
fmuls
jne
dec
clc
dec
xchg
push
loope
mov
mov
xchg
pop
or
mov
mov
shrl
lcall
fadd
push
sub
notb
dec
add
loopne
cmp
add
mov
call
or
add
inc
sbb
movsb
shlb
adc
pop
cmpsb
out
pop
ret
lock
ja
sahf
cwtl
jp
jne
jg
mov
jle
jle
hlt
jg
add
mov
xor
pcmpeqw
jg
shlb
cltd
cmp
je
neg
sbb
and
jb
dec
clc
cmp
cs
adc
cmpsb
call
aas
je
pop
ret
push
push
pop
cwtl
add
adc
adcb
xor
or
dec
outsb
jmp
int3
xchg
add
out
call
hlt
jo
cmp
fwait
in
call
fcmovbe
push
negb
inc
mov
sar
pop
daa
into
or
jl
aas
clc
jl
sub
jge
movb
mov
or
xchg
push
or
test
clc
pop
jne
movl
sahf
adc
mov
test
mov
push
test
sbb
cmpb
je
push
cmovns
mov
cmp
inc
push
xchg
pop
inc
out
lock
call
call
data16
dec
jmp
xor
shlb
out
sbb
push
jle
loop
push
adc
mov
push
dec
fsubrs
call
pop
mov
test
lock
shll
mov
subb
testb
call
mov
ljmp
fcoml
add
push
mov
or
push
ficomps
pusha
xor
push
call
sub
jg
push
sub
adc
mov
adc
addr16
pop
xchg
addb
push
pop
dec
jb
push
xchg
push
push
outsb
fldt
inc
call
push
test
cmpl
rcrl
xor
and
push
pop
mov
xor
out
inc
js
stos
xor
mov
pop
cmp
fimuls
dec
ret
lea
dec
loopne
cmpsb
imul
call
outsl
cs
fsubl
fsubl
aad
sub
test
loop
push
pusha
gs
sub
mov
lods
or
cwtl
cmp
pop
or
clc
out
cmp
mov
sahf
mov
xor
je
cli
mov
add
ret
jbe
hlt
addl
fs
repz
push
xchg
cmp
cs
add
mov
test
adc
cmp
fldl
or
rcll
test
std
sbb
jle
xorb
dec
cmpb
cmp
add
loopne
sub
out
jne
clc
add
inc
or
test
xor
adc
jmp
decl
jmp
mov
je
sub
xlat
cmc
dec
mov
push
cs
fimuls
or
movsb
push
mov
adc
or
inc
push
and
adc
inc
lods
mov
push
jl
or
fiaddl
pop
orb
adc
sub
push
push
cs
lcall
aad
and
xchg
je
loopne
mov
inc
hlt
cld
lock
mov
sbbl
add
scas
mov
inc
xchg
mov
xchg
mulb
repnz
pop
mov
fisttps
inc
bound
int
jmp
cmp
adc
inc
pop
decb
dec
pop
xor
and
push
lock
jmp
cwtl
jbe
sub
inc
or
lock
int3
dec
pop
sbb
push
mov
sub
xchg
and
stos
pop
push
outsb
je
fbstp
loopne
in
call
sbb
mov
mov
xchg
add
pop
sub
test
inc
push
pop
add
cmp
testb
outsb
add
std
add
xor
fimuls
mov
push
sbb
sub
mov
ficomps
mov
mov
jl
pushf
aad
cld
push
add
cs
outsl
push
push
dec
add
mov
fiadds
sbb
test
call
adc
jb
out
imull
mov
stc
push
pop
out
pop
push
fbld
in
aas
jge
addb
les
lea
cs
sub
mov
push
jne
push
rcll
call
cli
cld
shrb
fs
lea
jge
push
call
push
mov
mov
pop
xchg
aam
mov
movsb
call
add
jl
jb
orl
dec
push
decb
sti
int
push
lea
subb
sub
mov
js
mov
sub
das
push
addr16
in
popa
rolb
push
cmpsw
inc
mov
and
or
cld
fwait
adc
jge
mov
test
pop
out
fidivs
or
dec
sarb
aaa
sahf
jmp
shlb
push
out
bound
daa
jbe
subl
dec
movzwl
call
ja
lea
ss
mov
or
mov
dec
out
fmuls
call
push
jb
cmp
ja
testb
jne
sub
push
jae
idivb
lea
inc
jb
pushf
mov
xor
dec
sti
punpckhdq
mov
outsl
mov
dec
call
cmp
mov
idivb
pop
sub
scas
cmpsb
and
les
mov
enter
jne
and
add
mov
sbb
mov
loopne
out
adc
or
mov
pop
add
sbb
cmp
mov
ret
mov
imul
add
mov
ss
mov
sarb
dec
add
inc
fcoms
mov
es
pop
add
jl
mov
push
std
cld
dec
mov
mov
fcmovnu
rolb
out
mov
mov
pop
sub
decl
inc
cmp
inc
cmp
fmull
lock
sub
pop
sbb
decl
cmpsb
or
inc
pusha
data16
int3
call
mov
fstpt
cs
mull
xlat
add
aad
jl
pop
push
fbstp
idivb
addl
cwtl
adc
daa
fst
mov
roll
mov
into
pusha
daa
fmul
cmp
out
std
push
int3
mov
test
fsubrl
out
mov
add
mov
pop
insl
sahf
add
icebp
and
xorl
inc
mov
fldz
mov
daa
lcall
test
mov
repz
jbe
xchg
into
sub
je
call
mov
pop
div
add
jne
jmp
shl
push
xchg
add
jle
hlt
sub
xor
scas
out
loopne
mov
inc
in
dec
pop
push
push
cmp
daa
or
call
push
movb
sub
lds
xlat
xor
cmp
fsubrp
or
xor
in
pop
daa
cmp
ss
mov
xorl
adc
loopne
xchg
aaa
clc
test
or
cmp
add
mov
dec
push
ss
mov
xorb
push
je
inc
or
addb
jne
xor
inc
and
mov
les
pop
inc
orl
pusha
mov
push
fnstcw
int
aas
lods
xor
loopne
mov
dec
push
push
mov
pop
mov
cmpb
add
cli
ret
pusha
pop
les
mov
push
inc
jle
orl
add
mov
cmp
es
rcl
lock
mov
lds
shlb
call
lahf
add
mov
cmp
fbld
rcrl
test
call
cmpsb
hlt
inc
sub
inc
push
pop
push
cmp
and
or
frstor
mov
insb
in
fldcw
jle
test
mov
dec
faddl
jl
addb
and
stos
xor
call
dec
clc
in
jle
xor
int3
inc
inc
pusha
fisubrs
jnp
add
mov
ficomps
outsb
mov
push
lock
cmp
aaa
xor
pop
dec
emms
xor
mov
icebp
fwait
cwtl
ljmp
pushl
xor
les
inc
test
out
stos
dec
in
mov
sub
jbe
or
in
jae
push
xchg
lret
jecxz
fs
out
mov
xor
xlat
mov
cmpsb
scas
lea
pop
pop
inc
jle
in
xchg
jle
cmpsb
sub
mov
mov
or
pop
mov
mov
hlt
push
dec
or
in
add
subb
jo
pop
test
xchg
cmovne
cs
push
js
pusha
rcl
fdivrs
jb
xorb
mov
push
mov
into
cs
lock
sbb
add
xchg
test
mov
or
out
or
mov
mov
cmp
push
cmp
je
cmp
je
mov
pop
je
outsb
lock
jmp
mov
jmp
mov
jmp
mov
inc
in
add
jl
jbe
int
inc
mov
in
xor
clc
mov
mov
sbb
cmp
test
test
dec
pop
add
add
into
pop
sub
push
mov
xor
jns
cmpsb
ljmp
mov
call
or
inc
ds
je
pop
sbb
jae
call
mov
clc
add
shrl
lea
shlb
pop
clc
jg
sbb
fimuls
ret
es
lock
jle
sti
in
clc
out
mov
int3
leave
mov
cmp
sub
push
cs
cmp
mov
inc
iret
aas
xorl
push
jb
in
pop
cmpsb
data16
pop
xor
jge
sub
inc
call
mov
dec
cmp
push
sub
push
push
fmul
push
movsb
cs
sahf
jbe
xchg
jbe
shlb
test
dec
movsb
cmp
iret
jl
clc
decb
test
fiadds
mov
outsl
push
rorb
xlat
and
fdiv
dec
adc
pop
clc
add
inc
mov
or
mov
mov
pushw
into
pop
sbb
xchg
cmp
pop
mov
rorb
faddl
jo
es
xchg
scas
add
cmp
pop
call
test
dec
dec
pop
adc
jl
ja
sub
addb
jnp,pn
lret
mov
or
jmp
cmp
orb
cmp
cwtl
int3
jp
sub
hlt
lret
adc
rcl
pop
pop
cltd
mov
mov
mov
dec
adc
loop
jmp
dec
adc
pop
cmp
inc
and
outsl
ljmp
cli
movb
lcall
std
and
jb,pt
adc
dec
mov
xor
lods
adc
out
dec
stos
fstps
lcall
adc
sbb
mov
jge,pn
sub
cld
pop
push
test
mov
mov
push
ljmp
movzwl
lcall
dec
ret
cmpl
jae
xchg
and
rcrb
push
adc
dec
adc
jb
cmp
js
mov
sub
mov
xor
pop
pop
lods
clc
sbb
push
push
in
pop
inc
push
fdiv
es
jp
push
xor
pop
sbb
mov
jp
ret
jmp
jo
in
lea
outsl
fwait
mov
mov
incl
jne
mov
idivb
test
rolb
add
test
hlt
decb
sbb
mov
and
addl
lcall
inc
or
stc
jnp
ljmp
ja
or
out
xor
or
out
lock
fidivs
adc
idivl
call
into
into
push
call
test
adc
fildll
pop
mov
jne
out
cmpl
lods
call
stos
push
roll
add
pop
mov
call
and
inc
clc
imul
and
adc
loop
mov
xor
mov
push
cwtl
adcl
pop
add
int3
hlt
inc
jp
test
addb
pop
and
loope
sbb
jmp
jg
sbb
cmp
aaa
jbe
notb
sbb
nop
inc
mov
and
adc
lret
push
cld
mov
mov
and
dec
jae
or
and
xchg
je
jle
shll
sub
add
xchg
adc
divb
sub
mov
xchg
dec
mov
test
sub
call
push
push
in
push
pop
adc
jl
sahf
push
fcmove
aaa
pop
or
sub
lea
cmp
jne
aaa
push
push
or
je
addb
fiaddl
jae
xor
outsb
stos
add
add
sbb
ds
jbe
adc
lahf
or
mov
mov
push
pop
lcall
dec
sbb
clc
jbe
or
in
mov
decl
les
fsubs
mov
pop
dec
jmp
pop
es
jg
adc
out
cs
push
je
pop
mov
hlt
mov
bnd
je
cmp
lea
cmp
ja
data16
adc
js
jne
sub
and
inc
cmp
jae
sub
xor
incb
sub
xor
hlt
call
aam
adc
ds
clc
gs
scas
or
in
sub
cli
sub
fsubs
adc
fdivp
scas
and
rolb
jo
lock
clc
outsl
mov
xor
jmp
dec
or
adc
push
mov
adc
and
test
stc
jne
outsb
add
push
and
iret
push
sub
add
add
es
shl
call
stos
test
pushf
aaa
add
cmpsb
bound
outsl
sti
push
icebp
mov
enter
mov
je
subb
jg
push
mov
add
mov
cs
hlt
push
ss
mov
pop
repnz
inc
adc
add
add
jmp
scas
mov
mov
add
in
std
mov
cmp
das
cmpsb
cmp
push
pop
roll
mov
in
jmp
cmp
call
mov
fistpl
jbe
add
jg
gs
xor
add
or
and
es
pushl
push
ret
jmp
ss
xor
fisttps
cmp
lock
stos
ljmp
pop
mov
cld
jge
xor
ja
je
or
notl
xor
iret
movsl
sbb
idivb
xchg
adc
inc
out
fists
and
andb
addl
data16
pop
pop
std
das
add
stc
adc
cld
lock
sahf
testb
rcll
test
xchg
mov
leave
mull
sbb
sbbl
jg
in
out
push
fisttps
mov
jbe
fdivrs
jbe
outsb
cli
cmp
cld
push
adc
mov
inc
push
mov
in
cwtl
cs
inc
cli
addr16
mov
pop
jp
je
incl
inc
sub
cmpsb
push
test
sbb
xchg
outsb
ljmp
lods
push
jg
dec
add
add
lea
jne
pop
lock
jge
stos
push
mov
rcr
enter
sub
fsubrs
cld
push
shrb
in
punpckhbw
add
and
mov
push
hlt
cltd
sbb
dec
jecxz
mov
push
insb
mov
xlat
adc
add
inc
cmp
sti
out
out
adc
adc
jmp
mov
jg
clc
repnz
cmp
mov
sti
adc
fwait
repnz
and
mov
sub
mov
mov
mov
pop
es
das
mov
inc
psadbw
xor
cmp
loop
in
push
cmpsl
push
jle
pusha
mov
add
add
clc
je
or
fwait
cmp
mov
or
out
out
orb
adc
je
jge
push
clc
in
pop
mull
pop
push
mov
aas
rcl
sbb
jbe
nopl
push
xchg
cs
sysenter
pop
push
mov
mov
call
adc
out
mov
or
pop
ret
test
add
adc
or
clc
rcll
call
add
ljmp
push
push
je
imul
add
sub
pop
into
loopne
mov
cmc
mov
jae
aad
push
jle
add
mov
jo
cmp
andb
mov
shrb
xchg
ljmpw
ja
ret
pop
fneni(8087
jecxz
mov
push
or
or
add
push
lods
push
push
data16
push
mov
pop
add
cs
pop
and
xchg
xchg
sub
je
add
fcmovbe
sahf
xlat
inc
push
push
dec
xor
test
subb
inc
aas
std
ret
das
nop
push
jb
sbb
mov
mov
es
or
cmpb
push
orb
or
cld
ja
incl
test
inc
or
nop
cmp
sbb
inc
jmp
call
dec
pop
test
lea
push
dec
mov
dec
adc
cmp
push
jb
pop
mov
call
mov
cmpsl
and
add
mov
add
sub
out
movsl
pusha
and
aam
jle
push
shlb
pusha
jg
sub
and
mov
or
dec
js
call
pop
enter
andl
push
push
call
pop
js
lock
cmp
sbb
mov
and
fs
les
jo
jns
adc
fwait
push
jp
sub
sbb
add
enter
sbb
jne
xchg
push
mov
push
xchg
es
push
sub
mov
addl
sbb
xchg
pop
sbb
push
out
daa
add
jg
push
std
outsb
sub
sub
js
push
xor
sub
or
mov
xor
jo
xchg
jmp
push
sahf
es
call
pusha
sbbl
sub
pop
xchg
mov
add
cmp
add
jmp
stos
add
push
outsl
pop
mov
push
je
xor
mov
call
jb
xor
cmp
std
sub
jbe
mov
inc
sti
mov
pushl
cmp
jbe
lret
mov
in
inc
les
push
jb
je
push
ss
ret
mulb
xor
call
xchg
icebp
mov
cld
xchg
push
cmpsb
aam
sbb
jle
pushl
cmp
jle
test
and
push
cmp
test
aam
or
sub
lods
mov
mov
pop
cld
mov
lds
xchg
push
mov
jne
push
into
leave
xor
jbe
push
ljmp
lret
dec
popl
repnz
into
pop
jae
mov
inc
test
jne
cmp
jne
pop
inc
ret
push
xchg
jo
subb
mov
cmp
and
add
in
cmp
in
lcall
jge
cmp
or
push
or
mov
add
and
fildll
loopne
xorw
jmp
adc
xor
jle
and
call
push
daa
lea
aaa
dec
call
adc
pop
shlb
data16
rcrb
aam
test
dec
inc
cmp
mov
pop
call
mov
inc
push
cmp
shr
adc
jb
loopne
clc
aaa
push
outsb
adc
inc
xchg
aam
jb
adc
xor
jb
loopne
push
call
scas
lock
cmp
mov
mov
lods
cld
inc
push
xchg
adc
lea
mov
jmp
rcrb
jp
stc
test
popf
loopne
mov
bound
andb
jecxz
xchg
sub
mov
test
jl
mov
subl
adc
outsb
sub
cmpl
jmp
sub
lods
out
sub
xchg
jnp
jp
push
out
testl
je
mov
js
add
rcl
aam
pop
ds
out
int3
orb
add
sbb
outsl
or
jle
sub
push
push
lea
int3
add
sbb
das
lret
mov
call
rcl
mov
adc
cmpsb
push
add
jecxz
lret
popa
xchg
cmp
push
cmp
adc
push
call
push
xchg
bound
dec
lea
daa
mov
stc
inc
pushf
xchg
test
pushf
mov
xor
nop
pop
push
dec
sti
mov
jbe
fisttpl
in
jg
jg
out
in
shlb
test
cltd
jbe
movb
pusha
and
sti
add
inc
dec
stos
lock
mov
sub
pusha
rclb
out
mov
cmp
jmp
fmull
push
jb
jle
sbb
jb
add
inc
call
cmp
call
push
mov
lock
xchg
ja
jne
jne
cmp
mov
div
rorb
inc
test
mov
sub
xor
sub
into
or
loope
clc
imul
sahf
xchg
aam
jge
jne
push
je
inc
aam
push
dec
dec
insb
xor
icebp
dec
rcll
push
outsb
in
scas
push
out
pop
xchg
hlt
jmp
test
xlat
sarl
jne
pop
xchg
aam
xor
mov
int3
rclb
and
fildll
adc
les
add
inc
push
cmp
lock
push
jle
add
dec
add
clc
add
xor
fdivs
adc
cmpsb
adc
cmp
fidivs
mov
or
pcmpgtd
pop
rorl
dec
clc
fadd
addr16
mov
push
test
dec
test
push
jp
or
dec
aam
sub
sub
nop
pushf
stos
decb
cmpsb
cmp
sbbl
cmpsb
and
inc
fisubrl
jo
mov
xchg
aas
inc
xchg
push
js
notl
jmp
or
or
or
add
rorl
xor
mov
pop
pop
dec
or
push
adc
lock
mov
or
sahf
add
out
push
loopne
inc
xor
dec
call
fildll
rorb
hlt
adc
inc
mov
adc
or
in
idivb
pop
shrb
rol
xchg
sahf
aam
loope
xor
mov
cmp
push
cwtl
adc
xchg
ret
push
push
cmp
je,pn
movsb
push
add
outsb
add
pop
push
add
clc
mov
push
add
cld
fimuls
mov
out
cld
or
xor
cli
cmp
fimull
add
ss
jge
je
or
in
jb
mov
pop
testl
pop
sub
push
pop
test
adc
mov
test
mov
pop
push
or
dec
mov
push
mov
sub
std
movzwl
int3
jbe
ljmp
sbb
hlt
in
sub
fsubp
push
nop
push
mov
dec
adc
pop
iret
lods
jmp
lcall
jle
adc
sbb
adc
mov
cmp
js
jbe
pop
jo
test
dec
xchg
scas
js
mov
jmp
mov
or
mov
mov
stos
jb
mov
subl
cmpsl
adc
mov
les
jne
call
adc
inc
mov
xchg
jge
push
push
jbe
inc
insb
lea
sbb
fucomip
or
lar
out
sub
stos
jo
cmp
lds
add
test
mov
les
incb
pop
lock
jns
sbb
rolb
repz
pop
pop
xchg
mov
pop
adc
mov
pusha
pop
mov
hlt
mov
fistpl
adc
lret
shrb
sbb
decb
add
shlb
scas
movsb
loope
mov
decl
add
imul
cmpl
dec
daa
sbb
add
or
xchg
dec
test
cld
jmp
shr
jg
inc
outsb
jb
jmp
mov
adc
inc
mov
repnz
out
mov
dec
repz
dec
mov
es
movl
pop
test
pop
out
push
fcomip
sbb
jae
in
ret
xor
push
xchg
adc
cmp
add
cmp
mov
test
push
iret
add
daa
mov
adc
lock
xchg
es
repz
cs
push
retw
mov
pop
push
lea
hlt
call
adc
add
in
std
cmpb
mov
xor
push
push
ficoml
mov
mov
out
je
push
call
push
stos
xchg
dec
dec
lods
call
and
loopne
sbb
push
push
pop
rol
into
and
rcr
mov
imul
aam
test
jne
inc
jne
loop
xor
jmp
push
inc
dec
push
fmuls
inc
ret
loopne
and
jbe
xchg
inc
outsl
add
pushl
es
push
adc
push
mov
xchg
mov
sub
aas
sahf
push
call
call
mov
movsl
and
mov
pop
mov
mov
mov
adc
movsl
stos
subb
mov
jge
outsb
and
outsl
push
stos
lret
std
mov
neg
lea
lcall
sub
js
repz
mov
enter
or
call
jne
je
cmp
je
push
mov
roll
out
push
xchg
mov
cmp
call
fildl
push
or
add
dec
call
pop
jbe
dec
hlt
pop
test
movsl
lret
inc
add
jle
push
std
jmp
add
mov
push
push
pop
cmpsb
dec
ret
jg
ljmp
clc
shll
roll
outsb
fs
pop
addr16
lock
xchg
jle
scas
pop
and
inc
mov
pop
add
pop
aas
mov
dec
pop
sub
rorb
mov
cmp
mov
orb
dec
mov
or
lds
sbb
das
xchg
adcb
js
fistl
sub
dec
add
push
push
xlat
nop
jbe
sub
mov
jbe
pop
cld
cmp
into
push
orb
xchg
adc
push
pop
mov
mov
dec
xchg
pop
jb
sub
popa
mov
mov
cwtl
in
xchg
add
insl
mov
xchg
js
and
insb
pop
push
pop
cmc
jns
mov
xchg
fcmovbe
cmp
xchg
push
rcl
inc
push
pop
cli
push
sub
hlt
jne
jns
aas
pop
fistl
push
add
mov
sbb
mov
xor
jb
nop
push
dec
push
pop
lock
je
in
push
dec
frstor
cmc
cwtl
jb
jp
xchg
fidivrl
mov
pop
jle
sarl
add
jg
jg
or
push
inc
fildll
push
push
mov
aad
sub
mov
push
lret
sbb
movsb
inc
push
aas
add
xlat
repnz
mov
xchg
mov
ret
cmp
add
pop
test
sub
add
ss
imul
dec
pop
adc
mov
inc
call
test
scas
and
mov
and
es
scas
pop
out
aas
push
pop
and
sbb
pop
push
mov
adc
ss
pusha
xor
ret
jbe
nop
es
nop
pop
mov
test
and
cmp
fsubs
andnps
lock
push
or
pushl
adc
repz
sbb
pop
or
xor
jg
xor
mov
jns
scas
push
pop
jmp
mov
sti
in
call
ljmp
pop
mov
pop
pop
test
std
xchg
jbe
dec
imul
cmc
lahf
iret
nop
xchg
cld
enter
nop
mov
std
fucomi
push
fnsave
fst
adc
push
pop
xchg
mov
roll
jecxz
or
lcall
outsb
in
repz
mov
rcrb
pushl
xchg
lods
in
or
or
jmp
imul
ret
sub
push
push
add
idivb
pop
xchg
dec
push
push
mov
data16
dec
pop
cs
mov
push
fsubrl
stc
aas
lahf
mov
and
push
aas
cmp
fildll
fistl
jne
aad
in
cmpb
xlat
mov
adc
jge
xchg
jge
lods
dec
inc
pop
insl
inc
div
inc
push
push
adc
test
lock
lea
inc
or
mov
sbb
das
mov
push
and
push
fcomps
or
adc
inc
cs
std
or
lcall
pop
loopne
mov
push
adc
jo
mov
sbb
mov
mov
ret
call
rorl
mov
cmp
pop
push
fistps
push
jbe
call
cmpsl
mov
push
push
in
push
xchg
xchg
lods
push
mov
xor
pop
pop
mov
or
lock
cmp
mov
jbe
lock
lock
add
xchg
pop
pushl
sub
insb
lock
cmp
lea
sbbb
sbb
mov
pop
insb
xchg
jle
sbb
or
lea
call
mov
lods
mov
or
test
xchg
push
jl
add
loop
inc
mov
lret
ja
xor
es
in
pop
outsb
mov
push
imul
addb
call
mov
cmpsb
or
jne
jge
decl
xor
int
fimuls
cmpl
sub
in
iret
cmpsb
inc
test
dec
daa
xor
lahf
pop
or
out
dec
out
push
pop
cmp
jbe
jmp
insb
sbb
add
lods
js
mov
das
cld
ds
rolb
call
jbe
pop
jp
and
es
push
pop
outsl
dec
loopne
lods
add
add
loope
aad
xchg
stos
mov
jmp
jnp
imulb
in
adc
pmaxub
sub
scas
xor
inc
mul
and
cli
cs
push
mov
push
xchg
xor
test
adc
pop
sub
lret
inc
inc
enter
lret
jbe
sub
test
mov
addl
mov
jo
addr16
int3
jo
xor
enter
adc
ds
mov
les
das
test
or
xchg
lret
or
es
ds
not
add
push
push
cmp
pushl
add
mov
mov
jg
pop
sbb
pusha
mov
dec
jl
sub
mov
aam
push
loop
push
incb
add
cmovns
adc
mov
add
add
mov
push
push
rolb
xor
bound
cld
dec
or
xor
ja
inc
pushl
pop
mov
mov
shlb
adc
mov
incb
adc
pop
repnz
jne
cmp
mov
mov
sbb
out
cmp
jne
xor
dec
jne
pop
pop
pop
es
add
sub
mov
aad
push
rclb
xor
inc
mov
pop
pop
add
jbe
jg
nop
rol
push
data16
jmp
std
mov
dec
jne
inc
push
je
shr
mov
outsb
cmp
add
rcll
or
jne
lock
cmp
add
cmpb
dec
cmc
mov
pop
loopne
cli
and
shl
ds
xchg
outsl
jmp
mov
addb
fldl
add
outsb
sub
dec
fcmovnu
cmp
jge
fisubl
into
repz
cmp
in
pop
sub
jo
push
push
add
push
jl
or
out
mov
mov
cmc
mov
push
add
add
psubsb
mov
mov
pop
xchg
pop
or
cmp
push
and
cmpsb
flds
hlt
scas
add
int3
sarb
fisttps
jne
jg
push
inc
loop
push
ret
add
incb
inc
incl
sti
sub
ja
out
rcll
leave
mov
mov
ret
lock
sar
and
cmp
jb
loopne
ja
push
pop
inc
add
mov
inc
addl
ret
push
xor
inc
mov
push
mov
shl
aas
call
cli
ja
cld
mov
push
push
cmc
dec
sti
rcrb
shr
or
mov
mov
add
mov
mov
ss
inc
clc
ja
test
mov
jl
jb
push
mov
mov
outsb
pop
mov
add
aad
push
jb
add
ss
adc
ret
cmp
je
push
and
pop
test
push
call
dec
adc
xor
mov
mulb
cmc
and
es
inc
jno
lock
mov
roll
cs
test
in
sbb
shll
push
in
push
call
inc
mov
and
je
mov
notl
negl
and
push
add
decl
addr16
mov
add
rolb
repz
mov
jne
stos
mov
hlt
xor
jmp
std
fwait
cmpsb
push
add
rol
into
inc
or
push
decl
add
mov
fbld
shr
push
adc
push
mov
pop
xchg
fldl
outsb
in
cmpsb
add
ficoml
int3
fs
cmp
flds
pop
mov
adc
ljmp
mov
loop
cs
push
insb
push
les
add
pop
ret
scas
into
cmp
cmp
int
mov
addr16
dec
push
stos
xorl
adc
sub
push
xor
mov
push
push
ja
fldcw
std
icebp
loopne,pt
push
repnz
add
sbb
sbb
add
je
mov
mov
mov
ja
adc
push
call
fldcw
loopne
addr16
jmp
mov
push
push
mov
outsb
int3
dec
jle
aaa
aam
stos
in
jo
lret
movsb
inc
mov
jo
call
aad
faddl
cli
add
into
call
inc
pop
cmpsl
mov
jo
push
hlt
cmp
es
movsb
push
lock
ljmp
loope
call
jo
xchg
add
in
push
xchg
lret
add
into
mov
and
sti
or
jp
aaa
add
or
mov
add
outsl
fisttpl
outsb
into
mov
jmp
mov
arpl
or
inc
test
jl
push
inc
add
aad
sbb
push
xor
fwait
sbb
adc
cmp
shl
xchg
shlb
add
dec
jp
or
push
xor
add
decl
jbe
insb
add
mov
lret
inc
ret
das
sar
inc
inc
jl
mov
jo
add
ret
mov
lods
mov
push
add
mov
mov
add
inc
dec
mov
pushf
add
fcomp
or
addr16
fadd
or
and
sub
fmul
add
test
fadds
int3
andl
loope
cli
xchg
subl
sub
xor
add
lods
add
int3
add
pop
test
jae
adc
mov
clc
jbe
add
cmp
cmp
scas
sub
and
cmp
roll
inc
lock
das
cmp
inc
jnp
jae
mov
adc
pop
pop
andl
and
test
je
add
call
ds
icebp
lods
pop
clc
addb
and
xor
adc
pop
orb
adc
mov
icebp
pushf
dec
es
or
orb
dec
push
or
inc
outsb
test
ja
add
cmp
pop
test
aaa
cmp
cmp
or
rorb
ljmp
cld
cmp
roll
sarb
ljmp
les
mov
sbb
xchg
rclb
jge
or
or
cli
push
adc
outsl
decl
add
add
cmpsl
rcrb
call
push
mov
test
ret
idiv
mov
add
pop
jbe
pop
xchg
xor
sub
ror
inc
and
out
testb
lock
add
ret
add
or
jbe
lea
add
push
jbe
test
inc
mov
in
xor
fistl
mov
shrb
insl
fisttpl
mov
mov
push
and
xchg
enter
cmpsb
adc
push
hlt
and
add
es
mov
sub
cmpl
add
inc
in
aam
call
into
call
adc
add
or
in
pop
cld
jbe
adc
mov
xchg
mov
popa
fsub
out
or
stos
adc
jne
push
xchg
xor
pop
cwtl
add
rorl
psubsb
dec
loopne
fwait
sbb
xchg
test
adc
add
or
hlt
dec
cs
mov
mov
mov
orb
enter
adc
mov
pop
cmpsb
rcrb
cld
out
inc
or
mov
aad
xorb
iret
ret
test
add
push
xchg
mov
sub
cs
xor
inc
add
or
out
mov
and
push
fcomip
or
cmp
addb
jl
stos
sbb
cmpsb
push
push
add
rorl
bound
or
repnz
adc
push
pushf
and
pop
testl
or
jb
pop
adc
roll
fisubs
cwtl
out
add
div
test
fists
or
mov
incb
mov
cmp
sub
jge
adc
lock
inc
pop
pusha
pop
adc
out
ljmp
mov
mov
loop
push
add
jne
adc
and
mov
push
data16
push
sahf
jo
jbe
xor
outsl
push
stc
popa
jb
cmp
add
jl
inc
cmp
pusha
push
add
aam
push
lea
movsb
mov
outsb
inc
daa
jno
adc
arpl
jle
rorb
pop
ss
pop
ret
outsl
adc
jne
dec
loopne
cs
dec
loope
jb
or
dec
outsb
mov
jne
lds
sarb
cld
cltd
sub
cmp
aam
in
fcomps
push
sbb
mov
std
mov
jo
lret
adc
ja
cmp
jle
lea
cmp
jg
sub
outsb
mov
stc
push
jmp
mov
or
cld
shr
loopne
cmp
mov
shrl
test
cmp
fdivp
outsl
push
add
push
pop
mov
cmp
je
loopne
clc
scas
mov
aam
or
sub
or
or
jge
or
cmp
mov
lea
adc
jge
test
in
sub
fwait
cmc
jg
cli
cmp
cmp
mov
movb
ja
and
inc
popf
jp
push
mov
decb
add
add
movb
in
adc
loop
or
loopne
mov
cmp
sti
pop
pop
shrb
in
mov
fadds
std
into
jb
adc
loopne
or
dec
jecxz
adc
push
add
scas
call
bsf
push
mov
jbe
push
jb
add
cmp
add
inc
call
push
pop
push
lods
je
and
jb
lock
pop
cmp
call
jmp
je
repz
aam
adc
loopne
add
loope
cli
out
adc
fistps
addl
popa
lea
pusha
popa
push
clc
push
test
and
nop
mov
scas
push
add
add
aaa
aad
in
push
pushf
add
pop
lea
arpl
push
clc
popa
pcmpeqw
pusha
sub
xchg
push
jb
popf
in
pusha
adc
adc
dec
mov
popa
or
add
mov
mov
jbe
or
das
test
insl
pusha
cmpsb
push
and
loopne
data16
xor
mov
push
loope
push
adc
sub
call
push
or
call
jmp
bound
or
bound
cmpsb
aaa
add
and
or
jmp
test
or
adc
incb
arpl
and
jo
adc
or
push
and
push
or
pusha
mov
inc
in
adc
shrl
enter
lret
call
add
ljmp
mov
xlat
cmp
add
mov
pop
cmpsl
xchg
add
push
xchg
les
sarb
ret
jmp
mov
test
imul
call
ja
cmp
jne
add
xor
push
dec
bound
sbb
das
jb
adc
xor
and
fistl
into
stos
push
sbb
pushf
loop
xchg
adc
pop
and
jge
lock
out
scas
in
movsb
pusha
push
push
push
pop
dec
mov
adc
xor
shll
out
fsubrs
andb
jbe
add
adc
testb
je
mov
shl
jp
add
std
jmp
dec
lods
in
jg
and
sub
push
sbbl
add
or
loopne
mov
scas
loop
out
pusha
outsb
xor
jmp
mov
incl
fnstenv
fnsave
movsl
add
or
dec
fcmovnb
mov
mov
cmp
push
lock
adc
inc
xor
stos
jle
add
out
mov
adc
rolb
pop
lock
add
xchg
jbe
mov
add
push
push
push
adc
mov
mov
test
jo
lcall
or
ja
or
incl
jo
push
ret
jb
stos
push
sub
lret
dec
insl
sub
int3
push
adc
push
test
sub
lock
push
xchg
shr
mov
add
add
xchg
pusha
js
jo
mov
jo
hlt
ret
mov
test
pop
call
clc
push
add
dec
and
call
test
xor
call
call
jbe
pop
add
jno
gs
sbbb
adcl
xchg
js
and
xor
cwtl
mov
or
jb
clc
mov
fdivrs
leave
cmp
repnz
mov
push
adc
mov
testl
jmp
lret
ud0
jp
mov
ja
and
mov
adc
insl
cwtl
push
test
adc
lods
call
push
xlat
and
lock
add
jp
rclb
push
push
and
pop
pushf
outsb
rclb
outsb
mov
pusha
jb
ficompl
xor
mov
cld
sbb
mov
mov
call
aaa
std
cli
pop
sub
xchg
lods
call
xchg
fisttps
cs
adc
inc
or
xchg
mov
or
sbb
mov
pop
inc
call
scas
clc
out
add
inc
cmp
mov
cmp
sbb
mov
mov
rcr
push
call
sub
testl
mov
ss
or
mov
push
xor
pushl
adc
cmp
cmpsl
mov
xor
push
pusha
notb
xchg
mov
jb
mov
pop
add
bound
pop
jo
push
adc
dec
out
add
loopne
pop
add
cwtl
add
sbb
fdiv
ljmp
add
xor
mov
mov
push
jmp
dec
inc
lock
sbb
cmp
mov
out
repz
sub
push
lock
insb
lods
xor
sbb
fistpl
incl
sbb
adc
decl
or
or
jae
push
add
into
adc
push
pop
lods
push
jmp
pop
xor
cwtl
xor
lock
gs
mov
inc
mov
pop
mov
inc
cmp
test
pop
call
push
jb
push
jnp
xor
and
scas
or
sbb
and
push
in
loopne
scas
addb
add
or
push
lret
or
pop
mov
repz
mov
lea
popa
or
adc
mov
out
clc
mov
push
sbbl
mov
push
mov
insb
add
fs
jb
jp
sbbl
or
sbb
xor
inc
sti
jge
sbb
in
lock
push
test
dec
repnz
sbb
aaa
call
jb
adc
sub
jo
jmp
add
mov
in
jo
add
add
xchg
mov
and
xor
lock
cld
push
xor
push
push
jp
cmp
stos
ljmp
test
outsl
test
pop
push
xchg
insl
inc
mov
stos
sbb
add
jg
das
fidivrl
inc
rolb
rcrb
mov
push
cs
inc
test
and
push
cld
ret
loope
jno
sahf
test
incl
out
push
test
insl
mov
dec
cld
lcall
and
pusha
xchg
mov
add
cmpsb
push
pop
aas
fstp
clc
ljmp
jno
fiaddl
adc
orb
mov
divb
sub
mov
add
sbb
add
add
cmp
les
add
mov
and
into
jmp
stos
cld
jno
hlt
add
mov
cmp
cmp
sbb
pop
hlt
jl
or
xchg
dec
cmp
nop
sub
mov
push
movsl
mov
adc
mov
adc
lods
push
shll
push
adc
xchg
jg
inc
inc
lods
and
int
mov
data16
sub
push
dec
jno
jno
nop
js
test
fwait
cmpsb
push
into
popa
xchg
cld
stos
push
sbb
xlat
adc
mov
cmp
push
or
ffree
inc
enter
and
pop
inc
pusha
jg
add
mov
push
push
pusha
lcall
or
cmc
push
dec
cld
mov
les
mov
outsl
rorl
mov
outsl
inc
lcall
hlt
xor
sahf
xchg
aam
cmpsl
call
sbb
adc
adc
aaa
mov
cmc
jb
in
push
adc
jg
mov
dec
fadds
dec
testb
decl
add
dec
das
add
outsl
xor
or
mov
add
cmc
add
leave
adc
adc
les
fidivrl
jo
clc
lret
mov
divb
push
int3
push
inc
fdivl
xlat
imulb
fwait
call
imulb
adc
cld
cld
int
fildl
sub
jmp
jo
call
push
data16
xor
sbb
stos
ss
inc
adc
je
call
je
icebp
or
dec
ss
pop
call
aas
push
mov
and
cmpl
jo
push
hlt
lods
scas
push
pop
fiaddl
rolb
mov
mov
fstpt
mov
mov
or
pop
repz
out
push
xchg
imul
into
and
or
add
push
or
or
rclb
push
and
aam
push
arpl
dec
adc
xchg
push
incl
push
test
jo
add
push
pop
insl
push
notb
data16
dec
push
xchg
add
xor
and
push
nop
in
dec
jmp
add
xchg
mov
xor
dec
mov
mov
push
sbb
pop
call
adcb
in
in
sub
clc
out
xor
aad
xor
insl
out
popl
clc
aaa
in
cli
push
cmp
or
lea
pop
scas
dec
in
inc
push
add
mov
and
sub
shlb
cmp
mov
ljmp
adc
add
je
and
aaa
lods
add
ret
clc
inc
clc
pop
sub
add
jmp
call
add
cmp
inc
lock
into
pop
sbb
mov
adc
add
add
mov
xchg
test
cmp
call
int3
pop
aaa
call
xor
sbb
loopne
shll
sub
and
mov
sti
cmc
mov
mov
inc
sbb
fcoml
je
stos
mov
cmp
mov
xor
sbb
clc
in
std
add
adc
inc
jp
adc
push
add
cs
test
pop
mov
ss
sub
cmp
mov
hlt
pop
ret
subb
pop
in
pop
inc
jle
ljmp
inc
pop
adc
dec
icebp
outsb
addb
sbb
clc
add
jb
stos
mov
mov
add
test
xor
js
incb
stos
cs
inc
sub
push
dec
add
je
call
and
in
adcb
shlb
cwtl
pop
mov
movsb
in
and
sbb
mov
cmp
mov
rol
ficoml
lods
add
jmp
mov
scas
sbb
mov
inc
push
lea
ljmp
or
push
push
movsl
decl
mov
push
add
add
and
fucomi
cmp
aad
and
add
movsb
subb
fisubs
mov
rorl
fidivrl
mov
add
and
out
push
jle
or
inc
orb
add
add
idivb
push
fcoml
xor
inc
dec
jbe
xchg
fsub
sub
and
xchg
ret
adc
push
mov
pop
adc
movsl
jle
addr16
call
push
adc
fs
and
call
shlb
ss
idivl
cmp
shll
outsb
inc
cs
hlt
mov
int3
push
mov
mov
lea
or
hlt
test
mov
clc
cld
es
movsb
ds
or
add
jg
lock
lock
add
and
insl
mov
ss
rcrb
inc
clc
push
stos
mov
jmp
mov
call
mov
incb
loopne
ret
cli
and
sub
clc
xchg
cs
call
mov
add
loopne
sbb
inc
mov
sub
dec
sbb
lret
dec
jle
cld
inc
cmp
jbe
repnz
lods
add
adc
cmpsb
pusha
add
mov
cmp
and
scas
add
push
fsubs
add
addb
add
int3
sarb
notl
fildl
jno
aas
shlb
add
pop
cmpsl
mov
ss
roll
arpl
xchg
add
jp
in
cli
aas
test
mov
pop
std
xchg
mov
mov
cmp
shld
pop
addb
shll
in
pop
lcall
and
adc
push
lods
mov
xchg
push
mov
adc
xchg
jne
test
sbb
lods
outsb
clc
add
mov
rcll
cld
jl
add
lock
daa
jmp
xorpd
add
inc
add
xchg
repnz
subb
xor
adc
cmpb
mov
std
addb
or
add
and
mov
pop
cmp
mov
dec
int3
mov
mov
add
lahf
call
adc
dec
xchg
mov
push
cmpb
push
mov
ret
lea
pusha
mov
int3
sub
inc
stos
pusha
aas
popa
sbb
pusha
daa
loopne
loopne
push
clc
bound
adc
adc
shlb
or
pop
push
mov
cmp
dec
mov
push
pop
das
call
xor
or
lret
loopne
lods
cli
icebp
psrad
jbe
call
into
mov
pusha
add
loopne
orb
clc
pusha
and
push
fs
add
add
mov
and
xchg
and
loopne
popa
jno
loopne
or
jle
cmpl
sti
jbe
bound
push
xchg
ljmp
add
push
popa
sahf
call
pusha
cltd
or
and
or
fisubs
push
loope
fcoml
pop
adc
enter
decl
cmp
cmp
sbb
xchg
loopne
in
xor
push
xor
and
add
jmp
cmp
dec
sbb
mov
sub
xor
testl
dec
jne
ljmp
cmp
push
pop
mov
pop
icebp
pusha
test
addl
dec
mov
lret
push
std
filds
or
add
push
loope
xchg
test
mov
pop
aaa
jl
add
dec
cwtl
subb
int
sub
or
xchg
pusha
push
rolb
fs
fmull
test
jle
sbb
inc
cs
mov
es
outsb
inc
sbb
push
and
insb
push
sbb
inc
push
xchg
push
and
dec
in
xchg
psadbw
pop
das
mov
js
push
adcb
sbb
inc
push
jb
or
es
or
and
sub
sti
push
orb
addr16
inc
pusha
popf
loopne
or
es
pop
push
push
inc
sti
popa
lcall
ret
inc
clc
sub
lods
push
les
push
adc
shl
push
push
and
loopne
out
add
int
test
push
mov
cmp
shlb
mov
mov
cwtl
pop
data16
out
jb
sahf
mov
jne
jle
cmp
inc
popa
cmp
cmp
clc
dec
add
test
dec
popa
cltd
stc
rorb
mov
call
pusha
lahf
lea
lods
loopne
mov
popa
add
in
loope
mov
push
push
add
popa
mov
pusha
sbb
or
xchg
incl
popa
or
xor
loop
lret
call
in
outsl
shlb
mov
fs
push
cli
cmp
push
loope
fwait
loopne
les
lods
call
loop
jmp
inc
mov
inc
or
dec
dec
mul
sub
stos
mov
pop
add
stc
mov
cmp
xchg
mov
inc
jb
insl
and
inc
in
inc
jo
xor
jmp
shll
dec
hlt
call
add
push
or
or
push
jge
mov
or
xchg
stc
lock
cmp
ljmp
xor
jecxz
decl
push
jne
clc
je
xor
sbb
inc
sar
sub
mov
jo
or
lock
push
add
int3
xor
push
pop
pop
stc
lret
sub
loopne
inc
or
push
out
add
xor
or
jne
pop
add
or
insl
repnz
call
adc
ljmp
jo
int3
call
lock
add
pop
dec
xor
test
jo
mov
mov
push
call
jo
mov
inc
mov
push
inc
pop
sbb
adc
inc
jns
es
nop
add
cltd
sub
call
add
sbb
lea
call
popa
inc
outsl
push
pop
orb
cmpb
mov
pop
adc
call
jbe
add
adc
test
imul
in
cmp
mov
dec
aad
outsb
aas
data16
cmp
jl
shlb
inc
clc
xor
sub
or
clc
cmpsb
mov
in
mov
add
xor
movl
inc
and
xchg
jbe
push
mov
adc
jle
loopne
push
pop
add
add
add
adc
xor
cli
mov
sub
stos
outsl
jle
mov
icebp
push
jl
clc
lcall
pusha
aaa
stos
lock
rorb
fildl
mov
adc
clc
inc
sub
mov
xchg
jle
jo
pop
adc
inc
je
adc
cld
pop
dec
fcoml
adc
and
lret
xor
push
adc
dec
add
pop
push
dec
les
pop
xchg
loop
fwait
hlt
test
and
dec
jo
push
push
add
pushl
pop
and
add
mov
mov
mov
test
sbb
and
fwait
lock
add
lock
sub
scas
mov
jmp
ret
fdivrl
lock
call
out
adc
sbb
add
add
ja
add
loop
sbb
test
lcall
mov
jns
adc
adc
pop
adc
push
inc
xchg
mov
sbb
cs
dec
std
roll
sbb
push
test
pop
inc
push
push
mov
mov
push
mov
fildl
cwtl
lcall
mov
xor
dec
cmp
lock
adc
push
jno
and
aaa
std
jo
push
js
je
xor
in
pushl
push
cs
xor
adc
stos
imul
push
test
mov
and
mov
sbb
scas
subl
push
jno
ljmp
clc
in
inc
adc
pop
mov
xor
and
lock
add
cld
call
lock
fcomi
call
add
lock
cmp
adc
jo
xor
call
xchg
dec
inc
cmp
and
or
sti
popa
jne
clc
mov
pop
mov
and
mov
pop
test
push
out
lock
lock
dec
cmpl
or
jnp
jne
pop
add
jo
jp
jle
push
mov
pop
inc
call
xchg
sbb
mov
outsl
cmpsb
mov
sub
int
mov
jb
and
and
test
je
incl
mov
mov
xor
add
xor
out
test
pop
cld
jne
push
jge
inc
js
xor
pop
and
lods
ljmp
jo
cmp
or
ret
mov
mov
pop
clc
sahf
ret
adc
push
lods
push
xor
aam
mov
inc
dec
test
lret
pop
mov
push
insb
clc
inc
addl
jb
jo
jbe
in
inc
sub
lret
mov
push
mov
ret
or
call
pop
mov
xor
push
insb
icebp
inc
lock
rcl
jle
das
sub
loopne
jge
lea
pop
pushl
sbb
pop
and
add
negb
mov
jecxz
jl
pusha
test
jle
push
movb
and
jp
xchg
mov
shr
test
jle
cmovns
imul
sti
mov
out
mov
aas
fisttps
push
jb
mov
andl
es
out
push
in
faddl
adc
or
or
in
notl
mov
lock
cmp
add
pushf
add
inc
xor
or
push
push
pushf
xor
mov
cmp
cmp
sti
push
xchg
sub
fists
nop
mov
xchg
loope
push
push
cmp
jo
push
je
mov
sbb
inc
push
mov
repnz
scas
mov
xchg
or
jo
add
ds
je
aaa
bound
cmp
je
clc
add
lock
nop
adc
mov
and
in
sbb
pop
and
jne
and
jge
sbb
dec
push
and
cmpsl
adc
mov
jg
adc
inc
xor
pop
push
test
dec
dec
pop
xor
enter
ja
les
test
push
mov
subb
push
mov
mov
push
push
test
xor
test
nop
je
sbb
pop
lock
push
arpl
mov
lock
lock
push
jb
xor
mov
scas
pop
inc
push
clc
movsb
ljmp
es
fstl
cmp
cmp
mov
and
mov
call
clc
rorb
cli
sahf
lret
add
hlt
dec
sbb
jo
push
inc
push
sbb
inc
and
divl
cmp
aaa
adc
xor
or
bnd
push
sub
loopne
divb
fucomip
xchg
push
je
pop
idiv
adc
ljmp
sub
xor
jmp
divb
call
mov
mov
hlt
push
inc
stos
lock
int3
or
lea
lods
push
cmpl
ss
in
cwtl
inc
xchg
pop
jg
fadds
mov
jp
xorb
xchg
lock
cwtl
stc
lods
ljmp
lock
pusha
clc
into
cli
rorb
sbb
push
mov
mov
inc
dec
jne
or
out
cmp
mov
lcall
mov
adc
idivb
add
add
inc
loopne
or
dec
cwtl
xchg
test
cmp
lods
shrl
or
aaa
mov
test
pop
sbb
inc
in
flds
push
ljmp
inc
je
out
xchg
incl
loope
imul
in
push
in
add
shrb
and
sbb
loope
cs
lret
mov
inc
mov
data16
int3
fs
mov
inc
or
rcr
add
stos
ss
popa
mov
stos
xor
fdivs
pop
sbb
jae
shll
add
in
push
adc
test
mov
out
lods
mov
xor
inc
stos
dec
call
fcoml
or
xor
adc
sub
js
test
pop
add
cli
inc
jecxz
int3
adc
or
adcb
mov
lret
or
xor
fsubl
xor
cmc
es
hlt
cmpb
test
mov
popf
xorb
inc
dec
and
jbe
mull
rcrb
or
stos
cld
push
or
lods
pop
mov
add
xor
push
adc
popa
push
mov
mov
repnz
mov
xchg
sub
rolb
stos
or
add
pop
add
mov
test
pushf
addb
adc
jmp
adc
or
inc
xchg
mov
mov
mov
mov
sbb
jp
es
push
mov
or
addb
mov
sbb
scas
movsl
sbb
push
jo
andb
out
sub
or
jnp
and
add
call
pop
add
add
jmp
cli
inc
into
pop
inc
lea
shlb
fistl
cs
cmp
push
roll
ret
push
std
mov
idivb
mov
xchg
push
adc
push
jmp
popf
fucomi
xchg
pop
sar
in
inc
shrb
roll
add
andb
push
push
ret
xor
cs
aam
push
cmp
adc
mov
and
adc
daa
and
mov
xor
push
stos
cwtl
rclb
adc
rclb
enter
fisubrl
pop
popa
lds
pushf
sbb
inc
push
sub
call
je
sub
outsl
cmpb
dec
push
inc
sarb
add
stos
and
push
pop
jg
push
sbb
add
xchg
out
outsb
xor
lret
rorb
cli
sub
or
add
cmpsb
andb
loope
test
rorb
sarb
jmp
call
pop
adc
adc
testb
outsb
mov
lock
mov
jg
xchg
or
shlb
add
mov
xchg
rolb
rolb
cmp
pop
and
test
mov
push
add
add
push
rcll
jo
loopne
xchg
push
pop
and
pusha
bound
jg
int3
adc
jecxz
bound
das
mov
sub
xchg
dec
clc
sub
loope
sahf
jp
push
loopne
pusha
dec
add
and
pusha
xadd
pusha
add
hlt
int3
add
andb
add
add
mov
or
testb
addr16
dec
jb
jg
or
aam
inc
mov
popa
jg
add
push
sahf
cmp
add
lcall
into
orb
pusha
sbb
add
sbb
mov
rolb
dec
cmp
mov
rcrl
in
pop
loopne
test
and
loope
dec
dec
push
push
imul
and
dec
dec
outsl
std
notb
stc
cmp
cmp
fldenv
loop
mov
loopne
adc
loope
push
and
xchg
fcoms
inc
mov
push
lea
mov
jmp
pop
test
test
push
sbb
mov
mov
outsb
lods
loopne
test
outsl
mov
subb
out
dec
xchg
mov
cld
loope
lea
dec
and
jl
scas
adc
nop
outsl
pusha
pushf
sarb
dec
loopne
test
pusha
sub
shr
add
push
fisttpl
adc
int
ja
and
pop
popa
jbe
pop
add
addr16
or
mov
jp
and
loopne
loopne
xchg
xchg
loopne
pusha
es
int
xadd
sub
popa
sahf
inc
fisttps
andl
es
mov
es
jmp
adcb
push
lock
push
or
popa
xor
mov
incb
adc
xchg
add
cmp
jl
mov
lcall
sub
popa
adc
mov
push
mov
lods
adc
imul
jne
je
aam
pop
out
push
jmp
ja
call
mov
inc
cmp
popa
adc
sub
je
das
clc
imulb
or
outsl
and
adc
xor
pusha
sbb
xor
cmp
pop
rcr
sbb
xor
je
push
push
xor
pop
test
aaa
inc
in
mov
clc
pop
cld
sbb
arpl
add
or
pop
orl
add
jo
jbe
adc
cmpsb
xchg
xchg
jo
shlb
fildl
pop
or
leave
icebp
add
out
jp
mov
scas
call
pop
out
or
imul
add
movl
inc
mov
call
cmp
add
inc
fdiv
out
xchg
pop
inc
nop
loopne
call
pop
incb
arpl
pusha
ss
loopne
loop
loopne
scas
and
popa
nop
push
or
sbb
sub
fisubl
push
add
test
pop
dec
add
aad
std
das
outsb
and
mov
dec
push
xchg
jb
sarb
ss
arpl
ja
add
inc
inc
pop
mov
loop
or
jecxz
adc
add
fcoml
push
xor
push
add
das
clc
loopne
mov
sub
movsl
jne
push
test
pusha
into
std
rorb
loopne
addb
incl
cmpsb
add
mov
enter
adc
cli
xor
add
call
mov
adc
inc
mov
ja
jb
pop
push
ljmp
mov
jp
mov
outsb
xor
rcrl
lods
data16
cmp
ss
mov
cmp
and
aam
mov
dec
add
add
sbb
mov
shlb
mov
xor
or
ss
mov
adc
or
data16
call
lds
in
sti
std
ffree
scas
fisubs
jo
jb
mov
ret
sub
std
fwait
out
xor
mov
roll
xor
callw
adc
jb
fdivrl
push
dec
addr16
push
lods
jg
icebp
mov
or
add
and
out
jo
jne
or
jmp
mov
mov
xchg
xchg
lock
call
adc
rolb
aam
test
rcrb
or
int3
or
jg
stos
icebp
aas
in
or
jae
push
lock
or
fdivr
jo
mov
fisubrs
jmp
cld
adc
add
xor
or
cmp
pusha
addr16
lds
inc
mov
sahf
xchg
jo
jge
add
mov
or
out
xor
outsb
push
insb
cld
pop
mulb
leave
clc
mov
sti
cmp
add
stc
add
testb
or
mov
jns
insb
push
call
fcoms
add
jb
pop
push
push
mov
push
add
adc
add
push
lock
cld
mov
jo
add
or
mov
jge
or
ljmp
inc
mov
orb
aaa
adc
add
push
jne
dec
push
mov
jge
push
dec
push
inc
popa
mov
mov
mov
rcrb
fsubr
jmp
xor
mov
shrl
adc
notb
gs
je
aas
lret
or
mov
push
adc
xor
popa
xchg
add
add
sbb
jge
mov
or
adc
jb
push
in
in
mov
movsl
dec
or
xchg
lret
sbb
mov
lock
adc
push
ds
mov
pop
mov
jmp
stos
pop
mov
adc
loop
jg
mov
push
xor
sub
mov
sar
addl
cld
inc
outsb
lock
fs
and
add
orl
ss
repz
bound
add
cli
sbb
rorb
icebp
sub
ljmp
add
mov
lea
dec
or
push
ret
jb
stos
mov
xor
add
inc
pushf
jl
addb
mov
jne
cld
add
push
js
mov
shl
push
mov
add
push
jp
call
inc
ret
add
jge
pop
mov
push
mov
js
cmp
xchg
add
adc
jo
test
sub
push
fdivl
mov
movsl
adc
test
add
lcall
movl
insb
jb
das
lock
push
dec
je
ds
cmpsl
mov
add
mov
je
jo
inc
jb
mov
or
stos
nop
adc
jbe
dec
lcall
jo
icebp
xor
je
aaa
ja
push
inc
icebp
pop
jbe
sub
pop
mov
add
xor
js
mov
and
in
pop
in
push
roll
iret
jo
sbb
jge
out
add
pop
jne
fsubp
inc
cmp
push
pop
push
sub
jno
pushf
cmp
jge
test
mov
shr
lock
adc
adc
test
mov
add
pop
adc
inc
sbb
incl
je
sub
lret
sbb
addl
loopne
cld
push
inc
pop
xchg
jo
mov
push
or
loopne
scas
sar
jbe
inc
push
add
inc
or
mov
jb
scas
js
ret
fwait
mov
les
push
adc
in
push
add
jb
xchg
repnz
pusha
mov
fidivs
test
cld
push
mov
jno
cmp
adc
out
xor
fsubl
cmp
ret
pop
clc
xor
mov
inc
and
nop
call
mov
stos
xor
cmp
or
or
lret
call
push
jle
push
jmp
rorl
or
mov
outsl
mov
enter
or
mov
dec
mov
call
jmp
mov
rcr
fisubrs
adc
push
test
lock
add
push
pop
adc
jmp
fimuls
scas
xor
call
and
jo
cmp
pushl
and
jo
dec
mov
push
pop
push
pop
loopne
mov
repnz
adc
push
stc
add
xor
inc
and
lea
cmpsl
mov
and
andl
push
mov
fldcw
mov
int
mov
add
push
mov
dec
lods
jecxz
mov
repnz
fbstp
vmwrite
xor
xlat
jo
lea
jle
cmp
lock
mov
pop
jb
jb
and
scas
pushl
mov
adc
mov
push
push
sbbb
call
mov
push
sub
xchg
scas
in
fists
add
add
icebp
push
adc
and
sbb
add
push
jp
jl
cmp
cmc
stos
jl
mov
push
add
adcl
push
sbbl
cmc
call
mov
ret
and
xor
lock
adc
testl
fsubrl
je
loopne
or
into
sub
sbb
js
mov
loopne
cmp
xor
out
add
sbb
bound
lea
in
lahf
lods
fisttps
cld
mov
add
adc
mov
add
xor
je
rcr
sub
cmp
mov
mov
bound
das
lods
je
ret
xor
xor
out
jg
rorb
lcall
pop
insb
movl
add
sbb
mov
ljmp
xchg
outsb
ds
mov
shl
add
push
sbb
and
inc
push
dec
push
xchg
ds
xor
add
adc
mov
outsl
add
incl
sub
jecxz
and
and
jb
data16
push
or
mul
jp
mov
add
call
inc
call
loope
bound
scas
pop
je
pop
ret
int
outsl
lea
in
inc
std
clc
enter
test
add
loopne
cmpsb
sub
or
mov
test
or
dec
cwtl
es
es
in
sbb
add
cmpsb
dec
add
and
or
mov
dec
xor
mov
mov
push
test
fisubs
push
push
add
sbb
push
inc
push
hlt
mov
adc
outsb
test
inc
fdivrp
push
loopne
sahf
add
jne
jbe
clc
and
lret
subb
mov
das
call
mov
test
popa
pop
pop
divb
test
inc
add
daa
test
xor
lods
mov
add
push
mov
mov
pop
adc
dec
pop
lret
lret
outsl
mov
pop
sbb
jl
mov
mov
test
incl
addb
add
xchg
jne
mov
xchg
call
mov
call
jne
mov
es
fldt
and
add
cmp
add
add
movsl
rorb
sbb
pop
inc
xchg
sarb
fucom
lock
jmp
mov
inc
lock
xchg
inc
dec
lds
inc
jp
out
sub
ds
shlb
xor
mov
je
push
in
mov
add
jge
lcall
shlb
test
jbe
fistps
jge
push
jb
adc
adc
jbe
mov
cmpsb
call
ds
clc
pusha
jb
push
jbe
push
or
inc
shrl
arpl
aaa
leave
pop
movsb
pushl
sbb
or
jle
mov
adc
pop
push
and
cmpsl
call
hlt
rcl
es
add
mov
push
push
lcall
insb
push
or
out
aam
mov
push
inc
ror
xor
push
in
dec
insl
aam
inc
xor
fiaddl
enter
addr16
out
fs
push
add
xchg
sbb
push
push
ret
rcrb
in
shrl
mov
fs
add
notb
sub
jmp
add
xchg
and
adcl
mov
jo
sbb
aam
mov
cld
test
cltd
js
inc
jl
mov
pushl
pop
inc
mov
ret
or
mov
push
and
inc
loopne
xchg
mov
mov
mov
adc
mov
mov
idivl
xchg
jecxz
sahf
inc
xlat
push
ds
mov
mov
jns
mov
loop
cmpsb
or
xorb
sub
mov
test
adc
scas
inc
roll
dec
mov
mov
int
mov
addb
in
inc
mov
lcall
jbe
mov
jnp
lods
loopne
aas
cmp
or
mov
mov
sub
ret
jno
push
in
out
insl
ror
aad
or
inc
rcrl
mov
insb
fisubl
repz
mov
push
pop
jnp
daa
mov
scas
push
outsl
jg
fiadds
push
pop
mov
mov
repz
mov
pop
mov
cmpsb
stc
ljmp
out
inc
aas
bound
mov
inc
xchg
or
push
jg
dec
mov
negb
daa
xor
mov
inc
cld
mov
xchg
cmpb
incb
fldt
ret
rolb
mov
mov
add
hlt
or
mov
xchg
idivl
sbb
pop
and
inc
or
fmuls
repz
inc
mov
out
mov
mov
mov
fists
inc
xchg
loopne
loopne
out
cmp
bound
jp
sbb
jecxz
mov
mov
fisttps
inc
vpavgb
and
call
out
clc
jmp
inc
cmp
popa
or
add
shll
xor
es
push
dec
sub
jecxz
push
subb
inc
xchg
mull
rcrl
dec
int
loope
mov
mov
loopne
xor
fisubl
adc
pop
fwait
int
daa
cmp
inc
add
loop
ds
daa
cmp
ljmp
xor
and
jb
lcall
add
js
add
push
ljmp
loop
inc
pop
mov
add
loop
dec
mov
sub
dec
mov
or
bound
add
mov
out
lcall
and
add
mov
push
inc
and
cmpsl
mov
ret
inc
fidivs
pop
mov
pop
outsb
dec
sbbb
fwait
xchg
xor
jle
lahf
mov
or
stc
testb
outsb
inc
jle
or
mov
fistpll
cmp
insb
mov
inc
cltd
arpl
mov
mov
pop
jb
sbb
push
ss
mov
out
and
cmp
mov
jg
lock
jecxz
cltd
sbbl
jg
sar
jl
jnp
mov
lea
orb
aaa
fwait
mov
daa
jb
inc
lea
data16
cmovns
shrl
or
xor
test
cmp
inc
or
fldenv
decb
sbb
sbb
repnz
jl
in
mov
insb
lock
jge
jg
add
jo
mov
cld
add
sub
push
push
scas
push
push
sub
add
jae
add
and
sub
xor
cmc
icebp
jnp
push
mov
xor
push
inc
fcompl
clc
cmp
lea
jo
lea
test
lcall
stos
loope
xchg
adc
pushl
push
or
push
xor
or
push
dec
lret
push
add
fisttps
push
adc
pop
lds
jle
adc
cmp
aam
test
add
lock
push
dec
outsl
mov
sub
push
into
call
stos
bnd
mov
mov
insl
mov
insb
and
lock
mov
lcall
enter
pop
add
xor
test
add
dec
or
fisttps
push
test
mov
mov
sbb
mov
cmp
mov
add
mov
ljmp
inc
jmp
push
mov
mov
aaa
add
add
call
cmpl
or
cmp
or
adc
cmpsb
insb
sbb
add
jb
pushf
mov
inc
lock
and
xor
inc
cld
icebp
or
mov
int3
add
mov
fstpt
jb
jmp
ljmp
inc
lock
test
jnp
push
mov
add
je
cld
cmp
ds
fiadds
xor
jae
call
pop
std
mov
adc
js
add
mov
inc
add
pusha
xor
pop
jl
xor
or
loop
aam
fs
lock
and
push
mov
decb
scas
call
xor
jmp
or
jg
jno
adc
sub
incl
rorl
add
pusha
mov
add
pop
xchg
aas
jbe
jg
call
sbb
mov
adc
aam
mov
push
push
int
popa
xchg
inc
pop
inc
mov
leave
jne
cmp
cli
shrl
and
xor
notl
incl
adc
nop
dec
dec
xor
jg
cli
lods
mov
adc
arpl
xchg
xor
pop
mov
test
lock
and
lock
push
mov
sub
rolb
mov
xor
aad
mov
add
sti
xor
push
xor
adc
lea
in
dec
test
and
xchg
pop
xor
and
pop
jo
mov
cli
mov
and
sub
add
lods
add
outsb
add
pop
add
cmpsb
jne
dec
cmpl
cli
fildll
push
and
pop
imul
loopne
and
xchg
or
push
rclb
lods
fildll
cmpsl
push
fbstp
cmp
rcrl
mov
jo
mov
adc
sahf
inc
sub
rorl
adc
push
in
mov
cmc
or
mov
jmp
out
inc
ret
mov
add
pusha
clc
int
pop
dec
or
ss
mov
inc
or
mov
or
lret
cmpsb
mov
adc
pop
les
lret
and
jae
cltd
mov
ljmp
repnz
out
jne
repz
ljmp
stos
ret
push
xchg
or
pusha
icebp
or
lock
add
cmp
mov
push
inc
aaa
shlb
call
aam
jge
loopne
adc
jne
data16
inc
add
xchg
add
fxch
inc
cltd
xor
lods
and
add
call
xchg
ljmp
sbb
add
and
xor
icebp
pushl
movzwl
std
cmp
mov
pop
sub
push
js
adc
adc
addl
mov
pop
push
outsl
fistl
pop
add
je
jbe
data16
je
int3
sbb
sub
fdivr
dec
jne
shr
pop
jg
sub
adc
cmp
imul
enter
push
call
addl
mov
mov
data16
jo
inc
dec
add
aaa
inc
rolb
fdivp
cmp
mov
mov
pop
add
insl
inc
test
mov
insl
mov
insb
andb
mov
adc
addl
sti
add
mov
pop
rolb
or
mov
icebp
das
jmp
or
mov
sti
cli
sub
inc
leave
add
divb
fsubs
push
pusha
sub
sub
aam
pop
and
and
in
sbb
or
or
xor
inc
js
aaa
aam
or
aas
push
jg
stc
sub
dec
add
add
xchg
add
inc
xchg
lods
mov
cmp
leave
mov
out
sarb
jmp
push
adc
add
and
xor
adc
adc
mul
loope
jg
pop
push
mov
mov
add
add
mov
cli
jle
out
nop
hlt
mov
or
xor
das
clc
and
xor
push
inc
sbb
mov
push
adc
add
adc
sbb
add
test
sub
mov
or
mov
add
xor
cmp
mov
push
mov
ja
loop
out
add
stos
and
mov
ja
add
icebp
decl
jmp
inc
and
mov
mov
add
xor
add
and
adc
lock
inc
int3
jbe
mov
xor
add
ret
incl
roll
jo
adc
xchg
inc
rcrb
mov
add
std
pop
js
and
push
mov
add
loopne
in
pop
inc
or
addb
jne
cmp
in
sahf
adc
dec
insb
cwtl
pushf
rcl
add
pop
mov
push
mov
dec
inc
dec
add
inc
hlt
or
mov
adc
jb
sub
mov
add
mov
fbstp
xor
and
outsb
test
inc
pop
rcrl
or
jo
clc
pusha
push
dec
jl
fidivl
cli
mov
mov
xor
orb
mov
mov
and
clc
cmpsb
decl
mov
add
and
stc
lea
nop
or
shrb
cltd
lods
jmp
addr16
mov
pop
xor
je
add
mov
xchg
add
cld
aaa
xchg
adcl
jb
cld
clc
jmp
adc
hlt
and
inc
add
or
daa
stos
adc
inc
enter
call
cmp
jnp
sbb
mov
push
cld
adc
cltd
or
aad
mov
jmp
push
or
add
push
mov
adc
xor
ror
or
mov
addb
lahf
add
push
or
lock
aam
xlat
and
or
cwtl
adc
pop
fisubl
add
int3
lock
pop
dec
outsl
mov
das
add
ret
je
into
dec
and
mov
adc
jmp
in
les
jl
and
cwtl
popa
daa
mov
mov
cld
outsl
add
dec
je
sub
or
or
add
mov
mov
cmp
sub
xor
adc
pop
nop
aas
cmc
add
cmp
cmpl
or
mov
mov
pop
cmp
daa
sub
inc
inc
dec
add
test
hlt
mov
test
rorb
inc
and
xchg
aam
stos
sbb
stos
out
mov
cmpsb
pop
xchg
mov
in
mov
fidivrs
test
dec
cmpb
add
js
cmpl
adc
adc
outsb
pop
xorl
es
xchg
adcb
adcl
adc
testb
push
pusha
test
add
add
mov
push
add
enter
inc
movsb
cli
push
jecxz
xlat
inc
ljmp
lret
add
call
jne
movsl
es
pushf
rorb
mov
push
test
add
andl
cli
lds
and
addb
add
push
fisubrl
and
add
push
add
fmuls
lock
es
sub
sub
xor
test
xchg
scas
test
or
push
xchg
lret
xor
cs
je
mov
adc
cmp
dec
and
push
adc
lea
incl
arpl
sub
sub
bound
adc
shlb
inc
shlb
ror
les
shll
inc
popa
adc
mov
out
sbb
sub
push
cld
push
jmp
inc
clc
or
shll
int3
popa
mov
jge
push
mov
add
jbe
bound
sarb
arpl
add
pop
or
loope
adc
mov
in
sub
add
scas
pop
shll
fisttps
mov
add
inc
inc
aaa
adc
outsb
leave
enter
icebp
test
or
mov
cld
mov
push
adc
pause
movl
rclb
divb
ds
out
sub
js
pop
les
xchg
shrl
inc
dec
push
lret
shlb
ror
das
adc
inc
cli
pushl
jnp
xor
leave
cmp
cmp
call
mov
and
jb
mov
leave
jp
dec
adc
rcrb
push
dec
adc
pop
adc
test
jo
jmp
call
adc
sti
ret
push
adc
ja
sbb
dec
and
mov
pushf
out
xchg
ret
lock
jb
daa
test
pop
ret
cli
subl
or
fcmove
dec
filds
dec
and
icebp
leave
movsl
xorb
mov
push
inc
mov
outsl
call
cmc
sbb
and
mov
shrb
push
add
inc
mov
addb
sbb
add
stc
mov
jmp
dec
inc
push
scas
cli
push
sbb
scas
pop
fsts
push
xor
xorb
loopne
inc
jl
cmp
popf
loopne
cmp
test
or
sbb
lods
xor
mov
insl
adc
xchg
adc
pusha
pop
loopne
out
pop
add
pop
pusha
push
in
mov
insb
or
adc
xor
push
or
ja
lcall
mov
loopne
ljmp
or
cmpl
shlb
push
lcall
insb
mov
fs
jnp
psubb
loopne
addb
xchg
dec
or
aaa
ss
or
add
jp
jl
add
sub
aaa
je
std
inc
cli
scas
xchg
jbe
andb
or
mov
fbstp
nop
pusha
add
jle
xchg
add
dec
call
clc
fistpll
mov
test
sub
pusha
jns
lea
cmp
loopne
pop
jae
fsubrl
ljmp
cmpsb
sti
loopne
ja
and
mov
movl
jg
jle
pusha
jge
jbe
lock
push
dec
inc
incl
out
fs
sub
inc
and
push
ds
jne,pt
and
xchg
add
inc
jnp
sub
mov
mov
ss
test
cltd
push
mov
add
outsl
loopne
jb
add
sbb
ffreep
call
or
sbbb
pop
add
loope
or
add
fildl
test
inc
push
pop
sbb
sbb
adcb
mov
push
add
pop
orb
push
jp
and
mov
adc
add
clc
inc
or
dec
sbb
xlat
popf
enter
jbe
dec
cltd
call
xor
and
sbb
loope
cs
and
mov
loopne
scas
ret
push
mov
pusha
add
lcall
inc
and
or
add
mov
push
mov
or
xor
movsb
nop
jmp
push
sub
mov
popa
aas
hlt
roll
and
jmp
dec
push
pusha
or
jl
mov
cmp
sarl
or
mov
and
loope
dec
jecxz
roll
fildl
enter
lock
cmpsb
in
pop
sbb
push
pop
adc
mov
stc
pop
or
adc
dec
pop
jne
sar
movsb
add
mov
inc
fs
xchg
dec
add
or
aaa
lea
and
xchg
jo
pushl
dec
cmp
adc
or
pusha
xchg
repnz
inc
cs
mov
je
adc
sub
pop
adc
or
cmp
mov
test
add
cmp
loopne
inc
inc
out
jg
pusha
fimuls
pusha
cmp
rolb
mov
add
je
sbb
mov
cwtl
pcmpeqd
in
mov
or
add
push
mov
and
mov
add
cmp
in
in
js
mov
loopne
inc
and
mov
mov
mov
lock
test
gs
jl
incb
mov
ljmp
pop
ret
push
sub
inc
sbb
inc
xorb
testl
negl
rcr
lock
hlt
cmp
add
pop
jmp
jle
sarl
sbb
mov
sbb
xor
std
je
mov
jg
mov
cmp
mov
pop
xchg
invd
test
out
jne
sbb
cmp
outsl
add
xchg
pop
mov
js
mov
call
aaa
sbb
daa
test
push
adc
dec
clc
jle
jecxz
enter
cmpb
add
enter
cmp
sbb
cmpl
jo
divb
mov
add
inc
ror
js
add
sahf
jo
or
push
mov
cld
cmpb
pop
mov
add
jmp
mov
sbb
push
mov
xchg
inc
push
insl
bnd
mov
outsb
imul
add
shlb
sbb
adc
xchg
je
cmp
dec
sarl
add
je
jne
add
pusha
shrb
leave
mov
push
adc
xor
sti
shlb
popa
lock
mov
xor
loopne
cltd
adc
cld
cmpsb
fcomp
push
jb
mov
rcll
xor
or
mov
std
jmp
je
sbb
pop
xor
js
push
mov
sarb
sub
in
out
icebp
mov
icebp
inc
mov
lds
js
mov
xchg
insb
aam
or
les
cmpb
cld
inc
add
jmp
xor
jg
pop
dec
cmp
and
mov
jne
loope
push
dec
add
mov
mov
fcos
add
mov
arpl
push
dec
push
mov
mov
mov
lret
jne
xorl
or
cmp
inc
fadds
jne
push
mov
xor
dec
or
mov
xchg
lea
adc
xor
test
ds
sub
add
sbb
push
push
jl
sbb
mov
idiv
fisttps
push
xor
ret
mov
lock
sub
lcall
xor
cmpb
call
pop
push
mov
inc
ja
js
lock
sete
jle
in
ret
adc
mov
jo
sub
inc
ret
sbb
xor
push
sbb
adc
xchg
jecxz
mov
scas
cmp
sbb
fwait
pusha
loope
rclb
sub
or
lock
inc
pop
lock
outsb
clc
or
ret
cmpb
icebp
aas
or
sbbl
icebp
or
rcr
cmp
and
mov
or
xchg
hlt
pop
jmp
fdivp
es
mov
dec
xor
or
adc
and
adc
and
mov
mov
divb
or
push
jmp
push
js
ficompl
ret
pop
cmp
mov
add
outsl
and
sub
mov
incb
mov
sti
or
mov
add
jl
sbb
add
adc
mov
sbb
add
pop
push
and
pusha
or
dec
add
fidivs
or
jbe
andb
pusha
decl
cmp
cli
xchg
in
ret
and
cli
jo
call
inc
pusha
fdiv
cltd
int3
adc
fistpll
mov
adc
aas
and
inc
and
mov
jo
cmpl
dec
or
mov
pushf
ja
sub
add
clc
notb
arpl
fcomip
pmulhuw
sbb
cmp
test
mov
mov
add
xchg
add
and
test
outsl
jo
mov
and
cmp
jnp
mov
or
lret
clc
mov
or
cmp
add
xor
dec
rolb
dec
xor
adc
add
mov
mov
cmp
jns
in
xor
sub
add
jp
icebp
or
adc
ret
xor
call
cli
cmp
lcall
cs
xor
pop
addb
jne
add
clc
mov
enter
mov
cmp
ljmp
icebp
add
cmp
pop
lock
push
mov
pusha
cmp
andl
mov
xchg
or
test
or
push
ljmp
jge
addr16
add
add
xor
dec
xor
mov
icebp
fwait
lock
je
mov
orl
push
add
cs
xor
sub
and
lret
sub
dec
roll
pop
mov
inc
or
fidivl
xor
mov
into
mov
pop
mov
sti
push
nop
stos
shll
jo
pop
or
call
nop
add
nop
cmp
divb
mov
and
mov
jl
movl
or
mov
mov
sbbb
clc
mov
mov
mov
xor
jo
xor
mov
add
sub
add
sarb
ja
jmp
hlt
incl
push
mov
jg
test
popa
add
je
mov
je
add
pop
add
cmp
adc
aad
enter
test
and
pop
push
pop
push
xor
mov
leave
push
ret
and
xchg
out
sbb
or
pop
cwtl
addr16
ret
fsts
push
stos
in
inc
lea
jl
and
mov
jb
ret
lock
jo
test
or
dec
xor
add
loopne
mov
mov
add
test
jo
mov
scas
adc
mov
inc
cmp
add
adc
aas
rorb
adc
jmp
push
inc
je
pop
xor
add
fbld
ss
adcl
xor
enter
outsl
sub
shl
jo
rcll
and
inc
test
adc
fbld
jle
cli
xor
in
test
jle
inc
inc
les
test
sbb
mov
test
loopne
incb
adc
pop
inc
and
out
adc
jbe
jp
stos
int
sub
lock
adc
sbb
mov
cli
add
pop
lcall
or
test
pop
rorb
add
dec
jb
add
bound
repnz
pop
push
rcrl
lea
lds
mov
add
pop
add
add
xor
in
jmp
sub
or
cmp
cs
xor
add
dec
xchg
sbb
inc
popl
dec
add
add
nop
je
cmc
push
les
je
addl
push
or
and
dec
lret
inc
pop
orl
pop
inc
sbb
add
sub
or
or
xchg
dec
or
mov
les
sub
ret
sahf
mov
pop
adc
mov
nop
inc
or
push
adc
rolb
mov
xchg
in
pop
sbb
xchg
shlb
loopne
ror
outsb
fwait
lcall
cmp
dec
and
in
pop
pop
hlt
jne
add
sbb
jecxz
sbb
lds
dec
xchg
xor
fsubrs
mov
out
das
cld
add
stos
jmp
mov
std
push
and
jg
enter
jle
sbb
mov
in
sbb
adc
lock
imul
stos
js
jmp
jae
push
push
jp
mov
cmp
andl
jl
stc
movsl
add
andl
mov
andl
adc
mov
and
xlat
adc
rcrb
aas
call
shll
js
add
inc
mov
mov
ljmp
mov
sub
xor
pusha
loopne
mov
pop
dec
orl
clc
and
fidivs
adc
pop
lock
pop
push
mov
add
loopne
sarb
xor
or
js
sbb
or
shlb
sti
aas
jae
jmp
andl
dec
or
test
push
outsl
push
jp
or
mov
lock
or
push
rorb
mov
roll
mov
inc
jmp
fs
mov
or
rorb
cli
xchg
mov
ret
add
sub
insb
pop
push
ret
int3
add
mov
mov
add
mov
cld
and
shrb
xor
shrl
lds
inc
sbb
lss
pop
or
gs
fimull
scas
cld
ja
mov
mov
add
rorl
pushf
movsl
mov
loop
rcrb
add
adc
adc
inc
push
movsb
shl
in
xor
icebp
sbb
sbb
add
push
cmpsb
pop
inc
add
push
hlt
adc
add
add
outsl
adc
xchg
push
or
or
inc
fidivrs
notb
cli
adc
or
mov
cld
aad
adc
mov
shr
pop
cli
gs
push
bound
mov
xor
cmp
adc
in
orps
je
add
idivb
lds
and
mov
aaa
pop
gs
dec
mov
jle
pop
lock
sub
adc
xor
jno
push
or
jo
dec
and
push
add
call
loopne
xchg
outsb
sbb
cmp
add
fisubrl
rclb
lock
lock
loopne
test
andb
stc
jl
mov
adc
ljmp
sbb
sbb
or
repz
and
xor
jg
icebp
push
mov
imul
imul
push
call
imul
add
imul
pushw
cmc
mov
jb
popa
dec
loopne
loopne
or
mov
fwait
jp
in
push
enter
std
aas
mov
jecxz
push
add
loopne
test
add
ds
int3
rolb
call
pop
adc
test
ljmp
xor
shl
idiv
pusha
pop
inc
jmp
jecxz
jmp
popa
loopne
dec
cmp
loop
dec
add
pop
shll
lret
shlb
fldt
nop
lea
loopne
mov
faddl
sbb
inc
ret
ds
adc
mov
dec
pusha
add
mov
lock
add
or
push
push
push
inc
jmp
dec
ret
mov
mov
insl
push
es
lock
mov
nop
mov
imul
fsubr
loope
push
repz
push
arpl
push
sbb
lret
dec
mov
or
push
out
mov
fcomi
add
dec
stos
and
jg
or
sbbl
mov
fimull
xchg
add
lret
gs
pusha
sub
mov
jg
push
cld
loop
pop
add
add
inc
jl
or
mov
jg
add
and
cli
test
jp
repz
sbb
pusha
loopne
bound
test
jg
xchg
jle
or
mov
pusha
mov
or
mov
cs
jl
and
popa
loopne
ret
pop
inc
in
adc
jle
in
inc
dec
into
and
or
or
fiaddl
sbb
mov
mov
cmp
mov
int
push
and
or
loopne
add
mov
mov
orb
test
paddd
aad
loopne
pusha
jmp
add
mov
mov
adc
push
mov
incl
sti
pushl
or
push
pushf
insb
or
rclb
mov
dec
or
jmp
adc
test
pusha
push
pusha
aas
loope
cmp
or
push
or
inc
mov
repz
mov
inc
test
mov
fsts
sbb
push
mov
testb
insb
push
fnsave
push
ja
in
sbb
in
shl
sbb
fiaddl
jnp
cmp
add
add
imul
push
jl
popa
es
and
aaa
jg
or
cmp
cs
mov
cld
mov
fdivrl
icebp
mov
lock
jle
add
xor
std
jg
mov
sarb
shr
add
xor
mov
or
mov
decl
mov
adcb
inc
jmp
jle
fldenv
xor
cmc
jnp
in
sub
xchg
xor
mov
adc
vmread
adc
and
xchg
push
inc
cmp
mov
jge
mov
cmp
add
xchg
ja
sbb
mov
jbe
mov
lea
aad
dec
jne
sub
add
sbb
ja
mov
cmp
inc
or
je
add
bound
add
es
mov
sub
add
je
insb
mov
sub
outsl
sub
mov
aas
jnp
jnp
imul
in
xor
sti
jnp
jo
mov
cmp
sbb
es
push
xor
jae
orl
jge
cld
pop
std
sub
or
mov
jo
or
cmp
cmp
loop
enter
add
sub
fbld
mov
je
jne
outsb
jo
xorl
test
mov
or
popf
mov
mov
pop
ljmp
cmp
inc
aaa
mov
in
jl
jo
xor
pop
fdivr
or
add
dec
add
push
pop
mov
or
pop
lock
lock
fs
call
fcoms
es
jo
mov
andl
jae
cli
push
mov
or
jns
cmpsb
outsl
sbb
add
mov
or
aaa
shrl
push
lock
pop
mov
scas
mov
divl
pop
xchg
xor
or
mov
rorb
add
cmp
das
push
inc
mov
jmp
jo
lea
or
xor
inc
mov
push
xor
fisubs
mov
inc
jne
or
push
dec
test
fbstp
les
jge
lods
add
insl
jnp
clc
idiv
adc
sub
xor
lock
fildll
xor
jo
adc
int3
test
xor
push
ljmp
mov
std
xor
movsb
mov
repnz
in
in
out
jbe
mov
inc
push
mov
mov
popa
jbe
out
ljmp
xchg
or
sahf
pop
sub
push
adc
pop
lock
inc
or
popf
add
or
adc
xor
call
movb
je
jmp
test
add
lret
pushl
hlt
add
cmp
lock
cmp
jl
movl
mov
jl
and
add
xor
and
pop
fcompl
pushl
mov
nop
call
sbb
xlat
xchg
decl
je
hlt
lea
icebp
lea
lock
mov
stos
or
cmpsl
adc
inc
loopne
ds
fs
jg
cmp
bound
add
jne
pop
mov
jmp
push
fs
push
mov
in
rolb
lock
add
popa
pop
loopne
icebp
jne
xlat
lcall
add
jmp
mov
je
push
adc
scas
push
hlt
xchg
call
loopne
inc
or
push
jl
lret
or
add
and
pop
xchg
adc
es
test
cld
jg
jo
xchg
jmp
test
xor
mov
subb
stos
jbe
lea
jne
mov
or
jo
inc
add
and
inc
std
cmp
shr
xchg
mov
clc
cmp
fisttps
sbb
or
adc
jmp
aam
or
inc
jo
mov
add
mov
test
pusha
cld
and
mov
jns
jl
imul
xor
push
mov
ret
fwait
call
cld
xlat
jno
jno
jb
add
call
cli
mov
lock
xor
lcall
pinsrw
sbb
mov
ss
mov
lock
jge
lock
adc
fbstp
adc
or
jecxz
imul
add
jmp
fstpt
outsb
pop
push
incb
jns
cmp
jno
cld
jbe
and
jg
xor
xor
lock
lock
mov
jmp
add
scas
fcomip
sbb
sbb
mov
shr
xchg
mov
cmp
repz
cmc
and
add
sbb
fmuls
xor
push
mov
sbb
mov
es
and
ljmp
repnz
rorb
sti
mov
rep
mov
dec
push
pop
scas
xor
lds
inc
stc
sbb
xor
cmc
sbb
icebp
push
ror
mov
mov
ret
outsl
ficomps
outsl
pop
mov
sbbl
call
pusha
add
mov
loop
cwtl
clc
mov
mov
mov
sub
push
lock
sti
mov
inc
mov
mov
add
adc
dec
add
rcrl
inc
jb
push
add
fistpll
mov
rolb
fistpl
into
sbb
or
pushf
add
mov
push
add
mov
in
or
and
add
call
or
cmovb
pop
int3
mov
mov
or
jo
push
add
adc
mov
jle
enter
lock
adc
or
sub
jl
add
dec
adc
sub
jbe
mov
cmp
adc
pop
insl
sbb
mov
decb
inc
sbb
xchg
push
addb
addb
or
pushf
xchg
adc
and
lea
fldl
call
mov
mov
jne
dec
pop
je
lock
addb
mov
mov
jg
jge
mov
mov
jle
shlb
imul
movsb
js
adcb
adc
je
sub
test
mov
sarl
cmc
test
add
mov
jmp
sbbl
or
icebp
fwait
or
idivb
cmpl
mov
mov
fadds
ja
lods
pop
cmp
orb
pusha
mov
push
add
jmp
mov
jo
es
adc
and
jl
addr16
add
jg
push
ljmp
fsubr
push
or
orl
dec
inc
mov
cs
xor
xor
cltd
push
add
ss
cmc
incl
outsl
add
test
dec
rorl
rclb
inc
das
mov
fcmovnu
rcrb
push
stos
test
inc
ret
cld
subb
rorb
and
outsb
pop
ret
lods
das
dec
xchg
rolb
pusha
xchg
ljmp
and
shll
sbb
shrb
mov
dec
rclb
in
pop
adc
enter
out
ret
push
fwait
js
push
mov
fcoml
mov
scas
jbe
add
fs
push
out
mov
call
jbe
push
dec
out
aaa
and
fadd
push
mov
ret
add
jae
call
clc
rorl
lds
or
fs
out
sbb
stos
adc
shlb
sub
lods
loopne
test
jmp
repnz
movsb
sbbb
je
stos
mov
adc
addb
incb
int3
repnz
add
pop
shlb
pushf
lock
fidivl
rcll
push
and
movb
mov
movsb
fs
fldt
cwtl
sbb
xlat
jg
and
xor
dec
adc
or
jmp
add
rcrl
rcr
add
add
mov
std
fwait
in
mov
arpl
shll
ss
xchg
jp
adc
inc
pop
jl
cmp
int
lcall
mov
fadd
jb
in
sub
mov
sub
push
pop
xor
inc
jb
clc
dec
mov
sar
call
shll
ret
and
adc
adc
outsl
data16
outsl
lock
inc
sub
js
cld
mov
jmp
mov
jl
leave
push
cld
sbb
pusha
xor
and
add
mov
dec
inc
and
pusha
orb
icebp
mov
cmp
push
std
bound
clc
ret
add
rol
in
jnp
add
and
enter
and
mov
add
mov
mov
mov
faddl
adc
dec
push
xorb
flds
bound
loopne
sahf
into
add
push
loope
jae
mov
call
out
mov
add
mov
test
out
xchg
or
mov
fimull
mov
mov
jg
push
pusha
adc
sbbb
sbb
push
sub
jmp
mov
movsb
in
dec
decb
and
cmpsb
dec
pusha
adc
sub
mov
jg
add
in
inc
inc
adcl
cmpsb
jnp
pusha
sbb
inc
fs
cli
jmp
fisubl
lock
mov
mov
mov
mov
fchs
sbb
jbe
cld
jmp
das
in
xchg
popa
add
fwait
loopne
popa
sbb
sub
dec
test
ljmp
cli
inc
push
fsubs
loopne
or
fists
sbb
push
loop
scas
jmp
mov
lea
subl
nop
lock
inc
or
dec
jp
loopne
jp
push
fsubs
inc
jmp
jmp
add
jmp
out
arpl
loopne
fs
pusha
pop
popa
cmp
xor
loopne
jl
mov
jecxz
ret
jecxz
popa
cmpsb
loopne
xchg
add
insl
popa
pop
lret
push
popa
sub
jmp
out
popa
jb
loop
sub
and
mov
dec
and
test
and
test
or
pusha
pop
enter
sub
psadbw
mov
cmpsb
fs
jmp
and
add
push
lcall
loope
jecxz
mov
outsb
xor
xor
mov
cmp
and
or
test
push
mov
pop
adcb
mov
imul
cmpl
ja
sbb
or
decl
mov
adc
loop
push
inc
add
mov
pusha
cld
ljmp
lock
pusha
push
lcall
ja
fisttpl
hlt
add
adc
test
mov
jns
clc
fadds
adc
je
cmp
mov
cli
outsl
ja
sub
inc
pusha
fiadds
lods
add
test
mov
gs
inc
addb
xchg
lret
outsb
aam
pop
test
lods
pop
and
mov
cmp
ret
jmp
push
mov
add
je
cmp
dec
lcall
mov
pop
or
fsubr
test
mov
jmp
lock
cmp
mov
idiv
or
cmp
and
mov
pop
add
mulb
or
jmp
inc
inc
not
or
dec
add
sbb
inc
pop
or
iret
loope
jo
aas
pop
lock
xor
sub
test
jge
xchg
mov
jmp
hlt
mov
cmc
xchg
rolb
mov
adc
push
rolb
pop
fistpl
mov
push
aaa
or
push
push
dec
adc
mov
rep
pop
mov
aad
jo
sbb
push
mov
subl
lret
fisubrl
pusha
sub
jl
cmp
in
fldt
add
add
push
popa
push
push
addr16
xor
push
outsb
add
call
aas
inc
push
add
xor
inc
adc
into
cmpsb
push
cwtl
shl
cs
inc
dec
jnp
negb
cld
cltd
mov
lcall
mov
ja
mov
xor
int
push
pusha
fisttpl
data16
xlat
js
jb
xor
iret
dec
cmp
sbb
add
dec
jb
push
scas
xor
cmpsb
pusha
or
jg
xor
mov
and
sub
jp
js
and
inc
pushl
xchg
stos
push
clc
or
or
add
dec
mov
inc
push
es
sbb
in
adc
push
call
xchg
ret
outsl
cmp
sbb
sbb
push
pop
and
sbb
fisubs
and
and
fbstp
push
sub
sub
sub
and
dec
jl
xor
cmpl
xor
xor
out
ss
cmp
xor
fistl
les
cmp
cmp
inc
mov
fildl
clc
inc
dec
nop
adc
mov
fisubs
inc
pop
clc
and
outsb
seto
int
cwtl
sbb
test
and
xor
lcall
sub
push
enter
dec
stos
jge
lcall
test
inc
fstpt
call
mov
mov
jbe
roll
sbb
pop
stos
push
mov
add
mov
rclb
push
cmp
ja
mov
add
mov
push
or
hlt
jmp
leave
rcl
lock
sbb
ljmp
add
loop
dec
mov
fistps
push
les
in
int3
mov
or
outsl
pop
test
je
xchg
dec
popa
or
std
jmp
xchg
and
loop,pn
pop
and
jne
dec
sbb
push
mov
cmp
andb
cli
out
clc
pop
push
push
cmpsl
mov
mov
inc
out
mov
dec
and
add
mov
inc
lock
dec
and
and
add
es
sub
xor
orb
test
mov
cltd
fisubl
mov
dec
inc
addl
inc
loope
loop
mov
cmp
popf
clc
push
add
dec
jle
lods
icebp
outsl
push
std
pop
inc
sub
add
xor
aaa
or
sbb
push
mov
ret
pushf
dec
inc
sbb
xor
mov
cwtl
jmp
aas
pop
lock
or
push
enter
add
cld
rcr
sbb
xor
push
stos
mov
repz
test
add
add
pop
lods
incl
dec
test
inc
or
pop
or
adc
push
jne
mov
test
call
insb
mov
shrb
add
adc
push
fildl
ret
push
adc
mov
test
ret
dec
or
jno
pusha
add
inc
ja
data16
test
push
add
call
js
test
or
cli
inc
push
pop
dec
inc
xorl
add
add
sbb
xor
pushl
push
xor
and
add
ljmp
mov
or
push
ret
loope
pushl
je
push
jmp
mov
jmp
lock
rorl
jnp
lock
mov
mov
inc
dec
fnstenv
mov
and
mov
and
je
xchg
dec
xchg
pop
push
pop
cmp
lods
iret
mov
or
inc
pushl
fcoms
loopne
jmp
pop
fs
xor
adc
mov
push
cmc
insl
data16
jp
je,pn
stc
imull
inc
cmp
add
adc
testb
test
ret
pop
xor
or
stc
mov
pushl
mov
ja
dec
xor
je
idivb
cld
inc
mov
jmp
mov
cmp
jg
add
lock
cmpsb
add
stc
jo
adc
add
mov
mov
je
sbb
pop
idiv
enter
ficomps
jb
add
mov
iret
ds
ljmp
fildl
js
jo
mov
sbb
movl
and
xchg
pop
mov
sbb
out
adc
mov
sbbl
or
orl
mov
xchg
jge
mov
lret
inc
adc
xor
incl
mov
sbb
or
fsubl
pop
mov
mov
shll
inc
xchg
cmc
add
mov
mov
roll
inc
loopne
add
repnz
icebp
cmp
cmp
jae
testb
mulb
inc
cmp
scas
add
mov
aaa
and
adcl
decb
je
or
andps
xchg
testb
or
rolb
push
xor
pop
sub
cmp
and
cs
test
pop
inc
mov
andl
icebp
fmuls
mov
je
cli
ja
call
cmp
mov
iret
mov
push
add
mov
jbe
das
inc
add
mov
dec
mov
ljmp
mul
xor
mov
adc
lea
aad
call
and
mov
jo
xor
mov
mov
aam
xor
cmpb
mov
mov
lds
lds
xor
push
add
into
out
adc
sbb
mov
or
or
dec
inc
mov
test
xor
jo
jl
fldt
test
add
xor
ds
jno
sub
rolb
insb
and
push
sbb
cmp
les
fwait
add
mov
cmc
mov
cmp
jno
and
jo
sub
jge
bound
aaa
or
lret
jmp
mov
mov
sub
daa
les
jne
lock
outsl
mov
cmp
add
or
mov
cmp
add
lret
mov
cwtl
and
xor
pop
jb
push
pop
lock
cmp
shrb
enter
mov
inc
faddl
addl
dec
or
lcall
sbb
lcall
mov
sbb
ljmp
stos
pop
orb
test
add
fdivl
jge
push
in
jne
mov
mov
push
cvtps2pd
cmp
dec
add
inc
fiaddl
cmp
fdivrl
inc
add
jbe
inc
les
rcrb
and
push
ud0
push
fnstsw
sbb
adc
add
dec
or
push
xor
cmp
jmp
dec
add
add
mov
subb
mov
mov
add
add
pushf
orb
push
call
add
mov
call
jmp
add
adc
xchg
movsb
je
enter
and
movsb
cwtl
dec
cmp
sub
jnp
inc
adc
mov
cmp
jp
mov
je
jle
fmuls
add
sub
pushf
add
cs
cmp
add
mov
or
shlb
test
push
test
cmc
cmp
jae
mov
es
xlat
dec
mov
orl
add
adc
out
cli
fildl
bound
and
jne
sbbb
decb
mov
adc
mov
or
cmp
inc
sbb
sub
loopne
mov
clc
ja
jg
loop
pop
orb
jae
add
and
mov
lock
je
inc
xorb
stc
add
je
add
mov
cmp
adc
inc
sti
inc
in
add
pop
gs
ss
adc
jo
dec
andb
push
clc
mov
cmp
jl
fsubrl
cwtl
mov
sub
add
ljmp
hlt
cmpsl
lds
jmp
push
in
ljmp
call
mov
dec
cmp
call
xor
cmc
call
mov
jmp
popa
adc
push
add
mov
scas
mov
mov
incb
andl
pusha
xlat
das
sbb
clc
shlb
and
sbb
rol
push
add
inc
sbb
std
jmp
gs
movb
test
imul
ja
push
sbb
stos
xor
test
test
xchg
cmp
mov
data16
jmp
add
pushf
add
jle
shll
stos
mov
out
adc
or
fdivrl
add
cmpsl
sbb
shll
ret
add
adc
outsw
adc
les
add
push
fidivl
cld
sub
or
pop
mov
shrl
cld
jmp
sti
adc
fiadds
xchg
sarb
pop
pop
aad
sub
inc
mov
rcl
cld
jp
and
mov
jmp
sbb
sbb
inc
fsubrs
shl
push
mov
dec
or
roll
stc
and
or
inc
clc
pop
mov
roll
enter
orl
rorb
and
push
push
add
push
adc
in
or
addb
dec
inc
sbb
xor
add
jmp
push
dec
std
mov
pop
aaa
mov
jmp
movl
loop
add
jmp
roll
test
adcl
fistl
pop
pop
add
sbb
ret
push
std
sub
cmp
ret
nop
cmpsl
push
shlb
or
xor
add
xchg
cwtl
mov
imul
popa
add
pop
inc
dec
pop
cmp
sub
xchg
outsb
add
inc
loop
sub
add
fdivrl
xchg
divl
and
pop
and
and
add
add
push
add
pop
fcoms
iret
pop
mov
push
call
add
leave
push
mov
cld
fimull
sbb
lcall
outsb
sar
ljmp
cld
movl
push
mov
test
lret
or
xchg
push
push
add
out
call
push
mov
pusha
or
loopne
sub
js
dec
lcall
push
xchg
add
add
add
adc
or
dec
xchg
mov
test
aam
mov
xor
cli
or
push
and
fs
xor
mov
dec
cmp
je
adc
sub
cwtl
in
lods
ret
out
add
shll
ror
loop
cmp
ret
push
lret
mov
fstps
es
fbld
call
nop
loopne
mov
rorb
mov
xchg
and
sub
push
mov
or
shll
cmpsb
push
adc
je
call
sbb
push
push
push
call
pusha
and
ljmp
jnp
incl
adc
push
jb
in
mov
push
fcoms
arpl
mov
xor
jg
jno
ss
cmp
xor
aas
push
icebp
add
jbe
inc
push
and
cmp
cwtl
loopne
sub
jbe
cld
mov
pop
push
pushf
loopne
pusha
add
addr16
arpl
mov
push
bound
movsb
xchg
or
mov
cmp
or
arpl
xor
loope
adc
adcb
ret
dec
addb
pop
repnz
push
fwait
js
adc
adc
daa
dec
push
fs
or
addb
mov
addb
sub
inc
and
mov
je
aas
xor
pop
ret
adc
push
pop
ret
push
stos
popa
pop
ret
sbb
loopne
and
jb
pop
aam
adc
add
mov
cmp
or
add
bound
test
incb
add
push
add
adc
cmpb
lcall
sbb
adc
lea
sub
and
adc
add
test
cmpsl
test
pop
cmpsb
cs
fisubl
std
orb
adc
inc
add
cs
add
fadds
rolb
lea
lahf
or
push
sub
inc
mov
je
mov
pop
mov
mov
test
test
into
lahf
scas
mov
push
add
test
cmp
ret
dec
xlat
aas
addb
sub
daa
xchg
cs
fld
popa
add
fs
push
push
push
cld
ljmp
je
adc
cmpb
xchg
xchg
loopne
stos
jbe
popf
ret
and
test
insb
loop
loop
add
negb
popa
or
jo
add
lcall
inc
aam
add
popf
loope
pop
add
adc
adc
int3
aam
and
fisttps
adc
sub
pop
pusha
loopne
push
or
ljmp
xchg
fimull
push
decl
add
jmp
divb
nop
or
dec
cld
decl
pop
sbb
pop
lock
leave
mov
mov
cmpb
xor
pop
enter
mov
pop
sub
add
addl
sbb
outsb
jg
jg
mov
or
jbe
clc
and
mov
rcrb
add
pop
into
lea
adc
je
rol
call
inc
andl
push
lock
fisttpl
adc
in
pop
dec
shl
incl
inc
call
inc
pusha
or
lock
lock
pusha
cli
push
je
lock
mov
fidivs
push
push
fbld
notb
push
movb
lock
inc
and
inc
add
bound
sub
push
lcall
lea
push
sub
sbb
push
cld
hlt
sbb
ljmp
pop
es
mov
std
mov
pop
add
mov
es
or
fadd
pop
out
or
mov
out
push
loopne
jb
sbbb
and
test
push
pop
pop
add
xor
fdivl
adc
je
or
dec
ljmp
fldl
sarl
out
add
mov
sub
add
in
fs
lock
mov
decb
jne
adc
adc
icebp
sbb
dec
call
jno
loop
shl
push
mov
push
and
push
xchg
cld
loopne
mov
push
lods
arpl
add
mov
mov
sti
dec
icebp
mov
test
cli
jno
push
inc
inc
inc
push
pop
jge
push
xlat
mov
add
mov
push
aaa
xor
xchg
add
pop
add
jo
lea
fistps
je
sbb
arpl
cmc
bound
clc
mov
mov
cmp
cmp
push
add
jo
addl
sub
dec
jmp
loope
push
adc
call
test
lock
testb
pushl
inc
call
push
mov
icebp
pusha
call
jmp
outsb
js
lock
add
dec
jo
cmp
mov
pop
icebp
push
add
mov
addb
cmp
inc
fs
incl
jl
in
jo
mov
test
mov
lock
je
push
xor
lds
adc
pop
pop
xor
cltd
mov
call
push
out
sub
ret
punpckhdq
jo
in
mov
add
jmp
fcomip
filds
jmp
mov
jp
pop
clc
and
jo
call
push
shlb
jo
mov
mov
push
idiv
pop
push
xchg
jo
lea
repnz
call
mov
xchg
xor
push
and
inc
push
dec
sbb
icebp
pop
ret
inc
and
push
jo
xchg
add
mov
mov
aaa
fwait
cli
mov
adc
add
or
add
adc
hlt
mov
leave
sub
lea
xor
bound
jae
push
out
and
and
insb
inc
lea
cwtl
push
icebp
push
dec
mov
test
icebp
pop
xchg
test
lock
pop
subb
pop
sbb
xor
jo
mov
je
ret
push
inc
mov
rclb
imul
inc
cld
mov
cmp
mov
add
cwtl
fdivrp
xor
pop
int3
dec
jmp
push
push
push
and
xchg
shrb
push
ss
cs
xchg
add
je
sbbl
or
push
fs
mov
lods
mov
mov
add
xor
adc
negb
add
cld
incb
pushl
icebp
jb
add
repnz
mov
xchg
push
add
xor
mov
jmp
scas
idiv
adc
mov
mov
adc
mov
push
sub
xor
imul
arpl
add
mov
or
mov
mov
push
aaa
jo
xor
movsb
icebp
push
lock
and
push
xor
daa
add
mov
mov
stos
outsb
mov
xor
int3
inc
inc
fwait
sub
sub
or
in
adc
add
sar
orb
mov
call
and
push
push
or
sbb
dec
push
les
test
mov
enter
andl
jmp
mov
lcall
push
pop
or
clc
pushl
lods
jae
push
jmp
push
pusha
test
mov
call
hlt
mov
ret
mov
add
push
add
mov
das
and
rcrb
push
xor
jo
jg
dec
jb
push
jbe
add
in
inc
pop
mov
icebp
add
add
jo
ret
inc
cltd
test
push
push
jecxz
jne
dec
jo
jne
ljmp
in
and
sbb
push
mov
call
shll
mov
add
in
adc
shlb
sub
jge
and
pop
dec
decl
mov
jo
mov
mov
lea
inc
testl
les
jo
sub
xor
ret
xchg
icebp
pop
pop
icebp
mov
or
pop
sbb
lods
cwtl
sbb
mov
mov
mov
loop
or
xchg
jne
cmpb
or
dec
jp
adc
outsb
adc
jmp
jo
jge
mov
dec
pop
decl
call
inc
int3
lock
sbb
lcall
push
jo
call
insl
lcall
mov
pop
cld
mov
jo
sub
mov
iret
adc
adc
add
movsl
mov
insl
roll
and
je
call
les
lds
jo
mov
or
cmp
int3
inc
mov
mov
out
subb
call
inc
ljmp
shr
cwtl
pop
leave
add
icebp
cmp
test
jbe
add
mov
dec
testl
dec
cwtl
mov
push
push
call
std
mov
adc
inc
data16
cmp
loopne
mov
imul
push
outsb
jb
push
dec
call
mov
shrb
roll
add
mov
adc
mov
adc
add
lock
cmp
gs
push
dec
cld
call
pop
cld
movb
cmp
call
scas
jne
hlt
push
jae
push
add
dec
add
call
adc
call
mov
pop
addb
add
add
xchg
inc
xor
loope
pop
or
push
call
imul
and
enter
test
adc
orb
mov
xor
or
inc
rclb
cs
xchg
add
jle
push
push
pop
pusha
mov
jo
adc
mov
pop
sbb
enter
test
push
push
push
and
add
jno
incl
pusha
shl
es
sub
sub
js
ret
lahf
and
mov
add
push
push
jl
aad
dec
push
xchg
test
call
js
aam
dec
inc
dec
ret
scas
cli
lcall
mov
aas
inc
push
xchg
call
fimull
movb
hlt
out
sbb
jp
push
add
push
push
add
push
add
mov
cmp
jbe
jl
loopne
mov
mov
sbbb
push
loope
cmpsb
in
cmp
insb
push
lea
stos
sbbb
mov
insl
push
add
icebp
mov
or
or
subb
xor
shlb
xchg
cltd
jle
int3
add
xor
push
push
call
pop
jbe
mov
sti
jmp
push
adc
mov
rcll
push
push
pop
subps
test
jp
addb
and
sub
push
fcomp
push
xchg
or
sbb
fcomip
cs
pop
outsl
push
add
sbbb
mov
mov
add
cmpl
lea
cli
jo
aad
pop
pop
aam
imull
orb
mov
adcl
mov
adc
mov
icebp
incl
inc
je
call
ret
jp
scas
test
cmpsb
fldl
and
call
js
aas
xor
cmp
or
inc
pop
inc
lahf
push
dec
add
xchg
add
mov
cli
cld
xor
dec
cld
pop
adc
rclb
xor
ds
filds
popa
movsl
xchg
pop
sarl
outsl
mov
lods
sbb
sarb
push
rorb
xor
and
mov
adc
cmp
and
outsl
pop
rolb
add
out
add
xorl
mov
or
xor
jae
sub
sbb
push
mul
sub
mov
push
or
sbb
add
sbb
pop
lock
add
push
enter
call
out
pop
sarb
xor
cmovns
addb
mov
jb
mov
nop
mov
leave
call
dec
adc
arpl
pop
cltd
pop
and
adc
mov
adc
sahf
rorl
push
add
inc
sbb
mov
clc
and
stos
lea
test
adc
shl
ret
fidivl
or
push
movb
add
or
shll
push
pop
cwtl
push
adc
das
dec
push
loope
add
mov
lock
inc
pushf
push
sbb
cld
mov
and
sub
jb
test
rorb
lock
xchg
add
inc
mov
push
data16
test
cmp
push
outsb
pop
or
jl
pop
pop
xchg
add
inc
je
mov
mov
xchg
xchg
pop
test
and
jge
cmp
or
loopne
adc
mov
adc
cmp
jecxz
aaa
ret
add
sbb
or
jbe
cli
sbb
dec
test
add
jmp
add
push
int
mulb
cli
bound
je
xchg
mov
push
inc
popa
or
loop
mov
and
fcoms
xor
pop
sub
subb
out
loopne
scas
out
and
mov
push
test
adc
decl
adc
pop
mov
cmp
add
cmp
mov
outsb
xor
jb
test
xchg
or
adc
or
andb
mov
sub
jg
sub
xor
cmp
and
mov
dec
push
dec
call
sbb
out
xlat
push
pusha
or
sbb
mov
adc
add
sbb
jnp
adc
mov
push
sub
rclb
inc
push
push
std
mov
subb
je
push
fbstp
fbld
andl
jge
jmp
ss
mov
in
outsb
call
pop
sub
jecxz
stos
dec
mov
add
fcomp
mov
outsb
pop
cmc
in
sub
pop
add
lcall
jecxz
xchg
add
push
gs
inc
mov
scas
push
push
pop
ret
js
cmpl
pusha
ljmp
popa
or
jecxz
pusha
or
je
push
shrl
orl
sub
adc
mov
jg
mov
outsl
mov
call
jmp
pop
in
pusha
das
test
loopne
add
mov
jne
mov
les
mov
xchg
and
inc
nop
xchg
imul
or
adc
mov
bound
mov
mov
jne
inc
cwtl
dec
push
pop
pusha
mov
loope
ss
shl
add
outsl
and
push
jecxz
je
imul
push
test
xorl
les
inc
mov
pop
test
pop
add
mov
push
mov
mov
or
dec
adc
mov
dec
out
or
sub
push
cmp
sub
inc
or
fs
shrb
pop
je
pusha
and
sbb
lcall
arpl
pop
ds
adc
mov
shlb
lds
loopne
xchg
inc
negb
scas
jbe
adc
call
in
adc
bound
pop
rcrb
insb
xchg
xor
loopne
cltd
push
and
adc
inc
mov
mov
clc
les
add
mov
add
addb
filds
inc
cmp
mov
cld
mov
das
adcl
xchg
jl
pop
je
dec
adc
add
filds
out
pusha
lds
add
stos
push
fiaddl
pop
mov
xor
add
adc
add
jb
shlb
pop
idivb
and
fildl
rcrb
sti
mov
je
cli
push
jle
jg
scas
xchg
pusha
mov
mov
xor
pop
or
shlb
add
inc
pop
add
xorb
shll
mov
test
je
jecxz
add
insb
or
cmp
mov
xchg
jnp
xchg
cld
push
rcll
repnz
icebp
jge
adc
jb
cmp
pusha
jnp
clc
cmp
mov
mov
cmp
xor
xor
push
cli
add
enter
ja
add
jo
jbe
fs
lahf
or
add
adc
add
test
mov
hlt
xor
or
mov
in
call
std
int
pop
add
imul
jle
lock
mov
or
xor
inc
inc
push
and
mov
jb
nop
mov
lock
push
loop
jno
xchg
jne
ret
mov
in
adc
or
mov
add
mov
lcall
orb
dec
les
repnz
mov
jmp
mov
jns
fbstp
je
push
lock
xor
imul
addb
mov
push
sbb
testb
sbb
incl
jb
mov
jbe
call
inc
xor
or
add
adc
mov
cld
test
cmp
cmp
pop
leave
jae
sar
sub
and
add
dec
or
and
or
lock
or
pop
cs
add
pop
je
jp
ljmp
sub
mov
inc
loope
xor
hlt
adc
icebp
xchg
xor
jl
sti
call
or
add
dec
hlt
add
push
mov
fdivl
push
add
lock
add
add
push
adc
adc
adc
mov
cli
je
std
dec
jbe
test
call
ds
stc
add
mov
push
cmpl
cmp
out
ljmp
and
inc
or
pop
xchg
pop
lods
jbe
mov
shl
pop
hlt
mov
add
mov
incb
mov
inc
jl
adc
jb
mov
imul
push
add
sub
das
jp
mov
lock
mov
dec
sbb
sbb
cli
aaa
sub
outsl
loopne
sbb
lcall
cmpsb
jmp
mov
adc
mov
inc
mov
cmpl
push
push
jbe
inc
repz
loopne
and
sub
jge
pop
inc
sub
shr
or
decl
test
test
movsb
push
cld
push
add
mov
insb
mov
cwtl
lock
and
jae
cmpsb
pop
clc
adc
cmc
adc
mov
in
mov
inc
sub
dec
je
lock
sub
add
push
cmp
dec
sbb
shll
stos
js
mov
jg
imul
imul
out
imul
mov
jne
ret
push
movsb
mov
mov
sbb
imul
mov
jo
adc
mov
fisttps
sti
ds
mov
add
pop
adc
stos
fcomp
jecxz
fucomip
sub
fsubrs
mov
fldln2
mov
push
mov
adc
sbb
jbe
das
pop
or
fs
pop
cs
mov
dec
push
gs
pusha
mov
idiv
in
pop
push
jp
add
pop
outsb
sub
mov
not
addr16
sbb
or
dec
add
aam
xor
mov
divb
aam
rol
stos
aaa
sub
std
inc
lret
subb
arpl
xchg
jno
mov
ljmp
mov
xor
jbe
mov
nop
xchg
add
jo
mov
js
test
adc
add
scas
mov
ja
inc
daa
push
push
inc
mov
pop
cwtl
clc
add
fbld
add
loopne
mov
push
inc
jo
pop
mov
je
test
cmc
mov
cli
je
dec
rolb
add
push
add
shl
stos
xorl
rol
daa
mov
xor
mulb
bound
lcall
adc
mov
adc
inc
push
data16
xchg
add
xorl
sbb
or
mul
add
or
aaa
xor
je
add
and
xchg
cli
movsb
sub
aas
inc
add
in
dec
rorb
pop
add
lods
mov
adc
add
push
xor
mov
push
call
cmpl
add
pushl
jo
mov
mov
and
popa
xor
pushl
lea
dec
fcomps
rcr
add
sub
aam
mov
jge
lods
sub
scas
cwtl
cmp
adc
icebp
ljmp
aam
jp
roll
out
mov
das
nop
lock
inc
push
sbb
xlat
jae
mov
data16
dec
add
scas
jg
adc
cmp
push
add
mov
or
sub
mov
add
lds
call
jmp
cmp
pop
add
movsb
xor
add
fadds
shr
add
add
adc
andb
aad
add
mov
mov
lcall
loopne,pn
push
aam
adc
add
mov
lods
jle
mov
loopne
dec
loop
add
movsb
push
inc
add
inc
int3
nop
mov
mov
add
push
mov
loopne
cli
call
jp
pushl
je
lods
jo
and
inc
jne
pusha
ret
sbb
test
push
xor
aaa
adc
mulb
call
sbb
insl
mov
add
mov
jl
es
flds
add
int
cmp
int3
sbb
or
sar
bound
xchg
adc
xor
es
xor
stc
jl
push
mov
mov
cmp
cmp
cmp
popa
add
js
adc
pop
cld
mull
into
daa
hlt
nop
fwait
pusha
cwtl
mov
add
jle
or
xor
jo
push
mov
adc
add
sub
sub
dec
jb
or
and
add
and
pop
inc
in
out
or
lock
pop
call
incb
mov
shlb
or
mov
sbb
mov
pusha
loopne
jmp
icebp
and
ret
add
push
or
fsubl
pop
bound
mov
ret
push
cmp
lret
rclb
xchg
push
shrb
lcall
mov
cli
sbb
pop
and
jb
or
push
popa
cld
mov
jb
or
adc
push
gs
fmull
insl
xchg
in
int
pop
cmp
jne
push
out
adc
sbb
and
shr
add
mov
enter
test
shlb
and
call
adc
scas
add
lock
lea
scas
clc
add
push
push
int3
sub
andb
add
and
hlt
test
adc
mov
cmp
pop
orb
jne
into
lock
int3
aam
aam
out
loop
jecxz
xor
dec
pop
sub
cmp
test
test
lock
ret
mov
push
push
test
sub
or
out
mov
lods
cmp
xor
imul
push
lock
shrb
push
xchg
cmpb
jl
lock
cmpb
jmp
test
mov
xchg
mov
jg
jl
push
vmread
xchg
outsb
pop
jmp
repnz
outsb
mov
adc
ret
aam
inc
mov
fimull
out
lea
push
fs
loopne
call
movsb
and
sbb
pop
orb
addl
sub
sub
in
or
sbb
jmp
aaa
cmpb
mov
aas
push
test
cmp
add
xchg
aad
testl
add
mov
cli
pop
push
sub
mov
adc
inc
jp
pop
inc
xorl
pop
mov
or
and
mov
stos
add
loope
add
idivb
pusha
cli
or
decl
and
mov
pop
sbb
ret
xor
out
jmp
cld
test
xor
das
or
cltd
cmpl
mov
outsb
and
test
pop
add
loopne
mov
jle
adc
add
insb
rolb
sbb
sub
add
inc
jmp
push
lods
fbld
pop
mov
enter
mov
scas
push
jmp
rorl
call
sub
shr
je
xchg
sti
add
and
push
lock
movswl
test
rcrl
ja
or
shl
in
sbb
scas
xor
cli
and
call
push
add
sahf
ret
test
and
sub
leave
jp
mov
inc
je
xchg
xor
cmpsl
pop
sub
adc
cmc
pop
pop
xor
cmp
packssdw
lods
lods
push
push
mov
ds
or
inc
or
cmp
clc
add
inc
inc
push
dec
or
pop
xchg
cld
rorb
lcall
or
add
cld
cmp
roll
je
repnz
rclb
pop
mov
add
aaa
mov
add
movzwl
sbb
dec
test
clc
incl
push
push
adc
and
mov
mov
xor
jb
pop
and
push
lock
rorb
add
xlat
incl
sarl
scas
mov
decb
pop
shlb
outsb
mov
les
add
or
lock
je
mov
mov
push
adc
push
std
adc
add
push
cmp
add
pushf
fdivs
fs
inc
and
decl
test
adc
push
mov
jecxz
cmp
mov
enter
inc
dec
push
and
push
stos
data16
ss
incl
cld
loopne
push
pop
cltd
mov
and
lea
or
rorl
enter
or
add
decb
or
add
sub
pop
cmovns
push
dec
and
push
or
sub
jecxz
std
push
jmp
jmp
jb
enter
inc
insb
aam
fsubs
lcall
loopne
loopne
mov
loopne
xor
test
pusha
xchg
adc
lret
and
and
lods
or
ljmp
lcall
aas
scas
cwtl
pushl
insb
add
pop
jo
ljmp
incb
inc
imull
cmpw
xlat
mov
pop
dec
sti
jmp
loop
inc
loopne
mov
xchg
mov
dec
push
in
pop
jne
push
idiv
jmp
push
adc
mov
pop
mov
mov
push
sti
sbb
push
fisttpl
loopne
aas
lret
lock
xor
fsubr
xor
hlt
lahf
cli
push
xor
dec
add
jp
jb
testl
add
push
cmp
mov
pop
sub
inc
add
lds
lcall
pushl
test
je
pusha
or
add
mov
and
mov
sub
cs
test
add
sbb
lcall
pusha
pop
sub
lods
pusha
jnp
inc
sub
arpl
mov
push
or
call
loopne
movsb
or
popf
mov
push
jbe
xor
jae
mov
and
push
push
sahf
call
push
push
cmpb
sub
push
mov
clc
xchg
or
fwait
inc
or
mov
lea
addl
fisubl
cmp
shlb
je
in
incl
jb
add
loopne
insb
das
add
rol
jp
loopne
xchg
mov
add
push
push
jp
sbb
mov
mov
inc
pusha
add
sbb
push
sbb
mov
xchg
cmpsb
adc
daa
bound
ja
insl
xorl
popa
xchg
pop
mov
jecxz
mov
or
or
gs
pop
call
je
inc
call
sub
cmp
loope
or
cld
push
lock
or
mov
pusha
mov
loopne
lock
pop
popa
add
pushl
sbb
cmp
es
jne
aas
sub
sbb
fs
sub
add
push
sbb
daa
std
loope
sub
test
subb
and
xchg
or
pop
sub
jne
and
loope
jo
hlt
jmp
adc
loop
add
test
mov
lods
cli
cwtl
add
adc
rclb
sahf
loope
arpl
aad
inc
pusha
mov
test
inc
add
out
add
or
fsubl
dec
mov
js
push
lock
push
cld
jb
loope
pop
cmpsl
pop
loope
pusha
adc
push
sti
push
enter
pusha
jg
mov
pop
ljmp
loope
inc
push
fsubrl
xor
inc
in
lea
push
mov
gs
pop
dec
cli
or
jno
scas
mov
mov
cli
xchg
popa
cmp
pop
cli
xor
stos
add
mov
push
and
int3
mov
sbb
decl
cwtl
hlt
and
shlb
or
and
cmp
cmc
dec
loope
adc
jmp
adc
shll
mov
movsb
add
sub
dec
mov
data16
hlt
sub
pop
mov
lock
loop
int3
lock
cmc
push
mov
mov
push
shr
xor
mov
mov
dec
add
add
je
jo
add
add
push
dec
out
shlb
add
jmp
add
data16
and
push
adc
jg
pop
mov
mov
sbb
rolb
mov
xor
in
subl
push
lock
aas
push
call
adc
roll
cmp
mov
jle
ja
fbstp
subb
cmp
jne
negl
add
ret
into
add
pop
pop
je
add
dec
cmpl
fisttps
sbb
and
sub
hlt
push
or
mov
sbb
int3
or
push
mov
push
aam
push
orb
add
ja
inc
jg
lock
icebp
adc
fdivl
add
pusha
sbb
jle
push
mov
ret
pusha
and
std
insl
sub
shll
jne
mov
xor
jmp
push
je
pushl
or
jne
jo
lea
push
push
xorb
push
pop
lret
and
push
jb
call
cli
adc
dec
inc
enter
dec
jl
and
or
lock
call
add
adc
xor
icebp
sbb
xor
cmp
shlb
jb
mov
jb
psubsb
push
adc
out
mov
mov
and
shrb
loop
push
mov
push
push
dec
mov
pop
and
pop
cwtl
xor
lock
push
mov
add
sar
cmp
and
push
call
mov
pop
dec
push
push
lods
fsubl
pop
leave
shlb
jl
mov
inc
testl
leave
subl
pop
add
add
stos
stos
bound
jl
add
dec
pop
jne
and
sub
adc
add
enter
xor
scas
mov
lods
jo
jbe
insl
xor
ret
add
out
clc
xchg
xor
test
test
fdivl
or
sbb
jne
sub
jno
nop
mov
call
loopne
cmpsb
sub
sbb
movsb
xor
je
mov
cmpb
dec
mov
call
aam
repnz
cli
jmp
inc
or
pop
and
dec
push
pushf
inc
aad
mov
cmp
pop
cmp
jo
mov
pop
mov
pop
loope
push
popa
push
fcoms
repnz
adc
fwait
ret
ds
stc
test
jge
pop
sti
filds
xor
mov
das
fisubl
and
mov
mov
cmpl
adc
push
adc
add
jo
mov
add
cld
adc
xchg
aam
sbb
jb
and
aas
dec
cwtl
add
xorb
and
dec
inc
mov
sbbl
jo
data16
mov
xchg
cmc
push
lock
mov
lcall
add
xor
pop
or
add
call
xchg
push
in
fwait
lods
mov
call
pop
ljmp
pop
lock
xor
adc
sti
test
xor
adc
ljmp
and
in
vpxor
ret
addl
or
ds
vcvtsi2sdl
jo
movsl
cmp
test
js
xchg
mov
or
ljmp
out
sti
call
js
xchg
mov
or
push
andl
adc
jmp
lock
xor
inc
pop
sbbb
push
bsf
fs
pop
fmul
xchg
lock
dec
inc
insb
mov
je
sahf
shlb
repz
pusha
sbb
arpl
mov
repz
adc
icebp
and
jo
pop
sbb
add
fbld
icebp
pop
adc
inc
shrb
hlt
pop
mov
jb
mov
in
mulb
in
mov
das
pop
push
icebp
xchg
les
pop
fnstenv
adc
mov
ret
fists
in
aas
push
pop
test
mov
sbb
mov
testl
stos
mov
or
clc
jbe
loopne
push
adc
inc
fiaddl
in
negl
sub
add
push
sub
pop
testl
lods
push
cmp
std
mov
clc
jo
and
xor
push
icebp
cmp
pop
in
pop
imul
pusha
pop
xor
sbb
add
int3
mov
adc
or
and
cwtl
out
and
je
add
xor
mov
xor
cmp
lret
add
sbb
int3
movsl
push
push
pop
lock
push
cwtl
cs
xchg
das
cwtl
xor
push
lock
pop
jmp
lock
stc
jo
xchg
test
adc
pop
je
add
inc
xor
sub
ds
jo
lea
fldt
cltd
cmp
mov
sahf
mov
stos
mov
adc
int
xor
mov
imul
xor
ljmp
mov
cld
add
lds
inc
insb
mov
cmp
mov
sbb
lods
push
mov
sti
movzbl
cmp
data16
cmp
cmp
cmp
add
cli
rclb
adc
fwait
jbe
dec
les
adc
pop
pop
jno
cmp
rcll
mov
ret
mov
mov
test
push
xchg
xor
les
pusha
xlat
je
pop
rolb
add
insb
loope
orb
add
cli
imul
adc
add
mov
add
pop
stos
mov
push
fistps
adc
jmp
ja
mov
ss
jno
cmp
cmp
jmp
xor
ret
pop
dec
jne
inc
xchg
leave
pop
mov
jbe
xchg
sar
scas
clc
jnp
mov
jl
imul
add
lahf
mov
mov
mov
add
mov
enter
jne
xchg
mov
movsl
pusha
mov
push
lea
cmp
mov
xchg
testb
mov
cmp
adc
ficoms
fldl
add
or
pop
sbb
cmp
imul
jbe
mov
push
cmp
fcmovbe
sub
imul
or
push
in
inc
sbb
out
cmp
idivb
incb
jne
add
add
add
xor
jmp
add
int3
add
test
mov
sbb
lea
js
push
xchg
mov
adc
hlt
jbe
add
push
jae
inc
dec
pop
je
push
out
int3
mov
icebp
outsl
push
mov
sub
cltd
add
push
sbb
add
push
fdivr
jo
adc
shlb
outsl
push
sbb
jmp
cmpb
and
jne
adc
inc
sbb
loope
mov
ljmp
pop
out
jne
mov
lods
stc
mov
mov
les
mov
lock
jb
out
sub
pop
mov
push
push
rolb
inc
lods
mov
call
mov
cwtl
inc
xchg
push
push
mov
clc
mov
daa
inc
out
mov
pop
sub
add
adc
movsb
clc
pop
or
pop
pop
out
psubd
shl
inc
test
neg
orb
call
jecxz
inc
in
call
cwtl
movb
add
fimull
jmp
or
das
adc
ljmp
sbb
test
mov
lock
mov
jle
call
int
mov
push
push
jmp
adc
pop
sarl
push
jo
push
push
enter
adc
mov
fstpt
rorb
enter
xor
cmp
das
sar
xchg
cmp
mov
sub
jo
mov
sbb
sub
mov
push
jb
mov
inc
nop
fucomip
xchg
jbe
xchg
push
mov
and
je
loop
ret
shrb
outsl
xchg
mov
fadd
sub
call
mov
shlb
push
or
call
pushf
push
ret
xor
xchg
shrb
xchg
ljmp
add
sbb
js
dec
jb
or
shlb
push
adc
ret
jle
ja
je
call
push
adc
fstpt
dec
les
adc
mov
push
dec
pop
pusha
inc
sub
cmp
mov
cwtl
and
sub
repz
inc
aam
jne
jo
fstl
xchg
jne
jp
fidivrs
push
or
sub
shll
add
xor
je
rorb
incb
adc
add
xor
sub
dec
pop
push
hlt
xchg
push
insb
and
xor
test
push
pop
pusha
jmp
out
int3
lds
xlat
push
xor
push
cld
or
xchg
fcmovnb
xlat
push
jmp
or
sub
jl
imulb
cld
repnz
push
xchg
sub
jb
xchg
mov
inc
and
push
incl
inc
testl
jle
cmpsb
inc
push
add
sbb
xor
dec
push
jbe
mov
mov
mov
jbe
sbb
add
mov
pop
mov
push
adc
or
popa
pop
push
aam
adc
rorb
adcl
adc
dec
addb
fcomi
xchg
mov
dec
inc
es
jbe
ret
cmpb
add
inc
je
push
call
outsb
adc
xor
add
loope
enter
xlat
add
cltd
or
adc
push
sub
dec
testb
dec
out
clc
je
jp
push
lods
call
rolb
add
sub
xchg
leave
inc
mov
popa
add
ljmpw
and
popa
xchg
push
push
push
add
es
shlb
loop
push
call
sbb
xchg
mov
cmp
mov
add
shrb
clc
outsb
jne
mov
pop
pop
dec
mov
inc
push
mov
mov
cld
push
popa
pop
pop
lret
sub
sbb
and
jg
iret
in
mov
loop
adc
adc
jns
lret
pusha
fs
addl
xor
mov
add
pop
or
push
or
mul
dec
pop
loopne
add
ret
in
xor
popa
xchg
ss
je
fisubl
fisubl
mov
test
sub
adcb
or
pop
lcall
adc
fnsave
cmp
mov
andb
xchg
mov
mov
sti
sub
sbb
sub
mov
pop
in
and
cmp
mov
loope
or
jl
je
pop
cld
fisttps
push
add
arpl
sbb
or
xor
cld
mov
repz
pop
add
aam
jo
inc
add
sub
ds
jp
add
mov
xor
and
sub
callw
and
xor
loopne
std
je
xchg
or
aaa
mov
and
cwtl
popa
adc
mov
cmc
mov
clc
loopne
aaa
mov
push
stc
mov
cmpsb
push
std
incl
xchg
movl
add
inc
or
popa
shlb
jo
push
test
add
cmp
or
jmp
or
lock
aad
incl
sub
or
add
sbb
adc
loopne
or
sub
pop
pop
mov
fs
cmp
insb
fs
or
inc
hlt
lods
add
adcb
cmp
arpl
test
lcall
call
pop
pop
and
clc
push
xchg
adc
adc
orb
mov
xor
sbb
mov
fadds
imul
enter
xchg
mov
dec
and
fmuls
bound
push
sub
inc
cli
inc
loope
push
adc
les
loopne
cmp
sbb
jbe
jge
sahf
je
data16
xor
lock
sahf
pop
call
xchg
cmp
mov
out
add
loopne
test
add
fimuls
test
jge
add
xchg
aas
sbb
fimull
les
inc
imull
ret
popa
pop
andb
iret
adc
pusha
pop
add
pop
xchg
pusha
push
insb
sub
fldt
xor
xor
sbbl
les
mov
cld
aaa
pop
data16
lret
push
sbbl
pop
or
push
push
orb
pop
out
mov
pusha
je
xor
add
aam
negb
add
andl
lret
fsubl
add
lock
push
fwait
std
mov
sbb
or
pop
jge
jne
jg
ret
mov
js
loop,pn
inc
aam
idiv
and
je
xor
add
dec
lock
mov
jbe
cli
jbe
jo
nop
ljmp
pop
mov
push
cli
mov
adc
mov
pop
mov
push
add
pusha
addb
inc
inc
push
imul
push
enter
or
cmp
shll
sub
add
and
data16
jle
push
addb
xor
ret
inc
aam
mov
and
loopne
mov
imul
adc
sub
pop
out
push
call
pop
add
mov
int3
decl
mov
add
lock
mov
enter
jo
push
test
push
addl
icebp
ss
inc
add
movsb
inc
lcall
adc
hlt
cli
in
call
jg
cmp
and
mov
clc
pop
loope
imul
inc
sbb
xor
adc
loope
jg
data16
lar
lea
push
ret
pop
dec
pop
cmp
jl
rcr
mov
jge
divb
cmc
push
pop
push
mov
call
or
jbe
jne
lcall
xchg
xor
shll
mov
push
add
xor
jno
or
in
addb
or
mov
push
in
or
je
add
mov
xor
loop
movsl
or
push
sbb
je
bound
in
xor
mov
pushf
dec
or
push
jo
in
mov
mov
ror
loopne
dec
scas
js
call
xchg
dec
sbb
sub
mov
push
inc
and
add
and
mov
xor
call
lock
std
or
outsb
je
je
cmp
call
cmpsl
sbb
loop
outsl
or
sar
add
mov
inc
mov
lcall
fsubs
call
sbb
scas
pop
and
stos
cltd
jp
add
lea
lea
icebp
inc
cmp
mov
add
das
xor
clc
add
test
jae
mov
pop
xor
jo
inc
ss
scas
call
or
mov
mov
jb
add
adc
inc
jg
icebp
pop
imul
inc
or
outsl
sbb
pop
pop
sbb
add
adc
testb
in
data16
xor
or
andb
fidivl
inc
lods
xor
sub
lea
dec
mov
and
mov
push
adc
xor
test
scas
mov
ficoms
sub
sbb
shlb
mov
lcall
cs
outsl
repz
pusha
jbe
clc
dec
jg
sbb
inc
call
lock
ret
xchg
sub
and
add
push
mov
and
pop
sar
orl
loop
add
adc
adc
add
out
or
add
je
pop
sbb
add
add
nop
mov
mov
dec
pop
jp
shrl
icebp
or
fidivrl
push
mov
sub
mov
cmovne
or
sbb
lret
repnz
dec
jb
hlt
mov
and
jo
or
mov
push
inc
xor
icebp
clc
pop
and
lcall
movsl
les
lods
call
insb
add
lock
jg
icebp
lahf
sub
js
xchg
add
mov
lret
cmp
andl
xor
js
add
xor
or
xchg
test
add
xchg
inc
add
test
mov
pop
cld
int3
cmp
pop
add
fimuls
ja
mov
int3
adc
add
push
inc
add
pop
inc
insl
push
cmpb
lea
mov
jo
mov
mov
mov
adc
leave
sar
adc
push
cs
les
sbb
push
jo
lock
ficompl
in
pop
jne
push
ja
sbb
stc
add
in
fwait
in
lcall
adc
pop
push
jnp
jo
lret
cmp
add
pop
dec
lods
jge
cmpsl
or
or
xor
loop
mov
sbb
cmp
mov
or
dec
and
mov
inc
adc
pop
std
mov
test
inc
test
clc
pusha
aaa
jo
add
jg
xor
movsl
outsl
test
dec
adc
xchg
jo
cmpl
cs
push
jge
je
adc
mov
je
and
clc
inc
sbb
xchg
push
cmp
addl
jecxz
ljmp
add
icebp
gs
lock
lock
int
ss
jle
inc
nop
and
sub
inc
dec
call
mov
pop
das
jb
inc
sbb
dec
call
mov
pop
pop
or
incl
xchg
jo
ss
or
and
lock
inc
lret
mov
sub
jbe
dec
std
pop
nop
mov
mov
ficompl
xor
sahf
inc
out
cmp
repnz
icebp
incl
pop
fildl
repz
shrl
mov
add
push
inc
and
scas
add
adc
decl
je
cmp
pop
mov
xor
xor
xchg
pop
movsl
push
adc
scas
subb
daa
jl
pop
xor
data16
call
or
mov
ficoms
mov
mov
jecxz
into
shlb
les
cld
aaa
jge
cmp
push
sbb
lock
mov
test
jbe
cmc
mov
xor
pop
in
mov
or
movsb
test
xor
jg
popf
sbb
loopne
mov
xchg
je
and
pop
into
ss
outsb
loop
xor
ror
mov
jo
xor
pop
push
adc
lcall
add
adc
push
das
add
xchg
mov
lret
xor
sub
lods
push
or
add
push
repz
sbb
adc
outsl
add
nop
add
push
jno
mov
sub
add
std
mov
nop
mov
mov
push
mov
adc
xorb
daa
pusha
jo
adc
or
or
xorl
mov
cmp
push
nop
fs
mov
cli
sarl
jg
xchg
add
mov
ss
push
push
test
and
stc
add
adc
xor
clc
cmp
sbb
ja
push
js
xor
test
inc
fwait
cli
mov
inc
repz
sbb
adc
mov
call
lea
repz
inc
xor
incb
jno
cmc
add
push
test
test
andb
xor
xchg
mov
dec
in
push
adcb
or
aam
adc
rcrb
inc
loopne
or
addb
pop
popa
or
mov
mov
push
mov
inc
jne
test
sti
jne
mov
mov
fists
add
icebp
ds
cmp
or
lea
jle
jle
ja
or
and
mov
shrb
push
dec
mov
outsl
push
rorl
cmpl
xchg
mov
xor
loop
outsl
pop
push
mov
xchg
jo
test
sub
ljmp
iret
jmp
or
das
leave
inc
add
movb
mov
push
xor
pop
or
push
jne
pop
inc
xor
jno
mov
test
push
push
mov
and
mov
or
sbb
clc
orl
ss
call
iret
or
and
js
dec
ret
jl
arpl
mov
add
call
push
push
hlt
push
add
in
call
inc
adc
lock
cmc
jg
push
add
orl
jmp
pop
xor
std
je
and
outsb
out
pop
and
push
add
jl
jl
dec
mov
js
jns
sub
data16
shlb
and
cwtl
adc
cmp
leave
lea
iret
in
mov
lahf
hlt
mov
clc
gs
das
sbb
xor
addb
sub
mov
xor
jg
or
inc
push
add
subl
sbb
loop
sub
xor
add
pop
push
or
subb
push
orb
rolb
mov
xchg
inc
push
or
ret
push
movsb
rolb
push
rol
fdivr
sbb
sub
jecxz
sub
mov
inc
aad
push
jg
rcrb
push
sbb
cld
insl
inc
loopne
or
push
dec
pop
cltd
sub
push
xchg
js
xchg
pop
or
sub
xor
mov
clc
call
inc
cmpsb
adc
mov
push
test
fsubl
sub
test
xor
dec
test
ffreep
in
sub
pop
in
or
bswap
dec
and
jbe
push
fldenvs
mov
mov
pop
push
cld
incl
inc
sbb
ret
inc
js
je
and
shlb
sysenter
jg
add
or
inc
or
dec
adc
ljmp
mov
adc
orb
or
je
push
inc
push
mov
inc
jbe
rclb
jmp
rorb
or
rcll
mov
xor
lock
or
cmpsb
or
and
sub
mov
stc
sarb
shrb
add
push
sub
push
add
lods
push
cmp
shlb
add
pop
jmp
loope
test
add
outsb
adc
call
inc
sahf
xor
cmp
pushl
pop
cmp
jne
je
push
mov
nop
test
ljmp
es
sbb
push
rolb
call
xchg
xor
scas
pop
pop
pop
fimull
filds
pop
gs
push
pop
add
leave
ret
faddp
xchg
je
call
mov
je
xor
jne
mov
push
lods
add
add
sbbb
jl
add
rcrb
inc
xor
clc
dec
cld
fbld
mov
call
cwtl
push
cmpb
add
push
lret
xor
pop
dec
jne
test
fstpt
jg
adc
sub
jmp
mov
inc
ret
popf
bound
jl
je
pusha
pop
cmp
je
rcrb
jecxz
and
inc
pop
mov
jbe
ret
pusha
or
dec
pusha
or
jmp
mov
pusha
and
filds
push
sbb
pop
imul
pop
lods
cld
and
sbb
cmp
shrl
lcall
movsb
push
push
jmp
loop
adc
pop
mov
and
js
fs
jl
bound
sub
scas
enter
mov
int3
testb
or
cld
jne
and
ret
ret
loopne
xorb
mov
loopne
add
xor
and
inc
or
mov
fcomi
jl
push
arpl
sbbl
mov
sbb
ljmp
jle
loop
loopne
and
inc
sub
call
clc
push
adc
or
adc
push
pusha
sbb
push
out
push
bound
fs
cmp
add
mov
push
js
push
jb
call
inc
and
pusha
arpl
push
sbb
push
call
fs
call
mov
les
mov
sarb
movl
inc
add
or
dec
jmp
cmp
mov
jae
lea
loopne
pop
dec
mul
daa
popa
inc
mov
inc
pusha
or
adc
pop
test
add
adc
adc
push
add
sub
into
pop
add
adc
add
shrb
insb
mov
loope
loope
adc
enter
iret
loop
shl
inc
sbb
loop
adc
push
mov
lahf
test
mov
sbb
scas
push
jmp
loope
loopne
popa
loopne
jmp
xchg
cmp
xlat
add
lea
dec
adc
or
xor
cwtl
mov
loopne
loope
pop
mov
jle
jmp
pusha
loop
mul
orl
push
jmp
push
loop
mov
addb
adc
aaa
insl
data16
cmp
call
orb
out
repnz
cmp
lods
lcall
leave
nop
jb
mov
push
mov
icebp
pop
adc
and
addb
addr16
movsb
jge
cmpb
mov
mov
dec
movl
lods
jge
insl
add
pop
xorl
repnz
cmp
add
add
push
je
cmp
xor
xorb
rorb
ret
xchg
loope
push
ret
pop
call
sub
and
shll
in
loopne
push
dec
jl
mov
push
mov
push
pop
mov
sarb
loope
imul
xchg
in
out
cmp
mov
push
loopne
clc
loopne
call
lea
std
or
mov
mull
add
adc
sub
and
loope
dec
mov
addb
lahf
or
scas
add
push
inc
fisttpl
pop
add
stos
fsubrl
rcrl
add
and
inc
ret
jle
cmp
pop
cs
mov
mov
inc
xlat
or
push
int3
scas
xor
and
add
or
dec
jne
sub
es
adc
lret
dec
pop
cli
fcoms
mov
ret
jo
or
or
std
movsb
les
xchg
mov
jp
push
or
mov
cmp
add
add
xor
mov
jbe
push
mov
inc
add
mov
sbb
add
jbe
hlt
push
fcmovne
push
insb
add
dec
xor
call
xchg
mov
mov
mov
mov
push
pop
ficomps
cld
pop
pop
mov
popf
jo
test
adc
jo
fistl
repnz
jns
mov
pop
sub
lock
adc
xchg
mov
add
push
loope
pop
iret
je
lea
hlt
mov
icebp
adc
fadd
cmp
xor
add
jo
lock
fwait
push
add
mov
pop
scas
xlat
nop
xchg
repz
push
pop
pusha
sub
or
or
orb
test
mov
adc
lods
push
add
cli
lock
push
icebp
sbb
pop
ds
jae
pusha
mov
push
add
stos
mov
cld
adc
xchg
mov
add
adc
call
shr
shlb
mov
add
pop
push
and
xor
aad
cld
aas
cmpsb
add
dec
or
mov
sbb
mov
outsl
adc
je
call
and
cwtl
adc
leave
pop
cld
push
xchg
cmc
and
aaa
inc
xor
adc
jb
add
mov
leave
jae
repnz
and
push
and
ret
outsl
sub
pop
jl
push
sbb
push
sbb
pop
mov
mov
js
cmpl
pop
adc
and
loopne
adc
popa
and
dec
mov
cmpb
shlb
fadds
dec
mov
pushl
stos
pop
jo
sahf
add
outsb
js
add
push
or
je
fcmovnb
lcall
or
orl
mov
cmp
mov
mov
pusha
jecxz
jle
xor
stos
lock
ss
mov
adc
and
and
cmpsb
xor
bound
and
fs
fildll
insb
xor
addr16
mov
pushf
mov
jecxz
inc
js
call
inc
and
orb
cmp
lock
and
movb
lcall
mov
lock
adc
mov
pop
or
pop
mov
or
xor
sahf
add
test
push
cli
cmp
lcall
loopne
cmpb
mov
sbbb
xor
aaa
add
and
test
inc
test
inc
cmp
mov
mov
add
xor
incl
xor
std
arpl
mov
test
add
add
mov
adc
sbb
and
nop
adc
fcom
lock
inc
sub
sub
push
test
repnz
and
das
loopne
push
adc
jg
loop
lods
lock
mov
push
jo
jp
mov
data16
mov
test
js
lock
ds
inc
andl
call
shrb
inc
inc
lock
stos
movsb
mov
cmpsb
fisubrl
jbe
push
adc
push
stos
inc
cmp
pop
loop
mov
inc
shlb
add
std
inc
ret
ja
xor
adc
or
adc
aaa
dec
mov
inc
add
cmp
cs
loop,pt
xchg
aaa
js
sub
es
cmp
jp
pop
mov
add
dec
push
push
push
pop
or
push
xlat
mov
dec
add
lods
jno
or
das
sbbb
lock
add
cmpb
mov
shr
jl
loope
loopne
outsl
loop
or
data16
jp
dec
call
leave
and
mov
xor
rcl
push
mov
cmp
or
sbb
push
or
sbb
add
or
mov
shll
sbb
das
decl
or
repz
lock
fildll
shlb
sub
mov
jno
pop
call
mov
mov
ljmp
and
ret
stos
sub
add
cvttps2pi
mov
sbb
loopne
push
push
sbb
pushl
xor
push
push
push
push
ljmp
mov
mov
xor
pop
call
mov
jo
mov
dec
sub
dec
add
or
and
push
pop
les
sub
xchg
push
xor
adc
divb
add
adc
lcall
outsb
push
pop
pop
jns
adc
andl
sub
ljmp
sbb
add
sub
mov
xchg
jle
jno
mov
xor
sub
rorb
mov
add
lock
pop
cmp
sbb
push
mov
aam
jo
outsb
jo
ljmp
pushl
push
out
xor
jae
das
jo
ja
add
out
cmc
push
add
adc
pop
sub
or
jg
jno
aam
lock
ljmp
inc
add
adc
add
sbb
clc
push
fdivs
dec
inc
testl
adc
fiadds
xor
adc
fs
jb
lds
mov
push
adc
mov
iret
push
jbe
movb
mov
push
roll
add
jmp
incb
aas
jae
movsl
mov
sbb
lahf
or
or
xor
jecxz
rorb
sub
push
dec
dec
ret
and
xor
mov
mov
cmpsb
and
sbb
rorb
push
push
jl
jb
sbb
out
jecxz
pop
xor
mov
add
jne
lea
inc
and
mulb
hlt
add
and
and
cmp
js
call
adc
lock
mov
inc
add
scas
nop
inc
jmp
push
les
jl
mov
dec
xlat
outsb
cwtl
push
or
mov
lahf
icebp
sarb
call
inc
jmp
pop
shrb
add
add
pop
popa
lea
roll
or
lea
fwait
and
adc
add
fwait
adc
inc
xor
or
aas
pop
or
adc
rorb
sub
dec
decl
dec
jg
lods
ja
xor
shr
inc
xchg
xchg
or
push
mov
add
std
and
cmpb
incl
cld
faddl
inc
shl
sarl
sbb
or
ret
cltd
jo
outsb
push
add
scas
push
mov
jbe
outsb
int3
sub
dec
lds
push
sub
xor
mov
or
mov
inc
xchg
adc
clc
sub
dec
jne
xor
loopne
data16
jne
inc
mov
pop
dec
shll
sbb
lcall
adc
xchg
add
les
lock
inc
push
call
pusha
sub
jp
mov
adc
mov
add
call
mov
mov
adc
sbb
rcl
add
xor
sbb
adc
ja
jo
cmpsb
push
int3
into
pop
stos
adc
call
jmp
sbb
push
test
mov
loope
fcoms
ljmp
dec
jle
icebp
sub
scas
add
aam
cltd
clc
mov
cmp
cli
xorb
cmp
inc
not
test
pusha
scas
mov
je
mov
in
rclb
or
dec
and
inc
mov
ds
adc
outsl
add
test
call
popa
mov
rol
jns
cmp
sbb
ja
mov
jo
pushf
sbb
push
rclb
insl
call
pop
push
push
es
xchg
push
adc
rcrl
add
jb
cmp
jge
and
jle
add
pop
popa
sbbb
xor
cld
push
lods
cmp
icebp
call
out
inc
rcll
stos
jne
cmp
xchg
mov
cmp
data16
and
add
dec
fdivr
add
lea
rcrb
test
jg
add
shrb
fdivs
call
lea
push
sarb
add
outsl
sbb
mov
rclb
add
xor
inc
aam
js
fsubrs
and
dec
mov
test
into
movsb
jne
idivb
mov
rclb
arpl
test
pop
adc
hlt
cmp
fdivrs
inc
test
test
jmp
sbb
adc
cmpsl
jmp
nop
push
adc
ja
call
test
inc
es
add
sti
add
insl
sbb
inc
xchg
shlb
jl
fildl
fldt
inc
pop
cmc
mov
jmp
mov
nop
push
fiadds
mov
push
adcb
loope
gs
xor
add
addb
and
jp
mov
push
cmpsl
or
sub
push
pusha
pop
pushf
push
pop
jle
fs
ljmp
sbb
push
dec
mov
ss
pop
xor
sbb
pushw
pop
hlt
cmp
mov
mov
ret
aam
sub
incl
or
adc
clc
mov
in
fisubl
dec
pop
adc
sar
xchg
sbb
arpl
mov
push
push
add
cmc
add
sbb
xchg
loopne
push
push
sbbb
adc
cmp
andb
loopne
push
push
adc
dec
pusha
jl
jmp
hlt
out
cmp
add
inc
clc
jp
outsl
cmc
loopne
jg
dec
andl
loopne
and
pop
call
sbb
dec
xor
mov
sub
stc
or
fucomi
sbb
xor
jl
call
xchg
mov
push
bound
sahf
adc
call
pushf
add
incl
jmp
gs
add
cmpb
jl
xor
call
dec
outsl
rclb
orb
xor
mov
mov
nop
inc
mov
out
dec
xor
xor
cmp
inc
pop
push
adcb
lods
dec
rclb
pop
dec
cmp
loop
push
mov
rorl
and
scas
push
mov
data16
push
cmp
call
call
pusha
pop
adc
in
pusha
jb
cmp
and
adc
xor
pop
jo
pop
rep
cli
ja
testb
pop
pop
jge
adc
adc
popa
bound
add
lcall
popa
insl
into
clc
pusha
insl
bound
loop
push
mov
or
fistpl
cld
jg
ret
inc
jmp
and
loopne
push
inc
pusha
push
xor
cmp
jmp
mov
jle
xor
inc
shll
mov
fdivs
cli
pop
adc
xor
in
add
test
mov
adc
lock
insl
xor
mov
and
aaa
cld
xor
adc
push
mov
mov
inc
lock
xor
lods
cmp
xor
mov
add
pushf
and
mov
inc
orb
sub
and
sub
inc
adc
cmp
cltd
sbb
jg
dec
loop
loopne
call
push
in
and
in
scas
negl
repz
loope
divb
popa
and
bound
loope
mov
aaa
jmp
mov
sbb
and
pusha
pop
notb
and
dec
cmc
adc
test
adc
aam
loopne
or
pop
je
and
cmp
sub
and
xor
push
inc
cli
jno
push
xorb
sar
dec
add
call
or
jo
lock
xchg
clc
bound
lret
and
fidivrs
dec
mov
xchg
dec
xorb
test
dec
mov
or
mov
xchg
cmpb
pop
dec
or
mov
xor
mov
cmp
inc
fs
rcll
subb
inc
pop
and
xchg
repnz
test
lock
sub
outsb
lock
push
scas
rolb
aaa
sbb
iret
call
adc
lock
dec
in
and
jne
test
ret
add
incl
test
mov
jo
subb
cmp
pop
adc
inc
jg
scas
mov
add
push
jg
push
lea
push
push
jno
mov
orl
inc
fnsave
cld
pop
lock
nop
pshufw
or
out
ret
and
and
xor
js
adc
ja
xor
loope
jmp
push
mov
mov
push
lock
xor
into
xor
mov
lock
popa
in
sbb
and
stos
jo
pop
mov
lock
ljmp
inc
xor
lock
xor
sbb
outsl
out
rcl
cmp
add
xor
xchg
mov
and
pushl
mov
dec
add
adc
sbb
popa
inc
push
jg
mov
loop
lock
mov
cld
or
aaa
push
push
xorl
sub
xor
push
fisttps
bnd
xor
dec
mov
jne
mov
adc
jb
lock
mov
mov
or
xor
sub
xor
or
cmp
push
pop
in
pop
and
xorl
lahf
cmc
dec
int3
or
mov
xor
call
push
decl
pushl
and
dec
add
lock
sbb
mov
push
xor
mov
mov
cmp
mov
jbe
ja
jmp
mov
push
call
inc
sub
icebp
push
mov
fs
popa
push
and
jae
jl
decl
frstor
mov
jo
xlat
push
cs
jo
sub
or
xor
dec
and
repnz
jmp
lock
call
je
sbb
jg
scas
mov
mov
lock
pop
and
jge
repnz
inc
dec
add
mov
movsb
mov
test
xor
pop
cmp
add
xor
mov
sub
push
das
mov
add
lret
mov
xor
sub
icebp
and
orb
mov
std
or
call
push
dec
scas
jg
push
bound
inc
xor
outsl
hlt
add
push
call
les
jb
test
push
icebp
test
cltd
fstpt
pop
cmp
add
mov
adc
sub
cmp
mov
std
mov
push
lock
pop
lds
cmp
mov
lds
mov
jo
aam
fwait
jecxz
enter
movsb
inc
pop
loope
mov
jmp
in
fldt
and
or
and
dec
or
push
jmp
pop
fs
adc
xor
mov
cmpb
jo
data16
push
jmp
dec
mov
sbb
dec
sub
in
add
add
push
pop
test
sbb
push
or
ss
jle
bound
add
dec
and
mov
add
jo
mov
add
jb
add
mov
or
sbb
jmp
push
test
aam
mov
das
lock
add
jno
mov
call
sbb
fcompl
inc
mov
into
dec
xor
aad
pushf
rcrb
inc
cmp
insb
sbb
cmpsb
inc
ljmp
scas
push
inc
mov
push
clc
push
xchg
xchg
jo
incb
cwtl
mov
xor
dec
clc
push
xor
push
dec
call
div
sub
pop
shr
xorb
repz
jg
jg
fsubrl
daa
lea
xor
dec
or
mov
push
sti
jecxz
add
test
jg
push
int3
inc
notb
pop
cmc
mov
push
pop
add
icebp
mov
sbb
sbb
or
rcrb
testl
cld
lea
div
mov
orb
push
lock
ret
push
sub
cmpsb
inc
nop
add
incb
xchg
je
or
cmp
insb
call
cmp
mov
inc
cmp
add
out
clc
inc
jmp
adc
push
mov
ja
lds
movsb
mov
rclb
inc
jmp
push
lock
mov
and
xorb
push
sub
call
lea
and
inc
inc
mov
test
push
fldl
dec
push
and
push
fs
push
ljmp
push
lea
call
mov
les
add
adc
stos
test
pop
cli
inc
outsb
jo
add
addb
mov
ret
pop
pop
repz
addb
xchg
popa
push
push
and
jo
push
jno
mov
or
and
push
xor
sbb
in
lock
and
xchg
hlt
dec
jg
mull
push
push
scas
cmp
or
add
add
pop
jl
lds
add
pushl
sub
mov
and
jg
pop
pop
inc
mov
mov
fmul
mov
or
arpl
icebp
fdivrs
inc
or
add
sbb
push
mov
adc
cmpb
test
and
jmp
xchg
adc
sub
enter
sbb
xchg
gs
out
aas
lods
jbe
xchg
xor
loop
mov
ds
push
cs
fwait
rcl
mov
dec
push
sub
or
dec
or
add
lcall
or
movsb
xchg
jb
ljmp
inc
mov
cmp
jge
pop
inc
pop
and
pop
addps
enter
jge
jbe
call
andb
repz
hlt
ss
rclb
adcb
std
rolb
mov
adc
lock
test
inc
jg
ja
clc
scas
and
jns
cmp
cmp
jnp
inc
adc
xchg
push
sbb
shlb
aaa
mov
add
or
add
jbe
pushf
mov
and
xchg
adc
adc
xor
mov
cld
add
push
sbbb
daa
test
xchg
and
test
addb
incl
les
xorb
xchg
inc
clc
mov
loope
mov
adc
fistl
or
pop
jo
cmp
dec
push
xor
cwtl
in
movsb
test
subb
scas
push
lret
sub
and
or
fdiv
and
je
fisubl
inc
movsb
ret
pop
push
jmp
push
ret
xor
ret
jl
push
add
and
out
rorl
daa
push
sub
pop
dec
adc
lock
ss
lock
xor
add
or
push
cmp
sub
jne
xor
sbb
jnp
adc
fcmovnb
pushf
cmpsb
and
mov
sub
jno
mov
lods
lods
incb
inc
sbb
les
or
daa
lcall
and
adc
adc
fbstp
mov
jno
mov
lcall
xorb
out
shrb
insl
leave
incb
pop
insb
loopne
push
jns
insl
movb
jo
xchg
mov
adc
add
inc
sar
stos
push
add
je
inc
sarb
push
or
jg
fadds
cmp
int3
or
daa
mov
mov
insb
rcrl
ret
and
add
mov
add
test
jne
ret
mov
push
or
ficompl
leave
adc
cli
loopne
rclb
pop
add
mov
adc
inc
ret
call
push
jmp
shlb
mov
inc
shll
je
sub
xlat
inc
repz
pop
push
sub
dec
cmp
push
pop
adc
in
and
ret
sbb
ljmp
lock
in
add
je
stos
rolb
lret
or
or
adc
ror
xor
call
sbb
iret
fmul
cmpsl
lret
imul
ror
mov
or
push
adc
add
pop
rclb
push
test
mov
mov
xchg
jmp
push
push
pop
xchg
and
pop
mov
push
jl
call
and
call
in
jbe
mov
dec
imul
or
xchg
adc
mov
bound
popa
popa
adcb
dec
or
fadds
mov
add
insl
mov
incb
test
loopne
icebp
fisubs
pop
iret
add
cld
loopne
incl
jle
je
push
adc
adc
test
add
adc
xor
push
les
add
jo
jno
xchg
repnz
jmp
dec
in
inc
mov
jns
push
je
pusha
sub
out
or
add
sbb
push
push
push
mov
push
xchg
or
push
inc
loopne
je
adc
enter
or
cs
inc
push
and
cld
ret
clc
cld
into
test
mov
adcl
pusha
sub
fadds
jg
cld
push
test
and
gs
popa
add
mov
push
xchg
into
cmp
mov
mov
ja
or
out
mov
adc
xor
gs
xor
mov
icebp
or
jb
pop
lcall
and
loopne
mov
mov
out
data16
jmp
dec
into
into
xor
inc
test
jne
add
pop
pusha
dec
add
int
enter
or
shl
and
fidivs
and
xor
into
mov
mov
out
inc
aaa
xor
mov
std
loopne
pop
lds
repnz
ds
add
or
jb
hlt
cmp
lds
or
cmp
mov
pop
dec
inc
push
sub
imul
and
mov
or
mov
sbb
inc
push
std
adc
or
lea
inc
cmpsl
adc
add
test
push
dec
lock
sbb
lods
pop
xor
adc
mov
jbe
xor
add
mov
aaa
adcb
xor
mov
mov
inc
cmp
loop
loopne
cmp
aaa
enter
mov
push
sub
je
test
jno
cltd
fucompp
leave
pusha
insl
loopne
imul
push
and
pusha
les
call
clc
loopne
sbb
sti
pop
out
pusha
add
add
lock
clc
pop
bound
stc
cli
jp
fildl
shrl
out
mov
and
or
add
push
add
cmp
lock
sbb
add
and
mov
popa
mov
rclb
incl
inc
lock
jnp
mov
add
out
ljmp
jne
loop
data16
mov
mov
aad
ret
and
and
mov
and
xor
mulb
adc
mov
and
inc
inc
daa
loope
jecxz
pop
pusha
jle
or
adc
add
cmp
mov
orb
mov
sbb
pop
adc
out
sub
pushl
and
or
or
cmp
sub
inc
subb
add
shr
rcr
add
jl
repnz
stos
jecxz
push
add
mov
loopne
adc
mov
shr
arpl
orb
dec
loope
push
add
shll
pusha
inc
ds
push
movsb
xchg
xor
pop
or
cli
jmp
add
sarl
jb
mov
fadd
in
das
or
ret
inc
mov
mov
std
mov
lods
add
cmp
add
add
add
mov
int
in
xor
cmp
add
roll
aaa
fdiv
xor
in
xlat
fisubrs
cwtl
jmp
mov
lcall
add
sti
xchg
sbb
push
jnp
push
jo
and
dec
je
cmpb
aas
or
push
jne
push
mov
icebp
jo
mov
xor
or
lods
mov
mov
mov
in
int
vprotd
push
enter
inc
mov
scas
xchg
js
stos
add
adcb
pop
add
sub
sbb
mov
insb
cwtl
jle
ss
and
and
push
orb
push
or
ljmp
ljmp
or
ljmp
fldt
inc
test
outsb
loopne
or
xor
jmp
and
bound
mov
fsubs
popf
mov
sub
cltd
hlt
xchg
or
fsts
aam
push
jl
jbe
aaa
add
sbb
push
jl
loop
in
xor
dec
lret
ljmp
jmp
cmp
aad
mov
xor
clc
setg
aaa
test
jne
push
mov
stos
es
add
jb
sbb
push
and
push
add
add
pop
movsb
andb
sbb
cs
add
inc
scas
jp
sub
jbe
jmp
and
adc
push
cld
fs
inc
jo
xor
mov
pop
test
inc
scas
ljmp
dec
push
int
push
jp,pn
lock
pop
jo
mov
in
cmpb
sbb
pusha
xor
and
mov
mov
or
jo
dec
and
imul
push
in
xchg
jo
lea
fadds
push
cld
mov
call
adc
hlt
mov
inc
jp
jae
pusha
lods
add
lods
jo
jl
inc
cld
inc
shlb
xor
add
movb
incb
inc
push
sbb
add
cmp
ja
xchg
call
dec
or
test
xchg
xchg
adc
iret
push
pop
je
lret
scas
mov
lods
jecxz
std
jg
faddl
outsl
call
sbb
or
add
je
ret
lods
out
nop
test
inc
and
repz
push
or
es
sbb
jo
imul
and
fisubs
popa
and
imul
stos
scas
cmpsb
ss
pop
out
es
pop
mov
ljmp
or
dec
call
call
movb
je
call
jl,pn
ret
test
mov
push
xor
jg
jl
sub
mov
sub
imul
add
mov
add
pop
cmp
add
sbb
push
push
mov
mov
pop
xor
adcl
xor
idiv
mov
and
add
test
mov
outsb
jne
rorl
adc
add
imul
xchg
mov
cld
lods
lock
jne
inc
add
mov
je
add
repnz
mov
inc
ret
es
cmpsl
lock
mov
inc
aam
outsl
mov
loopne
inc
mov
mov
add
sub
std
mov
pop
es
inc
add
pop
addl
lods
add
add
push
sub
mov
jo
xor
jo
push
std
aaa
cmpl
jo
dec
mov
push
xchg
test
sub
std
lahf
add
cmp
mov
xchg
add
mov
add
mov
inc
inc
les
push
mov
pop
inc
ss
sub
scas
movsb
push
jae
dec
dec
scas
call
xor
add
addb
repnz
call
and
lret
nop
loope
loope
jne
lock
call
mov
jo
jmp
mov
push
cli
lock
mov
adc
popf
jle
push
jno
lcall
loop
mov
fwait
mov
lock
fstpt
push
sbb
filds
sbbb
mov
jne
mov
and
sub
add
mov
xor
inc
jbe
inc
scas
fcomps
push
lock
xor
sub
sbb
add
xor
je
adc
mov
sbb
jp
je
push
xor
icebp
xchg
or
sub
test
ret
mov
push
fistl
cmp
mov
icebp
add
mov
sbb
jg
adcb
mov
addb
jecxz
aam
ljmp
or
mov
inc
pop
mov
sbb
inc
cmp
sbb
mov
push
sub
enter
bound
das
cmp
inc
sub
fisttps
mov
idiv
xchg
sarb
test
clc
adc
cmpsl
add
sbb
clc
sub
sbb
adcl
sbb
movsb
fcomi
jb
jl
and
dec
mov
sub
loope
in
and
scas
pop
adc
mov
mov
mov
jmp
inc
xor
push
pop
bound
mov
clc
sbb
shll
mov
mov
jbe
push
xor
fwait
xor
xor
nop
mov
mov
addr16
mov
cmp
adc
loopne
sub
cmp
sbb
out
stos
jg
je
jmp
fdiv
cmp
lret
lock
push
lock
add
scas
lock
or
pop
mov
jg
enter
repnz
lock
jmp
pop
pop
dec
rorb
add
shrl
pushf
sarb
dec
mov
adc
call
pop
jecxz
out
insb
lock
mov
xor
lock
adc
cld
push
daa
adcl
movl
or
out
ret
sub
push
cmp
adc
bound
pushf
call
paddusb
mov
dec
decl
pushf
jne,pn
xor
mov
add
cmp
mov
inc
mov
mov
xor
clc
sbb
adc
inc
scas
xor
mov
xor
mov
pop
xchg
test
cld
ljmp
jbe
push
add
jge
xchg
xorl
daa
cmp
cwtl
inc
dec
call
addl
scas
or
rorb
and
in
inc
outsl
ja
add
sbb
jae
movsb
mov
jne
xchg
ret
or
mov
bound
mov
or
scas
xchg
and
mov
clc
add
pop
inc
das
add
mov
pop
push
jg
shl
pop
push
push
clc
mov
xchg
das
dec
sbb
push
jb
push
push
sbb
out
adc
add
test
sub
andb
out
scas
jo
cmp
push
push
add
and
loope
sub
ss
xor
or
mov
jns
sbb
sub
or
fs
adc
cmp
jecxz
testb
cmp
add
add
xchg
add
enter
push
xor
test
sbb
cwtl
loope
mov
jbe
data16
std
addb
in
push
add
stos
dec
pop
std
sbb
ljmp
push
add
and
clc
or
or
jmp
je
inc
push
les
jo
std
test
mov
jne
push
cld
or
sbbb
inc
add
add
or
xchg
xor
or
out
adc
rclb
push
cmpb
and
testb
loopne
andl
xchg
repnz
cmp
je
movsb
and
jns
cmp
mov
push
repz
xchg
pop
and
js
call
ja
shrb
subl
mov
orb
ds
pop
test
test
jmp
xchg
or
mov
addb
pop
mov
ret
sbbb
shrb
pop
pop
dec
xchg
add
cmp
push
mov
add
test
add
pop
mov
push
adcl
out
push
add
dec
inc
arpl
mov
punpcklbw
lret
ret
subb
ljmp
fcoms
pop
xor
mov
divb
aam
push
pushf
sbb
or
in
pop
loopne
scas
and
mov
xor
rorb
and
jo
lock
mov
and
cmpsb
rolb
add
jl
mov
shll
sub
adc
mov
mov
cmp
lahf
js
test
out
jo
xor
das
pop
mul
icebp
add
xor
ret
rcll
add
orb
clc
dec
call
pushl
pop
lret
push
pop
add
int3
adc
clc
rcrb
xchg
pop
cld
push
mov
arpl
mov
push
cmpsb
xchg
sbb
js
or
jne
je
pop
dec
dec
fisubrl
ljmp
hlt
mulb
jnp
pop
sbb
or
push
test
add
xchg
fmuls
push
pushf
mov
addl
jle
inc
into
push
add
lret
lds
mov
cmp
fmull
fcmovnb
or
dec
adc
test
shrb
jg
roll
pushf
jne
pop
push
sarb
pop
in
cmp
or
popa
inc
jl
test
xor
or
jne
mov
mov
or
inc
adc
push
jbe
cmp
clc
adc
stos
mov
clc
cmpsb
and
mov
push
hlt
and
test
ja
add
inc
push
loope
mov
jo
cli
adc
mov
and
mov
mov
add
or
pusha
dec
test
popl
sti
aaa
mov
leave
call
push
dec
mov
sbb
adc
mov
lret
inc
loopne
test
cmp
js
mov
mov
dec
cs
inc
mov
jmp
inc
stc
test
pusha
add
cli
je
inc
loopne
clc
aam
mov
cmc
adc
call
mov
add
jb
test
xchg
mov
mul
dec
ljmp
and
hlt
or
loopne
sub
dec
sbb
mov
jecxz
add
and
pop
mov
loop
pop
loope
add
out
stos
add
add
sub
and
sbb
jl
xchg
mov
ret
clc
bound
or
pusha
adc
mov
or
test
int3
and
sub
cmpsb
imul
leave
clc
sbb
nop
test
add
cmp
popa
add
cmp
pusha
adc
pusha
push
in
loope
lea
stos
cmp
inc
push
pusha
in
jg
xchg
inc
dec
and
test
mov
mov
xchg
dec
call
adc
xchg
pop
cs
and
fisttpl
cmp
repz
or
push
jo
pusha
dec
popa
mov
xor
fwait
pop
mov
cmp
lods
xchg
rclb
push
or
jne
cmp
call
sahf
xchg
loopne
call
mov
cmp
lods
sahf
pusha
pop
inc
outsb
push
in
loopne
sbb
adc
dec
or
push
or
cli
sbb
jmp
clc
mov
mov
sbb
in
push
ss
sub
loope
aad
sub
fsubrs
repz
push
jne
lods
ss
lret
ret
inc
dec
dec
push
or
push
mov
stos
orl
dec
repz
bound
add
jb
add
imul
cmp
addb
mov
std
insl
adc
hlt
loopne
lock
and
sbb
adc
xor
test
push
loopne
addr16
xor
jbe
leave
pusha
sub
popf
loop
je
jmp
in
inc
imul
and
inc
sub
decb
jbe
and
ds
rclb
cs
add
std
jmp
adc
loopne
add
dec
loope
cmp
push
push
fisttpl
and
ret
loop
push
sbb
sahf
push
clc
push
je
sub
or
sub
pusha
inc
and
sub
mov
loopne
adc
lret
sub
out
jo
aam
loopne
insb
xchg
test
sub
pop
dec
and
or
data16
rcr
push
call
mov
mov
cmpsb
add
insb
or
push
pop
mov
cmpb
push
pop
and
or
mov
or
in
pop
add
lock
cli
ret
push
call
in
jle
add
ss
jnp
mov
add
aaa
push
pop
inc
stos
loopne
incl
mov
push
arpl
inc
add
loopne
jecxz
movsl
aad
inc
ret
insb
sub
push
jg
out
xchg
inc
loopne
in
out
inc
sub
pop
out
xor
test
mov
faddl
sub
pop
fcoms
xchg
lock
jo
negb
call
mov
or
enter
jg
mov
xor
xor
jecxz
inc
inc
stos
or
fs
stos
test
les
jle
push
ljmp
add
jnp
cmp
jo
fs
jl
mov
enter
testb
xchg
xor
dec
add
xor
adc
cmp
loopne
jb
loop
inc
sbb
xchg
adc
add
or
outsb
add
call
shlb
or
je
add
add
icebp
lock
adc
fs
mov
sub
xor
rcrb
lea
pusha
test
shll
inc
add
jle
sub
sarb
fsubrl
dec
jmp
xor
das
dec
insb
sbb
add
lods
mov
mov
xor
lock
clc
add
inc
push
sub
rorb
add
loop
adcl
mov
inc
clc
mov
push
in
or
add
fimull
ret
dec
add
sub
add
pop
mov
adc
sub
cmp
shrb
push
or
stos
pop
sub
push
call
testb
jg
cld
call
add
data16
rorb
fs
js
cld
push
mov
hlt
xchg
adc
add
mov
out
std
ja
es
and
push
je
xchg
or
jle
inc
stos
dec
aaa
subb
inc
push
sbbb
movsb
xor
fsts
mov
push
mov
push
adc
jo
inc
sti
test
mov
repnz
jno
or
mov
adc
sahf
push
inc
lea
inc
pop
jle
dec
call
xorl
dec
loop
test
rorb
lock
push
int3
inc
cld
movb
lea
sbb
mov
scas
test
xlat
mov
xchg
adc
sub
add
fsubp
xor
inc
add
test
sbb
test
mov
mov
loope
movsl
add
or
test
and
add
fs
mov
cltd
lcall
mov
sub
push
push
inc
mov
sahf
cli
push
leave
mov
sahf
call
add
xorb
inc
int3
xorb
lock
lock
inc
adc
inc
lea
push
mov
rolb
sahf
imul
or
call
call
cld
lea
mov
mov
inc
or
add
push
xchg
or
sub
subb
dec
cmp
add
pop
jmp
mov
xchg
pop
dec
xor
les
jno
test
and
lods
or
gs
jb
ja
mov
mov
sbb
lcall
aaa
add
or
jmp
out
call
stc
sub
dec
xor
adc
pop
loopne
mov
and
adcl
pop
xchg
adc
add
add
inc
sub
fcoml
call
jo
sbb
mov
mov
movsl
jbe
pushl
xor
and
clc
sarl
rorb
dec
lock
mov
test
mov
incl
cmp
ja
ds
lea
sub
cmp
cmpb
xorl
clc
pop
call
sbb
popf
inc
or
ss
popf
lock
jl
aam
adc
std
dec
test
aas
jne
inc
jge
adc
shrb
dec
jg
mov
adc
jle
jbe
lock
adc
jnp
stos
mov
pop
sahf
xor
add
aam
lods
mov
lea
sub
rcll
sbb
dec
jge
test
add
mov
push
xchg
sub
sbb
in
or
out
rolb
out
bound
push
lock
fbld
push
adc
push
or
jb
test
sub
icebp
test
push
jo
or
mov
fcoms
rclb
and
int
shlb
mov
int3
out
adc
hlt
arpl
cmp
jge
sub
je
push
xor
xor
nop
add
inc
adc
or
test
adc
sti
cmp
sti
jb
sbb
jo
add
call
and
xor
and
inc
sbb
mov
push
shlb
inc
push
lret
in
incl
je
pop
mov
xor
pop
je
lods
insl
ss
mov
inc
sti
mov
lock
jl
add
loop
int3
add
jne
decl
push
pop
dec
loop
mov
int3
pop
push
mov
addr16
addb
sbbl
inc
rorl
insb
pop
cmpsl
cmp
sub
cmp
push
movsl
or
jle
fbld
fiaddl
push
fdivrs
jg
shlb
mov
xor
and
in
lock
mov
xor
inc
jae
vmwrite
sub
sbb
je
aam
lret
mov
add
cmc
sbb
mov
inc
divl
adc
into
push
jae
inc
xor
movsb
int3
incb
popl
in
or
cmpsb
cmp
jl
pop
xchg
lock
mov
inc
jo
and
shlb
mov
fisttps
pop
jne
lea
add
push
mov
jne
lea
sub
cs
dec
inc
jl
jp
pop
insl
mov
mov
je
adc
adc
out
jb
inc
shlb
cmp
jmp
push
inc
mov
add
andb
enter
cli
sub
add
jmp
push
adcl
je
icebp
or
cmovns
scas
hlt
sar
mov
std
sti
jo
jae
pop
and
fisubrs
cmp
fiaddl
push
jecxz
inc
fcomps
icebp
cmp
pop
mov
lds
cld
fdiv
icebp
push
xor
sub
mov
inc
jge
add
sbbb
or
sub
mov
test
loopne
mov
aam
mov
or
jg
pusha
inc
sub
mov
rclb
pop
imul
repnz
add
mov
imul
add
jp
lcall
fiadds
jae
mov
out
je
add
sbb
sbb
imul
pop
mov
call
repnz
and
pop
mov
idivb
pop
ret
divb
push
bound
aaa
sub
inc
cmp
ljmp
dec
add
sub
sbb
inc
sti
push
xor
sbb
mov
iret
dec
mov
sbb
cmp
clc
sbb
or
ss
aas
and
notb
push
add
adc
and
xchg
adc
xchg
push
and
inc
rcrb
sbb
outsb
ret
adc
cmp
add
pusha
adc
pop
mov
jb
jmp
mov
mov
mov
or
adc
or
loopne
loop
arpl
pop
push
lret
push
jg
loope
ret
cmp
je
call
movsb
jg
dec
popa
adc
call
leave
mov
mov
stc
je
mov
mov
jbe
test
mov
add
jp
sbb
jbe
les
decl
push
jmp
cmp
out
mov
leave
mov
insl
and
js
add
pushf
test
inc
add
stc
loopne
ret
inc
push
lret
mov
call
push
mov
xlat
xchg
mov
cs
pop
subl
pop
enter
push
push
mov
xor
xor
fnstsw
stos
pop
add
testl
out
dec
dec
cs
ss
push
cltd
loopne
call
lods
cs
stos
adc
and
stc
shl
sub
clc
lea
mov
jo
in
call
rol
push
pushf
sti
dec
jne
stos
pop
add
pop
stos
ds
add
addb
in
loop
inc
cmp
jb
mov
mov
fiaddl
add
add
push
pop
lahf
out
sbb
aam
lea
inc
arpl
rcl
dec
pusha
ljmp
or
movl
clc
push
push
lea
inc
rolb
incl
push
insb
xor
push
mov
pop
mov
push
mov
xchg
je
ja
loopne
daa
and
add
decl
in
mov
jecxz
pushl
decl
or
lea
fidivs
fdivrl
iret
pusha
cmpsb
cmp
les
fldl
aas
push
neg
in
and
mov
clc
pop
adc
jl
movl
adc
mov
fcmovu
mov
into
mov
inc
test
dec
mov
adc
mov
mov
and
push
jge
adc
push
push
jecxz
mov
sbb
adc
repnz
jl
jl
das
loope
mov
icebp
inc
mov
test
shlb
mov
sbb
call
push
add
popa
adc
mov
lods
aaa
cmpb
fmuls
rorb
add
push
fs
mov
push
inc
xlat
sub
test
negb
hlt
mov
shrb
inc
cmp
in
sbb
xor
mov
jne
cld
push
inc
fisubrl
add
add
or
push
shl
cmp
fadd
push
outsb
sbb
fdivrl
mov
add
pop
frstor
decl
pop
add
jne
or
cmp
imul
je
mov
data16
and
add
add
lds
movsb
mov
inc
dec
jge
jb
ja
pop
rcrb
ljmp
int3
punpckhdq
aad
insl
mov
incl
hlt
push
mov
js
mov
imul
cld
rolb
add
push
cmpb
push
pop
push
or
dec
test
or
ss
scas
or
out
add
adc
ja
ja
mov
lahf
fcomps
push
out
outsl
je
jl
sbb
cli
jle
xor
call
jnp
sti
adc
ss
call
xor
add
and
std
dec
jmp
loope
or
scas
mov
addb
dec
ds
stos
daa
mov
mov
sbb
lea
pop
incl
xchg
mov
xchg
idivb
add
movsb
fcmovnb
ja
jb
shr
push
ret
test
jne
jo
nop
not
pop
mov
xlat
aas
out
adc
push
push
out
jle,pt
int3
rorb
pushl
dec
jb
cmc
mov
decl
sub
fs
mov
push
sarb
cmp
jle
mov
dec
scas
test
adc
fmuls
adc
or
pop
push
scas
jl
dec
lock
ret
add
cmp
mov
divb
stos
mov
pop
movsl
pop
out
subl
flds
shlb
xor
jle
sbb
push
jbe
xchg
xchg
add
jmp
xor
inc
dec
mov
dec
idivb
stos
adc
xchg
packssdw
xor
clc
mov
cmp
sti
syscall
xadd
dec
add
mov
cmp
test
sbb
negb
cmp
lock
scas
adc
comiss
mov
xchg
outsb
mov
test
mov
into
sbb
add
push
pop
push
ret
mov
pop
jg
hlt
sbb
mov
das
inc
add
cmp
pop
movsb
xchg
in
mov
sbb
fs
jge
push
repz
push
enter
push
xlat
fsubr
push
movsb
jecxz
xor
movsb
outsl
add
mov
cmpsb
push
sub
pop
cmp
popa
ds
addr16
jbe
ret
mov
add
sub
fcom
mov
pop
popf
repz
cwtl
pop
mov
mov
inc
or
jmp
mov
cmp
inc
or
sub
push
outsb
cmp
pusha
inc
push
sahf
into
mov
movsb
lock
add
jle
mov
jecxz
mov
repz
pop
push
pop
fimuls
cmp
lea
mov
enter
shlb
mov
cs
push
pop
mov
push
xchg
push
fiadds
inc
cli
push
xchg
adc
and
jecxz
movsl
mov
mov
xchg
rolb
inc
cmc
pop
fwait
sub
jbe
sarb
std
pop
jp
testb
add
fidivrs
sbbl
aad
call
cld
or
mov
ja
cs
add
xor
jae
mov
lods
xor
add
push
add
movsl
sarl
into
and
add
addr16
adcl
inc
adc
cmpsl
roll
and
adc
push
out
sti
cmp
icebp
mov
call
mov
push
fcmovnu
inc
sti
push
add
cmpsl
push
jne
pop
xchg
lods
or
je
or
pop
pop
inc
sub
sbb
add
cmp
subl
push
jne
pop
sarb
or
das
sub
and
push
into
nop
std
jl
test
pop
xchg
ficompl
or
arpl
decl
sahf
push
mov
cmp
sbbl
cmp
adcl
fistl
push
push
adc
add
call
push
inc
or
mov
dec
sbb
xchg
push
sbb
mov
sub
xor
fwait
or
sub
pop
cmp
push
sti
ret
mov
in
cmp
mov
jl
push
inc
int
sub
pop
cmpsb
in
lock
fldcw
jne
pop
incb
or
repnz
decb
add
decl
mov
mov
lds
loope
inc
sub
and
add
push
sbb
lret
jmp
repnz
mov
pushf
sbb
cmp
jge
pop
rcrb
ficoml
or
adc
rol
push
push
mov
mov
pop
mov
and
call
add
repz
jg
out
out
sub
cmp
push
cmpsl
test
inc
xor
or
push
push
jbe
add
inc
push
adc
ret
clc
mov
ret
jne
inc
int3
je
jg
add
pop
pusha
aas
inc
xchg
or
or
mov
andl
sub
icebp
fbstp
xor
mov
mov
rorb
dec
sbb
lods
call
test
mov
xor
push
daa
lock
cmovs
leave
dec
sub
scas
aaa
add
rclb
or
push
es
mov
ss
fildl
repnz
lret
scas
lret
mov
pusha
sbb
sarb
lock
cmp
adc
add
ret
sub
sbb
stos
adc
scas
fiaddl
and
pop
sbbb
xchg
inc
inc
add
insl
rcl
sbb
sbb
add
clc
cmp
mov
bnd
jmp
adc
add
jb
jmp
cmp
in
sub
cld
push
jne
jmp
fmuls
sub
movsb
int
add
in
inc
mov
das
xchg
cld
dec
or
xchg
xchg
lret
pop
or
scas
or
push
dec
and
scas
xor
dec
sbb
daa
xchg
imul
push
adc
jno
daa
dec
or
fdivl
dec
out
pushf
sub
into
mov
fbld
stos
clc
mov
dec
lds
inc
loopne
movsl
fidivrs
cmp
fisubrs
cmp
sbbb
inc
rcll
clc
cmp
or
adc
mov
mov
adcb
repnz
lock
dec
call
lock
push
ljmp
cmp
addl
lods
cltd
dec
mov
inc
into
xchg
inc
xchg
lcall
call
cs
sub
mov
push
push
push
adc
in
ss
flds
sarb
cs
orl
lods
sub
sub
jge
jb
ja
mov
outsb
cld
lea
je
adc
xor
lahf
test
es
pop
aam
sub
jne
mov
inc
mov
call
mov
cmc
enter
leave
sbb
lea
cmc
lret
xor
loop
dec
aaa
mov
adc
mov
sahf
sub
mov
rcll
cs
pop
jmp
push
andb
push
call
mov
sbb
mov
mov
fiadds
inc
xchg
sahf
fdivr
dec
outsb
hlt
scas
push
jl
cmp
mov
pop
sbb
faddl
out
and
outsb
adc
cmp
xorl
cmp
movsb
dec
cmp
push
rol
xor
dec
jecxz
push
roll
cs
mov
push
add
les
jo
inc
std
pushfw
xchg
lret
cs
icebp
rorb
mov
es
cld
int
data16
scas
xor
lea
sub
or
movsl
pop
hlt
dec
and
cld
aad
mov
add
push
cmp
mov
pop
push
push
adc
pusha
lock
test
add
dec
lock
sbb
push
pop
push
cmp
inc
movb
add
add
jbe
fdivs
stos
push
dec
mov
mov
adcl
push
jne
int3
mov
cmp
add
scas
push
fsubr
sub
fcoms
gs
sub
cmp
push
mov
inc
aaa
decl
mov
add
fcomps
pop
cmp
jbe
ret
fnstsw
mov
hlt
push
addb
cmpsb
call
push
jg
add
add
inc
ss
adc
test
or
mov
pop
je
cld
jle
lds
pop
jg
hlt
or
mov
mov
int3
add
inc
adc
or
xchg
ja
roll
xchg
out
push
and
xchg
push
push
add
add
scas
cld
push
in
test
faddl
lds
or
pop
inc
scas
notb
cwtl
inc
jp
cmp
add
out
add
pop
mov
dec
ffree
xchg
aam
sbb
cmpsb
sub
aaa
out
cld
repz
mov
insl
shr
jbe
cmpsl
popf
mov
push
jnp
pop
pop
int3
mov
cmpsl
jns
dec
pop
pop
fwait
push
imul
loopne
in
rcll
mov
aaa
mov
cs
outsl
push
pop
jle
cmp
adc
push
cmp
sahf
lock
jle
mov
lsl
mov
cmp
push
dec
rcrb
in
or
es
js
test
sub
pop
mov
jecxz
jne
je
xorb
xchg
mov
jne
mov
and
xchg
les
dec
mov
xchg
sub
out
push
hlt
push
insl
jp
outsb
add
or
add
repnz
xor
cli
lret
inc
mov
lcall
sub
mov
push
sub
notb
sub
dec
mov
lcall
shll
dec
dec
xor
push
fcomps
in
mov
orl
out
xchg
push
inc
aas
add
aas
mov
inc
mov
es
repz
mov
lcall
aas
or
aaa
jne
mov
mov
ss
jb
xor
inc
adc
add
in
scas
jge
scas
in
jl
push
xorl
adc
push
jmp
dec
imul
in
mov
and
mov
inc
mov
insl
sbb
jl
mov
xchg
add
xor
push
test
xchg
nop
test
mov
ss
cld
stos
mov
sub
bound
rorb
sub
lods
mov
push
or
inc
push
or
test
adc
adc
cli
call
addl
jecxz
mov
bound
mov
xor
int
fwait
mov
scas
mov
sub
add
xor
xchg
push
mov
dec
pusha
andb
dec
enter
es
fdiv
in
aaa
and
lock
loope
movsl
test
pop
push
push
pop
and
or
test
int
shrl
loopne
enter
push
int
cltd
mov
mov
sbb
ss
pop
jle
inc
cmp
jle
lcall
in
mov
xchg
in
xchg
dec
pusha
xor
add
shr
data16
push
mov
add
adc
jp
jne
fcmovb
jg
fcom
data16
add
js
jbe
xchg
test
push
loopne
testl
call
cmc
jnp
mov
xchg
je
shll
das
mov
ja
push
add
add
call
fsubrp
fiadds
jl
inc
je
mov
or
mov
fmull
mov
jmp
repz
pop
mov
pusha
into
mov
shrb
lods
call
push
mov
movsb
mov
sub
dec
inc
sarl
adc
clc
xchg
ss
mov
and
push
push
int3
lods
jl
jno
xchg
or
add
adc
cmp
je
pop
lea
ljmp
fnsave
and
xor
inc
lock
push
aas
cltd
movsb
sbb
pop
sbbb
loope
mov
mov
clc
lret
jo
jo
pop
or
rol
xor
nop
jb
divb
jnp
jge
push
inc
jge
cmp
mov
add
mov
cmp
mov
repnz
lret
cld
cmp
xchg
test
sahf
push
jle
xchg
es
mov
mov
shl
inc
add
lcall
aad
lock
lcall
aam
mov
adc
call
lcall
std
inc
rcrl
int
inc
es
add
sbb
stos
clc
dec
cmc
cli
mov
mov
dec
and
shlb
push
sti
call
adc
sbb
dec
scas
pop
push
adc
pop
adc
lret
adc
or
loope
loope
inc
les
rclb
ljmp
es
in
andb
shlb
in
push
mov
scas
adc
aam
push
inc
or
fdivl
pop
cs
dec
sbb
int
scas
adc
je
test
mov
loopne
insl
mov
cli
int3
idivb
sub
daa
xor
sarb
test
sub
and
fwait
adc
adc
push
mov
push
in
cmp
mov
cmp
push
pop
insl
stos
das
push
add
or
or
xorb
lcall
push
hlt
movsb
sub
and
clc
repnz
xchg
sub
dec
ljmp
mov
loope
mov
popf
inc
mov
jmp
fisubl
sub
je
jns
mov
push
mov
fucom
orb
or
jne
sub
sub
inc
add
enter
or
sarb
push
clc
mov
jmp
push
push
enter
mov
xor
sub
add
mov
inc
jge
out
push
push
add
aam
stos
add
ds
push
mov
in
sahf
cmpsb
push
add
pop
aaa
test
jle
cli
inc
mov
ja
loope
shll
jnp
sbb
xchg
ds
cmp
je
cld
dec
insb
in
fsubl
ljmp
clc
jmp
movsb
pop
and
gs
in
ret
mov
sbb
pop
mov
and
mov
insb
mov
push
call
xor
int3
dec
call
and
dec
popa
addl
pop
mov
jne
xor
cmp
xor
fimuls
repnz
inc
add
and
inc
iret
fidivrs
jb,pt
je
jle
in
pop
mov
add
jg
add
bnd
mov
mov
inc
hlt
pop
mov
cmp
adc
insb
ss
int
pop
ja
lret
sti
jne
jge
add
jae
mov
mov
mov
or
xchg
cmpsb
or
inc
jl
jmp
movsb
mov
dec
push
lea
sub
push
add
je
rcr
clc
cmp
es
mov
add
fcmovb
repz
adc
cld
imul
xchg
outsb
sub
push
add
sbb
cltd
inc
cmp
mov
mov
mov
push
enter
xchg
pusha
pop
int3
icebp
es
lock
jbe
cld
divb
hlt
push
stos
enter
add
mov
insl
xor
inc
je
push
lock
xor
inc
cld
movsb
aam
rolb
push
testl
scas
mov
movsl
xchg
rorb
js
cmp
push
jne
subl
data16
minps
cmpsb
hlt
pop
or
add
pop
lea
scas
fdivs
mov
test
mov
pop
pop
add
push
scas
cvtps2pd
xchg
xor
out
jg
add
sahf
inc
push
aad
mov
jne
mov
inc
and
ret
outsb
mov
cmc
add
add
add
rorb
jmp
shlb
cmpsb
lds
and
out
add
cwtl
adc
ja
cmp
jbe
jmp
pushf
je
xchg
mov
xchg
ds
cmp
jae
push
sub
cld
icebp
mov
jne
mov
cltd
cmp
mov
movsb
mov
jb
cmp
xor
into
jmp
add
ss
fistpll
mov
js
sub
mov
roll
or
lock
cmp
jae
ja
aam
sahf
out
pop
jbe
mov
in
add
fmull
inc
shr
or
das
inc
xchg
shrb
jg
ljmp
inc
cld
mov
or
inc
add
mov
in
decb
add
mov
or
mov
jle
insb
fcompl
mov
inc
ret
mov
xchg
in
ds
jbe
add
lock
jp
pushf
add
push
mov
dec
fbstp
cmp
fmull
dec
or
pop
fwait
mov
out
mov
ljmp
dec
je
mov
and
push
adc
sbb
sub
das
push
mov
pop
xchg
cli
push
sub
sub
mov
cli
and
test
jbe
pop
jnp
fcmove
jl
stos
aam
sub
push
call
or
push
mov
int3
jb
xor
cmpsb
pop
rcrb
je
int3
jmp
jl
xor
stos
lock
rclb
pusha
pop
jmp
addl
mov
es
jl
sbb
pop
push
test
pop
imul
cmp
insl
mov
mov
rorb
clc
bound
and
add
cmp
shr
add
into
aad
nop
add
hlt
mov
xchg
mov
add
cmpsl
lahf
sub
inc
out
popa
cltd
imul
or
inc
mov
xchg
in
iret
rcl
enter
push
or
cmc
xchg
push
push
mov
push
push
loop
test
sub
push
inc
add
push
adc
xor
push
push
call
and
std
insb
or
adc
push
add
lods
push
mov
inc
mov
mov
das
mov
test
call
filds
pop
fisttps
movb
sub
icebp
or
sbb
cltd
mov
push
movsb
push
inc
push
jl
adc
movl
mov
loopne
sub
pushf
sbb
and
push
loopne
fstpl
xor
sbb
aad
filds
xor
ljmp
dec
push
aam
pop
call
out
xlat
or
mov
adc
or
add
testb
lret
jp
dec
cmp
add
pop
scas
or
and
adc
push
push
xchg
push
mov
xchg
out
mov
addb
mov
add
add
push
pop
stos
outsb
mov
dec
stos
jbe
pushf
mov
cmp
sbb
jl
push
pop
sar
jb
call
fdivl
xchg
push
inc
push
cld
and
inc
sub
lcall
ret
je
shr
or
mov
and
loop
hlt
lret
addr16
add
aam
pop
cmpsl
push
aam
cmc
in
add
and
pusha
mov
mov
test
fwait
movsl
data16
mov
lods
loope
pop
sub
insl
lret
incl
or
ja
or
pop
xlat
mov
das
out
pop
scas
lea
scas
mov
mov
mov
fdivl
sub
xor
pop
push
push
int3
mov
sub
mov
call
xor
in
dec
call
loopne
or
std
jle
into
in
pop
mov
pop
je
mov
xor
inc
push
in
mov
sub
fmulp
out
adc
aam
sbb
sarb
test
or
push
or
imull
orl
jne
pusha
xor
call
cs
push
dec
lock
inc
or
add
ss
lds
das
inc
testl
scas
push
add
push
movw
or
das
pop
inc
ja
inc
push
fsts
cs
ficoml
out
sub
pop
xchg
and
repnz
adc
jmp
jge
mov
jnp
push
pop
les
ds
push
in
push
pusha
pusha
or
cld
arpl
cmc
wrmsr
hlt
sahf
mov
test
and
mov
aam
or
outsl
mov
mov
and
or
or
outsb
inc
mov
inc
fists
aaa
or
rcrb
mov
pop
outsl
negb
or
push
pushf
call
add
adc
cmp
pop
and
sub
xor
cmp
lock
xchg
sahf
push
dec
sub
mov
orl
add
add
push
lea
or
add
adc
xchg
xchg
and
lcall
mov
cmp
add
push
loopne
insb
xchg
clc
mov
inc
push
nop
add
push
mov
test
mov
add
dec
cli
out
fcomps
lock
add
out
adc
cmp
sbb
push
out
inc
jno
imul
adc
nop
mov
mov
dec
pop
lea
lret
mov
stos
xor
mov
jle
jbe
add
das
or
or
leave
shl
ret
lock
add
aaa
mov
pop
adc
mov
iret
mov
adc
cltd
add
loop
or
add
fwait
mov
inc
xchg
xchg
adc
pop
or
jb
sbb
push
mov
pop
sub
xchg
xor
inc
movsl
and
notb
xor
jnp
push
loope
or
fldl
scas
rol
test
es
insb
fcomp
icebp
jl
jle
add
mov
add
addb
sub
mov
scas
cmpsb
mov
xchg
push
push
fcompl
outsl
lea
incb
dec
sti
push
xchg
js
or
and
jne
pusha
mov
cmp
mov
fiaddl
data16
imulb
rol
adc
inc
push
loop
sub
pop
pop
adc
les
cld
sub
hlt
sub
orb
les
pop
adc
orb
sub
into
add
or
les
roll
push
xchg
scas
movsb
fisubrs
fsts
data16
mov
ljmp
add
inc
adc
ds
js
xor
push
jne
data16
ja
push
je
add
daa
mov
rolb
mov
loop
aaa
fldcw
sub
leave
cmp
xchg
shll
sbb
or
lock
adc
ds
and
or
hlt
icebp
mov
jl
cld
out
jbe
add
loop
cmp
out
enter
rorl
xor
dec
adc
outsb
inc
bound
push
hlt
and
or
mov
aam
fsubl
add
je
pop
imul
pusha
cld
rorb
loopne
rorb
idivb
xchg
push
xorl
push
negb
clc
xchg
addl
pushl
loopne
outsl
clc
lea
mov
inc
lock
repz
js
outsl
adc
push
ret
pop
out
add
loope
jg
int3
jge
push
mov
push
pop
lret
fisttpl
sub
and
push
jge
es
add
and
xchg
and
dec
adc
add
sbb
mov
xchg
push
enter
cmp
stos
fsubr
cs
scas
adc
push
and
jmp
dec
adc
jb
sub
pop
cmp
rcrb
pop
xor
roll
sub
cmpb
add
adc
sub
push
and
cmp
ror
inc
sub
aam
or
jne
sub
mov
inc
cmpl
sub
ret
ljmp
add
imul
dec
cmpsb
aaa
fcmovb
xchg
or
sub
decl
cld
or
push
sbb
loop
push
add
test
xchg
sbb
sub
add
and
test
roll
in
lcall
inc
sub
mov
in
arpl
add
adc
jbe
je
inc
mov
add
inc
mov
test
mov
pop
shl
jb
pusha
inc
xor
das
mov
loope
jns
pusha
pop
loop
movsb
outsl
nop
in
xor
or
add
inc
and
cmp
xchg
add
jae
loop
out
in
data16
and
aaa
mov
and
push
enter
out
clc
and
jo
xchg
loope
add
push
and
hlt
test
je
mov
fdivrl
cmp
mov
and
ljmp
dec
or
dec
dec
lea
inc
dec
mov
add
into
loopne
mov
clc
or
or
bnd
dec
inc
push
push
jge
into
or
push
xchg
xchg
mov
rorl
push
test
test
call
mov
mov
jae
call
jecxz
sbb
incl
pusha
push
jecxz
sub
in
and
sub
inc
mov
jnp
loope
or
jle
add
mov
jne
pop
addb
je
pusha
aas
adc
or
inc
mov
jg
jge
sub
mov
mov
mov
outsb
es
inc
adc
adc
ret
mov
sbb
push
jb
je
out
jmp
inc
jle
std
call
insb
add
pop
xchg
cmpb
cmc
loopne
jmp
je
add
dec
pusha
stos
jmp
xor
mov
sub
rclb
clc
cmp
add
mov
xor
int3
sarb
jmp
cmp
loopne
sarb
add
push
xor
cmpb
jl,pt
push
cmp
jg
mov
imul
add
sub
test
es
mov
and
jge
pop
loopne
add
jl
loopne
jmp
divb
aas
popa
inc
mov
xchg
sub
cmp
pop
add
xor
fwait
insb
and
insl
loopne
addl
jmp
mov
subl
stos
loopne
jbe
mov
add
push
adc
aas
add
adc
pushf
jne
std
es
mov
xor
add
imul
pushf
lea
insl
pop
mov
fadds
push
gs
pop
fdivl
loop
js
add
xor
adcl
push
mov
inc
dec
call
lret
mov
shlb
pop
adc
push
pop
mov
jns
loopne
add
cmp
adc
andl
popa
cmpsb
pop
cmp
adc
mov
fwait
popa
rcr
sbb
sub
mov
mov
mov
jbe
add
add
add
sbb
cmp
loopne
fsubl
mov
add
sub
loope
dec
mov
or
sub
xchg
ret
mov
mov
add
push
popa
pop
push
add
ud2
xchg
pop
xor
jp
sbb
jg
jl
add
adc
mov
stc
mov
xor
jb
add
loopne
sti
loopne
sub
insl
pusha
jmp
ret
inc
pop
inc
xchg
loope
clc
repz
cmp
add
enter
popf
call
sbb
scas
push
jecxz
in
adc
pusha
pop
decl
pop
add
sub
aaa
out
arpl
sub
mov
xor
push
or
mov
subl
jb
mov
adc
incl
jo
and
push
adc
xor
push
insl
jg
mov
sub
mov
mov
rorl
mov
test
rorb
jecxz
sbb
or
inc
je
ret
jp
push
jmp
dec
rorb
mov
adc
popf
les
jge
cmp
mov
pushf
and
xor
xchg
jle
cmpsb
add
dec
adcb
and
sub
push
call
cmpsb
nop
inc
jmp
add
mov
out
push
insb
decl
pop
xor
and
and
cs
clc
and
into
sbbb
aam
xor
jbe
cmp
fsubrl
xor
addb
outsl
sbb
xchg
add
push
shr
outsb
add
xchg
mov
push
pop
inc
add
inc
ret
xorb
adc
test
ss
push
lcall
mov
sub
cmpsl
bound
les
and
add
sub
add
sub
sti
xor
add
mov
mov
aaa
adc
call
outsl
nop
dec
mov
lahf
mov
call
inc
inc
pop
rolb
mov
mov
mov
leave
jo
inc
jno
dec
orb
jg
mov
lea
imul
push
mov
xchg
cs
fdivr
pop
js
leave
cmp
mov
scas
loop
ret
inc
adc
jo
or
fildl
loopne
add
inc
push
adc
rorb
test
adc
in
mov
lods
add
pop
jno
mov
or
loop
add
xor
testb
inc
mov
xor
add
push
rclb
adc
xor
adc
xor
rolb
adc
mov
mov
push
pop
mov
hlt
and
push
pop
push
dec
mov
subb
jg
ljmp
call
inc
jo
xorb
imul
xor
insb
out
orl
je
dec
jne
add
adc
and
mov
scas
mov
cltd
push
push
icebp
jg
jne
push
ss
mov
or
add
dec
pop
inc
jo
mov
idivl
fwait
xor
dec
mov
call
adc
and
cmp
loope
xchg
loope
xor
add
or
div
pop
mulb
or
push
adc
add
inc
lock
xor
inc
mov
mov
dec
pop
sub
sbb
push
hlt
add
add
push
outsb
sbb
popa
inc
and
push
out
imul
pop
mov
rorl
ret
bound
xor
adc
or
call
mov
sbb
cli
mov
mov
add
push
cld
adc
pushf
addl
pushl
adc
or
mov
inc
sbb
dec
adc
clc
xor
adc
push
or
inc
lock
bound
dec
push
adcb
add
fwait
and
xor
subb
pushf
xchg
lret
cmp
or
push
push
push
or
push
jo
xor
shrb
lret
loopne
leave
pop
in
mov
lock
sbb
lock
fdivl
lds
mov
lret
sbb
adc
inc
cld
and
jo
decl
lock
pusha
and
pop
shl
pop
push
pop
xor
and
popf
shlb
dec
dec
outsb
adc
pop
mov
lock
xlat
aad
mov
or
add
int3
lret
call
jmp
stos
cld
insb
sti
fcmovne
sub
cmp
lret
stos
adc
push
adc
ret
push
loopne
outsl
adc
ljmp
dec
icebp
xor
xor
pushl
sbb
jo
icebp
mov
jno
push
cmc
add
jnp
ret
inc
test
cmp
jb
jo,pt
push
and
pop
sahf
xchg
cmpsb
decl
pop
scas
lea
addl
jnp
cwtl
xchg
dec
add
mov
jbe
xor
mov
sbb
or
jge
lret
inc
test
stc
jbe
add
xor
pop
jp
add
push
push
mov
ficoms
cmpsb
mov
mov
dec
push
sti
lcall
idiv
push
sbb
dec
mov
mov
push
ret
mov
xor
xor
les
jne
cmp
jmp
repnz
clc
and
ljmp
xchg
xchg
push
lret
fdivs
sbb
adc
repz
add
dec
inc
cs
das
add
add
lahf
mov
cs
jbe
hlt
cmp
adc
add
push
mov
dec
jne
or
adc
jo
nop
jp
jge
inc
mov
cld
add
add
dec
push
adc
popa
sub
insb
add
push
call
fmuls
mov
pop
dec
andb
push
push
xchg
bound
out
mov
clc
out
push
pop
mov
jl
lock
xchg
push
dec
cli
add
xor
popa
xchg
test
fstpt
add
push
lods
pop
and
mov
xor
lods
cld
lea
or
clc
lock
push
adc
imul
and
mov
mov
nop
bnd
cmc
lock
xor
push
movsl
add
add
dec
push
mov
lret
sbb
or
adc
fcoml
popf
push
cmp
jbe
or
xlat
add
jl
add
pop
je
mov
js
enter
jbe
add
mov
mov
insb
nop
shlb
insb
cmp
pop
push
push
sbb
inc
sbb
les
adc
adc
jmp
and
iret
xchg
or
fdivs
sarb
sbb
jo
xchg
shrb
add
mov
int3
mov
cmp
nop
xchg
mov
add
sub
or
xor
sbb
jb
test
mov
mov
xchg
xchg
mov
sbb
add
inc
hlt
xlat
inc
lds
aam
adc
and
clc
push
mov
fs
gs
adc
fdivs
addl
pop
jo
mov
and
and
sbb
mov
insb
hlt
jae
xor
scas
dec
xor
inc
loope
adc
mov
call
adc
xor
jo
les
push
or
fdivs
fadd
add
shlb
jp
adc
push
jo
adc
mov
xchg
aaa
push
orl
call
cmp
sub
mov
nop
pop
fcomps
xor
orb
xorl
inc
jb
jl
xchg
add
shlb
lcall
add
jle
enter
push
xor
sarl
mov
ja
test
cmp
aaa
inc
add
dec
add
pop
jmp
mov
int3
mov
mov
adc
mov
sbb
cmp
popf
pusha
push
inc
sti
call
fsubs
jl
cwtl
ret
mov
enter
add
or
lea
nop
leave
push
test
mov
incb
mov
imul
add
cmp
add
pushl
inc
jl
testl
test
add
mov
pop
sbb
push
jb
data16
and
add
cmp
or
aas
dec
pop
cmp
rcll
xor
notl
jg
andl
push
and
dec
sbb
or
fsts
sbbb
inc
int3
ret
and
rolb
and
pop
add
out
std
cmp
mov
or
orb
sbb
outsb
push
cs
xchg
xchg
push
mov
mov
push
xorb
push
xchg
mov
pop
fstpl
or
jle
inc
xor
jno
mov
mov
test
ficompl
mov
sub
or
ret
push
and
mov
sbb
icebp
xor
mov
ret
pop
mov
dec
or
testl
nop
and
orb
ja
nop
rcrb
pusha
sub
add
cli
add
jb
mov
pop
test
inc
pop
testb
add
rorb
add
lds
shlb
add
inc
cltd
or
adc
call
or
push
iret
shr
push
add
dec
out
sbb
add
or
lods
dec
sub
notb
xor
sub
inc
movsb
mov
aaa
rorb
and
dec
adcl
lret
add
jae
add
jo
mov
and
dec
lcall
sarl
or
inc
adc
dec
adc
xorl
sub
push
mov
testl
enter
xor
ja
ds
xchg
and
push
jb
xor
jnp
mov
xchg
jl
iret
push
cwtl
aad
mov
ds
xor
sub
sub
xor
sar
data16
das
inc
sub
rorb
xchg
mov
roll
call
xchg
or
adc
inc
hlt
mov
inc
xchg
inc
adc
lcall
shlb
sbb
mov
lret
repnz
insb
imul
adcb
pop
enter
int
andb
in
rol
cmp
roll
dec
stos
in
cwtl
xor
mov
call
jb
dec
cmp
sbb
push
dec
xchg
lods
mov
std
mov
inc
rol
sar
dec
dec
mov
mov
or
xor
jne
mov
call
insb
and
push
pusha
xor
fs
imul
xchg
cmc
sub
or
push
mov
in
or
mov
and
mov
mov
mov
mov
insl
mov
lea
inc
sbb
rorb
stos
dec
sbb
inc
adc
cmp
or
je
in
or
aam
xchg
jp
fdivrp
mov
jg
sub
shlb
sbb
push
cmp
jne
push
loop
testl
push
mull
add
sbb
test
mov
lea
test
push
stos
pusha
orl
push
ljmp
or
push
gs
pusha
jp
daa
lea
xor
pop
sub
mov
inc
fists
push
mov
push
sbb
xor
jmp
subb
popa
add
xor
push
and
cs
test
xchg
xor
add
mov
push
and
ss
ret
ds
and
testb
leave
pusha
insb
cs
adc
cwtl
mov
test
jp
out
sbb
hlt
mov
push
call
jne
sbb
and
loope
je
adc
fidivs
push
add
popa
mov
movsb
mov
rolb
push
sub
std
scas
push
adc
stos
and
pusha
jg
outsl
bound
or
pusha
cmp
push
icebp
aaa
and
pusha
and
mov
xchg
ret
jle
push
push
test
push
cwtl
jo
dec
jo
je
insb
dec
mov
stos
add
push
xchg
nop
or
sbb
or
mov
push
mov
std
push
pop
outsl
add
hlt
rcll
pop
or
adc
lods
pop
lea
jmp
mov
pop
fstpt
mov
lock
sub
push
mov
dec
ds
fwait
sub
movsb
in
jp
dec
or
push
mov
and
pusha
mov
imul
sub
sbb
lahf
mul
adc
movsb
mov
insb
sub
push
test
add
das
test
stc
push
into
or
sbb
pop
fcomps
clc
andb
mov
xor
bound
add
rdmsr
mov
mov
lods
loopne
pop
xchg
mov
jmp
out
xchg
inc
adc
ds
xor
inc
adc
jg
add
mov
push
jbe
pop
push
je
or
shlb
push
ficompl
movsb
sbb
jle
mov
inc
movb
outsl
jg
push
neg
add
shlb
pop
push
shl
inc
push
notb
adc
call
mov
roll
sahf
in
clc
xor
call
pop
inc
xchg
mov
ret
loopne
adc
ret
bound
pop
fdivl
or
push
push
aas
push
xchg
jmp
sbb
add
addl
and
mov
pusha
jae
rolb
and
into
sarl
mov
pop
aam
jb
call
sub
rorb
repnz
loope
add
add
fadd
neg
lods
sbb
add
fmul
push
push
mov
orb
lock
mov
or
hlt
mov
je
ss
mov
and
lods
test
sub
insb
xor
rorb
push
sbbb
jo
push
scas
es
add
in
lock
add
outsl
mov
xchg
shl
andl
dec
lret
inc
idiv
outsl
test
cwtl
cmpsl
loope
jne
orl
pop
jp
mov
xor
push
psubsb
mov
ret
or
lea
mov
movsl
add
jp
and
mov
mov
movsb
cmp
xchg
cmp
jo
outsl
pop
jbe
mov
jl
jb
call
jbe
add
mov
jle
dec
mov
push
es
jp
push
add
mov
inc
mov
sub
ret
jge
movsb
add
jle
adc
fwait
pop
or
add
or
inc
xor
push
pop
mov
pusha
add
dec
mov
add
sub
mov
es
xor
lcall
sub
inc
push
jl
cld
cmp
sub
push
jo
repz
mov
xor
adc
pop
push
and
jl
dec
call
imul
cmpl
shlb
out
mov
lods
enter
jl
jmp
jo
adc
sbb
pushf
in
mov
add
or
mov
clc
mov
and
xorl
pop
loop
adc
mov
or
mov
mov
add
hlt
mov
movl
jg
inc
add
xchg
sub
shrb
dec
pushf
adc
inc
mov
push
add
or
or
sbb
cmp
push
call
fwait
and
or
add
lcall
lfs
mov
sahf
sbb
pop
inc
add
or
inc
clc
pop
and
call
pop
das
clc
inc
jmp
jo
inc
or
xor
sub
and
inc
push
incl
add
pop
jo
pushl
xor
call
aaa
xor
inc
sub
idivb
adcl
pushl
call
inc
jecxz
clc
push
sub
xchg
lock
push
outsb
push
fisubrs
jo
call
test
xor
ret
subl
mov
jg
lret
loopne
mov
jmp
cmp
movsl
adc
mov
jle
or
or
add
fs
call
and
xchg
pop
loope
mov
pop
mov
push
add
pop
cmp
test
mov
xchg
fsubr
xor
lcall
cmp
xor
jne
pop
mov
push
dec
ljmp
push
cld
or
mov
jo
jne
je
adc
outsl
andb
or
jne
jl
pusha
test
out
or
inc
lock
push
or
lea
mov
rolb
jmp
add
cmpb
push
mov
mov
cwtl
repz
add
loopne
je
insb
mov
pop
je
test
push
push
movsl
jg
add
mov
mov
mov
inc
lock
pushf
pushf
adc
and
sub
lcall
shlb
in
adc
dec
lea
or
mov
push
jmp
rolb
sub
jl
and
sbb
mov
incb
cld
decl
rolb
cmp
dec
not
faddl
dec
mov
or
scas
hlt
hlt
dec
or
lock
adc
add
mov
addb
and
xchg
pop
and
mov
adc
mov
xor
adc
aas
cmpsb
das
mov
push
push
mov
push
idiv
mov
je
lock
mov
mov
lock
pop
push
icebp
les
std
cmp
sbb
add
addr16
push
push
outsb
add
sub
pop
pop
jne
jl
and
mov
push
and
mov
push
lret
pop
movsb
outsb
clc
push
lods
shl
dec
and
es
jb
popa
loop
add
out
adc
inc
call
push
mov
adc
push
andb
push
cmp
lahf
sub
xor
lock
clc
xchg
cmp
mov
push
and
xchg
push
ljmp
mov
pop
fs
repnz
sub
sub
dec
adc
into
clc
push
push
adc
andb
das
push
jbe
lock
sbb
lea
lock
mov
andb
add
push
sub
xorb
xchg
sub
repnz
add
inc
cs
and
adc
inc
cmp
adc
int
mov
cmp
mov
call
inc
sahf
mov
cmp
adc
lock
pushl
add
clc
imul
mov
shlb
bound
xchg
aam
cltd
call
push
cli
inc
mov
adc
dec
jo
out
and
jl
cmpsb
cli
xor
push
mov
mov
shrb
add
roll
dec
cli
out
ficomps
xor
inc
mov
pushl
fldt
inc
inc
mov
fwait
in
push
jno
add
xor
and
inc
ret
outsl
pop
test
add
mov
or
call
std
push
sahf
add
push
pop
pop
call
push
cmpsl
outsb
or
jb
xchg
pusha
and
test
push
mov
es
pusha
pop
pop
lock
adc
in
loopne
mov
cwtl
mov
sub
test
fwait
inc
punpcklbw
out
add
insb
icebp
jne
dec
ljmp
jl
or
test
cmpb
adcb
incb
lods
jmp
inc
jbe
jmp
cmp
xor
fstpt
jb
mov
jl
add
jle
andl
insl
movsb
icebp
iret
cmp
push
fcomps
sbbl
adc
rclb
nop
adc
cltd
inc
lods
imul
add
inc
adc
add
test
xchg
xchg
and
add
adc
inc
sbbb
bnd
and
lock
incl
pop
xor
aas
addl
outsl
in
lods
jne
sbb
daa
mov
and
adc
mov
sbb
lcall
jmp
inc
mov
setne
and
add
orb
jp
jbe
jle
or
bnd
mov
mov
mov
cmp
mov
add
xorb
cwtl
or
shlb
aaa
cmp
mov
dec
jne
jbe
call
push
inc
inc
adc
es
fldl2e
inc
aaa
orb
pusha
sbb
push
pop
mov
add
gs
cmp
negb
test
addb
lcall
in
and
add
adc
loopne
es
cmpb
mov
loopne
mov
stos
subb
dec
and
mov
add
out
jp
push
out
mov
dec
sbb
or
cmp
lret
dec
pop
push
add
jne
jp
sbb
fmull
inc
sahf
loopne
adc
or
dec
je
pushf
jp
in
pusha
adc
mov
pushf
dec
mov
add
outsl
call
mov
sti
jle
jb
add
add
jne
iret
add
ret
je
mov
adc
orb
add
lods
mov
add
adc
pop
add
arpl
out
cmp
sti
mov
jmp
add
repz
ljmp
add
mov
add
je
call
es
jbe
mov
push
add
popa
xchg
lock
rclb
cmp
imul
mov
pop
add
test
add
nop
fldcw
sub
addb
sbb
lret
add
sub
test
or
push
push
xchg
add
xor
rolb
push
add
jmp
xor
cmpl
rorb
or
ret
inc
jo
je
xchg
sbb
jne
loop
pushf
xchg
xchg
mov
and
mov
call
add
push
add
push
and
sbb
neg
outsb
jle
in
ret
push
and
or
sub
daa
push
in
dec
inc
jp
sub
cmpsb
dec
rolb
mov
adcb
subb
push
cmp
inc
idivb
lods
call
call
adc
loopne
push
fldt
inc
repz
idiv
push
addb
arpl
lods
mov
mov
adc
ret
imul
outsl
push
test
rcrb
add
int
push
inc
or
mov
mov
lea
nop
add
mov
push
cmpsb
xor
test
roll
pushl
dec
cmp
and
sub
aad
cmpb
or
movsl
jg
mov
clc
hlt
jmp
je
imul
fdivrp
cmc
mov
mov
imul
jle
mov
sbb
ret
mov
outsl
mov
je
add
pop
mov
shlb
ret
lret
je
push
jle
shlb
dec
cwtl
sub
push
inc
push
repnz
mov
sbbl
push
sub
inc
cmp
sbb
sub
test
rorb
mov
or
mov
adc
adc
sbb
sub
jne
ret
inc
cld
push
xchg
jmp
imul
je
out
mov
mov
or
fsub
mov
ljmp
lock
ds
fmuls
add
cmp
add
xor
add
jno
mov
or
cmp
mov
lds
dec
out
sarl
test
add
push
bnd
jb
fsubs
inc
ljmp
push
test
adc
test
sarb
mov
push
mov
xchg
pop
jmp
clc
imulb
stos
js
adc
pop
aaa
mov
mov
test
mov
add
mov
or
pop
push
xor
push
pop
repz
adc
push
mov
sub
orb
add
add
pop
jbe
and
jo
add
add
call
leave
dec
xchg
outsl
adc
mov
adc
add
adc
mov
cmp
ja
mov
ret
cld
test
mov
mov
sub
xor
xchg
jl
aam
push
pop
pop
popa
pop
loope
push
sub
jg
mov
xchg
pusha
pop
fidivrs
adc
movsl
inc
ljmp
loope
add
pop
adc
mov
mov
and
ret
test
adc
lea
ss
pop
jae
repnz
add
push
mov
hlt
adc
sub
push
les
cmp
push
clc
lea
sbb
push
add
xor
jb
jne
mov
cmp
bound
pop
push
add
call
addr16
movsb
in
add
inc
jle
adc
push
fwait
cmp
loopne
push
sub
movsb
add
pop
imul
cmp
mov
fistl
in
xchg
int3
push
push
inc
call
loop
mov
adc
xorb
xchg
add
call
pop
cmpsb
pusha
jle
test
lods
pop
xchg
stc
loopne
inc
and
mov
mov
push
and
push
decl
or
lea
pusha
push
punpckhbw
adc
push
subb
orb
push
inc
loopne
shrb
jp
add
mov
xchg
std
hlt
adc
adc
xor
and
jbe
xor
push
lcall
sbb
clc
lea
push
test
in
clc
xchg
cmpsb
add
pop
stos
and
loop
jb
pushf
adc
cmc
ja
cld
pusha
sbb
loopne
loopne
repnz
adc
mov
and
cli
lock
mov
mov
add
xor
or
movsb
sbb
dec
dec
pusha
es
push
and
cld
pusha
xchg
call
adc
mov
push
pusha
push
push
data16
shrb
in
outsl
cli
leave
aam
jl
bound
adc
push
push
stos
mov
cmp
pushf
sahf
pop
adc
mov
js
push
inc
popa
test
adc
scas
mov
cli
mov
loopne
popa
mov
test
inc
xchg
cmpb
fcoml
hlt
xchg
stos
and
xchg
mov
fisubrs
lock
add
nop
jb
jge
pop
sti
mov
sbb
adc
or
stos
add
aam
pop
test
xor
pusha
xor
push
les
lahf
adc
xor
add
dec
inc
adc
stos
or
jbe
sbb
or
cmp
xor
sbb
xor
sarb
jecxz,pt
and
and
jb
test
or
mulb
insb
pop
adc
pushf
loopne
xor
sub
add
adc
lock
mov
addb
adcb
pop
jbe
fnstsw
xchg
jge
std
decl
loopne
mov
mov
pusha
cmp
xchg
add
cltd
popa
rcll
shrl
inc
in
insl
inc
sub
je
pusha
and
jp
mov
test
dec
and
test
cs
sub
popa
gs
sbb
or
lds
fistl
loop
popa
sbb
mov
or
jle
lea
or
pushf
add
inc
clc
pop
cmc
xor
lcall
add
jb
nop
fadds
jp
lret
stos
outsb
add
add
data16
scas
sbb
subb
pop
call
mov
adc
movsb
pushl
xchg
adc
outsb
jb
lock
xor
mov
add
jg
sti
call
je
add
fs
push
add
pop
movb
add
sbb
in
fs
sbb
inc
mov
incb
add
mov
divb
mov
mov
adc
sbb
loop
cli
xchg
inc
push
call
sub
shlb
cmp
call
test
enter
in
add
popa
jo
xor
movsl
xchg
fsts
lea
xor
outsb
std
lock
and
dec
lcall
jo
nop
aam
imul
push
addb
rcll
ret
mov
mov
xor
add
add
loop
or
ljmp
push
hlt
mov
lock
xor
daa
add
xor
lock
dec
lea
push
jo
push
xor
push
enter
push
sarb
add
xchg
jle
dec
sub
push
or
and
jp
mov
fiaddl
cmp
mov
pop
xchg
out
and
xchg
and
lock
daa
xchg
fwait
wrmsr
add
sbbl
adc
call
lea
test
es
xchg
add
lea
xchg
add
ret
mov
cmc
mov
in
loope
scas
aam
inc
pop
or
add
je
adc
push
rorb
sub
mov
dec
std
or
fdivl
or
loope
push
movsb
mov
push
push
jl
in
and
call
testl
dec
les
dec
testb
push
add
sub
pop
dec
adc
or
xchg
icebp
jmp
pop
or
je
jo
jg
shrb
dec
add
fdivr
into
cld
pop
test
or
mov
dec
pop
shrb
lods
je
mov
inc
cmp
mov
push
or
jne
je
or
mov
push
call
add
jle
add
push
sti
orb
sub
fbld
and
xor
dec
and
and
addb
popa
mov
popa
jge
xor
xchg
scas
xchg
ficomps
jbe
adc
int3
xchg
push
jne
add
movsb
rolb
mov
mov
mov
push
ret
inc
cmp
lods
jo
xor
mov
ret
outsl
mov
lock
cmp
adc
xchg
icebp
and
mov
cld
push
mov
add
test
scas
adc
jo
inc
jecxz
jae
cmp
dec
push
and
mov
mov
inc
rcl
lcall
loop
pop
cmc
xchg
movsl
call
adc
loopne
adc
sub
jbe
jb
mov
mov
in
jne
xor
enter
sub
xchg
pop
push
call
cld
es
mov
ret
xchg
pop
mov
pop
mov
and
movsl
and
xchg
add
or
aam
pusha
int3
fidivl
mov
lods
repnz
es
fdivr
push
sbb
or
mov
xor
andb
fildl
or
out
cmp
jbe
add
repz
pop
fiaddl
or
sahf
sub
stos
adc
or
adc
mov
and
mov
add
scas
jp
les
add
xor
fisubrl
mov
push
orb
lcall
inc
add
sti
push
adc
int
xor
jne
push
inc
std
mov
jo
jo
icebp
test
incb
add
enter
and
jno
stos
scas
and
addl
mov
mov
add
insb
and
sbbl
inc
mov
es
rolb
incl
or
jo
pop
pop
clc
mov
frstor
sub
inc
pusha
add
mov
pop
sub
mov
mov
enter
outsb
mov
push
call
lret
pop
jo
ret
lock
repz
cmpxchg
fcomps
incl
push
xor
dec
je
call
cli
jae
and
and
lea
mov
les
or
mov
rol
xchg
add
mov
add
push
clc
js
sub
cltd
pop
and
cmp
out
dec
cmovge
call
xchg
and
and
mov
insl
mov
loopne
mov
cmp
push
addb
add
mov
rclb
pop
ds
adc
cmpb
in
or
ret
int
jbe
add
je
out
testb
jo
call
leave
call
sub
mov
cmc
xchg
es
mov
hlt
dec
incl
add
xor
je
and
inc
pop
add
cs
out
push
sarb
or
mov
or
out
mov
sbb
inc
mov
in
imul
xchg
les
add
add
pushl
push
adc
and
add
xor
inc
and
jo
jg
pusha
mov
inc
add
and
lea
cmpl
adc
pop
add
cli
sub
lock
jmp
add
pop
sbb
ljmp
or
in
mov
xor
xor
push
les
out
ficompl
and
cli
mov
mov
aas
subb
ret
stos
test
fbld
dec
push
lahf
xor
xchg
xor
roll
xchg
jmp
mov
jo
push
mov
and
jle
jmp
sbb
es
xor
pop
xchg
ss
cmp
test
mov
enter
fs
test
mov
add
jg
jne
imul
call
mov
xor
push
jne
adc
sbb
mov
aas
push
push
xor
add
add
add
and
or
je
jle
je
jg
nop
je
in
into
or
xor
mov
or
mov
xchg
filds
or
ljmp
cs
add
pop
je
mov
add
pop
pop
fisttps
hlt
mov
cmp
addl
add
or
sub
jno
incl
cmp
cmp
inc
or
mov
call
jo
xlat
mov
add
roll
mov
ret
inc
sub
pop
xor
mov
sub
jg
or
inc
test
jp
cs
xchg
push
cmp
or
cmp
pop
jbe
sub
jnp
scas
adc
xchg
mov
pop
or
xchg
add
stos
and
aaa
or
cmpsb
into
jbe
or
lret
or
xor
roll
adc
mov
dec
pop
out
and
push
inc
js
jo
add
push
sbb
hlt
iret
push
scas
push
sbbb
mov
loope
xchg
xor
add
xchg
jbe
sbbb
gs
adc
and
lret
jle
aad
push
xchg
and
lea
jle
test
xchg
ds
mov
loope
das
and
call
cmp
pop
and
pop
add
mov
jle
fcmovbe
movsb
stos
in
dec
jo
xor
clc
fucomip
sub
jl
xrelease
jmp
test
jmp
out
int3
xor
rcrb
jnp
and
pop
adc
orl
scas
adc
or
cmpb
cltd
mov
push
je
adc
xchg
mov
loope
add
adc
push
insl
dec
sub
xchg
sti
mov
fsubrs
inc
mov
fwait
aam
aad
cli
test
data16
sahf
cmp
cmc
call
sub
ss
push
jb
sbb
sahf
nop
xor
aad
sahf
sub
dec
incl
cmc
incl
mov
andl
pop
into
je
adc
es
movl
adc
jge
or
outsl
pop
adc
sbb
mov
dec
sub
cmp
or
stc
pop
xor
icebp
addb
loopne
inc
or
add
xchg
pop
fmull
mov
push
into
in
ffree
fsts
pop
inc
adc
ficoml
stos
push
pop
ret
pop
sbb
call
mov
ret
adc
cmpsb
scas
sbb
call
jl
daa
test
pop
and
and
rol
push
adc
subb
xor
adcl
repnz
add
dec
adc
mov
push
fmull
aam
nop
clc
and
xor
insl
shrb
push
mov
or
mov
lcall
rcrb
addb
sbb
xchg
int
sbb
rclb
aam
xor
jo
sarb
rcll
pusha
inc
mov
mov
add
mov
decb
sbb
add
pop
and
inc
bound
rcrb
or
push
jb
pop
das
push
call
fcoms
movsb
repnz
sub
lcall
and
xor
add
push
xchg
xchg
aam
sub
pop
mov
jae
xchg
inc
add
sub
adc
sbb
jle
sub
ret
ret
sub
jp
cmp
xchg
xchg
adc
addb
or
mov
rclb
pop
push
sub
cmpsb
test
mov
sbbb
clc
test
mov
dec
mov
add
cli
dec
add
mov
push
mov
mov
add
clc
ret
test
ror
pop
lock
add
xchg
mov
push
ds
and
or
xchg
call
rcll
add
call
xor
xchg
and
push
dec
movswl
xchg
push
mov
push
shl
dec
shrb
add
ret
sub
stos
mov
mov
push
jbe
add
fstpt
pop
adc
inc
inc
or
sub
jbe
or
push
or
cwtl
mov
ljmp
testb
ret
inc
jne
ret
or
push
shlb
inc
adc
mov
andb
add
loopne
sahf
repz
jle
mov
insl
lods
or
mov
rcrb
or
sbb
push
mov
mov
loope
add
mov
into
xor
shr
or
inc
pop
xor
mov
loope
or
and
add
jg
imul
add
call
pusha
sbb
mov
cmpsb
push
frstor
jl
fs
mov
push
loopne
jo
add
and
call
pop
mov
jge
jbe
clc
in
xchg
add
mov
lret
xor
push
dec
lcall
or
incl
loop
call
addl
and
pop
cmp
sbb
clc
out
addb
and
or
sar
idiv
or
cld
cld
dec
push
and
loopne
add
bound
mov
testb
xchg
push
cmp
jle
loope
aas
imul
or
and
jnp
aaa
add
int3
js
hlt
cmove
ja
sub
fldt
inc
inc
enter
dec
or
sbb
loopne
clc
fiaddl
sub
push
jo
add
add
js
xchg
mov
dec
xchg
add
and
push
push
outsl
call
add
mov
inc
push
divb
xchg
jo
call
pusha
clc
mov
out
bound
xchg
adc
clc
mov
loop
add
std
pusha
cmp
addb
cld
mov
mov
in
adc
mov
popa
adc
insl
call
sbb
or
mov
or
es
and
sbb
xlat
xor
adc
mov
sub
adc
and
leave
adc
loopne
movsb
test
sub
and
nop
fs
jge
cs
xor
jg
ds
psubsb
in
pusha
pop
insb
add
clc
call
jbe
ret
testb
inc
mov
adc
add
insl
clc
aas
lods
inc
out
push
push
out
loopne
xor
xchg
xor
arpl
and
or
xchg
jo
sbb
neg
insl
push
jo
test
mov
inc
sbb
add
icebp
aam
arpl
mov
xlat
push
test
cld
fcmovnbe
mov
and
fs
xor
bound
pop
push
inc
shlb
ss
fcomps
or
xchg
int3
nop
xchg
sbb
daa
aad
test
pop
cmpsb
jmp
jmp
or
cmpsl
lea
mov
mov
loopne
loopne
xchg
in
jb
rclb
or
pop
lahf
decl
int3
or
dec
loope
mov
adc
loopne
push
sub
adc
je
ljmp
cmp
mov
sub
fadds
pop
mov
add
jmp
test
and
inc
push
arpl
add
fimuls
inc
add
adc
pop
sbb
pop
cmp
in
jbe
notb
ret
loope
sub
pop
mov
push
jle
mov
mov
dec
push
xor
test
loope
int3
xor
adc
lret
sar
jecxz
es
adcb
and
sbb
jg
add
mov
dec
pushf
hlt
repz
sti
mov
xchg
jno
add
lods
es
call
aas
mov
mov
adc
add
decl
mov
push
add
cmp
inc
jmp
inc
lock
jo
aad
mov
and
loopne
cli
stos
jbe
movb
sbb
jmp
jae
jle
xchg
lods
push
add
pop
lods
jno
ds
and
incl
add
sub
push
and
adc
pop
push
jae
mov
rclb
jb
jo
roll
add
mov
or
movsb
les
fdivrl
adc
jg
mov
fistps
or
add
mov
adc
add
mov
adc
out
mov
int
or
lcall
ljmp
pop
mov
jl
inc
jge
add
call
push
into
mov
movb
push
add
xchg
sub
jg
mov
jl
push
or
adc
imul
cli
imul
jle
call
je
and
push
sub
pop
xor
incl
mov
jo
xor
lret
andb
push
loopne
and
stos
push
or
or
mov
add
iret
mov
mov
js
push
insb
push
movsb
or
adc
mov
fwait
shlb
inc
js
out
mov
popf
inc
cltd
jle
mov
sub
sub
nop
inc
divl
mov
aam
fisubrs
out
lea
lcall
shlb
push
lods
adc
xorl
add
sub
outsl
xor
adc
pusha
or
daa
lock
test
xchg
mov
mov
add
mov
adc
mov
dec
push
jo
adc
ficomps
add
pop
add
sub
add
adc
or
sub
inc
mov
jecxz
or
mov
es
adc
adc
xorb
xor
lock
icebp
xor
pushl
cld
xor
xor
lock
mov
dec
and
pop
xlat
add
outsb
hlt
and
mov
mov
sub
mov
inc
mov
pop
jne
push
and
add
addb
ret
adc
inc
mov
pop
cmc
pop
pop
mov
jmp
pop
dec
arpl
pop
std
fbstp
js
add
cmp
add
inc
std
cmp
or
adc
xchg
sub
xchg
ret
pusha
pusha
loopne
mov
neg
mov
je
cmp
pop
mov
xor
jmp
dec
jge
add
add
xor
call
mov
das
je
imul
jno
cmpl
aaa
push
xor
cmp
leave
mov
inc
sub
fdivs
inc
mov
dec
add
inc
dec
repz
aas
mov
jl
clc
inc
xor
hlt
mov
lock
push
outsl
pop
insl
sub
clc
add
mov
mov
mov
es
adc
push
adc
inc
jo
cmp
call
call
push
mov
sub
push
push
mov
pop
jmp
bound
add
inc
add
xor
jb
xor
and
repz
js
ds
rcrb
sub
call
xlat
lea
xchg
out
mov
jo
push
andb
mov
notb
xchg
cmpsb
push
or
sbb
jg
jmp
xor
out
adc
add
xor
pop
enter
shll
mov
jecxz
pop
mov
loope
sub
mov
fldcw
mov
fdivrs
ds
mov
or
sub
mov
das
clc
mov
jl
push
push
in
sarb
push
inc
repnz
pop
lock
or
cmp
mov
inc
rorb
adc
sbb
test
adc
inc
xchg
in
subb
movsl
call
xor
rcll
cmpl
sub
jo
scas
lea
pop
mov
loop
or
lea
and
and
mov
aas
add
dec
xchg
mov
push
rorl
jmp
fstl
push
push
jb
int3
mov
and
xor
push
add
add
sub
pop
and
mov
sub
dec
nop
incl
stos
pop
es
cld
xor
lcall
adc
pop
or
into
xchg
addl
ret
inc
into
push
rorb
ss
cld
ja
lock
and
mov
mov
and
lock
stos
jg
in
movsb
jle
mov
es
cmp
in
add
jae
loopne
add
pop
pusha
test
addl
push
sbbl
test
adc
adc
add
cmc
add
adc
mov
add
aam
or
mov
jb
lods
mov
lea
push
pop
xor
jmp
addl
aaa
shll
sti
jo
cs
ficoms
adc
mov
lahf
xor
adc
aam
jle
pop
jnp
outsl
clc
inc
test
icebp
sub
cmp
or
into
push
add
mov
call
xchg
loope
or
aam
mov
cli
jo
mov
add
jo
mov
jo
shl
push
dec
adc
faddl
movsb
mov
cli
or
pop
mov
jge
push
scas
cmp
inc
icebp
and
push
xor
mov
xchg
push
inc
xchg
cmpsl
lea
pop
push
rclb
sbb
adc
and
jb
pushl
cmp
add
outsl
mov
js
jg
adcb
xor
js
mov
push
adc
inc
lds
mov
adc
mov
mov
adc
js
and
push
adc
outsl
idiv
xor
aad
and
xor
mov
cli
hlt
fnsave
repz
xchg
es
sbb
and
mov
or
jl
jo
std
add
cmpsb
ret
addl
cmpl
int3
lods
fucomi
xor
clc
push
push
cmp
mov
add
adc
iret
movsb
push
sub
sbb
arpl
or
mov
adc
xor
cmp
add
xchg
sbb
loope
sub
jp
in
mov
cs
add
lcall
ficoml
in
orb
mov
add
mov
or
and
sbb
test
rcrb
jg
push
push
call
and
push
jae
pop
mov
add
and
mov
insb
jle
add
mov
sub
sbb
dec
faddl
repz
or
inc
add
scas
add
add
cmp
add
imul
inc
jns
pop
scas
lds
pusha
stos
clc
cmp
mov
fmull
xor
mov
or
pop
xchg
inc
add
subb
jne
push
add
les
hlt
cmp
add
shr
add
inc
mov
inc
cmpb
push
push
pop
loop
sbb
adc
add
push
repnz
les
jge
mov
add
cwtl
into
fiadds
daa
xor
and
popf
xor
frstor
fmuls
sbb
cmp
xor
ret
bound
or
sbb
cltd
inc
dec
les
mov
shlb
outsl
inc
push
lcall
add
dec
mov
cmpsb
movsb
xor
push
sub
pop
addb
push
enter
icebp
call
or
call
in
call
mov
mov
push
addl
dec
fiadds
or
je
cmpb
cmc
or
adc
ficoml
or
and
subl
int3
ficoml
or
in
rolb
test
shlb
pop
xchg
enter
or
adc
add
je
je
or
adc
add
xchg
add
les
jb
test
xchg
decl
out
ret
and
addb
lcall
adc
mov
push
xchg
rol
cmp
sub
jmp
daa
cmpb
mov
and
xchg
and
jbe
fs
call
pop
shrl
orl
adc
add
clc
sti
shlb
push
dec
sbb
cld
mov
cld
fistpll
add
push
mov
loopne
sbb
dec
cli
int3
rorl
nop
pop
jp
je
adc
mov
and
push
clc
inc
sbb
jg
push
push
or
or
into
mov
test
add
outsb
testb
add
popa
push
push
adc
mov
mov
mov
jecxz
ljmp
pop
push
push
int
sbb
pop
add
push
test
and
pop
roll
add
adc
push
push
cwtl
rcl
sub
pop
rorl
push
cld
adc
ret
adc
and
mov
add
sbb
hlt
jne
enter
push
es
scas
adc
mov
lods
xor
fidivl
movups
jle
ss
xor
push
inc
call
sub
xchg
inc
fs
and
inc
fs
ljmp
add
subb
xchg
sbb
repnz
hlt
movsl
jmp
add
adc
pusha
sbb
xor
bound
adc
dec
push
adc
jmp
xor
pusha
add
cmp
push
mov
jp
jne
out
aad
add
lahf
or
dec
pop
test
rolb
cwtl
out
jo
add
ja
imul
push
call
sub
jne
cwtl
or
inc
scas
add
lcall
jb
test
jne
call
cmc
movb
mov
call
addr16
hlt
pop
nop
add
test
sub
push
stos
ffreep
mov
add
sub
ja
mov
dec
insb
add
addb
nop
repnz
adc
add
loopne
mov
aad
cld
imul
loopne
add
jl
ds
sbb
pusha
add
jle
push
lcall
mov
stos
push
or
gs
lods
cmp
add
loopne
outsb
scas
fidivl
hlt
add
push
adc
adc
int
sbb
sub
nop
popa
pusha
pop
fiadds
mov
inc
call
and
mov
test
add
jmp
jbe
clc
mov
mov
pop
add
cmp
ret
bound
daa
in
mov
or
and
in
cs
and
aas
lods
pop
arpl
cli
call
sbb
das
fs
movsb
add
mov
repnz
mov
inc
into
cmp
data16
insb
cmpsb
std
pop
push
add
pusha
push
pop
cmpl
push
adc
push
inc
xchg
test
inc
pop
aaa
sbb
and
loopne
mov
adc
xor
adc
dec
pusha
mov
ret
xor
sbb
mov
aas
inc
loope
rcrl
inc
add
and
add
xor
sub
in
add
add
pop
add
fiadds
cmp
add
push
pusha
cmp
out
les
push
fcomps
andl
jle
jmp
pusha
or
adcb
addb
pop
imul
dec
add
prefetcht2
pusha
ljmp
adc
add
push
pusha
adc
or
xor
or
inc
outsb
jmp
js
loope
mov
and
dec
jno
pop
add
inc
mull
sub
add
das
fdivrs
icebp
rcll
jp
push
loopne
ret
cwtl
lea
inc
jecxz
mov
enter
sub
push
fwait
rorb
jp
xlat
and
cwtl
fs
cmp
inc
push
adc
xchg
incl
xchg
add
xchg
inc
pusha
cmpl
andl
lock
adc
cli
pusha
adcb
mov
test
inc
push
cli
mov
cmp
adc
jle
mov
loop
mov
loope
jae
mov
inc
add
sahf
nop
jmp
scas
ret
inc
cmp
xchg
push
fistl
test
outsl
clc
scas
hlt
mov
push
pusha
push
inc
adc
es
and
or
adc
cmpsl
popa
pop
push
xor
dec
lea
cmp
adc
outsl
stc
addb
inc
push
inc
push
scas
aam
or
inc
pusha
sub
movsl
hlt
rorb
in
lock
pusha
push
mov
andl
pop
and
mov
mov
and
shrb
add
test
call
push
xor
jo
shll
mov
inc
test
mov
outsb
add
inc
xor
mov
add
clc
push
loop
xor
mov
inc
and
lock
inc
stos
pop
scas
or
lock
in
mov
sub
mov
cmp
sbb
push
ljmp
mov
test
je
push
or
stos
lock
cmp
mov
mov
ret
inc
add
mov
call
cmp
push
push
jo
int
add
jo
mov
pop
mov
jmp
xorb
sahf
lods
adc
sahf
push
sbb
jp
jmp
cmp
inc
hlt
std
jo
test
push
add
jb
push
ja
or
fnsave
xor
out
or
inc
mov
sbb
movl
mov
add
cmp
clc
mov
pop
fs
mov
lock
hlt
lock
scas
int
push
cmp
cld
test
ss
clc
incl
cli
or
and
subb
inc
mov
bound
scas
fadd
jo
int3
jbe
jb
inc
in
push
inc
mov
loop
je
xchg
add
scas
jo
lock
mov
lret
jo
add
or
inc
dec
pop
aaa
pop
es
mov
loop
lock
test
test
cwtl
adc
test
mov
jno
add
pop
cmc
test
inc
and
and
jp
clc
call
stos
adc
jnp
push
shlb
je
add
outsb
ljmp
push
sub
icebp
and
add
je
cmp
jl
lock
adc
in
sub
js
repnz
xor
jmp
and
outsb
rcr
pop
pusha
push
or
call
adc
add
jae
daa
into
lcall
div
call
pop
arpl
adc
popf
rolb
sbb
rorb
xchg
pop
fimuls
orb
mov
and
jno
and
sbb
inc
cmp
add
dec
or
repnz
adc
insb
sbb
jo
rorb
push
inc
adc
out
push
test
adc
xlat
push
fdivrs
cmpb
adc
clc
mov
inc
jno
add
mov
mov
jp
fdivs
sbb
push
push
sbb
xchg
repz
addb
xor
mov
sbb
pop
scas
inc
xor
andb
ljmp
gs
jg
ret
jno
lods
adc
lock
gs
xor
push
sbb
data16
push
sub
clc
dec
or
pop
pop
mov
sub
mov
ds
push
adc
add
push
pop
cmp
rcll
shll
sbb
enter
or
out
and
push
call
pop
sbb
ljmp
cld
or
xor
pop
mov
inc
mov
mov
test
dec
cmp
dec
push
loope
jge
test
call
test
in
jmp
inc
fcoms
shlb
cli
enter
xor
movsl
adc
inc
lods
push
call
sub
lcall
jle
lock
pop
test
lock
pop
adc
add
andb
push
bound
les
bound
mov
xchg
js
add
xor
push
cwtl
gs
outsl
fsubl
add
call
clc
ja
dec
add
ljmp
dec
xchg
mov
xor
xor
mov
lods
adc
xorl
xorl
mov
mov
mov
mov
ja
add
push
loop
lods
cmp
scas
mov
andb
xchg
jo
sbb
add
outsb
fcoml
sti
dec
aaa
inc
add
decl
mov
dec
add
adc
mov
or
push
enter
lods
push
dec
sarb
in
mov
ret
test
add
inc
mov
adcb
push
xor
ja
mov
clc
scas
mov
add
xor
pop
dec
sub
je
or
adc
das
fsubrs
mov
call
daa
add
xor
out
mov
jne
ret
inc
add
adc
or
lea
sbb
sbb
mov
xchg
mov
cmpsl
lock
inc
dec
xor
mov
std
adc
or
and
mov
ret
xor
in
push
xor
mov
add
into
inc
and
lret
push
or
sbb
push
sbb
bound
js
or
xorl
gs
cmpsl
sbb
jmp
inc
addb
mov
inc
adc
xchg
nop
lea
jp
mov
xorl
movb
pushf
dec
mov
std
adc
into
lock
arpl
daa
xchg
and
mov
jno
call
inc
data16
pusha
stos
jle
push
xor
dec
loop
sarb
pop
add
into
mov
outsl
imul
loopne
pop
inc
pop
mov
adc
mov
push
mov
pop
dec
in
cli
inc
jmp
test
push
mov
clc
pusha
xorb
push
xchg
icebp
scas
jb
call
js
mov
aas
inc
loopne
mov
in
push
mov
bound
push
mov
push
call
xor
je
mov
mov
js
jno
pop
xor
andb
pop
cld
sub
add
adc
add
or
jecxz
jmp
pop
cmp
mov
inc
jmp
push
adc
lock
push
aas
ret
clc
ljmp
or
and
pop
xchg
sbb
mov
pop
mov
and
or
or
xor
clc
leave
pop
call
sub
and
fcomip
jno
movsl
mov
xor
test
push
pusha
insl
dec
icebp
scas
jl
lock
add
loope
fs
mov
push
out
xor
imul
cmp
jne
insb
incl
enter
test
inc
icebp
sbb
mov
xchg
xor
inc
add
pop
xchg
call
xor
add
pop
xor
call
loopne
pop
and
les
lcall
dec
inc
or
add
inc
sub
adcb
pop
push
ret
sbbl
mov
and
mov
shlb
xor
sub
aad
mov
loop
rclb
or
and
imul
fadds
addr16
data16
mov
add
pop
add
iret
bound
add
sbbb
push
fiadds
add
les
fwait
add
out
pop
push
cwtl
pop
pop
sub
push
push
jbe
test
add
pop
adc
inc
add
nop
sbbb
sub
dec
add
jb
movsb
mov
rolb
lret
add
out
popa
add
notb
add
cmp
pop
mov
xchg
je
or
xor
cmp
into
inc
movsb
xchg
sub
mov
daa
imul
addr16
mov
push
sbb
pop
add
frstor
gs
xchg
mov
fs
inc
add
push
shl
in
mov
fiadds
mov
hlt
xor
push
adc
push
movsb
xchg
xor
pop
inc
shrb
push
push
enter
push
loop
pop
xor
adc
mov
xor
mov
adc
sahf
sbbb
sarb
clc
test
mov
cmp
movsb
shlb
hlt
jmp
inc
add
lahf
xor
xchg
jne
clc
mov
add
inc
orl
aas
or
add
sub
adc
push
inc
sub
pop
lret
pusha
addb
push
xchg
dec
inc
push
and
push
ss
movsb
sub
sar
mov
pop
dec
adcb
jp
sbb
jae
clc
adc
xor
jg
and
mov
xlat
mov
cmp
dec
and
out
jl
enter
pusha
xor
pop
inc
push
rorl
cmpsb
push
stos
add
and
jl
mov
lcall
je
pop
dec
sbb
xor
int3
orb
jge
jecxz
inc
out
shll
ret
adc
into
aam
add
cltd
inc
xor
jmp
lock
mov
push
push
or
lahf
add
pusha
cs
pushf
inc
sub
scas
stc
es
cmpsb
je
and
and
aam
add
lock
sbb
pushf
push
sub
inc
jmp
call
lock
testb
inc
sbb
dec
clc
call
mov
push
mov
inc
je
loop
and
jecxz
jnp
sub
subl
jns
sbb
adc
sbb
enter
sub
mov
mov
std
inc
loopne
shl
cmp
jl
shlb
add
test
xchg
mov
sahf
out
int
mov
das
add
dec
shr
cmp
cmpsb
push
or
call
inc
fsubrs
add
enter
ret
inc
aas
addl
add
push
add
ljmp
xor
mov
dec
into
pop
rorl
add
add
sbbb
dec
mov
mov
shll
pop
fcomip
jmp
movsb
mov
shrb
pushf
shlb
mov
mov
or
adc
divl
in
xchg
or
sub
add
adc
mov
mov
adc
add
loop
rcll
fsub
pop
xchg
xchg
dec
jbe
add
mov
adc
roll
aam
mov
mov
sub
sub
rolb
clc
decl
xchg
dec
xor
inc
inc
mov
scas
loope
ror
push
add
pusha
popa
lea
sbbb
dec
inc
insl
add
add
loop
decl
fcoml
lods
cltd
out
and
scas
daa
sbb
fsub
add
or
movsb
incl
aam
and
js
pushf
aaa
mov
sbb
and
or
push
fcoms
inc
call
fiaddl
int3
jg
add
mov
lock
sti
jb
push
popa
add
mov
xchg
adc
call
push
jbe
push
dec
test
shlb
adc
xor
mov
sti
push
ljmp
mov
jl
mov
mov
jmp
popa
jns
jb
popa
add
sbb
addl
or
stos
mov
xchg
add
add
mov
or
sub
mov
outsb
ljmp
sahf
sub
xchg
sbb
jp
inc
xor
sub
cmp
or
loope
mov
mov
mov
std
push
insb
es
pusha
fdivrs
push
add
jle
iret
data16
mov
jne
mov
push
adc
pop
jp
pop
xchg
enter
jmp
push
push
cmp
sbb
js
loopne
fs
dec
test
pusha
or
sbb
inc
add
dec
scas
and
popa
push
adc
sbb
les
popa
or
loope
push
xchg
enter
jg
mov
lcall
loope
sbb
pusha
xor
mov
mov
mov
ja
int3
and
pop
pusha
mov
test
add
je
pusha
push
push
or
pop
push
mov
xchg
pushf
xchg
mull
inc
mov
clc
or
stc
popa
inc
mov
push
inc
jne
stos
stc
test
or
popa
mov
adc
loopne
xor
dec
inc
mov
xchg
test
mov
add
sbb
std
loopne
jecxz
or
inc
call
jecxz
xchg
sub
adc
push
adc
xor
jbe
dec
xor
and
dec
push
push
in
and
xor
or
fs
out
stos
clc
pop
or
mov
popa
add
jo
in
daa
add
loopne
add
sub
arpl
adc
push
bound
popa
dec
push
push
loope
push
test
mov
dec
or
dec
sbb
cmp
clc
or
or
repz
push
out
pusha
and
jnp
es
dec
add
dec
bound
outsl
les
jmp
loopne
jne
pop
frstor
jle
test
mov
cld
clc
add
dec
loopne
dec
out
loopne
cmp
fmuls
enter
mov
fwait
in
or
inc
enter
cld
cmp
mov
aad
inc
cld
mov
add
sub
shl
inc
sahf
add
push
pop
xor
in
push
pop
inc
incl
pop
dec
and
sbb
insb
push
or
mov
clc
loopne
push
xchg
adc
loopne
mov
or
add
inc
mov
loopne
push
adc
dec
mov
stos
jbe
cld
pop
mov
clc
cmp
in
pop
mov
push
cmp
popa
flds
inc
xchg
cmp
mov
jo
sub
cmpl
jg
jmp
push
push
ljmp
add
jbe
unpckhps
call
cmpb
hlt
xor
xchg
adc
add
mov
jo
aam
sbb
pop
lock
mov
pop
outsl
sbb
adcb
lock
repz
orl
mov
xor
psubsb
xchg
imul
outsb
orb
mov
lcall
orl
test
lock
fdivs
jmp
repnz
sub
xor
cmp
pushf
push
xor
and
mov
fildll
lcall
lar
jmp
add
lods
pusha
sub
add
cmp
xor
negl
and
xor
bound
hlt
xchg
mov
jg
leave
ret
push
test
mov
xor
add
or
fwait
inc
adc
mov
adc
addb
fisttps
pop
lock
clc
and
sub
and
adc
fwait
movsb
add
decl
shl
xchg
push
mov
or
inc
sarb
add
adc
ja
clc
push
push
inc
call
push
adc
mov
mov
cmp
adc
mov
push
xchg
cmpsl
and
sub
adcl
dec
faddl
mov
jge
or
jmp
mov
fidivrs
lods
xchg
add
and
arpl
and
or
aas
add
sahf
mov
push
pop
mov
icebp
inc
shlb
jno
lock
ljmp
jo
test
xor
scas
xor
or
sbb
mov
add
xchg
cmp
das
sub
pusha
je
hlt
or
xor
xor
repnz
inc
jmp
call
xor
xchg
test
adc
bound
lock
push
ret
outsb
cmc
hlt
and
cmp
jg
pop
je
xchg
jg
push
mov
push
mov
sub
lds
pop
jo
xor
lock
mov
inc
call
clc
fbstp
clc
lcall
mov
xorb
mov
outsl
jg
xor
add
movups
jmp
xor
cmp
or
mov
cld
xor
pop
add
sbb
and
mov
ljmp
push
add
lock
cli
rol
sub
and
cmp
push
scas
adc
xchg
mov
das
subb
lahf
clc
loop
jno
mov
push
scas
testl
mov
gs
testb
adc
cmpsl
call
jnp
pop
inc
clc
sbb
aaa
mov
pusha
aas
adc
fisubrs
mov
enter
push
notb
lock
orb
je
inc
jl
or
pop
enter
lock
cld
pop
or
and
insl
cmp
idivb
jae
lock
mov
mov
mov
movsl
dec
movsb
mov
fdivl
icebp
js
adc
mov
jno
adc
xor
pop
add
adc
out
test
adc
mov
test
adc
loop
lock
jne
lret
mov
icebp
repnz
mov
jno
xchg
mov
xchg
mov
loopne
lea
lock
adc
jbe
clc
filds
inc
or
mov
andb
mov
sbb
or
pop
cld
mov
adc
xchg
mov
xor
lds
jne
inc
or
mov
lret
inc
add
je
sub
aam
inc
and
test
or
mov
xchg
add
test
jmp
push
or
inc
fwait
adc
cmp
inc
mov
and
imul
inc
hlt
push
ret
adc
xor
loopne
shrl
adc
push
push
lods
stos
orl
push
cli
cld
mov
lcall
sub
decb
add
call
addb
sub
cld
push
es
out
pop
or
adc
adc
fisubrl
je
push
sbb
iret
jmp
mov
call
call
push
inc
mov
or
mov
ret
jge
adc
inc
call
aaa
xchg
insl
inc
movsl
jno
push
adc
xor
dec
roll
adc
sub
or
out
push
add
pop
lock
sbb
jo
data16
sbb
cmp
or
adc
ja
ret
arpl
inc
int
mov
pushf
aam
jo
push
mov
mov
sbb
add
xlat
lock
push
ss
add
dec
xor
add
mov
fistpl
cmp
and
sbb
aam
rorl
push
xor
and
das
xchg
add
jo
ds
push
add
xor
mov
repz
push
mov
js
ss
sahf
adc
adc
jg
jo
add
mov
pushf
inc
icebp
push
clc
xor
jns
movsb
pop
sub
aam
xor
jno
lods
mov
mov
into
aam
ljmp
jl
sub
add
nopl
add
je
sub
fbstp
sbb
adc
pop
dec
or
xor
sbb
mov
sub
jbe
cwtl
pop
xchg
mov
xor
jge
mov
or
or
imul
sbb
nop
jne
push
icebp
aaa
nop
cs
icebp
adc
cmp
adc
shlb
push
mov
leave
hlt
and
scas
push
popa
push
jb
je
sbb
xor
sbb
or
test
xor
popa
jo
jo
clc
fwait
pop
ljmp
xor
push
inc
mov
pop
or
subb
pop
sub
sbb
leave
add
jne
jp
xchg
adcl
adc
sbb
fisttps
xor
mov
or
lock
mov
mov
jo
push
fmuls
ljmp
dec
push
lods
jl
and
xchg
inc
jnp
jl
rolb
rolb
add
clc
xor
push
lea
pop
inc
add
cmp
decl
sbb
sub
je
test
fs
push
insl
stos
mov
loopne
dec
mov
jg
testb
ret
pop
cld
pusha
inc
pusha
ds
push
jmp
inc
movsl
xlat
add
push
aaa
add
and
and
jmp
add
push
sarb
add
les
rclb
add
push
or
sbb
cmp
std
pop
adc
test
add
add
into
popf
sub
pop
sub
faddl
mov
lods
xchg
mov
adc
inc
lcall
push
jmp
and
add
sbb
je
idivl
push
jl,pn
inc
and
ja
xchg
mov
mov
mov
out
jle
and
push
dec
adc
cmc
cmpsb
cmpsb
ficomps
cmp
cmp
push
test
add
jnp
out
push
addb
sbb
add
ljmp
cmp
or
add
add
jmp
mov
adcb
sbb
jo
pop
jmp
cwtl
adc
xchg
pop
sbbb
rcrl
and
mov
dec
es
in
pop
andl
jmp
notl
adc
jge
hlt
clc
inc
adc
xchg
je
test
add
dec
mov
pop
aam
xchg
add
adc
call
imull
les
adc
add
pop
mov
fmuls
push
call
fldl
adc
add
loope
pop
aas
inc
cmp
mov
push
int
push
mov
scas
pop
adc
xchg
add
dec
inc
xchg
mov
fs
mov
fs
add
mov
fsubl
pop
fsubl
add
lods
aaa
in
jmp
push
idivb
add
lock
roll
push
push
inc
push
nop
ffreep
push
inc
adc
add
push
pop
fcomps
outsb
and
not
and
add
mov
sbb
and
add
es
sub
inc
jp
fs
pop
pop
ss
dec
push
mov
mov
fs
push
shl
cmpsb
sbb
das
add
ja
xchg
lock
cmp
mov
and
call
pop
inc
pop
sarb
cs
je
add
add
aaa
dec
and
clc
sahf
add
mov
mov
test
and
cmp
jge
je
jb
ret
push
adc
pusha
jg
fisubrs
inc
stc
ljmp
cmp
mov
cld
mov
or
adc
add
xchg
jle
subb
mov
icebp
movb
add
push
addl
or
pop
push
cld
aas
inc
int
test
shlb
test
and
icebp
testb
push
cmp
sub
and
ret
xor
lcall
cwtl
pop
cld
rcrl
nop
dec
jb
cmp
fcomp
mov
pusha
int3
mov
jmp
or
mov
pop
js
decl
push
aam
mov
rorb
movsl
insb
inc
test
push
and
xchg
enter
rcl
mulb
aaa
adc
imul
mov
mov
push
adc
add
rol
cmp
push
mov
push
pop
imull
push
xchg
loop
push
add
add
test
push
dec
clc
sub
xor
repz
rclb
mov
adc
push
push
sbb
push
or
push
das
sbb
add
pop
mov
cmp
inc
mov
add
adc
pop
pushf
adc
in
dec
loope
rorl
enter
mov
pusha
addl
sbb
add
adc
add
ss
push
push
outsb
scas
and
aam
xlat
loopne
mov
mov
adc
push
cmpsb
cs
add
inc
sub
xor
push
or
andl
or
mov
adc
or
fiaddl
testb
add
neg
and
addb
add
inc
outsl
sub
xchg
xchg
and
push
mov
jecxz
and
decb
mov
add
pop
mov
add
lock
stc
mulb
fs
and
mov
repnz
and
shr
cmpsb
or
mov
insl
add
mov
mov
adc
fs
pop
pop
popaw
or
cmp
loopne
fs
iret
nop
jl
mov
pop
cmp
ret
add
mov
test
mov
dec
xchg
jle
hlt
das
add
cwtl
cli
ret
adc
inc
cmp
push
lods
jp
lcall
push
jmp
call
xlat
pusha
adc
pusha
movsb
jmp
in
inc
pop
test
and
jmp
push
arpl
cmp
out
push
xor
push
loop
push
pusha
and
adc
push
mov
mov
mov
ljmp
mov
xor
adc
and
loopne
adc
inc
mov
mov
inc
pusha
je
mov
subb
and
mov
xor
jne
adc
sbb
lcall
fildl
out
ret
mov
adc
mov
xor
pop
int
shrl
xor
jo
xor
lahf
xchg
adc
add
and
or
clc
inc
add
loopne
insl
push
mov
icebp
addb
gs
jl
fsub
fcoms
pushf
pusha
cmpsl
dec
and
jo
stos
mov
in
dec
loope
out
lods
popa
loopne
lods
push
jg
data16
dec
dec
and
lock
adc
shlb
ret
ja
dec
loopne
jle
pop
or
test
xchg
push
js
pusha
aaa
movsb
cwtl
push
popa
int3
pop
pop
pop
jg
je
adc
add
loopne
lods
mov
loopne
lea
test
xchg
push
jne
sub
or
ret
add
jle
adc
test
mov
mov
mov
jbe
pop
in
add
mov
flds
loop
cld
pop
lcall
imul
mov
pusha
push
pusha
in
pusha
ret
sub
mov
jnp
sub
lret
sbb
arpl
push
add
inc
push
rorl
jmp
int
incb
mov
js
pusha
fcmove
ss
outsl
push
mov
add
ss
mov
ja
push
data16
clc
cmpsb
sbb
jl
test
lods
pusha
loopne
cwtl
loopne
adc
mov
or
mov
lods
sub
add
out
xchg
shrb
stos
test
push
xorb
inc
icebp
add
cwtl
frstor
mov
pop
sub
jp
std
add
push
lock
mov
push
les
jbe
mov
jg
sub
sbb
add
xor
pushl
sbb
mov
mov
or
mov
pop
cwtl
xchg
lock
jg
je
mov
and
jbe
sub
sub
xor
sbb
outsl
not
call
mov
dec
xchg
mov
mov
scas
lock
dec
fs
in
add
clc
call
add
xor
jo
xor
sbb
jnp
lock
and
dec
jg
cltd
mov
cltd
rorl
dec
inc
mov
lret
test
mov
loopne
mov
push
mov
xor
push
popf
sarb
test
call
mov
lea
jmp
inc
inc
pop
pop
mov
mov
inc
cmp
pop
mov
in
mov
es
shl
insl
addb
xor
mov
lock
mov
add
mov
mov
inc
mov
dec
add
push
outsl
mov
imul
mov
call
mov
mov
xor
mov
cmp
jnp
cmp
jbe
pusha
jo
call
adc
adc
fs
add
shll
stos
lock
cmpsl
and
sub
lock
jl
jo
das
or
mov
mov
add
push
mov
xor
jne
movsb
lods
ror
leave
add
adc
filds
sbb
add
push
jg
or
rcll
sbb
repz
test
sbb
push
sti
mov
pop
lock
inc
adc
add
mov
sbb
or
or
and
xchg
jecxz
lock
or
std
mov
adc
sub
add
add
sub
push
xor
pop
adc
divb
lahf
xor
cmc
add
xor
aas
add
test
in
add
mov
or
inc
cmpsl
adc
inc
dec
mov
nop
jbe
aaa
jg
lock
addl
xchg
mov
mov
pusha
add
adc
adcb
or
ljmp
enter
cmp
dec
lock
and
mov
pop
cmp
lea
cmp
mov
cmp
mov
cmpb
mov
test
mov
pop
jno
jo
insb
ret
mov
ja
adc
lret
add
jno
fimuls
mov
sub
outsl
std
adc
call
cmp
jnp
and
jno
or
mov
mov
xor
cs
or
cmp
test
test
insl
imul
std
or
add
out
or
mov
push
adc
mov
mov
inc
fadd
jno
mov
mov
mov
xchg
call
std
push
mov
xchg
add
sbb
fdivs
xchg
xor
mov
aaa
inc
test
mov
push
cmp
decl
call
push
jb
push
fsubl
jmp
jne
push
inc
push
jo
call
jo
or
test
test
pop
add
mov
inc
push
test
mov
xor
add
add
push
sub
fbstp
adc
sub
xorl
and
dec
push
xchg
mov
lea
push
fsubl
mov
push
lret
lcall
add
cmp
mov
add
repz
cmc
xchg
jmp
out
xchg
add
outsb
cs
push
push
nop
int3
add
les
je
xor
pop
xchg
mov
xor
andl
lock
add
xorb
or
or
mov
jo
outsb
call
call
pop
push
addl
movsl
repz
adc
and
xor
push
icebp
ja
fmuls
mov
jo
xchg
ss
pop
mov
decl
adc
js
and
mov
mov
push
mov
dec
xchg
mov
pop
push
lea
xor
adc
fcmovnu
inc
cwtl
call
add
xchg
push
add
in
bound
xor
and
inc
test
inc
sbb
jl
repnz
pop
mov
push
jbe
push
lods
lods
inc
cld
xor
add
rclb
and
add
push
lods
jo
adc
int3
ss
stos
je
adc
adc
sahf
insl
cwtl
ficomps
add
jl
decb
adc
shl
jbe
or
add
add
es
and
ror
xor
xor
mov
mov
fiaddl
mov
mov
mov
pop
mov
arpl
aam
cwtl
mov
fistpl
pop
and
incl
fs
loopne
xor
xchg
xchg
push
mov
xchg
sbb
add
in
push
xchg
sbb
test
add
cld
incl
adc
push
or
mov
nop
fisttps
push
sub
jmp
mov
jbe
test
dec
jb
or
jno
inc
lret
sbb
cmp
jl
adc
pop
mov
add
jg
lahf
testl
add
xchg
pop
pushl
add
xchg
lea
aaa
call
jne
out
jle
pusha
adc
jo
int3
hlt
sbb
jae
add
cmpxchg
xchg
out
sbb
ljmp
mov
decb
push
ds
mov
jmp
mov
xor
jg
fldl
lods
or
and
pop
sub
jno
out
and
pop
std
xchg
pushl
out
dec
shl
jg
call
mov
xor
ljmp
jp
pop
pop
lock
xor
mov
xor
out
add
mov
sbb
xor
ret
dec
pop
xor
dec
jno
lock
jmp
pop
outsl
xor
testb
mov
mov
shlb
adc
std
or
pushf
lock
adc
std
jg
mov
or
sbb
mov
sbb
dec
fisttpll
and
ficoms
pusha
gs
es
pop
sub
inc
add
adc
in
sub
push
or
xchg
ljmp
dec
mov
arpl
lret
mov
adc
lret
cld
dec
sub
cmpsl
xchg
mov
and
add
push
xor
ss
dec
push
add
add
dec
fmull
dec
cli
mov
es
pop
or
push
cmpb
mov
add
adc
adc
imull
lock
dec
jne
jp
setae
sbb
add
pop
add
mov
pop
pop
idiv
idivb
sti
and
cld
or
or
adc
add
lds
push
sahf
fnstenv
addb
addb
adc
adc
adc
rolb
sti
adc
adc
push
sbb
dec
fcoms
pop
fiadds
into
cmpsb
adc
mov
lock
or
out
mov
jne
or
and
sbb
lcall
jmp
repz
and
sub
subb
sbb
dec
les
fcomp
push
add
incl
ret
cmp
mov
mov
mov
fdivs
insb
or
add
aam
aaa
shlb
jo
mov
xchg
divl
fiaddl
cmp
push
xchg
adc
jne
pop
push
call
mov
inc
fmull
mov
and
adc
idivb
pop
sarl
add
pop
or
ret
test
pop
push
sub
pop
dec
xchg
gs
ret
ljmp
dec
cmp
rol
fmul
adc
push
inc
push
adc
sub
pop
cmp
or
das
fsubrs
outsb
xor
out
ret
lods
mov
add
jne
addl
fildl
and
push
and
cmp
pop
jmp
adc
push
addb
sti
scas
int
or
xor
mov
sarb
jl
aaa
xchg
clc
xor
sub
inc
sub
adc
adc
pop
lock
sub
or
rol
sub
xchg
subb
jne
lock
xor
mov
or
or
rolb
leave
mov
sbb
idivb
push
jbe
push
xorb
rolb
pusha
rolb
scas
clc
and
adc
nop
je
or
lahf
imul
jle
ret
jmp
add
cmp
mov
mov
scas
pop
and
cld
push
push
jl
push
mov
icebp
out
xor
push
add
add
add
cmpsb
gs
inc
outsb
faddl
scas
push
cmp
loopne
dec
mov
mov
lcall
fistps
mov
jmp
cmp
aad
cwtl
push
jecxz
pop
mov
insb
ja
aam
inc
test
or
bound
push
xchg
mov
cmp
or
mov
cmp
add
loope
or
sub
add
jecxz
ss
xchg
sub
add
add
inc
inc
lods
sbb
js
xor
cmp
jge
pusha
xor
push
pop
dec
inc
push
js
sbb
loopne
pusha
pop
mov
add
mov
sub
or
loopne
push
popa
and
adc
or
add
dec
and
cmp
inc
xor
push
int3
shlb
lret
pop
or
mov
hlt
mov
lods
mov
add
in
or
or
and
gs
inc
pusha
adc
cmp
in
mov
add
push
xor
stos
fld
inc
xchg
jo
cld
add
pop
dec
push
mov
add
ss
lods
out
loop
inc
push
aaa
add
add
das
movsb
mov
test
add
push
xchg
mul
mov
mov
dec
ret
add
add
or
ds
loopne
inc
lods
jne
or
push
lea
inc
dec
rorb
jp
mov
jns
mov
js
cmp
lea
data16
loopne
cli
and
test
js
or
gs
andl
dec
pusha
cmp
testb
loope
ret
cs
hlt
jmp
lods
lret
push
push
imul
pusha
mov
test
jp
dec
dec
mov
inc
dec
mov
mov
mov
mov
jo
aaa
pop
inc
mov
pusha
sbb
jg
xchg
sbb
shlb
pop
sar
das
inc
xchg
loop
jne
outsb
lea
ror
mov
pop
nop
sub
ficompl
jne,pn
cmc
push
enter
dec
std
mov
cmp
rorb
in
les
sbbl
mov
loope
inc
test
gs
enter
push
mov
jg
movsb
jmp
push
addr16
xor
pusha
lea
bound
push
sub
lock
cmp
shlb
out
mov
jae
mov
je
cmpsb
stos
add
call
addb
jbe
nopl
addl
cmpsb
pop
xor
push
sub
pop
mov
adc
es
push
push
add
add
imul
add
pop
dec
mov
lock
lret
mov
loopne
data16
call
xchg
pop
clc
sub
add
insb
mov
fbld
sbb
inc
call
jne
jno
add
push
mov
fs
loopne
dec
sub
mov
rcll
jl
add
out
and
popa
xchg
ljmp
clc
sarl
es
or
or
insb
pop
test
adc
push
push
das
fdivs
mov
ljmp
push
inc
push
pop
ja
pop
insb
fisttpl
stos
xor
inc
or
insl
insb
inc
adc
push
andl
mov
aam
das
mov
or
adcb
outsb
mov
inc
adc
stos
add
pop
test
out
xchg
shlb
imul
xchg
add
dec
ds
mov
jg
inc
mov
push
inc
push
inc
xchg
pop
pop
les
or
push
mov
inc
jo
and
out
add
ret
mov
mov
add
sar
add
or
sub
mov
inc
cmp
hlt
inc
push
shr
sub
adc
testb
jne
mov
scas
enter
sbb
mov
xor
dec
xor
and
negb
out
int3
cli
orb
sbb
xchg
and
mov
test
mov
pushl
jo
aad
add
add
jo
insb
mov
lock
test
add
jo
repnz
inc
jl
ret
dec
push
movsb
jb
pop
pop
or
cmpsb
adc
inc
mov
or
lock
icebp
lods
adcb
in
cmc
outsl
jg
and
push
push
fisttpl
sbb
jo,pn
cli
pop
mov
test
loop
insb
mov
mov
xchg
andb
ja
std
adc
lret
or
mov
mov
je
xor
adc
adc
out
test
cmp
cld
shll
rorb
sbb
cmp
pop
cmc
mov
mov
inc
or
je
cmp
pop
pusha
bound
jb
jo
dec
jo
call
jae
or
inc
xor
adc
xor
clc
jecxz
lret
ljmp
movb
add
mov
out
out
jp
push
push
mov
pusha
loopne
out
pop
push
jo
add
dec
jmp
push
cli
inc
xlat
rcr
sar
mov
jb
cmp
xor
repz
call
clc
sub
push
je
adc
or
mov
incl
hlt
jo
adc
test
xor
mov
xchg
sbb
pop
push
loopne
es
shr
pop
jl
or
sbb
outsl
movsb
sahf
inc
pop
je
sub
adc
xlat
add
call
cli
pop
pop
push
inc
ljmp
divb
jo
mov
and
push
rclb
lret
or
pop
mov
call
pushl
or
jl
call
sbbl
and
aam
pop
dec
mov
push
dec
sahf
jo
jle
mov
jge
fiaddl
insl
push
or
nop
push
add
out
xchg
icebp
out
clc
and
push
pop
mov
movb
pop
lret
aad
jmp
fdivr
adc
xor
leave
cmc
test
enter
push
pusha
scas
aad
outsb
or
mov
inc
jmp
jo
or
repnz
mov
jo
stos
fdivl
add
adc
sbb
inc
sarl
or
adc
ds
push
and
sub
add
jmp
sub
les
mov
jae
mov
rcrl
pop
mov
inc
mov
jg
or
add
cld
inc
cld
cmp
pushf
jmp
or
fiaddl
xor
add
retw
rcl
mov
shrl
add
cmp
jne
add
add
ds
and
mov
rol
cmp
xchg
add
mov
add
ds
mov
ret
mov
xchg
pop
call
sub
dec
hlt
push
sbb
mov
int3
dec
add
and
sbb
inc
mov
push
nop
or
movl
aam
jp
test
je
and
and
ror
lock
push
pusha
lock
lock
in
das
mov
in
add
pop
call
lahf
mov
ret
orb
ljmp
xchg
adc
xor
adc
outsl
push
loopne
aas
mov
push
push
mov
loopne
push
lock
je
cmp
test
dec
jb
sub
test
lock
xor
xchg
or
xor
sbbl
push
mov
pop
inc
inc
je
idivl
shrl
jmp
adc
mov
push
jecxz
je
inc
scas
mov
sub
inc
pushf
pop
cmp
and
insb
ljmp
in
add
add
or
mov
clc
add
adc
jne
cmp
adc
lods
mov
adc
sub
lock
push
inc
les
push
jne
int3
xchg
cmpsb
and
imul
sbb
pop
adc
xchg
shlb
lock
and
pop
sarb
inc
fsubs
mov
mov
mov
fwait
inc
mov
ficomps
sti
aam
jne
add
mov
sbb
fdivrs
inc
sbb
mov
mov
cmpsb
loope
sbb
mov
xchg
test
movsb
mov
orb
add
insl
jg
cli
xor
pop
pop
jne
in
daa
mov
xor
inc
adc
add
adc
int3
push
xor
in
add
push
decl
push
cmp
jno
jo
cmp
sub
loopne
jno
jp
popa
sub
icebp
sbb
mov
pushf
repnz
push
ss
incl
push
xchg
pop
add
jo
push
adc
dec
mov
inc
call
out
fcompl
push
rolb
push
lock
or
xchg
inc
xor
cmp
mov
cmp
dec
jb
jno
lods
adc
cmp
clc
inc
mov
push
add
push
sbb
push
xor
test
addb
mov
shrb
orb
or
mov
push
mov
mov
int3
dec
call
dec
mov
out
nop
inc
mov
pop
arpl
enter
push
mov
inc
push
in
repnz
and
push
jo
sbb
roll
jbe
mov
inc
inc
sti
je
xor
add
lock
xor
mov
adc
shr
and
push
test
sbb
aam
movsl
fsubrs
xor
sahf
shlb
mov
mov
daa
sub
add
pop
loop
repnz
mov
or
insl
cmpsl
mov
fistpll
jno
xchg
xor
mov
pop
inc
xor
adc
and
test
roll
add
push
push
cmpsb
jg
je
call
or
and
movsl
inc
push
repnz
mov
dec
xor
lock
das
xchg
movsb
fbstp
mov
ja
dec
shrb
imul
fadds
dec
xchg
and
xor
test
add
dec
xchg
jg
add
ret
push
add
outsl
test
mov
lock
mov
test
mov
or
dec
in
aaa
sub
repz
pop
xchg
xor
cmp
jo
decb
or
bound
lock
dec
adc
xchg
push
pop
mov
jo
mov
push
mov
std
pusha
je
mov
in
leave
rol
push
test
test
mov
push
gs
rcrb
cli
fildl
into
inc
rorb
mov
add
xchg
stos
mov
jmp
cmp
movsb
cmpsl
es
cmp
push
in
inc
arpl
ds
rolb
fisttpl
ret
mov
in
add
aaa
or
jo
jbe
jmp
adc
add
ret
mov
outsb
and
call
sbb
fs
push
jp
or
les
jne
pop
mov
int3
ss
mov
cs
into
push
pushf
loop
out
mov
movsb
mov
call
mov
inc
sbb
lret
sbb
or
adc
pop
push
pop
cmp
imulb
hlt
addb
xor
xor
sbbb
cmp
pop
fisttps
add
nop
call
rclb
pushw
xchg
sti
xchg
adc
mov
push
les
xchg
sub
mov
je
repz
in
cli
out
lea
or
cltd
mov
movsb
and
sbb
mov
xorb
pusha
cmpsb
mov
out
push
push
cmp
adc
push
mov
ljmp
popa
mov
push
enter
and
or
lods
addl
in
test
jo
pusha
jmp
test
xor
mov
cmp
xor
mov
cld
nop
xor
insl
das
mov
mov
push
xchg
addb
xor
insb
mov
adc
sbb
out
leave
add
jbe
negb
mov
sub
pop
sarb
xchg
add
mov
enter
shrb
and
cmpl
sub
sub
pop
push
jp
sbb
addr16
xor
fiadds
test
sub
cmovb
inc
jb
dec
call
or
push
add
add
repz
jle
push
andl
lods
and
call
incl
push
add
push
push
rorb
cmpsl
movsb
cmp
push
mov
aaa
rolb
jne
mov
lcall
mov
dec
inc
push
loope
inc
pusha
lock
fimuls
cltd
jge
clc
adc
or
cmp
incl
jb
and
mov
jle
adc
xchg
adc
add
and
xor
adc
sbbb
push
xchg
push
jmp
and
pop
xor
mov
shlb
out
jb
pop
inc
rorb
xor
push
dec
loope
inc
in
and
adc
add
cmpsl
adc
xor
shll
add
cli
push
dec
jmp
adc
int3
repnz
pushl
repnz
shlb
and
pop
shrl
mov
icebp
punpckhdq
leave
test
cld
mov
add
shll
cmp
pop
fcoms
test
and
adc
inc
rclb
aam
es
xchg
and
fwait
rolb
das
inc
in
movsb
out
inc
push
idiv
lea
jbe
mov
dec
rolb
xor
ret
js
xor
and
adc
adcb
fadds
or
mov
fidivs
sub
mov
insl
popl
testl
push
js
subb
enter
cs
jb
push
cli
sub
xchg
fs
inc
in
popa
outsb
aam
push
jp
adc
jmp
jns
cwtl
shl
int
jl
add
add
mov
cwtl
or
fwait
sub
push
sub
mov
loopne
icebp
out
mov
cmp
sub
inc
and
in
sbb
add
and
cmpsl
pusha
sub
lock
pop
and
mov
mov
push
inc
out
adc
loopne
mov
inc
loopne
and
push
bound
dec
push
popa
push
adc
push
imul
inc
sub
jg
add
popa
jo
sbb
cld
jnp
mov
adc
add
push
jbe
les
add
ljmp
push
inc
push
or
rol
push
and
fists
inc
add
add
or
shrl
je
je
cmp
push
les
inc
xlat
out
push
dec
fs
push
and
mov
pop
inc
loopne
incl
or
mov
decl
movsl
push
and
insb
add
bound
cs
mov
adc
cltd
xchg
adc
mov
sub
pusha
mov
add
pop
sub
dec
add
nop
cmpsb
mov
add
test
cli
add
jo
cmp
or
inc
call
add
lea
das
call
or
inc
in
insl
fldt
pop
inc
cltd
xor
push
pop
mov
add
rcl
fnstcw
and
arpl
in
and
xchg
pop
out
adc
les
rcrl
add
mov
stos
and
pop
inc
loop
xchg
mov
insb
movsb
xor
add
pop
jg
popa
xor
int3
inc
jmp
push
pop
xchg
adc
enter
adc
mov
fcmovb
outsl
or
jb
call
rcll
mov
cltd
sub
in
je
pusha
pop
push
add
adc
mov
ljmp
add
movsb
bound
lock
sbb
loopne
ljmp
sub
add
cmpsb
xrelease
mov
les
loopne
mov
adc
xor
pusha
and
sub
xor
cmp
mov
lret
sub
lock
push
jl
push
push
cmc
notb
je
in
and
mov
cmp
xor
inc
dec
xor
shlb
imul
test
adc
mov
fadds
pusha
xchg
push
push
pop
mov
mov
addl
adc
add
out
nop
adc
or
inc
aad
out
je
mov
loopne
jle
adc
mov
add
stc
xor
mov
add
shlb
adc
mov
pop
test
xchg
addr16
js
js
lods
jl
stc
xor
push
xor
xchg
inc
add
add
adc
push
mov
test
push
es
dec
pop
cmp
add
or
and
addb
or
lods
clc
in
add
xor
stc
jmp
stos
add
stc
mov
call
std
or
mov
jmp
andb
inc
jl
pop
test
jo
mov
and
add
decl
or
mov
adc
inc
jmp
or
in
divb
out
addb
ds
idiv
push
inc
repz
pop
push
in
push
sub
or
and
jp
jo
jbe
fsubs
ljmp
push
addb
jbe
cmp
push
and
dec
lea
mov
mov
nop
sbb
or
xorl
add
or
add
lea
cmp
ja
data16
clc
dec
adc
pop
inc
out
icebp
or
xchg
push
and
dec
xor
mov
orb
lds
xor
sti
cmp
jbe
imul
inc
lret
or
aad
jecxz
ds
or
ret
pushf
push
incl
mov
add
pop
and
inc
imul
cltd
lock
ja
mov
sti
in
mov
push
or
loopne
mov
fbstp
xor
xor
movsb
inc
imul
mov
adc
mov
push
adc
inc
mov
xor
ret
mov
adcl
shlb
mov
dec
push
or
lock
push
jge
loopne
fisubrl
add
rol
mov
call
cltd
imul
cltd
dec
mov
data16
subb
js
outsb
jbe
jmp
or
or
jbe
fistpll
inc
lock
icebp
xadd
sub
jmp
jne
jno
inc
imul
call
cmc
cmp
push
mov
sub
jbe
loopne
and
fldl
ret
lcall
jnp
mov
mov
and
mov
call
jg
outsl
mov
jae
lret
lock
incb
sbb
nopl
mov
xor
fidivl
test
testb
fdivrl
dec
je
adc
mov
push
test
outsl
push
lea
add
xchg
cmc
jmp
test
mov
pushl
and
xor
inc
lock
jge
xchg
adc
cli
jmp
mov
adc
and
pop
push
dec
je
mov
xor
aaa
push
mov
push
xor
mov
push
dec
xor
clc
jmp
jmp
jmp
and
jl
sbb
xor
mov
xchg
movzbl
push
add
mov
push
out
sahf
lcall
push
clc
jmp
add
icebp
cmp
cmp
lcall
pop
ret
add
add
jne
mov
jl
xor
jg
sti
mov
adc
or
jo
inc
addb
cmp
fs
xor
push
fdivr
es
scas
es
mov
adc
push
or
sbb
rol
or
pusha
jno
lret
mov
and
hlt
jmp
fs
outsb
inc
test
add
jp
ss
lods
add
jo
add
jmp
push
clc
sbbl
xor
xchg
xor
mov
adc
adc
dec
push
add
add
push
fldl
push
jne
faddl
repz
cmp
and
pop
rcrl
push
adc
repnz
adc
mov
pop
cld
or
push
jb
mov
cmp
xor
cmp
or
pusha
in
push
jmp
je
lock
test
mov
clc
cld
adcb
or
rolb
pusha
mov
dec
and
dec
test
lock
or
fs
xchg
add
adc
cmp
adc
sub
ss
push
les
jp
lret
and
popa
insb
out
push
arpl
push
mov
adc
or
aaa
jne
ret
or
ret
popa
jl
jmp
jle
mov
cs
add
inc
pop
xor
add
dec
fsubrs
xchg
or
divb
adc
mov
test
clc
add
xor
jb
das
and
sti
xor
les
cmp
repz
jno
pop
adc
mov
add
sahf
cmp
jno
or
mov
xor
xor
out
pop
insb
jp
shlb
repnz
je
fsubrs
je
fcomip
jg
cmp
mov
test
and
jo
jmp
or
jno
adc
inc
and
jo
lock
loopne
aam
shrl
push
pop
out
and
mov
or
jl
mov
in
incl
add
jb
or
repnz
imulb
je
cmpsl
ret
jmp
pop
sbb
pop
aas
adc
or
int
jl
jbe
adc
int3
adc
mov
lock
jnp
icebp
out
add
mov
sbb
jno
pop
jb
add
inc
nop
ss
js
inc
pop
push
imul
pop
cld
mov
mov
xchg
jne
jno
or
dec
adc
aaa
std
push
push
mov
mov
les
fnstenv
lods
or
jo
jno
dec
fs
nop
call
loopne
aam
and
test
test
das
mov
stc
push
bound
push
sub
mov
mov
test
sahf
and
out
mov
fnstsw
cmc
icebp
sbb
mov
adc
add
sub
pop
mov
cli
add
and
and
mov
mov
fidivs
jp
sub
call
sub
jo
rolb
repz
or
dec
xchg
or
inc
mov
ret
cltd
or
mov
mov
adc
pop
fistpl
cs
pop
jne
outsb
hlt
add
icebp
adc
xchg
jg
stos
adc
or
inc
ja
pop
or
mov
gs
or
mov
shr
mov
mov
repz
icebp
sub
hlt
add
push
mov
scas
mov
push
pusha
or
inc
or
mov
testb
mov
jp
mov
arpl
inc
push
xor
sub
or
rolb
dec
mov
inc
add
jmp
std
mov
clc
pushf
or
add
jmp
sbb
cmp
push
rcll
cld
mov
xor
leave
sub
es
mov
add
aam
add
xchg
js
aad
mov
fs
fdivrl
pop
movsl
sbb
lock
fcmovnbe
lods
lret
jg
add
sub
mov
insl
mov
imul
and
pop
dec
std
dec
addb
je
and
sbb
shr
pop
pop
sbbb
push
or
push
lahf
incb
fwait
push
add
add
mov
add
cmpsl
adc
adc
ja
or
clc
incb
fisttps
ja
mov
add
inc
call
jne
mov
xchg
test
jl
orb
pop
xorl
and
in
pop
outsb
lret
pop
adc
dec
push
shl
mov
xchg
daa
dec
andb
mov
scas
int
pop
jb
and
sbb
xchg
push
push
cmc
add
add
in
pusha
cli
or
addl
test
addl
test
adc
andb
insb
subb
pop
push
test
and
les
hlt
rcll
pop
test
popf
or
ret
add
push
out
add
push
rolb
cmp
push
ret
dec
repz
mov
lcall
mov
andl
add
rolb
xchg
into
push
pop
fs
in
jmp
je
mov
adc
inc
sbb
out
sub
push
pushl
lods
dec
cld
adc
mov
sarb
fs
stos
sar
adc
rclb
adc
xor
xchg
adc
mov
or
jns
pop
ffree
xchg
es
push
push
rol
icebp
jnp
push
cmp
add
and
aaa
sbb
pop
ret
push
and
jmp
stc
lds
add
jmp
add
adc
sbb
movsl
mov
or
and
test
and
shlb
js
cmp
push
rolb
cld
mov
mov
xchg
iret
je,pt
push
enter
fildl
enter
inc
sbb
enter
roll
add
sbb
push
sti
or
jbe
test
repz
push
dec
je
add
call
cld
adc
movsb
imul
xor
test
arpl
add
jne
rolb
and
or
bound
shlb
test
nop
aaa
or
or
ret
lcall
cwtl
xor
lcall
repnz
push
rcll
rcrb
arpl
push
inc
lds
or
xchg
addb
or
mov
ss
ss
cs
adc
loop
sbb
ljmp
pop
cmpsb
jne
add
cmp
lods
lahf
or
jbe
fcmovne
scas
mov
ljmp
sub
loope
sub
mov
xchg
add
jbe
lock
xchg
scas
adc
push
xor
xchg
adcl
pusha
addl
or
mov
clc
aaa
out
add
lcall
cli
push
loopne
fs
add
add
dec
add
call
pusha
push
movsbl
jl
call
inc
push
in
popf
ret
outsb
pusha
xchg
cmpb
ret
or
and
hlt
pop
push
orb
jne
inc
loop
push
xor
andl
pushl
std
pusha
or
add
sub
idiv
jecxz
adc
psubsw
push
je
orl
and
insb
or
jl
adc
ljmp
sbb
inc
movsb
and
popa
inc
jmp
aam
mov
lcall
adc
fadd
aad
fwait
leave
mov
xor
sti
bound
cmp
pushf
jno
adc
fldl
lods
fcom
andl
loope
je
add
outsb
or
cli
or
insb
leave
sub
nop
bound
mov
pop
push
and
or
sarl
or
pusha
and
xor
push
pop
fs
inc
or
push
and
pusha
mov
cmpl
push
out
jmp
in
es
jmp
pop
lret
or
test
push
rclb
pop
mov
mov
add
shlb
aaa
mov
outsb
xor
in
sbb
insb
pushl
sub
and
ljmp
xchg
fwait
loopne
popa
loop
loop
jns
sub
loopne
adc
add
shr
jle
add
add
pushf
test
loop
and
stos
jno
out
out
and
push
add
and
int3
fidivs
dec
out
mov
fcmovu
hlt
fcomps
adc
xor
leave
mov
pop
or
inc
idivb
add
call
mov
nop
push
dec
pusha
cli
ss
popa
or
jmp
cmp
sbb
cltd
cmp
jg
jl
cmp
jae
push
inc
pop
or
add
test
xor
inc
sub
pusha
pop
ficoms
gs
mov
lods
loopne
ljmp
out
sub
mov
jbe
or
sbb
pusha
js
call
cmp
or
push
stos
mov
fdiv
incl
jmp
pcmpgtd
mov
xchg
xchg
jbe
jg
dec
jno
jg
mov
movsl
arpl
loopne
adc
push
shl
addr16
xchg
push
mov
mov
mov
lock
in
jg
pop
cld
cmp
or
icebp
enter
lcall
pop
and
and
push
add
aaa
mov
xor
adc
pop
adc
xchg
aam
test
mov
xchg
and
jmp
mov
or
adc
mov
sbb
add
xchg
mov
sbb
xor
add
adc
jmp
add
jmp
fmuls
pop
lock
or
dec
into
sub
sub
fmull
lcall
fucomip
jge
inc
fisttpl
lcall
lock
sub
int3
mov
pop
testl
les
les
push
in
sbb
push
enter
jmp
pop
push
cld
pop
lock
xor
xor
cmp
cmp
arpl
clc
push
xor
inc
mov
lcall
xor
xor
sub
in
lock
xor
ret
orb
loop
pop
xchg
jno
xor
pop
jmp
mov
sahf
clc
out
xor
sub
xor
movb
dec
roll
pop
or
xor
sub
and
adc
adc
fsubrs
out
jo
push
jmp
insb
pop
add
ljmp
adc
das
call
insl
popa
icebp
add
jp
shlb
jae
and
add
mov
add
pop
and
add
jo
dec
mov
pop
and
xlat
fs
inc
or
lock
mov
rclb
jp
jl
or
push
xor
pop
jmp
sbb
push
jl
xchg
movsb
xor
mov
and
inc
sub
loope
add
fdivrl
push
push
js
test
mov
sahf
adc
jbe
jge
push
out
imul
sbb
xchg
cmc
inc
or
cs
fsubs
jno
xchg
imul
or
outsl
lods
insl
insl
or
insb
push
cld
inc
ds
imul
or
frstor
inc
les
inc
push
add
add
jo
mov
in
xor
inc
mov
jno
or
idiv
inc
lcall
mov
adc
xchg
add
repz
mov
ds
mov
bound
xor
sbb
sti
mov
pop
insb
shrb
out
pop
jmp
lcall
ret
push
push
in
add
test
adcb
adc
mov
jmp
lcall
movl
pop
ret
pushf
mov
daa
inc
mov
pop
dec
or
clc
stc
push
jo
push
rolb
xorl
jbe
cmp
fimull
push
movb
xor
call
add
push
je
add
bound
mov
or
adc
lods
add
or
and
xchg
cwtl
ret
out
pop
inc
mov
or
rclb
push
loop
xchg
mov
xor
inc
push
and
cmc
call
jne
and
imul
jne
jbe
jge
sub
cmp
fs
mov
inc
or
jg
mov
jmp
aaa
and
popa
dec
xor
push
push
lock
sub
mov
loope
dec
adc
hlt
sub
inc
adc
lcall
jo
or
daa
aam
cmpsb
mov
in
test
dec
xor
mov
ds
push
cmpsl
icebp
inc
lea
sub
sub
cmp
push
sbb
mov
cmpsl
xchg
or
aaa
mov
cmc
orl
pop
sub
dec
push
lock
xchg
adc
push
push
push
adc
mov
mov
add
std
dec
inc
lock
or
jl
or
in
fisttps
or
imul
test
jp
ljmp
ljmp
cmp
lea
movsb
pop
punpcklbw
nop
adc
mov
mov
push
imul
jmp
xchg
testb
repz
sbb
mov
pop
add
imul
push
add
cmp
pop
mov
aas
fs
add
push
je
or
jnp
shl
imul
jno
xchg
fimuls
inc
inc
adc
mov
cmp
movsl
fcomi
or
call
inc
imul
cmp
mov
xchg
mov
imul
mov
cli
int3
mov
mov
and
mov
mov
mov
daa
inc
aaa
mov
push
call
add
lods
or
jbe
test
add
bound
lods
rclb
sbb
enter
test
out
cmp
adc
rclb
pop
lods
jg
add
je
sub
push
mov
idivb
mov
sbb
decl
repz
xor
jb
test
call
inc
xchg
cli
lea
cmpsl
call
mov
or
mov
mov
inc
mov
dec
pop
and
xor
scas
pop
stos
dec
test
push
inc
jo
xor
jp
inc
loopne
push
int
jge
mov
call
test
add
add
dec
andb
mov
loop
hlt
mov
push
je
jl
dec
sti
ja
xor
je
lock
rcrb
mov
incl
pushl
and
sbb
push
stos
int3
adc
xor
nop
xchg
add
pop
call
mov
and
in
dec
jo
aad
pop
arpl
loope
incb
cld
bound
stos
sbb
mov
mov
dec
push
adc
sti
jmp
mov
mov
loop
clc
sbb
out
jge
js
out
mov
inc
jbe
fsubs
data16
ljmp
xchg
push
es
repz
mov
es
scas
mov
pop
jo
out
jb
sbb
sbb
xor
sbb
test
in
or
icebp
je
jl
clc
fs
cmc
sbb
fidivs
or
test
sbbb
xchg
rolb
pop
jb
pop
insl
aas
in
inc
cmpsb
sbb
pop
pop
ret
mov
xor
clc
inc
push
sub
add
lea
cmp
xchg
call
call
push
mov
std
mov
add
push
jb
arpl
or
lods
cmp
dec
add
and
jo
jecxz
in
lds
cmp
movb
std
add
jne
add
popa
inc
xchg
xor
jecxz
mov
sbb
jecxz
inc
and
mov
jae
cmpl
dec
jne
jno
adc
fs
inc
cld
pop
call
aaa
cmc
pop
mov
add
adc
add
mov
mov
and
clc
mov
inc
addl
icebp
dec
add
add
and
push
pop
xchg
mov
int
add
sbb
mov
fmuls
mov
aam
sbb
insl
popf
inc
cmp
fistpl
or
sbb
lods
jnp
inc
add
mov
xor
xchg
ret
sub
or
dec
cwtl
pushw
add
push
mov
test
clc
std
divl
dec
lea
stc
scas
call
pop
dec
cld
std
call
sub
les
xor
pop
pusha
dec
ret
xor
lods
loop
int3
dec
shlb
dec
call
and
clc
jp
add
push
ror
and
cli
lds
or
into
mov
pop
push
inc
mov
sbb
add
mov
aam
mov
or
jmp
dec
pop
add
push
fcoms
pop
adc
in
lahf
sub
rolb
add
xchg
xor
fs
push
cmp
add
adc
std
pusha
pop
adc
es
mov
inc
cs
inc
and
adcb
sti
call
xor
das
add
insb
daa
push
scas
addb
or
fwait
js
push
push
adc
mov
add
sbb
divl
adc
in
jb
int3
mulb
sub
mov
push
dec
cmp
dec
fcoms
addb
sbb
call
sbb
pop
lea
xor
test
xor
mov
inc
insb
jl
adc
fcoms
inc
test
pop
sbb
pop
sbbl
add
shlb
inc
cmpsb
xor
imul
push
ss
sbb
loop
in
mov
addb
sbb
add
jb
or
push
call
daa
rorl
bound
loop
inc
jo
xor
push
aam
sub
push
mov
shrb
or
mov
push
pop
xchg
sbb
test
add
sbb
fwait
mulb
call
daa
pusha
in
mov
cwtl
and
mov
adcb
sbbl
add
mov
or
sbb
sbb
jmp
mov
adc
aaa
mov
lea
popf
push
pop
add
inc
lea
into
mov
xor
imul
shl
clc
inc
mov
adc
mov
add
nop
insb
out
pushl
or
pop
jne
mov
push
inc
pop
cmpb
lods
inc
add
jl
ljmp
xchg
aas
jns
adc
jo
bound
xor
sbb
ljmp
lea
cwtl
sbb
jo
dec
sub
insb
sbb
loop
rolb
loopne,pt
bound
jbe
fsub
lret
pusha
loop
fimull
lcall
cmp
ret
ss
std
ret
sahf
or
sbb
call
xor
je
cwtl
hlt
inc
jmp
mov
push
dec
push
push
push
push
rol
jno
push
sub
shlb
cwtl
mov
ja
shlb
pop
fistl
shlb
sub
cmp
mulb
dec
loopne
lock
shlb
ret
loopne
mov
fmuls
lahf
add
add
rolb
insb
jecxz
jp
int3
push
xchg
and
in
nop
lcall
sbb
dec
pop
cwtl
xchg
incb
lods
ljmp
push
jle
sub
push
sti
popa
dec
jne
test
mov
mov
sti
xor
or
mov
daa
xor
mov
pusha
pop
orb
addr16
add
adc
add
mov
popa
or
or
in
scas
jmp
add
cli
adc
jle
mov
les
add
or
adc
jmp
xor
inc
mov
add
lea
add
loopne
push
popa
fcomps
adc
insl
adc
adc
pop
filds
jg
xchg
mov
adc
ss
xor
jl
pusha
test
call
insb
test
sar
loope
add
add
add
cli
jb
jmp
dec
add
inc
sti
add
adc
mov
add
fwait
inc
add
adc
adc
loop
add
loop
pushl
jp
subb
cmp
out
mov
mov
std
hlt
std
rolb
fadd
push
add
add
and
adc
outsl
mov
rcrl
or
push
cmp
cmpb
or
jge
jecxz
aaa
pop
cmc
and
pusha
das
into
or
or
test
cmpsl
call
subb
int3
fs
pop
loope
fsubp
or
push
stos
pop
dec
pop
jne
pusha
cmp
push
sbb
mov
add
loopne
pusha
jmp
xchg
add
sub
add
loopne
and
add
or
push
mov
or
ss
cs
pop
add
add
sub
sub
fsubrs
add
pop
ret
orb
mov
pop
mov
mov
and
push
sub
pop
push
push
mov
push
xlat
sub
fsubrs
loopne
movsb
xor
inc
add
test
and
inc
push
popa
ret
dec
dec
lea
outsb
add
add
icebp
cli
push
popa
add
lcall
fists
mov
add
xor
and
push
push
lock
loop
inc
add
add
or
dec
inc
clc
add
clc
pusha
or
int
mov
mov
sti
ss
and
aaa
mov
movsl
push
lods
push
loope
in
out
mov
lret
mov
mov
push
add
pop
mov
jmp
adc
hlt
add
mov
enter
andl
or
loopne
rcrb
sti
inc
mov
push
and
sbb
ljmp
mov
sti
xor
jnp
fs
test
aam
sub
xchg
nop
add
jb
add
xlat
insl
pop
dec
sbb
jge
xchg
pop
cmp
mov
push
push
ret
adc
sarl
rorb
ret
mov
and
aaa
cmp
dec
inc
ret
pop
jb
out
pop
data16
hlt
jg
add
ret
fiaddl
dec
mov
inc
or
adc
xor
loop
or
add
xchg
adc
and
testb
fdivrp
add
and
fisubrl
or
lds
je
clc
es
sti
lds
pop
cltd
inc
into
inc
adc
adc
xor
movsl
cmp
std
mov
push
pusha
mov
lea
leave
sub
jo
push
lea
add
pop
jo
cli
and
or
adc
test
or
push
xchg
push
and
or
jle
aas
lock
and
or
in
inc
add
mov
nop
sbb
lcall
add
icebp
add
sti
in
xor
jnp
adc
nop
jo
enter
add
js
sbb
lea
adc
sbb
mov
and
mov
xor
jne
stos
xchg
lock
jmp
dec
cmpb
call
std
pushl
jo
adc
cli
pop
jo
andl
cmp
add
das
pop
mov
fiadds
add
mov
into
loope
lds
push
mov
or
fcoms
leave
aas
rcr
lcall
aas
arpl
push
sbb
dec
push
sub
dec
jbe
jge
xor
mov
je
nop
out
add
lods
xchg
xchg
lock
adc
mov
pop
mov
or
out
push
add
enter
add
add
dec
sti
or
mov
popa
and
push
in
sub
dec
hlt
pop
adc
and
mov
data16
ficompl
divl
push
jl
cld
or
ret
lock
jp
dec
mov
mov
pop
xchg
adc
jmp
pushl
leave
inc
push
mov
dec
movsl
call
lock
mov
push
dec
sub
testl
xor
jle
mov
adc
and
mov
jo
inc
xor
or
mov
add
xor
jae
xchg
lcall
and
push
std
jo
mov
jo
xor
jo
shll
dec
adc
decl
xor
cmc
add
jae
mov
mov
and
and
inc
adcl
cmp
fiaddl
mov
adc
add
inc
ljmp
sbb
or
inc
jle
mov
fisttps
or
push
xor
push
pop
pop
xchg
pop
cmp
inc
testl
add
sbb
push
int3
or
jg
mov
cwtl
add
int
add
inc
mov
cmpsb
movsl
push
test
or
inc
add
push
lods
fwait
pop
mov
pop
sbb
mov
add
cs
outsb
and
inc
subb
inc
xchg
jmp
inc
pop
int3
rolb
lock
dec
das
es
push
mov
mov
adc
mov
insb
xor
xchg
mov
fcoml
add
stos
or
inc
jmp
pop
pop
dec
dec
mov
mov
push
add
or
adc
jae
nop
inc
jo
les
push
adc
inc
cmpb
call
xor
aas
mov
lret
adc
jo
push
push
mov
call
out
add
dec
cmp
mov
lock
mov
cmp
inc
mov
xor
adc
push
and
push
mov
cli
and
mov
dec
mov
mov
call
decl
or
or
mov
jne
push
push
icebp
or
xor
inc
pop
add
bound
push
pushf
xor
sub
aam
mov
call
jno
xorl
bound
jb
clc
jbe
hlt
jbe
insl
sbb
push
sub
mov
scas
dec
mov
nop
je
push
push
or
mov
mov
andl
or
rol
push
lock
mov
js
or
rcrl
shl
push
xor
ret
push
push
clc
mov
jge
adc
mov
jbe
adc
add
inc
add
mov
test
lock
jb
int
rclb
testl
mov
adc
pushl
lock
cli
mov
and
jo
jl
outsl
adc
lods
push
xor
lock
jo
pop
pop
test
iret
out
inc
or
popf
sti
and
jmp
xorb
mov
mulb
adc
loop
in
add
add
sbb
add
outsb
pop
add
mov
addr16
cmp
cld
jno
sub
pop
test
call
andl
sub
loop
mov
je
xor
adc
xor
jo
mov
addb
sbb
clc
add
cld
xor
cld
add
cmp
and
or
int3
xor
and
mov
push
adc
sbb
pop
xor
and
hlt
jg
inc
icebp
adc
mov
inc
fdivr
mov
out
test
lock
cmp
lock
xor
sub
pop
add
loopne
push
xor
out
pop
std
dec
and
nop
jne
cmp
inc
in
push
repz
xor
pop
pop
cmpsb
fsubr
repz
add
cmp
xchg
dec
inc
xchg
adcb
imul
jle
lods
jo
mov
inc
decl
or
fs
xor
icebp
je
outsl
movsb
mov
test
int3
hlt
mov
inc
push
jo
adc
jo
adc
out
pop
mov
mov
mov
xorl
movsl
rolb
pop
enter
decl
dec
ret
add
gs
lcall
adc
mov
rorb
call
push
jo
jecxz
and
shll
inc
mov
icebp
hlt
xor
mov
movsl
cmc
imulb
push
leave
mov
je
xor
inc
out
adc
incb
cld
mov
ret
mov
xor
xchg
add
fdivr
add
push
add
repnz
outsl
and
addr16
hlt
xor
and
add
xor
jno
cli
fmuls
or
mov
pop
jo
push
xchg
xchg
jecxz
add
push
ljmp
xor
mov
xor
and
inc
jbe
adc
mov
je
pop
mov
call
sub
cmp
mov
dec
cmpsl
or
pusha
mov
pusha
sbbb
adc
xchg
xor
lret
add
and
pop
faddl
add
push
sbb
mov
jl
push
cli
movaps
sahf
out
je
push
push
inc
dec
push
push
sbbb
ficoms
in
adc
inc
fadds
jne
int3
xor
add
cmp
mov
and
or
aad
cmp
mov
std
or
add
add
push
mov
dec
push
test
cs
je
arpl
add
js
dec
adc
jle
iret
push
ficoml
inc
inc
sub
push
inc
dec
push
pop
std
and
or
inc
ss
add
jno
add
fidivl
and
lea
push
sub
test
add
pop
xchg
sub
in
push
adc
cld
inc
adc
cmp
push
or
loopne
adc
jae
scas
rcl
lahf
test
mov
sbb
adc
addl
lods
mov
scas
les
mov
jg
and
push
push
repz
loopne
fadds
jmp
int3
testb
xchg
push
push
cwtl
add
jo
inc
inc
ret
mov
lods
outsb
push
and
cmp
pop
pop
push
pop
cld
lea
mov
movsb
add
mov
test
outsl
adc
pop
and
and
adc
inc
mov
push
repnz
lret
sbb
mov
sbb
jmp
mov
je
and
inc
mov
sbb
mov
pop
and
dec
inc
dec
pop
inc
cld
rolb
push
push
les
call
jg
or
shlb
mov
add
test
ljmp
shrb
xor
mov
inc
dec
aam
xchg
ret
movsb
les
scas
bound
rcrb
fmuls
jmp
insb
out
cli
xchg
decl
int3
cmp
push
xor
xchg
push
jo
scas
ret
and
adc
xor
jp
lods
loope
xor
je
pop
mov
pop
mov
dec
and
stos
cld
test
inc
or
ret
adcb
sub
into
add
ret
mov
lods
dec
adc
pop
addb
rcrb
jg
jb
pop
mov
aas
je
adc
into
cmp
mov
fildl
cmp
mov
sub
mov
push
call
je
push
nop
lock
dec
sub
aaa
je
push
insl
push
ret
add
shll
push
inc
into
int3
ret
cmpsb
push
or
xorb
pop
add
sub
sub
lock
push
out
jne
push
jo
xchg
push
lcall
adc
lea
xor
aas
test
in
push
shlb
test
jge
add
push
or
shlb
adc
adc
ret
push
das
sub
sub
inc
rcll
test
dec
in
inc
mov
xchg
repz
idivb
and
jne
push
pop
xor
pop
call
repz
or
inc
sbb
loopne
enter
pop
sub
stos
hlt
adc
stos
push
jle
sbb
fsubrp
neg
jle
adc
leave
and
xor
insl
data16
dec
add
dec
jecxz
jo
cmpb
scas
push
rol
add
movsl
pop
or
lds
fdivr
add
insb
sub
and
aaa
bound
or
push
lea
jp
aaa
add
fistps
pop
add
push
push
or
mov
pusha
imul
or
and
shl
sub
cwtl
fiaddl
push
mov
cld
mov
ja
call
jmp
and
pusha
pop
fcomps
push
test
ficomps
andb
je
shlb
sbb
push
sbb
pop
add
push
cld
add
add
andl
mov
aaa
out
jne
shlb
ss
in
mov
or
xor
lock
dec
ficoms
cmpsb
push
dec
ja
stos
pop
mov
hlt
lock
shlb
pusha
push
loope
test
or
jle
xchg
sub
test
mov
xlat
add
test
call
test
adc
jecxz
loopne
jo
orb
pusha
push
or
in
jl
push
loop
and
mov
mov
cld
pop
adc
bound
test
es
cmp
int3
adcb
aam
popa
xor
mov
jmp
and
das
scas
push
pusha
inc
test
cld
sbb
add
add
xchg
add
mov
dec
std
push
adc
adc
nop
jle
inc
push
or
fidivl
in
adc
rol
mov
mov
pop
push
pop
cmp
repnz
sbb
movsl
or
out
push
fndisi(8087
sbbl
adc
call
push
push
mov
pop
or
out
or
pusha
adc
inc
loopne
mov
push
cmpl
cli
add
andb
xchg
add
loope
fs
add
loopne
hlt
loopne
dec
push
ret
ja
clc
xor
mov
xchg
xchg
or
add
cmp
hlt
cmp
movups
mov
icebp
jmp
loope
movl
inc
push
call
inc
ret
cmp
fs
add
mov
outsl
pop
or
lods
or
mov
dec
cld
ror
je
call
imul
pushw
add
push
mov
push
xchg
test
jge
or
sub
sahf
loopne
add
aas
call
sub
cmpb
lea
das
push
xor
lret
insl
clc
xor
lock
mov
aaa
test
mov
sti
jno
loope
add
jo
cmp
popa
mov
test
push
add
jle
mov
dec
rcrl
jb
sbb
sarl
inc
ja
xor
mov
int3
js
mov
xor
aad
xor
ret
push
dec
mov
cmp
and
push
xor
shlb
insb
add
lret
cld
into
adc
hlt
ljmp
jg
add
lods
loope
add
mov
bound
pop
and
mov
or
push
mov
outsw
dec
add
aad
pop
insb
popa
push
pusha
sub
jnp
outsl
jb
jp
fcmovb
xor
inc
adc
pop
cs
xor
adc
dec
ret
clc
iret
ljmp
pop
notb
push
bound
lock
dec
mov
pop
mov
or
jl
mov
pop
lods
cmp
repnz
inc
test
xchg
jbe
cmp
sbb
jmp
inc
nop
mov
mov
cmp
aad
and
ds
sub
icebp
scas
adc
mov
call
inc
xor
add
mov
pusha
and
inc
loopne
mov
adc
dec
cld
mov
shrb
mov
xor
xchg
xchg
shlb
xchg
or
sbb
lods
push
cmp
test
add
andb
mov
call
add
xchg
pop
sbb
divb
ja
into
pop
pop
in
sub
aas
mov
add
cmp
bound
or
scas
lea
pop
lock
pop
div
pop
jecxz
pop
xor
add
xor
jg
cs
lods
cmpb
aam
dec
inc
shll
add
adc
sti
push
jl
cs
xor
pop
mov
lock
add
or
call
leave
ret
ljmp
adc
lea
dec
xchg
fdivp
scas
adc
int3
add
test
pusha
mov
call
pop
push
push
pop
repnz
adc
mov
mov
pop
cmc
mov
xor
clc
decl
cmp
add
call
xor
cmpsb
mov
sub
fldt
cld
jb
fsubr
or
lock
pop
add
and
incb
je
addl
call
sub
test
and
je
mov
mov
sti
mov
inc
jbe,pt
add
dec
mov
dec
jle
orb
add
mov
jmp
pop
add
mov
shlb
mov
lock
scas
add
fisttpl
sti
jle
pop
and
sub
cmp
add
add
mov
sbb
jo
lock
pop
scas
inc
jl
cmp
shlb
pop
jbe
mov
test
and
add
mov
jp
movsb
sbb
sbb
je
sahf
mov
jl
mov
lds
in
sbb
add
mov
sar
add
aas
jmp
jo
test
add
add
imull
mov
inc
mov
jne
and
push
mov
data16
push
add
popa
xor
int3
ds
or
add
jp
jno
dec
or
xchg
xlat
xor
shll
xchg
hlt
fdivs
pop
insb
repnz
test
js
loopne
xchg
sti
mov
or
pop
hlt
movq
mov
hlt
jne
or
xor
add
jbe
add
dec
clc
jg
or
dec
add
ss
cmp
mov
mov
dec
or
pop
mov
cmp
clc
sbb
lock
lock
rcrb
lock
add
add
sub
scas
jno
mov
jno
cmp
scas
xchg
or
pop
repz
jl
inc
inc
mov
fcomps
mov
and
stos
in
dec
push
adc
lds
lods
movl
xchg
sbb
cmp
xor
add
shr
cmp
inc
add
cwtl
jp
or
cmp
push
push
xchg
xchg
push
push
jo
pop
test
lock
mov
push
lods
adc
mov
es
pop
and
xchg
loopne
and
add
add
xor
mov
incl
xchg
add
cmp
stc
push
inc
test
push
mov
incl
or
sub
inc
push
jb
jne
decl
mov
mov
or
insb
call
lods
sbb
sbb
pusha
adc
inc
mov
fwait
stos
mov
inc
xor
adc
testb
xor
cmp
repnz
sub
xor
cwtl
fcomip
clc
insl
cwtl
add
push
je
sar
sbb
lea
lea
add
cltd
ss
ror
loopne
add
imul
scas
ficompl
xor
repz
hlt
push
jo
scas
lea
jecxz
add
xor
je
cli
sbb
cmp
mov
adcb
and
xorb
cld
mov
and
mov
lods
fistl
and
stos
das
test
and
clc
lock
ficomps
sarl
lock
shl
stos
mov
fistl
push
fisttps
divl
jle
dec
inc
xor
or
xor
cmpb
mov
pop
add
imul
or
sub
push
sbb
and
push
sarl
je
add
lea
dec
clc
push
in
clc
imul
adc
add
call
sub
lock
push
and
sub
mov
xor
cs
xor
or
sbbb
xor
ss
test
cwtl
push
ljmp
ret
adc
jl
mov
dec
mov
shl
sub
push
push
push
and
mov
add
adcl
sub
jne
frstor
movsb
add
sub
daa
mov
movb
push
lret
lods
xor
add
stc
jmp
push
cld
icebp
inc
push
push
pop
stos
movsl
test
lock
pop
mov
outsb
fidivrl
and
decl
inc
pop
jne
pop
out
mov
mov
or
cltd
and
sbb
lock
nop
jl
jmp
andb
aas
sub
and
xor
add
hlt
scas
add
or
push
mov
add
pop
je
push
mov
testb
mov
adc
rorb
and
add
cmc
mov
inc
pop
xchg
shll
mov
pop
test
xor
lret
pusha
std
mov
repz
arpl
mov
mov
sbb
lahf
cmp
adc
sbb
lahf
call
xchg
aam
cmp
inc
jo
hlt
jg
inc
jbe
xor
ret
lock
and
xor
arpl
je
or
cmc
add
addb
call
scas
add
cmc
divb
inc
scas
mov
mov
lock
add
mov
stos
sbb
inc
and
sub
push
cwtl
cs
jp
mov
insb
test
sbb
add
fnstsw
adc
sub
dec
sbb
scas
fwait
push
test
clc
data16
sbbb
jp
pusha
xchg
jp
xchg
or
add
pusha
stos
push
in
outsl
aam
add
add
inc
test
test
sub
adcb
mov
xor
shrl
fs
xor
fiadds
cmp
inc
leave
pop
ret
je
mov
push
push
push
mov
popa
cmpsl
test
hlt
scas
jbe
aad
jne
test
add
jg
jl
and
add
adc
or
fdivrp
cmpsb
and
cltd
mov
mov
fs
and
sbb
daa
pop
sub
push
sub
sbb
or
inc
outsb
mov
add
dec
test
adcb
cmpb
sbbb
ret
fidivrl
out
xchg
fcompl
lahf
inc
insb
je
or
jmp
xor
pop
test
orl
lea
xor
push
call
neg
pusha
add
and
ret
scas
pop
mov
add
cmp
jecxz
test
push
mov
add
add
pop
add
inc
add
adc
andl
add
test
outsl
inc
mov
pop
call
sbb
cmp
pop
dec
popa
imul
cmpsb
add
xchg
mov
inc
inc
xor
inc
mov
jmp
mov
dec
xor
leave
xor
test
inc
push
and
cmp
jbe
movsl
insb
ret
or
add
and
in
pop
push
ret
cli
mov
sbb
shr
xorb
or
sub
inc
data16
div
inc
ss
or
fstpt
rcrb
push
sub
push
xor
jne
add
js
jg
pop
test
add
call
pusha
and
xor
cld
mov
add
mov
dec
or
addb
jne
jg
rclb
hlt
je
subb
jl
push
cmp
add
jnp
sarl
xor
jle
hlt
ja
dec
push
orl
mov
add
adc
adc
cmpb
aam
test
mov
je
pop
adc
adc
and
cmp
sub
inc
dec
xchg
mov
enter
roll
int3
push
jg
call
mov
dec
stos
mov
fidivl
or
dec
sbb
dec
push
pop
les
sub
jnp
sub
dec
push
ss
add
js
in
mov
and
add
mov
xor
sbb
icebp
add
adc
xchg
addl
inc
sub
inc
in
push
xchg
mov
push
in
mov
iret
mov
mov
test
dec
sahf
sub
ds
inc
rolb
mov
addl
movsb
ffreep
fisubs
mov
xor
push
mov
inc
pop
xchg
dec
and
adcb
mov
push
or
shll
sbb
hlt
add
push
mov
out
scas
mov
add
add
cmp
adc
adc
sub
mov
jb
dec
cld
andb
inc
cmpsl
andl
dec
or
push
fs
dec
mov
pop
mov
inc
testb
mov
xchg
inc
xlat
mov
mov
xor
or
dec
and
or
dec
add
popa
push
mov
or
and
mulb
mov
dec
das
insl
cld
jle
mov
or
pop
push
int3
xor
incl
test
pusha
imul
pusha
xor
int
add
iret
orb
mov
push
out
stos
sbb
or
add
data16
lret
pusha
in
stos
pop
loope
ljmp
into
adc
ljmp
sbb
incl
and
mov
pusha
cmp
inc
test
decl
test
jg
cld
pusha
sbb
adc
loope
sbb
inc
and
xchg
inc
add
mov
out
cwtl
loop
add
add
jecxz
movsb
dec
insl
or
push
add
stos
jno
loope
mov
pop
rolb
mov
movsb
and
fists
cmp
scas
rclb
bound
loop
push
pop
dec
push
test
push
fcoms
pop
sti
loopne
popa
pop
std
ret
jg
fs
push
pusha
and
add
ja
push
cltd
cmp
les
pusha
xor
out
data16
adc
add
adc
sub
icebp
mov
sub
sub
mov
jl
fistl
push
jb
mov
inc
lcall
push
ret
pop
arpl
push
dec
pusha
and
add
push
sbb
push
pop
jge
lock
push
cmpb
and
cmpb
xor
aaa
dec
decl
mov
cs
or
and
popa
hlt
add
popf
js
cs
lcall
mov
add
push
hlt
orl
shlb
push
inc
add
out
pusha
lods
setns
add
xor
and
pop
cld
mov
mov
push
xchg
xor
test
filds
pop
sbb
adc
aas
syscall
test
jecxz
pop
add
dec
lock
push
push
movsl
push
repnz
call
ret
push
mov
inc
lret
adc
inc
rol
mov
push
add
pusha
and
jmp
aaa
push
das
adc
dec
out
add
enter
ds
les
subb
clc
sub
insl
jl
push
push
xchg
imul
adc
add
add
in
and
loope
lods
inc
pop
test
add
call
or
mov
xchg
dec
scas
jae
mov
arpl
push
outsl
fildll
xchg
loopne
inc
cmp
pop
add
mov
out
lock
push
call
add
stos
fsubl
xor
cwtl
pop
jne
and
push
and
inc
and
pop
pop
xchg
pusha
mov
or
cld
pop
xchg
or
add
push
mov
dec
aaa
push
loope
sti
in
add
pop
movsb
jle
push
sub
sub
jp
hlt
or
int
cmpsb
add
xchg
mov
loop
or
push
ds
fdivl
jl
add
pop
fcomi
push
mov
adc
adc
jmp
add
mov
mov
test
inc
pusha
addl
push
rclb
or
repnz
aam
testl
push
sbb
je
xchg
pop
mov
pop
mov
hlt
or
mov
push
push
nop
jbe
add
adc
mov
test
insb
add
daa
in
mov
xor
jg
jg
add
xchg
dec
cli
aas
shll
cld
out
push
pop
out
insb
test
jae
xor
lock
lock
cmpsb
insb
ss
loopne
loope
jbe
sub
xchg
mov
cmp
call
mov
sbb
insl
push
mov
das
push
mov
testl
std
xchg
movsb
add
dec
dec
mov
daa
xor
mov
les
movsb
stos
int3
push
jmp
mov
or
imul
adc
loop
inc
sub
ljmp
test
jno
add
jp
aaa
jae
orb
insl
mov
xchg
xor
mov
adc
jg
or
in
or
lea
sbb
add
test
add
lahf
mov
test
mov
test
incb
adc
pop
xor
mov
incb
inc
jmp
ljmp
lea
jbe
mov
mov
or
pop
mov
inc
lods
mov
sbbb
mov
std
nop
rolb
cmp
lds
in
jno
fsubs
or
and
aaa
inc
xorb
in
push
pop
inc
pop
sbb
or
or
psrld
mov
pushl
push
jno
push
lock
mov
add
mov
and
pop
jno
sbb
dec
jne
lods
and
aad
sub
mov
and
cmp
call
call
ret
addr16
enter
and
mul
ret
cmpsb
pop
inc
xor
lock
add
adc
and
inc
and
mov
mov
sbb
pop
mov
adc
pop
ja
shrb
lds
ljmp
or
sbbl
mov
mov
aad
jg
xor
mov
xor
mov
adc
push
bnd
jo
add
das
and
sbb
add
pop
jmp
mov
outsb
add
imul
hlt
add
adc
cld
fdivp
loopne
sub
pop
or
insb
cmp
es
outsb
clc
pop
dec
add
int3
shl
repz
nop
pop
idiv
mov
incb
pusha
and
xor
or
and
movsl
push
lret
movups
xor
sub
je
push
xor
dec
arpl
adc
pusha
adc
les
cs
xchg
addb
add
std
pop
push
dec
lock
fbld
insl
sub
sti
out
add
sarl
mov
inc
xor
cmpl
and
jno
cli
add
rclb
push
leave
out
pop
mov
mov
pop
inc
pop
cmp
xor
push
cmpsl
sub
fs
cmc
add
mov
mov
sub
lock
mov
inc
push
int3
add
jmp
sbb
add
cld
sub
jno
inc
out
xor
dec
xor
je
js
xchg
dec
hlt
loop
jo
enter
addb
into
call
lcall
push
pop
fs
push
pop
pop
ret
in
lea
fdivs
pop
mov
dec
xor
or
xchg
shrb
push
and
dec
xor
sub
scas
ja
jg
je
jmp
sarb
sbb
cltd
insl
aam
subb
add
or
cmp
add
xor
mov
inc
mov
inc
xor
sbb
sub
cld
adc
shll
ret
push
jb
pop
pop
mov
je
sub
cmp
add
dec
push
fnstcw
ret
mov
stos
ja
xorb
movsb
mov
adc
cmp
inc
cmp
icebp
and
or
push
push
inc
shrb
aam
cmp
mov
fwait
adc
mov
and
cmpb
ss
or
fstl
je
mov
sub
push
add
mov
mov
jl
iret
jb
cmp
dec
in
push
push
jmp
sub
fiaddl
stc
adc
loope
scas
cmp
ret
add
push
push
leave
ss
jmp
mov
mov
loope
pusha
ss
mov
add
ja
inc
adc
sub
and
lcall
mov
xor
lock
cs
clc
jl
scas
jb
or
mov
xorl
mov
sahf
sbb
inc
lea
pop
clc
cmpb
mov
xor
or
lock
inc
imul
inc
lret
lock
pop
push
sbb
dec
push
aas
and
push
ds
and
testb
mov
add
cli
cmp
scas
xchg
rorb
pop
lods
aaa
mov
jg
push
push
inc
mov
cmp
mov
fcmovnb
sub
mov
jo
pop
mov
cld
pop
mov
push
add
test
cmc
jne
mov
pusha
inc
pop
or
xchg
mov
jp
push
movsl
pushw
cld
push
mov
and
mov
mov
add
repz
push
push
mov
adc
mov
aam
inc
adc
xor
add
ss
call
inc
inc
xor
add
xor
jecxz
mov
add
xchg
sbb
mov
mov
fs
scas
sub
pop
cmpsb
icebp
or
lock
lods
call
test
and
or
out
test
sbb
adc
jo
ljmp
cmp
jmp
mov
pop
mov
sub
sub
push
addb
in
sub
jg
xor
mov
dec
mov
lcall
add
adc
sbb
neg
mov
pop
and
cli
pop
in
sbb
rolb
mov
adc
pop
xchg
rclb
call
or
pop
adc
divb
int3
orb
int
jle
sbb
mov
add
jp
iret
add
rol
jo
clc
es
fcoms
push
test
xor
cwtl
call
adc
fcoms
jae
mov
aam
clc
jae
sub
pop
lret
lcall
jne
adcl
stos
adc
sbb
cmp
adc
jg
adc
adc
insl
je
movsb
mov
sub
clc
cltd
cmp
je
in
jl
das
je
fimull
push
cmpsb
lock
rolb
jp
fidivl
dec
sbb
or
xor
cmc
daa
or
mov
jno
fisubrl
hlt
or
and
fs
dec
mov
les
mov
adc
call
enter
inc
in
xchg
xor
test
fs
sub
out
les
ss
or
sti
jne
add
adc
adc
mov
pop
or
orl
xor
dec
push
mov
xchg
push
mov
in
jle
or
and
add
jo
cmpsb
test
aad
addb
adc
out
stos
incb
sub
or
xchg
fs
sub
rorb
pop
xor
mov
int
and
adc
rol
and
mov
clc
jge
adc
and
lcall
je
dec
sahf
sub
jnp
cli
push
add
shlb
subb
add
ja
lock
mov
andb
and
inc
or
adc
ss
mov
cmpl
in
js
insb
loopne
pop
call
cmp
pop
adc
addb
pop
pop
inc
andb
mov
cmpb
push
pop
rcrb
push
hlt
inc
xor
lods
mov
mov
js
jmp
mov
movsb
xorb
cmpb
inc
ret
mov
pushf
or
and
cmp
out
es
sbb
xchg
orb
adc
mov
insl
pop
fs
mov
cmp
dec
xchg
outsl
pop
cmp
lea
call
mov
sbb
sbb
or
add
stos
sbb
into
in
clc
fnop
inc
imul
lahf
gs
adc
inc
mov
add
push
pop
add
inc
inc
out
ja
push
and
outsb
inc
cmp
sbb
push
sbb
sar
fmull
shll
stos
push
rorb
mov
cmpb
fbld
pushf
data16
je
cli
decl
out
rol
inc
test
rolb
insb
shrb
movsb
mov
mov
lods
incl
negl
shrb
out
and
xchg
rorl
pop
push
push
mov
sub
push
mov
adc
pop
add
mov
ds
dec
das
pop
xor
cwtl
lds
jg
sbb
add
pop
shrb
fcompl
jp
mov
jle
daa
roll
aam
and
das
or
insb
add
push
push
lea
sti
decl
enter
dec
jae
rolb
inc
inc
rolb
lock
test
or
rolb
movsb
outsl
add
add
jp
rclb
int
loopne
add
cld
shlb
xchg
jo
push
jp
adc
fucomi
adc
shlb
xor
aaa
dec
pop
sbb
stos
leave
ret
cs
mov
out
js
fmulp
int3
xor
push
les
or
mov
nop
lret
push
xor
add
push
shlb
shr
push
inc
sbbb
ja
dec
jmp
rorb
mov
adcb
rclb
movsb
cld
les
ret
jbe
xorb
or
mov
dec
fcoml
push
ja
lea
and
jl
mov
push
jo
lods
cwtl
ret
jp
add
push
inc
adc
inc
movsl
push
hlt
scas
mov
cmpb
pop
mov
cmp
iret
nop
jne
test
decb
cmp
mov
lock
xchg
sub
xchg
outsl
ljmp
loope
ljmp
xchg
push
rorb
stos
shrl
jne
test
cld
shlb
add
push
add
and
fisttps
call
pusha
and
loope
rol
test
bound
pop
fcomps
and
enter
lock
lods
jmp
push
xor
lods
lods
ljmp
dec
adc
loopne
in
mov
push
mov
incb
repnz
mov
stos
inc
les
jbe
add
xchg
or
insl
aam
idivb
popa
mov
jle
push
sub
inc
push
push
lock
adcl
adc
sahf
pusha
adc
je
shr
mov
add
push
adc
pop
lods
push
sbb
jecxz
sub
or
xor
andl
push
push
lods
push
imul
xor
mov
add
loope
inc
jmp
lods
or
shll
cmpsb
jbe
pop
sti
in
sbb
pop
pushf
and
adc
or
lods
adcb
out
ret
loopne
jmp
mov
sti
outsl
fwait
adc
mov
add
loop
aam
sub
mov
es
scas
add
jg
dec
xor
rcrb
roll
cmp
lret
add
iret
dec
adcb
add
adcb
outsl
add
or
test
push
test
ja
repz
dec
add
mov
jae
call
add
pcmpeqb
jb
add
add
cld
cmp
mov
dec
dec
out
push
loop
popa
jo
mov
outsb
outsl
cli
pushf
clc
je
adc
aam
sub
icebp
jbe
ja
sub
jae
cmp
hlt
mov
js
pop
mov
or
lock
lea
lock
fidivl
mov
mov
jmp
imul
add
js
or
cli
or
adc
mov
or
stos
dec
sub
mov
out
mov
ds
push
mov
add
push
or
mov
popa
sub
jl
adc
push
inc
push
shlb
push
in
clc
push
scas
jo
aaa
sub
imul
loopne
sbb
push
push
call
xchg
push
xchg
inc
shll
inc
jmp
in
les
out
cmpsb
fs
pusha
push
or
pop
testl
mov
cmp
xor
add
bnd
scas
lock
add
dec
dec
or
mov
mov
push
popa
pop
xor
sahf
js
repnz
sbb
cmp
xchg
filds
stos
add
mov
lea
loopne
mov
shl
xor
or
subl
mov
dec
mov
repnz
fidivs
call
in
daa
mov
pop
bound
fisttpl
add
mov
inc
adc
pusha
adc
push
pusha
sbb
jno
add
sbb
mov
adcb
shl
add
push
pop
stos
es
rolb
shll
inc
mov
mov
popa
add
and
loopne
out
sbb
ret
mov
add
pop
push
xchg
jmp
and
push
call
or
lods
loopne
cmpsb
jbe
inc
insb
inc
push
push
aas
sub
mull
dec
ret
pusha
sub
ds
inc
sub
or
cmp
lret
lock
xor
sar
sahf
cmp
lods
dec
xchg
lock
or
pusha
add
push
or
ss
add
test
push
or
iret
xor
push
sbb
and
jp
jo
rcrb
sbb
jbe
loop
or
fidivl
sbb
add
mov
push
test
dec
sub
adc
rorl
xchg
lret
sub
inc
aaa
and
adc
and
cmp
inc
je
jg
test
cli
decb
push
push
stos
mov
or
mov
inc
inc
sub
aas
pop
cmpl
sub
mov
ss
pop
fildl
add
sub
and
dec
mov
xor
sbb
xor
inc
mov
or
adc
adc
pop
repz
dec
orb
push
cmp
inc
xor
xchg
add
sub
addl
test
jle
das
adc
xor
movl
icebp
adc
add
sub
or
and
test
push
adc
push
mov
jo
scas
push
pop
addb
lock
es
add
add
nop
sbb
xlat
mov
xor
sub
test
andb
int3
js
insl
sti
sub
aaa
mov
sbb
aas
push
cmp
mov
ljmp
or
mov
mov
mov
data16
mov
add
adc
mov
and
xchg
pushf
aam
or
fdivs
aad
xchg
mov
mov
loopne
jg
shrl
test
and
daa
xor
pop
fsub
mov
mov
rorb
jge
sbb
jo
cmp
outsb
mov
testb
pop
add
jp
faddl
andb
jb
push
xchg
and
or
mov
ret
mov
push
cmp
inc
shlb
outsl
add
pop
loopne
mov
xor
imull
push
mov
mov
fiaddl
or
fs
mov
inc
cmp
add
jmp
inc
mov
ljmp
roll
fcmovnbe
adc
push
insl
nop
cmc
jne
hlt
negl
fwait
scas
add
jg
or
jb,pn
push
cmp
ja
jb
aam
pop
cmp
mov
jbe
dec
sub
add
add
in
mov
fisubrl
jl
add
mov
jno
pop
ret
int3
lods
push
mov
push
sbb
hlt
push
adc
jo
push
push
stos
loop
aas
dec
or
pushl
rorb
cmpsl
and
pop
movsb
ret
rol
test
mov
push
inc
dec
xchg
add
ret
mov
mov
roll
ret
add
jo
cmp
adc
adc
and
xorl
inc
dec
cmp
aaa
sub
data16
jmp
push
mov
mov
inc
testl
push
icebp
adc
stc
jb
je
and
es
jb
loope
xchg
inc
add
cmp
jb
rclb
fdivrs
ja
adc
ljmp
inc
add
popa
adc
mov
cmp
dec
push
outsl
inc
pop
cmpsb
pop
mov
sub
push
mov
call
loopne
cmp
test
aam
andb
xor
xchg
fimull
xorb
pop
dec
scas
sbb
stos
es
ds
aad
mov
lock
ret
mov
jo
aaa
mov
or
inc
dec
fisttpl
fcomps
loope
mul
je
xorl
adc
mov
sub
rcll
outsl
xor
sbb
xorb
mov
push
mov
aam
into
out
adc
incl
test
xor
xor
push
shlb
clc
jo
sub
or
inc
mov
mov
lahf
mov
fwait
mov
mov
js
cli
pop
push
cmp
movsb
cld
xchg
loop
ss
push
shrb
sbbb
sbb
loopne
push
xor
xor
or
loop
sub
jmp
stc
jbe
rcl
scas
pop
divb
xor
push
movsl
cmp
inc
sbb
in
adc
xchg
add
sub
je
sub
fbld
cmpsb
jbe
xor
or
sub
pop
mov
or
int3
nop
jne
nop
or
ret
mov
jno
inc
xchg
mov
mov
aad
sbbl
daa
jl
je
and
pushl
mov
sub
jno
adc
lcall
or
ja
jp
loopne
lock
rolb
inc
orb
and
dec
test
mov
or
add
test
add
js
jecxz
inc
negb
or
push
sub
adc
push
inc
inc
cmp
add
xchg
mov
out
aam
xor
jno
cmp
add
flds
cs
adc
movl
dec
testb
cmp
loope
adc
das
lock
adc
scas
adc
ret
mov
movl
adc
insb
loope
pop
and
pcmpeqb
push
iret
push
add
pop
pop
fcoms
pop
and
xorl
ja
pusha
mov
and
xchg
jle
dec
dec
fadds
mov
out
lcall
fs
pop
pop
mov
mov
das
cli
push
adc
ja
mov
lea
add
ret
inc
fs
insl
add
and
dec
mov
jg
addb
add
jo
and
mov
inc
push
lcall
ret
mov
mov
dec
dec
data16
jmp
add
add
pop
sar
or
loopne
cmp
cmp
inc
mov
cmpsb
int3
inc
add
xchg
mov
mov
mov
push
push
xor
push
inc
cmp
call
mov
dec
inc
ss
jl
enter
sbb
pop
xchg
cmp
fildll
dec
push
mov
shl
adc
xor
and
jbe
inc
dec
adcl
pop
das
mov
add
inc
jo,pn
testb
mov
push
xor
dec
shr
addr16
insb
add
add
or
sub
push
cmp
jg
jbe
add
or
mov
push
add
stc
xor
add
and
lahf
aas
data16
ret
aaa
sbb
or
ret
aam
add
lcall
dec
jl
icebp
sbb
push
cld
enter
stc
fiaddl
inc
add
push
inc
jo
int3
pop
push
sbb
fists
or
mov
inc
sti
push
or
jbe
mov
cmp
add
ja
or
xorl
cmp
pusha
push
xor
mov
add
mov
cmp
dec
mov
mov
cmp
jb
sub
mov
leave
js
add
fisubs
cmp
sar
add
push
inc
sti
add
rcll
push
cmp
mov
or
and
movsl
cli
sub
cld
adcb
lods
inc
cmp
mov
sub
sub
mov
xchg
xchg
cli
hlt
pop
add
sbb
pop
push
pop
fisttpl
dec
insb
add
mov
or
add
out
test
inc
in
pop
adc
adc
jbe
fdivrs
or
lock
shlb
xchg
sub
ja
or
ljmp
add
xor
mov
insl
inc
loope
push
mov
inc
sbbb
mov
mov
push
inc
jae
adcb
adc
cmp
add
xor
decl
mov
adcb
or
jl
test
sbb
cmp
movsb
mov
test
add
and
fdivs
ret
addb
pop
add
mov
movzbl
popa
jb
xor
inc
and
push
sub
sahf
add
jb
mov
mov
lret
xchg
pushf
nop
icebp
aaa
flds
inc
int3
add
insb
fnstenv
dec
mov
mov
push
sub
ljmp
jl
or
movsb
lock
lahf
cmpl
xor
xor
inc
jg
dec
jo
push
pusha
je
movsb
add
push
push
sub
and
ret
mov
xchg
sub
mov
xor
lahf
into
push
mov
xor
movsb
mov
or
bound
arpl
test
push
addb
sarb
cmp
jae
nop
leave
pop
adcl
or
dec
fistps
sarl
sub
push
adcb
ret
xchg
shl
arpl
adc
inc
leave
sub
movb
mov
arpl
ret
dec
je
xchg
aaa
jl
inc
push
ja
jl
pop
lods
add
sub
xchg
out
insb
cmp
addr16
testb
inc
add
shl
and
insb
xor
pop
popa
stos
xor
aam
mov
loope
fldt
sar
pop
sbb
add
outsb
or
xor
dec
adc
mov
mov
jmp
push
mov
or
movsl
push
pop
mov
add
int
dec
sub
mov
rol
dec
or
pop
rcrl
or
cmp
mov
inc
jg
incl
dec
mov
pop
dec
inc
adc
inc
data16
incl
jo
rorb
sub
enter
mov
cmp
stos
je
mov
dec
add
cmp
std
addb
push
mov
add
ds
testb
sha256rnds2
jns
xor
push
push
ret
jg
test
mov
leave
xor
aaa
pop
hlt
sub
dec
shrb
ror
cmp
int3
push
mov
pop
out
adcb
popa
test
pop
xor
sahf
mov
pushf
sub
pop
icebp
jl
dec
jl
les
pop
jo
fildl
pusha
push
lea
inc
lcall
or
les
pop
jae
popl
cli
loopne
out
or
aaa
cs
sbb
pushf
push
add
loopne
adcb
clc
mov
pop
pusha
test
and
ss
mov
add
sub
pusha
cmp
inc
lds
repnz
push
sub
outsl
sbb
jb
pop
pop
add
add
dec
inc
pop
insb
adc
adc
es
mov
mov
dec
js
test
mov
test
mov
pusha
cld
scas
mov
add
xchg
das
sub
ja,pn
push
sbb
mov
mov
fbld
loope
add
mov
shlb
adc
gs
mov
jbe
jbe
add
jg
push
push
js
loopne
subb
cmp
cltd
popa
pop
loopne
jg
fimull
cltd
dec
mov
je
sub
lahf
movsb
rolb
mov
std
mov
push
xor
mov
popa
data16
sub
cwtl
mov
pusha
push
mov
cld
bound
lahf
loop
mov
lock
mov
pushf
loop
mov
add
ficoms
sub
fidivl
or
leave
and
push
subb
call
ljmp
mov
ljmp
mov
cmp
or
addl
inc
push
mov
jbe
inc
sbb
loop
mov
fcomp
mov
mov
fdivl
pop
xor
rolb
std
and
pop
addl
jp
and
push
aam
movsl
out
inc
push
popa
leave
in
cmp
inc
or
cld
outsb
dec
loop
and
jne
loopne
mov
and
movsl
int3
push
inc
lahf
loopne
cmp
test
pop
test
loopne
xchg
add
add
or
fcmovb
push
scas
pop
insb
test
cmp
in
loopne
loop
inc
fadds
mov
loopne
push
adc
loopne
inc
movsb
lods
loopne
sbb
sbbl
jg
dec
insl
pusha
cmp
getsec
jne
addb
incl
popa
xchg
mov
xor
push
je
loope
loope
ja
add
add
jg
loop
rcrb
popa
insl
jb
mov
js
outsl
add
and
pusha
aad
push
pusha
and
rcll
inc
mov
cmp
popa
inc
addr16
cmc
add
loopne
mov
cmp
out
jmp
jne
mov
call
add
add
ret
dec
cli
inc
loope
test
icebp
jg
xchg
xor
bound
pop
popa
lcall
popa
adc
jp
add
lahf
cmpsb
add
cmpsb
ret
icebp
or
js
loopne
fmulp
mov
or
cld
test
cli
jl
push
sbb
nop
aaa
pop
clc
mov
out
inc
adc
cmc
call
sub
push
ja
push
shll
ja
popf
test
pop
mov
jbe
jmp
or
and
mov
insb
or
jbe
dec
mov
dec
add
push
sub
sub
adc
movl
test
cltd
sbb
lcall
push
dec
push
push
dec
movl
add
add
and
mov
or
and
sub
divl
leave
push
fisubrs
addb
sub
pusha
insl
push
push
xor
or
xor
sub
into
push
faddp
add
inc
mov
loope
sub
xor
jl
push
sbb
jl
ljmp
repz
add
add
push
push
sbbb
dec
in
and
or
rorb
adc
loopne
ss
cmp
scas
mov
pop
test
call
mov
clc
rcrb
or
test
sub
add
fwait
xor
into
xor
add
xchg
xor
sub
movhlps
adc
dec
les
or
pop
or
das
movsb
jle
mov
pop
call
pop
sbb
or
pop
sub
mov
pusha
xchg
sbb
in
sbb
lods
sub
pop
int3
in
mov
int3
inc
push
repz
jmp
mov
xor
lods
mov
test
loope
notb
out
xchg
sbb
mov
fucomi
cs
xchg
or
lcall
push
pop
in
mov
push
ret
pop
and
mov
icebp
xchg
inc
dec
and
pusha
inc
test
push
jo
jo
and
pop
cli
mov
push
outsl
xor
mov
jl
xor
jne
aam
je
and
std
xchg
push
dec
xlat
xchg
xchg
mov
call
ret
lret
fcmovnbe
das
fdiv
pop
and
mov
xor
or
adc
popa
fildl
mov
inc
xor
and
imulb
push
xchg
enter
add
adc
aaa
roll
call
cs
and
pop
xor
xor
mov
popa
jg
add
pop
mov
aam
pop
pop
addr16
pusha
add
lods
bound
loopne
sub
push
lods
or
test
test
pop
push
rcrl
stc
je
inc
insb
xor
ja
jmp
sub
adc
ret
add
sti
data16
push
shl
inc
ret
mov
cmp
fidivl
ret
mov
xor
pop
cs
test
outsl
add
xchg
xchg
std
cmp
push
adc
icebp
lcall
and
scas
and
or
dec
fucomip
lock
mov
or
rcl
lods
aas
hlt
jne
movl
nop
shlb
adc
aaa
add
mov
pop
cmp
clc
sbb
jbe
mov
push
je
cmp
adc
pop
inc
loopne
and
pop
push
invd
xchg
adc
push
add
orb
test
inc
testb
std
aas
shrb
movl
cld
adc
test
rorb
fs
sub
mov
clc
outsb
add
push
mov
sub
inc
inc
or
pop
addb
or
aaa
inc
xor
push
cmpl
mov
ss
pop
add
push
inc
sbb
or
lock
push
sbb
cmpsl
hlt
push
mov
lock
stos
add
adc
xor
test
pop
pusha
loopne
jmp
pop
xor
mov
cmp
mov
mov
add
mov
add
popf
inc
xchg
lock
filds
test
push
or
and
dec
push
popa
or
pop
fmul
icebp
decl
sbb
inc
jo
movb
pop
sbb
push
mov
push
add
lock
pop
cmc
sub
jmp
xor
loope
jl
inc
cmpl
or
decb
jno
inc
sub
mov
mov
jmp
xorb
fisttps
imull
jecxz
add
mov
mov
pop
loopne
testb
or
enter
push
clc
shrb
mov
and
fdivs
push
cmp
xor
out
jae
enter
sbb
push
mov
or
or
fdiv
xor
shll
xor
mov
dec
xor
dec
or
push
add
test
lock
sbbl
adc
jge
xorb
add
sub
mov
loopne
pop
in
testl
mov
mov
rcll
push
adc
filds
mov
cmpsb
push
scas
call
and
push
fwait
stos
mov
out
pop
or
in
mov
adc
fisttpll
and
in
mov
inc
xchg
mov
pop
test
cld
mov
inc
fbstp
loope
insl
jge
lock
add
clc
xor
or
xchg
shl
sub
ds
scas
call
in
mov
clc
out
decl
push
scas
push
pop
add
and
pop
adc
xor
out
xchg
cmpb
jle
mov
or
mov
or
dec
lret
pop
or
xor
pusha
mov
push
pop
mov
pop
js
pop
or
pop
mov
xor
xbegin
jno
add
call
pop
sahf
mov
ss
mov
imul
es
lock
adc
inc
pushf
lock
mov
rolb
mov
popf
add
push
add
loopne
xor
mov
add
mov
fdivs
gs
sub
mov
add
xor
mov
shll
mov
adc
cmp
mov
xor
mov
rorl
pop
add
ret
mov
cmpsb
icebp
dec
jmp
dec
ficoms
dec
in
popf
push
jle
lret
aam
in
xor
jg
mov
pop
aam
inc
xchg
in
sbb
orb
mov
or
push
fcmove
sbb
fs
jle
hlt
out
and
pop
notl
sub
mov
sub
jg
shll
xchg
mov
mov
adc
stc
jo
icebp
adc
push
and
xchg
xor
xchg
call
or
mov
xor
jo
stos
lret
and
mov
cmpsb
aam
add
sarb
cmp
mov
mov
incl
xor
idivl
outsl
js
add
jb
xor
or
aam
mov
cmpsl
icebp
push
ljmp
es
in
das
orl
mov
mov
loopne
fidivs
push
lock
xor
sbb
aas
xor
push
nop
jp
and
dec
pop
xor
add
adc
insl
mov
ss
or
sbb
fld
inc
add
roll
cmp
and
dec
add
xor
add
nop
loopne
pop
lret
dec
test
dec
dec
js
push
lock
xor
mov
insb
arpl
loopne
test
push
inc
leave
ret
mov
outsl
jb
loopne
addb
data16
pop
test
mov
mov
and
in
pop
loopne
pusha
mov
lea
rolb
test
sub
mov
loopne
or
add
daa
lea
hlt
push
cmp
scas
sti
subl
cmp
adc
jmp
or
insl
cwtl
inc
out
sub
add
add
xchg
dec
pusha
xchg
insl
mov
push
adc
dec
popf
and
fs
rcrl
lret
xor
push
dec
or
stos
inc
pop
mov
and
mov
push
arpl
cmp
stos
or
add
push
je
mov
loopne,pt
sbbl
mov
and
sub
nop
loope
and
sub
and
sbb
ret
cmpb
shll
out
in
or
adcb
subb
or
loop
add
addb
dec
icebp
and
mov
cmp
subb
sbb
fisttpl
clc
add
outsb
sbb
enter
orl
mov
loope
sub
and
icebp
cwtl
sbb
mov
cli
das
sbb
jae
adc
and
xchg
add
in
jo
lret
cs
ret
pop
and
sbb
dec
dec
loopne
xchg
sub
push
jmp
sar
das
pop
les
add
test
or
jmp
add
adc
push
outsl
push
test
rol
or
mov
out
add
shrb
jmp
add
shrb
cmp
mov
clc
incl
or
je
adc
or
sbb
loopne
mov
add
fbld
xor
dec
adc
push
les
add
and
sub
cli
ret
ja
cmp
inc
cwtl
repz
pusha
mov
mov
rclb
jne
addb
lds
push
shlb
mov
mov
mov
movsl
sub
or
add
pop
ret
add
lock
mov
push
push
scas
or
js
add
or
inc
clc
add
xchg
dec
adc
rolb
insb
jmp
popa
add
jae
ror
sub
iret
orl
inc
ret
idiv
push
jl
add
rcll
cmp
and
int
add
push
and
sub
jl
shl
adc
cmpl
cmp
jbe
pop
invd
js
stc
rcrb
pop
fadds
stc
pop
inc
xchg
shlb
add
fs
mov
incb
ja
addb
add
test
stos
add
rcl
test
cmpsb
adc
and
add
inc
mov
fcompl
pop
push
outsl
mov
push
inc
mov
mov
loopne
hlt
adc
mov
adc
cmp
shr
or
or
popa
pusha
or
inc
xor
fildll
notb
incl
out
xchg
add
mov
or
mov
xchg
lock
push
sbb
push
and
push
les
call
aam
or
jb
push
xchg
cmpsb
test
sub
fsubs
cmp
xor
pop
jl
add
add
pusha
inc
mov
cld
inc
pusha
adc
loopne
sbb
xchg
push
add
pusha
sbb
or
xchg
cli
and
je
andl
mov
mov
arpl
or
loope
int3
int
imul
pusha
pop
mov
mov
or
clc
fistpl
sbb
pusha
inc
inc
push
ja
mov
loopne
adcl
out
jae
in
cmp
data16
sbb
repnz
add
sbb
inc
mov
int3
add
shr
sub
or
hlt
or
push
or
and
push
pusha
mov
mov
pushl
push
adc
pusha
mov
add
mov
push
shl
sub
or
or
inc
pusha
shlb
add
or
loopne
cmp
pushf
sahf
aam
outsl
adc
dec
xchg
inc
push
push
stos
outsb
push
add
cld
das
cli
pusha
or
pusha
mov
add
push
and
cltd
cmp
rorb
xor
dec
jb
add
out
sbb
popa
or
movsl
call
or
adc
mov
in
test
inc
add
add
adc
pusha
pop
adc
jecxz
pushf
clc
jmp
lods
fsubl
cld
fcoms
xor
sub
mov
fidivrl
or
and
sub
lahf
sub
push
push
pop
push
ja
xchg
add
into
pusha
inc
xchg
loop
or
fiaddl
push
mov
loop
add
clc
scas
fsubs
fidivrl
jne
jecxz
or
push
adc
frstor
or
cmp
dec
je
mov
std
loopne
loopne
adc
test
addb
jmp
push
dec
lret
sbb
outsb
loopne
adc
pop
mov
mov
or
push
lret
push
lea
mov
push
out
pop
pusha
loopne
ljmp
or
pusha
push
or
dec
push
push
pop
fildl
cmpsb
pop
and
imul
mov
stos
clc
or
jo
test
jne
adc
jecxz
jg
fldl
push
push
inc
lea
jge
ljmp
imul
jle,pn
cli
mov
mov
negb
scas
adc
outsl
xchg
jo
mov
mov
pop
dec
daa
inc
out
adc
or
mov
pop
mov
and
out
subb
sahf
test
or
mov
dec
mov
sub
lods
add
in
xor
pushl
loopne
bound
jno
movl
pusha
mov
pusha
aaa
insb
dec
cmp
imul
jmp
push
roll
repz
roll
sbb
pop
addb
xor
sub
or
inc
xchg
xor
push
rol
pop
ss
loope
test
sub
add
dec
js
ss
sbb
enter
clc
pop
aad
dec
mov
mov
mov
roll
xor
inc
add
adc
dec
sbb
lret
lock
jbe
pop
sti
imul
or
jo
lods
cld
inc
ja
fcompl
inc
cmp
aaa
jne
pop
fs
xchg
xor
inc
sub
insb
ficomps
clc
das
push
mov
xor
sub
xor
pop
or
add
mov
cli
mov
mov
icebp
adc
add
decl
sbb
add
push
out
mov
inc
mov
cmp
sbb
lock
cmp
adc
add
xor
push
fcoml
xor
hlt
mov
lret
mov
dec
enter
sub
lock
jle
lock
stos
pushl
xor
add
pop
testb
sahf
mov
hlt
or
or
sbb
inc
inc
sub
jmp
mov
lock
mov
xchg
lock
push
mov
aaa
mov
pop
mov
je
add
enter
mov
mov
push
roll
sti
push
mov
lcall
sbb
mov
push
pop
add
sbb
fcomi
aaa
or
push
repz
push
lcall
sbb
jne
in
sbb
sbb
inc
mov
add
push
lret
dec
mov
jo
pop
jbe
mov
nop
jo
jbe
xor
push
sar
pop
jbe
dec
je
sub
dec
sbb
xor
pusha
jae
mov
jecxz
mov
jb
dec
add
scas
add
inc
cmp
cld
js
std
jg
sub
xor
adc
cwtl
add
adc
rcl
shr
dec
xor
dec
lret
add
add
dec
pusha
xor
sbb
nop
inc
and
xchg
cmpsb
bound
and
add
cmp
aam
sbb
jbe
xchg
mov
mov
mov
sub
push
inc
dec
aam
jle
or
add
add
ss
lock
xor
or
fs
mov
aam
pop
add
out
fmuls
jbe
and
mov
dec
and
call
aad
jg
lock
xor
dec
push
xor
ljmp
mov
lock
xchg
mov
repnz
add
clc
das
clc
adc
add
cmp
and
mov
xchg
push
mov
test
push
ret
xor
xchg
nop
sbb
rorb
mov
mov
mov
and
mov
xchg
stos
movsb
sbb
js
call
rolb
or
jbe
add
pop
mov
inc
loopne
xchg
add
iret
icebp
add
adc
jne
repnz
lret
xor
loop
std
orb
nop
push
xchg
sbb
sbb
sarl
out
or
pop
movl
test
adc
clc
xchg
mov
xor
mov
sbb
jmp
call
push
clc
stos
je
pop
ljmp
test
test
subb
push
movl
xchg
mov
xchg
fmul
cmpb
add
and
pop
loope
and
call
addl
popa
lock
mov
inc
cmp
mov
orb
int
or
sbb
or
mov
loope
popa
sbb
std
push
or
jae
add
mov
or
adc
add
jg
add
mov
rolb
pop
sarb
in
cs
test
xor
and
pop
in
push
loope
test
adc
ss
jmp
push
or
movsb
mov
pop
movsb
mov
std
or
aam
mov
orl
cwtl
incb
mov
and
mov
jp
add
pop
sub
das
xor
incb
push
sub
push
call
dec
jo
add
repz
aam
pop
add
jae
or
jbe
adc
pop
inc
cmp
clc
adc
clc
xor
jmp
clc
push
adc
or
push
push
inc
insb
sub
pop
mov
jp
inc
ret
pop
lods
cli
or
sbb
xchg
test
mov
lock
push
add
add
or
push
mov
xor
movsl
insl
clc
push
lods
pop
mov
sub
adc
dec
or
nop
mov
push
sbbb
icebp
rcll
jmp
int
pop
sub
push
mov
arpl
fsubrp
push
adcl
cmpsb
add
xchg
and
adc
enter
mov
cmpsb
dec
jle
inc
xor
adc
out
mov
nop
xor
testl
loop
inc
or
adc
cli
loop
or
jbe
rcll
add
fstpt
mov
cmp
ss
shll
inc
mov
pushf
or
ja
fcmovbe
xor
mov
sub
lods
decl
dec
cld
stos
shrb
add
inc
jecxz
daa
inc
and
inc
icebp
pop
out
and
dec
imul
fs
push
ss
add
fst
adc
push
shr
push
pop
push
sti
out
pop
adc
mov
mov
dec
jb
adcl
jl
adc
push
adc
cmp
adc
ds
scas
add
inc
pop
dec
sahf
mov
and
decb
lea
pop
pop
pop
jo
push
or
mov
mov
testb
adc
inc
mov
mov
mul
ds
pop
fwait
sub
cmp
mov
or
or
inc
jle
mov
sbb
scas
test
jecxz
adc
sub
mov
sahf
mov
insl
mov
add
mov
pop
std
add
cld
add
push
mov
imul
add
test
clc
dec
imul
add
lock
mov
add
dec
sbb
dec
testb
addr16
mov
pop
orb
shr
test
rorb
or
add
scas
test
ret
es
ljmp
add
add
addr16
lock
cld
cmpsb
inc
out
pushf
add
pop
rcrl
add
enter
loope
xor
cli
mov
pop
lret
or
test
int3
mov
and
pop
mull
das
push
fcmovb
orl
divb
add
or
loop
jbe
pop
mov
add
sti
xchg
enter
leave
push
shrl
push
push
jl
and
cltd
in
divb
mov
pop
adc
test
mov
jle
adcb
je
sbb
and
jmp
enter
in
mov
mov
shlb
rcll
and
enter
push
aad
es
roll
add
fisttpl
rorb
push
xor
adc
popf
aaa
sub
je
lods
out
and
mov
push
sub
and
mov
cmp
in
push
sub
lcall
adc
pop
mov
ljmp
pushl
lar
ret
test
pusha
add
push
or
mov
xlat
add
add
and
sbb
push
pop
loop
shlb
pop
cs
ret
ss
add
rol
ss
mov
and
frstor
stc
push
add
int3
inc
and
fs
out
or
data16
jg
or
push
sbb
cmp
fimull
jb
ds
push
add
orl
adc
and
pop
lock
loope
call
enter
sbb
nop
sub
bound
cmp
popa
cmp
scas
insb
mov
andb
inc
push
xor
add
rorl
mov
add
rcrb
loopne
mov
inc
lods
xor
sub
sbb
fwait
pop
adc
mov
and
dec
pop
int3
stos
push
push
push
jl
and
roll
cmp
mov
adc
hlt
mov
adc
inc
lret
mov
and
pop
jl
add
jecxz
or
mov
es
mov
push
addb
mov
je
adc
pop
dec
sahf
jl
lock
out
jb
jbe
sbb
cmpsb
je
push
lea
je
insb
cmp
fdivs
and
cmp
xchg
shll
pop
mov
dec
xor
je
js
rolb
test
notl
ret
test
pop
mov
pop
cmp
loopne
repz
adc
jmp
mov
fmul
jle
cmp
mov
bound
pusha
loopne
mov
adc
cwtl
lock
pusha
add
shr
xchg
mov
cli
mov
add
adc
jne
mov
je
adc
push
adc
mov
sar
enter
cmp
lea
es
xor
pop
adc
movsb
jne
subl
add
adc
jno
ret
lock
jl
add
sub
rolb
sti
cmp
fisttps
call
pop
jge
add
and
xchg
adc
cli
jg
mov
mov
pop
inc
js
fucomi
dec
or
sbb
popf
shlb
add
insb
sti
sbb
mov
dec
loope
rclb
mov
jmp
jmp
sbb
popa
or
bound
mov
inc
mov
cld
cmp
pop
sbb
sub
mov
fdivrs
ret
mov
std
xchg
adc
out
pop
cmc
popa
jae
leave
lods
cli
in
mov
imul
sub
outsl
je
insl
xchg
loope
xor
jae
lcall
decl
lea
insl
and
and
xor
gs
adc
adc
inc
xor
cmp
jg
sub
loopne
jb
xchg
loopne
mov
outsl
inc
add
mov
mulb
iret
js
jne
es
lea
and
loopne
add
mov
or
and
cmpb
in
loopne
in
add
fisubs
xor
xchg
mov
subb
sbb
push
sbb
mov
and
ret
int3
loope
adc
nop
cs
adc
add
cmpsb
arpl
mov
lret
cmc
or
pop
loopne
xorb
or
insl
cmp
mov
sbb
add
pusha
shll
push
pop
imul
and
dec
bound
add
xchg
push
cmpsl
ljmp
adc
dec
mov
lcall
sbb
decw
add
pusha
movsb
adc
cld
mov
xor
or
stc
pop
adc
cs
dec
outsl
icebp
add
ss
add
cmp
addl
jno
mov
clc
and
lock
or
icebp
mov
jp
cmp
pushf
lods
int3
std
or
rolb
sub
sbb
and
adcb
add
mov
add
add
sbb
push
or
ret
xor
jp
leave
and
push
rcrb
in
cs
lret
adc
std
decl
inc
mov
adc
jbe
mov
add
mov
adc
ret
mov
mov
sete
or
dec
xchg
add
add
mov
dec
push
push
push
incl
adc
mov
mov
inc
cmp
mov
hlt
add
nop
not
es
push
mov
mov
adc
inc
inc
addb
iret
jle
mov
inc
mov
jle
pop
mov
jg
je
in
sbb
mov
test
stos
pop
and
testb
xor
cmovnp
pop
or
imul
decb
aaa
cmp
je
mov
lock
push
inc
xor
inc
mov
adc
lcall
add
fiadds
lret
js
xor
mov
mov
mov
ljmp
mov
cmpl
sbb
add
call
add
mov
lret
lock
scas
or
mov
xor
mov
adc
or
push
je
dec
rclb
pop
and
dec
cld
in
mov
mov
shl
jl
add
enter
mov
aam
pop
inc
sbb
js
je
scas
rolb
push
loop
stc
add
push
dec
sub
test
movsl
divb
fsubrl
in
adcl
dec
jo
xchg
xchg
dec
incb
lock
or
add
rolb
pop
add
stos
dec
pop
jb
add
mov
mov
add
and
push
fisttpl
ja
or
push
mov
lock
mov
fcompl
inc
adc
xchg
in
cmp
insb
add
dec
scas
and
imul
mov
nop
add
jo
mov
or
js
adc
call
push
adc
cmp
cmc
jg
mov
and
cltd
les
shlb
mov
inc
call
pop
dec
clc
add
cmp
xor
push
mov
lea
inc
je
inc
pop
mov
cld
add
inc
xor
xor
jg
pop
ret
adc
frstor
cmp
pop
jo
adc
mov
pop
or
or
push
or
push
stos
rcl
push
lock
icebp
ljmp
sbb
sub
dec
adc
jge
mov
pop
add
pop
stos
push
or
xor
push
adc
pop
movsl
subb
shl
les
test
incl
les
clc
movsl
xor
hlt
mov
add
xchg
icebp
lock
jo
sub
jle
mov
es
adc
xor
mov
xchg
xor
out
mov
inc
xor
jbe
jecxz
incl
aad
inc
xchg
add
dec
adc
scas
orb
sbb
mov
push
pushl
cwtl
dec
add
out
repnz
pop
jmp
lret
out
lea
data16
xchg
xchg
stos
dec
les
adc
adc
aad
std
mov
push
rcrw
cld
iret
sub
int3
mov
out
outsb
add
adc
add
orb
es
mov
or
pushf
or
jo
mov
stc
pop
mov
mov
sub
inc
xchg
lods
mov
cs
cmp
add
xorb
loope
mov
lcall
mov
sbb
dec
divb
pushl
xor
ja
outsb
outsl
mov
adc
jg
mov
inc
pop
lea
mov
and
ss
ljmp
inc
je
push
mov
mov
mov
cltd
or
cli
mov
ret
aam
xor
mov
adc
inc
pushw
sub
sub
push
out
popa
shl
xchg
jg
add
mov
add
add
sbb
sub
sbb
ljmp
mov
push
xor
ja
push
xor
cmpl
jle
jg
add
incl
mov
mov
xchg
call
and
push
out
add
mov
hlt
xchg
scas
addb
pop
jmp
lahf
and
loop
and
push
loopne
cmp
mov
mov
xor
sbb
lock
adc
nop
xchg
orb
add
xchg
sbbb
mov
in
out
imull
in
add
pop
test
add
mov
or
and
mov
stos
aaa
xor
mov
je
jno
adc
adc
dec
adc
sub
mulb
das
push
cmc
lock
jb
insb
hlt
or
and
lods
lcall
jo
jg
pop
xor
test
rolb
add
loop
rolb
es
or
add
mov
mov
mov
aad
incl
add
pop
ret
mov
adc
aad
data16
repz
hlt
and
sub
ja
jl
roll
out
mov
ss
inc
pusha
adc
decb
push
cwtl
push
andl
dec
mov
xor
mov
decl
sahf
sbb
xor
cmp
jg
sub
inc
test
sub
les
jne
and
jae
fistps
xor
mov
xor
stos
or
inc
test
mov
and
test
fsubl
ror
movsl
push
push
mov
pop
inc
fsubrs
dec
cwtl
mov
add
popa
xor
into
cmp
push
xlat
jle
jp
jl
add
lahf
jecxz
fs
add
mov
sbb
ficomps
ja
mov
scas
cli
in
test
shl
add
jp
cwtl
stos
sub
jo
jmp
adc
add
movb
push
mov
or
in
jne
inc
nop
pop
push
mov
pop
hlt
or
inc
jmp
cmp
jne
mov
mov
add
or
clc
xor
mov
adc
xor
lock
mov
and
and
jl
xor
pop
andb
push
sub
lds
stc
or
cmp
pop
lock
adc
add
imul
jne
orl
cmp
ja
jmp
mov
mov
inc
adcb
loopne
or
sbb
dec
sub
arpl
sbb
cli
mov
test
outsl
or
or
sar
dec
jl
adc
push
cltd
mov
and
adc
inc
inc
jecxz
and
jg
divb
xchg
or
xchg
inc
shlb
jle
fidivs
bound
cmp
xchg
mov
mov
dec
stos
call
movsl
call
mov
push
pusha
push
adc
inc
orb
jl
roll
dec
jecxz
push
xor
pop
jg
push
lret
cmovns
shlb
mov
pop
pop
xchg
adc
pop
adc
jg
mov
pusha
ja
adc
mov
mov
and
int3
ret
pop
stos
popf
lcall
rclb
shlb
loopne
in
jns
or
inc
lret
fcoms
xchg
push
or
hlt
cld
mov
arpl
add
lock
push
push
mov
push
popf
add
shrl
call
test
inc
and
rclb
mov
inc
sahf
adc
ljmp
pop
rorb
cmp
shrb
clc
lea
rclb
mov
ror
push
jne
xchg
inc
repnz
push
add
or
divb
sbb
sub
mov
cmpsb
cld
sub
test
jle
add
jle
pop
clc
ljmp
mov
fistpl
enter
mov
call
je
rcr
inc
ret
mov
add
adc
inc
shll
and
inc
rcrl
mov
push
jmp
xorb
out
and
push
imul
idivl
add
cmp
inc
adc
loopne
sub
add
sbbb
adc
xchg
loopne
push
pop
ret
lock
cmpsl
outsl
loope
mov
cld
scas
pusha
sub
adc
add
lcall
xchg
jbe
add
jmp
dec
add
loop
pushw
pop
inc
sbb
lds
nop
mov
jge
mov
addr16
sbb
aaa
outsb
inc
loopne
cld
mov
push
jp
xor
adc
arpl
mov
jmp
aam
adcl
data16
loopne
add
cmp
addr16
fisubs
ja
sbb
mov
xchg
pusha
xchg
and
test
popa
and
loope
lret
insl
pop
push
lea
hlt
mov
loopne
shll
sbb
adc
lret
mov
test
loopne
stos
filds
mov
mov
rorl
jl
pushl
dec
pusha
adc
mov
mov
arpl
mov
shl
jb
pusha
sub
mov
insl
add
outsl
inc
in
js
cmp
loopne
and
bound
cmpb
mov
daa
mov
lock
outsb
hlt
and
mov
lds
and
inc
negb
scas
add
or
push
inc
pusha
cmp
loop
pop
or
loope
adc
mov
inc
sarl
lret
mov
into
mov
mov
pop
sti
aaa
jp
popa
adc
push
adc
and
loop
mov
cwtl
adc
jno
mov
aam
or
clc
adc
cmp
push
std
pop
hlt
pop
cmpsb
arpl
adc
iret
jecxz
adc
cmp
popa
fs
add
xchg
add
or
sub
bound
out
dec
test
add
xorl
inc
clc
dec
call
lcall
cmp
es
dec
mov
cmp
pusha
cmp
mov
js
mov
lock
loopne
mov
sbb
fdivp
scas
rcll
into
jb
or
loop
loop
loop
mov
sbbb
loopne
xchg
fldt
mov
dec
add
cli
cmp
cmpsb
mov
loopne
pushl
cltd
xor
loop
add
inc
or
mov
pop
scas
xor
shrb
test
xor
ljmp
outsb
xchg
shlb
or
inc
inc
pusha
mov
clc
or
ljmp
dec
les
cltd
addl
aad
mov
test
adc
and
or
fs
mov
cltd
nop
cmp
push
inc
jp
add
jbe
pushf
dec
jl
adc
in
mov
push
dec
out
hlt
mov
call
ret
pushf
pusha
jg
rcll
pop
arpl
loope
je
jecxz
incl
push
or
in
or
and
push
add
in
adc
decl
call
test
adcl
xor
xor
int3
xor
ja
adc
cmp
jo
mov
xor
les
call
imull
add
xorb
jo
fmuls
mov
mov
sub
sub
add
jno
mov
add
sar
loopne
rol
and
imull
fwait
jg
lock
sbb
je
xor
lock
dec
cmp
or
ljmp
mov
das
inc
test
mov
pop
pop
jne
clc
or
addb
clc
pop
cmp
leave
add
sub
lret
inc
clc
mov
data16
icebp
mov
ret
push
dec
inc
aam
lret
pop
data16
xor
fistl
test
or
dec
add
dec
sub
cmc
sbb
push
xchg
xor
or
pop
clc
jg
dec
sbb
add
mov
pop
adc
pop
lock
les
adc
notl
test
data16
or
out
leave
outsb
dec
mov
cld
cmp
sbb
mov
fists
sarb
dec
cmp
hlt
xchg
adc
jb
jo
xchg
add
xchg
bound
add
test
cmpsl
out
sub
adc
data16
pop
lock
rolb
mov
std
xchg
lock
sarb
add
mov
mov
aas
push
mov
adc
jnp
pop
xchg
push
add
adc
pop
pushl
xor
or
hlt
dec
loop
outsl
adc
xchg
push
lock
mov
dec
test
and
and
and
dec
cli
add
lods
pop
push
adc
mov
add
xor
lock
add
repnz
sbb
movsb
and
or
mov
add
mov
pusha
addb
xor
fildl
lahf
or
pop
push
in
add
add
xor
jno
je
or
rcl
add
push
lock
push
and
mov
or
add
lock
pushf
adc
or
or
sub
loopne
lds
incb
shll
inc
mov
icebp
inc
clc
fucomip
mov
push
js
or
lahf
add
inc
xor
add
and
shrl
mov
add
movsb
dec
or
mov
movsl
sbb
xchg
mov
cwtl
imul
sbb
jg
or
jb
cmp
xchg
cld
mov
sbb
dec
adc
mov
push
dec
xchg
or
push
adc
pop
dec
out
mov
sub
lea
jno
adcb
mov
mov
loope
mov
jl
shlb
bound
inc
and
orb
mov
mov
stos
loopne
and
mov
imul
in
mov
jle
mov
jne
outsb
sub
cmp
xor
or
jl
out
mov
jge
jb
dec
inc
adc
mov
fldt
mov
sbb
add
inc
push
mov
imul
add
jb
clc
inc
sbb
mov
add
leave
cmpb
push
cli
call
sub
sub
mov
repnz
mov
adc
push
cwtl
dec
adc
sbb
movsl
fucomip
and
cmp
xor
mov
inc
sub
xor
sbbb
jg
dec
mov
ret
jl
adc
pusha
andl
je
dec
out
mov
push
jne
loopne
mov
mov
xor
adcb
adc
mov
test
adc
push
clc
cld
jno
jle
or
subb
jbe
inc
shl
sbb
rorl
jg
inc
mov
and
mov
pop
cmp
add
movsb
fistpll
mov
or
or
cmc
shr
xchg
inc
sub
jl
mov
cwtl
cmc
jg
mov
jmp
jb
dec
add
sbbb
ja
inc
or
or
mov
shl
cld
sbb
and
addl
mov
and
sbb
je
push
add
scas
mov
lea
or
cmpb
roll
sbb
pop
mov
or
sub
adc
xor
incl
mov
push
lds
pop
sbb
xor
jo
cmp
scas
inc
enter
shl
xchg
xor
clc
cmp
mov
je
daa
jno
jb
xor
lcall
inc
push
inc
scas
inc
push
call
pop
das
les
mov
push
lock
cmc
push
mov
adc
inc
or
push
mov
andb
fstpt
mov
mov
ja
or
shlb
je
push
addr16
cmp
sbb
mov
cwtl
push
sbb
dec
hlt
ficoml
xchg
sbb
lahf
aam
jl
xor
cmp
clc
rorb
and
sub
push
mov
mov
icebp
add
sbb
jnp
mov
cs
push
jo
into
sbb
inc
adc
in
lock
gs
lcall
mov
rcrb
rolb
out
push
pcmpeqw
scas
fidivs
add
add
lahf
lret
in
fiaddl
sub
pop
sbb
xchg
cli
retw
addr16
and
push
push
push
arpl
jo
mov
inc
add
cmpsl
mov
mov
push
push
mov
fildl
dec
sub
mov
pop
or
jmp
or
jmp
test
cmp
cmp
dec
add
mov
dec
fisubs
mov
add
jo
xor
fistps
sub
dec
and
push
sub
pop
xchg
xchg
mov
push
push
sub
outsl
adc
xor
dec
call
sbb
add
mov
adc
pop
popa
add
and
imul
clc
sub
xor
push
pushf
dec
loopne
or
cld
les
xchg
les
mov
mov
cld
sbb
loope
and
dec
jp
movsb
into
add
or
adc
adc
cmp
mov
sbb
in
filds
lods
pushf
mov
xorl
fbld
bound
mov
mov
outsb
add
into
addl
or
mov
outsb
and
lock
outsb
and
mov
push
jne
ret
std
jne
int3
hlt
jmp
cli
insb
into
xor
subb
sub
add
inc
pop
mov
pop
cmpsl
add
xchg
repnz
push
mov
addb
hlt
call
push
fs
and
mov
xchg
dec
sub
in
movsb
jne
push
pop
andb
mov
stos
daa
adc
add
ja
push
add
rol
adc
das
adc
addb
fidivrl
fcos
fnsave
jmp
xor
ret
adc
loope
int
in
jbe
pop
dec
or
lds
mov
lock
or
subb
mov
cli
add
subl
test
test
or
div
cmp
push
test
push
pop
mov
inc
shrb
cwtl
aad
and
sub
in
ljmp
es
aam
loop
or
xor
jb
sub
mov
sub
jl
mov
inc
mov
push
movb
orb
pop
cld
repz
rcll
out
lcall
cli
add
cmp
outsb
stos
mov
or
xor
mov
push
mov
xchg
mov
cld
scas
inc
pop
pop
push
inc
jne
lds
xchg
add
sar
pop
test
inc
add
jmp
sub
pop
int3
pop
or
pop
out
sbb
enter
xor
fld
xchg
cmp
or
lret
jo
jne
add
cmp
cld
rorl
mov
pop
mov
lock
adc
or
jbe
sub
lock
pop
push
les
in
cmp
jbe
cmp
roll
lods
scas
lock
sub
pusha
ret
out
sbb
test
hlt
decl
push
or
dec
rorl
adc
fisttpll
sbb
and
cld
pop
add
mov
inc
movd
mov
setno
cmpsb
mov
lret
and
xchg
adc
pxor
jbe
fcomps
nop
inc
rol
addl
ja
adc
push
lock
cli
repz
jl
and
add
pand
movd
xor
fsubrl
orl
xor
leave
out
adc
sbb
out
stos
pop
fistl
xchg
cli
jmp
sarb
rol
or
cld
or
rorl
or
nop
pop
push
sub
xchg
mov
lock
enter
sub
fsubl
and
lods
xor
mov
nop
cmp
ljmp
lock
mov
hlt
fmull
sub
jg
mov
orb
push
rcrb
call
add
test
adc
sub
cmp
test
jno
test
repnz
addb
push
push
call
adcb
or
bound
je
test
cmp
push
mov
das
push
jne
andl
mov
loopne
push
dec
fisttps
sub
std
add
movl
imul
mov
inc
and
adc
fiaddl
and
and
or
mov
push
je
int3
bound
ret
cmpsb
jo
out
cld
lret
in
add
or
jmp
push
ret
and
pusha
push
es
scas
clc
incl
popa
inc
cmp
adc
sub
loop
pop
dec
inc
cmp
jbe
sub
push
jmp
in
xlat
out
loopne
sub
add
gs
cs
add
mov
push
in
mov
jecxz
bound
and
push
and
lock
mov
sub
mov
or
jb
and
loope
sbb
fbld
mov
loopne
mov
loopne
pop
sbb
inc
add
xchg
dec
out
lock
adc
sbb
adc
les
push
mov
pop
add
into
xor
ds
cmp
sbb
imul
js
js
mov
push
lret
cli
push
push
xor
push
sub
aam
mov
loopne
pop
ret
cld
adc
adc
cli
ljmp
inc
sbb
sbb
in
jne
loop
add
mov
and
js
pusha
add
fidivs
push
pusha
ljmp
or
or
out
loope
rcl
sbb
pusha
ds
fbstp
and
filds
pusha
mov
jmp
sub
mull
outsl
pop
sub
xchg
lods
mov
popf
sbb
incb
jl
cmp
dec
loopne
ss
nop
cmp
or
mov
jbe
test
lods
adc
test
shrb
fmuls
xor
aas
pop
or
jmp
loopne
mov
inc
dec
pop
push
adc
cmp
aad
sbb
imulb
push
cs
push
and
mov
outsb
pop
and
mov
and
jo
jge
inc
cld
je
in
adc
ret
jmp
loope
ljmp
sbb
jo
mov
push
loope
pop
dec
cmp
and
shlb
mov
cmpsb
andb
fiaddl
mov
push
mov
pop
test
pop
into
adc
add
sub
push
js
inc
dec
adc
push
enter
fdivs
push
add
fnstcw
sbbl
mov
xor
mov
or
je
aam
xchg
cs
add
and
or
test
loope
jmp
add
or
ljmp
mov
jmp
or
add
adc
shlb
sbb
push
push
rcrb
xor
sbb
inc
push
xor
pusha
insb
or
mov
aam
cmc
dec
mov
mov
dec
ret
cmp
aad
dec
in
xor
sub
and
neg
mov
rolb
pushf
insb
jg
pop
xchg
cmp
in
pusha
xor
xorb
jle
adc
or
add
and
add
adc
cld
fs
or
bound
pop
pop
or
int3
pop
lea
jge
cmp
cwtl
dec
xor
hlt
cmp
jmp
mov
mov
push
icebp
add
sbb
repz
mov
sbb
roll
adc
add
push
enter
push
dec
out
dec
fs
lret
sbb
lcall
jbe
ja
adc
scas
and
mov
mov
lahf
jo
jbe
jmp
push
adc
lret
je
int3
jge
mov
flds
lret
rcrl
push
or
enter
xor
add
mov
push
cmp
inc
pop
lods
jg
jno
call
dec
and
test
je
push
inc
fwait
loope
dec
cmp
mov
xchg
or
lds
js
and
add
pushw
call
loopne
subb
push
movsb
aam
jo
inc
outsb
loope
jle
jnp
xor
cmp
test
sbbb
xor
add
add
cld
sbb
mov
jne
or
push
push
sarb
adc
mov
sub
and
lock
or
fisubs
xor
loopne
add
or
xor
jae
ret
jbe
call
sub
pop
push
inc
inc
sub
rclb
adc
sbb
mov
pushf
cmp
ret
sub
sbb
inc
dec
fcomip
add
mov
mov
mov
mov
cli
stos
jo
add
push
or
inc
mov
add
jae
dec
push
push
mov
data16
push
jle
ss
ret
sar
popa
fcomi
jbe
lods
dec
xchg
push
jbe
sbb
sub
lock
xchg
orb
mov
int3
cmp
add
sub
inc
jecxz
push
xor
inc
clc
ja
test
mov
mov
shr
cmp
sub
je
mov
nop
lock
hlt
adc
dec
repnz
mov
jo
shll
push
or
mov
movsb
decl
jne
pop
sbb
xor
mov
pop
mov
stos
test
test
ret
mov
mov
icebp
add
adc
ret
mov
adc
cmp
pop
cs
mov
adc
adc
mov
mov
add
add
mov
jmp
ljmp
repz
sub
test
jg
out
shll
xor
add
pop
adc
and
jo
add
add
sbbb
and
mov
pop
adc
xchg
cwtl
and
out
sub
loopne
and
jle
xor
mov
push
scas
pop
lock
xor
pop
loop
push
aas
subb
xor
add
ja
cli
and
push
daa
rolb
aad
inc
add
or
add
push
in
or
data16
es
mov
xlat
mov
mov
and
jns
sbb
jo
fnsave
dec
xchg
xlat
sbb
js
pop
adc
adc
movsl
pop
imul
fwait
adc
pop
fdiv
jg
add
add
inc
in
push
sahf
ss
mov
adc
pop
push
push
push
add
cmpsb
imul
push
inc
pushf
cmp
inc
fiaddl
fbstp
cmp
lock
push
adc
insb
mov
xor
mov
fldt
nop
mov
clc
and
insl
cs
pop
mov
repz
test
add
dec
or
insl
in
pop
cld
cs
lods
insl
inc
mov
mov
sub
fisubrl
mov
xchg
movsb
data16
lods
sub
xor
jl
js
mov
fistpl
pop
adc
cli
or
or
mov
std
or
add
or
test
xor
mov
sub
and
insl
loopne
fnstcw
add
add
outsb
add
out
push
lock
aam
scas
ret
sbb
or
mov
mov
int3
add
das
rorb
imul
sub
fiadds
jmp
cwtl
sbb
mov
mov
inc
out
add
lock
jp
enter
inc
push
daa
cmp
out
xor
dec
xor
stc
orb
pop
and
mov
mov
or
cld
push
mov
xchg
inc
inc
push
dec
cmp
loopne
xchg
das
add
add
out
roll
xor
pop
jb
andl
sarl
add
push
push
andl
push
repz
adc
fwait
loopne
push
adc
push
loope
push
aad
sub
daa
adc
out
sub
xor
push
sbb
sbb
subb
xorb
xor
or
in
orl
or
mov
fmuls
lock
stos
jae
sbb
adc
subl
pop
mov
or
les
mov
mov
lds
call
ljmp
push
pop
jo
push
or
in
orl
test
inc
mov
lods
adc
mov
fcompl
or
add
or
or
popf
inc
imul
add
xchg
mov
dec
hlt
add
lock
in
add
in
dec
shrl
sub
cs
jl
ds
mov
ss
add
add
cmpsb
mov
push
mov
lods
test
movsb
fidivl
mov
testb
jmp
adc
mov
add
sub
pop
fisubs
fisubrl
negb
shl
pop
sbb
push
push
mov
sbb
inc
inc
cmp
addb
cmpsb
mov
sub
sub
xor
repz
or
aaa
dec
repz
cld
push
or
shll
in
call
imul
imul
cmpsl
imul
mov
mov
adc
addb
mov
xchg
sbb
add
aad
imul
addb
mov
lods
outsl
pop
jnp
addb
add
cwtl
orb
and
popa
call
add
adc
insl
orl
sbb
sbb
sbb
or
or
mov
pop
repz
cld
or
aas
hlt
lock
add
xlat
xchg
mov
in
leave
xchg
incb
inc
sbb
add
mov
sub
and
cwtl
in
dec
popa
cmpsb
shll
add
sub
pop
lods
adc
lods
xor
or
push
pushf
sbbb
nop
add
mov
fcmove
int3
inc
add
cmpsb
jp
push
jbe
push
insb
add
dec
mov
add
pusha
pop
pop
push
xor
out
dec
dec
fldcw
cmpsl
test
cmp
adc
stos
jge
mov
add
sub
jnp
stos
jge
imul
loopne
mov
ror
imul
cmpsl
imul
and
test
xchg
mov
dec
rcrl
sbb
pop
jo
cwtl
lea
rol
sbb
or
push
lea
rcrl
adc
add
push
xor
mov
xor
push
lcall
xor
fidivrs
push
sub
subb
add
fcmovbe
fiaddl
sbb
sbb
push
bound
or
repz
dec
call
sbb
scas
imul
in
ss
add
xlat
xor
mov
je
sbb
mov
push
sbb
mov
mov
mov
xchg
test
std
mul
cs
xchg
cltd
sbb
dec
repz
sbb
mov
imul
mov
cmpsb
imul
imul
mov
mov
mov
jb
in
imul
pop
sbb
add
dec
jae
xor
dec
sahf
inc
inc
ds
add
sub
dec
movsl
cmp
add
outsl
lcall
pusha
cs
dec
repz
out
fidivs
ror
lret
add
lahf
cmp
in
inc
adc
sbb
sub
cmpsb
cli
aaa
mov
inc
sbb
mov
mov
inc
sbb
inc
sbb
sub
push
mulb
cwtl
inc
test
shll
xor
cld
imul
sahf
cmpsb
xor
pop
pop
ret
cmpsb
push
push
or
lods
cwtl
push
daa
addr16
repnz
imul
sbb
cmpsl
imul
nop
orl
add
mov
jb
imulb
fucomip
sbb
adc
cmp
sub
jns
push
mov
cmp
xor
mov
scas
cmpsl
imul
pushf
or
xchg
xchg
mov
dec
rcrl
jle
jbe
mov
mov
js
andl
lcall
jo
sarb
jp
movsb
push
xor
push
cmpsl
xchg
cmovbe
push
cmpsl
movsb
push
jo
xor
or
cmpsl
loopne
dec
movsl
mov
fimuls
sahf
or
sbb
or
or
mov
or
or
push
loop
mov
and
inc
inc
xor
push
xor
push
cmp
inc
pop
test
push
adc
jle
cmp
fiadds
or
cs
int
shll
in
fstp
push
cmp
int
leave
lds
lcall
mov
xor
mov
mov
cmp
nop
movb
xchg
dec
imul
xor
ret
xor
sub
or
je
and
lea
fisubl
or
or
sarb
mov
ret
fbstp
pop
movsl
pop
add
mov
sbb
mov
mov
push
push
ds
mov
xor
testl
xchg
test
sti
adcl
decb
lea
and
icebp
movsl
add
adc
sub
into
nop
jl
mov
das
ret
mov
insl
mov
cmp
call
ret
jl
push
sub
andl
pop
push
std
and
jbe
adc
or
or
xorb
shlb
insb
call
add
add
push
adc
push
std
rolb
push
rorb
bound
add
lods
insl
insl
aam
and
incl
mov
call
fcoml
mov
cmp
sbb
nop
fcmovu
in
jle
out
jne
call
ret
pop
add
add
mov
push
pop
and
and
add
sbb
cld
ret
cmp
icebp
xchg
outsl
pop
pop
js
icebp
add
mov
lock
cmp
xchg
call
cmpsb
add
lods
popa
mov
or
xor
pop
adc
pop
rolb
or
mov
inc
xchg
mov
mov
push
and
pop
cmp
and
pop
sub
idiv
or
ret
jo
add
and
add
enter
push
and
call
add
adc
decl
mov
xor
add
mov
adc
xor
or
mov
cmpsb
jle
pushf
pop
lock
add
and
outsl
pop
sbb
test
mov
and
je
xor
stc
adc
loop
dec
pop
cs
adc
adc
push
push
cmp
or
xor
cltd
negb
jg
xor
xchg
xor
mov
add
adc
fwait
push
pop
call
repnz
call
lock
or
mov
jae
pop
mov
and
sbb
outsl
xor
adc
je
ljmp
or
or
or
stc
add
and
dec
aaa
mov
icebp
sbb
and
mov
push
test
orl
adcb
cmpb
sbb
icebp
or
push
cli
mov
jno
cmp
inc
mov
cmp
sbb
mov
cmp
clc
ja
js
inc
out
jo
jnp
jo
mov
add
imul
popa
loopne
ret
jno
call
cmpsb
cmp
mov
in
add
xor
mov
add
movsl
hlt
ret
sbb
je
ret
scas
dec
stos
jnp
add
xor
xchg
jnp
mov
and
jle
out
push
push
das
sbb
outsb
pop
push
sub
dec
inc
dec
es
xor
jb
orb
lcall
add
pop
add
addb
divb
sarl
arpl
cmp
mov
ret
push
aaa
out
call
cli
sbb
add
frstor
faddl
pop
lock
in
or
add
insl
inc
ret
and
mov
not
push
add
sbb
sub
adc
clc
in
or
add
lods
fs
mov
dec
or
orl
and
inc
orl
das
and
sbbl
xor
andb
or
jne
js
or
adc
adc
push
mov
test
cli
xorb
aad
sub
idivb
add
sbb
jbe
sbb
or
push
lret
adcl
sar
out
add
or
add
call
out
mov
adc
mov
mov
push
std
push
addb
les
sti
sub
bound
sub
clc
jle
leave
mov
outsb
ja
add
pop
mov
adc
nop
lahf
xor
adc
call
or
es
add
rorb
pop
cmp
xor
or
shlb
dec
je
call
add
fildl
adc
call
cmc
add
pop
add
shlb
sbb
sbb
cmp
ret
cmpsb
jp
stos
rorl
lods
mov
add
pop
add
adc
jbe
in
ja
xor
shll
pop
pushl
mov
sbb
pop
fwait
shrb
inc
inc
lock
mov
outsl
pop
pushf
sarl
shlb
and
shufps
popa
mov
pop
rclb
push
les
sarl
sti
jne
add
aaa
xchg
test
ljmp
das
sbb
sbb
push
lds
mov
movq
or
rcrb
lcall
addr16
or
jle
loopne
aad
outsb
fistps
push
clc
roll
adc
das
clc
mov
pop
aam
sub
sub
rol
popa
ljmp
pop
loope
loopne
ljmp
mov
loope
loopne
inc
popa
and
adc
adc
test
mov
in
std
push
test
sahf
push
lock
lcall
jg
pop
adc
loopne
inc
bound
loopne
lods
lods
call
imul
ss
add
pusha
das
and
xor
pop
or
or
jne
call
clc
jg
call
adc
adc
cmc
pusha
inc
push
mov
inc
bound
rorb
jecxz
jne
pushl
insb
scas
scas
pop
lock
clc
mov
jne
pop
mov
push
decl
adc
stos
movsb
test
pusha
dec
popa
sub
loopne
dec
jmp
jb
or
push
nop
jp
popa
or
lods
popa
shrb
lods
rorb
add
add
adc
test
rorb
loope
adc
adcb
rol
loopne
ret
jg
add
jg
and
pavgb
loop
dec
push
roll
ret
mov
je
add
sub
adc
je
rcrl
adc
jnp
pusha
or
mov
add
sbb
push
xchg
push
mov
movsb
add
in
push
inc
cmp
je
cmp
adc
cmp
je
cmp
cmp
xor
or
mov
xchg
mov
rorb
mov
ret
repnz
addr16
loopne
pusha
mov
je
mov
test
adc
je
xchg
cs
stos
je
in
int
adc
je
lods
je
ret
mov
aaa
jg
push
ret
insb
je
adc
push
ret
outsb
je
outsl
je
ret
fiadds
adc
adc
xor
dec
sbb
and
xchg
mov
adc
lock
mov
es
loop
push
es
popa
lock
jnp
stos
sbb
ljmp
imul
pusha
pop
add
bound
test
or
sbb
cmp
and
and
jbe
loopne
jb
test
fisubs
sub
imul
cmp
mov
sub
ds
jbe
lock
and
or
pusha
pop
push
out
and
xor
pop
lret
bound
addl
popa
pop
cmp
sub
test
adc
push
jl
addl
shrb
call
push
mov
mov
add
inc
push
xor
mov
insb
mov
rol
push
jg
mov
adc
pusha
inc
mov
inc
popa
cmp
popa
add
push
call
mov
adc
fucom
sub
dec
sbb
fdivrs
movsb
data16
outsb
jb
loopne
imul
ljmp
imul
sub
cli
icebp
jne
push
or
push
pusha
pop
ret
and
or
cmp
fs
add
adc
incl
repnz
test
addb
sbbb
fisttpl
repnz
adc
inc
stc
je
pop
addb
insl
adc
call
xor
push
adc
stc
or
push
sub
push
cmpsl
push
push
sub
pop
mov
pop
hlt
and
cmp
inc
icebp
mov
jnp
decl
xor
xor
xor
and
sub
ja
inc
lock
xor
ljmp
icebp
pusha
out
mov
outsl
cli
mov
and
mov
add
add
cld
pop
sahf
mov
or
ret
adc
push
mov
add
sahf
loope
jle
mov
lret
lods
cli
mov
jl
imul
mov
lcall
cmpsb
mov
es
pop
push
icebp
or
and
stc
call
xchg
in
pop
sbb
gs
sbb
xor
sbb
push
loop
stos
mov
xor
xor
inc
cmp
repz
mov
lock
or
test
pop
sub
sbb
or
repz
xor
push
inc
call
incl
nop
repnz
int3
pusha
int3
int3
lret
dec
jp
mov
sbb
loopne
ret
sbb
ret
pop
sbb
adc
mov
pusha
data16
push
je
xchg
sub
adc
in
aad
xchg
cmp
jecxz
cmp
xor
daa
adc
or
lea
dec
inc
or
cmpb
push
push
arpl
dec
ja
imul
adc
push
gs
dec
shll
addr16
stos
js
adc
mov
mov
mov
sbb
fisttpl
or
or
add
bound
popa
add
lcall
or
mov
mov
xor
cwtl
add
push
jl
leave
cmpsl
mov
shrl
scas
fwait
loope
sbb
inc
shll
in
pop
fstpl
pop
mov
stos
mov
insb
mov
pop
lock
dec
outsb
cmp
cmp
jo
xor
jne
adc
mov
test
outsb
xchg
adc
add
ret
sbb
fcmovne
clc
mov
in
add
cmp
fdivp
add
jecxz
inc
loopne
inc
in
or
call
insl
stos
scas
xchg
aas
sbb
insl
xchg
xor
xchg
pop
cmp
add
xor
add
mov
ds
cmp
jo
clc
dec
sti
add
lods
mov
std
push
lock
dec
jnp
mov
je
sbb
jnp
pop
test
cmpl
mov
sub
popa
ja
push
fucomip
jnp
jge
and
mov
pop
xchg
sbb
adc
fidivs
mov
icebp
scas
stos
xor
jae
xchg
mov
adc
sbb
popf
xchg
push
sahf
pop
stc
repnz
or
cmp
outsb
scas
clc
sbb
fmull
mov
sbb
xor
sahf
mov
mov
sbb
dec
idivl
movsl
dec
xchg
push
jno
mov
frstor
repz
and
rcll
sbb
xchg
lods
sbb
scas
loope
mov
and
shl
ss
lock
and
sbb
bound
int
stc
dec
xor
std
fstp
aaa
std
mov
pop
lock
sbb
leave
popa
jl,pt
pop
sbb
sbb
sub
clc
lock
roll
pop
cs
push
sub
imul
decl
xlat
mov
mov
mov
adc
sub
sbb
push
jl
mov
adcl
clc
rorl
popa
jo
push
andl
jns
sbb
fstpl
mov
out
nop
adc
jo
sub
adc
and
fstpl
fnsave
enter
inc
or
arpl
stc
adc
int3
pop
fildll
inc
js
sti
adc
mov
xor
add
fnsave
xor
add
push
rcll
sbb
int
or
add
fs
imul
pop
push
sub
push
or
add
or
pop
shll
xor
add
jmp
pop
sti
add
push
lock
subb
xor
jnp
pop
add
add
iret
xorb
jns
gs
add
adc
lods
lahf
add
lds
rolb
add
cmp
sbb
adcb
movsb
rorb
orl
or
inc
or
fcoms
jb
mov
orb
addb
push
push
cli
addb
pop
shlb
std
or
orb
xor
xor
add
cmpsb
add
lods
push
stc
dec
cmp
push
add
jne
imul
mov
pop
repz
add
xor
and
sti
adc
push
or
adc
pushl
dec
movsl
mov
mov
insb
jae
add
gs
dec
mov
mov
insl
xchg
popa
add
mov
shll
xor
push
xchg
gs
in
pop
adc
cltd
inc
imul
insl
popa
push
ds
mov
clc
dec
inc
xchg
insb
inc
dec
add
andb
scas
pop
loopne
push
stos
cld
push
pop
add
and
mov
outsb
pop
push
jno
adc
push
add
int3
or
cmpsb
add
int3
push
jbe
push
push
les
mov
scas
les
or
call
xchg
arpl
xchg
call
aaa
inc
xor
rclb
mov
pop
jo
or
add
inc
jb
push
mov
aas
sbb
add
gs
xchg
add
or
mov
sbb
fs
jge
or
sahf
insb
loop
adc
cwtl
push
pop
popa
jbe
xor
pusha
adc
inc
loopne
mov
mov
add
lock
sbb
sbb
or
ficompl
sub
fs
xchg
arpl
adc
add
leave
add
add
fs
mov
push
sub
je
inc
xchg
xchg
ret
push
nop
push
imul
jne
les
push
push
test
fwait
jp
inc
sbb
popa
xchg
mov
jo
rolb
aam
cmp
dec
sbb
and
mov
out
loop
bound
mov
fistpl
shrb
xchg
or
pop
xor
push
cmp
inc
insb
mov
insb
ret
mov
ret
insl
mov
pop
stos
push
adc
mov
pusha
xchg
fs
lea
je
je
and
sub
les
rorl
cmp
or
jle
mov
jg
test
inc
insb
mov
rorl
mov
gs
clc
loop
dec
std
shll
jae
jb
nop
push
mov
or
or
cmp
add
xchg
pop
out
sbb
int3
push
add
fcom
sbb
ljmp
push
cld
and
adc
add
loopne
add
ret
mov
pop
cmp
dec
shrb
jb
loop
adc
je
lea
loopne
pop
jne
add
dec
inc
gs
mov
or
push
lods
inc
add
andl
jle
xchg
jae
adc
fbld
loopne
mov
pop
mov
and
call
or
mov
inc
outsb
or
or
out
add
inc
add
pusha
or
fcomip
xchg
es
sbb
jecxz
data16
pop
pop
loopne
ds
cwtl
pusha
adc
push
adc
in
insl
repnz
xchg
pusha
es
mov
fwait
inc
les
imul
push
imul
and
add
adc
jb
mov
ljmp
gs
sub
and
pop
inc
nop
insl
jo
sbb
sub
popa
pop
dec
and
pop
lock
mov
jne
arpl
add
in
adc
xor
push
adc
jne
arpl
sbb
ss
dec
push
ds
pop
add
inc
xorb
mov
push
pusha
inc
dec
lods
mov
loope
pop
fdivr
ss
test
cmp
sub
js
mov
xor
popf
xchg
push
data16
mov
and
out
das
inc
xchg
add
enter
or
loop
mov
jb
jg
cmp
cmp
roll
sahf
xor
xor
gs
outsb
jns
or
loop
call
sti
push
push
mull
inc
popa
fwait
push
gs
inc
push
adc
or
sbb
jo
jmp
jmp
xor
dec
test
inc
inc
insb
xchg
incl
in
push
xorb
mov
mov
in
dec
lcall
pusha
dec
lret
fs
add
add
xchg
bound
xchg
int
arpl
fcmovu
sub
mov
push
or
aaa
mov
cmpb
mov
xchg
add
push
loope
stos
imul
push
add
dec
xor
xchg
mov
and
andb
jns
push
insl
push
mov
loope
inc
loop
test
or
sub
push
dec
mov
in
mov
push
jae
push
push
xor
and
and
outsb
inc
mov
clc
mov
popa
xor
pop
jne
lea
jecxz
dec
loopne
into
incl
push
inc
xchg
xor
jb
loopne
pusha
scas
insb
icebp
xlat
add
inc
xchg
push
add
xchg
leave
fisubs
lcall
lcall
jb
aaa
cld
cmpsl
mov
fs
sub
inc
mov
xchg
and
in
or
inc
outsl
mov
stos
insl
mov
les
sub
daa
pop
lock
mov
push
add
dec
adc
pop
xchg
xor
jne
dec
inc
outsb
data16
cwtl
pop
mov
jns
xor
lock
pusha
push
out
mov
xor
je
pop
testb
outsl
mov
addb
jo
ljmp
push
xor
out
imul
inc
xchg
jb
jae
cmp
adc
add
int
adc
xor
mov
jbe
insb
xchg
jle
int3
xor
data16
mov
sbb
mov
daa
dec
pop
push
pusha
test
sahf
jno
pop
fcomip
fcomip
inc
or
dec
mov
mov
xor
les
mulb
sbb
xor
imul
jo
xchg
outsl
jp
test
jne
cmpsb
dec
popa
insl
lcall
dec
test
xor
adc
imul
mov
cmp
inc
js
adc
repnz
add
cmp
lcall
mov
cmp
jae
jno
mov
repnz
inc
xor
push
repnz
push
cmc
push
sar
cmp
call
jp
mov
push
mov
mov
inc
cld
jo
sbb
mov
add
push
xchg
pop
lock
xor
jae
sahf
xor
jle
add
mov
jae
fcomip
bound
testb
icebp
or
push
or
mov
in
cmp
insl
xchg
outsb
ljmp
xor
adcb
sahf
fdivl
mov
jbe
xor
nop
inc
ret
pop
in
xor
imul
mov
dec
andb
mov
inc
push
dec
mov
clc
xor
xor
fs
and
add
incb
or
jo
add
outsb
imul
fs
push
bound
pusha
loopne
mov
mov
cltd
and
sbb
jns
popf
and
cmpb
fs
outsb
adc
insb
dec
xor
xor
nop
imulb
lcall
push
xchg
mov
lock
push
adc
mov
insl
rcr
ja
jp
dec
add
add
ret
adc
jb
popa
add
mov
cs
dec
cmp
in
mov
push
fldt
jle
add
movsb
jno
cwtl
push
and
outsl
jae
arpl
add
fwait
outsl
inc
add
fildl
ja
xor
mov
add
inc
and
push
xor
shr
jg
icebp
sub
es
jnp
xor
add
push
jo
cli
mov
sub
mov
insb
mov
test
dec
js
addl
es
push
outsl
in
data16
dec
mov
dec
mov
fwait
jno
jo
fcomip
or
inc
mov
push
nop
lock
push
xlat
or
gs
insb
inc
jae
inc
mov
test
scas
mov
mov
dec
sahf
add
and
sbb
push
adc
imul
jne
lock
push
mov
or
xchg
movsb
int
jl
adc
divl
mov
inc
or
fs
incl
ret
push
xor
or
lcall
xor
aad
mov
dec
outsb
jne
inc
lcall
or
sbb
adc
push
addr16
mov
add
add
pop
lock
sbb
or
incl
inc
sbb
icebp
pop
hlt
and
push
jo
xor
jbe
and
pusha
inc
cmpsb
jbe
sbb
mov
mov
test
ds
sub
sbb
push
push
xchg
xor
je
repnz
mov
fs
fcomip
jg
inc
xor
mov
mov
mov
mov
xlat
inc
repnz
lock
push
sub
shrb
xchg
mov
pusha
push
add
jae
lods
sub
aad
je
rorb
insb
dec
jp
movsb
adc
mov
jge
adc
ret
scas
sarb
cli
mov
ja
pop
mov
pop
dec
ret
imul
addb
test
mov
push
xchg
pusha
outsl
mov
add
xchg
imul
lock
sub
dec
nop
add
outsl
cmp
add
jno
xchg
movsb
dec
loopne
lock
inc
jae
add
xor
xor
mov
cmp
and
dec
xchg
cmp
jg
test
jo
je
push
add
cwtl
push
cli
imul
je
inc
jo
mov
push
mov
xchg
sub
adc
insl
movsb
add
outsl
incl
mov
jae
xor
lock
jo
mov
das
clc
push
jg
outsl
jo
jae
jae
testb
sbb
jbe
or
pop
mov
adc
sti
mov
cmovno
xlat
inc
rorb
push
fdiv
xchg
popa
jae
shrb
push
xchg
icebp
or
add
fs
pushl
or
jb
lds
fiaddl
xor
hlt
aaa
mov
pushf
mov
mov
lods
xchg
ret
jns
push
jo
hlt
into
and
inc
mov
hlt
inc
ljmp
mov
mov
shlb
jne
jo
jo
pusha
outsl
mov
aaa
and
mov
adc
test
shrb
jne
scas
push
or
cmp
add
add
inc
inc
andb
dec
add
xchg
add
xor
adc
lods
jns
and
mov
push
leave
ret
xor
sub
bound
test
jo
jmp
xor
push
add
lcall
mov
js
xor
add
mov
insl
mov
and
aaa
lods
mov
push
mov
mov
jb
in
xor
add
mov
mov
incb
add
dec
push
pushf
add
push
gs
imul
xchg
adc
mov
add
mov
add
xor
test
outsl
addb
ret
addl
incl
data16
add
stos
rolb
cwtl
subb
xor
mov
push
xchg
inc
insb
push
add
push
scas
aad
imul
push
sbbb
dec
mov
cmp
nop
stos
push
inc
push
int3
mov
les
insb
mov
or
pop
sub
lcall
cld
dec
push
mov
jbe
sarl
inc
popa
orl
adc
inc
addl
movsb
int3
gs
sahf
addl
bound
mov
fs
dec
adcl
pop
push
add
insb
dec
outsb
mov
dec
fs
xchg
adc
inc
inc
sti
fisttpl
je
addb
xchg
push
les
adc
scas
cltd
fidivrs
sub
in
mov
jne
test
push
mov
adc
sub
lcall
add
dec
arpl
jo
inc
pop
lds
out
arpl
mov
push
dec
sahf
insl
dec
fs
mulb
imul
inc
jbe
jb
mov
pop
cwtl
mov
xchg
jae
adc
mov
iret
add
inc
inc
dec
ret
into
sbb
sbb
add
lock
push
pop
xchg
data16
outsb
popa
sub
test
jo
shlb
push
jne
add
lret
mov
jo
jb
dec
push
push
xchg
jae
addl
push
aam
inc
aas
jle
ret
or
sub
push
mov
test
push
push
outsb
shll
cmp
fs
push
cmpsb
fwait
sarb
add
ret
push
ss
popa
mov
ret
sahf
add
inc
pushf
loopne
cwtl
sbb
sbb
inc
orb
rorb
sbb
enter
add
add
rorb
add
ret
lds
inc
and
mov
int3
dec
aam
rorl
les
ret
mov
jp
lods
jne
inc
adc
outsl
add
push
cld
add
loop
push
sbb
push
xchg
push
pop
cmpsl
rorb
fdivp
fbstp
outsl
jl
loopne
gs
insb
in
inc
jae
mov
pusha
xor
add
imul
arpl
insb
lcall
sub
push
mov
je
mov
or
jbe
add
mov
inc
and
push
dec
in
nop
push
jb
push
outsb
loopne
sub
jo
inc
loope
push
dec
insb
xor
xorb
jl
gs
ja
or
mov
jae
mov
mov
and
ljmp
inc
loopne
push
dec
mov
sub
pop
add
mov
dec
cwtl
xchg
or
jne
ja
loope
pusha
les
mov
mov
mov
cmp
and
or
popa
fdivs
mov
adc
mov
push
mov
mov
popa
xchg
push
imul
push
pop
idiv
sub
mov
mov
pusha
add
dec
jae
push
dec
pusha
push
push
jbe
push
loope
push
mov
arpl
cs
scas
jne
mov
rcr
in
loopne
xor
push
fs
sahf
or
loopne
push
sub
add
pop
outsb
mov
xlat
fwait
lods
mov
pop
inc
inc
inc
inc
pusha
inc
mov
data16
xchg
add
lods
imul
movsb
inc
or
push
adc
lahf
call
outsb
jno
jne
pusha
push
ss
loopne
test
xor
dec
inc
arpl
in
push
test
xor
cwtl
mov
fcoms
test
insl
xchg
xor
inc
jb
mov
push
push
add
mov
inc
nop
insb
add
lret
loopne
push
push
mov
jnp
push
or
cmc
push
jle
dec
mov
and
popf
pop
cmc
add
mov
mov
cltd
bound
or
xchg
adc
add
lds
outsb
arpl
popa
ret
test
jb
mov
mov
loope
mov
push
hlt
push
dec
mov
pop
orb
popa
xor
addr16
push
pusha
sti
add
xchg
push
loopne
gs
outsb
sub
bound
shlb
andb
and
loop
sbb
and
arpl
add
pop
cwtl
jbe
das
xchg
enter
inc
loopne
popa
adc
push
cmp
mov
add
fs
in
and
xchg
bound
mov
add
sub
data16
inc
insb
adc
pusha
out
pusha
mov
pusha
test
sbb
adc
loop
sbb
xlat
push
inc
push
test
shl
imul
dec
das
clc
lea
mov
lea
popa
mov
das
push
je
xor
dec
mov
inc
fdivs
sbb
or
fwait
loopne
inc
adc
pop
push
fs
clc
dec
and
add
push
inc
sub
add
xor
push
push
mov
test
test
adcb
sbb
fists
fistl
popa
add
jo
arpl
or
add
push
aad
xor
dec
in
cli
push
xchg
mov
mov
dec
lods
jbe
insb
ficomps
mov
repnz
jo
xor
lock
insb
mov
xor
insb
mov
fildl
call
adc
outsl
je
sbb
loopne
das
adc
and
dec
sub
les
mov
adc
inc
and
imul
and
lea
call
js
jle
dec
push
jns
mov
subb
jb
rol
test
loopne
aaa
sbb
mov
mov
add
push
js
mov
ret
add
insb
push
xor
pop
xchg
or
dec
je
xor
scas
inc
pop
lret
mov
push
push
out
andb
push
cmpsb
push
push
hlt
jne
push
dec
mov
mov
lea
or
and
pop
mov
pop
xor
scas
pusha
xor
clc
mov
pop
xchg
pop
jo
mov
loope
adc
cmpl
push
subb
jae
sbb
lods
scas
inc
hlt
push
jno
mov
sbb
clc
jg
mov
sbb
jb
jae
pushl
inc
dec
lods
insl
mov
lods
xor
xor
mov
lret
xor
adc
push
add
push
mov
xor
je
inc
mov
pop
xor
clc
add
insb
xor
jbe
lock
adcb
add
insb
lock
or
add
fwait
or
or
inc
jbe
xchg
sub
mov
pop
mov
push
sub
pop
icebp
jg
jo
cmc
adc
cwtl
dec
lods
jbe
mov
mov
in
mov
mov
decl
cmc
or
cmc
or
dec
push
lea
pushf
push
mov
push
push
mov
push
push
lcall
push
add
xchg
testb
ljmp
add
lock
pop
jbe
lock
outsl
xchg
imul
mov
dec
mov
add
inc
stos
repnz
dec
dec
cwtl
inc
push
push
xor
or
jo
icebp
popl
mov
lret
ret
imul
xor
outsl
std
xor
push
xor
and
inc
scas
dec
mov
push
add
mov
cmp
inc
inc
cmp
popa
ret
out
xchg
mov
insl
push
mov
xor
inc
sub
arpl
dec
mov
arpl
hlt
or
ja
outsl
imul
add
mov
sahf
add
adc
loopne
add
adc
jle
mov
sub
push
cmp
xchg
jae
dec
jecxz
jbe
dec
lea
stos
pop
add
mov
int
xchg
xchg
sub
add
mov
hlt
popf
jne
inc
mov
xor
out
push
je
sbb
or
push
inc
mov
xor
adc
pop
es
xchg
lret
fs
pop
pop
jo
dec
xor
test
out
mov
add
cmp
enterw
push
xor
sub
jo
js
mov
pop
repz
mov
add
add
aas
add
adc
pop
add
mov
inc
mov
and
sbb
movsl
mov
and
jo
hlt
add
xchg
xchg
jg
jle
adc
mov
or
xor
mov
mov
xchg
xor
push
mov
sbb
or
hlt
adc
aad
js
mov
inc
mov
adc
in
xor
ljmp
jg
adc
add
sbb
lock
popf
add
das
pop
in
pop
icebp
std
and
dec
out
addl
xlat
xchg
mov
scas
inc
inc
xor
incl
mov
add
jle
mov
aad
xor
dec
pop
xchg
push
mov
loopne
add
adc
incb
xchg
test
inc
test
in
cmpb
testl
push
mov
jmp
stos
push
inc
pop
out
cli
mov
cmpsb
jecxz
repnz
jnp
es
xlat
adc
stos
pop
scas
mov
cmp
cli
jg
incl
add
repz
loope
test
int3
xchg
icebp
scas
mov
repnz
stos
decb
addl
cmpsl
insb
cmp
pop
or
inc
mov
shlb
lcall
add
lock
and
pop
inc
or
jmp
pop
je
and
xchg
clc
repz
fldl
ljmp
fwait
xchg
fisttps
add
jne
adc
int3
int
xor
lds
push
mov
or
pop
jo
sub
cmp
fs
mov
outsb
in
xor
cmp
sub
out
pop
clc
stos
notb
dec
shl
xor
mov
mov
cmpsl
out
aas
mov
sti
test
scas
add
xor
cmp
aad
xchg
jb
cmp
pop
nop
out
cmp
test
ja
stos
in
rorb
lcall
mov
mov
leave
aas
insl
les
adc
cli
dec
push
adc
lcall
movb
lock
xchg
aas
pop
jge
push
dec
mov
jp
sahf
push
pop
roll
call
aas
sub
das
jp
mov
cwtl
mov
dec
jmp
sub
subb
push
jl
das
fstl
add
ja
icebp
cmp
xchg
cmpl
shrb
mov
cmp
sub
std
xlat
cmp
mov
cmpb
jecxz
cmpsb
add
cmp
jne
ljmp
add
cs
jno
rolb
xor
mov
pop
jp
sti
aaa
in
pop
xchg
adcb
aam
push
fisubs
cld
mov
adc
dec
in
leave
push
cmc
sub
push
into
imul
sbb
faddp
jge
call
mov
xchg
cmp
scas
andl
bound
scas
stc
xchg
jge
sbb
enter
fadd
add
in
adc
mov
shlb
popl
addr16
scas
lods
std
outsl
mov
push
pop
orl
addl
mov
incb
adcb
mov
mov
fwait
cmpsb
mov
into
mov
lret
push
jge
pop
imul
add
push
sbb
or
lret
mov
testl
cs
add
ss
cmp
push
add
out
lcall
daa
das
aaa
or
inc
dec
xchg
arpl
popf
inc
jmp
ja
orl
sbb
sti
ljmp
xor
ret
push
cltd
lahf
lret
add
int3
add
mov
mov
lcall
push
add
mov
push
dec
out
inc
pop
lret
adc
int3
mov
pop
adc
pushf
adc
add
cmpsb
mov
loope
pop
sub
insb
xchg
lret
fnstenv
insl
dec
test
and
outsb
mov
fistpll
aaa
add
jnp
add
adc
jl
xor
dec
outsb
das
sub
jge
mov
jmp
ss
mov
push
push
mov
popa
dec
js
sub
insb
popa
xchg
cmp
sarb
addr16
incl
xchg
int
or
sub
adc
aaa
jb
xchg
cs
xor
cli
xchg
rorb
adc
fwait
push
fbld
lret
cmp
push
aaa
mov
aas
adc
aaa
daa
aaa
in
prefetch
aaa
cld
aaa
idivl
adc
hlt
push
push
dec
adc
cmp
cmp
je
or
out
cmp
out
sbb
cmp
ja
sarb
cmp
call
and
mov
xor
xor
add
divb
xor
adc
xor
xor
mov
mov
test
jae
pop
insl
and
adc
fucomi
inc
jbe
in
adc
hlt
cmp
ret
add
cmp
cmp
inc
ss
push
adc
push
daa
mov
add
pop
xchg
add
int
cs
cmp
cmp
cmp
cmp
mov
inc
cmp
cmp
adc
fld
cmp
cmp
loopne
adc
add
adc
mov
sbb
ret
cmp
fwait
mov
cmp
je
cmp
xchg
arpl
movsb
cmp
test
mov
dec
sbb
add
popa
out
jecxz,pt
and
sarl
ds
ds
ds
dec
fadds
sbb
flds
jbe
inc
arpl
mov
inc
les
int3
int
ds
in
adc
add
add
repz
or
enter
aas
mov
fbstp
mov
mov
mov
mov
aas
aas
mov
cmpl
aas
jae
aas
arpl
movsb
aas
push
aas
aas
inc
flds
mov
popa
sbb
inc
inc
dec
push
rclb
add
daa
push
fwait
js
aaa
pop
xor
sub
lret
adc
mov
and
adc
adc
adc
out
pushf
xor
lods
xor
xor
xor
xor
fdivl
sbb
fld
cmpsb
movsb
in
adc
xor
sbb
sbb
sbb
cmp
mov
xor
out
out
insb
xor
jl
jnp
mov
xor
insb
inc
adc
and
fdivl
sbb
aaa
adc
xor
xor
mov
icebp
out
mov
xor
mov
pop
xor
sbb
jl
enter
sbb
pushf
xor
mov
mov
xor
fdivl
sbb
in
xor
cld
mov
dec
add
mov
sbb
adc
xor
std
sbb
pop
xor
xor
xor
xor
xor
adc
test
and
adc
xor
stc
fistpl
mov
xor
xor
xor
xor
xor
xor
mov
mov
fwait
xor
ss
or
jo
xorb
adc
aas
inc
loope
cld
insb
aas
inc
jno
pop
jnp
sub
cwtl
sarb
pop
flds
lcall
xor
mov
xor
xor
mov
int
call
cmp
cmp
cmp
notb
cmp
int3
add
add
inc
pop
or
add
xor
outsb
mov
sbb
cmp
cmp
cmp
cmp
cmp
in
add
fcomps
add
ss
mov
sub
nop
aas
inc
sbb
push
ret
pop
xor
nop
xor
pushl
adc
fcomip
xor
xor
xor
inc
xor
xor
xor
ss
cmp
ss
aaa
add
mov
lret
sbb
add
cmp
js
pop
pop
cmp
pop
lcall
cmp
cmp
cmp
cmp
stc
cmp
cmp
ret
es
clc
xorl
lock
repz
cld
in
repnz
cmp
xor
repnz
leave
add
aaa
lret
loopne
cmp
cmp
cmp
sub
cmp
and
cmp
cmp
cmp
cmp
mov
push
out
jg
mov
xor
rclb
jo
push
cmp
cmp
mov
sub
fdivrs
and
jl
cmp
cmp
adc
lock
ret
adc
cs
cmp
or
das
cmp
push
or
call
mov
ss
jo
cs
mov
sbb
mov
repnz
lock
mov
cwtl
xor
lods
jl
pop
mov
xor
sub
xor
data16
sub
adc
cmp
cmp
cmp
cmp
data16
add
pop
cmp
cmp
cmp
push
nop
inc
mov
lock
fwait
aam
or
inc
nop
push
test
out
xor
xor
pop
xor
xor
xor
xor
fisttpl
adc
xor
xor
push
mov
add
into
xor
xor
xor
adc
rolb
sub
popa
in
cmp
cmp
cmp
pop
cli
cmp
dec
push
cmp
outsl
clc
fwait
cmp
cmp
add
xchg
adc
cmp
aad
cmp
cmp
cmp
cmp
cmp
adc
cmp
fcomip
jg
ds
ds
jo
push
ds
sarl
aas
jp
fwait
aas
sub
hlt
in
call
mov
inc
xchg
xor
mov
aaa
jle
cmp
add
pushl
stos
xor
imul
call
ret
sbb
cli
xor
xor
xor
push
lahf
xor
xor
xor
adc
xor
add
icebp
add
ss
in
mov
ss
decb
pushl
adc
jge
lea
fs
dec
ljmp
fcomip
push
cs
cmp
cmp
adc
cmp
cmp
test
mulb
mov
cmp
push
mov
mov
jmp
dec
add
mov
in
je
data16
ds
ds
pop
ds
dec
cmp
push
aas
lds
inc
aas
mov
aas
push
aas
sub
and
lods
mov
mov
aad
xor
fdivl
xor
jmp
jne
xor
ss
and
or
mov
cmp
cmp
out
repz
outsb
jge
mov
ret
jo
sub
add
inc
cmp
mov
dec
mov
xor
daa
cld
add
mov
jbe
addr16
xor
pop
mov
call
into
arpl
mov
add
cmp
sub
mov
cltd
cmp
mov
cmp
mov
and
adc
mov
xchg
loop
fistps
nop
cmp
cmp
sub
jle
add
jmp
push
clc
cmp
pop
scas
jo
lret
xor
xor
shll
imulb
data16
xor
in
ss
ss
mov
xor
shll
cwtl
mov
pop
cmp
lds
lret
cmp
cmp
lret
lock
lods
cmp
ds
cwtl
push
cmpsb
xlat
xor
or
add
xchg
aaa
and
out
sub
fidivrs
add
jg
aad
jl
popa
push
cmp
adc
ds
jae
xor
out
insb
cmp
aam
cmp
test
mov
mov
or
test
repnz
xor
es
xor
cmp
nop
inc
sahf
cmp
add
daa
jle
lcall
jns
lock
outsb
and
mov
jmp
popa
lea
mov
xor
sub
inc
pushl
push
lock
mov
jbe
mov
in
das
sub
aam
daa
xor
adc
xor
mov
xor
jbe
jo
pop
xor
xor
fiaddl
js
xor
mov
fbstp
sub
iret
xor
xor
sti
incl
xor
push
xor
lahf
xor
insb
xor
pushl
cmpb
xor
push
add
pop
movsb
xor
mov
xor
xor
ss
add
sti
inc
ss
dec
adc
ss
lahf
ss
mov
adc
ss
test
ja
mov
xchg
xlat
jg
ss
pop
movsb
ss
lods
orb
ss
ss
jg
ss
ss
ss
add
pop
fdivl
pop
fdivp
out
cli
or
mov
cmpb
ds
aas
mov
cs
pop
aas
cld
ljmp
mov
incl
out
xor
ja
pop
cmc
out
jb
or
xor
sbb
ss
add
lcall
shlb
cwtl
push
xor
bound
jo
mov
mov
ret
xor
jg
xor
bound
xor
xor
xor
inc
xor
add
stc
nop
imul
in
outsl
or
xor
xor
xor
adc
popf
xor
lea
test
outsl
mov
adc
cmp
shll
pop
xor
adc
repnz
xor
scas
mov
mov
inc
adc
xor
hlt
add
out
push
pop
loopne
sub
inc
jne
mov
push
or
es
mov
xor
push
push
and
incl
adc
movsl
xor
xor
pop
je
sub
dec
sbb
push
xor
jg
inc
ljmp
xor
ss
push
cmpsb
push
xchg
sar
cmp
adc
jo
dec
shlb
sub
mov
push
aaa
movsl
add
jb
xchg
test
insl
adc
aaa
xor
divl
add
sti
das
insl
loop
cmp
outsl
cmp
adc
pushl
jg
cmp
ret
cmp
fidivrs
sbb
or
loop
cmp
cmp
divb
or
inc
cmp
cmp
cmp
adc
cmp
cld
pushl
xchg
cmp
cmp
shrb
cmp
xchg
scas
inc
pop
nop
loopne
repnz
add
sub
or
xor
mov
inc
lods
aas
outsl
dec
add
xor
add
and
xor
stos
add
insl
xor
xor
xor
adc
push
imul
rcl
xor
xor
xor
shlb
xor
into
mov
inc
xor
xor
xchg
cli
ja
dec
xor
test
xchg
xor
mov
out
xor
xor
xor
xor
cld
subb
fidivl
shll
mov
hlt
or
push
xor
xor
movsb
xor
xor
xor
jge
filds
fdivs
xor
xor
ret
out
movswl
outsl
ret
lcall
cmp
sahf
sub
inc
fldt
or
stc
into
ss
pop
test
push
aaa
in
aaa
pop
aaa
jecxz
fnstenv
sub
iret
aaa
xor
ljmp
insb
dec
aaa
mov
push
aaa
cmpsl
aaa
pop
aaa
popf
aaa
addr16
xchg
aaa
jno
mov
jnp
jg
scas
out
cli
test
jne
push
aaa
cltd
aaa
popa
aaa
mov
aaa
sti
pushl
aaa
cmp
lret
aaa
das
aaa
aad
and
aaa
jmp
aaa
pop
aaa
std
add
loope
jg
pop
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
shr
pop
cmp
mov
dec
cmp
cmp
jne
ljmp
jg
jnp
mov
jno
xchg
cmp
cmp
cmpsl
cmp
mov
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
xchg
cmp
xchg
ljmp
outsl
cmp
cmp
push
cmp
ljmp
cmp
sbb
cmp
leave
cs
jnp
push
push
inc
adc
mov
or
ds
scas
xchg
mov
into
stos
xor
ljmp
shr
loopne
ss
cmp
cmp
xchg
cmp
cmp
lock
filds
into
cmp
cmp
cmp
cmp
cmp
call
clc
sbb
fstpt
je
sahf
cmp
adc
cmp
dec
ds
mov
aas
ret
inc
call
movsb
mov
ljmp
scas
aas
fwait
icebp
ror
sub
in
inc
xor
fisttps
xor
xor
add
xor
idiv
aad
xchg
and
xor
xchg
xor
adc
pop
xor
jbe
inc
jp
sub
shrb
jmp
mov
push
cmp
cmp
leave
cmp
jl
mov
pop
scas
pop
cmp
inc
outsb
aaa
pushl
cs
cmp
sub
mov
jg
jbe
sbb
test
push
pop
inc
xchg
aas
dec
aas
out
jmp
pop
repz
xor
push
pop
ret
xor
xor
rcl
ljmp
xor
xchg
xor
je
cmpsl
xor
enter
mov
push
xor
cmp
shll
loope
and
rorb
xor
xchg
cli
xor
xor
cld
xor
xchg
inc
mov
xor
sbb
mov
mov
dec
ss
mov
stos
push
sbb
pop
in
sub
cli
push
cmp
cmp
dec
cmp
add
cmp
jg
xchg
jb
lahf
cmp
scas
sarb
mov
cmp
cmp
pop
mov
pop
cmp
cmp
cmp
cmp
sub
cmp
xlat
cmp
sub
or
ds
ds
lods
aas
cwtl
xor
iret
into
aaa
fstpt
mov
xlat
xor
mov
imul
les
inc
out
ljmp
mov
stos
cmc
xor
xor
daa
xor
add
notl
pop
sarl
cmp
sahf
icebp
cmp
mov
dec
cmp
mov
push
adc
and
xor
dec
mov
cli
ds
ds
loop
sub
cmpsl
loope
pop
adc
decb
or
mov
pop
xor
xor
cld
jg
lret
loop
fidivrl
xor
xorb
inc
mov
mov
adc
fbstp
sub
dec
lea
stos
rolb
aas
cld
aaa
scas
aaa
cmp
cmp
cmp
pushf
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmpsl
ds
shlb
out
add
imul
mov
or
mov
adc
incl
cld
xor
xor
xor
xor
xor
xor
xor
xor
add
add
repnz
pop
add
mov
inc
xor
aaa
cld
push
scas
ss
push
inc
aaa
test
cmp
cmp
cmp
fiaddl
cmp
mov
jmp
inc
cmp
es
dec
adc
push
daa
loopne
movd
push
loop
int
push
sbb
xor
decl
xor
jg
lods
xor
xor
xor
xor
xor
cmpsl
jge
xor
ss
shlw
or
jbe
ss
cmp
mov
cmp
cmp
cmp
idivb
jmp
mov
adc
jmp
push
inc
adc
push
adc
repnz
pop
xor
pop
mov
xor
cmpsb
sub
test
rclb
push
lcall
jl
xor
xor
ss
xor
xor
sbb
inc
std
shll
aaa
lods
fwait
aaa
push
aaa
mov
mov
cmp
sbb
cmp
push
mov
sbbb
pop
push
fs
jo
xor
pop
insb
out
pop
sarb
sub
mov
cmp
cmp
cmp
sahf
sbb
xchg
ljmp
fwait
pop
test
push
cmp
cmp
push
jg
cmp
lea
or
push
cmp
aad
jne
xor
rclb
mov
xor
xchg
xor
xor
xor
scas
push
xor
xor
outsb
aaa
stos
aaa
inc
aaa
sbb
sarb
inc
pop
jo
jns
mov
imul
ljmp
jl
pop
mov
cmp
cmp
cmp
add
xchg
jecxz
test
cmp
cmp
jo
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cwtl
cmp
mov
and
data16
pop
cli
call
bound
aas
rclb
xor
xor
lcall
rorb
icebp
pop
xor
xor
pop
xor
outsb
ret
mov
xor
cs
xor
mov
mov
mov
hlt
es
movsl
and
in
xor
add
mov
rol
sbb
repnz
in
and
enter
scas
incl
cmp
cmp
dec
cmp
cld
cmp
cmp
inc
sbb
scas
inc
aas
pushf
aaa
xor
xor
push
loope
xor
mov
xor
mov
xor
rcrb
ja
xchg
xor
ss
cmp
push
or
and
xor
mov
mov
xor
jbe
xor
xor
dec
xor
xor
xor
dec
or
or
imul
push
test
aaa
dec
ret
aaa
fdivl
sbb
and
hlt
xlat
incl
lcall
sarb
inc
cli
clc
cmp
imul
cmp
cmp
cmp
cmp
ds
ds
aaa
inc
call
lcall
xor
xor
push
int
adc
fistpll
loope
shll
xor
xor
xor
mov
adc
mov
scas
cmp
cmp
cmp
jbe
xchg
cmp
lock
pop
clc
sarb
sub
cs
push
cltd
cmp
leave
ljmp
std
or
cmp
cmp
cmp
cmp
push
loope
xchg
cmp
incl
int3
cmp
push
ds
add
aas
cmp
mov
popf
ljmp
mov
mov
push
cmp
sub
sub
xor
outsl
add
xchg
push
ficomps
xor
xor
adc
addr16
jge
xchg
xor
pop
inc
cmc
xor
xor
mov
xor
dec
lock
xor
push
lds
or
adc
clc
scas
lea
xor
scas
or
fdivs
aam
jle
repnz
push
ss
ss
push
pushl
imul
pop
aaa
xchg
aaa
mov
cmc
aaa
jmp
cmp
stos
or
lcall
lea
cmpsb
cmp
cmp
cmp
mov
sar
add
cmp
cmp
push
sbb
outsl
lret
cmp
ds
push
fistpll
shlb
sbb
add
xor
xor
lods
in
xor
aad
aaa
int3
xor
xor
bound
insl
cs
jg
push
mov
xor
pop
fnstenv
adc
hlt
xor
xor
xor
mov
push
scas
mov
add
xor
cli
loopne
sbb
cmpsb
pop
xor
push
or
andb
mov
sbb
xchg
pop
sub
test
cmpsb
aaa
incb
adc
shlb
clc
xor
ret
cmpb
mov
jo
and
in
or
add
push
lcall
scas
ret
mov
cmp
scas
mov
out
cmp
cmp
cmp
mov
decl
mov
cmp
adc
sar
jg
cmp
cmp
mov
cmp
cmp
cmp
cmp
sub
outsb
mov
cmp
lret
cli
rolb
cmp
push
xchg
dec
cmp
sub
lock
or
xor
xchg
jle,pt
inc
push
ds
aas
ss
mov
loop
cmpsb
aas
data16
push
aas
sarb
aas
divb
repz
enter
jge
pop
test
in
xor
out
bound
mov
decl
push
out
xor
jae
cwtl
xor
xor
xorb
xor
mov
and
jmp
ficompl
inc
xor
xor
xor
xor
xor
xor
xor
mov
out
push
mov
aaa
mov
into
or
out
dec
cld
aad
in
mov
lcall
mov
sub
inc
add
pop
cmp
stos
cmc
cmp
and
decl
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int
les
loop
cmp
test
lds
lods
dec
cli
ds
rclb
ret
or
ds
xchg
push
xor
aas
ds
mov
outsb
add
test
and
aaa
cmp
cmpsb
push
xorb
dec
jg
lods
xor
incb
xor
dec
push
xor
sub
call
xor
jbe
inc
xor
aaa
push
cmp
push
loopne
push
pop
jmp
cmp
cmp
loop
imul
nop
xchg
sub
xor
repnz
jg
jbe
xor
outsb
mov
jge
mov
xor
bound
push
movsb
xor
sub
and
mov
xor
or
add
push
cld
ss
cmp
rclb
inc
dec
mov
fsubr
aam
push
je
int3
les
inc
decb
push
and
xor
outsl
push
dec
inc
sub
fs
xchg
sbb
cwtl
xchg
cmp
movsb
cmpsl
lret
mov
mov
inc
ss
aaa
cmpsb
push
loop
adc
cmp
sub
fs
or
cmp
pop
clc
sbb
cmp
xchg
je
icebp
mov
out
dec
inc
xor
aaa
mov
push
or
xor
xor
sub
into
jg
jne
or
xor
xor
xor
xchg
mov
push
loopne
lcall
in
push
xchg
aaa
scas
std
xor
ss
pop
ds
sbb
dec
xor
adc
cmp
mov
or
push
jp
aaa
jl
push
mov
ror
scas
cmp
sbb
call
cmp
lea
jp
jno
cmp
mov
shlb
cmp
mov
lcall
js
push
mov
fs
cmp
fidivrs
sbb
ss
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
test
in
jb
outsl
cmp
sbb
cmp
cmp
aas
mov
cmp
shlb
dec
push
sbb
pushf
clc
out
sarb
mov
or
and
lret
mov
cmp
aas
ja
mov
das
popa
xor
jae
xor
xor
jg
push
js
jg
ret
xor
xor
xorw
scas
push
xor
jno
inc
dec
mov
pop
xor
add
and
xchg
aaa
xlat
aaa
out
cmp
xor
hlt
cmp
sbb
cmp
hlt
add
mov
push
loop
cs
adcb
repnz
jle
fwait
dec
je
mov
sbb
cmpsb
mov
clc
les
or
xor
add
aaa
mov
enter
xorb
leave
xor
xor
sub
cmp
sbb
stc
xor
xor
jecxz
jno
ficoms
push
xor
loope
cmpsb
stos
dec
cmp
enter
cmp
cmp
in
pusha
or
arpl
cmp
test
sahf
xor
sub
aas
aaa
aas
popf
call
mov
dec
std
lar
xor
xor
xor
test
xor
sbb
in
mov
dec
xor
enter
and
sbb
pop
mov
loop
cld
and
shll
xor
xchg
and
ss
sub
out
or
ret
pop
es
mov
add
jmp
inc
sti
lahf
imulb
jb
notrack
jle
stos
xor
inc
ret
ss
ret
xor
cmp
adc
jo
add
pop
cmp
push
xor
pushf
cmp
cmp
and
cmp
cmp
add
rclb
adc
cld
int
out
test
cmp
cmp
mov
dec
cmp
add
cmpsl
fcomps
insb
cmp
or
xchg
ds
add
adc
push
xor
push
idivb
sub
fisttpl
and
mov
aas
pop
adc
das
ret
inc
add
mov
xor
aas
xor
xlat
cmp
and
sbb
push
scas
adc
xor
test
lea
sbb
adc
fisubs
mov
movsb
scas
fidivl
mov
add
sar
inc
xchg
mov
cmp
mov
lret
mov
mov
push
xlat
stos
cld
stos
push
in
aaa
jp
push
loopne
xor
jle
jp
arpl
loope
in
xlat
sub
divb
jmp
sbb
sub
mov
dec
jl
pop
jne,pn
pop
into
push
mov
mov
stos
test
dec
adc
aaa
rcrb
sub
mov
sub
xor
xor
xor
aad
fwait
rclb
insb
subb
xchg
rcrb
hlt
incl
nop
xor
add
test
push
xor
dec
xor
loop
inc
sbb
mov
hlt
fsub
pop
and
loopne
call
xor
aaa
mov
dec
mov
xchg
int3
adc
add
add
cli
push
xor
repz
push
cwtl
push
inc
jle
notb
fdivl
inc
into
xor
inc
xor
xlat
cli
xor
mov
xchg
addb
stos
sbb
push
push
sti
int
int
inc
ss
ss
rolb
cmp
mov
pop
adc
div
push
xchg
call
push
aaa
mov
popa
push
nop
mov
mov
add
jg
jg
jg
pop
rol
add
adc
aas
add
loope
xor
adc
bound
push
mov
loop
test
ja
or
call
lret
addr16
mov
jg
jb
pop
push
and
or
pusha
xchg
sti
add
push
mov
add
mov
adc
dec
data16
cmp
dec
adc
leave
cmp
jp
aas
jb
and
jg
add
repnz
test
loope
outsl
inc
cmp
dec
xor
fs
fldenv
pop
dec
test
mov
sbb
imul
out
rorb
dec
add
das
mov
inc
sbb
jae
and
ret
cmp
mov
testb
scas
add
mov
add
push
loope
aam
mov
dec
add
cmp
adc
aad
clc
cli
lods
sub
pop
inc
inc
jbe
mov
xchg
bound
cld
decl
jne
sbbb
add
xor
push
pop
shl
mov
out
push
int3
sbb
ljmp
aam
mov
cmp
mov
add
cmc
mov
inc
imul
add
bound
mov
or
maxps
dec
pop
mov
mov
or
aas
mov
lock
cmp
fwait
stos
push
shlb
or
pop
repz
hlt
cmp
pop
stos
sub
fcomip
fwait
rorl
sub
adc
mov
pushf
add
cmp
in
pop
or
xchg
imul
das
add
or
push
push
mov
push
push
cmp
add
and
push
mov
cmp
pop
inc
out
jp
add
das
push
mov
cmpsb
ds
jnp
xchg
stos
jg
push
push
sbb
fimuls
and
push
iret
push
rcll
jmp
es
aas
jg
ss
inc
sahf
pop
std
mov
add
mov
xchg
inc
add
xor
aaa
cld
sbb
pop
mov
cld
or
adc
fildll
mov
je
and
mov
out
stc
mov
mov
sarl
mov
das
in
pop
pop
inc
mov
push
mov
mov
repnz
jecxz
enter
add
xchg
out
lret
and
in
sti
fistpll
cmp
ret
ret
add
xchg
add
jns
inc
pop
xchg
or
insb
das
cwtl
jnp
sti
ja
inc
mov
push
xor
lea
push
imul
adc
inc
lods
subb
aam
lar
scas
clc
push
inc
inc
stc
mov
inc
and
add
jl
les
jb
sub
je
sbb
arpl
mov
dec
gs
add
sahf
out
movsl
jb
je
arpl
je
pop
je
xchg
fs
dec
es
mov
sbb
movsl
or
inc
push
imul
inc
fnstenv
push
gs
dec
outsl
cmp
es
call
imul
push
call
test
inc
outsl
and
push
mov
and
gs
inc
fs
xchg
mov
ret
dec
inc
popa
jbe
fcmovnb
out
int
je
pop
shl
call
xchg
push
mov
or
mov
insl
les
jb
push
inc
mov
arpl
fistl
nop
popa
bound
jae
sub
loope
inc
outsl
mov
sub
arpl
push
xor
jb
inc
jbe
lahf
sub
xor
sub
push
popa
ja
mov
add
test
ret
fs
dec
pop
addb
inc
scas
xor
xchg
leave
inc
adc
sub
and
push
xor
or
jno
mov
sbb
int
mov
push
subb
iret
test
dec
rcll
adc
sbb
push
mov
add
jnp
adc
mov
adc
inc
inc
pop
inc
orl
xor
push
outsl
and
push
xor
inc
roll
lds
pop
add
adc
push
pop
inc
sbb
and
les
push
pop
add
inc
pop
inc
orb
outsl
inc
daa
into
adc
xor
push
sbb
pop
add
jmp
lods
xlat
or
mov
push
inc
minps
sub
sbb
push
adc
adc
sbb
push
mov
inc
jmp
or
push
enter
add
adc
xor
push
rcll
push
movsl
push
lret
lds
mov
dec
lahf
and
rorb
jno
xlat
xchg
add
mov
and
or
adc
movsl
add
pop
popf
inc
pop
add
loope
mov
jo
pop
add
pop
ljmp
push
inc
sub
cwtl
inc
je
cmp
adc
inc
addb
test
cmp
xchg
cmc
sbb
and
mov
inc
push
jae
outsb
cs
insb
xor
or
das
and
push
xor
sti
aad
mov
xchg
push
adc
sub
and
sbb
cwtl
add
inc
or
or
cmp
add
mov
jne
test
push
push
xlat
loop
or
add
xor
push
and
mov
add
sub
mov
popa
adc
xchg
lahf
push
xchg
push
adc
pop
leave
mov
and
mov
inc
mov
lods
xchg
pop
aad
sbbb
int3
or
jno
je
add
pop
mov
add
mov
push
and
out
aad
add
inc
push
or
xchg
ret
popa
jmp
aad
push
lods
mov
adc
test
mov
outsb
movsb
out
mov
test
scas
and
test
mov
movsl
adc
and
adc
inc
repz
xor
stos
jg
sbb
mov
mov
adc
mov
adc
pop
stc
mov
outsb
test
mov
inc
or
dec
add
sub
xlat
add
les
lea
xchg
jo
sub
aad
add
inc
xor
or
fnstcw
sub
les
mov
add
inc
mov
inc
jne
bound
and
mov
and
jecxz
or
in
push
inc
mov
pop
call
jge
push
insb
mov
push
lods
addb
jge
mov
sub
inc
mov
sti
mov
mov
bound
dec
and
mov
pop
jge
lea
mov
xlat
push
test
and
fadd
subb
inc
push
and
out
mov
add
and
xor
pop
rorl
push
sub
inc
and
mov
imul
ja
and
mov
addb
xadd
and
mov
adc
gs
sbb
bound
sub
or
pop
mov
out
pop
push
and
push
flds
pop
push
lea
adc
xchg
inc
popa
push
mov
in
adc
dec
fyl2x
xor
push
mov
rol
mov
out
or
inc
xor
mov
loopne
sub
push
sti
push
add
lea
push
inc
insl
mov
rorl
mov
xchg
or
and
test
adc
cmc
ja
test
or
or
push
xor
add
dec
sbb
cmp
cmpsl
icebp
nop
stos
nop
pop
cmpsl
aaa
fstl
adc
dec
and
mov
inc
or
mov
mov
sbb
loop
inc
add
push
je
insl
movsb
sbbb
add
fs
aad
sub
jmp
adc
xlat
sbb
sbbb
pop
mov
sub
loope
add
xchg
and
sub
dec
shlb
cmpsl
adc
xor
mov
sub
push
push
daa
sbb
lds
or
cmp
push
add
add
popa
adc
push
inc
jmp
add
cmp
add
inc
mov
add
inc
jge
orb
mov
cmp
xchg
adc
lcall
lea
xor
dec
or
sub
or
add
push
xor
les
push
add
loop
pop
stos
pusha
mov
sbbb
mov
cmpsl
push
or
adc
mov
adc
inc
addr16
lods
bound
adc
fld
sub
imul
imul
bound
jo
inc
adc
push
movsb
sub
test
pop
dec
or
and
or
xor
and
adc
popa
add
add
dec
add
xor
ret
lret
adc
ret
or
imul
add
adc
or
add
inc
push
dec
cs
pop
or
add
push
test
or
push
adc
xchg
xchg
or
packssdw
inc
cmp
cld
mov
imul
push
jo
add
push
cmp
icebp
cs
add
add
mov
add
inc
lcall
rorl
popa
je
cmpsb
mov
imul
add
mov
dec
push
xor
cld
dec
in
sbbl
xchg
xchg
mov
pushf
dec
movsb
fldcw
xor
add
cs
scas
jb
jb
pop
es
push
add
mov
outsl
sub
add
dec
incl
add
add
jle
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
push
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
add
add
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
imul
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
jb
add
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
push
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
push
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
push
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
push
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
push
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
push
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
push
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
push
loop
add
xchg
test
addr16
ja
jp
shll
jb
mov
inc
or
daa
xchg
sti
cmpb
push
push
jb
add
sub
js
dec
data16
cmp
jp
jb
and
add
test
cmp
dec
iret
mov
mov
add
fldenv
mov
and
xchg
lret
adc
mov
mov
icebp
and
movlps
ret
clc
stos
mov
or
scas
inc
dec
call
fs
push
loope
aam
call
out
mov
aad
pop
cli
out
jbe
mov
stos
mull
aaa
pushf
jmp
push
js
dec
jne
jg
scas
adc
pushf
repz
daa
lret
mov
out
xorb
pop
ljmp
out
adc
int3
mov
lods
call
imul
lret
lods
ret
fcomip
bound
cli
lock
loope
cld
mov
mov
or
push
or
mov
stos
push
push
pop
repz
hlt
cmp
cmpsb
stos
in
rorl
sub
test
test
sbb
repnz
fsubr
das
mov
xchg
or
push
mov
icebp
cmp
pop
and
push
inc
arpl
les
pop
inc
sbb
jp
mov
xor
jb
cmpsb
ds
jnp
mov
sahf
inc
in
jne
xchg
and
rcll
pop
aas
jg
xchg
inc
sahf
movsb
std
mov
es
xchg
inc
inc
sub
mov
xor
cmpsl
mov
cld
cmp
or
ljmp
mov
dec
mov
out
push
mov
mov
cmp
mov
pop
inc
in
sbb
mov
inc
dec
fistpl
repnz
jecxz
mov
out
fstps
jo
jg
dec
aas
inc
mov
fwait
inc
mov
cmp
pop
pop
cmpb
and
push
insb
pop
into
and
xor
addr16
adc
sub
sbbb
lods
pop
adc
ret
mov
adc
jge
mov
sub
ljmp
or
das
xchg
push
jmp
jo
mov
mov
inc
orb
cmpsb
xor
push
scas
stos
and
mov
hlt
sub
sbb
call
int
je
push
mov
pop
fistpl
cmp
inc
pop
les
subb
adc
pusha
das
rorl
jae
dec
repz
xchg
dec
in
inc
stc
insb
sbb
sub
add
data16
outsb
std
icebp
adc
mov
aas
dec
clc
dec
test
leave
sbb
pop
mov
test
pusha
insb
inc
add
insb
inc
add
insb
inc
add
inc
add
insb
inc
add
insb
inc
add
add
add
insb
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
jae
popa
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
addr16
jb
push
inc
popa
jb
push
xor
imul
