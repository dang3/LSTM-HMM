push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
lcall
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
add
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
mov
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
sbb
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
call
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
call
in
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
inc
and
add
add
add
xor
add
enter
push
and
add
and
add
and
add
add
in
add
sbb
add
sahf
and
add
and
add
and
add
and
add
add
mulb
add
mov
add
loopne
add
add
add
mov
add
xor
add
enter
push
and
add
add
clc
and
add
and
add
and
add
add
xchg
and
add
and
add
add
add
add
push
and
add
add
ds
add
add
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
add
add
xor
add
enter
push
and
add
and
add
and
add
add
in
add
sbb
add
sahf
and
add
and
add
and
add
and
add
add
mulb
add
mov
add
loopne
add
add
add
mov
add
xor
add
enter
push
and
add
add
clc
and
add
and
add
and
add
add
xchg
and
add
and
add
add
add
add
push
and
add
add
ds
add
add
add
add
add
dec
outsl
arpl
dec
outsl
arpl
add
je
jb
jbe
je
push
jb
imul
push
add
add
popa
jo
gs
jb
jns
jge
dec
jo
outsb
dec
jne
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aad
inc
gs
gs
inc
imul
jae
jb
outsb
inc
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
je
dec
popa
outsb
fs
add
cmp
fs
imul
add
xchg
add
je
jne
jb
outsb
je
push
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
aam
inc
gs
jb
jbe
push
jns
gs
add
inc
gs
je
imul
inc
add
repnz
imul
jb
je
arpl
add
out
inc
gs
imul
bound
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
add
imul
outsb
je
outsl
insb
add
inc
imul
insl
gs
insb
outsl
jae
add
add
popa
jo
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
push
imul
gs
add
jl
inc
gs
push
gs
dec
gs
imul
gs
push
outsl
outsl
insb
add
addb
jae
push
arpl
add
inc
gs
push
jns
push
imul
insb
outsl
jae
push
push
popa
je
add
jle
inc
gs
imul
gs
add
aaa
add
ja
push
fs
inc
gs
push
outsl
insb
outsl
jb
xchg
dec
jo
outsb
push
push
popa
je
add
add
ja
push
popa
arpl
jb
jne
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
inc
gs
jbe
imul
imul
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
jbe
jecxz
jbe
sbb
cbtw
les
xchg
xor
pop
adc
cmp
sarl
mov
pop
and
frstor
push
dec
fsubl
subb
stc
sbb
dec
ror
adc
sti
inc
outsl
mov
fidivs
ucomiss
les
jbe
or
movsb
iret
ror
pop
leave
jne
inc
xchg
mov
lods
mov
int
sahf
push
sti
fstpl
adc
cltd
mov
ret
lods
inc
xchg
and
mov
dec
sub
inc
test
into
cli
es
in
dec
leave
push
add
cmpxchg
mov
xor
nop
cld
clc
xchg
aad
popa
mov
xor
push
push
xchg
aaa
push
in
add
add
or
mov
mov
shr
pushf
pop
imul
in
test
std
mov
add
add
dec
stc
mov
pop
mov
mov
imul
mov
gs
xor
mov
lahf
cmp
or
out
jns
cmovne
js
movsl
push
mov
nop
sub
or
xchg
inc
jbe
adc
idivb
and
xor
or
ror
mov
dec
lret
stos
jl
push
dec
idivb
xor
xchg
orl
in
outsb
cs
push
xor
test
inc
dec
int
inc
jns
clc
sub
outsb
mov
adc
push
xor
push
lods
movsl
mov
lcallw
sub
mov
mov
movl
push
or
pop
sbb
xchg
jge
inc
das
bound
cmp
out
lcall
cmp
in
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
addl
add
cmpsb
add
test
add
mov
or
add
roll
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jnp
jp
lods
lods
lods
add
cmpsl
cmpsl
push
mov
mov
mov
lret
int3
int
rcl
in
rcl
shl
iret
iret
shl
int3
into
into
hlt
leave
leave
repz
leave
out
mov
in
mov
mov
lods
lods
stos
lea
cltd
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
lret
rcl
sar
fcom
xlat
std
fcomp
xlat
xlat
fdivr
aad
rcl
sar
into
into
int
aam
dec
rcl
inc
std
mov
mov
lods
iret
movsb
movsl
movsb
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
scas
sbb
mov
jnp
mov
sar
leave
lret
leave
dec
iret
iret
aam
fcom
xlat
call
fcom
call
aad
dec
int
dec
int3
into
call
aam
int3
int3
int3
inc
mov
mov
ljmp
test
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
dec
add
pop
add
or
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
into
int
rcl
sar
xlat
xlat
fcom
fdivr
dec
int3
into
dec
lret
into
int3
int
inc
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
fs
das
push
or
push
xor
ss
cmp
cmp
adc
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
dec
leave
leave
dec
rcl
call
aam
call
aad
call
ror
inc
leave
inc
ret
mov
mov
ljmp
movsb
movsl
sahf
sahf
pushf
xchg
xchg
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jge
jle
jg
jb
jb
popa
arpl
push
push
push
xchg
cmp
mov
outsb
outsb
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
lret
enter
mov
mov
ljmp
mov
cltd
call
xchg
xchg
xchg
xchg
xchg
fwait
fwait
cltd
in
addl
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jl
xchg
lea
incb
jnp
idivb
jp
jo
outsl
out
addr16
data16
jne
jge
jge
jns
js
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
stos
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
sahf
popf
pushf
call
xchg
decl
xchg
xchg
lahf
sahf
sahf
sti
mov
xchg
xchg
mov
jns
jp
cs
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
lahf
in
mov
mov
addb
decb
mov
loope
jno
enter
mov
test
xchg
push
cmp
ss
and
cmp
mov
test
icebp
lods
lods
lods
sti
lods
lods
stos
lods
lods
lods
test
test
movsb
movsl
movsl
std
fwait
cltd
cltd
xchg
xchg
xchg
decl
jg
jns
jp
jnp
jnp
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
femms
aaa
or
inc
inc
dec
insl
imul
test
leave
cltd
lcall
cltd
cltd
cltd
stc
xchg
nop
std
mov
mov
mov
mov
mov
fwait
jmp
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jnp
scas
test
add
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
pushf
sahf
sahf
std
movsb
movsb
movsl
stc
mov
xchg
xchg
in
nop
nop
nop
in
xchg
push
jne
femms
dec
add
add
or
inc
daa
sub
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
lea
call
mov
cmpsl
ljmp
test
pushl
lahf
scas
mov
mov
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cwtl
lcall
mov
decl
nop
xchg
xchg
xchg
popf
popf
sahf
movsl
mov
test
movsl
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pop
pusha
bound
jb
mov
jge
orl
int
nop
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
aaa
jg
mov
ja
mov
movsb
mov
mov
lods
lods
mov
mov
add
mov
pop
pusha
adc
mov
ljmp
pushf
decl
call
xchg
xchg
call
xchg
xchg
lcall
mov
mov
movsb
stc
cltd
lcall
mov
xchg
aad
xchg
lcall
lea
stc
xchg
test
std
xchg
jae
cltd
push
cmp
push
jg
stos
inc
jl
mov
jp
mov
jae
mov
outsb
ljmp
pcmpgtd
stos
or
ljmp
inc
jg
mov
mov
lods
pushf
mov
mov
add
mov
pop
pop
adc
mov
jmp
xchg
xchg
call
cltd
cltd
lcall
mov
sahf
lcall
xchg
xchg
decl
xchg
xchg
call
fwait
cld
cltd
cltd
pushf
stc
mov
xchg
sahf
cld
pushf
mov
xchg
insb
mov
xchg
push
jge
cwtl
dec
jp
fwait
jne,pt
cltd
sub
push
push
jmp
adc
test
adc
lods
adc
lods
adc
mov
imul
mov
imul
ds
lcall
scas
scas
lods
scas
mov
movsl
movsb
add
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
popf
sahf
jmp
movsb
movsb
jmp
mov
cwtl
decl
mov
decl
ja
lcall
xchg
push
jp
xchg
jo,pt
xchg
sub
decl
adc
nop
or
push
pop
call
add
sahf
pop
pop
jmp
sbb
mov
outsl
pushl
outsb
mov
and
mov
pop
je
rolb
les
mov
mov
mov
movsl
movsb
add
pop
pop
adc
scas
mov
shlb
lcall
mov
test
test
test
stos
test
cmpsl
lcall
orb
mov
decl
sub
mov
pusha
decl
or
test
push
incl
add
lea
pop
call
add
lcall
ljmp
and
mov
ja
mov
sub
shrl
ret
inc
sub
dec
xor
inc
inc
mov
scas
mov
mov
lret
mov
add
add
add
add
lods
movsb
test
push
push
push
adc
cmpsl
scas
ljmp
sahf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
xchg
pop
incl
pop
push
incl
add
test
push
incl
push
decl
push
call
add
sahf
add
add
ljmp
sub
inc
cmp
dec
cmp
int3
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
cltd
lahf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
decl
push
decl
push
decl
or
add
mov
push
decl
push
call
add
add
test
pusha
ljmp
sbb
ret
cmp
dec
inc
call
inc
call
inc
mov
fmuls
fmuls
fisttpl
ficoml
call
xchg
std
mov
mov
movsb
movsl
mov
or
add
add
add
add
dec
dec
adc
jl
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
call
sbb
mov
pop
decl
or
add
popl
push
call
pop
jmp
add
test
pop
arpl
shlb
dec
dec
call
push
cwtl
fcoms
fsts
fcoml
ficoms
jmp
push
popf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
jns
sahf
cltd
popf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
xchg
pop
call
push
call
or
popl
push
call
add
mov
add
stos
add
mov
data16
mov
xor
fldenv
fbld
fbld
jmp
cmpsb
jmp
cmpsb
call
push
ljmp
fldl
ret
mov
cmpsl
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jae
cltd
xchg
cwtl
call
lahf
popf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
cltd
xor
cltd
outsl
call
pop
callw
add
fwait
add
mov
add
lods
add
mov
pushw
call
inc
nop
jmp
outsl
lods
jmp
outsl
lods
jmp
jo
jmp
jne
jmp
scas
out
jbe
out
je
in
jae
jmp
mov
mov
cmpsl
cmpsb
lcall
mov
add
add
add
jle
cmp
insb
insl
js
lea
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
outsb
lcall
cmp
xor
cltd
sbb
call
add
mov
add
test
popa
pushl
add
add
leave
sbb
fsts
jmp
jbe
call
jle
in
jg
out
cmpl
push
test
push
cmpb
aam
mov
test
sahf
daa
sahf
mov
sahf
add
add
add
add
ss
pop
pop
pop
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
inc
mov
lcall
cmp
movsl
inc
jl
mov
cmp
fwait
pop
call
pop
jmp
add
scas
add
mov
fs
mov
add
shll
cmp
mov
in
mov
push
pop
push
pop
push
xchg
ret
push
xchg
nop
ret
stc
xchg
stc
pop
out
mov
fidivl
lods
stos
mov
popf
sahf
xor
pushf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
inc
mov
jmp
inc
jnp
test
cmp
dec
test
mov
punpcklwd
fwait
add
mov
add
lods
add
mov
fs
mov
add
movl
jmp
jns
in
xchg
push
lcall
hlt
lcall
negb
lret
sti
popf
int3
cld
popf
into
cld
cwtl
lret
push
xchg
sar
mov
cli
mov
mov
mov
nop
nop
add
add
add
ss
cmp
dec
jecxz
pop
popa
call
mov
mov
mov
sar
inc
mov
sar
mov
ljmp
dec
mov
movsb
sub
cltd
or
popf
add
mov
add
mov
mov
add
movl
je
fiadds
in
mov
push
cmpsb
into
push
movsl
into
clc
test
cld
cmpsl
iret
cli
cmpsb
iret
sti
test
iret
cld
stos
sar
cmpsl
sar
negl
lret
dec
leave
int3
std
mov
mov
sahf
sahf
sahf
dec
xchg
xchg
xchg
add
lcall
xor
xor
daa
sub
or
inc
bound
pop
xlat
jae
jb
mov
mov
ret
mov
ret
enter
ret
pushl
push
xchg
scas
push
mov
lods
dec
test
sahf
sbb
popf
add
movsb
add
stos
add
mov
mov
add
int3
add
fadds
je
loopne
jnp
out
pop
test
cmc
lahf
lret
sti
scas
aam
sti
mov
cli
mov
cli
mov
std
mov
cld
mov
std
mov
mov
mov
cld
mov
push
movsl
jmp
mov
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
add
dec
dec
ss
jo
xchg
lcall
aam
xlat
jmp
xlat
xlat
not
rcl
std
lret
int3
int3
dec
leave
leave
dec
leave
lret
dec
lret
mov
mov
scas
jmp
push
mov
stos
cmp
jmp
add
mov
arpl
mov
add
roll
outsb
fadds
jae
loopne
jne
jmp
jb
cld
scas
aad
mov
cld
mov
mov
xlat
std
mov
xlat
inc
fcos
mov
lret
call
lret
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
add
or
mov
pop
call
call
loope
fucom
fcomi
fcomp
fdivr
aam
fdivr
int
iret
mov
push
test
test
jae
mov
add
mov
popa
mov
add
lret
call
add
fildl
jbe
in
jbe
out
xor
sti
mov
loopne
std
ret
inc
loopne
inc
fdivrp
inc
loopne
std
loopne
inc
std
enter
enter
lret
sti
mov
enter
into
mov
mov
xchg
adc
add
add
incb
std
incb
std
incl
repnz
or
out
in
pop
in
out
in
sub
in
in
dec
call
jmp
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsb
cmp
movsl
adc
pop
ljmp
add
add
lds
push
into
add
add
loopne
ja
jmp
inc
popf
cld
mov
in
cld
int3
jecxz
dec
in
dec
jecxz
dec
loop
dec
loop
dec
loopne
std
iret
jecxz
std
shl
call
in
std
shl
cld
fcos
in
mov
xlat
inc
out
cmpsb
cmpsb
test
xchg
xchg
xchg
sbb
lcall
incl
incl
idiv
testl
repnz
push
in
lock
out
repnz
cmp
in
in
pop
fsubp
loope
les
xchg
sti
lahf
and
pop
jmp
add
mov
inc
add
movl
jo
fiaddl
je
jecxz
jp
in
push
jl
negl
cli
mov
cld
shl
std
shl
shl
shr
shl
call
out
call
jmp
fld1
std
shl
push
ret
aad
in
leave
lret
leave
rep
stos
test
xchg
xchg
xchg
and
cwtl
cwtl
add
std
cli
add
testl
repz
or
aad
xor
mov
xchg
negb
add
add
lods
add
mov
add
leave
add
roll
jo
faddl
jne
out
js
out
sbb
push
je
cld
ret
loopne
xlat
ljmp
fucomi
std
fucompp
fldpi
fucomi
fucomp
std
fucomi
jmp
in
std
fucomip
fsubrp
std
shl
push
ret
call
iret
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
add
loop
add
mov
xchg
lods
jnp
repnz
jmp
add
mov
add
into
add
aam
jno
filds
je
call
sub
std
shl
fsubrp
std
fucomi
fldl2e
fldl2t
fsub
aad
std
aam
sti
shl
sti
shl
clc
into
clc
int3
fdivrp
cmc
ret
xlat
out
mov
fcom
xlat
sti
mov
mov
fwait
fwait
fwait
cmp
lcall
mov
mov
add
mov
subb
push
sahf
add
test
pop
pushl
inc
add
iret
add
fadds
jb
loopne
jns
jmp
aaa
xchg
sti
xchg
cli
leave
loope
cld
int3
loop
cli
fdivrp
clc
rcr
idivb
push
mov
sar
in
mov
int
jmp
ret
sar
ljmp
imul
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
int
mov
rol
mov
cmpsb
loopne
ss
mov
add
mov
data16
mov
add
dec
or
rorb
ficoml
ja
loope
cmp
dec
xchg
call
scas
lret
mov
out
leave
std
loop
cld
loopne
cli
fdivl
lock
int
fmul
rcr
xlat
shl
aad
out
loope
in
in
test
out
lock
ljmp
push
lods
stos
stos
adc
cmpsb
cmpsb
test
sahf
mov
roll
rolb
ret
mov
stos
aam
dec
cmp
cmpsb
sbb
jno
mov
js
mov
inc
xchg
les
lret
gs
test
mov
shll
rcl
ror
ror
int
int
mov
xlat
rcl
jg
fcmovnu
jb
gs
in
call
out
in
xor
div
mulb
repnz
fcmovnu
or
mov
int
xchg
add
mov
rol
mov
scas
mov
test
insb
mov
test
sbbb
xchg
cmpsl
sarb
mov
ret
cmpsl
leave
mov
enter
int3
jp
into
iret
addr16
rcl
push
iret
rcl
dec
aam
xlat
inc
rcl
aad
aam
fsubs
xlat
sbb
loopne
adc
in
push
loope
jecxz
out
jmp
in
repnz
add
cld
testl
std
incb
std
incb
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
mov
ret
xor
int3
lret
rcl
and
aam
rcl
rcll
iret
rorl
rcl
aad
rcr
xlat
add
fcmovnu
add
add
in
add
in
jmp
leave
xlat
add
incl
mov
mov
add
ret
ret
vmovaps
mov
mov
push
rol
or
leave
enter
leave
add
into
leave
add
aam
add
fcom
add
xlat
aad
xlat
aad
aam
add
add
aam
add
loop
add
add
in
add
icebp
lock
incl
std
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
ret
mov
mov
mov
ja
test
dec
cmpsl
cmpsl
cmpsl
and
add
add
add
add
add
add
add
add
mov
shlb
into
iret
jmp
aad
cmc
rcl
sar
into
into
iret
cli
int
int
lret
lret
int3
hlt
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
enter
into
into
aad
aad
call
iret
sar
int
int
lret
int3
int3
mov
mov
stos
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jae
jne
fs
dec
inc
inc
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
sar
int3
int3
lret
mov
mov
mov
ljmp
lahf
sahf
xchg
xchg
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
jg
addl
test
jns
push
imul
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
jo
outsl
adc
mov
mov
sar
mov
mov
ljmp
pushf
lcall
xchg
xchg
fwait
lcall
dec
dec
dec
dec
wrmsr
add
add
add
add
add
pop
cltd
lcall
pushf
xchg
lcall
addl
jmp
js
sarb
jnp
jnp
jns
jae
je
push
push
push
cmp
aaa
sahf
sahf
pushf
mov
scas
scas
repz
scas
lods
sti
lods
lods
scas
std
test
sahf
sahf
call
xchg
call
mov
lods
jmp
scas
lods
leave
movsl
movsb
movsb
cltd
jb
jb
adc
adc
add
add
add
add
insl
outsl
outsb
pop
xchg
mov
sahf
lcall
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
jo
orl
lcall
mov
call
pushf
sahf
ljmp
mov
mov
mov
stc
mov
mov
cmpsl
mov
addb
add
add
add
add
popa
or
lods
mov
movsl
sahf
movsb
decl
mov
nop
nop
lcall
popf
sahf
sti
sahf
mov
lcall
push
push
jo
push
pop
outsl
imul
jle
subb
mov
std
xchg
mov
ljmp
jg
pushl
pop
mov
jl
mov
lods
lods
insl
test
add
add
add
add
pusha
or
mov
in
movsb
test
xchg
xchg
call
xchg
xchg
lcall
lcall
popf
sahf
sahf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
mov
out
xchg
jbe
notb
pop
jle
pushf
dec
jnp
movsb
inc
jns
lods
aaa
js
scas
sub
sbb
push
scas
sbb
mov
mov
mov
mov
jle
movsl
movsb
push
popa
popa
pop
or
mov
lcall
sahf
popf
jmp
mov
cwtl
decl
addb
xchg
jb
cld
xchg
pusha
test
xchg
dec
jp
xchg
cmp
nop
sub
xchg
sbb
xchg
maxps
sahf
punpckldq
cmpsl
pop
push
pushl
sbb
mov
and
rcrb
mov
scas
scas
xchg
sahf
lahf
sahf
adc
add
add
popa
popa
pusha
or
lods
mov
test
mov
cmpsl
ljmp
test
cwtl
decl
cmp
mov
decl
adc
or
mov
push
call
add
pushf
add
test
pushl
sub
inc
das
jl
lds
jle
enter
leave
xor
inc
test
mov
cmpsl
test
sbb
add
add
pop
popa
pop
or
movsb
test
cmpsl
mov
test
scas
scas
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
xchg
push
decl
add
sahf
add
cmpsb
add
mov
outsb
inc
cmp
call
inc
mov
roll
inc
xchg
fiaddl
call
bound
stc
mov
mov
movsl
movsl
movsb
daa
std
incl
add
add
pop
popa
pusha
or
mov
ljmp
mov
mov
mov
stos
call
sbb
pusha
decl
or
push
call
pop
jmp
add
mov
dec
xchg
fstps
fistpl
jmp
pop
sahf
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsb
lods
cmpsl
xor
jg
add
add
dec
dec
dec
pop
jle
jp
fwait
xchg
cltd
jecxz
mov
scas
pushl
mov
mov
lcall
sub
lcall
and
call
pop
lcall
add
scas
add
mov
xor
jecxz
test
ljmp
out
jno
jmp
jns
call
test
std
mov
test
inc
jg
addb
add
dec
dec
dec
pop
outsl
insl
insb
bound
cwtl
xchg
ljmp
mov
mov
mov
jbe
lcall
ja
pushf
sub
call
add
mov
add
mov
inc
or
call
inc
xchg
jmp
js
jmp
test
push
xchg
push
mov
mov
cmpsl
test
lcall
add
sub
push
push
push
dec
pop
gs
loopne
mov
mov
mov
inc
mov
popf
jmp
inc
cmp
sub
cltd
pop
pop
jmp
add
mov
arpl
mov
push
jne
loope
mov
push
xchg
cwtl
push
cwtl
stc
cltd
lret
lcall
loope
mov
stos
popa
mov
add
add
xor
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
mov
test
ljmp
and
add
cmpsl
add
mov
arpl
mov
add
and
push
mov
into
clc
test
sar
std
stos
sar
cld
stos
sar
cli
cmpsb
int3
jmp
mov
inc
rol
stos
test
popf
or
add
add
dec
dec
dec
aaa
je
jb
stos
stos
stos
ror
into
int3
out
into
lret
cmc
lret
int3
lret
lret
enter
movsb
mov
stos
popa
mov
stos
inc
cmp
adc
test
pop
pushl
add
int
insl
fildl
xchg
clc
xchg
mov
cld
mov
fcos
mov
xlat
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loope
loopne
loopne
fadd
fcmovu
aam
xlat
out
shll
cmpsl
sub
pusha
ljmp
add
enter
add
loop
jp
icebp
push
mov
std
inc
loopne
inc
loope
dec
fdivrp
std
leave
fdivrp
dec
loopne
sti
fdivr
out
mov
leave
divb
sahf
sbb
add
add
incl
std
add
jmp
in
sbb
in
in
xor
loop
loop
les
mov
mov
add
mov
arpl
ret
dec
add
fildl
je
jmp
outsb
mov
std
ret
fdivrp
sti
shl
shl
call
in
shl
std
call
aam
push
xlat
fmul
sar
mov
mov
add
std
incl
std
incb
cld
cld
cld
pop
aam
push
mov
pop
mov
lahf
or
ljmp
add
ret
add
rolb
jo
filds
ja
out
and
std
shl
fsubr
fsubr
cld
xlat
call
std
xlat
out
cld
fsubr
cld
aam
push
enter
rcl
sti
mov
lahf
lahf
das
add
add
int3
into
into
or
arpl
stos
add
mov
add
aad
jb
loop
ja
out
xor
stc
int3
loope
cli
lret
test
repz
aad
icebp
rcl
out
ret
in
aam
in
aad
in
shl
in
fsubr
mov
test
std
incl
aam
push
mov
jb
or
mov
insl
inc
sbb
int
jl
xlat
sub
sti
ficoms
clc
in
mov
out
in
leave
jmp
fidivrs
lret
sarb
in
ficompl
in
call
rorb
mov
add
stos
stos
stos
add
xchg
movsb
les
xchg
mov
nop
fidivrl
andb
int
mov
sarb
jge
int3
insl
ror
iret
pop
ror
rorl
fcom
cmp
das
in
frstor
in
repnz
in
in
or
std
incb
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrb
leave
leave
and
rcl
pop
rol
adc
rcl
or
loopne
or
int3
int
lods
stos
lods
add
incl
incl
lcall
pextrw
or
into
into
into
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
leave
mov
ret
ret
mov
scas
scas
mov
lods
lods
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
aam
rcl
sar
int
iret
std
stc
mov
cmpsl
cmpsl
roll
pop
add
add
add
add
add
add
add
add
jae
jno
addr16
dec
inc
das
cs
inc
and
add
add
mov
mov
cmpl
dec
into
int
aam
aam
int
int
mov
mov
jmp
mov
push
add
add
add
add
jne
jne
test
adc
outsb
jo
bound
mov
data16
insl
outsb
insl
jb
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
lcall
xchg
cwtl
lds
jb
es
add
add
add
add
jb
jb
popf
xchg
pushf
mov
xchg
mov
xchg
test
test
imul
mov
into
mov
mov
xchg
decb
mov
popf
pushf
fwait
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
mov
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
popf
popf
popf
cmc
cwtl
cltd
cltd
in
addl
imul
jle
mov
notl
mov
mov
cltd
pushl
jo
mov
mov
test
lods
stos
add
add
add
scas
test
xchg
xchg
xchg
call
cltd
cltd
call
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
arpl
std
lcall
ljmp
and
mov
outsb
pushl
sahf
lods
lock
mov
imul
int
add
add
xchg
pop
scas
movsl
lods
test
sahf
sahf
sahf
jmp
movsl
cmpsb
call
push
decl
inc
jae
mov
imul
xchg
adc
xchg
or
mov
sbb
pushl
es
ret
inc
inc
xchg
mov
mov
subl
je
push
mov
movsb
test
ljmp
mov
lcall
sub
mov
pop
incl
add
mov
push
call
add
lods
adc
ret
dec
ds
rolb
call
inc
mov
aam
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
movsb
push
add
add
push
xchg
xchg
test
lahf
mov
pushl
mov
mov
call
push
pusha
decl
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
movsl
call
fwait
mov
mov
mov
cmpsb
test
pop
add
add
arpl
adc
sahf
lcall
mov
mov
scas
lcall
xor
cltd
and
xchg
push
pop
jmp
add
mov
xor
out
mov
in
jp
out
jl
out
jg
ficompl
mov
mov
add
add
dec
adc
imul
mov
mov
mov
ret
ret
mov
fs
movsl
inc
jl
sahf
and
popf
add
pop
pushl
or
dec
xchg
out
mov
push
xchg
clc
cwtl
clc
xchg
enter
inc
mov
movsl
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
ret
ljmp
dec
cmp
cmpsb
add
mov
arpl
ret
call
vmwrite
jmp
lods
clc
cmpsb
into
stc
stos
sar
cld
lods
sar
sti
scas
sar
lods
sar
ljmp
fldenv
std
add
jno
mov
mov
rcl
mov
aam
fnop
rcl
out
lret
cli
mov
mov
jmp
add
add
aam
jb
out
test
stc
pop
cld
mov
std
rcr
std
ret
cld
ret
icebp
mov
ret
in
cmpsl
cmpsl
dec
cmpb
add
add
stos
lods
stos
add
jmp
or
call
out
outsb
fcomp
fisubl
movsb
daa
outsb
ljmp
add
int3
add
add
out
cmp
std
into
in
std
shl
call
in
call
out
shl
push
fdivr
aad
into
in
scas
scas
scas
popa
cmpl
add
incl
std
std
push
lret
int3
shrl
mov
add
mov
add
loope
jns
repz
movsl
cld
loopne
cld
jmp
cld
shl
std
aad
sti
shl
push
fsin
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
mov
or
fstpl
cmp
insl
lods
cld
lock
shl
ljmp
jmp
out
aam
call
scas
push
fwait
fwait
cltd
add
sarb
xchg
dec
and
push
mov
ret
int3
lret
mov
xlat
mov
int3
adc
int
fmul
iret
pop
aad
in
loopne
out
call
sbb
sarl
cmp
movsb
lods
arpl
lods
mov
les
les
ret
ret
lret
sbb
bswap
int
or
aad
push
std
add
addb
std
add
add
add
rol
std
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
rcrb
out
sahf
ljmp
outsb
repnz
pop
mov
leave
pop
dec
shlb
add
stos
adc
and
aad
jp
and
mov
ret
lds
lea
sub
in
mov
push
jnp
das
loope
lret
fsubrs
cmp
inc
lods
cmpsl
jl
scas
mov
push
lds
arpl
adc
out
fdivl
sahf
cmpsl
fcomp
movsb
mov
cltd
pop
push
lods
into
mov
xchg
int
pop
into
pop
sub
jge
int3
push
hlt
sarb
mov
arpl
lcall
rorb
and
fstpt
inc
gs
pop
lahf
rcll
lret
jbe
cmc
pusha
sbb
dec
jmp
scas
enter
pop
pop
xor
cmp
xor
xor
addr16
inc
mov
call
or
and
loopne
outsb
add
adc
cmp
and
jno
std
adc
ljmp
adc
into
sub
ret
push
outsl
cmp
push
int3
bswap
xchg
sbb
jns
mov
push
mov
jp
jns,pn
ss
loope
test
mov
jle
rolb
xor
add
fs
mov
dec
lahf
es
test
in
jmp
cmp
xchg
cmp
addl
jnp
xor
dec
pushf
icebp
add
daa
hlt
mov
xchg
aaa
lds
push
shl
adc
aad
repz
aas
popa
pop
mov
bound
ss
mov
stos
out
loopne
add
jge
movsl
push
jbe
cmpl
mov
or
pop
pop
orl
js
push
pop
js
pusha
arpl
or
xorb
sbb
pop
cltd
mov
xlat
mov
jl
inc
or
dec
adc
mov
imul
jno
out
lods
inc
push
les
cld
clc
push
jp
mov
insb
jo
push
loop
dec
sub
movsl
xor
add
push
mov
cwtl
out
mov
jns
add
lcall
sbb
ror
mov
shll
icebp
outsl
aas
popf
or
xlat
test
test
cmpl
jmp
push
xchg
mov
pusha
repnz
add
in
outsb
jg
aad
lods
test
mov
repnz
das
int
lcall
std
or
lods
cld
cmp
xchg
and
mov
icebp
jbe
jns
in
insb
out
sub
cld
pop
pop
xor
sbb
dec
stc
nop
inc
dec
mov
dec
fnsave
cli
in
dec
jmp
add
or
xor
jnp
fsubrl
xchg
inc
and
repz
adc
jmp
decl
adcl
or
fsubr
in
aam
or
mov
mov
mov
pushf
push
movsb
dec
insl
int3
xchg
mov
je
mov
fs
sub
sub
cmp
in
xchg
mov
pop
leave
clc
pusha
xchg
push
aaa
xor
push
pop
insb
add
sbbb
dec
hlt
sub
mov
mov
lods
ss
fidivl
iret
sbb
xchg
mov
pop
cmc
inc
shll
cmp
mov
xor
or
or
scas
out
pop
cs
shrl
shlb
push
fcomi
cmpl
sarl
int3
dec
mov
lea
fdivrs
outsb
pop
call
sahf
cwtl
cmp
sub
hlt
sub
fimull
push
shl
dec
or
ljmp
pop
nop
push
in
rcrl
leave
loop
out
adc
test
xor
pusha
shrl
idivl
push
add
jno
xchg
sahf
push
sahf
cmp
mov
push
add
push
test
fisubs
icebp
addl
cmpsb
cmp
jns
mov
sbb
jl
data16
mov
sti
les
mov
sub
repnz
in
or
pop
push
mov
fstps
jno
adc
rolb
xlat
movsl
roll
das
outsb
lock
icebp
push
movsl
and
sub
jo
adc
pop
outsl
test
nop
lods
xor
ja
sbb
in
and
mov
mov
frstor
stos
inc
imul
xchg
add
xor
fbld
mov
pop
push
jge
push
jae
mov
sti
arpl
mov
test
xor
pop
es
mov
mov
mov
sbb
iret
stc
inc
cmpsl
or
sbb
es
mov
in
push
inc
sbb
insl
dec
lods
sub
inc
push
fwait
xor
jp
jae
imul
addb
dec
adc
sub
and
xor
in
in
adcl
add
mov
out
adc
inc
or
add
xchg
push
daa
ds
iret
outsb
mov
inc
maxps
rorl
cmp
jo
dec
mov
ror
mov
imul
dec
push
hlt
fmull
scas
ss
mov
cmpsb
jp
push
xchg
out
notl
and
mov
fldcw
ret
push
mov
mov
jge
mov
jecxz
or
xchg
fs
mov
mov
loop
rcll
adc
add
push
mov
or
fcoml
push
andl
and
add
imul
test
push
xchg
lods
fmuls
push
iret
cmp
jle
pop
jb
imul
xchg
pop
mov
push
shl
lea
addb
fdivrl
ror
lds
mov
or
or
pop
mov
mov
ret
movsb
dec
or
xor
inc
fisubs
aam
and
and
mov
in
leave
push
cmc
mov
nop
outsl
push
add
pop
add
xchg
mov
pop
sub
push
test
inc
fnstsw
mov
lcall
ds
out
sbbb
push
pop
dec
inc
es
shrb
xchg
lods
inc
mov
xchg
out
bound
pop
xsha1
cmpsb
dec
cmp
subb
lcall
in
shlb
repnz
mov
add
arpl
dec
in
or
pop
ds
imul
fildl
xchg
sub
jge
mov
cmpsl
push
packuswb
push
mov
jnp
outsb
pushf
cltd
xor
xlat
mov
das
out
xchg
pop
cmc
movsl
pop
pop
mov
adc
in
das
dec
add
dec
in
push
jp
mov
das
fmull
mov
inc
std
mov
das
arpl
imul
repnz
or
jl
notb
cmpsl
daa
pop
add
jns
and
lret
add
xor
push
push
push
pop
cmc
test
mov
jno
jl
fcoms
lcall
dec
mov
jns
mov
add
cmp
jecxz
mov
push
fbstp
pop
inc
iret
in
ret
shrb
mov
loop
and
repnz
mov
cs
cmp
mov
inc
test
inc
or
nop
push
daa
rol
or
adcb
sbb
aad
adc
push
or
xor
cli
mov
inc
jnp
iret
loop
inc
push
mov
mov
fs
cs
out
test
je
push
mov
xchg
add
push
movsb
and
mov
divl
into
movsb
sbb
xchg
dec
lds
imulb
mov
pop
je
dec
mov
xchg
sub
mov
out
popa
je
xchg
adc
inc
mov
sub
arpl
test
mov
mov
mov
sub
cmp
dec
fisttps
lods
data16
fstl
roll
dec
push
mov
std
sub
test
jnp
fidivrs
cmp
dec
enter
sti
lds
out
out
sbb
mov
mov
mov
mov
popa
clc
sbb
mov
lahf
ss
fistl
cmpsb
mov
insl
fbstp
popa
clc
push
add
jno
add
add
mov
xlat
and
addr16
scas
mov
mov
jnp
and
cmpsl
pop
pop
in
test
into
and
mov
or
cmp
rclb
mov
jecxz
stos
and
sbb
in
cmp
mov
adc
inc
into
loope
shr
ficompl
mov
or
mov
dec
cmc
mov
mov
or
sbb
sbb
idivl
mov
lock
insb
push
popf
insl
push
cmp
outsb
jne
mov
or
ss
outsl
push
stc
fiaddl
repnz
pop
sahf
push
jne
push
xchg
aas
mov
mov
aaa
into
arpl
insl
les
mov
pop
xlat
fneni(8087
ja
stc
test
jmp
testb
mov
mov
pop
or
mov
ret
aam
mov
fidivl
xlat
insb
add
lds
fistpl
testl
subl
test
mov
xor
fwait
xor
enter
mov
mov
int
mov
in
fisttps
sbb
add
jb
push
jmp
xchg
pusha
testl
mov
ret
loop
popa
clc
sub
ljmp
pop
fs
dec
and
xchg
pop
jo
scas
popa
sti
inc
xlat
xor
push
int3
push
fbstp
insb
enter
cwtl
das
sbb
pushf
xor
iret
popf
xor
aam
dec
stc
loop
fst
lahf
insl
add
hlt
adc
test
cmc
mov
mov
or
cmpsb
cmp
and
xchg
mov
fdivl
aam
jae
cmpsl
fidivs
out
adc
aam
into
cli
shrl
scas
inc
scas
or
lods
inc
js
add
dec
xor
movsb
out
lock
xchg
sub
fisubl
mov
movsb
lds
jb
fiadds
data16
lock
aad
test
inc
sbb
adc
sub
inc
xor
outsl
push
sbb
pop
mov
fucomi
or
mov
pop
loopne
shrl
add
xor
es
xor
mov
pop
sub
addr16
cmp
pop
in
adcl
pop
mov
popa
arpl
xor
push
test
push
inc
pop
das
mov
fnstenv
stos
rclb
jmp
cmp
xor
in
shrl
pushf
loop
es
aad
gs
xchg
sub
adc
jp
lcall
mov
xchg
das
xor
mov
rcll
xchg
aam
jmp
push
call
ss
jb
jmp
mov
sti
or
sarl
dec
loopne
sahf
add
punpckhwd
bound
dec
pop
hlt
jp
jno
mov
test
dec
les
call
xchg
sub
scas
jo
je
out
ja
dec
mov
mov
fwait
pop
mov
sbbb
ss
ljmp
ljmp
fistpl
int3
arpl
xchg
in
out
xchg
ds
inc
jb
dec
loopne
xchg
mov
add
daa
in
cltd
rol
pop
pop
mov
jae
out
dec
mov
sbb
popa
lods
inc
push
pop
mov
andb
push
push
xchg
mov
add
pop
ss
push
mov
lret
lods
insl
pop
stos
int3
arpl
inc
xchg
xor
fidivl
push
xchg
sub
adcb
push
push
movsl
fwait
jnp
xlat
insb
cmp
aaa
call
xchg
xchg
lods
push
loopne
jge
sbb
das
nop
daa
push
pop
ds
stc
out
test
imul
pop
sbbl
fwait
xor
repnz
mov
push
and
mov
mov
lods
sub
inc
xlat
and
repz
repnz
pop
imul
xchg
hlt
mov
outsl
cmp
test
cmp
pop
adc
dec
xchg
xchg
sub
lds
icebp
cmp
lods
mov
lret
mov
cmpsl
ret
loope
hlt
shrb
add
in
in
sbbl
je
divl
and
cld
xchg
sub
mov
xchg
sahf
xor
das
mov
scas
inc
inc
xchg
or
fsubrs
jne
push
xor
mov
cli
cli
in
pop
sbb
stc
lea
jge
and
xlat
cltd
inc
jbe
xor
adc
inc
or
loopne
popaw
clc
push
xlat
pop
scas
or
dec
jecxz
movsb
pop
hlt
out
gs
cld
mov
lcall
lea
scas
inc
fisubl
sub
cmpsb
imul
xor
sbb
add
mov
adc
push
mov
mov
pop
sbb
fs
sbb
xor
ljmp
scas
rclb
jmp
popa
data16
xchg
imul
mov
outsb
in
inc
adc
cmpsl
push
out
and
xchg
insl
xchg
popf
mov
loop
das
mov
stos
cmp
sbbb
pop
insb
add
ljmp
popf
mov
stos
inc
repnz
fsubrs
adc
cwtl
test
push
movsl
dec
movsl
sub
mov
stos
mov
fidivl
push
or
xchg
lock
sbb
add
je
stc
push
xchg
fnsave
movsb
cmp
sub
pop
fwait
xchg
mov
mov
sbb
test
ds
cmp
jge
popa
push
call
sub
data16
pop
sub
loopne
out
mov
dec
out
subb
xorl
xorb
adc
push
in
pop
in
sbbl
add
rorl
int3
arpl
scas
fwait
popf
jl
cvtpi2ps
nop
mov
les
fcom
insl
add
insb
dec
fists
and
stc
out
sbb
or
rsqrtps
xor
add
mov
sbbl
cmpsl
outsl
fwait
xor
push
mov
nop
fidivl
and
stos
inc
fistps
mov
jb
cmp
adc
mov
ds
insb
inc
xlat
xchg
mov
loop
pop
dec
les
jmp
shlb
mov
imul
popa
push
out
test
jno
sbb
stos
mov
cmp
sbb
scas
inc
jecxz
mov
jo
int
jbe
sbb
in
jo
cwtl
add
lea
mov
inc
mov
jg
inc
jae
jns
xchg
mov
aaa
int
xchg
mov
mov
dec
lret
data16
cld
jo
mov
sbb
jns
add
pusha
fwait
sub
jp
nop
daa
add
daa
inc
outsl
push
inc
cmpsb
mov
cli
testb
pop
sbbl
sbb
inc
cmp
jns
lahf
ss
or
popa
push
sbbb
sbbb
int
hlt
mov
mov
out
xchg
sbb
data16
push
jge
push
rol
bnd
test
adc
or
aad
mov
hlt
mov
aad
pop
loop
jae
push
add
outsb
popf
jbe
pushf
cmpsl
mov
and
repz
or
jno
dec
enter
cwtl
pop
mov
clc
jecxz
adc
ss
inc
fcmovb
push
cmpsb
cmp
adc
ss
push
mov
pop
mov
dec
sub
aas
mov
sti
lret
cld
sbb
clc
dec
sbb
stos
inc
sbb
sti
popa
clc
in
in
aaa
into
ficomps
push
pop
out
in
mov
sbb
lea
dec
inc
or
stc
popf
dec
scas
insl
pop
mull
mov
push
repnz
stc
les
dec
dec
in
cmpsl
or
fwait
inc
sub
cmpsl
jbe
jle
cwtl
xchg
lds
mov
sbb
ja
fs
aas
cwtl
fnstenv
popa
push
mov
push
sahf
xor
mov
xor
mov
rcrl
push
or
jo
sub
mov
icebp
cmp
or
lods
inc
or
out
test
or
cmpb
gs
or
jbe
shlb
ret
ljmp
and
fidivl
decl
xchg
movsl
mov
pop
and
jno
data16
insb
sub
push
adc
dec
sub
popf
cs
sub
mov
push
inc
cwtl
mov
mov
es
fnstenv
enter
or
jp
cmp
addl
pushw
insl
loopne
cmp
dec
or
xchg
mov
shrb
popa
cmpsl
sbbl
cmp
push
pushf
xchg
cmp
cmp
loop
add
movsl
lahf
pop
das
lods
xchg
xchg
mov
cli
imul
ja
mov
mov
fists
xlat
fildll
and
andl
pop
shrb
xchg
mov
cmp
js
jo
gs
popa
scas
je
adc
mov
push
clc
sbb
inc
fidivs
push
shrl
out
adc
mov
cmp
mov
iret
sbbl
xor
lahf
data16
inc
movl
ret
jno
sbb
hlt
mov
leave
pop
psrld
inc
fstps
add
fstps
shlb
out
xor
fidivs
jmp
or
cmpsb
or
test
outsl
push
cmp
ljmp
or
popa
xchg
or
popf
ja
xor
pop
cwtl
aaa
into
or
sbbl
inc
push
aad
andl
lret
mov
dec
push
pop
mov
mov
aam
pop
scas
lcall
dec
xlat
outsb
push
pop
lcall
mov
xchg
adc
ss
call
adc
or
jbe
sbb
mov
or
mov
ret
push
mov
ja
out
out
xchg
or
mov
shrl
stos
inc
cmpsb
inc
mov
test
call
clc
inc
xor
pop
repz
stos
mov
clc
mov
cld
clc
sbb
mov
test
cmpsb
insb
jg
sahf
repnz
mov
cltd
xor
dec
out
lods
xor
sbb
neg
jne
mov
sub
movsb
outsl
push
pop
push
adc
adc
jo
mov
mov
or
cmp
sbb
xchg
sahf
xor
pop
int3
sti
dec
adc
dec
pop
sahf
mov
sub
dec
mov
inc
pop
xsha1
cmpsb
dec
cmpsl
inc
xlat
pop
js
adc
iret
rcrl
scas
inc
mov
xchg
cmp
mov
into
sahf
cmc
std
xchg
mov
loopne
mov
mov
aam
jo
and
lds
and
xchg
inc
fidivrl
sub
jle
adc
push
dec
pusha
mov
push
adc
stc
sbbb
dec
dec
fs
jl
push
mov
fsub
jle
mov
dec
and
insb
add
jg
mov
lret
lds
xchg
popf
sahf
xor
bound
xchg
sub
sbb
pop
mov
inc
xchg
sub
scas
push
in
hlt
pop
iret
lea
sub
loopne
jmp
in
cmp
inc
fmuls
sbb
xchg
mov
int
xlat
bound
pop
xor
jecxz
push
aam
leave
pusha
push
inc
jp
xor
and
mov
jmp
shrb
cmc
cs
adc
call
call
add
mov
int3
incl
add
add
call
ja
stos
rcr
loopne
xor
adc
scas
inc
orl
pop
insl
ja
jbe
push
jae
inc
mov
stc
xchg
mov
cmpsl
loop
fdivl
in
test
movsl
cmp
xor
repnz
mov
dec
ja
inc
cmp
and
mov
dec
loope
out
sub
fmulp
inc
fdivrl
sbb
mov
or
cmpsl
push
js
jbe
mov
jle
nop
pop
sub
jg
dec
addr16
push
and
cmp
jne
test
pop
add
or
rclb
mov
les
rcr
aad
adc
cli
cmp
cli
ljmp
fisttpll
lahf
in
cmp
lds
stos
xor
mov
dec
out
or
sbb
mov
pop
bnd
sbb
adc
ss
in
jno
or
and
inc
jmp
pop
pop
cmp
mov
or
lds
outsl
jmp
dec
sub
lret
or
inc
outsb
push
out
popa
cmp
xchg
outsl
outsb
add
or
test
jge
jbe
push
test
jbe
sbb
mov
out
xchg
xchg
in
outsl
push
mov
push
jg
enter
add
sub
or
jns
dec
loope
lcall
inc
cmp
sub
mov
sbb
xchg
lods
inc
mov
ret
mov
mov
mov
ret
hlt
ss
jae
xchg
movsb
xchg
inc
fisubl
movb
inc
sub
je
pusha
idivl
ficompl
mov
dec
sub
fwait
sbbb
push
mov
ss
rcpps
stos
mov
mov
fistl
repnz
les
mov
cli
ljmp
sub
pop
inc
inc
fsubs
les
daa
jae
shlb
stos
xchg
cmp
lret
jo
loope
ds
add
mov
leave
jae
fdivrp
jno
lret
stc
nop
xor
es
jae
jns
mov
stos
movsl
cmp
push
xchg
sub
xor
lret
bound
movsb
mov
or
nop
daa
int
test
data16
stos
inc
jb
ret
xchg
mov
sub
hlt
mov
inc
test
mov
clc
xor
mov
adc
std
xchg
shll
adc
ret
lods
push
in
mov
loopne
mov
pop
and
xchg
push
aaa
into
inc
pop
imul
dec
cmp
aas
dec
dec
loope
add
mov
loopne
out
push
inc
fdivrs
jno
push
or
push
das
add
jb
adc
jnp
push
mov
add
or
sbb
adc
lods
aad
fsubrs
sub
mov
es
mov
fnstenv
lods
lahf
ss
fwait
xor
enter
les
cs
loope
pop
cmp
imul
xor
xor
jns
push
inc
cli
mov
ja
loopne
adc
xor
bound
lcall
popf
mov
fisubs
rcpps
test
inc
fldenv
out
test
in
lods
xlat
dec
loopne
xchg
inc
fiaddl
test
ds
xor
imul
call
inc
jl
cmp
mov
dec
icebp
sub
xor
inc
sbbl
in
fdivl
jbe
mov
cmp
and
ret
stc
nop
mov
loopne
loopne
or
popa
add
insb
sbbb
mov
mov
xchg
and
cmp
cltd
shrl
pop
clc
xchg
hlt
test
mov
cli
or
insl
ret
sub
lods
je
nop
daa
mov
fdivrp
xchg
fidivrl
sbb
into
cmpsl
push
call
and
push
mov
dec
jnp
jle
inc
xlat
lds
pop
hlt
mov
sahf
xor
add
out
jmp
dec
loop
or
mov
jnp
adc
push
test
push
fcomi
dec
loop
and
leave
pusha
xchg
popf
lds
xlat
outsb
lahf
or
mov
or
xchg
sub
js
cmc
imul
and
dec
cmp
cmpb
movsl
sbb
outsl
dec
outsb
jl
push
and
icebp
cwtl
sbb
popf
out
testl
test
lds
ja
cmpsb
test
sbb
xlat
mov
cmp
movsb
dec
sbb
sub
call
sub
inc
jge
call
xchg
add
xor
notb
cwtl
adc
popa
pop
movsb
push
push
stos
fwait
jae
cwtl
arpl
movsb
ljmp
dec
mov
iret
push
xchg
cmp
adc
insl
dec
mov
inc
call
jl
test
fs
in
int
loope
lods
inc
mov
add
loope
ljmp
std
imul
lret
inc
pop
into
push
pop
outsl
mov
inc
sbb
dec
popa
stos
inc
inc
sbb
popa
dec
push
enter
ret
inc
les
cmp
hlt
jno
push
shrl
and
sbb
push
ljmp
adc
sub
dec
mov
mov
in
stos
inc
pop
in
pusha
cmpsl
mov
lods
sbb
in
jmp
cmp
xor
xor
adc
pop
imul
dec
lds
jo
sub
fs
inc
jae
or
jnp
xor
and
adcl
pusha
mul
icebp
mov
fiadds
lds
es
pop
pop
dec
jnp
push
test
xor
outsl
filds
and
jge
cmp
insl
add
pop
in
xor
or
es
ss
sub
jns
push
fwait
cmpsl
outsb
and
mov
mov
cmc
test
int3
mov
push
sbb
aas
cli
jle
pop
cmp
insb
lea
xchg
and
xchg
cli
xchg
mov
pop
hlt
mov
ret
repz
mov
or
jl
push
popf
cli
xor
fisubrs
rcrl
gs
fistpll
pop
scas
push
jmp
sbb
lods
dec
nop
sub
pop
pushf
xchg
dec
sub
cmp
xchg
dec
jae
out
inc
inc
addb
outsb
mov
push
test
pop
dec
rcrb
adc
orl
int3
pushf
jns
mov
xor
mov
loopne
adc
filds
mov
out
xchg
es
daa
fdivs
hlt
jg
add
xchg
pop
into
adc
inc
xlat
jp
jne
and
cs
leave
sbb
fcoms
cld
das
cs
rorl
sub
push
movsl
dec
pop
hlt
pop
mov
push
jge
repnz
aaa
stc
nop
imul
icebp
or
mov
pop
pop
dec
cmpsb
pop
pop
pop
lods
jo
push
mov
je
pop
mov
xchg
jp
fadds
ret
and
mov
repz
into
inc
or
and
xor
push
nop
repz
push
add
adc
cmpsb
lock
or
add
xchg
notl
aas
out
outsl
mov
pop
pushl
inc
fisubrl
jle
add
cmp
loopne
sarl
mov
fimull
jl
stos
aas
repnz
pusha
dec
in
icebp
cmp
pusha
push
call
sbb
movsl
pop
fwait
sbb
call
lret
inc
scas
and
or
xor
fwait
sarb
mov
je
dec
or
lcall
aaa
into
mul
out
fstps
jae
xor
movsb
cmpsb
je
pop
mov
sub
test
clc
mov
in
test
or
push
divl
jp
cmp
fcoms
test
dec
adc
mov
xor
fdiv
mov
and
daa
xor
adc
out
stos
sbb
dec
mov
andl
negb
fs
jecxz
ret
pusha
push
dec
dec
xchg
mov
es
out
inc
or
testb
dec
push
in
xchg
adc
fisttpl
mov
insl
xor
xchg
sbb
xor
cmc
call
and
outsl
xor
inc
sbb
dec
fldenv
sarb
in
adc
jb
imul
js
lret
jge
adc
jge
lods
inc
rcrl
cmp
and
jne
out
pop
mov
loopne
notb
jns
lret
push
jg
fsts
into
out
mov
push
and
rcll
call
dec
sti
sahf
xor
push
adc
adc
lds
pop
adc
mov
popf
add
pop
pop
test
mov
mov
testl
outsl
in
data16
loop
mov
sbb
mov
dec
loope
mov
ds
xchg
or
lret
dec
xor
cmpsl
imul
pop
pop
insl
sub
es
cmpsb
outsb
push
and
test
dec
pop
lcall
je
jae
lds
dec
push
xor
jmp
sbbl
xchg
aas
xor
add
mov
movhps
rolb
test
dec
adc
in
mov
lea
mov
xchg
push
dec
sbb
mov
shrb
xchg
and
or
adc
cmp
in
cmp
imul
les
push
xor
lods
insb
sbb
add
jp
cmp
stc
or
in
mov
int
mov
sbb
cmpl
mov
mov
xchg
and
imul
mov
je
push
jmp
icebp
cli
push
xlat
sub
fnstenv
dec
pop
into
pop
dec
mov
ds
aas
jae
push
mov
jecxz
and
lret
mov
outsb
fstps
hlt
mov
stc
add
sub
adc
arpl
push
popa
push
popf
dec
push
add
or
mov
and
cmp
pop
ficomps
adc
cmp
or
movsl
add
sub
pop
xchg
sub
popf
sub
xor
aas
nop
pop
jge
or
and
xor
xor
testl
adc
inc
shlb
test
mov
aam
push
or
lods
cmc
cli
jecxz
sub
or
std
pop
dec
add
push
movsb
mov
jo
clc
repz
cwtl
loopne
xchg
movsl
aas
outsb
sub
shl
xor
mov
xchg
adc
and
mov
adc
xchg
and
push
xor
pop
notb
jecxz
call
push
movsl
inc
mov
jo
jle
pop
push
arpl
cmp
inc
jecxz
test
jecxz
cmpl
inc
ret
sbbl
int
jp
fcmovbe
or
and
sbb
and
push
icebp
mov
fucom
cmc
mov
jmp
jecxz
and
jmp
popf
sbb
adc
gs
xchg
les
push
daa
mov
and
xor
or
cmp
dec
push
mov
add
aam
insl
cmc
aas
jo
subl
xchg
decl
insl
scas
ret
cmp
inc
addr16
cltd
jnp
dec
stc
fildll
lea
orb
ds
jno
xorb
jmp
cmpb
ficomps
in
mulb
scas
add
pop
add
pop
sbb
cmp
pop
mov
lcall
out
movsb
jbe
in
shrb
push
repnz
mov
cltd
mov
in
dec
mov
or
cmpl
fstpl
out
hlt
push
sub
test
es
ret
lret
xchg
mov
lods
cmpsb
and
or
pop
push
scas
sub
sbbl
je
roll
fprem
stos
sbb
mov
cmp
sahf
imul
inc
dec
addr16
dec
xor
inc
stos
and
addb
pop
jns
jl
adc
nop
dec
pop
and
sarb
je
outsl
scas
enter
leave
pusha
clc
sbb
jl
mov
mov
push
loopne
aas
in
jge
sub
nop
mov
fs
mov
mov
dec
stc
gs
xor
cld
out
cs
movsl
imul
sbb
push
xchg
ja
lods
fbstp
enter
outsb
jne
int
repnz
ja
jbe
xchg
fwait
aam
mov
call
test
cli
clc
idivb
jmp
dec
cli
rcl
inc
ret
xor
leave
ljmp
mov
cli
cmp
sub
repnz
mov
popa
cs
out
inc
push
push
out
bound
int3
popf
out
cmp
dec
pushf
pop
jne
in
ds
xlat
cli
cs
xchg
js
pop
inc
cmp
scas
sub
or
pop
aaa
xchg
es
push
fnsave
cwtl
mov
cli
jo
lods
jle
lret
push
in
fcmovne
clc
xchg
fcoms
xlat
sahf
int3
jmp
gs
fbld
xor
mov
in
push
lods
inc
mov
je
cmpsb
cmp
stos
jle
faddl
insb
in
xor
xor
sti
int3
arpl
fiadds
push
add
jle
fs
in
push
repz
pusha
in
mov
leave
and
je
xor
cmp
ret
or
adc
in
mov
inc
mov
ret
cmp
stos
ret
mov
mov
arpl
xchg
cs
lods
js
pop
les
mov
sarl
mov
mov
pushf
fs
xor
or
loope
xchg
clc
sar
push
fnsave
mov
mov
inc
adcb
and
jmp
mov
sbb
pop
push
je
lahf
sbb
mov
repnz
mov
inc
or
mov
call
ret
outsb
adc
pop
push
fwait
inc
aas
xchg
pop
popf
dec
push
fisttps
mov
cmc
fstl
jle
repnz
mov
lahf
cwtl
mov
xchg
push
mov
mov
sbbl
or
fdivl
sub
data16
scas
fwait
sbb
jl
in
lods
ds
adc
dec
fadd
add
dec
xchg
jg,pn
lods
fnstenv
lods
sub
sbb
lock
fidivrs
shrl
xor
fadds
loop
out
push
mov
ror
adc
mov
xor
cli
shlb
jmp
jns
lods
sub
ret
xchg
rorb
mov
adc
pop
adcb
or
inc
jo
xchg
inc
inc
out
fwait
aas
int3
mov
jg
dec
ljmp
jge
inc
int
push
inc
frstor
es
mov
jge
push
mov
xor
shr
mov
repnz
mov
lods
stos
mov
cmp
dec
ds
fsubs
cmc
xor
popf
inc
out
scas
iret
daa
and
add
enter
or
sub
movsb
pop
jge
mov
mov
pop
shl
je
out
aam
push
push
adc
jp
push
das
dec
inc
add
push
inc
and
popa
push
fstpt
outsb
xor
xlat
popf
cmp
mov
inc
add
stos
or
sub
or
data16
sahf
int3
pop
jno
enter
inc
test
sbb
cmp
clc
xlat
cmc
ljmp
loope
ficompl
sbb
popa
push
in
jns
in
ja
inc
push
je
cmp
in
js
inc
mov
mov
push
clc
jl
push
call
or
push
xchg
cmpsl
stos
sbb
cmp
scas
in
sbb
pop
or
jno
imul
ljmp
mov
test
pop
ja
ljmp
mov
mov
clc
outsl
jb
mov
mov
fidivl
std
xlat
jl
insl
loop
mov
stos
sub
mov
or
cld
push
cmp
pusha
cld
subb
pushf
push
sti
or
aas
jg
push
pushf
fsubrl
jbe
iret
je
xchg
sub
xchg
push
imul
lock
mov
leave
into
cs
je
jne
or
pushf
mov
into
mov
jmp
daa
in
mov
mov
mov
adc
cs
sub
andb
ror
lock
out
and
aas
cmp
addl
inc
cltd
jnp
sbb
rorb
dec
sbb
push
adc
jle
sbb
dec
outsl
jge
add
test
fstps
aaa
test
adc
push
js
enter
mov
adc
ss
mul
mov
cmp
les
and
jle
adc
frndint
mulb
inc
dec
push
imul
sub
outsb
daa
mov
rorb
jo
jmp
xchg
out
push
iret
mov
sarb
mov
cmc
add
scas
sbb
cli
sbb
nop
pop
aad
sarb
insb
es
sub
inc
je
inc
fstpl
jp
lods
rorl
loop
mov
fidivs
dec
push
pop
add
pop
sub
mov
push
addr16
adc
push
pop
jae
popa
clc
jl
addr16
lret
pop
rcrl
xor
xlat
mov
arpl
mov
mov
and
mov
and
std
scas
repz
xchg
inc
repz
push
cmp
xor
test
cmp
adc
dec
int3
outsl
xchg
push
adc
es
out
jne
push
cmp
sbb
pop
cmp
es
cmp
xchg
lret
dec
aam
or
pop
div
testb
mov
sub
addl
pop
or
outsb
lret
mov
mov
push
jne
enter
popf
pop
stc
sti
mov
jae
fxch
daa
mov
fucomip
jge
cmp
xchg
push
movsl
xchg
jb
out
push
xchg
insb
adc
inc
or
pop
push
xchg
xor
sub
dec
inc
or
jbe
push
movsb
inc
mov
ss
sbb
pushf
inc
into
cmpsb
jl
ds
outsl
repnz
sti
andl
repz
xor
int
js
xor
jne
lret
xchg
sub
or
add
add
mov
daa
mov
aas
dec
aas
cld
or
mov
popa
loope
xchg
xchg
mov
pop
repnz
mov
mov
out
sahf
les
fbstp
pop
dec
mov
stos
inc
jae
sti
sub
cmp
pop
or
adc
lcall
imul
aaa
fcomp
out
gs
jne
int
xchg
sub
push
imulb
stc
nop
popa
ret
pop
stos
hlt
or
and
inc
ret
lods
ja
ss
push
xchg
mov
fwait
sbb
outsb
dec
aam
pop
sarl
movsb
sbbb
scas
out
int
inc
decl
icebp
jg
pop
lods
push
jge
jmp
sub
or
sub
sbb
test
insb
and
inc
je
iret
push
imul
pop
adcb
cmp
lods
ja
dec
out
dec
inc
and
jne
push
lds
dec
add
out
jno
loopne
scas
push
inc
fcoml
xchg
mov
loop
lock
cmp
popl
push
test
test
fs
jae
aam
test
test
cmpsl
xchg
or
daa
int
imul
inc
pop
dec
sahf
mov
imul
sbb
jl
cld
ret
mov
lahf
mov
and
ljmp
cmp
jg
pushf
mov
sbb
xchg
adc
or
mov
mov
pusha
sbb
ret
sbb
movsl
movsl
pushf
adc
jge
int
xchg
sahf
mov
jns
andb
clc
out
and
sbb
sbb
out
lea
popa
mov
fbstp
and
scas
mov
je
and
or
nop
jnp
jns
and
cmp
sbb
aaa
popa
aam
sbbb
repnz
sarb
icebp
dec
jecxz
nop
add
movsl
loopne
aas
sbb
jecxz
fisttpll
inc
xchg
adc
das
jno
cmc
xor
mov
imul
sub
or
jle
adc
mov
push
push
outsl
pop
shl
add
xchg
popf
sti
dec
xchg
sub
imul
sti
pusha
xor
stc
rclb
cmp
add
xor
and
or
mov
lahf
or
sbb
loop
mov
lea
aas
inc
mov
js
out
mov
xchg
in
add
fnsetpm(287
icebp
push
adc
shlb
xor
insb
cmp
in
jmp
xor
pop
cmp
in
sub
pop
int3
fcmovnbe
xchg
lret
jmp
cmp
imul
or
fsubl
push
mov
mov
cli
js
fwait
shrb
inc
mov
std
mov
inc
mov
inc
mov
nop
pop
scas
insl
loopne
popf
mov
add
in
push
ret
fists
cmpsb
outsb
aad
inc
add
repz
sbb
mov
cmpl
scas
mov
aas
add
loope
aaa
xchg
lods
push
faddl
pop
in
stc
fdivr
sub
int
xor
in
jmp
fldl
add
xchg
test
das
jb
push
mov
adc
dec
jecxz
xor
repnz
add
or
jb
xchg
sub
cmp
xchg
sbbb
push
push
or
adc
out
cmp
cld
pop
loopne
xchg
mov
xlat
cmp
xlat
pop
mov
rol
or
dec
sbb
aad
mov
xor
push
movups
cltd
ja
push
fsubrl
fstl
fsts
mov
dec
mov
loope
cmc
dec
pop
movsb
or
jp
lds
jns
cmp
ds
inc
lret
xor
mov
and
int
xor
cmpsb
in
push
mov
pop
in
sahf
xor
lahf
push
int
pop
lret
cld
jl
addl
int3
xor
mov
jb
mov
mov
mov
out
shrb
lahf
mov
icebp
and
ficoms
psubsb
repnz
mov
clc
adc
dec
das
jl
xchg
push
repz
push
lcall
cmp
gs
loop
or
aam
imul
push
mov
int
jmp
stos
jno
cmpsl
shrl
mov
jns
cmp
sub
adc
adc
pop
xor
push
xchg
enter
cmp
stos
loopne
pushf
aas
push
loop
call
or
xor
pop
fbld
int3
sub
jge
das
jnp
sub
cs
sti
aaa
sub
dec
cmc
or
jp
dec
xor
jp
es
pop
iret
shrl
xor
movsb
jle
jne
push
mov
mov
ret
loop
push
cli
mov
cmp
or
orl
hlt
dec
sub
mov
lahf
pop
push
test
std
xchg
addr16
out
pop
mov
lds
cmp
cld
jmp
fisttps
push
jle
test
je
inc
pop
ja
sti
xchg
and
inc
sbb
sbb
and
sbb
aas
ret
or
pop
hlt
adc
xchg
sub
xor
scas
inc
rcrb
int
and
enter
aaa
rol
mov
xor
in
fsubl
or
xchg
jge
and
ret
ret
lea
jne
out
cmpsb
cmp
mov
or
inc
mov
push
lret
xlat
aaa
loopne
fstl
sbbb
cmp
ja
fcom
sbbl
loop
and
sub
insb
std
pop
and
jmp
dec
xlat
mov
outsl
sbb
sub
jl
push
pop
roll
jp
int
test
inc
ljmp
clc
test
das
icebp
pop
xor
mov
pop
int3
mov
out
iret
sub
mov
dec
adc
mov
lcall
loop
cmp
dec
mov
out
inc
and
out
inc
rcrb
pop
pusha
mov
fdivrl
or
and
clc
mov
movsb
in
xchg
jl
rolb
jo
loope
bound
mov
fnstcw
sbb
daa
mov
adc
pusha
xor
mov
loopne
and
sti
inc
pop
xor
xor
stos
add
pop
pop
movsb
push
jge
iret
bound
sbb
ret
in
pop
and
mov
pop
cs
imul
es
ljmp
xor
les
or
xlat
repz
jns
mov
les
xchg
or
cwtl
inc
addr16
vpunpcklbw
inc
mov
loopne
clc
fstpl
and
sbbl
xchg
test
dec
mov
inc
sub
cmp
mov
mov
fildll
adc
enter
std
or
into
xchg
lret
jecxz
mov
das
shlb
jns
enter
mov
call
out
mov
jp
pusha
mov
in
inc
lret
cmpsl
ds
popa
jns
aad
call
cmpsl
flds
push
popf
mov
fisubrs
daa
mov
stc
hlt
inc
stos
mov
pop
out
test
or
push
lahf
pop
fsubrl
adc
xchg
mov
dec
push
sbbb
loop
mov
dec
xor
arpl
cs
mov
dec
sahf
push
jg
mov
lcall
in
imul
fistpl
cmp
cs
les
call
dec
and
push
icebp
push
sbb
fsubs
mov
jmp
imul
xor
mov
addr16
lods
movsb
push
test
cmp
inc
jle
imul
out
fists
ss
mov
pop
lret
jb
jecxz
mov
cmp
pop
outsb
dec
rcrb
cmp
pop
mov
mov
stos
xchg
mov
push
dec
push
dec
ja
mov
ror
jge
pop
and
add
mov
push
lcall
mov
sub
iret
cmp
or
in
mov
aam
es
je
mov
pop
test
scas
lret
dec
shl
add
pop
fsts
int3
sbb
adc
mov
sbb
push
and
inc
push
sarb
push
inc
inc
xlat
stos
inc
pushf
cli
je
pop
mov
ljmp
sbb
adc
cmp
in
call
jl
lds
fdivrl
or
inc
scas
add
ds
mov
mov
jae
pop
lods
insl
fucomip
pushf
call
mov
mov
stc
stos
pop
movaps
in
sbb
add
xor
mov
fdivr
mov
stc
adc
je
push
dec
dec
mov
mov
sub
jmp
xchg
mov
cli
dec
or
addr16
int
mov
pop
es
out
icebp
pop
mov
les
mov
in
lea
jne
pop
nop
push
mov
stos
lock
jne
mov
or
sub
push
inc
xor
imul
push
outsb
jmp
insb
mov
sbb
adc
mov
pop
ljmp
sub
cmp
pop
idiv
cmpsb
hlt
das
adcb
leave
pop
movswl
or
leave
rcrl
cwtl
inc
mov
sub
cmc
push
sbb
mov
repz
fcomp
outsl
enter
xlat
pop
push
shrb
shll
xchg
dec
push
lcall
in
jbe
xlat
je
pop
and
aad
sahf
fwait
or
repz
repz
mov
jb
dec
lahf
ss
jns
loopne
add
cmp
cwtl
xchg
sub
jecxz
mov
stos
or
fisubl
ret
and
aas
fdiv
shlb
mov
mov
sbb
mov
adc
outsb
push
sahf
sbb
leave
scas
push
mov
jmp
dec
inc
sub
inc
rcr
pop
fsubrs
jmpw
ljmp
dec
repz
sbb
ret
mov
rcr
pop
adc
xlat
push
shll
popa
fsubrp
sti
mov
rcl
add
cmpsl
push
sbb
outsl
cmc
xchg
pop
add
ja
into
shlb
mov
movsl
test
dec
mov
in
cmp
xchg
push
ja
pop
mov
pop
popf
sub
add
cmp
inc
mov
mov
add
rolb
ja
sbb
xor
push
jo
mov
xlat
pop
mov
mov
loope
bndldx
orb
cli
push
inc
out
fucomp
adc
adc
xor
xchg
pop
lret
xor
dec
inc
es
mov
cmpsl
xchg
ss
test
shrb
movsl
testl
stos
adc
roll
cmp
fs
jge
fdivs
lcall
push
loop
sbbl
fwait
dec
sub
cmpsb
outsl
pop
loop
cltd
add
and
mov
add
std
stos
or
add
xor
cmpsb
sti
xor
jmp
outsl
test
rcl
fcoms
notb
scas
fnsave
ret
int
std
mov
lahf
in
stos
inc
xor
repnz
rolb
sbb
xchg
aaa
push
lret
enter
mov
xchg
fs
mov
cs
fisttps
rcrl
mov
push
shrb
xorb
sti
fcmove
adc
or
aaa
scas
data16
cli
xchg
dec
notb
sbb
lea
mov
pop
in
push
mov
rorl
cmp
pop
xor
cmp
adc
sbb
lret
cmp
lods
xor
nop
xor
pop
daa
ror
push
sbb
xor
daa
mov
fstps
shlb
mov
lods
inc
cld
jno
mov
sti
jp
nop
and
dec
cli
js
fimull
hlt
lret
cltd
and
inc
mov
adc
or
mov
dec
hlt
push
movb
test
add
cli
mov
cmp
mov
mov
pop
filds
fcomip
and
sahf
mov
cmp
popl
cld
jp
jae
cwtl
insb
pop
mov
dec
dec
push
xchg
test
into
cmp
push
xor
ss
jb
std
sbb
mov
push
dec
add
shr
push
ficoml
lahf
inc
adc
fistps
inc
lods
inc
jp
dec
iret
jne
mov
in
xchg
mov
in
imul
add
mov
push
push
xor
push
enter
jb
mov
out
lds
stc
push
enter
rcl
pop
xor
mov
testb
nop
add
ret
fxch
fdivs
aad
xchg
mov
pop
mov
jo
cltd
fbld
push
sub
xchg
into
dec
inc
fiaddl
enter
test
pop
icebp
sbb
sub
iret
xchg
and
cmpsl
mov
inc
cli
jne
jns
test
lret
dec
loop
push
dec
mov
inc
cmc
inc
xlat
data16
pop
pop
cli
inc
nop
jg
insb
cmc
push
xlat
cmp
jge
dec
pop
testb
in
arpl
xchg
imul
mov
scas
xchg
sarb
jle
fdivrs
xlat
mov
test
or
inc
lret
inc
ret
mov
stos
push
mov
rcrl
push
xor
mov
jne
pop
cmpsb
sbb
pushl
in
xchg
fiadds
loope
sub
addb
jl
jb
jle
jmp
add
bound
lds
mov
jg
lods
push
cmp
sbb
and
mov
lcall
jg
lahf
gs
cmp
sbbl
dec
ja
add
shlb
subl
mov
cmp
push
stos
adc
insl
pop
mov
call
data16
sbb
fisubl
shl
jecxz
xor
ficoml
and
js
andl
pop
daa
repnz
fstpl
xchg
outsl
xchg
and
idivl
lret
xchg
sbb
ret
push
movsl
push
xor
push
push
mov
pushf
insb
push
inc
fs
popf
out
test
daa
orb
insl
test
popf
pushf
push
cmp
imul
sahf
mov
or
lea
loopne
pop
dec
mov
fbld
mov
mov
fcompl
lods
out
stos
inc
filds
lret
repz
nop
add
es
push
xchg
mov
add
adc
ss
insl
test
mov
push
out
jno
jle
icebp
movsl
enter
pop
data16
inc
cwtl
jp
and
sub
roll
pop
loope
push
sbb
add
lea
pop
lods
mov
mov
loopne
mov
mov
pop
fs
inc
data16
or
sbb
sub
pop
cmp
dec
insl
push
dec
dec
cmp
and
cld
xor
arpl
in
pop
jg
arpl
repz
fidivs
nop
lret
dec
loope
out
pop
mov
adc
dec
mov
nop
movsb
cmp
or
and
bound
xchg
adc
mov
inc
pop
push
popa
scas
addl
dec
pop
pop
mov
push
add
out
inc
pop
cmp
add
mov
jge
jg
fbstp
lahf
xor
inc
mov
stos
dec
or
pushf
pop
aas
iret
pusha
jge
rcrl
pop
icebp
sub
dec
xor
js
outsl
adc
push
jbe
xchg
mov
movd
push
lods
movsb
inc
fnstsw
jbe
jns
mov
int
xor
inc
xlat
dec
add
adc
shl
les
ljmp
pop
pop
ret
aaa
incl
and
jg
out
addr16
jne
xor
push
xchg
adc
stc
mov
scas
out
pop
jo
dec
and
jnp
testl
je
mov
testb
fwait
dec
push
sub
xchg
jmp
test
cmp
cmp
aas
push
loope
or
lret
lock
pop
mov
pop
daa
es
ja
cmp
sub
xchg
data16
sbb
in
fs
ficoml
ds
xor
dec
aad
jmp
or
call
mov
mov
test
adc
cmp
dec
stos
orl
jnp
jnp
js
xor
push
jl
aad
mov
fbstp
nop
sbb
shlb
rclb
mov
pop
push
cmp
mov
cmpsb
and
out
jb
je
xor
add
popf
scas
dec
sbb
cmpsl
cld
ljmp
cmpl
push
mov
cmp
mov
ja
int
xor
lret
movhps
dec
xor
andb
jnp
and
mov
shll
dec
sub
rcr
mov
mov
mov
xlat
or
mov
push
cmp
jbe
fists
inc
test
or
ds
adc
cmpsb
lds
push
pop
aad
add
imul
or
stc
dec
sbb
pop
out
stc
push
nop
xchg
mov
xchg
or
ret
push
lds
sub
push
pop
add
es
inc
jecxz
push
leave
fnstsw
inc
jmp
hlt
aam
mov
add
or
mov
daa
ljmp
push
negb
and
add
pop
sub
outsl
neg
leave
fsubl
jb
cmp
xchg
ret
lds
cld
bound
mov
add
pop
out
inc
push
dec
arpl
shrl
pop
mov
fiaddl
push
je
lahf
cs
and
in
or
cs
and
gs
inc
leave
int
push
adc
ret
dec
sub
mov
mov
jp
cmp
in
cmpsl
sub
inc
mov
adc
dec
fiaddl
fldl
test
shrb
lret
mov
fists
adc
data16
mov
loop
cmp
sub
sub
sub
rorb
in
mov
push
mov
jg
aad
add
pop
mov
inc
xchg
jnp
jns
lcall
shlb
inc
mov
ret
pop
dec
shr
jnp
mov
dec
cmp
lret
shlb
fimuls
aaa
hlt
fsts
mov
jmp
les
mov
cmpsl
mov
movsb
jg
adc
pop
xchg
jbe
mov
ds
mov
add
adc
inc
aad
cmp
mov
dec
and
dec
mov
cmp
fcmovnb
sti
pop
push
fwait
pop
cs
test
popf
or
fstps
shrl
std
inc
add
cld
outsl
mov
movl
lret
xlat
icebp
cs
and
adc
lret
loope
jb
aam
cli
shll
sub
outsl
jnp
inc
mov
out
cmp
addb
lock
pop
lahf
push
les
adc
call
mov
ret
jae
mov
out
mov
pop
adc
rcr
sub
add
sahf
fsubr
iret
iret
fucomip
and
fldcw
xor
int3
dec
mov
insb
sahf
push
es
cmp
mov
cmp
js
and
push
movsl
mov
out
mov
je
xchg
sahf
mov
test
pop
adc
hlt
push
xchg
pushl
adc
mov
mov
out
out
xchg
scas
dec
lods
add
loop
jb
cwtl
dec
repz
and
jp
das
and
shrb
jne
mov
loopne
imulb
movsb
icebp
inc
lea
stc
pop
jg
imul
movsb
repnz
inc
outsb
mov
out
daa
mov
xor
inc
fcmovnbe
push
jns
mov
jbe
into
ja
pop
xchg
inc
mov
jp
stos
inc
fs
sahf
pop
icebp
inc
ds
andl
adc
subl
mov
mov
pop
mov
je
imul
xor
push
adc
insb
pop
out
mov
lea
sub
cwtl
adc
xchg
xchg
xchg
push
or
sbb
pop
cmp
addr16
cmp
pop
repnz
pop
hlt
push
jo
popf
out
add
xor
iret
or
mov
lret
mov
sub
fildll
test
inc
fsubrs
mov
lds
mov
add
or
xor
stos
lods
fsubl
sub
mov
int3
mov
or
push
je
jb
jne
adc
mov
adc
mov
and
loope,pt
cld
ret
ja
jecxz
inc
icebp
adc
push
push
cmp
in
out
orl
imul
rol
jecxz
data16
outsb
dec
cmp
push
or
mov
mov
jbe
jecxz
movsl
sbb
movnti
pop
mov
leave
and
cld
outsl
out
mov
icebp
mov
sub
dec
ret
cmc
sahf
popf
cmpsl
add
mov
mov
roll
icebp
sub
push
loope
pop
mov
lcall
xchg
add
insl
jb
inc
ja
dec
pop
std
gs
lcall
jmp
fmuls
mov
push
movsb
xor
mov
and
inc
dec
push
ret
fiadds
xchg
mov
pop
ss
push
shl
subb
les
xor
sbb
and
jmp
das
xchg
cmc
adc
sub
fidivs
xor
sahf
mov
mov
fdivr
insb
jg
push
shrl
xchg
inc
orl
ja
xor
ret
adc
push
push
shld
mov
cmp
lcall
cmp
push
shll
mov
subb
test
in
pop
and
fnstenv
mov
in
inc
push
popa
mov
std
rcr
pop
sub
dec
into
xor
aaa
dec
call
in
xchg
lods
sbb
ss
inc
aad
pop
add
std
sub
push
mov
sub
push
jne
mov
inc
sbb
sbb
sub
ret
hlt
jmp
paddd
and
inc
or
mov
out
insb
add
test
cld
fmuls
xchg
jl
jmp
push
mov
mov
cmp
leave
insb
sarl
push
loop
pop
push
in
pop
test
lret
std
xor
or
fucom
add
jo
cmp
push
pop
push
fmuls
addl
inc
pop
fs
mov
outsl
and
xchg
fucomp
mov
popa
js
into
daa
pop
out
dec
or
cmpsl
xchg
lds
cmpsb
mov
push
mov
out
mov
push
jo
addl
xchg
sub
mov
pop
pop
cmc
cmp
pop
mov
xchg
add
adc
jmp
add
fs
mov
xchg
ds
pushf
xchg
push
push
mov
push
or
jb
aaa
bound
sti
or
cld
xchg
add
inc
enter
cmpsl
jmp
xor
gs
add
lock
ss
je
ja
mov
sahf
ss
stos
fnstenv
call
testl
cmp
mov
imul
test
xor
fidivrl
decl
andl
fsubrs
inc
lods
aaa
xor
sub
xchg
pop
sahf
ret
sub
jno
outsl
and
lods
lahf
xchg
cmc
test
xor
std
mov
test
fistpl
filds
fstpt
orl
adc
cmp
lahf
test
test
mov
sub
cmp
mov
repnz
mov
jmp
add
mov
test
movsl
inc
xor
lods
jle
pop
cmp
sbb
cmc
adc
and
add
jl
push
dec
dec
test
cmp
cmp
loop
push
stos
xor
sti
lock
adc
xor
mov
dec
lds
cmp
xchg
sbb
movsb
push
pop
xchg
dec
push
ljmp
xchg
xor
add
aaa
lahf
movsl
ds
in
ficoml
pop
adc
sbb
rolb
add
push
jmp
daa
ljmp
push
lds
jbe
xchg
ds
popa
xor
adc
addb
dec
adc
adc
sbb
xor
xor
xchg
sub
mov
dec
adc
xchg
add
push
sbb
xorb
sub
or
fisttpl
jl
mov
inc
and
xchg
jns
or
pop
mov
movl
jl
test
testl
add
nop
push
bound
xor
sub
out
rclb
xchg
or
cmpsb
push
jno
fwait
stos
pop
test
int
and
icebp
aaa
std
jo
das
fsubl
dec
jmp
cmp
call
popw
mov
pop
gs
cmp
loopne
jo
repz
call
pop
out
jmp
or
cmp
inc
jmp
dec
mov
mov
js
imul
repnz
out
dec
mov
xchg
dec
scas
rorl
and
jge
jb
mov
and
pop
pop
jbe
sub
pop
sarb
jne
adc
jo
push
fdivs
leave
sbb
push
mov
clc
pop
es
jmp
and
out
jge
push
shlb
push
adc
and
pop
into
cmp
test
ljmp
fnsave
sbb
mov
adc
fstl
pop
int
into
jmp
into
cmp
movsb
jns,pn
dec
aad
pusha
outsb
inc
daa
jnp
icebp
cmpsb
jge
call
mov
push
jmp
xchg
add
pop
leave
jo
add
push
mov
loopne
and
mov
stc
xchg
popw
nop
xchg
aaa
negb
sub
fwait
fs
fucomip
std
adc
lea
inc
shll
push
or
loope
or
lret
shrb
jno
cmpsl
sbb
adc
iret
ret
hlt
out
lds
rcll
push
mov
xor
mov
sub
jbe
jbe
lods
ja
test
jbe
xchg
fs
fs
xchg
je
dec
test
or
push
and
jnp
sti
subb
iret
xor
jle
aas
mov
adc
inc
lret
adc
ljmp
mov
leave
mov
pop
scas
gs
adc
inc
mov
cmpsl
mov
mov
stos
sub
xchg
mov
mov
outsb
cwtl
fsubs
daa
clc
dec
clc
or
movsl
testb
mov
sub
les
loope
cld
outsl
test
mov
jbe,pn
notl
mov
xchg
ror
pop
insl
fisttpl
enter
movsl
pop
mov
lods
fnstenv
scas
inc
stos
dec
int3
lret
int
pushf
push
stos
es
subl
inc
lock
add
pop
aaa
pop
cmp
cwtl
lcall
idivl
mov
pop
fwait
jge
xchg
aaa
add
in
stos
or
adc
jb
jp
scas
subl
and
cmc
cmp
nop
mov
shrl
aad
push
inc
jecxz
inc
ret
jnp
xor
add
ret
in
or
jl
lods
mov
mul
aas
pop
testl
push
jne
pushf
push
clc
dec
mov
sub
repnz
pop
sti
add
nop
fs
mov
mov
cmc
shll
push
insl
sub
and
test
xor
cmp
mov
stc
fadds
or
js
aad
jno
test
dec
add
mov
jno
in
mov
pop
enter
xchg
cmpsb
xchg
icebp
dec
pusha
stc
arpl
mov
mov
pop
in
int3
jl
mov
or
into
scas
jmp
xchg
popfw
xchg
push
mov
dec
mov
out
pop
mov
xor
pop
iret
push
xchg
lcall
xor
data16
mov
adc
add
pop
xchg
add
std
adc
dec
cmpsl
add
mov
stos
lds
adc
out
into
xchg
fucomip
cltd
push
divl
push
mov
inc
leave
mov
outsl
lret
int3
xchg
scas
int
mov
aas
inc
out
repz
cmpsb
jns
add
in
mov
mov
inc
pushf
jp
pop
lods
mov
pushf
xor
imul
stos
pop
rolb
and
arpl
sbb
repnz
cli
xchg
pop
dec
cld
movsl
mov
cs
mov
or
jl
sub
sahf
ret
mov
jecxz
xchg
andl
scas
aas
shll
pop
fwait
test
mov
nop
popa
dec
inc
cmp
lock
and
dec
pop
in
mov
repz
mov
push
movsb
and
jns
mov
add
dec
sbb
stos
mov
loope
je
call
sub
movsl
fidivrl
push
or
push
fcomps
sbb
addl
fucomp
testb
add
lret
push
leave
cmpsl
insl
and
jno
test
xor
inc
repnz
adc
sub
or
add
pop
fdivs
inc
daa
ljmp
jne
sbb
aam
hlt
es
mov
pop
movb
push
mov
and
dec
lea
jg
jl
sbb
into
dec
in
loop
push
aam
xor
daa
pop
out
cmp
out
enter
xor
jmp
sbb
testl
cmp
mov
xchg
adc
mov
inc
or
cmpsb
cmp
orb
mov
dec
lods
push
sbb
imul
lods
inc
push
in
js
incb
cmp
mov
cwtl
pop
cmc
pop
data16
push
pop
push
and
pop
cmpsb
pop
mov
sub
and
jecxz
repnz
aam
aaa
and
cltd
sub
fcomip
inc
outsb
adc
shll
aas
push
adc
aaa
adc
dec
add
rcll
imul
or
lcall
push
jmp
nop
movsb
mov
not
decl
hlt
cmp
dec
sbb
mov
dec
add
mov
cmp
test
mov
sbb
dec
add
mov
jg
js
inc
mov
and
and
push
mov
ret
shrl
sti
or
xor
test
pop
jle
push
lock
push
ret
sbb
cs
push
sub
mov
inc
xor
inc
xchg
fs
and
fiadds
push
outsl
jg
faddl
mov
pop
jge
mov
jge
sbb
adc
fwait
sub
dec
pop
mov
fcomps
hlt
test
jae
dec
xor
mov
dec
lock
adc
es
pop
push
jbe
dec
aas
sub
cmp
dec
add
jmp
mov
lahf
xor
push
add
xchg
sub
or
je
push
sub
clc
cli
test
shll
out
loopne
pusha
mov
movsl
subl
lds
mov
arpl
xor
pop
unpcklps
or
jne
mov
shlb
aam
and
xlat
outsb
cmp
iret
sub
pop
pop
lret
push
cltd
out
mov
xor
mov
ja
or
icebp
add
and
out
sub
xlat
and
dec
repz
stos
test
inc
scas
dec
fistps
sbb
dec
popa
mov
sbb
outsl
pop
scas
mov
sbb
mov
out
sub
fidivrl
and
dec
dec
dec
lods
cwtl
out
push
out
rcrl
xor
int
and
sbb
in
inc
fidivrl
mov
out
out
sub
bound
sub
mov
jge
fwait
mov
ljmp
mov
and
adc
arpl
subb
xchg
lods
add
into
jno
cwtl
and
dec
cmp
ja
divb
push
add
roll
mov
mov
mov
movsl
test
lds
lds
stos
mov
xor
cwtl
jb
test
xchg
inc
fstl
mov
fdivl
sbb
lcall
out
lods
push
mov
clc
out
or
mulb
and
data16
stos
outsb
insb
add
sbb
adc
not
sbb
xor
cwtl
jae
jns
mov
pushf
sti
int
sub
aam
inc
or
mov
jecxz
nop
push
out
inc
push
pop
icebp
mov
push
stc
lcall
lea
lret
outsl
push
mov
adc
sub
out
push
push
cwtl
inc
lea
iret
push
imul
div
xchg
addr16
mov
fs
fstl
jns
pop
sarl
aam
sbbl
cmp
sbb
getsec
pop
out
push
adc
inc
xor
jb
insl
pop
cltd
ret
push
push
lods
xchg
add
aas
popf
mov
nop
ljmp
mov
mov
dec
pop
inc
dec
fcom
shrb
fsubrl
or
push
lret
aam
push
cwtl
mov
imul
xchg
jmp
pushl
sti
push
lahf
jnp
ljmp
xor
lret
xor
pusha
xchg
fadds
ds
ret
int
fsubrs
rolb
mov
sub
jo
adc
adc
add
adc
and
jmp
fdivrs
cmp
or
push
or
iret
test
jne
sub
popf
mov
scas
stos
aaa
dec
fbld
push
insb
push
leave
loop
sti
daa
aas
xor
jnp
adc
sbb
cmpsl
enter
lea
movsb
into
adc
jl
xchg
lock
add
xor
xchg
push
cmp
jge
pop
in
push
or
int
or
out
into
gs
push
in
push
out
rcll
mov
fcmove
popa
rcrb
adc
cmp
and
cmp
adc
mov
sbbl
dec
rorb
popa
enter
pop
ds
stc
and
scas
dec
jnp
mov
lock
mov
push
push
data16
lret
lret
push
shl
adc
push
andb
ret
aas
pop
push
mov
divl
sbb
mov
xor
call
arpl
jae
adc
sbb
sub
icebp
ficoml
lret
pop
dec
scas
add
movsl
orb
enter
shll
sbb
xor
inc
or
cmp
dec
adc
mov
push
push
insl
cmc
dec
mov
insl
leave
mov
fs
sbb
push
xor
jg
mov
cld
jle
fisttpl
repz
repnz
sbb
cltd
mov
gs
jecxz
mov
and
mov
ret
push
mov
unpckhps
es
in
in
push
insl
fildl
fildll
outsl
pushf
mov
lods
and
sbb
pop
or
xchg
idivb
fadds
inc
lcall
add
ret
push
nop
jb
push
push
lock
or
insl
xchg
push
mov
jg
pop
mov
adc
or
xchg
sub
or
adcb
in
pop
hlt
mov
and
pop
fdivr
jb
lea
lret
fldenv
lods
enter
jns
or
int3
sub
jne
jp
xor
inc
out
xchg
dec
rcll
adc
dec
sbb
scas
sahf
pop
loope
mov
mov
imul
test
or
xor
xchg
sti
pop
cltd
in
dec
mov
sub
orl
cmp
cmp
int3
aam
fstpt
push
mov
mov
sbb
hlt
hlt
sub
adc
xlat
rclb
jno
nop
das
pop
outsb
fdivl
mov
cltd
outsl
insl
sub
movl
pop
xor
jp
jae
add
stos
outsl
inc
xchg
cmpsb
sbb
jl
popf
xor
xchg
gs
push
mov
jno
mov
cmovge
aam
dec
sub
xchg
or
mov
popa
sti
lret
sbb
test
mov
jne
subb
or
test
cmpsb
mov
lods
out
xor
loop
int3
dec
enter
js
shrb
sbbl
adc
mov
movsb
push
mov
mov
cmp
std
xchg
adc
cmp
pusha
fdivrs
in
jb
insl
add
fcmovb
je
inc
or
xchg
sub
and
sarl
nop
adc
nop
ss
sub
sub
mov
fwait
ja
dec
mov
jecxz
mov
push
push
or
add
adc
lods
or
pusha
es
or
mov
orb
stos
sub
xchg
adc
mov
push
push
sti
lock
push
xor
cmovb
xlat
jo
outsb
mov
adc
inc
cltd
imul
sbb
jle
aad
subl
jne
pushf
dec
mov
pop
pop
sub
aaa
mov
fidivl
mov
xchg
pop
cmp
xchg
mov
mov
repnz
sbb
lret
mov
clc
outsl
mov
fidivl
xchg
testb
stc
into
sub
lea
inc
scas
ret
arpl
dec
fwait
dec
ffreep
jo
cli
jb
data16
add
popf
cmp
jmp
xor
mov
sbbl
xor
jmp
ljmp
lret
xor
out
mov
adc
push
push
arpl
add
scas
jno
pushf
xchg
sbb
sub
and
xchg
jbe
leave
sub
lahf
call
cmp
pop
inc
mov
mov
loop
sub
add
dec
imull
add
lods
inc
push
cmp
cmp
lods
iret
jne
mov
icebp
jo
jg
call
and
pop
daa
ljmp
insl
inc
mov
rol
mov
cltd
mov
push
xchg
aam
sub
mov
repz
mov
pop
aad
jne
test
test
push
add
mov
imul
ja
sub
jno
pop
mov
xor
scas
xlat
in
and
jmp
jle
add
add
fsubr
and
popf
push
xor
add
sbb
call
rol
mov
lods
sbbl
push
mov
jb
dec
in
out
jno
mov
imul
inc
push
push
loop
cs
ss
xchg
movsl
mov
js
push
pop
jmp
mov
pop
ss
aas
pusha
lea
push
insl
add
es
cltd
dec
mov
add
or
cmp
adc
flds
fsincos
iret
in
jnp
pusha
into
cltd
movsl
fstpl
ljmp
and
cmc
xchg
or
es
rcrl
cli
dec
test
repz
lret
jge
gs
movsb
fisubrs
adc
xchg
adc
rcrb
sbb
adc
jae
sbb
jmp
adc
push
sbb
mov
call
test
and
ffreep
popa
int
mov
call
cld
mov
xor
daa
jnp
movsb
jl
fadd
dec
repnz
xor
inc
xchg
ds
xchg
adc
call
loopne
xor
or
mulb
mov
push
mov
cwtl
test
jge
hlt
pop
dec
pop
out
sbb
pushf
scas
addr16
inc
push
lcall
mov
jbe
mov
movsl
mov
std
xchg
mov
sbb
cmp
lods
mov
push
sub
xor
and
lcall
scas
jmp
std
addr16
cld
xchg
dec
or
jae
cmp
hlt
je
adc
fsubl
hlt
pop
mov
add
test
sarl
pop
lods
or
fistpll
cmp
jo
shrl
pop
pop
fucomi
jnp
and
add
pop
add
mov
jge
push
insb
cmpsb
cmp
imul
push
lods
lods
mov
fimuls
int3
mov
lock
leave
sub
mov
adc
pop
mov
sub
pop
lcall
test
idivb
adc
popa
pop
cmp
mov
fdivp
cwtl
xchg
arpl
mov
pop
lds
dec
lock
in
jge
xchg
add
adc
je
movsl
lahf
mov
cmp
roll
aad
cld
xchg
xor
xchg
scas
sbb
lods
aaa
adc
or
mov
mov
scas
fs
add
test
shl
pop
xor
clc
mov
stos
dec
movsb
out
aad
call
clc
xchg
enter
mov
cmpb
xchg
mov
xchg
mov
stos
insb
ljmp
inc
xlat
or
stos
mov
outsb
loope
loopne
popa
or
stos
inc
jne
inc
inc
es
mov
fs
sbb
jb
or
fcmovb
fists
dec
scas
outsb
xchg
or
cmpsl
lds
test
cli
xchg
dec
sbb
add
push
out
xchg
inc
inc
dec
pop
jmp
in
mov
pop
xor
imul
add
mov
imul
ss
sbb
jge
xchg
fs
or
frstor
add
subb
loopne
jle
mov
sbb
inc
mov
out
adc
push
jns
repnz
cld
daa
outsl
add
lret
mov
ss
in
gs
mov
in
pop
jb
or
xor
ficomps
fcmovbe
movsb
pop
ljmp
notb
jg
movsl
imul
js
xchg
ret
push
arpl
ljmp
data16
cwtl
rcrl
fisttpll
stos
fs
out
push
push
aas
cmp
jecxz
lods
inc
inc
inc
xor
adc
lret
mov
and
xor
push
and
xchg
xchg
jecxz
xor
nop
inc
mov
pusha
mov
sahf
pop
lock
in
and
cltd
out
mov
adc
lock
out
stos
mov
jge
sbb
loop
or
ret
push
sub
lods
pop
loopne
jbe
movsl
inc
mov
sub
leave
pushf
dec
inc
mov
cli
mov
mov
or
out
call
mov
lahf
mov
cmp
add
inc
in
aam
leave
lock
cmc
das
cmp
sbb
adc
stos
test
xor
cmc
cmp
xchg
out
xor
nop
cld
gs
xor
add
daa
sub
setno
jl
mov
jno
xor
out
push
fmuls
lock
sub
dec
in
or
and
pop
pop
ljmp
mov
test
lods
lds
js
jge
imull
hlt
mov
bound
fstpt
push
fs
ret
mov
clc
dec
pop
in
mov
aam
or
bound
sub
test
call
stos
stos
xchg
add
sarb
sub
lret
es
xchg
in
mov
lods
pop
icebp
int
out
in
fnstenv
jnp
jmp
pop
das
sbb
mov
loop
push
stc
test
xchg
cs
cld
sub
jmp
dec
inc
pushf
xchg
cmp
scas
loop
mov
mov
inc
mov
loop
dec
cmp
mov
jae
mov
xchg
lds
cmp
xor
es
aam
orb
xor
push
xchg
dec
cmpsb
cmp
pop
mov
jge
lods
xorl
test
test
scas
push
adc
rcll
mov
icebp
sahf
push
jb
cmpsl
ja
shll
bound
push
inc
pop
stos
jbe
xchg
pop
lret
movsb
cmp
sub
sub
inc
add
adc
int
jno
adc
add
inc
xor
add
int
ret
jbe
addr16
xor
pop
es
test
ss
fs
dec
xchg
pop
cmpsb
mov
pushf
cmc
add
popa
mov
sahf
or
lahf
add
out
test
lds
cld
xor
je
stc
pop
lret
mov
aas
mov
push
mov
and
leave
xor
out
test
sbb
in
idivb
cmpsl
push
repnz
cltd
aad
inc
outsl
xor
pop
xor
enter
pop
sub
fdiv
insb
mov
dec
out
pop
notl
loop
mov
mov
sub
mov
fildll
cmp
hlt
dec
ds
call
clc
or
ret
enter
ds
and
mov
dec
mov
xor
frstor
ret
add
xorb
and
or
pop
les
imull
mov
mov
or
loopne
jae
je
and
xorb
or
cmp
lods
xchg
test
pop
pushf
adc
and
shlb
xlat
stc
cld
inc
pop
mov
push
push
inc
xchg
cmp
mov
je
inc
fidivl
punpckhdq
add
xchg
xchg
addr16
mov
fxch
jge
cli
out
popf
sub
sbb
xor
das
ja
pop
or
loop
mov
test
mov
fstps
out
pusha
add
ficoml
mov
xchg
pop
or
inc
cmp
jnp
mov
and
add
add
iret
push
stc
aaa
test
daa
pop
flds
adc
and
xor
pop
ficoms
shrl
cmc
cs
cmp
icebp
mov
roll
lret
or
sbb
mov
jne,pt
repz
adc
dec
idivb
adc
inc
inc
insb
in
sbb
xor
je
iret
cltd
jle
xlat
bound
inc
adc
icebp
lods
pop
pop
pop
jae
jnp
sbb
in
shrb
lods
sub
data16
sub
mov
and
lods
js
ffreep
shll
sbb
dec
or
clc
mov
jmp
pop
jg
push
fdivrp
add
cmpb
movsb
in
add
mov
insb
out
adcb
arpl
push
rcrl
hlt
dec
pop
sub
fstpl
fimuls
sbb
ja
imulb
cmp
repz
jmp
mov
adc
sbb
negl
mov
mov
ss
mov
push
or
mov
shll
stos
mov
mov
bound
movsb
stos
pusha
negl
xchg
ljmp
test
push
push
movsl
jnp
xchg
bound
lods
ret
sub
lock
es
cwtl
mov
stos
inc
stc
mov
insl
sub
push
sbb
icebp
movsl
inc
pop
lods
pop
ds
test
pop
adc
mov
push
mov
aad
popa
sbb
sub
fisttpl
nop
jmp
xchg
mov
fwait
mov
in
xor
clc
movsb
out
fninit
sbb
inc
xchg
xor
xor
cmp
jb
test
add
mov
dec
and
popa
mov
lret
or
push
pop
daa
arpl
ja
mov
lds
sub
lahf
xor
and
lea
jge
mov
testl
das
nop
mov
mov
add
adc
and
cmp
lahf
outsb
adc
decl
xchg
ss
cwtl
xor
pop
data16
cmp
mov
lds
stos
push
rolb
lcall
repz
sbb
pop
rorb
xor
and
das
in
jno
das
dec
out
ret
inc
xchg
dec
pop
mulb
jo
sarl
jl
xchg
nop
das
movsl
push
out
lcall
fs
sbb
adc
ds
push
jo
xor
in
xchg
inc
add
aaa
lcall
cmp
mov
mov
hlt
in
scas
cmp
out
lds
hlt
sbb
mov
inc
or
or
mov
mov
mov
hlt
ret
out
out
dec
mov
sub
jnp
ret
push
cwtl
stc
inc
lret
sti
adc
outsb
fwait
int3
dec
xchg
repnz
inc
lret
mov
mov
jmp
inc
cld
push
lea
inc
mov
into
loopne
mov
js
sub
nop
add
pop
sub
mov
cld
loop
push
cwtl
sbb
stc
push
sarl
dec
in
fsubrs
ljmp
cmp
pop
outsl
lcall
xor
sub
data16
dec
jno
js
inc
xlat
cltd
ja
sbb
jp
jg
or
subl
lock
dec
and
adc
mov
or
mov
divl
jnp
cmp
test
push
inc
dec
into
enter
inc
pusha
cmpl
out
rcrb
ss
mov
push
push
clc
int3
mov
fidivs
rol
lods
xchg
fwait
push
ficoml
jl
pushf
leave
cmp
std
ljmp
jmp
les
je
jne
xchg
or
idivl
mov
jno
jb
scas
test
or
xor
push
fdivrs
test
jp
movsb
jmp
jno
ljmp
aaa
jo
and
pop
inc
insb
shl
mov
je
ljmp
sbb
push
cmp
in
clc
mov
ss
mov
stos
sbb
andl
xor
inc
xor
dec
lahf
push
lods
les
and
test
mov
das
mov
mov
xlat
es
test
loopne
jecxz
jg
sbb
jno
mov
pop
imul
pop
clc
sahf
mov
insl
les
mov
dec
sbb
xor
addr16
int3
sbb
mov
movsb
mov
add
nop
sub
stos
iret
and
pop
sub
inc
dec
scas
mov
pop
lahf
hlt
repz
sti
sbb
jno
and
adc
inc
das
lds
mov
movsl
or
mov
mov
incb
pop
jbe
mov
inc
in
arpl
fstpt
notl
popa
adc
jo
hlt
cmpsl
pop
out
nop
cwtl
out
lods
dec
lcall
xor
sub
xchg
sub
daa
sub
imull
mov
out
add
push
dec
test
cli
xchg
jg
xchg
jecxz
ljmp
mov
icebp
xchg
pop
out
pushf
and
into
pushf
mov
loop
push
xor
fcmovnb
nop
xor
dec
dec
sub
int3
xchg
mov
jecxz
sbb
ja
xor
cwtl
dec
jecxz
cvtps2pd
stos
shrl
pop
rclb
pop
insl
jne
cmp
mov
mov
mov
loop
inc
decl
ret
iret
cltd
mov
inc
scas
mov
jge
imul
xchg
xor
stos
ljmp
mov
aad
mov
push
imul
inc
mov
enter
cwtl
dec
cmp
icebp
or
cmp
and
mov
xor
imul
mov
adc
sahf
lock
loope
ret
jmp
inc
ret
shr
cli
push
or
test
sbb
ficomps
test
clc
into
fnsave
mov
mov
movsb
mov
jnp
jp
fdivl
mov
das
rorb
jmp
fsubr
pop
nop
pop
pop
inc
js
mov
in
ffree
sub
push
mov
add
mov
push
push
into
and
mov
pop
fdivp
dec
or
pop
pop
popf
clc
sub
ja
jns
lds
cmc
lods
cmp
fwait
xchg
mov
and
rcll
les
das
loopne
imul
mov
daa
sub
test
iret
lods
mov
cmp
sub
push
sub
shrb
mov
sbb
cwtl
mov
test
and
fildll
enter
or
negl
in
scas
sub
push
jb
dec
ss
in
jbe
mov
jno
pop
sti
xchg
lea
add
jnp
push
xor
jmp
test
xlat
sub
int
clc
mov
ljmp
push
js
dec
lods
jge
fbld
inc
lcall
inc
pushf
inc
sahf
push
ljmp
mov
push
andl
mov
ret
add
dec
in
cmp
push
push
mov
mov
gs
xchg
insb
xor
push
cmp
mov
lds
jb
pop
sub
mov
loop
push
or
daa
cmp
and
sbb
xor
push
jl
fstps
test
push
test
inc
or
movsb
cmp
cmp
les
inc
fbstp
subb
inc
dec
lahf
andb
xchg
sub
inc
movsb
mov
dec
in
lahf
out
cmpsl
mov
push
mov
add
xchg
xor
dec
mov
xlat
repz
fcmovnbe
xor
xor
or
adc
xor
shl
jns
jnp
push
pop
in
das
inc
out
jae
xor
xchg
inc
lret
dec
dec
add
and
orl
adc
shlb
psllw
subl
mov
dec
arpl
push
mov
aas
push
in
cmpsb
dec
mov
mov
sti
es
lock
sub
sub
dec
inc
dec
dec
dec
pop
neg
mov
stos
xchg
xchg
loop
adc
jmp
dec
sbb
dec
and
or
push
or
roll
jg
inc
dec
test
subb
mov
jbe
aas
dec
rcll
cmpsb
cmp
in
jp
aaa
es
sbb
inc
cltd
outsl
pop
orb
arpl
inc
jns
pop
mov
popf
sub
das
icebp
xchg
push
push
je
jg
push
sahf
cmp
mov
push
inc
adc
out
dec
aad
fs
push
xchg
data16
les
bnd
mov
mov
jle
xchg
push
push
lds
fidivs
cld
pop
xor
fldl
push
or
sarb
mov
sub
push
popf
mov
dec
fdivs
and
xchg
out
xchg
xor
aam
inc
daa
mov
sub
fcompl
aam
xchg
mov
rorl
mov
xchg
sahf
sbb
std
pop
movsl
push
in
dec
push
iret
add
ficomps
std
jnp
inc
lods
jmp
lea
pop
test
dec
mov
xchg
sub
sbb
sub
cmp
pop
je
test
add
mov
add
cmp
cmp
fidivl
repnz
jae
sahf
mov
jns
scas
clc
dec
adc
jp
push
xor
mov
lock
jg
lds
aaa
pop
imul
push
sub
cld
xchg
adc
adc
mov
out
imul
test
cmp
sbb
mov
imul
icebp
cmc
dec
adc
shrl
lods
nop
sbb
rcrl
sti
loope
roll
add
clc
inc
mov
cltd
pop
cmp
shl
mov
pop
jmp
mov
nop
sub
jecxz
pop
cmc
in
fildl
in
es
cltd
xor
int
cwtl
imul
lret
jne
jmp
and
cmp
push
clc
xchg
pop
hlt
adc
adc
xor
mov
add
insl
xor
into
gs
pop
or
jmp
popa
clc
and
sti
pop
inc
ret
jnp
mov
aas
pop
mov
popa
dec
dec
rcr
aam
mov
mov
lds
lock
or
inc
fmul
pop
cld
addr16
jbe
jne
mov
call
mov
pop
push
fidivs
mov
mov
jo
cld
out
movsl
enter
adc
clc
mov
dec
pop
xchg
xchg
mov
loopne
aad
adc
xor
dec
out
pop
push
das
pop
xor
mov
cmp
gs
xchg
xor
test
cmp
xchg
xlat
shrl
lret
inc
shll
jle
orl
int
and
scas
mov
add
imul
sbb
dec
and
aam
insl
pop
xchg
stc
insb
jecxz
addr16
push
decl
lcall
xor
or
cli
xchg
inc
test
sbb
sbb
pop
pusha
mov
sub
lret
mov
mov
push
inc
je
sub
xor
cs
out
dec
insb
cmp
jns
jnp
add
pop
lods
lahf
je
testl
imul
sbb
jl
pop
scas
test
icebp
fnop
mov
jge
imul
stos
mov
call
pop
in
jle
inc
call
mov
push
or
inc
or
inc
lea
psubw
or
dec
adc
outsb
xchg
fadd
pop
adc
sub
sub
cmc
inc
mov
jns
pop
fisttpl
rorb
xor
mov
cmp
pop
sbbl
scas
call
pop
lea
jp
ja
jbe
pop
add
in
jl
loop
mov
pop
seta
dec
loope
lahf
cltd
and
push
test
jecxz
push
stc
pop
lock
cltd
mov
mov
lahf
add
mov
or
push
inc
jo
outsb
sbb
dec
rolb
xor
sbb
push
rcll
and
leave
add
mov
ss
int3
int
addl
rep
sub
pop
cs
pop
rorb
pop
dec
mov
hlt
jns
sub
sub
test
xchg
sub
cmp
les
xlat
push
gs
jb
mov
lret
mov
imul
jmp
aaa
stos
jmp
and
pop
fsub
push
js
jle
cmp
sbb
lahf
ss
ljmp
mov
dec
fstps
rclb
pop
jcxz
sbb
inc
aaa
or
stc
jg
add
push
ds
sbbb
aad
mov
fdivl
add
les
ds
das
jg
dec
push
jmp
mov
jne
sbb
push
je
pop
aad
aas
jle
rol
xchg
xchg
mov
outsl
out
std
sahf
fildll
or
fisttpl
scas
loop
pop
out
ds
mov
sbb
mov
mov
jb
and
dec
pop
xor
test
insb
mov
jg
es
pusha
mov
fdivrl
mov
lret
leave
mov
or
stos
push
sar
adc
je
cmp
cmp
mov
inc
lods
mov
or
fidivl
jp
inc
xchg
aaa
pop
and
arpl
xor
mov
enter
and
push
call
orl
mov
cmp
aad
pop
jo
jg
into
push
ficoms
in
cld
imul
sbb
push
int3
ds
cmc
lods
push
std
pop
in
and
lret
xlat
mov
sbb
inc
xchg
popf
dec
or
push
xchg
and
int
sbb
movsl
inc
sub
out
loop
mov
mov
pop
sub
jbe
mov
push
xchg
sub
imul
xchg
ss
and
xchg
xor
std
mov
jae
sbb
inc
dec
mov
or
push
push
mov
fld
insl
pop
gs
push
imul
leave
lret
mov
pop
inc
sub
add
daa
aad
sub
inc
jg
jns
ss
xor
pop
in
ficoms
scas
dec
or
adc
in
inc
mov
mov
xchg
sbb
and
xchg
mov
cmc
repnz
mov
int3
pop
pop
jecxz
sbb
mov
scas
xchg
loopne
inc
lods
xor
inc
aas
jne
inc
nop
adc
pop
jo
jb
jg
inc
jg
out
stos
pop
data16
xorl
arpl
stos
cmp
lret
sub
mov
inc
dec
jne
jbe
jo
dec
push
jecxz
pop
movsl
dec
add
movsb
insl
lock
push
int
push
mov
outsl
iret
aas
xor
into
lret
frstor
fadd
cld
sbb
and
mov
sub
stos
add
in
mov
xchg
xchg
out
add
and
inc
mov
inc
xor
in
es
repz
push
mov
mov
sub
or
repz
arpl
ret
enter
subb
add
movsb
jnp
cmp
add
cmpsl
dec
fdivrs
inc
jle
rcl
sbb
leave
nop
push
xchg
mov
popl
int
and
xchg
icebp
add
sub
jp
mov
pop
dec
dec
loop
and
aad
jbe
in
sbbl
dec
xchg
jmp
cmp
shlb
shrb
mov
jl
loop
sbb
into
stos
orb
and
and
imul
mov
push
rclb
mov
aaa
stos
adc
les
shl
pop
daa
sahf
cmp
and
add
sbb
jle
and
adcl
stos
ret
ret
dec
pop
subl
push
adc
cs
jns
cltd
mov
xrelease
or
and
fimuls
ret
mov
adc
add
aam
pusha
fbld
add
arpl
test
xor
ja
addr16
sbb
data16
push
movsl
add
scas
ja
pop
mov
aad
gs
ja
or
mov
pushf
xor
repnz
cmp
bnd
or
pop
inc
sub
inc
lcall
test
push
pushf
insb
push
dec
or
pop
pop
ss
adc
out
pop
sbb
jg
inc
test
dec
cwtl
popa
decb
ja
mov
xchg
fistl
mov
dec
leave
inc
mov
push
sbb
push
dec
jecxz
push
mov
mov
lret
mov
cmpb
and
pusha
push
mov
addb
dec
push
nop
push
pushl
push
sti
xor
mov
jl
loop
xor
pop
rclb
ds
aad
mov
or
in
insl
loope
not
add
dec
push
jl
mov
popa
xchg
lea
rcr
outsl
adc
lock
scas
ja
xor
cltd
xor
or
mov
scas
push
xchg
mov
add
jp
sub
js
fcoms
push
je
aaa
jnp
pop
insb
mov
out
inc
fstpt
inc
xor
xchg
sarb
mov
cwtl
jae
or
mov
fisubrs
pushf
mov
jmp
mov
push
insb
shrb
xor
mov
and
pop
iret
mov
push
mov
stos
push
dec
ret
mov
jmp
pop
popa
clc
adc
sarl
add
and
mov
cwtl
out
push
in
mov
lahf
notb
fnstcw
in
mov
adc
je
bnd
outsl
ljmp
sbb
outsb
or
mov
dec
or
out
xchg
arpl
mov
sub
test
gs
popf
filds
sbb
mov
js
xchg
loope
jb
push
data16
inc
pop
scas
push
out
mov
mov
loope
fucomip
decl
daa
mov
addr16
mov
lret
sahf
vmovapd
cltd
mov
add
fistps
scas
sub
add
and
das
dec
xor
mov
lds
xor
rcll
loopne
repnz
xchg
jp
xchg
aam
hlt
push
cld
fcoms
jno
sbb
mov
and
xchg
sub
xchg
ljmp
adc
sbb
cltd
scas
jno
mov
add
mov
arpl
xor
and
loope
inc
xchg
jb
repnz
fdivrs
push
mov
loopne
es
rclb
jmp
dec
and
sbb
inc
jnp
fs
out
cltd
std
das
push
and
ja
addl
inc
pop
rorb
aas
dec
fs
cmp
mov
iret
sub
jle
push
das
cmp
jo
rep
jno
outsb
sub
push
les
push
pop
movsl
lock
xchg
sub
call
or
in
and
cmpsl
cwtl
adc
rol
mov
imul
cmpsb
sbb
adc
outsb
hlt
add
shll
divb
inc
test
fnstenv
add
xor
push
pop
test
mov
add
rolb
mov
or
clc
push
adc
imul
ret
pusha
ljmp
add
inc
pop
das
aas
xor
jo
sub
daa
dec
mov
mov
inc
int
push
inc
pop
imul
push
sub
xchg
bound
test
les
scas
std
cwtl
sbb
js
and
testl
sbb
jbe
dec
out
outsl
push
add
popa
jns
addr16
xchg
sarb
mov
jbe
call
test
mov
shrb
repz
test
mov
push
in
push
sub
sbb
jns
in
xchg
das
mov
insb
xchg
jecxz
push
adc
orb
mov
cmpsl
xor
daa
gs
and
dec
push
mov
mov
pop
mov
xchg
ljmp
pop
pop
bound
adc
jge
cltd
scas
shlb
lock
and
icebp
pop
aad
add
cmpsb
dec
mov
or
push
push
jae
pop
ds
popf
cmp
pushf
and
fstl
pop
xor
cmpsb
pop
sub
pop
mov
fwait
xor
mov
mov
add
cmc
pop
clc
dec
cmp
xor
int3
lret
ljmp
aas
inc
push
inc
mov
dec
push
xchg
sub
lret
push
lods
nop
hlt
andl
frstor
sub
movsb
add
xor
add
adc
sbb
cld
int
and
inc
into
mov
cmc
scas
jmp
xor
dec
xchg
add
mov
push
cmpsb
xchg
sbb
test
add
dec
loope
push
jp
aam
and
or
pop
jb
sub
mov
add
loop
out
cli
ret
lods
shll
pop
add
and
xchg
dec
xor
subl
push
lea
fstps
rolb
sti
xchg
rclb
and
aas
fstpt
xchg
dec
rcrl
fcompl
mov
fbld
fisubrl
adc
mov
or
xor
mov
inc
iret
repz
imul
mov
insl
pop
rol
push
push
shrl
lret
cmc
aam
cmp
or
shll
pop
and
call
cmp
sbb
int
fildll
jno
in
push
mov
lock
repz
daa
and
or
dec
lods
pop
jbe
mov
xchg
jmp
cmpsl
cs
sub
xor
jmp
sbb
scas
out
test
lock
ja
pop
popa
push
xchg
je
addr16
aas
mov
pop
sub
adcb
sbb
mull
lods
aas
xchg
repnz
lea
mov
outsl
mov
add
jne
xchg
pop
push
shrb
imul
mov
mov
iret
insl
outsl
jnp
mov
pop
ret
or
adc
pop
fbstp
cmp
ja
mov
adc
sbb
mov
lcall
lret
jmp
lods
add
adc
aam
add
call
call
add
cmp
ljmp
dec
outsl
push
jnp
jmp
call
pusha
sbbb
sbbb
jbe
mov
and
xchg
fwait
xor
ret
pop
jae
and
jl
sbbl
fsubrs
js
mov
shll
pop
push
cltd
xchg
out
pop
in
dec
adc
iret
xor
xor
ljmp
inc
fldt
adc
sar
iret
mov
sbbl
les
mov
xchg
lret
fs
jno
addr16
mov
ffree
mov
js
gs
cmp
sub
inc
inc
xchg
mov
pop
lcall
jl
das
mov
mov
dec
jo
cmp
out
sub
mov
mov
lahf
add
or
stos
mov
xor
insb
loop
pusha
add
mov
daa
sub
push
xchg
out
sbb
and
cmp
fs
cltd
pop
shlb
dec
jns
out
or
xchg
movntq
mov
push
inc
pop
fldl2t
cmp
lock
jbe
inc
push
push
lods
cmp
cltd
test
fbld
adc
mov
add
jbe
shr
cmp
mov
mov
cmp
mov
data16
adc
mov
clc
push
xor
inc
pop
mov
sbb
or
xchg
ljmp
jecxz
pop
icebp
or
add
xchg
stos
or
push
das
int
adc
mov
mov
mov
jge
push
cmp
ds
fs
or
inc
popa
xchg
or
fldt
imull
xchg
jecxz
dec
inc
mov
dec
xchg
call
jmp
mov
mov
lcall
movsb
ficomps
jecxz
mov
sti
inc
jecxz
mov
push
xor
xchg
cs
fisubrl
addl
aam
or
mov
mov
mov
xchg
stc
sbb
lret
outsb
xrelease
mov
and
inc
insl
out
and
cmpsb
push
fisubrs
sub
nop
gs
mov
insl
push
jmp
dec
jno
dec
adc
lret
sub
fiadds
sti
repz
iret
gs
in
jmp
movsb
into
push
fwait
or
pop
jne
insl
xchg
mov
clc
pushf
xor
and
je
mov
cmp
add
les
test
xor
jle
mov
dec
lcall
push
mov
xor
sbb
cmp
mov
xor
ret
mov
xchg
psubsb
je
mov
mov
jo
and
js
ljmp
aaa
ljmp
sbb
rcl
sbb
imul
adcb
mov
subl
repz
mov
lahf
test
mov
mov
push
sbb
cmp
adc
sbbl
outsl
mov
sub
sbbl
sub
and
pop
mov
sti
outsl
nop
jno
mov
adc
mov
in
sub
push
xor
sahf
mov
pusha
in
push
or
sbb
jle
std
sarl
pop
mov
sbbl
xorl
add
cmp
pop
in
subb
enter
push
test
inc
sub
cs
out
xchg
and
popf
divl
jmp
cmpsb
loop
dec
xor
push
jb
xchg
xor
push
adc
or
hlt
cmp
pop
sub
aad
cmc
mov
out
cli
out
arpl
test
xor
xor
mov
push
inc
imul
sbb
add
fidivs
cmp
mov
inc
ljmp
leave
push
stc
sub
sbb
test
pop
dec
daa
bound
popa
mov
inc
andb
pop
ljmp
mov
shll
sbb
shrb
cmp
jecxz
repnz
xor
cmp
push
xor
cwtl
xchg
outsl
pop
out
mov
jmp
nop
and
enter
scas
pop
pop
fildll
dec
inc
xchg
xchg
pop
adc
xchg
and
fisubs
xchg
es
xlat
push
push
cmpsl
clc
test
call
xchg
imul
xchg
jmp
lds
sbb
push
ja
mov
push
mov
dec
and
mov
adc
mov
aam
xor
imul
add
mov
cmc
cwtl
je
lock
mov
ret
push
in
hlt
mov
push
out
push
testb
cmpsl
jg
addr16
dec
dec
ss
xchg
adc
nop
cmp
cmp
xchg
call
cmp
cli
mov
leave
mov
xor
mov
inc
lret
and
xlat
outsb
icebp
push
cli
jne
cltd
cmc
push
mov
rcr
ret
jno
shll
push
cmp
cmp
pop
mov
mov
jp
xchg
sub
fwait
aam
add
dec
gs
hlt
adc
incb
out
in
bound
mov
cwtl
mov
in
out
add
push
adc
mov
out
pop
dec
popa
call
dec
or
lcall
mov
fldcw
outsl
sub
subl
adc
stos
xlat
es
psrlw
xor
mov
xchg
jecxz
xchg
pop
icebp
mov
mov
mov
fstps
jne
jmp
stc
jle
push
shll
push
je
xchg
cmpsl
popf
adcb
adc
ljmp
leave
fld1
inc
fimull
sbb
sbb
sbb
push
pop
sub
jp
std
rcrb
cmp
mov
push
movsl
gs
sub
bound
iret
push
subb
xchg
leave
orb
inc
or
addb
stc
fists
sub
rolb
and
mov
dec
ret
iret
dec
out
jns
xchg
or
ljmp
insb
push
push
js
lahf
push
cmc
jg
fcoml
sbb
movsl
push
mov
pop
rol
in
mov
xchg
cwtl
jnp
inc
lcall
xchg
fwait
addb
pop
lret
out
inc
mov
cmp
mov
cmp
and
rcll
ret
mov
adc
inc
jecxz
mov
inc
loopne
jg
mov
xchg
ds
xchg
add
es
mov
push
sbb
pop
jnp
push
cmp
jl
sub
movb
lea
add
inc
stc
xor
lods
lea
outsb
out
adc
jns
adc
inc
dec
xchg
pop
mov
aam
xchg
mov
pop
mov
lds
movsb
or
push
inc
sahf
adc
andb
cmp
popf
cmp
mov
sbb
mov
pop
push
xchg
mov
pop
insl
pusha
or
push
es
das
aad
pop
mov
mov
scas
fsub
mov
fmull
mov
pop
or
xchg
scas
mov
or
inc
pop
cs
or
pop
popf
sub
int
rorb
mov
dec
testb
movsl
clc
push
sub
jnp
lea
scas
addb
push
jg
adc
stos
cmp
add
lcall
mov
hlt
mov
xchg
lock
mov
mov
pop
push
xor
adc
add
cli
subb
fidivrl
mov
sbb
sub
cs
fildll
mov
leave
cs
inc
das
mov
and
jmp
loop
push
int3
pop
enter
cld
sub
dec
push
mov
les
xchg
imul
icebp
cmp
and
sub
loopne
sub
int3
add
rolb
push
scas
push
cmp
sub
jbe
pushf
lret
jb
movsb
in
and
xchg
adc
xchg
dec
bound
loopne,pn
fcoml
dec
cmc
mov
and
push
jmp
jle
addb
dec
dec
test
popf
fldcw
insb
fwait
shrb
mov
jg
loopne
jge
pop
sub
cmpsl
rcll
cmpsb
ret
adc
and
xlat
sub
xchg
add
pop
pop
add
pop
and
popa
dec
popa
push
or
inc
mov
enter
pop
mov
aad
ja
subl
mov
fmul
into
daa
pop
aam
push
in
dec
mull
insb
add
cmp
cmp
callw
fimuls
pop
cmp
mov
outsb
xor
xor
xchg
dec
nop
pop
mov
nop
aaa
mov
add
push
in
fistpl
test
and
icebp
and
call
cli
leave
dec
add
pushl
dec
shl
pushf
jo
add
sbb
mov
std
outsb
mov
sbb
pusha
xchg
pop
lret
scas
dec
jmp
dec
jecxz
jl
mov
ja
pop
cmc
js
aam
mov
andb
repnz
dec
arpl
inc
or
pop
stc
xchg
mov
lds
imul
pop
push
sub
inc
cwtl
pop
mov
mov
adc
mov
xor
mov
pop
aam
sbb
pop
lds
outsl
daa
pop
arpl
cmc
out
xor
sub
pop
inc
cmp
jns
loopnew
sbb
xchg
add
sub
std
ja
pushf
call
xchg
stos
iret
pop
fstps
dec
in
pop
or
fwait
dec
sbb
out
jnp
inc
fs
aad
cltd
stos
adc
inc
push
dec
lods
lcall
sub
out
or
push
dec
mov
test
out
jge
dec
mov
mov
aaa
or
int
pushf
sub
ficoml
push
mov
shll
jl
fs
lock
addr16
testl
and
inc
lods
mov
mov
int
dec
mov
mov
arpl
lret
xlat
retw
pop
push
fldl
lods
ljmp
pushf
xor
jl
aas
and
rol
pop
sti
cs
inc
mov
or
gs
adc
jecxz
xor
xchg
pop
test
hlt
aam
pop
popa
sub
lahf
test
cs
lods
nop
cmc
dec
xor
pop
in
xchg
mov
add
mov
sbb
cmp
scas
inc
dec
xchg
scas
repz
gs
xor
jnp
mov
jge
or
inc
sub
push
xor
daa
mov
data16
ss
in
adcb
sbb
mov
jb
fs
xlat
xchg
negb
and
jns
inc
jmp
imul
sbb
out
jg
pop
fnstsw
shlb
fs
scas
andl
out
and
mov
jg
stos
xchg
mov
loopne
es
rcrl
ret
sub
and
cmp
push
jns
mov
int
push
mov
pop
or
mov
xchg
popf
add
orl
imul
adc
jno
das
push
or
lea
lea
fidivs
rcll
or
push
mov
push
sbbb
fwait
sti
in
jnp
push
jns
cmpsb
push
mov
dec
mov
jns
outsl
push
jge
or
sub
adc
jl
push
repnz
jno
cmc
mov
imul
push
dec
pop
xor
xor
xchg
push
jno
mov
sbb
jmp
jnp
jle
or
xchg
cmc
imul
sub
or
inc
aas
cwtl
sub
or
js
mov
jnp
xor
xchg
sub
inc
imul
rcrb
sub
rorb
subb
popf
inc
push
xorl
pop
xchg
inc
lea
cmp
mov
sub
fdivl
imul
insl
cmpsl
stc
je
add
sub
push
shl
push
jp
lock
fidivrl
adc
clc
mov
test
cmp
cld
inc
pop
pop
nop
sub
shlb
add
sti
sahf
test
mov
int3
jle
jnp
in
in
push
jge
xchg
jbe
dec
mov
in
jbe
pop
mov
lret
rcl
loop
idiv
ret
xchg
pop
cmp
shll
mov
shrl
adc
xchg
daa
cwtl
into
mov
je
scas
inc
ljmp
sub
cmp
in
add
or
stos
cmp
xor
addb
and
cmp
add
jnp
rclb
cmp
icebp
imul
inc
inc
pop
jae
xor
pusha
gs
jno
out
dec
test
lods
imulb
xor
icebp
insb
push
jne
adc
or
add
inc
push
mov
xor
sub
test
and
loopne
inc
adc
bound
sub
dec
adc
test
mov
sbb
sbb
add
mov
rorl
pop
js
dec
ljmp
xor
lret
or
bound
ret
pop
mov
cmp
daa
xchg
rorl
mov
scas
call
sub
outsb
pusha
adc
inc
mov
push
out
fwait
dec
add
xor
push
xor
add
xchg
cmpsl
xor
sbb
jns
aas
aas
adc
push
aas
movsl
xor
pop
fisubrs
incl
mov
push
call
add
out
test
sbb
outsl
insl
push
leave
arpl
sbb
jmp
loopne
ja
jp
pop
xchg
jno
int3
imul
xor
mov
sbb
out
cld
es
ficoms
xor
sub
call
push
jecxz
push
jb
sub
data16
out
fwait
shll
mov
test
sar
les
or
sub
dec
clc
mov
inc
fdivrp
adc
data16
das
fs
mov
shlb
daa
je
xchg
outsl
insl
push
lods
test
mov
pop
xlat
jp
xor
pop
movsl
jecxz
addb
imul
loope
lret
sub
movsb
nop
out
lcall
test
fwait
jb
subb
aaa
push
in
in
mov
jge
inc
push
mov
jb
and
mov
xchg
mov
cltd
lock
shl
mov
sbb
inc
inc
xor
lea
dec
cmpsl
jae
pop
mov
icebp
push
loopne
nop
and
les
repz
sbb
mov
push
mov
xor
sahf
push
inc
and
pop
je
sbb
inc
cmp
imul
loopne
cmp
cmp
cltd
jne
mov
mov
fadd
pop
or
int3
in
mov
jo
subb
ret
popf
rolb
jge
jns
daa
movsb
in
jge
push
sub
daa
inc
sub
out
sub
mov
faddl
outsb
adc
push
nop
aaa
nopl
insb
rcrb
or
mov
and
cmpsl
xor
fildll
lds
loope
dec
pop
jno
inc
push
jnp
enter
sub
dec
fistps
xchg
sub
lcall
in
and
int
jg
lcall
out
lea
pushf
xor
jle
shr
nop
cmp
push
dec
lcall
lods
jns
lret
test
push
push
pop
dec
cmpsl
out
call
inc
xrelease
roll
fnstsw
fwait
mov
or
pushf
push
mov
mov
and
mov
cmpb
out
scas
cld
data16
push
pop
mov
mov
aad
cmpsb
jne
mov
testb
mov
or
dec
in
mov
xchg
jo
inc
outsl
clc
mov
testl
movl
ss
inc
adc
in
mov
xchg
inc
test
cmp
das
sbb
and
imul
mov
dec
repnz
mov
cmp
fucomip
mov
jbe
lock
fisubl
imul
mov
popa
into
js
inc
inc
push
insb
es
and
inc
and
xor
mov
dec
rclb
dec
cmpsb
sbb
inc
aam
mov
repnz
add
loope
mov
push
daa
sbb
dec
adcb
and
push
push
xor
add
jp
or
pop
adc
sub
push
insl
add
xor
outsl
xchg
xchg
xor
jecxz
insl
ja
or
add
stos
add
cwtl
shrl
ja
in
out
lret
sub
jmp
adc
loope
pushf
mov
int
push
cmp
sti
adc
ret
test
sbbb
and
jae
push
pop
arpl
outsb
xchg
jg
aam
aaa
xor
in
mov
sbb
jecxz
pushf
add
adc
sahf
and
dec
mov
xchg
sbb
sbb
mov
dec
mov
out
xchg
pop
mov
aad
cmp
inc
dec
leave
fistpll
push
inc
xchg
jns
js
in
mov
pop
dec
jecxz
pop
xchg
dec
jne
push
mov
dec
dec
out
test
add
stos
sbb
xor
ja
fstpl
push
dec
pop
cmpsb
and
push
jo
lods
pop
sbb
js
or
cmp
cmp
jnp
ret
inc
push
fs
test
cltd
fdivs
sbbl
mov
xchg
leave
push
add
pop
add
mov
adc
inc
rolb
add
shrl
jno
ror
push
jmp
mov
dec
jnp
push
cmp
mov
and
xor
sahf
dec
lods
out
test
std
or
xor
decb
aam
popa
lret
jo
sbb
test
incl
es
or
mov
int3
cmp
pushf
push
cwtl
aaa
mov
lds
imul
push
jno
cs
adc
dec
icebp
dec
jns
stos
mov
daa
push
clc
add
aad
sbb
sbb
mov
fstpt
add
mov
movsb
pop
mov
add
jl
mov
pusha
movsb
inc
inc
pushf
or
std
and
push
cli
roll
xor
and
dec
add
jmp
adcb
sub
jbe
pop
outsl
sbb
sub
jne
mov
rorb
jnp
adc
push
cwtl
pop
je
aas
mov
push
cmp
lods
push
and
inc
inc
loopne
jl
repnz
xchg
jmp
lahf
mov
bound
inc
push
gs
lods
in
sbbl
xchg
pop
imul
sub
cmp
repnz
mov
dec
int
js
push
stc
dec
test
pop
xchg
sti
pushf
in
pop
push
popf
aaa
mov
in
xchg
jb
stc
nop
jne
xchg
mov
pop
sbb
cs
mov
push
nop
fimuls
loope
in
stc
stos
xchg
cmp
push
leave
icebp
and
xchg
je
xchg
cmp
mov
test
mov
jecxz
ret
enter
jno
dec
push
jb
loop
cmpsl
sub
mov
mov
jg
lcall
cwtl
and
shlb
bound
enter
out
sbb
xchg
loop
in
xlat
add
mov
mov
mov
pop
mov
fistpl
stos
add
std
add
dec
stos
fidivl
jmp
inc
xchg
inc
jbe
jns
mov
imul
add
movhps
lock
addl
stos
mov
sahf
out
out
xor
fsts
dec
add
sbb
pop
cwtl
das
mov
mov
in
fld
clc
shlb
mov
jle
pop
cs
mov
arpl
mov
shr
iret
adc
mov
icebp
xor
bound
dec
aad
flds
repnz
mov
fisubrl
mov
xlat
testb
sarb
mov
jb
lahf
in
insl
inc
decb
imul
and
repnz
inc
das
xor
mov
mov
cli
nop
jnp
or
push
mov
out
popf
adc
leave
xor
lcall
dec
mov
movsl
stos
gs
mov
xor
mov
adc
fs
dec
mov
adcl
mov
cmp
or
fdivs
push
pop
mov
sub
and
sahf
pop
pop
pushf
mov
add
loope
and
push
mov
jae
shrb
int3
fsubr
in
or
jnp
dec
and
and
push
pop
or
inc
std
mov
jae
arpl
pop
xchg
push
or
loopne
sbb
jmp
cs
add
dec
or
jmp
or
aaa
add
sahf
xor
xchg
pushf
xor
mov
ljmp
push
adc
fsubs
add
sub
push
shll
rcrl
ror
scas
inc
mov
test
push
scas
int
push
jns
mov
scas
ljmp
adc
scas
jns
pop
xchg
xor
and
addr16
and
iret
repnz
push
pop
dec
int
push
jmp
xchg
pop
dec
and
add
mov
stos
or
mov
sub
xor
dec
shlb
rcrl
jbe
pop
out
adc
movl
gs
add
mov
and
xor
sbb
ljmp
jmp
sub
mov
aas
xchg
js
subb
dec
dec
cmpl
lock
insl
ja
jbe
roll
movsl
ljmp
jo
mov
xchg
push
xor
jne
pop
out
mov
bswap
inc
inc
fnstcw
push
jo
lret
mov
xchg
xchg
ljmp
pop
test
adc
sbb
mov
movsl
addb
enter
inc
out
in
dec
and
ss
out
and
divl
dec
or
add
pushf
xchg
lahf
ret
jbe
push
sub
lcall
call
test
jl
fistps
sbb
mov
lods
lds
add
pushf
cmp
cmp
jp
push
insl
cld
dec
sbb
fildll
repnz
stos
mov
fld
cpuid
dec
pop
mov
dec
arpl
mov
jne
push
jb
xor
roll
pop
cmp
and
fsubrs
addl
inc
vpmaxsw
adc
jbe
add
jno
aas
test
jno
test
decb
mov
bound
fcomi
and
sti
or
out
iret
sbb
shr
adc
outsl
mov
fstpl
pop
int3
mov
insb
cmpsl
test
test
add
pop
bnd
push
mov
jns
xchg
flds
in
mov
cmpsl
xchg
mov
jbe
in
pushf
push
or
test
mov
cmp
fsubr
not
push
out
out
sbb
rcrl
cmp
mov
rcrl
mov
adc
and
popa
jle
push
jb
mov
inc
push
jl
push
xchg
add
pop
imul
sbb
cwtl
stos
sub
rclb
sbb
xchg
mov
ljmp
lret
cld
xchg
add
sahf
lock
pop
fwait
xchg
sbb
dec
jp
adc
inc
xchg
subb
push
jg
cmpsl
mov
pusha
push
std
repz
pop
jp
mov
outsb
fstps
in
and
stc
nop
lods
and
xchg
and
xchg
or
imul
stos
sbb
mov
adc
fs
or
sti
and
jmp
mov
add
mov
addr16
stos
mov
cld
mov
xor
add
mov
jns
mov
mov
test
sbb
js
mov
addr16
pop
stos
pop
enter
stos
cmpsl
ds
mov
xor
das
xchg
pop
stos
lcall
test
or
shlb
test
rcrl
push
iret
push
xchg
ficoml
xchg
and
out
sub
jbe
mov
xlat
test
dec
pop
out
xlat
fstl
idivl
lds
cmpsl
xchg
xchg
add
mov
mov
dec
cli
outsb
shl
sbb
push
imul
aam
cmp
out
sbb
mov
test
dec
mov
loope
iret
testb
repz
push
inc
jge
bound
fxch
xchg
xlat
fstl
push
dec
sub
adc
sbb
stc
or
loop
sub
dec
add
sub
stc
or
push
push
inc
cmpb
xor
inc
testl
faddp
xor
jae
outsl
and
icebp
mov
shrl
in
pushf
mov
les
scas
ja
ljmp
test
jo
lock
je
jl
add
mov
mov
mov
sub
loop
outsb
mov
iret
shl
add
xor
or
repnz
mov
sub
nop
pop
mov
cmp
stos
std
mov
xchg
xchg
dec
pop
mov
or
int
test
sbb
dec
in
pushl
es
repz
cmpsl
imul
stc
fsub
dec
add
cmpb
cs
jnp
adc
pusha
lret
aam
xor
movsb
aaa
xchg
mov
lahf
pop
imul
cmp
in
and
sarb
push
sti
popf
push
add
sbb
or
mov
out
in
inc
and
aad
lock
xchg
xchg
mov
dec
mov
xor
jp
in
ret
arpl
add
sarb
inc
sahf
scas
jmp
inc
lods
inc
lock
add
les
pop
xchg
and
xor
ret
test
js
cmp
mov
mov
scas
xor
mov
test
and
fcompl
loope
dec
std
mov
roll
mov
or
push
addr16
xchg
out
fwait
mov
ret
jns
fldenv
jecxz
rclb
push
stos
sub
popf
in
addl
fs
or
jp
cmpsl
lods
imul
loope
inc
jmp
mov
gs
lds
mov
push
pop
in
jp
mov
ja
jnp
cmp
xchg
imul
insb
inc
mov
mov
mov
inc
icebp
mov
in
repnz
cli
dec
repz
insb
lahf
mov
les
out
aaa
mov
loope
mov
push
sbb
call
out
dec
adc
mov
repnz
mov
ja
cmp
push
or
sahf
sbb
nop
xor
mov
loope
data16
add
leave
int
mov
shlb
lahf
lahf
pop
cmp
mov
repz
cmp
mov
adc
jp
fistps
stos
addl
jle
jle
sbb
dec
repz
dec
lcall
ljmp
jno
cmpsb
add
cmp
daa
pop
cmpsb
pop
jge
dec
andb
mov
mov
jbe
sti
sub
orb
stos
or
mov
movsb
jns
adc
jno
inc
xlat
in
cmp
aaa
and
dec
jno
mov
mov
add
es
sub
push
iret
jp
add
cwtl
das
sub
mov
dec
popf
repnz
or
mov
notb
cmp
enter
in
in
push
mov
or
in
sub
jnp,pn
add
js
and
fadd
or
xor
insl
push
add
ror
mov
add
fdivs
imulb
dec
in
clc
or
rorl
popf
rorb
adc
cmp
mov
aaa
and
jb
addb
mov
daa
mov
mov
xor
sub
stc
inc
push
cmp
sbb
or
push
add
popa
clc
lahf
dec
clc
mov
cmc
mov
add
mov
sahf
push
mov
dec
adc
push
call
add
push
push
xor
ljmp
cmc
pop
mov
or
mov
stos
add
daa
data16
dec
dec
mov
lahf
push
jmp
mov
pop
repnz
push
imul
inc
xchg
cs
xor
sub
lods
xchg
outsb
add
dec
fisubs
testb
mov
fisttps
inc
pusha
aad
jbe
fbld
inc
jmp
aaa
and
sbb
fstpt
cmp
or
fcmove
mov
mov
xor
out
lods
aaa
cli
push
in
stos
cmp
repnz
fst
lods
mov
lods
inc
iret
sub
lret
sbb
cwtl
push
data16
js
mov
sbb
enter
add
add
stos
mov
scas
and
fucomp
orl
or
xor
loopne
jo
inc
xlat
in
cmpsb
xor
push
aaa
into
test
int3
sbb
stos
lahf
arpl
and
shll
sbb
mov
push
adc
push
fwait
cs
lds
xchg
pop
ret
xchg
hlt
jae
fcomps
fildl
in
es
cmp
sahf
testb
mov
xchg
and
pop
cmpsl
bound
aam
data16
je
mov
mov
enter
pushf
xor
js
lods
cmp
cmc
mov
insl
pop
stc
mov
std
pop
fistps
sbb
ds
sahf
mov
lahf
push
jbe
sub
sub
rcrb
ffree
cmp
call
clc
js
mov
stc
mov
sub
push
je
xor
sahf
jmp
inc
fwait
cltd
and
stos
inc
fdivp
out
insl
ret
pop
jo
dec
xchg
int
mov
sub
les
push
test
arpl
push
aad
pop
outsl
daa
xor
popa
mov
inc
js
scas
and
jl
insb
cld
test
dec
divl
lahf
dec
fisttpll
out
fcomi
adc
pop
fstpl
push
fstl
frstor
inc
xchg
mov
fwait
leave
rcl
les
leave
test
icebp
push
repnz
mov
inc
ljmp
cwtl
or
cld
inc
jns
lret
jecxz
dec
pop
jne
mov
cld
inc
pop
into
pop
mov
sub
xor
dec
insl
sbb
push
and
aas
insb
ret
pop
outsb
ljmp
add
out
push
fbld
mov
not
inc
stos
mov
out
popa
xor
mov
inc
in
push
or
icebp
sub
rcrb
jb
aam
test
inc
push
enter
adc
cmp
and
ds
mov
adcl
shl
and
inc
icebp
mov
adc
xor
xchg
add
out
fbstp
sahf
xor
dec
xchg
inc
stos
sahf
bound
pop
ss
cmpsl
add
ret
stc
rcr
xchg
sub
sub
pop
xor
mov
subb
clc
dec
dec
jmp
ljmp
sar
out
mov
jle
scas
sub
push
sti
add
xlat
imul
stos
add
das
add
and
push
pop
cmp
push
movsb
shlb
dec
dec
addb
xor
rclb
shl
std
mov
jecxz
ret
and
jge
mov
aad
cltd
sbbl
int3
sbb
mov
cmp
ds
outsb
dec
shrl
jno
repz
mov
shr
repz
sub
push
daa
jle
or
mov
insl
mov
push
in
stos
mov
andb
pop
add
jge
or
xchg
test
xchg
aas
mov
aad
mov
icebp
jp
notb
xchg
cli
inc
pop
cmpsb
mov
jb
adc
add
xor
mov
jge
iret
aam
jb
and
call
xor
lahf
cld
jp
imulb
push
cmpl
xchg
xor
cmpsl
stos
jne
pop
cwtl
lcall
xor
sti
aaa
leave
sarb
push
pop
shrl
fnstcw
dec
bound
shll
cld
test
loopne
scas
jb
xchg
jge
mov
mov
aad
push
mov
mov
aas
push
mov
dec
lahf
xor
sbb
mov
pop
xor
dec
sbb
test
sbb
xchg
fnsave
inc
ljmp
jmp
mov
in
idivl
ret
cmp
push
sbb
nop
str
pop
rep
frndint
push
cmp
cmp
mov
fldcw
sbb
or
int
and
ss
sbb
mov
leave
mov
inc
push
pop
lock
je
mov
mov
xchg
xor
pop
jb
add
arpl
push
arpl
jg
jl
cmp
ficomps
andl
arpl
or
fdivs
mov
mov
sbb
add
test
bound
and
in
pusha
lea
loopne
sti
xchg
pop
add
mov
repz
and
je
loop
sub
rorl
jge
push
inc
and
std
fcmovbe
imul
jns
mov
mov
adc
push
js
pop
ljmp
push
in
jge
mov
cltd
mov
mov
aas
sub
dec
aam
shlb
not
scas
fdivp
mov
mov
jne
adc
jp
divb
cli
subb
aaa
mov
aam
sbb
cmpl
loopw
jae
push
or
pop
subl
es
cwtl
mov
xlat
out
cli
or
inc
fstpl
cmp
mov
cmc
mov
xor
cltd
pop
cmp
insl
repz
and
lret
mov
pop
jnp
cmpb
push
xchg
lods
xchg
icebp
jecxz
inc
aad
add
movsl
out
inc
outsb
mov
or
and
cmp
aam
addr16
dec
bound
out
movsb
jae
pop
cwtl
int3
shrl
mov
adc
push
fadd
loope
repz
push
sub
push
in
or
sbb
dec
imul
mov
jge
ss
mov
std
pop
xor
cmp
pop
adc
dec
bound
push
sub
xcrypt-cfb
cmpsl
out
and
jnp
cmp
fstps
fwait
fwait
mov
mov
in
in
push
outsl
sbb
xorps
push
ret
dec
ja
mov
mov
xor
lock
add
sub
bound
out
jno
out
jmp
inc
aaa
js
push
fists
enter
into
gs
sub
adc
cmc
into
rcrb
and
repnz
mov
dec
rcrl
and
in
fs
test
adc
pop
cmpsl
aaa
jge
test
dec
or
hlt
pop
sub
pop
pop
hlt
and
xchg
jmp
int3
mov
lds
pop
xor
mov
aaa
inc
leave
adc
jb
test
out
sbbl
xlat
mov
adc
push
inc
rolb
sub
ret
xchg
popa
ss
fiadds
pop
repnz
fistpl
xor
or
xchg
sbb
inc
xchg
dec
ret
push
daa
pop
out
dec
fdivl
cmc
mov
popa
jg
and
mov
popa
lds
xchg
jp
out
roll
push
add
sub
inc
pushf
or
cli
xor
ss
js
add
ficoml
popa
fcmovnbe
imul
sub
pop
out
add
ds
jle
shrb
js
mov
insb
jge
and
pop
std
sbb
inc
push
loop
mov
call
inc
dec
js
and
push
sbb
cs
cmp
sbb
xor
jnp
fildl
xchg
jmp
jmp
jbe
das
aam
cmp
sub
add
outsl
xlat
xor
mov
xchg
pusha
daa
push
xchg
repz
fisttps
add
add
cmpsl
cli
out
outsl
lret
dec
jge
add
mov
fcos
sub
cmpsb
sbb
ret
ret
test
loope
push
mov
or
xchg
sbb
pushf
mov
data16
in
filds
inc
xchg
and
jl
imul
cltd
mov
ja
cmp
sub
mov
cmc
repz
mov
std
imul
mov
fwait
sub
pop
or
cmp
test
insl
clc
fstpt
mov
pusha
ret
jns
and
call
inc
push
add
add
and
movsl
aad
mov
mov
or
xor
ss
inc
imul
outsb
jl
les
pop
inc
mov
ds
dec
dec
push
sarb
mov
xor
adc
pop
xchg
ja
dec
insb
out
jge
out
repz
int
loop
mov
cmp
pop
lahf
arpl
in
adc
pop
outsl
jnp
into
cwtl
cmpl
and
mov
ja
inc
pusha
mov
sbb
push
pop
add
cmp
pop
insb
clc
out
icebp
mov
sub
pusha
stos
xchg
hlt
push
mov
jmp
mov
fcmovnbe
and
jp
negb
sub
and
iret
and
lret
insb
dec
push
xchg
fistpll
mov
imul
dec
xor
jnp
add
sbb
call
inc
or
mov
hlt
ja
cmpsl
imul
mov
out
dec
int
jno
int3
sbb
aas
lret
xchg
pop
jle
enter
sub
adc
xor
adc
imulb
popa
scas
inc
add
sarb
loope
mov
adc
addr16
jmp
push
cmp
and
push
cmp
jno
hlt
xchg
popa
xor
jb
gs
fsts
mov
add
cwtl
push
mov
mov
stc
pop
adc
xor
jl
mov
loopne
ds
mov
inc
mov
cs
xor
inc
push
push
jmp
lretw
lret
movsl
enter
mov
ss
sub
xchg
push
addr16
inc
ljmp
pusha
stc
jmp
or
pop
cli
sbb
jge
das
stc
pop
outsb
sub
stos
jbe
iret
sbb
sub
movsb
repnz
xchg
jo
stos
mov
add
cmp
dec
loopne
pop
cltd
test
pop
imul
jae
popf
mov
arpl
cli
mov
add
mov
adc
inc
ret
xorb
mov
inc
out
pop
mov
push
icebp
mov
movsb
jmp
xlat
int3
xor
lea
push
and
sub
mov
rcll
mov
lea
sbb
adc
aam
test
xchg
jo
mov
loopne
into
movl
test
or
mov
int3
cmpb
popa
lock
add
lods
outsb
gs
lret
adc
sub
sbb
sbb
sub
movsb
cmp
js
pop
es
lahf
int
lcall
xchg
dec
or
and
pop
scas
push
push
loopne
gs
test
pop
jne
inc
sub
mov
rorb
or
iret
or
and
add
push
jge
nop
sub
lahf
repnz
jns
cmc
mov
mov
insl
xchg
sub
cwtl
xor
cld
fists
int3
xor
adc
xor
dec
mov
ljmp
jno
add
sbb
pop
mov
or
test
xchg
sub
scas
scas
out
add
cmc
inc
push
jns
mov
jl
push
mov
int3
push
test
mov
mov
inc
popf
mov
insb
sbb
sahf
testl
arpl
hlt
movsb
push
out
test
and
pop
rol
das
ret
popa
stc
dec
seto
repnz
lock
mov
cmp
pop
imul
xor
into
cmp
dec
push
mov
sub
out
outsl
fdivrl
add
xchg
sbbl
pop
clc
aaa
sbb
in
push
sbb
xorb
xchg
xor
push
pop
dec
sbb
cld
cmpsl
mov
inc
es
lock
add
and
push
mov
and
dec
xchg
sahf
xor
iret
pushf
rorl
cwtl
in
push
adc
loopne
shlb
xchg
cwtl
andb
mov
mov
leave
jae
and
sbbl
add
repz
lea
inc
mov
jbe
fs
nop
xor
inc
in
mov
fisubrs
data16
mov
lret
pop
push
jmp
sub
aas
flds
push
cltd
push
shrb
out
pop
sub
movsb
mov
imull
fcompl
std
mov
lock
xlat
inc
fcmovne
push
lret
push
sub
js
mov
jno
adc
dec
push
mov
sub
int3
xchg
in
scas
push
pop
jmp
add
daa
out
sbb
dec
nop
mov
jb
insb
scas
xchg
push
fs
add
ret
leave
ljmp
inc
cs
xchg
sub
insl
fwait
push
xor
clc
aaa
out
mov
xchg
fstpl
dec
push
mov
arpl
loopne
aas
les
pop
imul
int3
lret
add
sub
and
sbb
ljmp
mov
cmp
mov
enter
sbb
inc
or
add
jmp
xor
jmp
xchg
xchg
dec
mov
cltd
pop
sbb
jg
cmp
jmp
push
pop
or
fcoml
es
mov
ret
mov
mov
mov
arpl
mov
cmp
imul
sbb
push
outsl
scas
cmp
rorl
addr16
mov
lods
frstor
and
fucomip
cmc
jmp
push
nop
and
outsl
push
cs
sbb
jns
int
mov
loopne
mov
repz
mov
pop
sub
in
lds
iret
push
fistpl
adc
and
jle
add
pop
loopne
sbb
pop
inc
out
jl
out
out
or
cli
lods
push
movsl
xchg
cmp
and
fadd
and
jmp
pushl
mov
or
gs
test
xor
leave
inc
pop
lret
js
inc
stos
loop
mov
add
inc
fsubrs
ds
mov
add
inc
mov
xchg
test
fsubrl
sub
bnd
sbb
cmpsl
iret
jne
imul
dec
aam
mov
inc
lods
aas
fidivrs
jge
jns
jecxz
lret
nop
mov
sub
xor
sbb
shll
mov
sub
out
sub
mov
out
mov
jns
or
sub
stos
inc
and
in
sbbb
mov
mov
xor
out
mov
xchg
fmuls
or
and
sbb
fdivl
adc
jbe
jg
jmp
jle
test
scas
jmp
lock
out
adc
insl
inc
arpl
idiv
test
mov
sbb
jl
inc
jmp
xchg
inc
push
nop
repnz
out
stos
in
mov
sub
jo
mov
mov
mov
mov
ss
cmp
cmpb
mov
jp
inc
sbb
cmpsb
xor
fcoms
loope
sub
repz
test
dec
pop
cld
jnp
and
or
enter
clc
xor
adc
mov
push
lea
and
mov
push
popf
or
outsl
loope
rcrl
pop
cli
jo
push
and
hlt
lea
lea
jecxz
xchg
addr16
push
daa
int3
lret
xchg
mov
cmpsl
cmp
push
les
test
cmp
jb
jnp
and
cmp
fadds
and
shl
mov
and
mov
fs
js
dec
lcall
push
sbb
outsl
jnp
fsubl
adc
add
push
xor
xor
mov
mov
pop
jle
mov
pop
in
cmp
cmpsb
lock
mov
lea
shll
sub
sub
inc
movsl
pop
out
loope
in
mov
ret
sbbl
ds
jae
fidivs
inc
nop
and
andl
ljmp
jno
mov
adc
stc
xchg
push
sbb
leave
ss
icebp
push
push
stos
jnp
rcrl
movsl
xor
pop
xchg
imul
out
out
mov
xchg
fwait
xor
aaa
mov
popf
aas
pop
xlat
orb
or
mov
inc
sbb
xchg
and
mov
adc
xchg
push
or
icebp
and
xchg
adc
mov
loop
adc
add
js
sbbl
stos
sti
pusha
and
int
in
shl
jnp
nop
sbb
inc
rdtsc
mov
pop
adc
call
or
into
stos
sub
testb
and
bound
dec
popa
mov
or
aad
aam
mov
pop
test
push
nop
stos
repz
fistpl
cs
cmp
jbe
sbb
scas
jbe
test
mov
pop
int
mov
test
pop
lock
mov
or
scas
lret
insl
mov
mov
xchg
insb
sub
add
adc
xchg
mov
ret
ss
lock
adc
aam
xor
test
mov
jle
iret
inc
arpl
jb
push
sti
mov
mov
mov
cmp
testl
stos
mov
scas
sub
mov
loopne
aam
cmp
mov
pop
scas
out
xor
lahf
popa
sub
dec
popf
jno
cld
xor
inc
push
and
fsts
fidivs
sbb
xor
lods
ljmp
adc
movsb
lea
sub
or
push
iret
mov
lods
inc
jle
dec
cmp
cmp
mov
fwait
mov
in
cmp
fisubl
xlat
mov
inc
fisubs
in
xchg
xchg
lcall
or
cli
inc
hlt
vmwrite
mov
icebp
jecxz
out
sahf
xor
cmp
and
mov
xor
adc
pop
shll
inc
jno
sbb
pop
repnz
jns
push
mov
and
pop
mov
adc
test
repz
add
xchg
aas
sbb
inc
test
fsubl
sbb
add
adc
clc
inc
jno
push
push
jmp
sub
icebp
sbbl
dec
xlat
lea
sub
adc
mov
dec
adc
imul
pop
dec
fiaddl
mov
jnp
daa
insl
push
andl
loope
test
sbb
shll
scas
std
stos
xchg
mov
and
aaa
call
iret
inc
jae
xchg
adc
adc
aas
daa
mov
js
inc
sbb
pop
cmpsb
lock
mov
dec
jecxz
notl
fstl
mov
out
test
inc
scas
clc
inc
fs
aas
outsb
icebp
sbb
shrb
jl
xchg
insb
out
jg
into
popf
stc
bound
xlat
sbb
add
cwtl
roll
push
sbb
pop
adc
adc
adcb
mov
mov
mov
sbb
jp
mov
xchg
stos
add
pop
jge
icebp
sbb
pop
lods
sti
lret
shr
sarb
inc
in
cli
adc
sub
fildl
xchg
inc
loop
cli
out
fsubl
rcll
push
shll
or
pop
lea
xchg
add
dec
pop
push
xchg
std
push
mov
not
outsb
sub
or
out
cmp
fdivl
add
mov
mov
cltd
fimull
xchg
mov
and
bnd
outsb
enter
mov
imul
inc
cmpsb
test
dec
add
inc
loopne
mov
add
movsl
lahf
inc
faddp
or
mov
push
adc
lds
es
mov
shll
andl
int
inc
addl
leave
aam
xchg
push
inc
mov
imul
push
mov
jae
add
adc
popa
jl
std
mov
int
pop
cmovno
adc
jb
adc
fsubrl
lds
add
outsl
shr
cwtl
movd
or
or
pop
and
sub
sub
dec
add
xchg
adc
mov
clc
je
les
mov
jg
dec
mov
mov
pop
cwtl
in
clc
lds
push
push
ret
add
and
lret
push
cld
sti
lret
test
lods
lods
push
jns
ret
stos
jb
sarb
jbe
mov
sbb
cmp
mov
ja
jnp
dec
popf
stc
out
push
jns
adc
cmp
test
pop
pop
je
and
xchg
or
and
cli
adc
adc
repnz
aaa
lret
push
xchg
shrl
cmp
lock
sub
icebp
dec
mov
xchg
sub
daa
dec
rorl
sti
mov
sub
jbe
adc
mov
lahf
adc
sub
jae
push
testl
stos
roll
or
jo
fmull
or
xor
xchg
arpl
inc
inc
call
shlb
jmp
sbb
ss
sub
cmp
push
xchg
cs
sarl
mov
mov
mov
fst
out
and
xchg
push
stc
movsb
mov
xor
cld
repz
and
or
sbb
mov
dec
sub
mov
repz
cltd
call
stc
or
lods
leave
int
insb
push
mov
ret
lret
add
mov
movsl
inc
inc
ss
push
pop
repnz
jecxz
in
out
call
sub
adc
xor
xor
jb
out
push
push
cld
push
andb
push
fisubrl
test
sub
mov
mov
xchg
in
pushf
lret
inc
inc
mov
divb
fnstcw
stos
fcoml
add
divl
adc
out
jge
shll
ret
dec
imul
lret
cltd
xchg
add
call
divl
out
shlb
psubusb
dec
inc
stc
or
fwait
ljmp
mov
jecxz
pop
fnsave
mov
dec
push
mov
cmpsl
adc
jl
cli
mov
cmp
push
ret
filds
mov
push
inc
loopne
inc
cmp
notb
mov
lds
icebp
add
push
push
cs
pushf
sub
movsl
pushf
out
ficompl
sub
pop
std
inc
xchg
sti
push
pop
pop
or
jp
aaa
fldcw
iret
adc
shl
mov
pop
xor
dec
sbb
xor
jmp
cmc
cmp
call
out
add
jnp
lret
mov
int3
cmc
jge
out
enter
test
iret
cmp
jp
lock
sub
int
mov
repnz
sbb
imul
mov
sti
mov
and
lea
lcall
and
pop
mov
test
or
stos
aas
and
dec
xlat
icebp
mov
xchg
sbb
inc
and
hlt
mov
xchg
pop
lds
std
pop
cmp
in
cs
fisubrl
out
aam
idivb
shll
movsb
cmp
repz
xor
cltd
out
in
test
or
push
stos
sub
sbb
in
jp
add
xchg
xchg
push
cmp
xchg
mov
add
cli
mov
cmpl
loope
sbbl
adc
mov
out
dec
mov
mov
pop
dec
cmp
clts
xchg
lods
inc
in
std
rcrl
mov
sbb
mov
push
jle
or
ds
jl
xorb
cmp
sub
push
and
push
js
gs
repz
mov
jg
dec
fsts
sbb
push
or
insb
test
pop
pmulhuw
sahf
push
aas
out
push
jg
movsl
hlt
testb
daa
sbb
cld
in
daa
mov
or
scas
gs
les
test
mov
mov
lret
cld
test
lahf
ret
push
aaa
stos
imulb
in
mov
dec
out
jle
dec
in
popf
add
lock
jmp
adc
or
mov
lahf
mov
mov
insl
or
test
lret
imul
sub
pop
sub
mov
testb
popf
aad
xchg
xchg
pop
mov
mov
push
jecxz
mov
jno
rcrl
lret
push
jl
shlb
pop
push
loope
lahf
fnstenv
ds
lahf
call
std
inc
jmp
mov
add
int3
sti
push
cmp
inc
stc
and
lds
aam
xchg
sbbl
movsl
mov
clc
lret
push
ret
hlt
ja
and
add
test
jmp
inc
ret
andl
push
mov
fstp
jae
inc
xchg
stos
test
ja
es
mov
mov
inc
adc
ficomps
push
dec
jmp
sub
out
and
ds
push
mov
sbb
or
xor
sbb
insl
push
jmp
mov
push
ss
or
movsl
xchg
mov
jp
ror
ret
fbld
or
jl
xchg
dec
aaa
mov
mov
xchg
icebp
mov
and
fsubl
xchg
data16
stos
movlhps
mov
test
xor
leave
test
jg
xchg
dec
mov
je
mov
comiss
cmp
test
cmp
cmc
or
and
in
fs
sti
jbe
mov
jmp
push
scas
call
mov
pop
xor
bnd
dec
dec
test
enter
shrl
adc
shl
xchg
xor
or
cmp
testl
mov
or
fmull
mov
std
out
test
in
das
ja
or
cmp
movzbl
mov
clc
xchg
jge
sti
fdivl
add
push
adc
cmp
cld
mov
movsl
aas
push
mov
test
aam
jb
fisubl
test
pop
mov
ret
push
stos
insl
pop
cmp
nop
lahf
add
mov
in
pop
mov
frstor
fsubrs
or
or
pop
das
sub
or
dec
cmp
push
sbb
cmp
dec
push
push
dec
imul
mov
jle
fiaddl
das
cmp
int
icebp
xor
cmp
mov
repnz
int3
jg
and
cwtl
les
inc
or
das
push
in
test
sub
sahf
testb
fsubr
lret
hlt
sbb
and
mov
push
xchg
in
xchg
push
mov
bound
js
inc
lds
add
push
xor
xchg
inc
pop
jle
mov
mov
or
mov
test
sbb
jbe
sbb
in
pusha
pop
jb
cmp
mov
aam
xor
and
aam
and
add
cmp
pop
and
inc
out
hlt
xor
mov
push
push
sahf
xchg
push
cmp
cmp
repnz
jp
sti
mov
cltd
adc
testb
cmp
push
insb
pop
ds
xor
in
test
aaa
jbe
pop
or
mov
scas
sbb
stos
in
mov
pop
mov
dec
es
mov
pop
lcall
mov
in
push
cmp
insl
test
pop
mov
mov
mov
data16
out
pop
jmp
jmp
mov
xchg
inc
out
mov
push
jmp
mov
jae
inc
mov
xor
test
cld
in
jbe
adc
mov
xchg
push
xlat
xor
or
dec
imull
out
ss
loop
jg
xchg
pop
mov
inc
mov
lock
sbb
ds
shl
ljmp
hlt
xchg
cmpsl
add
adc
int3
or
inc
jnp
jo
lds
mov
loopne
scas
pop
mov
inc
imul
dec
add
adc
ss
arpl
mov
mov
out
in
sub
fildll
int
lods
pop
dec
pop
xorl
sub
push
call
cld
loope
xor
fldenv
icebp
adc
les
aaa
out
xor
mov
mov
sub
out
movsl
inc
lods
xchg
sar
inc
mov
lods
xorb
and
xchg
inc
ja
ret
call
cmp
push
xchg
in
push
dec
movsb
push
std
cwtl
cmpsb
fnsave
mov
fistl
test
or
aad
jp
cmp
dec
ret
add
jg
jecxz
das
or
in
aam
in
dec
xor
mov
ja
jae
mov
mov
sbb
mov
jg
rcrl
rolb
icebp
cli
test
aam
sub
fcomps
lods
cmpsb
inc
push
dec
fld
in
jo
mov
mov
sbb
dec
jns
daa
push
inc
fwait
and
hlt
dec
push
mov
jns
push
pusha
lret
ja
xchg
ja
cmp
jecxz
loope
sbbl
scas
in
cmp
rcl
sub
iret
dec
inc
jge
outsb
in
push
rcrb
xchg
dec
mul
xchg
and
adc
arpl
cltd
push
lret
dec
mov
test
ret
loop
or
mov
cld
jg
out
out
mov
popa
clc
out
jae
je
cmpl
outsl
stos
es
cmp
je
rcrl
mov
ds
push
aad
in
and
or
dec
push
hlt
pop
lods
mov
cmp
stc
divl
hlt
mov
xor
mov
fdivrl
arpl
jno
stos
add
xchg
subb
pop
shl
pop
sbb
daa
into
repz
cmp
cmp
and
bound
adc
shr
sub
xor
mov
repnz
data16
mov
jo
xlat
cltd
mov
xor
sub
pop
aad
push
jge
inc
pop
fsubl
inc
xchg
int
jae
xor
daa
inc
xchg
cmp
xlat
ljmp
dec
fistl
cmp
out
gs
ret
lret
imul
sub
sbb
jb,pt
cmp
pusha
mov
fisttps
icebp
lock
pop
js
jae
shld
lock
pusha
fldt
jno
test
xchg
lcall
jp
push
lock
jmp
sub
in
xchg
sbb
movsb
mov
pop
sub
pushf
mov
je
nop
fs
dec
add
lret
mov
pusha
ds
iret
movb
daa
adc
inc
aam
jbe
gs
xor
sbb
xchg
sub
out
div
mov
cmp
push
inc
adc
inc
xchg
xchg
push
cmpsl
repz
popf
fsubl
lahf
ds
lret
add
jbe
jno
pop
cmp
sub
cmp
fcmovnu
je
aas
fcomps
mov
cmc
or
jg
or
dec
adc
cli
mov
xchg
xchg
dec
xchg
mov
adc
sbb
aas
imul
cs
repz
jns
xchg
out
inc
sbb
inc
fdivrs
shr
pop
out
das
push
in
adcl
or
in
into
push
orb
or
sti
jge
add
xchg
lcall
mov
mov
add
mov
add
cmpsb
clc
dec
jle
jbe
loop
daa
sub
stos
rclb
mov
or
and
mov
loope
xor
dec
jge
out
loopne
cs
icebp
imul
and
jmp
and
mov
xchg
jmp
lods
push
je
inc
adc
hlt
loope
cmpsb
adc
add
jne
cpuid
mov
add
add
fdivrl
xor
daa
repz
mov
pop
add
mov
pop
outsl
mov
aaa
pop
dec
mov
mov
mov
push
sbb
adc
imul
pop
jecxz
out
ss
pop
xchg
in
int3
lret
xchg
insb
cmp
ljmp
jg
movsl
shl
dec
add
xor
ljmp
jno
mov
cmp
repz
xchg
cwtl
cmp
mov
ret
pop
xor
push
jae
fsts
stos
std
imul
movl
aaa
into
scas
jno
xchg
mov
int3
pop
mov
lahf
stos
das
xchg
inc
cmp
stos
cmpsb
push
jbe
jbe
mov
pop
lods
mov
imul
inc
div
faddl
cmpsb
imul
inc
addr16
add
mov
sub
inc
fsubr
dec
scas
mov
sahf
xor
shrl
pop
and
adc
jle
je
les
mov
rcll
add
cmp
jno
and
jecxz
sub
in
mov
dec
orb
outsl
leave
pop
push
jge
and
inc
fbstp
rorl
xchg
loopne
sbb
push
push
cmpsb
outsb
jmp
mov
mov
or
aaa
ss
xchg
daa
push
std
pop
jns
push
xchg
lock
incb
fldl
andl
push
icebp
adc
xchg
es
sete
mov
cmp
fcomps
dec
jg
mov
loopne
jmp
mov
lds
mov
stc
test
negl
ljmp
xchg
lea
cld
insb
inc
xor
pop
xchg
xor
mov
aaa
inc
jecxz
dec
push
jg
mov
xchg
cmpsl
loop
and
rcrl
and
jno
pop
add
aam
dec
dec
outsl
push
imul
pop
lcall
pop
adc
mov
cmpsb
cmp
pop
movsb
loop
xchg
arpl
ds
cli
or
loop
dec
cmp
dec
loope
loope
mov
outsb
sbb
inc
inc
inc
push
in
frstor
mov
fnstcw
adc
insb
cli
loop
sub
fisubs
cmc
rcl
sahf
jne
es
daa
data16
jg
mov
sbbl
aas
pop
pop
mov
mov
cmp
mov
aas
sti
jmp
sub
movsl
ret
cltd
sub
cmp
push
movsl
minps
mov
jg
pop
movsb
jge
sbb
dec
repz
iret
lretw
popf
mov
je
jle
pop
cmp
int3
shl
fsubrs
mov
cli
js
sub
rcll
mov
and
outsb
xor
arpl
push
imul
bndstx
out
imul
repnz
adc
or
xlat
dec
sbb
mov
and
inc
fdivrl
and
push
or
sbb
negb
add
or
ljmp
daa
push
insl
fldcw
and
repnz
in
mov
sbbb
shll
add
mov
pop
inc
movsl
pop
mov
fnstenv
lods
pop
dec
cwtl
mov
ja
push
cs
addr16
sub
fs
adc
les
xchg
stc
cwtl
jo
xor
insb
cwtl
adc
mov
push
cmp
xchg
imul
cmp
mov
out
mov
xchg
push
dec
cmpsl
fidivrl
sub
sahf
aad
nop
mov
aad
icebp
pminub
dec
push
jbe
fsub
scas
inc
pop
pop
sub
std
push
std
cs
jmp
int
adc
mov
push
pop
ret
pushf
push
movsl
in
sub
adc
inc
ja
inc
stos
jmp
icebp
sbbl
or
mov
dec
mov
jnp
int3
das
fwait
cld
rcr
dec
inc
xlat
jns
shrl
adc
cmp
fadd
loope
push
aad
fisttps
subb
or
pop
movsl
cmp
daa
mov
and
lea
sbb
lret
adcl
push
mov
das
aad
aam
mov
xlat
xlat
xchg
and
into
dec
or
or
sbb
xchg
fsub
scas
andb
insl
sub
aam
add
adc
les
adc
fldcw
shl
enter
int
dec
iret
inc
pop
cmc
xor
adc
push
jl
xor
jmp
mov
push
cmp
xchg
ss
sub
mov
mov
adc
adc
repz
and
daa
scas
cs
mov
shlb
jb
gs
adc
imul
cltd
imul
dec
sti
fwait
mov
push
mov
stos
idivb
sbbb
push
int
lret
out
jmp
stc
dec
and
rcll
scas
dec
sub
sbb
mov
outsl
cmpsb
mov
and
cld
sbb
cmp
push
xchg
mov
loope
mov
push
xchg
sbbb
iret
insb
push
dec
and
mov
repz
inc
jmp
adc
xchg
pop
mov
aad
imul
in
add
jle
mov
and
mov
push
sub
icebp
adc
dec
mov
mov
insl
jg
sahf
fnstsw
mov
js
pop
stos
push
sbb
mov
mov
pushf
lea
ret
cmpb
leave
bound
pop
es
aaa
mov
jg
fisubrs
out
sbb
fisttpll
or
cmpsl
push
and
jmp
cmp
jmp
mov
sbb
movsl
jl
shl
inc
sar
pop
xlat
inc
push
je
clc
iret
in
xchg
iret
dec
pop
mov
push
cmpsl
pop
lcall
xor
or
adc
mov
push
mov
lret
lret
clc
cld
push
sbb
mov
arpl
or
mov
lods
ds
icebp
dec
fsubl
insb
stc
push
mov
popf
repz
loopne
push
popf
dec
insl
shrb
pop
mov
aas
dec
shlb
mov
movsl
in
out
or
nop
outsb
insb
shr
arpl
mov
lret
sbb
dec
pop
lods
xchg
aas
cmp
outsb
jbe
stos
out
fstl
and
div
mov
aam
sbb
inc
adc
sbbl
mov
and
sbb
sub
loope
aas
leave
jmp
dec
fstps
xchg
movsl
jno
arpl
dec
test
arpl
into
and
sbb
cmpsl
jp
les
in
in
out
loop
fucomp
inc
jmp
sahf
insl
xor
cmp
into
popa
push
inc
dec
fs
jne
andl
out
test
js
sahf
jmp
lret
inc
xor
add
in
ljmp
jno
jle
sbb
loop
mov
jne
mov
jge
iret
dec
jl
adc
outsb
push
mov
je
cmpsl
lods
inc
frndint
xlat
insb
stos
lret
out
dec
sub
lods
mov
push
push
or
and
sub
aam
sbb
insb
paddusb
cmp
xor
in
in
dec
push
pop
jecxz
int
mov
sahf
imul
pushf
mov
pop
repz
mov
pop
js
cmp
cmp
call
xchg
es
cltd
std
gs
popf
js
sbb
iret
push
jecxz
xor
int3
and
jle
mov
minps
add
leave
pusha
arpl
add
mov
out
out
rorb
adc
push
cmpsl
sub
mov
scas
adc
hlt
mov
out
fwait
jecxz
sahf
in
sub
mov
or
pop
inc
faddl
mov
jle
std
aad
notl
ret
leave
fucomp
idiv
mov
insl
aas
stos
xchg
in
jnp
push
ret
pop
shr
ret
out
out
sbb
lcall
inc
pop
jl
scas
inc
jns
xchg
int3
xor
mov
inc
pushf
std
push
push
inc
lock
arpl
xor
sarl
mov
enter
pop
mov
jecxz
daa
inc
push
adc
ss
or
movsb
movsl
sub
aam
neg
jne
sbb
loopne
sbb
cltd
jle
xor
cmp
test
xlat
lods
imul
xor
xchg
popf
ljmp
js
push
rorl
add
fldcw
clc
movsl
mov
out
xor
testb
cmp
or
fs
cmpsl
out
lods
jmp
sti
pop
and
addb
pop
dec
iret
into
sub
sbb
popaw
xor
stos
shrb
leave
lcall
jecxz
xor
inc
icebp
pop
inc
idiv
pop
shll
pusha
data16
sub
out
cld
pop
popa
jge
lock
sahf
xor
mov
xchg
push
xchg
icebp
push
imul
mov
dec
adc
stc
sub
shlb
mov
pop
or
dec
add
sub
orb
push
imul
mov
imul
mov
jmp
mov
nop
into
or
jecxz
das
sub
push
incl
cmpsb
das
add
xor
xchg
pop
pop
pop
or
addb
mov
ret
mov
lds
cmp
xlat
fidivrs
adc
shrb
pop
pop
popf
pop
pop
iret
push
mov
fs
jo
test
clc
inc
lock
mov
jecxz
inc
lcall
cwtl
andl
xor
sbb
mov
mov
insb
sub
add
aaa
stos
cmp
cmp
int3
mov
out
sbb
popa
dec
jle
inc
daa
pop
pop
xor
out
push
or
xchg
mov
dec
fldcw
sub
repnz
ret
xchg
sar
imul
jecxz
ja
sub
push
jbe
mov
or
lods
add
mov
inc
inc
outsl
decb
int
adc
sub
push
mov
xchg
pop
orb
movsl
ljmp
mov
test
daa
jne
xchg
xor
or
push
mov
pushf
scas
mulb
imul
add
or
mov
test
pop
adc
pop
rcl
testl
push
mov
push
call
jge
jmp
mov
fwait
xor
fmul
test
repnz
adc
jo
jb
jb
outsb
sub
andb
call
mov
in
mov
cmpsl
xlat
outsb
lahf
adc
fwait
sub
cmc
or
repnz
out
push
and
mov
es
test
and
sbb
shrl
mov
mov
sbb
in
pop
xor
adcl
outsl
xchg
dec
dec
std
dec
loope
xchg
fbstp
push
jne
ss
stos
test
jmp
mov
xchg
and
adc
gs
popf
xor
scas
out
pop
and
leave
mov
insl
lea
dec
pop
lods
cmp
lret
filds
mov
dec
fwait
mov
xchg
mov
mov
add
xor
test
ljmp
sbb
out
gs
js
jo
jg
xchg
dec
les
xchg
cmc
das
mov
xchg
pop
inc
cld
dec
cmp
jae
fsub
call
andb
and
adc
idivb
or
cli
fisubrl
fsubr
scas
cmp
arpl
mov
sbb
mov
pop
lret
xor
push
sub
and
xor
data16
aam
or
jg
fisubl
jnp
cltd
stos
jae
clc
add
mov
jge
stc
in
das
cmp
lock
push
mov
movsb
cmp
testb
cmp
ret
xlat
insb
insl
pop
rcrl
mov
xchg
inc
pop
aas
testl
xchg
les
addr16
out
jnp
dec
ljmp
cli
sub
cs
mov
imul
daa
mov
aas
aad
push
or
inc
cmp
dec
xchg
sub
adc
js
shll
out
test
push
xor
lahf
in
ja
jae
cmp
pop
stc
stos
xchg
fcompl
sbb
xor
test
dec
dec
cld
lds
pop
add
ss
out
push
push
jge
wrmsr
adc
in
in
xchg
push
lock
test
inc
inc
dec
mov
sbb
sbb
ljmp
pop
mov
out
lret
arpl
jp
insl
sbb
cmp
leave
pop
fisttpll
fbld
sub
ss
xor
sub
pop
clc
sub
aam
jle
cmp
dec
into
arpl
jmp
fcomps
xor
aad
orl
push
filds
cltd
in
lea
xor
pop
xchg
dec
push
inc
mov
iret
fmulp
out
test
fsubrl
das
mov
or
add
cmp
outsl
mov
daa
sbbl
loope
jl
mov
sti
mov
mov
out
scas
cs
mov
and
push
pop
xor
add
daa
mov
lods
mov
mov
jo
pop
push
or
movsl
sbbl
shll
dec
aam
cmpsb
mov
scas
outsl
pop
movsl
xchg
fs
xchg
jb
mov
dec
sbb
dec
outsb
or
in
inc
ds
xlat
fldt
hlt
movsl
sbb
mov
or
aas
xchg
dec
lods
dec
add
hlt
ret
jecxz
cmc
adc
xor
fwait
aaa
in
cmc
and
std
pop
dec
mov
push
add
icebp
xchg
push
popa
movsl
add
push
mov
sbb
inc
mov
xor
les
jecxz
xchg
pop
ftst
ret
add
and
call
ss
inc
out
aam
and
inc
aaa
lret
lods
in
bound
call
mov
inc
shrb
fcoml
movsb
jg
rolb
pop
adc
push
or
xchg
or
movsl
xchg
add
scas
push
outsl
leave
push
jp
movb
and
mov
mov
sub
sub
dec
inc
or
pop
das
pop
dec
cmc
xchg
dec
mov
fmul
push
sub
arpl
push
inc
daa
mov
gs
and
aaa
lret
sub
aam
add
cmp
mov
lds
mov
push
movsl
inc
test
scas
inc
lret
lods
call
or
cmp
fwait
xor
daa
or
cmp
sub
in
add
pop
movsb
pop
inc
inc
push
into
cmc
jnp
adc
leave
test
arpl
popl
cmp
js
inc
sub
dec
or
aas
fldcw
loop
imul
jne
in
loop,pt
cmp
shrl
fnstenvs
ret
inc
je
xor
push
into
or
outsb
outsb
into
push
sahf
mov
push
xor
lret
iret
mov
popa
test
add
or
push
xor
es
dec
je
xor
rcr
jb
pop
push
daa
push
or
notb
lahf
movsl
sbb
insb
cltd
push
in
loopne
xchg
sub
inc
cwtl
mov
out
mov
jae
push
fucomip
lods
mov
fmulp
push
out
repz
jae
movsb
pop
pop
sbb
and
fists
pop
lds
loop
jno
lods
subl
sub
xchg
mov
es
js
rolb
fucomp
fnstsw
mov
pop
sbb
insl
sbb
sbb
insb
sarb
pop
aas
mov
adc
lcall
jne
adc
inc
lcall
adcl
imul
aas
aad
mov
lret
iret
sbbl
sub
and
xchg
push
call
sub
repnz
adcl
aas
pop
adc
loop
inc
push
mov
dec
inc
or
cmp
das
jne
add
testb
cwtl
xchg
imul
in
push
mov
shll
pop
lcall
fildll
push
pusha
addr16
in
inc
sbb
inc
test
jnp
push
movsb
cmp
mov
leave
fxch
push
adc
lock
xchg
jo
mov
or
mov
jp
jle
test
in
mov
pop
jae
jle
fsubs
rclb
mov
mov
jg
leave
ret
and
rorb
adc
daa
mov
jmp
xchg
mov
je
jns
mov
insb
lods
hlt
inc
stc
stos
scas
inc
push
and
push
adc
pop
cmp
xchg
mov
sbb
cli
lods
aam
test
mov
in
lcall
aad
mov
iret
jl
cmc
inc
dec
aad
out
aaa
cmpsb
inc
daa
mov
fsubrs
sbb
inc
aad
cmp
sbb
jp
sbb
sub
gs
xor
ret
call
fistpl
inc
pop
or
ret
sbb
jnp
stos
xchg
ror
in
and
sbb
sbb
lea
push
out
or
scas
hlt
mov
push
dec
mov
rolb
cmc
jg
add
adc
insb
xor
es
stc
xor
cwtl
imul
scas
sub
ja
jl
clc
and
pop
ret
cmp
pop
lds
pushf
adc
push
outsb
inc
cmp
mov
out
mov
inc
sbb
sub
xor
jg
fistps
faddl
enter
std
or
pop
lcall
pop
mov
lock
lahf
add
mov
jbe
sbb
add
push
mov
dec
mov
cmpsb
ret
inc
inc
xchg
dec
adc
and
fildll
inc
jnp
in
out
add
icebp
mov
and
popf
pop
into
adc
pop
leave
out
out
popf
fnsave
dec
mov
test
shrl
or
pop
repz
mov
mov
xadd
push
sbb
sub
fsubs
mov
jl
pushf
out
push
mov
sbb
imul
adc
mov
xor
insl
and
dec
addr16
rcrl
mov
les
or
mov
sub
in
xchg
mov
xchg
pop
jecxz
hlt
js
pop
sub
cmp
imul
rol
pop
lea
ss
jno
roll
arpl
sbb
push
mov
lock
dec
xchg
jnp
idivb
pop
pop
push
mov
ljmp
subb
and
dec
push
stc
test
popf
cli
daa
or
mov
cmp
jno
jmp
xor
xchg
js
and
fs
mov
sbb
icebp
mov
sub
sub
and
mov
stc
mov
cmp
pop
xlat
lock
aad
dec
loope
ja
aas
aaa
cld
popa
cmp
sbb
test
mov
das
mov
decl
and
arpl
cld
decb
and
testb
or
xor
imul
dec
xchg
xchg
pushw
ret
orl
in
sub
xor
add
test
and
push
inc
daa
xor
cmpsl
fdivs
pop
nop
daa
lahf
rorb
sub
outsl
ror
insb
jno
push
adc
push
cmp
or
imul
or
mov
mov
jle
mov
out
jo
call
adc
mov
xlat
push
dec
fucomip
dec
and
xchg
push
inc
cltd
das
pop
jb
fcomps
stc
push
inc
cmp
mov
mov
call
cmp
iret
mov
cmp
daa
push
call
add
mov
sub
bound
movl
imul
cmp
jge
out
pushf
cld
mov
ss
dec
jne
leave
pop
rcrl
pop
pop
add
pop
hlt
mov
repnz
ss
and
add
das
aad
imul
int3
sbb
fs
push
popf
xor
sbb
les
lcall
adcb
into
pop
orl
bnd
outsb
fsubrs
xchg
mov
mov
jo
mov
xlat
je
sarb
mov
mov
into
scas
out
jbe
xor
xchg
stos
hlt
popa
pop
push
and
jl
dec
add
dec
adc
inc
pop
add
xchg
and
lahf
mov
mov
jnp
aas
dec
push
out
ret
cmp
or
lcall
push
loope
xchg
xchg
mov
cwtl
out
and
mov
shll
fwait
cmpsl
nop
mov
jl
iret
cmp
ja
add
flds
pop
icebp
xchg
add
stc
mov
notb
arpl
aam
or
scas
cmp
inc
incb
gs
mov
iret
rol
jge
mov
mov
jne
aas
xchg
ja
sub
incl
dec
jl
mov
in
inc
mov
jle
jbe
arpl
xor
push
or
daa
mov
and
inc
clc
jecxz
mov
arpl
iret
loopne
xchg
and
add
inc
xlat
push
mov
cmp
testb
cmpsl
cli
adc
xchg
add
lret
xor
fadd
and
lds
fistl
push
jl
test
mov
and
sarl
jecxz
aaa
sub
dec
aas
ljmp
cmpsb
push
xor
jle
daa
jge
cltd
xor
sbb
jnp
ss
les
xor
or
sbb
aaa
pusha
cmpb
mov
mov
orl
pop
mov
fmull
fstps
fwait
stos
in
xchg
leave
aam
bound
lcall
filds
lods
lret
or
cmp
mov
push
push
jecxz
ds
add
fwait
pop
xor
cmp
test
sahf
jns
popf
sub
iret
test
ja
sti
jne
xlat
ret
mov
add
stos
ret
shrl
shrl
dec
gs
movsl
scas
and
fldenv
fcomip
pop
int3
jae
iret
dec
sbb
or
daa
dec
movsl
js
xchg
lock
push
inc
loope
shlb
or
sahf
or
add
imul
lods
sub
sub
inc
push
xor
push
test
push
pop
loop
call
add
cmp
test
push
mov
stos
mov
lods
lods
hlt
fistps
push
mov
lret
mov
dec
push
leave
dec
bound
cltd
jae
arpl
sbbl
sub
adcl
cmp
pop
push
out
adc
push
mov
cmp
xchg
mov
push
or
inc
mov
sub
mov
pop
dec
loopne
dec
in
xor
adc
sbb
bound
lcall
cwtl
mov
cmp
ret
add
scas
and
call
inc
in
pusha
jle
cmp
mov
scas
add
sbb
dec
add
cmp
int
pushf
imul
dec
in
out
push
sub
dec
sbb
jl
mov
mov
roll
aas
lret
cmp
mov
jmp
sbb
add
jo
mov
aad
mov
aas
lods
mov
adc
mov
jge
lods
les
and
ret
lahf
adc
pop
jnp
test
imul
divl
lods
out
popf
mov
push
jns
lods
xchg
fsubr
bound
call
pop
mov
add
adc
lahf
add
sub
dec
pop
push
push
sbb
add
add
adc
push
addr16
pop
xchg
outsl
pop
cmp
aas
mov
and
cli
or
add
lds
mov
and
inc
sbb
ss
mov
jecxz
jo
adc
dec
jo
push
test
cld
loopne
adc
mov
or
call
adc
sahf
jecxz
cmp
xchg
or
sti
mov
pop
in
cwtl
dec
xorb
adc
sbb
sub
into
pop
mov
add
xor
popf
mov
and
jns
cmpsb
mov
jns
sbb
cltd
jmp
cltd
stos
push
cmp
int3
fwait
movsb
push
mov
stc
scas
push
jmp
adc
repz
ja
icebp
xchg
lds
adc
xchg
sbb
fidivs
insb
shl
frstor
aaa
into
pop
and
add
in
xchg
dec
nop
sbb
stc
and
cmp
cmp
loopne
cmp
mov
in
sahf
ficoms
icebp
enter
xor
inc
fwait
aas
enter
pop
rcl
lcall
cwtl
mov
lcall
addb
jns
out
stos
pop
push
sub
pop
addr16
pop
sbb
add
ds
std
push
jo
sti
aaa
insb
push
push
jmp
iret
test
mov
insl
movsb
mov
adcl
pop
xor
sbb
sbb
bound
mov
sbb
mov
pop
lods
lret
inc
flds
cmp
jnp
xchg
pop
cmp
pop
repnz
mov
mov
lret
lcall
pop
pop
fwait
xor
shrb
sarb
ret
cli
push
insl
and
adc
mov
call
jae
cmpsl
jae
push
inc
add
icebp
int3
movsb
pop
or
push
dec
pop
xchg
movsb
or
sbb
jae
sub
mov
mov
scas
mov
fisubl
push
xchg
xchg
add
scas
insb
sub
pop
push
loop
cmpsb
ret
sbbl
inc
loope
mov
mov
inc
mov
fwait
sbb
pushw
rorl
aad
les
adc
pop
mov
and
lret
mov
push
adc
imul
mov
sbbl
fcmovnbe
xor
or
xor
xchg
xor
add
aaa
repnz
jae
jb
add
fwait
gs
out
pop
xchg
lahf
int3
jne
push
aas
icebp
cmp
test
lods
dec
cmp
jl
mov
outsb
fnsave
lock
jno
cmp
sbb
iret
adc
mov
fildll
sub
cld
pop
jnp
mov
pop
push
mov
inc
sub
pop
addr16
test
pop
mov
adc
mov
push
rcll
out
lret
or
inc
jo
outsb
xchg
mov
adc
and
js
mov
rcrl
push
lahf
cwtl
fs
das
mov
mov
outsb
jbe
mov
repz
iret
mov
adc
xlat
repz
cmp
call
lret
push
pop
xchg
sbb
mov
sbb
movsb
cmp
lcall
or
sub
cltd
inc
sub
gs
pop
fstps
push
adc
or
aad
in
in
sarl
xor
les
push
mov
movsb
sbb
outsb
icebp
ds
notl
pop
mov
jp
dec
lock
scas
imul
lock
jns
mov
xchg
les
jmp
repz
call
mov
mov
daa
pop
cmpsl
xorb
mov
ret
pop
mov
jb
mov
ja
xor
or
aam
addl
lidtl
pop
mov
dec
aaa
fcmovb
add
ja
addr16
cmc
mov
dec
js
subb
jp
jecxz
mov
rclb
ja
fbld
inc
adc
icebp
mov
mov
pop
test
movsb
cmp
cld
int
leave
xor
call
cmp
shlb
pminub
sbb
and
xchg
xlat
jecxz
aad
jb
sub
aad
and
pop
fwait
pop
dec
daa
or
test
sbb
outsl
test
sahf
push
cmpsb
cmpsl
dec
lret
stc
cmp
test
ljmp
mov
fistl
mov
std
loop
inc
sub
mov
adc
mov
push
and
rcrb
in
sub
xchg
or
and
push
mov
outsl
push
add
in
mov
fdivs
fmull
mov
ljmp
out
dec
pop
into
push
hlt
mov
hlt
push
jg
and
add
cmpsb
lods
mov
flds
in
stc
cli
test
test
out
clc
xor
roll
stc
pop
into
inc
int
pop
out
fimuls
sub
pop
cld
mov
pop
testb
and
sub
pop
div
dec
imul
lock
pop
jmp
repnz
jnp
pop
cmp
aam
add
and
inc
and
mov
mov
cmp
in
aam
xor
adc
fdivrs
in
jg
pop
push
jmp
mov
loopne
pop
xlat
or
movsb
ret
jp
lret
jmp
inc
pop
shr
mov
scas
lret
lret
or
repnz
cmp
cmp
mov
dec
imul
cltd
stos
push
or
pop
negb
jle
pop
lahf
inc
gs
jl
xchg
scas
ficoml
daa
mov
orb
aas
shl
mov
outsl
mov
ja
jae
repnz
jp
popa
out
cli
xchg
sub
bt
add
xor
addr16
mov
out
cld
rorl
cwtl
mov
inc
xor
ficoms
paddusw
cmp
call
loopne
dec
lcall
loope
fcompl
dec
and
iret
fdivrl
cmp
pop
icebp
push
lods
jg
clc
cmp
sbb
daa
pop
cli
es
imul
adc
jmp
jl
popf
add
mov
je
mov
jb
dec
or
lcall
lods
adc
cmp
lock
popf
scas
inc
sub
adc
xchg
push
scas
in
hlt
lahf
push
lock
mov
sbb
jb
not
hlt
or
std
out
xchg
adc
data16
lret
mov
xor
and
int3
aam
gs
pop
dec
push
and
popf
adc
mov
out
shr
jnp
outsb
rcrb
and
aam
dec
mov
cli
push
aad
dec
dec
push
inc
loop
fucom
add
orl
pop
jl
adc
add
push
pop
outsl
dec
or
jg
ljmp
cs
out
addw
es
cmp
jecxz
arpl
mov
loop
mov
sub
pop
jmp
inc
sbb
out
inc
or
nop
ja
es
and
loop
pop
jbe
ficoml
push
int
sbb
and
in
stos
je
mov
push
fdivl
pushf
lea
sbb
adc
insl
cmpb
cmp
mov
dec
stc
into
clc
pop
mov
jg
lods
jo
sbb
imul
lds
and
scas
add
mov
cmc
jo
push
jo
lcall
jecxz
es
pop
xor
ljmp
push
xchg
mov
stos
ja
clc
mov
sub
fidivl
inc
pop
repnz
mov
sub
mov
add
pop
std
aas
adc
jno
lret
fldln2
dec
ljmp
add
std
push
popa
leave
add
lret
outsb
sti
stos
fcomps
push
jmp
adc
jmp
shl
mov
inc
nop
push
push
lock
sub
jle
cli
cmp
aaa
or
les
popf
loop
shl
psraw
push
cmpsb
cmp
addr16
add
or
mov
adcb
pop
movsb
jnp
mov
add
int3
mov
enter
fstps
dec
gs
fldcw
rcll
mov
dec
pop
hlt
pop
cmp
jmp
adc
push
xchg
pop
adc
js
xor
jbe
out
test
jae
push
mov
in
mov
add
cmp
fs
or
loope
or
xor
xchg
shr
testb
into
sahf
pushf
xor
add
divl
out
inc
push
dec
jmp
adc
ficoml
sbb
sub
xchg
jmp
add
out
in
sbb
add
mov
adc
lock
jle
outsl
ss
and
enter
cld
mov
fs
mov
out
dec
test
jl
and
push
lcall
in
mov
jecxz
repnz
incb
sbb
add
mov
fsubrp
aad
daa
pop
ficoml
lret
push
in
xor
xchg
out
adc
repnz
xchg
test
inc
sbb
mov
add
push
cmpsb
pop
mov
mov
cmpsl
rol
or
andnps
inc
jmp
jae
pop
mov
push
mov
sub
xchg
mov
or
les
ljmp
mov
push
ficompl
gs
mov
fs
push
cmp
push
or
mov
sbb
and
jg
nop
arpl
rcrl
scas
cmpsb
les
rolb
mov
dec
sarl
jnp
addb
ja
in
and
mov
push
arpl
jl
andl
sub
sahf
jae
sub
mov
xchg
or
pushf
or
stos
push
dec
lods
test
dec
insb
push
test
fstpt
pop
imul
and
jp
jp
ficompl
outsl
inc
jmp
int3
lret
fsubl
cmp
cli
xchg
inc
pop
das
cmpsb
adc
mov
sub
test
jnp
cmp
dec
imul
clc
xchg
xor
stc
out
push
movb
aas
sarl
rorl
arpl
lret
pop
sub
outsb
insb
mov
sahf
cmp
aam
shl
jb
lret
aas
test
scas
out
adc
subb
cmp
fcmovb
xor
or
dec
cmp
xchg
sub
pop
sub
lcall
sbb
inc
add
psadbw
cltd
mov
mov
pop
call
int3
fst
cmp
pop
repz
add
mov
xor
insb
test
push
lahf
sti
xor
fbld
decb
jmp
in
insl
sub
loope
jmp
cmp
pop
aaa
cmp
daa
sbb
sbb
sub
adc
mulb
adcb
test
jg
sbb
mov
sub
cmp
loope
ficoms
push
nop
es
sbb
loope
cmp
and
or
fdivrl
popf
adcb
or
movsl
add
cmp
idivl
inc
lea
pop
push
jb
sbb
xchg
lods
push
dec
sahf
lods
mov
cmpsb
jg
out
and
dec
dec
dec
and
add
adc
jmp
fwait
xor
xor
fs
xchg
std
rorb
int3
xorb
stos
outsb
popa
dec
sbb
cmpsl
ds
test
sub
cli
lea
add
je
bsr
mov
lret
scas
aam
push
fstl
lock
lret
and
ja
adc
mov
adc
dec
pop
shll
xor
out
cmp
clc
lahf
lahf
shl
cmp
int3
shlb
in
ficompl
sbb
add
add
insb
push
fistpll
mov
sbb
adc
lcall
sbb
mov
mov
push
cmp
inc
insb
aas
sub
scas
add
aam
pop
sahf
mov
mov
adc
mov
mov
dec
push
cmp
jno
cmc
in
xchg
dec
pop
xchg
jl
js
fdivl
mov
cltd
arpl
stc
aas
push
test
cmp
xchg
or
mov
add
xor
dec
pop
lods
inc
lea
lret
mov
jne
xor
cwtl
insb
lret
call
add
jp
push
es
sub
ret
aam
lods
les
aad
loop
dec
in
cmp
testb
and
push
mov
daa
addb
cmp
sbb
jl
js
fiadds
mov
pusha
incl
popa
cmp
sub
mov
lock
test
rorl
sbb
sbb
arpl
fadds
mov
scas
movsl
fs
xchg
outsl
ss
cmp
push
mov
xchg
pop
testb
gs
mov
loope
mov
int3
and
cmp
push
add
aad
fnstsw
inc
rcrl
data16
insb
repz
loop
xchg
out
jecxz
lea
stc
out
bound
out
jecxz
jno
jbe
mov
pop
out
or
sbb
es
sub
push
pop
mov
mov
fisubrl
fiaddl
jnp
adc
add
sbb
add
add
xchg
cwtl
or
pop
inc
fstpl
dec
loop
loopne
xlat
push
outsb
or
stc
sub
inc
pop
pop
jge
or
mov
faddp
stos
mov
fucomp
shll
xchg
or
or
xlat
mov
add
sysret
lcall
mov
adc
push
xorl
mov
or
ljmp
mov
fldcw
shrl
sub
dec
cmp
push
cmpsb
dec
dec
ss
fistl
push
sub
ja
push
and
out
jle
stos
jae
call
mov
dec
add
iret
sub
mov
nop
mov
fdivrs
sub
arpl
pop
testb
mov
loopne
fmuls
or
adc
jno
daa
inc
jbe,pt
xchg
push
adc
adc
lea
push
jno
xlat
cmpsb
pop
movsl
xchg
add
daa
xchg
sti
divl
pop
inc
mov
jmp
and
mov
clc
mov
popl
cs
adc
and
fisubrl
aad
shl
dec
int
in
ret
lcall
sbb
xchg
stos
cwtl
cs
sub
icebp
cltd
daa
cmp
xchg
gs
fsubl
mov
mov
call
push
es
icebp
sbb
decl
sbb
dec
cmpsb
jge
xor
add
imul
lcall
mov
rorb
pop
add
out
mov
stc
mov
out
sub
sub
ret
jno
sub
in
jo
push
insb
test
scas
xchg
dec
neg
cmpsb
cmp
out
cmp
sbb
jb
pusha
adc
dec
inc
dec
xor
aaa
add
sub
inc
pop
stos
xchg
xor
leave
mov
mov
dec
jno
nop
stos
lods
xchg
jae
inc
lret
imul
loope
mov
add
stos
mov
lahf
dec
out
clc
jmp
addl
sub
or
pop
out
roll
xchg
bound
arpl
rcrl
pop
pop
sbb
mov
push
mov
lahf
cmp
sub
jmp
out
push
xchg
repz
mov
xchg
dec
insl
enter
add
dec
xor
dec
bnd
cmp
add
and
daa
jbe
push
xchg
stc
in
sub
xchg
outsl
mov
cs
pop
jo
es
mov
mov
gs
imul
dec
add
mov
push
jmp
lods
add
mov
xchg
mov
lods
stc
inc
out
xchg
dec
dec
hlt
movzwl
arpl
adc
dec
ja
sti
and
in
inc
inc
pop
jae
lods
cmp
lods
daa
xchg
ljmp
into
add
cmp
xchg
jg
push
es
iret
mov
mov
push
mov
iret
cmp
daa
push
push
jecxz
sbb
sbb
mov
fsubl
push
mov
sbb
inc
gs
xor
pop
js
aad
adc
and
push
xchg
scas
cmpsb
lahf
mov
orb
loop
sbb
pop
mov
pop
test
leave
fstps
jp
mov
pop
pop
and
push
adc
test
stc
roll
popl
cltd
adc
loope
sub
ret
jle
pop
mov
cld
inc
add
jae
stos
push
xchg
ds
mov
rol
add
fdivrl
lahf
ss
cmpsb
cmp
mov
push
fsubl
xchg
pop
lock
push
xor
and
xlat
mov
inc
scas
fldl
push
xlat
lret
jmp
push
insb
lea
inc
xchg
cli
push
into
cmp
mov
cli
ds
push
push
add
in
gs
aas
nop
pop
mov
xor
jmp
in
push
mov
mov
hlt
mov
aad
mov
out
fs
aam
jp
dec
inc
lods
lock
mov
or
lods
xchg
push
lcall
sbb
cmp
mov
mov
lock
push
adc
jne
idivb
jecxz
push
in
dec
jo
jle
sub
rclb
xchg
dec
cli
stos
inc
loop
and
push
or
cltd
je
testl
adc
push
stos
das
jmp
mov
mov
loope
pusha
xorb
push
sub
pop
dec
push
stos
leave
sub
je
loope
push
pop
pop
ficoml
cld
rol
inc
dec
or
clc
sub
jmp
add
xchg
dec
cmp
add
add
cltd
pop
jmp
or
notl
imul
and
adc
lds
es
jmp
mov
mov
stos
add
lret
data16
dec
mov
cwtl
leave
push
mov
insl
jns
pop
out
mov
stos
pop
push
loope
jle
xchg
pop
jo
dec
fcompl
fiaddl
push
sti
jns
popa
jge
adc
cwtl
jp
push
in
mov
shlb
popf
push
inc
mov
mov
push
pop
mov
fisubrs
jle
inc
mov
jae
les
push
or
std
dec
xchg
loop
mov
xor
ret
lods
jmp
xchg
dec
jmp
mov
jg
push
cli
xchg
or
lea
fdivrl
mov
rcr
xchg
sbbb
push
es
pushf
pusha
push
iret
mov
or
inc
push
pop
mov
adc
clc
push
jnp
ja
sub
and
adc
out
jp
dec
lods
adc
cltd
mov
push
sbb
aad
lahf
cli
adc
in
xlat
mov
dec
pop
in
inc
jecxz
inc
or
lcall
and
cld
sbb
mov
loopne
fisubrs
inc
pop
fwait
js
and
stc
pop
repz
jp
clc
pusha
mov
cmpsb
enter
movsb
repz
shrb
and
lcall
mov
fsubrl
mov
popa
xor
subb
test
push
int3
xchg
mov
and
add
xchg
decl
icebp
sahf
or
or
mov
fstps
in
dec
jae
fdivl
daa
jnp
fwait
sti
aas
adc
fs
cmp
add
in
es
negl
cmp
and
or
lds
jge
jo
fldenvs
adc
shll
dec
sub
out
jp
add
ret
sbb
push
xor
cmp
insb
xor
repnz
mov
sbb
shlb
std
add
fisttps
sbb
es
mov
cld
adc
xor
adc
jp
iret
sub
movsl
mov
data16
mov
cli
and
stos
mov
adc
scas
adc
sub
out
lds
insl
inc
les
iret
adc
mov
out
jb
shll
lahf
jle
rorb
lret
inc
shrb
pop
hlt
and
cld
adc
loope
xor
sbb
jbe
jnp
shrb
outsb
mov
iret
jl
fs
or
sbb
pop
jge
cmp
stos
mov
in
test
notl
lret
andb
pusha
xchg
sub
mov
mov
cmp
sub
xchg
pop
out
scas
or
jp
fs
aas
js
icebp
xchg
mov
push
cmp
loop
inc
push
add
pop
sub
into
or
inc
cli
adc
call
or
daa
pushl
or
dec
out
inc
insl
call
in
xchg
inc
pop
mov
dec
out
dec
cmpsl
imul
mov
pop
mov
lahf
and
pop
sbb
pop
sub
je
push
imul
imul
and
push
pop
push
or
inc
cli
aas
lea
repnz
and
sbb
mov
push
jns
out
xor
push
mov
sbb
mov
sbb
or
testl
cmp
rcl
pop
xor
aam
ss
cmc
dec
dec
aas
pop
test
xor
fldt
add
cmpsb
mov
or
lret
outsl
fwait
aaa
xchg
loopne
rcrl
or
push
push
popf
orb
sbb
loop
sbb
push
shl
mov
inc
cmc
mov
adc
stc
mov
aaa
jge
xor
adc
fisubrl
or
repnz
dec
lea
mov
icebp
jnp
inc
icebp
int3
test
jge
pushf
inc
scas
mov
fsubrs
jo
sahf
mov
mul
jl
test
jle
mov
pop
jmp
bnd
std
sbb
or
pop
outsb
add
pop
ret
or
mov
mov
aad
into
adc
mov
mov
push
jbe
or
push
add
test
push
ds
outsl
je
rcrb
out
xor
aas
mov
push
outsb
cmpsl
mov
pop
jmp
les
add
inc
pop
fdivrs
hlt
movsl
xchg
dec
ds
repnz
mov
test
xchg
dec
lahf
inc
rorl
das
mov
adc
loope
test
neg
movsb
push
shll
mov
mov
jae
mov
sbbl
cmp
add
popa
les
mov
dec
ffree
sarl
cld
inc
out
out
push
test
insl
insl
test
arpl
cs
mov
lock
orb
xchg
adc
push
mov
xor
std
ds
das
cmp
jecxz
pop
outsb
test
sbb
xchg
daa
into
gs
je
stc
test
repnz
add
xchg
dec
or
pushf
pop
and
mov
push
scas
lcall
dec
jb
or
pop
dec
aad
mov
dec
sbb
inc
imul
jae
int
pusha
xchg
sub
dec
ds
mov
mov
out
sahf
inc
pop
sub
jae
and
pushf
cltd
mov
out
dec
sub
adc
mov
arpl
clc
icebp
movsl
fbstp
xlat
cs
call
mov
push
pop
add
aaa
jg
cmpsb
lock
aas
imul
or
mov
insb
sub
mov
fbld
and
sbb
mov
inc
std
fsubrl
mov
xchg
sub
pusha
jecxz
sbb
xchg
sub
aam
ret
int
fwait
sbb
or
jge
pop
cmc
mov
insl
pop
inc
orb
dec
pop
ds
call
inc
out
mov
pop
std
jmp
xchg
sbb
mov
mov
add
enter
jno
ds
xorl
xchg
mov
insl
pushf
or
mov
xchg
enter
mov
xchg
jne
sub
mov
jmp
pop
jecxz
jg
jbe
fsubs
insb
loope
sub
cmpsb
jge
push
push
jecxz
push
cmp
pop
pushf
xor
shrl
scas
xchg
jae
jae
jns
jae
mov
mov
mov
icebp
jp
xchg
adc
inc
out
loopne
fidivl
rcr
dec
addr16
out
rcrb
push
cwtl
stos
or
xchg
sub
dec
pop
clc
inc
inc
xor
push
inc
rcrb
mov
add
inc
push
clc
dec
ja
notb
inc
lret
cltd
and
or
or
mov
jne
ja
and
cld
push
xor
sub
cmp
add
jno
add
ljmp
cmp
dec
andl
dec
je
shlb
jnp
jae
js
mov
test
mov
fucomp
orl
jnp
pop
das
or
dec
subl
sbbb
mov
lods
xor
and
mov
test
int3
pop
imul
and
jbe
jecxz
inc
jecxz
add
fwait
into
aas
add
mov
lock
cmp
stos
cld
jecxz
or
insl
jp
dec
mov
or
or
cltd
sub
mov
out
movb
jmp
pop
xchg
pop
pop
xchg
pop
test
xor
ret
insl
pop
push
xchg
sub
push
test
lea
out
dec
popf
lret
add
push
sub
into
pop
sbb
push
and
fdivrs
mov
xor
ret
xchg
and
test
add
sbb
cmp
sarb
pop
ss
push
push
cmc
outsl
rcr
test
jo
shrl
pop
and
push
in
xchg
jbe
pop
jmp
out
leave
aas
dec
xor
insb
aam
or
jae
push
sub
je
xchg
hlt
fmul
or
enter
ljmp
in
mov
mov
push
sub
dec
xlat
outsb
aad
mov
jns
mov
rclb
andb
mov
mov
cwtl
cs
dec
xor
ret
dec
xchg
data16
pop
hlt
stc
js
fisubl
adc
jne
xor
das
push
mov
adc
inc
cmp
pop
cmp
loop
cmp
insb
aaa
repnz
xor
movsb
or
jb
inc
mov
test
adc
ret
jne
or
movl
imul
sti
imul
fld
pop
jmp
or
mov
loopne
or
into
sarl
inc
je
xchg
scas
dec
mov
sbb
sbb
and
aas
pop
mov
repz
test
into
mov
mov
jbe
jmp
push
imul
test
xor
cmc
inc
sbb
lret
pop
mov
xor
cmp
cli
shrl
imul
in
xor
mov
icebp
cmp
in
out
push
or
int
adc
cmpsb
fdivs
add
xor
and
or
stc
je
inc
jo
cli
ret
out
sbb
add
or
sbb
movsl
cmp
ljmp
cmp
iret
or
dec
mov
std
dec
loope
out
xor
hlt
shrl
popf
push
pop
dec
shrl
xor
adc
or
adc
xchg
icebp
mov
cmpb
call
jns
fnstenv
pop
mov
lods
xor
in
fsubrs
stos
sbb
mov
rorl
jne
not
sub
lret
add
jb
and
pop
bnd
xchg
cmpsb
gs
rcr
repz
xor
cmp
cwtl
lock
sbb
and
xchg
rcrb
dec
adc
cmp
adc
or
jle
or
push
addr16
fnstsw
and
adc
push
jecxz
jo
in
jnp
cld
nop
rclb
movsb
scas
cld
rclb
addr16
inc
cmp
imul
std
or
dec
call
mov
lods
jns
fs
daa
shrb
je
test
pushf
cmc
pop
out
into
xchg
sub
fdiv
cld
insl
cmc
push
cltd
adc
inc
sub
cmp
cwtl
sub
and
jge
mov
mov
adc
mov
ror
push
pop
mov
mov
add
add
mov
sub
call
add
mov
cmpsl
out
inc
cmpsl
xchg
mov
cmp
movsb
fildll
popa
add
scas
dec
sbbb
mov
jno
inc
fs
push
test
je
mov
jb
adc
mov
and
jg
es
pusha
push
adcb
xor
sub
jae
add
mov
adc
cmpsl
pop
outsb
subb
andl
xor
cmp
mov
sarl
add
out
fwait
and
xor
mov
push
or
cmpsb
aam
les
ret
out
shrl
dec
sbb
aad
cmp
xor
ss
push
gs
in
sahf
pop
in
jae
cmp
scas
inc
nop
jp
out
pusha
in
arpl
gs
pop
ljmp
fldenv
or
xlat
cmp
adc
adc
mov
mov
outsb
inc
add
mov
iret
sbb
dec
sbb
xor
push
pop
jae
pop
jmp
mov
mov
jae
dec
sub
push
loopne
jb
jns
mov
pop
sbb
leave
jns
dec
daa
jbe
jp
jns
fcoml
add
mov
mov
xor
lret
cld
aam
pop
ret
rolb
insl
rorl
sub
outsl
cmp
mov
push
cmp
adc
and
cmpsb
fistps
xchg
cmp
jmp
mov
shrb
js
sbb
lahf
mov
nop
fisubl
icebp
push
flds
and
jl
xor
mov
cmp
or
push
xchg
outsl
dec
add
aaa
cmp
cmpb
push
in
cmp
imull
xchg
out
je
or
ljmp
int
or
daa
int
and
add
inc
xchg
out
mov
les
cmp
jo
clc
xchg
or
in
mov
fsubrs
cmp
cltd
jnp
and
leave
fstpl
pop
outsl
bound
xchg
nop
xor
js
add
adc
adc
mov
testl
jecxz
jo
dec
sub
cmpb
bound
push
mov
or
bound
ljmp
push
push
adc
hlt
mov
stos
rclb
lea
popa
pushf
adcb
push
out
aad
and
insb
sbb
and
inc
xchg
sahf
mov
bound
pusha
and
pushf
andps
pop
sub
xor
jno
fwait
gs
cli
push
filds
test
mov
lahf
test
jne
test
dec
pop
inc
inc
inc
and
push
pop
lock
or
cmp
mov
push
adcl
mov
mov
mov
test
jo
jo
jg
in
mov
pop
fnsave
push
and
jnp
xor
out
test
cld
xchg
je
push
cld
fdivs
sbb
negb
les
pop
icebp
or
xor
sub
daa
arpl
add
adc
rcrb
mov
aas
lret
mov
popa
sub
aam
test
add
push
jl
and
adcl
xchg
scas
xchg
scas
cs
stos
sahf
call
sbb
shll
and
push
mov
mov
mov
inc
aas
xor
xchg
jne
in
arpl
rol
outsl
clc
dec
mov
pop
mov
fidivs
pop
mov
ljmp
mov
jb
pop
notb
jno
nop
mov
movl
add
out
push
inc
jecxz
insb
or
cltd
or
lods
insl
xor
adc
fisttpl
adc
fmulp
jns
mov
dec
cmpsb
jb
and
push
jmp
jnp
aam
insl
or
ljmp
std
jbe
or
das
jo
hlt
adc
or
sub
mov
or
mov
jnp
or
xlat
lods
sub
mov
loope
xor
inc
adcl
cmp
mov
xchg
jg
icebp
lahf
and
es
shr
pop
push
imul
insb
imul
cmp
adcb
loop
test
add
das
lds
jae
mov
imul
out
push
adc
pusha
add
cwtl
inc
rcrb
mov
mov
pop
insl
jnp
dec
vmovq
test
pushf
fimull
cmp
mov
cwtl
jnp
xchg
push
adc
inc
jae
aas
cmp
cmp
outsb
push
xchg
mov
cmpb
sub
outsb
mov
dec
ds
and
fcomi
cmp
data16
aad
mov
pop
dec
mov
loope
je
daa
xchg
mov
jnp
cmpsb
rolb
jns
pop
scas
fnstsw
add
jmp
test
enter
test
and
lcall
in
pushf
mov
ja
insb
push
cmp
packssdw
mov
lods
es
add
push
pop
mov
jl
and
and
or
icebp
ds
push
add
mov
and
das
loope
dec
cmp
lods
pop
int
mov
jae
dec
aam
incb
iret
call
dec
fistps
push
push
data16
roll
push
mov
inc
ss
hlt
and
inc
jnp
xchg
mov
dec
stc
jle
out
sbb
jb
adc
clc
mov
aam
xor
adc
cltd
xchg
mov
pop
jmp
lods
test
leave
movsb
jnp
enter
call
mov
inc
mov
ret
lods
cmp
js
xor
shr
cltd
pop
out
xor
ds
push
lods
mov
int
ds
xchg
add
test
stos
sti
mov
pop
push
dec
cmp
sub
xor
ss
dec
sarb
jg
add
shl
mov
xchg
adc
mov
stc
repz
stc
lea
pop
adc
pop
lods
mov
in
inc
lret
xlat
jne
xchg
mov
mov
test
or
aad
cli
pop
lock
inc
fdivrl
mov
cli
rorb
cli
adc
xor
push
out
lds
adc
divb
sub
cmp
gs
and
mov
jb
cld
test
push
push
mov
shrl
jecxz
push
iret
cmp
andl
inc
lret
stos
xor
enter
push
mov
pop
adc
test
test
orl
iret
dec
adc
xor
lret
cmpsb
arpl
or
xchg
test
push
iret
test
roll
jb
xchg
pop
repnz
xor
cltd
lock
jae
adc
into
xor
xchg
push
mov
popa
aad
ljmp
xlat
and
int3
xor
aad
sub
jo
inc
jecxz
sbb
test
ljmp
mov
popf
cwtl
push
shrl
xchg
in
cmc
repnz
mov
dec
in
xor
sub
imul
outsl
ret
mov
push
bound
negb
test
ret
movsb
aaa
cmpl
mov
fs
sub
imul
stc
xor
adc
cmpsl
inc
dec
xchg
jmp
insl
mulb
int
xor
fxch
mov
in
cmpsl
push
add
jnp
mov
rcr
cwtl
xor
xor
in
in
cld
push
adc
mov
jno
inc
or
scas
sti
pop
fists
movsb
inc
movsl
dec
mov
adc
push
mov
fisubs
mov
xor
aam
add
in
or
arpl
mov
jmp
rclb
dec
rcrb
xchg
jnp
dec
mov
cs
ja
mov
insb
out
cmp
cmc
shlb
shll
xor
push
add
cmp
movsl
sub
and
sub
dec
in
fwait
or
shrl
loope
lock
mov
push
jecxz
jl
ret
popf
xor
fildll
out
push
sub
jp
iret
jb
add
add
cmpsb
les
shll
lds
adc
pop
cs
mov
ds
das
cmp
dec
adc
jle
nop
cmp
jecxz,pt
dec
dec
aam
nop
adc
enter
adc
jle
dec
dec
loopne
mov
roll
jecxz
ss
or
sti
push
xchg
pop
out
push
nop
or
push
rorb
jecxz
push
std
fsubl
jp
js
inc
stc
mov
pop
fs
sub
mov
mov
push
je
icebp
mov
pushf
jle
into
rcrl
adc
mov
pop
sub
cmp
jg
sahf
jo
imull
adc
into
mov
mov
jecxz
cmp
sub
flds
pop
pop
negb
out
in
out
aas
arpl
repnz
push
dec
jne
aam
cmp
xchg
mov
fdivrs
dec
inc
int3
loope
add
jno
ss
adc
sbb
addr16
ja
add
push
inc
sti
cltd
lock
shlb
jl
aaa
dec
mov
mov
adc
fstpt
sub
jbe
sbb
pop
sbb
ss
lea
pop
nop
inc
jbe
les
insl
jbe
xlat
dec
xacquire
mov
clc
dec
repz
icebp
int3
jae
cmp
push
sbb
popa
mov
enter
fwait
testb
popf
push
mov
xlat
insb
inc
jns
cmp
repz
and
push
and
adcb
mov
mov
cmp
pop
repz
enter
test
in
add
add
fdivp
jnp
jno
data16
mov
nop
mov
mov
inc
das
dec
shll
loop
decl
mov
jne
mov
add
test
pop
dec
popf
adc
add
mulps
xchg
mov
lods
cwtl
inc
dec
mov
les
jecxz
push
addr16
jmp
hlt
cs
mov
mov
insl
push
pop
or
fnsave
pop
xchg
ljmp
xchg
pop
xchg
je
push
jno
xchg
icebp
sarb
inc
add
in
out
adc
addl
lods
xor
mov
add
test
pop
int3
enter
jo
icebp
ss
aas
push
mov
mov
repz
cmp
fucomip
add
cwtl
sub
inc
fdivl
sahf
divl
mov
mov
fs
push
push
jl
pop
outsb
sbb
and
cmpsl
out
sub
xor
leave
in
addl
lea
and
and
or
ss
push
and
lahf
scas
push
pop
aaa
cmp
cs
popa
adc
mov
mov
inc
sub
sub
mov
mov
inc
fistpll
daa
push
pop
inc
sbb
js
mov
mov
adc
les
add
mov
adc
xchg
insl
dec
and
and
sbb
xchg
icebp
add
lahf
das
xchg
lret
aad
pop
push
out
fcomi
rcrb
xchg
mov
jb
data16
mov
mov
and
loop
jb
sub
movsbl
out
out
xchg
ds
inc
adc
movsb
aaa
mov
test
add
xchg
dec
mov
orb
mov
pop
dec
sub
dec
movsb
sub
inc
inc
es
outsl
inc
or
sahf
cmpsl
stos
gs
jb
and
aad
lahf
xchg
ret
jle
sub
mov
vhaddps
loopne
pushf
loope
pop
xchg
orb
mov
or
aad
xchg
mov
loopne
popa
add
jnp
fdivl
in
pop
std
xor
test
add
pop
dec
leave
movsb
incl
bound
xchg
das
pextrw
jge
push
and
sbb
xchg
xor
imulb
adc
jbe
dec
xor
out
cmp
mov
dec
or
fldcw
pusha
test
fistps
dec
inc
test
sub
sub
jb
fwait
pop
sbb
push
or
inc
sbb
sub
jle
jns
imul
in
fsub
insl
sahf
adc
jae
dec
fs
sbb
movsb
mov
sub
lods
fisubrs
adc
inc
pop
ret
xchg
lahf
xchg
cmp
mov
jp
cmp
sub
popf
xlat
outsb
iret
imul
shrb
add
adc
xchg
das
xchg
mov
jmp
lods
mov
cmp
jmp
sub
fistpll
pop
repnz
sahf
mov
jmp
fidivrs
dec
dec
mov
rol
mov
sbb
popf
jae
or
fwait
stos
jmp
ret
lock
loope
push
and
popa
clc
jbe
mov
xchg
sarl
xchg
aas
add
lea
int
dec
iret
pop
inc
dec
decl
pop
jmp
sarl
test
sub
sub
jmp
data16
divl
adcl
jle
aam
or
shll
out
in
rcrl
rorb
jge
push
mov
xchg
sub
dec
jmp
pop
repnz
in
mov
sbb
lcall
imul
inc
out
shlb
dec
push
xchg
ror
mov
fistps
iret
insl
stc
dec
jmp
test
and
mov
xchg
fistps
dec
movsl
bound
adc
mov
imul
enter
rsqrtps
jns
fsubrp
ret
fsubrs
xor
push
and
psadbw
add
out
fcompl
cmpsb
cmpb
cmp
inc
sbb
dec
jnp
pop
scas
xchg
aam
sbb
xor
mov
ljmp
sub
insb
add
dec
xor
pop
mov
nop
inc
adc
cli
jecxz
aas
adc
mov
jle
pop
or
cmp
pop
scas
sub
or
dec
dec
mov
arpl
push
push
sbb
jae
loop
popw
sub
pop
inc
push
sub
and
lds
stos
dec
jecxz
jge
roll
rol
addr16
cli
adc
pop
sahf
lahf
ss
xchg
sub
push
sub
stc
dec
adc
loope
dec
mov
test
jns
sub
lock
jns
xchg
xor
xbegin
push
inc
mov
xlat
mov
lret
fnstcw
pusha
push
lock
cmc
push
pop
std
add
lods
ja
xor
inc
jmp
int
sbb
and
push
push
cwtl
cltd
das
iret
xchg
jns
addr16
xchg
cltd
pop
clc
bound
sbb
scas
in
or
mov
out
push
or
ds
pop
or
dec
andb
das
mov
mov
pop
test
mov
and
xchg
and
xor
je
sub
ret
push
mov
popf
fcoms
popa
clc
adcl
add
xchg
or
add
xlat
jae
jle
lcall
adc
jbe
pop
cmp
shll
dec
adc
and
imul
cmpsl
scas
out
fdivs
lods
sbb
push
orl
sub
xor
imul
iret
popa
aas
mov
inc
or
xchg
push
out
nopl
xorl
test
push
stos
ret
stos
or
in
mov
fildll
out
jae
pop
out
inc
leave
and
scas
push
cs
testl
inc
mov
out
sub
ljmp
dec
inc
std
jo
mov
dec
sbb
ds
pop
sahf
inc
dec
cmp
fnstenv
stc
clc
push
inc
enter
arpl
jne
pop
mov
fwait
jmp
int3
int3
cmp
enter
lods
test
sahf
inc
xor
shrb
mulb
lods
inc
dec
mov
push
dec
pop
cld
mov
cmp
xorl
mov
stos
sub
and
imul
mov
std
and
ja
cmp
push
pop
pop
shlb
dec
imul
pop
pop
cmpsb
jge
jp
in
inc
mov
xchg
fwait
dec
xor
scas
leave
out
bound
aad
ds
dec
fdivrs
shll
mov
xchg
imul
cld
xchg
ss
pop
sbb
shlb
movl
mov
pop
push
xor
jmp
inc
jnp
mov
cmpsb
cltd
dec
int
jae
test
repz
inc
dec
addr16
lret
shll
mov
mov
push
in
fistl
sahf
popa
push
xor
xor
cmc
add
stos
or
xor
pusha
sub
adc
and
enter
sub
out
daa
in
pop
pop
outsl
push
push
int
in
jns
adc
jp
and
push
mov
andb
shl
cmp
imulb
or
xor
jge
stc
xor
cmpsb
mov
mov
pop
enter
shrb
js
mov
testb
and
popa
jns
xchg
jns
in
mov
xchg
mov
xor
cmp
imul
sub
inc
mov
js
cmpsl
aam
and
pop
cli
and
repnz
xor
jp
popa
push
lods
push
inc
fisubrl
ficomps
aam
orl
enter
jp
stc
lcall
cmpsl
mov
sbb
pop
in
sub
inc
mov
into
lahf
or
dec
add
and
mov
dec
outsb
sub
pushf
mov
ret
mov
add
dec
push
or
ja
inc
push
mov
inc
and
loopne
mov
sub
loope
aam
cltd
out
cmc
inc
mov
fsubp
xor
aam
adc
aam
movsb
pop
mov
dec
dec
mov
and
mov
lcall
mov
inc
mov
jbe
insl
mov
jo
pop
outsl
stc
shrl
lea
movsl
xor
cwtl
loop
stos
push
xor
cmc
or
fldenv
mov
das
cmp
push
inc
lock
mov
add
mov
shrb
inc
mov
cmp
gs
fsubrs
icebp
mov
stc
mov
imul
pop
pop
mov
lahf
sub
repz
cmp
xor
dec
and
xor
call
xlat
inc
out
adc
cld
inc
pop
out
cmp
js
ret
shrl
insl
add
into
movsl
cmp
in
mov
pop
adcb
iret
mov
cmp
call
push
or
dec
mov
pop
ljmp
jb
iret
negb
jecxz
movsb
jp
ficompl
fs
pop
pop
jecxz
fs
add
stos
cld
cmp
add
iret
lods
dec
in
imul
shr
repnz
leave
push
aad
inc
cld
movsb
fdivrl
fidivs
unpckhps
xor
adc
movsl
sub
mov
dec
jecxz
imul
fnstenv
xor
imul
push
jo
out
inc
or
lret
xchg
dec
test
inc
shr
je
insb
sbb
and
pop
jno
inc
pop
push
enter
sub
movsl
fisttpll
mov
inc
inc
sub
loop
movsb
gs
repnz
xlat
lods
pop
shrb
or
pop
stos
sub
or
loopne
rolb
std
jmp
jecxz
out
sub
decl
stc
lret
cld
push
sbb
jnp
push
cwtl
nop
fwait
bound
movsl
jg
test
lds
cmpsb
cmp
negb
mov
fisttps
fnstenv
insb
ret
psadbw
jmp
dec
mov
lret
push
pop
inc
pop
cmp
dec
sub
xor
xor
je
test
call
call
mov
push
aam
mov
xor
int
outsl
notl
mov
mov
push
out
pop
rcrl
xchg
jne
add
outsb
lds
pop
mov
es
imul
xchg
addb
mov
inc
xchg
cmpsl
push
sub
aaa
xor
or
and
test
mov
test
jno
sahf
xchg
push
movups
xor
dec
adc
push
xacquire
xchg
adc
mov
mov
adc
movsl
mov
es
jl
cmp
jmp
sub
ljmp
jg
in
push
add
in
mov
jns
jbe
push
lcall
jne
in
jb
dec
mov
jge
inc
mov
xlat
inc
push
xchg
mov
sahf
sub
and
aas
mov
daa
js
mov
xchg
or
lods
and
xchg
movsl
shlb
mov
aaa
push
mov
fcoms
xor
mov
int
sbb
sub
rcrb
mov
push
fstl
lret
inc
test
inc
push
iret
notb
stc
addr16
in
adc
mov
test
xchg
jae
fnstenv
add
inc
leave
xor
xchg
pop
aas
dec
mov
data16
mov
xor
addb
insl
aad
movsb
push
les
sbb
mov
sbb
fistpl
popa
jg
push
push
adc
pop
cmc
dec
call
xor
pushf
xchg
xchg
cmpsb
inc
bound
push
mov
nop
int
adc
cmp
xor
jecxz
jle
andl
mov
or
lret
test
adc
jecxz
ljmp
lods
sub
jp
out
fsubr
imul
push
test
jg
or
mov
push
popf
imul
cli
mov
inc
sbb
fstpl
xor
mov
cld
inc
mov
not
addl
lret
mov
inc
inc
sbb
dec
fists
loopne,pn
loopne
lahf
inc
popa
add
dec
mov
fbstp
xchg
hlt
mov
cmp
sbb
xchg
dec
pop
shrl
mov
loopne
sub
hlt
add
scas
icebp
cmp
insb
mov
sbb
inc
lods
popa
cmp
imul
mov
and
jge
jg
mov
sub
shl
mov
mov
jo
repnz
push
inc
stos
jb
imul
repnz
ljmp
arpl
pusha
adc
roll
mov
aam
sub
fisttpll
jle
adc
sub
cmp
ss
out
pop
rol
jb
and
cmp
mov
inc
lea
cmp
or
shrb
sbb
clc
mov
and
sbb
cmp
in
jo
int
stc
jmp
fists
cmp
in
push
inc
xchg
lods
dec
cs
pop
pop
lock
lea
ret
outsb
jns
je
push
cmpsb
sub
push
scas
push
ficoms
mov
shl
push
rcrl
cmc
mov
mov
leave
add
jmp
adc
rorb
daa
mov
or
loope
sbbb
aas
xchg
arpl
or
cmp
out
ljmp
push
xchg
cli
jne
lods
mov
fisubrs
sub
arpl
aam
scas
push
dec
xor
cli
jne
loopne
notl
cmp
out
or
shlb
insl
ja
push
xchg
gs
call
adc
ljmp
stos
push
faddl
leave
aam
sbb
les
inc
fidivrl
push
out
lcall
movsl
sbb
xchg
es
dec
movsb
call
or
sub
shll
and
cmp
outsb
clc
push
or
add
lea
lret
clts
adc
xchg
mov
or
fnstenvs
or
imul
cmc
mov
enter
imul
mov
adc
into
aad
mov
mov
lds
push
call
jmp
outsl
push
mov
repnz
test
mov
xchg
cmc
stos
test
ds
adc
lods
and
inc
xor
xchg
jbe
mov
mov
xchg
movsl
sbb
data16
sub
xlat
nop
ss
mov
movl
outsb
std
xchg
xor
mov
cmp
add
stos
jle
ret
and
mov
ja
push
imul
ljmp
mov
inc
shr
or
hlt
test
lahf
cmc
test
rclb
xor
scas
push
int3
fs
mov
cli
in
jmp
dec
xchg
cmpsb
sbb
mov
and
loop
or
es
aam
ficompl
jns
pop
sub
xchg
adc
cwtl
dec
xor
mov
lcall
push
popf
xor
push
xor
ja
mov
in
mov
jno
imul
imul
xchg
shl
inc
add
jne
loope
outsl
inc
add
inc
push
clc
popl
xor
lods
popa
cwtl
shll
or
int
cmpl
xor
aad
or
mov
push
jmp
mov
push
dec
pop
repnz
stc
je
mov
add
push
push
sbb
mov
sti
popa
daa
mov
std
sub
cmpsl
dec
out
clc
das
lds
dec
aaa
into
cmp
aam
inc
xor
mov
push
adc
mov
and
adc
aaa
or
fsubr
sub
repnz
out
les
scas
push
fdivp
sbbb
sbb
cli
les
cmp
bound
daa
jbe
lahf
add
shlb
and
test
stc
xchg
cmp
decb
lahf
xor
push
mov
pop
imul
subl
insl
add
int
inc
outsl
mov
movsl
sarb
fwait
push
loope
add
mov
popf
inc
or
call
push
aam
gs
xchg
or
dec
enterw
dec
ss
iret
in
test
mov
xchg
adc
or
or
or
and
and
pop
mov
cmp
inc
push
mov
sub
rclb
jnp
pop
push
inc
sti
mov
pop
lret
testl
jle
dec
aaa
dec
in
jae
loopne
and
pop
scas
jmp
and
and
pop
and
mov
mov
sbb
push
lcall
mov
xor
xchg
sbb
xor
or
imul
leave
out
out
arpl
shrl
inc
pusha
scas
cmpsb
xchg
les
mov
cmp
jno
mov
xor
insb
cmpsl
call
int
pop
inc
notb
cmpsl
out
mov
das
inc
addr16
in
xor
lods
imul
mov
insb
nop
cmpsl
pushf
add
cmc
sbb
add
ret
or
pop
xor
inc
sahf
cmp
and
cmpsl
jl
rorb
xor
mov
insl
adc
andb
mov
mov
imul
sbb
popf
sbb
fwait
and
repz
adc
mov
and
mov
push
pusha
arpl
aas
and
dec
lret
shrw
rcl
mov
lock
shlb
cmp
cwtl
cs
out
lock
repnz
and
arpl
inc
xchg
xchg
fcmovnbe
jmp
jge
mov
pop
jnp
cmpb
mov
lahf
inc
ficoms
enter
mov
ds
fcmovbe
outsl
arpl
imul
adc
lret
xlat
dec
push
pop
je
sbb
mov
cmp
cmpb
clc
repnz
sbb
pop
rol
lret
loopne
cmp
fidivrs
pop
push
cmp
es
hlt
lret
adc
mov
pop
loope
sub
lret
pop
repnz
xor
xlat
push
pusha
fldl
neg
push
imul
xor
mov
pusha
fstl
push
mov
push
insl
push
aad
jmp
scas
xor
push
cmpsb
flds
and
inc
gs
in
add
jmp
nop
lods
jecxz
add
mov
add
lods
lcall
sbb
testb
cmp
or
stos
data16
adc
cwtl
xor
mov
mov
mov
dec
sbb
fidivrl
mov
jo
jo
in
dec
mov
inc
rolb
add
cld
cs
arpl
xor
clc
dec
dec
cs
shrb
xchg
sub
orb
mov
fmull
sbb
jp
lret
aas
lock
mov
push
aam
mov
inc
pushf
mov
bound
cmpsl
lds
sub
sbb
aaa
call
in
ss
xchg
sub
cmpl
add
mov
fadd
push
add
add
stos
mov
inc
or
repnz
gs
and
adc
imul
in
inc
mov
inc
sub
xchg
add
and
ret
notl
jne
add
out
and
adc
cmp
out
or
mov
mov
sahf
or
std
std
arpl
fmul
jl
jbe
jg
jbe
jo
mov
pop
pop
ja
xchg
js
sbb
and
out
addr16
pop
in
add
xchg
mov
cltd
xor
jl
sti
pop
mov
mov
dec
es
or
cli
push
cltd
mov
jg
cmp
cli
sbb
mov
test
lea
adc
ljmp
scas
push
xchg
in
push
ret
jo
pushf
and
fsubrs
mov
flds
fdivs
dec
out
ret
mov
push
inc
mov
cmp
iret
clc
push
loopne
ss
or
push
inc
pop
xor
sbb
loope
add
sbbb
lds
sub
pop
ds
test
cmp
jle
inc
pop
stos
sub
in
push
xchg
pop
mov
sti
cmc
ret
cld
fincstp
lahf
push
and
pop
adc
jbe
test
aaa
dec
add
jno
cli
cwtl
sub
sbb
lods
pop
out
or
cmp
add
jl
inc
cmpsl
inc
fsubl
and
idiv
ret
jl
dec
lahf
push
mov
cmp
sub
fstps
test
add
popa
mov
and
adc
inc
cwtl
es
data16
inc
cmpsb
movhps
adc
inc
or
jae
or
jae
int3
lret
insl
jge
jl
clc
cmp
xor
in
arpl
loope
sarb
mov
jmp
das
rcl
or
test
loop
jp
testl
sbb
mov
xchg
jbe
inc
jne
and
sub
iret
inc
inc
jbe
xor
dec
pop
pushf
dec
mov
jno
mov
movsl
inc
scas
dec
cltd
or
mov
xchg
lahf
push
dec
fcom
imul
or
push
lods
pop
je
inc
cli
sbb
xchg
call
sahf
out
outsl
inc
mov
jle
pop
push
mov
cmp
movsb
pop
mov
fimuls
ljmp
jno
outsl
ret
call
test
ljmp
mov
pop
jmp
and
fmull
mov
scas
cmp
cltd
das
mov
mov
sbb
inc
cli
adc
out
xchg
and
dec
xchg
pop
inc
insb
or
cltd
adc
loope
sub
sub
sbb
inc
and
imul
jns
cld
and
scas
or
sub
test
js
mov
sbb
aam
int
mov
jl
daa
stos
dec
and
mov
xchg
insb
fcomps
imul
sbb
push
mov
in
lcall
jne
les
mov
add
test
mov
mov
iret
adc
or
movsb
orb
pop
sub
rcll
add
cli
xor
sbbb
loope
adc
add
push
jge
nop
mov
test
je
or
stos
or
pop
and
out
inc
and
or
fnstsw
aad
cmc
cmp
and
dec
aam
sarb
add
insb
pop
ljmp
add
mov
loope
sbb
xchg
adc
jg
cmp
xchg
shl
clc
das
mov
and
sbb
popf
ret
shlb
or
lret
aam
mov
dec
cmpb
cmp
lcall
jne
mov
gs
sbb
and
outsb
pop
ret
push
fs
stos
mov
inc
push
push
inc
xor
xorb
stos
stc
dec
pop
imul
push
mov
push
sbb
pop
fnstenv
inc
jno
cwtl
stos
pop
rclb
xor
push
or
adc
lahf
or
lahf
div
adc
mov
ljmp
inc
fwait
xchg
outsb
inc
cmpsl
xchg
sbb
inc
fxch
cld
rcll
pop
push
mov
and
ja
pop
sbb
or
sub
pop
in
orb
or
in
repz
push
add
xlat
outsb
push
outsb
push
repnz
jne
int
daa
sti
xor
xchg
in
scas
push
inc
push
dec
loope
jne
dec
cs
xchg
push
int3
push
lods
and
cli
and
and
cmp
filds
test
lcall
dec
jo
outsl
xchg
sarb
push
jecxz
fstpl
test
test
das
in
outsb
jnp
inc
mov
sahf
scas
pop
sbbb
mov
adc
cmp
daa
stc
movsb
push
idivl
push
test
mov
jle
out
inc
aad
lods
ja
ds
pop
xor
lret
jg
push
mov
jmp
int
lcall
sbb
push
fmul
imul
adc
lcall
js
les
add
xchg
test
dec
mov
jp
and
int3
in
jge
fdivrl
sbb
insl
dec
in
mov
and
adc
frstor
inc
lahf
cld
or
mov
mov
test
or
and
out
lret
push
lock
push
xor
gs
cmp
push
adc
sub
mov
shr
outsl
push
sbb
mov
lea
mov
stos
xor
pop
cltd
sub
cmp
insl
shlb
dec
push
push
mov
dec
add
sub
popa
jns
jbe
pusha
iret
je
aam
daa
insb
push
popa
pop
filds
add
into
popf
inc
sbb
fs
mov
push
or
and
mov
push
test
jns
aas
adc
adc
imul
fwait
inc
gs
sub
adc
mov
inc
dec
jecxz
rcll
or
icebp
lods
fldenv
or
mov
shl
js
pop
cmpsl
and
ss
std
loop
pop
and
std
xchg
in
test
std
cmpb
and
fs
sti
sbb
cmp
mov
sub
xor
adc
popf
xchg
mov
add
test
std
mov
jbe
push
push
xchg
cmpsl
ret
jp
lret
lcall
inc
dec
mov
mov
daa
fisubl
call
or
inc
dec
xchg
arpl
pop
in
lahf
subl
adc
adc
lret
sarl
cld
pusha
pusha
mov
pop
and
cmp
popf
call
adc
push
test
sub
test
outsb
sbb
mov
ljmp
xor
adc
pop
mov
out
insl
push
mov
sbb
jl
into
mov
jge
jle
inc
xchg
jne
mov
add
mov
not
insb
scas
imul
js
xchg
jne
ss
inc
sub
jnp
push
cmp
cmp
hlt
push
ljmp
pusha
cmp
ret
mov
mov
call
pop
or
insb
jge
push
cmpsb
or
cltd
sub
xchg
jnp
stc
xor
fstps
dec
jmp
mov
push
rcrl
fsubs
inc
cmp
xlat
add
mov
fcmovne
in
lret
sti
cmp
cmp
cmp
push
sub
inc
ficoml
mov
add
es
fidivs
aas
pushf
mov
ss
mov
mov
ja
negb
jle
mov
repz
test
js
adc
in
sub
ret
inc
mov
inc
mov
mov
aam
jmp
loope
sbb
aad
bound
das
in
fucomp
mov
test
mov
pop
push
mov
mov
add
push
nop
lods
repz
orl
movsb
fs
stos
stc
dec
test
sub
adc
push
cmp
lods
popf
clc
or
adc
int
mov
fsubs
or
lret
call
mov
xor
mov
dec
and
test
sbb
sbb
shl
popl
aaa
in
rcrl
adcl
push
pop
lahf
push
mov
fucomi
stc
mov
mov
pop
mov
xchg
aaa
jne
add
popa
push
out
iret
repnz
sti
or
adc
xorb
dec
in
xchg
push
lret
outsl
dec
out
jl
cli
loop
dec
add
enter
fcmove
test
cmpsb
dec
ret
sub
or
xorl
fnsave
lret
lret
cwtl
ret
push
sbb
enter
mov
cwtl
dec
xor
fstpt
mov
adc
inc
sarb
push
popf
cmpsl
iret
xchg
mov
xor
icebp
or
je
lds
hlt
test
xorb
lock
outsb
fsubl
cmp
push
jmp
push
insl
jo
les
sbb
pop
push
inc
push
mov
sbb
lret
shrl
nop
daa
pop
das
inc
jge
shrl
xchg
push
mov
and
mov
je
push
mov
into
mov
les
jb
cmp
pop
rorb
shll
sbb
xchg
leave
mov
add
in
sbb
push
push
repz
push
mov
outsl
xchg
push
push
mov
sbb
movl
outsb
mov
and
nop
pop
movsb
hlt
gs
mov
movb
xchg
inc
or
lock
int
fldl
inc
dec
and
inc
test
pandn
sub
lcall
pop
inc
loop
out
std
push
add
rorl
sub
cmpsl
dec
icebp
xchg
mov
mov
dec
pop
ja
gs
je
dec
lahf
inc
cld
mov
fsincos
pop
mov
mov
inc
push
mov
mov
push
mov
push
or
test
push
inc
ret
jp
fcompl
push
push
sub
test
ja
jo
aad
adc
inc
inc
inc
fsubrs
out
ficoml
mov
or
xor
cmpsb
mov
push
cltd
out
mov
rolb
jnp
into
pop
sub
add
cld
xchg
mov
test
sahf
pop
inc
push
or
push
pop
jno
loop
push
xchg
jecxz
lods
icebp
pop
in
stos
into
inc
shl
scas
insb
lods
jne
mov
pop
push
scas
inc
mov
hlt
xor
jle
or
xlat
push
adc
repnz
mov
mov
stc
dec
pop
xor
jne
fisubl
mov
popa
xor
push
inc
ss
mov
scas
adc
inc
loop
and
mov
mov
mov
dec
xchg
sahf
push
test
xlat
mov
sub
imul
add
xor
xchg
rep
inc
sub
inc
pop
lock
sub
pop
add
in
out
jbe
mov
test
jno
fisubl
push
imul
mov
jmp
mov
insb
or
loopne,pn
or
or
js
testl
cmp
inc
repz
cmpsl
sbb
mov
mov
push
ds
pop
loopne
testl
outsl
movsb
dec
and
je
inc
ds
mov
adc
test
jmp
repz
mov
faddl
or
mov
insb
mov
push
outsb
cmp
push
xor
mov
xchg
push
dec
dec
adc
inc
repnz
and
enter
mov
int3
xor
mov
imul
ret
aad
mov
jnp
mov
repnz
xor
or
dec
dec
roll
fucomip
jnp
enter
pop
loope
xchg
sub
and
pop
das
cmp
or
lcall
xor
clc
jp
adc
push
push
mov
insl
shufps
test
xor
test
aas
sub
ja
cwtl
repnz
ss
scas
mov
filds
cmc
enter
push
pavgb
cmpsl
sub
stos
push
bnd
insl
inc
pop
rorb
insb
pop
push
std
aam
mov
cmpsb
pop
les
rol
pop
cmpb
rorl
sbb
jge
or
xchg
cltd
jl
lret
cmc
lcall
push
mov
jle
popf
fidivrl
mov
insb
cmp
int
stos
cld
cmpsb
cmp
and
pusha
out
mov
loop
iret
pop
mov
jle
aaa
stos
cmp
ret
jb
mov
push
lock
aaa
push
cmpl
fstl
fidivl
sub
sbb
in
push
add
mov
test
mov
cmp
pop
dec
push
jno
and
add
ret
fidivrl
cld
or
icebp
adc
lock
adc
aaa
scas
in
pop
loopne
stos
cmp
stos
sbb
and
imul
jne
sbb
mov
rcl
push
scas
mov
pop
loope
jge
xchg
jg
rolb
xchg
lcall
mov
push
in
add
insl
int
xchg
loopne
cmpsl
mov
pop
cmp
inc
mov
xchg
adc
insb
fisubl
xchg
mov
loopne
test
rcl
sbb
adc
xor
nop
pop
jle
mov
js
movnti
mov
xchg
stc
aam
cmp
push
subl
inc
lcall
mov
stc
rol
mov
out
add
and
jle
sub
xor
lret
mov
je
push
je
and
stos
pop
inc
push
jb
icebp
xor
cmc
push
es
jae
out
xchg
push
psubusw
das
push
shlb
shll
dec
dec
xor
std
push
jg
xchg
cmc
test
inc
rcll
cmp
std
or
jmp
push
push
fnstsw
dec
xor
mov
sub
test
ds
daa
hlt
fnstsw
rep
std
pop
out
mov
lret
nop
arpl
aad
mov
and
jno
pop
xchg
aam
test
xchg
mov
and
scas
ret
loopne
pop
orl
mov
clc
inc
rcll
fisubs
and
gs
std
repz
lock
xor
lcall
lea
xlat
push
mov
jb
cmpl
shlb
push
std
loopne
ficoms
xor
xor
mov
cmpl
stos
pop
dec
or
jg
fsub
jg
pop
inc
outsl
mov
aad
dec
mov
test
push
lret
shll
lret
sub
dec
inc
scas
fbstp
fs
hlt
xchg
sub
bnd
jnp
dec
pop
aam
mov
mov
shrl
push
push
cltd
cmpsl
inc
cld
adc
test
xchg
gs
jb
cmpsb
jo
inc
fdivrp
jne
sbb
sbb
sbb
xor
mov
test
mov
and
jo
mov
mov
mov
push
xchg
xchg
inc
cmp
fildl
loop
ret
out
loop
jne
dec
pop
xchg
movsl
inc
pop
sbb
test
repz
outsb
pop
leave
jnp
in
pushf
movsb
pushf
dec
inc
xchg
jp
adcl
or
sub
push
mov
lea
jle
scas
ret
pushf
ret
ret
cmp
out
in
pop
sub
loopne
das
mov
addr16
fxch
fidivrl
rcrb
sti
andb
aaa
and
adc
push
mov
xchg
inc
pop
add
aaa
xor
stos
jg
jno
rcrl
negb
jnp
push
pop
lds
loop
push
fld
pop
or
xchg
aas
cmp
pop
mov
mov
out
fisubrl
xchg
std
and
imul
jg
xor
mov
dec
sbb
fnstsw
pop
lea
aam
and
inc
inc
adc
pushl
sbb
jae
adc
mov
pusha
leave
adc
test
xor
test
xchg
dec
dec
push
jge
or
test
add
into
mov
mov
jle
cmp
orb
push
adc
rcrb
mov
cmp
gs
xchg
adc
or
cmpsl
shrb
nop
inc
test
add
fsubr
negl
or
sbb
arpl
push
lea
out
addb
add
push
jb
xor
inc
and
repnz
aam
push
pop
adcb
jle
loop
ficomps
xchg
popa
js
shl
fsubrl
jb
cmp
repnz
mov
xchg
mov
daa
call
test
pop
fxch
mov
add
or
inc
adc
gs
pop
fs
jne
pop
test
xchg
sub
fidivl
outsb
mov
shll
sti
mov
jmp
test
test
inc
rclb
and
leave
dec
scas
fstpl
or
fstpt
mov
repnz
aad
sbbl
jle
push
test
hlt
xchg
dec
xchg
adc
sbb
pop
or
insb
mov
jg
xchg
pop
andb
lahf
dec
in
filds
push
xchg
xchg
lods
xchg
add
push
push
or
and
xchg
xchg
cmp
mov
pop
sub
fs
stos
mov
push
inc
in
inc
frstor
fnstenv
sbb
jp
loope
lahf
mov
inc
adc
int
mov
leave
pusha
rorl
insb
or
push
orl
std
and
sub
pop
call
mov
jge
sbb
or
mov
pop
mov
adc
mov
or
inc
pop
inc
imul
push
dec
popf
push
aas
xchg
bound
or
xlat
call
daa
mov
and
sbb
stos
mov
mov
add
fucomi
dec
cmp
lahf
inc
ret
mov
adc
call
xchg
mov
aas
imul
subb
movsb
xchg
mov
lock
xor
push
stos
jne
cmp
sarb
push
add
push
lret
lret
xor
xchg
adc
jne
cmp
dec
jecxz
sahf
sbb
ds
dec
or
and
cmp
clc
decl
jp
xchg
pop
ds
mov
cmp
std
stos
mov
push
insl
ret
sub
les
mov
stos
inc
dec
cmp
enter
rep
negl
rorl
int3
daa
mov
adc
das
repnz
pop
mov
lock
mov
aam
and
adc
out
cld
adc
sub
dec
lock
jnp
and
scas
push
sbb
push
lcall
xchg
mov
xlat
and
negl
test
popf
adc
stos
lea
push
les
insl
adc
xor
sti
repz
faddp
sub
sbb
inc
jle
cs
cmpb
mov
sub
inc
jle
sub
xchg
or
mov
or
out
bound
inc
push
pop
xchg
test
fs
fisubs
in
test
adc
lcall
or
jne
sub
testb
mov
fisubs
push
and
mov
addr16
mov
ja
push
test
scas
lahf
push
mov
jno
xchg
dec
add
or
ja
iret
imul
hlt
mov
pop
xor
push
pop
addr16
xor
cmp
mov
cli
inc
sub
adcl
gs
pop
iret
pop
jae
rcr
sub
push
pop
outsl
fs
loop
sbb
ss
push
pusha
inc
arpl
xor
lock
mov
psubsb
ret
xchg
addb
jae
sub
lock
rorl
mov
cld
lock
stos
lods
sbb
mov
shll
into
inc
imul
add
lods
divb
mov
xchg
out
jno
or
xor
jmp
mov
or
sub
lods
fnsave
jo
mov
adc
inc
sub
fists
imul
push
lret
push
inc
jnp
popa
xor
imul
mov
cmp
push
pop
fwait
es
movsl
pop
jne
call
and
xor
dec
xorb
pop
out
or
repnz
xor
push
or
ret
push
nop
jns
jns
mov
push
aas
xchg
mov
in
repz
lods
or
scas
mov
inc
add
hlt
pop
mov
sbb
push
data16
xchg
test
sbb
rol
dec
mov
cli
push
scas
inc
mov
fcmove
fildl
mov
push
mov
add
dec
xchg
and
leave
xchg
std
ret
xor
iret
lret
xor
test
jl
or
mov
pop
stos
es
xchg
lahf
lods
ret
add
add
or
mov
push
or
popf
pop
mov
std
mov
mov
push
mov
sbb
jg
mov
cmp
fsubrl
sti
and
push
cmpsb
xchg
push
addb
jns
push
push
test
xchg
dec
sbbb
in
mov
sub
rorl
add
xchg
pop
adc
xchg
push
mov
or
ljmp
leave
scas
sub
cmpl
jae
dec
jmp
das
mov
imul
and
int3
addr16
pushf
pop
pusha
out
imul
mov
ret
int3
popa
and
fdivl
add
mov
ret
sbb
cmp
je
jo
and
cmp
in
stos
lods
and
scas
xchg
inc
mov
xor
inc
cli
xchg
loopne
sub
lods
jp
pop
into
inc
arpl
sub
sub
jmp
inc
cmp
mov
bound
lods
and
push
je
lock
sarb
movsb
aas
pop
cli
sbb
fcomps
jae
cld
inc
jns
pop
xor
sbb
push
iret
test
sub
aam
mov
dec
jge
xor
cwtl
aas
cs
stc
xor
stc
popa
lods
inc
test
inc
subb
int
cmc
les
push
mov
roll
incl
cmpsb
xchg
cs
jnp
adc
sbb
mov
sbb
ja
into
loop
sbb
fwait
and
call
xchg
jns
xchg
xchg
into
sbb
pushf
enter
std
sbb
test
mov
ljmp
mov
push
lea
repz
cmpsl
mov
jg
les
stos
sahf
push
enter
dec
gs
rclb
push
movsl
inc
into
jmp
jae
jecxz
and
imul
ret
lock
into
out
sub
repz
or
push
inc
les
jg
jge
cmp
movsb
addr16
push
imul
loope
sar
and
pusha
and
lods
jecxz
dec
adc
push
sub
add
pop
call
xchg
jge
cwtl
ljmp
ljmp
jne
lahf
rclb
add
jmp
lds
push
push
mov
mov
xchg
pop
add
mov
or
test
call
stos
cmp
push
jne
in
scas
lahf
out
mov
in
jge
les
loopne
negl
and
mov
jl
fldenv
faddl
loopne
fldt
push
push
mov
int3
mov
jbe
popa
clc
lcall
sub
aad
sub
pushf
shl
xchg
adc
cltd
jl
sub
dec
pusha
ja
ret
sub
push
loope
or
aaa
or
mov
fwait
xor
sbb
mov
mov
fs
aad
mov
xor
sub
xor
aam
dec
in
or
push
adc
jmp
popa
mov
fbld
int3
mov
cmp
push
dec
xor
xchg
lock
xorb
roll
sub
cltd
xor
aad
shlb
inc
idivl
testb
cmp
aad
cmp
out
push
shll
shll
sbb
inc
mov
push
mov
dec
loop
out
sub
rol
aaa
mov
incb
bound
adc
jno
out
mov
mov
mov
jnp
push
outsl
push
xchg
stc
and
push
mov
xor
and
inc
push
es
push
jl
pop
pop
mov
sbb
fcomp
cs
addr16
in
ss
pop
daa
mov
ljmp
popa
insl
lods
jae
push
push
ljmp
sbb
loopne
int
fdivp
out
lock
shrb
fwait
push
cmpsb
sub
jb
or
jge
xchg
mov
add
xchg
dec
sbb
jo
dec
fwait
pop
push
hlt
sub
lods
jno
add
subb
xor
data16
inc
cwtl
mov
push
or
aaa
lods
pop
lret
fldenv
mov
add
daa
or
pop
xchg
and
cli
and
mov
in
sub
test
mov
lods
addr16
es
cmc
shll
test
add
mov
pop
push
outsb
or
dec
push
lahf
js
push
add
mov
push
movsl
cmp
push
mov
ret
sbb
jg
inc
sbb
inc
pop
and
fwait
xor
mov
leave
push
jne
dec
stos
push
inc
push
fidivs
jmp
pusha
aaa
pushf
inc
adc
inc
mull
push
scas
fsubr
adc
sub
cmp
shll
pusha
inc
in
shl
cld
xchg
out
jl
adc
inc
sbb
xor
cld
add
stos
cltd
movsl
dec
loopne
cmp
jo
sbb
xchg
dec
cltd
lea
and
adc
jb
in
into
scas
push
shll
incl
clc
pop
test
test
arpl
repz
scas
call
mov
pop
fidivrl
movsl
pusha
daa
mov
jae
rorl
test
mov
cmp
jmp
jmp
or
cld
push
mov
rcll
mov
pop
adc
inc
fmul
jg
lea
and
fcoml
push
fptan
ss
loopne
xchg
int
jbe
cwtl
sub
mov
ja
out
insb
je
or
scas
sbb
jmp
jmp
adc
mov
insb
loopne
div
insl
in
je
stos
movb
fsubrl
or
pop
mov
dec
ret
push
xor
push
mov
scas
push
jle
jae
push
enter
divl
sbb
xchg
add
and
or
and
push
imul
jo
sbb
push
bound
xchg
lea
xchg
out
jno
lods
mov
scas
mov
sbb
andb
out
imul
in
mov
les
fiaddl
iret
lcall
mov
sub
push
les
nop
imul
insl
je
fsubrs
dec
nop
bound
push
push
cmp
jae
shl
mov
cmp
push
rcl
aaa
fidivl
push
ret
aaa
clc
mov
lret
or
cmp
and
loop
loope
bound
imul
mov
add
int3
fsubs
xlat
outsb
push
adc
xchg
or
or
sbb
or
scas
xchg
filds
repz
cmpsl
xor
push
xor
lods
hlt
jno
stc
scas
lea
xchg
mov
or
lret
xor
loop
cli
mov
mov
test
inc
sbb
mov
jg
push
cmp
nop
push
mov
mov
pop
call
xor
stc
out
pop
out
fdivs
fbld
xchg
stc
jbe
vpaddd
cmp
int
into
je
xchg
mov
sbb
popa
bound
jmp
sub
mov
out
test
push
or
sti
xor
loopne
or
call
lock
mov
xor
mov
cmc
cmp
push
mov
adc
push
out
mov
outsb
cmp
pop
pop
in
out
xchg
cmp
or
stc
push
outsl
loop
xchg
sbb
adc
or
adc
loopne
das
cmp
add
nop
pop
cld
mov
lcall
shrl
pop
mov
bound
in
sbb
pop
sub
cmp
lods
nop
and
sbb
inc
xor
mov
adc
hlt
mov
jnp
pop
inc
or
outsl
add
insb
sub
insb
push
stos
dec
mov
mov
imul
or
add
in
cmp
sub
lds
add
push
mov
mov
push
jnp
fdivs
lahf
leave
fldenv
cmp
jmp
das
mov
ret
ret
xchg
cli
cld
or
loop
sar
int3
jle
imul
movsl
cmp
and
fwait
ljmp
addr16
je
scas
inc
jne
sarl
movsl
rcr
pop
repz
std
mov
sub
jne
test
jae
dec
movsl
sub
loope
jnp
mov
jne
mov
cmp
movsb
cmp
mov
hlt
push
fs
push
outsl
test
fistl
imul
ljmp
out
aam
fidivl
mov
lret
push
sub
sarl
mov
scas
aas
push
push
arpl
push
xor
xchg
sub
push
add
mov
dec
jg
jg
push
xchg
sbb
cmp
adc
add
and
push
outsb
cwtl
sub
pop
sub
sti
inc
movsl
cmpsl
mov
or
jno
jo
dec
lahf
push
shrb
push
jge
out
mov
inc
pop
imul
outsb
fiadds
testb
mov
or
push
sbb
push
jle
or
adc
mov
arpl
sarb
ds
shrb
pop
lea
imul
das
push
push
iret
loop
in
or
jecxz
outsb
sub
pop
lock
xor
gs
cmpl
dec
stos
pop
jg
mov
cmc
ss
addr16
std
pop
fs
jns
dec
pop
hlt
bound
add
pop
jl
cmp
pushf
arpl
aas
push
push
jge
mov
sub
push
sarb
jg
lds
mov
outsl
aam
pop
or
pushf
jb,pn
pop
jnp
dec
enter
jne
mov
jecxz
mov
mov
cmpsb
lret
pop
push
ja
call
jp
mov
mov
arpl
adc
cs
lret
sti
dec
xchg
sub
or
jns
cmp
sub
hlt
dec
icebp
add
add
jl
pop
mov
sub
rcrb
xchg
dec
push
negl
daa
mov
jmp
mov
std
add
ret
add
mov
push
roll
jnp
xlat
cmp
in
ret
fistps
push
pop
xor
mov
inc
sbb
jle
sub
inc
pop
xorb
data16
lods
jnp
jle
mov
movsl
add
mov
inc
lods
mov
jns
clts
popf
andb
cmpl
jge
sub
or
leave
mov
ficoms
xchg
movsl
cmp
int3
pop
stos
or
fs
imul
insb
jp
aas
lods
xlat
inc
test
xor
je
or
ja
movsl
test
push
test
xchg
dec
aad
insb
lret
mov
shll
lock
jmp
pop
dec
jl
cmp
cld
pop
adc
ljmp
mov
or
lahf
sbb
xchg
pop
stc
xor
pop
movsb
shl
xchg
dec
xchg
push
or
rcrb
and
mov
add
je
mov
jne
inc
push
mov
pop
lret
sbb
mov
xor
lret
push
cmc
stos
sbb
cmp
cmp
mov
add
cs
push
jl
sub
push
pop
or
sub
in
cmpsl
or
push
loopne
testl
aam
pop
sti
or
sub
ret
scas
pop
aaa
or
jmp
pusha
call
inc
jns
insl
lock
nop
ds
add
movsb
dec
add
testb
mov
sub
pop
xchg
or
stos
lods
movsb
cmp
int3
subb
arpl
sbb
jp
xchg
out
add
push
cmp
test
inc
xchg
cmc
jmp
push
ficomps
and
push
add
cld
shll
or
in
call
lret
fstps
add
shlb
xor
jmp
sub
mov
pextrw
gs
xchg
scas
jmp
dec
pop
cmpsb
je
xchg
inc
mov
pop
mov
icebp
or
out
testl
hlt
inc
lods
addr16
mov
jns
push
ja
cltd
dec
rcrb
sub
adc
jle
cmp
ret
pop
lea
ret
mov
mov
lods
push
mov
ds
aad
pop
pop
daa
pop
sbb
and
add
cmpsl
icebp
mov
cs
pop
mov
push
cli
in
xchg
add
push
push
rcrb
mov
mov
pop
std
aad
xor
push
inc
inc
xchg
add
sbb
sub
sahf
or
popl
mov
jne
adc
jmp
insb
xchg
inc
repz
js
add
adc
add
out
cld
stos
mov
inc
dec
pushf
mul
mov
sahf
sub
jl
cltd
jbe
jge
pop
ret
insl
pop
pop
jp
cmp
cmp
rcrl
scas
lds
in
mov
sbb
inc
sbb
dec
popa
sub
pop
or
sub
mov
sub
cmp
jmp
sahf
pop
in
lret
xchg
sbb
sub
and
push
fcoms
mov
sarb
mov
test
pop
jg
in
cwtl
lock
xchg
dec
inc
sahf
sbb
inc
xor
insb
int3
sub
mov
push
sti
inc
inc
adc
xchg
cmp
pop
and
jg
jl
fwait
mov
jns
lea
and
mov
lret
xchg
in
ret
call
cmpsb
mov
faddp
or
je
and
xchg
adc
lock
mov
test
or
repnz
sbb
pop
int
adc
es
aam
arpl
out
ds
and
insl
insb
dec
out
cli
fsub
movsl
dec
das
mov
mov
cmp
aam
outsb
out
mov
add
cmp
pusha
subl
push
xor
insl
dec
mov
mov
shll
cmp
xchg
out
movsl
nop
ds
sub
aas
cmp
out
xchg
pop
pop
shlb
xchg
jns
fiadds
or
scas
push
in
push
out
popf
mov
jb
or
sbb
scas
pop
add
mov
inc
int3
jg
insb
cvtpi2ps
fldenv
sarb
or
popa
jp
and
mov
xorl
pop
mov
lods
scas
rclb
adc
iret
push
sbb
fs
xchg
mov
jns
pop
mov
decl
stos
sarl
insl
and
int3
int3
sbb
fcmovbe
shl
add
add
cmc
mov
fidivrl
cmpsb
lods
push
call
sbb
cli
xchg
lea
movsb
mov
pop
lds
mov
in
mov
ss
repnz
pop
scas
and
iret
mov
lahf
aas
pop
mov
loop
mov
enterw
cmp
dec
jecxz
sub
mov
dec
mov
cmp
pop
push
cli
aam
add
lcall
adc
dec
xchg
test
out
jge
fcompl
sub
jl
adc
hlt
cmp
imul
adc
mov
push
and
mov
mov
das
pop
call
hlt
dec
in
xorb
adcb
out
ja
je
or
inc
nop
mov
jmp
push
mov
std
out
int3
in
xchg
fisubrl
sbbl
addr16
inc
shrb
jge
push
clc
adc
pusha
test
imul
cltd
std
mov
clc
repz
sbb
push
cmpl
jae
inc
iret
andb
jne
punpckldq
mov
insb
scas
cmpsb
push
ljmp
pushf
inc
fcmovbe
in
stc
addl
cmp
jb
scas
std
inc
pusha
sbb
xchg
mov
add
in
test
daa
data16
stos
in
dec
mov
loop
lods
lock
cmp
outsl
xor
aas
adc
cmp
lds
in
cmp
ja
mov
mov
popa
dec
std
jbe
and
jb
rorb
subb
sub
push
test
add
pushf
repnz
repnz
adc
add
mov
adc
mov
cmp
aad
push
sbb
adc
cmc
mov
pop
icebp
inc
add
push
sub
lds
arpl
repz
call
cmp
int3
pop
fcoms
mov
mov
mov
icebp
fwait
subl
xchg
fsubl
jbe
movsl
sub
call
mov
add
xchg
int
add
dec
aad
mov
pop
adc
cmp
mov
fistpll
dec
lods
mov
lea
mov
stos
fucom
xchg
ficoms
sub
lea
pop
xchg
rcrl
ljmp
cs
cmpsb
mov
fwait
jge
ficomps
loop
loope
and
inc
loope
fucomip
sarl
sub
adc
sbb
aas
cmp
mov
call
mov
test
jecxz
add
cwtl
push
aas
fwait
sbb
aaa
das
leave
push
or
jg
dec
es
add
cmp
clc
or
pop
loopne
dec
pop
aad
jae
lret
mov
movsb
int
pusha
cmpsl
sbb
pop
add
mov
xchg
aas
or
push
mov
inc
jbe
jmp
addr16
call
jge
jo
push
je
and
and
push
imul
mov
add
leave
jge
call
loop
push
outsl
push
aad
imul
or
cltd
xchg
repz
dec
push
mov
dec
push
test
imul
xor
loop
inc
out
lret
inc
nop
movsb
std
shll
gs
sbb
pop
mov
pop
sub
sub
xchg
pusha
je
jnp
loope
test
bnd
mov
dec
and
or
inc
sbbl
mov
sbb
push
mov
std
popa
cmp
mov
hlt
push
inc
inc
cmp
test
out
fcom
cmp
adc
aaa
inc
mov
fcmove
and
flds
test
fld
loope
jle
jns
ja
lahf
incl
inc
push
mov
fcom
sub
dec
mov
scas
push
jns
cmp
push
fsubr
mov
mov
pop
and
xor
jne
test
jecxz
sarl
jnp
je
sub
mov
mov
mov
fcmovnb
mov
mov
in
ds
xchg
xchg
pop
je
push
add
test
fcmovne
pop
adc
insb
push
xchg
and
fucomi
fs
test
mov
push
lret
mov
sahf
mov
into
fsubl
lcall
cmpsl
cmp
repnz
popf
stos
mov
jns
test
es
stos
clc
mov
scas
out
push
xchg
sub
and
push
xchg
dec
test
jb
movsl
filds
outsb
je
sub
mov
and
ljmp
or
sbb
mov
pop
out
xchg
jle
dec
sub
xchg
jae,pn
lret
xchg
mov
dec
shr
cmp
inc
cltd
mov
push
mov
je
cmp
dec
je
adc
sahf
lods
mov
mov
int3
adc
test
dec
lea
jl
mov
mov
or
leave
mov
add
sar
and
sbb
mov
adc
mov
mov
btr
sbb
insb
push
hlt
pop
and
fsubl
in
jns
lcall
mov
mov
inc
popa
lds
loop
inc
pusha
mov
mov
sub
push
out
arpl
hlt
icebp
add
sub
pop
sbb
sub
lcall
lret
rcrb
mov
jge
iret
mov
les
sub
and
js
lret
jp
data16
push
mov
es
add
dec
fmul
jecxz
jne
and
adc
aas
gs
xor
and
xchg
lods
test
jb
clc
dec
jae
mov
insl
sbb
inc
ljmp
jmp
fimull
jmp
xor
xlat
shrb
mulb
out
out
xchg
fisttpl
lods
cltd
xor
xor
outsl
gs
cltd
pop
xor
pop
mov
fidivs
clc
mov
orl
rorb
jl
jnp
enter
sahf
mov
push
test
and
iret
inc
idivl
jp
or
xor
add
xchg
out
pop
xor
xchg
hlt
cmp
mov
test
cmc
mov
es
xchg
adc
test
and
sub
aad
aam
cs
inc
leave
ror
mov
pop
movsl
push
xlat
jecxz
and
sti
gs
inc
mov
sbb
push
jge
popa
ds
adc
in
aam
mov
pop
cmc
stos
mov
pop
mulb
int3
pop
jb
lret
into
jg
or
scas
pop
aaa
jp
subl
jnp
dec
out
push
mov
mov
outsb
mov
fidivl
lods
dec
subl
pushf
dec
fldl
push
push
mov
xchg
pop
loop
mov
pop
adc
sbb
jl
mov
movsl
or
es
icebp
xchg
mov
jne
js
push
mov
test
fcmovnbe
mov
lods
mov
negb
cmpsw
pop
jle
je
les
fwait
cmc
in
mov
std
testb
cmpsb
sub
pop
repz
dec
adc
je
cli
setge
sbb
gs
mov
inc
rol
idivl
aaa
scas
mov
sub
leave
in
sarl
in
fisubl
adc
mov
fnstenv
inc
cmp
mov
imul
sarb
dec
je
imul
push
add
xor
fcoms
jo
sub
jp
and
mov
jno
into
int3
adc
rcl
pop
adc
ret
pushf
xor
pop
dec
fbld
mov
shll
outsb
lcall
push
jmp
test
lods
dec
jno
bound
or
lret
iret
dec
aas
or
mov
js
loop
pusha
xchg
cmpb
mov
mov
inc
lods
jecxz
lea
scas
repz
add
jb
outsb
add
rorb
popf
imul
je
stc
sbb
adc
incl
dec
sub
inc
xor
add
ret
pop
mov
sbb
and
movl
xchg
std
add
push
iret
jnp
mov
int3
aaa
lds
shld
daa
test
inc
inc
aad
arpl
fs
lods
mov
sub
dec
pop
rcrl
out
bound
nop
jge
mov
mov
sbb
insl
xchg
pop
aaa
dec
pop
aaa
pop
mov
out
sar
jmp
insb
vmulpd
orl
fldt
fbstp
shrl
dec
ret
lods
xor
sub
int3
shrl
or
jb
jno
fwait
jb
es
and
loopne
sbb
shl
cmp
sbbl
cmpsl
in
sub
mov
sub
mov
ficoms
mov
xchg
shll
lock
scas
cmp
ret
cmp
es
mov
add
push
push
and
fnsave
jae
in
jo
pop
adc
dec
divb
adc
ret
repz
xchg
sub
loope
mov
ss
jns
fdivr
loopne
inc
inc
imul
aaa
cmc
xchg
fsts
inc
mov
in
les
push
mov
mov
stos
popa
out
insb
sub
sahf
iret
idivl
lods
jo
pop
out
fwait
movsb
jne
pop
ret
mov
mov
pushf
fisubrs
pop
xchg
movups
mov
dec
cli
rcrl
iret
cwtl
jmp
sub
xchg
andb
jmp
sbb
cmp
js
bnd
loope
lcall
or
cwtl
ljmp
mov
mov
sub
and
cmp
mov
aaa
mov
cmc
subb
xchg
add
mov
pusha
stc
lea
js
sub
dec
sbb
lods
add
mov
adc
jb
insl
add
dec
aas
mov
mov
outsl
adc
mov
sub
mov
lock
jmp
movsb
out
add
pop
fucom
cmpsb
cmpsb
popa
popa
cmpsl
adc
mov
pop
lret
jecxz
addr16
pop
dec
dec
xor
nop
inc
push
xchg
fbstp
adc
or
mov
ret
ret
or
ret
data16
shrb
add
sbb
mov
or
mov
inc
popf
sbb
ret
jmp
gs
loopne
imul
outsb
movsb
enter
fisttpll
popf
push
popa
and
divb
mov
mov
cmp
imul
out
add
sub
cwtl
mov
jle
lods
cmp
pop
imul
inc
mov
jnp
mov
out
pop
call
jbe
aas
or
rol
pop
mov
push
test
pop
push
movsl
jp
inc
int3
insl
add
fs
jecxz
mov
imul
loope
cmpsl
popf
popa
mov
push
insb
sbb
or
es
sarl
lret
jns
pop
icebp
cmp
inc
popf
nop
add
xchg
mov
xor
arpl
test
mov
jbe
daa
or
sub
dec
pop
stc
insl
or
leave
movsl
mov
add
add
and
jb
and
aam
mov
cmp
shlb
in
mov
fs
jae
pop
enter
mov
and
and
pop
mov
mov
gs
sbb
rcrl
lods
pop
and
adc
mov
fwait
xor
pop
cli
daa
cmp
mov
mov
leave
rcrb
jae
aas
mov
mov
sti
stos
jns
and
in
mov
dec
es
repnz
gs
sub
mov
push
jecxz
mov
add
xor
mov
or
sahf
and
stos
inc
adc
mov
push
dec
cmp
insb
mull
mov
subl
fcoms
mov
mov
mov
mov
cmp
lea
popa
sar
mov
jle
sbb
push
sbb
loop
sub
or
popf
pop
dec
mov
dec
cmp
sbbb
icebp
mov
push
mov
cs
dec
cmp
and
lds
popf
mov
repnz
stc
ds
push
rclb
jmp
inc
repnz
push
scas
fstps
aaa
push
out
fwait
loopne
inc
loop
inc
stos
dec
mov
pop
daa
jne
out
in
cltd
test
inc
push
outsb
sub
xor
loopne
cmpsl
mov
mov
xchg
xchg
mov
mov
jns
in
in
push
pop
jge
in
lret
clc
or
sub
testb
jne
mov
mov
sub
xor
or
aaa
mov
dec
xor
test
xchg
mov
mov
mov
call
sbb
jo
fcomp
and
ljmp
popa
test
sbbl
imul
xchg
in
or
mov
sbb
scas
mov
xor
add
popa
xchg
out
pop
cwtl
pop
aas
call
imul
sbb
dec
incb
dec
pop
push
xchg
cmpsb
cld
lds
mov
lcall
push
push
out
xor
pusha
mov
xor
dec
adc
lret
sti
pop
mov
outsb
cmp
and
cld
xchg
mov
das
and
insl
xchg
cmp
mov
sbb
mov
pop
add
mov
insb
add
mov
inc
outsb
lahf
enter
out
xor
insb
or
bnd
sbb
xorb
or
fnstenv
fdivrp
jmp
fldl
mov
data16
sub
int3
lods
and
sarb
fcompl
std
sub
rolb
lahf
aaa
lds
ret
sub
movsl
cmp
sub
add
scas
les
aaa
mov
sub
fdiv
test
or
loope
or
xchg
and
dec
adc
jbe
lods
popa
push
push
push
popf
and
fistpl
sbb
int
subb
jae
ret
pushf
pop
gs
or
popf
loopne
icebp
and
shlb
push
cld
scas
xchg
cs
fs
pop
icebp
push
or
shlb
lods
loop
test
ja
sbb
cmp
cmp
icebp
rorb
and
loop
addr16
or
arpl
iret
rolb
popf
loop
jno
jns
test
lahf
push
loopne
popa
jg
into
es
in
mov
lret
or
push
and
rcr
mov
ljmp
ds
mov
mov
fwait
xor
call
inc
xlat
in
cld
stos
std
lret
std
mov
iret
jbe
sti
dec
mov
outsl
inc
enter
test
adc
adc
lcall
cltd
add
xchg
jnp
mov
jae
push
cwtl
sub
inc
inc
je
sub
ret
rcrb
ljmp
adc
mov
mov
lcall
scas
inc
xlat
cmp
xor
in
sti
jecxz
stos
xchg
add
xchg
popa
and
push
dec
faddl
mov
add
cmpsb
jb
xlat
and
jns
jge
lahf
xchg
dec
inc
mov
ds
cwtl
push
das
add
mov
dec
xor
dec
loop
dec
shl
push
xor
aaa
lods
movl
je
data16
pushf
rcll
pop
sbb
dec
aad
and
mov
add
inc
xlat
inc
lods
or
cmp
in
push
scas
add
sbb
shrl
addr16
imul
insb
pop
insl
jle
imul
inc
scas
sarl
int3
push
sbb
mov
xchg
mov
inc
pushf
ret
daa
add
jmp
arpl
int
std
ljmp
movsb
jae
mov
add
imul
cmp
lds
jb
push
xchg
push
movsb
lretw
lds
and
adc
cs
mov
mov
shll
popf
dec
xor
mov
ficomps
mov
insb
ficoms
jns
cmp
jmp
movsb
loope,pt
fiadds
adc
ja
insl
inc
adc
mov
mov
mov
or
movsb
cld
dec
xchg
mov
jns
ret
outsl
lock
roll
je
or
negb
pop
mov
push
add
jmp
jl
int3
mov
sarl
inc
dec
cli
in
fiadds
xor
sbb
sbb
js
sub
xchg
lods
pop
sub
or
outsb
sbb
sahf
cwtl
mov
xor
inc
sub
xchg
fidivrl
xor
sbb
jns
and
rclb
int
insb
mov
nop
sahf
cmp
sarb
test
test
and
and
mov
out
cltd
jo
sbb
adc
adc
or
mov
or
iret
pop
mov
je
imul
xor
push
xchg
aam
rcrl
leave
icebp
insb
mov
xchg
adc
rorb
fsts
loope
sub
aas
in
adc
cmpsb
jno
sbb
dec
out
xchg
in
data16
push
clc
sahf
jp
sbb
sbb
sbb
fwait
push
sbbl
mov
jns
mov
cmpsl
loope
cli
jns
int
and
int
lret
pop
lds
jno
and
jge
testb
fs
adc
ss
loopne
popa
add
lcall
inc
cwtl
push
aas
js
in
sub
lret
mov
xor
in
popa
sbbl
mov
movsb
cmp
int
ret
mov
pusha
push
out
jecxz
mov
sahf
lret
sbb
in
lods
jo
mov
inc
cmp
dec
push
nop
and
lret
stos
enter
dec
xchg
ja
out
ja
mov
dec
cmpsl
add
fnsave
add
or
dec
subb
mov
adc
loope
testl
popf
xchg
or
pusha
aam
fistps
int3
dec
ret
shl
hlt
outsb
sbb
adc
jns
cmp
pop
ja
push
fdiv
xchg
pop
repz
mov
sub
lahf
xor
push
in
mov
sub
jle
sbb
cmp
push
sbb
jbe
rcrl
popa
or
sbb
push
adc
pushf
mov
lcall
add
mov
jae
sub
xor
ret
cwtl
push
in
sub
add
in
jl
test
nop
xchg
out
push
add
and
insb
lcall
aas
adc
inc
fld
mov
mov
or
xchg
cli
inc
repz
dec
ljmp
mov
pop
add
mov
push
push
js
sbbl
sub
bound
inc
rcrb
les
jns
adc
mov
xchg
dec
iret
loop
aas
xor
ffree
push
push
jp
add
int
in
mov
cmp
mov
push
inc
cwtl
jo
cs
cld
xchg
cmpsb
inc
add
jb
fsubs
les
cli
xchg
sub
add
jle
push
push
out
sub
pop
add
jp
ja
lods
and
lds
mov
pop
mov
std
jb
leave
movsl
sarb
ljmp
cmp
jg
lea
add
sbb
sbb
cmpsl
dec
sub
xchg
add
or
pop
dec
push
lahf
int3
arpl
dec
lods
add
outsl
push
outsl
loope
jo
pop
fdivl
movsb
aas
lret
ret
and
sbbb
pop
mov
outsb
or
or
lea
fwait
mov
jg
addb
xchg
jb
fstl
jo
std
adc
or
cmp
jmp
jle
fistps
jo
jl
mov
sbb
int3
stos
clc
nop
push
sbb
faddl
cmp
or
or
cmp
jg
popa
cmpsl
cwtl
and
inc
aas
aam
test
scas
cld
daa
int3
mov
push
cmpsb
arpl
addr16
pop
repz
ljmp
bound
and
mov
push
ret
lds
jge
lcall
mov
mov
mov
dec
cmp
xchg
adc
jg
stos
inc
lock
imul
push
aad
mov
lock
mov
lahf
mov
es
mov
in
push
push
mov
and
sbb
cwtl
pop
in
in
clc
leave
repnz
int
pop
shlb
fisttpl
outsb
out
pop
ficoml
enter
sub
fisttpl
out
adcl
pop
into
inc
pop
insl
add
icebp
lods
and
mov
inc
and
in
push
cmp
fs
cld
fsubrp
loopne
sbb
push
in
sti
out
cmp
mov
pop
fisubrs
cmp
mov
js
cmp
push
sbb
cwtl
cs
aam
dec
pop
fmul
leave
rorb
pop
addr16
jl
xor
push
jae
and
push
icebp
or
jo
rorl
pop
lods
mov
mov
cmp
rcr
ss
jmp
mov
jl
es
mov
insb
push
stos
dec
popf
xlat
outsb
rorb
lret
jp
aas
push
inc
sub
dec
xor
notl
out
jge
stos
pop
fucom
add
dec
loope
push
call
inc
out
xlat
call
sbb
ja
inc
cmp
and
repnz
hlt
adc
movsb
stos
fadds
aad
call
shll
push
data16
subl
xchg
test
fldl2t
nopl
xor
arpl
xchg
cmp
pop
imul
xlat
push
insl
cwtl
into
push
sub
push
mov
push
outsl
or
lods
and
pop
das
mov
std
in
clc
dec
repnz
aad
arpl
mov
dec
push
xchg
arpl
imul
mov
xorl
lock
aad
outsl
arpl
call
cmp
add
push
imul
sbb
loopne
enter
ja
jnp
push
out
dec
lods
lret
and
aaa
aam
jmp
mov
jmp
or
adc
xchg
cmc
fs
outsl
ret
inc
fimull
mov
mov
cmp
roll
and
daa
inc
rcr
mov
jg
xor
jl
push
mov
and
sbb
push
in
xchg
into
adc
fmuls
dec
mov
jg
addr16
push
mov
jns
es
jnp
mov
jns
lods
jge
in
ljmp
and
inc
and
xor
xor
lds
push
add
inc
push
mov
cmp
xor
add
fmulp
or
popf
leave
jo
scas
push
add
or
popf
jge
ficompl
push
or
hlt
push
mov
add
and
dec
jns
mov
out
aaa
jbe
das
xchg
xchg
ja
lret
data16
and
ljmp
jo
int
lods
mov
dec
rcl
mov
call
pop
outsb
add
les
xor
add
push
cmp
daa
adc
push
lret
mov
call
push
fidivrs
roll
add
scas
jmp
repz
inc
pushf
xor
aam
pop
cwtl
mov
xchg
rorl
movsl
add
pop
in
xchg
in
dec
dec
rorb
pop
xchg
sbb
lods
and
or
mov
or
aam
mov
loop
mov
xlat
pop
mov
fnsave
mov
mov
mov
bound
out
sbb
pop
scas
mov
push
pop
mov
cwtl
xchg
scas
inc
enter
pushf
out
or
pop
push
test
push
xor
dec
ffree
xor
inc
dec
pop
dec
mov
xor
out
loopne
sub
iret
gs
xchg
pop
pop
sti
in
mov
ret
out
jmp
into
arpl
mov
dec
push
jge
adc
adc
adcb
lea
cld
jb
dec
jno
loop
mov
hlt
shlb
mov
xchg
xchg
sti
jbe
dec
add
mov
adc
test
pop
mov
test
in
imul
jno,pt
rorl
mov
push
out
cmp
xchg
test
fcomps
out
pop
imul
nop
shl
sbb
mov
or
jp
dec
and
bound
notb
pavgb
push
adc
outsb
mov
push
sub
dec
jle
mov
movsl
and
mov
roll
movsl
sub
cmc
cmp
dec
ret
outsb
shll
add
cmp
jns
and
adc
lods
inc
cmpsl
jae
fisubl
xchg
sti
lea
mov
sbb
or
xchg
add
pop
daa
jne
cmp
pop
xchg
sub
nop
divb
cmc
jmp
dec
mov
or
stos
pop
and
rcrl
push
inc
test
mov
fsubs
or
out
mov
movb
add
daa
sbb
test
dec
xor
push
push
mov
leave
fxch
mov
pop
xchg
mov
std
data16
xchg
pop
lcall
imul
pusha
jae
sbb
mov
sub
mov
outsl
daa
std
pusha
loope
rcrb
cli
pop
aam
test
movsb
xor
jbe
ds
mov
xor
pop
cmp
cltd
pop
sbbb
sub
cmp
sahf
dec
pop
cmpsb
lock
rcl
xor
mov
dec
add
loope
jne
inc
xor
push
aad
js
enter
sbb
repnz
pop
test
xchg
xor
movsl
sbb
fstps
aad
sbbl
cmp
mov
cmp
lds
xchg
loope
bound
icebp
cmp
mov
dec
cmp
jbe
sbb
hlt
mov
into
jmp
cmp
xchg
jno
and
pop
es
outsl
jp
and
mov
cs
xchg
test
popf
fnstenv
arpl
jl
fidivl
inc
adcl
rcrl
fdivs
int
xchg
sub
lret
and
and
push
cmp
fildl
je
dec
push
dec
lds
mov
xchg
xor
icebp
sahf
inc
psubsw
sub
sbbl
mov
lds
add
mov
addb
sub
dec
shll
scas
and
dec
sub
pop
rcr
pop
mov
jbe
and
and
icebp
mov
fsubr
andb
add
ret
stos
and
or
and
cmp
push
mov
loop
cmp
mov
movsb
sub
or
inc
lds
movsl
dec
loop
sbb
jge
jns
dec
and
lock
pop
inc
iret
data16
push
mov
imul
movl
icebp
repnz
sbbb
mov
mov
orl
inc
sub
jns
icebp
into
lahf
jle
adc
adc
mov
mov
xor
icebp
pop
movsl
xchg
cwtl
pop
je
aad
mov
pop
adc
sub
add
adc
jo
das
adc
xchg
mov
fistpl
fists
mov
icebp
mov
mov
das
popa
adc
cmp
insl
dec
mov
stc
or
je
push
or
sbb
mov
push
leave
aad
xor
xchg
sahf
aam
inc
leave
and
xchg
mov
movb
xchg
rorb
push
shr
dec
inc
inc
add
push
cmp
ljmp
sbb
cmp
pminub
leave
test
push
push
mov
arpl
cmp
fldenv
ds
sbb
js
add
fidivrs
push
and
cmp
test
inc
sbb
testl
add
adc
in
nop
push
cmp
cmp
or
call
out
jp
icebp
roll
jnp
bound
aam
cmp
pop
cmc
xor
mov
rolb
pop
sub
push
pop
icebp
jne
sub
fiaddl
orb
mov
and
cmpsl
subb
sub
or
cmp
mov
popa
jge
mov
rcll
movl
add
pop
cmp
jns
outsl
lret
mov
jae
jo
inc
fisttpll
aam
adc
and
cmc
popa
call
push
call
in
push
xchg
cmp
loopne
fs
cmp
cmpsl
and
mov
mov
repz
lret
pop
lock
pop
nop
mov
push
hlt
pusha
out
sub
inc
aaa
push
sub
jge
mov
or
adc
lods
dec
nop
setg
xor
sbb
fucomip
lods
cld
notb
fistps
mov
jmp
out
imulb
rol
xor
jg
pop
std
mov
mov
dec
and
aad
jae
ss
outsb
xchg
ds
adc
adc
scas
add
popf
push
out
pop
pop
or
into
jmp
push
pop
dec
loop
rol
aam
decb
js
fsubs
mov
mov
push
inc
aaa
xor
push
out
xchg
mov
mov
popa
push
adc
mov
push
push
inc
pop
int
icebp
push
adc
ljmp
rcll
push
scas
shlb
stos
xor
push
cltd
mov
lret
mov
int3
or
xor
stos
inc
mov
push
daa
gs
pop
push
xchg
subl
jnp
shlb
test
pusha
loop
adc
loope
cmpsl
sub
out
nop
push
push
xchg
ljmp
dec
cmp
pop
lret
aaa
ja
xor
pop
push
popa
dec
lods
cmp
add
cwtl
scas
repz
mov
push
inc
cmpsl
cmp
pop
pop
mov
cmp
xchg
mov
ret
ret
cmp
pop
fsubrs
add
out
xor
and
fnstsw
pusha
push
jbe
jp
js
xchg
lods
inc
push
inc
sarb
inc
pop
or
xor
sub
outsl
cs
push
inc
sub
aaa
das
cwtl
inc
fs
lds
pop
fcomps
inc
pop
scas
test
push
add
jae
les
jne
mov
ret
jae
dec
aaa
ret
scas
xor
call
cmp
xor
xchg
add
loopne
xor
roll
out
cmp
je
ret
jle
sbb
mov
mov
ja
pop
lahf
push
fsubs
push
hlt
pusha
repnz
js
sahf
lods
dec
dec
pop
lea
test
cld
dec
pop
insb
int3
out
mov
or
imul
ljmp
jae
sbb
jae
cmp
data16
push
or
add
ret
pop
mov
and
jge
int
sti
std
notl
xor
addl
aaa
shll
xor
mov
mov
jg
lret
push
xchg
lcall
mov
std
and
adc
insl
add
les
roll
and
arpl
lahf
lds
shr
or
jmp
pop
jo
stc
xchg
push
jmp
dec
mov
mov
dec
in
mov
shll
pop
cmp
push
push
and
sbb
jg
jo
push
pop
inc
xchg
int
dec
xchg
adc
xor
xchg
iret
push
jmp
lods
stos
movsl
js
push
nop
lea
in
mov
push
dec
cld
push
mov
rcrb
aas
push
ja
movswl
push
pop
push
popf
rcl
pusha
mov
pop
arpl
and
xchg
sub
jl
mov
js
lods
sbb
sbb
shrl
pushf
xchg
pushf
sbb
or
sbb
sub
inc
in
jmp
mov
mov
push
mov
call
lods
cltd
sub
ss
xor
dec
push
mov
sbb
shrl
sahf
icebp
cmpsb
ret
repz
fnstsw
mov
inc
out
sub
cmpsb
mov
bound
cmp
rol
and
and
push
add
ret
fidivrl
test
test
repz
sub
sub
cmpsb
test
mov
test
xchg
stos
out
aam
ficoms
mov
cmp
es
jmp
daa
and
mov
pop
dec
dec
ljmp
mov
mov
or
jnp
adc
les
mov
sbbb
mov
rcll
cmpsl
in
adc
addr16
std
adc
popf
dec
ret
stos
or
jecxz
pop
xor
add
ret
fwait
xor
inc
gs
jmp
push
or
mov
arpl
xchg
sbb
push
lea
dec
in
js
shl
stos
jge
pop
jb
add
arpl
sub
adc
cmpsl
rorl
sbb
dec
xchg
and
jb
jae
or
sbb
aad
hlt
cmp
mov
push
lock
add
and
inc
andl
inc
out
push
mov
rcll
pop
outsb
in
lret
fucomi
int3
mov
ds
mov
fucomp
out
lret
sbb
pop
mov
jle
xor
add
inc
and
dec
jo
cmc
mov
push
shrl
cmpsb
nop
mov
mov
xor
call
iret
leave
mov
cld
push
or
jnp
jge
xor
push
jo
inc
fisttpl
movsl
cmp
frstor
test
mov
sbb
outsb
sbb
jo
mov
scas
mov
pop
in
xchg
fdivrl
xor
test
bound
nop
ret
xchg
mov
clc
pop
roll
xor
loop
sub
out
mov
xor
push
bound
ja
dec
inc
out
dec
incb
cmp
pop
rcrb
xchg
mov
cs
adc
mov
fnstenv
xchg
fnstcw
mov
lret
nop
xchg
ret
cmpsl
sbbl
pop
fbstp
xor
jns
nop
lahf
dec
rclb
inc
pop
icebp
popf
mov
loopne
sarb
sub
popf
push
mov
sub
stos
pop
jle
add
xor
scas
cli
xchg
add
and
lea
pop
add
pop
adc
dec
inc
xchg
jp
in
popa
and
lcall
xchg
inc
stos
repz
fwait
xlat
sub
inc
pop
jnp
loope
jno
daa
xchg
movsl
fstpt
or
cmpsl
in
sti
in
insb
push
jae
jmp
cmpsb
cmp
mov
stos
rclb
ljmp
repz
aam
pop
cmovns
pop
mov
adc
int
cmc
out
cwtl
inc
fs
loopne
cwtl
pop
test
sub
xor
rcrb
add
popf
loope
cmpsl
ror
aam
fistpll
push
cmpsb
repnz
out
adc
jne
rcrb
jbe
repz
cs
aas
pop
push
and
loope
int3
cs
enter
sbb
and
dec
not
rcl
push
cmc
mov
pop
out
pop
jl
xchg
daa
pop
cmc
dec
xchg
mov
rcll
pop
fwait
jg
xchg
push
loopne
add
jb
fwait
push
and
push
test
pop
in
adc
popl
ljmp
cld
imul
push
imull
sub
popf
testb
jo
mov
js
movsl
push
xlat
mov
or
insb
mov
jge
sarb
pop
loop
dec
sbb
adc
push
dec
pop
and
dec
in
cwtl
fsubp
cmp
repz
out
test
adc
rclb
adcl
rol
repnz
nop
sub
or
cwtl
xor
pop
call
mov
add
or
addr16
xchg
ds
negb
cmpsl
addr16
outsl
mov
out
fisubs
or
sbb
jmp
or
call
or
sub
dec
cwtl
mov
push
pop
gs
mov
dec
mov
push
push
movsl
push
push
jne
pop
inc
loope
dec
jle
pop
jg
insb
nop
mov
gs
pop
fsubr
clc
jp
movsl
mov
jne
or
fsubrs
jmp
out
jmp
scas
cmp
jmp
in
divb
jo
jbe
loope
mov
xor
sbb
fcoml
cmp
in
out
adc
hlt
pop
jmp
or
les
lcall
rcl
aad
push
sarb
mov
inc
lret
sti
arpl
loop
xchg
mov
jl
repnz
sbb
es
repz
cld
jne
int3
sub
xchg
inc
in
imul
mov
adc
xchg
push
push
xchg
mov
push
es
testb
sub
adc
dec
shlb
shrb
pop
pop
stos
fs
xor
aam
xor
movsb
cmc
es
or
aad
fdivrs
mov
call
adc
sub
jnp
adc
sub
fcoml
mov
jge
sub
decb
adcb
pop
pop
jmp
push
xor
sbb
sub
ss
lock
jnp
pop
mov
andb
xor
dec
fimuls
xor
pop
cmpsl
test
rclb
inc
rcrl
sub
gs
xchg
mov
out
sbb
test
mov
enter
push
jmp
mov
stos
pop
mov
icebp
bound
out
push
pop
repnz
mov
or
fcoms
fisttpll
mov
inc
pop
fsubrs
or
pop
insl
dec
mov
inc
outsb
mov
cwtl
inc
lahf
lea
xchg
and
xchg
test
dec
rol
rclb
shrb
push
in
adcb
notb
movb
sbb
repz
xor
into
je
push
mov
push
sbb
xchg
shlb
fstl
hlt
or
xchg
fiadds
cmpsl
scas
adc
bound
bnd
xor
outsl
sti
cmp
and
push
sti
sub
fbld
xchg
add
push
jecxz
fistl
mov
pop
sub
mov
dec
fistps
or
int
aad
xor
and
imul
cmp
mov
dec
shrb
and
popa
cmp
daa
adc
adc
mov
jmp
mov
push
sbb
loope
mov
in
sbb
mov
lock
sub
dec
xchg
mulb
lea
sub
jne
fbstp
mov
cmp
and
lahf
imull
out
or
test
cmp
cmp
jmp
cli
daa
ret
and
mov
push
xor
outsl
aad
xor
lahf
ret
pop
shll
adc
loope
imull
fcomps
mov
adc
sub
xchg
push
xlat
hlt
pop
mov
scas
jge
testl
xor
lret
xchg
out
pop
mov
lret
add
mov
or
lahf
cmc
stos
sub
das
lcall
insb
adc
push
mov
cmp
pop
xchg
push
mov
xchg
dec
xor
call
xchg
and
popf
ss
js
xor
pop
pop
add
fsubrs
pop
ds
xor
and
ret
repnz
or
popf
mov
sbb
push
js
adc
mov
adc
mov
jbe
jp
push
aas
das
pushf
xchg
adc
sub
xor
mov
lret
outsb
ret
stc
and
nop
daa
rolb
pop
into
divb
push
pop
nop
fsubp
cmp
into
cmpsb
lock
out
pop
imulb
insl
stc
cmp
insb
pop
add
pusha
sub
out
mov
fidivl
mov
inc
and
xchg
repnz
les
mov
icebp
mov
pop
cwtl
or
pop
xchg
push
pop
inc
enter
in
cmp
push
add
xchg
repz
mov
xchg
dec
fsubs
add
notl
add
ljmp
test
lcall
jle
ret
aaa
push
lret
cmp
ja
jo
jg
jb
mov
sub
xchg
jo
dec
mov
dec
rcr
jb
nop
xchg
stos
jae
adc
jbe
mov
rcrl
add
cmp
mov
push
push
mov
pop
rcrl
mov
sub
loopne
mov
fnstcw
cmpsl
xorl
clc
jae
mov
in
repz
loope
jg
jle
in
mov
les
adc
sbb
and
stos
mov
push
int3
pop
mov
sti
or
or
and
mov
ss
mov
js
aaa
std
xchg
gs
sbb
mov
and
mov
inc
call
xchg
pop
xor
fnsave
mov
in
mov
sbb
jo
xchg
pop
push
push
lods
outsl
xorl
mov
test
adc
mov
mov
movsb
aam
mov
and
push
lea
les
jbe
inc
and
inc
mov
pop
mov
xor
and
xchg
cmp
dec
daa
xor
jle
mov
mov
lds
and
cmp
shll
js
sub
testl
ret
rcll
push
cld
js
adc
in
push
lcall
cli
or
push
mov
or
mov
xor
rcrb
es
lea
fsts
push
mov
mov
pop
jne
pushl
roll
stos
xor
xor
push
arpl
fwait
push
mov
jp
dec
pop
jle
test
push
in
adcl
add
addr16
or
ss
cmc
cltd
std
sbb
mull
idiv
je
pop
add
or
xchg
cs
scas
dec
cmpl
mov
into
pop
jb
xchg
xchg
sub
pop
lods
pop
test
push
xchg
minps
cltd
jns
xchg
mov
jle
and
test
test
push
and
and
push
lods
sub
int
aaa
fistl
adc
push
jbe
xor
inc
add
adc
sar
xor
pop
or
xor
roll
or
scas
cmp
jne
jne
movsl
and
push
xchg
add
cmpsb
adc
adc
inc
or
and
push
cmpsl
cmp
test
dec
or
cmp
xor
push
daa
cmp
jae
out
lods
push
xchg
cs
pop
test
popl
mov
sbbl
add
mov
movsb
ja
pop
sahf
sub
iret
in
lret
and
push
imul
and
in
fisubs
jge
and
dec
and
add
outsb
dec
in
inc
cmpsl
idivl
sarb
repnz
cs
es
adc
xchg
inc
xor
jno
dec
dec
scas
cmp
inc
lahf
iret
aad
mov
ret
js
inc
pop
adcl
into
ljmp
push
jb
sbb
popa
out
xchg
push
and
jae
and
push
insb
mov
fdivl
pop
iret
orb
xor
jne
in
xchg
pop
rclb
push
or
out
inc
andl
int
cmpsl
dec
pop
push
cmp
xchg
jg
push
scas
rorl
jne
add
mov
bound
sub
inc
addr16
inc
loopne
add
ljmp
xlat
mov
xor
test
stos
sbb
inc
or
faddl
sub
xlat
insb
lods
pop
fcomip
add
repz
sub
sahf
xchg
adc
add
mov
or
sub
mov
mov
mov
stos
imul
shrb
mov
xchg
sbb
into
add
mov
ds
aaa
push
bound
mov
test
push
pop
mov
loopne
pop
mov
in
pop
sahf
sbb
mov
shll
push
std
or
fwait
sub
xor
cmp
or
pop
arpl
nop
jl
mov
add
scas
sub
cld
push
dec
mov
ljmp
push
jns
xor
ja
add
call
in
push
jo
stos
test
mov
in
repz
cmc
push
and
das
adc
ret
ds
jo
addr16
sbb
mov
in
jns
fst
mov
cmp
push
out
add
xor
out
mov
les
rclb
mov
sbb
loop
push
outsl
inc
out
movsl
mov
sahf
sbb
add
es
lea
mov
mov
sub
test
test
dec
or
pop
xor
cmpb
jge
enter
negl
gs
les
mov
jge
xchg
cmp
rclb
lret
stc
nop
out
stos
push
and
int
daa
out
and
mov
lret
xor
addr16
jno
loop
dec
inc
shll
insb
jg
rcrb
add
pop
cmp
mov
insl
inc
test
and
xchg
lods
aad
pop
int3
outsl
out
add
pop
push
jmp
sbb
push
xor
sar
out
xor
leave
int3
test
les
lods
sub
loopne
scas
outsl
stos
fiadds
push
cli
pop
scas
inc
ret
lahf
mov
ret
lret
push
sbb
mov
addr16
iret
adc
sub
lcall
jns
jp
movsl
call
fnstsw
cli
data16
shll
sub
rcr
call
xchg
mov
push
sti
sbb
cltd
and
movb
adc
fsubr
push
lret
xlat
loope
das
cmp
or
das
fiadds
inc
mov
push
int3
js
cmc
fildl
cmp
scas
cwtl
sahf
incl
int3
xchg
arpl
cs
lods
out
add
frstor
rolb
cmc
pop
mov
adc
inc
pop
lret
fisttpll
lods
and
jmp
mov
add
xchg
xchg
mulb
lea
dec
dec
nop
cmc
dec
dec
xlat
js
sub
lock
cmp
dec
add
ss
stc
or
aam
mov
jmp
imul
xor
xchg
pop
mov
pusha
sbb
mov
in
push
cli
and
lea
mov
jl
lret
xchg
push
insb
add
or
mov
fstpl
test
lret
mov
popa
clc
ja
cltd
and
orl
xchg
fnstenv
orl
inc
bound
ljmp
shll
rol
movsl
mov
xchg
sub
out
aam
aad
mov
and
ficomps
inc
shlb
ljmp
pushf
cmp
adc
xchg
mov
lahf
cs
pop
inc
add
mov
mov
sti
sar
pop
or
or
mov
push
lods
mov
mov
jno
lea
sub
movsb
pop
pop
popa
daa
xchg
add
xchg
scas
repnz
sbb
outsb
cld
outsl
push
push
into
pop
fucom
inc
mov
mov
scas
fsts
fsubrs
es
xchg
xor
inc
repz
call
fistpl
incl
roll
mov
pusha
dec
pop
xchg
cld
add
pop
nop
mov
mov
mov
repz
and
mov
cli
xchg
test
mov
leave
jmp
pop
sub
and
adc
testb
int
and
int
inc
and
inc
je
pop
pop
inc
les
insl
loopne
dec
jle
bound
mov
adc
data16
push
in
imul
pop
sahf
and
movsl
test
adc
jne
fdivrs
push
adc
push
imul
pop
dec
jle
je
push
mov
inc
enter
aaa
inc
sbb
sub
stc
mov
dec
scas
pop
fldenv
loopne
mov
jnp
add
mov
in
push
loop
jp
xor
jae
call
out
popf
mov
add
cmp
mov
subb
xchg
sub
std
daa
push
out
pop
push
ffree
imul
gs
sbb
mov
add
xchg
xor
dec
pop
and
pop
andb
xor
mov
pop
insb
insb
lock
lret
jbe
divb
mov
sahf
xchg
clts
in
pop
lods
mov
inc
test
push
fcoml
sarl
push
push
ret
shrl
sub
nop
or
sbb
dec
arpl
inc
imulb
inc
mov
leave
fxam
mov
popl
fstpt
loope
test
jl
cmp
repnz
push
jp
lock
cmp
fwait
cld
ret
sbb
sbb
in
push
inc
mov
nop
ds
push
sbb
push
out
push
lret
mov
sbb
or
dec
xor
adc
ret
in
imul
repz
inc
lods
dec
clc
aas
cmpsb
or
cmp
mov
notb
ljmp
mov
ljmp
cld
andb
mov
jnp
mov
enter
in
jg
es
pushf
outsl
add
mov
loop
ss
pop
cmp
xchg
imul
cmpsb
mov
leave
push
ljmp
inc
in
xchg
loop
call
dec
jne
lcall
ljmp
and
pushf
mov
mov
push
rcll
mov
jns
or
sti
add
clc
dec
dec
dec
loop
lods
xor
iret
dec
dec
les
arpl
mov
mov
and
icebp
ljmp
mov
jbe
in
dec
pusha
inc
xchg
rorl
pusha
inc
test
loop
xor
and
lods
mov
stos
jge
add
mov
aam
and
mov
cmc
mov
ret
shlb
inc
sbb
pusha
push
lods
daa
xchg
xchg
add
push
movsb
andl
test
and
lods
mov
sbbl
xlat
out
out
and
cmp
lods
and
iret
es
mov
sbb
add
add
xor
and
sarb
sub
mov
pop
jecxz
aaa
stc
xor
in
lcall
cwtl
fstps
cs
cmp
jb
xchg
sbbl
lods
sbb
shl
js
das
stos
cmp
xor
inc
cmp
push
mov
pop
divl
pop
mov
push
test
mov
or
rcrl
mov
movsl
mov
sub
out
ss
and
int3
pop
pop
mov
out
push
sub
push
fldcw
push
lods
int
mov
je
xor
int3
arpl
enter
ljmp
mov
fiaddl
xor
cmc
dec
mov
pop
rorl
lods
mov
or
fcmovnu
les
aam
ret
rcll
rorl
xor
cmp
lds
jp
jl
fimuls
jl
in
cmpsl
adc
cli
push
adc
sub
mov
jmp
mov
push
dec
sbb
shlb
inc
inc
bound
int
or
hlt
loop
cwtl
mov
inc
decb
les
inc
push
jmp
divl
inc
push
arpl
flds
ss
jecxz
fnstcw
cmp
push
ja
xchg
jo
test
xor
hlt
inc
lods
mov
pop
lock
mov
mov
cli
sub
pop
cmpsb
push
dec
xorl
clc
inc
fwait
or
and
sub
movsl
call
outsb
push
sbb
scas
pop
fildll
jg
fdivs
out
push
imul
pop
or
pop
pop
insb
mov
arpl
pop
sbb
cmp
pusha
lahf
ss
mov
adc
pop
cwtl
stos
jg
adc
scas
mov
outsl
stos
fcmovu
mov
popa
lods
jg
adc
push
sbb
push
add
xor
pop
xchg
ficoms
dec
xchg
out
loope
xor
int
cli
incb
mov
jns
mov
jnp
and
dec
adc
mov
jle
sub
fnstenv
mov
aam
fxch
adc
inc
fildll
mov
lock
daa
sbb
pop
test
sbb
scas
inc
jne
mov
pop
push
inc
arpl
ret
cmp
in
xchg
shll
jmp
push
pop
dec
dec
sti
pop
scas
sub
lods
cmp
add
nop
inc
testl
cmpb
mov
sub
and
adc
fisttpll
pop
adc
add
jbe
dec
lods
mov
dec
xchg
mov
les
fidivrs
pop
inc
gs
xchg
popa
lock
cmpsl
pusha
mov
add
sti
cmp
cmp
ret
cmp
mov
cmpsl
lret
cmpsb
cmp
mov
ljmp
scas
add
mov
pushf
pop
iret
lods
sbb
jge
lea
lods
adc
lock
lock
nop
mov
test
ja
dec
xchg
adc
mov
rclb
add
jmp
add
mov
fwait
lret
dec
xlat
lds
aad
dec
and
lods
jg
mov
lea
aas
bound
lret
pop
cmp
xor
xor
cld
push
std
aas
sbbl
aam
nop
cmp
push
push
mov
outsb
push
inc
pop
sarl
mov
push
daa
mov
pop
aam
faddl
push
shll
dec
ss
jbe
xchg
mov
lock
popa
pop
push
insb
call
mov
movsl
out
pop
pop
ret
aaa
jp
aaa
insb
outsb
mov
push
nop
arpl
dec
divl
jo
push
fwait
dec
rorl
dec
push
cmp
sbb
arpl
aam
mov
sub
jnp
push
xor
pop
out
daa
test
dec
outsb
xchg
mov
pop
in
cmp
movsl
xor
cwtl
mov
pop
repz
pushf
push
in
pop
add
fisttps
nop
into
call
sbbl
inc
xor
insl
movsl
mov
jno
fisubrs
adc
shr
in
nop
cwtl
int
mov
dec
orb
cs
or
cmp
mov
lea
mov
push
push
pop
fs
movsl
dec
movsb
xchg
lret
push
and
aaa
push
je
pop
stos
xchg
shlb
pop
jne
mov
jp
scas
xchg
repz
jne
inc
jg
cld
rcr
jl
jne
loopne
stos
add
dec
loope
mov
aam
inc
xchg
mov
rcll
lods
inc
cs
cmp
pop
aam
mov
iret
xor
push
xchg
test
pop
pusha
sub
sbb
pop
sub
pop
push
cld
aad
in
arpl
out
les
xchg
adc
xchg
jb
je
push
cmp
xchg
imul
out
jns
mov
mov
inc
mov
jle
imul
out
ds
adc
cmp
dec
adc
push
lahf
in
gs
std
jno
adc
call
outsb
add
mov
fdivl
jnp
push
cld
sbb
test
ret
adc
bound
cmp
test
and
cmp
mov
inc
clc
or
sbb
jne
xor
lods
mov
out
dec
xor
jl
and
jle
dec
cmp
dec
shl
jp
pop
enter
xchg
cmpsb
cmp
daa
mov
fidivl
incb
xor
and
rclb
mov
jg
mov
nop
lods
hlt
jp,pt
dec
mov
inc
pop
mov
mov
mov
inc
xor
rcrb
lds
mov
insl
or
fistps
cltd
js
mov
and
dec
inc
popf
inc
in
out
inc
lea
and
addr16
es
mov
sbb
pop
pop
in
rorl
and
lret
pminsw
gs
call
mov
out
sub
xchg
adc
lds
es
pop
insl
cmp
popa
stos
out
aad
stos
inc
cmp
roll
xor
scas
cmp
fs
inc
add
sub
dec
jb
xchg
mov
adcl
push
push
pop
push
fnstsw
nop
sbb
mov
mov
or
cli
loope
cld
add
sahf
pop
andl
shrb
inc
pushw
sbb
xchg
xor
out
jecxz
mov
mov
lods
pop
jp
or
ljmp
faddl
pop
out
movsb
jbe
aam
or
cmp
mov
pop
inc
ret
sub
or
pop
push
push
aas
mov
and
mov
loope
jne
cmp
into
push
std
test
fwait
sub
hlt
insl
cwtl
stos
sahf
push
pop
ret
loope
mov
and
sti
mov
aam
add
repnz
sbb
add
ljmp
sbbl
insb
push
dec
adcb
jae
mov
sub
mov
arpl
out
imul
ret
lret
inc
xchg
out
test
mov
add
xor
shll
cltd
call
cltd
test
cmp
cmp
sbb
or
jecxz
mov
mov
nop
cmp
lcall
repz
cmovge
push
mov
mov
fdiv
push
cmc
shll
in
inc
pop
fwait
ja
insl
loopne
sbb
ja
repz
imul
ret
or
cmc
xchg
mov
repnz
xchg
mov
jg
jle
in
jl
sbb
test
fcmovne
and
leave
mov
sub
fs
mov
pop
mov
mov
jle
jne
mov
xchg
cmp
cmp
adc
or
rorb
pop
mov
idivb
fwait
shrb
lahf
shll
sub
dec
and
xchg
push
scas
sub
int
nop
inc
push
inc
jae
mov
mov
mov
adc
aam
xchg
fadds
jg
ljmp
mov
jmp
push
xchg
pop
xor
aad
cltd
and
lea
jnp
clc
shrl
and
into
fisttpll
or
nop
stc
cli
dec
iret
ss
mov
icebp
or
cwtl
scas
lock
and
and
imul
inc
fnstenv
sub
fists
fildl
mov
jmp
jg
div
pop
add
or
cmp
bound
in
adc
sbb
cwtl
orl
fsts
sub
aas
push
test
fs
inc
or
xchg
rcl
arpl
ja
addb
mov
mov
out
xchg
nop
sub
out
jae
pop
add
aad
in
inc
lods
inc
ss
icebp
inc
adc
xor
cmp
add
ud2
in
andl
cmp
sub
add
mov
cwtl
int3
aas
dec
dec
xor
jge
enter
xor
nop
icebp
data16
mov
sub
bt
ljmp
cs
pop
sbb
or
adc
test
pop
mov
paddsb
leave
in
or
jle
outsl
sub
lods
pop
dec
dec
dec
scas
jns
cmpsl
cmp
jmp
sub
push
mov
les
adc
push
pop
push
adc
sbb
xchg
jbe
adc
imul
je
rcrb
andb
adc
pop
mov
jns
mov
pop
insb
xchg
dec
mov
dec
mov
es
sub
iret
es
add
sahf
push
lods
dec
popf
sbb
fs
adc
inc
into
sub
sub
cmp
mov
pop
lea
jbe
cmc
ljmp
clc
aaa
popa
dec
mov
and
cmp
adc
dec
and
add
sub
pop
icebp
dec
adc
dec
adc
stos
jecxz
icebp
out
in
cmp
cmc
xor
std
ds
out
mov
mov
test
mov
stos
stos
pop
int
test
addr16
dec
push
pop
fbld
es
and
out
pop
xor
mov
sub
js
shrb
push
mov
pop
aad
rcrl
sub
insl
sbb
push
aas
outsb
jae
popf
or
hlt
lock
popa
scas
sub
shll
cmp
in
jle
clc
sahf
pop
push
in
inc
jns
adc
adc
cmp
ficoml
jno
mov
lods
orl
mov
pusha
mov
pop
xor
add
loopne
xor
test
rolb
and
hlt
jle
inc
daa
ret
push
lcall
cltd
xor
fwait
icebp
xchg
inc
sub
sbb
ljmp
push
add
mov
and
lret
mov
sub
fsubrs
pop
sub
dec
pushf
cmp
push
movsb
ret
xor
jne
pop
add
pop
push
lods
test
js
sbb
mov
jns
sbb
adc
inc
sbb
inc
push
cmp
faddp
gs
aad
dec
nop
mov
aaa
adc
ret
xor
in
lds
popa
lods
stc
sbb
inc
adc
dec
inc
pushf
subl
outsl
jbe
pop
push
mov
jle
mov
inc
xchg
jnp
mov
inc
int
push
in
inc
fisttps
mov
mov
push
hlt
adc
xor
stos
inc
cmpsb
and
fisubrs
test
sbb
push
int3
test
jg
xchg
loop
leave
outsb
add
mov
imul
push
mov
dec
nop
dec
repz
cmc
inc
ljmp
out
stc
add
lahf
push
jns
cmp
in
inc
or
mov
or
and
sbb
mov
or
or
sbb
adcb
sahf
sub
pop
inc
pop
mov
je
outsl
and
pop
in
adcl
dec
pop
cltd
dec
scas
fsubl
in
mov
lret
cli
aad
dec
daa
add
push
inc
adc
sub
jecxz
sbb
scas
lds
xchg
lea
imul
sarb
sub
movsl
inc
cwtl
cmp
dec
std
push
pop
jmp
push
out
mov
mov
inc
fnstsw
mov
pop
and
popa
mov
in
mov
popf
loopne
pop
out
or
movsb
pop
or
add
sub
test
jp
push
and
fsubrs
andl
adc
cli
inc
adc
pop
adc
sbbl
or
adc
test
push
fisubl
ss
out
jle
or
add
xchg
mov
inc
dec
icebp
inc
pop
leave
jo
mov
clc
test
mov
and
mov
addr16
leave
push
mov
arpl
loopne
mov
inc
in
in
aad
add
les
inc
push
pop
rclb
mov
fsubl
sub
sbb
sbb
scas
pop
mov
and
push
je
add
lea
mov
gs
sbb
xor
ljmp
aaa
fcoms
cmpsl
dec
out
clc
ret
add
mov
mov
inc
fcoml
cmp
push
dec
sbb
int
pusha
xchg
into
push
scas
stos
inc
sbb
mov
jmp
push
lock
shrb
add
rcrl
movsl
xor
jge
in
xchg
dec
inc
fnstcw
mov
in
packuswb
pushf
fxch
xor
cli
pop
inc
sub
les
jecxz
jno
pop
push
jmp
pop
out
pop
sbb
andl
add
inc
xor
sbb
lahf
sub
mov
mov
loop
pushf
mov
test
out
addr16
xchg
mov
cmpsb
dec
loopne
cmp
mov
dec
or
xchg
leave
jnp
test
adc
sbb
out
sbb
and
in
push
mov
mov
xor
fsubs
cmp
test
movsl
icebp
lds
imul
aaa
lds
cmpsl
push
mov
add
jns
out
xchg
and
cmp
xchg
lea
es
movsl
cld
imul
inc
mov
frstor
mov
imul
ret
mov
add
inc
test
outsb
cmp
js
add
jo
cmc
pusha
jle
xchg
adc
sbb
pop
mov
in
orb
iret
or
push
test
mov
mov
mov
out
filds
add
cmpsl
mov
jo
add
fwait
dec
inc
cld
popl
jmp
loop
and
add
mov
adc
jg
es
popa
das
imul
jae
pop
scas
jno
pop
pop
jmp
or
jnp
imul
jo
add
scas
mov
mov
lock
pop
jg
out
jns
test
lret
adc
lahf
push
mov
shl
pop
sbb
and
jg
movsb
mov
push
arpl
subl
sbbl
jno
and
arpl
iret
jp
mov
dec
mov
sub
mov
aam
inc
pusha
or
aaa
test
mov
dec
mov
repnz
mov
xchg
or
es
rcl
pop
shrb
xchg
bound
and
adc
push
dec
jo
xchg
mov
cltd
xor
add
pop
int
or
mov
xchg
push
jge
addr16
mov
aas
add
lods
and
es
xor
cmp
pop
xchg
or
lea
or
fnstsw
clc
out
imul
movsl
in
lods
fimull
sbb
or
cld
pop
inc
mov
xchg
bound
pop
and
nop
mov
xchg
push
pushf
in
dec
in
add
imul
xor
out
rolb
shr
mov
sbb
sbb
rorl
mov
or
bnd
push
test
out
sub
movsl
or
mov
sti
sub
sub
mov
pop
mov
jne
jns
dec
stc
push
ljmp
arpl
rol
int3
sub
xchg
sahf
push
xchg
push
loope
xchg
pop
sub
xchg
dec
push
fdivrl
cmpsb
popf
test
sbb
jae
lea
cli
cmp
add
jb
cwtl
scas
jg
sbb
pop
lds
push
in
sub
test
aas
je
or
push
subb
daa
lcall
daa
lret
addl
inc
dec
lock
loopne
lods
aaa
add
addr16
sbb
insl
mov
enter
std
lods
mov
mov
sbb
hlt
nop
mov
xlat
icebp
xor
and
arpl
lock
dec
xor
cmpsl
out
sbb
dec
decb
xchg
mov
or
aad
adc
js
fwait
and
dec
adc
dec
ss
repnz
add
and
insb
sbb
into
jo
test
iret
loop
in
adc
out
fwait
rcrb
inc
lea
fiaddl
adc
xchg
push
sbb
push
aaa
mov
mov
pop
pop
mov
pop
dec
popa
dec
push
sbb
jp
mov
rol
or
fnstcw
rcrb
push
inc
mov
loop
cmp
sbb
out
data16
repnz
fiaddl
inc
stos
sbb
fildl
fldt
sbb
jg
push
insl
inc
lahf
out
repnz
sti
push
cltd
ljmp
arpl
hlt
or
bound
shlb
sbb
sub
sbb
xor
jl
cltd
mov
add
jb
adcl
les
mov
rcrb
icebp
insl
cmpsl
adc
and
aam
cli
lcall
push
in
mov
mov
das
jg
in
pop
add
ss
shl
add
idiv
sub
fwait
sbbl
adc
and
and
jle
cmp
int
cltd
pop
popf
pop
movsb
pop
pushl
outsl
ss
mov
cmpsb
xchg
testb
ss
ficoms
lret
mov
shlb
cwtl
dec
loopne
out
push
ljmp
fucom
inc
jne
ja
gs
aaa
imul
xchg
clc
nop
or
mov
pop
fiadds
sub
adc
jnp
add
pop
popf
push
push
cmc
andb
jmp
mov
mov
xor
xor
repnz
dec
dec
push
into
pushf
cs
push
int3
sbb
cltd
insb
sub
mov
xchg
jge
jle
inc
sub
shll
xor
push
pop
xor
fists
xchg
push
jl
push
bound
inc
mov
push
fisttpll
and
pushl
movsl
or
sbbl
mov
fcomi
mov
test
push
aas
cmp
sub
inc
fimuls
dec
fnstenv
ljmp
aam
mov
mov
cli
pop
push
fildll
test
jecxz
jno
cmp
fidivs
fstpl
andnps
sub
xchg
dec
dec
xchg
inc
mov
mov
xchg
cld
or
mov
mov
xor
add
test
sahf
xchg
mov
inc
or
sbb
int3
jo
fsubl
add
sbb
dec
cmp
repz
stc
nop
or
callw
pop
data16
test
in
test
les
loop
mov
mov
push
aam
out
lcall
or
and
sub
jp
sti
add
pop
aad
stc
push
andl
adc
movl
pop
movsb
or
js
push
jl
cmp
xlat
pop
jo
cmp
out
ds
sub
jp
cmpsl
addr16
dec
sbb
iret
cmp
imul
inc
push
fwait
repnz
dec
addr16
jnp
aaa
inc
int
fwait
out
adc
lds
pop
sbb
sub
mov
cmp
add
fcomps
sub
cmp
lret
cmp
push
dec
popf
push
cmp
mov
addr16
aad
js
mov
mov
mov
mov
mov
aad
out
iret
jmp
add
cmp
adc
test
fcompl
mov
test
arpl
loopne
pop
xlat
icebp
shlb
in
shrl
clc
cmp
or
pushf
popf
hlt
mov
fld
pop
or
cmp
faddl
int
insb
sbb
pop
push
xor
addb
cwtl
push
push
leave
je
pusha
sub
push
add
stos
int
subb
or
insb
push
ljmp
call
fmuls
addr16
mov
negb
and
cmp
jg
cs
les
imul
add
pop
cwtl
rcrb
aaa
push
cltd
sub
dec
inc
and
mov
push
stos
and
bound
lret
mov
scas
jle
std
mov
pop
test
das
addr16
test
mov
cmp
jb
iret
xorb
inc
mov
in
xchg
or
lcall
mov
jno
into
stc
jne
imul
jnp
shld
in
or
ret
add
aaa
xchg
je
add
sbb
stos
dec
cmp
aaa
les
test
pop
lcall
outsb
insl
push
and
out
xor
xchg
shufps
xor
mov
bound
rorb
xchg
imul
inc
lock
and
fs
push
in
or
cmp
pop
repz
and
jl
inc
outsb
dec
scas
dec
in
jl
es
xchg
sub
sbb
adc
loopne
sbb
arpl
push
test
and
inc
xchg
ss
bswap
push
std
jno
push
lods
movsl
nop
xchg
out
inc
movsb
repnz
or
and
xchg
adcl
jne
es
scas
std
pushf
dec
cli
xchg
test
inc
sbb
movsl
sbb
add
sub
xchg
popf
sbb
das
xchg
sbb
mov
push
arpl
adc
fnsave
and
sar
xchg
mov
outsl
sbb
mov
adc
bound
push
int
sub
into
gs
sbb
sbb
imul
or
push
inc
pushf
xchg
loop
jecxz
push
call
ret
fadds
xor
pop
repz
xor
add
dec
mov
push
xchg
xor
in
ljmp
push
popf
ficoms
mov
add
pop
push
sub
xor
loopne
xor
mov
cmpl
push
aad
int
pushf
mov
jmp
imul
jns
jmp
test
mov
pushf
inc
inc
sub
adc
or
inc
pop
call
in
aam
xor
jae
aas
and
xchg
sub
sbb
pusha
sub
repnz
pop
call
mov
mov
cmp
dec
mov
inc
fidivs
lret
sbbb
mov
rolb
int3
jecxz
stos
xchg
pop
jns
rclb
fwait
jno
mov
stc
pop
imul
jae
inc
faddl
es
xchg
popf
mov
arpl
aad
mov
jecxz
adc
jg
pop
xor
roll
inc
push
lahf
fisttpll
xchg
fnsave
cmp
jmp
divb
das
rclb
in
xchg
xor
mov
jae
or
pop
jge
imul
pop
push
mov
jno
cld
pop
scas
jl
push
je
mov
rolb
mov
enter
cmp
out
adc
push
sbb
lcall
clc
cmp
xlat
sub
iret
mov
adc
test
adc
mov
push
jb
hlt
movsl
ret
std
dec
inc
movsb
rcrb
cmp
dec
dec
pop
mov
cwtl
push
xlat
and
inc
pusha
lret
cli
stos
add
mov
sbb
lcall
pop
xor
insb
inc
fcomp
cmp
divb
inc
cmpsl
fdivs
or
cmp
fwait
cltd
fldt
lret
sti
je
sub
popa
lahf
fisttpll
repz
mov
rol
mov
xor
iret
fs
lret
mov
ja
fnsave
test
pop
mov
mov
dec
jnp
mov
sub
pop
inc
cmp
insb
and
push
dec
stos
pop
xorb
xor
adc
dec
mov
jbe
push
mov
and
cmpsl
ret
pop
mov
leave
testl
xchg
inc
push
cmc
jmp
lds
adc
sub
jo
imul
and
cmpsl
push
dec
aaa
mov
shll
and
scas
mov
int3
out
add
add
jnp
xor
in
push
pop
cmp
cld
cmc
mov
ds
adc
jg
pop
push
outsl
add
loop
pop
in
imul
movsb
jb
loop
adc
call
repnz
xchg
adc
stos
fxch
xor
add
fs
loop
dec
dec
cli
adc
imul
cli
int3
push
ret
in
mov
lcall
pop
inc
pop
xor
ret
push
mov
out
xchg
test
sbb
or
mov
int
jmp
cltd
rcrb
add
mov
sbb
cmp
inc
sub
scas
xchg
negb
sbb
lock
movsl
inc
imul
lret
mov
push
idivb
mov
imul
xor
dec
mov
in
jno
inc
xor
xor
out
inc
loop
outsl
sub
xchg
sbb
adc
jmp
cmpsb
adc
push
cmp
shrw
daa
inc
fstpt
movsb
arpl
push
fnsave
stos
push
adc
mov
mov
rcll
push
mov
adc
std
mov
aas
loop
mov
push
add
xor
imul
test
daa
mov
xchg
pop
mov
cmp
ss
pop
jl
pop
mov
les
sbb
js
jns
xor
mov
sti
std
and
mov
add
and
addl
jbe
pop
daa
inc
xchg
inc
fisubs
std
xchg
xor
jnp
std
into
mov
add
out
adc
mov
or
jns
mov
gs
push
push
gs
cli
mov
data16
das
lock
in
push
test
mov
ret
les
xchg
dec
aam
mov
push
cmc
xchg
mov
inc
xchg
fdiv
or
mov
cs
sub
push
xchg
clc
or
dec
mov
xchg
push
xor
in
xor
fdivrs
sahf
repz
mov
and
inc
repz
jns
dec
mov
test
jg
jle
cltd
and
test
sbb
into
aaa
int
or
sub
pop
pusha
jb
xchg
inc
fadd
cld
call
mov
inc
loopne
pop
lods
mov
pop
fldl
push
es
fbld
bound
pop
aaa
clc
aas
lea
mov
dec
stc
mov
out
pop
cmp
mov
jns
inc
jmp
pop
lcall
bound
mov
cmc
mov
fnclex
push
fidivl
lods
ja
filds
stos
inc
sbb
arpl
int3
mov
pop
in
sub
mov
cli
xchg
and
iret
or
int3
jg
cmpsb
dec
add
xor
fisubl
dec
xor
popa
clc
pop
cmp
fmull
pop
movsl
lds
fldl
inc
call
ret
pop
xor
jnp
mov
pop
loope
xor
call
or
shrb
inc
pop
cwtl
test
push
fidivrl
int3
arpl
int3
mov
ret
rorl
imul
lds
mov
or
test
lahf
lret
sub
inc
jbe
aad
incb
cli
xchg
lods
inc
push
out
leave
jge
jae
cmp
sbb
daa
and
lds
add
xor
sbb
aaa
adc
movsb
xor
int3
push
gs
loop
inc
mov
aam
sub
rol
pop
dec
fisttps
jno
mov
cmpsl
insb
outsb
iret
popf
rcr
arpl
lret
aam
mov
xorb
jge
cld
push
fcomp
cwtl
lcall
pop
outsl
add
repz
fucom
xlat
repz
aad
fildll
cld
cmpsb
les
out
jae
orb
lods
cwtl
ljmp
leave
dec
mov
fcoms
lret
rolb
test
aad
and
pusha
push
test
nop
jmp
dec
daa
and
pushf
xor
and
or
and
push
cmp
mov
ja
sub
sbb
clc
push
xor
repnz
pop
cwtl
das
dec
or
adc
pop
mov
dec
and
cld
je
inc
loop
adc
add
out
into
sbb
add
adc
out
jp
mov
sbb
popf
dec
sbb
push
xchg
jns
inc
jne
xor
xchg
xor
pop
xor
sahf
and
push
ret
pop
jb
cmp
notl
mov
dec
mov
test
add
scas
das
jmp
aad
into
andl
and
xchg
cs
outsl
movb
add
jecxz
add
adc
call
mov
push
adc
ja
lret
push
fwait
adc
cmp
in
in
push
push
repz
cld
jnp
mov
xchg
pop
jb
aad
ss
rorl
scas
out
cli
out
in
test
and
inc
pop
lret
jae
inc
or
inc
sub
sbb
sub
push
sbb
mov
rcr
pmaxub
mov
shl
and
xchg
std
inc
xchg
test
xor
sbb
lahf
cltd
ja
pop
mov
jne
add
sbbb
push
adc
sbb
or
rol
adc
sub
jnp
fcmove
pop
in
addr16
icebp
mov
adc
push
adc
stos
push
sbb
xor
daa
inc
push
or
xchg
and
repz
mov
adc
add
stos
mov
int3
ss
add
mov
aam
shlb
xchg
stos
dec
lods
push
jne
aam
inc
inc
rclb
and
enter
test
sub
outsl
lahf
loope
sbb
ret
jbe
or
scas
push
jnp
pop
mov
push
pop
cmp
xorl
adc
add
mov
dec
pop
push
sub
iret
mov
les
in
push
sub
int3
int3
inc
in
in
loopne
dec
pushf
out
mov
xlat
fnstsw
adc
int
or
inc
pop
and
lret
arpl
pop
push
daa
pop
or
pop
test
push
test
jp
ljmp
pushf
cli
pop
sub
mov
imul
dec
sbb
dec
leave
mov
push
bnd
arpl
sub
leave
mov
icebp
mov
adcb
das
test
mov
divb
lock
xchg
scas
pop
sub
test
in
xor
xchg
xchg
push
mov
mov
mov
aad
addb
fisttpl
and
or
inc
andb
pop
cmp
cmp
sub
xchg
test
gs
int
data16
cwtl
push
jmp
mov
pushf
cli
cmp
mov
jl
faddl
scas
and
movsl
lods
adc
dec
into
inc
stos
add
mov
test
dec
fdivl
hlt
sub
lret
push
icebp
loopne
mov
insb
aam
dec
rorb
repz
inc
out
data16
push
sub
xor
cmp
es
jl
sbb
xchg
movsb
ret
cmpsb
adc
cmc
dec
xchg
scas
mov
fists
lds
xor
dec
loope
push
add
lock
jecxz
orb
outsl
xchg
push
mov
mov
push
sti
insb
mov
jp
fwait
xor
decb
mov
xor
mov
int
js
cmp
xchg
insb
jne
fcomps
movsb
aas
inc
and
push
rol
pop
add
push
mov
inc
fstpl
mov
fisubs
rcl
push
jecxz
repnz
data16
out
fwait
cmp
or
scas
dec
aas
xor
jl
xchg
outsb
sbb
loopne
andl
imul
xchg
fcom
addr16
test
pop
mov
pop
loopne
fimuls
in
mov
pop
or
adc
ljmp
and
cwtl
push
in
xlat
xchg
push
lahf
std
and
mov
fists
lods
dec
cli
mov
inc
pusha
imul
adc
popa
jns
mov
int3
or
xor
data16
jge
xchg
xchg
lods
mov
mov
rcrb
jmp
mov
dec
cmp
jg
inc
fisubrl
mov
aaa
pop
dec
mov
rcl
shr
adc
inc
dec
cmp
in
sahf
mov
lret
inc
icebp
dec
sbb
ret
dec
xor
pop
mov
test
xor
out
out
in
repz
sbb
addr16
aam
sarb
shll
xor
sbb
sbb
inc
cmp
fdivl
in
xchg
addr16
stos
mov
mov
cmp
mov
jmp
loop
xor
dec
fidivs
xchg
push
aaa
cltd
sub
movsb
sbb
orb
mov
push
cs
push
push
jns
cmp
adc
insl
cmp
pop
test
inc
out
cmpsl
dec
sub
aaa
lea
jbe
out
lret
aam
lret
and
icebp
add
or
lds
test
xor
popa
stos
push
jbe
fmull
inc
in
fisubl
adc
mov
mov
fs
in
sub
nop
daa
aas
inc
inc
nop
subb
pop
sbb
pop
cltd
cmc
aad
loop
out
repz
loop
mov
aad
pop
sbb
xor
jle
sbb
sub
xchg
inc
xchg
dec
push
mov
pop
mov
pop
insb
and
sbb
cmp
dec
pushf
mov
mov
or
out
clc
xchg
pop
ds
jne
inc
pushf
pop
mov
xchg
lret
add
mov
inc
dec
mov
add
outsl
lods
inc
adc
fwait
jmp
mov
adc
adc
sub
mov
add
and
mov
fsubrs
cmp
add
hlt
mov
mov
sbb
mov
popf
insb
jle
mov
xor
lcall
push
cli
mov
adc
rorb
imul
mov
arpl
loop
sbb
xor
loope
dec
ror
mov
mov
mov
mov
inc
leave
shrl
mov
xor
arpl
enter
inc
jmp
loopne
push
mov
into
rcll
cld
or
pop
xor
sbb
outsl
push
mov
sbb
cmpsl
jecxz
cltd
enter
xor
and
sub
or
imul
adc
pop
and
cmp
jae
or
pop
inc
xlat
cmp
jo
adc
clc
inc
push
jmp
ss
jge
mov
mov
xor
adcl
mov
cmpb
adc
fdivrp
sub
sub
out
sbb
mov
jecxz
fcompl
inc
aaa
int3
pop
scas
jp
loopne
es
mov
xor
push
push
mov
cmp
mov
lcall
xor
bound
push
and
push
xchg
jae
xor
stos
mov
ja
psllw
inc
fucomip
inc
cld
ffreep
rcll
fmull
andl
movsl
enter
mov
subl
mov
jae
out
jle
or
pop
fcomi
outsl
aad
mov
cmp
subb
fisubl
push
sub
push
and
mov
stos
jge
mov
loopne
lds
aaa
ds
test
pusha
pop
push
roll
push
nop
ss
push
nop
mov
out
push
mov
addb
push
xor
inc
push
lods
xchg
inc
repz
cmp
insb
rolb
cmp
xlat
jne
mul
into
sbb
rol
fadds
mov
jp
cmpsb
and
testl
or
idivl
mov
tzcnt
daa
inc
cmp
mov
js
dec
or
lds
nop
sbb
fchs
add
inc
leave
ds
orl
ja
jbe
jns
ljmp
cltd
and
mov
push
jecxz
sahf
sub
mov
push
mov
push
outsl
or
les
cmc
inc
pop
push
and
inc
loope
mov
cltd
dec
daa
fdivr
fs
gs
es
mov
push
ljmp
mov
xchg
xor
dec
loopne
stos
cmc
addr16
and
inc
sbb
add
stos
xor
mov
scas
push
neg
xchg
shll
or
mov
mov
dec
movsl
dec
mov
cmpsl
gs
mov
mov
stos
jg
stos
pop
add
inc
push
outsb
push
push
ss
lods
dec
cld
or
fcmovnbe
mov
cmpsb
and
mov
imul
mov
leave
enter
cmp
adc
cmp
cmpsb
cmpsl
stc
push
lods
sub
sbb
test
sbb
xchg
xorl
popf
scas
cmp
adc
cwtl
dec
pop
pop
jae
imul
cli
or
outsl
mov
xlat
daa
repnz
adc
dec
cmp
out
leave
sbb
push
xor
pop
pop
or
cmp
pop
loopne
dec
enter
pop
repz
mov
aaa
out
sarb
sti
pushl
test
hlt
sbb
scas
call
bound
mov
pop
idivl
mov
cmp
in
sti
rcl
mov
sub
jmp
pop
mov
lahf
mov
test
push
addps
lds
xchg
push
jae
popa
mov
inc
or
add
addr16
fistpl
sbb
ss
test
and
pop
mov
inc
adc
xor
fimuls
in
js
pop
adc
and
jae
push
fld1
arpl
stos
aas
xchg
inc
ljmp
shrb
mov
cmp
dec
incl
daa
jns
repnz
xchg
cmp
rcr
stos
xchg
xor
pop
fsubrl
lea
std
sahf
sbb
aad
xor
and
fwait
pop
imul
aaa
out
cltd
xlat
sbb
adc
imul
mov
inc
repnz
stc
ds
cs
fists
sub
aas
xor
cmp
push
sub
rorl
lcall
jbe
sbb
sarl
ljmp
cmp
gs
dec
notb
cmc
mov
das
mov
push
jno
aam
movsb
cmp
ja
mov
push
jo
fcoms
or
mov
stos
scas
or
sub
call
cltd
outsb
xchg
rorl
and
jmp
aaa
adcb
lds
lods
mov
xor
mov
inc
or
je
lock
push
cmpsl
cwtl
fists
mov
sbb
inc
inc
in
in
push
addr16
inc
jp
inc
and
data16
aas
and
sub
sbb
mov
cld
dec
test
dec
gs
stc
repnz
daa
enter
adc
mov
push
add
cwtl
cs
sub
out
and
xchg
rcll
inc
mov
adc
and
lcall
push
adc
repz
mov
lea
iret
sbb
jb
outsl
mov
mov
mov
cmp
sub
outsl
pop
mov
notb
leave
stos
cmpsb
push
out
sbb
scas
xor
jbe
dec
adc
cmpsb
idivb
mov
or
in
cmc
or
divb
movsl
dec
xor
adc
popf
imul
sbb
in
pushf
cmp
int
aas
xchg
dec
mov
pop
repz
pop
push
xor
mov
cmc
xor
in
test
add
enter
nop
scas
push
stos
out
sub
jbe
mov
insb
jecxz
sbb
lret
xchg
push
loopne
popf
sub
jle
xchg
jl
scas
inc
mov
or
sarl
sbb
push
popl
out
repnz
pop
xchg
insb
mov
test
jl
fcomps
xchg
aaa
mov
out
bound
xchg
les
adc
cld
fsubl
cmpsl
shrd
pusha
je
loope
idivl
pandn
data16
roll
push
dec
jmp
and
push
ret
jle
mov
jge
in
jmp
push
imul
mov
fsubl
mov
and
rcll
sub
cmpsl
sbb
cmp
aas
cmc
push
adc
repnz
jl
cmc
movsb
push
dec
and
jge
int3
pop
inc
fnstsw
adc
mull
out
fnstsw
push
aas
sbb
fnstenv
scas
push
mov
add
xor
outsl
push
sarl
add
sub
call
jmp
or
fchs
fnstsw
adc
mov
sbb
mov
mov
aad
daa
cmp
in
test
lods
push
repnz
sub
rcll
mov
adc
jge
dec
push
sub
shlb
lcall
adc
mov
dec
loop
ret
jnp
push
mov
mov
mov
ja
xchg
and
ds
add
add
add
call
push
push
inc
outsl
fbstp
fsubrl
mov
std
or
fst
adc
push
sub
or
sub
inc
pop
jp
jae
cmp
stos
add
ss
push
inc
xchg
adc
in
push
adc
idivb
push
dec
cmp
insb
xor
ds
gs
xchg
les
lahf
adc
and
das
mov
int3
inc
clc
leave
jo
or
mov
pop
movsl
lea
orb
outsl
pop
jbe
cmpl
and
pop
xchg
mov
es
xchg
in
mov
pop
inc
add
push
mov
jecxz
addb
xor
adc
loopne
sbb
test
lahf
dec
push
pop
cmp
lcall
into
jg
pop
ret
shrl
mov
push
leave
sbb
outsb
mov
mov
insl
jmp
sti
clc
cltd
or
icebp
sbb
sahf
push
divb
jmp
cwtl
sbb
push
jae
mov
lods
pushf
ds
dec
es
mov
mov
push
lahf
dec
xchg
dec
push
mov
pop
hlt
mov
mov
sti
xchg
mov
hlt
inc
jl
mov
rol
ffreep
sbb
dec
notb
mov
sahf
add
cld
jnp
adc
inc
mov
pop
iret
xchg
jmp
or
lods
cmp
jbe
push
mov
lret
pop
lcall
lss
fstl
int3
lcall
shlb
pop
mov
dec
dec
fs
add
push
inc
js
testl
inc
pushf
ffreep
or
stc
cmp
mov
imul
popf
mov
cs
out
jb
or
ficoms
sub
inc
pop
cmp
jecxz
mov
scas
add
and
xor
gs
lret
mov
popa
addl
push
lret
test
xor
xor
ds
cwtl
jo
stos
lret
jmp
sbb
out
mov
push
out
aam
and
inc
inc
imul
lds
jae
sub
daa
outsl
insl
pop
icebp
bound
arpl
iret
cmpl
mov
iret
sbb
jae
imul
jecxz
sub
add
data16
pop
xor
lret
insb
test
pop
lods
dec
pop
scas
test
shrb
dec
xlat
push
scas
mov
fnstsw
add
jl
inc
fimull
mov
popa
xorl
pop
push
std
mov
insb
test
jmp
das
xlat
push
ret
jl
pop
scas
lret
push
adc
aad
into
cld
dec
fisttpl
lods
fsubl
lcall
jne
xchg
add
pop
and
push
jns
add
push
adc
andl
mov
out
mov
jmp
cmpsb
sbb
ret
add
test
test
sbb
popf
or
adc
xchg
inc
jb
hlt
mov
push
push
xor
lcall
int
pusha
lcall
jge
movsl
jge
test
stos
push
cs
xor
push
mov
jns
mov
push
stos
xchg
sub
jns
cli
push
lahf
jb
mov
jae
dec
push
mov
fldl
lahf
push
stc
adc
fiadds
push
xor
enter
jns
pop
dec
and
fiaddl
mov
arpl
cs
push
mov
jmp
mov
and
data16
mov
pop
in
sti
mov
call
iret
cmpb
sbb
pop
sbb
adc
cmp
repz
out
xchg
in
push
jl
mov
mov
rclb
xor
jb
pop
pop
into
fmull
cmp
daa
cmp
mov
cmp
lahf
push
sub
inc
mov
cmp
mov
rcrb
aaa
mov
push
js
lret
daa
cmp
push
idiv
movsl
ja
sbb
push
fdivrp
in
add
cld
mov
daa
pop
test
and
inc
loope
jne
arpl
ljmp
or
lea
xlat
adc
or
inc
add
inc
mulb
lret
pop
addr16
cli
outsl
jns
xchg
nop
dec
sub
push
scas
fwait
xchg
lods
add
xor
fisubl
or
or
fs
ja
mov
shll
mov
cmp
rcrb
out
and
aam
sbb
adc
movsb
cmp
push
or
rol
pop
add
jno
pusha
jbe
mov
adc
shll
out
xor
lret
ljmp
movsl
push
jmp
stc
cmc
shrb
pop
inc
rolb
cmp
cmp
cmp
pop
out
push
std
in
jp
pop
pop
cmpsl
sbb
fucom
je
les
pushf
mov
dec
adc
addl
push
pop
sti
outsl
and
and
xchg
and
fmul
mov
and
mov
jns
cmp
mov
std
arpl
xor
and
jge
inc
pop
call
adc
orb
mov
orb
mov
rcll
pop
out
and
jo
push
mov
sbb
arpl
and
ljmp
push
or
loopne
out
ret
jmp
xchg
stos
mov
pusha
mov
pop
imul
js
mov
jmp
decl
add
push
insb
jno
mov
dec
xchg
xchg
xchg
sub
cmp
xchg
mov
inc
lahf
jno
xchg
sti
fwait
clc
dec
mov
cli
cmpsl
push
mov
lahf
stos
in
repz
and
and
pop
sbb
in
or
enter
pop
out
dec
nop
enter
clc
jmp
notb
cmp
dec
adc
movsl
and
xor
push
cmpl
mov
shrb
dec
adc
xor
bound
int
in
mov
bound
xchg
jne
gs
loop
pusha
lods
pop
sub
add
mov
stos
lahf
pop
repnz
cmpsb
jmp
jns
cmp
push
fcmove
test
jns
push
iret
xchg
insl
stos
jp
lock
mov
mov
and
mov
inc
push
loop
or
jno
and
xor
sbb
pop
data16
mov
dec
fistpll
aaa
xor
frstor
cmpsl
flds
or
test
ja
fnsave
and
es
aad
mov
inc
or
cs
insl
cmp
pop
hlt
test
out
hlt
xchg
or
mov
in
xor
sbb
lods
inc
add
jbe
mov
stos
loopne
insl
mov
outsl
jge
sub
jns
lds
repnz
add
push
xlat
dec
lahf
dec
dec
mov
and
dec
pop
or
fs
push
jne
cmpl
mov
mov
mov
or
xchg
leave
dec
les
sub
daa
inc
mov
push
push
jns,pt
dec
loop
mov
and
dec
das
add
outsb
pop
pushf
daa
pop
mov
cmp
dec
pop
mov
or
enter
mov
jle
in
jge
std
lods
orl
pop
lahf
ret
cmc
mov
daa
outsb
mov
lret
icebp
daa
lcall
adc
fs
push
inc
mov
fistl
mov
notb
pop
fsubrl
movl
int
push
and
aad
xor
out
cmc
push
jmp
dec
push
inc
faddl
scas
adc
loopne
adc
dec
jne
mov
rol
push
jg
adc
inc
mov
sbb
jno
popa
xor
mov
jg
adc
fsubr
jo
out
imul
mov
enter
jb
push
xchg
xchg
mov
movsl
push
mov
mov
fidivs
pop
popa
dec
pop
lods
pusha
and
lret
xlat
jmp
pop
and
rcr
pop
idivl
rorl
push
std
dec
loop
fs
aad
lcall
or
and
inc
mov
bnd
inc
movsl
adc
sub
rclb
pusha
aaa
cs
lret
xchg
test
dec
fstps
adc
aas
or
push
add
pop
out
push
pop
mov
dec
fld
faddl
movsl
bound
test
xchg
or
mov
add
les
and
jnp
lock
add
push
pushf
and
int3
je
adc
dec
adc
jnp
bound
dec
xchg
dec
ljmp
iret
shll
loope
ret
add
xchg
or
add
jp
rorb
mov
push
push
push
mov
mov
jge
imul
sbb
ret
inc
jge
inc
sub
rol
inc
daa
mov
mov
fldpi
hlt
movsl
loop
or
adc
dec
data16
xchg
fistpl
lret
popa
mov
int
leave
or
mov
notb
adc
and
in
andl
jae
pop
sub
int3
fs
testl
sarb
push
adc
mov
cld
xor
add
sub
xchg
stos
inc
pop
jo
das
rorl
xorl
adc
sbb
mov
mov
iret
pop
arpl
movsl
les
cmc
movsl
ljmp
mov
jbe
call
add
pop
sahf
daa
mov
das
in
loopne
dec
fstpt
mov
pop
add
roll
popw
sahf
js
rep
xchg
mov
adc
out
add
push
das
pop
mov
pop
xlat
pop
sub
cltd
fidivs
sbb
cli
dec
pop
adc
push
or
in
dec
sub
lcall
fists
mov
mov
rcll
out
std
popf
ret
sub
jns
enter
push
adc
mov
adc
lcall
push
push
jnp
cs
popa
in
mov
addr16
adc
or
call
mov
xchg
imul
adcb
jns
jb
loope
pop
mov
xor
loope
push
mov
inc
fldl
popf
into
xchg
das
mov
mov
or
ror
ds
adc
movsb
jle
inc
fiadds
and
fwait
dec
jns
add
or
sub
pop
xor
pop
mov
push
ljmp
aam
out
mov
dec
bound
sub
mov
fnsave
aad
and
cld
xchg
inc
bnd
arpl
jae
fildll
push
mov
inc
fwait
lahf
xor
mov
hlt
mov
jmp
in
xchg
inc
fadds
push
inc
xchg
xchg
xchg
cmpl
push
and
adc
div
dec
rorl
add
aad
mov
iret
cmpb
jecxz
iret
jb
rorl
inc
cli
adc
fsubr
stos
mulb
jo
or
sub
fs
xchg
xchg
lcall
mov
incb
adc
cmp
cmc
xchg
repnz
arpl
movsb
and
add
xchg
loope
cmp
mov
xor
inc
cltd
and
mov
sbb
inc
jnp
ret
test
lods
ror
inc
xlat
mov
push
shll
jmp
cmp
jb
out
cwtl
push
icebp
ret
cmpsb
out
test
int
sub
fidivrs
pop
jbe
inc
stos
in
jmp
and
pop
jle
add
lods
leave
test
sub
push
cmpsb
inc
imul
pushf
sub
mov
cmp
idivl
mov
jg
sub
mov
xchg
xchg
mov
dec
bound
aam
jne
mov
out
inc
loope
or
push
in
fs
push
xchg
jmp
stc
mov
push
xor
aam
xor
jecxz
push
jmp
adc
add
icebp
mov
imul
sub
add
cmp
and
and
adc
rol
rorb
leave
cwtl
adc
pop
inc
mov
fsubs
pop
loope
push
repz
nop
mov
sbb
shrb
push
test
pop
lods
in
test
pushf
or
in
pop
dec
sub
jne
out
jmp
imul
mov
inc
aaa
jecxz
sub
fdivs
andl
inc
sub
fisubl
repz
ja
jle
loope
xchg
xchg
pop
sti
outsb
sub
sub
xchg
shrb
lds
jbe
punpcklbw
mov
fs
in
popa
ds
push
xor
mov
sub
jb
mov
add
sub
shr
pop
dec
cmc
push
bnd
outsl
daa
or
pop
imul
adcl
jbe
lahf
jo
sahf
push
xor
and
or
rorl
sti
jbe
cltd
fistps
inc
push
and
mov
or
xchg
cmp
sahf
cmp
push
incl
stos
cmp
fisttpl
dec
adc
cld
fistpl
rcll
leave
std
dec
les
insb
dec
xchg
xchg
sbb
aad
mov
fs
cmp
pop
aam
xor
sub
cltd
sub
repnz
and
push
mov
xor
xor
fdivp
in
leave
lahf
jbe
mov
jnp
jae
pop
mov
insl
jbe
pop
pop
cld
pop
imul
mov
sub
test
test
mov
pushf
fbstp
mov
inc
jno
clc
inc
loop
out
xchg
push
push
imul
leave
ds
icebp
xor
popa
mov
jbe
mov
mov
bound
pop
ljmp
add
pop
push
mov
add
arpl
shlb
enter
and
dec
mov
test
fwait
dec
adc
dec
in
insl
sbb
jle
adc
adc
pop
inc
mov
ret
popf
call
dec
iret
sub
fcoml
mov
xor
and
sbb
inc
mov
cmpsb
cmp
out
js
fidivrl
int
adc
add
in
xor
jge
adc
aaa
lcall
popf
jo
cmp
mov
push
or
loop
adc
aam
sbb
in
dec
push
lods
scas
dec
jecxz
jecxz
lea
fistpl
xor
lods
dec
cmp
push
out
fistpl
movsb
xchg
sbb
mov
cwtl
add
push
clc
dec
pop
mov
mov
inc
add
jp
fsubl
outsb
cmp
and
iret
push
iret
popa
bound
lock
mov
mov
mov
adc
aas
inc
lret
repnz
jnp
int
pusha
fisttpl
pop
mov
das
push
sub
sbb
sbb
fldt
insl
pop
sub
or
loope
jbe
andb
add
push
pop
mov
jg
xchg
push
test
push
mov
sbb
jae
repz
out
mov
inc
adcl
popa
lret
xlat
iret
test
mov
lds
push
shrl
das
stc
sar
jmp
add
das
push
xchg
sub
pop
dec
ljmp
push
sahf
cmp
mov
dec
mov
adc
sbb
or
pop
insb
out
add
scas
aaa
sbb
push
sub
mov
test
call
sub
std
mov
sub
add
add
push
aad
pop
xor
jbe
add
mov
aam
test
test
push
or
stos
rol
es
cwtl
int
fs
dec
ja
repnz
clc
adc
hlt
gs
xchg
mov
lds
test
xor
pop
cmp
xor
mov
jnp
mov
clc
sbb
lods
scas
insl
clc
jg
cmp
rorb
jnp
add
out
or
fcmovne
xchg
mov
pop
test
in
sbb
pop
or
jno
daa
xchg
xchg
push
in
or
jae
pop
addr16
das
mov
fmul
xchg
jns
das
sub
mov
sub
push
jbe
pop
mov
push
imul
cmp
inc
fstl
lea
rol
xchg
adc
in
std
das
sarb
or
les
cmpsl
movsl
sarl
lds
fcomip
out
test
es
pop
xchg
mov
out
insl
inc
lcall
lcall
mov
nop
mov
ficomps
ds
xchg
mov
sbbb
inc
ds
xlat
mov
ret
inc
nop
xor
xor
fsts
push
daa
sbb
iret
jle
xchg
xchg
and
sub
movsl
push
mov
addr16
das
mov
cmp
cmp
pop
divb
ds
sahf
sub
iret
push
jns
and
mov
cmp
imul
push
mov
clc
or
repz
mov
bound
jp
or
repz
xchg
dec
push
push
lahf
hlt
dec
sub
mov
imul
lret
mov
insb
nop
fsubs
fnstenv
cwtl
inc
testl
dec
sbb
outsl
stos
cwtl
and
mov
add
push
cmp
mov
pop
xchg
in
fimuls
lods
orl
movsb
xor
sarl
sarl
and
push
data16
pop
cltd
das
mov
add
in
and
repz
std
add
push
push
inc
push
or
dec
and
dec
pop
add
insb
push
je
cmc
subl
and
dec
adc
jp
and
sbb
push
pop
and
cli
cmc
jmp
sub
je
inc
mov
push
dec
cmp
mov
fsubrl
or
or
inc
xchg
insb
xor
insb
stos
cwtl
insb
shr
pusha
outsl
mov
push
pop
add
pop
xchg
lods
jg
int
jg
out
sbb
mov
mov
push
dec
dec
fsubp
icebp
xchg
mov
fnstcw
cmp
ficoms
pop
fbld
arpl
sarb
in
test
mov
fdivl
xor
imul
xchg
jp
push
cltd
pop
insb
mov
lret
mov
shrb
movsb
mov
loop
out
dec
ja
lods
rcrl
xchg
insb
mov
cwtl
outsb
outsl
leave
pop
add
jmp
lahf
jno
icebp
fldt
xchg
cli
ror
push
mov
fs
and
xchg
mov
fistpll
push
mov
xor
clc
push
sub
inc
or
add
mov
and
and
xchg
xchg
mov
xor
movsb
lock
loop
lea
push
sbb
insb
xchg
sbbl
rcrb
mov
jbe
pop
and
cmp
cli
mov
mov
push
insb
scas
std
push
enter
mov
cld
xchg
cmp
imul
mov
mov
add
addr16
lods
pop
jle
and
lahf
ret
outsb
or
sbb
sub
dec
loopne
in
lods
mov
ljmp
pop
mov
mull
mov
adc
mov
divb
insl
cmp
sahf
cmp
std
test
pushf
dec
jmp
mov
add
and
fldl
jbe
data16
shll
dec
gs
test
nop
dec
or
rcrl
sahf
roll
pop
icebp
or
mov
js
mov
rorl
lahf
adc
or
add
xor
mov
xchg
mov
inc
fs
rcrl
in
push
xchg
cmpsl
dec
jmp
jne
fisubs
cld
sub
in
inc
and
push
dec
arpl
mov
daa
in
in
xor
jecxz
and
push
inc
jg
adcb
push
push
inc
sub
mov
lret
call
sub
data16
stos
scas
sub
pop
ret
lods
test
or
aas
pop
xlat
inc
in
in
pushl
xchg
jg
xor
cld
shll
mov
or
aaa
xor
pop
lds
in
pop
repz
jno
inc
in
dec
dec
in
fwait
in
test
imul
cmp
cltd
mov
sbb
add
mov
mov
cmp
les
shll
mov
xchg
sub
mov
mov
or
shll
dec
out
xchg
adc
push
cli
cmp
sub
add
jge
mov
jge
xlat
movsb
mov
hlt
sub
gs
call
xchg
incl
and
cld
pop
jp
and
jg
loopne
inc
mov
scas
sub
das
mov
int3
jl
jbe
cli
sbb
aaa
jmp
imul
and
fisttpll
inc
loope
mov
mov
sbb
mov
movsb
inc
bound
rorl
mov
js
inc
sbb
pop
push
cmpsl
or
int3
xchg
dec
or
jno
adc
jb
adc
and
mov
mov
push
pusha
fisttps
push
cmpsl
xor
xor
xor
mov
je
lret
xlat
outsb
jno
mov
popa
lods
add
push
xchg
dec
jecxz
push
test
or
xor
adc
stos
subl
scas
in
lds
add
ss
cmpsl
jp
or
dec
pushw
jp
xchg
push
jne
push
xchg
fwait
mov
int
cmp
das
sub
xor
cmpb
bound
and
lea
pop
sahf
inc
das
mov
mov
cmp
fsubr
mov
shl
lret
inc
lods
int3
sub
or
cmc
pop
sub
sbb
add
imul
test
movsl
jbe
int
adc
mul
pop
push
push
xor
pop
and
lods
imulb
ljmp
lock
dec
test
and
sbb
cltd
jo
stos
or
nop
dec
roll
or
sbb
jle
cld
push
stc
aam
add
bound
or
jge
nop
sbb
bound
data16
cli
pop
in
repnz
add
or
out
lods
clc
or
pop
jge
xor
pop
push
in
and
jmp
arpl
loop
rcll
pop
popa
cmp
pop
mov
icebp
xor
je
out
push
cmp
add
mov
shl
mov
fdivl
add
cmp
movlps
movsb
jnp
mov
jns
jb
daa
mov
rcll
or
jmp
or
dec
xchg
stc
push
inc
cmp
push
inc
xor
pop
jmp
mov
lea
scas
xchg
sbb
dec
iret
mov
add
add
xor
add
lcall
cltd
test
sub
movsl
pop
xor
pop
sti
fwait
sub
jg
rcrb
sti
sahf
andl
aaa
mov
cmp
andl
jle
jno
iret
pop
aaa
mov
jl
loope
push
test
cmp
or
stos
mov
push
shl
ja
pop
test
jb
mov
int3
dec
inc
fdivrs
out
or
ficoml
xchg
mov
mov
fiadds
lcall
adc
addr16
enter
xor
sbbb
dec
into
loop
out
pop
sbb
pop
adc
scas
out
js
and
sub
aam
mov
es
stos
push
lahf
scas
pop
repnz
cmp
std
pusha
dec
gs
sub
mov
subb
ljmp
daa
aad
xlat
pop
dec
pop
adc
mov
mov
push
fwait
stos
addl
inc
in
push
xor
stc
cmc
sar
mov
mov
fstps
mov
and
inc
push
inc
adc
mov
jmp
pop
icebp
pop
or
add
push
jl
out
sub
pop
inc
outsb
enter
push
out
sub
in
adcb
xchg
cmpsb
mov
mov
mov
out
cld
sbb
xchg
push
scas
dec
test
mov
adcb
in
mov
adc
cmp
and
mov
pop
cmpsl
sbb
leave
and
sub
dec
aaa
mov
add
ds
pop
xor
mov
mov
pop
outsb
loop
mov
xchg
divl
loop
mov
imul
test
out
sbb
pop
pslld
rcrb
pop
cmpsl
mov
mov
inc
shl
mov
or
push
cmpsb
into
pop
xchg
add
sti
or
lods
ljmp
mov
rcrl
stos
adc
rcrl
dec
pop
mov
mov
es
xchg
mov
push
sbb
lea
mov
or
inc
ss
jne
push
lcall
cmc
loopne
roll
adc
out
rcrl
push
dec
sbb
cs
xlat
outsl
sahf
push
xchg
add
mov
add
mov
sub
inc
fnsave
xchg
mov
cwtl
fs
fisttpll
hlt
das
inc
and
jne
das
xor
shll
push
aad
stc
cs
daa
repz
inc
inc
push
repz
sar
mov
push
popf
or
mov
jb
mov
dec
xchg
fwait
shr
int3
stc
fucomip
sub
sbb
ret
das
out
sti
mov
cmp
inc
gs
push
test
ror
xchg
add
cmp
dec
pop
ret
xchg
scas
jnp
es
outsb
fidivrs
xor
gs
ficoms
das
cmp
fs
dec
loope
jne
xor
stos
push
mov
and
shll
add
pop
cmp
stc
fs
cmp
fwait
pop
ds
dec
mov
pusha
mov
add
mov
xchg
xchg
adc
jnp
cmp
inc
and
mov
bound
inc
xchg
jne
stos
mov
movsb
inc
mov
dec
in
loopne
pop
and
imul
add
ret
cmpsb
les
ret
mov
stc
and
fwait
jl
lods
adc
push
mov
or
orl
mov
xor
push
xor
inc
pop
and
jle
in
pusha
fists
stos
sub
fisttpl
xchg
scas
ret
mov
xor
addr16
sahf
mov
sbb
into
enter
jne
mov
dec
xchg
adc
inc
mov
inc
sbb
xor
faddl
inc
xchg
lods
cs
mov
mov
cmc
cwtl
cmp
and
imul
aam
adc
inc
push
pop
dec
inc
adc
mov
push
int
out
inc
dec
push
pop
outsl
popa
mov
or
test
test
pop
fiadds
movsb
loope
lcall
in
arpl
adc
jp
xchg
repz
xchg
dec
xor
jmp
adc
adc
and
add
xchg
and
mov
in
adc
out
add
jl
xlat
insl
mov
pop
jmp
sub
add
add
fnstsw
pop
pop
jo
mov
in
jp
push
xor
out
imul
insb
mov
lds
shlb
sub
nop
add
popf
in
ret
add
setp
xchg
sub
cmp
test
sub
push
xchg
mov
cwtl
mov
mov
dec
or
leave
movsl
mov
mov
inc
dec
add
das
stc
or
sub
loopne
mov
divb
jl
mov
data16
scas
fidivl
jl
mov
add
std
stos
iret
out
pop
negb
jge
and
insl
pop
ret
jle
add
jmp
sbb
fisubs
loopne
imul
cmpsl
sbb
fistps
add
jg
push
addr16
or
ficompl
inc
push
jge
and
fwait
sti
lcall
pushf
lods
sbb
lret
outsb
loope
clc
cmp
stos
mov
mov
jle
pop
lods
xchg
dec
int
sbb
test
mov
mov
sbb
icebp
mov
adcl
xorb
push
inc
adc
xor
sbb
xor
cmp
movsb
cmp
xchg
mov
clc
hlt
or
idivb
fcmovbe
fadds
sti
xorl
mov
xchg
mov
push
jnp
inc
mov
adc
dec
inc
push
cmp
jae
cli
jne
sbb
mov
pop
mov
dec
in
pop
sbb
mov
hlt
add
mov
data16
sbb
aad
mov
call
cwtl
inc
dec
int3
lret
and
enter
cmpsb
pop
lds
mov
inc
mov
xchg
mov
mov
test
repz
loope
lods
cs
adc
jne
mov
jle
or
jg
or
mov
jge
in
jp
lahf
cli
mov
insb
push
int
jb
shlb
shrb
push
fwait
dec
xchg
mov
push
fwait
sbb
leave
add
or
push
adc
movsl
decb
sbb
leave
pusha
ss
fnstcw
mov
nop
push
jo
add
mov
fsubl
push
sub
sahf
ss
adc
stos
sub
repz
and
pop
loop
lcall
push
stos
mov
xchg
sub
mov
cs
push
mov
mov
xor
cs
dec
pusha
loopne
adc
push
or
in
fcmovbe
addr16
sbb
adc
iret
xchg
lds
into
mov
in
jb
stos
sub
mov
test
xchg
sub
push
ss
out
test
or
sub
or
repz
push
jmp
aaa
mov
repz
rcr
jae
addr16
push
jne
jg
rcll
pop
in
je
fidivs
test
pushf
test
push
jb
dec
add
cmc
push
sbb
jnp
xchg
mov
fiaddl
xlat
sbb
adc
push
xchg
cs
jae
pop
aad
aam
lcall
or
add
mov
dec
sub
fwait
out
fnsave
imul
sbb
dec
xchg
cli
movsb
fidivl
sbb
mov
push
inc
popa
and
add
and
push
jmp
push
hlt
jo
aam
mov
rorl
insb
bndstx
stos
insb
mov
jae
xchg
adc
jno
into
xchg
mov
fisubrs
adc
cmc
mov
daa
jle
jle
je
leave
lds
dec
aam
aad
jne
loop
lds
aas
loopne
push
out
cmp
mov
psubusw
insl
stos
jp
dec
mov
xchg
in
xor
ret
cmp
cmpsb
sub
das
inc
xor
gs
mov
outsl
bound
ds
nop
shrb
mov
pcmpeqw
cli
stos
ja
mov
adc
ss
dec
loop
std
data16
xchg
imul
push
push
movsb
xchg
orl
in
int
pop
dec
jnp
rolb
inc
fdivr
pop
fsubs
sahf
pop
dec
cmpsl
or
dec
cmc
push
inc
out
jge
std
xorl
lods
mov
adc
cmp
jp
ficompl
shrb
fnsave
or
xchg
rorb
hlt
mov
push
pop
popf
filds
or
mov
es
js
inc
stos
inc
xor
xchg
aas
inc
inc
jno
mov
jle
mov
push
ret
sar
add
push
je
adc
mov
std
or
lods
xor
arpl
iret
mov
xor
sbb
mov
mov
jmp
or
lcall
push
cs
lahf
idivl
jmp
cmp
popf
adc
xchg
pop
test
js
pop
push
jmp
cmpsb
das
jo
popa
enter
or
nop
psadbw
cmpsb
adc
loop
aam
jae
sti
mov
sub
ficoms
es
in
es
pop
dec
fs
sbb
lahf
dec
adc
pushf
sbb
icebp
mul
mov
aam
mov
subl
pop
js
cwtl
lret
iret
xor
pop
mov
xor
fimuls
bswap
jg
mov
sub
mov
ret
mov
push
jno
cmp
mov
dec
scas
inc
sub
xor
andb
icebp
lods
mov
fsub
jbe
push
stos
testb
jns
lods
push
das
lods
std
aad
xor
jl
jp
arpl
mov
pusha
repz
push
push
inc
push
popf
repnz
cmp
insb
sub
jbe
cli
push
adc
mov
sbb
mov
jp
xor
ja
fistps
outsb
popl
movsl
cmp
scas
ret
mov
shlb
dec
cmp
mov
jb
iret
cmp
and
sub
xor
inc
rorb
and
int
jns
pop
ficoml
stc
adc
adc
es
ret
mov
outsb
jp
xlat
outsb
or
adc
js
mov
lods
fcmove
es
rcrb
mov
and
scas
ret
or
pop
inc
insl
sar
cmp
adc
into
cmpsb
or
es
lcall
jl
adc
repz
mov
movsl
inc
pop
push
jo
iret
sub
jl
push
lcall
call
adc
das
pop
mov
xor
xor
mov
sbb
sbb
sbb
test
scas
push
int
push
adc
cmovge
push
aas
inc
push
or
loop
and
fldl
call
stos
xchg
dec
rorb
sbb
das
lds
mov
insb
push
mov
popa
xor
insl
shll
xor
cmp
out
dec
in
shll
mov
sti
push
int
stos
cmp
or
jmp
jmp
rcll
in
mov
cmp
addr16
xor
lods
lods
mov
pop
push
xchg
mov
xchg
push
aam
xchg
into
fadd
add
adc
sub
pop
out
sub
cmc
jp
dec
movsb
ljmp
popa
cmp
adc
cmp
sub
mov
scas
aaa
pop
iret
movsl
cld
jge
or
sbb
xchg
pop
bswap
pop
mov
push
cmp
gs
push
out
test
in
test
andb
loopne
mov
add
xor
add
pop
sub
adc
inc
test
xchg
scas
push
movsl
xor
push
sub
add
daa
stos
inc
pop
test
leave
fs
daa
add
jle
ret
sub
cmp
dec
dec
in
scas
das
inc
pop
mov
cmpsl
hlt
das
inc
int3
inc
cs
mov
adc
mov
dec
cmp
mov
ljmp
xchg
and
loopne
xlat
push
xchg
cmp
pop
repnz
mov
ficoms
adcb
aas
ret
stc
push
cltd
sub
push
scas
xchg
and
pop
xchg
jne
rcll
stos
cmp
xor
ss
sahf
dec
inc
push
outsl
ljmp
ret
or
xchg
xor
xchg
incb
aaa
mov
in
xor
imul
gs
and
jo
jns
loope
or
cmp
pop
xchg
gs
adc
jmp
fs
cmp
imul
std
fisttpll
pop
in
sbb
popf
or
inc
inc
cmc
adc
loope
sub
dec
andb
xor
jo
dec
pushf
xor
scas
jae
flds
sahf
shlb
int
ja
dec
hlt
inc
cmc
cmp
xchg
add
push
test
stos
lea
xor
test
cmpl
xor
adc
loopne
mov
push
jb
popa
xchg
outsl
mov
sbb
out
imul
sub
test
popf
sbb
int
in
stos
jp
mov
jne
js
popa
add
xor
sbb
sub
dec
ljmp
imul
popa
js
mov
mov
push
test
adcb
dec
add
icebp
pop
and
enter
cld
in
test
inc
fadds
add
mov
pop
cmc
sbb
add
mov
adcb
push
inc
sbb
jle
repz
es
dec
or
ret
cmpsb
push
jmp
pop
xor
jno
push
xchg
jmp
add
imul
cli
cmp
sub
pop
dec
pop
inc
xchg
fnstsw
jnp
mov
fstps
lret
dec
shrl
movsl
jp
notb
int
lods
inc
push
or
ss
lret
das
outsl
loop
xchg
test
out
inc
test
ret
jmp
jecxz
insl
add
inc
fldl
popa
gs
push
fdivrs
inc
aam
pop
and
in
jno
xor
and
clc
addr16
lds
hlt
mov
jle
pop
dec
sbb
bound
or
jge
jmp
leave
xor
xchg
cs
call
mov
fs
dec
in
popa
fcomps
push
add
pop
or
cmp
inc
stos
popf
iret
gs
data16
adc
inc
mov
jge
bound
pushf
call
addl
jg
jle
cmp
jo
fcomps
addb
push
inc
mov
fcmovne
pusha
mov
push
xor
repz
fidivrl
sar
jo
inc
inc
loop
jp
fxch
pusha
or
jmp
mov
in
push
mov
lahf
loop
dec
sbb
aad
jo
aas
ja
xor
push
sbbb
test
arpl
and
shrb
xor
mov
pop
sub
call
mov
cwtl
int3
xchg
sub
in
in
mov
outsb
lahf
cmp
or
jnp
les
aas
xchg
jp
scas
loopne
call
mov
ljmp
pop
dec
cmp
pop
popf
out
imul
adc
aad
jge
mov
push
jmp
aaa
jbe
sub
pop
es
mov
jae
movsl
xchg
pop
mov
aaa
sub
imul
test
in
push
mov
mov
or
add
xchg
mov
adc
mov
push
push
gs
jb
xor
or
inc
push
push
subl
or
sbb
add
xor
cmp
sbb
mov
dec
mov
fstps
les
rcr
mov
mov
out
pop
or
dec
scas
stc
or
enter
loope
sbb
pusha
sbb
dec
mov
adc
lods
or
dec
in
sub
push
ja
jecxz
dec
icebp
insb
dec
xchg
lds
shrb
mov
lock
push
loope
jge
mov
mov
aad
sbb
lock
lods
and
or
sar
cwtl
das
loop
mov
out
clc
popf
ret
shrb
loop
int
sbb
movsl
jge
push
jmp
cmpsb
or
pop
and
lcall
xchg
stos
push
leave
popa
xchg
or
repnz
and
cwtl
mov
mov
dec
inc
adc
cmp
jae
rorl
jne
or
mov
adc
pusha
push
outsl
xchg
jo
fnstenv
mov
pop
mov
jae
xchg
push
lret
add
leave
push
dec
sub
fsubrl
xorl
andb
adc
jle
rcrl
and
call
or
fmuls
sbb
jae
sub
icebp
pop
xor
cvtdq2ps
imul
push
adc
loope
inc
sub
xchg
cmc
xor
popf
and
pop
jl
es
xor
mov
adc
inc
out
dec
ds
dec
adcl
cld
in
push
sbb
das
inc
in
or
gs
in
pusha
call
andb
xchg
out
sbb
pop
lods
jecxz
dec
clc
sarl
movsb
push
or
aaa
ds
adc
call
inc
inc
fdiv
les
data16
pop
pusha
shrl
bound
clc
sahf
jne
sbb
mov
aaa
mov
mov
shl
aas
fistps
out
inc
sub
in
add
xor
dec
jle
imul
add
and
hlt
fdiv
scas
xor
mov
iret
in
push
sbb
push
sbb
cmp
cmp
mov
or
fdiv
and
and
outsb
daa
jne
cmpsb
nop
mov
jbe
mov
fnstsw
and
push
xor
pusha
test
nop
xor
jmp
xchg
xchg
fmul
shlb
cltd
inc
cwtl
inc
jmp
inc
pop
cmp
sub
push
cs
iret
in
add
add
add
jg
adc
lret
pop
mov
inc
mov
ss
outsb
sub
lahf
jbe
addb
aad
adc
and
mov
outsl
mov
pop
jmp
scas
out
cmpsb
cmp
je
sbbb
idivl
std
push
pop
loop
sub
push
fnsave
jbe
mov
or
mov
in
negb
shlb
shld
imul
pop
adc
adc
cmpsb
jg
loope
lcall
xor
dec
push
sub
or
rcl
add
scas
test
out
inc
ljmp
and
mov
mov
mov
inc
cwtl
stos
addb
int3
imul
mov
jnp,pn
fs
cmp
and
push
lods
fstl
cwtl
jno
cmc
xor
sbb
xchg
pop
fs
fdivs
sub
jmp
mov
mov
sbb
sbb
ja
mov
rorb
ficompl
std
sbb
out
cmp
js
mov
out
lcall
div
dec
outsw
les
jmp
scas
adc
daa
cld
add
sbbl
mov
fbstp
pop
mov
repz
iret
scas
push
jge
xchg
sbb
pop
mov
arpl
or
push
and
cmpsb
popf
das
aam
scas
ds
mov
sub
mov
xchg
pop
loop
jle
sbb
pop
mov
iret
les
pop
adc
cmp
call
jmp
iret
in
cltd
inc
idiv
outsl
fldl
add
jno
dec
jle
xchg
xchg
jecxz
or
or
out
xchg
cmp
rcll
sarl
dec
xchg
inc
cmpsl
and
add
sarl
je
xor
cmc
pop
push
adc
inc
pusha
jo
into
test
es
push
stos
pop
repnz
xchg
fnsave
pop
das
or
arpl
ljmp
rol
adc
sub
js
xor
push
xor
out
inc
gs
xor
iret
xchg
mov
jnp
stos
sbb
mov
lods
jl
mov
dec
pop
mov
sarl
movaps
cmp
or
xchg
imul
pushf
jne
out
repnz
sti
push
push
ja
into
and
cltd
stos
jg
pop
mov
fstpt
rcrb
movsb
sub
fnstsw
adc
aam
outsl
sub
jno
dec
nop
pop
pushf
jne
pop
shlb
cmpsl
cmp
push
or
mov
pushf
jle
ret
cli
xchg
icebp
mov
clc
xchg
sbb
inc
sub
or
mov
xor
mov
outsl
out
in
leave
in
repz
xor
ds
add
mov
cmp
lds
adc
stc
sbb
andl
inc
sbbl
push
and
push
testb
jb
fisubrs
sbb
scas
stos
out
out
loop
adc
aam
lds
ja
pop
mov
cwtl
outsb
jo
sub
aam
mov
mov
add
cld
pop
mov
sbb
sub
push
sbb
mov
scas
and
xchg
push
push
addl
mov
cmpsl
pop
leave
sub
push
inc
push
out
pop
xor
sub
jl
outsb
mov
nop
adc
cmp
call
popf
fucomip
into
int3
sbb
out
pop
pop
fsubr
subl
sbb
ficoms
sub
cmc
bound
das
push
call
push
xchg
outsl
adc
call
push
test
pop
jle
jne
cmpsb
test
fildll
js
je,pn
f2xm1
add
inc
lret
and
je
ret
loope
xchg
icebp
mov
in
add
or
popl
rcrb
mov
pop
imul
pop
cli
cld
add
leave
and
xor
hlt
pop
fistps
dec
sub
xchg
sub
out
jp
cmc
mov
dec
cmp
cmp
mov
jno
mov
add
es
lcall
xor
or
fsin
push
call
insb
push
jmp
cli
jo
fwait
sbb
and
and
out
cs
rol
add
push
in
call
add
jbe
mov
sbb
sbb
nop
mov
out
sti
or
cmpsl
jnp
xor
push
cltd
xor
and
jmp
ror
popa
bound
stos
daa
mov
fidivl
mov
inc
ljmp
push
loope
movsb
jp
cli
outsl
stos
fwait
sub
testb
mov
scas
mov
popf
imul
arpl
mov
fxch
mov
in
add
imull
icebp
jg
test
mov
test
and
and
les
decb
out
cmp
cmp
push
add
mov
jae
adc
add
mov
mov
in
lahf
mov
add
sbb
lcall
jae
jns
cmp
mov
sbb
xchg
test
inc
mov
test
out
sbb
dec
adc
cmp
enter
and
ss
xchg
push
sbb
mov
mov
inc
fidivrl
cmp
lret
scas
sti
mov
jns
test
ja
shr
xor
mov
aam
negb
fdivs
aas
jbe
cmpsb
loope
or
mov
sub
daa
xchg
pop
xor
stc
lea
xor
pop
xor
xor
sub
or
cmp
rcrb
js
pop
ja
pushf
jp
ds
cmp
or
ja
inc
mov
hlt
fdivl
dec
repz
das
add
mov
mov
test
cltd
xor
scas
mov
or
pop
or
test
in
xor
aad
xchg
insl
adc
pop
test
sarb
aam
jmp
mov
dec
or
push
cmp
les
sbb
in
rcr
cmc
push
insl
das
pop
cltd
add
out
cmp
bound
dec
leave
jl
jo
sub
lock
add
rcrl
lods
pop
mov
mov
sub
mov
into
lret
in
adc
adc
mov
and
jbe
daa
mov
je
pop
repnz
shlb
push
out
clc
lahf
sub
sbb
jg
jne
sbbl
xchg
mov
mov
mov
mov
loopne
or
and
addr16
adc
pop
nop
mov
jb
mov
frstor
lcall
xchg
push
cmp
dec
out
push
out
repnz
sti
inc
test
lahf
cltd
xlat
xchg
repnz
cmpsl
rcll
jbe
call
cmp
xchg
shl
xlat
pop
roll
stos
mov
push
mov
inc
jp
dec
cmpsb
push
loopne
pop
enter
aas
xchg
jns
jmp
negb
or
notb
jg
inc
mov
pop
in
rcll
pop
mov
bound
and
xor
loopne
jo
inc
std
pop
cmpsb
mov
icebp
popa
lret
cld
cmpb
adc
jmp
or
mov
fstpl
mov
dec
int
out
push
ja
sub
pop
out
xor
adc
pop
adc
ss
lcall
inc
xchg
xor
or
mov
int
nop
jmp
mov
pushf
sbb
ret
jecxz
mov
xchg
iret
fsubr
clc
mov
add
mov
cmc
mov
jg
sbb
dec
sbb
ja
pop
andps
rorl
in
push
cmp
xchg
cld
mov
shl
sub
xor
mov
lcall
mov
stc
arpl
cmc
lods
sbb
test
push
adc
mov
cmpsb
add
aad
andl
mov
pop
adc
cmp
addr16
or
pop
jmp
daa
sbb
mov
pop
or
add
push
mov
dec
xor
ret
test
les
or
sbb
mov
jne
dec
gs
lods
fiadds
mov
mov
nop
sub
adc
pop
add
or
iret
fwait
orb
adc
out
test
sbb
out
or
sbb
jae
sub
push
pop
xchg
outsl
call
pop
sbb
es
pusha
jno
sbb
inc
movsb
sbb
mov
xchg
push
cmp
loope
fsub
xchg
jmp
pop
cmpsl
stos
popl
jp
std
arpl
enter
ss
lret
mov
leave
mov
xchg
mov
push
lods
mov
ss
pop
sub
rcll
or
ret
pop
out
sbb
pop
insb
mov
sahf
jle
mov
iret
imul
cmp
stos
adc
leave
push
rcr
and
pop
adc
adc
xor
cmp
push
outsl
push
push
or
push
pop
sub
popa
and
pop
mov
push
cmpsb
jmp
sbb
enter
dec
insb
ret
out
lcall
int
sarb
ror
fwait
inc
cli
sbb
scas
add
cmp
push
mov
jo
fwait
sub
sub
jno
and
jne
leave
push
jns
dec
in
sbb
or
xorl
loope
xchg
scas
jmp
lods
mov
cwtl
sbb
mov
xor
ss
in
test
lret
dec
xor
and
out
cmp
xchg
add
jp
lock
or
adc
loopne
cmp
es
repnz
push
cmc
push
push
sub
test
add
xor
jbe
cmpsl
inc
arpl
inc
pop
or
cmp
ljmp
aam
sbb
mov
out
sbb
stos
jg
dec
pop
sbb
and
jg
scas
pop
xor
sub
inc
outsl
jb
inc
dec
nop
mov
cmp
rep
mov
pop
aad
adc
lds
pop
dec
in
ret
add
fidivrl
mov
adc
pop
mov
push
ds
adc
pop
cmp
mov
clc
xchg
outsb
imul
mov
orl
push
out
dec
pushf
pause
inc
insl
jne
jnp
mov
jle
pop
xor
add
add
pop
orl
outsb
rorb
push
addr16
sbb
or
in
int
stc
ja
sub
lret
push
sub
add
push
lret
lahf
add
lods
cmpsb
mov
shr
scas
mov
xchg
shlb
jo
enter
sbb
aad
xchg
imull
incb
lahf
sbb
dec
xchg
xchg
aas
es
push
and
scas
dec
mov
cmc
jnp
je
sub
jne
jmp
xchg
adc
aas
dec
and
adc
lahf
repnz
cmc
jno
mov
push
or
fimull
cld
or
xchg
push
xchg
adc
movsl
dec
push
bound
fcoml
jbe
fcomip
dec
cmpsb
mov
insb
sub
xchg
aas
loope
adc
sbb
mov
outsl
add
out
mov
lret
pop
iret
cmpsb
or
pop
add
popf
lahf
push
push
fdivs
jmp
mov
adc
imul
movsb
push
ja
push
jl
xor
mov
xchg
ljmp
sbb
xor
mov
cmpsl
inc
into
das
mov
enter
sub
and
test
and
push
daa
lcall
es
sahf
dec
or
cmp
sbb
push
repnz
pushf
mov
jmp
xor
aas
rol
lock
stc
mov
frstor
loop
sbb
xchg
je
in
sbb
cltd
add
hlt
jecxz
leave
loop
cli
dec
outsl
daa
jecxz
add
lods
cmp
mov
lods
ljmp
add
mov
out
insl
outsb
dec
enter
adc
sub
shlb
xchg
aam
xchg
aam
push
movsb
push
xlat
aas
xchg
movsl
mov
mov
push
jp
lods
fistl
nop
fbstp
in
mov
xchg
gs
xchg
jb
nop
shll
mov
decl
mov
or
and
lods
push
sub
movsl
push
outsl
add
sar
jno
pusha
leave
mov
cli
push
subl
mov
and
or
stos
inc
pop
adc
push
xor
clc
rolb
dec
arpl
mov
add
cmp
adc
cmp
into
fcoml
aam
cs
xchg
sahf
out
mov
sbb
inc
xlat
xchg
xchg
add
inc
push
push
stos
sbb
xchg
cmpsb
fstpt
pop
out
sub
jbe
in
ret
test
sub
ss
inc
stc
js
lret
sti
jecxz
outsl
mov
sbb
add
adc
aam
mov
pop
cmp
adc
cmp
jnp
hlt
xor
in
hlt
in
mov
stc
mov
cmp
mov
mov
cmp
sbb
xchg
cmp
xlat
sub
iret
xchg
mov
mov
mov
sti
repz
ss
inc
jmp
fmull
mov
lret
xchg
sbb
mov
sub
lock
les
aam
out
push
repnz
data16
jns
stos
or
jb
sbb
imul
cmp
daa
jle
mov
xchg
xchg
jo
lock
lret
sbb
lret
sub
and
aam
fidivs
test
sub
inc
pop
mov
jp
pop
and
mov
sahf
and
pop
aaa
add
test
push
adc
dec
pop
hlt
xor
jmp
loope
mov
lds
push
ljmp
js
xor
out
or
dec
mov
inc
ds
adc
fsubrl
mov
or
enter
inc
fidivl
xlat
cmp
add
adc
push
imul
fs
jge
test
jb
jl
lds
dec
loope
xlat
jbe
inc
push
fdivs
pop
push
daa
mov
mov
mov
cmp
xor
xor
bound
pop
dec
jmp
push
mov
or
stc
nop
cmp
imul
xchg
pop
rcrl
sub
jge
mov
jg
f2xm1
imul
repnz
repz
push
mov
ret
adc
js
adc
in
pop
xchg
mov
fs
mov
sbb
shrb
pop
adc
inc
and
aaa
xor
dec
adc
aad
xor
push
fs
int3
out
pop
adc
mov
cli
dec
mov
aam
movsl
pushw
dec
lea
mov
add
cli
shrb
push
or
inc
mov
das
ds
push
or
rorl
push
je
outsl
loop
sbb
mov
or
mov
ret
sbb
test
fwait
push
adc
sbb
enter
enter
stos
test
pop
or
lea
pop
cmpsl
ljmp
jnp
fwait
push
sbb
rclb
jno
mov
addr16
inc
pop
ds
mov
cmp
mov
aam
es
or
jnp
mov
call
push
push
ss
int
mov
popa
push
jbe
adc
imul
int
ret
mov
cltd
push
cmc
push
push
cmp
bound
cmc
pop
insb
jb
mov
cmp
mov
mov
adc
loope
cmc
mov
out
repz
int
adc
jecxz
fmull
pop
xor
ds
jecxz,pn
push
jno
sarl
add
xlat
repnz
decb
fs
pushf
lret
into
sub
call
lret
ss
insb
add
sbb
push
xchg
subl
popf
rcrb
daa
ljmp
jmp
sub
popa
add
xchg
sarb
sar
lahf
mov
mov
sti
mov
cmpsb
lock
mov
in
sarb
fbld
je
push
or
jp
push
or
pusha
or
sbb
adc
lret
or
iret
loope
cmp
sahf
xor
jb
imul
shrb
push
jmp
lahf
aas
add
out
divb
add
cmc
lret
mov
mov
ds
and
sub
mov
jne
push
test
fcoms
pop
mov
inc
pop
jecxz
decl
mov
mov
cmc
or
mov
repz
test
push
js
or
jecxz
lods
cmp
rorl
popf
repz
out
and
pop
push
mov
adc
xchg
fwait
dec
leave
rcrl
out
inc
stos
and
test
cltd
test
mov
pop
nop
aas
push
in
stos
das
int3
push
call
sbb
adc
mov
mov
jmp
out
jb
xor
jge
sti
scas
xor
rolb
aam
sti
enter
mov
mov
lahf
and
adc
inc
cld
push
js
mov
jp
jge
fs
dec
in
in
xchg
shr
xchg
pusha
push
negl
adc
lds
jo
test
mov
shrb
shll
sub
push
rol
pop
jp
sub
inc
test
and
dec
cmp
push
es
outsl
stos
sahf
xor
popa
mov
mov
or
icebp
xor
add
lds
jge
ss
sub
test
les
mov
adc
movsl
inc
lea
scas
out
jp
sbb
lock
rolb
pop
cwtl
sub
and
xor
push
std
data16
in
das
outsb
add
fs
movb
push
repz
mov
xchg
aas
xchg
std
leave
cmp
jae
sbb
push
cwtl
bound
pop
loope
cmc
push
std
fbstp
pop
movsb
cmp
lcall
or
test
stos
repnz
outsb
lods
imul
cs
incb
lods
test
jle
leave
je
or
xchg
push
cmp
push
inc
mov
dec
clc
mov
fldln2
cmp
push
cli
bound
inc
sub
add
fistps
adc
int
mov
out
sub
sbb
xchg
inc
xchg
sub
push
mov
inc
mov
ljmp
scas
jno
leave
jae
inc
xor
sbb
push
sub
mov
jns
mov
mov
and
mov
lahf
inc
adc
hlt
insl
push
pop
lcall
fisubrs
mov
mov
daa
mov
ljmp
sub
dec
pop
into
das
leave
xor
arpl
mov
sub
test
push
adc
insl
sahf
mov
daa
or
lcall
fildl
std
lock
lods
xchg
and
ret
jecxz
jnp
insb
in
aad
inc
orl
scas
stos
mov
iret
jns
push
call
outsb
pop
outsl
push
mov
dec
add
pop
dec
mov
in
mov
in
test
mov
fnsave
scas
and
cmp
sub
and
bound
mov
adc
cmp
mov
in
sub
xchg
dec
repz
sub
and
bound
sbb
leave
in
pusha
out
xchg
inc
jnp
cmp
jp
outsl
xor
pushf
nop
cltd
mov
test
fdivrp
cli
xchg
sub
dec
sbb
fldl
mov
lods
inc
test
xor
lock
jnp
xchg
lods
data16
movsb
jae
pusha
movsl
add
sbb
stos
pusha
in
imul
xorb
shrl
xchg
sub
lods
mov
jnp
clc
iret
xchg
scas
xor
push
lea
scas
xchg
push
js
add
or
jae
imul
mov
jg
pop
insb
adc
fisttpll
adc
loopne
xchg
inc
lds
hlt
loope
sbb
cmp
mov
push
fimuls
cmp
test
mov
mov
ds
stos
push
imul
pusha
mov
push
mov
aad
cltd
xor
bnd
adc
or
pop
xlat
daa
mov
sub
cmp
imull
cmp
dec
lahf
fadd
mov
sbb
cmp
mov
pop
inc
inc
cs
rcl
lds
mov
sub
xchg
jmp
lods
ret
xor
sbb
popf
std
nop
jmp
sbb
nop
xor
pop
hlt
and
mov
fsts
push
push
out
movsb
jns
add
test
aam
mov
aaa
mov
dec
pop
and
inc
stos
dec
cwtl
and
aad
enter
out
mov
pop
adc
mov
mov
aam
lods
jge
ficoml
xorl
mov
es
or
inc
cmp
add
lods
enter
add
minps
push
jo
push
jns
lods
fwait
xchg
es
or
add
lock
inc
lcall
add
in
mov
test
mov
mov
sarb
sahf
jno
lea
loopne
icebp
mov
ds
mov
or
jne
fcmovbe
out
push
cld
fbstp
inc
dec
cmc
ds
jo
pop
scas
aas
jne
in
mov
stc
jno
add
sahf
iret
and
xor
and
mov
sbb
pop
test
sbb
jl
mov
push
call
test
jmp
and
das
mov
enter
out
movl
dec
push
inc
mov
loope
pop
xor
add
sbb
aaa
mov
dec
lds
lods
push
mov
fists
dec
xchg
jb
xor
insb
jae
add
sbb
mov
fstpt
mov
ds
cmp
fmuls
stc
nop
rcrb
dec
push
das
or
and
cmp
clc
mov
movsl
hlt
mov
popa
xchg
int3
dec
mov
mov
cmp
je
lea
das
fmul
push
xor
subb
jg
inc
cmp
ss
dec
int
or
xchg
loop
ljmp
dec
add
and
xchg
and
and
add
mov
aas
loope
inc
adc
dec
and
mov
subl
mov
sahf
adc
jmp
mov
xchg
pop
xchg
ljmp
aad
or
pop
add
lods
mov
loop
leave
les
pop
jbe
xchg
loope
out
shrl
test
hlt
sbb
mov
test
test
iret
mov
pop
dec
pop
insl
loopne
int3
fimuls
cmpsb
mov
push
dec
scas
or
ds
inc
test
adc
ret
cwtl
mov
orb
mov
sbb
test
mov
adc
sub
jno
and
jns
jne
and
xor
jg
sub
shll
sahf
inc
insl
inc
push
cwtl
mov
mov
sub
ret
in
and
push
in
jb
sbb
in
mov
mov
pop
es
add
sub
dec
pop
cmpsl
repnz
sbb
mov
addr16
aas
sbb
jecxz
or
or
adc
shlb
out
pop
xchg
leave
loopne
lea
add
mov
je
test
aas
lock
mov
xor
mov
adc
movsb
test
testb
cmp
inc
hlt
mov
or
mov
mov
sbb
jno
fdivrp
iret
jmp
push
push
out
ss
sub
mov
jnp
mov
mov
pop
xor
mov
je
mov
mov
es
aaa
xchg
sti
pushf
cmp
cmp
into
mov
push
scas
inc
les
and
js
mov
in
sbb
jbe
cmpsl
inc
or
jp
push
jae
inc
pop
jle
repz
sub
test
dec
xor
inc
cwtl
xlat
push
dec
stos
xchg
ljmp
int
mov
jb
aad
lds
pop
or
outsl
push
or
imul
xchg
or
xchg
ret
cld
mov
lahf
pop
sti
adc
push
pop
sbb
jg
scas
sub
cmp
cmp
sbb
out
fidivrl
pop
repz
cltd
stos
fisubrs
pop
test
and
pop
lahf
mov
out
cmpsl
into
loopne
add
cld
inc
ljmp
sub
push
inc
into
and
mov
add
or
lods
rcrb
lahf
xor
xchg
popa
mov
add
repz
sub
cmp
xor
add
cmpsb
add
cmp
cmc
je
das
imul
popf
arpl
ret
roll
call
fmul
jmp
fucomip
or
xor
fidivs
mov
cmpsl
mov
and
hlt
mov
test
add
or
jo
push
lret
das
or
dec
daa
stos
mov
pop
jno
push
ljmp
sub
cmc
mov
sbb
add
sub
je
test
xchg
enter
cmp
loope
adc
aaa
mov
std
xchg
test
test
xlat
fs
sbb
mov
pop
jbe
sub
inc
fadds
clc
fdivr
mov
cmc
stc
xchg
or
andb
aam
lea
xor
ds
sti
jbe
aam
pop
xor
bound
lahf
ss
int
xchg
mov
nop
loope
les
lods
lods
push
xlat
and
pop
cmp
inc
push
out
addr16
inc
jmp
dec
jmp
repz
inc
mov
inc
jb
mulb
ss
cmp
stos
xor
sub
incb
mov
enter
ds
int
test
or
jmp
or
mov
loop
das
push
orl
je
mov
or
xlat
jnp
es
sub
sti
xchg
js
test
movsb
rolb
cltd
jl
or
lock
rolb
dec
pop
xor
mov
dec
mov
sbb
loop
imul
mov
push
cs
add
int3
pop
movsb
xor
xchg
ffree
cmpsb
xchg
inc
fimull
aad
jae
popa
xor
inc
ss
stos
lock
fs
cmp
bound
je
mov
adcb
inc
push
xor
sub
mov
std
mov
pop
pop
pop
mov
xchg
out
mov
and
in
adc
stos
fistpl
mov
mov
js
inc
sbb
shl
mov
leave
jecxz
movsl
mov
jbe
lret
inc
addr16
movsl
push
inc
jge
mov
and
lcall
mov
jge
cli
lahf
and
cld
xor
bswap
jmp
xchg
mov
lods
push
rolb
pop
shrb
mov
cmpsb
popf
jo
push
push
push
popf
fisttpl
mov
mov
xor
xchg
push
cld
or
out
mov
shlb
fildl
sbb
cmp
int
mov
aas
shrl
mov
adc
add
mov
addr16
inc
je
sub
popa
enter
pop
jae
mov
sub
xor
inc
jbe
cmpsl
addr16
cmp
pop
add
mov
cmpsl
mov
addr16
es
test
mov
push
movsl
and
sarb
inc
clc
xchg
cmp
lret
push
xchg
stos
mov
mov
ss
push
cmp
mov
adc
lods
call
filds
mulb
hlt
adc
popf
pop
and
or
addr16
pop
insl
pop
lret
pop
notl
and
sub
pop
lret
rorb
push
mov
xchg
hlt
sbb
and
dec
push
cld
jg
push
mov
int
xor
push
pushl
push
lds
pushf
lods
xor
pop
mov
pop
js
int3
inc
or
xchg
lods
mov
dec
xor
mov
imul
popf
or
mov
out
and
pop
ss
mov
mov
orb
pop
pop
sbb
loope
dec
jge
lock
jo
and
mov
fbstp
rcl
xorl
rclb
jp
or
or
outsb
inc
sub
dec
adc
sub
outsb
loope
les
test
test
inc
hlt
cmc
fwait
push
insb
int
push
clc
lcall
lds
das
cmp
fcmove
add
sbb
mov
inc
sarb
cltd
fidivl
inc
pop
std
scas
int
push
icebp
lret
inc
popa
cmc
test
test
dec
xor
dec
ljmp
adc
push
stos
je
lret
fld
scas
sub
push
sbb
addr16
cld
xor
sbb
mov
and
cmpsl
dec
sub
in
push
hlt
inc
adc
pop
xchg
std
or
sub
sbbl
adc
xor
and
sub
scas
inc
data16
add
mov
test
mov
mov
and
out
jo
test
mov
push
jo
out
xlat
jb
ds
into
jge
jl
cwtl
movsl
push
dec
shlb
and
inc
subb
fmull
fisubl
mov
test
ja
dec
xchg
ror
push
cmp
aad
lock
push
jmp
fs
popa
jb
xchg
fstpl
shrl
sti
lcall
xchg
sub
ret
in
inc
mov
xchg
popf
mov
call
adc
fnstcw
je
mov
rorb
mov
push
or
xlat
sbb
xor
fwait
sbb
es
hlt
lcall
xor
fmull
fs
xchg
in
xchg
sbb
xchg
cmp
pop
lahf
lahf
sbb
repnz
dec
xor
loop
fsubl
xchg
pop
mov
hlt
mov
pop
icebp
jns
nop
pop
sbbb
loope
mov
repnz
sarl
pop
push
icebp
mov
cmpl
push
iret
sub
in
cmc
and
daa
push
push
inc
leave
pop
clc
lods
and
stos
dec
pop
push
fists
jp
rolb
andl
xchg
cmp
movsb
jecxz
out
sbbb
jecxz
aad
and
pushf
adc
pop
fldcw
mov
jle
popl
mov
ret
imul
bound
mov
jg
les
mov
push
in
jecxz
cmp
xor
add
aaa
adc
mov
into
loop
ret
xchg
cmpsl
jno
push
dec
enter
cmp
or
adc
lods
sbb
pop
xchg
cmp
stc
stos
js
fcompl
push
fwait
outsl
mov
push
ljmp
imulb
xor
stos
out
shrb
and
inc
into
pop
xchg
sub
xchg
sub
inc
xchg
mov
pxor
js
jmp
loopne
jae
and
xchg
imul
sbb
xor
push
jb
addr16
into
sti
cli
cld
dec
test
add
mov
mov
mov
mov
cmc
cmp
adc
repnz
mov
lcall
jp
xchg
nop
xchg
mov
fst
jb
jae
clc
fs
xor
push
mov
aad
sti
out
pmuludq
sub
shrl
lock
fdivrl
insb
mov
sbb
incl
aas
dec
loop
add
add
push
jae
lahf
xor
fstcw
add
rcrb
ds
test
cmc
inc
popa
orl
add
iret
adc
jae
cld
cmpsb
and
aam
dec
adcl
mov
scas
mov
xor
inc
arpl
pop
xchg
sub
push
loop
sbbb
inc
out
test
js
cmc
pop
mov
xor
mov
loopne
cmp
gs
lods
enter
inc
out
add
orl
mov
movsl
sbb
popa
into
and
xchg
sub
or
mov
mov
adcb
jmp
adc
jp
dec
lods
xor
adc
push
push
fildl
inc
frstor
mov
jmp
enter
xor
daa
inc
iret
mov
or
sbb
jp
mov
fsubl
lods
ret
inc
and
cmc
mov
adc
sub
dec
jne
incb
xchg
aaa
adc
jle
mov
pop
outsb
add
nop
stos
mov
and
mov
fwait
inc
jmp
mov
sahf
inc
cmc
mov
sbb
fbstp
and
inc
sub
pop
cmp
sub
and
cmp
inc
aas
dec
add
shlb
and
loop
lcall
sbb
cmp
sbb
pop
imul
adc
stos
cmp
mov
sbb
lock
cmpsl
lds
jg
add
lock
divl
pop
sahf
icebp
ficoms
jae
add
in
and
clc
or
sarb
arpl
jo
jmp
push
push
scas
push
pop
out
das
xchg
daa
cmp
fildll
ficoml
cwtl
inc
loope
mov
jo
mov
mov
stos
pop
or
cltd
mov
mov
insl
push
gs
pop
je
and
mov
clc
out
sbb
loop
mov
jl
loop
jo
adc
or
aaa
inc
pop
or
daa
cmp
and
test
xchg
lret
fld
dec
xchg
lock
jno
inc
cmpsl
jmp
jne
filds
fs
test
xchg
mov
push
push
pop
stos
sbb
sbb
push
fwait
lcall
cli
lea
cli
mov
xor
testl
sti
inc
int
inc
lods
int3
fsts
test
mov
pop
mov
sbb
inc
jge
stc
iret
cmc
or
scas
push
sub
cs
jg
mov
push
cltd
cld
jg
add
repz
lret
pop
adc
cmp
mov
mov
inc
leave
leave
xchg
mov
outsl
not
ss
push
pop
mov
xor
mov
ss
repz
aam
ret
cltd
and
push
xchg
inc
cmp
jbe
sets
or
push
push
outsb
mov
es
lret
inc
fsubrs
sarb
sbb
rcrl
inc
pop
or
mov
sbb
jl
xor
das
add
lds
mov
aad
push
or
stc
test
mov
movw
mov
jns
shll
mov
push
pop
cmc
arpl
jge
scas
mov
sbb
pop
aad
pop
push
mov
and
pop
mov
mov
or
push
popf
xor
int3
pop
or
mov
scas
mov
ja
mov
mov
popf
and
mov
jae
loop
mov
dec
outsb
xchg
sbb
mov
clc
xchg
or
xlat
push
xchg
mov
sub
les
mov
pusha
icebp
mov
test
sar
pop
daa
data16
xchg
or
adc
jecxz
adc
aas
arpl
dec
arpl
xlat
ficomps
mov
pop
mov
pop
iret
pop
pop
ja
ja
scas
lcall
dec
orb
jmp
sub
hlt
xor
jg
push
cmp
push
ret
sti
cmp
stos
mov
xor
stos
out
xor
call
int
sbb
repnz
mov
out
pop
dec
add
insb
cs
cmp
ljmp
jae
jns
pop
mov
push
fidivl
dec
inc
call
xor
ljmp
fldl
mov
rcr
stos
mov
dec
jecxz
outsl
leave
sub
pop
xchg
adc
dec
cmp
mov
test
xchg
movsb
push
scas
xchg
mov
xor
pushf
and
das
lea
or
xlat
repz
or
sub
repnz
lock
xchg
mov
mov
xor
into
loop
outsb
outsl
jnp
adc
jl
push
scas
inc
fwait
cmp
cli
call
fnsave
xor
and
pop
fidivs
lahf
in
leave
fldenv
mov
xchg
ja
lds
cli
aaa
pop
cmp
cmc
or
fs
hlt
xchg
and
add
in
pushf
cvtps2pi
jmp
cmp
imul
inc
pop
cmp
arpl
jb
dec
movsb
push
out
std
cmp
nop
pop
cmp
dec
dec
cmp
arpl
ds
fwait
sbb
jo
mov
int3
jbe
movsb
xor
mov
test
jnp
push
mov
jmp
mov
push
subl
test
movsl
mov
mov
adc
adc
daa
arpl
loope
sub
push
les
lods
std
adc
pop
sbb
jecxz
jl
cli
jg
dec
cmp
ja
jno
shll
inc
fcompl
aad
icebp
in
mov
push
fsubrs
mov
sbb
in
sub
sub
sahf
push
xor
inc
xor
scas
push
fidivs
adc
ret
cmp
add
sahf
shr
pop
xor
ljmp
mov
and
jmp
shr
inc
pushw
decb
pop
incl
dec
jge
cmp
push
addl
js
cmpps
push
dec
fwait
jno
push
out
xor
jp
pushf
cli
pop
pushf
sub
int3
inc
shlb
outsl
mov
jge
scas
scas
out
and
add
gs
mov
lock
and
dec
addb
notb
pop
stos
xlat
adc
or
popf
or
sahf
mov
clc
push
or
inc
pop
cwtl
repz
push
pop
adcl
jmp
fsubrp
xor
mov
mov
jnp
push
pop
or
xchg
mov
inc
sbb
aad
aam
cmp
mov
inc
arpl
pop
adc
pop
loope
insb
andb
repz
roll
mov
cltd
das
popf
lods
dec
mov
mov
les
mov
insl
push
pop
test
jecxz
call
push
test
sbb
sbb
cmp
sbb
lds
into
xchg
addr16
ja
mov
stos
hlt
aaa
push
sbb
mov
inc
imul
stos
jne
out
add
jmp
call
xlat
lret
out
add
dec
pop
cmp
loope
pop
adc
lds
or
nop
push
sub
sbb
insl
jne
pop
xchg
insb
mov
sahf
repnz
xchg
ret
mov
aad
mov
mov
cmpsb
insl
mov
mov
dec
adc
or
lock
and
mov
mov
add
sub
pop
xchg
outsb
cmpsl
mov
insb
mulb
sahf
pop
mov
lahf
sbb
mov
sbb
mov
dec
repz
sbb
dec
or
mov
jp
xchg
loope
pop
mov
stc
sbb
je
and
mov
adc
push
sub
imul
dec
test
inc
pop
and
scas
sbb
icebp
sub
pop
dec
jmp
aas
mov
icebp
mov
test
sub
and
add
push
aad
fisubrl
jle
jb
in
not
ret
dec
inc
or
or
xor
push
lahf
lret
arpl
push
leave
nop
roll
mov
mov
fwait
pop
shlb
or
test
cs
fisubl
ret
pop
xchg
repnz
add
and
mov
mov
cs
dec
cmc
dec
push
inc
pop
pop
xchg
pop
dec
jl
jp
jge
jg
lret
sarl
jnp
xor
ret
ret
les
int3
push
or
rcrl
add
out
stos
in
das
faddl
fwait
inc
lods
push
out
jmp
dec
pop
sahf
and
jnp
mov
mov
aaa
mov
mov
loopne
cltd
ljmp
fidivl
or
lcall
mov
fwait
fs
subl
and
cmpsl
call
or
push
jp
cmp
jle
int3
fsts
xchg
xchg
sub
mov
dec
nop
int
mov
cmpl
cmp
sub
push
inc
std
rcrl
pop
mov
lret
push
inc
push
or
dec
mov
push
decl
mov
jb
rcl
int3
aaa
aam
sti
lcall
jae
push
pop
xchg
data16
lcall
nop
stc
iret
cmpsb
pop
sub
pop
jg
mov
jne
add
enter
mov
mov
imul
js
xchg
push
dec
cmp
or
and
dec
pusha
mov
xlat
daa
out
test
aam
xchg
insl
adc
dec
mov
loop
fdiv
jbe
add
das
sbb
jnp
call
int
mov
add
push
sbb
cltd
xor
mov
adc
dec
dec
dec
jb
mov
dec
add
adc
fs
rorb
mov
daa
inc
jle
data16
push
cmpsl
divps
imul
stos
push
dec
rol
push
icebp
and
lret
and
cmp
push
dec
stos
mov
mov
es
adc
push
jl
push
dec
addl
dec
mov
dec
and
cld
rol
sub
leave
pushf
pop
cmp
sbbl
loope
outsb
iret
mov
sub
jo
dec
jecxz
in
outsl
fidivrl
xlat
pop
movsb
mov
incl
mov
push
jmp
mov
mov
cmc
or
das
adc
pop
sbb
inc
jb
jge
std
xchg
lret
lahf
mov
xchg
mov
insb
xor
sbb
jp
popa
mov
daa
or
jbe
in
ret
ja
daa
cmp
inc
mov
pushf
pop
push
mov
out
jno
pop
loope
test
repz
pop
sbb
jbe
sbb
jbe
lahf
jp
dec
mov
add
sub
push
sbb
sbb
pusha
andb
add
adc
xchg
sbb
adc
mov
int3
mov
pop
dec
int3
push
in
mov
xchg
out
cld
pushf
pop
sub
arpl
sbb
fists
push
mov
in
add
mov
into
mov
aaa
fstps
jl
cmpsl
mov
aas
ret
or
mov
push
mov
sub
adc
pop
inc
xor
test
sbb
ja
and
addr16
lcall
in
outsl
rcl
add
cmp
insl
pop
pop
repnz
imul
mov
adc
fcmovbe
mov
cmpsl
aad
cmp
xlat
cmp
icebp
mov
cld
xchg
mov
jp
or
sti
xchg
add
in
leave
sub
push
inc
fmuls
out
mov
stc
jmp
data16
dec
jo
mov
adc
lcallw
fsubrl
dec
arpl
mov
adc
outsl
sub
mov
dec
sub
clc
mov
dec
in
xor
aam
aam
cmpsb
lea
xchg
fs
movl
xchg
mov
es
add
add
dec
mov
aaa
ret
addr16
and
xchg
out
push
xor
imul
data16
xor
lahf
jns
xchg
stos
ljmp
iret
imul
sbb
addr16
icebp
jno
dec
nop
cmpsb
aam
roll
dec
and
lahf
lcall
pop
add
inc
jl
inc
daa
inc
xchg
outsb
daa
dec
xchg
icebp
mov
jo
mov
sub
cmpsb
jge
inc
push
sbb
jnp
andb
pop
loop
cmpsl
sub
test
dec
out
sbb
push
cli
xchg
push
in
mov
jno
add
inc
jne
sahf
cmc
lahf
xor
jnp
cmp
orb
push
outsl
jb
sbb
jo
scas
xchg
mov
adc
aaa
out
arpl
sub
mov
push
cli
pop
or
mov
push
or
push
mov
fistl
or
dec
mov
lock
push
js
andb
adc
mul
and
leave
mov
inc
cmpsl
lahf
inc
fcmove
les
xorl
jl
and
andb
mov
lret
adc
jae
into
iret
and
xor
jmp
and
xchg
scas
stos
enter
sbb
nop
mov
rol
mov
sahf
pop
xlat
pop
std
xor
xchg
sub
lahf
push
das
movb
lret
sub
add
xchg
pop
adc
push
testb
jg
pushf
push
add
dec
std
rcr
pop
bound
pop
and
mov
aam
cmpsb
inc
jge
jns
inc
out
mov
mov
and
fnstsw
xchg
jo
std
aam
mov
rcrl
psllw
mov
cmp
xchg
dec
cli
stos
pop
jae
xchg
loopne
inc
stos
adc
or
std
pusha
stos
and
push
test
ret
xor
or
testb
jne
lock
and
mov
mov
lods
mov
mov
inc
sti
pop
test
xor
add
sbb
aas
cltd
arpl
cwtl
push
pop
jb
xor
insl
dec
ret
or
dec
adc
mov
mov
arpl
sub
dec
push
jnp
push
inc
data16
push
int3
arpl
imul
mov
hlt
mov
sbbl
push
std
int3
mov
mov
xchg
int3
sub
cmp
cmpb
adcl
and
cmp
movsl
xor
jne
imul
jno
roll
adc
mov
and
jle
sub
lret
jne
jmp
jne
mov
fmul
in
pop
cmp
push
adc
rolb
cltd
xor
and
scas
xchg
push
and
rcll
jl
pop
bound
add
xorl
cli
or
int
or
orl
sbb
pop
mov
jg
add
lea
inc
shlb
in
test
cmp
jecxz
ljmp
mov
jle
or
mov
mov
out
test
movsb
fisttps
mov
roll
xcrypt-ecb
cltd
cmp
adcb
xor
jge
negl
dec
dec
nop
je
shrl
push
pusha
mov
mov
xchg
in
jns
xchg
pop
imul
aaa
int
mov
inc
neg
int3
mov
ds
rcrb
jp
sbb
mov
sub
pop
ret
lcall
rorb
xor
call
hlt
clc
test
insb
adc
movsb
stos
loopne
sub
mov
mov
add
fidivl
cmp
popa
sbb
xchg
lock
insl
rol
sub
sbb
hlt
pop
repnz
lret
sub
cld
cmc
push
lock
mov
jbe
pop
xchg
out
mov
mov
dec
and
or
add
fstl
sbb
cmpsb
outsl
pushf
jo
xorl
push
jb
jae
scas
xchg
push
pusha
into
xor
jle
mov
aas
loop
ss
add
cli
movups
js
push
pop
int3
mov
lods
jb
test
shl
repnz
add
aas
cmp
add
int3
aaa
enter
cld
mov
cmp
dec
lcall
lcall
jns
and
or
sub
cmc
gs
or
jns
jns
and
pop
ficoml
cld
xchg
lret
jae
pusha
push
std
push
nop
adc
imul
dec
sahf
xchg
pop
sbb
popa
dec
pop
mov
les
aam
cmp
cwtl
insl
lret
lock
pop
and
mov
pop
pop
icebp
movsbl
push
xchg
cli
das
mov
insb
mov
inc
shll
test
add
dec
cs
andb
movsb
push
decl
xchg
push
mov
or
in
ret
jmp
aad
dec
xchg
imul
ds
mov
mov
mov
jge
and
leave
insl
sub
mov
ljmp
fwait
popa
mov
mov
fcom
stos
xchg
ja
jno
fsubl
mov
orl
add
sti
test
cmpsl
fsts
adc
push
imul
enter
and
enter
xchg
sbb
andl
scas
push
rcrb
dec
xchg
and
ja
mov
push
jb
subb
mov
mov
cmpsl
es
int
cmp
xchg
testl
mov
inc
out
andl
cmp
mov
insb
daa
cli
push
and
in
das
test
and
jne
test
clc
and
and
push
cld
xchg
sub
into
imull
aad
arpl
sub
mov
pop
fnstcw
in
leave
popf
push
push
lea
leave
cld
cmp
clc
stos
mov
xchg
idivl
mov
mov
addb
les
inc
movsl
lds
jo
pusha
mov
in
arpl
jae
and
aas
sub
pop
push
xchg
pop
jg
int
fimuls
sbb
lods
test
pop
fs
fwait
jmp
iret
or
mov
jecxz
cmpsl
leave
test
mov
cmpsl
mov
stc
cmc
inc
mov
jmp
inc
push
or
andb
xchg
call
adc
addr16
adc
js
cmp
out
sbbl
out
repnz
mov
sbb
mov
call
adc
push
or
mov
and
iret
mov
cmpsl
sahf
pop
cmc
imul
mov
push
jl
pop
xchg
xchg
scas
mov
repnz
sub
push
leave
sub
lea
cmp
push
fadds
fldcw
aam
dec
mov
into
loop
jl
das
cltd
jo
sti
mov
mov
mov
gs
mov
sbb
aas
add
fwait
sbbl
in
loopne
cwtl
orl
mov
fsubl
outsb
adc
js
lds
test
rcr
clc
xlat
jmp
movsb
xchg
cmpsb
lock
sbb
cld
xchg
xor
sbb
mov
lock
push
and
cmp
cmp
subb
push
or
shll
xchg
adc
push
loope
adc
mov
cmpl
jl
xchg
cmpsb
outsl
jle
imul
imul
cmc
dec
shrl
xor
and
hlt
push
je
addr16
arpl
mov
test
fldl
ja
cmp
dec
sub
sbb
dec
int
call
into
inc
cmpsl
arpl
dec
adcl
stos
jmp
dec
and
adc
cltd
ljmp
nop
xchg
adc
mov
ret
add
mov
sub
adc
or
xor
in
test
fstpl
mov
xchg
push
jne
mov
or
lods
aad
clc
stc
cmp
cmp
adc
pop
or
lea
mov
and
jmp
aas
jl
mov
loope
mov
or
push
mov
push
in
or
insl
lret
jne
jle
repz
mov
cmpsb
pusha
dec
sub
mov
std
xchg
jmp
out
mov
dec
add
jle
cwtl
sbb
push
sarl
mov
xor
fnstenv
sbb
xor
out
add
jne
cmpsl
xchg
add
in
test
dec
pop
push
out
mov
dec
pop
cmp
adc
outsb
xchg
cmp
out
int
cmpsl
shlb
pusha
mov
loop
es
in
insb
cli
gs
cmp
mov
mov
jns
xchg
add
or
mov
mov
xchg
sub
subl
scas
cs
imul
dec
aad
mov
mov
out
inc
lock
loop
int
and
xchg
inc
mov
pop
imul
shl
push
out
loope
xchg
pop
inc
cs
fwait
ljmp
jecxz
jne
dec
gs
push
js
mov
insb
adc
dec
push
sub
add
lcall
cmp
nop
xchg
cli
out
dec
fstpl
lock
or
ret
lods
adc
sbb
sbb
out
iret
in
bswap
push
icebp
jbe
and
pop
iret
push
add
test
add
cs
push
jbe
sbb
cmp
pop
lock
mov
adc
notl
js
lock
mov
testb
scas
jno
jae
xchg
cmp
fnsave
lcall
pop
cmp
or
sbb
in
leave
int
jg
fwait
ja
mov
movsb
mov
jae
stos
pushf
mov
cli
inc
jns
xorb
lock
stos
movsb
out
sub
in
sti
push
int3
sti
push
jne
jns
sub
jge
test
mov
mov
cmp
pop
lods
dec
loopne
jmp
js
andb
arpl
popf
cli
adc
or
loopne
out
push
addr16
jno
xchg
cld
data16
cmp
mov
iret
call
jns
loopne
andb
mov
clc
js
xchg
push
dec
fcmovnb
andb
lahf
dec
sub
daa
pop
das
adc
and
mov
lock
sahf
stos
out
int
arpl
sbb
mov
xor
add
mov
lds
mov
into
adc
cmp
push
xchg
fildll
xchg
xchg
popa
decl
js
or
mov
sbb
lods
push
pop
data16
dec
sub
shr
mov
adc
in
es
mov
push
cmpsb
xchg
xchg
xchg
in
je
cmp
pop
cld
stos
add
clc
sahf
push
ja
push
and
pushf
repz
pop
inc
jg
out
enter
jno
clc
and
cmpsl
sbb
and
mov
xchg
js
dec
mov
xor
fnstsw
rolb
lcall
jmp
jge
divb
scas
movsl
or
jbe
jg
fwait
xor
and
aas
sub
push
popf
mov
adc
lock
xor
mov
push
adc
push
out
push
lret
inc
jb
xchg
mov
outsl
addr16
push
jo
movsb
loop
roll
cld
aam
test
mov
sub
andb
lds
ljmp
dec
out
sarl
lods
inc
mov
jbe
adc
pushf
outsb
mov
imul
outsb
dec
stos
inc
mov
xchg
je
pop
jb
rorb
pushf
scas
jmp
out
mov
lock
scas
adc
and
outsb
jge
push
or
mov
pushf
das
xchg
push
push
jae
mov
xor
imul
fcomps
sub
hlt
pop
out
push
vcvtsi2sdl
outsl
clc
sahf
ret
mov
push
pushf
jno
inc
test
aam
call
cmp
cmp
dec
xchg
dec
orl
adc
push
xchg
mov
mov
or
in
enter
fnstsw
fldcw
mov
sub
push
bound
sti
or
mov
fildll
inc
push
push
icebp
adc
or
ljmp
dec
mov
mov
lea
push
stos
stos
jnp
push
pop
xchg
cmp
fwait
lock
adcb
push
cmp
out
pop
into
sti
cwtl
loope
mov
in
xchg
mov
and
insl
mov
loopne
push
mov
in
add
insl
jp
out
mov
js
outsl
hlt
mov
jg
pop
hlt
mov
cmpb
fstpl
fnsave
push
xor
adc
mov
mov
mov
jle
ret
cmp
fdivs
in
jmp
out
pop
dec
test
shll
add
icebp
sbb
jne
cmp
leave
jl
clc
lods
ljmp
aaa
xorl
mov
sub
push
stos
int3
jnp
arpl
aas
addr16
lahf
push
test
inc
push
xchg
popa
mov
sbb
popf
dec
push
jne
push
xchg
inc
jl
mov
mov
mov
and
jecxz
xor
mov
idiv
ljmp
mov
dec
movsb
lods
push
pop
aaa
xchg
test
sarl
jp
test
lret
or
sbb
js
jo
shlb
cmp
push
ljmp
decl
jl
loope
iret
into
push
add
data16
add
mov
pop
jecxz
dec
xchg
in
clc
cmp
mov
xor
pop
lods
cmp
sub
mov
mov
add
adc
ja
iret
or
mov
adc
or
lock
in
inc
inc
inc
test
inc
mov
sti
xor
mov
addr16
inc
sub
aad
or
lods
test
ljmp
notl
and
decb
sti
inc
pusha
sub
xorb
ss
sub
fisubrs
dec
mov
mov
or
out
and
mov
sbb
orl
cltd
std
outsl
shll
pop
mov
fucom
jnp
xorl
jecxz
jmp
push
xchg
stos
adc
mov
mov
out
fistl
fidivrs
ds
jb
cwtl
outsl
cmpsl
lret
aam
fs
notb
xor
cltd
pop
mov
in
stc
mov
sahf
mov
mov
inc
out
mov
dec
mov
adc
and
leave
lods
jle
jo
mov
add
xor
je
push
out
test
inc
subb
stos
fidivrs
imul
add
adc
fcoml
cmpsl
mov
push
lds
mov
fucomp
dec
out
pop
jg
pusha
pop
andl
ss
es
xchg
mov
sub
subb
mov
sarb
mov
mov
xchg
sbb
xor
jb
daa
push
in
sbb
fmuls
out
sub
pop
in
rcr
inc
pop
mov
cmp
inc
mov
les
mov
iret
movsb
xchg
push
dec
mov
mov
push
cwtl
mov
jl
xor
jae
dec
xchg
pushf
pushf
mov
fisubl
mov
fdivrl
inc
and
aam
cli
push
pop
push
dec
mov
aad
xlat
add
and
popf
cs
stos
pop
mov
insl
add
add
enter
inc
pop
ja
decl
adc
in
adc
cs
jae
insb
mov
pop
xor
stos
mov
mov
out
jae
aaa
loop
scas
cwtl
in
repz
xor
jo
lds
and
stc
sub
mov
sub
fldenv
and
push
ja
iret
push
xor
jno
jne
fistpll
ss
jecxz
lock
call
enter
outsl
mov
pop
cli
pcmpgtd
push
jmp
loop
nop
ds
add
nop
mov
repz
hlt
hlt
fisttps
in
or
aam
lret
stc
leave
lods
stos
pop
movsb
push
or
mov
adc
fadds
mov
lock
jmp
repnz
jl
and
orl
mov
cmp
xchg
outsb
mov
popa
shl
mov
push
movsb
adc
cmp
mov
sub
mov
adc
xor
stos
pop
roll
push
in
pusha
sub
repnz
std
add
test
sub
es
daa
test
pop
xor
cld
lret
repnz
mov
cmp
jl
cmpsb
xchg
cmp
les
push
jge
fistps
test
push
ss
movsb
jge
xlat
pop
mov
sbb
mov
lea
inc
or
js
out
sbbl
movl
aaa
push
and
pop
flds
fistpl
sbb
inc
fistps
nop
jle
call
mov
stos
cmc
push
jns
icebp
xchg
adc
adc
decl
je
fwait
mov
cmc
cltd
sbb
cld
sbb
xchg
adc
sar
jg
loope
in
xchg
je
fnstcw
mov
sub
jle
ja
sbbb
push
push
push
mov
mov
mov
loopne
ds
push
int
pop
push
pop
cmp
pop
repnz
shlb
xor
incb
dec
inc
fidivs
aas
dec
lcall
jbe
aaa
int3
adc
pop
mov
jo
mov
cmpsl
fdivp
out
mov
sbb
and
sbb
paddb
sub
shll
lahf
enter
filds
add
sub
mov
xchg
mov
adc
adc
cmpsl
lcall
push
mov
mov
jp
stos
vprotb
mov
leave
loope
jge
cmp
cmp
dec
test
cmp
push
loopne
pop
adc
cmp
jmp
lret
cld
outsl
ror
mov
inc
in
data16
adcb
pop
mulb
jp
test
cmp
push
push
jae
mov
jecxz
xchg
mov
inc
mov
adc
in
dec
aad
lret
xchg
mov
cmp
enter
pop
sub
inc
lcall
cmpsl
lds
inc
fucom
add
push
mov
ret
adc
lcall
in
test
add
push
imul
add
sbb
add
sbb
xor
mov
xor
push
adc
mov
jle
dec
xchg
fs
loop
adc
mov
and
pushf
clc
inc
xor
dec
and
popa
inc
cmp
dec
data16
aaa
into
fcoml
rolb
xor
sbb
mov
or
add
daa
fnstcw
cmc
adc
xor
scas
ret
in
or
jp
test
push
lret
xlat
jmp
or
ds
push
mov
push
fdivrl
gs
inc
mov
adc
ss
jecxz
test
mov
sub
in
notb
sbb
xchg
push
pop
mov
xchg
or
roll
fs
dec
pop
xchg
xchg
mov
lds
leave
daa
nop
arpl
lock
mov
pop
movsl
cmp
lea
frstor
subb
dec
sbb
lock
sub
or
ds
in
cmpsb
inc
or
shll
jo
xchg
scas
and
inc
adc
jae
inc
aas
mov
ja
sub
in
or
cmp
add
cmp
push
fidivrl
sbb
scas
mov
dec
pop
mov
mov
cs
pop
test
pop
outsl
je
lcall
xor
xor
mov
test
pop
xchg
gs
shld
pop
fcmovne
or
add
mov
inc
pop
add
mov
cmpsl
inc
je
scas
hlt
jge
mov
adc
or
out
pop
add
filds
les
popf
mov
aaa
lret
or
pop
popf
into
xor
jl
outsb
scas
mov
mov
xor
shlb
inc
mov
xchg
dec
jbe
loope
dec
loope
adc
sbb
cmpsl
addr16
inc
sahf
in
push
sbb
cs
cmp
sub
cmc
aaa
das
sbb
inc
cmp
sti
in
jbe
sub
cld
stos
push
mov
xchg
pop
cli
add
fwait
jl
jb
rcl
mov
lahf
mov
lds
iret
or
or
jno
jecxz
sub
pop
fimuls
pminsw
test
lock
imul
shrb
cmpsl
int
mov
loope
test
mov
pop
mov
cwtl
mov
mov
xchg
in
je
push
sbb
mov
aam
mov
jbe
test
xchg
das
mov
inc
cmpsb
xchg
cmp
aas
push
xchg
ljmp
insb
mov
adc
push
mov
cld
pop
inc
lods
fdivrl
pop
mov
mov
adcb
sbb
add
xor
mov
test
inc
call
mov
imul
loop
jbe
popa
mov
lahf
cmc
jns
daa
roll
xor
cmpsb
mov
xchg
mov
cs
push
test
loope
push
ja
inc
push
call
popa
mov
loop
into
inc
dec
pop
cmpsb
xor
fdivrs
jecxz
into
shld
xor
push
out
lret
arpl
mov
mov
repz
pop
cmpsl
mov
xor
push
stos
aad
sub
fnstenv
sub
pop
mov
cld
dec
pop
int
sbb
mov
dec
mov
push
in
push
jge
or
addr16
sbb
pop
xchg
aaa
cwtl
daa
mov
jno
loopne
xchg
int3
cltd
sub
mov
and
rcll
push
cli
bswap
fisubrl
movsl
outsl
daa
loop
or
mov
inc
push
pop
popf
dec
popa
mov
dec
loope
mov
push
xor
roll
and
aad
std
or
mov
lods
insb
sub
cmpsb
dec
js
repnz
dec
fisttps
lods
data16
xor
jno
dec
or
lods
jo
lock
inc
push
mov
cmc
sub
pop
jg
fists
adc
lcall
pop
mov
outsb
movsl
adc
test
cmp
cmpsb
mov
fcomps
mov
mov
out
movsl
add
gs
outsb
test
sbb
in
adcl
jl
or
les
xor
dec
les
idivb
mov
mov
repz
xor
flds
jae
dec
dec
and
sbb
jge
push
sbb
adc
xchg
add
dec
loop
and
js
iret
lock
jle
mov
out
out
test
lock
mov
stc
lea
lods
mov
ds
arpl
fdivs
fnstsw
in
ljmp
out
std
pop
jecxz
push
pop
sub
dec
in
cmp
daa
cmpsb
push
xchg
in
adcl
out
addr16
add
cwtl
sub
sub
ljmp
arpl
inc
push
push
jno
jmpw
ret
lods
pop
mov
push
jns
rorl
xchg
into
jno
movsl
data16
push
adc
cmp
cmp
shrb
dec
add
aas
or
mov
mov
jmp
out
js
ss
mov
outsl
outsb
mov
push
sarl
push
cwtl
xchg
push
out
es
movsl
adc
lods
not
push
push
pop
or
dec
cmp
js
aad
in
enter
ret
outsl
iret
ret
shlb
mov
mov
or
push
push
push
andb
mov
in
fs
mov
mov
stos
inc
jg
sbb
xchg
push
insl
bound
outsl
test
inc
sti
push
cmp
add
int
out
cmc
cmp
inc
repnz
xor
and
test
es
nop
push
sbb
cmp
sub
jle
pop
out
push
dec
inc
inc
lods
inc
cmp
mov
sbb
int3
fdivrl
mov
leave
sarl
pop
sbb
and
add
stos
adc
imul
cmp
neg
cli
jge
aam
pop
and
lahf
cmc
jo
jmp
fsts
push
sbb
xchg
inc
lock
jae
jns
mov
ret
xchg
cs
inc
mov
cmp
inc
dec
out
xchg
sarl
iret
add
std
jge
add
outsb
insl
adc
pop
cmp
rolb
lret
aaa
fists
xor
aam
data16
adc
jp
xchg
jge
mov
fwait
insl
cmp
xchg
fidivl
or
out
ds
nop
mov
and
and
js
nop
jbe
mov
ss
cmp
jo
lds
xchg
dec
in
stos
sarb
fsubp
push
and
int3
mov
xor
lcall
fistpll
push
loopne
or
leave
insl
aad
mov
or
sub
push
arpl
mov
hlt
or
mov
rclb
jb
into
rcl
jae
pop
cmc
mov
or
pop
push
push
sub
stc
loope
inc
out
enter
fcomps
mov
cmp
addr16
lret
rclb
jle
pop
out
sbbl
fst
loop
dec
shrl
jne
pop
in
sahf
xor
cwtl
cmpb
out
mov
loop
setge
mov
fisubl
or
loopne
in
call
lds
inc
bnd
aas
pop
jne
add
or
sbb
push
test
adc
adcb
cmp
push
shrl
mov
pop
hlt
pop
cmp
pusha
sub
scas
pop
pop
adc
mov
mov
adc
rcrl
pop
sahf
dec
stos
ret
out
and
fs
adc
sub
sahf
repnz
dec
std
cwtl
pop
lock
lcall
cmp
cmc
xor
pusha
ljmp
int
jg
adc
stos
and
xchg
sbb
mov
mov
sbb
scas
sbb
testl
test
rolb
shrb
push
imul
pushf
mov
push
lahf
adc
xor
dec
insb
dec
cmp
cmp
push
jns
or
test
add
sub
ds
lds
xchg
jp
sub
push
cmpsl
repnz
adc
addr16
sarl
and
loop
cwtl
mov
sub
lret
nop
and
inc
pop
ficomps
dec
pop
out
dec
fldenv
icebp
scas
test
fmuls
cmp
out
iret
or
and
adc
dec
loopne
jns
jp
scas
cmpsl
sbb
pop
mov
cmpsl
sti
call
mov
and
jecxz
adc
mov
orb
subb
xchg
call
mov
cmc
xor
xchg
bound
mov
fbld
jl
and
mov
fnstcw
sbb
jg
adc
mov
mov
pop
test
or
stos
push
subl
sub
es
jg
fnsave
flds
push
inc
or
and
insb
adc
es
xchg
xor
dec
pop
push
push
shrb
mov
or
xchg
xchg
aaa
pushf
push
or
inc
in
adc
test
add
cwtl
bound
pushf
mov
ret
adc
cmp
jb
sub
stos
sbb
jp
mov
movsb
cmpb
popa
and
clc
sub
dec
out
adc
sti
jmp
mov
cwtl
jno
mov
fdivrs
jae
les
js
call
xlat
xchg
inc
scas
sbb
test
cmpltps
shl
stc
cmpsl
mov
in
mov
lds
or
mov
adc
push
jmp
or
jae
stc
mov
ficoml
repz
iret
xchg
push
cmc
pop
fistps
jg
and
lock
cmp
push
popf
inc
outsl
xorl
addr16
dec
and
jne
jg
fsubs
pop
mov
xacquire
or
ret
sub
jge
adc
enter
sub
mov
shl
adc
dec
cmp
mov
push
or
lods
xchg
sbb
les
inc
loopne
popa
div
outsl
int
sbb
sub
lods
pop
adc
pop
push
dec
mov
jge
push
jmp
in
pop
cli
jo
pop
pop
xor
jp
sbb
pop
out
mull
mov
mov
mov
ret
repz
stc
xor
xor
sub
add
inc
push
dec
fsubrs
outsl
or
mov
jne
cld
push
and
loope
xor
pop
mov
fidivs
jno
mov
pop
int3
ss
out
mov
dec
js
jp
pusha
pop
int3
jnp
inc
rorl
xor
pushf
addr16
cmp
jmp
jns
mov
pop
ret
out
xchg
adc
popa
clc
mov
xchg
cli
or
inc
cmp
add
arpl
das
sbb
pop
hlt
cli
test
sub
leave
fiaddl
mov
jae
aam
les
lods
mov
jmp
or
rcll
fldt
or
sbb
mov
pop
lcall
and
push
mov
push
outsl
lods
or
aam
loope
and
mov
sbb
or
sahf
lods
mov
cmc
gs
fwait
mov
xor
js
shrb
ret
xchg
xor
pop
ds
shrb
and
or
js
loopne
lcall
repnz
push
push
mov
lret
and
xchg
decl
lret
fs
cli
xchg
popa
push
int3
leave
fisttpll
gs
pop
mov
es
nop
ljmp
sti
mov
dec
sub
push
jno
clc
cmp
mov
push
cmp
daa
sbb
pop
inc
leave
ss
jmp
cli
aas
rcr
incl
dec
mov
jge
and
bound
jo
cmp
arpl
in
mov
jns
mov
or
jg
andl
sbb
shlb
xor
push
js
or
push
jge
cwtl
stos
pop
jae
inc
jns
dec
adc
fs
dec
sbb
mov
sbb
sub
sbb
fcoms
or
sahf
jge
or
data16
cmp
sahf
lret
imul
lods
jp
cmc
outsl
mov
mov
mov
mov
or
arpl
mov
lret
inc
out
inc
add
in
xchg
repz
xor
popa
test
arpl
cmp
int3
pop
scas
inc
int
pop
push
out
into
sbb
cmp
mov
aad
jecxz
and
add
mov
lock
xchg
sub
into
xchg
push
fmull
mov
xor
hlt
sbb
andb
mov
dec
push
cs
jns
mov
sub
and
into
repz
mov
cmpsl
filds
xlat
push
ja
int3
xor
frndint
or
enter
adcl
xor
test
or
imul
lahf
mov
push
es
inc
popa
mov
push
ljmp
mov
outsb
push
iret
pop
mov
xchg
lock
adc
out
xchg
pop
and
push
montmul
cmpsb
inc
in
popf
or
in
jns
sbb
jnp
je
and
xchg
cmp
imul
aam
mov
add
out
out
ss
btl
shl
sbb
mov
sub
daa
mov
mov
xchg
enter
stos
test
lods
repnz
das
jns
mov
scas
dec
inc
lods
dec
lods
testb
fmull
sarb
lea
add
lcall
xchg
mov
xor
cmpsl
test
mov
mov
inc
pop
mov
mov
mov
fs
mov
cli
mov
xchg
pusha
sub
xor
or
aam
push
adc
mov
cmp
or
inc
inc
mov
mov
outsb
loope
test
andb
cs
cli
sbb
imul
xor
sub
sbb
mov
xorb
mov
inc
int3
cmp
adc
test
repz
dec
std
adc
decl
sarl
repz
cwtl
out
std
or
pop
lods
pop
push
jmp
sbb
mov
out
push
inc
mov
jb
jl
mov
mov
pop
dec
mov
pusha
cmp
mov
jmp
mov
loop
or
fidivrl
mov
sbb
imul
loopne
test
rcrb
mov
push
mov
pop
mov
cmp
mov
mov
pop
sbb
pop
mov
repz
cmpsl
mov
enter
cli
mov
inc
fdivrl
fnstcw
aaa
cwtl
inc
and
jnp
push
xchg
inc
and
mov
mov
gs
pop
loope
ror
mov
adcb
cwtl
addr16
mov
loop
leave
jns
dec
cli
gs
jge
sti
mov
jne
or
push
fldt
loopne
mov
and
mov
loopne
pop
dec
pop
sub
movb
jg
sbb
sbb
push
sbb
inc
fnstenv
cmp
hlt
sahf
testl
push
call
rol
mov
jbe
pop
jb
into
lock
inc
sub
adc
ljmp
rcrb
dec
push
sub
scas
adc
mov
jle
pop
int3
and
sbb
pushf
test
into
stos
jl
push
mov
cmpsb
pop
mov
inc
stos
dec
adc
jge
adc
mov
popf
aad
xchg
dec
pop
dec
sbb
sub
cmp
repnz
out
adc
push
sub
dec
pop
test
sub
dec
in
sahf
rcrl
push
mov
ljmp
loope
cmpl
je
jge
xchg
das
xchg
call
jg
pop
orl
das
cmp
cmp
pop
in
mov
xchg
add
mov
lret
jmp
imul
aas
mov
xor
dec
push
xchg
mov
push
mov
mov
push
dec
out
mov
outsb
cmp
or
hlt
pop
cmpsb
scas
xor
lcall
mov
clc
ljmp
push
sbb
jle
clc
outsl
ss
push
inc
xor
outsl
inc
and
lcall
sahf
jno
movsl
int3
lret
and
xor
repnz
adc
sbb
dec
repz
mov
cltd
add
or
jg
mov
cmp
movl
adc
mov
aas
imul
sbb
pushf
xor
xor
push
inc
das
mov
popa
mov
stos
mov
pop
testl
add
pushl
mov
rol
daa
xchg
fwait
cli
add
xchg
mov
sbbb
push
out
nop
sub
mulb
call
adc
jae
inc
xor
pmaddwd
addr16
lahf
mov
xor
sbbb
pusha
aaa
cmp
fidivrl
popf
or
arpl
xor
divb
into
and
rcll
push
sbb
outsl
mov
divps
inc
movsl
cmpl
mov
sahf
stos
cmp
mov
popf
jo
mov
dec
inc
or
sti
mov
pop
loop
ret
pop
mov
dec
loope
lcall
pop
outsl
mov
push
rcrb
out
sbb
das
mov
or
jp
lods
fsubl
adc
xchg
fistps
pop
jbe
out
fsubrp
decl
push
leave
lods
xchg
mov
dec
or
nop
mov
xlat
jecxz
imul
dec
jecxz
jle
xor
sub
daa
pop
fcmovu
bound
sti
xchg
mov
mov
ds
enter
inc
mov
dec
sbb
dec
jmp
rcl
sbb
mov
daa
lahf
jo
hlt
daa
dec
dec
faddp
push
fsts
movsb
dec
ficomps
std
fucomip
gs
movsl
iret
bound
jo
lods
pop
movb
lock
mov
mov
sub
xchg
cltd
sbbl
js
xor
jge
pop
iret
mov
icebp
jg
xchg
out
add
mov
pop
dec
add
adc
push
popf
mov
xchg
in
mov
mov
add
mov
pop
addb
cwtl
or
mov
out
cwtl
inc
sub
dec
fmuls
mov
push
push
dec
popa
mov
jns
sub
and
out
xchg
xchg
cltd
mov
inc
sarl
mov
outsl
or
inc
bound
fwait
cmpsl
and
fnstsw
sahf
ror
fmulp
mov
xor
pop
lea
out
fwait
xchg
jb
imull
adc
aas
test
int
fsubrp
cmp
xor
mov
hlt
push
cmp
mov
insl
pusha
dec
sbb
jnp
sbb
outsl
push
in
push
add
aam
inc
sub
stos
adc
pcmpeqw
mov
and
mov
pushf
jne
stos
cmp
pop
pusha
scas
adc
fstpt
push
push
inc
data16
in
das
push
xchg
xor
fwait
mov
addr16
add
das
arpl
pusha
dec
and
cmp
test
jmp
adc
xchg
in
add
enter
jle
icebp
xor
mov
jae
fildll
rorb
mov
push
aam
push
add
lock
xor
sbb
jp
repnz
arpl
mov
js
mov
leave
fcoml
mov
idivl
sti
inc
pop
daa
cmc
outsb
mov
dec
jecxz
jg
push
out
mov
dec
pushf
mov
xor
or
push
les
popa
mov
sbb
or
mov
and
in
nop
and
aas
sub
dec
call
test
enter
add
lret
push
push
test
in
ds
out
call
lret
fdivrl
lods
adc
arpl
xor
cmp
testb
je
sub
ds
in
out
push
into
pop
cltd
jmp
clc
inc
adc
xchg
or
sbb
mov
sbb
push
outsl
push
popf
push
lea
sub
loope
or
xchg
lea
mov
adc
push
imul
out
data16
fnstsw
test
push
test
and
scas
mov
mov
inc
pop
insl
mov
es
mov
fstps
lret
int3
cmp
test
in
ljmp
pushf
repz
pusha
mov
dec
mov
imul
sbb
call
inc
adc
inc
xchg
std
jo
lock
shlb
pop
mov
popf
insl
mov
sbb
arpl
xor
adcb
popf
stc
je
or
stc
pop
daa
mov
test
in
fs
pop
jne
xchg
push
pop
cmpsb
fsincos
push
or
imull
and
ret
movsl
fsubrp
into
or
sarl
xchg
lods
push
mov
jmp
dec
scas
imul
mov
mov
cmpsb
adc
xor
cmpsb
inc
sub
icebp
or
xlat
insb
js
jne
or
mov
orb
in
pop
xor
iret
subl
scas
cmp
repnz
testl
sub
pop
or
stos
fs
fwait
xor
jmp
mov
pop
fisttpll
loopne,pn
pusha
rcll
cmpsl
ljmp
xchg
sar
cs
sbb
test
inc
push
callw
jne
fwait
movsl
fildl
popa
push
das
sbb
add
add
adc
push
push
cmp
push
or
shl
js
push
mov
adcb
out
inc
je
stos
mov
or
es
repz
mov
and
inc
xchg
mov
mov
mov
dec
pop
push
insl
pop
cmpsb
insl
jae
jbe
dec
mov
cmp
loopne
stos
test
mov
shll
loopne
cs
andl
scas
or
frstor
dec
dec
pop
je
cmp
push
xchg
sub
add
dec
mov
mov
out
push
lods
fsubs
nop
xchg
mov
and
lcall
loope
pop
icebp
mov
in
fisubrl
pop
mov
xchg
pop
cmp
mov
loope
imul
into
cmpl
jnp
inc
test
sti
or
ror
repz
jb
jg
jae
jmp
xchg
ds
pop
hlt
stos
hlt
mov
mov
sahf
sbbl
push
sub
cmp
jbe
jnp
and
xchg
pop
cmc
ret
jmp
add
jmp
cmp
popa
insb
test
faddl
les
jno
adc
int3
es
adc
pop
call
adc
cmp
adc
lret
aad
loope
std
sub
pop
jl
scas
and
mov
or
mov
andb
xchg
inc
adcl
push
das
mov
in
sub
push
mov
aaa
cwtl
mov
mov
xchg
divb
xor
mov
sbb
rolb
cmp
mov
shll
std
adcb
jecxz
lock
sahf
jo
jp
fcos
push
adcb
popa
iret
stos
sahf
dec
in
jns
jno
mov
sbb
jo
jecxz
popa
movsl
ljmp
insb
mov
leave
lahf
and
in
scas
or
fsubl
mov
fistpll
arpl
cmp
fwait
nop
dec
sbb
mov
clc
ds
enter
mov
sbb
or
mov
lea
xchg
sub
pushf
jns
dec
dec
mov
sti
fs
xchg
or
outsb
jns
mov
jl
mov
xor
dec
fadd
xchg
fwait
int
stos
add
xor
push
pushf
shll
pop
inc
fnstsw
cmc
cs
sbb
mov
xlat
and
mov
pop
aaa
push
stos
and
cmp
mov
mov
out
lret
stc
sbb
loopne
leave
repnz
pop
in
rcll
repnz
ljmp
jmp
mov
gs
mov
mov
and
pop
xchg
mov
insl
push
mov
push
lods
mov
and
clc
sbb
cmpsl
fcmovnu
cmp
das
mov
in
dec
and
cmp
ljmp
in
mov
xor
sub
jle
or
xchg
or
jp
xor
bound
bound
fidivl
sub
ljmp
stos
sahf
mov
int
in
lods
stc
adc
mov
in
jne
xchg
scas
in
stos
xchg
jne
call
psraw
mov
xlat
xor
mov
shlb
xchg
in
jge
popa
shll
cmp
ret
in
jne
cld
movsb
outsb
adcb
mov
sub
addb
pop
cmc
add
or
and
inc
mov
aaa
cmp
push
adc
sahf
lods
fs
push
lods
jmp
pop
fstps
push
jb
dec
pop
jg
fdiv
jo
es
sbbb
in
loopne
mov
cmpsb
jge
cmp
add
sahf
mov
mov
add
sahf
stc
popf
cmpl
inc
push
hlt
push
jl
push
push
pop
mov
mov
out
sti
xchg
pop
lret
mov
inc
dec
cmp
and
dec
outsl
daa
out
es
sub
rcrl
lret
dec
cmp
dec
cmp
sub
xor
nop
incl
cmc
adc
inc
push
push
adc
insb
pop
iret
and
jns
ljmp
jecxz
iret
adc
popa
pop
cmc
out
add
xchg
mov
js
adc
inc
clc
mov
sub
loop
dec
lret
hlt
and
and
mov
cmp
imul
js
imul
or
shrb
jp
dec
jo
cmp
mov
adc
adc
movsl
insl
add
pushf
repnz
mov
fsubs
in
fldt
lea
pusha
in
aas
pop
adc
sub
xor
sub
lock
das
add
dec
mov
or
mov
mov
jne
and
call
iret
pop
mov
gs
lret
mov
cmp
jno
mov
push
xor
jo
mov
dec
xor
adc
cmc
ljmp
push
cmp
inc
sub
xchg
ficompl
subb
cmp
xor
inc
pusha
jmp
and
xchg
inc
pop
push
repnz
out
das
inc
addr16
pop
dec
and
dec
jne
mov
push
or
iret
mov
mov
repnz
fbld
push
in
xchg
xor
cli
cmp
sub
dec
mov
adc
or
or
cmp
inc
push
mov
cvtpi2ps
sub
xor
jge
stos
stos
inc
cmc
push
sbb
aaa
lahf
leave
push
inc
pop
mov
rcll
hlt
lret
jo
pop
mov
inc
data16
fucomip
pop
add
mov
test
leave
addr16
roll
test
imul
or
aaa
adc
push
movsb
filds
test
fnsaves
mov
jb,pt
and
fwait
push
mov
dec
mov
mov
jno
mov
mov
cmc
mov
inc
or
inc
push
or
or
faddl
test
int3
or
jecxz
or
test
sbbb
inc
sbb
sbb
cmpsl
int3
mov
inc
ja
jne
pop
push
and
das
sub
inc
imul
das
clc
ret
adc
mov
enter
into
fs
mov
test
pop
ficomps
mov
arpl
dec
scas
scas
arpl
pop
fadd
sarb
sbb
or
arpl
mov
xor
lods
pop
xor
xor
add
mov
insb
imul
add
xor
je
lods
or
jbe
xchg
xchg
mov
sub
dec
mov
js
pop
fisttps
sbb
rcl
xor
cltd
mov
cmc
jo
in
add
loop
add
sub
pop
int
push
lret
pop
loopne
inc
popa
clc
xor
jg
adc
add
lret
cmp
arpl
rcrl
pop
leave
cmpsb
mov
mov
pop
int3
fists
sbb
call
call
jmp
sbb
inc
fdivrl
loop
sbbb
add
cmpb
jnp
into
adc
aas
cmp
divb
ficompl
into
mov
mov
shll
roll
mov
mov
xor
dec
cli
mov
mov
dec
adc
sbbb
inc
add
and
and
mov
out
int
movsl
inc
push
shl
push
cld
mov
sbb
adc
mov
dec
or
lahf
push
xor
push
repz
sub
dec
xchg
ljmp
jne
and
fisubs
cltd
cwtl
pushf
fimuls
mov
push
pop
xor
pusha
shlb
jp
dec
dec
jae
pop
int3
mov
call
ljmp
repnz
js
push
ss
roll
stos
rclb
scas
mov
in
mov
xchg
arpl
push
lock
fidivs
stos
mov
pusha
inc
enter
jmp
push
mov
lret
outsl
in
mov
lret
lret
pop
sbb
leave
iret
clc
enter
mov
pop
inc
pushf
pop
push
outsl
imul
add
imul
leave
dec
sahf
inc
xor
out
out
pop
jnp
dec
stos
clc
les
fnstenv
pop
cmpsb
into
lock
enter
ret
repnz
cmp
dec
sbb
pusha
int3
lods
jle
aad
out
aaa
insl
aaa
adc
add
repnz
inc
sub
lahf
scas
ret
mov
pop
jae
lahf
daa
orl
in
mov
idivl
mov
nop
push
les
shrb
ret
mov
xor
xchg
mov
std
int3
or
popf
xsha1
cmpsb
into
ret
inc
jns
cmc
shl
pop
rcrb
shl
cmp
leave
pop
std
mov
aam
push
popf
je
sahf
sub
push
add
cmp
inc
pusha
or
mov
hlt
outsb
pushf
notb
sub
mov
jno
in
push
add
mov
xchg
aas
fidivs
mov
add
sub
mov
and
outsb
push
xchg
test
mov
cmc
sbb
scas
mov
adc
jo
cmpsl
aas
inc
pop
jno
xchg
test
dec
or
ja
xor
cli
xchg
ret
sub
cmp
lea
mov
and
adc
mov
push
fsub
aas
aaa
gs
das
xor
add
add
mov
pop
outsb
push
add
dec
dec
pop
jns
outsl
or
fnstenv
jno
jae
mov
cmp
lods
mov
push
push
outsl
push
mov
cwtl
movsb
xchg
or
sub
inc
aam
mov
and
repz
popa
push
test
lock
out
jnp
xchg
lret
mov
scas
orb
or
cmp
sbb
inc
jecxz
jne
mov
test
mov
movsl
movsl
ljmp
mov
dec
test
in
pop
je
fmull
adc
and
jb
inc
sub
int3
xor
pop
pop
or
lods
inc
loop
inc
inc
fistl
pop
pushf
or
mov
in
les
pop
jno
ds
repz
or
loope
adcl
jge
dec
push
cmpsb
iret
pop
mov
scas
cli
aam
sbbb
fwait
hlt
test
lret
sbb
iret
mov
xor
out
mov
add
lahf
popf
xor
scas
dec
std
pop
iret
cmp
cmp
mov
sbb
mov
or
mov
daa
data16
popf
mov
xor
icebp
adc
lahf
adc
push
jmp
pop
jo
lods
aas
loopne
or
add
dec
mov
pmaddwd
or
mov
push
and
jb
and
sbb
cmp
mov
pop
add
jae
cmp
push
inc
add
sbb
pop
cmp
mov
mov
movsb
iret
nop
push
iret
adc
pop
cs
das
jge
push
movsb
loopne
xchg
lea
icebp
int
daa
mov
inc
or
adc
rcrl
or
daa
clc
sbb
fcomps
xor
push
sbb
mov
je
xchg
lret
call
sub
ficoml
xor
fbstp
fnstenv
push
cmpsb
into
cmpsl
add
push
jo
jae
pop
out
or
jne
iret
pop
cld
pop
fisubl
adc
mov
repnz
adc
push
adc
add
shlb
ret
cmc
jge
jb
sub
xchg
jecxz
sbb
xchg
mov
pusha
jae
popf
stc
mov
lea
aaa
fs
cmpsb
jmp
scas
jg
insb
test
lret
stc
or
mov
mov
or
data16
in
rolb
jo
out
cltd
xchg
lea
cwtl
dec
daa
mov
aas
adc
ds
call
sbbl
and
push
pusha
push
add
mov
xor
sarb
cmp
mov
daa
rol
sub
jmp
jae
shlb
jmp
loope
enter
in
sti
jbe
frstor
fnsave
shrl
dec
js
nop
popf
imul
fbld
xorl
aam
fmull
cwtl
pop
rcrb
dec
dec
mov
ffreep
pop
shll
pop
idiv
lret
addr16
mov
xor
mov
js
rolb
lds
push
mov
add
inc
ret
ds
push
dec
mov
add
inc
mov
mov
subl
in
iret
cmp
data16
lock
sar
mov
data16
das
xor
loop
cltd
leave
sub
ss
into
adc
loope
xchg
push
adc
das
push
mov
cltd
pop
ljmp
sub
mov
mov
or
test
pop
xchg
jo
sahf
ret
adc
data16
out
sar
mov
adc
or
or
cmp
and
xchg
fs
ret
pop
jle
or
pcmpgtw
daa
adc
pop
les
cltd
fs
scas
xchg
adc
pop
push
js
sub
xchg
out
add
mov
mov
les
adc
mov
mov
pop
xor
push
fmull
mov
mov
lret
inc
or
xor
or
sub
push
mov
dec
sub
ljmp
xor
add
out
outsl
mov
cmp
sub
and
rcrl
mov
mov
mov
pop
mov
xor
nop
inc
push
sub
mov
in
and
cld
inc
push
sub
int
gs
push
outsb
cmp
bound
xor
jge
xorl
nop
sahf
lds
cmpsb
iret
jecxz
push
sti
inc
aaa
sbb
test
call
add
clc
pop
sub
xchg
mov
movsl
inc
jge
outsl
mov
mov
insb
pop
out
pop
mov
xchg
pop
outsb
sub
mov
ret
dec
icebp
imul
xchg
cmp
test
xchg
pop
cltd
sub
dec
pusha
idivl
xchg
lcall
jne
jmp
sti
ret
rcr
gs
or
cs
gs
jmp
shll
xchg
mov
scas
mov
in
inc
cld
jp
jae
mov
jmp
repnz
sub
cmp
addr16
mov
popf
ljmp
push
dec
scas
xor
push
dec
arpl
mov
push
inc
mov
loope
add
mov
sbb
jg
sbb
lahf
int
push
dec
push
jl
jo
lret
leave
testb
cmp
xchg
dec
pop
mov
xor
cmp
xlat
out
cmp
push
sbb
push
addl
push
mov
imul
aas
or
ret
jmp
test
hlt
xor
mov
test
mov
push
push
push
fwait
xor
jmp
mov
mov
push
je
mov
std
add
stc
popf
push
cs
xchg
adc
push
and
push
xor
xchg
mov
sbb
or
add
mov
in
div
dec
push
and
ret
daa
mov
pop
les
mov
rcrl
stos
test
push
in
sti
sar
xchg
js
pop
jb
add
push
add
fisttps
int
sahf
imul
pop
aam
mov
push
push
call
or
pop
mov
fwait
or
dec
jne
dec
fidivrl
or
cmc
push
out
lods
leave
cmc
sub
es
xor
outsb
into
xchg
push
lods
mov
push
jg
xor
jmp
sbb
lods
fldt
mov
sbb
bound
xchg
call
orb
xor
cmp
fwait
pop
cmp
rclb
cmp
daa
adc
scas
lret
xchg
jo
popf
cltd
int
lcall
lock
or
mov
ret
nop
xor
jl
pop
loopne
lds
mov
and
insb
inc
and
xor
aad
lods
pop
pop
mov
push
popa
scas
call
add
adc
cld
lcall
jb
dec
xor
sahf
inc
sub
mov
push
nop/reserved
popf
sbb
inc
mov
jne
dec
push
push
call
test
sub
and
push
in
add
inc
xor
adc
add
es
test
mov
jne
mov
js
xor
xchg
leave
mov
inc
add
test
and
add
cmpps
enter
push
sbb
outsb
inc
icebp
add
mov
lret
push
dec
xchg
sub
xorl
pop
pop
rclb
sub
mov
out
jg
mov
iret
mov
cmpsl
add
ret
or
dec
and
or
jb
in
xor
gs
frstor
andl
test
daa
inc
les
and
xchg
imul
std
addr16
leave
xchg
or
and
fnstsw
addr16
loope
call
push
pop
scas
push
jnp
lcall
imul
jno
inc
dec
rorb
negb
push
mov
cld
jne
jmp
or
sbb
push
mov
ret
sbb
add
inc
dec
xor
cmc
mov
push
inc
push
pop
shrb
jo
ss
cltd
pop
xlat
out
push
scas
out
xor
push
cmpl
mov
cltd
pop
sub
lods
dec
dec
shrl
pop
idiv
jge
mov
in
mov
push
sub
or
xchg
add
cmp
repz
imul
add
sbb
call
repz
cmp
mov
push
mov
lea
dec
push
jno
icebp
adc
repz
imul
xchg
cld
push
cmp
out
call
outsb
ret
scas
push
mov
ret
push
jnp
jae
icebp
cmpsb
rcrl
push
sub
push
mov
in
clc
dec
mov
mov
in
pop
repz
rorl
add
xchg
stos
fwait
in
ret
icebp
bndldx
sbb
jl
cli
push
movsl
cmp
scas
sbbl
dec
pop
daa
jo
push
mov
or
cmp
das
cmp
jnp
jno
jb
jle
cmp
inc
jecxz
in
rclb
mov
add
jge
pop
sub
mov
mov
mov
or
sub
fidivs
dec
push
stos
mov
fsub
lods
lret
sub
jne
sbb
fidivrl
mov
xchg
jle
repnz
inc
xlat
sub
out
jp
insb
aad
dec
dec
pop
dec
stos
inc
ljmp
in
fidivrl
out
xor
filds
stc
sub
mov
and
fwait
bound
rcll
pop
xor
mov
xor
jae
mov
aad
mov
mov
rclb
mov
fidivrl
jne
cmpsl
cli
add
cmpsl
push
push
adc
lds
xor
rcll
push
sbb
cld
xchg
fwait
or
in
cli
push
mov
cmp
jecxz
push
pusha
outsl
fildll
shlb
es
mov
push
adc
cmpsl
test
inc
adc
inc
into
push
icebp
add
push
std
xchg
dec
jno
and
push
adc
rclb
pop
sub
bound
mov
jae
jmp
cmpl
gs
cmpsl
adc
fsubr
xchg
adc
in
add
push
lods
test
fnsave
ret
xchg
sbb
jno
mov
jbe
data16
lods
push
loope
shlb
adc
pop
ret
xorl
pop
outsb
shll
jne
cli
iret
push
jl
cmp
imul
sbb
adc
mov
xlat
lock
xchg
jmp
outsl
cmp
das
shll
jge
cli
hlt
mov
add
mov
sbb
test
sub
mov
cltd
test
mov
jle
andl
bound
adc
jbe
dec
icebp
xchg
jns
jmp
fisttpl
mov
pop
flds
rolb
inc
outsb
call
sbb
es
cs
add
add
jp
gs
push
in
cmpsb
xchg
and
fsubs
add
mov
xchg
mov
dec
inc
dec
stos
les
repnz
xchg
mov
dec
stc
mov
repnz
jns
sbb
or
movsb
and
hlt
mov
push
lods
jge
sub
sub
repnz
outsb
sbb
push
pop
inc
and
inc
push
and
popa
ss
pop
dec
out
jns
stc
pop
out
shlb
es
push
cmp
insb
xor
nop
mov
clc
push
inc
fldl
adc
xchg
data16
lods
cmpl
sub
lock
in
das
and
jg
sti
test
pop
mov
stos
test
test
adc
sbbb
jge
or
lods
insb
shl
push
mov
xchg
cmp
fs
and
scas
or
adc
cmc
or
fsts
cmp
sbbb
and
aas
pop
scas
jo
lods
inc
and
sub
repz
jnp
movsl
sbb
insb
in
rcl
andb
mov
test
or
mov
pop
stos
mov
and
jmp
std
mov
popl
shr
lock
sub
insb
add
into
xchg
pop
arpl
xchg
pop
or
cmp
stc
adc
ficoms
les
lcall
lods
inc
inc
stos
inc
aad
mov
arpl
in
mov
loopne
mov
mov
lret
xchg
cmp
inc
mov
in
lret
push
js
imul
pushf
xchg
mov
mov
dec
or
aaa
stos
and
sti
mov
dec
lods
add
dec
jb
enter
fnstenv
or
jb
scas
sub
jb
test
lea
outsl
mov
xchg
enter
pop
cld
jnp
xor
add
add
mov
sbb
ror
inc
jno
scas
ds
add
inc
jmp
flds
xchg
jl
add
arpl
adc
mov
les
out
xor
or
stc
jl
mov
test
bound
iret
lds
xchg
cmp
test
xor
mov
jg
popaw
adc
pop
mov
icebp
mov
shrl
cmp
xchg
mov
mov
add
insl
dec
push
lods
lds
mov
sti
xor
call
fsts
sub
stos
xchg
mov
pop
ret
mov
mov
mov
cli
push
xchg
pop
imul
push
mov
sub
sbb
or
lret
imul
lods
inc
into
mov
xor
mov
jb
outsl
ds
sbb
or
sbb
jge
andl
xchg
test
into
rorb
dec
mov
mov
inc
push
frstor
lds
sbb
jb
insb
add
push
pop
out
dec
xchg
cmp
out
mov
push
mov
hlt
adc
aam
je
mov
mov
fs
int3
xor
hlt
mov
ljmp
pop
aaa
pusha
lahf
mov
shlb
ret
das
shr
fdivrl
les
shl
xlat
outsb
adc
mov
jge
inc
adc
sbb
dec
fs
add
out
and
sbbl
inc
aam
cwtl
fistpl
movsb
xor
push
push
les
gs
lds
imul
mov
adc
sub
push
popf
cltd
push
pop
fcoml
fisubl
leave
arpl
pop
faddp
jecxz
inc
xchg
orl
movsb
mov
pusha
test
dec
fldcw
cmp
jbe
dec
loop
push
push
js
xor
or
xchg
es
cmp
inc
loop
clc
ljmp
pushl
out
cmpsl
iret
jb
pop
testl
enter
lods
cmp
ja
stos
mov
adc
int3
xor
pop
mov
aad
movb
cmp
lret
and
sub
jmp
rcrl
xlat
loop
mov
into
xor
push
inc
imul
pushf
arpl
pop
lret
cld
testl
shll
pop
cmp
jb
and
xor
sbb
jae
cmp
jnp
fldt
mov
mov
dec
fiaddl
adc
push
pop
cmpsb
insb
adc
mov
sub
filds
fbstp
xor
lds
sub
cli
xor
sbb
dec
jmp
adc
out
mov
mov
gs
in
int
fidivrs
mov
aas
and
push
stc
arpl
adc
add
mov
rep
cmp
jns
out
or
adc
shrl
cltd
sub
pusha
scas
xchg
xchg
cs
mov
cmp
imul
pop
in
and
pop
mov
test
lock
inc
in
and
mov
inc
fmul
fcom
mov
mov
adc
jns
pusha
stos
ret
sbb
jno
mov
inc
sbb
scas
inc
push
pop
or
hlt
lea
cmp
xor
xchg
loop
shrl
jns
ja
jp
push
sub
or
cmp
jo
std
adc
ffreep
fistl
jb
sub
ret
je
mov
repz
fidivs
mov
mov
fistl
xchg
jnp
loopne
push
or
insl
ffree
sarb
jmp
ja
xor
movsl
test
sub
lret
dec
mov
or
cld
fs
jne
xchg
mov
cmpl
loopne
stos
or
cs
xchg
or
cmp
cmpb
and
jns
xchg
scas
xchg
stos
inc
cmc
psubusw
inc
push
lret
movsb
mov
int3
shr
outsb
jle
in
pop
push
sub
cld
jmp
sub
dec
popa
jnp
sbb
int
sub
sbb
xchg
pop
mov
xor
mov
or
insb
mov
xor
push
flds
xor
std
fs
add
jg
mov
popa
bound
jbe
inc
xor
mov
jno
sarb
pop
dec
mov
jle
lea
bound
std
lods
sbb
es
in
fcmovnu
and
add
call
xchg
lret
cmp
and
push
outsl
pushf
movsl
mov
and
jbe
mov
and
loope
mov
shll
adc
xchg
push
imul
add
cwtl
cmp
mov
fcoms
push
inc
inc
push
dec
fldl2t
stc
add
nop
daa
xchg
adc
push
inc
mov
inc
mov
mov
enter
test
inc
dec
out
adc
hlt
push
rcrb
shl
or
push
cmpsl
cltd
xor
xchg
cwtl
or
pusha
dec
sub
push
xchg
jecxz
in
mov
lock
pop
out
pop
icebp
movsl
xchg
xor
stos
xchg
scas
cs
stos
icebp
inc
inc
pop
lock
or
or
lret
jmp
fnstcw
leave
daa
sti
hlt
cmp
sbb
cmp
inc
je
pop
addr16
xchg
add
xor
cmp
addb
push
imul
inc
sbb
ret
xor
orb
test
lods
in
mov
je
aam
pop
jg
adc
jbe
dec
and
push
inc
jns
jae
and
mov
leave
and
push
cmp
lods
xchg
ljmp
mull
test
je
decb
cmpsb
jb
dec
push
push
jp
push
xchg
mov
cli
push
mov
xchg
or
ljmp
cmp
add
inc
ds
popf
pop
sub
shrl
push
daa
inc
jl
inc
xchg
lea
inc
cmp
add
filds
adc
std
movsl
fwait
pop
cmc
or
xor
xchg
cld
movsb
mov
cmp
roll
jnp
mov
mov
divb
cmc
xchg
rcr
repz
mov
mov
test
push
mov
pop
or
repz
cmp
mov
pop
stos
roll
mov
jp
aad
cmpsl
hlt
outsl
sbb
insb
mov
pusha
ss
aam
fcmovnb
push
push
pop
mov
mov
mov
mov
mov
aaa
cmp
leave
push
sub
xchg
xchg
jno
xchg
cmp
test
pop
in
sbb
adc
dec
mov
dec
inc
daa
inc
ds
stc
aas
adc
movsb
les
mov
fwait
sbb
add
das
sub
ds
xor
rclb
or
fs
fdivrs
push
popf
ss
mov
lret
jge
jmp
mov
push
lock
ds
xlat
push
mov
outsl
cmp
xchg
test
add
hlt
sbb
dec
stc
cmp
insl
jp
test
pop
mov
jno
mov
scas
dec
and
xor
aaa
in
push
cmpsb
push
cltd
and
cld
jo
aaa
sub
pop
lcall
mov
cmpsb
mov
inc
pop
int
or
adc
xor
aam
bound
xchg
sub
pop
mov
mov
jmp
pop
nop
pop
xor
add
int3
push
or
js
iret
and
fwait
cmp
je
in
cmp
push
call
and
dec
cmc
and
sub
out
out
inc
mov
cmp
sbb
xchg
dec
lods
mov
sbb
aam
out
inc
fmulp
imul
or
pop
aam
sub
jnp
test
push
jmp
cmpsb
and
mov
sbbl
sub
jge
lret
pop
inc
jo
xor
mov
push
mov
mov
mov
sub
lea
dec
hlt
jmp
inc
xor
add
xchg
xor
mov
dec
xor
xor
xor
sti
add
loope
xor
imul
call
fisttpll
or
add
cmp
jmp
outsl
pop
lahf
mov
dec
dec
out
inc
lea
fsubrp
jg
inc
popa
aam
add
or
sub
das
jle
add
jg
xor
incl
or
push
test
mov
push
mov
movsl
cmp
popf
cwtl
lahf
push
test
pop
lahf
mov
sub
sub
stc
cmp
push
jecxz
adc
cmpsl
cmc
movsb
retw
ret
xor
adc
enter
fildll
loop
mov
sarb
jne
jb
aad
jecxz
mov
sbb
mov
dec
inc
daa
and
aas
mov
jnp
add
push
jo
jns
dec
aaa
insl
dec
mov
pushf
pusha
lods
xchg
xchg
xchg
inc
inc
das
movsl
mov
add
pop
or
imul
ret
repnz
jecxz
imul
out
sub
dec
loopne
leave
fadds
mov
cli
shll
dec
dec
and
insl
loop
scas
adc
mov
or
or
incb
imul
jne
xor
or
jo
jns
cmp
in
pop
sub
xchg
movb
enter
int3
xor
or
adc
inc
pop
cmpb
lods
les
int
aaa
aam
jecxz
or
sbb
pop
adc
inc
sub
xor
cltd
shrb
adc
hlt
jge
push
sbb
ss
pop
jno
add
mov
aam
jo
mov
cmpsl
adc
imul
sbb
push
bound
std
push
adc
imul
add
addr16
enter
jae
lret
repz
or
pop
add
jo
popf
loop
sbb
xor
jg
mov
mov
loopne
dec
mov
xchg
outsb
arpl
push
or
pushw
popf
stos
dec
sub
repz
outsb
rolb
add
mov
aam
xchg
inc
jge
lods
jmp
mov
cmp
cmpsl
xchg
xchg
call
mov
stos
pushf
mov
cwtl
iret
cwtl
inc
shr
inc
adc
dec
nop
pop
movsb
xchg
sahf
cltd
or
mov
jbe
jmp
sti
test
fiadds
xchg
iret
xor
add
lods
pop
dec
shl
mov
fucom
test
xor
push
sub
jno
add
outsb
inc
jge
adc
inc
jmp
popa
in
push
push
clc
call
xor
lret
fs
and
je
jns
or
push
insl
push
mov
mov
cmp
push
imul
fnsave
stos
or
sbb
fldl
jmp
stc
or
test
xor
das
pop
int3
mov
divb
cs
push
aad
cmp
add
mov
mov
fucom
mov
je
nop
and
paddsb
jle
insb
fucomip
movsl
fst
repz
inc
stc
mov
les
sbb
dec
or
mov
jae
fistl
and
jecxz,pt
je
push
in
cmp
clc
in
jl
cli
and
add
or
fwait
lods
xor
clc
out
frstor
mov
into
lret
std
aas
inc
inc
out
test
inc
into
cmp
mov
cmp
jg
test
mov
jle
imul
inc
pusha
push
xchg
or
add
stos
pop
pop
sbb
cmc
xchg
pop
mov
cld
pop
cmp
pop
fadd
in
dec
fildll
scas
iret
xor
pop
outsl
mov
sub
imul
fs
cld
rclb
daa
mov
sahf
mov
jo
ja
push
punpcklwd
movsl
mov
cld
xchg
inc
dec
aad
lcall
cmp
pop
jecxz
ljmp
and
orb
mov
xorl
pop
fsubp
add
adc
xor
lock
or
roll
pop
aad
lret
in
shlb
and
cs
ds
mulb
jge
mov
fcoml
mov
mov
mov
jns
out
jge
rol
adc
aad
dec
mov
fstpt
or
push
repz
divb
cld
rol
fdivrs
mov
leave
jbe
lret
je
or
mov
dec
sahf
mov
jno
shl
fmull
in
mov
imul
fdiv
outsb
sub
mov
or
mov
xlat
sarl
xchg
mov
cmp
inc
test
repnz
xor
mov
icebp
lahf
jbe
inc
leave
push
push
adcl
sbb
addl
adc
mov
sbb
mov
ss
push
test
outsb
jecxz
mov
push
cli
and
aas
repnz
push
stos
jnp
jg
or
out
push
and
jl
inc
xlat
push
in
test
or
xchg
out
call
and
adc
push
dec
and
cmp
fsubr
repnz
rolb
fisttpl
and
dec
loope
mov
pop
out
push
sub
pop
sbb
pop
test
lock
fmuls
test
xchg
idivb
lret
mov
stos
mov
pop
xor
cmp
fistl
jl
inc
das
shll
sub
pop
cmc
call
pop
scas
mov
xchg
and
add
inc
jp
jae
pop
cs
sub
sahf
xchg
push
sbb
fsubs
dec
iret
mov
insl
test
adc
lret
mov
jae
and
cmp
daa
or
sbb
xchg
mov
rep
test
js
icebp
mov
cmp
fimull
push
aad
stc
cmp
add
jo
andl
jge
jne
mov
jle
loop
lret
add
test
dec
xchg
in
adc
sub
pusha
add
add
dec
shll
cmp
test
imul
push
lret
in
jmp
imul
or
or
jbe
fwait
cs
and
cltd
push
sar
inc
mov
loope
call
mov
rcrb
add
lret
xchg
out
stos
or
orb
dec
jmp
adc
aam
test
fs
cmp
push
mov
jae
lcall
mov
or
xchg
adc
les
pushf
es
fsubrp
insl
add
push
fsubs
dec
lahf
cli
sbb
sbb
add
xlat
mov
sbb
out
insb
sub
xchg
fs
or
and
leave
push
push
lret
and
adc
pop
ja
jmp
test
imul
push
lds
decb
mov
pop
std
lret
dec
lcall
popa
aas
testl
mov
push
push
lcall
scas
xchg
cld
xchg
pop
clc
out
test
sub
jp
xchg
test
sahf
jae
pusha
cmp
movsb
inc
pop
jb
test
jns
outsb
push
pusha
imul
mov
dec
mov
cmp
cwtl
imul
push
loope
negl
mov
push
mov
jae
pop
insb
pop
push
xchg
imul
jl
ljmp
scas
sahf
andl
js
adc
cmp
mov
push
pop
push
push
add
cmpl
out
and
cmpsb
fsts
test
xchg
test
test
fcomi
int3
and
pusha
stos
fldenv
adc
out
sub
dec
inc
fnstenv
xchg
jo
movsl
cmp
xchg
pop
sub
call
rcll
push
sub
cmp
mov
loopne
mov
fdivr
jb
outsl
xchg
inc
in
fdiv
test
mov
shrl
stc
sbb
test
sbb
cmpsl
push
add
fbld
or
data16
icebp
aad
and
rcl
pusha
xchg
add
shl
jnp
sti
xchg
mov
pop
sbb
outsb
cmpsb
xchg
lea
adc
lcall
pop
scas
cli
arpl
pushl
xchg
dec
mov
rorb
js
lods
lret
fnstsw
mov
aam
leave
in
inc
and
xor
xor
mov
and
jecxz
cmc
xchg
or
repnz
cmp
adc
sbb
bndstx
pop
sbb
pop
pop
inc
mov
imul
mov
rcl
pop
es
pop
cmp
and
mov
dec
pop
push
insl
push
jle
sbb
push
adc
push
loope
negb
cmp
lods
ljmp
icebp
xor
push
imul
inc
mov
ljmp
inc
insl
cld
rol
insb
fnsave
das
test
rcl
scas
call
arpl
data16
int3
sar
imul
cmpsb
lods
addr16
pop
addr16
pop
std
sub
cs
xor
fcompl
sub
ja
jnp
cmp
dec
pushf
sub
lahf
add
inc
pop
icebp
jae
js
cmp
lea
mov
xor
stos
addb
push
push
lods
pusha
mov
sbb
push
jl
xchg
insb
mov
push
jl
aam
fmuls
adcb
sub
and
dec
push
mov
pop
push
adc
mov
aaa
cli
jns
in
and
lret
iret
faddl
bound
outsl
sarb
sub
imul
jmp
push
push
or
dec
pop
nop
daa
cmp
fldcw
inc
mov
push
out
mov
mov
jns
mov
sbb
jmp
dec
sbb
inc
sbb
jbe
jl
jb
add
lcall
out
sbb
sbb
mov
inc
notl
daa
mov
push
and
mov
pop
or
push
dec
lds
fcomip
addr16
push
in
cmp
mov
das
xor
xchg
jo
cmp
mov
idivl
mov
mov
mov
push
notl
dec
pop
and
pop
std
lcall
in
jge
daa
sbb
and
aaa
pop
adc
jge
fs
sbb
push
or
push
push
cmp
jnp
and
pushf
jno
jmp
jl
repz
inc
std
add
arpl
je
pusha
into
xchg
dec
pop
mov
movsl
mov
fwait
mov
lahf
movsl
dec
in
idivl
sub
dec
dec
outsb
mov
sub
dec
dec
mov
sub
addr16
mov
pop
ljmp
push
call
popa
cmpsb
push
push
mov
push
xor
ljmp
inc
insl
das
pusha
mov
xchg
cli
inc
inc
mov
pop
push
lret
sub
xchg
mov
add
mov
test
in
pop
andb
pop
in
mov
cmp
pushf
adc
iret
mov
lock
sbb
pop
insb
pop
adc
and
cld
out
stos
xor
xor
xor
add
push
sahf
imul
adc
lock
and
jbe
dec
int3
test
lods
adc
push
lret
lods
ja
mov
movsb
mov
stos
stos
js
and
lcall
in
adc
psubq
inc
mov
in
and
out
lret
outsb
adc
dec
outsl
push
cmp
movsl
push
jge
aad
adc
cmp
xor
cmp
mov
add
jo
lods
ljmp
cmc
mov
mov
cmc
sub
out
sti
xchg
gs
push
mov
dec
xchg
rcll
loopne
pop
repnz
cmpsb
push
test
adc
dec
cmp
sbb
call
lock
mov
stos
lahf
jae
fnstcw
addl
pop
pop
and
mov
and
in
fcomip
xor
xlat
call
aad
lds
lahf
imulb
push
sbb
pop
inc
pop
icebp
sbb
xor
aas
movsb
dec
cmp
jecxz
nop
mov
fstpl
sub
out
call
sub
push
jae
xchg
push
loope
lods
add
gs
and
movsl
insb
sahf
test
out
jmp
pop
nop
movsb
add
repnz
divb
add
and
int
push
out
mov
mul
je
push
cmpsb
bound
mov
xchg
daa
or
scas
push
stc
dec
test
xor
sub
cli
jno
int3
decl
rcrl
mov
out
repz
in
es
js
xor
cmovge
inc
sub
pusha
cltd
pop
inc
rolb
cmpsl
and
imul
pop
jne
sub
popf
fcoml
cmp
leave
inc
fsubrp
outsb
xor
es
cmpsl
cmp
test
ds
rorl
ret
cwtl
cmp
xor
xor
adc
roll
mov
xchg
mov
lods
enter
or
cmp
in
sti
mov
xor
inc
fwait
push
add
mov
in
and
xor
xchg
add
loop
addb
int
loop
lea
movsl
xor
pop
push
std
inc
pop
outsl
jnp
int3
jnp
adc
mov
ds
popa
and
add
inc
in
test
push
jmp
or
fwait
mov
dec
pop
adc
xor
mov
jne
push
jge
xor
jmp
sbb
dec
mov
fadds
jecxz
pop
xlat
inc
flds
in
jmp
aad
rol
repz
xchg
push
sbb
loop
test
sti
push
jbe
adc
cwtl
shrb
bound
mov
pop
jnp
gs
in
mov
lods
das
dec
add
inc
aaa
xor
arpl
in
dec
mov
add
jp
or
jns
and
std
data16
cwtl
stos
xchg
hlt
sub
jg
outsl
mov
mov
leave
xor
scas
fdiv
pop
fidivl
jo
rcrb
loope
popa
inc
mov
call
lock
fdivs
out
cld
or
enter
outsb
shrl
notl
push
lock
inc
pop
fwait
dec
push
mov
jmp
mov
jno
inc
add
push
aam
je
and
xchg
lods
dec
movsb
aaa
push
jb
jne
jne
dec
lods
or
repnz
xor
fistl
and
or
lahf
or
xchg
fidivl
inc
pop
jne
insl
fsubrp
xchg
sbb
das
or
popf
adc
dec
or
fs
es
js
sub
imul
push
sar
xor
out
cmp
xor
pop
add
mov
push
out
mov
mov
cmc
aad
mov
dec
sbb
xor
in
aad
inc
push
into
xor
mov
xor
movsb
inc
mov
les
sbb
mov
or
or
mov
dec
jp
xlat
test
or
shll
cmpsb
cmp
xchg
and
das
xor
pop
repnz
cmc
pop
negb
jns
fcomps
jge
lcall
arpl
sbb
les
fisubl
mov
xchg
xor
sub
popa
inc
mov
mov
jecxz
sbb
mov
xchg
dec
push
or
mov
jecxz
push
jl
push
repnz
add
daa
out
dec
shl
jl
enter
addl
aas
leave
fcompl
pop
push
cli
sbb
std
std
in
push
cltd
rorl
inc
fcomi
popa
divl
mov
testb
test
mov
xor
mov
xchg
dec
cmp
shll
sbb
mov
xor
sbb
cmp
dec
cmpsb
xchg
or
cli
lcall
dec
or
sub
add
lahf
das
mov
lods
inc
in
sbb
adc
or
mov
pop
xor
cmp
sbb
mov
aaa
mov
or
bound
int3
into
add
insb
pop
dec
xchg
xor
mov
imul
decb
pop
lahf
aaa
test
sub
xchg
in
clc
iret
pmaxsw
xchg
jnp
out
and
dec
sbb
loopne
mov
sub
jo
insb
fbstp
cmp
mov
xchg
jp
push
sub
sub
jno
push
jg
dec
mov
enter
xchg
outsb
lea
jbe
mov
sub
push
fnstcw
xor
pop
arpl
arpl
push
mulb
sarl
push
push
jo
xchg
adc
inc
cltd
std
out
push
mov
xchg
xorl
cld
push
nop
sub
rorb
rorb
adc
xor
xor
ret
iret
add
xchg
jge
popa
xor
jl
mov
das
sub
jge
lcall
jae
mov
pop
lcall
xchg
or
add
test
mov
sub
mov
dec
sub
jge
sti
incb
push
pop
cmp
push
lcall
mov
adc
sub
shll
pop
js
aad
cld
push
mov
sbb
jno
gs
push
push
add
into
jb
adc
clc
jae
or
adc
hlt
xor
adc
es
int
cld
mov
data16
mov
addb
in
mov
frstor
push
dec
mov
push
cwtl
scas
inc
lret
jmp
int
scas
imul
jae
repz
mov
je
dec
mov
in
adc
xor
xchg
jne
inc
jne
fsubs
shlb
adc
fs
ret
gs
pop
int
dec
mov
lods
adc
lds
shll
fnstenv
leave
pop
out
in
fists
xchg
dec
xchg
in
popa
xchg
adc
cmp
inc
enter
shlb
inc
pop
bound
sub
scas
test
jno
inc
push
test
sti
xchg
lea
jge
pushf
hlt
dec
rorl
mov
push
popf
sbb
popf
mov
std
mov
stc
or
test
cmp
fbld
pop
or
xchg
jo
inc
mov
imul
shlb
int
mov
adc
test
mov
ja
sbb
into
daa
mov
xorl
xlat
xchg
jae
scas
sarl
loope
xchg
sub
inc
xchg
stos
adc
lahf
mov
jb
mov
mov
cmpsl
or
imul
mov
movsl
mov
sbb
push
jge
lcall
cmpsb
lock
inc
in
lods
xchg
sbb
negl
mov
js
mov
mov
mov
js
dec
mov
xlat
mov
loop
adc
aaa
jge
pop
scas
cwtl
cltd
xor
sbb
daa
mov
inc
ret
or
scas
outsb
sbbb
mov
or
les
pop
das
out
fsubs
sbb
adc
rcr
push
nopl
adc
outsl
jae
hlt
lods
shr
addl
insb
aas
popf
lods
popa
or
pop
hlt
mov
mov
int3
fiadds
adcb
xor
bound
sub
arpl
imull
das
xor
in
bound
stos
std
mov
in
rclb
cmc
push
aam
testl
xor
mov
inc
push
dec
and
mov
or
ffreep
pop
lahf
outsl
outsb
clc
jl
pop
lock
fists
jge
dec
aas
mov
sub
adc
sub
shlb
sub
push
fistps
add
test
mov
in
les
pop
add
xor
shlb
jp
cmp
in
cmp
idivb
mov
push
cmc
mov
dec
mov
stos
mov
movsl
fcomi
adc
sub
sub
cltd
inc
mov
sub
dec
mov
push
int
subb
mov
jg
xor
out
sahf
or
les
jnp
dec
pop
pusha
adcb
cmp
pusha
out
pop
mov
jge
insl
fiaddl
mov
or
adc
sbb
sub
ss
xchg
arpl
lods
lods
mov
dec
pop
sub
sbb
notl
lret
mov
insl
adc
pusha
pop
fldt
rorb
and
call
xor
xchg
insl
add
pop
out
xchg
test
fsubrl
sbb
mov
push
leave
sbb
cld
mov
test
in
stos
xchg
mov
ljmp
mov
mov
stos
inc
filds
xor
leave
mov
or
or
cmp
inc
cmpsl
xchg
aam
xchg
and
test
pop
les
outsb
push
movsb
xchg
and
pop
add
cmp
dec
in
ss
pop
addr16
cld
xchg
jl
out
mov
xlat
fistpl
sahf
mov
jg
ss
xor
mov
clc
fists
dec
jecxz
and
in
and
imul
inc
push
xor
arpl
xchg
pop
popf
sbbb
jmp
xorl
add
stc
pop
sub
sub
enter
mulb
out
out
mov
aas
shrb
inc
cmp
push
adc
pop
sub
imul
iret
fldl2t
add
dec
jno
jno
sbb
cli
sbb
mov
hlt
jae
aaa
scas
lock
push
rcll
lret
bound
adc
inc
gs
pop
jb
inc
and
ret
out
mov
test
cmc
movsl
and
mov
sub
jle
lcall
cs
push
lret
dec
mov
idiv
cld
dec
jo
cmp
xor
enter
or
aaa
dec
cmp
pop
test
xorb
movsb
repnz
xor
lods
mov
lret
les
sub
test
cmp
in
pop
arpl
icebp
cmpsb
cmp
lods
jge
lahf
dec
and
and
mov
cmp
ljmp
or
ljmp
xchg
js
es
lret
mov
mov
aas
addr16
stos
out
stos
inc
aas
add
push
out
mov
xchg
clc
loopne
mov
xor
cmp
mov
arpl
fstpl
mov
fwait
repz
and
push
ja
fsubrs
std
fcmovb
stos
mov
ds
rorb
popf
negl
jno
mov
jle
inc
test
mov
in
cmp
push
sbb
adc
pop
push
hlt
sbbl
pop
mov
mulb
and
adc
gs
jecxz
fs
xor
push
mov
sub
or
in
scas
cmp
scas
loope
ret
sub
push
cmp
popa
pop
pop
jbe
jae
movb
mov
ficoml
sub
pop
or
in
adc
jg
mov
mov
mov
leave
dec
mov
xchg
mov
andb
lods
loop
fnsave
hlt
bound
mov
inc
jge
je
adc
aas
inc
imul
jns
sbb
mov
xchg
mov
out
xchg
andb
jp
insb
mov
xchg
sub
insb
fistpl
pop
je
push
push
arpl
inc
push
popa
cmp
xlat
movsl
in
ret
data16
dec
add
dec
mov
xchg
enter
sbb
mov
xchg
push
dec
hlt
imul
lret
lcall
nop
jo
aas
push
inc
pop
insb
push
lock
ja
sarl
push
pop
call
aam
popf
push
sbb
imul
pushl
test
or
xchg
mov
les
loope
cmp
dec
sar
xchg
sub
xlat
jecxz
out
xor
cs
into
cmp
sbb
aad
jle
outsl
cli
xor
dec
nop
repz
pop
lcall
add
data16
repnz
xchg
cs
out
pop
push
xor
mov
into
nop
mov
xor
mov
pop
pop
push
ja
in
data16
adcl
sbb
cmp
mov
subl
xor
mov
xor
popa
push
loop
lds
or
out
sbb
sbb
gs
sbb
inc
rclb
push
outsl
sub
jo
cwtl
xor
lret
or
or
push
in
xor
cmp
and
popa
sub
sbb
mov
adc
lods
sbb
inc
dec
int
gs
in
push
mov
cmc
jg
jne
notl
pop
lret
inc
xor
sbbb
mov
mov
sbb
adc
lock
ret
jle
sbb
stos
pop
gs
adc
sub
ret
mov
pop
jmp
or
cmp
inc
pop
adc
and
scas
es
cmp
loopne
dec
push
pop
cli
roll
jg
imul
xchg
push
stos
cld
mov
xchg
les
int3
nop
xor
rcll
ret
sti
gs
sub
repz
add
jnp
sbb
gs
inc
xchg
mov
xchg
sbb
sbb
je
adc
jl
movsl
mov
pop
into
fimuls
xorl
les
pop
aad
jbe
push
stos
out
xchg
sahf
stos
mov
xchg
mov
dec
cmpsl
jl
fldcw
push
ljmp
jne
and
daa
cld
xchg
pop
push
lcall
cmp
jle
test
push
in
cmp
out
loop
xacquire
sub
popl
and
lahf
push
std
scas
mov
cmpsb
inc
lds
inc
imul
lret
fsubs
test
sub
ljmp
push
xor
mov
lods
mov
mov
stos
lds
pop
pop
fildl
push
ret
cli
mov
xor
lcall
aad
pop
dec
sbb
popa
mov
shrl
clc
mov
out
shlb
lahf
dec
mov
scas
out
pop
call
imul
xchg
xor
test
dec
leave
jo
sahf
inc
fisttpl
test
mov
adc
sub
jmp
mov
pop
mov
rcrb
mov
pop
pop
inc
sbbb
div
arpl
adc
mov
jecxz
das
lds
les
fcomps
loope
test
test
repnz
pop
std
jecxz
imul
out
fistl
stc
or
fs
popa
adc
xchg
leave
or
push
sahf
xlat
psadbw
rcr
push
mov
xchg
adc
dec
lahf
sub
fwait
and
aam
mov
fcomip
mov
xchg
call
sub
push
fidivl
mov
jae
pop
stc
push
mov
dec
adc
push
addb
add
call
popf
cli
ja
out
subb
or
andb
adcl
fnstcw
popf
cmpsb
aam
push
pop
andb
stos
addr16
repnz
add
js
lds
neg
xor
add
push
adc
rorb
lods
shrl
lcall
jecxz
and
mov
and
jo
adc
cmp
jg
push
mov
mov
push
and
cmpsb
addr16
fsubrs
int3
push
jae
jno
aas
dec
and
mov
cmp
scas
ret
xlat
add
dec
aam
adc
mov
push
nop
bound
lcall
popf
adc
out
mov
xchg
push
fs
push
xchg
push
test
lock
inc
idivb
ss
pop
xchg
in
push
jbe
mov
jns
jle,pt
adc
imull
cmpsl
sub
add
sbb
pop
pop
lods
jecxz
and
ss
imul
and
leave
test
in
inc
mov
mov
loope
push
jne
test
movsl
inc
imul
inc
sbb
mov
pushw
xchg
pop
mov
pop
lds
int
repz
test
push
jecxz
adc
jle
cmp
out
xor
stc
popa
adc
jp
mov
fwait
in
icebp
sbb
aam
mov
std
add
ss
push
jbe
icebp
mov
mov
lods
pcmpgtd
cld
mov
lea
je
cmc
movsl
fcomip
cmp
jg
stc
rcrb
into
xor
mov
pop
sbb
mov
pusha
dec
jmp
mov
mov
inc
cli
testb
ret
int3
sub
pop
jecxz
inc
out
mov
lahf
vpsrld
popa
add
lahf
sub
jno
cld
clc
dec
enter
lret
imul
jle
or
cltd
fisubl
hlt
dec
sub
mov
into
std
leave
gs
add
das
shlb
out
stos
out
jle
cmp
mov
add
inc
out
test
roll
repz
and
and
mov
sub
ss
mov
pop
in
out
lahf
xor
or
in
cmpb
sbb
push
xchg
mov
xchg
mov
cmc
fs
cmpsb
sbb
sbb
shrl
inc
movsb
pop
outsb
outsb
out
inc
ret
lahf
daa
xchg
bnd
es
enter
lcall
icebp
insb
pop
mov
inc
pop
pop
xor
and
pop
sbb
stos
jge
xor
lds
push
push
mov
scas
imul
mov
jb
jmp
subl
and
int3
cmp
daa
insl
ret
call
and
sti
lcall
in
push
rcrb
pushf
aas
mov
pop
outsl
push
filds
xchg
jge,pt
jno
dec
mov
adc
jmp
dec
xor
mov
loop
add
negl
dec
pop
sub
xor
cmp
and
lods
fwait
adc
inc
add
sarl
fisubrs
dec
bound
mov
jg
aam
adc
and
cmp
lret
loopne
gs
mov
xorb
xor
mov
cmp
out
call
mov
inc
sbb
lcall
aam
xchg
leave
repz
scas
flds
jno
inc
xlat
cmp
pop
and
xchg
ss
xchg
lea
fdivl
or
sbb
loope
repnz
mov
mov
pop
xor
insb
inc
int3
les
enter
dec
outsb
mov
ret
xchg
sbb
or
aaa
and
sahf
ret
xor
push
nop
push
hlt
cmp
cwtl
imul
push
mov
je
out
jno
rorl
inc
adcb
loope
dec
xbegin
out
sub
leave
in
hlt
xlat
outsb
loop
add
inc
addr16
xchg
xchg
adc
jmp
push
mov
ret
call
cmp
jp
inc
xchg
add
mov
out
inc
sbbl
cmpsb
ljmp
pop
pop
aaa
aad
aam
cmp
push
or
jne
repz
and
iret
xchg
aam
out
insl
push
push
fidivs
add
mov
test
test
mov
and
inc
add
mov
jae
je
insl
test
pop
push
sbb
xchg
mov
outsb
sub
imul
push
and
jo
xlat
icebp
lds
cltd
push
je
mov
xor
or
mov
cmp
cwtl
adcl
sbb
or
insb
add
xor
pop
cmp
jnp
sub
xchg
pop
sbb
imul
mov
imulb
lret
push
addb
and
jns
pop
pop
fistpl
xchg
xchg
shll
push
jg
jle
cli
lds
mov
mov
outsb
add
fistpl
add
ds
pop
push
mov
subb
test
in
sub
fcomps
or
icebp
clc
mov
sub
movb
mov
push
mov
pop
push
cld
jbe
out
popa
push
scas
inc
dec
minps
jno
outsb
mov
push
jmp
sahf
pop
fcomps
into
int
mov
mov
data16
popa
and
or
lret
scas
add
ss
sbb
int
shl
fadds
fnstcw
lcall
mov
and
cmp
clc
dec
outsb
jle
jo
hlt
push
xor
cmp
sarl
inc
inc
adc
sbb
pop
lods
insl
push
popf
cmp
cmp
pop
cmpsb
ds
xchg
sbb
pop
inc
mov
mov
xchg
movsl
ja
std
cmp
aas
sub
adc
out
push
pop
cltd
xor
jne
push
rcll
xor
xor
or
adc
xor
xchg
lcall
in
sbb
in
push
daa
xor
shr
mov
mov
mov
sbb
or
adc
adc
adc
das
inc
int
inc
mov
add
mov
mov
pop
jecxz
decb
inc
arpl
mov
repnz
cs
addr16
cmp
inc
mov
fcom
lea
mov
mov
mov
aas
fwait
mov
pop
mov
mov
mov
les
std
fists
mov
xchg
mov
mov
push
adc
stc
inc
mov
ret
popa
lods
insb
mov
mov
inc
cld
in
dec
sar
fildl
int
sti
es
adc
sbb
inc
int3
ljmp
loopne,pn
dec
ror
test
push
out
and
std
hlt
or
xchg
adc
cmp
lret
inc
xor
movsb
hlt
out
push
mov
loop
cmp
insl
or
shlb
cltd
popa
pop
out
cmp
shr
jnp
dec
and
dec
mov
push
xchg
popa
xor
jbe
mov
aaa
mov
jno
fisubl
adc
repnz
inc
or
scas
cmp
fstpt
or
pop
icebp
fnstsw
test
jp,pn
pop
inc
sub
repz
and
add
sti
inc
jecxz
mov
test
mov
mov
cli
adc
stos
push
cmp
clc
xchg
jno
insl
cs
xor
sbb
sbb
data16
pop
les
cwtl
call
fmul
in
aad
push
fsubrs
cmp
xchg
jge
mov
test
jbe
mov
ret
mov
outsb
mov
adc
mov
test
xlat
rorl
rol
jg
loop
pop
or
jns
and
sbb
mov
sbb
loopne
ljmp
dec
iret
jnp
fiaddl
mov
cmpsb
out
push
orb
mov
sahf
adcb
mov
jae
pop
shlb
add
push
les
or
std
rcrl
mov
jbe
inc
push
je
loop
nop
mov
ret
mov
cli
fistpll
shrl
imul
out
inc
enter
xor
jmp
inc
xchg
mov
dec
pop
or
clc
fmuls
jmp
notl
stos
adc
pop
mov
adc
cli
sbb
iret
dec
cmp
into
mul
cmp
popf
stc
inc
fldz
repz
fwait
iret
jo
inc
mov
cld
cli
test
das
hlt
pop
and
jb
movsb
cmp
push
inc
loope
pop
adc
lods
mov
addb
and
shlb
dec
in
hlt
dec
or
xchg
insl
mov
sbbb
hlt
mov
nop
pop
test
iret
gs
adc
sub
in
roll
mov
xchg
faddl
add
in
xchg
sub
fstp
pop
xor
aas
or
cli
mov
jmp
sbb
adc
cmc
pop
adc
aas
xorb
leave
insl
cmp
ret
push
out
andl
out
cmc
scas
cmc
scas
testl
out
jp
and
loope
sbb
call
fistpll
outsl
lret
add
scas
and
lods
shrb
sti
mov
ficoms
cmc
dec
cwtl
je
shrb
lcall
fstpt
pop
lret
insl
std
mov
mov
jg
lahf
pop
cwtl
lcall
std
cmpsb
nop
cmpsb
dec
jns
inc
push
pop
push
xchg
mov
outsl
mov
mov
and
adc
imul
sbb
jle
call
lahf
cli
test
call
add
fisttpl
sahf
lock
push
out
add
nop
jmp
fcoms
pop
pop
mov
push
mov
push
je
and
test
sbb
mov
mov
jp
lds
mov
pop
rcrb
sbb
sbb
je
cli
inc
pushf
and
cmp
sbb
stos
inc
and
ljmp
call
repnz
fdivs
leave
pop
jae
movsb
dec
xchg
mov
test
jnp
lods
xor
aas
xchg
rcrb
push
push
and
mov
in
in
mov
mov
jae
xchg
mov
lods
aas
sti
mov
lcall
fistpll
repz
test
sub
dec
or
insl
nop
sub
sbb
xor
iret
shll
adc
adc
es
sahf
test
mov
xor
push
cmc
push
in
cli
and
call
test
adc
sub
pop
push
stc
into
call
adcb
sub
or
sti
inc
scas
fistpll
cmp
sub
lds
mov
sub
jle
jnp
dec
popa
push
fwait
pop
scas
int3
ja
sub
xlat
mov
cld
aas
xor
mov
push
sub
out
insb
sbb
jbe
jecxz
ja
rorl
inc
popa
dec
inc
cld
or
and
cmp
fnstsw
clc
nop
ret
loope
cld
or
add
mov
jmp
test
add
in
jne
mov
jo
je
insb
xchg
ss
ret
push
mov
movsl
cld
fwait
xor
jl
pop
daa
push
es
push
cmp
jae
pusha
decl
or
adc
and
pop
mov
mov
popl
add
cltd
sub
push
scas
cmp
sbb
shlb
adc
ret
and
pop
sbb
pop
adc
jge
cmp
out
jbe
mov
nop
mov
adc
mov
gs
adc
jmp
xor
sub
fsub
adc
ss
stc
cmp
cmp
call
fcmovnb
in
and
loopne
add
ljmp
pop
pop
xchg
push
rcl
mov
push
rcr
loopne
sub
aaa
cmc
push
mov
mov
pusha
rolb
dec
xchg
test
dec
cmc
and
lea
adc
xor
xchg
add
mov
sbbb
std
jecxz
or
ret
adc
loope
mov
ret
inc
lahf
imul
and
sbb
ljmp
fdiv
and
scas
pop
lcall
jae
sub
ret
outsb
fisttpl
and
sti
int3
mov
pop
pop
decl
lods
sub
stos
fldt
xor
es
mov
push
jns
pop
iret
aaa
mov
out
in
add
ds
clc
pushf
addr16
xchg
and
stos
and
add
ss
shlb
loope
les
ret
inc
adc
cmp
xchg
xchg
dec
mov
pushf
xchg
lret
pop
sbb
imul
in
inc
addr16
in
mov
mov
push
fwait
sti
faddl
shlb
stc
call
jp
shl
push
inc
scas
xor
ja
stos
add
xchg
test
inc
hlt
popl
out
sbb
dec
rcl
xor
hlt
lret
cwtl
lcall
stos
jmp
jle
jo
sarb
mov
jmp
xchg
fnsave
imul
cmp
pop
jecxz
inc
addr16
add
cmp
fs
push
bound
sbb
push
imul
dec
das
addr16
mov
add
sti
cltd
data16
stc
nop
inc
mov
es
out
ds
xchg
in
add
enter
mov
mov
jb
das
xchg
sub
xchg
and
xchg
fnstenv
jne
out
xor
mov
xor
insl
jne
ret
push
int
rcrb
cmp
ret
mov
out
adc
inc
mov
out
sbb
adc
inc
xchg
fs
mov
jb
ret
shl
in
setae
ljmp
jbe
ss
pop
adc
cmp
stos
pop
dec
fbstp
mov
jnp
rol
mov
mov
push
in
aam
test
push
nop
add
add
call
in
push
cs
mov
jnp
jno
push
cmc
or
mov
sahf
loopne
jp
inc
int
or
fsubrp
xchg
orb
lds
std
or
fisttps
add
cwtl
xor
mov
js
lods
loopne
fidivs
adc
cmp
testl
nop
stos
inc
lret
cmc
push
adcl
push
popf
cmpsb
repnz
fldt
sub
cltd
push
sbb
lods
push
xchg
fsub
insb
adc
mov
into
dec
mov
xchg
int
test
shll
leave
mov
xchg
push
pop
lods
hlt
lds
dec
lock
xchg
add
jno
mov
dec
pusha
jne
sbb
mov
pop
and
faddl
movsl
hlt
lcall
cli
lods
ret
bnd
cmpsl
fs
cmp
popa
or
out
mov
sub
out
ss
arpl
inc
jecxz
push
iret
fnsave
cmp
xchg
adc
xchg
push
popa
sub
mov
and
shrl
ljmp
imul
testb
or
or
mov
pop
dec
xor
jae
out
jne
mov
add
xchg
loopne
xlat
call
les
pop
aaa
rcrb
mov
mov
add
les
push
ljmp
or
mov
in
daa
push
add
dec
cli
inc
fistl
out
gs
xor
xor
cs
jnp
sub
jb
and
mov
mov
lods
lret
jp
addb
mov
or
stos
test
xchg
mov
dec
aas
fiadds
xchg
inc
mov
jg
sub
aas
stos
rcrb
loope
dec
adc
shrl
mov
test
daa
lods
mov
test
into
les
data16
add
cmp
jg
xlat
mov
push
mov
lahf
sub
mov
in
sbb
inc
or
adc
add
push
icebp
add
add
dec
inc
ficoms
in
gs
aaa
loope
jae
in
mov
stos
or
dec
jecxz
stos
push
jmp
sahf
xchg
jo
push
jmp
popf
mov
mov
mov
data16
cmpl
mov
mov
sub
loope
jle
xchg
mov
cmp
xchg
inc
mov
pop
xchg
std
push
call
jae
xchg
or
adc
dec
sti
mov
and
inc
call
cltd
aad
addb
loope
cvtps2pi
clc
inc
outsb
movsl
outsb
inc
lcall
mov
fwait
sub
cmp
je
shll
imul
ss
and
jmp
or
push
inc
clc
loop
out
cwtl
sbb
das
dec
mov
mov
xchg
and
adc
popf
cmp
sub
mov
xor
mov
mov
out
movsl
in
mov
stos
clc
sbb
lret
xchg
pop
mov
xchg
test
and
add
inc
cli
mov
lret
xchg
lcall
cmpsl
pop
in
das
mov
inc
fwait
div
scas
js
shlb
cld
pop
imul
inc
pop
jge
jbe
iret
ja
ljmp
adcb
repnz
popa
sub
xchg
and
daa
cld
pop
in
xor
pop
daa
movsb
or
incl
sub
popa
fdiv
mov
xor
lea
leave
mov
mov
loopne
sbb
pop
cmp
and
dec
fstl
sbb
push
pop
dec
mov
jno
lods
jg
in
inc
lea
and
jbe
subl
jge
or
stos
or
clc
addr16
jle
bound
test
bound
cmp
inc
std
push
or
jecxz
inc
jecxz
in
in
out
push
xchg
mov
aam
xchg
or
and
jg
sbb
dec
mov
movsb
cmp
jb
scas
xchg
arpl
fwait
clc
pop
xchg
jno
push
stos
and
jno
jl
adc
data16
mov
xchg
sub
mov
push
push
cmp
fsubrs
ja
adc
cmp
xor
push
in
adc
pop
cmc
in
sbb
std
xchg
pusha
insb
movsl
lds
dec
lahf
or
test
repnz
fnstcw
test
ror
data16
push
adc
aaa
fdiv
push
insl
adc
sbb
insb
mov
pop
lret
mov
add
mov
mov
pop
sub
jbe
pop
pop
push
xlat
aad
pop
rcrb
mov
aaa
sti
hlt
sbb
xor
mov
mov
rcll
adc
mov
sub
cmpsb
sub
loopne
lret
and
lock
shrl
xor
inc
sbb
mov
xchg
mov
mov
cmpsb
push
cmpsl
stos
test
or
fcoml
rorl
es
jno
enter
inc
jmp
pop
outsl
cltd
or
mov
cmp
adc
fadds
mov
push
movsl
mov
inc
sub
jg
xchg
mov
fimull
nop
sub
insb
pop
mov
push
pop
call
dec
push
jno
cmp
xchg
pop
xor
test
fdivs
lcall
or
lods
inc
vphaddwd
loop
jl
test
gs
pop
sbb
cmp
push
das
movsb
aam
sbb
mov
scas
push
loope
pushf
mov
dec
dec
sbb
decl
sub
ror
sbb
rol
repnz
mov
push
out
js
sub
outsb
sub
fwait
scas
sbb
xchg
xchg
xor
adc
fcompl
mov
std
dec
inc
add
out
fmuls
add
cmp
xchg
cltd
mov
cltd
das
and
jp
subl
aad
ret
aam
aad
movsb
inc
arpl
mov
sub
xchg
fcmovbe
inc
out
icebp
imul
popa
mov
sub
push
adc
jae
daa
add
dec
pusha
push
lods
jmp
or
xchg
jmp
inc
pop
mov
xor
pushf
adc
xor
adc
arpl
pop
iret
mov
jne
cld
ja
and
fcompl
jns
xchg
mov
sub
mov
sbb
add
out
mov
scas
cmp
ret
xchg
pop
jp
mov
lcall
mov
cmp
mov
jne
jp
sub
test
movsl
jg
lock
pop
pop
cmp
xchg
addr16
mov
pop
jl
ja
mov
icebp
fadds
pop
std
enter
lsl
pop
mov
sub
in
lods
mov
out
ljmp
adc
js
or
and
or
sub
pop
jg
mov
sbb
dec
lcall
push
inc
aaa
add
scas
iret
and
aaa
jle
mov
cmp
in
mov
out
loopne
call
jo
imul
sbb
popf
in
push
dec
fistl
out
push
xor
out
and
push
xchg
sub
xor
lret
loop
cmc
imull
add
mov
out
fsubr
pop
mov
or
ret
fnstsw
mov
dec
repnz
sbb
shlb
mov
leave
xchg
jmp
inc
cmp
nop
push
daa
aad
shlb
sbb
sbbb
sahf
cs
cmp
pop
pop
jno
cmpsl
mov
fldcw
dec
repz
aas
sar
adc
test
jo
sbb
sub
icebp
in
jnp
pushf
negb
cmpsb
loope
nop
xchg
jo
repnz
stos
in
inc
in
mov
sub
movsb
cmp
ret
xor
mov
dec
add
cs
or
mov
jg
clc
jae
pop
fidivl
test
jb
imulw
rclb
sti
inc
push
dec
icebp
push
popa
lcall
ss
popa
mov
push
loop
stc
popf
out
inc
fidivrl
inc
jmp
mov
hlt
fdivr
dec
mov
test
lret
addr16
mov
pop
imul
stos
cmp
shlb
pop
ret
arpl
xor
push
pop
jbe
leave
addr16
push
cmp
fildll
mov
std
es
aaa
xchg
pusha
xor
out
and
cmc
mull
mov
jl
sarb
pop
data16
arpl
push
shrb
jns
mov
pushf
scas
or
sbb
ds
push
cmp
mov
xchg
jne
mov
mov
push
and
out
jp
adc
cli
xchg
aas
bndstx
sti
or
decb
jo
ror
hlt
mov
outsb
add
mov
scas
out
push
adc
div
pop
sub
pop
lret
xchg
sub
gs
adc
arpl
sbb
xor
and
sbb
pushf
adc
sub
jp
andl
lret
scas
xor
stc
scas
push
enter
aaa
test
dec
popl
rcr
push
imul
shlb
ret
sub
out
loopne
inc
push
pop
dec
jb
adcb
in
mov
pop
imul
pushf
mov
stos
fdivs
or
in
lods
jle
insb
lahf
test
jo
sbb
rcrl
shlb
pusha
cli
push
lods
call
mov
test
imul
sbb
sbb
leave
sbb
mov
imul
cmp
test
loopne
xchg
movsl
jle
in
mov
sub
pop
lahf
xor
or
dec
jl
jp
inc
adc
add
out
xchg
sbb
xchg
ds
mov
loop
adc
jl
mov
adc
mov
into
xor
roll
fwait
xor
addr16
xor
cli
adc
lds
cmp
xchg
insb
iret
rcll
pop
hlt
or
popa
jbe
mov
add
push
inc
pop
sbb
adc
jae
in
mov
rcrl
add
movb
fisttpll
cmpsb
int3
pop
push
jns
inc
sub
or
cltd
dec
cmpsb
aad
shrl
xor
dec
seta
aaa
into
nop
sti
cltd
das
out
ja
inc
jo
scas
jmp
mov
shlb
inc
sbb
mov
mov
in
in
pushf
sub
mov
add
push
adc
shll
xchg
xchg
push
mov
dec
inc
pop
mov
dec
test
imul
sbb
ja
sub
mov
push
fimuls
pop
je
push
sbb
mov
push
lods
outsl
mov
push
lock
sbb
jo
xchg
lds
dec
dec
aas
rcr
adc
pop
jmp
std
fldcw
cld
cli
mov
lcall
sbb
jns
sub
shr
mov
int
arpl
mov
data16
jl
push
cs
sub
jl
ret
mov
jnp
adc
push
cs
dec
lods
or
mov
out
lea
inc
mov
dec
xlat
stos
sub
push
push
pop
sti
scas
ja
pop
gs
jno
jl
hlt
ret
arpl
mov
ds
jmp
push
rolb
mov
mov
mov
inc
sbb
int3
es
lret
popa
jge
sbb
add
sahf
gs
repnz
cmp
iret
jg
cmp
sub
pop
sbb
cmp
lcall
xlat
xchg
ss
sub
fistl
pushf
rcl
mov
or
xor
push
jg
or
sub
outsl
testb
and
sbb
and
adc
rol
jne
popa
xor
mov
fistps
test
popa
add
or
test
cltd
mov
mov
or
adcb
outsb
push
and
iret
or
lcall
sbb
and
mov
adc
push
sbb
add
mov
inc
enter
mov
shlb
sub
mov
loope
loopne
adc
fwait
test
stos
inc
out
and
into
mov
and
add
pop
out
sahf
ret
add
mov
movsb
push
push
lock
outsl
fisubs
jne
and
jns
mov
sub
out
adc
dec
mov
cmp
dec
fimull
or
sti
loopne
pop
mov
scas
cmpsb
jg
mov
int3
dec
movb
inc
push
mov
xchg
push
test
scas
inc
dec
mov
cmp
idivl
lods
push
or
inc
and
shrl
inc
jno
mov
sub
xchg
stos
inc
cli
jo
lods
dec
repnz
add
inc
pop
jne
in
frstor
shlb
icebp
cmp
and
loopne
inc
pop
xchg
adc
bound
lret
jmp
lahf
arpl
test
xor
fdivrl
movsl
movb
push
addr16
leave
sub
cli
adc
nop
aaa
fisttpll
mov
popa
pop
jb
xor
adc
xchg
loop
cmp
cmp
fld
hlt
xchg
sub
inc
pop
movb
jle
dec
addr16
or
sarb
aaa
cmpsl
jno,pt
and
pop
dec
xor
jg
fiaddl
cmpsl
shrb
cmp
in
scas
fcomi
or
mov
lds
sub
popf
ss
in
loopne
cli
pop
in
andl
into
int3
stc
jo
cmp
filds
ficoms
mov
mov
imul
mov
sub
les
ret
mov
sarl
mov
das
pop
jmp
jo
jo
dec
and
fsubs
inc
dec
loopne
fdivrs
mov
cmp
lods
ret
xchg
xor
vpmaxsw
movsl
mov
icebp
or
mov
dec
sti
cmpsl
cmp
mov
xchg
in
mov
jecxz
addr16
pop
cmpsl
js
push
lcall
fs
enter
add
add
lahf
sub
mov
insl
sbb
mov
mov
cmp
and
and
and
and
mov
mov
add
mov
pop
cvttps2pi
je
out
inc
movsl
aas
inc
fdivl
ds
or
lods
scas
incl
popl
and
xorl
xchg
mov
shll
push
call
jl
out
or
imul
jp
out
lahf
xchg
les
fcoml
test
cmp
mov
inc
push
std
imul
pop
adc
stc
inc
inc
popa
pop
xchg
gs
push
int3
xchg
mov
push
out
nop
xchg
sub
jl
add
shrl
inc
fdivl
out
jle
sahf
xor
xchg
xchg
mov
adc
jns
cwtl
cmp
mov
inc
and
jp
push
imul
scas
ret
roll
jecxz
and
mov
pop
cmpsb
imul
push
cmc
dec
leave
jp
ljmp
push
inc
push
mov
icebp
into
mov
xlat
ja
mov
xchg
cmp
fnstsw
push
adc
inc
add
test
cmp
cmp
enter
or
lds
or
imul
fisubl
xor
mov
pusha
mov
rcr
aas
pop
addr16
mov
xchg
push
test
iret
xlat
inc
adc
xchg
cmpsb
mov
xchg
ljmp
xor
gs
and
xchg
pop
cmp
insb
testl
jo
sar
jno
pop
adc
sub
repz
fstpt
dec
sbb
add
lods
inc
sbb
fdivs
or
dec
cwtl
xor
shrb
mov
jb
das
lahf
ss
fnstsw
pop
in
rcrb
addr16
lret
negl
nop
and
or
cmc
cmp
push
push
aaa
sbb
push
push
ret
das
mov
pop
fcmovb
push
test
xchg
sti
sub
mov
rorl
mov
in
scas
add
inc
rcr
fwait
hlt
mov
mov
scas
mov
lods
and
or
data16
xchg
push
movsb
repnz
cmp
jl
stos
jmp
mov
test
and
xor
adc
dec
sbb
jns
add
pushf
mov
fwait
ljmp
fnop
push
divb
cmpsl
adc
and
jecxz
add
fidivs
adc
adc
int3
cmp
mov
add
lret
test
data16
xchg
mov
sbb
sub
mov
addr16
sub
mov
int3
jge
test
add
xchg
jne
jmp
cmp
push
pop
inc
fsubs
repz
xor
loope
pop
push
pop
mov
mov
push
out
dec
imul
popa
xacquire
xor
push
mov
sbb
push
cmp
bound
rclb
push
push
xchg
sub
sbb
outsb
repz
je
or
dec
or
xchg
ret
xchg
or
dec
fucomp
xchg
fstpt
pop
sub
dec
push
loop
inc
lcall
pop
xchg
lret
and
xchg
xchg
sub
mov
mov
fsubrl
mov
mov
aas
or
test
adc
mulb
test
dec
and
push
in
fsubl
jo
jns
push
loopne
mov
mov
mov
cmp
xchg
pop
add
repnz
xor
jmp
mov
xchg
xchg
out
test
jp
pop
in
mov
bound
rcll
std
arpl
in
ret
mov
ret
jg
pop
int
xchg
pop
lock
popa
out
outsl
jle
daa
push
fldl
test
pop
pop
test
fimull
mov
xchg
mov
mov
js
mov
dec
lcall
pop
lods
push
dec
sbb
mov
loopne
sbb
cltd
jo
out
sub
and
mov
dec
pop
dec
js
jns
loopne
cld
mov
imul
mov
or
xchg
pop
in
or
jg
das
sub
mov
sub
shrl
pop
sub
leave
mov
xor
mov
das
pop
push
push
in
sbb
jno
incb
mov
call
dec
pop
jno
out
dec
aam
adc
inc
mov
out
sahf
repnz
rol
xchg
and
pop
mov
cmpsb
out
lahf
rol
xchg
pop
pop
in
dec
mov
arpl
pop
ljmp
jg
test
cltd
stos
add
jo
insl
push
inc
fiadds
and
in
test
adc
repz
xchg
inc
fmulp
bound
int
pop
sbbl
mov
loopne
pop
push
sub
mov
aaa
je
repnz
sub
fists
cmp
and
xor
adc
pop
out
mov
pop
aas
jge
pop
sub
movsb
inc
std
dec
xor
pop
push
inc
xlat
sub
sbb
mov
lods
in
sbb
insl
xor
ds
adc
mov
xor
lock
mov
sbb
push
fildll
jmp
sbb
testb
mov
inc
cmpsb
inc
icebp
sbb
sub
and
sti
mov
out
insl
adc
ffreep
dec
push
pop
sbb
shll
inc
cwtl
loop
in
jbe
and
stos
or
push
push
xchg
out
and
aas
repz
jb
ficoms
mov
xchg
xor
cmp
jge
cmp
push
lds
idivb
mov
fcoms
lods
cmp
cld
cmp
jg
push
push
imul
push
push
push
dec
mov
cmpl
mov
imul
orb
aaa
out
mov
xchg
outsl
jnp
cltd
mov
shrl
push
test
mov
lock
push
loop
cmp
pop
jno
mov
int
dec
das
stc
fbstp
les
ret
mov
sub
fwait
sub
in
outsl
imul
or
add
and
sti
je
jo
into
inc
repz
mov
dec
das
mov
dec
push
dec
xor
into
mov
sub
dec
lods
push
aaa
push
shr
pop
negl
adc
imul
jno
sbb
jb
incb
popf
hlt
notl
mov
pop
cmp
add
arpl
dec
xlat
push
push
iret
push
fld
imul
imul
lods
adc
repnz
dec
mov
add
push
fistpl
mov
sbb
outsl
add
movl
xchg
out
or
sbb
mov
mov
pop
cvtps2pi
fldcw
jecxz
sub
or
ljmp
push
shlb
xchg
xchg
dec
jno
lahf
scas
aaa
or
gs
and
jb
push
sti
jle
stos
cli
adc
mov
daa
jecxz
cmp
andl
jge
ljmp
cs
loopne
sti
pop
sub
inc
inc
adc
mov
xchg
xor
aad
leave
xchg
and
hlt
mov
lock
pop
hlt
test
push
test
aaa
enter
cmp
repnz
fbstp
hlt
mov
mov
cmp
pop
lods
mov
add
dec
outsl
adc
test
sbb
add
pop
lds
xchg
enter
sub
dec
push
arpl
test
fdivl
xchg
testb
adc
sbb
or
pop
cmp
push
in
mov
testl
mov
jbe
scas
gs
loop
or
inc
ficoms
hlt
mov
inc
cmpsb
cmp
mov
jge
icebp
test
clc
sub
and
mov
jmp
test
mov
sti
jge
xchg
jno
cmpsb
cmp
and
insb
add
or
jnp
movsl
cmp
scas
dec
in
jecxz
fwait
rorb
mov
cmp
hlt
mov
in
mov
ljmp
sbb
arpl
push
cmp
into
cmp
mov
adc
sti
fwait
inc
adc
test
call
ja
xchg
sbb
inc
ljmp
jecxz
in
in
popw
ret
add
adc
xchg
cmp
sbb
out
mov
rolb
xor
pop
dec
fistpl
test
push
in
in
add
pop
push
adcb
and
or
dec
popa
ljmp
jecxz
test
xchg
js
aam
movsb
pop
xchg
call
sub
push
lret
les
cmpl
sarl
inc
inc
fs
fisttpl
push
sbb
repnz
popa
js
fisubl
fildll
les
pop
cmc
js
cmc
dec
es
insb
cld
pop
or
mov
icebp
xchg
add
sub
or
gs
in
lods
jl
inc
pop
lret
sub
mov
movl
shlb
sarl
jmp
into
mov
cmpsl
cmp
jecxz
dec
sbb
jp
xchg
xchg
jnp
sub
cmpsl
sbb
ret
test
push
jmp
int3
dec
push
add
ret
fildll
shl
stos
jne
dec
push
js
pop
das
fcoml
lock
push
mov
mov
lret
enter
sbb
cmp
cltd
xchg
mov
mov
jbe
out
imul
aam
imul
lea
movsl
cmp
adc
or
in
or
xchg
sub
pushf
jle
adc
movsl
cmp
adc
shlb
pop
xor
pop
out
ficomps
sbb
outsb
lahf
sub
popf
js
push
inc
popa
xchg
add
mov
call
imul
sbb
dec
inc
push
loope
or
aas
push
jecxz
jp
lods
add
clc
iret
add
mov
jmp
loop
imul
sbb
push
sub
cmp
jp
jo
jns
add
mov
nop
insb
in
imull
sbb
jge
mov
pop
cmpsb
hlt
or
mov
mov
dec
mov
cmp
or
and
adc
xchg
stos
xchg
call
lahf
in
xor
xor
or
or
push
in
mov
aaa
mov
mov
and
fwait
push
int
scas
inc
xor
inc
adc
mov
mov
test
out
sbb
cs
clc
lea
xchg
mov
jo
jp
stc
sbb
enter
fwait
inc
xchg
out
mov
sub
movq
mov
xchg
add
xchg
pop
ret
mov
xchg
inc
fcmove
pop
or
mov
int3
enter
in
or
les
cmpsl
inc
pop
icebp
jg
in
clc
popf
iret
xchg
bnd
arpl
jno
cmp
xor
jg
xor
imul
push
fs
pusha
fiaddl
jne
flds
jae
jg
or
fstcw
and
push
test
je
sahf
push
sub
das
cmp
pop
ds
pop
lods
xor
pusha
pop
stos
mov
in
lods
inc
pop
sarb
mov
mov
mov
outsb
xor
shlb
jno
jle
aaa
pop
pop
cmp
sbb
push
in
sbb
jle
pop
jne
lahf
jg
xchg
outsl
rorb
pop
xchg
popf
dec
cmpsl
imul
loopne
pop
push
test
sbb
ss
xor
pusha
inc
fimuls
inc
movsl
or
sbb
ds
es
js
fdivrl
xchg
push
inc
inc
or
f2xm1
notl
inc
or
xchg
dec
mov
push
or
dec
or
jmp
dec
insb
mov
dec
cmp
push
pop
ss
inc
icebp
xchg
cs
xchg
pop
xacquire
popa
and
hlt
jns
js,pn
adc
cltd
jne
mov
clc
pop
push
leave
pop
dec
outsb
push
jbe
mov
add
arpl
xchg
pop
cmp
int
rcll
rcrb
scas
mov
pop
shrb
mov
dec
fs
stos
jb
fnsave
jne
and
jbe
lret
dec
xchg
addr16
in
sbb
pop
inc
ljmp
xchg
aas
stos
mov
xchg
jmp
or
xorb
je
lods
push
jg
jne
pushf
mov
loopne
mov
lcall
addr16
nop
outsl
clc
bound
cli
lds
xchg
xlat
rol
sub
outsl
ja
push
je
inc
notb
imul
jo
push
dec
jecxz
imul
sbb
sub
push
cmc
ja
mov
jge
out
xchg
pop
int
jg
lods
stos
adc
je
pop
cmpsb
shl
dec
sub
mov
pop
add
push
jbe
pop
out
jmp
or
add
ret
cmp
xchg
dec
aad
pop
inc
push
or
dec
xlat
cltd
xchg
jl
dec
into
cmpsb
sub
add
dec
aam
hlt
ret
icebp
push
jne
jb
out
in
aaa
xor
push
fbld
push
dec
fistpll
push
or
add
les
scas
xor
into
or
mov
push
xchg
fldt
int3
lea
enter
out
negl
aad
mov
and
sbb
adc
pusha
lds
sbb
xor
jmp
adc
fidivrs
outsb
clc
ljmp
inc
std
push
sbb
aam
jmp
xlat
lahf
hlt
mov
fdivl
and
out
mov
push
rcr
xchg
xlat
es
fsubs
or
or
lcall
cmc
cmovbe
push
add
fldl
xor
and
test
lret
pop
addr16
xor
aaa
sub
push
orl
jae
les
mov
inc
cli
int3
clc
loopne
mov
push
into
fs
sahf
and
sbb
cltd
sbb
in
pop
dec
test
adc
jns
nop
push
sbb
xor
pop
testb
xchg
jnp
mov
sub
rorb
imul
lret
hlt
inc
jb
lds
fcoml
sub
xchg
leave
sarl
jbe
std
and
dec
add
lods
scas
fisttpl
sub
sbb
xor
jge
jns
subb
mov
mov
insb
adc
xchg
mov
xor
pop
mov
scas
sbb
jg
fwait
iret
bound
xor
cmc
insl
push
mov
or
dec
cmp
loope
out
jp
mov
stc
jge
or
sub
imul
in
fcoms
xor
daa
repnz
test
out
add
rcrb
mov
dec
add
jecxz
mov
dec
push
pushf
aad
sbb
movsb
mulb
aas
adc
xchg
popa
cmpsl
or
mov
or
cs
lods
add
pop
mov
jns
inc
movsb
repnz
mov
pop
or
std
cltd
push
imul
stc
xor
repnz
xlat
adc
add
add
scas
inc
sub
test
int3
fs
jmp
xchg
repz
shl
mov
cmpsl
rcl
lea
mov
mov
mov
xlat
adc
mov
addr16
xchg
test
lret
iret
xchg
cmpsl
adc
mov
mov
or
fldcw
scas
cmpsl
outsb
jns
notb
sub
pop
mov
xchg
jl
jns
jne
inc
fbld
mov
fsubl
cmc
leave
inc
xor
test
push
inc
and
mov
sbb
or
rol
cli
int
ds
inc
imul
sbb
adc
mov
lods
sbb
or
mov
xchg
inc
and
sbb
push
movl
lret
in
in
loope
lcall
cmpsb
aad
sbbl
mov
jnp
pop
mov
or
cli
pushf
xchg
arpl
mov
loope
jne
mov
fisttpl
xor
add
sti
adc
leave
sbb
les
and
adcb
in
mov
jp
mov
leave
xor
outsb
add
jl
push
sub
sbb
inc
in
testb
fidivl
xor
mov
add
pushf
roll
cmpsl
xor
push
clc
xchg
inc
fdiv
aad
xchg
int
arpl
ret
pop
add
cmp
daa
or
mov
mov
adc
inc
jecxz
mov
mov
sub
mov
and
bound
mov
icebp
xor
pusha
mov
cmp
inc
test
push
insl
pop
in
pop
repnz
testl
sbb
call
sti
sarb
test
mov
push
dec
pop
xchg
nop
sub
insb
add
andl
jmp
push
movsb
cmpsl
popa
cwtl
sub
ret
xor
fists
pop
int
mov
jg
mov
out
enter
add
sbb
stos
mov
mov
adc
lods
inc
in
add
clc
repz
jle
inc
push
rcl
movsl
sub
jl
cmp
mov
xlat
out
pushf
adc
sti
mov
mov
in
js
cmpb
jmp
adc
jl
push
mov
adc
sar
xchg
add
test
out
lds
and
xchg
sub
cli
mov
jns
sbb
add
int
sub
scas
adc
dec
mov
lods
ljmp
aaa
mov
dec
cmp
dec
je
pop
sub
push
sti
jmp
rcrb
repnz
mov
push
cmp
stos
fistpl
call
xchg
dec
xchg
fcmovnbe
sub
add
push
push
lds
in
cmp
or
sbb
and
adcb
test
repz
xchg
rolb
mov
xchg
sub
inc
pop
mov
push
loop
lahf
mov
test
nop
jg
add
imul
insb
add
pop
mov
popa
iret
loop
in
xchg
das
sub
leave
mov
mov
cld
xchg
arpl
sbb
push
mov
adcb
pop
shll
call
and
push
lods
jae
mov
fmull
push
jae
xchg
arpl
adc
jns
xor
dec
push
sbb
xor
adc
flds
push
jo
jg
sbb
hlt
jnp
push
mov
dec
fs
shr
in
inc
insb
stc
add
mov
xor
pop
or
adc
rcll
xchg
fnstcw
hlt
subl
dec
push
popf
xor
rorl
jle
dec
inc
insb
sub
clc
iret
jno
enter
jp
cmp
push
mov
sahf
outsb
clc
push
mov
adc
add
loopne
test
cmc
mov
sub
idivl
dec
cmpsl
mov
popa
jle
xchg
mov
or
inc
ja
fldt
mov
movsl
jg
fcmovnb
push
inc
shlb
outsl
mov
test
cmp
fistl
jns
sub
jge
jae
adc
loope
push
daa
dec
mov
decl
pop
call
xlat
sub
inc
xor
pop
loopne
sub
std
dec
lods
sub
cwtl
pop
mov
mov
mov
xchg
dec
dec
lahf
in
out
push
fstl
mov
mov
es
addr16
and
or
dec
stos
lods
sti
inc
mov
sbb
push
and
mov
mov
inc
jnp
sbb
jo
add
call
fldcw
mov
je
mov
out
fnsave
xchg
dec
jo
shll
insl
or
jp
xchg
daa
mov
add
loope
ja
adc
lock
jle
cltd
lock
mov
or
sub
inc
push
or
dec
test
test
cmp
lret
mov
push
xor
mov
cmp
and
lea
cmpsb
xor
pop
insl
xchg
sahf
push
fsubrp
mov
test
fadds
pop
incb
mov
mov
loopne
jl
inc
push
fdivs
sahf
clc
sti
out
daa
int
adc
imul
into
iretw
jg
fimuls
in
push
and
out
loopne
xor
xor
mov
leave
push
jno
or
enter
pop
pop
push
push
testl
in
daa
scas
aas
leave
fdiv
dec
loope
xor
mov
outsb
adc
pop
cmp
jae
lret
mov
add
sub
jne
imul
dec
sbb
dec
insl
mov
js
xor
jb
clc
or
mov
cmovb
and
shrl
push
xchg
xor
jbe
ss
ds
ljmp
insb
mov
pop
shrb
push
stos
xor
lea
xchg
loop
lret
fldcw
scas
and
mov
sbb
xchg
jecxz
clc
inc
xor
cwtl
xor
daa
pop
cld
imul
daa
pop
cmpsb
mov
jg
out
cmp
dec
mov
mov
popa
shlb
cmp
pop
sbb
xchg
or
repnz
cmpsl
inc
cmp
pop
or
enter
mov
movsb
out
loop
xor
je
insl
adc
hlt
lahf
xchg
sbb
mov
mov
xchg
stc
je
xlat
cltd
and
imul
stos
xchg
stc
adc
mov
push
repnz
mov
stos
outsl
cmp
push
fcomps
js
xchg
xchg
outsb
mov
hlt
adc
pop
cmc
pop
stos
out
push
stc
add
jno
jno
mov
pop
es
mov
adc
mov
push
xlat
inc
jbe
ljmp
test
sbb
or
sub
mov
pop
scas
or
pushf
cld
aas
push
cs
lods
mov
les
jp
pop
pop
out
xor
mov
cwtl
imull
les
push
sub
repnz
xchg
stos
dec
test
inc
rcrl
mov
pop
push
ja
cmp
out
cmp
je
imul
dec
mov
stc
push
lret
xor
lret
outsl
pushf
into
in
movd
imulb
inc
jge
mov
clc
push
shll
into
ljmp
in
jl
jp
mov
sbb
in
shr
and
xlat
pop
pop
jne
aaa
insb
outsl
inc
sbb
dec
jecxz
cmpsb
loope
fcoms
jl
jl
inc
dec
mov
xchg
sub
mov
movsb
dec
adc
xor
ljmp
mov
jnp
inc
fldl
jno
push
dec
jecxz
dec
popf
adc
test
fidivrs
xchg
into
xor
aas
xor
jnp
xchg
repz
mov
sbb
ja
data16
pop
icebp
or
dec
lock
orl
xchg
insb
and
push
fadds
repz
dec
orb
mov
adc
loopne
cmpsl
adc
daa
mov
data16
scas
jno
pop
dec
adc
adc
pop
mov
pop
sub
mov
mov
xchg
mov
mov
jno
sub
das
repnz
iret
call
fs
icebp
mov
jg
jno
pop
aaa
lret
and
ret
scas
pop
push
jne
movsl
and
sub
ljmp
movsl
xchg
jb
mov
fidivrl
and
cltd
push
push
les
aas
pop
in
mov
gs
lahf
pop
ja
or
adc
jg
pushf
movsl
std
xchg
inc
test
add
mov
or
xchg
push
repnz
xor
std
inc
jno
jmp
adc
and
ss
icebp
test
sub
mov
in
addr16
push
movsl
inc
inc
mov
pop
movsl
sub
pusha
push
ret
xor
xchg
inc
repz
sbb
testb
jae
inc
cmp
sub
push
clc
mov
out
xchg
bound
nop
andb
cmc
ds
lods
sbb
mov
dec
adc
mov
addr16
add
mov
mov
sub
and
and
push
mov
jg
pop
sub
jp
ret
push
push
sahf
xor
dec
mov
lds
xor
or
or
or
clc
inc
add
ss
jecxz
enter
sarb
or
lahf
xor
mov
fdivrl
push
jnp
and
loope
cld
xchg
add
data16
or
xchg
mov
jbe
es
cmp
inc
call
ficoms
push
mov
cmp
xorb
icebp
imull
jle
pop
adc
and
xchg
hlt
rcrb
orl
mov
sub
adc
fcoms
or
dec
mov
mov
popf
stos
shrb
and
addr16
in
add
mov
xchg
das
movsb
ja
jg
daa
xor
inc
hlt
inc
lods
sbb
lods
or
test
push
or
loopne
ja
mov
pop
leave
and
mov
outsb
lahf
dec
js
lahf
cld
insb
dec
cmp
pop
fsubrs
push
call
mov
xchg
scas
das
cmpl
sub
jge
adc
mov
add
int
aam
jns
jp
fs
dec
test
orb
fstps
add
lods
mov
pop
or
push
xchg
lahf
push
pop
cli
aas
lods
cmp
pop
sub
mov
rcrl
iret
push
fnstenv
stos
pop
sub
or
mov
jmp
sbb
or
dec
int
xchg
mov
sbb
inc
add
dec
fmull
mov
mov
int3
cmp
inc
mov
ljmp
dec
or
mov
push
push
xor
je
or
rcr
jmp
mov
iret
add
xchg
jmp
les
and
mov
pop
push
xlat
icebp
cmpl
fdivs
add
je
push
jbe
cmpsb
add
xor
xlat
test
inc
sbb
pop
daa
or
arpl
mov
shlb
jb
or
cmpl
or
js
cli
push
sbb
xchg
sbb
mov
dec
mov
fwait
dec
ljmp
and
push
pop
push
outsb
xorb
bound
inc
or
mov
stc
int3
sub
xor
add
fs
adc
mov
inc
add
int3
mov
push
inc
mov
inc
pop
rolb
and
aam
js
jb
clc
push
scas
xchg
xchg
pop
decl
inc
out
pop
loopne
xlat
enter
inc
or
lock
scas
scas
mov
loop
and
adc
mov
repnz
or
push
sti
daa
addr16
std
ds
inc
bound
lods
ljmp
pushf
repz
addr16
aad
xor
mov
adcb
mov
pop
mov
cmp
call
pop
movsb
or
out
scas
inc
cmp
lea
jl
out
mov
faddp
pop
int3
xor
adc
sbb
sub
mov
cmp
scas
sti
push
call
pusha
inc
or
dec
and
divb
mov
test
pop
jge
pushf
lret
repnz
cld
stc
mov
dec
xchg
cli
add
cli
ja
shlb
push
pop
pop
addr16
push
inc
inc
enter
scas
outsb
inc
mov
loop
lock
lea
stos
sbb
or
cwtl
das
stc
pop
pop
sbbl
or
pcmpeqw
jl
jns
loopne
test
mov
repz
in
fnstcw
inc
clc
adc
or
push
dec
push
sbb
dec
addr16
xchg
pop
into
xchg
leave
lahf
xchg
repnz
mov
adc
jne
ret
fs
js
cmp
popf
mov
mov
imul
adc
adc
in
pop
pop
xchg
shlb
sbb
sub
jnp
sub
mov
out
sub
fcmove
pop
loopne
adcl
xor
xchg
dec
pop
repz
cmp
cs
and
leave
int
cmpsl
sbb
or
mov
into
jns
jns
mull
cmc
sub
cmpsl
ret
je
idivl
jno
inc
mov
push
cmp
cmp
sub
aam
cmp
mov
pop
out
push
js
iret
inc
sub
push
jecxz
andb
and
out
push
es
mov
push
je
pop
cmc
or
shl
shr
sbb
adc
add
imul
addr16
dec
pop
fs
xlat
lds
cwtl
adc
or
ds
jae
jge
test
pop
mov
movsl
cmp
xor
fbstp
mov
data16
adc
sub
int3
cwtl
mov
in
push
vmread
cltd
pop
cltd
shrb
mov
cmp
sbb
dec
stc
les
mov
jns
mov
cld
xchg
int
dec
loop
cmp
incl
imul
adc
arpl
mov
loopne
xlat
and
aam
pusha
or
push
lds
jae
adc
inc
jmp
adc
sbb
xor
movsb
gs
mov
stos
adc
ds
scas
xchg
add
lahf
js
test
into
xchg
and
out
fisubrs
pusha
mov
or
add
mov
rclb
add
test
fldz
pop
lret
xchg
repnz
jne
out
add
lahf
and
xor
ret
xchg
cmp
jnp
popf
push
pop
or
pop
inc
mov
xchg
insl
cwtl
test
and
ss
loopne
outsb
punpckhbw
push
rcl
repnz
cwtl
sbb
jb
xor
ds
insb
push
andb
cmp
dec
adc
popf
movsb
dec
xchg
pop
jbe
fdivrl
in
outsl
lods
cmpsl
fs
push
inc
adc
jmp
loop
sahf
clc
aaa
mov
push
jb
rolb
cli
adc
cmp
and
mov
imul
xchg
gs
pop
adc
aaa
mov
push
jb
cmp
cmp
inc
loop
xchg
cs
adc
bound
clc
mov
sub
cmpsl
adcl
mov
cmp
push
out
cmpsl
popa
dec
ret
outsl
mov
aaa
mov
into
jl
push
xchg
add
popf
leave
mov
mov
lea
xor
es
pop
adc
arpl
cmpl
push
lret
cmp
mov
cltd
shl
mov
insl
inc
aam
dec
mov
xchg
in
mov
rcrb
nop
fidivrs
and
int3
and
test
movsb
xor
int3
out
outsl
inc
addb
fdivs
and
aad
rcrl
sbb
jle
idivb
and
xlat
sub
rorl
lret
pop
mov
fsubs
add
out
repnz
pusha
mov
inc
ds
add
icebp
subl
andl
outsb
mov
jge
inc
xor
cmp
add
ljmp
stos
push
insl
popa
pop
orb
inc
add
inc
cs
out
jno
sbb
adc
testb
outsl
cmp
dec
cmpsb
imul
push
das
mov
hlt
push
popf
and
and
pop
dec
out
out
lahf
inc
adc
lea
push
nop
jne
in
das
je
mull
sbb
rcl
sti
leave
fwait
mov
bound
mov
push
cmc
orl
cmpsb
incb
adc
rorl
cmpsl
xor
jmp
xor
dec
int
dec
sti
popf
sbb
aas
push
mov
insb
xchg
sbb
sub
sbbb
movsb
gs
loopne
sub
hlt
jnp
mov
xchg
fwait
mov
dec
mov
icebp
sbb
adc
sahf
ffreep
hlt
loop
sub
jecxz
push
pop
or
test
addl
adc
inc
cs
je
pop
adc
pop
mov
pushf
fs
mov
xor
jbe
mov
repz
int
iret
sbb
adc
cmc
les
push
insl
negl
mov
cmp
test
inc
mov
ja
xor
cmpsb
test
movl
mov
ret
inc
stc
ds
clc
dec
loope
dec
inc
fnstsw
adc
lcall
pop
aas
insl
inc
in
inc
mov
xchg
gs
in
cmpsl
scas
hlt
lret
pop
xchg
fistps
ficompl
cmp
je
out
ljmp
jbe
push
clc
cli
dec
pop
ret
lock
mov
fwait
dec
cpuid
dec
pop
out
push
adc
push
and
inc
inc
lods
inc
movsl
push
xor
aaa
xchg
and
mov
inc
jp
fucomp
out
jno
sbbl
popa
addl
stos
jg
outsl
jg
xchg
and
push
cmp
out
ret
cwtl
call
and
sbb
je
bound
bound
cmpsl
pop
sub
fidivs
daa
leave
cmp
cld
xor
stos
xchg
xchg
jecxz
les
push
nop
jmp
sub
lahf
lahf
aam
iret
mov
mov
arpl
addr16
lcall
push
bound
inc
addr16
insl
adc
or
pushf
xor
dec
stc
jb
push
mov
arpl
xor
insb
lods
pop
push
movsb
std
xchg
push
mov
test
popa
push
lea
jecxz
mov
lret
add
jmp
lea
lret
test
imul
imul
fmull
loopne
push
in
push
ficomps
hlt
loope
lcall
pusha
cld
rcll
fs
cmp
push
cs
adc
sbb
jge
ret
and
idivb
jmpw
dec
inc
mov
cmp
and
and
pop
icebp
xchg
inc
or
fdivrl
flds
mov
adc
mov
cmc
fs
xchg
xchg
xor
push
arpl
xor
test
or
and
fnstsw
pop
xor
mov
xchg
in
icebp
lahf
mov
inc
push
xor
fbstp
int3
sahf
in
pop
insl
and
jae
push
mov
js
and
push
imul
xchg
ja,pn
pusha
pushl
mov
jae
mov
jno
out
pushf
dec
mov
outsb
outsb
adc
mov
xchg
pop
es
scas
fstl
adc
jbe
roll
icebp
js
and
and
dec
fistpl
test
rol
cli
ja
or
in
pop
adc
cld
cmpsl
ja
movb
loop
mov
je
push
mov
jb
je
das
add
loop
aad
stos
mov
mov
pop
fmul
sbbb
xor
xchg
dec
push
xlat
push
nop
pop
sbb
and
lgs
xchg
divl
add
mov
fcomp
ret
stos
out
outsl
inc
xchg
lret
scas
add
sbb
loope
xchg
mov
sub
xlat
js
lock
das
mov
sbb
xchg
add
js
sahf
inc
cld
xchg
pop
fadd
or
addb
pop
lret
arpl
fisubrl
dec
bound
inc
test
scas
mov
xchg
adc
sub
or
xchg
xchg
fwait
mov
or
rorb
push
dec
pop
xchg
sbb
in
inc
dec
cwtl
iret
mov
cmp
jns
mov
push
in
jae
test
test
jae
imul
andl
or
mov
dec
gs
dec
pop
jb
sub
cmp
fisttpll
sbb
pushf
nop
fwait
aad
and
inc
cli
push
mov
mov
in
add
sbb
mov
or
out
add
cmpsl
lds
pop
dec
lds
xchg
dec
fwait
mov
cltd
or
mov
fimuls
lods
imul
scas
lds
sub
adc
xor
jl
inc
pop
mov
out
cmpsb
pop
scas
pop
pop
ss
and
std
inc
in
fidivrl
aad
lret
mov
or
mov
jmp
and
push
fmuls
mov
icebp
dec
sub
xor
xor
inc
scas
sub
xchg
cmpb
jg
sub
aam
xchg
pop
or
and
inc
ret
xor
jg
mov
inc
dec
jp
lcall
lods
in
frstor
lea
push
imul
xlat
in
dec
push
in
pop
lret
lret
sub
lcall
es
movsl
int3
popf
xor
sbb
roll
lods
push
sub
je
jecxz
das
xchg
popa
dec
add
out
out
and
out
repz
fnstcw
xchg
dec
xor
sahf
xor
test
ja
xor
mov
mov
aaa
jnp
add
in
mov
xchg
fs
sahf
aaa
subl
xchg
jno
fisubl
xchg
xlat
clc
nop
cltd
mov
data16
jmp
mov
rcl
pextrw
pushf
mov
mov
rcl
push
push
jb
ret
add
stos
lea
cmpsl
rcll
or
in
push
mov
pusha
sbb
jo
out
sti
arpl
cmp
sti
popf
rcrb
loope
stc
std
inc
inc
icebp
adc
rolb
popf
push
jge
jbe
cli
cmp
xor
insb
ret
mov
inc
dec
cmp
mov
inc
outsb
call
push
mov
filds
in
lods
in
in
call
push
fwait
sub
xchg
mov
les
insb
push
pop
jmp
inc
dec
cmp
and
addl
sbb
lahf
into
imul
mov
std
cmovle
sub
mov
xchg
repnz
shrl
push
mov
fwait
scas
lahf
icebp
testl
jno
mov
sbbl
daa
into
lods
inc
xchg
out
scas
fsubl
mov
add
bound
int
pop
inc
inc
cwtl
and
movl
inc
fsubrl
dec
arpl
jmp
bnd
cmp
or
cmp
in
push
rcrl
imul
pop
imul
sti
cmp
ss
add
xor
and
push
popf
xor
stos
xchg
sub
ss
push
jno
pop
mov
sub
cmp
lods
outsl
shll
xchg
mov
insb
jmp
pop
and
into
out
mov
or
push
adc
inc
jnp
fildll
pop
idivb
pop
cmpsl
call
in
mov
and
das
push
mov
sbb
and
push
xchg
incb
mov
sbb
popf
lods
lea
cmp
mov
test
inc
lret
xor
arpl
aas
scas
dec
or
pusha
add
jno
push
mov
mov
scas
mov
or
lcall
ffree
sbb
outsl
pop
ret
fyl2x
in
shlb
push
mov
pop
dec
push
test
push
pushf
or
jne
jb
bnd
or
fnstenv
dec
jbe
xchg
cs
pop
shrl
mov
xchg
loop
mov
dec
sbb
mov
rcrb
or
pop
out
js
sub
xlat
jno
pop
je
movsb
and
iret
sbb
nop
mov
insb
ljmp
mov
popa
in
sbb
cmp
outsl
inc
lods
pop
addr16
gs
inc
mov
cmpsl
cmpsl
dec
gs
call
sub
mov
pop
push
mov
adc
bound
dec
mov
out
sbb
cmpsb
pop
mov
mov
ss
pop
inc
cmp
inc
lods
lea
push
enter
fisubrs
daa
aad
cmp
mov
pop
pop
mov
rdtsc
jp
jecxz
mov
add
popa
jns
push
cs
outsl
dec
test
jae
sub
shlb
ret
sub
mov
sbb
dec
mov
xchg
jne
pop
out
sbb
mov
mov
xchg
and
repz
lcall
mov
jne
lcall
in
pusha
dec
inc
dec
pop
jne
call
and
adc
sbb
lock
xor
sbb
daa
mov
sbb
mov
xchg
call
arpl
adc
addr16
jecxz
sti
enter
xchg
test
or
cmp
sub
insb
adc
sbb
ljmp
and
push
adc
xor
xor
lods
mov
outsb
movsl
xchg
lods
cli
push
and
mov
jno
xor
sub
jno
pop
mov
add
adc
dec
sub
add
or
movsl
out
stos
insw
imul
stc
lea
shrl
or
and
mov
lods
and
adc
jae
push
mov
loope
jbe
les
sbb
cmc
jbe
pop
rcrb
aas
jp
xchg
pop
cmp
push
mov
xchg
lods
inc
sub
lods
xor
jb
dec
mov
in
mov
dec
out
fwait
loope
sbb
and
mov
cmp
mov
jns
and
arpl
addl
mov
fidivrs
add
adc
and
jmp
jecxz
sub
pop
cmpl
cmpsl
jl,pt
scas
fnstsw
push
cmp
loopne
inc
sbb
push
test
xchg
aam
push
mov
shlb
subl
stos
lds
fildll
fbld
loope
pop
call
push
nop
mov
ss
push
fnstcw
mov
imul
in
in
cld
inc
inc
push
cmp
lcall
inc
push
mov
addr16
lods
arpl
or
mov
xchg
mov
sbb
add
dec
jo
daa
aas
call
xor
cs
bound
pop
popa
incb
jecxz
pop
cmc
xchg
stos
jae
push
gs
push
loop
jp
xor
pop
jge
mov
pop
lock
dec
lods
xor
and
xchg
enter
sahf
push
aam
push
ljmp
lods
xchg
xchg
cltd
push
push
stos
sti
mov
mov
subl
or
jns
inc
das
loope
add
pop
mov
mov
dec
pusha
insb
jo
leave
inc
dec
push
in
andb
add
sub
cmp
jecxz
lock
inc
arpl
xchg
mov
push
and
and
in
fs
dec
xlat
test
adc
ds
mov
insb
flds
mov
shlb
gs
loopne
cmpsl
adc
push
xor
ror
adc
dec
jne
pop
inc
xchg
inc
mov
daa
adcb
jb
cli
dec
cmpsl
mov
cmpsl
or
imul
inc
dec
cld
daa
cmc
xor
or
mov
int3
leave
pusha
decb
xchg
jecxz
lcall
push
scas
mov
adc
inc
pop
test
sub
mov
add
shr
roll
sub
add
fmull
sub
inc
jb
cmpsb
outsl
jmp
imul
mov
clc
test
mov
mov
mov
jns
out
imul
or
jg
insl
gs
std
iret
mov
jno
add
movsb
add
popf
stc
rolb
mov
insl
lea
xchg
fcompl
add
sbb
xchg
mov
add
sbb
lock
cmc
mov
adc
mov
or
ljmp
mov
arpl
loopne
adc
rorb
mov
pop
mov
ja
sbb
push
dec
cmp
jb
add
aaa
mov
add
xchg
fucomp
cmp
hlt
xchg
hlt
cmp
xlat
jg
fsubrs
add
rcrb
notb
inc
add
leave
mov
mov
mov
sbb
or
repnz
xchg
aam
sti
test
fldcw
sbb
jne
rcr
lods
and
jne
ret
xchg
adc
rorl
add
insl
add
aam
sahf
orb
mov
fcmovb
and
adc
je
and
sti
jbe
lret
adc
jmp
jae
xor
jae
insl
adc
pop
xchg
in
adc
dec
das
jg
repz
cmp
cmpb
lock
xor
cmp
stc
fs
xor
push
outsb
lock
xchg
adc
loopne
imul
xchg
cmc
mov
ds
sbb
mov
insl
dec
sub
push
mov
js
das
mov
jmp
or
dec
adc
insb
mov
out
imul
pop
sub
jmp
repnz
loope
inc
xor
or
cs
imul
shufps
inc
bound
sub
cs
inc
in
cmp
fmul
xchg
push
pop
dec
out
pop
negb
outsb
dec
jae
mov
cli
inc
pop
out
lods
stc
xchg
sub
cwtl
test
mov
arpl
mov
mov
xor
xchg
sub
clc
mov
push
jmp
jl
xchg
xor
jb
jge
mov
daa
rcrb
pop
ret
adcb
insb
insl
jge
inc
addr16
popa
cmp
adc
inc
xchg
xor
xor
sbb
cli
out
je
pop
xor
nop
sbb
lahf
outsb
adc
sahf
leave
test
enter
sub
imul
das
mov
mov
ss
popf
sbb
mov
sbb
aas
aaa
add
mov
jg
inc
je
pop
mov
aad
inc
pop
stos
lcall
arpl
popf
pop
mov
inc
push
aas
dec
sub
lcall
imul
aam
movsb
jno
adc
sub
ret
mov
shlb
out
adc
push
fbld
xor
or
lret
sarb
push
ret
mov
fdivs
jle
aaa
addl
add
or
repnz
mov
jb
out
sti
leave
or
insb
and
push
and
adc
mov
sbb
sub
ret
repz
jmp
int
jo
bnd
mov
cli
mov
rol
movsl
mov
sub
dec
in
jb
imulb
imul
dec
fnstenv
enter
mov
ret
pop
ret
or
lcall
xchg
pop
push
test
pop
sbb
xor
inc
and
cli
inc
in
js
pop
push
iret
adc
repz
lock
icebp
das
mov
testl
out
pop
jmp
data16
nop
daa
mov
pusha
stos
inc
lods
scas
popa
sbb
inc
adc
push
sbb
fildl
mov
jae
cmp
stos
fidivrl
pop
xor
insb
sbb
sbb
mov
jp
pop
jno
inc
pop
out
jb
jl
cwtl
daa
jne
pop
sbb
adc
fsubl
in
test
or
and
sub
fimull
inc
gs
ljmp
into
icebp
mov
push
xor
and
popa
rolb
inc
xchg
mov
jmp
pop
jbe
jl
cmp
sbb
mov
mov
daa
pop
outsl
jge
pushf
mov
dec
mov
sbb
data16
or
mov
in
pop
dec
rolb
jge,pn
mov
push
movsl
xorb
movsl
mov
cld
xchg
mov
and
cmp
or
dec
xor
xchg
popa
inc
jg
out
mov
pop
jne
ds
cmp
xchg
insl
push
adc
xor
out
mov
test
cld
lcall
in
adc
xchg
xchg
mov
jge
cmp
adc
sbb
xchg
mov
shl
sbb
mov
fbstp
dec
and
hlt
xchg
mov
mov
dec
cmp
dec
in
fwait
mov
cld
syscall
pop
imul
lcall
and
into
jae
add
aas
pushf
push
pop
scas
aas
mov
mov
sbb
sbb
jbe
js
rorb
pop
sarl
cs
out
insl
inc
pop
xor
mov
jg
pop
into
es
sub
pop
in
jne
mov
int
add
rol
sbb
ret
jle
add
mov
xchg
jmp
inc
inc
mov
fcomip
stos
negl
mov
les
xchg
pop
sub
mov
adc
dec
or
cld
cmp
jns
insl
test
iret
push
out
insl
mov
or
mov
sbb
les
dec
int
jg
add
xchg
test
stos
adc
je
lret
and
mov
push
jns
sbb
xchg
andl
pop
das
xchg
or
xor
adc
inc
inc
cmp
inc
loopne
add
fwait
mov
cmp
or
js
jns
xchg
pop
nop
mov
fidivrl
dec
sbb
jge
jae
shrl
sub
push
mov
pop
clc
and
test
sbb
js
ljmp
aad
jg
fsubs
inc
out
xor
aas
cmpsb
or
mov
fbld
dec
cmp
mull
inc
add
shll
sbb
js
mov
or
loope
dec
iret
fiaddl
dec
pusha
movsl
pop
cmp
add
testl
push
outsl
inc
add
sub
fs
inc
push
mov
aas
push
cli
rorl
sahf
push
loop
cli
mov
frstor
push
xchg
stc
popf
mov
int3
pop
popf
jno
pop
mov
cmp
inc
or
in
xor
jae
ds
cmpsb
or
and
mov
pop
outsb
add
jl
call
or
mov
test
jg
insb
inc
daa
imul
xor
gs
pop
push
xchg
sti
or
jle
jp
and
push
jb
lea
call
sub
push
or
inc
sti
inc
mov
aas
jecxz
sbb
aaa
ret
movsb
shll
cmp
icebp
lods
jg
subl
jo
mov
or
xchg
stc
pop
aaa
insb
fstpl
scas
mov
mov
sub
mov
ret
cli
sbbl
sub
lock
xor
ds
insl
inc
les
push
xchg
sub
nop
dec
and
dec
and
dec
mov
or
testl
leave
cmp
jae
and
push
mov
inc
cmpsb
mov
cmp
xor
push
sbb
sbb
or
pop
cmp
jb
clc
stos
xchg
aaa
push
iret
pop
xlat
jbe
xor
cmp
ds
mov
icebp
jge
in
leave
jo
je
std
out
sbb
out
push
pop
int
imul
cltd
in
pushf
mov
push
daa
dec
sbb
pop
dec
repz
add
jecxz
xchg
xchg
ljmp
adc
sub
int3
xor
rclb
push
sub
sti
push
rcl
popa
aad
xchg
cmc
mov
inc
in
mov
shl
xchg
les
and
loop
rol
inc
fbstp
stos
loopne
pop
aad
lret
pop
bound
aaa
lds
mov
mov
in
cmp
data16
mov
rcrb
mov
push
les
jb
frstor
pop
cltd
stos
mov
loop
repz
out
dec
roll
add
xchg
les
sbb
add
mov
in
dec
xchg
sti
decl
outsb
repz
lods
and
sarb
push
les
pop
test
bound
cmc
pop
ds
push
dec
adc
loopne
jle
pop
xchg
in
or
mov
sbb
adc
movsb
jecxz
push
or
jmp
repnz
mov
or
sahf
adc
mov
add
lahf
xchg
sti
jno
push
popa
and
sbbb
out
and
in
mov
push
test
xchg
sbb
inc
out
mov
data16
enter
lret
pop
aaa
mov
mov
cmpsl
andb
scas
rol
xchg
cmpsl
je
adc
jb
ljmp
jns
sub
xchg
sub
mov
lods
movsb
jno
xor
adc
jnp
sti
mov
stos
jbe
lret
cmc
stos
fwait
imul
and
pushf
xor
and
arpl
ret
mov
dec
int
dec
adc
mov
fisubs
fsubrl
cld
push
gs
mov
mov
ja
inc
fucomip
andl
into
push
in
xchg
cmpb
push
sbb
push
jbe
add
std
pop
aas
fistpll
rcll
xor
push
inc
ret
xchg
bound
imul
int
stos
inc
fwait
inc
xchg
sbb
mov
sti
int3
lds
stos
das
fistl
fisubrl
sub
sti
scas
cltd
decl
xchg
inc
xor
decb
and
cmc
ds
cmp
push
shrl
adc
loopne
fadds
dec
pop
daa
mov
popf
stc
adc
inc
test
stc
mov
fwait
aas
ss
sti
rcrb
mov
scas
push
push
negl
cwtl
add
pop
cwtl
or
outsb
or
jl
add
loopne
shl
jl
cmpsl
inc
cltd
stos
mov
test
jecxz
cmpsb
xchg
cmp
add
imul
fs
incb
cltd
pop
mov
xlat
js
sub
dec
pop
andb
sub
xchg
data16
jns
mov
jns
fisttps
xor
jg
sub
and
push
dec
fdivs
push
xchg
inc
int
xchg
stc
test
push
and
out
js
pop
ffreep
mov
movsb
mov
aas
sahf
fstenv
cmp
std
pop
or
xchg
dec
fidivl
mov
jmp
pop
jg
aaa
fimuls
sbb
xor
inc
jb
inc
mov
lret
repz
cmp
xchg
push
dec
pop
xchg
mov
bound
pop
and
adc
lret
mov
cmp
ljmp
movsb
jg
xchg
lahf
cld
loop
xor
xchg
repnz
aam
lock
mov
push
and
jecxz
pushl
push
inc
inc
out
lods
adc
outsb
clc
xorl
pop
enter
shll
repnz
fs
hlt
in
shlb
fnsave
adc
mov
jge
mov
xor
loope
jp
mov
mov
cmpsb
jp
lahf
test
cmp
dec
mov
push
enter
mov
xor
stos
sahf
stos
das
fnsave
mov
test
push
fiaddl
sbb
mov
lret
pop
rep
mov
cs
setp
or
loopne
mov
dec
add
lea
fucomp
add
mov
xor
xchg
int
cli
sbb
mov
aas
pop
xchg
mov
cmc
sub
xlat
movsl
icebp
addr16
fldenv
setbe
pushf
or
int
sub
shlb
leave
jecxz
jo
add
jbe
sbb
fs
and
mov
mov
cmp
mov
mov
cmp
cs
out
std
sarb
std
pop
add
imul
push
adc
cwtl
add
pushf
cld
mov
sbb
cwtl
das
out
xor
shll
pop
out
ja
mov
stc
jecxz
sbb
mov
push
dec
out
xchg
test
push
outsl
call
outsb
jge
and
inc
ficoms
fbstp
scas
mov
subl
into
mov
adc
inc
pusha
jbe
xchg
xor
ljmp
negb
rorb
and
xchg
xchg
add
mov
lea
cwtl
stc
inc
or
inc
xchg
and
push
popf
rcll
insb
sub
push
outsb
repz
pop
mov
les
xor
mov
mov
mov
dec
test
fmuls
test
testb
test
lods
sbb
addr16
inc
cmp
in
sbb
pop
xor
lods
jmp
sti
push
xorl
in
or
xchg
insb
cmp
xor
out
jp
pop
pop
ljmp
add
mov
test
dec
in
and
ds
mov
imul
xchg
addb
ja
adc
std
mov
mov
test
inc
dec
cmp
cmc
int3
repz
in
pusha
lds
or
in
push
adcb
xor
sti
outsl
adc
xlat
repz
cmpsb
lods
jo
add
repnz
call
ds
or
sbb
sub
sbb
cmc
out
xchg
push
xchg
mov
xor
pop
push
jbe
mov
lcall
std
xchg
into
in
rclb
xchg
sub
jg
repnz
sub
mov
dec
movsb
pop
outsl
mov
push
sub
jl
mov
xchg
arpl
std
or
adc
movb
mov
out
add
pop
repz
aad
or
outsb
dec
out
xchg
sbb
test
and
jbe
cwtl
mov
dec
js
xchg
push
inc
lods
rclb
fnstcw
imul
push
xchg
inc
rcll
adc
bound
subb
xchg
pushf
and
stos
fwait
pop
daa
imul
aas
ljmp
pop
jmp
add
rclb
xor
stos
push
jge
por
or
jp
pop
test
jnp
cld
rcrl
inc
sbb
mov
jbe
jno
pop
pop
out
inc
subl
dec
test
adc
aam
mov
test
mov
jge
loope,pt
dec
dec
dec
push
lret
adc
ret
rcrl
arpl
mov
loopne
int3
pushf
into
in
popa
sahf
stos
lds
add
aam
cmp
in
or
cmp
sub
test
mov
mov
mov
or
add
rep
add
test
xor
cmp
mov
mov
sbb
and
call
add
cmpsl
and
outsl
cli
inc
xchg
jo
leave
dec
pusha
in
jp
ficoms
loopne
rcrl
or
add
sub
stos
adc
sbb
or
mov
push
addr16
addl
or
sub
mov
inc
lret
in
or
insl
popf
int
adc
mov
pop
mov
jg
jmp
popf
test
xchg
sbb
mov
in
inc
ret
inc
nop
adc
mov
pop
cmp
enter
std
fmul
mov
dec
mov
fmul
dec
xchg
push
jo
mov
cmp
pop
pop
inc
dec
fstl
mov
xorl
mov
cli
and
push
inc
mov
pop
das
popa
pop
stc
mov
jle
popf
mov
inc
sbb
mov
mov
pusha
push
arpl
ret
mov
outsl
pop
mov
cwtl
bnd
push
outsl
test
jno
mov
ficoms
hlt
mov
aas
mov
xor
jmp
call
or
xlat
add
jo
rcl
dec
xchg
push
ret
inc
dec
sbb
clc
loopne
sbb
dec
loopne
mov
fisubs
faddl
sbb
int
pop
testb
sahf
sti
and
or
sar
insb
jl
repnz
ljmp
dec
mov
or
xor
inc
mov
jp
stc
and
xchg
aaa
fs
inc
push
sahf
lods
das
icebp
adc
adc
dec
lock
scas
subl
xchg
pop
enter
mov
stc
cmp
xchg
sub
sahf
ss
dec
xchg
pop
cmp
arpl
out
sti
adc
lea
push
inc
cmc
cltd
aad
sub
adcl
lcall
int
pop
out
add
adc
pop
movsl
cmp
lods
cmpsb
int
push
les
jno
outsl
xchg
jae
push
ja
test
add
xchg
and
cmp
push
xchg
aam
ret
mov
pop
pop
push
adc
aas
adc
mov
lahf
ss
inc
or
pop
mov
outsl
cmp
loopne
dec
add
mov
stc
sbb
jnp
cld
sti
pop
or
test
mov
cltd
xchg
test
mov
xor
xor
sahf
inc
pushf
push
mov
or
daa
xchg
push
jbe
add
lods
fisubrs
pop
xchg
insb
aas
dec
cltd
xchg
and
loop
loop
xor
test
inc
movsb
dec
push
add
aaa
xchg
ja
outsb
pushl
or
dec
mov
hlt
jae
dec
push
xchg
mov
repnz
fcmovb
jnp
inc
cmp
test
sti
pop
je
adc
into
inc
inc
ss
out
sbb
stc
shlb
lea
push
mov
bnd
sub
daa
dec
xor
test
fwait
add
pusha
ss
int
pop
ljmp
in
xor
xchg
mov
pop
push
rcrb
sbb
test
xor
xchg
cltd
clc
lret
movsb
and
sbb
bound
xchg
mov
fadds
fsubrl
cmp
fsubl
fdivrs
pop
adc
mov
fwait
loopne
inc
or
imul
sub
fmull
insl
xchg
pop
insb
pop
imull
cmc
inc
inc
gs
repnz
mov
add
inc
push
push
mov
mov
fsubs
jl
test
jae
ss
push
je
mov
fs
aad
gs
outsl
call
mov
xchg
sbb
fmull
cmpsl
sbb
jmp
loope
std
add
lret
push
cmpsb
out
ficoml
sbb
or
sub
xor
cmp
les
ss
push
mov
mov
jae
pop
push
push
cmp
push
mov
fisttpll
xchg
dec
mov
pop
push
cmpsb
pop
outsb
mov
movsb
mov
mov
jecxz
push
xchg
stos
dec
mov
cli
in
push
sahf
and
fwait
pop
and
add
std
dec
pop
lea
mov
adc
cmp
dec
adc
cmpsb
xor
cmp
sbb
jecxz
arpl
or
aam
xchg
outsb
popa
cltd
test
leave
xlat
pop
outsb
std
push
incb
cli
mov
add
xorb
dec
inc
out
dec
cmc
push
cmp
push
ljmp
inc
rorl
fst
xor
je
out
adc
data16
push
data16
and
inc
pop
and
push
push
xor
lcall
data16
cwtl
lock
push
xchg
mov
mov
js
add
arpl
lods
lds
imulb
sarl
ret
sub
or
sarl
in
xor
nop
sub
test
ja
fs
mov
push
ljmp
mov
iret
fwait
sbb
int3
sti
mov
mov
fldl
nop
mov
ret
add
adc
add
lahf
jb
and
lods
xor
push
mov
mov
pop
cmp
mov
rcll
dec
aaa
mov
vpcmpeqw
pop
inc
pop
cmpsl
incl
cmp
or
adc
sbb
les
js
clc
ret
hlt
push
inc
cmp
testb
stos
dec
cmpsb
push
and
loop
or
sbb
aas
outsb
andl
cmp
call
push
jle
dec
inc
add
mov
lock
push
ret
in
out
arpl
in
lret
repnz
add
push
rcl
js
cwtl
mov
int
jp
or
mov
mov
insl
jbe
fwait
ret
dec
xchg
addl
mov
stos
fbstp
cmovns
push
pop
addr16
fucomi
test
lret
cld
mov
ficomps
sbb
xor
mov
fs
lds
push
lods
mov
mov
inc
daa
scas
out
mov
or
lahf
inc
sub
in
mov
add
mov
dec
std
cmpsl
sti
rcr
test
adc
and
ret
shlb
dec
aad
movsl
daa
push
lcall
sub
loop
js
ficompl
cwtl
jl
mov
jg
test
pop
or
mov
jl
or
rcll
xchg
mov
cltd
das
mov
pop
xor
out
push
mov
test
out
aam
xor
dec
xchg
cltd
je
cmp
sbb
sub
sbb
or
inc
sbb
inc
mov
cmpsb
ds
add
jo
outsl
mov
lock
lods
loope
adc
clc
add
jae
push
iret
push
cmp
jmp
orl
out
cwtl
fstl
pop
xchg
push
sbb
test
pop
xchg
inc
bound
cmp
xchg
push
lods
mov
dec
or
adc
push
outsb
pop
sbb
push
xor
or
lds
jb
jbe
jg
rep
jecxz
aaa
sbb
mov
cvtpi2ps
ret
fistpll
adcb
push
jp
push
out
loope
xchg
push
repnz
sbb
mov
sub
sbbb
push
div
adc
push
jp
imul
test
in
xor
ds
gs
faddl
jecxz
iret
sbb
xchg
mov
lcall
push
jne
sbb
mov
lret
fwait
sti
in
in
in
cltd
fnsave
inc
addr16
push
lcall
jmp
lahf
sub
mov
fs
movsl
paddd
outsl
xor
or
add
and
or
pop
xchg
pop
sub
xor
addr16
dec
popf
push
hlt
cmpsb
mov
add
or
dec
xor
lret
sub
nop
xchg
stos
rcll
mov
int3
sbb
lahf
push
inc
aas
iret
jmp
mov
cld
jbe
push
and
in
lds
inc
push
or
push
insb
jnp
shll
ret
or
into
xor
sbb
jle
pop
mov
mov
rclb
pop
or
mov
cmc
dec
pop
loope
adc
scas
call
cmc
mov
aad
in
movsb
addb
mov
adc
dec
into
xchg
dec
in
loope
stos
mov
movsl
test
mov
cs
je
mov
loop
inc
stos
xchg
inc
push
dec
adc
mov
loope
add
movsl
mov
xor
lret
addr16
xor
mov
and
mov
xchg
inc
jmp
sbb
lret
mov
pop
rcrb
sub
fabs
lret
sbb
cwtl
adc
mov
repz
rcl
push
aad
pop
dec
jp
adc
xchg
dec
repnz
repnz
push
sub
mov
movsl
ret
mov
pop
leave
stos
and
sti
or
mov
shrb
and
jg
loop
pusha
ss
lcall
xor
stos
jbe
sub
sbb
add
xlat
sbb
leave
jle
shrb
cmp
stos
jge
cltd
push
jns
fistl
cmp
imul
sbb
or
mov
sub
push
rcrb
int3
mov
add
mov
mov
push
mov
or
inc
jg
sbb
xchg
dec
pushf
or
xchg
sub
cmp
cmp
shrb
add
push
xor
ficomps
xchg
and
add
decl
rclb
dec
push
dec
clc
ds
je
xor
movsl
out
add
ss
andl
dec
mov
jge
cmpsb
ja
and
push
lods
fisttpl
pusha
idivl
push
sub
push
or
outsb
scas
test
jmp
mov
repz
inc
imul
mov
imul
push
div
mov
jns
mov
sbb
add
push
mov
jg
push
aam
das
and
dec
xor
mov
ret
xchg
dec
iret
add
jp
pushf
and
cmp
sbb
sbb
in
jmp
adc
add
cmpsl
jo
sbb
inc
pop
shr
ret
jle
xchg
and
icebp
insb
ljmp
and
pop
sarl
ret
cmp
xchg
cli
stos
inc
inc
dec
and
iret
aaa
imul
mov
mov
xchg
xor
add
repnz
cs
in
pop
lret
ss
lret
sbbb
jo
adc
xor
xchg
sbb
mov
push
hlt
mull
outsl
lock
pop
xor
mov
fidivl
and
inc
inc
push
mov
bound
or
cs
dec
pushw
mov
aas
jbe
pop
mov
xchg
add
repnz
pushf
bnd
mov
ljmp
outsb
cmpsb
add
jl
addl
movsl
sbbl
loope
addl
lock
push
or
pop
pop
inc
fiaddl
outsb
stc
push
push
shrl
insl
inc
filds
lock
pop
fsubl
mov
mov
xor
ds
cmc
cmpsl
in
in
xchg
jo
mov
fwait
or
popf
pop
ret
or
xchg
jle
loop
fcoml
mov
bound
pop
shll
mov
test
repnz
int
xchg
cs
je
popf
push
popf
pop
repz
or
in
mov
pop
xchg
dec
aaa
xor
repnz
stos
mov
mov
dec
mov
mov
mov
mov
inc
pop
and
dec
fsubr
jge
xlat
push
xchg
addr16
iret
je
cltd
aad
fcmovne
fcoms
mov
sbb
xchg
mov
mov
adc
pop
cmpsl
pop
fisubrl
or
gs
push
test
rcrb
jmp
les
in
inc
add
fucomip
xchg
scas
inc
inc
dec
pop
sbbb
mov
push
or
dec
mov
icebp
std
mov
cmp
fiaddl
mov
adc
pop
out
push
hlt
outsl
test
cmpsl
ds
leave
into
mov
mov
negl
add
xor
stos
fbld
xchg
and
jae
iret
jbe
sub
cmp
push
jmp
push
pop
jnp
call
enter
pop
sbb
inc
pop
push
cmp
repz
mov
jl
popa
xlat
jmp
adc
popf
sub
pop
lods
mov
dec
sub
or
xlat
movsl
insl
jo
dec
jnp
shll
lahf
push
sbb
jne
push
adc
and
push
in
and
sub
xor
jmp
and
subb
scas
inc
insb
adc
clc
sbb
mov
cwtl
andl
sub
hlt
adc
int3
sub
jo
jbe
enter
test
jecxz
test
insl
fldenv
and
pop
dec
or
mov
adc
jl
push
lea
lock
push
lret
mov
and
ret
xor
xor
and
mov
mov
add
push
je
jns
mov
pop
out
std
jge
mov
xor
dec
int
dec
cmpb
outsb
fnstcw
or
sub
in
sub
sbb
dec
in
push
mov
dec
rol
loop
in
das
push
add
pop
shrb
ret
xchg
aad
dec
or
incl
push
les
mov
push
jae
mov
jbe
icebp
cs
stc
bound
repz
jle
ljmp
adc
lcall
imull
push
and
andb
mov
gs
cmpsl
mov
and
stc
cmp
cmp
mov
dec
mov
mov
mov
mov
jo
xor
andb
jae
jne
inc
insb
cmc
push
jno
iret
xchg
subl
xor
ja
cmp
cmp
cwtl
in
xorl
mov
mov
mov
insl
aam
mov
dec
ret
fsub
ja
int
addr16
cmpsb
cli
jne
addl
xchg
dec
leave
fldt
je
sub
mov
inc
leave
dec
xor
sub
pop
cmc
sti
pop
adc
jbe
fidivrs
xchg
addr16
fisttpl
sbb
push
adc
dec
stc
xchg
cmpsl
addb
xchg
clc
jb
jb
pop
sub
in
or
int3
xchg
popa
out
test
xchg
notb
mov
fildll
ds
fidivrs
mov
into
movsl
sbb
fidivrs
shll
daa
loope
notb
loope
push
push
sub
insl
fmull
xor
xor
mov
imul
cmp
cmp
adc
lds
pushf
pop
cmp
lods
or
push
inc
into
sub
jno
lods
clc
pusha
stos
cmp
inc
lret
sub
jbe
add
xor
test
outsb
das
aaa
add
sub
mov
jg
pop
xchg
mov
mov
inc
movsl
jb
repz
dec
cmpsl
ret
jnp
jns
mov
fwait
push
jae
rorb
imul
inc
pusha
insl
data16
dec
add
jno
ret
mov
shll
outsl
cmp
out
xchg
sti
sub
ret
push
daa
fldcw
jne
pop
sub
inc
mov
fidivrs
in
into
xor
notl
add
mov
push
call
mov
sahf
or
into
adc
pusha
je
shl
dec
stos
fnstenv
rolb
lods
and
pop
fistpl
xor
inc
decl
loope
popf
mov
std
xchg
or
mov
add
sub
pop
cmp
inc
jns
pop
push
jge
or
das
cld
in
sbb
cmp
xorb
xor
pop
jmp
sub
loope
filds
mov
pusha
idivl
dec
push
mov
fsubrs
mov
movsb
fildll
mov
rorb
cmpsb
sub
and
sub
ja
dec
pop
adc
ficoms
inc
negl
mov
test
pop
movsl
jp
xlat
inc
stos
mov
mov
jne
xor
mov
xor
jecxz
cmp
scas
lds
inc
test
clc
or
sub
push
mov
inc
mov
orb
mov
stos
lds
mov
into
popa
mov
mov
mov
dec
dec
addr16
cmp
ss
rcrl
popa
mov
inc
pop
xchg
ror
cmpsl
bound
icebp
cwtl
negl
sbb
movsb
inc
mov
and
repz
dec
add
or
push
pop
xchg
imul
mov
pushf
and
jne
scas
xchg
test
inc
notl
js
jae
sbb
xor
sub
mov
hlt
mov
shr
std
sub
pop
test
lret
inc
pop
cwtl
popa
adc
call
jns
jb
xor
mov
sbb
popa
aad
inc
mov
arpl
fisubs
adc
or
pop
ds
sbb
or
mov
xchg
daa
pop
test
mov
jbe
shrb
mov
cmp
pop
cmpsb
and
adc
jle
adc
aaa
cmp
popf
adc
inc
and
call
repz
addr16
aaa
lock
movsl
in
inc
repz
mov
inc
xor
add
jmp
int
cmp
fs
lret
lock
pop
push
sbb
in
xor
ret
fwait
out
xchg
in
push
mov
fucompp
sahf
iret
jbe
mov
adc
shll
adc
scas
xchg
jb
jbe
in
std
add
into
out
mov
jb
fisubl
sub
xlat
adc
in
mov
int3
dec
cmp
scas
es
jno
lahf
sub
ret
xor
fcmovnb
shrl
les
jmp
sbb
popf
cs
jbe
push
fldt
or
xchg
sti
and
shll
add
add
xchg
lret
push
mov
pop
leave
in
push
mov
shlb
push
mov
dec
mov
and
pop
xchg
sub
dec
sub
vmulpd
fs
dec
push
cwtl
inc
dec
and
idivl
loopne
xchg
popf
mov
aaa
fmull
repnz
pop
cmp
sub
pop
push
dec
aad
push
fwait
popa
js
adc
int3
add
in
mov
jb
daa
lcall
xor
sub
and
pop
sahf
adcl
icebp
out
stos
gs
lods
dec
jbe
pop
imulb
imul
inc
movsb
js
jns
mov
and
sbb
ja
stc
rcl
sbb
bound
call
divl
xchg
lcall
cmp
jg
mov
pop
dec
jl
daa
std
aas
faddl
pop
outsb
mov
mov
xor
push
mov
lret
repnz
inc
stos
in
jmp
int
clc
dec
adc
sub
ljmp
adcb
adc
inc
sub
imul
out
aad
push
addl
inc
xor
lea
adc
add
adc
dec
arpl
sub
in
jge
mov
inc
daa
inc
in
outsb
daa
pop
jo
mov
jg
ss
stos
fcmovbe
imul
lds
int
mov
and
sbb
pop
dec
nop
push
sub
cs
push
lcall
int
push
sbb
mov
sbb
cmpl
repz
dec
cmpsb
ljmp
sbb
xchg
popa
jl
xor
add
decl
push
sahf
stos
mov
jbe
xor
testl
and
out
push
inc
mov
cmp
fldenv
arpl
mov
hlt
inc
dec
dec
mov
loopne
xor
mov
mov
push
ds
lods
push
add
sub
scas
mov
mov
cs
decl
xchg
js
mov
or
jmp
sbb
cltd
pop
jne
lret
cmp
sbb
cmpsl
lret
popf
xchg
dec
inc
test
hlt
xchg
test
cmp
lock
fs
xor
push
cmc
xchg
pop
into
gs
in
aam
xchg
cmp
ret
cmp
loope
mov
sub
push
test
dec
shll
xchg
adc
daa
cs
push
push
pop
or
daa
adc
sub
dec
lods
jg
shrb
push
pop
icebp
mov
push
outsl
mov
xchg
add
jle
jg
pusha
test
leave
test
lods
int
dec
jnp
add
xor
jns
mov
mov
cmp
gs
sbbb
repz
push
sub
dec
sahf
mov
das
out
rcr
push
cli
adc
pop
scas
mov
cmp
mov
leave
mov
pop
scas
cwtl
add
enter
mov
clc
mov
or
pop
mov
pop
pop
jnp
sbb
ret
cmpsb
mov
orb
mov
movsb
xor
or
xor
pop
sub
lds
lods
movl
test
xor
sbb
dec
lock
fsubrl
add
std
xchg
test
insb
xchg
lods
andl
pop
xlat
repz
clc
fcomi
cmp
mov
in
rcrb
push
sub
or
or
mov
negb
xchg
pop
and
jge
add
add
arpl
lcall
inc
jl
subl
pop
jp
pop
lods
mov
out
xchg
push
int
ret
mov
xchg
out
and
add
and
jmp
lea
mov
pop
sub
lret
inc
and
and
insl
or
test
dec
push
inc
fdivr
add
fs
pusha
and
sarb
not
outsb
sub
insb
jg
into
lods
inc
add
pusha
sti
push
movsb
mov
or
mov
jg
sti
dec
int
insl
sbbb
jb
fimull
cld
jns
add
mov
ret
inc
leave
shlb
imul
sbb
out
mov
int3
dec
xor
push
inc
fimuls
cs
loop
test
cmp
inc
mov
mov
dec
cs
dec
pushf
push
dec
nop
out
pop
jnp
mov
push
fcmovb
sbb
vcvtps2dq
sbb
dec
fistps
fisubrl
push
gs
cs
stc
pop
gs
mov
sbb
xor
scas
cmpsl
xor
add
push
jmp
sub
imul
je
fmuls
out
mov
or
push
sbb
scas
out
xor
enter
test
imul
or
outsb
sub
jg
jne
pop
ljmp
inc
stos
aas
add
test
xor
popa
sti
and
std
lcall
cmpsl
cli
sbb
shlb
xchg
jge
inc
mov
push
mov
pop
out
fwait
lods
xchg
push
xor
cmp
cs
or
out
inc
or
xchg
arpl
arpl
inc
xor
xlat
aaa
push
mov
mov
dec
mov
cwtl
xchg
ficomps
jns
xchg
popl
lock
call
add
sub
cmc
insb
adc
jno
sarl
int
clc
clc
aaa
inc
lahf
lods
mov
and
xchg
lahf
daa
jne
pop
or
orb
pop
mov
out
sub
add
gs
adcl
add
stc
xchg
xor
and
mov
mov
push
sarl
push
xchg
into
and
push
nop
ficoms
sub
dec
idivb
sub
and
lods
and
popf
sbb
jae
sub
sbbb
pop
cmp
xchg
scas
rcrl
cmc
movsl
dec
dec
lods
cld
stos
shl
aaa
cmp
jp
bound
xchg
in
lcall
cmp
fnstsw
inc
inc
cmp
lods
cmc
cmpsl
pop
hlt
mov
scas
call
je
sahf
hlt
call
sub
jno
sbb
and
call
int3
jne
lcall
rcrb
mov
mov
or
and
nop
cld
cmp
jo
mov
and
mov
mov
pop
mov
mov
push
push
dec
into
cmpsl
add
mov
mov
cwtl
mov
out
push
add
or
movsb
pop
mov
and
xchg
cmpsl
fs
aam
jbe
mov
rolb
xlat
out
or
aaa
inc
scas
lcall
push
cmp
push
add
into
loop
sub
push
pop
js
add
bound
test
test
out
add
popa
cli
sub
push
out
test
fs
inc
cmc
pop
mov
out
out
pop
mov
mov
jp
push
jmp
or
mov
out
rcrl
or
or
xlat
movsb
push
mov
cwtl
xchg
cmp
clc
outsb
shr
xchg
lods
mov
and
jl
jno
sahf
or
push
shrl
aad
pop
jne
inc
fdivp
inc
inc
adc
scas
xor
adc
fisttpl
cmp
scas
cmpl
ds
pop
out
lcall
pop
out
push
int
loopne
daa
pop
icebp
cwtl
xchg
mov
sub
leave
add
cli
outsl
cmp
sbb
or
fwait
add
lea
mov
lods
jle
outsb
xchg
imul
xchg
push
jb
or
hlt
mov
sub
xor
std
push
or
stos
ljmp
inc
xor
xor
jns
adc
cmp
outsl
mov
jmp
imul
stc
icebp
sub
lods
xchg
jge
cmp
or
mov
ljmp
insl
fistl
jne
xor
sbb
cmc
xchg
dec
lock
add
and
out
pop
test
mov
push
sbb
popf
mov
and
cmp
negb
cmp
pop
xor
outsl
cmpb
leave
jg
clc
add
jnp
stos
xchg
xchg
insb
mov
xchg
adc
dec
cmc
lahf
xor
aad
dec
mov
adc
fldenv
mov
aad
jb
out
sub
jp
mov
scas
outsb
clc
into
push
jae
inc
in
lods
faddl
inc
push
mov
test
xor
iret
xchg
jo
jle
and
mov
sbb
xor
ds
adc
sub
mulb
daa
push
cmpsl
dec
or
jmp
iret
in
lods
and
mov
inc
adc
mov
stc
sub
fildl
adc
xor
loope
stc
fwait
or
js,pt
cmp
pop
sub
rcrb
outsl
stos
jge,pt
pop
cmp
out
dec
pushf
adc
sub
in
mulb
sbb
sub
pop
mov
sahf
or
pop
dec
sub
imul
icebp
cmp
pcmpgtb
cmp
in
pop
cmp
pop
mov
lods
mov
jge
cmc
mov
mov
pop
loope
inc
pop
lds
mov
sub
pop
je
insb
cvtps2pd
push
movsb
mov
cmp
push
inc
and
int
outsl
mov
push
pop
xlat
test
mov
mov
rol
pop
mov
ret
adc
xor
repnz
adc
jno
andb
mov
inc
cmpsl
cmp
jg
inc
loopne
in
popa
cltd
jo
cli
ja
imul
ds
jae
sub
fsubrl
add
ljmp
and
repz
shll
fdivs
sbb
outsb
imul
test
or
mov
adcb
add
inc
xchg
mov
fs
addl
jb
cmpl
xor
scas
mov
push
ljmp
pushf
repz
inc
mov
jl
clc
iret
pop
lahf
out
dec
hlt
daa
pop
lods
push
mov
std
jnp
vaddps
andl
mov
jle
pop
ja
dec
outsb
out
rorl
mov
mov
imul
bound
ja
popf
sub
mov
gs
mov
ljmp
aaa
pop
mov
sahf
clc
inc
sub
stc
aad
lcall
shlb
push
add
xor
lcall
out
faddl
mov
inc
sub
pop
mov
xor
popa
outsb
add
and
dec
xchg
popf
mov
xchg
lds
sbb
div
mov
cmp
add
xor
fnstsw
jp
ds
adc
roll
xor
gs
push
xor
in
rcrl
packssdw
mov
fsubl
push
push
out
ja
call
int3
outsw
push
pop
add
cmpsb
mov
lret
daa
pop
xor
idiv
xchg
jg
rcll
aam
sbb
jp
or
or
xchg
in
lret
lods
xor
xchg
xlat
xchg
push
mov
mov
mov
push
daa
out
add
inc
stc
jp
mov
push
dec
mov
push
repnz
mov
sub
shrb
pop
sub
cmpsl
and
stos
ds
outsb
inc
push
and
imul
jae
das
xor
adc
out
mov
mov
mov
popa
cs
rcrb
sbb
lds
into
and
addb
lret
fidivl
lcall
sbb
ljmp
loope
mov
notb
gs
je
mov
adc
xor
in
jnp
loopne
mov
xor
pop
popf
push
sbb
and
maxps
lods
sbb
cwtl
dec
or
fwait
cmp
mull
jne
sub
adcl
cmpsb
pop
out
xchg
out
mov
adc
ffreep
pop
sub
mov
dec
jecxz
jle
add
loop
cmp
enter
pop
test
test
test
les
shl
lahf
imul
cmp
pop
jecxz
or
sahf
cli
xchg
rolb
jp
mov
sub
sbb
mov
mov
push
iret
add
test
sub
pop
mov
dec
mov
fld
sbb
and
mov
dec
mov
subl
ja
std
and
nop
clc
inc
dec
mov
call
adc
dec
repz
add
fsub
jp
mov
cwtl
fs
mov
adc
scas
mov
cmpsl
adc
mov
sub
xchg
shrb
sub
xor
loop
and
dec
push
cwtl
subl
mov
lds
clc
push
push
xchg
sub
or
xor
sub
pop
sub
ja
adcl
adc
xchg
dec
xlat
test
shll
xor
or
sub
jp
sarl
mov
xchg
pop
add
cmpsb
dec
xchg
add
dec
mov
mov
inc
shlb
sbbl
sub
dec
pop
cmp
fsubs
pop
adc
dec
stos
push
mov
fnstenv
add
scas
and
fwait
sti
jns
bound
cwtl
push
inc
pop
adc
stos
popa
push
push
lret
push
ret
sbb
push
jecxz
fwait
arpl
jmp
xlat
repz
out
orb
gs
inc
mov
dec
shrl
roll
hlt
loope
pop
pushf
std
adc
sbb
mov
frstor
mov
add
out
cmpsl
and
int3
lahf
into
dec
jle
mov
cltd
and
inc
scas
ret
lods
icebp
mov
out
mov
inc
dec
decl
cmp
push
in
insb
push
cwtl
stos
lock
mov
ja
and
aas
mov
inc
movb
cld
mov
fadds
xor
je
in
jecxz
inc
dec
sbbb
fcmovbe
cmpsl
add
dec
repnz
mov
inc
and
ljmp
jno
xchg
clc
inc
imul
inc
loope
sbb
idiv
inc
repz
xchg
cs
sti
xchg
dec
push
test
mov
adc
in
mov
fdivs
xlat
pop
cmp
xchg
and
clc
mov
mov
loope
inc
call
and
mov
mov
hlt
dec
imul
fmulp
and
mov
add
xchg
arpl
rclb
push
inc
cmp
mov
inc
jne
out
int
pop
in
or
push
ljmp
push
inc
imul
push
mov
outsl
push
xchg
adc
inc
adcl
mov
mov
jb
jbe
sbb
je
mov
data16
loope
outsb
push
pop
int3
arpl
popf
cmc
sbb
ret
pop
es
xor
mov
test
loope
sti
daa
cmp
lret
mov
mov
les
in
leave
loopne
sbb
mov
cltd
jae
inc
dec
hlt
lcall
push
and
pop
xchg
push
xchg
aas
pop
xor
jns
daa
iret
dec
push
clc
arpl
xor
rol
cmpsb
push
sub
sbb
jne
mov
in
sbb
mov
sbb
popf
xchg
xor
push
fs
mov
jp
pusha
jg
mov
xchg
mov
dec
imul
push
dec
push
jae
jns
scas
dec
sbb
dec
sbb
jle
jnp
pop
mov
mov
push
shr
lods
xchg
lahf
xor
ss
in
test
mov
fisttpll
repz
lds
repz
lahf
adc
pop
push
mov
xchg
jp
push
push
lods
adc
push
subb
cmp
js
insl
cmp
rcl
cmp
outsb
jns
imul
cmp
sbb
scas
push
dec
cmp
das
aad
sbb
and
insb
mov
inc
inc
sbb
sbb
xchg
pop
jg
jecxz,pt
pop
fcom
cli
aam
dec
pop
hlt
jnp
sbb
jnp
xchg
insb
xor
jl
adc
mov
pop
xor
outsl
pop
or
enter
mov
fidivrs
bound
mov
rcrb
ja
push
mov
push
in
xchg
gs
nop
int3
xchg
lea
js
dec
shrb
imul
or
cwtl
aam
mov
jle
xor
cmp
stc
adc
mov
mov
or
sub
data16
push
cmp
bound
push
inc
jle
repz
outsb
cmp
jle
nop/reserved
arpl
cli
popf
in
pcmpeqd
and
push
xlat
std
addr16
push
push
inc
mov
cmp
mov
idivl
sub
push
sti
inc
lods
cmp
xchg
sbb
imul
fsubrl
xchg
pop
sub
xchg
jp
sbb
fidivs
xchg
mov
stos
mov
pusha
cmc
or
mov
insb
cmp
sub
mov
mov
aaa
insl
dec
pop
fwait
adc
addb
mov
ja
jmp
push
push
shlb
popa
mov
loopne
mov
arpl
icebp
cwtl
js,pn
cmp
sbb
mov
cmp
cwtl
and
mov
jle
and
push
dec
je
pop
sub
mov
popa
jo
sub
add
scas
out
mov
loop
cmp
inc
add
mov
inc
scas
add
stos
dec
gs
icebp
mov
fstpt
jb
add
mov
cwtl
cld
jp
dec
pop
or
and
cmp
sbbl
popf
jns
mov
cli
out
stos
inc
xchg
test
push
mov
add
mov
adcl
dec
imul
popf
sub
aad
and
xchg
jns
test
xchg
pop
fucomp
mov
push
outsl
aam
cmp
popa
inc
cmp
adc
sub
sub
lods
mov
fucomip
icebp
shrl
mov
call
scas
mov
dec
cmp
lods
lahf
ss
outsl
xor
mov
sub
lock
daa
aad
rclb
push
insb
inc
sbb
das
cmp
outsl
pop
pop
sahf
push
adcb
pop
and
subl
std
sbb
dec
push
insb
jp
ret
sbb
mov
push
pop
or
in
adcl
mov
mov
mov
push
sbb
jns
cmp
inc
xor
std
int
xchg
xchg
mov
mov
jge
cmpsb
mov
add
ljmp
addb
mov
jle
inc
bound
adc
mov
mov
sub
push
fldt
les
lret
inc
fcmovnbe
adc
mulb
pop
lret
sbb
test
pushf
or
push
lcall
loope
decl
mov
loopne
or
popa
add
mov
push
mov
idiv
push
test
sbb
jge
sbb
dec
push
mov
cmpsb
adc
xor
fildll
nop
arpl
movsl
nop
test
sbb
or
addr16
cli
sbb
outsb
mov
xchg
or
daa
out
and
inc
xchg
aam
sahf
out
push
fildll
dec
jecxz
imul
mov
leave
loope
pusha
js
gs
pop
xchg
mov
mov
pop
cmpsb
cmp
jns
fimuls
xchg
jns
ret
cmpsb
sahf
or
mov
outsb
in
lret
in
inc
je
jp
lods
ss
pop
adc
xchg
icebp
scas
cmp
dec
cmp
pop
ret
cmp
jmp
mov
push
ss
enter
ficoms
sbb
mov
loope
jbe
aam
push
das
daa
ret
scas
ret
sarb
push
mov
test
cmp
xchg
mov
jecxz
mov
xchg
loopne
sahf
or
adc
mov
mov
ss
arpl
sub
movsl
mov
adcl
pop
pop
or
mov
jo
and
inc
dec
cmpsl
mov
sub
jecxz
in
std
and
jg
jge
aas
dec
inc
sub
push
xchg
imul
aaa
and
mov
push
sub
aam
dec
fsubr
sti
pop
cmpsl
mov
in
ss
imul
or
hlt
cmp
mov
loope
pmulhw
or
jnp
loope
pushf
dec
jge
mov
hlt
pop
sbb
or
into
mov
jge
push
pop
dec
out
dec
push
sbb
test
inc
into
aad
stos
insb
loope
dec
insl
mov
cmp
movsl
push
xchg
adc
clc
dec
out
cmp
push
inc
cli
fildll
mov
add
mov
ljmp
jae
jnp
cmp
lods
push
idivb
sub
adc
or
xchg
cmp
inc
insl
sbb
enter
lea
add
and
mov
orl
ret
add
cwtl
adc
mov
pop
dec
bound
insb
sub
mov
mov
add
es
hlt
push
inc
cmp
mov
xor
lea
arpl
loope
add
inc
es
or
cmp
dec
jo
cli
sub
sti
fwait
xchg
jmp
pop
xlat
cmp
ret
xchg
sub
xor
lods
mov
movsl
push
and
jge
dec
pop
push
push
cmpsb
xlat
mov
insb
cmp
jbe
push
add
xchg
sahf
dec
sahf
shrl
in
das
addr16
test
adc
adc
enter
lcall
int
or
cmpsb
add
imul
pop
mov
data16
ss
push
inc
jecxz
push
inc
data16
subl
nop
fs
iret
jg
jle
pop
ja
and
mov
cli
mull
dec
mov
adc
popf
sbb
mov
pop
jle
push
fildll
call
mov
sahf
mov
mov
and
or
add
cltd
in
out
and
mov
in
push
pop
ficomps
cmp
dec
in
iret
mov
cmp
imul
gs
xchg
arpl
aaa
push
jnp
sub
jns
mov
inc
sti
bound
popf
data16
mov
or
adc
loop
cmpsb
lock
mov
fstl
mov
shlb
cwtl
aad
or
mov
scas
cs
pop
sarb
push
mov
push
out
popf
int3
mov
lods
rolb
mov
adc
lret
fcomps
rclb
repnz
js
lret
cs
cmpsl
aam
mov
mov
dec
inc
push
out
call
je
call
inc
jne
cmp
mov
mov
sbbb
arpl
cmp
sbb
jg
xchg
adc
jb
inc
test
out
xor
or
cmpsl
in
mov
sub
inc
es
out
cmc
pop
cmpsl
test
sbb
dec
into
mov
adc
das
push
jbe
pop
pop
flds
mov
adc
ljmp
pushf
ss
bound
sub
mov
or
lock
sbb
and
lds
add
dec
imulb
aad
fwait
loop
shl
xor
mov
push
ret
pop
in
add
or
dec
sbb
dec
insb
aam
cmc
jnp
dec
push
out
and
sub
movsb
cmc
stos
ja
push
mov
fimull
mov
push
addr16
push
mov
js
inc
lea
or
jle
mov
in
pop
mov
shll
fsub
dec
dec
rcrl
pop
mov
test
lods
cmc
clc
add
popa
shrl
popa
lds
jb
dec
sbb
xchg
test
or
outsb
cmc
lret
movsb
inc
cmpb
sbb
push
xor
in
imul
addr16
mov
shlb
sbb
js
sahf
push
pop
cmp
dec
loope
ror
popa
ret
pushf
out
mov
inc
cmp
dec
and
iret
xor
movsb
mov
mov
cli
mov
bound
add
and
fisubrl
xchg
out
mov
pause
and
and
test
lahf
jns
popf
xor
xlat
sbb
add
lods
adc
jp
mov
push
fs
aas
push
sbb
aaa
fs
push
cltd
shll
push
hlt
outsl
fnstenv
mov
or
fimuls
pusha
and
cmp
inc
xchg
bound
and
cwtl
or
scas
jle
sub
cltd
jecxz
je
jecxz
fimuls
cwtl
push
xchg
and
add
pop
add
jp
sub
scas
xchg
mov
cmp
out
push
imul
loope
gs
pop
movsl
lock
andb
js
add
pusha
inc
xchg
dec
iret
cmp
popa
sbb
xchg
fwait
jg
inc
repz
aaa
rcl
lods
ret
pop
lcall
mov
out
adc
stos
lock
add
nop
std
or
inc
push
bound
adc
cmc
sbb
out
sahf
cmp
xchg
lock
sahf
push
jb
lds
enter
aaa
mov
pop
imul
ret
es
in
xor
repz
jle
or
sub
lahf
mov
pop
imul
mov
stos
jmp
and
pop
iret
out
sti
decb
jg
call
xchg
outsb
sbb
lock
pop
mov
mov
into
ljmp
xchg
adc
shll
mov
shl
or
test
xor
push
and
push
lods
mov
jle
jp
negl
test
daa
pop
cld
cltd
xor
mov
pop
stc
int3
shl
mov
cmpsb
add
pop
sub
fbstp
jl
cmpsl
repnz
and
outsb
push
jp
enter
adc
sub
or
pop
subl
xor
dec
add
cmp
mov
addl
scas
xchg
or
std
lock
sahf
mov
adc
call
ficompl
cmp
movsb
lds
lods
mov
mov
push
js
nop
dec
xchg
mov
add
push
mov
std
mov
xlat
mov
ss
mov
aam
ja
push
int
or
pusha
or
xor
aam
test
ljmp
push
dec
loopne
or
stc
dec
aaa
pop
out
cmp
xlat
iret
jbe
push
jge
mov
repz
cmp
add
aaa
xor
andb
clc
sub
pop
mov
dec
popf
ljmp
loope
mov
cmp
lds
mov
and
and
je
aas
mov
xchg
add
jnp
sub
test
fstpl
aas
cld
cli
test
push
push
or
sbb
lret
mov
sub
pop
and
inc
inc
adc
jle
mov
jno
jo
fnsave
push
jecxz
aas
sahf
stos
mov
inc
out
hlt
dec
jecxz
bswap
push
outsl
or
inc
rcrl
arpl
pop
dec
popf
jno
sbb
aad
iret
mov
fs
sbb
inc
andb
cli
mov
daa
lods
ret
mov
nop
daa
xlat
mov
mov
sbb
xor
dec
pop
cmc
mov
out
fucom
sbb
dec
mov
stos
xor
xor
lret
lcall
mov
shrl
mov
out
dec
jno
jle
inc
and
rorl
push
xchg
outsl
jnp
sti
shlb
mov
inc
lods
mov
push
jno
push
jp
xchg
cltd
sbb
xchg
jb
loope
mov
mov
cmp
sbb
setns
xor
push
clc
cmp
jp
outsb
lea
add
mov
mov
enter
adc
les
shrb
dec
dec
hlt
outsl
add
stc
dec
addl
cli
rorl
lods
sub
sbb
vaddsubps
pop
jo
push
cwtl
out
push
jl
mov
daa
and
pop
call
push
push
popf
sahf
xor
int3
or
mov
hlt
lret
add
jge
in
sub
pop
pop
mov
sub
mov
sbb
inc
fldt
ljmp
mov
push
mov
arpl
pushl
xor
jne
aad
jae
push
dec
iret
jecxz
sub
scas
divl
jle
fwait
pushf
pop
icebp
xchg
adcl
jno
pop
aaa
push
es
dec
or
ss
and
pop
jb
std
cmpsb
repnz
loopne
and
cld
lcall
clc
sahf
loop
cli
pushf
shl
jno
add
jo
lcall
and
or
scas
ljmp
jmp
mov
bound
aas
push
daa
stos
sbb
loopne
pop
jbe
mov
in
in
inc
pop
inc
jecxz
gs
int
push
sbbb
insb
mov
lock
fidivrs
or
adc
push
into
and
into
mov
fiadds
inc
ja
mov
lcall
cmp
daa
pusha
stos
pop
add
ror
or
or
aad
cltd
mov
pop
jo
cmpsl
data16
sub
in
mov
int3
mov
aad
stos
dec
dec
mov
xorb
jecxz
mov
mov
nop
push
ja
push
cmp
push
outsl
je
adc
add
and
mov
leave
mov
dec
jge
cmpl
jnp
test
push
out
lds
popf
push
or
popf
arpl
push
add
xor
aam
adc
cmp
popa
cmp
push
incb
xor
mov
mov
pop
push
lds
adc
pop
data16
movsl
adc
test
mov
mov
mov
sbb
shrb
insl
cld
dec
ret
mov
sbb
and
xchg
movsb
fidivl
lcall
dec
sub
dec
pop
out
xchg
jbe
sbb
push
sarl
std
punpckhwd
xchg
sub
mov
daa
sub
shrb
pop
ja
push
into
data16
mov
ret
inc
int
push
out
xor
pop
push
mov
movsb
enter
out
cmp
add
or
add
std
aad
das
hlt
repnz
push
lea
sub
mov
aaa
cmp
addr16
test
lea
xchg
pop
lea
xor
push
xchg
dec
stos
inc
repz
popf
adc
movsl
enter
fcoml
mov
shll
xchg
mov
out
cmc
adc
add
cmp
sub
shrl
lds
xchg
stc
jp
scas
xchg
lea
sti
bound
lea
mov
fwait
mov
dec
add
add
xchg
and
stos
inc
lods
ljmp
pushf
scas
and
inc
sub
mov
lods
imul
cmp
out
rolb
push
rorl
in
and
adc
jae
jmp
and
decl
inc
fdivs
fistl
and
pop
mov
xchg
shll
sbb
adcl
cld
cmp
jnp
push
movsl
js
shl
js
add
fs
xchg
xor
test
into
xor
xchg
jnp
shr
xor
mov
leave
mov
adc
or
and
dec
lock
dec
ss
push
mov
iret
push
sahf
idivl
imul
push
arpl
push
scas
test
push
or
andb
cld
lods
mov
cmp
loop
or
repz
nop
pop
lea
add
cmp
push
cli
inc
inc
dec
jg
ficomps
push
cmp
movsb
out
sub
sbb
push
dec
std
xchg
cld
clc
adc
inc
das
dec
mov
dec
in
rolb
loopne
sbb
mov
inc
cmp
test
pop
mov
idivb
xor
sub
cltd
je
lret
mov
shl
fists
mov
and
jne
dec
imul
mulb
shll
hlt
and
inc
js
clc
inc
pusha
imul
in
jne
sub
xchg
outsl
cmp
jge
shlb
call
xchg
aas
ljmp
movsl
lret
test
sbb
add
or
enter
ret
pop
mov
cwtl
fstps
pop
int3
test
jbe
cmp
stos
addr16
pushf
out
into
cmc
jnp
mov
jle
aaa
rcll
cs
insb
dec
fcompp
mov
mov
out
and
mov
call
jecxz
cwtl
fadd
dec
mov
les
mov
jp
fimuls
and
js
lcall
fdivrs
bound
mov
push
sub
stos
mov
movsl
inc
add
mov
inc
xchg
lods
push
jno
popf
sahf
clc
xchg
in
add
dec
jecxz
mov
insb
sub
push
fnstsw
cmp
push
test
push
js
fwait
lcall
dec
mov
push
mov
mov
mov
sbb
call
jnp
fidivl
fwait
scas
fs
fdiv
jne
jmp
je
pop
mov
out
mov
cld
cmp
rcll
enter
std
in
mov
push
mov
ja
pop
lock
sbb
inc
movsb
repnz
pop
add
mov
nop
sti
ret
pop
mov
roll
sub
adc
insl
and
fidivl
sub
lock
sub
sahf
pop
lds
jns
push
and
aam
stc
cwtl
cmp
aaa
pop
sub
loopne
daa
mov
into
in
bound
xchg
cmp
aam
jg
jb
dec
and
mov
lret
xor
lahf
mull
lret
mov
fcmovne
and
mov
mov
stos
lods
mov
mov
fcoms
mov
dec
lret
pop
push
sbb
sbb
les
leave
pusha
cmp
out
or
inc
push
std
mov
xor
jge,pn
and
pop
and
inc
test
inc
inc
scas
in
int
leave
rcr
jg
push
inc
roll
and
aaa
and
out
pushf
pop
test
mov
or
mov
fcoml
pop
xor
scas
icebp
movsl
adcb
data16
aam
cmp
sbb
imul
add
nop
sub
lahf
add
maxps
jl
mov
cmp
jno
shrb
imul
cmc
jnp
xor
mov
push
inc
imul
and
xchg
adc
sub
mov
pop
push
stos
cmp
data16
sbb
nop
sub
jae
or
pop
sub
ljmp
lahf
add
xchg
push
mov
adc
imul
aaa
mov
sub
jmp
pop
cmp
lahf
rolb
xchg
mov
inc
in
add
shll
add
lret
popa
iret
loope
push
pusha
fildl
inc
push
jle
vsqrtsd
rclb
cltd
push
decb
das
push
sub
daa
outsl
sub
and
jne
pop
jg
lods
cmp
lret
jne
sub
lods
shlb
or
xchg
mov
ret
jns
dec
popa
and
adc
lret
xchg
mov
daa
mov
sub
movsl
nopl
sub
es
pop
xlat
sub
hlt
jmp
popf
push
push
dec
ds
repz
jnp
inc
lods
mov
mov
xor
jne
ljmp
popa
mov
jb
mov
insb
ja
gs
movsl
mov
cmc
and
xchg
clc
fs
pop
das
add
popa
cmp
mov
pop
test
dec
cli
jo
push
shlb
jp
dec
lods
xor
into
scas
call
mov
lahf
lods
and
fdivrs
pop
imul
add
xor
pop
mov
bound
cmp
and
popf
enter
inc
pop
ljmp
adc
push
inc
dec
mov
xchg
mov
mov
or
mov
adc
fdivp
jne
loope
jno
xchg
or
lock
lcall
in
test
stos
xchg
ret
xchg
or
incl
add
mov
cs
out
inc
fistl
adcb
in
bound
cmpsl
aaa
lret
push
cmpsb
mov
sbb
fldpi
mov
inc
stos
stc
inc
jns
mov
sbb
push
jo
mov
xor
in
aad
sub
pop
push
repz
popa
mov
jmp
loope
test
cmp
imul
push
jmp
adc
pop
dec
sbb
mull
xor
cs
jp
popa
movb
ret
mov
sbb
dec
aas
idivb
jmp
jnp
lret
cltd
ja
push
fisubs
hlt
leave
stos
xchg
sbb
ret
lahf
xor
xchg
and
les
sbb
fwait
xchg
xlat
icebp
cmc
nop
ret
ret
cmp
es
cwtl
sbb
sub
movsb
cmpsl
fldenv
pop
cmc
inc
or
push
sub
movsb
adc
inc
add
imul
jge
int
dec
out
out
inc
stos
and
in
push
fsubrl
divps
jbe
movsl
arpl
cwtl
xchg
mov
int
lds
mov
in
iret
popf
xlat
or
movsb
dec
inc
int3
add
mov
sahf
lahf
divl
es
stos
jmp
mov
sbb
adc
gs
xlat
in
sbbb
and
das
push
out
sbb
push
mov
cmp
in
lds
pop
inc
inc
into
pop
fdivp
xchg
lret
cmpsb
mov
leave
sbb
rcrl
xchg
sub
dec
fbstp
sub
xchg
std
xchg
leave
hlt
movsb
les
incb
out
mov
fnstcw
std
mov
clc
pushf
mov
dec
add
rcll
subl
xchg
pop
mov
bound
push
jno
ja
mov
add
jno
adc
sbb
cwtl
mov
rorl
cwtl
jecxz
scas
inc
out
mov
call
push
repnz
jle
xchg
insl
add
int3
gs
jge
adc
push
lahf
sbbl
aaa
inc
data16
mov
jl
jp
ss
les
outsb
cmpsl
pop
push
out
ss
in
mov
movsb
fildl
cmpsl
stc
je
out
jae
xchg
cmp
pushf
cmp
mov
popa
flds
push
mull
dec
test
mov
lea
pop
ja
scas
clc
push
test
jg
or
xchg
scas
call
cltd
add
or
inc
sbb
push
jp
mov
jno
out
dec
dec
pop
shrb
mov
cmp
cmp
ret
loopne
pop
pop
repnz
hlt
mov
and
or
pop
mov
push
xchg
jne
ja
fwait
cmp
push
sub
int
mov
lcall
clc
inc
and
rcrb
out
mov
je
jbe
jne
or
std
shll
in
xor
pop
push
ficompl
mov
cmp
fnstenv
lcall
cli
out
fldl
pop
jmp
test
fisttps
and
mov
pop
sub
inc
scas
stc
mov
xchg
mov
jp
jno
sbb
das
mov
jmp
sub
dec
sbb
jle
das
xchg
inc
jmp
add
xor
jnp
add
int
loop
popf
and
cmpsb
pop
jae
mov
mov
sub
call
xor
sbb
rcrl
into
test
popf
push
lret
xlat
fiadds
and
imul
or
add
cmpsb
xor
fdivrp
adc
movsb
jb
adc
sbb
jnp
mov
lea
add
push
repz
outsl
pop
loopne
add
sub
cwtl
and
iret
push
cmpsl
ja
adc
fcoml
jecxz
dec
js
pop
test
int
mov
fwait
adc
psadbw
and
int3
bound
cs
jno
xor
inc
scas
pop
lock
aas
jno
repnz
cmp
cmpsl
inc
xchg
jp
stos
repnz
sarl
mov
mov
pop
pop
jbe
std
mov
popa
je
and
xchg
test
add
out
repz
and
bnd
add
jae
sub
loopne
add
std
or
fwait
stc
sarl
fisubrs
sub
lahf
gs
push
clc
inc
mov
je
mov
sub
int
sbb
jle
lret
ret
add
cmc
movsb
loope
in
xor
cs
lcall
loope,pt
sti
scas
mov
sti
jp
fildll
es
xchg
cmpsl
jns
and
cld
or
mov
jns
pop
sub
subb
call
loope
cmc
mov
sbb
loope
push
mov
test
sti
xor
ja
js
or
xchg
cs
mov
hlt
push
dec
add
sbb
sbb
jo
insl
bound
jne
loopne
add
vpcmpgtb
in
dec
and
inc
dec
jle
mov
pop
mov
dec
sbb
push
mov
hlt
pop
jne
loopne
mov
aam
xor
insb
mov
popf
mov
cmp
mov
in
sbb
lahf
lds
pop
les
add
dec
sbb
xlat
in
dec
push
pop
sub
mov
imul
sub
and
mov
aas
movsb
add
outsl
xor
sarb
stos
pop
mov
into
lret
add
out
das
or
cmp
es
adc
ja
dec
jmp
or
shlb
stc
jg
inc
and
pop
dec
test
push
cwtl
jl
mov
leave
cld
pop
and
enter
pushf
add
and
and
ss
xor
add
inc
cmp
jae
mov
and
push
insb
or
fs
jge
add
mov
orb
popa
pop
mov
rcrl
imul
gs
mov
or
test
lahf
jbe
lds
call
dec
mov
pop
sbb
adc
mov
lock
lret
pop
xchg
aad
sbb
cmp
sbb
add
dec
andl
xlat
jb
xchg
mov
pop
imul
test
cmp
dec
shr
pop
add
mov
dec
add
pop
xorl
aad
lahf
xor
pop
inc
enter
jbe
cmp
hlt
xor
ficomps
out
fcompl
jecxz
mov
aas
into
mov
xchg
data16
or
rolb
cmpl
mov
fildl
adc
xchg
jg
xchg
cwtl
inc
push
dec
lods
push
insb
out
mov
scas
push
rorb
je
pusha
mov
fs
xchg
jbe
or
dec
add
repz
inc
loop
js
incb
incb
cmpsl
hlt
pushf
jmp
mov
mov
iret
xchg
or
mov
xchg
imul
or
sub
in
xor
or
add
sbb
xlat
out
sub
pop
ljmp
fiaddl
clc
lret
cmc
push
jb
out
rolb
mov
cltd
inc
sbb
cmp
pop
cltd
adc
es
pop
push
je
and
fs
xchg
call
jp
mov
push
cmp
adc
jle
or
aam
push
cmp
xchg
stc
mov
inc
out
call
and
sub
add
or
mov
gs
xor
outsl
test
xor
sub
jg
call
fdivrl
iret
or
insb
int
inc
add
mov
lcall
aaa
in
xor
lods
js
pop
outsb
das
popf
outsl
inc
loopne
scas
jl
mov
sbb
nop
pop
popa
push
push
mov
ret
movsl
cmp
jae
dec
adc
dec
xlat
mov
call
aas
call
push
sub
test
fdivl
pop
xor
adcb
and
push
fsubrs
in
inc
int3
aaa
pusha
cmp
in
mov
pop
idivb
jno
mov
mov
cld
jno
outsl
mov
push
inc
inc
gs
imul
jnp
xchg
adc
mov
sbb
shlb
insl
sub
cwtl
ret
mov
cmc
ror
push
or
adc
mov
add
cmp
add
cli
inc
ror
fsubs
jne
enter
bnd
fistl
jg
shll
adc
adcl
lret
rcr
cmp
dec
popf
pop
bound
xchg
sbb
xchg
add
pushf
pop
ret
leave
andl
movsl
push
pop
icebp
mov
inc
sub
je
add
ret
data16
imul
ss
mull
push
mov
lock
je
inc
xor
fsubr
push
sar
pop
mov
cmp
fidivs
jge
or
iret
pop
xor
cmp
in
lahf
daa
int3
pop
push
jge
sbb
mov
mov
adc
mov
in
cmp
dec
stos
mov
mov
ljmp
dec
jns
pop
repnz
xchg
sbb
inc
fwait
add
xor
jno
and
cmp
bound
xchg
jp
adc
notb
test
pop
xor
push
aam
dec
cmc
cld
pop
jmp
push
or
lret
shlb
cmp
std
jl
cmpsl
mov
push
sub
or
ret
test
jp
lret
fwait
pop
int3
addr16
push
ja
sub
jmp
pop
inc
xlat
jg
mov
fldl
pop
cli
aas
aaa
into
jo
in
mov
jb
lcall
cmp
in
cmp
push
cwtl
jb
sti
jno
and
jns
outsb
jl
scas
dec
push
sahf
mov
shlb
adc
sbb
pop
jmp
pop
shlb
dec
pusha
pop
xrelease
mov
pop
movsl
enter
enter
push
fisubrs
adc
leave
int3
daa
mov
sbb
cli
xchg
cs
pop
les
pop
xor
mov
mov
sbb
mov
cmp
dec
mov
xor
data16
outsb
jl
sub
mov
inc
pop
pop
adc
xlat
sbb
xchg
jne
mov
add
mov
push
pop
imulb
into
jle
jge
inc
pop
sub
jno
or
and
ret
dec
gs
in
repnz
jecxz
lcall
mov
push
fidivl
fwait
xor
pop
les
inc
mov
daa
xor
popf
jb
adc
xchg
insb
loop
pop
je
int
jl
push
inc
sbb
rcrl
jb
pop
aad
cmp
add
int3
mov
fstpt
std
aas
xchg
wbinvd
ret
dec
pop
outsb
pop
jge
or
imul
cmp
mov
xor
add
pop
mov
pop
add
pop
xchg
push
nop
sahf
push
popf
add
sbb
daa
movsb
js
xchg
sub
or
lea
pop
decb
or
sub
js
leave
test
insl
leave
pushf
rcl
dec
pop
dec
aas
xlat
mov
mov
outsb
std
sub
mov
aaa
jg
adc
les
sti
pop
or
daa
stos
lcall
cmp
push
bound
mov
mov
pop
shrl
stc
push
in
xor
icebp
dec
aam
es
sbb
dec
push
mov
adc
sub
dec
mov
mov
or
push
pop
das
add
ljmp
imul
xchg
lret
xlat
jne
test
or
cld
inc
and
cmp
in
add
dec
inc
and
aas
xchg
pop
and
cmpsl
xchg
or
pop
jle
les
and
cs
sub
dec
push
mov
jo
push
mov
mov
cmp
insl
push
push
xchg
sbb
or
pop
inc
lahf
xor
pushf
sub
mov
mov
jo
fwait
or
out
shlb
sahf
mov
push
mov
sub
sbb
push
dec
scas
mov
js
mov
pminub
testl
call
sbb
cld
sbb
lods
and
or
pop
enter
pop
imul
mov
shll
arpl
mov
mov
pop
sbb
inc
jns
test
inc
xor
ds
call
bound
pop
push
or
pusha
lret
push
cmc
xchg
mov
xor
pop
jno
jnp
sub
addl
clc
popa
xchg
mov
filds
jmp
xchg
xchg
push
add
out
jnp
fidivl
pushf
fmul
pop
cwtl
clc
hlt
inc
lods
adc
or
jbe
aam
bound
xchg
push
int
test
addl
jbe
call
iret
mov
lret
sti
cmpsl
hlt
scas
andb
popa
mov
idiv
fstpt
push
xchg
or
mov
mov
fbstp
int
jb
sbb
push
push
push
sbb
popf
dec
fldl
mov
xchg
mov
and
pop
lret
cmp
insb
in
cwtl
insl
inc
iret
hlt
mov
mov
cmp
andb
dec
lret
negb
push
call
lods
xchg
mov
aaa
clc
call
test
xchg
and
fdivs
stos
popa
sub
add
std
popa
sbb
and
mov
adc
rcrl
iret
and
lods
inc
jmp
js
inc
faddl
xchg
arpl
jp
inc
and
repz
add
rcr
dec
mov
or
sub
movsb
adc
xchg
ret
mov
cltd
sbb
out
fsubrp
jecxz
inc
lock
enter
iret
mov
dec
jle
data16
inc
jb
and
jmp
call
xor
js
mov
adc
mov
or
sbb
or
ret
adc
dec
add
adc
jae
es
fldcw
shl
dec
outsb
xchg
push
notb
pop
movsl
cmp
int
outsb
js
ret
fstps
insb
add
sbb
or
and
lods
jge
xchg
faddl
test
rcll
pop
mov
fs
jne
push
cmpsl
popa
in
test
inc
sbb
jmp
gs
mov
inc
xor
push
fwait
push
mov
das
add
pop
or
add
xor
cmp
jns
mov
jbe
jp
and
push
sub
fdivl
rcrl
sbb
mov
mov
rcll
sahf
adc
mov
out
insb
out
inc
mov
cld
fbld
mov
into
xchg
iret
je
add
xchg
adc
pop
sbb
and
stc
xor
mov
jbe
jnp
popa
inc
fists
and
mov
mov
ret
mov
fwait
stos
les
pop
ds
addb
mov
add
jle
in
sbb
clc
hlt
out
adc
sub
adc
or
mov
jno
fcmovb
divl
test
pushl
mov
pop
out
repz
cmpsl
lods
adc
push
inc
fisttpl
xchg
cmp
std
add
sbb
push
pop
mov
fchs
ja
stos
or
dec
fisubrs
add
jecxz
xchg
lcall
mov
add
mov
cli
push
repnz
jbe
dec
test
sbb
mov
sti
rep
pop
inc
insb
scas
dec
jl
data16
mov
push
in
cmpsl
ds
add
test
adc
andl
je
sub
add
jl
test
nop
push
jno
shrb
cmp
fcmovnb
xchg
mov
out
pop
jl
int
jg
test
and
push
mov
xchg
sub
in
or
mov
lds
mov
jecxz
nop
imul
fistpl
nop
lahf
test
inc
mov
int3
cmp
movsl
jmp
xor
adc
add
push
cmovl
repz
in
pop
cmp
repnz
data16
ljmp
mov
aam
xchg
xchg
pop
mov
mov
mov
int3
or
mov
push
or
adc
xchg
dec
xchg
add
pop
in
xchg
cmc
mov
sbb
cwtl
fs
mov
int
loop
inc
pop
icebp
jae
std
add
add
dec
mov
mov
sbb
cmp
cli
push
movsb
and
or
pop
mov
test
pop
cmpsb
xchg
insb
xor
repz
sahf
call
dec
push
daa
popf
fildll
stc
xor
aaa
lock
aam
jnp
pop
mov
fdivrl
xchg
xchg
imul
pushw
mov
add
mov
inc
and
xor
loop
stos
notl
sub
push
in
or
imul
cli
sbb
aam
ret
in
cmp
and
adc
pop
imul
test
fs
push
xlat
push
aas
xchg
pop
inc
or
das
xor
pop
and
sub
mov
fstpl
aam
push
or
scas
sub
mov
add
sbb
loop
test
ja
mov
or
xor
loop
addb
dec
call
nop
test
popf
hlt
inc
xchg
dec
pop
push
in
xor
aaa
in
and
pop
xchg
and
push
xor
out
add
fiaddl
push
pop
mov
leave
pop
jo
imul
stos
sub
sbb
mov
xchg
movsl
add
addr16
ss
gs
ja
subl
fcmovbe
in
fbld
cltd
test
mov
bound
cmp
xor
cli
add
mov
mov
fbstp
adc
imul
into
loop
out
sti
insl
add
mov
pop
test
add
sub
cmp
xchg
sbb
inc
ss
and
insb
fs
push
add
lods
aaa
sub
mov
or
cmc
jle
push
out
jmp
cs
jns
xchg
mov
push
subb
inc
xor
xchg
loopne
mov
in
in
lods
popf
pop
dec
add
push
in
push
popf
les
test
adc
fwait
cwtl
sub
mov
pushf
rolb
sbb
arpl
jecxz
xchg
scas
andb
push
push
xlat
jmp
or
pushf
shlb
outsl
and
push
xchg
ja
aas
sbb
mov
fs
or
dec
lods
cmpsb
rcr
dec
push
jp
fsubrp
adc
mov
dec
cmp
lods
outsb
push
mov
push
dec
jno
sti
in
lock
sbb
and
adc
aas
test
js
mov
mov
ffreep
sbb
icebp
stos
inc
mov
ja
lahf
cld
mov
inc
adc
jl
es
aaa
dec
inc
dec
sub
scas
imul
jg
add
push
xor
lock
lea
loope
pop
out
cld
dec
cmpl
lea
push
mov
jl
les
dec
std
mov
adc
jp
xchg
outsb
pop
xchg
push
push
sahf
ficoml
dec
mov
cwtl
das
daa
mov
dec
out
pop
mov
or
call
pop
cltd
mov
or
push
inc
sbb
dec
aam
jns
shl
lret
mov
loope
jo
out
cmp
test
rcr
popa
pop
addr16
add
jmp
push
lahf
arpl
sti
inc
test
xchg
aas
fwait
je
out
and
lahf
jo
cmp
sti
icebp
mov
lods
and
out
adc
pop
jo
loope
lcall
and
inc
int3
adc
dec
xchg
out
roll
mov
loope
aad
pop
in
xlat
movsb
mov
movsb
fimull
push
cld
addl
outsl
test
ret
insl
mov
in
gs
jo
lods
clc
mov
adc
cltd
mov
inc
iret
cli
xchg
mov
sub
stos
cmpsb
mov
cli
pop
roll
cmp
es
mov
lret
addr16
mov
mov
jno
enter
push
and
xorl
and
into
in
dec
jecxz
add
imul
popf
lods
cli
dec
fistpll
scas
roll
es
out
popa
test
inc
cmc
or
fs
lock
pop
mov
cmc
in
adcl
and
outsl
pop
lea
push
ror
mov
adc
mov
pop
push
filds
das
push
decl
or
jmp
xchg
in
gs
xchg
mov
pop
cmp
pop
sbb
push
aas
pushf
outsb
mov
cld
cmp
into
jno
mov
xchg
mov
insb
sub
mov
or
add
imul
mov
or
aad
mov
jmp
in
cs
test
mov
in
repnz
adc
mov
cli
xchg
mov
sbb
cmp
cli
das
fmulp
stos
lret
out
xchg
mov
xchg
sbb
mov
sub
sbb
out
fistl
mov
inc
jp
jns
pushf
adc
ret
pusha
lcall
xchg
stc
lcall
data16
int3
mov
mov
mov
xor
dec
push
out
sbb
dec
lret
xchg
insb
mov
loope
cmpsb
inc
repnz
imul
sub
aad
sbb
add
testl
fdivrl
xchg
movsl
divb
int
dec
sbb
sub
dec
push
in
nop
push
je
fstl
mov
repz
push
je
push
or
rorl
push
add
sahf
and
test
or
xor
clc
ja
je
imul
mov
dec
mov
add
fucomp
pop
pop
stos
inc
lret
add
dec
sahf
out
js
pop
repnz
mov
add
fwait
cmpsl
mov
pop
and
loope
or
xchg
cmp
mov
sbb
xlat
sbb
inc
push
cmp
fidivl
mov
notl
adc
fbld
arpl
hlt
test
jo
adc
sub
cmc
xor
rcl
inc
push
mov
push
xor
in
mov
clc
out
pop
xchg
orl
lods
sub
adc
dec
push
ljmp
jno
bnd
pop
pop
adc
lds
ds
cmc
sub
jecxz
inc
test
aaa
insl
jle
lahf
pop
in
test
and
xchg
aas
aaa
cmp
pop
inc
shlb
fimull
popa
lret
mov
divl
push
clc
lret
addr16
outsb
or
in
dec
fldenv
subl
xor
mov
rolb
sbb
jb
fcomi
or
data16
mov
daa
or
jbe
daa
bound
xchg
mov
dec
xor
popa
sub
pusha
push
cwtl
xor
adc
ds
push
xchg
les
or
sbb
adc
movsl
and
out
jle
lret
xor
adc
popf
test
and
imul
jbe
dec
inc
xchg
std
sbb
adc
pop
icebp
mov
in
mov
fidivs
mov
sub
cmpsb
out
sub
sbb
sbbb
cltd
cwtl
jne
call
lock
push
push
adc
xchg
ss
lret
popa
fstpl
push
jecxz
sub
mov
nop
mov
push
ror
dec
repz
jno
sub
test
ja
adc
jne
sub
jge
jb
push
test
inc
aas
imul
outsb
sti
mov
dec
out
insb
and
pop
sub
sbb
aas
dec
mov
pusha
pop
pop
hlt
mov
test
sarl
pop
jb
sbb
jns
jge
jne
rcrl
fsubs
cmpsl
or
daa
lcall
add
cmp
or
jb
adc
adc
lods
sub
mov
mov
dec
inc
pop
mov
lods
mulb
cmp
mov
lret
sbb
add
mov
or
adc
sub
or
cmpb
push
add
int
fdivs
mov
mov
jo
fsubr
clc
or
xor
outsl
mov
jle
add
clc
pushf
insl
adc
test
push
add
imul
cmpb
jmp
int
jmp
jb
shl
test
mov
adc
inc
loopne
bndstx
stos
in
aad
jle
cli
mov
pop
mov
and
push
repnz
or
sub
xchg
xchg
movsl
sbb
aad
jns
pushw
mov
fisubl
cltd
fsubp
jo
shlb
mov
xor
arpl
mov
jns
cmp
movsl
hlt
pop
jns
cmp
incb
sbb
xchg
scas
cmp
mov
cli
push
inc
xlat
sbbb
adc
in
jecxz
pop
inc
repnz
mov
pop
adc
shll
inc
pop
cmp
and
cwtl
adc
leave
jns
sub
adc
lea
fs
sti
push
cmc
adc
sub
lcall
mov
push
loopne
jp
pop
push
jl
mov
push
inc
lock
sub
in
sahf
add
fbld
sti
test
iret
jp
daa
outsb
jl
mov
pop
rcrl
jp
mov
jg
xchg
addr16
and
pop
aas
stc
push
sub
fnstenv
insl
gs
ds
sub
cltd
sbb
adc
inc
das
ss
mov
lret
sbb
js
es
insl
insb
bnd
and
test
cmp
test
sbb
pop
mov
or
lock
int
cs
inc
add
scas
adc
data16
sub
push
aaa
push
inc
mov
popf
icebp
idivb
jmp
jp
or
dec
fisttps
cmp
add
insb
outsl
lods
push
xchg
idivl
test
aam
dec
add
add
mov
jo
mov
xchg
repnz
mov
xor
and
les
mov
jmp
arpl
rcrl
test
call
pushf
adc
add
cmp
xor
mov
lds
fists
addb
pop
fldcw
in
push
loop
add
jns
in
popf
pop
imul
and
sti
and
pop
repz
pop
xchg
mov
cmp
out
xchg
sub
cld
movsb
adc
lret
sbb
pop
inc
sub
mov
pop
mov
dec
test
xlat
in
test
and
lods
leave
jg
dec
xchg
aam
xchg
jo
pop
and
sahf
imul
sub
mov
inc
scas
and
sahf
adc
hlt
mov
or
cmp
inc
fmuls
pop
popf
jns
xor
add
cmpsb
and
movl
imul
outsl
lea
mov
push
xchg
pop
imul
andb
lret
and
push
push
fidivrs
dec
xorb
cmp
xor
imul
mov
das
xor
lahf
sub
pop
pop
cmp
mov
dec
pop
sub
xchg
sub
dec
test
rorl
leave
cli
adc
fwait
mov
mov
xor
adc
cmp
int3
arpl
ljmp
test
leave
fldcw
xchg
mov
cld
lcall
adc
movsb
inc
xchg
in
mov
jno
ds
push
mov
js
in
adc
jnp
pop
adc
lret
jl
int
sbb
xlat
mov
pop
mov
ja
xor
call
mov
sub
jnp
dec
sbb
push
std
jns
cmpsb
sub
mov
test
nop
cli
add
pop
daa
movsl
mov
mov
mov
fsubrs
popa
loope
mov
sub
sti
fdiv
and
cld
and
enter
mov
adc
fistps
cmpsl
shrd
pop
cmp
pop
movsb
repz
aaa
jmp
call
xchg
js
jo
call
mov
test
adc
das
and
sub
insb
rcll
add
out
mov
les
xor
lret
out
aam
cmpsb
ds
loope
out
pop
stos
out
push
aaa
aas
into
stos
stc
mov
and
int
and
outsl
add
int3
pop
xor
inc
pop
cmpl
mov
or
cmp
cwtl
cmp
xchg
add
adc
outsl
cmc
mov
cmpsb
mov
adcb
jne
lods
les
fnstenv
call
or
stos
rcll
jns
int
aad
cmp
test
je
loope
inc
push
cmp
push
mov
ret
or
jmp
rcl
push
or
loopne
cwtl
pop
cmc
mov
notl
xor
cmpsl
lock
leave
testl
push
nop
imul
push
fdivs
daa
cmp
push
mull
jb
pop
xlat
sub
lds
push
je
pop
cmc
cmc
mov
in
pop
pop
icebp
push
cmc
mov
ljmp
inc
aas
scas
or
das
push
divl
xor
inc
popf
int
mov
dec
xor
jmp
test
ret
hlt
mov
icebp
aam
sbbb
jae
insl
xor
lahf
das
add
sbb
fsubs
cltd
sub
loop
inc
pop
bnd
or
nop
scas
movsb
ss
rclb
xor
divb
inc
dec
fcmovbe
push
fdivl
icebp
or
mov
cmpsb
scas
fwait
mov
add
push
mov
xlat
xor
push
add
push
mov
outsl
imul
mov
hlt
loop
pop
sbb
inc
fcoms
ljmp
ljmp
ja
ds
sahf
push
sarb
lock
test
cli
daa
push
hlt
imul
daa
lods
sub
mulb
pop
scas
int
mov
data16
faddl
out
cmp
sti
mov
subb
movsl
call
adc
sub
and
dec
and
and
push
sub
addb
arpl
push
sbb
lahf
mov
add
adc
fisubs
mov
mov
cmp
es
xor
rcl
ret
or
scas
adc
icebp
test
inc
shrl
xchg
out
cmc
fdivrl
pop
out
imul
adc
insl
adcb
mov
xor
js
push
stos
add
loope
or
nop
data16
je
lret
sbb
pusha
dec
jb
stos
out
out
jbe
cmp
lds
outsl
adc
cltd
mov
cmp
pop
xchg
and
adc
inc
push
inc
int
or
fidivs
lret
fsubrs
stc
scas
out
cld
jae
adc
sub
imul
or
mov
cmc
test
jmp
enter
hlt
rclb
or
xor
push
test
shlb
cltd
xchg
icebp
mov
mov
xor
in
rcrl
cmp
pop
sub
jg
out
daa
push
dec
sahf
dec
iret
inc
hlt
inc
in
loopne
push
bound
xlat
aas
xchg
jno
fnstsw
and
or
mov
xchg
pop
sub
and
outsl
or
movsb
xlat
sub
push
negb
out
push
in
xchg
add
fs
pop
push
shlb
icebp
aam
push
jle
sbb
or
xor
je
pop
nop
stos
xchg
cmc
push
fucomp
mov
mov
jne
xchg
jbe
add
adc
adc
sbb
cwtl
lods
mov
push
push
lods
fidivrs
add
outsl
bnd
pop
fstl
and
mov
xor
jo
cmp
out
push
jmpw
cmp
arpl
packssdw
or
cmp
cmpsl
xchg
adc
pop
jge
cmp
mov
adc
push
cmp
and
or
mov
repz
shll
add
and
dec
jecxz
gs
rcll
sub
mov
xchg
cmp
stos
imul
dec
test
mov
push
fs
mov
inc
or
jmp
outsb
adc
sub
seta
lods
sbb
inc
push
dec
mov
nop
std
lahf
fs
das
adc
xchg
and
mov
test
gs
pop
mov
sarb
jle
popa
adc
js
xor
dec
fwait
enter
lods
adc
rcll
cli
pop
aaa
call
leave
mov
repnz
stos
or
aad
gs
pop
cwtl
inc
ret
mov
cmc
fs
ficompl
fsub
jb
inc
xor
dec
rol
addb
jle
cmp
mov
inc
mov
push
and
mov
stos
test
orl
data16
push
cs
movsb
add
into
push
movsb
jbe
jp
cwtl
jae
jae
mov
sbb
xchg
cwtl
push
ret
add
or
xchg
loope
sub
jno
mov
pop
lea
and
pop
sbb
aad
repz
lock
jnp
adc
jae
adc
xor
out
pop
ret
sub
dec
xor
dec
and
push
std
inc
adc
test
xlat
je
outsl
xor
je
imul
popa
adc
stc
ja
adcb
lret
xor
mulb
addr16
repz
mov
call
scas
mov
jle
or
and
mov
push
adc
sbb
rolb
ljmp
popa
or
xlat
test
push
jmp
jno
jno
mov
flds
mov
sub
stos
push
into
stc
pop
jg
xlat
cmpsl
out
fnsave
sub
mov
mov
add
push
mov
dec
mov
and
lods
cwtl
nop
pop
roll
mov
jg
ja
bound
out
xchg
dec
jo
jnp
or
nop
mov
mov
mov
sub
dec
xor
jns
push
popf
push
out
dec
dec
repnz
mov
ret
xchg
sub
pop
cmp
lods
stc
and
adc
loope
jnp
leave
pop
jno
mov
push
stos
lods
fisubs
xchg
mov
std
in
lock
movsb
je
in
aad
push
mov
rclb
cmp
and
sbb
cltd
int
jl
add
jge
loope
adc
fwait
mov
cmp
inc
add
mov
adc
inc
loop
push
mov
sti
inc
fmull
dec
movsb
aam
mov
lret
movsl
out
push
inc
mov
repz
aad
xor
mov
mov
lock
mov
or
push
push
cltd
xchg
lock
outsb
cli
rcrl
pop
scas
push
inc
sub
ja
adc
and
adc
jb
aas
pop
aas
sbb
lcall
shl
sbb
movsb
outsb
icebp
sub
cmp
popf
scas
dec
js
outsb
mov
std
rcll
or
idivb
out
adc
mov
daa
dec
dec
jmp
sub
in
clc
sub
jb
inc
mov
lods
popa
mov
leave
xchg
scas
mov
xchg
ja
insb
mov
gs
xor
inc
mov
xlat
outsb
and
pop
ret
adc
test
cltd
cli
stos
lret
out
pop
sti
sbb
or
lcall
mull
mov
push
jb
push
sub
cli
mov
aad
push
mov
push
sbb
jmp
jp
enter
add
sbbb
jb
out
daa
mov
cmpsl
pop
fcmovne
ss
ja
mov
jg
xchg
fnsave
adc
shl
jmp
adc
jae
adcl
jnp
push
movsl
dec
inc
gs
popf
xchg
jo
inc
mov
enter
mov
adc
jb
mov
lock
inc
ffreep
in
push
mov
fisubs
ret
mov
push
xchg
mov
int3
push
and
sti
mov
insl
cwtl
cmp
nop
test
xor
loop
xchg
add
mov
rolb
mov
mov
icebp
mov
movsb
dec
xchg
pop
adc
mulb
imul
mov
or
jp
adc
xchg
dec
mov
sbb
inc
cltd
lret
jp
jle
xlat
pusha
das
mov
add
adcb
xor
xor
mov
sbb
cmp
jb
scas
les
addl
sub
iret
rcrl
popa
mov
sub
or
pop
ljmp
sarl
push
das
rcr
xor
xchg
sub
ja
mov
cmc
xchg
imul
test
dec
mov
dec
adc
outsb
sub
sahf
lods
jb
add
cmc
stos
orb
dec
pop
sbb
sbb
pop
mov
mov
out
sbbb
jnp
or
nop
sub
sarl
jo
shrb
lods
inc
popf
jl
insl
out
aaa
dec
and
cmp
addl
aaa
mov
adc
orb
adc
cli
xor
das
pop
clc
cs
sbb
test
sub
lds
pop
mov
rolb
or
and
stos
jns
cmp
mov
jns
popa
pop
pop
pop
int
adc
push
jge
js
into
jle
pushf
mov
pop
mul
add
out
dec
mov
add
sub
mov
cmp
inc
xlat
pop
mov
data16
mov
mulb
or
mov
sub
arpl
inc
repz
xor
inc
add
mov
mov
push
jno
pop
sbb
xor
daa
inc
cli
dec
std
idivl
mov
sub
add
pop
mov
jg
jecxz,pt
pop
scas
push
dec
loope
jp
outsb
fsubrl
pop
es
add
mov
pop
sbb
ds
insl
jmp
cmp
mov
pop
push
and
xor
xlat
jno
fmuls
fs
adc
inc
xlat
cmpsl
jae
pop
repnz
ret
jns
cmc
test
xchg
testl
sub
loope
and
pop
rol
jne
es
loopne
add
cltd
jmp
inc
movsb
mov
push
enter
xchg
cli
lds
push
sub
xchg
fprem1
loope
mov
push
xchg
sub
push
mov
push
inc
inc
inc
xor
xchg
add
and
xor
ficoms
and
outsb
lahf
xchg
xor
lock
and
add
mov
leave
aam
and
bswap
test
loop
mov
sub
jo
pop
fistl
jns
jns
mov
int3
adc
dec
fcmovnbe
cmp
scas
mov
je
lret
sbb
xchg
addl
xchg
adc
incb
lock
scas
scas
scas
roll
ds
ljmp
lods
fstl
xchg
in
and
cltd
popf
xchg
rolb
lods
out
mov
sbb
icebp
xor
cmp
inc
daa
movsl
ljmp
or
into
inc
sub
popw
xchg
push
lods
enter
jle
lret
orb
add
shl
adcb
decl
das
mov
call
out
ret
adc
or
jl
sbb
jl
mov
arpl
mov
mulps
out
cmp
cmp
stos
cmp
sub
xor
inc
push
mov
pop
test
enter
call
fiaddl
cmpsl
popa
jl
cwtl
das
xor
dec
loopne
push
int3
pop
jmp
adc
sbb
ss
cmpsb
pusha
shrb
jecxz
aad
out
ficoml
mov
out
in
popf
xor
push
icebp
mov
mov
stos
fnstsw
xchg
sbbl
sbb
enter
pusha
lods
int
jle
fisttpll
lods
or
out
into
pusha
xor
pushf
aas
into
mov
call
arpl
int3
loope
js
cltd
icebp
mov
xchg
stos
out
stc
dec
cs
shll
iret
rorb
pop
fistl
mov
xchg
aaa
add
mov
pop
in
push
jg
pop
mov
pop
icebp
bound
enter
nop
fbstp
fsubrs
adc
testb
notb
pop
out
loope
andl
inc
leave
xor
jnp
cltd
leave
scas
adc
mov
xchg
mov
fsubr
xchg
ljmp
addl
pop
jbe
sub
aaa
jns
jle
popa
jp
sub
int3
inc
push
sbb
mov
ja
cmp
orl
in
mov
dec
fcoml
mov
cli
in
mov
andl
iret
inc
jae
jns
add
out
xchg
cs
inc
cmp
lods
sbbb
iret
and
push
test
pop
pop
hlt
dec
mov
in
jnp
push
rcr
and
pusha
jle
push
daa
addb
in
xor
jp
lds
insb
movl
push
xchg
aas
push
js
xor
jle
in
out
movsl
outsl
mov
or
adc
bound
jecxz
dec
rorb
dec
sub
jge
stos
jl
imul
ficompl
jmp
dec
fbstp
inc
pop
xor
rorl
es
in
stos
imul
incl
mov
or
addr16
adc
adc
xchg
cmp
add
jo
or
cmp
loopne
cli
push
lahf
adc
cld
loop
loop
dec
jmp
push
shr
mov
imull
movsl
shlb
pop
mov
scas
mov
loop
jnp
roll
mov
adc
add
enter
mov
xor
inc
loop
xchg
sub
faddl
push
xor
lcall
cmp
push
jno
inc
sbb
aaa
testl
mov
xlat
out
movsl
dec
inc
or
test
lret
cld
and
adc
jge
cmp
jb
push
movsb
int
jle
add
stc
xor
filds
xchg
jmp
sahf
xor
nop
les
cmc
mov
test
inc
inc
insb
jle
imul
mov
inc
leavew
and
push
pop
mov
setno
cmp
xor
mov
sub
repnz
stos
ss
fisubl
fldcw
js,pn
cli
in
cs
xlat
mov
mov
lcall
mov
nop
insb
loopne
pop
cmp
aas
xchg
out
and
adc
fisttpl
sarl
sub
xchg
inc
sbb
sahf
sub
outsl
ret
test
mov
or
fidivl
test
xor
jg
lock
xor
mov
cwtl
jmp
cmp
cmp
cmpsb
loope
ljmp
or
push
xor
xchg
hlt
scas
les
aas
xchg
lock
sub
cmc
push
push
test
lock
fdivp
xor
in
hlt
popf
pop
mov
jno
mov
arpl
sub
enter
jmp
push
jns
or
repz
add
push
xor
jns
daa
pop
pop
repz
push
add
add
cmp
sub
dec
clc
mov
jbe
jmp
jno
cltd
int
fwait
cmp
das
cmp
cld
out
inc
pop
cmpsl
jb
andl
cwtl
loop
lret
and
adc
mov
in
mov
jle
cmp
loop
xor
or
ret
pop
xchg
repz
sbb
fisttpll
push
gs
mov
mov
pop
push
xor
jl
rcll
push
loopne
lds
pop
push
xor
sti
jmp
mov
aad
xchg
in
test
pop
int3
pop
mov
pop
mov
shrl
xor
pop
lret
mov
arpl
jmp
pop
shl
and
enter
dec
jmp
call
icebp
arpl
sbbb
adc
mov
fwait
xchg
mov
mov
mov
mov
adc
filds
and
sub
inc
inc
popa
out
mov
sub
mov
int3
gs
rclb
push
data16
pushf
dec
data16
jnp
ficoml
adc
and
lods
in
push
jecxz
push
mov
mov
xlat
xchg
test
bound
repz
out
in
add
test
stc
xchg
jg
mov
sti
mov
daa
icebp
push
add
divb
jbe
lcall
sub
mov
ljmp
inc
push
outsl
mov
pop
jecxz
pushl
adc
loope
aam
xchg
sub
mov
xchg
sti
iret
daa
mov
dec
cmpsb
aam
rcrb
pop
outsl
mov
rcl
mov
pop
xlat
outsb
dec
fildl
mov
addl
jne
sub
and
inc
mov
mov
dec
in
lret
cld
loope
ja
add
push
jns
inc
arpl
pushf
xor
aas
ja
ss
sahf
clc
push
cwtl
lods
inc
xchg
dec
add
insl
loope
jo
mov
notl
incl
xchg
sub
repnz
les
mov
arpl
cltd
int
jge
imul
xchg
cmp
inc
adc
mov
imul
sbb
mov
inc
xchg
inc
adc
cs
leave
lret
add
popa
movsl
cli
dec
fsubrp
rorb
jo
cld
outsb
movsl
mov
push
xor
or
cs
push
in
cmpsb
sub
out
lret
shlb
popf
dec
cmc
lret
jnp
xorb
ja
test
mov
cmpsb
or
xor
sbb
pushf
ja
mov
fstl
out
pop
sbb
gs
mov
mov
shll
mov
jecxz
cmp
and
jmp
mov
mov
mov
outsl
div
and
xchg
mov
mov
test
and
icebp
mov
addl
aas
sbb
xor
xchg
sbb
add
cmp
sbb
jb
int3
cmp
push
cmp
push
pop
repnz
out
imul
push
stos
and
insl
nop
shlb
mov
pop
add
cmp
outsb
clc
fistpl
cli
sbb
dec
loope
andb
adc
mov
aad
sub
dec
aam
lret
insb
js
aad
add
repz
fistpl
int3
fdivrs
xor
int
inc
in
outsl
xchg
sub
das
adc
leave
rclb
test
jg
data16
jnp
sahf
or
imul
ret
test
pop
xchg
xor
jle
shl
movsb
push
out
sbb
insl
jne
jge
xor
pop
and
pop
dec
sbb
sub
jl
adcl
rclb
xor
insl
rolb
iret
mov
mov
stos
ljmp
push
shlb
out
std
pop
adc
cmp
dec
jno
pop
inc
jle
dec
sbb
cld
pop
push
outsl
adc
stc
movb
pop
inc
xchg
jl
jns
sbb
and
cmc
test
jg
dec
in
mov
test
and
xor
mov
aaa
sti
add
mov
iret
cmpsb
jmp
inc
je
add
add
cltd
or
sub
mov
adc
inc
je
lcall
mov
and
pop
sub
jge
test
andb
cmp
xchg
js
lret
xor
iret
arpl
mov
xchg
dec
lret
and
adc
repnz
inc
cs
ds
xchg
movsl
mov
mov
or
int
js
dec
loop
out
fidivl
mov
stc
mov
das
push
cwtl
mov
mov
jp
das
inc
mov
add
loopne
sbb
xchg
loopne
scas
ret
jle
fisubrl
jle
xchg
mov
pop
ret
xlat
ret
mov
adc
adc
std
gs
mov
inc
mov
insb
mov
in
dec
insl
xchg
adcl
ja
sahf
insl
mov
adc
inc
mov
imul
xchg
int
ret
xor
xchg
outsl
push
sub
lret
mov
js
pop
cld
cltd
pop
cmc
pop
inc
lock
push
xchg
xor
push
movsl
sbb
xchg
xor
and
and
ret
push
movsb
insl
cmp
or
and
pop
fisubs
mov
in
int
mov
adc
sti
pop
icebp
mov
dec
mov
in
out
dec
adc
outsb
xor
mov
mov
pop
mov
push
lods
mov
push
ljmp
lds
mov
mov
fstl
pop
loopne
loope
fcmovne
dec
sub
arpl
repz
mov
es
mov
inc
arpl
fidivrs
dec
adc
jmp
outsb
inc
dec
add
in
das
sbb
pop
cmp
shrb
inc
adc
push
inc
pushf
out
mov
ret
shrl
js
jno
push
out
lock
jl
fwait
jns
aaa
int
ss
mov
test
shrb
xchg
push
jge
movsl
push
jmp
pushf
jmp
data16
push
adc
inc
push
fistpl
movsb
cmp
mov
int
repz
mov
jbe
cmp
ret
adc
pop
ljmp
call
push
push
sub
sahf
sahf
mov
in
xchg
sahf
push
adc
dec
inc
pminub
ljmp
dec
fldenv
in
push
aad
and
gs
test
int
xor
mov
mov
and
dec
and
lret
jbe
cmp
cmp
pop
test
nop
mov
mov
cld
mov
inc
lcall
and
dec
xchg
inc
adcl
and
iret
xor
dec
mov
lods
push
mov
dec
adc
inc
mov
xchg
imul
test
add
mov
subb
lea
movsb
pop
add
sbb
js
adc
cmpsl
cltd
mov
dec
insl
jge
outsb
rcrl
cmpsb
mov
mov
lahf
adc
mov
js
enter
xor
xchg
mov
mov
mov
fdivrl
aad
into
sbb
dec
jns
in
lret
mov
iret
xchg
cs
test
and
add
dec
cmp
push
mov
inc
insl
cmp
sub
add
or
ss
ffreep
loope
mov
inc
pop
cwtl
fwait
insb
inc
rorl
or
addl
cmpsl
pop
xchg
scas
rorb
cld
adc
cmp
dec
sahf
push
add
or
and
cmp
dec
fwait
in
std
test
cmpsb
js
lds
testl
cs
mov
mov
add
and
cmp
into
in
fcoms
cmp
mov
pop
clc
add
mov
fisubs
inc
adc
pusha
fdivl
add
test
in
sub
addr16
mov
pop
shll
sti
out
push
scas
cmp
pushf
sbb
in
repnz
mov
mov
test
adcb
xlat
int3
push
nop
gs
xlat
leave
negl
lea
loope
lcall
jp
insl
mov
movsl
xlat
lahf
or
mov
jle
test
vpunpcklqdq
inc
daa
mov
mov
xchg
sub
inc
push
jmp
ret
mov
pop
cmc
les
sub
jp
or
hlt
mov
dec
sbb
lods
ret
push
call
inc
dec
inc
fnstcw
shl
mov
jle
in
lret
lds
outsb
add
xchg
mov
xor
out
mov
dec
loopne
movsb
mov
jnp
movsl
and
pop
dec
push
mov
stos
int
cwtl
lods
add
jne
and
cmp
push
adc
rclb
stc
push
popa
jb
jl
or
mov
mov
jbe
mov
fxch
jle
mov
jl
stos
push
testl
ljmp
adc
or
adc
movsb
sahf
jmp
mov
imul
gs
outsb
mov
aam
cmp
adc
in
test
dec
sub
sub
dec
inc
movsb
div
mov
subb
dec
cwtl
jp
jmp
jo
sti
dec
jp
mov
or
or
sub
xor
ss
imul
push
or
add
fbld
mov
sbb
adc
mov
mov
jb
mov
adc
cmpsb
outsl
dec
fildll
cmpl
fistps
arpl
cmp
jne
outsb
test
faddl
ja
inc
cltd
in
mov
xchg
cmpsl
add
cmp
cmp
xchg
adc
mov
jl
mov
fnsave
popf
mov
inc
xor
cmp
daa
outsl
cltd
adc
xchg
push
jnp
or
mov
inc
and
sti
es
push
or
ds
jnp
and
enter
xor
pop
repz
in
mov
icebp
push
lods
push
idivb
aaa
jo
cmp
ljmp
xchg
jnp
pop
mov
imul
adc
and
jb
sbb
jle
xchg
adc
add
dec
add
call
lret
js
addl
adc
add
mov
add
jnp
fsubs
mov
mulb
test
shlb
add
out
push
lods
mov
ret
xor
and
fwait
sub
xor
cmp
adcb
cmpsb
faddl
mov
xor
enter
cs
sbb
cmpsl
mov
xor
jb
cmp
ficompl
mov
cwtl
hlt
or
mov
cmp
cmp
adc
jg
mov
xchg
inc
push
iret
sbb
fwait
dec
lock
stos
mov
inc
adc
out
inc
arpl
sub
out
xchg
mov
lret
ss
out
xchg
xor
adc
jp
xor
popa
sti
mov
dec
add
in
iret
mov
jbe
sub
decl
sub
jno
or
aas
cmc
outsl
roll
cmpsb
repnz
bound
sahf
pushf
xchg
insl
jge
mov
add
jo
jbe
sbb
iret
dec
jbe
sbb
aas
imul
cli
xchg
daa
es
out
sub
sub
mov
aaa
shrb
inc
pop
xchg
push
sbb
popf
xor
lods
lea
test
nop
mov
dec
loop
loop
push
xor
fwait
imul
adc
dec
sub
sub
adc
jae
shl
xchg
push
aam
adc
in
inc
lods
addl
scas
cmc
sub
mov
aaa
pop
inc
imull
aam
sbb
push
ds
mov
cmp
les
sbbl
push
and
push
sbb
push
add
mov
mov
mov
fisubl
inc
jge
pop
xor
pop
ja
xchg
bound
dec
lock
mov
xchg
dec
aad
jl
int
cmp
outsb
jl
popf
test
test
sub
mov
fimuls
sub
in
les
mov
lds
dec
xchg
cltd
test
sub
push
mov
les
jo
fsts
call
mov
push
mov
mov
stos
jne
pop
inc
mov
bndldx
push
clc
or
lahf
mov
cmpsb
insb
imul
cltd
iret
andb
cmp
call
xchg
sub
fdivl
adc
pop
subl
daa
pusha
adc
ds
scas
out
cli
pop
pusha
jp
xchg
adc
push
movl
aad
gs
enter
add
clc
or
push
dec
in
jnp
sahf
mov
loopne
dec
xchg
outsb
xor
imul
mov
ficoml
push
ljmp
jno
cltd
daa
add
pop
push
repnz
adc
or
and
adc
lcall
and
push
sbb
lods
inc
mov
xchg
cs
mov
rcrb
in
mov
and
xor
sti
jle
aad
cs
testb
pop
cmpsb
cmp
pop
mov
jno
clc
xor
movsb
sub
adc
mov
lods
add
lret
sub
ror
lret
aaa
push
testl
adc
es
adc
mov
or
mov
pop
xchg
into
gs
je
pop
xor
push
nop
sbb
sarl
pop
insb
jmp
js
or
fstps
lock
fisttps
sbb
sub
adc
xor
in
nop
mov
adc
sub
push
add
inc
popa
pop
push
sbb
shr
fadds
inc
pop
leave
push
dec
sbb
cmp
sub
sbb
xchg
and
cmp
mov
mov
jl
mov
jle
jae
dec
pop
mov
iret
insl
xchg
sub
loop
sub
mov
ficompl
inc
sub
mov
rclb
popa
mov
jecxz
sub
lods
mov
sub
add
dec
jl
mov
push
test
jl
mov
mov
xor
out
fists
cltd
jmp
test
dec
cld
pop
lret
fld
cwtl
xchg
scas
das
pop
xor
roll
cmpl
jne
pop
mov
push
ja
push
adc
mov
push
jns
mov
add
xor
xchg
pop
call
or
or
ret
icebp
inc
test
or
cmp
push
jle
int
mov
shrl
mov
gs
pop
in
push
add
stos
stc
and
sbb
push
movsb
adc
xor
pop
icebp
xchg
fdiv
mov
or
loopne
cli
xlat
dec
add
mov
jns
stc
test
stc
xchg
rol
xlat
imul
dec
sahf
mov
filds
and
mov
out
sub
scas
test
mov
popf
xorl
jo
or
addb
hlt
iret
mov
mov
leave
fildll
icebp
sub
out
or
and
cmpsb
loopne
mov
andb
mov
test
pop
fs
ret
and
int3
mov
jge
mov
sbb
mov
push
add
adc
pop
das
jp
je
pop
lret
ja
sti
aaa
push
xor
test
call
cld
or
add
sti
xchg
fdivs
movsl
mov
mov
sti
in
rcll
mov
xchg
call
cmpb
insb
or
mov
outsl
imul
adc
mov
pop
pop
mov
lods
adc
mov
ficompl
gs
xor
jmp
adc
xor
xchg
lds
cmp
insb
lret
cld
xchg
or
push
xor
shll
push
xlat
stos
stos
mov
jae
int3
daa
jbe
subb
sub
xchg
jecxz
cwtl
repnz
push
js
loope
push
sbb
add
mov
sbb
jle
adc
mov
sbb
cmpsb
xchg
in
sub
sbb
add
inc
out
xor
negb
movb
mov
inc
dec
insb
enter
cmpsb
fwait
ret
pop
xchg
mov
in
jmp
data16
repnz
cltd
and
inc
and
and
push
cwtl
jg
adc
mov
jno
lret
sub
jb
test
jl
cmpsb
subb
push
repz
pop
stc
cltd
mov
lret
xor
cld
inc
lret
lret
cld
insb
pop
adc
xchg
mov
ret
mov
in
subb
pop
mov
xchg
test
rorb
cmp
mull
inc
sub
jle
bnd
aam
xlat
sbb
nop
imul
outsl
mov
call
lcall
js
lock
lds
aaa
jne
cmp
sbb
scas
lea
cmp
and
and
fdiv
xchg
xchg
mov
fsubrp
mov
clc
jns
inc
imul
aas
pusha
hlt
lds
psrlw
push
mov
xchg
test
lock
mov
cmp
ficompl
xor
mov
scas
test
pop
push
aas
or
cltd
loopne
inc
mov
insb
cli
cmp
pushf
ja
leave
aam
cli
push
add
bound
sub
and
loopew
xchg
add
out
mov
add
pop
aam
rcll
mov
into
xlat
cmp
mov
add
movsl
xor
mov
dec
sbbb
mov
outsl
in
sub
pop
data16
push
fnstcw
push
push
inc
mov
dec
inc
xchg
mov
mov
jp
cmp
clc
mov
enter
rcrl
sti
fidivrl
les
push
jb
mov
cmpsl
loop
push
xchg
sub
adc
push
inc
repnz
adc
mov
jl
movsb
lods
sub
test
sub
test
test
mov
xchg
hlt
fcmovnbe
dec
jno
mov
ss
push
test
jb
mov
out
sbb
sbb
adc
in
xor
xor
add
sub
cmp
mov
adc
pusha
push
ficompl
je
pop
mov
lods
push
repnz
jle
jne
pop
inc
stc
mov
and
outsl
mov
mov
clc
xlat
aam
cmpsb
cmp
dec
ret
lds
es
lods
jecxz
fsubrp
scas
out
sahf
inc
mov
push
cltd
and
or
aas
mov
adc
cmp
mov
dec
or
sbb
and
mov
inc
loopne
jge
mov
mov
sbb
or
sahf
popa
je
pop
mov
or
out
sub
adc
out
test
dec
xor
aam
arpl
pop
mov
and
cmpsb
inc
mov
dec
jle
xchg
fcmovu
in
push
add
mov
adc
sub
sahf
cmp
imul
add
inc
imul
cmp
int3
xchg
pop
mov
add
std
or
xor
iret
jb
fdiv
adc
movsl
adcb
loopne
lahf
and
fwait
jge
xchg
imul
inc
xchg
pop
sbb
ret
jno
cmc
push
int
push
subl
addl
movsb
pop
dec
lea
or
adc
cmp
shl
jnp
int3
jnp
mov
ret
mov
movsl
push
ljmp
sbb
rclb
inc
out
xchg
aad
pop
lahf
cmp
xchg
shl
mov
push
sub
mov
mov
ret
test
adc
iret
inc
dec
mov
jb
out
jmp
ret
fs
lds
push
shl
mov
cmp
addr16
test
out
adc
mov
lcall
rcrl
inc
icebp
push
push
xor
pop
shrb
rorl
test
adc
jge
xchg
loope
into
mov
aaa
push
pop
fcmovnb
pop
dec
pop
loope
cwtl
loope
scas
fyl2x
and
mov
or
push
jg
lea
rolb
push
aad
inc
lcall
push
sbbb
adc
mov
loop
movsb
inc
popa
dec
dec
loopne
mov
lock
iret
or
fidivrs
ret
in
sti
movsb
adc
loopne
cmp
fucom
fldenv
or
inc
mov
call
xchg
xor
push
fcoms
mov
fs
jecxz
push
test
sti
in
sub
pop
xchg
cmp
cmp
popa
sub
out
inc
fs
out
test
jnp
shl
or
es
mov
xchg
sub
cmp
aas
ja
dec
test
xor
or
push
jne
call
sub
cmp
ljmp
pop
arpl
test
icebp
lret
xlat
sarl
pop
cmp
testl
imul
les
dec
arpl
out
mov
adc
xor
fcomip
cltd
in
jo
lret
sbb
inc
xlat
xchg
sbb
pop
dec
in
mov
push
insb
mov
movsb
icebp
mov
mov
fdivrp
mov
push
xchg
popa
add
sub
adc
jo
jmp
dec
sbb
xchg
add
dec
jecxz
dec
lcall
data16
ficoml
loop
xchg
filds
push
jnp
stos
arpl
lret
je
or
adc
xor
loope
lret
les
mov
inc
jmp
pop
cmp
test
out
ficompl
cmp
pop
in
and
mov
mov
in
mov
enter
jecxz
arpl
adc
xchg
ffreep
in
test
fadds
ror
cmpsl
pop
aaa
sbb
inc
enter
xchg
jmp
xchg
push
adc
incl
ret
push
push
insb
cmp
jae
fsubrl
mov
sub
pusha
out
int
xor
outsb
loop
xchg
add
cmpsl
fdivl
cmp
insl
and
faddl
push
in
sub
pop
data16
rclb
adc
cmp
inc
dec
cmc
or
push
out
and
mov
add
jl
mov
mov
sub
or
hlt
test
stos
inc
ret
icebp
or
dec
loopne
roll
pop
js
subb
movsl
dec
test
leave
movl
push
stos
shrb
xchg
loope
adc
and
adc
ljmp
in
sahf
sbb
push
jmp
lds
and
cli
xor
cmpl
xchg
jmp
data16
lods
test
push
jmp
negl
jo
mov
mov
mov
adc
dec
fsts
add
cld
pop
lock
test
jne
push
leave
adc
faddl
fwait
mov
adc
das
in
dec
jl
pusha
andl
jg
push
ljmp
call
inc
and
ds
leave
pop
dec
inc
icebp
pop
cmp
clc
mov
cmp
mov
arpl
loope
add
adc
lea
inc
cmp
xor
cmp
arpl
in
or
adc
add
or
test
pop
push
mov
add
fbstp
cmp
mov
bound
sbb
std
dec
push
add
sbb
cmp
pop
cwtl
arpl
daa
sub
push
aam
adc
subb
dec
cwtl
mov
mov
sub
fsubp
inc
out
inc
popa
outsl
or
outsl
jnp
sub
mov
imull
push
cmpsl
orb
xchg
xor
imul
nop
xor
push
push
cmp
sbb
mov
cltd
in
shrl
cwtl
add
cmp
fbstp
mulb
enter
sti
xlat
sbb
dec
xchg
cmp
dec
repnz
push
or
xchg
cmpsl
or
mov
xlat
dec
jecxz
mov
aas
and
dec
pop
jp
mov
es
cmp
inc
enter
sahf
and
pop
add
jo
aad
fcmove
xor
sub
outsb
ret
and
and
gs
dec
xchg
jnp
repnz
pushf
xchg
insb
inc
imul
lahf
pop
rclb
out
ds
push
push
sbb
cmpsb
aaa
hlt
jo
or
ret
mov
lahf
sbb
ss
clc
sub
sahf
dec
rclb
mov
jge
les
ljmp
leave
into
insb
jle
jmp
test
mov
inc
xor
js
cltd
or
ss
shll
push
incl
cmp
enter
inc
mov
imul
popf
xor
inc
fnsave
cmpsb
and
fwait
inc
pop
scas
scas
add
push
pushf
and
dec
fiaddl
jns
or
mov
pushf
and
sub
adc
and
xchg
sub
mov
mov
inc
add
push
cmovp
adc
cli
mov
hlt
shrl
xchg
mov
mov
xchg
cli
mov
jo
push
std
xchg
dec
inc
push
jb
and
les
jno
mov
pop
pop
loopne
fdivrs
lock
push
cmp
pushf
xor
int3
cmp
scas
popa
ret
mov
dec
adc
testb
into
sbb
push
insl
jo
sbb
leave
push
cmp
xor
roll
ljmp
call
dec
loopne
xchg
sbb
add
xor
lahf
push
jnp
xlat
dec
rcl
les
test
pop
es
dec
mov
aam
leave
popf
cmp
or
rorl
scas
scas
in
in
test
ja
dec
pop
shrb
cmp
dec
jecxz
jo
mov
xchg
fsubs
sub
mov
sub
cltd
push
fcoml
insb
or
jae
pushf
mov
push
cmp
sahf
cs
mov
pop
xchg
push
or
jo
push
stos
fcoms
push
fisubrs
inc
repz
adc
mov
das
or
push
js
cmp
popf
sub
cld
fs
aad
jne
mov
dec
sarl
shrb
push
jb
lock
jge
xchg
mov
orb
mov
mov
xchg
pop
mov
call
cmp
fadd
mov
mov
out
or
pushf
sub
or
mov
je
cwtl
sub
dec
adc
scas
and
jmp
hlt
jbe
pop
call
cld
xor
sub
rcll
ja
push
es
xchg
inc
mov
inc
dec
pmuludq
push
or
push
mov
stos
jb
rcrl
fwait
push
loopne
loopne
dec
loope
cld
mov
ret
sub
inc
cmc
mov
lret
adc
cmp
pop
pop
sub
out
pushf
pop
sub
mov
ss
mov
jae
outsb
dec
pusha
loopne
and
xor
sbb
fwait
pop
mov
adc
sarb
es
out
mov
jbe
int3
and
mov
add
pop
cmp
or
xchg
dec
movsb
movsl
icebp
out
cmpsb
push
jge
cmp
int
call
sub
sbb
adc
xchg
mov
and
jb
gs
daa
push
dec
xchg
pop
test
jne
test
pop
cs
mov
faddp
adc
mov
mov
in
lock
daa
pop
cmpsl
dec
adc
inc
pop
mov
iret
test
daa
ss
adc
push
cltd
cmpsl
xchg
lea
adc
inc
repnz
add
or
shlb
aas
adc
bound
repnz
cltd
and
mov
cs
xor
cmp
pop
lods
mov
jbe
out
js
subb
enter
fcomps
fisubs
cmc
adc
pop
add
pushf
xlat
dec
int
pop
ljmp
cmp
mov
jg
ss
push
xor
mov
fldcw
add
mov
xchg
jg
bound
fdivs
test
cmp
and
push
push
pop
sbb
ret
xchg
mov
jbe
sub
out
mov
mov
dec
pop
mov
xchg
imul
add
dec
xchg
and
ja
push
insb
fsubl
jg
cmpsl
jns
dec
and
xchg
sub
dec
xchg
sub
shl
out
jb
lcall
inc
fnstcw
cmp
sbb
arpl
nop
daa
xchg
sbb
push
dec
or
adc
and
inc
out
dec
js
test
addb
mov
jmp
in
xor
cmp
mov
sbb
xchg
cs
jmp
adcb
mov
pop
outsb
rcrl
or
xchg
sarl
orl
dec
arpl
rcl
cld
push
popl
fisubl
mov
push
je
sub
cmp
jns
negb
jbe
lahf
mov
inc
dec
ss
mov
sbb
sub
adc
out
jnp
xor
or
push
add
cmc
pop
pop
clc
push
xchg
sub
sahf
xor
fldl2e
mov
dec
fldcw
sarl
shlb
test
jnp
cs
ficoml
sbb
inc
mov
jmp
loopne
data16
mov
or
pop
mov
add
cmpsb
push
jb
int
inc
fcmove
out
xchg
mov
ljmp
aas
mov
mov
lods
out
dec
fdivs
sub
cs
pop
dec
aaa
into
jnp
sbb
push
sub
hlt
rclb
ret
jnp
push
popf
push
nop
arpl
pushf
mov
cmp
or
pusha
jmp
lret
ss
mov
push
xchg
or
fs
push
out
sub
dec
lock
int3
in
idivl
ja
push
inc
clc
das
or
cs
push
mov
sbbl
rcr
ljmp
adc
or
sbb
in
pop
ret
rep
in
push
add
mov
movsl
mov
inc
lods
rcl
sub
add
aas
sbb
push
das
mov
hlt
in
xchg
stos
adcb
leave
mov
sub
rol
lret
popa
test
icebp
mov
adc
orb
or
mov
stc
or
and
sub
fcompl
cwtl
pop
sbbl
dec
lods
sub
imull
jno
xlat
push
rcl
xchg
pusha
mov
adc
mov
sub
xor
mov
pop
loopne
clc
in
jle
movsb
push
adcb
shlb
mov
insb
sbb
in
mov
push
les
inc
pop
pushf
jmp
test
jp
push
popa
push
xlat
pop
daa
dec
mov
clc
push
mov
cmp
mov
outsl
movb
cmp
lods
pushw
xor
push
xor
insb
popa
clc
cwtl
icebp
pop
cs
jmp
pop
fistps
mov
push
mov
mov
and
jp
mov
int
cld
lods
test
mul
out
movsl
mov
mov
mov
sub
adc
pop
xor
sub
adc
sbb
shl
arpl
inc
cltd
sub
incl
in
stc
xchg
jbe
iret
cwtl
or
mov
push
cmp
enter
cmpsl
out
int3
jno
mov
or
mov
push
sub
gs
xor
int
out
pop
and
and
negl
sub
fstps
mov
inc
clc
pop
push
pop
inc
test
ss
xor
jecxz
loope
daa
sub
add
add
lods
push
cmpl
arpl
sbb
xchg
push
je
mov
pushw
out
insl
push
ficoml
xor
and
dec
scas
mov
pop
adc
ret
pop
icebp
mov
and
adc
das
es
call
cltd
ret
pop
mov
pop
insl
xchg
jno
cmp
jg
cwtl
add
pop
sub
loope
clc
outsl
cmp
insb
aaa
call
inc
and
lods
or
jae
aaa
jne
pushf
fnstcw
inc
jns
or
jmp
push
xchg
lock
insl
and
pop
push
fisttps
js
mov
push
ds
clc
cwtl
inc
pop
fisubrl
sbb
adc
popa
enter
mov
dec
arpl
rol
pop
adc
es
mov
cs
rcl
aas
push
clc
aam
push
cwtl
lds
pusha
add
jo
loop
test
shll
mov
mov
in
test
cmp
inc
add
lods
adc
into
aas
repz
fimuls
add
push
ds
fwait
repz
xor
sti
in
and
pop
imul
lods
jae
dec
mov
test
sub
or
outsb
pop
cld
fsubrp
stos
pop
sbb
jecxz
cmp
outsb
push
jl
jge
adc
push
aam
mov
mov
fidivrl
mov
cmpsl
sti
not
push
lds
jns
add
fs
enter
pop
jmp
mov
mov
dec
int3
dec
dec
mov
cli
push
jl
cmp
inc
cmp
xchg
xchg
dec
dec
jge
adc
movsl
jg
xchg
mov
jbe
push
mov
xor
cmp
dec
ja
jg
mov
rclb
fwait
push
push
gs
push
mov
testl
mov
mov
fcomip
roll
push
sub
pop
fwait
outsl
or
insl
mov
xlat
lcall
add
jecxz
into
adc
xor
bound
in
dec
xchg
loope
dec
dec
ljmp
icebp
cmp
daa
mov
fsubs
inc
add
fstp
and
adc
and
xor
xchg
xchg
mov
out
in
adc
or
sub
jg
lods
cmc
sub
int3
add
fdiv
mov
pop
lods
cmp
xor
into
es
mov
leave
into
and
aam
and
push
mov
cltd
outsl
jno
test
ret
rcr
push
fisubrs
jl
add
popa
jmp
imul
or
stos
ret
jge
and
sahf
addr16
add
dec
rcrb
fdivr
and
arpl
ret
push
js
inc
pusha
scas
or
les
push
out
sahf
insb
lar
outsb
jge
jbe
xor
sub
jg
pop
andnps
int3
int3
movsl
sub
movsl
test
lret
mov
les
push
mov
jp
hlt
push
daa
test
inc
stos
pop
je
leave
pusha
cwtl
push
mov
dec
mov
xchg
test
jle
cli
pushf
hlt
mov
jo
adc
insb
pusha
cmp
jp
pop
sarb
outsb
repz
stos
roll
jge
ds
jne
add
push
loope
cmp
movsl
shr
mov
jb
mov
rcl
jno
loop
mov
insl
mov
shrb
mov
stos
or
sub
xor
test
mov
gs
or
add
and
scas
pop
hlt
filds
cmp
adcb
push
jp
aad
loopne
inc
inc
repnz
xchg
loopne
push
push
jp
xchg
mov
jbe
jne
cmp
cmp
in
std
shr
dec
inc
pop
pop
repnz
mov
cli
wbinvd
mov
mov
in
xchg
or
adc
in
in
icebp
xor
aas
data16
or
int
mov
cmpsb
pushf
push
pushf
pop
lret
gs
or
mov
cmpsl
and
cli
popa
in
dec
test
iret
xor
or
or
or
into
enter
out
subb
daa
mov
dec
lret
clc
xchg
outsb
in
or
enter
inc
fisubl
sub
cmpsl
stos
cmpsl
mov
push
repnz
test
shlb
cld
fcomps
vhaddps
sub
lret
or
mov
inc
inc
inc
pop
in
jp
dec
shrb
popa
add
stc
xor
push
push
test
mov
cs
pop
into
popa
out
je
shlb
je
or
and
inc
testb
call
or
lods
and
mov
test
xchg
add
push
pop
xlat
imul
jne
add
ret
inc
lods
ret
out
and
xor
mov
jp
dec
lds
insl
imul
scas
xor
in
sarl
shll
cwtl
xchg
mov
inc
stos
cmp
mov
dec
pop
sub
mov
daa
add
mov
inc
or
jp
cmp
push
ja
add
aam
fimull
aaa
jo
hlt
sahf
sbb
lret
xchg
mov
test
out
or
outsb
test
pop
push
jl
or
daa
mov
lods
mov
std
fildl
pop
add
sbb
jge
mull
sbb
sub
jne
pop
xchg
outsl
popa
mov
cmp
jl
orl
jp
les
dec
push
out
cmp
sbb
mov
mov
jne
shll
xchg
push
idivb
aad
jp
jb
xchg
push
mov
inc
test
sub
mov
movl
dec
pop
push
out
add
mov
sbb
fldcw
pop
mov
dec
leave
mov
jmp
xchg
sbb
pop
jno
mov
insl
rclb
add
leave
in
fwait
adc
mov
stc
xor
jl
xchg
bnd
ja
pushf
jmp
pop
push
push
lods
cmpsb
and
movsb
lahf
pop
ds
inc
addr16
adc
mov
cmpb
adc
or
ret
sub
mov
iret
fldl
repnz
cmp
push
loop
loop
and
dec
fdivrl
loope
int3
imulb
into
and
call
cwtl
enter
inc
adc
cltd
out
stos
adc
add
pop
les
mov
ret
rcl
and
enter
cmp
lcall
mov
push
add
inc
int
fdivs
inc
lret
adc
mov
mov
jge
repnz
sub
div
xorb
aam
mov
fidivrs
xor
dec
mov
mov
in
repz
cmp
loop
or
iret
ljmp
out
out
cwtl
shll
andb
cmpb
je
ret
cwtl
arpl
into
and
push
sarl
hlt
loopne
dec
stos
mov
mov
pop
or
mov
in
xchg
into
gs
insb
add
push
mov
test
mov
xlat
pushf
sub
int
rclb
push
in
and
jle
pop
lock
mov
sub
and
pop
lock
aaa
jns
xchg
sub
mov
call
xchg
sub
ss
lock
jg
sub
mov
and
xchg
xor
pop
testb
sub
mov
test
pusha
mov
js
or
adc
cmp
inc
dec
jmp
xchg
pop
sub
sti
cmp
mov
lcall
fldl
andb
mov
test
fs
xchg
and
jle
or
sub
fcmovnb
nop
push
mov
sbb
jo
xchg
sub
xchg
inc
stos
or
ltr
or
push
or
test
push
cmpsb
cmpsb
and
jge
or
in
jb
xchg
xor
scas
jle
loope
fcoml
push
leave
arpl
xchg
pop
push
leave
sbbb
dec
sub
push
rorw
cmpsl
push
pusha
into
jb
ja
sub
dec
fsubr
mov
pop
sbb
mov
fildll
push
cmp
lock
adc
cltd
rolb
mov
xchg
mov
fsubr
xor
push
cmp
cmp
jnp
ficoml
sbb
dec
test
jmp
pop
popf
mov
xor
jae
mov
in
pop
mov
lret
add
mov
imull
sub
das
lods
xchg
xor
jge
cld
test
rcrb
cmp
daa
xlat
test
inc
test
mov
loope
inc
fstps
mov
xchg
mov
mov
lods
dec
pusha
cltd
insb
pop
push
icebp
stos
sub
push
cmp
pop
test
js
popa
lods
fsubl
hlt
lods
adc
or
into
ja
in
xchg
pop
sub
adc
mov
push
call
sarb
ds
in
mov
pop
sbb
push
mov
pop
enter
mov
and
cmp
mov
lcall
add
cld
roll
xchg
addl
inc
ljmp
xchg
mov
jne
les
cmpsl
inc
push
test
call
push
movsl
shll
push
sbb
cwtl
flds
in
mov
pop
mov
sub
in
and
cmp
pop
sub
adc
add
or
negl
daa
jns
dec
nop
xlat
jge
xor
push
sahf
ret
fwait
inc
lahf
jg
in
and
dec
pop
dec
pop
repz
mov
jmp
aas
scas
mov
and
test
jle
inc
pop
sti
pop
sbb
mov
sbb
stos
data16
dec
dec
cmp
inc
lret
in
out
or
idiv
dec
jae
stos
dec
xor
aaa
adc
inc
fisttpll
mov
mov
adc
xchg
lock
cmp
push
push
leave
js
sti
jb
movsb
sbb
push
sub
or
jl
jl
xor
push
and
inc
addr16
jne
mov
cmp
popf
xlat
cmp
adc
and
sub
out
jl
lahf
movsb
dec
repz
imul
pushf
testb
adc
je
or
push
xchg
clc
or
rep
dec
movsb
jecxz
and
and
shll
or
xlat
inc
sub
and
addl
imul
fcmovnb
xchg
xor
xor
cmc
into
fdivr
push
into
mov
pop
rcll
sub
idivb
mov
mov
mov
and
cmpsl
xlat
lret
xor
fmull
and
sub
cmp
and
ljmp
xor
push
adc
imul
jo
mov
scas
hlt
jge
mov
dec
ja
stc
pusha
push
lock
in
loope
cli
mov
imul
mov
push
test
aad
fildl
dec
dec
daa
repnz
pop
sbb
xlat
pop
hlt
or
push
mov
push
fsubl
gs
mov
sub
mov
popa
enter
push
mov
scas
ss
sub
fnsave
mov
sub
xor
push
xor
mov
andb
mov
and
mov
cmp
adc
movsb
mov
rcll
test
pop
stc
test
arpl
out
ja
in
xor
push
push
fsubrl
xchg
dec
stc
push
aam
mov
cmp
sahf
lods
pop
pop
adc
in
test
test
mov
nop
push
daa
inc
mov
stos
mov
sahf
ljmp
or
pusha
xor
add
push
pop
scas
pop
loopne
push
or
cli
add
jns
test
decb
mov
mov
sahf
add
outsl
cmp
pop
pop
aam
dec
push
rcr
mov
inc
ljmp
xchg
sbb
add
lods
andl
rol
hlt
loopne
mov
mov
test
cmpsb
cmp
fadd
inc
sar
xor
add
adc
or
popf
stc
and
fstpt
mov
stos
int3
mov
add
sub
and
into
push
pop
adc
push
rclb
scas
inc
sar
pop
add
data16
mov
insl
ljmp
mov
pop
lret
inc
inc
push
and
std
pop
xor
add
jnp
scas
in
jl
xor
in
fdivrs
push
das
fwait
jnp
xor
test
cs
imull
hlt
sahf
insl
mov
ret
das
pushf
dec
lea
ljmp
in
sbb
ds
aad
sbb
push
neg
jb
inc
mov
xor
stos
mov
push
int
data16
mov
xor
aaa
repz
push
adc
jo
or
shlb
dec
inc
popf
lods
iret
in
ss
or
add
test
lcall
ljmp
pop
fwait
xchg
cs
inc
jmp
or
pusha
iret
cs
jge
pop
into
push
fstpl
sub
lahf
jge
mov
xchg
push
add
rclb
clc
mov
mov
cli
push
rcrb
lahf
sub
shl
mov
cmp
aaa
pop
xor
push
add
lods
lods
lods
push
mov
xchg
ret
cmp
jns
pop
dec
cmp
pop
push
js
push
icebp
repnz
pop
and
fdivs
inc
jge
dec
lock
pop
sub
xchg
imul
xchg
push
adc
sbb
leave
mov
inc
lock
aaa
insl
lcall
icebp
stc
lds
cltd
stos
mov
xor
mov
loope
sub
or
lret
iret
pop
inc
scas
dec
cwtl
sbb
add
ret
cwtl
mov
jne
lods
repnz
jb
jo
popf
cmc
inc
adc
xor
push
decb
add
mov
movsl
mov
jbe
fidivs
mov
dec
lods
inc
cmp
mov
stos
pop
lret
inc
or
push
sub
pop
push
sub
add
out
imul
rorl
inc
cmp
cmpsl
jns
pop
pop
xchg
jns
xchg
in
dec
push
mov
sub
or
lea
incb
xchg
or
dec
movsb
sub
scas
cmp
dec
mov
shrl
fdiv
pop
psllq
icebp
fnsave
pop
inc
rorb
cmc
shrl
xchg
xchg
rorl
push
stc
mov
pop
int3
out
adcb
imul
inc
call
lea
jae
cmc
mov
outsb
dec
les
enter
aam
add
cmpsb
cmp
out
into
xchg
fucomp
outsl
and
dec
fnstsw
out
cmp
add
adc
imul
xor
lods
fists
les
sarb
shrl
xlat
inc
faddl
scas
int3
mov
adc
inc
lcall
or
les
cmp
enter
or
mov
dec
add
or
into
fwait
push
nop
adcl
cld
ljmp
mov
push
cltd
or
and
jae
push
lock
xchg
jno
sar
jge
insl
sti
into
add
adc
test
fnstenv
jp
jne
mov
loopne
lock
lods
pop
fildll
sbbl
cli
xor
inc
sti
fsubrs
and
and
pop
pusha
adc
stc
adc
out
adc
std
pop
pop
sub
cmp
imull
addl
cmp
mov
sub
leave
or
pop
jns
cli
push
fstpl
repnz
rcrb
mov
jnp
stos
mov
iret
and
pop
push
and
fisubrs
cli
inc
cmp
mov
pop
adc
pop
outsl
push
mov
icebp
add
or
enter
mov
xchg
add
lods
outsl
push
fucomip
jb
loopne
lea
mov
mov
jl
sub
icebp
mov
lgs
pop
xchg
mov
dec
xchg
xchg
push
inc
fwait
out
jae
push
mov
lods
mov
or
jg
push
inc
ljmp
imul
movsb
mov
mov
adc
js
lods
and
mov
mov
test
pop
icebp
sub
sti
push
pop
push
aam
scas
adc
mov
add
in
cmp
std
es
mov
sub
cltd
inc
ficoml
mov
jg
enter
push
mov
loopne
xchg
inc
or
mov
call
jmp
cmpb
or
outsl
jecxz
rclb
sub
xchg
adc
test
addr16
test
in
pushf
sti
cmp
add
cmpsb
in
or
dec
stos
mov
in
fdivrs
xchg
lods
mov
fidivl
hlt
or
stos
mov
mov
push
xchg
sbb
jge
mov
sbb
dec
and
scas
cmc
mov
cmc
add
aam
inc
pop
jno
fstps
jle
sbb
jle
mov
or
jmp
mov
fs
mov
test
shl
xor
push
mov
call
cs
xchg
inc
pop
aam
push
inc
stc
push
jbe
fiadds
mov
push
jo
mov
popa
mov
fldt
cmpsl
push
xor
test
mov
faddp
leave
pop
in
push
ret
mov
dec
sub
adcl
test
jne
je
insb
cmp
test
push
jae
xor
sub
pop
adc
clc
fadds
lcall
jmp
out
repz
mov
flds
or
aaa
outsl
push
fiadds
jbe
iret
mov
fnstsw
mov
les
es
pop
fwait
repz
xor
dec
pop
iret
into
test
xor
inc
sbb
mov
movsl
push
push
lcall
sbb
scas
push
jno
mov
sbb
xchg
in
adc
push
xor
xchg
mov
push
cmp
xorl
inc
loope
xchg
push
call
cltd
and
push
mov
in
in
xchg
inc
outsl
jle
mov
mul
or
lds
xchg
or
xor
sbb
push
jbe
and
stos
movsl
jae
lret
dec
and
or
mov
xchg
enter
jo
in
out
lock
in
inc
cmp
push
push
ds
orb
sbb
or
ret
out
ljmp
jno
and
les
or
dec
movsl
out
add
pop
call
lea
cmc
js
cmp
hlt
xor
pop
mov
ljmp
push
xor
mov
andl
test
daa
xchg
cld
xchg
mov
stc
mov
mov
jp
arpl
rcrl
clc
movsl
repz
and
fstl
cmp
mov
jae
scas
ret
loopne
sbb
jbe
fwait
inc
xchg
mov
in
out
stc
jbe
cmp
imul
dec
ljmp
pop
jge
iret
stos
jne
xchg
das
jl
xor
dec
dec
add
rcrb
pusha
cmpsl
pop
cwtl
fdivrs
xchg
mov
data16
pusha
add
lea
in
cld
pop
jge
cmp
out
lea
fsubl
cli
cli
sbb
fldl
pop
loope
inc
cmp
fs
scas
outsb
jmp
jns
out
jb
repz
sub
fcmovnb
pushf
dec
enter
dec
pop
push
gs
pop
cmpsl
inc
subb
rcrl
fiaddl
inc
data16
fstpl
mov
jb
sbb
jb
or
sarb
outsl
push
jbe
mov
mov
or
xchg
push
fildl
xor
sub
movsb
std
mov
adc
mov
ljmp
mov
jmp
and
cmp
les
test
mov
or
shl
sbb
cmp
pop
cmp
nop
pop
or
int
arpl
ficompl
pop
inc
dec
cmp
dec
push
imul
loope
mov
popa
jg
fsubs
aad
push
xchg
add
clc
roll
lret
out
push
sub
aas
in
cmp
dec
cmp
lcall
repnz
sub
mov
cmp
scas
icebp
lret
mov
add
mov
shlb
in
repnz
and
int3
push
sub
fmuls
sub
in
popa
push
arpl
sbb
es
mov
mov
mov
cmp
xlat
jb
push
ror
xchg
mov
jmp
test
test
lock
sbb
inc
call
adcl
dec
ss
mov
cmp
xlat
shrl
in
rcrl
dec
dec
iret
mov
sbb
lock
and
shlb
ficompl
or
lret
add
sbb
bound
add
orb
daa
adc
outsb
add
and
xchg
mov
mov
scas
mov
and
inc
test
mov
imul
call
mov
mov
rcrb
push
repnz
pop
shll
rol
or
imul
xor
adc
jl
bswap
pop
jl
pop
stc
dec
popf
mov
xor
xchg
inc
dec
mov
test
or
in
mov
pop
inc
mov
ljmp
out
mov
idiv
daa
sub
rol
push
pop
fisubrs
mov
data16
cmpsl
mov
pop
mov
push
das
adc
std
cmp
ret
enter
mov
xor
es
adc
cmp
push
cmp
jl
cmp
loop,pt
add
mov
dec
mov
and
adc
andb
mov
push
mov
mov
shrl
mov
insb
sub
negb
hlt
sbb
add
or
icebp
mov
sub
imul
out
cmp
aaa
out
sti
pusha
cmp
or
mov
out
call
dec
xor
adc
mov
pop
sub
lods
mov
pop
adc
inc
pop
cmp
and
mov
adc
sahf
gs
lret
mov
or
js
test
test
or
outsl
mov
imul
and
sub
sub
xchg
pop
sub
push
and
add
xor
stos
xchg
xchg
fucomp
test
or
int
bound
jmp
adc
movsb
rorb
or
jl
dec
xchg
sub
mov
mov
aad
mov
js
mov
push
repnz
adcb
pop
clc
nop
addr16
pop
sub
mov
dec
xchg
out
in
sbb
xor
addr16
testl
mov
adc
add
mov
notb
fiaddl
aad
adc
out
adc
les
incb
or
push
sahf
dec
lahf
mull
jns
bound
int
negb
out
xchg
data16
or
ljmp
pushf
and
iret
xor
pusha
cmp
adc
or
adc
sbb
iret
frstor
inc
pop
jg
out
int3
cmp
mov
frstor
andl
adc
dec
jae
and
pop
mov
xor
xor
lahf
repz
nop
sti
jbe
xchg
test
mov
mov
lret
aaa
aad
fldl2t
jp
fstps
sbb
mov
fs
add
fsubrl
jecxz
in
lods
xor
sbb
and
movsl
xchg
push
das
aam
sbb
add
out
dec
in
sub
iret
sarb
sbb
inc
subl
mov
imul
adc
xchg
and
dec
imul
xchg
sub
mov
jle
daa
inc
fildll
mov
cmc
iret
int3
lods
add
out
xchg
imul
test
andb
adc
pop
dec
xor
call
mov
scas
call
shr
jecxz
insb
insl
clc
nop
inc
add
dec
lods
xchg
daa
adc
ds
out
outsl
jp
mov
push
sbb
cmc
lods
adc
gs
xor
cld
ljmp
lahf
mov
dec
mov
ret
and
fmuls
fisttpll
and
cs
jg
push
repnz
cmp
xlat
mov
cli
test
adc
es
loope
sub
xor
cld
xchg
lcall
dec
pushf
scas
jne
fsubrs
in
clc
mov
dec
pop
push
pop
ja
dec
sub
inc
adc
pop
dec
mov
xchg
stos
andb
add
dec
lret
pop
testl
dec
sub
mov
inc
clc
sbb
rcll
jnp
nop
fists
lea
inc
ljmp
lock
sub
jmp
loope
xchg
mov
xchg
and
aas
mov
push
das
jp
ret
dec
adc
sti
in
mov
add
shr
cmp
sub
pop
call
add
sbb
xor
cmpsl
loope
mov
in
std
inc
int
or
insl
lcall
shl
pop
pop
lcall
pop
test
or
nop
adc
pop
fwait
xor
and
xorb
pop
sub
repz
hlt
stos
jno
sub
int3
aaa
into
mov
int
push
stc
and
enter
sbb
aam
cli
repnz
push
int3
nop
xlat
jbe
or
loop
cs
cwtl
imul
sbb
cs
mov
testb
popa
jbe
out
push
inc
cwtl
ss
gs
inc
ficomps
repnz
popa
out
push
cwtl
jns
mov
push
pop
mov
cltd
sub
sbb
nop
pop
shll
clc
push
jg
inc
pop
cmp
sub
mov
mov
vpaddusw
or
jle
push
xchg
rorb
cmp
push
mov
in
inc
push
lahf
sub
jmp
dec
sbb
sub
sub
ja
add
lock
pop
outsb
xchg
lds
lahf
and
pop
shrb
arpl
jmp
rorb
jae
cli
cli
stc
je
xchg
cmp
pop
test
mov
push
sub
mov
mov
stos
lds
mov
inc
xchg
ret
enter
outsb
or
push
pop
xchg
cmp
and
inc
cmpsb
jae
mov
lahf
stos
cs
push
mov
push
insl
xor
jg
jge
comiss
cmp
and
cwtl
cmp
push
int3
bound
mov
test
xor
mov
mov
nop
lret
mov
clc
aas
add
mov
movsb
popa
inc
addr16
xor
lcall
jle
sbb
inc
fmul
arpl
mov
and
jge
shll
in
ficoml
jmp
mov
jb
adc
in
fs
mov
scas
pusha
negl
test
mov
mov
out
insl
mov
popf
mov
inc
mov
shlb
jb
add
pusha
scas
loopne
sbb
jbe
shl
mov
push
negl
push
jbe
insl
cmpsl
and
xor
ljmp
sub
test
xor
stos
outsl
and
jp
sbb
fs
popa
imul
cltd
xor
lret
lahf
sub
iret
add
pusha
fdivs
mov
pushf
xchg
push
dec
sarb
shlb
addl
add
xchg
test
lret
push
jne
stos
mov
mov
ljmp
in
repnz
aad
jg
pop
cmp
fidivl
pusha
push
testb
fidivl
test
ret
jmp
dec
xchg
cmc
jmp
mov
pop
test
pop
dec
push
jle
jne
lea
push
jl
rcrl
jg
call
jnp
sbb
int
pusha
jmp
dec
push
xchg
cmp
dec
pop
jge
mov
in
dec
push
fstpl
jge
or
dec
lea
cs
ds
cmp
mov
xlat
mov
test
loop
pop
push
shll
pop
gs
shl
pop
repz
jp
cmp
and
and
lldt
addr16
repz
int3
push
lock
lods
push
inc
mov
test
sub
std
add
pop
idivb
xor
arpl
push
sub
in
scas
icebp
mov
je
incb
fs
xchg
daa
test
jnp
rcll
xchg
jg
or
push
jo
pop
vpaddq
mov
cmp
out
xchg
mov
or
and
mov
lods
push
jns
mov
pop
xlat
push
xor
in
xchg
repnz
mov
sub
arpl
sbb
insb
push
das
jae
dec
daa
iret
scas
fucom
push
icebp
cmc
mov
inc
test
cltd
movsb
fisubs
out
xor
sti
pop
jbe
clc
xor
jg
sti
insl
xor
mov
dec
movsl
popf
lahf
lods
loope
stos
or
cmpb
cmp
lcall
pop
scas
and
test
cld
mov
push
sbb
mov
in
sar
lret
inc
fildll
jg
stos
lds
jle
nop
daa
adc
lods
rclb
mov
hlt
ds
jge
mov
cmp
xchg
pop
testl
lds
adc
add
fnsave
push
nop
or
jle
jp
in
xchg
adc
or
xchg
lcall
and
scas
repz
pop
xlat
outsb
js
cmp
xchg
cltd
cmc
mov
std
aaa
add
into
enter
push
shrl
or
push
sbb
jno
jnp
dec
loop
sbb
imul
subl
lcall
lret
int
stos
lea
stos
gs
push
jmp
mov
ja
and
js
lock
lods
popa
clc
ror
push
fs
mov
mov
or
pop
test
jecxz
jb
and
inc
int
pop
fbstp
sti
mov
in
lods
adcb
mov
pop
lods
nop
call
mov
pop
pop
sahf
push
and
aam
mov
pop
jge
mov
jb
cmp
je
lds
pop
cmp
aam
mov
imul
sub
bndldx
and
mov
movb
ja
jg
js
add
lret
or
fnstenv
dec
test
mov
and
fwait
mov
inc
cmp
js
dec
xor
jnp
fwait
xor
fdivrs
jae
aas
aaa
into
insl
addl
cmp
gs
es
cmp
pop
imul
ja
out
addr16
sbb
das
sub
pop
lret
jle
loop
in
in
and
add
fbstp
mov
std
xchg
icebp
dec
mov
ja
mov
fucom
push
xchg
test
gs
cmp
and
xchg
lahf
inc
fcom
mov
and
and
and
and
popf
inc
inc
fdivs
jmp
out
test
mov
pop
flds
or
loop
sub
jo
loopne
cwtl
adc
inc
fimull
ss
mov
sub
pusha
test
jge
or
call
xchg
sub
cmp
outsb
xor
pop
repnz
mov
pop
mov
fidivl
push
mov
sub
loope
inc
fldl
mov
pop
loop
mov
jp
dec
fidivl
push
xchg
test
cmp
mov
fcoml
or
or
pop
cmp
sub
scas
nop
mov
filds
in
pop
push
and
push
or
cmp
shlb
out
dec
pop
and
add
lds
loopne
neg
mov
jnp
adc
push
dec
mov
jbe
add
sti
xchg
dec
mov
push
call
popa
sbb
dec
mov
jp
add
push
in
bound
push
out
dec
mov
fnsave
es
dec
mov
pop
out
adc
outsl
and
xor
shlb
dec
outsb
and
gs
mov
inc
fcos
cmpsb
cmp
pop
mov
pop
mov
pop
std
sub
popf
pop
and
cwtl
push
jle
mov
jne
mov
les
stos
icebp
push
mov
inc
dec
insl
int
fwait
imul
testb
and
mov
aas
cwtl
outsb
mov
pop
in
jae
adc
jno
clc
mov
jno
push
movsb
cmp
lds
pop
fnstcw
cs
dec
mov
lret
dec
in
jle
mov
jge
pop
mov
sub
cwtl
dec
mov
cli
mov
insb
pop
mulb
jne
shlb
je
fsubrs
jge
push
test
popa
clc
xchg
dec
push
jmp
test
pop
in
shrl
xor
cmpsw
mov
cmp
jae
inc
mov
js
inc
lods
mov
sub
jns
lock
cmp
jmp
stos
mov
in
scas
inc
push
popf
je
stc
nop
lods
mov
xor
test
adcb
mov
pusha
neg
arpl
xchg
push
clc
popl
xchg
les
insb
shrl
pusha
inc
xlat
xchg
js
scas
lods
test
jl
test
jo
in
movsb
push
inc
cmpb
mov
xchg
sub
mov
mov
insl
jmp
mov
js
je
mov
int
jbe
pushf
cmpsb
addr16
xchg
jg
les
cmpb
mov
jae
addr16
lods
mov
outsb
fnsave
cli
xchg
cmpsl
sub
dec
cmpsb
insl
sti
xchg
mov
jb
cmp
jae
data16
je
push
test
jge
or
bound
xchg
fsubrs
imul
mov
jo
lcall
sbbl
jl
popa
mov
jecxz
lods
fsubrs
jge
jl
test
jg
addb
mov
sbb
mov
add
mov
scas
inc
jnp
add
callw
out
push
call
pop
inc
xor
ja
pop
or
aad
cmp
hlt
or
or
mov
jge
adc
aad
repz
sub
outsl
je
popf
dec
out
test
ljmp
or
ret
cmp
sbb
cs
cmp
or
xchg
fdiv
ret
test
adc
ss
pop
fistpll
and
addr16
inc
xlat
sarl
dec
nop
xor
int3
arpl
mov
lret
aaa
and
pop
call
aaa
pop
repz
stc
nop
pop
mov
sti
xchg
stc
xor
popa
gs
sub
divb
mov
xchg
popa
mov
pop
mov
cs
pop
xor
popa
les
clc
mov
push
lods
push
xor
sar
addl
and
push
outsl
dec
loop
into
nop
daa
incl
scas
inc
push
outsb
pop
lahf
int
pop
add
mov
dec
gs
cwtl
rcll
xor
imul
lcall
mov
call
sti
mov
dec
pop
pop
sbb
mov
lds
inc
pop
notb
outsb
js
pushf
xor
out
mov
testl
add
daa
pop
push
mov
xchg
ja
movsl
push
or
std
push
push
popf
xchg
add
aam
mov
stos
cmc
shr
es
mov
sbb
push
xchg
xchg
stos
jno
lods
mov
les
push
idivb
shr
insb
pop
jmp
jmp
xchg
filds
popf
or
mov
loop
jl
pop
add
mov
stos
push
test
test
rcr
sbb
js
std
pop
imulb
insb
or
and
mov
xor
cmc
adc
daa
fs
pop
jle
add
call
or
jns
pop
inc
pop
mov
jbe
mov
or
pop
hlt
ss
mov
sbb
addl
dec
aam
fdivl
icebp
pop
hlt
es
stc
sbb
jb
into
gs
sbb
enter
pop
out
mov
nop
insb
out
int3
arpl
movsb
das
fcoms
mov
inc
decb
cs
jmp
jge
movsl
cmp
mov
cmp
dec
jg
cmp
push
mov
lds
das
sub
dec
sarb
jbe
xorl
jns
xchg
cmp
cli
and
movsb
cmpsl
orb
in
push
mov
pop
fistl
fucomp
xor
and
xor
xor
inc
jns
sti
dec
repz
jo
mov
pop
hlt
xor
mov
xchg
stos
xor
bsr
jbe
fcomip
daa
call
mov
mov
inc
push
jmp
push
mov
mov
add
outsl
ret
in
xchg
xchg
adc
xchg
js
adc
dec
mov
or
dec
mov
enter
dec
int3
dec
dec
push
lret
dec
ret
lcall
sti
cltd
inc
and
push
sbb
or
cmp
cltd
repnz
or
fsts
cltd
add
outsl
icebp
mov
mov
adc
sarl
je
in
inc
sbb
enter
or
lds
xchg
pusha
mov
adc
xchg
lea
sbb
mov
pop
outsl
dec
shrb
lods
idivl
xor
jl
mov
test
mov
scas
testl
mov
mov
movsb
or
dec
imul
sbb
mov
jmp
adcb
inc
jg
push
push
push
sahf
jbe,pn
stos
xor
xor
mov
push
and
mov
or
fdivs
jnp
xchg
xor
mov
or
push
mov
mov
and
adc
inc
push
outsb
out
dec
cmp
dec
jnp
stc
nop
jp
scas
popa
dec
cltd
je
daa
sub
cmp
lahf
pop
mov
out
test
adc
xchg
or
mov
in
xchg
pop
lret
mov
loop
mov
out
in
test
dec
cwtl
test
inc
mov
pop
dec
mov
lods
jg
lahf
cmp
pop
stc
int3
outsl
jno
jo
push
add
xor
adc
mov
shrb
mov
sbb
mov
negl
push
in
mov
sub
dec
pushf
jo
push
test
jl
clc
xchg
popf
adc
sbb
inc
fwait
movsb
lcall
mov
out
enter
sbbl
sbb
outsl
mov
inc
push
jl
push
inc
pop
stc
arpl
loop
cmp
adc
adc
xor
in
adcl
or
push
xor
mov
cmp
xchg
cmp
or
insb
lcall
orb
pop
adc
pop
sub
jbe
sbb
out
dec
jge
cmp
jbe
movsb
inc
outsb
and
dec
cmp
nop
inc
pop
popf
das
mov
lods
or
cmpsl
dec
subb
pop
dec
dec
dec
sarb
cmp
push
and
and
dec
sbb
jns
in
cmp
lret
pushf
fidivs
daa
mov
aad
push
pop
leave
mov
out
sarl
sub
xchg
mov
arpl
and
std
xchg
xor
loop
rcll
inc
shrl
push
xchg
push
gs
fisubrs
and
mov
push
dec
test
add
fistl
pop
into
push
imul
jae
popf
stc
and
xchg
les
sub
divb
jo
pop
rcrl
loop
pop
outsl
sub
cmp
leave
inc
dec
pop
mov
pop
aas
mov
dec
insl
or
xchg
mov
sub
pop
jbe
cmp
or
in
add
jg
fimuls
pop
pop
stos
lods
sub
mov
push
jne
mov
gs
lods
jp
bswap
sub
int
inc
mov
xlat
addb
sub
out
push
es
fidivs
adc
aaa
cmc
js
push
popf
xorl
jge
cld
push
aaa
cmc
mov
and
jns
enter
das
loope
in
dec
mov
icebp
stos
pop
lret
xchg
push
mov
rolb
rorb
mov
sbbl
mov
or
jae
lcall
jno
jns
pop
xor
pop
repz
incb
mov
push
dec
loope
dec
aas
cmc
push
icebp
cmp
leave
sub
jg
or
test
jmp
cld
xchg
add
ljmp
lods
fstl
mov
adc
jecxz
sarl
out
xor
or
push
and
add
test
inc
insb
mov
cmp
jno
cmp
push
jae
fistl
daa
inc
movb
cmp
aam
push
test
pop
ret
pop
mov
shrl
out
data16
push
mov
fistpl
xor
ss
adc
subl
adc
stc
xchg
fisttpll
or
jmp
or
out
jns
add
cltd
mov
cmp
or
sahf
aad
xor
aad
mov
fnsave
in
jmp
pop
hlt
xor
jp
loope
add
mov
pop
sbb
imul
shrl
loope
cmc
inc
sbb
movb
fcmove
testl
mov
testl
ret
movsl
outsl
mov
pop
rorb
adc
shlb
push
data16
push
jno,pn
jl
cmc
mov
jno
push
andb
adc
je
ja
sbb
dec
xchg
lahf
mov
pusha
stc
nop
push
imul
inc
cmp
inc
scas
fidivl
stc
push
mov
mov
sbb
xor
xor
mov
movsb
leave
inc
or
lods
pusha
jp
daa
in
mov
mov
adc
fildl
xchg
jo
adc
sub
notb
fwait
xchg
xchg
out
xor
mov
pop
bnd
xor
and
sti
fsubrl
imul
mov
or
stos
or
mov
je
mov
fisubl
fnstenv
cmp
mov
sbb
call
mov
dec
daa
push
cmp
imul
insb
xchg
pop
cmp
jnp
mov
sbbl
lcall
cmpsb
mov
cmc
jg
test
mov
clc
cmp
scas
sbb
push
movsb
or
xchg
sbb
out
mov
cmpsl
repnz
push
fistpll
mov
je
iret
pop
sbb
adc
and
adc
jne
cwtl
das
in
xchg
adc
mov
pop
ja
imul
ss
dec
rclb
imulb
mov
incl
sbb
mov
sbb
cmp
adc
jb
jno
mov
aaa
jmp
insb
adc
out
out
out
andb
pop
aad
xchg
ss
pop
mov
dec
and
sarb
cld
cmp
adc
adc
push
xor
jno
outsl
inc
jge
in
pop
push
mov
sub
mov
ficoms
xor
or
mov
rorl
push
adc
or
subb
or
rcrl
push
sbb
stc
sub
cltd
lock
xor
or
jno
adcb
pop
int
ja
cmp
sub
out
add
lret
lret
cld
iret
and
pop
test
sub
popf
jo
out
pop
push
fdiv
lcall
cmp
push
into
nop
dec
das
fdivrp
sub
push
add
fisubs
jmp
cwtl
nop
imul
jnp
and
rcrb
mov
pop
cmp
mov
out
inc
sbb
fistpl
out
sub
out
mov
adc
or
cmpsl
ds
and
add
add
movhps
aam
jp
xchg
mov
pop
jb
xchg
sbb
cmp
mov
jmp
jge
shrl
sbb
fadds
rcrl
mov
ljmp
lods
pop
imul
xchg
jle
leave
addr16
iret
and
mov
ja
fnsave
push
sub
ljmp
shld
imul
incb
ret
mov
rorl
out
sub
stos
dec
lds
out
xlat
xor
ret
dec
in
and
scas
data16
das
xor
jg
fwait
xor
or
mov
out
adc
xor
xchg
js
jmp
xchg
xor
icebp
sub
ficoml
ja
adc
les
jbe
sti
xchg
jns
inc
lds
sarl
push
enter
inc
mov
sub
imul
pushf
nop
mov
bnd
mov
cmp
adc
push
and
pusha
pop
or
subl
jne
sahf
out
mov
adc
xchg
mov
mov
insb
imul
cmp
adcl
jecxz
movsb
xor
stc
daa
ficoms
sbb
testb
or
mov
test
lock
out
xor
mov
inc
pop
rorb
insb
adc
mov
sub
call
sub
sbb
xor
hlt
fildl
inc
mov
arpl
int
mov
xchg
lea
repnz
cmp
mov
into
cmp
call
pop
adc
sub
test
insl
movsl
dec
inc
mov
mov
jno
dec
inc
push
les
mov
fisubrs
push
mov
mov
js
lahf
lds
icebp
shlb
fisubrl
adc
fsubs
sbb
leave
les
mov
or
ret
sbbb
xchg
xchg
sub
add
jmp
fwait
addb
inc
mov
mov
fmul
push
xlat
faddl
loop
stos
pop
shll
sarl
or
dec
lcall
inc
out
cli
shrb
mov
faddl
add
and
push
xchg
inc
mov
imul
imul
mov
fldl
sbb
sbb
lods
pusha
lret
push
shll
bound
add
call
mov
xor
ja
lea
lret
inc
jne
push
inc
mov
int
xchg
sarb
das
fbstp
add
jg
movb
fistl
mov
cvtps2pd
pop
pop
jg
mov
jns
daa
inc
push
push
inc
xor
mov
or
mov
rcrl
mov
mov
adc
dec
std
stos
inc
das
pusha
cmp
pop
dec
xchg
xchg
pop
xor
add
cmp
sbb
jl
and
sbb
cmp
rorb
lods
inc
insb
mov
xchg
and
nop
xorl
test
and
pusha
scas
xorb
dec
repnz
fucomp
insb
test
in
sti
inc
mov
mov
inc
lods
push
push
cmp
mov
push
lret
lcall
lcall
sbb
ss
cs
mov
dec
pslld
xchg
dec
sub
xchg
xchg
mov
lret
pushf
fwait
pushf
mov
adc
hlt
sahf
imul
mov
cmp
dec
xchg
ficoml
pop
pushf
xorl
mov
mov
call
sti
xor
rorl
jecxz
nop
int3
cmc
daa
shlb
push
add
pushf
xor
xchg
mov
xor
and
pusha
gs
arpl
andl
push
test
add
test
or
test
fwait
xchg
add
or
mov
addr16
sbb
fnsave
jl
gs
push
sub
inc
jp
jne
pop
cmp
stos
inc
decb
lret
gs
push
mov
fwait
xchg
push
les
or
mov
les
adc
pop
sub
add
push
mov
sub
dec
test
dec
pop
jge
dec
inc
pusha
lds
arpl
ljmp
adc
dec
and
xchg
xchg
inc
lea
stc
fs
xor
fs
je
addr16
mov
sub
jns
mov
das
sub
push
mov
repnz
fxch
inc
mov
pop
loopne
icebp
fdivrs
xor
or
adc
fwait
es
cmp
clc
pop
test
mulb
adc
mov
lods
divl
xor
out
push
mov
and
in
adc
and
ficomps
add
lret
cmp
shl
rol
shlb
hlt
int3
push
int3
cmp
insb
call
fcoml
xchg
leave
les
insl
movsl
in
xor
cmc
mov
sub
jmp
pop
lahf
and
es
mov
lock
mov
mov
pushf
lods
inc
mov
dec
pop
pop
mov
push
dec
mov
mov
dec
mov
mov
dec
in
rcr
inc
ljmp
pop
adc
inc
in
rolb
cmp
sub
push
cmpsl
dec
pop
add
movsl
pop
leave
dec
xlat
sbb
mov
xchg
mov
lock
adc
inc
xchg
out
cs
sbb
xor
enter
insb
movl
fldcw
out
les
adc
push
pop
mov
inc
add
xor
mov
mov
add
lret
jecxz
adc
test
xor
add
add
daa
insl
xchg
fisttps
and
push
je
mov
clc
xor
pushf
icebp
mov
mov
adc
lea
clc
fldl
cmp
es
and
fisttpll
push
or
push
xor
outsl
xor
xorl
pop
aad
mov
sbb
xlat
mov
enter
andb
add
push
inc
xchg
lea
movsl
push
test
cltd
pop
or
push
out
mov
cmp
subl
cmp
sub
bound
insb
add
mov
cli
jb
or
cmp
adc
xchg
pop
in
and
inc
mov
push
clc
dec
mov
test
jnp
cltd
cmp
jo
scas
xor
push
jg
imul
icebp
scas
das
mov
test
push
cmpsl
ds
fisubrl
mov
or
cmp
mov
push
pop
add
inc
lea
in
dec
mov
sub
dec
inc
cwtl
insl
or
fdivrl
ja
inc
mov
outsl
push
fwait
xlat
dec
mov
repnz
shll
stos
push
or
js
xchg
pop
rclb
std
lock
push
insb
les
fucomip
sub
jnp
cmpsb
scas
cmp
push
mov
jbe
into
cmc
jmp
mov
loopne
dec
popf
lret
and
roll
xchg
sub
cli
add
mov
divl
jmp
test
lret
int
add
rcr
movsb
ljmp
sarl
cmp
aas
out
jecxz
sub
xlat
xor
out
push
mov
movl
rorl
and
xor
lods
rclb
jl
je
xor
loope
push
stc
push
lock
outsb
jb
adc
or
pop
inc
jmp
bound
push
addr16
mov
pop
cs
insb
jl
jne
xor
cmpb
cmc
ret
push
jnp
xor
dec
mov
dec
popa
clc
ret
mov
stos
xor
ja
pop
shlb
push
ficompl
incb
pop
pop
ds
and
stc
and
rcrb
pop
push
mov
xor
and
repnz
mov
loop
stc
in
ficoml
mov
push
mov
sub
pop
popa
dec
aaa
xchg
leave
inc
negb
adc
repnz
scas
inc
rcll
xchg
jbe
mov
mov
xor
pop
xchg
jge
sti
push
add
ja
xchg
dec
int
roll
repz
cltd
and
cmp
mov
out
inc
mov
push
fistpll
call
sub
or
int3
outsb
inc
fcompl
rclb
cmp
lret
adc
rcrb
or
aad
popl
iret
add
lret
iret
cmp
mov
ret
jo
sarl
lret
test
cmc
jo
leave
sbb
cwtl
nop
movsb
mov
cld
adc
imul
lcall
into
orl
aad
addr16
pop
fistps
adc
jnp,pt
addb
outsb
rclb
out
sub
fwait
xchg
push
cmpsl
outsb
movsl
sbb
mov
out
mov
mov
sub
out
loop
cmp
lods
sbb
push
fidivrl
xchg
mov
adc
cmp
in
std
xchg
pop
je
popa
aas
sbb
inc
loop
jb
adc
xchg
and
nop
jnp
mov
xlat
cmp
dec
test
mov
outsl
sub
cmp
push
fsubrs
dec
repz
rolb
push
lock
int3
pop
adc
xchg
dec
push
inc
fnsave
mov
imul
dec
das
mov
in
cmp
xor
mov
into
gs
fs
add
test
idivl
out
lret
sub
vmread
aam
icebp
sub
or
out
push
orb
lcall
mov
jmp
fs
pop
cli
out
and
inc
popf
mov
test
mov
inc
push
lcall
jl
jae
jae
dec
xchg
js
push
inc
in
cmpl
or
repnz
aas
or
jns,pn
decl
lds
dec
mov
cmp
pop
iret
rolb
xor
ret
shl
sbb
repz
loop
push
pop
or
cli
inc
decl
lar
sbb
and
dec
shr
fsubrs
push
push
out
xorb
jb
or
add
jle
arpl
les
out
jge
mov
mov
neg
cltd
sbb
or
jns
ret
pushf
out
into
ret
bound
fucom
jae
ret
fscale
and
jne
shrb
shlb
push
mov
mov
ds
lcall
arpl
shr
xor
cmp
std
sub
mov
sarl
je
lret
test
sub
fildll
xor
enter
fisubrs
shrb
daa
push
push
std
dec
inc
ljmp
aaa
xlat
push
sbbl
pop
add
xchg
pop
or
xor
rcrb
bound
cli
enter
jp
inc
xchg
mov
push
std
and
sbb
or
lods
jp
in
int
stc
lret
jo
push
ljmp
sub
ret
cltd
and
daa
sarl
lods
es
adc
xor
das
add
fisubrs
jne
rcll
and
jbe
pop
dec
stc
jbe
lea
sarb
push
popa
adc
sub
loop
dec
mov
jno
xor
andl
rcrl
pushf
dec
cmp
outsl
xchg
ds
mov
movsl
jno
pop
mov
les
add
cmp
xchg
hlt
outsb
add
decb
dec
mov
and
pusha
mov
xchg
ds
aam
mov
daa
fldz
test
xor
filds
xchg
mov
jmp
cmp
enter
cltd
jmp
enter
cmp
fistps
testl
rcl
out
jo
arpl
rcrb
or
xchg
jmp
sbb
loope
cmp
add
imul
data16
outsb
mov
or
mov
inc
pop
test
pop
gs
cmpsl
out
sbbb
stos
push
into
push
xorb
gs
int3
xor
mov
jb
je
add
test
sbb
incb
fwait
sbb
sbb
mov
cli
cmc
testb
loop
push
popf
mov
sti
popa
lods
mov
out
push
int3
into
shl
sbb
fiadds
enter
mov
mov
push
adc
xchg
movl
out
push
mov
cmc
movsl
cmp
out
adc
int
icebp
pop
adc
sub
xlat
xchg
shlb
mov
out
sarb
dec
mov
aaa
or
sub
add
push
cmp
daa
decl
mov
mov
rclb
dec
cwtl
subl
stos
jp
into
dec
cmp
add
aad
mov
adc
mov
lret
push
out
in
push
aas
adc
push
scas
jnp
pop
lods
inc
dec
rcl
sub
out
pop
loopne
push
adc
pop
sarl
pushf
mov
xorb
push
adcl
jl
insb
cmp
jge
push
out
sahf
push
mov
out
jne
dec
or
dec
xchg
inc
inc
ficomps
or
int3
xchg
mov
sub
pop
xchg
lea
pop
movlps
jno
mov
bnd
sarb
sbb
test
repnz
lds
sahf
test
mov
mov
out
pop
enter
in
out
ss
and
scas
or
ficomps
or
repnz
mov
cltd
or
cwtl
lcall
xchg
test
std
jns
fistpll
in
stos
dec
mov
jl
arpl
xchg
ret
mov
xchg
jmp
add
xchg
mov
in
dec
enter
cmpsb
jmp
or
outsb
sbb
mov
shrb
loope
lds
mov
dec
jecxz
adc
add
fmuls
push
ljmp
jne
jle
pop
mov
cld
xchg
nop
shl
jns
mov
mov
and
xchg
push
add
shlb
push
push
out
xchg
cmp
stc
test
or
lret
pop
and
pop
repnz
outsl
xor
or
leave
jmp
mov
sbb
cmp
outsl
cmp
testb
mov
pop
lock
hlt
inc
fisubl
in
testb
sti
outsl
clc
mov
sub
into
gs
mov
stos
xchg
or
mov
nop
or
mov
cmp
mov
mov
jnp
mov
adc
dec
in
xor
insb
add
mov
popa
sbb
call
inc
adc
enter
and
ds
pop
sbbl
outsb
lds
push
push
out
out
inc
loope
movsl
cmp
add
in
xchg
sbb
int3
cli
xchg
jecxz
sbb
int3
sub
std
mov
data16
pop
or
push
cmp
imul
int
roll
sub
ljmp
nop
mov
adc
xchg
xor
test
add
pop
testl
je
popa
pop
xchg
imul
jecxz
jo
xlat
ljmp
cmp
pop
bound
cmp
jnp
or
shll
dec
scas
orl
rcrb
xchg
outsb
fstpt
int
sub
or
xor
sbb
aad
stos
lock
pop
nop
cs
mov
xchg
enter
inc
int
push
mov
dec
addl
cs
add
jbe
pop
push
inc
mov
sbb
fnstenv
adc
rorl
mov
inc
mov
add
js
pop
sti
xchg
mov
mov
cld
jl
dec
mov
mov
jns
hlt
and
pop
cmp
rolb
xchg
out
aam
push
add
cmp
xchg
and
lahf
push
mov
push
cmp
xor
add
les
add
int3
fs
push
xchg
aam
pop
mov
out
cltd
xchg
out
cwtl
cwtl
jb
movsb
aas
dec
movsl
mov
pop
popa
mov
cwtl
gs
xchg
pop
mov
sub
divb
push
add
test
xchg
inc
jmp
in
jo
xchg
fildll
xor
jmp
sbb
enter
dec
and
dec
shl
das
mov
mov
loopne
mov
insl
jmp
xchg
inc
push
push
cwtl
push
push
add
push
mov
and
add
xchg
andb
out
stos
aas
push
jp
push
add
or
mov
dec
sbb
mov
orl
cmc
out
shlb
int3
mov
xor
fbstp
add
dec
iret
lahf
mov
imul
sarl
inc
sbb
sub
pusha
jns
pop
lods
xor
sbb
pop
mov
imul
fnstenv
add
in
sub
je
rorl
dec
in
sub
js
xchg
and
inc
mulb
aas
daa
push
test
out
into
imul
loopne
cld
pop
stos
inc
mov
and
dec
sbb
push
out
cs
fistps
inc
ds
adc
ret
ret
and
addr16
fs
fstl
push
test
dec
sbb
cmp
sahf
xor
or
scas
cmpsb
cmp
jne
jo
mov
loop
mov
inc
sub
lcall
shrl
fs
or
jmp
xchg
shrb
loope
fnsave
iret
and
pop
repz
or
scas
jnp
lcall
iret
pusha
test
fisttps
ror
lods
inc
fs
dec
fildll
ss
les
dec
or
adc
or
xchg
test
outsl
pop
sbb
adcb
adcl
cmp
notb
cmpxchg
mov
mov
je
divl
dec
adc
hlt
sub
xor
xor
or
push
js
and
or
test
ret
outsl
pop
mov
ja
adc
mov
sbb
mov
dec
xor
and
out
push
jge
or
jns
imul
call
cli
sub
jns
xor
ja
inc
or
lret
jle
mov
daa
xor
sub
das
cld
popf
inc
jb
cli
bound
xor
mov
addl
push
ret
cs
cmp
xchg
aaa
mov
mov
or
popa
addb
push
ret
and
cmp
arpl
test
pop
cmpsb
xor
jp
jnp
fiadds
aad
mov
mov
mov
mov
or
divps
aam
adc
sub
mov
mov
scas
filds
pop
push
ret
ret
cld
pop
and
xor
sbbl
mov
in
jo
pop
jns
jnp
out
pop
je
es
leave
xchg
and
ljmp
inc
sub
cli
or
xchg
cmp
xor
xor
inc
or
and
lahf
mov
xchg
and
sub
add
jmp
push
mov
leave
dec
dec
pop
add
lcall
push
aam
sub
jmp
add
lods
orb
push
stc
shll
inc
or
shl
pop
loopne
pusha
in
cmp
gs
aad
test
rolb
int
sub
xchg
xchg
mov
scas
orl
lods
clc
push
sub
xchg
inc
jae
jo
in
insb
les
test
xchg
inc
mov
mov
mov
mov
lock
int3
mov
mov
lds
lods
adcb
cmp
jb
jnp
jae
les
xor
dec
mov
push
add
test
mov
dec
ja
jae
icebp
outsl
cmp
lods
in
jae
stc
mov
leave
mov
push
add
scas
jl
sub
aam
mov
mov
cmp
sub
hlt
gs
aaa
mov
loope
add
jl
xchg
mov
rorb
loop
lea
lret
in
adc
enter
add
jnp
add
adc
pop
ss
jecxz
inc
cmovns
cmc
gs
xchg
sbb
inc
test
add
pop
mov
jecxz
test
xchg
pushl
or
and
inc
fwait
adc
add
mov
ss
jecxz
push
decl
fistpll
xchg
ljmp
xchg
sbbl
jmp
scas
sub
adcb
pop
clc
mov
movsl
imul
mov
pop
sti
cmpsb
dec
lds
stc
mov
cmp
and
imul
dec
or
mov
mov
arpl
jb
add
repnz
fbstp
scas
jp
sbb
push
push
inc
push
mov
push
ds
push
nop
jecxz
pushf
push
iret
imul
cli
pop
icebp
cmpsl
inc
rorb
push
cltd
rolb
adc
data16
push
jp
in
mov
cmpsb
inc
dec
nop
inc
insl
cltd
push
add
sbb
nop
inc
and
cmp
cmpsb
inc
aas
adc
cld
lcall
push
into
out
xchg
cmp
push
or
jle
mov
xlat
aam
mov
inc
xor
pushl
cmp
sub
ret
xchg
icebp
fs
and
shrb
cmp
jnp,pn
inc
shll
jns
clc
adc
movsb
inc
out
sub
jmp
notl
in
test
leave
jecxz
pop
leave
pop
xor
mov
mov
ljmp
pushf
arpl
xlat
jg
push
adc
stos
inc
inc
push
cmp
mov
les
rclb
sub
aas
push
clc
movsb
pop
negl
mov
lcall
jne
or
xchg
cmp
iret
xchg
daa
push
test
jbe
cmp
add
push
lea
dec
adc
fmulp
xchg
and
mov
scas
lods
push
out
cmp
nop
cmp
aad
or
cmpsb
cs
xor
add
and
sarb
bound
jmp
mov
push
pop
fistps
and
cmp
daa
fnstenv
lret
nop
mov
mov
inc
popa
pop
pop
add
jne
lock
cmp
cmpsb
and
mov
bound
jl
adc
mov
pop
add
mov
push
aaa
sub
mov
inc
pop
fisubrl
scas
ja
pop
add
xchg
cmp
cmp
inc
out
lods
clc
bound
sub
sahf
sub
cmpsb
gs
pop
push
sbb
aam
dec
mov
mov
jg
gs
adc
pop
add
mov
sbb
xchg
cmp
dec
psrld
scas
outsl
bnd
mov
dec
mov
mov
outsb
int3
fwait
inc
in
loop
mov
mov
rorl
xacquire
mov
gs
mov
adc
inc
flds
inc
or
pusha
xor
and
arpl
and
nop
dec
sbb
add
aad
push
pop
add
movsb
pop
cli
aad
pop
clc
jns
xchg
popa
addr16
pop
sahf
std
pop
add
xchg
inc
pop
cmp
insl
icebp
orl
mulb
stos
daa
inc
in
fs
add
cmp
inc
dec
add
dec
sahf
push
add
push
lock
insl
cmpsb
inc
ret
mov
ret
and
popf
sbb
dec
fdivrs
xor
sub
iret
fstpt
in
cmc
add
pop
adc
dec
aam
xor
das
pop
std
movsb
test
nop
adc
and
fimuls
dec
or
jle
jo
add
lcall
fnstsw
ja
mov
ja
stos
rclb
hlt
adc
mov
push
sbb
fidivrs
lcall
adc
aam
ljmp
movsb
push
sbb
pop
sbb
enter
into
xor
rep
sub
insl
dec
jb
jae
xchg
mov
or
push
stc
pop
lea
pop
jl
xchg
ds
repnz
imul
daa
push
icebp
gs
stc
pusha
mulb
es
mov
pop
mov
movsb
sub
jp
jne
and
sarl
mov
xchg
pop
add
cmp
int3
arpl
push
leave
vmwrite
cltd
xchg
cltd
shll
fwait
and
push
jmp
add
xor
cmp
test
xor
xor
inc
hlt
push
add
cwtl
loop
mull
xchg
inc
mov
movsb
xor
stos
jns
and
cmp
mov
cmp
pop
sbb
pusha
iret
test
scas
mov
out
ret
loopne
adc
pop
dec
xor
mov
lcall
dec
je
add
dec
addr16
mov
fldenv
arpl
les
jecxz
inc
pop
ret
cmc
cmp
sbb
cmp
inc
movsb
ss
out
push
andb
push
arpl
in
xor
xchg
ljmp
push
stc
pop
fsubrl
repnz
or
and
testb
push
mov
pop
cltd
test
aad
fldl
mov
js
out
nop
cmp
mov
push
jno
out
nop
data16
lds
and
iret
xchg
mov
cltd
clc
fsubrl
out
sahf
inc
lds
mov
jne
adc
lds
mov
inc
bound
cwtl
arpl
xchg
scas
cmpsb
sub
jnp
mov
lcall
or
xchg
cmp
call
jne
aaa
jae
jge
xor
imul
imul
cld
add
xor
mov
std
das
dec
or
xchg
inc
ljmp
xor
push
test
fimuls
pop
stos
daa
mov
and
fisttpl
cltd
or
shrb
mov
aad
in
xchg
xlat
xor
mov
stc
pop
jo
inc
push
les
popa
dec
sbb
or
lahf
aaa
mov
add
insl
lods
call
jae
mov
mov
clc
pop
hlt
add
pop
cmp
aaa
xchg
jge
insb
cmp
loope
test
aas
adc
pop
int
inc
les
shrl
xchg
subl
lret
push
lret
xchg
popa
pop
add
push
js
or
orl
jg
cmp
test
mov
inc
push
xchg
cmp
lret
or
adc
jns
pop
repnz
incl
repnz
adc
into
aaa
pop
clc
pop
push
pop
out
xchg
outsl
outsb
repz
outsb
fnstsw
add
mov
lods
bswap
jmp
or
dec
negl
cld
xchg
ja
or
push
cmp
cmp
adc
lahf
pusha
das
xchg
ror
lret
ret
movsl
sbb
xchg
mov
lahf
iret
pop
cmc
pop
add
pop
inc
or
mov
xor
into
mov
dec
or
fistl
push
pop
pusha
mov
orb
cmp
call
mull
sarb
mov
aas
pop
sbb
push
arpl
les
clc
or
mov
inc
push
roll
nop
mov
mov
shll
mov
mov
push
stc
sub
cmp
ljmp
sbb
pop
xchg
sti
pop
call
push
clc
pop
in
xor
daa
push
jle
push
xor
jp
addr16
mov
lods
push
jg
xor
sahf
xor
and
mov
mov
push
out
xorb
jns
xor
cmp
cli
push
data16
jge
cmpsb
jnp
fdivrs
dec
or
inc
adcb
movsl
addr16
sbb
stos
cmpsl
aaa
into
fmul
jecxz
and
orl
mov
mov
and
add
rclb
inc
sub
xor
lods
sub
inc
repnz
mov
mov
xchg
inc
push
mov
dec
into
mov
outsl
adc
inc
nop
es
xchg
push
adc
jle
adcb
sbb
mov
push
sbb
and
fwait
ret
fdivrl
das
sbb
mov
aaa
int3
xchg
mov
jnp
xor
stos
sub
cmp
pop
std
lahf
cmpsb
loop
repz
sub
clc
scas
sub
fisubl
mov
pushf
cmp
cmc
es
icebp
es
cmp
ffreep
negb
add
scas
add
pop
inc
sbb
jnp
addl
fisttps
leave
aaa
cmp
shll
mov
or
sbbb
mov
jnp
nop
cmp
imul
push
ss
mov
test
fildl
or
jle
pop
pushf
inc
sbb
mov
mov
mov
imul
fnsave
movsl
aam
vmovq
xor
orb
add
mov
mov
out
imul
cli
jae
rolb
fldl
push
cmpsl
cmpsl
test
mov
fisttps
cld
pop
lds
sti
loope
shl
mov
pop
add
scas
mov
sarl
mov
cs
pusha
push
cmp
aam
lods
jbe
cmp
push
stos
sub
addl
ret
inc
adc
mov
adc
sbb
insl
sbb
scas
sub
inc
pop
stc
out
push
in
adc
adcb
ss
dec
dec
xchg
fwait
or
cmpsl
xchg
std
gs
mov
mov
inc
mov
push
divl
jb
arpl
rcr
inc
push
cli
in
or
and
sbb
push
imul
aam
push
cmp
addb
int
gs
add
inc
jg
dec
pop
mov
pop
testl
pusha
jle
xchg
outsl
pop
add
movsl
sub
xchg
popa
imul
sbb
sbb
sbb
jbe
sarl
data16
adc
inc
imul
addr16
mov
je
mov
xor
pushf
mov
imul
mov
push
mov
sub
cmc
in
add
add
inc
push
dec
or
outsl
out
sbb
mov
int
and
adc
sub
jne
insl
lea
mov
mov
js
jo
adc
add
cmp
loopne
xlat
jp
cmc
cwtl
inc
sub
shlb
aad
neg
mov
in
xchg
inc
inc
mov
mov
in
cwtl
in
addr16
sub
loopne
jl
push
decl
insl
nop
jmp
sub
ret
jbe
orl
mov
addr16
movsb
sub
ja
arpl
leave
pop
les
sbb
mov
mov
pop
jnp
into
xchg
inc
imul
std
enter
push
orb
pop
incl
aad
sti
out
cmpsl
sub
cmpsl
aaa
lcall
out
jno
mov
xlat
jns
adc
pop
or
pop
adc
pop
adc
sahf
out
nop
rorl
rcr
test
popf
jl
mov
adc
imul
mov
dec
or
gs
fisubl
lods
daa
push
add
inc
daa
lret
mov
test
mov
inc
fldcw
or
jae
push
sarb
sub
ret
sub
push
cwtl
and
sbb
dec
sbb
mov
lods
inc
or
sub
sub
enter
and
enter
dec
adc
lea
or
sbb
aaa
pusha
cmc
fs
pushf
test
mov
fdivr
jo
or
cmp
mov
mov
jb
pop
push
mov
sbb
sbb
sti
pop
shll
mov
test
dec
mov
ljmp
dec
dec
out
cli
mov
orl
cmp
daa
shrb
pop
ss
adc
lahf
push
orb
add
popa
jmp
jmp
movb
jns
sti
jg
fidivrs
push
xchg
inc
cmc
aas
aam
mov
aam
mov
cmp
push
test
push
in
es
sub
push
jge
popf
add
bound
js
sub
cmp
insl
add
push
mov
xchg
sarl
test
or
negb
pop
sahf
loope
xor
mov
imul
pop
sbb
lds
orb
jle
pop
mov
or
sbb
dec
sti
inc
inc
adc
in
out
inc
sub
ret
and
sbb
sahf
icebp
in
mov
push
xlat
out
imul
or
cwtl
pop
clc
call
clc
test
mov
in
out
mov
hlt
flds
out
jnp
pop
std
stc
push
push
in
insb
repnz
mov
dec
or
gs
jp
jle
stc
inc
jp
mov
sahf
hlt
pop
adc
dec
pop
cld
sbb
rolb
cmpl
lods
xchg
fs
adc
sarb
fldenv
mov
loop
dec
adc
hlt
xor
jae
inc
pop
ljmp
cld
adc
jno
in
inc
xor
xor
jge
and
into
orl
insl
jmp
sub
mov
fs
test
jle
cmpsb
fnsave
movsb
loope
or
lock
mov
cmp
mov
pop
xor
pop
out
bnd
stos
pop
testb
xchg
mov
sub
cltd
mov
mov
xor
jnp
popf
mov
cltd
data16
xchg
jne
xchg
mov
or
fcmovu
pop
push
pushf
or
pop
sti
rolb
aaa
jmp
int3
fwait
std
mov
cmp
dec
int
lods
xor
mov
clc
cwtl
and
jmp
push
add
mov
sub
fistps
push
call
jb
out
jbe
arpl
xor
ret
fldenv
scas
xor
xlat
js
jno
inc
pop
test
mov
dec
jge
pop
popf
sbb
pop
inc
flds
movsb
add
jne
mov
les
insb
repnz
xchg
gs
js
loope
xchg
cli
fnstsw
fidivrs
pushf
add
ds
movsb
pop
adc
mov
mov
fidivrs
pop
rcl
push
push
add
pop
and
leave
cltd
ds
pop
clc
rcr
repz
insl
or
pop
orl
xchg
push
cli
inc
pushl
push
xchg
fadds
jnp
mov
cmp
cltd
cmp
sbb
mov
hlt
gs
mov
loop
cltd
loop
inc
mov
movsb
mov
mov
xlat
outsb
cmp
and
popa
jno
fistl
je
popl
add
jns
out
aaa
jg
mov
stc
push
movsl
fcomip
sub
repz
arpl
mov
jl
mov
int3
mov
xor
loopne
popf
add
loopne
lret
pop
xor
sub
sub
fs
in
lahf
cmp
lret
subb
jmp
daa
mov
divb
in
int3
mov
ljmp
rorl
lahf
add
xchg
cmp
fcoml
cmp
lds
lods
xor
xchg
and
out
in
arpl
arpl
decb
dec
daa
xlat
jl
sahf
dec
adc
js
jbe
jecxz
and
aad
ja
add
xchg
in
jbe
out
stos
xor
mov
cwtl
dec
pminsw
shlb
orb
in
jbe
dec
lcall
ljmp
xchg
mov
mov
roll
scas
out
arpl
stc
mov
inc
or
scas
mov
xchg
fiadds
enter
loope
test
mov
movsl
and
pop
and
xchg
orb
or
imul
aad
ret
mov
movsl
adc
psrlw
xor
xchg
push
stc
adc
inc
dec
adc
negb
cwtl
stc
arpl
stos
xor
iret
dec
rorb
ret
xlat
fisubl
fadd
test
sarl
mov
cs
inc
arpl
dec
lret
movsl
xchg
sub
adc
into
mov
push
push
add
xor
xchg
sbb
je
fidivrs
push
cmpsl
iret
test
mov
loope
xor
sub
adcl
testb
jns
lahf
into
mov
fsub
jno
lret
cli
jns
stos
sbb
xchg
lods
mov
lcall
cmc
stos
xor
sbb
gs
push
or
push
mov
scas
inc
or
jge
and
dec
sub
cmc
cltd
notl
loope
mov
push
sahf
xor
mov
cmpsb
scas
mov
and
cmp
or
sbb
andb
iret
push
mov
xor
es
mov
and
dec
loopne
xor
insb
mov
xor
mov
and
loopne
jmp
sti
dec
psadbw
push
xchg
in
pop
out
jbe
lcall
pop
ss
in
and
ret
sub
mov
sub
inc
inc
or
or
test
xor
xor
js
jl
add
shll
dec
mov
jno
in
mov
daa
cmpsl
pop
inc
sahf
inc
dec
mov
and
pop
jns
into
nop
js
cmp
sub
daa
or
pop
cmp
sub
xchg
aas
push
shlb
mov
cmpsl
daa
dec
into
push
rorb
in
mov
xchg
in
fnstsw
ret
pop
xchg
inc
enter
cmp
dec
or
and
gs
stos
and
nop
and
inc
leave
cli
pop
mov
mov
mov
sub
es
pop
aas
cmp
scas
call
inc
adc
inc
ljmp
filds
cmp
dec
andb
outsb
push
loope
push
sub
mov
test
pop
inc
or
dec
icebp
pop
aas
add
testl
pop
jmp
js
add
mov
cmpsb
orb
in
jmp
adc
std
mov
clc
jbe
movsl
xor
in
lcall
outsl
leave
cmp
cmpsb
mov
pop
out
mov
in
insl
orl
mov
mov
cmp
fdivrs
aad
js
sbb
mov
pop
add
in
mov
nop
sub
push
lds
or
pop
jb
jb
ja
outsw
lock
stos
arpl
test
sbb
frstor
xchg
call
jmp
icebp
fs
icebp
call
adcb
mov
sbb
shlb
inc
sbb
xchg
test
cwtl
inc
add
cmp
inc
dec
and
inc
mov
push
cwtl
xor
mov
fiadds
cs
popa
imul
lcall
pushf
lret
mov
shrl
sbb
jno
or
arpl
inc
aaa
lcall
add
adc
fiadds
lcall
out
inc
dec
cli
data16
lods
xor
sbb
outsl
or
xchg
jmp
pusha
push
hlt
xlat
xchg
mull
push
es
add
push
popa
out
mov
add
mov
mov
xchg
dec
xor
mov
jb
stc
pop
pop
imul
cmp
mov
push
add
mov
ret
shll
mov
xchg
inc
fadd
mov
sbb
adc
lret
xchg
adc
inc
addr16
imul
insb
jbe
push
int3
adc
dec
cmp
mov
mov
xchg
jno
aam
pop
data16
push
jp
sbb
fcoms
les
les
sbbl
xchg
cmp
movsb
mov
xchg
jp
lret
inc
adc
rclb
xlat
je
add
inc
imul
sub
das
mov
cmc
bound
mov
jmp
mov
cmpsb
nop
daa
fadds
scas
inc
stos
xlat
stos
xor
mov
stos
and
out
push
fwait
aaa
cmp
jecxz
cmp
and
rclb
lahf
ss
js
pushf
sub
pop
rcll
sub
js
mov
daa
jp
xchg
outsb
faddl
fadds
int
add
ds
jp
rclb
jbe
mov
and
pop
mov
test
adc
mov
psubsw
out
inc
or
cmpsb
insb
xchg
out
jne
jge
dec
out
dec
adc
clc
mov
pop
rol
mov
scas
jnp
mov
mov
stos
pop
add
test
cld
xor
das
dec
es
jno
fwait
cmp
fmulp
filds
sub
lret
xchg
cmp
sahf
mov
stos
fidivrl
icebp
stc
pop
push
push
dec
push
xchg
mov
andb
fidivrl
cmp
xchg
jl
mov
test
insb
out
pop
stc
add
push
je
stos
sub
insb
test
pop
mulb
aas
lret
mov
xchg
inc
in
mov
repz
and
mov
cs
stc
test
test
jmp
cmp
jle
xchg
aaa
outsb
or
xchg
sub
add
pop
mov
push
iret
pop
add
pop
cmp
in
mov
test
lock
movsl
scas
sub
mov
fs
sub
stos
add
fistpll
pusha
sub
sbb
pushf
or
ja
sub
imul
push
mov
pop
add
in
xor
dec
std
negl
or
cmp
fiaddl
dec
push
sub
xchg
popf
repz
adc
pop
mov
push
jle
xchg
jne
scas
xor
int3
or
imul
xchg
clc
je
mov
loop
rcll
mov
lds
in
sub
arpl
fnstenv
add
push
stc
push
fwait
dec
pavgb
sbb
xor
jb
out
aad
shl
jle
push
incb
push
push
jmp
mov
lahf
lock
xor
jp
test
into
fstl
inc
rcll
mov
cwtl
fdivrp
pop
mov
outsl
ljmp
adcb
mov
xor
ss
jne
lcall
mov
fucomip
les
or
cmpsb
xor
out
adcb
stos
jbe
xchg
jns
imul
jno
jl
insb
mov
scas
das
mov
ret
out
imul
imul
xchg
bound
mov
std
pop
out
cwtl
aaa
add
lods
sub
mov
test
push
mov
or
mov
fisttpl
push
cld
sahf
xor
mov
leave
addr16
roll
ds
jnp
in
insl
mov
mov
adc
or
in
sub
divb
stos
aad
mov
mov
jge
mov
les
jo
in
insl
leave
insb
aad
lcall
lret
mull
pop
pop
cld
scas
sbb
pop
mov
movsl
dec
or
hlt
sub
negl
fsubrl
push
add
add
mov
fdivp
data16
dec
or
add
dec
call
lock
mov
outsl
mov
lahf
ss
stos
pop
add
or
pop
pop
mov
iret
add
repnz
cmp
mov
mov
stos
xor
xor
jne
popa
sub
jns
ss
mov
push
jae
adc
sub
fldl2t
xor
pop
hlt
mov
popa
push
push
aam
lods
mov
dec
cmpsb
sub
sub
lods
outsb
jmp
sbb
sarl
test
sbb
cmpsl
fidivrs
je
jle
pop
cli
call
testl
adc
dec
or
dec
jle
dec
clc
mov
rcll
test
icebp
fnstcw
jns
scas
push
sahf
inc
jmp
data16
xor
push
add
hlt
scas
push
leave
das
rcr
movsl
aas
stos
xor
lea
int
jb
out
dec
fld1
iret
xchg
in
or
push
into
add
clc
wbinvd
push
les
cwtl
inc
pop
pushf
pop
lret
xor
cmc
pop
int3
xorb
jnp
and
mov
enter
arpl
ja
flds
stos
and
xor
sbb
inc
insb
push
adc
gs
fiadds
jae
or
lods
insb
lods
data16
rolb
jns
cmp
mull
sarb
lock
sbb
sti
addr16
mov
mov
pop
stc
movsl
adc
pop
mov
adc
push
bswap
cmp
cmp
dec
std
into
mov
xchg
mov
test
out
data16
aad
pusha
or
xor
jecxz
mov
mov
insl
in
test
ja
push
sbb
or
dec
lret
xor
jl
push
lods
inc
xchg
inc
sbb
mov
cmp
add
cs
add
repnz
in
fists
mov
stos
mov
cmp
gs
mov
mov
pop
jmp
mov
je
push
lds
xchg
loopne
pop
test
mov
jg
std
xlat
outsb
xor
push
popf
cld
push
xchg
cmp
hlt
pop
push
jge
mov
and
inc
jns
mov
bound
rcrl
shll
sub
sbb
inc
push
add
aad
es
push
and
ja
scas
sub
insl
xor
jp
push
cli
fcmovnbe
xor
adc
cmc
cmp
cli
ljmp
mov
sahf
in
sbb
xchg
cmp
rorb
inc
lahf
inc
xor
sub
jle
in
outsl
dec
insb
fs
popf
cmp
xchg
int3
sub
jp
mov
insl
and
je
pop
enter
popa
push
dec
test
pop
arpl
outsl
sbb
lret
out
fdivl
es
dec
adc
and
mov
cmpsl
xor
adc
inc
fdivrs
pop
adc
jb
cmpsl
inc
fwait
aas
cli
mov
mov
lods
mov
pop
mov
mov
cs
dec
das
mov
xchg
dec
adc
testl
fsubs
dec
into
jne
adcl
loop
hlt
dec
fidivs
out
and
inc
cmp
js
mov
imul
dec
repnz
hlt
pop
xchg
scas
inc
enter
mov
fs
lods
aaa
fwait
adc
inc
jg
mov
mov
mov
adc
mov
shrl
addr16
xor
hlt
sub
push
jle
xor
inc
mov
ljmp
mov
dec
in
xchg
xchg
cli
push
imul
jp
cmc
rcl
test
rol
cmp
cmpsl
fisubl
in
sub
sti
pop
adc
xor
pextrw
scas
sub
mov
popf
aaa
in
ds
sub
aad
fldcw
subb
loope
fsubrl
cltd
jae
lock
cmpsl
cmp
rclb
mov
inc
call
jns
pusha
stos
arpl
dec
out
add
arpl
or
mov
inc
push
inc
fisttpl
xchg
lahf
dec
adc
push
cwtl
aaa
or
push
test
rolb
xlat
mov
or
jno
mov
subl
mov
and
cmp
sub
ret
test
sbb
mov
movsl
mov
xlat
js
movsb
lods
pop
stos
inc
mov
fwait
inc
pop
fsub
addr16
in
jp
inc
or
insb
jmp
sub
add
test
sub
iret
outsb
notb
pop
add
mov
addb
sbb
jne
adc
or
xchg
inc
xchg
sbbb
enter
mov
fisttps
pop
push
xchg
pop
stos
xor
adc
mov
inc
cmp
mov
mov
scas
into
adc
flds
or
xchg
ds
push
and
add
sbb
xchg
ds
dec
sahf
aas
icebp
ja
add
sub
nop
adc
es
and
pop
push
mov
nop
mov
lods
or
es
xchg
xchg
ss
jmp
sti
ss
lods
push
jae
mov
lods
loop
rcrb
movsb
jne
fisttps
mov
cli
pusha
sbb
cmpsb
sub
dec
arpl
mov
outsl
repz
scas
xor
movsl
dec
movq
add
insl
push
lahf
cld
ja
rorl
adcl
dec
aam
lds
shrl
mov
out
xchg
add
int3
pusha
and
push
mov
aad
aas
dec
loopne
add
addr16
push
jnp
mov
test
mov
dec
xor
aad
sbb
jbe
movsl
repz
xor
xchg
clc
adc
mov
das
jnp
cmp
pop
popf
dec
in
sub
pop
out
imul
jnp
or
inc
mov
je
xchg
sub
xchg
cmpsl
ds
push
jmp
iret
cmpsw
cmp
jp
enter
popl
cwtl
rcrb
mov
adc
rcrl
dec
fcomip
test
mov
incb
jns
or
sbb
sub
cmp
jge
dec
scas
or
pop
cmp
pop
loopne
xchg
and
mov
xchg
in
cmpsl
add
sub
rorb
test
push
sahf
sti
ja
sub
dec
xchg
sub
adc
dec
shll
pop
cwtl
hlt
shrl
mov
out
xchg
add
lret
pop
and
sbb
ds
loopne
add
hlt
xor
push
jnp
mov
test
stos
cltd
xor
xor
mov
das
mov
pop
mov
jbe
movsb
repz
das
std
xchg
popa
notl
test
sbbl
mov
das
jp
cmp
push
pushf
dec
in
daa
push
out
pop
out
imul
jp
or
inc
mov
jae
xchg
sub
xchg
cmpsl
ds
and
pop
sbb
cmpsb
cmp
jp
out
test
lea
cwtl
mov
fistps
mov
insl
sub
sahf
xor
loopne
sbbl
adc
inc
aad
adc
xchg
pop
mov
cmp
jnp
dec
lods
or
pop
cmp
shrl
pop
loope
nop
and
mov
call
movsl
add
mov
sub
roll
test
icebp
fldcw
add
mov
lock
xchg
sub
inc
mov
lds
shrb
mov
lock
add
lret
mov
jmp
ret
sbb
ds
cmp
pop
hlt
xor
jnp
xchg
xchg
fidivl
cmp
mov
sub
dec
aad
sbb
ja
mov
xchg
pusha
cmc
adc
mov
das
js
cmp
add
es
out
push
in
imul
jns
or
jno
xchg
sub
xchg
cmpsl
les
mov
push
in
pop
pop
jae
push
push
out
xchg
mov
cwtl
mov
fstpl
mov
insb
sub
popf
das
cmp
loope
sbbl
inc
sarl
add
es
cs
mov
cmp
jns
dec
stos
or
pop
cmp
shrl
pop
loop
pop
repnz
add
mov
les
vandpd
in
cmpsb
pop
repnz
push
jns
sub
jge,pn
test
inc
sahf
mov
shlb
pop
xchg
icebp
shrl
mov
jnp
inc
icebp
mov
add
enter
mov
sub
fistpll
dec
loop
add
xor
jl
test
xchg
adc
movsl
cmp
stc
mov
pop
mov
js
mov
call
and
sbb
jbe
cmp
add
dec
in
and
insb
add
ja
stos
cmp
xchg
sub
nop
test
ret
dec
push
jecxz
pop
adc
ss
push
mov
cltd
mov
mov
imul
pop
mov
pop
repz
push
inc
sarl
add
pop
xchg
and
das
push
mov
cmp
test
lret
cld
pop
jecxz
mov
add
mov
ret
repz
ds
adc
in
movsl
pop
repz
data16
add
mov
cwtl
das
jl
test
dec
iret
pusha
pop
xchg
lock
and
mov
add
cmp
and
sbb
jecxz
pop
cmc
das
lea
mov
loopne
pop
adc
cmp
sub
insl
jl
loop
or
hlt
mov
sub
adc
mov
xor
je
cmp
add
pop
icebp
push
call
js
test
lret
cld
mov
dec
dec
loope
pop
adc
push
xor
jnp
icebp
mov
xchg
cltd
mov
fldenv
mov
push
lds
mov
pop
repz
push
imul
iret
jp
add
and
cmpsl
ds
mov
cmpsl
or
pop
cmp
aam
cli
pop
in
lea
repz
add
lahf
add
mov
icebp
push
aas
adcl
in
movsb
pop
hlt
aad
insb
add
mov
cltd
xor
test
dec
into
pop
pop
nop
out
aad
and
repz
fwait
ss
adc
mov
das
sbb
dec
in
cld
pop
cmc
sub
dec
jl
sbb
and
mov
cmpsl
ds
mov
pop
mov
jp
pushf
hlt
mov
sub
cwtl
pop
out
adc
mov
xor
jb
cmp
in
and
push
out
add
jbe
adc
leave
xchg
cs
mov
dec
dec
ffreep
pop
adc
imul
repnz
test
cltd
mov
adc
or
lcall
in
jnp
rep
or
jp
jmp
and
mov
aas
in
mov
movsl
push
pop
cmp
aad
clc
pop
in
mov
hlt
mov
add
popf
and
lock
aas
adcl
pop
hlt
shll
add
hlt
jnp
es
and
inc
cltd
xor
stos
inc
cmp
mov
int3
pop
enter
aad
pop
mov
jge
inc
repz
add
test
push
and
push
test
dec
in
sti
pop
imulb
imul
dec
jge
jg
mov
pop
fwait
xor
xor
push
es
pop
mov
xlat
outsb
jns
jecxz
or
add
pop
jge
mov
inc
xor
jno
cmp
out
and
push
in
add
je
adc
xchg
cs
mov
dec
dec
faddp
pop
adc
imul
repnz
test
lcall
and
cwtl
sub
pop
mov
pop
hlt
stos
or
int3
jnp
pop
mov
nop
pop
lcall
jb
dec
movsb
add
pop
ss
notl
jl
sbb
mov
add
pushf
cld
and
out
dec
aas
jg
push
out
mov
outsb
add
and
mov
call
or
dec
lret
pusha
mov
aad
sbb
repz
push
popf
xor
adc
xchg
das
adc
inc
xor
pusha
imull
mov
mov
fisttpl
xor
cmpsl
ds
repz
pop
mov
fsubrs
aad
jp
lcall
pop
in
adc
push
jnp
mov
aas
xor
jo
cmp
out
pop
pop
repz
jecxz
add
movsb
mov
push
mov
dec
dec
fmul
pop
push
insb
aad
sahf
das
out
popa
mov
add
mov
adc
add
es
xlat
push
mov
in
js
cmc
test
lret
cld
pop
mov
mov
test
push
mov
ret
xlat
outsb
cmc
push
out
xchg
testb
imul
sub
xlat
jge
push
call
iret
pusha
outsl
push
xchg
lock
and
xor
lods
inc
cmp
lret
jmp
call
mov
pop
sahf
xor
and
adc
dec
in
clc
popa
clc
sub
jg
jl
mov
or
test
pop
icebp
mov
pop
mov
fnstenv
shl
jnp
cwtl
testl
sbb
and
outsb
lret
ds
push
call
dec
loope
push
adc
adc
ret
cltd
xor
xchg
dec
dec
fcmove
pusha
or
insl
pushf
sub
hlt
mov
addb
inc
shlb
mov
xchg
and
fcoms
dec
out
jbe
mulb
enter
pop
mov
mov
pushf
xor
stos
inc
fildll
push
mov
rcr
repz
out
test
mov
add
lods
cwtl
clc
and
jmp
inc
fdivrs
push
jmp
int
jo
nop
out
jge
and
fwait
xor
lods
inc
aaa
xchg
mov
bound
lods
jmp
mov
sahf
xor
and
enter
fcmovbe
xor
arpl
popa
clc
daa
test
mov
jg
jp
mov
or
inc
pop
out
mov
pop
mov
fnstenv
shl
jl
xchg
testl
sbb
mov
insb
lret
sti
lea
mov
fildll
adc
adc
ret
hlt
test
push
inc
fmul
pusha
or
outsb
fwait
sub
jle
mov
add
stos
inc
shlb
mov
xchg
and
push
mov
out
je
mulb
jge
clc
pop
lea
sbb
fisubrs
sahf
dec
pusha
xor
fsubrs
push
out
test
testl
xchg
mull
mov
ljmp
jmp
int3
pop
jo
in
jge
pop
mov
and
jb
lods
inc
ss
mov
bound
stos
jmp
mov
pop
sahf
das
lea
stos
mov
fbstp
enter
fcmovbe
xor
cmc
popa
clc
test
mov
jg
jns
mov
or
test
push
and
pop
mov
fnstenv
shl
jl
xchg
testl
sbb
mov
imul
cli
mov
mov
fisubrs
adc
adc
rcrl
mov
mov
pusha
or
outsb
lcall
mov
jge
pushf
scas
push
adc
aas
iret
and
xchg
and
push
mov
out
jae
mulb
jge
negl
and
sbb
push
popf
dec
pusha
xor
out
adcl
mov
pushf
aad
adc
mov
jmp
or
cmp
jo
mov
jge
push
mov
and
jno
lods
inc
xor
push
lret
bound
stos
jmp
mov
pop
sahf
mov
stos
mov
fidivs
enter
fcmovbe
xor
popa
hlt
popa
clc
and
inc
jg
js
mov
or
test
push
pop
jge
pop
scas
inc
fnstenv
shl
jl
xchg
testl
sbb
mov
push
aas
stc
mov
mov
jl
lahf
xor
xor
subl
inc
leave
pusha
or
outsb
cltd
sub
jle
mov
add
stos
ds
and
nop
and
push
mov
out
jb
mull
les
notb
and
pop
popf
xor
test
mov
pusha
cs
out
adcl
add
lods
xchg
hlt
and
call
or
cmp
jno
ljmp
loope
fwait
xor
scas
inc
xor
mov
arpl
test
cmc
mov
or
mov
fdivl
enter
fcmovnbe
cs
out
repz
stc
and
insl
add
inc
adcb
aam
and
cltd
sahf
xor
pop
in
mov
pop
lods
aas
fidivl
into
in
add
add
pop
je
mov
imul
push
jmp
dec
fdivl
push
imul
mov
lock
aad
popa
pop
xlat
outsb
xchg
sub
jg
mov
push
popf
lods
or
cmp
and
pop
xor
mov
inc
ficoml
push
out
jno
clc
mov
ret
jg
cmc
push
lea
push
sahf
xor
fldcw
push
fwait
cli
leave
pusha
sub
fidivl
dec
out
jg
stc
nop
inc
mov
pop
scas
xchg
repnz
out
inc
fdivs
push
jmp
xchg
pop
test
jb
mov
jge
sbb
fwait
xor
scas
inc
xor
int
xchg
xlat
outsb
adc
cmc
mov
or
mov
fidivl
enter
sub
out
repnz
and
add
inc
sbbl
add
lahf
ss
inc
push
jmp
push
sbb
int3
in
xchg
stc
nop
ret
pop
add
push
in
scas
adc
ss
xlat
cmc
mov
mov
fidivl
or
jge
fwait
sub
fwait
xor
subb
inc
ror
bound
es
call
or
mov
mov
push
call
mov
ret
hlt
push
lea
adc
stos
inc
xlat
push
leave
pusha
sub
jle
psubd
iret
bound
scas
xchg
lock
out
inc
fdivs
push
in
cmp
or
lods
xchg
sub
cmp
inc
xor
gs
xlat
outsb
adc
cmc
mov
mov
mov
sub
or
dec
out
icebp
fs
and
add
inc
sbbb
rorb
aaa
leave
and
push
sbb
pop
test
lret
cld
nop
cli
xchg
ret
fwait
dec
jecxz
scas
adc
and
retw
xrelease
adc
testb
or
addr16
cltd
sub
daa
pop
mov
scas
inc
mov
mov
arpl
fsubrs
and
testb
pop
adc
mov
mov
call
lahf
std
outsl
push
das
roll
adcb
inc
mov
mov
pusha
sub
out
jnp
sti
xchg
inc
pushf
add
mov
out
and
in
inc
fdivs
push
in
aaa
xchg
pop
test
je
mov
jge
push
lods
xchg
sub
aaa
fwait
xor
mov
xor
into
gs
xlat
outsb
adc
cmc
mov
or
mov
sub
or
dec
out
lock
and
scas
inc
sbbb
iret
mov
add
test
push
sbb
pop
test
fdivl
leave
in
sti
cli
xchg
rcrl
dec
loop
scas
adc
mov
roll
xchg
adc
inc
fdivs
or
adc
sub
xor
jle
inc
mov
mov
arpl
pusha
fsubrs
and
adcl
or
aaa
leave
es
mov
inc
fmull
call
sahf
cld
outsl
push
rolb
adcl
stos
inc
aam
mov
pusha
daa
mov
out
jp
sti
xchg
aas
fwait
add
mov
in
and
in
inc
fdivs
push
in
ss
pop
test
je
mov
jge
adc
ss
xor
mov
xor
into
gs
outsb
shld
adc
cmc
mov
or
mov
sub
pop
popf
inc
sub
pop
out
fs
and
add
inc
sbbb
into
mov
add
test
push
sbb
pop
cmpsl
cmp
jae
enter
mov
xchg
rcrb
fwait
dec
loope
scas
adc
mov
rolb
test
adc
inc
xlat
jb
or
adc
sub
xor
jge
inc
scas
or
arpl
pop
fsubrs
and
adcl
or
ss
push
xor
mov
inc
fmull
push
call
popf
sti
outsl
push
sub
dec
lea
adc
inc
shll
push
xchg
hlt
leave
pusha
es
out
jns
sti
xchg
ds
nop
in
and
jecxz
inc
fsubrs
push
in
xor
push
je
mov
jge
adc
xchg
sub
xor
mov
das
mov
gs
outsb
push
movsb
in
adc
cmc
mov
or
mov
sub
push
pushf
inc
daa
dec
out
out
fs
pop
jp
add
inc
sbbb
int
and
xchg
mov
inc
push
out
push
sbb
cmpsb
cmp
jae
out
stc
mov
xchg
mov
fistps
scas
adc
mov
bound
push
jmp
adc
inc
aad
or
fs
xchg
sub
xor
jnp
inc
lods
or
arpl
pop
fnstenv
and
adcl
or
xor
push
xor
xchg
inc
fmull
push
jmp
fwait
cli
jo
sub
sbbl
fists
testb
std
insl
sub
mov
jl
mov
xor
cmp
ljmp
or
xor
xor
popf
mov
lret
test
add
push
xor
mov
int3
test
mov
int3
bound
and
add
mov
dec
leave
lret
add
mov
mov
xor
mov
push
imul
mov
pop
mov
call
aas
lock
popl
test
lds
imul
test
push
add
jle
mov
or
or
push
and
and
cmp
inc
sbb
imul
mov
mov
jae
inc
xchg
mov
aam
and
xchg
mov
push
stc
jb
rcr
cmp
mov
popa
mov
xchg
lret
arpl
hlt
jmp
neg
fcoms
movsl
jo
mov
adc
pop
fmul
fbld
dec
xor
aad
imul
and
cmc
adc
lcall
fmull
pop
ret
repnz
xchg
inc
push
insl
clc
xchg
mov
dec
mov
nop
xchg
lret
adc
mov
pop
inc
sub
cli
lds
leave
cmpsb
inc
int3
adc
outsb
or
jp
lcall
fsubrl
sub
bound
mov
jb
lcall
adc
jns
xor
scas
outsl
push
cmc
popf
or
imul
inc
or
pop
pop
lds
xor
lods
loop
clc
add
cs
or
pop
mov
dec
mov
cmpsb
and
pop
ja
xchg
or
fucom
cli
loope
mov
cmp
into
popa
inc
bound
adc
xor
cmp
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
fs
pop
aas
outsb
mov
inc
je
lds
das
mov
xchg
mov
daa
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
fstpl
es
scas
inc
jnp
fcomps
inc
mov
lods
imul
sub
pop
xchg
fists
pop
in
clc
jmp
or
gs
