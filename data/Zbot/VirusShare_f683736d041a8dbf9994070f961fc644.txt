mov
add
repnz
add
add
cmp
add
rolb
sub
xor
ret
add
add
ret
add
add
add
add
lahf
sub
inc
add
dec
in
add
inc
add
add
or
pop
mov
bnd
into
adc
cmp
inc
add
imul
aam
cltd
add
popa
push
pop
and
mov
add
mov
dec
rep
mov
xor
mov
ror
mov
xor
mov
or
mov
add
sub
mov
and
mov
ror
push
sub
sub
sar
ret
neg
add
in
sub
add
fidivl
out
mov
xor
push
pop
sar
sub
dec
add
ror
mov
mov
mov
add
or
add
mov
cld
cld
sub
add
stc
add
lea
fwait
mov
cmc
add
fwait
sub
pushl
pop
add
add
pushl
pop
cmc
add
push
stc
push
push
mov
cld
mov
clc
pop
cmc
xor
push
stc
mov
cld
mov
nop
add
cmc
xor
add
cld
inc
rol
xor
cmpb
jne
xor
je
pop
cld
inc
fwait
push
sub
mov
add
mov
jmp
pop
cld
mov
clc
shl
stc
add
mov
mov
clc
shl
cmc
mov
add
pop
mov
pop
add
add
and
pop
add
add
xor
jmp
add
add
call
ret
add
cmp
or
add
xor
mov
add
and
dec
mov
xor
inc
cmp
jne
ror
pop
add
xor
rol
mov
or
add
neg
cmpb
je
ret
add
rol
add
add
jg
add
addb
ffree
testl
add
out
mov
neg
mov
sar
mov
sub
mov
add
add
add
mov
and
sub
test
jne
sub
xchg
sub
add
add
mov
sub
xchg
or
or
mov
rol
mov
mov
rol
mov
or
mov
neg
inc
mov
rol
xor
or
test
jne
add
xchg
rol
sar
push
add
mov
shl
sub
shr
add
add
add
xor
dec
pushl
shl
push
pop
inc
mov
ror
push
rol
mov
or
push
sub
ret
imulb
add
mov
add
das
dec
in
arpl
rorb
inc
and
or
xchg
add
pop
sub
xor
and
mov
add
pop
mov
add
sub
neg
mov
sar
mov
fwait
add
sub
mov
add
mov
dec
add
and
mov
or
mov
and
mov
sub
add
inc
mov
sub
or
dec
push
add
mov
ror
sub
mov
sub
mov
push
add
call
shl
push
add
mov
shl
push
mov
add
call
cmc
mov
mov
cmc
sub
mov
xor
ror
mov
sub
mov
push
ror
mov
sub
push
ror
call
sub
mov
and
sub
add
mov
and
push
add
push
or
sub
mov
xor
mov
ror
call
add
mov
add
add
and
xchg
or
mov
rol
push
sub
mov
xor
mov
shl
mov
add
push
call
nop
mov
add
push
mov
push
mov
inc
mov
shl
add
inc
mov
add
shl
mov
push
sub
push
call
cld
xor
xor
sub
push
and
pop
not
xor
dec
mov
and
mov
not
inc
mov
mov
xor
and
xor
not
sub
xor
ror
mov
ror
add
mov
add
mov
add
mov
sub
sub
mov
and
inc
mov
add
add
mov
xor
add
cld
mov
cld
xor
xor
shl
mov
rol
dec
xor
or
xor
cmp
les
mov
loope
clc
add
ror
mov
dec
mov
sar
mov
not
add
sub
and
jmp
fsubs
add
jmp
add
cld
daa
add
or
sub
add
sub
add
add
push
sub
add
add
jge
add
mov
add
lahf
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
add
sub
add
cmp
add
dec
sub
add
add
sub
add
add
mov
add
test
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
sub
add
add
add
outsl
sub
add
add
add
add
cltd
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
jns
add
test
add
add
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
insb
sub
add
add
test
add
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
add
xor
add
push
sub
add
jne
add
mov
add
stos
sub
add
int
add
loopne
add
cmc
sub
add
sbb
add
cs
inc
add
push
add
add
add
jo
add
subb
add
add
test
add
mov
add
into
add
fsubrs
add
in
add
repz
add
add
comiss
add
das
add
xor
add
aas
das
add
dec
das
add
pop
das
add
add
add
jno
add
jle
add
mov
add
fwait
das
add
lods
das
add
mov
das
add
fsubrl
add
jmp
das
add
pop
xor
add
xor
add
xor
add
xor
add
add
pusha
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
inc
xor
add
add
popa
xor
add
add
js
add
test
add
xchg
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
data16
add
add
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jae
add
xchg
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
gs
add
add
test
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sub
add
fs
add
sub
add
and
add
add
add
add
mov
add
inc
and
add
and
add
add
add
xchg
sub
add
add
scas
sub
add
and
add
add
add
add
add
add
cmp
add
add
add
gs
add
mov
add
jb
add
call
add
ret
add
and
add
add
mov
and
add
daa
add
dec
xor
add
and
add
add
add
add
aaa
xor
add
fsubs
add
jmp
add
cld
daa
add
or
sub
add
sub
add
add
push
sub
add
add
jge
add
mov
add
lahf
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
add
sub
add
cmp
add
dec
sub
add
add
sub
add
add
mov
add
test
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
sub
add
add
add
outsl
sub
add
add
add
add
cltd
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
jns
add
test
add
add
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
insb
sub
add
add
test
add
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
add
xor
add
push
sub
add
jne
add
mov
add
stos
sub
add
int
add
loopne
add
cmc
sub
add
sbb
add
cs
inc
add
push
add
add
add
jo
add
subb
add
add
test
add
mov
add
into
add
fsubrs
add
in
add
repz
add
add
comiss
add
das
add
xor
add
aas
das
add
dec
das
add
pop
das
add
add
add
jno
add
jle
add
mov
add
fwait
das
add
lods
das
add
mov
das
add
fsubrl
add
jmp
das
add
pop
xor
add
xor
add
xor
add
xor
add
add
pusha
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
inc
xor
add
add
popa
xor
add
add
js
add
test
add
xchg
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
data16
add
add
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jae
add
xchg
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
gs
add
add
test
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sub
add
test
push
gs
jb
popa
je
dec
gs
js
add
sub
push
gs
outsb
jne
dec
gs
js
add
push
fstl
addr16
gs
gs
dec
gs
add
push
ret
addr16
gs
gs
push
popa
insb
jne
push
add
ficoms
outsb
jne
push
popa
insb
jne
inc
add
or
push
gs
jne
jb
push
popa
insb
jne
push
add
bound
addr16
jne
jb
push
popa
insb
jne
inc
js
add
dec
imul
push
jne
jb
dec
outsb
outsw
dec
gs
add
lea
jne
jb
push
popa
insb
jne
inc
add
xlat
sbb
addr16
outsb
jne
dec
gs
add
pop
movsl
push
gs
gs
gs
push
popa
insb
jne
inc
add
push
les
addr16
outsb
jne
dec
gs
add
aas
cltd
push
gs
jb
popa
je
dec
gs
add
ja
push
gs
gs
popa
arpl
gs
add
lret
gs
insb
jne
push
add
jbe
jo
xor
cs
insb
add
fsub
inc
gs
gs
dec
bound
arpl
out
inc
fs
outsl
outsb
je
gs
jne
arpl
js
add
roll
gs
jb
jb
jae
inc
je
jb
bound
gs
add
hlt
inc
popa
outsb
arpl
inc
inc
add
or
inc
fs
outsl
outsb
je
gs
jne
arpl
js
add
push
push
gs
outsl
jb
inc
inc
add
stos
faddl
je
insb
je
add
inc
jb
jae
dec
jb
inc
js
add
ret
fs
outsl
outsb
je
gs
push
gs
jne
arpl
js
add
inc
fs
outsl
outsb
je
gs
jne
arpl
jb
arpl
outsb
add
jno
inc
insb
gs
jb
imul
jb
bound
gs
add
gs
inc
inc
add
and
gs
imul
outsl
inc
bound
je
popa
je
add
stos
push
inc
gs
imul
jae
add
inc
fs
outsl
outsb
je
gs
jne
arpl
add
jno
inc
insb
outsl
jae
dec
gs
inc
imul
gs
inc
dec
jb
inc
js
add
inc
imul
add
inc
fs
outsl
outsb
je
gs
jne
arpl
add
pop
push
inc
insb
outsl
jae
inc
imul
pop
mov
je
push
outsl
insb
imul
add
push
imul
cltd
inc
js
insb
jne
gs
insb
imul
add
imul
insb
add
mov
fs
je
insl
inc
add
adc
dec
popa
jae
inc
jb
outsl
jb
add
pushf
inc
outsl
jo
inc
imul
loope
inc
gs
imul
add
gs
inc
imul
inc
outsl
jo
inc
imul
push
gs
popa
jae
inc
jb
outsl
jb
add
pop
inc
outsl
jo
inc
imul
xor
inc
gs
imul
add
mov
outsl
insl
insl
popa
outsb
fs
imul
jecxz
jb
popa
je
push
jb
arpl
jae
add
lret
jo
outsb
inc
imul
outsb
addr16
add
aad
inc
imul
je
imul
push
gs
fs
outsl
outsb
jae
insb
gs
add
ljmp
imul
outsl
jo
inc
imul
jb
gs
xor
cs
insb
add
pop
inc
gs
inc
add
push
popl
imul
jae
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
mov
inc
outsl
jo
push
arpl
jae
inc
outsl
jo
dec
insl
popa
add
inc
jecxz
jo
outsb
fs
outsb
jne
add
jno
outsl
popa
fs
jne
jae
jb
add
sbb
jne
add
inc
gs
insb
addr16
je
insl
add
xor
inc
insb
outsl
jae
push
imul
mov
push
imul
js
inc
add
inc
pop
inc
gs
jne
jae
jb
add
inc
gs
outsl
arpl
add
in
inc
jb
ja
gs
push
add
mov
inc
jb
ja
arpl
add
test
jb
ja
gs
inc
add
jae
inc
outsl
jo
dec
arpl
add
cmp
dec
outsb
jo
je
add
imul
cwtl
into
inc
jb
popa
je
dec
arpl
add
jne
gs
xor
fs
insb
add
pop
push
push
gs
jo
outsb
dec
gs
add
icebp
jle
gs
gs
popa
arpl
gs
add
sbb
inc
outsb
jne
dec
gs
add
filds
gs
outsb
jne
dec
gs
add
je
push
gs
jb
popa
je
dec
gs
js
add
out
ret
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
jne
jb
push
popa
insb
jne
push
add
mov
push
jne
jb
push
popa
insb
jne
inc
add
imul
gs
outsb
jne
push
popa
insb
jne
inc
add
shrl
outsb
dec
gs
add
jg
push
gs
outsb
jne
dec
gs
js
add
inc
mov
addr16
gs
gs
push
popa
insb
jne
push
add
pop
cmpsl
push
gs
jne
jb
dec
outsb
outsw
dec
gs
add
mov
push
gs
outsl
popa
fs
gs
add
push
ficoms
addr16
outsb
jne
push
popa
insb
jne
push
add
xor
gs
jb
popa
je
dec
gs
add
lea
gs
gs
push
popa
insb
jne
inc
add
inc
and
addr16
gs
gs
arpl
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
gs
popa
arpl
gs
add
cs
gs
jb
popa
je
dec
gs
js
add
loopne
gs
jne
jb
dec
outsb
outsw
dec
gs
add
push
jbe
gs
jo
outsb
dec
gs
js
add
insl
int
gs
insb
jne
push
add
jbe
jo
xor
cs
insb
add
mov
inc
gs
imul
js
inc
add
rclb
push
imul
cli
stos
inc
jb
ja
arpl
add
adc
inc
gs
outsb
jne
add
inc
insb
imul
jae
add
fiaddl
je
imul
js
dec
outsb
addr16
inc
add
scas
sbb
dec
outsb
jne
add
inc
outsl
jo
dec
arpl
add
test
inc
jo
outsb
fs
outsb
jne
add
gs
jb
ja
gs
inc
add
push
mov
dec
outsb
jne
popa
jb
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
nop
gs
jb
popa
je
dec
arpl
add
pop
loope
outsb
jae
jb
dec
outsb
jne
add
jns
inc
jb
ja
gs
push
add
fbstp
outsl
ja
add
inc
outsl
jo
dec
insl
popa
add
jne
gs
xor
fs
insb
add
mov
inc
gs
push
dec
outsb
outsw
add
and
inc
gs
gs
inc
je
insl
add
jp
gs
gs
inc
imul
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
cmp
dec
popa
jae
inc
jb
outsl
jb
add
inc
imul
add
inc
jb
popa
je
push
push
add
jmp
jns
imul
push
gs
fs
outsl
outsb
jae
insb
gs
add
sbb
bound
inc
jb
add
imul
push
push
add
rclb
je
inc
imul
imul
inc
add
pushf
lock
outsl
jo
inc
imul
aad
inc
imul
je
imul
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
jb
popa
je
push
jb
arpl
jae
add
imul
gs
xor
cs
insb
add
daa
lret
inc
jb
ja
arpl
add
insl
lods
dec
outsb
jae
jb
dec
outsb
jne
add
xchg
js
outsl
jo
push
arpl
rcll
popa
fs
jne
jae
jb
add
mov
imul
js
inc
add
dec
and
gs
insb
addr16
je
insl
add
lods
mov
gs
outsl
arpl
add
or
imul
js
dec
outsb
addr16
inc
add
mov
popa
je
dec
arpl
add
xlat
addr16
gs
outsb
jne
add
jns
arpl
add
sub
inc
outsl
jo
dec
insl
popa
add
and
jae
push
imul
push
das
inc
gs
inc
add
cmp
jo
outsb
fs
outsb
jne
add
js
inc
insb
outsl
arpl
outsb
jo
je
add
outsb
jne
add
inc
jb
ja
gs
inc
add
mov
dec
outsl
popa
fs
outsb
jne
add
jg
inc
outsb
fs
imul
in
inc
popa
insb
arpl
outsb
jne
popa
jb
add
inc
jb
ja
arpl
inc
js
add
in
inc
imul
js
popa
jb
insl
inc
add
jne
gs
xor
fs
insb
add
and
popa
jae
inc
jb
outsl
jb
add
and
je
outsl
insl
insl
popa
outsb
fs
imul
leave
inc
outsl
jo
inc
imul
inc
gs
gs
inc
imul
inc
gs
imul
add
outsb
inc
imul
outsb
addr16
add
xchg
cmpsl
inc
imul
inc
add
adc
inc
gs
je
dec
popa
outsb
fs
add
xor
dec
popa
jae
inc
jb
outsl
jb
add
add
gs
add
adc
js
je
push
add
out
iret
inc
gs
gs
inc
je
insl
add
rcrb
inc
outsl
jo
inc
imul
jo
inc
insb
outsl
bound
inc
jb
add
jb
push
gs
fs
outsl
outsb
jae
insb
gs
add
dec
mov
imul
add
jb
gs
xor
cs
insb
add
movsb
inc
popa
outsb
arpl
inc
inc
add
pop
ret
inc
js
insb
jne
gs
insb
imul
add
ss
js
push
gs
dec
jne
inc
add
cmp
inc
insb
outsl
jae
dec
gs
inc
imul
insb
gs
jb
jb
jae
inc
je
jb
bound
gs
add
mov
jo
dec
gs
inc
imul
inc
insb
gs
jb
imul
jb
bound
gs
add
insb
je
add
inc
gs
jb
jae
dec
jb
inc
js
add
push
gs
outsl
jb
inc
inc
add
cmpsb
push
inc
fs
outsl
outsb
je
gs
jne
arpl
add
popa
mov
gs
inc
inc
add
push
jo
fs
outsl
outsb
je
gs
jne
arpl
add
cmp
inc
insb
outsl
jae
inc
imul
pushf
fildl
je
imul
jno
gs
gs
dec
bound
arpl
mov
inc
gs
insb
imul
mov
inc
outsl
outsb
je
gs
jne
arpl
js
add
sub
gs
imul
push
inc
fs
outsl
outsb
je
gs
jne
arpl
jb
arpl
outsb
add
jb
fs
outsl
outsb
je
gs
jne
arpl
js
add
fbstp
inc
fs
outsl
outsb
je
gs
push
gs
jne
arpl
js
add
imul
insb
add
ret
cmp
jb
dec
outsb
jne
add
inc
pop
inc
gs
imul
js
inc
add
pop
imul
popa
je
dec
arpl
add
sbb
jae
imul
loop
inc
jb
ja
gs
inc
add
outsb
sbb
gs
inc
add
loope
dec
jae
outsb
jne
add
arpl
outsb
jne
popa
jb
add
push
inc
insb
outsl
jae
push
imul
aad
inc
outsl
jo
push
arpl
inc
out
jo
outsb
fs
outsb
jne
add
pop
fiaddl
ja
arpl
inc
js
add
inc
jb
ja
arpl
add
mov
jns
insl
popa
add
push
std
inc
gs
imul
js
dec
outsb
addr16
inc
add
inc
insb
outsl
arpl
outsb
jo
je
add
gs
xor
fs
insb
notl
add
fiaddl
loope
sbb
test
out
xor
cmp
sub
pop
iret
or
stos
filds
mov
inc
sub
add
push
and
add
add
mov
add
call
push
add
je
leave
cmp
pushf
add
add
inc
pop
dec
add
add
add
add
add
jno
mov
add
mov
add
add
add
sbb
cmp
add
add
stos
mov
add
add
cmpsb
add
ljmp
add
xor
add
imul
pop
inc
sbb
inc
scas
test
add
add
add
rcrb
add
mov
add
add
add
add
add
add
xor
add
add
add
dec
add
add
pop
sbb
jns
add
inc
inc
add
add
arpl
stos
adc
arpl
in
add
adc
jne
add
enter
imul
add
add
add
or
add
adc
mov
data16
xor
jb
add
bound
aam
add
add
add
add
testl
add
cltd
add
add
pop
xchg
scas
add
add
add
rolb
push
add
int3
lods
add
push
jbe
imul
or
add
xor
mov
repnz
jne
mov
add
add
dec
mov
add
ret
dec
add
in
add
and
repz
jo
add
add
add
adc
add
add
add
add
add
addl
add
add
pop
push
repnz
add
add
xchg
mov
add
add
add
add
pop
rolb
mov
sub
mov
inc
test
xchg
jg
mov
adc
add
add
adc
add
add
add
add
mov
or
add
aad
cltd
add
cmp
mov
cmpsl
fdivp
and
add
add
jne
jo
scas
add
add
mov
inc
add
mov
add
add
add
nop
add
dec
push
add
add
mov
add
add
add
push
add
xchg
ret
lret
add
add
adc
add
popf
je
inc
jbe
mov
and
leave
stc
add
repnz
mov
add
add
add
and
add
add
add
xchg
add
push
dec
clc
add
add
sub
add
jg
fnsave
pop
add
add
imul
add
add
add
and
add
loope
pop
int3
add
daa
add
pushf
ret
test
sbb
xor
add
add
add
test
popl
jg
in
inc
lret
push
sbb
xor
add
jge
add
testl
fildl
add
add
inc
out
add
add
add
pushf
xor
pop
mov
add
cmp
xchg
jne
test
out
push
in
add
cmpsl
mov
ret
sbb
pop
pop
test
mov
xlat
and
dec
movsb
add
add
jnp
add
add
push
add
add
icebp
fwait
adc
arpl
adc
test
mov
imul
mov
popf
ja
arpl
mov
pop
test
and
pop
and
mov
adc
icebp
loop
sub
fldenv
push
ss
loop
and
in
cmp
fs
xor
sar
mov
in
and
cld
lcall
cltd
ja
arpl
test
and
fbstp
mov
cwtl
and
and
xchg
mov
and
int
adc
lcall
and
and
and
and
lret
and
and
outsb
and
and
and
xor
repz
and
repz
iret
fdivl
mov
repz
mov
out
and
mov
or
sub
cmp
and
lret
xchg
and
and
dec
and
and
and
sahf
and
and
insb
and
and
ret
and
mov
lret
mov
cli
repz
and
mov
fldt
add
mov
sub
and
cli
repz
and
pop
and
and
sub
and
and
mov
cli
repz
mov
rep
lret
mov
nop
and
cli
rep
repz
mov
repz
mov
fdivl
mov
sub
sub
and
test
gs
repz
mov
loopne
mov
mov
fdivl
lret
out
fsubrl
enter
loopne
inc
inc
mov
std
dec
les
and
jp
mov
fisubl
stos
adc
sub
shlb
and
jb
jae
jmp
lret
shrl
lret
xchg
xor
stos
mov
arpl
and
jb
stos
cld
mov
test
and
pop
jnp
shrl
pushf
stos
xor
jae
cld
mov
and
mov
and
test
inc
arpl
and
sub
pop
and
and
push
mov
lcall
jmp
xchg
sub
and
and
jae
test
arpl
and
nop
add
cmc
stos
in
stc
mov
fsubrl
loope
arpl
and
sbb
test
js
and
mov
js
and
fildll
pushf
test
mov
stc
mov
and
mov
mov
mov
daa
inc
add
popf
inc
xor
and
pushf
and
and
jmp
inc
loop
sub
jl
and
rolb
mov
jmp
mov
or
push
inc
sti
sub
sbb
test
cltd
and
bound
cmp
mov
mov
aam
test
movsb
and
inc
pop
jb
add
push
mov
lods
sbb
add
decb
inc
stc
jge
aaa
jae
jnp
jecxz
test
mov
mov
stos
or
fsubrp
jl
bnd
imul
xchg
jno
jg
xchg
add
add
xchg
sbb
inc
mov
push
push
add
pop
add
cli
sbb
add
pop
insb
xor
outsl
and
pop
sub
sbb
and
push
sub
and
in
add
popa
sub
mov
es
daa
or
arpl
cwtl
idivb
jo
sbb
mov
rol
sbb
add
inc
pop
ret
out
ret
mov
imul
and
das
dec
push
inc
inc
cmp
xor
mov
add
ret
or
push
inc
dec
cmp
and
aaa
or
mov
and
fistpl
pop
sbb
popa
movntps
fidivs
cmp
rclb
fildl
add
mov
xchg
sbb
lea
lahf
add
pusha
and
jae
lds
pop
mov
xchg
mov
rcr
shl
jl
jp
inc
inc
xchg
xchg
sbb
lds
andl
mov
lret
js
stos
fisubl
sbb
sahf
ret
popa
jne
aas
xor
inc
mov
in
subb
push
xchg
jo
pop
fnstsw
sarl
lret
js
xor
cmp
cmp
inc
add
addl
popa
out
mov
and
mov
mov
add
imul
scas
cmp
insl
fildll
push
mov
lds
lods
aas
push
jns
add
lret
add
cld
pop
and
mov
add
cmpb
push
fmuls
pop
and
rcrb
incb
mov
mov
daa
adc
add
rclb
ret
ficompl
cmc
test
pop
add
sbb
mov
and
movsb
cmp
add
lds
xor
add
movsb
push
cmc
pop
stos
sub
arpl
mov
inc
pop
ja
sbbl
pop
loope
ds
pop
cmp
das
std
aam
mov
or
insl
sarl
and
ret
dec
out
cmp
data16
pop
andb
or
xor
lahf
lods
add
psrlq
mov
sbb
dec
scas
ret
or
cmp
outsb
lret
xor
adc
shll
sbb
in
jb
mov
pop
xor
and
xlat
cmp
fwait
push
arpl
shlb
adc
adc
pop
sbb
fisubl
daa
and
sbb
enter
mov
pop
incb
jl
and
xor
and
popf
lret
mov
roll
xor
ret
and
jne
das
data16
outsb
mov
jl
ljmp
cmp
mov
adc
sbb
add
cwtl
pop
add
decb
add
incl
mov
stos
in
shll
loopne
add
mov
sub
add
inc
push
sbb
mov
insb
xor
xchg
xchg
add
add
sbb
daa
jge
cs
pop
push
movl
add
arpl
subb
clc
push
xor
sub
outsb
sar
jge
push
int3
mov
cmpsl
xchg
aam
jg
or
fwait
sbb
add
dec
add
lret
push
pop
movsl
xchg
jne
push
xchg
push
jmp
sbb
les
add
pop
cmpsb
add
data16
test
adc
ljmp
rolb
out
pop
cmp
sub
jne
cwtl
popf
inc
pop
xchg
inc
xlat
pop
js
mov
cltd
mov
mov
dec
add
lahf
push
aad
xchg
inc
js
stc
gs
outsb
and
int3
ret
cmpl
mov
jecxz
push
sbb
stos
ficoml
mov
and
roll
jbe
sub
inc
mov
pop
or
insl
shll
jge
sub
shrl
lods
call
xlat
cmc
and
cltd
stos
iret
test
fucomi
hlt
jae
mov
inc
stos
xor
nop
inc
lret
inc
mov
jge
lret
cld
adc
enter
movsb
gs
into
add
mov
add
xchg
cld
loop
popa
jg
add
jne
fstpt
sub
lret
add
das
movsb
sbb
int
loopne
rol
aam
sbb
jmp
mov
icebp
add
std
fdivs
mov
and
fists
int
add
cld
ret
lods
arpl
roll
gs
inc
ja
cmp
mov
xchg
orl
xor
adcl
add
shrl
repz
adc
add
and
sub
addr16
nop
das
jecxz
or
add
jge
and
jb
push
or
aam
das
add
jg
icebp
inc
sub
add
jecxz
sub
mov
xchg
push
fcmovne
jle
repnz
mov
dec
xor
xor
mov
adc
mov
push
movsb
or
and
pushf
mov
xor
add
lahf
clc
cmpb
arpl
mov
sub
add
mov
mov
or
pop
and
in
ret
pop
fsubl
xchg
xor
push
sbb
mov
clc
cmp
repz
stos
and
enter
pop
ret
mov
insb
and
lret
popf
mov
sbb
push
out
pop
add
add
cmp
fs
adc
arpl
pop
add
fsubr
cmp
gs
fldl
and
push
sub
das
and
cmp
adc
sarb
lock
addb
shrl
and
cmp
add
or
and
sbb
test
test
add
sbb
test
cmp
in
add
mov
dec
loope
ss
sub
mov
iret
push
pop
add
stos
scas
pop
and
mov
lods
fcmovb
jmp
sbb
repnz
sub
daa
addr16
mov
imul
orl
push
add
jno
mov
sbb
cld
push
xor
mov
xchg
lods
fcomip
sub
ja
mov
push
popa
cli
and
add
inc
filds
sub
pop
je
ret
push
sarl
sub
stos
add
and
mov
addr16
cltd
pop
neg
lods
push
add
xor
push
push
lret
add
pop
push
insl
add
mov
xor
jb
mov
sub
mov
or
int
xor
or
test
aam
sbb
push
and
jae
cmpl
mov
into
or
andl
jns
fisubs
cmp
cmp
mov
mov
add
sbb
and
sbb
dec
pop
jecxz
mov
cmp
push
fisttpl
mov
jl
jns
add
push
push
cmp
shrl
cmp
mov
push
lahf
add
rorb
add
stc
cmp
pop
sub
and
jecxz
ficoml
sahf
jnp
mov
and
jno
fisubrs
mov
cmp
lods
lret
jnp
es
and
leave
fstpl
mov
in
add
push
adc
add
aam
xor
fwait
or
and
add
push
jp
xchg
mov
in
ss
inc
cmp
nopl
gs
sub
mov
mov
movsb
pop
int
pop
add
jno
push
cmpsl
push
and
in
movsl
xor
jns
mov
fabs
adc
inc
lds
outsb
sti
push
inc
in
clc
pop
pushf
add
mov
fidivrl
or
pop
jecxz
shr
mov
add
or
add
stos
add
add
js
dec
add
scas
add
aas
add
push
cmpsb
outsb
lea
lret
mov
add
fldenv
add
push
jnp
stos
push
add
and
rclb
add
call
cmp
xchg
scas
arpl
push
jg
mov
jbe
xor
add
or
and
test
mull
movsb
add
and
in
adc
or
sub
add
ja
add
orb
or
fldenv
push
dec
mov
xchg
push
out
cmp
sbb
sub
repnz
add
fistl
aas
jo
push
add
and
leave
adc
pop
sbb
xor
add
stc
bound
and
inc
pop
add
jmp
push
scas
andl
inc
sub
repnz
dec
das
adc
stos
mov
add
lret
mov
rolb
lock
ja
les
push
sbb
cmpsb
mov
ret
cmp
xchg
insl
ret
call
add
sub
and
pop
and
popa
lds
sub
std
das
or
cmp
scas
dec
aaa
jmp
mov
xchg
add
sbb
test
sbb
or
cmp
add
jecxz
sub
test
ret
and
out
dec
lahf
mov
aam
add
scas
mov
int3
sub
dec
imul
add
cmpsb
negl
insl
scas
out
mov
push
pop
cmp
leave
stc
push
mov
testb
jle
mov
add
out
fdivrs
mov
xchg
insl
mov
test
out
dec
xor
push
add
pop
jp
and
arpl
std
push
sbb
jno
cs
push
dec
mov
adc
lock
cltd
push
add
ret
jns
jl
add
mov
add
cmp
faddl
xchg
jb
mov
mov
cli
shll
adc
mov
imul
out
adc
add
cmp
xchg
cmp
sub
xor
jno
push
lea
add
push
pop
iret
and
popf
push
shrl
mov
icebp
mov
lea
xchg
xchg
dec
push
pop
clc
inc
ss
arpl
or
repnz
xchg
insl
in
movsb
out
add
stos
pop
clc
add
inc
stc
test
pop
daa
cmp
add
pop
mov
mov
mov
sbb
and
lea
test
es
mov
ja
mov
push
mov
and
aad
add
lret
bound
cmc
pop
test
imul
ds
inc
mov
out
mov
stos
rcl
add
daa
stc
and
push
and
jg
sub
xchg
sub
mov
adc
shll
add
faddp
sbb
in
and
or
pop
jp
add
jne
ss
ret
adc
xor
xor
xchg
push
fmul
loope
and
pop
frstor
scas
lahf
jmp
xor
mov
sub
movsl
test
insl
mov
mov
repnz
inc
and
pop
mov
xor
outsb
fstl
jae
cmpsb
push
jbe
bound
jge
dec
xchg
add
mov
pop
add
roll
sub
pop
mov
fildl
pop
or
mov
movb
data16
shl
test
ss
and
xor
push
jb
movq
jno
sbb
movsb
sub
or
inc
idiv
lods
push
lcall
jnp
in
sbb
and
imulb
pop
add
mov
lods
aad
and
pop
outsb
mov
mov
iret
xchg
and
jmp
repnz
mov
cld
ss
xchg
fwait
arpl
pop
add
and
imul
and
adc
movsl
jge
sbb
daa
incl
shl
push
add
or
add
cmp
out
sbb
add
mov
fwait
shlb
rorl
jge
sbb
lahf
add
insb
js
adc
adc
ror
es
stos
movsb
mov
sbb
les
sarl
sub
cld
scas
xchg
mov
xchg
or
negb
sub
mov
mov
jb
fcmovnbe
aad
daa
int
decl
clc
pop
jbe
jae
mov
add
push
xchg
jae
cmpsb
andb
add
mov
pop
mov
add
inc
adc
mov
daa
sbb
std
movsb
sbb
push
mov
add
scas
lret
sbb
pop
mov
add
scas
mov
cmp
add
arpl
inc
xchg
xchg
add
stos
and
fcomps
add
inc
sbb
mov
pop
mov
sub
add
sbb
ds
lods
orb
jmp
or
mov
decb
push
leave
mov
mov
add
addr16
xchg
jmp
fucomi
jmp
push
push
or
fadds
fwait
add
and
mov
jle
arpl
cmp
cmp
add
pop
mov
adc
sbb
jmp
test
aas
pop
xorb
lcall
in
dec
push
push
push
jb
mov
in
imul
or
sub
add
daa
out
xor
fldenv
dec
loop
scas
or
testl
fs
add
mov
xchg
mov
cwtl
sbb
add
cmp
ud1
or
imul
push
add
xor
sub
cmpsb
sti
push
hlt
add
xchg
std
push
aaa
sub
jl
lcall
inc
lods
mov
test
pop
xor
pop
push
es
scas
imul
cmp
adc
add
scas
push
rolb
pushl
mov
fisubrs
sub
ret
cli
ret
sbb
sbb
cmpsb
idivb
xchg
inc
faddl
adc
jns
in
dec
fdivrs
pop
push
xchg
jecxz
es
add
mov
repz
add
or
stos
push
adc
push
clc
pop
push
fisubs
pop
mov
outsb
sbb
test
insb
int
das
adc
and
xor
add
dec
es
div
push
push
add
lret
clc
cmpb
add
sub
lea
negb
outsl
ret
fwait
addb
fadd
sub
add
repz
sbb
dec
add
sbb
scas
roll
and
out
mov
cmpsb
jl
loopne
mov
jle
push
xchg
pop
sub
sbb
dec
pop
add
insl
pop
sub
mov
inc
lds
mov
and
mov
add
aas
mov
push
add
jbe
lods
loopne
aaa
stc
add
adc
adc
stos
jecxz
mov
stc
ds
sbb
decl
addr16
insb
rcrl
idivl
add
sbb
sti
adc
stos
add
push
in
fmull
out
add
cmp
xchg
dec
add
mov
jo
cld
jns
fs
fidivl
mov
cwtl
lret
movsl
arpl
bound
ret
pop
and
pop
imul
mov
cmp
lock
inc
leave
jno
cld
mov
sub
stos
pushf
arpl
add
sbb
add
stos
repz
std
sbb
add
int
ret
in
xor
daa
and
mov
dec
pop
xor
idivl
add
popa
cmp
mov
jno
pop
aas
orl
pop
add
xlat
dec
cmc
adc
cmp
ljmp
repz
fidivl
insl
jmp
out
add
push
lret
add
and
in
or
and
xchg
cld
mov
sbb
mov
jo
pushf
sbb
cmp
rolb
cwtl
fisttpll
sub
ret
push
test
outsl
add
insb
icebp
add
clc
aas
sub
pop
stos
jmp
fistpll
out
leave
ss
ds
enter
cld
out
cmpl
lahf
mov
testl
lea
pop
mov
test
xchg
pop
sbb
xchg
add
and
or
pop
pop
nop
idivb
add
or
cmp
inc
out
arpl
and
std
in
addr16
add
pop
and
add
fs
jo
ss
jb
pop
pushf
add
loop
bound
ljmp
mov
pop
in
jae
insl
xchg
outsl
add
outsb
and
in
pop
ficompl
add
dec
iret
cmpb
pop
and
adc
jecxz
xchg
pop
pop
cltd
add
push
popa
fs
enter
and
pop
dec
in
pushf
jl
add
sti
inc
dec
pinsrw
fsts
mov
xor
add
ret
or
out
cmp
pop
pushf
or
out
int3
cmp
pop
add
outsb
mov
cmpsl
xchg
data16
jb
imul
cmp
sub
sub
hlt
inc
xchg
add
test
dec
pop
out
sub
fnstcw
fidivrl
add
jae
repnz
adc
int
jmp
pop
add
cmpl
sbb
dec
push
add
or
add
stos
fists
dec
xor
rcrl
add
add
data16
fmul
sbb
int
add
sarl
xchg
dec
push
sti
jne
shlb
jmp
sub
adc
jp
mov
xchg
cmp
shrl
sbb
mov
arpl
in
leave
pop
add
dec
xor
in
mov
testl
incb
add
or
xchg
push
xor
adc
lods
dec
dec
and
jnp
or
push
xor
mov
ljmp
jno
jae
mov
sub
out
adc
fisubs
fs
stos
lret
hlt
inc
cltd
arpl
shrl
push
and
or
dec
add
mov
push
adc
push
push
lock
ficoml
and
mov
pop
enter
pop
repz
push
das
cmp
mov
and
arpl
dec
xor
and
ss
sub
mov
push
inc
ja
outsb
cmp
jmp
out
subb
and
data16
push
mov
mov
pop
add
sub
clc
insb
insl
add
test
add
sti
sub
add
gs
and
popa
mov
fnsave
xor
xchg
add
ficoms
sub
in
push
mov
adc
jmp
gs
fadds
arpl
pop
mov
add
inc
and
cmpsb
and
popa
push
inc
xor
add
jnp
add
cmpsb
les
lea
dec
jle
aas
mov
jae
das
frstor
xchg
sub
add
out
push
push
add
lret
add
movsl
shrb
call
adc
push
aam
and
jge
add
add
push
outsl
push
and
cmp
addr16
jle
and
mov
ret
pop
add
push
jne
lods
push
xlat
jb
nop
cs
push
add
mov
lea
or
add
iret
aad
mov
ds
xchg
pop
mov
xchg
jns
jne
loope
cmp
xor
call
add
adc
mov
adc
xchg
pop
sbb
leave
cs
mov
gs
inc
scas
pop
sub
push
je
and
icebp
pop
loop
cmp
push
add
mov
mov
cld
es
ljmp
hlt
das
ret
cmp
dec
call
loopne
dec
adc
add
cmp
insb
or
lods
mov
add
aam
repz
cli
das
mov
push
arpl
xchg
add
enter
insl
repz
nop
cmp
aad
sub
add
mov
mov
call
subb
mov
lret
add
push
push
imul
push
and
outsb
dec
add
ja
pop
mov
cmp
icebp
xor
push
bound
fcomps
mov
ss
fcmovbe
jo
mov
jmp
adc
and
pop
stos
jnp
add
mov
fsub
xchg
fcoml
add
test
ret
sbb
test
leave
xor
ret
in
push
sbb
subl
outsb
repnz
rorb
nop
cmp
fld
mov
or
adc
rolb
or
js
pusha
add
sbb
and
sbb
mov
mov
pop
add
inc
enter
or
sub
popa
adc
cmp
sbb
gs
push
xor
and
mov
das
adc
add
or
push
std
arpl
pusha
fsubr
and
bnd
add
inc
cmp
dec
lret
or
add
gs
sahf
dec
jg
sub
cs
xchg
hlt
gs
push
lahf
fs
movsl
daa
or
jecxz
outsb
xor
mov
jl
push
mov
test
sbb
lcall
das
jle
sub
inc
xchg
sbb
inc
into
mov
add
fiaddl
or
push
fbstp
xor
xchg
mov
pop
scas
add
filds
or
scas
fwait
and
jp
push
xor
mov
ret
mov
sub
pop
dec
int3
mov
add
sbb
scas
adc
xchg
or
rolb
rcr
mov
xchg
mov
stos
and
dec
daa
jecxz
andb
lret
les
pop
pop
or
jmp
dec
stos
sbb
lods
movsb
popf
gs
stos
xorl
add
mov
push
mov
pop
push
adc
adc
mov
add
imul
add
fstl
outsb
jb
mov
ret
icebp
test
outsl
sbb
jmp
sahf
mov
and
imul
cmc
mov
jne
mov
push
dec
pop
jns
push
insl
jge
adc
mov
sbb
nop
imul
stos
jge
jecxz
pushf
leave
xchg
add
gs
into
cmp
and
jecxz
fisubl
cmpb
gs
inc
ljmp
out
sarb
sbb
xor
cmp
in
fidivl
cmp
dec
daa
mov
push
inc
jecxz
cs
dec
imul
add
outsl
mov
push
pop
gs
pop
aas
movd
mov
movsl
cmp
insb
sub
arpl
sbb
sbb
adc
cmp
add
pop
xor
mov
dec
pop
mov
inc
add
jl
xor
insb
lds
jns
daa
jecxz
xchg
out
mov
mov
mov
cmp
imul
sbb
in
xchg
cmpsb
aaa
and
add
inc
addb
lods
sub
daa
movsb
push
outsb
jns
add
es
shll
imul
inc
cmp
mov
mov
add
add
sub
mov
lods
sub
gs
sbb
or
aas
sbb
lahf
cltd
ljmp
nop
incl
movsl
and
cmp
ljmp
sbb
xchg
xchg
loope
add
push
jmp
and
ret
lret
test
jg
adcl
add
int
push
out
scas
jns
cmp
sbb
mov
mov
mov
rcll
mov
push
pop
xorb
add
dec
and
xor
and
sbb
fisttpl
sarl
repz
and
hlt
mov
add
mov
jge
pop
mov
test
jns
and
lock
fwait
jle
pop
rol
mov
out
dec
dec
mov
and
push
rorb
and
pop
js
rorb
and
push
and
pop
xor
pop
fiadds
and
sti
stc
outsl
or
add
js
add
mov
xlat
mov
incb
jbe
jmp
mov
dec
fcoms
ja
sub
push
xchg
and
mov
mov
lret
imul
std
add
xchg
mov
fwait
and
les
repz
push
loopne
add
in
popa
add
xchg
and
jl
roll
fisttpll
xor
orl
inc
pop
sbb
cld
and
fidivs
loope
add
mov
push
mov
add
in
sbb
cli
xlat
push
mov
and
mov
or
mov
sbb
lahf
lds
mov
pop
jbe
cmp
jno
cmp
arpl
subl
pop
add
cmp
int3
lods
scas
or
inc
inc
fdivrl
jns
add
lahf
and
and
insb
inc
mov
pop
jmp
cmpsl
sub
inc
jnp
add
add
push
aad
int
add
data16
cmovp
sub
jge
jae
mov
add
aad
movsb
lods
mov
add
lea
cmc
cld
push
mov
or
jl
stc
addb
push
lea
mov
add
pop
sti
ljmp
add
push
adc
mov
shl
push
mov
mov
add
or
inc
leave
lcall
pop
lret
int3
pop
mov
xchg
adc
mov
insl
xchg
sub
mov
adc
jp
pushf
inc
mov
pop
add
inc
imul
stos
push
insl
add
mov
int
push
lret
adc
and
pop
sar
scas
add
loope
sti
jae
xchg
push
and
xchg
xchg
add
imul
jns
jne
adc
xchg
add
or
shlb
test
mov
mov
pop
test
leave
sub
mov
das
mov
mov
pop
fdivrp
sbb
push
and
dec
adc
ret
dec
ret
xchg
mov
pop
push
sub
and
in
cmpsl
movsl
jge
loopne
add
orb
and
xchg
push
lcall
insb
add
bndstx
mov
das
mov
jmp
es
mov
sbb
sbb
jl
sbb
mov
sbbl
mov
lret
rolb
leave
xchg
sub
xor
mov
daa
gs
loope
pop
sbb
je
sub
pop
cs
stc
lock
jno
and
push
sub
sti
subl
and
pop
adc
imul
mov
loop
sub
imulb
jns
pop
es
ja
add
clc
rclb
cltd
xchg
stos
add
andl
sbb
stos
lea
sbb
test
and
mov
popa
cwtl
jnp
ds
add
xchg
mov
repz
fidivrl
mov
add
shrb
add
rorl
pop
xlat
mov
fcmovne
jge
shll
int
inc
sbb
add
imulb
lahf
movsl
loope
add
repz
imul
add
stos
mov
push
popa
inc
loopne
aam
popl
out
dec
ja
ret
sbb
push
repnz
push
or
jecxz
add
mov
sub
and
dec
jecxz
add
jmp
nop
and
mov
movsl
aad
or
rorb
addl
cmp
imul
repz
ljmp
add
loopne
push
sbb
add
out
cmpsb
sahf
add
stos
and
jg
jb
adc
inc
sbb
int
xor
pop
mov
jp
add
xor
cmpl
popa
mov
adc
repz
pop
aaa
out
fldcw
add
ljmp
mov
or
jmp
inc
pop
pop
out
jp
nop
fistpl
sub
xchg
lds
cld
push
add
nop
pop
inc
mov
adcl
mov
and
pop
pushf
xor
add
insb
sub
jle
in
mov
add
aad
test
sub
ja
pop
movsb
mov
add
daa
movsb
in
loopne
mov
add
das
mov
cmp
lret
xchg
pop
xchg
js
add
inc
es
add
imul
and
push
or
xchg
jb
mov
add
inc
test
pusha
sub
dec
jae
rcrb
test
dec
adc
stc
roll
cmp
mov
and
mov
stos
pop
in
int
sub
nop
add
inc
add
lahf
ds
idiv
add
inc
fwait
loop
pop
sub
sub
fsubr
cwtl
test
mov
stos
add
rolb
popl
mov
aaa
stc
xchg
xor
lret
inc
es
sbb
ljmp
stc
lods
mov
shll
push
cs
add
lds
ja
test
xchg
add
jp
stc
out
jo,pt
mov
jbe
test
rcll
jne
mull
iret
rcll
mov
fs
aaa
sbb
xlat
nop
jns
push
andl
dec
inc
out
dec
or
repnz
mov
xor
push
fldt
push
cmpb
imul
fs
cli
jmp
mov
inc
int3
add
xchg
push
push
and
add
sahf
pop
adc
lcall
aam
add
or
rcrl
lahf
mov
mov
jle
mov
sbb
xchg
jno
mov
add
shl
add
xor
and
sub
mov
and
mov
sub
jge
bound
cs
adc
sub
ret
add
andb
inc
inc
lds
js
jns
data16
rorl
cwtl
sub
jge
add
push
mov
sbb
mov
sub
nop
lods
and
ljmp
sbb
add
or
stos
iret
mov
inc
into
mov
xor
cltd
stos
sti
shll
sbb
rol
add
ret
xchg
sub
add
mov
push
add
enter
aas
jno
jecxz
xor
jo
mov
xor
xchg
mov
ds
mov
ljmp
mov
push
add
ret
mov
into
lods
mov
push
add
pop
sub
add
aad
xor
imul
aas
inc
jl
mov
addr16
pop
leave
add
xor
inc
pop
rclb
subl
bound
je
push
push
lods
xchg
jb
js
xchg
movsl
add
shlb
push
and
pop
ret
mov
mov
dec
add
sbb
add
cmp
adc
out
push
add
mov
jecxz
sub
inc
push
dec
ss
and
mov
mov
stc
fnstcw
shr
mov
test
or
outsl
frstor
jmp
xchg
add
idivb
mov
pop
xchg
std
add
pop
mov
add
xchg
dec
sbb
out
or
adc
cmp
int
addl
dec
lods
sbb
sti
dec
leave
out
add
pusha
fcmovnbe
orl
add
mov
fwait
scas
push
pop
cmp
inc
and
test
and
popf
rcrb
mov
lret
cli
iret
flds
lea
fnstsw
repnz
clc
xchg
mov
add
shll
inc
inc
andl
add
cli
adc
adc
and
lods
and
adc
repz
lock
sbb
jnp
lea
jns
aaa
mov
inc
shrb
repz
mov
jg
sub
mov
aaa
mov
fisubrs
add
push
lods
add
and
xchg
dec
mov
psrlw
cmp
or
add
dec
sti
sbb
lret
mov
cltd
imul
push
or
and
les
je
push
add
inc
pop
test
outsb
xlat
sbb
and
add
out
rolb
add
mov
sub
ret
ss
push
mov
cs
bound
cmpsl
sbb
mov
in
and
lock
repz
xchg
xchg
aaa
testl
and
fs
jle
movsb
sub
push
jp
xor
mov
cmp
or
arpl
add
jg
dec
adc
arpl
fcoms
out
arpl
rorb
sub
sbb
dec
xchg
xlat
addb
add
out
sbb
push
sub
xor
mov
push
and
xor
jge
mov
cmpsl
or
enter
aam
fcmovbe
adc
hlt
in
adc
stc
insl
data16
pop
xor
adc
add
stos
cmp
and
push
sahf
xchg
mov
add
xchg
fwait
idivb
popl
test
inc
cmpsl
adc
and
and
js
xlat
fstps
inc
mov
xor
andl
pop
pusha
dec
pop
inc
mov
xchg
fisttps
bound
shlb
and
sub
dec
xchg
jp
mov
xchg
add
ljmp
mov
mov
mov
icebp
xchg
and
test
xchg
and
inc
cmp
out
jecxz
lret
add
fistpl
mov
add
push
push
and
adc
jbe
incl
and
popa
cmp
inc
insb
xchg
mov
mov
ja
rolb
ja
ret
or
mov
adc
add
xlat
xor
mov
mov
scas
shlb
xchg
stos
push
inc
or
xor
xchg
add
cmp
inc
bound
sub
add
ljmp
iret
pop
sbb
ret
add
xor
xor
or
mov
xchg
and
lret
pop
inc
mov
mov
cmpsb
mov
add
stos
fsubp
ds
mov
cmp
inc
mov
inc
sub
pop
mov
push
add
iret
add
test
andb
push
mov
insl
xchg
add
call
cmpsb
and
imul
notl
add
mov
rcrl
and
pop
inc
cmc
repnz
mov
std
sub
and
pop
mov
xchg
clc
and
insb
int
icebp
xlat
cs
sbb
jne
xchg
jmp
fsubl
ficomps
jge
es
pop
scas
cmc
gs
ja
sub
pop
jecxz
sbb
push
add
lds
cmp
leave
mov
push
out
xchg
jge
adc
lds
push
cmp
pop
out
stc
popf
add
out
aad
cltd
mov
pop
sub
mov
clc
push
scas
stos
and
dec
mov
leave
sbb
push
mov
xchg
sbb
add
add
test
arpl
fwait
mov
loop
xor
and
or
lahf
mov
lcall
sbb
stos
call
add
test
and
xchg
int
and
call
ds
jl
mov
xchg
lret
and
cmp
jg
arpl
iret
bndstx
sti
sub
fs
lds
mov
add
mov
add
clc
adc
add
iret
outsb
and
and
shlb
fwait
outsl
repnz
es
stos
xor
sbb
scas
outsl
shlb
icebp
dec
mov
sti
roll
cmp
push
mov
lret
loopne
fldenv
pop
xchg
xor
adc
add
pop
je
idivl
ficompl
scas
inc
faddl
mov
xchg
add
pusha
repz
adc
add
xchg
lea
push
jge
and
jle
add
sti
inc
jns
icebp
push
adc
jmp
and
aam
jmp
cmp
cmp
fidivl
les
pop
mov
add
xchg
add
imul
cmpsb
mov
xlat
add
jp
xchg
add
mov
add
scas
scas
pop
dec
or
and
sub
jns
shrb
hlt
mov
lret
call
icebp
xchg
or
lds
cmp
ds
es
cmp
int3
je
andb
add
stos
and
add
shlb
pop
cmp
mov
scas
clc
xor
xor
cmpsl
testl
loopne
dec
or
cltd
cs
outsb
iret
inc
jbe
movl
sub
push
sarl
push
jg
arpl
push
orl
xchg
and
xchg
xchg
xlat
dec
rorl
and
mov
push
outsb
or
inc
push
icebp
mov
out
mov
push
jl
int
mov
xchg
add
pop
arpl
rcrb
cmp
adc
inc
push
ljmp
mov
lods
push
cmp
or
cmpsl
rcll
out
imul
mov
pop
out
test
add
es
push
inc
iret
jl
dec
lret
pop
arpl
fiaddl
xchg
inc
jle
aad
jge
add
cmp
fcomps
push
pusha
sub
mov
mov
enter
or
test
adc
andl
jns
es
je
adcb
out
cli
daa
mov
and
das
add
in
fcoms
popf
ret
dec
testb
mov
sahf
addr16
popa
ret
push
adc
data16
bound
fimuls
cmp
jecxz
aad
out
jecxz
fsubl
push
ret
cmpsl
xchg
xchg
push
bound
add
pop
lahf
adc
inc
xchg
jne
fidivrs
std
out
mov
pop
xchg
sbb
stos
outsl
mov
mov
jecxz
pusha
add
adc
int3
sbb
fs
into
add
or
push
mov
mov
sbb
aaa
jle
loop
add
inc
mov
xchg
add
es
cmp
lcall
push
push
xchg
add
leave
repnz
js
mov
testb
adc
sbb
adc
add
sub
inc
add
ja
lock
xchg
int3
out
pop
mov
and
loope
lock
pop
fbld
add
mov
mov
popf
add
or
jmp
daa
jb
lahf
push
cmp
cmp
je
xchg
xchg
shl
iret
add
ficompl
rorb
cmp
cld
movsb
add
fsubrs
test
sub
inc
xor
add
aad
mov
xor
add
xor
xlat
add
or
add
ret
cmp
out
enter
and
xchg
into
rcrl
inc
dec
fistpl
mov
ljmp
faddp
mov
dec
fadds
out
or
adc
flds
aas
fisubrl
fcoms
movsl
mov
cmp
aam
sbb
mov
outsb
loope
fistpll
fidivrl
add
and
stc
lret
add
sahf
mov
add
cld
mov
mov
ret
pop
cmp
repz
fs
outsl
arpl
mov
or
out
insb
out
mov
fcoml
cmp
add
iret
fisttps
dec
inc
ds
add
add
inc
sbb
xlat
inc
add
push
fildl
jecxz
pop
jo
push
push
push
add
jl
adc
add
lea
enter
shl
lods
cmpsb
add
movl
jle
xchg
test
fdivrp
and
sub
cmpsl
xchg
ret
out
jmp
cld
dec
sbb
fs
ret
sub
mov
and
popa
lret
repz
inc
add
int
mov
jmp
ds
pop
jbe
insb
movsb
lods
cmpsl
xor
add
inc
xor
in
arpl
aas
inc
ds
stc
xchg
jmp
add
push
clc
insl
jo
xlat
dec
add
push
mov
pop
jl
cltd
cmpsb
lret
xor
fdivrs
xchg
idivb
arpl
lcall
and
add
fistps
and
ja
fstpl
adc
mov
xor
aad
add
xchg
push
jns
mov
scas
add
and
js
fldenv
push
es
add
loop
inc
cmp
les
mov
add
fcompl
jns
cmp
ss
and
sub
mov
pop
out
sub
mov
add
push
loop
jge
movsb
lock
icebp
shl
out
inc
mov
sbb
push
into
xor
add
rolb
mov
int3
add
sub
ja
testl
dec
lds
mov
out
mov
shrb
in
cmp
sub
add
inc
inc
mov
sub
cmpsb
push
or
cwtl
xlat
call
rcrl
enter
fbstp
push
pop
pop
outsb
sbb
jmp
xchg
dec
and
mov
loope
add
pop
mov
jo
out
push
stos
test
stos
ja
pop
and
add
adc
add
lret
lahf
adc
mov
pop
mov
lods
insb
add
lret
roll
mov
mov
fsubr
and
xor
push
cwtl
mov
sbb
mov
ja
and
inc
sub
pop
jbe
or
push
testb
movsb
add
sbb
and
cmpsb
add
outsl
out
push
retw
mov
fsubs
push
dec
cli
mov
and
das
lods
jecxz
mov
int
pop
and
add
and
jle
mov
fimuls
dec
or
pop
xchg
in
add
jb
mov
push
aad
sub
aas
inc
and
jo
daa
in
sub
jle
and
mov
movsl
sbb
push
sbb
and
movb
and
loop,pt
push
inc
lock
sti
inc
add
mov
cltd
add
cmp
push
aam
aad
mov
mov
sbb
scas
and
pop
into
fs
ret
out
jecxz
or
add
and
test
add
push
jns
pop
insl
add
jno
ja
fmuls
pop
jp
push
pop
mov
and
ret
xchg
stc
fiaddl
call
and
ds
stc
xor
lret
push
jo
mov
adcl
push
inc
jnp
push
jp
je
repnz
or
je
mov
mov
add
in
clc
ja
fbld
stos
mov
fwait
test
or
jmp
cmc
lcall
arpl
xchg
icebp
test
out
mov
cmp
xchg
fidivl
add
add
ds
pop
push
and
sub
es
cmp
or
add
mov
push
add
xchg
jge
pop
fdivs
stos
stc
nop
dec
mov
add
lret
cmp
jno
test
xor
mov
mov
gs
jbe
sbb
repnz
push
enter
addl
mov
mov
xchg
mov
jo
add
pop
jne
add
test
iret
fsubrs
mov
mov
or
add
je
clc
add
pop
hlt
adc
rorb
mov
jmp
push
add
lret
dec
adc
popa
ds
xchg
bnd
add
in
imul
out
lods
std
add
lock
mov
lcallw
push
or
test
cmp
add
xchg
cmp
jle
add
inc
mov
iret
clc
icebp
addr16
insb
and
and
enter
jecxz
lcall
dec
into
imul
add
xor
roll
jmp
or
push
xor
add
stos
push
xchg
daa
movsb
lea
sahf
jno
mov
add
ret
inc
dec
mov
add
cmp
call
add
cmpl
add
mov
cmp
pop
sbb
xor
int
mov
lea
sub
std
mull
inc
add
arpl
jbe
pop
roll
test
cmp
pop
aaa
or
sbb
add
faddl
inc
mov
addr16
dec
and
shr
popa
fsts
mov
data16
xchg
movsl
pop
repz
add
xchg
mov
stos
jp
dec
add
mov
cmpsb
sub
orl
fldcw
pop
xchg
lea
push
fstpt
imul
lea
dec
jne
fmulp
fistpl
add
bound
cwtl
add
and
add
add
fwait
mov
es
add
pop
and
jne
dec
xchg
adc
outsb
pop
cmp
xchg
ds
jns
mov
cmp
sbb
lds
stos
xor
push
add
xchg
enter
pop
jo
inc
mov
scas
add
jp
mov
inc
lds
int
arpl
pop
sub
mov
add
dec
test
int3
jb
aas
push
fildll
xchg
pushf
cmc
jo
cmpsl
xchg
andb
in
add
and
fucomip
shrl
add
sbb
pop
shll
inc
out
push
insl
and
adc
dec
mov
lods
add
andb
fwait
xchg
adc
pop
xchg
std
loope
out
ss
sti
inc
inc
jnp
js
xchg
and
or
push
movl
in
push
mov
rcl
shr
cmp
mov
mulb
or
mov
nop
fcoms
push
jnp
out
dec
sub
and
testl
sbb
cmpsb
loopne
xchg
fstl
mov
call
rol
addb
jo
cmp
or
cmpsl
sub
mov
iret
add
mov
xor
push
add
data16
and
movsl
pop
xor
repnz
outsb
icebp
cmp
and
cmpsl
or
cltd
sub
inc
dec
aam
mov
push
cmp
mov
inc
and
or
dec
cwtl
push
xlat
lea
pop
in
mov
popf
push
xchg
rcll
jp
loope
ja
aas
xchg
and
and
mov
ret
push
cmp
sub
jbe
fwait
out
pop
movl
push
mov
add
and
fs
push
sub
nop
cmpsb
fadd
adcb
xchg
push
cmp
lcall
sub
push
add
mov
std
scas
jbe
xchg
add
call
mov
insb
mov
jb
mov
push
clc
jp
data16
aad
sub
imul
cmpl
and
jl
adc
out
sti
adcb
inc
add
and
jmp
rcrl
fisubs
push
int
rolb
mov
jb
sbb
add
decl
add
sbbb
jecxz
push
inc
mov
pusha
adc
mov
mov
jo
mov
popf
pop
mov
call
mov
sbb
fdivrp
es
pusha
push
fs
call
imul
into
inc
xchg
and
cmc
pushf
push
adc
pop
daa
addl
xor
loopne
or
flds
popf
push
mov
mov
jne
insl
iret
inc
aaa
pop
and
and
cmpb
mov
add
xchg
cmpsl
mov
sbb
movsl
cltd
sahf
leave
jae
inc
lcall
cmpsb
cmp
js
arpl
cmp
in
cmpsb
insl
pushf
test
add
jge
js
push
xor
scas
ret
mov
and
sub
mov
shlb
mov
imul
stos
add
or
add
add
aas
in
mov
pushw
inc
push
popf
imul
fnstcw
sbb
pop
aaa
push
lahf
sti
icebp
add
jle
out
lods
outsb
and
enter
xor
mov
mov
add
xchg
cmpsb
pop
push
lods
insl
add
pop
sahf
insb
add
cmovbe
ficompl
mov
nop
add
mov
push
jl
es
pop
lahf
mov
xchg
pop
mov
push
sub
add
stc
jl
aad
into
les
push
inc
arpl
and
aam
adc
jecxz
jne
pop
sbb
inc
pop
mov
dec
aad
cld
add
and
push
xchg
ljmp
aas
test
insb
xor
arpl
add
sbb
dec
das
jecxz
dec
movsl
lods
mov
mov
mov
imul
cmpsb
add
outsl
arpl
add
xor
jle
add
outsb
cmc
sub
rcr
int
adc
mov
enter
daa
mov
fsts
les
out
add
fs
mov
mov
jo
fucom
xlat
into
push
add
push
push
mov
mov
pop
jae
mov
repnz
add
test
add
xchg
push
push
add
rolb
pop
ffreep
add
or
stc
in
xchg
pop
das
filds
shlb
inc
cmpsl
xor
negl
add
rorl
adcb
jbe
mov
add
push
sbb
push
repnz
mov
inc
outsb
mov
in
sub
pop
and
in
adc
incb
push
lret
inc
loopne
push
iret
jno
fmul
and
pop
outsl
inc
lret
sub
mov
in
cmp
jecxz
jg
and
and
lods
adc
push
and
jb
jg
stos
fsubs
data16
pop
mov
jl
or
add
pop
mov
sbb
data16
push
jns
rcrb
bound
imul
sub
add
loope
or
jnp
xor
dec
mov
stos
push
addr16
xchg
push
mov
dec
daa
daa
pop
jnp
pop
mov
sub
sub
out
rorl
dec
mov
push
dec
and
lahf
repz
xchg
shll
and
pop
or
lock
add
lods
dec
movsl
cmc
scas
and
jmp
push
add
inc
imul
add
mov
xchg
ret
mov
jmp
mov
pop
mov
test
fimull
das
add
and
pop
and
mov
mov
mov
push
cwtl
add
lock
sbb
mov
push
ret
andb
push
movsl
lret
mov
fs
inc
loope
fldt
cmp
ds
lahf
xlat
mov
add
pop
movsb
loope
mov
arpl
jecxz
push
sub
scas
addr16
mov
add
jmp
mov
cs
loopne
cmp
adc
lods
in
cltd
add
sub
add
jl
add
or
add
std
addb
jge
fwait
inc
insb
shll
add
dec
push
sbb
cwtl
popa
push
movsl
imul
fstpt
cmp
scas
push
and
add
push
jb
push
sti
xchg
mov
cmp
mov
loopne
jno
add
xchg
pop
or
mov
xor
sbb
lahf
cwtl
arpl
add
sub
out
add
inc
xchg
xchg
test
cltd
push
xlat
imul
mov
pop
mov
es
mov
add
inc
push
mov
xchg
xchg
sarb
mov
mov
nop
cld
jg
and
lods
sbb
leave
mov
xchg
mov
aaa
xchg
lcall
mov
es
dec
sub
int3
lret
jg
int3
pushf
ret
stc
mov
inc
adc
add
gs
bound
insb
loope
cmp
adc
mov
sub
scas
adc
or
mov
fnsave
and
mov
push
fsubrl
xchg
mov
cmp
mov
inc
aad
sub
dec
arpl
and
and
cwtl
add
loope
ja
hlt
out
inc
pop
and
adc
sbb
push
ret
movl
xor
ljmp
mov
inc
popa
rcr
inc
scas
daa
dec
cld
rcrl
xor
xchg
stos
imul
sbb
push
sbb
loop
xor
hlt
cmp
loope
mov
or
jmp
mov
and
fwait
daa
into
adc
or
pusha
add
push
aas
loope
cld
add
jl
add
mov
sbb
roll
and
mov
adcl
push
pusha
ret
sti
mov
lahf
xchg
inc
outsb
nop
mov
and
fs
mov
or
mov
fcomp
sub
outsb
filds
fwait
adc
adc
jmp
push
add
pop
or
stc
mov
lahf
loope
adc
mov
out
pop
and
or
ret
nop
add
test
sti
and
xor
adc
pusha
xor
fidivrs
cmp
into
repnz
xor
jge
jg
mov
mov
fcomip
and
orl
cmp
loop
repz
sub
add
pop
mov
ret
add
or
pop
sbb
rorb
movsl
jecxz
out
imul
dec
jg
aas
add
imul
in
mov
and
negb
pop
xor
int
pop
add
mull
fsubrl
xor
adc
test
stc
and
lock
pusha
mov
add
movsl
dec
frstor
ret
inc
xor
mov
push
push
and
cltd
sti
cmpsl
xchg
fcomip
and
mov
icebp
inc
mov
push
sbb
dec
mov
and
lods
pop
lods
lcall
sub
outsb
add
fidivrl
dec
mov
fwait
add
pop
out
add
inc
jg
xor
fisttpl
iret
add
fldcw
mov
sarl
mov
cmp
mov
adcl
fisubrl
push
pusha
outsb
add
xchg
adc
add
outsl
pop
out
and
gs
pop
out
push
lds
inc
add
pop
jb
sbb
hlt
xor
xchg
and
push
pop
add
cmpb
lods
rorl
mov
mov
fldlg2
mov
cltd
mov
xchg
pop
xchg
jne
cmpsb
cmc
or
subl
add
andl
jns
xchg
pop
stos
lods
hlt
add
cmp
inc
stc
mov
add
out
push
js
and
movb
leave
test
mov
mov
hlt
ds
int
jbe
data16
loop
rclb
cmpsb
sahf
adc
dec
jmp
sbb
mov
and
and
insb
inc
idivl
sbb
filds
lods
jle
jns
popf
sbb
enter
xor
add
aad
shlb
mov
hlt
mov
in
pop
cmp
add
lret
mov
arpl
push
adc
cld
push
mov
dec
stos
testb
jnp
xchg
or
movsb
nop
pop
fists
jo
ret
int
push
mov
pop
sub
fwait
add
dec
loopne
mov
add
arpl
add
nop
push
lods
cmp
pop
push
arpl
jp
xlat
push
inc
imul
sub
test
clc
push
mov
jg
jecxz
les
xchg
int3
xor
or
xchg
mov
jae
and
inc
rcrl
test
jo
popa
sub
test
jecxz
cmpsb
add
inc
fs
fbstp
inc
xor
add
pop
and
mov
inc
cmpsb
mov
insl
movsb
sbb
std
test
cmp
add
lret
push
movsl
shll
add
add
popa
stos
and
sti
dec
mov
push
fstps
xor
inc
inc
rolb
insb
push
ds
es
ljmp
filds
cli
popa
jle
push
inc
adc
fdivl
cmp
inc
jl
push
mov
inc
das
add
loopne
lea
push
popl
mov
imul
inc
std
jg
xchg
fmuls
or
mov
pop
dec
add
pop
push
imul
lock
fs
add
xlat
pusha
lods
pop
loopne
push
mov
out
lahf
add
and
out
mov
lea
add
pop
pushf
jnp
jbe
dec
add
pop
cmpsb
sub
and
sbb
fcompl
push
icebp
add
pop
mov
std
push
sbb
xor
add
and
and
je
roll
mov
aas
xor
mov
lret
push
mov
xchg
sti
add
dec
fwait
inc
pop
loop
mov
fninit
mov
pop
loopne
sbb
test
aas
int3
jne
or
pop
jge
jmp
jecxz
and
add
mov
sbbb
push
mov
andl
jae
clc
mov
mov
mov
mov
fmull
lods
add
fisubrs
sbbb
mov
sub
inc
sbb
mov
push
test
add
fisubl
xlat
subb
sub
arpl
jbe
repz
add
push
mov
mov
dec
jmp
mov
das
lret
mov
cmpsl
lock
mov
cmp
pop
out
push
sbb
add
fstl
dec
mov
loopne
pop
sbb
pop
and
cwtl
loop
jae
lret
add
pushf
outsl
aad
xchg
add
mov
add
clc
stos
shll
pop
or
or
rcrl
js
mov
ja
add
sub
inc
jnp
fiadds
push
nop
fiaddl
pop
add
inc
cmp
andl
or
xchg
add
jl
loopne
dec
test
cmpl
add
aad
cs
push
das
add
pop
rcr
dec
add
rorl
test
sahf
sti
cmp
addl
or
xor
push
and
and
xchg
roll
subl
and
jbe
mov
ret
inc
cltd
pop
and
in
int
or
xlat
xchg
sbb
int3
enter
add
shl
add
sub
add
jbe
pop
scas
fneni(8087
xchg
add
iret
jge
inc
divl
pop
pop
andb
or
test
sub
daa
lcall
arpl
pop
pop
sub
jg
pop
and
adc
jl
clc
testb
sbb
mov
pusha
cltd
imul
in
jle
outsl
pop
jp
lret
lcall
xchg
stos
nop
or
add
in
push
and
inc
ss
push
sbb
es
ret
addl
sti
push
outsl
jg
pop
fwait
add
and
pushl
ret
cmp
iret
dec
and
iret
pop
bound
add
or
mov
lea
mov
shlb
or
push
jne
dec
test
adc
sub
fwait
loope
push
jns
mov
push
adc
sub
sub
rcll
lcall
lods
cld
loope
arpl
int3
cs
nop
fstpl
sub
push
mov
fmul
mov
jno
pop
cmp
or
add
pop
jns
loopne
and
xchg
fwait
repnz
and
pop
in
mov
cld
cli
fs
out
jecxz
pushf
mov
mov
rorl
push
loop
testl
and
cwtl
jae
cmp
xchg
jbe
int3
add
lds
lret
sub
insl
mov
test
and
xor
sbb
shlb
push
aas
call
cmp
adc
lock
mov
add
cmc
gs
xchg
push
lcall
popa
add
bound
scas
sub
into
xchg
stc
sbb
jo
lcall
cmc
jecxz
fnsave
imul
push
mov
xlat
sbb
add
fs
nop
push
clc
and
sub
ss
mov
iret
fwait
add
and
pop
mov
adc
testb
push
filds
add
scas
add
jg
dec
add
sub
push
andb
out
mov
mov
outsl
cmp
mov
pop
xor
cmp
pop
icebp
dec
cmp
add
test
iret
dec
js
roll
push
jl
loop
and
add
jnp
pop
data16
adc
pop
push
adc
into
jmp
pop
sbb
push
adc
ljmp
lods
push
push
or
xchg
popf
movsb
or
xchg
add
inc
and
and
mov
insb
lods
mov
and
inc
ljmp
fistpl
faddl
push
scas
and
mov
hlt
jnp
std
mov
mov
mov
jb
insl
int3
mov
adc
mov
in
out
mov
js
inc
jbe
and
subl
addl
sub
mov
fdiv
adc
mov
jmp
and
mov
mov
add
fldl
bnd
pusha
add
js
xchg
pop
jns
mov
dec
and
arpl
adc
xor
mov
xchg
dec
cmp
and
push
ret
loop
fisttpl
in
jne
ret
int
pushf
add
aam
jecxz
push
cmpsl
arpl
pop
add
or
cmp
mov
push
or
mov
repz
pop
test
add
inc
pop
mov
add
mov
mov
and
pop
adcl
add
sbb
xor
add
mov
jo
add
dec
jle
pop
pop
popa
sub
movsb
fisubrl
and
dec
sub
sti
ja
add
imul
push
and
mov
lock
test
cwtl
scas
mov
lret
int3
pushf
add
mov
iret
adc
push
mov
popf
and
int3
add
fsubs
sbb
inc
add
nop
loop
dec
xchg
pop
sub
shlb
jo
rcll
inc
add
lock
sbb
inc
mov
xchg
je
subl
lret
outsb
and
movswl
test
mov
mov
jmp
pop
pop
pop
xchg
or
add
dec
mov
cmpsb
add
ret
out
and
dec
shll
jecxz
jno
je
sub
push
sub
mov
cwtl
es
xchg
in
add
add
idivl
add
mov
insl
fdivrs
out
fxch
add
xchg
repz
add
loopne
inc
lahf
cli
andl
test
enter
dec
pusha
mov
ss
push
orl
adc
add
mov
mov
jl
cmp
cmp
lock
inc
xchg
insb
push
mov
xor
and
fwait
add
push
or
jbe
inc
or
xchg
fdivrs
inc
test
shrb
sbb
rcll
add
jns
mov
pop
clc
mov
sbb
mov
xchg
sar
pop
xor
mov
mov
and
xor
mov
adc
pop
and
sbb
ljmp
jecxz
add
imul
add
addl
sub
mov
pop
jnp
test
aad
lock
out
add
incb
add
in
mov
mov
fs
mov
cmp
jmp
dec
push
pop
clc
and
in
pop
push
es
mov
jmp
sbb
xlat
push
cmp
add
mov
inc
jl
fdivl
add
inc
jge
sub
inc
or
xchg
xchg
jg
mov
xor
xor
js
cmp
imul
add
dec
inc
insb
repnz
test
add
xchg
inc
aam
push
sbb
mov
popf
fs
inc
andl
and
pop
inc
mov
leave
sub
sub
jns
dec
xor
enter
lock
inc
xchg
push
imul
cmp
sar
push
add
mov
adc
sbb
fistps
lahf
outsb
add
mov
pop
cmp
pop
scas
pushf
mov
mov
ds
push
mov
sbb
pop
add
and
jle
imul
leave
imulb
ja
call
xchg
fildl
std
dec
in
mull
icebp
mov
je
mov
add
mov
cmp
sbb
add
out
sbbl
fidivs
cmpsl
dec
pop
in
adc
loopne
sbb
jno
mov
rolb
vsqrtsd
pop
dec
adc
and
decl
popf
add
xor
mov
pop
sbb
sbb
add
fists
add
jp
sbb
inc
fs
and
daa
out
jae
push
sti
add
xchg
inc
enter
add
push
ret
ss
mov
out
and
cld
push
sbb
xchg
cmpsl
sbb
and
inc
adc
add
pushf
test
test
and
add
lret
imul
aad
jmp
rcr
jns
stos
std
pusha
out
into
pop
push
bt
cmpsb
add
clc
add
fadds
das
jno
adc
faddl
outsb
dec
push
mov
add
pop
daa
push
inc
push
add
cmp
add
xlat
rcrl
pop
add
rolb
mov
pushf
xchg
mov
aam
add
push
pop
jbe
and
add
add
sbb
xor
add
lret
fldenv
nop
adc
outsl
cmpsl
mov
arpl
andl
repz
adc
add
jmp
and
cwtl
cld
jecxz
inc
popf
std
shrb
loop
out
xor
push
daa
add
mov
or
mov
xchg
gs
notl
loope
rcrl
add
jb
call
add
mov
sbb
jmp
and
fprem1
sti
pop
mov
bound
test
ret
push
mov
movsl
adc
jbe
add
xchg
push
lea
andb
pop
pushf
xor
and
mov
mov
or
pop
jno
inc
imul
jge
xchg
and
jnp
stc
imul
add
adc
sar
jnp
mov
add
pop
aad
and
iret
jecxz
sub
pop
leave
ds
sar
mov
jp
jmp
pop
xchg
and
jecxz
pop
dec
mov
push
add
xchg
mov
aad
sub
das
add
pop
ds
divl
out
stos
adc
call
daa
push
push
out
mov
pop
roll
lret
aas
adc
loope
sub
into
ret
cli
cwtl
add
cmp
mov
movl
inc
or
out
lret
add
pop
fildl
in
pop
sub
jmp
add
cmp
xchg
cmp
jae
add
or
add
or
pop
imul
fistl
sbb
adc
mov
and
call
mov
pop
cwtl
stc
popa
xchg
out
add
das
fnsave
fs
mov
ljmp
dec
and
jnp
pop
xchg
outsb
leave
inc
dec
daa
or
inc
push
mov
add
mov
out
inc
sub
or
push
icebp
lret
pop
or
mov
outsb
add
andl
pushf
and
cmpsl
sbb
jle
rcrb
inc
pop
push
add
add
adcb
test
xchg
stos
bound
sbb
lret
xchg
loopne
movl
pop
addr16
add
mov
cltd
xor
cmpsb
add
inc
mov
inc
xor
xor
add
push
mov
cmp
cmpsb
xchg
iret
add
pop
roll
cmpsl
add
ss
es
jp
outsl
sub
and
xchg
sub
js
mov
loope
xor
orb
cmp
cmp
mov
jo
int
leave
xchg
sub
add
mov
ljmp
mov
jecxz
xor
movsb
cli
shlb
push
xchg
dec
lret
out
mov
test
fwait
imul
cwtl
sub
jmp
sbb
push
jp
inc
add
xlat
clc
adc
test
out
daa
sbb
mov
pop
push
and
in
add
xor
add
dec
xor
ror
mov
dec
repz
cwtl
pop
and
adc
arpl
iret
cmpsb
add
loopne
int3
hlt
shl
push
and
and
add
sbb
shrl
arpl
mov
movb
hlt
sbb
mov
jno
pop
adc
jne
lcall
repz
sahf
sub
mov
xchg
jno
mov
cmp
imul
dec
sarl
call
add
add
in
insb
mov
pushf
arpl
and
ffree
or
dec
int
jl
sub
ret
mov
lret
loope
rcll
xor
add
rcl
jb
pop
mov
cmpsb
adc
push
ja
stc
push
sbb
add
mov
cs
xchg
sub
jae
fwait
outsb
add
lcall
pop
xchg
add
pop
push
aaa
xor
in
mov
sub
andl
pop
dec
add
fisubl
out
adc
jl
add
cmp
cmpsb
or
sub
mov
in
test
mov
and
add
popa
scas
addl
jb,pt
mov
mov
jno
cli
xor
mov
lret
sbb
ret
and
xchg
in
add
or
imul
xchg
aad
add
mov
mov
mov
shll
push
cmp
sub
mov
icebp
fimuls
shll
bound
sub
sub
push
and
push
outsl
push
mov
sub
mov
mov
sti
or
add
stc
iret
aam
sbb
fcmovnu
and
loop
in
inc
add
fwait
test
add
push
xchg
and
stc
lret
mov
pop
cmp
xor
mov
and
jno
xlat
dec
mov
mov
and
jne
mov
outsl
mov
int
cmpsb
xchg
add
mov
ds
push
out
add
movsl
jno
cmc
push
std
sub
xchg
ds
xchg
add
jns
test
cmp
jecxz
test
jp
mov
jecxz
fwait
mov
push
sbb
xchg
int3
and
sti
fdivp
scas
mov
mov
test
imul
jge
pop
mov
sbb
leave
add
mov
xchg
in
sub
cmp
popa
outsl
ljmp
and
dec
out
adc
sbb
ds
mov
fmull
push
mov
icebp
xchg
jns
iret
cmp
pop
sub
ret
cs
cmp
insl
test
and
pop
and
pop
mov
aad
rolb
fld
push
rclb
mov
pop
pop
add
ljmp
xlat
ja
ror
inc
repnz
ror
xor
push
adc
inc
cwtl
mov
out
repnz
es
clc
ret
ss
mov
pop
add
in
fistpll
push
sub
push
aas
jb
adc
daa
mov
icebp
xchg
add
test
mov
insl
mov
mov
add
lds
aaa
jmp
nop
mov
pop
pop
insb
faddl
push
or
cltd
add
sub
dec
adc
push
iret
fidivs
outsl
ret
sub
jo
jecxz
fucomi
add
adc
push
mov
or
enter
mov
add
dec
jb
roll
call
iret
icebp
lcall
lret
and
jo
mov
int
xchg
imul
mov
push
movsl
insb
push
ret
lods
inc
cltd
mov
test
xor
sbb
adc
lea
inc
add
xchg
jo
insb
aas
sub
pop
mov
push
cmp
ljmp
xchg
pusha
sti
outsb
mov
data16
add
sub
sbb
das
cmc
jecxz
mul
sub
jmp
lods
mov
faddl
popa
add
sub
add
in
adc
xor
mov
mov
outsb
jne
cmp
cmp
jecxz
flds
xchg
stos
mov
jecxz
mov
xorb
and
test
ret
mov
ficompl
cltd
int3
mov
aad
pop
push
repz
lods
jns
mov
icebp
xlat
inc
stos
xchg
fsubr
test
pop
neg
inc
add
shrl
or
pop
xchg
mov
cmp
mov
ja
fucomi
add
sbb
mov
add
pop
pushf
movsb
aas
jnp
add
cmp
jno
push
adc
mov
adc
test
dec
lahf
xor
add
fisttpl
adc
mov
les
andb
ljmp
in
add
aad
leave
sbb
mov
mov
add
cmp
and
aam
inc
movl
add
sub
call
add
inc
aam
pop
jmp
inc
sbb
into
push
and
imul
lret
pop
xor
sbb
mov
insl
subb
push
add
popf
jl
lret
fxch
sbb
ja
mov
rclb
js
repz
sbb
int3
rcll
push
pop
out
aam
out
jb
sbb
sub
lods
jecxz
inc
arpl
mov
jae
loop
sti
add
stos
jne
pop
lret
mov
cld
dec
push
xor
push
cmpsb
stc
mov
adc
mov
cwtl
ret
mov
ds
mov
inc
fsubs
push
add
mov
sub
sub
inc
push
add
jo
clc
mov
adc
sbb
xchg
movsb
stos
aad
push
xor
lret
mov
call
inc
mov
xlat
scas
push
inc
outsl
jle
adc
movsl
or
add
push
frstor
mov
mov
leave
push
mov
and
inc
fcmovne
inc
addr16
sub
cld
mov
push
cli
es
and
cwtl
add
pop
and
rcll
mov
repz
sbb
push
pop
jl
sub
incb
jle
ror
sub
fcmovne
jb
iret
cmp
nop
and
cmp
mov
adc
mov
scas
jg
mov
jge
sub
sub
mov
rep
fidivl
add
movsl
sub
dec
repz
mov
test
adc
push
lret
mov
and
push
xor
mov
mov
in
insb
mov
add
sub
test
call
add
push
mov
jecxz
fsubrs
in
pop
xor
movsb
sbb
pop
push
lods
xchg
orb
in
pop
mov
adc
std
jecxz
xor
add
cmp
jp
xlat
sbb
sub
fldt
add
xor
and
lea
add
jb
cmpsb
add
and
mov
ficompl
aaa
push
ret
ja
add
or
fcoml
and
mov
arpl
jns
stc
sbb
add
jae
dec
adc
sub
push
mov
add
insb
push
lret
push
and
test
xchg
xor
add
or
cmp
inc
decb
es
cltd
mov
add
pop
loop
jg
dec
add
xor
shl
and
sub
jnp
push
add
sahf
bound
add
aaa
test
cmp
jecxz
add
mov
cmp
push
xchg
dec
and
xor
push
mov
fwait
add
push
mov
mov
shlb
mov
iret
adc
adc
add
out
call
or
lret
cmp
add
mov
dec
push
add
out
push
std
cmp
repnz
mov
mov
sub
adc
in
xchg
sahf
sub
sbb
jns
jmp
mov
xor
mov
add
rolb
fwait
hlt
leave
fwait
sbb
xchg
and
lcall
cmp
or
movsl
xchg
add
aam
es
popf
adc
cmp
jecxz
push
in
repz
lds
mov
inc
shrl
mov
movsl
dec
and
inc
daa
add
mov
les
jecxz
cmp
test
jbe
and
jg
and
jl
push
add
pusha
cmp
aam
xchg
cmp
pop
jae
ja
loopne
mov
fs
jmp
mov
cmp
add
push
inc
and
push
hlt
stos
mov
loopne
push
and
add
ret
add
sbb
add
sub
jmp
mov
js
xchg
inc
and
inc
adc
fnstcw
xchg
fidivl
aad
jg
and
jge
and
mov
out
push
sti
lret
ja
add
fldenv
cmp
xor
mov
sub
aaa
outsl
in
dec
mov
lock
pop
movsb
pusha
sahf
scas
push
mov
push
cwtl
testb
inc
adc
inc
cmp
add
inc
or
xor
mov
pop
mov
pop
sarl
lods
mov
or
call
shll
js
and
movsl
icebp
std
mov
inc
ret
add
mov
je
or
xor
pop
sub
sbb
cmp
dec
lock
add
popl
add
sbb
stos
cmc
in
pop
jae
cmp
xchg
arpl
outsl
fidivrs
outsb
add
stos
mov
push
mov
mov
mov
cmpsl
xchg
aas
mov
add
and
push
lahf
stos
inc
mov
push
mov
orl
leave
jl
and
jbe
mov
data16
push
jp
addr16
pop
movsl
fistpll
hlt
sbb
repnz
mov
add
mov
pop
push
add
stc
in
xchg
push
stos
add
sarl
jne
sbb
sahf
sarl
and
mov
sub
push
fcmovne
or
jmp
add
push
jns
lods
sub
add
dec
lock
xor
xchg
sub
pushf
movsb
add
shlw
in
imul
sbb
mov
pop
aam
data16
out
stos
add
popf
repnz
add
push
xchg
cmp
and
out
addr16
lods
add
inc
dec
pop
repz
in
add
jnp
mov
dec
push
and
loop
mov
push
add
add
adc
add
add
xchg
or
in
mov
fs
lock
enter
sub
sbb
fsubr
mov
int3
das
jecxz
test
lret
push
int
push
jl
and
xchg
mov
out
jecxz
repnz
jp
pop
std
pop
int
add
push
lea
imul
xchg
iret
sub
inc
push
push
xlat
sub
lret
mov
into
xor
sub
mov
add
lock
stc
movsl
mov
add
into
faddl
xor
sbb
cwtl
xchg
test
std
ja
lods
test
xor
cmp
add
ja
inc
pop
xchg
mov
into
es
or
call
fisubl
jl
repz
sti
loope
imul
divl
and
loopne
outsb
mov
pop
push
mulb
inc
mov
jg
mov
cmp
jbe
xchg
xor
incb
jns
inc
imul
adc
fisubrs
mov
push
ret
inc
dec
xchg
mov
mov
add
testb
fstpt
or
and
jmp
ret
or
or
mov
push
add
aaa
cmpsb
push
add
xchg
movb
lret
add
lret
add
out
ss
add
xchg
mov
add
andb
aas
sarl
sahf
dec
movb
add
pop
movsb
flds
loop
dec
and
cld
rclb
and
mov
jp
inc
add
int3
lods
cmpsb
jb
addb
jg
sbb
add
mov
or
arpl
inc
or
xor
and
mov
pop
sarl
mov
cltd
adc
add
mov
push
inc
and
and
pop
addr16
mov
xchg
add
sub
ds
push
mov
inc
ja
jnp
and
sahf
lret
mov
xchg
cs
pop
mov
arpl
pop
xor
sub
aam
add
sbb
lods
add
or
xlat
pop
add
sub
cld
std
add
add
in
mov
adcl
inc
or
jbe
lcall
paddusb
jp
insl
inc
stos
lea
fnstenv
call
fldl
hlt
inc
sbb
scas
and
test
inc
push
andl
imul
pop
add
nop
mov
jbe
xor
and
lret
lods
mov
cmp
pop
and
lea
roll
sub
in
mov
push
stc
add
mov
andl
jbe
add
arpl
sub
stc
aaa
xchg
add
jbe
popa
pop
xchg
sbb
and
imul
and
ljmp
adc
jns
pop
out
inc
fmuls
jecxz
or
cld
fiaddl
pop
stc
inc
dec
roll
shrb
inc
mov
xlat
dec
stos
jecxz
xchg
jg
rolb
cld
sub
mov
sub
popa
dec
ja
ds
shlb
daa
in
lds
add
ss
add
aam
add
lret
adc
dec
add
sbb
add
and
or
push
leave
ljmp
xor
push
jae
jne
in
sub
add
sbb
cli
push
lcall
pop
xor
decl
push
adc
mov
add
pop
xor
retw
mov
insl
outsb
or
std
shrl
test
xchg
sbb
outsb
xorb
add
loopne
nop
dec
add
call
dec
push
andb
mov
in
xchg
call
pop
test
cmp
mov
or
xchg
cmpsb
dec
xchg
int3
sub
outsb
mov
push
mov
pop
cmp
add
je
sbb
gs
rclb
jp
and
xchg
sbb
sbb
jo
pop
mov
or
pop
movsl
add
daa
sbb
loop
cli
ds
repnz
inc
dec
sub
and
pop
push
outsl
pop
push
jmp
push
pusha
push
jbe
and
shlw
lods
fwait
jecxz
arpl
mov
mov
jns
xchg
xor
and
cmpsb
movsb
fsubs
push
or
sub
fbld
mov
notl
repnz
mov
push
xchg
mov
sub
cmpsl
fmuls
xlat
dec
add
notl
inc
addr16
cltd
jno
call
mov
xchg
out
out
cmp
pop
xor
test
lret
sbb
inc
ret
inc
jnp
add
fisttps
leave
add
pop
add
jns
sub
xchg
jo
les
add
mov
shll
fdiv
out
inc
jl
add
les
es
pop
push
add
lret
mov
sub
sbb
push
cwtl
icebp
add
add
cltd
sbb
jmp
sahf
push
shll
cmp
stos
mov
and
jbe,pn
xor
or
hlt
mov
jno
push
gs
mov
mov
dec
jbe
insb
dec
imul
xchg
cmp
jns
cs
incb
data16
and
cmp
rcr
ficomps
test
lods
add
or
pop
add
xchg
mov
mov
xchg
lock
aad
test
inc
sahf
hlt
push
or
lret
test
in
lods
out
mov
pop
or
push
jno
add
in
sbb
mov
popa
cmp
outsl
in
jne
mov
sub
mov
test
jg
pop
outsb
inc
xchg
sbb
jo
and
out
stos
or
mov
subl
std
out
repz
add
fs
sbb
xchg
jns,pn
lret
mov
daa
pop
sbb
add
adc
cmpsl
cmpl
insb
add
mov
xrelease
xor
add
ss
pushf
or
push
aad
ds
leave
add
jge
xchg
xor
adc
movsl
push
mov
cmp
test
add
repnz
aas
xor
pop
and
inc
imul
lsl
int3
mov
les
dec
scas
push
nop
pop
sbb
sahf
jmp
fiadds
dec
insb
outsb
add
jne,pt
mov
cmp
mov
es
or
loop
add
and
ret
xchg
pop
xchg
adc
push
inc
pop
in
jns
xchg
xor
scas
or
stos
or
xor
pop
cmp
iretw
adc
push
lds
test
in
add
fisubl
pop
add
cmp
dec
pop
add
and
lds
int3
repz
ljmp
cwtl
cmp
dec
pop
add
aad
aas
and
jge
add
inc
andl
sti
int
jg
lock
dec
mov
lret
mov
sub
and
xlat
outsl
pop
filds
out
icebp
dec
stos
push
cmp
add
or
mov
cmp
mov
sub
jbe
hlt
mov
dec
add
sub
jo
movsb
leave
adc
imul
and
mov
loopne
adc
fcomps
das
xchg
rolb
or
daa
jns
jbe
add
iret
pop
add
sbb
lds
fwait
mov
clc
pusha
shll
and
rcrb
inc
repz
imul
or
test
add
add
and
add
mov
sbb
test
repz
sub
lods
cmpsb
movsl
mov
cwtl
and
es
sub
roll
test
cmp
dec
and
cmc
or
add
out
mov
xor
cld
mov
jge,pn
add
imul
out
add
in
aad
push
arpl
push
aam
jecxz
pop
mov
sub
add
xor
add
inc
imul
lret
push
mov
sbbb
or
xchg
xlat
jne
pop
pop
jmp
hlt
inc
xchg
mov
cld
cmpsb
mov
xchg
inc
nop
incl
outsl
out
sti
and
stc
fildl
sub
ret
test
fucomi
cltd
cwtl
andl
jecxz
xlat
add
jo
sub
popa
or
sub
pop
adc
jl
jecxz
test
add
cmpsl
xor
pop
add
lret
xchg
xchg
bound
xchg
xor
inc
jne
add
leave
ja
test
jo
mov
ret
mov
jmp
push
add
cmp
cmp
or
sub
dec
ljmp
call
lret
mov
stos
je
inc
xchg
add
cmpb
sbb
dec
int
test
and
rclb
xor
mov
xchg
inc
data16
out
sbb
fimull
fsubl
dec
pop
cmp
out
iret
clc
and
fistl
xchg
dec
aaa
add
mov
xchg
add
fcmovnu
xor
insb
testb
push
pop
push
xor
sahf
cmp
sti
ljmp
imul
fisttpll
insl
mov
inc
cli
push
add
js
jp
cmp
sbb
jb
movsb
xor
pop
pop
ds
mov
xchg
gs
aam
inc
xchg
lret
aaa
lret
and
mov
mov
add
cmc
push
movsb
sub
pop
add
ret
cs
jp
loope
lahf
ds
sub
adc
addb
dec
call
jae
out
sub
and
rcll
or
push
in
loope
mov
fwait
out
js
loop
call
push
out
xor
and
cmp
mov
xor
iret
daa
addr16
lahf
rcr
jp
cmp
test
fsubs
add
push
int
add
add
enter
cmp
pushf
jb
fwait
sub
mov
imul
mov
push
dec
or
xchg
in
aad
stos
scas
std
int3
lret
inc
add
pushf
sahf
mov
fadds
xorl
jmp
aaa
add
dec
call
js
into
xchg
add
stos
inc
jae
add
or
mov
out
pop
outsb
xchg
ret
popa
call
les
repnz
out
inc
pop
sbb
push
daa
inc
ljmp
js
andl
jnp
mov
lahf
fstps
mov
mov
mov
add
scas
dec
in
pop
mov
xchg
jmp
mulb
cmpsl
mov
loope
pop
stos
and
outsb
inc
pop
sbb
jb
stc
add
mov
lret
add
movsb
dec
cmpsb
jno
es
add
mov
add
add
adc
aas
sub
insb
mov
jge
in
xchg
cmp
push
push
imul
push
fcmovne
xor
cwtl
enter
cltd
movsl
dec
scas
add
fs
add
adc
add
cltd
adc
pop
xchg
xor
add
hlt
mov
and
stc
jo
mov
sub
add
sbb
sub
add
test
arpl
int3
lods
or
fcmove
jg
push
add
push
int
scas
pop
pop
ja
aas
in
mul
inc
push
jo
cltd
and
cmova
add
and
rolb
adcb
fdivp
jns
pop
sti
sub
arpl
jae
and
jmp
sbb
lds
mov
mov
mov
je
js
jmp
popf
push
movsb
sarb
mov
xorl
mov
add
test
mov
dec
adc
movsl
add
inc
or
and
cmp
push
sub
arpl
add
xor
xchg
ret
int
sub
push
testb
add
xorb
movsl
xchg
or
xor
fstpl
ss
cmpsl
push
lds
mov
stos
ds
mov
int
dec
sbb
aas
in
add
add
dec
push
call
push
out
pop
mov
outsb
cmp
push
cmovbe
in
in
js
shll
shrl
mov
mov
pop
mov
mov
pop
enter
xchg
fwait
in
mov
xchg
popf
cmp
or
stos
cmpsl
loopne
call
std
mov
xchg
push
pop
pop
and
push
inc
pusha
shrl
bound
fsubp
int3
inc
or
sarl
sub
mov
imul
into
mov
mov
push
mov
sub
test
add
gs
mov
pop
lcall
lds
dec
mov
pusha
and
mov
add
adc
and
pop
sbbb
jge
ljmp
and
sbbl
in
push
fists
add
and
fcomp
xor
mov
push
mov
pop
and
add
je
add
inc
cmp
and
shrb
roll
cwtl
shl
stos
push
outsb
test
sti
and
xchg
push
adc
pusha
das
lahf
add
lock
cld
arpl
xor
add
fwait
in
sub
add
sub
imul
mov
lret
push
in
cld
xchg
add
jno
repz
test
les
pushf
or
add
lds
push
daa
pop
arpl
sub
je
jbe
add
aam
pop
addb
stos
or
xor
sbb
add
cmpsl
fs
lahf
add
and
xlat
dec
jecxz
add
ret
int3
adc
dec
add
cltd
sub
rolb
sub
mov
mov
jns
and
sti
lahf
and
mov
sahf
push
das
jmp
out
sub
sbb
mov
cmpsb
add
test
xchg
lods
lret
jbe
push
and
rcr
jmp
mov
add
xchg
popa
sbb
and
rolb
mov
jne
mov
push
add
inc
sbb
pop
in
add
xchg
add
stc
mov
add
aam
popf
arpl
lods
mov
mov
ds
pusha
scas
sbb
mov
xlat
mov
add
movsl
inc
fwait
add
mov
xor
push
arpl
push
repz
adc
sub
mov
lcall
inc
pop
mov
and
sub
mov
cmp
xlat
or
add
xchg
repz
pop
adc
add
in
jp
repnz
out
xlat
lcall
ds
sbb
dec
mov
repz
insl
mov
add
xchg
cmpsb
dec
cmp
aas
out
push
xor
add
das
fsubs
movl
cli
icebp
pop
and
xor
mov
imul
lcall
and
mov
leave
add
push
cmp
add
test
xchg
pusha
mov
aad
iret
pop
jl
leave
int3
add
bound
loopne
jmp
aad
imul
xchg
shrb
xchg
out
cli
and
sbb
sahf
jno
add
into
jne
je
pusha
faddl
cmp
in
fmul
mov
leave
add
jmp
rcr
sub
add
push
cmpsb
mull
andb
dec
mov
lret
push
add
out
popa
test
or
mov
cmp
add
in
mov
sub
sub
fstpl
ret
mov
lret
shlb
and
jg
xor
ret
pushf
add
mov
sbb
data16
add
mov
int
sbb
mov
xchg
popa
mov
fsubs
add
pop
scas
inc
push
and
pop
adc
loope
pop
rcr
add
mov
js
add
ss
push
add
xchg
cmp
sbb
ds
cmp
and
xorb
pop
adc
sbb
add
add
inc
mov
adc
add
cmpl
xchg
xchg
pop
cmp
divb
outsb
adc
fidivs
or
sahf
inc
cmc
add
shr
add
and
fadds
mov
pop
xor
rolb
dec
jmp
enter
ds
cmp
add
push
push
pusha
jecxz
nop
mov
adc
bound
cmp
cwtl
push
in
xchg
sub
lods
loop
fimull
mov
mov
add
inc
and
fldl
sub
jge
push
outsl
and
fisttpl
cltd
mov
pop
add
loope
mov
rcll
lcall
loopne
xchg
xlat
ret
mov
arpl
xchg
out
jnp
arpl
call
xchg
pop
push
sub
mov
push
ret
and
mov
add
inc
pop
and
ret
pop
xchg
mov
sub
jle
lods
imul
cmp
push
das
fisttpll
adc
cmpsb
add
cmpl
sahf
bound
pop
sbb
andb
je
adc
cmc
jno
sbb
sti
mov
ret
add
xlat
repz
shll
fnstenv
dec
mov
xchg
lret
mov
add
mov
push
push
add
fsubs
xchg
add
mov
mov
dec
and
jbe
or
adc
jb
test
pop
into
rcrb
sahf
or
fstps
or
repz
js
add
cmp
push
push
scas
and
lcall
jns
push
jae
lods
flds
jne
mov
out
sbbb
loope
cmpl
dec
shll
xor
or
add
mov
das
jecxz
sbb
shlb
addr16
add
mov
mov
sub
addr16
jmp
test
stc
jno
int3
cs
and
arpl
rclb
es
arpl
aas
pop
ret
inc
adc
or
mov
fisttps
lods
icebp
lret
ja
and
add
fs
mov
cmp
mov
mov
push
cmpl
neg
loopne
lea
add
aad
push
cmp
fwait
rcll
cld
pusha
ror
jmp
add
popa
sbb
xchg
and
add
lock
mov
mov
jno
leave
add
mov
add
fs
add
add
sub
and
add
andb
mov
xor
cmp
add
and
into
sub
adc
dec
sahf
mull
inc
lcall
es
pop
je
add
cli
xor
int3
mov
and
sub
data16
sub
inc
loop
insl
mov
test
lcall
xor
or
add
or
inc
and
test
jns
mov
mov
sub
test
int
and
daa
dec
std
pop
mov
ja
mov
cmpsb
fs
clc
pop
mov
cmpl
pushf
pop
popa
adc
mov
or
sbb
add
sub
stc
xchg
imul
pop
pop
cld
lods
arpl
dec
add
and
and
cmp
mov
pop
mov
pop
mov
je
add
out
les
push
testb
push
scas
and
jno,pt
test
cmp
popa
aas
push
xchg
mul
sub
pop
add
xchg
mov
insb
shll
mov
mov
ret
add
sub
nop
inc
mov
test
add
and
jbe
std
xchg
mov
mov
sub
rcr
and
xchg
cwtl
and
and
add
mov
mov
aad
sub
inc
xlat
add
fmull
and
jno
lods
push
test
push
adc
aas
sbb
add
pop
jp
xor
out
jmp
jge
sub
mov
cltd
push
filds
sbb
sbbb
fcom
shlb
and
jmp
jge
nop
outsb
inc
stos
and
in
loope
aam
add
or
ficomps
xor
sub
add
insl
insb
pop
add
jno
mov
sbb
cmp
jns
cmc
add
pop
fsubrl
and
cwtl
nop
push
xchg
js
gs
lahf
mov
inc
ret
jo
aam
adcl
sti
and
aad
fmulp
jmp
dec
imulb
add
lret
iret
les
mov
arpl
add
scas
and
stc
aaa
adc
cltd
add
loop
dec
jg
cmp
daa
cmp
mov
add
lea
xchg
aaa
pop
data16
popf
lods
cmp
and
dec
jg
in
cmp
sub
mov
push
and
lea
inc
insl
adc
ret
push
xchg
ss
add
imul
es
push
mov
push
test
pop
and
push
sbb
sub
add
mov
dec
je
jb
and
loope
sbb
addps
pop
xor
mov
adc
fmul
clc
popf
bound
cli
ja
sub
pop
add
sbb
incl
and
js
adc
push
into
daa
cld
mov
push
adc
xchg
xor
jg
sbb
icebp
cwtl
aad
add
push
fldl
mov
and
ret
or
test
xchg
xchg
loope
insb
outsb
call
je
mov
sub
xchg
into
adc
mov
pop
push
mov
gs
push
mov
jbe
in
add
insb
orb
add
and
out
leave
dec
add
add
mov
sbb
xchg
arpl
icebp
add
push
mov
stc
fsubr
aam
leave
fildl
test
inc
pop
int
mov
call
ja
in
cltd
pop
add
jne
mov
ret
in
add
ja
push
std
outsl
adc
cmp
ret
and
movb
push
sbb
xchg
int3
gs
inc
cmp
or
add
jle
mov
in
add
jecxz
sub
xorps
mov
add
lret
cmp
mov
repz
add
or
xchg
pop
cmp
mov
adc
test
cli
and
jb
shlb
and
cmp
add
or
add
pop
cli
rolb
jecxz
je
add
sub
inc
add
ja
add
notl
fsubl
xor
xchg
mov
mov
loop
mov
add
adcb
sbb
and
xchg
das
mov
in
cwtl
sti
add
jl
jno
mov
sub
sbb
dec
push
flds
stos
dec
sub
mov
xchg
jecxz
out
gs
pop
mov
fsubl
adc
dec
xor
xchg
jmp
add
mov
lea
inc
mov
insl
nop
and
pop
mov
mov
mov
xrelease
and
adc
add
repz
cmpl
inc
les
into
aad
pop
movl
hlt
std
addr16
test
xchg
repz
pusha
movsl
xchg
and
mov
sar
fldt
jecxz
sbb
xchg
lods
aam
ret
jnp
scas
mov
ds
lock
jne
add
xchg
insl
jg
adc
sarb
mov
gs
das
xor
rolb
mov
dec
jecxz
add
es
dec
int3
addb
shlb
sub
popa
mov
push
inc
xchg
in
adc
aam
push
inc
add
xchg
xchg
arpl
xchg
roll
inc
add
clc
mov
or
fdiv
divb
inc
add
pop
pop
shl
xchg
sub
mov
int3
ror
or
add
int
hlt
sub
xchg
ret
notl
insb
aad
sub
xor
and
aad
test
mov
aam
ficompl
mov
sbb
mov
mov
dec
push
add
push
leave
pop
or
enter
int3
lea
inc
add
jmp
sub
gs
andl
shlb
inc
stc
mov
pop
sbb
iret
add
hlt
jge
cmp
ds
ret
mov
outsl
lods
das
add
sahf
pop
mov
xchg
cmp
cmp
fwait
jne
adc
and
roll
leave
lahf
cltd
fistl
mov
mov
aam
pop
inc
add
fcmovnu
shll
ror
sti
or
and
std
pop
add
inc
sub
and
sbb
sub
add
and
xchg
and
inc
fs
out
test
jae
and
jmp
dec
aad
popa
cltd
enter
push
pop
insb
and
mov
pop
arpl
mov
divb
nop
aas
push
dec
add
jne
xor
fldl
mov
es
lret
jbe
gs
sub
out
lock
hlt
xchg
add
lcall
push
add
icebp
mov
xor
add
aam
mov
xor
mov
sbb
inc
pop
lods
insl
add
out
cli
add
insb
add
mov
adc
cwtl
add
roll
push
inc
sub
gs
sti
cmp
and
push
fwait
repz
push
in
add
xchg
add
data16
and
test
stc
mov
mov
stos
cmpsl
fbstp
fs
push
inc
mov
nop
jnp
sub
and
push
mov
stos
add
jl
sub
jne
pop
push
and
cmp
sbb
sub
es
dec
xor
mov
sbb
jno
cmp
xchg
bound
aad
mov
push
add
mov
and
mov
add
repnz
add
cmc
loope
mov
cli
pushf
enter
sar
xchg
add
mov
pop
add
shrl
lcall
push
add
and
xchg
jo
addl
jle
jecxz
mov
sbb
add
lods
mov
jl
push
pop
sarl
std
add
rclb
add
fildl
dec
mov
mov
and
shrl
into
flds
push
jns
daa
movsl
add
push
and
jbe
inc
shlb
mov
pop
pop
in
repz
sub
out
ss
adcb
push
pop
sbb
sub
inc
mov
int
jecxz
cwtl
rorb
int3
jmp
xor
jecxz
sarl
mov
add
lea
insl
add
movsb
mov
int3
cmp
sub
or
add
out
out
add
xchg
mov
outsb
pop
es
add
cmpl
enter
test
jne
sub
push
mov
mov
mov
insb
pop
cs
add
pusha
push
mov
xchg
fsubrl
mov
xor
add
add
jae
xor
movsb
mov
or
shrb
cmp
scas
sbb
pushf
mov
cmp
sbb
roll
xchg
mov
insb
pop
adc
xor
cmp
lods
mov
movl
imul
mov
xchg
pop
pop
test
add
push
inc
jp
mov
es
dec
stc
or
xchg
xor
mov
ja
daa
add
xlat
fldl
into
aam
clc
bound
or
cmc
adc
mov
mov
shll
sbb
pop
pop
mov
lock
push
sub
sub
add
pushf
cld
add
xor
add
mov
repnz
subb
add
mov
add
cwtl
test
xor
ja
or
aaa
xorl
es
xor
imul
fcoml
sbb
jns
outsl
jecxz
xor
dec
lahf
pop
stc
test
push
jbe
mov
flds
int
mov
mov
sub
inc
or
add
cltd
nop
aad
js
dec
push
sub
ret
push
fbld
mov
pop
and
sbb
test
add
fwait
mov
jb
inc
cmpsl
inc
add
mov
pop
cli
push
outsb
add
cwtl
sahf
fwait
add
sbb
ja
sbb
lock
cmp
mov
lret
push
xor
xor
pop
push
ljmp
dec
sbb
adcb
sub
add
sub
pop
shl
push
cmp
das
lods
loop
icebp
out
jae
add
sbb
lret
or
lods
add
scas
jno
add
inc
in
sub
fiadds
pop
repz
or
fdivrs
add
add
enter
sbb
adc
test
gs
add
and
sbb
and
add
adc
mov
sbb
mov
lret
cmp
mov
add
push
adc
es
aad
rcll
shll
xchg
dec
lea
add
jb
negb
add
lahf
fadd
xchg
adc
repnz
aad
ret
mov
dec
mov
mov
iret
fisttps
jne
loop
fisubl
xchg
sti
mov
sbb
mov
pop
stc
push
xchg
add
stos
add
in
adc
pusha
add
dec
and
mov
ret
ds
mov
jmp
and
add
mov
jb
add
jno
jo
test
jge
add
fs
xor
mov
add
loope
inc
in
mov
imul
cwtl
roll
dec
and
jg
add
fcompl
lods
add
js
sub
je
jp
xchg
and
mov
add
jecxz
and
dec
push
lahf
movsb
jo
and
push
fs
mov
cmp
loopne
aas
mov
sbb
mov
lock
sbb
push
add
jno
je
xor
cmpsb
add
bound
add
in
rcrl
inc
and
sub
add
sbb
mov
jg
jecxz
xor
and
mov
lods
and
aam
mov
push
arpl
lcall
mov
testl
and
add
add
jge
insl
jl
sbb
and
and
xchg
faddl
cmp
xor
mov
dec
cmp
sub
cmp
jns
inc
pop
sbb
cmc
in
mov
test
pop
int3
dec
inc
and
ljmp
pop
push
mov
mov
andl
jmp
add
aam
mov
test
mov
push
mov
and
inc
jo
sub
insl
pusha
push
shlb
cmp
lahf
sub
add
inc
icebp
insb
test
popf
cltd
mov
ljmp
mov
loope
jecxz
scas
out
push
pop
jecxz
sbb
repz
pop
ds
inc
adc
pop
mov
add
inc
mov
ds
xchg
sbb
lods
add
loop
popa
into
push
or
lret
inc
mov
les
sbbl
pop
mov
jle
sti
icebp
cld
add
pop
mov
jno
stc
dec
mov
mov
push
mov
enter
lods
push
adc
andl
hlt
sub
ja
cmpb
incl
icebp
add
pushf
roll
nop
adc
call
das
ds
mov
fdivl
mov
add
insb
dec
data16
pop
loop
aas
mov
and
pop
mov
cmp
out
enter
inc
fmull
aaa
mov
pop
xor
out
fs
add
test
mov
add
js
or
mov
jle
pop
cwtl
add
push
pop
add
ffreep
addl
rolb
test
lcall
shll
xchg
daa
push
push
mov
and
or
lahf
add
sub
call
rclb
pop
and
jnp
mov
rep
icebp
xchg
pop
dec
das
in
daa
in
fcmovnb
add
pop
lret
notb
loope
xchg
adc
ret
int
jae
mov
fmull
out
cld
cmpsl
mov
add
lock
jg
call
lret
add
in
aad
push
and
rorb
loope
jge
leave
jmp
out
xlat
bound
xor
inc
stos
test
rcrl
add
ja
push
sbb
xchg
mov
stc
pop
jg
pop
add
push
mov
pop
sbb
inc
inc
mov
enter
and
jne
repz
push
mov
add
sub
pop
cwtl
mulb
jg
cltd
icebp
push
sbb
xor
mov
or
popa
movsl
add
adc
ficoms
push
sbb
lcall
add
lea
hlt
add
cli
push
repz
sbb
pop
xchg
jnp
mov
inc
mov
push
xchg
rcrl
test
sub
fsubl
xchg
lods
ds
shll
xchg
testb
stos
sub
imulb
sahf
dec
iret
add
out
outsl
sbb
sub
lods
mov
mov
or
xchg
sbb
add
or
loopne
sbb
je
pop
and
ja
add
fwait
rcrb
imul
dec
fists
in
push
mov
scas
add
jnp
xchg
pop
shlb
mov
add
jbe
add
add
add
mov
popf
sbb
clc
push
inc
sub
lcall
cmpsl
mov
ss
outsb
xchg
pop
xlat
in
inc
mov
pop
or
xchg
and
je
push
fstpt
sub
addr16
mov
int
and
mov
add
jp
lcall
cmp
and
test
ja
jp
lods
pop
out
sbb
inc
in
aam
dec
add
mov
inc
and
insl
arpl
add
insb
dec
insl
repnz
and
xchg
clc
sbb
and
pop
leave
sahf
add
lcall
sub
push
test
pop
and
push
lret
cmp
pop
repz
inc
mov
lds
out
pop
stc
lret
lahf
add
nop
nop
push
sbbl
in
push
add
xor
sbbl
mov
ja
jecxz
push
and
xor
push
scas
sbb
in
add
mov
add
cmp
push
add
and
or
fldpi
mov
add
jo
in
add
add
xchg
loop
add
lcall
sub
mov
push
inc
add
insb
xchg
enter
stos
add
repnz
push
stc
aad
add
and
mov
adc
push
jnp
cmpsb
xchg
popa
in
pop
mov
add
cltd
pop
dec
xchg
add
rclb
ror
outsb
mull
jmp
enter
nop
stos
xor
cs
add
fwait
cmp
sbb
xchg
xor
popa
pushf
jno
mov
push
lahf
push
add
in
cmpb
mov
and
sub
jge
popa
ret
aam
xorl
rcll
imul
in
add
int3
xchg
jmp
nop
ret
jns
inc
inc
pop
add
faddl
call
insl
fistl
or
sbb
inc
add
dec
loope
xchg
stos
mov
add
and
fildl
call
sarl
add
cmp
jmp
lahf
rcrl
out
nop
aam
jmp
mov
loope
xchg
lret
test
cmp
ds
imul
bndldx
andb
clc
dec
and
inc
jp
lret
add
xor
add
sbb
std
mov
js
insl
dec
arpl
sub
shl
jns
hlt
mov
stos
fldl
out
sbb
add
add
sahf
inc
adc
xchg
adc
add
add
xlat
or
xchg
jno
lds
popf
pusha
movsb
movsl
and
mov
dec
shll
andl
outsl
pop
mov
jle
push
and
mov
arpl
fadds
lret
je
mov
add
and
push
sbb
cmp
adc
scas
and
in
dec
jo
arpl
push
add
inc
mov
mov
arpl
and
mov
push
cmp
xor
movsl
fadds
ds
mov
add
js
std
out
cmpsb
lods
add
movsl
ja
or
add
inc
mov
add
out
dec
out
xchg
ret
shl
jns
stc
pusha
and
repz
xchg
test
inc
push
scas
addl
aas
adc
jnp
lods
or
les
in
fsts
add
xchg
and
in
dec
stc
adc
mov
movl
dec
fdivs
and
rclb
std
xchg
arpl
in
xor
pop
pop
add
mulb
and
cli
mov
popa
xorl
pop
cmp
mov
push
inc
add
int
and
test
add
lret
mov
and
cmpsb
pop
movsl
clc
pop
rorb
es
add
negb
add
pop
cmpsl
repnz
test
sbb
popa
jmp
push
stos
cmp
mov
dec
pop
or
es
sub
fwait
adc
icebp
int
shrb
jnp
add
dec
cmpl
fcmove
dec
push
pop
stos
sub
jnp
mov
cwtl
jae
push
rolb
shll
or
push
add
rcll
pop
xor
cltd
mov
into
inc
cmp
mov
push
int
xchg
add
xor
cmp
adc
add
cmpsb
clc
nop
loopne
add
xchg
fdiv
leave
or
cmp
in
sbbb
add
and
out
adc
ds
cltd
std
inc
add
push
xor
icebp
push
call
pop
sub
cli
jbe
lcall
faddl
je
cltd
xor
push
sub
and
jecxz
inc
add
add
and
mov
jb
push
lret
xor
and
movsb
mov
mov
shlb
xor
dec
mov
add
dec
popa
mov
add
cmp
pop
sar
and
pop
sub
subl
pop
jle
ljmp
add
xor
adcl
or
jmp
jg
jle
push
and
mov
xlat
cltd
add
lcall
rcr
jmp
add
jl
mov
test
push
rorl
inc
add
lods
les
add
sub
jb
pop
xor
xchg
lea
mov
andb
imulb
mov
rorl
add
mov
cltd
lret
mov
cmpsl
add
shll
jnp
jb
inc
stc
cmp
xor
aad
lret
push
pop
inc
out
in
and
mov
ljmp
loope
dec
dec
aaa
add
adc
add
dec
std
xor
mov
mov
xor
push
arpl
aaa
push
fldcw
add
jl
or
xor
cmp
pop
shll
jae
jbe
sbb
add
xchg
adc
jnp
test
mov
inc
test
lock
ret
add
mov
mov
push
shll
xchg
add
adc
mov
test
pop
push
lahf
or
mov
inc
test
fisubl
inc
nop
shl
add
pop
mov
sbb
pop
sti
mov
add
mov
mov
sbb
mov
mov
add
adc
std
sbb
xchg
dec
fistl
cli
roll
xchg
adc
cmpsb
or
enter
mov
movl
push
mov
iret
cmp
arpl
stos
add
add
xlat
repnz
shll
loop
and
xchg
cmp
loop
adc
jmp
addl
cmp
add
addr16
aam
push
cmp
sti
add
push
cmp
sbb
repnz
rcr
fistpl
add
ja
push
or
inc
jecxz
jnp
jne
in
cmc
pop
sti
test
sbb
jmp
or
sub
sbb
repnz
es
iret
jne
add
xor
and
data16
andb
sbb
nop
mov
add
lret
icebp
pushf
mov
pop
mov
add
orl
jb
mov
jae
stos
insb
sbb
leave
je
jne
test
dec
xchg
jmp
icebp
pushl
stos
add
adc
fdivrs
enter
das
pop
add
sbb
add
pop
orb
xor
fadds
ljmp
movl
fs
or
fisttpl
aaa
in
dec
and
out
inc
pusha
repz
sub
mov
xchg
adc
jecxz
fcompl
pop
pop
and
adc
andl
xor
mov
jge
leave
cmp
icebp
jae
and
push
out
es
lret
mov
dec
aad
sahf
and
adc
mov
and
fs
pop
shll
cmp
es
pop
mov
sub
cld
arpl
xor
fdivrs
lret
xchg
andl
fildll
ja
xor
rcrl
jne
in
push
dec
add
inc
add
aam
mov
pop
frstor
inc
pop
add
xchg
scas
add
jae
push
adc
fwait
jbe
fisttpll
pop
or
lret
outsb
cmp
add
cmpsb
jl
popf
aad
daa
sub
loop
insb
pop
xchg
insl
shll
add
int
lods
add
stos
jle
pop
call
mov
daa
xchg
push
gs
scas
add
andl
sbb
push
jmp
bswap
sbb
mov
add
add
stos
jo
icebp
fdivrp
adc
lahf
cmpsb
mov
pushf
mov
jmp
shr
mov
fiaddl
ret
in
pop
mov
or
push
cmp
insb
pop
push
and
incb
and
rol
pop
inc
fcompl
ds
arpl
push
xor
clc
pop
stos
mov
xorl
sbb
sbb
ficoml
scas
adc
fucom
add
cs
in
ret
rcr
enter
jge
loope
and
test
das
imul
and
xchg
fs
sbb
push
inc
mov
dec
outsl
test
jae
sahf
cmp
daa
add
movsl
mov
addr16
sbb
xor
into
dec
test
aas
mov
mov
les
mov
and
mov
out
jmp
roll
lods
test
xchg
pop
arpl
cli
dec
lods
jne
addr16
incb
aam
dec
in
jnp
and
addr16
dec
and
and
out
cmp
std
pop
and
mov
adc
xchg
mov
sub
retw
stos
add
lahf
mov
shll
push
mov
cwtl
add
add
mov
pop
add
int3
and
mov
push
lcall
scas
sbb
pop
cmovl
aad
mov
loop
sbb
mov
mov
inc
pop
dec
and
in
ret
je
sbb
mov
ds
xor
adc
inc
das
and
outsb
xorl
cltd
add
int3
or
pop
jmp
or
pop
mov
divl
cmpl
mov
push
xchg
sbb
cmpb
test
jmp
aam
cwtl
fcmove
pop
inc
inc
and
test
incl
data16
mov
leave
mov
add
add
subb
mov
cwtl
and
xchg
leave
jno
out
inc
and
and
mov
sub
movsb
jge
pop
lds
out
pop
jl
add
sbb
xchg
push
fs
stos
push
ror
add
xchg
add
dec
cmp
lods
and
dec
xor
rorl
stos
sub
cwtl
cmc
sub
push
fmuls
sahf
jbe
inc
repz
add
and
and
lahf
xor
enter
add
cmp
or
and
loopne
sub
repz
fwait
pop
mov
mov
inc
sub
add
mov
sbb
or
in
push
das
jmp
iret
leave
xor
and
fisttpl
pop
add
rcl
add
imul
xor
and
jb
leave
jle
mov
xchg
push
jp
sti
and
dec
sbb
and
jecxz
add
inc
dec
inc
lock
and
mov
xlat
cmp
rorl
add
xchg
add
int3
lods
loop
call
sarb
push
and
aam
insb
sti
ja
jns
lea
lods
add
adc
sub
jg
lds
pushf
xchg
jae
jmp
stc
add
inc
xchg
add
pop
ja
loopne
add
adc
add
mov
xor
js
loope
or
shlb
cmc
mov
adc
xchg
lret
add
test
pop
cmp
mov
inc
jl
add
orb
adc
lods
push
mov
add
mov
int
or
xchg
stc
scas
add
jecxz
daa
inc
adc
sbb
push
stos
js
out
jmp
cmp
push
mov
xchg
aad
mov
rcrl
jmp
int
mov
sbb
test
pushf
xor
jne
xor
sbb
and
mov
xor
loop
jmp
jp
in
push
inc
mov
test
int3
mov
pusha
movsl
sbb
mov
sbbl
je
and
mov
movsb
jmp
sub
mov
jns
adc
add
test
jbe
pop
fcmovnbe
shrb
es
xchg
jmp
shlw
iret
add
movb
loop
xor
pop
jle
imul
and
inc
lahf
mov
xchg
xor
pop
mov
sbb
dec
xor
pushw
movsl
ja
add
mov
and
pop
js
xlat
jp
out
dec
mov
add
cmp
clc
lock
movsl
add
inc
stos
icebp
xor
jae
push
adc
mov
jo
aaa
and
sar
mov
mov
add
push
jl
add
mov
ret
lock
xor
stos
add
dec
cmp
jns
ffreep
fxsave
and
in
in
idivb
push
pushf
mov
stos
add
cmp
add
mov
pushf
add
mov
mov
mov
add
xor
add
fldt
cmp
sub
xchg
add
jb
mov
popf
add
inc
cmpsb
add
sub
mov
repnz
pusha
cmp
adcl
cmc
inc
or
jecxz
sub
add
dec
daa
jp
add
stc
out
dec
fprem1
mov
insl
and
add
pop
mov
aad
popa
add
fs
bound
mov
inc
and
sub
arpl
sbb
add
pop
xor
push
add
std
das
add
xchg
pop
movsb
push
mov
mov
jne
jbe
outsl
add
push
xchg
xor
adc
neg
fiadds
or
sahf
dec
popa
int
pop
and
mov
scas
mov
scas
ss
mov
jne
sahf
jmp
fstl
push
inc
mov
sar
in
and
mov
cltd
jl
mov
movsl
int3
and
lcall
sbb
scas
pusha
aad
add
incl
loope
mov
mov
cmp
sub
jecxz
pop
sbb
dec
or
insl
bound
scas
xchg
and
pop
in
xlat
shll
push
jle
push
cmp
sub
add
mov
inc
jnp
dec
sbb
sub
mov
cmp
add
pushf
cmp
mov
fisttpll
add
inc
push
or
orl
push
pusha
or
lret
pop
pop
add
out
ljmp
fyl2xp1
xchg
dec
jecxz
xor
sub
jmp
push
and
add
xor
test
add
pusha
pop
dec
mov
mov
ret
scas
mov
repz
mov
and
mov
sub
roll
xchg
rcll
cmpsb
iret
mov
cltd
stc
arpl
roll
mov
jo
jg
sbb
cmp
add
test
cmp
lret
jecxz
push
test
mov
sub
xchg
popa
addr16
out
loope
add
cmp
nop
test
mov
xchg
pop
pop
cmp
add
mov
push
push
add
ds
mov
test
je
jle
sub
pop
jge
loopne
jecxz
add
adc
xchg
lret
adc
call
mov
sub
sti
cmp
sbb
scas
xchg
adc
jle
mov
jo
dec
add
popa
fistps
xlat
or
sbb
fiaddl
imul
fdivs
scas
and
dec
mov
jb
jne
jae
test
bound
aad
push
fadds
dec
sbb
pop
repz
cmc
sub
addr16
out
frstor
add
stc
adc
jns
fimuls
imul
out
loop
pop
mov
push
sahf
gs
cs
dec
add
out
test
xor
mov
cmp
andb
js
pushf
and
mov
xchg
inc
mov
fs
das
roll
cmp
jl
adc
jge
pusha
cmp
test
add
add
pop
rcll
jnp
or
cmpsb
orb
icebp
lret
xchg
push
std
orl
bound
mov
lahf
sti
fstps
xchg
and
pop
mov
mov
fs
call
imul
bound
xor
into
xor
add
movsb
loopne
cwtl
add
das
addl
pop
je
mov
ret
sbb
push
add
ss
scas
pop
int3
add
cs
sub
add
or
aas
mov
add
dec
xlat
push
sbb
ds
fstps
or
mov
stc
add
lock
push
push
mov
sub
pop
mov
xlat
lods
loope
ret
test
arpl
rcll
pop
sub
ret
pop
mov
fnstsw
add
xchg
cltd
fldcw
sub
jno
xor
adc
add
or
push
inc
loopne
inc
ljmp
bound
mov
inc
popl
sbb
add
lret
movsb
dec
cltd
push
and
shl
test
dec
push
aad
add
arpl
ss
icebp
jo
movsb
aam
ret
shrl
add
mov
decl
mov
stc
aad
mov
mov
and
xor
add
add
pop
fsubs
fsubp
cwtl
adc
inc
mov
dec
dec
jno
push
shll
add
xchg
add
fnstenv
mov
xor
sub
push
sbb
fucomi
fnstenv
xlat
inc
or
int
inc
add
add
out
and
add
cmc
or
push
xor
xlat
and
ja
fsubs
or
outsb
mov
flds
jecxz
std
xor
insb
mov
and
les
push
add
dec
leave
cld
stc
push
or
ds
push
add
jecxz
je
pop
xlat
repnz
aam
or
pop
cwtl
add
fmull
add
movaps
bound
fistpl
movsb
hlt
enter
pop
push
xlat
sub
and
ja
testb
fistps
insb
fstpl
or
icebp
cmp
mov
mov
arpl
add
add
sub
and
dec
add
test
jg
add
outsb
pop
sti
mov
rorl
aad
and
xchg
xchg
dec
pusha
xchg
cmpsl
jecxz
call
and
sbb
insl
xchg
mov
dec
ret
nop
ss
sbb
add
mov
pop
imul
and
lret
inc
aad
add
sbb
cli
and
imul
stos
popf
pop
jmp
fadds
pop
ds
xor
orl
sbb
add
push
mov
pop
aas
and
call
push
out
and
cltd
jmp
xchg
ret
lcall
sahf
inc
mov
incl
xor
xlat
xchg
add
clc
adc
mov
dec
mov
or
and
sub
sbb
aas
insl
repnz
add
and
sbb
cmpb
add
faddp
cli
cmp
pop
pop
in
and
fldt
shll
and
jbe
repnz
jecxz
inc
add
pop
mov
cmp
push
add
daa
sbb
jnp
sti
add
pop
rorb
stc
add
out
std
jle
and
lea
lods
sti
add
xor
mov
mov
incb
dec
adc
scas
jbe
mov
xor
inc
mov
out
or
cmp
test
call
test
out
jae
mov
test
add
xor
arpl
jae
ffreep
add
and
arpl
mov
sub
movsl
mov
lret
test
sti
dec
mov
and
push
loope
jmp
add
inc
cmp
shl
add
jae
ret
pop
inc
add
and
and
fadd
repnz
and
arpl
sbb
mov
jl
xor
shl
stos
push
sub
and
sbb
adc
repnz
enter
rorl
inc
out
loopne
rcll
pop
sub
xchg
or
add
push
movsl
lcall
adc
addb
adc
pop
arpl
inc
or
hlt
dec
sub
lahf
or
pop
add
or
nop
sub
jecxz
aam
or
mov
cmc
or
js
and
lret
fs
push
sbb
pop
out
add
into
rclb
sub
add
int
xor
cmp
jae
mov
call
stos
mov
add
push
xor
leave
lldt
jnp
mov
add
imul
add
test
icebp
and
mov
sarl
xor
add
cli
test
popf
push
jp
sti
lock
fsubrs
adc
mov
out
pop
or
add
cmpsl
xchg
cmp
mov
pop
js
test
push
push
cmpsb
mov
add
jmp
pop
shlb
lods
ret
mov
pop
ret
stos
js
add
mov
xor
pop
cmpsb
out
stc
fimuls
pop
mov
cmp
xor
js
add
xchg
outsl
out
xor
pushf
fxch
xchg
add
lods
call
daa
rol
sahf
jbe
mov
add
adc
push
mov
aas
je
mov
adc
insl
lea
add
pop
push
insb
xor
mov
mov
scas
add
loope
int3
and
jnp
mov
inc
mov
lods
out
mov
enter
lock
repnz
mov
xchg
stos
push
aas
jecxz
push
sbb
add
test
jmp
in
xor
xchg
icebp
repz
mov
dec
pushf
out
add
xchg
and
add
sub
add
xor
jp
test
arpl
iret
push
ret
test
push
add
sub
and
jl
mov
ficompl
mov
xchg
int3
adc
outsb
add
ret
stc
and
dec
cli
pushl
test
fstpt
push
jns
in
pop
ljmp
mov
adc
rolb
dec
cld
xor
cltd
jb
inc
out
sub
add
pop
addl
add
fisubs
sbbb
sub
lods
xchg
ret
arpl
jmp
jns
mov
cmove
orb
mov
stc
cmc
int
or
add
mov
mov
or
sbb
lds
daa
lret
adc
fwait
add
pop
stc
pop
aad
inc
in
leave
mov
sbb
lock
mov
cli
push
add
mov
mov
pcmpeqb
sub
outsl
fistps
cmp
cmp
lret
loopne
aam
mov
xchg
xchg
arpl
or
dec
dec
fdivl
mov
sbb
mov
inc
cld
ret
jge
and
pop
fmull
cltd
iret
sti
jg
and
negl
lods
ffree
add
outsb
add
mov
scas
add
aas
xor
je
sbbl
push
cwtl
out
ret
ret
out
and
mov
sub
add
rcll
pushl
test
inc
into
add
sbb
mov
add
sbb
pop
addb
aam
fs
xchg
cmp
data16
add
sub
cwtl
out
sub
or
aas
lret
inc
add
ss
mov
out
lods
cltd
add
add
in
cmp
js
xlat
pop
aas
pop
xchg
add
xor
push
add
cmpsb
push
shrl
imul
daa
pop
movsl
add
imul
sbb
cmp
fistpll
aad
jne
sbbb
rcr
xor
cmp
mov
add
and
movsb
cmp
mov
adc
fwait
cltd
call
sub
movsb
pop
dec
push
push
adcl
cltd
mull
push
pop
xlat
sar
fwait
int3
xor
dec
add
ret
nop
cmp
pop
stos
inc
scas
add
inc
fildl
xchg
jo
pop
add
inc
and
xor
cli
mov
add
jle
mov
addl
dec
dec
mov
dec
xor
adc
add
ja
pop
jno
fstps
jae
cmpsl
mov
cld
inc
imul
adc
add
fcoml
add
lret
call
pop
andb
addb
or
xor
push
cmc
mov
bound
movsb
jbe
scas
mov
mov
push
fldl
jmp
je
add
cmpsb
shrb
arpl
test
add
jge
xchg
js
icebp
mov
fildll
movsl
loope,pt
bound
add
lret
or
mov
insl
aam
out
push
movsb
dec
mov
and
dec
pop
sub
out
xchg
mov
lods
add
sub
add
ljmp
inc
push
push
pop
gs
push
add
movsb
or
and
outsb
mov
fsubrs
add
sbb
cli
add
sub
aam
loope
xor
or
int
cmpsl
pop
add
shl
ja
ss
scas
add
cld
repnz
cmpsl
ds
pop
cmp
mov
aas
call
mov
ds
insb
out
push
rcrl
add
fnstcw
xorl
lock
lret
pop
icebp
pop
cmp
add
xchg
dec
dec
push
or
aam
cmp
jo
stos
add
pop
xor
mov
movsl
add
cltd
call
test
ret
adc
cmpsl
add
jbe
and
sti
add
cmp
outsb
cmp
mov
ja
scas
fdivr
add
cmpsl
idivb
sbb
pop
and
call
nop
add
or
mov
mov
add
dec
sub
cmp
mov
xchg
add
clc
jmp
add
mov
add
fistpl
mov
cmp
jecxz
setg
mov
icebp
xchg
push
add
bound
cli
add
outsb
cltd
lret
stos
sub
mov
inc
adc
pop
mov
add
add
cmp
cmp
aas
arpl
fwait
xlat
pushf
cmp
xor
out
subl
and
insl
xchg
sbb
addr16
inc
idiv
add
imul
jnp
cmc
rolb
fsubs
ret
fsubl
jmp
mov
add
add
loop
dec
fwait
cmpsl
sbb
jle
mov
mov
loope
inc
test
add
or
es
ja
pushf
push
filds
lret
pusha
or
test
fwait
addb
or
sub
pop
sahf
iret
movsl
or
leave
xchg
add
sub
add
or
mov
sti
sub
rcrb
jecxz
je
jns
fildl
push
lret
sub
out
fs
add
xchg
and
inc
insl
pop
aas
sbb
dec
shll
and
mov
jmp
dec
add
into
fmuls
ret
add
sub
jbe
out
sbbb
out
push
push
shll
pop
inc
iret
scas
xchg
sahf
xor
or
and
lahf
sub
sub
xor
dec
pop
sahf
xchg
jle,pt
test
lcall
fwait
insb
aam
add
or
fnstsw
jecxz
push
lock
add
dec
xchg
int
sub
pusha
loop
lods
in
adc
insl
pop
test
mov
xor
jnp
jb
pop
mov
add
xlat
or
and
sub
stc
xchg
add
pop
add
cmp
outsl
pop
jecxz
faddl
mov
int3
gs
xor
clc
and
aas
inc
iret
pop
and
mov
sbb
ret
pop
addr16
hlt
imul
daa
push
scas
add
mov
mov
push
pop
dec
pop
test
ret
sub
test
leave
and
icebp
gs
aas
nop
mov
add
mov
push
inc
xor
stos
and
mov
adc
xchg
jae
int
inc
sbb
mov
add
xor
jnp
popa
add
insl
push
mov
sub
mov
es
xor
add
inc
test
mov
xchg
add
inc
imul
sbb
cmp
sub
pop
mov
mov
jbe
stos
cmp
aad
pop
sbbb
mov
push
scas
loop
jb
repz
test
mov
loopne
clc
jno
in
movsb
add
sbb
and
and
pop
adc
testl
jno
add
jle
pushf
fldcw
jns
sbb
cltd
adc
imul
jl
ds
xor
and
add
sti
adc
stos
jg
push
sbb
adc
ds
repnz
mov
mov
inc
push
and
mov
jbe
mov
fcoml
cmpl
add
inc
mov
pop
scas
add
mov
jns
pop
out
xor
ljmp
cmc
in
add
aaa
push
enter
jecxz
fdivs
mov
mov
ja
and
pop
ss
out
out
mov
scas
and
rcll
add
inc
mov
mov
add
scas
push
cltd
mov
push
fistpll
add
inc
add
and
add
mov
stos
mov
loope
add
inc
or
stc
cltd
sub
mov
in
xor
sub
push
bound
inc
add
aam
mov
sub
aas
xchg
add
std
cwtl
xchg
xor
jne
xchg
mov
lcall
outsl
inc
mov
mov
add
push
imul
in
xor
mov
pop
cmp
pop
icebp
add
gs
cwtl
inc
pop
sub
ret
mov
jecxz
add
out
adc
bound
pop
js
and
adc
jecxz
pusha
mov
cmp
dec
in
or
cmp
adc
sbb
in
pop
push
jae
ret
push
adc
or
or
cwtl
jge
inc
scas
add
ret
mov
xabort
sbb
roll
sbb
add
nop
insl
popf
idivb
iret
mov
and
aad
jno
mov
cmp
pop
sarl
sub
out
inc
sub
or
mov
rcl
and
mov
into
and
ljmp
push
loop
sub
mov
xchg
push
mov
jae
scas
adc
std
cmp
pop
rcl
xor
mov
lret
xor
mov
cmp
cmc
loopne
pop
jbe
push
jge
jmp
add
xor
ja
dec
pop
jnp
add
ret
add
push
sub
cmp
ljmp
ret
sub
mov
add
add
or
add
leave
sub
daa
fldt
mov
pushf
adc
cmp
fdivrs
imul
mov
ss
jo
or
scas
lahf
test
daa
bound
and
daa
ficomps
mov
inc
out
push
and
and
ret
aas
cmpsb
add
addr16
add
mov
loop
fldl
mov
mov
or
mov
sub
addl
add
and
dec
add
cmp
cwtl
ds
das
pusha
dec
loopne
sbbl
orb
fsubl
xor
mov
lret
lock
jge
gs
and
dec
popf
pop
sub
fimull
dec
xor
in
fistl
repz
das
cmpsl
inc
ljmp
sub
and
xchg
jmp
out
sbb
ljmp
stos
add
shrb
mov
mov
mov
loopne
scas
push
push
and
call
pop
jmp
xor
in
mov
mov
cmp
in
inc
push
inc
shrl
cmp
rclb
and
loope
jp
dec
cli
ret
dec
mov
jnp
and
out
into
faddl
sub
push
imul
jmp
int
mov
popf
repnz
adc
ret
xor
cmp
addr16
addr16
pushf
aas
cmp
and
cmpb
xchg
fldenv
enter
frstor
lret
jmp
mov
clc
in
sub
mov
push
xor
cwtl
je
jmp
pop
ljmp
in
or
adc
adc
mov
stos
in
aas
outsb
gs
sub
movsb
xchg
or
fsubl
lret
insl
sub
int3
stos
mov
or
ljmp
mov
pop
jecxz
cwtl
repz
inc
jno
push
loop
jb
loop
mov
sbb
inc
aaa
sti
xchg
add
mov
ret
or
andb
ror
add
pop
xor
jno
sti
add
xchg
gs
leave
test
cmp
fisubrl
mov
pop
sbb
daa
call
mov
push
out
sbb
movsb
and
sub
push
push
mov
aas
and
ja
inc
or
in
in
or
subb
aas
and
outsb
add
sti
push
insl
add
mov
shr
ret
rclb
cmc
inc
adc
daa
adc
mov
xchg
incl
shlb
push
out
add
xchg
adc
dec
cwtl
jg
dec
and
mov
push
sbb
sbb
inc
lea
int3
rcrb
sub
loop
cmp
ljmp
sar
rclb
lods
arpl
sbb
sbb
jno
and
inc
sbb
cmp
push
pop
pop
add
rorb
shlb
rcrb
shlb
shrb
adc
jp
xchg
das
inc
fistpl
rcll
jmp
fcmovnb
fcmovnbe
addr16
xchg
sbbb
mov
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
or
in
lods
movsb
in
movsb
mov
cmc
in
in
in
in
in
in
in
jmp
pushf
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
cmp
sbb
adc
shlb
loopne
loopne
shlb
sarb
rolb
rorb
rcll
rcrb
pop
stc
push
fs
movsl
pop
insb
pop
lods
pop
je
mov
jl
mov
pop
dec
pop
lea
cmpsl
pop
xchg
pop
pop
pop
popf
pop
movsb
pop
in
lods
pop
in
pop
mov
cmc
pop
mov
pop
lds
pop
int
xchg
sbb
fstpl
in
sbb
xor
sbb
int3
stc
out
insb
pop
adc
sbb
sub
insl
sbb
cmp
jge
add
inc
pop
fisttpl
adc
pop
push
and
adc
fs
fs
movsb
lods
movsb
je
mov
jl
mov
in
in
in
jmp
xchg
in
in
in
in
movsb
lods
movsb
in
in
in
in
in
in
in
in
in
out
adc
rcrb
loopne
loopne
shl
xor
rol
add
rcl
adc
in
in
movsb
sub
insl
in
in
in
in
in
in
in
in
out
adc
sbb
pop
sbb
sbb
sbb
jl
mov
sbb
push
popa
sbb
popf
sbb
lods
sbb
cmc
sbb
test
int
xchg
mov
fnstsw
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
xor
in
adc
sbb
sub
insl
sbb
cmp
jge
add
inc
sbb
adc
dec
rol
push
mov
cltd
sub
pop
out
fs
lret
fsubrs
sarb
inc
loopne
ret
sbb
mov
outsb
imul
test
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
flds
sbb
call
pop
xor
rcrb
fisttpl
fcmovnbe
fistl
fcmovnu
fistpl
fucompp
add
in
in
in
in
movsb
jno
cmp
jns
and
inc
in
in
in
in
loope
push
sbbl
fsts
pop
and
pop
sub
pop
xor
pop
cmp
pop
add
pop
or
dec
rclb
rol
rcrb
ror
ret
aam
imul
and
jns
sub
inc
in
in
out
insb
pop
push
lods
add
sub
lods
test
lods
bound
lods
jb
mov
inc
in
in
movsb
loope
push
in
in
in
in
in
in
in
in
in
jecxz
sbb
adcb
mov
xor
cmp
orb
daa
out
dec
jne
adc
sub
lods
test
sub
sub
mov
pop
and
sbbb
pop
loope
lods
lods
fldcw
sub
lods
fisubrs
divl
mov
shrl
mov
fcmovne
rcrl
fldt
cli
fildl
fcmovnbe
fistpl
fldt
insb
popa
or
testb
lods
mov
fbld
imul
cmc
mov
xor
inc
sbb
rcrb
prefetch
and
rcr
hlt
in
jecxz
sti
pop
cmpb
sub
push
aas
xor
js
adc
sub
fs
cmp
cmp
in
imull
pop
and
sahf
and
movsb
movsb
and
cmp
pop
repnz
pop
pop
push
bound
ret
cmpsl
cmp
add
lcall
pop
pop
push
stc
pop
outsb
pop
xor
pop
imul
cmpsb
xor
xchg
iret
jp
bound
lods
mov
dec
aad
rorl
push
inc
sub
jecxz
pop
sbb
and
and
push
add
mov
cmp
pop
adc
mov
imul
movsb
push
push
movsb
ret
in
movsb
inc
movsb
xor
in
in
jl
jecxz
pop
cmp
cmp
sub
cmp
push
push
or
pop
repz
push
arpl
movsb
xchg
movsb
dec
in
out
loop
js
ror
roll
jl
loopne
out
or
add
xchg
cmc
jge
mov
push
lret
fdivs
fcompl
xchg
cs
lock
mov
in
loop
fdivrs
push
out
and
sahf
push
das
mov
in
out
ret
mov
dec
pop
push
addr16
or
ds
rcr
sub
idiv
pop
mov
jnp
xchg
insb
pop
push
lcall
mov
push
mov
imul
inc
arpl
data16
push
jmp
and
dec
cmp
repz
outsb
or
push
sub
add
out
pop
and
bound
das
and
lods
cs
pop
ltr
xor
cli
and
cmp
fldenv
pop
pop
pop
ds
inc
pop
adc
pop
in
outsb
and
ret
not
adc
neg
idivb
or
cmp
and
dec
jp
pop
mov
jae
movsb
dec
fs
mov
push
push
push
or
mov
pop
pop
pop
sub
das
out
call
repnz
lods
lret
lods
lahf
sub
and
push
jg
or
fstpl
icebp
inc
add
rclb
cs
repnz
ret
xchg
jecxz
xchg
push
push
imul
push
push
ffree
shlb
or
and
inc
aad
jmp
mov
cmp
jbe
pop
pop
push
and
or
xchg
or
cmp
and
cmpsl
cmc
inc
repz
int
imul
pop
cmpsl
bound
mov
in
in
in
in
movsb
movsb
out
cmp
repz
ret
dec
sarb
iret
fsubl
sbb
mov
ret
int3
sarl
and
xchg
xchg
movsb
ds
in
lods
add
test
sti
sbb
mov
and
push
outsb
xor
ret
cltd
nop
add
sbb
pop
add
xchg
push
shll
fs
adc
mov
pop
or
lds
stc
adc
add
jecxz
jbe
lret
mov
rcl
sar
sbb
push
stc
cmp
sub
in
add
shlb
cli
cmp
in
dec
pop
mov
push
mov
clc
pop
rol
sub
rorb
pop
shll
mov
push
mov
jb
and
xchg
repnz
ret
bound
dec
mov
loopne
mov
lods
ja
popf
rclb
sbb
std
notl
lret
je
push
xchg
out
add
rcll
ds
or
pop
push
pop
repnz
xchg
pop
cmp
loop
cli
jl
rcl
rcr
in
in
mov
add
lret
sti
push
inc
and
or
push
jg
pop
push
pop
jbe,pt
into
add
lods
out
fwait
movsl
pop
sub
sahf
sbb
test
mov
jne
fcomi
fistps
add
faddl
xlat
loopne
push
pop
mov
jae
sti
into
sub
stos
in
inc
sub
jecxz
sbbl
push
sbb
mov
arpl
lret
push
sub
mov
sbb
adc
arpl
and
repnz
repz
mov
popf
lods
test
rorb
pop
sub
lods
or
or
xchg
ljmp
push
push
enter
and
ret
arpl
jl
pushf
aad
pop
pop
nop
and
xor
sub
sti
ret
ljmp
loope
jo
push
sub
repnz
mov
push
iret
jnp
mov
cld
pop
jl
sub
lods
sbb
fiadds
and
in
lcall
add
leave
push
push
pop
adc
nop
xor
xchg
fisubl
out
mov
int3
jecxz
adc
pop
push
sub
mov
incb
xchg
adc
jb
add
in
mov
mov
add
data16
sub
cmpsb
inc
add
pusha
xchg
sub
mov
pop
sbb
sbb
cmpsl
add
loop
or
shr
shll
sub
mov
adc
adc
add
add
notb
add
out
rcrb
pop
pop
sbb
imul
sbb
mov
stos
push
mov
and
xchg
arpl
cmpb
pushf
aaa
sbb
mov
push
pop
add
int
cwtl
sub
mov
add
inc
roll
jae
ja
fwait
jmp
adc
loop
mov
shlb
repz
xor
aad
ja
lret
add
pop
mov
lods
adc
call
add
in
xlat
fldl
andb
out
push
jb
mov
inc
outsl
mov
adc
iret
fwait
mov
or
dec
mov
fs
and
dec
push
add
mov
and
push
fsubp
or
aad
ret
and
xchg
js
xor
mov
fs
add
xchg
mov
lods
pop
fstpt
sub
dec
add
mov
dec
lcall
test
or
pop
sbb
mov
cmp
cs
push
sub
mov
sbb
pop
imul
addr16
aam
dec
bound
pop
mov
rcll
hlt
sti
inc
sbbl
and
ror
pop
repz
cli
sbb
aad
stos
je
dec
sub
push
push
sbb
jns
mov
jp
xchg
shl
xchg
andb
adc
jbe
shl
incl
and
jecxz
int3
cmp
arpl
push
adc
sub
and
pop
in
pop
popa
pop
fcompl
fwait
push
cmp
dec
xor
dec
cs
lods
call
mov
rcll
fnstcw
sbbl
mov
shll
mov
subb
lret
es
fcmovnb
xor
jp
js
hlt
testl
dec
daa
xchg
xchg
pop
jno
shrl
loop
cmpb
cmp
cmp
cmp
cmp
and
push
aaa
sbb
movsb
cmc
pop
jnp
mov
cmp
daa
xchg
mov
sbb
push
nop
pusha
sbb
dec
sbb
sub
incl
mov
sbb
sbb
and
sub
pop
push
hlt
sti
xchg
repz
add
pop
cld
pop
pusha
xchg
xor
icebp
jns
add
lds
ss
mov
add
mov
pop
xor
scas
cmp
pop
or
stc
test
cmp
ret
das
rol
rorl
mov
jg
insl
repz
and
add
outsb
loopne
cltd
xchg
data16
clc
mov
ret
sti
adc
push
push
es
mov
sub
neg
movsl
icebp
mov
add
sti
mov
ret
in
push
push
int
mov
cmpsl
mov
push
add
and
xchg
and
push
pop
andb
loopne
in
cmp
xchg
inc
ret
call
push
mov
push
aaa
mov
pop
sbb
add
notb
push
push
stc
push
pop
rcrb
pop
and
outsl
sub
cmp
cmp
cmp
cmp
cmp
push
stos
pop
aas
push
jp
loopne
out
scas
in
lea
icebp
test
add
sub
add
sub
lods
mov
fistl
test
add
decl
inc
fwait
adc
and
imull
lods
test
sub
jb
push
push
add
and
testb
fs
fs
movsb
xchg
movsb
ftst
jmp
std
cmc
nop
or
and
paddd
dec
mov
push
xor
xchg
mov
sub
pop
in
clc
in
scas
insb
lds
in
aad
mov
add
ds
mull
jae
and
rorb
push
add
push
add
je
idivl
push
add
mov
cld
add
inc
push
int3
shl
shll
notl
aam
jge
cltd
sub
lret
sti
pavgw
subl
push
int
sbb
sar
jecxz
xor
mov
nop
and
and
pushf
int
ret
mov
sbb
cmp
mov
push
jle
aaa
lret
cmpsl
sarl
push
shrb
sub
xor
ja
mov
fs
mov
dec
and
pop
cmp
fdivp
retw
push
shll
mov
add
push
xchg
sub
mov
lret
pop
pop
jae
fldcw
xchg
push
aaa
lods
inc
lods
jmp
int3
jno
xchg
bound
push
mov
or
xlat
rcrl
nop
jle
es
jmp
pop
lods
inc
lods
popf
sub
cmp
xlat
jne
and
btr
test
iret
repz
dec
stos
mov
lret
inc
fldcw
insb
or
xor
bound
lret
add
add
hlt
out
mov
sub
jne
pop
fs
lds
aam
mov
push
jmp
pop
cmp
and
dec
fs
in
in
jecxz
lea
push
mov
dec
dec
je
lock
or
testb
cmp
mov
add
insb
jne
js
xchg
cmc
cmp
jl
mov
inc
ds
sbb
add
mov
pop
outsb
adc
sub
fwait
hlt
sbb
jns
fmull
pop
out
insb
aas
mov
fstl
imul
rcrl
cmp
lret
cmpsb
cmc
push
mov
cwtl
ds
add
cmp
imul
fistps
in
and
cmp
push
shlb
aad
shl
jecxz
repz
add
jle
xor
faddl
jno
stos
sub
mov
hlt
popf
arpl
movb
add
mov
lret
movsb
sbb
jno
xchg
add
xor
mov
sub
imul
ds
add
push
pop
das
fdiv
imul
hlt
dec
sub
aaa
sti
ret
pop
mov
push
xlat
divl
sub
or
adcl
imul
mov
add
add
mov
and
int
push
xchg
ret
lcall
insl
fs
mov
or
cmp
pop
ljmp
cld
push
cmp
jo
fbstp
dec
push
xor
xor
rorl
push
nop
arpl
je
popf
and
sbbl
add
pop
lds
add
xchg
cmc
sbb
mov
mov
in
add
mov
scas
dec
dec
jecxz
vphaddbq
add
push
sub
enter
jmp
jp
add
pop
jmp
out
notl
mov
sbb
cmp
lods
sbb
sub
xchg
push
dec
mov
icebp
andb
xlat
pop
ret
and
push
mov
jg
mov
jl
ret
nop
xchg
xchg
mov
enter
fmuls
gs
sub
insl
jo
in
sbb
lds
mov
aad
add
push
scas
call
push
repnz
packsswb
test
add
fldcw
lods
jno
jg
xchg
js
fstpt
dec
cs
dec
xchg
add
negb
push
mov
ret
sbb
mov
sarw
fbstp
sub
push
sub
insl
adc
xchg
icebp
pop
lea
push
leave
pop
divl
pop
sub
mov
inc
pop
push
pop
je
mov
jl
orl
dec
out
sti
pop
or
fdivr
pop
and
sub
icebp
andl
and
orb
loopne
rolb
pop
loopne
ret
jmp
mov
lods
sbb
inc
sbbl
fcmovnbe
sarl
and
mov
and
sbb
inc
and
dec
getsec
push
stos
inc
test
and
adc
sbb
fistl
cmp
push
adc
jae
cmp
outsb
call
inc
inc
or
cmp
jecxz
je
dec
inc
dec
sbb
pop
inc
jmp
sub
dec
push
push
dec
jne
sbb
inc
push
mov
decb
addb
aam
