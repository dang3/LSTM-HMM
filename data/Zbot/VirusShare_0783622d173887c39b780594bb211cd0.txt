push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
pop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
jmp
ret
cld
sub
lea
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
sub
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
add
jmp
stos
stos
stos
add
add
sub
add
pop
and
add
and
add
and
add
add
add
dec
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
loop
add
and
add
add
mov
add
repnz
add
add
les
add
add
add
ds
add
add
push
add
es
add
add
add
add
add
and
add
and
add
and
add
add
sbb
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
and
add
add
and
add
and
add
add
add
dec
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
loop
add
and
add
add
mov
add
repnz
add
add
les
add
add
add
ds
add
add
push
add
es
add
add
add
add
add
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
imul
bound
gs
add
push
push
je
imul
inc
add
rolb
insb
outsl
bound
inc
insb
popa
addr16
ret
gs
jne
jb
outsb
je
jb
arpl
jae
addl
jb
popa
je
inc
imul
jns
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
gs
outsl
jbe
inc
imul
jns
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
gs
imul
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
popa
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aad
inc
imul
add
inc
jne
jb
outsb
je
push
add
call
inc
imul
bound
gs
add
data16
je
je
dec
popa
outsb
fs
add
repnz
imul
jb
je
arpl
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
inc
push
add
addr16
arpl
jo
inc
imul
jb
addr16
imul
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
imul
je
imul
push
jo
arpl
add
add
addr16
jne
jb
inc
imul
push
push
gs
popa
addr16
outsl
js
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
sbb
insb
imul
outsl
outsb
add
add
je
popa
arpl
outsl
outsb
inc
add
mov
push
dec
inc
gs
gs
imul
push
push
bound
je
add
add
inc
jb
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
or
inc
arpl
gs
js
insb
imul
jb
gs
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
push
je
leave
in
pop
out
in
das
push
rclb
xorb
dec
fildll
sbb
xlat
jle
mov
test
sbbb
les
shl
jmp
ljmp
push
cmpsl
dec
xchg
popa
fsubl
push
es
loope
mov
jns
jmp
pop
sbb
fldt
inc
sbb
repnz
jae
pusha
or
cs
add
push
jbe
ljmp
pop
push
sub
shrl
sbb
mov
icebp
psraw
out
pop
lds
and
insb
sub
xor
andps
jge
sbb
cmc
pop
outsl
mov
adc
inc
jne
jne
or
add
hlt
xor
in
jae,pn
enter
insb
jo
clc
jo
sub
jp
popa
inc
lds
add
ss
pop
test
outsl
stc
lds
pushf
not
adc
lcall
sub
xor
and
bound
push
sbbb
cmp
jle
cltd
jle
mov
xor
je
psllq
rorb
insl
mov
dec
adc
aam
jae
xlat
nop
xor
cmc
arpl
mov
iret
or
push
mov
sub
or
stos
fld
jp
push
or
jbe
dec
int3
jne
sbb
push
push
pop
daa
repnz
mov
enter
cmc
and
jno
cld
out
pop
mov
outsb
out
sub
repz
lods
and
insb
or
scas
sahf
mov
int
cmp
mov
sub
scas
mov
outsb
and
sti
inc
jge
jl
push
and
aas
rorb
mov
push
adc
xor
mov
mov
js
inc
test
sub
jb
ret
sbb
jb
adc
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jl
jnp
stos
lods
lods
add
cmpsb
cmpsb
push
mov
mov
mov
ret
ret
stos
lret
lret
int
rcl
shr
rcl
shl
iret
iret
shl
into
int
hlt
leave
mov
out
in
mov
mov
stos
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
lret
rcl
sar
xlat
fcom
std
xlat
xlat
fcom
fdivr
aam
aam
iret
rcl
dec
int
aad
rcl
sar
ret
vfmsub231sd
out
scas
scas
scas
iret
movsb
movsl
movsl
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
stos
add
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
call
rcl
aam
fcom
call
xlat
call
aad
dec
into
into
dec
into
into
call
aad
dec
int3
int3
mov
mov
mov
std
test
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
leave
dec
int3
int
rcl
sar
fcomp
call
xlat
xlat
call
dec
int
dec
lret
leave
dec
into
into
inc
mov
mov
mov
cmpsl
cmpsb
cmpsb
jmp
cltd
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
imul
pop
pop
pop
fs
aas
aas
inc
sbb
push
das
or
sbb
xor
cmp
aaa
cmp
and
adc
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
mov
dec
leave
call
iret
sar
aad
aad
aam
aam
rcl
sar
enter
inc
ret
mov
mov
ljmp
movsb
mov
xchg
cwtl
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jge
jge
jle
jle
jno
jb
popa
bound
push
push
push
xchg
cmp
mov
outsb
outsl
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
lret
lret
enter
ret
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
xchg
cltd
lcall
ds
ds
push
push
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
jp
xchg
nop
fcoms
addb
jl
jnp
outsb
outsl
jo
data16
addr16
jae
jg
jle
jp
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
nop
incl
test
xchg
xchg
xchg
lahf
mov
mov
mov
js
jns
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
xchg
jle
jb
jo
jne
jae
jge
jle
test
xchg
push
cmp
ss
jge
cmp
movsl
movsb
mov
icebp
stos
stos
stos
sti
lods
lods
lods
lods
lods
stos
test
stos
std
mov
lcall
mov
jg
js
jns
jl
jns
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
lods
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
or
inc
inc
dec
insl
imul
test
fwait
lcall
fwait
cltd
fwait
stc
nop
xchg
xchg
std
mov
mov
xchg
mov
lea
fwait
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jnp
scas
test
add
pop
adc
scas
call
lcall
incl
mov
xchg
xchg
xchg
popf
sahf
sahf
std
mov
mov
xchg
in
xchg
xchg
in
xchg
push
jne
or
add
inc
sub
daa
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
std
mov
nop
call
lahf
lahf
jmp
lods
pushl
cmpsb
lods
mov
xchg
stos
std
rorb
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
ret
mov
lcall
mov
mov
mov
nop
call
xchg
xchg
popf
sahf
popf
mov
test
movsl
negl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
arpl
jae
mov
jge
test
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
ja
mov
movsb
mov
mov
mov
lods
lods
lods
mov
movsl
mov
add
mov
add
pop
adc
mov
ljmp
pushf
decl
call
xchg
xchg
call
xchg
xchg
cltd
lcall
lahf
mov
mov
stc
xchg
lcall
nop
xchg
les
fwait
in
xchg
xchg
out
xchg
cmc
xchg
test
std
xchg
jb
fwait
push
test
mov
inc
jge
mov
jns
mov
jb
mov
outsl
ljmp
adc
stos
or
lods
or
pushl
mov
mov
pushf
mov
mov
add
shll
xchg
lea
ljmp
lahf
call
xchg
xchg
lcall
sahf
sahf
jmp
pushf
pushf
lcall
xchg
cwtl
decl
xchg
xchg
call
cwtl
fwait
cld
cwtl
cwtl
popf
stc
sahf
lcall
pushf
mov
xchg
push
xchg
pop
jge
cwtl
dec
jns
lcall
sahf
push
addr16
sahf
pop
jmp
ljmp
adc
stos
adc
scas
adc
mov
push
mov
imul
mov
lcall
lods
scas
lods
scas
mov
movsb
mov
add
pop
pop
adc
mov
ljmp
popf
call
pushf
popf
lcall
movsb
movsb
jmp
mov
xchg
decl
mov
decl
js
fwait
jo
cltd
fs
xchg
dec
jnp
xchg
jno,pt
xchg
sub
popa
call
or
call
add
lcall
jmp
sbb
pushl
push
outsl
pushl
push
jae
mov
and
rcrl
inc
inc
test
les
mov
mov
sahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsb
jmp
cmpsl
cmpsb
ljmp
test
lcall
jg
decl
jno
mov
imul
sub
mov
decl
or
push
incl
add
lea
push
call
add
lcall
ljmp
push
outsl
pushl
sub
mov
sub
ret
sub
lds
jg
leave
das
cmp
leave
scas
mov
mov
lret
movsl
dec
mov
movsb
movsl
add
push
adc
test
ljmp
lahf
jmp
test
ljmp
lods
pushl
scas
scas
jmp
jo
decl
or
push
incl
add
test
push
incl
add
mov
push
decl
push
call
pop
jmp
add
lods
adc
mov
cmp
dec
cmp
int
xchg
sarb
xchg
sarl
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
fwait
popf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
add
cmpsb
add
lods
add
jb
les
xchg
lret
dec
inc
call
inc
mov
rorb
call
dec
xchg
fmuls
fimull
fmull
fistl
call
test
std
mov
mov
mov
sahf
lahf
or
add
add
add
add
dec
dec
adc
jl
sahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
call
adc
pop
decl
push
call
add
sahf
add
add
test
pop
ljmp
add
jns
into
dec
call
push
xchg
call
push
fwait
fistl
fstpl
ficomps
ficomps
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
cmpsb
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
js
lahf
fwait
lahf
jmp
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
jbe
xchg
and
and
xchg
and
xchg
and
sbb
nop
or
call
add
lcall
ljmp
add
mov
gs
mov
xor
fldenv
jmp
arpl
in
cmpsl
jmp
cmpsw
jmp
gs
jmp
data16
ljmp
dec
mov
mov
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
aas
adc
jb
cltd
xchg
lcall
pushf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
xor
cltd
das
outsl
call
push
call
add
cltd
add
mov
add
lods
add
mov
pushl
movq
rolb
jmp
outsl
lods
jmp
outsl
lods
call
jae
in
jne
in
je
out
jne
out
jbe
out
jae
jmp
xchg
mov
cmpsl
cmpsl
lcall
mov
add
add
add
add
aas
adc
insl
js
lea
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
xor
mov
cmp
xor
fwait
sbb
call
pop
lcall
add
stos
add
mov
pushl
add
enter
ficoml
jmp
js
call
jge
jmp
mov
in
cmpb
repnz
push
cmpl
call
mov
mov
test
cmpsl
pushf
popf
popf
daa
mov
lahf
sahf
add
add
add
popa
add
cmp
pop
pop
push
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
ret
pushl
insl
mov
fwait
cmp
movsl
inc
jl
mov
cmp
fwait
pop
call
add
add
test
add
add
add
ret
add
shlb
movsb
jmp
mov
repnz
push
xchg
sar
xchg
sar
nop
push
nop
ret
stc
xchg
pop
out
mov
fidivl
clc
lods
stos
stos
mov
pushf
pushf
xor
popf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
mov
inc
ret
ret
mov
jge
lcall
dec
jg
lods
dec
test
movsl
xor
push
pop
lcall
add
add
stos
add
mov
fs
mov
add
enter
fdivs
mov
out
mov
out
xchg
cltd
push
lcall
negb
clc
sahf
lret
lahf
into
cli
lahf
int3
cli
cltd
lret
xchg
ret
mov
inc
mov
shlb
nop
add
add
add
xor
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
inc
enter
mov
mov
ljmp
mov
movsl
sub
lcall
jmp
add
mov
arpl
mov
add
enter
rorb
filds
out
mov
push
cmpsb
into
push
movsb
into
clc
cmpsl
iret
sti
test
cld
cmpsb
iret
cli
test
std
test
sar
std
test
push
popf
jmp
mov
dec
leave
int
mov
mov
lahf
lahf
mov
add
fwait
fwait
add
add
add
sub
inc
inc
inc
bound
push
xlat
jne
jno
mov
rol
rol
mov
inc
ret
ret
mov
enter
rol
mov
test
mov
push
mov
lods
dec
xchg
mov
add
movsl
add
add
mov
mov
add
int
insl
call
add
adc
out
pop
cmpsl
push
sahf
leave
cld
lods
aam
sti
mov
sti
scas
aam
sti
mov
std
mov
cld
mov
std
mov
cld
mov
std
mov
cld
mov
push
movsl
jmp
mov
dec
leave
lret
mov
mov
sahf
mov
xchg
or
add
add
xor
add
dec
outsb
outsl
outsb
mov
aam
fsubr
aam
not
rcl
std
int3
into
int3
dec
lret
leave
lret
leave
leave
leave
inc
leave
mov
scas
jmp
push
mov
lods
jg,pt
sahf
push
popa
jmp
add
mov
arpl
mov
add
iret
add
fadds
jb
filds
je
call
jae
cli
lods
sar
cld
mov
mov
fdivr
cld
mov
mov
xlat
inc
std
mov
lret
call
leave
int3
mov
mov
xchg
or
add
add
xor
add
add
pop
or
enter
in
pop
out
call
test
in
leave
fsub
fsubp
fcomi
xlat
fcmovnu
cli
aad
xlat
std
int3
iret
into
mov
push
test
test
add
pusha
pushl
add
ret
dec
add
add
fldl
ja
in
jbe
out
das
xchg
stc
mov
cld
mov
loope
inc
loope
std
loope
inc
loopne
inc
loopne
dec
fdivrp
std
leave
std
enter
leave
dec
loopne
sti
mov
leave
call
leave
sar
mov
mov
xchg
adc
add
add
std
std
add
std
add
std
add
div
or
out
jmp
jmp
in
sub
out
in
dec
ljmp
xchg
out
out
in
out
fcmovu
fsubr
ret
mov
xchg
cmpsb
cmp
movsb
adc
jmp
add
mov
mov
add
int
outsl
call
add
fiadds
js
ljmp
cli
mov
loop
std
int3
jecxz
dec
out
dec
in
dec
in
std
int3
loope
dec
loopne
std
shl
shl
std
shl
std
shl
cld
in
mov
inc
ret
ret
out
test
cmpsb
mov
cwtl
cwtl
add
add
add
incl
std
std
incl
idiv
clc
add
hlt
lock
repz
in
repnz
out
icebp
icebp
cmp
in
in
pop
loopne
loopne
les
xchg
sti
lahf
and
lcall
add
stos
add
mov
inc
add
leave
add
roll
jo
fiaddl
je
in
jp
jmp
jl
negb
cld
mov
std
shl
std
shl
call
out
shl
shl
std
call
std
out
fucomi
fucompp
std
fldl2t
cld
iret
loope
repz
jmp
aad
dec
lret
test
test
and
xchg
xchg
add
cld
add
testl
repnz
cmc
or
aad
xor
mov
xchg
negb
add
cmpsb
add
lods
add
mov
add
leave
add
add
faddl
jbe
out
ja
in
sbb
cld
fld1
fldpi
fucomi
std
std
fucomi
std
fsubr
fucomp
fsubr
std
fsubrp
fsubrp
fucomip
cld
shl
push
ret
jmp
aad
dec
iret
iret
clc
lods
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
mov
loope
add
mov
xchg
repnz
jmp
add
mov
add
int
outsl
call
add
loopne
jae
call
sub
aam
fucomip
std
fsubr
std
fucomi
out
std
aam
cld
shl
cld
shl
sti
shl
clc
int
push
int3
fdivr
cmc
ret
out
mov
call
fcomp
sti
mov
mov
cltd
cltd
fwait
cmp
cltd
cltd
add
xlat
aad
mov
mov
sahf
jmp
sub
mov
add
mov
mov
add
rolb
outsb
call
add
loopne
jp
call
ss
cld
xchg
enter
cld
lret
loop
cld
clc
rcr
idivl
push
mov
iret
out
mov
int
call
ret
sar
ljmp
imul
fsub
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
into
lret
add
sarb
lahf
xor
pusha
ljmp
add
mov
add
int
jo
rorl
jbe
fsts
jns
loop
cmp
dec
cwtl
ljmp
ljmp
std
loopne
cld
fildll
mov
leave
ljmp
into
rcl
shl
aad
out
loop
in
in
test
in
lock
jmp
lret
stos
lods
lods
adc
cmpsb
cmpsb
cmpsl
add
ret
mov
ret
mov
stos
aam
dec
jg
pushf
sbb
cmpsl
sbb
scas
and
ja
mov
inc
xchg
ret
stc
leave
gs
mov
out
mov
mov
enter
lret
rcl
lret
mov
into
shll
xlat
aam
jg
fcmovu
jb
gs
in
out
call
xor
div
mull
lock
fcmovnu
or
mov
int3
add
add
add
roll
roll
mov
test
fwait
cmc
mov
jbe
ljmp
mov
sarb
stos
mov
ret
cmpsl
leave
mov
enter
lret
jp
into
into
addr16
iret
rcll
rcl
dec
aad
aad
rcl
aam
daa
fistpl
fneni(8087
ficoms
fucom
jecxz
loopne
in
call
icebp
out
add
cld
cmc
add
std
add
std
add
std
std
add
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
rcll
les
mov
daa
int
iret
and
aad
sbb
rcll
rcl
aam
rcr
aad
rcr
xlat
add
add
loopne
add
in
add
jmp
add
fcom
add
incl
mov
mov
add
ret
ret
mov
rol
sub
mov
mov
push
ret
or
leave
enter
enter
lret
add
aam
add
fcom
add
fcom
add
aam
xlat
aam
add
fsub
add
aam
add
loope
add
add
out
add
repnz
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
les
mov
mov
mov
stos
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
iret
iret
jmp
rcl
cmc
rcl
sar
iret
into
sar
lret
lret
lret
stc
lret
lret
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
and
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
rcl
iret
xlat
aad
xlat
xlat
aad
rcl
iret
dec
into
int
int3
int3
int3
mov
mov
stos
icebp
cltd
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jae
je
gs
inc
dec
inc
cmp
sub
sub
ss
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
int3
call
rcl
call
rcl
dec
int3
lret
inc
mov
mov
mov
ljmp
sahf
sahf
xchg
xchg
xchg
jmp
jo
xchg
pop
pop
pop
dec
add
add
add
add
add
add
jg
addl
test
jnp
imul
pop
pop
pop
movsb
push
push
push
stos
push
imul
cmp
aaa
pop
jo
jo
mov
scas
pop
mov
mov
mov
mov
inc
ret
mov
mov
mov
ljmp
fwait
lcall
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
add
add
add
add
add
pop
lcall
pop
pushf
xchg
lcall
addb
jl
jge
jns
jns
jp
jp
jns
jp
jae
je
push
push
push
cmp
jne
popf
sahf
popf
mov
lods
scas
repz
scas
scas
sti
scas
lods
scas
std
test
test
call
test
call
mov
lods
jmp
scas
lods
leave
movsl
movsl
movsl
cltd
jae
jae
adc
adc
add
add
add
add
insl
insl
outsb
pop
xchg
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
jo
jo
mov
cwtl
cltd
lcall
mov
call
pushf
sahf
ljmp
test
mov
mov
mov
xlat
cmpsb
mov
addb
add
add
add
add
pusha
or
lods
mov
cmpsb
sahf
movsl
decl
lea
call
sahf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
insl
outsb
outsl
xchg
subb
xchg
lock
mov
lcall
popf
pushl
outsl
xchg
mov
push
mov
mov
mov
out
lods
lods
insl
test
add
add
add
add
popa
or
mov
in
mov
nop
call
xchg
xchg
lcall
cwtl
lcall
sahf
popf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
out
nop
jne
notb
cmp
dec
jl
movsb
inc
js
lods
aaa
js
scas
sub
scas
pop
insl
pushl
sbb
mov
lods
mov
scas
scas
mov
movsl
movsl
movsl
push
pusha
popa
pop
or
mov
in
movsb
test
lcall
mov
mov
decl
orb
xchg
jno
cld
cwtl
pusha
test
xchg
dec
jp
nop
cmp
xchg
daa
push
lcall
push
popa
jmp
sbb
mov
outsb
pushl
push
jae
mov
pop
mov
scas
lods
xchg
sahf
popf
lahf
adc
add
add
pusha
pusha
pusha
or
lods
mov
test
lahf
lahf
ljmp
test
test
decl
cmp
mov
decl
adc
or
mov
push
decl
add
pushf
add
test
pushl
sub
jl
lds
jg
das
cmp
lret
pop
xchg
inc
test
scas
movsb
test
test
pop
popa
popa
or
cmpsb
test
cmpsl
mov
test
scas
scas
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
test
decl
add
xchg
add
lahf
add
movsl
add
mov
insb
inc
cmp
rolb
call
inc
call
inc
nop
fimull
call
popa
popf
inc
cmpsl
mov
mov
mov
movsl
movsl
mov
add
add
add
pusha
or
sahf
mov
ljmp
mov
mov
mov
test
decl
sbb
mov
pop
decl
push
call
pop
jmp
add
mov
dec
nop
call
pop
lcall
pop
lahf
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
cmpsl
xor
add
add
dec
pop
jge
jl
fwait
cwtl
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
cs
sub
call
push
pop
call
add
cmpsb
add
mov
fs
mov
xor
jmp
insb
test
out
stos
jmp
jo
in
jae
jmp
jns
call
test
mov
inc
jg
jg
add
add
dec
dec
dec
pop
outsb
outsb
imul
test
fwait
cltd
cwtl
pushl
mov
mov
mov
jne
lcall
cmp
sahf
sub
xchg
or
lcall
ljmp
fs
or
call
inc
xchg
jmp
jns
jmp
mov
in
test
push
xchg
push
xchg
mov
cmpsb
test
fwait
cltd
lcall
sub
push
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
inc
mov
popf
jmp
inc
cmp
cltd
push
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
push
xchg
push
xchg
push
fwait
enter
lret
clc
cwtl
jmp
stos
vcmpss
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
pushl
push
xchg
lods
dec
test
mov
add
add
mov
mov
add
fisubl
cmp
mulb
clc
test
cld
test
iret
std
stos
sar
cli
cmpsl
lret
jmp
mov
dec
rol
test
popf
sahf
or
add
add
dec
dec
push
aaa
jae
jae
stos
stos
test
out
int
cmc
leave
int3
lret
sti
lret
std
enter
mov
ljmp
adc
add
mov
gs
add
int
outsl
fildl
ljmp
std
mov
mov
xlat
std
mov
xlat
std
mov
sar
jmp
enter
repz
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loope
jecxz
fsubp
fistps
fcmovu
fcom
out
shlb
test
je
cmpsb
push
pop
ljmp
add
enter
xlat
add
or
push
mov
cld
inc
loop
inc
loopne
dec
loopne
dec
fdivrp
std
lret
std
fdivr
out
mov
lret
mov
xchg
sahf
pushf
sahf
sbb
add
add
std
incb
incb
ljmp
jmp
in
xor
loope
in
mov
mov
mov
add
mov
fs
add
into
add
fldl
jbe
call
outsb
mov
sti
ret
std
shl
std
shl
std
shl
aam
aad
std
fsubr
cld
shl
push
enter
int3
sar
mov
mov
add
std
add
incb
incb
aad
push
mov
pop
xchg
sahf
or
ljmp
add
add
rolb
outsl
fiadds
jne
out
and
cld
shl
std
fucompp
std
fld1
cld
fsub
sti
xlat
call
push
jmp
rcl
sti
mov
lahf
sahf
das
add
add
int
int
mov
fs
lahf
adc
add
mov
add
add
loop
ja
in
xor
sti
int
stc
lret
test
bnd
aam
lock
out
in
aam
jmp
aam
in
fsubrp
enter
test
std
std
add
add
add
push
mov
jae
or
mov
imul
pop
jno
int3
and
xlat
sub
fwait
clc
loop
mov
out
in
lret
jmp
fnstsw
lret
leave
faddp
sarb
in
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
mov
ljmp
xchg
fidivrl
andb
int
mov
shlb
enter
int
aam
iret
pop
rcl
rorb
cmp
loopne
das
in
fisubs
jecxz
lock
in
in
or
std
incb
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
enter
aam
rcll
sarb
or
loopne
or
into
int3
add
std
std
add
std
incl
cltd
cltd
lcall
or
int3
into
int
lods
stos
stos
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
fwait
add
rol
enter
leave
enter
mov
rol
mov
scas
mov
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aam
std
rcl
sar
into
int
std
mov
stc
mov
test
sarl
sbb
sbb
add
add
add
add
add
add
add
add
jno
jb
data16
inc
dec
das
cs
and
add
add
mov
mov
cmpl
dec
into
into
call
aam
dec
iret
iret
inc
enter
mov
jmp
mov
push
add
add
add
add
je
je
test
adc
outsb
jo
bound
mov
data16
outsl
insl
insl
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jno
and
add
pop
add
add
jae
jae
fwait
xchg
lcall
test
clc
mov
or
test
push
push
push
inc
mov
popf
into
mov
mov
xchg
decb
lea
lods
test
cld
mov
mov
ret
xchg
aas
sub
push
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
cwtl
cwtl
cltd
in
addl
popa
pop
bound
jge
mov
xchg
mov
fwait
mov
mov
lcall
jb
mov
scas
scas
push
stos
stos
stos
add
add
add
test
scas
cld
xchg
xchg
xchg
call
lcall
cwtl
cltd
lcall
mov
loope
jbe
out
xchg
arpl
std
pushf
inc
jbe
cmpsb
ss
scas
sub
pushl
sbb
mov
jl
mov
mov
imul
int
add
add
xchg
pop
lods
movsl
stos
test
popf
popf
popf
jmp
movsl
movsb
call
jl
mov
decb
xor
lea
popa
call
or
mov
sbb
je
mov
sub
lds
test
rcrl
subl
jae
push
movsb
pushf
mov
cld
cmpsl
test
pushl
mov
jmp
sub
mov
pop
incl
add
mov
push
call
add
lods
adc
shll
call
inc
mov
aad
call
push
xchg
dec
cltd
mov
mov
mov
movsb
mov
add
push
imul
movsb
lahf
movsb
cld
scas
lods
scas
pushl
mov
mov
call
sbb
nop
push
push
call
add
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsw
call
lcall
cmpsb
cmpsb
test
add
add
bound
adc
sahf
fwait
pushf
cld
mov
scas
mov
mov
mov
pushf
dec
jge
popf
xor
cltd
and
xchg
push
pop
jmp
add
mov
push
jmp
jo
jmp
js
in
jnp
push
jle
out
jle
fstps
mov
movsb
mov
add
dec
dec
dec
adc
push
cmp
mov
mov
ret
mov
arpl
jmp
add
ljmp
add
pop
outsb
fmull
in
mov
push
xchg
clc
cwtl
leave
push
xchg
enter
mov
movsl
sub
inc
aas
inc
adc
push
xchg
xchg
cld
rol
inc
ret
ret
inc
mov
cwtl
ljmp
pop
imul
mov
fs
add
aam
jns
ljmp
stc
lods
iret
sti
lods
sar
cld
scas
sar
std
lods
sar
jmp
lret
mov
cmpsb
ds
std
incb
xor
jno
inc
mov
mov
aad
mov
aam
fnop
aam
out
lret
cli
mov
mov
jmp
add
add
aad
jno
out
xchg
stc
nop
mov
fdivr
inc
std
ret
inc
lock
ret
in
test
addl
stos
lods
stos
add
in
jmp
call
jmp
in
fcmovu
mov
add
mov
add
add
out
aaa
xchg
sti
scas
cld
int
dec
in
std
shl
call
in
aam
push
enter
into
in
scas
lods
scas
popa
jg
addb
add
std
incl
std
incl
lret
int3
shrl
mov
add
mov
add
jecxz
jp
repz
cmpsl
cld
enter
aad
cld
aam
std
shl
sti
aam
stc
aam
push
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
fistps
cmp
insl
lods
cld
lock
shl
jmp
mov
shl
in
aam
call
fcmovnu
scas
push
cltd
lcall
rol
or
popf
stos
xchg
dec
and
shlb
js
mov
mov
lret
adc
int
fmul
into
pop
xlat
dec
jecxz
fistpll
call
in
out
sbb
rol
add
mov
scas
arpl
lods
mov
ret
les
sbb
fstp
bswap
into
into
or
aam
push
std
incb
jg
addl
stos
std
incb
rol
add
incb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
adc
inc
xor
rcrl
or
faddl
cli
adc
jp
mov
addr16
es
fcoms
mov
cltd
jb
mov
aas
adc
in
popf
adc
int3
mov
mov
jnp
push
ret
dec
addr16
cs
push
mov
inc
dec
dec
rcr
popf
pusha
imul
or
stc
push
rclb
xchg
mov
loop
popf
lods
xchg
nop
out
test
mov
mov
dec
push
aas
xor
scas
push
movsl
sub
mov
out
imul
lds
push
inc
aas
cmc
insl
adc
add
mov
sbb
dec
outsl
jle
enter
lock
aam
lods
insl
arpl
fadds
add
out
sub
ret
adc
jns
dec
sbb
lcall
mov
pop
jg
sbbl
repz
leave
dec
ficoml
loope
lcall
std
jmp
in
fmuls
push
mov
and
mov
inc
sbb
adc
pop
dec
in
notb
fwait
loop
ss
aam
orb
lds
stos
loope
mov
or
lods
pop
aaa
fisttpll
adc
mov
in
outsl
mov
push
aam
push
sahf
pop
lock
pop
leave
jmp
jg
in
sub
sbb
mov
xchg
jmp
cltd
lods
js
out
imul
jmp
push
jno
stc
incb
les
push
repz
mov
inc
jg
push
aad
cld
jo
push
out
icebp
mov
cmp
dec
imul
clc
gs
movsl
mov
repz
xchg
ret
flds
push
sub
xchg
testl
fiadds
mov
mov
subb
prefetchnta
push
enter
inc
rcrl
xor
push
sub
mov
pop
std
scas
stos
pop
nop
mov
cmp
leave
sub
jnp
std
sub
ss
xor
or
in
pop
inc
sarl
cmp
xchg
cmc
pushf
cmp
iret
ret
fistl
lds
mov
std
int3
nop
fwait
push
sbb
mov
lcall
pop
subb
ret
mov
jg
out
inc
adc
mov
mov
fwait
mov
pop
sub
aaa
xor
sub
aad
ficoml
cmpsb
xor
mov
sbb
into
mov
enter
rcll
dec
test
out
inc
mov
outsb
and
inc
adc
test
stos
mov
mov
jb
popf
adc
cld
shlb
aas
mov
mov
ss
or
sub
push
pop
xor
mov
or
dec
mov
cmp
shll
cmp
jno
lods
push
mov
arpl
jo
imul
mov
dec
or
ror
add
andl
sti
inc
lahf
addr16
dec
cmp
jno
movsb
jg
adcl
lahf
cmp
xor
insl
out
popa
fistpll
xchg
hlt
loopne
jl
and
sub
out
push
jmp
add
in
xchg
or
push
push
add
clc
pop
adc
sub
std
pop
mov
lock
pop
insb
stos
sbb
jo
adc
imul
add
or
popa
cmc
and
lods
sub
imulb
mov
adc
clc
sbb
mov
imul
pop
aas
adc
loopne
fs
test
jb
pop
enter
js
jae
dec
push
xchg
push
mov
in
mov
mov
mov
or
mov
enter
mov
push
roll
jae
fwait
insb
sub
into
movsl
xchg
mov
sbb
jb
pop
cmp
xchg
mov
mov
scas
daa
mov
push
cli
push
ljmp
testb
and
ljmp
int3
out
jmp
out
shrl
ss
jmp
add
cmp
jmp
jne
mov
or
iret
xchg
mov
jb
sub
or
stos
xchg
mov
push
push
xchg
mov
mov
push
and
leave
xor
push
sbb
shrb
xchg
fidivrs
mov
cmp
cmp
icebp
jle
mov
movsb
cwtl
cmp
adc
fisubl
add
pop
add
xchg
lcall
mov
jae
stc
movsl
and
mov
sbb
sbb
and
out
inc
mov
cmp
adc
es
push
add
mov
addr16
mov
jp
lret
mov
imul
fwait
insb
cmc
mov
pop
insb
pop
mov
dec
shll
mov
sub
mov
mov
inc
adc
in
rcr
pop
mov
shlb
inc
fs
shl
rolb
cmp
cli
enter
sbb
add
push
ss
push
lret
repnz
int3
xchg
lock
sbb
mov
inc
inc
xlat
xor
les
gs
push
enter
sub
scas
cltd
mov
xchg
dec
mov
outsb
mov
icebp
gs
xchg
imul
call
out
pop
and
nop
push
xor
sbb
arpl
test
into
fidivrs
xchg
cs
pop
repz
adc
pop
dec
and
xchg
jo
pop
cmp
push
mov
pop
test
sbb
movsl
jne
icebp
loop
loop
xchg
imul
fwait
loope
mov
shlb
mov
pop
out
test
dec
pop
push
push
js
and
mov
icebp
mov
shlb
mov
pop
out
mov
and
mov
xlat
ret
pusha
pop
les
les
rcrb
pusha
testl
into
mov
cltd
out
and
in
inc
ds
or
dec
loop
jno
mov
idivl
xchg
push
or
dec
mov
rcrl
dec
add
push
loope
cmpsb
jmp
sbb
sbb
movsl
sub
scas
jb
aaa
movsb
mov
jmp
test
xchg
xchg
out
aam
sbb
test
push
jns,pn
bound
popf
xchg
pop
pop
mov
bound
je
mov
dec
aad
sbb
popf
daa
sub
lods
scas
dec
loope
int
jmp
xor
jno
push
push
xchg
xchg
movsb
cmpsl
movsl
cmp
lds
pop
sub
int3
arpl
loope
jg
ljmp
mov
sbb
mov
jbe
inc
fcoml
mov
cli
out
ja
sbb
sbbb
cmp
sub
pop
mov
dec
shrl
push
xor
push
sti
xchg
mov
sbb
push
inc
shr
sbb
ss
sar
mov
mov
or
cmpsl
out
sbb
cwtl
sub
mov
cmp
pop
stos
pop
xchg
sub
cmpsl
test
mov
shlb
movsb
cwtl
fcoml
xchg
sbb
add
movsl
sub
repz
cmp
in
je
sub
pop
push
add
imul
cmp
das
loopne
add
shrl
stos
cmc
mov
jb
xchg
or
enter
ret
dec
mov
dec
loope
hlt
insl
add
mov
mov
jns
xchg
inc
lcall
xchg
in
pop
pop
mov
pop
call
or
jns
xchg
add
in
mov
loopne
aas
push
mov
mov
fstpt
or
cs
xor
xchg
sub
mov
jle
aad
pop
mov
inc
shrl
enter
out
mov
loopne
or
outsl
xor
andb
cmp
mov
mov
and
inc
fmulp
lds
fstpl
ja
lock
mov
or
cmp
fsts
ss
mov
leave
lds
aad
repz
int
daa
mov
fildll
test
xor
xorb
add
cli
xchg
cmp
sbb
sub
inc
fnstsw
pop
jl
push
insl
stos
inc
mov
inc
mov
jae
clc
notb
jecxz
cmp
mov
push
add
mov
xchg
sub
roll
stos
in
cs
push
fnsave
stos
inc
jmp
or
insl
cmp
outsb
add
push
xor
ja
lods
mov
les
shlb
cmp
movl
push
and
in
stc
push
in
and
les
mov
mov
mov
pop
cwtl
das
mov
mov
lea
dec
in
icebp
dec
jecxz
in
cwtl
das
ffreep
ds
add
shlb
cmpsl
rclb
dec
loope
and
pop
xchg
inc
sbb
sub
mov
pop
dec
stc
nop
cmp
popa
clc
sub
pop
push
shl
jle
jb
xor
jmp
nop
xlat
outsb
int
pop
mov
cwtl
stos
loope
sbb
lahf
test
jno
pop
iret
mov
sar
push
es
enter
or
cmc
fidivl
cltd
mov
ret
dec
jp
lds
lods
inc
or
cs
lahf
pop
lds
and
pop
sarl
inc
and
mov
out
cli
std
xchg
in
lcall
jg
dec
fistpll
lock
sbb
pusha
movsl
sti
xor
mov
addr16
fdivrs
ror
push
and
xchg
add
outsb
push
lahf
addb
iret
inc
mov
or
cmpsb
iret
dec
fcomip
pop
cmc
mov
fstps
mov
outsl
aam
lods
jmp
enter
adc
out
sub
dec
in
sbb
xchg
inc
mov
stc
nop
das
xor
out
xchg
leave
ja
mov
faddl
xchg
int
and
loopne
insl
add
add
test
call
pop
push
in
sub
cltd
mov
es
mov
pop
int3
arpl
xor
push
jb
arpl
mov
pop
test
xor
jle
in
sbb
bound
stos
mov
and
xor
ret
jne
in
pop
shl
ja
clc
data16
jmp
or
inc
mov
push
xchg
sub
mov
ret
push
popf
mov
dec
loope
inc
fcmovb
rorl
call
pop
icebp
lret
sti
stc
in
bound
cmpsl
xchg
or
scas
inc
push
sbbl
inc
xor
shll
mov
fnstenv
lret
jle
push
stos
in
sbbl
jns
mov
icebp
adc
pop
pop
adc
shrl
cmpsb
sbbl
lds
inc
lods
mov
inc
fidivrs
filds
dec
xchg
sbb
pop
add
pop
jbe
pop
cmc
es
and
sti
sub
and
mov
inc
fistl
cmp
cltd
xor
fbstp
imul
fs
test
fidivl
inc
jp
jle
in
test
adc
and
nop
daa
xor
push
pop
dec
mov
pushf
adc
into
gs
mov
sbbl
fcoml
ja
stos
and
out
inc
cmp
movsl
mov
inc
sub
ss
ret
adc
dec
pop
js
dec
out
or
outsl
or
cmp
sbbl
xchg
pop
adc
test
dec
in
cmpsb
aad
sbb
add
add
test
pop
mov
loopne
ja
pop
inc
fldcw
inc
in
xorl
js
out
xchg
je
or
icebp
mov
sub
add
mov
jmp
loope
dec
pop
scas
jns
lods
inc
xlat
sbb
lods
cmp
aam
mov
jl
push
ret
popf
sbb
push
outsl
call
xor
pusha
sahf
xor
mov
shlb
aad
jae
or
pop
call
adc
in
rclb
andl
ja
cwtl
xor
jns
pop
mov
and
mov
xor
out
ss
js
xchg
inc
jne
js
mov
fwait
inc
mov
cwtl
ljmp
sub
adc
aas
xchg
ret
pusha
add
adc
inc
ss
test
cmc
movsb
cmp
jmp
jmp
sbb
push
jmp
cmp
stc
shrb
ret
xlat
mov
push
push
movsl
jno
push
lods
out
test
or
mov
fwait
xsha1
cmpsb
or
jns
sub
pop
scas
scas
shl
mov
lods
inc
sahf
shrl
pop
out
xchg
xlat
jmp
jo
stc
adcb
rcrb
add
mov
fs
mov
arpl
mov
push
mov
sub
fstps
push
in
aaa
into
fidivrs
jg
icebp
data16
xchg
adc
test
xor
xchg
movsl
aas
push
es
fnstenv
lds
in
mov
ret
insb
add
cmpsb
cmp
jae
xchg
sub
xchg
mov
push
hlt
jmp
sbb
pop
lock
stos
jno
mov
push
pop
sahf
push
sbb
test
fdivl
je
addr16
jno
mov
mov
lods
in
fcompl
mov
xor
pop
enter
jno
xor
data16
outsb
push
and
nop
inc
data16
push
testb
push
or
mov
cs
cli
xchg
xchg
test
ret
mov
andl
cli
mov
aaa
into
ss
cltd
xor
xor
in
pop
sbb
or
ret
std
nop
xchg
sub
mov
and
mov
jg
pop
pop
cmc
jl
hlt
mov
or
mov
inc
fdivrp
outsl
sbbb
mov
jo
subb
inc
outsl
push
jg
lahf
xchg
roll
rcrl
idiv
sub
fs
lods
loopne
pop
dec
loope
mov
loopne
std
shll
xchg
repnz
and
hlt
mov
cmpsb
dec
in
scas
gs
and
inc
fldl
inc
sbbl
and
lret
in
orl
mov
cmp
push
leave
shlb
inc
inc
fimull
aam
lods
inc
xchg
imul
test
mov
in
adcl
cmp
popf
shll
sarl
lret
and
mov
ret
out
or
inc
or
mov
push
pop
hlt
cld
pop
es
jb
jo
dec
xchg
aaa
into
adc
xchg
push
xor
leave
xchg
jno
add
xorps
xchg
imul
ret
xchg
mov
adc
cmp
or
pop
sahf
test
shll
lock
xor
push
ret
and
aam
pop
out
pop
cmc
xor
mov
mov
flds
pop
xchg
and
imulb
xchg
add
mov
fnstenv
mov
pop
add
repz
rclb
sbb
and
enter
push
xchg
ljmp
xchg
outsb
sti
xchg
mov
shll
mov
shrl
xchg
cmpsl
or
out
xchg
inc
push
popf
aaa
or
xchg
jle
mov
out
add
out
sbb
scas
stos
fisttpll
mov
leave
faddl
out
ljmp
outsb
aad
int3
loop
push
adc
mov
test
or
shrb
mov
xchg
dec
mov
push
mov
jae
test
cli
xchg
xor
push
jo
mov
dec
in
stos
mov
fdivrl
rol
test
test
jmp
sub
loop
nop
pop
lock
fimuls
pop
dec
xor
sti
sbbl
xchg
clc
jmp
data16
clc
mov
pop
cmp
movsl
jo
sti
popa
push
ret
pop
scas
pusha
negl
into
mov
or
push
push
or
mov
test
aaa
mov
divb
cs
loope
push
xchg
or
iret
jne
mov
xchg
mov
mov
add
int
xchg
mov
push
outsb
aad
dec
mov
cs
aam
push
jne
incb
popa
mov
sub
or
std
mov
loope
adc
mov
mov
and
xchg
cmpsl
gs
aaa
sbb
cmp
dec
jmp
jg
data16
iret
sub
in
inc
inc
sbb
pop
fcompp
cld
mov
in
fldenv
jmp
scas
addl
cmc
arpl
inc
mov
push
clc
test
lds
ret
hlt
dec
lcall
jl
popa
inc
into
jno
cs
dec
lods
inc
push
push
mov
xor
add
inc
addr16
xorl
lods
inc
lcall
aas
sub
xchg
dec
stos
pop
push
adc
push
inc
add
pop
push
xchg
jnp
push
repz
push
aas
xchg
cmpb
xchg
or
push
popa
clc
inc
imul
pop
cmpl
mov
inc
daa
mov
inc
jns
cmc
pop
gs
fstl
mov
push
sub
sbb
cmpsl
sub
data16
mov
fnsave
mov
lahf
int
aas
loopne
lret
add
pop
xor
push
mov
pop
cwtl
lcall
inc
in
pop
jb
jmp
jge
cmp
ds
jl
addr16
pusha
inc
fnstenv
bound
lret
outsb
pop
int
nop
push
jmp
repnz
jno
pop
xchg
mov
mov
mov
ret
jmp
dec
jecxz
or
fisubs
or
enter
dec
jmp
or
or
mov
pop
push
push
jmp
jl
shrb
mov
in
mov
xchg
imul
sub
mov
jp
mov
mov
in
ret
xchg
lods
inc
or
inc
fidivrl
loop
repz
sub
cmp
sub
loope
movsl
hlt
gs
sahf
insl
adc
fs
out
frstor
push
lcall
jnp
arpl
je
in
sub
pop
repnz
or
cmpxchg
pop
cmc
or
mov
push
jmp
dec
data16
stc
shll
adcb
hlt
sbb
adc
sub
movsl
test
lea
cmp
jb
das
add
inc
inc
pusha
divl
sbb
rcrb
inc
nop
daa
jbe
pop
out
xor
inc
fcmovbe
sbb
nop
lea
pop
scas
addr16
sub
test
cmc
mov
aad
pusha
enter
xchg
cmpl
lcall
mov
push
jmp
pushf
push
pop
scas
imul
jmp
inc
lcall
popf
or
out
xchg
cwtl
das
leave
les
push
bound
push
jl
mov
xchg
aaa
into
add
mov
sbb
mov
xor
int
adc
loopne
jle
cmp
sub
mov
arpl
pushf
insb
xchg
je,pt
insb
add
xchg
lds
xchg
movl
lcall
dec
dec
ret
pop
cmp
pop
loope
push
xchg
popa
mov
jnp
imull
pop
out
adc
ja
mov
or
insb
mov
pusha
mov
xor
inc
loopne
ss
jge
push
mov
xorl
mov
pop
cmp
js
mov
lahf
inc
inc
xor
aaa
sti
ss
sahf
and
mov
cmp
dec
call
maskmovq
idivl
call
and
pusha
pushf
xchg
sub
popa
or
data16
repz
xchg
add
sbb
lcall
in
add
adc
push
fwait
xor
sub
repz
dec
xor
push
push
xor
test
inc
sub
adc
pop
icebp
mov
xor
fdivrs
jecxz
xor
sub
inc
fnstenv
outsb
add
and
out
xchg
jb
pushl
testl
and
fsubs
aad
stc
testl
punpckhdq
cmp
push
popf
mov
mov
hlt
xchg
das
push
xor
inc
push
sbbl
xor
mov
inc
fsubs
insb
add
mov
xor
sub
adc
iret
add
int
add
lcall
xchg
cli
call
xchg
jmp
mov
iret
cmp
pop
xor
outsb
mov
sub
out
sbb
jne
pushf
lret
shrl
mov
cmpsl
ds
sbb
arpl
int3
mov
dec
rcrb
push
mov
fnstcw
sub
lss
out
inc
shll
inc
loop
dec
ret
pop
cmp
lods
inc
mov
fxch
popa
in
lods
lds
lcall
jae
jb
test
mov
aam
add
xor
adc
enter
bound
dec
out
imul
inc
pop
fsubrs
arpl
aaa
or
sbb
mov
cmp
jge
stos
pop
hlt
adc
pop
scas
bound
xlat
outsb
inc
lds
aad
cwtl
mov
jl
mov
in
cmpl
lods
xchg
pop
push
in
pusha
mov
in
cmc
orl
mov
mov
and
xchg
sbb
mov
enter
cmpsl
nopl
stos
xor
or
ret
aam
sbb
enter
mov
testl
fcomi
inc
fiaddl
std
sbb
inc
push
or
push
inc
push
ljmp
pop
scas
push
ret
stos
popf
xor
subl
mov
jmp
sbb
aaa
into
cs
cwtl
das
test
adc
repz
inc
xlat
add
push
out
divl
enter
in
dec
jo
jle
push
movsl
sub
testb
and
adc
pop
inc
dec
fistpll
jl
xchg
aad
roll
cltd
add
inc
mov
mov
arpl
fistpl
iret
xor
lock
sbbl
daa
pushf
mov
pop
scas
icebp
nop
daa
and
scas
inc
adc
sahf
xor
mov
mov
cmp
test
xor
movsl
ret
mov
jg
cwtl
aaa
lods
inc
cmpsl
push
mov
insb
mov
cwtl
jns
or
inc
fcmovne
mov
add
mov
es
mov
dec
loope
and
ss
jno
push
gs
add
add
call
dec
push
shlb
js
scas
addr16
dec
orb
xchg
sub
loopne
cmp
fdivrs
dec
loope
movsb
mov
xor
sub
pushf
rcrl
in
push
lods
push
pop
sub
idivb
daa
mov
sbb
jne
mov
fucomi
sub
clc
fisttpl
outsb
add
sub
dec
ss
mov
aas
call
pop
lds
push
ljmp
out
test
push
movsl
add
push
mov
and
sub
add
imulb
js
adc
rolb
push
call
xor
sahf
xor
lea
sub
cmp
cli
lds
push
xor
nop
insb
xchg
pushf
xor
fdivrl
cltd
shl
sbb
sbb
aad
imul
push
and
aas
pop
scas
inc
mov
mov
in
and
cmpl
bnd
lea
add
xor
sbb
cmp
and
mov
add
fsubs
push
and
je
mov
pop
bound
aam
dec
shr
leave
and
cwtl
push
mov
dec
es
mov
mov
sbb
jno
cmp
lcall
test
je
outsb
add
ds
fidivs
mov
std
aas
sub
pop
movsb
sbbl
push
jmp
sub
xlat
sbb
xchg
cmp
sbb
or
cmc
or
cld
ss
and
sbb
leave
pusha
imul
mov
and
pop
lcall
out
jecxz
jg
call
das
imul
std
push
jge
out
lahf
and
sti
dec
push
into
aaa
dec
pop
hlt
jg
aas
jecxz
xor
mov
outsb
or
push
subl
xor
repnz
cld
pop
mov
lock
sbb
in
cmp
rcr
sti
ss
out
xchg
lret
loopne
aam
dec
shl
jmp
mov
cmp
or
hlt
xor
fwait
sub
add
call
inc
jo
mov
popa
push
rclb
push
mov
pop
xchg
jne
jge
test
xor
jno
cmpsb
cmp
dec
loop
pop
sub
cld
pusha
and
divb
sbb
jae
cmp
jns
icebp
mov
scas
and
push
lret
test
or
out
cwtl
mov
mov
xchg
cli
xchg
push
sti
filds
idivb
inc
daa
adc
call
and
inc
adc
movsb
push
pop
jl
inc
inc
je
movsb
xchg
fs
and
js
or
mov
cwtl
loope
push
jl
inc
fsts
stc
nop
ljmp
mov
clc
jmp
hlt
scas
int
aaa
ds
loopne
cmp
cmpsb
sbb
fcomp
add
fmuls
mov
loop
pop
rorl
mov
fnstsw
es
pop
lret
andl
faddp
fidivl
jmp
xor
movsl
inc
aas
jne
add
test
data16
jbe
sahf
int
lock
mov
movsb
sub
add
inc
inc
xchg
aas
lcall
clc
or
pop
clc
scas
and
xor
inc
clc
sub
mov
mov
or
cmpsl
mov
or
testb
sti
adcl
in
mov
les
shl
scas
or
rep
inc
les
mov
daa
sub
mulb
cmpsl
subl
xor
data16
mov
pusha
mov
std
push
lret
les
loop,pn
inc
int3
cmp
push
or
paddsb
lods
ds
mov
mov
mov
in
push
cld
insl
dec
mov
or
pop
imulb
mov
gs
hlt
sub
arpl
lret
jnp
sub
add
push
sub
aas
lds
xor
filds
sbb
movlps
lock
inc
mov
in
dec
pop
iret
mov
shll
lods
pop
pop
jle
push
gs
movsl
push
mov
lds
mov
loopne
xchg
push
idivb
call
stos
mov
xor
add
jns
mov
and
inc
adc
popf
inc
xor
ja
nop
ret
imul
add
sub
testl
jbe
push
jne
shlb
jge
fidivrs
jle
xlat
and
cmp
pop
add
lods
sub
stos
or
sub
inc
jmp
xlat
xchg
subl
and
cmc
call
inc
das
outsl
xor
imul
les
dec
mov
daa
rorb
fidivl
add
loope
js
or
stos
inc
add
cmpb
sahf
cmp
call
out
or
mov
or
push
sub
das
lcall
aas
push
arpl
or
mov
inc
stos
add
aam
stos
leave
in
xor
aam
adc
jae
mov
repnz
push
cmp
dec
inc
xor
or
or
cmp
repnz
and
jp
jmp
xchg
popa
mov
mov
mov
jno
xchg
sbb
add
cmp
fidivs
pop
ss
inc
pop
push
shlb
cmpsb
insb
outsb
imul
inc
jp
test
fsts
mov
dec
xor
jg
test
xor
bnd
mov
lock
jns
jb
sbbl
jg
or
lret
add
rorb
jl
ss
popf
sbbb
scas
pop
cmc
es
lods
lods
add
add
dec
test
loopne
jo
mov
xlat
shrl
jo
cmp
shrb
testl
lock
ret
enter
sbb
add
pop
xor
mov
adc
push
push
xor
jge
push
je
pop
cmpsb
sbb
clc
inc
arpl
add
insl
adc
adcb
sub
push
jmp
adc
jno
outsl
shrb
loop
jne
mov
sub
sbb
jp
orl
sub
insb
jo
iret
sub
sbb
and
mov
inc
lahf
aas
lcall
ds
daa
in
aam
jb
add
mov
sub
or
nop
push
dec
jo
push
mov
cmp
shrl
mov
push
lret
cld
ja
cmp
mov
inc
lret
mov
push
push
addb
pop
mov
inc
outsl
pop
xor
or
call
mov
shl
adc
orb
mov
fdivs
das
sbb
xchg
sub
jnp
dec
cmp
pop
or
pop
enter
cmp
icebp
mov
push
repz
imul
paddsw
pusha
popa
movsb
insl
and
jg
mov
adc
iret
push
xlat
push
test
lahf
lret
test
cmp
testb
cwtl
loope
shl
jge
mov
or
mov
mov
jecxz
sbb
shl
pop
daa
pop
push
dec
subb
and
cmp
jle
sbb
xchg
jg
push
mov
inc
cwtl
outsl
sbb
cwtl
imul
sarl
jmp
mov
dec
ret
out
push
xlat
xchg
insb
sbb
push
mov
add
lock
or
fbld
push
xchg
pop
daa
mov
inc
push
ret
add
or
icebp
out
cmpsb
sbb
dec
jnp
jo
repz
das
or
mov
jae
das
aam
or
or
or
and
and
cmpsb
mov
cs
or
sub
xchg
lds
scas
loopne
inc
sbb
and
mov
les
pop
cmp
jnp
pop
sub
pop
dec
mov
call
sti
pop
push
add
test
arpl
movsl
sub
xchg
xlat
ja
adc
and
shrl
mov
hlt
icebp
mov
bound
roll
lds
notb
lret
aaa
repz
loope
cmp
sbb
lock
popf
pop
scas
into
jle
cmp
xor
mov
push
and
cld
fildll
rcl
jmp
add
js
rcpps
enter
stc
lods
into
push
add
stos
pusha
neg
dec
stos
cmpsb
sbb
lret
mov
sbb
pop
mov
fld
rcrb
in
mov
insb
xor
lods
xchg
adc
dec
pushl
int3
test
add
insl
ds
pop
mov
mov
xchg
sbb
fwait
ja
mov
mov
adc
outsl
cmp
clc
lea
pushf
add
adc
sub
push
popf
out
push
js
int
push
fildl
ja
push
mov
mov
stc
and
into
push
xchg
jo
cmpsl
sarl
clc
iret
rolw
cmc
test
xchg
rorb
adc
test
les
out
es
fwait
cli
clc
xchg
xor
test
cmp
aaa
push
mov
lea
js
mov
sbb
add
push
fdivl
mov
jo
or
lret
outsl
push
std
lahf
loope
movsl
and
xchg
fwait
fwait
push
dec
outsb
pop
lods
lods
sbb
xor
faddp
jbe
or
mov
mov
push
xchg
push
popf
and
sbb
jbe
cmp
jge
cltd
push
xchg
push
lcall
pop
push
jl
add
scas
test
jmp
int3
sbb
das
push
mov
sbb
imul
insb
mov
mov
insl
stos
sub
ljmp
cmp
sub
movsb
je
insl
add
xchg
adc
cmp
and
iret
and
shll
test
jbe
adc
outsb
jbe
xlat
sub
sub
dec
repz
mov
mov
loopne
dec
push
sbb
clc
add
arpl
test
add
jne
loope
adc
jmp
xor
ljmp
jno
pop
and
jo
jle
push
test
mov
dec
and
sbb
and
sahf
cmp
aas
cmpsl
jg
mov
mov
push
outsb
adc
in
inc
leave
outsb
decl
jnp
fwait
cmp
push
mov
dec
out
outsl
testl
inc
ja
jae
xorl
mov
jb
mov
mov
dec
testl
xchg
imul
flds
xor
pop
push
mov
push
hlt
push
pop
adc
mov
aam
loope
call
xor
popf
in
popf
leave
mov
mov
add
xor
pop
sbb
pop
mov
sti
in
mov
jb
mov
cmpsl
in
insb
pop
repnz
push
push
popf
xor
insl
push
cli
push
stos
jb
sbb
pop
jle
xor
cltd
jae
lods
inc
xchg
dec
std
rcrb
cmp
lret
test
add
and
sub
dec
ret
arpl
mov
arpl
xchg
outsl
xchg
insl
pop
xrelease
dec
gs
pusha
fldenv
pusha
inc
push
popa
cli
push
inc
fwait
xor
addl
xor
mov
das
les
enter
and
sub
pop
cld
add
cmp
dec
lods
inc
das
add
ds
adc
or
ficomps
out
into
loopne
mov
mov
rcll
sarb
gs
inc
ret
jle
addr16
scas
bound
mov
sub
xlat
icebp
mov
call
sub
loopne
insl
dec
rorl
xor
gs
test
pop
lahf
negl
sub
hlt
call
scas
leave
lret
cld
ljmp
insl
add
mov
pushf
mov
mov
push
je
adc
cld
lcall
push
sarb
pop
movsl
mov
pop
stos
test
or
push
lods
in
jmp
mov
andl
mov
int
or
mov
sti
adc
pop
cmp
pusha
xor
push
or
daa
bound
sub
push
sti
and
dec
sbb
pop
mov
xchg
popf
sbb
jl
jle
popa
mov
add
test
add
or
mov
dec
mov
mov
dec
mov
cwtl
inc
loope
rcrl
imul
pop
or
clc
mov
out
sahf
mov
loopne
add
and
aam
mov
pop
in
stos
and
jle
enter
mov
dec
jmp
cmc
mov
or
xchg
sub
loopne
add
sub
mov
push
add
jle
inc
mov
jle
fsub
push
scas
add
jl
mov
hlt
jle
mov
jmp
cltd
dec
xor
inc
dec
xchg
das
leave
pop
pushf
xchg
outsl
rcrl
mov
xchg
xorb
sbb
xchg
mov
sub
adc
fwait
inc
push
and
out
jno
pop
scas
rcrl
mov
cli
cltd
pop
sahf
ljmp
xchg
push
mov
push
fisubrl
jg
pop
scas
dec
or
mov
xchg
or
enter
inc
cmp
cld
fcoms
adc
sub
mov
sbb
fdivl
icebp
loope
leave
jae
and
test
inc
sahf
mov
nop
cmpsl
and
scas
lret
sbb
out
hlt
int3
arpl
adc
xchg
sub
adc
push
mov
push
jge
into
inc
mov
sub
cltd
test
das
sub
xchg
jge
or
aad
shrl
mov
xchg
sub
scas
scas
push
imul
rclb
pop
bound
pop
insl
add
cmp
inc
ja
fsts
mov
pop
push
sbb
xsha1
cmpsb
dec
mov
sahf
fisubs
dec
hlt
mov
push
in
stc
cmpsb
pushl
adc
dec
clc
clc
ret
js
cli
dec
loopne
or
das
mov
jecxz
sbbb
add
stos
dec
jle
mov
jae
push
adc
jp
mov
leave
cmp
adc
push
xchg
pop
test
sbb
das
cltd
in
popa
rorb
push
xlat
jle
mov
or
hlt
mov
mov
leave
sbb
cwtl
mov
ja
sub
pop
aad
aas
push
es
pop
daa
xor
or
dec
mov
jl
and
add
imull
stos
insl
stos
mov
fisttpll
add
sub
pop
data16
nop
and
arpl
add
jle
iret
add
mov
or
fdivrl
ret
push
push
and
mov
stos
jnp
adc
adc
bound
mov
dec
in
mov
pop
pop
jl
orl
imul
repz
movsb
push
xchg
cmp
ficompl
testl
mov
lcall
adc
mov
movsl
sub
arpl
add
sub
mov
notb
sbb
insb
je
sbb
es
jmp
xor
mull
cmpsb
aam
insl
ret
rolb
lods
rclb
andb
iret
pop
mov
lods
inc
add
xor
inc
mov
data16
mov
adc
lds
test
dec
mov
mov
bound
add
ret
push
fistps
mov
loopne
sub
sahf
xor
mov
sbb
xor
shrb
cmp
add
sbb
push
sbb
jnp
dec
call
int
jle
add
pop
cltd
aam
jmp
pop
mov
pop
popf
insb
xchg
cwtl
or
es
scas
je
cwtl
popf
adc
stos
dec
lods
in
dec
insl
ret
xor
je
mov
push
xchg
bndstx
icebp
subb
lea
or
nop
cmpsl
out
out
and
in
xchg
add
adc
cmp
call
imul
aam
loopne
adc
inc
mov
std
adcl
gs
jnp
stos
mov
push
push
cwtl
pushf
sbb
adc
cmpsb
lret
pop
dec
in
fdivl
push
insb
decb
cmp
roll
jge
iret
mov
pusha
xor
test
adc
pop
push
xor
jecxz
vmovdqa
nop
dec
popf
add
lcall
sti
lret
das
push
dec
adcl
cmp
xchg
jmp
cmp
fsts
xchg
rcr
mov
mov
loope
subl
mov
outsb
pop
pop
nop
repnz
cmpsb
inc
cli
mov
out
lock
lock
mov
or
loope
and
xchg
cmp
insl
js
mov
mov
mov
rorb
push
pop
jmp
mov
xor
lods
out
mov
pop
sub
xchg
stos
scas
jmp
in
sahf
imul
adc
pop
mov
push
push
push
hlt
mov
dec
jo
push
call
or
stos
mov
in
cmp
lea
xchg
add
push
sub
test
dec
mov
in
call
cmp
mul
inc
ret
stos
lock
xchg
pushf
pop
add
imul
cli
mov
adc
mov
inc
repnz
sti
loopne
gs
mov
mov
mov
iret
mov
arpl
push
mov
jmp
aaa
cmp
cltd
or
hlt
lds
xchg
sub
mov
inc
int3
push
sbb
inc
imul
push
dec
and
add
mov
mov
test
into
mov
add
or
mov
and
jle
lods
pop
xor
arpl
jae
pop
shrb
cmp
push
add
dec
inc
push
mov
cmpl
xchg
push
adc
mov
aaa
mov
aad
xor
adc
dec
mov
adc
pop
pop
stc
add
fidivl
pop
push
mov
in
adc
out
insb
xor
repnz
inc
orb
sbb
jb
sbbb
mov
test
add
roll
fists
lahf
mov
adc
sub
pop
int3
adc
and
xchg
xor
movl
xor
scas
sbbb
mov
or
xor
in
mov
sbb
push
push
inc
mov
jp
data16
mov
jae
mov
addr16
cltd
xor
inc
mov
test
push
mov
mov
cmpsl
push
flds
ljmp
mov
ja
push
mov
dec
push
inc
nop
clc
stos
pop
pop
xchg
mov
cmpsl
lret
xor
cmp
jbe
lret
cmp
cmp
mov
sbb
clc
inc
insl
aad
push
xor
test
push
mov
mov
loope
out
jb
sti
inc
mov
adc
push
fcmovu
jae
inc
cli
adc
mov
sbb
cmp
sbb
imul
fwait
lods
cmpsl
mov
pop
scas
xchg
jg
cmp
mov
cmp
popa
imul
popf
xor
imul
push
mov
jno
pop
das
nop
int
or
sub
xchg
sbb
sbb
mov
ror
and
cwtl
add
jae
xor
shr
push
ss
aas
add
shrl
es
lods
push
loop
ja
testb
mov
inc
cmp
nop
cmp
mov
cmp
inc
fisubrs
aas
rcrl
mov
pop
ds
lea
stc
clc
pop
jne
dec
in
xchg
sub
cmp
push
mov
lcall
mov
jo
int3
jbe
movsl
cmp
cld
add
movsb
loop
pop
fisttpll
mov
dec
or
xchg
xchg
pop
arpl
push
inc
imul
sbb
clc
loope
mov
push
dec
pushf
hlt
jb
es
lods
inc
jns
stos
inc
fnsave
inc
fcomps
ds
imulb
xor
adc
movsb
push
ljmp
jno
sub
mov
es
xlat
outsb
mov
mov
icebp
lret
bound
xor
stos
bound
jbe
xor
mov
pop
sahf
add
adc
push
sbb
roll
popa
cld
gs
push
xchg
and
inc
out
cmp
jge
dec
stos
mov
fisubrs
and
aaa
ffreep
sbb
icebp
mov
mov
daa
adc
push
inc
call
and
fldt
rcl
ljmp
mov
sbb
nop
ljmp
mov
mov
jle
ds
test
test
sbb
test
sbb
std
pop
repnz
rcrb
lcall
loope
lods
je
subl
outsb
cmp
loope
add
scas
push
mov
and
and
outsl
enter
mov
mov
mov
sti
leave
jo
inc
mov
in
cmp
jmp
inc
or
mov
test
das
mov
pop
jno
cmp
ds
and
movsl
or
sarb
in
sub
imul
sti
hlt
mov
jmp
dec
add
sub
pop
cmpsl
sub
int3
shl
dec
mov
mov
adc
mov
cmpl
xchg
jns
orb
stos
pop
or
rcl
jge
test
cmpb
test
lahf
icebp
inc
in
xor
add
or
and
nop
push
pop
movsl
xor
sbb
cmc
out
repnz
cmc
xchg
xor
add
mov
sti
pop
mov
data16
stos
shr
fsub
movsb
mov
sub
adc
shrl
insl
xor
fwait
ljmp
jne
and
pop
pop
call
fwait
stos
or
cld
aas
add
mov
insl
mov
inc
adc
movsl
xchg
rcr
push
pop
xchg
sub
in
test
shll
notb
pop
push
adc
sub
xor
sbb
or
ljmp
popa
test
sbbl
cmc
dec
fs
fisttpll
scas
and
insl
shll
adc
in
sbb
and
cmc
inc
std
inc
xor
repnz
adc
sbb
and
pop
jno
int3
jg
sbb
sub
jnp
popf
pop
arpl
and
je
sub
cmp
das
adc
test
cwtl
xor
cmpsl
fidivs
dec
dec
xlat
popa
out
out
push
movsl
popf
lahf
jle
daa
pcmpgtw
fdivs
rcll
cli
jo
pop
push
xchg
jns
enter
imul
lods
push
mov
fmuls
inc
das
mov
pop
pop
ss
inc
add
push
jmp
rcrl
cmp
xchg
mov
popa
clc
push
xlat
sbb
ljmp
jno
das
cmp
pop
push
repnz
pop
loop
aad
rep
outsl
jns
mov
mov
fldl
addr16
jno
cmc
or
adcb
clc
lds
cmpsl
ss
ja
stc
push
sub
and
sbb
xchg
pop
push
sbb
gs
fdivr
bound
daa
or
shrb
cwtl
sbb
gs
push
inc
and
jns
fisttpll
xchg
jmp
imul
shlb
out
aam
push
fdivs
aam
loope
aaa
xchg
xor
into
mov
jno
arpl
push
cmc
sub
into
mov
insl
mov
cmc
stos
pop
mov
pop
mov
loope
mov
movsb
inc
inc
jecxz
push
sbb
fidivrs
scas
push
or
mov
fstpt
clc
jae
das
stos
push
or
cs
je
rcrl
outsl
jg
gs
sub
int3
inc
fnstenv
rolb
pop
cmc
or
mov
sahf
sub
out
dec
inc
daa
or
jne
lods
pop
mov
cmp
mov
and
stc
push
mov
sbb
shl
mov
sbb
inc
cmovg
test
add
inc
stos
cli
repnz
int
xchg
test
inc
std
insl
inc
jp
add
inc
vmread
xor
push
cmp
mov
and
mov
xor
aas
lock
xchg
push
jmp
loop
jo
and
xchg
adc
cld
push
cmpsb
popf
pop
shr
jle
xchg
xor
mov
mov
xchg
loope
dec
push
jns
cmc
pop
inc
lcall
mov
ret
icebp
or
movsl
scas
push
in
or
xor
imul
repnz
addl
pop
filds
and
fisubl
inc
outsl
sti
repz
dec
or
negb
xchg
jne
lea
xor
mov
ja
les
shr
mov
flds
and
sub
outsl
xor
inc
icebp
mov
cltd
stc
fs
jno
mov
enter
mov
or
jo
in
sub
int
in
sub
call
pop
push
out
ss
pop
sbb
repnz
mov
out
lret
nop
mov
int
sbb
and
xor
xchg
out
in
inc
or
push
mov
jmp
and
push
insl
mov
rolb
repnz
pop
xor
lahf
pushw
adcl
adc
jecxz
sti
shrb
mov
std
jo
pop
inc
push
fsubs
xlat
jmp
aas
and
jmp
sti
stos
test
sub
xchg
push
sbb
mov
pop
out
imul
movsb
mov
sub
pop
fwait
jbe
icebp
loope
mov
mov
fldcw
or
std
xchg
and
jno
lret
sbb
std
sub
lea
xchg
xor
lahf
pop
adc
mov
dec
inc
inc
pop
js
data16
dec
cmp
arpl
xor
dec
and
popa
jmp
imul
cmp
xchg
push
sbb
mov
rolb
add
imul
shrb
js
shlb
dec
dec
xchg
mov
loopne
cmp
orb
sbb
dec
mov
adc
sub
jg
imul
jae
or
cmpsb
pop
ja
mov
or
jbe
adc
pop
xorl
pusha
fistpl
or
andb
in
add
cmp
xchg
cmc
push
sbb
fcomps
xor
lods
cmpsl
mov
gs
jne
xor
in
adc
in
add
into
lods
jns
inc
inc
or
sahf
pushl
and
xchg
xchg
call
out
sarb
lds
in
cli
repnz
sbb
sbb
shrb
mov
pop
jmp
jae
out
or
jmp
jp
sub
daa
outsl
test
mov
aas
test
adc
clc
pop
mov
xchg
push
or
push
rcl
repz
dec
xor
iret
push
push
push
shlb
call
out
test
and
jno
mov
push
in
pop
fwait
mov
imul
stc
jl
mov
mov
mov
outsl
daa
lahf
fiaddl
aaa
mov
cld
push
add
test
xchg
or
test
ret
sbb
add
std
inc
loop
push
xchg
push
popf
mov
std
sub
out
test
jns
or
push
jo
inc
mov
arpl
es
sub
xor
movsl
cmp
xor
int3
cmp
leave
push
negb
in
cmp
lret
clc
test
addb
pushf
adc
mov
mov
add
xchg
inc
cli
pop
loope
fildll
std
popf
lods
lods
js
out
jl
test
pop
xchg
dec
or
cs
rolb
jno
js
xlat
outsb
and
inc
repnz
cmc
adc
xchg
sub
jge
mov
cld
out
enter
xor
insl
jns
or
dec
les
xchg
insl
mov
dec
pop
sub
movsb
cmp
lock
shll
ret
push
pop
testb
add
nop
mov
test
mov
lods
inc
scas
popf
push
push
sbb
sbb
nop
dec
mov
fsts
ss
stos
or
inc
inc
sub
mov
cmp
sbb
dec
inc
jnp
outsb
jp
sub
mov
jmp
sbb
and
int3
xchg
inc
mov
nop
mov
std
pop
mov
dec
cltd
push
aas
lea
mov
out
push
jns
jno
cmpsl
call
sbb
and
cmp
in
js
fnstenv
cmp
or
xchg
subl
cmpl
out
lods
jo
pop
mov
mov
clc
pop
dec
not
into
into
gs
push
cltd
sbb
call
sbb
cmp
in
addl
or
xchg
push
add
mov
jecxz
aas
mov
jno
ljmp
or
nop
mov
push
clc
push
das
or
negb
push
mov
add
repz
or
imul
in
add
jne
insb
stos
outsl
test
dec
mov
shr
mov
push
hlt
push
jno
cmp
mov
xlat
insb
stc
out
or
pop
ret
repz
clc
daa
pop
sub
adc
stos
sbb
cmp
std
push
push
mov
imul
int
pop
lods
pop
insb
or
jo
xor
pop
xchg
cs
aad
fistpll
mov
jmp
push
lahf
xchg
lret
imul
fbstp
mov
xchg
rcrb
and
ret
popl
sbb
lcall
cltd
loopne
rclb
dec
fists
mov
or
fbld
and
add
xor
and
fnsave
push
rdpmc
cmpsl
ds
push
outsl
gs
out
xchg
mov
push
adc
sbbl
inc
fnstcw
lret
stos
cli
int3
sub
movsb
aaa
mov
sti
mov
cmp
mov
int3
or
and
mov
jmp
fstpt
scas
push
adc
shlb
add
aam
add
test
aad
add
dec
mov
cmpsb
cmp
xlat
aas
movsl
mov
jge
cmpsb
scas
or
outsl
mov
loopne
jl
xor
into
ret
mov
xchg
cld
xchg
shll
loope
call
push
rolb
pusha
push
mov
xor
in
mov
test
insb
add
dec
sbb
mov
sub
jge
xor
push
aad
mov
mov
and
sbb
dec
rcr
insb
jl
mov
mov
outsb
jge
rcrl
or
jmp
push
xchg
inc
dec
shrd
jo
fisubrs
xchg
stc
dec
int
dec
sbb
inc
mov
mov
mov
xchg
jo
fdivl
jbe
in
and
inc
ror
sub
stc
hlt
mov
movsb
aam
aam
lahf
int3
sarl
ds
xor
sti
push
or
mov
pop
loope
xchg
out
jmp
testl
filds
dec
pop
sbb
push
jmp
arpl
push
stc
jb
mov
and
bound
jbe
clc
pop
mov
xchg
gs
cmp
addl
scas
outsl
scas
call
sbb
movsb
sbb
dec
mov
add
jb
in
in
adc
adc
mov
mov
add
jp
call
add
mov
fidivl
xchg
jge
pop
jbe
test
in
jmp
add
xorb
mov
sbb
inc
pop
outsl
notb
mov
cltd
push
inc
fdivs
pop
pop
orl
or
and
adcb
fstl
js
ret
data16
xor
call
or
aam
add
xlat
int
scas
ret
insl
ljmp
mov
idivb
mov
pop
jne
pop
xchg
cmp
test
or
push
sbb
cs
shr
testl
jns
sbbl
push
ljmp
push
mov
xor
js
pop
arpl
mov
xor
imul
sti
cwtl
in
rcrb
adc
inc
jb
ja
in
sbb
jle
fidivrs
push
cld
pop
lret
sbb
mov
inc
rolb
shl
dec
dec
sbb
sbb
fs
xchg
fs
std
pop
repnz
stos
ljmp
or
lds
cmp
lods
add
mov
or
stos
inc
divl
sbb
ficoml
mov
inc
dec
dec
cmpsb
push
adc
mov
sub
jmp
sub
and
xchg
dec
aas
xor
cmpsl
aad
adc
hlt
mov
xor
sbb
mov
fdivr
pop
fwait
push
add
cmp
fidivs
xchg
mov
es
pop
fs
cmp
mov
add
xor
xchg
add
arpl
lods
cmp
add
or
pop
pop
jbe
aas
or
push
mov
pop
sub
push
dec
movsb
sti
mov
pop
push
push
outsb
ds
test
das
jbe
cmp
mov
test
and
xor
sarl
nop
sbb
xor
je
ljmp
scas
or
xchg
inc
shrl
data16
test
push
xchg
xor
adc
pop
into
pop
ja
lods
ljmp
xchg
xor
sub
dec
mov
addb
inc
hlt
notb
int3
test
in
loop
sti
xchg
xor
sbb
add
jne
scas
mov
mov
adc
ss
and
lret
jp
scas
fstpl
adc
inc
xchg
in
in
icebp
mov
daa
mov
fldenv
jno
mov
shr
add
outsb
cmp
xchg
es
bound
cli
repz
cwtl
das
xor
popa
andl
ret
in
and
push
cmpsl
in
pop
and
add
pop
mov
rolb
cmpsb
sub
ror
xor
fwait
inc
pop
int
test
push
or
fstps
or
repz
lahf
jmp
sub
jp
in
or
mov
or
sar
fidivs
mov
lock
mov
adcl
xchg
dec
test
fists
js
repz
mov
mov
cmp
jb
fwait
cmpsl
pop
dec
jecxz
imulb
aad
popa
sbb
rcrl
mov
aam
jmp
dec
loopne
test
fdivrs
sahf
addr16
pop
aas
test
cmp
loop
and
or
insl
cmp
push
jo
push
xchg
leave
sub
xor
mov
adc
icebp
mov
cmp
mov
out
vphaddbw
outsl
ret
repnz
insl
nopl
push
mov
pop
or
cmpsb
sub
adc
cli
test
aas
adc
fimull
mov
stc
sub
mov
mov
loope
or
add
sbb
int3
adc
add
mov
filds
adc
push
js
or
pop
clc
rcrl
adc
jnp
dec
std
or
lret
or
adc
cmp
pop
es
shlb
out
inc
mov
mov
imul
xor
add
xor
icebp
psubb
and
sbb
mov
inc
ljmp
pop
adc
out
outsb
xor
lahf
push
xchg
push
add
cmc
or
fsubrl
fistl
sbb
mulb
shlb
mov
inc
stc
subl
stos
sbb
inc
repnz
test
scas
dec
mov
sbb
xchg
js
lahf
pop
sbb
mov
pusha
xchg
insb
pop
sbbl
and
fs
sub
dec
sbb
or
das
ret
aad
pop
mov
push
sbb
sar
xchg
add
scas
sbb
loopne
insl
add
xor
ds
subl
dec
dec
hlt
mov
sarl
repz
push
out
imul
out
pop
ds
or
and
sub
fimull
or
lock
mov
fsubrp
test
sub
shrl
out
call
add
sbb
mov
insl
mov
je
into
and
int3
out
push
mov
mov
insb
jnp
xor
rol
push
push
xor
addr16
fists
inc
clc
pop
cwtl
imul
notb
push
sub
mov
in
jecxz
lahf
sbb
ljmp
jno
xlat
imulb
jnp
sbb
lds
push
jns
inc
fistl
sub
jge
aaa
push
je
fucomp
mov
loop
iret
lods
push
lock
imul
outsl
repz
pusha
add
int3
inc
lcall
lcall
push
pusha
out
call
xor
push
call
dec
outsb
popf
outsl
into
mov
ret
xchg
sbb
sbb
jnp
jbe
cltd
or
lret
in
loop
cmc
adc
negb
jo
jl
int
xchg
add
mov
fnsave
lea
scas
arpl
loop
inc
inc
fidivl
dec
inc
and
push
gs
cltd
inc
cmpsl
ret
jge
mov
lcall
jnp
push
out
and
cmpsl
gs
jnp
test
rol
pop
in
add
pop
sbbl
fsubs
mov
and
rcl
icebp
add
test
adc
push
jns
mov
outsb
lret
xor
outsl
sbb
loop
cmp
jg
lock
add
adc
adc
ds
iret
sbb
js
lock
out
mov
dec
es
stos
xchg
into
mov
push
fs
or
js
cwtl
mov
bndstx
jle
cmp
test
pop
psubd
adc
cmpsl
lock
lea
adc
pop
inc
sbb
cmp
in
xlat
jecxz
sbb
mov
je
rcrb
adc
xchg
daa
xor
or
xchg
in
lods
subb
call
lret
movsb
mov
mov
cmc
es
xchg
mov
xor
subb
push
movsb
cltd
daa
add
xor
cwtl
iret
sbb
jbe
inc
les
mov
jecxz
pushw
repz
mov
jne
push
xor
push
jmp
push
sahf
jo
shlb
mov
movsl
xor
add
mov
loopne
leave
pop
cmp
jbe
fwait
stos
dec
pop
push
mov
push
scas
xchg
or
mov
call
cwtl
test
lret
cld
out
pop
ds
shlb
outsl
and
jmp
mov
or
jp
sbbb
mov
cmp
iret
cmp
sbb
jl
pop
or
xor
fdivrs
rorb
daa
pop
lock
mov
out
xchg
enter
rcrl
add
hlt
push
push
cmp
ficompl
loope
pop
decb
or
movsl
cmp
mov
les
mov
aad
push
fidivs
leave
les
psubq
sbb
add
lds
in
lret
mov
and
test
inc
icebp
stos
add
mov
je
jge
in
mov
fstl
ja
mov
jae
xchg
cmp
test
loopne
xchg
in
jge
adc
mov
mov
gs
jmp
mov
and
sbb
xor
xchg
jo,pn
lods
dec
jnp
push
stos
fisttpll
pop
inc
mov
in
js
and
mov
fsubl
rolb
popf
ret
cli
call
sub
movsl
lds
outsb
rcrb
enter
mov
dec
fcompl
adc
pop
shl
pop
out
scas
mov
jne
repnz
mov
xchg
mov
shl
mov
sbb
xor
cmpsb
mov
std
aaa
lret
scas
sbb
mov
mov
lock
std
es
push
das
adc
inc
cmp
fisubs
loopne
mov
cmp
push
mov
mov
mov
hlt
or
or
push
dec
loop
push
cli
adc
lock
iret
cmp
loope
mov
lret
cli
push
filds
mull
jmp
or
push
das
les
imul
das
dec
pop
mov
imul
iret
in
popf
inc
or
sahf
pop
mov
ss
and
lods
push
lods
push
or
sub
aas
out
mov
mov
pop
push
stos
dec
mov
lds
fnsave
aam
scas
insl
sbb
add
cltd
in
and
fisubrl
das
adc
imul
adcl
mov
notl
mov
shl
mov
mov
inc
mov
push
hlt
pusha
cmp
stc
outsl
mov
dec
mov
sbb
hlt
jle
mov
mov
mov
not
jmp
sbb
ljmp
cmp
sbb
jns
jb
outsb
int3
movsb
mov
bound
jmp
fisubrs
pop
push
dec
ja
push
test
mov
in
mov
push
cmc
push
add
mov
cmpsl
adc
decb
add
jbe
xor
inc
sbb
jns
outsb
jl
das
jbe
xchg
sub
and
mov
idivl
adc
sahf
imul
rcl
out
fists
xor
and
addr16
mov
or
jmp
jno
inc
call
out
adc
ss
sub
adc
incl
pop
xchg
cld
cmp
movsb
mov
or
ja
and
stos
imull
lock
shrb
sbb
push
and
lea
dec
inc
stos
insb
or
int3
rorb
loopne
mov
mov
shr
xchg
jmp
adc
stos
repnz
adc
jne
sbb
cmpb
addb
adc
inc
mov
add
mov
mov
dec
mov
fistl
adc
scas
incb
push
adcb
push
and
aad
add
push
mov
movsl
sub
adc
jmp
cld
jae
push
insl
stc
sub
mov
dec
dec
cs
mov
mov
dec
fstp
ds
inc
fisttpl
sbb
cmp
aam
leave
pusha
imul
sub
clc
mov
pop
movsl
lret
dec
fwait
push
fidivl
sbb
push
dec
clc
xor
outsb
sub
imul
out
or
imul
jp
push
mov
dec
add
aad
ds
xchg
pop
std
or
insl
movb
das
dec
sub
notl
popa
clc
enter
inc
fs
push
lock
scas
and
movsb
scas
subl
cltd
push
lret
fwait
int
lahf
outsl
shld
stos
pop
push
and
xchg
in
adcl
jle
pop
imul
mov
and
and
cmpsl
imul
lods
push
jmp
push
fidivrs
stc
pop
cld
je
testl
push
inc
lods
xor
jb
inc
test
fsts
cwtl
pop
push
mov
push
sbb
or
mov
mov
fldt
std
fildl
jg
sub
jo
mov
jecxz
movsb
adc
dec
or
mov
xchg
scas
int
push
mov
arpl
inc
nop
mov
pop
daa
or
popf
js
add
jo
js
aas
mov
lods
mov
add
sub
out
push
sbb
pop
iret
adc
pop
fdivp
mov
mov
xchg
leave
imul
inc
pop
or
sbb
mov
les
dec
repz
cli
dec
in
shlb
mov
sub
push
push
popa
xor
aas
loop
jns
loop
cmc
insl
leave
mov
scas
rcrb
mov
std
pop
repnz
loope
inc
call
dec
loopne
jl
sbb
in
mov
xchg
adcb
jge
adc
dec
popf
adc
int3
test
in
cmpsl
pop
cmp
cmpsl
idivb
adc
ds
ljmp
jno
cmp
movsl
in
mov
cmp
xor
std
xchg
into
call
xchg
sbb
js
mov
jmp
fimuls
test
out
in
nop
jnp
andl
mov
lret
xor
xor
dec
in
pop
cltd
xor
inc
add
aaa
pusha
push
sbb
push
inc
mov
lahf
fadds
xor
or
out
sub
pop
call
mov
mov
andb
testb
out
sbb
inc
rcll
ret
adc
repnz
push
pop
sbb
mov
sub
aad
cwtl
xchg
pop
call
negb
aaa
hlt
das
mov
jge
push
popf
in
mov
and
out
sbb
dec
xchg
jo
jmp
scas
mov
test
mov
arpl
data16
push
clc
filds
mov
jp
dec
dec
insl
dec
and
push
inc
or
jp
push
cs
movsb
imul
ret
addr16
ficoms
push
paddsb
fadds
xchg
sbb
jmp
mov
jne
or
and
jo
out
inc
add
in
fmull
mov
iret
insl
rcrl
dec
rcll
loop
xor
pop
repz
rcrb
cltd
scas
jecxz
add
or
cwtl
adc
clc
ret
pop
call
gs
push
inc
js
enter
cmpsb
in
sbb
test
sbb
xor
xchg
jnp
rcrl
fs
repnz
test
test
jne
inc
test
cmp
dec
xchg
das
or
mov
out
or
pop
mov
pop
ja
pop
jo
sub
sarb
cmc
jnp
adc
cwtl
xor
and
clc
mov
xor
xchg
sbb
ss
cwtl
jle
das
cmpb
ds
into
push
push
sbbl
or
pop
lods
in
add
jg
js
lret
rcr
mov
aam
push
cmp
sub
imul
out
lret
movsb
inc
push
pop
in
je
inc
movl
enter
ja
jns
xlat
popf
adc
decb
add
pop
push
repz
add
jp
clc
jmp
ficomps
lcall
jge
cvtpi2ps
inc
mov
jns
jl
inc
pop
jg
leave
movsl
dec
xchg
ljmp
push
jg
shrb
or
fmull
ret
cmc
hlt
xchg
or
xor
jge
cmp
popa
jnp
ds
mov
xchg
inc
jne
std
cmpsb
fnstsw
push
xor
imul
lock
stos
notb
adcb
xchg
fs
add
nop
rcrl
mov
inc
pushf
es
test
push
das
adc
adcl
xor
pop
mov
push
loope
add
mov
popa
dec
loope
dec
jns
jb
jmp
out
lret
inc
or
ret
aad
lods
push
push
inc
mov
shl
xlat
mov
jae
movl
fyl2xp1
fwait
inc
ds
stc
lahf
fsubrp
inc
decb
mov
pop
movsb
jae
aas
out
icebp
pop
xchg
add
pop
push
loop
sbbb
push
movsl
icebp
shlb
mov
cld
sahf
stc
xchg
cmp
cmp
mov
dec
lahf
data16
mov
ds
outsl
test
sbb
lds
mov
cmp
fistpll
inc
and
mov
clc
insl
xchg
lret
lret
cltd
mov
dec
aad
stos
mov
scas
cmpb
jbe
sub
sbb
push
sbb
leave
loope
aam
pop
pop
leave
loope
shlb
adc
xor
sti
pop
insb
mov
outsb
roll
cltd
aaa
cmpsb
add
je
test
sbb
loope
insb
cwtl
push
cmp
test
pop
sbb
pop
jp
mov
or
in
adc
jns
insl
imul
stos
jb
cltd
aad
mov
ds
daa
jo
mov
inc
dec
dec
adc
ja
dec
loopne
cwtl
jp
out
hlt
mulb
adc
leave
pop
fs
ror
mov
movsb
adc
sbb
jl
sti
andb
sahf
fiaddl
xchg
and
int3
out
test
fisubrs
or
adc
jbe
mov
dec
fbld
loope
lods
jmp
iret
mov
adc
call
mov
stos
clc
in
lcall
mov
inc
pop
mov
and
in
inc
mov
sti
stos
mov
xchg
divl
jb
outsb
js
loopne
les
movsl
lock
clc
clc
fwait
xchg
in
sahf
unpcklps
es
push
hlt
mov
cltd
call
mov
inc
or
out
cmp
mov
sub
mov
bound
mov
cmp
je
je
das
cwtl
mov
mov
js
push
loopne
push
cmp
xchg
scas
xor
xchg
jne
jb
popa
and
jb
stos
lahf
mov
inc
stc
inc
into
cmp
arpl
loopne
mov
xlat
pop
mov
xor
inc
call
inc
out
mov
inc
and
movsb
xchg
imul
leave
out
jge
popl
mov
mov
aas
xlat
sub
mov
sbb
adc
mov
mov
jb
repnz
jl
fisttpll
jg
pop
out
test
ja
pop
cmpsl
xor
sbb
stos
xchg
xchg
es
inc
pop
daa
sti
aad
sub
jae
mov
stos
and
in
xchg
xlat
fs
out
jecxz
dec
stos
outsl
mov
xchg
adc
cwtl
dec
dec
fnstcw
loopne
loopne
or
insl
ss
lds
fwait
dec
dec
int
xor
ss
out
mov
nop
ljmp
inc
stos
sub
cmpsl
mov
pop
lret
jne
in
mov
fisttps
stos
ds
or
pusha
xor
jb
subb
pop
decb
add
pop
sbb
fidivrs
lret
shll
sub
lds
int
mov
fsubs
xor
cmp
jmp
push
sbb
cmp
jae
cmp
mov
dec
cmp
sub
loopne
hlt
test
out
pop
mov
mov
clc
nop
mov
mov
sbb
jbe
jg
ds
test
mov
pop
adc
aad
pushf
scas
fdivrl
xchg
imull
sbb
enter
repz
xor
sub
inc
xlat
cld
jge
and
lcall
scas
scas
out
xor
adc
pop
popa
clc
fistpl
orl
xchg
les
xchg
stos
sbb
addr16
loop
xchg
outsb
loopne
test
in
rcrl
pop
les
outsl
addl
das
or
mov
fstpt
lahf
cmp
dec
rcr
pusha
fwait
aad
fldenv
mov
xor
imul
mov
outsb
mov
or
or
sbb
xor
daa
int3
cmp
jmp
and
inc
js
or
nop
mov
cli
mov
pusha
xchg
jle
outsb
aas
ret
xchg
xorb
inc
mov
push
gs
int
andb
fdivrs
and
outsl
leave
cmpsl
sbb
adcb
mov
inc
sbb
jecxz
xchg
out
dec
mov
enter
sub
sbb
jns
mov
mov
clc
inc
dec
roll
mov
xorl
cmp
adc
push
test
sub
cwtl
icebp
out
cmp
adc
cmp
es
popf
test
add
mov
xchg
push
repnz
or
fs
out
notl
add
fiaddl
mov
pop
pop
gs
popf
andl
fsubrp
or
lods
aam
add
test
adc
ret
call
lds
push
divl
in
cmp
jbe
mov
sahf
mov
add
popf
push
outsb
sub
out
and
fisttps
jns
sub
jmp
jp
cmp
je
mulb
jmp
xor
int
xchg
jbe
mov
sbb
mov
cmp
mov
push
imul
xchg
ds
mov
ret
shlb
push
sub
aam
in
push
mov
xsha256
cmpsb
push
jne
cmpsl
outsl
mov
out
test
dec
lock
incl
cmp
mov
lret
jecxz
mov
inc
sbb
mov
popf
xor
jmp
cmp
adc
jnp
push
xor
shlb
xchg
mov
nop
shr
dec
mov
pushf
push
cwtl
nop
scas
and
popf
lcall
stos
inc
pop
sub
fwait
sti
or
or
sub
push
adc
or
loope
lea
jno
cltd
or
dec
or
shr
fisubrs
das
call
into
sub
std
dec
mov
and
mov
movsl
adc
ffreep
cmpsl
call
mov
or
xchg
inc
and
rol
cwtl
cmp
jmp
ret
mov
rorb
sbb
movsl
mov
fwait
loop
mov
and
adc
out
lcall
add
repz
cwtl
lret
lods
rorb
packsswb
xor
adc
pop
mov
pop
mov
cmp
and
mov
ds
sarl
mov
les
mov
jmp
outsb
shrb
les
mov
js
and
xchg
fbstp
xchg
jnp
dec
push
cmp
fnstsw
imul
jmp
adc
aas
ss
xor
or
and
inc
cwtl
mov
cmp
mov
and
dec
xchg
and
stos
mov
scas
test
repnz
jae
jmp
sbb
loopne
icebp
cld
sub
or
arpl
mov
jbe
lods
xchg
pop
xor
mov
mov
adcb
lds
and
xchg
ja
lahf
test
xor
or
fwait
add
pop
mov
pusha
shl
aaa
stos
mov
lods
mov
inc
pop
rcll
xchg
jg
fwait
inc
xor
xor
xchg
incl
xor
sbb
xchg
scas
ficomps
ljmp
rorb
dec
xchg
bound
cmpb
mov
fbstp
xchg
lret
xchg
jp
sub
jae
cld
push
sahf
mov
inc
sbb
clc
dec
rcrb
mov
insb
adc
cmp
pop
rorl
sub
cmp
stos
call
bound
test
shlb
out
clc
adc
mov
in
xchg
into
xor
movsl
in
fs
cmp
lahf
incb
movsl
adcl
push
mov
xor
xchg
bound
pop
and
sbb
outsl
pop
aaa
adc
push
dec
dec
icebp
push
mov
outsl
rorl
jb
rclb
mov
mov
pusha
xchg
mul
mov
ljmp
dec
xor
inc
xlat
popa
jl
jno
add
aaa
jle
das
pop
pop
sub
ss
bnd
and
loopne
add
mov
nop
pop
xlat
es
cmc
jecxz
addr16
cmpsl
ds
mov
inc
xor
xchg
outsl
test
pop
stos
sbb
lahf
mov
inc
xchg
pushf
stos
enter
loopne
jg
pop
pop
sahf
jns
inc
lret
fbstp
call
nop
lahf
test
shll
fmul
mov
ljmp
sti
cmp
imul
aad
pop
xchg
sub
mov
dec
sbb
mov
inc
adc
jg
pop
cmp
dec
lock
dec
aaa
lahf
xlat
add
cmpsl
xor
xor
gs
jno
pop
rorb
mov
jge
leave
scas
sbb
inc
mov
test
mov
repnz
xchg
mov
adc
jmp
xor
jo
pop
push
fdivrs
push
jg
pop
mov
dec
fidivrl
xlat
fadds
scas
push
dec
add
lret
and
xor
xchg
pushf
rep
pop
dec
pop
push
int
add
xchg
mov
pop
jno
pop
mov
pop
mov
scas
pushl
mov
xor
flds
bound
pmullw
pushf
clc
cmp
mov
test
sbb
sbbl
dec
mov
cmp
mov
data16
clc
pop
pop
push
loop
mov
cwtl
subl
sub
cwtl
inc
stc
add
nop
push
and
mov
sbb
xchg
pop
adc
aas
shll
mov
dec
xchg
notb
cmc
cmp
fists
cwtl
dec
or
cmpsb
fiaddl
inc
jns
push
mov
xor
scas
lods
pusha
xchg
add
test
or
cmp
shll
xchg
fsts
fidivrs
outsl
je
pop
adc
mov
add
lcall
fstp
pop
mov
push
js
xor
and
ret
es
push
or
mov
inc
pop
out
adc
push
and
ret
enter
push
imul
call
mov
addr16
icebp
mov
push
jmp
adc
test
fsts
xchg
sub
ficompl
scas
sar
or
pop
inc
xor
jl
dec
mov
add
rorl
call
icebp
inc
daa
mov
rclb
je
or
std
push
insb
mov
mov
dec
mov
shl
push
mov
popf
pop
push
ljmp
cmp
inc
fsubrs
push
add
inc
in
ss
in
mov
call
fmull
stos
push
or
imul
loop
mov
faddp
aam
ja
mov
pop
xor
orl
sbb
sub
movsl
cmp
jle
mov
mov
xor
stos
std
inc
cmpsb
shrl
enter
sub
sub
mov
lahf
ss
enter
pop
inc
bound
out
loop
xchg
mov
fwait
out
aas
negl
repnz
shlb
jecxz
dec
call
test
rcll
cltd
nop
jg
fnsave
jo
inc
mov
lcall
sub
mov
cmp
dec
xor
test
cmp
or
mov
push
subl
lcall
xlat
push
jmp
push
jmp
push
jne
xor
sbb
iret
mov
iret
sbb
mov
movsl
out
and
jmp
lds
adc
loope
stos
jbe
add
int
add
gs
enter
lods
push
out
ficomps
fdivl
xlat
cmp
adc
int3
mov
or
mov
enter
add
shrd
test
jae
cs
loope
enter
imul
into
cmp
stos
loope
das
mov
cmp
inc
ret
bound
or
ror
sbb
or
enter
mov
adc
out
int
mov
cmp
cltd
sbb
stc
mov
pop
push
pop
stos
or
mov
jne
in
rorl
or
xchg
mov
or
push
mov
cwtl
pop
iret
enter
shr
pop
push
cmp
pop
cld
out
jo
pop
inc
sbb
cmp
imul
dec
notl
mov
adc
xchg
and
push
mov
mov
aaa
scas
mov
ja
enter
rcrb
lret
hlt
pop
dec
mov
int
in
mov
ret
push
fwait
pop
push
and
orb
mov
stos
fidivrs
loop
fcmove
setle
cwtl
loopne
lret
aam
push
rcl
and
xchg
incb
lea
lret
mov
cmc
aad
cmp
mov
jne
xchg
xor
add
and
pop
and
sub
push
and
fcomp
and
lcall
push
jo
int
add
push
testb
cmpsb
mul
mov
add
xchg
repnz
mov
cwtl
das
push
out
push
int3
cwtl
sub
out
test
dec
popa
shlb
notl
ss
pop
cmp
pop
jle
int
push
add
shll
test
adc
cwtl
ret
cmpsb
subl
dec
and
gs
pop
sub
into
gs
push
push
out
mov
sub
dec
shlb
jae
pushf
mov
jne
leave
imul
jae
pop
xor
imul
clc
imul
outsl
inc
sbb
or
xor
mov
cmp
sbb
push
pushf
cli
sbb
cmc
mov
pop
adc
nop
xchg
cmp
stos
sbb
bound
fsubrl
jne
movsl
dec
push
xchg
inc
jl
or
pop
pop
out
les
push
sub
pop
pop
popf
jle
imul
sbb
into
jb
inc
pusha
add
popa
into
mov
ret
scas
cmc
popa
int3
arpl
xchg
daa
cli
xchg
std
ljmp
adc
cmp
sbb
push
mov
push
in
sub
test
insl
push
adc
test
js
mov
dec
jle
bound
add
pusha
divl
popl
xor
mov
inc
das
out
lock
jg
ds
jp
lahf
mov
rcll
add
cmp
negb
movsl
stos
cmc
and
dec
inc
insl
mov
mov
sub
add
jl
ret
adc
mov
fiaddl
leave
repnz
cli
ss
sbb
insl
cld
sbb
inc
ss
shr
repnz
jle
inc
fisubrl
xor
mov
movsl
sbb
fildll
mov
add
lret
ret
sbb
test
mov
jg
cmp
cltd
dec
or
lods
push
shrl
movsb
scas
push
lcall
ja
faddp
mov
test
lret
int3
xchg
xchg
xchg
lods
in
rol
inc
je
adc
mov
stos
out
push
jecxz
push
lods
xchg
or
mov
icebp
test
push
xor
sub
pop
mov
pop
lods
jle
out
inc
js
dec
stos
call
mov
inc
dec
xor
lcall
and
call
mov
bound
xchg
ja
xor
les
xlat
dec
movsl
inc
xor
xor
cmp
cmpsb
in
sahf
orb
adc
and
add
movsl
dec
mov
dec
inc
inc
pop
les
push
push
jmp
test
adc
add
mov
ja
imul
movsl
xchg
addr16
xchg
mov
rorl
insb
je
out
inc
in
loope
sub
out
stc
xchg
rolb
cmpsb
jmp
cmp
or
sub
fdivp
or
and
cmp
xor
inc
push
sbb
movsb
jecxz
das
pusha
negl
popf
jmp
rorb
scas
mov
inc
add
arpl
mov
jno
rol
imul
popf
mov
leave
jo
pop
xchg
sti
xchg
movl
int
xchg
inc
mov
sti
addb
cmpsl
xchg
mov
xorb
push
and
jle
inc
lods
into
shrl
pop
repz
adc
jg
mov
adc
fwait
xchg
xchg
mov
and
pop
lock
outsb
mov
adc
ret
push
fidivrl
or
and
xor
bound
xchg
add
mov
js
ss
inc
sub
ret
leave
iret
dec
and
adc
fs
test
lds
or
mov
ja
stc
repz
mov
adc
pop
fwait
adc
cmp
push
push
fdivp
sub
mov
sbb
mov
push
jecxz
in
mov
push
mov
test
clc
xchg
repnz
xor
inc
lds
movntq
out
addr16
push
repz
imul
fcoms
fcomp
cwtl
icebp
pop
cltd
lcall
xchg
mov
repnz
sbb
popf
add
pop
xchg
jl
cmp
cld
lcall
push
scas
pop
mov
xor
sbb
xchg
pop
mov
mov
nop
outsl
inc
cld
pop
xchg
jno
jnp
jo
pop
sub
cwtl
in
xchg
dec
lods
shll
testb
ficompl
pop
rcrl
lds
or
pop
arpl
mov
sub
cmpsb
jl
mov
inc
pop
ds
mov
mov
push
mov
mov
sbb
shrl
mov
repnz
fwait
stos
mov
cmp
gs
inc
xor
cltd
fs
jl
xor
jbe
sbb
repnz
sub
out
fists
roll
aaa
data16
insb
cmp
test
lods
test
pop
arpl
out
xchg
je
ret
cmp
loope
xlat
je
mov
xchg
push
push
outsb
pop
in
data16
dec
mov
cmpsl
adc
insb
jne
jmp
push
lock
adc
xor
xor
cli
popf
xor
push
popf
test
std
sbb
push
pop
jmp
mov
sbb
pop
insl
pushf
sti
pop
and
mov
and
pop
rcll
dec
nop
stc
add
jge
je
mov
mov
mov
ss
lods
inc
in
pop
out
cs
sbb
xchg
cmpsb
or
pusha
mov
push
add
stos
mov
ja
jge
outsl
xchg
mov
daa
pop
and
ljmp
xorb
jno
in
jge
imul
popa
nop
out
stos
add
xor
xor
test
jle
cmp
add
lods
imul
jne
mov
mov
or
daa
call
xchg
sub
pusha
cltd
out
mov
adc
movsl
insl
and
fisttpll
scas
dec
nop
fcoms
das
or
loop
mov
dec
cmp
jecxz
mov
in
aam
lock
jbe
std
and
scas
push
fmull
fs
jns
or
dec
loope
imul
icebp
or
shrb
pop
into
cmc
les
or
and
cmpsb
or
imul
mov
repnz
shll
dec
loope
mov
repnz
ret
daa
inc
cmc
nop
ja
andl
xchg
out
std
push
cmpsl
movsl
pop
cmp
mov
stos
sbb
dec
pop
jl
adc
push
pop
jbe
mov
in
loope
out
popf
inc
insl
add
mov
jae
daa
mov
std
sbbb
into
enter
add
mov
xchg
iret
cwtl
dec
push
test
xlat
adc
lea
or
dec
stos
push
stos
inc
jecxz
ss
mov
adc
push
je
jae
jp
leave
std
jnp
loopne
dec
popa
pop
clc
shr
enter
push
mov
data16
pop
push
dec
fistps
mov
push
mov
int
xor
or
shlb
pusha
push
bnd
jae
xor
sbb
arpl
pop
test
sahf
sbb
test
insl
lock
outsb
cmp
mov
mov
shrb
mov
sbb
add
xor
ret
sarl
or
dec
test
mov
and
xchg
dec
sub
cmp
mov
jne
mov
aad
pop
push
push
fistpll
insl
add
fsubs
cmpsb
imul
roll
lods
stos
jge
mov
adcb
dec
arpl
inc
enter
sub
movsb
push
push
cwtl
jne
cltd
ds
pop
nop
jbe
fldt
sbb
mov
jb
mov
fstl
or
or
or
jae
or
or
sub
adc
sbb
ljmp
and
int3
dec
pop
les
xchg
push
scas
mov
arpl
iret
sbb
sbb
xor
movsb
add
mov
add
adc
adc
inc
push
inc
pop
dec
xchg
adc
pop
pop
mov
or
mov
movsb
push
les
cmc
xchg
jmp
stos
mov
movsl
mov
les
int
push
mov
inc
hlt
dec
movsl
addr16
das
dec
cmp
out
cmc
mov
pop
popa
dec
add
test
xchg
aas
in
jmp
push
adc
jb
or
pop
or
sti
or
sbb
or
insl
xor
xlat
sub
and
mov
and
jbe
mov
xchg
mov
pop
cmc
push
mov
pop
jle
jl
scas
mov
and
jle
adcb
movsl
or
sub
xor
dec
fbstp
int
sub
push
inc
loope
enter
cmp
dec
int
pop
fiadds
movsb
arpl
dec
flds
or
xor
or
cmp
jns
pop
mov
or
cmp
sbb
sbb
test
andl
test
mov
ja
movsb
cmp
fstpl
xor
fldt
dec
loop
inc
fcompl
or
sbbl
orl
xchg
or
mov
js
mov
pop
adc
lods
lcall
insl
orb
sarl
xchg
sub
repnz
aas
inc
mov
xor
xchg
movsl
hlt
popf
je
out
cmp
cmp
repnz
mov
inc
fidivs
lock
jp
test
jmp
mov
dec
insl
test
xchg
and
xchg
fdiv
fwait
adc
movsl
sbb
push
loop
xor
jno
fwait
sbb
or
jle
adc
mov
mov
fildl
xor
push
inc
sbb
cmp
or
jae
mov
test
pop
inc
mov
xchg
stos
and
iret
push
mov
movsb
and
jle
outsl
adc
pop
outsb
adc
shl
mov
cmp
cs
int
popa
aam
imul
cmp
dec
mov
popf
icebp
loop
imul
push
jo
dec
mov
adc
fcomps
cmpsb
sbbb
mov
hlt
hlt
js
push
adc
mov
rclb
mov
int
sbbl
mov
dec
test
ljmp
dec
cmp
add
es
sahf
push
mov
fimull
mov
mov
roll
push
popf
cmp
shrb
add
cwtl
out
addps
test
pop
jl
xchg
adc
pop
addr16
push
xor
mov
push
mov
daa
adc
stc
lods
insb
jge
sbb
or
insl
dec
dec
and
lahf
ret
iret
pop
call
dec
hlt
dec
inc
jmp
sbb
movsb
lds
cli
outsb
sub
lret
out
fists
inc
push
mov
fdivrl
xor
into
cmp
cmp
cwtl
addr16
jne
loop
xor
pop
repnz
mov
lret
mov
sbb
aaa
or
jp
inc
lods
lret
pop
std
into
enter
fstps
mov
les
cltd
jg
cltd
and
push
cltd
das
mov
push
mov
ljmp
out
mov
movsb
jg
xchg
stos
pop
scas
shl
icebp
iret
cmpsl
push
xchg
scas
and
pop
xchg
dec
push
pushf
sub
jmp
or
loope,pt
sahf
bound
int
mov
iret
or
shlb
shll
call
popf
mov
jp
mov
xor
addl
mov
mov
mov
pop
adc
inc
lcall
pop
std
in
push
mov
xchg
icebp
sbb
sbb
ret
xchg
pop
hlt
sbb
xor
ficoms
lret
mov
cltd
sbb
mov
sbb
push
out
or
int3
mov
icebp
es
jns
add
outsl
xor
fbld
out
jbe
rcrl
les
and
adc
xchg
jne
jo
fldt
push
enter
aaa
in
lret
push
out
dec
sbb
push
push
loope
push
ret
fcompl
add
jo
jmp
mov
std
test
xchg
ret
jge
pop
jbe
pop
ret
xlat
daa
aas
loope
jne
jge
movsl
je
pop
adc
cmpsb
add
test
mov
shl
fwait
and
mov
scas
cmpl
cmp
aam
outsl
lret
scas
or
addb
or
sub
imul
movsb
pop
pop
or
mov
imul
xchg
insb
sbb
mov
sahf
imul
push
shl
pop
mov
inc
push
pop
or
dec
mov
push
jb
cwtl
and
xor
out
pop
fucomip
sbb
insl
xor
inc
jbe
stc
sub
and
jbe
mov
int3
icebp
xor
fimull
aaa
mov
lods
push
insb
fidivs
es
pop
shl
mov
mov
ds
and
ret
into
and
in
mov
push
sahf
int3
and
movsb
stos
cmp
mov
icebp
adc
xor
xchg
jmp
mov
lea
shr
and
push
jb
jno
jo
ror
sbb
daa
outsl
jns
shrb
adc
pop
dec
lock
cld
inc
fucomip
inc
or
mov
dec
jmp
push
adc
jo
sbb
andb
push
fdivl
pop
mov
xchg
xchg
xor
pop
dec
mov
out
sbb
mov
adc
movsl
sub
mov
mov
pop
insl
sbb
stos
ljmp
lock
mov
shr
fcmovnb
ss
or
xchg
cmp
fwait
or
in
call
sub
sbb
cwtl
cmpsl
jge
rcl
adc
pop
rclb
gs
outsb
stos
inc
mov
dec
leave
sbb
inc
out
inc
add
dec
and
push
cmp
shlb
and
int3
or
int3
iret
sbb
xchg
sti
sub
inc
xor
imul
jl
and
repnz
sub
fisttpl
adc
movl
aaa
rcll
incl
lret
mov
jmp
aas
xor
mov
xchg
dec
inc
push
adc
ret
bound
or
test
add
cmp
scas
sbb
and
and
repz
add
push
pop
pop
pop
ja
jno
or
cmp
xchg
dec
add
ficomps
mov
pop
push
pushf
xchg
adc
inc
jnp
jg
pusha
ss
mov
inc
fnstenv
pop
pusha
adcb
in
xchg
test
sub
add
inc
dec
les
mov
iret
sbb
xchg
repnz
shl
dec
mov
pop
daa
sahf
adc
iret
imulb
pop
fistl
cwtl
cmp
and
shrb
pop
insb
das
jl
mov
pop
out
push
lahf
das
mov
rcrl
hlt
mov
es
dec
add
xchg
cmpsl
push
dec
jecxz
sbb
rorl
lods
mov
adc
xchg
pop
mov
sbb
mov
mov
sbb
repz
fs
jnp
push
ucomiss
imul
cmp
leave
jo
jne
mov
inc
sub
dec
and
push
add
cmp
xor
xor
mov
mov
clc
cmc
add
mov
xchg
inc
sub
cmp
setbe
xlat
dec
int
mov
fdivl
jno
mov
sbb
sbb
movsb
xor
mov
fs
dec
lock
xchg
pushf
pushf
xor
outsb
mov
fadds
jno
cmp
and
sbb
test
mov
repnz
fistpll
mov
ljmp
inc
xlat
jp
cmp
push
sub
cmp
notl
lea
insl
jo
or
scas
add
stc
mov
pop
insl
hlt
xlat
jg
sub
test
lock
jbe
cmpsb
notl
mov
shl
mov
push
lret
loop
and
push
push
and
mov
loop
mov
mov
cmpsb
and
pop
push
cmc
mov
fstpt
jno
xchg
lahf
cmp
cwtl
das
jbe
mov
jns
inc
roll
push
nop
dec
pop
sarl
xchg
orb
lcall
and
ret
cmp
sbb
mov
shl
inc
push
ret
movsb
push
add
or
pop
jle
mov
xchg
mov
sahf
lods
std
adc
and
cli
outsl
ljmp
pushf
addr16
in
and
xchg
cmp
sbb
adc
jecxz
jb
jle
dec
test
add
daa
jae
adc
lcall
addr16
roll
shrb
mov
cmpsb
or
int
add
mov
aad
jmp
push
test
mov
adc
add
push
cmpsl
stos
mov
stos
xchg
xor
jns
iret
xor
outsl
daa
sbb
push
add
cmpsb
lods
ds
sub
cmc
cmp
jl
sbb
mov
pop
xchg
jge
ret
sbb
sub
pop
scas
icebp
inc
and
push
jno
lret
mov
sub
jmp
loopne
mov
fldt
xchg
fistps
push
in
cmp
push
mov
popf
mov
sbb
lods
xlat
sub
insl
mov
enter
jp
xor
aam
adc
cmp
pop
in
push
pop
mov
lret
scas
addr16
scas
gs
stos
or
jmp
lret
rcll
sbb
arpl
pop
and
push
jnp
mov
mov
xor
outsb
fwait
inc
and
xor
insl
add
cltd
xchg
rclb
pushf
ret
out
shl
xchg
or
add
pusha
test
mov
or
push
scas
lods
inc
clc
xchg
cmp
lods
mov
shll
jp
sbb
adc
repz
flds
add
loopne
adcl
std
fwait
es
faddp
in
fiaddl
roll
ljmp
push
push
mov
sti
test
lcall
pop
in
dec
mov
cs
cmpsb
push
je
clc
lds
jle
std
mov
call
es
fstpt
mulb
push
lods
bound
xor
sub
jae
lea
add
loope
outsl
ss
push
pop
insb
dec
dec
scas
popf
stos
pop
mov
fbstp
push
and
into
mov
sbb
inc
insb
imul
sahf
cli
adcb
andb
dec
dec
and
out
push
imul
jp
les
fs
inc
popa
xor
pop
jle
jns
std
cmp
pop
hlt
cmp
sub
mov
sbb
jmp
aaa
notb
jno
pop
ljmp
fstp
jge
std
cmp
fisubs
negl
out
in
mov
neg
arpl
dec
stc
nop
xor
push
jg
pop
adc
movsb
loop
add
jbe
dec
cmpsb
adc
out
mov
nop
call
and
outsl
add
filds
and
mov
xor
nop
repz
sub
out
inc
leave
inc
mov
xchg
imul
mov
sbb
rcrl
mov
int
ror
xor
push
fndisi(8087
xor
mov
cmp
push
xchg
cmp
xchg
orl
idivl
pop
jle
inc
push
mov
or
sbb
inc
int
push
into
aas
xor
in
loope
imul
sub
and
in
mov
nop
int
daa
jmp
data16
and
cwtl
or
movsl
outsb
sti
jg
popa
clc
shlb
jg
ss
fs
mov
cmp
jmp
cltd
rcl
push
sbb
loopne
jbe
ror
fwait
xor
xchg
push
mov
fnstenv
shr
loopne
roll
cmp
jp
stos
repnz
clc
and
cmpsb
ds
in
pop
imul
test
cmp
pop
push
test
mov
fldt
push
dec
inc
dec
sub
pop
and
push
xchg
inc
jb
cmpsb
mov
cs
inc
mov
push
inc
pop
cmc
inc
mov
test
and
repnz
fdiv
mov
jp
ret
pop
add
pop
cmp
scas
arpl
test
push
inc
jo
adc
add
sbb
mov
sub
popa
clc
out
inc
and
fbld
and
sub
popa
out
int3
push
xchg
mov
mov
fdivrl
sti
ljmp
fisttpll
sarl
test
leave
pop
lods
leave
addr16
decb
out
or
inc
fstl
mov
jno
rcrl
das
leave
cmp
cmp
rcrl
ds
fdivrl
mov
mov
and
mov
cmovae
cmpsl
add
push
repnz
pushf
sub
dec
negb
lods
adc
aaa
rorl
mov
loop
sbb
inc
mov
div
add
aam
xchg
add
jns
sub
mov
add
inc
in
js
jp
push
les
push
jle
adc
addr16
cld
adcb
cmp
ss
or
test
loopne
orl
xor
cmpsb
dec
fcoml
subb
adc
mov
mov
and
lahf
ss
cwtl
sub
out
iret
add
arpl
jmp
pusha
mov
leave
fwait
jb
popf
test
mov
push
out
sub
push
jmp
pop
out
lods
pop
jle
xor
je
out
test
lods
mov
inc
push
outsb
fbld
push
xor
adc
subb
daa
mov
iret
inc
in
cltd
mov
gs
bound
mov
push
jne
test
or
pop
ja
insb
sarl
or
cld
imul
mov
dec
call
popa
pop
ljmp
pop
xchg
add
in
add
push
jmp
dec
pavgw
and
cmp
outsl
icebp
lods
xchg
mov
adc
push
jge
test
mov
fnstsw
jmp
test
cmp
cwtl
xchg
leave
adcl
mov
cld
test
loopne
xchg
lods
aaa
jbe
pop
pop
hlt
cmp
cmpsb
les
mov
sbb
push
pop
jge
stos
cmp
outsl
movl
cli
push
popf
loopne
insl
cmc
xchg
mov
xor
inc
aas
mov
adc
ss
lea
pop
repz
loopne
hlt
aam
cmp
into
rol
out
dec
dec
popf
jle
pop
sub
push
mov
int
mov
mov
xchg
cwtl
mov
ljmp
je
or
test
imul
stos
push
mov
add
lcall
push
lahf
neg
mov
mov
es
call
inc
inc
into
out
xchg
pop
sbb
inc
in
testl
add
es
pushf
into
loopne
fdivl
inc
or
pop
cmc
sbb
jl
jecxz
popf
sbb
in
ret
push
inc
sti
dec
lods
scas
imul
pop
mov
jnp
and
inc
push
and
aam
xor
cmpsl
mov
sub
push
and
mov
jne
jae
pop
mov
popf
iret
fxch
jo
imul
fcomi
cltd
sbb
add
jmp
mov
cmc
mov
mov
xchg
out
test
mov
int3
mov
xorb
stos
xor
sbb
inc
lahf
fs
dec
inc
movsb
repnz
sbb
repz
out
dec
and
mov
jge
add
lods
ret
xchg
dec
std
push
lods
mov
scas
cmpltps
xor
enter
sub
fxch
sbbb
xchg
xlat
jp
jmp
or
movsb
xchg
push
mov
fidivs
outsb
lea
inc
xchg
adc
xchg
cwtl
xor
in
rcll
mov
aam
jp
add
xchg
cwtl
xchg
addr16
cltd
sbb
scas
iret
mov
mov
enter
imul
mov
mov
aam
xor
pop
mov
jle
ljmp
jmp
mov
mov
js
inc
mov
imul
sub
inc
test
sbb
inc
pop
fdivrl
pop
ret
repz
push
cmp
call
mov
xchg
inc
pushf
fildll
mov
pop
push
mov
pusha
sub
cs
lret
mov
add
popa
lods
aas
test
fisubrs
or
or
out
cmc
fsubrs
in
push
jne
dec
jle
stos
mov
xchg
mov
pop
adc
sahf
aaa
ljmp
gs
or
into
enter
xchg
cs
adc
jnp
dec
mov
test
dec
push
xor
lock
and
aaa
pop
sbb
jno
in
daa
add
cmp
adc
std
push
test
xor
pop
ljmp
mov
test
push
inc
lods
xor
jg
popa
inc
fnstenv
push
ljmp
mov
mov
jb
jle
popa
paddusb
cwtl
lods
cltd
std
rol
xor
mov
push
mov
jbe
out
and
pop
mov
or
mov
sub
cmp
sti
adc
mov
push
jno
fistl
out
into
dec
sahf
sti
push
or
sbb
test
sysret
push
dec
cmpl
pop
fsubs
repz
inc
ds
cmp
cmp
loop
rorb
jae
xchg
ss
sbb
push
enter
bound
scas
dec
adc
sbb
aas
xor
dec
adc
jne
mov
jnp
mov
enter
xchg
pushf
popa
cmpl
nop
bnd
in
scas
mov
jle
mov
mov
imul
nop
xchg
jne
mov
push
jns
andl
std
mov
imul
cs
gs
jbe
adc
sub
cs
push
dec
dec
mov
inc
inc
inc
stos
out
loopne
jns
sbb
mov
out
sub
or
fistpll
fisubs
adc
rol
push
add
ret
pop
mov
lcall
xor
mov
push
push
xchg
insl
or
jle
add
repnz
pushf
call
test
and
mov
popa
sbb
dec
aas
mov
out
lds
adc
pop
mov
scas
inc
add
into
call
add
mov
mov
dec
dec
push
imul
int3
adc
in
xchg
and
outsb
mov
int3
subl
and
cmpsl
ret
sarb
add
lret
frstor
xchg
sti
jge
pop
lods
ds
mov
mov
repz
or
and
cltd
cmp
dec
insl
cli
lret
push
scas
in
dec
jmp
sbb
mov
lods
fs
test
or
mov
and
and
sbb
mov
cs
js
lcall
push
push
dec
push
and
cmpl
push
xchg
lret
cltd
mov
cmp
pop
test
pop
scas
sub
lds
call
sub
clc
dec
pop
or
es
or
mov
mov
add
add
push
aaa
xor
jecxz
cbtw
cli
pusha
lret
sub
sbb
out
sbb
jbe
hlt
pop
xor
mov
xchg
inc
mov
xchg
sbb
xor
loop
sub
mov
sub
inc
fcoms
mov
mov
mov
es
insb
not
movb
xchg
push
push
test
std
ror
loopne
mov
inc
cmpb
iret
loopw
push
jl
adc
inc
int3
iret
outsl
cli
mov
stc
pop
repnz
cli
fdivrs
mov
clc
int3
faddl
xchg
mov
daa
inc
fistpll
fiaddl
mov
jl
std
stc
mov
xchg
sti
add
repz
cmpsl
cltd
rol
sbb
imul
sub
pop
cltd
adc
dec
cs
push
repz
je
and
stos
out
adcb
sub
ffree
mov
pop
nop
add
xlat
xchg
dec
cmp
fnstcw
jne
push
lods
mov
adc
or
mov
sub
lods
cmp
inc
loopne
mov
subb
addr16
jl
sub
les
push
jle
jbe
je
dec
xchg
fsubp
push
add
jl
xor
gs
les
cmp
mov
inc
ret
dec
xor
cmpsl
gs
stos
xor
es
jae
jp
ficoml
repz
cmp
lods
xchg
bound
sarl
dec
std
xor
movsb
cld
push
xchg
sub
jne
leave
push
cmp
push
flds
dec
push
gs
jb
dec
mov
sahf
cmp
xchg
loop
inc
cmp
and
lea
lcall
and
add
sbb
xlat
je
sbb
jl
std
mov
imul
jnp
les
popf
ret
fcoms
repz
sete
les
pop
inc
inc
shlb
into
bound
dec
dec
ret
sarl
mov
loope
mov
sbb
pop
data16
aas
stos
jbe
cltd
test
xchg
mov
mov
push
shrb
pop
xchg
pop
enter
xor
jo
call
lahf
adc
push
dec
mov
cmp
mov
push
fwait
mov
and
sub
in
jne
xor
outsl
incl
outsl
lret
mov
sti
pop
test
mov
jb
jnp
add
test
or
pop
ret
jmp
movsb
xor
push
sub
xor
fistps
mov
scas
mov
sbb
push
pop
lcall
xor
test
scas
aad
enter
pop
push
or
rcl
outsl
push
lods
repnz
jecxz
ss
in
push
push
js
xor
inc
xor
inc
pop
pushl
jmp
mov
push
xchg
add
xor
ret
movsl
fistpl
dec
sbb
out
std
popf
popa
xor
add
jmp
fisttps
adc
shl
jle
dec
xchg
dec
mov
jnp
dec
dec
cwtl
pop
jns
jp
ds
cltd
inc
loop
push
push
cwtl
sbb
xlat
icebp
push
addr16
dec
cmp
push
lret
xchg
inc
jmp
mov
repz
outsb
aas
icebp
push
or
insb
in
cmc
inc
mov
or
lea
inc
repz
insl
sbbl
insl
sub
push
jmp
outsl
dec
loope
mov
mov
inc
or
cmp
jmp
pop
popf
inc
fmul
jns
cmpsl
mov
lret
cld
adc
xor
fisubrs
shlb
add
jne
lea
and
xchg
stc
push
fisubrs
fnsave
data16
call
add
xorl
push
inc
dec
xchg
mov
fadds
sbb
pop
push
cmp
out
cmp
xchg
js
rcr
fldl
lcall
add
loopne
cwtl
ljmp
mov
ret
dec
inc
adc
pop
inc
dec
out
cmpsl
out
sbb
daa
sbb
jp
cs
popl
xor
mov
pop
arpl
adcl
fiadds
jl
jbe
jp
xor
mov
subl
xor
cmp
adcl
mov
movsl
pop
dec
out
inc
ds
adc
lahf
cld
mov
xchg
cmp
aaa
cmp
pop
mov
xor
inc
out
mov
push
out
adc
adc
cmpsl
sub
push
enter
cmpsl
arpl
xor
into
movsl
imul
mov
inc
push
aaa
into
and
push
push
jo
add
iret
xchg
fidivs
jle
mov
dec
cld
pusha
idivl
sub
rorb
pop
stos
mov
sub
sub
adc
or
sub
push
in
es
inc
pop
mov
pop
loop
fmuls
xchg
mov
inc
adc
xchg
xchg
xchg
cwtl
movsb
int
fwait
test
push
and
cld
push
mov
jp
push
lods
sub
aad
test
pop
mov
mov
cmp
insb
test
mov
add
jno
push
mov
jb
sub
daa
mov
jno
adc
cmp
fisubl
out
loope
sbb
adcl
pop
out
daa
mov
insb
fcmove
jmp
lea
out
je
adc
aas
lock
dec
add
sbb
mov
enter
push
xchg
add
es
ss
int
std
xchg
or
cli
cmp
filds
mov
cmp
mov
ljmp
in
jnp
xchg
mov
lcall
sahf
or
nop
mov
outsb
ret
cmp
repz
and
dec
in
daa
mov
xchg
xor
push
sbb
mov
rorb
out
ja
fcmovnu
sti
aad
repnz
cmp
jle
iret
ja
pop
sub
dec
fbstp
call
cmpb
and
ret
aaa
insb
push
push
sahf
pop
push
call
repnz
hlt
sbb
xchg
ficoml
push
lcall
jge
inc
scas
jg
lret
push
orb
or
cmp
push
outsb
xchg
cmp
lds
xor
pop
hlt
sbb
pop
insl
cmp
imul
add
lods
xor
inc
mov
fildl
push
shrl
cmp
pop
mov
repnz
fsub
jnp
and
jge
ficoml
ljmp
jae
pop
push
and
mov
inc
xchg
cs
pop
mov
mov
sub
lret
cld
adc
mov
sbb
and
iret
cmpsl
jo
sbb
push
leave
in
add
cmc
inc
stc
add
xchg
repnz
enter
nop
lock
scas
adc
std
mov
fiaddl
mov
mov
imul
cmp
jo
lock
sub
icebp
mov
push
lods
mov
jnp
push
clc
out
pop
and
jg
lods
cmp
divb
adc
cmpsb
sbb
ljmp
mov
adc
daa
jno
nop
push
aad
ret
dec
dec
pop
adc
mov
lods
add
mov
repz
ss
pop
and
mov
test
and
enter
push
flds
and
add
sub
add
bound
and
mov
cwtl
cmpsl
mov
pop
test
lahf
sbbl
iret
fldenv
cmpsl
and
pop
rcl
imul
or
enter
inc
add
inc
pusha
xor
imul
ret
mov
mov
lods
test
js
xor
or
adc
adc
cli
inc
test
and
and
add
jne
cwtl
cmpsb
pop
cmp
mov
iret
gs
xor
jecxz
mov
ljmp
sbbl
scas
fbstp
push
mov
movsb
cmc
dec
lahf
addr16
bnd
xchg
out
push
inc
mov
enter
test
or
out
dec
sub
loop
add
cltd
pop
pushf
cmpsb
xchg
in
xlat
mov
jo
scas
lea
adc
cmp
shlb
pop
dec
or
pop
ret
pop
test
int
test
lock
xchg
sub
cmp
jno
mov
jo
pop
lds
mov
mov
popf
clc
mov
sbb
add
mov
and
push
sarl
xchg
mov
mov
lahf
lock
cmpsl
push
push
or
push
add
add
test
arpl
cli
push
adc
mov
rorb
fcmovbe
jb
cltd
scas
xlat
push
mov
pop
and
and
mov
ss
add
sti
mov
adcl
imul
scas
mov
pop
mov
or
push
inc
test
jecxz
repnz
movsb
jb
mov
xor
mull
fstpt
dec
pop
pop
out
inc
add
xchg
bound
push
shll
sub
push
or
cmp
sub
andl
clc
sub
test
test
mov
je
shlb
mov
adc
adc
xor
inc
test
imul
outsb
mov
xor
fs
pop
sbb
xor
ret
pop
lock
and
test
mov
sub
mov
dec
cmp
es
jmp
mov
test
fwait
out
mov
mov
or
push
test
pop
xchg
sub
inc
scas
inc
ja
inc
sbb
dec
mov
cmc
inc
repnz
and
push
cltd
inc
adc
sbb
scas
inc
std
mov
dec
fisttps
sti
adc
sub
enter
xor
mov
out
push
fidivs
arpl
ret
inc
lret
lret
jg
ja
test
or
jl
cmp
fsts
dec
stc
fcoms
xchg
arpl
leave
mov
fwait
pop
or
gs
in
popa
call
lock
jmp
mov
test
pop
sub
imul
cmc
mov
push
pop
pushf
sti
push
xchg
arpl
shl
pop
mulb
insb
pop
jmp
sbb
push
mov
jno
fstps
add
jge
sub
sbb
rcr
add
in
pop
sbb
jp
shrl
in
inc
loop
jbe
jge
les
lds
pop
push
fisttps
mov
mov
cmpsl
outsb
insb
cli
or
flds
andb
outsb
and
ret
icebp
adc
push
push
lds
clc
outsb
aaa
movsl
subl
flds
test
out
movsl
xor
add
pop
push
rorb
xor
imul
cmp
addb
sub
rcll
and
stc
dec
cltd
jmp
out
add
out
int3
out
insl
dec
loopne
dec
or
lcall
jmp
sub
sbb
cmp
or
aas
xchg
pop
pop
or
in
xchg
cmp
dec
outsb
mov
fwait
out
call
lods
add
push
mov
sub
fdivrs
rcl
test
fdivrs
cmp
jns
mov
pop
aaa
push
jae
xchg
js
out
and
jae
repz
lods
adc
xor
shll
and
es
add
aad
xchg
cs
enter
sub
lahf
mov
add
add
dec
lret
lods
and
in
mov
insl
mov
lds
fnstenv
jp
sbb
cmc
dec
outsl
jbe
mov
movsl
xor
mov
pop
rcr
pop
xor
je
loop
mov
xchg
jl
jge
pop
mov
ret
pop
imul
dec
out
int3
data16
bts
insl
xor
jg
cwtl
mov
adc
rorb
arpl
out
aaa
into
sbb
jbe
sar
roll
xor
fs
push
mov
push
and
jmp
lds
pop
or
jmp
inc
mov
loopne
ret
mov
lret
adc
mov
sub
pop
testw
sub
and
dec
adc
add
fnsave
dec
shll
jl
enter
xor
mov
mov
enter
cld
and
jge
cmp
gs
cs
jne
cmc
outsl
scas
cmp
fidivrs
pop
adc
adc
sub
or
out
test
sbb
sahf
arpl
lock
movsl
scas
cs
inc
and
adc
mov
test
stc
push
arpl
mov
lret
xchg
in
sbb
arpl
mov
dec
scas
repnz
adc
ret
xlat
jmp
mov
mov
scas
loope
jp
arpl
ret
add
push
insb
cmp
jno
inc
dec
bound
push
icebp
cmpsb
bound
into
xchg
push
cld
inc
faddp
push
jne
les
les
pop
push
ljmp
lcall
lret
add
push
cltd
push
test
out
xor
or
rcr
or
jle
lcall
and
cmp
inc
sub
in
bound
mov
out
inc
hlt
jl
sub
sbb
sbb
outsl
inc
popa
add
pusha
xchg
scas
cltd
int
insl
fs
cmp
dec
dec
inc
imul
out
push
sti
cli
pushf
xor
ljmp
iret
mov
lock
arpl
aas
adc
jae
shll
movl
push
mov
xchg
add
cmc
loopne
push
fistpll
loop
out
adc
fstl
xlat
mov
cltd
clc
outsb
mov
out
iret
pop
stos
aad
insb
jmp
mov
idivl
adc
dec
fwait
jp
jae
je
lret
divb
pop
out
fimuls
pop
dec
repnz
ja
inc
scas
adc
mov
and
iret
subb
sbb
dec
addb
andb
jnp
daa
dec
and
shrb
cmp
testl
les
out
insb
xchg
mov
adc
xchg
jne
loopne
push
loopne
addr16
fs
test
lods
lret
arpl
inc
push
cwtl
sub
outsb
ds
dec
movsb
or
lea
jbe
push
arpl
push
and
jno
or
aam
sub
pop
clc
mov
and
sbb
pusha
addr16
ljmp
or
dec
add
cmc
xchg
pop
add
iret
and
mov
and
jae
ja
push
inc
mov
jno
jae
idivl
mov
imul
sbb
xchg
push
add
sti
fildl
jbe
mov
bound
pushf
int3
inc
pop
movsl
adc
clc
daa
lods
xor
sarb
sub
lcall
jg
jecxz
add
inc
jecxz
and
inc
jbe
sti
xor
data16
fwait
movsl
cmp
sub
popa
popa
ret
sub
ret
js
jb
lret
or
jmp
jno
cld
mov
test
sbb
dec
pusha
add
inc
jne,pn
out
xchg
sub
push
mov
sbb
add
mov
mov
stos
scas
idivb
mov
mov
rorb
jb
adcb
js
cltd
pop
xor
jnp
call
test
out
or
cltd
lret
adc
in
and
repnz
out
movsl
divl
jne
jge
pop
sahf
mov
xor
lods
cli
and
icebp
add
xchg
mov
loop
insl
jae
sahf
mov
jb
xchg
sub
sub
fdivr
sub
xchg
stos
inc
cmc
test
mov
dec
shll
cmp
jb
andl
pop
sbb
or
xchg
test
dec
mov
fwait
jb
push
in
adc
test
pop
lcall
jo
push
pusha
int
jge
int3
cs
jbe
jo
sti
call
mov
pop
dec
mov
ljmp
repnz
roll
jbe
sbb
pop
adc
mov
or
out
mov
push
pusha
push
adc
xchg
xchg
js
fiadds
cltd
out
fs
in
cmp
xorl
pop
pop
lods
cld
cwtl
das
cs
enter
jns
popa
push
lods
sbb
sub
mov
xor
packsswb
sub
fidivl
les
frstor
dec
mov
push
mov
push
push
and
push
cmpl
jbe
or
cli
lock
jo
cltd
and
mov
push
mov
sub
int
stc
sub
push
jge
fadds
xchg
aaa
stos
iret
test
xchg
dec
ret
les
aam
pop
in
stos
cmp
lea
movsl
mov
lea
std
ret
out
outsb
and
sbb
imul
test
ficoml
xchg
mov
iret
jg
xorl
pop
cmp
adc
repz
popa
sub
jl
scas
in
and
ja
mov
jl
jno
sub
mov
cmpsl
loope
pop
sahf
sbb
out
add
adc
xchg
push
push
popf
jb
pop
ror
push
pushf
adc
call
inc
sbb
inc
pop
xor
loope
data16
add
repz
inc
inc
pop
dec
mov
loope
sub
or
mov
add
fs
and
push
push
inc
std
mov
call
inc
inc
outsb
fsubrs
push
mov
push
dec
imulb
test
repnz
enter
xchg
sub
bound
inc
dec
dec
dec
loop
sub
in
dec
pop
test
push
js
add
pop
popf
hlt
jp
es
int
adc
or
push
pop
fimuls
pop
xor
and
and
cmp
push
and
sbb
lods
ds
cwtl
pushf
or
scas
add
mov
loope
fcompl
sarb
add
lds
sti
iret
jb
sbb
jmp
test
sahf
sub
incl
sbb
xchg
jne
jbe
inc
mov
and
lcall
loop
iret
push
add
call
and
and
js
test
sub
test
sbb
jae
mov
mov
add
out
pop
lahf
push
sbbl
cmpsl
cmp
cwtl
ljmp
xchg
rorl
mov
int
mov
int
daa
arpl
out
std
cmp
mov
xor
stos
jns
rol
lret
mov
rcll
pop
rolb
bnd
and
testl
mov
and
add
decl
xor
mov
daa
test
stos
jmp
mov
cli
jge
imul
clc
aas
dec
and
fsubrs
cmp
dec
inc
fiaddl
mov
fdiv
test
mov
cltd
outsl
loop
das
dec
decl
cmp
rolb
mov
out
add
jae
aaa
cmp
push
mov
mov
and
ret
test
ds
adc
jmp
cmc
or
xor
imul
loop
add
xor
loope
mov
pop
adc
and
jbe
in
xor
mov
ret
in
mull
mov
xor
pop
mov
xlat
in
mov
cmpb
out
out
fwait
or
jo
xor
xor
cmpsb
xchg
movsb
pop
mov
or
sahf
sub
xor
adc
ss
call
cmp
dec
imul
or
push
testb
sbb
mov
movsb
and
test
repnz
push
sub
nop
lcall
imul
rcrb
add
ficoms
push
mov
ja
fs
or
je
sub
push
outsb
les
jne
insl
leave
jo
fsubrs
add
push
lret
push
sbb
or
cmp
jl
push
repnz
cmp
add
push
aas
movsb
xlat
pop
cmpsl
jp
stc
sub
test
stos
mov
cmp
test
mov
push
adc
push
dec
addl
lret
ss
lds
test
mov
ret
sub
jp
dec
cld
in
jecxz
sbb
push
cmp
xchg
clc
mov
pop
outsb
sbb
je
rcrb
mov
fsubrp
fisubrl
das
xchg
mov
mov
stos
sbb
mov
jns
and
data16
cwtl
inc
or
xlat
mov
add
mov
mov
adc
mov
push
push
fs
jne
cmp
sti
loopne
scas
cmc
mov
fsubrp
test
fidivrl
jns
in
add
js
lods
and
dec
inc
fdivrl
and
imul
rcrb
add
xchg
add
adc
cmp
in
testb
jl
add
sbb
and
xor
mov
adc
push
dec
pop
xor
pop
mov
ss
in
rcrl
or
mov
xor
fcoml
stos
mov
cmp
adcl
push
popf
stos
leave
data16
into
jo
rclb
fnstenv
push
nop
daa
xchg
sbb
rorl
fs
jae
rcrb
sub
adc
fcoms
sbb
dec
and
sahf
loop
outsb
inc
dec
ds
in
adc
add
aaa
jl
mov
leave
pop
inc
data16
xchg
jne
stc
cmp
jno
xchg
cwtl
jnp
inc
push
out
movsl
outsl
push
xlat
pcmpeqw
jl
or
jmp
outsl
shll
sbb
pop
xchg
mov
jb
mov
mov
mov
xchg
aaa
repnz
inc
popf
add
cmp
mov
cmp
and
std
cmpsl
sub
push
aad
pop
or
mov
xor
shrb
decb
cmp
outsl
insb
jmp
out
and
sbb
mov
inc
push
out
mov
pop
sub
adc
lock
mov
aad
xchg
push
ret
sbb
xchg
das
dec
inc
pushf
je
fisubs
add
lods
test
mov
or
pusha
jle
mov
cmp
and
loopne
inc
sub
jnp
inc
add
dec
cs
fmull
es
push
sub
ss
js
push
adc
popf
pusha
jmp
add
pop
sub
outsb
sbb
xor
shrl
push
push
push
call
imul
pop
in
lea
imul
jb
je
test
cmpsb
or
push
cmp
insl
jb
push
mov
pop
popa
or
dec
sub
inc
pop
push
sub
stos
pop
test
and
and
aad
stos
inc
divb
push
sub
lret
sub
mov
and
jg
adc
stos
add
xor
mov
ficoms
test
shll
aad
mov
sub
cmp
or
inc
mov
into
pop
out
push
add
repnz
cmp
sbb
fsubrs
cmpb
addr16
cmpsb
push
push
aad
jp
inc
cmpsl
adc
lea
adc
bound
pop
mov
xchg
loope
ds
add
fwait
push
sub
fs
and
mov
or
push
cmp
sti
push
outsl
push
popf
mov
jge
pop
jbe
add
sarl
adc
xor
js
sub
insb
sub
pop
pop
dec
push
jp
dec
gs
test
mov
push
divl
push
leave
js
adc
orb
xor
ja
in
sub
sub
insl
cmc
pusha
jl
dec
inc
pusha
je,pt
rcrb
jmp
mov
pop
mov
js
cmp
shll
cmp
mov
lea
fists
push
sub
cmp
jmp
iret
es
and
mov
push
mov
xor
jecxz
pusha
xor
mov
or
xchg
jle
sub
cltd
sbb
sbb
test
dec
out
enter
jns
in
pop
mov
pop
mov
pop
rcl
stc
pop
pop
add
xor
lds
leave
lret
mov
fidivl
xchg
dec
jmp
fiaddl
and
or
stos
dec
xchg
sbb
lock
pop
addr16
add
int3
and
sbbb
pop
orb
push
fnsave
gs
bound
or
and
movsb
hlt
mov
mov
adc
push
cli
and
repz
push
bound
xor
xorl
push
add
xchg
pushf
daa
xchg
out
mov
mov
ret
mov
mov
push
xor
fcompl
ret
js
test
cld
push
addr16
sbb
cld
jae
push
out
add
adc
inc
push
movsb
repnz
clc
pop
push
jae
xchg
adc
xchg
movsl
cmp
cld
aad
xor
push
jns
sub
pop
stos
dec
popa
neg
stc
mov
add
mov
jb
dec
sub
xchg
mov
dec
sbb
aad
rorl
jne
mov
xor
cmp
pop
push
jge
sahf
outsl
addl
andb
rorl
icebp
test
lret
xorl
pop
and
idivl
dec
rcl
cmp
popa
jecxz
dec
fadd
sub
clc
stc
mov
fstl
shr
dec
lods
or
pop
mov
or
add
iret
repnz
lret
test
adc
and
mov
inc
sbb
testb
sub
imul
push
xor
mov
pop
xchg
lods
add
sbb
scas
cmp
andl
daa
xor
ficoms
pop
out
lret
xchg
icebp
mov
fucomp
adc
sbb
xchg
call
add
mov
lcall
inc
xchg
negl
and
inc
mov
dec
cmpsl
add
imul
pop
jnp
xor
cmp
dec
add
xor
mov
mov
xchg
roll
push
repz
shlb
dec
pusha
push
jnp
out
dec
pop
add
in
addl
mov
pop
jns
les
cltd
pop
test
out
xchg
std
lret
mov
mov
movsb
repz
fs
sbb
jle
sbb
mov
inc
lods
filds
movsb
dec
sti
dec
lahf
cmpsl
sahf
lcall
pop
ja
or
cmc
nop
add
xchg
push
cmp
mov
notl
sarl
xor
fidivs
or
fldt
test
sbb
jg
mov
icebp
daa
inc
loopne
leave
loope
fstp
insb
jmp
aam
or
std
add
stos
inc
xchg
pop
inc
push
mov
cmpsb
shl
or
mov
adc
xchg
pop
fistpll
pop
mov
jns
pop
sbb
testb
int
out
push
pop
cmp
insb
rorl
andl
dec
gs
mov
call
xor
fcoms
loopne
sub
xor
dec
pop
arpl
jecxz
jge
dec
scas
lea
std
cli
adc
out
xchg
mov
addr16
dec
jg
jnp
cli
pop
jnp
lcall
xor
data16
rol
dec
push
xor
popf
pop
rcr
je
xor
movsl
mov
sbb
in
js
bound
lret
jmp
push
push
mov
xchg
aad
int3
orl
stos
add
mov
inc
loopne
mov
or
mov
testl
push
pop
xlat
push
stc
xlat
cmc
insb
decl
and
iret
cmp
push
lahf
push
mov
imul
daa
iret
rorl
xchg
das
ljmp
pop
jg
xchg
mov
adc
mov
or
test
in
aaa
mov
data16
dec
clc
adc
scas
add
sub
fwait
jo
jle
add
push
cmp
test
lock
xor
lods
out
out
sarb
imul
mov
mov
repnz
call
ds
adc
mov
rcrl
and
gs
add
sbbb
scas
or
mov
or
mov
mov
xor
dec
fidivrs
cmp
sub
daa
addb
add
cmp
sub
shl
add
ja
and
xor
mov
or
sbbl
std
mov
repz
ja
xchg
dec
add
push
mov
push
aam
nop
pop
cmp
xchg
js
cmpsb
and
adc
or
mov
or
sub
or
aas
pop
out
cmpl
mov
mov
call
dec
add
jbe
or
gs
fbld
jle
enter
lea
xchg
iret
dec
movsb
jbe
mov
cmp
aaa
mov
sub
xchg
cmc
xchg
leave
in
pusha
sub
dec
adc
mov
xlat
dec
pusha
and
push
loop
into
adc
jl
ud1
data16
ret
mov
cwtl
das
dec
mov
repnz
pop
loope
sbb
adc
mov
pop
mov
inc
les
stos
jae
pop
dec
roll
pop
in
clc
enter
repnz
das
addr16
loope
mov
pop
dec
push
jno
jl
inc
sub
pop
cmp
push
inc
push
mov
jne
mov
or
in
das
pop
stos
push
std
and
mov
mov
fwait
out
mov
adc
pop
push
clc
out
sub
movsl
sbb
loopne
dec
mov
pavgw
sbb
add
cs
imul
mov
subb
fs
adc
xor
push
jae
scas
in
pop
jmp
in
insl
jmp
fisttps
dec
mov
test
jo
dec
xor
aad
lcall
sbb
and
stc
je
iret
jnp
in
mov
dec
and
xchg
jmp
push
push
in
lahf
sub
pop
shlb
fstpt
cmp
ss
fnstenv
testb
fwait
xor
jnp
pop
xor
inc
dec
les
jae
clc
and
jl
mov
out
mov
push
fs
lcall
inc
clc
xor
ja
xchg
and
xchg
sahf
and
xchg
mov
mov
jb
ror
pusha
imul
push
stos
sti
jne
bound
notb
pop
in
enter
outsb
cmp
pushf
divb
inc
popa
pusha
movsl
push
mov
mov
cmp
xchg
jmp
dec
and
mov
andb
cltd
aas
arpl
xchg
popa
ja
repnz
inc
call
and
cmpsl
push
add
dec
xlat
push
outsl
mov
lock
dec
jae
clc
mov
fwait
das
xchg
xor
popf
popf
cli
daa
aad
and
pop
scas
cmp
ja
sub
out
repz
rol
sub
jno
cld
sub
test
fldt
js
sbb
jle
ret
and
shrb
rorb
mov
mov
dec
inc
jmp
gs
mov
xchg
mov
dec
aad
movsl
jo
add
pop
insb
adc
mov
lods
inc
test
stc
fmull
add
cmpsb
mov
mov
lea
push
push
daa
orb
xor
mov
mov
lods
das
jnp
repz
fstps
pusha
les
out
lds
lea
jecxz
lods
cltd
test
push
testb
pop
xchg
and
dec
stc
and
outsb
cs
loopne
cmpsl
inc
push
mov
adc
jl
add
dec
flds
sub
pushf
repnz
cmpsb
mov
inc
fldcw
sbb
inc
fldl2t
jg
push
mov
bound
fwait
sbb
rorl
cmp
shrb
dec
test
js
fwait
or
lods
and
sub
ljmp
mov
sbb
inc
das
cmp
pop
or
add
mulb
sbb
in
decl
fsubs
dec
sub
jbe
mov
imull
mov
add
cmp
ret
ret
mov
sar
add
cmpsl
hlt
cmp
push
inc
arpl
push
cmp
push
xchg
inc
mov
test
cs
inc
xor
cltd
add
mov
xor
dec
and
add
outsl
shl
imul
adc
jmp
sbb
and
fcom
popa
or
sbb
xor
adc
push
jbe
mov
cmp
in
and
cmc
pop
insl
and
push
cltd
js
sbb
jp
sarl
add
ss
jno
out
sub
lcall
test
mov
push
int3
add
lret
pop
jo
adc
cs
ja
push
dec
cs
bound
stc
mov
sub
dec
xor
pop
push
in
mov
movsb
aas
fstps
clc
or
xor
jo
rolb
xor
popa
sub
xchg
pusha
int
xchg
inc
jmp
cld
icebp
fwait
cmp
ret
and
jmp
out
inc
pop
push
ja
dec
xor
popf
ss
shrb
test
jg
hlt
movsl
sbb
inc
bound
pop
pop
and
sar
lret
cmp
cmp
mov
mov
fsubl
pop
pop
outsl
aas
orl
imul
or
mov
stos
rorl
insl
cmp
imul
inc
mov
inc
cmp
enter
push
sbb
mov
mov
in
mov
jmp
mov
or
out
jp
addr16
mov
xchg
xor
mov
and
shlb
fidivrs
out
test
xchg
mov
int
and
sahf
xchg
inc
in
jmp
daa
mov
inc
push
mov
cltd
test
bound
push
leave
fldl2t
sbb
jp
pop
inc
inc
mov
mov
xor
pop
roll
icebp
sbb
push
add
jns
int3
dec
ja
dec
mov
jl
in
and
push
int3
inc
stos
outsl
push
mov
ja
cmpsl
mov
xchg
cmp
dec
gs
or
adc
mov
jno
loopne
xor
adc
shl
xchg
movsl
cmp
gs
vcvtss2sd
pop
shll
in
jl
fistpll
push
mov
mov
xor
dec
pop
cmp
sbb
xor
mov
xchg
mov
pusha
imul
stos
mov
push
or
bound
sti
scas
xchg
mov
into
repz
pop
dec
push
jno
xlat
adcb
or
jb
cmpsb
cmpsl
sti
jbe
mov
mov
sub
xor
das
mov
mov
and
or
je
ss
jle
jmp
clc
dec
fwait
es
loopne
ja
incl
adc
mov
lret
bound
mov
add
cmp
test
roll
test
mov
mov
fistpll
dec
xchg
aam
sbb
inc
popa
xor
sar
push
adc
or
dec
stos
jle
push
add
fdivl
xchg
mov
and
inc
sbb
or
mov
and
mov
ja
inc
stos
sbb
add
outsl
jb
hlt
sub
pop
in
aas
sub
aad
call
test
inc
dec
cmp
aad
bound
and
cmpsl
fildll
leave
mov
pusha
xchg
mov
adc
lods
xchg
movlps
cmp
push
push
jmp
pop
aad
cwtl
test
int3
mov
mov
loopne
mov
pusha
push
mov
sarb
jecxz
dec
std
or
dec
sub
xor
mov
lods
and
push
cmpsb
insb
add
outsl
add
in
cmpsl
pop
out
lahf
xchg
push
in
sub
dec
cmp
cmp
or
dec
mov
pop
divl
ret
jle
or
hlt
dec
aad
jg
pop
xor
add
push
leave
xchg
testl
daa
jge
push
adc
pop
push
in
xchg
aaa
jle
jne
jae
push
or
inc
jne
imul
in
lea
and
pop
aaa
mov
cmpsl
lret
lods
movsl
mov
mov
sbb
or
decl
ret
and
in
dec
jnp
sbb
jle
cltd
test
mov
enter
and
repz
push
mov
rclb
daa
stos
repnz
pop
push
je
test
mov
xor
jae
stos
leave
pop
mov
sbb
push
out
mov
xchg
sub
adc
addb
xchg
sub
shrb
add
mov
push
mov
and
cli
or
push
pop
idivl
mov
rolb
fisubl
sbb
push
add
mov
xor
jmp
dec
sub
and
and
cwtl
fs
push
je
sahf
and
xchg
mulb
dec
mov
push
dec
adc
leave
adc
push
sar
adc
push
int
pushf
push
je
adc
sub
mov
or
xchg
jge
popf
das
int
lods
stc
je
inc
cmp
fnsave
leave
or
dec
test
push
jmp
mov
push
cltd
into
sarl
fcompl
daa
lret
movsl
jecxz
adc
mov
fdivl
leave
push
imul
push
jno
shrl
inc
mov
and
rcrl
jb
xchg
nop
out
mov
ss
pop
stos
popf
outsl
push
fmuls
mov
repnz
aad
inc
lret
cld
or
insb
cwtl
scas
inc
fnstsw
lret
bound
or
adcb
xchg
outsl
jg
jecxz
or
push
shrb
and
pop
mov
ss
lcall
push
sub
ljmp
sub
pop
push
add
js
cmpsb
jp
mov
fnstcw
jbe
xor
imul
dec
or
das
or
aas
mov
roll
movsl
sbb
lock
jb
es
out
lea
sbb
inc
shlb
ret
or
sbb
cwtl
pop
mov
sub
mov
pop
insl
pop
aas
repz
sub
mov
mov
arpl
jge
scas
leave
mov
ja
adc
jo
push
add
xlat
inc
into
fadd
jmp
dec
cmpsb
inc
pusha
inc
call
xchg
jge
fisubs
push
jp
repz
xor
idivl
test
mov
out
cmp
sti
fiaddl
mull
push
arpl
pop
mov
in
out
sub
cmp
lea
pop
gs
adc
dec
lods
movsl
cmp
jmp
ret
popa
popf
sarl
inc
push
or
mov
add
rol
testl
xor
or
aaa
mov
pop
filds
jge
adc
xchg
or
fldt
movsb
pop
out
mov
mov
divl
mov
aam
outsb
ret
test
dec
out
rcrb
and
push
dec
cmpsl
jmp
push
fisttps
lret
out
sarl
test
pop
dec
das
cmp
jg
repnz
adc
aad
addb
jle
sbb
cs
repz
out
in
jne
in
add
test
gs
mov
adc
das
xor
push
popl
mov
jg
pushf
lods
fidivl
mov
dec
and
jmp
mov
ss
insl
push
add
or
decl
repz
cmp
xchg
adc
xor
xchg
test
inc
sbb
lds
aad
shr
push
repz
scas
mov
mov
mov
cmp
adcl
sub
mov
fists
stos
shlb
or
outsl
xor
cmp
sub
mov
rorl
and
fwait
bound
test
add
xor
jne
lods
sub
stos
in
jp
fdivl
mov
push
mov
mov
fisttpl
stos
inc
enter
push
or
lret
mov
stos
inc
push
jnp
cli
mov
mov
inc
mov
push
mov
out
sti
mov
mov
mov
pop
pop
repz
in
lods
xchg
inc
std
movsb
sub
sub
nop
test
cwtl
je
mov
and
rcrl
pop
jno
insl
sub
push
xlat
aas
aad
xchg
adc
push
xor
bnd
dec
push
loopne
and
adc
imul
jle
stos
xchg
sbb
or
push
dec
jne
mov
jp
jge
test
mov
ljmp
les
fcmovne
ret
out
sbb
test
add
xchg
addr16
or
sub
int3
out
jp
divb
lds
bound
push
sbbb
and
jge
test
je
icebp
mov
mov
cmp
aam
je
mov
push
mov
jl
ss
pop
cmpsb
inc
cmp
jmp
sub
jns
cmpsb
or
mov
fldenv
mov
js
frstor
dec
pop
ret
out
mov
dec
out
push
adc
adc
jp
scas
stc
mov
addr16
and
shll
stos
cmpsl
cs
xor
fmul
call
adc
xor
xchg
cmc
or
mov
adcl
adc
xor
sbb
fcomi
dec
test
add
in
test
aaa
mov
cmc
cwtl
mov
mov
sub
les
aam
in
mov
mov
jb
xor
lods
and
cmp
jns
pop
mov
aad
push
ret
bound
sub
mov
addr16
push
xor
xor
mov
loopne
mov
mov
imul
mov
dec
dec
hlt
in
repnz
rcrb
testl
jns
mov
add
sti
int3
and
push
cltd
dec
add
stos
ret
jnp
mov
sub
jne
pop
test
pusha
mov
lret
outsl
sti
adc
push
cmp
gs
inc
in
mov
addr16
fs
pop
hlt
inc
sbb
xchg
in
mov
or
sbb
es
and
rcl
mov
enter
pop
lock
inc
repnz
iret
push
cmp
inc
pop
xchg
add
pop
test
inc
pop
and
in
push
jmp
movsl
addr16
leave
jnp
sub
mov
and
xor
addl
dec
add
jp
or
iret
mov
sti
sbb
cmp
out
icebp
or
cmp
xor
push
push
scas
jnp
rolb
xor
pusha
or
out
mov
int
clc
mov
icebp
mov
jne
lods
xchg
leave
inc
insb
sub
inc
dec
sbb
or
incb
adc
ds
sti
pop
fcomps
add
xchg
in
fidivrl
xchg
push
inc
lds
mov
das
xor
mov
sbb
jo
cld
xor
mull
loopne
sub
lcall
jmp
mov
test
push
test
push
xchg
popf
jl
js
scas
lahf
ss
mov
mov
or
sbb
mulb
subb
xchg
adc
outsb
mov
xchg
add
or
cmp
jb
ja
call
stos
cwtl
scas
out
bound
imul
sar
cwtl
mov
nop
jmp
stos
dec
and
shrl
fwait
stc
or
mov
pop
ret
push
or
stc
popf
in
popf
jl
xor
push
lcall
adc
mov
sahf
popa
inc
stos
cmpsb
stc
outsl
jge
mov
pop
pusha
loop
xchg
inc
je
jmp
iret
gs
mov
movsl
imul
or
add
pushf
mov
mov
xlat
cmp
add
sub
out
cmp
and
pop
adc
dec
rorb
lret
and
aaa
lods
jmp
faddl
rorl
add
adcb
test
xor
pop
jnp
cmp
push
xchg
rcl
inc
mov
in
movsl
pop
mov
std
in
test
pop
adc
lret
push
pop
in
test
lret
xor
in
xchg
punpcklbw
movsl
add
scas
das
push
sbb
call
or
ficoml
inc
outsl
jne
lahf
test
insl
fwait
sub
mov
das
pop
inc
cmpl
xor
popa
pop
jbe
icebp
in
sbb
and
mov
jp
sub
xor
loopne
arpl
sbb
leave
pop
cmc
pop
mul
inc
jo
mov
mov
mov
scas
jae
loope
aaa
arpl
sub
lahf
filds
mov
sub
pop
call
and
cmpsl
mov
bound
dec
ljmp
mov
push
pushaw
xchg
lret
test
jo
aaa
jbe
mov
pop
mov
pop
std
jb
jmp
cmpsl
addl
jge
add
mov
or
shrb
sbb
mov
adc
sub
add
add
or
mov
dec
cwtl
psadbw
int3
mov
add
sbb
jnp
sbb
iret
data16
mov
jl
test
push
repz
pop
lock
movsl
scas
popf
dec
mov
data16
jo
sbb
aam
lds
leave
shlb
xchg
sub
mov
push
sti
dec
sbb
iret
jns
inc
repz
test
and
js
out
ljmp
out
xor
outsb
push
call
aaa
xchg
outsl
inc
inc
pop
inc
fcoms
mov
imul
xor
std
fnstcw
lret
or
push
mov
and
daa
cmpsb
idivl
stos
mov
rcrl
adc
std
sub
cmp
int
pop
mov
jo
movsl
mov
sub
cmp
loope
jbe
mov
cmp
mov
decb
push
ljmp
icebp
int
imulb
cmp
clc
push
out
sub
outsb
loope
inc
rcrb
mov
sbb
cli
mov
mov
es
pop
or
pop
out
jl
mov
add
fdivl
fbld
adc
jb
lods
sbb
into
push
pop
and
dec
and
lds
and
push
insb
ja
sbb
mov
xor
rolb
bnd
in
mov
cli
fildll
xlat
sbb
mov
cli
and
movsl
push
sbb
mov
loope
and
fisubs
inc
dec
xor
js
inc
jbe
adc
imull
jmp
mov
pop
jmp
dec
sbb
push
ljmp
cmp
fbstp
pusha
pusha
adc
leave
pop
push
popl
adc
repz
xchg
clc
adc
subl
mov
jae
sub
andl
jg
rolb
cmpsl
flds
pop
cli
sbb
addr16
out
add
dec
jno
jbe
ja
insl
andl
xchg
jne
push
adc
fcmovbe
dec
add
icebp
popa
addl
icebp
mov
sbb
dec
mov
call
decb
sbb
add
cmp
and
mov
cli
xor
mov
lret
test
fucomip
xor
push
push
pop
adc
cmpps
push
jmp
ljmp
cmp
push
fidivrl
dec
add
ficomps
sub
sub
sar
push
out
cmc
add
xchg
dec
dec
test
jmp
push
sub
xchg
popf
xor
orb
push
cmp
test
leave
and
inc
inc
adc
shrb
xor
lret
sub
inc
adc
sbb
fsubrs
xchg
sbb
push
inc
es
imul
lods
mov
mov
mov
icebp
cmp
mov
cmp
ret
lods
test
fcoms
mov
sbb
or
cmp
divl
stos
enter
int3
add
mov
mov
cmp
in
pop
xor
mov
sub
daa
jno
dec
mov
clc
adc
adc
fisttpll
fstl
leave
ret
add
cli
and
mov
dec
fsub
lea
les
sahf
push
pop
cmc
push
mov
in
lahf
nop
adc
mov
push
pop
mov
lock
or
xchg
ret
jge
and
call
adc
pop
hlt
mov
fwait
idivl
sub
xor
add
xchg
out
sub
push
icebp
or
lret
pop
subb
inc
sub
frstor
repz
xor
pop
mov
add
push
adc
pusha
sbb
inc
and
mov
ror
cmpl
ds
es
xchg
xlat
sub
std
mov
xchg
ds
inc
fdiv
mov
xchg
sbbl
adc
inc
data16
xor
inc
sbb
es
subl
ja
sbb
shll
inc
aam
pop
icebp
or
dec
addl
dec
mov
popf
cmpsb
jbe
and
inc
pop
movsb
in
ret
shll
mov
arpl
xor
lahf
mov
mov
mov
xchg
clc
cmpsl
sub
mov
jnp
data16
jne
ljmp
xchg
mov
sbb
gs
hlt
mov
push
adc
jb
lea
mov
pop
or
pop
inc
jne
sar
out
imul
rcrb
addl
daa
and
pop
xchg
clc
imul
fdivl
mov
xor
pushf
std
mov
mov
lock
imull
dec
pusha
mull
push
jl
pop
inc
shrb
fldl
lock
in
clc
dec
dec
mov
jmp
inc
push
dec
fcoms
idivl
daa
nop
or
cwtl
inc
jnp
xchg
fistl
or
adc
lea
ficomps
stc
jno
mov
inc
fmuls
jmp
push
lcall
bound
adc
jmp
int3
pop
ficompl
lcall
icebp
mov
sbb
xchg
mull
ret
pushf
movsl
xor
fwait
jbe
sub
mov
outsb
std
int
jno
fsubrs
xchg
test
ret
in
loop
sbb
and
xor
icebp
insb
es
mov
xchg
movsl
loopne
push
adc
inc
jecxz
outsb
dec
loopne
mov
pop
sub
lods
mov
out
int3
mov
xor
popf
jo
andb
mov
pop
mov
lahf
rorl
cmp
inc
dec
adc
pushf
mov
ljmp
push
jae
mov
cmp
ret
cmp
test
sbb
mov
push
lea
jne
mov
movsl
test
mov
fidivrl
shlb
faddl
add
insl
adc
test
and
xor
sbb
hlt
jge
mov
shll
addr16
and
cli
mov
sub
lds
pop
or
insl
cmp
fdiv
pop
lods
inc
dec
or
mov
cmp
enter
jge
adc
std
outsb
stc
inc
aad
inc
pop
sbb
jmp
mov
xchg
test
ja
or
loop
into
fdivrl
add
aad
repnz
xor
cmpsl
popl
add
sbb
insb
cmp
jns
dec
mov
mov
loope
cwtl
sbb
jp
pop
movsb
push
in
js
clc
cmp
insl
sbb
dec
pop
cmp
ret
dec
sub
push
hlt
jnp
push
inc
jmp
mov
sbb
add
loopne
push
insl
mov
leave
jecxz
mov
mov
push
mov
adc
inc
mov
sbb
xchg
ja,pt
outsl
mov
mov
lret
in
xor
outsb
stos
cmp
out
ljmp
pop
stc
or
ror
xchg
sub
imulb
out
repnz
aam
mov
imulb
or
test
aad
ret
cmc
ss
inc
push
mov
xchg
cmpsl
ret
fbstp
xlat
loop
nop
ja
pop
xor
add
imul
add
jns
ljmp
mov
mov
jo
out
es
inc
in
and
xor
xchg
outsb
lret
adc
pop
or
inc
bswap
outsl
xchg
aas
push
div
aaa
mov
mov
filds
mov
cmpb
mov
add
pop
xlat
data16
and
and
push
stos
and
inc
stos
or
xchg
rol
mov
pop
dec
mov
jecxz
mov
ljmp
inc
aad
xor
mov
push
rorl
popf
adc
bnd
aas
push
je
jne
push
in
xchg
js
test
and
mov
mov
push
repnz
cmp
or
outsb
pop
dec
add
stos
dec
pop
loop
nop
mov
xchg
lcall
scas
mov
lods
mov
push
pop
movsl
test
mov
orb
loop
ja
push
lods
push
fdivl
inc
xchg
xor
push
lods
and
mov
xor
jne
imul
dec
push
mulb
mov
test
jge
push
imul
sbb
sbb
movsb
adc
daa
cmpsl
call
cs
testl
mov
and
mov
popf
sbb
sub
xchg
add
into
mov
test
push
and
and
dec
pop
call
loop
andb
cmp
cs
jecxz
cltd
xchg
inc
cwtl
stos
cltd
test
and
ja
ss
cli
push
xor
divb
test
adc
sbb
ds
dec
lcall
fcomps
adcl
mov
scas
mov
push
arpl
mov
movsl
out
js
jl
jmp
test
adc
stc
mov
cmp
and
sub
sbb
decl
mov
and
in
insl
inc
dec
aas
dec
mov
fwait
pop
sub
insb
pop
mov
push
lret
sbbl
cli
arpl
rclb
jb
or
imul
dec
test
cmpsb
shll
pop
imul
mov
clc
cwtl
push
mov
dec
rcr
into
pop
scas
out
adc
sbb
jne
lods
and
leave
enter
pusha
push
sahf
aam
in
sub
jns
jp
push
mov
pop
jnp
mov
daa
and
sbb
iret
xor
fs
cmp
and
sbb
popa
or
jnp,pn
xlat
dec
shl
jg
dec
test
pushf
inc
mov
psrad
push
outsb
movl
push
mov
addr16
jge
inc
adcb
leave
push
sbb
iret
rclb
out
arpl
cmpsl
xor
arpl
push
xchg
mov
dec
shll
shll
or
outsb
mov
xchg
mov
insb
mov
js
jl
inc
popf
loope
imull
xor
test
mov
mov
ljmp
jle
cmpsb
pavgw
jb
pop
movsb
push
popa
xor
adc
les
cli
xchg
in
mov
test
sbb
sub
jns
dec
add
jns
in
bound
mov
pop
inc
ja
jb
adc
mov
inc
mov
inc
adcb
ljmp
sbb
mov
cmp
lea
mov
std
in
sbb
scas
dec
std
and
pop
mov
fucomp
inc
xchg
dec
cmp
xchg
sub
daa
pop
ja
inc
arpl
ja
out
popa
add
jne
jmp
mov
or
mov
jl
jle
insl
insb
push
stc
xor
fildl
cmpsb
mov
ss
adc
lds
es
jo
mov
fistl
mov
xchg
cs
pop
test
push
call
push
cvtdq2ps
pop
jae
hlt
cmp
arpl
lahf
bound
fwait
xor
cmpsb
mov
jge
cli
dec
divb
or
and
jns
xchg
outsb
movsl
mov
add
push
xchg
pop
shrb
ficoms
inc
popf
adc
xchg
scas
jp
mov
in
cmovle
rorb
in
shrb
imul
push
sub
das
sbb
inc
inc
pop
or
psubd
xchg
jbe
mov
jp
cld
lcall
movsl
int
in
cmpsb
adc
xor
js
daa
outsl
out
hlt
mov
mov
xchg
push
cmp
fcmovne
cwtl
arpl
movsb
jecxz
xchg
into
gs
loope
lret
loope
xchg
mov
mov
test
and
or
xor
movsl
arpl
mov
mov
dec
mov
pusha
adc
push
xchg
iret
jns
loopne
fldcw
sbbl
cmp
or
out
mov
mov
mov
std
push
out
or
jge
mov
addr16
dec
mov
mov
mov
leave
imul
jo
out
sbb
pop
cmp
pop
inc
cmp
xor
jg
imul
inc
push
dec
ret
jo
pusha
negl
pop
jge
sbbl
aas
leave
nop
je
nop
rorl
adc
ss
jno
js
xchg
and
out
out
cmp
aas
push
in
outsl
and
push
fcmovnbe
xor
sub
shll
lahf
aam
xor
adc
leave
or
scas
xchg
jmp
inc
mov
push
cmp
sub
loopne
pusha
divl
fwait
dec
dec
or
push
pop
dec
shrl
scas
inc
cmp
lock
push
jno
outsl
movsl
jg
adc
add
cmc
aam
jmp
sbb
aad
imul
aaa
dec
push
mov
sar
test
and
cmovbe
or
out
inc
ficomps
out
xchg
inc
cmc
faddl
push
mov
xor
stc
js
push
mov
pop
push
in
fs
sbb
mov
jae
subl
pop
outsb
icebp
ret
or
int3
out
loopne
mov
int
rorl
sti
das
xchg
adc
dec
adc
jmp
adc
pop
mov
inc
popa
and
out
mov
push
xchg
sub
jns
ds
outsl
test
shrl
roll
push
pop
outsb
outsb
mov
xor
inc
xchg
pop
jnp
testl
dec
aad
insl
jle
stos
mov
test
push
dec
into
ficomps
imul
dec
loop
enter
out
mov
cmpl
cld
cld
loopne
sub
sti
cmp
popf
out
pushf
shr
jecxz
insb
in
cld
xchg
pop
xchg
sbb
dec
jle
daa
pusha
js
out
shlb
xchg
and
mov
sbb
or
sub
inc
scas
jg
imul
lcall
dec
mov
mov
and
sub
ss
insb
dec
add
mov
addb
push
lcall
pop
mov
inc
test
addl
or
mov
mov
jecxz
test
dec
jo
mov
call
repnz
shr
ficoml
shrl
mov
addr16
push
push
lea
jg
xchg
pop
outsl
mov
push
ja
jnp
aaa
les
fdivrs
hlt
pop
xchg
sbb
lds
mov
mov
adc
xchg
dec
mov
lcall
out
mov
dec
pop
bound
fdivp
shrl
sahf
sbb
orb
ret
jg
cwtl
daa
jl
or
mov
jae
or
jmp
fimuls
xor
xchg
mov
pop
lods
mov
dec
xchg
stos
add
xchg
cltd
insb
shll
xor
adc
jno
lret
sub
add
push
jmp
outsl
adc
dec
dec
es
stos
jp
ret
loop
lret
bound
mov
test
jbe
jecxz
leave
and
rcrl
pop
adc
imul
bound
xor
aad
push
das
push
mov
fs
xchg
jp
xchg
push
sbb
outsl
adc
mov
imul
adc
stc
sub
jg
sar
fwait
mov
pop
ficoms
das
adc
outsl
into
inc
stos
bound
fdivl
inc
addr16
xor
pop
xchg
sbb
fdivrl
dec
popa
ss
lock
movsl
aad
mov
decl
sbb
xor
cld
jecxz
fnsave
xchg
into
sub
js
lods
jb
out
and
jae
xor
fs
in
decb
shrb
adc
repz
cmc
mov
shlb
jp
arpl
mov
dec
jno
xchg
jcxz
fcmovbe
or
int
xor
scas
push
cmp
ret
push
test
sub
mov
daa
std
and
push
data16
cs
popa
je
daa
lcall
inc
cwtl
popa
pushf
daa
cli
inc
andb
jbe
gs
xchg
xchg
or
dec
hlt
lock
icebp
adc
lods
push
mov
sbb
jle
movsl
cmpsl
mov
cmp
and
mov
inc
inc
xchg
add
data16
movsb
xchg
push
mov
nop
push
xor
mov
jecxz
out
push
lods
stos
cmpsl
cli
pop
lcall
sub
inc
xchg
in
xor
mov
fisttpll
je
and
lahf
insl
stc
sub
xchg
jbe
hlt
mov
mov
pop
jns
xor
and
jns
dec
arpl
mov
lcall
push
cld
inc
push
cli
enter
ljmp
cmp
outsl
popf
nop
jae
adc
xor
mov
dec
cmp
mov
cmp
lock
loope
mov
dec
cmp
pop
xor
pop
cwtl
or
xor
lds
or
xor
xor
sub
aad
loop
adc
jl
sahf
imul
mov
xchg
and
push
ret
mull
cwtl
mov
mov
out
pop
push
mov
xor
xchg
pop
mov
push
xchg
push
add
lock
xor
outsl
xchg
lea
or
jmp
clc
lods
stos
mov
mov
push
jecxz
mov
mov
mov
or
outsl
nop
push
insb
jg
mov
mov
push
loop
or
push
call
fs
decl
imul
cmp
aad
pop
sahf
mov
in
mov
push
sub
sbb
into
mov
sbb
sub
xorb
rcl
mov
push
insl
push
jns
ja
sub
cmp
inc
aas
lock
dec
loope
out
pop
push
xchg
push
mov
adc
jp
test
sbb
push
pop
aaa
pop
adc
and
jmp
ss
mov
xchg
jg
insl
xor
mov
dec
sbbl
jb
out
fbld
xorb
mov
loopne
sub
mov
aas
jb
fistl
mov
mov
jg
push
and
cmp
mov
xchg
sbb
add
pop
test
gs
hlt
xor
imulb
sbb
dec
cmp
mov
push
imul
pop
enter
ljmp
mov
add
je
stos
push
fstl
daa
scas
sub
jno
sub
mov
push
sarb
push
xor
shrb
pop
xor
into
cmpsl
out
mov
lea
adc
movsb
sarl
sbb
xchg
mov
push
jno
xlat
stc
or
dec
jecxz
shlb
push
pop
mov
or
push
mov
lds
stos
push
jne
sbb
scas
mov
lahf
and
mov
sub
leave
push
das
push
stos
pop
inc
ja
imul
lods
outsl
adc
jmp
jno
rcrl
cmpsb
sub
xorb
leave
shrb
leave
push
xchg
outsb
sarb
xchg
push
sub
pop
mov
icebp
jecxz
dec
xchg
jne
fildll
fmull
scas
xor
mov
icebp
mov
nop
in
jle
and
popf
in
adc
in
std
lods
lahf
sbb
into
pop
mov
test
mov
subl
xchg
push
push
xchg
pushl
dec
insl
adc
jge
mov
sbb
inc
imul
lea
lds
xor
stos
aas
rcrl
addl
ds
ds
imul
sbb
push
mov
xlat
out
add
dec
sbb
mov
sub
and
in
call
xor
push
push
push
shrb
addr16
test
imul
sub
cli
dec
mov
iret
inc
popa
mov
pusha
xchg
mov
je
push
aas
mov
sbb
in
mov
jno
test
shll
mov
mov
fimull
subl
push
pop
pop
das
push
mov
in
and
adc
pop
sahf
push
jno
out
out
sub
inc
jno
fisubrs
inc
mov
lahf
lret
jle
inc
mov
sub
lcall
sahf
mov
inc
adc
loope
jl
and
jnp
adc
fldl
incb
mov
adc
mov
mov
ret
ja
fisubrs
xor
mov
or
mov
pop
and
xchg
daa
add
cltd
pop
mov
js
outsb
sub
lods
les
cltd
decl
in
data16
out
add
sbb
push
stc
out
cmp
jg
mov
lret
mov
imulb
popa
jns
sarl
sti
loop
mov
movsb
mov
stc
dec
mov
prefetcht1
xchg
negb
iret
arpl
inc
and
push
push
mov
xor
fbld
adc
ds
stos
icebp
push
test
pop
scas
jae
negl
aad
icebp
stc
dec
stos
push
jnp
inc
leave
jl
push
lock
fcmovu
and
and
inc
push
sub
sbb
push
adc
mov
cmp
fidivrl
cwtl
mov
and
leave
inc
jg
js
mov
push
shlb
adc
adc
adc
mov
movsl
icebp
push
out
int3
popa
cmp
ss
hlt
jo
in
mov
mov
push
dec
mov
aam
subb
loopne
imul
or
sbb
ja
test
adc
lret
lret
lcall
mul
inc
adc
lea
mov
jmp
fucomp
outsl
sub
inc
jne
sub
enter
popa
inc
shll
cmp
test
sbb
sub
and
add
int3
dec
loopne
les
arpl
fcomps
jmp
std
xchg
mov
cmp
jno
or
dec
mov
mov
pop
mov
pop
ljmp
jno
test
mov
loop
mov
dec
jae
repz
mov
enter
jbe
xor
dec
aam
jno
jmp
sahf
scas
and
loope
and
push
test
into
xchg
jmp
pusha
push
mov
imul
aad
push
xor
push
add
xor
aad
in
xor
lret
dec
call
mov
lea
fidivrs
sub
mov
sbb
dec
je
mov
push
mov
dec
lods
decb
pop
sbb
push
push
dec
lock
xor
divb
test
mov
xor
sbb
and
jge
sub
movsb
cs
cld
sbb
sub
aas
and
jle
pop
in
cmpsl
icebp
insb
hlt
into
fwait
js
leave
jmp
test
ret
dec
jecxz
pop
pop
sar
push
das
mov
add
mov
adc
add
push
das
leave
pop
and
inc
enter
stos
jle
inc
loop
inc
jbe
imul
or
mov
shrl
mov
pusha
out
je
jg
cld
ja
mov
jmp
xor
mov
push
fadd
push
test
pop
pop
cmpsb
std
gs
mov
popa
sbb
lods
lret
jb
out
andl
cmp
jmp
scas
or
add
int3
push
shlb
adc
jp
lock
je
jmp
imull
jne
lds
stc
sbb
xchg
test
inc
dec
pop
lods
xor
test
pop
std
das
xorb
adc
xlat
insb
ds
ja
sub
jo
xchg
mov
repnz
mov
jno
push
loopne
imul
mov
jbe
fdivrs
emms
roll
mov
cs
sub
mov
pop
cmc
int3
pop
sub
mov
sub
fnsave
mov
inc
pop
sahf
jp
movsb
mov
movsb
adc
bound
mov
dec
les
lahf
jbe
add
jge
dec
mov
dec
out
test
jmp
test
pop
and
rorl
mov
mov
add
ja
pop
into
sti
xor
ds
mov
loop
repnz
test
iret
insl
rorl
imul
mov
int3
data16
xchg
lret
iret
cmp
pop
in
jae
mov
and
dec
xor
xchg
cltd
dec
push
mov
push
lods
clc
dec
mov
jl
or
sbb
add
adc
sahf
loope
adc
push
or
leave
data16
jecxz
mov
orl
das
ret
in
movlps
out
ds
push
cmp
popa
ret
xchg
xor
mov
arpl
scas
jmp
xchg
pop
insl
push
inc
mov
cmpsb
and
andb
fs
inc
sbb
aad
out
mov
xchg
inc
sti
arpl
and
roll
dec
inc
sbb
or
push
jnp
add
mov
bound
inc
push
xchg
sbb
loop
pusha
push
sub
cmp
mov
sub
pop
out
ljmp
push
inc
adc
mov
outsl
jge
dec
and
hlt
js
push
and
add
out
cs
or
sbb
sahf
mov
mov
iret
outsb
aad
pop
arpl
into
sub
cld
fwait
mov
decl
lcall
xor
jno
mov
dec
or
clc
cmp
test
sbb
hlt
mov
mov
xor
sahf
add
mov
add
fdivs
mov
js
enter
mov
cmpl
push
jne
fsubrs
sbb
jecxz
nop
sbbl
movsl
std
insl
jecxz
cmp
orb
fst
div
adc
pop
push
scas
jbe
xchg
clc
xchg
mov
dec
add
jbe
xchg
ror
mov
fisttps
outsb
jecxz
fistpl
leave
xlat
or
jge
dec
sbb
out
inc
mov
mov
adc
push
dec
packuswb
jl
fstpl
dec
jne
aas
or
mov
out
andb
insb
cmp
mov
movsl
pop
mov
out
stos
dec
ficomps
xor
xchg
mov
fidivs
out
jl
push
out
jle
or
push
cmp
fwait
push
mov
arpl
in
xchg
add
aaa
mov
jne
lods
sub
adc
cli
jmp
mov
push
cmc
adc
add
sub
push
mov
aaa
sub
jbe
inc
mov
lahf
pop
pop
pushf
or
push
test
lds
mov
sub
lahf
push
mov
scas
xorb
out
lds
pop
sbb
mov
inc
cmp
jmp
inc
mov
cmp
mov
pop
idiv
shl
sbb
fisttps
std
lds
add
movsl
and
push
clc
adc
mov
subl
inc
sub
lahf
mov
ret
jne
fidivs
cltd
mov
mov
loope
dec
in
xor
and
mov
xor
push
clc
xchg
test
fbstp
stos
cmc
fldpi
stos
popf
or
adc
movb
scas
push
jno
and
stos
ss
in
stos
mov
push
mov
dec
sbb
scas
cmpsl
in
xchg
aas
fcoms
sub
jne
je
roll
icebp
xchg
in
mov
cmp
lret
mov
or
or
fcoms
xor
call
call
jge
mov
sbb
mov
fisubs
dec
pop
pop
inc
loope
mov
popa
xor
xchg
fstpt
xchg
call
mov
pop
or
push
aas
inc
mov
lock
sti
outsb
jge
loope
mov
jge
test
adc
inc
mov
jb
imul
push
and
jg
pop
xchg
pop
jne
pop
pop
cmpsl
xchg
ficomps
fnsave
jmp
bnd
int
dec
fs
cmp
je
icebp
dec
not
lods
adc
xor
jae
sbb
mov
test
lret
shlb
adc
xchg
pop
lahf
xchg
sub
xchg
mov
fisubrs
push
ror
ds
icebp
test
inc
sub
into
fisubrl
cmc
sub
fldenv
add
insb
xor
sub
cmp
sbb
ljmp
inc
in
jbe
xchg
cmpsl
jecxz
lock
fldcw
xor
or
xor
int
cmc
mov
ss
daa
in
fwait
push
shll
outsl
inc
lcall
adc
xchg
adc
push
jmp
or
mov
push
xor
fs
push
inc
bound
ficomps
ds
push
movsb
daa
test
sub
sbb
inc
test
dec
loopne
fwait
cmc
sub
push
add
in
push
roll
inc
movsb
cld
xchg
mov
fistpl
jnp
mov
loopne
xchg
mov
mov
adc
ss
push
push
mov
mov
scas
and
mov
test
jg
cmc
int3
nop
sahf
mov
cmc
out
sbb
ret
xor
stos
nop
hlt
fs
mov
add
cmp
out
sti
jg
out
ja
aaa
mov
dec
inc
inc
lea
fnstcw
xor
pop
daa
push
jnp
inc
cmpsl
andl
push
ljmp
jge
pop
cmp
icebp
lock
xchg
es
test
pop
ljmp
inc
cmpsl
popa
addr16
stos
popa
mov
subb
push
mov
js
xor
pop
pop
cmp
test
sbb
or
pushf
lods
out
cmpsb
les
sbb
adc
jl
sbb
xchg
fcomps
lea
addr16
mov
mov
test
or
mov
or
cltd
xchg
sub
pop
insb
sbbb
das
cmp
push
add
jnp
or
mov
adcb
adc
mov
sbb
adc
xchg
lds
es
rcl
push
iret
movsl
cmp
hlt
out
inc
fsub
ds
lock
out
enter
jae
xlat
stos
ljmp
lock
add
out
js
jnp
negl
ret
loop
lds
cmp
lret
jge
mull
ss
mov
iret
jno
mov
jecxz
xor
mov
stos
xchg
fbld
ds
push
mov
arpl
mov
or
fiaddl
sub
inc
sbb
pop
jmp
add
dec
xchg
sbb
jbe
sub
dec
mov
loopne
ds
outsl
cwtl
dec
push
pop
cmp
xor
ja
fildll
mov
pop
stc
aam
inc
pop
cli
add
jmp
dec
dec
sbb
push
lret
fildl
les
inc
test
inc
sbb
mov
sbb
int3
loopne
jo
mov
cvttps2pi
cwtl
lahf
ds
xor
repz
stos
mov
outsb
jg
rcr
sbb
into
test
clc
es
loope
sbb
mov
sbb
mov
cmp
int3
out
shlb
jl
dec
cld
sub
xor
jmp
out
fdivrs
pop
pushf
xor
mov
std
jnp
mov
ja
xchg
jecxz
out
xchg
aas
sbb
icebp
mov
divl
movsl
sbbb
enter
leave
in
mov
popf
test
jno
adcl
push
xlat
fnstcw
movsl
push
outsb
lahf
and
sbb
cmpsb
and
sti
loope
and
std
inc
push
lock
ljmp
call
jb
aas
push
jo
mov
roll
push
mov
or
inc
imul
aas
mov
rcl
test
sub
and
xchg
les
repz
pop
push
sub
iret
test
icebp
cmc
pop
cmp
ret
cmp
or
int3
ret
dec
or
push
push
mov
insl
dec
std
int3
cmp
and
mov
inc
int3
mov
pop
dec
in
adc
in
dec
push
pop
adc
ret
arpl
adc
push
dec
mov
ja
or
ds
sbb
mov
sub
and
sub
pop
push
lock
push
scas
sub
out
test
push
push
jo
jp
jns
cs
push
lcall
lock
inc
mov
sbb
push
inc
mov
mov
add
xchg
sbb
sbb
ficoml
cmp
int
ret
inc
fistpll
fists
insl
movsb
cmpsl
leave
adc
gs
fldcw
mov
adc
pusha
scas
dec
xchg
insl
jle
popa
xor
and
cwtl
vpaddusw
rcll
ljmp
pop
shlb
out
mov
jno,pn
sbbl
addr16
movsb
push
jno
cld
jae
or
mov
test
lret
std
hlt
adc
imul
xchg
xor
mov
pop
ret
test
lds
add
insb
cmp
subl
mov
add
jecxz
clc
pop
mov
stos
lods
dec
fs
xchg
mov
cmp
out
fldenv
call
fidivs
fs
repz
test
mov
push
mov
mov
lock
lret
or
push
and
mov
push
lcall
stc
and
stos
push
hlt
mov
sbb
jmp
bound
xor
testl
xchg
adc
pop
mov
fwait
mov
cmp
mov
cmp
fs
dec
inc
jmp
and
clc
or
jg
cs
sbb
das
dec
ja
sub
inc
jns
rolb
dec
and
mov
push
pop
cld
xorl
scas
adc
inc
and
mov
sahf
inc
fs
and
mov
add
stos
mov
lcall
je
sbb
dec
lds
mov
mov
xchg
pop
jle
xchg
adc
mov
lock
fwait
mov
aam
sbb
adc
repz
push
leave
or
and
xchg
add
js
pop
and
sbb
jmp
repnz
or
in
adc
iret
rclb
adc
adc
push
fsub
hlt
stos
xchg
ss
fmul
jo
mov
add
xor
scas
setb
xor
mov
shlb
lret
mov
imul
adc
mov
sbb
rcrb
mov
aas
sbbl
es
add
aas
stos
and
cmpsl
popf
inc
imul
pop
outsb
jmp
or
mov
pop
dec
in
loope
cmp
push
loopne
pop
push
out
ljmp
mov
cltd
in
xlat
aas
xchg
cltd
pop
jl
mov
lods
mov
add
jno
xor
xchg
push
mov
jae
dec
fwait
insb
repnz
out
and
shl
sub
pop
and
shlb
xor
adc
add
rcll
ljmp
rorb
cmpsb
or
imull
out
and
call
pop
nop
jmp
lret
idivb
stc
cld
aad
lea
or
scas
ljmp
dec
bnd
in
mov
bnd
inc
pop
iret
cwtl
lds
out
out
xchg
testl
movsb
or
mov
dec
push
mov
and
xor
push
fsts
pop
pop
push
push
call
fs
outsl
push
daa
jl
das
or
fnsave
or
xor
mov
sti
pop
out
popf
sbb
mov
outsb
jns
jno
imul
pop
push
lahf
fiadds
adc
arpl
and
or
jmp
mov
aad
xchg
sbb
lret
mov
adc
imul
cmp
cmp
sbb
std
mov
or
or
add
loop
call
xor
arpl
lods
fldenv
dec
pop
lret
sub
shlb
sub
push
push
mov
mov
cmp
sbb
mov
pop
jl
pushf
mov
cld
in
pop
mov
push
sbb
out
incb
and
adc
add
in
jge
jg
in
cmp
add
out
fldenv
movb
jo
cmc
int3
mov
fildl
subl
adc
xchg
push
enter
mov
mov
mov
push
jno
xor
mov
or
enter
and
push
popf
mov
jge
in
jle
push
cmp
mov
mov
inc
fdivrl
imul
xchg
xchg
pop
xor
push
and
add
ss
sub
cli
shl
stc
or
dec
stos
pop
clc
clc
dec
dec
movsl
sbb
call
je
in
xchg
pusha
and
push
fidivl
mov
clc
testb
jge
jne
add
in
mull
popa
imul
push
lret
cwtl
loopne
lret
leave
stc
cmpsl
sbbl
or
lahf
ss
inc
sti
leave
test
mov
inc
jb
clc
jge
iret
or
push
fdiv
jbe
fbld
inc
scas
and
shrb
or
cltd
ljmp
das
push
mov
rorb
cmc
mov
pop
push
imul
push
mov
bound
rclb
adc
std
mov
stc
cltd
adc
mov
leave
arpl
push
fisubrl
push
lret
bound
pop
mov
push
add
ret
pop
mov
test
mov
mov
es
imul
in
xor
jp
mov
mov
pop
imull
shll
sbb
iret
push
dec
mov
enter
and
loope
pop
ljmp
popf
pop
test
mov
int3
mov
mov
xorb
or
cmp
dec
inc
popa
dec
enter
cmp
in
es
adc
mov
insl
or
mov
sub
inc
scas
jns
filds
mov
fmuls
fs
adc
sub
in
fwait
jo
add
or
out
repz
xor
sub
adc
flds
inc
gs
sbb
sub
inc
ss
out
xchg
shlb
xchg
or
dec
int3
sbbl
sbb
mov
mov
inc
std
ja
imul
and
sub
fadds
or
cmp
adc
jae
lea
add
aas
adc
out
xchg
or
cmp
imul
sbb
sahf
jle
data16
mov
inc
pop
lcall
sbb
xchg
pop
xor
insl
add
in
ret
push
mov
shl
sti
push
xor
pop
popa
lods
into
xchg
test
fs
cmp
inc
lods
and
das
outsb
test
shrb
dec
scas
inc
xor
lret
fldl
enter
iret
mov
mov
pop
lock
sbb
inc
test
dec
mov
xchg
push
inc
push
xor
xor
jo
divb
dec
inc
dec
repz
decl
and
out
dec
and
sbb
lds
fwait
stos
sub
or
inc
push
scas
std
fldt
mov
in
dec
adc
dec
movsb
sti
mov
adc
sbb
sbb
xchg
and
inc
jns
dec
jnp
mov
ret
sbb
and
lods
jo
and
add
shlb
pusha
mov
and
lods
or
jnp
push
xchg
or
jge
mov
jl
inc
sbb
out
add
rcr
or
ds
inc
lods
or
fldcw
inc
aas
mov
xor
mov
enter
outsb
sub
adc
leave
adc
push
mov
jg
jle
cmp
pop
add
jecxz
mov
cld
cmp
mov
push
xor
dec
popa
in
mov
andb
sub
movsb
mov
mov
mov
sub
fwait
cltd
fxch
dec
cwtl
and
cmp
popf
adc
lret
or
fs
xor
insl
out
into
pop
fnsave
pusha
iret
pop
xchg
inc
xor
inc
xor
fldenv
mov
add
fadds
and
int
adc
lret
iret
das
ret
xchg
mov
xchg
jns
ficompl
das
out
push
push
in
addl
jnp
aaa
lcall
mov
nop
push
mov
cli
xchg
add
movswl
and
pop
push
or
in
ret
hlt
or
jo
mov
sahf
out
xchg
divl
jle
cmp
int
pop
outsl
fdivrs
outsl
insl
mov
nop
cltd
js
test
pusha
sub
jno
das
pop
adc
lcall
mov
sub
hlt
outsl
mov
dec
ss
outsl
nop
inc
ds
leave
mov
push
push
ret
mov
push
aam
pop
or
push
jl,pt
jmp
xchg
int
ss
jmp
fnstenv
lret
push
scas
mov
jne
adc
sar
adc
jmp
jnp
jg
mov
sbb
xchg
add
push
xor
scas
inc
in
dec
stc
jo
xor
clc
ljmp
inc
push
imul
inc
in
in
stc
repnz
dec
mov
adc
jp
jae
scas
lret
loope
fisubs
gs
das
scas
and
sahf
iret
testl
or
jo
dec
insl
test
inc
enter
popa
push
iret
outsb
push
lods
push
stc
sbb
mov
push
push
nop
aaa
into
add
leave
mov
dec
adc
pop
dec
jbe
dec
inc
mov
int3
fwait
or
xchg
push
ja
xorb
xchg
mov
mov
pop
mov
jg
inc
pushf
jg
in
std
xlat
pop
fst
pop
xlat
cmc
inc
lret
fbstp
and
lcall
sti
cmp
mov
enter
lea
push
xchg
in
mov
test
mov
xor
mov
cmpsl
cmpsb
xlat
pop
hlt
pop
mov
out
outsb
jle
movsb
cmp
push
repz
mov
sbb
jecxz
jg
or
pusha
dec
lcall
scas
scas
out
xchg
movsl
fmull
xchg
mov
pop
movsb
clc
call
test
jmp
xchg
sub
push
inc
pop
sbb
mov
push
mov
mov
dec
pop
or
jae
or
push
jmp
fcomi
loop
cmp
xlat
icebp
or
mov
cmp
repz
cmpsl
cmc
and
test
iret
daa
push
push
in
std
cmp
mov
pop
lock
add
jne
push
xor
mov
dec
add
and
fcomi
inc
test
and
les
inc
xchg
mov
push
leave
pusha
push
pushf
les
daa
mov
xchg
sub
cmc
jl
fnsave
clc
orl
rcl
insb
add
js
aas
loop
gs
popl
popa
scas
jmp
and
int
mov
inc
mov
test
inc
dec
sbb
daa
inc
mov
xchg
pop
ss
arpl
fnsave
mov
xchg
and
or
cmpsl
dec
stos
sub
orb
lods
lods
fimull
dec
addr16
inc
pop
xchg
fadds
popa
fmul
daa
mov
pushf
add
inc
sub
and
fidivrs
inc
jp
jae
out
imul
nop
push
push
fidivs
jle
lret
xor
xchg
mov
mov
movsl
std
push
insb
adc
pop
ffree
sti
jo
sbb
fidivrs
xchg
dec
or
mov
lcall
xchg
add
inc
add
inc
inc
pop
in
nop
shll
cwtl
das
test
xor
roll
and
push
pop
inc
mov
jle
mov
ljmp
cmp
sub
mov
mov
frstor
fcomip
mov
dec
test
enter
xor
push
repz
ja
inc
cmp
js
daa
movsb
pop
sbbl
dec
lods
mov
rorl
in
vmovd
mov
enter
jno
sbb
paddq
and
idivl
xor
fcomp
mov
or
jno
or
xor
sahf
inc
int3
mov
sub
cmpsl
pop
lock
aas
push
in
fsts
mov
dec
arpl
cltd
cmpb
push
sub
outsb
fistl
cmc
jl
rcrb
mov
insb
lods
xchg
sub
sarb
and
jmp
and
lock
push
pusha
fisubrl
mov
nop
daa
push
aad
ds
scas
fiadds
int
popf
addr16
scas
inc
int3
andl
fsubl
xor
xor
pop
mov
xor
add
pop
xor
xchg
or
repnz
xchg
mov
rorl
push
mov
cmpsl
lea
or
fsubs
sbb
sbb
call
mov
test
sub
mov
insl
xor
leave
das
int
inc
rolb
xchg
push
int
add
jns
in
mov
push
clc
lahf
sbb
pop
adc
fimuls
xchg
ja
xchg
aas
clc
iret
adc
mov
lret
mov
insl
xlat
addr16
cltd
clc
lock
insb
scas
dec
add
sti
and
push
fmul
imul
mov
repz
and
mov
jl
fistl
pop
stos
mov
cltd
insb
sub
lods
push
push
iret
rcrl
arpl
out
pop
jecxz
fucomi
jle
xchg
inc
cld
sub
add
testl
jle
scas
dec
xlat
mov
or
push
sbb
mov
dec
arpl
jecxz
lds
sub
sbb
dec
xor
aas
mov
ret
sub
xchg
adc
daa
mov
insl
mov
pop
loop
data16
and
repnz
pushf
add
lret
cwtl
fisttps
or
xchg
lea
jp
cld
nop
cld
clc
add
adc
push
add
xor
mov
test
dec
mov
xchg
sub
mov
into
and
adc
xchg
std
cmp
push
inc
inc
inc
fdivrl
pop
arpl
subl
pop
push
cld
repnz
fs
xor
or
mov
mov
stc
pusha
mov
out
jl
fidivl
fstps
and
dec
loope
pop
icebp
or
sub
adc
cmp
ljmp
cmp
lahf
fdivl
out
inc
pop
pop
popf
cltd
subl
dec
aaa
push
pop
int
mov
cs
jo
mov
iret
jbe
cmp
je
cld
mov
sbb
mov
xchg
test
adc
mov
repz
or
and
imul
lahf
scas
and
ret
ret
xor
inc
jmp
mov
push
call
mov
out
inc
inc
in
push
mov
stos
xor
addr16
nop
enter
movsb
lea
push
jnp
xor
xchg
rclb
movsb
xor
mov
nop
adcl
imul
sub
fs
aas
mov
movsl
inc
sti
and
addb
enter
jno
cmp
or
adc
sub
adc
sbb
out
xlat
xchg
pop
or
xor
and
adc
jb
and
pop
ret
adc
orl
pop
pop
arpl
jmp
jnp
data16
jnp
mov
jo
test
repnz
cmp
pop
lock
dec
mov
sbb
test
adc
add
mov
jmp
or
adc
push
cltd
jo
cmpsb
mov
adc
arpl
subb
cmp
pop
movsl
cld
or
adc
mov
icebp
or
xor
pop
mov
cmpb
ds
jp
pop
mov
pop
jno
shll
test
dec
or
je
test
lret
cltd
das
scas
inc
push
adc
jae
in
jg
es
mov
into
subb
mov
out
sub
xchg
js
jge
mov
sahf
fidivrs
inc
movb
push
sahf
mov
dec
push
lret
xor
inc
arpl
lock
dec
sub
cmp
loopne
jmp
push
add
fnstsw
movsl
inc
pop
addb
dec
lods
fildll
insl
adc
add
insl
movsl
mov
jo
adc
arpl
mov
push
pusha
mov
push
test
inc
pop
test
adc
jecxz
push
mov
jno
cmp
or
inc
popf
sub
mov
sar
lahf
or
xor
push
iret
xor
adc
jle
cli
in
je
mov
push
xlat
xchg
jge
jg
jae
ds
imul
sub
adc
jnp
or
shlb
inc
jno
clc
stos
mov
xor
stc
fwait
gs
push
push
pop
sub
jne
adc
add
jb
and
adc
lock
jmp
cmp
aas
lret
out
pop
and
pop
push
cmp
pop
out
sbb
or
call
mov
xchg
xor
stos
outsl
ja
cmp
or
hlt
or
mov
pop
pop
cmp
mov
pop
lahf
xor
ds
cmpsb
push
jl
jb
aam
xchg
adc
addr16
in
mov
jge
int3
cmp
ljmp
popa
imul
dec
shl
popf
sahf
mov
jg
aas
push
lods
jecxz
push
or
lea
dec
xchg
aad
xchg
out
lods
call
xor
mov
mov
dec
inc
push
mov
lds
aad
inc
add
push
pop
sbb
or
push
jae
stc
dec
cmp
sub
rcr
jae
addr16
sub
jecxz
mov
ljmp
jb
pop
mov
pop
in
mov
lret
sub
push
pusha
dec
or
dec
jb
dec
add
and
push
movsl
xchg
in
sbb
jp,pt
inc
inc
push
dec
out
std
dec
cli
or
mov
pop
rorb
fmull
and
push
inc
mov
out
hlt
orl
sbb
jb
xor
xchg
jl
xchg
loopne
sbb
jecxz
mov
into
je
leave
cmp
dec
mov
out
test
outsb
mov
mov
movsl
mov
sbb
leave
xchg
sbb
fbld
xchg
aaa
pop
cli
jle
aad
repz
neg
int
dec
test
or
std
je
xchg
ret
nop
pop
pop
imul
sbb
pop
mov
inc
or
lods
mov
jbe
dec
gs
outsb
and
mov
dec
pop
or
dec
add
call
cmp
dec
push
movsb
cmp
adcl
pusha
fnstsw
stos
bound
mov
pushl
mov
leave
and
mov
es
hlt
xchg
push
and
fdivrs
lock
add
sub
int3
xchg
icebp
adc
fildl
xchg
pop
outsb
fimull
mov
dec
mov
sub
je
jp
loop
jge
sub
push
push
xor
xchg
jae
out
jl
add
or
cmp
lods
insb
push
jns
push
mov
out
shrb
sub
pusha
gs
and
rcll
sti
in
and
mov
jnp
inc
ljmp
es
fiaddl
pop
push
test
test
inc
int3
imul
icebp
xchg
mov
int
push
adc
fsubrp
inc
test
movsl
cmc
mov
mov
mov
mov
push
test
pop
mov
rcll
mov
aam
jg
dec
xchg
insb
xchg
push
repnz
je
repz
push
and
xchg
rorl
pop
adc
push
add
pop
mov
cmpsb
les
fidivrs
pop
sub
jb
ds
cmc
xchg
jmp
stc
popf
xchg
fwait
pop
fsubp
jmp
out
jmp
mov
mov
pop
xchg
pop
cmp
cld
aaa
iret
cs
mov
loopne
shl
loope
cmpsb
js
out
cmp
xchg
test
lock
rcll
rcrb
or
ss
sbb
lea
dec
push
xchg
fs
stos
aas
xchg
pop
cmp
sbb
and
inc
and
add
cs
mov
adc
ds
movl
push
popf
jge
mov
mov
push
mov
ret
mov
xchg
sub
aas
cld
push
aad
popf
and
xor
ja
aas
adc
and
into
movsl
sbbb
pop
sub
mov
in
data16
shl
pop
push
push
pop
mov
jmp
lret
subb
insl
xchg
mov
insl
add
pop
pop
movsb
dec
mov
imul
jbe
mov
adcl
aam
lcall
into
push
xlat
bound
movsb
xchg
jbe
mov
bt
add
insb
sar
dec
imul
mov
push
adc
xchg
sbb
out
out
cld
rclb
ja
inc
mov
into
xor
push
pushf
jne
rcrb
push
fprem
or
ret
js
sub
iret
ljmp
dec
shl
pop
stos
add
jecxz
lods
add
loope
cs
push
in
stos
and
push
test
cmp
hlt
hlt
das
repnz
xor
sub
pop
pusha
jae
sbbl
add
fisubrs
mov
out
xchg
fstp
inc
mov
jmp
and
sub
xlat
push
scas
decl
loope
pushf
repz
mov
xchg
mov
cmpsb
pop
xor
pop
rcll
inc
inc
sti
xorl
dec
pushf
pop
inc
in
jns
dec
or
shl
and
inc
adc
mov
jns
inc
fucomp
xchg
enter
gs
and
hlt
xchg
dec
shlb
into
add
test
call
sbb
clc
mov
push
daa
ret
faddl
data16
xor
mov
loopne
repz
je
push
and
sarb
cmpsl
pop
orb
pop
inc
fisubrl
cld
xchg
call
ror
jbe
outsl
mov
mov
test
stos
cmp
jae
xchg
cmp
push
daa
dec
fiaddl
sub
int
ljmp
jno
stc
or
fmulp
sub
andb
stos
adc
and
cmp
xchg
je
in
out
xchg
push
lahf
ljmp
popf
and
or
mov
or
les
inc
jno
xlat
outsb
xchg
dec
loop
adc
ret
sub
dec
pop
test
ret
dec
out
add
jno
repnz
sub
and
sub
dec
cli
jge
fisubl
lret
sti
sbbb
jg
movsb
aaa
adcb
enter
sbb
ror
mov
jmp
cmp
sbb
shrb
xlat
add
dec
sub
pop
scas
mov
fnsave
stos
sub
mov
push
add
adc
jb
pop
and
xchg
pop
iret
fisubs
jb
clc
adc
push
push
jg
pop
pop
repnz
shll
push
lods
add
adc
int3
xchg
mov
aas
icebp
pop
mov
addr16
and
add
or
scas
inc
aas
in
call
test
jg
ss
addr16
mov
jae
add
mov
cli
adc
aad
or
adc
test
test
sub
jns
loop
das
cmpsb
test
stos
mov
lcall
inc
test
add
out
mov
aam
pop
mov
test
out
bound
xor
push
aas
inc
cld
jl
dec
clc
imul
push
add
jl
lods
test
or
call
inc
mov
sahf
and
push
fwait
xor
mov
xlat
mov
fstps
mov
inc
sbb
mov
adc
sbb
test
in
sti
cmpsb
dec
lea
mov
mov
pop
lods
test
sbb
in
ja
mov
sub
push
cwtl
stos
ss
bound
popa
cmp
in
mov
cmp
dec
outsb
pusha
fdivl
jmp
fdivrs
aaa
sub
pusha
aas
mov
cld
or
jb
sbb
mov
jg
dec
xchg
out
push
rorb
pop
lea
or
repz
stos
mov
mov
add
sub
ja
sar
ret
movsb
cmpsl
and
mov
aaa
sarl
sub
movsb
push
push
stc
out
sub
xor
add
pop
mov
arpl
mov
inc
icebp
outsb
shll
popf
xor
inc
dec
filds
cld
data16
pop
jne
jl
lods
jmp
dec
push
inc
jg
jge
cmp
pop
loop
push
into
es
cltd
mov
lock
jne
stc
orl
push
in
jg
aas
xchg
lods
fists
in
sbb
lods
mov
repz
xlat
cli
insl
les
dec
seto
push
in
and
jnp
ret
iret
sub
hlt
or
nop
jmp
pop
or
int3
dec
les
sbb
push
push
adc
insl
or
pushf
daa
mov
leave
pop
xchg
and
cmp
jne
push
dec
mov
aam
movsl
ret
in
movsl
sub
push
and
xor
cmp
xor
pop
jge
scas
scas
cmp
hlt
jae
in
ljmp
inc
fnstcw
outsb
pavgb
insl
std
iret
shrb
bound
mov
fstl
lret
sub
data16
rcrl
inc
cmp
imul
pop
push
mov
rcrl
lret
fisttps
adc
xchg
ja
jne
lds
ficoms
lds
mov
xchg
xchg
test
cmc
xchg
pop
cmc
xor
sub
pop
or
mov
xor
push
movsb
adc
addr16
sbbl
pop
shl
dec
popl
mov
js
mov
push
mov
add
sahf
adc
push
xchg
int
mov
mov
mov
mov
mov
dec
pop
add
in
test
mov
or
addr16
adc
js
mov
push
cltd
fwait
sti
cli
push
adc
dec
push
mov
adc
enter
rolb
aad
lods
addl
sbb
fcmovnbe
dec
rorb
pop
repz
es
daa
arpl
pop
imul
jns
shl
aad
icebp
ficoms
adc
test
inc
xor
ficoml
or
sub
imul
cmp
out
jne
xor
pop
xor
dec
and
adc
movsb
xchg
jno
add
lods
je
std
jp
imul
orb
cwtl
pop
out
mov
push
enter
js
scas
movsl
push
inc
jmp
xor
push
repz
xor
sub
addr16
lods
mov
notl
cmpsb
ja
push
ljmp
cli
and
push
lods
daa
imul
jg
mov
xchg
pop
sub
pop
mov
xchg
lea
jnp
daa
sbb
idivl
sarb
loope
cwtl
xchg
and
sbb
cmc
jb
out
sub
xchg
adc
incb
gs
gs
mov
stos
mov
enter
fdivl
xchg
mov
add
xor
mov
insb
addl
test
dec
cld
cmp
cmp
mov
pop
dec
jl
jle
push
jecxz
fs
cmp
loopne
add
push
inc
imul
jge
iret
cmp
movsb
ss
icebp
dec
or
inc
xor
dec
mov
les
iret
inc
and
push
int
scas
jns
hlt
xchg
push
xchg
popa
imull
sbb
dec
jle
call
subb
inc
lea
cmp
insb
dec
pop
sbb
or
mov
bound
jp
and
popa
lahf
xor
inc
xchg
mov
hlt
test
sub
stos
pop
mov
mov
sbb
mov
arpl
stos
cmp
in
push
sbb
pop
les
mov
mov
lods
xchg
jle
jmp
xchg
add
call
mov
outsl
cwtl
sbb
dec
fisubl
jge
xor
test
inc
or
cmp
mov
addr16
lods
cmp
xchg
xor
jg
sub
test
dec
push
jne
iret
pop
je
test
dec
dec
lods
aaa
or
pop
test
sbb
js
add
fists
dec
and
in
xchg
adc
xorb
cltd
xchg
mov
push
aaa
pop
ja
add
cmp
adc
xchg
sub
xor
cmc
outsl
add
inc
aas
and
test
imul
lcall
and
js
push
pop
das
add
loop
xchg
xchg
out
jle
mov
push
scas
push
lret
sti
jge
push
push
jmp
test
ss
in
sub
call
or
or
cmp
sub
jbe
sub
lahf
call
ja
xchg
adc
cmp
aaa
and
add
pop
fwait
jbe
icebp
outsl
mov
dec
fnstenv
cmc
loopne
rcl
lahf
shlb
push
jno
xchg
jno
dec
fisttpll
or
ret
fs
insl
test
jl
jmp
idivl
mov
mov
mov
push
pusha
lock
pop
or
and
and
ds
ret
lret
xchg
sti
fwait
mov
lahf
jnp
and
jecxz
je
lods
xchg
lcall
lahf
loop
mov
adc
dec
cmc
mov
fstpt
sarb
mov
add
or
fadd
mov
jbe
ja
sbb
mov
lret
rcrb
mov
and
lret
mov
mov
sarb
pop
mov
outsl
push
or
cmp
jnp,pn
mov
stos
and
and
cmp
cmp
or
sub
push
aam
xlat
les
mov
and
lods
add
dec
mov
gs
jle
or
ret
jl
stos
pop
sbbb
inc
mov
out
adc
stc
nop
or
test
loope
sub
std
sbb
inc
push
clc
ds
pop
jno
inc
pusha
sahf
inc
in
loope
push
jno
add
dec
mov
call
push
mov
testl
int3
aam
sbb
xor
cmp
mov
inc
rcr
sub
sahf
mov
or
lea
mov
adc
out
jno
xchg
and
pop
mov
cltd
fwait
out
enter
cltd
das
jmp
and
pop
cmp
pushf
push
aam
mov
fiadds
mov
shl
leave
inc
fdivr
push
inc
sti
inc
xchg
pop
adc
lock
in
xchg
mov
fmuls
sub
jo
out
mov
push
adc
jno
and
lea
xor
aad
and
or
inc
pop
xor
and
test
push
aad
sahf
xchg
mov
cwtl
lds
inc
not
sub
rcll
push
je
dec
rcl
mov
dec
ja
push
cmp
push
lds
add
clc
repz
cld
sarb
adc
movb
in
into
nop
pop
ja
insb
push
jb
push
popf
jg
loop
enter
pop
std
cwtl
imulb
inc
dec
inc
xor
xchg
repz
aaa
mov
aaa
push
jb
inc
jmp
fwait
cmp
aaa
testl
add
fwait
stos
xlat
icebp
xchg
jo
xor
ds
adc
pushf
daa
cmp
aad
push
pop
fisubl
cmc
xor
or
mov
cwtl
sub
sti
mov
dec
mov
mov
call
pop
lock
fisubl
dec
fs
jbe
mov
mov
sbb
or
call
xchg
sahf
scas
shrl
jp
inc
std
jo
loop
fidivrs
scas
cmp
gs
shrb
mov
xchg
ss
xor
sub
inc
mov
fwait
loopne
pushf
mov
pushf
cld
push
jmp
inc
push
push
jne
inc
fidivl
sub
mov
loop
sub
test
imul
and
push
jecxz
iret
sub
scas
xchg
and
lret
aam
popa
clc
lcall
pusha
push
sahf
js
cltd
inc
mov
mov
adc
mov
hlt
fs
inc
fnstsw
fisubrl
pop
cltd
mov
in
mov
adc
push
mov
out
inc
cwtl
or
xlat
roll
insl
lahf
xchg
mov
fs
adc
mov
add
je
xor
negl
add
sbb
mov
repz
mov
dec
pop
andl
mov
je
jmp
fsts
pop
rep
cli
or
aas
or
popf
jnp
ds
xlat
add
mov
pop
or
and
inc
inc
cmpb
fistps
dec
pop
cmp
lret
arpl
cmp
std
out
xor
push
xlat
ret
ret
sbbl
pop
or
xchg
outsb
and
mov
xchg
and
pushf
jb
es
pop
xchg
pop
test
lods
sub
adc
rclb
gs
sub
mov
popa
cmc
jae
loop
out
mov
mov
jnp
sub
lods
sbb
bound
jmp
sbb
fdivl
arpl
into
cmp
lret
popa
xchg
mov
fwait
in
xchg
lret
mov
js
aad
movsl
mov
push
lock
adc
jo
pop
sbb
popf
cmp
popf
test
lds
adc
cwtl
cmp
out
pop
ljmp
push
cmp
sub
jge
movsb
cmp
syscall
aaa
sbb
loopne
idivl
mov
test
sbb
jnp
das
inc
xchg
adc
addl
jl
or
lcall
test
cltd
test
testb
jno
bound
stos
xlat
repnz
rcll
push
pop
scas
inc
add
jmp
arpl
std
psllw
xchg
das
mov
cmc
shlb
in
xor
clc
sahf
inc
and
add
xchg
adc
xchg
hlt
cmp
xor
inc
aas
adc
jns
xchg
outsb
xchg
insb
mov
nop
mov
bnd
jmp
iret
cwtl
jp
cli
dec
aas
jns
adc
dec
adc
dec
lds
push
in
gs
or
aas
outsb
jmp
fwait
add
jg
cwtl
das
add
scas
mov
mov
lods
xor
jne
push
out
jl
and
jno
test
in
out
daa
outsl
ljmp
jge
and
mov
push
lods
nop
add
lret
icebp
and
cmp
or
dec
rcl
sahf
int
fiadds
loopne
cmp
add
cld
xorb
rcrb
add
fs
and
orb
scas
lcall
dec
push
notl
jl
mov
cmp
xchg
adc
mov
lock
sub
lods
in
push
mov
fdivl
xor
push
mov
push
pusha
dec
adc
pop
jo
adc
push
movsb
test
fdivl
push
andb
add
lcall
and
jo
aas
cwtl
dec
pop
mov
inc
sub
out
cmp
enter
dec
lods
in
push
push
lcall
lock
or
cmp
roll
shll
mov
btc
and
mov
jns
fnstcw
add
xchg
addr16
insb
xor
sbb
nopl
dec
add
push
ss
ljmp
aad
call
out
mov
cltd
adc
push
lods
inc
in
scas
ds
mov
jo
add
jge
dec
pusha
jp
jne
or
dec
cwtl
cmp
inc
decl
or
push
inc
shrl
xlat
push
out
pushf
pop
adc
push
aas
idivb
scas
mov
mov
test
imul
stc
mov
xor
sbb
in
mov
sub
adc
fwait
pushf
addb
test
cmp
lds
jo
pop
sbbl
mov
sahf
mov
mov
stc
mov
shrb
shll
mov
jno
dec
adcl
int
and
mov
aaa
movsl
lock
aaa
mov
adcb
mov
ds
test
ds
sahf
dec
fldt
enter
jo
lods
xchg
fldl
mov
ficoml
stos
or
les
leave
push
rorl
int3
fdivp
mov
popf
add
mov
or
xchg
sub
inc
sub
inc
mov
outsb
sbb
test
mov
aas
xor
inc
mov
ljmp
fiaddl
dec
neg
ror
pop
int3
and
sub
out
cmpsl
jp
dec
scas
dec
push
decb
xchg
xor
sbb
cmp
jmp
lock
push
cmp
cld
ja
add
sbb
push
xorl
add
mov
xor
push
cmpsl
lret
push
mov
inc
add
add
es
fiadds
repz
lret
xlat
fucomp
and
xchg
repz
cmp
in
adc
jl
cmc
dec
adc
imul
testl
out
jns
rolb
out
cwtl
pop
jb
and
sarb
lods
fistpl
push
in
dec
mov
imul
mov
lock
dec
bound
push
jecxz
fstpt
hlt
inc
sbb
xchg
or
mov
pop
jbe
lcall
in
mov
jp
add
cs
xchg
cwtl
fdivp
dec
mov
mov
sbb
push
push
mov
mov
jne
scas
lahf
cmpw
adc
test
mov
jge
popa
jg
cmc
in
mov
shll
jns
repz
loop
sub
lcall
lea
std
fdivrs
mov
nopl
mov
in
loope
add
sbbl
aad
sub
sub
xor
jp
dec
pop
hlt
jge
repnz
pop
xor
jne
lret
cld
mov
mov
aam
adc
leave
int
lahf
daa
mov
jg
pop
push
dec
outsb
sub
popa
inc
push
repz
out
xor
inc
idivb
inc
cld
pop
sub
loop
aas
jo
mov
xchg
stos
test
hlt
dec
sbb
mov
cmp
inc
adc
sti
xchg
or
sahf
sub
mov
dec
pushf
ror
nop
loop
cmpsl
adc
dec
mov
ss
xchg
call
push
add
jmp
mov
mov
xchg
push
cmpsl
add
scas
jbe
loopne
cmc
ja
push
lret
jns
popa
mov
push
ljmp
fs
clc
es
pusha
call
mov
dec
movsb
cmp
inc
jle
ret
mov
rcl
mov
inc
pop
fwait
jbe
cld
and
test
ljmp
jmp
inc
and
ja
dec
loope
outsl
xchg
insl
xor
sbb
aaa
push
scas
fcmovbe
lods
and
in
je
xorl
aad
sub
push
xchg
bswap
jge
cli
imul
dec
jmp
sub
cwtl
pop
add
push
mov
out
call
or
mov
ss
sbb
or
mov
inc
out
dec
outsl
push
jnp
movsb
inc
xor
sbb
sub
mov
and
inc
jmp
imul
ljmp
jb
dec
adc
inc
and
arpl
and
clc
popa
inc
cmpsl
fs
test
jns
push
mov
push
pop
xor
bnd
clc
fwait
sub
mov
stos
inc
add
inc
addl
push
add
inc
xor
cmp
fcom
lds
mov
into
stc
push
inc
mov
aam
shl
test
sub
mov
cmp
mov
std
jle
cs
ljmp
fisubrs
les
pop
cwtl
outsl
cld
call
sahf
ja
in
mov
hlt
fmull
repnz
jb
or
cld
push
rcr
add
dec
jl
es
dec
mov
and
or
sub
add
add
lods
leave
mov
ds
mov
outsl
dec
cmp
mov
sahf
sbb
push
cli
add
fs
pop
movsb
iret
add
sbb
loope
sub
push
jge
insl
roll
incb
mov
int
test
jmp
mov
pusha
cmp
mov
sbb
push
dec
test
pusha
mull
mov
adc
insb
and
pop
aad
cs
mov
jecxz
add
xor
add
jbe
mov
les
or
or
xor
push
push
les
and
in
pop
add
or
and
andl
cli
mov
mov
adc
mov
pop
ffreep
imul
cltd
fnstenv
pusha
xor
inc
mov
lds
cmpb
test
adc
aaa
out
xor
xchg
loope
call
idivb
call
int
in
inc
jno
aaa
xorb
mov
inc
fiaddl
sbb
or
jle
sbb
mov
js
mov
cwtl
mov
ret
in
stc
xchg
movsb
add
inc
gs
and
push
and
shlb
mov
mov
push
xchg
aad
pushf
lret
adc
in
lahf
push
push
es
adc
stos
mov
inc
ret
xor
repnz
and
repz
data16
rcl
mov
iret
fidivl
fsubr
and
mov
jns
jecxz
sbb
mov
cwtl
pusha
loope
lea
lods
mov
inc
inc
pop
jg
je
lret
jno
add
movsl
lods
and
cwtl
cs
test
mov
jae
jne
add
pop
ds
sub
dec
adcl
add
mov
movsb
repz
sar
push
scas
sbb
inc
mov
ss
push
mov
fldt
loopne
push
sub
cwtl
cmpsl
and
pop
imul
jp
or
or
inc
loope
inc
adc
popf
je
out
mov
jle
jg
adc
or
push
lods
out
mov
fbstp
mov
mov
xchg
scas
mov
add
push
test
enter
negl
icebp
in
jae
out
or
mov
mov
lcall
and
test
mov
add
dec
aam
test
and
or
fs
ret
les
pop
test
pop
xchg
push
das
cmpsb
cmp
and
ds
mov
enter
stos
test
push
add
xchg
stos
and
pop
jne
or
jl
fsubrl
fdivl
cmpl
push
fdiv
xchg
int
notb
push
and
lahf
call
cmpsl
and
cs
or
or
cmc
mov
add
jns
mov
sarl
sahf
add
xor
lret
mov
inc
fadds
bound
testl
lock
les
loop
movsl
into
xlat
or
loope
daa
mov
xlat
or
cmp
fs
mov
lret
xorl
pop
sahf
leave
test
test
sub
dec
cmpsb
jle
xor
fcomip
adc
jmp
lahf
xor
mov
or
push
insb
pop
mov
lods
add
xor
imul
in
cmpsb
dec
jnp
mov
out
pushf
aam
cmp
repnz
and
xchg
sbb
or
pop
mov
mov
out
sub
adc
xchg
inc
loope
inc
mov
std
adc
stos
mov
or
int3
mov
testb
test
lds
int
xchg
mov
hlt
loopne
out
push
cwtl
data16
lret
nop
lret
sbb
hlt
loop
sub
jb
add
call
addr16
shr
mov
in
mov
sbb
js
push
mov
cli
out
jp
xchg
sub
mov
dec
rolb
cmp
mov
repnz
insl
mov
testl
dec
fistps
cld
push
lods
sbb
adc
jnp
fdivl
outsl
push
jb
sti
jnp
js
scas
test
nop
xor
xchg
lods
mov
mov
xor
lret
mov
sbb
or
dec
rcl
pop
xchg
cmpsl
test
sub
imul
pop
jb
jo
sahf
movsl
loope
mov
test
inc
jb
fisttpll
adc
shlb
xorl
mov
loope
jle
push
insl
xor
cmc
mov
int3
int3
sbbb
and
lds
cltd
mov
push
fwait
repz
insl
clc
xor
loop
dec
cmp
clc
fisubrl
iret
xchg
sbb
dec
rorb
dec
popf
jns
add
cmp
or
pop
scas
adc
subb
jns
dec
lcall
daa
push
cmpl
sti
scas
mov
or
cmpsl
into
fcomps
inc
cmp
push
imul
jmp
out
jecxz
and
mov
mov
cmp
jo
aas
das
pop
xor
pusha
mov
xchg
jmp
pop
jl
mov
cmp
movl
insl
add
mov
pop
mov
xchg
pop
aas
mov
cmp
and
sub
lock
test
les
push
imul
fwait
pop
dec
pusha
rorb
sub
cmp
jbe
sub
xchg
adc
cld
inc
mov
test
or
pop
loopne
lcall
incl
pop
sub
popf
dec
mov
push
or
popf
push
pop
test
roll
aad
pop
jo
push
jae
cmpsl
out
sahf
lock
pop
add
xchg
test
lret
orb
call
and
pop
outsl
jno
cmp
nop
loopne
ret
sub
cmpsl
stos
inc
pop
adc
pusha
lods
insl
jno
sub
jle
dec
out
push
dec
out
movsl
fs
das
dec
add
mov
adc
or
pop
xchg
mov
mov
dec
rolb
mov
movsb
push
in
inc
ret
imul
or
leave
repz
dec
cmc
cmp
in
call
sub
xor
xor
xor
inc
inc
xlat
cmp
adc
push
cli
sub
pop
add
xchg
xchg
scas
lahf
adc
sub
inc
gs
dec
enter
aam
cmpsb
lret
lds
hlt
test
mov
jl
xchg
mov
adcb
xor
add
daa
jb
sbb
sbb
lods
jmp
pop
sub
sbb
sub
push
push
mulb
inc
push
mov
adc
lds
mov
xchg
or
jnp
sbb
test
xchg
add
jmp
mov
clc
mov
in
jecxz
pop
pop
push
insb
aad
pop
mov
jnp
or
pop
add
inc
fidivrl
hlt
pop
push
into
in
rorb
xchg
mov
dec
jecxz
cs
xchg
push
iret
insb
push
int
int3
jo
aad
cmc
dec
int3
es
js
addr16
dec
dec
fstl
aad
cmpsb
fbld
mov
cld
scas
addr16
inc
push
int3
pop
xlat
sub
jbe
iret
cs
out
mov
out
rep
out
dec
add
imul
sbb
jge
out
pushf
aad
aaa
shrb
in
push
pusha
lcall
jg
xchg
and
ss
insl
mov
bound
sbb
sbb
cmp
test
pop
int
cmpl
add
cmp
inc
stos
push
into
pop
xchg
sbb
adc
inc
mov
aaa
fwait
loope,pn
xor
mov
cmp
cs
dec
sbb
imull
jl
jbe
imul
pop
xor
dec
mov
fs
push
add
xor
cmp
sarb
pusha
cs
pusha
aas
mov
push
pop
jg
into
sarl
stos
shrb
cwtl
mov
addl
cli
mov
inc
pop
cli
jge
in
stos
sbb
mov
in
addl
push
insb
sub
stos
jne
addl
and
sub
test
jae
psubsb
and
jl
test
andb
popf
xor
test
mov
fwait
bound
movsl
das
inc
inc
popa
dec
add
mov
xchg
js
inc
mov
xor
add
call
sbb
sub
inc
dec
sub
jmp
jo
inc
xor
out
pop
lcall
inc
inc
shr
sub
sbb
mov
flds
orb
jno
test
pop
sbb
sbb
dec
sbbb
mov
daa
inc
xchg
movsl
mov
mov
jbe
scas
sti
stc
and
dec
negb
mov
ffree
adc
rcrl
mov
xchg
in
fildll
mov
fmuls
mov
pushf
mov
push
and
dec
shrl
push
mov
and
cmp
loop
imul
les
or
jne
mov
dec
inc
push
mov
and
addr16
mov
bound
repz
fidivrs
add
insl
inc
roll
jnp
jns
adc
lret
push
cld
sbb
adc
push
js
mov
lea
addr16
int3
stc
das
das
sub
mov
pop
nop
mov
pop
in
je
jnp
push
cltd
icebp
or
dec
cli
movsb
sub
and
sub
outsl
dec
sbb
hlt
clc
cmpsl
and
scas
cmp
xor
outsl
xchg
xchg
data16
add
push
push
in
mov
xchg
mov
aas
js
sub
popa
cli
test
movl
ljmp
adc
out
mov
fwait
mov
push
adc
jno
jmp
mov
sti
mov
xchg
in
test
xor
fsubs
xchg
adc
stos
mov
data16
adc
dec
push
jb
jl
stos
push
sub
inc
cmp
ret
movsl
cmp
cmpsl
pop
das
mov
pop
add
sbb
rcl
sarl
inc
add
stc
xor
jecxz
jmp
add
xor
adc
push
xorb
fs
loope
dec
andb
pushf
outsb
adc
mov
cwtl
and
pop
lcall
sbb
int
mov
and
or
pop
pop
into
jno
rcrb
sub
jmp
inc
sbb
rclb
mov
dec
jp
mov
adc
fdiv
pop
ss
gs
pop
adc
mov
adc
loop
das
pop
cmpb
pop
inc
pop
xchg
scas
mov
in
jmp
rcr
and
jg
mov
xor
fdiv
sti
dec
stos
jmp
icebp
mov
mov
push
mov
or
imul
call
iret
sbb
xchg
cld
decl
xchg
test
lods
jg
lods
sbb
push
lahf
push
popf
shlb
add
cld
mov
cmpsb
std
out
aam
sub
jle
cltd
mov
mov
add
push
pop
sbb
xor
lods
fbstp
or
lock
movsb
fadds
ret
imul
jb
popa
push
push
imul
fbstp
push
daa
in
jo
fwait
dec
jo
jnp
idivl
push
adcl
aad
aas
sarb
pop
jae
dec
inc
fs
inc
cmp
jb
in
adcl
cmp
mov
repnz
sub
scas
jmp
fstp
loopne
xchg
dec
fnstsw
inc
pop
xor
xlat
call
push
and
stc
nop
push
add
es
dec
jno
sub
xor
in
mov
dec
outsb
pusha
rcrb
fldenv
das
inc
and
add
nop
dec
xor
mov
and
scas
xchg
fst
pop
sub
stos
ds
push
cmp
jp
shrb
loop
mov
aam
mov
push
in
out
dec
and
adc
inc
xchg
jmp
arpl
cld
adc
aas
les
mov
loop
cmp
cmp
and
mov
jns
std
adc
add
in
negl
ret
inc
roll
lret
dec
hlt
std
dec
stos
subb
add
or
f2xm1
aad
inc
stos
sub
sbb
push
ret
cmp
and
xchg
dec
out
inc
arpl
add
test
scas
jmp
add
test
bound
dec
adc
aaa
sahf
cmpsl
ficomps
dec
or
pop
mov
das
mov
sub
mov
subb
jmp
sub
inc
jnp
mov
cmp
lock
xor
ret
add
fldlg2
sbb
sub
data16
ss
push
lock
mov
sti
jbe
jp
gs
popf
xor
ja
subl
mov
and
lods
inc
stc
mov
pop
cmp
pop
adc
insb
mov
push
push
addb
hlt
pop
shr
xchg
push
mov
jb
call
psraw
lea
lock
mov
sub
inc
fcoml
adc
ja
stc
jge
sub
xor
mov
shll
insb
jg
adc
pop
movb
ss
stc
xor
and
push
out
fxch
bound
push
or
xchg
pop
xchg
das
int3
cmp
dec
or
mov
pop
add
xchg
es
neg
je
outsb
clc
xchg
mov
push
fwait
dec
test
call
imul
movsb
or
ret
push
add
xor
test
fucomi
mov
lods
adc
or
mov
jmp
shrl
mov
push
sbb
fsubrp
jns
pop
adc
gs
add
mov
popf
xchg
xor
pop
ret
sbbl
sbb
arpl
mov
adcl
dec
shrl
push
fsts
stc
xchg
xor
or
mov
lds
xchg
jnp
ljmp
mov
repz
xlat
jle
and
push
sahf
jecxz
pushf
and
xlat
and
xchg
mov
ja
and
dec
xor
inc
sbb
out
dec
mov
sub
mov
inc
fcom
sahf
cltd
ss
cmp
in
idivb
adc
ss
bound
jns
cmp
xor
shll
lds
pop
push
inc
test
or
cld
sub
fimull
mov
jne
addr16
sub
xor
pushf
lods
jl
movsl
jl
fwait
decl
cwtl
or
sarl
fists
dec
or
mov
cltd
stos
repz
rclb
cli
xor
cmpsb
sbb
in
dec
in
xchg
sbb
sub
dec
movups
mov
arpl
imul
inc
sub
pop
popa
push
sbb
pusha
inc
mov
imul
scas
sbb
imul
into
sub
xchg
test
jmp
fiadds
lock
loopne
cld
xchg
testb
test
ret
outsl
std
icebp
dec
mov
fucomip
iret
test
es
test
jns
int
sbb
jl
mov
sbb
shrb
sbbb
jbe
xor
and
adc
and
test
adc
div
ds
adc
mov
dec
mov
imul
mov
insl
rclb
fldt
pop
adcl
add
xchg
mov
push
es
fwait
mov
push
cmp
ret
jge
iret
ss
pop
arpl
call
and
lds
inc
fadd
push
mov
insl
or
sbb
cmp
pusha
dec
adc
jg
push
jo
sbb
xchg
lahf
test
xor
fdivr
scas
inc
lods
inc
cmp
inc
stc
in
popf
shr
pushf
ljmp
sbb
mov
shlb
cmpsl
movsb
dec
add
jge
fs
push
into
xor
cmpsb
push
inc
sbb
inc
cli
xlat
fcomps
lcall
shrl
mov
or
cmp
iret
ds
sti
cmc
imul
pop
inc
mov
inc
outsb
add
mov
fs
dec
push
lock
sub
push
stc
jbe
lcall
jecxz
cmp
out
dec
rcrl
mov
dec
dec
fs
negl
outsb
stc
popf
ret
xchg
jle
jmp
jg
add
in
cli
loop
sub
jns
sbb
lcall
jbe
in
or
in
cmp
lds
mov
ret
outsl
cmp
popf
gs
rorl
adc
and
cmp
jge
repz
push
cs
lcall
lret
mov
mov
bound
mov
xor
testl
pop
aad
out
mov
and
stos
jne
push
hlt
je
arpl
fnstenv
ret
and
popa
mov
ljmp
sbb
mov
icebp
js
flds
and
cli
xchg
insb
daa
fldt
mov
int
mov
fs
lds
aad
mov
or
lock
xchg
dec
icebp
or
je
stc
shrl
mov
or
test
mov
fnsave
in
das
jmp
test
scas
insl
js
sub
jns
repnz
sbb
ss
into
out
arpl
jb
loopne
cmp
fldt
sbb
test
shlb
mov
loop
mov
ja
add
mov
dec
and
push
pop
pop
and
mov
push
test
add
imul
pop
imul
cli
push
mov
clc
and
push
xor
cmpxchg
mov
or
cltd
out
lret
xchg
mov
cmp
inc
mov
or
pop
outsl
in
xor
mov
cmp
ja
sahf
arpl
add
in
push
pop
in
mov
imul
jne
ud1
inc
and
xchg
and
dec
clc
mov
in
push
idivl
ret
ds
lock
repnz
xchg
inc
mov
daa
mov
mov
inc
fstpt
scas
loop
push
push
and
sub
mov
sbb
add
xchg
mov
mov
inc
lock
movsb
mov
sub
jne
jp
and
fistl
inc
pop
cmp
imul
mov
out
divl
cmp
mov
fimull
rdtsc
test
pushf
in
mov
movl
faddl
or
add
push
add
jp
xor
mov
mov
jmp
or
push
and
loop
mov
xor
mov
loopne
ret
xchg
arpl
iret
cmpsl
inc
dec
mov
test
fwait
mov
cwtl
and
repnz
mov
ljmp
call
fistpll
fidivs
or
test
add
pop
mov
loopne
ljmp
inc
push
push
out
lods
add
loopne
mov
inc
mov
jbe
sti
inc
sub
sub
inc
jmp
lods
ljmp
sahf
dec
notl
push
jle
or
cld
xchg
cmp
lock
test
mov
cld
nop
mov
mov
test
add
scas
adc
icebp
rol
std
movsl
dec
popa
aam
loopne
push
popa
cmpps
out
inc
sub
or
xchg
test
sub
or
jne
sbb
fld
pop
or
sub
or
sbb
sbb
pop
mov
mov
xchg
lods
xchg
stos
in
int
push
sub
sub
mov
loop
data16
ret
in
repnz
sub
hlt
inc
jle
pushf
cmp
addr16
js
sahf
clc
adc
cmp
sub
testl
dec
jmp
call
lock
lcall
push
rorl
and
insb
shl
adc
inc
pop
jecxz
lods
das
add
pop
mov
pop
out
cmp
mov
imul
popl
pop
inc
enter
in
dec
xor
fwait
add
mov
loopne
jmp
nop
inc
sub
cs
cmp
mov
sub
rcrb
mov
sub
cwtl
pusha
pusha
and
cmp
divb
inc
stos
mov
decl
sbb
das
ljmp
push
lock
push
sti
pop
ret
add
aad
flds
and
sbb
aam
bound
xor
sbb
sub
in
push
push
mov
xor
lret
jae
and
hlt
pushf
xlat
sub
stos
in
jb
xchg
adc
ja
ja
mov
adcb
out
mov
addr16
cmp
mov
lret
pusha
adc
jbe
das
adc
xchg
cmp
or
adc
andl
iret
fnstsw
xor
dec
pushf
cmp
adc
inc
jns
les
je
insl
fiadds
cltd
xchg
int3
in
push
iret
in
adc
mov
mov
cmc
int3
lods
outsb
pop
repnz
cmpsb
inc
and
daa
pop
insl
xor
xor
and
cmp
sbb
jo
xchg
adc
fcompl
loopne
adc
aad
push
cmpl
jb
nop
cmpb
jmp
pop
pop
mov
mov
cmp
mov
xchg
push
sbb
sbb
xchg
sub
or
jno
xor
outsb
cmpsl
jmp
mov
pop
and
rclb
xchg
xor
xchg
or
add
and
rcrb
xchg
jg
push
nop
rol
sub
ret
pop
loope,pt
movsb
add
cli
dec
shlb
xchg
mov
push
pop
pop
aaa
cmp
pop
repnz
fmull
pop
dec
mov
scas
mov
lahf
mov
adc
mov
mov
cmp
pop
mov
sub
inc
inc
outsl
push
pop
cmc
test
or
jbe
dec
mov
aas
mov
push
or
sahf
push
cmpsb
out
lods
pusha
mov
into
jp
movsl
fldenv
pop
cltd
mov
mov
pop
cmp
popa
cmp
popa
in
sbb
jg
inc
outsb
jle
call
mov
cmp
jecxz
aad
cmp
jl
std
push
sub
js
pop
data16
icebp
mov
fldcw
pop
cld
cltd
inc
ret
into
mov
jbe
pop
dec
cmc
adc
lods
inc
into
and
push
push
lock
mov
jae
fst
addl
loop
add
in
xor
fidivrl
popl
outsl
sar
popf
mov
clc
dec
jg
bswap
in
xlat
cmp
xor
mov
loop
stos
push
pop
sub
add
pop
sahf
cmp
sbb
dec
cld
leave
mov
inc
addr16
je
mov
or
rcll
jne
cmpsb
popa
cmp
loop
sbb
cmp
push
icebp
cmp
lret
addr16
repnz
xchg
into
fdivl
std
push
inc
shlb
xchg
gs
imul
cli
clc
or
std
or
mov
imul
or
push
mov
fstps
in
dec
mov
and
out
stc
inc
cs
sti
outsb
sbb
lcall
das
cmp
fadd
call
sti
imul
adc
loop
cltd
sub
push
orl
out
adc
icebp
add
js
sbb
in
dec
mov
jae
mov
pop
xchg
cmp
insb
inc
fcompl
arpl
adc
push
out
iret
mov
mov
scas
incb
stos
loopne
cld
sbb
ja
cmpsl
sub
aam
lds
mov
sbb
cli
and
and
in
jg
ss
sbb
pop
mov
cmp
xchg
push
mov
call
xor
aaa
popa
xchg
jnp
testb
fsubrs
ja
aam
in
outsl
jb
negl
out
jns
aad
jns
ret
and
adc
add
aas
or
repnz
ljmp
push
jno
fcmovnb
addr16
pusha
jne
mov
fsubrl
ucomiss
sub
loope
ret
adc
dec
push
push
loopne
xor
arpl
pusha
enter
or
mov
mov
pop
ret
push
cmc
jmp
mov
inc
cltd
jne
or
nop
sbb
into
jg
scas
scas
inc
mov
sbbl
cmp
sbb
lods
pop
into
clc
lahf
idivb
xchg
push
leave
shlb
xlat
pusha
or
icebp
or
jo
popa
add
loopne
cmp
das
xor
or
pushf
jo
and
enter
jp
sub
mov
mov
movsl
mov
mov
jb
mov
xchg
jne
lods
fstl
xchg
mov
aad
and
push
adc
leave
jns
xchg
mov
sub
mov
sbb
lret
insb
xchg
mov
fcmovb
or
ja
pusha
in
shll
in
cltd
jae
add
push
mov
push
sbb
scas
sbb
scas
adc
cmp
bound
mov
dec
add
jae
mov
ret
lds
mov
sub
add
mov
xor
pushf
stc
int
push
imul
add
fbld
mov
icebp
pop
adc
int3
loopne
jbe
push
cmpsl
xchg
jae
fdivrs
mov
sar
lahf
daa
test
jg
cwtl
loopne
inc
bound
sbb
mov
jp
pop
pushf
orb
testb
std
sbb
incb
and
out
pop
stc
mov
cltd
icebp
scas
add
testl
into
dec
lods
jo
pop
fnstsw
in
mov
mov
aam
mov
fistps
aaa
pop
mov
sahf
fnstsw
mov
jnp
add
sub
insl
clc
jae
into
mov
int3
icebp
notb
fs
scas
sub
pop
xor
xor
sbbl
bound
sbbl
mov
push
or
pop
insb
or
mov
outsl
jns
rcrl
lds
rolb
out
lods
inc
xchg
pop
add
push
dec
mov
mov
mov
fisubrl
scas
aaa
push
cld
pop
test
mov
cmpsl
scas
lea
sub
mov
sbb
test
sarl
jno
mov
shr
mov
pop
int
pop
mov
mov
std
xchg
lea
xor
pop
inc
cs
dec
sub
jp
test
iret
arpl
fcmovne
aaa
dec
push
fsubrs
jmp
fsubr
test
arpl
cld
push
out
cmp
lods
ret
pop
mov
mov
push
fidivrl
dec
mov
push
cmp
fstpt
or
push
divb
jno
cmp
fld
or
lahf
aam
aaa
pop
mov
mov
imul
xchg
xchg
pop
outsb
sub
lock
lret
out
shl
addr16
gs
pop
icebp
in
cmp
jae
fmul
outsl
jns
sar
push
mov
ret
rorl
adc
outsl
stc
sub
push
loopne
push
fwait
sub
test
out
add
push
imull
push
xor
gs
in
xor
loope
or
inc
stos
nop
mov
icebp
pushl
mov
sub
mov
pop
repnz
out
mov
lods
jl
sub
dec
pusha
orb
mov
xor
fstpl
xchg
fbstp
lea
jge
imul
adcl
xlat
add
ffree
adc
jecxz
inc
adc
out
xchg
mov
inc
es
push
adc
cltd
inc
mov
fisubrl
in
cld
test
fdivl
stos
notb
std
mov
mov
pop
mov
mov
mov
imul
jae
adc
jle
mov
lahf
jecxz
jb
out
out
bound
in
addl
in
cmc
ja
rorb
push
mov
jmp
orl
mov
fxam
fbld
lret
std
fistps
mov
pop
mov
sub
pusha
clc
dec
mov
gs
mov
in
lods
mov
shrb
insb
add
xlat
jmp
pop
mov
in
daa
mov
xchg
adc
jbe
lods
icebp
out
lock
insl
fwait
inc
pusha
cmp
push
adc
dec
push
mov
sub
mov
fwait
dec
lds
shlb
insl
mov
cmp
add
andl
push
sbb
mov
ss
dec
xor
adc
sub
mov
cmp
lods
gs
mov
push
jmp
and
imul
and
mov
shl
mov
in
ja
mov
ds
sub
dec
mulb
and
sahf
fucomip
iret
in
xlat
jecxz
daa
cmp
add
xor
sar
jmp
or
icebp
int3
aad
inc
test
lret
xchg
cwtl
mov
xor
jns
push
mov
les
mov
fstl
mov
mov
popa
addb
addr16
mov
lahf
loope
lods
push
fidivs
test
mov
sub
add
in
mov
pop
cli
xchg
adcl
pop
inc
outsb
sbb
fstps
jge
dec
pushf
cmpsl
ret
xchg
rcrl
adc
dec
sahf
and
jmp
dec
lods
cmp
fadds
in
pop
sbb
mov
xchg
int3
in
push
xor
imul
cwtl
sub
les
pop
or
add
insb
in
pop
and
mov
decb
sbb
lcall
nop
out
mov
inc
push
sti
inc
mov
push
xor
gs
pop
cmp
insb
insl
pop
in
sub
dec
cmpsl
insl
dec
cmpb
pop
int3
lcall
mov
movb
orl
cli
ja
xorl
mov
mov
test
leave
jnp
adc
pop
test
pop
cmc
xchg
imul
les
xchg
adc
jmp
jnp
and
loope
subl
mov
fs
add
mov
ret
shll
add
sbb
repz
cs
adcl
xor
lahf
mull
mov
cmpsb
cltd
add
idivb
loopne
repnz
add
mov
mov
shlb
int
fisubrs
cmp
daa
pop
bound
loope
xchg
in
xlat
scas
xchg
mov
adc
mov
movsb
adc
mov
fmuls
push
lods
or
dec
cmpsb
and
xchg
cli
pop
mov
adcb
or
jl
jb
xlat
sub
add
and
rclb
mov
sub
pop
inc
mov
add
aad
cli
cli
insl
int3
xchg
sbb
bound
repnz
out
adc
pop
roll
pop
xor
inc
mov
jmp
jo
inc
rclb
inc
out
test
dec
data16
mov
pop
popf
sbb
jno
icebp
lods
jl
test
inc
cli
roll
repz
inc
in
and
shrl
push
push
jae
or
mov
add
inc
movsl
in
or
adc
xchg
aas
outsb
push
jmp
pop
xchg
jo
sahf
jae
icebp
jno
jmp
jp
xchg
sub
add
sbb
lret
jae
jg
hlt
mov
and
loop
xchg
lea
sub
mov
jecxz
cmp
pop
sbb
sub
and
and
fbld
mov
jle
and
pop
xor
int3
jo
in
hlt
inc
jnp
stc
adc
test
push
mov
mov
xor
xor
sbb
dec
lahf
push
fdivrl
fnstenv
int3
call
push
jmp
repz
mov
ret
mov
or
add
xchg
adc
lods
pop
xlat
mov
into
data16
mul
pop
in
in
rolb
shlb
and
out
push
inc
test
pop
cmp
in
sbb
imul
inc
stc
enter
mov
sub
xlat
add
mov
mov
or
mov
out
dec
aad
sahf
and
add
shll
in
lahf
mov
mov
inc
cmpsl
in
and
mov
je
sub
mov
rcll
inc
xor
out
xor
outsl
push
loope
xor
mov
and
sub
les
cltd
adc
lea
aad
dec
and
movsl
cli
hlt
inc
iret
sbb
adc
lock
cmp
mov
dec
pop
or
lahf
pop
outsb
ss
es
aas
call
les
mov
pop
and
in
js
mov
mov
pop
mov
inc
sahf
mov
in
out
ja
and
cld
xchg
mov
sbb
loopne
and
cmpsb
jns
mov
cmpsb
jns
movsb
icebp
sub
xor
push
daa
add
lock
test
sahf
mov
mov
rcrb
mov
ret
mov
insl
loopne
pop
cld
roll
dec
mov
fucomip
inc
push
inc
inc
ret
dec
pop
adc
nop
xchg
shll
mov
loop
jns
hlt
aaa
push
push
push
hlt
or
mov
jle
xchg
mov
ret
hlt
pop
test
stc
xchg
mov
add
loop
pandn
int3
cli
ret
rcr
in
lret
xlat
dec
iret
pop
int3
test
ljmp
xor
xlat
xor
roll
daa
xchg
mov
decb
sahf
mov
je
sbb
xchg
lret
repz
in
pop
jg
adc
lds
and
push
imul
dec
repz
sahf
sbb
cmpsl
jb
out
sub
stos
push
ljmp
xor
pop
mov
pop
stos
aad
cmp
push
ficoms
fwait
cld
dec
addl
das
lds
out
push
pushf
sub
adc
push
cli
das
pop
cltd
mov
dec
dec
cmp
fsts
inc
loop
dec
push
xor
sub
cmpsl
lcall
jge
xchg
ja
insl
dec
adc
sub
or
jp
mov
mov
mov
pop
stos
in
and
jne
repz
pop
ds
pusha
pop
ret
dec
fucompp
xor
xchg
and
mov
movsl
daa
fs
push
pop
adc
sarl
insb
add
inc
inc
adc
rcrl
inc
cmp
cld
lahf
add
sub
ret
and
fs
loopne
jp
adc
jnp
sub
inc
imul
mov
cli
dec
lahf
xor
mov
push
or
mov
in
add
cmpsl
mov
jecxz
inc
dec
push
lods
xor
xchg
jne
or
test
mov
mull
jae
inc
call
in
adc
scas
mov
in
shrb
mov
fldcw
stos
loop
or
aam
or
adc
xlat
fistpl
mov
or
lret
nop
mov
xchg
and
lret
fucomp
adcl
sub
loope
xor
dec
pop
pop
jns
adc
xchg
push
pushf
xor
mov
cwtl
mov
shl
adc
imul
dec
push
sbb
insl
dec
jecxz
xchg
dec
sbb
dec
mov
mov
mov
xor
xor
bound
stos
xchg
and
insb
mov
mov
and
movsb
jecxz
jmp
sbb
sbb
stc
aam
mov
adc
or
mov
mov
cmpsl
push
vunpcklps
inc
les
jp
enter
in
stos
std
push
inc
pop
fsts
ss
add
cmpsb
pushf
pop
cltd
pusha
push
std
xor
inc
sub
jge
pop
jb
mov
sbb
ds
lret
into
mov
icebp
stc
roll
in
inc
pop
xchg
in
lahf
sub
push
sub
jnp
jnp
es
popf
jge
pop
or
xor
mov
xor
in
arpl
insl
sahf
shr
sbb
xor
lods
pop
mov
cmp
scas
cmc
aaa
mov
mov
mov
push
mov
cmp
sub
xor
and
jecxz
movsb
and
adcb
shrl
rorb
movsb
adc
int
and
mov
or
lret
adc
or
loop
lock
cmp
or
repnz
stos
add
popf
mov
mov
ss
and
xor
ret
fdivrl
mov
loopne
add
jmp
cmpsl
pop
xchg
pop
dec
mov
aaa
cmc
and
xchg
fcompl
mov
mov
inc
and
mov
sbb
pop
push
pop
sbbl
ret
jle
cmp
ds
dec
pop
jp
daa
inc
dec
jg
adc
mov
mov
ja
push
xchg
cli
jo
aaa
fistps
add
xor
movl
and
jb
mov
stc
sub
push
fld
pop
orb
stos
or
sahf
adc
das
mov
xor
out
bound
xchg
popf
lds
pop
jae
icebp
mov
fbld
movl
cmp
dec
pushl
push
or
mov
pop
lods
push
jmp
mov
ret
cmp
ds
xor
xor
mov
iret
aas
cs
pop
push
jo
jp
pop
mov
cmpps
mov
pop
shrl
imul
xor
push
sub
dec
mov
sub
mov
mov
je
inc
cmp
push
pop
dec
dec
pop
jecxz
fldl2e
imul
dec
xchg
mov
aaa
adc
xor
xor
jbe
stos
sub
and
test
fisttpl
mov
jmp
add
loope
xorl
jns
sbb
add
rolb
sbb
push
xchg
push
dec
insb
adc
push
in
outsl
int3
add
aam
testb
xor
push
aas
jne
mov
xor
stos
das
or
aas
add
data16
and
lods
mov
stos
xor
add
adc
fwait
cmp
imul
cmc
push
sbb
push
outsb
sbb
lahf
push
xor
or
js
pop
mov
mov
insl
cld
xchg
mov
fisubrl
pop
inc
mov
and
das
mov
inc
in
xchg
push
dec
icebp
xor
pop
pushf
aas
int
call
jmp
pop
outsl
lret
out
repnz
ret
mov
aam
shrb
pop
push
gs
dec
inc
ds
loop
cmp
enter
adc
add
imul
sbb
gs
adc
roll
or
add
adc
imul
pop
icebp
adc
mov
jecxz
in
add
popf
sub
test
jg
pop
lea
adc
jle
bound
mov
mov
inc
cmp
push
push
dec
xchg
adc
lods
pushf
jmp
adc
xor
sub
push
sub
iret
dec
push
or
push
fstpl
and
cld
fidivrs
or
into
mov
dec
lds
mov
mov
xchg
loope
out
test
dec
jp
hlt
add
mov
push
lcall
outsl
aaa
jge
stc
pop
imul
xor
out
leave
jbe
adc
push
les
notb
mov
rcl
fbstp
js
add
jp
pop
les
sbb
xlat
fcomi
push
push
cmp
sbb
jae
sub
pop
adc
gs
adc
mov
cli
jge
jecxz
lret
inc
xchg
jne
mov
icebp
mov
or
iret
pop
rcrb
hlt
pop
mov
mov
cmp
push
scas
outsl
inc
test
jg
sbb
dec
cmp
inc
xchg
push
addr16
sbbl
lret
xchg
or
push
xor
insl
sub
cld
push
outsb
insl
ret
data16
fldt
cmp
call
mov
xor
rorl
mov
mov
push
and
das
test
loope
mov
mov
scas
nop
orl
loope
inc
imul
hlt
xor
dec
adc
outsb
daa
mov
xchg
dec
inc
mov
mov
or
mov
insb
add
xor
and
imul
xchg
loopne
lahf
mov
mov
fisttpll
aad
repz
mov
loop
lahf
xor
or
subb
push
xrelease
in
shlb
mov
popf
mov
mov
in
pop
outsb
gs
add
inc
leave
and
fimull
lods
xor
jl
inc
int
cs
jb
loop
pop
cwtl
out
xor
pop
fcmovnu
pop
imul
sbb
push
aaa
pop
add
mov
loope
call
or
ret
sub
orl
out
mov
mov
adc
inc
cmp
nop
daa
aas
jnp
lcall
pop
call
mov
roll
pop
mov
or
fs
sbb
aad
mov
or
jnp
shl
scas
adc
cmp
mov
ret
test
in
or
cwtl
add
add
jb
mov
mov
cmpb
in
mov
push
cmp
cmp
pop
fstpt
mov
rolb
leave
sbb
mov
jno
sub
sbbb
lods
notl
cmpsl
daa
mov
sbb
xchg
call
aas
xchg
sbb
mov
sub
push
scas
mov
ljmp
fwait
mov
jp
and
aad
lret
test
cld
sahf
xor
repz
sub
cmp
sbb
push
cmp
fiadds
fisttpl
and
xlat
mov
cmpsl
cmp
lret
and
js
dec
in
jecxz
adc
mov
aam
nop
sbb
or
push
and
push
das
or
push
repnz
into
fwait
ud1
sahf
sub
loop
fwait
dec
out
jl
ss
inc
sbb
movsb
out
push
push
in
push
ja
jg
dec
xchg
lods
jne
push
pop
adc
fcmovnb
mov
pop
xor
test
xor
test
ljmp
outsl
push
sub
sub
and
filds
pop
dec
dec
shll
mov
lcall
dec
out
movsb
sub
iret
iret
xchg
cli
mov
jne
shll
lret
icebp
xchg
das
rcl
inc
insb
out
cmc
push
sbb
cltd
dec
mov
xchg
out
das
and
mov
dec
mov
movsb
inc
ficoms
aad
jns
js
push
sub
dec
loope
dec
jb
mov
sbb
fiaddl
adc
js
popa
adc
and
sbb
testl
fwait
cmpsl
aam
sub
shr
clc
and
dec
dec
lret
push
aad
jmp
cmp
jge
inc
xor
mov
icebp
mov
clc
imul
mov
imul
popf
cmc
cmp
pop
pushf
pusha
jb
out
scas
mov
pop
adc
test
adc
icebp
and
fmuls
mov
inc
adc
xlat
imul
mov
jno
adcl
sbb
jbe
das
lds
cmpsl
test
cmp
jnp
and
ja
leave
ja
addr16
std
lods
addr16
push
mov
pop
pop
test
lock
mov
jne
fadd
mov
xor
ss
cmpsl
jbe
dec
mov
pop
shrl
sbb
adc
rcrb
lods
out
fdivr
adc
and
push
jae
lcall
rolb
cmp
rcll
and
or
xchg
je,pn
pusha
inc
cpuid
mov
and
mov
ficoms
xchg
int3
jg
cs
nop
pusha
adc
jg
clc
es
imul
xchg
jbe
outsb
add
lret
push
sbbl
adc
sub
cs
inc
jmp
outsl
add
sarb
imul
adc
xchg
jecxz
hlt
cwtl
lods
and
and
aaa
add
push
ja
adc
dec
mov
and
icebp
jg
adc
mov
xchg
sbb
adc
push
dec
pusha
sti
inc
ja
cli
shlb
adc
mov
mov
xchg
and
jle
sub
mov
push
mov
int
fstpl
push
push
cmpsl
jmp
test
pop
out
sub
xor
montmul
cmpsb
or
je
lea
xchg
stos
xor
test
push
sub
adcb
xchg
mov
ret
scas
ljmp
push
push
inc
add
repnz
pop
mov
and
imul
dec
jmp
mov
filds
xchg
and
and
into
jns
imull
loopne
mov
pop
leave
test
mov
aam
push
push
mov
sbb
jecxz
pop
cmp
sbb
mov
fidivl
mov
andb
enter
xor
popf
je
enter
les
lds
mov
jle
pop
into
xor
ljmp
mov
xor
sbb
call
js
leave
cmp
mov
lcall
in
clc
je
mov
icebp
pop
enter
rol
xchg
cmp
stos
in
outsl
jle
aaa
into
pop
lahf
xor
push
fidivs
mov
mov
mov
jbe
mov
mov
aas
mov
mov
or
add
inc
jg
jne
test
xchg
andb
xchg
mov
testb
dec
mov
xchg
repz
sbb
popf
clts
es
jle
xor
out
sti
pusha
popf
cmc
mov
scas
add
sub
icebp
and
lods
mov
aaa
in
addr16
inc
fnstcw
movsl
and
jle
push
loopne
cmp
sti
xor
leave
dec
iret
or
fldt
sbbb
shrl
push
sub
add
lds
pop
sbb
xor
jecxz
lock
and
cmp
cld
sub
sahf
sub
cwtl
arpl
and
pop
iret
fnstcw
inc
arpl
ljmp
dec
rclb
dec
fsubrp
adcb
mov
in
inc
fwait
dec
ffree
sub
in
pop
xchg
ss
fcoms
sub
push
leave
mov
ljmp
mov
fcoml
cmpsb
sub
scas
xlat
jb
aam
mov
pop
xchg
sub
pop
dec
fnstenv
insl
jecxz
jbe
add
rcrb
sub
leave
add
inc
in
jp
sub
push
test
movsl
scas
jbe
push
adc
jl
jnp
mov
rolb
out
lods
inc
jnp
js
sbb
in
leave
pushf
loopne
std
push
xor
xchg
jo
paddw
jno
xor
and
inc
imul
lahf
xor
aaa
jae
stc
push
subb
loope
lcall
imul
pop
sub
arpl
xor
jnp
and
mov
rclb
dec
push
xor
lahf
add
pop
inc
inc
stc
xchg
shl
stc
call
stos
mov
mov
inc
fidivrl
addr16
jmp
mov
or
daa
popf
pop
or
rclb
mov
hlt
lock
loope
popf
je
mov
mov
jmp
or
fsubrl
inc
and
out
int3
loope
dec
sahf
push
push
adc
add
ret
rcl
ss
in
mov
sbb
xor
fsubs
push
shll
cmp
adc
and
dec
subl
lods
daa
stc
push
imul
gs
push
sbbl
add
dec
xor
mov
mov
jmp
push
and
jno
call
iret
popf
test
sbb
fldl
mov
fimuls
sub
xlat
outsb
subb
imul
repnz
mov
mov
inc
jno
mov
in
xchg
lods
lods
cmp
imul
repnz
push
push
jnp
imul
cltd
dec
fidivl
push
dec
roll
or
push
cmp
rorl
mov
dec
pop
fmul
cs
sub
lahf
ss
jle
arpl
adc
outsb
das
popa
and
jnp
cmp
sub
dec
jmp
jns
lret
push
mov
jecxz
xor
cmp
mov
rclb
xor
repnz
pop
lock
mov
arpl
sub
lret
loopne
loope,pn
add
jecxz
aaa
aaa
mov
jae
mov
cmp
fcmovne
lret
push
psubusb
push
ljmp
test
das
fisttpl
xor
ja
dec
test
loope
xchg
add
sub
ret
pop
sub
jnp
pop
lock
stos
sti
es
pushf
adcl
xchg
js
mov
push
sub
imul
dec
in
push
dec
jle
into
mov
push
repnz
xchg
push
mov
pop
scas
gs
mov
ss
push
jle
jl
inc
pop
mov
sbb
cmp
sbb
lcall
fs
sbb
cmp
call
mov
xor
add
jo
fsubp
es
cmp
mov
sahf
jae
add
pop
sti
shrl
dec
pop
dec
jb
pop
cmc
push
int3
pop
pop
je
push
mov
mov
mov
cmpsl
hlt
jl
icebp
in
call
jg
jge
in
mul
fidivrl
sbb
pop
dec
sub
add
pop
cmp
rcll
cmp
lret
lahf
mov
mov
dec
jle
test
mov
ret
inc
test
out
mov
cmp
push
add
jno
push
insl
cmp
test
mov
sbb
jo
in
cmp
xchg
enter
inc
sarl
xchg
jns
pop
stos
mov
movsl
fs
xchg
rol
xor
and
fsincos
incb
test
enter
add
push
popa
stos
mov
sbb
mov
popf
clc
push
pop
cld
inc
cmp
pop
push
sahf
inc
mov
mov
sub
jne
dec
js
or
arpl
lahf
mov
push
jno
fildl
xchg
hlt
jg
dec
mov
sub
push
pop
aam
test
pop
xor
lock
push
dec
and
mov
test
jge
mov
ret
movsl
mov
inc
pop
mov
stos
inc
jecxz
mov
stos
jge
adc
out
mov
mov
fwait
out
shlb
inc
sbb
pop
inc
mov
pop
fwait
push
push
das
aaa
shl
subb
jl
cmp
jnp
fimuls
mov
xchg
mov
fisubrs
push
test
call
sbb
notl
mov
pop
rcrl
add
xchg
lret
adc
in
sti
xchg
imul
stos
mov
adc
cwtl
popf
leave
or
call
push
jg
popf
lods
mov
adc
ret
hlt
imul
popa
sbb
lds
jb
pop
movsb
inc
data16
fadd
push
pop
sub
cmp
add
inc
mov
or
inc
add
or
xchg
jns
iret
mov
mov
mov
inc
sbb
and
cmc
loopne
jmp
push
lods
rcrb
xor
mov
inc
push
mov
jns
sbb
gs
mov
mov
clc
and
fidivl
test
xchg
addb
scas
addr16
or
repz
jl
call
adc
or
loopne
xchg
stc
cmp
test
in
jne
pop
mov
adc
fnstsw
cmp
ljmp
pusha
inc
cvtps2pd
xchg
lods
sbb
or
mov
inc
shrb
popa
outsb
aam
adc
dec
xchg
lods
jnp
mov
mov
fcoml
sub
bound
mov
mov
cmc
add
cmpsb
dec
mov
jg
or
cmp
mov
fists
stos
sbb
ffree
jne
mov
push
in
es
xor
pop
cmpsb
test
cmp
xchg
or
inc
pop
sub
dec
adcb
outsl
call
or
lcall
mov
mov
fmull
mov
and
push
xor
xchg
add
movsl
ficompl
in
inc
jne
xchg
xchg
movsl
adc
sbb
les
out
dec
ret
in
dec
lret
xchg
pop
dec
scas
add
jbe
mov
test
jnp
dec
stos
mov
push
sbb
loop
jo
cmp
dec
push
inc
jg
xchg
jo
pop
shlb
stos
push
or
adc
push
fcompl
lods
jb
xchg
sub
into
xorl
movsl
popf
stos
ljmp
jns
pop
mov
clc
inc
inc
fs
shlb
sub
pop
enter
cmp
and
aaa
cld
stos
push
mov
sub
pop
cs
pop
stos
and
cmp
mov
incl
imul
popf
sub
mov
scas
sub
aam
sbb
aam
pop
int
add
in
mov
pop
into
or
mov
mov
insl
mov
into
mov
jnp
imul
pop
decl
cmpsl
enter
or
hlt
dec
sub
outsl
dec
cs
outsl
in
jns
cmpsb
sbb
hlt
mov
mov
aas
lret
mov
int
data16
xor
loopne
fwait
icebp
xor
inc
sbb
dec
mov
popa
push
call
nop
xchg
lds
or
sarl
es
ss
inc
data16
ret
into
enter
push
adc
mov
adc
fsubr
lea
mov
lret
pop
es
cmpl
enter
outsb
mov
enter
insb
adc
mov
lods
out
decb
daa
mov
movsb
adc
push
inc
or
leave
pop
push
push
pop
pusha
pop
cmp
movd
jle
les
into
loope
add
mov
push
subl
outsl
lock
pushf
stc
insb
fisubs
lret
mov
lcall
inc
mov
sti
or
popf
push
enter
pusha
ss
stc
jno
sub
pop
jmp
jmp
decl
add
xlat
xchg
jno
cs
push
in
push
mov
mov
cmpsl
int3
sub
mov
iret
push
in
stos
mov
adc
pop
fsubl
sbb
stc
xor
inc
xlat
xchg
sbb
push
mov
insb
add
jne
push
es
push
adc
xchg
mov
sahf
cmp
insb
push
rorl
jmp
fidivrl
mov
dec
and
push
sub
push
das
movb
dec
cld
jno
sbb
leave
inc
repnz
and
popa
out
dec
and
ja
fs
mov
imul
test
push
in
data16
jne
mov
rcr
outsl
adc
movsb
push
sbb
jnp
insl
mov
lds
popl
dec
cmp
or
dec
lea
xchg
adc
cli
mov
insb
stc
cwtl
pop
imul
jecxz
or
sub
jnp
call
cmp
jle
cmp
out
jp
jmp
jnp
popf
push
mov
push
xor
pop
xor
mov
xchg
jl
sbb
inc
pop
hlt
pop
scas
add
in
rorb
sbb
dec
sub
xchg
scas
push
push
push
jo
cwtl
adcb
mov
loop
pop
xchg
inc
sub
sbb
loopne
sbb
rol
stc
imul
pushf
sub
sub
push
insl
mov
pop
adcl
imul
sub
xchg
sub
xchg
and
lcall
aad
stc
xchg
data16
pop
lret
push
jg
inc
pushf
fsubr
mov
mov
inc
movsl
cmp
in
sub
sbb
xor
in
loop
repz
daa
movswl
outsb
bound
push
psubb
dec
sbb
mov
lahf
pop
ljmp
loop
cmpsl
pop
and
jno
insl
enter
mov
push
arpl
add
fisttpl
ret
pop
pop
imul
in
out
in
loope
insb
mov
fmul
and
inc
xor
in
add
xor
dec
dec
pop
xchg
call
mov
xchg
jp
pusha
pop
mov
sbb
js
mov
xchg
aaa
mov
xchg
in
sbb
jnp
or
and
pop
jmp
cmpsb
dec
clc
mov
pop
fstpl
jbe
sub
mov
jp
inc
mov
hlt
mov
sbb
cmp
loopne
xchg
push
dec
pop
mov
sub
out
pop
xor
dec
aad
sarl
loopne
dec
fsubr
add
ficoms
in
je
es
sub
push
dec
dec
aas
add
sbb
cmp
out
jb
push
sahf
rclb
sahf
xlat
and
ss
data16
test
inc
adcb
out
xor
aaa
add
xlat
adc
mov
mov
lea
test
iret
loopne
add
das
pop
push
inc
lret
lret
ljmp
dec
repnz
dec
cmpsb
xchg
cmc
pop
push
dec
pop
mov
pop
es
cmp
inc
inc
mov
gs
mov
inc
scas
inc
data16
mov
scas
or
mov
xchg
ror
sbb
mov
xchg
adc
jp
sub
out
pop
xchg
pop
and
lods
repnz
push
sub
fidivs
pop
testb
mov
popf
jo
mov
add
loopne
stos
adc
or
in
stc
nop
rorl
xchg
out
push
mov
dec
dec
call
loope
sub
test
mov
arpl
dec
imul
loopne
jmp
sbb
push
cwtl
jnp
mov
sub
andb
pop
xchg
xchg
stc
popf
lods
stos
dec
mov
mov
decb
xor
cmp
mov
sbb
or
rcl
pop
es
int
push
stos
stos
enter
fmul
imul
sarl
xchg
dec
cmc
inc
std
xor
cli
cs
push
xchg
xchg
test
imul
push
xor
sub
and
andb
push
sbbb
out
push
fs
pop
push
je
add
mov
and
dec
mov
push
ss
push
push
fdivrl
nop
mov
xor
ds
sti
sub
pop
xchg
in
sbb
icebp
push
pop
divb
pop
xchg
int
mov
and
in
fsubl
or
insb
jg
shll
iret
pop
dec
add
iret
xchg
popa
insl
sbb
shll
cmp
mov
or
mov
ja
rcpps
mov
lret
or
pusha
aam
xor
leave
repnz
jbe
push
rolb
loope
and
insb
inc
mov
fwait
cmpsb
xchg
dec
cmp
rcll
bound
in
adc
int
adc
xchg
jae
ja
mov
pusha
cwtl
inc
lret
cwtl
mov
test
xchg
fsubp
dec
cli
add
push
mov
test
mov
hlt
shl
jle
cmc
xchg
add
hlt
mov
mov
add
push
hlt
and
xor
sti
push
xor
push
xchg
iret
dec
mov
call
mov
dec
into
pop
sbb
lea
notb
or
push
dec
sbb
push
rcl
shl
or
mov
fists
sbb
out
inc
cmp
jb
sub
xor
mov
stc
pop
mov
cmp
fdivrl
call
add
lcall
cwtl
xor
mov
in
dec
es
inc
sbbb
push
nop
cmp
pop
subl
shrl
adc
nop
lahf
dec
out
loopne
fstpt
add
aad
js
arpl
shrl
pop
pop
mov
mov
xchg
and
jl
pop
fdivrs
lods
icebp
int
jmp
jo
add
negl
test
imul
jno
adc
xor
mov
pusha
cmp
jnp
adcb
pop
push
pop
cld
pushf
push
push
inc
out
in
int
imulb
dec
cmp
fisttpl
mov
iret
gs
dec
xchg
sub
jge
je
inc
mov
pushf
mov
andb
add
adc
cmp
pusha
out
lret
adc
inc
dec
mov
in
lcall
mov
pop
cmpsb
test
nop
daa
xchg
jge
pushf
test
push
cs
push
xor
xor
lret
mov
mov
jnp
fs
into
repz
int
outsl
sub
incb
and
xchg
or
mov
arpl
andb
je
mov
and
stos
cmpsb
je
xlat
loope
jecxz
mov
fistpll
pop
mov
inc
xlat
sbbb
jns
ss
dec
insb
mov
xchg
sub
popf
push
pop
cwtl
cmp
jo
cmpsl
aas
jae
insb
pop
sbb
clc
andb
or
loopne
mov
dec
mov
sbb
aad
adc
mov
mov
dec
lods
xchg
in
and
lea
mov
shrl
pop
pushf
lret
lret
cld
das
inc
fwait
outsb
test
and
dec
push
scas
fiaddl
dec
push
into
push
add
jbe
shrl
mov
js
fidivrs
arpl
or
cmp
pushf
fistl
ja
push
mov
push
push
loopne
jno
pop
scas
out
into
mov
addr16
clc
pop
sahf
cmp
inc
divb
jl
sub
icebp
fidivs
add
repnz
popa
inc
call
insb
js
dec
imul
outsl
lods
inc
xor
fxch
bound
cmpsb
out
xchg
mov
push
outsl
mov
pop
fwait
cmc
pop
dec
mov
pop
jb
cmp
cli
mov
fadds
call
popf
pop
dec
test
xchg
icebp
insb
ljmp
and
dec
mov
cmpsb
mov
dec
loopne
sub
xchg
cmc
cmc
pop
pop
dec
or
lahf
dec
arpl
jge
push
jno
sbb
sbb
shl
mov
sub
stos
sbb
adc
sbb
rolb
int3
jns
sbb
push
push
lret
cwtl
cmp
cli
dec
sbb
fstps
mov
into
pop
cmp
push
movsb
aaa
push
js
push
scas
mov
shlb
or
pop
popa
jae
sbb
sbb
dec
test
inc
adcb
jae
push
out
mov
xor
shrl
out
or
js
xchg
movsl
mov
aam
xor
jnp
sarl
pop
sbb
sti
push
inc
icebp
push
pop
jle
fcomi
push
rcl
jno
xchg
clc
cli
push
dec
popf
adc
lods
xchg
jle
mov
pop
push
xorl
mov
pop
out
ja
adc
fs
inc
icebp
out
sub
and
pop
dec
push
push
stc
das
ds
fwait
mov
inc
notb
scas
cltd
jmp
adc
aaa
mov
or
ja
and
push
mov
jmp
icebp
test
cmp
sbb
lahf
xor
lcall
mov
sbb
cld
lcall
mov
or
push
jmp
shr
fisttpll
adc
sub
daa
pop
xor
cmp
xor
loopne
ds
xor
enter
sub
lret
popa
cmp
dec
iret
popa
pop
call
or
push
mov
enter
inc
mov
addb
stos
imul
mov
jmp
push
test
push
fwait
test
mov
mov
sti
push
cmpsb
fadds
adc
stc
lea
andl
insb
inc
sarl
repz
fimull
mov
mov
push
mov
mov
jecxz
mov
fcoml
mov
arpl
call
mov
mov
daa
and
mov
fwait
pop
int3
sarb
leave
pop
jg
xchg
pop
cmp
jno
jmp
pop
loopne
pop
lret
ret
fnstenv
mov
hlt
inc
lcall
mov
mov
push
xor
sar
jg
pop
popa
sbb
ret
sub
daa
jg
movsb
enter
mov
mov
js
and
jp
call
cmpb
xchg
cmpsl
mov
mov
dec
mov
xchg
adc
push
lods
xor
roll
or
mov
cltd
xchg
inc
fidivs
xlat
gs
push
sbb
mov
xor
rorb
fisubrs
mov
sbb
lods
push
sub
and
in
pop
add
es
loopne
into
push
and
push
bound
fstps
cmpsl
xor
call
mov
sti
daa
outsb
add
jne
mov
test
cmp
ja
xor
je
ret
rcrl
popf
int
mov
mov
sub
or
mov
fisubrs
push
nop
add
daa
xlat
push
test
inc
fwait
sti
jecxz
into
and
or
lods
daa
fisubl
xor
not
sub
inc
call
pop
push
push
fnstsw
push
pop
fisttps
mov
push
fcmovb
loopne
add
inc
push
add
xchg
adc
jmp
imul
out
mov
or
hlt
movsb
dec
pusha
ret
xchg
add
cmpsl
repnz
lock
mov
shrl
fimull
mov
ret
fsubl
sub
sub
test
cmpsl
mov
mov
fdivl
sbb
or
push
outsl
add
mov
jb
test
out
rcrb
jae
push
aas
mov
mov
rcrb
adc
repz
leave
dec
pop
push
arpl
xchg
loope
pop
adc
sarl
testb
jecxz
lret
dec
sub
add
mov
sbb
or
iret
les
repnz
imul
iret
sub
in
scas
jno
and
mov
call
leave
dec
sbb
mov
lds
mov
mov
test
dec
aad
stos
fsts
inc
rsm
xchg
out
lock
jno
adc
inc
xchg
pop
scas
adc
add
xbegin
adc
pop
xchg
out
inc
outsb
mov
out
cmp
and
loopne
and
push
jmp
aad
sbb
jo
xchg
sbbl
insb
sub
iret
popa
cmp
bound
fwait
xor
adc
mov
cmc
dec
pop
les
push
xchg
inc
mov
mov
push
cmpsb
mov
rolb
enter
scas
push
popa
out
lahf
lods
in
test
shr
jg
jbe
dec
ss
mov
daa
imul
imul
jo
xchg
cmp
out
mov
dec
dec
lret
add
dec
mov
push
pop
xchg
clc
xchg
xlat
movsb
mov
jecxz
mov
pop
mov
inc
mov
sbb
dec
dec
lods
outsl
mov
pop
cmp
out
push
fisubs
mov
fidivl
fs
or
ljmp
xor
leave
adc
mov
mov
push
or
and
fistps
jle
sti
in
fs
jle
subb
and
jge
outsl
insb
js
in
xchg
sahf
inc
mov
pushf
pop
cmp
popa
add
movsl
repnz
mov
cmp
jne
jo
xor
insb
mov
cld
stos
add
out
mov
iret
xlat
out
fmulp
aam
push
out
dec
clc
lods
mov
sub
add
dec
negl
leave
fs
lret
and
sahf
jp
ljmp
mov
jae
adc
out
cmc
jbe
add
xor
xor
jge
test
adc
xor
test
jg
repz
iret
lret
push
cmp
sarb
std
lods
pop
in
mov
push
inc
fldenv
fwait
inc
adc
mov
cmpsb
sub
pushf
mov
dec
mov
das
sbb
jns
xor
in
fs
dec
das
cmp
mov
mov
push
movsl
pop
cltd
lods
xchg
cmpsl
mov
mov
jno
adc
fcomps
test
push
sahf
sub
mov
popf
stc
push
add
mov
loopne
aas
in
pusha
jb
add
test
mov
mov
cmp
mov
and
cmp
jl
cmp
xchg
adc
mov
or
pop
cmp
fwait
mov
xchg
stos
arpl
sbb
sub
aad
jmp
lods
cmpsb
cmpsl
lds
and
and
sbb
push
jns
fwait
stos
pop
int
call
add
xlat
jo
std
aas
push
insl
bound
xchg
push
test
jb
test
fstpl
xlat
push
mov
or
mov
pop
push
outsb
icebp
test
dec
pop
imul
xor
inc
movsb
cmp
shll
adc
pop
inc
test
and
outsb
leave
int3
aad
into
dec
rcrl
or
ffree
mov
js
dec
loopne
sbb
addr16
pop
inc
cmp
ja
sbb
imul
jg
scas
mov
dec
add
ss
adc
test
fistps
sub
add
or
lea
cmc
xchg
xchg
mov
mov
addr16
scas
push
adc
dec
js
sbb
add
jle
sub
pusha
jns
mov
fisubrl
loope
cmp
popf
or
push
movsb
mov
and
adc
or
mov
mov
into
aad
cmp
aam
jae
leave
hlt
mov
jle
daa
movsb
neg
push
dec
and
cmpsb
mov
ss
ret
mov
ficompl
rcl
and
mov
or
lods
jg
lock
movsb
pop
test
ret
scas
mov
mov
xchg
pop
adc
and
sub
and
sahf
pop
sbb
pop
sbb
sahf
inc
pop
clc
pop
sub
shrl
stos
ret
push
jmp
or
add
cmp
mov
xchg
push
nop
and
dec
jno
test
xor
imul
push
mov
sub
lcall
and
adc
mov
lahf
test
mov
in
mov
push
fs
dec
mov
or
fsubrp
or
hlt
push
mov
pop
jb
cmp
dec
in
mov
lret
leave
ja
xor
out
dec
stos
rep
shll
or
jb
scas
mov
xchg
jno
mov
fsubl
pop
call
into
rolb
sub
and
and
fdivrs
adc
popa
cmc
pushf
addr16
imul
mov
and
and
inc
xor
xchg
pop
outsb
xor
pop
cmc
add
inc
int3
xor
shrl
sbb
dec
jecxz
lock
push
jp
mov
loop
xchg
inc
inc
push
sbb
jl
cwtl
push
fldt
push
mov
loope
cs
in
aas
lret
popa
push
sar
sahf
sub
cmpsb
xor
in
addr16
arpl
lret
or
and
push
and
add
outsl
push
sbb
sub
loopne
sub
pop
push
mov
xchg
sub
mov
cmp
movsl
inc
out
cmpsb
mov
ficomps
call
ja
mov
lods
cmpsl
push
mov
xor
movb
mov
fcoml
mov
xchg
pop
push
and
jae
inc
test
ljmp
push
in
add
pop
pop
scas
mov
test
in
popa
cmc
mov
cmp
xchg
pop
mov
scas
and
int
call
jne
push
lahf
mov
pop
call
popf
mov
pop
rcl
dec
push
xchg
sub
scas
xchg
insl
jb
insl
dec
mov
pop
dec
pop
je
push
jbe
sbb
xchg
adc
fnstenv
popf
push
mov
fwait
outsl
sbbb
out
mov
mov
xor
adcb
mov
mov
add
xchg
dec
dec
push
lds
loop
lret
sbb
and
mov
mov
jmp
call
movsb
cmp
fs
or
test
push
sbb
or
cli
mov
movsb
pop
lock
inc
mov
xchg
inc
or
or
ror
xchg
add
gs
test
loopne
xchg
add
in
cmp
sbbl
push
outsb
add
daa
bound
orb
xchg
jb
nop
lahf
cmpsb
xchg
pop
cmp
sub
adc
and
sbb
aam
cwtl
std
orb
jl
lods
fwait
or
loope
sbb
sbb
or
shrl
rclb
xor
pop
cltd
add
les
inc
sbb
dec
cs
stos
fadds
cwtl
fldln2
adc
inc
sbb
jmp
aaa
pop
xchg
jb
pop
jo
jnp
mov
mov
xorl
jle
pop
enter
push
and
sahf
inc
push
das
in
das
or
sbb
sub
jnp
mov
pusha
sbb
mov
dec
xchg
pop
push
gs
movsb
ja
xchg
mov
pushf
ficompl
mov
ljmp
inc
inc
jmp
push
push
jmp
aaa
adc
in
das
inc
jg
sub
push
popf
xor
movsb
lahf
nop
popf
jo
mov
loope
das
adc
cmc
jae
add
ficompl
mov
scas
ret
inc
push
push
adc
mov
sarb
push
add
cmpsb
lock
push
sbb
out
sub
pop
cmp
shr
push
lcall
sbb
cmp
mov
adc
pop
movsb
push
pop
xlat
push
std
and
xor
dec
xchg
xor
dec
sahf
xor
cmp
xlat
pop
fsubrl
loop
sahf
ficoms
or
xchg
pop
je
xor
adc
pop
and
outsl
lods
mov
test
int3
mov
rorb
pop
rorl
lret
jg
push
cmp
lret
lock
mov
pop
test
sub
xor
fimuls
fildl
pop
push
add
shrl
iret
xor
adcb
sbb
es
arpl
enter
insb
fldl
sahf
in
pusha
ss
rcr
push
call
call
inc
in
push
outsl
repz
cmpsb
and
mov
xor
adc
xor
pop
dec
lcall
sub
mov
cs
sub
repz
push
push
cmp
or
dec
xor
cld
inc
aam
in
in
inc
sub
aaa
pop
dec
or
imul
sbb
test
push
andb
jge
adc
mov
lods
jle
scas
leave
cld
cmp
call
cmp
jae
pop
and
and
mov
popf
xor
test
xchg
add
mov
lea
aaa
cmp
loop
jns
xchg
pop
and
sbb
adc
xlat
pushf
mov
adc
repnz
popa
adc
mov
pushl
sub
and
js
push
sub
pop
dec
movsb
xchg
inc
pop
lcall
into
stos
mov
sub
and
roll
nop
or
sub
scas
mulb
mov
mov
adc
dec
jg
shr
rorl
pop
pop
and
lods
push
orb
hlt
pop
cli
lods
or
popa
rcl
jns
andb
add
iret
pop
adc
pop
mov
push
push
sbb
ret
ret
mov
pop
cmpsb
mov
push
push
nop
test
xchg
decb
mov
int3
dec
js
push
or
je
movsb
add
sub
aad
insl
outsl
push
xor
nop
lcall
dec
clc
jg
pop
in
int3
fwait
add
or
xchg
jns
std
cmp
push
es
or
out
cmp
inc
lea
data16
clc
mov
pushf
xchg
sbb
mov
in
jg
push
and
jl
add
es
fs
insl
aad
xor
cmp
fcom
fstl
mov
sbb
lods
push
cmp
pusha
rclb
push
mov
fsubrl
es
push
lret
mov
xor
fistpll
in
cwtl
sub
aad
pop
pop
pop
add
pop
pusha
in
loopne
pusha
testl
jle
xchg
ds
addl
popa
push
popf
jbe
fbstp
sbb
mov
mov
and
xchg
pushf
arpl
push
jne
mov
rcrl
ret
out
cmp
popf
outsl
sahf
movsl
rorb
jmp
and
fldenv
shrb
andb
pop
jle
sbb
cwtl
adc
pop
je
lahf
subb
pop
out
xor
mov
cmp
in
test
rcr
xlat
fisttpl
add
inc
dec
aaa
bound
mov
xchg
adc
pop
sar
push
sbb
lret
jno
std
or
in
xchg
test
cmp
push
bound
js
adc
cmpsl
mov
adc
jae
notb
ja
nop
sub
or
jbe
mov
fists
cmp
xor
push
aam
stos
jne
jno
gs
idivl
popa
mov
cmp
int3
pop
fistpll
je
lahf
push
ret
lods
test
outsb
push
divl
aas
inc
popf
push
dec
mov
adc
repnz
dec
xchg
cmp
mov
dec
mov
jbe
xchg
rclb
pop
mov
pop
in
mov
cmp
test
fnstenv
dec
adc
mov
jle
push
dec
sub
out
sbb
push
mov
jnp
daa
adc
scas
sti
fwait
test
mov
mulps
inc
in
adc
adc
xchg
push
mov
je
push
not
mov
sti
fwait
push
sbb
jmp
push
aaa
scas
out
mov
sbb
popa
and
repnz
dec
pop
fwait
mov
js
jmp
mov
xor
xchg
xchg
or
scas
dec
shrl
stc
mov
mov
add
mov
int
xor
loopne
pop
movsl
bound
jnp
jno
xor
xchg
and
jb
out
xchg
dec
pop
mov
in
sbb
sahf
inc
stos
xchg
mov
icebp
cmp
je
rclb
aaa
xor
and
sti
lods
inc
and
jmp
pop
lock
sar
cmc
mov
push
lahf
mov
hlt
icebp
sbb
mov
test
mov
xor
stos
cld
push
lock
xchg
and
lahf
ss
insb
fcomps
fucomi
ja
dec
pop
lds
addb
in
movl
push
clc
rcrl
xor
shll
xor
cmpsb
pop
jo
mov
or
sbb
xchg
jno
mov
xchg
lods
movsb
jle
leave
xor
push
cmp
test
adc
cmp
mov
ss
sti
pop
push
xor
cmpsb
xor
mov
push
and
jmp
movsl
sbb
cmpsl
ret
jl
in
scas
sbb
pop
jb
cmp
sbb
cmp
aaa
ficomps
pusha
pop
xor
cmpsb
mov
pop
movl
stos
mov
arpl
sbb
xor
shll
cmpsl
mov
adc
jb
xchg
or
jle
insb
sub
and
jae
sub
fcompl
mov
xor
jecxz
les
mov
dec
daa
rcrb
stc
loop
add
push
repz
mov
rclb
mov
dec
mov
jg
sub
xchg
xchg
pop
or
add
jecxz
push
mov
imul
lea
roll
rol
or
adc
jb
loop
mov
lods
pop
inc
in
or
jmp
or
push
and
cli
or
repz
sbb
jl
mov
fcoml
pop
jg
xlat
mov
push
cmpsb
add
jns
adc
rol
pusha
outsl
cltd
cmpsl
or
jle
jb
repz
xorb
jns
sbb
add
je
cwtl
or
mov
stc
adc
push
xchg
push
in
scas
lret
pop
cld
testl
sub
popf
add
and
xor
fs
sub
fs
popf
add
les
inc
pusha
cs
push
jecxz
ds
pop
das
sub
jb
movl
aas
mov
fadd
pushf
mov
pop
jmp
fwait
aas
popf
stc
icebp
push
push
adc
xchg
dec
pop
inc
sti
inc
out
jne
iret
push
ja
adc
aas
dec
cmpsb
cld
ja
ljmp
lea
add
inc
sti
add
outsl
push
or
push
push
cwtl
push
xor
xchg
pop
hlt
insb
pop
fistpll
push
fstps
pop
std
inc
push
test
mov
sbb
aaa
repz
xor
inc
flds
adc
sbb
and
jb
cld
cltd
subl
inc
fisubrs
ret
jae
jns
das
jo
mov
mov
mov
ret
mov
dec
repz
and
sub
lahf
stos
add
adc
or
int3
mov
fwait
sub
dec
jmp
js
and
rcll
jecxz
mov
inc
push
mov
or
loope
xor
xchg
xchg
flds
add
mov
push
mov
jo
dec
add
sbb
pusha
jl
add
xor
pop
mov
jae
cli
and
in
inc
sbb
inc
mov
dec
rclb
lds
mov
je
push
xor
adc
sbb
dec
ds
mov
sarl
xor
mov
loop
jns
sbb
cmp
sti
xchg
imul
out
dec
test
mov
stc
js
orb
cmp
call
pushf
inc
dec
cwtl
std
mov
pop
ret
bound
xchg
xor
and
es
nop
int3
jo
mov
xchg
adc
or
jnp
ja
pop
inc
cmp
aam
xor
leave
daa
jbe
pop
addb
hlt
xchg
mov
mov
and
push
mov
pop
adc
sbb
rcrl
jp
addb
out
sahf
or
loopne
mov
sbb
dec
es
mov
and
out
lds
mov
out
add
aaa
ret
add
std
adc
inc
push
pop
jae
into
push
sub
and
mov
xchg
shr
lahf
and
sahf
data16
popf
mov
and
or
pusha
push
outsl
jns
push
sbb
mov
dec
stos
push
jecxz
jecxz
jl
daa
das
or
cmp
mov
and
mov
pusha
xchg
clc
ja
xor
cmp
jo
in
dec
pop
ret
lds
mov
mov
popa
xchg
std
push
push
adcb
imul
or
lret
mov
ljmp
xchg
shl
jge
cmp
pop
lret
jns
and
push
in
jle
and
or
add
push
jp
pop
ljmp
test
inc
mov
je
dec
pop
jne
push
jne
mov
mov
sbb
ret
jl
ror
sbb
push
xorb
xchg
jmp
mov
xor
je
xchg
inc
lret
push
sbb
jns
insb
mov
fmul
add
outsb
dec
push
int3
jnp
xchg
cmp
pusha
int3
cmp
fld1
jg
inc
push
jae
sub
mov
in
xchg
xor
scas
mov
movsb
les
loop
add
add
adc
inc
inc
hlt
test
push
outsl
stc
cmpsb
pop
icebp
xchg
pop
test
push
jg
inc
fsubl
mov
fidivrs
mov
mov
outsb
mov
repz
test
xor
xchg
dec
pop
test
dec
jecxz
jmp
sub
xor
mov
xchg
out
jno
ja
pop
test
jl
js
out
fsts
gs
mov
or
xor
xchg
into
and
mov
out
and
and
mov
out
out
test
or
hlt
lret
pop
sub
pop
shrb
adcb
fcoms
adc
pushf
dec
gs
cmp
cli
xchg
rcr
loop
pop
call
rorb
je
loopne
out
pop
lret
dec
or
fwait
popa
repz
sub
xor
sub
add
jne
jb
jl
push
in
ja
cmp
shll
clc
jecxz
jne
pop
test
dec
add
iret
pop
push
icebp
inc
adcl
adc
stos
outsb
lret
fs
and
xor
pop
dec
in
xchg
dec
sahf
or
aaa
cmp
sub
xchg
pop
pushf
je
jmp
or
mov
mov
jmp
rcl
mov
js
mov
and
mov
das
test
pusha
ret
insl
rorl
clc
adc
out
mov
mov
ljmp
jecxz
movsl
dec
cmpl
lret
push
pop
xlat
out
call
mov
fsts
inc
cli
arpl
sbb
hlt
xor
xor
fistps
sarl
cltd
enter
icebp
pop
ljmp
ds
pop
pushl
insl
decl
in
or
and
dec
cmp
mov
jnp
dec
sub
imul
inc
popaw
loopne
jns
sbb
mov
outsl
fists
cmp
pop
js
jl
ret
es
mov
dec
jno
scas
clc
push
lcall
cmp
orl
mov
add
xlat
sbb
mov
mov
aam
cmp
xchg
xor
cld
sub
xchg
sahf
mov
out
clc
cli
sub
xorl
leave
jmp
jge
add
shll
pop
sub
sbb
outsb
xchg
dec
pop
lcall
mov
and
stc
rol
fists
or
addr16
ret
jg
pop
dec
pop
xchg
fs
movsb
sbb
loop
ret
xor
xchg
xchg
outsl
les
popa
mov
aam
loop
sbb
in
cmp
lock
dec
into
loop
add
adc
and
jae
cmpxchg
shrb
jl
aas
outsl
jg
adc
push
mov
fwait
icebp
imul
mov
mov
mov
jne
rol
push
and
mov
lods
cmp
or
movsl
cmp
sub
dec
call
aam
dec
shll
sbb
mov
pop
mov
jp
xor
mov
cmpsb
pop
les
sahf
add
adc
jecxz
push
icebp
sarl
int
rcrl
dec
and
cltd
jne
adc
shll
imul
jle
jnp
jb
cmp
ljmp
mov
inc
fdivrs
sahf
jecxz
loop
loope,pt
xchg
pop
mov
imul
imul
cwtl
inc
add
cmp
jno
push
sub
push
inc
pop
cmpps
mov
jns
jb
or
jl
cmp
jle
movsl
jecxz
xchg
pop
dec
dec
out
cmp
enter
ficoml
pop
js
out
add
aam
pop
xchg
xor
mov
add
int
dec
push
insl
mov
cmpsl
ja
fsubrs
sbb
and
fwait
test
jmp
or
negb
adc
jbe
into
mov
ret
ret
movsl
icebp
mov
cltd
loopne
leave
lods
outsb
inc
in
pushf
lock
outsl
jecxz
stos
inc
xchg
push
movlps
aaa
enter
mov
das
or
ljmp
cmovle
inc
cltd
push
call
shll
sbb
dec
push
pusha
repz
cmp
js
loope
push
mov
add
mov
sub
rol
rcrb
or
pop
pop
jg
mov
icebp
xchg
imul
cmp
jecxz
inc
bound
es
or
sub
mov
andl
and
push
mov
fistps
sub
mov
leave
in
iret
mov
xchg
jbe
jp
mov
popf
xchg
shll
or
mov
push
xlat
lods
pop
lret
push
out
or
bound
lahf
in
add
mov
aam
ja
shl
cmp
pop
movsb
mov
stos
sub
test
cmpsl
jns
mov
es
jle
pop
lea
js
inc
fs
push
ljmp
pushf
sub
pop
mov
or
rorl
dec
psrlq
fldcw
sbb
push
in
es
jo
and
hlt
jne
insb
mov
mov
pop
push
push
test
loopne
pop
test
xor
loopne
jp
xchg
add
sbb
adc
fisubl
sbb
test
test
push
mov
push
push
sub
adc
jbe
mov
inc
sahf
sub
jmp
sarb
push
mov
jns
in
movsb
or
push
pop
ret
mov
or
or
xchg
push
mov
xor
mov
leave
gs
push
xchg
mov
jns
xchg
xchg
and
jmp
aad
cmpl
outsb
movsb
lods
cmp
js
pushf
inc
dec
add
jle
fwait
sti
inc
inc
out
test
lds
and
fdivp
into
movaps
rcrb
sub
pop
pop
mov
das
mov
mov
add
imul
mov
jnp
sbb
dec
scas
and
pop
out
out
jg
push
les
ja
test
dec
push
sub
push
sarb
fucomp
imul
sbb
outsb
and
xchg
repnz
add
jg
vminps
shrb
je
incb
je
jno
out
inc
push
adc
adcl
pop
fstpl
lea
dec
inc
cmpsb
pusha
neg
xchg
adc
icebp
lods
jle
mov
bound
pop
xchg
test
sahf
ret
jae
ljmp
lock
cld
mov
adc
xor
aaa
sbb
pop
insl
popf
inc
jp
inc
subl
cmp
or
sbbb
mov
daa
shll
dec
jg
inc
ljmp
push
sub
cmc
inc
push
and
sbb
movsl
sbb
divb
jecxz
call
in
mov
enter
rclb
cmp
out
and
xor
bound
pusha
push
xor
or
xchg
je
fnstcw
jmp
or
jle
push
sub
insl
cmc
xchg
hlt
jo
fdiv
mov
mov
into
in
idiv
pushf
xor
mov
cmp
imulb
inc
jae
inc
cmc
movsl
cld
stos
push
or
adc
or
sub
jle
push
fbstp
jbe
rol
popl
dec
out
xchg
enter
push
pop
dec
pop
out
xchg
imul
test
popf
cmpsl
dec
std
and
pop
mov
fnstenv
mov
lret
lock
fmulp
xor
repnz
push
test
inc
mov
dec
lods
or
ljmp
ljmp
or
pop
inc
lods
ficoml
xchg
sahf
dec
xor
inc
jmp
lcall
jmp
loope
sub
xchg
inc
hlt
and
iret
or
int
sbb
sbb
jo
sub
je
mov
push
inc
pop
js
pop
fdivp
jge
std
das
inc
test
cltd
in
xor
xchg
sub
insb
cli
loopne
inc
adc
lea
enter
push
xlat
xlat
cmpsl
sub
fdivr
dec
lahf
outsl
divb
fstpt
fsubl
dec
pushf
std
push
inc
outsb
sbbb
je
jp
xchg
sbb
mov
jp
dec
mov
das
cmp
rcrl
pop
lret
ret
ret
pop
cmp
sahf
jbe
dec
add
sub
iret
cmc
mov
rcll
jle
les
cmc
xchg
add
test
fidivl
stc
mov
nop
add
shlb
xchg
in
jecxz
jo
push
shr
test
faddl
lret
sti
mov
pop
pusha
testl
ftst
pop
xchg
stos
cmp
stos
add
in
mov
jle
mov
inc
cmpsl
test
pop
jno
dec
addr16
push
and
xor
pop
movsb
add
xor
loope
in
xchg
pusha
aaa
pop
add
and
out
inc
mov
mov
dec
mov
add
lret
jecxz
adc
inc
out
in
xor
dec
subb
dec
fwait
std
aam
and
sbbl
pop
push
das
ss
mov
inc
mov
insb
movsl
sbb
imul
xlat
xor
call
lea
in
pop
xchg
out
sti
lock
add
insb
adc
fisttpll
mov
fnstsw
shrb
daa
cli
sti
pop
les
cld
setne
fiaddl
mov
inc
es
jecxz
sub
in
cmp
xor
fistl
andb
fucomp
mov
movsl
data16
sub
shlb
out
int
mov
inc
sbb
mov
xchg
cs
in
pop
dec
mov
pop
repnz
std
sbb
sub
icebp
movsl
add
test
adc
leave
jno
jns
dec
test
jl
and
loopne
cmc
or
rol
lret
out
cmc
add
cwtl
sbb
add
add
arpl
push
dec
cmp
clc
or
dec
cmp
lret
xchg
add
push
pusha
aas
push
xchg
jbe
mov
mov
lret
mov
xchg
test
mov
cltd
stos
and
jnp
sbb
add
movsw
mov
sbb
leave
jbe
mov
dec
fcmovb
mov
pop
vmread
mov
out
lret
jns
std
shlb
mov
dec
movsb
xchg
ja
fsub
test
mov
jb
scas
fs
cli
and
sub
icebp
mov
nop
and
dec
insb
add
aaa
jbe
pop
test
fistpll
mov
pusha
fnstenv
push
lret
xor
fs
push
rorl
call
cli
test
ret
mov
loope
xor
icebp
xor
xchg
push
ret
xor
mov
mov
cwtl
arpl
into
loope
push
adc
js
test
das
mov
fnsave
adc
movsl
adc
aaa
sub
sbb
adc
sbb
test
lahf
mov
popa
rolb
lock
mov
movsb
lret
cld
ret
mov
cmc
popf
pop
lret
cmpsb
sbb
add
pop
arpl
andl
sbb
bound
cmpsl
setno
jb
aaa
stos
add
jnp
fidivs
in
mov
adc
lret
inc
fidivrs
loop
iret
jno
loope
cmpsb
popa
nop
and
mov
sbb
in
and
loopne
imul
sub
push
mov
in
jb
fisubrs
stos
testb
jp
inc
shrl
out
sbb
cmp
inc
flds
add
stos
push
lods
sub
or
pop
mov
hlt
mov
lret
inc
cmp
xchg
dec
test
ja
jg
mov
out
jns
es
inc
fsubr
out
add
push
test
xchg
inc
in
aam
fwait
or
and
out
jl
mov
les
adc
rorb
add
shll
pop
arpl
sub
sbb
pop
daa
mov
mov
dec
and
inc
out
cmpsl
jmp
or
sarb
loopne
mov
sbb
lahf
ret
rcrb
inc
sbb
cmc
pop
jo
add
negl
stos
in
mov
repnz
mov
mov
popa
xor
shl
mov
inc
xchg
stos
push
pop
popa
hlt
in
xchg
adc
mov
paddsw
push
xor
xor
test
pop
js
dec
inc
jns
add
stos
stc
lcall
or
sbb
add
ret
push
mov
pop
iret
jo
add
lahf
pushf
pop
fcomip
push
std
adc
jge
push
jbe
out
sub
cwtl
fucomp
enter
push
ljmp
rcrb
int
inc
cli
jne
dec
jp
ds
hlt
mov
and
push
andb
fdivl
pop
orl
fisubl
jl
inc
faddl
xchg
dec
pmaxsw
xchg
das
fcom
pop
pop
mov
call
sti
rclb
cld
stos
mov
popf
clc
lods
shrb
repnz
dec
cli
push
mov
ror
cmp
dec
push
jno
jl
pop
push
test
shr
lret
adc
sti
mov
cmpsb
cmpl
int
xchg
sub
adc
shl
pop
movl
xchg
or
inc
sti
cmpsb
dec
out
jns
dec
push
sub
xchg
shl
xchg
outsl
ljmp
inc
fmuls
pop
mov
lret
jnp
imulb
dec
jge
push
ja
pop
insl
pushl
dec
sbb
cltd
mov
jge
add
cs
les
int3
shrb
in
adc
mov
jnp
inc
dec
adc
clc
cmp
inc
xor
mov
mov
push
dec
sti
out
and
jle
popa
idiv
sbb
rcrl
rol
cmpsb
push
jbe
add
mov
cmpl
push
xchg
shl
mov
add
imul
mov
decb
filds
test
scas
hlt
mov
push
iret
mov
xchg
adc
sbb
daa
cli
mov
cmp
and
push
arpl
jmp
or
push
std
pushf
add
jae
test
scas
sbb
mov
jb
insl
mov
ret
cwtl
fmulp
sub
xchg
je
mov
out
jb
fiaddl
cli
add
test
aam
cmpl
adc
lcall
pop
adc
mov
scas
out
pop
xlat
mov
lcall
or
sbb
repnz
popf
arpl
lock
cmp
stos
ss
int3
or
cmc
scas
mov
das
sub
stc
cmp
mov
loop
out
mov
inc
push
call
sbb
dec
mov
incl
mov
pop
fs
jbe
jo
pop
mov
aaa
fucomi
jmp
in
jg
push
or
pop
add
push
xor
jbe
sbb
mov
sbb
shlb
dec
and
mov
mov
jl
push
lods
aas
xchg
mov
test
repz
dec
roll
push
stos
cmp
pop
mov
insl
mov
cs
push
movl
jg
stos
pop
cmp
ss
out
dec
mov
push
or
mov
add
js
negl
imul
jle
push
popf
rol
pusha
dec
aas
xchg
pop
cltd
insb
xchg
xchg
jp
pop
adc
adc
add
out
repnz
and
or
mov
pop
lahf
mov
xor
ss
ja
mov
leave
je
pop
push
push
in
nop
and
nop
daa
xchg
pop
xchg
fs
add
add
lods
iret
imul
lret
push
scas
inc
aaa
lahf
loopne
dec
fisttps
lahf
adc
xchg
jl
fwait
sbbl
mov
mov
outsl
and
xlat
mov
mov
enter
cmpb
adc
punpckhwd
adc
insb
out
addb
cmp
xor
sbb
ja
lret
aas
xchg
sub
mov
insl
xchg
lods
rcrb
fdivl
fbstp
fsubs
dec
inc
std
xor
xlat
pop
ja
xchg
pop
push
mov
movsl
sbb
adc
addr16
aaa
ror
add
shl
push
dec
sarl
mov
xchg
in
aam
shll
inc
mov
enter
pop
repnz
or
lret
pop
cmp
cmp
jg
lds
adc
ret
pop
sub
xchg
loop
push
fwait
dec
lock
repnz
fwait
out
sub
enter
mov
mov
dec
popa
iret
jp
sub
xchg
fmull
mov
xorps
sub
sub
dec
enter
outsb
inc
ljmp
call
pushf
clc
stos
mov
aas
xor
out
xor
inc
push
inc
das
mov
add
xor
push
mov
das
sub
sub
repnz
pop
xorb
cmp
jmp
jbe
int3
imul
cmpsb
cmpsl
pop
fs
mov
lahf
aas
lea
jl
mov
xchg
jmp
push
push
divb
enter
mov
inc
push
mov
xor
push
inc
fstpl
inc
fisubl
jp
sub
mov
mov
stos
or
mov
test
xor
pop
in
mov
cmp
add
push
sahf
pop
sub
ja
pop
xor
mov
loopne
push
dec
add
push
and
rcr
inc
mov
mov
sbb
bound
sub
pop
insl
les
insl
dec
pop
dec
loope
lods
in
pop
adc
jne
jae
stos
push
dec
loopne
les
dec
out
mov
adc
pop
cmp
stc
sub
mov
xchg
xchg
push
mov
mov
lret
test
mov
es
add
mov
rcrl
dec
dec
int3
loopne
lea
rolb
adc
sbb
lds
std
jmp
mov
rcrl
inc
add
inc
xchg
inc
mov
mov
dec
loope
inc
sub
xchg
sub
mov
jle
jb
jae
xchg
ljmp
sti
adc
out
push
dec
xor
pushf
lcall
push
push
add
sub
xor
or
push
cli
ds
mov
xchg
outsb
mov
sbb
lds
aas
pusha
leave
xorb
out
dec
push
sahf
xor
fwait
sahf
and
aad
aam
call
fimuls
jbe
movsb
imul
repnz
xor
cmp
ror
lods
cmp
pop
sbb
mov
sub
push
xor
psrad
push
int
push
xor
add
lret
mov
jb
gs
pop
aam
pop
insl
loopne
adc
sbb
cmpsb
sbb
add
bound
lahf
push
pop
jmp
lret
cld
loop
adc
add
shrb
int3
jl
sbb
push
sbb
gs
lahf
xchg
mov
add
cld
arpl
vpacksswb
mov
or
imul
enter
mov
call
jne
sbb
and
dec
dec
in
aas
idivl
mov
orl
jp
cmp
sub
dec
pop
xor
sbb
mov
fists
push
mov
subb
sbb
push
outsb
jl
mov
sub
iret
mov
or
loopne
sbb
loope
xor
sub
jbe
sahf
cmc
and
mov
lcall
es
xor
or
mov
pushf
imull
pop
lahf
xor
cmp
jecxz
pop
dec
xchg
or
popa
in
std
xchg
push
outsb
loope
daa
cmpsb
push
xor
orb
sahf
dec
jns
icebp
mov
movsl
jo
jo
test
aam
and
cld
popf
sbb
jae
and
add
mov
call
xor
jg
cmp
nop
jns
pop
sbb
inc
ja
xlat
push
cmc
fwait
or
xchg
outsb
dec
xor
dec
sbb
ds
rcr
mov
pop
jno
shl
loopne
push
xor
jo
mov
adc
or
jns
add
scas
rol
aam
addl
cmp
pop
mov
pop
jae
mov
ja
mov
mov
insl
mov
aaa
sbb
push
lcall
pop
xchg
xchg
popa
andl
sub
sub
fstpt
lcall
into
sbb
sub
lods
and
cmp
int
jg
add
jecxz
sub
mov
mov
jbe
pop
sahf
inc
push
sub
or
adcl
repz
sbb
out
das
in
mov
xchg
ss
or
orb
cmp
pop
je
loop
push
leave
xor
popa
xor
pop
and
std
xchg
push
or
dec
mov
mul
add
xchg
popa
and
scas
lods
dec
sahf
adc
ret
sub
sbb
dec
dec
jecxz
out
rcrb
jmp
push
loopne
popf
cmc
mov
sub
and
xor
mov
mov
pusha
jl
cmpsl
ret
imul
ljmp
pusha
imull
inc
sbb
xor
rorl
aad
jno,pn
ret
into
or
icebp
lods
daa
mov
push
aad
out
push
decb
lret
fidivs
pop
jae
pop
inc
cmp
push
ljmp
fmull
cmp
scas
jns
and
push
stos
jmp
outsl
scas
push
dec
cmp
mov
outsb
mov
rcrl
pop
and
ss
inc
xor
js
add
ucomiss
adc
into
mov
cmpsl
add
mov
add
sbb
push
inc
out
mov
mov
jl
adc
imul
ret
mov
pop
or
sbb
xlat
cmp
mov
dec
movb
dec
xchg
lcall
jns
pop
mov
or
sbb
int3
lea
pop
jne
fwait
or
enter
cmc
mov
fucomp
sti
fldl
repz
repnz
mov
mov
mov
shr
lcall
cmp
loop
ret
ljmp
gs
lock
repz
fldenv
jle
inc
js
dec
sbbl
in
xchg
adc
das
or
imul
jmp
jb
lea
sbb
and
shlb
subb
addr16
hlt
pusha
inc
xchg
cmpsb
pop
outsb
fstps
push
cmp
jmp
loopne
xor
inc
pop
sub
arpl
lahf
add
int
push
test
mov
xchg
xor
mov
pusha
movsl
outsl
push
out
add
cmp
dec
pop
cli
shl
mov
and
xor
and
inc
cmpsl
push
dec
rcl
cld
sbb
daa
in
fnstenv
mov
aas
jnp
stos
in
aad
leave
pusha
mov
push
out
test
adc
ficompl
push
mov
popa
mov
cmp
std
jmp
xchg
pop
adc
jbe
insb
lret
popa
mov
cmpsb
je
inc
lahf
mov
sbb
dec
push
push
fucomip
scas
push
mov
fnstenv
scas
sub
rol
inc
stos
jle
pop
addr16
mov
and
mov
push
adcb
xorl
aas
int
sahf
cmp
pop
sbb
adc
pop
jmp
sbb
sbb
int3
pop
cmc
stos
push
jae
shrb
adc
clc
cld
xchg
cs
push
aad
jo
ds
mov
pop
jmp
xlat
cmp
mov
loop
mov
std
and
mov
mov
es
mov
dec
pushf
cmp
pusha
sub
aam
js
xor
mov
popl
and
sar
dec
insl
pop
pop
sub
and
popf
insb
sub
sbb
push
mov
pop
pusha
dec
cmp
inc
sbb
ds
test
int3
mov
sbb
inc
pop
cmp
mov
add
xlat
pop
lret
inc
stos
ljmp
cmp
loop
scas
fs
shrl
dec
shr
push
fbld
xor
push
bnd
push
leave
adc
hlt
inc
sahf
push
loope
repnz
sbb
jle
aad
orb
loope
orl
adc
adc
adcl
lahf
ss
into
mov
or
push
je
push
mull
push
mov
dec
mov
sahf
sbb
dec
mov
and
repz
adc
leave
inc
pop
imul
mov
xor
mov
lock
scas
mov
lock
pop
addl
stos
jne
ss
sbb
inc
shlb
dec
pop
inc
mov
push
sahf
subb
sbbl
scas
test
dec
fstps
mov
push
int3
xchg
insl
mov
mov
or
les
sbb
jg
test
push
aam
aas
mov
sbb
mov
aam
mov
xor
xchg
mov
aam
fs
push
sbb
mov
or
and
pop
cmpsb
js
mov
outsl
addl
rcll
pop
add
mov
pop
into
push
call
or
jbe
lret
jmp
rcrl
adc
and
sbb
fcoms
pop
sub
dec
pop
xchg
xor
xchg
dec
fs
cmp
and
cld
popa
fistps
xor
std
push
cmp
push
in
roll
mov
push
nop
shr
mov
in
xlat
test
xchg
xor
mov
test
jl
or
add
rcrb
adc
mov
out
mov
shll
test
add
popa
adc
sbb
push
rcrl
push
push
leave
enter
push
inc
xchg
insb
add
imul
out
or
push
imul
std
sbb
sub
test
js
cld
inc
cmp
sbbl
stos
arpl
push
in
std
adc
subl
jge
adc
dec
push
testl
add
push
xor
dec
aad
pop
mov
out
les
sub
or
sbb
scas
movsl
pop
dec
lcall
push
pop
mov
ds
rolb
pop
cmpsb
pop
push
jns
pushf
sarb
repz
loop
adc
cmp
push
push
cmp
clc
js
sbb
and
xchg
repz
sbb
in
bound
push
inc
xlat
jae
pop
adc
pop
jno
ja
in
cltd
aam
psubb
rcrl
jecxz
hlt
aas
push
imul
xor
add
jle
movsl
adc
je
add
jnp
pop
icebp
loop
pop
adc
in
jb
aam
xchg
int3
dec
loopne
iret
add
rol
xor
clc
repz
cmp
mov
cmpsb
jmp
xor
xchg
nop
out
cmpw
les
or
les
in
and
scas
mov
decl
mov
mov
dec
pop
mov
and
int3
movsl
imul
ljmp
lods
cmp
or
ljmp
out
lock
add
test
data16
filds
or
inc
jecxz
jno
xchg
sbb
loope
mov
sub
mov
adcl
or
fst
test
sbb
xor
aas
push
xor
int
sti
fidivs
and
pop
cmp
push
pop
jns
push
jb
sarl
sarl
adc
fs
pop
add
sub
jns
hlt
popf
cmc
cs
sub
lret
pusha
dec
clc
push
pushf
mov
mov
add
fsubrl
fisttps
scas
sbb
mov
outsl
imul
or
pop
mov
pop
stos
aas
imul
cmc
leave
cmp
and
test
insl
inc
cld
fistpl
xchg
sarb
aad
add
dec
orl
sub
repnz
pop
xor
cs
repnz
jae
xor
shll
gs
cmp
gs
repnz
sbb
xchg
sbb
iret
imul
lods
sub
movsl
inc
adc
stc
bound
out
pop
movl
jns
mov
pushf
jl
test
jmp
xor
sub
daa
pop
inc
fidivs
mov
inc
lret
int3
shll
pop
sbb
gs
into
push
fldenv
mov
xchg
mov
lret
dec
gs
aam
or
daa
lahf
mov
inc
push
shrb
inc
in
inc
pop
data16
inc
ds
mov
dec
push
out
ffreep
frstor
jnp
xlat
jle
mov
cmp
push
fisubrl
sbb
dec
lea
mov
testl
iret
into
mov
mov
in
mov
cmp
lds
sub
int3
inc
scas
int
mov
inc
mov
in
pusha
pop
xor
dec
cli
andl
ret
mov
bound
xor
xchg
xlat
mov
and
aad
cmpsb
or
outsb
add
clc
push
pop
loopne
pop
lea
mov
dec
push
add
xlat
into
lods
mov
pop
xorl
cwtl
lcall
and
outsb
leave
pusha
dec
cmp
sub
out
and
jl
lds
loop
or
jo
push
sti
sub
das
andb
pop
inc
pop
dec
fimuls
lds
jg
xchg
stos
mov
fldcw
fbld
stc
adc
mov
pop
mov
jno
hlt
cmp
push
dec
mov
mov
ret
movsb
scas
lret
mov
popf
inc
xchg
inc
fcmovnb
popa
add
sbb
adc
pop
sub
cltd
sarb
lret
mov
fwait
sub
xchg
add
mov
mov
pop
jo
mov
adc
ja
in
mov
push
mov
inc
dec
call
or
and
sarb
fsubl
lret
shll
arpl
cmpsb
jge
mov
je
int3
add
gs
insl
push
das
mov
fsubs
add
fwait
cmpsl
pop
fmuls
enter
jb
ja
sarb
imul
rclb
xor
stos
cmp
push
adc
test
jns
jb
cmc
lcall
add
adc
in
jbe
rorb
lret
rorl
pop
add
sub
mov
adc
mov
push
ror
fadd
hlt
push
aad
and
movsl
dec
fidivl
repz
lds
cmp
stos
mov
jne
lods
stos
andl
in
lea
popa
jae
jno
or
and
jmp
addl
lods
and
inc
push
pop
fstpl
sahf
stos
dec
std
sti
es
outsb
sbbb
xor
push
leave
adc
add
dec
sbb
insb
clc
rcll
add
outsl
ret
xchg
add
add
xor
inc
jge
std
inc
sbb
fdiv
xchg
cltd
jle
stc
or
adc
adc
add
imul
repnz
roll
adc
je
in
ljmp
lock
into
dec
dec
mov
jno
jl
adc
and
mov
leave
xor
add
xchg
ret
push
test
mov
popa
xchg
mov
out
aas
dec
in
xlat
jns
inc
fs
mov
adc
push
pop
xchg
test
gs
mov
outsl
dec
pusha
mov
push
lcall
sahf
scas
xchg
mov
dec
mov
sbb
xchg
dec
and
icebp
jnp
inc
pop
jbe
jae
gs
cmp
cmpsb
inc
sahf
pop
stos
mov
clc
aaa
repnz
and
mov
cld
or
mov
rclb
pop
repz
pop
adc
call
xor
fs
das
fdivrp
cmp
cltd
aad
in
notb
addr16
imull
daa
aad
mov
push
mov
mov
fistpll
adc
pushf
xor
movsb
stc
mov
les
ret
je
pop
addr16
jmp
mov
and
pop
jmp
es
ja
mov
enter
mov
and
dec
pop
es
push
sub
dec
lahf
nop
sahf
sub
mov
mov
pop
cmp
lock
dec
or
out
fldenv
mov
adc
incb
xchg
fistl
mov
fs
or
mov
jb
dec
in
sar
adc
adc
jg
mov
xchg
xor
gs
movsl
std
pop
mov
inc
add
xor
jge
pop
jno
rol
add
ret
dec
int
jmp
sub
mov
mov
mov
fists
sub
fs
out
sbbb
adc
cmpsb
lcall
ja
cli
adc
jmp
int
clc
mov
icebp
jg
dec
in
pop
xchg
sub
inc
subl
xchg
aaa
mov
push
lds
xor
leave
xchg
inc
stos
les
fnstsw
jno
mov
push
fmul
and
sbb
pusha
mov
inc
mov
mov
sbb
mov
jno
adc
push
lret
je
push
mov
int
hlt
sbb
push
sti
clc
lcall
and
rdtsc
adc
jg
sarb
mov
push
gs
push
sbb
test
in
pop
xor
add
movsb
out
dec
dec
dec
mov
xor
xor
in
adc
nop
dec
mov
pop
popf
popa
mov
int3
fsubl
notl
pop
adc
xor
int3
fdivs
xor
xchg
cmp
stos
imul
adcl
or
test
xor
sub
cmpsl
add
scas
push
sub
out
mov
std
push
jl
or
xchg
cli
lahf
push
adc
cwtl
testb
jl
dec
mov
sub
pop
sub
lret
push
fisubl
push
jmp
xchg
loope
adc
mov
bnd
into
iret
fcmovnu
bound
lods
loopne
sti
out
sbbl
sub
mov
insb
test
fisubs
mov
push
add
sub
or
icebp
mov
jge
cmpsb
mov
sub
aaa
jmp
or
mov
or
sub
mov
scas
sbb
sti
or
sub
sub
jae
lcall
jmp
xchg
loopne
ss
aad
push
outsb
adc
fistpll
in
loope
test
adc
je
lds
jae
es
mov
mov
ficoml
inc
push
push
test
cmp
jmp
pop
xor
mov
pop
notb
cmp
mov
aam
leave
mov
mov
pop
mov
sbb
movsb
pop
cmp
mov
outsl
xor
out
dec
xchg
testb
xor
popf
push
fdiv
xchg
jne
fstl
or
imul
xchg
xor
cmp
jmp
and
mov
mov
xchg
adc
push
jb
adc
es
lock
adc
pop
adc
rorb
push
outsl
mov
mulb
sub
daa
enter
cs
push
outsl
add
icebp
mov
inc
mov
jns
sbb
jl
cmovno
dec
jle
cltd
imul
popf
call
push
insl
or
and
add
cmp
sub
mov
stos
imul
sbb
out
xlat
xchg
push
mov
call
int
hlt
outsb
aas
inc
insb
ljmp
ret
adc
repz
xor
xorb
test
fwait
mov
and
and
in
sub
test
aas
or
xchg
rcll
adc
dec
add
adc
mov
xchg
and
inc
cmp
sbb
pop
xchg
shlb
add
push
inc
cmp
clc
jae
jbe
outsl
call
xchg
or
xchg
mov
adc
test
jmp
mov
cmpsb
lods
sub
lds
sbb
push
mov
aaa
lret
mov
sti
cld
scas
aam
lret
push
test
sub
cmp
les
inc
sub
mov
les
cld
iret
push
int
stos
pop
add
jno
pop
cltd
stos
jno
pushf
cmp
pop
scas
es
std
movq
mov
aas
mov
testb
ja
lods
test
push
cmp
jns
fsubl
lret
out
insb
xchg
sbbb
jecxz
ds
fcoms
loopne
sub
sub
mov
add
sbb
add
iret
pop
movsb
data16
mov
cwtl
inc
out
jb
pop
ret
sbbb
fsubl
dec
int
jbe
fidivl
push
daa
add
aas
fisubl
imul
gs
dec
mov
xchg
pop
mov
pop
sub
insb
fnstsw
push
inc
pop
in
fwait
cli
out
add
mov
mov
mov
pushf
fstpl
and
or
ds
cmp
cmc
addr16
orl
pop
or
dec
in
add
loop
in
insb
adc
jbe
dec
mov
iret
lock
fildll
push
and
xlat
cmpsl
and
scas
lods
sub
pop
into
xor
dec
bound
hlt
addr16
loop
jns
dec
fsubrl
fidivrs
pop
call
and
cmp
mov
pop
in
cmp
test
sbb
out
test
mov
gs
add
jo
fwait
lods
cmpsl
cs
daa
push
mov
cltd
ret
lods
fidivs
add
mov
ljmp
mov
fistl
clc
inc
fs
xor
imul
aad
jge
js
jno
outsb
push
leave
sbb
pop
dec
pop
xadd
sbb
mov
or
das
fsubs
pop
icebp
or
xchg
daa
shl
sti
pop
sub
xor
fnsave
mov
xchg
fistl
int3
sbb
test
insb
sub
or
mov
mov
leave
push
je
cmc
inc
pop
xor
cmp
pusha
aam
jo
mov
push
inc
bound
shl
cld
mov
les
push
fiaddl
mov
shl
jl
sbb
push
cmpsl
sub
in
sub
outsl
stos
xchg
xchg
jno
and
xor
call
outsl
push
int3
iret
ja
add
inc
stc
pushf
out
insb
into
add
outsb
data16
mov
xchg
cwtl
push
shll
add
inc
fistl
bound
pop
mov
pop
bound
xchg
je
mov
jmp
or
mov
mov
jbe
push
push
jnp
addb
xchg
mov
pop
repnz
insl
xchg
jnp
sub
inc
pusha
cmp
xor
xchg
jns
sbb
push
out
xor
stos
ja
inc
test
lret
fldcw
outsb
lds
loopne
mov
sbb
mov
les
scas
and
filds
test
imul
clc
cmp
jp
xchg
jne
icebp
pop
lods
xchg
mov
dec
mov
scas
lds
enter
inc
repz
fs
jb
loopne
out
scas
mov
push
sbb
jne
or
in
in
jp
clc
pop
loope
sbb
push
adcb
inc
mov
dec
stc
leave
push
cli
stc
mov
outsb
and
xor
push
cwtl
int
and
fmulp
jg
mov
popa
int
inc
sub
outsl
xchg
mov
jne
stos
dec
out
rdtsc
ja
pop
push
adc
inc
repz
call
or
shlb
cli
push
sahf
inc
push
jno
xlat
clc
xchg
loopne
outsb
xchg
jmp
shll
sub
iret
xchg
jmp
into
inc
lret
cs
ficomps
or
mov
inc
fcmovnbe
daa
gs
sti
jl
sub
xchg
push
dec
push
push
imull
sub
data16
xor
aas
and
gs
mov
xchg
push
lcall
push
dec
cmp
ret
add
xor
jns
imul
mov
dec
push
test
mov
fcoml
ret
push
mov
mov
icebp
aad
insl
rorl
adc
jns
popf
cmp
push
js
xorl
lret
xchg
popf
nop
sub
jne
mov
test
insb
cmpsb
or
lret
arpl
cmp
cmp
sub
fmuls
sbb
gs
data16
movsb
popf
push
lcall
mov
stos
das
jns
xchg
imul
push
jmp
bnd
cs
ja
mov
clc
or
jl
jb
inc
inc
sub
pop
movsl
int3
gs
inc
fisubrs
pop
test
mov
das
sub
notb
repz
cmp
addr16
cmpsl
pop
inc
fmuls
sub
xchg
dec
loop
cmp
mov
cmp
mov
loopne
pop
push
push
mov
cmp
enter
lock
mov
add
cld
add
test
gs
daa
sbb
cmp
push
xchg
sti
jnp
pusha
inc
out
ffree
pop
iret
in
incl
pop
add
bound
push
sti
jae
sub
dec
into
gs
or
aam
jno
xchg
shlb
or
mov
dec
inc
mov
jmp
xchg
lret
clc
mov
push
push
add
push
sub
out
lock
repz
mov
inc
xchg
hlt
std
int3
insl
add
jae
shlb
mov
gs
or
lea
inc
data16
adc
and
ss
inc
xchg
xor
inc
filds
pushf
adc
and
xor
mov
xor
pop
mov
mov
ficomps
xor
insl
xor
lret
clc
frndint
mov
out
in
mov
outsb
int
stos
arpl
cmpsl
cmp
frstor
arpl
jmp
push
jg
mov
pop
out
xchg
jle
dec
dec
sbbb
adc
sub
je
arpl
push
and
add
daa
scas
inc
xchg
fisubs
mov
pop
mov
mov
xor
and
je
ds
ja
inc
leave
pusha
sbb
mov
aas
mov
lock
je
adc
stos
inc
insb
jnp
dec
js
lret
pop
loop
dec
out
xor
xchg
pop
jb
mov
fwait
in
call
pop
insb
es
loop
dec
cmp
fbld
fnsave
fs
jl
out
out
fists
mov
jbe
aaa
jb
imul
push
mov
cmpsb
adc
mov
enter
push
out
out
mov
cs
add
xchg
fnsave
jg
or
add
cmp
adc
xchg
inc
mov
pop
lock
enter
dec
aad
sub
es
dec
repz
add
iret
mov
inc
pop
cli
std
sbb
jno
or
in
movsl
sub
push
aad
je
mov
push
cmp
add
es
icebp
xchg
inc
sahf
jbe
xchg
hlt
adc
std
push
sub
push
sbbb
dec
repz
into
data16
mov
add
out
sbb
adc
pop
sti
sbbl
jne
sub
hlt
fdivrl
jnp
cltd
lods
sbb
lods
push
outsb
sbb
push
cmp
push
inc
cmp
cmp
rcrl
pop
mov
xchg
insl
jge
in
cmp
xchg
jb
fwait
jbe
xchg
pop
dec
inc
cltd
fldl2t
sub
faddl
sub
dec
or
ret
adc
mov
cmpsb
xor
push
sbb
adc
dec
mov
add
push
aad
ss
das
ret
mov
aad
dec
push
xchg
mov
xchg
repz
cli
xchg
push
mov
sbb
jb
cs
pusha
add
jb
inc
cmp
cwtl
or
test
cli
pop
mov
xchg
cs
or
cmp
imul
iret
imull
jb
mov
xor
sbb
dec
aad
movsb
push
das
daa
popa
push
push
loopne
pushf
iret
sti
mov
add
sbb
sarl
fs
arpl
repnz
jnp
mov
xor
jmp
add
mov
lcall
mov
sbb
stc
cmp
pop
sub
adc
jg
sbbl
fnsave
data16
inc
add
pop
cmp
cmc
int3
pop
adc
dec
and
icebp
lock
or
adc
mov
cwtl
fwait
xchg
sbb
xchg
and
or
pop
push
test
aaa
sub
aaa
shl
iret
dec
jno
popf
jecxz
mov
pop
psrad
sub
fldl2t
inc
mov
les
idivl
shll
or
stos
mov
push
jg
mov
mov
push
cld
rorb
cmp
insb
adc
cld
out
into
push
mov
fadds
es
jecxz
popa
mov
dec
cmp
xchg
xchg
decl
shll
add
or
sbb
xor
bound
outsb
xchg
ficomps
iret
jno
popa
js
std
imul
scas
or
les
cmp
xor
imul
sub
popa
mov
ds
cli
addr16
ss
mov
push
out
cmc
out
mov
jmp
pop
jmp
enter
fidivl
or
cs
cli
pop
jno
pop
jecxz
test
xchg
xchg
popf
mov
push
inc
fidivrl
test
inc
arpl
xor
dec
out
rorb
notl
fmuls
mov
sbb
inc
inc
sub
xor
popa
dec
mov
imul
inc
outsb
mov
pusha
push
mov
cmp
sub
vxorps
dec
test
test
int3
icebp
mov
into
faddl
cmp
stos
lret
movb
xor
repnz
dec
pop
sbb
jp
fadds
mov
or
jg
and
out
push
xchg
out
inc
and
mov
push
cmpsb
fldz
das
ret
xlat
pusha
adc
inc
push
cmp
mov
shlb
pop
les
rol
imul
lcall
outsb
sub
dec
pusha
sbb
jmp
jg
daa
lods
mov
lahf
repz
test
pop
je
enter
sahf
ss
dec
ds
cmp
mov
mov
inc
jmp
ja
stc
ds
pop
dec
push
add
test
in
inc
neg
push
je
pop
stc
xchg
jmp
fsubs
test
sub
add
adc
adc
lcall
mov
dec
bound
cmp
mov
or
push
pop
bound
ficoml
jecxz
cmp
pop
add
mov
fcoml
aas
and
ficoms
cmp
jo
dec
pop
ret
shll
fisubrs
adc
std
outsb
loope
test
xchg
fidivl
push
or
cmp
arpl
aaa
fidivrs
and
sbb
xchg
das
mov
xlat
mov
mov
inc
leave
lods
jno
inc
fcoms
fwait
pop
ss
mov
leave
pusha
xchg
incl
scas
ljmp
fmul
imul
xchg
lock
jp
lea
and
mov
repnz
xchg
pop
bnd
loop
imul
dec
jl
gs
jns
or
pushf
pop
icebp
stos
gs
loop
mov
xchg
xchg
mov
addr16
loop
add
shlb
in
cmpsl
loop
or
ret
sub
repz
fistpll
push
sbb
enter
cs
sub
pushf
xor
arpl
fstps
push
cmp
sub
into
push
fwait
dec
jne
push
das
xchg
clc
pusha
jae
adc
and
call
movsb
sbb
pop
call
lahf
dec
ljmp
jecxz
bswap
sti
stos
cmp
sbb
dec
xchg
adc
lret
outsb
jg
pop
xor
testb
mov
iret
es
mov
xchg
push
testl
addb
scas
fbstp
sub
test
push
mov
push
out
sub
xor
pop
aaa
ds
cmp
gs
push
jb
cltd
stos
pop
leave
sub
pop
std
sar
subb
inc
ret
jecxz
dec
in
mov
in
xchg
out
push
lret
dec
pop
aad
xor
adc
rolb
out
mov
push
in
fwait
mov
popf
adc
jg
push
inc
das
add
xchg
cmp
inc
icebp
loopne
movsb
mov
push
push
stc
mov
fdivs
jbe
inc
fistl
mov
lods
in
cmp
nop
xor
ret
sbb
es
cmp
inc
movsb
dec
mov
imul
test
cmp
in
cmc
mov
mov
push
jmp
cli
push
ret
add
sub
inc
jge
mov
xor
xor
add
jmp
jnp
inc
push
int3
adc
push
jecxz
incl
out
test
mov
popa
hlt
call
test
adc
pop
push
mov
sub
jno
in
inc
out
push
pmulhuw
jbe
stc
loop
imul
mov
xor
push
es
mov
loope
out
int
push
fwait
adc
jmp
aam
test
push
sub
daa
fisubs
dec
lret
jae
cmp
adc
sub
gs
mov
xor
mov
cmp
xchg
pop
in
popf
dec
inc
mov
stos
mulb
sub
cmpsl
mov
aad
cmc
mov
sbb
lret
pop
pop
sbb
subb
adc
mov
xor
sbb
push
fs
mov
or
inc
jbe
xchg
dec
xchg
pop
popa
call
icebp
mov
cmp
jmp
fsubrp
mov
mov
and
out
jne
fisubs
or
inc
push
xor
xchg
push
add
js
xchg
jge
test
rclb
xchg
inc
test
popf
cli
inc
inc
or
loop
pop
fisubs
aaa
cmp
mov
push
in
test
inc
leave
xchg
mov
adc
les
mov
and
add
lahf
xorb
mov
and
xchg
add
cli
enter
aaa
pop
mov
jp
add
into
xchg
push
and
push
mov
insl
je
push
sbb
leave
pushf
jp
adcl
or
xchg
pop
jb
mov
leave
fsubs
sub
insl
rcrb
mov
xchg
leave
lods
mov
imul
inc
push
inc
sbb
cmp
fidivs
mov
xlat
and
sbb
inc
int3
dec
xor
shrb
in
jmp
jo
jmp
sbb
jb
cmpsb
movsl
pop
movsb
cmp
mov
fdivrs
test
les
lea
pop
add
mov
jl
fistps
dec
push
pop
insb
das
addr16
dec
xchg
pop
mov
shrl
rcll
xchg
popf
xor
test
cmpb
add
sub
out
adc
xor
stos
push
mov
int
pop
xor
gs
imul
xchg
cmp
push
ljmp
lcall
xor
cltd
cld
ds
sbb
psadbw
push
adc
mov
jbe
aaa
das
imul
andb
andl
rcl
cmp
jp
cltd
add
pushf
dec
in
pop
or
cmc
xor
lret
int3
inc
test
or
mov
aam
and
insl
scas
inc
mov
inc
cmpsb
inc
ljmp
cmp
cmpsl
xor
lock
lea
adc
aam
mov
mov
bound
cwtl
jae
mov
sbbb
sbb
enter
dec
push
setp
imul
adc
sub
cltd
cltd
and
imul
mov
fidivs
lods
xor
mov
out
xor
repnz
into
stos
cs
divb
sub
fisubs
and
xchg
add
mov
pop
out
xlat
adc
pop
xchg
jecxz
iret
xchg
mov
cmp
clc
std
inc
loopne
test
enter
mov
mov
jge
mov
jge
addr16
adc
add
push
insl
in
imul
repnz
insb
outsl
adc
nop
mov
fidivrs
adc
scas
sbbl
in
shll
add
aam
fs
testl
jbe
push
pop
push
xchg
or
sti
jno
bt
fnstcw
pop
mov
and
jb
jne
aas
nop
das
jnp
fcompl
push
test
outsl
inc
mov
add
sbb
movsb
lods
fidivrl
xor
dec
and
jl
pop
enter
jle
fildll
pushf
das
cmpsl
lret
push
mov
lcall
sub
insb
adc
inc
mov
add
popf
aad
sbb
xor
push
mov
adc
bound
and
dec
ljmp
scas
fldcw
dec
inc
lret
aaa
sbb
push
cmpsb
repnz
jno
int
sbb
and
and
shlb
incb
jno
imul
call
mov
js
bound
sbb
inc
rcl
push
shlb
xchg
sub
sahf
xor
fwait
mov
mov
lret
icebp
xor
push
test
rdmsr
push
jg
jge
xchg
in
bound
and
xchg
pop
in
or
ljmp
mov
push
mov
pop
mov
xchg
imul
sbb
mov
icebp
daa
out
fdivrs
or
or
loopne
mov
or
jb
jecxz
jmp
adc
pop
mov
iret
lods
add
loope
loopne
dec
aam
or
push
inc
cmp
lock
shl
cltd
std
push
enter
add
jo
or
pop
das
movb
push
fists
mov
dec
dec
sahf
fcoms
push
dec
adc
leave
fists
lods
push
or
mov
inc
imull
xchg
sub
in
or
push
les
lea
lea
les
mov
hlt
jl
mov
aaa
clc
xor
push
or
mov
ret
add
outsb
in
es
nop
cltd
push
push
mov
iret
data16
std
or
xchg
scas
mov
and
or
pop
pop
mov
mov
aas
push
sub
in
inc
cs
or
jl
push
popa
or
and
insl
push
in
inc
fstps
neg
repz
movsb
and
sbb
push
cmp
push
mov
imul
sbbl
cltd
mov
cltd
rcrb
dec
mov
rcll
popa
adc
imul
sub
pop
xchg
lock
mov
push
jl
sarw
jecxz
sarl
adc
test
inc
pop
fists
mov
or
jp
or
pop
add
div
sub
mov
jl
xor
jle
orl
jnp
enter
sub
jl
mulps
out
push
sbbl
mov
mov
mov
sbb
shll
cwtl
into
mov
into
sub
jne
test
mov
jnp
inc
xlat
daa
lcall
inc
add
xor
dec
fs
adc
add
xor
pop
mov
add
push
pop
in
shll
sbb
jle
imul
fwait
jo
shrl
scas
loop
and
jge
fildl
dec
out
rcrl
mov
adc
dec
out
mov
cmp
sub
push
inc
call
lret
ss
sti
test
enter
xchg
sub
mov
push
adc
out
aas
or
movsl
jne
ja
je
or
push
movsb
gs
cmp
cmc
mov
cltd
sub
jnp
adc
jge
push
mov
es
pop
jge
outsb
add
adc
and
aas
pop
mov
jge
dec
mov
setb
jb
pop
fistpl
ret
add
popf
adc
mov
jae
vpcmpeqd
and
pop
mov
xchg
ds
sub
cmp
pop
jo
push
mov
mov
mov
xor
lock
movsl
jne
cmp
shrl
xchg
xor
sbb
or
cmc
cmp
out
mov
dec
aas
dec
dec
ret
mov
or
mov
jmp
push
pop
test
movsl
mov
mov
hlt
mov
ds
adc
iret
mov
aas
lock
or
imul
lods
and
lcall
arpl
cmp
out
clc
dec
xchg
decl
shl
ds
or
pushf
and
in
arpl
arpl
outsb
dec
mov
inc
ds
push
and
insl
lret
push
out
sti
test
mov
sbb
inc
inc
ss
dec
lods
imul
insb
leave
int3
repnz
aas
dec
fisttpl
notl
lock
sub
aad
cmp
das
mov
scas
ror
fisubl
cmpsl
dec
push
cwtl
jl
aas
push
lock
adc
mov
popf
mov
pop
addr16
lea
fidivs
leave
pop
out
and
insb
adc
mov
xor
xchg
sbb
dec
das
sbb
pop
test
adc
push
popf
push
into
mov
mov
addr16
jmp
dec
cmpsl
imul
adc
sbb
fwait
xor
nop
das
xor
mov
inc
mov
push
inc
lods
jle
fwait
sbb
test
xchg
nop
mov
push
lods
cli
mov
dec
lea
or
and
add
pop
imul
stos
nop
cmpsl
jp
mov
xchg
in
in
movsl
addb
push
mov
cmp
shlb
cmc
jns
daa
jae
adc
inc
daa
vpaddw
mov
psrad
xchg
leave
call
popf
pop
scas
sub
sbb
cmp
dec
ret
fisubrs
les
xchg
or
push
jg
rcrl
and
adc
add
pop
inc
pop
lods
dec
mov
xor
xchg
clc
sbbl
mov
lahf
ss
rcll
xchg
push
cmpsl
in
mov
popa
test
mov
lods
scas
lods
pop
and
int
test
jecxz
or
mov
or
pop
aaa
clc
push
push
mov
pop
lods
and
lods
pop
push
call
xchg
cmp
adc
adc
mov
push
insb
sarl
xor
movb
mov
fdivp
mov
cmp
test
std
xchg
jecxz
mov
cmpsb
jns
mov
in
lock
mov
mov
push
and
xor
leave
les
jb
cmpsl
mov
push
cmpsl
and
call
jecxz
sub
push
sbb
lahf
mov
push
pop
sub
add
call
in
outsl
inc
pop
lret
repz
cli
dec
cwtl
cmp
lret
adc
sub
mov
fnstcw
andb
jg
imul
into
fcomip
js
sbb
jnp
cmp
xor
mov
fs
enter
cmpsl
mov
and
add
adc
mov
sti
pop
add
push
clc
xor
cmp
push
xchg
jo
adc
add
mov
loope
outsl
shrl
push
xchg
int3
dec
cmp
adcb
pusha
mov
xchg
and
cmpsl
inc
jecxz
push
out
outsb
push
lcall
inc
inc
jg
cld
mov
mov
or
cwtl
push
mov
xchg
aas
les
je
xchg
cmpb
and
repnz
push
popf
call
or
mov
shrl
pop
imul
rolb
pop
cmp
fs
xchg
inc
cmp
shl
xor
in
jg
ret
or
add
in
jge
ss
cmp
aam
jmp
mov
push
shll
and
lcall
add
or
sub
addl
lcall
inc
clc
mov
inc
push
add
loopne
je
out
repnz
jb
in
je
clc
fstl
and
call
fs
dec
and
pop
fcompl
push
push
fdivrp
mov
pop
das
test
or
sahf
out
cmp
rcrl
inc
out
jns
mov
lret
imul
int
add
in
fistpl
or
cltd
ret
pop
adc
rorb
cltd
ljmp
mov
mov
rcrb
rol
loop
mov
lds
jecxz
cmp
fnstcw
or
jne
jecxz
pop
adc
xor
rcrb
les
adc
mov
xor
pop
gs
push
add
inc
pop
insl
jle
mov
out
mov
data16
pop
xor
pop
adc
bound
xor
adc
lret
mov
sti
inc
or
and
dec
aam
leave
cmp
in
inc
push
sub
nop
dec
inc
xorb
add
adc
pop
xchg
in
loopne
int3
or
nop
ds
or
pop
inc
jbe
std
pop
xchg
scas
lret
and
addr16
mov
pop
out
jge
subb
ljmp
roll
adc
int
not
pop
rorb
pop
cli
xor
mov
insb
add
push
pop
fmull
and
aad
mov
xor
fldenv
leave
push
push
jb
js
insb
inc
sbb
xor
dec
mov
arpl
sub
mov
xchg
mov
in
jno
gs
sahf
adc
andl
push
jo
loop
lock
sub
fsubs
mov
test
mov
mov
pop
xor
fwait
jo
jo
jl
test
pop
adc
adc
imul
imul
fsubr
mov
cli
scas
cmp
mov
push
outsl
out
pop
xor
sub
jae
mov
gs
push
dec
mov
cmp
inc
pop
sbb
pop
hlt
and
js
icebp
jmp
xchg
insb
cli
mov
sti
shrl
xlat
test
mov
fsubs
xor
mov
das
roll
or
mov
ret
lods
jge
subb
xchg
lock
mov
jno
adc
es
mov
scas
lods
fsubrs
decb
fwait
xchg
imul
jecxz
orl
cld
dec
and
sbb
jo
test
js
ja
dec
cwtl
lock
test
jb
xchg
ja
lahf
out
imul
in
pop
xchg
bound
insl
icebp
xor
das
and
movsb
sub
push
negl
icebp
cmovnp
or
sub
es
jo
xchg
xchg
in
sahf
inc
mov
pusha
cmc
dec
xchg
or
lds
dec
dec
shll
sbb
popf
sbb
es
lock
push
mov
push
movsl
jo
lahf
push
and
add
and
daa
jns
or
les
xchg
add
xor
adc
adc
push
bnd
jns
adc
ja
or
xchg
cmp
dec
push
xchg
xchg
gs
adc
or
pop
das
daa
icebp
loopne
je
js
or
inc
jg
adc
lods
mov
cmp
fs
mov
ret
lahf
aas
add
dec
leave
in
pop
std
xchg
lea
movsb
in
test
pop
mov
shll
push
push
scas
test
scas
call
push
out
jecxz
xchg
aaa
lds
cli
jecxz
insb
adc
mov
scas
or
mov
sar
test
popa
xor
stos
lea
sbb
sub
lods
dec
testb
jge
cwtl
jg
sti
cmp
negl
test
out
sub
es
clc
testb
sub
push
push
sub
xor
xor
and
add
sahf
cmpsl
push
xor
sbb
rcrl
in
jge
and
cmp
sbb
jg
and
scas
and
lods
jmp
dec
adcl
adc
jne
sbb
fistpll
cmpsb
and
notb
fiaddl
aaa
fnstcw
shlb
mov
jp
inc
sbb
mov
jp
adc
push
in
pop
into
paddd
xchg
push
jmp
loope
rcrl
jb
adc
mov
adc
dec
push
loope
jmp
cmpsb
int
mov
test
cmpsl
aad
and
movsb
lds
std
gs
cmpsl
xchg
push
sub
mov
mov
mov
dec
xchg
or
xor
fisubrs
cltd
mov
scas
xor
push
call
dec
adc
and
mov
cmp
cmp
inc
stos
lds
dec
push
imul
sbb
mov
xchg
sub
das
mov
inc
shl
cmc
in
cmpsl
bnd
lods
enter
cmp
popf
pop
inc
cmpsl
ds
daa
cltd
or
mov
cwtl
std
sbb
mov
and
lods
test
jmp
out
imul
call
mov
iret
sub
dec
mov
ret
aad
ror
loope
repnz
xchg
adc
movsl
roll
out
outsl
sti
and
ret
dec
jae
or
popa
ds
ja
xchg
pop
ss
arpl
pop
mov
adc
inc
cwtl
std
mov
and
in
hlt
sbb
adc
mov
xchg
pop
inc
push
mov
sub
add
add
add
pushf
hlt
mov
xchg
fwait
movsl
pushf
js
xchg
push
mov
and
xchg
sub
icebp
push
movsl
stos
pop
mov
push
inc
pop
out
jne
jmp
xor
jmp
cmc
adc
or
test
xor
mov
push
fisubl
stc
xchg
mov
mov
mov
sub
call
xchg
mov
lret
adc
jo
popf
push
stc
cwtl
xor
xchg
mov
pushf
clc
mov
sub
inc
mov
aad
into
xor
cmpsl
mov
repz
pop
inc
leave
cli
repnz
mov
inc
repz
push
dec
mov
jecxz
and
test
lock
sti
dec
inc
insb
cli
pop
mov
mov
push
pop
jne
sarl
pusha
fbstp
xchg
jp
mov
icebp
lcall
addr16
mov
aam
push
sti
fwait
dec
pop
hlt
rorl
and
pop
cmpsl
mov
bound
test
js
mov
xchg
mov
lods
scas
in
push
jp
adc
addb
test
rorl
fstl
scas
or
jo
ljmp
sbbl
test
mov
lds
mov
les
stc
push
add
dec
cmpsl
pushf
and
stos
jns
stos
mov
dec
jb
xor
and
test
roll
in
pop
sahf
fimuls
add
dec
dec
add
sub
jp
icebp
scas
pop
shl
cmp
fisttpll
shll
inc
jae
ja
dec
and
push
sub
mov
dec
xor
xorb
int
mov
movsb
and
push
adc
loopne
call
repnz
push
aas
mov
jge
aaa
scas
jecxz
mov
int3
arpl
and
sbb
sub
pop
pushf
cmp
iret
es
and
test
lret
push
in
inc
mov
sub
outsb
rolb
nop
popl
jge
cmp
lock
in
push
sub
mov
pop
ss
repz
pop
ficomps
clc
stos
or
fisubs
mov
jbe
data16
add
test
inc
inc
mov
inc
scas
jmp
imul
scas
sub
mov
fnstsw
dec
fistl
divb
in
and
pop
push
jle
test
jg
mov
mov
push
lahf
mov
icebp
mov
movsl
xor
xor
mov
push
adc
ret
loope
test
push
call
stos
das
cmp
in
lds
lods
fiaddl
fdivp
je
into
movsl
sbb
sbbb
scas
and
push
popf
cld
repz
add
xchg
sub
pop
lods
mov
xor
jmp
sbb
mov
arpl
push
adc
xlat
mov
cmp
xlat
mov
aas
mov
cs
popa
pusha
dec
cmp
loop
mov
add
out
adc
sbb
xor
push
repnz
mov
lea
mov
mov
sbb
dec
fstpl
lcall
xor
mov
mov
call
pop
jns
outsb
das
adc
in
push
mov
fwait
pop
xor
xchg
mov
inc
sub
int
pop
cwtl
in
mov
sub
mov
sbb
mov
push
enter
cmc
xchg
xchg
push
imul
out
ljmp
cmc
les
mov
sbb
push
movsb
pop
inc
or
ljmp
mov
pop
xor
lahf
mov
cmp
inc
call
mov
int3
int3
mov
jg
push
mov
sbb
and
stos
inc
sti
xchg
enter
add
adc
xchg
xor
ljmp
mov
das
pop
mov
mov
mov
lock
fs
xor
cmp
inc
sbb
ret
loope
jnp
gs
mov
pop
mov
jbe
push
jle
scas
sub
sbb
loope
icebp
jge
popa
sub
xor
mulb
in
inc
test
ss
loop
jle
scas
mov
cmpsl
and
std
cltd
fisubrs
lret
inc
add
loop
sarl
mov
sbb
xorb
push
xor
pop
sbb
aas
loopne
jno
pop
std
push
ror
fmuls
inc
sbbl
and
fadd
std
or
or
rol
pop
icebp
out
insb
inc
mov
push
jg
lret
lret
sub
mov
ds
fisubrl
cmp
fnstcw
icebp
test
incb
inc
inc
jle
xor
unpckhps
hlt
mov
mov
and
dec
hlt
and
jno
or
mov
mov
sbb
xchg
sub
out
daa
mov
push
outsl
rcl
and
sbb
pop
mov
push
ret
testb
cmp
push
clc
arpl
dec
loope
adc
mov
test
fsubs
loope
test
jne
fiadds
xchg
adc
push
repz
sbb
and
add
mov
dec
and
and
repnz
fidivs
lea
xor
test
mov
nop
cmp
sub
sbb
cli
push
pop
cwtl
insb
pop
pop
mov
mov
xchg
push
movsb
fldt
xchg
mov
dec
mov
sbb
sti
add
shlb
and
inc
sub
mov
loope
stos
jmp
dec
pop
cli
data16
push
orl
xchg
push
mov
sbb
mov
jns
js
in
jp
stos
push
cmp
subl
shrl
dec
out
cmpsb
pop
sbb
scas
jmp
sub
icebp
rcrb
jle
mov
scas
stos
clc
push
jb
popa
or
jmp
mov
inc
mov
jnp
fst
and
loop
mov
inc
fs
adc
jo
cwtl
sbb
or
push
adcb
xor
jecxz
jae
xor
jbe
in
adc
and
cmpsl
push
mov
inc
int
dec
adc
add
sub
mov
xchg
popf
inc
sahf
jecxz
adc
pop
push
adc
enter
and
jno
push
decl
int3
add
push
js
push
seta
ljmp
es
mov
mov
fsubs
pop
fildll
mov
fcoms
sbbb
popf
popa
add
xchg
in
rol
add
xor
in
data16
add
aas
xchg
push
xor
je
adc
jnp
sbb
mov
mov
hlt
leave
daa
mov
sub
out
sub
and
pop
sub
lret
cmp
cwtl
dec
leavew
outsb
sub
pop
adc
lea
inc
mov
mov
xchg
lods
sti
mov
mov
fdivl
lret
sbb
ja
repz
xchg
xchg
test
test
popf
xor
jl
mov
jns
jmp
out
push
out
or
mov
stc
nop
xchg
leave
adc
mov
pop
pop
sahf
jno
xor
xchg
jne
cmpsb
stos
inc
fmul
movl
add
and
sub
in
leave
pop
mov
mov
mov
rorb
mov
lahf
daa
push
enter
or
sbbb
jge
inc
popf
shl
lahf
xchg
into
fisubl
out
push
sti
int3
arpl
fwait
test
ret
dec
ljmp
scas
push
mov
test
xor
cmp
pop
out
repnz
mov
or
imul
or
push
xor
mov
mov
pop
loop
or
lock
xchg
daa
inc
adc
jecxz
pop
mov
out
sub
and
cmp
push
xchg
iret
sahf
inc
mov
test
aaa
sbb
out
pushf
xchg
inc
insl
test
or
xchg
xor
out
fiaddl
adc
fnstcw
or
inc
inc
paddusw
push
push
cmp
mov
in
js
fs
test
push
mov
sbb
push
scas
inc
out
out
xchg
mov
mov
pusha
jo
insl
lods
mov
jb
je
sub
adcb
sub
mov
lock
int
or
inc
pusha
dec
jo
inc
jne
stos
filds
mov
data16
push
fmull
jecxz
lods
ja
fldl
fstl
mov
test
xchg
ret
or
iret
ljmp
movsl
ss
insb
ds
sbb
jno
loopne
and
fcmovnu
notb
adc
jns
loope
imul
jmp
sbb
dec
mov
sbb
mov
mov
hlt
cmp
scas
call
shll
lods
jmp
lock
in
inc
adc
es
mov
dec
gs
mov
mov
sbb
mov
fdivl
or
mov
xor
push
jle
lea
leave
dec
fucomi
inc
loopne
icebp
out
xchg
mov
shrl
imul
icebp
mov
fldl2t
and
jp
dec
rcrl
mov
cmp
lahf
pop
pop
mov
adc
fdivl
loope
mov
push
or
push
imul
lock
daa
add
mov
adc
push
lods
inc
fmull
inc
lahf
mov
rcrb
sub
packssdw
xor
jno
mov
inc
mov
or
outsb
xor
xchg
lds
mov
mov
push
lods
stos
fwait
aas
mov
test
mov
int
adc
cltd
repnz
lods
stos
push
sub
sahf
clc
dec
lcall
sub
and
dec
push
xor
mov
leave
pop
daa
and
mov
lock
es
daa
pop
mov
adc
and
jle
dec
jmp
cmp
das
pop
mov
aaa
cmc
xor
in
sbb
out
lahf
or
outsb
jl
mov
xor
and
sub
sahf
cwtl
xor
mov
rorb
scas
xchg
in
mov
sub
jp
xor
inc
cld
stc
pop
lock
and
push
andl
jmp
sahf
rcrb
fisubrl
int3
inc
push
jae
fs
push
mov
insl
outsl
add
std
xchg
xor
ds
gs
push
inc
cmp
mov
outsb
cmpsb
out
aad
das
xchg
jns
stos
outsb
mov
sub
movsl
shrl
xchg
inc
test
movsl
arpl
shl
inc
mov
push
xchg
lock
dec
test
mov
ret
stos
mov
orl
imul
shl
sahf
mov
pop
push
test
lock
test
xor
sub
mov
ret
cld
xor
xor
jg
cmp
mov
movsb
les
into
fdivrp
outsb
pop
lahf
mov
mov
push
ficompl
int3
pop
jecxz
in
int3
cmp
icebp
pshufw
jne
cmpb
or
ss
addr16
xchg
scas
xor
pop
stc
hlt
ret
pop
push
push
pushf
cmp
dec
fstps
pop
sub
clc
shr
mov
mov
inc
xor
push
xor
adc
push
call
iret
mov
and
mov
rcr
pop
pop
repz
or
testb
mov
mov
fstpt
jge
test
pop
cmp
jp
fildl
sbb
jbe
mov
xor
or
mov
push
mov
dec
mov
jns
adc
xor
lods
inc
movsb
xchg
stos
negb
sub
enter
out
jo
cmp
insl
xor
and
xchg
mov
push
adc
inc
mov
jo
xchg
push
sbb
outsl
fistpl
or
imul
imul
js
out
fstl
mov
clc
popf
je
or
test
gs
fists
pop
xchg
sub
stos
mov
and
fwait
pop
push
xchg
scas
cmpl
jb
adc
out
lret
push
push
lret
call
and
mov
pop
push
sbb
xor
push
dec
jp
jp
loope
jbe
cwtl
das
adc
ss
movsb
xchg
es
enter
push
inc
clc
leave
add
mov
aas
xchg
mov
out
int3
adc
mov
jno
dec
dec
pop
jp
lock
jg
xorl
dec
push
into
or
push
dec
fwait
xor
cltd
int
mov
fidivl
cmpsb
xlat
outsb
fcoms
jl
je
sarb
and
push
cs
xlat
pop
cmp
pop
dec
cmp
mov
jmp
or
sbbl
dec
pushf
push
jb
imul
aad
sbb
loop
jmp
movsb
repnz
xchg
testb
jg
pop
sbb
in
sub
xchg
xor
push
out
mov
fisubrs
mov
dec
xor
jl
clc
pop
xlat
sbb
adc
ret
mov
mov
or
fwait
fwait
pop
and
adc
int3
jo
xor
in
out
cmp
push
mov
or
xor
push
lret
cmp
fs
pop
sbb
movsb
ror
adc
xor
fadds
pop
ror
sahf
mov
sbb
icebp
fnstsw
push
jae
pop
lea
jnp
pop
jle
pop
lock
push
sbb
pop
pop
xchg
movsb
pop
adc
ljmp
ret
outsl
les
iret
xchg
hlt
sbb
les
jecxz
bnd
mov
in
fildll
mov
xlat
jecxz
push
mov
popa
fistl
push
lret
mov
stos
xlat
and
lods
or
lods
cmp
push
rorl
stos
xor
push
ret
cmp
stc
cmp
loopne
fsubrs
add
stc
mov
shlb
rcr
jo
pop
rcrl
testl
or
adc
mov
xlat
pop
pop
sbb
and
sbb
lcall
inc
fcompl
and
fisubrs
sbbb
lret
push
cli
out
js
jae
lds
push
push
jp
pop
push
pushf
cld
insb
mov
and
adc
jecxz
dec
cmp
pop
xchg
sbb
outsl
clc
pop
or
xor
nop
inc
insb
push
out
and
inc
push
adc
pop
or
lahf
push
sub
dec
xchg
mov
lods
loopne
cs
sbb
mov
int3
rolb
add
xchg
push
push
test
inc
pop
adc
and
xor
jno
sahf
jbe
pushf
and
sub
aam
xlat
jmp
test
daa
mov
mov
and
incb
jns
pop
imul
jns
mov
rcrl
and
fdivl
jge
xor
lret
adc
and
xorl
xchg
insb
push
mov
fsubl
imul
add
addr16
mov
test
fisttpl
int
mov
fwait
es
xor
push
jb
sbb
add
scas
inc
data16
mov
loopne
and
rolb
jg
lods
cmp
dec
inc
sub
je
and
cwtl
mov
push
pop
cmp
ret
hlt
test
mov
icebp
adc
shlb
stos
mov
test
mov
xchg
mov
sub
jns
mov
mov
jge
sahf
sub
push
mov
push
adc
popf
dec
sbb
lea
push
mov
enter
xchg
xor
pop
add
add
popl
pop
pusha
lock
loope
shl
jno
pushf
xor
jbe
in
jmp
mov
fsubrl
jp
push
xchg
sub
stc
pop
icebp
adcl
jge
jb
cmp
into
pop
xor
adc
popa
adc
push
bound
ja
sub
sub
movsl
sbb
pop
mov
dec
adc
add
sub
loope
out
notb
in
or
dec
movsb
sahf
and
pop
xlat
pop
jle
jg
loop
dec
xchg
aam
xchg
xchg
nop
out
add
mov
fstps
add
or
outsb
test
mov
psubsb
lcall
xchg
and
out
cs
ret
enter
lret
fdiv
in
jne
push
adc
pop
daa
inc
push
mov
subb
sbb
gs
stc
jl
inc
jns
mov
in
push
aam
rorl
xor
lods
jecxz
fincstp
es
jnp
and
mov
inc
adc
mov
and
dec
popa
ss
mov
stos
pop
sub
mov
rcl
or
cmc
xorb
inc
pushf
out
stc
popa
mov
pop
sub
add
lea
and
shr
pop
hlt
shll
adc
in
sub
popa
adc
add
adc
test
push
and
and
inc
fsts
and
sahf
push
lods
jo
and
inc
mov
insl
sbb
gs
mov
jne
nop
cltd
mov
pusha
jp
pop
xchg
mov
test
sbb
js,pt
icebp
sbb
and
repnz
cmp
cmc
js
sahf
inc
xchg
adc
lret
bound
ljmp
sbb
loope
sub
rcrl
or
xor
movsl
out
mov
popa
cwtl
notl
test
jecxz
cmp
js
mov
rorb
pop
fldcw
les
shrb
and
daa
test
inc
repz
mov
ss
dec
adc
mov
xor
jne
lea
scas
stc
jns
cmc
xor
scas
inc
sbb
mov
in
cld
push
xchg
xchg
inc
mov
aas
insl
jb
or
pop
pop
std
push
mov
cli
ss
push
and
in
inc
pop
faddl
xlat
or
pop
jno
idivl
das
not
xchg
lds
jmp
das
mov
add
hlt
insl
xchg
or
lcall
adcl
cmp
sbb
lea
pop
scas
f2xm1
jns
cs
mov
clc
xor
xor
shrl
popf
or
jecxz
test
ja
jle
adc
hlt
lret
and
popf
push
test
adc
ds
js
xor
icebp
outsl
mov
bound
push
sbbb
lret
notb
pop
orl
jmp
fdivp
xor
push
mov
stos
and
out
cmpb
js
jne
sbb
test
mov
sub
pop
inc
and
jnp
mov
and
xchg
cmpsl
ds
sbb
rol
js
add
lds
push
hlt
mov
shrb
bound
cld
loopne
mov
cwtl
push
testb
jne
jns
aad
lea
std
push
fdivrs
outsb
in
sti
push
sub
ljmp
stos
jl
pop
ror
jns
test
in
push
push
dec
or
mov
into
push
cwtl
hlt
cwtl
jbe
mov
and
call
push
scas
mov
loope
das
sarb
xor
stos
aas
mov
mov
int
add
lahf
xor
dec
dec
cmc
xchg
jp
mov
inc
dec
jbe
mov
mov
sarl
cmp
xor
dec
int
fwait
aaa
sub
xchg
inc
push
ja
test
into
ja
negl
lret
pop
loop
imul
dec
mov
std
jnp
call
push
pushl
aaa
add
in
xchg
and
ljmp
inc
mov
cmc
pusha
xor
push
push
icebp
rorb
pop
lahf
xchg
push
or
inc
and
push
loope
andb
sti
add
inc
rcrb
sub
push
push
jbe
add
mov
add
inc
mov
stc
test
out
hlt
scas
push
mov
fs
stc
popf
sbb
sar
ret
sub
sbb
pop
jle
loope
cmc
cmp
iret
sbb
dec
loope
into
adc
rorl
js
and
cltd
pop
negl
dec
pop
mov
in
pop
iret
cmpsb
sbb
int
pcmpgtb
shll
popf
xlat
inc
pop
out
jbe
inc
sti
dec
stos
jbe
fsubrl
pop
aam
jecxz
mov
pop
jg
mov
jp
sub
lahf
std
aas
inc
jmp
pop
adc
cmp
scas
scas
pop
into
dec
lods
stos
mov
insl
in
add
adc
jecxz
mov
scas
mov
or
mov
in
and
int
movsb
test
jns
ds
out
push
sub
lods
lcall
stos
and
or
lods
mov
add
cmp
mov
or
mov
js
test
int
scas
fisubrs
push
loope
push
dec
xor
jge
sub
mov
pop
or
dec
cs
cmp
jns
pop
push
or
jo
mov
outsb
hlt
jecxz
sub
fs
aas
cmc
test
aad
inc
push
add
add
mov
orb
in
sub
xchg
scas
shrl
js
cmp
imul
sbb
inc
inc
loope
and
int3
lret
xchg
jl
jge
add
xor
xor
xchg
push
and
mov
or
xchg
aad
loope
mov
sbb
mov
fmull
xchg
xor
into
dec
jmp
jb
xchg
mov
les
sub
in
and
gs
pop
test
cltd
out
cwtl
xchg
xor
orl
inc
jb
arpl
jmp
add
es
or
jp
cmp
mov
aam
push
push
push
xchg
fdivrs
out
leave
popf
inc
push
fdivrl
fs
lret
test
pop
insl
aam
xlat
push
mov
lods
movsb
pop
mov
jne
flds
jle
scas
mov
sti
seta
js
xor
cwtl
xor
mov
push
xchg
ret
movsl
jle
mov
outsb
daa
sub
pop
add
inc
xlat
cwtl
pop
jl
aam
pop
mov
dec
outsb
in
sbb
es
and
and
stc
push
sbb
pushl
outsl
pop
int
aad
or
mov
mov
adc
sub
inc
push
out
shlb
cwtl
cmpsb
mov
cmc
lahf
lret
mov
add
pop
movsb
jne
test
test
es
sbb
or
add
shr
push
aam
ficompl
int3
xchg
mov
outsl
daa
popa
repnz
mov
push
mov
pop
mov
leave
pop
lods
sbb
mov
jae
adc
push
mov
out
jnp
jne
lcall
outsb
add
or
push
rcrl
push
test
lret
les
lds
xchg
pop
divl
popa
pop
hlt
ret
jg
dec
lea
shll
add
push
xchg
aam
mov
push
in
push
xor
in
test
ss
push
inc
test
add
xacquire
and
movsb
mov
and
lcall
mov
das
pop
add
cltd
sbbl
cmp
add
jne
mov
out
mov
addr16
mov
pop
lods
push
pushf
jb
mov
in
add
or
mov
pop
in
mov
pop
mov
mov
push
fisttpll
or
pop
das
push
insl
divps
sub
sub
das
cwtl
rorb
divb
adc
jae
loope
mov
aaa
add
mov
mov
sbb
sbb
into
jae
ds
adc
add
ss
cwtl
inc
mov
jno
and
xor
int3
mov
cmc
sbb
pop
push
aas
cmp
stc
add
flds
inc
in
mov
insb
xchg
mov
push
and
ljmp
adc
movsb
mov
pop
inc
icebp
xchg
ja
jmp
pop
push
stos
popfw
sti
push
push
sub
popa
mov
lcall
mov
subps
push
outsl
pop
fidivs
mulb
ja
hlt
test
xor
pop
sbb
sbb
sbb
loope
cmp
mov
out
loop
push
in
es
je
xchg
inc
xchg
je
inc
fistpl
jb
and
cmp
notb
mov
cmpsl
sbb
popf
jo
cltd
jp
cmp
das
dec
fbld
push
aam
test
mov
fistl
xor
or
roll
sub
pop
xlat
pop
icebp
jl
in
or
js
pop
test
add
enter
cmp
or
push
cmp
fwait
imull
jmp
iret
cld
sbb
in
xchg
lahf
out
test
cmp
jle
adc
or
cmp
aas
mov
jno
pop
mov
push
dec
pop
dec
pop
cmp
pop
push
in
inc
mov
lahf
jb
enter
mov
je
adc
push
mov
adc
lcall
outsb
pop
aam
shll
scas
inc
das
mov
or
sub
mov
ret
lds
imul
pushf
test
jmp
push
xor
cmp
cmpsl
adc
xchg
pop
push
lcall
cmpsl
push
xchg
cs
sub
nop
pop
mov
test
push
jmp
loopne
movsb
or
and
jg
dec
mov
fsubrp
adc
fidivrl
repnz
push
lods
lcall
or
add
inc
outsl
mov
add
pop
sbb
mov
and
mov
mov
mov
ret
movsl
pop
jae
pop
sub
push
stc
inc
popa
lahf
cltd
push
pop
mov
shlb
adc
or
shlb
push
pop
lock
jmp
loope
ja
mov
pop
pop
pop
xchg
sub
xlat
push
sub
sub
inc
add
add
out
mov
add
inc
adc
and
imul
adc
dec
xor
enter
mov
push
imull
dec
cmpsl
jbe
arpl
cmc
lods
add
sti
pop
push
stos
push
push
lea
pop
mov
and
xlat
imul
xchg
jp
inc
test
push
lods
push
mov
adc
xor
cmp
popa
in
mov
inc
movsb
adc
dec
pop
adc
cmc
push
or
fidivrl
nop
fdiv
ss
icebp
pop
pop
cltd
mov
push
push
js
arpl
mov
js
cld
leave
pop
push
sub
cmp
mov
lock
mov
cmpl
cld
cmp
cmp
push
fwait
pop
icebp
cld
mov
lcall
or
adc
shll
sub
add
repnz
aad
pop
mov
mov
cmp
adc
sbb
dec
push
xor
and
fldcw
fcomps
dec
scas
fldl
jp
sbb
dec
jl
mov
test
sti
mov
sub
jae
hlt
xchg
push
pop
loope
dec
loopne
mov
lret
mov
test
cmp
decl
and
add
in
and
andb
movsb
push
or
insb
cli
sub
daa
push
es
xchg
mov
jp
or
sub
dec
adc
ja
xor
outsb
mov
ret
or
gs
lods
pop
aam
add
push
inc
dec
std
int
push
and
inc
or
cmp
and
xchg
add
enter
and
mov
in
pop
pop
lahf
or
cmp
mov
enter
outsb
add
sub
insl
xor
and
and
or
lret
push
pusha
xor
jle
pop
mov
sahf
xchg
and
mov
jae
jecxz
mov
ss
stc
mov
lahf
sbb
pop
xchg
iret
mov
lods
loop
jg
dec
jne
jnp
push
jmp
mov
push
jo
mov
shl
dec
insl
stc
push
fldt
pop
out
add
jns
mov
sbb
inc
cli
push
jp
lcall
and
aas
push
xlat
lock
xlat
outsb
jnp
push
push
pushf
iret
insb
add
loop
inc
pop
lods
mov
adc
inc
fcomi
mov
ficoml
cmpsl
or
rcrl
mov
jmp
addr16
jns
ljmp
push
loop
adc
movsl
mov
push
fs
xchg
dec
test
inc
ljmp
mov
xor
rorl
pop
dec
mov
xchg
sub
icebp
sub
and
mov
daa
insl
sub
cmp
dec
sahf
and
xchg
outsl
pop
lock
lock
cwtl
cwtl
ja
dec
mov
inc
cmp
mov
dec
scas
fsubrs
and
insl
int
sahf
dec
test
mov
xlat
add
add
ret
test
add
rclb
mov
push
and
jb
ljmp
xor
mov
ret
fstl
les
jnp
lods
ds
test
and
add
xor
mov
cmp
push
sub
cmp
and
or
jl
rorb
pop
pop
movsl
pusha
adc
sar
daa
mov
popf
imul
inc
jnp
stc
subb
push
enter
repz
mov
testb
addr16
cmp
popa
out
jnp
fsubrs
pop
mov
nop
mov
ret
and
sbb
imul
mov
and
repz
jle
jo
add
test
and
lret
test
subl
sub
popa
cmpsl
jb
xor
inc
fistpll
pop
in
inc
push
jp
xchg
mov
ja
add
mov
fsts
cmpsl
or
xlat
arpl
das
inc
aas
mov
mov
shll
cs
repnz
pop
out
xor
xor
stos
ss
enter
jnp
xchg
and
fnsave
stc
sub
stc
push
cltd
push
sbb
mov
cmp
test
ficompl
push
cmpsl
in
addl
out
or
test
std
pushf
add
xchg
inc
fsub
les
xchg
addl
cmc
adc
mov
add
test
and
push
mov
sbb
jae
test
push
push
insl
lea
test
xor
inc
cmp
in
push
pop
mov
movsl
cltd
out
mov
sbb
std
movl
repnz
pop
fstpl
push
icebp
loopne
int
shr
add
ja
mov
ficoms
inc
xchg
enter
outsb
mov
adc
mov
mov
and
rcl
add
test
fcom
incl
sahf
das
lods
adcl
dec
and
jl
arpl
js
or
cltd
cmp
add
mov
imul
pop
pop
loop
mov
stos
mov
jl
mov
mov
sbb
pop
dec
dec
dec
sub
mov
and
jmp
inc
push
xchg
and
add
fldl
push
into
xchg
gs
hlt
aas
and
push
sub
ds
inc
enter
scas
imul
scas
testl
bound
rorl
inc
or
lret
push
and
imul
hlt
mov
mov
and
jno
mov
add
sbb
lea
ljmp
and
dec
mov
dec
shlb
pop
stos
jmp
jge
mov
popa
jne
pop
sbb
scas
jno
cmp
jmp
fisttpll
cmp
sub
adc
mov
ds
test
adc
sub
outsb
add
mov
aam
xchg
or
push
daa
mov
adcl
in
nop
mov
shl
cmc
xchg
add
push
je
jno
test
insb
and
xor
mov
lea
sbb
xchg
movl
mov
mov
shlb
sub
sahf
repz
insl
sub
xchg
pop
pop
les
adc
sub
fs
xchg
sub
popa
and
mov
mov
adc
imul
dec
loopne
rcl
jl
addr16
and
loope
add
push
aas
arpl
jg
dec
je
jp
add
pusha
jno
and
pop
add
popa
ss
push
sbb
sbb
repnz
cmp
fidivs
xor
icebp
fdivrl
add
loop
mov
xchg
xor
inc
shl
imul
test
mov
cmp
aad
sub
movsb
cmc
std
cmp
xor
and
push
inc
sub
dec
xchg
jmp
lahf
inc
pop
jno
fisubl
mov
shr
inc
fnsetpm(287
pop
fisubs
push
adc
dec
inc
jae
push
int
dec
adcl
pop
loop
fwait
sti
push
cmp
sti
dec
mov
cmpl
jmp
or
dec
xor
pushf
les
cwtl
adc
and
adc
movsb
sti
int
add
adc
push
xchg
imul
xchg
mov
mov
flds
call
xchg
jae
pop
jg
push
xor
cmp
push
jnp
pop
dec
cmpsb
insb
push
cmpb
cmp
scas
sahf
inc
dec
out
enter
adc
aam
xor
mov
push
pop
scas
mov
js
adcl
loop
lcall
testb
or
loope
dec
and
jp
addr16
lods
pusha
cld
xchg
outsb
test
sbb
sbb
inc
out
jp
aaa
pop
sub
lcall
mov
push
in
sub
mov
fs
iret
pop
movsb
mov
jmp
mov
cmp
sbb
iret
adc
out
lock
mov
xchg
jecxz
and
jge
jns
and
push
jge
jns
mov
sub
sbb
in
jb
je
stos
adc
dec
xchg
hlt
mov
xor
stos
loope
sub
xor
jns
lods
jge
nop
xor
jmp
mov
int
in
scas
gs
push
xchg
rclb
lds
stc
out
pop
pop
mov
sbb
jo
cmp
out
stos
and
clc
popa
movsb
inc
xchg
sar
rorb
clc
jnp
and
mov
dec
loopne
js
jo
ret
cs
jecxz
movsl
outsb
add
mull
fnstenv
xor
mov
pop
cwtl
lods
inc
mov
cmpsl
xorb
push
or
sub
in
push
mov
cli
mov
push
mov
lods
xor
jmp
push
in
sbb
xor
jo
clc
test
mov
loop
mov
sbb
in
mov
aam
loop
and
push
fbstp
adc
cmp
cmp
movd
or
cs
inc
xchg
xchg
out
imul
xor
ja
ret
in
repnz
or
jge
add
in
stos
or
fdivl
out
inc
pop
lock
inc
push
or
jne
pop
xor
inc
adc
faddp
cli
sbb
mov
test
sbb
mov
or
add
sbb
ficoms
fisubrl
mov
das
jecxz
mov
aas
out
std
push
in
pop
mov
fildl
fdivl
out
push
lods
inc
inc
mov
ds
jmp
xor
or
test
mov
adc
out
sbb
or
cli
stos
loopne
sub
fbstp
test
add
es
icebp
sub
movsb
jg
mov
pavgw
pop
insl
inc
scas
out
fcoml
ror
cmpsl
test
fwait
sti
negl
jne
xor
xor
addr16
rcr
cli
insl
add
outsb
shlb
cli
pushf
cs
out
mov
and
xlat
push
push
popf
push
mov
push
xchg
fwait
and
ret
lret
test
mov
in
pop
repz
sbb
mov
movsb
jge
icebp
dec
lret
jnp
frstor
inc
fs
mov
inc
popf
and
ljmp
jno
out
test
lahf
push
stos
mov
sub
or
ret
sbb
mov
jns
lods
icebp
dec
out
add
orb
mov
mov
mov
ljmp
jno
xchg
stos
sub
cmp
mov
mov
lock
aas
and
movsb
hlt
sbb
sub
cltd
add
push
inc
push
and
adcb
jg
mov
mov
dec
adc
jbe
rcrb
mov
ret
jmp
aam
lahf
or
fsts
mulb
and
adcb
inc
cltd
jmp
fidivs
or
stc
test
je
pop
jns
push
jmp
jmp
cmp
in
movl
jae
mov
cmp
fidivrl
sbb
popa
sti
lret
sub
adc
scas
cmp
xor
les
scas
push
pusha
icebp
enter
into
insb
mov
stc
jl
leave
jne
nop
call
fwait
out
xor
xor
add
push
cmp
mov
outsb
mov
adcl
adc
add
iret
mov
sarb
mov
pop
leave
and
in
call
sbb
das
add
aam
je
push
mov
data16
push
ja
in
inc
clc
mov
int3
and
push
out
lods
test
mov
in
test
xor
jbe
dec
movsl
pop
je
movsl
xchg
sub
mov
mov
insl
mov
aas
in
inc
dec
push
in
inc
movsb
inc
int3
and
lods
les
movsl
or
mov
adc
bound
lds
mov
sub
add
xor
mov
out
inc
cli
push
in
inc
jo
into
and
es
stos
jg
adc
subl
dec
sbb
loopne
fwait
bound
inc
xchg
ds
adc
jb
cmp
inc
icebp
ret
pop
jecxz
dec
jae
add
js
xchg
ficoms
xchg
sbb
mov
mov
cmpsl
sbb
mov
push
in
dec
sbb
and
orl
xchg
bound
mov
lds
lcall
lret
jns
faddl
adc
test
mov
and
stc
xlat
dec
mov
addr16
xor
jo
stc
testb
adc
push
xorl
pusha
xchg
push
js
lea
or
fst
insl
pminsw
adc
aad
dec
or
xlat
jg
dec
sahf
gs
add
inc
push
and
test
test
inc
add
mov
xor
js
mov
push
inc
mov
jns
mov
fdivl
test
and
mov
dec
adc
pop
imul
cmpsl
lock
leave
in
pusha
out
rol
mov
outsl
xorl
sub
push
ljmp
lods
or
xchg
mov
jo
and
inc
xchg
lret
seta
xor
jg
fstpl
mov
cmp
popf
pop
fmuls
mov
dec
fildl
test
sti
test
enter
orb
sbb
cmp
icebp
xor
cmp
dec
dec
mov
mov
sub
or
sahf
cmp
repnz
jno
and
mov
loope
into
xchg
mov
mov
outsb
add
add
sub
fldt
pop
dec
jl
test
ds
imull
popf
push
push
dec
sbb
xor
jecxz
sbb
test
out
and
int3
ds
xlat
sbb
xchg
jecxz
lds
subl
fdivs
adc
cli
jmp
sub
mov
mov
mov
mov
cmpsl
cwtl
cltd
push
lret
dec
into
mov
mov
popa
lods
repnz
pop
insb
mov
jae
cli
push
sbb
dec
sbb
jns
push
lcall
je
jmp
mov
ja
dec
test
scas
inc
push
pusha
cmpsb
cmp
mov
idivl
xor
popa
clc
shl
mov
and
inc
mov
std
loope
stos
inc
lahf
add
pop
call
mov
loopne
and
add
ret
mov
jae
pop
cld
mov
fcmove
dec
fbld
add
std
in
lods
mov
shrb
xor
mov
pushf
insl
arpl
dec
xchg
iret
scas
das
fucomip
ja
aam
dec
pop
add
pop
adc
lahf
push
fstpt
sub
or
insb
xor
leave
push
pop
cmpsl
daa
icebp
mov
ljmp
leave
dec
mov
mov
jb
xchg
out
xchg
add
ja
stos
add
test
jno
lods
leave
faddp
jecxz
jmp
mov
mov
fmuls
loope
mov
idivl
cli
cmpsb
push
js
sbb
lahf
add
pop
adc
test
mov
out
jae
test
dec
add
jmp
in
push
and
push
jb
cmp
icebp
andl
stos
xlat
push
add
jp
popa
rcll
sub
push
jge
add
jae
loop
int
or
push
insb
mov
into
int
xlat
or
daa
ljmp
cli
mov
inc
jge
aaa
mov
dec
push
daa
and
jbe
jge
scas
cld
inc
jmp
cmp
popf
push
aas
mov
push
cmp
inc
mov
shrl
stos
mov
fs
rcrb
popf
mov
nop
mov
adc
out
loopne
push
jmp
test
xchg
stos
inc
hlt
inc
xor
pusha
inc
imul
xchg
xor
rorl
cmp
xor
mov
adc
insb
and
shll
mov
es
mov
subl
xor
or
test
aaa
dec
shrl
sub
mov
jge
insb
mov
mov
push
pop
jmp
push
call
cmp
addr16
mov
lcall
cli
mov
jo
add
cmpps
cmp
mov
add
sub
loope
insb
cld
xchg
lahf
ret
scas
aaa
inc
cmp
mov
aad
mov
or
fdiv
jo
lcall
gs
inc
int
jno
mov
mov
mov
out
loope
or
movsl
inc
pop
repz
pop
mov
jecxz
fdivrp
aam
pop
jmp
adc
cwtl
mov
jno
int
push
call
cmp
ret
push
pop
jns
mov
out
cmc
lods
sub
enter
jp
sub
sub
mov
jge
inc
mov
sbb
cmp
adc
push
xor
sahf
popa
fdiv
cmp
cmp
cwtl
inc
pop
in
xchg
sub
loop
lds
pop
imul
xchg
push
jecxz
mov
mov
push
dec
rorb
xchg
daa
xchg
jecxz
lods
clc
repnz
ss
popa
xor
negb
in
sbb
lcall
jne
xlat
enter
push
jne
inc
fwait
outsb
and
mov
push
xchg
and
popf
cs
or
cmp
lcall
fisttpll
clc
cmp
fs
push
jae
mov
cs
das
dec
jmp
ds
lock
xchg
lahf
inc
fcmovbe
cmp
xor
sbb
jl
pop
xchg
and
cmp
movsl
add
jno
xchg
mov
fiaddl
inc
and
dec
loop
rcr
cmp
xorb
push
or
xchg
pop
icebp
movl
xor
into
adc
mov
test
jne
pop
inc
push
movsl
int
scas
mov
out
sub
pop
enter
mov
es
insl
pop
push
pusha
pop
movsl
int3
fildl
loop
mov
fldt
push
add
test
mov
pop
leave
loop
sbb
or
mov
nop
push
ss
addr16
arpl
mov
push
mov
lock
adc
ret
pop
ljmp
and
hlt
fldl
xchg
xchg
push
aam
mov
or
xlat
shll
ljmp
xchg
mov
pop
fucom
jmp
insl
jns
nop
mov
arpl
pop
fnstcw
mov
pop
lahf
neg
mov
lret
in
cmp
nop
imul
lods
lods
out
mov
mov
jo
aas
pusha
dec
aam
and
push
mov
popf
jmp
lret
cmp
fabs
mov
cld
pop
es
adc
and
and
sahf
pop
xor
cwtl
stos
cmp
sbb
loopne
nop
adc
in
xor
xor
fsubrs
ret
int3
fs
adc
mov
in
xor
xchg
cmc
fiaddl
xchg
cmc
sbb
iret
imul
enter
rcrb
adc
daa
mov
sub
mov
call
mov
in
inc
stc
ret
sahf
mov
sti
inc
dec
xchg
call
xchg
pop
inc
dec
mov
cs
push
and
fdiv
cmp
jp
out
and
xchg
out
outsb
sbb
scas
and
mov
rcrb
roll
cmpsl
ret
aam
cmp
pusha
lea
mov
js
shlb
test
pushf
imul
iret
repz
imul
mov
cmpl
les
fldcw
or
lcall
mov
incb
sub
or
mov
mov
test
jae
es
xchg
xchg
imul
jne
adc
inc
fwait
push
add
out
and
cmp
fsubrp
cmp
jns
inc
decl
cwtl
mov
sti
fidivl
psignw
je
popa
pop
mov
ret
pop
pop
mov
sbb
jmp
out
icebp
jb
cmp
loope
jecxz
mov
in
or
cs
xchg
sbb
repz
daa
xchg
inc
push
add
mov
mov
add
push
dec
cmp
repnz
dec
aas
cs
and
loop
inc
negb
add
mov
sub
dec
mov
lea
daa
jo
das
stc
cmp
leave
mov
inc
test
jge
lods
cmp
test
shrb
imul
clc
in
and
push
das
push
incb
insl
mov
imul
imul
jmp
sbb
dec
or
ss
add
or
and
test
test
ficompl
mov
popa
mov
xor
divb
insl
rcrl
jge
xchg
movsl
pop
insl
xlat
mov
cmpsl
test
pop
adc
lcall
push
test
xchg
pop
mov
add
roll
and
mov
sbbb
enter
xchg
mov
or
jl
ds
ss
int
pop
push
jo
popf
and
push
cmp
loop
fbstp
stos
adc
lret
loopne
jo
hlt
inc
lcall
and
aam
mov
arpl
call
mov
mov
jne
imul
imul
pushf
push
clc
outsl
dec
or
and
aam
in
ss
jge
xchg
loopne
mov
out
test
mov
mov
pop
mov
stos
addr16
jl
xor
or
cmpsb
test
cmp
xchg
jmp
xchg
adc
mov
mov
mov
cmp
nop
inc
xlat
sarl
mov
pop
call
add
mov
stos
aas
dec
in
mov
cli
push
rcll
add
sbb
dec
lock
mov
cmpl
push
dec
fdivl
icebp
int3
int
loop
lods
cmp
faddp
imul
loop
adc
ss
fs
and
js
std
xor
add
jmp
test
and
add
sarb
pop
repz
in
push
adc
inc
scas
mov
xchg
in
pop
insb
inc
ret
das
shll
icebp
daa
jge
subb
xchg
sbb
test
lret
jae
dec
lods
mov
loope
ret
and
xchg
push
pop
movsb
mov
or
mov
add
sbb
inc
mov
std
sub
loopne
adc
add
dec
fistl
fsubr
enter
loope
sub
sub
cltd
nop
iret
shll
push
and
lcall
jns
pop
pop
insb
mov
out
inc
mov
dec
arpl
mov
xchg
es
or
scas
dec
aam
outsb
or
jle
lahf
and
adc
mov
das
ja
lods
in
scas
add
fidivrl
pop
jmp
ja
out
or
add
or
movsb
mov
push
insb
adc
sbb
sub
test
add
mov
mov
xor
adc
mov
mov
cmp
pop
add
jecxz
fyl2x
and
pushf
cld
mov
les
jg
jmp
andb
sbb
pushf
jb
mov
cmp
sub
dec
cmp
pop
pop
outsb
mov
mov
inc
cli
xchg
adc
test
mov
jo
xlat
repz
xchg
scas
sti
aam
test
mov
das
popa
pop
arpl
out
icebp
inc
push
inc
cmp
dec
cs
outsl
or
mov
roll
mov
out
adc
lock
int
xchg
in
inc
sbb
pop
mov
int
sub
push
xor
bound
lcall
in
jb
loop
fisubrl
inc
xor
pop
repz
aam
test
jns
out
lds
pop
scas
mov
je
aad
adc
cmc
cmc
mov
push
shl
aaa
enter
pop
out
add
push
add
cmp
mov
out
lods
inc
and
inc
repz
inc
fadd
mov
arpl
sahf
mov
mov
and
inc
out
dec
and
leave
adc
in
or
xchg
xchg
cmp
mov
cmp
pusha
scas
dec
cli
jne
daa
jo
sbb
or
loopne
sbb
stc
mov
mov
enter
fsubs
cmpsb
lret
push
add
inc
mov
mov
sub
sbbl
sub
pmulhuw
inc
xor
mov
loop
adc
mov
std
push
mov
lahf
fldcw
jns
cltd
push
and
jb
addl
scas
lock
add
push
xorb
decl
adc
rcrl
mov
sbb
push
push
fwait
and
pop
push
inc
xlat
mov
cmp
loope
popf
push
mov
inc
popa
xor
fiadds
dec
outsb
cltd
push
jl
push
add
lcall
xor
imul
push
sub
pop
push
call
pop
mov
mov
mov
scas
xor
fmuls
enter
in
sub
dec
mov
mov
es
sub
mov
addr16
xchg
jmp
mov
daa
or
movsl
cmp
fmull
jns
and
pop
or
add
mov
add
or
cmp
or
push
ds
fistpll
bound
or
insb
dec
addl
lcall
jp
mov
in
fistpl
sbb
cmpsb
jnp
mov
cmp
lods
inc
rcrb
in
sub
xchg
push
addb
or
jno,pn
out
xor
inc
sahf
xor
lds
ror
inc
lods
js
xchg
outsb
inc
jge
xor
lock
push
push
adc
iret
sub
in
mov
xchg
cmp
repz
movsl
cwtl
dec
push
lret
lahf
sub
iret
jge
sub
in
lock
push
mov
push
cwtl
mov
sbb
icebp
cmp
xchg
les
adc
cmp
ljmp
jne
aas
rolb
xchg
pop
jecxz
jae
jnp
cmp
out
ret
movsb
push
daa
into
rorl
jns
xchg
stc
xchg
dec
cmp
mov
inc
push
dec
push
into
xchg
pop
mov
cmp
insl
adc
xor
xor
jns
mov
repz
cmp
insl
inc
pop
subl
movsl
mov
bound
stos
scas
push
not
cli
xchg
xor
pushf
fcoml
cld
jge
adc
jge
dec
stc
inc
cmc
pop
adc
jno
jle
aam
cwtl
pop
jae
jo
adc
inc
lods
fs
std
test
xchg
ficompl
decb
pop
sbb
cmp
mov
adc
and
imul
fdivp
cmpsb
inc
ss
push
out
aam
rorl
jl
mov
cltd
call
mov
shr
test
mov
adc
pushf
pop
dec
jnp
loopne
stos
mov
xchg
bound
scas
xchg
xor
rorb
test
mov
loopne
dec
data16
mov
push
std
addb
scas
push
or
je
xor
gs
popa
fcomps
outsb
push
fnstcw
adc
out
pop
cmpl
fsub
rclb
cmp
xor
xor
push
in
leave
fsubl
dec
push
lahf
repz
loopne
add
fdivs
divl
jmp
cmpsb
lcall
shr
aaa
pop
mov
push
icebp
pushf
jb
sub
adc
test
mov
or
adc
ret
dec
icebp
mov
mov
dec
sbb
push
aaa
into
dec
cmpb
lcall
int
push
jge
mov
std
cltd
mov
push
or
adc
outsb
cmp
mov
mov
into
ds
mov
inc
cli
push
lods
sub
sarl
popf
xor
or
ficoms
xor
jmp
xchg
sbb
sbb
repz
hlt
and
pop
xor
pop
sbb
aam
arpl
jg
aas
imul
ficompl
mov
mov
imul
ja
mov
dec
adc
xor
sub
testl
not
push
imul
lahf
inc
packsswb
mov
fcom
mov
scas
cld
xchg
loopne
pushf
dec
dec
mov
mov
jo
xor
rcr
mov
xchg
xchg
ljmp
xor
je
enter
cltd
push
jmp
jno
insb
lret
out
es
cmp
xor
ret
pop
clc
jp
inc
mov
loop
lret
pop
lock
jle
cltd
scas
dec
js
jp
mov
sbb
dec
rorb
dec
push
popf
jnp
aam
jo
dec
mov
jne
shlb
jp
rep
push
lock
mov
subl
or
and
cmp
insl
add
lcall
fnstsw
fsubrl
cmp
mov
ljmp
pop
and
int
inc
cli
inc
jb
ret
mov
adc
mov
dec
xor
add
or
sub
repz
xor
and
push
mov
mov
lahf
into
fdivr
fwait
pop
scas
in
xor
and
aaa
xor
cli
lcall
sub
add
fcoml
xlat
dec
pop
bound
ds
pop
ffreep
push
sbb
adc
dec
push
dec
rol
out
jp
pusha
adc
add
and
jbe
inc
hlt
push
outsl
es
fdivrs
xchg
fisttps
sbb
mov
fs
or
sahf
cmp
cmc
add
stc
call
cmpsb
xor
jp
push
push
and
mov
iret
movb
jae
popa
stos
mov
faddl
jmp
add
fwait
ret
xchg
xlat
jbe
pop
cmp
mov
outsb
xchg
cmp
xor
inc
fwait
dec
or
dec
loop
popa
lea
push
xor
je
push
xchg
cs
int
out
sbb
jae
sti
icebp
pop
inc
sbb
loope
movsl
cmp
nop
or
in
inc
xor
stos
push
push
fcmovu
mov
sub
pop
adc
push
lret
sbb
clc
sub
mov
out
cld
cmc
mov
cmp
or
mov
lcall
or
or
hlt
add
cmp
dec
test
insl
push
sub
imul
mov
mov
sub
cmp
retw
pop
out
movsb
push
aas
dec
push
mov
xor
xchg
cmpsb
push
adc
add
xchg
fcomps
lds
outsb
loope
outsl
bound
cmp
mov
cmpsl
icebp
jmp
test
sub
mov
jo
and
ss
cmpsl
cld
or
inc
adc
mull
mov
mov
dec
loopne
stos
mov
ret
xor
mov
lods
call
int
or
test
enter
xchg
inc
repz
pop
rcpps
push
sub
xor
and
loope,pn
movsl
dec
bound
out
xchg
mov
add
subl
cmpsb
inc
outsb
sahf
xchg
push
sub
test
daa
call
sub
xor
inc
aam
inc
mov
fwait
xchg
push
rorl
xlat
mov
iret
dec
pop
add
ja
nop
push
xchg
sbb
dec
pshufw
inc
mov
adc
sub
movsl
lods
jns
and
or
mov
aam
push
add
or
inc
ret
or
xchg
or
jmp
push
xchg
stos
js
fwait
xor
add
xchg
and
imul
std
notb
ret
mov
and
inc
cli
xchg
std
mov
mov
add
leave
xchg
daa
mov
fidivs
mov
fnstcw
or
push
xor
xlat
and
int
push
jg
or
fwait
pop
faddl
inc
out
cld
fisubrs
mov
inc
dec
test
jge
xor
decl
pop
sarb
jge
test
data16
gs
push
jns
rcl
dec
fnstcw
dec
push
cmpsb
adc
mov
cs
jmp
lods
jb
cmp
and
push
fs
mov
pop
push
add
dec
mov
int
dec
sbb
fwait
pop
push
shll
idivl
and
in
ret
in
jae
aaa
nop
mov
stos
xor
scas
leave
push
mov
mov
imul
imul
mov
call
mov
ficompl
jnp
cmp
jle
push
pop
jne
xor
cmp
cmpsl
out
xor
mov
push
aad
cs
out
pop
mov
and
dec
pop
push
fld
push
jne
inc
mov
daa
or
cwtl
outsb
xlat
jge
and
sub
das
inc
je
in
dec
dec
sub
dec
data16
sbb
cmp
shrb
mov
dec
jle
adc
sahf
lret
adc
push
or
lods
imul
sub
imul
xchg
cmp
cmp
out
popa
add
xchg
and
mov
jne
push
pop
repz
push
adc
aaa
xchg
sbb
imul
add
mov
pop
cltd
mov
lods
cltd
js
jae
in
scas
jg
xlat
lods
mov
cli
sti
outsl
je
mov
adc
fisubrl
xchg
or
into
lret
daa
outsl
jecxz
leavew
sub
sbb
jb
mov
xor
xorb
mov
push
lcall
mov
sbb
dec
adc
in
out
push
cmpsb
test
cld
xor
mov
fisubl
sti
pushf
test
mov
xorb
push
mov
ss
and
xchg
mov
inc
out
xchg
inc
std
xor
pusha
subb
stc
cmpsl
shlb
loope
loope
sub
sahf
pushf
sub
fnsave
mov
jb
xor
fwait
test
mov
stos
cmc
xor
sbb
out
cld
outsb
pop
cltd
xchg
icebp
inc
ja
in
int3
sub
mov
pop
loop
loopne
mov
jns
arpl
inc
lods
inc
cmp
inc
popa
cmpsl
out
bound
andl
lret
mov
aas
or
dec
addl
mov
pop
jns
lods
fcmovbe
sarb
pop
out
outsl
dec
pop
xchg
lahf
repz
mov
fs
add
cmovnp
and
push
lea
mov
push
aaa
clc
xor
test
int
in
jno
inc
inc
lods
shl
popa
inc
popf
or
loope
aas
aaa
push
movsl
cmp
test
push
fnsave
mov
imul
adc
push
clc
js
mov
pop
mov
int
push
and
push
xchg
dec
out
sbb
hlt
add
ja
pusha
dec
jecxz
insl
mov
inc
repz
popf
inc
inc
popa
out
test
in
out
popa
or
sbb
movsb
pop
sti
xchg
xchg
jno
lods
imul
lcall
js
cmp
cltd
adc
loop
pop
push
add
mov
daa
xorb
and
lret
data16
out
pop
push
ss
adc
xchg
loopne
gs
jge
scas
sahf
inc
push
movsl
jno
mov
aad
sub
negb
movsl
addr16
lret
push
inc
pop
mov
jmp
pushl
push
fnsave
das
jns
repz
xchg
sub
sub
ret
adc
jecxz
pop
xchg
inc
inc
sbb
iret
out
inc
js
adc
sbb
scas
stos
dec
jmp
div
insb
add
enter
roll
pop
mov
push
cmp
sbb
je
mov
mov
out
adcb
xorl
adc
clc
or
xor
add
push
pop
cwtl
data16
rcrl
out
sbb
jnp
xor
iret
gs
les
push
in
popa
push
div
mov
std
mov
pop
mov
pop
cmc
inc
aad
and
add
or
cmp
loopne
sbb
sub
scas
add
pusha
push
inc
inc
add
ja
or
shll
jns
shrb
negl
jg
sbb
sub
pop
rclb
loope
add
xor
in
xor
cmp
stos
sbb
inc
cmpb
lods
mov
adc
pop
adc
pop
push
add
mov
repz
jns
add
jp
int
std
jg
mov
pop
xor
mov
add
loope
ret
jl
pop
ret
sbb
imul
xlat
mov
dec
and
mov
or
push
ljmp
and
lahf
jae
adc
adc
int
add
filds
testl
clc
cwtl
adc
pop
stos
mov
mov
mov
xchg
sub
insb
sbb
pop
add
in
and
lods
sbb
sbb
xorl
loopne,pt
jecxz
mov
rclb
sbb
mov
xor
sbb
jecxz
xlat
daa
mov
orb
sahf
and
add
les
imul
fcmovu
xor
push
dec
fildl
nop
jp
add
jge
icebp
push
pop
push
mov
shl
cmp
es
or
mov
test
jecxz
xlat
clc
jne
adc
mov
lret
in
mov
test
or
shrl
xor
test
sub
adc
adcl
push
push
ja
mov
movsw
mov
push
mov
cmp
cmp
arpl
cmpsl
fcoml
mov
push
popf
push
inc
fists
mov
imul
sbb
xlat
fldt
fdiv
imul
addr16
xchg
sub
loop
mov
push
iret
pop
jno
pop
lock
cmpsb
cmp
aas
rcl
or
xor
adc
mov
fcmovne
fs
and
inc
bound
mov
hlt
data16
and
sbb
sbb
add
xor
push
push
add
sbb
pop
sub
sbb
popf
and
jo
stos
test
rcr
cltd
push
dec
je
pop
fs
data16
inc
adc
jg
js
jle
hlt
pushf
xor
int3
and
cmp
pop
testl
xchg
and
mov
fdivrs
bound
mov
pop
leave
inc
ds
xchg
mov
jg
ds
fisubl
add
cmpsl
and
mov
imul
jmp
lea
outsb
cmp
lea
lods
or
xchg
or
mov
xor
mov
dec
mov
add
int3
mov
pop
push
rcrl
xchg
movsb
xor
push
dec
test
and
cmpsb
test
in
xchg
pusha
nop
mov
loop
pop
inc
out
inc
push
in
out
lret
jne
ret
adc
negl
divps
xor
mov
push
out
fisubrl
lods
jmp
push
int3
cmpl
mov
add
ss
inc
jp
cmp
fmuls
in
pop
fcmove
imul
fisubrs
push
pop
mov
xor
popf
mov
mov
jp
ret
fwait
cmp
pushf
and
mov
pop
adc
dec
pop
add
pop
outsl
aam
pop
xorb
xchg
mov
mov
ljmp
jb
popa
movsb
inc
and
fs
jmp
push
jo
sbb
jmp
enter
rcll
xor
sarl
xor
repz
adc
mov
xor
xchg
inc
popf
mov
lock
dec
jnp
pop
jne
not
rclb
and
cmp
rorb
notb
mov
inc
mov
push
lret
bound
popf
outsb
mov
add
repnz
sub
mov
insb
mov
adc
data16
sbb
mov
cltd
mov
and
mov
clc
pusha
addl
push
pop
lret
jp
fmull
bound
testl
inc
and
mov
hlt
aas
inc
sbb
adc
or
mov
cmp
push
gs
dec
cmpsb
cmp
cltd
pop
lds
xor
stos
inc
popf
mov
add
xchg
leave
fprem
push
xchg
loope
lahf
ss
pushf
cmp
int
das
ficomps
pop
andb
inc
inc
xchg
fucom
fnstenv
repz
push
xor
dec
repnz
cmp
cmpsl
vaddss
das
pop
pusha
popf
in
test
push
push
cmp
xchg
leave
les
adc
mov
adc
fwait
dec
mov
popf
sbb
adc
jbe
imul
int3
and
inc
ljmp
sti
fst
pop
jae
xorb
sub
pop
insb
cmp
and
sub
std
pop
int
pop
jl
add
call
lds
les
xchg
mov
lahf
ret
int
ret
test
int3
or
push
test
or
add
adc
mov
jbe
dec
dec
rorl
sbb
andb
mov
dec
add
mov
in
jae
test
adc
mov
in
in
or
push
out
pop
aaa
xor
std
cld
gs
sub
or
adc
sub
pop
sbb
pop
out
add
arpl
das
xchg
inc
mov
xor
sub
inc
push
pusha
pop
add
push
dec
push
daa
mov
adc
xlat
push
sbb
dec
jbe
cmp
test
sarb
movb
sub
cwtl
cmp
jo
inc
and
pop
xor
hlt
jp
jb
mov
dec
in
aad
fs
dec
stos
inc
loop
sub
fstl
fdivl
sbb
or
adc
push
lcall
mov
push
xchg
and
insl
test
pop
mov
lahf
hlt
sub
test
inc
push
jne
push
imul
dec
push
mov
mov
mov
aas
lods
pop
mov
mov
pusha
sub
inc
push
loope
insb
and
mov
dec
test
iret
mov
cli
shll
inc
icebp
out
cwtl
out
mov
and
xlat
mov
lods
mov
shl
xchg
adc
in
int3
clc
and
std
push
out
xchg
xchg
jbe
xchg
outsb
ds
push
fbstp
xor
data16
dec
pushf
cmpb
sahf
ds
in
xchg
insb
xor
mull
pushf
int3
sub
movsl
cmp
sub
leave
pop
jmp
addr16
mov
inc
xchg
mov
and
out
push
sahf
push
dec
mov
dec
mov
xchg
dec
adc
lahf
or
cmc
stos
int3
inc
inc
xor
jl
je
mov
jns
sub
adc
inc
lds
pop
pop
dec
xchg
fisttpl
or
jnp
fisubl
push
call
jb
in
test
fcmovnbe
fnstsw
sahf
leave
mov
sbb
or
add
push
adc
std
mov
lahf
out
jbe
sub
cld
adc
adc
pop
dec
mov
movsl
and
pop
lcall
and
sub
xorb
add
into
push
cmp
fidivrl
mov
xchg
sub
inc
xchg
ds
call
sbb
nop
into
xchg
jp
lea
pop
or
or
in
and
fidivrs
loopne
push
sti
ret
xchg
and
adc
lock
ficomps
xchg
lea
clc
mov
das
xor
pop
xchg
pop
and
out
cmp
leave
dec
inc
repz
and
flds
mov
test
popf
stc
arpl
jl
mov
xchg
mov
jne
out
xchg
and
sarb
fadds
jnp
pusha
sub
cs
push
jl
xchg
scas
push
pop
ds
cmp
lods
gs
sbb
or
faddl
flds
mov
or
subb
leave
cltd
jge
mulb
mov
push
fldl
fcmovbe
adc
pusha
xor
xchg
jge
mov
popf
add
mov
test
js,pt
cs
es
sti
xchg
pop
fwait
xor
pop
mov
jns
aas
mov
jne
fucomip
cltd
and
or
int3
sbb
push
cmpsl
idivl
test
push
mov
lret
leave
sbb
jl
add
xchg
sub
add
nop
jg
int3
mov
shlb
or
add
lret
cwtl
and
sbb
mov
jbe
mov
test
sub
or
dec
rol
cli
pop
sbb
into
das
xchg
pop
jle
push
decl
enter
mov
repnz
lock
adc
cli
lret
push
shrl
dec
mov
adc
sbb
mov
xchg
jecxz
fwait
addb
cmp
xchg
cli
popf
addr16
adc
outsl
push
xor
push
sbb
jp
push
nop
pop
mov
adc
aad
fs
cmp
scas
roll
mov
enter
lcall
add
add
xlat
call
cld
pop
push
test
mov
lea
test
in
push
fisubrl
gs
out
scas
push
add
mov
dec
lds
jnp
push
add
fldl
pmaxsw
cmp
fistpl
jne
decl
es
sub
pop
mov
or
sahf
push
in
fbstp
inc
xchg
sub
stos
mov
js
sbb
pop
jge
dec
scas
jle
xlat
cmp
or
enter
mov
out
test
xlat
mov
mov
pop
int
test
out
add
andb
sbb
pop
pop
addr16
mov
cltd
cs
cs
or
test
ss
imul
push
xchg
xchg
icebp
mov
xchg
imul
not
push
mov
fsubrs
cmp
mov
and
pop
repz
xchg
pop
out
pop
jmp
stos
mov
add
dec
mov
cmp
call
cmp
out
inc
repnz
popa
test
ret
pop
mov
lret
add
or
and
sbb
mov
imul
or
mov
scas
inc
mov
gs
mov
pop
mov
push
ds
inc
in
pop
aam
add
testb
fucomi
mov
lcall
adc
mov
addr16
xchg
dec
jp
jge
inc
push
mov
xchg
push
sub
mov
add
xor
and
int
mov
sbb
xlat
insb
add
fnstsw
aad
mov
adc
xchg
inc
scas
enter
sbb
popa
jno
clc
xchg
movsl
push
jecxz
dec
mov
loop
xor
jmp
out
hlt
mov
mov
in
jge,pn
stos
fistl
xchg
sub
scas
cmp
mov
imul
dec
test
stc
scas
jnp
loopne
cmp
or
fildl
sarl
cmp
pop
imulb
int3
movsb
pop
ljmp
xchg
sub
dec
mov
fcmovu
scas
repz
jno
adc
jl
das
sub
das
xchg
dec
cmp
negl
inc
xor
cli
add
or
in
mov
sub
jecxz
out
js
xchg
mov
push
addr16
fcmovnu
pop
jge
cmc
push
xor
lods
add
popa
dec
lock
je
push
popf
data16
addr16
mov
xor
xor
sub
imul
mov
lods
mul
mov
jae
stc
add
loopne
inc
cmpsl
lea
stc
jmp
cltd
fwait
xor
test
stc
into
gs
xor
jmp
loopne
lea
lock
pop
pop
in
push
lods
loope
or
dec
mov
push
mov
clc
clc
cld
shrl
shrb
adc
pop
mov
add
jmp
fsubp
ss
test
repz
push
in
imul
push
push
mov
icebp
test
das
mov
lcall
ficoml
jecxz
std
sbb
lcall
nop
call
sub
lcall
cmpl
jo
mov
outsb
aam
dec
mov
inc
stos
int3
sti
fmulp
stc
aaa
cmpsl
ds
daa
sub
or
rorl
lcall
ss
aaa
ret
fdivp
in
xchg
loope
loop
fstp
mov
mov
movsb
xlat
iret
sub
or
pusha
int3
enter
adc
inc
fsts
mov
lcall
mov
movsb
push
sub
aam
hlt
les
div
aad
div
lds
ss
out
xchg
mov
push
loope
add
hlt
rep
fisttps
dec
sbb
aas
daa
or
icebp
jns
test
push
push
roll
xor
loop
outsb
mov
bound
lahf
mov
test
xor
lahf
hlt
push
cmpsl
mov
aam
sub
mov
loop
addl
aaa
sub
mov
mov
mov
scas
data16
loopne
out
cmp
roll
lret
fiaddl
add
add
iret
cmp
add
repnz
or
es
loope
iret
adc
adc
sub
sbb
inc
loop
lahf
cmp
pop
stc
in
inc
mov
xorb
js
ret
sub
popf
dec
repnz
das
push
mov
cmp
adc
dec
aaa
es
add
ljmp
jg
cmpsl
ds
data16
dec
xor
leave
jo
into
mov
sub
or
dec
das
stc
pop
mov
orb
popa
stc
out
mov
pushf
push
and
mov
shl
dec
movsl
and
call
mov
mov
inc
fidivrl
lods
adc
push
nop
addr16
jle
cwtl
jl
out
test
pop
push
mov
pop
add
push
roll
and
sub
sahf
xor
or
test
outsl
daa
cs
jmp
ljmp
sub
cld
in
out
data16
cmp
or
add
push
jns
dec
test
pushl
jge
and
pop
test
int3
jmp
inc
xchg
dec
push
sahf
mov
mov
stos
std
aam
adc
and
movntq
dec
cmp
pop
xlat
roll
lds
mov
add
es
testb
fmull
lcall
roll
xchg
jge
popf
movsb
mov
adc
outsb
mov
and
xor
std
sub
dec
jp
inc
fbld
icebp
xchg
jne
pushf
adc
jne
jge
popf
xor
and
and
sub
movsb
shlb
mov
pop
cmpsb
mov
jae
and
in
data16
lret
fwait
inc
sub
xlat
inc
js
fldt
imul
lds
loopne
aas
mov
insb
pop
xor
lds
sbb
testl
mov
cltd
aam
inc
fldenv
in
dec
loop
je
lcall
das
jb
in
xor
mov
jl
mov
sti
imul
and
and
test
movsb
jns
lret
cmp
in
daa
fsts
jne
jg
pop
mov
xchg
out
outsl
xchg
mov
std
jnp
outsb
inc
cmp
jge
push
scas
sub
mov
adc
and
inc
inc
jns
sti
mov
filds
adc
pop
fisttps
imul
xlat
push
mov
mov
sbb
xchg
push
andb
mov
mov
push
mov
sti
xchg
inc
popa
shll
xlat
lcall
jecxz
bound
rol
mov
int3
arpl
aaa
into
dec
mov
fs
pop
clc
jle
roll
sub
test
xchg
dec
xor
jp
adc
mov
jne
cmp
and
jb
stos
stos
dec
sub
pop
outsl
call
xchg
mov
and
xorb
popf
dec
xlat
lcall
out
push
pop
cmp
pop
pop
fsubr
rol
ds
loopne
daa
loop
pop
cmp
fisubl
jns
push
sbb
xchg
je
data16
test
setge
or
sbb
out
push
xor
lea
or
cs
jbe
icebp
repnz
and
and
xor
arpl
jnp
push
out
pushf
sbb
dec
dec
outsb
loope
fsubrs
or
adc
incl
cmp
or
std
aad
out
repnz
mov
dec
cmpsl
jecxz
cmp
stc
flds
loope
fildll
mov
icebp
enter
dec
fistps
and
out
test
fwait
out
fildll
popa
ret
dec
mov
push
imul
bound
mov
frstor
in
inc
fs
jl
push
or
mov
sahf
xor
pusha
pop
pusha
pop
sub
and
or
sti
nop
sub
addl
pop
mov
fadds
mov
js
sub
inc
dec
adc
sbb
std
jmp
lea
or
testl
sub
lods
enter
sub
inc
shl
in
es
mov
les
rclb
xchg
mov
mov
icebp
stos
add
shll
mov
dec
jmp
jmp
jmp
stos
sub
cs
lahf
push
add
push
ljmp
inc
ret
leave
test
int
es
mov
lods
mov
mov
ret
lds
outsl
jb
cmpsl
out
xchg
mulb
push
mov
loopne
cmp
addr16
jmp
sti
mov
cli
insl
mov
test
in
xor
test
sub
scas
sbb
mov
ffree
sub
imul
or
mov
jecxz
testb
and
sbb
xlat
popl
mov
ljmp
fidivl
jnp
jns
push
fidivrl
orl
sahf
pop
fiaddl
ret
ljmp
add
lret
fstl
pusha
lcall
das
imul
sbb
mov
mov
inc
xchg
jecxz
enter
dec
ljmp
pop
mov
mov
sub
popf
dec
imull
jno
loopne
push
fwait
test
push
or
push
inc
lahf
inc
mov
mull
adc
lea
loopne
dec
dec
ljmp
lahf
lock
fmuls
addl
addr16
cmc
lret
pop
pop
jp
inc
mov
pop
aad
push
mov
cmp
xor
cmp
xchg
mov
push
out
xor
subl
pop
jecxz
push
fnstcw
iret
push
sub
dec
shlb
mov
and
lds
iret
mov
mov
mov
ds
inc
lret
adc
add
cmpb
push
xor
fldl
test
mov
subb
xchg
cmp
jnp
popf
pop
fcomp
sbb
cs
push
mov
loopne
jbe
nop
test
es
push
popa
loopne
sbb
inc
in
push
stos
in
mov
xchg
xor
lcall
std
push
mov
push
test
int3
or
jmp
pop
inc
jbe
cld
lcall
in
std
cmpl
sub
mov
es
addb
rcl
push
pop
push
adc
sbb
and
stos
out
pop
and
adc
fwait
add
jo
dec
mov
dec
jae
rol
aas
inc
movsl
mov
outsl
adc
mov
js
out
fidivl
cmp
inc
insb
aas
push
movsl
dec
movsl
in
push
jo
jle
arpl
cwtl
push
pop
enter
mov
out
sub
xchg
les
push
clc
and
push
jb
insb
mov
imul
jecxz
mov
int
inc
and
xchg
xchg
mov
lcall
push
icebp
or
scas
mov
loop
lods
sub
sbb
xor
pusha
mov
push
xor
sbb
and
xor
ljmp
ljmp
fmul
mov
cli
icebp
lods
fisubs
sbb
iret
xchg
pop
cmp
repz
in
mov
int3
jb
cmp
cmc
xchg
pop
out
call
mov
cli
shll
cltd
adc
lcall
cs
test
sbb
inc
out
dec
fcomps
mov
inc
push
pop
add
shll
mov
mulb
or
dec
xor
ret
jns
pop
test
mov
aam
cld
cmc
cs
cs
pop
repz
mov
add
push
je
stos
movsl
je
loope
insl
icebp
je
dec
je
inc
or
test
call
mov
add
jns
lea
or
jge
outsb
ljmp
popa
jns
inc
inc
mov
aas
xchg
and
inc
push
loopne
mov
xchg
jecxz
and
nop
sub
data16
shl
add
jmp
push
cs
push
popf
pop
cmp
and
int
loopne
mov
push
aad
push
jnp
xor
lcall
pop
push
test
sahf
or
inc
inc
push
xchg
bound
jae
xor
push
nop
xchg
push
in
mov
insb
sub
out
jno
mov
clc
xchg
jnp
lods
outsl
test
xor
sbb
sbb
psrlw
mov
add
or
jl
and
ljmp
push
jmp
dec
sub
icebp
inc
pop
mov
sbb
nop
xor
subl
popf
stos
adc
lds
cmp
out
mov
cmp
jmp
mov
mov
orb
lahf
hlt
sub
out
sbb
mov
inc
je
lret
cmp
les
sub
nop
leave
add
lret
sub
rolb
jns
lcall
mov
jl
mov
and
int3
adc
idivb
int
int3
idivl
iret
js
filds
cmc
sbb
cmp
and
cmpsb
shll
lds
test
aas
or
cmpsl
lcall
inc
inc
movsb
cli
pmaxub
mov
or
mov
or
fs
sti
and
fwait
pop
repnz
sbb
sahf
add
mov
jg
arpl
adc
out
bound
out
add
clc
push
jo
test
adc
inc
sbb
mov
jo
xchg
pusha
int3
test
sbb
enter
xor
es
xor
notl
mov
adc
cwtl
pop
nop
add
rcr
push
ret
shl
mov
pushl
loopne
sarl
incl
sbb
sbb
out
cmpsl
shll
cmpsl
adc
xor
movsl
mov
test
jecxz
imul
push
outsb
and
es
sbb
ljmp
adc
fxam
and
xchg
mov
lods
sbb
sub
ret
mov
mov
rorb
push
add
stc
test
imul
and
leave
dec
pop
insl
sub
test
addr16
ret
dec
fcmovnb
add
sub
push
lods
shrb
mov
call
mov
mov
mov
stos
xchg
push
jnp
inc
vpxor
arpl
stos
xor
mov
aas
jno
or
nop
push
clc
xchg
and
pop
and
fwait
sbb
arpl
outsb
testb
fmull
adc
ret
call
cmp
insl
test
stos
push
push
sbb
xor
jmp
rolb
adc
cmp
pop
cmpsb
fld
cli
daa
insb
jae
pop
or
lahf
mov
in
push
out
fwait
sub
scas
mov
sbb
mov
add
pop
mov
xchg
fisubrs
fs
sub
lods
mov
ret
sub
jp
pop
push
jle
sbb
xchg
jae
enter
in
pop
insb
sbb
ss
loope
loop
bound
inc
cmpsl
dec
sub
or
mov
xchg
sub
push
mov
sub
fildl
shlb
push
shlb
gs
cmpsb
insl
aad
and
bound
insl
stc
xchg
orb
fmul
mov
xor
sti
rcll
adc
lods
cltd
out
mov
xchg
jp
stos
pop
out
icebp
inc
xchg
sbb
add
loope
inc
jg
inc
es
xchg
push
push
loope
fnstsw
gs
jno
int3
fdivs
fmuls
sarb
ret
call
cwtl
es
inc
std
cld
and
dec
stc
popf
loop
rcrl
stc
pusha
push
sub
lods
daa
dec
lret
and
cmp
pop
fsubs
bound
ja
fmull
adc
mov
iret
mov
mov
out
addr16
das
mov
outsl
das
push
cmp
jg
shrl
sbb
stos
jmp
xchg
pop
fcomps
jb
repnz
testl
insl
pop
jl
jnp
adc
in
mov
shll
push
loop
outsb
cmp
inc
movsb
cmp
repz
pop
cmp
pop
arpl
roll
lret
cli
negl
mov
fwait
push
ret
jnp
leave
xlat
loop
incl
mov
push
xor
or
mov
mov
jp
bound
mov
xchg
mov
test
fbld
jl
add
push
in
lcall
mov
mov
shll
mov
pop
sub
sub
and
push
pop
test
sbb
mov
pop
jmp
std
jg
int
inc
mov
jl
loop
push
and
jl
or
orb
sbb
fldl
bound
and
dec
loopne
jecxz
xchg
outsl
repnz
mov
add
mov
mov
push
stc
add
cmpsl
mov
pushf
lods
jp
stc
aam
out
jecxz
es
adcl
pop
popf
jg
xor
out
popf
fsubrl
xor
mov
dec
jmp
out
cmpsb
in
scas
xchg
jle
fwait
dec
jno
inc
cwtl
jne
clc
mov
ss
xchg
pop
mov
repz
stc
mov
shll
xchg
add
jecxz
jbe
in
sbb
adc
js
in
outsl
rol
push
in
test
stc
jge
sarb
cltd
sbb
lret
sbb
out
enter
addr16
rclb
mov
mov
adc
ret
pop
lret
cld
cmp
pavgw
enter
in
out
cmc
add
enter
and
lahf
push
inc
je
std
mov
je
add
cltd
mov
scas
call
dec
or
mov
arpl
mov
pop
icebp
shrb
setle
pop
add
mov
movsb
dec
aad
add
int3
notb
cltd
outsb
sub
dec
jo
sti
test
in
fstl
call
int
sub
enter
into
in
out
in
mov
enter
roll
scas
fldl
movsb
stos
and
ss
lret
xor
in
jmp
into
jmp
xsaves
pop
xchg
repz
lret
mov
bound
push
out
inc
or
lds
int
push
sub
xchg
aad
jbe
push
cs
int3
inc
std
xchg
ja
cwtl
xor
fsubrs
scas
fs
rclb
movsb
out
adcl
adc
push
mov
jle
gs
outsl
jne
push
cmpsl
push
push
jne
lods
mov
adc
push
cwtl
std
movsl
into
pop
dec
ja
mov
int3
inc
mov
adc
fdecstp
pop
fildll
add
inc
fs
mov
cmp
sub
imul
lret
andb
cwtl
lcall
mov
mov
test
xchg
mov
pop
outsb
loop
sbb
inc
out
test
pop
aaa
dec
ljmp
mov
mov
in
add
sbb
cmpsb
and
jns
mov
in
movsb
and
cs
movsb
pop
jno
xchg
cmp
xchg
xchg
dec
call
mov
in
pop
mov
mov
nop
aad
dec
push
es
mov
inc
icebp
sahf
repnz
or
mov
int
fnstcw
das
push
das
orb
fldl
xchg
mov
scas
inc
icebp
pop
and
xlat
fwait
cwtl
push
sbb
add
mov
or
inc
lret
xchg
aas
out
cld
sub
stos
repz
cmp
rclb
push
sub
dec
jg
jae
jno
mov
xlat
aas
sarb
pushf
mov
shl
scas
popf
mov
jl
add
add
and
dec
push
mov
sub
cli
movsl
nop
rol
dec
adc
lcall
rclb
mov
loop
pop
iret
push
cmp
ffree
ficompl
mov
sahf
gs
mov
cmpl
xor
xor
xchg
fs
icebp
mov
jge
push
imul
or
lret
xchg
loopne
pop
notb
jbe
mov
rcrb
adc
push
push
dec
add
mov
pop
xor
mov
mov
rcr
gs
enter
xor
push
pushf
in
jecxz
cmp
test
xor
popf
fs
stos
sbb
pop
sub
imull
dec
add
and
test
enter
sub
fcmovbe
imul
push
addr16
insl
jmp
fs
and
cmp
jno
mov
lds
fsubl
xchg
out
push
out
fstpl
stos
push
loope
dec
mov
mov
xchg
dec
fistpll
dec
cmp
jns
mov
pop
addr16
adc
rorb
pushf
cmp
aad
pop
subb
and
fistl
aaa
push
inc
fisttpll
add
xchg
fnstsw
lds
cmp
pusha
jg
lss
mov
jbe
stos
in
mov
add
ror
and
mov
rcl
call
mov
xlat
outsb
ret
pop
jo
pop
out
insl
shll
pusha
repz
sub
jae
bound
add
ljmp
call
xor
lods
dec
aaa
xchg
roll
and
mov
cmp
push
cmp
sub
clc
sbb
stos
mov
ret
ret
lretw
faddl
inc
cmpsl
pop
add
or
fsubs
dec
jge
jno
sub
aad
iret
or
movsl
mov
push
xor
cmpsb
push
xchg
xchg
idiv
aad
mov
sbb
clc
sahf
jns
mov
mov
adc
insb
pop
adc
xchg
pop
push
or
sub
xor
sbb
mov
dec
jmp
fcmovne
xor
mov
adc
sub
or
enter
adc
jns
pop
in
push
cmpsl
decb
jbe
loopne
roll
stc
arpl
xchg
sbb
cmp
jecxz
xor
mov
js
pop
sbb
inc
mov
dec
dec
test
cmp
or
sbb
ja
inc
push
notl
addl
push
xchg
fistpl
or
fisttpl
fmul
ds
aas
cmp
sahf
mov
or
adc
ljmp
push
sub
xchg
rcrb
into
in
jl
arpl
pop
jmp
mov
stos
cmp
inc
jmp
shrb
sub
mov
rcll
xchg
pop
jnp
dec
cmp
repnz
fsubrs
cmc
push
fwait
jb
mov
jnp
int3
pop
xlat
pop
loope
enter
insb
add
sahf
cmpsb
insl
jge
or
dec
in
xor
leave
lahf
adc
pop
inc
inc
cli
cmp
imul
cmc
add
xor
and
inc
xchg
popa
xor
mov
ret
sbb
popa
mov
imul
ljmp
add
pop
cmc
hlt
mov
mov
cs
hlt
push
xchg
lahf
add
xchg
adc
mov
push
push
cmp
sti
ret
inc
iret
pop
ds
mov
sub
loopne
daa
cmpsb
inc
xor
cmp
sahf
pop
inc
orb
mov
push
mov
inc
mov
sbb
lret
dec
insl
sbb
rorb
scas
aad
jg
xor
or
fisttpll
movsl
in
jl
mov
addl
ja
enter
dec
test
fmuls
cmp
inc
add
mov
cmp
jbe
mov
imul
mov
repz
push
out
xchg
push
cmp
xchg
in
push
dec
mov
fdivrl
aam
int3
pop
mov
mov
stc
sbb
mov
mov
adc
sbbb
xor
daa
data16
cli
add
and
xor
mov
and
add
xchg
popa
rcl
fidivrs
push
movsl
jb
outsl
pushf
jg
push
std
lods
lea
pushf
xor
mov
dec
iret
jo
std
xor
xor
cli
test
test
bound
push
adc
movsl
in
ret
repz
mov
sbb
es
fs
mov
sub
inc
cltd
pop
andl
pop
pop
iret
jbe
mov
xchg
sub
or
jbe
mov
insl
rcl
enter
out
push
sbb
les
pushf
ss
shlb
dec
xchg
in
xor
mov
mov
insb
add
sahf
lods
add
scas
xchg
dec
icebp
cmpsb
fdivs
mov
cmpb
shl
pushf
ds
loop
out
xor
lea
xchg
push
call
dec
aas
or
into
and
sub
ss
es
push
dec
popa
mov
mov
idiv
jg
loop
sbb
adc
je
xor
xor
cli
mov
test
rcll
or
lret
fidivl
push
xchg
divb
inc
movsl
je
call
jne
movsl
aaa
sti
daa
jl
push
out
push
mov
pop
adc
rorb
imul
add
fstps
inc
mov
cs
xchg
jb
add
iret
adcb
shrb
leave
lret
cmpsl
push
aas
movsb
repz
add
mov
xchg
cltd
insb
dec
add
repz
inc
loope
mov
sub
cmpsl
xchg
adc
push
mov
dec
push
dec
rcrl
lret
pusha
mov
xchg
ret
incb
sub
and
cmp
mov
push
and
sbb
jecxz
jne
jmp
jg
jecxz
sbbl
add
fldl
and
add
push
pop
fisubrs
andb
pop
imul
adc
imull
sub
aad
push
data16
mov
mov
roll
pop
xchg
add
push
sarb
sbbl
mov
or
sahf
pop
sbb
pop
popa
shlb
ds
pop
lds
cmp
sub
pop
push
dec
ret
in
jne
pop
scas
in
mov
xchg
inc
sub
iret
fidivs
int3
imul
subl
mov
mov
decb
dec
scas
sbb
stos
inc
xor
imul
outsl
shll
aas
in
arpl
out
lret
sbb
cmp
pop
addr16
pop
mov
pop
loope
inc
adc
in
outsl
ret
leave
fs
cli
mov
fsub
ficoms
mov
or
inc
std
cmp
mov
add
sub
pop
adc
push
cmp
adc
inc
dec
mov
ss
push
rcrl
outsl
cli
std
xor
adc
das
adc
jnp
das
cmp
jb
call
mov
jge
rclb
dec
mov
out
jle
adc
add
jg
cltd
mov
sub
aad
and
ret
lcall
sub
aam
mov
adc
cs
nop
inc
pop
inc
fsubr
je
jbe
popa
jno
sarl
sub
mov
xor
loopne
sub
mov
repz
xor
mov
mov
out
pop
mov
cmc
and
pushf
sub
cltd
jb
cmp
ret
mov
jmp
jno
cmc
dec
ds
sbbl
cmc
fadds
adc
adc
sbb
repnz
pop
xlat
sub
sbb
popa
mov
adc
or
fcoms
hlt
out
push
xor
ret
xor
fisubrl
adc
pop
cmp
sub
dec
jae
push
test
imul
cmpsb
cwtl
das
sbb
jp
jns
test
jbe
mov
cli
in
dec
jbe
sub
xchg
jge
mov
pop
sbb
cmp
mov
fsubrs
movsb
loope
aad
add
mov
sbb
add
xor
or
push
int
xor
xchg
in
inc
dec
inc
mov
out
bound
add
in
insb
jmp
iret
shrl
rcrb
aad
loop
in
add
cmpsb
mov
adc
pop
testb
mov
pop
jp
lret
jl
add
jno
ret
fsubrl
das
push
faddl
mov
in
and
push
incb
pop
fucomp
push
shrb
call
mov
sbb
movsl
lret
push
les
call
inc
imul
inc
lret
add
test
test
outsl
test
cmp
dec
insb
in
mov
call
xor
xchg
jno
mov
push
add
add
lods
shl
std
or
das
in
into
sbb
call
pushf
cmp
add
push
mov
ds
stos
pop
add
cmp
pop
jl
push
cmc
pop
mov
adc
in
popa
fiadds
mov
movsl
shll
add
xchg
push
frstor
cli
push
shl
cld
mov
out
jecxz
pop
into
popf
lods
pop
mov
mov
push
icebp
mov
rcr
loopne
cli
adc
scas
addr16
xor
das
ss
dec
push
in
inc
or
leave
testb
test
mov
popa
mov
aam
lods
jo
cmpsl
cmp
mov
jecxz
sub
scas
push
push
adcl
jae
movsb
lret
xchg
adc
pop
mov
je
push
mov
cs
cmp
js
out
test
or
out
and
out
lahf
daa
sub
add
addr16
pusha
pushl
add
stos
rcll
fs
scas
inc
push
shl
push
mov
int3
cmp
inc
stc
ret
pop
sub
mov
or
std
cmp
shlb
fisttps
and
add
outsb
data16
inc
pop
nop
insl
sub
xchg
shlb
mov
js
or
test
and
fs
iret
sbb
mov
push
push
movsl
inc
sub
xor
adc
inc
test
rcrl
sbb
push
dec
cmp
sbb
add
dec
mov
cld
ja
loopne
imul
out
lea
outsb
bound
je
stos
sbb
int
jge
mov
push
rep
out
sbb
ds
and
jecxz
lret
mov
cli
bndstx
sbb
jnp
dec
push
adc
mov
mov
adc
fcompl
repz
cmp
pop
ja
fmull
test
ss
cs
and
inc
sbb
mov
cmp
dec
jno
push
pushf
pop
dec
adc
movsl
cmp
cmpsl
test
stc
push
pop
scas
jp
inc
dec
scas
cld
push
in
clts
adc
inc
mov
push
mov
add
xor
cmovl
and
xchg
or
out
and
fimull
jg
das
inc
aas
cwtl
fwait
sti
cwtl
loop
andl
cs
fists
lds
inc
cltd
in
into
and
cmp
inc
dec
sbb
mov
daa
push
test
dec
les
xor
jecxz
inc
sahf
stc
dec
inc
jo
daa
lret
push
mov
adc
daa
mov
test
stc
xor
pop
xchg
add
repz
add
xor
mov
cmp
xor
aas
pop
push
dec
adc
out
inc
gs
cmp
mov
or
or
call
test
mov
push
insb
adc
das
inc
dec
cmp
out
stos
sbb
dec
adc
sub
insl
out
lret
xlat
mov
fisubs
shrl
sbb
jno
outsl
push
adcb
in
xor
or
jns
aaa
das
cmp
and
jo
unpcklps
and
pop
add
mov
xchg
pusha
inc
cmpsb
pop
jecxz
imul
mull
adc
lds
fcmovnb
jle
and
fidivrl
fldenv
mov
jmp
pop
and
dec
lret
cmp
mov
ss
scas
jge
dec
popf
lods
stos
cmp
out
movsb
andl
and
sub
mov
or
rcrl
xchg
xchg
mov
out
lret
xor
jecxz
jecxz
rol
aad
jae
sub
idivb
dec
cmp
inc
adc
nop
lods
enter
ss
mov
push
imul
jl
adc
lcall
and
pusha
or
pop
test
pop
lods
cld
outsl
aad
mov
pop
jge
js
leave
inc
mov
mov
stos
mov
mov
imul
stc
in
xchg
imul
ret
pop
pop
clc
push
push
icebp
or
mov
add
push
jl
test
cmp
xchg
push
and
sub
stos
pop
iret
pop
jo
mov
inc
bound
repz
data16
lret
push
jno
stos
inc
mov
dec
leave
int
aad
mov
fstl
add
mov
icebp
sahf
and
inc
das
in
stc
stos
xchg
js
loope
add
adc
mov
mov
mov
dec
xchg
or
adc
dec
mov
lahf
add
xchg
mov
xlat
xchg
js
sti
push
mov
stos
jbe
scas
scas
outsl
mov
or
mov
mov
sbb
mov
lds
inc
push
outsb
sbb
int
mov
inc
outsl
sub
aas
or
std
mov
mov
in
mov
pop
pop
icebp
out
mov
dec
in
fidivrs
test
test
dec
add
lock
dec
pop
dec
and
es
clc
pop
adc
ss
je
xor
test
decl
pop
sbb
stos
inc
xchg
adc
cmpsl
call
data16
xor
inc
add
or
bound
jns
iret
xorb
xor
fsubs
scas
pop
scas
lock
movsl
scas
sbb
out
and
or
pop
std
nop
sbb
lcall
push
call
inc
cmp
dec
add
or
adc
lahf
push
aam
shrl
insb
mov
adcl
imul
stos
jae
sub
sbb
or
inc
push
mov
shll
pusha
xor
ss
sub
cli
adc
xor
push
clc
inc
sub
lea
repnz
es
shr
and
dec
stos
mov
faddl
xor
cmp
mov
div
addr16
xor
sbb
push
inc
pop
movsl
lds
add
mov
cmpsl
stc
adc
movsb
movb
push
dec
cmc
mov
push
out
xchg
shl
jle
stc
pop
xchg
outsb
pusha
jae
xor
sbbl
lcall
push
fsubp
in
andb
outsb
adc
in
data16
rolb
lock
pop
and
pushf
popl
jle
add
xchg
sub
pop
sbb
mulb
cs
xchg
mov
sbb
push
inc
lock
push
fwait
adc
rol
cmp
cli
jne
rol
xchg
mov
lock
xchg
xor
call
roll
mov
shl
xchg
cmp
xor
push
das
movb
shlb
aam
loope
jae
das
mov
pusha
mov
lcall
jb
ret
test
add
adc
mov
ud1
aam
daa
popa
sbbl
pop
cmc
lods
decb
sbb
call
fucom
xchg
mov
cmp
mov
ljmp
mov
dec
ds
fbstp
adc
inc
enter
iret
jmp
push
test
inc
mov
xchg
or
fs
pop
cmp
shlb
sbb
sbb
jp
add
inc
outsl
movsl
mov
cmpsb
outsb
push
adc
jns
stos
push
dec
in
addl
jo
fstl
scas
inc
inc
lcall
insb
add
lock
test
dec
xor
mov
popa
testb
in
mov
scas
cmp
cwtl
sbb
ja
adc
jmpw
pop
inc
mov
in
xor
adc
call
or
sti
test
push
lock
xchg
jmp
test
and
jne
cld
inc
inc
fcomp
push
push
sbb
fcmove
sbb
xlat
outsb
cmc
mov
cmp
fisubrl
dec
pop
dec
mov
mov
pop
pop
sub
xor
add
sbb
lret
mov
icebp
enter
shll
dec
sbb
lahf
adc
in
push
pop
pushf
repnz
mov
aam
and
and
xchg
inc
jbe
lods
js
mov
aam
lret
sti
push
pop
cmp
repnz
xor
mov
add
mov
pop
mov
loope
out
mov
mov
hlt
cmc
push
into
push
cmp
jne
dec
stos
lods
push
jne
out
sub
call
movsb
aas
cmp
icebp
frstor
push
repnz
fsubp
bound
push
ds
pop
push
cmp
xor
mov
outsb
scas
push
testl
cmp
mov
icebp
mov
stos
pop
mov
mov
sbbl
imul
jmp
lret
cmpsb
call
clc
out
aam
xor
jnp
pop
lcall
cli
insl
sub
les
pop
pushf
add
mov
lds
into
dec
aad
fldcw
xchg
pop
and
dec
pop
cmpsl
jle
pop
jg
ret
insb
jl
jmp
rorb
clc
shlb
lods
mov
sahf
lods
jb
fwait
ja
pop
adc
shll
mov
ret
sbb
mov
inc
imul
loope
dec
add
and
mov
inc
pop
cmovo
add
fcmovu
or
or
dec
in
out
gs
sar
mov
pop
outsb
ljmp
sub
dec
or
repnz
xchg
inc
adc
mov
imul
aaa
int3
fisubrs
jecxz
xor
movsl
sbb
repnz
cltd
xchg
xor
mov
push
mov
testl
fsubrs
sbb
insl
sub
test
pop
imul
js
lods
and
adc
fsubl
push
mov
jns
cmpsb
ret
sbb
nop
xor
jge
adc
push
push
push
mov
sub
mov
rolb
nop
lahf
pop
ja
repz
or
subl
inc
insb
add
pop
mov
and
xchg
loop
inc
fadds
clc
insl
je
stos
int
inc
fstpt
out
mov
jp
pop
mov
stos
mov
sub
dec
jmp
sbb
sbb
int
and
int
outsl
add
dec
pop
mov
mov
mov
cmc
outsb
stos
ljmp
call
mov
dec
push
mov
add
cmpl
mov
std
xchg
xor
mov
xchg
mov
loope
pop
xchg
mov
dec
sbb
movsb
rorb
lds
sub
and
pushf
jne
dec
xchg
mov
call
xchg
scas
mov
adc
adc
rcll
dec
shl
xchg
dec
or
dec
push
js
adc
insl
pop
push
sbb
xchg
fwait
ljmp
mov
cmp
inc
mov
mov
jbe
daa
outsl
loop
mov
jno
cmp
dec
jae
lahf
lods
js
push
xchg
add
in
cmp
mov
mov
mov
add
xor
icebp
lea
sub
adc
hlt
xorl
adc
cmp
jne
add
stos
das
xchg
notb
mov
push
clc
jb
outsb
icebp
cli
push
cli
fwait
mov
jmp
loop
sbb
std
ja
fistpll
hlt
jns
jl
jg
in
or
shl
mov
xchg
pop
inc
incb
iret
loopne
int3
cmp
rcr
nop
mov
stos
aad
popa
or
ja
bound
out
sbb
shl
lods
push
mov
js
sub
inc
jns
lods
jns
icebp
test
dec
js
cmp
pop
xchg
fsts
fwait
xchg
jl
fsubrs
inc
push
ret
insl
jnp
test
hlt
loope
pop
sub
pop
jge
xchg
jne
jp
in
cmp
lcall
add
insl
loopne
stos
cwtl
and
lods
inc
ficomps
mov
shr
sti
in
inc
pop
jbe
fs
inc
jmp
jge
mov
push
repz
add
xchg
or
mov
mov
repz
dec
xchg
pop
scas
lds
cmpsl
sbb
mov
ret
and
cwtl
xchg
out
mov
neg
inc
sub
or
cwtl
mov
sub
fcomip
shl
daa
add
sar
int
inc
decl
and
cmp
ljmp
push
clc
jae
loop
inc
lock
in
push
xchg
mov
pop
shlb
shrl
pop
or
xchg
pop
adc
inc
call
shll
pop
mov
outsl
adc
ss
je
cli
pushf
or
sbb
and
loop
push
jnp
cmp
add
in
push
adc
shlb
std
imul
dec
jb
push
lahf
pop
xchg
sbb
and
fs
push
cmp
pop
cmpsl
pop
fidivs
jae
subb
shr
cld
out
mov
test
in
andb
pusha
test
xchg
dec
push
add
sbb
fldl
pushf
cmp
xchg
jge
sub
sbb
out
push
or
popa
adc
mov
sbbl
ljmp
js
mov
mov
testl
ds
jmp
aaa
icebp
adc
faddp
clc
test
push
loope
xchg
imull
out
dec
xchg
outsb
fwait
and
push
xor
sub
out
imul
mov
outsb
mov
cmpsb
subl
in
xchg
and
inc
sahf
loop
fldenv
and
stos
sbb
jle
or
andb
sahf
push
or
enter
ret
arpl
cld
testb
gs
jp
stos
inc
push
repz
dec
icebp
cld
enter
fstps
or
fnstcw
aam
mov
adc
pop
std
pop
and
adc
ja
mov
dec
push
jle
push
mov
jno
cmp
mov
imul
js
dec
mov
push
dec
push
movsl
into
cmc
pop
add
sub
add
test
or
int3
jle
in
aas
or
data16
xor
adcb
pop
in
pop
inc
sub
add
cmp
gs
sub
mov
shlb
jl
dec
sub
int3
lahf
lcall
mov
sbb
mov
push
mov
addr16
xor
call
into
popf
scas
f2xm1
bndstx
sti
xchg
ljmp
inc
pop
push
cmp
xor
xlat
fistpl
pusha
fstpt
push
push
xor
cld
mov
xor
adc
and
dec
pop
movsb
jg
int3
jo
push
jle
inc
pop
lock
jne
mov
pop
out
shlb
or
or
sahf
xor
cmp
pop
cmp
jnp
test
mov
push
fwait
es
sahf
jecxz
or
mov
xchg
push
cmp
jno
cmp
xor
shl
cld
pop
jo
inc
es
fbld
cmp
or
xchg
mov
lods
pop
mov
inc
loop
subl
mov
inc
data16
jne
mov
mov
shlb
xor
test
gs
mov
mov
mov
lret
mov
sarb
sbbl
mov
xlat
xor
repz
stos
dec
xchg
xlat
pop
pop
push
jge
fsubrs
push
xchg
inc
cmpsb
sub
inc
add
mov
aam
pop
add
cs
stc
mov
outsl
add
jne
cli
jne
sbb
enter
xchg
pop
mov
inc
shl
sub
or
mov
lcall
sub
lock
lret
xchg
sub
push
cmp
lahf
push
mov
fld
xchg
aad
rcl
add
xchg
xor
in
or
lcall
loope
mov
imul
inc
add
add
pop
and
and
jge
or
xchg
cmp
imul
jno
jecxz
inc
leave
xchg
dec
sarb
add
sbb
xchg
xor
shl
jns
jbe
pop
sbb
inc
in
pop
call
insb
jl
push
daa
jne
pop
iret
sub
push
imul
inc
sbb
jge
rclb
pop
lods
ja
filds
sahf
pusha
stc
ret
rol
pusha
jp
push
jo
les
sbb
push
rcll
pop
dec
jns
mov
cld
dec
fdivrs
imul
sbb
data16
mov
add
fisttpll
jecxz
jge
add
mov
dec
fwait
aam
sub
pop
inc
mov
xlat
adc
fmul
clc
addr16
inc
ja
jmp
sbb
cmp
in
mov
adc
rcll
mov
cmp
clc
das
xor
xor
jecxz
push
sarl
nop
ss
mov
imul
fucomp
mov
sbb
in
ret
adc
xor
lea
sar
ret
cld
jg
cs
mov
inc
sub
inc
test
cld
xchg
adcb
or
sbb
outsl
xlat
fidivrl
cld
fists
mov
and
xor
mov
sbb
or
xchg
fsubrs
ljmp
sbb
xor
adc
mov
add
leave
push
cmp
inc
add
inc
jecxz
mov
out
popa
cmpsl
or
idivl
fnstcw
ror
je
push
dec
call
andl
xchg
pop
jne
insl
push
jnp
mov
xchg
jo
cmc
push
cmp
dec
cltd
cmp
popf
bound
cmp
ss
js
sub
cmc
pop
mov
jl
scas
bound
and
fadds
subb
int3
inc
fidivl
aam
jl
pop
jecxz
mov
jns
daa
mov
fcoml
in
idivl
xor
jge
push
mov
jae
dec
adc
push
lods
testb
ret
lea
leave
and
add
jecxz
in
jmp
lods
mov
decb
outsl
push
cmp
cmp
adc
or
fmull
push
dec
jbe
rolb
imul
mov
push
pop
xor
fdivrs
inc
movsb
cmp
push
inc
pusha
roll
mov
sbb
stos
cmp
out
test
pop
clc
push
stos
mov
stc
xor
adc
pop
or
sahf
popf
push
inc
xchg
test
push
je
hlt
sub
add
aas
dec
jnp
jnp
cmpl
sbb
xlat
dec
das
pop
bnd
ret
loop
adc
into
ret
mov
xchg
dec
jecxz
in
cwtl
pop
imul
mov
add
sti
push
cmpsb
fisttpll
mov
push
movsb
mov
aad
jle
bound
adc
xchg
int3
jo
lahf
and
jbe
jne
push
stos
lahf
jl
fmuls
mov
push
je
push
dec
fwait
fs
sub
jge
test
movsl
dec
clc
or
dec
mov
lods
pusha
ljmp
cmp
inc
arpl
cs
dec
push
or
inc
add
fisubs
loopne
aam
mov
ja
jbe
lahf
ja
adc
cmp
push
mov
dec
pop
xor
cmp
jae
xchg
xchg
sub
test
add
insl
push
out
sahf
push
push
mov
pusha
arpl
lret
xchg
sub
fdivs
xchg
shlb
and
mov
into
subl
int3
sbb
mov
xor
inc
sahf
push
inc
inc
popa
xor
sbb
add
popa
inc
stos
addr16
fstpt
cwtl
jl
out
pop
or
mov
mov
lods
ljmp
jns
testl
pop
jae
adc
adc
lock
daa
push
movsl
pop
sbb
mov
ljmp
pop
scas
inc
cmp
mov
mov
pop
push
mov
imul
push
mov
test
cli
mov
adc
into
arpl
aas
push
add
lods
jo
mov
call
cld
clc
dec
into
push
sbb
sbbl
lret
xlat
clc
mov
pop
out
fmul
xchg
dec
ret
adc
push
and
inc
jle
dec
lcall
mov
cmp
fs
pop
jmp
test
rep
lds
and
dec
test
out
jnp
push
es
ss
out
xchg
outsl
gs
or
insb
movsl
shlb
mov
and
ret
jnp
xor
mov
lahf
enter
mov
inc
jge
ret
adc
mov
rolb
ret
push
or
mov
repz
cmp
dec
test
mov
ds
lds
negb
shlb
xchg
sub
fidivrs
xor
push
popf
scas
or
repnz
push
xor
sbb
cmp
sub
rcll
pop
stc
sub
push
mov
in
jns
sub
jmp
out
jne
int3
xchg
cmpsb
jmp
mov
leave
ss
push
insl
xchg
lods
out
push
sub
add
out
cmp
xchg
aad
mov
mov
add
aam
cs
test
rcrl
fdivl
inc
pop
sbb
cs
jb
sbb
jp
sahf
cmp
jge
mov
ljmp
lret
push
test
in
cld
jp
aam
add
mov
adc
and
jae
sbb
adc
fs
bound
insb
dec
imul
fldenv
or
neg
pop
xor
dec
xchg
lods
jge
adc
testb
xlat
pop
fsubr
xlat
dec
rol
shlb
scas
push
jl
test
inc
imul
cmpl
lods
mov
nop
bound
jp
pop
mov
aam
jl
sub
sbb
ss
add
inc
fidivrl
mov
or
das
and
sbb
mov
les
testb
xchg
in
mov
imul
or
inc
dec
inc
pop
jbe
pusha
push
adc
aaa
mov
dec
sub
adc
or
push
in
or
mov
lret
call
cmp
push
ja
mov
and
pop
sub
jge
and
adc
sub
adc
fimull
inc
fisubrs
mov
cld
add
lret
sbb
pushaw
mov
pop
ljmp
loopne
test
pop
cmc
pop
repz
dec
ds
mov
lret
inc
lods
adc
subb
movsb
push
mov
xor
add
bound
nop
lods
and
bound
jle
adc
mov
push
mov
or
ret
dec
out
jecxz
loop
push
inc
sbb
test
lea
notb
sub
add
sub
es
hlt
cmc
mov
and
or
mov
daa
dec
inc
pushf
subl
dec
xor
push
fs
movsb
repnz
andl
in
sub
sbb
je
inc
cmp
in
xor
out
mov
jl
xchg
or
xchg
incl
clc
frstor
mov
jge
jnp
add
adc
pop
fisttpll
xchg
mov
out
jo
sbb
cmp
or
movsl
xor
test
in
add
nop
jg
mov
xchg
xor
push
jmp
or
mov
ljmp
clc
xchg
lods
add
push
repnz
dec
and
pop
test
jb,pt
mov
rcll
cmp
rol
xchg
pop
jg
aam
xchg
cmpsb
cld
lcall
add
out
dec
xchg
insb
pop
inc
ret
jp
xchg
mov
dec
inc
dec
clc
rclb
test
sbb
jg
pop
sub
mov
inc
push
push
aam
mov
dec
repnz
stc
int
push
int3
lret
or
sbbl
pop
sub
leave
xor
push
test
call
jne
cmp
test
das
iret
das
push
push
stos
xchg
icebp
xor
andl
pushf
test
daa
bound
das
ds
and
xchg
subb
clc
or
xor
add
mov
xchg
jbe
pop
out
add
xlat
in
dec
or
pop
mov
adc
icebp
lcall
sbb
pop
lds
pushf
dec
and
iret
data16
add
sub
lret
xor
lret
cmp
adc
add
and
adc
stos
stc
inc
add
out
fnop
sbb
xor
pop
icebp
loope
in
sahf
inc
dec
cwtl
dec
push
sub
mov
mov
add
imul
mov
out
adc
add
mov
into
hlt
stos
fcoms
sbb
pusha
lods
insb
jo
pushw
mov
out
mov
sub
jge
ljmp
jg
jp
jne
mov
mov
pop
or
push
aas
mov
lret
mov
ss
cs
lret
add
pop
mov
sbb
and
push
mov
or
insl
test
shll
push
aas
sbbb
adc
fstl
fsubl
adc
sbb
and
mov
imul
jo
sbb
repnz
lods
hlt
cmc
lds
aad
fildl
add
jbe
mov
in
sub
cmp
add
sbb
movsb
cmp
out
pop
xchg
jo
and
fcompl
lods
cmp
xlat
repz
gs
das
cs
sarb
scas
add
mov
push
scas
inc
fistps
mov
fnstenv
mov
divb
jno
push
adc
cmp
popl
call
ror
push
iret
jp
nop
mov
inc
pop
xor
outsl
mov
cmc
iret
aaa
std
iret
push
in
into
mov
or
jno
arpl
inc
mov
fstl
fdivrl
test
repz
cmpsb
cmp
in
inc
mov
insl
std
addr16
out
pop
lret
pop
lea
cmpsl
ret
add
xlat
and
scas
dec
jmp
fistpl
outsl
xor
jb
cmc
inc
mulb
inc
mull
dec
push
mov
gs
xor
pop
fisubl
out
sub
xchg
mov
fistps
or
dec
mov
gs
adc
push
add
cmp
cmp
das
int3
js
cmpsb
sub
jnp
jb
push
mov
lock
cwtl
push
push
lret
repnz
pop
dec
xlat
mov
push
add
push
pop
add
addr16
push
mov
ret
or
pop
imul
ljmp
shl
stos
mov
xchg
sub
jnp
nop
out
pushf
sbb
aad
sbb
lods
ret
outsl
xchg
test
rclb
test
int3
jae
movsl
clc
inc
sub
cli
addb
inc
les
ds
pop
decb
xchg
add
mov
dec
test
or
add
adc
dec
or
test
pushl
iret
or
push
mov
out
mov
mov
test
pop
mov
mov
std
xor
arpl
ja
test
cli
add
das
outsb
pop
sbbl
enter
jle
icebp
js
dec
dec
sahf
icebp
xor
fists
xchg
mov
xor
push
jne
add
jle
scas
inc
mov
hlt
xchg
arpl
ret
xor
jmp
pusha
adc
insb
add
hlt
sub
mov
push
add
or
fstl
es
mov
pop
xor
xor
cmp
ret
jae
imul
dec
push
in
mov
sarl
fstpt
adc
push
iret
pop
in
fstl
outsb
dec
out
popa
dec
pop
mov
push
adc
or
xor
aaa
in
out
into
movlps
fwait
push
xchg
mov
shll
dec
sub
rorb
mov
xchg
mov
mov
ljmp
xor
mov
jle
sub
pop
cmp
add
jp
fldl
nopl
and
and
js
lods
pop
lahf
adc
aad
xor
dec
dec
aaa
jecxz
cld
stc
jmp
xchg
xchg
and
loop
jmp
movsl
hlt
mov
shrl
push
repnz
xor
or
xor
dec
aam
aam
dec
add
jnp
fbld
xchg
sub
shl
jno
jb
cwtl
xorl
jp
lret
pop
dec
jp
shlb
adc
int3
pop
adc
loop
or
call
or
jmp
into
mov
mov
and
movsb
add
cmp
cmovne
inc
mov
cltd
int
mov
int3
cld
sar
xchg
lds
push
jb
daa
dec
dec
cmc
adc
push
jmp
lock
adc
and
pop
cs
inc
lods
and
add
add
pop
stos
pop
roll
dec
mov
mov
adc
addl
sti
sbb
mov
or
jl
in
jno
xchg
imul
xchg
dec
pop
lahf
xor
add
lahf
repz
pop
aam
sub
clc
or
mov
mov
leave
inc
mov
loope
pop
fcom
mov
hlt
mov
pusha
imul
inc
mov
outsb
mov
sbb
ss
sub
pop
rclb
sbb
xor
data16
mov
mov
adc
jmp
xor
and
mov
sbb
insl
aam
xor
lret
in
imul
push
gs
mov
push
add
fisubs
testb
gs
ljmp
subl
push
int
dec
lods
pushf
or
sub
testl
loope
decb
adc
cmp
or
lds
bound
fisttps
test
sub
scas
scas
orl
jae
xor
sbbb
push
out
add
mov
xchg
insl
and
xchg
sbb
shl
mov
das
adc
sahf
int
imul
addr16
cmp
and
xorb
iret
int3
xchg
dec
aam
push
add
jp
xchg
inc
xchg
sbb
mov
mov
pop
xor
mov
dec
enter
call
cmp
sti
xchg
lds
dec
push
es
or
adc
and
or
xor
dec
into
aaa
in
sbb
pop
cltd
popa
or
lods
xchg
fildl
xor
cmp
sbb
imul
jg
xchg
test
pusha
jmp
push
mov
adc
aad
pop
out
inc
inc
fnstcw
jae
das
repnz
divb
mov
push
adcb
mov
jns
push
mov
mov
int
mov
jge
add
loop
mov
xchg
scas
not
movsl
data16
imul
inc
lock
jmp
adcb
addl
or
mov
sub
push
aam
push
cld
aam
hlt
push
outsb
stos
inc
cwtl
in
fdivrl
xor
xor
mov
push
or
add
popa
mov
cmpsl
fnstsw
mov
cs
mov
fmull
int
inc
cs
pop
into
cmc
fldenv
popa
xor
cmc
push
mov
adc
cmpsl
xchg
repz
sub
mov
sbb
and
mov
mov
pop
out
scas
xchg
ret
and
pavgb
jns
fnsave
gs
data16
xchg
lock
leave
insb
mov
and
movsl
mov
mov
loop
cmp
and
or
cmp
adc
and
or
mov
fdivr
rorb
gs
fwait
dec
dec
shll
sbbl
jecxz
lock
mov
add
add
fwait
or
and
mov
push
movsl
or
rcl
lret
sub
sbb
mov
jge
sbb
adc
loope
add
inc
fs
in
rorb
mov
adc
xor
xor
into
stc
pusha
in
sub
inc
je
mov
jns
push
fcoms
adc
push
pop
outsl
fistpll
pushf
ja
ss
sbb
ds
cmc
add
test
aad
ret
out
add
xchg
sub
jo
in
xor
adc
ror
mov
sub
in
test
or
dec
xchg
aas
mov
mov
scas
out
cmpl
mov
dec
out
jne
les
or
cmpsl
sbb
jg
loop
loope
enter
pop
daa
mov
sub
imul
mov
aam
cwtl
aad
adc
jle
adc
inc
jp
sbb
jge
jmp
clc
mov
mov
aaa
add
xchg
clc
pop
fdivrs
or
out
xor
in
push
popf
or
lea
fildll
mov
dec
stos
loope
or
or
clc
dec
xchg
mov
push
roll
int3
dec
fstpl
push
jnp
adc
je
ret
jmp
fmull
mov
sub
jg
jo
dec
mov
or
sarb
fstps
mov
fsubs
mov
lret
lods
sub
add
mov
test
aad
sbb
shrb
pusha
or
or
lret
or
lods
popf
lcall
insb
int
fnsave
push
inc
aam
mov
aas
pop
std
movsb
cmp
jle
lods
pop
fwait
out
cmpsl
repnz
mov
sub
push
stc
sahf
sub
lods
dec
cmp
inc
xor
dec
lret
loope
jge
or
cmpb
hlt
addr16
aam
mov
sar
movsl
mov
dec
mov
jp
outsl
clc
sub
mov
aad
xor
adc
push
fisttpl
jnp
inc
jl
std
mov
mov
jo
test
cmpsb
inc
jecxz
cmc
xchg
shl
sub
jns
push
push
aad
xchg
popa
test
push
pop
dec
stos
mov
in
stos
in
jns
mov
neg
sbb
dec
dec
popf
std
inc
in
stc
dec
dec
fistl
sub
pop
cmc
rclb
jae
xor
leave
int
fdivr
lahf
sbb
inc
push
mov
cmpsl
mov
xor
enter
call
loope
bound
jp
addr16
in
xor
cmpsb
sub
inc
fidivl
xchg
fsubs
jne
movsl
call
pop
pushf
imul
cmp
pop
loopne
stc
inc
push
loopne
daa
jg
int3
jo
dec
test
or
in
xchg
mov
adc
cmp
mov
faddl
cmp
das
cli
sbb
lea
inc
mov
popl
and
out
mov
jmp
cmp
pop
lahf
fdivrl
push
divb
xor
mov
push
hlt
mov
orl
repz
outsl
icebp
pop
dec
push
scas
sar
jo
adc
jbe
in
test
iret
jle
outsb
rol
xchg
jge
hlt
insb
fistpll
ficoml
loope
mov
pusha
add
mov
data16
jge
movsb
and
sub
in
sub
aaa
into
inc
jp
xchg
mov
add
repnz
mov
push
add
fstps
imul
sahf
push
aas
incb
out
xor
shrb
out
lods
push
andl
add
jmp
and
mov
popa
sub
lcall
dec
dec
pop
pushf
scas
subl
pop
les
push
bnd
and
cmpsl
xchg
jns
fiadds
mov
mov
sarl
push
add
inc
or
adc
sbb
sub
lret
sub
jno
andl
loope
hlt
cmp
orl
imul
cmp
sub
loopne
outsb
in
insl
icebp
inc
mov
aam
push
mov
xchg
ja
add
dec
cmp
in
rcll
pop
fldenv
mov
jge
addr16
or
cmp
inc
popf
jo
lret
push
lret
and
mov
rcll
lcall
add
mov
mov
xor
mov
mov
xchg
or
cld
xchg
or
and
jb
js
mov
rorb
xchg
inc
push
push
sbb
inc
mov
sarl
dec
add
pushf
sbb
cwtl
frstor
imul
out
mov
sbb
andb
mov
or
aaa
xor
adc
popa
jle
cmpsb
sbb
cmp
stc
adc
sbbb
or
stc
mov
dec
icebp
mov
mov
psrlq
sbb
insb
rorb
nop
rcl
scas
pop
scas
movsb
dec
subl
imul
shrb
push
mov
loopne
cmp
dec
lods
pop
and
leave
xlat
sub
cld
add
xchg
pushf
sub
stos
fdivrl
xor
int3
loopne
gs
pushf
das
insb
mov
push
cs
pop
fwait
sub
iret
lret
lret
jnp
cmc
mov
mov
push
and
jno
and
jl
outsb
and
outsb
repz
sbb
push
xor
sbb
gs
dec
push
push
pop
xrelease
inc
dec
lahf
popa
jp
xchg
fchs
call
pop
cmp
je
lret
mov
test
push
sub
mov
sub
adc
je
mov
into
test
pcmpgtd
in
rcll
lods
in
mov
divl
rclb
div
incb
cs
jl
jnp
pop
mov
jne
lds
repnz
es
pop
sbb
push
sbb
fisttpll
lret
xor
sbb
cmpsl
lea
test
cwtl
sbb
cwtl
aaa
jmp
mov
push
je
adc
sub
mov
add
cmp
dec
cltd
add
out
jl
cld
mov
andb
out
inc
xor
fstl
cmpl
sub
jbe
pushf
pop
cmp
pop
dec
leave
inc
sti
mov
packssdw
mov
jno
add
mov
and
mov
xchg
xchg
add
push
inc
sahf
js
pushf
pop
push
adc
lea
mov
rclb
push
js
xlat
or
and
andb
mov
test
ret
in
sarl
insl
jge
lahf
cmp
ja
pushf
adc
in
enter
mov
imul
xor
popa
or
lret
xor
sub
out
sub
jb
into
fmull
mov
mov
add
adc
shrb
push
into
mov
inc
insb
imul
add
push
xor
insb
add
add
adc
mov
subb
sbb
sub
cmp
mov
stos
inc
adc
ss
int
stos
inc
popf
lock
pop
ret
and
add
outsl
pushf
popf
je
or
sbb
insl
sbb
ret
ja
xchg
bound
rcl
cld
es
and
fdivr
imul
inc
out
test
inc
cmpsb
idiv
nop
mov
xchg
jecxz
sub
cltd
jmp
dec
dec
pop
sbb
and
sub
out
or
call
push
or
xchg
adc
sbb
cs
push
dec
or
sbb
inc
std
mov
in
out
testl
lahf
fsub
sbb
mov
lcall
lock
aaa
dec
and
out
pop
and
int
mov
xchg
mov
movsb
xchg
jl
addr16
cwtl
jp
test
xchg
lods
orb
fbld
mov
mov
shr
insl
cmc
leave
adc
mov
mov
daa
in
call
outsb
mov
imul
insb
shll
dec
or
icebp
sbb
xor
je
mov
pop
cmp
xchg
pop
fists
das
push
ds
xor
out
and
xchg
mov
sub
mulb
jle
std
push
ja
or
mov
ficomps
sbb
jb
mov
xor
mov
insl
mov
out
pop
cmpsb
mov
dec
xor
pop
in
sbb
or
cmp
addb
inc
mov
subl
pop
testl
pop
dec
sub
test
adc
cltd
jle
loopne
rclb
nop
mov
int3
popa
fsubr
add
xchg
sahf
gs
mov
push
jmp
adc
inc
inc
fisubrs
push
lods
push
or
std
pusha
mov
mov
lods
aas
dec
outsl
lock
cmpsl
fidivs
cld
into
and
cld
pop
xchg
and
in
push
gs
addl
xor
push
jmp
xchg
insb
cmpl
push
pop
scas
lods
push
inc
out
cmpsl
icebp
mov
in
hlt
jbe
into
jmp
pop
adc
jbe
nop
test
pop
mov
lret
jae
dec
aad
jl
add
vmwrite
je
rclb
and
pop
cmovno
cmp
add
popf
cmp
in
in
fistpl
push
in
shrl
lret
aaa
cmpsb
out
xchg
jae
insb
cmp
adc
jecxz
inc
mov
pop
cs
xor
mov
cmpb
shr
sar
mov
sbb
xchg
cmpsl
xchg
movsb
sbb
les
sub
push
mov
out
jl,pt
cli
mov
or
jnp
jne
sahf
pop
insl
test
iret
dec
pushf
sbbb
cltd
lock
or
jge
adc
mov
sub
out
adc
push
clc
fcoms
xor
jo
adc
add
bound
or
adc
cli
xor
popa
sti
push
or
add
fldl
and
into
fidivs
cmc
xor
movsl
fbld
xchg
dec
out
rorb
push
cwtl
mov
mov
or
mov
inc
and
cld
aam
xor
es
test
mov
sbb
add
push
lret
bound
gs
addr16
mov
or
ds
sbb
movsl
sbb
or
push
std
insb
sub
xchg
mov
sub
xor
nop
dec
fndisi(8087
mov
pop
negl
ja
mov
fwait
cwtl
xor
int3
mov
sti
xor
push
jbe
mov
mov
and
and
repnz
inc
leave
inc
cmc
adc
inc
dec
jecxz
popf
outsl
ljmp
sbb
jecxz
rcll
xor
rcrl
movl
mov
lods
inc
pop
cs
pop
mov
lret
ljmp
dec
loope
push
adc
mov
loop
call
and
lahf
out
dec
cmp
mov
jge
xor
and
or
push
test
pop
lret
xor
aad
je
shrb
movl
sbb
insb
ljmp
call
leave
lahf
xor
jecxz
push
lods
dec
in
mov
jle
xchg
mov
sbb
push
mov
mov
and
add
push
adc
repnz
mov
xor
loop
lea
lahf
and
jl
and
and
xchg
push
ret
xchg
mov
cld
fcomip
enter
or
xor
mov
mov
push
fnsave
out
xor
lods
jmp
ss
call
or
pop
outsl
xlat
and
dec
int
jecxz
sub
pop
lret
and
out
or
pop
andb
or
pop
std
imul
sbb
cmp
add
push
test
xor
popf
and
jle
aaa
mov
lods
xchg
int
jmp
test
and
lret
add
hlt
fstps
movsl
xchg
mov
mov
sub
fcmovne
inc
cld
xchg
loopne
movsl
push
or
ds
push
xchg
fsubrl
rorb
dec
fbstp
ja
cmp
pop
push
push
pushf
repz
jae
lock
push
adc
out
or
mov
call
dec
loope
dec
mov
dec
or
add
jb
not
add
sbb
push
jl
cmp
add
repnz
daa
shrb
dec
std
movsb
hlt
jmp
jns
xchg
adcb
cmp
imulb
sbb
adc
arpl
pop
jns
and
jle
lret
dec
dec
iret
or
fwait
push
or
ljmp
call
mov
loope
adc
shrl
add
js
data16
push
mov
or
mov
mov
add
ljmp
jno
fidivs
push
push
rclb
js
das
mov
sub
in
xor
inc
mov
adc
add
ljmp
push
jae
sbbl
mov
fstpl
fwait
or
daa
cli
or
adc
push
pop
int
mov
loope
hlt
movzbl
adc
rcll
sub
adc
xchg
fsts
fs
cmp
push
add
mov
cmp
hlt
xlat
mov
jmp
daa
outsl
jg
enter
pop
pusha
popf
pop
ljmp
push
mov
and
lcall
outsb
lds
rcrl
in
add
repnz
imul
icebp
xchg
sub
negl
add
pop
cmp
in
pushf
cwtl
pushf
shrl
jmp
and
cwtl
sbb
cld
push
jecxz
mov
pop
sub
sbb
notb
cltd
xor
fstpl
in
and
fcoml
mov
cmp
les
jne
addr16
loop
scas
fmulp
mov
ja
and
rorb
mov
add
push
pop
xor
aaa
jne
inc
iret
pop
sub
cmpl
jle
xchg
and
push
repnz
mov
cmp
adc
into
test
shld
cmpsb
push
jne
movsb
mov
pop
lods
mov
or
mov
movsb
bnd
and
push
sbb
push
ljmp
stos
xchg
pusha
pop
lock
pop
lret
push
js
clc
pop
ficompl
imul
das
andl
imul
inc
sti
xchg
js
sbb
insl
pop
and
mov
mov
xchg
mov
dec
fsubr
or
sub
in
cld
mov
add
imul
mov
ret
cmp
fcmove
push
data16
les
dec
sub
fcoms
test
inc
jnp
stos
lods
popa
and
pop
sbb
adc
dec
and
mov
arpl
xchg
cli
psllq
sti
sub
adc
stc
aam
xor
pop
imul
dec
hlt
fs
jb
dec
dec
popa
movsl
pop
jmp
push
ds
divb
outsl
inc
call
incb
cmp
and
pop
mov
out
imull
imul
pop
jp
sbb
lds
xchg
packuswb
push
mov
inc
add
lret
aaa
xor
arpl
popf
pop
lds
pushf
pop
xor
out
mov
mov
push
mov
mov
dec
mov
in
std
adc
sbb
bnd
mov
test
movsb
scas
mov
out
pop
hlt
das
mov
dec
mov
sub
or
imul
push
mov
inc
jp
lods
mov
out
jb
les
pop
scas
negl
or
aas
rorb
repnz
lods
adc
popa
rclb
xchg
pop
loop
in
fwait
js
pop
repnz
insb
repnz
stos
xor
xchg
fldln2
dec
push
inc
mov
add
add
pop
xor
outsl
loop
out
js
cld
jno
inc
sub
pop
addr16
adc
aad
loopne
pop
push
call
mov
sbb
sub
cmp
sub
xchg
fcompl
jge
sub
pusha
mov
out
out
je
inc
fdivs
push
mov
fs
push
in
pop
jbe
jecxz
notl
gs
in
test
int
aas
or
sbb
enter
enter
fsubrs
fsubrl
adc
jno
sbb
pop
lret
xlat
addr16
insl
inc
jl
in
mov
lret
jo
in
call
add
xor
lahf
jnp
push
leave
push
subl
or
adc
stos
inc
repnz
icebp
mov
sbb
inc
mov
jmp
adc
ss
mov
lret
scas
inc
roll
daa
mov
lret
fsubl
fstl
mov
cmp
jnp
xor
push
and
push
mov
jns
enter
mov
or
inc
pop
lcall
or
cmc
mov
inc
push
shrl
cmp
or
inc
iret
xchg
cmp
ds
jno
es
xchg
dec
fsubr
enter
call
inc
gs
sarl
add
dec
or
xchg
jp
jb
xchg
mov
ds
outsl
or
ss
or
out
pop
fidivl
leave
fistps
jb
subb
lds
mov
movsb
ret
rorl
mov
jo
jo
pop
mov
jb
aas
pusha
ss
mov
out
adc
mov
int3
cs
andb
and
cmp
xlat
mov
adc
lock
lds
dec
and
inc
and
mov
cld
das
inc
in
add
mov
or
add
cwtl
dec
xchg
and
je
xor
dec
out
sarl
stos
pop
clc
push
adc
mov
add
shlb
jne
loop
push
mov
dec
cmp
push
inc
stos
aaa
jle
clc
mov
sbbl
ret
pop
mov
xchg
lahf
decb
decl
push
inc
lds
or
xchg
call
test
or
mov
pop
xchg
xchg
in
sub
in
aas
jge
mov
aad
popw
repz
jl
popf
fs
pop
dec
xor
xor
lods
ja
cmp
dec
jae
inc
test
push
dec
dec
push
push
cmp
insb
jbe
aam
mov
arpl
push
xchg
dec
aaa
test
jns
jmp
push
lods
sbb
mov
sbbb
pushf
cmp
adc
inc
out
sahf
out
push
xchg
sub
add
mov
xchg
xor
mov
inc
xchg
push
insb
test
out
push
inc
xlat
insl
pusha
sub
push
into
jb
or
sbb
mov
cltd
out
jp
jmp
scas
xchg
or
ret
xorb
lods
dec
pushf
mov
pop
sahf
mov
cltd
xor
jmp
cld
iret
push
cmp
push
sub
pop
and
nop
sbb
xchg
shrb
aad
sub
sub
dec
mov
or
mov
mov
mov
xchg
xchg
pop
push
adc
fadds
pop
push
out
or
test
icebp
adc
rorb
xor
pop
pop
adc
jl
xchg
sub
or
push
push
ret
into
data16
xchg
push
cli
fistl
loope
xor
xchg
icebp
inc
push
sub
jo
push
lret
mov
ja
outsl
adc
fidivl
gs
cwtl
xor
pop
inc
popa
jae
fsubr
dec
dec
inc
xchg
ds
fildl
push
out
fildll
jp
lret
push
shll
stc
adc
mov
push
imulb
inc
dec
scas
mov
in
ja
call
jns
outsl
dec
lret
out
add
sub
and
dec
or
ja
clc
or
or
jbe
jecxz
cmp
cmpsb
cmp
add
es
cmpsl
dec
inc
stc
cmp
fxam
mov
or
scas
add
loopne
clc
and
adc
imul
push
mov
fnstsw
std
cwtl
sbb
aas
and
jns
repz
movsb
les
mov
pop
xor
mov
sub
and
jmp
mov
jnp
sub
fwait
lahf
and
loop
insl
ss
xchg
push
inc
mov
pop
sti
and
int
in
mov
mov
adc
test
mov
sahf
ds
clc
sahf
data16
sbb
mov
out
inc
cltd
lock
insl
ja
test
clc
sub
adc
idivl
adc
xchg
mov
hlt
es
jbe
mov
mov
cmp
jp
rcll
enter
gs
mov
cmp
mov
inc
sbb
sub
pop
insl
cmc
lahf
popf
stc
add
scas
push
push
dec
xchg
lods
lea
fdivl
pop
ds
lods
pop
out
pop
clc
xchg
mov
ljmp
pop
stos
adc
daa
push
jne,pt
or
add
pop
push
stc
lock
sub
adc
test
lock
mov
jno
mov
sub
xor
sbb
jb
ficompl
xchg
imul
and
hlt
push
out
test
mov
popa
outsb
inc
out
jp
inc
in
stos
mov
mov
mov
sub
lret
xlat
add
inc
push
or
mov
pop
gs
lret
insb
scas
push
leave
xchg
cmp
cmp
mov
mov
lds
cmp
or
cltd
sbb
pushf
dec
xlat
xchg
cs
out
iret
sub
movsb
ficoms
aas
into
stos
scas
rep
mov
ja
push
and
mov
ljmp
mov
enter
pop
xor
movsb
ljmp
inc
into
test
aas
xchg
mov
sub
mov
outsl
adc
ss
push
out
push
fs
mov
loope
dec
lods
psrad
xchg
inc
test
xlat
and
add
sub
leave
pop
mov
shl
jg
jb
xor
or
sbb
dec
mov
cltd
push
ficomps
mov
adc
aaa
pop
dec
jb
mulb
aad
jb
inc
or
lcall
in
push
lea
dec
fnstenv
sti
sub
pop
insl
xor
mov
jecxz
fildll
adc
add
shrl
inc
sbb
push
jg
out
mov
jb
sbb
mov
mov
cmp
and
repnz
lret
test
mov
lock
pusha
sub
and
mov
and
xchg
push
or
inc
jns
mov
and
jno
jle
ret
into
pop
adc
lds
xor
lcall
sbb
and
es
pop
iret
pusha
or
lret
mov
sahf
jae
jecxz
lods
in
gs
pop
add
sub
cmpsl
sbb
jns,pt
out
lahf
movsl
mov
loopne
andl
orl
stc
popf
fcmovb
mov
ss
mov
rcl
mov
add
mov
pop
call
xor
test
sub
jecxz
scas
enter
popa
out
lock
or
xor
bound
mov
out
cmp
addr16
xor
xor
out
dec
inc
xor
xor
push
cmp
sbb
push
je
fisttps
pop
cli
ljmp
imul
ss
xor
repz
imul
pop
push
xor
dec
xchg
push
adc
out
adc
push
popf
sahf
pop
add
push
cld
add
scas
fmull
std
and
adc
insb
int
adc
arpl
notl
testb
mov
and
xchg
mov
inc
fxch
inc
and
push
xor
cmp
sbb
adc
and
sbb
fcmove
inc
int
int3
arpl
jb
ss
into
push
sub
sbb
outsb
push
xorl
dec
clc
or
arpl
out
sbb
add
push
xchg
sub
mov
test
insl
sbb
adc
mov
in
stos
push
leave
or
popf
xor
xor
adc
jge
jle
push
sub
mov
in
push
jg
test
push
jle
lods
adc
mov
and
inc
xor
incb
xor
test
xor
add
adcb
adc
aad
mov
add
dec
ljmp
adc
ret
loopne
out
jmp
insl
int
sub
mov
stc
lcall
mov
pop
dec
mov
xor
push
push
sub
and
leave
repnz
mov
mov
fiadds
push
mov
test
add
outsl
out
xor
cwtl
jge
dec
xor
sti
pop
sahf
movsb
sub
mov
mov
gs
shrb
inc
cmpsb
pop
test
mov
inc
mov
pop
push
fildll
nop
pop
push
fnsave
dec
lret
xchg
cld
adc
dec
in
push
cmp
hlt
mov
cs
pop
hlt
xlat
inc
cli
int3
push
pop
imul
sahf
push
dec
rcll
jbe
push
cmp
lock
pusha
and
push
aas
ret
and
testl
pop
sbb
mov
pop
inc
scas
pop
repnz
int
data16
jns
mov
je
sub
mov
imul
mov
mov
fnstcw
daa
outsl
adc
imul
sub
clc
pop
outsb
out
ret
in
pop
je
sbbl
jmp
lods
xchg
mov
inc
jmp
sbb
dec
push
jmp
lock
add
xor
jl
mov
loopne
sub
movsl
xchg
mov
sbb
jg
popa
mov
sbb
iret
lock
and
xchg
fs
push
int3
jo
rol
pop
cmp
pop
cmp
xchg
dec
cmp
arpl
iret
or
cltd
or
cld
xor
cmpsl
adcb
sbbl
or
test
push
fcompl
je
cli
sub
lods
fwait
or
stos
int
cmc
cli
adc
lods
push
in
jg
je
movsl
xchg
repnz
mov
xchg
pusha
out
scas
jle
and
xchg
mov
push
and
and
daa
dec
aam
addr16
mov
ror
in
int3
lret
pop
inc
and
jmp
sub
lock
out
push
out
mov
loop
adc
and
mov
push
sbb
push
jecxz
cmpsb
in
in
push
nop
adc
mov
test
aaa
into
jno
sbb
adc
xchg
mov
sub
and
or
mov
testb
mov
cmp
cltd
das
push
ret
mov
aad
pop
data16
shlb
adc
cwtl
mov
stc
shlb
int3
sbb
cmc
sbb
sbb
xchg
cltd
mov
lea
flds
fnstcw
icebp
out
outsl
mov
rcr
and
pop
movsl
sub
ljmp
dec
test
xor
pop
test
xchg
test
add
xchg
jecxz
inc
clc
cltd
sarl
and
push
push
outsb
hlt
push
int
data16
leave
lods
testb
xor
mov
adc
or
mov
aad
sub
dec
jmp
xor
test
outsb
jno
cmp
jbe
int3
stos
cmp
enter
sub
into
aam
sbb
sub
jb
xor
sbb
xchg
popa
fwait
scas
xchg
add
jbe
xlat
push
adcb
cmp
and
icebp
in
mov
ds
jg
add
xchg
fmull
ja
push
test
jmp
mov
mov
shll
pusha
jmp
mov
and
dec
or
sbb
lahf
stos
pushl
jbe
sbb
int3
pop
lret
xchg
lea
int
aas
cli
mov
out
xchg
nop
adc
leave
test
stos
xchg
mov
add
sub
pop
sub
sarb
test
aam
mov
dec
scas
dec
xor
sub
std
testb
mov
inc
orl
repz
mov
lahf
pop
ljmp
imul
push
dec
cmp
cmpsb
mov
xor
test
lods
es
outsl
sub
lret
push
mov
and
pop
cli
ret
pop
fcomps
pop
mov
lods
clc
mov
fwait
repnz
push
pop
test
push
jne
lahf
and
test
cltd
dec
jno
jge
push
mov
sub
js
pop
push
enter
jmp
decb
loop
xor
lds
gs
cmpsb
ss
mov
clc
xchg
sub
inc
ret
xchg
xchg
insb
mov
fdiv
mov
pop
xchg
pop
xchg
mov
sahf
pop
xor
jg
add
out
mov
push
cmp
sbb
mov
lods
xchg
sub
int3
in
pop
xor
xchg
cmp
pop
cmpsb
imul
or
cmp
pusha
xchg
sbb
dec
outsl
dec
cmp
pop
add
xor
cmp
and
lock
and
aad
jle
cmp
push
dec
sarl
fidivs
cltd
xchg
add
mov
cmc
cs
leave
pusha
fisubl
or
xchg
dec
push
scas
ret
scas
cmp
iret
leave
push
cld
push
ret
fcos
hlt
or
jecxz
aad
or
jge
cmp
jecxz
into
fmull
adc
mov
push
lcall
xchg
and
dec
add
inc
xlat
adc
or
dec
dec
fnsave
jne
inc
lret
lock
or
pop
pop
shrb
add
cmp
adc
and
cld
fidivrl
bound
imul
into
sbb
pop
mov
jb
gs
push
adc
xor
addr16
stc
push
sbb
in
daa
lods
loope
mov
push
movsl
ret
imul
mov
testb
sti
insl
lock
xchg
cmc
sub
jecxz
sbb
lods
das
jnp
lcall
push
mov
and
arpl
movsl
xchg
inc
stc
push
test
aaa
rorb
xlat
push
pop
das
out
pop
imul
and
and
add
jne
and
pop
pop
cld
adc
push
dec
rorl
fsts
mov
in
and
push
pusha
push
mov
mov
xor
je
pop
divl
pop
daa
mov
push
scas
dec
sub
xlat
ja
lret
pop
repz
hlt
mov
or
dec
cmp
in
dec
jecxz
sbb
jb
jle
xchg
rorb
sub
inc
scas
icebp
lods
xchg
fstps
xor
cmp
test
push
and
gs
leave
filds
data16
xor
and
inc
stos
shlb
adc
cwtl
sub
shrl
mov
cli
mov
sbb
or
pop
scas
cvtps2pi
add
xor
mov
call
cmpb
notb
adc
xlat
outsb
test
inc
cmc
mov
testl
imul
cli
clc
pop
mov
or
adc
adc
in
mov
je
ret
cmp
mov
rolb
notb
pop
call
adc
fucomp
inc
dec
popf
add
dec
loope
and
gs
jno
pop
loop
cmp
rclb
pop
sbb
rep
cmp
je
dec
push
outsl
push
jmp
mov
rolb
sbb
push
mov
popa
fcompl
or
sub
adc
mov
jmp
fnstsw
pop
incb
ljmp
insb
inc
in
lods
pop
or
xor
aad
ret
mov
xor
punpckhbw
push
or
sahf
inc
add
mov
jge
cmpsb
lock
push
sub
mov
popl
jmp
pop
sahf
pop
xor
negl
scas
movsb
mov
xchg
je
add
sub
and
daa
gs
sarl
cmp
sbb
add
dec
mov
add
or
aam
xchg
inc
cmp
or
out
sbb
pop
sbb
mov
shlb
imul
out
mov
pop
jno
ljmp
pop
movsl
push
sub
loopne
icebp
adc
cmp
sbb
sbb
sbb
filds
cli
inc
mov
insb
aad
xchg
and
out
mov
jmp
inc
xchg
lds
sti
pop
or
pop
push
cmp
dec
and
mov
aad
or
mov
push
aaa
rolb
sub
in
popf
dec
xlat
jbe
xor
jl
mov
fnstenv
stos
dec
rorl
sub
jo
in
sbb
adc
push
jb
js
movsl
movsl
xor
xor
lahf
scas
fmuls
imul
imul
push
inc
pop
pop
lret
inc
inc
orb
movsl
mov
aad
rcll
cmp
adc
and
or
xchg
mov
lods
adc
ljmp
out
xchg
test
iret
cmpsb
cmpsb
pop
mov
lret
mov
je
sbb
inc
jne
push
scas
push
sbb
call
sub
les
cmpsl
mov
and
inc
pop
inc
push
dec
in
jbe
cmp
sub
js
pop
popf
sub
stc
push
data16
sub
lahf
sbb
inc
dec
rolb
push
rorl
adc
aad
fsts
mov
mov
push
jmp
dec
fldt
int
xor
cmp
icebp
cmp
inc
jb
test
or
push
pop
mov
out
adc
pop
and
pop
jg
into
push
shrl
stc
in
xor
mov
push
repz
popf
or
xor
pop
add
pop
xor
fldenv
mov
mov
ds
scas
push
pop
fisubs
add
xchg
test
inc
pop
lock
leave
sbb
divb
mov
mov
cmpsb
les
or
mov
test
sbbl
add
or
pusha
cmp
je
add
out
incl
jl
and
push
fwait
imul
add
adc
mov
xchg
icebp
jb
mov
cwtl
pop
jae
icebp
mov
shll
cmp
sbb
mov
ds
jecxz
jecxz
lods
pop
mov
into
inc
repz
test
mov
mov
ljmp
jmp
enter
xchg
mov
cmpsl
sbb
loope
shlb
lret
adc
cmp
jge
fwait
xor
jle
rol
dec
inc
mov
inc
out
ljmp
pop
jp
shld
fadd
xchg
add
sub
pop
push
or
stc
mov
mov
sbb
jo
pop
das
adc
rcrl
fsubrs
cs
and
mul
sub
mov
lea
mov
and
xor
mov
scas
mov
sub
cmp
aaa
add
rcrb
inc
inc
sbb
cmp
mov
imul
push
pop
rorb
lret
push
stos
mov
scas
leave
jmp
sbb
mov
mov
push
pop
add
mov
mov
inc
dec
mov
push
cmp
push
push
test
sbb
cmc
xchg
mov
icebp
shll
xchg
jnp
mov
outsb
sub
pop
jbe
clc
rcrb
xor
jno
repz
jne
mov
xchg
sbb
mov
push
cmpsl
jle
and
pop
fiaddl
jecxz
insw
lret
ljmp
or
icebp
sbb
lds
cmp
mov
test
fwait
movsb
jg
push
dec
pushf
push
jp
cmp
push
insl
shl
ds
pop
lods
xor
mov
andl
sbb
hlt
mov
adc
je
push
sbb
xchg
mov
xchg
push
outsl
cmpl
je
mov
je
xchg
xchg
fiadds
cmp
sbb
shlb
stos
das
mov
in
pop
fcompl
addb
in
repz
sbb
insl
xchg
js
lods
mov
test
inc
in
dec
cli
shr
imul
pushf
or
pop
jo
cli
cmp
jnp
jmp
dec
orl
sbb
sub
mov
jno
out
clc
adc
sarl
mov
add
xchg
or
stc
ret
sti
sub
sub
fs
jns
mov
or
cmp
cli
mov
add
push
icebp
mov
jb
push
mov
add
sub
and
xlat
jo
dec
lret
cld
dec
sub
ss
push
xchg
repnz
loope
adc
mov
shll
xor
loope
lods
sbb
into
jecxz
adc
sti
cs
sahf
cli
adc
xchg
pop
lds
pop
into
outsl
mov
nop
out
cld
inc
fsubrs
insb
xchg
test
ds
imul
rcrl
adc
daa
sahf
sahf
clc
subl
movsb
repnz
or
rcrb
fistl
rcl
pop
scas
outsl
lods
pop
scas
test
mov
int3
enter
mov
iret
shrb
jbe
mov
insb
push
test
inc
popf
test
in
data16
jne
jno
and
enter
sub
stc
push
xchg
inc
jo
cld
push
cwtl
and
xor
xor
cwtl
push
sub
xchg
aam
jae
xchg
mov
and
and
aad
into
in
push
and
fidivrs
scas
jl
push
cmp
daa
push
aam
mov
pop
out
dec
lods
rcrb
mov
std
insl
mov
adc
std
pop
xchg
ds
mov
xchg
stos
cs
or
cmp
iret
lods
out
sub
movb
jae
scas
dec
pop
loop
into
add
cmc
loopne
popl
mov
insl
repnz
xor
push
xor
fs
and
mov
test
ljmp
gs
sub
bound
adc
cmc
fcoms
cwtl
imul
test
inc
cli
fwait
arpl
call
mov
hlt
xchg
aas
pop
fstpl
adc
pop
cmp
add
dec
mov
out
xlat
mov
add
push
mov
mov
jbe
pop
insb
cmp
test
sbb
xchg
xorb
push
mov
aam
mov
push
cmpsb
sbb
pop
xchg
subl
adc
mov
or
loope
insb
jecxz
push
pop
mov
lds
enter
outsl
xor
dec
outsb
jge
movsl
stos
mov
adc
jge
sbb
mov
and
stos
cmp
lods
inc
mov
cmpsl
lret
bound
insl
mov
cmp
pop
jg
divb
mov
mov
inc
jecxz
shrl
xor
cmpsl
add
jg
push
push
mov
jae
das
push
mov
dec
xchg
dec
inc
int3
cmc
mov
fcomp
inc
or
fs
mov
cmpsl
aas
or
adc
imul
repz
decb
fldt
lret
cmp
cli
mov
push
popa
inc
sub
daa
ljmp
push
xor
and
shl
je
fmuls
xchg
pop
dec
xchg
loop
movsl
lock
sub
popf
loopne
pop
inc
or
fmull
mov
pop
gs
mov
decb
sbb
sbb
xchg
addr16
sub
lahf
stos
inc
aad
pop
shr
cmpps
aas
mov
jne
hlt
aam
dec
ficoml
out
stos
std
inc
inc
add
cmp
imul
xor
inc
mov
movsl
dec
and
inc
faddp
out
ret
gs
adc
mov
movsl
dec
sbbl
push
and
jg
fsubr
mov
push
adc
mov
frstor
inc
xor
das
cld
mov
sbb
mov
xor
int3
daa
and
mov
mov
outsb
cmp
jno
push
repnz
addr16
cmp
mov
fs
popf
shll
in
jmp
fbld
cmp
mov
dec
imul
setle
or
mov
cmc
jo
pop
jge
inc
mov
sbb
xorl
bound
and
push
std
aad
sbb
pop
fwait
mov
sub
dec
sarb
icebp
mov
xchg
hlt
outsl
outsl
cmp
mov
loopne
test
or
push
push
pop
and
or
jns
leave
pop
sub
mov
cwtl
insb
adc
xor
jge
fmuls
cmp
xchg
xchg
aaa
pop
lds
or
in
rorl
or
jl
aaa
cmp
loope
cmp
lcall
sub
scas
xor
sarl
sbb
mov
pop
jo
es
out
ret
mov
mov
in
mov
cmp
adc
fsubs
dec
bound
cmp
or
imul
and
pop
fcmovnbe
xchg
xor
sub
sbb
nop
inc
cmp
add
mov
mov
fnstcw
adc
cltd
push
shll
lods
cwtl
hlt
xchg
and
adc
mov
lret
out
adc
lds
mov
mulb
mov
dec
sub
rcrb
in
mov
in
insl
mov
scas
fsubp
clc
test
aaa
shll
sub
in
clc
push
dec
mov
jge
sbb
push
cmpsl
lock
js
cmp
pop
jp
xchg
mov
into
pop
cmc
add
dec
stos
jl
mov
cmpb
xor
cmpsb
cmp
cltd
icebp
pop
arpl
leave
ljmp
scas
add
xorl
test
sbb
in
or
sub
jle
shrl
pop
sbb
pop
enter
clc
lret
mov
loope
lret
add
jae
inc
in
cli
add
push
shll
fwait
cmp
push
test
jne
dec
in
sarb
push
imul
imul
rolb
jmp
dec
sbb
mov
pop
adc
pop
movsl
push
add
xor
in
inc
ja
mov
adc
xchg
lea
dec
fidivrl
sbb
and
mov
into
out
xchg
sbb
aad
test
mov
push
pop
hlt
inc
fidivrl
push
mov
mov
mov
hlt
mov
lret
das
das
mov
shl
lret
lret
clc
lret
push
call
jae
outsl
xchg
xchg
fstps
jle
outsb
mov
jecxz
popa
sub
pop
pushf
cmpb
scas
cmc
mov
aaa
cmp
mov
and
inc
mov
push
push
neg
add
pusha
or
fwait
sub
jle
mov
sbb
cmc
test
daa
mov
xchg
adcb
lock
dec
pop
imul
push
imul
insb
data16
jg
enter
sbb
int
cmp
inc
out
jmp
loope
bswap
gs
inc
in
aad
xor
andl
insb
mov
fcomip
mov
fiadds
nop
rcrb
iret
fs
arpl
jl
movsl
repnz
movb
ds
sub
sbb
jle
imul
out
push
imull
out
sub
push
fs
xchg
lods
daa
fcomp
or
icebp
jns
fsubrs
stc
test
repz
mov
mov
jg
sub
mov
add
inc
imul
gs
imul
not
mov
mov
pusha
ja
popa
clc
out
cmpsl
fsts
jae
jge
ss
out
test
lret
xchg
sub
test
scas
cmp
fnstsw
lea
scas
adc
pop
aad
enter
pop
test
dec
out
iret
loop
or
cmp
sbb
ret
repz
ljmp
jno
mov
call
stos
ret
cmpsb
imul
popf
enter
iret
mov
and
call
push
dec
jg
xchg
mov
mov
sub
loop
xor
add
push
sub
xchg
mov
pop
daa
in
pop
jp
shll
lds
icebp
mov
mov
in
push
sti
dec
mov
cmp
push
pop
sub
insl
mov
sub
xchg
add
adc
mov
aaa
addl
add
pop
sub
fdivs
xor
xchg
fwait
divl
pop
pop
adcb
mov
lea
cmp
jb
jge
or
stc
or
jl
inc
int3
ja
lods
adc
movl
fildll
ret
sahf
fs
lea
xchg
dec
push
lcall
jo
mov
rolb
push
jns
pop
sub
scas
mov
dec
outsl
sub
jl
adc
jle
xor
nop
xchg
cmc
cmp
mov
popf
mov
out
jecxz
out
add
lds
pusha
cmpsl
sbb
nop
or
out
dec
aad
addl
loope
cmp
or
call
mov
sub
adc
xor
cmp
cld
aaa
cwtl
das
das
mov
into
xchg
les
add
lret
aam
repz
and
sti
sahf
lods
sub
xchg
mov
sub
pop
clc
mov
es
nop
test
test
xor
in
xchg
lcall
push
lret
sbb
xchg
inc
aad
xor
sbb
xchg
xchg
or
pop
sub
insb
ret
movsl
xor
shll
pop
jo
pop
mov
push
int
cmp
dec
push
out
sbb
aad
push
subb
pop
mov
sbbl
and
and
rorb
jnp
add
adc
sub
pop
xchg
repnz
iret
lcall
adc
daa
and
popa
in
jmp
scas
mov
mov
or
mov
stos
dec
movsl
add
bound
mov
loop
cld
enter
sbb
lods
outsl
mov
popf
jo
dec
dec
clc
inc
inc
sbb
fldenv
pop
dec
outsl
mov
repnz
lret
sub
sub
aad
jno
aam
or
push
out
xchg
daa
mov
in
push
test
pop
aas
loop
jge
cltd
lods
les
dec
es
cli
cli
pop
cmp
testl
lods
cltd
sarb
jo
fstps
push
dec
pop
loopne
daa
out
inc
add
inc
inc
and
lods
jmp
fwait
arpl
jae
pop
bound
unpcklps
adcl
jno
stos
push
push
popf
maskmovq
das
xor
add
mov
jne
popa
fxch
fldt
std
cltd
pop
imul
jbe
movsl
xor
test
in
jp
adc
movsl
sbb
push
leave
rcrb
in
daa
int3
mov
stos
add
roll
mov
jnp
out
std
pop
push
or
loop
int3
xchg
sbb
jbe
sti
stos
xor
jp
adc
adc
mov
jmp
cmp
xchg
popf
call
and
xchg
dec
es
popf
or
inc
outsl
je
push
cmpsb
mov
movsl
std
cmpsl
pop
cmp
scas
loope
out
push
xlat
mov
lea
movsb
icebp
adc
cmpsb
es
adc
in
adc
pop
adc
mov
shlb
lret
lret
int3
out
push
sub
inc
dec
dec
lods
fldt
ret
mov
fsubl
sahf
test
mov
shrb
repz
add
mov
cltd
jb
shl
xchg
hlt
jecxz
mov
ficomps
push
inc
sbb
test
fimull
adc
je
sahf
leave
in
mov
aam
adc
sub
mov
fs
in
adc
fucomip
imul
inc
inc
add
mov
adc
adc
std
mov
loopne
push
adc
sahf
or
xchg
xchg
sub
test
sub
xchg
jno
outsb
add
jns
lea
push
mov
pop
xchg
imul
lcall
sub
addr16
lds
push
mov
js
lds
sbb
mov
insb
sub
andl
cmp
pop
inc
mov
mov
jecxz
ret
loop
pop
mov
xchg
lock
idivl
into
push
xchg
stc
negl
hlt
clc
loopne
inc
test
daa
int3
push
mov
test
stc
pop
cs
xchg
leave
dec
fbld
pusha
sahf
cmpsl
mov
lds
push
outsb
aam
sahf
fsubl
and
and
push
inc
xor
lods
rorb
mov
jno
stc
xchg
shrl
sub
into
mov
mov
xchg
decl
mov
dec
pop
dec
fsubp
xchg
push
neg
jecxz
ret
orl
arpl
fsubs
cs
std
imul
add
push
out
test
sub
sbb
adc
xor
cs
xor
or
mov
ja
and
push
xchg
arpl
mov
xor
bound
test
inc
fidivrl
sbb
jno
fidivrs
xchg
and
aas
sbb
xor
jo
shr
mov
fldt
aas
inc
mov
sbb
xchg
dec
in
or
mov
arpl
mov
divl
outsl
and
mov
test
mov
push
xchg
sti
push
es
data16
adc
mov
fisubrs
lock
pop
cmp
xchg
insl
push
addr16
mov
or
jne
movsl
push
aas
dec
lds
ret
arpl
es
aam
in
mov
jg
outsl
lock
add
inc
popa
push
in
pop
cmpsl
aas
and
inc
fmulp
nop
shl
dec
sbb
inc
dec
xchg
jge
push
jmp
mov
push
mov
pop
lock
xchg
cmpsl
pushf
push
cli
roll
mov
lods
push
or
inc
inc
pop
add
das
inc
push
add
and
ja
mov
adc
repz
mov
mov
fiaddl
xchg
push
sub
stc
and
sub
sti
dec
or
and
aaa
idivl
inc
in
pop
add
repz
inc
icebp
adc
pop
je
jae
inc
jb
aaa
push
lret
mov
dec
xchg
or
cmc
mov
lods
aas
in
mov
sahf
push
jno
lods
sub
push
jne
inc
int
sti
leave
mov
dec
mov
cmp
ja
pop
sti
xchg
mov
jp
mov
dec
aaa
cmp
stc
popf
shl
fcoml
aas
mov
cmc
call
mov
adc
and
or
lods
pop
mov
bndldx
jmp
sbb
or
imul
adc
pop
sahf
pop
xor
sub
or
jge
shrb
pop
cmp
ja
mov
test
lret
push
test
testb
sub
cltd
xchg
enter
xor
pop
push
inc
push
ljmp
jno
mov
pop
insl
data16
bound
ljmp
mov
and
out
push
test
inc
out
jne
cmp
test
dec
ja
aas
out
jle
jo
hlt
dec
inc
insl
push
lods
pop
in
push
jne
cmp
mov
mov
arpl
and
aaa
push
inc
cli
mov
dec
in
dec
test
dec
movzbl
inc
popf
or
cmp
ja
and
inc
jno
cli
mov
xchg
pop
or
mov
push
gs
addl
adc
notb
mov
lods
push
push
sti
push
clc
mov
jle
xor
scas
in
pop
mov
sbb
adc
push
fidivrl
adc
hlt
fiaddl
jo
mov
loopne
push
loop
mov
pop
ss
push
cmc
inc
lock
test
or
sub
ret
sbb
mov
mov
cltd
push
outsl
sbb
add
and
dec
or
push
mov
mov
pop
in
test
cmpl
jno
mov
fs
mov
dec
mov
stos
test
or
leave
imul
js
push
popa
push
xchg
xor
or
rcrl
stos
mov
in
sub
sarb
push
pop
out
test
hlt
push
test
aad
hlt
outsb
test
scas
fstl
or
adc
sbb
aas
rol
ljmp
inc
cmpsb
fidivrs
pop
xor
movsb
outsb
scas
scas
cmc
nop
sbb
push
mov
lahf
sbb
pop
push
adc
mov
mov
cmp
pop
ret
mov
mov
and
inc
cwtl
xchg
rclb
in
std
mov
in
insb
add
inc
mov
jns
xchg
jne
xor
add
jno
addr16
adc
push
shll
ja
ret
das
dec
push
hlt
inc
push
cmc
and
jp
enter
mov
fists
pop
addr16
cmp
jo
ficoms
movsl
cwtl
das
xlat
outsb
popa
mov
or
outsb
sbb
scas
pop
es
dec
lahf
jo
inc
outsl
into
movsb
cmp
adc
fwait
sub
outsb
jl
es
rcr
cmp
sub
pop
insl
cltd
out
test
pop
xor
mov
test
sbb
lcall
xchg
lea
aaa
shlb
xchg
lds
int
lahf
pop
jp
fwait
mov
out
sub
or
leave
fs
pop
sbb
add
and
in
popa
xchg
decb
push
stos
and
mov
aas
in
cltd
inc
test
enter
xor
shrl
iret
bound
insb
pop
cli
cli
xchg
outsl
popa
repz
jbe
popf
sub
clc
aaa
mov
or
scas
rcr
adc
mov
or
sbb
pop
pushf
movsb
rclb
jne
aas
arpl
cltd
xchg
fnsave
xchg
data16
test
pop
adc
inc
or
lcall
cmpsb
clc
stos
mov
xchg
mov
shrb
sbb
inc
or
mov
ljmp
and
dec
jge
pop
fwait
mov
cmpsb
and
fsubrs
xor
outsb
es
test
jp
xorb
aas
mov
out
imul
hlt
pop
dec
fstp
outsl
push
clc
xchg
cmp
in
jae
ror
push
dec
jnp
jge
push
jbe
int
stc
or
pushl
add
stos
fistpl
add
mov
xchg
int3
loop
imul
imul
and
aad
out
mov
scas
cs
es
cmc
xchg
or
test
cmp
sub
adc
data16
lret
mov
mov
push
mov
icebp
xchg
jae
add
mov
mov
sbb
gs
pop
jmp
dec
inc
scas
xor
push
les
sub
pop
sub
loope
or
adc
fistpll
xchg
lret
mov
xchg
jg
lahf
pop
repz
push
in
loope
inc
sbb
and
jl
dec
and
xlat
popa
jle
rorb
inc
nop
leave
fnstcw
cmp
adc
out
sahf
xor
mov
clc
or
jo
ret
jmp
iret
fdivs
icebp
movsl
cli
je
shlb
sub
xor
outsb
scas
arpl
sti
cltd
stos
and
mov
fistps
call
push
and
sbb
stos
inc
add
cli
pop
movsb
jge
mov
cwtl
cld
mov
add
decb
mov
jl
sti
mov
pop
insb
cmpsl
pop
cmpb
mov
out
xor
leave
adc
xlat
jno
in
inc
jecxz
mov
and
sbb
jbe
scas
stos
xor
cmc
fdivr
xchg
push
pop
ret
sub
or
cmpsl
outsb
pushf
add
aad
in
out
ss
shl
ret
xor
sbb
cmc
push
loop
add
imul
stos
fsincos
mov
adc
and
insl
das
mov
jns
mov
scas
pop
incb
icebp
mov
push
bound
mov
lret
stc
or
mov
sub
mov
mov
push
mov
xor
add
xor
mov
jmp
pop
inc
jmp
cmp
aaa
fbstp
sub
gs
ret
jl
jno
insl
rolb
shrl
dec
frstor
xchg
dec
je
xchg
xchg
sarl
sub
and
sbb
lea
xor
pop
or
lret
xlat
mov
or
rcrl
nop
adc
inc
icebp
insb
cmp
fnclex
xchg
and
hlt
or
and
cmpsb
xchg
xchg
adc
imul
and
sub
cmp
cmp
pop
in
jb
xchg
loop
inc
xchg
push
inc
sahf
sbb
inc
fidivs
sbb
push
ljmp
jno
loopne
cmp
out
popa
sub
or
out
push
cmpb
outsl
xchg
add
push
fxch
scas
test
in
call
dec
pushw
pop
lret
xlat
rorl
inc
jns
xchg
scas
iret
adc
lods
pop
push
mov
lods
jmp
and
popf
jmp
push
inc
lds
ds
loop
out
imul
add
iret
mov
mov
xor
lds
subb
mov
cltd
mov
xchg
add
mov
sub
xchg
enter
and
push
push
and
lods
ss
addb
stos
xlat
inc
dec
cmc
push
jne
imulb
jb
fistpll
push
and
dec
mov
add
fst
push
push
or
add
iret
ja
loop
push
insl
jge
hlt
ja
dec
daa
sbb
xchg
loop
filds
adc
pop
aaa
inc
stos
lret
stos
push
fmull
fchs
mov
daa
dec
adc
jp
ret
das
pop
loopne
negb
movsl
and
jo
lret
inc
push
fwait
push
or
in
test
shl
xor
into
imul
sbb
push
out
cmp
cld
in
aad
rorb
lcall
fbstp
xchg
xchg
clc
mov
mov
push
inc
repz
adc
mov
test
pop
mov
mov
stos
and
aas
imul
jecxz
test
inc
daa
ret
pop
sub
mov
adc
sub
pop
cmc
sub
mov
xchg
notl
jno
js
dec
push
dec
sar
aas
push
pop
fbstp
xchg
inc
out
pop
xchg
repz
dec
lea
mov
out
clc
divl
push
mov
stc
addr16
mov
mov
ss
inc
push
movsl
test
dec
rorl
and
push
jno
jg
rcrb
bound
and
lock
mov
add
adcl
fcoms
je
data16
popa
and
cld
setl
push
xchg
dec
xor
cmpsb
or
adc
jne
pusha
push
sub
nop
lods
xchg
dec
mov
mov
mov
inc
fidivs
push
gs
mov
push
arpl
std
mov
fistpll
iret
lock
adc
es
or
cmp
shll
or
shrl
ljmp
hlt
mov
mov
setnp
push
movsb
push
test
cmp
adc
sbb
testb
push
stc
lahf
ret
adc
mov
sti
out
add
add
ret
dec
inc
push
jno
pop
push
pop
xchg
cmpsl
cmp
pop
pop
lock
sub
push
xchg
lods
xor
fdivs
fsubrs
stos
fbstp
mov
std
xchg
enter
fucomi
sbb
rcll
jle
js
loopne
ds
push
enter
jge
mov
add
jbe
and
jecxz
lods
loopne
or
loop
lods
push
push
aad
inc
inc
mov
insb
fdivl
pmaxsw
sub
xchg
pusha
iret
addr16
cwtl
jne
mov
xor
adc
mov
and
sahf
sub
push
or
xchg
clc
xchg
pop
les
xorl
int
add
adc
jno
jl
aad
or
cs
adc
add
xor
push
in
jb
xchg
mov
stos
inc
cltd
cmp
push
mov
cwtl
xor
push
repz
jns
lods
mov
into
int3
repz
popa
js
test
in
leave
or
adc
and
idivb
and
jg
mov
mov
cmp
dec
lret
jle
inc
xor
test
dec
orl
jg
in
xchg
test
sahf
xorl
rcrb
jns
xor
adc
dec
push
jne
xorl
lret
mov
inc
and
enter
adc
jg
hlt
cmp
inc
sbb
cmp
push
subb
dec
xchg
hlt
push
sbb
cmp
jbe
inc
je
mov
adc
ja
adc
div
lods
shlb
xchg
push
or
aaa
inc
pop
repnz
jnp
in
hlt
xor
jbe
xchg
adc
int3
out
shlb
inc
mov
jg
sbb
lcall
shlb
jno
stos
cmp
repz
popa
pop
sar
pop
sub
xchg
daa
xchg
add
and
jae
dec
mov
adcl
mov
pop
jl
adc
push
or
aad
insb
jno
les
fmul
daa
jno
mov
mov
addr16
cmpsb
push
pop
dec
out
rcl
imul
inc
add
push
pop
scas
in
jbe
push
and
nop
cwtl
sbb
mov
dec
pop
aad
mov
fbstp
mov
inc
mov
mov
in
push
lahf
mov
cli
xchg
rcrb
cs
gs
sub
mov
mov
jecxz
rclb
push
push
inc
lods
data16
rol
mov
nop
or
xor
fdivl
adc
push
sbb
scas
lahf
pushl
sbb
stos
mov
or
movsl
or
jecxz
xor
cmp
popf
scas
cmc
pop
jo
add
jo
push
pop
push
icebp
mov
mov
sub
pop
pop
fadds
and
test
outsb
push
jecxz
ja
rorl
test
ret
fwait
mov
or
mov
shr
inc
lcall
and
cmp
add
and
add
scas
inc
cmp
inc
pop
jo
mov
ror
add
or
adc
out
push
jge
ljmp
out
jb
sbb
xor
xorb
in
repnz
hlt
xor
mov
jns
sti
xchg
and
and
roll
sbb
into
pop
push
sub
scas
fsubrl
xchg
cli
jbe
mov
push
fisttps
js
fimuls
mov
inc
sub
iret
dec
and
xor
xchg
mov
add
inc
lods
test
push
pop
mov
jge
mov
jge
cli
repz
gs
xor
push
in
pop
les
mov
cmp
loopne
adc
inc
cwtl
movsb
clc
push
aam
scas
and
sbb
into
add
rcl
and
out
es
push
out
fisttpl
pop
cmp
mov
push
cli
add
test
push
stos
jo
int3
fldt
fldenv
dec
call
ja
cmp
stos
cmp
push
add
inc
sbb
lret
outsb
xor
enter
pop
sub
iret
daa
lods
outsl
push
out
pop
lods
cmp
test
popf
mov
imul
movsl
mov
or
stc
stos
lcall
test
jl
out
cmp
jne
mov
push
pushf
inc
ja
incb
xlat
in
int
jno
gs
and
cltd
xor
sbb
xor
mov
jb
lea
lcall
mov
insb
outsb
dec
adc
iret
push
xor
cmp
loop
shll
out
out
shrb
lods
mov
jne
mov
in
adc
inc
cmp
cltd
or
jno
push
xchg
dec
movsb
repnz
pop
stos
pop
sarb
repz
fdivrl
adcl
imul
xchg
sbb
mov
xor
mov
add
and
xlat
xlat
dec
pop
insb
jl
arpl
nop
addb
push
mov
out
lods
gs
out
dec
out
rolb
xchg
lds
dec
es
nop
pop
mov
insl
movsb
mov
cmp
rcrl
imul
nop
ja
out
addl
jno
je
jno
jns
ret
dec
jle
push
push
ljmp
ret
jnp
pop
xchg
add
jle
es
adc
in
xor
dec
flds
in
jmp
sbb
ss
jo
mov
out
sbb
in
inc
jmp
pop
xor
cmpsb
les
data16
dec
mov
rep
xor
test
mov
cmp
xchg
xor
fldcw
xchg
adc
dec
call
dec
and
or
fdivrl
inc
call
add
push
xor
adcl
imul
pusha
shrb
filds
mov
lods
in
ret
ret
es
mov
faddl
loop
inc
les
int3
stos
jmp
sarb
iret
cld
mov
push
scas
mov
fidivs
mov
mov
xchg
jae
inc
mov
sub
mov
repz
jns
mov
shll
into
cs
jecxz
popa
out
ret
insb
aas
inc
xlat
jg
iret
adc
push
jg
mov
lahf
pop
inc
das
addr16
pop
std
je
pop
js
jb
leave
dec
sbb
xchg
repnz
pop
scas
lret
xor
and
pop
jp
push
rol
in
outsb
lds
lods
shlb
sub
mov
cmpsl
cmp
mov
adc
fisubs
lea
mov
xor
mov
xor
cld
mov
in
dec
push
sub
hlt
xor
push
repz
mov
or
mov
cmpsl
mov
push
and
loopne
daa
loope
adc
ret
pushf
or
jg
lret
push
or
and
gs
adc
jae
cli
and
sti
mov
and
mov
dec
dec
notl
sub
push
fisubs
fsub
and
add
jnp
stos
jmp
cmpxchg
and
xchg
fisubrl
cmp
js
data16
sbb
jmp
fcoml
xchg
test
or
xor
xchg
mov
int
push
cmc
repz
sub
divl
xchg
sbb
mov
jle
insb
sti
gs
addb
lret
jg
enter
hlt
imul
idivb
int
mov
das
aas
dec
mov
cmpsb
cmpsb
jnp
add
xor
out
test
lea
dec
enter
lock
ss
out
or
repz
dec
test
mov
jmp
sti
pushf
jp
fwait
das
mov
mov
cld
push
lea
xchg
ja,pn
pusha
mov
jge
push
cld
cwtl
mov
les
ja
mov
mov
jle
pop
jge
iret
lcall
cmp
notl
mov
inc
mov
mov
lret
icebp
into
enter
xor
and
cmp
mov
out
test
xor
icebp
into
mov
jecxz
mov
xchg
fwait
mov
shlb
fistpll
xor
jb
push
push
add
mov
push
shll
ficompl
sub
mov
add
dec
pop
outsl
popf
adc
pushf
xchg
xor
enter
sbb
xchg
sub
xchg
add
les
fistl
fs
ja
jb
enter
stos
lahf
cmp
and
leave
movsl
cmp
pop
insb
iret
andb
or
arpl
stc
enter
lea
popf
dec
imull
aad
cmp
pop
mov
orl
nop
mov
xor
ret
aam
rorb
mov
out
shrb
enter
testb
hlt
sub
push
mov
in
test
xchg
lods
dec
es
mov
mov
lods
cmc
jl
daa
leave
idivb
int
lea
rep
jle
jb
ret
sahf
pop
lret
sub
mov
mov
lret
rclb
mov
lds
adcl
dec
and
out
shll
nop
push
jns
stc
lcall
inc
xchg
inc
mov
pusha
dec
cmp
jns
aas
pusha
popf
cwtl
xchg
repnz
or
cmp
mov
sub
jl
arpl
mov
lahf
test
data16
pusha
shlb
mov
decl
sahf
pusha
mov
lret
sbb
lods
push
inc
mov
or
pop
lea
sbb
sbb
jnp
arpl
mov
adc
dec
inc
dec
jecxz
in
xchg
mov
pusha
cmp
int3
stc
lods
cmp
mov
add
scas
pop
je
xchg
test
mov
icebp
leave
mov
test
fcompl
mov
rolb
clc
push
inc
fisttpl
mov
mov
push
dec
rolb
cmpsl
lea
add
push
xor
xchg
mov
fidivrs
fsubrs
inc
mov
mov
xorb
lcall
pop
push
xlat
daa
cmpsl
mov
cmc
scas
push
add
add
jg
push
mov
pop
aad
int3
hlt
dec
cmp
xlat
inc
xor
pop
test
pop
das
icebp
fs
xchg
or
jle
jae
cmp
movsb
add
sbb
mov
mov
inc
shlb
lods
cmp
jecxz
xchg
xor
add
or
daa
addb
jae
shrb
mov
xor
push
adc
adc
jae
cwtl
lds
xchg
push
or
adc
push
jno
mov
jl
rcr
jb
add
rolb
sub
mov
iret
pop
ja
mov
out
ds
jne
test
cmp
mov
push
das
mov
pop
mov
ja
mov
mov
fwait
daa
aam
add
sbb
mov
test
or
xchg
pop
cmp
xor
arpl
push
ljmp
icebp
mov
push
adc
stos
imul
mov
pop
mov
adc
das
push
int3
inc
sub
adc
dec
in
mov
cmp
sbb
mov
rcrb
pop
out
pop
and
ds
in
imul
adc
push
mov
adc
mov
aam
int
ds
or
xchg
movsl
fnstcw
arpl
test
mov
pop
cmp
test
ss
ss
dec
xchg
cmpl
nop
ja
repnz
ret
das
xchg
push
inc
rcr
inc
pop
xor
mov
aaa
stos
jge
cmp
lcall
mov
mov
inc
test
mov
sbb
add
shrl
lcall
cmc
test
or
daa
movsb
inc
push
push
ds
pop
inc
mov
std
adc
cmp
lret
mov
aad
dec
in
in
adc
sbb
ret
ja
mov
insl
sub
and
or
testl
data16
cmpsb
mov
ret
cmc
lea
insl
jle
pop
mov
iret
mov
mov
add
fcmovnb
loop
jp
add
movsl
out
test
cmp
jnp
and
rorb
adc
data16
mov
ret
outsb
mov
jp
mov
cmp
fadds
lret
push
pop
aam
sarl
pop
push
cmpsb
push
push
mov
movsl
icebp
mov
arpl
xchg
cmp
enter
js
gs
pop
test
cld
pop
cmp
decl
arpl
test
imul
shlb
jecxz
cmp
mov
mov
sub
jno
shrl
xchg
out
ret
adc
add
cs
mov
scas
pop
pop
mov
jns
fmuls
sti
adc
xchg
and
nop
roll
cmp
push
nop
mov
ret
mov
mov
int
xchg
xchg
inc
stos
mov
rol
mov
in
dec
and
ficoms
jb
pop
mov
fdiv
ret
add
and
jecxz
xchg
xlat
mov
fs
add
push
stos
hlt
jne
cli
sub
aad
mov
mov
ret
dec
inc
loop
push
jnp
sbb
cmc
mov
cld
pop
int
jo
bound
adc
cltd
aam
repz
add
sub
cmc
inc
pop
sub
push
mov
jnp
inc
jmp
in
inc
sub
push
mov
inc
lret
fsubr
jg
push
sahf
out
sbb
call
jo
cmpsl
pushf
or
inc
jns
xor
outsb
push
out
cmove
push
mov
test
xchg
in
lds
fdivp
or
xchg
or
adc
fwait
mulb
roll
dec
test
loope
lret
mov
mov
lahf
addr16
lcall
insl
and
loop
pop
lcall
jno
mov
cmp
rcrl
daa
imul
pop
sbb
pop
inc
dec
imul
lock
es
fs
lock
xchg
repnz
jmp
stos
call
jg
jg
xchg
xchg
out
lahf
mov
mov
test
jae
or
cwtl
push
jbe
or
stos
cmp
mov
dec
shr
stos
frstor
jecxz
jns
and
mov
fdivrl
push
dec
and
xor
in
test
push
mov
sbb
sub
or
cmp
mul
test
rorb
lods
pusha
add
sub
shlb
dec
xor
ror
cwtl
push
gs
cmp
adc
and
int
mov
mov
jecxz
rcrb
aas
cwtl
add
enter
dec
sbbb
cmpsl
sbb
mov
xor
movsl
test
rol
lret
bound
out
mov
loopne
fistl
into
sahf
fs
popa
xor
cwtl
push
mov
lret
andb
push
or
les
sbb
inc
andb
lret
lret
or
mov
in
je
addr16
inc
cwtl
je
in
lods
lcall
popf
inc
shll
jb
xchg
dec
cmc
std
out
mov
xchg
mov
xchg
icebp
sub
cmp
pop
imull
cmp
dec
pop
sub
shrl
inc
pop
in
orb
jecxz
out
bound
std
mov
lock
sbb
pop
dec
and
pop
or
mov
out
add
sahf
xchg
jo
test
sarb
leave
sub
roll
xchg
ret
cmpsl
leave
xchg
mov
addr16
inc
push
mov
xorb
ds
cmpl
inc
adc
ss
lahf
dec
iret
cwtl
daa
mov
pusha
and
std
pop
fwait
cld
addr16
jmp
popf
add
and
aad
test
sar
sti
mov
cmp
mov
test
jg
arpl
stos
xchg
xchg
sbbl
mov
mov
test
adc
pop
dec
pop
cmp
psubb
sbb
sbb
adcl
push
mov
cmp
jecxz
cli
adc
or
cltd
lock
aad
add
frndint
xchg
setbe
jl
pushf
and
movsb
xchg
fadds
sub
sarl
dec
sbb
pop
or
xor
and
jg
ret
enter
inc
push
int3
or
mov
outsb
xor
roll
add
stc
lea
mov
lods
ljmp
pushf
cli
ja
outsl
or
mov
leave
and
sbb
popf
leave
push
cmc
cmp
pop
lret
bound
in
rorl
push
pop
push
add
xchg
mov
sbb
sbb
lcall
out
push
stc
inc
mov
icebp
icebp
call
clc
outsl
or
out
popf
popf
loope
cmpsb
int
loop
jp
out
and
imul
add
push
dec
and
xchg
fidivrl
cmp
mov
icebp
aad
data16
stc
nop
orl
lcall
mov
adcb
or
mov
mov
cmp
xor
pop
loop
pushf
repz
mov
push
pop
add
int
int3
pop
or
pop
je
je
cmc
clc
ret
stos
inc
mov
cmp
jbe
js
xchg
mov
push
xchg
test
pop
or
mov
in
pop
xchg
aas
sbb
in
mov
or
rorb
jle
adc
imul
push
insl
repnz
je
pop
ja
inc
mov
pop
rolb
stos
sbb
cs
js
and
inc
xorl
jmp
mov
jnp
mov
push
mov
cmp
pusha
cwtl
in
les
sbb
inc
xchg
mov
fldl
pushl
push
mov
push
jo
arpl
xchg
incb
enter
push
dec
dec
loopne
in
xchg
xchg
cmp
pop
das
test
fwait
negb
sub
stc
nop
popa
mov
sbb
pop
fwait
sbb
add
fs
mov
stc
adc
push
cwtl
bound
out
icebp
mov
scas
sbb
jae
adc
sub
aam
jb
test
pop
outsb
xchg
fs
mov
jl
ss
mov
lods
push
aam
scas
cmp
std
lret
pop
icebp
push
adc
js
adc
add
call
inc
cwtl
inc
js
sbb
outsb
pop
or
add
adc
dec
mov
loop
pop
jne
inc
add
pmuludq
mov
xor
sub
push
fs
ss
bound
jle
or
cmp
jne
dec
dec
jl
clc
mov
jns
pop
dec
pop
sbb
pop
repz
ds
mov
dec
in
testl
pop
xchg
push
in
or
sbb
jnp
lods
pop
mov
in
mov
filds
xchg
mov
or
cmp
test
mov
es
in
sbb
pop
mov
shll
lcall
rcrb
push
popf
mov
rdmsr
lcall
rcrb
cmp
mov
shll
sahf
sbbl
fcomps
fdivl
dec
loopne
inc
mov
insb
add
add
jecxz
mov
xlat
outsb
les
sbb
dec
mov
into
gs
in
test
jg
mov
jl
iret
outsl
dec
clc
cmp
leave
pusha
fdiv
sbb
xor
cmp
fildll
js
dec
jns
cmp
fidivs
out
fsubrs
outsl
fwait
xor
jl
cmp
sbbl
out
pushf
xor
outsb
loope
pop
dec
shrb
leave
xchg
mov
insb
in
mov
fadds
push
pusha
daa
shlb
push
cli
pop
rol
mov
addr16
shll
push
shlb
add
movsl
movsl
subb
pop
xchg
sub
out
push
mov
ss
push
add
sub
clc
add
lahf
call
je
shlb
dec
or
mov
mov
nop
push
shll
jecxz
mov
repnz
repz
pcmpgtw
sbb
and
xor
inc
lcall
and
mov
rcr
cs
pop
ds
outsb
iret
out
push
xchg
arpl
mov
int3
outsb
mov
aas
push
cmp
pop
jp
xor
jae
fs
adc
jae
fcomps
das
and
fildl
xor
inc
in
sbb
jecxz
into
repnz
pusha
xchg
jmp
addr16
cmpsb
mov
or
or
in
dec
pusha
push
xchg
mov
or
imul
and
jb
xchg
adcb
sub
cmc
or
dec
mov
mov
imul
sarl
and
aam
in
cs
icebp
xor
mov
imul
add
shrl
ja
mov
test
out
fsts
mov
fldl
sbb
and
es
ret
fidivl
cltd
bound
dec
fsubrs
xorl
mov
cmc
imul
pop
push
insb
add
sub
shrb
push
popa
dec
dec
out
mov
rclb
pop
hlt
loopne
out
inc
aas
subl
pop
sti
cmp
sbb
adc
fwait
xchg
sbb
insb
movsb
outsl
and
jbe
pop
shl
mov
push
dec
mov
fcoms
ret
test
leave
pop
xor
inc
mov
addr16
mov
jno
mov
cmc
mov
call
or
mov
iret
cmp
pop
rcrl
jne
lods
jge
push
lods
lds
sub
mov
jne
into
aas
mov
pop
ds
inc
psubw
sahf
std
insl
lea
xor
std
xchg
clc
adc
sub
loopne
fldcw
lcall
dec
jmp
and
sbb
fwait
jecxz
ja
mov
jnp
loopne
adc
jmp
add
push
add
xor
in
push
out
and
rcl
mov
dec
pop
test
mov
data16
ja
push
dec
lock
test
add
scas
lret
bound
add
ljmp
daa
scas
mov
xor
xorb
adc
aad
mov
mov
cmp
jecxz
jb
test
adc
shll
xor
stos
pop
ficoml
pop
pusha
gs
xchg
sarl
inc
rorl
test
stc
clc
bound
mov
aaa
jae
xchg
addr16
sbb
pop
jne
rorb
push
call
pop
inc
fisubrl
and
loopne
inc
mov
push
jae
mov
xchg
call
out
jg
inc
sahf
add
push
pop
xor
sub
lods
adc
jbe
push
jne
lods
out
sub
lea
and
xchg
dec
xchg
lret
je
out
repnz
bound
inc
xchg
in
iret
add
mov
fsubrl
adc
jl
jnp
sbb
inc
pop
ds
inc
cmpsl
sbb
xchg
icebp
outsb
js
dec
sub
jbe
and
push
outsl
sar
nop
add
movsl
jmp
xchg
push
arpl
iret
cmp
negb
in
and
sbb
mov
inc
mov
inc
inc
lcall
sub
mov
icebp
mov
sbb
test
xor
ljmp
fsubp
fwait
push
popf
lods
adc
aad
push
fdiv
divb
scas
sub
xchg
sub
test
cli
adc
mov
in
out
popa
mov
jp
mov
xchg
clc
xchg
jecxz
add
jno
lods
inc
dec
addb
fisttps
test
test
jo
and
xchg
push
sub
cmpl
mov
fimull
sbbb
aad
sub
sub
pop
idivb
rcl
repz
mov
orb
push
adc
add
arpl
data16
mov
mov
mov
add
jge
testb
mov
in
repz
sbb
cltd
stos
mov
fs
inc
and
sub
test
imul
pop
sub
and
repnz
insl
sub
adc
test
xchg
sbb
cwtl
jle
or
jmp
jmp
add
push
sbb
aas
push
sbb
in
bound
orb
adcl
or
shlb
fcoml
add
aaa
pop
push
je
sahf
adc
push
lahf
push
jno
or
insl
add
mov
inc
inc
clc
iret
mov
dec
xor
mov
insb
add
lods
sbb
mov
jb
sbb
rorl
daa
or
shr
pusha
negl
cmp
push
xchg
sbb
out
lret
rcrb
jno
mov
mov
into
int
cmp
mov
adc
xor
xchg
cmpsl
andl
xor
movsb
inc
push
mov
xor
rcrl
lock
jmp
mov
nop
sti
aaa
add
bound
inc
cmpsl
mov
fisttpl
loop
add
jecxz
sub
push
push
cmc
inc
mov
shrb
fbstp
nop
dec
mov
call
add
call
add
inc
fmul
mov
scas
cmp
push
arpl
xchg
aaa
fisubs
mov
ss
xchg
pop
sub
cmp
push
xchg
daa
mov
in
push
xchg
fwait
push
adc
xchg
add
mov
idivl
mov
mov
addr16
rcrl
mov
pushf
jb
nop
daa
dec
rorl
mov
clc
xchg
jo
gs
push
jne
or
data16
fadds
mov
clc
xchg
cmp
mov
ss
in
pop
mov
cmpsb
mov
divb
in
stos
pop
into
xor
hlt
out
jbe
push
mov
leave
pusha
rolb
pushf
aad
insb
jae
ret
pushf
cmc
into
xchg
push
ds
js
add
xchg
pop
imul
call
add
xor
sub
pop
mov
pop
pop
movsl
xchg
push
lret
ja
in
aad
mov
pop
pusha
pop
push
add
nop
mov
sbb
loope
cbtw
mov
dec
mov
dec
fmuls
mov
mov
fiaddl
das
xchg
cmp
fisubs
xchg
int3
cltd
insb
enter
ret
sbb
ret
cmc
negb
cltd
test
sbb
aas
lcall
outsb
ficompl
andl
xor
pop
fcomip
lcall
test
add
adc
dec
pop
icebp
movsb
push
cmpsb
jl
push
testl
or
fcmovne
cmp
sub
mov
adc
push
jo
scas
test
xchg
fs
mov
lahf
xchg
sar
testl
jcxz
out
add
xor
xor
test
sets
and
cmp
repnz
push
push
mov
cmp
pop
inc
and
scas
xchg
lock
push
rorb
shlb
es
fisubrl
add
inc
sub
and
mov
arpl
shrl
ja
sub
addr16
cmpsl
add
mov
ret
adc
movb
inc
dec
pop
xchg
test
frstor
jno
sbb
shrb
mov
lret
jno
das
aad
or
ret
sub
int3
rol
int
mov
popf
sbb
enter
mov
xlat
in
adc
push
or
imul
adc
mov
bound
sbb
jmp
mov
icebp
jns
jp
rcll
mov
in
inc
out
xchg
mov
aam
mov
and
out
xchg
arpl
jp
std
push
lds
movsb
cmp
mov
arpl
sub
outsl
jnp
add
jg
adc
and
mov
inc
dec
fcoms
addr16
shrb
pop
push
fistps
jl
jg
cltd
mov
add
dec
cmp
sub
jecxz
test
sub
mov
mov
data16
and
mov
push
mov
call
or
repnz
ja
mov
test
aas
dec
cmp
cmp
jle
mov
jne
dec
dec
addl
insl
loope
add
dec
inc
setno
sbb
in
lods
jmp
dec
and
push
in
adc
push
pusha
cltd
sub
movsb
in
or
call
hlt
pop
mov
sub
xor
push
call
or
mov
sbb
mov
mov
sti
movsb
scas
add
popa
jns
xor
fcomps
jb
jns
imul
call
inc
jl
pusha
cmpsb
mov
repnz
call
enter
push
cmpsl
std
adc
pop
je
push
repz
adc
push
inc
loop
inc
adc
mov
popf
movsb
rcr
xor
inc
int3
dec
xchg
mov
adc
shl
xor
hlt
xchg
out
jnp
ret
movsl
pop
xor
inc
loopne
push
in
sti
add
jno
fisubs
iret
xchg
cmpsl
add
inc
adc
lods
xchg
pop
frstor
or
adc
repnz
adc
push
scas
sub
cmpsb
aaa
xor
outsl
mov
addr16
or
stos
cmp
jecxz
insl
xor
sub
adc
fnsave
sbb
jge
and
pop
dec
push
test
cmp
mov
and
inc
dec
loopne
pusha
stos
push
inc
cmp
jne
out
js
cltd
dec
or
lods
jnp
mov
and
rcrl
cmc
adc
cmp
or
add
xor
mov
inc
bound
addb
add
pop
fmuls
loope
movsb
cmp
cmp
loope
adc
push
js
imul
stos
outsl
cmpsl
sbbb
xor
popa
push
popf
push
clc
pop
cmp
pushf
ds
sub
inc
cmp
loope
mov
out
jns
mov
lahf
cli
aas
push
aaa
xorl
mov
push
fs
mov
les
xor
lock
hlt
stc
sbb
cmp
inc
sbb
pop
jp
pop
adc
mov
pop
adc
jg
xchg
and
inc
fmull
shlb
fidivl
ss
loop
test
mov
or
adc
es
mov
fwait
push
sub
cld
fstl
mov
insl
sbb
mov
jge
xor
fcoml
xlat
pop
cmpsb
rorl
jne
loop
add
mov
addl
stc
data16
mov
ja
pop
lock
sub
mov
clc
addb
mov
fstps
mov
jg
and
mov
dec
add
negb
jp
test
and
enter
movsb
loopne
adc
pop
out
xor
adc
or
cmp
mov
add
daa
or
scas
mov
fsubs
push
repz
pop
sbb
cmp
std
jo
cmp
pusha
out
inc
sbb
dec
lret
divb
mov
inc
mov
mov
lcall
mov
lods
pop
cmc
in
je
push
xchg
xchg
sbb
lret
and
pop
aaa
fcoms
fisttpl
cmp
in
push
inc
shld
or
inc
sbb
lret
imul
into
js
adc
xchg
loope
jnp
adc
in
ss
pop
xor
jns
stc
push
les
stc
sbb
jle
cmp
xchg
inc
pop
lret
push
sbb
and
sbb
pop
aas
mov
leave
gs
fbld
addr16
adc
sub
decb
dec
out
cmpsl
stos
jmp
jl
loope
xor
fistps
inc
pop
cmpsb
mov
imulb
dec
cmp
xchg
push
mov
cmp
cmp
and
and
decb
mov
mov
jo
push
mov
sbb
or
lods
test
sub
mov
das
xor
pusha
sti
adc
dec
jne
jl
les
xchg
cmc
int
mov
sbb
aas
sub
movsb
out
add
loop
outsl
pop
in
xchg
sbb
push
push
xchg
cmp
sahf
or
int3
notl
das
adc
repnz
sub
sbb
mov
jle
cmpsb
xchg
dec
jnp
sahf
add
int3
inc
sbb
mov
arpl
jno,pt
scas
xchg
fistpll
fsubrs
inc
test
dec
pop
adc
mov
ret
sub
mov
les
mov
mov
daa
outsl
pop
dec
pushf
pop
mov
inc
ds
mov
or
jae
out
jl
pop
in
ds
nop
daa
lret
fwait
sarl
jo
int
dec
push
cmp
push
leave
aaa
stos
out
sub
test
aaa
imul
xor
pop
ja
dec
add
mov
jmp
aaa
fs
iret
cmp
and
dec
test
pushf
sbb
mov
jnp
xchg
xlat
sub
test
cmp
lcall
inc
add
xor
cmp
cmpsl
lea
adc
daa
or
pop
mov
popa
xchg
jnp
cs
cmpsb
sub
loop
add
data16
mov
fsubrp
popf
sub
outsb
imull
inc
lret
add
out
push
and
jg
mov
xchg
mov
out
jne
jbe
mov
cld
lcall
push
addr16
fldenv
ror
rol
pop
das
dec
mov
data16
add
dec
mov
and
loopne
push
pop
xchg
shll
call
xchg
sub
movsl
dec
cmpsb
aad
cwtl
pop
mov
orb
mov
call
jl
pop
pop
sub
xorb
or
inc
mov
sbb
adc
divb
adc
xor
adc
xlat
fnstenv
mov
push
cmp
push
fidivl
in
pop
inc
dec
in
aaa
lds
imul
mov
sbb
insl
adc
aad
adc
pop
es
rcrb
fsts
sbb
cli
jne
scas
cmpsb
adc
addr16
lcall
mov
mov
cltd
mov
sub
xchg
dec
cmpsl
test
pop
incl
xor
push
and
mov
cmp
je
mov
xchg
clc
add
push
add
jg
sub
mov
jb
popf
xchg
dec
sub
call
movsl
and
popf
nop
sbb
in
adc
push
lret
popa
lods
outsb
mov
jl
mov
ljmp
js
xchg
fstps
mov
jl
ljmp
and
add
jl
loop
lahf
fwait
mov
cli
test
cmp
mov
ret
pop
pop
cld
insb
js
push
cmpsl
ds
add
mov
dec
and
mov
push
out
mov
in
inc
sub
out
mov
lods
inc
outsb
add
lods
mov
lea
sbb
popa
jnp
push
pop
pushl
arpl
rcrb
pop
dec
dec
lods
push
mov
jbe
mov
and
fmull
in
mov
loopne
adc
mov
jle
subps
pop
repnz
iret
outsb
cmp
pop
adc
dec
iret
jl
imul
es
lcall
lods
into
adcb
sbb
sub
sahf
clc
lods
es
cli
push
push
inc
pop
inc
xor
ss
and
push
xor
imul
sbb
cmp
jp
xor
and
addl
out
mov
ret
xchg
jp
sub
into
mov
adc
ss
cwtl
arpl
pop
ss
ja
stos
inc
pop
pop
lods
fcompl
ret
inc
inc
add
fnsave
sub
push
gs
ss
adc
ficoml
dec
sbb
sbb
rcrl
jo
shlb
sarb
lods
std
inc
stos
fists
cld
push
ret
add
insb
fidivrl
adc
dec
sti
addr16
adc
sbb
inc
xor
cmp
push
xchg
cli
xchg
push
mov
dec
mov
iret
fiadds
and
push
jae
inc
rclb
inc
in
sbb
or
lea
mov
ss
nop
dec
loope
mov
dec
testb
sahf
stos
dec
sub
outsl
mov
dec
add
inc
xchg
pop
mov
jg
test
repnz
adc
mov
cmp
daa
rcrb
mov
stos
inc
and
add
icebp
out
inc
loop
out
xor
int
adc
add
leave
pusha
sarl
and
out
dec
lahf
jg
adc
sbb
lds
loop
out
push
hlt
movsb
outsl
jle
ss
jg
cmp
movsb
outsl
ret
jl
and
sbb
jne
out
cmp
cltd
repnz
push
loope
mov
push
out
lret
inc
loop
jae
add
repz
mov
ss
sbb
xchg
mov
jae
push
xchg
sub
into
mov
sub
adc
loopne
mov
cmp
sbb
pop
sub
jge
jmp
dec
sti
popf
or
insb
dec
inc
les
jmp
inc
and
fs
dec
dec
rclb
cmp
adc
push
aaa
outsb
inc
aaa
out
dec
pop
in
adc
aaa
push
rorb
call
fbstp
rcll
push
and
jbe
xchg
and
imul
and
mov
mov
or
cmp
jecxz
dec
jb
xchg
push
cmp
data16
pop
mov
adc
jbe
mov
jmp
xchg
div
lahf
sarl
lcall
movsl
repnz
xchg
loopne
sbb
dec
in
sbbl
outsl
fs
push
andl
push
and
sarb
inc
push
std
push
ss
xchg
push
cmp
xchg
inc
push
leave
cmpsl
pop
cmp
add
jge
insl
dec
loop
pusha
xor
xchg
test
or
sub
insl
jp
push
push
ret
iret
xchg
add
fidivl
xor
sub
inc
cs
inc
aad
add
and
cmp
xor
xor
mov
or
aas
scas
mov
aam
iret
mov
inc
adc
pushf
push
dec
or
xor
mov
xchg
xor
mov
jo
sub
ftst
testl
lahf
mov
cltd
roll
aad
xchg
test
jg
mov
ss
clc
jl
and
mov
xchg
xor
cmp
outsl
inc
mov
cmc
call
int
mov
les
pop
xchg
dec
stos
pop
dec
mov
mov
aam
mov
shll
pop
repnz
adc
int
xchg
push
and
loopne
lret
adc
push
sahf
mov
fbld
xchg
inc
loope
popa
fbstp
in
nop
mov
aam
adc
mov
mov
sti
adc
jbe
int
sbb
adc
cmp
jg
mov
add
push
mov
cmp
clc
add
mov
xchg
add
pop
jmp
mov
mov
push
fisubl
fistps
dec
int
mov
xor
aas
rcll
add
mov
stc
popf
lods
sti
arpl
mov
inc
pop
inc
push
decl
int3
rclb
xchg
repnz
hlt
mov
lret
lea
sub
aas
xchg
lcall
pop
cmp
dec
pop
xor
addb
jae
push
sub
sub
xchg
sbb
imul
jle
sub
mov
xor
push
jae
fnsave
xor
stc
shrb
faddp
aam
mov
daa
leave
aam
pop
xor
cmc
adc
sbb
ret
das
fbld
xchg
clc
je
sub
jg
pop
popf
stos
pop
cmpsb
cltd
xlat
fstpl
jmp
into
adc
jae
fwait
xor
jmp
adc
push
cli
add
cmpsb
push
cmpsl
add
les
idivb
push
mov
mov
rorl
push
inc
ret
pop
push
adc
adc
sbb
xlat
bound
jne
inc
push
in
mulb
dec
or
test
or
in
ss
shrl
aaa
xchg
filds
out
xchg
int3
adc
mov
mov
jg
adc
test
jecxz
dec
popa
or
andl
mov
repz
outsb
sub
sbb
scas
movsb
mov
xchg
bound
and
clc
out
jo
loope
out
daa
cmp
ja
aaa
mov
movsb
sti
xlat
outsb
lods
jecxz
outsb
std
sbb
jb
into
mov
push
jecxz
jp
mov
std
addr16
mov
xchg
cltd
arpl
enter
inc
outsl
out
scas
push
fldl
mov
lahf
cmc
push
dec
lock
lcall
cwtl
xor
les
repnz
sbbb
imul
pushf
inc
push
out
mov
lahf
add
cmp
cmp
jg
shll
jmp
movl
stos
xchg
mov
fdivrl
cs
or
inc
pop
mov
inc
shr
sbb
in
inc
mov
imul
sub
sahf
add
mov
std
inc
sbb
jle
lods
cs
sti
mov
fldcw
paddusb
pushf
pop
movsl
inc
push
mov
xchg
imul
mov
pop
lea
jge
mov
adcb
dec
cmc
outsb
add
clc
push
out
int3
pop
sarb
dec
dec
dec
aaa
popa
mov
ljmp
jo
fcoms
adc
sbb
jb
xchg
insb
push
push
mov
sti
fbstp
adc
dec
mov
clc
fwait
dec
shrb
cli
pop
mov
mov
and
jns
mov
imul
inc
sbb
cwtl
cmp
sbb
sbb
call
fbld
xchg
cmp
fwait
xchg
cwtl
cld
cltd
mov
mov
cmpsl
jb
sub
push
cmpsl
loope
mov
jge
push
ljmp
jno
out
aas
add
jno
pushf
sub
dec
out
aas
addl
sbb
xor
out
inc
dec
pop
cmp
ret
or
cmp
add
cmp
nop
fiadds
dec
outsb
aam
out
dec
dec
push
loopne
mov
movsb
dec
fcompl
adcb
inc
scas
sub
adc
lods
jp
xorb
add
js
lret
aam
or
mov
shll
mov
fildll
xor
cmp
notb
jae
cs
lea
jp
call
xor
xlat
stos
jge
das
xor
lcall
outsl
loop
add
and
mov
jp
outsb
mov
rcl
push
mov
push
mov
fisttpl
cmpb
adc
sbb
xchg
jno
cmpsl
out
jl
add
xor
dec
ss
stos
mov
fwait
loop
les
int
pop
add
jae
cltd
test
sbb
mov
jne
jnp
pop
xlat
arpl
mov
pop
mov
xchg
mov
push
aas
push
cmp
push
sub
cmp
dec
sub
shlb
cltd
jl
pop
lea
push
push
pcmpeqb
in
and
sbb
cltd
outsl
ret
lock
cwtl
xchg
jae
negl
cmc
pushf
sbb
or
sbbl
pop
in
rolb
pushf
fistpll
in
popf
repnz
jmp
test
pop
std
jge
std
mov
das
mov
aam
xor
sbb
mov
pop
enter
sti
cmp
iret
inc
push
call
fisubs
sub
stos
or
jl
gs
scas
cmpsb
mov
pushf
sbb
test
inc
cmp
lcall
adc
cmp
xlat
scas
addb
inc
rcll
iret
mov
pop
pop
dec
rcrl
mov
test
dec
pop
sbbb
aam
add
pop
inc
into
fildll
dec
pop
dec
sarb
imul
pop
js
sbb
shrl
mov
sub
pop
cmpsb
jmp
in
test
loopne
inc
into
push
xchg
xlat
mov
sbb
out
lods
inc
lds
mov
imul
orl
pop
or
shrb
xchg
nop
sbb
mov
sub
xchg
jle
inc
enter
ret
arpl
jp
inc
jle
pusha
sbb
push
and
pop
imul
shlb
cmp
push
pop
push
or
or
ret
repz
addl
lret
testl
push
cmp
sub
out
fwait
mov
push
jbe
and
scas
jg
ja
jae
adc
mov
stos
std
xor
aad
mov
push
pop
imul
inc
mov
jecxz
sti
adc
inc
dec
mov
mov
inc
add
pop
pop
jbe
aaa
in
in
cmp
lret
fwait
push
pushf
sti
cwtl
rclb
jl
adc
testb
cli
pop
fisttpl
jno
jno
sub
and
jae
add
mov
push
mov
lds
mov
dec
lods
xchg
and
pop
aas
cmpsb
mov
sub
pop
mov
or
cwtl
clc
insl
loop
loope
psllq
rorl
sbb
mov
or
mov
in
int
cltd
stos
in
jge
fs
out
add
xchg
fdiv
mov
mov
lea
adc
push
test
xor
test
xchg
jl
push
in
hlt
mov
and
and
adc
and
or
divb
pop
push
fsts
jecxz
jmp
rcl
fldcw
cs
pop
shlb
sbb
fidivs
xchg
mov
les
jmp
in
or
out
call
repz
fnstcw
arpl
clc
cli
sar
pop
into
imul
imul
push
hlt
and
fdivs
dec
ljmp
xchg
xchg
ja
ret
mov
and
sbb
shl
mov
pop
jge
inc
repz
and
xchg
sti
xchg
push
sti
mov
in
and
pop
push
fsubrl
or
cmpsl
mov
cmp
inc
fs
dec
jbe
push
add
mov
xchg
push
loop
test
dec
fstpt
hlt
sub
aaa
into
pop
es
dec
pop
jle
mov
lods
sbb
fisttpl
movsl
jne
fistps
sub
ljmp
xchg
sub
dec
xchg
lds
imul
arpl
sbb
dec
cmc
jae
jle
test
sub
arpl
sub
fldenv
test
andl
ror
popa
pop
sbb
push
sarb
cwtl
std
popa
inc
cmp
sbb
cwtl
and
rcll
adc
int3
lods
mov
pop
add
das
ret
adc
ret
and
or
jge
sub
pop
lds
sbb
lods
mov
dec
push
push
fdiv
dec
lock
popa
jo
imul
mov
leave
js
push
jnp
mov
lcall
dec
aaa
dec
and
dec
test
dec
xor
orb
mov
sahf
imul
cmpsl
pop
insl
add
and
lds
scas
lods
fcompl
push
bound
fadd
int
popa
adcl
cmp
cmc
mov
jl
mov
mov
add
sbb
cmc
cmp
jns
sub
hlt
inc
jns
jmp
push
les
jne
addr16
pop
cltd
inc
pop
fidivl
aad
cwtl
xor
aaa
or
into
fmull
test
movsb
adc
bound
jge
lock
ss
xchg
cld
pop
xchg
movsb
roll
sahf
clc
sub
jno
ret
insb
stc
inc
jno
add
mov
push
mov
cltd
stos
inc
pop
push
loopne
movsb
adc
pop
push
xorb
xchg
xor
push
push
jne
jge
mov
pushf
scas
clc
dec
les
stc
inc
xchg
sub
cmp
xchg
xor
inc
xlat
add
dec
fisttpl
pop
cmc
in
inc
cmp
push
ret
dec
sarl
loop
cmpsl
std
mov
mov
mov
cmp
mov
cmp
call
xor
xchg
push
inc
pusha
add
jge
push
sub
outsl
notb
inc
sbb
stc
jl
mov
xchg
jl
mov
jg
das
xchg
pop
scas
cltd
loope
sub
test
xor
push
adc
sti
push
push
mov
inc
jnp
aas
cld
dec
xor
call
xor
or
inc
movsl
add
js
push
mov
stos
sub
pushf
cli
scas
and
data16
dec
push
push
push
andb
sub
sti
fdivl
je
cmp
sahf
daa
xlat
jmp
repz
jae
jae
mov
pop
lahf
mov
fsubrs
movsb
or
daa
cld
xchg
pop
ficomps
dec
cmp
push
mov
cs
in
int3
inc
xor
push
stos
adc
sbb
xor
icebp
test
add
je
out
inc
fs
les
or
call
rsm
sbb
add
in
cmp
ret
add
outsb
jmp
outsb
test
xor
repnz
clc
test
xor
clc
sahf
inc
roll
lcall
and
nop
add
cli
fnstsw
mov
cmp
xchg
xor
inc
add
xchg
sbb
xchg
lods
loopne
adc
push
mov
leave
addr16
cmp
push
gs
xchg
pop
mov
shll
push
mull
test
scas
jb
lret
xchg
cwtl
or
jl
xor
mov
inc
lret
ja
movsb
mov
adc
adc
ds
out
xlat
cmp
sbb
pop
mov
pop
dec
shll
push
ja
jb
ja
jmp
and
outsl
ss
mov
out
ja
insb
push
jge
mov
inc
in
jo
or
push
fstps
xchg
sbb
fmull
jbe
cld
jb
fnstcw
pop
xchg
sub
cmpsl
loope
out
into
test
lret
jle
stos
daa
sbbl
jnp
xor
int
inc
push
test
pop
sbb
add
shlb
and
popf
movlps
ds
push
mov
mov
imul
jle
outsl
enter
nop
adcb
xchg
mov
mov
pop
insb
sub
and
cmpsl
mov
dec
icebp
mov
sbb
add
sub
xchg
adc
sahf
mov
into
jne
inc
mov
sub
divb
mov
pop
lret
add
test
xchg
mov
lods
int
and
loope
cmp
mov
int
in
test
push
je
adc
xchg
inc
adcl
inc
mov
cmp
std
cmp
popf
lock
or
jo
scas
sub
cmp
sti
or
mov
rolb
dec
arpl
and
mov
push
fbld
test
mov
fcomip
pop
push
mov
lods
js
jnp
and
cmp
add
fimull
loope
jb
cmp
pushf
lods
std
pop
aaa
sbbl
mov
fs
pop
fcoml
jecxz
icebp
and
sub
lods
pop
dec
inc
lcall
shll
in
icebp
xchg
and
push
push
jnp
mov
or
sub
mov
pop
inc
push
and
iret
xor
stc
fstpl
sub
repz
pop
jg
add
jb
fisubs
sti
pop
outsb
ljmp
rclb
ja
inc
test
std
leave
xor
adc
notb
subl
xchg
xor
lods
inc
repnz
lds
xor
aaa
mov
cmp
cli
dec
jp
lcall
push
mov
pushf
enter
sbb
cmpsl
cmp
cs
or
cmp
push
fnstenv
fbstp
xchg
or
sti
dec
mov
adc
std
jg
lahf
inc
stos
cmpsb
cmp
loopne
mov
dec
and
addr16
iret
vpcomub
sub
dec
pop
cmc
inc
daa
in
rcrb
adcb
sbb
mov
or
loope
cmp
jecxz
lods
push
sahf
or
pop
add
in
mov
fsts
test
fs
loope
das
addr16
out
cltd
fnstenv
pop
xchg
sbb
dec
loopne
into
sarb
xchg
fcoms
adc
mov
out
and
xor
and
loope
xor
loope
pop
lds
out
sub
sub
jg
cmc
js
daa
pop
bound
mov
mov
xchg
les
jno
int
pop
les
or
xor
icebp
sahf
jmp
xchg
adc
push
dec
and
bound
ljmp
ja
jns
lock
test
adc
enter
pop
cmc
or
jl,pn
pusha
cmpl
push
fwait
xor
adc
movsb
into
dec
dec
sbb
fs
dec
in
mov
bound
pusha
inc
adc
mov
clc
test
inc
mov
cmpsl
fs
xor
in
int
and
ret
lods
fdivs
push
sti
cmp
pop
push
push
cmp
testb
inc
outsb
mov
push
loope
cmp
mov
or
decl
ret
mov
jmp
test
in
mov
mov
jmp
inc
outsb
fwait
inc
xchg
sub
jmp
std
push
mov
and
or
adc
icebp
movsl
push
movaps
inc
fistpl
push
jbe
adc
dec
xor
std
neg
fldenv
push
pop
in
cmpsb
stos
je
out
ret
call
ret
mov
outsl
inc
add
xor
cmp
pop
pusha
cmp
xlat
jo
mov
in
add
enter
in
sbb
fbstp
lods
in
mov
lret
fdivrs
adc
jle
call
xchg
daa
mov
cwtl
pop
daa
shrl
nop
or
out
fwait
or
jae
sbb
or
jns
pop
es
xchg
ds
fucomip
jbe
and
js
call
fsubr
loop
and
mov
pop
int3
mov
test
dec
inc
pop
movsl
pop
stos
les
mov
in
push
sub
adc
dec
repz
jmp
adc
xchg
stos
pop
aam
or
loope
xchg
cmc
push
push
cld
ror
xchg
insb
pop
xor
cmp
loope
push
jns
int
cmpsb
rorl
gs
sbbb
sub
fnstenv
pop
lods
mov
orl
cmpsl
out
xchg
ss
sub
test
lret
ror
and
aas
jnp
cmp
mov
pop
fstl
inc
add
mov
inc
mov
pusha
mov
push
or
adc
mov
ficoms
cmp
std
inc
pop
fwait
hlt
mov
data16
test
or
mov
scas
into
cli
in
subl
pop
xchg
rcll
add
insl
bound
out
mov
adc
ficomps
add
xor
sub
imulb
xchg
mov
mov
addb
and
aad
sarl
pop
out
mov
xchg
cmpsl
push
or
clc
cmp
add
jb
rcrb
add
stc
je
pop
jle
cmp
repz
outsl
sbb
movsl
and
into
gs
mov
sub
push
xor
repz
into
call
inc
ret
jmp
and
mov
jmp
cmp
xor
out
insb
add
jle
mov
ljmp
mulb
sub
pop
sahf
jg
pop
repnz
pop
cmp
pop
lods
cmp
pop
jge
add
lock
mov
xor
mov
jae
clc
pop
stos
sub
test
and
test
ljmp
jno
mov
xchg
je
or
cmp
loopne
jbe
adc
loopne
cmp
lock
cmp
adc
inc
and
fsubrp
shl
pop
add
fadds
test
xlat
out
pop
sahf
add
mov
in
int3
inc
cmp
arpl
les
mov
or
pop
xor
test
cli
cs
pop
sbb
jno
mov
mov
int
dec
mov
push
mov
pushf
lahf
adcb
mov
pop
jne
stc
mov
hlt
adc
out
dec
push
dec
add
sub
insl
inc
cmp
daa
sti
sub
stc
js
xchg
movl
negb
adc
or
xchg
sub
sarl
data16
pop
sahf
pop
sbb
mov
rcrl
inc
nop
repnz
std
movsb
mov
test
stos
inc
xor
idivl
mov
scas
xchg
scas
das
adc
jg
dec
sub
sub
lret
push
xchg
jmp
mov
add
daa
mov
aaa
push
add
shrl
sti
arpl
sub
mov
and
mov
fdivp
int3
out
andb
mov
data16
push
jbe
in
outsl
xchg
cs
add
and
adc
int3
dec
cmp
cmp
cmp
xchg
stc
nop
leave
or
pop
addr16
shlb
inc
push
adc
dec
negl
insb
and
jo
sub
mov
jno
sahf
icebp
mov
icebp
lret
pop
xor
inc
out
and
outsb
inc
lods
outsl
jns
lods
fstpt
lock
sbb
std
mov
faddl
cmp
scas
rcll
or
jnp
sub
xchg
jecxz
dec
and
cltd
std
ret
cltd
adcb
push
movsb
mov
cltd
imul
mov
cs
jno
mov
ret
jl
mov
das
add
sub
pop
loope
test
push
movd
mov
out
out
xchg
xchg
dec
pop
out
sti
call
sub
rolb
adc
cmpsb
mov
push
adc
lcall
in
in
stc
popf
pop
adc
mov
add
inc
fisttpll
cmp
insb
hlt
sbb
mov
into
movsl
out
jl
sarb
fbstp
mull
xchg
mov
les
out
jns
leave
xor
jo
push
dec
and
sub
lcall
out
mov
mov
mov
cmpsb
shlb
xchg
je
repz
and
ret
outsl
sbb
test
sub
add
dec
gs
popf
push
push
iret
fwait
das
inc
sbb
jecxz
lret
enter
out
jmp
pop
mov
mov
jg
pop
lret
test
pop
sub
scas
addb
scas
xor
stos
xor
mov
rcll
stc
sbb
dec
scas
and
repnz
inc
iret
iret
and
and
stc
inc
push
and
out
adc
js
insb
xor
aad
test
mov
fldcw
in
sar
xor
repnz
into
sbb
lods
cmp
lret
xchg
xlat
add
inc
sbb
push
mov
lret
rcrl
xor
xor
cmp
pop
sahf
jecxz
and
mov
repz
cmpsb
add
sbb
ret
imul
movsl
fistpl
cli
insl
negb
cmp
cmc
xchg
mov
pop
cmp
insl
out
ja
lds
sbb
push
es
out
roll
pop
test
int
sbb
shrl
das
cli
push
push
dec
jb
cld
jnp
insl
lods
sbb
xor
inc
jl
jae
jmp
or
mov
mov
imul
aam
cltd
mov
fldz
jb
repz
or
adc
mov
gs
xchg
lods
faddl
or
icebp
lock
mov
sub
lahf
add
fsubrs
test
or
adc
add
fwait
mov
inc
test
jle
test
mov
clc
push
jmp
pavgw
mov
lods
lcall
or
xor
arpl
xchg
cmp
xchg
xchg
sub
sub
cltd
pushf
les
mov
aad
aam
cmc
jbe
hlt
insb
inc
stc
scas
mov
ljmp
and
mov
lods
hlt
mov
cmp
sub
rcrl
and
cmp
sti
nop
xor
dec
cwtl
mov
dec
and
push
mov
insb
fstl
in
mov
lock
lods
add
sbb
je
repz
jno
sarb
mov
cmp
lret
call
sbb
xchg
out
pop
outsb
iret
mov
mov
adc
sahf
xor
sbb
repz
push
dec
dec
jge
cmp
movsb
leave
call
les
sub
and
clc
rcl
out
mov
or
xlat
push
jl
adc
test
insb
lcall
test
xchg
call
sbbl
lret
not
xchg
xchg
and
pushf
or
repnz
mov
jno
mov
out
jmp
loopne
movl
xchg
xor
lret
arpl
jge
cmp
mov
jns
mov
sti
out
movl
inc
push
xor
cli
cmp
mov
add
test
mov
xchg
scas
in
ffree
pop
jno
add
lret
rolb
or
scas
jg
jl
mov
imul
aam
loopne
popa
push
push
movsl
jge
xor
mov
pop
scas
adc
jl
out
push
inc
add
in
mov
test
pop
negb
mov
xchg
std
movsl
push
mov
add
sahf
sub
pop
nop
jae
ret
adc
mov
xchg
adc
jecxz
mov
xchg
out
fbstp
xchg
sbb
cld
jnp
or
pop
and
lock
sub
sbb
in
mov
sahf
in
ret
lea
cmpsl
cmpsb
test
enter
mov
mov
int3
lret
add
add
mov
adc
addr16
adc
push
adc
jbe
icebp
sub
inc
add
adc
jo
push
jo
arpl
popa
rorl
out
cld
pop
mov
and
iret
test
mov
xlat
aam
fcmovb
les
in
stos
mov
push
fsubrl
xchg
xor
sub
mov
enter
popa
loope
mov
stos
xor
test
mov
int3
shrl
fs
leave
out
sti
or
inc
and
dec
out
fwait
mov
push
imul
mov
mov
js
mov
jecxz
pop
mov
dec
nop
divl
imul
xor
jne
jge
bound
sub
or
xor
cmp
pop
push
out
pop
jno
ljmp
stos
negl
mov
and
lods
pop
inc
pop
push
adcb
sarb
mov
js
mov
mov
dec
hlt
mov
mov
rorb
gs
mov
sub
dec
cmpsl
and
push
test
cld
ja
xor
push
sbb
mov
leave
pop
fnstsw
and
lret
pop
add
lods
sub
pop
scas
xor
mov
jbe
pop
movsb
xchg
movsl
and
in
push
push
xchg
jle
jno
or
sbb
popf
stc
xchg
push
call
mov
testl
pop
data16
cmc
and
cmp
or
arpl
fiaddl
movsb
and
cltd
cmp
sbb
xchg
pop
out
ret
mov
xor
xchg
xor
adc
inc
lcall
in
cmp
mov
push
shrl
pop
push
add
xor
mov
jmp
sub
cmp
scas
mov
hlt
in
inc
pop
push
cmp
cmp
mov
rcll
int3
jp
cld
xchg
imul
sub
jl
dec
sbb
inc
test
pop
xchg
cmp
loop
pop
ljmp
push
mov
cmpb
push
and
repz
pop
mov
shll
es
daa
outsl
xor
lcall
in
sbbl
or
or
mov
js
push
insb
cmp
aad
add
movsb
test
pop
or
movsl
adc
xchg
in
movsl
ret
dec
icebp
pop
mov
inc
popf
int
jne
push
jb
mov
mov
lods
std
gs
in
dec
cmp
inc
cltd
mov
repz
lret
inc
fstpt
pop
stos
xor
shrl
test
xchg
inc
adc
and
pop
push
mov
push
sbb
xlat
push
sbb
dec
mov
mov
test
mov
std
loope
inc
lret
sub
inc
aas
pop
shll
jno
shll
test
jle
hlt
adc
ficompl
popa
and
mov
cwtl
js
loope
stc
jae
adc
scas
int3
arpl
repz
fmull
jno
rcrl
pusha
pop
jmp
add
cmc
fidivl
mov
cltd
and
sbb
pop
ljmp
sbb
dec
and
outsb
xor
sub
fcomip
cmp
int3
clc
and
inc
mov
inc
stos
mov
out
ret
subl
aaa
ja
pop
push
sub
shlb
or
mov
and
inc
shlb
jge
jl
mov
scas
cmp
or
fs
icebp
or
lock
loopne
mov
sub
xor
sub
enter
push
aam
inc
bound
hlt
ljmp
xchg
or
jp
adc
in
mov
push
out
mov
repz
mov
loopne
out
popf
inc
in
xchg
jnp
rcll
mov
fidivs
pop
and
je
sbbl
dec
add
repnz
das
js
xor
push
not
fidivl
out
or
jns
mov
pop
lds
ret
pop
stc
sarb
xlat
pop
dec
mov
in
push
repnz
rcrb
sbb
jns
shl
sub
loope
fldl
pop
pop
inc
jne
fs
push
inc
notl
inc
int
mov
inc
lret
adc
leave
fldl2e
adc
jge
dec
and
out
jecxz
aam
ljmp
push
or
pushl
dec
mov
fisubl
lods
mov
push
and
mov
cmp
aaa
pop
scas
or
push
jno
std
mov
cmp
int3
fsubrp
sbb
insl
pop
nop
lods
inc
ret
es
leave
lret
xor
add
dec
das
push
scas
imul
sbb
dec
mov
dec
subb
xchg
call
sbb
jne
xchg
lahf
icebp
es
leave
or
push
pop
push
mov
js
mov
test
popa
sahf
sbb
sbb
jg
jmp
and
adcl
inc
xor
xchg
fsubr
push
into
cmc
shrl
xor
and
mov
mov
cmpsl
mov
in
sub
inc
fimuls
lds
push
mov
jnp
fsubrl
inc
pop
mov
fcomps
adc
inc
insl
mov
gs
pop
std
jge
fldcw
jmp
or
daa
int3
pushf
cld
cmpsl
mov
jg
sarl
stc
or
sbb
jno
idivl
dec
lds
sub
push
push
outsb
iret
dec
and
aam
push
pop
cmc
inc
push
pop
jo
bound
mov
clc
inc
xchg
loopne
xchg
jnp
daa
lods
adc
jne
ss
pop
jns
cmp
dec
adc
mov
dec
pushf
pop
repz
shr
rol
popf
les
outsl
dec
mov
sbb
inc
sbb
push
jb
jecxz
jl
xchg
jp
sbb
fcomps
push
lcall
in
std
push
mov
int
xchg
shrb
pop
jb
cmp
mov
jne
outsl
sub
xor
sub
dec
cwtl
call
fistpl
sbbl
mov
mov
outsl
sub
stos
out
push
shr
cli
or
aaa
push
andb
ja
and
inc
mov
xchg
arpl
push
mov
ret
mov
scas
cmp
rorl
adc
lcall
in
jp
fidivrs
mov
pop
inc
mov
test
and
lret
ret
icebp
mov
jg
and
imul
mov
fisubs
or
sbb
std
aad
das
cs
lods
popf
rcl
movsl
inc
cmpsl
out
jmp
jmp
push
or
fdivs
cmp
add
mov
xchg
jbe
loop
push
jns
xor
fsubr
jbe
rorb
outsb
fildll
sbb
adc
adc
jne
repnz
divb
rolb
mov
shl
ja
out
mov
lahf
cmp
xchg
jmp
imul
jmp
fsubr
and
dec
dec
inc
xor
mov
xlat
mov
into
lcall
stc
adc
sbb
sbb
cli
pushf
fcmovbe
inc
dec
mov
push
jae
ds
fstps
mov
adc
adc
loope
fsubr
push
or
jg
mov
int3
xor
ret
insl
push
push
ljmp
sarl
mov
pop
stos
inc
xchg
push
push
insb
daa
cli
push
pop
xor
hlt
pop
xor
sti
lock
xchg
adc
orl
jae
sub
jge
daa
aaa
pop
dec
mov
mov
pop
out
push
push
add
movsb
ds
lret
jae
jmp
xor
push
test
fs
sbb
aas
push
movsl
mov
pop
out
lods
mov
std
push
add
or
push
in
sbb
shrl
lock
sahf
aaa
into
iret
imul
aad
rol
loopne
cmp
imul
mov
scas
dec
pop
adc
jl
aas
pop
lahf
jge
adc
inc
pop
cmp
mov
addr16
nop
enter
push
xor
jmp
fnstcw
xor
add
jecxz
jge
call
hlt
addr16
shrl
add
jl
cmc
pop
lea
mov
call
arpl
lods
mov
cmp
in
jge
cmp
xor
dec
dec
in
cwtl
stos
or
rcrb
in
pop
and
dec
xlat
xchg
sbb
mov
fistpll
mov
mov
sub
mov
adc
andb
out
mov
mov
lods
cltd
and
mov
sub
orl
jg
xchg
cmp
data16
xchg
loope
fdiv
add
add
test
inc
mov
loop
out
jae
pop
lret
mov
push
xchg
xchg
jns
aad
mov
mov
or
pop
arpl
adc
movsb
sbb
mov
fsubrp
sbb
add
sub
repz
dec
gs
dec
xchg
insl
rorl
ds
das
lods
mov
pop
inc
mov
frstor
push
add
xchg
push
mov
aad
lahf
or
mov
fidivl
das
enter
mov
mov
leave
inc
lods
outsl
ds
jno
xchg
insl
inc
or
fldt
xor
dec
inc
popa
out
mov
ja
mov
icebp
je
or
cmpsb
pop
shlb
add
movsb
inc
pop
cs
or
sub
adc
out
bound
iret
pop
sahf
lods
lods
or
aad
test
and
decl
bound
mov
mov
rorb
inc
add
in
xchg
push
cmpsl
dec
adc
test
xor
daa
add
lods
mov
dec
icebp
idivl
jmp
movsl
dec
add
addr16
aaa
cmp
cmp
sarl
sbb
jne
mov
fsubs
insb
sub
jns
jno
dec
xor
pushf
mov
cwtl
ljmp
jmp
mov
adc
pop
nop
mov
pop
jae
and
mov
push
das
fimuls
loopne
pop
lret
pop
repnz
cmpsb
cmpsb
jne
addr16
sti
push
popf
mov
leave
inc
cmpsl
out
out
cwtl
inc
mov
shll
mov
push
mov
fwait
xchg
test
xor
pop
scas
inc
add
shrl
xchg
ret
mov
lock
je
push
push
or
and
adc
js
idivl
sahf
xchg
cltd
cmc
and
and
gs
xor
ja
sub
add
inc
jb
jne
mov
lds
pop
orb
add
inc
pop
pop
jbe
adc
fcoms
push
test
je
outsl
fisubrs
sub
daa
in
popa
xchg
pop
push
pop
outsb
clc
mov
repz
std
mov
repnz
dec
inc
testl
in
lods
inc
js
jmp
push
and
loopne
fisubrl
push
popf
ret
repnz
push
test
testb
push
mov
pop
in
sbb
push
orl
mov
daa
inc
cmc
inc
cli
dec
lcall
mov
aaa
stos
dec
es
cmp
xor
pop
adc
subl
je
loopne
sbb
adc
out
cmp
cld
cltd
inc
out
stc
xchg
fidivrs
push
rcl
inc
fisttpl
repz
cmp
loop
rorb
mov
adc
cmp
sbb
pop
xchg
nop
xchg
cmp
or
in
push
in
pushf
imul
xchg
xor
ds
lahf
cli
rcll
fucomip
jnp
xor
and
gs
mov
scas
jnp
ret
xor
dec
push
scas
jp
pop
pop
lret
jle
sahf
mov
rcrl
fsts
xor
add
dec
test
shr
xchg
mov
dec
xor
in
scas
pop
insl
test
les
and
movsl
cmpsb
in
inc
xchg
add
nop
xlat
in
adc
push
out
xchg
dec
lods
je
and
and
adcb
or
bound
fcomps
pop
push
cli
jns
ss
mov
bound
lds
pop
mov
fucomip
fcmovb
xor
add
pop
dec
dec
loope
or
or
or
scas
adc
fdivrs
data16
xor
div
mov
xchg
push
fsub
jge
out
sbb
xchg
jnp
pop
sahf
arpl
xchg
sbb
push
ljmp
in
add
outsl
pop
repz
pop
cmp
xor
jb
imul
pop
pusha
adc
dec
mov
ds
jl
mov
sbb
sbb
fwait
in
adc
sub
dec
jp
clc
add
and
mov
aad
lret
cmp
xor
addr16
xchg
adc
jmp
insb
clc
xor
imul
repnz
and
adc
out
fcomps
les
mov
or
inc
daa
xlat
pop
xor
insl
mov
inc
dec
mov
mov
dec
int3
push
mov
jo
into
push
or
mov
jl
mov
sub
aas
sbbl
and
mov
cmp
out
fstpl
jbe
xor
fists
xor
test
cwtl
lods
push
push
fdivrl
cmpsl
jb
sub
fsubrp
fisttpll
and
sbb
jnp
sahf
sbb
mov
jl
mov
or
movsb
out
lea
mov
stos
out
aam
das
mov
movsl
shr
jne
jbe
pop
mov
aas
imul
test
adc
pop
adc
adc
jmp
pop
xor
rcrb
aam
or
and
adc
push
data16
addr16
stc
and
push
je
jno
je
mov
stos
jle
pop
scas
cli
into
adc
idivl
pop
out
inc
pop
inc
ret
jmp
or
sbb
jg
jmp
and
lcall
rol
pop
movsl
sub
adc
jmp
and
lods
lock
inc
adc
jno
dec
in
mov
imul
xchg
inc
stos
pushf
adc
ja
imul
sbb
and
jo
xchg
mov
fs
mov
fsubrp
jl
aas
adc
cmpl
mov
jns
fimuls
js
pop
adc
jno
setns
stos
movsb
clc
outsl
mov
ljmp
pop
jne
stos
lods
notl
jbe
movsb
cmp
rcrl
cmc
pop
movsl
cmp
dec
jle
mov
cmpsb
dec
pop
loopne
push
outsl
icebp
in
inc
sahf
push
lods
sbb
push
sub
lods
stc
ret
xlat
enter
xor
decb
call
adc
inc
leave
push
sub
and
cmc
xor
mov
insb
add
sub
push
out
test
fdivr
addr16
sbb
dec
sub
push
mov
push
push
push
out
push
inc
jle
in
add
pop
ljmp
adc
cmp
mov
lret
xchg
mov
xchg
cmp
fwait
lods
sub
cmpsl
jns
inc
outsb
cmpsl
jecxz
dec
pop
out
inc
jae
pop
mov
filds
pop
mov
dec
mov
out
sbb
std
inc
pop
cmc
push
or
stc
gs
pop
xchg
add
cpuid
into
mov
push
mov
sub
sub
test
or
lahf
jle
data16
arpl
pop
lret
mov
sbbb
dec
out
xchg
jbe
rcll
mov
fiaddl
data16
sub
test
sub
mov
push
or
push
dec
mov
push
outsl
dec
mov
xchg
sbb
push
imul
lock
sub
cmp
int3
ds
insb
cmp
adc
leave
aam
pop
enter
stos
fistpl
fadds
adc
add
mov
outsb
inc
lret
fucomp
push
rol
arpl
insb
mov
vorpd
pushf
cs
scas
jl
pop
jecxz
stos
cltd
pop
mov
sub
push
push
cwtl
pop
cld
pop
mov
inc
ss
out
out
gs
cmp
sub
pop
repnz
es
xchg
pop
push
popa
pop
cmp
cmp
pop
dec
adc
adc
add
sbb
icebp
adc
adc
std
inc
fdivl
sahf
xor
mov
ret
jp
push
nop
or
xchg
scas
lds
stos
icebp
cli
pushf
rcrl
jne
push
sbb
sbb
bound
push
int
divl
fisubs
lret
sub
pop
add
ljmp
into
mov
loopne
jno
clc
inc
cmp
mov
lock
add
dec
cli
jno
xchg
test
jmp
lods
push
cltd
loop
lock
mov
push
imulb
sti
es
inc
negl
rorb
mov
xchg
sub
loop
loopne
inc
mov
push
mov
xor
sub
sahf
loopne
sub
fprem1
inc
scas
xlat
push
pop
ret
dec
mov
cmp
add
sbb
jbe
cwtl
cmc
out
stos
and
std
add
out
pop
cwtl
and
or
icebp
cltd
rorb
push
mov
cld
cmp
outsb
gs
inc
push
xchg
dec
lock
pop
cmp
dec
iret
push
pop
inc
cmc
xchg
inc
idiv
add
aam
add
inc
sbb
subb
rol
loopne
mov
loope
jmp
inc
in
xchg
xchg
inc
jmp
sbbl
cmp
jns
or
lock
shlb
bound
xchg
data16
je
jecxz
scas
push
fnsave
xchg
imul
mov
dec
rol
sub
mov
jg
sbb
mov
jo
loopne
xchg
push
notw
imul
arpl
pop
aam
adcl
jp
jnp
mov
mov
pop
jg
es
adcl
dec
pop
mov
cmp
jge
inc
xor
fs
mov
pusha
pop
enter
lahf
clc
icebp
push
roll
mov
jne
dec
xchg
rcrl
cltd
rol
mov
xlat
aaa
mov
test
movsb
dec
jecxz
xchg
push
out
enter
mov
cmpl
adc
adc
or
pop
sub
loope
adcl
enter
xchg
ljmp
xchg
outsb
nop
into
enter
mov
shrl
pop
or
mov
add
divl
cld
push
lahf
or
pop
shll
jb
push
dec
sub
push
add
mov
callw
sbb
jno
outsl
loop
sbb
pop
mov
mov
pop
cmp
jne
icebp
mov
and
int3
jg
sahf
sub
inc
push
ds
xchg
out
movsl
xor
aad
out
test
xchg
ficoms
adc
or
sbb
popa
int3
loop
scas
adc
or
ljmp
add
push
inc
cmp
test
int3
jae
fwait
mov
cmpsb
imul
int
cmp
int3
inc
mov
ljmp
popf
out
xchg
mov
cwtl
movsb
xchg
mov
jle
cmp
inc
aaa
stos
aas
or
cli
cmc
aad
push
pop
push
xor
sahf
add
test
dec
jecxz
iret
clc
sub
mov
sbb
push
sub
outsb
nop
leave
popf
stc
push
pop
sbb
aas
adc
out
jecxz
xchg
adc
xorl
inc
fldenv
push
pop
scas
movsl
jne
push
xor
pop
or
xor
dec
cmpsl
jb
xchg
xlat
push
fdivl
add
xor
pusha
rcrb
stos
testl
je
sub
mov
adc
je
jmp
fistl
xchg
xor
inc
hlt
push
ja
push
push
mov
lea
adc
jae
pushf
xor
fiadds
jg
cmp
pop
mov
je
sub
xor
mov
or
xchg
dec
iret
xchg
mov
push
loope
cmp
in
xor
add
push
out
pusha
stos
sti
es
push
outsl
mov
add
and
cmp
pop
ljmp
xchg
out
pop
sar
sub
loopne
dec
and
mov
lock
adc
push
imul
pop
cmpsb
jmp
cli
inc
insb
jl
xchg
gs
ds
mov
mov
or
inc
mov
add
add
popa
movsb
shlb
es
movsl
arpl
adc
xchg
popa
adc
loopne
push
or
xchg
sbb
push
xchg
loope
or
call
adc
dec
fnstenv
xor
stos
int3
pop
mov
test
and
xor
mov
jns
mov
adc
pop
scas
adc
pop
popf
or
xor
cltd
scas
push
add
test
xor
in
aas
jge
stc
dec
push
sahf
dec
push
inc
xchg
out
xchg
sbb
int3
aaa
cmp
push
jbe
scas
sub
shrb
and
push
pop
xchg
lods
sub
daa
cmp
mov
roll
push
mov
sbb
xor
mov
lret
cltd
in
add
mov
fs
or
sbbl
and
mov
dec
sar
andl
nop
sub
mov
inc
jo
adc
ja
jp
add
push
or
push
adc
mov
cmp
push
rcrb
test
and
js
and
in
dec
loope
fstpt
movsb
in
std
aad
pop
imul
cmpsl
sub
pop
mov
mov
iret
push
movsb
xor
push
cltd
movsl
xchg
mov
inc
xchg
idivl
pop
cmpsb
movsl
dec
sub
dec
lret
and
xchg
out
daa
call
mov
repz
repz
fcmove
fwait
cs
scas
mov
cmpsl
stos
sbb
stos
insb
add
sub
xchg
data16
mov
enter
loope
orb
and
mov
mov
stc
mov
sub
cli
or
ja
mov
testb
movsb
jne
cmp
stos
mov
xchg
jmp
inc
jne
cmp
movsl
push
into
je
out
push
cmpsl
dec
dec
data16
add
mov
push
in
inc
push
fmull
mov
xchg
cmp
in
mov
cli
jecxz
rorb
outsb
adc
mov
setns
mov
lcall
pop
jae
aam
ret
out
jns
enter
scas
lahf
leave
sub
addr16
jne
dec
push
out
jns
cmp
adc
push
out
push
loopne
call
mov
jo
pop
out
push
pop
repnz
scas
cli
inc
mov
jmp
jmp
and
jle
popa
int3
and
je
js
jmp
pop
cmp
dec
popa
sbb
dec
add
sbb
hlt
dec
cmp
loope
jge
or
adc
sahf
jne
and
mov
jbe
je
aad
cs
pop
mov
loopne
sub
cld
ret
outsl
mov
ret
shl
adc
lods
sub
xchg
iret
cmovne
pop
fdiv
subl
in
dec
scas
ret
outsb
movsb
lods
pop
and
push
cld
lahf
xor
cltd
add
test
xor
lahf
lock
mov
fldl
inc
xor
scas
and
xchg
pop
lar
js
lods
mov
add
pop
js
pusha
stos
and
pushl
mov
xlat
jg
push
or
lds
dec
lcall
jne
loope
jge
ljmp
sbb
mov
add
jnp
out
mov
mov
sub
mov
scas
in
mov
cmpsb
mov
int
ds
pop
push
lcall
push
xor
add
jne
aam
push
popf
pop
jb
popa
xor
int3
les
xchg
ret
adc
ficoml
cmpb
roll
jg
gs
or
subl
pushl
xlat
and
out
sbb
xor
pop
jecxz
adc
mov
mov
lret
clc
aas
sbb
or
daa
inc
popa
sbb
sahf
xchg
adc
pop
xor
xor
pop
shrl
mov
cmp
mov
cmp
outsl
loop
in
dec
ret
loopne
mov
stos
adc
dec
mov
out
mov
outsl
cmp
mov
imul
add
sub
xchg
xor
mov
jnp
scas
and
out
pop
ret
test
cltd
insl
adc
xor
add
fnstenv
into
das
insb
pop
cmp
outsb
jg
les
jbe
outsl
push
xor
pop
lods
xchg
jns
mov
dec
add
filds
xchg
int
fwait
dec
in
rcl
jmp
loopne
dec
mov
jecxz
ja
xchg
test
popa
fnstsw
adc
jmp
shll
rcrb
cs
mov
add
push
scas
movsb
mov
mov
in
cmp
push
xchg
pushf
adc
int3
mov
cmp
insl
jo
cmp
sbb
outsb
rcll
pop
int
sub
in
fisubl
xchg
sub
insb
mov
rcl
sbb
add
loopne
cwtl
mov
mov
cmpsl
pop
cmp
cli
imul
jmp
js
popf
xor
jns
mov
push
scas
push
out
or
cmp
pushf
xchg
call
xchg
xchg
mov
sbb
push
int3
lret
push
pcmpeqw
xor
inc
stos
jle
mov
je
mov
adc
sar
push
mov
loopne
gs
push
mov
jg
imul
jl
in
push
jbe
out
lret
dec
xor
jmp
pextrw
pop
inc
es
mov
dec
jecxz
inc
enter
ret
push
in
pusha
dec
sub
rol
inc
sbb
pop
shll
push
in
sub
push
aam
push
stos
dec
dec
sahf
mov
cmp
sub
sub
cmc
adc
jle
pop
cmp
in
dec
and
sub
xchg
and
fildl
sti
es
and
add
push
pop
lcall
mov
or
aad
mov
lds
mov
add
jbe
outsl
push
sub
lea
cmp
rcr
out
hlt
in
sbb
shlb
addr16
cli
adc
cmp
mov
loope
sub
pop
cmpsl
lret
shr
inc
lea
push
repz
popf
stc
push
dec
decb
cmp
sti
out
xor
xchg
in
or
sub
pop
sbb
gs
sbb
mov
xchg
jecxz
int
lock
rorl
mov
lods
xor
sti
fnsave
dec
mov
add
pop
cmp
pusha
jp
push
imul
js
into
xor
inc
cmpl
fs
mov
dec
mov
jge
cmp
mov
push
jnp
andb
pusha
cmpb
dec
dec
sahf
iret
mov
cmpb
mov
pushf
pop
jnp
dec
xor
push
jg
sub
mov
mov
cmp
in
out
in
fimuls
mov
xlat
mov
push
inc
pusha
insl
or
adc
and
imul
fmuls
mov
das
xorb
or
pop
xchg
xor
leave
xor
out
xor
and
cmp
shr
add
mov
fucomip
lods
test
xchg
mov
sahf
lods
inc
mov
and
gs
pop
out
sub
dec
jbe
loop
flds
mov
jno
rorb
mov
mov
cmp
fisttpl
ret
repnz
jmp
mov
jp
lods
add
cmpsl
mov
sub
xchg
loop
dec
into
loope
ret
js
test
xchg
inc
pop
mov
dec
sbb
loop
ret
stc
xchg
scas
in
rorb
insl
push
lock
lock
mov
int
dec
std
lea
adc
add
jmp
jecxz
push
roll
int
stos
shl
lea
or
ljmp
adc
mov
cltd
outsb
rorb
or
movsl
int3
aad
fs
leave
sub
push
mov
shrl
pop
mov
movsb
mov
lahf
jge
xor
loope
std
psubw
sbb
push
scas
push
jnp
shl
or
push
push
sbb
xor
or
cli
mov
popf
jno
lods
and
jbe
mov
xlat
movb
and
and
add
sub
inc
test
pop
test
sub
jb
push
testb
adc
aad
cmp
andb
cmc
or
inc
test
aad
mov
pop
mov
bound
add
xor
not
sub
or
sbb
arpl
push
lret
mov
fisubrs
adc
roll
inc
dec
rorl
repnz
mov
sub
pop
push
inc
lret
sar
addl
cmp
jecxz
jo
aaa
testl
pop
add
sbb
push
jmp
call
or
mov
vpunpcklqdq
sbb
outsb
cmp
push
scas
inc
adc
sbb
incb
xchg
lahf
lret
lods
dec
lock
fld
movsb
repnz
cmp
xchg
ror
fwait
mov
repz
test
lret
data16
inc
outsb
xchg
inc
dec
mov
sub
lds
adc
add
lret
xchg
push
push
out
out
fisubrl
dec
fistps
push
scas
inc
insl
cmpsl
cmpl
jo
add
xor
and
mov
mov
fisubl
pop
jg
shrb
xor
std
jbe
movsl
xor
fadds
das
xchg
add
xor
mov
ss
data16
roll
xor
shlb
lods
mov
pop
jecxz
or
mov
clc
repnz
stos
iret
dec
in
sbb
cmc
rdmsr
pushf
xor
std
out
shll
cwtl
int3
js
int3
mov
out
pop
aad
mov
cmp
xchg
cmp
dec
pop
ret
mov
push
insl
sub
pop
jne
jl
add
stc
cmp
jecxz
in
das
sbb
sbb
aaa
add
pop
add
or
mov
inc
loopne
sub
repz
push
cmp
loope
cmpsl
xchg
hlt
pop
enter
frstors
addr16
lods
mov
dec
jne
adc
aaa
pop
adc
inc
xchg
scas
inc
inc
popf
fs
sbb
push
sbb
pop
lahf
outsl
ret
pop
dec
sub
fldcw
negl
lcall
pop
les
fbstp
xor
in
inc
lock
xchg
loope
fwait
sbbl
in
int3
xor
inc
jge
enter
xchg
mov
mov
int3
mov
jge
popa
aad
outsl
xor
pusha
imul
loopne
inc
push
push
cwtl
mov
xor
out
cld
hlt
jecxz
mov
fdivs
dec
data16
mov
lahf
sub
xchg
push
jae
out
call
adc
inc
faddl
pop
sti
ficoml
testb
repnz
imul
js
and
adc
or
repnz
mov
pushf
inc
inc
xchg
cmp
and
sbb
mov
loop
leave
ss
test
mov
inc
scas
jb
loopne
sbb
xchg
ficompl
mov
pop
divb
lds
mov
cmc
fcmovnbe
fsubrs
jb
lret
mov
xchg
lcall
mov
or
insl
add
sub
xchg
iret
jae
and
inc
lret
xchg
daa
ja
pusha
ret
scas
inc
int
xchg
adc
stc
mov
and
ja
inc
mov
rcl
jge
int3
jg
sub
test
addr16
leave
ret
add
or
dec
jmp
add
mov
push
push
stos
push
dec
int
push
xor
lea
mov
xor
test
ficoml
jp
out
xor
in
jl
mov
add
push
inc
and
ljmp
inc
popa
scas
dec
rcrb
xor
repz
xchg
pop
xchg
lret
cmp
pusha
jl
push
xor
rorl
iret
xchg
pop
ds
es
xor
insl
jo,pn
add
int
and
mov
lcall
daa
fisubl
inc
or
in
or
fstps
jle
xchg
mov
mov
call
aas
push
ret
inc
shlb
inc
lret
jl
cmp
jne
push
fdivl
cltd
fmulp
clc
cmpw
aam
repnz
jno
inc
or
xor
and
xchg
lret
inc
cli
int3
sbb
mov
cwtl
sub
add
into
out
test
adc
or
mov
ds
mov
shrb
daa
std
jg
sub
fisubrs
jg
sbb
pusha
cmpsb
inc
inc
int
cli
ljmp
and
les
or
and
inc
pop
add
ds
push
push
mov
mov
addr16
mov
fs
push
dec
xor
add
mov
and
pushf
mov
mov
unpckhps
jbe
pop
mov
push
fwait
cmpsl
inc
or
popf
mov
or
cmp
push
ljmp
lcall
jno
je
sarb
ljmp
mov
mov
add
adc
lods
inc
ss
sub
pop
lret
nop
pop
outsb
clc
jecxz
js
pushf
es
sub
xor
sbb
dec
inc
repnz
jno
das
pop
loop
pop
cmp
inc
jge
dec
notl
out
sbb
jne
jecxz
mov
add
inc
flds
sub
movl
pushf
push
fcompl
test
stos
mov
sub
mov
or
clc
cmp
and
inc
call
jae
and
push
loope
fiadds
push
std
dec
mov
in
arpl
jns
lret
mov
dec
xchg
sti
outsb
adc
insb
sub
xchg
pop
cmpsl
dec
and
mov
and
lea
adcb
arpl
movsl
xor
cwtl
jo
push
inc
scas
scas
ficoml
or
sbb
ss
in
idivl
sub
sbb
dec
fildll
nop
loop
cltd
shll
test
mov
outsb
pop
jecxz
mov
sbb
push
jmp
aaa
roll
inc
mov
aam
mov
lods
pop
aaa
adcb
inc
xchg
loope
lods
push
das
rclb
lods
pop
dec
mov
clc
loop
pushf
andb
or
mov
add
jl
imul
lock
pop
or
loopne
insl
push
ret
or
insl
push
mov
inc
testb
dec
push
sbb
inc
test
int3
sub
outsl
movsb
adc
ret
icebp
cmc
sbb
test
mov
sbb
shr
sub
in
mov
push
pavgw
lods
inc
sub
dec
inc
mulb
iret
xchg
xorl
rclb
mov
lock
push
sub
or
xchg
dec
outsb
xchg
cmp
loopne
test
je
repnz
fmuls
mov
scas
loope
jmp
fistps
dec
mov
inc
mov
mov
ret
in
pop
jl
ds
and
mov
adc
dec
push
mov
les
hlt
cmc
or
mov
cmpsb
jp
push
mov
sub
sub
rcrl
push
pusha
xor
fcoms
xor
cli
into
and
lret
pop
lock
sbb
jp
mov
dec
outsl
into
in
cld
xor
xchg
sbb
nop
ds
movsl
cmp
ljmp
lock
scas
jmp
or
pop
dec
mov
sbbb
aad
jmp
or
jno
adc
cs
pop
cmp
adc
ja
inc
cmp
cwtl
loope
out
roll
and
bound
jp
mov
ss
pop
arpl
arpl
jecxz
jo
cltd
sar
pop
in
hlt
dec
ret
xchg
mov
cmpsb
aas
add
popf
ljmp
jo
push
cs
push
xlat
ds
outsb
loop
and
push
dec
mov
add
adc
and
adc
movsl
pop
fs
jo
aas
or
sub
imul
stc
sub
loopne
pusha
fcom
cmp
sub
xor
mov
xorl
push
mov
js
push
jecxz
push
decl
mov
scas
mov
clc
jb
outsb
ljmp
outsl
dec
mov
jb
inc
popf
mov
out
lds
pop
push
mov
out
outsl
cmp
shrl
adc
ret
push
ja
jl
in
mov
xchg
cmp
push
lock
dec
mov
mov
in
repnz
cmp
jno
jbe
jmp
add
mov
hlt
test
jl
mov
pop
sbb
cmp
outsl
lea
and
sub
sahf
xor
dec
jnp
dec
or
out
lods
loope
mov
cmp
xor
loope
movsb
push
loopne
cmp
xchg
mov
sub
xchg
add
shr
iret
pop
test
mov
data16
adc
pop
test
mov
das
cmp
lods
cmp
mov
incl
pop
enter
dec
test
sbbl
out
cmpsb
jns
inc
xor
jae
push
and
xchg
dec
outsb
dec
sub
sbbb
bound
cmp
lret
call
orl
loopne
movsl
mov
add
jae
cmp
push
jmp
movsb
loop
push
loopnew
mov
adc
xchg
test
cmp
and
movsb
cmp
adc
leave
das
rclb
sbbl
imul
das
dec
xchg
fidivs
aas
fidivs
xchg
mov
add
jb
or
cwtl
sbb
pop
xchg
inc
xor
dec
push
sbb
stc
shrl
int3
push
cmp
pushf
movsl
cmp
sti
mov
cmp
adc
enter
inc
sub
push
lea
popa
xor
in
dec
cmpsl
sub
mov
stc
test
cmp
dec
inc
push
add
adc
push
and
fnstsw
push
or
mov
mov
xchg
inc
clc
setge
test
js
arpl
xchg
scas
push
inc
sbbl
lret
popf
int3
test
add
imul
out
sub
test
pop
xchg
in
xchg
xor
sbb
push
repnz
scas
addb
sub
adc
cwtl
std
inc
stos
imul
mov
mov
dec
push
dec
and
and
push
outsl
jmp
push
add
ljmp
adc
insl
std
imul
jp
xchg
xchg
shl
mov
lret
xor
bound
pop
pop
mov
xor
mov
adc
dec
dec
test
dec
out
popf
pop
xor
in
cs
or
aad
and
jb
std
insl
iret
cs
aaa
jb
jecxz
xor
push
leave
pop
insb
pop
xchg
dec
pop
push
pop
ret
mov
inc
mov
cmpsb
cmp
add
inc
scas
jnp
loopne
xorb
and
sbb
pop
mov
test
cld
push
adc
cmp
daa
int3
push
dec
mov
jl
fistpll
xchg
cmp
cwtl
mov
xor
daa
mov
xor
mov
add
lods
jb
sub
mov
fs
dec
aad
pusha
lret
rol
mov
arpl
movsl
jno
fwait
movsb
repnz
call
rorb
push
loopne
shlb
fadds
sub
das
jne
sarb
int
shl
outsb
push
fld
inc
sub
subb
pusha
int
adc
enter
je
in
add
stos
shr
aam
inc
pop
mov
pop
add
out
pusha
sbb
inc
cwtl
scas
jmp
jmp
icebp
inc
iret
xchg
out
xchg
and
push
insl
test
cmp
or
into
popf
cmp
nop
push
cwtl
sarl
iret
push
push
mov
and
pop
into
push
add
lea
in
les
or
mov
test
cmp
mov
stos
jnp
roll
clc
in
pop
sbb
lret
movsb
pop
repz
jp
cmp
pop
sub
mov
sbb
push
into
ja
mov
pop
and
fidivrs
dec
das
ret
mov
xchg
sub
or
daa
daa
jbe
dec
xor
movb
and
mov
jns
pusha
ss
xor
add
les
test
andb
jle
jmp
push
add
fstpt
outsl
pusha
mov
mov
sub
jbe
cmp
movsb
mov
dec
cmp
push
jne
xchg
or
orb
cltd
push
arpl
mov
pop
mov
stc
imul
push
out
pop
mov
mov
stos
jno
daa
sbb
jno
inc
and
xchg
js
ret
rcrb
mov
dec
es
data16
fcomps
mov
scas
insl
mov
xchg
outsb
leave
outsl
sbb
dec
lods
aas
mov
dec
sbb
cmc
mov
pushf
xor
xor
mov
sahf
sbb
xchg
xchg
pushf
testl
add
inc
test
add
addb
rcr
addl
out
sahf
mov
push
inc
adc
jns
sbb
adc
pop
mov
stos
daa
imulb
outsb
adc
andl
push
les
cld
and
rorl
cmp
push
mov
adc
imul
mov
popf
mov
fisubl
jno
not
ficomps
fimuls
hlt
mov
push
sub
addl
cld
pop
lret
xor
mov
xchg
jb
add
sbb
add
das
xor
jno
or
insl
jnp
inc
sbb
xchg
jnp
repnz
scas
sub
ja
mov
jno
lret
push
xor
lret
test
clc
mov
push
gs
repnz
pop
cs
inc
adc
mov
stos
cmp
lcall
cmpsb
mov
popa
add
jmp
pusha
xor
data16
decb
push
jae
push
dec
fadds
add
pop
fadds
mov
mov
cwtl
jnp
shll
mov
pusha
jnp
push
xor
pop
push
shr
sub
pop
add
and
adc
and
clc
adc
add
push
jl
xor
push
jmp
and
mov
arpl
mov
fwait
push
lds
sahf
pop
mov
inc
jge
sbb
mov
enter
mov
mov
out
sbb
mov
mov
movsb
mov
cltd
bound
loopne
xchg
bnd
and
aad
pop
push
jbe
mov
pop
pusha
add
xchg
fstl
add
inc
jmp
ja
push
pushl
jp
ss
push
out
or
xchg
sub
mov
popf
test
adc
dec
movsl
js
mov
xchg
xor
lods
movsl
ret
mov
inc
fmul
jns
pop
stos
ret
arpl
test
sbb
push
mov
cmp
pop
pop
dec
pusha
cli
mov
dec
jecxz
sbb
and
dec
fimuls
lahf
ss
iret
in
push
test
int
je
jmp
fmull
in
mov
aad
cmp
add
icebp
fstl
call
out
jne
test
push
jb
push
jae
sub
pop
insb
dec
cmc
dec
mov
or
imul
xor
jmp
sub
aad
cmp
fdivrl
pushf
jo
test
xlat
sub
add
bound
fisubs
lret
rcll
xchg
lret
jb
popa
hlt
je
scas
push
pusha
inc
sbbl
cmp
fnstenv
mov
nop
lods
fs
sbb
arpl
fistps
cmp
jno
mov
cmpsl
mov
stos
bound
in
cmp
test
call
stos
push
push
data16
push
xchg
mov
test
leave
movsb
in
or
jo
xor
mov
cmp
jb
rclb
pop
nop
into
mov
dec
jp
mov
scas
xchg
pop
xchg
and
lock
dec
jb
mov
mov
sub
test
mov
xchg
es
mov
imul
lds
scas
sti
sbb
mov
leave
sbb
cli
and
fists
dec
inc
js
add
fdivl
jbe
xlat
pop
mov
std
ljmp
dec
jnp
sub
sbb
ljmp
insb
rolb
pop
stc
pop
xchg
mov
repnz
push
adcl
repnz
jge
mov
movsl
mov
inc
fldl
xchg
cmp
adc
jnp
in
or
xchg
mov
jmp
cmpl
cmpsb
or
cltd
adc
push
roll
pop
cli
stc
xlat
pop
mov
xlat
mov
or
mov
ret
das
vpunpcklbw
aad
imul
mov
idivl
or
sarb
jge
sbb
xlat
cltd
stos
inc
cwtl
push
xchg
lock
popa
add
sbb
int3
imul
mov
add
cmpsl
add
pop
test
out
andb
rolb
jbe
lret
dec
fwait
xchg
inc
into
mov
dec
insl
popf
popa
sbb
jl
xchg
lret
xor
mov
shlb
cmp
inc
les
fiadds
pop
lret
not
leave
int
sub
ds
lret
adcl
or
insb
push
ljmp
or
cs
dec
cld
inc
jnp
lods
faddl
fwait
xor
testl
mov
movsb
imull
out
popf
mov
xchg
dec
stos
jl
adc
and
sti
test
fisttpl
add
shlb
jae
divl
dec
adc
jae
sub
scas
lcall
test
mov
pop
testb
dec
gs
in
cli
pushf
inc
xchg
int
lcall
push
mov
mov
inc
push
ss
mov
enter
jle
inc
cmp
inc
jecxz
outsl
dec
les
mov
cmpsb
mov
or
fisubrl
sub
lock
cmp
jmp
sbb
mov
inc
int3
popa
ja
aaa
popa
test
ja
inc
pop
mov
outsl
and
imul
xchg
movsb
mov
addr16
sbbl
scas
lret
call
sub
cmpsb
fsubs
xor
int3
insl
xchg
mov
xlat
and
enter
and
push
push
mulb
icebp
jp
jl
fwait
mov
lods
adc
pop
insb
aaa
ja
repz
xor
out
jge
aaa
dec
adc
jg
push
dec
stos
popa
push
cmpsb
fxch
fucomi
mov
push
cmp
adc
adc
ljmp
ret
popa
lret
popa
icebp
inc
jae
in
push
lea
push
sub
out
mov
pop
clc
mov
dec
lds
pusha
mov
push
pop
repnz
xor
xchg
mov
dec
push
or
pushf
clc
mov
arpl
fcoms
loope
adc
dec
sbb
out
add
mov
aam
mov
orb
xor
insl
xor
data16
pop
jo
mov
push
call
cmp
dec
lahf
aad
out
dec
xor
aad
add
adc
xchg
scas
orb
cmp
push
mov
and
ljmp
or
fbstp
sbb
iret
jle
mov
scas
sub
sub
adc
imul
mov
subl
lods
sub
ljmp
rol
nop
adc
rcrl
xor
dec
fldenv
test
mov
xor
shrl
dec
add
dec
lcall
in
push
out
into
dec
xchg
dec
pop
ds
mov
dec
rorl
iret
imul
jno
pop
lret
xlat
inc
stos
mov
sub
or
repnz
cmc
xor
and
push
mov
cmp
movsb
jl
dec
push
cmp
mov
out
scas
sti
pop
pop
cmp
jg
mov
rcl
sbbb
jnp
mov
xchg
mov
jmp
add
sbb
sarb
mov
ss
sbb
push
push
inc
pop
loopne
xchg
jns
and
push
push
push
jmp
jl
hlt
lds
out
subps
movsb
fildll
sbb
mov
dec
scas
sahf
aam
imul
cmp
cmp
aam
cli
insl
adc
push
mov
adcl
fstl
sub
or
in
mov
sbb
jecxz
mov
add
iret
inc
stos
out
inc
gs
inc
xchg
push
push
lcall
dec
mov
sub
in
mov
es
pop
push
mov
lret
inc
lds
sti
ljmp
fdivrp
or
subb
xchg
sub
and
push
clc
into
sbb
jg
sahf
orb
add
push
test
sub
xchg
fiaddl
cmp
jae
jo
cld
jno
jg
fimuls
in
lods
fsubrs
fidivl
imul
movsb
mov
test
jmp
int
mov
push
mov
inc
fsubs
rcrl
js
adc
jge
ds
pop
jp
or
or
xor
inc
mov
int
jmp
xchg
loopne
xchg
in
or
pusha
mov
pusha
es
sbb
dec
push
pusha
cmp
inc
out
cwtl
in
sub
cmp
popa
inc
mov
mov
sub
incb
ret
ljmp
fwait
les
cmp
addb
push
add
pop
lcall
aam
sub
lahf
xchg
xor
xor
pop
jbe
pop
push
xor
aad
call
lahf
test
loope
cli
andl
pop
fldt
cmc
dec
mov
jle
into
imul
mov
add
nop
les
ret
je,pt
and
cltd
cmc
shr
and
rcll
or
movsl
ja
xor
fucomp
test
popa
jge
je
scas
test
sub
jne
pop
ja
jae
add
popf
scas
or
mov
mov
cmp
scas
sbbb
adc
ret
adc
movsb
adcb
and
fildll
pop
jae
orb
jns
popa
and
add
scas
pop
xor
loope
andb
jle
jl
push
dec
mov
jno
pop
imul
jp
add
addl
lods
sbb
cwtl
inc
test
popf
scas
leave
jbe
lret
lock
popa
cmp
leave
xchg
jns
mov
ja
cld
cld
dec
ja
loopne
adc
je
mov
sub
jp
and
outsl
jg
mov
dec
sbbl
and
inc
fdivl
sbb
mov
repz
popf
call
jbe
stos
mov
push
and
or
nop
insl
mov
pop
cmp
mov
repnz
inc
je
adc
cmpsl
cld
int3
lret
fistl
ja,pn
xchg
int3
lea
add
sbb
inc
or
es
mov
gs
icebp
lods
test
cmpsl
mov
or
leave
mov
outsb
pop
int3
rcrb
mov
mov
mov
inc
jne
stc
das
ficompl
mov
push
hlt
or
cwtl
test
jmp
dec
xchg
dec
inc
mov
jbe
sbbl
jecxz
test
loopne
sub
mov
dec
pop
mov
adc
pusha
aad
push
adc
adc
cli
mov
dec
arpl
iret
xchg
inc
bndldx
push
add
test
lret
iret
pop
lods
xchg
in
pop
sub
lahf
sub
je
mov
xchg
mov
inc
xor
sahf
loopne
ret
xchg
sub
ret
jle
mov
aas
lahf
popf
xor
mov
mov
sub
in
testb
adc
cld
xchg
xchg
lret
stc
call
jbe
sti
andb
pushf
mov
dec
add
sub
aaa
out
xor
mov
add
ss
push
fnstenv
leave
or
es
sbb
and
repnz
in
push
or
jg
ret
push
fsub
sub
ret
sbb
shrb
iret
data16
sbb
in
push
inc
cmc
adc
adc
mov
test
push
inc
sbb
mov
sub
cli
test
cltd
mov
mov
enter
out
inc
inc
pop
andl
stos
inc
sbb
mov
arpl
jge
xchg
testb
jp
inc
in
pop
cltd
push
outsl
aad
dec
inc
arpl
push
in
fisttpll
outsl
cli
shlb
inc
loopne
lock
testb
popa
rcr
mov
mov
sub
cmpsb
stos
sbb
push
mov
push
pop
jp
cmp
out
push
add
cmp
test
jge
jae
inc
addr16
mov
addr16
addb
adc
repz
pop
jg
popf
loop
in
test
sti
test
cwtl
aam
cld
adc
push
ja
pop
jnp
lods
xorb
cmp
shlb
or
add
jmp
ret
xor
popf
stc
cwtl
fsubrs
std
pop
daa
or
aam
adc
jmp
jecxz
xor
aam
loope
stos
ret
xor
sub
inc
mov
cmp
mov
mov
into
insb
cmp
mov
xchg
fwait
pop
xchg
dec
pusha
and
mov
imul
dec
pop
jbe
mov
out
pop
xor
cmp
es
out
sbb
outsb
in
outsb
adc
mov
pop
jg
in
fdivs
push
jecxz
jle
popf
xchg
fprem
imul
imul
pop
xor
dec
xchg
adc
pop
push
or
sbb
xchg
or
repz
and
cmp
inc
das
lea
fstps
mov
test
movq
je
ss
jg
push
call
jp
ljmp
adc
lret
dec
jp
dec
and
pop
jnp
and
clc
imul
push
push
mov
mov
push
fnsave
push
into
inc
je
xor
std
js
addr16
cmp
mov
sub
lea
test
jne
lret
xchg
mov
in
adc
jno
insl
lock
out
xcrypt-ecb
cmpsl
dec
jae
insl
cld
call
dec
push
fsubl
mov
sarl
mov
mov
dec
adc
push
pop
stos
push
ds
cwtl
das
sbb
pop
hlt
add
xchg
pop
xchg
call
xor
and
adcl
dec
mov
aaa
je
adc
pop
inc
mov
nop
icebp
fbld
adc
sahf
xor
in
and
pushf
es
push
lock
stos
xchg
enter
sub
mov
dec
sbb
scas
loopne
push
and
nop
popf
sti
in
lds
sbb
aad
and
pop
fmulp
aam
rorl
pop
out
push
mov
jbe
add
push
jo
js
and
push
xchg
test
out
loope
and
outsl
jp
lcall
movsl
add
loopne
clc
adc
adc
cmp
pop
adc
push
mov
imul
pop
lods
rolb
les
add
or
xchg
or
mov
sbb
sub
out
xchg
sbb
std
lcall
fwait
adc
and
jbe
add
adc
inc
shll
xchg
hlt
xchg
es
fadd
xchg
into
movsl
push
lock
push
std
and
test
dec
dec
mov
pop
jno
sbb
iret
xchg
sarb
mov
sub
adc
jne
sahf
cmp
das
test
push
mov
cmpsb
leave
inc
and
xchg
mov
dec
loop
and
dec
cli
xchg
sbb
lret
cli
icebp
xor
mov
sbb
dec
jl
ret
cmp
faddl
loopne
arpl
jnp
push
lods
xchg
add
cmp
jae
inc
push
and
push
ljmp
popf
mulb
pop
adc
xor
mov
add
lret
fbld
jnp
sub
das
cli
int
dec
mov
mov
mov
pushfw
data16
mov
dec
and
or
insb
mov
xor
push
and
lods
sub
inc
xchg
mov
repnz
fs
jp
adc
in
adcl
cmp
idivb
jge
test
add
xchg
int3
pop
mov
lock
call
sub
int3
test
jne
mov
push
jae
in
adc
pop
mov
jne
inc
mov
ja
mov
ds
scas
shll
jmp
fstpt
js
mov
bound
rclb
push
pop
fsubrs
mov
sbb
cmpsl
push
xchg
and
movsb
inc
loopne
mov
enter
or
test
shrb
mov
mov
insb
jecxz,pt
repnz
add
xchg
ret
roll
arpl
xchg
or
pop
mov
bound
vrcpps
outsl
sbb
fsubr
add
mov
rol
es
outsl
fcoms
or
mov
and
insl
mov
jne
lahf
jecxz
jl
or
and
sub
jmp
cmp
repnz
cwtl
ljmp
pushf
test
pop
mov
cmp
test
test
leave
mov
adc
lret
push
pop
mov
int3
stos
stc
fsubl
cmp
leave
int
fildll
cmp
push
inc
test
dec
inc
fidivs
push
jno
fsub
mov
int3
jnp
mov
aam
test
cli
test
mov
popf
int3
out
sbb
push
mov
fistps
fisubrs
sbb
int
out
mov
mov
jbe
dec
push
xchg
sbb
pop
lret
cmp
frstor
pushf
pop
repz
sbb
jg,pn
pop
movsb
cwtl
mov
inc
lcall
and
xchg
cmc
mov
je
inc
mov
testl
add
loope
test
daa
lods
jmp
add
pop
xor
arpl
xor
and
inc
dec
and
mov
mov
ds
and
cmp
dec
mov
sub
jo
repz
mov
xchg
sub
jae
and
xor
or
adc
or
cld
push
stos
in
int3
mov
call
pusha
push
mov
movsb
es
repnz
cwtl
xorb
sbb
dec
xchg
xlat
add
mov
pop
and
push
jge
jae
fstpt
jo
jae
int
cli
mov
fistl
leave
jg
pusha
into
popf
mov
pop
ja
icebp
leave
dec
stos
xor
lret
push
jno
aad
mov
movsb
out
push
hlt
inc
test
add
pop
pop
dec
sub
sbbl
decl
fcomps
aaa
cltd
add
fxch
divb
pop
sbb
and
or
mov
iret
push
outsb
xor
sti
rorl
fstp
jmp
cli
test
stos
lods
cmp
out
repnz
xor
xchg
push
push
test
nop
add
jae
xchg
scas
cmovs
loopne
adc
and
in
scas
xor
fdivrs
mov
jle
push
mov
repnz
push
cltd
pop
jne
xchg
push
cmpsl
dec
push
inc
adc
xchg
add
mov
das
cltd
mov
pop
inc
push
ljmp
nop
mov
dec
sub
mov
pop
mov
clc
mov
rcr
mov
fldcw
lods
xchg
out
stos
in
addl
mov
fcomp
imul
and
jp
mov
xor
ljmp
xchg
hlt
cltd
stos
scas
mov
test
dec
push
xor
or
out
ss
inc
mov
es
insl
sbb
xchg
sbb
test
jp
push
int
cmp
icebp
push
imul
cmpsl
lods
int3
xchg
xor
lret
into
dec
adc
or
dec
pop
out
cltd
rcl
in
gs
cmp
jp
dec
sub
lret
jge
mov
lcall
repnz
or
xchg
pushf
out
sbb
aam
imul
fnstenv
icebp
movsl
stc
push
xchg
push
xchg
loope
lahf
pop
sbb
in
clc
addb
pop
dec
xchg
aaa
sbb
mov
dec
hlt
adc
xchg
dec
aam
sub
push
jno
not
or
lds
test
imul
add
adc
adc
lods
clc
pop
shlb
test
push
add
mov
rcrl
mov
push
adc
cmp
pop
xor
jae
dec
loop
in
or
pushf
cmp
pop
insl
scas
das
ret
bound
adc
jmp
out
xchg
pop
or
or
clc
cmp
mov
test
ljmp
jl
les
inc
jle
lods
adc
and
test
std
ds
aam
divl
or
inc
ret
mov
lcall
ja
and
test
or
jo
test
aam
sbb
jnp
ljmp
inc
or
push
and
pusha
pop
jp
add
insb
popf
sbb
sbb
lea
push
push
pushf
push
nop
cmp
shl
test
idivb
stc
sahf
adc
mov
setne
pop
pop
imul
out
rorl
aas
push
mov
sbb
outsb
sub
mov
pop
jecxz
adc
gs
ficoms
lea
iret
fidivl
xchg
xchg
pop
int3
clc
outsl
out
sub
mov
mov
sbbl
jmp
imul
add
fistpll
pop
lock
pop
sahf
push
pop
cmpsb
push
fimuls
lret
sub
cmc
jns
daa
adc
in
popa
or
nop
xor
xchg
inc
adc
orb
mov
jbe
pop
pop
sub
xchg
push
clc
faddp
xchg
sub
incl
gs
lret
push
imul
cltd
movsl
outsl
shl
xchg
repnz
mov
ficoml
dec
cmpl
push
shrl
mov
icebp
mov
mov
sub
mov
pop
or
mov
push
shll
xchg
int
xor
dec
in
fcomi
mov
cmc
imul
adc
popf
xchg
jne
ret
jle
imul
xor
adc
and
pop
stos
cmp
data16
cmpsl
cltd
xor
adc
inc
cli
mov
sub
cmp
push
xlat
gs
pop
cmc
add
out
int
jl
push
out
xor
aas
pop
mov
loope
loopne
fs
lret
pop
outsl
fstps
xor
fistps
cmp
adc
popf
xor
hlt
and
xlat
movsl
icebp
mov
ss
icebp
outsl
cmp
and
xacquire
rorl
and
lds
cmp
std
addr16
dec
inc
adc
adc
add
ficoml
mov
repnz
push
cmc
call
or
cltd
pushf
jne
in
lret
adc
jp
jo
cmp
jg
inc
dec
fdivs
fwait
out
xchg
ret
cmpsb
out
jmp
int3
fdivs
je
and
pushf
lods
arpl
mov
adc
les
test
jo
lods
mov
ret
repz
mov
push
adc
sbbl
and
dec
push
ja
mov
aas
adc
xlat
inc
pop
pop
scas
leave
out
cmc
pop
jmp
lret
sbb
mov
mov
mov
cmp
sbb
repnz
and
sbbl
aaa
clc
mov
inc
or
dec
sbb
call
mov
rcl
lds
mov
loopne
pushf
jns
adc
cmp
shl
cmp
cmp
iret
or
dec
and
sub
add
lea
mov
insl
pushf
std
enter
dec
pusha
sub
ficoml
repnz
mov
test
sahf
popf
cmp
popa
cmc
sub
xor
mov
add
scas
iret
outsb
or
jp
das
popa
mov
add
lea
fwait
cli
bound
inc
in
cltd
test
push
loope
mov
mov
add
push
dec
pusha
ds
and
stos
mov
fwait
cmpsl
pop
out
mov
outsb
jns
jo
jle
lahf
adcl
mov
adc
push
aad
pop
xor
jecxz
inc
sbb
mov
cmc
jae
nop
icebp
pop
pushf
out
pop
jecxz
in
cmp
dec
nop
cmpsb
jp
stos
xchg
adc
aas
dec
mov
or
dec
pop
stos
xchg
ja
pop
pushf
test
pop
cmp
shlb
div
loopne
sub
jle
aam
jecxz
sahf
mov
jg
test
jns
and
dec
iret
jecxz
call
xchg
cmp
sbb
dec
or
out
mov
arpl
xor
inc
push
mov
add
pusha
pop
stos
inc
enter
popa
xor
outsl
daa
popa
xchg
cli
and
add
mov
ss
mov
xlat
stos
push
lods
push
xor
fcmovnbe
mov
orl
add
sbb
push
je
les
sbb
jecxz
pop
or
adc
in
jne
and
push
test
pop
or
sahf
cs
adc
lret
cmp
fwait
clc
pop
out
dec
or
adc
std
sti
mov
mov
fiaddl
testl
dec
or
sarl
lea
ja
sub
and
in
inc
int
xchg
into
jb
das
dec
loop
test
pop
mov
and
and
dec
hlt
into
dec
lods
or
sbbl
and
mov
mov
not
imul
loope
movsb
push
mov
mov
pusha
dec
in
roll
or
lahf
xchg
or
sbbl
jb
pop
pop
jecxz
jae
test
mov
xor
movsl
cmp
int3
cld
popl
ret
cmpsb
popa
lods
push
jno
into
icebp
aam
addb
mov
inc
iret
lret
inc
sbb
fwait
lcall
adc
shrl
and
and
movsb
pop
jae
rclb
movsb
int
arpl
das
sub
xorl
out
jl
cmp
mulb
je
ds
push
mov
mov
sarl
ds
rep
pop
out
popf
in
mov
mov
imul
gs
inc
xor
les
adc
imul
lcall
dec
lods
and
jle
xor
push
mov
dec
cmp
test
ret
sahf
or
add
inc
insb
sahf
and
inc
cltd
fwait
sbb
push
frstor
arpl
xor
test
xor
rcrl
push
sub
xchg
adc
ret
fimuls
add
stc
dec
sub
xchg
mov
icebp
nop
jle
xor
sub
outsl
push
aam
test
addr16
mov
sbb
shll
test
pusha
enter
sub
out
mov
inc
cmp
cmp
pushf
jmp
mov
mov
push
mov
dec
cmp
xchg
fwait
or
lods
inc
adc
xchg
push
fnstenv
mov
lcall
dec
test
adc
clc
inc
inc
icebp
enter
or
pop
inc
cltd
int
mov
mov
add
loopne
movsb
addr16
xchg
jo
xchg
dec
arpl
xchg
mov
push
adc
cmp
sub
adc
ds
mov
fsubrp
stos
loop
sub
mov
insl
adc
notb
loopne
movsl
adc
mov
mov
cmp
insl
adc
and
inc
hlt
mov
push
sbb
xor
pop
scas
mov
push
shlb
mov
jns
jnp
loop
mov
aam
adc
shll
cltd
les
sub
shr
ss
test
pop
addr16
mov
into
sbb
mov
dec
and
pop
cs
jle
arpl
imul
js
adc
idivb
lcall
and
push
out
sets
mov
push
mov
cli
jbe
in
aam
gs
lea
adc
movsl
mov
das
sbb
rcrl
sub
sbb
ret
loope
push
jg
mov
idiv
mov
or
push
inc
mov
mov
add
leave
mov
lahf
cltd
aaa
sbb
xor
sub
or
bound
cmp
or
cmp
xchg
mov
xchg
mov
sub
jge
sbbl
mov
mov
addr16
rolb
fcompl
movsl
xchg
mov
cmc
cmp
psubusb
shlb
mov
dec
sub
test
testb
inc
imul
push
xchg
add
lods
xchg
out
and
icebp
xchg
test
jmp
xor
aam
in
mov
mov
call
fs
mov
jne
sub
or
imul
lods
shll
lods
jmp
sbb
icebp
jno
mov
dec
sahf
stos
pop
hlt
jae
shl
cmp
pop
dec
pop
es
jne
inc
data16
inc
movsb
das
or
pop
mov
and
repz
inc
and
inc
fsubr
bound
inc
scas
xchg
sub
jecxz
push
mov
lret
xchg
add
pop
stc
mov
pop
mov
gs
loope
sub
sbb
push
sub
bound
add
ja
mov
jbe
sbbl
out
fisubl
sbbl
jle
sub
sbb
xor
insb
jae
adc
jns
and
and
aad
xor
add
aam
ds
mov
out
mov
xor
or
js
mov
xor
push
jg
mov
out
iret
inc
push
inc
adc
neg
popf
xor
loope
inc
push
popa
mov
arpl
rcr
iret
mov
ljmp
lods
cwtl
push
adc
imul
lock
cmpsl
sbb
arpl
jne
xor
dec
jecxz
test
jle
mov
push
popa
notl
mov
bound
dec
es
cmpsl
sub
shr
sub
dec
fidivrl
cmp
pop
int
call
cmp
out
gs
inc
mov
pop
scas
mov
repnz
adc
movsb
inc
mov
push
push
jg
xor
dec
push
outsb
add
lahf
pusha
frstor
popf
or
add
xchg
pop
cs
test
ljmp
mov
or
pop
push
jo
dec
cmp
add
pop
imul
mov
push
pop
add
jp
andl
call
or
mov
repnz
jp
jae
jl
pop
scas
outsb
add
or
cli
mov
lds
popf
pop
daa
xlat
cli
sar
repz
hlt
jae
es
adc
imul
cli
orb
jnp
inc
sbb
pusha
mov
out
and
add
or
aam
fisttpll
mov
add
xchg
inc
packssdw
popf
gs
mov
jg
call
push
mov
cltd
hlt
mov
dec
and
scas
push
jae
in
or
in
cmp
aad
imul
loope
push
jmp
imul
or
jmp
jnp
lock
add
jp
pop
sub
xlat
and
inc
cmp
sahf
sub
pop
test
xchg
inc
and
sub
pushf
hlt
cltd
rclb
pop
jo
mov
adcb
jecxz
aas
lea
xor
add
and
mov
dec
mov
das
mov
adc
lea
mov
inc
cltd
mov
test
inc
mov
in
dec
into
loopne
dec
add
int3
xor
movsb
clc
inc
sbb
stos
arpl
out
outsl
adc
ret
enter
pop
sub
movsb
xor
mov
sti
mov
mov
sbb
adc
add
xchg
cltd
and
xchg
pushf
xor
scas
fdivrs
test
lret
xchg
loope
ss
rorl
dec
hlt
movsl
loope
xlat
add
aam
jp
fdiv
imul
sbb
call
insb
fnstenv
call
pop
sbb
dec
jle
jmp
scas
cmp
push
nop
daa
movsl
mov
loop
scas
mov
adc
not
xor
xchg
movsl
mov
test
push
dec
ljmp
xor
lret
sti
lods
cld
xchg
in
mov
mov
fxch
testb
pop
ret
mov
xchg
xchg
iret
out
out
jp
pop
gs
add
daa
mov
push
outsl
fwait
loop
add
jg
sub
mov
daa
sbb
shll
sbb
xlat
idiv
jb
sub
imulb
mov
mov
xchg
pop
imul
cmpsb
pop
mov
pop
sahf
mov
insl
sbb
mov
inc
lods
imul
inc
add
xchg
and
data16
jbe
and
flds
out
dec
adc
xor
fists
sbb
inc
out
cmp
mov
dec
out
out
sbb
aam
div
jle
in
out
cwtl
test
out
xchg
lcall
div
xor
sbb
cltd
jmp
std
xchg
in
and
andl
sbb
sarl
outsb
loop
sbb
dec
loop
in
mov
sbb
add
loope
mov
cmp
insl
push
lods
pop
pop
call
rorb
sbb
not
movsb
testl
fdivp
sub
adc
shll
pop
push
add
and
inc
jno
pop
cmc
scas
adc
and
cld
xor
js
mov
inc
sbb
pop
lods
mov
inc
aas
mov
mov
sub
mov
test
sar
dec
clc
imul
adc
push
js
sbb
aam
xor
fnstsw
outsb
xchg
pop
test
and
mov
xor
inc
xor
daa
jecxz
in
lcall
loope
xchg
xchg
push
les
nop
fs
mov
int
sub
lret
aaa
mov
sub
adc
je
cmp
adc
mov
shll
out
jle
in
xchg
repnz
mov
stos
jns
or
inc
lret
cmpsb
jecxz
pop
xchg
call
push
gs
andb
sahf
jecxz
inc
xchg
fs
mov
sbb
in
ja
mov
call
inc
xchg
adc
outsb
pop
add
inc
dec
mov
adc
fs
jmp
leave
sub
incl
xor
in
inc
jae
xchg
mov
cmp
or
bound
and
js
fwait
add
ljmp
sbb
repz
mov
add
push
clc
and
sub
dec
add
pop
adc
stc
jnp
stos
mov
aam
jne
outsl
and
push
lea
mov
xor
stos
movsb
push
sub
in
in
shr
addb
sbb
xchg
pop
lods
sbb
push
out
pop
sub
jne
ljmp
fnsave
add
push
js
outsb
lret
and
jne
cmp
push
jmp
add
and
add
push
mov
sub
jbe
sbbb
cmp
std
hlt
xlat
rolb
add
mov
xchg
push
push
push
call
cmp
outsl
push
fwait
dec
mov
or
nop
lea
aas
adc
or
cmp
pop
testw
push
cmp
lock
js
add
addr16
imul
int3
cmp
mov
pop
adc
xchg
mov
aaa
fwait
push
in
pop
popf
dec
fldl2t
jns
and
and
mov
mov
cld
or
out
push
loop
mov
xchg
arpl
add
mov
push
outsl
push
cwtl
aas
sahf
loop
cmp
test
mov
sbb
lds
insb
les
xchg
insb
rorl
outsl
add
rcr
cs
mov
frstor
mov
inc
mov
outsb
pop
adc
cmp
adc
lods
adc
in
xor
xor
jno
mov
bound
sbb
in
es
push
lock
inc
xchg
lret
xlat
ret
jae
shlb
inc
repnz
dec
iret
xchg
mov
aam
add
sbb
aas
push
adc
sub
repnz
xchg
sbb
inc
mov
shl
mov
or
push
iret
add
sbb
out
nop
xor
sbb
ret
scas
xor
stos
xor
mov
icebp
mov
jmp
mov
in
pcmpeqw
xchg
mov
xchg
xchg
sub
btc
xor
shlb
aaa
sahf
push
push
xchg
push
hlt
push
mov
shrb
loope
ret
pop
call
in
ret
sbb
cmp
pusha
pop
mov
sub
addb
clc
mov
lods
jbe
xchg
pop
inc
loope
ljmp
icebp
std
mov
cs
daa
or
xor
xlat
scas
inc
repz
dec
mov
int3
stos
dec
loop
popf
iret
out
inc
xchg
mov
lret
sti
mov
sbb
sbb
pop
insb
bound
cmpsb
cmp
mov
push
push
inc
push
loopne
adcb
enter
pop
lcall
fwait
cmp
sbb
ds
dec
addl
mov
mov
rcl
psadbw
pushf
and
cs
inc
repnz
stc
pop
insl
pop
clc
call
fidivrs
mov
cli
sbbl
inc
xchg
adc
fbstp
or
mov
pop
jmp
iret
movsb
repnz
sub
jecxz
call
sbb
sbb
jnp
and
insb
mov
ret
pop
cmpsb
sub
inc
dec
rcll
fistpl
into
mov
dec
push
imul
pushl
bound
mov
and
cmpsl
ds
cli
cmp
push
cmp
push
stc
pop
pop
inc
dec
xor
jecxz
fadds
pop
mov
add
pop
xchg
pop
mov
movsb
loop
aad
stos
inc
sub
dec
leave
add
stos
popf
lods
fistpl
mov
lret
fdivs
xorl
movsl
push
or
loope
or
aas
loopne
pop
adc
xchg
fwait
dec
inc
adc
scas
cmp
sub
jp
mov
inc
sbb
xchg
es
lahf
xor
lods
fwait
cld
cmp
dec
sbb
inc
rorl
sub
bound
or
or
mov
mov
fwait
shll
push
add
data16
fwait
pushf
mov
push
mov
jb
into
fdivrl
xchg
cmc
mov
notb
pop
cmp
mov
in
dec
push
or
test
rorb
push
inc
dec
shll
cmpsb
pop
and
shll
pop
push
js
nop
inc
out
mov
sbb
outsb
testb
in
mov
idiv
ret
cmc
mov
adc
xor
les
pop
out
mov
lcall
cli
fldt
sub
xchg
pop
scas
fisubrl
xor
divb
add
adc
loopne
pop
and
mov
push
lret
jmp
test
adc
sbb
stos
mov
xchg
mov
cmp
mov
pop
mov
aas
push
sahf
and
hlt
jo
sub
pop
cmpsb
push
lret
mov
jmp
sbb
mov
movsb
sub
repz
pavgb
adc
aam
sbb
mov
ja
fldcw
cmp
cmpb
insb
mov
jno
mov
mov
lcall
inc
or
xchg
dec
cmc
push
pop
ds
ja
fidivl
pop
pop
jo
sahf
fsubr
lret
sbb
enter
and
jb
test
mov
jg
mov
pop
insl
push
inc
dec
xlat
cmpsb
xchg
pop
dec
cmp
cmpsb
add
mov
int
in
add
fdivs
adc
stc
test
ret
mov
pop
and
dec
jle
cmc
adc
jo
data16
adc
stos
adc
add
mov
push
cmpsb
ja
aas
inc
inc
loope
hlt
jo
xor
sub
lret
test
inc
and
jnp
jno
adc
pop
scas
xchg
mov
shlb
cmpsl
bound
mov
push
rcrl
aam
dec
hlt
adc
mov
aaa
adc
cs
xor
mov
test
adc
or
cltd
pop
lea
and
ret
inc
xlat
dec
push
pop
jle
dec
out
test
push
cmpsl
push
push
or
mov
pop
scas
js
xor
iret
stos
xchg
fwait
cmpsb
xor
flds
ds
push
stos
pop
dec
jno
pushf
add
adc
mov
dec
xor
aam
test
jp
push
mov
nop
sti
fstpl
hlt
xchg
xor
lock
jge
mov
push
fidivrs
scas
add
push
gs
and
aaa
sbb
das
mov
or
fidivrl
in
cmpb
nop
cmp
shrb
mov
and
mov
cmp
sub
fbld
pushf
inc
inc
repnz
jbe
sarl
push
daa
aas
xor
mov
xchg
call
inc
and
sbb
pop
ljmp
movsl
mov
ja
push
push
stc
mov
stos
push
jne
jne
mov
sub
sbb
sub
adc
addr16
call
lahf
ss
arpl
data16
push
cmp
push
repnz
stos
rcrb
jne
xchg
fwait
shl
outsl
mov
inc
add
popa
inc
push
in
adc
cvtps2pd
dec
xchg
xor
fisubrl
adc
push
imul
xchg
enter
mov
lods
rorl
jne
xor
outsl
push
pop
insb
push
mov
call
push
cld
int
cs
dec
inc
dec
arpl
aas
out
iret
pushw
dec
pusha
add
and
testl
xor
adc
pop
dec
out
rcrl
jo
inc
push
gs
es
mov
or
movsb
cmp
pusha
movsl
push
push
push
jecxz
xchg
mov
xchg
cs
les
mov
mov
stos
sbb
jnp
lds
fcomi
xor
test
and
andl
push
lods
jb
xlat
repz
adc
and
xchg
lods
loop
mov
sbb
enter
les
repnz
outsb
and
mov
push
cmp
pop
xor
cld
mov
lcall
std
rcll
dec
push
out
inc
dec
imul
call
icebp
and
jmp
and
icebp
and
inc
sbb
mov
push
jmp
add
jno
shrb
daa
add
psubsb
sbbw
mov
jp
pop
subb
pop
sbb
sbbl
stc
xor
imul
sti
inc
xchg
in
or
sbb
frstor
andl
or
sbb
push
out
xor
and
xor
mov
push
pop
dec
jl
fsubrs
inc
push
in
inc
or
adc
out
jns
jns
outsl
pop
add
xchg
dec
xor
imul
mov
or
push
adc
xor
fsubs
inc
imul
into
and
dec
and
adc
jne
xor
dec
out
mov
loop
aas
lahf
gs
inc
dec
int
dec
out
push
out
das
bound
sbb
mov
and
and
shld
movsl
subb
sbb
sub
jns
mov
pop
add
sbbb
ja
insb
enter
subl
inc
clc
stos
pop
ret
sbb
lret
jg
mov
fistpll
or
adc
in
pop
mov
in
mov
pop
shll
repnz
mov
mov
in
lock
sahf
and
and
add
adc
push
in
jno
sbb
add
shlb
mov
lcall
jecxz
mov
sbb
shlb
fdiv
mov
mov
sar
pop
dec
and
xchg
mov
mov
clc
in
xlat
cmp
mov
adc
xor
cmpsl
and
stos
mov
xor
in
cwtl
mov
mov
xchg
lods
orl
cmp
sbb
and
add
outsl
push
les
nop
mov
loopne
sbb
fildl
mov
aam
push
aam
repz
pop
jno
iret
popa
hlt
mov
xor
testb
clc
or
lret
hlt
sub
adc
cmp
std
call
pop
mov
mov
or
dec
repz
xor
xor
sbb
mov
nop
ss
add
jp
xor
stos
or
fidivrs
dec
repz
lret
sti
mov
and
pop
scas
int3
inc
test
inc
push
inc
jecxz
mov
loopne
stos
add
add
loop
mov
imul
adc
shlb
add
mov
sub
shrb
xor
xchg
loop
add
sub
scas
orb
ret
bnd
jg
xchg
sbb
push
in
ljmp
lahf
in
sub
sub
sbb
mov
xor
or
add
les
stos
pop
outsl
lock
pop
stos
cmpsb
cmp
fdivs
loope
jmp
pop
or
mov
call
mov
and
and
xchg
push
lea
cs
in
ljmp
out
cs
jge
test
push
out
mov
pop
lcall
dec
pop
sub
lds
mov
mov
stos
mov
and
jo
enter
imul
lds
sub
push
sbb
fdivrs
mov
or
test
sub
dec
pop
lock
push
mov
loop
rcl
icebp
call
xor
out
popf
popf
lock
push
aaa
sbb
push
jns
sbb
inc
jb
jne
movsl
jp
xchg
nop
push
and
in
std
outsl
jne
scas
jg
inc
mov
jp
xor
inc
rorl
mov
push
ljmp
ljmp
cwtl
or
dec
xlat
in
aam
xchg
test
in
pop
jecxz
nop
adc
ret
sahf
out
sbb
adc
mov
adc
pop
dec
aas
or
inc
ds
out
push
in
mov
loope
xchg
daa
imul
xor
push
in
push
lahf
and
mov
lahf
dec
pop
lock
out
jnp
ret
mov
lea
pop
cmp
out
mov
mov
adc
sub
adc
inc
push
clc
push
mov
scas
das
dec
sarl
xor
cmp
scas
adc
jle
lods
add
cmp
mov
dec
dec
fs
mov
jne
cwtl
pop
and
pop
insl
pop
mov
or
mov
fcompl
mov
mov
dec
aas
aaa
inc
repz
aam
pop
aam
mov
scas
call
repnz
cs
mov
add
dec
aam
xchg
aaa
iret
mov
rcr
xchg
insb
add
xchg
or
dec
lea
outsb
mov
imul
subl
iret
pop
cmp
dec
cmp
jge
sbb
ret
xchg
cmp
mov
pop
pop
pop
jmp
xor
in
inc
inc
cli
sbbl
dec
pop
jo
mov
std
adc
jns
aas
and
jle
pusha
xchg
lods
push
jle
data16
xor
mov
stos
xor
loopne
sbb
and
les
out
xor
cltd
orb
or
ret
xor
xlat
rorb
rcrb
jo
fwait
xor
fsubs
rorl
push
sub
mov
pop
repnz
lods
and
xchg
outsb
mov
icebp
inc
dec
mov
movsl
icebp
orb
pop
mov
fcom
cmc
inc
fsubs
inc
pop
jno
pop
cmp
shll
pop
push
mov
cmp
mov
fimuls
and
scas
cmpsl
ja
and
push
dec
and
imul
in
test
aam
or
and
xchg
xor
scas
xor
bound
add
sbb
push
movsb
inc
dec
ljmp
shll
fcmovnu
ljmp
stos
jecxz
outsb
push
loopne
or
aaa
mov
jg
xchg
aas
ds
scas
ds
mov
adc
fwait
je
hlt
cld
mov
mov
jge
sbb
das
mov
pushf
sub
aam
xchg
add
sti
jb
out
repz
pop
add
adc
cmp
add
adc
aaa
leave
in
jmp
inc
pop
in
inc
repnz
pop
imulb
lock
and
sub
out
test
cmpsb
aaa
cmp
sbb
pop
pop
pusha
sub
adc
mov
int
in
jp
push
out
pop
fwait
xor
repz
in
call
cmp
pushf
cmp
lock
cmc
mov
lea
std
inc
popf
cmpsl
sub
fsubrs
test
dec
adc
dec
xor
movaps
pop
jmp
cld
das
popf
xor
adc
stc
js
pop
cmp
sub
inc
dec
call
insb
dec
loop
fnstenv
arpl
imul
mov
jo
inc
mov
add
scas
jl
frstor
shrl
pop
ret
loop
xchg
xor
mov
pop
dec
fisttps
sbb
jl
shlb
test
scas
or
adc
sub
data16
lret
jg
adc
lcall
mov
test
and
gs
popa
notl
arpl
fnstenv
cli
gs
psubb
dec
cs
fsubrs
push
mov
cmpsl
movsb
xlat
xchg
adc
mov
clc
inc
push
push
roll
notb
insl
push
jno
insl
xor
jmp
movsb
js
test
dec
movsl
loopne
push
adc
fstl
jno
scas
cmp
shlb
dec
std
testl
test
mov
les
inc
je
aam
test
imulb
sub
rorl
repz
xor
nop
daa
out
push
popf
sub
fwait
jb
outsl
ret
xlat
pop
xchg
and
ds
das
pop
in
aam
lds
add
pop
pop
daa
loopne
pushf
repz
mov
xchg
pop
shrb
into
fsubs
adc
js
jl
xor
jnp
xchg
inc
jge
jmp
fsubrs
mov
int
xchg
fsubr
test
or
xor
imul
fimull
mov
cmpsb
sbb
fnsave
jo
mov
sbb
pop
push
lock
xchg
icebp
and
push
addr16
cmp
repnz
movsb
dec
mov
mov
or
mov
jle
add
xchg
xor
push
adc
out
jae
shl
and
mov
test
or
imul
adc
xor
fiadds
lcall
adcl
rcrb
and
loopne
xor
out
or
test
sub
xchg
inc
adc
mov
inc
cmpsl
dec
mov
shll
leave
push
jae
add
cmp
cmpsl
add
jg
mov
fcomip
test
dec
pop
fcoml
rcl
loope
xchg
in
sub
mov
sub
cmpsb
cmp
stos
xor
push
inc
out
xor
xor
ja
mov
aad
xchg
andb
jae
adc
adc
push
arpl
call
dec
repnz
adc
inc
cmp
xchg
cmp
xchg
imul
cmp
xchg
adc
sti
lret
sti
adc
in
sbb
lcall
sti
mov
imul
xchg
and
mov
or
les
push
hlt
ja
mov
addb
test
mov
and
aaa
fimull
jl
stc
add
xor
cmpsb
out
mov
push
fcompl
stc
jb
call
mov
xchg
mov
and
lods
adc
shll
or
jp
mov
cmpb
mov
add
scas
nop
imul
aas
jnp
and
fiaddl
xchg
dec
jle
js
mov
pushf
dec
loope
test
or
push
adc
sbb
ja
cmc
push
test
mov
in
sub
add
mov
test
ficompl
shlb
cmpsb
xchg
icebp
mov
push
movl
fs
and
jno
in
or
adc
xor
push
cwtl
clc
int
mov
sarb
or
js
mov
add
inc
sbb
popa
mov
mov
test
xchg
aam
cmp
je
cld
mov
xor
push
outsb
adc
xchg
cmp
outsb
pushf
shr
out
sub
imul
and
fwait
xchg
sub
mov
mov
je
nop
mov
push
test
cwtl
std
sar
cmp
lret
outsb
out
sarl
dec
adc
pop
cmpsb
orb
fwait
cs
lods
add
popf
pop
imul
or
jbe
xchg
pop
lods
mov
iret
mov
loop
ss
insb
loope
inc
mov
jne
in
les
jg
andl
dec
iret
sbb
ss
and
stc
xchg
sub
shlb
cmc
jge
test
stc
rcl
and
mov
repnz
leave
xor
or
dec
jle
sub
xchg
es
scas
mov
popf
and
add
xchg
sub
ret
pop
or
sahf
adc
and
mov
add
xlat
insl
rcll
mov
decb
push
mov
cmp
lret
add
lea
push
out
jnp
gs
ficoml
pop
or
xchg
jae
into
daa
mov
inc
fnstcw
repnz
in
ds
mov
add
aam
mov
jg
mov
sub
or
or
out
mov
mov
loope
ss
jecxz
sbb
ljmp
cli
cmp
popf
sbb
out
and
cmp
aam
pusha
pop
scas
or
or
push
lcall
mov
pushf
out
and
inc
test
sbb
sbb
ficoml
ds
das
outsl
mov
mov
movsl
mov
pop
pop
cmp
enter
mov
lret
push
mov
mov
xor
imull
fcmovbe
testb
xor
imull
fidivs
lods
jmp
ficomps
cmp
ret
gs
xchg
sbb
dec
scas
cmp
dec
fwait
inc
lret
xchg
adc
inc
mov
jmp
pop
ret
hlt
insl
dec
and
repnz
cmp
leave
push
stos
add
popa
leave
inc
push
pop
int
add
xor
roll
xchg
shrl
leave
mov
cmp
jnp
push
jb
push
mov
jmp
push
xchg
in
cmp
xchg
div
inc
loope
das
fwait
xor
jmp
jns
mov
js
je
dec
sahf
jb
inc
movsb
mov
sbb
cwtl
pusha
add
arpl
es
pop
dec
or
add
push
ds
mov
lods
push
frstor
orb
mov
mov
aas
xor
cmp
stc
fimuls
pop
inc
ja
pop
add
stos
in
xchg
mov
aas
mov
cmp
rorl
jnp
sub
std
pushf
mov
xchg
inc
mov
sbb
lret
mov
add
xor
cwtl
mov
mov
xor
test
ret
pop
lods
mov
popa
xor
lahf
or
testb
shlb
adc
push
out
adc
push
dec
pop
repz
arpl
rcrb
nop
fs
or
pop
scas
mov
fisubs
es
and
cmpsb
divb
mov
mov
stos
inc
pop
jmp
leave
andb
jmp
mov
push
dec
aad
sub
adc
shrb
jbe
push
iret
ss
mov
gs
mov
jl
fiadds
push
das
movb
dec
push
dec
in
nop
rol
inc
test
sub
pop
pop
in
mov
je
clc
out
test
out
add
aas
push
jo
sbb
fwait
dec
lea
les
dec
push
mov
adc
std
xor
bound
hlt
loopne
pop
lcall
jnp
adc
call
fiadds
push
fsubr
cmp
jg
stos
cmp
das
iret
test
ds
mov
fsubrl
pop
sbb
fbstp
jp
ss
mov
mov
dec
xchg
in
decl
movsb
cmp
int3
ret
out
and
fcomp
cli
push
cmp
retw
sub
push
in
sub
pop
outsb
arpl
stos
inc
adc
push
sbb
data16
mov
add
jnp
es
pop
jmp
ret
ljmp
xor
adc
mov
adc
push
or
or
and
xor
lds
mov
and
adc
addl
sub
movsl
push
mov
lret
mov
pusha
push
stc
adc
ss
mov
rcrl
sub
ret
out
lds
mov
xorl
jo
mov
mov
cld
mov
int3
mov
insl
into
fs
jl
mov
popa
cs
pop
dec
mov
mov
fildll
adc
adc
fldt
cmp
jno
insl
fwait
or
adc
in
xor
cmp
shrb
push
aam
pusha
push
inc
push
aaa
or
lock
jg
adc
arpl
push
jnp
inc
fldcw
lcall
mov
jle
iret
clc
fisubl
add
add
call
test
and
test
adc
mov
stc
mov
adc
sub
out
out
rcll
or
mov
or
push
mov
mov
lods
movb
clc
sub
ja
insb
adc
test
cmpsb
or
pop
sbb
jns
jmp
mov
ret
xchg
or
dec
mov
sub
xchg
lods
cs
pop
dec
and
sarl
and
mov
lods
jecxz
insb
add
call
mov
mov
pop
rcrb
test
mov
subl
scas
jmp
bound
mov
stc
stos
lock
test
dec
insb
push
in
icebp
js
xchg
mov
les
and
cld
xchg
jp
or
fs
hlt
push
inc
scas
sub
push
popa
jbe
addr16
pop
idiv
inc
mov
js
jle
push
xor
andb
or
pop
test
or
fcom
xchg
rolb
fwait
jnp
jno
fsubs
ss
daa
out
or
hlt
push
jle
lds
es
fadd
out
test
out
loop
imul
mov
test
jmp
aaa
stos
jge
xchg
push
or
sarl
jne
add
xchg
xchg
fcomi
lret
cmp
loop
mov
outsb
adc
xchg
scas
or
orl
in
loope
mov
push
popa
dec
xchg
pop
mov
mov
std
das
cmp
loope
jl
sbb
pushl
out
and
test
sbb
add
mov
fdivl
sub
enter
mov
pop
negb
xchg
mov
sbb
xchg
shll
mov
fbld
dec
das
shrb
mov
ret
pop
mov
es
pop
in
iret
pop
inc
xlat
jecxz
lea
mov
daa
fisubrl
popa
rcll
insb
repnz
sahf
mov
mov
push
mov
js
in
test
dec
je
jae
xor
cmp
xchg
outsb
xor
sahf
xor
push
sub
adc
cwtl
sub
lods
adc
or
test
jbe
cli
xchg
lds
and
jb
rcr
and
push
dec
in
arpl
cmp
repnz
in
les
shll
gs
ret
incl
lahf
sub
jecxz
cld
dec
es
sahf
xlat
inc
or
lahf
jno
push
fcompl
or
push
sub
lds
push
out
aad
cltd
lea
loop
bsf
ret
popf
xor
movsb
push
cmp
xchg
mov
ljmp
or
push
mov
dec
and
inc
mov
insl
lea
push
pop
push
mov
push
ja
jmp
ljmp
fwait
xor
mov
leave
inc
push
loope
mov
inc
pop
xchg
jae
jae
dec
fisubs
sbb
push
out
imull
movsl
mov
push
dec
mov
pop
and
cmp
add
mov
popa
push
cs
dec
bound
dec
xchg
mov
xor
test
mov
pop
xorb
jne
fdivs
and
mov
stos
mov
aam
jle
test
das
mov
mov
ja
int3
movl
dec
fsubs
ret
cmc
mov
xchg
popf
in
stc
inc
rcl
inc
aaa
push
into
cmpsl
pop
sbb
rorb
adc
stos
sub
fcmovnb
jge
adc
lods
outsb
sbb
inc
iret
cmp
push
mov
and
mov
pop
roll
lock
out
test
aam
mov
jg
aas
mov
inc
pop
dec
pop
cmp
dec
ds
and
jmp
test
mov
repnz
addb
sbbb
mov
inc
push
push
add
mov
in
push
mov
outsb
lret
or
mov
sub
inc
xchg
arpl
xchg
mov
sub
cld
push
movsl
sub
out
std
aad
lret
popa
cmpl
in
mov
das
jmp
fstps
add
and
data16
sbb
add
shll
je
adc
xchg
sbb
mov
adc
fildll
sub
inc
shlb
bound
pop
insl
decb
or
sub
xor
insb
pop
lahf
popa
out
inc
or
test
les
js
mov
xchg
sub
push
dec
dec
out
out
jbe
push
inc
push
stos
je
stos
mov
sub
inc
fnsave
mov
ja
jno
sub
imul
insl
jne
xchg
jbe
push
mov
push
sub
fwait
mov
test
imul
je
inc
movsl
loop
mov
dec
inc
cmp
jo
pushf
lea
mov
std
push
adc
pop
sahf
clc
sub
add
mov
jbe
pushl
pop
push
test
xor
sti
insl
pushf
gs
push
add
mov
out
jg
mov
or
add
pop
clc
mov
movsl
sub
pop
inc
enter
dec
movsb
int3
jbe
jp
shlb
or
xor
scas
push
negb
arpl
sub
or
pushf
bound
movsl
call
aas
aas
iret
add
sbb
sbb
push
ljmp
xchg
or
or
mov
pop
aam
or
cmp
andl
dec
jecxz
insl
sub
icebp
cmc
mov
mov
ret
sbb
adc
je
adc
shll
loop
mov
ret
add
addr16
loope
in
test
xor
pop
outsl
and
mov
es
fdivrl
ret
fwait
fwait
lods
inc
fcomp
mov
cld
outsl
lods
pop
cmc
clc
pusha
adc
and
dec
sub
popa
jae
inc
adc
in
fimuls
push
daa
das
cmp
adc
pop
imul
mov
xor
aam
mov
or
popa
insl
adc
add
insl
pop
ficompl
pop
dec
pop
sbb
mov
aas
aaa
test
movsb
sbb
arpl
stc
nop
mov
pop
lock
lcall
mov
daa
add
cmpsl
jo
fisttpll
cs
data16
sbb
movsb
xchg
mov
mov
or
push
or
addl
pop
mull
inc
in
fcoml
or
mov
lret
adc
ss
daa
in
dec
pop
outsb
inc
scas
call
mov
ret
fsub
jecxz
mov
xchg
sub
mov
movsb
mov
adc
xor
mov
mov
cmpb
jp
loop
addr16
xlat
push
je
clc
aas
pop
out
loop
jno
pop
mov
pop
cltd
xor
push
jo
mov
xlat
cmc
jecxz
xor
xchg
cmp
and
cmp
add
pop
js
in
fmull
cmpsb
mov
arpl
lret
mov
push
lret
ds
lahf
dec
sbb
mov
mov
dec
jecxz
cmp
icebp
mov
jp
repz
icebp
out
sbb
mov
daa
mov
and
clc
xchg
xchg
lea
in
insb
mov
shll
mov
sbb
mov
mov
aas
push
dec
xchg
sub
ret
ds
test
jp
pop
adc
pop
dec
movsb
push
dec
adc
dec
loope
enter
mov
or
out
xor
push
adc
sahf
stos
jnp
sbb
cltd
push
add
stc
jno
cld
xchg
call
pop
xorl
push
adc
and
imul
push
repz
inc
fiadds
sbbl
movsl
fmuls
mov
add
pop
mov
test
and
push
xchg
jbe
out
rorb
into
enter
call
pop
add
xor
push
lock
add
or
fldcw
bound
adc
ss
lea
add
pop
adc
lods
and
mov
cltd
xor
sub
mov
gs
sbb
insb
adc
scas
inc
aas
data16
mov
loopne
push
out
jns
leave
fisttpl
outsl
jecxz
dec
imul
negl
and
xchg
int
xor
sub
pop
mov
fdivrs
es
addps
xor
test
dec
mov
pop
lea
dec
sbb
sahf
or
fwait
cmp
lods
push
mov
and
daa
mov
pushl
push
push
inc
cmp
gs
mov
les
popl
das
jg
add
adc
cli
mov
xchg
adc
dec
add
xor
jae
push
imul
out
notl
push
xchg
cmpsb
adcb
mov
int3
push
inc
fstps
inc
sub
mov
mov
jl
rclb
mov
and
les
lods
xchg
das
xlat
rcl
cmpsl
add
and
push
sbb
cmp
sub
xor
enter
cmp
repz
jp
inc
dec
ja
cmp
sub
inc
fdiv
xchg
or
lret
inc
pop
jmp
jb
cwtl
or
hlt
adc
fistpll
adc
push
push
fcoml
lret
xchg
pop
scas
dec
jbe
gs
mov
sbb
and
or
sbbl
in
pop
push
outsb
iret
push
sub
fmull
mov
adc
scas
xchg
out
dec
popa
enter
mov
jp
mov
adc
repz
es
xchg
movsl
and
fildl
insl
sub
scas
aaa
out
jle
clc
mov
or
pop
mov
or
sbb
movsb
jae
rolb
pop
repnz
in
mov
into
jns
jo
fidivl
aam
or
testl
lret
aam
pop
xlat
outsb
mov
xlat
into
cmpsl
and
adc
imul
push
out
lods
aaa
push
in
loopne
pop
or
cmp
mov
test
jge
inc
aaa
iret
popa
stc
int
movsb
shrl
enter
sbb
out
cmpsb
test
mov
adc
int3
dec
add
data16
fsubr
mov
jno
adc
lods
in
and
iret
or
popa
lret
xlat
xchg
mov
xor
push
mov
repnz
mov
and
scas
movsb
sbbb
mov
aam
jb
aad
dec
xor
enter
cmp
loope
and
repnz
sub
fisubrl
rclb
lods
inc
jbe
inc
fisubrs
fnsave
mov
or
pusha
insb
jle
cmp
sbb
mov
add
rcrl
xchg
mov
cli
pop
imul
and
push
scas
inc
fidivs
sar
movsb
xor
push
stos
jl
std
loopne
pusha
pushl
inc
fsubrl
dec
mov
push
lea
decb
daa
xor
clc
bound
inc
or
fsubrl
add
icebp
js
es
pushf
call
mov
pop
scas
mov
and
mov
xor
sub
pop
mov
mov
ds
cwtl
push
jecxz
mov
pusha
jno
leave
ret
repz
int
mov
fcoml
out
cli
or
lcall
mov
pop
add
andl
and
mov
stos
mov
rcll
xchg
das
lret
scas
xlat
or
divl
clc
fidivl
pop
add
push
stos
cmp
js
hlt
cmp
sub
cmc
stc
add
dec
fnstcw
movsb
pop
aaa
cltd
mov
imull
inc
sub
jmp
dec
xchg
add
mov
inc
add
cld
mov
pop
push
xor
lods
mov
cmp
aad
dec
mov
and
and
ja
and
push
pop
or
js
or
jne
inc
ror
xchg
add
jnp
andl
sub
xor
gs
bound
push
clc
stc
add
mov
pop
xchg
cmpsb
adc
movsl
sbb
outsl
test
das
and
or
dec
mov
popf
dec
push
inc
loop
popa
inc
pop
shlb
xchg
jmp
imulb
fs
ds
push
add
fwait
xor
pop
jne
dec
xchg
xor
jecxz
aam
std
mov
add
jle
rolb
imul
outsb
cld
fucomip
push
cmp
mov
xor
in
enter
and
and
pusha
lea
xchg
fcomps
inc
gs
push
out
out
rcll
pop
ljmp
mov
and
jo
dec
mov
dec
lret
cltd
fcompl
ja
and
ss
push
arpl
add
iret
arpl
mov
cmp
pop
xor
sub
jl
inc
xor
mov
push
push
sbb
xor
adc
or
xlat
cli
xchg
adc
in
dec
sbb
fldt
cbtw
das
mov
sbbb
cmp
and
xchg
jno
mov
out
lahf
sbb
xor
hlt
lcall
cs
pop
adc
xor
mov
xchg
lahf
push
in
or
mov
adc
pop
int
push
fdiv
xchg
out
cmp
fnsave
repnz
sahf
ja
pmulhw
fmul
cmp
mov
cmp
shrl
aaa
push
call
mov
fdivl
cmp
mov
xor
sbb
pop
repnz
pusha
xchg
icebp
fnstsw
les
adc
fwait
je
sub
in
and
lret
aad
pop
loopne
add
lret
dec
push
bound
sbb
mov
xor
lcall
rclb
mov
mov
jbe
clc
xlat
pop
popa
mov
xor
sub
pop
and
jns
mov
dec
and
dec
lret
in
lods
notl
fsubrs
movsb
jb
cld
iret
push
ja
or
in
sub
mov
out
push
inc
dec
mov
mov
push
mov
aad
test
jecxz
mov
shll
imul
inc
ss
or
sbb
xor
and
cmp
or
xchg
pop
scas
push
push
pushf
xor
movsb
cmp
mov
adc
push
loope
and
sti
or
sar
dec
pop
push
xor
xchg
nop
mov
push
xchg
jp
imul
or
aad
mul
pop
sub
retw
ja
push
pop
sbb
shlb
add
pushf
movsl
in
mov
cs
mov
imul
adc
rcrb
push
xor
aad
cmpsl
scas
adc
or
aad
sbb
and
clc
add
mov
loop
mov
mov
mov
in
add
pop
loope
sub
pop
lock
out
xor
sbb
aaa
sti
push
shlb
leave
lahf
lcallw
cmpsb
test
mov
or
push
movsl
pop
jmp
stos
loopne
imul
popf
imul
lods
sbb
je,pt
push
int
pop
lahf
jmp
inc
add
into
xchg
repz
js
xchg
pop
in
aad
mov
mov
cmpsb
stos
lods
lods
pop
aas
push
sub
lcall
shlb
mov
mov
sub
xchg
sub
jmp
mov
mov
jle
mov
or
sbbl
push
scas
push
or
dec
insl
or
sbbb
inc
push
push
mov
sbb
adc
inc
flds
shll
ret
lock
mov
pop
jb
jp
outsb
insb
or
insb
sub
mov
xchg
arpl
out
lahf
js
fstps
mov
mov
add
mov
jb
enter
movsl
pop
dec
rcrb
jle
add
sub
enter
lret
stos
cltd
pushf
mov
push
dec
mov
sbb
pop
xchg
pop
lahf
outsb
shrb
inc
out
jecxz
arpl
cmc
mov
lret
stos
adc
push
or
jnp
xchg
ret
notl
lahf
ss
arpl
cmpb
loop
ljmp
dec
enter
cmp
out
adc
jnp
gs
adc
out
adc
add
ret
cmp
sbbl
push
clc
pop
adc
stos
faddl
icebp
jns
fistpll
cmc
lret
add
stos
jmp
xor
out
pop
pop
inc
xor
movsl
jbe
adc
mov
jo
lods
adc
mov
xor
jmp
int
rcll
jp
pop
cmpsl
jg
ds
jb
mov
inc
sbb
pop
dec
dec
or
jle
les
add
jno
aad
xor
mov
xor
lods
xchg
adc
stos
lea
sbb
vcomiss
dec
or
mov
and
cmp
testl
mov
clc
push
inc
lret
repnz
push
imul
add
pop
xchg
and
mov
lods
ljmp
jno
jecxz
cmp
mov
and
pop
adc
xchg
cmc
xor
loop
daa
test
mov
ds
repnz
shrb
arpl
mov
lahf
in
sub
arpl
inc
test
test
mov
mov
adc
sbb
ds
movl
jbe
shrb
lret
fsubs
enter
pop
lock
std
add
int
xchg
sub
outsl
fwait
mov
and
inc
insl
mov
ret
jno
mov
add
pusha
mov
jp
lahf
ljmp
lods
clc
adc
mov
xchg
mov
mov
rcll
das
or
pop
out
fdivrl
int
call
andb
mov
das
xlat
lret
bound
jno
fstpl
cmpsl
jmp
push
push
push
and
add
sub
and
fldt
mov
stc
dec
sbb
fs
xor
xchg
xlat
mov
push
jbe
hlt
jl
fiaddl
xchg
sbb
popa
adc
xchg
pop
in
mov
cmc
js
xchg
shl
filds
imul
shll
sahf
stos
test
icebp
fxch
adc
xor
xchg
icebp
pop
loope
or
inc
fst
popa
sti
mov
stos
or
push
stc
outsl
in
xchg
mov
lea
mov
adcl
and
sbb
fs
sub
mov
cmc
das
jp
cld
leave
pushf
popa
enter
or
mov
inc
lock
add
sub
testb
pop
mov
aad
and
jbe
xchg
xchg
lcall
mov
push
lret
pop
lock
adc
jle
cmp
lods
in
jle
xchg
into
pop
idiv
mov
push
and
jne
cld
mov
std
or
xchg
adc
jmpw
rcll
or
test
outsb
loopne
fldenv
or
loop
sbb
lock
mov
pop
lea
mov
fstpt
or
aad
jno
jp
xchg
popa
mov
mov
fsubp
push
xchg
jmp
lds
jmp
mov
mov
add
xor
in
push
imul
sub
lds
inc
push
ja
push
cmp
lcall
or
pop
jb,pt
xchg
xlat
es
fwait
add
scas
repz
dec
and
loop
stos
sti
imul
andb
out
xor
inc
lods
sbb
les
mov
inc
loope
mov
inc
jecxz
sbb
enter
jo
xor
pop
sbb
fidivrl
fistl
push
mov
outsb
cmp
enter
loope
cmp
mov
inc
xlat
push
mov
sbb
sub
test
aas
jp
and
into
into
ss
gs
and
in
mov
jns
std
in
sti
rcll
nop
gs
xchg
inc
mov
movsl
inc
sahf
adc
int3
arpl
ljmp
xchg
fsincos
mov
cmp
adc
aaa
sub
cs
push
jl
mov
jg
pop
nop
sub
scas
loopne
xchg
enter
insb
push
mov
mov
push
addr16
je
inc
lret
mov
into
stc
fs
mov
mov
xchg
nop
clc
lret
lea
ret
or
dec
in
sub
pop
mov
mov
jp
sub
sub
add
sbb
mov
or
pop
pop
inc
xchg
mov
mov
std
nop
dec
fstpt
mov
or
adc
into
iret
pop
xchg
or
sub
mov
cld
les
les
xor
push
in
pop
xlat
je
jmp
jae
test
pushf
imul
or
sub
stc
jl
dec
dec
repnz
pop
mov
shl
ja
outsl
repz
cmp
cmp
aas
or
sub
test
jne
repnz
lahf
test
scas
jmp
mov
icebp
sbb
jp
jae
and
mov
or
jge
dec
bound
fstl
mov
daa
out
rorb
imul
add
out
push
pop
repz
push
lcall
mov
sub
inc
popf
xor
sbb
mov
adc
mov
mov
jge
fdivrl
lahf
dec
mov
in
adc
cld
int3
enter
data16
push
dec
aas
inc
pop
fldt
mov
and
sbb
push
lcall
addb
pusha
mov
ret
out
cmp
fwait
scas
push
hlt
mov
sbb
das
sub
sub
xorb
filds
popf
xorl
daa
aaa
scas
sbb
mov
ret
mov
in
hlt
dec
subl
mov
insb
lret
inc
aam
mov
shlw
jmp
aad
sbbb
ror
sub
mov
inc
dec
jns
movsl
push
outsl
lret
repnz
push
into
mov
in
call
mov
adc
adc
sbb
push
daa
mov
fucomip
inc
test
ret
movsb
shrb
and
and
fsubl
xchg
fstpt
jne
cld
pop
in
kandb
jbe
loope
mov
jno
shrb
ss
push
loopne
sbb
jne
lods
cmp
in
inc
das
jns,pt
mov
shrl
jo
pushf
outsb
xchg
dec
pop
rclb
mov
mov
ds
je
test
pop
dec
daa
fdivrs
js
das
pop
in
clc
data16
leave
mov
out
adc
xor
push
inc
mov
test
loopne
dec
mov
addr16
adc
aad
bound
add
xor
cmp
shl
jp
xchg
lods
sbb
xor
inc
inc
pushf
lods
je
mov
xor
lahf
nop
jno
sbb
or
push
mov
pop
and
mov
mov
pop
xor
fnsave
sub
leave
sti
loope
mov
sbb
inc
js
jmp
repz
mov
xchg
inc
push
nopl
dec
loopne
sub
adc
into
icebp
mov
add
in
adc
stc
pop
add
push
inc
mov
ds
test
andl
sbb
and
dec
jecxz
mov
lcall
movsl
lods
cmp
dec
addb
jb
pop
push
xor
pop
ret
out
mov
xchg
in
mov
popa
enter
pop
dec
mov
std
dec
repz
xchg
inc
mov
mov
fidivrl
or
jmp
dec
mov
and
in
or
add
daa
je
and
fistps
sbb
popfw
sti
jle
mov
nop
jne
roll
outsl
pop
push
or
aas
test
gs
ror
test
ret
hlt
sub
aam
mov
and
xor
mov
mov
stos
pop
movsb
dec
jecxz
add
arpl
push
cli
outsl
test
or
aas
sbb
add
repnz
ret
pop
jmp
test
cmp
nop
sbb
adcb
pop
jle
xchg
fistl
or
ret
daa
push
lods
pop
mov
repnz
test
rorb
frstor
jmp
js
mov
sub
ja
addr16
lret
lock
sbb
push
scas
dec
and
stos
fldcw
imul
push
loope
mov
push
inc
leave
inc
push
outsb
leave
pusha
mov
jb
adc
js
imul
xchg
lahf
insb
insb
push
jo
lea
mov
mov
fisubrs
push
push
ljmp
lock
dec
btc
sub
jbe
push
mov
loope
sub
xchg
push
hlt
clc
stos
sar
sbb
push
and
jns
cpuid
fcmovnbe
push
ds
hlt
jle
lcall
xor
cmp
mov
adc
loopne
xor
jbe
fdivr
xchg
push
jo
jae
jmp
out
cmc
popf
stos
ss
cmp
xor
pop
ja
cmp
mov
out
ror
repnz
push
xchg
cmpsb
cmp
popf
lahf
lds
rolb
sbbb
int3
repnz
out
and
fwait
push
mov
loop
or
push
mov
faddl
mov
test
rclb
jl
leave
fsubrp
notl
add
cmpb
daa
int3
cmpsl
cld
sub
cmpsb
stos
sub
mov
and
aas
lock
adc
pop
fsubp
sbb
jmp
icebp
test
data16
outsb
push
sub
push
insb
jbe
popa
outsl
cmpsb
and
ret
push
insb
push
jno
mov
bound
jo
scas
dec
or
mov
fisubl
inc
sub
and
and
pop
pusha
in
add
jl
jg
and
push
and
mov
and
sahf
subb
out
inc
lods
inc
imul
cmp
mov
loopne
dec
cmc
loopne
arpl
sahf
popf
sub
mov
sub
movsl
pushw
add
mov
lret
and
popa
sti
or
cld
idiv
test
movsl
cmp
loopne
adc
outsl
les
xlat
sub
jno
sub
xchg
stos
dec
stc
xchg
dec
movsb
dec
xlat
inc
or
push
iret
jno
ljmp
jbe
std
rcrb
lock
mov
aas
dec
mov
add
inc
inc
scas
int
cli
fisttpl
repz
test
pushf
mov
fstl
xchg
cmpsl
jno
pop
mov
mov
lea
jp
inc
jmp
xchg
add
push
jl
jg
scas
stos
popw
sub
dec
xchg
jo
repz
xchg
jae
mov
inc
sub
clc
adc
sbb
icebp
inc
pop
lods
cmc
out
daa
fsubrl
push
or
std
loopne
mov
and
loopne
test
or
lea
shrl
jl
push
lahf
pop
imul
push
ret
jnp
and
pushf
adc
sub
sub
and
das
sbb
popf
insb
jl
lock
mov
dec
jno
repnz
adc
xchg
in
in
adc
in
pop
cmpsl
pop
sahf
loop
adc
sub
and
fisttpll
and
mov
push
sarb
push
sbb
fisubrs
scas
pop
insl
cli
mov
inc
mov
subb
xchg
mov
or
mov
jno
les
cmp
mov
pop
mov
add
xchg
lock
loopne
std
sbb
sbbb
cmp
es
pop
dec
mov
out
pop
jge
xor
stos
loopne
lds
rolb
arpl
or
xchg
lret
cmp
outsl
sbb
pop
mov
sahf
push
adc
out
into
inc
jmp
jecxz
rcll
shlb
sbb
inc
mov
sub
shll
xchg
push
dec
std
enter
cli
sbbl
cmp
popf
jmp
push
mov
faddl
call
hlt
ds
popf
jg
add
rcll
ja
cmp
bound
push
mov
jnp
or
popf
cmc
push
pop
sahf
jne
pushf
divl
cmp
nop
cmc
lds
movsb
pop
xchg
xlat
insl
lds
enter
jge
loopne
mov
roll
add
sub
xor
xchg
sub
jnp
clc
or
scas
sti
pop
loope
fcomps
push
xlat
pop
cmp
lahf
and
int
mov
adc
jns
mov
pop
mov
loop
lahf
pop
gs
rclb
push
mov
cs
clc
pop
mov
clc
dec
stos
outsl
and
jecxz
xchg
add
mov
sbbb
aad
sbb
in
mov
out
mov
mov
and
dec
insl
add
mov
out
pop
ljmp
leave
mov
push
mov
jecxz
scas
into
imul
fldl
mov
shll
sbb
mov
and
add
and
mov
sbb
mov
push
lea
pop
scas
repnz
dec
in
mov
jle
xor
test
pop
jmp
xor
test
pop
adc
sbb
stos
jns
sbb
inc
loop
adc
fs
les
and
aas
in
xchg
add
xchg
sbb
xor
add
cmpsl
jo
sti
test
add
xor
aam
inc
mov
cmp
in
xchg
sub
adc
rcl
stc
loopne
cs
rclb
mov
outsl
outsb
push
mov
adc
xor
fbstp
inc
cmp
sub
test
ss
jp
mov
push
test
mov
hlt
jns
enter
sbb
rorl
or
xchg
rcl
jb
inc
mov
ds
xlat
hlt
add
cmpsb
inc
popa
in
call
incb
jp
lret
lea
xor
rolb
mov
add
scas
pushf
and
lret
scas
jmp
nop
mull
or
mov
push
xor
xchg
int
jb
push
push
jecxz
sub
mov
fistps
fists
jbe
jo
andl
add
add
call
dec
loopne
mov
push
mov
mov
push
pop
rcrb
inc
jecxz
sub
fistpl
xchg
mov
push
out
ljmp
inc
dec
xchg
clc
cmpb
pop
dec
pusha
pop
daa
mov
fistpl
inc
fs
add
push
sbb
and
hlt
cli
insl
shrb
jns
clc
stos
in
lcall
sbb
add
mov
push
mov
rcl
or
mov
pop
sub
mov
jecxz
outsb
add
dec
pusha
ja
test
movsb
xchg
daa
mov
push
cli
lcall
aas
cld
fidivrs
nop
pusha
in
push
cmp
fnsave
and
xchg
mov
into
popa
dec
ficoml
sub
sbb
stos
xchg
jnp
xor
pop
push
adc
mov
rcr
or
cli
enter
add
cmpsb
adc
pop
mov
insl
push
cmp
loope
jno
sub
pop
aad
add
jae
and
dec
in
add
lret
cmp
ss
xchg
adcl
or
mov
inc
rcll
out
enter
xchg
hlt
addb
aaa
jb
test
inc
jmp
mov
or
cs
jp
adc
out
sub
lret
out
iret
cmc
push
pop
daa
icebp
stc
vpaddusw
shll
push
ljmp
push
repnz
ds
pop
es
cmp
inc
xlat
push
fidivrl
ret
jge
loop
mov
sarb
scas
and
in
adc
ljmp
add
ret
movsl
push
mov
outsl
sbb
icebp
rcll
es
sbb
rep
sub
outsb
cltd
imul
js
repz
xor
cmp
mov
dec
pop
jne
xchg
jnp
xchg
cs
mov
mov
sub
ret
pop
jl
mov
mov
push
loope
xchg
dec
int
sbb
or
inc
daa
cmpb
nop
stos
xor
pop
idivl
ss
imul
les
test
loopne
arpl
mov
loopne
test
enter
mov
xor
imul
loope
in
xlat
adc
mov
fldcw
test
mov
cmp
pusha
sub
inc
shl
cld
sbb
mov
adc
xchg
outsb
mov
pusha
push
sbb
dec
ja
repnz
xor
or
push
aaa
push
repz
scas
add
je
xchg
xchg
cmpsl
imul
inc
or
xor
outsl
addr16
jns
cmc
pop
pop
pop
push
not
imul
loopne
outsb
andb
xchg
pop
aas
adc
xorb
pop
mov
pusha
push
pop
int3
daa
adc
adc
cmc
mulb
sub
and
inc
mov
js
push
icebp
sbb
xchg
pop
cmp
or
mov
daa
lds
scas
cmp
mov
ret
fcom
or
pop
cmp
outsl
sti
clc
fldenv
and
andl
ss
in
xor
bound
cmp
ret
jo
inc
cli
sub
dec
jmp
xchg
out
mov
in
sub
sbb
or
mov
hlt
test
rorl
mov
movsl
cs
pop
je
rol
inc
jmp
nop
add
xchg
fcoms
mov
jnp
jge
push
jge
dec
push
inc
call
subb
adc
cmp
dec
scas
gs
arpl
dec
data16
inc
in
push
cld
push
xor
cmc
mov
xorl
shrl
iret
pop
jne
sub
pop
dec
test
cmpl
pop
jp
pop
ja
xor
jnp
cwtl
js
aas
incb
and
popa
xor
outsb
sub
cmp
mov
or
sub
lods
test
jp
sbb
jnp
push
sub
jge
pop
int
aas
push
pop
cltd
lods
pop
mov
aaa
mov
or
add
jmp
mov
fildll
scas
pusha
xor
adc
jo
inc
xor
sbb
inc
mov
rcl
dec
jg
jp
add
sbb
ss
js
int3
fsubr
dec
jno
notl
push
mov
add
test
mov
mov
ret
ret
bound
iret
push
adc
shll
lods
test
xchg
mul
sub
pop
pop
add
test
sbb
movsb
movsl
mov
loopne
xor
mov
fnstenv
mov
fildl
ret
cmc
test
mov
pop
push
cmp
cmp
push
imul
mov
daa
mov
mov
jne
mov
sub
adc
mov
mov
aaa
mov
or
test
icebp
cs
dec
roll
imul
pop
out
mov
inc
jbe
jle
das
mov
cs
dec
mov
inc
mov
or
sbb
mov
outsb
cmpsl
dec
out
das
push
jmp
gs
pushf
adc
test
in
xor
xor
into
enter
pop
push
stos
mov
sbb
jl
mov
nop
mov
jge
cmp
sbb
ds
inc
add
fwait
cwtl
mov
loope
das
cli
loop
fisubrs
push
sub
addr16
lds
xchg
cmp
out
cld
pop
rorb
or
push
loop
xchg
les
in
popf
aad
xchg
in
sub
sub
add
sub
clc
cmp
sbb
mov
ficoml
out
mov
jmp
xchg
mov
mov
xchg
les
pop
fidivrl
push
jl
or
outsb
into
inc
adc
cmp
adc
inc
inc
cwtl
ss
lock
jno
mov
push
cld
arpl
cmp
outsb
aam
xor
adc
inc
sbb
inc
fadds
add
push
scas
and
mov
stos
shrl
add
jae
cli
dec
mov
incb
xchg
mov
jle
aas
pushf
loope
adcl
jbe
lock
cs
jl
sub
xor
outsb
push
sets
add
xor
add
rcrb
stos
push
cmc
in
nop
pop
loope
xchg
lret
jnp
adc
mov
setb
ret
cmp
daa
pusha
movsb
xchg
mov
jo
scas
jecxz
and
aas
xchg
scas
xchg
push
pusha
push
jl
pop
and
loope
repnz
out
std
les
imul
pop
sub
fstl
fmuls
add
mov
push
sbb
and
loopne
scas
cli
daa
dec
jmp
ror
ss
cld
cmp
pop
test
sub
outsl
xor
inc
repz
adc
mov
jne
cwtl
xor
inc
inc
mov
cmp
push
mov
mov
mov
movsl
adc
or
or
pop
add
pop
outsb
and
mov
xchg
mov
sbb
push
xchg
dec
loope
xchg
push
out
cld
outsl
outsb
cmpsl
jecxz
add
or
loop
cmp
popa
out
inc
jmp
push
jo
ja
xor
mov
jecxz
in
xchg
rcr
and
and
xchg
mov
xchg
sbb
lret
fimull
dec
mov
pushf
les
and
dec
jle
repz
push
in
cld
pop
or
mov
outsl
sbb
pop
ss
inc
arpl
push
movsb
mov
mov
gs
in
and
ljmp
adc
and
repz
out
es
stos
outsl
inc
fcmovnb
movaps
inc
in
js
in
inc
enter
or
xchg
sbb
sarb
inc
test
cmp
enter
imul
out
push
scas
cmp
cwtl
and
cmpsb
rcr
bound
jl
inc
scas
stos
cli
rcrb
push
movsb
pusha
mov
in
mov
mul
push
jno
ficoms
into
mov
pop
jbe
fcmovnu
jmp
dec
cmp
inc
movaps
testb
inc
mov
imul
jle
testl
int3
pop
inc
pop
andl
add
dec
clc
adc
outsb
dec
jb
js
sub
gs
js
adc
push
out
es
loop
js
xor
nop
imul
jno
adc
mov
xchg
lods
mov
cwtl
imul
loopne
add
jle
xchg
jge
push
dec
mov
dec
fucomi
pop
or
clc
inc
movsb
inc
rol
mov
add
cmpsl
rcrb
adc
fmul
outsb
in
adc
ret
xchg
xor
xchg
fdivl
dec
or
stos
mov
pop
scas
mov
iret
sarb
mov
and
push
mov
mov
adc
es
xor
repz
rcr
andl
lock
in
ret
or
add
sbb
adc
cmpsl
test
sub
jno
mov
ss
mov
pop
jo
mov
cmpsl
xchg
lds
aas
lock
adc
ret
les
stos
lods
aad
mov
mov
inc
push
stos
jno
sti
test
sbb
or
or
gs
xchg
mov
push
in
std
movsl
in
mov
shrb
test
insl
xchg
xor
outsb
call
adc
adc
push
cmpl
pop
outsb
jns
andl
jns
inc
push
inc
lcall
clc
nop
test
scas
popf
xor
mov
lock
mov
mov
in
and
out
sar
jno
nop
call
jne
in
dec
stc
or
outsl
xor
imul
cs
insb
fs
xchg
jne
and
xor
gs
xor
xchg
test
es
jmp
je
mov
test
sub
adc
mov
js
adc
inc
sbb
sbb
sub
xor
push
push
cld
cmpb
pop
sahf
or
das
fsubr
lds
out
out
jo
roll
leave
pusha
and
mov
push
cmpsb
cmpsl
out
inc
lret
fs
int
or
mov
iret
lret
gs
add
mov
jbe
aaa
int
dec
push
cmp
adc
aaa
xchg
int
xchg
divb
cltd
mov
outsb
movsl
mov
sub
sbb
aas
idivl
mov
fnstcw
fimuls
cmpsb
fwait
das
xchg
popa
into
mov
ret
inc
test
cwtl
push
out
cs
jno
mov
sub
or
aas
aaa
stc
scas
icebp
loopne
daa
and
jl
mov
in
mov
jle
xor
les
inc
mov
sub
pop
bnd
or
mov
fimuls
push
jno
mov
fs
or
xor
fdivl
pop
aad
and
lea
movsb
ds
adc
das
lea
cmpsb
dec
pop
mov
arpl
adc
mov
popa
mov
loopne
cmp
stos
lods
mov
jo
adc
aaa
mov
test
mov
xor
jg
pop
out
mov
lods
inc
popl
adc
lahf
sub
leave
flds
pusha
ss
mov
shl
adc
lret
lahf
mov
test
push
push
imul
ja
pushf
jle
pop
fadds
rcrb
add
pop
outsb
pop
jb
jno
xor
mov
xchg
ljmp
lcall
and
lods
mov
mov
xor
pushf
in
popa
aas
pop
or
mov
shrb
pop
inc
cltd
nop
add
test
jnp
outsb
aam
dec
aad
lcall
cmp
mov
xchg
ror
mov
and
fildll
into
sub
decl
icebp
imul
adc
cwtl
das
sub
scas
jno
sub
enter
movsb
bound
inc
push
lock
in
xchg
lea
jp
fwait
pop
scas
inc
xlat
and
lea
stos
scas
rcrl
shll
jae
inc
mov
adc
xor
inc
out
jb
or
jecxz
xor
xor
mov
sahf
movsl
pop
mov
mov
xor
adc
cmp
cltd
xor
pop
dec
xchg
cmp
mov
add
addr16
daa
mov
pop
jmp
push
sub
lds
in
decl
jne
movl
testl
vcvtpd2ps
sbbb
mov
mov
or
fadds
es
shr
les
cld
mov
aad
icebp
pop
mov
xchg
mov
lds
out
sub
stos
jo
stos
mov
jbe
shrb
mov
inc
jnp
aas
add
mov
lds
add
imul
add
xchg
inc
mulb
loope
mov
sub
sbb
aas
das
dec
push
add
mov
or
mov
xchg
icebp
jp
movsl
mov
inc
mov
xchg
or
out
sbb
add
pop
push
test
push
pop
xor
sti
mov
imul
cwtl
das
jle
mov
dec
fdivrl
insb
jecxz
fidivs
add
mov
cmp
mov
or
push
stos
daa
mov
pop
cld
enter
xchg
sub
jg
pop
lock
xchg
enter
xchg
cs
pop
out
fwait
rol
pop
add
sbb
rorb
out
xchg
rol
pop
decb
sub
mov
pop
out
clc
xchg
pop
lahf
sub
scas
pop
pop
ljmp
popf
cmp
arpl
push
into
testb
push
subb
movsl
jl
fstpt
loopne
pop
mov
mov
cmp
fcmovb
pop
test
mov
mov
mov
inc
push
shlb
push
ficompl
jnp
and
adc
ljmp
push
test
insb
cli
insb
sti
cmovp
jno
fs
nop
xchg
ret
mov
jg
gs
lods
mov
movsb
cli
cmpsl
or
adc
jae
add
inc
pusha
and
fistpl
cmp
imul
out
aam
loop
push
adc
mov
push
fwait
mov
les
lret
test
jmp
cmp
dec
lods
sti
hlt
push
addr16
dec
ljmp
ljmp
push
inc
push
xchg
fstl
xor
mov
stos
cmpsb
outsl
cmp
add
push
lahf
fwait
cmp
cmp
and
pop
fiadds
dec
lods
xchg
dec
sti
mov
mov
inc
lock
sub
ds
iret
jo
mov
and
dec
mov
and
mov
and
pop
or
jb
jg
adc
les
sub
bound
loop
stos
mov
outsl
push
xor
nop
lea
aam
je
cmpsl
sbb
sahf
in
pusha
pop
jo
jns
push
mov
cmpsl
ret
pop
and
dec
cmp
dec
out
lret
inc
xchg
xchg
inc
fldenv
shl
sub
gs
nop
daa
pop
push
pop
das
mov
scas
std
scas
dec
pop
sti
jae
sbb
jnp
stc
lcall
imul
mov
or
add
fldlg2
test
mov
imul
aaa
rcrl
out
int
or
mov
add
fidivs
pop
in
and
and
jno
imul
pop
sub
imul
pop
xchg
cmpsl
fldl
xor
dec
pop
pop
push
pusha
add
shrl
and
jl
iret
loopne
imul
pop
rorl
push
stos
imul
ja
cli
das
add
mov
pop
das
inc
inc
adc
incb
push
out
sub
movsl
xor
lods
mov
aaa
dec
jg
mov
pop
and
sub
inc
mov
mov
inc
enter
pop
mov
dec
xor
cld
jnp
cltd
dec
cmp
adc
in
loope
mov
outsl
data16
pop
enter
jp
cmp
pop
xchg
sub
lods
sbb
jle
std
fcoml
sub
movsb
add
xchg
loop
cmpsb
mov
cmc
sbb
mov
imul
add
les
in
mov
fs
pushf
and
sahf
inc
add
ret
rcrb
jle
cmp
imul
shll
out
jns
std
jmp
jecxz
cmpsb
inc
sub
stos
scas
iret
fildl
pop
int
loopne
insl
loopne
mov
stos
push
or
cwtl
adc
cltd
xor
in
aam
sub
sub
lcall
loop
adc
rorl
stos
aad
mov
rorl
and
add
call
stos
rcl
cmp
or
icebp
mov
mov
push
out
adc
or
cmp
inc
cld
ficomps
in
push
jnp
leave
fs
inc
or
mov
dec
jl
add
imul
inc
push
xor
cmpsl
or
mov
neg
lret
dec
and
in
repnz
ficoms
push
lods
push
or
sbb
out
clc
mov
sub
sub
jg
jg
in
add
ljmp
sub
and
adc
jne
sub
fwait
outsl
testl
or
out
aad
add
sbb
das
mov
inc
pop
lcall
daa
test
lahf
push
adcb
cmpsb
add
push
ds
mov
mov
jb
xor
fnstenv
jbe
mov
lahf
push
outsb
and
pop
and
outsb
jl
jns
and
aas
stos
add
pop
sti
adc
cmp
insb
and
mov
adc
es
pop
mov
cmp
mov
aaa
sub
stc
insb
popa
cmp
outsb
sub
mov
jl
jg
ret
xchg
xchg
cltd
xor
push
pop
cmp
jno
lods
lcall
jno
mov
jge
cmp
insb
cli
cli
adc
xor
mov
adcl
sti
pop
and
movsl
cli
mov
xchg
xor
ret
push
jno
addr16
jae
mov
cmp
push
inc
mov
paddq
popa
xor
clc
inc
inc
xor
in
jne
cli
mov
push
ljmp
cltd
mov
stos
inc
ficomps
mov
dec
xor
lods
cmc
loop
rcr
aas
out
cmpsl
int3
mov
mov
push
mov
into
adc
pop
cltd
out
stc
imul
pop
lret
out
inc
popa
xorb
sub
push
xorb
lds
pop
mov
mov
sbb
imul
xor
mov
cmpb
fisttps
adc
leave
subb
jnp
divb
in
test
fists
mov
out
call
sub
fidivl
and
or
fdivr
shlb
pop
lret
mov
int3
call
rol
push
jo
outsb
dec
pop
push
add
cmp
mov
sbb
insl
fcomps
adc
fcompl
lods
jg
pop
mov
cmp
mov
add
stos
lock
xor
lahf
cmp
or
insb
cli
cs
pop
mov
cltd
jmp
aam
xor
inc
movntq
xchg
ss
incl
scas
repz
push
stos
add
mov
xchg
xchg
out
sub
sbbl
dec
jbe
lea
rcrb
loop
aam
loopne
adc
add
out
mov
in
shlb
push
mov
loopne
sbb
xchg
xor
sbb
or
sbb
cmpsb
rep
out
pop
fwait
mov
in
pop
js
lea
dec
xor
insb
imul
fistpl
stc
add
sbbb
mov
mov
sbb
push
leave
je
xor
add
dec
test
outsb
outsl
movsl
je
or
push
pop
mov
mov
xlat
cmc
mov
mov
sbb
mov
jb
lea
outsl
ds
xchg
ret
and
jns
xchg
leave
test
xchg
mov
cs
xchg
mov
xlat
jo
mov
stos
push
dec
xor
adc
lret
insl
add
insl
jne
sbb
mov
insb
popf
sbb
mov
popa
cmp
aas
pop
cmp
loop
or
out
sbbb
jg
les
or
leave
dec
outsl
shl
and
mov
ds
aaa
push
pop
imul
and
dec
sti
sar
mov
js
mov
add
mov
pop
divl
mov
fwait
sub
out
sbb
movsl
mov
pop
fdiv
cmp
lock
pop
shr
sbb
mov
cmc
sbb
repnz
or
xor
in
test
cmc
jge
ja
sub
push
and
xchg
insl
inc
jnp
aas
imul
mov
stc
repz
int3
test
decb
ffree
fcompl
mov
lods
dec
jecxz
lock
out
push
imul
xor
pop
mov
out
rorb
sbb
sub
add
vrcpps
xor
aaa
in
out
mov
inc
cmp
or
in
movsl
cmp
movsb
les
push
jmp
push
loop
dec
adc
fdivl
mov
mov
inc
fdivs
iret
lret
aad
ror
mov
call
lds
pushf
test
jo
call
shrb
mov
xchg
pop
aaa
push
andb
sbb
push
xorb
imulb
addr16
les
and
es
cwtl
ds
push
dec
and
mov
outsl
mov
std
stc
addr16
loope
sti
xchg
setbe
xor
sub
int3
mov
imul
loopne
push
or
sub
inc
jb
out
cmp
mov
add
push
mov
push
call
test
nop
mov
repz
cmp
push
xchg
stc
inc
movsl
rcl
pop
sbbl
lods
pop
mov
jnp
xor
sbb
aaa
adc
cmp
mov
sbb
shr
mov
cmpb
sbb
js
xchg
popf
adc
inc
push
dec
mov
jecxz
shlb
xor
cli
jb
push
jae
pusha
cli
test
cmc
cmp
stc
call
inc
pop
lock
jnp
inc
xchg
ja
loopne
sbb
or
out
jae
je
pop
sbb
aas
mov
mov
jecxz
mov
adc
clc
std
mov
inc
sub
mov
push
fwait
push
cmpb
stos
mov
push
mov
jns
pop
dec
push
add
test
int3
lcall
fnsetpm(287
xorb
cmp
in
mov
out
pop
pop
hlt
ljmp
movsb
repz
ficomps
or
sti
inc
lods
outsb
cmp
xor
mov
inc
fildll
dec
in
out
and
inc
fdivrs
dec
add
imulb
nop
out
fwait
push
repnz
roll
mov
fists
push
inc
add
cli
aam
imul
out
or
ror
enter
and
stos
dec
popa
xor
aam
inc
lea
mov
mov
jp
es
fcmovbe
rcrb
dec
lea
rcl
xchg
sub
jle
repnz
or
pop
pop
add
cwtl
rorw
and
test
xchg
or
or
pushf
imul
sbb
dec
jo
sbb
out
orl
dec
ret
xlat
dec
pop
or
adc
js
enter
dec
push
dec
in
jb
loop
insb
pop
sub
in
mov
inc
dec
jp
sub
inc
aam
mov
fcomps
scas
ficoms
hlt
mov
in
and
in
out
xchg
xor
and
add
movl
cli
sbb
sub
stc
sub
dec
insl
cmp
jnp
out
mov
shl
mov
leave
xchg
and
movsl
adc
sub
into
mov
out
sahf
inc
fs
mov
inc
clc
movsl
adc
ret
add
out
add
loope
loope
or
test
movsl
xor
das
mov
sbb
test
inc
psadbw
jns
pop
xchg
pusha
call
inc
sahf
add
stos
dec
adc
mul
mov
dec
or
xor
in
mov
jecxz
mov
arpl
imul
loope
loope
icebp
cmp
add
cmp
push
call
push
lret
pushf
xchg
xchg
into
pop
mov
mov
mov
cmp
pop
rorl
testb
in
push
add
test
lcall
jecxz
xlat
adc
pop
add
lahf
pop
lret
shrb
push
push
push
mov
jbe
adc
pushf
lret
out
sub
cmovnp
out
sbb
je
or
pop
dec
xor
out
test
sbb
mov
enter
pop
insb
inc
fwait
sbb
ficompl
or
adc
adc
cmc
add
cmp
and
dec
arpl
sbb
lret
cli
mov
mov
sub
fildl
outsl
cli
hlt
test
icebp
pop
push
push
and
jae
and
jb
sbb
jns
cli
mov
pop
mov
pop
scas
mov
and
cli
pushf
jp
mov
adc
gs
cmp
jl
mov
inc
fs
orb
xor
je
js
xchg
cmpsl
pop
in
ret
add
out
insb
adc
es
pop
js
cmp
jno
and
flds
mov
mov
shrb
sbb
test
dec
leave
mov
cmpsb
sbb
testl
inc
test
js
or
scas
cld
mov
test
jg
in
rcrl
mov
out
push
jp
inc
rcr
mov
jo
xchg
fldt
pop
jo
test
ret
pop
shl
cwtl
or
ret
mov
loope
sub
inc
stos
in
push
sbb
imul
stc
insl
std
sub
cmp
add
in
dec
aad
push
mov
xchg
aam
imul
fidivl
movsb
push
mov
cmp
out
dec
int
test
stc
sub
or
sub
push
inc
inc
sbb
push
mov
rorl
adc
xlat
mov
clc
sbb
adc
or
xor
fwait
mov
repz
cli
rcll
adc
jnp
sarb
leave
sub
sub
cmp
clc
sbb
iret
icebp
sub
test
enter
rclb
aam
mov
adc
jns
xchg
and
and
add
jecxz
adc
lds
in
jne
outsl
adc
int3
xchg
and
cmp
popa
bound
xchg
sub
adc
imul
jno
lret
scas
insl
stc
popf
ret
jae
inc
int3
add
xor
lret
inc
push
push
out
cmp
add
mov
xlat
adc
adc
mulb
shrl
stc
adc
rolb
aam
loope
orb
cmp
jge
pushf
dec
or
xor
sub
cli
and
call
scas
andb
scas
insl
xor
mov
mov
outsl
jle
sub
push
out
xchg
shl
out
aas
sub
sub
repnz
dec
sbb
lods
or
stos
fidivrl
je
or
fwait
por
sahf
xchg
rclb
xor
cmpsl
push
fcmovnu
inc
push
ja
lret
rep
jmp
sub
cmp
jb
push
inc
push
pop
xor
das
std
in
notb
and
sbb
imul
dec
cmpsb
xchg
xor
int3
fiaddl
adc
test
test
xchg
mov
loop
aam
rclb
pop
and
jae
enter
push
cli
lea
add
adc
dec
pop
push
in
scas
in
fwait
push
xchg
sub
aaa
cmp
stc
js
pop
dec
dec
cmp
push
mov
inc
aaa
into
jno
insb
jle
dec
into
fmul
jne
mov
pop
ficoml
or
xor
iret
pop
xor
mov
aam
cmp
mov
test
push
push
push
repnz
jl
lock
push
and
add
jmp
add
aad
or
push
mov
ds
mov
movsb
sub
push
aad
mov
push
jg
les
sbb
xor
xchg
dec
aas
outsb
dec
out
imul
pop
clc
scas
outsl
cmp
cli
push
xchg
or
pop
loop
mov
lss
aam
xor
and
dec
in
mov
push
stos
hlt
cs
enter
daa
inc
jno
and
pop
pop
sbb
xor
sarl
cmpsb
jns
int
xchg
inc
add
jg
dec
loope
jnp
push
and
imull
jecxz
je
movsb
int
pop
inc
mov
stos
mov
in
jne
sub
and
aaa
fs
stos
cmp
cmp
inc
fstpt
adc
bound
fucomi
test
outsl
xchg
sub
fwait
xor
arpl
inc
mov
push
jmp
jbe
jo
imul
cmc
mov
xor
into
decb
pop
push
xchg
and
sub
in
std
mov
cmc
and
jnp
shrl
jns
movsl
bound
movsl
xchg
xor
jno
ds
add
clc
sahf
hlt
ss
pop
ror
movsl
mov
loopne
pop
popf
and
jle
sahf
jle
cld
les
xor
cs
es
aam
dec
mov
cmpb
icebp
cmp
ss
cs
jmp
push
loopne
fyl2xp1
nop
in
adc
stc
jo
sti
cmp
xchg
shll
fidivrs
add
mov
cmpsb
insl
sub
jo
xchg
mov
fildll
mov
pop
push
pushf
xchg
pushf
jge
sahf
inc
xor
xchg
lahf
leave
jo
outsl
sti
fsubr
sub
push
inc
pop
sbb
mov
dec
test
add
push
jmp
and
stc
outsl
cli
sti
inc
test
inc
and
aaa
iret
jae
es
rcl
add
shrl
pop
ljmp
in
mov
or
lock
sbb
inc
pop
jo
dec
data16
lods
outsb
jle
xor
xchg
shr
fadds
mov
decb
xchg
mov
inc
in
popf
int3
sahf
sub
cwtl
stos
popf
cli
cmpl
in
outsb
push
int
push
lds
jmp
movsb
sbb
out
shll
adc
cmp
clc
mov
gs
insb
sub
popf
push
lret
xchg
dec
or
and
enter
adc
mov
jns
inc
rcll
mov
cmpsb
std
fwait
mov
push
orl
mov
in
inc
jle
ficomps
and
inc
sbb
pushf
data16
orl
loop
cmpsb
dec
icebp
adc
movsb
jp
sahf
and
adc
inc
sti
movsb
aaa
out
jl
or
mov
jecxz
inc
dec
sbb
cmp
mov
xchg
xor
xor
inc
xchg
sbb
movsl
icebp
inc
push
cmc
xchg
cmp
dec
inc
decl
mov
add
mov
jge
jno
mov
adc
sub
test
jbe
mov
test
or
sarb
pop
adc
ss
movsb
loopne
lea
int
lea
and
dec
pushl
adc
jne
cmc
pop
pop
lahf
dec
incl
xchg
dec
out
mov
xor
dec
push
adcb
and
andb
cmp
pop
fisubs
cmpsb
pusha
sarl
xor
xor
test
rcrb
movsb
sarb
push
aam
mov
xor
sti
mov
pop
sahf
add
es
ficoms
in
ja
mov
and
lret
fbstp
jbe
in
mov
xor
mov
push
gs
lock
rcl
dec
lea
hlt
stos
ljmp
loope
les
pop
sub
xor
cli
std
ficoml
loopne
push
and
icebp
mov
int3
add
loop
popf
mov
or
les
das
dec
cmpsb
imul
xor
int3
pop
or
sub
sub
test
lret
add
xchg
daa
cmp
push
out
lcall
mov
jge
push
push
adc
sub
outsb
jle
lea
mov
ljmp
shlb
int
mov
sub
fnstenv
mov
jge
xchg
mov
les
cmp
sub
xchg
rolb
int
icebp
mov
out
sub
lods
mov
and
xlat
loopne
jmp
add
movsl
mov
cmp
sbb
jge
push
ja
cltd
mov
push
sbb
notl
push
loop
sbb
pop
insb
dec
pusha
dec
add
sub
gs
sbb
or
test
pushf
push
fnstcw
int
and
adc
gs
mov
test
mov
xchg
add
mov
in
jae
stos
movsb
leave
repz
sbb
mov
pavgw
imul
adc
pushf
xchg
out
dec
cli
out
sahf
adc
out
in
mov
sbb
repnz
sbb
leave
pop
imul
pop
inc
addr16
scas
pop
adc
int3
adc
js
mov
repnz
jne
popa
mov
xchg
inc
sar
xchg
cltd
and
xchg
pop
pop
lret
aaa
mov
xchg
hlt
add
cmpsb
xchg
mov
mov
jp
jle
mov
ret
jge
inc
lcall
sbb
stos
cmp
lea
cmpb
shlb
cmpsb
imul
or
dec
jp
push
loope
adc
xor
fs
mov
push
sbb
or
sub
adc
lods
fsubrl
js
stos
cs
dec
outsb
es
shl
test
icebp
insl
sub
xor
cmp
loop
adc
mov
mov
xor
imul
jg
pop
mov
insb
lods
pop
xchg
lock
xor
mov
fildll
mov
iret
xchg
sub
sbb
xchg
in
adc
je
jno
dec
xchg
xchg
cmp
inc
fcmovne
pop
cmp
sub
push
xor
inc
jmp
jae
jmp
or
mov
inc
adc
mov
and
stc
fdivs
adc
inc
lods
xchg
jl
mov
jb
jmp
rclb
mov
push
movsl
xchg
mov
push
cltd
fstpt
sub
sub
aas
or
popf
das
aam
jns
sub
out
push
push
sbb
outsl
adc
jo
mov
pop
leave
js
sub
add
and
shlb
fnstcw
ja
mov
or
xor
dec
gs
sbb
subl
mov
sub
xchg
ret
sbb
rcll
add
adc
test
add
mov
insl
add
icebp
jne
fs
mov
int3
sbb
loopne
push
jecxz
or
or
sbb
and
sub
push
les
ret
mov
enter
mov
inc
fisubrs
sub
aad
and
add
in
xchg
sbb
int
sbb
mov
lock
adc
mov
pushf
adc
mov
cltd
and
lret
icebp
jmp
fildll
sarb
xchg
jb
xchg
cmpsl
rcll
dec
mov
ret
jno
test
sbb
sbb
mov
loopne
pop
pusha
jg
rcrl
in
pushf
cmp
sub
mov
push
int
xchg
test
out
lret
clc
das
rcrl
aas
jmp
imul
clc
sahf
es
sbb
sub
jno
div
mov
or
popf
and
out
xchg
das
repnz
sbb
cmp
cmp
bound
outsb
and
pusha
xchg
pop
repnz
shlb
and
pop
mov
mov
cmpsb
sub
int
adc
loopne
jmp
mov
mov
gs
outsb
add
dec
loop
and
mov
jmp
and
sbb
inc
push
cmc
popa
in
test
mov
pop
testb
pop
stc
popa
clc
jmp
lahf
stos
inc
rorl
shr
dec
inc
fstpt
cwtl
dec
in
ret
repz
push
cmpsb
cmp
sub
push
xchg
dec
lahf
mul
lea
xchg
cmpb
mov
or
dec
popa
mov
or
loope
out
ret
inc
push
cmpl
outsb
jae
popa
mov
fidivl
dec
inc
push
jecxz
adc
xchg
adc
sbb
outsl
in
pusha
mov
pop
mov
dec
cmp
rcl
lds
push
pop
popa
out
cmpsl
iret
shr
mov
sub
mov
fidivs
lods
test
and
dec
loop
out
push
in
and
imul
je
in
test
or
mov
ja
pop
aam
jg
jle
sub
pop
cmpsl
ds
loopne
loop
jo
imul
arpl
cmc
mov
sub
pusha
pop
in
stos
push
and
mov
insl
cmp
notl
cmpsl
sub
and
dec
dec
lds
mov
or
push
ljmp
jno
mov
clc
inc
mov
daa
mov
inc
sbb
fstl
scas
inc
push
gs
das
cwtl
add
enter
dec
jmp
dec
out
or
jp
mov
movsb
in
mov
ret
cmp
outsb
sbbl
lock
add
xor
push
inc
fildl
popl
or
or
adc
sub
pop
push
testl
cmpsb
rolb
xchg
add
jae
or
jbe
sub
xchg
lea
daa
mov
lods
push
inc
fnstsw
into
lods
inc
cld
pop
mov
adc
jg
xchg
popf
xchg
fcmovbe
adc
out
push
movsl
push
sub
ret
movsl
jle
push
lods
ret
repz
orl
jns
sub
add
lods
decb
movsl
das
iret
xchg
add
ret
andb
mov
mov
cmp
test
mov
jl
in
subl
mov
test
or
test
arpl
jne
addr16
xchg
sub
sbb
test
jae
inc
mov
jp
and
test
pop
movsb
lahf
mov
lods
push
sbbb
js
and
js
mov
xchg
ja
inc
cmpsb
mov
pop
sarl
mov
xchg
sub
lcall
pop
mov
mov
add
mov
arpl
add
adc
jecxz
push
popf
push
add
aaa
ja
shll
in
hlt
mov
rcrl
ret
pop
xor
ficomps
shrb
cmc
cmpsl
or
inc
cmc
jns
and
mov
jbe
inc
fucomi
xchg
shrl
or
cmp
call
sbb
inc
fstpt
inc
lds
push
in
sbb
pop
hlt
cmp
cld
jbe
and
pushf
aad
mov
cmp
push
jbe
jle
sbb
and
inc
inc
jecxz
jbe
mov
pushf
fcomps
mov
dec
dec
inc
fdivrl
clc
adc
add
xor
and
cmpsb
adc
add
pop
mov
insb
add
or
cmp
lret
lea
mov
sahf
xor
je
testb
push
sbbl
jl
inc
fmull
mov
pop
in
mov
sahf
arpl
push
in
divb
push
jmp
arpl
sub
divb
xor
push
xor
pop
divl
je
push
aas
popa
clc
insl
jo
idivl
sub
and
cmpsb
cmp
repz
testb
lret
sti
roll
repz
es
leave
xchg
sub
shlb
or
dec
mov
adc
add
pop
sbb
mov
mov
dec
loopne
ds
fldcw
inc
xlat
xor
jp
sbb
sub
insl
or
cmp
stos
inc
lock
pop
negb
and
inc
les
clc
aad
or
sub
lds
add
sti
fcoml
adc
lahf
pusha
push
fsubrs
mov
out
cltd
adc
push
repz
mov
pop
sbb
push
sbbb
mov
and
je
data16
daa
cmpsb
lcall
dec
mov
jl
test
xor
outsl
push
xor
sti
imul
mov
loopne
jb
mov
sbb
dec
outsb
rclb
push
pop
les
sub
push
nop
daa
andl
inc
xlat
mov
pop
mov
outsb
cmp
sahf
jns
inc
lods
xchg
testb
dec
mov
jp
cld
xchg
lret
mov
data16
sbb
mov
and
je
jno
lock
xchg
sub
fdivl
in
push
in
sbb
cmp
and
inc
pop
jne
mov
daa
rcrb
dec
adc
mov
mov
incl
arpl
push
movsb
cmp
cltd
dec
call
pop
out
pop
push
fidivs
add
xor
inc
xlat
sbb
aaa
into
push
or
ret
into
gs
fnsave
dec
fbld
or
scas
inc
pushl
cs
xchg
push
cmc
dec
in
adc
enter
push
call
sub
push
dec
icebp
ds
fsubr
jg
add
mov
inc
ljmp
adc
xor
cmp
mov
sbb
out
or
inc
arpl
dec
nop
mov
mov
mov
xchg
mov
lea
xor
movsb
mov
push
call
pop
push
ja
add
sahf
clc
pushf
or
push
dec
es
and
adc
sub
sbbb
xor
adcb
dec
mov
out
add
xchg
push
ljmp
movsb
inc
movsl
cmp
enter
xchg
xchg
cs
dec
in
mov
sbb
fwait
movsl
cmp
jno
lea
or
test
mov
cs
hlt
pop
ret
xchg
test
jl
subb
or
sti
lcall
ljmp
sbbl
lds
mov
inc
mov
mov
bound
cwtl
or
cmp
xchg
sub
pop
shlb
ud1
scas
testb
std
add
fisttpl
sti
jl
xchg
iret
dec
jno
xor
test
roll
ja
hlt
dec
pop
es
js
mov
int3
aas
pop
lock
les
xchg
std
xchg
lds
dec
jbe
fwait
xor
xchg
dec
ffreep
cmp
enter
repz
xor
jcxz
push
sbb
imul
and
ret
lods
inc
push
dec
stc
nop
jg
add
call
daa
pop
lock
test
mov
cmc
mov
imul
jne
into
leave
pusha
jmp
int
and
jmp
cld
pop
jno
jp
mov
rclb
lea
and
in
sbb
mov
stos
sbbl
fst
or
xor
cmpsb
fisttpl
mov
jb
adc
ret
and
mov
push
bound
nop
jns
sub
popf
cmpb
add
pushw
hlt
out
es
xor
sarl
adc
mov
out
sbb
fisubrl
icebp
jl
jae
mov
xchg
xchg
cmp
addl
xchg
push
mov
ftst
pop
sar
push
into
mov
in
adc
mov
cld
jecxz
les
ja
mov
in
xchg
stc
xor
std
xlat
imul
lds
xor
xchg
sub
xchg
sub
aam
cmc
ljmp
inc
gs
fs
in
aad
mov
adc
test
call
scas
mov
adc
scas
pop
sar
orl
mov
sbb
mov
cmpsl
leave
sub
imulb
sub
mov
cmp
imul
inc
mov
prefetchwt1
cmp
out
sahf
adc
sub
lret
out
jb
pop
fistl
pop
adc
cmpsb
pushf
test
add
sbb
daa
mov
cmp
inc
mov
xor
gs
jb
push
movsl
arpl
ret
fs
out
cwtl
xchg
dec
ret
in
js,pn
lcall
cwtl
into
pop
lret
sbb
ret
js
xlat
loop
cltd
daa
stc
dec
mov
hlt
cmp
sub
xchg
inc
stos
ds
imul
pop
xor
imul
lock
ds
outsl
fmull
adc
pop
enter
test
adc
loope
sub
pusha
mov
push
sub
lods
inc
fldl
lock
repnz
pop
mov
stc
in
xor
in
mov
sbb
sbb
inc
fisubs
inc
stos
jge
addr16
inc
cmp
lods
js
out
push
add
xchg
dec
sbb
cs
aam
or
xlat
outsb
movsl
filds
add
psubd
xchg
aad
in
lods
mov
inc
imul
inc
mov
sarl
pushf
int
and
or
push
stos
mov
mov
push
xchg
mov
mov
and
out
and
push
test
xchg
out
push
test
movsl
outsb
into
mov
xor
int
pop
out
sub
es
mov
outsb
xlat
push
cmp
stos
outsl
sbb
jae
cmpsl
cmp
cmp
sbb
pop
xchg
aad
sub
mov
fcomi
lret
ljmp
inc
bnd
or
repz
call
jge
mov
ret
inc
cmp
mov
cmp
mov
movsl
dec
js
push
inc
pop
hlt
js
fimull
fwait
add
pop
stos
test
sahf
divl
sub
dec
mov
ds
outsl
mov
mov
cmp
and
pop
outsl
insl
cmp
daa
xchg
sarb
jo
add
jne
xor
leave
arpl
insb
out
sbb
mov
pop
imul
sti
lahf
mov
push
fnstenv
aaa
fcmovne
inc
orb
ss
mov
or
les
xchg
or
xchg
std
fdivl
mov
mov
and
and
stc
and
jl
sub
enter
int3
inc
ds
cld
mov
ret
subl
out
dec
mov
mov
std
stos
outsl
les
mov
clc
mov
roll
mov
inc
sbb
inc
jge
arpl
mov
jmp
fs
jge
ret
xor
mov
shr
aad
lret
fcomp
sub
mov
fisubrl
pop
add
loop
sbb
cld
lock
add
test
lret
leave
jae
ljmp
or
adc
fbstp
cmp
inc
ss
push
aad
insb
loop
cmc
push
dec
add
test
add
pop
loop
push
arpl
call
cmpsb
dec
and
xor
data16
xchg
or
xor
sbb
cltd
test
test
fdiv
das
jmp
mov
sbb
outsl
clc
pop
or
pop
mov
xlat
sarl
aas
icebp
fimull
pusha
movsl
mov
inc
shr
pop
lock
jns
lcall
dec
ret
sbb
adc
lods
cmp
jne
loope
jg
fcompl
dec
xor
inc
add
sub
xor
or
inc
xchg
or
sahf
stos
push
scas
pop
or
mov
mov
add
mov
repnz
enter
lret
push
out
rol
pop
adc
gs
inc
mov
mov
ss
fadd
sbb
xor
sti
xchg
push
lods
xchg
jns
pop
dec
mov
xchg
xchg
lea
sub
pop
test
hlt
jns
mov
out
push
into
cmp
sbb
sub
int
dec
lcall
pop
insl
mov
negb
scas
daa
pop
dec
aad
inc
inc
ret
sub
mov
sbb
adc
add
lcall
mov
sub
jnp
lahf
dec
mov
jl
pop
je
cmp
pop
iret
outsb
dec
mov
xchg
outsb
popa
pushf
inc
push
adc
lods
dec
push
lods
add
and
pop
cmp
out
cmp
addb
lods
ret
popw
stc
inc
int
movsb
rorb
fisttpll
push
or
cltd
cltd
out
xor
imul
test
pop
mov
outsl
fwait
lods
and
sub
inc
xor
fs
fmull
xor
jns
aaa
into
mov
xor
xchg
aam
mov
hlt
or
into
aam
int
mov
sub
clc
sahf
jmp
loop
mov
push
or
jmp
or
repnz
sub
sbb
cli
hlt
and
mov
cmp
imul
dec
filds
xchg
sti
xor
add
leave
push
cltd
arpl
nop
xchg
ja
inc
mov
in
mov
sub
data16
xchg
test
into
sbb
xor
cs
pop
repz
xor
push
mov
adc
pop
push
adc
stc
and
in
xchg
xor
fnstsw
adc
sub
imul
inc
arpl
dec
cmp
push
jl
loope
jns
ret
cmp
idivb
pop
jge
pop
push
daa
or
pusha
sub
in
adc
fadd
enter
call
outsl
add
mov
imul
inc
stc
dec
gs
fstl
and
pop
jno
mov
push
xchg
out
sbb
movb
fnsave
mov
add
sbb
dec
les
dec
call
cld
sub
mov
inc
je
xchg
std
sub
mov
sar
mov
lret
mov
iret
push
out
pop
iret
stc
and
jnp
inc
mov
pop
scas
bound
stos
cmp
sarb
je
lret
ss
mov
lcall
movsb
mov
mov
jecxz
sbbb
sbb
decl
jbe
scas
adc
push
xor
scas
xchg
subb
or
inc
repz
mov
aas
sub
jne
into
inc
xchg
xchg
cli
mov
mov
fcmovbe
push
in
xchg
xlat
push
sub
dec
push
lcall
jo
cmc
xchg
pop
rcrl
sbb
push
in
or
icebp
mov
loopne
cmpsl
and
pushl
push
dec
fldl
ja
add
dec
cmp
adc
inc
and
inc
sub
pop
pop
inc
mov
jns
push
push
outsl
xchg
xchg
pop
inc
sub
pop
sub
jge
inc
mov
popl
inc
lds
icebp
daa
fs
les
dec
mov
lock
mov
jno
fwait
ss
pop
ret
mov
xor
mov
gs
cmp
and
pop
sti
dec
ror
popa
lahf
dec
sbb
mov
sbb
jg
les
scas
inc
ds
inc
mov
loope,pt
mov
outsl
filds
out
sub
js
push
lods
es
xor
pusha
push
sub
fs
aad
or
fidivs
and
and
inc
mov
shll
jle
lea
hlt
mov
or
mov
aas
call
jne
adc
jb
cld
push
dec
push
test
gs
mov
jnp
jno
orb
xchg
mov
sarl
dec
leave
aaa
cmp
dec
fistpll
push
adc
dec
icebp
cs
ret
loope
enter
int3
inc
adc
cli
pop
cwtl
mov
sbb
jnp
xchg
xchg
jb
jo
outsl
xchg
mov
movsl
push
push
jne
and
pop
cmp
xor
mov
inc
fisubrl
loope
fnstsw
repz
ret
and
jg,pt
and
daa
push
ret
pop
lret
lret
popa
and
scas
bound
sbb
and
dec
or
xor
adc
inc
js
flds
imul
mov
or
ljmp
push
jecxz
jg
inc
in
push
xchg
cmp
mov
xlat
push
shrb
sbb
and
or
mov
pop
stc
push
jg
xchg
push
jl
outsl
adc
xor
insl
or
ljmp
and
movd
and
xchg
mov
stc
or
sbb
les
stos
icebp
lods
cmpsb
pop
adc
movsb
fistpl
dec
mov
fucom
push
mov
pop
hlt
push
in
lret
sub
fstpl
stos
fsts
test
sbb
cmpsb
imul
adc
jo
mov
rcrb
int
dec
cmp
jl
das
repz
or
das
movsl
sbb
cld
mov
dec
stc
mov
adc
mov
sub
and
add
adc
jle
xor
xchg
xchg
ja
or
call
push
in
and
fildl
xchg
addr16
insl
add
mov
adc
jl
push
push
sub
pop
es
aad
push
jne
bound
mov
out
lret
lds
insl
fsubrs
adc
pop
push
lret
stos
inc
push
out
sub
mov
in
inc
jno
pop
fbld
mov
cmp
test
push
cmpsl
jbe
push
jae
popa
dec
adc
sub
jnp
insl
sti
sub
scas
pop
imul
mov
cmp
lods
mov
jae
imul
adc
jle
in
addr16
and
ficoms
aam
pop
pop
xor
jo
xchg
pop
and
inc
loope
push
or
cld
mov
or
mov
jno
outsl
mov
ds
pop
xchg
or
testb
cli
adc
jg
jl
mov
cmp
cmp
jecxz
shrl
inc
fldt
int
cld
shrb
push
stos
mov
mov
test
cmpb
movsb
js
enter
pop
mov
mov
out
adc
jg
fists
hlt
insl
lods
push
mov
stos
nop
push
mov
ljmp
pop
roll
rorl
mov
fistpll
pop
fmulp
mov
aas
jmp
sub
outsb
xchg
jns
sbb
xchg
sub
loop
pop
rcrl
pop
les
fbstp
call
fsubrs
xor
lods
inc
sub
cmp
cmc
sub
jb
mov
fsubp
sub
jno
dec
aaa
loopne
push
addr16
push
ret
scas
insl
fadds
cmp
and
ja
lea
in
or
xchg
pop
mov
scas
xor
imul
hlt
dec
loop
jne
icebp
addr16
shll
cmp
loop
loopne
pop
mov
or
out
clc
clc
sub
add
xchg
insl
add
ret
pusha
rorl
in
gs
mov
lahf
lea
xchg
js
push
test
cmp
lods
xorb
fiadds
insb
lcall
outsl
push
shlb
xchg
cmp
jo
lods
dec
iret
leave
inc
fdivrl
push
mov
fsub
dec
sarb
imull
push
out
pop
sti
call
mov
mov
out
addr16
mov
in
or
popf
sahf
xorl
hlt
xor
popa
jno
xor
dec
mov
inc
xchg
jnp
push
pop
mov
xor
orb
jae
lods
pusha
inc
fsubl
push
mov
push
ficompl
fimull
cmp
fsubr
pop
roll
movsb
xor
out
pushf
mov
lsl
jo
lret
xor
in
sbb
subl
mov
or
stos
pop
loopne
xor
push
dec
loopne
faddp
dec
ret
stos
jle
xor
mov
loopne
lcallw
push
jo
mov
adc
shlb
jge
jns
xlat
imul
dec
es
xchg
insb
xor
dec
sbb
adc
sti
std
das
mov
push
in
je
daa
out
adc
cmp
inc
mov
imul
data16
mov
scas
and
imul
add
andl
aas
jmp
outsl
xchg
pusha
std
sub
pop
aas
lods
inc
add
cmp
cli
fidivl
insb
into
cmp
clc
inc
add
pop
mov
pusha
adc
into
push
xor
push
cmp
inc
pop
nop
leave
aas
bnd
rcrl
rorb
push
inc
mov
mov
addl
add
or
sub
dec
loope
xchg
add
adc
xchg
aad
pop
mov
fs
pushf
nop
jb
mov
jae
jne
pop
inc
sub
inc
cmp
push
arpl
sahf
xchg
cwtl
xor
xchg
adc
jb
cwtl
xchg
sbb
pop
sarb
addb
data16
cwtl
cli
sbb
mov
in
hlt
sub
mov
outsb
std
in
add
gs
add
xlat
mov
adcl
aaa
faddp
jno
bt
mov
mov
sbb
or
sbb
mov
xchg
or
cs
mov
js
push
in
aaa
cltd
adc
sbb
inc
fcoml
pop
or
jbe
mov
call
cmpsb
adcb
rcll
dec
push
inc
mov
fisubs
push
lret
subl
cltd
das
movsw
mov
pop
or
je
pop
out
daa
jg
inc
les
loope
int
pop
cmpsb
arpl
mov
movl
js
test
adc
and
call
push
push
repz
push
stc
xor
sub
jo
test
dec
or
mov
xchg
test
pusha
rol
xchg
add
add
xchg
xchg
pop
mov
adc
sbb
loop
inc
jecxz
cmp
movsl
aad
xchg
jecxz
shrb
add
jnp
cld
roll
pop
pop
shll
jge
push
cli
ret
orl
jb
stos
mov
bound
scas
xor
aad
in
cmc
mov
push
sub
jl
data16
push
mov
dec
sub
sarl
sub
mov
jge
lcall
mov
xchg
hlt
or
xor
scas
push
cld
xor
js
sbb
ret
and
movsb
and
pop
push
loop
out
fdivs
aas
lret
adc
fists
adc
in
sarl
mov
xor
cltd
sub
inc
lods
divb
xchg
stos
push
mov
mov
mov
add
sahf
lret
int
loopne
sub
out
sbb
ss
jno
insb
lock
lret
cmpsb
or
aad
push
mov
test
jmp
push
shlb
ljmp
fucomi
adc
test
jmp
add
in
dec
ret
fisubrs
ds
das
outsl
sub
lret
gs
scas
pop
and
jno
fs
push
dec
pop
hlt
fs
sbb
xchg
pop
cmc
daa
pop
cmc
es
jle
jle
sbb
cmpsb
xor
push
in
xchg
jge
stos
fcoml
lock
inc
add
es
inc
jne
imull
into
xor
inc
in
xchg
sub
mov
les
fbld
addr16
push
int3
dec
lds
std
xor
enter
mov
les
std
loope
and
mov
mov
fnsave
push
into
out
das
xor
lcall
les
dec
stc
or
lock
ficompl
clc
sub
ja
repz
jmp
adc
push
fwait
pop
in
push
adc
push
adc
sti
scas
test
push
xorl
mov
sbbb
xchg
and
clc
out
dec
mov
int
mov
scas
xchg
movb
push
mov
ret
xlat
dec
mov
dec
mov
loop
popa
leave
and
xchg
pslld
out
jno
mov
add
inc
inc
inc
cwtl
xor
jmp
jae
sbbl
or
inc
or
dec
lea
lret
inc
out
xchg
addr16
cli
cwtl
das
push
xchg
arpl
dec
adcb
push
clc
popl
movsb
sub
sti
push
leave
inc
pop
or
push
inc
ret
aad
repz
cli
mov
in
adc
mov
jle
jecxz
jb
mov
movsb
cmp
and
push
xchg
int3
repz
lods
test
push
xor
mov
sbb
insb
xchg
sub
jmp
movsb
pop
pop
div
daa
in
ret
movsl
ficoml
popf
pushl
or
in
adc
lods
gs
aad
sub
outsl
inc
push
mov
inc
push
inc
add
pop
inc
xchg
jle
inc
fdivrl
inc
das
mov
outsb
jb
adc
and
mov
mov
ret
ret
push
aaa
jmp
cmp
and
dec
jb
sbb
pop
xor
imul
movl
bound
and
push
mov
push
pop
push
enter
out
daa
in
adc
add
cmp
adc
rclb
sub
xor
cmovl
dec
dec
das
jno
jae
fwait
outsl
mov
jle
xchg
cmp
jl
adc
dec
pop
or
scas
mov
lods
pop
cmp
outsb
mov
jne
pop
dec
ret
aam
ret
fsts
rcll
repz
das
fcompl
lret
out
xor
into
aaa
jmp
mov
push
adc
call
out
jecxz
pop
dec
mov
ss
cmpsb
cmp
mov
cld
adc
icebp
scas
inc
mov
icebp
ficoms
enter
xchg
into
sub
mov
sbb
mov
cld
sub
add
push
jbe
inc
xlat
aas
xor
push
inc
jmp
pop
ljmp
mov
pop
mov
shll
and
cli
into
pop
out
sbb
mov
repz
mov
pop
mov
jmp
cmp
jno
fwait
pusha
mov
jmp
and
xor
fisubrs
xor
leave
fnsave
in
cmpsb
cwtl
jo
rorl
lahf
popf
sub
sub
add
and
repz
inc
sub
fwait
outsb
lcall
insl
add
sbb
test
or
inc
mov
ja
fsts
mov
icebp
mov
hlt
dec
loop
inc
lret
ret
dec
sti
scas
xor
cld
stos
xchg
sub
sbb
ljmp
sti
scas
test
pop
xor
mov
in
rcll
clc
dec
cmpsb
mov
decb
mov
cld
orb
in
pmulhw
dec
lock
xchg
lds
testb
cmpl
jl
sbb
cmpsb
sbbb
ljmp
jge
int3
dec
dec
cmp
cmp
jmp
inc
sub
fiadds
lahf
stos
pop
and
pushf
nop
inc
add
push
push
push
inc
popf
pop
repz
les
mov
stos
pop
adc
sub
adc
enter
aad
push
pop
cmp
outsb
mov
mov
push
orb
jne
mov
popf
sub
and
shrb
ret
push
das
cmp
adc
mov
sub
ljmp
test
pop
push
mov
mov
out
test
push
outsb
mov
enter
cmp
jmp
int
and
loope
popa
pushf
ja
ret
pop
call
or
jge
rcrl
and
loopne
mov
out
aad
sub
pop
sti
jp
bound
adc
or
xchg
int3
loop
mov
mov
push
sahf
jmp
aas
icebp
mov
jae
jecxz
or
in
and
lcall
loopne
mov
pop
cmovno
push
pop
xchg
pop
mov
fstl
dec
xchg
lods
jnp
sbb
mov
cltd
mov
mov
push
pop
shlb
mov
nop
cmp
fsubrs
imul
popf
aad
lea
mov
adc
pop
adc
xchg
inc
jp
leave
stos
gs
xchg
int3
push
out
mov
shr
push
outsl
push
push
or
cmp
and
pop
ja
les
sub
pop
lret
add
pushf
push
shrb
mov
lock
mov
sub
ficoml
mov
clc
and
test
jbe
jae
outsb
movsl
xlat
out
xchg
call
adc
sbb
jbe
sbbb
mov
ret
or
sbb
mov
dec
jecxz
or
imul
xchg
pop
test
repnz
or
data16
mov
lods
aas
inc
fnsave
dec
out
xchg
pop
hlt
ret
lds
xchg
sub
int3
lret
xor
cmp
pop
push
in
nop
xor
popa
mov
mov
xorb
add
rdpmc
xor
xchg
sub
mov
loopne
cmpsb
adc
shrb
std
or
lds
pop
dec
mov
pop
movsl
sub
inc
lods
test
mov
ss
jns
xchg
stos
push
fwait
sub
mov
loopne
inc
adc
loop
adc
sbbl
shlb
push
inc
jp
fs
jnp
insb
push
cmc
push
xor
loopne
pop
mov
and
mov
or
hlt
mov
hlt
dec
jecxz
je
loopne
shl
movnti
ret
mov
pop
popf
push
sar
pop
jbe
test
push
ds
push
pop
mov
dec
test
ret
es
std
mov
pop
enter
mov
xchg
inc
add
xchg
ret
pop
loopne
sub
rorl
lea
mov
adc
popf
subb
outsl
jg
repz
sahf
outsl
jno
notb
in
imul
ret
sub
loope
mov
xor
sbb
sbb
cs
pop
sub
fwait
jne
clc
das
mov
xor
inc
jle
icebp
andl
jnp
stos
test
test
sbb
jle
and
dec
aam
jecxz
sub
jp
hlt
add
xchg
jns
pop
je
arpl
int3
cmp
jmp
push
shl
clc
and
mov
jmp
jo
add
inc
mov
loopne
divb
inc
mov
mov
and
gs
repz
mov
cwtl
movsb
ss
pop
int
mov
loope
pop
jle
call
sub
shll
push
pop
mov
dec
popf
repz
loope
mov
jge
xor
mov
scas
push
push
fdivrl
int
aas
lcall
dec
jl
pusha
sbb
icebp
mov
cmpsl
sbb
lret
sahf
mov
dec
pop
xor
inc
shll
sub
and
mov
cmp
fwait
pop
sarl
xchg
or
pop
idivb
and
ds
fs
dec
ficompl
sbb
mov
inc
mov
gs
mov
dec
icebp
ljmp
mov
loopne
imul
and
pop
jp
xlat
or
pop
mov
cltd
or
cmp
testl
xor
ret
dec
or
repnz
cmpsl
imul
popf
enter
dec
xor
inc
insb
sub
pop
sbb
mov
sub
mov
jbe
test
add
cmp
mov
pop
lcall
in
and
fidivs
pop
fs
popf
jo
pop
mov
adc
push
mov
sahf
xchg
sub
fwait
ss
mov
dec
pop
scas
cmp
lret
aas
fisttpl
sbb
shl
jle
rcrb
rcr
ror
loopne
pop
rcl
mov
int
mov
lret
loope
popa
rcl
jg
enter
mov
loop
jne
jmp
ss
cs
lds
jns
cli
push
xor
jae
push
roll
jge
out
loopne
cwtl
das
nop
add
cs
neg
jnp
lea
fisubl
dec
or
jns
loope
call
adc
cmp
inc
or
test
jne
inc
mov
cld
pop
push
js
loope
js
add
sti
mov
out
cwtl
jne
lret
add
sbb
push
xor
push
xchg
and
bound
out
mov
lods
xor
test
mov
inc
xlat
jle
out
dec
popf
addb
xchg
lahf
jae
push
filds
mov
flds
push
ljmp
lret
dec
cld
fs
sbb
jge
mov
pop
pop
stos
mov
stc
push
mov
pop
xchg
lea
mov
push
cld
pushf
xchg
fwait
inc
pop
into
iret
xchg
xor
or
andl
mov
pop
out
jmp
adc
mov
jo
sbb
nop
into
test
lret
dec
adc
push
mov
jno
test
cmc
pop
lcall
mov
int3
xchg
arpl
mov
pop
jb
jb
mov
jne
adc
xchg
sbb
lret
dec
adc
daa
sub
inc
xor
insl
cmc
jo
push
mov
jmp
or
xchg
sbb
out
jb
push
cli
or
enter
call
pusha
xor
dec
sbb
sbbb
sti
mov
out
xchg
mov
jae
xor
dec
push
cli
gs
mov
call
fmuls
xlat
jns
pop
jae
inc
les
xor
je
mov
dec
adc
fsub
insl
jb
or
cld
add
push
mov
sub
stos
dec
adc
loopne
inc
lea
push
jl
mov
mov
mov
pusha
or
pop
imul
cli
cwtl
inc
mov
xlat
js
fistpll
inc
roll
aas
xchg
mov
lock
test
jnp
jle
lcall
mov
pop
push
jp
xchg
mov
mov
mov
arpl
scas
push
add
xchg
lds
push
lret
jo
lcall
sbb
push
mov
test
insl
jle,pn
jb
cmp
xor
imul
cmp
jne
pavgw
dec
or
xor
mov
cmpsb
imul
mov
mov
leave
mov
shrl
xchg
jo
fsubrp
push
inc
jae
and
jecxz
sbb
xor
or
jecxz
sbb
push
pop
scas
mov
or
adc
dec
ret
lea
cmp
fists
call
mov
movsb
dec
or
int3
lret
pusha
sbb
sbb
inc
mov
mov
out
fcmovu
jnp
sbb
nop
cmp
enter
pop
imul
or
mov
mov
loopne
stos
and
push
add
ret
fs
push
jbe
ds
test
lret
xor
add
cwtl
cs
cmp
in
addr16
punpcklbw
mov
mov
xor
adc
xor
push
fwait
cmp
in
pop
std
sub
stos
sub
cmp
dec
aas
mov
fldl
and
sbb
sti
jno
std
es
fwait
movsb
cmp
pop
iret
mov
jns
pop
mov
cltd
ds
pop
std
sbb
lret
inc
js
xchg
mov
mov
mov
movsl
sbb
je
pop
std
fwait
insb
dec
or
xabort
xchg
ss
mov
cmp
cwtl
ds
mov
mov
sbb
lret
popf
ja
iret
ret
add
xchg
cmp
fiaddl
jle
cmp
dec
imul
add
pushf
mov
pop
testl
push
pop
std
mov
mov
jg
mov
movsl
xor
out
push
xchg
subl
push
rcl
out
cld
hlt
or
push
fnstenv
xchg
push
pop
cmp
sub
jle
jp
add
jnp
push
aad
in
in
pop
clc
pop
hlt
les
xchg
mov
subl
pushf
xor
or
jle
icebp
mov
pop
ss
mov
daa
repz
popf
iret
xchg
cmp
into
xchg
cmp
push
in
pushf
add
outsl
testb
flds
and
into
xchg
btr
andl
insl
call
jmp
lock
inc
int3
xchg
ds
mov
xor
mov
jne
popf
loopne
enter
outsb
or
imul
mov
and
mov
adc
rcrl
inc
or
jae
pop
clc
popa
inc
lret
enter
sub
iret
xchg
xchg
aas
fadds
clc
pushf
inc
xchg
pop
les
ret
push
cltd
mov
mov
mov
add
movsb
aaa
fwait
jmp
sti
inc
or
mov
pop
hlt
jmp
xchg
jmp
sti
jle
mov
lods
out
bound
push
cld
jle
jmp
in
mov
mov
dec
adc
popf
jmp
lods
xchg
cmp
sbb
popa
mulw
jg
ljmp
cmp
rorl
push
data16
cli
fnstenv
loopne
jns
push
stos
ss
mov
add
sub
jbe
insb
xchg
mov
jae
mov
iret
xchg
jp
mov
adc
sarb
jmp
dec
jl
loope
sahf
push
nop
sub
mov
aas
fildl
dec
inc
call
lods
enter
mov
inc
push
xor
mov
push
pop
orl
nop
ds
out
int
pop
jp
clc
jno
das
mov
mov
lods
sub
mov
movsl
xor
call
cmp
adc
push
cs
popf
test
stos
icebp
enter
in
imul
sbb
dec
sub
inc
call
or
movl
xchg
aas
jae
sbb
out
pop
loope
loope
sahf
cmp
loopne
nop
push
xor
add
pop
sarl
mov
adcl
dec
pusha
repnz
mov
stos
or
lock
sbb
inc
sarl
ds
pop
cmpsb
cmp
xlat
mov
xchg
repnz
pusha
xor
and
pushf
mov
adcl
nop
inc
lods
push
stc
pop
pop
mov
sbb
aas
jl
mov
and
scas
in
inc
test
push
hlt
mov
lds
sarb
popf
pop
aaa
test
inc
fs
sub
push
insb
push
push
dec
mov
pop
inc
cmp
xchg
in
pusha
notb
sub
jbe
jo
movsl
pop
or
jge
cltd
xor
repz
or
int3
in
pop
or
jo
mov
daa
dec
fsubl
lods
mov
stos
jl
daa
in
les
pop
aas
es
aad
or
fiadds
add
outsl
or
cmp
pop
aad
test
push
cli
ds
std
pop
adc
lods
in
lods
mov
cmpsl
xchg
cld
pop
sbb
fwait
ds
or
fsubr
sub
push
push
cmp
lret
lods
fnstsw
adc
add
sbbb
cmp
sbb
cmp
jecxz
ljmp
in
cltd
clc
xor
movsb
cmp
fiaddl
xchg
dec
fs
daa
cmpsl
dec
sti
xchg
cmp
fwait
cld
pop
fwait
mov
adc
mov
adcb
inc
adc
sub
out
stos
mov
bound
push
stc
test
ds
inc
pop
mov
es
daa
movsb
mov
dec
push
pushf
insl
fwait
stos
xor
jo
add
push
sahf
inc
loope
mov
or
cltd
add
adc
inc
orl
mov
mov
push
cld
or
pop
lahf
inc
adc
popa
cmp
xlat
js
xor
into
mov
mov
push
cld
pop
xchg
notb
mov
js
adc
enter
sbb
push
mov
push
push
ror
pop
nop
ds
mov
movsb
arpl
movsb
cltd
push
add
mov
adc
bound
mov
mov
leave
push
add
pop
fnstcw
add
cmpsl
std
testl
mov
stos
fs
cmp
in
test
xor
xchg
loope
xlat
icebp
in
mov
mov
jb
ss
in
iret
sub
lea
bswap
jmp
clc
mov
adc
dec
mov
jmp
push
mov
mov
fwait
inc
dec
add
push
push
std
add
pop
push
mov
xor
jl
and
addl
push
or
int
adc
jnp
xchg
aaa
jo
lods
mov
sbb
cmp
cmp
dec
popf
adc
subb
push
push
aad
lock
addl
pusha
dec
fadds
int3
test
mov
mov
cmp
push
shrl
rcll
repnz
mov
loop
mov
shrb
mov
push
xchg
inc
push
add
or
inc
mov
popf
lcall
out
fcoml
daa
mov
add
pop
hlt
decl
mov
fsubrp
inc
xlat
sbb
dec
stc
pop
xor
fs
inc
and
push
dec
sub
mov
in
fs
mov
xchg
clc
push
push
roll
lods
pop
sub
cmp
pop
lods
mov
mov
lods
pusha
dec
fnstsw
jnp
pop
adc
push
jnp
not
ret
in
sbb
push
icebp
data16
xchg
ret
pusha
sbb
mov
dec
cmp
jns
iret
sbb
xchg
outsb
dec
ja
loope
add
dec
icebp
jae
inc
lahf
shlb
cwtl
mov
sahf
dec
dec
adc
into
fs
fwait
addr16
mov
cmp
fldcw
sub
push
mov
mov
mov
xor
test
mov
xor
adc
stos
sub
and
cltd
js
js
test
fcomp
fimuls
dec
rolb
js
mov
shl
pushf
movl
shl
push
and
andl
jb
int
pusha
out
pop
xor
jns,pn
ja
sbb
filds
add
cmpsl
pop
push
jp
movsl
nop
sub
mov
mov
mov
sbbl
stos
mov
stos
aam
sub
out
mov
ljmp
xor
rolb
leave
cmp
add
jae
bswap
sbb
jbe
inc
dec
or
lcall
sbb
movsb
mov
pop
notl
push
push
mov
ljmp
dec
or
pop
jl
dec
repz
push
call
mulb
mov
stos
movsb
xor
sub
andl
xor
pop
jp
xlat
inc
mov
jb
lcall
leave
and
push
or
xor
dec
or
test
mov
push
mov
jne
fwait
xor
xchg
mov
daa
test
ja
fldenv
pop
add
enter
xchg
aas
mov
jae
lea
lock
push
jge
add
out
in
cli
sbb
jle
pop
dec
icebp
pop
stos
mov
jne
outsb
in
outsl
dec
or
inc
push
mov
in
mov
push
sub
imul
xor
dec
inc
lock
call
repz
mov
movsl
movsb
xchg
aaa
shlb
inc
cs
hlt
pushf
enter
push
add
lds
rorl
dec
popf
cmp
push
je
sti
adc
outsb
in
rclb
mov
mov
add
icebp
addl
in
adcb
scas
daa
hlt
call
mov
das
sub
jl
xor
imul
or
or
push
pop
test
les
jge
cmp
arpl
pop
cmp
sub
push
xor
aad
stos
es
sti
outsb
push
pop
push
adc
in
inc
cmp
xchg
lock
cs
into
into
lea
jb
cmpsb
js
pop
gs
push
loop
addr16
fsts
mov
xchg
cmp
mov
mov
jg
pusha
scas
hlt
pop
cmc
je
and
cmpsl
sub
rclb
cmp
mov
das
cmc
push
popf
jle
lds
leave
lahf
inc
or
pop
notb
sub
push
addb
iret
js
flds
fildl
mov
std
pop
pop
cmp
outsl
cltd
sub
or
jp
test
push
mov
stos
cs
inc
adc
pop
lcall
cltd
es
incl
out
add
xchg
aaa
out
pop
cli
pusha
adc
out
jae
inc
push
std
jge
or
inc
push
mov
cli
ret
loopne
sub
lret
cld
insb
out
adc
xchg
lods
aas
popa
repz
mov
addb
push
add
pop
xchg
aas
fwait
in
arpl
push
movsl
cmc
and
adcl
or
xor
push
push
cmpl
repnz
inc
sbb
and
cmp
roll
and
mov
stos
pop
push
enter
hlt
sbb
xor
dec
mov
jp
popf
aaa
cltd
ret
mov
inc
or
push
mov
or
inc
jle
push
jg
insb
in
sarl
xchg
ja,pn
loopne
cmp
lods
mov
sub
pop
fcomp
jge
xchg
add
mov
jne
xor
cmpsb
stos
jp
xchg
cmp
popf
cmp
sub
idiv
adc
ljmp
lock
test
jle
orl
xor
std
rorl
adc
icebp
das
mov
cmc
jle
mov
insb
lods
lret
pop
add
xchg
adc
add
pop
mov
add
repnz
jno
repnz
imul
jae
cld
adc
push
lods
daa
shll
mov
mov
mov
daa
sub
sbb
ret
inc
add
and
xor
mov
sti
ljmp
cmp
add
dec
in
push
inc
push
call
jns
frstor
lods
ret
jo
scas
addr16
das
mov
jae
add
sbb
xchg
aaa
leave
dec
stos
sub
mov
sbbl
sub
add
adc
cmpsb
xor
adc
ret
xchg
cs
pop
call
push
ret
popa
test
pop
jae
jl
mov
insl
es
js
xor
add
sub
mov
pop
pusha
inc
or
xchg
adc
push
jo
pop
mov
xchg
adc
mov
mov
mov
icebp
push
add
es
lea
mov
cwtl
push
das
enter
test
outsl
jge
icebp
loope
push
pop
ljmp
idivb
xchg
lock
nop
jl
xor
dec
and
sti
gs
dec
jl
mov
dec
pop
inc
loopne
cmp
aad
hlt
in
mov
rolb
add
sub
adcb
push
add
fs
inc
mov
mov
xchg
inc
enter
inc
adc
adc
cwtl
rorb
cmpsl
div
pop
cld
movsb
ljmp
in
mov
sbb
or
mov
sbb
push
xchg
cmp
dec
stos
xor
dec
ficompl
mov
sub
ss
jne
xchg
jecxz
add
jge
hlt
test
jb
in
imul
push
xchg
int3
sbb
pop
cli
pop
inc
fistpll
mov
or
mov
aam
adc
sub
or
pusha
out
xchg
adcb
jbe
in
xlat
addr16
mov
lods
adc
shrl
push
add
pusha
fldl
clc
cmc
stos
das
push
jl
notb
xchg
cmp
stos
adc
push
shrb
les
imul
lea
outsl
dec
fcompl
or
jl
lret
mov
jl
jmp
popa
cmc
xor
movsb
lea
jge
inc
scas
stos
xor
mov
jno
lret
dec
adc
push
std
mov
lea
outsl
lock
mov
faddl
add
movb
test
inc
inc
push
stc
mov
cmpsb
adcl
push
pop
clc
sbb
inc
mov
jge
xlat
lds
pop
inc
pop
idivl
pop
data16
jmp
leave
mov
fstl
cmp
push
cmp
xchg
ret
pop
push
test
mov
fwait
enter
lret
jae
leave
popf
pop
les
jecxz
int
je
loopne
push
idivl
mov
mov
stos
mov
mov
adc
push
in
inc
adc
add
mov
test
adc
mov
aad
inc
xor
arpl
cmp
setns
arpl
pop
popa
fdiv
fnstsw
push
hlt
pop
xlat
out
mov
out
ret
and
jbe
mov
xchg
mov
xchg
jno
mov
idivb
dec
les
push
sbb
in
insb
imul
stos
add
cmp
xchg
inc
fwait
leave
call
xor
mov
rcrl
mov
mov
stos
xchg
sbb
mov
jnp
mov
dec
imul
fcompl
faddl
dec
out
jne
sbb
arpl
xchg
and
xchg
notb
mov
xor
jmp
sar
fs
jecxz
mov
or
push
jl
jge
adc
push
inc
addl
fstpt
mov
mov
push
jge
inc
lods
xor
ds
adc
xor
push
push
jae
or
push
leave
mull
sbb
shr
mov
jns
std
cmp
out
jmpw
push
sti
push
xchg
mov
fcomip
pop
les
gs
pushf
mov
lods
es
shll
or
fadds
mov
lcall
sub
sub
pop
add
adc
mov
dec
lock
iret
lds
inc
or
popf
repz
arpl
xor
mov
inc
adc
mov
jmp
in
jp
fs
xchg
adc
or
cmp
imul
jg
ficoms
lret
push
ret
outsb
ljmp
fwait
cmp
mov
mov
jg
lret
mov
test
popl
lcall
jno
cmp
cmc
xchg
inc
fadd
push
and
mul
mov
mov
lret
jne
adc
ss
inc
push
insl
imul
xchg
fdivrs
mov
nop
cmc
orb
leave
xchg
inc
jg
cmpsl
insb
popf
xor
test
data16
stos
fldenv
divb
mov
xchg
movsb
into
repz
mov
adc
xchg
arpl
push
ret
jne
push
nop
fidivl
push
push
jmp
adc
nop
inc
mov
loopne
jmp
cld
lahf
inc
les
adc
sbb
mov
testb
clc
je
sbb
mov
int3
xchg
fsubl
in
add
and
test
movsb
jmp
sarl
sarb
adcb
mov
pop
push
inc
or
jle
std
cwtl
icebp
mov
out
push
xchg
cmp
aas
push
std
aaa
rclb
pop
lcall
jge
arpl
ss
push
sti
test
loop
jmp
adc
inc
cmpsb
aad
mov
push
cld
pop
bound
jbe
jecxz
mov
imul
fadds
jne
sarl
fs
lods
insl
mov
push
cmp
jbe
shlb
adc
rorl
and
int
test
xor
jle
fwait
or
sbb
jae
mov
inc
fiadds
cmpsl
mov
movsl
icebp
pusha
scas
pusha
movsb
xor
lods
pop
cld
mov
test
nop
inc
or
cmpsb
push
int3
mov
xor
or
mov
push
inc
xlat
test
mov
cmc
sbb
jmp
or
jnp
pop
mov
jbe
mov
pcmpeqb
mov
mov
in
loopne,pn
loopne
cmp
cmp
mov
mov
dec
out
int
pop
add
outsl
mov
adc
aad
jmp
mov
fnstcw
ret
icebp
loop
mov
mov
test
loop
mov
fmull
aam
pop
push
cmp
mov
fbld
push
and
test
loopne
pop
aas
xchg
mov
pop
sub
jne
roll
sbb
sti
jae
cmp
mov
stos
ret
mov
filds
mov
or
shll
mov
mov
int3
arpl
hlt
mov
push
mov
mov
call
lds
movsb
cs
mov
and
movsb
xchg
aaa
inc
in
xchg
cmp
mov
xor
jne
in
mov
adc
loopne
test
lds
lahf
mov
mov
add
cs
fs
cli
gs
imul
mov
lret
xchg
cmp
adc
adc
jmp
shrb
jl
stos
bound
jecxz
mov
cli
idivl
out
lea
pop
cmp
add
test
push
add
dec
push
jno
xlat
cwtl
aam
test
mov
add
mov
lcall
or
mov
mov
add
adc
xchg
mov
sbb
je
inc
adc
jo
lret
out
and
cmp
or
mov
xchg
sub
lods
and
xor
xor
push
call
sbb
imul
cld
out
out
cmp
in
std
mov
sahf
jmp
mov
adc
add
mov
ss
dec
sbb
stc
mov
daa
cmpsl
or
jecxz
mov
repnz
frstor
pop
inc
insb
or
fsts
mov
pushl
mov
dec
test
jmp
scas
lret
les
out
jge
mov
fidivs
loop
add
xchg
mov
and
adc
ja
fisttpll
cmpb
mov
jmp
andb
dec
in
and
dec
cltd
cmp
out
mov
sbb
jle
stc
sbb
inc
inc
fidivl
mov
jb
cs
push
pop
add
sub
xlat
lea
aad
add
pop
push
adc
fildl
movsl
xor
lods
mov
jns
xchg
inc
rclb
cwtl
push
add
sbb
mov
jg
sub
sbb
dec
fs
sti
bound
loope
xchg
push
negl
pop
add
mov
mov
xchg
jg
push
inc
and
shr
push
mov
out
cltd
inc
sbb
cs
dec
mov
xor
aas
mov
rcrl
cmp
orb
ss
test
rorb
jl
cld
pop
mov
mov
iret
lea
mov
mov
inc
adc
jle
jp
notb
xor
sarl
cltd
das
std
mov
ss
lret
adc
dec
aas
xchg
inc
xchg
stos
sub
lahf
test
inc
sub
shlb
and
cmpsl
mov
aas
push
xor
ja
push
fidivrl
mov
add
mov
shll
cmpsl
push
shl
push
enter
pusha
xchg
insl
mov
inc
out
push
rorl
outsl
in
ja
out
imul
sti
push
mov
jmp
mov
out
loope
xor
scas
pop
adc
xor
dec
in
add
insl
gs
orb
ret
mov
sarb
shll
pop
fsub
insb
sub
cmp
mov
rorb
lods
enter
pushf
inc
repz
adc
lcall
je
arpl
pop
push
xor
in
aam
mov
pop
mov
inc
lods
ret
mov
mov
aam
cltd
mov
fimuls
or
xor
out
cmp
add
mov
jo
jb
jmp
movsl
sub
ret
mov
pop
std
out
mov
sbb
lcall
pop
pop
inc
daa
mov
mov
leave
test
shlb
fdivrs
and
xchg
into
xor
xchg
sbb
mov
push
iret
mov
faddl
or
xor
jg
fcmovnbe
sbbl
pop
repz
clc
loop
lea
jo
push
cld
jno
adcl
inc
sbb
cmp
lret
xor
call
repz
loop
loopne
sbb
stos
jl
int3
mov
pop
stc
adc
inc
or
push
or
clc
pop
push
push
add
mov
jmp
cmp
imul
push
inc
sarb
push
xchg
test
xchg
in
out
enter
add
mov
cmpsl
das
stos
push
out
cli
fwait
nop
stos
sub
shl
cs
mov
stos
mov
inc
adc
popf
jg
mov
lcall
and
clc
or
or
in
xor
adcb
dec
or
cmc
fnstcw
mov
cmp
push
xor
ja
mov
mov
fwait
out
loope
inc
adc
sub
fidivrl
icebp
push
add
pop
or
jo
xchg
rcrl
lahf
cmp
inc
sub
sbb
inc
sbb
sbb
sbb
ja
inc
faddl
rorl
mov
and
pop
inc
mov
lea
push
push
sti
push
jmp
push
ljmp
mov
lcall
mov
stos
jg
jg
mov
push
push
jae
add
adcl
call
pop
roll
fadds
scas
incl
mov
push
in
jnp
dec
lea
push
mov
pop
xchg
xchg
push
cmpl
jns
filds
das
shl
lret
mov
sbb
xor
add
lods
outsl
out
sbb
jb
xlat
or
adc
sbb
nop
inc
mov
rcrb
hlt
push
mov
xchg
imul
inc
or
or
mov
sbbl
mov
sahf
mov
cwtl
ds
rcl
arpl
push
stc
je
loopne
bound
mov
add
lea
push
flds
test
push
and
orl
mov
dec
mov
jmp
mov
or
call
std
adc
stos
fwait
inc
or
mov
sub
mov
pop
cmp
xchg
orb
mov
lods
or
or
loope
push
push
pop
cli
dec
inc
mov
popf
and
iret
mov
cmpsb
xor
out
lods
pop
lods
mull
inc
jns
pop
std
out
xor
pushf
rclb
xchg
orb
mov
mov
xchg
jp
es
lods
mov
sbb
mov
scas
cltd
cmp
ret
xchg
inc
roll
cmpsb
ss
or
negb
mov
movsb
xchg
sbb
ljmp
clc
test
push
xor
pop
mov
cli
xchg
shlb
addb
push
jp
fldl
shrb
mov
mov
lret
xchg
adc
psrlq
mov
mov
or
rorl
stos
ss
std
gs
sub
pop
orb
mov
aam
iret
loopne
sahf
fwait
pop
adc
mov
lahf
aaa
ljmp
ret
mov
or
sarb
or
pop
mov
arpl
fistpll
xor
sbb
call
adc
lods
cs
mov
sti
pop
mov
movsb
daa
mov
jnp
cld
xchg
div
pop
fcmovne
push
add
pop
rclb
xchg
sub
pop
lock
jp
stos
cmpl
jns
aam
repz
mov
leave
mov
mov
fnsave
movsl
pusha
jmp
add
jnp
and
repnz
lods
mov
stos
inc
or
inc
or
jge
ljmp
stc
mov
and
stos
pop
add
rcrb
data16
inc
inc
jb
and
cwtl
adcl
aaa
dec
or
les
lock
cmpsl
das
adc
xchg
mov
enter
cli
adc
hlt
mov
imul
and
in
jne
xchg
dec
loope
fisubrs
mov
cmc
push
mov
jge
call
add
cwtl
in
sub
pop
inc
repnz
xchg
sub
or
or
push
lods
sub
imull
aam
out
lea
inc
or
fiadds
in
xchg
add
lea
into
repnz
les
cmc
and
cltd
lcall
dec
dec
adc
mov
sarl
dec
mov
dec
adc
add
shll
pop
mov
xor
jo
ficomps
pop
add
in
outsb
enter
repz
mov
loope
xchg
inc
add
fstpt
pop
jg
enter
fcoms
cwtl
cmp
add
jmp
jo
repz
repz
add
push
pop
cli
rorb
frstor
stos
jb,pn
push
pop
xor
dec
or
pop
decb
fsubs
mov
test
movsb
ds
std
pop
pop
and
mov
mov
or
push
xchg
add
dec
or
add
orb
pop
mov
xor
loop
and
push
clc
cld
pop
ss
sub
pop
pop
fdivl
enter
ss
pop
pop
ljmp
mov
pushf
inc
dec
repnz
out
lcall
loopne
fdivrl
cli
dec
or
mov
lods
inc
adc
mov
popa
xor
mov
out
ljmp
sti
leave
test
test
lds
xchg
retw
les
xchg
push
xchg
adc
xchg
push
out
jae
enter
ljmp
cmp
addr16
pop
sbb
dec
ror
mov
mov
xor
mov
adc
xchg
std
jb
push
les
and
xor
mov
das
lds
cmp
xchg
jmp
adc
xchg
mov
xor
mov
mov
add
in
jno
pop
inc
or
fimuls
lds
fidivl
outsb
sub
scas
int3
inc
or
mov
faddl
mov
ret
popa
sub
sbb
xchg
aaa
fisttpll
mov
sub
and
xchg
cmp
jno
mov
test
sti
pop
pop
ret
dec
push
adc
jp
jecxz
cmp
or
es
jle
iret
scas
adc
in
add
xchg
and
mov
sub
or
mov
cli
pop
daa
mov
dec
scas
inc
outsb
in
test
rorl
repnz
sbbb
adc
roll
xlat
gs
fists
mov
fdivl
or
xchg
rcrb
cmp
mov
pop
jecxz
ss
add
ja
xchg
push
jmp
push
xchg
mov
jb
sbb
nop
daa
insb
std
cmp
mov
out
and
arpl
mov
ljmp
mov
lahf
mov
fisubl
mov
into
sub
fistpl
out
test
jg
stc
mov
or
jae
adcb
xchg
sub
and
xor
sbb
push
stos
cmp
push
fidivl
mov
push
fisubs
scas
mov
les
jne
push
push
jmp
xlat
cld
xchg
or
or
mov
cmp
lods
imul
into
push
in
jmp
fs
and
push
mov
and
xchg
sub
mov
clc
pop
sub
dec
lods
inc
fstp
insb
out
test
rorb
push
sbbb
adc
ret
mov
loopne
idivb
call
or
xchg
into
pop
movsb
cmp
mov
pop
loop
ss
add
js
xchg
push
jmp
push
call
pop
stos
sbb
daa
push
cmp
sub
dec
pop
lock
int3
arpl
mov
ljmp
xchg
lahf
mov
mov
jns
es
int
inc
fistpl
out
xchg
jge
stc
scas
inc
or
pop
add
xor
pop
jbe
push
test
addr16
imul
test
sbb
nop
dec
frstor
scas
mov
ret
repz
mov
push
jmp
std
xchg
or
or
mov
cmp
lods
or
push
out
pusha
int
xchg
pop
jbe
push
mov
and
xchg
sub
mov
negl
mov
dec
stos
inc
fstp
imul
popf
cld
fs
sub
dec
sbbb
adc
inc
mov
dec
loope
hlt
mov
jmp
inc
fdivl
or
xchg
int3
pop
movsl
cmp
in
sbb
loope
ss
add
jns
xchg
push
jmp
push
add
adc
ss
daa
push
mov
icebp
jge
int3
arpl
lahf
js
shll
ljmp
test
lahf
mov
mov
ja
es
lret
sub
in
lock
jnp
stc
lods
aas
push
movsl
jo
adcb
xchg
sub
ret
ss
jecxz
loope
je
push
cmpsb
xor
xchg
xchg
dec
fisubl
lahf
sub
ss
and
mov
push
in
inc
sar
xchg
add
es
push
mov
cmp
test
lret
sti
pop
into
gs
sbb
push
dec
mov
and
xchg
sub
add
mov
hlt
push
sub
xchg
inc
fcompp
push
gs
sub
sbb
sub
cmp
pusha
dec
loop
repnz
add
inc
fnsave
mov
cmp
cmpsb
cmp
sbb
les
cmp
jecxz
xor
add
adc
xchg
sub
cmp
inc
mov
fcmovne
fs
cs
pusha
lock
and
mov
jne
daa
mov
leave
es
fcoml
icebp
mov
arpl
stos
cmp
sbbl
rcrb
aaa
push
loope
loop
jb
push
movsb
xor
gs
testl
movsl
cmp
insb
sbb
pop
mov
loope
mov
push
in
inc
sar
xchg
add
je
xchg
and
xchg
sub
ja
shrb
leave
pop
lock
pop
iret
data16
js
dec
scas
in
test
outsb
xchg
sub
xor
mov
repz
sub
test
push
cmpsb
dec
addr16
mov
mov
test
jl
lds
popf
mov
jecxz
lock
push
in
fidivs
add
cld
xchg
enter
mov
sbb
fidivrs
cmp
insb
jmp
jp
mov
mov
loopne
or
movsl
pop
mov
xor
aam
xchg
bnd
into
gs
jns
into
sub
xchg
and
mov
je
sub
enter
push
jmp
fs
test
lret
cld
mov
cmp
dec
loop
jno
push
mov
fnsave
xchg
mov
cld
xchg
dec
fsubs
mov
sub
pop
pop
mov
loope
mov
push
out
inc
sar
xchg
add
or
and
mov
mov
sub
jbe
shlb
enter
pop
shlb
sbb
dec
scas
out
test
insl
xchg
sub
xor
mov
repnz
sub
test
shrl
movsl
dec
loopne
data16
mov
mov
test
or
lds
pop
dec
jecxz
out
rcrl
push
jecxz
fbstp
add
and
xchg
std
xchg
push
cmpsl
ds
sbb
fnstsw
cmp
imul
jp
lea
mov
fbstp
adc
sub
aam
xchg
bnd
iret
or
in
test
xchg
and
mov
jae
sub
add
inc
ficoms
icebp
mov
ja
cld
test
insb
leave
sbbl
lea
cmp
dec
loop
jo
push
mov
ret
fidivs
test
xchg
dec
xlat
movsl
cmp
push
mov
sub
pop
pop
mov
loope
scas
push
pop
out
aas
sar
xchg
add
or
push
mov
sub
jne
shlb
pop
lock
pop
shrl
sbb
dec
lods
out
xchg
insb
xchg
sub
xor
sub
adcl
push
movsb
dec
loope
gs
mov
mov
xchg
cmp
movsb
cmp
pop
dec
jecxz
out
ret
mov
add
inc
loopne
jae
mov
xor
push
cmpsl
ds
sbb
sbb
cmp
push
jecxz
das
mov
mov
fidivs
adc
xchg
sub
cmp
dec
mov
pop
bnd
shlb
lcall
pop
in
xchg
cs
jg
mov
jb
sub
add
fists
mov
jbe
std
cmpsl
cmp
cmpsb
imul
sbb
mov
cmp
dec
loop
outsl
rcrl
imul
hlt
addl
inc
movsl
cmp
imul
pop
mov
loope
scas
or
call
xchg
and
sub
je
shlb
pop
lock
imul
imul
xor
sub
adcb
push
mov
icebp
mov
mov
xchg
cmp
movsb
cmp
pop
dec
jecxz
in
ret
mov
add
inc
loopne
jb
mov
xor
push
cmpsl
ds
sbb
pop
stos
lds
cmp
imul
pop
out
mov
fnsave
bt
mov
xor
test
bnd
shlb
lcall
pop
in
xchg
cs
jle
mov
jb
sub
add
fists
icebp
mov
jne
std
cmpsb
cmp
cmpsb
imul
sbb
mov
cmp
loop
outsb
rcrl
imul
repz
inc
movsl
cmp
push
ret
pop
pop
mov
loope
scas
or
lock
pop
ja
xchg
and
sub
je
shlb
pop
lock
imul
imul
das
mov
sub
adcl
dec
loope
gs
mov
mov
xchg
cmp
movsb
cmp
pop
dec
jecxz
in
ret
mov
add
aas
loopne
jno
mov
xor
push
cmpsl
ds
sbb
push
stos
lds
cmp
push
mov
mov
fdivl
push
mov
xchg
sub
cmp
dec
mov
pop
bnd
shlb
lcall
pop
in
xchg
cs
jge
mov
jb
sub
add
fists
icebp
mov
je
std
movsl
cmp
cmpsb
imul
sbb
mov
cmp
dec
loop
insl
rcrl
imul
repnz
inc
movsl
cmp
addr16
cwtl
sub
pop
pop
mov
loope
scas
or
cmp
call
nop
and
sub
je
shlb
pop
lock
imul
imul
cs
sub
adcb
push
mov
icebp
mov
mov
xchg
cmp
movsb
cmp
pop
dec
jecxz
jmp
pop
sbb
loopne,pt
jo
mov
xor
push
cmpsl
ds
sbb
adc
ss
addr16
jecxz
das
mov
mov
or
cs
sub
cmp
dec
mov
pop
bnd
shlb
lcall
pop
in
xchg
cs
jl
mov
jb
sub
call
dec
loopne
out
mov
jae
movsb
cmp
cmpsb
push
test
mov
cmp
dec
loop
insb
ret
das
imul
icebp
addb
inc
aad
cmp
sbb
sub
pop
pop
mov
loope
lods
or
cmp
call
and
sub
movsb
add
lock
push
pop
js
dec
test
xchg
sub
sub
dec
sub
push
mov
icebp
mov
mov
xchg
ja
lds
cwtl
movsl
cmp
pop
dec
jecxz
jmp
pop
sbb
loope,pt
jo
mov
xor
call
xchg
sbb
pop
cmp
addr16
jecxz
mov
mov
or
cs
sub
hlt
cmp
dec
mov
pop
bnd
shrl
cltd
jns
lret
sub
xchg
xchg
cs
jl
movsb
lods
aas
mov
jno
sub
call
dec
loope
in
mov
jae
jmp
xchg
mov
fmull
or
imul
icebp
addl
cmp
gs
mov
daa
ret
pop
pop
mov
shr
jp
js
or
cmp
call
lea
push
mov
scas
xchg
loopne,pn
cmp
mov
les
cmc
push
aam
xchg
jns
dec
cmpsl
repnz
imul
dec
out
dec
lds
aam
inc
sahf
dec
jecxz
arpl
mov
mov
cmpsl
call
or
cmp
dec
in
jmp
imul
cmp
jns
add
xchg
rclb
loope
mov
test
pop
fidivl
cmp
fs
in
sub
dec
add
or
xchg
sub
and
mov
mov
pop
repz
shrb
cwtl
jp
lret
xchg
cwtl
das
sbb
ds
jo
sub
cld
xchg
aam
ret
sbb
repnz
jo
add
ret
xchg
cmc
mov
lds
fisttpl
push
pop
pushf
sub
loop
out
orb
inc
shll
mov
les
mov
aam
jns
jns
pop
pop
repz
add
mov
pop
mov
lods
cwtl
das
fidivs
aam
pushl
repnz
push
aam
test
repnz
push
adc
out
dec
lds
aad
inc
pushf
dec
jecxz
mov
adc
jae
xor
cmp
in
out
pop
sbb
loop
insb
add
xchg
mov
fistps
mov
cmpsl
pop
fnstenv
cmp
cli
in
sub
pop
icebp
mov
add
or
xchg
sub
and
dec
scas
inc
pop
hlt
jne
shrb
xchg
jnp
leave
and
xchg
cltd
xor
push
movsl
test
mov
outsl
leave
sub
cli
nop
aad
ret
loop
jecxz
mov
adc
xrelease
mov
fimull
or
pop
lcall
jns
jg
and
shlb
mov
and
cmp
jp
add
add
mov
cwtl
das
fsubrl
aad
std
mov
das
ret
repz
aam
adcb
inc
mov
cltd
xor
mov
lds
insl
inc
lcall
xchg
in
push
push
mov
test
jno
xor
cmp
dec
out
in
pop
pop
lods
insl
add
cmp
jns
decl
xchg
mov
ficomps
mov
cmpsb
pop
fdivs
cmp
popa
stc
in
sub
add
pop
lahf
and
pop
icebp
aas
and
scas
inc
pop
hlt
je
shrb
xchg
jnp
enter
push
jmp
push
movsl
cmpsl
cmp
dec
outsb
enter
aad
rcrl
loop
loop
mov
adc
xacquire
mov
or
pop
cltd
sub
pop
mov
mov
mov
add
add
mov
and
pop
push
mov
aam
ja
jp
add
repz
push
jp
mov
mov
test
ds
cld
mov
rcrl
aam
adcl
repnz
cwtd
xor
mov
lds
insl
aas
cltd
dec
jecxz
pusha
hlt
mov
mov
test
jo
xor
aaa
xchg
cmpsb
cmp
mov
les
stos
insl
add
aaa
loop
imul
add
sbb
mov
movsl
pop
xlat
das
cmp
pusha
clc
in
sub
add
push
sahf
and
pop
lock
and
dec
lods
inc
pop
hlt
jae
shrb
xchg
jnp
and
xchg
cltd
xor
jne
movsl
cmpsb
cmp
ret
clc
mov
insb
rcrb
loop
loope
mov
insb
imul
gs
das
mov
cmpsb
cmp
or
pop
cwtl
sub
pop
mov
mov
scas
or
cwtl
cmp
pop
pop
mov
and
pop
push
mov
aam
jbe
jp
add
leave
add
xchg
and
fisubrl
aad
sti
mov
sub
dec
aam
adcb
adc
mov
gs
xor
mov
lds
insl
ds
dec
jecxz
pop
hlt
mov
mov
test
outsl
add
cmpsb
cmp
mov
les
stos
insl
add
ss
push
mov
xchg
mov
fcompl
mov
movsb
pop
cs
pop
mul
jl
sbbl
jnp
js
add
es
sub
and
dec
lods
inc
pop
hlt
jb
shrb
xchg
jnp
lds
icebp
mov
cltd
xor
je
cmpsb
movsl
cmp
testl
mov
imul
xor
test
mov
das
mov
cmpsl
ds
dec
in
lds
imul
mov
mov
lods
or
cltd
cmp
cmpsl
add
mov
and
pop
push
mov
aad
je
jp
add
xor
add
xchg
and
fldcw
aad
cli
mov
sub
pop
repz
dec
aad
jg
jnp
inc
mov
cltd
xor
mov
dec
jmp
or
insl
cmp
dec
in
pop
hlt
mov
mov
test
outsb
add
enter
rcll
xchg
lds
insl
add
xor
mov
sub
dec
test
mov
mov
cmp
jl
sbbb
dec
add
add
and
push
in
aas
push
jns
dec
stos
aas
pop
hlt
jo
shrl
xchg
jnp
ret
pop
repnz
cltd
xor
jae
cmpsl
movsb
aaa
mov
imul
aad
mov
mov
push
add
mov
out
subb
mov
test
inc
aam
in
fs
pop
xchg
imul
mov
jnp
jns
and
int3
cmpsl
ds
pop
and
push
scas
aas
fbstp
jnp
add
xor
add
test
and
xlat
imul
dec
sub
insl
jge
jl
inc
sahf
hlt
mov
popa
lcall
mov
dec
out
xor
je
xlat
outsb
cmp
cmc
mov
scas
adc
insb
add
leave
xor
push
out
loopne
pop
adc
in
gs
mov
sub
stos
inc
jle
and
shrb
ds
repz
and
inc
add
ja
jp
add
cwtl
das
push
jmp
xlat
sbb
mov
test
lret
cld
jl
rcrl
xor
adc
addr16
das
hlt
mov
insl
mov
fcomi
mov
adc
in
xorb
lock
sbb
xor
xor
xchg
ja,pn
sub
arpl
jge
xchg
stos
pop
cs
mov
enter
cmc
scas
push
cmpsb
pop
xor
sub
jmp
sub
repnz
push
sbb
sub
fs
cmpsb
mov
xorb
daa
test
jecxz
nop
and
sbb
mov
mov
mov
dec
mov
outsl
enter
xchg
nop
fisubl
shrb
xchg
ljmp
adc
enter
xchg
sbb
repnz
mov
sub
sarl
dec
ss
sub
xchg
add
lds
inc
lea
sub
add
sbb
nop
aas
jae
xchg
mov
mov
int
lret
push
hlt
inc
pop
stos
rorl
pop
dec
test
inc
ljmp
xchg
aad
es
and
mov
push
les
mov
mov
lock
sub
xchg
enter
js
int
lods
dec
mov
repz
mov
outsl
xchg
push
orl
out
dec
ret
jns
mov
daa
dec
dec
xchg
stos
scas
enter
adc
mov
std
loopne
lret
fs
aaa
cmp
in
sbb
mov
mov
dec
dec
jne
add
iret
aas
in
xor
push
stos
popf
out
cli
mov
pop
xchg
into
int
push
xchg
mov
xchg
mov
inc
inc
adc
les
and
push
or
and
in
jmp
js
fidivrs
jp
mov
dec
xchg
sub
mov
jecxz
sti
sub
pop
mov
push
lock
popa
outsb
xor
xlat
sbb
aad
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
xchg
lcall
mov
jmp
lahf
sub
xor
mov
push
lret
mov
pop
cmp
sbb
call
mov
ljmp
fnstenv
iret
outsb
mov
mov
fimull
js
bound
js
in
int
ret
xor
ja
inc
rcll
mov
rcrb
mov
popa
and
mov
xchg
ret
ja
cwtl
insb
inc
adc
movw
jne
inc
mov
jecxz
inc
lods
mov
iret
and
fistpll
inc
mov
xor
inc
js
rcrb
mov
pop
cmpsl
ja
jmp
icebp
es
push
rep
xchg
xor
rcll
sbb
negl
sub
sub
mov
mov
cmpsl
arpl
xchg
cli
and
add
jae
repz
cwtl
fs
testb
fwait
xchg
push
add
lock
fwait
jmp
out
cs
and
rol
fildl
test
mov
loope
or
test
rolb
xchg
mov
mov
sbb
pop
push
imul
sbb
cmp
into
lods
cwtl
insl
push
xor
pop
cmc
mov
mov
mov
and
push
fiaddl
sbb
dec
cs
add
ss
sub
js
call
outsb
out
lcall
add
cli
leave
nop
insl
out
pusha
sbb
fwait
icebp
jge
mov
fildl
scas
push
stos
movsb
cld
inc
addr16
and
shlb
js
mov
out
popf
inc
mov
mov
inc
adc
das
repnz
cli
push
test
mov
lods
ficoms
or
jne
outsb
and
mov
add
push
push
add
inc
push
sub
mov
mov
call
inc
mov
fimull
ret
mov
aas
lods
mov
outsl
gs
loop
xor
fidivl
or
lock
lods
movsb
rcrl
mov
fisubl
mov
insb
cwtl
mov
pop
addr16
icebp
mov
subb
cmp
dec
push
cmp
inc
lds
mov
push
xor
adc
push
in
scas
lods
mov
negb
emms
rclb
adc
and
scas
cli
mov
loope
movsb
xchg
mov
imul
push
cmp
mov
xchg
jae
fstp
les
lcall
insb
adc
jmp
xchg
mov
test
push
cmp
dec
bound
out
lods
xchg
icebp
aam
sbb
and
ficoms
aas
lods
ljmp
lds
cmpsl
inc
jae
movsb
popa
jg
int
jae
pop
out
mov
es
outsl
sahf
dec
loop
jbe
pusha
lea
adc
adc
lods
pop
mov
or
movsl
adcb
aad
mov
idivb
mov
cmp
or
jl
or
adc
push
jmp
pop
movsl
out
stos
scas
insb
push
jle
icebp
xchg
push
scas
ret
fcomi
xchg
test
mov
mov
and
jecxz
in
subb
adc
mov
push
cmp
lret
in
xchg
insb
xor
xor
add
dec
mov
fisubl
inc
mov
sub
rolb
inc
scas
pop
xchg
push
mov
aam
and
xchg
movsb
sub
jg
cld
jg
xchg
jbe
ret
addr16
movsb
lods
or
mov
repnz
rcrb
shl
lea
jnp
das
rcr
or
imul
mov
out
sub
imul
outsl
xchg
mov
in
mov
jo
mov
rcll
jp
xor
xor
das
int3
daa
xor
loope
adc
adc
push
outsl
loop
rorb
mov
sub
cmp
cmp
add
repz
inc
lea
sarl
daa
dec
push
mov
sbb
add
pusha
mov
cli
add
leave
adc
out
push
xor
pop
sbb
aaa
dec
inc
cmp
sub
imul
and
out
imul
fbstp
cltd
xchg
orl
pusha
and
cmp
mov
dec
sbb
rolb
dec
sti
mov
xchg
hlt
sbb
cmp
repz
icebp
push
mov
ret
jmp
jb
pop
cmp
pop
stc
dec
jno
or
push
idivb
lea
jle
jmp
xlat
jnp
mov
push
popf
lods
sub
dec
popf
das
sti
xor
je
movsl
out
sub
add
enter
mov
pop
stos
push
jne
arpl
mov
popa
mov
inc
or
jmp
inc
push
push
in
push
jge
sbb
cmp
jae
mov
cli
repz
mov
je
add
in
arpl
gs
jmp
mov
inc
mov
or
push
mov
cs
jo
push
mov
fs
inc
dec
sub
arpl
or
push
mov
mov
lods
mov
fs
lret
add
xor
jg
push
jns
adcb
jg
xchg
outsl
mov
daa
lret
lcall
xor
xchg
mov
daa
pop
push
dec
stos
cmp
adc
fwait
repz
popf
jmp
fidivl
xor
push
repnz
testl
sub
mov
push
dec
mov
push
sbb
jo
add
outsl
xchg
cld
jnp
cmp
and
sub
ds
and
ret
cmpsb
out
and
scas
jbe
xchg
lock
dec
adc
out
jmp
fs
cmp
cwtl
push
cmp
loopne
and
and
cmp
push
ja
xchg
lods
sub
inc
add
add
lods
pop
mov
push
arpl
data16
popf
mov
daa
xchg
sub
add
jnp
adc
out
adc
in
adc
pop
imul
xchg
loopne
add
imul
add
mov
aad
jmp
inc
sahf
ljmp
rolb
cs
shlb
ret
scas
add
push
jg
testb
