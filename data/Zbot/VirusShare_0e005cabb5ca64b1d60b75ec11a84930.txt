add
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
sub
mov
mov
pusha
call
add
add
pop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
call
add
jmp
ret
mov
push
pop
sub
lods
mov
mov
shl
lea
mov
push
popl
mov
push
pop
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
mov
jge
popf
pushl
pop
dec
push
mov
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
call
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
add
add
add
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
call
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cld
and
add
and
add
add
and
add
add
mov
and
add
add
add
add
shlb
add
mov
add
in
add
pop
and
add
add
push
add
pushf
and
add
and
add
and
add
add
add
add
add
sub
add
cld
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cld
and
add
and
add
add
and
add
add
mov
and
add
add
add
add
shlb
add
mov
add
in
add
pop
and
add
add
push
add
pushf
and
add
and
add
and
add
add
add
add
add
sub
add
cld
and
add
and
add
and
add
add
add
inc
gs
jb
arpl
jae
gs
imul
imul
jb
je
arpl
test
inc
jb
popa
je
inc
jbe
outsb
je
add
adc
push
gs
insl
gs
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
enter
jae
gs
popa
insb
jne
add
popa
je
dec
popa
imul
dec
add
je
jb
arpl
jae
gs
jo
add
add
je
jb
jbe
push
jns
gs
add
gs
popa
jae
inc
jb
outsl
jb
add
insb
jae
jb
outsb
inc
add
roll
dec
gs
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
add
outsb
fs
je
insl
inc
add
inc
gs
je
imul
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jne
jb
outsb
je
push
add
add
je
jb
jbe
je
push
jb
imul
push
add
jo
outsb
fs
push
add
add
gs
inc
imul
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
add
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
xor
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
roll
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
movsl
pop
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jnp
stos
stos
stos
add
cmpsb
push
mov
mov
mov
ret
leave
leave
leave
lret
into
rcl
in
rcl
shl
rcl
iret
hlt
int3
int
hlt
enter
enter
vpmulhuw
mov
mov
stos
stos
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
lret
not
rcl
cld
fcom
std
fcom
fcom
fdivr
aad
ror
iret
dec
into
int3
aad
aad
rcl
sar
ret
std
mov
mov
lods
iret
movsl
movsb
movsl
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
lods
sbb
mov
jnp
mov
sar
vpaddd
lret
iret
ror
aad
xlat
fcom
call
fcomp
call
aam
dec
int
dec
int3
int
aam
dec
into
int
sarl
mov
lods
scas
std
cmpsb
test
ljmp
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
push
add
push
or
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
leave
dec
into
int3
call
rcl
call
xlat
xlat
call
fcom
call
aad
dec
int3
int
lret
leave
lret
int3
int
mov
inc
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
imul
pop
pop
pop
fs
aas
cmp
das
push
or
sbb
aaa
cmp
and
push
pop
pop
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarl
enter
rcl
call
aad
call
aam
rcl
iret
dec
leave
enter
inc
mov
mov
lods
lods
scas
jmp
popf
xchg
xchg
cwtl
lcall
test
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jge
jle
jge
jg
jno
jno
bound
mov
cmp
cmp
inc
inc
inc
mov
outsb
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
leave
leave
dec
leave
leave
inc
enter
mov
mov
lods
scas
scas
jmp
fwait
call
xchg
xchg
xchg
xchg
xchg
fwait
lcall
ds
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsl
add
pop
or
jnp
mov
incb
jp
idivb
jnp
outsb
outsb
jo
pushw
push
jne
ret
jg
jp
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addl
xchg
xchg
xchg
sahf
lahf
mov
ficomps
xchg
jle
jns
pop
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpb
lahf
cltd
sahf
in
mov
incl
mov
std
xchg
jge
jno
jb
je
jae
jle
jge
addl
xchg
data16
cmp
ss
push
jle
jge
cltd
fwait
fwait
lea
test
sti
lods
stos
lods
lods
lods
lods
stos
test
std
movsl
movsb
mov
xchg
xchg
xchg
decl
jg
jns
jns
jl
jp
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
push
prefetch
inc
inc
inc
dec
insb
insl
imul
test
lcall
out
fwait
fwait
lcall
mov
mov
mov
lea
cltd
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
pushf
popf
popf
std
mov
mov
xchg
in
nop
nop
in
xchg
push
jne
or
add
or
inc
es
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
nop
decb
xchg
lcall
movsl
cmpsb
ljmp
scas
pushl
mov
stos
std
rorl
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
popf
xchg
lcall
mov
call
nop
xchg
xchg
xchg
popf
sahf
pushf
movsl
mov
test
mov
cwtl
xchg
fstpt
jp
push
push
push
outsl
dec
dec
dec
pop
popa
popa
jne
jb
mov
jge
addl
int
nop
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
jbe
mov
movsb
mov
mov
mov
mov
movsl
movsb
add
mov
add
pop
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
xchg
xchg
lcall
mov
movsb
mov
stc
cltd
cltd
fwait
out
xchg
xchg
mov
xchg
aad
xchg
lcall
mov
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jl
mov
jnp
mov
jae
mov
insl
ljmp
pcmpgtd
lods
or
lods
or
pushl
mov
mov
pushf
mov
mov
add
shlb
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
popf
pushf
lcall
pushf
pushf
call
xchg
xchg
call
xchg
xchg
call
fwait
cld
xchg
cltd
popf
stc
sahf
lcall
popf
mov
xchg
push
xchg
pop
jle
xchg
dec
js
fwait
cmp
fwait
sub
popf
and
lahf
sbb
adc
ljmp
adc
stos
pcmpgtd
scas
adc
mov
push
mov
imul
mov
cltd
scas
mov
lods
lods
scas
movsb
mov
mov
add
pop
pop
adc
mov
ljmp
sahf
call
pushf
pushf
jmp
mov
movsb
jmp
cwtl
xchg
decl
mov
xchg
xchg
ja
lcall
xchg
push
jns
xchg
cmp
call
push
call
or
pop
call
pop
lcall
adc
lods
sbb
mov
outsl
pushl
outsb
mov
and
and
shll
inc
inc
test
ret
mov
scas
scas
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
lods
mov
mov
cwtl
sahf
lcall
mov
cmpsl
jmp
test
cmpsl
lcall
orb
mov
decl
decl
adc
incl
push
push
incl
add
lea
pop
decl
add
cltd
add
lahf
add
test
pusha
pushl
sub
mov
sub
inc
sub
ret
inc
sub
cmp
das
jg
enter
leave
mov
cld
mov
mov
movsl
movsl
mov
add
add
add
add
add
push
adc
test
ljmp
lahf
jmp
test
ljmp
lods
pushl
lods
scas
jmp
jno
decl
push
pop
incl
or
addb
incl
push
incl
push
decl
pop
call
add
lahf
add
movsl
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
call
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
test
mov
mov
lahf
cltd
lahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
push
incl
or
xchg
decl
add
add
xchg
add
pushf
add
add
add
lods
add
mov
jo
ret
dec
inc
dec
inc
call
inc
mov
rolb
fmuls
fmuls
fisttpl
fistl
call
test
mov
mov
mov
sahf
mov
add
dec
dec
adc
jnp
movsb
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
mov
decl
popa
decl
push
pop
decl
or
mov
push
call
add
sahf
add
mov
add
stos
add
mov
arpl
mov
dec
mov
aad
cwtl
call
push
lcall
push
fwait
fistps
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
mov
sahf
add
inc
inc
adc
js
lahf
fwait
lahf
jmp
lahf
fwait
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
pop
call
and
xchg
pop
call
or
popl
push
call
add
mov
add
lods
add
mov
fs
mov
xor
fldenv
fisubs
fbld
in
test
in
test
out
cmpsl
call
test
data16
fldl
mov
cmpsl
test
sahf
sahf
sahf
adc
xchg
xchg
xchg
add
inc
adc
jb
cltd
xchg
cltd
call
lahf
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
call
pop
call
add
cltd
add
mov
add
lods
add
mov
pushw
adc
roll
jmp
outsb
lods
jmp
jno
jmp
jb
jmp
jne
jmp
scas
out
je
out
jne
out
jae
jmp
mov
mov
cmpsl
cmpsb
lcall
mov
add
add
add
jg
cmp
adc
outsl
js
mov
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
outsb
lcall
cmp
lahf
xor
cltd
push
call
add
sahf
add
movsl
add
test
add
mov
fs
mov
sbb
fistl
jmp
js
ljmp
jmp
mov
in
cmpb
icebp
test
repnz
mov
mov
test
cmpsl
popf
popf
pushf
daa
sahf
mov
mov
add
popa
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
inc
ret
mov
mov
mov
cmp
movsl
inc
jle
mov
ss
cltd
sbb
add
sahf
add
add
add
lods
add
mov
gs
mov
add
call
es
data16
call
mov
push
sar
nop
ret
push
xchg
sar
xchg
push
nop
xchg
clc
ret
in
mov
fnstenv
ret
clc
stos
lods
stos
mov
sahf
popf
xor
sahf
pushf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
mov
jle
lcall
dec
jg
lods
dec
cmp
xor
popa
lcall
add
cmpsl
add
stos
add
mov
mov
add
enter
xor
mov
out
xchg
push
lcall
hlt
lcall
negb
lret
sti
popf
into
sti
sahf
int3
cld
lcall
fistpll
cli
mov
mov
lahf
sahf
sahf
aas
nop
popl
lcall
add
aaa
aaa
add
cs
outsb
push
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
mov
vshufps
mov
mov
ljmp
push
mov
mov
push
pop
lcall
add
stos
add
mov
arpl
mov
add
leave
add
rorl
jbe
fiadds
out
lea
push
movsb
into
push
movsb
into
push
cmpsl
int
cld
test
into
sti
test
stos
sar
cld
stos
sar
std
test
push
sahf
mov
int
mov
mov
lahf
mov
xchg
add
fwait
cltd
add
add
add
xor
add
sub
or
inc
bound
pop
xlat
je
jb
mov
mov
ret
mov
ret
ret
leave
inc
rol
mov
cmpsl
jmp
push
mov
scas
dec
test
mov
add
mov
add
mov
arpl
mov
add
into
add
fadds
jae
fists
jge
out
pop
cmpsb
push
sahf
lret
lods
sar
sti
mov
sti
scas
sar
cli
mov
cld
mov
cld
mov
std
mov
std
mov
pushl
sar
mull
call
leave
int
mov
mov
sahf
lahf
mov
or
add
add
xor
sbb
ss
outsb
mov
jmp
fcomp
not
rcl
std
lret
int3
into
dec
lret
lret
dec
lret
mov
scas
jmp
push
mov
stos
cmp
jmp
add
add
mov
arpl
mov
add
roll
jo
xlat
add
loopne
je
jmp
jno
cld
lods
sar
cld
mov
std
mov
cld
mov
fdivr
std
mov
xlat
std
mov
xlat
stc
mov
jmp
mov
call
lret
mov
lahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movl
jmp
out
loop
loope
fstp
fsubp
fcomi
xlat
cli
fcom
std
int
iret
mov
push
cmp
sub
mov
add
mov
arpl
mov
add
leave
add
add
fldl
ja
jecxz
ja
in
xor
cli
mov
inc
loope
inc
loopne
inc
inc
loopne
dec
loopne
dec
dec
fdivrp
std
dec
loope
cli
mov
leave
call
leave
into
mov
mov
xchg
adc
add
add
incl
incb
std
incl
hlt
cmc
cmc
or
in
jmp
jmp
out
sub
out
in
dec
call
jmp
jmp
aad
fstp
jmp
mov
xchg
cmpsb
cmp
movsb
push
jmpw
add
mov
fs
mov
add
int3
add
fadds
jb
fiadds
jbe
jmp
inc
popf
sti
mov
jecxz
dec
jecxz
dec
in
std
int
dec
in
dec
jecxz
dec
loopne
shl
shl
call
in
std
shl
cli
ret
out
mov
xlat
inc
out
cmpsl
test
mov
cwtl
xchg
add
add
add
incl
std
std
incl
cmc
clc
testb
repnz
repz
out
lock
pop
in
lock
cmp
out
in
pop
fsubp
loop
les
xchg
sti
lahf
and
lcall
add
add
mov
fs
add
leave
add
add
fildl
jne
in
jp
jmp
jl
negl
cld
mov
shl
shl
std
shl
call
call
std
out
fsubr
fsubr
fucompp
fldl2t
cld
shl
push
ret
aad
in
fcos
lret
repz
xchg
xchg
and
xchg
xchg
add
sti
add
std
testl
hlt
div
or
shlb
sarl
lcall
jmp
add
mov
add
lret
add
roll
jo
fldl
ja
call
sbb
cld
ret
loopne
std
xlat
call
std
fucomi
fucomi
fucomi
fucomi
std
fucomp
fucomip
std
fsubrp
fsubrp
cld
shl
push
jmp
aad
call
rcl
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsb
outsb
outsb
add
add
mov
loop
add
enter
mov
cltd
repnz
and
sahf
add
cmpsb
add
mov
mov
add
int3
add
aam
jae
fiadds
jae
ljmp
cld
pop
shl
jmp
lock
fucomp
fldl2e
fldl2t
xlat
call
std
aam
cld
iret
loop
cli
shl
push
into
clc
int3
test
int3
call
xlat
sti
mov
mov
cltd
cltd
fwait
cmp
fwait
add
aad
ror
adc
lods
mov
lcall
add
mov
mov
add
iret
add
add
add
call
aaa
xchg
cli
xchg
enter
loope
cld
lret
sti
fdivrp
clc
mov
aam
repz
iret
push
mov
into
jmp
mov
sar
jmp
jmp
loopne
in
mov
mov
xchg
add
add
add
int3
lret
add
rol
mov
cmpsb
loopne
xor
jmp
add
mov
addr16
mov
add
int3
push
jno
rorl
jbe
ficoml
jns
loopne
cmp
ljmp
ljmp
std
loope
cld
loopne
ret
mov
neg
mov
leave
ljmp
rcr
loopne
shl
aad
out
loopne
in
out
test
out
out
popf
call
lret
leave
push
lods
stos
lods
adc
cmpsb
cmpsb
cmpsb
add
ret
mov
ret
mov
stos
aam
dec
jg
popf
sbb
test
push
scas
and
mov
ja
mov
inc
test
ret
stc
lret
test
mov
out
mov
enter
lret
ror
int
into
shll
rcl
jg
fcmovu
jb
gs
in
out
jmp
xor
cmc
cmc
cmc
and
icebp
icebp
sbb
fstp
or
mov
int
mov
add
mov
sarl
mov
xchg
stos
jne
ljmp
mov
sarb
test
mov
mov
cmpsl
leave
mov
enter
int
ror
shlb
iret
rcll
rcl
dec
aam
xlat
inc
aam
aad
aam
fldenv
xlat
fcmovnu
sbb
adc
in
push
loopne
jecxz
out
jmp
in
lock
add
sti
testl
incb
std
incb
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
kandb
mov
daa
int3
ror
and
aad
sbb
aad
adc
rorb
aam
aad
aam
xlat
add
add
add
jecxz
add
in
ljmp
incb
mov
mov
add
ret
ret
or
mov
mov
mov
push
ret
or
mov
add
into
lret
add
aam
add
aam
aam
aam
aad
aad
xlat
add
xlat
loop
aad
fiaddl
loopne
loop
loopne
jecxz
out
icebp
lock
std
incl
std
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
mov
mov
mov
test
test
xchg
pop
add
add
add
add
add
add
mov
scas
adc
mov
enter
into
jmp
aad
cmc
rcl
sar
iret
into
sar
lret
lret
lret
stc
int3
int3
int3
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
aas
ds
add
sbb
add
adc
add
push
add
add
cmpb
inc
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
rcl
into
xlat
aad
xlat
call
rcl
dec
iret
iret
dec
int3
lret
mov
mov
stos
stos
lods
icebp
xchg
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jne
jne
fs
dec
dec
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
lret
rcl
call
aam
dec
int3
lret
mov
mov
mov
ljmp
sahf
popf
xchg
xchg
cwtl
jmp
jo
xchg
adc
add
xor
add
add
add
add
cmpb
jnp
jl
test
jns
push
push
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
ret
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
fwait
lcall
cwtl
lcall
addb
jnp
jnp
jp
js
jnp
jp
jnp
jns
jb
je
push
push
push
cmp
jne
pushf
pushf
pushf
mov
scas
scas
repz
lods
scas
sti
lods
scas
lods
std
cmpsl
cmpsl
cmpsl
std
pushf
popf
popf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
movsb
cltd
je
je
adc
adc
add
add
add
add
insl
outsl
insl
pop
xchg
mov
sahf
lcall
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsb
orl
lcall
mov
call
popf
popf
ljmp
stos
mov
mov
scas
mov
xlat
cmpsb
mov
addb
add
add
add
add
popa
or
lods
mov
cmpsb
lahf
mov
decl
mov
std
popf
sahf
lahf
sti
mov
cwtl
lcall
push
push
jo
push
push
outsl
imul
jge
subl
nop
mov
lcall
mov
mov
xchg
mov
dec
mov
mov
mov
out
scas
lods
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
lcall
lcall
pushf
sahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
mov
nop
orb
xchg
insb
test
xchg
pop
cmp
dec
jp
movsb
inc
jp
lods
xor
jb
mov
insl
ljmp
sbb
mov
mov
scas
scas
jle
movsb
movsb
push
pop
pusha
pop
or
mov
in
movsl
test
cltd
cwtl
xchg
lcall
mov
mov
decl
orl
cld
xchg
pop
test
xchg
dec
jns
cmp
xchg
daa
call
call
push
ljmp
sbb
mov
insb
pushl
push
jb
mov
pop
xchg
mov
scas
scas
xchg
popf
lahf
popf
adc
add
add
pop
pop
popa
or
lods
mov
test
lahf
mov
ljmp
test
cltd
decl
push
mov
decl
adc
or
mov
call
add
fwait
add
cmpsb
or
pushl
jl
shrb
inc
jle,pn
enter
leave
xor
cwtl
inc
test
divl
test
sbb
add
add
pop
pop
pusha
or
movsb
test
test
test
ljmp
mov
pushl
xchg
lahf
decl
adc
mov
push
incl
add
decl
add
xchg
add
sahf
add
add
mov
outsb
inc
cmp
dec
inc
mov
roll
call
inc
xchg
fadds
call
arpl
stc
mov
mov
movsb
movsl
movsb
daa
std
std
add
add
add
pusha
or
mov
ljmp
mov
pushl
mov
ljmp
jl
mov
popa
call
adc
pop
call
add
lahf
add
cmpsl
add
scas
add
mov
dec
nop
call
pop
pushf
fistpl
ficomps
jmp
pop
mov
fildll
dec
cmpsl
mov
ret
cmpsl
xor
add
add
dec
pop
jle
jp
fwait
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
jmp
sub
lcall
and
xchg
minps
xchg
add
sahf
add
test
pusha
ljmp
pop
addr16
xor
jecxz
test
call
jb
in
jno
jmp
cmpsl
mov
shll
addb
dec
dec
dec
pop
insl
insl
push
mov
xchg
pushl
mov
mov
mov
jbe
lcall
jbe
pushf
sub
xchg
or
fwait
add
movsl
add
lods
add
mov
gs
or
call
inc
xchg
jmp
js
jmp
mov
out
test
push
mov
fisubrl
mov
push
fwait
fwait
fwait
add
sub
sub
push
push
dec
pop
imul
test
mov
mov
mov
mov
ret
mov
mov
jmp
sub
lcall
ljmp
add
mov
push
jbe
loopne
mov
push
xchg
ret
push
cwtl
xchg
enter
enter
leave
push
cwtl
jmp
lods
mov
stos
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
ret
pushl
push
mov
lods
dec
cmp
and
add
ljmp
add
mov
add
fldenv
cmp
jnp
push
mov
into
stc
test
sar
cld
stos
iret
cld
lods
sar
cli
cmpsb
lret
jmp
mov
dec
mov
test
or
add
add
push
dec
dec
aaa
jb
je
stos
stos
test
out
iret
int
lret
sti
enter
enter
mov
mov
lods
inc
jg
mov
add
mov
arpl
rolb
dec
add
fiaddl
jmp
xchg
sti
mov
cld
mov
mov
fdivr
std
mov
xlat
cld
mov
ljmp
repz
scas
scas
mov
add
add
add
add
pop
or
aam
dec
loope
loop
fistps
fcmovnu
fcom
out
mov
addr16
cmpsl
je,pn
movsl
push
popa
ljmp
add
lret
call
add
or
lock
mov
cld
loopne
inc
loopne
dec
std
fdivrp
dec
fdivrp
dec
loopne
std
lock
leave
divb
pushf
sahf
sbb
add
add
std
add
std
add
jmp
or
out
in
sbb
jmp
xor
loopne
jecxz
lds
mov
mov
add
mov
inc
add
int
outsl
fldl
je
jmp
outsb
mov
cld
cld
iret
out
shl
shl
call
in
std
aad
std
xlat
jmp
push
fdivr
fmul
sar
mov
mov
add
std
incb
incl
cld
pop
aam
aam
mov
pop
xchg
popf
or
ljmp
add
add
rolb
jo
loopne
jne
out
and
shl
std
cld
fldl2t
cld
fldl2t
sti
xlat
out
cld
fsub
sti
aam
push
jmp
rcl
sti
mov
sahf
popf
das
add
add
int3
int
or
bound
lods
add
mov
add
add
loopne
ja
out
xor
cli
lret
loope
cli
lret
cmc
hlt
ret
repz
out
ret
sar
in
in
vpsadbw
shl
in
fucomp
leave
mov
test
test
std
add
add
add
aad
push
mov
jae
push
gs
mov
insb
inc
sbb
int3
and
xlat
cs
loopne
pushf
clc
loop
mov
out
loop
lret
mov
lret
ror
loopne
iret
mov
in
fcompl
in
call
rorl
mov
add
stos
lods
lods
add
xchg
movsl
les
mov
mov
xchg
fidivrl
andb
into
mov
ret
mov
lret
insl
ror
iret
pop
aam
rorb
fcom
cmp
das
in
fisubs
jecxz
icebp
adc
jmp
or
incb
std
incl
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
enter
aam
rcll
rol
adc
rcl
or
loopne
or
int3
into
add
incl
std
incl
cltd
fwait
lcall
mov
mov
int3
int
stos
stos
stos
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
leave
mov
ret
mov
scas
mov
insb
stos
stos
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aad
aam
rcl
sar
iret
into
into
std
mov
stc
mov
test
roll
sbb
add
add
add
add
add
add
add
add
jb
jae
push
dec
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aam
dec
iret
iret
inc
mov
ljmp
sahf
sahf
sti
mov
das
push
add
add
add
add
jne
jae
test
adc
jo
ret
bound
insl
insl
insl
jb
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jae
daa
and
add
add
add
jb
jae
popf
xchg
fwait
mov
test
mov
mov
test
test
push
push
push
inc
mov
pushf
into
mov
mov
xchg
decb
lea
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
stos
mov
test
mov
mov
xchg
xchg
xchg
cld
sahf
popf
sahf
cmc
cltd
lcall
push
push
push
imul
jg
lea
xchg
notl
mov
pushl
push
cwtl
mov
scas
lods
push
lods
stos
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
lcall
lcall
xchg
lcall
xchg
mov
loope
jne
out
xchg
bound
std
lcall
ljmp
and
mov
outsb
pushl
popf
lods
lock
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
sahf
sahf
lahf
jmp
mov
xchg
decl
js
nop
inc
jae
lea
push
mov
call
or
mov
sbb
jae
mov
daa
jns
ret
aas
xchg
rcrb
subl
jae
push
mov
movsl
cmpsl
cld
test
cmpsl
ljmp
mov
lcall
sub
adc
xchg
push
decl
add
xchg
add
mov
adc
shll
lret
call
inc
mov
aam
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
movsb
push
add
add
push
imul
movsb
lahf
movsb
cld
scas
scas
scas
pushl
mov
ljmp
aaa
outsl
call
pop
pop
call
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
popa
mov
call
lcall
test
test
add
add
popa
bound
mov
fwait
cld
mov
scas
mov
mov
mov
fwait
dec
jl
pushf
xor
cltd
and
xchg
pop
pop
lcall
add
mov
dec
xor
call
jl
out
jle
out
jg
fstps
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
arpl
jmp
add
pusha
pushl
insl
fimull
in
mov
cmc
xchg
push
xchg
enter
jmp
cmpsl
inc
mov
cmpsb
sub
inc
aas
aas
adc
push
xchg
mov
cld
rol
inc
vcmpsd
ljmp
sbb
movsl
add
mov
arpl
les
push
aad
jns
in
insb
lods
push
cmpsb
int
clc
lods
iret
sti
lods
sar
sti
scas
sar
scas
sar
in
scas
leave
inc
mov
movsl
ds
std
incl
xor
outsl
inc
mov
mov
aam
aam
rcl
aam
rcl
shr
leave
leave
lret
cli
mov
mov
jmp
add
ret
call
add
out
test
stc
nop
mov
fdivr
inc
cld
ret
std
ret
icebp
mov
ret
in
cmpsl
cmpsl
dec
addb
add
in
or
call
out
outsb
fcmovu
mov
add
mov
add
add
out
cmp
cld
into
in
std
iret
out
call
in
std
shl
std
shl
push
enter
int
scas
scas
lods
popa
cmpl
add
incb
std
std
push
int
shrl
lahf
sbb
stos
add
mov
add
loop
jns
hlt
push
movsl
std
loop
cld
xlat
call
std
shl
cld
aad
stc
shl
push
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
fstpl
cmp
insl
stos
cld
lock
shl
jmp
mov
shl
out
rcl
jmp
scas
push
cltd
lcall
sarb
xchg
dec
and
push
mov
shll
lret
ja
mov
mov
int3
adc
int
xlat
int3
into
pop
dec
jecxz
loope
out
out
in
in
in
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
lds
sbb
bswap
int
or
aam
incl
addb
add
add
add
rol
std
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
fcomp
test
jb
stc
pop
imulb
fyl2xp1
nop
or
jle
pop
scas
pop
lahf
fwait
xor
jle
int3
scas
repnz
ljmp
jno
push
cltd
cmc
mov
jbe
es
adc
cld
cmp
int3
arpl
das
mov
ljmp
les
lahf
cmc
xor
gs
daa
mov
mov
fldenv
cli
in
sub
pop
pop
or
jecxz
mov
mov
cwtl
add
mov
pop
fnsave
cmp
xchg
mov
pop
repnz
lods
sbb
dec
pushl
into
xor
das
mov
shll
aad
aad
inc
notb
mov
mov
int
into
or
jmp
and
in
inc
or
in
daa
mov
aaa
out
fcoml
pop
test
cli
imul
jl
ficomps
lcall
and
mov
aas
sub
stc
nop
or
hlt
jnp
inc
fisubs
push
out
dec
push
mov
xchg
or
rolb
jl
movsl
cmp
sahf
xchg
cmpsb
add
fcmove
push
ret
pop
mov
popa
clc
sub
test
jge
add
rcll
mov
jb
pop
movsb
mov
loope
div
pop
out
adc
es
push
cltd
xchg
sub
mov
ret
adc
jno
aas
loopne
outsb
lret
cld
nop
cmpsb
cmp
dec
jecxz
pop
adc
ss
push
mov
xchg
mov
mov
and
inc
jnp
fsubrs
pop
idiv
mov
jle
push
or
cmp
in
sbbl
stc
cmp
mov
loop
sub
cmp
inc
fstpl
pop
sub
mov
fs
jo
inc
xchg
sbbb
jmp
lret
fdivrs
ficomps
sbb
cld
fsubs
mov
mov
inc
fcomps
mov
scas
sub
push
sbb
pop
popf
xor
add
push
out
cmpsl
addl
jno
movsb
lds
clc
iret
mov
mov
add
daa
cli
fwait
rcrl
scas
inc
or
sub
arpl
xchg
xchg
jg
xorl
or
cmp
std
push
pop
fwait
xor
scas
mov
cmp
add
outsl
xor
pop
dec
push
testb
cmpsl
adc
fadd
std
xchg
hlt
stc
xor
sub
sbb
inc
dec
push
out
push
outsb
add
jmp
mov
and
stos
inc
jne
xchg
sub
xchg
enter
mov
in
out
sbb
shrb
cmp
fwait
insl
pop
lock
push
movsl
fsubp
inc
xlat
adc
sub
cmc
arpl
loop
test
movsb
imul
or
xchg
sub
mov
cmp
jle
insl
mov
ret
pop
rcl
hlt
mov
repnz
and
adc
ja
xor
test
sbb
in
ljmp
dec
cmp
lock
outsl
mov
mov
ret
hlt
loope
sub
push
enter
mov
imul
xchg
push
in
xchg
and
pop
popa
inc
fcoms
mov
mul
rorl
add
jle
cmp
addr16
push
pop
pushf
xor
lods
mov
cmp
fsubrs
sbb
pop
dec
push
testb
movsl
adc
ret
hlt
divl
leave
sub
sbb
out
push
outsb
add
jmp
mov
and
stos
inc
jae
xchg
sub
mov
dec
jmp
or
dec
cmp
mov
mov
mov
stos
loope
ds
add
mov
xchg
hlt
mov
fsubrs
cs
outsl
jnp
xchg
sub
sarb
mov
pop
dec
sahf
xor
mov
loop
fcomp
rclb
mov
jg
push
hlt
mov
test
xchg
fst
shlb
fdivl
es
jmp
jnp
lock
ret
pop
out
clc
ljmp
push
xor
es
sbb
psrlq
mov
and
push
ja
out
test
pop
cmc
lods
rorb
add
and
pop
sbb
imul
outsb
push
ljmp
test
call
dec
jne
push
test
fidivs
jb
loopne
and
lret
xchg
sub
jne
dec
test
into
gs
jb
mov
jl
loopne
sbb
inc
push
push
scas
lcall
dec
mov
popa
adc
add
scas
dec
pop
std
xchg
xchg
shlb
mov
mov
and
xlat
add
push
mov
data16
xchg
rcrb
scas
add
push
call
dec
push
out
or
in
dec
addr16
xor
rol
push
add
lds
xchg
sub
rorl
add
loop
dec
data16
xchg
fcomps
mov
mov
lcall
cmp
xchg
loopne
adc
or
insl
cmp
or
xchg
sbb
xor
nop
xchg
out
mov
push
mov
mov
push
shlb
sbbl
aaa
insl
jg
mov
jg
mov
je
inc
test
jbe
mov
cmp
in
aam
jno
push
ss
dec
stos
jmp
mov
cmpsl
add
out
stos
in
adc
jbe
add
jg
jp
lret
jl
and
test
jae
cld
mov
jnp
out
cli
pop
icebp
sub
push
mov
ja
adc
stc
push
jmp
jae
clc
mov
js
js
call
mov
mov
testl
adc
int3
arpl
addr16
hlt
xchg
lock
and
hlt
lock
jno
call
xor
in
loopne
jae
push
mov
jne
subb
push
ljmp
inc
ficomps
cmpsl
ds
insl
arpl
lahf
sti
jle
sub
ret
jge
mov
jecxz
adc
nop
daa
ss
jno
mov
in
sbbl
rcrl
sbb
js
in
int
and
das
and
add
cmp
lods
sub
fnstenv
push
movsl
cli
dec
loopne
sarl
mov
mov
push
movl
gs
cmp
lcall
push
in
cmpsl
leave
jae
ljmp
lock
pop
and
scas
jae
int
lret
mov
add
push
popf
sti
es
push
and
push
js
ljmp
leave
jl
dec
mov
pop
push
sbb
lea
out
xchg
daa
mov
adc
dec
push
std
xchg
dec
insb
add
cmpsb
mov
pop
div
adc
jle
adc
pop
inc
outsb
and
xchg
mov
push
out
or
add
arpl
mov
xchg
xchg
cmp
aas
mov
call
xor
aaa
into
pop
out
fwait
xor
or
fnstenv
out
out
out
xor
push
or
cmp
ja
xor
cmpsl
ds
out
mov
pop
or
mov
add
test
nop
movsb
in
adc
pop
out
in
repz
ds
lds
imul
xchg
mov
out
loop
lahf
pop
test
and
lcall
mov
out
xchg
add
insb
ss
xor
mov
stos
mov
vcvtps2dq
out
and
cmpl
lds
lock
mov
mov
fmull
seto
mov
pop
mov
xor
jp
or
inc
lea
adc
fnstsw
dec
scas
sbb
xor
aam
add
flds
movsb
xor
jbe
mov
sub
outsb
add
adcl
cwtl
scas
xchg
cli
mov
jge
dec
inc
pop
jle
repnz
fbstp
push
and
xchg
stc
nop
adc
aas
insb
clc
js
mov
cmpsb
mov
imul
mov
std
fidivs
mov
daa
jae
rcrl
fidivs
sbb
jmp
dec
pop
icebp
jle
add
fst
push
mov
std
lds
and
push
dec
data16
jp
jle
test
nop
daa
iret
add
cld
icebp
in
daa
sbb
ss
inc
pop
je
mov
scas
dec
mov
sub
jae
inc
inc
rolb
pop
sar
popa
mov
cmpsb
das
fcoml
aad
popf
jae
je
push
mov
cli
jb
stc
test
jae
sbb
cmpsl
into
sbbl
mov
sarb
mov
stc
inc
adc
aad
out
pop
dec
subb
mov
lahf
in
pop
or
rol
xchg
mov
pop
add
mov
xchg
sahf
pop
mov
dec
cmp
loopne
aad
hlt
subb
loop
imul
mov
cmp
inc
test
push
ret
ljmp
and
cli
lahf
dec
push
fisubrs
sub
dec
aam
add
adc
push
mov
inc
stc
cmp
lret
mov
mov
jl
mov
movsl
lea
add
notb
arpl
and
or
and
inc
mov
jnp
dec
es
repnz
pop
sub
push
inc
movsb
pop
lahf
cmp
cmpsb
dec
sub
sub
daa
int
pop
aas
dec
pop
add
mov
or
dec
ret
hlt
push
mov
je
push
xor
and
or
pop
leave
jne
dec
sub
fstl
sbb
or
and
jp
lcall
mov
nop
mov
cltd
push
int3
pop
in
cltd
xor
mov
dec
cmp
mov
jmp
ss
sub
and
stos
stos
push
fucomp
or
lock
fbld
mov
dec
pop
les
xlat
push
les
out
lds
adc
inc
out
dec
movsb
mov
pusha
cmp
es
das
cs
adc
inc
sbb
jbe
jge
hlt
repz
pop
loop
stos
push
mov
xorb
xchg
insl
dec
cld
mov
ret
sbb
inc
sbb
cld
cmpsl
sub
cmpsl
sahf
jecxz
cli
cld
mov
adc
imul
sub
imul
mov
fnsave
or
jno
pop
xor
fldenv
adc
sub
andb
int
cltd
mov
adc
ret
add
scas
pusha
mov
pop
or
not
sub
pop
xor
inc
xchg
xlat
aas
or
cmp
movsl
sbb
mov
les
or
mov
pop
mov
sub
ret
cmp
cmp
xchg
rorb
mov
aad
xchg
jg
mov
shll
mov
and
stos
mul
cmp
ljmp
jno
call
mov
sub
jecxz
xchg
cmc
and
loop
xor
xor
dec
loope
xlat
icebp
mov
dec
fsubrs
out
stos
sub
shrl
xor
shlb
loope
jno
movsb
testb
icebp
hlt
mov
pop
mov
lea
sub
mov
insl
add
mov
mov
fsubrl
shl
cmp
pop
repz
inc
lret
bound
jbe
lds
orb
aaa
and
mov
dec
mov
into
aad
fdivl
repz
les
sbbl
xchg
mov
cwtl
mov
into
ret
push
mov
push
in
sbb
int
mov
xlat
jmp
jns
xchg
sub
sbb
fnstenv
ss
repnz
adc
ds
dec
mov
or
push
mov
mov
or
fdivrl
lret
bound
jmp
or
es
xchg
sub
ret
add
gs
mov
shlb
filds
test
leave
or
mov
fsubrs
roll
int
les
dec
fbld
jmp
cmpsl
data16
or
test
dec
or
add
cmp
lret
rclb
data16
pop
xor
jne
js
sbb
mov
xchg
testl
mov
cmpxchg
cmp
movsl
test
cmp
jecxz
pop
cld
xchg
pusha
aaa
push
aaa
mov
mov
pop
mov
xchg
cmpsb
cmp
pop
out
les
inc
arpl
hlt
cmp
jns
sbb
add
dec
sbb
mov
bound
aam
push
fsubrs
arpl
mov
shll
mov
pop
stc
inc
fstpt
mov
mov
stc
dec
imul
adcb
in
repnz
in
and
push
or
outsb
add
popa
xchg
mov
rorl
stos
inc
mov
enter
sub
out
inc
fidivs
push
nop
jae
add
inc
fsts
xchg
sub
jp
testl
jle
jns
cmpsl
pushf
xor
pusha
repnz
mov
cmpsl
push
je
jo
das
cs
testl
push
popa
or
outsl
mov
mov
enter
pusha
loope
sbb
mov
jns
mov
pop
xor
push
test
xor
loope
mov
xchg
jge
xchg
sbb
push
ljmp
sbb
out
movsl
ds
js
jne
sub
xchg
sub
lods
mov
mov
jge
sub
iret
sbb
xor
xor
mov
mov
lods
pop
sub
xor
in
negb
test
lock
mov
movsl
stos
push
xchg
sub
test
dec
mov
xlat
shlb
mov
out
test
mov
mov
int
sub
dec
out
js
dec
loopne
lret
jmp
add
test
dec
das
inc
fnstenv
movsb
cmp
pusha
notl
ret
cmpb
jecxz
ja
pop
pushf
xor
or
xchg
cmp
stos
inc
fsts
js
enter
sub
sub
icebp
mov
fbld
mov
sbbl
pop
aas
rorb
cmp
pop
hlt
test
ret
jnp
push
xor
je
jno
and
xchg
lret
jne
ds
xor
into
sti
xchg
iret
data16
push
in
xor
je
mov
int
sub
dec
aaa
into
notl
mov
mov
push
in
pop
cmpsl
iret
data16
test
test
in
test
mov
loop
adc
dec
xchg
pusha
imul
mov
std
xchg
rorl
cmpsb
cmp
orl
rcrb
jns
jne
out
int3
stc
add
in
push
mov
or
cmp
add
mov
int
pop
icebp
inc
out
imul
cpuid
mov
xchg
adc
xchg
sub
mov
mov
fdivrl
test
pop
icebp
test
icebp
mov
sbb
fwait
dec
ss
mov
rcr
mov
sub
push
out
testl
inc
rcll
sub
lods
mov
fdivrp
iret
data16
not
addr16
add
xchg
je
mov
push
or
rcrb
xchg
sub
loopne
dec
loope
or
bound
push
or
out
sbb
fldt
movsb
cmp
mov
scas
jl
pop
data16
shlb
nop
loopne
nop
xchg
imul
xchg
sub
inc
pop
sahf
sahf
adc
xchg
mov
mov
movsb
fiadds
add
jl
shrl
lcall
mov
dec
stos
popf
xor
nop
insl
stos
dec
mov
fwait
ret
jo
jmp
mov
rol
lret
ljmp
ljmp
jg
js
push
call
pop
test
push
jae
push
xor
mov
aad
lods
inc
int
out
shl
lret
std
add
xchg
sahf
test
sbb
adc
aaa
into
adc
popa
clc
mov
push
in
dec
movsb
jg
xor
or
rclb
push
fildll
pusha
mov
int3
out
mov
icebp
mov
sbb
mov
sub
cmp
imul
test
bound
gs
dec
mov
xor
sbb
xchg
sub
je
cmp
int3
mov
js
es
xor
dec
repnz
mov
cmpsl
jp
fnstenv
sahf
cmp
mov
inc
pop
repnz
sub
adc
jbe
lret
cwtl
das
mov
mov
pop
dec
cmc
addr16
sub
mov
fs
mov
test
popa
mov
jg
adc
neg
push
popf
or
jge
lods
and
popf
lds
mov
jo
adc
xor
testl
lods
lahf
xchg
sub
movb
or
out
pop
iret
data16
lea
pusha
in
test
mov
test
inc
loop
sub
flds
fnstenv
repnz
fistps
testl
cmp
sbb
lret
or
rclb
outsb
add
xchg
cmc
mov
scas
mov
stos
inc
insl
dec
sbb
adc
testb
mov
sub
stos
inc
inc
fnstcw
loopne
out
sub
push
fildll
cmpsb
pop
fidivs
iret
mov
jl
cld
xchg
pop
xchg
test
mov
leave
xlat
outsb
cltd
cmp
mov
cmc
mov
ret
lock
sbb
aad
aas
xchg
sub
dec
out
jae
inc
nop
lds
mov
into
gs
add
test
test
xlat
outsb
and
sub
pop
dec
cmc
mov
inc
pop
repz
call
jp
shl
fistl
cwtl
das
adc
call
push
outsl
outsl
push
cli
jns
imul
mov
rclb
cmpsl
push
pop
fidivl
das
lds
clc
decb
and
push
mov
mov
mov
lret
adc
outsl
push
into
cmp
pop
out
and
mov
jp
mov
inc
jb
add
repz
mov
sbb
dec
into
jle
das
imul
dec
dec
pushf
xor
fnstcw
out
and
outsl
cmp
outsb
add
xchg
adc
sub
inc
movb
jl
fsubrs
xchg
push
out
or
mov
shrl
loop
and
ljmpw
stos
inc
mov
xlat
leave
pusha
sub
imul
jge
xchg
xchg
add
cmp
and
mov
loope
xor
xchg
add
push
out
loop
pop
mov
or
jnp
cs
into
repz
xor
incb
pop
jne
xchg
xchg
xor
arpl
xchg
lods
inc
sbb
dec
in
aas
fidivl
mov
ret
push
jmp
sub
outsb
and
mov
das
out
scas
fnstenv
push
jle
push
stc
out
xchg
jne
dec
cmpsb
and
mov
idivl
out
adc
scas
inc
or
mov
xchg
outsl
cmp
cltd
mov
repz
pusha
div
add
sbb
xor
stos
ret
pop
fnsave
loope
sub
push
dec
daa
insb
mov
sub
cmp
dec
stc
and
int3
or
mov
dec
cmp
mov
mov
dec
dec
jno
ja
pusha
rep
loope
inc
mov
sbb
mov
cmpsb
xor
fstpt
es
mov
adc
sbb
mov
mov
push
in
xchg
mov
dec
inc
call
sub
mov
ret
mov
inc
bound
imul
dec
sub
mov
push
pop
jg
shlb
xor
or
cmp
in
push
pop
pop
adc
or
inc
xor
test
sub
mov
ret
int
mov
jmp
ds
or
fldenv
sbb
sub
in
adc
dec
and
jb
mov
push
jns
rcll
fidivrs
jne
cmp
push
pop
ljmp
and
add
adc
mov
hlt
and
int
and
icebp
push
sbb
pop
jge
cmp
fmull
jl
scas
inc
ror
push
adc
std
mov
jno
repnz
jo
pop
inc
ljmp
and
fdiv
push
stc
std
lahf
daa
in
jecxz
pop
loope
fimull
out
imul
jne
cwtl
hlt
js
dec
ret
out
sub
subb
or
dec
outsl
pop
cld
or
xchg
lret
mov
leave
movsl
mov
lods
lea
add
push
pop
xor
or
bound
inc
dec
mov
lock
into
sti
lret
fstpl
add
mov
and
jo
cmpsb
lods
cli
mov
xchg
mov
mov
adc
arpl
mov
dec
xchg
rolb
pop
pushf
out
dec
std
jmp
movsl
test
xchg
scas
mov
dec
cmp
fdivrl
idiv
das
test
jl,pt
int3
fdivrs
and
lock
int3
les
shlb
xchg
jp
pop
and
mov
xchg
out
outsb
and
dec
mov
lea
insb
cmp
xchg
lods
les
xor
jmp
lods
es
mov
mov
arpl
adcb
fnstsw
pop
dec
push
or
push
scas
insb
fs
or
jo
daa
jge
and
mov
fistps
sbb
in
stc
pop
jge
mov
and
out
xor
dec
adc
pop
out
mov
orl
sbb
rcrb
adc
mov
adc
jmp
stos
cmp
sbb
or
sub
sbb
pop
cs
sub
and
sar
sub
fdivl
insl
scas
mov
sub
bound
aam
jne
and
push
fdivs
mov
ss
mov
mov
or
hlt
mov
jbe
pop
fists
call
repz
xor
dec
and
or
stos
jnp
mov
scas
pop
pop
push
movsl
fstps
cmp
push
bound
inc
push
bound
in
and
and
lods
mov
iret
inc
idivb
xchg
cmp
xlat
xor
ss
adcl
gs
xlat
adc
pop
mov
scas
mov
pushaw
fimull
xor
sbb
aam
lea
lcall
or
inc
cmc
push
jg
hlt
rorb
subl
pop
addb
mov
call
ljmp
mov
sbb
mov
dec
pop
mov
push
push
test
xchg
mov
daa
adc
addr16
mov
cmp
mov
jl
cmp
outsb
and
dec
cs
decl
mov
xor
sti
daa
mov
in
cmpl
mov
sbb
addr16
pop
xlat
arpl
pop
rclb
pop
or
mov
aam
jl
mov
lock
add
in
bswap
jne
cmp
cli
jae
jp
mov
idiv
add
jmp
ret
cmp
or
mov
jbe
adc
push
clc
sub
pop
adc
addr16
xchg
repz
sbb
ss
leave
mov
aam
lret
dec
jg
stos
lret
or
mov
fisubs
push
fldt
popa
fstpt
jno
mov
and
mov
or
dec
test
inc
fld
imul
cmp
xor
xchg
fsubrs
in
gs
enter
call
mov
jbe
xor
mov
js
movsl
test
push
clc
push
mov
mov
test
push
sub
sbb
xorl
push
jmp
mov
mov
arpl
fwait
lret
mov
ds
mov
sbb
jmp
cmpsb
jmp
cmpsb
inc
incb
divl
mov
xlat
jmp
ja
sub
xor
cs
dec
pop
repz
adc
xorl
test
shrb
aaa
adc
dec
cmpsb
sbb
and
or
out
dec
insb
fisubl
or
jg
not
outsb
pop
inc
shll
inc
int3
and
mov
or
mov
jae
icebp
sti
dec
dec
cmp
mov
dec
pop
and
jns
not
xchg
movsl
mov
insl
bound
int
in
out
jle
mov
mov
jge
mov
cmc
ds
in
mov
lret
mov
out
xor
sbbl
inc
and
and
pop
inc
cmp
sub
dec
mov
jae
sahf
push
punpckldq
push
inc
pop
mov
subb
add
pop
ds
mov
ljmp
ret
push
add
xor
js
ret
je
ds
or
iret
pushf
jb
inc
sub
pop
mov
xor
lret
cmp
sbb
stos
insb
inc
inc
out
fidivl
xchg
jb
loopne
test
cmpsl
cs
xlat
popl
inc
int
adc
sub
stos
mov
je
pop
cs
adc
mov
jmp
xchg
cmp
cmp
ret
xor
jae
es
pop
enter
mov
movsl
push
xor
lods
add
xor
fsubr
lahf
inc
popf
jbe
cmp
inc
add
adc
jmp
jne
faddl
or
jmp
xchg
repz
sbb
jno
ret
inc
mov
mov
dec
xchg
jno
xchg
rcll
aad
lea
dec
outsl
frstor
icebp
cs
sub
out
sub
clc
sbb
addl
repz
cmpxchg
das
mov
sub
xchg
leave
daa
stos
inc
mov
imul
inc
fs
pop
repnz
das
rcrl
pop
idivl
pop
in
mov
lock
cmc
ss
test
inc
adc
sbb
lods
test
mov
iret
mov
in
outsl
pusha
push
mov
jnp
adc
cmp
jno
mov
aam
and
out
loop
add
bound
jno
das
in
rolb
jle
pop
push
xchg
lds
xor
ljmp
xchg
sub
dec
add
pusha
je
fdivs
std
inc
fsubl
and
pusha
cmp
xchg
adc
dec
fsubrl
adc
out
sub
in
and
sub
cmpsb
xchg
std
js
adc
and
loopne
movsb
sbb
nop
pop
jle
ficomps
in
jno
or
movsl
mov
mov
sub
lods
dec
push
jnp
icebp
add
sarb
sbb
cmpsl
enter
pushf
jnp
and
insl
movsb
xor
dec
ljmp
mov
scas
inc
mov
ss
js
dec
adc
iret
mov
dec
cltd
orb
inc
cli
dec
andb
in
pop
cmp
xchg
rclb
shl
xchg
push
xor
cmp
inc
add
andb
stos
out
pushf
inc
xchg
mov
xchg
jbe
fs
cmc
mov
jb
sbb
stos
inc
arpl
pop
or
mov
sbb
jge
sbb
xchg
ret
mov
aam
mov
xchg
dec
sbb
loope
mov
fmuls
xor
xlat
pop
sbb
fsubrs
pop
jo
mov
pushf
lahf
lea
add
xor
ljmp
pop
jl
outsl
test
pushf
xchg
lahf
idivb
pop
xchg
adc
add
shlb
jno
add
daa
xor
mov
dec
mov
inc
bts
mov
insb
ret
lds
push
push
mov
mov
lods
push
test
lock
or
push
sahf
or
mov
ret
sbb
out
dec
scas
push
jno
fistpl
xchg
xchg
mov
movsl
hlt
cmp
jg
or
out
pop
xchg
or
cwtl
push
mov
dec
ljmp
repnz
pop
xchg
repz
mov
aas
jae
or
out
loopne
jns
push
add
cld
add
aad
js
adc
sbb
daa
cmp
lds
popa
and
push
pop
cmp
sub
arpl
imulb
insl
aad
push
aas
inc
out
lret
stos
jmp
ret
addr16
dec
lahf
push
add
clc
mov
mov
mov
jne
out
cmpsb
out
mov
push
insl
cmp
mov
dec
ljmp
or
mov
lret
mov
out
shrl
cmp
cltd
inc
repz
and
aam
popf
in
lds
adc
leave
movsb
ret
cmp
fwait
adc
bound
xor
dec
rorl
inc
xchg
lcall
add
lahf
sbb
imul
xchg
push
lcall
sahf
dec
jo
and
mov
in
inc
aas
push
xor
and
xchg
sbb
loop
xor
xchg
push
pop
dec
std
int3
out
jle
fs
int
ss
cmc
mov
es
jae
imul
push
outsb
cli
or
aas
jmp
xchg
jecxz
test
pop
lret
cwtl
cmpsl
ds
xchg
scas
ss
lret
push
pop
cwtl
scas
js
mov
or
add
cmp
push
add
adc
enter
mov
xor
cmpsb
pushf
pop
sbb
scas
je
repnz
loope
push
fcoml
pop
cmpb
lock
mov
cmp
pop
jge
dec
andl
cmpsl
roll
jbe
or
repnz
inc
or
lcall
cwtl
jmp
or
rclb
inc
stc
aam
mov
roll
inc
int
inc
xchg
cwtl
dec
dec
mov
rolb
lret
lahf
ret
addr16
js
insb
pushl
dec
mov
mov
not
loope
std
sbb
lcall
sbb
mov
cmp
push
ficompl
mov
or
jge
and
lock
sti
sar
in
pop
or
int
sahf
adcb
cwtl
pop
pusha
sub
inc
outsl
flds
push
test
and
mov
stc
mov
push
hlt
mov
aas
push
loopne
cs
push
dec
bnd
mov
sti
cwtl
xor
adc
sub
insb
dec
xor
and
lahf
cltd
test
dec
mov
outsl
jmp
push
jmp
mov
lods
call
int3
lds
lea
loopne
pop
rcrb
cmpsb
sub
add
jns
mov
fsts
fistpll
inc
jmp
fisttpl
cmpsb
aam
movsb
mov
xchg
adc
mov
nop
push
mov
sti
fsubrl
out
fistps
xor
or
mov
fisubrl
scas
or
lock
mov
fstl
and
cmpsb
pop
inc
push
or
pop
call
or
dec
repz
push
cwtl
test
jge
gs
dec
cmc
cmp
push
shll
jmp
cmp
aad
lods
clc
lods
dec
es
xor
mov
ja
cmp
and
popa
icebp
xor
sbb
es
roll
push
jge
add
shll
cmp
lds
mov
mov
push
inc
lods
cli
mov
fimuls
xchg
insl
mov
sub
xchg
pop
and
add
or
insl
cli
mov
pop
dec
lods
in
push
mov
sbb
ret
jnp
divb
mov
imul
or
lock
inc
and
lret
cmp
addr16
cwtl
cmc
mov
add
mov
xchg
dec
rolb
cmp
adc
lock
fldl2e
mov
xchg
icebp
in
mov
sbb
jno
push
or
mov
or
enter
xchg
aad
icebp
adc
in
add
push
cli
lahf
jle
mov
fsubs
aaa
cltd
mov
inc
mov
rcrl
hlt
test
ljmp
sub
stos
mov
sub
pushf
push
jno
mov
adc
in
aam
push
aam
mov
or
xorb
jne
mov
gs
jo
mov
aad
mov
or
push
popf
sub
aaa
aas
inc
pop
inc
imul
or
sub
inc
ss
rolb
repnz
jbe
cmp
jge
je
xchg
lods
mov
out
test
rolb
das
inc
mov
mov
jo
push
and
ja
adc
mov
lret
sti
aas
or
jg
cmpsl
incb
dec
cmp
dec
out
jp
inc
jns
xor
jecxz
std
dec
popa
or
mov
mov
xchg
enter
cltd
scas
mov
mov
add
idivl
outsl
mov
addb
adc
jmp
dec
and
adc
xchg
loop
setb
lods
rclb
ljmp
push
adc
and
mov
leave
pop
push
mov
sti
clc
mov
gs
cli
cmc
mov
inc
xorb
cmp
add
test
mov
adc
pop
lea
mov
mov
cmp
enter
pop
or
in
out
lods
dec
or
inc
fwait
imul
imul
das
xor
or
add
fstl
orb
mov
fcomi
cli
sbb
cmp
mov
cltd
pop
inc
pop
sbb
lahf
cmp
repnz
or
loope
adc
mov
sub
addb
out
push
js
jne
lcall
cwtl
outsb
jne
xor
sub
dec
mull
movsb
mov
mov
jae
cmp
sub
dec
ret
mov
call
sarb
inc
out
or
das
dec
pushl
xor
fst
push
sti
push
mov
sbb
cli
lahf
leave
pop
cmp
inc
inc
mov
sub
cmpsl
jne
loope
sbb
imul
cmpsb
stc
pop
mov
cld
push
cld
xorl
jnp
cs
fldt
mov
lret
pop
int3
adc
lods
shrl
inc
loope
cmp
mov
es
movsb
and
sub
cli
scas
fimull
xchg
aas
adc
and
cmpb
xchg
cmp
arpl
test
and
clc
scas
iret
lds
shll
mov
sub
dec
sub
insb
insl
data16
mov
sbb
rcrb
pop
cmc
lret
out
push
iret
fstps
xchg
xchg
fs
dec
dec
aaa
jg
mov
mov
jae
cltd
inc
cmp
dec
push
aaa
ret
movsb
xchg
aam
and
dec
mov
scas
fidivs
lods
xchg
rcrb
addb
sbb
insb
sbb
loopne
mov
sbb
inc
push
mov
ds
or
and
sbbb
loope
mov
out
mov
cmpsb
sbb
jmp
sub
sbb
dec
ror
cmp
loope
aam
mov
int3
mov
mov
movsl
xor
jns
jl
push
jecxz
and
push
cmpsl
aam
add
in
je
lds
sub
idivl
adc
pop
dec
ja
loopne
dec
or
pop
xor
push
cmp
int
push
sbb
loopne
jge
xchg
mov
cmp
popf
sub
dec
or
fcmovb
add
loopne
test
push
mov
sti
mov
jg
xor
call
jb
fwait
into
adc
loopne
adc
jno
and
adc
push
testb
data16
ret
fidivl
mov
jae
jb
sbb
hlt
pop
shll
movsb
jmp
jmp
das
sbbl
repz
in
int3
dec
test
cmp
stos
push
shrd
adc
andb
push
lods
dec
mov
jb
scas
test
popa
jbe
pusha
icebp
jo
decl
xlat
dec
loop
push
test
push
fwait
pushf
movsl
lds
arpl
sub
cmpb
cmpsb
leave
inc
lock
rcll
xor
cltd
dec
inc
push
aaa
inc
or
int
push
decl
into
inc
mov
mov
mov
je
add
fdiv
icebp
dec
dec
sub
test
test
data16
clc
stc
scas
rcr
int3
lret
outsl
hlt
jecxz
push
mov
fidivrs
xchg
adc
cwtl
idivb
adc
xchg
adc
inc
mov
mov
xor
xchg
pop
sub
mov
xchg
or
sbb
mov
aaa
mov
cli
enter
nop
fwait
inc
inc
xchg
inc
mov
out
andb
jns,pn
mov
xchg
push
push
leave
sbb
mov
nop
mov
out
pop
pop
push
mov
fisttpll
xchg
sahf
push
ror
lahf
xorb
popf
pop
test
repnz
sub
imul
mov
and
cld
push
mov
in
cs
loopne
nop
cmp
dec
xor
ret
push
pop
loope
test
sbb
sarl
fcoms
mov
loopne
add
push
subl
lahf
jge
fsubrl
dec
mov
in
add
jecxz
jae
int
mov
out
test
mov
xchg
jg
mov
stos
mov
push
stc
mov
cmp
imul
ss
mov
mov
aaa
addr16
or
ss
iret
pop
xor
fisubrs
lock
mov
aaa
jae
adc
popa
pop
mov
ffreep
ds
int
and
aad
pusha
icebp
cltd
xchg
xchg
mov
fidivl
test
popa
sub
test
or
dec
gs
mov
lods
scas
ss
es
cli
xor
jp
pop
jp
mov
xor
jb
xchg
mov
in
inc
pushf
pop
ljmp
push
data16
xor
mov
mov
rcrb
jne
xlat
add
popa
inc
es
lods
lods
or
jnp
mov
xchg
pop
loopne
jo
fsubl
jmp
scas
cmp
inc
aam
fs
cmp
jno
movsl
mov
out
sbb
xorb
or
imul
je
lods
mov
popa
cmc
mov
shll
stc
cmp
mov
cmp
jae
xchg
leave
in
xchg
push
mov
lock
int
push
xchg
lods
push
or
and
sahf
and
and
mov
mov
inc
int3
enter
dec
sti
dec
push
jns
stos
scas
in
lea
loope
sbb
xchg
ja
imul
xor
aas
scas
mov
sub
stos
push
scas
imul
sbb
mov
mov
dec
fsubrl
arpl
jno
je
jno
aam
cmc
and
mov
loope
add
aad
inc
adc
xchg
xor
xchg
js
pop
fnstsw
cmp
xor
sub
mov
les
sub
loope
aas
das
cmp
or
xor
dec
daa
enter
add
jbe
sahf
add
jne
out
cld
out
popf
jno
and
mov
mov
subb
sub
lods
mov
sbb
mov
sahf
aad
fwait
imul
sbb
jp
sarl
mov
push
in
rcll
lahf
stc
xor
inc
add
adc
dec
ret
sub
push
jge
xchg
ja
in
add
inc
inc
lret
jmp
test
jne
push
stc
call
cmp
mov
push
pop
jb
sub
sbb
into
outsb
sub
inc
ljmp
pop
je
inc
fnsave
enter
scas
jle
fdivs
mov
sti
jecxz
popa
mov
cmp
aad
add
xor
add
or
inc
insl
ret
icebp
inc
inc
lds
lret
out
mov
in
or
iret
mov
push
cltd
movb
fcompl
xor
sub
insl
test
data16
sbb
popa
pop
jno
addl
mov
xchg
daa
add
sahf
jge
mov
jl
je
pop
cli
mov
dec
jo
jnp
scas
adc
jb
lock
out
arpl
jno
jo
inc
sbb
jge
cmc
pusha
jo
push
xchg
add
mov
dec
jmp
lods
sbb
sub
mov
add
mov
inc
dec
xchg
enter
int3
dec
shll
or
push
sbb
sub
dec
rorb
mov
sahf
adc
cmp
jle
shlb
loop
fwait
shlb
mov
rorb
jns
pop
push
jno
addr16
inc
mov
jns
xchg
inc
lahf
cmp
jl
inc
outsl
push
mov
test
mov
sbb
and
or
xchg
push
inc
outsl
push
or
dec
movsl
jg
pop
sbb
mov
es
out
adc
push
repz
fbld
test
mov
mov
fidivrl
mov
jg
sbb
decb
inc
into
mov
mov
sub
sbb
add
lret
cmp
xchg
jge
mov
repz
mov
clc
nop
dec
jle
and
pop
in
inc
mov
xchg
out
sub
lock
ss
call
leave
aad
out
or
call
push
shll
aam
jg
adc
xchg
outsb
cltd
in
lcall
insb
adc
cltd
dec
jmp
mov
orl
push
pop
lods
jg
mov
fdivs
jecxz
insl
outsb
das
ficoml
mov
in
xchg
lea
stos
jbe
push
fidivs
pop
test
movsb
aaa
out
xorl
ret
icebp
shrb
mov
call
pop
adc
jmp
loope
xchg
sbb
das
loope
adc
arpl
xchg
shrl
mov
dec
sbb
out
jp
push
mov
or
sbb
mulb
push
pop
lahf
adc
xchg
lds
daa
sbb
testl
add
mov
cwtl
pop
sti
mov
data16
jb
jecxz
inc
movsb
jg
dec
mov
mov
mov
rclb
sti
push
icebp
fstl
adc
mov
cmp
fildl
mov
out
add
sub
or
mov
mov
and
mov
pop
dec
frstor
adc
popf
scas
cmc
push
push
in
test
movsl
cmc
lahf
mov
fs
fistps
cld
es
imul
pop
lock
xor
repz
loope
in
sbb
fsubs
adcb
push
mov
and
movsl
popa
jl
scas
jl
add
cmpsb
mov
add
or
jmp
adc
inc
dec
inc
cmp
ja
lea
ds
iret
int
clc
mov
push
in
fdiv
scas
xor
ret
inc
sbb
sbb
jnp
jmp
nop
ret
mov
jb
xor
mov
imul
push
jns
lods
shlb
sbb
aam
clc
or
jmp
or
lods
xchg
push
jno
pusha
int
xchg
arpl
fisttps
jae
mov
sbb
aam
shrb
adc
int3
test
jg
insl
neg
out
ja
pop
inc
adc
mov
inc
call
bnd
push
lret
jg
ljmp
dec
ds
nop
cmp
or
gs
cmpl
push
out
outsl
push
mov
roll
pop
mov
pop
fsubl
fsubrl
sub
sub
dec
jbe
sub
arpl
jl
outsl
stos
mov
mov
inc
push
and
add
xchg
push
jno
lock
dec
mov
hlt
sahf
enter
xchg
lock
mov
pop
fmul
ret
into
pop
or
sti
or
aaa
shlb
into
call
adc
cltd
sbb
in
iret
add
or
or
shr
cmc
mov
iret
lods
sbb
xor
cltd
xor
xchg
mov
sbb
and
loop
pop
cmpsl
xchg
xor
xchg
lcall
pop
inc
in
fwait
or
arpl
cltd
movsl
sar
dec
jo
inc
fiaddl
ds
push
xchg
lret
and
out
in
dec
dec
fsubs
and
fwait
insl
jb
jnp
fldl
jbe
dec
sbb
dec
push
in
and
in
dec
pushf
insl
or
insl
es
sub
mov
bound
push
xchg
push
out
push
jo
test
in
mov
inc
pop
jae
cmp
sub
push
imul
pop
adc
mov
xchg
in
adc
hlt
xor
outsl
gs
and
xorb
aas
cmp
dec
and
xchg
iret
ja
jnp
xchg
or
movsb
add
or
push
lahf
das
push
inc
adc
sub
pop
pop
pushf
xchg
das
std
loop
lods
xor
lea
das
out
sbb
xchg
out
or
or
or
int3
sbb
ljmp
dec
mov
xor
sbb
cmp
sub
stos
add
divl
ja
aaa
or
xor
xchg
add
in
jbe
or
inc
cmpsb
and
xchg
push
leave
dec
xchg
call
inc
cmc
jnp
jbe
jne
dec
xor
jl
adc
push
notb
iret
inc
mov
or
in
pop
dec
pop
cltd
mov
sub
in
hlt
std
mov
icebp
popf
cmpsb
loope
test
loopne
pop
shld
pop
sbb
lods
std
fs
inc
dec
mov
cmp
test
ljmp
lods
cmp
js
push
aam
daa
adc
adc
ds
adc
pop
into
lahf
mov
mov
xchg
mov
lahf
dec
movsl
sbb
arpl
sbb
andl
jb
test
test
push
mov
push
push
pushf
and
or
arpl
dec
pop
xchg
test
in
mov
and
cli
pop
inc
inc
pop
subl
sbb
mov
aaa
cld
insl
out
pop
jbe
and
lret
and
or
in
mov
nop
add
xchg
cmp
outsl
fsubs
fidivs
push
cmpsb
adc
mov
in
jmp
jmp
or
or
nop
fwait
pop
pop
dec
subl
bound
push
add
mov
sbb
gs
add
sub
loop
mov
pop
orb
jnp
arpl
push
hlt
adc
jo
jo
fcmovu
loop
mov
sbb
push
insl
or
out
sbb
insb
stc
push
scas
xor
mov
jle
jmp
or
data16
mov
ljmp
movsb
jne
iret
jge
in
movsl
lea
scas
xchg
or
hlt
mov
out
rclb
mov
mov
push
fs
sbb
mov
rcll
es
das
mov
into
jne
push
lds
xchg
or
rol
je
int
xchg
dec
sarb
mov
push
dec
ret
ljmp
fadds
push
hlt
jle
outsb
movsl
out
push
pop
movsl
sbb
aad
xchg
dec
sub
lret
je
or
mov
ds
lods
jo
jne
addl
mov
adc
sbb
je
test
rorb
adc
fsub
cli
mov
mov
ljmp
int3
xor
jp
add
testl
les
mov
xchg
cmp
sbb
ds
std
cwtl
jnp
inc
mov
cli
pushf
sbb
stos
cmc
clc
cld
xor
inc
dec
xchg
mov
fimull
repz
or
mov
daa
mov
add
es
push
or
js
mov
pop
adcb
lret
sti
mov
xor
sbb
out
dec
add
or
rcll
fistl
inc
inc
cld
sub
dec
sub
jg
in
sub
dec
loop
push
or
sbb
cwtl
inc
mov
fsubp
lahf
mov
std
repnz
pop
test
mov
nop
ja
mov
scas
leave
inc
pop
xor
xor
sbb
loop
test
add
vphaddbw
and
and
lods
inc
push
mov
bound
mov
inc
mov
lahf
popa
xchg
mov
mov
call
aas
push
cmp
xchg
outsb
daa
popa
clc
pop
and
adc
int
xor
xor
and
push
mov
xlat
outsb
movsl
fcomps
mov
sub
stos
dec
jle
jo
insb
xor
popf
shl
mov
mov
adc
push
inc
jbe
int3
cmpsl
mov
xchg
enter
mov
inc
icebp
sbb
inc
adc
dec
gs
data16
insb
cmpsl
ds
rcl
cli
mov
mov
sbb
dec
data16
pop
mov
rorl
lock
inc
inc
adc
push
lds
insb
sbb
jl
mov
push
lock
push
mov
push
sahf
xor
in
mov
cmc
out
or
out
xchg
add
xchg
mov
inc
fsubrp
cld
cmp
and
inc
pop
idivb
dec
fists
mov
xor
cli
ja
and
and
jg
fnstenv
mov
jno
icebp
cli
jae
and
pop
icebp
dec
inc
mov
jg
shrb
mov
sbb
and
inc
mov
scas
xchg
es
jnp
es
inc
fisubrs
dec
iret
data16
sti
xchg
int
aaa
into
ret
ret
call
bound
out
imul
cmp
push
inc
fimuls
sub
mov
sti
xchg
lods
mov
jle
into
adc
nopl
xor
dec
sahf
mov
sahf
mov
mov
jle
or
jno
xor
dec
nop
mov
mov
testb
or
pop
mov
pop
mov
inc
mov
lock
aad
mov
cmp
and
sub
jb
push
out
mov
push
call
pmaxsw
mov
imul
mov
mov
mov
fs
mov
pop
xor
imul
ja
mov
insb
lods
xlat
and
stc
xor
pop
imul
push
inc
mov
mov
xchg
cs
ret
pop
adc
xchg
sub
xor
imul
push
mov
add
mov
sti
xor
xchg
imul
inc
mov
mov
adc
ss
xor
popa
imul
lahf
inc
mov
lret
cmp
sahf
out
test
rolb
out
xchg
dec
in
mov
popf
xlat
imul
mov
inc
cld
xchg
xor
cmpsl
ds
pop
sahf
xlat
mov
adc
pop
imulb
xchg
and
int3
arpl
adc
movsb
cmp
fs
adc
mov
ficompl
fdivl
xchg
popa
fcos
xchg
add
movsb
cmp
add
and
int3
arpl
jge
mov
enter
jb
ljmp
or
cwtl
push
cld
xchg
push
mov
lods
push
insb
add
les
popa
pop
mov
pop
mov
push
mov
dec
loop
add
out
ds
hlt
pusha
pop
repnz
addr16
xchg
cs
pop
movsb
cmp
pop
repz
inc
ficomps
pusha
imul
pop
sbb
xor
push
dec
out
repz
repnz
pop
repz
lahf
and
sbb
pop
mov
pop
bnd
mov
and
es
sbb
fidivl
insb
add
mov
mov
mov
xchg
iret
iretw
and
jb
out
pop
out
pop
jg
and
leave
pop
repnz
adc
outsb
add
and
test
jge
into
movsl
add
repnz
sti
xchg
mov
jb
jnp
mov
les
scas
push
pop
repnz
enter
je
aam
pop
movsb
cmc
sbb
decl
or
or
les
pop
mov
ret
call
jb
push
dec
fisttps
xchg
sub
pop
repnz
jns
push
mov
jl
loope
jl
movsb
mov
aad
shrl
test
and
xchg
jne,pn
das
and
gs
ja
ret
pop
push
cltd
dec
loop
aaa
test
add
test
jg,pt
int
add
mov
push
stc
add
mov
and
or
rcrl
mov
sbb
ret
sbbl
fistpl
nop
daa
dec
cld
out
sub
pop
cmpsl
dec
add
lcall
add
es
cmpsb
scas
inc
dec
loop
iret
inc
xchg
imul
sbb
jmp
in
sub
insb
jl
fwait
xor
dec
arpl
pop
mov
rcrl
loop
add
imul
std
xchg
loopne
sbb
xor
push
inc
fildl
push
out
jo
add
sub
dec
mov
jne
mov
dec
sahf
cltd
daa
leave
popa
loope
lcall
ljmp
pushf
cmp
adc
test
inc
loope
mov
mov
push
or
lret
xor
pop
dec
flds
lods
pop
out
sbb
and
shlb
dec
lahf
sub
add
lret
aad
call
pop
jmp
push
xchg
mov
push
jp
cmp
inc
loope
push
mov
mov
jbe
pop
movsl
sahf
daa
fnsave
sbb
sub
lcall
adc
mov
cmpb
sbb
leave
pop
xor
pop
out
imul
mov
xlat
js
or
stc
lea
mov
pop
outsb
or
lods
mov
test
std
push
sub
pop
cmp
andb
lahf
scas
dec
mov
pop
shl
arpl
adc
aam
sub
lcall
lcall
int
mov
paddb
cmpsb
adc
cs
hlt
insb
aad
cmpsb
mov
add
sub
push
aas
push
xor
jle
shlb
test
shll
xchg
and
jmp
shll
cs
jbe
out
mov
lea
jmp
dec
ljmp
js
data16
mov
mov
cs
adc
cwtl
sbb
push
loop
cmp
xor
int
inc
add
mov
cs
loope
push
loopne
xorl
mov
push
pop
sub
jbe
jp
jo
pop
fmul
lea
ret
in
sbb
cltd
sbb
js
jo
lea
fwait
mov
lds
cwtl
sbb
adc
addb
sub
jle
rclb
push
loop
lret
or
xchg
cmp
fcomps
mov
jb
jecxz
lods
cwtl
lret
add
xlat
jb
or
insb
jnp
lods
movsl
test
sahf
ljmp
subl
sub
lcall
btr
stos
sti
jg
hlt
daa
lret
repz
es
jl
xchg
mov
jl
add
jl
cmp
test
icebp
jle
xchg
sbb
std
lds
mov
or
scas
dec
xor
aas
mov
scas
movsl
cs
xlat
test
sbb
xor
mov
push
dec
dec
ljmp
jns
aad
shrd
out
push
mov
jp
daa
aad
test
loope
clc
mov
cld
insl
sub
push
mov
xlat
fs
fwait
sbb
roll
sub
xor
dec
insl
mov
test
gs
add
jae
adc
out
mov
fsts
scas
or
ss
or
push
in
scas
pop
aas
nop
iret
jo
add
xchg
push
add
add
cmpsl
push
nop
daa
mov
ret
pop
cli
stos
mov
insl
dec
std
aam
das
outsl
clc
mov
ret
repz
test
idivb
push
dec
mov
cmp
pushf
pop
icebp
int
and
and
jne
inc
insl
jae
cld
xchg
out
hlt
mov
pop
sbb
sbb
rorb
lods
pop
hlt
fisttpll
jg
xor
jle
adc
sub
xor
xlat
test
js
fdivrs
iret
or
jge
push
in
pop
popf
fnsave
je
stos
in
sti
xchg
pop
rcll
mov
sub
inc
pop
xorl
mov
mov
jae
pop
mov
mov
or
sarl
mov
xor
in
push
leave
pusha
xchg
mov
testb
stc
sbb
cmp
test
add
in
arpl
inc
out
aam
pop
push
adc
xor
aam
imul
cltd
lret
xchg
or
fidivrl
iret
stc
dec
cmp
mov
gs
cmp
jbe
orl
mov
sbb
repz
xchg
sub
adc
and
mov
dec
imul
push
or
sti
xchg
jl
pop
testb
xor
jle
lahf
insl
mov
daa
out
mov
pop
call
jmp
mov
xor
lret
inc
mov
ret
fsubrs
dec
and
stos
ss
mov
lods
rorb
stc
dec
icebp
cmp
sbb
mov
ret
adc
fwait
xor
sbb
out
cld
jae
mov
xor
decb
sbb
mov
icebp
push
sbb
mov
add
or
xchg
loop
insl
add
add
mov
and
pushl
pop
adcb
or
fistpll
cmp
cmp
adc
inc
jo
popf
mov
mov
shl
ss
icebp
popf
xor
jge
and
adc
sti
pop
xor
icebp
lods
or
xor
and
insl
pop
ljmp
imul
mov
ret
pop
flds
cmp
decb
cmp
icebp
lods
js
xor
cmp
dec
sbb
data16
jle
cmp
inc
mov
cmpsl
ds
dec
mov
jle
lds
out
sub
in
add
leave
aam
mov
shl
mov
cmpsb
mov
xor
or
sbbb
loope
cmp
ret
fdivr
xchg
push
add
cli
js
js
jge
test
pushf
stc
nop
push
sub
pop
dec
and
dec
push
cmp
inc
or
sahf
cmp
test
clc
jns
ljmp
cmp
mov
mov
loope
jg
and
mov
jnp
repnz
and
jmp
xor
sub
testl
push
mov
xor
inc
pop
movsl
cmp
push
addr16
cmp
jno
icebp
or
jp
jp
popa
lods
out
jmp
in
test
mov
mov
sbb
mov
xor
inc
pop
dec
loop
jne
cmc
data16
loope
jno
push
push
scas
inc
or
add
pop
sahf
xor
xor
aas
xorl
ds
and
scas
repnz
pop
cmpsl
ds
imul
adc
xchg
cmp
jno
fwait
xor
clc
jbe
sub
lahf
ss
scas
mov
cmp
push
sahf
xor
xchg
sbb
test
dec
sbb
sub
inc
fnstcw
lea
add
xor
push
jmp
mov
inc
outsb
mov
mov
daa
mov
pushf
in
and
gs
out
xor
loopne
stc
nop
inc
adc
test
arpl
inc
mov
inc
sub
cmp
cmp
add
dec
mov
mov
insb
outsl
jns
mov
sub
jns
and
push
dec
cmpsb
add
pop
add
les
stos
sbbl
lcall
rolb
inc
dec
loop
pop
jmp
adc
mov
sti
movsb
xchg
xlat
cli
sub
jmp
xchg
sub
ljmp
mov
outsb
add
gs
lret
in
xchg
pop
add
or
imul
jmp
in
popf
push
call
arpl
sarl
mov
stos
scas
loopne
dec
adc
in
or
out
xchg
xlat
scas
inc
leave
sbb
jle
sub
movsb
jge
subl
hlt
push
outsb
pop
out
pop
push
push
fimull
adc
inc
dec
adc
cmp
mov
mov
repz
pop
and
sub
andl
pushf
lret
mov
or
jnp
sub
insb
ret
xor
rep
push
movsl
pusha
jbe
sti
test
adcb
das
jbe
pusha
cwtl
shrl
call
mov
inc
adc
sub
fcomp
jae
xor
movsb
into
out
test
test
and
leave
sbb
dec
addb
mov
jmp
dec
pop
icebp
in
sbb
out
nop
daa
add
les
pop
mov
arpl
and
xchg
push
mov
or
movsl
push
cmp
cmp
dec
in
pop
test
xsha1
cmpsb
mov
push
ljmp
inc
hlt
mov
out
loopne
xor
rcrl
repz
cld
mov
out
popa
and
xchg
mov
lds
dec
pop
out
jge
shrb
cld
sbbb
mov
sub
mov
pop
iret
sub
shlb
scas
lret
ss
push
loope
pop
adc
data16
jb
cltd
cwtl
das
or
rclb
fidivl
jae
cmp
cs
popa
push
fdivl
call
xchg
sub
movsb
xor
adc
inc
shlb
pop
jo
andb
add
int
sahf
mov
lods
mov
jne
dec
inc
fstpt
fucomip
jg
sub
repnz
int3
sbbl
int
mov
push
lret
or
push
aas
into
pusha
testl
lret
or
testl
sbb
dec
xor
cmp
fsubrs
xor
arpl
mov
adc
sub
mov
test
xor
bound
pop
hlt
and
adc
out
test
mov
das
sub
mov
fcomps
aad
shll
shrb
adc
sbb
or
aad
rclb
inc
xlat
lds
push
jmp
test
mov
testl
xchg
mov
mov
mov
jb
loop
stc
sub
or
fnsave
leave
into
xor
lock
xor
adc
inc
jno
pop
icebp
add
les
jbe
js
jb
movsl
imul
rcrl
in
pusha
pop
fwait
xor
arpl
add
add
xor
adc
cmp
pusha
imull
stos
in
sbb
pusha
push
out
push
pop
jp
mov
lea
clc
push
jmp
stc
mov
sub
int3
arpl
lods
loope
ficomps
push
jmp
cltd
repz
into
loop
rorb
out
cmp
outsb
ja
jae
jmp
inc
ficomps
imul
sahf
icebp
mov
xlat
popf
xor
push
les
iret
cmpsl
add
mov
clc
sti
inc
jg
jp
push
ljmp
mov
mov
sbb
or
loopne
push
adc
cmp
lods
into
or
clc
popl
and
mov
leave
je
lret
cmpsb
or
int3
jge
data16
push
adcb
dec
icebp
jb
jecxz
movsb
cmp
push
jmp
cmp
mov
test
adc
leave
js
subb
sbb
imul
adc
pop
out
add
mov
mov
mov
xchg
sub
xor
mov
push
jecxz
addr16
aam
xchg
push
xchg
mov
rorl
cld
leave
pusha
out
jne
aad
in
ss
and
push
lock
cmp
sbb
dec
loope
or
push
das
movb
stc
addl
icebp
aaa
ret
mov
insb
add
mov
mov
xchg
sub
lea
loopne
jns
inc
mov
jbe
ss
icebp
in
and
pushf
xor
jno
sub
pop
lock
subl
mov
mov
shlb
pop
repz
out
outsb
add
mov
cwtl
das
fdivs
ret
sub
popf
xchg
aam
leave
loopne
inc
rclb
sub
cmpsl
mov
lods
inc
mov
cmp
data16
lds
loop
jecxz
and
adc
lret
pop
hlt
or
sub
les
push
cs
adc
outsb
inc
lahf
dec
in
add
cltd
ss
xchg
sub
loope
dec
in
push
es
pop
push
out
in
push
jmp
jg
es
cli
mov
sub
lods
mov
xor
enter
fmuls
cwtl
das
lea
arpl
sarl
xorb
sub
daa
jbe
mulb
daa
mov
pop
xchg
xor
ret
fwait
jo
or
push
xchg
subl
pop
repz
in
test
or
sbb
mov
test
and
scas
push
add
push
jbe
inc
flds
jo
cli
or
mov
sbb
iret
mov
inc
mov
ror
repz
je
sub
mov
lahf
cltd
addr16
cltd
mov
fnsave
inc
fdivrl
push
in
addl
sbb
jecxz
sub
and
mov
fistpll
mov
cld
int3
stos
fldcw
out
test
and
cmc
mov
inc
mov
cmpsl
adcl
fdivl
dec
fbld
std
xchg
outsl
inc
gs
js
sbb
lret
fnstcw
aaa
daa
sub
out
pop
inc
mov
or
xchg
fdivs
leave
nop
sub
loop
xchg
sbb
sbb
push
shrl
xor
mov
fsts
push
pop
adc
popa
jno
lds
ret
dec
jecxz
aad
inc
pop
push
imul
sub
arpl
mov
fwait
jnp
subl
shufps
daa
mov
xchg
jb
fsubl
mov
adc
xchg
push
sbbb
push
inc
fldl
inc
push
out
cld
rcrl
jp
sub
jecxz
loopne
mov
fcomip
push
popf
out
mov
mov
mov
cmp
pop
icebp
fwait
jmp
jg
int
push
lods
adc
movsb
cmp
ret
mov
mov
dec
loope
mov
jl
cmpsl
inc
hlt
mov
and
mov
inc
inc
xor
ss
mov
inc
xor
mov
pop
pop
mov
pushf
xor
shrb
mov
fwait
pusha
add
lods
sbb
jp
filds
adc
pop
xlat
dec
loope
jno
mov
add
rcll
and
add
jae
xor
loop
imul
hlt
mov
lods
mov
mov
cmp
dec
sti
xchg
aas
xchg
mov
adc
inc
xor
adcl
hlt
in
xor
jmp
in
or
negl
in
movsb
int
mov
push
lods
push
movsl
sbb
sub
inc
fidivs
mov
movsb
and
adc
xchg
fmuls
mov
xchg
stos
jge
mov
lahf
icebp
hlt
leave
pusha
es
cmp
out
sti
xchg
shl
sbbl
xchg
or
push
mov
add
push
out
outsb
add
pop
test
das
fistl
inc
dec
sahf
ret
mov
mov
cwtl
aam
lret
fnstenv
push
popf
mov
cmp
cmpsl
push
ret
pop
pop
out
daa
mov
pop
fidivl
enter
rcll
int3
arpl
push
outsl
push
inc
jns
or
test
pop
imull
call
inc
dec
jmp
popa
fisttpll
fnsave
in
jnp
call
arpl
mov
in
jg
or
add
cmp
bound
lahf
mov
aam
xchg
shll
add
pop
out
ljmp
lret
mov
mov
push
lods
cs
jl
pusha
jb
push
out
out
xchg
gs
push
cmpsl
sbb
pop
lahf
sub
shrb
sub
pop
hlt
enter
pop
addr16
insl
push
call
mov
inc
mov
lods
add
mov
sub
fbstp
xlat
aad
leave
push
ret
pop
jmp
sbb
lea
les
call
das
pusha
dec
jecxz
stos
sbbl
push
fwait
xchg
sub
fs
sahf
push
mov
pop
mov
cmp
imul
pop
out
stc
nop
and
mov
cmpsl
or
pop
lahf
cmp
outsb
pop
xchg
inc
fmulp
outsl
mov
call
add
testl
ljmp
ljmp
into
mov
sti
xchg
inc
ss
jns
movsb
test
xor
into
popa
sub
clc
sbb
xchg
popf
mov
lds
ret
repz
sub
mov
mov
daa
sub
xchg
ss
sbb
mov
repnz
cs
ds
xor
lock
add
pop
popf
xor
pop
and
jle,pt
pop
icebp
push
mov
sbb
lahf
pop
xchg
lcall
xor
pushf
inc
pop
js
jg
jbe
cmc
stc
mov
xchg
ljmp
add
jns
aam
sbb
xchg
mov
pop
or
add
dec
rcrl
add
nop
js
or
pop
inc
fdivrl
std
xchg
pop
ljmp
and
dec
loopne
push
clc
popl
fs
scas
cmpl
push
cmc
mov
out
pusha
imull
call
push
out
or
mov
mov
mov
pop
enter
add
xchg
sub
pop
out
xchg
lds
mov
sti
inc
iret
data16
sub
jmp
stc
nop
sub
int3
arpl
mov
mov
xchg
gs
test
xchg
test
jae
push
call
arpl
sbbl
arpl
jbe
scas
xchg
sub
cwtl
sbbl
lcall
pusha
mov
les
dec
sti
xchg
jp
pop
repnz
or
sbbb
cwtl
das
and
inc
fildl
jae
leave
jne
addr16
movsl
cmp
xchg
jns
or
or
stos
aas
fnstenv
fdivrl
sub
dec
jecxz
lods
sbb
cltd
cmc
cltd
daa
mov
ja
xor
xor
xor
push
mov
cld
push
dec
push
call
or
xchg
aas
into
cltd
xor
push
xchg
sub
stos
inc
stc
je
shlb
fstl
xor
mov
test
jle
or
inc
cli
push
addr16
pop
shll
push
sbbb
test
lods
inc
pusha
das
test
add
aaa
sub
test
in
test
lods
icebp
mov
fcoms
scas
or
aas
aas
rolb
add
mov
enter
jno
arpl
and
push
out
mov
mov
fwait
xor
popf
std
xchg
iret
repz
mov
adc
ljmp
ret
ficoms
lsl
mov
cld
ja
sub
mov
lods
insb
and
pop
sub
push
pop
mov
into
in
dec
sbb
inc
sub
mov
cmp
and
mov
stos
xchg
sbb
enter
sub
cmp
shrb
das
add
mov
mov
inc
sub
push
lods
adc
sbbl
aad
fadds
lds
cmc
inc
rclb
test
cmpsb
sub
mov
and
mov
pop
rcrl
shrl
paddq
xchg
xor
add
pop
popf
cmp
sub
adc
lahf
insb
inc
fstpl
pop
push
out
sbb
jp
jle
or
sub
repz
mov
fs
fcomps
clc
xor
jmp
sbb
pop
xchg
insl
je
pop
repz
movsl
test
mov
inc
xchg
cmp
les
dec
in
sti
fdivl
xor
gs
cmp
adc
nop
adc
or
sahf
sarb
inc
rol
inc
fdivp
adc
mov
cmpsb
call
sbb
sub
sub
xor
pop
inc
mov
aam
cmp
sti
inc
mov
mov
cmpsl
test
pop
imul
das
cmp
jno
fwait
xor
clc
mov
sbb
pop
lock
fisubs
xor
xlat
scas
inc
or
pop
idivb
fnstenv
jge
outsl
imull
out
jb
mov
mov
mov
xor
and
push
jmp
jo
adc
pop
mov
pop
daa
dec
out
pop
xchg
sub
es
pop
dec
cs
out
push
shrl
scas
sahf
xor
cmp
loop
mov
jecxz
je
data16
xchg
cwtl
fs
or
xchg
xchg
sub
jae
pop
test
enter
xchg
loopne
xchg
jae
sbbl
xorl
mov
push
ja
mov
or
test
adc
xchg
loop
jae
add
movsb
xchg
xor
movsb
push
aaa
into
test
popa
clc
jne
jge
lods
std
popa
clc
cs
fwait
xor
push
jg
pop
pop
mov
cmc
xchg
mov
scas
pop
aas
xchg
mov
in
cvtdq2ps
fcomps
les
insb
cwtl
mov
mov
fiadds
dec
fs
sti
inc
pop
adc
scas
lret
add
or
xor
stc
or
xchg
mov
dec
dec
cli
loopne
jns
cmp
sub
cwtl
cmp
repnz
cmc
in
dec
clc
pop
pop
repz
out
testb
inc
fcom
jp
fdiv
mov
dec
or
les
mov
iret
or
adc
sbb
enter
nop
jmp
jo
jl
push
jns
push
repnz
ret
ja
mov
test
pop
sahf
js
add
ret
sbb
gs
fs
dec
mov
popa
mov
and
push
cmp
xchg
cmp
or
push
aam
sub
mov
shrl
sahf
in
pop
les
mov
scas
loopne
test
cltd
ljmp
pop
ss
and
push
out
and
mov
dec
je
hlt
shlb
jl
pmullw
outsb
test
shr
cwtl
adc
ja
mov
jge
cmp
enter
sbb
dec
in
xor
add
rorb
outsl
test
or
in
popl
gs
scas
inc
lret
xchg
mov
stos
jg
mov
jg
xor
addr16
and
jecxz,pt
pop
pop
out
push
gs
jo
mov
in
inc
mov
jns
or
lods
xor
rol
insl
cmc
lods
add
add
mov
push
sub
dec
les
add
pop
roll
mov
mov
mov
ret
test
int
mov
sub
dec
les
mov
jl
sub
pop
sub
push
pop
lcall
push
jmp
in
pop
jb
xchg
jo
das
mov
lea
mov
or
jle
and
daa
test
jb
dec
fadds
in
jno
adc
rclb
ret
cmp
cmpsb
sub
fs
fisttpll
in
push
jecxz
pusha
stc
adc
sub
mov
cs
xlat
cwtl
mov
mov
cwtl
leave
xchg
hlt
outsb
push
pop
mov
xor
leave
pop
sarl
icebp
inc
cmpsl
ss
ljmp
sbb
dec
pop
sub
and
leave
or
js
and
pop
in
adc
test
mov
xlat
lds
mov
fsubr
xor
insl
inc
dec
adc
into
pop
xor
jecxz
lds
jne
fidivl
or
add
jne
decb
push
sbb
mov
xor
jo
movsl
pop
jns
dec
stc
stc
and
jne
mov
sub
add
pusha
push
push
push
xchg
sub
sbb
mov
data16
sub
jl
add
lock
xchg
jmp
sbb
rclb
ret
mov
aas
jne
lods
xchg
add
idivl
adc
add
pop
adc
sub
and
cs
xchg
aas
xorl
push
pop
pop
aad
popl
adc
and
stos
sub
stos
mov
stos
push
dec
out
imul
aaa
sbb
into
and
xor
cmc
pop
mov
rorb
dec
lock
pop
mov
mov
cmp
loope
test
sti
les
bound
test
jg
jge
push
lea
mov
inc
xlat
lds
inc
iret
in
cld
cmc
imul
push
inc
aaa
aam
or
lds
or
test
es
push
lds
xor
sbb
mov
inc
mov
push
sbb
lea
lret
int3
xor
adc
pop
sbb
dec
je
xchg
shl
scas
sbb
rcrb
and
mov
pop
lcall
test
xor
mov
push
dec
cmpsl
push
cmp
imul
or
and
xor
mov
sbb
shll
pop
inc
popa
enter
jno
add
insb
in
aam
inc
test
orb
test
insl
mov
mov
cltd
jnp
lret
mov
mov
lds
hlt
inc
sub
movsl
cmp
pop
and
test
inc
jmp
clc
lret
xchg
fnsave
mov
jge
xlat
repnz
daa
or
js
pop
pushf
mov
jbe
aam
aaa
xchg
mov
gs
push
jb
repnz
incl
or
sub
aaa
push
xlat
jb
gs
cmp
and
adcl
xorb
aaa
dec
and
xchg
out
pop
mov
sub
mov
shll
test
jno
test
sub
xchg
cmp
lahf
mov
sbb
clc
pop
cmovbe
movsb
loop
imul
insb
movsb
sbb
fdivr
aam
cmp
push
sbb
call
adc
aam
jo
mov
adc
sub
xchg
cmp
push
std
xor
mov
cwtl
sub
and
dec
daa
enter
cli
push
push
add
pusha
negl
xor
xchg
adc
fcom
fwait
xor
cli
outsb
add
push
dec
mov
test
test
ror
testb
pop
adc
test
sub
mov
xor
movsl
add
sub
cmp
inc
cli
dec
cmp
mov
xlat
test
fcompl
push
stc
pop
push
push
stc
imul
ret
add
dec
cltd
sbb
movsb
adc
cmp
loope
pop
leave
loopne
es
shrl
stc
add
jne
aad
and
and
dec
mov
dec
mov
mov
push
mov
add
cli
lods
aad
pop
mov
call
pop
xchg
pop
cmc
stc
add
push
in
call
mov
lock
push
xchg
mov
mov
cmp
dec
mov
add
cwtl
push
push
sub
daa
jg
add
cwtl
add
js
cmc
rcrl
push
shrb
cmpsl
das
lods
stos
xlat
js
sarb
mov
enter
out
mov
cmpsb
lock
xchg
mov
pop
mov
rcll
js
aas
cmpsl
inc
pop
outsl
repz
arpl
nop
scas
fucomi
pusha
sub
lret
ja
iret
push
cmp
push
in
jecxz
inc
negl
ficoml
mov
pop
add
lea
js
test
pop
je
xchg
pop
push
dec
mov
xor
stos
ja
push
fsubrs
jb
ret
inc
add
shld
fidivs
cli
adc
push
sbb
or
testl
arpl
xor
mov
inc
popa
pop
adc
test
scas
mov
fld
pop
push
dec
jecxz
hlt
out
jnp
pop
testl
es
pop
add
sub
pop
sub
pusha
xor
out
outsl
push
cmp
push
fcoms
popa
dec
test
jle
int3
xlat
iret
push
fcompl
andl
cld
sahf
jge
mov
outsl
mov
data16
mov
lds
ja
mov
fcmovne
imul
popf
ljmp
jb
adcb
xchg
xchg
sub
lock
out
dec
sbb
push
movsl
adc
shlb
xor
out
test
or
or
sub
dec
sub
fistps
mov
ret
xor
jp
xchg
cwtl
add
daa
pop
mov
sub
cmp
pushf
mov
mov
test
and
cld
and
push
sbb
pop
repz
gs
sub
pop
arpl
nop
in
mov
pop
mov
sbb
inc
iret
data16
mov
test
dec
sbb
scas
fadds
or
rclb
pop
cmc
pop
and
jne
jge
adc
jno
and
data16
sub
pusha
arpl
xchg
in
mov
push
mov
sbb
aas
iret
data16
mov
test
call
xor
push
cmp
pop
outsb
aaa
data16
push
mov
dec
imul
jo
mov
mov
cmp
repz
mov
inc
pop
inc
fisttpll
scas
in
loopne
xchg
sub
add
lcall
and
xchg
cmpsb
aas
xlat
mov
mov
clc
pop
cmc
sub
nop
cmpsl
mov
cld
xchg
jl
cs
cmc
adcl
hlt
cmp
inc
pop
and
pusha
loop
lods
subl
fistps
adc
aas
les
sbbb
test
nop
rorl
mov
adc
loopne
lfs
test
xor
lret
aad
loop
xchg
call
add
push
popf
sbb
push
lods
cmp
insb
into
movsl
cmp
mov
mov
loopne
notl
jne
js
xor
fs
test
dec
fdivrs
rcrl
rcrb
jle
lea
rcll
add
cs
and
leave
push
mov
push
out
or
imul
outsb
add
xchg
sbb
cmpsl
jecxz
stos
inc
lahf
add
dec
rcr
repnz
inc
mov
sbb
idivb
fnstenv
or
pop
lds
testb
pop
or
jnp
into
gs
push
cmp
inc
inc
test
jl
mov
pop
daa
mov
push
jnp
inc
insl
dec
cld
xchg
jg
pop
lock
pop
cmc
gs
xchg
mov
xor
cmp
cmp
jl
pop
add
cmp
sbbl
xor
outsl
add
push
popf
add
push
movsl
and
mov
es
in
cmpl
loop
testb
dec
adc
jl
daa
mov
pop
jge
mov
push
jmp
nop
aad
add
xchg
inc
and
test
hlt
mov
cmc
mov
dec
dec
loope
pop
xchg
sub
cld
cmp
and
jg
fldcw
repz
sub
xchg
sbb
adc
daa
cmp
test
iret
fs
sar
adc
loop
cs
inc
ffree
cmc
test
out
mov
mov
outsb
add
push
fildll
das
lds
jp
fadd
cltd
xor
sub
sahf
scas
inc
leave
call
loopne
clc
sti
les
movsl
out
fisttps
adc
cmc
mov
sahf
xor
movsb
ret
in
cmp
and
mov
stc
call
mov
mov
sti
in
lods
hlt
mov
push
and
fldenv
sbb
stc
xor
js
cmpsb
mov
mov
push
dec
lret
dec
fsubrp
cli
xchg
ffree
xor
clc
fdivl
movsl
mov
sbb
int
test
xsha256
cmpsb
push
out
adc
cmp
test
lret
mov
fldl
inc
xchg
out
stos
inc
loope
ret
pop
push
add
jne
dec
pop
hlt
nop
xchg
mov
dec
sub
lcall
aas
sub
dec
cltd
xor
push
mov
popa
test
push
sub
arpl
jle
data16
test
movsb
cmp
inc
and
sbbb
fimull
lods
push
lods
sbb
ds
jp
shlb
into
sarl
xor
loop
ljmp
lea
sbb
jne
pop
xor
js
dec
jecxz
cltd
cwtl
das
or
mov
cld
sub
mov
mov
mov
xor
pop
icebp
notb
inc
stos
je
shlb
push
into
stos
inc
js,pn
stc
imul
cli
sbbb
sbb
lock
mov
xor
push
insl
dec
or
push
cmp
xchg
pop
test
jl
sbb
xor
xor
add
xchg
cmc
fdivl
mov
push
daa
je
mov
dec
ds
clc
enter
or
lds
dec
dec
jecxz
adcb
adc
cmp
sub
inc
jecxz
test
test
mov
push
aas
sbb
fnop
and
pop
icebp
scas
inc
jecxz
mov
and
xchg
sub
cltd
mov
or
cmp
sbb
mov
pop
scas
xchg
push
out
inc
xor
insl
add
fstpt
adc
aas
imul
sbbl
sbb
mov
jg
mov
pusha
inc
push
ljmp
pop
repnz
mov
lods
dec
out
jp
push
insb
jns
enter
and
dec
and
xchg
sub
inc
mov
nop
and
inc
xlat
outsb
cmp
shrb
test
pop
pop
push
popa
clc
lea
mov
pop
adc
sti
and
pop
jmp
les
dec
loope
data16
mov
dec
out
fcoml
int3
sub
loope
loop
xor
sti
add
test
lcall
pop
pop
daa
mov
lcall
in
in
test
cs
rclb
sub
cld
popa
sbb
into
jae
jl
insl
xchg
notl
dec
in
sbb
bound
stos
testl
mov
sti
xchg
mov
inc
gs
jecxz
test
cmp
mov
out
mov
sub
sbbl
pushf
pushf
xor
jge
shrb
xchg
js
aas
mov
pop
cmc
sarl
dec
add
inc
fcmovu
mov
stos
inc
jmp
rclb
mov
jle
loop
mov
loopne
xor
xchg
movsb
fdivrs
cli
mov
test
fdivrs
mov
mov
fstl
imul
jmp
addb
pusha
cmp
daa
mov
test
std
xchg
fidivl
jl
bound
inc
fdivs
dec
loopne
adc
push
inc
add
lds
xchg
sbbb
mov
pop
jecxz
add
mov
clc
scas
dec
fsubrs
dec
sbb
push
and
cmpsl
cmp
jb
fidivrs
sub
leave
lock
movsb
cmp
xchg
pop
js
pop
inc
les
add
notb
int3
arpl
insl
add
adc
mov
fistpll
jnp
jp
dec
fwait
mov
ds
inc
pop
pop
fsubrs
sti
dec
loopne
mov
mov
mov
xchg
loope
fbstp
mov
dec
dec
jge
mov
imul
in
cmp
sbb
imull
aas
out
push
jmp
jmp
scas
inc
xchg
lea
mov
movsl
cmp
push
cmc
mov
lret
bound
shrb
out
inc
fcomps
outsl
mov
popa
mov
out
adcb
into
adc
ret
pop
sahf
test
mov
cmp
xor
fisubrs
lds
loopne
cli
shrl
insb
add
jge
std
mov
dec
adc
or
stos
inc
push
sub
imul
and
mov
xor
inc
lea
ret
arpl
cmp
addr16
pop
out
test
sahf
xor
mov
rclb
inc
fstpl
lret
clc
inc
pop
repz
add
mov
dec
mov
dec
imul
jno
daa
sbb
out
adc
mov
pop
out
xor
stos
cltd
push
push
nop
imul
xor
mov
mov
inc
fadds
dec
int3
arpl
aas
inc
out
outsb
leave
pusha
popa
inc
push
pop
leave
pusha
insb
add
adc
jo
stos
jge
pop
pop
cmc
dec
lret
stc
dec
enter
xor
pushf
ja
adc
sbb
jp
data16
push
hlt
andl
fidivrl
add
aam
not
cmpb
pop
mov
adc
push
popf
xor
cmp
xor
sub
xchg
lods
cltd
in
xchg
movsb
mov
xlat
mov
ficomps
pop
or
dec
test
lea
leave
adc
mov
enter
mov
cs
jne
aam
dec
mov
cmp
jbe
popf
dec
or
mov
add
cmp
pop
and
xchg
fs
add
jb
push
bound
inc
adc
push
aam
jmp
jl
xor
nop
adc
scas
pop
cld
iret
xor
mov
inc
fidivrs
hlt
data16
cwtl
ret
lock
add
push
pop
pop
addb
icebp
jb
mov
outsb
inc
sbb
push
jno
push
jo
xchg
mov
dec
pop
out
orb
call
dec
mov
movsb
ss
xchg
inc
and
mov
xchg
adc
adc
cmpsb
dec
rcrl
xchg
inc
ret
fdivrl
mov
sub
inc
jo
or
test
dec
clc
pusha
mov
push
test
jle
jo
xchg
mov
ret
sbb
mov
inc
push
inc
flds
pop
icebp
cwtl
push
js
ljmp
or
scas
inc
xchg
movsl
rol
sub
cmp
arpl
push
enter
xchg
test
in
mov
push
pop
cmc
aad
daa
setl
jl
lds
mull
stos
rcrl
in
push
mov
out
cmpsl
addr16
mov
fcoml
fs
inc
std
les
sbbb
push
loop
xorb
xchg
aam
mov
mov
pop
fnsave
cmp
js
sti
xchg
jecxz
pop
icebp
lret
mov
jmp
nopl
iret
mov
xchg
sub
ficoml
je
sub
dec
xchg
sub
mov
push
movsl
mov
fisubrs
cmovns
cmpl
loope
pushf
or
mov
sub
pop
inc
inc
push
lock
sbb
ss
add
pop
cmp
and
outsl
adc
dec
dec
cmp
sbb
jmp
or
pop
out
clc
sahf
inc
sbb
fsubrp
orb
add
xlat
sbb
sbb
mov
or
les
fwait
rcrb
pusha
jmp
rorb
in
fstpt
imul
ljmp
js
mov
push
push
pushf
cli
gs
mov
sbb
fstps
lea
sub
adc
addl
leave
aad
stc
nop
add
daa
pop
scas
pop
dec
outsb
add
stos
pushf
mov
into
lret
push
ljmp
jb
push
inc
enter
nop
daa
mov
les
fwait
sbb
int
dec
cmp
mov
popf
mov
mov
ficomps
movups
mov
bound
fstl
fs
imul
movsl
aam
mov
aad
lods
leave
pusha
fildll
jg
jp
xor
test
scas
test
cltd
xor
stc
mov
sub
pushf
xor
dec
and
icebp
jbe
and
leave
repz
addr16
inc
outsb
add
lret
loop
jmp
dec
in
cmp
mov
imul
sub
cmp
jmp
pop
cld
xor
xchg
aas
dec
jno
and
xor
mov
inc
dec
wrmsr
into
pushf
stos
je
jns
xor
mov
inc
iret
repnz
daa
aaa
int3
pop
int
inc
popf
jecxz
hlt
mov
mov
sbb
pop
in
push
mov
adc
cmc
inc
sub
aam
add
jle
jo
adcb
xchg
inc
jg
mov
push
xor
mov
mov
or
pop
cs
xor
in
jbe
ss
inc
sbb
xor
jno
xchg
aam
xor
aas
sub
cmpl
in
xor
pop
sbb
mov
arpl
lds
adc
or
cmpsb
pop
adc
popa
jae
sub
lea
notb
test
pop
sub
cmpsl
or
scas
cmp
fsubrl
test
jle
in
sub
push
mov
xchg
lcall
and
jo
cmp
stos
jmp
xor
pop
cmp
insl
ss
jmp
les
mov
adc
cmp
imul
hlt
lea
fstl
stos
adc
ljmp
xor
ret
push
jmp
xchg
fidivs
lfs
jmp
or
dec
lods
pop
stos
inc
iret
iret
add
jmp
push
add
insb
xor
sbb
xchg
inc
fdivr
test
sahf
fstps
push
out
dec
cli
and
mov
xor
mov
xor
mov
mov
bound
dec
loopne
inc
in
xorl
push
mov
or
pop
cmp
ret
inc
call
push
fdivs
sub
dec
sub
es
mov
jb
cmp
imul
mov
add
xor
leave
pusha
xor
lods
jbe
mov
push
mov
das
sahf
xor
push
xor
push
cmpsb
pop
mov
jl
in
xchg
sub
cmp
xor
divl
and
movsl
sub
push
sbb
jp
push
into
gs
cmp
jne
repnz
data16
ja
and
or
pop
push
pop
lock
or
movsl
mov
mov
in
repnz
ds
fists
push
push
iret
inc
jno
fistl
mov
xchg
xorb
adc
xchg
cs
andb
cmp
in
sub
in
lcall
jmp
inc
mov
push
mov
pop
fs
ret
add
movsl
bound
call
or
pop
push
jnp
in
cmp
ss
ja
out
dec
cmp
push
xchg
sti
xor
pop
mov
sbb
lock
pop
cmc
adc
in
xchg
test
mov
ret
fists
adc
mov
out
aaa
stc
popa
test
cmp
jns
xchg
xor
sub
inc
lds
add
fcomps
bound
mov
dec
pop
and
dec
loopne
inc
loopne
pop
push
in
push
jp
jne
aaa
dec
out
pop
fidivs
mov
or
cmp
pop
xor
sbb
mov
es
xlat
cwtl
xor
popf
mov
shll
ja
and
push
xchg
fdiv
mov
iret
dec
loop
sbb
sub
dec
xor
add
pusha
ja
hlt
imul
scas
inc
test
repnz
sbb
aas
xchg
mov
stc
nop
hlt
ja
or
pop
repnz
dec
or
push
xchg
jp
cmp
popf
xor
inc
add
xor
out
es
inc
fmuls
lods
or
xor
xchg
dec
arpl
mov
add
mov
pop
or
pop
fisubs
mov
ret
sbb
shrl
jo
push
xor
movsb
cmp
mov
jp
sbbl
cmpsb
cmp
setl
jo
xor
aad
dec
bound
fwait
ja
adc
fnstenv
pop
mov
lods
lea
inc
fchs
loopne
ret
dec
int
mov
push
mov
loopne
xor
mov
in
mov
sbb
adc
jg
jg
cmp
adc
add
ret
pop
ret
mov
pop
xchg
and
add
add
das
in
shl
jge
andb
jle
xorb
pop
pop
loop
jl
or
popa
jl
dec
loope
popf
push
popf
enter
clc
jmp
lds
mov
out
cli
pop
mov
divb
inc
repz
pop
jecxz
loopne
push
mov
xchg
xchg
mov
sahf
xchg
xor
movsb
mov
js
xchg
push
push
mov
movsl
cmp
xor
cs
push
add
jge
orl
cmp
sbb
push
mov
push
jp
sbbl
fwait
rcrl
iret
pushaw
sub
pop
in
popfw
xor
or
movsb
cmp
mov
inc
fstpl
out
out
mov
mov
inc
and
sub
mov
daa
popf
xor
into
dec
dec
in
out
dec
loop
jmp
add
mov
shrw
mov
ja
and
leave
pusha
aam
enter
push
mov
popa
clc
sbb
push
jecxz
sub
cld
fdivrs
fidivrl
dec
sub
jo
add
and
dec
lds
cli
xchg
out
xor
pop
cld
xor
ss
or
and
sbb
test
mov
repz
popf
inc
cmp
cli
sarb
lods
mov
xor
mov
scas
pushf
subb
mov
sahf
nop
daa
rcr
mov
addr16
jecxz
and
out
addr16
out
mov
mov
jecxz
xor
shll
cli
inc
ss
ljmp
inc
sbb
cwtl
push
and
test
stos
ret
addr16
push
mov
dec
add
jle
dec
les
inc
pusha
mov
adc
adc
out
mov
sub
insl
dec
xor
inc
xor
dec
xchg
shrl
fs
pop
and
add
push
adc
sub
xor
test
je
out
sbb
xchg
sub
cmc
or
jae,pn
cmpsl
loop
sub
push
pop
cmpsb
cmp
dec
push
movsb
cmp
aad
iret
les
push
dec
cmpsl
cwtl
fcmovnu
sub
mov
out
int
cmpsb
xor
test
ja
dec
test
and
shll
jo
repnz
sub
add
fwait
repnz
and
data16
mov
or
ret
lret
mov
loopne
adc
outsb
jl
push
xchg
std
ficomps
outsb
jecxz
push
inc
out
gs
adc
bound
ficompl
or
lcall
dec
jecxz
jo
mov
pusha
xor
or
inc
pop
fnstcw
lds
dec
push
lret
cld
push
push
les
enter
cwtl
dec
xchg
jae
jecxz
sub
shl
add
loope
rcl
cmp
mov
je
rcrb
cmp
pop
xor
dec
shll
mov
cli
xchg
push
aam
aad
negl
lea
or
mov
jb
mov
mov
push
bound
inc
push
data16
andl
inc
and
fidivrl
sub
nop
pop
pop
jmp
jp
aas
push
fwait
aam
push
add
adc
in
lcall
dec
iret
xor
das
cmp
jle
cmp
leave
outsb
jl
mov
lods
adc
jns
add
fwait
xor
shll
hlt
aas
xchg
push
pusha
add
pop
sub
pop
xchg
repz
sub
mov
cmp
dec
mov
push
mov
addr16
pop
xchg
sub
add
dec
addl
shlb
mov
xchg
push
out
movl
std
push
popf
and
shrb
insb
mov
mov
repz
pop
nop
bound
mov
not
arpl
jecxz
cmpb
or
dec
std
les
lods
clc
push
and
dec
lret
mov
xlat
xchg
out
jne
clc
scas
ljmp
std
push
loopne
into
push
dec
pop
mov
xchg
sub
or
daa
push
xchg
and
add
lock
in
push
add
lods
mov
fwait
and
lods
push
mov
jp
push
cltd
push
iret
es
outsl
mov
jo
iret
mov
jl
psrld
or
and
mov
fidivl
xchg
sti
xchg
push
popa
arpl
push
xchg
add
xchg
sub
out
imul
mov
loope
cmp
insb
inc
mov
lret
call
mov
dec
into
daa
out
pop
movsb
pop
pop
roll
in
inc
popf
jge
mov
rolb
aaa
inc
jl
mov
mov
cmp
lods
pop
mov
in
jbe
mov
xor
pop
xchg
subb
jl
das
pop
ret
bound
dec
dec
cltd
or
stos
data16
fmull
loopne
sbb
negb
sbb
or
push
movsb
add
in
mov
divl
sub
scas
push
jbe
bound
push
nop
hlt
cmpb
mov
add
shrb
and
fdivl
xchg
lea
or
xchg
seta
xor
jbe
cmp
cs
pop
mov
test
xchg
pop
imul
enter
call
inc
sbb
into
mov
js
mov
xchg
outsb
pop
sub
fdivl
lea
xchg
mov
sub
insl
pop
ja
push
test
sub
adc
andl
in
call
adc
mov
out
cmp
jg
add
push
xchg
out
mov
xor
mov
out
push
jo
nop
loop
xor
cmp
call
daa
lods
fldenv
dec
and
xor
sub
pop
inc
popf
pop
mov
sub
fsubp
jno
int3
sbb
fbstp
push
cmp
mov
fisttpl
aam
call
push
data16
cmp
jne
fucomi
mov
mov
test
repnz
and
inc
loop
pop
incb
out
loopne
add
stos
arpl
lret
pop
mov
mov
push
dec
inc
aad
dec
and
and
in
lret
adc
fdivrl
lods
int
mov
push
push
xchg
sub
div
lahf
ss
adc
pop
cwtl
cmp
jp
mov
mov
inc
shrl
mov
pop
outsb
sbb
and
sbb
std
xchg
adc
or
cmpb
scas
mov
movsb
mov
sbb
sarl
and
sbb
in
orb
mov
xor
sbb
cmp
daa
cmp
imul
mov
fstp
jmp
popf
lret
repz
pop
xchg
in
mov
test
xchg
fptan
cmp
jns
xchg
inc
fldl
mov
fdivl
push
lcall
mov
insb
dec
daa
pop
out
mov
inc
cmp
movsb
in
xor
pop
jmp
add
add
hlt
jle
push
push
pop
pop
stos
sub
jmp
aas
cmp
iret
cmp
ret
in
in
mov
enter
and
jmp
sbb
ss
xor
inc
push
xlat
cmp
push
inc
fnsave
movsl
jo
xlat
pop
pushf
and
and
mov
ja
mov
jle
fistps
repnz
xchg
sub
insl
add
xchg
in
jp
xchg
cltd
xor
pop
add
push
mov
test
lea
flds
decl
sbb
mov
popa
and
and
enter
dec
xor
lock
jecxz
fisubrl
pusha
jl
adc
sub
enter
xlat
test
push
or
mov
dec
fwait
mov
into
negl
mov
jo
mov
pop
push
sar
and
pop
mov
jecxz
add
ss
fsubs
shll
js
mov
sub
xchg
add
mov
jne
inc
ds
adc
pop
outsb
ret
subl
mov
stc
pop
dec
mov
iret
adc
mov
call
sbb
addr16
and
mov
and
dec
icebp
orl
mov
jmp
inc
shlb
punpckhbw
inc
xor
test
or
add
popa
sbb
adc
clc
dec
or
xchg
jno
xchg
jno
or
fcoms
in
stos
mov
mov
mov
loop
insb
lahf
pop
mov
fimull
mov
mov
scas
sub
adc
je
or
loop
int3
cmpl
cmp
std
mov
in
addr16
push
adc
je
adc
push
push
mov
pop
lret
sbb
sub
or
mov
mov
out
movsl
mov
jle
cmp
addb
push
jne
dec
cs
cmpsb
cmp
mov
mov
arpl
sbb
pop
jmp
insl
cmpsl
push
scas
mov
nop
movsl
sub
movsb
xor
jge
lock
jae
and
insb
mov
rcrl
out
int
loopne
pusha
cmp
dec
xor
imul
inc
jnp
mov
js
mov
into
sbb
cmpsb
pop
pushf
sbb
jp
icebp
lret
out
sub
sarb
shl
das
add
lock
roll
loopne
cmovo
mov
test
add
out
cmp
xor
xor
mov
sbb
dec
jp
ds
inc
and
xchg
xchg
jae
testb
daa
sbb
sti
add
int3
arpl
push
std
das
cltd
sub
scas
inc
push
pusha
fnstenv
pop
push
push
push
add
mov
in
or
pop
push
cs
pop
arpl
dec
sbb
dec
in
clc
pop
and
mov
fisubrs
xor
out
out
test
xchg
imul
mov
cmc
lods
sub
frstor
xchg
mov
jb
jbe
outsb
xlat
add
xchg
mov
aaa
lahf
pop
sub
pop
insl
js
jne
dec
lds
jb
imul
fs
roll
push
aad
or
sahf
mov
or
je
mov
mov
xchg
mov
cmpsl
test
xor
aam
icebp
cld
cld
xchg
stc
pop
lret
add
mul
jle
dec
mov
pop
mov
and
es
push
into
lods
inc
or
and
scas
loope
pop
and
inc
mov
clc
and
pop
push
cmc
pop
xchg
sub
aas
cmpsl
loopne
inc
mov
xchg
call
rcrl
add
data16
or
xor
and
inc
outsl
push
and
lcall
call
mov
ss
fadd
out
pop
or
mov
loop
or
pop
and
test
cmp
das
pop
das
dec
mov
pop
arpl
pop
sub
push
jp
push
and
push
pop
push
jnp
arpl
pusha
mov
shl
mov
mov
and
aas
push
cwtl
lea
mov
add
and
jo
mov
mov
or
xchg
outsl
push
repnz
in
ret
or
dec
jmp
fsubrs
bswap
push
and
inc
ljmp
mov
mov
sub
inc
in
pop
mov
push
jmp
data16
aad
stc
push
mov
mul
lods
push
fmull
pop
fbstp
icebp
loopne
cld
cs
leave
gs
adcl
cmp
js
cmpb
daa
xor
loope
dec
out
mov
inc
mov
jmp
iret
pop
in
cwtl
sub
inc
mov
dec
lahf
mov
fldt
stos
and
and
mov
test
sbb
sub
jns
aas
xor
nop
mov
xor
dec
dec
xchg
lds
pop
push
imul
das
pop
mov
dec
daa
push
pop
add
pop
movsl
mov
pop
and
in
xlat
dec
mov
test
dec
sahf
or
out
inc
addr16
loop
jp
scas
xchg
jmp
in
and
loop
rclb
stos
lods
and
repnz
cmp
testb
adc
push
retw
add
xor
call
test
int3
cld
sub
inc
scas
mov
adc
ss
push
and
cmp
mov
cmp
cmp
mov
xchg
inc
or
sub
mov
add
cmp
sbb
jbe
add
lds
mov
push
jbe
jmp
xor
movb
xor
and
or
pop
and
sub
cs
sti
loop
lahf
and
fsubl
js
mov
cmpsl
add
ja
popf
rolb
jmp
pop
dec
or
or
mov
addl
mov
jae
adc
lret
xor
add
xchg
mov
das
push
dec
andb
mov
int
ss
das
scas
mov
dec
push
xchg
out
sbb
fldenv
push
fnstcw
and
mov
xor
pop
sub
ss
sbb
pop
repz
test
les
pop
out
imulb
push
out
xor
sti
subl
mov
fistpll
add
and
lods
xor
add
sbbb
xor
sub
dec
mov
pop
fnsave
push
mov
not
outsb
sub
out
inc
pop
pop
push
sub
je
xchg
test
fmuls
mov
fisubs
inc
out
cmp
ja
ss
xchg
in
sbb
cmpsb
and
sahf
xor
lret
push
jg
add
loopne
icebp
mov
nop
ss
push
mov
xchg
sbbb
mov
fidivrl
add
test
cmp
pop
jmp
cmp
xor
negb
add
pop
xchg
fcmovbe
pop
outsl
and
dec
scas
inc
jl
push
add
mov
mov
mov
popl
push
pop
out
aad
or
and
push
jno
inc
jnp
hlt
sub
test
pusha
outsl
sub
in
inc
xchg
addr16
out
popa
ss
mull
pushf
xor
adcl
adc
stc
push
sahf
xor
rorl
sbb
jns
xlat
pop
push
mov
insl
daa
mov
in
push
out
add
or
fwait
dec
popa
rep
adc
sti
adc
fbld
cmp
loope
pop
pusha
das
in
push
pop
adc
jg
mov
mov
cli
jp
mov
pop
sub
add
inc
inc
cli
test
movsb
adc
adc
jbe
out
bound
push
lods
mov
repz
out
test
pusha
xor
scas
out
jmp
ret
faddl
mulb
ret
jge
lret
push
mov
jmp
xchg
bound
filds
dec
movsl
shll
jle
and
outsb
sub
dec
movsb
cmc
sub
pop
xor
inc
popl
jne
sarl
movsb
cmp
movsb
sarb
iret
aaa
imul
sub
xor
and
add
leave
add
iret
sub
or
jmp
ficoms
jb
add
insb
inc
and
xchg
and
or
cmp
mov
pop
sahf
in
lods
sti
xchg
pop
daa
stos
inc
cwtl
sbb
mov
adc
js
xlat
pop
sbb
insb
add
xor
push
enter
adc
ficoms
add
in
cmp
scas
inc
mov
jbe
fbstp
stc
arpl
inc
xchg
arpl
sub
pop
insb
inc
int
push
adc
mov
jle
adc
rcl
in
sarb
add
and
mov
aam
push
out
div
das
lret
mov
rorb
popf
dec
fbstp
in
iret
pop
jg
pop
ret
fmull
aad
std
es
test
cmp
inc
adc
test
mov
movsb
arpl
adc
xor
cmc
rol
mov
cmp
jecxz
mov
mov
cwtl
das
pop
ljmp
and
inc
fistl
sub
pushf
push
ss
sub
push
fwait
jbe
arpl
lock
gs
push
popf
adc
and
inc
xchg
sub
cld
xchg
ljmp
jns
and
ja
pushf
xor
ljmp
in
ss
aas
mov
jno
push
jmp
in
mov
test
add
outsb
popf
push
insb
add
xchg
sub
jns
mov
int3
arpl
jb
sbb
push
lods
inc
outsl
sti
xchg
test
adc
jg
out
test
jge
stc
push
jno
data16
test
jae
enter
mov
call
add
jns
and
rolb
test
lret
mov
sub
insl
pushf
ja
icebp
push
dec
push
xchg
stos
mov
jns
rcl
daa
jmp
cmpsb
leave
inc
cmc
xchg
mov
and
pop
mov
jne
leave
lods
inc
sub
dec
icebp
mov
xor
cmpsb
jge
popf
xor
sahf
sbb
and
add
xor
test
icebp
addl
jne
ret
mov
fwait
xor
push
test
jle
call
cmp
cmp
orl
sub
leave
sub
sbbl
dec
outsb
add
mov
shll
add
ljmp
pop
sahf
loopne
std
xchg
mov
sub
ret
dec
in
cmp
stos
inc
sub
xor
pop
out
leave
mov
aas
push
mov
call
and
scas
pop
mov
int3
add
jae
rorl
scas
pop
int
sub
mov
pop
lahf
imulb
mov
shll
dec
fbstp
adcb
js
add
pop
xchg
dec
push
popf
xor
and
movsl
mov
dec
mov
enter
dec
cli
lcall
add
test
sbb
into
insl
mov
and
mov
popa
sti
jmp
mov
push
cli
push
jmp
aad
clc
lret
push
mov
push
and
xchg
sub
shll
lea
dec
loope
test
cmc
dec
cmp
jle
or
ja
pop
scas
sbbl
add
cs
mov
mov
adc
cwtl
movsl
cmp
ds
idivb
or
cmc
mov
int
lahf
sub
pop
clc
cld
dec
out
das
data16
nop
jbe
inc
sbb
push
pusha
xchg
xorb
dec
sbb
clc
pop
mov
cmp
jo
push
fiaddl
and
mov
testb
jl
cmpsb
mov
dec
int
xor
push
ljmp
test
sub
push
xchg
in
inc
stc
je
out
movsl
sbb
adc
out
cmp
loope
adc
mov
push
sbb
lock
out
dec
dec
int
push
inc
movsl
pop
gs
mov
xchg
push
sub
insb
mov
cmp
or
insl
add
mov
sbb
push
clc
push
sbb
jae
jns
hlt
sbb
call
push
mov
in
mov
xchg
mov
sub
call
cmc
movsl
dec
push
push
xchg
xchg
push
jnp
jg
xchg
movsl
pop
pop
loopne
psllq
inc
dec
icebp
cltd
dec
sbb
pop
js
mov
add
dec
stc
pop
scas
ljmp
mov
arpl
shr
pop
ds
mov
and
shl
inc
sti
add
lahf
xchg
divb
js
test
xchg
xchg
or
add
fstps
jl
data16
imul
mov
leave
test
mov
jmp
xor
pop
jecxz
aam
repnz
pop
daa
jle
jmp
es
notl
stc
nop
movb
out
cmp
mov
ljmp
sbb
or
lds
and
je
in
mov
add
adc
xlat
jmp
xor
movsl
cmp
out
pop
mov
fiadds
popf
sysexit
mov
test
arpl
pop
andps
scas
pop
imul
jp
or
mov
add
ljmp
sbb
jb
push
adc
mov
xor
lahf
cmp
loopne
xor
sub
js
xlat
inc
arpl
ss
push
ret
sub
mov
in
fs
pop
shll
shll
xor
xchg
mov
xor
sti
psubsw
adc
andb
movsl
mov
notb
mov
ljmp
sub
fs
repnz
jecxz
fnsave
adc
push
xchg
and
sti
and
mov
sbb
bound
ds
pop
xchg
vphaddudq
push
repnz
ss
pop
je
mov
sub
sbb
push
xor
addl
mov
mov
loop
sbb
mov
sub
jp
ja
and
sbb
sbbb
aaa
dec
in
out
cmp
mov
pop
xlat
xchg
sub
mov
jne
sub
xchg
or
mov
sub
jo
sbb
inc
and
sbb
js
cmp
sbb
iret
xor
xor
jns
and
sub
das
lds
jl
divb
sahf
cmp
cmp
lods
and
out
lcall
icebp
aaa
pop
shlb
or
daa
ss
jno
sub
mov
lcall
data16
xor
cmpb
xchg
jg
loope
mov
rorb
neg
dec
movl
mov
cmc
and
mulb
mov
add
cwtl
xchg
sub
lea
icebp
xchg
cwtl
rorl
outsl
hlt
mov
adc
ja
fisubrl
leave
stos
inc
out
add
scas
inc
mov
imul
and
xchg
mov
movsb
cmp
or
cmpsb
cltd
repz
and
bound
pop
das
jns
pop
stos
jge
cs
in
aaa
mov
in
fnsave
pop
mov
sti
xchg
mov
ret
pop
repnz
add
lret
jecxz
jmp
cmc
mov
sbb
shl
push
out
hlt
jg
int3
or
lods
xchg
in
stc
nop
sarb
aaa
into
fisttps
lret
adc
adc
push
out
xor
shlb
mov
fists
rorb
push
loope
mov
dec
ficompl
in
lds
and
push
outsl
and
xor
outsb
add
outsl
cli
repz
nop
dec
loopne
pop
outsl
push
xchg
inc
push
movsl
push
mov
je
jne
out
cmpsb
xor
jns
repz
imull
push
out
push
pushf
jnp
dec
xchg
lret
lock
movl
nop
std
inc
xlat
ret
xchg
repz
rclb
rolb
xor
incb
and
cmpsl
push
pop
out
addr16
mov
mov
and
inc
pop
scas
gs
cli
inc
xchg
arpl
sbb
pop
hlt
emms
xchg
dec
xor
mov
imul
xchg
pop
dec
cmp
mov
lcall
inc
cmp
push
lea
pop
pop
cld
xchg
bound
sbbl
cmpl
stos
out
xchg
dec
fwait
xor
insb
add
xchg
into
gs
testl
ret
insb
sbb
sti
xchg
mov
fdivrl
push
cmpsb
fidivl
das
add
jb
mov
movsb
xchg
jg
and
fidivl
inc
stc
nop
push
or
sbb
popf
xor
push
sbbb
add
mov
cmc
mov
daa
xchg
sub
shlb
jno
mov
sub
dec
aaa
into
pop
loope
sub
xlat
scas
inc
xlat
iret
sub
aam
mov
shl
xor
shl
push
leave
loop
add
fisttpl
push
jge
aad
test
lret
xchg
loopne
pop
test
cmpsb
cmp
add
aad
lret
push
jmp
daa
sbb
fsubrs
fdiv
xchg
out
sarb
xchg
sub
pop
push
out
insb
inc
shrl
lea
mov
cmp
pop
sahf
xor
mov
mov
cld
fadds
ds
stc
pop
mov
and
inc
pop
aam
jns
or
mov
ljmp
jnp
mov
jnp
popf
imul
repz
fdivrl
push
cld
je
xor
sub
mov
aam
or
into
sub
repnz
cmpl
cmpsl
scas
pushf
or
mov
fimuls
push
mov
test
push
bound
fdiv
lea
adc
mov
lcall
push
inc
sbb
jno
gs
push
dec
jns
lahf
ss
out
mov
xchg
cmp
imul
adc
push
rcrb
xor
adc
cltd
test
and
dec
cwtl
push
pop
push
rorb
insb
je
lods
data16
imul
outsb
fisubrl
movsb
pop
mov
xchg
subb
lods
xlat
jl
les
fiaddl
mov
insb
movsl
lret
test
in
push
scas
dec
dec
in
pop
sbb
and
rorb
jbe
push
mov
fstps
and
cmp
lods
xchg
mov
les
movsb
add
outsl
add
jecxz
cmp
imul
out
add
fcomps
xor
mov
pop
jae
dec
lock
lock
test
jb
inc
fiadds
or
mov
adc
addb
jno
stos
js
push
push
call
xchg
call
mov
aas
into
xor
sahf
ljmp
decb
stos
sbb
xchg
pusha
cmp
repnz
lret
add
xchg
js
xchg
adcb
ret
add
incl
xchg
jns
enter
test
cli
sub
xchg
sub
dec
std
xchg
jg
mov
out
add
ja
xor
push
push
in
pop
pop
lret
lods
cmp
fisubrs
jno
jno
push
or
stos
fwait
jmp
out
dec
das
inc
mov
fstl
push
nop
nop
sub
jmp
sbb
inc
xchg
mov
repnz
repnz
scas
in
sti
fwait
jno
lods
cli
shrb
mov
add
xlat
sub
and
mov
cmpsb
pop
repz
in
aas
jl
mov
movsb
mov
jp
xchg
adc
cmp
xlat
cmp
pop
in
loope
mov
test
and
mov
in
push
sahf
es
mov
rolb
push
mull
and
sti
ret
hlt
sbb
mov
push
shl
mov
mov
repnz
jns
jne
and
clc
mov
mov
popf
dec
mov
push
in
push
in
fcoms
xor
cs
mov
in
mov
cmp
add
les
push
ret
leave
or
or
andl
jle
xor
or
fwait
xor
and
mov
or
arpl
in
adc
push
mov
mov
popa
dec
aas
rcl
and
shlb
mov
lcall
stc
iret
inc
cli
mov
jnp
sbb
enter
push
jae
inc
mov
mov
mov
mov
or
in
push
out
ret
and
inc
cmpsw
in
push
fisubrl
aas
adc
add
pop
ret
inc
mov
imul
push
out
sbb
mov
inc
fstpl
insb
jg
cld
cmpsl
sub
movl
ret
xchg
ss
imul
push
es
add
dec
movsl
mov
xchg
xor
xchg
cmc
adc
jl
cld
in
fwait
cmpsb
dec
adc
and
xchg
sbb
mov
rorb
repnz
pop
mov
cmpsb
mov
pop
mov
add
or
add
mov
push
mov
push
lock
ljmp
call
sbb
inc
cmp
jae
or
mov
pop
jo
adcb
inc
dec
jae
fsubs
xchg
mov
xor
xchg
loop
jle
test
aas
imul
sti
xchg
fbstp
cmc
loop
add
mov
add
adc
shlb
imul
xchg
out
sarl
or
ret
pop
repz
lods
add
lcall
jb
cwtl
std
xchg
mov
mov
and
sbb
inc
cld
js
cs
xchg
in
adc
xor
dec
fistl
jecxz
enter
xchg
and
pop
loope
sarb
shl
mov
std
xor
push
int
out
and
cmp
mov
out
and
in
and
aas
in
pushf
rcrb
loope
sahf
lods
pusha
add
icebp
test
test
push
mov
sbb
add
in
mov
repz
pop
push
jle
xor
stc
shlb
scas
sub
iret
xor
mov
and
imul
stos
or
inc
std
xor
dec
lcall
rcll
add
push
das
stc
mov
repnz
mov
lea
in
repnz
daa
xchg
pop
pop
cmp
sbb
push
mov
addr16
fadd
xor
int
fdivrp
mov
out
jmp
ds
mov
adc
test
das
decl
dec
out
mov
in
sbb
sbb
call
fcmovbe
nop
out
popa
push
jl
jg
aam
out
ret
cmp
js
dec
mov
sahf
lcall
jge
pusha
lret
sub
pop
jbe
out
add
fsubl
jecxz
mov
cmpsl
enter
add
test
into
or
pop
push
out
sahf
repnz
movsl
cmp
sar
jne
aas
push
cmpsb
cmp
jno
das
push
pop
xchg
inc
jns
lea
bound
xor
mov
xchg
cmp
jge
cmpsl
cmp
pop
sub
inc
idivb
mov
pop
lret
fnstsw
js
push
mov
adc
seta
add
aaa
fstp
outsl
lods
pop
adc
pop
inc
divb
pop
xchg
adc
push
in
dec
dec
mov
fcmovnbe
cmp
mov
mov
lcall
mov
std
mov
xor
mov
and
fstpt
or
in
lahf
leave
inc
sbb
das
icebp
inc
push
push
mov
bound
ss
ret
or
or
adc
daa
cmp
cmpsl
mov
mov
rclb
aas
testb
mov
test
mov
fidivl
mov
mov
cwtl
out
mov
shll
hlt
xchg
lods
sub
nop
daa
inc
dec
xchg
pop
sub
dec
pop
cmc
pop
inc
pusha
sarb
loopne
cmp
mov
pop
rclb
les
xchg
and
and
add
xor
mov
mov
lret
adc
mov
mov
out
push
push
add
mov
inc
fs
pushf
or
add
push
adc
leave
fistpl
push
push
xor
push
popf
popf
inc
js
and
xchg
lock
iret
sahf
xor
movsl
xchg
push
inc
sub
dec
mov
push
lods
xor
pop
test
mov
ret
hlt
in
lahf
in
xchg
fdivs
pop
mov
inc
data16
pop
push
jle
ja
cmc
ds
pop
cmc
pop
xlat
pop
dec
or
jge
int
add
out
pop
and
leave
push
add
stc
fsubrp
push
mov
cmc
loop
hlt
xchg
add
inc
or
ret
loopne
jno
stos
cli
pop
xchg
sbb
xchg
or
es
jl
jecxz
and
sbb
ret
lcall
sub
nop
stos
mov
in
repnz
aad
xor
fldcw
arpl
push
mov
pop
xor
ds
dec
jnp
lods
loop,pn
dec
mov
mov
fs
insl
push
les
jge
loope
inc
push
add
mov
xchg
fdivr
test
mov
scas
inc
scas
mov
int3
sub
push
push
sti
sbb
sbb
scas
lea
dec
mov
xchg
fwait
push
push
rcrl
push
adcb
jne
jg
and
clc
daa
cld
inc
adc
pop
fildl
adcb
stos
adc
push
adcb
sbb
test
jne
xchg
decb
jle
xchg
jg
dec
nop
xchg
jl
jne
rcr
push
dec
rolb
sarb
popa
fdivs
inc
jnp
test
lock
add
inc
add
lds
in
test
dec
sub
jle
fdivrl
insl
push
sahf
dec
and
mov
sbb
add
lods
fwait
mov
pop
lcall
inc
xor
jl
sbb
fmull
imul
scas
and
cld
or
imul
dec
push
and
test
cmp
stos
and
mov
push
and
jmp
adc
and
or
push
fdivl
fdivrs
scas
or
ret
sbb
add
mov
pop
pop
call
and
inc
imul
mov
mov
add
pop
lea
int
cmpsl
ds
cwtl
lahf
imul
es
aas
or
mov
pusha
rol
iret
fbld
mov
ret
in
dec
lahf
cmp
xor
mov
xchg
lret
sti
jo
loop,pt
and
test
les
insl
arpl
jg
mov
jp
adc
add
xchg
mov
in
adc
ret
mov
ljmp
lea
cmp
add
xchg
or
and
xor
stos
mov
sbbb
sub
nop
push
imul
cmc
sbb
scas
rorl
ret
jp
sbb
out
outsb
push
inc
out
outsb
add
mov
fnsave
pop
rcll
adc
mov
inc
cmpsl
pop
adc
push
mov
aad
lahf
adc
cmp
fldl
pop
xor
pop
pop
inc
push
rol
fs
jnp
sub
xor
lcall
mov
in
adc
je
sbb
sub
xorb
out
mov
test
xchg
mov
rorl
mov
test
adc
mov
jo
or
inc
fisubl
or
push
in
das
mov
arpl
lahf
outsl
loop
inc
sbb
bound
dec
rolb
daa
dec
push
jmp
in
fdiv
mov
stos
fchs
ss
sbb
push
test
mov
insl
adc
cmp
and
adc
xchg
jns
int3
ficomps
push
dec
lock
outsl
sub
bound
mov
mov
jae
mov
xor
test
gs
ds
pop
lods
adc
add
pushw
xchg
mov
dec
fsubr
icebp
inc
test
jbe
cmc
mov
sbb
xor
out
adc
arpl
leave
add
fsubr
mov
push
out
fadds
fnsave
jno
sti
jo
mov
lds
fildl
sub
pop
inc
pop
jmp
and
rcr
or
cmp
ret
in
xchg
sub
dec
es
in
fldenv
orb
mov
dec
push
mov
fbstp
mov
mov
stos
dec
inc
loopne
int3
lds
cmpsl
dec
pop
flds
mov
lret
sti
stc
lret
addb
arpl
push
sbb
fs
ror
and
bound
inc
inc
cwtl
jo,pn
and
lret
dec
mov
cwtl
fwait
shll
leave
and
pop
fisubl
cmp
sbb
iret
pop
out
les
jno
cmp
mov
jg
pop
movsb
imul
jne
or
je
sub
cmc
mov
pop
pop
mov
arpl
aam
mov
jecxz
into
pop
bound
subl
push
popf
dec
dec
ljmp
xor
dec
mov
icebp
popl
insl
mov
xchg
cmp
cmp
sahf
inc
stos
mov
test
clc
test
jl
lret
jge
dec
es
je
fcmove
lahf
pop
mov
cltd
xchg
and
movsl
xchg
cltd
sbb
addr16
cmp
ror
mov
lahf
in
push
sbb
add
sahf
lods
out
pop
repnz
jecxz
lds
ret
and
pop
sti
fs
leave
push
rclb
hlt
sbb
fildll
sbb
rcrl
cli
pushf
mov
cmp
xchg
sub
mov
pop
in
jl
jge
mov
je
popa
repnz
data16
or
es
mov
dec
add
lahf
mov
fldenv
or
mov
cmp
xchg
mov
mov
pushf
mov
jp
dec
pop
mov
cmpsl
sbb
mov
inc
outsl
je
stos
pop
cwtl
das
ljmp
push
in
ret
test
pop
mov
jp
push
add
je
mov
jnp
add
das
shrl
pop
movsb
add
dec
xchg
cs
fdivr
add
push
add
std
loope
xchg
dec
xchg
fimuls
xlat
inc
shlb
enter
adc
sbb
or
pop
pop
ds
or
hlt
ds
imul
sbb
mov
sbb
adcl
and
cmp
cli
test
clc
push
lret
dec
out
outsl
arpl
fwait
shr
addb
or
out
in
lret
mov
push
sbb
sub
mov
xor
or
mov
fstps
sbb
sub
sbb
mov
daa
cmp
sbbl
cld
jl
outsb
lret
adc
jg
pop
lret
jge
movsl
jle
and
jecxz
jbe
push
psubd
mov
fisttps
aam
fs
cmc
outsl
scas
lods
loopne
lods
rolb
xchg
jo
mov
scas
cmp
rcr
outsl
push
shll
repnz
in
inc
lcall
lds
cmp
xchg
pop
cmp
das
in
insl
cmp
push
xchg
xchg
adc
cmp
or
lret
adc
xor
dec
and
sbb
shll
and
mov
jnp
sub
fisubl
flds
adcb
rclb
aad
das
dec
mov
jg
ficoml
pop
push
xchg
and
or
and
sub
aam
lods
ljmp
ja
hlt
popf
outsb
test
data16
push
pop
mov
mov
test
add
inc
dec
xchg
jbe
adc
clc
xor
pop
jne
int
rclb
in
daa
add
nop
divb
jno
xchg
add
xchg
xchg
sub
mov
xchg
sbb
out
cs
movsb
xor
sub
je
rorl
sahf
or
fs
aas
xlat
imul
add
sbb
xchg
cld
jp
loope
stos
pop
xchg
mov
cmp
call
fs
mov
mov
jne
jo
mov
movsl
fsubl
sbb
test
ljmp
adc
adc
enter
sbb
push
and
adc
jno
icebp
mov
adc
ret
stos
jmp
xchg
lret
repz
mov
mov
imul
stc
in
js
push
xor
test
pop
xchg
addr16
fstpl
in
xlat
xor
xor
loopne
jge
fisubs
into
icebp
iret
jl
inc
filds
mov
dec
xchg
in
xor
sbb
cmp
inc
insb
push
jp
test
popf
lods
aaa
notb
out
fucom
jnp
lds
rcll
in
sub
adc
aas
lret
jnp
addr16
mov
iret
mov
sbb
pop
sub
test
aas
pop
jmp
inc
incl
sub
xor
pushf
imul
push
jo
cmp
in
xlat
cwtl
mov
pop
jae
inc
nop
fmull
lea
sbb
or
rcrb
aas
xchg
out
dec
mov
sbb
popa
or
sbb
jle
sub
cmpsb
out
and
cmp
mov
sbb
call
add
sbb
cmc
in
aaa
cmp
cs
call
or
jns
lods
push
or
shl
out
and
adc
arpl
and
dec
lods
mov
and
inc
mov
lcall
mov
cwtl
jnp
add
push
test
out
cmp
xor
add
mov
clc
clc
nop
out
in
jno
pop
push
cmp
insb
test
pop
inc
dec
stos
xchg
xchg
test
push
or
push
scas
into
cmp
rcrb
cwtl
enter
andl
shrl
inc
cld
icebp
dec
test
loopne
sarb
loopne
or
mov
jae
lds
cmpsl
add
lods
push
cltd
mov
ret
in
sbb
mov
repnz
in
scas
add
cmp
cmp
mov
cltd
rorb
je
xor
shlb
dec
push
aad
test
jae
pop
jg
xchg
sbb
subb
push
jmp
stos
sbb
into
scas
inc
es
mov
or
enter
mov
scas
mov
lock
mov
mov
push
fnstcw
pusha
sub
test
mov
dec
loopne
std
xchg
xorb
scas
invd
or
push
movsb
mov
fdiv
mov
in
jnp
loopne
cltd
movsl
jb
in
xchg
loope
add
nop
or
adc
mov
mov
lods
add
ficomps
inc
shrb
out
jmp
cli
mov
xor
mov
pop
in
test
sarl
repnz
cmc
pushf
bound
arpl
fildll
shrl
ret
icebp
scas
push
and
bswap
arpl
stc
outsl
adc
pop
subl
outsl
mov
pop
and
ljmp
imul
test
ljmp
lds
popf
xor
push
cmp
mov
jnp
pop
xor
sbb
cmpsl
add
mov
pop
aas
sub
jnp
mov
icebp
mov
xor
es
cmp
xchg
je
pop
cwtl
adc
nop
jle
lret
mov
inc
sbbb
pusha
cld
daa
pop
loopne
into
adc
adc
repnz
mov
ds
stos
shll
cs
out
data16
dec
sub
add
imul
xchg
or
clc
mov
fisubrl
push
cld
ret
frstor
dec
sub
xchg
cmp
enter
push
mov
mov
cmpsb
xor
push
jmp
cmp
clc
inc
popf
push
test
xchg
aas
fcmovu
xor
cmpsb
mov
mov
mov
pop
pop
out
loopne
fldl
in
xchg
push
stos
in
into
jb
aam
leave
lds
push
icebp
jo
pop
or
push
jns
or
mov
dec
lds
out
xor
test
adc
and
iret
push
push
jecxz
add
ds
out
sti
and
divl
fildll
sbb
xchg
scas
mov
cltd
dec
clc
lret
int
xchg
test
dec
push
jbe
pusha
mov
lret
add
inc
imul
xor
in
test
sbb
movsb
loop
xlat
pop
subb
scas
and
sbb
in
mov
psrld
or
pop
jne
jecxz
push
adc
out
jmp
add
jnp
mov
popf
jmp
pop
adc
cmp
jle
orb
hlt
loopne
pop
or
mov
mov
or
les
sub
ljmp
call
xchg
test
inc
fldpi
loope,pt
adc
rcrl
leave
js
call
divl
inc
popf
xorb
fldenv
data16
or
cli
jb
test
stos
jbe
shrb
pop
icebp
add
xchg
outsl
jge
pushf
pop
add
push
mov
inc
xlat
xchg
and
hlt
xchg
jg
push
and
push
sub
cmpsb
push
pushl
mov
pop
inc
in
lret
jp
insb
popf
loopne
mov
stc
ficoml
sub
sbb
inc
xor
xchg
gs
jns
xor
sahf
xor
push
loop
pop
loopne
mov
jo
xchg
xor
mov
mov
enter
push
cli
outsl
addl
sbb
sbb
cs
push
out
cmp
push
jne
int3
insl
mov
sbb
mov
push
mov
push
mov
sbb
cmpsb
fdivrs
mov
mov
in
loopne
pop
not
ja
fistps
insl
sti
psrlq
push
dec
aam
stos
addr16
out
fucomp
add
sti
push
xchg
pop
mov
divl
pop
jecxz
mov
pushf
test
sahf
clc
or
shlb
test
movsb
out
das
das
pop
and
lods
std
mov
and
sbb
add
push
cmp
inc
sbb
jae
dec
rclb
ret
jl
xor
inc
arpl
cmp
test
pop
cmp
or
test
and
lods
mov
push
xlat
mov
push
and
pop
adc
xchg
popa
mov
lods
add
xor
scas
jns
int
sbb
and
cltd
jmp
cmp
std
dec
dec
xor
ds
nop
shl
repnz
xor
mov
in
sbb
lds
repz
pop
sahf
cs
cld
mov
jno
bt
sub
jg
idivb
ss
rep
add
mov
shlb
sub
test
orb
decb
push
arpl
push
mov
movsl
scas
outsl
jnp
cmpb
mov
add
mov
out
rclb
adc
xor
push
inc
or
dec
mov
out
dec
lock
inc
loope
ljmp
js
lcall
loope
inc
mov
mov
pop
adc
or
in
add
repnz
aas
xchg
loope
add
jns
mov
scas
mov
inc
fsub
hlt
jecxz
xor
add
xor
cmpps
fmul
pop
jg
cmp
in
pop
pop
dec
mov
mov
repnz
cmp
push
in
pop
sarb
frstor
push
movsl
das
decb
fwait
xchg
push
negb
xorl
test
adc
fs
mov
sub
push
outsb
push
rcrl
push
pop
push
outsl
cmc
mov
mov
or
cmp
cmp
int
push
loopne
in
les
xchg
adc
dec
mov
jae
cmp
sbbb
fwait
cli
sbb
cmpsb
enter
rorl
xlat
inc
sbb
lds
cmp
mov
sbb
jno
jae
popa
xor
lock
loope
and
pop
lahf
adc
or
roll
add
fbld
enter
xor
std
iret
fldcw
and
dec
push
int3
repz
jno
jl
out
fnstsw
ja
push
pop
and
pop
aaa
mov
sahf
clc
jmp
dec
cmpsb
mov
or
cmp
cmp
ficomps
mov
fdivp
jl
popf
scas
in
cs
mov
pop
loop
push
mov
jb
das
test
pop
pop
dec
add
add
addr16
xchg
je
dec
out
push
ficoms
aas
fisubl
icebp
psraw
sahf
daa
in
mov
test
mov
call
dec
add
addb
jecxz
mov
add
insb
mov
es
test
aas
push
xor
lods
dec
inc
test
idivb
jle
lret
cld
imul
or
lds
xchg
mov
dec
pusha
stos
ljmp
mov
mov
cmp
cmp
icebp
cmp
nop
sub
jg
int
dec
scas
orb
or
les
fildll
dec
inc
add
lret
sbb
stos
in
faddl
nop
xchg
dec
testl
lods
les
outsb
rcrl
mov
ret
hlt
sbb
push
shll
lea
das
xchg
and
jb
pop
and
or
pusha
adc
cmp
shrb
adc
in
int3
lock
ret
into
jmp
jne
loop
lods
cmp
mov
mov
js
sub
xchg
jmp
call
jno
jne
inc
sarb
add
adc
inc
in
pop
imul
pushf
in
into
sub
xchg
loop
sbb
ljmp
sbb
insl
adc
cmpsb
pop
cmp
in
mov
cmp
mov
push
insb
cli
push
call
inc
lret
out
or
xchg
mov
mov
or
fs
inc
pop
aad
out
xchg
mov
mov
push
movsb
rclb
sbb
fisubl
enter
cmp
dec
sahf
pushf
pop
sub
mov
jb
dec
repnz
lds
xchg
fs
jp
xchg
jne
lods
repz
and
shrb
mov
push
imul
jg
xchg
repz
or
xor
pop
xchg
loopne
scas
cmp
cli
mov
adc
and
or
xlat
sub
jecxz
xor
scas
push
xchg
or
stos
add
xor
or
inc
xchg
jb
jae
pop
imul
psubusb
sub
dec
push
or
aam
or
imulb
mov
mov
cmp
clc
xlat
push
out
mov
and
ja
pop
sbb
fs
imul
add
fwait
xor
cmp
data16
pop
or
push
dec
mov
pop
jo
ljmp
xchg
add
repz
movsb
cmp
jne
xchg
jno
sub
jae
pop
or
loopne
fidivrl
sti
push
sti
pushf
das
adc
add
roll
xchg
scas
scas
xchg
sub
sbb
jbe
loope
or
aaa
ds
pop
pusha
mov
xor
daa
adc
xchg
ret
clc
pop
stc
sub
inc
das
test
mov
es
int3
add
ficompl
jg
movsb
mov
mov
cld
sub
aad
cld
nop
imul
cmp
jmp
jae
hlt
sbbl
into
push
out
fwait
lock
dec
es
rcll
int3
movsl
lcall
inc
icebp
call
push
mov
jge
sbb
mov
inc
pop
jo
cmc
leave
in
and
inc
dec
testb
test
int
mov
add
xchg
push
jmp
mov
xchg
out
xor
or
jecxz
dec
add
add
dec
or
push
push
mov
inc
push
pop
mov
mov
cmp
fsubl
jb
dec
leave
pop
icebp
cli
imul
popf
push
je
jo
sti
pop
and
in
stos
jmp
insl
sbb
inc
jno
in
movsb
addr16
shl
add
lds
pushl
push
shlb
push
and
xor
cmp
or
mov
mov
sbb
push
jae
cmp
out
add
ds
push
jo
add
fwait
dec
mov
jge
pop
mov
mov
jle
mov
mov
xor
jo
add
add
push
mov
mov
lds
cmc
mov
daa
jns
out
inc
xchg
rol
cmc
push
ds
add
dec
cli
and
jp
xchg
scas
push
cmpsb
jbe
xor
fwait
sti
jle
mov
in
xchg
push
lods
lods
mov
lret
ja
xlat
cld
mov
fisttpl
lods
lahf
pop
and
fwait
pop
sbbl
repz
pop
dec
adc
xor
push
cli
gs
ja
push
sbb
push
sahf
adc
loope
sbb
sub
es
adc
sbb
das
insl
sbb
orb
mov
popf
or
iret
js
add
or
mov
jnp
out
mov
lret
out
insb
lds
jo
mov
es
test
rorl
pop
sbbl
in
add
xchg
pop
mov
inc
jecxz
jge
js
insb
ds
sti
insb
fmul
fistl
jbe
aaa
add
inc
ss
mov
cld
push
xchg
adc
lods
fsubl
and
push
add
adc
leave
das
shl
lret
rcrl
fildl
adc
lahf
orb
xchg
insb
xor
push
test
push
insb
gs
lock
pusha
js
pop
test
xor
fistpl
sub
stc
nop
es
lea
mov
adc
aas
pushf
fucomip
lret
ljmp
call
adc
inc
inc
jg
xchg
xor
adc
ds
mov
xchg
imul
cmovo
vpmuludq
test
ret
xchg
mov
lods
sahf
and
pop
or
int
fcomps
insl
test
in
mov
or
inc
pusha
jae
xchg
ret
iret
je
dec
fsubrs
rcrb
mov
imul
stos
sbb
das
insb
roll
rorl
sti
xchg
mov
sbb
bound
mulb
flds
push
aas
push
inc
pop
nop
mov
and
inc
aas
loop
mov
dec
rol
js
cltd
and
jnp
push
dec
inc
push
call
mov
sbb
test
sti
insb
mov
shrb
pop
lea
add
rol
cs
push
adc
dec
jmp
mov
mov
sbb
or
inc
push
push
push
inc
sbb
inc
push
adcb
fs
ret
inc
push
aad
ss
or
nop
push
xchg
aaa
test
jle
sub
shrl
pop
mov
adc
add
sub
outsb
es
insl
dec
bound
andb
jbe
out
call
add
jb
dec
daa
insl
cld
mov
and
lods
sahf
sbb
xorb
push
mov
cmp
call
or
dec
sbb
or
cmp
ds
mov
out
popfw
hlt
out
inc
pop
pusha
testl
imul
push
rcr
cmp
negl
add
fiaddl
rclb
adc
add
sahf
ja
test
push
push
mov
mov
daa
js
mov
rcll
mov
lods
in
mov
adcl
add
bsr
mov
jno
xor
fldl
lods
frstor
xchg
pop
lcall
lret
scas
and
iret
inc
mov
daa
js
in
push
mov
data16
sbb
sarl
outsl
mov
mov
sti
inc
sub
in
outsl
mov
mov
fldt
adc
cmpsb
push
rol
jne
jne
scas
xchg
lret
and
aad
cld
and
cli
dec
lcall
adc
jb
xchg
clc
nop
int
jae
mov
fstl
outsb
mov
scas
std
popf
idivl
pop
adc
adc
in
pop
scas
xchg
jge
das
ret
pop
jns
cld
inc
push
pop
scas
adc
into
push
fucomip
cmp
jb
test
lret
and
test
push
sbb
cltd
xor
aas
loopne
es
mov
inc
xchg
xor
cmp
adc
stos
inc
call
cmp
into
outsl
cmp
and
paddsw
mov
lret
lret
repnz
hlt
cmp
mov
pop
inc
repnz
arpl
jle
mov
ljmp
pushf
dec
add
push
je
jmp
popl
jg
push
fcomi
xchg
enter
xor
mov
sbb
mov
adc
enter
sbb
mov
popl
jle
repnz
and
inc
pop
je
iret
and
popl
adcl
jecxz
fucomip
mov
pop
inc
fidivl
pop
popa
cmpsb
pop
sbb
popa
clc
ja
sub
xchg
xor
sbb
and
push
pop
pop
jne
xchg
dec
mov
jle
or
pop
mov
fsubr
mov
int3
xor
jns
int
and
movsl
jnp
inc
cltd
std
cmpsb
xor
lea
inc
pop
cli
jle
cmp
testb
loopne
push
dec
dec
dec
pop
idivb
xchg
daa
or
push
jno
lret
addr16
mov
mov
and
dec
rolb
xor
mov
test
leave
iret
bound
leave
ljmp
jo
sub
scas
dec
ficoml
xchg
inc
xchg
jmp
lods
and
jmp
ds
dec
adc
sahf
scas
pop
imul
cmp
subb
adc
ret
dec
popf
sub
ss
mov
pop
sub
popa
jle,pt
jo
cmp
jne
popf
sub
pop
pop
testb
rclb
nop
outsl
fadds
bound
rcrl
in
mov
imul
lods
adcb
and
jae
test
stos
xorl
fmull
mov
jae
pop
repz
cmp
out
stc
jnp
std
xchg
movsb
insb
ljmp
adc
pop
testb
sbbb
and
out
in
out
sbb
mov
push
cwtl
rcrl
or
mov
mov
pop
loop
push
insl
xchg
aam
je
in
sub
mov
sbb
fwait
and
push
fisttpl
fsubr
shlb
add
cld
xor
mov
sbb
js
or
sub
ret
testl
lret
out
xchg
adc
pusha
test
shll
xchg
imul
rorb
add
push
pop
lock
dec
ja
mov
xor
mov
or
xor
sub
cmp
push
adc
inc
in
cs
outsl
je
sub
push
test
cmp
pop
mov
cmp
aaa
add
int3
mov
call
into
int3
outsl
shrb
out
addr16
xchg
push
scas
push
out
clc
jbe
test
inc
push
in
sub
movsl
fs
je
push
mov
jnp
int3
adc
and
scas
lods
inc
loopne
xor
mov
xchg
incb
inc
test
aas
lods
push
out
sub
push
jmp
call
jb
in
jmp
ss
adc
jmp
negb
inc
push
pop
push
pop
cmc
xchg
xor
addr16
lahf
imull
cli
pusha
mov
mov
jg
scas
movsl
cmp
lret
push
xor
add
push
icebp
les
lcall
inc
sahf
loope
mov
inc
pop
rcll
fistpl
inc
mov
xlat
or
inc
test
dec
xor
lcall
mov
sbb
imull
mov
lods
mov
int3
adc
ja
xchg
push
imul
mov
scas
lock
jle
daa
jb
xchg
in
add
pushf
xlat
std
mov
jle
pop
xor
push
dec
mov
repnz
sub
mov
test
fldt
mov
mov
push
push
aas
fisttpll
sarb
inc
cmpsb
movsl
insb
psubusw
iret
pop
sbb
ret
xor
mov
sub
sub
cs
and
xchg
andl
adc
decl
push
mov
call
inc
mov
pushf
aaa
mov
or
mov
or
or
cld
lea
jl
xchg
jmp
pop
add
orl
jg
or
int3
inc
leave
fs
push
fbstp
aad
jns
sbb
jmp
insb
je
lahf
jecxz
popa
leave
adcb
aad
jno
fnstsw
mov
in
popf
push
notl
pushf
xchg
dec
int3
jle
sub
stos
cwtl
or
mov
mov
mov
loope
outsb
das
pop
adc
sahf
out
movsb
xchg
ja
mov
in
xor
dec
dec
mov
fdivl
movsl
insb
mov
dec
jle
or
mov
outsb
cli
sub
shll
xlat
push
lahf
sbb
xor
daa
and
push
sti
ljmp
out
and
mov
mov
push
ljmp
or
fcoml
xor
ret
cs
xchg
mov
les
add
xchg
stos
sahf
jg
and
mov
daa
jmp
mov
mov
enter
aam
rorl
loope
pop
insl
adc
je
scas
xor
mov
xchg
push
or
sbb
jge
mov
sahf
add
push
rorl
movsl
andl
dec
in
jae
push
mov
mov
iret
mov
add
mov
mov
iret
mov
jbe
pop
adc
sbb
dec
leave
xlat
data16
imul
jbe
xchg
inc
in
nop
xchg
stc
or
mov
xchg
arpl
int
sbb
push
ret
movsb
add
inc
in
inc
cmp
insl
fs
push
and
add
cmp
aaa
fabs
test
imul
clc
test
jb
pusha
pop
mov
dec
in
lret
and
sahf
mov
sbb
loopne
and
hlt
cmp
sub
add
sbb
outsb
push
imul
fwait
pop
test
int
orb
jg
test
xchg
mov
sbbb
sub
sub
lret
mov
dec
subb
push
sub
xchg
nop
lret
pop
push
fistpl
fnstsw
xor
loopne
ja
pushf
pop
adc
mov
movsl
inc
ret
movsl
imul
mov
sub
cmp
loopne
sub
filds
dec
pop
jns
jl
test
xor
mov
les
fists
inc
add
in
cmp
in
int3
jb
mov
push
cld
scas
nop
loope
fldenv
cmp
ja
mov
mov
pop
lock
push
imul
xchg
adc
dec
je
xlat
xor
dec
loop
fidivrl
mov
add
mov
mov
jmp
lock
or
mov
or
sub
in
popf
push
adc
jbe
cmp
ljmp
mov
add
xor
mov
sti
sub
cmpsl
sub
icebp
or
cmp
or
arpl
rdpmc
jecxz
aas
shl
fisubrs
adc
mov
pop
jp
xor
lret
bound
imul
fdivrl
in
pop
pop
fwait
mov
in
xchg
xchg
jns
je
mov
pop
xor
mov
inc
adc
test
sbb
xor
arpl
pop
idivb
push
fldcw
leave
xor
ljmpw
ljmp
xor
jb
push
sub
mov
cmpsl
dec
xor
adc
pusha
mov
mov
out
add
imul
add
hlt
cmc
stos
pusha
inc
popa
sub
xchg
inc
jo
inc
clc
rorl
or
pop
and
ds
pop
pop
mov
popa
enter
push
mov
jns
push
fwait
outsb
mov
jns
mov
push
in
repnz
mov
pop
fs
adc
pop
ret
scas
aad
fsubl
mov
cmp
leave
pop
push
test
out
xor
loopne
and
push
daa
arpl
mov
mov
mov
movl
gs
add
testl
mov
mov
mov
adc
add
js
jmp
shrb
mov
push
pop
adcb
pop
rclb
dec
icebp
out
sub
xchg
cmp
xchg
mov
js
mov
sbb
mov
sub
pusha
jp
mov
sbb
scas
mov
hlt
and
insb
fwait
cmp
insl
pushf
mov
xor
popa
push
sub
inc
add
adc
mov
xor
jmp
lea
push
mov
mov
mov
shrl
and
add
dec
inc
or
out
dec
pop
and
xchg
lods
inc
and
jmp
mov
lcall
gs
adc
add
cmp
int
les
loopne
xchg
les
mov
push
cwtl
fistps
xor
and
mov
dec
cmp
icebp
jp
dec
cmp
lods
rcr
sub
lock
std
int3
cmc
in
sbbl
push
ficomps
push
jns
sub
sbb
sbbl
jbe
movl
jp
or
enter
js
idivb
xchg
sbb
jo
arpl
push
std
lods
shlb
jno
pop
jns
mov
cmpsb
cmp
xchg
mov
daa
js
cmp
push
xchg
ljmp
jne
jl
aas
dec
fdivrs
mov
imul
sbb
xor
iret
outsb
hlt
add
movsl
add
lods
cmp
hlt
enter
add
and
test
cmp
add
cmp
enter
pop
hlt
movsl
pop
notb
or
scas
pop
jae
scas
mov
rorb
jbe
paddq
jmp
mov
push
cmp
in
ja
push
mov
add
aaa
cld
add
cmc
icebp
mov
mov
push
dec
fwait
dec
pop
int
sub
push
rcr
jb
pop
movsb
cmp
xchg
insl
in
sbb
cmp
pop
bound
xchg
int
sbbl
push
mov
or
or
int3
mov
mov
or
jb
stos
testb
adcb
add
mov
xor
mov
cltd
push
inc
leave
leave
test
mov
fwait
adc
cwtl
push
cmpsl
movsb
in
sub
outsb
popf
sti
mov
add
stos
sbbb
jl
lret
shrl
rsm
jne
ljmp
jge
out
add
jp
xchg
lods
rcr
outsl
and
out
jge
dec
xlat
inc
sbbb
cmp
or
xor
movsl
pop
sbb
mov
imul
es
into
and
jmp
fsubs
ret
pop
lock
iret
movswl
mov
lahf
xchg
add
mov
cld
lcall
xor
lock
or
jl
test
mov
stc
mov
mov
fnstsw
mov
xchg
mov
adc
repnz
sub
mov
repnz
out
icebp
mov
jecxz
shrb
mov
mov
add
sbb
xor
cwtl
cmp
add
dec
loopw
adc
mov
xchg
out
fmul
in
inc
loopne
ja
and
sbb
jb
pop
movsb
dec
mov
in
sub
pop
scas
fxtract
sarl
std
inc
dec
lret
movsl
insb
push
mov
aaa
push
aaa
ret
and
lods
xchg
leave
adc
xchg
push
xchg
fmull
imul
test
es
add
nop
push
dec
rcll
outsb
add
xor
popf
imul
out
adc
insl
jbe
lahf
dec
and
out
in
test
sbb
test
divb
insl
lcall
mov
cmp
jp
push
jo
scas
fwait
push
ret
clc
enter
pop
pop
out
pop
out
cmp
lea
imul
ds
loope
loopne
cmpsl
jne
mov
lods
add
cmp
decl
and
testb
jno
xor
data16
popa
and
clc
lods
adc
xchg
popf
push
test
push
in
pop
xchg
idivl
jns
sahf
pop
or
add
and
test
popa
lcall
in
ljmp
inc
dec
les
out
outsl
jbe
pop
imul
lock
test
cmp
and
add
push
imul
inc
fwait
xor
inc
stos
xchg
lods
cmp
cmp
jnp
int
cmpsb
push
arpl
adc
pop
or
dec
aam
fwait
mov
xchg
push
es
pop
mov
and
pusha
pop
popa
add
adcl
jne
xchg
and
sub
shrl
iret
xor
stc
mov
and
pushf
fidivrl
mov
inc
in
and
push
addr16
ficompl
mov
jp
inc
pop
nop
insl
shl
fists
rcrb
pop
add
stos
cmp
js
pop
jbe
pop
call
andl
divl
jb
push
or
inc
movsb
mov
and
repz
xor
add
lcall
inc
dec
dec
negb
cs
xchg
xorb
mov
adc
mov
mulb
push
imull
addr16
sub
lcall
or
jg
iret
sub
aaa
push
mov
andl
pop
push
inc
shlb
dec
flds
mov
cmp
and
rcrb
aaa
mov
and
shlb
push
pop
jae
std
mov
pop
lods
xchg
cmp
add
xlat
into
enter
int
add
push
out
sbb
ljmp
mov
sahf
xor
mov
or
rcrb
pop
jne
dec
orb
pop
into
push
mov
cmpsl
push
jb
xchg
mov
popa
jmp
test
shll
sarl
jl
loopne
mov
mov
mov
fbstp
fldl
out
pushf
sub
jno
ss
fmuls
test
xlat
mov
or
adc
mov
fiaddl
push
inc
push
lock
out
data16
jae
dec
xchg
pop
movsl
lods
inc
sub
decb
bound
dec
dec
push
popf
jns
and
lods
cmpsl
xor
add
or
mov
loope
ret
sub
push
idivl
xchg
cmpsb
jb
in
dec
es
mov
and
lods
jb
sub
sub
jo,pn
sbb
xchg
and
and
cmp
dec
mov
pop
out
push
insb
cmp
bound
aaa
into
push
shrl
cmp
xor
xchg
pop
adc
or
nop
dec
pop
in
mov
or
jle
jb
iret
test
loope
mov
ss
test
cmp
mov
pop
test
dec
pusha
nop
lods
loop
loope
xor
fbld
mov
pop
lea
xchg
imul
mov
mov
enter
movsb
int
aad
mov
jnp
cmpsb
inc
pop
test
inc
fidivrl
lock
pop
pop
cmp
subb
lock
mov
addr16
cmp
sub
arpl
seto
scas
call
pop
sub
adc
push
jns
sbb
jecxz
in
sbb
xorb
xchg
inc
mov
out
inc
popf
lods
xor
dec
sbb
pop
sahf
adc
xchg
sbb
mov
rcr
das
add
xchg
pop
jmp
sub
xor
mov
adc
push
pop
fsubrp
mov
add
outsl
not
or
mov
mov
push
add
cmp
ftst
jp
push
xchg
sti
pop
jge
add
es
and
int3
scas
pusha
or
push
popa
clc
inc
mov
mov
jle
adc
aam
repnz
cmp
jo
arpl
cmpsb
cmp
jnp
jns
ret
and
mov
loop
mov
mov
outsb
push
dec
push
pushf
jge
dec
jno
xor
cmpsw
ds
hlt
mov
std
jl
fwait
sti
popf
sub
ror
call
push
mov
out
pushf
inc
xchg
loope
test
inc
shlb
fsubs
jp
aam
pop
mov
mov
addr16
xchg
sub
std
cwtl
mov
fcoml
dec
pop
negl
out
enter
push
and
pop
sarb
fiadds
ljmp
jns
cs
lret
out
ud0
in
push
mov
pop
dec
jns
cld
jp
and
adc
aaa
dec
fs
cwtl
cmc
or
sub
cmp
mov
jae
sbb
shl
movsb
gs
and
leave
xor
shrl
push
mov
mov
shl
lods
and
ficompl
dec
repz
scas
xchg
inc
pop
leave
adc
mov
push
push
jo
xorl
inc
push
sbb
push
jnp
xchg
test
movsl
xor
into
cmp
test
add
pop
leave
inc
fsubs
xchg
cmp
jbe
fs
movsb
pop
adc
enter
mov
adc
dec
sub
sub
push
dec
mov
xchg
pop
psrad
int
add
stos
es
jo
jecxz
fnsave
jp
add
sti
fwait
adc
sbb
in
sbb
cltd
cmp
push
insl
cli
dec
add
sbb
jl
test
xchg
jo
push
ret
jg
sbb
jno
cs
push
push
je
sbb
or
jecxz
push
and
rclb
add
insb
enter
xchg
push
data16
fs
test
push
mov
mov
lock
ljmp
cmp
push
rorb
out
pop
pop
xchg
adc
jne
sub
inc
push
cmp
fiaddl
push
stos
in
jl
aad
pop
movsb
lcall
insb
iret
popf
arpl
add
xor
mov
sub
lds
insb
lret
popf
je
push
mov
cpuid
sti
mov
push
js
sub
mov
push
push
jge
neg
int
jp
sbb
rorb
xchg
or
add
jno
or
sbb
mov
mov
xchg
scas
cmp
cmp
push
jge
mov
pop
outsb
loopne
in
rol
mov
addr16
pusha
out
mov
jns
lcall
mov
sbb
outsb
lea
sahf
cmpsl
cmp
mov
mov
mov
or
sub
adc
xchg
cmp
scas
gs
sbb
bound
push
xchg
idivl
mov
mov
lea
mov
pop
lock
xchg
xorl
cmp
imul
jo
xchg
push
inc
ljmp
xor
lea
or
jno
sbb
pop
inc
jnp
pop
sub
and
movsw
mov
lock
hlt
mov
mov
xor
xchg
pop
and
scas
fcmovnbe
insl
or
stos
addr16
hlt
and
adc
aaa
adc
lret
pop
insl
std
cld
nop
push
xor
cmp
xor
jl
pop
ret
sub
inc
xlat
mov
lock
sahf
fcoms
push
in
sar
jno
add
stos
mov
jecxz
cmovno
loop
imul
sbb
test
scas
pop
push
jo
add
int
test
loope
out
inc
dec
lret
aam
jg
cltd
pusha
dec
mov
cmp
add
sahf
sub
sbb
mov
jne
adcb
push
add
repnz
insb
add
adc
and
in
arpl
xor
sti
sbb
lcall
and
in
jle
mov
xorb
mov
dec
jp
fdivs
xor
push
mov
push
xor
insb
xchg
lea
jmp
popa
insb
jae
jb
pop
or
in
scas
pop
pop
pop
xor
je
mov
ret
mov
repz
cltd
das
xlat
jle
xchg
loop
dec
repnz
scas
aad
jg
ljmp
push
lods
push
nop
mov
inc
lea
testl
xchg
xor
in
wbinvd
push
cmc
or
or
sbb
fninit
sbb
bound
adc
fs
cs
fwait
enter
push
and
bound
sbb
xor
sbb
les
cmp
sub
mov
sub
shlb
xor
jle
jbe
and
pop
add
nop
ss
sub
mov
idivb
lahf
fwait
lcall
xchg
push
test
imul
iret
pop
cmp
hlt
add
push
or
test
pushf
mov
es
xchg
and
jl
mov
nop
jl
fcomip
aad
testb
leave
adc
clc
testl
add
mov
add
rcrl
cmp
mov
sbb
inc
xchg
jb
and
movsl
xor
adc
mov
xor
subl
popf
pushf
adc
xlat
mov
mov
adc
mov
and
xchg
pop
scas
adc
sbb
aas
fiadds
push
sbb
sbb
dec
sbb
push
sub
push
jp
stos
dec
push
adc
or
sub
cmp
rcrb
mov
test
push
insl
loopne
add
pop
mov
cld
out
movsb
cld
fnstenv
out
mov
lret
sub
loopne
xchg
push
jecxz
xor
jmp
lret
lret
movl
inc
sbb
lods
mov
push
aad
lahf
or
mov
pop
enter
idiv
in
pop
dec
push
mov
aaa
mov
pop
mov
sbb
gs
lahf
ss
jbe
cmpsb
imul
add
in
xor
ret
mov
lret
sub
push
out
mov
or
xchg
push
push
loopne
jecxz
mov
lea
popa
xchg
lret
ss
testb
cwtl
or
and
fnstenv
inc
shlb
in
stos
andb
pop
icebp
inc
xchg
or
js
add
jle
pop
and
scas
pop
xor
aad
pop
cmc
add
jge
push
mov
sub
sub
and
imul
scas
mov
fistpll
aad
jns
mov
mov
xchg
cwtl
addr16
mov
jmp
out
jns
sub
pop
push
cli
cmpl
fs
dec
pop
mov
jecxz
cmp
in
imul
stos
es
inc
arpl
mov
das
adc
mov
cs
lret
sahf
jl
adc
xor
out
push
cmpsl
sbb
repz
or
xor
addb
xchg
mov
in
ja
adc
cmp
stos
mov
jp
xor
loop
mov
add
inc
sarl
es
pop
cltd
imul
mov
push
ljmp
mov
jp
push
in
lock
xor
je
dec
xchg
in
int3
out
out
sbb
ja
cld
out
das
xlat
int3
dec
pushl
jl
jl
inc
and
xor
je
daa
cmpsl
fildl
sbb
pop
mov
cmp
mov
scas
sbb
dec
arpl
mov
jno,pn
inc
xchg
scas
test
icebp
cmpsl
pop
out
xlat
mov
outsb
out
lret
jbe
and
mov
fisttpl
xor
mov
daa
jae
mov
cmp
and
jl
add
outsb
popf
jp
imul
call
out
loopne
inc
loop
inc
sub
lds
jbe
xchg
sub
gs
into
shrl
and
test
out
insl
aaa
dec
jle
jae
mov
popa
push
cmp
push
cs
shl
push
sub
cmp
mov
rorb
sub
pop
lock
xchg
ljmp
or
dec
mov
out
dec
call
mov
sbb
out
jl
and
mov
dec
addr16
rorb
movsb
decb
cs
repnz
dec
sbb
gs
mov
sahf
xor
jnp
shll
push
pop
add
es
add
sbb
mov
mov
cli
jne
popf
and
repz
mov
jmp
out
inc
cmpsl
ret
pop
adc
mov
add
jae
movsl
jle
jl
inc
pop
push
add
ja
xlat
jmp
cwtl
pushf
mov
out
pop
addl
push
jo
adc
ss
aad
adc
mov
loopne
outsl
shl
js
ja
adc
adc
and
repnz
push
loope
into
and
cmova
pop
cmp
je
jmp
sub
icebp
push
push
and
scas
push
loop
pop
xchg
cs
inc
dec
adc
cmpsb
lods
cld
mov
xor
mov
lret
shll
bnd
pop
stos
mov
pop
mov
add
cmp
fs
cli
sub
cmp
dec
cmp
sahf
jg
push
xor
mov
add
add
sbb
pop
sub
push
pop
sub
int3
bnd
test
adc
inc
pop
mov
in
jae
cs
and
cld
add
adc
lcall
mov
aam
jns
sbb
aaa
loop
sti
rcr
sub
or
fst
out
push
dec
filds
data16
imul
mov
inc
cmp
in
std
ljmp
and
adc
jmp
dec
xchg
icebp
xchg
push
mov
les
sub
sub
enter
sub
mov
xchg
rcrb
cmp
fistpll
sarb
pop
lock
push
jmp
stos
xchg
push
mov
sub
jae
fimuls
mov
jbe
mov
outsb
add
rcll
shrl
fwait
loope
xchg
add
ja
stc
movsl
pop
dec
push
pop
jecxz
dec
je
mov
stc
adc
aad
mov
das
jmp
pop
xchg
mov
pusha
int3
data16
or
mov
pop
cmp
add
and
pop
and
inc
bound
int
lea
pop
lods
mov
jle
stc
mov
sbb
sbb
cmp
outsl
aad
insb
iret
xor
push
and
loopne
cli
iret
sub
and
sub
xor
jbe
sbb
mov
out
or
sbb
test
test
js
in
xchg
and
lds
and
cmp
push
sahf
inc
dec
pop
testl
into
push
nop
add
scas
ja
pop
pop
lahf
push
lahf
out
mov
je
daa
pop
pop
fwait
lods
aam
int
into
and
imul
fisubrl
dec
aas
popa
mov
mov
xchg
in
sub
xchg
sub
in
mov
icebp
push
xorl
sbb
sbb
push
cs
adc
jnp
xchg
add
into
out
stos
jmp
ret
mov
pop
lock
loope
xchg
pushf
sbb
mov
flds
scas
clc
int3
movsb
cmp
fsts
das
dec
cmc
ret
xor
movsb
loopne
cmp
dec
cli
pop
xor
mov
popf
xchg
lock
int3
popf
outsb
ret
loope
lcall
push
and
dec
add
mov
cmc
push
js
dec
loop
and
fistpl
add
and
pop
adc
mov
inc
xor
jle
movsb
paddd
adc
icebp
adc
outsl
mov
mov
mov
out
mov
xchg
jo
lahf
testl
js
add
mov
dec
push
mov
in
mov
jae
dec
pop
mov
dec
sti
inc
rcrl
out
bound
rol
les
call
iret
xchg
bound
fmul
mov
ret
outsl
push
sbb
out
fldenv
or
addr16
sub
xchg
mov
adc
shl
and
sahf
icebp
jg
dec
shll
aad
jp
scas
adc
jo
loope
arpl
dec
clc
cmp
xor
nop
cmp
iret
and
es
and
or
icebp
cmpsl
mov
cwtl
xor
int
bound
les
inc
ret
fisttps
iret
imul
pop
inc
repnz
cld
es
adc
jb
dec
push
icebp
cmc
aas
xchg
icebp
cli
pop
ljmp
jecxz
add
adc
movsl
pusha
mov
mov
popa
jns
adc
cmp
mov
inc
pop
inc
fdivs
cmp
pop
negb
fldl
mov
aaa
mov
sub
ljmp
adc
add
fstpl
xor
int3
repz
lods
js
push
xchg
push
ja
lahf
repz
popf
and
sbb
bound
pushf
lds
call
or
push
jecxz
cmp
xchg
shrb
mov
cs
add
ds
jg
aas
xor
xchg
ja
dec
jecxz
pop
hlt
push
push
shrb
xchg
xor
addr16
out
repz
inc
mov
inc
xchg
xor
ss
movsl
stos
cmp
outsl
add
mov
pop
je
inc
mov
sbb
push
fcoml
movsb
aad
test
popf
shrb
fs
push
imul
jmp
or
mov
int3
sub
filds
sub
cmc
mov
xchg
lods
out
mov
adc
xchg
xchg
and
xchg
mov
and
testl
enter
or
mov
sti
sahf
and
call
cmc
and
aas
jne
inc
aaa
push
mov
mov
clc
and
cmp
fimull
inc
sbb
xchg
dec
sbb
rorb
daa
loop
pop
pushf
mov
repz
test
pop
sahf
dec
bound
add
sahf
mov
ficompl
mov
clc
shlb
dec
shrl
mov
stc
jecxz
sub
mov
cmpl
ljmp
cmc
xchg
test
das
inc
aas
ja
popa
and
cmpb
jg
sub
push
les
sbb
data16
dec
cmpsb
cmp
dec
inc
pop
movsb
push
call
jb
outsl
push
jo
repz
pop
push
cmc
pop
inc
orb
sbb
jge
jae
adc
test
jo
mov
pop
es
xchg
xor
xchg
push
cltd
mov
cmpsl
mov
mov
cmp
inc
or
pop
cmpsb
data16
push
loop
cs
inc
pop
imul
pop
fdivs
xor
test
xchg
sarb
sub
xchg
or
fidivrl
addr16
aas
cmp
mov
inc
aad
push
and
shrl
adc
mov
push
fistps
clc
dec
add
sbb
insl
sahf
ss
xor
lods
test
imul
sbb
inc
pop
dec
fstl
jo
jl
sub
lds
pop
sbb
shll
jl
testl
adc
mov
pop
movsl
inc
adc
dec
data16
xlat
insl
or
aaa
subl
mov
dec
aad
jnp
fwait
push
adc
test
dec
andb
ja
push
dec
sub
mov
imul
daa
fiaddl
test
xchg
loopne
mov
add
loop
push
fwait
lret
jb
push
mov
jnp
lods
or
shlb
aas
pushf
jb
jo
push
andb
outsb
mov
sub
repz
into
cmpsl
sahf
bound
arpl
fsubrp
xchg
or
cmp
sub
push
nop
jnp
stc
mov
inc
xor
popa
xchg
dec
aas
mov
shrb
ret
or
mov
or
mov
inc
push
rcr
dec
lods
in
mov
scas
sbb
push
dec
nop
sub
ja
xor
xchg
cs
fistpll
sqrtps
mov
daa
cmp
cmp
clc
inc
cwtl
sarb
mov
clc
dec
shll
movl
push
lahf
ficomps
lahf
imul
sti
pop
cmpsb
mov
inc
inc
loope
dec
aaa
into
mov
cmp
xorb
mov
cmp
inc
ret
loopne
insl
lahf
in
fiaddl
xchg
clc
nop
out
cmp
xor
mov
lret
std
cld
data16
addl
dec
push
xor
sub
sbb
push
lds
mov
je
jecxz
mov
dec
cmp
rcll
xchg
jo
adc
nop
and
mov
les
push
or
push
xchg
pop
and
pop
jae
mov
cmp
xchg
bnd
mov
test
push
push
ret
pop
popa
jg
scas
lods
or
xor
jo
aam
inc
adc
std
lcall
pop
loope
dec
pop
sbb
fistpll
xsha1
cmpsb
lret
jl
adc
push
nop
cmpsl
jecxz
test
or
add
inc
aam
stos
sub
push
bound
jbe
imulb
mov
fwait
inc
add
popa
scas
pusha
lahf
lcall
inc
arpl
mov
pop
cli
outsl
jnp
cmp
pop
call
out
add
lret
jno
shl
inc
into
push
cmp
mov
rsqrtps
aas
xchg
dec
jbe
xchg
stos
mov
fdivl
das
faddp
and
inc
adc
rorb
jecxz
sbb
fdivrl
out
push
in
or
cmp
pop
stos
jae
mov
mov
inc
and
push
or
pop
jnp
pop
fsts
enter
iret
not
dec
out
fnstenv
nop
sub
pop
mov
int3
imul
adc
sbb
jp
inc
nop
outsb
lcall
popa
repz
shll
lods
xchg
and
ficomps
adc
add
sahf
mov
mov
in
adc
push
imul
pop
sub
pusha
lock
out
in
cwtl
mov
pushf
inc
xchg
in
lret
dec
pop
jns
dec
push
mov
loopne
mov
sbb
or
xor
cltd
xor
push
sahf
sbb
stc
ret
inc
lahf
cmp
ficoms
dec
fistpll
lods
ljmp
and
bound
mov
fs
sbb
ret
adc
adc
cmc
push
leave
pop
iret
cmpsl
testl
ds
dec
or
aas
mov
mul
scas
cmp
mov
push
jle
repz
dec
dec
fs
cmp
shrb
test
adc
loope
push
out
push
aas
inc
jbe
testl
fstl
jmp
mov
data16
aaa
mov
test
testb
cmpsl
sub
or
daa
cmp
fsubrl
gs
rolb
jo
leave
pop
and
int
gs
das
add
jno
push
call
adc
daa
push
imul
daa
mov
repnz
or
fabs
xor
mov
out
outsb
sbb
cmp
mov
sub
cld
mov
jnp
loop
adc
clc
add
xor
sub
pop
inc
adc
fistps
or
cmp
or
test
dec
adc
lret
stc
fdivp
daa
test
ja
std
aad
das
dec
sar
add
gs
and
sub
outsb
push
or
jbe
xchg
sub
mov
jns
sbb
aam
push
loope
test
adc
and
cmp
jbe
imul
mov
test
jb
dec
or
out
mov
test
push
inc
xchg
aaa
shll
ss
lock
test
ja
pop
out
cmp
adc
mov
ret
push
inc
pop
mov
add
xchg
add
call
rol
movl
test
jbe
or
mov
pop
insb
or
dec
ss
add
out
sub
push
jmp
dec
repnz
add
fdivl
mov
fucomi
jle
jb
int
cmp
and
cmp
jmp
and
ret
pop
fimull
jle
mov
scas
mov
dec
inc
pop
cmpsl
aas
add
add
idivb
push
andl
cmpb
jno
pop
sub
sti
mov
lcall
je
sub
add
xchg
jmp
lcall
out
xchg
lea
mov
push
aaa
or
xor
add
xchg
sbb
jne
pop
push
lahf
es
cmp
das
dec
dec
xor
ds
cmpsl
cmp
and
add
mov
inc
testb
lds
lods
dec
je
jb
mov
sub
leave
add
xorl
mov
sbb
test
scas
outsl
push
pop
fwait
jl
xchg
les
jle
lods
cld
jg
arpl
add
cmpb
inc
rorb
pusha
lock
sbb
int3
nop
stos
add
push
mov
scas
imul
bound
dec
test
repz
sub
jbe
xor
pop
jne
pop
lods
inc
nop
sub
mov
pop
inc
fidivrl
lret
xchg
test
clc
fsts
and
jae
push
repnz
jo
push
inc
aas
fs
xor
test
paddb
sbb
push
repz
aam
jg
and
pop
jnp
push
pushl
push
jmp
ss
shll
pop
andb
ret
icebp
cmp
push
add
arpl
add
bound
imul
orb
pop
or
sub
xchg
jnp
pop
and
and
and
push
ja
inc
pop
xchg
cltd
fnsave
pusha
fldt
inc
dec
add
leave
stos
jbe
xlat
mov
pop
movsb
cmc
dec
pop
inc
mov
adc
decb
dec
int3
jg
rorb
mov
movsb
cmpsl
bound
shl
fsts
inc
shl
mov
pop
mov
mov
push
and
xchg
in
add
repnz
inc
and
int3
orl
dec
not
arpl
sub
stc
test
ret
inc
xor
stos
jg
ret
ficomps
push
lods
shrb
cmc
inc
cmp
pop
enter
hlt
das
push
out
outsb
and
adcb
adcb
cmp
sbb
cmp
cmp
sbb
xchg
stc
mov
fistpl
popa
bound
dec
out
dec
dec
out
test
sbb
inc
ds
xchg
xor
call
pop
cmp
and
pop
insl
sub
mov
out
push
push
mov
lock
push
addr16
cltd
cltd
not
mov
sbb
addr16
lock
add
inc
pop
dec
xchg
outsb
push
loopne
es
dec
sbb
bound
ljmp
mov
jmp
cld
sahf
in
maskmovq
testl
xor
mov
and
out
jl
cli
xor
andl
in
aas
shrl
pop
call
or
inc
mov
movsl
js
into
jmp
jns
jecxz
movb
pop
or
pop
jmp
dec
xchg
mov
push
in
jne
addr16
jae
sbb
mov
in
lds
dec
div
xchg
sbb
dec
daa
mov
in
test
loop
movsl
or
mov
lahf
jle
out
pop
int3
pop
fwait
push
push
mov
movsl
jb
inc
push
sbb
xor
cmp
fnsave
into
int
xchg
sub
xor
and
das
or
movsl
jb
push
cltd
adcl
lods
pop
in
ss
cwtl
popa
mov
pusha
fldt
push
adc
lahf
out
pop
hlt
add
mov
sbb
cmp
cmp
js
inc
mov
dec
imul
lea
dec
in
orb
mov
testb
push
adc
xchg
xor
lret
jle
pop
out
pop
ja
jecxz,pn
and
pop
stos
dec
lea
inc
loope
jae
mov
pop
jp
lods
push
out
xchg
out
xor
xor
xor
adc
cld
mov
inc
into
scas
rolb
fidivrs
push
fmul
test
popl
repnz
sub
or
dec
add
lahf
mull
sub
sub
ja
das
cmpsb
push
shrb
xor
notb
mov
mov
push
mov
jns
dec
push
cld
mov
push
jl
pop
divb
jns
cmp
aad
fimull
in
adc
jecxz
ret
xor
enter
fs
add
pop
push
stos
dec
cmpsb
sbb
icebp
inc
hlt
and
add
add
and
sbbl
add
adc
push
imul
mov
xchg
sub
push
stos
test
lods
scas
nop
das
inc
sub
xchg
mov
xchg
dec
xor
dec
fbld
xchg
dec
adc
out
ss
pop
inc
jl
dec
scas
gs
mov
lret
in
mov
leave
push
aaa
push
test
add
cmpps
jnp
rcll
sub
dec
loopne
inc
adc
mov
xchg
les
jle
fstpt
or
sub
movsl
mov
push
adc
ss
pop
sti
jnp
push
cmpsb
mov
push
mull
add
stc
loop
fistpl
add
and
rorb
add
imull
test
incb
flds
lahf
push
pop
jmp
mov
mov
in
lods
rcrl
fcomip
dec
mov
inc
adc
lds
xchg
aas
enter
lods
cmp
fwait
lods
incb
mov
call
cmp
jo
rcrb
push
pop
xor
in
mov
pushf
mov
ret
mov
xchg
clc
add
cmp
push
dec
imul
stos
icebp
xor
js
clc
dec
cmp
jp
dec
out
out
mov
pop
or
movsb
pop
scas
movsb
decl
sbb
dec
jl
out
out
dec
sbb
push
mov
and
adc
push
fs
mov
xchg
test
leave
dec
add
inc
mov
push
dec
jmp
cs
xlat
mov
dec
outsb
pop
and
cmp
mov
bound
sti
jns
xor
or
insb
clc
pop
stos
jp
xlat
cmp
jne
out
mov
mov
rorl
lods
ja
push
test
scas
cwtl
dec
mov
popf
testl
test
xchg
sbb
sarl
cli
jne
cltd
jo
hlt
in
andl
test
or
or
sub
ret
scas
jmp
insl
in
andb
inc
pop
gs
adc
lods
pop
jbe
cmp
jb
push
out
dec
dec
jnp
push
out
push
fmull
cmpsl
iret
loop
sub
pop
and
fdivrl
or
pop
dec
sbb
jle
insl
loopne
mov
inc
neg
dec
shrl
sti
xor
sbb
clc
hlt
or
adc
bnd
pop
mov
jg
aad
pop
mov
negb
movsl
in
jmp
aam
cmpsl
sbb
jb
nop
inc
jmp
shlb
jp
pop
mov
gs
outsl
inc
int
push
ficoms
xor
xchg
sub
fidivs
sbb
xor
mov
fnsave
mov
pop
clc
dec
or
pop
mov
int
cmpps
mov
inc
sub
insb
dec
mov
ljmp
fcoml
je
scas
scas
sub
mov
movsb
pop
outsb
in
push
lds
dec
cld
pop
cmp
mov
gs
xchg
into
mov
or
push
adc
push
pop
mov
xor
sub
imul
push
cmp
push
shll
pop
imul
lahf
ss
cltd
mov
mov
aad
clc
mov
pop
sahf
and
push
xor
es
xlat
push
aaa
cli
pusha
xchg
ljmp
insb
ja
fsubl
push
ficoml
iret
and
sub
add
jo
push
dec
pop
out
push
repz
in
mov
sbb
push
adc
inc
fidivl
xor
mov
push
jne
insb
pop
cmc
sahf
push
fnstcw
leave
jno
push
mov
mov
xorb
sbb
ret
lds
mov
pop
sahf
jecxz
nop
jl
xlat
imul
jle
hlt
aad
popl
pop
scas
or
jp
mov
js
mov
cmp
cmc
dec
cmpl
push
jge
mov
push
mov
in
xor
inc
push
lea
movsb
test
adc
xor
ret
pop
push
test
jne
adc
gs
fisubrl
out
and
fsubr
inc
lret
adc
dec
sarb
push
lods
add
dec
test
scas
ret
xor
push
inc
push
pop
call
loopne
pop
ret
in
add
jno
or
mov
adc
inc
xchg
mov
lock
and
mov
pop
insb
push
fidivs
push
pop
lret
xlat
jg,pt
inc
mull
imul
jl
hlt
sub
imul
and
stc
pop
std
push
or
dec
fs
mov
cmp
enter
mov
push
adc
xlat
sub
sub
cmp
xor
sub
loopnew
sbb
lods
sahf
fneni(8087
ljmp
das
and
xor
jb
ret
scas
mov
cwtl
cs
popf
stc
push
sti
xor
jle
lea
mov
adc
mov
jb
mov
stc
dec
ss
mov
ret
shrl
cld
pusha
xchg
mov
pop
pop
repnz
sbb
lret
std
push
pmaddwd
jge
rorl
in
jle
inc
daa
arpl
xchg
imul
addr16
pop
scas
aas
sbb
sbbl
leave
lret
or
imul
add
jp
inc
mov
bndldx
ret
pop
fucomip
lock
cmpsl
lods
or
jnp
or
incb
xchg
sub
lcall
push
push
jb
or
jno,pn
push
in
arpl
pop
mov
sbb
pop
inc
sub
lds
int3
pop
bound
fnstenvs
imul
xchg
push
sub
dec
push
fiaddl
push
out
scas
push
and
ja
mov
jg
out
jge
pop
adc
dec
imul
mov
leave
out
test
add
push
mov
push
inc
mov
and
fdivrl
gs
mov
push
iret
cmp
xchg
mov
cltd
sub
fistl
daa
insl
add
sbb
mov
sti
rdmsr
adc
xor
adc
test
mov
jmp
cld
add
pop
daa
out
jecxz
in
mov
lods
mov
pop
lods
mov
lcall
xchg
sbb
lods
ficoms
in
mov
cmc
imul
mov
sub
mov
cs
sbbb
mov
popa
push
push
jb
rorb
jnp
jge
cmp
leave
rcrb
xor
mov
stc
mov
mov
mov
shrb
sbb
and
subl
xchg
je
test
sub
addr16
lret
mov
mov
dec
mov
ret
mov
sub
xchg
push
mov
push
ss
jno
push
mov
add
dec
jno
ss
push
lret
mov
bound
pop
mov
mov
add
js
or
mov
adc
nop/reserved
popf
push
out
sub
sub
pusha
or
mov
pop
sub
push
scas
bound
mov
inc
aad
leave
lea
add
and
rorl
push
push
lret
sti
outsb
jbe
jnp
scas
and
adc
add
mov
imul
mov
pop
gs
aad
ja
in
aas
popf
dec
loope
popf
xchg
xor
adc
mov
test
out
test
push
add
or
sbbl
xorb
sub
and
aad
ds
push
negb
nop
xor
aam
cltd
pop
daa
in
push
add
ret
xlat
and
jmp
stc
inc
hlt
mov
mov
pop
push
cmc
adc
std
arpl
sbb
cld
aas
dec
shlb
mull
neg
mov
std
add
arpl
push
test
and
cmc
dec
stos
and
dec
push
insl
xchg
inc
ds
cwtl
pop
mov
pop
xor
das
rol
add
test
pop
fiaddl
inc
imul
adc
mov
pop
imul
mov
add
outsb
loope
sbb
stos
dec
outsl
inc
scas
jl
frstor
dec
popf
xor
sti
mov
adc
les
imul
outsl
mov
cmp
xchg
adcl
xor
add
xchg
or
dec
outsl
stos
mov
inc
inc
scas
pop
sub
out
inc
popa
sarb
mov
add
jge
scas
les
or
in
or
pop
loop
adc
sub
mov
aad
nop
sahf
xor
and
sub
ds
sub
and
inc
sbb
in
sub
mov
xchg
add
in
stos
sbb
lock
lods
add
loopne
jne
aaa
mov
lret
sub
pusha
repnz
push
stos
jmp
pop
push
mov
call
or
sub
cli
xlat
stos
mov
pop
lcall
notl
dec
add
sbb
xlat
decb
cmpb
mov
mov
mov
cld
pop
enter
dec
insb
xchg
int
addr16
fstpl
fistpll
in
inc
inc
or
fs
jbe
loope
xchg
mov
bound
inc
jmp
repnz
push
addr16
sbb
les
iret
nop
ss
adc
pop
mov
lret
jnp
mov
pusha
dec
push
scas
aaa
inc
outsl
out
ret
cwtl
mov
rol
xor
sbb
mov
sar
jecxz
jno
inc
mov
cmc
outsb
dec
cmpsb
mov
and
hlt
adc
xchg
aad
cmp
arpl
push
js
xchg
rolb
xchg
mov
in
push
mov
sbb
imul
nop
aad
scas
add
mov
mov
adc
pop
inc
popa
aad
jmp
out
test
xlat
insl
mov
shl
dec
pop
lods
and
jbe
push
mov
push
lock
sub
loopne
movsb
mov
xor
xchg
mov
repz
push
addl
jbe
test
mov
mov
ret
out
inc
rol
or
es
mov
inc
imul
rorb
in
jns
scas
rolb
mov
lret
aad
in
xor
fdivrs
and
ret
mov
sar
dec
stc
pusha
cmpsl
aas
scas
stos
stos
test
adc
jb
inc
lcall
pop
dec
fidivl
ret
mov
loop
shl
add
xor
pop
sbb
cld
or
aam
sub
sbb
pop
aad
cmc
or
fwait
jge
mov
add
fsub
push
cld
sub
ljmp
push
or
sbb
sub
pop
cmp
lret
adc
dec
xchg
das
int3
lret
dec
jecxz
push
add
add
fcomip
xchg
into
shll
out
je
and
mov
and
xchg
inc
lret
ret
jne
aam
out
push
cmc
xchg
sub
xor
mov
mov
sub
fstpt
icebp
ror
bound
xor
imul
popl
loope
fstenv
pop
xchg
cwtl
mov
jp
cs
push
mov
xor
pop
sahf
mov
mov
hlt
and
push
xor
cmp
sub
std
into
out
std
aaa
pop
fidivs
xor
arpl
mov
shll
scas
sbb
loopne
lods
dec
cltd
movsl
mov
test
dec
inc
adc
and
jl
js
sbb
ds
mov
push
addr16
out
test
pop
or
nop
mov
imul
out
sbb
mov
fstp
jge
lahf
repz
xor
lods
jecxz,pt
mov
jae
jle
xor
inc
cwtl
inc
and
test
aad
mov
fsubl
ss
xor
and
and
loop
cmp
shl
cmp
jo
push
insl
dec
jo
push
cwtl
fnsave
jns
dec
gs
imul
jb
shlb
pop
lret
fdivl
scas
sbb
push
cmc
jmp
xor
popf
xor
mov
ja
mov
cmp
cmpsl
adc
mov
fcoms
imul
xor
pop
faddl
out
fdivrl
out
daa
out
and
push
mov
jge,pt
aaa
scas
pop
adc
push
imul
mov
aas
shl
jo
ds
or
pop
and
les
mov
test
loopne
fnstsw
xchg
xchg
push
jp
dec
fistpll
inc
test
fstpt
aaa
sbb
jbe
mov
adc
faddl
cmp
xor
fists
inc
push
push
mov
pop
ljmp
sub
or
js
ds
leave
jge
repnz
jmp
cmp
pop
pop
insl
mov
imul
and
pop
clc
adc
cmc
mov
les
ret
mov
out
bound
fld
sarl
mov
gs
stos
dec
push
or
test
fdivrs
leave
fs
mov
or
loop
and
cld
xchg
push
push
or
add
daa
subl
mov
jg
xchg
es
lods
xor
cmp
add
jne
sarl
insb
out
mov
es
mov
test
scas
lods
dec
bswap
bound
out
aas
push
mov
xchg
inc
fistl
mov
adc
mov
lret
insl
xchg
imul
pop
je
scas
jmp
inc
clc
xchg
add
sub
pop
lods
inc
jne
imul
popa
leave
fst
xchg
mov
push
test
xor
mov
daa
and
inc
std
in
mov
add
in
fcmovnu
outsl
or
xchg
jae
ret
inc
movsb
jecxz
stc
xchg
int3
mov
mov
adc
inc
xchg
stos
ljmp
repnz
in
sub
xlat
xor
xor
mov
lret
mov
and
mov
pop
xchg
mov
lds
fisubrl
mov
mov
mov
mov
cmp
std
and
xor
repz
mov
cmpsl
sub
aas
mov
xchg
arpl
les
outsl
test
mov
ret
leave
cmc
mov
or
adc
adc
dec
bswap
mov
aam
jge
pushf
test
ret
jp
inc
fs
loop
mov
movsb
xor
shrl
push
loope
add
add
clc
pop
adc
lods
fisttpll
addr16
or
ss
push
aas
pop
mov
scas
jns
sbb
jne
pop
mov
fnstsw
lret
cld
popa
add
cli
lret
jecxz
scas
cli
in
sarl
roll
decl
pop
test
and
and
cmp
clc
xchg
lds
sbb
hlt
xlat
or
hlt
rcrb
sbb
or
push
aam
test
bound
aaa
stos
mov
shlb
jp
mov
cld
scas
inc
adc
mov
add
sbb
pop
jno
nop
addr16
popf
pusha
dec
adc
lret
fbld
push
mov
adc
idiv
aas
mov
cltd
or
pushl
imul
sbb
pusha
ds
xadd
mov
rcll
jo
pushf
mov
clc
push
and
xchg
cmp
sbb
add
sbb
mov
xor
xchg
cs
jno
push
cld
movb
xorb
scas
xchg
push
cmp
js
sub
enter
pop
push
add
test
lahf
push
pop
loop
add
loopne
mov
push
addr16
test
jmp
aaa
pusha
imull
inc
mov
out
std
pop
mov
mov
jmp
xor
cmp
and
or
je
fidivl
jbe
dec
pop
shrl
bound
mov
rorb
sbb
mov
outsb
in
xchg
mov
clc
jp
jmp
or
sbb
inc
loopne
mov
jo
dec
jmp
std
push
testl
mov
hlt
aas
stos
and
lds
lret
cld
shrl
fnsave
push
fs
mov
pop
daa
cltd
sbbb
inc
loop
shl
mov
mov
jg
pop
mov
jl
dec
adc
mov
cmc
test
dec
ds
mov
adc
or
push
or
seta
jnp
mov
test
inc
mov
mov
adc
inc
fld
ss
lcall
adc
pop
add
out
out
popf
xor
and
test
scas
addr16
test
mov
inc
sbbb
or
adc
jns
add
int3
xchg
fdivrs
pop
push
lods
pop
faddl
sub
xor
lret
stc
pop
ljmp
push
outsl
or
testl
scas
cltd
xchg
fwait
aam
mov
mov
mov
and
inc
jecxz
bound
dec
ljmp
js
ret
cld
pop
sbb
push
mov
pop
add
test
mov
and
lea
xor
in
sbbb
dec
dec
sti
arpl
mov
cltd
xchg
add
ret
stc
adcl
iret
fidivs
jb
dec
scas
gs
xchg
xchg
lret
out
stc
xchg
xor
ror
arpl
mov
jmp
sbb
mov
pop
push
dec
push
cmc
movsl
scas
sahf
xor
xor
push
xchg
push
jmp
mov
rolb
or
push
mov
sub
sahf
fdivs
outsb
inc
int
add
sbbb
push
xor
push
or
in
adc
in
push
push
push
test
push
xor
dec
mov
cmp
stos
mov
mov
inc
mov
push
je
ret
shlb
add
mov
fwait
xor
cmp
or
pop
xlat
jp
rcr
repnz
adc
and
cltd
mov
sar
pop
xchg
add
idivl
insl
dec
or
rcrb
add
xchg
cs
inc
push
xor
xor
cli
rol
inc
push
dec
jnp
pop
pop
lea
cmp
push
add
repnz
and
add
jnp
inc
mov
fistps
push
xlat
inc
scas
ja
stc
and
sub
xchg
loop
xchg
adcl
and
cmp
and
into
and
inc
fsubl
push
and
ficoms
jne
in
test
mov
je
inc
pop
les
xchg
into
arpl
mov
push
push
inc
xor
xor
outsl
sti
dec
xchg
ss
cmpsl
ds
mov
pop
fistpll
xchg
dec
roll
jae
cltd
les
mov
clc
xor
das
xor
and
adc
out
xor
mov
inc
jg
rorb
notl
cmp
push
rorb
adc
adc
xor
jmp
adc
idivb
mov
push
sub
mov
rcrb
and
es
icebp
icebp
mov
jp
fcoms
fisubs
dec
mov
lock
xchg
push
notb
mov
and
add
xchg
xchg
sub
and
mov
xchg
sbb
out
mov
jge
mov
aad
sbbl
arpl
shrb
cmpl
inc
sbbl
andb
stos
insl
loope
lahf
lret
into
enter
adc
add
adc
or
rcr
or
stos
xchg
jmp
xor
push
cmp
test
lock
lcall
movb
jp
and
lcall
outsb
dec
push
fstps
rcrb
dec
cmp
inc
push
or
mov
mov
icebp
in
fbld
outsl
data16
lret
xlat
cmovb
insl
adc
inc
sbb
pop
mov
sub
loop
loope
mov
cmp
mov
jle
lods
shrl
inc
or
in
test
in
sbb
mov
and
outsb
add
cltd
out
lahf
popf
xchg
mov
inc
push
in
sub
jne
addr16
lcall
inc
sbbl
pusha
outsb
lds
repz
push
pop
adc
sub
aam
clc
push
inc
cmp
lret
in
sbb
push
pop
push
nop
adc
sbb
lahf
ss
mov
loope
imul
add
loope
test
addl
xor
incb
shlb
ret
rorb
pop
lret
xor
stc
adc
fldl
push
ljmp
pop
iret
lret
out
jle
sub
dec
dec
mov
loopne
jecxz
mov
iret
add
fdivrp
sbb
inc
fsubrs
in
clc
test
imulb
nop
sub
jecxz
or
sub
xchg
sub
sub
sub
arpl
sbb
mov
mov
mov
idiv
ret
sub
pop
stos
lea
pop
ljmp
in
jnp
mov
ficompl
int
dec
stos
push
stc
aaa
lret
pushf
cli
int
sbbb
or
stc
es
cmp
fwait
fs
inc
mov
shll
scas
out
push
faddl
negb
sbb
mov
lds
push
repnz
rcl
mov
adc
ljmp
out
aaa
cmp
shll
xchg
mov
cli
add
sub
pop
jbe
dec
or
or
dec
sbbl
jno
lea
scas
adc
ja
popaw
sbb
iret
pushf
lods
out
fiadds
pop
incb
jne,pn
ret
push
mov
cmp
call
std
shll
into
xchg
mov
xchg
mov
push
mov
out
popf
daa
sub
xchg
dec
nop
adc
or
pushf
pop
outsl
lds
ja
addr16
xchg
mov
pop
cmpsb
testl
in
movsl
sbb
mov
test
fists
push
inc
out
jns
fisttpll
push
scas
lods
jnp
fnstenv
or
sub
pop
imul
sbb
in
aas
out
jo
inc
and
inc
add
lds
hlt
mov
pushf
and
mov
movsb
into
arpl
movsb
aam
push
jno
outsl
mov
sub
mov
pusha
push
mov
sbb
jg
pop
add
jo
add
xor
mov
js
repnz
aad
mov
es
lods
or
repnz
mull
sub
insb
inc
ret
mov
mov
fwait
pop
cmp
inc
cwtl
data16
outsb
push
inc
cmp
push
scas
sub
inc
push
out
jb
sti
jbe
sbb
xchg
outsb
scas
rcrl
jecxz
mov
fisttps
sub
jns
bound
mov
and
add
scas
push
mov
pop
mov
daa
les
xor
stos
addl
push
push
jle
mov
sbb
dec
mov
aam
mov
pop
insb
push
sub
sti
imul
cmc
mov
push
out
pushf
rcll
push
xor
fadds
mov
dec
fbstp
xlat
data16
mov
fldl
int
dec
clc
sahf
in
and
dec
xor
xchg
addr16
adc
out
push
xor
cli
xchg
call
or
sahf
imul
mov
subb
inc
xor
xor
movsl
bound
out
xchg
cli
pop
lock
cmp
sbb
pop
arpl
test
jns
cmpsl
mov
test
add
in
mov
mov
mov
push
xchg
jecxz
or
mov
imul
les
add
push
aas
mov
push
inc
cli
push
mov
dec
fs
cmp
insl
js
dec
sbb
mov
push
lods
out
sbb
enter
fldenv
xor
sbb
pop
cmp
cmpsl
ds
fcmovb
addr16
push
jl
dec
gs
dec
sbb
aam
scas
jecxz
add
mov
aad
test
out
adc
inc
add
je
loopne
xor
lock
or
xchg
mov
dec
jecxz
xor
add
lods
inc
jb
inc
sbb
mov
adc
cltd
jg
and
mov
mov
add
or
es
loop
sub
out
stos
inc
loope
push
movsl
mov
jnp
int
fwait
rclb
jmp
fldl
xchg
notl
jns
xor
shll
mov
push
jb
aam
roll
cltd
ret
or
inc
pop
idivb
push
out
test
lcall
mov
push
sub
mov
shl
fidivl
dec
lock
and
xchg
or
mov
iret
cmp
shrb
mov
fnstsw
insl
push
mov
inc
ret
xchg
mov
adc
add
add
ljmp
cmpsl
test
jbe
aaa
push
mov
aam
xchg
repz
clc
inc
xlat
jmp
push
xor
inc
add
push
out
xchg
pop
mov
shl
cmpsb
int3
jae
or
jb
jmp
fadd
pop
adc
je
dec
in
dec
mov
jae
out
sbbb
fsubrl
push
or
jo
in
mov
sbb
mov
pop
cmpsl
inc
jb
in
jae
je
dec
arpl
fstp
shll
mov
pop
insl
call
ds
sub
xchg
pop
jne
jb
pop
popa
in
pop
push
out
and
xchg
ret
mov
push
movsl
adc
mov
mov
mov
pusha
xchg
xor
andl
cmp
test
fs
loop
jecxz
int3
inc
stos
inc
ss
fwait
xor
fsubrs
fists
dec
ds
das
xor
test
adc
out
sub
mov
stos
mov
stc
data16
arpl
enter
sbb
imul
dec
mov
xchg
and
add
mov
pop
mov
dec
lods
lds
or
jp
sub
inc
mov
testb
dec
dec
loop
test
mov
xlat
add
lcall
mov
div
inc
and
shlb
pop
icebp
cmp
xchg
jo
cld
addr16
xor
fildl
mov
test
push
pop
xor
dec
add
ficomps
xor
lahf
shlb
mov
push
test
imul
mov
mov
xchg
pop
sbb
jge
jno
cmp
sarb
add
and
mov
xor
in
mov
insb
add
jmp
sub
pop
mov
imul
inc
pop
sbb
push
adc
lret
fildl
bound
fs
testl
je
loopne
xlat
cs
xor
jmp
inc
data16
pop
jl
test
mov
sbb
cmp
ss
repnz
out
ud0
sti
and
rclb
mull
fists
std
xchg
or
scas
popf
decl
cmpsb
or
int3
mov
sub
dec
mov
fisubrs
in
iret
movsl
adc
xchg
jmp
repz
enter
mov
add
enter
jecxz
ja
or
inc
sub
jo
mov
sub
fiadds
dec
push
inc
cld
cs
imul
loopne
pusha
loop
lret
lahf
addb
mov
add
adc
cmp
xchg
inc
fdivrs
pop
push
cmpsl
push
popa
pop
jmp
call
dec
bound
mov
or
int
aam
rorb
or
mov
push
stos
insl
inc
mov
pusha
dec
pop
xchg
pushf
pop
scas
movsl
je
cmp
test
stos
mov
cmpsb
aas
pop
xor
lods
dec
mov
push
out
mov
push
sub
mov
andb
lahf
pop
xchg
jne
dec
mov
insl
repnz
mov
add
test
dec
jbe
mov
jno
or
outsl
xor
mov
dec
push
jmp
je
out
sbb
loopne
xchg
fwait
icebp
adc
push
or
xchg
xor
lods
mov
jnp
xchg
sub
cmp
mov
push
inc
sbb
fcompl
mov
out
aam
testb
dec
adc
stc
lods
mov
cmp
shrb
pop
pop
insb
nop
mov
int3
add
es
push
arpl
clc
movsl
lods
rcrl
adc
loopne
fbstp
jnp
mov
loopne
loope
sbb
adc
lea
jo
ds
pop
fidivs
jecxz
mov
dec
cld
xchg
sarl
aaa
int3
add
jg
aam
sub
mov
jne
inc
sbb
dec
mov
cwtl
mov
bound
dec
xchg
shll
inc
inc
cmpsb
enterw
sbbl
adc
ret
int
sbb
pop
loopne
hlt
cmp
add
test
cmp
sub
pop
dec
mov
out
sbb
jmp
test
mov
sbb
inc
scas
push
xor
data16
xchg
xlat
jl
cmc
jmp
xchg
xor
push
push
xor
mov
pop
lea
add
pop
dec
loope
jne
inc
shrb
pop
iret
fisubl
push
and
rorl
shl
push
into
fnstenv
cmp
sbb
outsb
pusha
mov
ffree
and
bound
mov
jbe
jo
mov
jne
aas
lods
mov
and
inc
jg
js
push
mull
sbb
cmpsb
xor
psubd
mov
mov
inc
cld
inc
into
xor
xlat
arpl
add
mov
lods
sub
and
fsubrl
inc
pop
push
insl
scas
xchg
xchg
jecxz
sbb
adc
js
xchg
sub
lds
lret
lret
xlat
aaa
out
mov
xor
sub
mov
and
sub
out
mov
mov
fidivs
pop
mov
xchg
lds
dec
xor
bnd
ret
or
int3
pop
repz
into
psrad
jnp
shll
in
scas
fnstenv
mov
out
mov
xchg
mov
jecxz
inc
stc
pop
pop
lcall
sti
or
xchg
jns
xchg
div
addr16
dec
or
cmp
shll
sbb
xchg
jle
xchg
sub
inc
mov
mov
aam
push
mov
int
and
and
imul
mov
sub
fst
cmc
push
test
arpl
push
stos
xchg
jmp
push
imul
insb
xlat
out
and
dec
jecxz
je
lods
jg
xchg
into
bound
loop
inc
push
lods
pop
outsb
jmp
shrl
rclb
sub
xor
dec
xchg
or
sbb
adc
mov
lods
es
aad
inc
retw
test
sub
dec
ss
add
lret
mov
sbb
shlb
mov
call
iret
sbb
imul
adc
in
lds
cwtl
mov
nop
dec
jecxz
js
lcall
and
pop
dec
ds
mov
in
mov
repnz
mov
insb
xchg
add
sbb
incb
jnp
pause
rolb
mov
sub
imul
mov
in
sbb
adc
mov
xor
cli
jo
jmp
out
jae
cmp
add
inc
loopne
sbb
je
jle
fisttpl
or
pushf
cli
inc
clc
jecxz
sbb
cmp
sbb
push
decb
jle
test
cltd
in
xchg
or
dec
mov
jo
mov
push
sbb
sbb
or
xor
add
xchg
mov
inc
sysexit
repnz
adc
imul
fidivrl
addl
jnp
dec
popa
add
movsl
out
mov
cmp
imul
cmc
mov
inc
or
ficoms
rorl
pop
mov
xchg
pop
out
push
mov
sahf
pop
xchg
int3
xor
jnp,pt
jmp
push
leave
test
daa
pop
negb
jmp
dec
push
push
nop
ret
xlat
stos
push
lea
mov
cmpsl
cmc
and
shlb
insl
or
insb
imulb
hlt
mov
cmp
out
dec
inc
xchg
or
sub
sarl
mov
push
movsl
rcrl
aad
sub
mov
pop
sbbl
pop
fsubr
xchg
leave
mov
push
push
push
or
lcall
mov
sbb
mov
scas
sbb
or
mov
aaa
insl
pop
push
add
repz
fldl
pop
sub
dec
aas
iret
add
or
repnz
jae
lret
bound
push
and
test
ss
das
sbb
dec
loopne
mov
test
les
adc
outsl
outsl
cmpsb
fs
xor
je
pop
imul
inc
sti
stos
mov
imul
or
xchg
and
add
adcb
mov
mov
pop
lcall
mov
lcall
inc
frstpm(287
mov
mov
stos
in
inc
loop
push
inc
cmpl
clc
movsl
les
iret
push
sbb
imul
mov
jge
mov
fstpl
lret
fistpll
fsubrs
add
ss
hlt
insl
lret
xlat
outsb
sbb
fidivl
push
sahf
and
rcr
jb
dec
imul
aam
shrl
push
out
pop
jno
imull
sub
stc
push
ds
ret
sub
jb
xchg
test
dec
sub
insl
mul
roll
ret
sarb
cmc
loopne
lods
pop
lahf
mov
incb
sbb
mov
add
mov
or
pop
rcl
cmp
push
pop
arpl
sub
xchg
pop
or
ds
sbb
jbe
or
or
ficoms
mov
inc
add
into
cmp
scas
sbb
fcoms
cs
sbb
pop
push
lret
inc
int
pushl
call
addr16
push
pop
sahf
jecxz
jb
add
es
shl
inc
push
mov
add
inc
bnd
add
shll
push
inc
dec
dec
push
dec
push
stos
push
xor
jecxz
jp
aas
mov
cmc
xchg
dec
insb
inc
pop
sahf
insb
loopne
pop
or
in
arpl
test
mov
call
jbe
sahf
clc
loop
mov
addr16
movsb
frstor
adc
enter
add
cmp
sbbl
dec
push
sub
testl
push
push
fdivs
sub
cmpb
mov
mov
loopne
sbb
ds
mov
pop
lods
fistpll
inc
lcall
sub
add
test
leave
push
xor
aad
or
mov
pop
xchg
rcrb
jno
inc
fdivrl
jmp
inc
rorl
lret
arpl
pop
testb
push
pop
addr16
inc
sbb
mov
into
into
test
push
int
insb
and
data16
sub
adc
mov
std
mov
mov
pop
mov
dec
lahf
xor
lcall
sub
jmp
pop
or
adc
js
stos
jle
and
xor
and
fistps
mov
push
and
loop
ret
mov
add
sbb
ret
cmp
push
idivb
adc
fwait
pushf
fldenv
iret
xor
shlb
xor
int
pop
cwtl
popf
mov
mov
mov
jbe
sti
mov
pop
std
inc
mov
insl
loopne
out
push
call
sbbl
jg
mov
and
arpl
std
or
test
data16
xchg
mov
mov
jl
negl
sbb
push
cmpsl
sub
adc
sub
inc
rclb
stc
add
addr16
cmp
ljmp
cmp
insl
lods
out
fstl
mov
addl
push
lods
cli
test
sbb
dec
inc
jmp
xchg
mov
mov
mov
xlat
ret
aad
fcmovnb
jecxz
mov
adc
cmp
or
in
sar
call
or
mov
mov
mov
ficompl
loop
jecxz
negb
js
stos
sub
incl
je
pop
gs
insl
xchg
je
lret
sbb
xchg
inc
pop
mov
jns
fsubl
dec
and
add
jge
aas
cmp
mov
inc
push
mov
cmpsb
mov
mov
jge
ficoms
adc
or
ljmp
mov
mov
or
ljmp
xor
es
inc
imul
lock
sti
mov
fbld
out
les
sbb
adc
mov
cmc
in
mov
cmp
and
push
mov
adc
sub
ja
int3
push
sbb
pusha
cmp
jecxz
mov
fiadds
xlat
ss
cli
push
push
lahf
push
or
stc
xchg
mov
adc
sub
testl
aad
sub
jp
pop
push
push
xchg
icebp
inc
lret
lret
inc
rcl
sub
pop
gs
sub
ficompl
dec
sti
aaa
shll
lods
ss
rcl
dec
jg
aam
insl
pop
xor
aaa
js
mov
fildl
add
mov
and
and
jmp
insb
push
jp
fcomps
and
jle
dec
add
mov
push
sub
stc
mov
adc
sbb
xchg
jne
xor
adc
xchg
inc
or
jle
arpl
and
mov
in
mov
adc
push
movsb
mov
sbb
sub
mov
inc
xorb
ja
insb
rorl
mov
in
subb
iret
mov
push
mov
fcmovu
mov
pop
das
jae
jne
push
and
imul
ss
mov
fsubr
xor
dec
lahf
push
adc
pop
sub
add
out
mov
sbb
mov
testb
test
pop
cmp
sbbl
pop
sub
clc
jae
hlt
xchg
test
adc
inc
lret
sbb
adc
es
ljmp
or
inc
daa
jle
cmp
sub
xchg
clc
std
fistpl
inc
dec
cld
add
loopne
mov
cmp
lahf
inc
pusha
sbb
das
inc
popf
mov
push
mov
subl
outsl
sub
loope
inc
movsb
sbb
pop
out
cmp
cmpsl
sub
xor
call
mov
jmp
inc
shll
push
mov
jne
pop
ror
dec
mov
sbbl
xchg
scas
push
pop
out
xchg
lcall
popa
loopne
push
push
dec
leave
repnz
and
aad
lahf
dec
les
fnstenv
cs
shrl
pop
mov
lods
sub
mov
jp
pop
int3
fmull
stos
pop
jmp
jmp
mov
outsb
adc
ficompl
xchg
lret
outsl
daa
data16
sbb
add
out
imul
add
dec
adc
and
scas
xor
dec
cmc
sbb
mov
dec
in
xor
loope
fcomps
cmp
cltd
ja
xlat
jae
into
movsb
cmp
adc
cmp
push
cmpsb
jp
adc
xor
ss
mov
xor
mov
jbe
loop
xor
loop
in
mov
lahf
negl
pusha
jge
jg
adc
rcll
cltd
test
or
cmp
ret
sbb
jnp
add
mov
push
leave
adc
pop
pop
add
in
jnp
cwtl
push
out
push
jnp
idivl
les
aas
dec
push
out
push
and
inc
cltd
jno
outsl
jo
lahf
lcall
or
adc
inc
in
out
xchg
cmp
mov
sbbl
and
cmp
cli
je
out
add
pop
pop
in
sahf
lahf
daa
in
xor
add
xchg
sbb
fdivrl
into
pop
in
push
mov
jne
rcrl
fisubs
shll
mov
mov
dec
bnd
stos
lock
xchg
testl
mov
out
adc
xor
shlb
addr16
call
mov
pusha
push
mov
and
mov
sbb
xor
xchg
mov
mov
mov
dec
scas
stos
and
dec
popa
jp
dec
fs
fwait
call
rcr
push
mov
rolb
sub
test
std
adc
das
insb
std
inc
pop
inc
xchg
inc
cmc
and
xchg
popf
int3
fdivrp
pop
add
sbb
inc
cld
ljmp
nop
jle
push
xchg
cmp
ss
lock
sarb
or
ret
inc
div
cmp
xor
jno
aas
movsl
and
mov
pop
sub
add
loope
dec
push
or
xor
icebp
and
mov
xchg
sbb
std
jge
jg
lret
inc
shrl
js
inc
pop
add
aaa
mov
inc
data16
aaa
scas
test
mov
aam
imul
out
sub
out
mov
jo
or
pop
cmp
insl
sarb
xor
xchg
bound
in
mov
sbb
and
rcll
jmp
cmp
mov
pop
and
sub
fdivl
insb
popf
rorb
shlb
add
cmpsl
lahf
sbb
int
shrb
push
sbb
dec
xor
out
jge
pop
jne
sub
jnp
decl
push
das
divl
xchg
hlt
roll
scas
push
mov
xchg
sarl
mul
mov
pop
push
inc
cmc
inc
dec
mov
cmpsb
sub
xchg
test
mov
call
mov
xchg
sbb
xor
cmpsl
pop
shl
xor
jg
adc
dec
sbb
sub
pop
mov
jne
out
jno
out
pusha
xchg
insl
jge
sbbl
xchg
ds
mov
aad
sub
mov
test
les
pop
repz
cmc
scas
xor
push
inc
mov
fnstsw
iret
dec
or
jmp
mov
fstpl
addr16
push
mov
into
mov
bound
bound
out
pop
fiadds
add
cmc
scas
jae
mov
adc
mov
lods
bound
fwait
stc
dec
pop
das
adc
dec
jnp
xor
push
mov
loopne
insw
shrb
daa
push
lcall
jbe
add
inc
les
pop
mov
test
rcrl
pop
data16
mov
sub
movsb
repnz
push
adc
pop
fwait
dec
inc
aam
xor
dec
jge
mov
push
popf
and
enter
outsl
cld
xchg
mov
inc
and
jae
cmp
mov
stos
dec
filds
cmpsl
data16
hlt
pop
loop
jae
jmp
pop
fistl
sbb
adc
subb
outsb
in
xchg
lock
insb
test
stos
mov
cmp
xor
shll
test
pop
js
mov
adc
xchg
sbb
pop
popa
loopne
bndstx
sbb
sub
add
mov
and
test
stos
pop
pop
lock
call
push
test
into
insb
in
pop
fs
leave
test
ja
cmp
dec
incb
adcb
dec
push
sti
daa
scas
adc
push
mull
cltd
mov
sbb
dec
test
cmc
out
aad
sub
shrb
imulb
push
mov
test
cmp
lret
xchg
push
or
xchg
jmp
pushf
add
pop
jns
lods
andb
in
nop
shl
repnz
jg
lods
pop
push
loop
fidivrs
push
adc
roll
arpl
jb
roll
ret
cltd
mov
mov
lcall
mov
data16
xchg
dec
xchg
push
push
rcrl
adc
inc
mov
cmp
cmpsl
orb
push
dec
lahf
and
jp
or
mov
aad
inc
and
scas
pop
cmp
push
inc
dec
pop
test
int3
and
jns
outsl
inc
ffree
and
ret
pop
xor
mov
mov
jge
xchg
shlb
loop
mov
add
les
jbe
pop
test
fisubrs
daa
xor
daa
sahf
lcall
and
mov
dec
and
jbe
or
stc
sub
hlt
inc
movl
mov
pop
dec
jae
and
cs
popa
stos
add
mov
push
mov
fdivrl
jg
repz
stos
xlat
pop
cltd
or
adcl
dec
mov
xor
fstpl
xchg
add
pop
hlt
cmp
mov
fbstp
xchg
divb
fnstenv
mov
add
cmpsl
mov
rcl
fwait
cmc
cmp
sahf
nop
addr16
adc
cmpsl
inc
jae
xchg
es
pop
cmp
xchg
pop
shrl
imul
mov
sub
outsb
add
jp
adc
int
movsb
cmp
cld
or
sub
mov
test
push
repnz
dec
das
jl
outsb
scas
jecxz
lret
call
loope
call
stos
aaa
inc
adc
xchg
push
jb
mov
xlat
in
push
mov
pop
incl
call
adc
mov
adc
ficoms
pop
jmp
sub
dec
cmpsb
xchg
fwait
pop
fcmovb
xchg
mov
shl
movb
cmp
or
lahf
sbb
cwtl
inc
popa
lret
mov
lods
sahf
and
sub
inc
push
ss
rcrl
sub
mov
aas
sub
icebp
adc
mov
ja
lods
inc
daa
sub
lahf
pop
es
pop
xchg
ret
mov
mov
sub
and
dec
or
or
data16
adc
jb
adc
pop
inc
and
add
xchg
push
mov
jo
mov
loopw
add
std
inc
push
and
push
cli
add
loopne
or
mov
add
loope
movsl
mov
inc
repz
sub
outsl
sbb
push
rcrb
xchg
mov
iret
xor
out
adc
jp
out
or
dec
xchg
mov
fisubrs
push
je
call
negl
jb
int3
scas
lret
jae
adc
adc
sbb
out
jecxz
mov
dec
cmp
fisubs
xchg
out
inc
dec
nop
stos
in
icebp
sub
jns
and
stos
imul
loopne
jecxz
mov
ficoms
xchg
into
gs
insl
fsubrl
push
in
push
or
push
enter
mov
pop
mov
ljmp
push
lock
mov
pop
cmp
loop
jae
and
loop
adc
out
fdiv
jae
mov
leave
aad
sbb
aam
mov
lahf
in
jge
adc
and
xor
mov
push
mov
dec
stos
push
jmp
sbb
dec
pop
mov
xchg
je
mov
andb
lcallw
cmpsb
loopne
and
loopne
faddl
pop
push
pop
mov
aad
js
or
sub
push
insb
fsubrl
je
sbb
add
idivl
jns
xor
mov
in
rol
dec
jmp
pop
hlt
in
xor
ror
outsb
fmuls
aas
push
inc
rcrb
out
repz
leave
fldenv
insb
popf
cli
sbb
sub
sysret
shll
jo
sub
xor
lahf
dec
inc
fdivrs
test
loope
push
int
iret
iret
inc
pushf
pop
cld
mov
add
repnz
outsl
push
jo
cmp
cmpsl
int
out
test
mov
jl
inc
fucomp
push
loop
fs
test
ret
js
cwtl
loop
pushl
add
inc
xor
call
mov
xchg
aaa
mov
push
xchg
or
les
add
popf
cmp
call
jns
pop
mov
ss
or
cmp
fs
add
jo
out
data16
mov
add
cmp
lods
ljmp
pushf
addb
fsubl
jle
mov
adc
int3
popf
jo
loop
clc
lcall
jne
dec
mov
gs
loopne
sarl
out
jnp
mov
xor
ja
xchg
pushf
mov
jecxz
adc
pop
push
les
mov
mov
gs
lock
cwtl
add
and
sbb
jge
leave
dec
push
mov
mov
jge
loop
loope
xchg
mov
jle
xchg
scas
out
xor
and
mov
add
pushf
pop
out
jp
inc
inc
fwait
outsb
add
sbb
andl
ja
jne
out
xor
mov
insl
cmc
dec
pop
xchg
lret
add
fists
jo
fdivr
add
push
mov
mov
ja
shll
jo
repz
fs
insb
ret
enter
cmp
into
push
arpl
adc
out
ret
in
adc
in
xor
sub
jmp
bound
bound
imul
aam
xchg
sub
cmp
popf
mov
pop
cmp
push
sub
movsl
mov
or
mov
jnp
sbb
sub
es
data16
cld
adc
xchg
pop
incl
pop
mov
cmc
lds
bound
mov
test
inc
pop
cltd
test
pop
or
movsl
icebp
mov
pop
fidivrl
fcmovnbe
into
test
ret
movsl
icebp
push
insl
pop
cltd
inc
pusha
iret
inc
imul
add
adc
out
fsubs
sbb
lock
jb
mov
xor
sub
mov
jns
sub
cli
mov
mov
mov
inc
or
cltd
dec
movsb
in
adc
arpl
nop
xor
insl
jnp
mov
mov
sub
mov
mov
push
push
je
inc
je
sub
mov
push
cli
shl
mov
cli
dec
in
inc
mov
add
adc
in
adc
andb
mov
mov
shrb
ljmp
adc
js
pop
clc
cltd
stos
sbb
out
sub
xchg
clc
movl
call
xchg
pushf
lods
jg
scas
rolb
sbb
sub
loop
call
in
pop
xlat
icebp
cmp
scas
sub
inc
iret
mov
and
mov
xchg
addl
jno
mov
push
pop
inc
push
fsubr
dec
and
jg
or
jl
divl
xor
xchg
bound
push
fadd
data16
test
mulb
xchg
dec
mov
fistl
std
repz
xchg
arpl
popa
xchg
jp
lcall
xor
sbb
pop
xorb
out
movsb
xchg
pop
movl
mov
push
xor
js
cs
xchg
push
nop
invd
inc
jg
jae
loope
stos
movsb
and
pop
int
cli
push
andb
fs
stos
test
dec
mov
fldenv
inc
push
fadd
adc
cmp
jecxz
adcb
or
adc
lcall
push
mov
addl
cmpsl
fnsave
cmp
fbstp
fxch
lock
or
mov
cmp
enter
bound
lret
fistps
in
cmpl
xor
and
sbbl
pushf
mov
push
popf
cld
das
or
lock
pop
stos
fistl
inc
call
xlat
mov
pop
hlt
movsb
sub
mov
arpl
lods
leave
xor
js
repz
test
mov
std
fnstcw
push
insl
test
and
rolb
movsl
imul
mov
dec
push
js
and
jle
xor
sub
xlat
pop
or
lret
cmc
out
dec
sbb
xchg
sub
mov
dec
arpl
scas
mull
les
ret
xor
push
hlt
aas
push
es
nop
test
incl
sbb
add
sahf
mov
jb
jno
dec
scas
jecxz
pop
movsl
sahf
cmp
out
jecxz
jns
lock
xlat
adc
sbb
in
aas
enter
sub
pop
clc
bound
lcall
sahf
out
jno
fildll
xchg
jne
std
sbb
mov
clc
jmp
inc
sbb
rorb
xor
and
lret
xor
pop
testb
rcll
mov
into
cli
mov
inc
xor
jne
clc
leave
fldcw
sub
test
in
mov
icebp
jg
mov
loopne
rep
inc
mov
sti
arpl
add
loope
pop
or
ja
mov
in
sub
ljmp
rorl
lahf
add
push
roll
stos
call
in
scas
xlat
ss
daa
cmp
mov
sub
out
fildll
in
fdivr
mov
mov
sbb
clc
or
aad
aad
fisubrs
loopne
enter
xor
mov
cwtl
pop
popf
iret
jmp
sub
push
aam
call
and
leave
jecxz
pop
aas
dec
push
mov
mov
xchg
fcoml
mov
arpl
push
daa
cli
or
sahf
pop
jbe
or
daa
fidivrl
in
or
push
pop
pusha
cli
outsl
pop
insl
add
nop
xorl
negb
arpl
mov
sarl
les
sbb
or
sbb
add
fwait
xor
push
jmp
inc
rorb
dec
xchg
mov
push
cmc
mov
or
daa
mov
dec
fistpll
xor
mov
aaa
into
mov
sbb
or
ja
movsl
push
dec
fs
mov
rol
cmpsl
pop
cltd
mov
arpl
sub
in
xchg
lds
pop
push
ljmp
pusha
and
adc
or
in
cmpsl
cmp
jg
js
sub
hlt
pop
dec
test
cltd
int3
sub
xor
cmp
add
adc
and
ficompl
sbb
pop
cltd
xor
lahf
popa
jmp
es
cld
outsl
inc
scas
mov
jae
mov
add
push
test
shrl
pusha
mov
popf
mov
fsubs
xchg
scas
or
lds
add
inc
shlb
xchg
mov
out
sbb
inc
pop
mov
fsubrp
mov
fsubl
stos
insb
cli
ds
loop
or
pop
jnp
jge
cmp
add
pop
loope
jno
mov
jno
test
vpsrld
xchg
imul
aam
sub
aam
adc
outsl
mov
dec
dec
in
cmpl
sbb
ja
pop
int
rcrl
sub
subb
mov
and
iret
push
jbe
pop
mov
insb
pop
mov
add
push
push
out
and
arpl
pop
outsb
inc
push
sub
ja
jecxz
xor
dec
scas
mov
pop
aas
fisubs
bound
sbb
rcrb
out
lods
jg
ljmp
nop
aam
repnz
xchg
mov
jns
popa
and
insb
mov
sub
adc
lret
dec
xor
insl
das
cmp
insb
ret
jno
mov
jmp
lret
jne
pop
pop
xor
mov
mov
mov
push
cmp
pusha
aaa
loop
aam
cmp
add
test
nop
scas
jne
das
call
jp
shl
popf
testb
push
pop
inc
lods
addr16
jno
add
fwait
adc
mov
and
fimuls
mov
pop
aad
cmp
pop
jb
jo
jo
cmpsl
cs
push
nop
pusha
add
inc
cmpsl
sub
iret
xchg
sbb
jb
jecxz
push
push
lods
inc
push
xlat
inc
and
popa
or
pop
and
out
cmp
dec
out
add
rorl
adc
xlat
imul
sub
loop
sub
ljmp
stos
in
fwait
mov
cltd
add
push
xor
adc
pop
xchg
outsl
jp
sub
sub
xchg
in
pop
mov
ljmp
add
adc
gs
pop
hlt
cmp
idivl
imul
push
inc
stos
test
mov
push
lret
xor
sub
jg
sub
mov
rcrl
pop
ss
pop
in
shrl
xchg
outsl
lds
shl
sub
ja
enter
lods
fisubrs
push
enter
xchg
mov
mov
or
js
jno
cmp
inc
aas
loop
cmp
add
sbb
lods
test
cmp
pop
dec
adc
je
add
push
jno
inc
lock
pop
pop
fisubrs
or
dec
pop
icebp
mov
push
push
jo
movd
lcall
popa
cmp
cmp
ja
ljmp
mov
fisubl
nop
sbb
add
or
aad
stos
sub
ss
mov
stc
xchg
test
lret
sbb
lock
jge
mov
mov
mov
dec
sbb
sti
xchg
lcall
in
jecxz
aaa
xchg
loop
dec
bound
add
call
test
pop
dec
add
or
aad
mov
scas
cmp
loop
push
dec
mov
clc
int3
inc
jb
das
mov
pop
push
push
mov
movl
xchg
stc
adc
movsl
pop
mov
dec
xchg
jge
dec
subb
mov
jb
sbb
insb
jle
adc
push
je
cli
sub
push
mov
xor
es
mov
mov
jmp
inc
mov
push
loope
stos
inc
fwait
sub
insl
mov
sub
jp
pushf
xor
mov
arpl
iret
ljmp
test
mov
push
mov
data16
daa
mov
mov
adc
clc
mov
push
jbe
pusha
push
inc
rcrb
jmp
xchg
dec
ss
cmpsb
call
mov
lahf
xor
imul
xchg
adcb
imul
or
xlat
push
nop
pushf
dec
push
mov
out
mov
orb
into
arpl
mov
shr
testl
inc
adc
in
jns
push
adc
jg
cs
dec
sub
iret
sbbl
mov
js
scas
lea
jae
out
and
xchg
mov
sub
mov
add
btr
lcall
rcll
xchg
scas
adc
mov
sbb
popl
es
xor
mov
pshufw
mov
add
sbb
xchg
popl
push
std
sub
and
ficomps
mov
das
mov
roll
jo
aaa
mov
lds
add
mov
sbb
jle
sub
mov
in
push
fdivrs
faddp
enter
push
sbb
pop
imul
sub
xchg
push
popl
adc
mov
jo
ljmp
xor
fisubl
fwait
xlat
icebp
int3
adc
sbb
sub
out
jecxz
arpl
rcr
pop
mov
adc
mov
dec
das
outsb
jno
and
sbb
lds
iret
movsl
scas
xchg
push
outsb
cwtl
jp
mov
shrl
into
out
test
idivl
lret
lock
cmp
ljmp
mov
test
leave
test
fsubr
insl
leave
pop
jae
xchg
pop
daa
push
fbld
dec
mov
das
cs
cmp
pop
divb
js
scas
cs
pop
or
dec
inc
aaa
into
or
das
push
jne
icebp
int
pop
test
cmp
out
cmp
mov
inc
ret
lahf
leave
dec
scas
movl
shl
mov
arpl
pop
xchg
push
mov
nop
cmp
push
push
imul
mov
les
std
es
push
test
into
dec
shr
iret
loopne
ficomps
ret
fists
cs
sbb
dec
lock
add
roll
and
sub
movsl
push
jecxz
push
adc
stc
cmpsb
mov
or
outsl
loopne
mov
insb
or
jecxz
scas
roll
insb
rolb
and
mov
aad
fbld
add
fcmovu
ja
test
iret
cmp
fisubrl
shlb
clc
jge
sbb
in
cmp
jae
pop
jmp
scas
out
jmp
xchg
lea
push
cmp
mov
jo
push
frstor
mov
fdivs
es
punpckhdq
pop
mov
insb
push
sub
push
addl
or
testb
jge
inc
loope
stos
inc
push
add
sub
push
mov
loop
jmp
lds
push
rolb
fldl
hlt
neg
mov
vmulps
push
data16
inc
loop
outsb
rcr
mov
lock
mov
add
icebp
push
cli
xor
add
inc
jp
lret
cmpsb
mov
sbbb
dec
sub
popf
dec
xchg
pop
sbb
add
int3
pop
das
shr
push
imul
add
lds
sbbb
aas
int3
rcrb
adc
shr
ret
sub
lock
fsubs
and
push
push
pop
stos
xor
add
xchg
jb
jle
setb
mov
cmc
xchg
and
mov
cmova
je
imul
push
and
mov
push
aam
cmp
sahf
mov
sarl
fcomps
adc
out
decb
jg
lea
cltd
cli
daa
mov
mov
add
jp
xchg
pop
jno
adc
imul
movsl
cltd
push
or
lds
mov
cmp
sbb
jne
jmp
and
inc
int
xchg
js
add
and
testl
mov
fs
adc
ja
jle
nop
fwait
sub
das
cmp
and
mov
in
jl
inc
cmc
adc
inc
xchg
lret
and
loop
popa
cli
mov
rep
cmc
adc
rcrl
es
lea
movsl
lods
pusha
xchg
mov
cli
cs
movsl
sarb
mov
sub
je
daa
stos
int
jb
sbb
jns
fstps
mov
fdivl
sub
mov
inc
inc
pop
cmp
jb
loope
xor
push
xchg
inc
jl
test
adcb
lods
xorb
out
xchg
repz
scas
es
and
mov
js
inc
and
int3
addl
stc
adc
loop
xor
xchg
cs
subl
xchg
fs
mov
sbb
lea
ficoml
xchg
sbb
pop
repnz
stos
xor
loop
iret
mov
cld
sbb
sbb
cmp
stos
int3
pop
jg
xchg
js
or
enter
aaa
push
outsb
fcoms
int3
lds
adcb
mov
xchg
mov
je
loope
mov
fbld
mov
stc
sarb
cmp
fdiv
sarb
testb
lods
mov
sub
or
sbbb
jno
repnz
jns
pop
cmp
rcl
leave
adc
add
in
jnp
gs
lea
pop
cmpsb
mov
push
cmp
mov
rcpps
les
aam
or
xlat
aaa
ficoms
mov
jmp
cs
inc
in
mov
dec
jo
pop
js
sbb
testl
fs
add
push
sub
add
jge
adc
xchg
pop
in
fwait
cmpsl
sub
xchg
scas
inc
inc
in
scas
subl
stos
iret
test
mov
mov
call
loopne
jae
pop
movsl
test
mov
mov
sub
shr
xor
xor
loope
fistps
mov
push
sbb
cmpb
sbb
jne
stc
cmpsb
mov
cltd
pusha
cs
pop
testb
jle
daa
or
inc
jp
and
mov
push
cld
or
jbe
or
ret
push
lds
ss
pop
repnz
cmp
jns
aaa
adc
mov
ljmp
mov
push
ljmp
out
mov
test
rolb
mov
mov
dec
pop
inc
lea
out
xchg
rcrb
add
rcrb
jno
jge
pop
mov
subb
mov
xchg
and
pop
cmp
decl
xor
aas
mov
push
out
icebp
or
push
in
addl
add
mov
popf
cli
push
ror
nop
movq
inc
sbb
mov
aad
adc
sbb
or
scas
inc
xchg
sub
add
mov
pop
in
inc
inc
fwait
pusha
loope
sbb
mov
aam
add
or
mov
idivb
mov
ret
cmpsl
mov
scas
cli
dec
pop
lahf
jecxz
xchg
cmp
jp
adc
push
push
orl
mov
out
or
mov
lahf
cmc
add
jge
push
popa
cmp
test
sarl
test
add
arpl
dec
popf
and
mov
ret
in
push
jbe
clc
dec
add
add
or
or
inc
inc
lea
scas
inc
mov
nop
outsl
imul
mov
dec
insb
and
mov
shll
mov
push
jno
dec
movsb
aad
imull
shl
rcrb
xlat
sub
mov
test
cmp
icebp
movl
xchg
dec
test
xchg
adc
sub
mov
out
jns
xchg
jno
movb
xor
in
sbb
inc
mov
dec
pop
lods
jns
or
int
popf
sahf
daa
in
xchg
mov
das
mov
aam
les
cmp
or
add
rorb
push
pop
inc
aaa
into
iret
adc
pop
outsb
push
fiaddl
pop
mov
jb
and
sub
aas
aaa
hlt
cli
sbb
inc
popa
rclb
repnz
shr
and
and
aaa
inc
cs
mov
or
lret
xor
adc
sub
lds
or
je
and
aaa
mov
add
xchg
incl
pop
mov
xchg
aam
push
icebp
insb
dec
shrb
js
nop
daa
cli
lcall
xchg
fisttpl
mov
stc
loope
sbb
scas
push
sub
pop
pop
icebp
dec
fidivs
push
mov
js
sbb
js
pop
jmp
cmpsl
lea
sub
mov
mov
add
pop
les
push
ss
addr16
fldcw
xchg
ret
jae
out
andb
cli
xchg
cs
aad
inc
push
out
xor
cmc
in
bound
xchg
popa
in
jbe
jle
xchg
adc
mov
int
fs
mov
ffree
fidivl
movsl
lds
cmp
push
mov
clc
fnstcw
fs
das
or
push
inc
pop
inc
adc
sub
cmp
sub
push
push
in
addl
sti
in
stos
inc
sbb
addr16
mov
leave
xlat
in
mov
dec
mov
fwait
push
mov
lret
add
dec
pop
inc
pop
xchg
lds
dec
aad
rolb
jbe
xchg
fbld
inc
push
xor
hlt
sub
and
bound
and
pop
and
xchg
sub
pop
push
dec
pushf
aad
jno
jns
aas
pusha
popf
jp
outsb
mov
not
data16
adc
out
gs
or
and
mov
pop
sti
pop
jg
mov
adc
jp
daa
jo
mov
test
sahf
data16
in
xchg
or
popf
and
sbb
ljmp
fisubrl
add
mov
and
fcomps
sahf
adc
mov
mov
cmc
mov
rcl
ret
jl
gs
sbb
lods
fistpl
rcl
jg
lock
dec
cmpsb
mov
loop
mov
fdivrl
xorl
int3
add
cmpsl
cld
dec
pop
js
stc
pop
mov
push
repz
int3
cmpsb
fbld
lock
cwtl
sbbl
add
fs
xchg
sbb
testb
mov
ret
mov
dec
xlat
mov
jno
xor
jb
inc
data16
es
cmpb
cmp
fisubrl
rep
data16
out
xor
imul
es
mov
adc
sbb
sarl
addr16
push
and
and
fcompl
pop
out
sub
xor
aad
add
fmulp
and
push
in
stc
inc
pop
popf
test
lret
and
or
xorb
jge
mov
or
ljmp
test
add
adc
testb
push
adc
lret
mov
cmp
sbb
stc
rcl
sti
sbb
gs
lods
mov
imul
popa
sbb
xor
fdivp
dec
addl
pop
cmpsb
cmp
sarl
cmp
and
mov
mov
fsincos
test
mov
xlat
mov
jnp,pt
add
rorb
push
sbb
pop
inc
pushf
test
cmp
mov
add
test
lret
js
sub
dec
mov
inc
mov
mov
jecxz
iret
cmp
loope
pop
aam
or
aas
aad
cwtl
sti
jbe
cmp
outsb
jne
mov
das
or
test
js
cmpsb
or
jp
ja
mov
iret
mov
out
cvtps2pi
mov
rcrl
or
loopne
lods
inc
popl
or
lret
lcall
gs
int3
arpl
sbbb
adc
ret
pop
xor
and
and
push
aad
jnp
aaa
neg
call
mov
clc
bound
cmp
test
mov
xor
fadds
leave
dec
jp
jmp
xchg
in
ljmp
pushf
loope
xchg
pusha
push
add
add
sbb
push
mov
imul
sti
fcomi
mov
lods
stos
lret
push
mov
xor
inc
xchg
idivl
and
cld
shr
sub
xor
dec
stos
jmp
xchg
and
fsubrp
fs
mov
lahf
jge
int3
outsl
cwtl
test
and
push
push
mov
nop
daa
add
dec
movsl
push
xor
nop
daa
stc
decb
sub
xchg
pop
arpl
sbb
sbb
pop
ds
xchg
cwtl
loop
cmc
pushf
mov
xor
addr16
aad
add
and
inc
outsl
fcomps
mov
adc
inc
loopne
mov
push
mov
repnz
dec
adc
jg
repnz
adc
hlt
jo
in
adc
xchg
mov
test
sub
lea
and
dec
stos
cs
stos
nop
std
dec
lock
icebp
lret
dec
loop
push
jp
mov
pop
xchg
push
and
ds
imul
adc
pop
mov
js
adc
inc
pop
sbb
push
outsl
cwtl
push
mov
push
jb
pop
sbb
daa
xor
orb
sarb
jne
loope
mov
push
adcb
das
cmp
sarl
aaa
outsb
hlt
mov
sahf
ret
jns
jp
and
nop
push
pop
movsb
shlb
sub
loop
imul
lret
mov
inc
out
inc
mov
mov
sub
out
jo
pop
inc
rcrb
mov
jecxz
arpl
cmp
rolb
dec
arpl
push
repnz
dec
ja
pop
ljmp
or
hlt
push
jmp
mov
jb
and
jge
jecxz
aaa
dec
loop
testb
sub
scas
lds
testb
dec
adc
pop
stos
shl
outsl
jne
cmp
cmp
pop
outsl
dec
xor
dec
jecxz
hlt
daa
xchg
sub
push
cmp
call
mov
pop
mov
add
adc
lcall
lcall
lret
rclb
pop
mov
movsl
inc
fs
lea
jp
mov
mov
fistl
aaa
fwait
jb
adc
push
popa
adc
sbb
in
popf
ds
pop
or
cli
pushf
xor
fs
aas
inc
fldcw
add
imull
sub
pushf
add
cmpsb
jbe
mov
push
push
jae
pop
mov
mov
adc
cwtl
and
xchg
mov
xor
mov
aam
lods
mov
imul
add
leave
xchg
je
fwait
and
int3
lahf
xor
clc
xchg
dec
jl
sbb
lahf
jmp
fucomi
mov
movsb
bnd
outsb
pop
hlt
pop
rorb
adc
push
jbe
cli
mov
popa
or
fcoml
pop
mov
sub
leave
inc
nop
fnstenv
test
jns
pusha
js
dec
mov
cmpsb
jge
sub
into
sti
inc
test
lock
push
fiadds
mov
mov
sub
or
xchg
jb
fists
or
popa
push
loop
popf
stos
lods
add
xchg
mov
mov
adc
sbb
add
jns
ljmp
fmulp
mov
sbb
add
sti
add
jge
shll
outsb
movsl
stos
inc
sub
cwtl
push
jp
enter
into
test
into
ss
and
in
pop
push
mov
xchg
fildll
ds
sub
add
test
pop
lret
movl
lods
adc
popa
lods
push
inc
pop
imul
mov
js
jg
cmc
pop
popa
enter
pop
pusha
imulb
shl
mov
popf
xor
fldcw
in
fidivrl
ret
loop
mov
push
test
fnsave
aam
out
push
lods
xchg
test
or
inc
add
mov
add
cmpsb
les
insl
mov
jle
cmp
shrl
xchg
jnp
or
and
xchg
ja
das
test
push
sub
sub
jle
lahf
movl
xor
insl
and
cmp
imul
cmc
xchg
psrad
jo
add
dec
ret
shrl
movsb
push
push
lea
adc
scas
and
xorb
arpl
mov
lret
stc
cmpsb
xlat
or
pop
imul
lock
mov
mov
push
jmp
movsb
jecxz
mov
pop
in
or
fildl
pop
loopne
mov
add
bound
sbb
mov
ds
jo
subb
push
loopne
out
push
sub
cmp
pop
cwtl
xor
push
and
pop
inc
pushf
ss
and
adc
dec
shl
daa
pop
dec
pop
popa
pop
adc
mov
daa
jno
or
stc
gs
ret
mov
sbbb
and
cmpsb
flds
enter
out
mov
arpl
fidivl
rcll
pop
and
push
xchg
adc
pop
hlt
cmpsl
inc
adc
pop
adc
jne
jmp
push
inc
fisttpl
daa
inc
or
adc
mov
pop
inc
lds
ds
sbb
inc
lds
stos
jp
movsl
pop
loop
shl
in
pop
push
cld
xchg
cmp
insb
es
or
push
jecxz
mov
mov
jb
adc
ss
dec
movsb
aam
call
lods
roll
add
insl
lahf
ss
cmp
movsl
loope
mov
mov
sarb
adc
xchg
or
sbb
notl
fs
ljmp
xor
lds
pop
rcrb
adc
push
xchg
in
rcll
lret
in
scas
jnp
adc
imul
sub
mov
pop
mov
sbb
les
aaa
cmp
insb
rcll
js
push
dec
inc
ret
inc
fstpl
adc
pop
addb
push
out
hlt
mov
fnstcw
filds
fildll
out
pop
mov
insb
rorb
out
push
test
lds
jae
lret
dec
scas
in
les
sub
or
jmp
stc
add
pcmpeqd
addl
es
lods
mov
test
cwtl
inc
adc
push
fsub
or
mov
mov
jne
sbb
lgs
cmpsl
cmpsb
test
adc
pop
repz
jp
in
lea
insl
enter
xor
sbb
mov
mov
int3
sbb
lret
xor
ret
cmp
mov
or
inc
lcall
mov
dec
in
gs
sti
ljmp
jb
aaa
inc
or
jb
inc
fxch
or
mov
pusha
in
stc
int
xchg
mov
cmp
xor
fsubr
cmp
cmpsl
bt
in
xor
lds
or
dec
adc
inc
jo
mull
inc
ljmp
add
popf
je
xor
pop
mov
push
out
rclb
adc
repnz
lret
cmp
pop
xchg
sub
pop
mov
notl
mov
xor
imul
xchg
hlt
sbb
push
jno
js
lret
xchg
xchg
sub
out
mov
cld
cmpsl
sub
push
mov
xor
frstor
inc
add
loopne
push
cltd
cmpsl
scas
cltd
inc
popa
jecxz
adcb
dec
mov
fildl
inc
cmp
xchg
inc
cmp
bound
push
sbb
repnz
mov
ss
sbbl
mov
addr16
fcoms
call
outsl
ljmp
xor
mov
dec
mov
loope
mov
rol
in
scas
jno
add
jp
add
add
mov
mul
mov
adc
fmul
rcrl
fmuls
rclb
cmp
scas
pop
pop
hlt
dec
mov
pop
stc
outsl
jnp
adc
bound
jnp
shl
test
pop
cs
movntq
or
sub
mov
mov
xchg
fidivl
cld
faddl
push
clc
and
cld
aam
push
mov
xchg
sbb
push
sahf
ss
aas
movsl
cld
jmp
mov
test
adc
in
cli
lret
xor
les
mov
and
xor
ds
lock
popa
clc
fwait
cmc
dec
pop
mov
sbb
xor
leave
pop
pop
adc
dec
stos
inc
insl
popl
es
insl
pop
out
xchg
repz
mov
lea
test
sbb
xor
idiv
sub
push
je
test
addr16
jbe
fsts
xchg
repz
out
push
mov
in
add
les
scas
cmc
or
inc
ss
push
sbb
mov
or
iret
xchg
cs
add
les
push
orb
shrl
cs
or
call
or
das
testl
pop
mov
cmp
dec
repz
dec
std
xchg
test
insl
ret
lock
bound
loop
xchg
mov
test
mov
jne
sub
jo
cmp
and
sub
jmp
ret
mov
dec
and
push
or
mov
cmp
inc
mov
push
jp
subb
xor
test
or
cmp
pop
icebp
mov
loope
add
sbb
add
lcall
xor
jno
xor
fbstp
ficoms
enter
adc
clc
xor
nop
xor
ljmp
loope
jl
dec
int
movsl
mov
and
loopew
cmp
xstore-rng
cmpsl
roll
aaa
cmp
aam
lahf
pop
mov
mov
lret
aad
int3
cmpb
sub
dec
popa
movsb
fwait
fs
sbb
jns
test
mov
adc
sub
inc
cwtl
jb
mov
dec
ja
lret
ror
mov
adc
cmpsl
es
jge
inc
popaw
mov
mov
scas
cmc
inc
inc
daa
adc
mov
pop
repz
cmp
pushl
cmp
sbb
add
lods
sbb
mov
sbb
or
mov
push
inc
pushf
xor
jmp
sbb
jns
lret
xchg
popa
mov
lds
aam
xchg
mov
fcomi
mov
in
sub
jno
scas
pop
xor
daa
in
add
and
data16
shlb
sub
sbbl
mov
mov
xor
fwait
std
push
popa
sbb
xchg
adcb
scas
sbb
jo
cld
mov
sub
popf
or
gs
mov
ret
mov
jmp
outsb
sub
insl
popa
and
adc
pop
shrl
xchg
pop
ljmp
fs
lcall
cmp
jmp
scas
call
shll
mov
pop
insl
dec
cmc
mov
cmp
sbb
adc
cli
sub
and
add
call
xor
or
in
ja
push
push
inc
push
sub
and
fwait
adcb
mov
xor
ljmp
ljmp
test
cld
sbb
dec
or
push
loop
aad
ffreep
adc
inc
xor
dec
xchg
mov
test
fisubl
lds
cmp
push
cmp
popf
and
int
jbe
les
mov
cld
mov
inc
inc
add
addr16
xchg
xlat
sbb
cmc
sbb
pop
xchg
push
fildll
iret
data16
cld
cmpsl
push
pushf
mov
mov
dec
jecxz
xor
lret
jae
push
cwtl
push
cmc
or
hlt
lods
push
jo
mov
mov
lea
ficomps
pop
mov
iret
dec
sub
cmc
mov
imul
loope
add
scas
rcrl
ljmp
jne
fs
lea
popa
jmp
insb
xchg
scas
mulb
jb
mov
hlt
jl
mov
ret
shl
push
insb
roll
sbb
xor
pop
loop
into
sbb
rorl
aad
xor
jle
shrb
pop
xor
mov
ret
ret
sub
mov
pop
jle
mov
popf
push
mov
push
stos
inc
leave
pushf
mov
test
iret
mov
mov
sti
jo
xlat
jnp
sbb
mov
stc
inc
pop
sub
jp
imul
out
cmp
repz
jae
inc
loop
adcl
cs
mov
enter
inc
sbb
pop
xchg
jecxz
dec
leave
mov
mov
and
xor
std
and
pop
sets
int
sbbb
adc
jae
pusha
cwtl
loop
inc
adc
cld
iret
stos
lea
inc
dec
push
sbb
dec
or
int3
xor
jmp
inc
xlat
jo
movsb
cli
lahf
xchg
pop
mov
roll
pop
jb
outsb
push
cmp
in
sahf
add
and
fists
sbb
adc
xchg
sub
les
adc
dec
dec
pop
dec
jb
sti
push
mov
dec
ds
test
pop
iret
data16
cmp
cwtl
lcall
leave
mov
shll
mov
jp
outsb
pop
aas
dec
addl
inc
fnstcw
rorb
movsl
je
sub
mov
pop
dec
or
mov
loope
out
test
jbe
subb
mov
fidivl
sbb
or
dec
sbb
mov
jecxz
mov
xchg
arpl
sub
and
imul
cld
lret
lcallw
dec
pop
inc
pop
loope,pt
pushf
fbstp
lea
cmpsb
jge
les
stc
sahf
sub
xchg
sbb
mov
push
inc
scas
jno
cli
xchg
clc
aam
and
sbb
pop
dec
cmp
inc
jecxz
out
xchg
add
movsl
push
push
mov
pop
stos
mov
ljmp
cmp
mov
or
pop
and
loop
adc
mov
cli
inc
pop
sar
push
enter
aas
push
mov
lea
jl
jns
test
dec
and
push
out
sahf
mov
pop
cmc
sub
and
sub
out
scas
pop
add
jns
fmulp
andl
mov
jge
mov
push
sbb
stc
inc
dec
adc
push
fwait
call
into
sbb
dec
lahf
adc
and
push
stc
leave
dec
lods
jne
inc
cmpsl
leave
out
cmpsl
xor
mov
fnstcw
ret
daa
pusha
push
mov
insb
or
pusha
lea
shlb
call
lea
add
jge
inc
ret
push
adc
xlat
imul
fsubrl
pushf
lea
insl
pop
jne
popa
and
arpl
int3
pop
inc
ja
pop
pop
add
cmp
mov
aad
fidivrl
and
lcall
imul
sbb
xor
mov
popl
decb
adc
in
cltd
mov
sub
scas
pop
out
pop
sahf
sti
aas
lods
cmp
movsb
cmp
aas
dec
loope
ret
sub
jge
xchg
repnz
jne
mov
add
and
pop
mov
lods
in
mov
mov
lods
ja
inc
pop
lret
mov
daa
fists
xchg
or
pop
jno
add
jle
pop
xor
sub
leave
pusha
das
add
out
xchg
jne
ss
movsl
cmp
mov
insl
jge
aad
cmp
pop
outsl
jnp
lret
aam
adc
inc
pushf
femms
sub
stos
inc
push
pusha
mull
and
aam
xor
pop
sub
inc
bound
mov
dec
sti
movsl
loope
mov
lret
ljmp
hlt
std
sub
xor
sbb
xchg
out
xchg
add
or
xchg
out
push
lcall
or
pop
adc
insl
std
sub
rcll
enter
push
aaa
sub
je
xchg
push
out
repz
sbb
outsb
movsl
cmp
imul
sbb
rcrl
and
push
cmp
fnstenv
mov
andb
jno
xchg
out
push
lcall
push
mov
xchg
dec
inc
fdivrs
mov
jae
popf
fidivrs
dec
stos
nop
push
xchg
mov
cmp
ss
pop
push
push
sahf
xchg
loopne
das
mov
loope
mov
sbb
mov
mov
mov
jo
or
sbb
xchg
or
into
mov
into
and
in
xchg
repz
mov
popa
ss
lcall
jp
pop
xor
mov
stc
je
push
sub
insl
sarb
lea
adc
adc
mov
mov
cld
repnz
cmp
cli
push
in
sbb
je
jbe
aad
loopne
movsb
pop
in
outsb
loope
stos
mov
jge
fisubrs
mov
jno
cmp
add
and
test
js
cs
fldenv
push
dec
sbb
inc
jecxz
pop
and
mov
mov
cs
push
hlt
fidivrs
mov
ret
xlat
imul
lods
inc
jnp
fsts
mov
mov
cltd
in
mov
sbb
gs
dec
popf
inc
test
daa
cmp
bound
mov
lret
shll
nopl
sbb
inc
mov
jbe
mov
dec
jle
bound
jle
test
mov
lock
int3
into
gs
jle
aam
xchg
in
imul
push
fists
imul
ffreep
push
into
and
xchg
fimuls
and
or
pop
pop
fiaddl
cmp
loop
bound
jge
shlb
adc
push
stc
pop
mov
cmp
mov
dec
les
cs
js
cltd
int
std
fdivrl
adc
test
sbb
xchg
add
and
dec
aas
mov
int
insb
adc
stos
adc
stos
sbb
mov
daa
call
inc
out
mov
sub
xor
inc
xchg
ret
jo
jbe
adc
xor
les
jo
sbb
ja
repz
dec
push
in
jl
aad
std
push
in
test
add
ficomps
and
clc
or
iret
cmpsb
xor
add
mov
aad
inc
pop
addr16
iret
rorb
loop
movsl
push
inc
es
lcall
pop
dec
in
mov
inc
xor
aas
cmc
mov
sbb
adc
xor
das
pcmpeqb
in
into
pop
xchg
or
lret
cmp
mov
jo
jnp
pop
mov
shrl
js
and
sub
pop
jecxz
and
dec
adc
into
xchg
jl
lcall
lret
das
loop
sbb
sub
lock
pop
push
inc
push
sub
or
jge
mov
mov
pop
fidivs
lods
das
add
or
data16
xor
inc
arpl
xlat
xorb
pop
stos
jmp
xchg
ret
sub
push
push
cmp
js
jae
es
pushl
mov
mov
sbb
jb
pop
pop
inc
arpl
inc
fstps
call
out
aad
push
mov
xor
mov
dec
pop
cs
or
daa
fstps
and
jo
xchg
mov
mov
roll
into
or
mov
adc
movsl
sub
dec
push
or
stc
xchg
rorb
xor
mov
pop
sbb
ss
mov
inc
and
call
sbb
in
stos
dec
mov
cld
sub
aas
pop
add
mov
lods
pop
or
mov
loope
jno
vcvtss2sd
pop
ljmp
out
jl
push
scas
adc
lahf
sub
cmpsb
cmp
sbb
dec
in
shrl
sub
lock
out
cmp
rcll
ljmp
mov
xor
out
xorl
sub
jle
int
sub
add
add
stos
dec
dec
xchg
cld
je
push
popf
or
push
xlat
cmp
test
mov
or
xchg
and
xchg
cmp
inc
mov
std
divl
rolb
xor
aaa
icebp
das
test
mov
lock
aas
xchg
push
lods
dec
pusha
repnz
pop
jecxz
push
dec
xor
xchg
push
add
das
ss
pusha
pop
mov
fadd
in
mov
ffree
xor
inc
pop
add
jo
clc
sbb
sub
mov
insb
nop
shl
int
int
icebp
add
or
jecxz
jbe
adc
push
sahf
xor
jmp
xchg
xor
out
xchg
popa
mov
xchg
dec
adc
inc
test
mov
stos
cmp
into
movsb
xchg
test
sbb
add
adc
sbb
aaa
dec
pop
pop
addr16
ljmp
inc
push
inc
xor
jae
mov
jg
dec
fwait
xchg
out
je
pop
mov
scas
xchg
sub
ds
dec
cmpsb
push
cs
stos
sbb
cmp
sbb
ret
pop
mov
pop
loopne
push
sub
jbe
cmp
xchg
jmp
test
or
sarb
xchg
jge
stc
push
sub
les
rcl
push
xchg
mov
int
repz
imul
jne
push
mov
cmpb
lahf
rcrl
outsb
jae
mov
rclb
shl
dec
in
mov
mov
cmpsb
or
fcoms
shrb
hlt
fcmovb
mov
or
mov
cmp
push
and
adcl
lret
bnd
test
mov
mov
mov
inc
pop
and
and
cmc
fiadds
sbb
push
bound
repz
jl
or
mov
or
in
lods
inc
cwtl
mov
stos
jbe
jge
or
cltd
ret
jns
dec
or
popa
in
push
in
xchg
enter
aam
adc
dec
jb
adc
in
addr16
adc
orb
fsubrl
lret
cltd
sub
adc
cmp
pop
add
test
lret
fisubl
iret
popa
clc
decl
clc
lods
adc
shrb
aaa
mov
ja
popa
test
sti
pushf
adc
dec
sbb
pushf
dec
lods
mov
out
mov
sub
mov
shll
push
adc
fadds
dec
cli
mov
js
mov
es
cmp
sub
test
or
sub
pop
out
dec
or
add
std
xor
fisubrs
pop
adc
out
xchg
lods
sbb
jbe
xchg
mov
xchg
mov
push
addr16
xlat
inc
mov
nop
mov
outsb
lret
pop
adc
ss
mov
sub
mov
fidivl
test
out
push
mov
push
mov
hlt
mov
outsl
and
cli
nop
aam
rcrl
hlt
jge
scas
call
popf
sbb
mov
nop
dec
fldl
xor
mov
dec
add
mov
in
scas
jae
or
and
stc
push
stos
mov
andb
push
cld
into
outsl
mov
push
in
shll
inc
jbe
out
jae
push
push
out
or
mov
or
xorb
adc
sbb
jo
movsl
cmpsl
pushf
in
sub
inc
mov
inc
fbstp
dec
arpl
leave
push
push
mov
pop
int3
shll
test
bound
repnz
sbb
jmp
mov
movsb
movsl
cmp
lods
pop
xchg
mov
into
xchg
sub
dec
cmpsl
mov
xchg
in
stc
mov
fwait
jp
test
rcrl
inc
push
adc
into
pop
lret
je
dec
or
cmp
nop
jg
fidivrl
dec
iret
movb
ja
das
mov
pop
push
outsb
addr16
test
mov
in
add
dec
notb
cmp
negb
je
add
and
aas
pop
daa
out
loopne
mov
scas
lock
sbb
jg
jl
add
dec
cmp
and
sbb
scas
jmp
dec
ljmp
fdivrl
jbe
dec
jl
test
je
xor
sbb
scas
push
mov
imul
movsb
fildll
push
fdivs
add
mov
mov
pop
mov
add
shrb
in
add
inc
scas
inc
push
jge
fstp
fadds
negb
push
jbe
mov
rol
loope
sbb
xor
xchg
ret
les
scas
lods
and
push
shlb
arpl
mov
ficoms
int3
jmp
hlt
xor
adcb
jne
cmpsb
ret
dec
js,pt
push
andb
repnz
mov
cltd
mov
cmp
mov
inc
sarl
and
add
mov
and
sbb
mov
or
popa
out
pop
imul
mov
mov
mov
xchg
push
push
clc
mov
xchg
inc
push
nop
or
jno
fs
in
repz
jmp
adc
ret
xor
mov
dec
jne
in
push
in
mov
push
addb
dec
out
sarb
pusha
scas
hlt
ja
xor
xchg
xchg
and
sub
dec
pop
js
popf
jb
mov
xchg
push
adc
mov
xor
dec
xor
push
adc
adc
test
mov
or
push
dec
pop
pusha
mov
sbb
adc
int
and
test
push
or
cmp
mov
ret
mov
push
test
jl
mov
inc
inc
jbe
xchg
cmp
dec
lret
fldenv
adc
pop
negb
pop
loopne
repz
xor
nop
add
adc
mov
lds
test
and
mov
pop
repnz
sub
mov
cwtl
xchg
inc
push
rcr
ss
jmp
in
inc
cmp
and
pop
fs
hlt
xlat
jns
fisubs
movsb
jnp
pop
xchg
push
ljmp
popf
mov
pop
adc
mov
int
lds
lahf
pop
xchg
add
pop
out
repz
and
inc
test
std
pop
jb
data16
insb
jle
lods
xlat
js
shr
xor
dec
daa
mov
push
fadds
inc
bound
aaa
jno
inc
fst
cmc
add
xchg
mov
mov
or
cmp
enter
movsb
ret
sahf
and
mov
std
and
imul
pushf
fnstsw
and
jp
bound
pushf
cmp
rep
inc
fcmovu
push
sub
sbb
loopne
sahf
push
sbb
add
int3
xchg
mov
mov
dec
loop
adc
in
and
mov
out
jmp
psllw
out
jae
sbb
aaa
into
je
test
xchg
push
xlat
fwait
or
xchg
jp
outsb
jp
fistps
arpl
outsl
xchg
push
and
pop
test
test
inc
bound
push
stos
push
push
mov
push
in
sahf
and
mov
push
popa
push
fwait
xor
lods
cli
call
enter
or
push
repnz
cmc
xor
or
sbb
je
cmp
shrb
mov
out
xchg
push
xlat
mov
sbb
mov
adc
cmp
test
aad
push
dec
inc
push
cli
orb
test
sbb
pop
mov
shl
stos
cli
add
sub
sub
fs
inc
xchg
test
in
sub
jp
and
inc
fistps
fmuls
pop
outsb
push
sbb
pop
xor
mov
das
ja
mov
jp
or
jne
add
pop
andb
fwait
add
and
cmpsl
and
and
cmp
test
and
into
dec
inc
mov
int3
mov
ret
or
xor
mov
out
jnp
ja
aas
dec
stos
sbb
sarb
inc
insb
ret
imul
mov
insb
movsb
cmp
rorl
andb
ja
negl
xchg
out
iret
xor
jmp
je
mov
test
or
inc
pop
jns
mov
xor
mov
jge
loope
test
jbe
pushf
mov
js
jp
cmp
adc
es
jp
sbb
jae
out
add
sub
jle
hlt
leave
flds
push
out
sub
dec
fildl
and
or
sub
or
in
and
sub
add
mov
les
xor
pop
int3
mov
mov
add
fstpl
mov
and
push
jb
orl
or
push
jmp
lock
insl
jg
xor
mov
xchg
mov
adc
sbb
movsl
clc
btr
lods
sub
adc
out
aaa
cld
pop
xor
pop
pop
lret
cmp
subb
loope
or
aad
iret
and
sbbb
scas
scas
jno
pop
mov
int
fwait
push
iret
lock
inc
in
ss
push
in
mov
popf
cmc
mov
inc
mov
xchg
fbstp
pop
out
lahf
in
xchg
adc
and
fisttps
or
repnz
jae
adc
push
je
jl
test
outsl
shl
jle
pusha
jno
imul
bound
into
int
jbe
and
out
ds
fdivs
jecxz
imul
adc
jl
fs
stos
int3
arpl
in
loopne
jne
lret
outsb
dec
xchg
mov
int3
lods
jno
fucomip
dec
add
jae
repz
pop
ret
mov
fcoml
push
xor
fsubs
xchg
data16
adc
je
leave
mov
push
je
test
imul
jbe
pop
clc
xor
push
mov
fcmovnb
stc
ds
jecxz
mov
jmp
and
shlb
mov
lods
popa
lock
dec
loope
addb
ficoms
adc
std
movsb
sub
dec
sub
pushf
in
sbb
stos
test
mov
mov
sahf
cli
daa
mov
push
scas
call
xor
leave
xchg
inc
leave
sbb
mov
test
cmp
das
outsb
sbb
lret
mov
into
out
sbbb
mov
rcll
xchg
cs
sub
sub
test
xchg
jp
cmp
mov
insl
fmul
mov
jg
pop
xchg
sbb
out
or
jo
dec
lds
xchg
test
sub
jp
dec
sbb
stos
outsl
lods
inc
stos
mov
fmull
xchg
test
enter
adc
jns
sti
ret
cmp
in
fsts
jp
xor
add
lcall
stos
mov
out
int3
or
repnz
movsl
pop
push
inc
push
icebp
stc
jb
mov
into
pushf
int
xchg
mov
cmp
sbb
stos
pop
pop
dec
and
jle
mov
mov
lods
push
mov
sbb
mov
push
aas
push
ret
sbb
mov
sub
jmp
or
jg
scas
adc
xchg
jns
xor
lahf
iret
and
inc
cmp
mov
xchg
enter
cmp
cs
xchg
jmp
jp
insl
rorl
xchg
add
enter
lods
cwtl
xor
xor
clc
mov
rcrl
jnp
adc
mov
and
data16
stc
push
insl
cmp
test
or
cmp
test
cmpsl
jo
add
xchg
outsb
test
fs
stos
outsl
xchg
push
aas
clc
mov
xchg
jo
leave
mov
jne
inc
int3
lret
fsubs
mov
inc
in
pop
sub
in
stos
xor
shlb
pop
loope
xchg
and
cld
inc
mov
add
sti
std
arpl
aam
lret
xor
or
test
jae
xor
fists
mov
mov
into
jns
cmp
inc
add
ds
aad
sub
pop
mov
pop
mov
mov
and
xorb
ret
xchg
pushf
xchg
out
out
push
inc
xchg
outsb
outsb
in
add
dec
movsl
aaa
clc
sub
push
in
or
dec
mov
mov
dec
ljmp
jo
mov
xorl
mov
bound
adc
xchg
jp
push
fsubl
fwait
xchg
inc
mov
in
shrl
loop
cmp
mov
cmp
mov
iret
push
ret
sub
mov
add
enter
std
icebp
adcl
add
mov
and
ret
mov
fildl
fsubl
mov
int3
fs
push
outsb
das
fisubrl
fnstcw
bound
pop
stc
mov
pop
dec
or
jle
cld
inc
loope
and
sub
sahf
mov
xchg
push
mov
sbb
ret
xlat
pop
lret
jmp
adc
pop
cmp
pop
jmp
stos
cmp
ficompl
fiadds
inc
sbb
ds
mov
pushf
sub
jmp
repz
out
fs
cs
xchg
lret
leave
and
jp
fs
push
and
cld
push
mov
lea
dec
mov
adc
mov
mov
jle
push
jmp
push
icebp
fmuls
fsub
mov
stos
ret
jae
mov
cmp
mulb
push
cmp
adc
iret
out
out
sub
cmp
in
mov
cld
pop
mov
cmp
push
jne
pop
mov
ds
pop
out
adc
pop
int3
pop
loopne
out
movsl
addr16
out
mov
lock
stos
lds
inc
and
xor
lods
pop
pop
inc
cmp
movsl
les
mov
pop
pop
lds
cli
sub
mov
arpl
and
cwtl
ja
movsl
or
rorl
dec
xor
lret
pop
ret
pop
pop
cld
shrb
mov
insb
mov
shr
scas
ds
stos
or
fists
fldl
or
jno
ljmp
cwtl
jo
mov
pop
dec
movsl
insl
shl
movl
out
and
xchg
ja
clc
sbb
or
pop
shrb
incl
leave
mov
sbb
push
adc
aam
or
jnp
loope
add
mov
jae
pxor
mov
mov
lea
sti
add
test
cwtl
incb
bound
mov
cli
xor
add
push
pop
fbld
clc
jo
ljmp
or
jge
pop
xchg
in
mov
mov
xchg
aam
pushf
pop
add
dec
fisttps
sarb
inc
clc
dec
pop
aaa
je
inc
xor
dec
mov
int3
ljmp
adc
mov
movsl
xchg
movsb
xor
fidivrs
scas
sti
imul
inc
push
dec
inc
clc
jle
sahf
je
inc
and
sahf
jb
xchg
xor
shrb
stc
into
mov
and
cmpsl
rolb
add
out
xor
mov
cmp
scas
stos
nop
in
or
adc
aaa
clc
sahf
mov
fucomip
scas
inc
sti
daa
add
pop
sub
sbb
jmp
hlt
fs
add
sub
ds
repnz
push
call
lret
sub
imul
popl
loop
push
jno
push
sub
cltd
mov
scas
lret
out
cmp
iret
cs
jne
scas
bound
inc
jge
push
sbb
popa
xor
cmp
cmp
data16
xor
push
pop
lock
or
add
sbb
out
jno
orl
lahf
push
adc
shrb
pusha
loope
lods
fwait
push
sbb
rcrl
cmp
mov
dec
scas
jmp
pop
pop
mov
mov
xchg
xchg
in
xchg
orl
mov
in
orl
cmp
push
mov
push
ret
scas
jae
push
mov
cmp
mov
jle
add
dec
cmp
imul
push
pop
imul
dec
jge
into
mov
mov
nop
pop
cwtl
in
adc
cltd
xor
pop
dec
test
inc
inc
pusha
je
lahf
cmp
mov
out
divb
std
push
push
shl
fst
add
pop
jl
mov
mov
imul
adc
les
lds
sbb
lock
cmc
out
scas
daa
icebp
cmpsb
rcl
movsb
pop
or
loopne
lock
mov
cmp
mov
call
fists
in
test
lahf
jnp
rolb
mov
cwtl
out
rorl
cmp
dec
or
cwtl
add
sub
and
sarl
mov
mov
pop
fwait
call
xchg
add
clc
xchg
push
cs
js
mov
mov
das
ja
pop
ret
loop
mov
add
push
das
ret
aas
xchg
imul
push
dec
cmc
push
push
loopne
data16
in
test
sbb
or
dec
popa
imul
or
jbe
jno
jmp
insb
push
jno
outsl
orl
pop
mov
add
add
mov
loopne
push
sub
out
pushf
jb
cmp
aas
mov
cld
dec
cmp
test
repz
test
sbb
clc
xchg
mov
xor
xor
imul
inc
xor
pop
mov
jae
js
fcompl
add
xor
rcr
jno
and
pop
dec
int
jnp
jge
icebp
pop
lods
and
adc
sub
mov
inc
push
loopne
fdivl
mov
clc
inc
and
sub
and
adcl
jbe
push
scas
fcmovu
ja
jl
popf
xchg
outsb
repnz
mov
adc
xchg
mov
jl
jmp
or
std
sbb
push
ja
mov
movd
pop
dec
dec
test
loop
mov
pusha
int
inc
icebp
adc
jl
fdivl
mov
xchg
pop
roll
ja
adc
xor
mov
in
mov
fbstp
pop
icebp
adc
xchg
addr16
sbb
adc
movsb
pop
dec
inc
inc
mov
jle
and
imulb
rorb
int
insb
sbb
insl
imul
stc
aam
scas
mov
push
stos
fistl
or
rorb
pop
push
mov
imul
subb
cmpsb
xchg
repz
hlt
xchg
push
add
cmp
pop
sbb
stos
inc
jecxz
jae
inc
xlat
xlat
mov
lret
jecxz
push
lcall
test
addr16
rorl
mov
or
jl
sbb
les
xor
mov
pop
out
out
jl
mov
sub
fisttpll
and
pop
mov
adcl
cmp
adc
adc
leave
shll
out
push
aam
lret
sub
add
je
outsb
xorl
pop
fstl
push
fs
push
sahf
mov
ss
stc
or
mov
cmp
cmp
loop
mov
mov
pop
mov
mov
and
fcoml
xchg
inc
adc
ljmp
push
ljmp
jno
stos
jb
jp
in
out
inc
lock
adc
subb
fs
notb
lods
inc
out
jnp
inc
in
mov
popa
mov
js
push
and
push
incb
loopne
push
cmp
jbe
pop
xor
incl
aad
pushf
or
int
xchg
stos
es
and
cld
test
decb
shlb
pop
aas
inc
sub
loope
fldenv
push
mov
jp
push
push
sbb
xchg
ret
mov
out
xchg
daa
lret
mov
inc
push
mov
repz
jg
scas
mov
push
mov
add
cmovb
mov
sbb
fsubp
mov
inc
bound
cmp
jmp
sub
jp
cltd
dec
pop
cmp
sbbb
xlat
cmp
insl
sarb
sub
xorl
xchg
sub
scas
cmp
in
add
jge
mov
xor
test
mov
pop
clc
outsb
push
ret
ds
cli
daa
add
mov
inc
fdivrl
push
sub
iret
xlat
jp
loopne
dec
in
xchg
sbb
mov
or
lahf
mov
jmp
cmp
pop
nop
inc
sbb
inc
jmp
cmp
sbb
jg
movsb
lret
sarb
mov
nop
sub
push
push
stos
aaa
stos
pop
mov
cmp
dec
cmp
out
xor
in
sbb
xchg
imul
stos
punpckldq
xor
aad
cmpsl
mov
pop
cli
fnstsw
mov
aam
mov
adc
leave
int
inc
mov
adc
xlat
mov
stos
push
or
aad
stos
jne
adc
imul
shlb
loopne
fstps
push
stos
insl
rol
lret
cld
ja
test
pop
cs
scas
and
enter
and
mov
xchg
fisttpll
insb
push
mov
sbb
jle
int
stos
inc
jae
ja
subl
mov
loopne
adc
data16
sbb
sbb
iret
xor
mov
and
sub
sarb
add
push
fs
loop
inc
push
insb
inc
adc
or
movsb
lods
inc
pop
cltd
push
scas
mov
gs
push
push
xor
ss
pop
scas
imull
mul
pop
aam
add
out
pop
ss
sbb
xor
sbb
scas
cmp
dec
push
loopne
int
mov
idiv
xchg
lods
sub
pop
aas
add
push
movlps
fdivl
rcr
dec
add
jnp
outsl
fs
mov
and
imul
xor
cmp
aas
inc
adc
push
outsl
adc
inc
movsb
ja
faddl
mov
sbb
out
sbb
std
out
sbb
iret
xchg
dec
cmp
push
mov
imul
pop
es
mov
and
iret
mov
popf
shlb
xorb
xchg
test
jg
or
adc
sbb
sbb
popa
cmpsb
xchg
fwait
pop
dec
pavgw
cltd
push
and
push
lret
clc
fistpl
sub
dec
fisttpl
inc
add
mov
cmp
sbb
insl
mov
enter
sbb
mov
inc
test
adc
push
ljmp
fistl
sub
push
outsb
sti
fwait
ret
in
shlb
pop
stc
insb
cmp
xchg
test
cmpsl
inc
les
loope
stos
mov
xchg
xor
xchg
jnp
loop
mov
fstps
hlt
mov
dec
rolb
fwait
pop
pop
or
or
mov
outsl
cmp
jae
push
sar
xchg
jbe
mov
push
into
aas
xor
je
scas
mov
shrb
aam
mov
dec
and
insl
mov
pushf
insl
inc
cmc
stc
dec
fcmovnb
push
std
cmp
outsb
inc
imul
fimull
and
inc
jno
jb
push
jle
adc
mov
xor
test
sub
outsl
xor
cld
mov
and
sub
and
push
inc
xor
mov
pop
movl
in
lds
movsb
add
push
adc
repnz
aaa
popf
dec
pop
xor
jecxz
mov
int3
push
xor
rorb
mov
stc
mov
push
cmp
sub
or
movsb
iret
xor
out
mov
and
push
mov
jb
adcl
lret
add
out
insl
sbb
mov
sub
adc
js
push
mov
bound
mov
mov
adc
xor
sbb
push
das
f2xm1
jo
mov
sub
add
cld
lret
pop
fidivrl
adc
js
nop
aas
mov
je
stos
es
cmp
orb
js
adc
xor
mov
hlt
sbb
push
push
in
cwtl
popf
adc
popf
nop
pop
addr16
test
inc
xor
jmp
notb
gs
int
ret
cmp
fimuls
sahf
sar
pop
pop
cli
icebp
jnp
cmp
mov
push
insl
into
inc
push
pop
imul
pop
sbb
in
xor
add
icebp
call
jp
mul
jnp
or
test
addr16
sub
adc
mov
add
jecxz
ret
rorb
rorb
fs
not
into
mov
sbb
or
fmuls
mov
test
inc
fcomps
pop
pop
add
mov
icebp
lahf
gs
sarb
cmp
dec
pop
and
pop
clc
imul
xchg
movsl
addr16
test
xchg
lods
cltd
loopne
lret
rolb
mov
cmpl
mov
shr
test
popf
fsubr
fsubrp
inc
pushf
mov
sub
and
popf
scas
fadd
dec
ret
jle
movsl
lret
add
cmp
stos
xchg
jo
push
lock
lret
push
js
inc
cmpsl
fsubs
mov
je
pop
mov
je
jns
cmpsb
xchg
add
mull
lods
sti
fisttpl
sbb
pusha
mov
fsub
scas
push
sahf
dec
out
andb
ljmp
sbb
dec
sbb
fadd
loope
aam
enter
cli
out
push
sbb
or
xchg
sbb
les
outsl
ret
sarl
push
test
inc
xchg
movsl
insb
rcrb
daa
sub
out
fimull
loopne
ljmp
jnp
xchg
int3
jbe
xor
in
push
mov
mov
outsl
fiaddl
pop
add
mov
notb
and
das
inc
stos
sub
loopne
subb
out
jb
dec
cltd
xor
or
js
addr16
sbb
push
push
cmp
or
sub
mov
or
mov
mov
sarb
sti
cmp
les
lret
outsl
cmc
inc
sub
les
test
xchg
push
sub
in
scas
sub
xchg
jae
jae
pop
xlat
sub
inc
fcmovne
lods
lret
and
iret
pop
data16
psubsb
and
inc
in
enter
mov
cmpsl
outsl
mov
cmp
mov
daa
mov
enter
jp
shrl
and
mov
mov
mov
ljmp
or
push
xchg
les
mov
jno
or
es
test
repnz
inc
or
pop
call
jg
xchg
das
adc
adc
scas
orl
repnz
out
add
sbb
or
mov
movsb
dec
xchg
inc
push
pushf
pop
dec
repz
jge
add
fdivr
leave
test
test
aad
jp
push
mov
inc
divps
pop
shl
xlat
jnp
fadds
jecxz
aad
leave
pop
jmp
in
imul
add
dec
mov
lret
jns
dec
pop
push
repnz
pop
or
out
adc
je
lods
sbb
mov
or
ja
add
dec
inc
dec
jmp
pop
arpl
xor
roll
or
adc
in
outsb
push
dec
rolb
arpl
inc
cmp
cmp
xor
add
fstpl
xchg
scas
pop
ficoml
test
push
sbb
jecxz
xor
and
cmp
std
xor
inc
fldenv
pop
sarl
cmp
cmp
pop
rorl
lea
inc
xchg
testb
rorl
cs
stos
in
fstpl
lcall
mov
rcrl
adcl
adc
jle
xor
mov
cld
xor
push
or
push
add
sub
ret
mov
lods
sbb
fmul
les
imul
arpl
leave
aas
sbb
test
pop
pusha
adcb
push
scas
push
int
push
and
dec
pop
lret
cld
test
outsl
cmp
push
dec
iret
or
mov
mov
cmp
pusha
push
dec
mov
inc
out
in
mov
xchg
stos
out
push
adc
sbb
xlat
loope
mov
mov
lret
or
jp
dec
mov
loopne
xor
shlb
pop
outsl
insb
push
dec
fdivl
xorl
mov
push
cwtl
in
ret
decl
out
popf
jo
inc
fsubrl
sbb
push
pop
test
out
into
xchg
outsb
mov
stos
aad
pop
pop
insl
add
jp
and
dec
push
mov
fcompl
mov
xchg
iret
ds
xor
add
pop
shl
mov
push
jecxz
loop
divb
mov
xor
test
not
xor
add
jmp
fwait
iret
addr16
fs
mov
icebp
sbb
stc
mov
inc
lds
rclb
push
sbb
dec
mov
out
xor
jge
xor
dec
mov
aad
xor
int
mov
test
aam
cli
adc
mov
push
loope
loop
es
mov
xor
mov
test
in
aaa
popf
jns
xchg
hlt
mov
push
xchg
pushf
sarl
inc
xchg
fsubr
dec
out
testb
push
xchg
jae
dec
mov
jb
adc
lret
mov
mov
es
add
cmp
imul
cmp
xchg
pop
push
js,pn
add
outsb
lcall
jno
nop
sbb
shll
push
sub
fldenv
in
movsb
ja
subl
cmc
mov
xor
bound
jle
mov
fdiv
xchg
adc
mov
dec
pop
mov
xchg
cmp
dec
push
cmpsb
sub
loopne
inc
sub
into
pop
and
roll
xchg
out
test
sbb
loopne
rcrl
xor
push
cmp
fsubr
xchg
daa
sbb
push
sub
ljmp
rorl
fldl
jle
mov
sbb
or
inc
loope
arpl
jb
xor
pop
js
imul
pop
aad
jne
push
cmc
pop
xchg
and
call
arpl
jbe
sub
pop
pop
sahf
test
lock
and
cmp
sub
stos
loope
insb
adc
inc
ret
adc
dec
divb
fnstenv
adcb
mov
mov
or
mov
test
push
adc
and
fwait
in
addr16
loopne
inc
adc
and
pushf
repz
add
lret
adc
adc
int3
fimull
pop
ljmp
out
cs
xchg
cli
pop
mov
testl
mov
daa
sub
loope
cmpsl
sub
inc
enter
sbb
inc
cmp
orb
mov
mov
jp
mov
clc
mov
add
mov
inc
aad
aam
out
cwtl
sbb
clc
je
stos
sbb
mov
pop
fcompl
subb
fdiv
sarb
lcall
push
jmp
sbb
mov
push
or
outsb
test
pop
lock
shr
sbb
insl
jmp
add
stos
iret
icebp
nop
cmp
push
mov
popa
xor
fidivs
repnz
jns
fsubrs
push
pop
xor
pop
or
rcrl
pop
stos
mov
loope
and
pop
mov
lret
mov
or
jecxz
mov
stc
les
negb
pop
mov
cwtl
test
lret
push
ja
fwait
jl
cltd
xlat
jmp
jb
mov
jae
inc
in
fstl
inc
inc
mov
mov
fisttps
fsubrl
or
arpl
cli
push
sub
jmp
shll
clc
mov
iret
mov
movsl
add
cmp
loopne
or
addr16
mov
dec
jl
scas
jb
sbb
xchg
int
repz
stos
addb
or
movsb
mov
popa
stos
push
or
jg
adc
sub
jle
sarb
cmp
icebp
out
push
call
pop
xor
pusha
data16
rcr
mov
dec
ret
rolb
in
iret
xchg
sti
xorb
daa
cs
inc
out
call
aaa
lret
je
outsb
dec
fs
pop
push
bound
rclb
call
rcrl
or
mov
or
sub
call
aaa
les
push
fnsave
jb
xchg
movsl
ds
xchg
jo
dec
push
sbb
lods
ss
gs
jae
xor
into
push
mov
jbe
adc
mov
mov
mov
negb
test
jmp
push
jmp
xchg
push
adc
mov
inc
insb
jecxz
mov
lds
push
stc
mov
or
test
outsb
out
cli
sub
or
ja
push
push
jae
insb
and
js
push
inc
and
mov
sub
push
loope
addr16
mov
mov
xor
mov
sub
pop
jmp
shrb
xlat
cltd
inc
and
lcall
xchg
pop
inc
cld
test
out
bound
pop
inc
arpl
into
fcoml
jb
subb
lock
into
or
call
mov
or
push
in
push
cmove
out
add
divl
out
jnp
ds
aam
or
cmc
or
into
ss
push
test
loope
out
add
jp
add
push
mov
aad
jg
mov
mov
sub
sbb
cmp
inc
and
ss
sti
mov
imul
lcall
mov
pop
imul
fld1
fstps
pushf
ret
pop
jno
and
fstl
fs
ds
das
jo
out
pop
mov
mov
addl
mov
repnz
cmp
jne
sbbb
mov
add
or
jne
frstor
ret
sub
stc
add
bound
jo
xchg
mov
mov
mov
xchg
repnz
and
in
pop
sahf
adc
xor
into
sub
fstl
fisttpll
fcoml
mov
push
xor
test
movsl
xor
adc
inc
fwait
push
pusha
insb
mov
cmp
mov
sbb
scas
and
std
cmpsl
ds
sbb
push
rcll
dec
mov
cwtl
cld
sub
pop
dec
jbe
es
xor
fnstenv
add
adc
cmp
sbb
xchg
out
repnz
cmpsb
xchg
jge
loop
jp
lret
add
mov
mov
fs
fldl
sub
aas
xlat
bound
mov
ljmp
adc
jp
aam
cmp
dec
in
in
iret
inc
cld
mov
loopne
lock
push
loopne
test
add
pop
leave
push
in
cli
pusha
or
out
inc
in
out
mov
add
imul
pushl
rcr
jb
into
jns
scas
test
cli
into
repnz
lahf
or
jns
xor
cmp
mov
imul
into
ss
mov
jbe
aaa
pop
popa
jnp
xor
jnp
bound
pop
sub
xor
scas
push
dec
add
call
mov
adc
jo
add
dec
fsubs
fistpll
sti
adc
jbe
movsb
sub
es
lods
sbb
fstl
out
addr16
int3
stos
dec
ljmp
sub
lret
repnz
xor
loop
push
mov
leave
jno
or
mov
cmp
ja
dec
push
ss
or
jnp
mov
adc
call
or
adc
mov
pop
leave
push
loop
insb
mov
fmulp
lock
dec
sbb
sbbl
mov
cmp
repnz
clc
cli
lret
lock
xchg
dec
mov
jo
and
dec
scas
xchg
or
or
pop
imul
jne
jno
push
mov
or
and
sbb
xor
popf
or
xor
jecxz
dec
popa
ficoms
sahf
sbb
sbb
add
mov
push
cmpsl
cmpsl
scas
push
lcall
popa
fmul
pop
sub
jne
pop
out
push
aad
xchg
mov
test
pop
cmp
mov
push
cmc
popf
pop
sub
lods
or
push
movsl
outsb
or
inc
dec
loopne
dec
cmpsb
pop
mov
push
add
shlb
data16
leave
fldcw
and
push
sti
cmp
sub
inc
sbb
sbb
bound
out
sti
ljmp
ljmp
jne
push
sbb
dec
and
test
icebp
mov
idivb
sub
shrb
mov
lahf
mov
pop
jecxz
dec
mov
int3
loope
rol
inc
push
inc
jns
inc
xchg
cmp
fnsave
rcrb
je
test
inc
mov
pushf
sub
xorl
shll
rcr
andl
popf
jge
popf
lods
or
test
push
outsl
inc
mov
xor
stos
imul
pop
mov
cmpsl
mov
bound
call
or
lds
xchg
mov
enter
idiv
sub
dec
inc
fidivrs
mov
push
fwait
cmp
rorb
cld
push
sbb
ret
add
jg
push
rolb
jo
xlat
stos
or
cs
pusha
xchg
out
sahf
mov
cli
ds
dec
pop
leave
sbb
lods
leave
ljmp
out
push
xchg
push
and
xchg
mov
fdivl
leave
jge
add
xchg
addr16
inc
jmp
xchg
add
mov
mov
ret
arpl
push
adc
shl
mov
mov
lods
addb
mov
pop
rorb
and
repz
push
cmp
data16
dec
pop
dec
cmp
mov
loope
enter
insb
subb
dec
aas
push
mull
jae
pushf
mov
add
push
sbb
ja
cltd
cwtl
sub
dec
sbb
mov
sahf
addb
loope
dec
dec
icebp
lods
int3
movsl
clc
or
xor
jnp
pop
hlt
push
nop
aam
leave
and
or
xchg
or
out
dec
mov
dec
adc
mov
cltd
lret
cmp
in
adc
jbe
sub
dec
jbe
ds
ja
pop
xlat
and
lds
aad
ficoml
or
and
or
xchg
mov
or
push
cmc
sub
ds
fstpt
dec
std
adc
xchg
push
xchg
inc
out
xchg
ret
pop
jne
shlb
adc
sub
in
test
test
cmp
fwait
inc
mov
xchg
outsb
mov
outsb
mov
das
cmc
cmp
leave
rcrb
call
outsl
lret
push
repnz
imul
sbbl
sub
imul
movsl
icebp
push
movsb
mov
iret
lods
mov
jne
lea
stos
and
movsb
ret
add
pop
arpl
cmp
or
cmpb
inc
push
or
fsubr
dec
stos
push
inc
das
sub
std
outsl
inc
fsubrs
or
mov
pusha
cmp
ficomps
mov
and
fisubs
repnz
mov
mov
jge
sti
add
mov
out
outsl
push
jb
inc
js
std
jle
inc
cli
adc
movsl
lcall
and
lcall
inc
xchg
jmp
inc
aad
ds
sub
dec
push
gs
pop
pop
scas
or
xchg
push
sub
cwtl
pop
add
mov
jg
mov
sbb
xchg
dec
fs
mov
lds
xor
outsb
lcall
frstor
sbb
mov
leave
popf
dec
enterw
jecxz
ds
icebp
dec
mov
addr16
mov
pushf
out
xchg
or
ds
or
push
add
mov
mov
push
into
xor
out
pushf
sti
cmp
dec
adc
pop
add
aaa
stos
xor
push
jne
cmp
cli
xchg
rcrl
je
add
and
addr16
jno
xorl
bound
jnp
dec
shll
xchg
jp
adc
pop
adc
mov
mov
mov
xchg
adc
dec
xor
test
cli
xchg
repnz
mov
or
inc
pushf
scas
jbe
stos
inc
mov
test
mov
sbb
loope
inc
jnp
jns
out
mov
cltd
ljmp
push
gs
dec
arpl
mov
std
popf
sub
sbb
mov
leave
xchg
rolb
divl
add
or
aad
inc
mov
mov
outsl
push
ja
stc
call
push
stc
lea
nop
dec
loop
xchg
dec
or
outsb
in
xchg
jmp
mov
outsb
sbb
pop
mov
mov
cmc
mov
push
sbb
nop
adc
push
push
aad
sbb
jb
mov
jns
inc
stc
je
adc
addl
jge
shrb
div
xchg
mov
add
lods
sub
addr16
cltd
sub
mov
sub
push
fldt
leave
cmp
int3
daa
cmp
fidivrs
test
shld
add
inc
xor
sub
cmp
inc
scas
push
inc
jmp
aam
lea
mov
sbb
lahf
xlat
lret
jle
cmc
ljmp
and
js
leave
mov
pushf
call
fadds
test
mov
or
addr16
movsb
shll
mov
and
push
sarb
rolb
scas
or
filds
sub
cmpsl
push
pop
mov
pop
ss
aaa
out
adc
adc
frstor
cmpsl
lea
mov
mov
jp
sub
and
cli
shll
sub
lcall
jno
call
add
push
inc
les
pop
cwtl
bound
dec
hlt
xchg
shl
sahf
xchg
jno
out
fwait
or
enter
pop
fwait
and
push
leave
pop
mov
pop
aaa
shlb
repnz
pop
pop
lcall
stos
std
out
inc
popf
sbb
iret
push
add
test
repnz
lods
stc
xor
ljmp
dec
imul
xchg
pop
cmp
dec
mov
repz
shrl
shl
cmp
mov
jo
mov
mov
shrl
hlt
pop
jns
aaa
in
mov
jmp
push
push
jmp
js
push
lcall
shrl
xchg
push
cld
rcrl
mov
and
rcl
or
sub
gs
call
stc
push
mov
inc
sbb
mov
pop
mov
jl
add
mov
xchg
vprotq
jmp
push
sbb
shll
pusha
sub
pop
push
xlat
cmp
cli
mov
out
xchg
fucomp
lret
loope
out
popa
xchg
test
pushf
sub
add
aam
push
dec
pop
xchg
sub
inc
push
adc
enter
pop
mov
mov
push
jnp
fldcw
dec
enter
lds
push
xlat
ds
push
pop
aam
fldt
jle
adc
iret
outsb
sbb
jg
pop
insl
jns
inc
test
jle
jl
cmp
pop
adc
test
xlat
mov
or
and
out
add
mov
cwtl
mov
bswap
push
sub
mov
or
mov
mov
jns
cmp
movsl
sbb
data16
shll
push
cwtl
test
in
or
jl
addr16
je
pop
lods
int3
cs
pop
shlb
aam
ds
jl
loop
or
in
sub
push
mov
xlat
rep
sub
sbb
xchg
fdivrl
and
and
fistps
pop
and
xor
test
push
out
lods
jl
jb
dec
jne
jb
sbbb
mov
iret
adc
fcmovne
in
pop
dec
outsl
push
push
shl
fnstsw
jp
mov
out
mov
pushf
cmp
add
std
xchg
stc
hlt
lds
sbb
cmp
cmp
sarb
inc
dec
ds
mov
mov
cmc
jle
ds
test
rol
xor
imul
pop
pop
inc
push
xor
fadd
sar
or
adc
faddl
cmpl
jbe
jbe
loop
mov
ret
jle
pop
xchg
jno
clc
pop
mov
arpl
fcmovnu
ja
push
clc
loope
and
mov
push
jb
xchg
scas
cwtl
test
iret
popf
sub
push
daa
mov
sbb
inc
lret
xchg
aaa
dec
popa
imul
les
mov
in
sub
jl
xchg
cli
cmc
mov
stos
dec
test
adc
dec
and
sarb
push
push
sbb
mov
fldt
int
fdivl
add
sub
mov
loop
pop
sbb
push
or
inc
xchg
push
mov
mov
sbb
mov
cmpsb
aaa
add
xlat
and
ja
mov
sbb
out
or
push
mov
cmp
cmp
lahf
xchg
lds
imul
mov
sti
sbb
mov
fwait
push
jp
push
pop
push
sbb
cmc
daa
scas
inc
pop
sti
pop
fwait
movsl
ror
mov
cmp
xor
sbb
jne
and
rolb
or
adc
mov
xchg
loopne
ja
aaa
mov
stc
out
cmp
movsb
test
inc
mov
cmp
sub
pushf
cld
jl
shlb
mov
stc
jae
shrb
add
inc
loop
and
sub
es
xchg
xor
dec
iret
std
pop
jmp
out
or
icebp
xor
jo
inc
adc
aaa
cmp
leave
pusha
imul
pop
mov
mov
movb
cmp
outsl
add
xchg
xchg
inc
mov
in
adc
xchg
mov
inc
push
popa
cmc
jg
and
sahf
cmp
pop
inc
lock
jne
into
stos
lret
gs
cmc
aaa
scas
ljmp
femms
push
aas
lock
stos
push
pop
xor
mov
add
mov
pop
lcall
and
xor
push
std
insb
and
stc
pushf
adc
loope
ja
jp
and
adc
scas
push
movsb
dec
fsubrs
sti
or
int
stos
xor
into
and
mov
jb
sub
dec
jl
add
cmp
ret
je
push
push
movsl
dec
dec
or
push
mov
jae
dec
xchg
or
and
movsl
mov
or
es
loopne
ss
xor
sbb
inc
push
or
ds
pop
xchg
mov
in
cmpsb
pop
xchg
lcall
sub
push
fnstenv
mov
out
cmpsl
jle
xorb
int
lock
push
cmp
jno
fistl
or
inc
mov
icebp
dec
cmp
push
testb
rcrl
pushf
dec
jl
and
push
ljmp
pop
dec
mov
fisttpll
lods
adc
mov
or
xor
add
and
stos
inc
std
jne
mov
cltd
leave
mov
lods
gs
movlps
scas
js
cmpsb
cmp
gs
pop
cmp
shrl
stc
inc
pop
repz
dec
pop
cmp
ds
fwait
dec
push
cmp
enter
xchg
adc
lahf
push
sub
push
idivb
montmul
cmpsb
inc
in
add
out
jle
sbb
pop
push
push
push
mov
xchg
sub
and
pop
or
es
push
push
test
jo
imul
fst
dec
or
or
cmp
add
dec
rorl
leave
jne
adc
mov
pop
popa
adc
add
or
xchg
fwait
jae
xchg
push
or
les
sub
mov
iret
data16
lock
aam
in
xor
push
jmp
scas
xchg
scas
outsb
jno
stos
insb
inc
out
dec
push
scas
nop
inc
in
xchg
adc
leave
and
cmpsb
sbb
pop
adc
cmp
sub
cmpsl
je
ret
pop
pop
dec
pop
lock
push
sbb
push
cmp
add
add
es
sub
bound
add
push
and
mov
int
out
jl
and
dec
fisttps
pop
scas
xchg
fnstsw
mov
enter
fstl
stos
mov
dec
cmp
les
shr
les
ret
pop
test
int
adc
and
jno
in
sbb
stos
clc
push
aas
pop
andl
lret
outsl
sub
daa
in
shlb
push
sub
in
int
imul
es
mov
adc
jmp
inc
das
mov
stc
mov
jbe
adc
in
imul
idiv
dec
daa
and
idivb
lcall
mov
in
inc
out
movsb
mov
add
out
jl
leave
lcall
add
test
fsubs
sub
imull
cld
pop
shlb
fxch
out
loop
jae
call
cmp
xor
les
mov
cwtl
mov
fdivrp
cwtl
sti
loopne
sbb
sub
xor
or
xchg
loop
xchg
out
in
jnp
pop
nop
push
sub
and
mov
cwtl
inc
jo
inc
in
dec
ffree
lock
cmpsl
push
fnsave
inc
mov
in
std
psubb
data16
cmp
sahf
push
cmp
pop
sbb
cmpsb
hlt
jne
clc
pop
jb
jl
inc
sahf
es
shlb
push
addl
mull
aad
pusha
pop
sbb
mulb
dec
out
fistpll
add
sub
inc
stos
cmp
idivl
cmp
xchg
push
lret
sahf
xor
sti
int3
inc
loopne
and
pop
cmp
push
xchg
subb
push
push
adc
lcall
and
clc
sbb
mov
mov
jmp
test
lds
sbb
pop
ret
pop
out
lret
jb
loop
mov
mov
xor
adc
mov
adc
roll
jp
mov
movsl
push
cmp
push
gs
sbb
int
lahf
mov
push
mov
sbb
add
lret
popa
mov
xchg
fisubrl
mov
fldenv
mov
fmuls
mov
pop
xor
insl
loopne
loopne
mov
dec
inc
fisttpll
daa
xchg
cmc
add
pop
daa
dec
push
dec
inc
hlt
or
clc
popa
jg
or
dec
ret
bound
nop
int
mov
mov
push
sub
test
scas
outsb
cs
loope
pop
lods
pop
mov
icebp
mov
xchg
sbb
mov
dec
adc
push
push
and
dec
inc
fdivl
cld
andb
pop
pop
ljmp
lock
cmp
cmp
enter
sub
outsl
jmp
sti
stos
pop
adcl
inc
sbbb
adc
push
mov
icebp
jmp
jle
push
in
or
mov
pop
mov
imul
push
repz
dec
xchg
push
or
stos
stos
repz
test
push
movsb
xchg
pop
push
xor
addr16
cld
dec
mov
mov
xchg
cltd
popa
clc
cmpl
imull
daa
inc
adc
mov
lret
pop
fwait
mov
fmuls
sbb
sub
cmp
popf
add
dec
popf
and
shrl
jge
adc
mov
mov
push
popf
notl
and
mov
sbb
scas
xor
sti
outsb
pmulhw
sarb
pusha
inc
fwait
rorb
imul
fmulp
addr16
mov
hlt
or
cmc
cmp
aad
inc
mov
cmc
fs
test
mov
push
in
pop
jg
add
in
or
leave
js
adc
aaa
jmp
je
xchg
hlt
or
cmpsb
in
pop
sbb
cmp
outsb
repz
out
pushf
jge
insb
call
pop
inc
dec
dec
movl
insl
shlb
inc
jp
fisubrl
adc
adc
imul
lcall
into
pop
icebp
xor
shrl
pop
jmp
sbb
mov
sub
or
push
dec
push
mov
add
pop
mov
jmp
mov
dec
push
push
xchg
test
add
sahf
xor
xor
sbb
push
aam
mov
sub
insb
fists
add
cmp
hlt
jp
sub
dec
push
mov
ds
clc
in
inc
das
adc
shll
dec
repz
adc
pop
ret
sub
in
and
dec
push
in
mov
jae
jmp
mov
call
and
ret
mov
xchg
and
inc
mov
testb
pop
inc
jge
mov
pop
or
pop
imul
shlb
xchg
out
test
jp
xor
in
and
push
in
cmpsl
cmc
fsubrs
shrl
fimuls
cltd
mov
gs
mov
fsub
push
outsb
scas
sub
pop
mov
cmc
repnz
repnz
repnz
fists
gs
gs
movsb
jg
push
dec
inc
adc
pushl
push
and
repnz
fwait
sti
mov
inc
mov
stos
shlb
xchg
out
rorl
rolb
sub
push
mov
push
adc
es
repnz
push
lcall
and
notl
fcmovbe
push
fiaddl
shlb
mov
stos
push
or
xchg
sub
inc
mov
dec
aaa
lock
inc
xchg
cmpsl
inc
mov
sub
cwtl
das
fcoms
fmull
jno
ss
xchg
mov
or
xchg
xchg
out
sahf
adc
fnstenv
in
cltd
mov
outsl
push
mov
lea
push
lret
xor
cmp
mov
decl
jle
fs
fwait
mull
in
insl
mov
jp
testb
adc
icebp
into
mov
pop
movsb
sub
mov
repz
pop
inc
jp
mov
mov
mov
dec
dec
into
dec
cmpsb
sub
xor
pushw
dec
dec
pop
cmp
pop
and
out
pop
ror
pusha
push
pop
mov
outsl
or
iret
test
mov
mov
jo
or
stc
sti
dec
std
pop
js
imul
mov
mov
mov
dec
in
dec
aam
push
jno
dec
testb
movsl
xchg
fimull
mov
movsb
sti
call
mov
push
sub
mov
imul
mov
call
and
cmp
mov
movsl
lds
in
add
cld
add
or
xchg
lret
orl
jbe
nop
cwtl
sub
lret
add
jno
cmc
pusha
pop
nop
sub
andb
mov
mov
cmp
test
xchg
pop
add
cmp
es
sbb
adc
ss
jl
push
xor
fucomip
sbb
jno
ret
orb
mov
cld
mov
cmpsb
pop
xchg
sbbl
cmp
mov
aaa
iret
xchg
push
cmp
sbbb
dec
fmuls
sub
jbe
ret
sti
mov
and
mov
mov
ret
lock
sbb
call
mov
inc
sub
jb
lds
and
arpl
or
sub
popa
fdivrl
jle
dec
enter
mov
mov
dec
push
push
popf
adcb
push
movntps
pop
cmp
jmp
xchg
push
cs
decl
xchg
push
add
aaa
js
imul
xchg
dec
and
xchg
in
or
xchg
cmp
mov
int3
scas
mov
leave
sbb
inc
mov
ss
out
dec
sahf
cld
cli
jne
cmpsb
cmc
mov
push
adc
in
add
push
lods
cmp
xchg
add
cmpb
icebp
bound
mov
add
jmp
and
adc
mov
bound
dec
hlt
mov
cld
dec
fildll
sbb
gs
push
inc
scas
daa
inc
icebp
xchg
mov
loopne
cmpsl
push
or
popf
jbe
cs
gs
aas
fs
leave
out
jp
inc
sub
dec
jne
lock
fnsave
inc
clc
adc
aad
xchg
ss
frstor
add
jno
aaa
mov
pop
inc
cmp
ret
mov
or
pushl
cli
lea
int
fistpl
loopne
or
lea
imul
sahf
and
dec
rcr
leave
mov
into
enter
pop
mov
jo
xorl
jmp
push
fildll
int3
xor
sub
fnstcw
mov
fidivrl
pushf
aaa
div
push
inc
cmc
movsb
movsb
popl
icebp
xchg
sbb
leave
inc
sbb
cs
sbb
jno
and
dec
add
into
push
stos
out
push
cmpl
fimull
mov
mov
clc
test
cli
aad
imul
adc
scas
inc
pop
and
lock
xchg
out
adc
cmp
mov
lods
and
sarl
arpl
rorb
loop
pop
les
pop
sub
jbe
testl
xchg
mov
push
aad
pusha
sbb
nop
mov
adc
sub
les
aas
pop
repz
mov
scas
pop
imull
inc
dec
add
out
or
mov
adc
ret
jge
mov
jae
cli
xor
mov
push
jo
mov
stos
mov
test
scas
insb
inc
enter
sub
mov
aas
dec
jns
ds
mov
push
mov
jmp
adc
xchg
fadds
repnz
call
add
mov
xchg
mov
jb
or
int
jl
fsubrp
scas
mov
jae
sbbb
js
outsb
sub
inc
notl
out
and
loop
mov
pop
and
xchg
mov
xchg
js
arpl
or
aaa
mov
push
adcb
push
sbb
fidivs
shlb
das
loop
pop
in
sbb
scas
mov
add
and
and
push
mov
test
cmp
dec
or
je
mov
popa
out
xlat
xor
in
popf
lods
sbb
pop
jo
push
push
notl
fdivrs
fsubr
scas
sbb
mov
mov
loop
movsb
add
repz
pop
xor
or
dec
add
aad
dec
and
pop
push
imul
mov
scas
cmp
xchg
test
adc
mov
insl
pop
lock
in
stos
jns
mov
test
add
imul
lods
xchg
movsb
jnp
push
cmp
push
pop
mov
mov
movsl
add
imul
xchg
lock
adc
mov
shrb
push
cmp
push
push
flds
lcall
cltd
je
adc
lret
or
cmp
pop
sub
std
mov
sbbl
adc
insb
imul
daa
push
fwait
jecxz
mov
mov
xchg
sub
mov
push
and
jecxz
lret
std
or
cmc
repnz
sbb
jae
or
xchg
push
lds
pop
mov
mov
jnp
push
and
jae
lret
clc
sahf
xchg
xchg
inc
pushf
mov
adc
cmpsl
push
rorl
shll
jg
sbb
cmp
rcll
push
jo
sub
aad
push
push
scas
or
js
jns
adc
dec
cmpsl
fistl
xchg
xor
stos
cmpsb
aaa
and
push
popa
ljmp
movsl
sti
xor
aam
bound
fmuls
mov
mov
aad
pop
das
out
imul
inc
xchg
adc
mov
aam
xchg
outsl
pop
add
mov
mov
add
out
push
and
xchg
sbb
push
fisubl
inc
fwait
cmp
aad
divl
xchg
xchg
xor
push
cmp
mov
jle
dec
ja
sub
cmpsb
ret
dec
cmpsl
cmp
jbe
mov
int
test
pop
pop
test
fdivl
pop
mov
lret
jecxz
scas
push
test
push
push
jge
mov
jp
xor
mov
dec
xchg
cmp
aad
mov
rclb
xor
cmp
xor
sub
sub
in
sarl
mov
mov
pop
stc
xlat
pop
sub
lea
dec
jo
mov
clc
aam
rcl
pop
popf
mov
mov
out
xchg
mov
jmp
mov
cmpsb
jmp
out
push
sbbl
js
jo
jae
xor
jle
test
adc
jno
in
sub
daa
jne
fstpl
lret
aas
out
std
dec
nop
xchg
sub
orl
mov
loopne
sub
hlt
shrb
lds
or
jge
adc
stos
dec
pop
lock
scas
sub
test
in
hlt
mov
pop
scas
in
and
add
bound
gs
out
int3
out
sub
xchg
pop
mov
roll
xchg
sub
imull
pop
faddp
xchg
aas
and
lea
or
clc
inc
cld
into
mov
es
fstl
or
notl
shll
inc
jns
mov
out
jae
iret
mov
push
adcb
or
mul
cmp
xor
rcll
jae
andb
gs
sbb
les
enter
ret
push
cld
adc
clc
mov
or
push
mov
push
jl
mov
jl,pn
or
jecxz
fwait
enter
xchg
lods
lock
in
adc
xor
mov
dec
jl
xchg
jl
dec
mov
mov
je
in
cmp
push
ljmp
mov
sub
inc
fs
in
push
add
xchg
inc
or
rcll
js
sbb
clc
mov
inc
sub
adc
call
repnz
mov
cld
cmpsl
jb
and
fidivs
jnp
and
std
adc
popf
mov
dec
jnp
das
ret
out
cmpsb
xchg
cs
push
jb
mov
or
or
pop
push
push
fmul
mov
js
shrb
pavgw
xor
mov
frstor
out
lahf
ds
dec
repz
pushf
add
jecxz
imul
dec
aam
int
repz
or
jl
shrb
dec
jnp
cmp
out
push
pushf
lods
cld
ret
add
ss
rclb
cmp
inc
add
fbstp
or
inc
popf
ror
rol
ljmp
int
jbe
push
ljmp
aaa
or
push
mov
adcl
cmp
inc
adc
adc
int
jl
imul
inc
icebp
xchg
fidivrs
bt
andb
sub
dec
lea
mov
sbb
mov
mov
fcoml
lret
mov
loope
jmp
addr16
lahf
scas
fildl
sarb
cs
cmp
inc
in
sub
jae
call
xchg
iret
out
add
fbstp
inc
js
adc
jne
and
inc
ljmp
mov
xor
lret
or
rorb
mov
inc
jle
inc
push
push
mov
sbb
shrb
ds
cli
leave
pop
jno
pop
repz
mov
jp
sub
jecxz
sub
inc
cmp
pop
lret
pop
cwtl
push
out
mov
insl
cld
xlat
shll
or
xchg
test
subb
jo
pop
lods
xchg
jae
stos
xchg
xchg
sbbl
sub
pop
ljmp
mov
pushf
int
pop
hlt
jle
sub
je
push
mov
jl
into
jmp
sub
xor
in
push
adc
mov
jne
repnz
xlat
adc
aam
dec
add
jnp
cmp
loope
jns
pop
inc
lret
inc
jno
push
pop
lock
jo
mov
cmp
and
aas
dec
push
adc
pop
add
mov
xchg
xor
cmp
arpl
daa
ljmp
inc
ret
cmpsl
mov
stos
into
dec
pusha
sub
inc
flds
or
test
xor
icebp
lret
filds
adc
push
sbb
sbb
lret
lds
jbe
dec
pop
dec
xchg
mov
insl
jnp
xor
add
xchg
push
xchg
mov
test
adc
sub
aad
inc
inc
inc
lock
and
test
or
push
jbe
out
andl
hlt
je
sub
hlt
dec
testb
rcll
fstps
out
incb
or
ljmp
cmovl
mov
or
movsl
in
arpl
xchg
mov
testb
mov
cwtl
pop
cmpsl
mov
jge
pop
inc
int
in
rorl
cltd
add
mov
mov
out
xor
mov
in
cmp
outsb
push
mov
dec
jbe
push
jmp
das
cmp
mov
cmp
aas
rclb
mov
sub
xor
cmp
fnsave
out
test
mov
divb
dec
sub
lret
push
mov
mov
or
sbb
and
mov
cmp
jo
xor
repz
jge
dec
loopne
jnp
sbb
ret
clc
xor
out
mov
inc
adc
inc
xor
inc
jo
mov
out
adc
mov
test
cmp
cmp
aam
adc
rcrl
scas
mov
fstpt
or
fstl
push
aaa
xchg
neg
jbe
mov
in
les
jae
xchg
stc
cld
inc
sub
je
int3
addr16
in
mov
out
push
add
cmp
into
arpl
ljmp
imul
adc
xor
xor
xor
lret
lret
or
shlb
dec
xlat
clc
cwtl
pop
pushf
in
int
pop
ret
test
insb
jmp
push
add
shlb
test
sbb
dec
stos
arpl
jmp
cltd
adc
imul
fiadds
add
pop
popa
add
out
adc
mov
jmp
imul
andb
sti
in
insl
pop
xchg
sbb
pop
scas
cmp
cld
xchg
and
scas
and
rcrl
add
mov
jmp
dec
push
sub
jno
adc
lret
lcall
insl
lods
cs
nop
pusha
inc
shlb
sahf
pop
aaa
ret
inc
out
cmpl
loop
pop
xchg
imul
test
jnp
mov
xchg
sub
push
test
dec
insl
mov
mov
into
xchg
add
in
repnz
adc
andl
dec
and
cmpsb
inc
pop
adcl
push
int
inc
adc
push
sub
cli
mov
push
out
mov
jmp
mov
push
imul
mov
arpl
cmpsl
mov
xor
jp
cwtl
pop
sbb
mov
lods
jno
inc
loopne
shlb
adc
push
outsb
mov
adc
push
out
cmp
mov
pushf
call
adc
aas
mov
out
pushf
rorb
jp
sbbl
imul
jbe
aas
push
and
std
or
enter
add
js
fbld
add
loop
shlb
movsb
popa
cld
add
push
inc
sbb
jb
pop
stc
jo
dec
orb
lds
sbb
jge
sbb
add
sbb
outsl
fimuls
jmp
fstpl
stos
jbe
repz
stc
fnstenv
inc
mov
jns
sub
or
jo
mov
imul
adc
mov
scas
mov
mov
inc
sbb
leave
movsl
aam
jns
rol
repnz
in
lds
and
pop
cmp
cmp
repz
mov
mov
xor
scas
outsb
mov
adc
adc
xlat
adc
add
jnp
adc
mov
mov
je
dec
in
xor
push
mov
dec
in
adc
xchg
loope
in
mov
insb
andb
mov
clc
xorb
out
sub
rcr
push
dec
das
or
or
and
cltd
jnp
out
mov
and
dec
pop
xor
test
mov
add
or
popa
mov
inc
popa
jo
sub
mov
es
inc
pop
mov
fcoml
sub
adc
test
fistl
or
shl
inc
mov
rorl
fucomip
adc
adc
and
sub
shrl
arpl
fdivr
pop
lret
sti
jp
mov
mov
rorb
add
loop
inc
add
mov
lcall
int3
pop
cwtl
fwait
inc
cmp
pop
xchg
jl
pusha
scas
lret
fstpl
jne
and
mov
xor
inc
or
nop
adc
cmp
hlt
xor
inc
ret
cltd
push
cmp
test
pop
mov
test
and
xchg
pop
xchg
aam
mov
into
jl
push
mov
jecxz
mov
inc
das
imul
jne
repz
sbb
aas
ret
negl
mov
push
cmp
popf
sub
push
add
test
cs
xchg
lret
cmpl
push
inc
int
or
or
cltd
lods
decb
scas
pop
jbe
mov
xchg
loopne
inc
push
pop
mov
mov
frstor
sub
add
mov
and
adcb
or
sahf
arpl
xchg
mov
or
or
lea
mov
movsl
add
add
lods
mov
pop
fldenv
inc
aas
and
shld
cmp
test
lods
dec
mov
aas
fbld
sbb
push
inc
dec
aad
clc
jne
lock
or
sub
jns
movsl
clc
xor
aas
mov
push
or
rcr
mov
sbb
sub
in
add
xchg
sbb
scas
pop
push
repz
cmp
pop
mov
loope
push
sub
mov
adc
sbb
negl
sbbl
movsb
push
loope
add
les
push
xchg
shll
add
jne
xchg
push
scas
cltd
stc
cmpsb
lret
push
inc
mov
sahf
inc
and
adc
sbb
fisubrs
clc
push
shll
adc
mov
jmp
xor
int
push
push
mov
jbe
pop
mov
and
push
jbe
sub
inc
inc
ss
dec
fucomp
inc
fmuls
testb
daa
repz
test
dec
push
jbe
mov
ja
lock
jl
cmpsb
lods
popf
fisubrs
dec
sub
or
ror
in
jbe
shll
repnz
pop
hlt
fcom
pusha
inc
jle
adc
push
cltd
stos
add
test
fisttpl
inc
jle
mov
dec
int
fidivl
push
jo
inc
fisubs
jge
fsubrs
cld
lahf
push
cmp
push
out
aaa
sbb
in
pop
into
fidivrl
push
sub
xchg
rorl
out
aam
shrb
inc
repnz
mov
int
cmpsb
push
daa
adc
pop
ja
or
or
jle
mov
mov
pushf
lret
sub
andb
jle
je
sub
or
sub
sbb
out
pop
push
cmp
daa
pop
ljmp
sbb
jns
fstpt
or
inc
xchg
jnp
test
leave
jbe
push
mov
adc
jae
popf
sarb
icebp
pop
aad
pop
fsub
mov
lock
mov
mov
pop
xchg
jp
sbb
inc
fwait
idiv
and
mov
jl
push
jno
sub
movsb
jecxz
jg
aad
mov
sbb
rclb
jae,pn
mov
sbb
fs
cmp
iret
jno
jle
xchg
and
ret
cwtl
or
jmp
aam
mov
mov
mov
ljmp
push
in
jbe
cltd
xchg
inc
jmp
movsl
fwait
sti
mov
xor
push
and
xor
adc
fisttpl
xchg
pop
cs
mov
test
gs
lret
insb
xchg
jno
and
add
outsl
enter
outsl
daa
fisttpll
adc
stos
or
mov
and
xor
divl
pushf
test
dec
inc
pop
sub
repnz
cmp
data16
rcr
js
mov
add
mov
loopne
cmp
mov
sbb
pushf
cmp
cmp
pop
jo
lds
xchg
lods
imul
dec
enter
bound
jno
leave
shr
cli
ret
shlb
shrb
xchg
call
ret
int3
fidivrs
fs
movsl
mov
push
out
or
std
out
orb
sub
adc
test
mov
adc
push
xor
rorl
shl
mov
cld
ss
and
cmovl
nop
jp
xlat
adc
insb
and
lock
sub
das
xchg
inc
scas
insl
stc
ja
xchg
xor
lods
mov
xchg
or
mov
pop
sub
aas
xor
lods
mov
mov
pop
outsb
dec
dec
mul
inc
mov
icebp
mov
pop
mov
pop
cmpsl
mov
push
jno
loop
jbe
cs
ds
cmp
roll
pop
hlt
call
test
sahf
leave
je
pop
scas
mov
jno
xlat
and
cld
inc
roll
sub
lock
and
mov
mov
aad
mov
cmp
and
jmp
pop
rcll
pop
out
inc
xchg
sarl
ljmp
mov
js
mov
jae
loope
xchg
repnz
mov
pop
adc
fwait
popa
push
data16
ja
pop
lock
mov
adc
adc
jae
pop
fsubrs
xor
push
jmp
icebp
xorb
xchg
arpl
movsl
outsb
sbb
jl
stos
and
rclb
jae
xchg
lods
adcl
adc
daa
jp
jge
push
inc
lods
xchg
mov
xchg
jp
mov
aam
or
and
adc
xor
movsb
dec
xchg
outsl
sub
mov
notl
jp
or
stos
stos
mov
cs
repz
pop
push
stos
mov
outsl
dec
cmp
fcmovne
or
out
sti
and
jg
push
sbb
data16
rcrb
add
inc
xor
mov
push
cmp
out
and
cmp
js
mov
cltd
mov
repnz
inc
loope
int
call
or
rorb
mov
popa
shl
jo
push
cld
push
inc
xor
sbb
cmc
loop
jns
cmp
xchg
and
dec
inc
into
inc
int
loope
les
push
sbb
jb
sbb
push
jo
rclb
imul
outsl
inc
push
pop
jge
xor
loopne
add
insl
push
fs
orb
arpl
inc
xorl
lret
cmpb
inc
popa
clc
xor
jg
scas
push
fdivs
xor
pop
adc
fistps
mov
xor
test
js
mov
cmp
out
push
inc
adc
nop
xchg
mov
pop
xor
xchg
add
cltd
mov
xor
loopne
test
and
fimull
jle
je
mov
mov
push
clc
out
lods
ds
lods
inc
xor
data16
enter
icebp
push
lock
jmp
xchg
mov
xchg
mov
inc
in
inc
out
sti
xor
iret
popf
cmpb
fbld
insb
inc
inc
je
mov
movswl
or
sbbl
sbb
inc
push
xor
jno
inc
or
lcall
sbbl
faddl
mov
rclb
dec
daa
jg
sbb
cld
aam
fdivrl
cmpsb
mov
notl
add
sbbl
xchg
mov
add
clc
movzwl
lahf
pop
adc
orl
xchg
shrl
and
repnz
test
jecxz
enter
jg
dec
cmpsb
aad
sbbl
pop
call
decb
das
mov
push
mov
out
outsb
dec
xor
sbb
fidivrs
lret
das
fadd
fcmovne
inc
adc
cmp
rorb
jp
je
lds
sbb
push
lret
rclb
mov
popf
outsl
lods
fwait
xor
xchg
sbb
pop
mov
adc
test
push
cmp
and
iret
lock
jge
bound
loop
dec
mov
mov
push
xchg
daa
vpunpckhbw
mov
xchg
dec
int3
mov
into
adc
aas
lock
cmc
cmc
fdivs
cmp
data16
jnp
and
xchg
loop
fadd
jbe
outsl
xor
loopne
pop
in
jno
in
jno
testl
fwait
das
test
sbb
sub
adc
daa
negb
jl
daa
sub
rolb
cmp
aas
push
sbb
xor
mov
jle
cltd
insb
mov
out
mov
mov
dec
adcl
lock
adc
mov
dec
xor
sar
popf
into
adc
xchg
and
lock
sub
jmp
fidivrl
mov
mov
ret
xorb
out
sbb
xchg
ja
insl
mov
cwtl
test
xchg
mov
push
sub
mov
mov
or
in
shrb
into
fwait
jg
mov
mull
jbe
in
mov
into
push
leave
pop
pusha
outsb
mov
xor
cld
jnp
push
xchg
test
inc
mov
clc
fcomip
xchg
fstpl
and
testl
pop
or
or
lds
mov
test
imul
push
mov
xchg
ds
cmc
lds
sbb
inc
pop
clc
pop
inc
ret
jb
pop
rcrb
and
jge
gs
insb
jl
pop
repnz
pop
das
mov
and
fidivs
popf
iret
into
cwtl
push
daa
fsub
cmp
mov
fwait
test
jb
pushf
mov
rclb
std
popf
arpl
inc
or
add
sbb
mov
stc
das
pop
lret
imul
jmp
mov
add
xor
mov
cmc
jo
cmpsl
shrb
enter
xlat
or
add
add
sbb
sbb
test
cs
pop
in
mov
sub
dec
hlt
cmp
sbb
or
xchg
pop
dec
in
mov
mov
enter
add
sub
push
push
testl
nop
mov
adc
data16
cmpsl
lret
into
sbb
cmp
aas
mov
dec
int
mov
push
iret
pop
icebp
fwait
stc
test
fstpl
popa
xor
lret
push
pop
popa
cmc
or
adc
scas
xchg
out
gs
jl
dec
add
mov
mov
dec
or
fldl
lcall
aam
add
addb
xlat
xchg
loop
or
mov
imul
jne
add
inc
mull
and
lret
inc
xlat
xor
enter
jbe
ja
mov
iret
cwtl
mov
out
lods
dec
add
test
cmp
inc
popf
lea
arpl
fnstenv
add
cmp
cltd
je
daa
mov
sub
xchg
mov
cmpsb
test
popf
in
aas
inc
std
jne
jnp
mov
fscale
push
test
das
bound
sbb
sub
nop
insl
xor
loop
sub
sub
test
outsl
inc
ret
lcall
inc
mov
or
daa
cmp
mov
sbbl
cmc
adc
fsubrs
pop
in
outsl
int
push
jmp
lock
xor
data16
pop
jno
sbb
xor
aas
add
lods
or
bound
out
xchg
call
in
sbbl
subb
or
ret
repz
add
mov
imul
scas
mov
je
aas
popa
mov
es
pop
push
test
punpcklwd
add
sub
mov
pop
cltd
shrl
inc
dec
pop
mov
movsl
je
pop
and
inc
js
mov
lcall
pushf
cmpsl
setge
loop
fwait
lods
aas
adc
cli
aas
cmp
jmp
xlat
and
rcl
adc
call
sub
xchg
pop
pop
pushf
add
sub
icebp
sbb
push
cmpsb
mov
incb
push
js
ljmp
loopne
out
repnz
mov
outsl
cmp
in
push
lods
push
loope
jmp
xchg
mov
scas
popf
jp
inc
shlb
mov
jnp,pt
inc
fstl
mov
xchg
gs
aas
add
iret
fcmovnu
pop
pop
dec
add
bound
inc
andl
andb
test
push
xchg
scas
inc
aaa
xchg
or
into
adc
add
les
call
fidivs
pop
inc
stc
stos
mov
add
shrb
inc
lahf
push
arpl
sbb
adc
push
ds
xlat
jp
imul
fidivrl
arpl
inc
fs
mov
test
dec
out
cmp
xchg
mov
ret
sbb
dec
pop
bound
xchg
pop
movsl
adc
push
pop
out
mov
mov
xchg
push
cmp
in
mov
adc
xor
and
jecxz
adc
add
dec
push
dec
mov
fistpll
gs
idivl
stc
nop
mov
arpl
jge
bound
out
call
cmp
jbe
stc
test
add
cmc
sub
adc
loope
lods
cmp
jnp
inc
outsl
fiaddl
js
xchg
aas
pop
sarl
mov
ret
pop
sbb
loope
mov
adc
jmp
arpl
int
divb
scas
cmp
xchg
dec
in
dec
mov
test
pop
es
mov
mov
clc
test
xchg
and
mov
pop
lcall
push
lret
jle
jno
sbbl
rorb
js
or
xchg
popf
iret
data16
or
insb
mov
je
xchg
lods
scas
jb
mov
fldt
mov
hlt
out
aam
lret
nop
str
pop
scas
cmp
and
push
movsl
pop
leave
pop
aaa
icebp
mov
and
mov
push
cmpsl
push
test
shl
jge
xor
add
shlb
sub
cs
aas
inc
add
push
xor
mov
pop
push
cmp
mov
test
aam
inc
and
mov
mov
test
por
fs
loopne
sub
rcr
in
cmp
sub
fcmovnu
les
sbb
xchg
add
into
inc
jecxz
vrsqrtps
insb
mov
add
inc
in
inc
sahf
sub
cmpl
jle
dec
inc
inc
jp
sub
outsb
pop
jecxz
lret
cld
daa
test
cmpsb
xor
fidivl
pop
sub
pop
mov
jnp
jo
negb
sbb
and
pop
mov
enter
sbb
lea
push
cmc
jle
cmpsb
lret
shr
push
pop
leave
inc
fcoms
clc
stc
int3
scas
mov
jb
add
cmc
orl
push
jbe
dec
xor
xor
js
sbb
inc
jge
movntps
sub
test
call
je
outsb
shll
insb
scas
pop
mov
adc
cli
pop
pop
lret
xor
mov
adc
lods
stos
jne
pop
cmpsl
dec
cmp
stos
pop
mov
stc
je
movsb
pop
inc
xchg
xor
lahf
outsb
sub
cmpsl
jg
mov
fistl
subl
mov
dec
fildll
scas
and
add
ja
cltd
push
jb
subl
and
fimull
lock
int3
aad
into
pop
and
xor
add
dec
jl
sbb
popf
pop
roll
inc
jecxz
insb
jle
in
jmp
sti
push
test
or
adc
mov
insl
xchg
jno
mov
call
pop
and
mov
dec
jecxz
add
xchg
xchg
mov
popf
jnp
adc
repz
xor
add
pop
xchg
push
inc
xor
test
das
repnz
pop
cmp
dec
push
xor
push
pushf
xor
xchg
dec
sbb
mov
enter
mov
clc
cmp
xor
bound
mov
lods
mov
stc
and
mov
mov
xchg
push
cwtl
push
push
outsb
loopne
inc
rcrl
xor
or
xchg
dec
iret
pushf
xchg
movsl
xchg
cmp
jle
in
dec
stos
mov
shrb
movsb
or
sub
inc
pusha
mov
inc
aas
fsubl
or
mov
arpl
push
sahf
push
out
in
xlat
scas
lcall
mov
mov
pop
xor
pop
pop
adc
cmpb
sub
mov
inc
lds
push
jge
aad
mov
shll
ljmp
ficoms
xor
mov
imul
inc
aam
icebp
fsubl
jae
mov
cmp
leave
ret
jne
cmp
cmp
mov
and
sbb
or
sub
dec
shlb
mov
adc
xor
lret
mov
out
cltd
cmp
jae
mov
sub
mov
and
into
add
inc
adc
and
fildl
and
jmp
into
iret
call
and
sub
mov
xor
add
cltd
xchg
push
mov
arpl
aaa
iret
jne
lea
sti
mov
movsb
fnsaves
icebp
mov
push
push
mov
mov
xor
pop
ljmp
add
imul
cs
enter
clc
cltd
or
mov
lods
mov
pop
add
mov
ljmp
shlb
jmp
imul
inc
les
push
jne
cmp
and
jmp
repz
cmp
mov
push
inc
int3
push
push
call
adc
stos
inc
pop
stc
push
pusha
addl
push
adc
sub
inc
mov
add
add
mov
jns
sahf
jae
les
xlat
scas
aad
mov
or
add
cltd
ret
pop
rcrb
jl
add
cwtl
in
inc
inc
outsl
std
bound
dec
sarl
push
cmpsl
cmp
insb
arpl
jns
iret
fs
loopne
add
test
leave
pop
push
fists
arpl
pop
add
ret
dec
pop
dec
test
mov
add
xor
and
mov
jmp
inc
pop
cmp
orl
std
cs
lock
fidivs
adc
ret
daa
mov
push
pop
jnp
mov
mov
jnp
out
add
or
pop
dec
adc
xchg
orb
jmp
jo
leave
pop
push
fimull
mov
loopne
push
ljmp
inc
push
push
pop
leavew
add
or
mov
outsl
sub
outsb
ds
or
rcll
mov
mov
in
sbbl
pop
adc
pop
enter
js
mov
cmpsb
xor
cmpsb
pop
cmp
jge
scas
mov
push
add
pop
adc
jno
cli
push
and
mov
mov
decb
cs
pop
xchg
out
cmpsl
xor
and
cs
outsl
roll
stos
les
jno
xlat
inc
cmpxchg
clc
pop
repz
dec
std
nop
sarl
dec
push
mov
mov
shr
push
mov
loop
and
adc
sub
ficoms
xchg
out
vaddps
daa
cmp
arpl
xchg
stos
jo
jb
pop
and
mov
mov
sub
das
repnz
and
mov
inc
and
kxorw
cltd
cld
lock
jae
into
cld
push
adc
fcmovb
repz
aad
hlt
pop
out
adc
mov
and
es
mov
mov
into
in
jmp
pop
mov
shrl
in
sahf
push
jmp
rolb
rolb
shrb
push
sti
je
cmp
mov
subl
and
mov
adc
or
test
push
ss
fmuls
popa
out
fsts
addl
cmpsl
mov
jecxz
dec
mov
push
cmp
and
mov
push
cmc
test
scas
xor
ljmp
test
out
jb
das
push
lahf
mov
fcmove
fildll
sarb
ret
call
repz
add
jp
cmp
xchg
jge
mov
sbb
dec
scas
dec
push
push
outsl
outsl
adcb
mov
nop
mov
adc
push
cmp
stos
mov
fucomi
rcrl
mov
mov
fs
cs
subb
xchg
sbb
dec
pop
mov
insl
sti
lret
lret
sub
jmp
test
jbe
jp
pop
scas
rolb
and
and
push
pop
sbb
push
mov
mov
addr16
imul
sbb
sub
or
sbb
rcrb
push
lods
in
xchg
add
dec
mov
xlat
cmc
adc
out
lahf
sbb
adc
lret
hlt
imul
sti
aaa
bndstx
mov
insl
sub
mov
loop
fisttps
pop
dec
jno
data16
aaa
push
jb
int3
stos
sub
or
jle
dec
inc
pop
ja
ljmp
push
pop
loop
push
ds
cmp
aas
pop
push
in
lds
mov
mov
pusha
aad
loope
mov
loopne
or
sarl
pop
das
push
imul
jns
jns
mov
loopne
add
dec
cmpsb
lea
xchg
cli
cmc
shrl
imul
std
mov
jp
xchg
jnp
adc
sub
outsl
xchg
add
jp
mov
out
in
arpl
imul
add
dec
add
push
in
aad
or
shl
or
pusha
cli
push
test
test
out
faddp
dec
sub
add
xor
roll
mov
mov
sub
int
xor
lret
jl
jge
movsb
popf
test
xchg
push
mov
cmp
ficompl
cltd
adc
jo
test
sub
fmull
add
jle
pop
xor
loopne
fisubs
cmp
hlt
mov
or
out
xchg
add
mov
int3
mov
imull
rclb
mov
add
movsl
aad
jmp
push
mov
aaa
or
fidivl
sub
clc
sar
cmp
jmp
clc
hlt
andb
inc
leave
inc
cli
jae
aaa
fnstcw
and
divb
scas
mov
mov
insl
imul
push
jg
in
and
orl
shl
ret
shrb
sbb
sub
lock
lcall
hlt
je
fisubrl
into
and
add
out
push
push
xchg
pop
mov
pusha
pushf
push
push
ljmp
mull
xor
push
or
arpl
mov
dec
aas
stos
daa
mov
daa
mov
xchg
insl
test
hlt
push
push
pop
das
lock
lret
and
or
fstl
test
sbb
jl
std
ds
faddl
inc
push
dec
sbb
jb
icebp
into
fcmovbe
sbb
and
in
mov
adc
lahf
jnp
mov
mov
push
insl
out
addr16
xor
xor
testb
add
ror
ss
pop
fisubs
hlt
loope
repnz
push
inc
or
and
sub
mov
pop
xor
dec
sahf
and
inc
fwait
lock
pop
pop
test
notb
jns
dec
and
fadd
xchg
jb
movsl
test
dec
adc
cmpsb
sub
mov
xor
jae
dec
add
sbb
test
mov
xor
sti
cmp
cmp
push
imul
sti
add
dec
push
lods
hlt
adc
iret
mov
sarb
fdivl
cmp
imull
dec
test
fcomp
imul
loope
pusha
cli
mov
stos
movsl
sti
sahf
sbb
xchg
mov
aad
lods
adc
fidivs
divl
adc
cmpsb
in
mov
mov
loop
xchg
cmp
mov
add
jle
lret
pop
adc
fnstenv
dec
fld
loope
rcl
mov
mov
adc
or
or
jo
adc
sub
lahf
repz
lahf
mov
call
pop
fwait
incb
cmp
scas
rorb
pop
test
lret
sti
negb
sub
pusha
outsb
cltd
loope
xor
test
push
mov
jo
and
xchg
push
sysexit
sbb
push
xchg
rdtsc
test
inc
sahf
push
shll
mov
or
test
and
mov
add
xchg
repnz
scas
loopne
repnz
stos
gs
cmp
mov
push
stc
popa
sub
out
jo
push
mov
or
cmp
aad
sub
scas
testb
mov
shrb
adcb
mov
jb
pusha
stc
pusha
sbb
cld
mov
mov
xchg
sbb
cmp
push
scas
std
sbb
sbb
mov
lea
mov
mov
lret
ret
sbbl
mov
or
call
jle
jmp
push
adc
cmpsb
xchg
push
push
and
jbe
sub
arpl
hlt
outsl
jns
push
or
sub
mov
xor
inc
push
fwait
test
popa
clc
jp
and
cwtl
sbb
cmpsb
pop
cwtl
das
adc
ss
fs
adc
pop
dec
in
jmp
pop
cs
jbe
sbb
movsb
sahf
xor
shll
and
lcall
test
adc
sub
push
std
dec
bound
mov
inc
jmp
xor
sub
pop
addl
test
mov
xor
cmp
imul
cld
fisttps
cltd
or
ja
das
mov
stos
lods
jmp
cmp
jecxz
or
add
popa
inc
in
xchg
cmpsl
xor
mov
xor
imul
dec
insl
andl
cmp
outsl
fdivr
mov
xchg
subb
cmpsl
inc
les
jle
mov
push
sbb
in
call
cmpsl
jmp
das
add
mov
mov
rorb
insl
ja
fwait
pop
or
xor
pusha
clc
cltd
cld
dec
pop
fld1
rcrl
inc
pusha
das
dec
loope
lods
dec
mov
jp
and
mov
loopne
adc
mov
je
and
sarl
xchg
inc
xchg
mov
cmp
inc
dec
pop
pop
std
sbb
push
push
jmp
push
adc
add
mov
inc
xchg
out
jb
out
add
push
pop
xor
mov
mov
xchg
lock
adc
gs
fwait
cwtl
inc
pop
mov
in
mov
push
fs
push
repz
sbb
dec
mov
ror
insb
insl
rcr
mov
loop
jg
aas
dec
sub
dec
dec
mov
add
mov
cmc
rdmsr
fs
sub
xchg
loop
xchg
push
jns
shlb
sub
outsl
and
test
notb
push
adc
xchg
push
sub
loop
adcb
in
popf
pop
fiaddl
imul
popl
jbe
aam
xchg
sarl
jmp
aam
inc
lds
test
call
or
jb
or
pop
mov
mov
scas
mov
out
lret
js
sub
jp
pop
jb
jnp
mov
faddl
xchg
repnz
gs
movsb
mov
mov
add
pop
add
out
inc
mov
mov
stos
roll
add
push
or
lret
mov
sbb
pop
repz
test
jge
mov
add
ficompl
pusha
ss
jmp
ret
xchg
stos
adc
push
movsb
outsb
rcll
cmpsl
push
mov
or
mov
lods
mov
insl
mov
add
push
ret
pushf
ljmp
pop
and
pop
bound
leave
repz
int3
mov
addr16
data16
and
je
movsb
int
in
std
sbb
sub
gs
outsl
stc
push
mov
or
dec
sbb
jge
pusha
out
in
mov
insb
divl
arpl
ret
and
cmp
outsl
mov
jge
lea
loopne
inc
popf
xchg
xchg
hlt
cmpsb
xchg
sbb
mov
mov
shr
mov
iret
movsl
push
push
and
test
rorl
movsl
jl
push
xor
imul
sub
enter
cmpb
loop
imul
mov
and
popf
repnz
sub
dec
jecxz
add
dec
imul
push
push
xor
int
pop
fidivs
sbb
push
adc
popl
icebp
xchg
popf
sbbl
cmc
adc
hlt
inc
sub
cmp
jnp
out
xchg
and
hlt
pop
xor
push
cmp
test
sahf
sti
loop
mov
aas
mov
inc
cmp
jle
cltd
scas
cmp
js
out
movsl
ret
daa
lds
in
adc
and
ja
xchg
jo
add
add
in
sub
inc
lods
bound
test
mov
mov
rorb
daa
sbb
mov
cld
xchg
scas
xor
dec
loopne
jnp
and
cmpsb
in
test
repz
and
mov
loopne
mov
xchg
xor
or
pop
adc
mov
dec
lcall
aaa
push
cld
sti
or
leave
inc
pop
sbb
shll
gs
lock
cmpsb
dec
or
outsb
pop
sub
in
mov
aaa
lock
lods
pop
cmpsl
stc
xchg
dec
sub
cmp
nop
in
call
and
lock
into
mov
adc
sbb
int
movsl
fcoms
add
cmp
imul
mov
cmp
mov
jecxz
sub
add
push
sbbb
jg
mov
sub
pop
add
cs
pusha
mov
lcall
push
popf
dec
pop
fildl
and
dec
es
cmp
and
pop
sub
jbe
add
mov
mov
pop
cwtl
das
dec
popf
in
or
dec
shlb
pop
hlt
jbe
fidivs
push
movsb
setg
cld
fldcw
add
rcrb
insb
xchg
les
std
int3
arpl
add
outsl
ljmp
xlat
mov
or
popf
insb
xchg
or
fwait
mov
jl
aas
insl
add
pop
jg
push
out
mov
jbe
sub
mov
mov
mov
lret
push
mov
fdivrl
cltd
std
aam
jne
or
fcoms
test
cmp
push
xchg
les
mov
xchg
mov
les
mov
inc
pushf
arpl
sub
lods
and
scas
insl
mov
adc
cld
mov
rcll
lcall
or
leave
dec
lds
leave
out
xchg
cwtl
inc
mov
mov
or
aam
xchg
mov
pusha
xor
cmpsl
ficoml
push
outsb
cmp
and
pop
xchg
inc
adc
test
ja
das
dec
lea
ljmp
mov
sbbb
mov
cmp
outsl
ja
mov
fidivrs
ljmp
std
dec
push
int
lahf
out
js
add
jno
arpl
jp
testl
insl
lods
push
stos
out
adc
movsb
jno
or
rcl
jbe
scas
mov
pop
push
inc
mov
ja
mov
mov
sub
adc
or
xchg
jne
mov
addb
ret
ret
xor
bound
xchg
push
xor
or
aam
inc
push
jbe
popf
test
pop
push
push
mov
jbe
push
lds
ljmp
fdivp
inc
imul
push
sti
mov
scas
lea
mov
and
loope
pop
cli
fmull
jmp
aad
inc
mov
ja
lock
scas
cmp
out
sbb
push
rclb
jge
xor
add
hlt
mov
or
ds
mov
and
xor
mov
xor
sbb
in
inc
xor
adc
ret
push
mov
ss
lods
icebp
mov
in
inc
cwtl
xor
pop
jbe
sahf
shl
incb
nop
cmp
push
cmp
shrl
loope
arpl
jp
jp
mov
cmp
sbb
movsb
mov
cmp
out
mov
in
das
xor
in
cld
mov
add
cltd
movsb
pop
sbb
lcall
xchg
mov
xchg
sbb
arpl
xchg
jns
inc
sahf
mov
mov
js
mov
cmp
in
sbbl
adc
pop
sbb
insl
add
pop
rcll
popf
aad
movsl
daa
jb
jle
jecxz
jp
hlt
pop
jb
les
int
ficoml
jmp
lods
lods
xor
mov
xorb
mov
and
jnp
sbb
jnp
lock
lea
stc
mov
adc
test
movsl
data16
shl
adc
xorl
stos
cmp
sbb
mov
mov
leave
ss
pushf
xchg
test
mov
inc
mov
adc
testl
mov
data16
xchg
enter
xlat
std
jns
loopne
mov
inc
xchg
inc
aad
jno
into
icebp
or
lock
sub
jg
jo
inc
pop
lahf
and
js
mov
mov
xchg
push
or
pop
mov
pushf
fxch
sahf
ds
mov
mov
iret
fstpt
add
pushf
icebp
outsl
jg
push
lods
into
ss
push
inc
rcrb
cld
insl
daa
in
lret
jns
imul
loope
xor
int
in
push
xor
adc
int
xor
xor
arpl
cmp
les
nop
icebp
mov
push
push
jno
fisubrl
movsl
int3
dec
xchg
int
pop
pop
sbb
xor
xchg
sti
fwait
out
add
and
cmpsl
sub
and
insl
ja
and
mov
scas
repnz
leave
pushf
adc
data16
mov
jbe
inc
sub
sahf
aaa
push
jnp
mov
cld
push
add
stos
orb
mov
pop
imul
jle
test
lds
inc
arpl
shl
mov
jne
int3
pusha
adc
arpl
cmpsb
insb
cmp
out
push
mov
and
rolb
mov
ja
scas
ss
cltd
out
cwtl
loope
dec
out
xchg
push
lock
popf
outsl
aam
cmpsb
and
mov
dec
imul
call
daa
adc
jns
mov
fnstsw
push
int3
icebp
enter
dec
xor
in
cld
jne
loopne
addr16
xchg
fsts
mov
mov
das
jnp
adc
aam
mov
shll
jo
jae
mov
jb
lock
pop
xor
pusha
stos
incl
dec
sbb
scas
mov
and
and
fucomip
inc
jbe
lea
insl
xchg
push
lcall
cwtl
and
pop
mov
pop
xchg
stos
cs
mov
pushf
push
pop
into
lret
call
pop
lret
loope
mov
xchg
push
movsl
insl
mov
jnp
pusha
or
mov
repnz
xchg
and
xor
shr
mov
in
mov
cmc
jo
mov
xorb
sbb
jmp
sbb
jbe
ja
gs
scas
das
dec
jbe
loop
mov
in
dec
popf
adc
mov
outsl
daa
cmc
call
pop
divb
pop
ds
out
clc
loope
dec
pop
in
sub
add
outsl
std
ss
add
mov
loopne
ss
jmp
rcrl
jnp
insb
adc
stos
lds
data16
and
sbb
push
push
adc
xor
mov
or
fdivs
dec
ds
xchg
add
push
cmpsl
imul
mov
xchg
cmpsl
push
add
xor
mov
jnp
in
lcall
push
inc
adc
or
jb
imul
sbb
xchg
sub
inc
and
mov
push
xor
mov
push
movl
adc
fcmove
add
psraw
push
aas
aad
pop
xor
dec
inc
loope
jbe
bound
push
popf
test
and
adcb
shll
fistpl
jmp
inc
sub
imul
mov
sahf
xchg
test
xchg
mov
sbb
notb
adc
mov
test
stos
out
push
fstps
jg
push
stos
ss
push
jnp
mov
out
push
into
push
fstpl
cltd
sbb
popf
leave
push
xchg
sbb
out
push
mov
data16
in
push
out
pop
sbb
lods
jae
stos
cmp
add
fisubrs
lahf
jge
dec
loop
or
stc
push
imul
test
repnz
push
pop
adc
xchg
xor
inc
mov
fstpt
mov
popf
pop
cmp
ret
sub
jg
xchg
adc
test
push
leave
and
rcr
push
inc
js
mov
out
push
inc
inc
push
lret
push
mov
shrl
mov
in
mov
inc
fmulp
test
ja
inc
loop
xchg
jnp
loop
addr16
call
into
mov
stc
cmp
ja
pop
rcrl
outsb
decb
int3
imul
stos
mov
fldt
icebp
push
vcvtsi2sdl
adc
adcl
incl
cltd
int
sti
fwait
push
idiv
mov
imul
subb
ss
or
adc
jl
push
pop
jb
xchg
fs
dec
adc
popl
xor
push
add
xchg
sub
push
pop
or
in
push
mov
js
cmpsb
push
push
outsl
jp
push
imul
adc
jae
pop
mov
orb
aaa
lea
movsl
push
aam
test
xlat
hlt
xchg
dec
gs
xchg
lcall
xchg
dec
cmp
pusha
fwait
push
stos
xor
repz
sub
ror
repnz
int3
lret
mov
loop
repnz
mov
inc
out
mov
fcmovnu
imul
imul
rcl
add
lock
nop
push
into
jmp
ja
mov
ret
movl
inc
pop
sbb
adc
mov
fs
sub
inc
fbld
xchg
or
test
fsubrs
popf
mov
xor
pop
mov
in
orb
xor
pop
fs
fildll
push
add
mov
mov
adc
scas
cwtl
out
loop
scas
arpl
stc
in
test
cmc
mov
add
ds
in
mov
mov
mov
cld
aas
das
add
ja
and
cmp
cld
imul
cmp
bound
jl
les
lcall
cmp
xchg
mov
sbb
and
insb
push
jnp
pop
mov
add
insb
ds
mov
repnz
data16
xchg
iret
aaa
fwait
add
cmp
dec
xor
cmpsb
loop
jl
pop
inc
ret
jo
mov
arpl
in
or
cmp
mov
stc
popf
jnp
push
mov
xchg
dec
push
pop
push
sbbb
xchg
aaa
mov
xor
stc
out
cmp
out
sbb
dec
packssdw
sbb
xor
outsl
or
cld
arpl
loop
lods
stos
mov
test
push
dec
mov
jg
xor
rorb
fstl
lahf
dec
iret
loope
pop
cwtl
fsubrl
push
inc
cmc
xor
pop
lret
imul
sub
fcmovbe
repnz
outsl
add
add
cltd
lret
push
dec
fnstsw
jge
mov
mov
lock
pop
sub
jge
sahf
divl
out
pop
cmp
cmp
push
add
jnp
and
xchg
out
into
cmc
fmull
test
add
add
mov
push
jo
pop
dec
add
lock
add
adc
mov
jg
enter
lea
pop
pcmpeqb
xor
sbb
inc
iret
orb
imul
sbb
jne
ja
mov
ljmp
sbb
add
int3
cmp
pop
mov
in
or
sub
xorb
and
mov
dec
out
or
clc
adc
insl
test
add
inc
enter
mov
push
aas
pop
adc
outsb
mov
pop
mov
fistpll
shrb
adc
jmp
je
je
pusha
cld
psubusw
xchg
iret
dec
add
mov
jge
arpl
mov
jecxz
aam
outsl
and
sbb
rcrb
in
in
xor
mov
inc
sbb
sbb
jg
mov
xchg
nop
mov
jmp
mov
hlt
jle
aad
dec
mov
hlt
or
aas
and
iret
stos
xchg
sahf
call
mov
pushf
divb
sti
es
fs
xchg
ljmp
sahf
clc
jle
into
sbb
lahf
sbb
rcrb
sbb
cmc
enter
popa
fs
jle
inc
cwtl
pop
push
cmpsl
ret
mov
loope
xchg
push
outsb
mov
imul
cmp
mov
out
arpl
stc
mov
inc
push
test
stos
push
fwait
jno
rcr
inc
jmp
push
movsb
push
mov
add
and
push
cwtl
mov
xchg
lcall
aaa
out
test
mov
mov
ljmp
cmp
xor
sbb
xor
xchg
and
mov
dec
in
sbb
cmp
mov
ficoms
inc
sub
cmpb
shrb
xchg
mov
mov
mov
mov
pop
repz
mov
xchg
and
loope
lret
cld
stos
lock
das
and
iret
sbb
call
stc
mov
test
movsb
in
orb
jp
enter
mov
or
insl
mov
dec
cmp
or
adc
add
lret
mov
mov
add
mov
cmc
mov
mov
adc
add
in
mov
mov
push
jns
iret
lcall
inc
add
test
cld
mov
push
jmp
nop
shll
pop
nop
pop
xor
sub
add
mov
jl
xchg
sub
sahf
push
cmc
mov
mov
pop
cmp
mov
mov
pop
pop
mov
mov
xor
repnz
jns
insl
sbb
pop
pushf
sub
push
dec
rcl
jne
movsl
icebp
in
stos
or
leave
jne
out
pop
mov
dec
daa
addr16
adc
sbb
xor
add
xor
test
push
out
test
cmp
aam
push
lahf
aas
hlt
mov
rcr
repnz
jo
cmp
andl
sbb
mov
cmc
shld
sub
push
rcl
inc
or
jg
pop
out
shlb
in
test
cli
test
dec
mov
int
cs
ret
adc
add
in
xchg
xchg
repnz
mov
sbb
push
sbbb
dec
add
and
nop
pop
push
jp
jg
lea
xor
lcall
sbb
aad
or
or
mov
hlt
add
fadd
mov
repz
fiadds
xchg
mov
rcl
ret
and
dec
or
lods
cmpb
daa
push
adc
jo
faddp
add
adc
xchg
sub
insb
ret
or
pop
dec
cs
mov
outsb
mov
dec
shll
inc
lcall
add
mov
push
mov
pop
pop
mov
in
je
cwtl
adc
and
inc
mov
mov
mov
push
popf
add
cmp
test
dec
inc
jnp
les
fldcw
dec
pop
es
test
dec
lods
inc
jnp
push
test
and
sbb
or
mov
lds
mov
mov
xor
and
lods
js
add
daa
xchg
js
inc
and
out
stc
xchg
repz
rolb
ja
adc
xor
pop
clc
or
mov
dec
push
scas
stos
pop
jo
jns
cmc
stos
clc
rcr
or
sbb
mov
mov
out
inc
popa
jns
sbb
cmpsl
notl
test
fwait
mov
mov
pop
jl
inc
mov
scas
out
bound
mov
bound
pop
shll
ja
fbld
jl
out
cmp
mov
or
test
fildll
insl
or
enter
shlb
daa
mov
cs
scas
jns
je
mov
pop
push
or
pop
xchg
loope
lock
cmp
sub
aas
rol
idivb
mov
loope
inc
lods
adc
pop
jl
stos
insb
mov
xor
dec
pop
mov
test
mov
push
add
jne
xor
cmp
or
lods
fmuls
fwait
jge
lods
outsl
mov
push
inc
lret
sub
popf
dec
hlt
pop
popf
cld
sub
push
lret
sub
or
pop
out
mov
repz
adc
stos
ljmp
test
js
in
add
xchg
inc
jno
hlt
sub
mov
outsl
cmp
lcall
pop
stos
nop
ljmp
mov
fcomip
mov
lods
push
ljmp
mov
mov
testb
ljmp
fcomp
add
aaa
push
jnp
mov
mov
sub
int3
inc
stc
mov
bound
cmp
mov
lods
ret
cmpsl
fisubl
or
enter
and
psrad
fistpl
icebp
sub
data16
lret
sbb
jb
movsl
mov
mov
jo
lret
popa
sbb
pop
sub
sbb
mull
into
ds
movsb
bound
inc
test
xor
cmp
push
fbstp
sbbl
mov
negl
sbbl
mov
cmp
popa
sarb
dec
cpuid
xor
pop
pop
xchg
inc
dec
repz
lods
rorl
mov
pop
test
pmaxub
adc
jmp
jnp
sub
sbb
lock
xchg
scas
in
pop
dec
adcb
shrl
aam
repz
mov
mov
jb
sbb
adc
shll
dec
cmpl
sub
pop
aaa
movsl
mov
cmp
cmp
lods
adcl
lahf
jne
lds
add
sbb
pop
leave
cwtl
sub
pop
xor
iret
cltd
ljmp
mov
jae
shll
sub
mov
sub
fdivs
fwait
ret
mov
shl
fnstcw
divl
rcrb
or
xchg
loop
outsl
and
lods
push
lret
cld
xor
lret
adc
jnp
cmp
icebp
je
rcrb
outsl
sbb
or
and
mov
test
lea
imul
test
je
sub
and
push
xchg
sbb
push
pop
sti
or
repnz
ficompl
mov
push
mov
inc
dec
jecxz
cmpsl
mov
add
jns
mov
int
dec
sti
or
add
fs
xor
jp
mov
push
cmp
mov
or
mov
xor
xor
push
subl
pop
inc
fdivrs
iret
inc
pop
stos
xor
xorl
das
lcall
sbb
cmp
sbb
ror
ja
jb
cmpsb
sub
in
stc
sub
lds
jle
mov
mov
addb
mov
jo
adc
test
sti
fwait
clc
jmp
out
xchg
sbb
push
inc
cmp
shlb
push
sub
addr16
imull
mov
cwtl
xor
add
dec
in
xor
sub
mov
pop
ficoml
dec
mov
jae
mov
aad
inc
pusha
ds
mov
adc
xor
js
or
xchg
data16
mov
fisubrl
mov
adcl
fs
lcall
pushf
sub
cmp
mov
out
daa
inc
xchg
aam
jae
sete
xchg
sub
jae
sub
pop
mov
insb
cmp
loopne
jne
out
and
jae
in
and
loop
dec
test
in
lret
adcl
pop
and
je
lock
inc
sbb
inc
adc
clc
aaa
jae
dec
xchg
aad
loopne
pop
xor
jae
mov
mov
scas
pop
xchg
adc
nop
xchg
xor
xor
loope
imul
cltd
dec
lcall
jb
cli
xchg
push
xchg
mov
xchg
psubusw
xor
repnz
rcrb
test
pop
jp
ljmp
jne
outsl
cmpsl
out
aad
aad
xchg
add
sti
jbe
lods
sbb
push
jo
sbb
cli
xchg
js
test
das
adc
out
sub
shlb
leave
mov
dec
pop
xorb
lods
je
imul
fstl
mov
and
lret
pop
pop
inc
xor
in
test
loope
lods
inc
roll
push
hlt
aam
shr
mov
jl
stos
mov
xchg
xor
xorb
pop
jb
cmc
imul
shrb
adc
cmp
adc
shrl
pop
dec
lds
cld
mov
add
cltd
cltd
push
mov
jle
inc
test
data16
mov
add
je
icebp
aad
xchg
fidivs
shll
mov
lcall
push
loop
xchg
adc
movsb
xchg
inc
sti
scas
dec
lods
mov
ss
ja
ret
lahf
sbb
lock
es
xchg
inc
inc
negl
jge
xor
push
mov
repnz
adc
mov
les
out
cmc
xlat
loop
pop
rcll
clc
add
dec
xor
cli
push
insb
adc
cmpsl
imul
mov
scas
sbbl
push
pushf
lahf
cld
fstpt
data16
in
add
add
sbb
fs
arpl
test
inc
test
fs
xchg
dec
andl
in
js
ret
sti
test
movsb
lea
shlb
loop
shl
mov
loopne
pop
sbb
jge
jge
addl
mov
shll
in
jge
popa
clc
mov
cli
or
test
and
sub
jo
js
adc
and
das
sbb
cmp
jns
inc
into
daa
mov
add
or
sbb
nop
inc
lds
vpcmpgtd
loopne
push
mov
pop
sbbb
repnz
lahf
inc
clc
repnz
dec
push
sbb
mov
push
dec
push
jmp
mov
jmp
mov
inc
fisubrs
pop
popf
pop
xlat
push
cli
sub
jl
call
in
pop
adc
adc
cmp
std
xchg
adc
sbb
pop
add
or
sbb
loop
sahf
xor
jnp
push
je
in
add
movsb
mov
ficoms
pop
fucomp
mov
cmpsb
int
xlat
ljmp
data16
ficomps
mov
inc
jle
mov
cmc
fisttpl
add
or
xor
stos
or
jmp
dec
pushf
fcmovne
and
test
cmpsl
push
mov
mov
dec
xchg
mov
jmp
inc
mov
aad
push
dec
enter
cmp
and
in
outsl
adc
fucom
jp
mov
and
add
xorl
lret
mov
rol
and
stc
dec
mov
pop
lret
cltd
push
ljmp
jno
sbb
and
xor
cmpsb
jo
cmp
test
push
in
incb
lock
pop
sub
mov
add
xlat
into
jge
sub
imul
in
movsb
leave
loope
ret
repz
and
aas
xchg
inc
cltd
fistl
inc
cmp
daa
inc
imul
fnstcw
mov
frstor
push
movsl
push
push
stos
pop
push
sub
jle
std
push
mulb
into
gs
push
popf
jp
bound
fisubrl
in
aad
mov
mov
jmp
dec
addr16
inc
rcrl
negl
xlat
ljmp
mov
mov
in
jb
ss
jmpw
xchg
fucomip
xchg
jnp
ljmp
pop
fildll
sub
and
pop
fsubr
xchg
cmp
rcll
rol
fidivs
int
xchg
aas
fdivr
lcall
clc
and
push
rcrl
lock
ror
cmpsb
dec
pop
pop
lret
movsl
mov
and
cwtl
pop
into
inc
mov
xor
jne
add
xor
popa
aas
cmpsl
pop
out
pop
into
in
sahf
xor
fs
sub
lret
mov
dec
sbb
aaa
fldl
ja
mov
xchg
xchg
repz
lret
lds
popf
pusha
out
out
ret
int3
fdivl
push
sbb
pop
adc
rol
mov
insl
mov
insl
fildll
dec
js
sti
fwait
jnp
push
dec
lods
pushf
and
enter
cwtl
sbb
push
sbb
mov
mov
dec
mulb
cmp
lcall
test
cmpsb
fidivl
pop
andl
cltd
add
pop
dec
shrb
std
push
insb
jle
cmpsb
sti
std
jg
mov
aad
stos
adc
hlt
pop
jne
fnsave
cwtd
inc
sbb
js
in
and
rdpmc
dec
push
test
fwait
jno
adc
lock
lret
or
add
addr16
rol
and
and
ss
push
mov
jns
inc
fs
push
imul
in
bound
ss
lcall
sbb
cmpsl
push
xchg
shlb
mov
jge
mov
dec
ss
sub
scas
mov
sub
add
cltd
sbb
add
icebp
cmp
mov
sbb
sub
faddp
popa
pop
xor
pusha
cmpsb
mov
icebp
cli
fimuls
mull
stc
ret
mov
mov
popf
xorb
movsl
fwait
cld
pushf
out
xor
test
pop
pop
pop
dec
mov
in
mov
out
daa
andb
mov
jb
lcall
adc
jae
pop
mov
dec
popf
aam
and
add
jmp
shrb
lret
and
popa
add
adc
mov
fbld
add
and
aaa
mov
sbb
aas
xor
sti
dec
shll
or
push
or
sbb
xchg
cmp
mov
jle
rcrl
ret
popl
mov
cmp
inc
dec
or
mov
inc
fwait
push
pop
mov
push
or
aad
xor
mov
jo
xchg
out
clc
add
movsb
mov
shll
cwtl
test
push
push
xchg
leave
pop
rcrb
inc
js
je
pop
icebp
pop
jno
add
fisubrl
mov
or
adc
mov
sbb
sub
push
lock
push
sub
and
push
mov
jae
jmp
iret
pop
pusha
xor
fs
inc
mov
leave
mov
clc
roll
addl
adc
and
or
lret
sbb
mov
in
shl
insl
inc
pop
fwait
shrb
pop
ret
dec
loop
aas
jb
out
cmp
xor
stos
xlat
outsl
and
enter
cmp
mov
pop
loope
aad
jp
mov
insl
inc
cmp
call
or
xor
sub
mov
leave
inc
xchg
sbb
mov
sbb
jle
das
mov
fists
xchg
add
pop
pop
add
add
popf
jae
dec
jae
popf
movsb
jl
nop
lcall
in
repnz
mov
js
push
cli
pmulhuw
sti
popa
pop
in
aam
call
mov
je
jb
xchg
xchg
xor
jno
call
int
lahf
or
sub
fwait
das
jo
and
sub
or
lret
pop
xchg
rcrb
push
stc
dec
add
push
xor
xor
push
push
inc
insb
sarl
push
xor
popf
inc
aas
jecxz
add
rclb
pop
cld
xor
rorb
loop
push
stos
es
xchg
mov
and
bound
mov
jge
push
aaa
jo
dec
and
sbb
mov
imul
push
out
sbb
pop
inc
scas
int
insl
aam
mov
inc
dec
cs
mov
xchg
or
insl
fnsave
out
dec
xchg
mov
lods
jb
std
aas
pop
mov
dec
push
in
cmp
push
inc
popa
stc
mov
negb
ds
ss
pop
inc
push
push
cwtl
pop
xor
scas
mov
jae
imul
shll
out
iret
loop
adcb
mov
xor
mov
pop
ja
add
or
or
xor
inc
sti
stc
xchg
dec
scas
enter
mov
jp
mov
lds
adc
fildll
cmp
dec
cmp
xor
xchg
dec
movsb
mov
popf
sub
into
fdivrs
add
dec
jns
nop
stc
fimuls
addb
in
inc
into
xor
xor
dec
in
pop
push
outsb
sbb
add
inc
aas
adc
inc
in
mov
movsb
dec
xlat
scas
xor
and
dec
data16
push
ljmp
pop
fisubrs
sub
mov
mov
aas
sahf
mov
and
adc
sub
inc
imul
mov
mov
sub
jp
shlb
and
xchg
js
enter
xchg
out
sub
leave
jae
in
enter
mov
testl
sub
out
ret
daa
dec
pop
or
cmp
lods
pop
xlat
movsb
loop
xchg
add
mov
les
in
pop
xor
sbb
clc
mov
dec
xchg
sub
cmpsl
xor
mov
ret
sti
xchg
push
push
sbb
leave
loop
into
adc
inc
and
mov
inc
and
out
sub
enter
lods
sub
dec
out
dec
movsl
inc
push
ljmp
enter
pop
loope
pop
ds
test
dec
icebp
mov
pop
mov
jns
out
lret
into
sub
das
jne
push
dec
jne
dec
imul
inc
ret
mov
test
sti
jbe
inc
testb
jmp
jg
jae
adc
repnz
pop
pop
icebp
cmp
or
hlt
sbb
aas
sub
cmp
mov
testl
sbb
push
loop
mov
out
dec
imul
clc
xchg
in
frstor
cmp
push
out
test
call
orl
mov
xorl
cli
test
inc
fisubl
inc
inc
sub
cmpl
loopne
loope
and
movsl
inc
rcl
cli
adc
dec
aaa
fnstenv
jbe
pushf
loopne
cwtl
dec
xor
add
sub
dec
mov
mov
lods
jge
ret
mov
dec
inc
adcb
dec
pop
rcll
imul
sub
pop
xchg
adc
adc
dec
sub
fisubrl
mov
shlb
xchg
add
cltd
dec
cmc
adc
cmp
or
xor
negl
std
add
add
cltd
push
xchg
push
in
mov
adc
jmp
je
xchg
inc
inc
aaa
repnz
push
xchg
lds
mov
pop
dec
mov
rorl
loop
fsubl
std
push
in
divl
andb
cmp
shlb
jle
hlt
or
ror
pusha
add
xchg
add
sbb
cld
or
cmpsl
push
mov
inc
push
das
mov
out
jbe
xor
jnp
stc
push
xchg
jge
decb
movsl
test
fwait
mov
insl
cli
jne
test
mov
testl
pushf
les
sbb
scas
xchg
sub
rclb
outsl
negl
add
dec
fadds
jno
popf
fdivrl
pushf
dec
inc
dec
ret
and
and
daa
mov
call
test
mov
dec
int
mov
cmc
in
jmp
cltd
divb
jge
cmp
das
cmp
leave
inc
jg
xchg
jno
icebp
xchg
int3
fstps
pop
lahf
shlb
fstpl
fdivl
pop
ret
pop
push
push
sub
gs
jno
nop
push
lret
cmp
iret
xor
add
push
loope,pt
pop
sbb
xchg
addr16
repnz
mov
pop
sahf
in
xchg
imul
shrb
jne
dec
xor
mov
mov
sub
ss
push
insb
rorb
mov
shl
movsb
aaa
gs
arpl
sbb
mov
lcall
push
sahf
test
das
adc
fwait
sub
or
lcall
mov
stos
addl
lods
mov
mov
mov
xlat
das
cmp
testb
jmp
test
outsl
push
daa
cli
cmp
inc
dec
fdivl
insb
inc
out
outsb
jg
mov
movsl
xchg
rcrl
pop
cmp
insb
mov
xor
clc
movl
xchg
add
mov
lea
cmp
sub
xchg
jmp
or
lret
data16
mov
mov
pop
test
sub
jns
icebp
cs
add
push
mov
fnstsw
sti
jp
pop
jne
sbb
nop
lret
and
out
mov
jb
sub
push
xchg
mov
adc
mov
sbb
lret
adc
xchg
mov
ss
jbe
push
push
leave
sub
mov
and
sub
das
into
mov
add
push
lea
sub
aam
sbb
ss
push
jbe
jno
mov
cmpb
dec
in
movsl
cmp
sahf
sbb
mov
gs
call
xchg
repz
pop
cltd
aas
sbb
gs
rorb
scas
inc
sbb
or
sub
aaa
ljmp
std
dec
call
add
or
and
mov
gs
jmp
mov
cmp
cmp
adcb
jns
inc
mov
ljmp
loop
fld
out
jno
movsb
cmpsb
sbb
out
notl
sbb
xchg
pop
in
rcll
adc
push
sar
add
out
jnp
and
mov
cmpsb
xor
gs
insb
sub
insl
push
in
sahf
test
sti
in
int
negl
mov
fstpl
jae
out
aaa
pop
mov
aad
pop
cwtl
xor
dec
pop
daa
shrl
mov
aam
pop
repz
jp
jnp
hlt
adc
popf
push
int
cli
mov
sbb
or
adc
subb
push
pushl
lahf
lret
movsl
mov
push
ret
pop
loop
push
adc
sub
adc
aas
lcall
xorl
shlb
mov
setg
in
mov
lods
rol
inc
fldcw
mov
cld
stos
lods
and
dec
test
es
stc
or
popa
into
mov
pop
mov
and
sarl
push
sub
clc
insl
add
es
mov
ljmp
cli
mov
cmpsb
cmc
adc
pop
mov
mov
mov
add
cmp
and
popa
push
es
adc
and
mov
mov
push
popf
xchg
xor
jg
popf
testl
mov
jl
jbe
sbb
dec
dec
out
popf
add
add
mov
push
pop
adc
xchg
mov
fidivrs
nop
mov
adc
aaa
insb
add
in
loope
or
inc
ljmp
test
lds
and
ret
repnz
aam
pusha
cmp
cmp
pop
lahf
addr16
mov
shlb
fwait
dec
jbe
bound
insl
loopne
test
movsb
mov
pop
scas
lcall
in
jge
fildl
jno
adc
push
push
int
cmp
mov
jecxz
lret
aam
inc
inc
inc
cmp
rcl
pop
ficomps
push
add
enter
push
in
inc
sbb
mov
fistpl
test
fwait
cmpsl
and
push
xlat
mov
ficompl
xor
push
xchg
shl
dec
and
pop
ljmp
xchg
scas
sbb
push
sub
mov
mov
lea
mov
insl
popa
xor
or
aas
and
or
push
xchg
sub
or
add
ret
pop
mov
cld
add
pop
cs
add
mov
jae
and
inc
outsl
push
jae
xor
test
enter
js
push
insb
sbb
jbe
addb
mov
in
and
rcr
repnz
mov
js
cmp
mov
dec
out
or
mov
dec
inc
xchg
shlb
bound
xchg
pusha
push
fcoml
jne
out
daa
data16
shll
adc
sub
pop
inc
xlat
rorb
cmpsb
dec
mov
cmp
jbe
fstpt
into
push
sub
jge
mov
std
out
or
in
movsb
mov
sbbb
rol
push
mov
ficomps
cltd
push
js
out
iret
mov
push
inc
xchg
push
and
icebp
and
or
ds
int
inc
sbb
out
or
cwtl
dec
repz
xor
add
inc
jmp
dec
mov
es
mov
cmp
push
loopne
xchg
vminpd
les
fisubs
mov
imul
ljmp
cmp
loope
dec
jnp
lret
xchg
cmpsb
inc
lods
test
sub
jle
jae
movsl
xchg
push
pop
cli
aam
jae
lret
pop
mov
dec
push
sbb
lea
ljmp
insb
lret
cmp
xor
pop
pop
xor
pop
insl
testl
dec
aam
pop
xchg
sub
aaa
pop
jbe
mov
cmp
adc
int3
jbe
jns
in
xchg
sub
insb
push
push
inc
out
jnp
and
push
push
jl
imul
popf
push
and
jl
or
push
cmp
cmc
adc
ds
imul
cwtl
js
mov
or
push
mov
daa
jbe
sbb
lahf
sub
addb
adc
lcall
adc
lock
jno
mov
mov
fisubrl
jmp
mull
sub
pop
loope
dec
test
push
repz
push
test
ror
popa
jmp
sub
sub
jecxz
jns
in
cli
inc
xchg
rorl
aad
sub
dec
push
cli
gs
lret
mov
push
lods
std
ret
out
xchg
or
test
xchg
sub
mov
inc
pop
and
lea
inc
dec
jmp
inc
sahf
cmp
cmp
sti
leave
pusha
decl
push
imulb
sbb
fisttpll
push
rolb
sub
push
icebp
out
push
icebp
cs
popa
clc
sbb
mov
mov
es
xlat
scas
or
pop
scas
pop
icebp
or
out
dec
pop
loopne
in
test
adc
inc
sub
mov
out
in
aad
jle
jp
js
bound
dec
lods
jb
out
insl
inc
pop
mov
mov
leave
fldenv
cli
cmp
movsb
out
push
adc
js
and
fsubl
lret
rcll
jae
test
sbb
dec
or
pop
or
idivl
loop
and
loop
rcr
int
lock
js
add
rorl
xor
out
xor
es
fildll
pop
and
sti
mov
mov
push
push
add
mov
lret
pop
jle
xchg
popf
and
cmp
addr16
imul
pop
mov
adc
out
cmp
out
jl
or
dec
fs
arpl
push
xchg
pop
lock
xchg
cmp
mov
aad
imul
jb
lods
xchg
fs
pusha
xor
ljmp
or
cmp
in
mov
xchg
adc
dec
test
out
jg
jae
subl
pop
cmp
xchg
or
int3
test
ds
mov
sub
fstpl
mov
sbb
out
push
ljmp
mov
jo
pop
cmc
out
adc
popa
dec
clc
push
sahf
inc
enter
gs
or
mov
sub
insl
aam
test
ret
in
gs
push
mov
stos
add
push
test
sub
aam
inc
or
ficompl
fs
adc
iret
jge
into
jns
enter
jne
cmp
fbstp
sbbb
add
popf
cmpsl
mov
shlb
xorb
jg
hlt
mov
dec
pop
cmp
and
mov
and
or
lods
pop
mov
fsubrl
rcr
xchg
and
lods
mov
cwtl
scas
inc
xchg
and
sbb
mov
sbb
adc
mov
cld
or
loop
in
ret
out
dec
and
in
icebp
icebp
push
in
rorl
or
sbb
lcall
and
mov
adc
test
xor
aam
ja
mov
and
cltd
xchg
repnz
sbb
mov
fistpll
mov
sub
mov
or
mov
fisubs
addb
mov
inc
cwtl
fldlg2
mov
adcb
fldcw
fnstsw
std
sbb
cs
and
lcall
inc
cli
pop
lock
cmp
mov
dec
aas
pop
movaps
xchg
sub
pusha
ds
repz
adc
bound
adc
aaa
into
int3
dec
mov
out
stos
adc
inc
scas
pop
je
cmp
inc
xlat
loope
pop
jecxz
call
mov
fdivrs
test
inc
mov
jnp
aam
inc
mov
mov
ds
xchg
mov
scas
inc
scas
jmp
scas
scas
std
jne
or
pop
xor
inc
xor
test
setp
push
inc
popf
scas
mov
and
pop
mov
ret
push
fidivrs
push
mov
imul
mov
movsb
xor
push
xchg
scas
ret
inc
xlat
pushf
pop
sbb
imul
or
dec
sub
pop
call
pop
push
aaa
xchg
jl
mov
sbb
hlt
outsl
je
lods
mov
cmpsl
cmp
cmpsb
cmp
std
lods
mov
movsb
lock
xor
or
mov
loope
mov
lahf
mov
ds
xchg
loope
iret
xchg
aas
nop
movsl
jp
sub
js
mov
mov
aad
xor
std
outsl
in
lods
and
ljmp
ss
shrl
xchg
int3
in
incb
pushf
xor
cmpsb
sbb
and
jnp
int3
jmp
adc
or
push
js
jmp
jge
pop
rcll
cld
cld
loop
xor
test
testb
push
push
or
cmp
jb
add
jae
add
shrl
inc
out
nop
out
mov
mov
pop
loop
xchg
pop
fimuls
adc
mov
ficoms
cmpsb
andl
sbb
sub
adc
fisubl
mov
adc
sbb
or
adc
repnz
shlb
imul
clc
add
imul
xchg
mov
xor
and
data16
xchg
sub
inc
lds
jne
pop
cmp
push
xchg
cmpsb
cwtl
fpatan
adc
imul
jo
pusha
pop
jg
jmp
testl
inc
mov
add
or
mov
push
dec
repnz
inc
mov
notl
mov
xor
dec
ds
mov
sbb
mov
fucom
add
scas
test
repz
lret
gs
push
scas
into
cmpsb
lmsw
mov
jmp
mov
fildll
je
lcall
inc
fst
imul
mov
movsb
rcrl
mov
insb
imul
int3
mov
push
xor
scas
or
pushf
scas
stc
pusha
mov
dec
lea
sbb
jno
mov
inc
sub
sub
xchg
loop
dec
fnsave
ljmp
sbb
clc
test
xchg
add
sti
jmp
inc
out
or
test
aam
dec
pop
or
push
xor
addr16
cmp
fistpl
cmpb
push
mov
shlb
cmp
sahf
xchg
mov
icebp
mov
fdivrs
frstor
flds
in
fstpt
adc
lcall
pop
sub
int3
and
jle
flds
sbb
dec
push
repz
scas
cmpsb
ret
mov
mov
jl
adc
sbb
pop
repnz
xor
fsubs
mov
shr
les
ds
pop
mov
mov
es
int
mov
adc
mov
mov
cmp
in
xchg
aad
ja
lds
cmc
cmpsb
lea
js
cld
xor
cmp
repnz
mov
nop
push
jl
cmp
ja
arpl
inc
in
adc
xor
ja
int
test
scas
aas
test
add
test
lods
pushf
es
stc
lock
jmp
cwtl
in
mov
push
scas
push
xor
xor
sbb
popa
mov
mov
add
xchg
cmp
int3
xchg
lods
outsl
sub
xchg
or
mov
jnp
negb
inc
sbb
mov
test
pop
mulb
icebp
mov
push
jp
fldt
xor
jl
inc
stos
adc
imul
repz
jmp
and
test
push
xchg
aam
pop
movsb
sbbl
rcll
fdivrs
negl
stc
cli
lock
sub
ficoml
jae
aam
xor
xor
test
out
loopne
add
push
test
pop
sub
xchg
icebp
leave
test
lcall
nop
cmp
adc
adc
lock
xor
in
xchg
add
pop
xor
in
or
aad
push
push
push
insl
add
pusha
jge
cmpsb
ror
mov
imul
shrb
mov
loopne
test
sbb
out
nopl
shrl
xor
fstps
jo
jge
push
mov
pop
adc
into
xor
cmp
testl
andl
call
xlat
sub
andl
sub
dec
mov
test
add
xor
popf
popl
cltd
push
mov
push
jno
mov
or
mov
mov
and
push
add
mov
dec
fmuls
movsb
or
movsl
repnz
in
jecxz
in
aaa
rcrl
insl
jmp
mov
xor
or
cmpl
cmp
fisttps
leave
pop
sub
xchg
fisubrs
je
fmull
outsl
imull
add
and
inc
xchg
shll
mov
xor
adc
test
dec
movsb
mov
int3
fistps
mov
movsb
pop
pop
mov
add
jmp
xchg
test
mov
add
test
or
orb
sub
xchg
stos
mov
popa
shrb
push
pop
or
jne
js
or
xlat
dec
aam
lea
xchg
inc
ds
adc
pop
pusha
and
mov
jg
add
outsb
dec
mov
dec
in
aad
hlt
test
aaa
fisubl
push
add
lahf
pcmpgtd
inc
add
daa
pusha
out
inc
fxch
jg
jle
mov
xor
pop
jmp
ds
arpl
pop
pushf
pop
imul
and
mov
dec
xchg
xor
clc
stos
fidivrs
frstor
dec
leave
shrl
xchg
xlat
int3
mov
push
test
mov
popf
push
frstor
push
xchg
std
testl
cmpsl
cmc
mov
jl
out
xor
dec
nop
insl
jne
scas
aad
rorl
lret
ss
movsb
pop
xchg
push
fcmovne
insb
loop
mov
and
fadd
push
mov
add
inc
inc
ja
daa
mov
stc
nop
mov
dec
pop
lret
add
or
push
das
shrb
dec
test
clc
xchg
cli
lea
jg
sbb
int3
mov
xor
out
or
cli
bound
adc
repz
xor
jmp
mov
or
pop
lea
iret
es
lret
inc
cld
lods
dec
mov
popf
inc
leave
xchg
cmp
icebp
xor
roll
cmpsl
mov
or
iret
movsl
xor
mov
cmp
imul
xor
mov
pop
push
addr16
bound
stos
mov
push
out
test
fdivl
lods
jo
mov
or
scas
push
clc
adc
jb
add
or
fisubs
sub
cmc
arpl
xor
and
xchg
add
pushf
fwait
andl
cmp
xorl
mov
inc
sbb
xlat
mov
push
push
push
xchg
inc
adc
sbb
mov
jae
inc
pop
sub
test
sub
mov
and
mov
mov
ss
push
pop
outsb
in
int3
cmp
add
or
insl
aaa
outsl
daa
xchg
pop
movsb
jnp
xor
scas
or
fstps
jmp
sbb
and
inc
pop
in
add
movsl
loop
fldenv
cmp
out
add
mov
and
insl
in
lahf
mov
test
xchg
adc
inc
sbb
or
sbb
daa
sahf
cmp
mov
mov
pop
cmp
pop
mov
loopne
push
movswl
mov
pop
jne
jae
cmp
lcall
or
andl
inc
shrb
adc
mov
test
sub
inc
cmpl
add
rol
pusha
cmpsb
mov
sbb
int
adc
ss
adc
push
imull
xor
or
filds
xchg
clc
icebp
xchg
push
xchg
sub
lock
mov
pop
push
out
cmpb
vpunpcklqdq
or
add
pop
outsl
push
mov
mov
lods
adc
xor
sarb
stos
xchg
fstl
dec
jno
xor
js
mov
xor
xor
add
inc
sub
bound
outsb
loope
add
jecxz
fwait
jl
mov
pop
xchg
mov
xor
mov
adc
inc
shrl
mov
icebp
leave
lret
or
xchg
mov
imul
push
cmpsb
cmp
ljmp
push
mov
sar
or
scas
inc
enter
dec
stos
cmp
pop
push
addb
es
push
in
mov
push
movsl
cmp
leave
jb
bound
repnz
jne
addl
ss
clc
dec
mov
ds
xchg
scas
out
sbb
cmp
jp
mov
inc
ficomps
cmp
fs
mov
cmpsb
movsl
xchg
aam
stc
sub
mov
iret
sbb
and
iret
mov
add
pop
fdivs
dec
ret
jae
fsubrs
scas
popf
int
and
cli
sub
scas
xchg
push
or
inc
inc
mov
mov
stc
cmpsb
push
or
jge
movsb
pop
addr16
loopne
push
sub
shlb
dec
add
test
mov
pop
push
fbld
sbb
adc
sub
xor
pop
cs
idivl
ljmp
fnstcw
test
stos
add
aam
iret
mov
inc
pop
and
jne
mov
dec
roll
inc
push
xchg
push
movsl
lds
pop
xlat
mov
xchg
sahf
lock
aaa
or
or
test
and
popa
add
cli
dec
rolb
sub
push
shrl
mov
pop
sbb
or
leave
sub
imul
jp
testb
dec
inc
mov
in
sbb
aad
jnp
fwait
xor
sub
faddl
push
add
out
lock
and
inc
mov
icebp
mov
shlb
dec
and
jg
fdivrs
decb
repnz
sahf
push
negb
pusha
xchg
sbb
mov
test
xchg
mov
xor
dec
test
mov
mov
pop
call
xor
sahf
pop
and
shrl
in
shrb
push
fsubl
xor
outsb
dec
iret
arpl
popa
add
jne
pop
in
enter
pop
lcall
sahf
dec
ljmp
rorl
inc
fst
shll
xor
sti
mov
dec
sbbb
xchg
sub
and
or
xchg
dec
shlb
jmp
sub
push
xor
mov
daa
push
push
in
mov
add
jmp
fcomip
mov
in
nop
sbb
cmp
bound
pop
lock
lret
fwait
pop
push
lods
inc
mov
test
loop
mov
cmpsl
lea
fldenv
lcall
xor
push
sub
cltd
pop
test
xchg
push
enter
and
jle
cmp
dec
loop
subl
adc
xchg
ss
adc
in
les
ret
mov
xchg
inc
jle
icebp
push
inc
inc
push
mov
into
push
xor
ss
xor
or
mov
int3
addr16
mov
sahf
repnz
fiadds
push
add
cmp
push
xchg
xchg
mov
repz
dec
loop
in
iret
lock
and
test
gs
xor
xor
lcall
mov
sbb
or
dec
xchg
xor
pusha
inc
notl
xor
call
daa
push
push
sub
ss
sahf
mov
std
jo
push
into
cmp
sbb
and
aam
iret
and
stc
jne
lret
xchg
dec
mov
imul
imul
xor
mov
jne
push
jne
stos
test
mov
add
test
or
sub
push
cltd
xor
notl
dec
loopne
xlat
repz
fcom
add
and
adc
insl
pop
add
stos
imul
stos
jo
xor
iret
xchg
lret
movsb
add
or
rorl
test
xchg
mov
xchg
inc
test
sub
movsb
sub
gs
arpl
test
xchg
add
jg
andl
jne
lock
in
in
add
mov
movsb
test
loope
notb
push
popl
or
add
insl
das
lret
addr16
outsb
add
in
adc
push
int3
xor
mov
cs
notl
dec
add
jo
negl
arpl
cli
pushf
mov
inc
int3
push
ljmp
test
cld
stc
shlb
jbe
mov
lea
repnz
mov
cmc
jge
call
les
mov
lock
ficomps
mov
rclb
fldt
xor
hlt
mov
sub
insl
adcb
es
decb
outsb
add
sub
pushf
xor
or
jns
sbb
or
stc
in
das
das
pop
mov
pop
lds
sarb
rcrl
pop
andb
movsb
test
mov
or
lock
pusha
pop
aam
push
jg
xchg
xor
rcl
icebp
sub
dec
push
lret
add
scas
xor
jle
ss
int
lret
xlat
cmp
int
xor
insl
xchg
push
fldpi
xchg
sbb
imul
mov
fstpt
pop
xor
add
cmpsl
xor
adc
inc
fisttpll
lods
arpl
pop
scas
and
jnp
adc
lods
js
mov
notl
sub
sbb
add
jecxz
loope
mov
mov
dec
pop
in
loopne
mov
setg
popa
pushl
dec
mov
push
mov
lea
mov
jno
pop
sub
stc
push
aas
pop
ret
pusha
xchg
sub
shlb
push
or
cmp
dec
ss
push
mov
or
add
mov
fistps
in
and
adc
add
adc
pop
xchg
dec
data16
xchg
arpl
xchg
dec
js
mov
dec
out
and
cld
sub
fidivs
jbe
inc
sbb
into
imul
mov
inc
aas
js
ds
xchg
dec
repz
adc
sbb
cpuid
inc
rcr
adc
or
xor
sbb
pusha
ret
loope
mov
push
adc
idivl
adc
xlat
cmp
jne
in
jg
pop
stos
mov
mov
lret
mov
std
pop
stc
push
add
sbb
add
sub
push
add
out
test
sahf
incb
cltd
js
add
lock
sub
fstpl
idivb
call
int
jl
or
jo
js
mov
testl
jmp
pop
jno
or
fisttps
test
in
sub
or
sub
ja
stos
lahf
pop
cmc
sar
fdivl
mov
jl
cmp
stc
nop
lock
fwait
mov
push
pushf
cli
fildll
cwtl
pop
arpl
das
aas
xchg
daa
adc
pusha
imulb
jae
jg
xor
int3
arpl
jae
xchg
mov
jge
jne
outsl
out
lcall
mov
mov
imul
mov
mov
movsb
fwait
xor
xchg
mov
fsts
inc
sub
enter
push
fldcw
out
mov
and
test
lods
pop
fsubrl
sbbb
shrb
pop
add
ss
dec
iret
insb
aam
adc
test
mov
dec
adc
mov
dec
mov
add
pop
xchg
mov
mov
sar
xchg
jecxz
mov
and
ss
arpl
inc
xchg
jg
lds
popa
imul
pop
jnp
push
lea
sbbl
and
out
xor
pushf
jnp
loope
and
mov
movsl
dec
outsl
lds
or
stos
mov
mov
imul
adc
adc
cmp
scas
mov
loop
xlat
push
popf
aad
cmp
test
xchg
pop
in
push
jne
xor
jl
lea
pop
repz
lock
ljmp
add
or
xchg
mov
popa
jge
push
in
cmp
add
jns
cmpsb
out
daa
mov
ljmp
and
jl
xchg
xchg
rol
movsb
mov
hlt
adc
cwtl
jecxz
pop
movsb
jb
jne
xchg
scas
xlat
dec
js
ss
mov
cmp
and
fcomps
ret
hlt
adc
ret
scas
jmp
cmp
lcall
ds
lahf
testb
out
or
cltd
iret
sahf
addl
test
leave
pushf
push
push
mov
lods
hlt
aam
pop
xor
xchg
repnz
sub
cmp
mov
adc
cmp
mov
aad
cmpsl
dec
dec
pop
or
jge
stc
leave
test
and
pop
scas
mull
xor
mov
std
clc
out
cmp
fdivp
inc
popf
xor
fstl
out
movsl
insb
jle
punpckhdq
pop
lahf
daa
ja
and
dec
or
cs
sub
ret
dec
sahf
jnp
sbb
inc
rclb
xchg
fnstenv
add
pop
mov
mov
pop
xor
mov
push
fstl
or
rcr
sahf
scas
or
ja
lea
scas
test
push
push
popf
or
cmp
clc
bound
dec
sub
out
xor
xor
dec
cmpsl
loop
sahf
mov
jg
cmp
bound
pop
and
ljmp
or
xchg
xor
xchg
or
lret
mov
inc
aam
and
dec
adc
gs
test
cmc
stc
outsl
push
sub
lea
test
cmpsb
mov
pushf
and
push
movsb
inc
and
jg
mov
pop
pushf
pushf
repnz
addr16
dec
cltd
sbb
push
movhlps
je
cmp
inc
je
bound
cmp
xorl
popa
andb
popa
jns
aad
in
cwtl
sub
loop
mov
stc
pop
inc
movsb
gs
dec
jle
cmpsb
js
jg
xor
xor
sbb
negb
lahf
adc
cmpsb
in
jg
xor
xchg
cmp
xor
mov
dec
adc
inc
arpl
push
into
push
icebp
jbe
fidivs
add
rclb
sub
mov
fbstp
xchg
aaa
loope
dec
popa
into
dec
gs
icebp
loope
sbb
mov
inc
call
xchg
dec
test
out
mov
ds
fcos
pop
cmp
lods
mov
popf
fwait
xchg
or
insb
push
shrb
into
push
clc
push
adc
pusha
inc
fstpt
pop
out
lods
mov
push
icebp
mov
xor
sub
add
nopl
cmp
imul
cltd
mov
and
jg
pusha
xorl
hlt
pop
rcl
ret
repz
and
cmc
movsb
jmp
xchg
fimuls
add
xor
adc
add
cmp
pop
je
pop
xchg
daa
ljmp
cmp
push
mov
test
incb
arpl
xor
fcomip
repnz
loop
lahf
cmp
or
mov
pop
rclb
notl
dec
or
mov
js
push
adc
dec
adc
mov
mov
sbbb
test
jle
push
mov
mov
sbb
inc
ss
adc
bound
and
and
incl
xor
push
sahf
mov
mov
shll
sub
das
das
adc
add
inc
push
xchg
or
test
push
pop
jno
outsb
sub
ret
mov
imul
scas
pop
xor
jo
pusha
fs
fpatan
ret
ljmp
adc
adcb
jl
outsb
adc
fistpll
imul
hlt
push
or
add
mov
or
in
out
pop
aaa
inc
clc
xchg
aas
aam
rolb
inc
fstpt
popa
fbstp
push
mov
lock
pop
ss
aaa
loop
mov
filds
ss
xor
stc
leave
fsts
xor
lcall
pop
cmp
jmp
cmp
mov
adcb
pop
jb
fiaddl
sbb
loopne
mov
mov
ja
add
mov
mov
out
jecxz
mov
mov
inc
push
jecxz
xchg
pop
int
lods
sbbb
pop
rcrb
scas
xchg
popf
idivb
lock
lods
sub
mov
outsl
inc
cmp
clc
adc
iret
mov
cmpsl
in
gs
and
xchg
adc
add
xchg
sub
cltd
pop
outsb
iret
jecxz
and
mov
incl
insl
inc
outsl
cmp
or
shlb
or
push
push
stos
shlb
xchg
jns
push
les
js
pop
pop
mov
cmp
push
inc
int3
jg
or
xchg
test
jp
stos
lods
addb
and
test
push
mov
popf
cwtl
dec
sahf
jb
mov
or
jb
add
jl
test
aam
aad
pop
test
fimull
pop
mov
inc
or
add
lret
das
cmpl
xchg
dec
xor
and
push
pop
jno
xchg
fnsave
and
out
mov
and
movsb
sub
das
adc
sub
pop
loopne
push
push
push
and
nop
int3
ljmp
repnz
lds
inc
fcmovnb
jo
and
arpl
sbb
mov
pop
shlb
repz
and
mov
out
stos
cmp
int
jno
imul
pop
clc
stos
lret
cmove
and
push
jecxz
sbb
cmpsb
cmp
mov
adc
push
jl
imul
leave
mov
mov
fstl
cmp
dec
push
cmp
cmp
jecxz
fldcw
test
vpxor
fidivrl
dec
mov
pop
xlat
icebp
xchg
inc
pop
push
movsl
bnd
and
stc
pop
std
push
push
cmp
sti
xchg
imul
lahf
jae
stos
vcomisd
pop
cmpsb
push
int
clc
ja
jl
or
mov
sub
imul
jl
jns
sbbl
push
scas
scas
popl
rep
fxch
hlt
adc
mov
in
pop
movsl
inc
pusha
mov
insb
mov
popf
cmc
sub
or
mul
mov
pop
mov
cmp
imul
out
push
mov
ja
cmp
sarl
push
fmulp
push
sub
in
cmp
sub
decl
jbe
aas
dec
mov
aad
xchg
pop
lods
fisttpll
and
dec
mov
fsubl
cmp
aaa
lods
mov
pop
sub
inc
enterw
rcll
sbb
push
sbb
jae
sub
sbb
in
mov
or
dec
mov
int3
cmp
and
inc
repnz
popf
adc
ficoml
fwait
add
push
jl
insl
adc
movsl
inc
out
sti
and
jns
push
test
or
hlt
pop
jmp
mov
mov
jo
dec
movhps
pop
add
mov
imul
mov
adc
or
dec
addr16
jbe
dec
ja
fdiv
lcall
xchg
sub
push
push
mov
pop
in
stc
and
push
out
lcall
push
pop
pop
hlt
lret
movsl
mov
jle
xchg
adc
jge
gs
mov
cmp
int
popf
sbb
jle
jae
xchg
cmp
push
and
or
aam
loopne
mov
jle
imul
xchg
pop
inc
seto
or
stos
js
fdivrs
in
or
mov
mov
add
mov
push
mov
mov
push
mov
adc
xchg
add
jb
popf
push
mov
xchg
dec
addl
je
jmp
adc
cld
movsl
or
les
add
xchg
xor
pop
jnp
sbb
jae
fidivrl
sbb
test
insb
daa
shufps
dec
out
cmc
out
ljmp
call
inc
xchg
and
pop
jno
mov
es
and
int
push
int3
sub
fistl
push
addr16
xchg
mov
jle
xchg
data16
in
sbb
mov
jecxz
cltd
inc
sbbl
fbstp
jne
iret
sbb
pop
mov
inc
pop
push
and
jge
cs
xchg
pop
sahf
xchg
sbb
jno
fnsave
aam
sbb
add
cmp
mov
mov
xor
aas
shlb
xlat
loopne
pop
in
sub
rclb
pop
div
outsl
cmp
or
mov
sahf
inc
jl
jp
out
adc
jle
ss
mov
and
int3
sub
mov
pop
loop
cs
int3
push
cmc
dec
jp
inc
cltd
clc
adc
fidivl
hlt
in
mov
pushf
jbe
cmp
dec
push
cwtl
and
jns
fisubrl
leave
jmp
leave
ret
pop
repz
fadds
movsb
mov
jle
xor
incb
inc
stos
xor
in
out
cmpsl
mov
ss
aas
pop
pop
in
add
cs
push
dec
mov
ds
xchg
je
adc
cmp
testl
mov
nop
imul
cwtl
push
sbb
jbe
int
int3
das
jmp
imul
push
imul
push
push
enter
mov
shrb
sub
cmpsb
mov
aam
xrelease
repnz
mov
mov
inc
out
push
xchg
sbb
inc
xchg
dec
xchg
shr
das
jmp
mov
ds
xor
loopne
cmc
adc
cwtl
insl
loopne
aaa
mov
and
xor
stc
xchg
jle
test
pusha
xchg
xor
xchg
rcrl
nop
pop
sbb
int3
xor
jbe
lea
pop
leave
mov
test
xchg
pop
sub
neg
jnp
loopne
std
pop
addr16
dec
mov
in
aas
xchg
dec
in
add
lahf
out
jmp
ljmp
mov
adc
mov
rcrb
loope
inc
pushf
mov
ljmp
testb
xchg
stos
or
mov
dec
pop
mov
pop
sbb
test
mov
loopne
je
cmpsl
sbb
mov
test
jnp
aaa
adc
imul
into
xor
jl
stos
mov
adc
insb
pop
and
sbb
lock
lret
adc
xchg
and
sub
fiadds
or
sub
mov
nop
enter
or
int3
jg
dec
cmp
jecxz
cs
test
xchg
jle
lret
jne
cwtl
cmpsb
scas
sbb
lret
push
aas
addr16
push
mov
mov
out
sub
into
lret
jb
movsb
repz
int3
daa
std
inc
xchg
sbb
or
mov
fbld
in
add
std
push
sbb
jb
mov
sbb
je
mov
jp
mov
out
dec
jge
std
dec
lret
mov
push
int3
fdivs
dec
sbb
mov
je
stos
popf
insl
mov
dec
in
push
dec
lock
in
add
es
adc
adc
push
outsb
loope
push
fiaddl
adc
add
lcall
out
jo
push
push
popf
scas
aaa
jno
jmp
movsl
outsb
popf
xor
dec
iret
cli
jns
lods
pusha
pop
inc
xor
sbbb
push
in
jbe
lcall
xorl
and
xor
cmp
cwtl
jmp
mov
das
shr
jl
or
insl
shll
xchg
shl
repnz
test
pop
jp
nop
shrl
cmp
inc
rcr
pop
out
scas
sbb
xchg
cld
mov
fdiv
nop
imul
aas
mov
add
sub
xor
ret
jle
inc
test
lahf
or
lock
push
shrb
rol
leave
pop
cmp
ss
bound
ret
pop
out
mov
mov
in
test
aad
push
lods
push
shll
mov
aas
add
pop
and
push
filds
xor
rolb
test
iret
jbe
or
xchg
notl
fnstsw
nop
mov
jecxz
stos
daa
pop
out
add
mov
in
mov
add
or
jge
inc
mov
pop
lock
das
jo
sbb
push
sahf
mov
jns
mov
adcl
xchg
outsl
std
pop
popf
push
fbld
add
mov
fs
mov
sbb
adc
mov
ja
sub
xor
inc
nop
mov
adc
dec
sub
fsubs
pop
rorb
jmp
scas
fnstenv
mov
adc
inc
dec
sbb
decb
popf
mov
xchg
xor
arpl
movsl
or
dec
and
mov
bound
iret
pop
pop
jbe
pop
mov
or
imul
xchg
push
ficomps
sahf
jg
in
jns
lret
sub
inc
inc
mov
mov
dec
shrb
pop
add
shll
pop
pop
pushf
hlt
push
mov
mov
pop
pop
xorb
pop
fidivl
ja
add
call
bts
sub
sub
and
icebp
stos
scas
ret
xchg
fnstenv
test
sarb
add
ja
negb
xor
pop
push
jb
mov
pop
arpl
repz
sbb
shr
xor
mov
sub
add
mov
and
fbld
cld
pop
ds
push
push
imul
pop
push
int
cmp
jo
arpl
outsb
add
test
jne
aaa
into
pop
pop
aas
push
loope
int3
mov
jnp
imul
xor
sbb
fistpll
xor
cltd
aaa
sti
stc
mov
les
leave
sbb
outsl
mov
pop
scas
mov
jl
and
lcall
fcomi
jl
std
lret
mov
mov
dec
in
outsb
jp
mov
jl
inc
test
jp
pop
xchg
inc
call
loopne
aam
pop
rorl
inc
cli
cld
dec
daa
xchg
sub
adc
adc
mov
ret
cs
shll
enter
sub
fwait
inc
push
fisubrl
jmp
inc
jle
mov
cpuid
shrb
sbb
imul
into
or
jno
insb
fcomip
sbb
mov
fmuls
pop
mov
in
into
sbb
xchg
sub
and
pushf
xor
jo
call
and
lret
out
adc
ljmp
loope
inc
insb
out
add
mov
fdivrs
lret
xor
sub
push
jbe
push
xor
xor
ja
insb
xor
sbb
fwait
lret
ret
inc
cmc
fcomi
rorb
js
sbb
dec
fnstcw
scas
lds
mov
std
pop
push
mov
int
arpl
push
sbb
insb
jnp
bswap
sbb
lds
mov
iret
xor
cld
outsl
jnp
inc
mov
leave
pop
sub
fs
das
inc
jo
pop
aaa
mov
lock
jb
sub
cmp
js
pop
lcall
das
fs
fsubl
jge
pop
ljmp
and
hlt
xchg
repnz
outsb
sbb
lret
stos
jl
xchg
nop
pop
das
mov
cmpsb
imul
iret
lret
cmpsb
or
arpl
in
jnp
sbb
push
iret
addb
fsts
xchg
cmpsb
mov
aaa
stos
mov
jg
mov
insb
dec
fcmovnb
mov
ret
fildll
dec
aam
gs
in
popl
or
test
iret
and
test
lea
in
sti
push
fs
pop
sub
dec
in
cmc
fucompp
gs
xchg
scas
out
inc
jle
mov
sahf
dec
sub
sbb
insl
push
xchg
out
cli
mov
jge
int
lcall
hlt
fnstenv
and
xlat
mov
icebp
inc
enter
das
sub
iret
push
into
sub
out
pop
mov
dec
leave
cs
cmp
inc
fildl
in
sbb
cmpsl
mov
lds
jb
iret
repnz
pop
imul
and
add
shlb
aad
lcall
inc
notb
test
in
test
rclb
add
jle
je
cmp
mov
sub
iret
pop
add
and
adc
aam
sbb
les
ss
cltd
mov
fisubs
sub
ret
push
inc
nop
jle
mov
add
mov
xlat
jl
movsl
ss
pop
pop
push
mov
xor
icebp
out
out
inc
nop
mov
imul
int
ret
dec
xchg
push
push
mov
shlb
sti
xchg
out
in
cmc
add
dec
cmp
mulb
pushf
leave
das
cli
mov
daa
mov
addl
mov
sbb
push
fmull
iret
data16
jle
pop
and
push
add
ja
mov
mov
cmp
fldcw
out
repz
ret
dec
push
int
inc
dec
shlb
xor
xchg
roll
dec
movsl
shr
mov
std
cmpsb
mov
jecxz
lcall
or
add
into
lods
mov
js
stos
lods
mov
jae
cli
into
cmpsl
jnp
add
mov
cs
cmp
xor
pusha
push
sub
xchg
push
iret
mov
shrb
ja
ja
pop
loop
lds
ror
lahf
and
cltd
movb
out
in
cmp
jecxz
pop
adc
cmp
jo
inc
dec
adc
push
movsl
mov
push
xchg
add
inc
inc
cmc
pop
enter
aas
test
jo
pop
test
fsubrs
pop
movsb
insl
dec
sbb
jo
adcb
sbb
sbb
xor
lret
fisubrs
mov
lods
ret
leave
mov
mov
inc
mov
cwtl
mov
jae
pop
pop
test
xlat
cli
mov
inc
pop
sub
pop
adc
test
rcll
pop
cmpsb
cmp
lret
movsb
gs
dec
jl
aad
movsl
push
mov
test
int3
shl
aam
testb
xchg
xor
cwtl
out
push
es
ret
xchg
je
fdivrl
into
out
jb
cld
dec
out
pop
mov
sti
and
or
or
shll
vpsadbw
inc
lods
sub
mov
inc
dec
pop
imul
push
push
sub
adc
pop
lea
leave
popa
daa
xlat
test
add
mov
inc
and
push
loopne
stc
or
insb
jb
into
cmp
push
sub
inc
or
sub
aaa
mov
inc
orl
xor
mov
into
xchg
lods
adc
enter
mov
jnp
adc
bound
ja
fwait
cs
push
push
out
push
test
ja
or
adc
cmpb
fnstenv
das
movb
mov
imul
jno
mov
sbb
inc
sbb
orb
mov
pusha
pop
scas
dec
scas
xor
movsb
jnp
or
call
pop
jl
std
js
in
jg
fldl
fwait
addr16
iret
loope
leave
lahf
stos
icebp
xlat
movsl
mov
add
inc
in
or
in
adc
dec
cmp
aam
sbbl
adc
enter
push
cld
iret
scas
jae
pop
loop
dec
push
js
push
aas
add
shrl
insl
vmovups
mov
pop
cmp
jecxz
clc
add
add
add
xlat
lods
push
aad
daa
mov
ret
mov
and
in
stos
push
movsb
mov
xchg
inc
das
jb
enter
aam
std
and
in
mov
testl
scas
pop
cmp
fwait
dec
mov
sbbl
mov
test
sub
stos
sbbl
xor
jge
xor
pusha
std
aad
mov
fisttps
xorb
das
and
push
loope
push
fs
shll
xor
push
jge
in
shll
mov
cmp
and
adc
sbb
adc
das
pop
jnp
xor
out
lret
pop
mov
sbb
lret
lcall
maskmovq
mull
sbb
fcmovnbe
out
pop
int3
jecxz
mov
lods
mov
cs
mull
mov
xchg
xor
ror
imul
inc
movsl
and
mov
pop
movsl
ret
cmpsb
cmp
mov
mov
jmp
out
pop
xchg
je
lcall
add
mov
in
test
int3
js
gs
and
fnsave
xchg
in
dec
orb
push
xor
and
pop
dec
inc
stc
adc
rol
mov
push
test
mov
mov
dec
xor
jbe
jmp
pop
add
adc
add
mov
ret
andb
repz
mov
push
outsb
clc
aaa
add
fwait
cld
jle
sbb
in
js
fwait
and
dec
movsl
ja
mov
mov
inc
scas
ret
or
arpl
push
lods
push
test
arpl
push
js
cs
stc
add
scas
daa
cli
jne
inc
in
test
and
into
pop
mov
pop
adc
psubb
int3
in
loope
sub
pushf
fcomp
dec
pop
dec
adc
xor
mov
lahf
cmc
dec
cltd
inc
lcall
pop
call
mov
jmp
out
push
dec
push
inc
hlt
cmp
push
ds
das
cmp
mov
neg
sbb
rcrl
add
insb
or
subl
push
insl
jo
daa
shr
pop
pop
out
loope
cmpsb
lock
mov
mov
out
mov
push
lods
sub
pop
jmp
xor
dec
pop
daa
outsl
push
filds
dec
std
scas
mov
cmp
scas
lret
mov
xchg
pop
xchg
pop
mov
jmp
fcmovb
sub
pop
xor
icebp
int
movsl
dec
arpl
lods
ret
pop
leave
pop
push
xchg
add
xor
clc
aas
aaa
xor
arpl
cmp
pushf
xor
xchg
or
movsl
sbb
adc
push
xor
cmp
or
adc
scas
ret
mov
popa
mov
aaa
or
aam
adc
dec
lods
push
lds
adc
jle
mov
jg
enter
push
mov
push
xlat
imul
fcmovb
pop
cmp
in
push
aam
mov
stos
add
xchg
int3
inc
into
enter
outsb
xor
cmc
push
insl
cld
incl
mov
dec
lods
mov
idivb
cmp
jbe
fcomps
icebp
fcoml
xchg
clc
out
mov
jne
je
push
lret
es
mov
cmpsb
push
mov
pop
shlb
pop
mov
jns
insl
les
out
xor
sbb
dec
jo
daa
mov
scas
mov
mov
loopne
scas
push
cwtl
sub
sub
xchg
push
addr16
mov
int3
stc
sub
mov
out
bound
arpl
nop
push
loop
xchg
fwait
xchg
sbb
loopne
sarl
je
outsb
xor
jb
mov
addl
stos
and
leave
mov
in
cs
imul
repz
mov
les
push
lret
js
sahf
out
add
mov
out
xor
dec
pusha
jmp
les
cmpl
add
and
iret
mov
adc
aad
je
jl
push
lock
xlat
repz
cltd
pop
jb
xchg
mov
int
cmp
repz
sub
sbb
xor
test
iret
enter
repnz
cwtl
and
leave
out
jl
sub
cmp
jb
pop
cmp
cltd
popf
stos
add
mov
jno
mov
push
mov
push
loopne
lds
loope
adc
dec
mov
sahf
dec
adc
cmc
popl
mov
js
pushf
test
jbe
rorl
adc
mov
les
sbb
les
ficompl
jp
fs
dec
int3
int3
adc
in
add
int3
fisubl
ljmp
outsl
jnp
imul
lret
ss
shlb
jo
adc
int
sti
incb
jmp
stos
pop
add
scas
sub
lds
ds
inc
fs
inc
mov
fisttpl
jl
sub
mov
mov
add
lods
hlt
inc
cmp
mov
fadds
movsb
dec
fneni(8087
dec
mov
icebp
mov
imul
or
subb
test
daa
ret
scas
jb
mov
loopne
mov
and
xchg
imul
mov
xor
pushf
cld
into
rcl
and
testb
add
mov
and
push
popf
sarb
fsub
test
sub
dec
sbb
out
dec
inc
or
push
cmc
dec
xchg
fldcw
adc
call
add
aam
and
stos
data16
sbb
mulb
sbb
jle
in
test
shr
cmc
test
jecxz
mov
add
call
dec
loopne
pop
jle
push
cmpsb
hlt
xor
daa
cmp
jo
out
mov
mov
aaa
out
jmp
mov
int3
dec
adcb
cmp
imull
sub
stos
add
fwait
cmpsb
cmp
sub
aaa
push
in
push
add
clc
adc
test
mov
and
les
iret
cmpsb
push
arpl
icebp
imul
cli
enter
push
jmp
daa
sub
dec
ljmp
lcall
push
mov
mov
pop
or
push
movsl
dec
inc
pop
sbb
cmp
pop
fimull
pop
push
mov
sub
in
outsb
dec
xor
lea
mov
call
xor
and
leave
dec
andl
inc
inc
icebp
test
cmp
lahf
ljmp
mov
insl
sarb
xor
test
or
sub
loop
jl
mov
les
ret
movsb
outsl
add
fdivrs
sbb
xchg
gs
lret
mov
in
rolb
mov
dec
mov
jge
jge
jp
sbb
insl
dec
cmpl
dec
cmp
aaa
movsb
mov
outsl
int
scas
stos
jbe
cmp
mov
add
loop
jns
sbb
sbb
inc
jge
jge,pt
lods
daa
bnd
fidivl
mov
xor
aad
sbbl
cmc
pusha
and
sub
in
lods
les
outsl
mov
fiadds
ja
jmp
push
or
mov
sub
inc
imul
aam
fs
push
cld
imul
push
mov
cmp
mov
into
sbb
mov
mov
push
subl
loopne
mov
push
int
rcrb
int
fdivl
pop
adc
jg
mov
cmpsl
push
outsl
pop
add
jae
lret
xchg
dec
loopne
ret
shrb
add
lods
sub
in
inc
push
dec
fldcw
mov
roll
ljmp
movsl
add
scas
mov
dec
mov
fstpt
rcll
mov
decb
cwtl
jo
pop
int3
inc
dec
cld
in
in
loop
pop
lods
cld
inc
pop
divb
push
jle
cmp
pushf
cli
hlt
mov
shl
jbe
lret
or
jl
mov
jecxz
popf
pop
push
mov
iret
jle
add
sub
cmp
xchg
dec
add
fbld
pushf
lods
inc
xchg
jb
mov
pop
pushf
loope
stos
jmp
pop
mov
ret
out
test
lods
inc
cmpsb
add
xchg
loope
cltd
ds
shr
stc
pop
and
int
outsb
aad
out
push
aaa
negb
mov
lret
push
push
jmp
inc
inc
repz
aad
pop
push
pop
sbbb
movd
or
cmpsl
mov
mov
scas
mov
movl
and
out
gs
cli
pushf
fcmove
loop
mov
xchg
aas
fmul
fisttpll
popa
sbb
lock
into
pop
adc
fucomi
daa
sbb
mov
test
mov
test
pop
mov
je
mov
inc
jg
imul
cvttps2pi
inc
pop
pop
jne
out
push
fwait
pop
aad
xchg
dec
mov
sbb
dec
lds
shl
jo
aam
popf
pop
out
into
dec
pop
ss
ds
mov
ret
add
mov
adc
inc
add
xlat
inc
sbb
out
add
imul
mov
mov
fdiv
ret
ss
ret
stc
stos
gs
loopne
dec
loop
add
mov
test
sub
push
jnp
rep
ja
mov
inc
sub
jne
cmpxchg
mov
lret
fisttpll
mov
jle
adc
jle
jae
pop
sub
cwtl
dec
and
and
sub
data16
dec
scas
xchg
dec
push
xchg
mov
leave
sub
mov
cmp
sbb
add
sub
cmc
lods
inc
daa
or
push
lock
or
jnp
and
nop
daa
adc
shlb
lds
sti
mov
in
dec
nop
sbb
lea
mov
mov
adc
mov
add
jge
arpl
or
sub
jmp
gs
out
xchg
cmc
arpl
cmpsl
pop
mov
mov
sub
pushf
mov
push
jmp
jbe
push
pop
sarl
add
sub
push
lods
inc
dec
or
sarb
cmp
xchg
push
js
sbb
popf
xor
cltd
sbb
scas
ss
push
sti
jno
jne
adc
mov
imul
js
and
mov
push
call
nop
cli
orb
out
push
cmc
push
or
adcb
jbe
shrl
out
cld
movb
sbb
xchg
jo
repnz
add
push
jbe
push
out
pop
adc
inc
movsb
xor
sub
push
push
int
imul
imul
aaa
repnz
jecxz
pop
sbb
lret
cmp
shlb
sbb
and
movsb
dec
xchg
push
mov
rclw
pop
out
jge
mov
or
sahf
sbbl
and
push
add
bound
sbb
sub
push
inc
sti
repz
adc
and
pop
mov
mov
fbstp
pop
push
push
mov
ret
xchg
jne
js
xor
dec
int
dec
push
pop
sbbb
xlat
hlt
xchg
sub
out
pop
lret
inc
xor
mov
sahf
lods
in
xor
mov
cmp
or
mov
sbb
push
push
mov
push
mov
xchg
mov
nop
stos
xchg
jmp
mov
sub
pop
cmp
inc
and
adc
je
int
cltd
pop
jb
sti
outsb
hlt
add
cmp
mov
mov
push
add
inc
mov
and
jle
movsb
mov
push
lods
das
jmp
fxch
mov
sti
mov
call
and
cmp
fisttps
adc
jb
jo
jo
mov
fxch
fcmovnb
lock
mov
loopne
xchg
mov
fisttps
out
jmp
push
pop
test
add
cld
sub
je
lret
and
jle
aaa
sub
aas
lret
fwait
xchg
mov
adc
fs
sahf
add
pop
pop
fldt
push
fiadds
xchg
shrb
jle
cmpsl
je
adc
into
mov
or
jmp
sbb
xor
cmp
cmp
fidivrl
pop
fsubrs
test
ja
imul
sub
rcr
sub
in
sbb
loopne
xor
jg
test
iret
loop
mov
rcll
add
loop
xor
lcall
rol
nop
call
xor
in
cmp
push
jne
push
test
xlat
sbb
testl
xchg
lds
pop
psubd
vmovsd
xor
and
andl
fstl
cli
xor
mov
jg
mov
mov
xchg
dec
inc
sbb
mov
sbb
sub
sub
jg
test
xchg
mov
testb
sbb
pop
dec
shrl
dec
pop
cmp
or
rcr
lcall
sarl
mov
clc
mov
std
xor
scas
fsubrl
sbb
sahf
cmpsl
sub
jns
jecxz
ja
mov
fs
testl
jl
push
in
xchg
test
dec
jne
cmp
and
xchg
jl,pn
arpl
xchg
pusha
jo
xchg
icebp
cmpl
pushw
add
outsl
push
mov
inc
leave
pop
cmc
mov
and
xchg
outsl
sub
out
sub
insl
push
push
hlt
mov
insl
nop
bound
cmp
out
jmp
mov
mov
jns
test
js
sbb
loopne
insl
cwtl
adc
stos
test
sbb
aaa
out
jo
pop
mov
es
add
and
cmp
daa
sub
rcrl
xchg
jecxz
add
ja
jns
dec
outsl
in
mov
fistps
fists
stos
and
es
ljmp
adc
push
fsts
push
adc
sub
sub
adc
jge
test
mov
sub
ret
push
mov
mov
icebp
pop
adc
fcompl
rcll
lcall
push
test
pop
push
push
cmpsb
cmp
insb
and
mov
mov
jge
nop
push
xchg
sbb
sub
cs
in
sbb
mov
pop
inc
mov
sub
or
in
pusha
fisubl
add
test
mov
and
lgs
leave
xor
pop
call
push
jge
push
call
aaa
jno
push
fs
sub
push
js
mov
mov
movsb
push
xchg
popa
shrl
fsts
fdivrs
xor
fistps
out
pop
fs
nop
mov
dec
adc
cs
lds
flds
dec
pop
push
add
das
and
inc
call
jbe
pop
sbbb
cmp
or
cli
push
cwtl
ret
lret
xlat
cmc
or
mov
popa
pop
inc
sub
fdivrl
cmp
or
rclb
and
fcmovbe
add
sub
mov
pop
cld
pop
adc
mov
dec
push
mov
mov
push
cmp
push
or
mov
movsb
mov
xchg
mov
mov
sahf
jecxz
pop
mov
jg
pop
loopne
movsb
push
lods
adc
std
jp
inc
xchg
push
add
push
mov
sbb
lds
sbb
aad
jo
or
std
lods
adc
and
vmovhlps
xor
and
add
and
xor
sub
push
loopne
pushf
cmp
push
out
lea
xor
pop
test
adc
lret
inc
jg
out
dec
mov
cmc
cvtdq2ps
psadbw
shl
cmpsl
mov
lahf
ss
fnstsw
sbb
mov
loopne
pslld
popf
pop
dec
or
mov
repz
int
jmp
out
fmuls
cli
push
movsb
cwtl
mov
fs
call
xor
push
imul
hlt
and
add
adc
cmc
out
cmp
cmpb
rcl
sub
aad
pop
push
nop
loope
test
jns
xchg
sti
jbe
fdivrs
insb
es
add
iret
fistpl
fcomi
mov
push
xor
jecxz
jo
jnp
push
sahf
std
adcb
pop
addr16
and
xor
int
cmp
cmp
inc
mov
scas
push
xchg
test
sub
scas
xchg
add
add
sbb
pop
in
mov
mov
aaa
ds
dec
scas
inc
insl
lods
fs
cmpsl
jge
sarl
aaa
adc
push
dec
mov
sub
bound
ret
insb
mov
adc
aaa
sbb
and
inc
lret
dec
adc
ret
and
roll
cmp
mov
jge
push
push
rcrb
pop
xor
pushf
mov
js
sahf
xor
xchg
sub
mov
jl
inc
sar
mov
pop
fidivl
pop
or
jnp
inc
imul
shlb
mov
jo
fstpt
aas
rcrl
roll
cmp
mov
adc
mov
pop
dec
fsubp
int
fiaddl
dec
xor
add
ds
push
fimuls
mov
mov
das
addr16
shrl
std
xor
xor
fcmove
and
and
outsl
or
rorb
mov
div
lods
xor
int
dec
insl
ja
sahf
aaa
stc
mov
sub
mov
test
or
pop
xor
mov
xchg
aad
jge
cmp
dec
and
mov
imul
pushf
popf
or
ja
adc
fwait
sbb
lock
stos
xchg
inc
push
mov
mov
loop
sub
mov
out
popa
testb
mov
leave
int
sub
loope
dec
inc
xchg
pop
jnp
cmc
pop
push
outsl
pop
repnz
mov
xor
xor
dec
mov
popa
out
repz
shll
cmpl
sbb
sbb
xor
fwait
outsl
ret
mov
add
adc
push
xor
fs
dec
add
fdiv
stos
push
cmp
ja
loop
and
dec
xchg
lds
test
mov
scas
ret
or
or
jle
cltd
cmp
pop
and
gs
int
add
ret
adc
dec
in
and
leave
nop
shl
cmp
lret
clc
aad
jmp
popf
xor
sbb
xchg
fnsetpm(287
dec
in
loop
add
sbbl
insb
in
dec
pop
sbb
imul
lret
xchg
cs
mov
js
dec
inc
ljmp
repnz
and
jb
cmpsb
sub
ja
xchg
subl
es
jp
inc
cmc
add
pusha
aaa
xor
shll
lds
in
or
loope
insb
xchg
xor
lahf
xchg
xor
push
lock
test
clc
cmpsl
add
mov
into
call
xor
mov
es
or
lods
xchg
aad
inc
cmpsb
dec
add
les
xor
mov
das
in
sahf
in
and
insb
pop
hlt
pop
push
in
movsl
mov
pop
jb
mov
frstor
sub
scas
and
loopne
andb
fs
adc
and
jmp
lcall
xor
push
inc
test
push
fnsave
jl
mov
and
xchg
and
fmuls
enter
jp
pushf
mov
pop
lock
adc
idiv
jmp
or
outsl
or
pop
push
cmpb
leave
cmp
push
aam
test
dec
cmpsb
push
pop
addr16
or
jno
stos
test
mov
loop
dec
sub
jge
addr16
orl
loopne
mov
xchg
mov
es
ret
jbe
cmp
inc
stc
arpl
push
add
or
cmp
push
andb
shll
filds
add
jae
push
dec
lods
sbb
ficoms
ja
adc
sarl
fidivl
mov
pop
clc
sahf
pop
push
out
ret
arpl
shrl
mov
or
adc
jl
test
lcall
and
jns
pop
sub
pop
sub
cld
adc
add
cmpb
insb
int3
bound
push
dec
mov
push
jbe
mov
and
sub
rcrb
test
dec
subb
scas
xlat
imul
cmpsl
adc
mov
push
repnz
int
pusha
fs
mov
in
sarb
push
and
xchg
mov
arpl
push
add
mov
xchg
mov
mov
cld
mov
subl
mov
pusha
test
mov
mov
xlat
xchg
scas
xchg
rol
popa
subb
sahf
cmpsl
mov
jmp
dec
test
orb
fwait
out
adc
cmp
pushf
loopne
insl
sub
and
aas
xor
inc
roll
add
and
data16
test
push
incb
dec
out
mov
loope
pusha
shll
dec
mov
out
or
stos
scas
rcrl
jnp
out
in
add
push
mov
fs
jno
inc
add
in
cmpsb
mov
xor
call
or
xchg
inc
xchg
pop
addb
add
int
cltd
pop
jb
sub
sub
fstl
and
pop
data16
cld
mov
xchg
jne
iret
movsl
repz
sbb
enter
shll
es
lds
inc
push
daa
fs
and
ja
sub
mov
pop
stos
or
outsb
addl
push
pop
mov
shlb
imul
lds
ficoml
add
cmpsb
and
or
mov
fidivs
aam
stos
repnz
lods
int
inc
fwait
cli
outsb
push
inc
sbb
mov
sub
in
jnp
jbe
nop
movsl
lea
daa
xchg
add
mov
mov
test
xor
mov
dec
daa
sub
mov
push
outsl
call
std
out
push
jns
int
mov
movl
and
cmp
popf
push
ftst
repnz
std
adc
mov
xchg
sbb
sarb
fsubr
in
ds
and
or
stos
in
inc
pop
int
cli
and
roll
sbb
or
adc
sbb
sbb
pop
dec
popa
stc
dec
out
jbe
sub
xor
leave
imul
pop
loope
or
sahf
dec
jle
push
jmp
aam
xor
mov
adc
icebp
insb
lods
mov
out
dec
xor
xor
or
push
adc
lahf
sbb
dec
cmp
cltd
sub
adc
filds
inc
in
iret
loop
cmp
push
dec
pusha
xor
mov
out
std
sbbl
rolb
enter
mov
popa
inc
mov
jae
mov
pop
sub
cli
test
jecxz
xchg
stos
js
mov
xchg
jno
leave
add
lahf
push
sub
movsl
mov
in
cmc
add
cld
jl
cs
inc
ficompl
mov
jecxz
mov
cmp
pushf
mov
push
lcall
push
je
imul
xor
stos
mov
mov
cmpb
push
imul
mov
fwait
mov
movsb
cltd
ret
lds
mov
movsb
pop
lds
dec
rorb
je
push
cmp
xchg
adc
rclb
adc
lea
cmp
repz
pop
imul
mov
and
das
into
add
ja
xchg
push
lahf
stc
inc
ds
mov
dec
and
and
mov
stos
inc
push
dec
pop
sbb
and
mov
loopne
sbb
mov
or
movsb
sbb
push
fidivrl
adc
jnp
mov
in
out
jnp
out
in
add
cmp
cs
add
pusha
inc
aaa
mov
inc
cwtl
in
insl
pop
iret
sub
xchg
xor
das
cli
xchg
inc
mov
add
mov
ljmp
out
xchg
adc
xlat
outsb
shl
out
aad
nop
add
shlb
dec
pop
cwtl
push
mov
in
cmp
shr
xchg
mov
insb
or
aas
mov
imull
mov
add
mov
dec
hlt
pop
xor
push
lcall
in
adcl
mov
mov
fdivrl
mov
pop
insb
cmp
fidivrs
ficompl
push
jb
sti
int
and
mov
mov
mov
lret
clc
or
stos
pop
aad
cmp
mov
ljmp
mov
lret
push
add
orl
iret
shrl
jg
sahf
fs
out
push
imulb
cmpsb
std
cmp
push
xchg
out
mov
jb
jae
pop
mov
dec
sarb
popa
xlat
cmp
mov
jnp
sub
in
movsb
popf
pop
imul
xor
sub
call
imul
out
outsl
xor
jno
mov
lret
push
popf
adc
inc
and
mov
push
daa
das
pop
pop
mov
sbb
scas
jmp
jge
jo
fildll
in
or
out
or
xlat
add
lea
fs
xchg
lcall
fisubrl
sub
or
adc
mov
mov
xor
mov
push
sbb
lods
arpl
push
inc
sbb
mov
sub
jle
mov
inc
sbb
test
push
mov
or
iret
cmpb
xchg
xchg
popa
lcall
cmpsb
outsl
hlt
in
add
jg
repnz
push
insb
fdivrl
dec
mov
mov
das
xchg
mov
xorl
enter
jmp
sbb
mov
sbb
aam
ljmp
sbb
add
jg
xor
jmp
sbbl
inc
adc
mov
nop
loopne
push
push
movsl
sub
fs
pop
jp
jmp
jne
in
fnstenv
cwtl
adc
jbe
or
in
aam
dec
pop
repz
fidivrs
dec
push
lret
jmp
stos
pop
dec
sub
jb
add
inc
jecxz
loopne
data16
pop
xor
jmp
cmp
addr16
cmc
mov
mov
dec
pop
cli
stc
pop
push
int
sub
mov
mov
cld
movsb
adc
sub
mov
cmp
daa
pop
fldenv
lret
mov
mov
mov
rcll
icebp
xor
xorl
lahf
xchg
mov
cmp
cmc
mov
xchg
out
or
push
cmp
adc
cmp
fadd
adc
xor
adc
push
mov
adcl
jl
imul
cli
pushf
jb
xchg
lods
dec
jecxz
lock
daa
jle
cld
add
mov
movsl
mov
cmpsb
inc
fsubr
xor
jp
shll
fstps
mov
mov
sbb
push
jge
pop
les
xchg
push
and
iret
mov
push
icebp
cli
cmp
mov
enter
xchg
ret
imul
cmp
jl
outsl
faddl
mov
test
mov
fdivr
lea
sub
out
outsl
enter
mov
push
test
pop
push
icebp
xor
and
fld
fnstsw
cmpsb
push
xor
js
lahf
pop
icebp
sarb
fidivs
js
out
addl
mov
xchg
mov
dec
inc
test
aam
in
rcll
xchg
fldenv
stc
gs
dec
xchg
clc
push
dec
fsubl
ftst
loope
push
jge
out
cld
xlat
cmp
adc
sti
test
mov
mov
cmp
inc
push
fwait
bound
adc
xchg
push
dec
pop
stc
mov
dec
cmc
pushf
stc
cmpsb
dec
add
push
mov
int3
std
push
jae
sarl
inc
enter
sbb
aas
fsubr
test
cli
mov
cmpsb
in
sbb
dec
jb
cmp
cltd
cmp
adc
or
int3
mov
js
cli
xchg
shl
mov
xchg
mov
cltd
push
inc
cli
cld
cltd
or
cltd
sahf
mov
cltd
test
repnz
jne
jp
xchg
pop
mov
inc
jg
xchg
jecxz
mov
xchg
fisubl
mov
jecxz,pt
cmpsb
imul
addr16
popf
leave
dec
jl
in
arpl
stc
lahf
mov
xor
or
mov
jae
mov
sub
push
out
inc
lds
adc
gs
mov
mov
in
cs
out
and
shl
jl
pop
enter
push
int3
imul
cmp
jp
cmp
xchg
shll
cmc
dec
rcrb
repnz
popa
pop
mov
xchg
or
jp
out
outsb
dec
lret
sbb
dec
loop
mov
push
mov
into
mov
outsb
or
jmp
add
xor
popf
lock
cld
adc
and
cmp
fidivl
fistps
popa
cltd
clc
adc
mov
ja
ss
pop
mov
push
push
cltd
ja
daa
arpl
ret
bound
inc
cmpsl
mov
scas
mov
test
add
rclb
cmp
sub
mov
adc
jl
dec
jge
pop
outsb
in
imul
and
stc
aaa
mov
out
sbb
adc
inc
lahf
es
mov
or
std
adc
popf
aaa
pop
cmpsb
or
mov
push
mov
dec
mov
or
mov
fists
es
mov
xchg
in
clc
repz
or
int3
pop
fs
aad
push
rclb
cmpsb
inc
pop
pop
imul
shlb
into
pop
movsl
nopl
mov
sbb
mov
push
xchg
inc
mov
fdivs
lods
lds
push
mulb
imulb
pushf
adc
aam
xor
cmp
das
loop
enter
inc
mov
int3
cs
sub
imul
shll
lea
or
push
in
repz
testl
into
int
sbb
das
jo
iret
scas
xlat
rorl
xchg
iret
push
lods
in
cld
mov
into
icebp
adc
cmp
cmc
sub
adc
loope
dec
pop
add
adc
outsb
or
jb
xchg
pop
jle
mov
add
and
aam
cmp
cld
iret
inc
nop
push
jb
popa
push
sbb
xor
fs
push
out
ficoml
mov
int3
and
xchg
mov
int3
mov
or
in
fidivs
rcll
outsl
dec
mov
sbb
add
push
push
shlb
addr16
ficomps
push
test
add
cmpsb
clc
mov
addr16
xchg
jge
fwait
scas
mov
and
xchg
push
inc
lcall
rcl
jnp
mov
xor
mov
mov
jl
sahf
sub
mov
mov
mov
mov
scas
outsb
push
xchg
cmp
sbb
mov
inc
cmp
mov
xchg
xor
pushf
cmp
imul
sahf
xor
sub
lret
dec
int
dec
in
subb
inc
cli
sbb
mov
ss
inc
jae
inc
xlat
mov
ljmp
call
add
daa
fnstcw
xor
xor
jo
pop
fisubl
iret
cmc
mov
rclb
int3
outsl
popf
cmc
jmp
addr16
lcall
xchg
xchg
cmp
push
inc
stc
das
mov
sub
mov
test
add
clc
lcall
ljmp
xor
pop
sbb
idivl
stos
jg
xchg
lea
cmp
xchg
dec
add
xlat
repnz
mov
pusha
jp
mov
inc
fadd
fisubrl
mov
idivl
sub
adcl
negb
ja,pt
dec
cmc
cmpsl
outsb
aad
lods
and
les
jmp
xchg
sub
icebp
pushl
jbe
rcrl
cld
push
aaa
sbb
int
pop
movsb
add
pop
mov
lods
test
mov
int
cmp
stos
sbbl
or
sub
sub
movsl
mov
insb
add
aam
xor
mov
sub
add
jb
mov
sbb
dec
addb
mov
mov
inc
popf
mov
aam
fldl2e
popa
sbb
outsb
xor
xchg
js
popa
push
push
pop
add
xor
int3
mov
scas
inc
push
xor
lret
rcl
insb
jmp
int3
pushf
iret
fnstcw
push
loope
flds
mov
mov
lcall
mov
mov
pop
or
xchg
pop
sbb
sbb
pop
pop
cmp
push
mov
push
pushf
imul
int
and
push
push
adc
mov
sub
out
movsl
jae
aad
dec
fisubrl
adc
in
cli
sahf
push
jns
or
gs
jae
sbb
mov
jns
lods
mov
lods
fcmovbe
and
int3
andb
outsb
orb
std
cmp
xchg
in
cltd
pop
insl
cli
or
test
or
hlt
mov
jbe,pn
add
sub
adc
sub
pop
or
push
mov
aam
jp
sti
xchg
out
pop
lds
pop
and
mov
cmp
mov
and
jle
inc
fcomps
mov
pop
fisubrs
mov
cwtl
scas
int3
arpl
fcmovnbe
mov
mov
jl
jbe
mov
mov
jb
cmp
std
pop
mov
stos
mov
test
lret
lcall
call
popa
outsl
and
fdivs
push
movsl
std
cmp
enter
shll
cwtl
out
xor
xor
push
pop
inc
icebp
or
mov
jmp
int
jo
mov
or
aaa
sbb
adc
lret
jae
cmp
clc
pop
cmpsb
push
sub
push
fbstp
stc
orl
jg
jp
ljmp
sbbl
aad
lahf
mov
adc
filds
iret
inc
sub
gs
in
sub
fst
dec
add
pop
push
clc
sub
cltd
push
cli
out
mov
cltd
xor
lcall
jne
inc
mov
jmp
cmp
lret
out
jecxz
jne
jb
adc
or
push
push
dec
lds
les
pusha
jb
jnp
shlw
mov
aam
mov
mov
xor
xlat
pop
ljmp
add
xor
or
push
shrb
pushf
xchg
sti
nop
sub
test
imul
shll
adc
add
stos
pop
outsb
adc
test
inc
lcall
inc
cwtl
dec
push
out
aaa
cmp
test
addr16
adc
pusha
add
jbe
and
shl
cmp
scas
xchg
shld
bound
mov
adc
pop
ror
orl
jl
movsb
lods
in
inc
repnz
inc
cltd
mov
inc
push
cld
mov
mov
push
lock
inc
and
push
push
jle
add
jge
inc
mov
adc
or
das
mov
adc
inc
push
aas
out
mov
add
inc
fimull
mov
jns
add
jae
jl
push
cli
lret
ss
lret
adc
mov
out
inc
stos
leave
in
fdiv
outsb
stos
xchg
mov
inc
cmpsb
lea
test
negb
xlat
test
addb
dec
cwtl
jg
pop
mov
pop
pusha
lret
aas
dec
adc
jno
push
fs
icebp
clc
adc
dec
adc
pop
cmp
sub
pop
nop
dec
jne
les
negb
jmp
out
jmp
cli
lret
dec
fs
sub
iret
push
testl
sub
loope
ja
aad
jge
jmp
xor
adc
lods
xor
mov
xlat
in
insl
jg
loope
jns
aam
pop
push
ret
add
and
ret
sbb
popf
cli
sub
cmc
sbb
fcoml
mov
mov
xor
sub
cmp
lret
inc
sahf
xor
jnp
lret
out
call
jmp
adc
mov
insb
es
mov
inc
faddl
addr16
adc
sbb
inc
xor
aad
cwtl
imul
cs
mov
mov
movsl
jnp
aaa
sub
lcall
shll
cwtl
cmpsb
adc
cmp
movsl
cmp
pop
dec
and
push
inc
xor
je
andb
or
jle
adc
jg
fidivs
add
addl
inc
aam
adcb
ss
cmc
divl
adc
dec
or
jg
fistl
flds
pop
jp
aad
and
je
rorb
push
sub
cmpb
adc
jge
loop
xchg
popf
inc
add
jmp
cmp
jnp
adc
inc
loopne
jb
int
data16
stc
and
push
ljmp
mov
lds
mov
sahf
mov
add
inc
add
cmc
jbe
iret
stos
push
popa
faddl
lea
mov
sbb
cli
loop
pop
popf
lret
pushf
addr16
add
dec
inc
lods
sbb
lods
imul
test
cs
pop
jae
dec
cmp
out
mov
repnz
jle
xor
loop
mov
data16
inc
lahf
push
xchg
mov
repz
icebp
sbb
aas
pop
testl
jo
push
sti
fldcw
int3
sarb
lcall
pop
movsb
mov
sbb
pop
inc
adc
jecxz
out
test
mov
clc
mov
sbb
xchg
test
or
mov
mov
das
shl
pop
add
je
cmp
or
js
xchg
imul
test
ds
neg
jo
mov
or
or
jns
mov
push
or
pop
push
mov
jno
cltd
in
push
sbb
mov
insb
xor
lret
and
jg
xchg
in
dec
cmc
push
or
mov
dec
xchg
add
dec
lret
mov
jo
adc
test
addr16
cmpsb
mov
push
jmp
arpl
mov
cmpsl
sbb
iret
cmpb
jg
cmp
fidivs
fs
xchg
xchg
cmp
hlt
fisubrs
out
add
mov
outsb
lods
add
decl
xor
push
out
subl
stos
push
mov
js
xchg
dec
adc
loope
rol
push
add
sub
ljmp
in
inc
push
mov
std
lea
stc
xchg
shr
in
add
ds
xor
cs
sub
add
sbb
inc
fadds
loop
das
clc
test
xchg
shlb
das
addr16
fucomi
ja
mov
jns
mov
push
cs
jo
cld
rorb
clc
pop
add
xor
add
jg
sbb
inc
cmpsb
ret
xor
mov
incb
jle
dec
test
mov
adc
in
outsb
loop
mov
push
sbb
int
jg
xor
insl
in
data16
xlat
push
cmp
ret
jno
mov
fcom
xchg
jmp
les
stos
add
adc
mov
aad
repnz
sbb
xchg
jg
dec
arpl
int
cmpl
mov
sub
pop
pusha
sub
pusha
xor
pslld
cmpsb
aad
push
push
jae
cmp
std
mov
xor
add
xor
mov
or
test
adc
std
dec
leave
andl
inc
mov
cmp
inc
sbb
cwtl
mov
iret
mov
shll
insl
addr16
lea
or
xor
push
dec
divb
dec
or
cmp
dec
shlb
iret
aas
add
xchg
adc
rol
jae
icebp
sbb
enter
shl
xchg
imul
test
es
jp
out
loope
daa
out
aad
lods
mov
insb
sub
push
stc
or
xor
leave
push
dec
int3
fimuls
orl
jle
jnp
clc
mov
xor
aas
jl
pop
lock
cmp
push
push
loope
repnz
stc
jp
push
sub
loop
test
inc
das
pop
mov
xor
mov
jo
out
adc
push
jbe
and
push
test
inc
add
sbb
ja
sarb
repnz
adc
iret
cmpsb
in
sbb
lds
sbb
outsb
lret
popf
push
loopne
shr
cli
and
add
out
mulb
adcb
and
jmp
decl
and
adc
or
push
mov
dec
mov
lock
jns
mov
ljmp
mov
sub
adc
inc
or
aaa
push
sbb
ret
sub
xor
imul
shrb
push
cs
aaa
or
jmp
push
xor
das
push
sub
inc
dec
push
xor
rcll
xchg
popa
sub
mov
enter
dec
dec
xchg
mov
jns
inc
sbb
ret
cmp
jecxz
fstpl
testb
sub
or
mov
dec
push
adc
push
xchg
adcl
idivb
fwait
dec
call
inc
aad
test
repz
add
in
cmpb
mov
pop
add
icebp
mov
lods
mov
movsl
gs
sub
call
pop
leave
fistpll
push
inc
pushfw
out
mov
int
jns
out
loopne
sub
add
hlt
jl
mov
and
idivl
rcrb
nop
fnstcw
sbb
js
jno
push
push
call
mov
add
adc
xchg
add
and
in
sbb
xchg
inc
jnp
cmp
test
stc
pop
adc
jle
mov
and
sub
inc
ss
mov
in
adc
jl
or
add
add
jmp
push
adc
lcall
cld
stc
je
add
call
out
xchg
scas
dec
movsb
in
mov
cmpsb
incl
pop
dec
in
pop
es
sti
sub
and
mov
mov
adc
pop
pop
ret
fiadds
mov
fistl
push
mov
mov
pop
and
lods
movsl
ret
jne
mov
mov
in
jp
aaa
fdivs
inc
pop
loop
inc
jmp
hlt
das
lea
imull
lret
xchg
add
pop
xor
test
lcall
sbb
inc
push
jle
in
mov
scas
pop
imul
xor
mov
jae
push
push
mov
jl
or
insb
jge
mov
fwait
cmpsl
adc
fucomp
cmc
push
jb
lret
xchg
scas
mov
xchg
repz
sub
xchg
jae
mov
int
lcall
imul
push
mov
mov
add
das
cmp
ss
xlat
sub
and
out
xchg
jo
in
pop
mov
cwtl
fcmovnb
mov
jg
mov
dec
push
ss
push
xlat
push
in
std
js
popa
inc
xchg
jae
or
int3
sub
ret
subb
cmp
push
std
sbb
and
hlt
or
out
icebp
jmp
rdmsr
lret
enter
vpmullw
mov
int3
mov
cmc
addr16
movsb
inc
inc
mov
dec
inc
mov
jle
imul
addr16
int3
mov
xor
push
loope
loop
fcoms
loopne
repnz
xor
insl
cli
add
push
sti
fwait
add
popf
sbb
xor
les
add
fs
lret
mov
loop
ret
mov
addr16
lret
aaa
push
dec
sbb
outsl
jge
mov
int3
leave
cli
xchg
cli
in
push
sub
cmc
bound
in
ja
jmp
add
jbe
mov
lods
adc
roll
lret
mov
jl
sbbl
sub
jmp
adcl
inc
sbb
lret
xchg
and
push
repnz
je
xchg
clc
sahf
cltd
and
shll
call
loopne
mov
sub
bound
fwait
in
shlb
mov
mov
jnp
jne
or
lret
lret
dec
jp
dec
fsubrs
iret
enter
pop
leave
popa
add
decb
sti
cli
test
add
popa
cmp
div
rdpmc
mov
iret
push
inc
scas
rcrb
out
add
in
repz
mov
andb
je
jl
and
push
inc
repz
pop
pop
pop
sbbb
cmpsl
sub
push
mov
cltd
mov
mov
inc
fdivrl
mov
push
or
dec
pop
xor
cmp
out
test
pop
dec
movsb
jl
inc
enter
mov
je
add
lods
imulb
jbe
roll
stc
flds
jmp
or
push
cld
inc
fcomps
aam
mulb
test
sbb
lahf
orl
rcrl
jle
mull
bound
push
into
xchg
jle
sbb
mov
aam
xchg
jp
sbb
outsb
mov
popf
out
inc
dec
mov
mov
jge
insl
or
aas
cmp
mov
jmp
cmp
or
mov
jmp
xor
inc
inc
fs
push
mov
loop
notl
lods
add
mov
clc
cmpsl
daa
nop
add
adcb
lahf
popa
movsl
repnz
xchg
out
aas
movsb
mov
aaa
gs
sahf
mov
xor
lock
pop
jg
push
jno
add
adc
cs
cmp
mov
popf
and
test
cltd
loopne,pn
or
repnz
mov
mov
mov
mov
fbstp
sbb
dec
pop
cmp
cmp
outsb
inc
movsb
mov
adc
sub
ret
outsl
je
pop
test
inc
push
xchg
leave
std
push
jae
or
mov
push
das
inc
push
fdivl
repnz
mulb
clc
mov
jbe
out
daa
pop
test
sub
adc
sbb
add
and
data16
outsl
lds
dec
jg
mov
push
jbe
jbe
jo
icebp
or
sub
inc
push
mov
icebp
adc
jmp
mov
push
push
and
xchg
xchg
inc
cmp
flds
shl
pop
or
push
lods
add
push
arpl
mov
aam
mov
daa
jbe
addr16
xchg
int3
loopne
sbb
cli
cmp
cmpsl
mov
cmp
add
lea
pop
ss
outsl
arpl
inc
and
dec
mov
xlat
fwait
and
mov
sahf
sbb
je
sbb
jns
loop
dec
adc
dec
fstpl
add
jne
cltd
cmp
mov
mov
test
xchg
inc
mov
movsb
data16
in
jo
add
xor
sahf
adc
popf
out
rcl
out
mov
movsl
lds
inc
aad
out
mov
dec
push
out
push
sbb
mov
loopne
loopne
or
or
iret
pop
xor
xlat
sbb
outsl
je
adc
shrl
cmp
stos
sbb
pushf
cmp
hlt
jne
testl
add
push
push
pop
jbe
clc
and
sbb
pop
add
adcl
orl
cmpb
sub
lret
xlat
dec
and
jl
sahf
xchg
pop
push
movq
mov
stc
mov
aaa
adc
hlt
xor
sbb
scas
cmpl
sub
rcr
push
cmp
notl
test
js
movsl
xor
nop
push
rolb
lcall
cli
pop
imul
and
jb
xchg
outsb
push
neg
mov
add
sbb
sarb
mov
cmc
int3
mov
sarb
test
mov
and
or
mov
test
xchg
orl
sbb
sbb
insb
mov
enter
mov
sub
out
cmp
xorl
hlt
mov
sub
cmpsl
roll
das
insb
push
rorl
mov
lds
into
ds
dec
xchg
cmc
bound
mov
fidivrl
int
fbstp
xchg
sti
dec
ljmp
lret
mov
cmp
lcall
push
lock
sub
push
ljmp
notb
into
in
xor
fdivl
push
add
incb
mov
xor
int
clc
mov
lea
adc
fwait
imulb
xor
and
in
inc
ficomps
cli
xchg
dec
lret
dec
into
xchg
stos
push
cmp
out
mov
inc
lahf
jbe
sbb
in
insl
mov
es
jl
xor
notl
loopne
lcall
pop
mov
int
push
adc
inc
fsts
cmp
ret
push
push
daa
ljmp
test
test
adc
mov
mov
mov
or
sbb
jmp
jecxz
imul
adc
mov
fsts
cmp
scas
jg
jmp
or
rol
lcall
movsl
dec
fisubrs
inc
ds
loopne
add
or
fsubrp
leave
lcall
cwtl
pusha
or
cwtl
xor
nop
xchg
inc
push
inc
lock
mov
pushf
inc
sbb
inc
pop
adc
or
sub
mov
outsb
test
jo
cmp
jle
sub
scas
cwtl
inc
and
xchg
insb
fdivrl
sbb
lret
cmp
test
mov
add
jae
mov
add
sbb
dec
xor
addb
xor
movsl
movsl
and
jl
mov
and
imul
dec
push
dec
icebp
loop
clc
push
sub
dec
xchg
test
push
test
inc
shrb
popf
outsl
push
std
icebp
dec
ljmp
jecxz
push
ja
sub
idiv
cmp
jmp
dec
mov
and
fsubrl
and
scas
pop
jmp
outsb
mov
ret
adc
mov
xchg
xchg
mov
push
out
or
mov
pop
and
arpl
lds
test
xlat
jns
jne
mov
enter
repnz
ds
inc
sub
pop
movsb
lcall
cmp
mov
out
ljmp
lahf
std
outsl
push
or
and
scas
into
jmp
xlat
insl
js
sbb
lea
iret
popa
out
xchg
movsb
idivb
lock
mov
cmpb
loop
push
bound
fs
cmpsb
and
ja
cmp
subb
mov
and
xor
in
push
sub
lds
inc
dec
pop
repnz
movsb
cmp
jo
lds
pop
add
xchg
adc
and
mov
scas
lahf
lods
xchg
clc
jno
pop
ja
and
test
dec
in
pop
jb
scas
lret
xlat
and
add
scas
inc
mov
mov
or
inc
sahf
mov
aad
fadds
mov
ret
push
test
dec
inc
mov
aas
dec
xor
sbb
fisubs
adc
lea
push
jae
pop
pop
xor
bound
cmp
add
shlb
mov
sbb
mov
pop
rcrl
int3
fsubrp
out
lahf
das
lock
inc
lret
rclb
xchg
xor
jmp
pop
push
shl
mov
and
xor
test
push
loope
insb
shlb
rep
cli
mov
js
insb
nop
mov
fidivl
insb
cmc
dec
sbb
mov
or
jne
or
add
sbb
and
cmp
xchg
sub
mov
mov
stos
sub
jo
rcll
xchg
les
lods
dec
out
add
pop
dec
and
mov
frstor
stc
ret
cld
and
adcb
les
das
jmp
mov
shl
mov
loope
pop
cmp
shr
pop
pop
notb
push
jbe
sub
shlb
scas
std
pop
pop
cli
loopne
xor
dec
cld
xor
repz
xor
bound
jb
int
popf
repz
hlt
addr16
jecxz
test
lcall
jge
in
mov
adc
out
bound
jae
fst
mov
imull
adc
sbb
lret
and
xor
pop
lea
enter
mov
cmpsl
jecxz
cli
icebp
pusha
inc
lods
ss
test
es
xchg
into
pop
jmp
mov
fneni(8087
cmp
mov
scas
or
xchg
mov
jnp
es
aam
push
sti
cli
sbb
or
aaa
push
mov
xchg
jo
andl
mov
mov
adc
sub
fucomi
mov
arpl
cmpsl
cmp
sbb
push
push
inc
cmpsb
stc
push
dec
inc
lret
shl
adc
fwait
jne
or
mov
add
cmp
insb
bound
outsl
ret
dec
pop
mov
xchg
mull
jl
pop
push
repnz
push
xchg
call
outsl
or
add
mov
adc
cwtl
test
mov
lret
or
pop
shrb
jae
jae
or
into
and
jmp
sub
push
lods
out
pop
jno
fbstp
mov
repnz
or
sub
jo
jecxz
push
jo
jmp
push
fcoms
aas
negl
out
push
jecxz
cld
or
sub
das
pop
cmp
sbb
int
mov
push
inc
pop
loope
xor
push
out
imulb
sub
arpl
int
jne
loope
cmc
mov
lret
and
test
jecxz
call
cmp
lods
loopne
call
shlb
xchg
sbb
push
movsb
pop
push
mov
inc
out
dec
and
dec
imul
mov
mov
gs
mov
mov
xchg
xor
add
nop
pop
mov
sbb
imul
lods
add
push
cmp
add
scas
movsl
insl
imul
imul
jp
jg
or
xor
push
call
mov
in
mov
movhlps
repnz
nop
lret
pusha
lods
add
mov
mov
into
push
push
int
out
inc
out
cmpsl
cmp
or
cmp
scas
divl
and
mov
ja
stos
inc
into
or
arpl
lret
xor
js
int
or
lea
jo
rorb
outsb
lds
dec
shl
add
jg
pop
cwtl
add
add
les
loope
stos
dec
ljmp
nop
sub
aad
sbb
add
cmp
jg
repz
pop
fwait
pop
cmp
scas
test
or
cmpsl
mov
lods
sbb
shrl
sub
mov
xor
push
test
adc
icebp
xor
mov
sub
lea
pop
fisttpl
mov
pop
fldenv
stc
and
add
pop
sti
mov
push
or
jecxz
jle
fdivrl
int
push
inc
push
or
add
das
sbb
mov
push
or
sbb
mov
mov
fiaddl
pusha
lahf
fsubrp
das
sbb
and
in
dec
roll
popa
enter
mov
jmp
push
cmpb
int3
mov
inc
jmp
lds
insb
fsubrl
xor
cmp
ljmp
pop
cmp
shrl
jne
ret
fs
cld
or
xor
xchg
not
imulb
or
jnp
cmc
sarb
out
sbb
dec
shll
scas
call
xor
js
cmp
or
mov
mov
popf
xchg
jg
lcall
lods
adc
shrb
or
jb
xchg
push
lds
adc
shll
int3
je
inc
jmp
dec
in
movsl
dec
fnclex
and
sbb
mov
add
mov
lahf
jns
test
cmp
inc
popf
mov
lahf
andl
mov
cvttps2pi
add
mov
push
xor
sub
and
cmp
sub
jmp
dec
sub
std
mov
adcl
int3
and
cmp
push
add
and
cmp
lock
scas
addr16
lcall
sahf
ret
push
jbe
cmpsb
loope
ds
sbb
imul
ret
sbb
xchg
inc
nop
add
stos
stc
out
test
jg
push
add
shrl
jbe
ljmp
or
jp
aad
sub
mov
inc
scas
xchg
add
test
or
nop
rclb
cmp
sbb
shl
test
mov
mov
in
inc
add
cmp
cwtl
insl
sbb
fisttps
push
scas
fwait
push
enter
divb
jmp
push
xor
mov
adc
and
arpl
addr16
je
xchg
add
sbb
nop
sbb
jno
sbb
mov
test
pop
fadds
ja
stos
and
mov
nop
sub
jno
imul
fisttpll
hlt
or
jnp
mov
insl
fbstp
jg
xchg
sbb
mov
inc
adc
inc
dec
lret
and
std
mov
hlt
test
or
pusha
xlat
inc
pushf
daa
rorb
mov
cmpsl
addr16
mov
pop
repnz
test
pop
decl
xor
push
shrl
orl
lds
jle
xor
cmp
mov
lds
in
outsl
sbb
out
lcall
clc
adc
xlat
mov
pop
sti
sbbl
stos
cld
adc
cwtl
inc
vmovq
in
xchg
movsl
ds
fsubl
fmull
mov
scas
outsb
jle
pop
imul
jb
mov
or
out
int3
add
test
ficoms
imul
sahf
call
cli
xchg
divb
scas
xchg
sub
and
and
push
or
jp
and
push
mov
hlt
imul
test
pop
sbb
push
pop
hlt
lea
ljmp
inc
dec
in
out
inc
ret
out
mov
fidivl
testb
add
out
aaa
mov
lret
in
pop
or
xchg
lcall
gs
inc
ds
outsl
sbbl
jne
repnz
add
mov
inc
pushf
jg
jne
sahf
pusha
adc
fistpll
mov
enter
xor
jle
jmp
add
mov
test
fmull
repz
mov
mov
subl
jg
lcall
in
andb
push
mov
out
fidivs
shlb
out
jnp
push
sub
popf
xor
add
je
test
pop
jle
push
add
mov
mov
cmp
in
xchg
outsb
sub
mov
loop
push
aam
push
xor
fbstp
push
addr16
data16
mov
and
xchg
dec
clc
popa
addr16
outsb
test
shll
fwait
pop
dec
aam
push
or
add
fisubl
xchg
test
shl
lods
mov
jne
test
popa
dec
push
cs
or
out
shrl
sub
lahf
push
bnd
dec
es
lods
or
daa
jl
pushf
jno
cld
sti
dec
repz
out
aam
loopne
scas
or
xchg
lock
ret
inc
popf
jge
lret
test
cmp
popa
enter
push
jae
loop
ja
sbb
ret
mov
outsl
sub
mov
pop
lea
aaa
jnp
fucomip
pop
out
sbb
ss
pop
shld
sub
imul
pop
mov
dec
pop
push
divl
idivb
pushf
int
pop
ds
test
jo
dec
dec
adc
pop
out
das
mov
adc
fmul
inc
xor
xchg
push
inc
lcall
mov
imul
push
add
fcomip
lcall
mov
pop
or
inc
push
cmp
jne
dec
pop
sbb
inc
pop
xor
jp
sbb
pop
lea
test
lahf
jne
fs
hlt
push
clc
call
sbb
add
mov
inc
pop
insb
jp
jge
dec
mov
ret
mov
scas
in
mov
jbe
incb
pushf
dec
scas
xchg
inc
push
clc
sbb
jne
push
scas
inc
nop
sub
dec
xchg
xchg
sbb
cmpsl
dec
cltd
pop
cltd
xchg
popa
pop
out
push
movsb
mov
inc
cmp
add
jo
or
mov
adc
imul
iret
jno
push
je
inc
adc
cmpsb
push
pop
mov
mov
add
xor
loop
dec
sbbb
lods
inc
fildll
mov
pop
lret
movlps
add
fiadds
sub
scas
xor
sbb
xor
push
mov
in
sub
movsl
add
mov
inc
enter
xchg
xchg
imul
xchg
mov
pushf
push
mov
pop
je
movsb
lea
rorb
out
fldt
cmp
insb
test
repz
dec
loopne
xchg
rcl
into
cmp
add
ret
scas
pop
imul
push
mov
leave
and
cmp
decb
pop
loop
push
sbb
jle
mov
test
pusha
adc
jns
add
mov
mov
sub
icebp
enter
lret
js
xchg
bound
xchg
lods
and
aam
push
and
sbb
orb
lret
mov
mov
or
ret
xchg
call
mov
or
sub
jp
stos
aas
push
and
and
loope
movsl
lds
cwtl
insl
js
insl
xchg
xor
je
hlt
sbb
xchg
std
cwtl
add
sbb
scas
loopne
sbb
push
repz
xchg
push
adc
je
icebp
iret
add
cmp
movsl
add
sbb
mov
fcoml
lret
lds
add
mov
imul
rcl
dec
pop
mov
out
dec
call
stc
dec
scas
out
push
rorb
add
insl
lea
lahf
add
mulb
sub
ja
push
push
es
aaa
mov
jns
negl
jg
add
je
test
sub
pop
repnz
push
and
outsl
pop
or
sub
out
testb
fucom
push
sub
mov
jno
adc
jns
imul
popa
push
or
imul
add
pushf
pop
hlt
js
stos
insb
call
xchg
xor
or
stos
cmp
push
add
cld
lods
clc
jae
and
mov
je
push
push
mov
sbb
orl
out
mov
jecxz
test
push
mov
arpl
jne
mov
ret
cmp
cmpsl
cmpsb
lock
sti
stos
xchg
sub
add
je
xlat
pop
adc
xchg
pop
dec
xor
daa
lret
enter
fwait
and
cmpsl
xor
sub
sbb
adc
js
bts
imul
add
stc
xchg
jb
push
push
fsubs
push
mov
fs
rcrl
push
jmp
inc
sbb
aaa
stc
xlat
popf
popa
and
pop
stc
nop
mov
inc
inc
add
mov
inc
dec
cmp
jle
xchg
test
jmp
hlt
mov
test
pop
imul
mov
rcrb
sbb
repz
cmp
bound
inc
icebp
mov
sbb
std
dec
bound
movsb
push
xchg
mov
inc
das
mov
aas
dec
fldenv
and
scas
xchg
out
sbb
int
mov
fwait
in
xlat
testl
fistl
mov
iret
jmp
mov
adcb
lock
mov
push
incb
mov
and
icebp
pop
cmpsl
and
xchg
pop
repz
and
cmp
mov
and
sub
push
jae
js
lods
xchg
rclb
cmpsb
je
inc
dec
mov
add
les
dec
daa
out
or
sbb
xchg
ljmp
out
fadds
imul
outsb
jno
in
xchg
repz
sbb
je
push
icebp
stos
cmp
mov
sti
lcall
scas
sub
shlb
nop
mov
lods
adc
push
fildl
movsb
cmp
mov
inc
loopne
shlb
lods
add
mov
popf
and
xchg
adcb
sub
enter
xor
ret
roll
cmp
mov
jmp
push
out
and
in
sbb
popl
sub
mov
sbb
ljmp
rorl
sahf
push
jg
pusha
leave
jge
xlat
inc
sbb
adc
push
dec
sbb
inc
push
and
out
sub
jge
les
push
jnp
lods
and
dec
iret
ss
fisubrl
mov
idivl
mov
jmp
xor
sub
inc
add
rolb
inc
mov
push
jbe
scas
lcall
movsb
xor
scas
inc
cmc
dec
pop
sahf
mov
andb
dec
jnp
mov
ret
inc
push
outsb
shr
sub
ljmp
stos
cmpsl
out
sub
dec
dec
lret
jmp
sti
pop
mov
lret
sub
outsl
xchg
mov
adc
stos
popa
not
les
pop
dec
pop
out
jbe
mov
push
bound
shl
push
mov
dec
add
aad
push
sbb
adc
aas
push
and
mov
cmpsl
dec
cwtl
cli
jmp
loopne
mov
out
decb
dec
xchg
dec
cmp
xchg
cmp
pop
movsl
or
inc
cmp
pusha
fcoms
jecxz
lods
xchg
xchg
shlb
pop
out
movsl
pop
flds
xor
xchg
popf
cmp
jbe
ret
mov
pinsrw
fs
add
lret
push
int
and
inc
mov
aad
sbb
or
mov
sub
push
cmp
movsl
repz
lea
mov
rcrl
call
adc
sahf
xor
xor
inc
cmp
clc
mov
shlb
jns
push
scas
lcall
popf
adc
dec
aaa
sbb
addr16
movb
std
cltd
aam
sbb
fwait
inc
xor
jl
test
jbe
xchg
push
mov
addr16
dec
repnz
call
add
dec
lock
popa
and
cmc
or
ror
dec
pop
std
icebp
rcrb
mov
inc
stc
movsl
xchg
sbb
sub
sub
movsb
jle
lea
sub
adc
sub
fbld
stos
aas
fsub
mov
fcmove
add
jae
push
push
sub
inc
rcrb
mov
pop
das
arpl
sbb
out
cmpsl
pop
arpl
enter
ljmp
push
je
int3
cmp
mov
movsb
dec
mov
mov
and
xchg
fsubs
inc
imul
fidivl
and
inc
xchg
sbb
test
ljmp
out
jns
iret
mov
jno
jnp
movsl
xchg
xchg
imul
mov
add
lret
pmulhuw
mov
push
loopne
pop
insb
pusha
rcrl
movb
lahf
gs
in
ljmp
out
int
pop
inc
pop
jb
shll
fidivrs
sbbl
dec
pop
call
mov
sbb
push
in
cmpsb
add
in
insb
xchg
pop
sbb
dec
leave
mov
cmp
sbb
jp
iret
mov
and
ds
loopne
rcll
rcrl
rorl
sbb
outsb
rol
ret
ds
out
mov
les
sub
fnsave
int
push
adc
inc
popa
into
rcrb
xor
loop
dec
mov
sbb
aad
adcb
jge
mov
fstpl
push
testl
lret
subb
ret
jle
ss
dec
mov
mull
adc
jbe
fsubr
shll
fsubs
cmp
gs
mov
sets
cld
mov
inc
adc
dec
pushf
cli
call
scas
add
jo
daa
lret
fisubrl
js
xchg
mov
cltd
jnp
mov
lock
mov
xchg
jmp
and
inc
dec
loop
xchg
push
push
cmpb
dec
xchg
pop
mov
icebp
xchg
lcall
ljmp
cmp
push
and
dec
fbstp
popf
ret
pop
dec
movsl
adc
fldt
mov
sti
testl
in
xchg
out
mulb
imul
push
jmp
test
push
aam
push
mov
test
xchg
orb
mov
fisttpl
pop
or
aaa
incl
lahf
cmp
mov
pop
inc
insl
loope
mov
and
movsb
xorl
jne
rolb
aaa
pop
sub
addb
dec
and
sti
pop
mov
push
adc
iret
xor
jg
test
loope
jg
sbb
push
cmp
pop
into
in
faddl
sbbb
lret
xchg
sub
dec
jne
js
aaa
int
adc
dec
inc
push
lret
inc
jbe
test
pop
push
movl
and
cmp
pop
repz
push
out
insb
aaa
cmpl
and
gs
push
ds
mov
pop
int
sbb
inc
mov
xchg
and
inc
movsl
js
roll
mov
add
sbb
bound
xchg
cmp
test
hlt
ret
testb
sarl
dec
pushf
inc
pop
cmp
rolb
dec
mov
das
mov
fwait
js
cltd
cmp
int
pop
das
xchg
fistpll
mov
shrl
mov
dec
pop
mov
test
rol
popf
lods
push
push
or
dec
push
adc
jns
out
rorb
stos
les
lods
fs
pop
loop
sbbb
or
jle
insb
or
popf
pop
movsl
mov
jne
mov
mov
aaa
stos
lea
push
add
popa
or
adcl
cmp
pop
sub
pop
hlt
pop
rcrb
mov
fsubrs
sbb
jo
imul
push
cld
jl
sub
rolb
or
cmpsb
arpl
cwtl
pop
xchg
fstpl
dec
fildll
shrl
mov
and
das
mov
outsb
scas
inc
iret
lahf
or
mov
mov
xor
pop
mov
cli
outsb
cli
dec
cmpsb
cmp
es
stos
stc
xor
lcall
mov
cmp
sub
sub
enter
rclb
mov
and
fnstenv
inc
ja
xchg
adc
lea
andb
addr16
hlt
cmc
xor
inc
jge
jae
test
dec
mov
data16
subb
imul
inc
int
adc
xor
pop
idiv
icebp
in
xchg
mov
adc
sub
out
sub
sbb
mov
cmpsl
cmp
rorl
and
iret
imul
sub
push
cltd
pop
xchg
inc
gs
adcb
ret
push
test
mov
aam
sub
push
sub
je
lret
xlat
cmpsl
aas
sub
jo
mov
fcoms
sub
dec
in
push
vpminub
pushf
or
adc
lods
lret
cs
push
shrl
or
das
lea
loop
jmp
ljmp
cwtl
test
push
out
dec
fstpl
dec
les
add
loopew
js
lods
subl
mov
orb
pop
cltd
mov
loop
ja
pop
repnz
pop
add
popf
popa
nop
pop
icebp
push
add
pop
mov
popa
and
push
xchg
popa
cmp
mov
scas
inc
fldcw
xchg
add
adc
scas
inc
test
ds
int3
movsl
mov
rorl
lods
cli
push
out
enter
mov
mov
or
pop
adcl
testl
sub
lret
dec
and
fsubrs
out
dec
jns
jno
cld
fmull
and
in
push
andl
cmp
add
in
mov
lcall
arpl
xchg
int
mov
inc
dec
mov
cmpsl
sarl
hlt
and
add
lret
aad
int
pushf
sbb
hlt
cmpsl
lret
ja
shll
adc
fcoms
scas
inc
jmp
fs
inc
push
mov
cmp
mov
fmull
outsb
jne
insl
loopne
cmp
aas
pop
rcl
lock
inc
repnz
pop
in
cltd
fnstsw
cwtl
stos
repz
stc
jbe
mov
js
rcrl
icebp
mov
testl
push
inc
and
out
rclb
add
arpl
or
mov
pop
mov
loopne
icebp
xchg
stos
fsubl
xchg
xor
cltd
mov
out
loopne
mov
ret
ficoml
test
push
and
mov
fisttpll
loopne
repz
in
insb
and
jne
les
cltd
and
lahf
mov
pop
icebp
dec
aam
test
push
out
stc
test
add
repz
pop
dec
or
and
pop
xor
adc
js
mov
testl
sub
sub
cmc
push
inc
cmp
xor
hlt
jae
inc
push
adc
lret
fbld
dec
mov
pop
cli
push
lods
pushf
cli
mov
and
and
or
out
push
sub
sbbb
sbb
cmpsb
fs
sbb
xchg
cmp
pop
loope
push
adc
jb
push
push
xchg
cmp
clc
outsb
repnz
pop
mov
rclb
xchg
pop
or
call
iret
pop
repnz
push
dec
out
cmp
fchs
mov
push
lcall
in
iret
sarl
bound
scas
xchg
jp
popf
add
fs
push
cmp
push
testl
inc
subl
mov
dec
pop
sti
push
pop
cli
test
and
dec
adc
mov
fnsave
mov
jae
sti
pop
imul
jns
repnz
mov
xchg
mov
mov
cmp
movsb
xchg
mov
imul
cmpl
jae
pop
lahf
lods
decl
sub
mov
adc
push
sub
test
insb
sahf
pusha
icebp
movsl
rolb
pop
mov
sbb
inc
imul
cmp
out
sbb
push
push
pop
stos
mov
int
inc
fsts
mov
push
adc
pop
mov
lock
inc
jns
mov
ss
add
fisubs
dec
fldt
cmp
test
mov
and
fucomi
push
ljmp
std
cmpsl
add
ss
jb
cmp
sbb
sarb
add
xchg
xor
sbb
arpl
cld
fsubr
pop
mov
shrl
aaa
fwait
and
jae
dec
mov
sarb
jno
xchg
cmp
fnstcw
or
insl
sbb
cmp
mov
les
stc
mov
mov
lcall
leave
push
mov
pop
arpl
pop
sbbb
xlat
inc
cli
push
cmc
stc
pop
cmp
test
rclb
cmpsb
shll
enter
test
int3
pushf
jle
lds
cmp
mov
xchg
out
popf
aas
mov
fisttpl
ficompl
pop
bound
adc
mov
adcl
pop
repnz
push
jp
jns
sbb
mov
xor
aad
shl
xor
out
add
xchg
mov
dec
pop
leave
and
or
add
iret
sbb
push
out
add
das
cli
loope
lods
jnp
out
xor
ds
pop
dec
in
int3
mov
sbb
cmp
sub
adc
fistpll
cmp
loopne
or
cmp
inc
dec
mov
lds
add
cmp
mov
mov
popa
mov
aad
push
cmc
jle
in
repnz
jne
xor
mov
stc
test
lods
add
pop
cmpsb
popa
mov
or
or
jecxz
cltd
popf
sub
jo
xchg
mov
in
xchg
or
dec
std
arpl
popf
mov
lods
outsl
push
mov
lea
dec
inc
xlat
jnp
push
movsb
sub
jns
imul
push
mov
xchg
hlt
sbb
cmpsl
out
jmp
ret
jecxz
sbb
mov
arpl
dec
movsb
push
mov
or
mov
ret
lock
popa
xchg
add
aad
pushf
dec
lods
xchg
cltd
inc
cmc
pop
xchg
divb
movsl
jecxz
pusha
lcall
and
fmuls
stc
nop
ds
pushf
dec
pop
pop
sub
and
pop
cwtl
push
out
and
and
cmp
cmp
jo
imul
push
mov
jne
ds
sub
cmp
jbe
pop
mov
push
push
cmc
pop
ljmp
xor
dec
xchg
mov
ret
push
loope
mov
dec
iret
and
jb
push
lcall
lds
cs
jne
ja
int3
fdivr
nop
jae
sar
and
sbb
iret
dec
xchg
ss
test
lcall
sbb
mov
loopne
iret
cltd
jnp
fsubrs
sbb
je
xchg
testb
shlw
and
sbb
adc
movsl
js
jno
addl
pop
loopne
cltd
xor
movsl
cmp
cld
les
out
xchg
and
stos
xchg
add
inc
xor
mov
cmp
fnstcw
adc
negb
dec
fidivl
adc
add
les
mov
adcl
jae
add
pop
xchg
test
add
push
pop
mov
cmpsb
push
testl
mov
insb
nop
mov
jbe
repnz
rol
inc
pop
imul
ds
ficompl
mov
xchg
mov
pop
les
mov
sbb
pop
test
stos
es
pushf
xchg
xor
shll
fwait
lods
fisttpl
lret
mov
push
fstpl
outsl
pop
and
nop
dec
sub
pop
lea
and
pop
out
outsl
lods
test
pop
popf
ja
mov
mov
dec
ja
cld
lret
shl
sahf
pop
mov
mov
jle
xchg
pop
inc
mov
test
sbb
xchg
xchg
push
jecxz
leave
cmp
dec
in
aad
sbb
sub
sbb
shrl
pop
or
mov
fcoms
fwait
and
mov
mov
scas
and
mov
xchg
cmc
pop
es
lahf
push
cltd
sbb
mov
cmp
insl
or
daa
or
cmpsl
cmc
int
xor
test
int3
inc
inc
cmp
out
xchg
popa
mov
adc
inc
test
and
pop
mov
inc
adc
js
push
inc
jb
or
jmp
cli
incl
mov
or
std
push
sahf
mov
cld
stc
jb
inc
mov
imul
inc
fld
pushf
aaa
sbb
lods
xor
outsb
cmp
icebp
insl
shrb
imul
cmp
sti
xchg
stos
mov
and
cmc
and
jecxz
ds
mov
fldcw
inc
push
dec
ficompl
sub
xchg
jg
test
ret
hlt
fcmovnbe
imul
dec
in
jns
xor
jmp
xor
icebp
mov
into
jp
mov
arpl
add
or
ret
leave
jecxz
loope
sub
in
mov
sbb
outsl
repz
iret
rcll
inc
inc
dec
notl
sub
ljmp
cwtl
scas
scas
cwtl
pop
in
dec
mov
jle
mov
jmp
xor
inc
adcb
push
inc
arpl
test
rol
and
dec
pop
enter
push
mov
push
cs
loop
ds
mov
pop
cmp
add
cmpsl
push
negb
data16
loope
mov
rorl
mov
push
pop
imul
sub
sbb
pop
cmc
aas
xor
cld
jg
nop
out
repz
in
leave
clc
into
xchg
loope
inc
push
cmc
sub
stos
fnstenv
addr16
cltd
sub
pop
loop
sti
xchg
sub
jge,pt
enter
movb
es
sbb
ret
mov
into
push
fcmove
push
lahf
jno
inc
jnp
fsts
inc
adc
fisubs
cmovp
xor
jle
inc
es
xchg
incl
mov
lret
jg
xchg
ljmp
es
lock
idivb
add
cmpsl
ret
subb
popf
jg
fimull
mov
and
daa
mov
add
outsb
sti
sti
cltd
push
jmp
rorl
mov
mov
dec
ret
aas
jmp
mov
push
cwtl
and
jae
cs
test
cmp
inc
pop
inc
aam
rorb
aaa
into
mov
in
pushf
aaa
and
inc
or
gs
xchg
lods
hlt
push
cmp
fstpt
test
bnd
xor
xor
sbb
ss
jge
or
dec
sahf
shrb
orb
mov
pushf
sbb
mov
das
jo
out
in
pushf
mov
mov
lret
sbb
je
mov
test
adc
cmovb
out
xor
outsl
out
xchg
sbb
imul
pop
push
lcall
rcrb
test
lret
mov
xchg
cmp
test
gs
jne
outsl
int3
outsb
adc
outsl
add
sub
sbb
pop
divb
push
cmp
stc
pop
movsl
addb
das
xchg
stos
pusha
sub
jne
mov
daa
ret
stc
pop
stos
call
jbe
insl
mov
pop
mov
mov
push
xor
mov
xchg
cmp
fsubl
pop
push
fs
enter
loop
push
leave
xchg
xchg
mov
cmp
jecxz
dec
pop
aaa
sub
std
xor
sbb
out
xor
inc
jecxz
mov
jg
sub
incl
inc
dec
pusha
cs
xlat
inc
clc
in
jl
cmc
pop
mov
jb
push
in
push
les
aaa
pop
and
out
jp
leave
stos
loope
js
jne
shrb
movsl
push
cwtl
pop
pop
jge
xchg
push
xchg
mov
sub
cli
inc
std
rclb
fnstenv
xor
testl
add
pop
lahf
std
adc
sbbl
add
or
adc
inc
rcrb
mov
cmp
js
cmp
out
jns
xorl
fidivl
adc
or
dec
mov
cltd
dec
scas
stc
je
sbb
aas
and
lods
loope
mov
cli
ret
sub
cmp
daa
outsl
mov
cmpsl
mov
pop
loope
daa
adc
shl
xchg
mov
int3
shr
dec
into
cmp
mov
in
jns
inc
pushf
out
fwait
mov
and
jb
leave
and
imul
js
mov
push
dec
inc
push
mov
mov
push
rclb
add
pop
push
inc
cltd
jne,pn
loopne
cli
fistpll
mov
aam
dec
gs
int
mov
and
pop
push
in
jb
lret
mov
outsb
and
adc
aaa
fldcw
jne
pop
xchg
fmuls
or
addl
test
sbb
adc
mov
jmp
insl
insl
scas
fldt
sbb
idivb
fistpll
sub
mov
das
jp
push
xchg
sub
cli
dec
enter
pop
dec
in
mov
hlt
ret
repz
lcall
in
xor
mov
inc
pop
popf
iret
imul
xor
incb
rcll
pop
lcall
aas
sbb
jnp
mov
ret
sbb
sbb
in
sbb
jno
pop
pusha
mov
adc
fstps
push
repz
sbb
stc
xorb
push
or
imul
cltd
lret
lods
adc
adc
lret
and
scas
mov
fisubrl
mov
cltd
mov
xchg
cs
leave
push
push
inc
jnp
sub
or
push
stc
decl
and
clc
sahf
inc
sti
mov
and
push
pushf
add
mov
sarl
in
mov
adc
sbb
mov
lret
mov
push
rcrb
stos
xor
adc
clc
cmpsl
push
inc
stos
jmp
aas
jmp
jl
mulb
pop
pop
out
sbb
shlb
inc
mov
in
or
das
leave
jbe
fidivrs
int
mov
aas
add
or
out
cmp
jae
add
xor
sbb
dec
das
mov
js
push
push
lcall
cwtl
xchg
mov
ss
inc
hlt
xchg
add
rcrl
addr16
negl
pop
mov
cmp
pop
mov
push
and
lock
mov
dec
mov
ror
das
ja
mov
dec
dec
sti
sub
add
jae
sbb
bound
push
outsl
pop
dec
mov
pop
sub
imul
mov
ficoms
pop
pop
add
push
test
ret
fbld
mov
cltd
dec
dec
cmp
ret
aam
adc
ds
xor
addl
xchg
add
add
inc
adc
cwtl
imul
ss
xchg
push
mov
mov
mov
push
imul
cmpb
fdiv
mov
sarl
ds
adc
jnp
add
outsb
adc
cmpsl
out
insb
sub
arpl
and
sahf
clc
mov
xchg
mov
cmpl
mov
in
jns
push
mov
movsb
outsb
add
stos
rcl
jp
add
sub
xchg
das
xchg
pop
push
in
sbb
inc
ds
mov
add
stc
and
shr
push
mov
cwtl
movb
adc
xchg
inc
mov
out
xchg
jmp
rorb
and
add
pusha
jg
jno
mov
clc
inc
push
mov
mov
xor
or
jo
ds
adc
mov
bound
je
notl
roll
imul
cmp
and
fmul
fwait
rcrb
sarb
out
mov
rcrl
inc
inc
push
insl
pop
push
rorb
add
aad
in
stos
mov
test
push
pop
movsb
xchg
aas
call
sub
test
add
mov
fsubp
sahf
jno
jbe
inc
leave
jns
dec
arpl
sahf
pop
stos
js
pop
sub
int3
sbb
mov
imul
xor
mov
sub
dec
dec
jb
aad
ret
sbb
and
jne
repz
sub
mov
nop
test
add
test
mov
fucomp
test
scas
sub
xor
mov
mov
cwtl
sub
push
stos
inc
xlat
fldt
pop
dec
jns
inc
push
cmpsl
fadd
or
ljmp
mov
xchg
in
test
or
fs
xchg
jno
add
insb
mov
sbb
sbb
stc
cmp
mov
sub
pop
mov
mov
es
dec
pop
nop
fs
movsl
sub
clc
push
inc
cmp
pusha
adcb
and
test
shrb
gs
pop
sbb
ljmp
mov
inc
fistpl
insb
dec
pop
scas
icebp
clc
or
add
ficoml
iret
data16
cmp
jmp
mov
shrl
and
fs
inc
push
or
pop
mov
sahf
cltd
push
cltd
mov
arpl
mov
inc
sarb
stos
ss
dec
jnp
push
mov
and
fmulp
xchg
test
pop
mov
adc
lret
sub
repz
popf
xchg
cltd
dec
adc
aas
pop
movsl
lahf
push
jns
xor
xor
dec
add
push
dec
fbld
dec
data16
jle
mov
cmp
insb
aas
subl
mov
aam
adcb
jg
xchg
std
pop
cltd
inc
enter
push
dec
mov
push
sub
imul
add
loope
rcll
out
pmullw
outsb
mov
mov
cmp
cmp
cltd
jg
stc
je
mov
ret
jle
sbb
pop
mov
sbbb
cs
lahf
notl
lahf
jo
shll
push
mov
in
pop
sbb
xor
repz
outsb
ror
icebp
lcall
mov
mov
outsl
mov
xchg
pop
mov
loopne
mov
push
gs
cmp
repnz
cmp
aad
pusha
xchg
or
push
jmp
ja
mov
ds
faddl
cmp
jbe
pop
test
fdivrl
sub
push
inc
fildll
sbb
sbb
fnstcw
xchg
add
pop
xor
popf
or
jl
test
and
mov
inc
cmp
push
pop
call
adcb
cli
sarl
add
lock
add
lods
int
mov
repnz
mov
icebp
inc
fildl
and
inc
push
daa
bound
push
out
adc
mov
jns
addr16
cmpsb
adc
shlb
or
das
xchg
push
adc
mov
add
mov
sub
shl
adcl
dec
fbstp
pop
dec
add
fisubl
jnp
jecxz
popf
or
pop
es
test
mov
movl
mov
fsubrp
scas
mov
rorb
jns
mov
popf
test
ljmp
xor
xchg
xchg
mov
sub
xor
jge
aas
into
mov
sbb
adc
xchg
pushl
fwait
outsb
test
push
mov
sbb
jnp
cmp
subb
adc
dec
xchg
sub
das
sbb
outsb
or
jnp
or
adc
mov
jbe
mov
jmp
sub
jge
cmp
int3
sub
jg
add
popf
aam
sbb
cmp
dec
jbe
jae
aas
or
outsb
cwtl
mov
sbb
xchg
cmpl
mov
add
xor
imul
push
in
addr16
test
pop
or
mov
sahf
outsl
loop
in
mov
dec
xor
ja
sbb
sbbl
sbb
arpl
imul
lds
mov
pusha
shrb
daa
ss
inc
je
ja
pop
xchg
dec
pop
sahf
scas
cli
inc
xor
test
stc
je
pop
iret
sbb
imul
push
mov
pusha
icebp
lahf
pop
mov
cmpsb
es
in
leave
lcall
and
inc
sbb
jb
into
enter
insb
dec
incb
xor
ret
push
rorl
and
fadd
fadd
enter
adcb
xchg
sub
xor
aaa
ret
push
scas
js
ljmp
lock
repnz
lock
push
and
add
xchg
push
pop
dec
lahf
sub
adc
push
jnp
fists
pop
lahf
dec
lock
lret
fwait
cmp
adc
pusha
pop
shl
jbe
jno
add
out
gs
cwtl
push
adc
inc
push
push
inc
add
or
push
inc
mov
out
xlat
pusha
jl
pusha
mov
fwait
dec
inc
sbb
lock
std
lods
and
mov
dec
jl
jnp
pop
cmp
das
jae
add
aam
mov
orb
jbe
and
pop
es
and
sbb
je
ret
add
cmpsl
fs
arpl
mov
aas
push
rcrl
stos
inc
stos
scas
call
and
iret
adc
lahf
lds
lahf
xor
sbb
adcb
fmulp
imul
dec
adc
cli
and
xchg
pop
subl
jle
fcompl
mov
or
and
dec
push
dec
add
dec
fists
subb
movsl
icebp
aas
add
push
fistl
pop
in
fidivrl
test
not
and
dec
fcompl
loopne
or
leave
adc
adc
jge
pop
fidivrl
pushf
nop
pusha
mov
inc
aaa
adc
mov
out
jnp
int3
push
mov
js
cmp
aam
shl
lret
lret
loop
dec
mov
sub
scas
xchg
test
adc
and
adc
iret
enter
imul
mov
jnp
movb
xor
cwtl
in
ret
dec
jp
stc
push
jmp
stos
mov
lea
or
jns
sub
lret
test
data16
pusha
dec
mov
sbb
shl
mov
mov
jmp
add
sarb
xchg
and
sub
lea
adc
hlt
cwtl
shrb
mov
filds
into
inc
lock
dec
pop
mov
and
mov
jmp
fcomip
ss
dec
jl
mov
xlat
daa
adc
cltd
movsl
test
adc
mov
cli
data16
imul
aam
test
inc
lods
xchg
mov
hlt
inc
mov
cmp
push
js
shrl
movb
call
lcall
fisttps
lea
lds
jge
cli
mov
sbb
je
nop
cltd
or
push
inc
sub
sahf
gs
mov
mov
mov
js
xchg
sbb
divb
sbb
insl
jg
jge
dec
sub
rcrb
adc
xchg
pop
or
xchg
enter
pop
push
subl
hlt
jb
ja
sbb
jae
mov
inc
cmpb
xchg
out
xlat
popf
out
push
adc
or
js
push
jnp
enter
loope
and
xchg
fcoms
int
jae
or
lret
rorl
in
mov
xchg
xchg
mov
dec
shl
jl
int
xchg
sbb
xor
mov
push
xor
xchg
pop
call
movsl
cltd
sbb
cld
imul
orl
adc
pop
mov
jo
andb
mov
add
push
xor
fwait
pushf
std
popf
hlt
test
dec
addb
scas
nop
imul
sbb
enter
sbb
mov
mov
xor
sub
ficomps
push
in
out
jl
xchg
adc
nop
fstl
ljmp
jno
add
mov
stos
test
cmp
mov
js
repz
cwtl
or
inc
mov
imul
or
movsb
ljmp
pop
cmp
dec
test
addb
cmp
or
popa
rclb
add
stos
mov
add
push
adc
mov
mov
icebp
dec
mov
push
icebp
mov
ret
add
in
push
scas
fisttps
jecxz
pop
xor
filds
xorb
pop
scas
jne
cmpsb
push
lea
jnp
mov
loope
mov
mov
sbb
xor
into
inc
das
cmc
stos
pop
fst
mov
push
jmp
das
or
or
in
sub
jae
mov
mov
mov
mov
fs
sahf
sbb
mov
lahf
push
pushf
lea
adc
cld
push
mov
inc
fs
xchg
and
aam
sub
out
mov
xchg
lds
jo
dec
or
fbld
mov
xor
mov
int
adc
test
xchg
xchg
xor
pop
test
jno
mov
clc
popl
ss
bound
sbb
mov
movsb
jnp
jnp
cmp
add
xchg
mov
movsl
outsb
add
mov
sar
inc
bnd
add
cltd
std
pusha
and
loopne
aad
pushf
iret
scas
addr16
enter
stc
out
push
or
lds
sbb
scas
dec
add
adc
xor
add
andl
and
jns
lock
add
pop
mov
pop
push
inc
cmp
pop
imul
inc
shll
xor
add
nop
or
dec
dec
gs
aas
jno
xchg
shlb
das
fdiv
cmpb
sub
mov
sbb
mov
adc
mov
jnp
fistpl
in
hlt
mov
mov
addr16
imul
inc
xor
cmp
xor
push
mov
push
pop
aad
sbb
adc
out
rcll
dec
aad
fs
gs
arpl
sbb
pushf
xchg
pop
bound
sti
sub
adc
push
in
jbe
popa
xor
call
ja
mov
stos
xchg
jp
and
imul
lea
xchg
dec
popa
les
and
out
out
clc
xchg
pop
outsl
pop
add
push
aaa
xor
in
lcall
jns
addr16
mov
jmp
push
in
pop
in
mov
cs
daa
inc
js
decb
mov
repz
xchg
movsl
push
test
fsubr
and
mov
int3
sbb
into
cld
push
insl
jge
stc
or
jnp
movsl
cmpsb
mov
mov
lods
insb
out
cmp
mov
add
popa
jecxz
fwait
xchg
sahf
dec
mov
jno
mov
add
popa
jl
mov
inc
pop
cmp
sarl
mov
push
mov
or
in
cmp
fwait
das
pop
aaa
jne
push
stc
addl
adc
movb
inc
and
dec
sub
mov
xchg
sub
mov
pop
shlb
adc
sub
iret
es
add
test
je
xor
xor
xchg
and
fwait
xor
inc
dec
xchg
or
leave
and
dec
add
decl
leave
pusha
jl
mov
stos
ret
adcb
int3
xchg
or
pushf
hlt
and
enter
stos
jecxz
fs
or
cs
and
jl
sub
test
jecxz
into
daa
push
pop
aam
mov
or
mov
mov
popf
popa
pop
mov
adc
imul
mov
lahf
lods
ljmp
xchg
test
or
fadd
sub
push
dec
cmpsb
dec
cltd
inc
fcmove
mov
popa
clc
xchg
xchg
pushf
add
daa
and
mov
add
pusha
sub
jge
jbe
dec
movsw
push
aam
xchg
cld
sub
cmpsb
mov
cmp
push
dec
lahf
or
inc
flds
dec
jp
in
fcmovne
push
rolb
xchg
popa
push
xchg
jns
cmp
cli
jmp
pop
jo
xchg
and
ss
push
dec
scas
and
jns
xor
sbb
fisubs
adc
rorl
and
pop
jbe
sbb
fildll
imul
inc
cmc
aas
mov
adc
pusha
jnp
pop
add
adc
pusha
jg
adc
test
jb
push
jl
addr16
int3
flds
mov
or
xor
sbb
push
add
xchg
jg
aaa
pop
hlt
push
mov
or
mov
mov
test
mov
xchg
push
or
push
subl
arpl
xchg
cli
xor
jno
mov
cmpsb
inc
data16
push
cwtl
das
loopne
imul
ljmp
inc
jge
out
loope
and
push
push
pushf
adc
shlb
imul
mov
mov
inc
or
mov
lret
notl
mov
add
icebp
hlt
and
cmp
in
add
ss
and
sub
and
fxtract
sub
mov
test
lret
push
out
rol
int3
pop
cmp
lret
fmuls
mov
insl
mov
iret
test
mov
shl
lds
adc
in
mov
push
out
inc
insb
rcrb
jno
jne
std
gs
outsb
mov
and
jg
lds
jecxz
pop
adcl
mov
or
jns
mov
adcl
inc
pop
sub
add
iret
aad
mov
adc
std
add
mov
fidivl
roll
fisttpl
test
inc
ss
add
stos
es
fmull
or
push
adc
and
mov
mov
rcll
push
and
pop
sbb
mov
jmp
sbb
stos
or
pushf
test
push
outsb
insb
jae
or
xor
push
push
daa
and
and
sub
clc
iret
lds
or
jno
vpunpckhwd
xchg
icebp
mov
lods
pop
push
js
jbe
movsb
sub
fdivrs
cwtl
cld
gs
cmp
mov
or
sub
mov
in
cmc
mov
or
mov
pop
jecxz
mov
push
stos
and
xor
test
mov
jecxz
xor
stos
movd
mov
ss
pslld
arpl
cmp
lods
iret
pop
lcall
cli
pusha
test
iret
shlb
shrb
subl
jo
mov
inc
mov
xchg
ljmp
das
sbb
leave
adc
outsb
pop
repz
cltd
cmpsl
and
dec
jg
cmp
mov
arpl
push
sub
out
std
das
xchg
or
cwtl
mov
xchg
les
mov
pop
jae
call
insl
outsl
scas
adc
mov
pop
std
loop
hlt
push
call
fcomps
test
cmp
mov
mov
xchg
decl
sbb
push
cltd
push
pop
mov
push
xchg
fcomps
adc
jo
jno
jb
lret
jae
test
sbb
repnz
lret
cmp
dec
jbe
mov
jp
jg
fldt
pop
rcll
pop
imul
into
jns
negb
add
dec
daa
cmc
insb
cmp
sbb
fldt
xor
sbb
cs
test
decl
cs
cltd
ror
ja
add
rcl
sub
test
cmp
adc
shlb
push
lea
adc
insb
inc
push
in
xchg
pop
cmpsb
jo
aam
sahf
xor
lahf
movsl
jns
add
aaa
jnp
test
rcrl
push
out
cmpb
mov
ljmp
fsub
jl
push
leave
push
cpuid
push
add
das
fwait
scas
sbb
xchg
jp
cmp
insb
sub
loop
enter
mov
outsb
shlb
dec
or
fs
mov
xchg
int3
outsl
sub
mov
fdivs
or
mov
push
pop
sub
jg
fidivl
mov
ret
sub
ds
out
mul
and
adcb
or
daa
cltd
push
mov
popf
in
sub
jb
out
inc
addr16
mov
sbb
adc
int3
mov
pop
jecxz
insb
add
adc
pop
outsl
mov
mov
mov
cmp
inc
fdivr
jb
sbb
dec
sub
outsl
xor
or
rcr
fucomip
pop
add
inc
shll
clc
faddl
orb
mov
out
dec
push
mov
sbb
and
xor
dec
in
mov
imul
fdivrl
inc
aas
bound
icebp
test
mov
sarl
std
mov
imul
jae
mov
cli
push
pop
lret
iret
fcmovne
nop
xlat
iret
jb
daa
data16
pop
ja
inc
add
cmp
mov
mov
jno
dec
fnstsw
popa
inc
ret
lcall
imul
adc
sub
js
fldenv
lcall
cli
pushf
in
loopne
add
ljmp
mov
sti
cmpsb
cmp
or
pop
xor
mov
aad
add
lds
in
std
or
loop
jne
in
sub
dec
xor
aam
ss
lds
mov
mov
adc
add
das
xchg
jge
ret
hlt
add
mov
lcall
imul
insb
mov
jecxz
cmp
or
inc
push
loopne
push
movsb
pop
mov
and
sub
ds
ficompl
aas
adc
pop
cmp
fndisi(8087
cmp
fisubl
sahf
fsubrl
cld
cmp
or
inc
cmp
pop
aam
outsl
inc
jbe
cmpsb
jp
push
mov
test
imul
test
divl
inc
fidivl
pop
subl
inc
call
ret
jecxz
push
ds
or
xchg
movsl
push
mov
sub
mov
es
push
add
in
inc
pop
push
xchg
xlat
xor
lds
jo
subl
push
fidivrl
popf
hlt
jbe
cmp
je
cmp
sbb
rclb
loope
jp
test
adc
outsl
cmp
popf
test
mov
inc
or
adc
jns
mov
mov
or
or
mov
pusha
sub
add
cltd
iret
fsqrt
or
xlat
insl
lcall
xor
in
adc
jb
sub
aas
stos
adcb
pop
mov
push
mov
sbbl
insl
or
push
pop
cmp
mov
mov
mov
scas
adc
ja
dec
movsl
cmp
cmpsb
jns
sbb
les
rclb
sbb
mov
in
movsb
jmp
xchg
insb
pop
pop
dec
popf
pop
xor
in
push
inc
xor
js
lock
int3
fildll
dec
ljmp
call
lea
loopne
ljmp
inc
ljmp
test
jb
add
xor
xor
fsubr
mov
push
mov
push
mov
gs
mov
push
or
inc
pop
or
jle
cmp
adc
in
test
movsb
adc
sbb
outsl
adc
jle
shlb
adc
cmp
lods
mov
jae
sub
sbb
cmpsl
loopne
roll
inc
scas
mov
adc
mov
jae
iret
pop
lods
sbb
outsl
jecxz
xchg
add
xor
cmp
cmp
xchg
cmovg
pop
in
arpl
push
mov
shlb
adc
cmp
jne
lcall
cmp
adc
sub
push
fidivrl
pop
dec
lods
sub
ljmp
fucompp
and
dec
push
xor
jns
cmc
fidivl
lcall
xchg
add
mov
into
imul
or
inc
sahf
xor
push
mov
or
xchg
push
inc
in
jb
in
clc
xchg
add
sbb
cmc
dec
ror
std
cmp
outsl
or
hlt
mov
xor
pop
adc
cmpsb
cmp
xchg
push
and
cmpsb
or
add
shrl
xor
stos
mov
int
js
bound
sbb
mov
out
cmpsl
mov
outsb
subb
icebp
je
inc
push
stos
and
cwtl
test
stos
mov
push
or
out
cmpsb
in
and
mov
cwtl
jmp
jo
test
bound
jb
movd
sub
xorb
or
mov
cli
inc
mov
cmp
mov
bound
ret
mov
jl
pop
pop
mov
fimuls
in
hlt
aaa
or
je
adc
aaa
xor
jo
xor
or
fdivrs
mov
mov
insb
mov
inc
mov
outsb
inc
cld
hlt
adc
stos
int3
lods
inc
cmc
leave
mov
xchg
leave
and
insb
cmpsl
dec
inc
sbb
test
inc
shl
push
jg
and
shll
jecxz
inc
push
cmpsl
bound
cmp
imul
cli
add
dec
push
and
cmc
loop
cmpb
repnz
or
sbb
aam
mov
jb
outsb
leave
push
mov
add
xor
test
and
mov
insl
clc
jecxz
push
mov
jnp
frstor
je
cmp
repnz
scas
call
mov
mov
mov
xchg
pop
in
filds
mov
es
add
cmovo
inc
sub
outsl
pop
mov
imul
iret
in
das
add
stos
push
add
pushf
pop
das
xchg
loopne
lds
jp
into
faddl
and
jno
cltd
in
mov
sti
adc
test
jecxz
dec
in
adc
push
shl
add
jno
mov
fstpl
mov
push
or
or
imulb
out
popf
mov
in
shll
pop
jge
add
xor
jecxz
and
std
pop
cld
cmp
in
addr16
inc
xor
mov
js
xor
lcall
cmp
daa
mov
nop
insl
add
mov
or
lods
iret
push
lods
and
scas
scas
adc
pop
jbe
mov
jmp
xchg
sahf
std
dec
loopne
decl
inc
pop
xorl
pop
sub
xchg
dec
mov
jae
mov
pop
sahf
test
dec
mov
add
push
push
push
jno
xchg
insl
aad
push
inc
inc
dec
mov
dec
loop
inc
push
xor
imul
dec
aam
cmp
xchg
add
fidivs
lods
xchg
adc
fsubl
fistl
lret
xor
cwtl
std
push
sti
shll
add
cs
add
int
andb
xchg
bound
push
inc
mov
adc
xlat
cltd
xor
test
and
out
jmp
sbb
test
cmpl
xlat
jecxz
jle
or
lds
repz
in
mov
loopne
hlt
adc
sti
frstor
fdivrs
dec
addr16
out
popf
loopne
or
xchg
pop
lret
test
outsl
mov
mov
scas
out
sbb
cmp
xor
jb
in
test
dec
push
leave
xchg
cmp
inc
fsubl
dec
push
addr16
lcall
and
xchg
pop
push
movsl
pop
cwtl
and
xchg
hlt
decb
mov
xor
dec
arpl
pop
stos
add
adc
ret
push
jo
aas
sbb
pop
call
in
push
add
shll
popa
jmp
in
dec
cmpsb
imul
mov
jb
insl
xor
mov
adc
out
sbb
jle
pop
adc
out
pop
jmp
imul
inc
pop
ret
sbb
add
lcall
mov
or
aas
mov
cmpsb
mov
xor
or
jno
xorl
push
stos
popf
lods
sub
sahf
cmp
lods
scas
arpl
xor
andb
xor
test
stc
xchg
fistpl
and
xor
mov
int3
xor
push
dec
dec
call
leave
shlb
push
cltd
into
pop
int3
pop
hlt
cltd
ret
in
in
in
in
lret
daa
add
hlt
ss
mov
cld
mov
lret
mov
setne
cltd
lahf
xchg
push
repz
mov
jl
je
add
in
mov
icebp
dec
adc
jmp
jno
ljmp
bound
cmp
push
aas
mov
pop
cmp
cwtl
pusha
or
out
ja
add
and
mov
sbb
mov
mov
or
push
mov
test
aam
cld
xor
ficoms
adc
jne
gs
lds
loope
mov
adc
ljmp
stos
mov
pop
xor
into
adc
mov
ds
xor
push
insb
add
dec
sub
xor
mov
sbb
add
push
call
loope
out
pop
sahf
lds
jae
insl
mov
jle
cmp
lret
ret
add
incl
sub
mov
dec
bound
sub
divps
ja
pop
push
push
xlat
andb
test
cmp
dec
add
lahf
stos
and
jo
sub
jb
insb
into
cmc
ja
pop
inc
xlat
dec
cwtl
xchg
addr16
scas
fldenv
sub
jle
add
xchg
ret
mov
adc
dec
sub
mov
dec
repnz
out
adc
cmp
enter
dec
cwtl
in
arpl
shll
jne
cmp
sbb
pop
test
xchg
mov
fwait
jmp
orl
addb
stc
mov
rorl
cmp
cld
ja
outsb
ret
mov
ret
push
jo
cmp
or
mov
mov
sub
mov
jae
mov
into
fsubr
xor
cmp
mov
and
xor
cmp
orb
cmp
scas
inc
and
xchg
popf
push
adc
lret
add
and
lods
mov
orb
add
adc
mov
dec
pextrw
insl
inc
jns
jb
arpl
pushf
jo
test
cmp
aas
dec
loop
dec
seto
mov
imul
outsb
sbb
lods
aam
iret
inc
push
ja
movsl
es
xorb
push
int3
adcl
in
js
mov
negb
pop
xor
mov
add
lds
mul
fcomps
xor
sub
addr16
sbb
aas
dec
loopne
movsl
fstpt
dec
mov
jg
pop
sahf
mov
pushf
sbbb
adc
xor
push
psllw
fwait
jge
lock
loop
mov
dec
shlb
call
mov
ret
andl
xchg
dec
bound
test
or
and
icebp
push
sub
test
rol
insl
dec
dec
and
aam
dec
mov
inc
dec
popa
lcall
loopne
mov
mov
jb
add
js
fwait
pop
ret
loopne
hlt
push
mov
jl
vsubps
xchg
scas
and
jbe
js
aad
scas
adc
jmp
ss
lds
imul
xor
nop
jne
nop
loop
into
ja
jo
out
int
adc
and
out
inc
ja,pn
mov
aaa
jbe
cmp
mulb
adc
loope
jno
cmp
adc
shlb
mov
and
mov
xchg
es
sub
mov
pop
jmp
mov
push
test
add
jg
ss
callw
xor
scas
mov
sub
jo
lock
jbe
popa
dec
aaa
into
jb
imul
and
sbbl
fs
adc
leave
dec
arpl
cmp
xchg
xchg
outsb
mov
ret
mov
and
mov
push
loope
stos
adc
inc
jle
gs
dec
jp
notb
jnp
dec
pop
inc
mov
add
out
das
add
inc
rorl
idivb
lret
mov
inc
cmpsb
arpl
push
loope
jns
clc
imul
inc
push
iret
cmpsl
cmp
cmp
and
rcrb
insb
xor
push
loop
mov
add
mov
pushf
scas
and
xor
mov
push
push
je,pn
lds
lea
cmp
push
lret
lret
stos
mov
fs
imul
mov
inc
out
sub
test
xor
mov
stos
sbbl
jns
lahf
jne
stos
lret
leave
clc
sub
jecxz
aaa
mov
mov
movsl
sub
xor
fcmovu
lret
call
repz
jge
inc
enter
ja
jnp
and
call
insl
int3
into
fmul
mov
mov
inc
mov
jl
add
ja
cmp
lock
loop
dec
xlat
arpl
outsb
or
push
aas
test
iret
jecxz
push
mov
movswl
mov
xchg
sub
in
push
mov
addb
lcall
inc
fsubrl
iret
arpl
jecxz
pop
repz
xchg
jnp
add
cmp
pop
scas
cwtl
popa
jae,pn
setne
lcall
insb
pusha
cs
stos
cltd
insb
jl
jle
inc
mov
jg
push
mov
ret
dec
cmc
fcompl
mov
dec
bound
or
adc
mov
xor
arpl
aaa
into
iret
scas
add
ljmp
mov
adc
ret
enter
aam
stos
mov
jae
add
and
in
sbb
arpl
inc
leave
cmc
imul
lahf
jp
xchg
jle
xchg
mov
push
sub
jns
clc
mov
mov
adc
ror
add
es
adc
jmp
sbb
pop
leave
xchg
pusha
ja
les
mov
adc
cmp
mov
ss
mov
jnp
test
mov
sbb
lcall
and
shrb
mov
gs
push
push
scas
pop
dec
inc
dec
frstor
in
mov
stos
cmp
add
pop
mov
lds
mov
scas
pusha
shlb
hlt
pop
adc
xchg
sub
inc
or
incl
and
in
inc
fadds
sub
cld
mov
mov
test
push
pop
sub
arpl
jne
addr16
jne
aas
dec
pop
xchg
outsl
inc
std
inc
nop
mov
iret
cltd
push
mov
repnz
add
fisubrs
xor
sub
inc
jle
inc
pushf
xchg
mov
aas
add
shl
das
lea
push
mov
pop
idivb
sub
add
mov
mov
loopne
pop
dec
inc
mov
mov
enter
mov
push
outsl
push
or
test
inc
push
xchg
xor
dec
push
mov
out
cli
in
daa
fucomi
push
cmpb
push
outsb
fsub
or
movsl
xor
sub
call
add
movsl
addr16
and
stc
lret
int
inc
pushl
inc
fsubrl
sbb
push
pop
and
mov
imul
mov
dec
popf
pop
sbb
mov
cli
dec
and
xchg
rcrb
or
ljmp
and
inc
pop
sbb
and
cmp
test
or
frstor
pop
sub
repz
xor
bound
push
mov
cmp
mov
test
push
and
dec
pop
test
and
xor
push
dec
test
cmpl
aad
cmp
jae
lahf
xor
mov
jp
imull
outsb
out
hlt
xor
cmp
lcall
popa
js
in
inc
js
mov
cltd
and
lods
dec
in
pop
out
mov
mov
sbb
and
out
pop
outsb
adc
gs
loopne
call
dec
sbb
fs
inc
push
inc
jecxz
inc
dec
cmp
push
inc
add
neg
and
jbe
lods
dec
push
arpl
dec
cltd
fldenv
outsl
stos
or
pop
sub
or
mov
mov
testb
insl
aad
pop
outsb
mov
adc
popf
xor
dec
pop
xor
shll
rorb
pop
pop
xlat
inc
pop
mov
mov
or
repnz
mov
negl
repnz
out
mov
push
fiaddl
jle
cld
fstl
daa
pmaxub
adc
pop
sahf
and
pushf
sbb
dec
sbb
sbbl
jle
mov
mov
mov
daa
xchg
inc
or
and
xor
lods
pop
not
aad
nop
xor
xchg
in
jl
xchg
push
bound
cltd
dec
outsb
mov
in
sti
add
cmpb
dec
xchg
movl
pop
mov
das
inc
pop
mov
shlb
pop
mov
push
outsl
jge
jg
dec
shlb
pusha
push
jo
xbegin
ds
dec
and
cmpsb
lea
add
xor
jmp
mov
pop
mov
jae
sbb
adc
mul
popa
add
xchg
mov
mov
sub
imul
adc
data16
cmp
or
in
cmp
push
sub
lds
jbe
shll
testb
add
jge
testb
aad
pop
pushf
xor
in
jecxz
xlat
jmp
or
js
push
dec
cmpsl
jecxz
or
pop
sbb
cmp
or
cmc
xor
add
pop
in
in
iret
push
outsb
add
sbb
fildll
mov
or
sbb
lret
dec
icebp
and
imul
jns
mov
xor
fs
in
and
add
mov
sti
icebp
adc
test
inc
sub
into
fbstp
in
lds
dec
sbb
sbb
dec
push
movsb
cmp
icebp
ret
testl
mov
push
sub
test
sub
dec
fildll
lock
std
std
mov
test
inc
dec
fdivs
sahf
jecxz
test
add
mov
cmp
loop
bound
sbb
scas
mov
xor
sbb
inc
inc
call
adc
fsubr
xor
and
and
lds
cmpsl
insb
in
cli
mov
testb
lret
pop
mov
cwtl
daa
lcall
inc
test
rclb
dec
inc
popa
movsl
cmpsl
xor
movsb
mov
dec
out
std
push
jmp
sbb
pop
orl
inc
push
cmc
xorl
iret
xchg
jl
lods
int
fcomip
add
jns
clc
jne
ret
nop
push
in
into
rcrl
jle
pop
jne
jle
rep
xchg
mov
add
scas
sbb
sbb
shll
add
inc
je
fildl
insl
mov
cli
mov
adc
stos
mov
fistpl
movsl
cmpsl
mov
mull
push
stos
fisubs
inc
outsb
dec
fwait
xor
pop
ss
ret
mov
add
mov
mov
pop
mov
xchg
sub
cmpsl
inc
push
mov
dec
stos
pop
pop
xor
xchg
rcrb
adc
xchg
and
pop
sbb
cmp
test
dec
jae
mov
xchg
mov
aad
out
ja
data16
cwtl
mov
hlt
out
es
movl
adc
sbb
movsl
inc
scas
and
mov
repz
popf
stc
popa
out
xor
sub
leave
xchg
jl
push
mov
mov
jnp,pt
pop
test
sahf
sub
inc
sbb
dec
xchg
xor
popf
out
mov
jo
xchg
mov
cltd
cmc
inc
mov
adc
adc
adc
sti
fcomps
cmp
adc
cmpsb
cltd
stos
loop
fadd
lods
mov
adcl
lock
jae
cs
inc
mov
dec
es
sbb
pop
out
movsl
lret
xchg
bound
xchg
dec
cmpsl
in
add
loopne
sbb
mov
popa
mov
fwait
mov
dec
loop
pop
xor
or
in
lret
jae
sub
cwtl
sbb
clc
and
incb
sti
in
test
mov
cld
sbb
bound
sbb
mov
lahf
pop
xchg
les
iret
xor
pop
int3
mov
out
jge
sub
pop
daa
test
xchg
cmc
pop
push
call
scas
mov
cmp
jmp
aad
mov
insb
incb
rcr
xchg
in
inc
enter
and
cld
push
pop
in
mov
mov
lock
mov
int
aad
leave
mov
fs
enter
fs
pusha
jb
xchg
cld
pusha
xchg
testb
add
add
jmp
pop
jecxz
cmp
lcall
je
xlat
fs
fldenv
mov
divb
ss
cs
sbb
jns
loope
adc
xchg
dec
mulb
into
cmp
scas
fs
in
xlat
stos
and
int3
pop
jecxz
sub
iret
xchg
push
rol
sbb
les
in
movsb
cltd
push
out
xchg
sub
push
mov
jns
push
or
call
outsl
ret
push
lcall
in
daa
push
mov
mov
fwait
popf
ret
and
adc
pop
adc
cmp
add
iret
or
or
popa
test
jo
cs
pusha
jne
repnz
pop
and
mov
imul
mov
sbb
mov
mov
sbb
sbb
xchg
xchg
sbb
xor
pushf
add
clc
loopne
mov
inc
mov
xchg
addl
adc
es
or
cmpsb
adc
sbb
mov
scas
insl
jle
bound
cmp
jmp
adc
dec
dec
adc
xor
les
loopne
or
decl
inc
and
fiaddl
mov
dec
fidivrl
push
movsb
aas
cltd
inc
ds
idivb
dec
sub
shlb
mov
add
pop
sahf
inc
xor
jbe
mov
sub
or
inc
aas
xchg
cmp
mov
cmp
add
cmp
cmp
pop
push
out
mov
jne
int3
es
int
sbb
push
data16
cmp
push
mov
sbb
repnz
push
or
cmp
cmp
push
jo
inc
and
rclb
push
jne
inc
arpl
xchg
ss
dec
add
xor
mov
sti
jb
pop
add
lcall
ljmp
leave
push
ljmp
cmp
insl
add
sub
and
and
rclb
lret
xchg
mov
test
jns
mov
in
nop
mov
fldl
rolb
ljmp
and
xor
sub
in
pop
in
add
xor
and
add
sub
jns
stos
cmpb
dec
cmpsb
or
test
pop
repnz
sbbl
clc
stos
leave
in
sbb
movsb
mov
sub
mov
stc
dec
jo
add
rcr
pop
mov
xor
xor
mov
shrb
xor
jb
jne
adcb
lods
push
stos
pop
outsl
adc
lret
xlat
outsb
mov
add
dec
clc
fists
das
lret
lods
enter
sub
xchg
sahf
jno
pop
addr16
rcr
aas
xchg
les
inc
mov
cmpsl
jge
in
insl
sub
je
divb
jecxz
fwait
sub
mov
aad
inc
idivl
jg
xchg
push
pop
movsl
or
je
cmp
into
dec
dec
and
pop
fbld
mov
call
in
lcall
loop
cmp
mov
dec
loope
fcmovbe
and
lret
aas
dec
mov
cmp
jge
out
mov
into
or
and
jle
rcrb
xchg
jne
test
cld
aas
in
mov
fnstsw
fisubs
or
loopne
sub
testb
rolb
fnstsw
inc
cli
int3
xor
pop
lds
push
push
aad
js
dec
inc
pop
dec
mov
xor
hlt
stos
lahf
jbe
test
std
aam
mov
xor
xchg
adc
fnstcw
or
mov
mov
sub
adc
xchg
lods
inc
scas
push
jecxz
mov
and
xchg
orb
mov
dec
fmull
push
idiv
cmpsl
out
test
xchg
scas
inc
jnp
xchg
cltd
sbbl
shrb
mov
pop
jmp
mov
jne
lea
gs
iret
outsb
mov
push
insl
add
cmc
jno
dec
and
push
and
addr16
shll
dec
dec
cmp
cmpsl
aas
negl
jnp
stos
cmp
mov
pop
cs
inc
push
shrb
cmp
push
lea
push
push
fsubr
ja
jl
xlat
cmp
scas
inc
out
aad
in
mov
xchg
ja
out
enter
mov
mov
in
sbb
add
cmp
clc
mov
std
cmp
inc
es
out
cmp
sub
mov
test
inc
pop
movsb
xor
aad
out
adc
or
ds
loop
add
pop
cld
mov
mov
lods
add
loop
xor
inc
push
movsb
jae
jns
jl
adc
xchg
fdivrs
jo
dec
xor
dec
call
mov
xlat
xchg
push
outsl
mov
in
roll
dec
jge
jae
cmpl
loope
mov
call
in
add
pop
clc
outsb
enter
sub
pop
in
inc
repnz
lock
out
cwtl
fwait
xor
jbe
aaa
fistps
mov
xchg
push
inc
fsubrl
hlt
aas
push
mov
mov
mov
mov
mov
pop
jg
add
mov
pop
popf
ja
insl
cltd
push
arpl
iret
dec
jns
lods
mov
dec
xor
pop
inc
mov
clc
cmp
pop
imul
and
mov
sbb
cmp
movsl
das
outsb
jp
or
mov
outsl
dec
cmp
dec
mov
aam
sbb
aas
dec
push
mov
mov
pop
pushf
lahf
mov
xchg
xor
lock
or
incl
jnp
adc
xorl
gs
mov
sub
adc
mov
addl
and
xor
sahf
sbb
add
mov
in
sbb
ficoml
mov
aad
in
and
fisubrl
mov
dec
sub
xchg
and
shl
filds
scas
fs
cmpsb
mov
pop
fdivp
mov
mov
push
push
push
orb
addr16
mov
repnz
adc
xor
rorb
popf
shll
int
divb
fistl
aad
rorl
xchg
jl
dec
loopne
sbb
adcl
push
in
jge
mov
pop
jne
not
clc
or
pop
cmp
pop
out
shr
sub
imul
mov
std
out
sub
xchg
mov
imul
rcrl
dec
pop
mov
sbb
and
pushf
or
es
mov
ja
je
xchg
sub
push
movsb
inc
or
out
inc
jmp
or
xchg
out
psubq
and
stos
jmp
mov
imul
and
cmp
imul
popf
cmp
jnp
aaa
fnsave
push
rcl
add
out
cltd
popf
cld
dec
das
outsb
repz
pop
addr16
mov
mov
lahf
add
out
je
adc
loop
out
mov
lcall
adc
push
mov
mov
push
dec
fnstcw
mull
pop
pop
bound
jbe
or
mov
mov
and
dec
pop
mov
fcmovnb
lods
mov
inc
movsl
xchg
cltd
xchg
or
mov
iret
in
push
sti
sbb
push
mov
sbb
lahf
lret
cli
ret
cmp
cmpsb
sbb
fcoms
ljmp
lret
and
repnz
adc
lcall
inc
inc
clc
ja
lods
test
xchg
and
push
scas
push
pop
xorl
bound
scas
jp
jns
pop
sub
lcall
cmpb
xchg
cmc
mov
push
mov
jmp
push
inc
push
sarl
in
xor
cmp
jnp
or
test
push
fisubl
mov
test
outsl
jnp
sub
or
mov
fists
repnz
hlt
cmpsl
cli
adc
jge
pop
mov
dec
lahf
pop
sbb
int3
sahf
es
adc
fisttps
push
mov
cltd
jmp
aaa
stos
push
aas
sarb
pop
cmp
xlat
dec
aaa
aam
pop
pop
mov
dec
clc
int3
gs
movsl
daa
xor
cmpsl
inc
andl
push
or
mov
mulb
int
ficomps
add
jp
in
out
push
inc
mov
inc
or
fs
inc
pop
inc
pop
mov
rolb
out
shrl
adc
repnz
add
inc
ss
cli
add
dec
pop
mov
mov
arpl
int
jb
lcall
adc
ret
ja
adc
adc
pop
dec
xor
jecxz
jp
dec
lock
mov
mov
push
sahf
clc
cli
xchg
inc
icebp
jp
out
ljmp
fucomip
pop
repz
movsb
cmp
inc
stc
xchg
mov
ret
cs
or
jns
sbb
mov
xchg
jmp
add
add
push
mov
ror
adc
jae
add
add
pop
movsb
and
insl
push
js
sbb
mov
dec
sbb
lcall
and
rcl
push
mov
repnz
cld
lock
jbe
xchg
sub
ja
ret
jp
popa
int
out
cli
sub
or
xchg
in
cmpsl
sbb
push
lods
movsl
jb,pt
in
dec
int
lods
rcl
and
loop
pop
je
cmp
out
test
pop
ds
jae
inc
test
push
sub
cmp
xchg
stos
bnd
test
cmc
mov
in
pop
push
jl
mov
enter
loopne
jmp
and
sahf
cmc
rorb
dec
mulb
add
call
xor
out
icebp
mov
sub
cs
ret
test
je
repnz
pop
and
sub
std
lret
iret
pop
cltd
test
push
cmp
xchg
pusha
test
xchg
jg
add
or
dec
and
mov
cli
push
lret
mov
sahf
addr16
adc
jle
mov
test
push
icebp
pop
movsb
test
add
push
andb
negl
inc
push
mov
jnp
dec
xor
xchg
jnp
cltd
cltd
pushf
xchg
push
ffreep
mov
adc
xchg
xor
lret
add
std
rcl
repnz
mov
test
dec
in
ss
dec
ja
imul
scas
pop
mov
pop
fnsave
fs
js
add
inc
sbb
sbb
add
jo
lahf
divl
push
lock
mov
addr16
fisubrl
jge
shll
mov
in
sbb
push
mov
or
orb
andl
cli
mov
adc
sbb
mov
xor
inc
inc
mov
clc
mov
sbb
mov
js
test
rcrl
imul
jle
mov
add
cmpsb
sti
mov
adc
inc
or
loop
push
push
add
cmp
jns
mov
std
cltd
out
add
in
jg
mov
xor
insb
pop
repnz
cmp
jge
imulb
addr16
sbb
or
adc
popa
incl
jb
int
stos
inc
loope
pop
adc
pop
mov
rcrb
dec
loop
and
mov
xor
jle
outsl
add
ljmp
mov
sbb
cmp
xlat
lock
popf
popf
add
lahf
aas
cmp
adc
stc
test
pop
sti
popa
data16
mov
sub
adc
or
or
jmp
fnsave
push
and
mov
adc
rcrb
push
sub
cmpsl
test
testb
jae
mov
pusha
jnp
and
test
daa
push
roll
jo
jl
cmp
jb
cwtl
xor
mov
adc
jge
clc
or
dec
sbb
adc
cwtl
mov
mov
outsl
pop
push
pop
xor
notl
cs
push
in
test
fldenv
lcall
je
in
frstor
or
jns
push
push
test
pop
add
fstl
sbb
shlb
sub
in
mov
ret
repz
mov
or
mov
je
or
mov
pop
lods
mov
lret
fisttpl
dec
xchg
and
fisubs
pop
xor
lcall
and
sbb
xor
xchg
xchg
mov
fistps
clc
sarb
sub
xchg
aad
clc
popf
push
dec
add
fisttpll
adc
popa
and
das
iret
pop
cltd
ret
jp
aam
and
outsl
or
ret
xchg
lods
repz
int3
sub
sarl
rcrb
sti
sub
cmp
out
mov
jae
mov
dec
outsb
push
pop
out
mov
repz
daa
jl
fmulp
mov
or
sub
shrb
fisubs
push
mov
and
jb
mov
sahf
clc
push
pop
cmpl
mov
mov
popa
mov
stc
xchg
in
insb
out
xchg
add
mov
jns
cmc
ds
add
je
or
pushf
xor
into
fisttpl
mov
sub
inc
xlat
push
dec
rorb
pop
repnz
push
add
sbb
mov
add
and
jg
jbe
insb
mov
or
negl
scas
test
arpl
mov
scas
aaa
inc
inc
sub
pushf
iret
pop
je
je
pop
lods
lods
inc
add
sbb
sbb
push
mov
inc
aam
jne
aas
outsb
mov
cmp
xchg
gs
push
cmp
roll
or
xor
mov
je
iret
sbbb
ss
and
pop
loop
sarl
test
mov
or
xchg
cmp
add
out
dec
pop
pop
hlt
push
out
das
mov
dec
out
xchg
sahf
ss
pop
mov
and
scas
shll
add
pop
mov
pop
sti
fbld
add
into
push
adc
ret
cmp
bound
xorps
and
and
dec
sahf
jl
loop
aas
and
fistps
xor
les
cmp
psubw
cs
sahf
sbb
push
leave
int
xor
fistl
fists
cmp
cltd
inc
hlt
adc
loopne,pn
add
push
ret
mov
add
cmpsb
pmaxsw
rorb
jb
dec
in
roll
cmp
and
sti
imul
fsubrp
sbb
jl
dec
add
loopne
outsl
add
out
cmp
scas
in
nop
clc
popa
adc
and
ljmp
add
movsl
jbe
popf
or
sub
mov
imul
push
push
mov
in
cwtl
clc
mov
dec
adc
push
xor
sti
aaa
dec
mov
ror
jno
daa
inc
sarb
adc
jo
sbb
dec
int3
or
aas
ds
rcl
xchg
mov
mov
test
cmp
ja
add
push
mull
sub
add
xor
outsl
inc
inc
xchg
je,pn
data16
fsubrs
xchg
sahf
cld
xchg
sarb
outsb
sbb
push
out
sbb
insl
sub
jne
addl
jge
jb
mov
call
clc
hlt
les
cli
icebp
adc
mov
sti
hlt
lea
and
xchg
mov
cltd
outsb
mov
int3
jmp
jg
push
popa
pop
or
mov
push
sub
repnz
stc
je
pop
ret
pop
popa
push
add
ljmp
push
es
cmp
sbb
fisubrl
mov
pop
cmpsb
or
mov
out
je
cmp
cmp
sbb
add
pop
scas
sub
hlt
test
mov
fistpll
int
jnp
sbbb
fwait
dec
in
add
repnz
imul
cmc
in
les
shlb
adc
mov
es
mov
sti
stos
and
jnp
xchg
xor
mov
jns
xchg
dec
inc
push
jmp
out
scas
call
fwait
shr
add
lods
je
fbstp
jns
int3
nop
dec
ljmp
jge
insl
pop
xor
repnz
push
inc
shrb
cmp
xchg
push
sbb
aam
mov
movsl
orb
cld
popf
xor
in
popf
dec
lret
push
mov
mov
xchg
scas
add
imul
xorb
test
aas
add
xchg
mov
adc
das
shrl
lods
imulb
mov
pop
push
int3
fbld
ret
dec
mov
xchg
adc
cmpsl
mov
sub
adcb
xor
cmp
add
gs
cld
call
into
or
push
dec
in
lods
xchg
jbe
cltd
gs
test
fnstcw
rcl
inc
pop
cmp
popl
and
and
or
and
push
addr16
sub
out
sti
xchg
push
mov
fsts
test
arpl
push
punpckhbw
movsl
push
push
mov
mov
inc
andl
arpl
dec
frstor
jl
xor
xchg
sti
adc
adc
ja
mov
ljmp
mov
add
fmull
xor
xchg
in
out
aas
mov
add
sbb
pop
xchg
sar
push
add
ja
jns
jle
push
mov
mov
shrl
fwait
jp
mov
aad
push
jge
xor
insl
mov
ret
outsb
aad
stc
outsb
fwait
jge
xchg
mov
jo
js
dec
and
stos
shrl
mov
sahf
xor
pop
jno
pop
idivb
pop
jge
in
push
fldl
test
and
cwtl
mov
dec
lret
bound
dec
fsubs
cmpl
push
stos
lcall
add
mov
xchg
cmp
mov
rcr
stc
lcall
icebp
cmp
and
xchg
adc
cltd
xor
dec
mov
pop
push
fiadds
sbb
gs
mov
add
lret
arpl
adc
dec
in
and
imul
insl
das
or
repz
jl
cmp
cmpsl
sub
jecxz
rcll
mov
adcl
mull
mov
cmp
and
mov
jmp
data16
mov
or
mov
lock
push
jne
xor
ja
test
xchg
add
push
sub
push
leave
pop
or
into
or
gs
insb
jb
xchg
push
add
and
psubq
push
out
icebp
jnp
push
aas
in
pop
mulb
mov
inc
dec
mov
outsl
xchg
call
cmp
insb
adc
popf
icebp
mov
inc
outsl
js
sbb
mov
leave
icebp
lods
out
mov
notl
xlat
shrl
dec
adcb
insl
or
mov
cmpl
dec
jmp
addr16
mov
pop
addb
mov
push
loop
inc
push
cmp
xor
cmp
inc
ds
jnp
pop
je
adc
test
add
stc
inc
popa
inc
inc
mov
test
loope
imul
testl
js
in
sub
jo
nop
pop
adc
mov
into
js
jecxz
cwtl
push
insb
cltd
cmpsb
movsb
mov
fistpl
js
inc
mov
pop
cmc
push
push
or
sti
js
mov
pop
mov
push
nop
daa
jbe
out
cltd
in
dec
inc
mov
jle
adc
les
push
mov
add
gs
test
or
test
scas
stos
mov
cli
lahf
shl
mov
mov
sub
cmp
xlat
jecxz
imul
push
dec
or
jl
push
add
xchg
test
xchg
pop
sbb
sbb
iret
jle
out
daa
loopne
cwtl
push
or
popf
scas
mov
pop
fmuls
lahf
scas
xor
xor
outsl
std
jp
pushf
inc
pop
pop
cld
ss
or
fwait
sbb
mov
ficoml
testl
bound
push
hlt
and
push
jbe
mov
or
sbb
cmpsb
add
loope
cmp
jle
addr16
and
inc
fisubl
outsb
push
rolb
pop
cmpb
popf
mov
pop
dec
arpl
mov
push
gs
sbb
movsb
pushf
lds
sub
mov
insb
push
call
mov
jecxz
add
mov
pop
push
test
dec
push
aas
repz
fnstcw
or
push
repz
adc
scas
inc
push
xchg
jb
xor
aas
out
ds
add
pop
inc
outsl
fdivl
jo
fdivrs
pop
inc
pop
pop
and
pop
insb
fwait
xor
xor
cwtl
mov
jle
or
dec
add
xchg
xchg
sub
stc
add
mov
roll
inc
inc
jb
cwtl
xchg
loope
pop
jnp
les
jno
loop
mov
sbb
cmp
lea
fmuls
push
push
lcall
hlt
out
mov
jge
xlat
cmp
inc
jmp
adc
fstpl
les
ss
ret
out
pop
mov
adc
cmc
mov
jb
clc
mov
xchg
test
stos
shrl
into
mov
into
jno
arpl
pop
mov
cmpsb
clc
xor
add
repnz
andb
sarb
aam
outsl
add
adc
in
lods
dec
sub
cmp
jg
movhlps
test
xchg
pop
push
mov
mov
inc
pop
dec
jo
jle
imul
fldenv
mov
mov
inc
push
pop
mov
push
sub
rcrb
test
lods
add
sahf
insl
ret
notl
cmc
dec
sbb
nop
fsubr
cmp
mov
sub
or
adc
ss
adc
add
lret
xchg
xor
dec
in
aam
aaa
sahf
pop
das
xchg
jmp
lock
dec
les
inc
shrl
aam
cltd
fnop
icebp
incl
insb
and
or
jbe
loop
adc
mov
std
pop
dec
xor
sub
jns
test
xchg
mov
movsb
pushf
testl
sbb
dec
xor
testb
inc
push
mov
inc
outsb
mov
xor
push
loope
insl
mov
jnp
icebp
jbe
roll
cmc
lea
xchg
adc
mov
xchg
cmp
and
ja
mov
or
cmp
movsl
or
push
mov
int
cltd
jns
sbb
and
xchg
ffreep
pop
or
push
sbb
adc
pop
ret
sti
mov
inc
in
lock
add
and
jle
pushf
mov
aam
xlat
mov
movsl
jbe
push
pushf
daa
dec
jns
arpl
mov
sub
fimuls
mov
fldenv
mov
test
and
add
mov
in
pusha
addr16
aas
filds
enter
or
dec
fadds
add
sahf
xchg
add
scas
fidivs
addr16
sub
lea
xor
mov
gs
cwtl
mov
rcrl
stc
sahf
jmp
call
adc
cwtl
or
fidivrs
rolb
mov
and
pop
push
pushf
xor
andb
out
jmp
stos
rcl
xorb
fcomi
add
sbb
fdivrs
push
test
insl
fcompl
in
mov
or
push
cwtl
and
insb
jecxz
ret
int3
cld
jae
push
fbld
push
or
dec
in
mov
mov
inc
mov
int3
cmp
outsl
mov
aaa
sub
clc
xchg
push
dec
lea
popa
shr
lahf
cli
stos
inc
sub
iretw
rolb
div
dec
pop
and
stos
mov
pop
adc
inc
je
mov
dec
jbe
mov
lds
dec
push
gs
packsswb
repnz
xchg
mov
inc
daa
jmp
pop
and
jns
repz
dec
hlt
jle
xchg
pop
cmp
inc
clc
push
mov
dec
sbb
fisubrs
fsts
pop
cmp
bnd
fnstenv
dec
or
popa
jle
cmpsl
adc
shrb
cmp
daa
sti
mov
rorb
pop
jl
mov
fidivl
xchg
add
imul
dec
fcmove
mov
movsl
icebp
push
xchg
inc
popa
imul
lcall
shrl
clc
mov
pushf
mov
push
out
mov
adc
mov
xor
push
fbld
mov
mov
les
pop
ret
xlat
and
adc
pop
out
dec
cwtl
cs
pusha
adc
sbb
int3
and
push
mov
sahf
clc
daa
sbb
out
into
jae
mov
push
data16
cmpsl
pop
out
adcl
fcoml
test
cmp
pop
addr16
xchg
js
sbb
mov
jns
fwait
shrl
cld
insb
stc
pop
cmp
iret
mov
push
fistps
jecxz
fstp
dec
add
xor
stos
jl
push
testl
pop
xorl
and
push
adc
jmp
dec
inc
xchg
push
mov
add
in
pop
xlat
dec
enter
addr16
adc
ja
pop
fmul
dec
arpl
lods
mov
in
mov
dec
xor
xchg
push
cld
les
ret
sbb
mov
adc
dec
fsubl
out
loopne
sbb
subb
sub
imull
out
call
jo
add
dec
movsb
roll
cmp
cmp
sub
jmp
xor
mov
lock
add
adc
push
das
data16
ds
xchg
push
push
jns
int3
ds
add
or
popf
cmp
in
add
xor
mov
dec
cli
aad
cmp
inc
dec
pop
adc
movsl
push
mov
gs
pusha
enter
xchg
das
stc
cltd
rcrl
in
ret
push
push
mov
mov
dec
push
cltd
inc
xchg
aad
int3
fwait
jmp
pop
ret
icebp
pop
or
les
and
aam
xor
popa
cli
mov
popf
rolb
jo
push
push
dec
dec
inc
out
cmc
insb
or
aas
pop
shrl
sub
jge
cmp
out
out
das
leave
sti
inc
mov
in
call
pop
sub
mov
mov
add
popf
cmp
mov
xchg
push
inc
popf
dec
test
lock
fsubr
cmpsb
loopne
add
fwait
sub
mov
lret
fistpl
mov
xchg
ret
lock
inc
pop
cmc
pop
test
lds
jno
nop
lcall
push
cmp
das
xor
xchg
cmp
mov
dec
dec
lret
jmp
and
shr
popa
cli
pop
jae
adc
cltd
lcall
xor
stos
jp
push
xor
loopne
hlt
lret
jb
rorb
jae
inc
mul
into
dec
into
pop
jmp
or
xchg
push
in
stos
xlat
push
dec
je
outsl
cmp
repnz
test
xchg
push
add
cltd
sbb
outsb
and
mov
inc
in
lret
shl
xchg
sbb
jnp
fldz
mov
push
in
dec
pop
mov
lea
out
stc
xchg
sub
decl
lcall
xorb
xchg
pop
or
dec
jb
sbb
mov
mov
imul
push
popa
ds
test
sub
or
xor
hlt
dec
cli
stos
nop
push
lods
jmp
mov
hlt
mov
push
cmc
stc
jnp
xor
pop
lret
arpl
pop
enter
jge
loopne
sub
add
inc
mov
mov
inc
ss
pop
fwait
push
jmp
stc
xchg
add
add
and
insb
adc
dec
inc
cmpsb
adc
pop
rcrl
jns
and
sbb
cli
dec
test
pop
dec
push
repnz
loope
mov
push
and
ret
js
add
fcoms
hlt
sub
add
cmp
xor
icebp
adc
mov
push
mov
xlat
enter
in
add
sub
loopne
movl
orb
loope
icebp
cmp
sbb
jmp
and
mull
sub
dec
dec
cmp
jmp
and
xlat
fcomi
xlat
rorb
fsubs
stos
out
fstpl
or
cmp
push
stc
test
les
out
inc
mov
pop
out
inc
fcompl
add
jae
dec
cmp
inc
popf
std
clc
mov
xor
inc
dec
mov
lea
sarl
push
mov
push
out
icebp
or
lret
or
ljmp
xchg
xor
loope
jbe
pop
sbb
int3
mov
movsb
aaa
test
push
stc
fadds
mov
rol
jle
xchg
push
ret
fisttpll
xor
aam
add
add
xor
dec
pop
test
pop
and
lods
aad
stos
xlat
arpl
adc
mov
dec
loop
ror
add
aad
scas
sahf
cmc
int
lds
sbb
outsl
push
lea
mov
cmc
mov
dec
flds
pop
imul
std
cmpsl
and
xor
adc
nop
nopl
push
shrd
sbb
mov
hlt
or
inc
cld
cmp
push
jbe
test
xor
std
ret
pop
sti
mov
cmp
fisubs
rcl
dec
cltd
mov
xor
inc
outsb
push
mov
push
and
ja
mov
mov
iret
pusha
out
pop
loop
ret
adc
sti
dec
xor
faddl
mov
loope
sbb
scas
out
mov
daa
jae
jo
xchg
daa
jecxz,pn
pop
dec
sbb
sahf
jg
adc
jbe
and
lcall
push
xchg
imul
jmp
mov
in
subb
xor
pop
das
mov
fcomip
cmpsb
push
clc
pop
cld
pop
xor
mov
pop
mov
add
jns
dec
out
loopne
out
pop
mov
xchg
call
dec
push
ss
adc
mov
sbb
push
jo
jmp
cmp
mov
aam
inc
hlt
clc
cwtl
mov
fcoms
mov
test
inc
sbb
fbstp
stc
mov
or
mov
popf
adc
add
fistpl
ficomps
xor
sub
out
insb
inc
imul
iret
scas
xchg
loopne
or
test
enter
stc
xchg
sbb
and
addl
mov
fwait
mov
add
outsl
in
sbb
lds
jno
ds
mov
lds
sarl
inc
in
push
cmpsl
cmp
hlt
dec
sub
jecxz
cmp
stos
mov
sarb
fistpll
fbld
jo
subb
aas
andl
lds
js
shrb
data16
sub
loope
xchg
cmpsl
shrb
pop
sbb
pop
out
dec
cmc
and
add
mov
push
inc
xor
xchg
sub
adc
shlb
test
sarb
mov
aas
and
cmp
dec
push
jnp
inc
in
add
movsb
jg
scas
xchg
pusha
test
mov
inc
shrb
lahf
push
jae
and
xor
xchg
pop
mov
pushf
out
sbbb
mov
push
mov
push
xchg
dec
or
sbb
pop
inc
inc
dec
xchg
mov
mov
repnz
outsl
add
popl
xor
adc
or
xchg
mov
fnstsw
mov
ficompl
into
leave
ret
xor
jmp
js
pop
or
adc
test
mov
fisubrs
loopne
fisubrl
in
aas
aad
lock
cld
mov
insl
adc
xchg
stos
test
leave
in
or
jge
mov
add
mov
pusha
xor
call
mov
aas
or
mov
sbb
push
inc
mov
cmp
lds
popf
lods
iret
push
test
roll
fadd
jle
addr16
add
clc
mov
loopne
and
pop
sbb
mov
mov
xchg
jno
mov
adc
jae
adc
cltd
xor
in
and
xor
ja
xchg
pushf
inc
pop
popf
jns
ljmp
lret
idivb
and
push
or
pop
data16
pop
jl
cmpsl
arpl
scas
cmp
add
shlb
incl
fdivl
fwait
or
fisubs
push
lods
sbb
subl
repnz
xchg
repnz
push
mov
sbb
loopne
dec
test
popf
sbb
mov
int3
pop
subb
mov
hlt
inc
fisttpl
xchg
pop
cmp
les
and
pop
lds
in
fldt
push
mov
pop
xor
clc
int
and
repnz
dec
jle
lock
sbb
jmp
shll
vorps
sti
mov
mov
xchg
push
outsb
ljmp
push
hlt
imul
sarl
fidivl
fucom
mov
scas
mov
fidivl
push
js
add
xchg
cmp
jg
test
cmp
ret
repz
lds
jmp
int3
xchg
xchg
push
lods
ret
cmp
xor
iret
mov
and
loope
mov
lods
pop
xchg
test
or
js
jmp
pop
pop
orl
xor
jmp
xchg
sbb
cs
icebp
cs
xlat
push
imul
adcl
pop
aad
sbb
test
and
or
test
jp
mov
sbb
cmp
das
fcomip
pop
es
mov
dec
adc
jb
sbbl
cmp
pusha
int
shll
sub
or
mov
push
adcl
lock
or
in
lock
or
fs
lods
push
leave
filds
push
pop
adc
cwtl
shrb
andb
push
push
or
ja
lret
cltd
pop
xor
and
inc
loop
movsb
inc
fcom
push
out
xchg
ret
mov
int
insl
dec
push
out
loop
lods
inc
jmp
or
testl
pushf
jl
dec
mov
out
xchg
std
xchg
ss
pusha
sub
xchg
imul
mov
mov
loopne
or
mov
dec
lock
add
mov
mov
xor
loope
mov
inc
push
mov
sub
cmp
xchg
insb
xchg
addb
jb
imull
xchg
ret
repz
test
fiadds
push
rolb
add
adc
cmpsb
cltd
add
clc
push
outsl
roll
out
push
in
mov
jmp
sub
push
xchg
and
add
jno
test
dec
scas
dec
pop
xlat
pop
mov
fwait
into
ss
jle
mov
pop
mov
push
sub
xchg
mov
test
jb
das
les
mov
mov
fs
and
mov
ret
dec
inc
fdivrl
or
bound
dec
loop
je
cmpsl
arpl
imul
das
out
sub
adc
xchg
push
push
je
mov
mov
lret
mov
shl
int
test
psubq
mov
clc
stos
mov
dec
dec
fdivs
in
ss
mov
pop
mulb
fdivs
and
inc
stos
js
jb
adc
test
cmp
sbb
and
cs
adc
sbbb
mov
lahf
jmp
xchg
cmp
mov
je
imul
js
ficoml
cmpsl
out
push
call
sub
cmp
loope
ja
or
mov
ljmp
pop
in
orl
mov
mov
int
push
dec
filds
and
nop
and
xchg
dec
dec
pop
cmp
add
ret
lret
mov
and
xchg
rolb
cltd
rorl
aas
mov
or
mov
and
xchg
mov
xlat
outsb
inc
into
add
mov
and
dec
cwtl
push
insl
inc
inc
adcb
push
int3
arpl
push
mov
aaa
mov
mov
xchg
sub
insl
add
inc
mov
add
lods
push
out
ret
push
jmp
jne
pop
repnz
jnp
rcl
cmp
shll
jo
es
jmp
cmpb
push
pop
scas
inc
clc
cltd
xor
cmpsb
pop
hlt
adc
icebp
cmp
in
hlt
mov
jbe
mov
out
pop
mov
push
sbb
push
movsl
push
jmp
call
mov
in
cmp
popa
inc
mov
cmpsl
cli
mov
mov
xchg
mov
mov
mov
aad
stos
jnp
repnz
in
lahf
into
mov
push
push
xlat
mov
jae
orl
inc
dec
shlb
adc
push
dec
jmp
lods
inc
jnp
cli
cmp
imul
mov
pop
jg
pop
adc
push
lock
and
sub
push
push
push
sbb
in
insl
cmpsb
add
xorl
dec
add
dec
lahf
fnstsw
sbb
mov
mov
gs
inc
lea
pop
mov
movsb
stos
jb
addb
imul
aaa
dec
movsb
mov
add
cmp
cwtl
sbb
jae
dec
test
cmp
mov
out
cmovnp
mov
push
add
add
clc
jle
inc
in
jnp
sbb
fldenv
pop
ficoms
or
pop
mulb
sub
out
inc
sub
sbb
mulb
mov
mov
scas
sbb
data16
cmp
and
xlat
dec
pop
dec
enter
insl
sbb
inc
pop
mov
test
lock
mov
stc
or
xlat
push
sub
in
sbb
and
cmc
add
out
xchg
ja
dec
pop
pop
adc
fidivrs
aad
and
lahf
jp
popf
cmc
cltd
sahf
jl
loopne
cld
adc
inc
insb
inc
xor
sbb
testl
pop
or
outsb
xorb
mov
or
push
mov
mov
aad
sbb
pop
aam
pop
mov
test
xor
push
jbe
add
lods
cmp
sbb
popf
cmpsl
jecxz
mov
cmpsb
jnp
jo
popa
inc
fcoml
cmp
jecxz
pop
cmp
scas
rorl
push
rclb
add
jnp
fwait
and
xchg
adc
cltd
pop
outsl
or
jae,pn
insb
mov
jns
pop
xchg
mov
jmp
pop
dec
xchg
mov
xchg
in
stc
or
mov
push
test
adc
arpl
gs
cwtl
add
mov
push
in
mov
ljmp
mov
fyl2xp1
mov
daa
jecxz
in
dec
stc
inc
pmullw
and
lret
in
test
jecxz
in
mov
jge
xchg
imul
push
push
cltd
xor
imul
jecxz
shll
cmp
popf
mull
inc
jne
pop
das
stc
xchg
pop
aad
sub
and
push
ss
out
js
add
xchg
xchg
stos
xor
imul
fcomip
cltd
sbb
mov
out
xor
insb
jp
adc
mov
inc
xor
mov
mov
pop
test
int
mov
sub
xchg
jb
push
lods
dec
shl
fsts
jae
sbb
inc
lret
mov
mov
scas
add
mov
icebp
cwtl
hlt
sbb
mulb
push
js
ja
cmpsl
ficomps
int3
dec
mov
mov
addb
out
int3
inc
add
iret
push
outsl
sub
mov
sahf
scas
lret
pop
fimull
mov
push
mov
cmp
jmp
dec
addb
or
movsb
cmp
mov
inc
push
hlt
pusha
sarb
les
add
out
arpl
nop
fwait
test
lods
imul
xor
jno
mov
dec
out
jae
mov
mov
cltd
dec
adc
inc
push
ja
inc
leave
xchg
adc
stos
cwtl
aas
inc
sar
ds
mov
mov
mov
mov
pop
adc
mov
inc
mov
aam
test
xor
in
imul
pop
mov
add
ds
pusha
sahf
sbb
cmp
sub
xor
mov
in
jne
sub
jl
jl
lods
mov
and
lods
stc
pop
jno
xchg
sub
in
jns
bound
add
sub
adc
stc
shll
adc
cmc
shlb
xlat
div
mov
ja
out
inc
mov
scas
fistpll
or
dec
add
jb
and
xor
bound
jb
sbb
loope
add
mov
out
out
lods
xchg
mov
minps
loope
movsl
les
jns
jnp
loop
out
adc
jge
jbe
shll
mov
cmpsb
ljmp
lahf
mov
ljmp
jge
pop
fwait
test
and
mov
inc
add
stc
pop
inc
loop
out
popf
dec
jns,pt
in
data16
cwtl
push
rorl
sub
mov
cmc
mov
ret
inc
fcomps
stc
subb
mov
ljmp
mov
mov
sbb
bound
cmp
mov
addr16
es
nop
mov
cwtl
scas
mov
push
pushf
out
jl
mov
xor
sub
in
inc
sbb
or
adc
dec
add
jle
mov
and
xor
daa
xchg
enter
fdivs
lret
pop
xchg
ret
sbb
xchg
inc
dec
mov
leave
xchg
inc
mov
adc
lcall
and
lret
or
clc
addr16
test
xchg
das
add
ja
dec
jg
push
sub
dec
popf
stc
nop
lret
push
nop
lea
imul
loopne
dec
cld
xchg
inc
mov
pop
xlat
imul
xor
mov
call
jo
movsb
imull
dec
inc
fdivrs
ss
sbbb
dec
hlt
movb
pop
add
notb
inc
xchg
adc
jbe
xor
movsl
push
mov
mov
dec
aad
inc
jo
arpl
insl
sbb
sub
sbb
mov
push
cmp
sbb
stc
pop
xchg
ret
jnp
int
addr16
rcrl
mov
std
pop
sbb
or
loop
push
push
int3
xchg
sbb
mov
xor
jle
into
addr16
adc
and
sti
push
cmp
and
add
out
push
ret
mov
imul
mov
out
inc
mov
and
imul
dec
add
or
jne
lock
mov
popa
mov
adc
jnp
dec
lods
lahf
in
xchg
jle
ficomps
orl
push
cpuid
ret
dec
cmpsl
mov
fs
int
fisubl
ficoml
xor
sbb
addl
jmp
jns
loopne
mov
cmp
imul
rcl
xor
sti
icebp
adc
add
cmp
fistps
pop
shlb
outsl
push
mov
aas
jge
adc
movsb
pop
popf
lods
ljmp
es
cmp
mov
cmpsb
adc
pop
mov
lods
sbb
mov
sbbb
iret
jbe
cli
insb
movsl
add
loope
jmp
dec
addr16
shrl
push
in
jns
pop
call
mov
ljmp
jp
stos
insl
mov
and
adc
xor
push
rcll
into
add
cli
push
mov
pop
push
cmp
rorb
lock
xlat
call
inc
jg
jns
inc
mov
add
insb
bound
test
lock
icebp
movsb
in
mov
push
test
dec
dec
pushf
repz
cltd
out
ret
pop
lret
xor
mov
pop
and
shl
mov
dec
sbb
mov
jb
daa
and
lock
ljmp
sti
dec
out
ja
lahf
popf
repz
xchg
mov
pop
sbb
cmp
inc
jb
fs
cwtl
pushl
and
push
add
adc
dec
inc
mov
js
loope
add
jp
fiaddl
shrl
notb
loop
pop
int
aam
mov
mov
sbb
adc
pushf
dec
cmp
repnz
icebp
sbb
sbb
and
lock
out
std
sbb
inc
lcall
and
hlt
arpl
sbb
mov
adc
scas
xor
add
movsl
outsb
push
test
xchg
cmp
mov
push
dec
aas
add
sub
repz
jmp
out
xor
arpl
or
vpcmov
in
xchg
xchg
sbb
jbe
insb
icebp
cmp
into
xchg
jp
cwtl
inc
push
sti
adc
stos
sbb
movsl
icebp
cmc
fs
out
lahf
xchg
ds
hlt
les
adc
dec
ror
dec
je
outsb
sub
sbb
fcompl
fwait
mov
mov
lret
inc
sub
cmp
ss
sbb
jb
repnz
lea
stos
in
push
sub
aas
aas
adcl
xlat
pop
sbb
xor
or
hlt
xchg
cs
scas
or
fdivr
pop
test
mov
jl
inc
or
jmp
dec
sbb
test
ret
out
in
lds
and
jl
push
dec
jmp
sbb
in
jno
and
pop
mov
stos
movsb
les
jp
out
and
pop
push
shlb
sbb
mov
adc
rcrb
mov
jmp
pop
xchg
daa
pop
cmp
push
cmp
mov
jg
cmc
and
and
mov
outsl
test
enter
jp
ss
rorl
loop
lahf
in
mov
test
repnz
sub
scas
pop
jae
sub
lret
xor
inc
jbe
adc
mov
int3
clc
lea
xchg
xchg
add
jl
adc
inc
int3
arpl
or
add
sub
jp
dec
insl
mov
pusha
fwait
pcmpgtb
sbb
xchg
mov
insl
bound
xchg
push
lods
lret
mov
movsl
std
pusha
adc
xchg
jno
dec
mov
xchg
fnsave
ffreep
xor
sti
fwait
dec
or
jmp
dec
push
cmpsl
cld
int3
xor
xchg
xor
mov
es
fisttpll
jmp
in
fldl
sbb
sub
push
inc
push
mov
lcall
pop
xor
adc
bound
lds
xchg
add
fsubrl
xor
roll
je
push
pop
mov
test
push
cmpsb
mov
mov
pop
mov
enter
lds
mov
xchg
mov
inc
jp
in
or
xlat
or
xchg
and
out
clc
dec
inc
or
xchg
mov
or
push
es
cmpl
mov
iret
shll
and
ja
sbb
add
lds
mov
xor
into
xchg
lods
cmpsl
jle
test
jle
fwait
add
cmpsl
push
lods
and
jmp
lret
fs
fildl
sub
or
adc
jp
or
or
jecxz
or
mov
mov
addr16
jmp
icebp
xchg
lods
fsubl
xor
push
std
sbb
daa
add
movsb
push
loop
push
fwait
and
push
or
adc
aam
jno
xor
xor
xor
dec
dec
arpl
in
pop
dec
mov
test
jecxz
iret
rol
popa
fisttps
sub
aad
loope
mov
js
out
jecxz
xchg
xor
mov
cmp
aaa
sub
inc
lret
jmp
outsl
loope
sbb
lds
add
push
xchg
sub
push
mov
das
mov
pop
and
aam
loop
xor
shll
sahf
movsb
push
orb
out
add
cwtl
xor
cld
sbb
outsl
mov
jne
add
loopne
jle
rcrl
push
mov
jbe
jne
push
sahf
lret
jl
sub
in
stos
jl
call
shl
mov
mov
dec
xor
pop
arpl
xlat
mov
loop
jp
or
adc
pop
dec
sub
sbb
out
cmp
loope
mov
leave
clc
or
inc
imul
jmp
pop
lds
in
sahf
xchg
popa
cmp
cld
cmovg
notb
push
sub
pop
shl
lods
outsl
cmp
xchg
insb
fcom
cmc
pop
daa
mov
shrl
adc
sti
xchg
add
pop
mov
das
or
sub
fs
pop
adc
stos
mov
cmp
lret
dec
push
data16
sub
ficoms
addr16
or
pop
lcall
imul
stos
testb
pop
pop
jne
mov
lock
and
insb
test
adc
pop
lret
stos
xor
fadd
xchg
cmpsl
ljmp
out
es
pop
xchg
jno
and
fsubl
sub
mov
add
out
faddl
lock
push
dec
nop
inc
stos
lds
test
fstpt
inc
sbb
jle
mov
daa
hlt
loopne
mov
ret
mov
pop
cmp
push
popf
test
jmp
loop
pusha
int
pop
cwtl
mov
pop
dec
mov
fldl2e
popf
mov
jl
pop
and
push
mov
dec
mov
adc
and
js
jle
jge
daa
push
lock
ret
or
in
movsl
jg
add
xor
icebp
mov
jle
cli
mov
les
das
sbb
push
cli
setne
data16
or
stos
ret
in
jns
jecxz
pop
pop
mov
mov
out
test
mov
xor
cmpsl
inc
lock
push
pushf
pop
xchg
xor
add
cwtl
sbb
xor
repnz
inc
dec
lods
jnp
lea
outsl
add
hlt
lea
les
xorb
add
push
nop
popf
test
ds
pop
scas
and
mov
int3
ret
frstor
imul
inc
fucomp
jmp
mov
bound
jae
xor
popa
mov
iret
xlat
inc
in
dec
fistl
push
and
mov
call
dec
stc
adc
fistps
js
pop
sub
cltd
jp
or
pop
aam
push
rcr
fcomi
xor
pop
test
cltd
cmpsl
ds
ja
or
lods
pusha
mov
add
add
mov
mov
iret
and
fimull
xlat
sbb
or
jae
mov
mov
mov
mov
mov
out
adc
mov
imul
imul
and
fs
les
xchg
cli
test
test
cmpsb
ds
fsubs
and
dec
jp
popf
mov
lret
lret
in
dec
xchg
fistpll
push
jno
cmp
xchg
jmp
and
out
jge
push
sub
rcrb
sbb
lcall
or
push
movsl
pusha
dec
mov
insl
sarb
mov
repnz
das
push
mov
lods
jo
push
sub
hlt
sub
sub
cmc
push
dec
cmp
mov
mov
dec
mov
sbb
mov
pusha
ja
stos
mov
push
fisubrl
sarl
xlat
outsb
mov
aam
lock
or
xlat
in
xor
aaa
out
mov
xor
mov
test
pop
cmp
lahf
ja
dec
shl
pop
jmp
xchg
cmp
dec
pushl
and
addr16
xchg
lret
mov
in
cmpsb
sbb
and
mov
mov
inc
push
mov
or
adc
arpl
or
xor
lret
hlt
mov
push
xchg
das
jg
mov
lods
out
add
je
test
jecxz
push
sti
push
test
lret
xchg
aaa
cli
add
es
leave
mov
movsb
in
and
sbb
push
das
test
inc
pop
dec
add
jp
dec
loopne
fwait
xchg
mov
aaa
addr16
in
sarb
jno
and
loope
add
xchg
mov
rcll
cmp
lods
inc
jno
mov
xchg
in
cmpsb
into
xchg
scas
sub
add
cmpsb
mov
adc
aas
dec
jb
lock
sbb
popa
xchg
mov
mov
stc
jge
int3
xor
push
outsl
adc
aam
add
in
mov
mov
popf
stc
ja
imul
xchg
jmp
insb
cmp
ljmp
pushf
sbb
mov
mov
dec
push
mov
sti
xchg
add
jo
sbbb
bound
add
push
adc
sbb
push
sub
add
mov
jl
fisubs
pop
cmp
sub
jns
cmpsb
dec
aad
pop
call
push
adc
ficompl
jae
lea
lock
inc
cmc
ret
pushf
daa
aad
or
push
jp
gs
aam
mov
les
clc
fwait
or
in
jmp
xchg
xchg
pop
lret
jge
sbb
orb
xchg
or
and
andl
jmp
cli
mov
cld
rcrb
das
cltd
dec
pop
sbb
push
push
lock
int3
push
jo
xlat
xchg
scas
hlt
bound
mov
mov
push
scas
xchg
xchg
pop
sub
cmp
dec
gs
fstpt
jnp
mov
out
mov
mov
lret
lret
jmp
nop
cmc
and
int
movsb
nop
push
or
cmp
cmpsl
mov
or
fsubr
fstpt
xor
loopne
nop
xchg
out
add
dec
dec
inc
cltd
adc
loop
cmp
lds
mov
lret
inc
mov
sub
inc
mov
fdivs
pop
dec
adc
xchg
out
inc
repnz
aas
cmp
mov
addr16
push
out
clc
jle
sbb
sbb
mov
loope
pop
lcall
and
adc
fucomi
cs
paddusw
adc
jns
fmulp
addr16
ja
ret
pushf
push
adc
lcall
lcall
in
addl
push
mov
pop
outsl
xor
shl
fsts
ljmp
push
jmp
cwtl
xor
fnstsw
jb
call
loope
jl
or
stos
mov
fldenv
adc
xor
mov
mov
fwait
xchg
xor
jmp
or
sub
daa
lcall
adc
pop
lahf
cmp
in
subl
add
call
aam
je
in
ret
pop
repnz
test
jge
cwtl
jns
inc
icebp
mov
and
push
in
lock
test
cmp
or
pop
pusha
mov
mov
inc
subl
push
test
ds
add
fmull
xchg
mov
popa
cmc
dec
push
mov
repz
insb
push
cmp
xor
push
mov
xchg
popa
int3
dec
call
outsl
push
shrl
add
shll
ret
jecxz
cltd
dec
cltd
ret
ds
cmp
mov
cld
cli
push
xchg
mov
adc
jno
es
cltd
stos
ljmp
mov
pushf
mov
int
mov
pop
push
ljmp
jno
pop
mov
shrb
aas
loop
jge,pt
repnz
dec
pop
loopne
push
or
out
cmp
aas
xchg
test
inc
cmp
jl
mov
loope
sub
sub
sarl
out
rorb
je
pop
aam
or
adc
sarl
mov
cwtl
mov
xchg
xchg
push
push
mov
xchg
cmpsl
jg
mov
mov
mov
push
mov
xchg
movsl
push
out
xchg
call
or
mov
push
mov
xor
xor
mov
leave
negl
cmp
xlat
addr16
cli
xchg
xor
mov
test
int
iret
jns
das
lds
push
dec
mov
in
out
push
popf
xchg
or
fldenv
out
lock
les
mov
aas
push
push
mov
mov
sbbb
pop
fsubrs
xchg
jne
stos
xchg
xor
mov
sub
and
push
mov
rcl
ljmp
jne
and
jg
or
mov
cmpsl
sbb
lods
or
add
cs
aam
mov
icebp
xchg
add
sub
pop
mov
dec
and
jg
lcall
push
testl
sbb
notl
jle
ljmp
jmp
mov
std
aam
rclb
icebp
mov
pop
dec
stc
test
roll
leave
loopne
cmc
adc
sbb
pop
in
cli
or
push
out
scas
sbb
jle
add
dec
jecxz
mov
xchg
pop
and
or
push
pop
push
sub
testb
mov
es
xor
daa
stos
mov
jle
inc
mov
push
inc
in
out
xchg
ja
sub
aas
cmp
icebp
push
outsb
ds
pop
or
pusha
sbb
dec
shlb
pop
xchg
repz
mov
pop
mov
xchg
xor
movsl
sbb
mov
scas
les
mov
xor
cwtl
cmp
jb
sbb
sbbl
dec
in
xor
das
sahf
push
sahf
out
fwait
pop
push
sub
fsub
pop
sbb
sub
sti
pop
cmp
mov
sbb
adc
lret
jns
cmp
jbe
inc
jecxz
cmp
ja
lock
cmp
gs
adc
sub
mov
pop
adc
movsb
mov
call
fbld
xor
imul
adc
inc
pop
or
dec
and
xchg
das
add
cld
push
inc
mov
fcmove
sbb
sbb
pandn
adc
push
pop
xor
mov
out
out
lret
or
in
mov
adc
sbb
mov
arpl
fcom
repnz
adc
pusha
cmp
test
sbb
rorb
mov
push
jmp
nop
rcl
jo
fdivp
aad
ss
les
sbbb
aad
aaa
pop
movb
or
clc
xchg
xchg
xchg
add
sbb
jno
mov
add
scas
iret
pop
xchg
rorl
popa
pop
adc
mov
clc
mov
sub
mov
fsub
inc
into
fcmove
ret
jo
out
jnp
int3
stos
xor
push
xor
rcrb
lcall
sarl
fnstcw
mov
cmp
gs
xlat
test
or
jge
adc
push
sbb
lea
jns
repnz
lret
pop
jg
pop
fsubs
jns
adc
push
cwtl
das
push
int
bound
and
dec
push
xor
sub
mov
outsb
out
xchg
dec
std
pop
testb
and
roll
pushl
stos
cmp
jne
shrl
dec
fistpll
lock
mov
cmp
mov
arpl
lret
push
jbe
orb
sub
push
adc
sub
jmp
lods
xor
pop
push
je
mov
in
lret
jmp
add
pop
dec
inc
stos
in
dec
lahf
incl
and
loope
lret
dec
out
jmp
js
dec
stos
mov
pop
call
mov
push
rol
das
mov
ficoms
xchg
sub
jo
popa
leave
adc
xor
dec
cmpl
jne
and
jg
lcall
cld
and
std
push
sbb
inc
bound
repnz
daa
add
push
mov
cmp
xorb
dec
push
xor
idivb
fdivrs
shl
nop
jae
mov
sub
cmp
mov
fildl
add
pushf
push
and
fnstcw
cltd
push
mov
loop
xor
sbb
subl
movq
test
jl
lods
outsb
jl
pop
add
mov
or
push
sub
cmpsb
idiv
jge
enter
xor
jbe
insl
scas
scas
push
in
call
movsb
push
andb
nop
jl
in
xchg
mov
mov
push
cmp
dec
jo
incb
pop
rcr
fsub
mov
dec
lea
xchg
in
add
mov
add
scas
sti
popf
push
jmp
and
dec
js
mov
cmc
mov
pop
sbb
cmp
push
clc
xor
xchg
lret
sarb
and
sub
sbb
inc
add
xor
scas
and
shrl
jae
daa
popf
and
inc
inc
and
cmpsb
mov
mov
xchg
mov
mov
out
cmpsl
jo
sbb
adc
das
pop
pop
cmp
fsubrl
cmc
jp
sti
pop
add
loope
jecxz
push
sbb
mov
inc
in
mov
sub
mov
add
cs
mov
mov
adc
inc
mov
adc
lret
sbb
push
push
sub
jno
sub
iret
xor
cmp
repz
xchg
and
outsb
mov
push
lret
and
dec
jbe
mov
mov
mov
loop
push
lds
lcall
in
orl
or
push
xchg
mov
jnp
int
pushf
movsl
iret
mov
rcrl
ret
in
neg
and
test
inc
test
or
sbbb
and
mov
in
sub
fisubrl
pop
mov
cmp
mov
inc
fimull
or
pop
cmp
mov
cmp
push
test
sbb
idivb
lods
lock
lret
mov
gs
mov
jns
subb
or
jb
mov
pop
lock
ds
xor
data16
enter
imul
push
pop
cltd
shrl
pop
mov
xchg
pop
jmp
cmc
cmp
out
pop
jl
cmp
jbe
xchg
pop
shrb
fs
fdivs
push
test
dec
or
loop
lods
jmp
mov
or
push
repz
and
jle
push
insl
hlt
mov
clc
mov
sub
pop
cmp
or
dec
pop
add
inc
fcmovne
pop
mov
sbb
push
mov
gs
sbb
movsl
loop
out
dec
movsl
icebp
nop
je
iret
xor
and
bound
ja
adc
inc
push
outsl
pushfw
sbb
jae
shrl
push
inc
jbe
lret
push
das
pop
xchg
leave
mov
popf
test
arpl
jg
hlt
mov
xor
xchg
sbb
adc
pop
xchg
aam
inc
ja
xor
fstl
cld
addb
push
ss
jle
or
ret
jle
cmc
push
fcoms
mov
data16
cwtl
das
or
and
shrl
imul
outsb
sbbl
add
shrb
mov
aam
xor
nop
ljmp
arpl
imul
mov
push
adc
ss
sub
aaa
stos
jmp
fimull
popf
sub
mov
xchg
push
mov
xor
xor
mov
add
in
popa
lcall
adc
push
push
cmp
sub
out
push
adc
pop
out
mov
jnp
inc
shlb
sti
test
stos
adc
xor
mov
pop
mov
lods
cmp
inc
out
popa
bound
lods
push
or
jmp
push
xchg
fs
stos
pushf
js
cmp
sbb
cld
cmpsl
popa
mov
repnz
test
aas
sub
sbb
mov
mov
xorb
lea
test
and
inc
mov
xor
dec
in
mov
fsts
lods
call
fsub
ljmp
arpl
sbb
fisubl
adc
dec
mov
xor
adc
insb
jle
xchg
in
and
adc
inc
clc
jmp
orb
xchg
xor
cmp
movsb
mov
cli
dec
dec
sub
sbb
rol
fldcw
xorl
xchg
add
jmp
repnz
movsl
cmp
loope
in
jl
cmp
imul
adcl
or
xchg
pop
cmp
xor
cmpl
mov
or
mov
out
cmp
addl
pusha
xchg
fcmovnb
rorb
cmpps
mov
push
dec
addl
cmp
dec
jle
int3
inc
mov
lds
sahf
sbb
sahf
adc
outsl
xor
in
imul
outsl
sbb
mov
mov
imul
add
dec
mov
and
xchg
cmp
pop
mov
xor
inc
popa
aam
or
ficoms
lods
int
mull
pop
hlt
jecxz
jge
sbb
fbstp
das
fdivl
jg
movsl
mov
orb
aaa
and
addr16
jp
jno
insb
add
out
nop
je
mov
mov
and
mov
inc
xor
pop
addl
push
pop
xchg
xor
std
xor
mov
in
sbbl
or
mov
loopne
push
add
scas
push
dec
dec
ret
xchg
ja
or
int3
je
jmp
repz
cmp
dec
scas
cs
daa
stos
enter
or
push
addr16
sub
pop
adc
loopne
or
subl
sbb
jg
mov
or
stos
dec
daa
push
orb
or
or
mov
ljmp
xchg
outsb
sbb
adc
shl
mov
scas
outsl
mov
stc
or
mov
adc
lcall
inc
mov
push
sbb
dec
cmp
push
loope
les
fldl
xchg
sub
lcall
cmp
mov
ljmp
push
lock
fmuls
in
jle
scas
mov
fimull
pop
outsl
loope
push
jae
mov
in
fnstsw
not
mov
sub
dec
push
or
dec
lahf
ret
pop
or
in
sub
lds
mov
dec
in
xor
pop
xor
stos
jmp
dec
dec
and
bswap
lods
lret
push
dec
jmp
xor
test
xor
in
loopne
push
int3
jp
sub
call
xchg
and
lds
shl
dec
and
cmp
std
into
sub
mov
in
call
push
or
xchg
add
jae
xchg
movsl
jno
jne
add
faddl
out
jbe
pop
ds
xchg
add
lcall
push
push
and
pop
xchg
fs
mov
add
es
xchg
repnz
sub
hlt
sbb
ja
dec
push
mov
jl
popa
jg
sbb
xchg
sub
lods
ljmp
xorb
cmc
mov
and
cwtl
pop
fwait
push
push
xor
pop
filds
pop
addr16
xor
in
and
and
subb
adc
jp
out
adc
pop
stos
es
and
hlt
adc
adc
in
sub
aad
sub
int3
in
add
or
lahf
inc
repz
shrb
out
sti
pop
pop
or
or
subl
adc
arpl
aas
pop
sbb
arpl
in
outsl
loop
add
inc
cld
bound
iret
and
push
cs
and
jae
xchg
sub
jo
mov
insb
adc
jmp
inc
sbb
dec
dec
lods
mov
les
jmp
loopne
push
mov
push
pop
sub
mov
fwait
movsl
imul
imulb
push
fisubrl
mov
ja
mov
fisttpl
xchg
lahf
push
xor
int
pop
mov
lret
imul
and
mov
adc
mov
outsb
mov
push
cmc
adc
mov
iret
push
js
dec
mov
inc
adc
push
in
xor
jno
push
cmp
outsl
mov
mov
and
mov
sarl
jb
cmp
cmp
iret
insl
in
in
xor
cs
int3
pop
fwait
js
loop
and
mov
pop
iret
dec
es
mov
cmpsb
mov
xchg
mov
lahf
lds
add
adc
das
cwtl
std
push
lds
cld
and
int
push
stos
arpl
cmpsl
mov
daa
ret
cmpsb
stos
ficomps
stos
inc
push
jge
negl
gs
inc
in
out
pop
outsl
sub
cmp
pop
pop
outsb
sub
cs
imul
mov
es
cmp
cmp
arpl
roll
ret
jbe
sbb
fwait
cmpsb
cld
cwtl
push
mov
xchg
inc
and
daa
push
inc
or
dec
dec
mov
mov
push
add
aaa
in
jb
sub
cltd
mov
push
imul
xchg
mov
mov
je
fucomp
or
int
push
dec
es
inc
sub
loopne
inc
inc
inc
in
iret
push
sub
leave
cmpsb
fs
mov
jns
pop
fmuls
inc
in
icebp
dec
loop
call
icebp
out
stos
daa
fcomp
movsl
mov
dec
jnp
int
mov
inc
pop
push
insl
stos
cmp
hlt
mov
cs
push
pop
imul
call
mov
add
push
sbb
and
push
and
jo
cmp
stos
push
sbb
test
icebp
frstor
mov
push
sbb
push
ret
hlt
fcoml
or
adc
lds
push
push
lock
int
dec
or
mov
nop
sbb
add
adc
and
xchg
and
cld
xchg
cmp
jecxz
pop
lods
fisttps
push
insl
add
addr16
sbb
mov
jbe
std
andl
pop
into
sbb
shlb
out
rcrl
and
repz
dec
xor
mov
inc
out
cmp
or
mov
mov
pop
call
dec
mov
cmp
and
lret
cld
xchg
xchg
sub
out
int3
aas
dec
add
loope
movsl
dec
aam
dec
or
rorb
loopne
push
pusha
ljmp
xlat
pusha
movsl
rclb
stos
or
in
loope
gs
jg
dec
add
test
dec
xor
arpl
shrl
push
icebp
enter
push
loop
leave
lcall
dec
push
mov
dec
pop
inc
and
addr16
dec
add
in
repz
hlt
cmp
ja
in
sub
mov
sub
pop
ficoml
mov
jno
jp
sbb
icebp
xor
mov
push
adc
inc
dec
inc
mov
mov
imul
sbb
mov
mov
xlat
imul
mov
in
repnz
push
sbb
fsubrl
jmp
push
xchg
xchg
test
sub
into
push
leave
mov
loop
mov
gs
xchg
rorl
in
test
in
inc
out
xchg
aam
repnz
mov
sub
test
cmp
cmp
mov
mov
mov
and
in
rol
nop
ljmp
mov
arpl
js
pop
push
mov
jae
scas
fucomi
nop
fisubrl
adc
jmp
es
mov
cld
gs
daa
inc
push
insb
pushf
sub
ret
jo
mov
push
mov
lds
mov
jb
sub
adc
ret
xlat
push
mov
xor
insb
adc
das
mov
gs
arpl
sub
xchg
push
lret
sub
mov
xchg
sub
leave
pop
movsb
mov
jg
sarb
pushf
adc
movntq
test
pop
gs
sbb
push
xchg
fadds
pop
inc
adc
cmpsb
les
dec
dec
pop
jg
adc
mov
sub
fs
pop
or
cmpsb
sbbl
pop
loope
pop
pop
imul
test
fwait
pop
push
jle
mov
jbe
rcll
int
sbb
mov
pop
jnp
push
jge
xchg
das
ror
pusha
xchg
push
dec
and
out
pop
mov
mov
sub
cmp
mov
push
hlt
dec
mov
fisttpll
imul
jb
fwait
pop
call
sahf
pop
ljmp
jmp
dec
inc
and
inc
jb
dec
dec
or
fldenv
dec
lret
test
dec
cmp
ret
ret
sbb
stos
mov
scas
cli
std
shlb
adcl
idiv
mov
bswap
adc
adc
dec
dec
ja
mov
jae
insb
sub
ljmp
mov
jbe
movsb
into
xchg
lds
ficoml
mov
dec
loop
mov
ficomps
ds
out
pushf
loop
sub
inc
clc
push
jecxz
cmp
lret
addr16
cmp
fnsave
iret
dec
pop
jmp
pop
stos
sarl
inc
dec
and
sub
fdivrs
sbb
mov
cmpsb
xchg
jb
testb
das
cmp
pusha
cld
lods
pop
xchg
or
cmp
mov
sti
ss
pop
sahf
push
push
push
es
sahf
xor
movb
and
jmp
scas
fstpl
mov
mov
lret
or
rorb
cltd
xor
add
push
mov
loopne
int3
pop
aam
or
in
dec
cmp
mov
cltd
xchg
or
idivb
subb
stos
cmp
sbb
cmp
xor
xchg
or
mov
insl
sub
mov
mov
out
stc
add
pusha
fildll
add
adc
daa
out
call
sub
push
xchg
cmp
scas
mov
mov
addr16
fld
idivl
loope
in
test
push
int
sub
pop
jg
sub
mov
dec
lret
stos
in
leave
int3
fdivrp
mov
pop
cs
mov
aam
hlt
lret
mov
pop
mov
push
xchg
cld
pop
xor
jno
push
iret
jns
cs
lea
not
add
repnz
mov
xor
mov
in
mov
sahf
mov
mov
add
pushf
push
mov
jb
out
pusha
cmpsl
shrb
adc
mov
pop
xchg
cmp
pushf
nop
and
mov
cmp
sbb
rcrl
mov
subb
add
push
loop
gs
and
cmp
into
mov
ljmp
dec
sub
dec
dec
pop
mov
aam
mov
pop
out
or
inc
jmp
push
pop
scas
adc
lea
stos
leave
xchg
outsb
or
mov
mov
lahf
adc
or
cmp
fucomip
outsb
add
jno
mov
xor
mov
inc
push
inc
xchg
jb
pop
dec
in
and
sub
push
jp
push
xor
add
inc
jg
cwtl
push
push
sbb
or
in
adc
divb
inc
xchg
sbb
cmp
inc
fwait
sub
inc
popf
jl
adc
sbb
fcoms
stos
push
fadds
mov
sub
jb
shll
pop
out
mov
mov
pop
xchg
icebp
call
dec
adc
fsts
pop
or
mov
pop
mov
ds
fcom
ret
mov
push
ret
xchg
and
dec
adc
mov
addr16
sbb
mov
xor
imul
sarb
cmp
xchg
cltd
mov
mov
cmp
pop
incb
xchg
sti
mov
aas
cmc
pop
xor
xchg
and
cmc
sub
out
inc
jle
lea
fdivs
sub
mov
fwait
mov
sbb
fldt
and
ds
jmp
outsb
loope
test
inc
fstl
add
jb
mov
fildl
xor
loop
or
mov
scas
jmp
ss
int
loop
push
xlat
out
int
popf
stc
xor
sub
sti
xchg
je
push
and
stos
xor
fistpl
into
dec
ds
inc
pop
xchg
scas
andl
movsb
movsl
push
mov
mov
fwait
pop
loop
loopne
test
push
add
inc
mov
cld
xchg
insb
or
mov
cmp
loopne
divb
jle
sbb
push
in
test
cld
inc
lahf
test
mov
filds
or
push
lahf
add
out
mov
and
adc
jno
jo
out
in
pusha
add
xchg
or
addb
sub
das
imull
scas
pop
outsb
mov
push
pop
loop
xchg
dec
pop
xor
mov
mov
in
ror
pushl
or
scas
pusha
inc
sbb
clc
mov
repnz
sub
cmp
push
iret
and
out
xor
jmp
push
jbe
out
mov
and
mov
test
addr16
lock
test
cmp
mov
mov
in
jecxz
xor
lods
mov
fdivs
mov
movb
inc
arpl
lahf
scas
sbb
or
mov
jae
inc
push
sahf
daa
lods
and
scas
jmp
or
popa
or
push
negb
aaa
jge
out
pop
lds
lock
mov
aam
pop
inc
fs
push
stos
push
and
pop
xchg
xchg
outsl
cmp
dec
aas
inc
fnsave
push
dec
lcall
inc
pop
mov
popf
aam
jmp
jecxz
inc
cli
add
inc
and
leave
push
lods
inc
push
outsl
ja
fucomp
test
scas
xor
mov
repnz
push
mov
mov
sbb
int
test
cmp
push
mov
andb
fbstp
js
dec
mov
mov
loopne
sbbb
mov
lret
or
popf
cmp
fstps
or
sti
addr16
out
cltd
mov
fptan
das
or
mov
scas
pop
out
movsl
cmp
lods
cmp
cmp
mov
fdivs
or
incb
mov
dec
arpl
adc
test
sub
push
add
jg
cmp
subl
jb
insl
outsb
fcompl
mov
dec
idivb
iret
push
clc
sbb
clc
arpl
mov
push
push
scas
fucomi
and
mov
or
cmp
jle
in
iret
aam
incl
xchg
imul
mov
push
out
in
mov
adc
insb
pop
sahf
fists
scas
xor
inc
sub
lods
repz
fiadds
inc
sub
call
cmp
mov
out
xchg
push
inc
clc
dec
sub
jnp
jecxz
xchg
clc
or
push
inc
sbb
push
mov
jp
mov
shll
rcrl
inc
adc
lock
test
jge
jecxz
popf
int
gs
push
bound
pop
les
xorl
pop
mov
fisubrl
dec
pop
push
rorb
mov
mov
pusha
insb
sub
sahf
or
dec
mov
dec
push
mov
aam
inc
lahf
xchg
pop
movsl
in
imul
movsb
call
jne
adc
mov
push
daa
aaa
in
sahf
xchg
scas
jp
test
fs
in
pop
or
aaa
lret
sub
movl
outsb
dec
cld
inc
sbb
sbb
test
mov
inc
sub
addr16
sbb
mov
pop
movsb
jp
add
movsl
iret
pop
lods
in
test
dec
fbstp
jl
cmp
mov
and
int
loop
icebp
insb
push
xor
sub
cmp
mov
cmp
cld
popl
push
mov
pushf
pop
popa
enter
es
inc
mov
js
lahf
movsb
mov
dec
dec
mov
jae
push
insb
ds
push
pop
sub
jp
push
cmpsb
push
mov
and
push
mov
aaa
fsubrl
mov
xchg
scas
sbb
jg
iret
fbld
push
jnp
xchg
imul
mov
dec
and
data16
imul
inc
arpl
ljmp
aam
xchg
adc
cwtl
aaa
xchg
cs
xchg
loopne
imul
xchg
jns
xor
iret
cmp
add
mov
inc
add
icebp
pop
xor
add
lods
jne
addr16
movsb
mov
pop
push
addb
leave
iret
xchg
mov
stos
nop
jnp
cmpsb
iret
sbbb
loopne
pop
sbb
insl
mov
stos
lcall
push
jb
push
dec
inc
push
call
popf
gs
popf
cs
in
lret
mov
dec
cmpsb
lret
lret
mov
andb
or
xchg
mov
icebp
xchg
cmpsb
inc
pop
add
fsubp
mov
sub
clc
mov
xchg
lahf
jbe
mov
popa
push
daa
jne
push
in
das
adc
push
xchg
and
es
add
xchg
xchg
out
jecxz
sub
into
and
loope,pt
insb
inc
cmp
xlat
jle
into
das
jle
sahf
lcall
daa
add
inc
cli
pop
fcmovnu
rcl
adc
popa
icebp
in
or
out
add
mov
sub
sti
inc
jle
mov
and
lds
inc
scas
cld
out
add
or
mov
and
push
adc
aas
xchg
arpl
js
jge
mov
idiv
shll
shlb
cld
pop
pushf
test
inc
fwait
aas
aad
ljmp
push
insl
mov
cmpsb
imul
aam
pop
data16
and
mov
insl
pop
loope
adc
pop
jl
inc
scas
scas
lea
mov
cmp
into
lods
mov
inc
and
xchg
shlb
fst
aaa
dec
mov
mov
pop
cmp
mov
dec
adc
pop
xchg
jge
dec
mov
cwtl
lock
dec
stos
push
fdivs
push
mov
insl
push
cld
testl
insl
in
add
xchg
cld
sub
ja
inc
ret
pop
arpl
into
imul
popf
or
lahf
mov
xchg
jb
aad
bound
addr16
mov
je
add
jl
add
and
mov
push
inc
jmp
aam
fwait
mov
xchg
test
stos
push
clc
inc
sub
pop
sarl
xchg
adc
arpl
push
xchg
popa
cmpps
ret
js
mov
insb
negb
inc
stos
add
std
mov
dec
jecxz
xor
inc
imul
sbb
jns
nop
add
rcll
cmpsl
mov
xlat
pop
popa
int
pop
lock
adc
or
movsl
movsl
mov
jmp
adc
into
imul
dec
scas
je
or
and
sbbl
iret
jmp
pop
lahf
mov
rorl
and
adc
jge
xsha1
cmpsb
dec
mov
dec
mov
lods
and
dec
cmp
mov
add
jecxz
push
adc
cmp
xor
inc
push
inc
clc
nop
jb
cli
push
and
mov
fdivrl
lods
cmp
int
ss
out
mov
rclb
enter
sbb
sbb
lods
dec
arpl
push
lods
pushf
fsubrs
add
rorl
pop
mov
cmp
pop
or
inc
in
pop
stos
loopne
xor
fiadds
arpl
clc
lds
and
out
cmp
cmp
pusha
outsb
inc
mov
daa
xchg
cmpb
loop
test
cli
out
mov
cltd
outsb
sub
fidivs
mov
and
outsb
ret
jae
push
test
xchg
xchg
mov
dec
adc
jmp
out
jle
pop
ljmp
push
mov
and
sahf
push
fmul
mov
int3
arpl
push
cli
mov
daa
mov
sub
je
popa
xchg
jmp
std
push
cmp
repnz
mov
and
cmp
int3
daa
outsl
sub
pop
jb
hlt
ljmp
fdivrl
pop
lods
lds
jnp
fisubrl
fsubr
leave
loopne
or
and
sub
test
rorb
ret
jl
or
mov
fs
push
and
push
aad
imul
mov
in
xlat
insb
ret
xlat
push
test
fs
push
adc
mov
popa
jecxz
inc
lods
dec
or
andb
adc
fxch
or
js
dec
sbb
push
insl
sub
cmp
pop
dec
out
cmp
jmp
cltd
and
test
decl
fwait
nop
arpl
mov
into
jae
jnp
mov
popa
push
imul
ss
clc
jnp
inc
rcrl
xor
xchg
xor
dec
repnz
mov
shrl
jbe
and
inc
fisttpl
pop
lock
cmp
adc
js
enter
popf
icebp
cmp
sub
inc
cwtl
hlt
call
inc
icebp
sar
mov
test
sbb
outsl
jl
pusha
mov
xor
sub
ja
xor
or
xor
js
dec
mov
xor
sub
shlb
or
push
and
loop
inc
push
repnz
lock
inc
xchg
scas
dec
pop
lahf
xor
xchg
icebp
adc
cmpsl
mov
mov
xchg
fldl2t
hlt
push
push
mov
sahf
lods
jmp
xorb
push
test
in
jb
cmp
dec
cmc
mov
inc
and
neg
aas
or
mov
mov
push
js
insl
inc
push
fdivl
xchg
or
mov
lcall
xlat
fnstenv
repnz
mov
mov
fwait
aam
int
aaa
cli
xchg
mov
mov
adc
dec
dec
add
pushf
test
bound
sbb
jl
sub
push
mov
dec
fisubs
movsb
rcrl
into
adc
repz
xor
jo,pt
fcoms
es
xchg
cmp
arpl
mov
lret
inc
xlat
sub
adc
mov
jne
push
jnp
mov
js
sarb
stos
pop
cs
or
repnz
mov
adcl
mov
mov
int
sub
mov
xchg
inc
pop
cmpsb
in
add
mov
sub
add
int3
lods
outsb
int3
lahf
addr16
pushf
jle
sarl
xor
ljmp
mov
jne
or
and
lret
jecxz
and
mov
ret
push
cmpsl
mov
mov
rorb
xchg
std
fs
decb
aas
mov
dec
mov
xchg
jne
jge
out
dec
fcmovu
dec
test
dec
xor
je
xor
cs
jae
popf
inc
pop
fwait
and
js
jg
mov
add
stc
push
and
rclb
mov
stc
dec
sbb
and
aaa
add
mov
jle
mov
ljmp
jno
cld
ss
mov
shrl
add
jnp
ret
lahf
pop
cwtl
sub
cmp
xor
bound
jmp
test
sbb
jo
push
add
xor
enter
test
mov
fldenv
and
add
outsb
add
fists
mov
xchg
call
xor
clc
iret
bound
mov
or
push
xchg
leave
test
sub
jns
inc
imul
ljmp
cmpb
add
into
shlb
imul
loope
cmp
inc
idivl
inc
inc
inc
mull
inc
cltd
push
push
fldcw
in
test
sarl
movsl
jl
push
call
sahf
aaa
sub
pop
lahf
ds
push
jmp
sbb
mov
pusha
or
cmp
imul
rcl
pop
push
mov
adc
adc
xor
cmp
incl
outsb
adc
fs
push
pop
sahf
mov
pop
lret
and
xor
lret
sbb
cmpsl
or
pop
mov
jge
push
in
or
sahf
gs
push
lret
jb
jae
daa
lret
pop
std
pop
ss
andb
scas
leave
in
mov
fnsave
sub
add
insb
pop
repz
addb
sbb
mov
fs
push
mov
push
out
xchg
mov
mov
push
sub
cmp
aad
jns
scas
js
aas
enter
jmp
adc
in
mov
mov
dec
cwtl
insl
pushf
into
fisubl
mov
sub
push
in
push
sub
inc
dec
std
dec
xchg
addr16
mov
pop
cmc
mov
cmp
outsl
pop
fisttps
or
repnz
push
adc
cmpl
mov
test
inc
push
aam
outsl
cmp
jmp
shlb
pop
pushf
dec
cmp
and
loop
in
fwait
mov
pop
hlt
push
int3
std
push
inc
test
xchg
js
pop
lahf
enter
ss
push
jb
rcll
jne
jecxz
inc
test
jg
cmc
lret
testl
add
cmp
pop
test
push
fildll
rcrb
dec
pushf
out
xor
push
lods
popl
fwait
cli
cmp
jg
pop
test
jmp
stc
jb
adc
lahf
outsl
test
cli
je
jge
cmpsb
int
cltd
xchg
xchg
sub
push
jle
ret
rcrl
ficomps
mov
das
xlat
je
dec
cmpsb
fnstsw
loopne
fnstsw
mov
out
pop
out
dec
xchg
add
push
rolb
cmp
daa
add
mov
mov
sarl
repz
je
inc
aaa
daa
inc
cli
fnstcw
in
nop
test
cmpsl
in
ja
mov
outsl
push
movsl
jl
out
jns
inc
jp
pop
inc
movsl
pop
fmulp
dec
mov
adc
gs
out
jns
bound
xchg
inc
nop
push
out
arpl
pop
mov
pop
pop
cltd
mov
mov
pop
aas
rcl
jns
xchg
pop
push
insb
int3
cmp
push
jl
cmc
xchg
jno
in
mov
pop
pop
sub
mov
int
cmp
sbb
jecxz
insl
jge
mov
leave
mov
cwtl
xor
xor
dec
iret
ret
jecxz
and
sti
sub
fwait
add
mov
push
inc
cmpsb
add
jecxz
push
outsl
jg
test
jl
sbb
lods
sub
mov
adc
and
sahf
clc
sub
ss
les
mov
testl
lods
cmp
and
arpl
cmc
push
loope
add
pop
add
mov
adc
sti
in
dec
leave
pop
pop
adc
jge
cmp
nop
xchg
mov
mov
popa
or
insb
filds
sub
into
sub
mov
xchg
cmpsl
rclb
sub
outsb
adc
faddl
inc
lods
sbb
dec
shr
mov
jge
sarb
dec
loopne
inc
int
inc
mov
sti
stos
or
mov
icebp
adc
shl
stos
cmpsb
in
or
pop
sub
das
mov
pop
sahf
clc
jg
decb
mov
mov
aaa
jbe
dec
mov
loop
xchg
je
mov
lods
nop
fiadds
cmp
sub
pop
adc
ret
sbb
ror
mov
aad
push
inc
jmp
lods
pop
push
sub
js
jp
inc
sub
or
stos
scas
mov
xchg
ffree
pop
pop
mov
out
sarl
nop
xchg
into
fidivl
cmp
jno
jns
push
popf
dec
push
and
rorb
or
mov
or
add
mov
and
ficomps
je
push
jne
cmpsb
sub
sub
shll
lods
adc
enter
and
xchg
out
cmp
jl
icebp
cmp
lahf
scas
push
pop
scas
jle
pop
mov
pop
or
jne
adc
sbb
cld
scas
mov
mov
push
int3
jnp
adc
iret
mov
add
jp
popf
jbe
mov
xor
mov
inc
enter
xor
imul
mov
pop
test
inc
insb
add
arpl
xchg
jp
addr16
xor
fwait
jp
test
aam
aas
mov
cmpsl
fcomps
shll
aam
rol
or
mov
jp
adc
adc
repnz
mov
mov
mov
dec
adc
inc
insl
lcall
cmp
out
int3
fs
call
cwtl
cmpsb
cmp
shll
dec
loop
push
sbb
sti
popa
push
mov
adc
cmp
jl
push
pop
mull
sub
ja
inc
mov
addr16
xor
psrad
aam
repnz
insb
dec
dec
dec
push
push
in
jle
and
lcall
test
scas
jno
jl
fidivrl
jle
cld
jnp
jae
std
jl
push
fwait
mov
aam
fwait
add
sub
movsb
cmp
out
sub
dec
ret
add
inc
xor
mov
sbb
pusha
or
jno
sbb
jecxz
popa
and
call
mov
push
jmp
xorl
loop
push
fldenv
dec
std
pop
pop
test
sbb
push
je
mov
pushf
dec
jp
sti
xchg
jge
push
cwtl
add
sub
out
or
push
std
in
ss
outsb
pop
inc
pop
mov
push
jno
pop
pavgb
aad
ffree
stos
push
mov
mov
cmp
inc
push
mov
dec
xor
sub
pop
and
xor
les
add
shl
roll
sub
inc
fsub
mov
push
mov
in
mov
adc
mov
fistpll
int3
lret
cmp
mov
faddp
mov
imul
cmpsl
mov
cltd
pop
pop
enter
xchg
negb
push
or
mov
fwait
cmp
cltd
popf
outsl
inc
mov
sub
xchg
movsl
dec
pop
push
mov
mov
js
leave
jnp
loope
je
sbb
test
out
test
inc
ds
fsubrs
in
cs
test
filds
and
and
fldenv
adc
shl
popa
bound
or
cvtdq2ps
arpl
pop
test
or
das
push
push
xchg
out
jge
rorb
adc
adc
rol
orb
jne
sub
loope
leave
and
xor
hlt
xor
xor
push
sarb
xchg
jo
test
lret
sahf
or
lret
jg
movsl
jno
into
lods
push
rcrl
addr16
or
push
jmp
fs
push
loop
in
pop
lea
mov
sub
testl
bound
or
mov
mov
or
or
mov
aaa
movsb
jns
mov
test
rcrb
shl
mov
jbe
pushf
jbe
add
mov
int3
mov
dec
or
cmp
les
pop
fwait
xor
mov
jb
inc
insb
mov
or
call
mov
xchg
es
adc
push
xor
push
sahf
or
lcall
mov
test
inc
lcall
and
push
and
sbb
repz
lods
cmp
jecxz
fcoms
mov
xchg
or
lods
sbb
ss
in
loope
pop
inc
xchg
xor
mov
pop
sbb
cmp
add
pop
xor
pop
jmp
je
push
in
jb
push
clc
fbld
mov
add
je
andl
pop
jg
mov
js
pop
jle
adc
xchg
shlb
popf
cs
outsb
pusha
mov
jb
cltd
not
mov
lds
mov
mov
sbb
test
and
repnz
sahf
lods
sarl
mov
dec
dec
mov
inc
ljmp
bound
pusha
pop
sbb
adc
adcb
push
clc
mov
fadd
shl
lret
push
xor
pop
lock
in
pop
imul
mov
fbstp
pushf
in
cld
idiv
mov
std
xchg
cmpsb
sti
arpl
add
push
jo
scas
ja
xchg
ret
stos
push
push
sahf
lea
sbb
dec
dec
lret
sub
jmp
insl
pop
fwait
stos
sbb
inc
mov
mov
xor
mov
aaa
into
jns
sbb
push
pop
lret
push
mov
cmpb
loopne
or
mov
and
cmpsl
mov
jnp
out
cmp
fisttps
push
and
std
pop
daa
imul
jl
xchg
in
add
pop
add
pop
fiadds
jg
adc
xor
xorl
sbb
pop
mov
fwait
aas
mov
mov
or
aas
cmpsb
xor
shl
sbb
mov
lcall
mov
dec
inc
stc
test
push
lods
fnstsw
aas
or
subl
mov
push
mov
inc
xorb
cmp
negb
aam
out
in
pop
cmp
xor
pop
cmp
push
cmp
cmp
pop
mov
mov
ret
jp
hlt
mov
adc
sub
sbb
mov
ficomps
out
sbb
mov
pop
jg
cs
sub
and
push
mov
mov
stos
pop
nop
mov
pushf
or
jno
and
jns
fadds
push
push
add
out
aad
and
cmp
jmp
cmp
adc
ret
fidivs
xchg
push
mov
cltd
test
xchg
xchg
push
dec
and
push
hlt
mov
push
mov
adc
mov
data16
popa
jg
adc
inc
adc
cwtl
je
stc
push
in
cmp
xor
call
stc
lods
movsb
shlb
cltd
dec
dec
push
adc
mov
leave
mov
loop
pop
cmp
push
and
lods
cwtl
popa
and
es
xorl
sbb
mov
repnz
add
adc
cmp
subl
dec
imul
cmc
test
cwtl
scas
ljmp
lret
int3
mov
pusha
jge
dec
push
clc
adc
push
dec
inc
in
add
pop
sbb
test
xchg
cwtl
mov
das
jmp
pop
lret
jo
mov
mov
jne,pn
xor
sub
pushf
xor
mov
or
or
iret
lods
mov
stos
es
and
sub
mov
fistpl
lods
loop
orl
cmpsl
jp
cld
test
and
dec
add
xor
jno
add
test
dec
fmull
adc
sub
mov
int
adc
xchg
inc
and
mov
test
ljmp
add
rcrb
or
cs
addr16
enter
loopne
and
arpl
loope
shll
outsl
inc
fisubl
sbb
mov
call
lahf
push
aas
and
sbbb
jecxz
out
and
cmp
mov
xchg
push
jbe
jb
fcom
pop
mov
scas
test
mov
xor
insl
ja
loope
push
mov
mov
sbb
sub
push
inc
sarb
fs
inc
mov
push
add
outsb
cmc
gs
ja
mov
aad
mov
mov
push
lret
jo
add
mov
mov
out
in
xor
pop
pop
jo
loop
in
adc
and
arpl
jmp
ffreep
int3
test
mov
cmp
inc
inc
fnstcw
icebp
mov
and
incl
push
sarl
cltd
sbb
pop
sbb
mov
jno
or
movsb
adc
fwait
out
or
jno
lahf
jo
mov
pop
and
add
shl
js
push
mov
ret
sub
dec
xor
test
subl
enter
add
daa
jle
nop
sub
pop
stos
loopne
imul
sbb
xor
aas
xchg
mov
pop
add
aam
sbb
ret
jecxz
mov
fildl
sbb
es
mov
inc
mov
jmp
hlt
cmp
insl
lods
mov
movsl
sarb
sbbb
es
push
cltd
aaa
xchg
mov
adc
xor
js
int3
and
inc
mov
push
aaa
pop
jle
inc
in
pop
mov
dec
nop
adc
pop
in
sbb
stos
inc
mov
jle
rolb
push
ret
filds
mov
test
xor
jmp
scas
add
pop
xchg
and
int
xor
push
out
sub
jbe
pop
into
jmp
pop
push
or
jae
shrb
inc
fdivrp
add
test
lret
sti
fdivr
fwait
sbb
fwait
sub
jmp
icebp
shlb
clc
mov
std
cmpsl
dec
or
sub
movsb
or
inc
fstpt
inc
fstps
mov
mov
rdtsc
mov
fnstsw
pusha
out
andb
lahf
add
outsb
sub
pop
pop
xor
push
stos
sub
sarl
inc
add
imul
pop
loope
add
pusha
pushl
aam
cmp
movsb
insb
add
jne
jne
fbld
or
stos
adc
pop
mov
xor
enter
add
test
cltd
xchg
test
mov
mov
and
mov
scas
mov
stos
shll
out
jg
rolb
push
xchg
aas
ret
test
pushf
ja
into
pop
js
cmp
sahf
push
fmuls
repz
jb
add
xor
lret
andb
jge
rclb
lcall
add
mov
aad
imul
out
adc
sbb
xor
fnstenv
pushf
popa
clc
int
jae
addr16
push
das
in
cmp
jge
cmpl
shll
add
shll
xchg
loopne
ret
jp
jmp
mov
push
lret
jbe
addr16
xchg
ss
cltd
inc
jle
pop
push
frstor
push
repz
push
mov
or
sarb
dec
pop
aas
push
push
inc
or
or
cmp
pop
cmp
in
lea
or
ds
daa
lds
scas
pop
in
and
clc
fistps
adc
and
aaa
test
fcoms
test
je
imul
xchg
mov
rcr
pop
mov
jge
test
dec
fs
in
add
jg
sub
sub
mov
out
cmp
lds
cwtl
sbb
push
xor
pusha
sbb
lds
mov
inc
faddl
dec
cmpsb
out
imul
addr16
mov
inc
loope
jp
adc
push
add
imul
rorl
insb
cmp
xlat
sbb
mov
inc
repnz
stc
subb
adc
out
lret
adc
adc
pop
js
test
outsb
fst
jg
mov
mov
mov
cmp
addr16
popa
mov
movsb
and
int3
jne
dec
xor
repnz
test
add
xchg
mov
dec
gs
mov
mov
mov
sbb
and
aad
push
inc
mov
imul
adc
lods
jo
jmp
fsts
xchg
fsub
mov
je
jne
movsb
mov
test
bound
mov
fidivs
pop
xor
rorb
adc
sbbl
xor
cmpl
adc
mov
cwtl
das
in
pop
insl
cmp
js
jmp
test
jo
adc
mov
es
gs
insl
data16
loopne
lcall
loope
jae
add
pop
mov
pop
mov
adc
lods
scas
xchg
fistl
popa
shlb
inc
fisubl
pushf
push
xor
push
or
cltd
pop
push
mov
pop
mov
jge
and
mov
push
xchg
inc
xor
fisubrs
sub
mov
std
ja
sbb
add
hlt
cmp
fwait
add
hlt
icebp
xchg
add
adc
out
xchg
out
lods
mov
pop
lea
jmp
pop
xor
fistl
jmp
add
sub
fldt
mov
sbb
mov
out
cmp
mov
leave
or
sbb
in
rolb
dec
adc
sbb
push
mov
dec
sbb
sahf
add
mov
lret
sub
mov
addr16
add
ja
mov
push
scas
pop
cltd
mov
fisubs
or
jns
sub
es
in
jo
sarl
xchg
subb
adc
sbb
push
fucomip
or
aas
arpl
or
pop
dec
mov
push
rdmsr
push
cmp
sahf
or
ret
loopne
ds
jecxz
mov
ljmp
push
ret
inc
fyl2x
mov
popa
and
push
sub
mov
ss
fimuls
jmp
mov
out
dec
aas
cmp
dec
pop
int
jmp
mov
xchg
inc
stos
mov
cmp
lods
pop
fldl
jnp
push
or
xchg
out
ja
or
icebp
jb
lret
pop
sub
es
popf
or
mov
pop
cmp
inc
mov
pop
xchg
xor
lds
or
mov
es
ja
hlt
mov
push
xchg
sub
xor
scas
adc
or
xor
bound
inc
call
sbb
cmpsl
push
jb
divb
pop
xor
mov
pop
and
xlat
lcall
jbe
ds
stos
xor
jb
imul
jl
enter
inc
mov
cs
arpl
push
enter
push
pop
jo
pop
int3
insl
dec
lock
cwtl
dec
enter
or
subl
xchg
add
testl
lcall
fcmove
lahf
xor
std
out
xchg
jns
adc
push
jo
daa
shrl
add
testb
jae
pop
mov
dec
mov
mov
and
loopne
scas
dec
aam
sahf
sbb
fisttpl
pop
scas
add
popa
xor
add
cmpsl
mov
mov
jae
push
push
adc
loope
fld
inc
fsubs
cmpsl
imul
fiadds
add
repnz
js
lcall
sub
pop
cmp
mov
jge
scas
loopne
js
pop
fsubl
sti
in
and
in
das
les
jl
and
in
cwtl
sbb
xchg
cmp
out
call
hlt
mov
lods
lret
push
test
lods
int3
xchg
les
loope
jmp
mov
jbe
inc
cmp
mov
hlt
imul
cmp
aam
aam
pop
dec
or
jns
mov
sub
sub
dec
or
mov
into
andl
jge
mov
or
daa
push
sbb
scas
and
ficoml
movsb
xchg
call
ja
fstpt
push
loopne,pn
imul
movsl
xchg
pop
rorb
lods
sub
scas
xorl
sbb
pop
xchg
aaa
lret
gs
adc
or
xchg
stos
in
sub
in
lds
nop
es
movsb
lret
rclb
lahf
leave
ret
and
mov
lock
aam
testl
fiaddl
xchg
push
mov
mov
pop
and
inc
adc
lcall
xchg
cwtl
popf
insb
and
cmp
adc
pop
mov
call
nop
cmp
mov
gs
inc
aam
jg
ss
sbb
xor
xchg
in
out
mov
jl
ds
xchg
dec
push
dec
mov
mov
shll
or
mov
loopne
mov
or
sub
cmp
test
ret
aas
imul
je
mov
push
outsb
inc
int
cwtl
lds
mov
pop
mov
loopne
stc
imul
test
outsb
daa
pop
mov
nop
xor
mov
cmpsb
es
pusha
cmp
stos
cmc
sub
je
add
mov
fiadds
test
or
mov
mov
aaa
in
bnd
stos
fmull
jmp
test
aad
jle
lock
add
adcl
addb
dec
repnz
aaa
stos
out
sub
movl
mov
daa
cmovnp
mov
dec
stos
fsubr
mov
mov
jnp
aaa
push
cltd
sub
xchg
push
jmp
mov
push
adcb
rorb
xchg
sbb
adc
adc
add
call
dec
dec
add
repz
add
add
pop
fldt
push
das
xor
and
cltd
std
loope
push
push
inc
mov
push
inc
int3
jg
testb
jp
inc
pop
mov
cmc
ret
testb
or
ds
or
movsb
sti
sbb
push
mull
dec
cmp
or
mov
dec
inc
loopne
out
fiaddl
fstl
aas
cmpsl
sbb
hlt
stos
adc
les
ja
push
scas
repz
insl
inc
adcb
xor
dec
jae
xlat
insb
dec
rol
and
cmpb
jnp
dec
loope
inc
xor
xchg
push
jne
arpl
mov
xchg
ljmp
sub
dec
push
mov
rclb
mov
or
into
in
adc
jp
mov
pop
loope
jbe
int
mov
insl
cmpsl
sbb
push
test
cmp
ja
jno
adc
rol
ja
push
add
fcmovbe
cmc
push
incl
adc
ffreep
cwtl
xchg
jb
mov
dec
leave
stos
xchg
and
shlb
rorb
xchg
add
jge
dec
call
mov
sbb
adc
idiv
insb
cmp
arpl
orb
push
sar
les
pusha
stos
rclb
and
pop
sar
jo
mov
inc
shr
add
ljmp
fstpt
xor
push
xor
popa
dec
inc
pop
jmp
xlat
imul
aaa
movsb
xchg
mov
pop
ja
lea
xchg
pop
popf
push
xchg
sub
mov
enter
arpl
push
dec
ljmp
inc
push
in
push
notb
lods
stc
je
pop
dec
fwait
mov
jecxz
cwtl
xchg
jmp
dec
cmp
or
ljmp
loop
sbb
gs
in
adc
and
sub
ds
mov
pop
jmp
mov
inc
jns
sbb
xchg
js
pop
adc
push
or
push
cmp
popa
sbb
scas
lea
sbb
stos
mov
xchg
jns
inc
adc
adc
mov
mov
dec
pushf
scas
push
shll
and
lods
push
inc
xchg
pushf
mov
cmp
pop
inc
push
lods
ss
xlat
mov
les
jb
add
iret
dec
out
cmpsl
cld
pop
test
in
jno
das
cmp
mov
fiaddl
cmpsb
sub
push
add
fwait
push
sahf
push
fdivrl
pop
jno
gs
mov
adc
adc
scas
cli
mov
sub
nop
ffreep
add
insb
inc
jae
je
arpl
daa
dec
lahf
hlt
inc
jecxz
xlat
out
ja
xlat
ret
or
mov
and
test
adc
or
xchg
popa
or
ss
or
push
mov
cmp
lahf
adc
push
and
popf
pop
ss
mov
hlt
mov
mov
fistl
jne
jl
test
jbe
pop
negl
mov
xor
jae
loopne
call
xor
jmp
sub
jae
jg
in
mov
lahf
aaa
jno
lea
jmp
adc
je
sbb
fbld
xor
mov
and
add
push
loope
insl
xor
in
sbb
jl
jno
scas
in
inc
mov
mov
jle
cmp
roll
mov
mov
lcall
loop
je
mov
or
jge
mov
mov
jnp
push
decl
mov
or
leave
mov
aaa
sbb
fwait
inc
arpl
xor
out
add
xor
lahf
xor
or
jp
in
add
pushf
negl
inc
mov
mov
xlat
cwtl
xor
std
es
adc
sub
movsb
pop
sub
jmp
add
jl
jnp
fisubs
xchg
mov
arpl
fwait
mov
mov
nop
jbe
push
mov
aad
out
into
pop
or
les
ret
lahf
pop
repz
mov
enter
cs
sbb
lret
dec
lods
cs
mov
push
ss
cltd
rclb
dec
dec
test
dec
cmc
cmp
push
jne
or
movsl
sub
xchg
dec
xor
pandn
add
cmc
aaa
sub
inc
cmp
inc
dec
adc
mov
jae
mov
dec
fldl
dec
sub
rorb
jmp
ss
cli
lock
push
xor
push
data16
pop
ret
ret
cmp
outsl
mov
les
out
stc
adcb
sub
sahf
cs
xchg
jge
mov
and
std
movhps
and
insl
mov
push
shrl
xor
inc
inc
jmp
js
lret
sbb
pop
sub
je
push
push
pop
call
nop
mov
mov
cmpsl
adc
adc
negl
movsl
inc
push
pop
je
lahf
stos
iret
xchg
fisttps
mov
ror
jmp
xor
insl
int3
addb
cmp
dec
push
fxam
jg
es
pop
mov
sbb
lret
inc
sbb
loopne
pop
icebp
das
sub
inc
imulb
lods
arpl
sbb
insb
cli
arpl
push
cltd
jg
jns
loop
jb
mov
sub
paddusw
jae
inc
les
out
xchg
fsubs
sahf
add
xor
mov
xchg
scas
push
pusha
jp
loopne
cmp
inc
pop
sti
pop
in
push
adc
dec
sub
mov
inc
pop
scas
std
cmp
inc
std
jno
fcomip
dec
int3
cmp
movsl
mov
xchg
ss
and
ja
push
sub
cltd
adcb
pop
popf
repnz
fistps
lret
int3
arpl
pop
ljmp
xchg
or
rorb
xor
lret
pop
mov
jne
xor
jmp
test
and
outsb
mull
es
cld
jg
loop,pn
insb
add
mov
int3
sarl
jne
jns
sub
mov
push
cs
push
popf
lret
jb
jae
jo
cmc
sub
cli
mov
insb
add
fisttpll
and
arpl
xor
mov
mov
or
ds
xchg
xchg
push
out
inc
push
out
stc
push
xor
test
fisttpl
shrb
jne
xchg
inc
dec
data16
mov
mov
les
mov
or
adc
cmp
mov
rcr
lret
lock
fsubr
loopne
outsl
int
in
pop
test
lods
cmp
xor
adc
xor
mov
jo
imul
rorl
ret
push
imul
pop
pop
sarl
in
sub
mov
xorl
fwait
movaps
sub
imul
popa
or
lahf
cmpsb
stos
aas
in
fildl
adc
cs
xorl
cmp
outsl
mov
lds
out
jp
or
mov
jb
mov
sub
addr16
xchg
mov
sub
ror
inc
test
outsl
loope
mov
add
scas
pop
mov
mov
out
mov
xchg
loope
push
add
orl
adc
inc
mov
xor
push
add
shr
cmp
xor
mov
jp
xchg
rcrl
xlat
sbb
iret
mulb
rcl
in
add
insb
lds
inc
fcmovbe
lret
pusha
popa
push
sbb
hlt
aam
sbb
andb
push
sbb
jmp
mov
or
push
orl
push
lods
dec
repnz
fs
mov
dec
mov
aad
mov
sti
lods
cmp
dec
cmp
jo
mov
xchg
sbb
sub
shll
rol
out
xorl
push
push
js
xchg
cld
fisubrs
sti
push
cwtl
xchg
sub
clc
pushf
daa
mov
mov
pop
repnz
cmp
mov
sub
rcl
push
insl
test
jmp
cmp
inc
jne
cmp
adc
and
sahf
xchg
inc
pop
out
js
mov
into
arpl
lea
cmp
push
std
jecxz
cld
fisttpll
stos
sarl
sub
jbe
and
out
inc
movsb
cmp
stos
inc
mov
ret
inc
ja
mov
mov
xchg
mov
fisubs
sub
pusha
mov
jbe
ss
or
cmp
pop
mov
push
imul
xchg
or
inc
sub
sub
xor
mov
pop
lods
sub
push
pcmpgtd
pop
nop
sbb
ret
cmc
fdivr
mov
repz
in
mov
xchg
mov
fisubrl
pop
loopne
add
ja
cmp
fistl
adcb
push
cmc
jg
push
scas
mov
bound
lock
dec
cli
or
fcom
insl
push
mov
pop
xchg
mov
outsl
addr16
cmp
repz
add
mov
adc
xlat
imul
pop
in
push
test
std
movsb
cmp
jg
loopne
cmp
addr16
lahf
jle
jo
scas
mov
mov
test
test
mov
xor
pop
outsl
xchg
sub
xor
add
out
hlt
in
loop
mov
int3
pop
aam
mov
mov
xchg
jl
push
add
cmp
or
or
sbb
daa
imul
adc
dec
pop
push
pop
in
aas
add
xor
xchg
inc
mov
cwtl
fsts
push
push
add
dec
mov
push
xlat
cmc
mov
lods
cmp
mov
mov
movsb
ja
adc
ficoml
popa
les
adc
and
out
sbb
lock
jo
das
add
dec
hlt
adcb
dec
imul
pop
out
inc
aaa
divl
lock
out
jle
mov
push
adcb
cmp
mov
cmp
pop
mov
xlat
sub
test
insb
inc
cltd
fwait
popa
cmp
popf
negl
mov
dec
dec
in
aaa
xlat
or
repz
push
mov
jmp
pop
add
inc
sahf
subb
adc
pop
pop
dec
xchg
mov
lcall
sbb
pop
int3
out
xchg
and
push
inc
cmpsb
cmp
adc
das
mov
or
jae
jbe
mov
xchg
jmp
sbb
js
in
sub
das
pop
pop
sbb
and
outsb
repz
cmpsb
imul
outsl
andl
insb
jl
pop
test
arpl
leave
enter
ss
cld
loopne
jne
push
sti
inc
and
lret
fidivl
pop
mov
xchg
dec
icebp
pusha
push
lods
addr16
cmp
fnsave
inc
out
dec
dec
inc
pop
les
cmp
sbb
fbstp
xchg
jo
repnz
xor
movsb
adcl
adc
sub
pop
int
cwtl
cmp
dec
in
loope
push
push
ljmp
repz
pop
jo
adc
addl
sbb
mov
lea
in
xor
andb
fisubrl
or
and
rcll
insb
jns
data16
movsl
divb
jae
call
lret
lods
mov
roll
inc
push
jl
mov
lods
xor
ljmp
int3
xlat
lret
ljmp
pop
vmread
add
adc
and
idivb
push
push
repz
mov
push
mov
adc
lods
pop
into
push
cmpsl
repnz
sub
cltd
pop
and
mov
sub
cmp
push
out
arpl
ret
mov
add
mov
es
mov
xor
das
cli
test
call
xor
xchg
fs
push
cmc
mov
inc
andl
repz
or
fiadds
adc
jl
cmpsl
xchg
inc
push
test
cmp
pushf
das
inc
push
aad
push
mov
mov
pop
test
filds
cmp
sbb
jno
jb
movsl
daa
mov
sbb
or
sub
or
add
pop
jle
inc
rep
in
and
out
cmpsl
popa
jno
faddl
loopne
loop
call
js
leave
xor
pop
jmp
rorb
cmp
repnz
call
bound
xchg
bound
jle
mov
inc
out
in
sub
mov
pop
lea
push
sbbb
lods
out
andb
add
cltd
push
loope
xchg
cmp
inc
fucomip
pop
xor
or
xchg
imul
adc
out
sahf
cmp
mulb
dec
add
stos
js
push
and
cltd
das
adc
add
arpl
bound
pop
or
add
fwait
clc
das
dec
cmp
bnd
sti
hlt
lret
pop
shl
dec
clc
push
pop
out
in
movsb
adc
sub
mov
std
add
ljmp
out
xchg
mov
ret
pop
mov
push
xchg
mov
hlt
xor
ss
imul
lock
jl
pushf
xor
cltd
push
ljmp
jp
mov
data16
pop
dec
mov
stc
insl
dec
jmp
fiadds
or
fdivrl
ret
hlt
stc
push
add
repz
push
clc
sti
hlt
jp
es
jnp
mov
inc
popa
lods
jp
aam
xchg
lods
jbe
or
xor
jo
lea
and
aam
int3
mov
ja
pop
and
xchg
cmc
sbb
lret
xchg
jg
cmp
rcll
push
ret
repnz
cli
loope
mov
stos
subl
mov
jbe
dec
cmpl
or
stc
dec
cli
pushf
loop
mov
cmc
jnp
sbb
aaa
pop
sub
daa
sahf
mov
push
jne
cmpsb
out
sbbl
ja
sbb
lret
push
push
adc
dec
inc
gs
lock
bound
adc
xchg
mov
les
xor
ds
jae
add
mov
aam
stos
shll
mov
pop
mov
dec
mov
and
mov
push
jmp
sbb
cmp
cmc
scas
mov
and
lods
adc
les
cmp
pop
cltd
mov
cmpsb
xchg
scas
xchg
pop
push
in
loop
nop
add
inc
xor
add
int
rorb
cltd
rclb
add
popl
mov
arpl
ret
loope
xor
out
dec
and
cmp
cmp
xor
dec
stos
or
dec
dec
lock
leave
nop
aad
in
mov
mov
insb
sub
clc
das
insl
inc
add
push
push
stc
js
push
lret
lcall
push
enter
lcall
mov
xchg
mov
jne
cmc
pop
inc
bound
jno
xor
imul
sub
pop
repnz
pop
in
jns
pop
mov
test
cs
adcl
pop
mov
ficompl
jg
mov
inc
jbe
fstpt
add
xor
out
jl
mov
pusha
stc
or
imul
and
cli
xchg
jbe
jno
jb
aad
loop
ljmp
pop
lret
adc
mov
adc
inc
popa
insb
pop
sbb
adc
cmpsl
add
sub
push
test
cltd
fsub
jns
jnp
jne
jnp
ficoms
dec
pop
cmpsl
fnsetpm(287
dec
cmc
movsb
mov
push
jae
aad
xchg
fucomi
out
cli
shrl
xchg
jne
push
fisubl
test
negb
cmp
js
xchg
push
jp
jge
jbe
pop
xchg
fnstsw
jg
cld
mov
ret
in
jns
sub
mov
xorl
scas
or
pop
jle
sub
rcrl
add
mov
out
add
insl
outsb
in
jecxz
lret
mov
jo
lea
cmp
lea
xchg
lea
ficompl
sbb
rcr
pop
fcoms
push
icebp
add
sub
push
popf
mov
cmp
neg
and
in
js
mov
stos
lock
mov
test
repz
mov
adc
imul
dec
or
adc
xchg
sbb
dec
and
mov
adcl
pop
rorl
or
mov
and
cld
mov
lret
cmc
add
icebp
inc
and
hlt
xchg
xchg
into
aad
shr
jmp
aam
or
das
ret
dec
pop
add
dec
in
negb
jnp
subb
lods
cwtl
inc
xchg
sti
lea
mov
jb
push
fstpt
xchg
ffree
dec
mov
lock
and
lods
shl
in
pop
pop
ss
ljmp
test
pop
lock
cld
mov
nop
and
or
std
out
ja
xchg
test
push
ja
mov
inc
aad
das
pop
xor
xchg
push
out
mov
arpl
decb
dec
imul
ss
sub
push
not
add
jle
and
xchg
pop
ljmp
or
dec
out
sub
imul
push
adc
dec
sahf
enter
add
mov
mov
sbb
lods
lahf
push
addr16
dec
clc
xchg
or
xchg
xchg
fcmovne
pop
ret
sbb
insl
fdivs
out
xchg
cmp
pop
xchg
cmpsl
or
das
aad
lcall
sbb
hlt
ftst
inc
out
icebp
mov
jmp
push
lds
or
cs
call
xor
and
pop
jmp
xchg
push
pop
enter
mov
insl
enter
mov
insl
push
mov
adc
ret
push
fisubs
add
test
or
outsl
mov
out
shl
or
mov
in
fiaddl
push
shlb
cmpsl
push
dec
mov
cmp
lahf
dec
sbb
ljmp
pop
cli
cmpsb
dec
adc
adc
xor
xor
fdivrs
push
add
js
dec
dec
pop
add
aaa
push
mov
test
mov
cmp
fs
daa
cmp
in
push
leave
xor
xorb
mov
inc
cmp
rolb
or
adc
icebp
adc
std
dec
xchg
and
add
sbb
push
shll
pop
push
pop
dec
or
pushf
pop
adc
daa
add
lods
mov
repz
popa
inc
pop
mov
rorl
mov
jecxz
and
and
xlat
cmpsl
jo,pt
fildll
and
popa
cmp
pop
aam
cltd
rcl
push
sub
and
sub
rep
xor
pusha
cltd
push
out
sub
notb
mov
les
sub
pop
and
adcb
push
mov
sbb
gs
lcall
hlt
pop
out
pop
mov
xchg
sbb
push
aas
push
cmp
sbb
jp,pt
mov
xor
jne
nop
mov
fs
shlb
and
arpl
inc
jmp
pop
cs
or
call
mov
lea
std
stc
movsb
mov
test
dec
mov
pop
or
gs
dec
lret
loopne
xchg
cmp
bound
cwtl
cmp
pop
int
jne
adc
nop
inc
ficoms
dec
jo
dec
xchg
pop
push
push
or
out
popf
cmp
dec
mov
adc
add
out
pop
fnsave
sub
addr16
loop
add
addb
loop
sbbb
pop
fisubs
addb
cmp
mov
and
arpl
push
adc
pop
rorb
and
iret
aam
std
pop
lret
and
xor
cmp
add
push
out
sub
or
xor
out
ffreep
and
rol
jnp
jp
int3
and
xor
xor
popa
pop
pushf
icebp
or
push
int3
cmp
divb
pushf
mov
test
add
lods
clc
and
ret
sbb
je
xchg
aaa
nop
movsl
in
repz
sub
lock
mov
mov
das
sbbb
xor
icebp
dec
cs
or
sahf
mov
ja
repz
sub
push
push
dec
jb
je
sarl
decb
mov
adc
fidivrs
insl
cltd
mov
jbe
cmp
icebp
pop
lahf
adc
out
stos
sub
xchg
pushl
lret
lret
cmp
popl
scas
dec
stos
fnstsw
icebp
imul
adcb
inc
sub
ret
aad
push
cmc
dec
mov
mov
jg
add
or
subb
cmp
mov
adc
pop
push
sbbl
xchg
fisttpll
adc
outsl
xchg
addl
xchg
sub
pop
add
or
sbb
scas
jg
pop
insl
inc
mov
shlb
pop
jmp
mov
add
popa
fsubl
insb
testl
or
bound
xchg
repz
jo
rcll
mov
push
out
add
push
push
jo
cmp
gs
pop
test
xchg
inc
cmp
xchg
roll
and
les
cwtl
das
inc
cmp
std
pusha
sbb
bound
mov
mov
stos
xor
xchg
sub
out
fidivrs
mov
mov
dec
popf
out
lret
inc
cwtl
stos
je
sub
iret
test
andb
int
bound
sti
push
xor
adc
pusha
ss
sub
mov
or
mov
clc
adc
and
test
pop
cmp
lds
lea
popa
xchg
fdivp
lcall
ficomps
lock
loop
imul
mov
iret
push
insl
jl
sub
sahf
gs
notb
xchg
pop
and
pop
mov
out
rol
pop
test
movsb
sub
rclb
das
cmp
and
in
inc
inc
inc
arpl
cmp
add
fimuls
test
and
xlat
scas
insb
scas
ss
jno
and
shrb
test
add
insb
insl
into
mov
adc
jne
rcrb
out
cmp
fcomi
inc
cld
mov
insb
cmp
mov
pop
loope
mov
sub
xor
add
jns
notl
ret
sbb
pusha
mov
mov
lret
out
and
bound
jb
and
jo
adc
mov
jo
iret
cmpsb
aam
clc
xchg
sub
fwait
cmpsb
cltd
nop
or
nop
out
test
loopne
dec
pop
mov
mov
test
ja
sbb
and
sbb
lods
add
cmp
pop
sbb
mov
sub
pop
loope
lds
adc
fwait
and
imul
lods
fistl
mov
lret
out
xchg
rolb
push
out
push
jecxz
int3
cld
cmc
cmpb
pop
repnz
jmp
mov
push
cmpb
roll
cmc
mov
xor
pusha
adc
je
mov
xchg
daa
xchg
dec
jg
pop
add
jl
inc
pop
imul
hlt
insl
sbb
push
popa
pop
xor
frndint
outsl
das
mov
xchg
mov
repz
sub
cmp
fmul
mov
dec
push
sbb
sbb
cmpsb
inc
mov
dec
and
mov
gs
iret
enter
fwait
data16
xchg
outsb
inc
inc
sbb
pop
fcoms
add
jle
lea
xchg
std
cmp
push
add
pop
adc
testl
mov
popf
mov
sub
mov
aad
cmp
xor
xor
in
adc
pop
outsb
add
cmc
cmp
inc
mov
xchg
adc
mov
aas
dec
loop
imulb
pop
aad
ja
cs
js
jnp
sub
pushf
add
in
hlt
xchg
push
cs
mov
sbb
dec
fistps
xchg
pop
dec
mov
cmp
mov
out
push
push
mov
adc
pop
jbe
mov
fildll
int3
xor
mov
inc
in
popf
fs
rcll
adcb
add
fwait
mov
test
lret
adc
cmp
enter
cmc
pop
daa
jg
shr
xor
cli
dec
sbb
or
push
mov
loope,pt
rcl
mov
jns
jecxz
fwait
mov
test
or
das
pop
je
sbb
lods
adc
mov
mov
or
jno
jns
add
add
cs
jmp
adc
xor
insb
jnp
outsb
or
lock
push
pop
daa
dec
ja
or
mov
pop
push
and
or
jo
xorl
pop
or
lea
add
ja
leave
mov
lcall
ret
int3
xor
or
stos
cmp
ljmp
ljmp
fs
insb
pop
mov
outsb
cmp
add
and
lcall
xor
or
sub
ljmp
pushf
jnp
roll
int
and
nop
in
jp
call
psubusb
mov
dec
pop
lahf
jns
adc
mov
lcall
loope
add
ficoms
pop
mov
xor
jno
dec
dec
fdivrl
loopne
sbb
dec
fnstsw
mov
loopne
mov
into
aad
rorb
jno
add
xlat
or
jne
clc
mov
or
mov
cld
dec
sbb
xchg
cwtl
fs
cmc
dec
adc
loopne
mov
icebp
imul
sub
add
pop
cld
and
sbb
xchg
js
loope
jnp
cwtl
jecxz
and
pop
stos
adc
mov
jge
ret
mov
adc
in
jl
xchg
in
je
stos
movsl
bnd
imull
and
shufps
adc
aam
pop
rclb
jecxz
mov
testl
cmp
shrb
fnsave
insb
mov
mov
and
add
call
push
shlb
iret
bound
fsubrs
mov
js
ret
xor
ret
loope
adc
out
int3
arpl
jbe
lods
addb
dec
movsb
add
push
cmp
and
loopnew
push
xor
jns
imul
cmp
lret
subl
jnp
loop
jmp
push
add
adc
in
push
mov
jl
addb
aad
sbb
cmp
pop
addr16
pop
rcrl
and
push
in
mov
push
mov
test
negb
sbb
adc
neg
ljmp
sub
outsb
subb
test
sub
pop
out
mov
sub
sub
mov
rcl
adc
pop
loope
stc
nop
sub
xchg
les
mov
outsl
pop
aad
push
mov
push
aas
popl
inc
stc
movsb
icebp
xor
sub
fs
in
and
mov
sbb
and
out
ret
out
dec
cmp
lea
sarb
add
mov
in
jno
scas
xchg
ja
mov
jae
dec
mov
test
loope
adc
mov
aaa
xorb
cmp
push
aas
lcall
aad
fiaddl
and
push
or
cmpsb
pop
andb
outsl
lahf
push
fsubs
sbb
int3
mov
push
add
ljmp
pop
or
mov
outsl
int
push
xor
insb
sub
push
neg
mov
push
enter
nop
cmp
clc
popl
sbb
std
push
jae
loop
xchg
ljmp
mull
cmp
sarb
dec
test
mov
sbb
pop
push
sbb
sarl
push
or
ja
leave
xchg
inc
jb
icebp
jl
xor
popf
js
out
test
add
mov
mov
add
push
dec
ss
imul
cmp
xlat
and
push
push
xchg
xor
adc
aad
inc
mov
pop
inc
sbb
cltd
pop
fmull
addb
in
ret
sbbl
cmp
movsl
cmp
mov
jle
inc
lock
mov
imul
xor
popf
ret
imul
or
movsl
insb
stc
popf
jbe
push
dec
jge
aad
xchg
arpl
add
mov
stc
xchg
sbb
inc
bound
push
pushf
test
loop
adc
dec
movsl
lods
std
inc
loopne
inc
sub
jnp
lock
mov
nop
xchg
shr
leave
pop
lcall
pop
outsl
xor
lret
sti
int3
jno
mov
mov
mov
ret
aad
jb
mov
add
sub
sbb
mov
dec
aam
jmp
jne
cltd
jo
loop
mov
lret
negl
cli
addr16
jbe
jmp
in
pushf
out
or
cltd
cmp
scas
stos
xor
jbe
mov
add
push
sub
jecxz
sub
cs
add
stos
push
mov
lret
cwtl
fcmove
rclb
mov
mov
lret
cmp
cpuid
inc
pop
aam
pop
mov
ret
lret
add
cmc
popf
and
jno,pn
and
stos
dec
in
mov
jge
dec
push
jno
ja
dec
out
and
dec
push
imul
adc
cmp
int
dec
push
or
or
or
xchg
fsubrp
jecxz
fucomip
imul
jbe
xor
and
test
add
inc
cmp
cld
sbb
rorb
orl
or
dec
jb
jne
cs
je
inc
daa
adc
sbb
movsl
sub
ret
adc
xor
push
fmuls
sbbb
out
clc
fists
push
sub
lods
mov
in
lcall
lods
int3
add
icebp
jbe
fwait
cmpsl
adc
in
add
fistpl
or
jmp
sbb
ljmp
hlt
pop
cmc
jecxz
arpl
jae
sbb
popf
dec
jl
repz
sbb
mov
pop
dec
cli
jo
add
int
cwtl
xchg
jb
mov
mov
mov
or
xchg
xchg
mov
aad
out
mov
negb
andb
ret
lods
jo
xlat
push
dec
dec
scas
xchg
loope
and
lea
mov
mov
xor
rcrl
pop
xor
aas
ja
push
lea
jg
in
test
mov
inc
popa
jp
cmp
xchg
mov
inc
xchg
push
andb
sbb
dec
adcb
int
or
or
sti
in
and
aad
jae
push
sub
pop
xor
call
add
adc
xchg
or
loop,pn
aad
loop
gs
aad
or
mov
jbe
dec
call
test
mov
in
xchg
mov
test
fwait
dec
adc
xchg
cmp
xor
pop
stos
lahf
xor
ret
cmp
jb
jg
cmp
mov
jmp
aam
mov
sbb
call
cmp
inc
jge
cld
sahf
addr16
fwait
xor
std
xchg
mov
std
cmp
xchg
and
int
cmp
fnstenv
pop
lock
daa
push
arpl
repnz
add
jmp
add
orl
push
fwait
mov
je
inc
xor
mov
fwait
jg
out
push
mov
sti
leave
icebp
test
mov
push
iret
scas
inc
cmc
xchg
pop
call
jb
in
stos
mov
pop
test
push
sbb
jle
mov
je
cmpsl
ret
fwait
xchg
aam
stos
cmp
dec
int3
pop
arpl
ficompl
notl
fs
jbe
ret
hlt
je
in
int
mov
dec
leave
call
fwait
out
push
js
push
stc
pusha
hlt
and
popf
movsl
nop
aad
sub
and
dec
das
loopne
jbe
xchg
gs
cmp
inc
cmpsb
jns
pop
or
and
enter
lcall
lods
push
pop
sahf
popa
dec
cmp
mov
rolb
sub
or
mov
jnp
enter
cwtl
stos
inc
jl
sub
jecxz
arpl
das
cmp
ljmp
and
inc
sub
ljmp
cwtl
fidivl
fcomi
imul
xor
add
sub
mov
sbb
ds
push
repz
dec
sbb
mul
xchg
sub
sbbl
mov
pop
mov
mov
dec
sub
push
inc
sub
lock
inc
into
imul
dec
cs
cmp
dec
add
xor
or
rcr
push
sub
jp
cmp
lods
mov
jb
or
add
push
fbstp
pop
jnp
sbb
adc
stc
cmp
sub
les
rorl
ds
jp
dec
popa
xor
enter
adc
shl
sbbl
cltd
mov
add
push
push
subl
push
insl
sub
bound
daa
jne
pop
aas
sbb
dec
or
adc
mov
test
adcb
pop
ret
hlt
jl
mov
icebp
fbstp
or
jmp
xor
jno
xchg
bound
xchg
mov
aas
jo
icebp
aam
mov
lea
pop
lahf
jle
outsb
mov
xor
dec
add
lcall
in
sahf
sub
xchg
int
sub
dec
mov
jns
outsl
jnp
and
xchg
mov
insl
and
lock
dec
lock
or
fucomi
rclb
dec
je
sub
push
addr16
pop
pop
mov
out
xchg
sarb
mov
xchg
cmp
xor
in
es
cld
xorl
inc
sbb
xchg
mov
cmpsl
ret
pop
xchg
jmp
jg
xchg
add
sbb
pop
mov
aad
imul
adc
rep
sub
adcb
pop
pop
div
mov
adc
adc
inc
lahf
xor
mov
cmp
mov
and
push
and
and
cmp
xchg
fcompl
and
lahf
dec
in
cmp
jle
loop
add
out
jne
adc
test
scas
dec
fsubrp
test
pop
sub
repnz
loope
mov
xor
iret
push
xchg
and
and
inc
cld
sub
out
dec
xchg
sub
push
xor
arpl
mov
inc
lret
mov
sub
enter
ljmp
lret
shrb
jecxz
stc
test
mov
cmpsb
add
and
xchg
mov
jg
ret
test
jl
in
mov
fiaddl
orl
movsl
cld
cli
adc
cmp
or
repz
ljmp
adc
andl
pop
mov
add
sahf
bound
mov
dec
int
xor
fisubl
add
pushf
push
notl
mov
aam
std
scas
mov
or
pop
inc
mov
dec
cs
xchg
dec
lea
dec
mov
ret
pop
mov
add
cmp
mov
push
xor
daa
jmp
lock
into
and
arpl
fnstcw
gs
push
sub
mov
rorl
and
sbb
add
inc
ss
dec
out
out
in
mov
mov
mov
enter
mov
fwait
bnd
sbbl
or
aas
loope
push
xchg
pop
push
addr16
mov
stc
sbb
xchg
stos
push
cmp
and
inc
jle
movsl
mov
sbb
sub
rcrl
xchg
call
mov
cld
or
adc
shl
insb
inc
das
mov
loope
xor
push
shll
mov
dec
call
loopne
imul
es
pop
pop
and
inc
pop
cmp
xchg
lcall
push
pop
rcr
or
jle
ret
aam
cmpsl
es
xchg
mov
stos
in
popf
dec
jne
jle
pusha
int
sbb
add
jmp
xchg
inc
jecxz
xchg
push
decb
test
mov
inc
jmp
mov
aas
add
negl
jl
mov
push
divl
ds
xor
mov
les
rcl
ljmp
jo
out
test
inc
jbe
dec
jle
cmp
mov
fldl
sub
xor
ret
xor
mov
fwait
xor
mov
adc
mov
jle
cltd
pusha
mov
xchg
adc
bnd
mov
cld
inc
mov
lcall
push
in
idivl
and
subb
in
xchg
hlt
into
cli
cmp
imul
repz
stos
fsts
sub
ja
jg
dec
shlb
rcrb
xchg
pop
and
std
and
lods
fidivrs
jae
aaa
arpl
xchg
out
test
add
jg
js
test
imul
pop
js
lret
xor
test
rcrl
dec
cmp
movsl
repnz
mov
es
xchg
mov
fldcw
outsb
sub
and
fcmovne
jmp
lods
cmp
push
jns
cmp
hlt
cmp
pop
fmuls
incl
sub
lret
sbb
pop
cs
icebp
sub
dec
xchg
je
ret
mov
mov
xor
pop
push
mov
stos
ljmp
sahf
or
ret
aad
pop
or
int
xchg
add
and
mov
adc
fidivs
loopne
repz
mov
push
lods
mov
bound
ret
rcll
lods
inc
mov
repz
sub
sarl
mov
loope
bound
ljmp
cmc
cmp
xchg
in
mov
sbb
cld
leave
mov
sbb
ja
ss
mov
jno
das
int3
mov
sub
fsubl
sbb
fdivs
fisubs
les
inc
dec
movsb
jmp
fcmovb
adc
inc
rcll
pop
inc
sahf
lods
jae
nop
insb
xchg
jae
mov
repz
jnp
push
and
dec
dec
mov
inc
lds
dec
les
mov
mov
push
pop
ljmp
out
dec
call
mov
jno
add
imul
ljmp
or
and
sbb
cld
dec
dec
xchg
sub
jns
movsb
cmpsb
cmpsb
ss
adc
push
push
aam
imull
mov
jo
jb
stos
sbb
add
adc
sbb
in
mov
adc
addr16
jmp
pop
mov
pop
outsb
test
xchg
xchg
or
xchg
mov
push
push
cmc
inc
add
ds
push
jae
sub
adc
shr
dec
loope
hlt
adc
or
test
cld
out
mov
adc
clc
mov
push
xor
scas
or
gs
jae
xchg
ficoml
dec
rorb
xchg
imul
mov
push
lock
xor
pusha
mov
push
leave
cmp
test
dec
jl
stc
cmp
clc
and
popf
fcmovne
loop
addr16
movsl
push
test
mov
or
rcl
push
cmp
std
ret
add
jmp
cmpsb
dec
push
xchg
push
adc
pop
idivl
loopne
shl
or
mov
les
mov
push
outsb
add
in
or
jp
ja
mov
cmp
pop
mov
rclb
mov
inc
mov
cmp
addl
aad
popf
pop
sub
mov
adc
and
xor
mov
bound
sbb
mov
mov
rolb
sbb
and
imul
xor
movsb
xor
sbb
cmp
call
push
stos
fstpt
into
jne,pn
dec
es
enter
out
filds
sbb
mov
add
xor
testb
in
and
fs
addl
mov
mov
enter
and
out
dec
lahf
add
add
push
dec
jo
sub
adc
mov
leave
in
ret
sub
jne
and
xchg
jns
es
pop
es
sti
mov
loope
dec
sti
test
pushf
aas
int3
sbb
loop,pn
xlat
cmp
das
and
push
leave
in
inc
dec
arpl
mov
and
xor
jmp
enter
jecxz
dec
pop
and
popf
inc
pop
hlt
pop
mov
sub
or
mov
fildl
mov
cld
repz
xchg
arpl
mov
cmpl
dec
mov
hlt
mov
pop
shrl
jbe
jecxz
push
pop
loopne
mov
xor
cmpsb
aaa
scas
sbb
cmp
jb
dec
popa
imul
cmp
mov
add
jg
inc
lea
icebp
mov
add
jae
pop
xchg
sub
jge
jnp
adc
mov
lahf
push
lcall
xchg
insl
inc
sub
xchg
sbb
sub
out
clc
xor
sbb
jp
js
xchg
sub
cltd
and
js
fs
adc
fisubs
fisttps
je
pop
xor
outsl
adc
xchg
cwtl
clc
push
mov
xor
inc
fnstcw
test
jnp
xchg
jl
sub
scas
xchg
sbb
inc
cmp
jp
outsl
or
ret
test
jbe,pt
stc
dec
and
add
mov
popf
sahf
mov
lds
or
rcll
or
fbstp
mov
jb
cwtl
pop
mov
rcr
enter
test
or
sbb
in
cmp
ds
xor
shl
xchg
in
sti
push
js
lret
mulb
aaa
test
xchg
jl
jno
movsl
pop
lock
dec
insb
mov
mov
rorb
iret
xchg
daa
in
ret
mov
fwait
or
pop
out
xlat
cmpsb
inc
stos
xlat
stos
shrb
fistpl
mov
pop
jge
int3
dec
loop
lahf
cmp
imul
sub
fiaddl
mov
lcall
mov
mov
rol
dec
inc
mov
pop
jl
cltd
sub
xchg
dec
es
fsubrl
mov
out
sub
or
mov
push
sahf
mov
fbld
pop
xchg
xor
pushf
sub
cltd
mov
jp
cld
stc
adc
push
pop
out
pop
inc
dec
inc
sub
insl
jmp
rcrb
jl
xor
fistps
adc
jbe
test
int3
pop
icebp
repnz
nop
jno
add
pop
je
mov
mov
fbld
dec
inc
push
lret
jnp
mov
jbe
sub
or
pushl
loop
rcll
push
addr16
xchg
ds
cs
sbb
xchg
dec
mov
sar
jae
add
lret
dec
adcl
cmp
mov
stos
rcrb
and
dec
adc
push
loope
shl
test
aam
ljmp
push
jnp
int
xchg
daa
test
fdivs
push
fsubr
xor
aad
push
pop
lock
outsb
xchg
and
pusha
cmp
lods
xchg
lahf
sub
into
sbb
xor
call
in
jno,pn
add
shrl
xor
fwait
jo
movsl
and
mov
inc
loop
mov
xchg
mov
inc
ds
adc
repz
pop
jb
insb
in
add
push
mov
or
repnz
push
add
pop
aam
clts
in
dec
adc
push
xchg
mov
dec
jb
aas
sahf
out
cmpsl
or
out
int3
mov
call
jp
fst
addr16
iret
or
fcoms
mov
sub
scas
call
xchg
loope
push
push
es
jb
mov
fisubl
les
sahf
leave
mov
in
adc
shll
push
test
mov
sub
pop
lahf
inc
jns
pop
mov
lds
cmp
and
ret
or
push
xchg
test
inc
pop
int3
test
inc
sbb
fs
xor
sti
xor
sub
sbb
rcll
dec
jb
sti
lret
cld
jg
loopne
andb
rcrl
lds
icebp
imul
mov
dec
hlt
xchg
jb
add
hlt
adc
pushf
arpl
mov
push
sub
movsb
jecxz
push
sbb
sbb
ret
cmp
pop
cmpsb
pop
ficompl
xor
clc
fdivr
xchg
lock
jbe
mov
rol
adc
in
or
notl
mov
sbb
insb
add
out
outsl
cmp
orb
fiaddl
cmp
out
test
fiadds
sbb
lcall
data16
out
mov
ret
inc
inc
cltd
mov
jp
xlat
or
pop
lcall
mov
mov
dec
popf
mov
movsl
out
pop
sbb
mov
mov
lret
popa
test
jne
frstor
je
mov
mov
in
outsl
mov
mov
jge
inc
es
and
test
ret
pop
pop
cmpsl
into
jne
adc
cmp
lahf
dec
cltd
pushf
xor
jns
push
lock
xor
cmp
jmp
out
jno
push
add
mov
test
or
sbb
cmpsb
cld
push
test
push
dec
sbb
inc
cmpl
mov
enter
jb
or
cmp
testl
adc
shlb
add
arpl
or
insl
add
inc
repnz
xchg
psubd
ja
ret
es
stos
push
test
loop
jns
loop
jle
add
test
or
or
add
and
andb
sbb
pop
cmp
push
adc
pushf
aas
mov
and
cmp
mov
mov
js
mov
sarl
out
pushf
sbb
sbb
mov
movsl
popa
into
stos
aad
imul
popf
fsts
into
fisubrs
add
mov
inc
xlat
add
lods
mov
loop
jg
ret
xor
idivl
and
push
dec
ficompl
xor
or
ficomps
xor
jbe
loope
stos
xchg
mov
adc
lea
sub
mov
push
mov
aaa
into
lods
icebp
xchg
xlat
outsb
ret
ds
negb
mov
cmp
clc
cmp
int
mov
xchg
mov
test
stos
sbb
mov
mov
int3
lret
xchg
imul
adc
sbb
es
cwtl
push
dec
jl
les
icebp
fwait
cmc
std
cltd
mull
pushf
iret
pop
mov
lods
sahf
jno
push
adc
push
fwait
mov
jmp
inc
fstps
lret
imull
mov
push
mov
ror
xchg
jmp
hlt
lcall
sbb
mov
cmp
ret
mov
jae
jno
mov
xor
xchg
xlat
push
call
shll
lock
imul
fstl
aad
fnsave
test
ja
pop
xor
test
cltd
testb
icebp
imull
fwait
gs
not
stc
nop
push
push
sbb
sbb
test
mov
stc
push
mov
lock
mov
mov
inc
cli
dec
sbb
pop
xor
inc
aad
iret
or
xchg
outsb
pop
sub
xor
testb
js
je
mov
dec
loop
ret
rcrl
mov
fbld
adc
cmpsb
inc
mov
loop
cmp
xchg
mov
ret
insl
aad
or
mov
mov
fisttpll
idivl
or
pushl
outsb
mov
push
stos
cmp
nop
data16
pop
lret
cmp
aas
mov
bound
jb
subb
shlb
int3
aad
cli
fldt
in
popa
call
pop
ret
pop
hlt
or
pop
addr16
rcrl
js
cli
jns
sub
mov
movsb
and
fisttps
clc
out
inc
arpl
mov
outsb
mov
stos
rclb
idiv
dec
scas
fcmovnb
aas
aad
mov
pop
lret
cmp
cmp
xlat
inc
std
les
add
popf
push
pop
mov
sbb
stos
scas
mov
into
mov
cs
mov
sti
push
mov
xchg
repnz
dec
jae
mov
mov
mov
lds
stc
pushf
jecxz
lea
mov
nop
xchg
push
insl
mov
cmc
xor
pop
cld
inc
push
xor
mov
in
pusha
xor
add
lret
jns
cmp
daa
rcr
pop
push
cltd
jb
mov
or
xchg
popf
hlt
inc
loop
shlb
imul
push
rorb
xlat
les
imul
dec
add
testl
ss
cwtl
pop
cmp
xlat
xor
lcall
cmp
gs
inc
bound
mov
push
mov
loopne
test
adc
add
arpl
dec
scas
xorl
inc
inc
xchg
mov
xor
call
out
ljmp
adc
dec
dec
lcall
popa
cmpsl
test
sub
jg
add
rol
jge
mov
scas
mov
dec
xorl
bound
ja
pop
jg
or
jae
adc
lahf
out
fstpt
or
lahf
stos
jecxz
fdivr
daa
std
into
shrb
mov
cs
ret
xor
nop
das
pop
sti
dec
fbstp
xchg
nop
jnp
and
jno
or
stc
test
jge
xor
lahf
xchg
add
out
cmpsl
rorl
out
test
jge
jecxz
jmp
imul
fstpt
les
out
enter
push
repz
in
jmp
and
pop
xchg
cs
pop
popa
xor
dec
dec
adc
push
insl
repz
pop
stos
test
xor
sbb
inc
inc
mov
aas
add
insl
inc
inc
push
in
test
fsubl
hlt
je
mov
dec
test
sub
insb
adc
frstor
pop
into
stos
or
sub
sub
xor
adcl
in
inc
out
je
sbb
lcall
pop
xor
xchg
pop
ds
aam
pop
mov
dec
inc
mov
cs
fucomi
add
lahf
jmp
cmp
jne
xorl
fidivs
stos
int
movsl
jl
fildl
nop
stos
add
xchg
inc
fucomi
rorb
xchg
pop
into
sub
and
das
sub
dec
dec
push
lahf
mov
jae
and
nop
jl
aam
xlat
mov
es
pop
xchg
inc
out
and
xor
out
cwtl
dec
push
test
ret
mov
test
repz
out
dec
and
sahf
sbb
and
aad
cmc
pop
ret
dec
jg
xchg
adc
leave
int
mov
lods
add
pop
insl
mov
xor
incb
lods
cmpb
mov
mov
stos
loopne
cmp
lret
or
aas
pop
fdiv
adc
iret
cmp
xchg
sub
es
scas
dec
jne
or
mov
mov
pop
or
aad
fwait
cld
shll
xlat
pop
outsb
out
jmp
nop
jb
testl
lcall
and
into
pop
mov
mov
jnp
jmp
into
iret
ficomps
int3
cld
or
jne
and
js
inc
call
jmp
cmp
fwait
cmpsb
lock
pushf
sbb
sbb
cmp
mov
popa
jle
andl
jnp
xor
imul
lds
es
outsl
sbb
inc
or
fstpl
dec
jno
jnp
mov
xchg
shr
iret
add
mov
fisttps
sbb
pop
mov
adc
hlt
and
jne
push
stos
jmp
pop
and
push
cmpsl
fwait
mov
and
xchg
pop
popf
es
cltd
add
in
add
int
mov
ss
ljmp
jno
lods
add
pusha
jb
loop
pushf
rcr
decl
cs
adc
sbb
clc
add
fnsave
jl
dec
xchg
add
pushf
outsb
mov
push
push
test
sti
jbe
adc
mov
pop
iret
mov
cmp
lods
sti
ret
lahf
test
mov
je
push
ret
add
js
decl
stos
fwait
mov
xchg
adc
aas
sbb
jnp
pop
iret
push
jge
pop
sbb
mov
std
pop
sbb
lret
inc
ljmp
cmp
shl
mov
in
inc
add
mov
imul
pop
mov
xchg
outsb
gs
lret
mov
jle
inc
test
sbb
add
inc
in
xchg
mov
inc
ljmp
fdivrs
pop
cmp
mov
icebp
jle
xor
dec
fstpl
push
xorl
pop
in
das
fsubrs
add
push
and
and
cmpsl
in
jne
leave
sbb
cwtl
inc
and
inc
shlb
fs
xchg
movsb
and
mov
out
popl
xchg
mov
xchg
mov
xor
dec
repz
pop
aam
or
mov
mov
sbb
adc
loop
fcmovu
lea
pop
adc
sub
pop
xchg
dec
push
inc
cmc
mov
loopne
push
pop
and
mov
testl
cwtl
pop
or
fwait
or
push
ret
xor
push
in
inc
xchg
jle
jo
mov
xor
pop
inc
lea
cs
ss
sti
and
movsb
cmp
outsb
cs
mov
jns
daa
add
xor
jnp
cmc
in
inc
lds
outsl
adcl
ljmp
testl
sbb
test
pop
bswap
sub
mov
xchg
inc
faddl
jl
sbb
jl
sbb
mov
xchg
hlt
cmp
adc
dec
ljmp
aas
adc
fwait
sti
cmp
lea
mov
fs
sbb
dec
lods
mov
neg
cmc
cmp
dec
xchg
fs
lock
sbb
imulb
push
xor
xchg
daa
out
mov
sub
sbb
clc
or
insb
loop
andl
cltd
push
rorb
mov
dec
and
loop
lds
and
pop
and
xor
inc
cmc
add
cmp
inc
fistps
adc
mov
and
out
pushf
lods
adc
or
push
rol
ss
pop
out
dec
repnz
lcall
jecxz
inc
mov
fistpll
outsl
fs
pop
pop
iret
rolb
fdivs
lds
in
fs
pop
pop
mov
pop
mov
insl
cmp
pop
and
test
loopne
gs
sbb
mov
ja
out
xor
lcall
push
pop
mov
dec
xor
sbb
and
jo
stos
pusha
clc
test
sbb
jg
mov
fdivr
xchg
fidivl
inc
stc
add
std
xchg
jge
or
pushf
fistps
rolb
and
pop
fildll
fnsave
mov
in
jle
stc
adc
shrl
outsb
dec
cli
sbb
cmc
push
xor
jl
xor
xchg
imul
mov
sbb
xor
or
cli
xchg
lock
sub
pop
mov
mov
mov
cmp
test
and
and
das
addr16
mov
iret
jecxz
dec
jb
lods
push
cli
test
mov
cwtl
imul
inc
nopl
gs
inc
xchg
cli
ja
adc
adc
mov
faddl
dec
gs
push
adc
negb
daa
fidivrl
adc
and
sti
cmpsb
xchg
call
loopne
jle
jae
inc
movsb
jns
test
in
into
xchg
inc
outsl
push
mov
fnstenv
mov
ret
sahf
clc
hlt
mov
push
push
fldt
fimuls
dec
loope
sarb
enter
push
inc
push
sti
mov
cli
push
loopne
and
int
adc
fwait
dec
loope
subl
push
push
out
cltd
xchg
mov
das
add
movsb
pop
mov
and
mov
jo
mov
cmp
aaa
imul
add
cmc
popf
jmp
nop
push
mov
pushf
jae
addr16
test
cli
pushf
std
loope
add
cltd
rcr
mov
aad
and
cmpsb
jmp
mov
mov
push
adc
ret
fbstp
cmp
in
fs
ss
push
test
and
xor
out
je
mov
push
cmp
sbbb
jb
call
lret
add
fucomp
pushw
mov
dec
xor
popf
sub
mov
dec
in
jecxz
loope
aam
test
into
flds
fdivs
xlat
xor
out
cmpsb
iret
sub
shrb
mov
imul
in
push
jmp
std
cmp
pop
cwtl
dec
aam
inc
jl
imul
xchg
test
jp
mov
jecxz
idivl
roll
add
dec
test
cmp
into
mov
dec
ljmp
fs
or
cmpl
xor
xchg
mov
sub
bound
or
scas
push
pop
mov
mov
aaa
push
rcll
incl
pop
push
inc
test
cmp
cs
cmp
rcll
add
aad
lds
call
incl
adc
pushf
inc
inc
pop
cli
mov
jle
sbb
dec
fisttpl
or
cmp
insb
mov
sub
insb
lods
repz
and
enter
std
mov
fcmovne
inc
lcall
jp
or
ja
es
add
pop
hlt
or
test
push
sub
xchg
loopne
add
and
loopne
test
inc
fldl2t
out
popa
fsts
xorl
xor
xor
das
or
mov
scas
rcll
or
in
sub
test
in
xor
and
or
push
push
xor
pop
leave
mov
ficoms
fdiv
push
in
inc
lcall
mov
dec
mov
pop
addr16
and
mov
into
and
cmc
cmp
jb
mov
inc
cmpsb
adc
aam
out
pop
notb
inc
ret
mov
ss
es
pop
add
addr16
and
xchg
cld
adc
mov
sub
mov
push
pop
divb
sub
aas
xor
jp
inc
pop
pop
add
add
and
xchg
pop
pop
in
in
push
push
mov
add
pushw
or
lcall
cmp
adc
jbe
sbb
pop
pop
jno
rolb
lahf
or
mov
mov
or
rorb
imul
mov
int
addr16
bswap
sbb
or
aad
sti
pop
sbb
loope
push
es
aam
pop
xchg
sub
add
and
jb
dec
jmp
pop
cmpsb
sbb
addl
pop
std
lcall
cmp
lahf
addb
jle
mov
push
imul
mov
orb
je
or
push
push
jbe
or
daa
mov
or
pop
jb
jb
xchg
sbb
mov
or
pop
xchg
sar
imul
push
inc
lret
inc
lret
jno
or
pop
in
inc
into
das
inc
sbb
sub
pop
and
lret
inc
fldenv
add
xor
cmp
mov
dec
jmp
add
test
lcall
mov
adc
sbb
aaa
movsb
rclb
and
inc
push
and
jp
xchg
je
pop
cmp
into
gs
das
dec
shll
jmp
sti
add
dec
xchg
mov
dec
cli
aam
sbb
adc
pop
das
fbstp
mov
pop
push
mov
xchg
inc
inc
enter
push
in
and
mov
pop
out
jmp
clc
sbb
jo
adc
pop
cltd
jo
mov
adc
mull
out
mov
jg
cmp
subb
xchg
push
repnz
fdivrl
xchg
pop
jno
mov
popf
sub
hlt
sti
pop
aam
mov
imul
fwait
sub
mov
inc
cs
lock
mov
push
movsl
sti
xchg
lea
insb
xchg
xor
ja
incl
xor
jle
or
xchg
cs
pop
xchg
adc
mov
add
aam
scas
ljmp
jns
fs
popa
mov
js
movsb
jl
jecxz
and
shl
js
loop
mov
push
out
jl
loop
inc
dec
or
inc
imul
pop
popl
inc
frstor
cmp
fstpl
fs
std
xchg
es
movsb
gs
rcrl
in
dec
pop
in
push
cmpxchg
fldt
int3
ljmp
mov
sbb
or
or
push
lods
fs
cmp
movsl
add
in
sub
sub
test
fcoms
xchg
mov
insb
arpl
xchg
pop
or
jns
cmp
xchg
pop
cli
push
mov
lods
aad
insb
push
shlb
loopne
out
scas
dec
test
sub
jae
adc
in
mov
push
dec
insl
cmpsb
je
mov
push
or
into
or
hlt
pop
daa
mov
mov
pop
xchg
add
lods
jl
subb
subb
jge
xor
pop
xchg
sbb
mov
dec
cs
jo
ret
sub
sbb
jmp
adc
push
xor
push
mov
lods
js
test
mov
fdivrl
jge
inc
es
or
pop
lods
push
push
data16
or
xchg
pop
xchg
test
push
pushf
sbb
lahf
jb
hlt
mov
or
pop
insb
xchg
jmp
lahf
lods
cld
and
iret
pop
stc
js
shlb
xor
fistps
fiaddl
push
lret
cli
xchg
pop
or
in
jecxz
xchg
aaa
fdivp
movsb
push
mov
imul
pop
test
pushf
out
andl
add
push
jo
dec
pop
sti
mov
or
pop
lcall
daa
xlat
addr16
aad
leave
test
jns
mov
dec
addr16
aaa
inc
movsl
hlt
insl
sbb
dec
push
mov
jmp
inc
push
sub
into
jg
mov
xor
jo
push
dec
ds
ljmp
lahf
es
inc
fdivl
pop
mov
scas
add
sbb
fadd
sub
adc
int3
test
iret
or
mov
subl
push
sub
or
pusha
sub
jns
adc
loop
jecxz
ja
jae
rol
inc
scas
mov
mov
popa
dec
aas
cli
bnd
and
popa
xor
pop
inc
popa
movb
scas
cmp
jns
mov
fsubr
add
fdivl
cli
mov
cli
jne
pusha
mov
dec
out
imul
scas
fisubs
add
aas
pop
out
sbb
je
jecxz
sbb
sbb
add
int
adc
lret
sbb
inc
or
popf
lods
or
add
pushf
xchg
movsb
inc
addb
lea
pop
mov
clc
xchg
hlt
popa
adc
jns
pop
pop
dec
jne
jp
mov
scas
xchg
iret
call
mov
xchg
ja
cmp
flds
jp
adc
ret
inc
ljmp
cmp
lds
pop
mov
mov
je
jge
cld
aad
or
outsl
jg
sub
sub
clc
pop
ss
addr16
repnz
cli
push
loope
xchg
add
or
cltd
rcl
stc
ds
nop
repz
push
or
mov
push
mov
cmp
pusha
fcmovb
sub
cmp
dec
pushf
cli
mov
test
arpl
fs
outsb
enter
movsl
pushf
leave
nop
sbb
std
aaa
cmp
lret
pop
adc
lea
xchg
popa
mov
push
popa
dec
lcall
jmp
sbbl
mov
mull
pop
lcall
add
std
test
dec
and
fldt
fld
scas
sub
rcl
xchg
push
mov
cli
pushf
loopne
adc
icebp
xor
test
pop
out
scas
cmp
pop
out
sbb
negb
mov
sbb
pushf
stc
lods
adc
lea
das
xor
push
push
mov
push
dec
sub
jl
pop
pop
mov
rcl
fbld
or
cmpsl
shrb
mov
jl
jo
adc
xchg
jmp
xor
das
fcoms
scas
jb
fisubrl
push
int
push
push
es
in
lret
jae
cmpsl
aad
pop
cmp
addl
and
xchg
stos
mul
adc
adc
add
sbb
push
inc
mov
and
in
and
loope
insl
ret
jmp
int
fnstenv
ret
gs
xlat
mov
push
test
test
popf
jle
jbe
cs
out
add
add
pop
movsl
ss
xlat
jns
pop
and
sbb
xchg
or
xchg
out
cltd
in
dec
loopne
shrl
bound
sahf
pusha
jb
mov
xor
arpl
add
push
je
loopne
lahf
sbbl
mov
jg
repz
in
dec
and
xchg
gs
js
mov
inc
shl
cmp
lret
push
imul
out
mov
push
sbbb
adc
cmp
cs
or
xchg
fidivs
adc
adc
out
popa
cwtl
outsl
adc
loopne
and
sub
insl
daa
dec
mov
jne
xchg
test
and
lea
mov
adc
into
test
enter
test
movsl
les
sub
adc
out
cmp
add
or
adc
mov
loopne
dec
dec
push
gs
mov
out
add
cmp
fs
cmp
or
int3
pop
adc
xchg
in
and
fistpl
in
orl
lods
inc
aas
jecxz
subl
jge
and
test
mov
push
cld
jp
xor
adc
std
test
pusha
mov
or
cltd
xor
test
xchg
aaa
push
pop
mov
dec
in
rorb
in
loop
ljmp
inc
xchg
jb
sbb
shll
add
icebp
and
test
inc
lock
cmp
pop
and
sbb
mov
lcall
cwtl
mov
pop
sub
inc
ret
in
imul
mov
pop
and
jle
das
mov
mov
jmp
dec
enter
es
fs
test
xor
and
mov
lea
aaa
into
push
movsl
sbb
test
inc
lret
fsubp
mov
andl
mov
imul
push
adc
les
cmp
sub
push
sbb
loopne
stc
nop
jns
push
pop
jb
pop
scas
xchg
push
fdivs
mov
movsl
fcmovu
inc
inc
idiv
scas
daa
mov
pusha
sub
inc
pop
inc
cwtl
jb
inc
out
xor
push
mov
mov
cwtl
idivl
sbb
dec
push
mov
faddl
push
jbe
sbb
inc
dec
popf
sbb
daa
or
scas
test
sub
fiaddl
in
stos
cwtl
xor
sbb
jmp
adc
lret
fnstsw
roll
scas
fdivp
in
mov
mov
repz
es
mov
or
leave
mov
psrld
pop
mov
stc
bound
adc
lea
xchg
sbb
jl
mov
nop
jnp
rolb
cmp
xor
mov
mov
les
sti
sbb
adc
jl
mov
cli
lea
xchg
inc
loopne
lea
add
inc
popa
mov
fs
test
or
ss
aaa
jge
pop
rol
add
and
sbb
mov
sub
xchg
insb
and
cmpb
leave
inc
mov
adc
popa
out
or
xor
rorb
daa
pushw
enter
adc
mov
jp
xor
pand
sub
inc
mov
jl
sub
add
popf
sbb
aad
mov
stos
loope
fsubrs
out
dec
int3
pop
mov
mov
sub
ds
das
mov
mov
popa
sar
or
sbb
cwtl
enter
lea
cld
shlb
push
adc
ficomps
dec
mov
jle
repz
adc
mov
out
std
mov
test
outsl
jnp
sbb
rol
sbb
xchg
or
adc
mull
ljmp
mov
and
or
int3
nop
in
adc
xchg
mov
iret
mov
xchg
jbe
cmp
mov
xchg
out
mov
xchg
mov
or
xchg
shll
jnp
jecxz
or
sbb
int3
test
aaa
adc
jle
aad
insb
leave
arpl
mov
and
fwait
dec
mov
fisubrs
icebp
jbe
push
int3
fwait
xchg
push
cli
fnstenv
pop
xchg
xchg
mov
or
dec
ja
fimull
sbb
imul
add
cmp
fldcw
dec
repnz
and
inc
mov
cmp
mov
xchg
outsb
xchg
dec
lea
cs
les
jae
inc
rcrl
imul
sbb
in
xor
fdivrs
cmpsl
or
fdivl
sub
pop
adc
mov
cmc
shrl
mov
icebp
clc
fistps
in
jne
gs
cltd
insl
test
sbb
jg
push
aad
adc
mov
pop
movsb
sar
adc
stos
sbb
push
push
mov
bound
arpl
add
xor
outsb
fcmovne
shll
cwtl
incb
dec
stc
adc
pop
pop
mov
or
mov
mov
pop
inc
sbb
jo
xor
pop
std
jno
stos
out
les
mov
call
stc
sbb
push
push
inc
and
push
mov
loope
stos
mov
dec
out
clc
inc
jns
xor
xchg
xchg
xchg
enter
mov
jbe
and
and
js
cmpsb
pop
fucomi
mov
pop
cmc
mov
lcall
in
clc
movsl
pop
adc
shll
jp
stos
ret
mov
inc
jg
in
or
push
std
sahf
cld
adc
div
xor
jmp
loopne
jno
dec
and
sbb
lret
cmp
pusha
xchg
mov
lahf
sarb
jo
jmp
push
or
xchg
mov
arpl
insb
ljmp
cmp
scas
sar
inc
dec
sbb
push
cmpsb
dec
arpl
mov
jl
aam
insl
ret
or
rolb
outsl
loopne
shrl
sbb
lds
test
loope
or
cmc
dec
mov
add
xchg
lcall
inc
inc
popa
ss
mov
std
fimuls
aad
enter
sub
cmp
stos
push
fstpl
mov
push
aas
push
cmp
pmaddwd
add
jno
mov
popa
leave
int3
dec
fdivl
sub
jnp
lcall
in
addr16
mov
xor
mov
xor
pop
insl
test
sete
xchg
jp
hlt
jp
jecxz
push
incb
jle
scas
sahf
and
out
in
sub
mov
pop
outsb
sarl
pop
jg
mov
push
outsb
flds
stos
lods
add
mov
jne
push
and
decb
cmovle
sti
jo
aas
sti
xchg
jo
jl
scas
push
sbb
sbb
nop
add
mov
pop
and
daa
jg,pt
jo
pusha
inc
std
test
inc
ja
inc
push
push
and
cmpsl
fsubrl
aas
xchg
add
add
ret
repz
cmp
push
in
inc
mov
int3
xor
cmp
push
shrl
ret
or
mov
movsl
in
pop
pusha
rorb
test
addr16
xchg
mov
push
lcall
mov
stc
scas
mov
dec
scas
inc
push
inc
jmp
js
scas
push
dec
pop
test
fistl
mov
or
iret
ljmp
lret
cmpsb
lret
aaa
negl
clc
inc
out
xor
mov
scas
nop
pop
inc
cltd
add
xor
shrb
mov
iret
lret
out
ror
call
sub
xchg
pop
push
mov
lret
sti
inc
in
ds
cmpsb
rorb
cs
arpl
add
inc
test
push
xor
sub
dec
inc
out
cli
imul
inc
xor
mov
lods
out
inc
bound
rol
test
sub
pop
jmp
jbe
push
cmp
scas
push
inc
add
js
cwtl
xchg
leave
cmp
test
pop
mov
sub
mov
cmc
mov
lcall
out
add
lahf
xor
fistpll
dec
xor
mov
insl
inc
rcll
je
sbb
jo
bound
pushf
and
stos
push
in
dec
pop
jmp
sarl
std
mov
scas
mov
pop
mov
mov
adc
and
in
xorl
mov
outsl
xchg
fisubrl
xor
call
inc
mov
ljmp
xor
or
xchg
push
sub
lahf
push
test
pop
mov
dec
bound
pop
sbb
mov
mov
adc
pop
addl
mov
push
mov
xor
fidivl
cmp
rcrl
inc
xchg
jge
fbstp
sahf
dec
inc
jle
std
int3
push
mov
xchg
mov
cmp
xchg
cmp
out
jle
mov
adc
popf
gs
popa
jnp
clc
enter
adc
fsubl
inc
push
subb
mov
imul
dec
jb
pop
ds
add
arpl
shrl
dec
pop
add
inc
sub
fidivl
cmc
mov
jnp
popf
aas
cld
ds
mov
and
fisubrs
lret
mov
sbb
pop
ret
sbb
sub
ret
out
adc
hlt
jb
ficompl
add
mov
icebp
mov
jg
dec
mov
sub
xchg
ljmp
mov
and
xchg
sbb
sbb
adc
xchg
mov
jo
shrl
sbb
ds
lock
add
ret
jle
popa
popa
frstor
sbb
push
out
cwtl
sarb
mov
mov
and
movsb
adc
cmpsb
mov
mov
xor
lret
or
bound
lds
call
xchg
wrmsr
imul
dec
pop
lods
add
push
int3
sbb
push
pop
adc
lea
pop
mov
bound
mov
cmpsl
in
sbb
mov
pop
sub
pop
imul
and
pop
jns
adc
push
inc
mov
arpl
pop
pop
jecxz
lret
jge
push
xor
push
addr16
xor
mov
mov
ds
int3
pusha
iret
into
adc
push
jecxz
dec
add
lret
mov
pop
cld
popa
insl
mov
gs
adc
cmp
cmpsb
pop
sti
aas
xchg
jae
mov
adc
mov
mov
fldl
fildll
outsl
nop
shll
mov
xor
popa
pop
cmp
jecxz
mov
mov
jno
pop
and
movsb
addr16
ret
ds
jmp
mov
ljmp
gs
pop
js
mov
jns
dec
add
or
mov
pop
mov
in
xchg
mov
ja
subb
mov
out
or
es
mov
push
rolb
test
jo
fdivrl
scas
std
mov
cmp
imul
sbb
fld1
pop
sahf
xchg
inc
xchg
sub
jle
das
pop
fwait
rolb
adc
test
or
sub
mov
xlat
push
imul
inc
dec
sub
not
lret
out
ss
or
inc
iret
xor
sbb
insl
add
test
and
jp
movsl
push
faddl
mov
xor
adc
or
sti
inc
fnsave
and
iret
clc
push
jbe
jge
andl
mov
push
mov
sub
jmp
movl
adc
push
daa
fs
int
xchg
clc
mov
lcall
sbb
xchg
into
gs
cmp
mov
xchg
scas
jmp
pop
mov
movsb
xor
xlat
rorl
push
mov
aaa
push
sub
pop
xchg
sarb
out
add
inc
and
or
push
leave
mov
sbb
push
fldt
mov
mov
push
xchg
test
mov
je
fisubrl
enter
fsubrs
jo
popa
clc
fwait
adc
jg
out
std
dec
aad
mov
pop
mov
dec
shr
jb
mov
mov
cmpsl
adc
push
subb
jl
stc
sub
in
test
dec
aam
dec
inc
jne
mul
rclb
adc
sbb
mov
cmp
or
lret
cmp
push
pop
xchg
dec
adc
pop
movsb
movsl
xor
imul
mov
push
or
into
mov
mov
lahf
inc
or
pop
sub
sbb
pop
mov
mov
sub
or
test
mov
xor
pop
fsubrs
int3
cmp
lea
cmpb
xor
lret
mov
repz
push
and
and
ret
sub
push
add
push
cmp
dec
sbb
push
sub
mov
push
in
lcall
mov
adc
test
and
stos
notb
test
sub
enter
sub
cmp
dec
jno
out
imul
or
aam
sbb
inc
jecxz
add
and
notl
push
or
das
pop
jle
lds
sbb
pushf
sub
ret
bnd
je
adc
sbb
dec
push
test
xchg
cmp
xchg
push
push
daa
adc
in
lds
enter
lock
notb
mov
jp
push
and
add
movsb
jp
jbe
sbb
mov
xlat
test
xchg
inc
pop
lcall
inc
pop
lret
in
fcoml
stos
lds
xor
ljmp
or
loop
repnz
or
jecxz
mov
ljmp
scas
inc
adc
or
icebp
shrb
sarb
add
movsb
in
loopne
ss
add
jbe
andl
sub
icebp
data16
fidivrs
imul
pushf
lods
and
or
push
xlat
jmp
or
data16
shr
mov
adc
das
xchg
mov
sti
enter
sbb
mov
stos
xchg
sub
insl
jge
cmp
pop
rclb
inc
stos
lock
insb
mov
test
push
fdiv
mov
xchg
vhsubps
mov
mov
movsb
ret
inc
pop
jl
rol
nop
movsb
add
and
and
pop
lahf
mov
push
lds
ret
into
push
xor
fbstp
cmp
sbb
aaa
or
in
out
in
xchg
dec
xchg
jge
mov
daa
add
pop
movsb
cmp
popa
imull
dec
jle
adcb
ss
ljmp
push
sahf
sub
and
and
sti
adc
jno
push
jo
add
xor
xchg
inc
popa
mov
mov
movsb
arpl
mov
bound
rol
rol
jno,pt
lods
mov
rol
jmp
cmp
clc
sbb
lret
es
lds
mov
xchg
mov
int
inc
dec
xor
iret
out
aaa
pop
inc
inc
lea
frstor
out
fiadds
push
out
inc
gs
jecxz
xor
lret
push
outsb
imul
xchg
inc
pop
mov
push
dec
sbbb
scas
loopne
xor
push
in
push
mov
mov
inc
push
or
test
or
sbb
jg
add
fidivs
cwtl
mov
mov
add
jb
mov
imul
xchg
cmpsl
in
or
mov
notl
cmpsl
add
sub
sbb
test
pop
test
dec
shl
ficoms
jns
pop
jo
test
push
mov
fstpt
mov
jbe
bswap
push
mov
lcall
and
cmp
adc
loopne
sbbb
add
push
add
sbb
push
pop
add
add
mov
test
into
and
js
xchg
mov
sbb
push
movsb
and
subl
or
sub
imul
jae
lcall
pop
inc
scas
sub
rclb
dec
repnz
mov
push
mov
push
inc
xor
xor
or
out
leave
flds
mov
stos
add
std
mov
data16
mov
mov
in
sbb
in
and
sub
mov
movsb
sbb
out
mov
pop
mov
cmp
mov
ficoms
stc
fildl
nop
push
sub
sbb
aaa
outsb
inc
pop
jo
repnz
inc
jne
sub
jmp
add
pop
cmp
rorl
pop
mov
imul
cltd
int3
and
xchg
add
cwtl
cmp
loope
sahf
sbb
inc
fdivrs
or
sub
cs
push
push
pop
ds
mov
aas
jl
cmp
adc
pop
sub
sub
test
into
and
roll
sbb
and
mov
adc
add
xchg
ret
in
adc
xor
stc
loope
outsl
out
and
pusha
and
fcmovnu
mov
xchg
mov
jge
and
stc
pop
add
inc
and
sbb
cld
inc
insl
push
popa
xor
xchg
jns
and
cmp
movsl
cld
jb
mov
bound
mov
jge
sub
gs
adc
inc
jnp
cltd
mov
xchg
sbb
repz
pushf
push
cmc
cmp
repz
pop
out
ljmpw
dec
fsubr
mov
mov
fs
daa
aaa
mov
into
and
mov
repz
xchg
movsl
cmp
pop
dec
pop
sub
mov
jns
int
dec
cmpsl
loope
mov
in
mov
imul
sbb
out
cld
inc
jle
int3
jmp
stos
push
leave
push
shlb
push
je
aad
out
cld
add
icebp
jae
or
or
mov
pop
cs
xchg
repz
mov
mov
adc
mov
pop
cmc
bound
cmpsb
fwait
insl
xchg
adcb
sub
xor
push
push
ljmp
jno
or
cwtl
repz
data16
jle
push
add
sub
cmpsb
lods
push
pop
mov
aam
test
xor
xchg
iret
fxch
cwtl
or
fisubrs
pop
mov
sbbb
jne
dec
pop
repz
pop
and
out
add
int
popa
jne
fisubrs
clc
stos
and
lea
insl
arpl
je
mov
pop
shll
add
icebp
int
xor
pop
and
jne
or
movsl
sbb
in
enter
lea
mov
aaa
jbe
fdivs
loope
xchg
mov
fisubrl
stc
push
aas
xchg
into
mov
ret
ljmp
jno
xchg
sarb
imul
mov
push
add
push
xchg
jno
xchg
mov
or
filds
xchg
push
mov
repnz
dec
inc
and
roll
rolb
and
hlt
jb
clc
aaa
dec
jg
ds
pop
xlat
mov
push
jg
scas
jns
mov
adc
sub
cmp
or
add
xlat
movsb
cmpsl
jne
jbe
inc
fsub
xchg
cmp
adc
adc
gs
push
adc
adcl
add
ja
xlat
das
stos
shlb
movsl
pushf
divl
mov
push
adc
fwait
and
lea
mov
xor
aam
imul
cld
pop
sbb
iret
ds
jne
add
xor
xchg
mov
adc
enter
aam
gs
or
icebp
cli
and
xor
xor
add
loop
test
inc
sahf
stos
mov
das
ljmp
jg
test
jl
inc
repz
in
out
lcall
mov
sub
jo
push
cltd
mov
dec
xor
outsl
sub
pop
pop
nop
insl
ret
jge
insb
insl
mov
fnstsw
mov
cmpsb
lods
xchg
sub
jns
sub
fwait
sbb
fbld
lahf
xor
or
ja
pop
inc
xor
jl
mov
insb
mov
pop
scas
out
stos
ds
insl
add
test
or
add
cwtl
scas
filds
or
xchg
mov
test
or
adc
mov
mov
in
sbb
out
sbb
test
in
enter
sub
pop
inc
inc
xchg
add
add
lahf
xchg
sub
dec
pop
in
inc
dec
and
testl
cwtl
shll
nop
push
cmp
arpl
fwait
out
aad
ss
inc
cmp
push
jne
xor
lcall
push
inc
xchg
push
or
repnz
mov
and
dec
out
xchg
cmp
xlat
dec
loop
repz
xor
pop
into
jns
cmpb
add
incb
pop
out
sbb
sub
jbe
xchg
imul
add
inc
push
push
mov
sub
iret
sbb
ds
in
outsl
cld
cmp
push
je
pop
lcall
out
sub
jecxz
adc
rolb
jecxz
in
adc
rcrl
sbb
and
and
pop
das
stc
inc
pusha
push
push
out
xchg
inc
dec
dec
mov
push
cwtl
sarl
out
mov
frstpm(287
push
popf
hlt
out
lea
fsubrs
outsb
test
pop
rcll
enter
imul
push
mov
sub
xor
repnz
out
jno
sub
push
push
jne
je
xchg
push
movsb
scas
xchg
and
push
lock
rsqrtps
fistps
sub
xchg
leave
jo
aaa
jns
and
add
mov
adc
and
popa
lods
xor
fbld
es
stos
adc
xor
inc
je
test
xor
sub
dec
sti
je
xchg
scas
push
aam
mov
pop
in
arpl
arpl
loope
adc
outsb
shl
test
jns
fldenv
sub
sar
sub
ret
mov
clc
hlt
push
js
xlat
jmp
and
jl
mov
and
pop
or
and
dec
adc
inc
imul
fnstcw
pop
sub
sub
imul
xchg
rol
xor
stos
dec
int
mov
test
outsb
mov
loope
dec
data16
cmp
inc
popa
out
jmp
or
push
sub
xchg
add
out
ja
cwtl
mov
xchg
xor
and
cmc
inc
in
scas
jmp
dec
idivl
mov
aas
jns
out
fisubl
sub
das
addr16
lcall
imul
cmc
in
cmp
sbb
aas
cmp
cmp
sub
xchg
sbb
loopne
push
inc
push
mov
outsl
sbb
adc
mov
movsl
ret
cmp
or
xor
push
xor
xchg
test
add
dec
inc
fiadds
jmp
shlb
jnp
enter
jle
ret
dec
arpl
ret
jmp
int
das
xorl
lret
pop
sub
mov
dec
cltd
in
mov
xchg
cmpsl
add
push
sbb
or
mov
aad
cmp
mov
outsb
call
add
and
or
adc
dec
das
je,pt
dec
cmpsb
sahf
fidivrl
rcr
xchg
insl
dec
icebp
add
and
loopne
and
mov
shlb
sahf
pop
push
in
loop
mov
out
inc
adc
std
fsubrp
mov
and
push
cmc
arpl
movsl
ret
loope
cmp
inc
add
pop
out
je
mov
or
arpl
movsb
jecxz
or
mov
mov
popf
dec
mov
add
pop
daa
jne
sub
xchg
mov
inc
sahf
mov
lret
add
movsl
jno
xlat
dec
add
push
or
adc
xorb
pop
sahf
loop
int
mov
in
sub
cmp
iret
jg
icebp
int
sub
fwait
loopne
mov
mov
and
and
pop
jg
mov
push
fildll
stos
outsb
adc
aad
jmp
inc
add
sbb
subl
aas
call
mov
in
std
inc
fwait
cmpsl
xor
stos
scas
dec
adc
push
cmp
movsb
push
xchg
fisubs
jb
ret
scas
repnz
add
or
loope
aaa
fsubrs
test
popa
pop
xchg
dec
rorl
popa
and
test
pop
scas
inc
sbb
int3
lret
lret
fisttps
xlat
add
fcompl
adc
iret
in
icebp
or
daa
lret
idivl
jge
aad
shll
negb
jg
out
popf
sbb
sbb
and
inc
insb
push
push
lods
notb
mov
mov
in
leave
push
pop
or
loopne
loop
sub
aas
xchg
push
out
or
aas
mov
jbe
and
push
aaa
addl
sub
fiaddl
adc
sar
push
or
scas
test
or
addr16
lock
je
xchg
test
dec
push
into
movsl
cmc
addr16
push
push
sbbl
sub
int
pop
xchg
hlt
mov
mov
jo
lcall
decl
inc
hlt
push
in
jg
sub
and
test
pop
pop
or
daa
inc
jg
mov
add
imulb
mov
sahf
cmpsb
in
pop
decb
lea
aam
dec
les
dec
iret
pop
sti
insb
repz
hlt
dec
aaa
fisubrs
ret
xlat
insl
addr16
jno
xchg
mov
mov
add
lea
push
iret
push
clc
inc
adc
mov
cmp
pop
in
rolb
int
mov
xchg
test
out
lea
cmp
addr16
dec
or
xor
retw
mov
aaa
push
sbb
neg
sub
pushf
fwait
sub
push
mov
push
cmpsl
jge
and
ja
sbb
pop
jle
inc
add
add
jae
nop
out
xor
movsb
mov
inc
scas
aas
or
mov
adc
add
es
mov
push
xchg
jns
sti
inc
push
mov
and
cmp
xchg
shll
das
xchg
xchg
add
addl
ror
add
ja
test
imul
mov
daa
adc
sahf
sbb
jo
fdivs
call
into
xorb
addb
dec
ljmp
mov
std
aam
xor
mov
frstor
dec
mov
subb
fwait
push
pop
mov
mov
sahf
pop
jns
and
push
jl
pop
std
add
sbb
into
push
nop
mov
fisttpll
xchg
lret
inc
sub
addr16
push
xchg
pop
jo
gs
mov
pop
or
popf
lods
leave
std
or
cmpsl
mov
les
pop
pop
lock
and
scas
mov
aas
test
out
push
jp
mov
push
xchg
dec
xor
pushf
mov
and
xor
daa
mov
imul
dec
fs
fisubs
fisttpll
xor
cmc
push
mov
js
pop
ljmp
test
aas
sub
jno
arpl
push
xor
push
js
fmull
test
sub
or
inc
fstpl
pusha
out
popf
repnz
sarb
gs
stos
cmp
pop
xchg
mov
dec
rclb
mov
adc
lods
repz
and
fs
pop
jo
mov
fcmovbe
mov
xorb
jecxz
out
rcl
lock
out
sbb
fucomip
rolb
jo
repnz
pop
mov
xchg
scas
pop
mov
jo
leave
cmc
mov
mov
repnz
push
js
push
fsubr
loope
icebp
ja
inc
mov
cld
movsl
pop
out
ds
out
inc
lret
roll
iret
iret
sub
cs
and
js
ds
popf
mov
out
jg
cmpsl
sar
int
in
push
fwait
cwtl
mov
outsb
xchg
mov
repz
aad
dec
outsl
test
sti
mov
mov
sti
cmp
sbb
bound
rolb
outsl
push
xor
xchg
push
cwtl
dec
sub
les
jo
in
sbb
mov
pop
jp
mov
scas
orl
mov
aaa
lahf
push
jb
or
pop
pop
cwtl
mov
jmp
xchg
cmp
inc
xchg
push
cld
sbbb
fiaddl
mov
cmp
data16
mov
faddl
sbb
jmp
xor
movsb
sub
xchg
nop
pop
inc
into
daa
add
addr16
test
std
sbb
je
push
dec
clc
adc
movsb
orb
scas
mov
hlt
sbb
add
rep
das
mov
mov
leave
out
dec
pcmpeqw
dec
mov
xor
and
inc
lahf
bnd
add
imul
imul
sbb
ja
into
test
packsswb
outsb
int3
xchg
roll
xchg
mov
xchg
in
stos
push
pop
mov
inc
lahf
ss
imul
inc
ss
std
out
xchg
jg
inc
sub
loopne
and
and
xchg
aas
out
xor
inc
fldenv
mov
mov
out
hlt
inc
rclb
lea
dec
inc
test
jp
popl
push
out
inc
in
sahf
clc
cmpsl
fs
xchg
push
sahf
dec
add
js
gs
inc
mov
adc
aad
pop
stos
and
and
jecxz
addr16
mov
call
inc
data16
std
inc
je
scas
cmc
mov
test
fdivl
sahf
shr
jbe
mov
clc
inc
inc
fidivs
hlt
das
xchg
rcrb
xor
sub
shl
mov
shll
rorl
jmp
jb
jbe
cld
pop
roll
sbb
sbb
loop
aaa
data16
sub
minps
jecxz
cmp
mov
cli
push
sub
insl
imul
test
hlt
ficoml
repz
add
ds
popa
std
movsl
and
aam
jns
gs
test
dec
test
mov
push
inc
jge
je
outsb
cmpsb
icebp
repnz
das
call
ret
and
cmp
inc
cmp
pop
mov
fstpl
lods
lret
jne
ret
pop
pop
mov
fwait
jbe
mov
pop
aad
repnz
push
stos
cmp
ljmp
call
jnp
cmc
push
popf
scas
cmp
pusha
xchg
aad
mov
insb
cmc
mov
jae
stos
inc
insb
xchg
stc
or
dec
sub
sub
bound
sbb
pop
mov
cmp
mov
cmp
adc
sub
in
push
dec
pop
adc
pop
inc
sub
cmp
fbstp
xchg
movsb
mov
movsl
test
mov
jmp
pop
shr
int3
loope
inc
adc
incl
lds
sahf
notb
jne
icebp
out
sbb
jmp
xchg
jbe
cli
jl
xor
mov
jg
ret
loop
mov
aas
ret
push
sub
fdivl
pop
pop
mov
cmc
add
ret
mov
mov
pop
push
sub
adc
test
fdiv
sub
test
add
pop
out
aaa
test
test
lret
sub
mov
pop
loop
xor
add
push
std
idivw
cmpsl
mov
fs
stc
ficomps
mov
insb
lret
add
or
xlat
fldcw
push
mov
repz
mov
loopne
sbb
push
cmp
cmp
push
pushf
fistl
or
mov
insl
ret
ss
scas
shll
in
and
push
cmp
jae
push
cmp
xchg
xchg
sbb
pusha
inc
push
icebp
loopne
dec
sti
popf
sub
in
cmp
popf
add
daa
cmpsb
cmp
call
and
dec
push
jle
mov
ja
je
dec
inc
add
push
sti
adc
leave
stos
arpl
fucomi
js
inc
jns
jg
cs
xchg
sarb
sbb
cmp
repz
pop
lods
xchg
add
hlt
addr16
pop
mov
popa
sarb
sub
lret
fsubr
in
push
cwtl
or
cwtl
sub
negl
lods
mov
jecxz
ja
ret
jge
mov
in
dec
pusha
fistpll
mov
mov
repnz
shlb
jae
stos
xchg
sub
out
mov
jmp
imul
mov
adc
mov
jae
mov
cmpsl
hlt
jge
inc
xlat
push
jnp
aaa
ss
mov
jnp
subb
lahf
add
push
jae
es
jno
lods
addl
je
jno
dec
loopne
testb
sti
push
push
iret
insl
inc
xlat
lods
nop
jne
dec
jmp
xchg
cmpsl
loope
fcoms
leave
or
loopne
sub
dec
pusha
jl
xchg
insl
xchg
sub
push
dec
in
or
add
stc
xor
and
movb
std
test
rcr
jg
popf
fisttpll
add
fdivl
sub
jge
xchg
stos
mov
mov
mov
xor
test
pop
inc
mov
je
inc
pusha
push
push
lods
mov
outsb
hlt
add
pop
out
lcall
cmc
outsb
lods
jo
adc
jp
jbe
cmp
std
sbb
pop
mov
lock
outsb
lods
xor
sbb
bndldx
xor
daa
lea
and
xchg
js
jnp
inc
dec
mov
xchg
fbstp
sarb
bound
mov
xchg
push
mov
sub
call
and
or
ret
pop
jno
sbb
js
xchg
sbb
inc
fdiv
mov
jecxz
dec
cmp
cli
mov
repnz
addl
sub
add
out
std
ss
aas
xor
fstps
mov
dec
cld
daa
sysexit
fadds
cmp
neg
jae
clc
loop
nop
jg
dec
pop
xlat
vpunpcklwd
push
cmc
jg
test
push
out
leave
arpl
stc
cmp
dec
orb
jbe
dec
loop
imull
jae
push
ret
push
mov
bound
cmp
add
xchg
dec
push
in
mov
pop
push
lret
addb
lock
popa
inc
popa
shll
push
loopne
test
mov
pop
mov
imul
and
out
jb
xchg
or
cltd
ja
pop
outsl
rcrb
mov
mov
xor
into
push
fisubrl
pop
int3
scas
pop
in
pop
addr16
mov
cmp
push
pop
or
push
out
fcomps
ljmp
in
jnp
fstps
shrb
lcall
sbb
sub
adc
mov
pop
cltd
ficomps
jnp
movsb
jno
pushf
jbe
or
rorl
push
xchg
daa
push
adc
mov
sbb
ds
mov
xchg
jae
mov
xor
jns
pop
push
xor
pop
iret
out
test
aaa
mov
mov
jmp
sub
pusha
insb
cmpsl
xchg
shll
lods
xchg
enter
pop
mov
repnz
mov
mov
and
pop
fnsave
mov
push
in
adc
dec
sbb
ja
fdivs
cli
fstpt
in
mov
cmp
into
cwtl
push
insl
cmp
jne
out
ljmp
std
mov
or
sub
mov
dec
insb
mov
in
shr
sub
lods
sahf
mov
fidivrl
inc
testl
cmp
pop
sub
arpl
push
stos
test
mov
push
jae
test
xchg
lret
lret
jns
sub
cli
and
jb
inc
jecxz
xchg
ds
lahf
or
mov
orl
rorl
enter
fwait
lahf
mov
fsubs
adc
mov
push
in
pop
xchg
sub
xor
sub
mov
lods
jb
adc
outsl
mov
dec
mov
sahf
sbb
popa
or
aam
sub
cmpl
xor
aaa
lret
fs
sbb
dec
dec
shl
jg
lcall
push
mov
jle
inc
cmp
ja
dec
les
dec
shrl
push
add
shrl
lods
jb
push
jbe
stos
lods
mov
ljmp
add
add
xor
outsb
or
cli
pop
imul
add
cmp
mov
push
pop
mov
mov
cmp
sbb
sahf
vmovhlps
mov
and
sti
jno
cwtl
jae
js
and
sub
or
and
in
lock
stos
inc
pop
fdivs
test
sahf
call
push
pushf
xor
in
nop
lcall
or
int
sbb
xorl
jle
call
sub
push
lds
dec
cmpb
dec
jno
pop
sub
push
cwtl
mov
mov
push
gs
push
jno
insb
and
ja
addl
xchg
mov
xchg
icebp
js
inc
or
pushl
sub
sbb
xorl
iret
xor
rol
fwait
subb
or
jns
xchg
xchg
mov
icebp
bound
test
cmpl
xchg
xchg
mov
mov
mov
pop
and
sub
lods
push
xchg
inc
aaa
gs
fistpl
test
xor
outsl
fistpll
push
pop
push
fcmovu
out
dec
sub
jge
or
jns
popl
add
sahf
pop
xor
adcl
mov
adc
movb
adcb
and
mov
mov
lock
pop
pop
sbb
xor
mov
adc
mov
movl
xor
add
and
xchg
aaa
adc
xor
shlb
scas
movsb
cli
loopne
push
dec
mov
mov
push
stc
pop
add
loop
cmpl
push
inc
xor
jae
push
andl
pop
test
mov
das
adc
dec
shrb
dec
in
jge
pop
repnz
sbb
ja
jns
mov
cmpsl
ds
ret
lods
xchg
jp
rolb
and
mov
mov
and
repnz
aas
loop
stc
push
test
fldt
rcrl
lahf
cmpsb
loopne
cmp
pop
in
cmpsb
cmp
sub
mov
jbe
nop
lods
inc
mov
testl
jle
push
pop
lea
cli
and
mov
je
enter
inc
inc
push
roll
push
inc
addr16
jnp
push
dec
fnsave
mov
call
sub
sbb
push
push
pop
pushf
testb
cld
pop
mov
inc
mov
and
push
out
in
dec
adc
es
or
ljmp
pop
sti
mov
jno
bound
inc
pop
inc
push
fxch
in
sub
clc
gs
popf
ret
rcll
mov
enter
andb
xchg
adc
and
jae
pop
inc
mov
je
lahf
loopne
repnz
xchg
into
fcompl
inc
and
int3
inc
sarb
pop
lahf
xor
xchg
mov
xchg
adc
pop
out
cmp
aas
bound
dec
in
in
dec
sbb
out
jge
ror
jne
add
jnp
seta
call
xor
jb
popf
mov
cmc
and
sub
xlat
outsb
lahf
dec
push
in
lea
jne
idivl
pop
cmp
int
mov
push
dec
and
pop
bound
add
das
lds
dec
pop
je
and
lret
adc
scas
pop
cwtl
pop
jnp
data16
ja
mov
sbb
leave
in
push
popf
jnp
or
lock
clc
in
dec
sub
or
cli
lods
lds
or
mov
mov
push
pop
or
cwtl
sti
pop
call
sbb
popf
jbe
ljmp
fwait
xchg
data16
icebp
xor
xchg
mov
mov
push
xchg
xor
scas
jl
in
ss
mov
dec
dec
das
rorb
jbe
lods
das
loopne
sbb
dec
scas
idivl
or
iret
or
mov
sub
xchg
sbb
sbb
and
aaa
int3
and
test
sub
lret
mov
adcl
scas
sub
jns
outsl
enter
push
shrb
mov
push
xchg
icebp
mov
jge
shrl
pop
cmp
mov
lds
je
xchg
xchg
loop
aaa
ret
mov
fimull
inc
mov
mov
xchg
adc
insb
or
or
pusha
fcompl
in
shll
testl
cwtl
sub
ret
cmp
mov
xor
dec
fisttpl
sub
fildll
hlt
movsb
stos
in
fists
lret
in
data16
test
xchg
out
test
dec
mov
ss
or
xchg
out
inc
fstps
push
sahf
and
aas
pusha
imul
je
out
cmpsl
or
and
inc
cmpsl
dec
out
andb
xor
movsb
cld
pop
mov
jae
cmp
movsb
add
scas
das
inc
popf
adc
and
scas
mov
mov
inc
push
test
xor
xchg
xchg
inc
fnstenv
les
mov
sbb
int
sbb
fs
push
and
cmp
xchg
int
dec
push
fsubs
imul
mov
mov
outsl
mov
leave
adcl
mov
les
and
mov
inc
lahf
ss
scas
les
mov
dec
mov
lret
dec
cmp
lods
call
shrb
pop
cwtl
xor
pop
xor
cwtl
sahf
gs
sbbl
pop
idivl
aam
mov
data16
push
xchg
ljmp
adc
aad
and
je
mov
add
push
push
cmp
subb
hlt
pop
dec
dec
sbb
or
mov
bound
or
ret
pop
push
or
sub
pop
enter
dec
jge
dec
lahf
out
imul
ds
outsl
push
adc
pop
xchg
adc
int3
sub
mov
push
in
mov
sbb
ljmp
pop
pop
pop
outsl
je
repz
pushf
jns
sub
loop
scas
sbb
cmc
adc
mov
sbb
push
nop
loop
lret
sbb
mov
in
pop
push
mov
mov
les
cmpsl
in
jne
inc
scas
xorb
jae
xchg
sbb
inc
sbb
rcrl
ljmp
cmpb
jp
loop
mov
pop
sub
jge
inc
lea
add
in
leave
insb
sub
outsb
imull
sbb
pop
ret
out
dec
xchg
adc
shrl
insl
data16
popf
push
into
loopne
and
incl
loopne
nop
cmp
testb
cmp
jg
cld
and
mov
shr
or
fstpl
sub
cmpsb
add
pusha
notb
mov
flds
inc
stc
movsb
mov
cli
jecxz
ljmp
push
pop
cmpsl
inc
xor
xchg
inc
inc
outsl
lret
std
cmc
into
pop
mov
iret
jp
push
mov
push
sahf
test
mov
push
popf
out
adc
or
orl
cmp
or
pop
cmp
xchg
xor
insb
jg
push
aad
xchg
js
inc
repnz
add
xor
adc
pushl
mov
cli
jg
adc
loop
xchg
filds
inc
sbb
popa
psubw
out
xchg
sbb
cmp
pop
and
adc
mov
adc
out
loop
mov
push
dec
xor
nop
daa
clc
decb
sbb
call
test
out
orl
fstpt
push
fidivl
outsl
jns
sbb
pushf
and
mov
inc
lret
enter
or
jge
js
cmpsl
xchg
or
cs
inc
std
pop
ja
sub
fldl
outsb
add
test
lods
in
test
repz
out
add
aad
leave
insb
inc
testb
mov
ficomps
sub
cmp
push
incb
dec
inc
push
call
mov
out
scas
jo
test
push
xlat
leave
into
pop
out
xchg
pop
lea
cmp
sub
and
cs
mov
stc
xchg
mov
daa
adc
mov
mov
roll
dec
push
cmp
jl
subl
ret
or
test
push
pop
aaa
or
call
loopne
and
clc
add
js
adc
push
and
mov
cld
repnz
loope
clc
adc
jae
ljmp
xor
vmread
inc
sub
into
push
jge
lcall
sbbb
imul
inc
into
outsl
fsubr
adc
aaa
lock
inc
popf
stc
inc
inc
mov
mov
arpl
int3
mov
cmp
pop
lds
mov
insb
add
push
or
addr16
mov
and
xlat
sbb
je
cmpsl
jg
aad
jle
data16
orb
test
outsl
repnz
rcrl
addb
outsl
and
push
loop
cmpb
lcall
jp
dec
scas
dec
movsl
mov
pop
mov
jmp
pop
mov
push
sbbb
mov
xchg
jo
mov
dec
fmuls
pop
rcll
mov
add
test
loope
xor
push
sub
cs
loop
jo
or
adcb
mov
lcall
push
test
imul
xchg
aas
fs
mov
int
int
int
divb
and
fstpl
iret
adc
jne
cmp
inc
into
pop
cmp
scas
inc
push
push
pop
adcl
xor
mov
lret
jb
sub
inc
and
movsl
pop
jno
out
js
or
jns
sti
popf
pop
dec
les
fnstenv
int
cmpsb
inc
lock
fcomps
xlat
call
sub
andl
negl
fwait
cmp
or
ja
xor
insl
and
idivl
jg
mov
lret
adc
movsl
mov
js
dec
mov
in
mov
test
rcrl
push
mov
and
test
aam
test
dec
dec
imul
jl
inc
push
pushf
jno
mov
shrl
add
aas
dec
xlat
outsb
jge
lock
lods
and
dec
xlat
repz
and
adc
jnp
mov
in
repz
dec
clc
fstpl
popa
int3
fisubrs
dec
add
push
ret
mov
test
fsubrp
cmp
mov
jl
xchg
mov
mov
mov
pop
xchg
repnz
mov
mov
push
xor
aaa
adc
arpl
shrb
shl
aaa
xchg
push
push
out
jb
or
lds
push
xor
xor
jbe
xchg
outsb
add
addr16
in
out
dec
mov
mov
jl
stos
icebp
mov
mov
xchg
jl,pn
add
test
cmpsl
mov
sbb
icebp
jbe
xchg
jmp
enter
sub
pop
in
ror
jo
imul
sub
mov
insl
mov
xor
call
loop
dec
in
andb
fxch
in
mov
adc
es
fwait
cmp
das
jnp
xor
ds
mov
lods
mov
jo
test
sbb
test
pop
dec
inc
ds
xor
inc
sbb
les
shrb
jecxz
inc
adc
mov
rclb
dec
insl
mov
filds
and
stc
sub
out
or
xlat
mov
int3
push
shrl
mov
push
pushl
sbb
lret
in
fdiv
cmp
adc
xchg
xchg
pop
mov
dec
mov
es
lahf
test
data16
xor
jbe
aaa
in
mov
mov
lods
inc
pop
pop
aam
add
fsubs
push
sub
adc
insb
sbb
arpl
repnz
sbb
sub
lea
sbb
pushf
cli
movsb
mov
fs
lea
leave
rcl
testl
daa
lods
test
dec
test
cmp
in
dec
inc
and
je
cmpsl
push
psrlq
bound
mov
xchg
and
shll
mov
or
aas
xor
negb
test
jb
pusha
jl
sahf
sbb
adcl
cmp
xchg
ret
hlt
mov
ss
out
and
out
mov
adc
sbb
sub
dec
sub
or
les
mov
fistpll
push
add
lret
push
call
jmp
mov
sub
jge
mov
pop
lret
cli
adc
add
inc
test
dec
and
fcomp
mov
movsl
ret
pop
insb
push
insb
insl
js
pop
cmp
icebp
inc
cmc
cmp
movsl
mov
pop
cmp
xchg
cltd
add
cmp
dec
lods
sahf
sub
adc
cmp
lret
fbstp
mov
test
subb
test
ja
out
js
stc
mov
xor
add
jecxz
movsb
stc
aam
insb
xor
cli
icebp
jge
scas
push
cltd
xor
inc
scas
call
mov
lret
sbb
adc
push
bound
sub
push
or
movsb
mov
stc
lea
aam
popf
add
pop
and
push
lods
mov
dec
xchg
test
loopne
push
sbb
out
sbb
add
mov
popl
and
out
test
push
stos
mov
or
pop
fs
loope
les
add
call
in
push
sbb
inc
inc
lock
aaa
int
lret
cmpsl
out
inc
pushf
out
adc
popl
leave
movsl
cmp
push
dec
jecxz
xchg
ljmp
mov
mov
xchg
andl
jmp
rclb
test
xor
arpl
sub
mov
fisttpll
and
test
daa
in
cmp
int
aad
mov
shl
aas
pop
cmpsl
in
mov
mov
sub
lret
test
je
outsl
mov
adc
iret
fistl
inc
mov
cld
push
sub
ret
mov
les
aas
aad
xchg
adc
adc
xchg
bound
mov
dec
sbb
cwtl
stos
xchg
js
cld
pop
movl
pusha
outsb
ds
mov
jbe
sbb
mov
mov
nop
jle
rcrb
push
div
jge
gs
shrl
mov
push
insl
mov
xchg
repnz
pop
test
adc
test
add
or
dec
push
std
inc
push
cmp
inc
sti
sbb
sbb
test
pop
int3
cmpsb
jnp
xchg
cs
pop
mov
cltd
mov
inc
fdivrs
or
mov
pop
ret
shrb
adc
pop
aam
daa
dec
mov
stc
lods
xchg
lods
es
out
mov
cli
sbb
pop
mov
jl
jecxz
pusha
and
and
mov
movsb
cmp
out
mov
sbb
leave
movsl
repnz
cs
pop
sub
scas
mov
out
push
je
push
jbe
dec
mov
mov
paddq
jno
inc
leave
sarb
adc
into
scas
cs
shl
jecxz
and
daa
push
xchg
sub
pop
repnz
ret
mov
xchg
dec
push
call
mov
roll
jg
cwtl
in
push
movsl
push
xor
and
sub
xor
sbb
pop
push
mov
push
jo
rorl
les
stos
out
xchg
fs
test
dec
xor
pop
jbe
mov
adc
outsb
mov
mov
int3
ficomps
adcb
lret
jnp
lret
lods
sub
push
jmp
sbb
orb
test
ficomps
sti
fwait
stos
add
adc
sub
movswl
and
pop
push
mov
xchg
lcall
and
lret
push
iret
bound
jo
loop
dec
and
xchg
and
pop
cmc
cmpsl
cltd
mov
mov
or
and
in
loop
insl
cltd
jg
jnp
lds
jge
sbb
clc
mov
lea
fistl
ror
sub
dec
leave
int
push
hlt
sbb
dec
jl
pop
jno
std
stos
pop
jns
sbb
pop
sbb
sbb
lretw
inc
call
xor
jo
push
popa
push
icebp
xchg
lret
jle
or
and
scas
or
dec
mov
lahf
push
pop
into
xlat
cmp
push
and
ds
repz
push
push
add
sbb
jne
mov
fwait
push
hlt
inc
rcl
je
add
mov
bound
pop
push
jns
test
jg
adc
hlt
xchg
data16
shl
xchg
adc
dec
nop
jae
jmp
mov
ljmp
jno
stos
dec
in
stos
xchg
mov
mov
fadds
xchg
add
dec
add
sbb
imul
push
ss
outsb
dec
and
mov
jb
mov
clc
or
dec
and
fs
pop
adc
mov
scas
inc
cmp
mov
mov
xor
add
or
xor
jbe
inc
out
mov
outsb
or
outsb
out
lds
mov
daa
orb
out
dec
mov
mov
sahf
mov
fisubl
xor
and
shll
aaa
subl
lods
pop
cmp
add
xchg
setp
jns
push
fs
pop
xchg
jne
or
aas
nop
xchg
imul
sbb
sbb
dec
mov
and
jle
out
in
jmp
push
int3
dec
int
lcall
and
incl
push
jns
push
inc
sarl
scas
les
imul
inc
xlat
bswap
jbe
lods
and
lar
sub
sub
fstpl
std
cmpsb
sbb
mov
sbb
or
aam
push
ds
outsb
jb
loopne
cmp
xchg
sub
inc
pusha
ret
and
and
inc
cmp
jg
push
mov
mov
addw
sbb
pop
and
cmc
dec
cltd
testb
out
adc
cwtl
inc
jb
dec
scas
popa
pop
mov
shlb
ret
sbb
stos
jae
pushf
gs
sbb
mov
sub
orl
pop
push
jae
mov
add
stos
add
popf
stos
stos
mov
out
jecxz
insl
pushl
dec
pop
loopnew
pop
cmp
lea
cli
movsb
icebp
cmp
adc
imul
inc
mov
out
loope
xchg
add
sub
pop
mov
int
rol
test
insl
mov
shrb
jmp
sbb
vpsraw
call
or
sahf
cmp
pusha
decb
scas
jg
lock
std
mov
cmpsb
cmp
mov
les
or
or
and
xor
mov
fisttpll
mov
mov
stos
sbb
mov
fucomp
dec
xchg
inc
fimuls
xor
mov
or
adc
adc
movsb
insl
pusha
js
insl
jno
pop
lock
pop
or
jl
sub
adc
lretw
pop
inc
pushf
mov
push
or
dec
jns
lds
pop
test
inc
movsb
xor
add
push
jecxz
stos
adc
mov
enter
pop
cmp
dec
dec
hlt
pop
loopne
mov
push
movsl
ficomps
rol
lods
aaa
ja
aad
jne
mov
dec
jo
loope
insl
sbb
add
imul
inc
add
test
int
sbb
incl
mov
xchg
daa
les
jbe
pop
mov
aad
test
dec
sbb
in
fwait
push
lret
bound
mov
popf
cld
or
mov
xor
daa
divl
cmp
pop
ja
adc
mov
push
out
push
mov
jbe
cmp
jo
sbb
push
lret
xchg
jmp
aas
sub
dec
les
movsl
movsl
aad
in
lahf
ss
jnp
repz
pop
or
cmpsl
dec
dec
sbb
push
dec
jg
dec
fsubs
xchg
sub
push
fcomps
mov
arpl
and
add
adc
xchg
loopne
add
lds
pop
in
inc
mov
shll
fwait
add
mov
mov
adc
dec
sub
jge
call
jl
adc
outsl
push
xor
in
movsl
or
and
ret
adc
ljmp
sti
push
sarb
int3
out
fwait
mov
sbb
repz
icebp
adc
adc
mov
jbe
sbb
addr16
in
les
xlat
adc
jo
jge
test
in
mov
in
or
add
xchg
cmpsl
jle
pushf
xor
mov
test
dec
in
and
fiaddl
icebp
jo
sub
inc
scas
or
mov
mov
cmp
loopne
movsb
and
icebp
xchg
sbb
cmp
and
mov
clc
and
mov
mul
jecxz
fcoms
cld
mov
pop
jg
jae
xorb
jnp
fists
pop
xor
xlat
or
dec
sub
mov
fisttpl
push
xchg
pop
stos
and
hlt
shll
imul
js
sub
fidivl
lock
mov
lahf
call
dec
cmp
pop
jno
mov
push
out
cmc
cmp
dec
push
outsb
add
sub
mov
bound
xchg
jne
or
or
test
or
mov
dec
adc
sbb
sbb
lcall
pop
in
scas
arpl
fidivrs
sub
cmp
stos
xchg
xchg
push
bound
mov
ret
or
scas
fstps
outsl
or
rcrb
mov
clc
sbb
imul
xor
testb
push
rcrb
clc
repnz
and
xor
lds
sbb
xor
leave
adc
aaa
pop
mov
in
inc
loopne
pop
in
iret
xchg
sarb
push
pop
imul
sub
fcoml
xor
push
test
sub
mov
add
leave
stos
gs
popa
xchg
lret
inc
clc
jmp
scas
cld
xchg
test
lds
and
sub
in
test
shlb
xor
xor
shrb
cwtl
sub
pushf
hlt
int3
dec
fstpl
mov
jno
mov
out
rcrb
push
mov
popa
aad
rcl
cs
add
out
cs
pusha
ss
testb
clc
jge
movb
daa
repnz
push
addr16
testl
aas
loope
push
or
add
sbb
or
and
ss
lods
sarl
notb
push
sbb
jo
adc
adcl
lcall
sbb
sar
pop
test
push
add
out
inc
cmp
ror
mov
loopne
lods
sbb
lret
lahf
cli
push
movsl
sub
jb
fistpl
sub
xorl
rcll
test
mov
lds
andb
pop
sub
fnstcw
adc
fistl
incb
mov
rorb
jp
pop
addb
repz
sub
inc
aam
pop
in
loop
push
outsl
xor
pop
mov
rolb
inc
imul
push
mov
mov
lds
mov
insb
xor
inc
arpl
jno
aaa
jecxz
jns
jbe
add
in
push
mov
inc
mov
mov
int
pop
test
dec
xchg
jmp
inc
push
imul
push
rcrb
mov
mov
push
mov
stos
cwtl
insb
push
xlat
lea
sub
sub
adc
ljmp
fadd
inc
lds
cmpsl
push
insl
lods
pop
pop
lret
pop
cmc
sti
cmp
mov
push
sub
lock
std
cli
jae
test
lret
push
popf
push
or
test
mov
dec
inc
mov
sbb
cs
lods
and
pop
add
or
add
sub
popa
xor
push
push
push
insb
add
bound
inc
pop
xor
cmp
outsb
add
imul
mov
popf
mov
aad
shl
js
cltd
and
std
dec
js
shll
push
pop
jg
mov
fwait
push
cmp
and
sub
add
lea
cmp
jle
scas
movsl
or
xchg
inc
insl
inc
repnz
aaa
and
jge
dec
push
ja
push
sub
push
inc
pop
scas
or
pop
cmpsb
jge
xchg
mov
je
cmp
xlat
gs
decb
fbld
pop
sbb
mov
jnp
repnz
xor
repz
xchg
pop
daa
jle
xchg
mov
jg
repnz
jge
movsl
push
fsubrs
push
cmp
jne
sub
lret
loop
jp
mov
cmp
pop
rcl
push
loope
arpl
inc
mov
stos
inc
jbe
add
push
cmp
push
divl
jbe
or
mov
fbstp
adc
mov
cltd
mov
sbb
pop
loop
mov
dec
je
notb
xchg
aam
dec
lret
aas
add
add
inc
and
int3
pop
fcoms
jo
xor
stos
outsl
popa
idivb
cmp
push
sahf
pusha
push
icebp
mov
sbb
xlat
xor
dec
push
sahf
jecxz
shlb
inc
addr16
in
or
mov
fldenv
dec
out
cmp
sub
aad
mov
ret
js
iret
pop
xor
shrl
inc
fsub
je
mov
std
nop
test
int
pop
fiaddl
inc
lahf
mov
push
decb
xchg
enter
jnp
or
jge
ss
mov
xchg
sub
mov
mov
negb
lret
sbb
xchg
fimuls
gs
mov
movsl
mov
push
jnp
ss
clc
pop
xor
adc
inc
shlb
fmull
fidivs
jnp
ja
xchg
sub
rolb
dec
push
pop
test
add
clc
es
mov
test
xor
inc
and
pop
fidivl
inc
lahf
xor
fidivrl
movsl
daa
xlat
sub
or
insl
xor
scas
cmp
scas
xlat
push
je
add
rolb
shlb
cmc
push
fstp
mov
movsb
mov
xor
jge
in
jl
frstor
enter
jo
xchg
mov
movsb
mov
sbb
push
sbb
arpl
hlt
orb
jbe,pt
sub
sbb
aaa
pop
movsb
or
movsb
xor
jp
adc
ljmp
jno
sarb
mov
test
inc
push
pop
inc
sbb
nop
adc
addr16
loopne
xor
data16
mov
pop
enter
xor
ja
jbe
test
test
adc
mov
sub
inc
push
hlt
sbb
dec
es
inc
sbb
sub
lock
in
xchg
aaa
mov
mov
jmp
popa
loope
pop
into
roll
adc
adc
mov
ljmp
repnz
cmp
jge
pop
cmp
into
pop
mov
push
cmc
add
dec
cmp
and
and
sbb
in
push
les
jecxz
mov
les
xchg
insb
adc
xor
push
xor
fldl
or
and
and
jp
fisubrs
and
lea
repnz
inc
loope
lds
outsb
mov
in
cmp
inc
shrl
mov
icebp
imul
and
push
push
xor
sub
dec
loop
mov
imul
loop
add
adc
ret
dec
pop
xor
sbb
fidivs
les
in
sub
push
out
lock
scas
xor
outsb
sub
lock
push
dec
sub
inc
cmp
mov
stos
loope
hlt
es
xor
imul
aad
mov
pop
repnz
fs
sub
sti
mov
add
sbb
inc
daa
mov
push
scas
xor
shl
ljmp
test
and
iret
adc
scas
bnd
scas
inc
fnstsw
or
sub
inc
sahf
add
jne
cmp
xchg
adc
sbb
inc
sub
sar
icebp
sbb
or
out
mov
mov
imul
inc
xor
into
in
push
cltd
arpl
or
sub
rcrl
add
cli
push
inc
pushf
sbb
out
subl
push
sub
add
pop
sub
in
stos
scas
add
popf
lods
dec
js
aas
ret
stos
in
test
xchg
push
int3
aad
icebp
data16
or
mov
mov
popa
cs
sbb
rolb
incb
lret
sbb
push
movsl
rcrb
out
push
loope
mov
sub
or
cltd
inc
call
mov
dec
xor
pop
cmp
bound
shl
and
sbb
mov
test
sti
mov
add
int
sahf
sbb
pop
shll
fimuls
lds
test
hlt
test
adc
push
cmp
xchg
sub
arpl
mov
xchg
or
jns
add
mov
insb
ret
mov
jne
sub
add
scas
sub
add
inc
cltd
adc
leave
test
nop
push
cmp
sbb
push
fwait
mov
std
xor
jmp
push
mov
jle
movsl
push
scas
sbb
sbb
js
incb
subl
xor
in
pop
and
leave
enter
scas
xchg
sgdtl
hlt
mov
std
and
js
pop
scas
inc
push
repz
xor
or
xor
and
sub
jbe
fs
xor
mov
or
dec
inc
loope
daa
xchg
mov
mov
mov
cli
xchg
cmp
mov
sub
fnstsw
out
xor
sub
cwtl
sahf
jne
xchg
cmp
ja
jo
insb
jcxz
mov
dec
outsb
sarb
xor
popf
jg
push
leave
icebp
divb
mov
mov
push
pmaxub
data16
jno
sahf
mov
add
jno
lock
pop
xor
inc
dec
rcr
push
insb
cmpsb
dec
add
imul
adc
inc
sbb
aam
and
jecxz
aad
aas
inc
pop
push
push
les
adc
test
xchg
lea
loope
movsb
sbb
and
push
out
insb
sbb
add
push
push
insl
orl
jg
rorb
ds
and
or
rcr
xor
je
stos
jbe
dec
mov
xor
daa
lds
cmpsl
mov
mov
outsb
cmc
mov
dec
mov
aaa
or
cmp
cltd
inc
sbb
vcvtdq2ps
mov
or
inc
add
inc
in
cld
xchg
and
sarb
sbb
nop
test
ret
loopne
inc
pop
stos
add
xor
imul
and
lods
pop
dec
xchg
das
xor
cltd
sub
adc
je
xlat
outsb
test
push
stos
mov
pop
rolb
cmpsl
cmp
pop
cmp
aad
xchg
aas
mov
in
fucomp
adc
sub
dec
dec
pop
fsubrl
movsb
cmp
adc
jmp
mov
push
or
mov
aam
add
movsl
cmp
jg
fcoml
adc
mov
inc
arpl
sbb
mov
pushf
pop
scas
mov
jmp
pop
xchg
dec
clc
inc
int3
fcmove
arpl
inc
cwtl
filds
clc
xorb
testb
outsl
rcrb
xor
ja
mov
push
out
adc
inc
shrl
insb
adc
xchg
mov
pop
out
xor
add
dec
mov
mov
sbb
je
cmp
pop
mov
cmpsl
add
sarl
test
mov
fists
insb
shl
pop
jmp
sbb
push
in
scas
or
enter
imul
add
les
sbbb
in
mov
xor
pop
repnz
into
or
pop
inc
shrl
sbb
rcll
es
pop
push
lods
inc
ja
stc
nop
leave
hlt
jge
jmp
insl
mov
pusha
jnp
clc
imul
xchg
sub
lahf
sub
or
enter
enter
xor
mov
xor
mov
xor
dec
inc
daa
dec
loope
add
data16
push
jmp
loop
arpl
nop
pop
outsb
inc
xor
cmp
insl
xor
inc
sbb
push
mov
or
test
mov
sbb
mov
shll
icebp
mov
ret
mov
ljmp
andl
inc
and
mov
shrl
xchg
rol
lcall
cmpsb
pop
inc
mov
aam
xchg
dec
push
mov
shlb
shlb
xor
push
sar
or
imul
shl
dec
clc
inc
cmpsl
movsb
jl
mov
int
inc
cs
mov
xor
icebp
dec
xchg
repnz
lret
cltd
imul
inc
mov
mov
and
lcall
ret
sub
hlt
sbb
xor
pop
push
mov
adc
pop
adc
nop
or
adc
lods
xor
shr
cli
mov
mov
jmp
cmp
adc
pushf
dec
std
dec
pop
inc
loope
mov
sbb
adc
jg
rol
arpl
ss
lods
cmp
fcomip
mov
out
popf
xchg
or
jg
mov
cmp
mov
sub
cmpsb
aam
cmpb
jp
mov
out
mov
outsw
add
aad
loopne
jae
shll
mov
mov
jns
fucomp
jnp
sti
inc
int
js
adc
adc
pcmpeqd
lock
or
into
sbb
and
into
pop
aas
out
mov
outsb
in
or
mov
dec
push
test
sarl
mov
les
cmc
and
push
sahf
shl
outsl
inc
push
jns
jne
push
cld
jo
inc
fstps
stos
cmp
jns
jne
mov
imul
pop
into
xchg
sub
inc
in
sub
xor
mov
xor
outsb
movsl
test
jbe
insb
inc
sbbb
or
test
jle
aas
pop
rcrl
popa
pushf
jae
aad
data16
xchg
pop
sti
pop
dec
insb
mov
fdivl
call
fucomp
insb
dec
or
mov
orb
mov
cmp
rclb
xor
and
inc
mov
orb
into
xchg
ror
std
insb
dec
in
push
mov
add
sbb
int
ds
and
fldenv
lea
pop
push
xor
adc
rcrl
mov
sub
pushf
inc
mov
inc
fnstcw
jmp
lea
or
pushf
mov
push
sub
repnz
int
loop
push
cmp
mov
cmp
dec
pop
lock
adc
sbbl
je
jo
mov
imul
mov
or
test
sti
mov
jl
es
xchg
sbb
and
ja
notl
bound
je
dec
sahf
cli
pop
int
and
mov
pushf
adc
int
cmp
testl
pop
xor
inc
sbb
fcomps
gs
fbstp
mov
std
xchg
sar
loope
insb
sub
rcrb
inc
xlat
icebp
cltd
jmp
jo
mov
insb
adc
xor
cltd
cmp
shll
popa
cmp
inc
aaa
cmpsl
dec
adc
xchg
cmpsl
bound
lret
jmp
mov
fimuls
loopne
bt
or
addr16
xor
lea
mull
lcall
int
jb
jl
shr
insl
inc
mov
cmp
push
ljmp
jb
dec
and
lcall
mov
mov
push
jns
add
mov
sub
repz
dec
pop
sub
adc
jns
xor
gs
jbe
xor
sub
lods
mov
orb
mov
and
jno
cmc
mul
sahf
sbb
mov
fisubrs
lret
push
jmp
xchg
imul
enter
cmp
xchg
sahf
inc
or
cmp
sbb
push
jb
cmp
pop
test
xlat
cmc
sub
dec
lcall
xlat
in
scas
sti
into
xchg
inc
mov
int
jo
jne
bound
inc
test
bnd
out
pushf
test
cli
out
mov
movsl
xor
scas
mov
or
fistl
stc
adc
pop
repnz
popf
sub
movsl
dec
and
clc
inc
iret
add
sbb
test
mov
jp
lahf
ret
jnp
xor
sub
cs
fwait
pop
push
imul
sbb
and
sub
sbb
popf
dec
xchg
inc
or
insl
xor
lea
hlt
push
or
out
push
xor
adc
mov
lret
sbb
daa
rcrb
lods
into
int
ret
jp
lcall
clc
fists
push
jmp
cmc
sub
cmp
sub
shll
push
add
in
jle
sbb
out
cld
popf
xchg
lahf
lods
into
cmc
incb
int
xchg
mov
ljmp
cmp
push
jbe
sub
push
cmpsb
stos
add
mov
add
fisttps
aaa
or
mov
lea
mulb
mov
adc
pusha
fistpl
rorb
mov
adc
push
push
imul
sbb
push
repz
popa
loopne,pn
push
and
push
xor
jno
andl
flds
jp
stos
and
or
movsl
scas
xchg
outsl
aam
in
cld
add
or
iret
mov
jecxz
mov
and
cltd
sahf
aam
adc
movsb
shll
jae
inc
aad
imul
fsubl
and
lret
insl
and
add
jb
xor
fsub
mov
xor
add
imul
pop
scas
lret
adcb
mov
inc
andb
ficomps
addr16
andb
enter
xor
int3
xchg
cmp
fidivl
imul
pop
pusha
dec
ret
orl
shll
adc
jp
ss
cmpsb
mov
cmc
xor
es
in
subl
lret
int3
adc
in
bound
shlb
push
icebp
xorb
sarl
bnd
stos
xchg
dec
lods
decb
mov
movsb
inc
mov
inc
jne
ror
fs
cld
lcall
pop
push
ret
mov
sarb
cltd
test
loopne
mov
repnz
fidivs
ret
and
push
mov
sub
inc
sbbb
sbb
add
and
rclb
adc
stc
xchg
mulb
pop
jae
push
sub
test
inc
andl
jnp
sbb
pop
adc
lahf
das
jne
outsb
xor
sub
push
cmpsb
leave
pusha
fdivs
and
jle
xchg
insb
xchg
hlt
xchg
jp
sbb
cmp
fnstcw
pop
cwtl
decl
js
xlat
repz
fimuls
jnp
das
dec
es
mov
fldcw
fists
mov
incl
ret
mov
dec
rcll
sbb
inc
test
sbb
mov
jae
jp
mov
popa
shrl
inc
mov
ds
sbb
mov
adc
and
cmpsl
push
xor
lods
dec
inc
sbb
leave
hlt
adc
mov
call
sub
push
cltd
cmp
faddp
xchg
in
dec
sti
mov
dec
sbb
xchg
pop
outsl
mov
es
nop
into
or
adc
adc
add
jp
sbb
jle
ret
jp
jecxz
mov
bound
push
jmp
call
jp
flds
enter
ret
inc
cwtl
push
cmc
mov
adc
inc
and
add
mov
stos
test
pop
cmc
push
int
dec
addr16
push
in
pop
jecxz
add
sub
mov
bnd
mov
push
and
push
js
mov
jo
outsl
push
cmp
lea
jl
pop
repz
lahf
sahf
test
jp
daa
mov
mov
cwtl
loope
push
mov
jbe
push
les
stos
jge
dec
mov
pop
inc
mov
and
inc
gs
loopne
mov
das
ret
loope
in
mov
iret
adc
fcomi
mov
sbb
rcr
pop
pushf
hlt
mov
xor
dec
dec
and
dec
fsub
ds
mov
xchg
aam
mov
sarl
dec
cmp
movsl
jo
ds
xchg
xor
sub
jbe
out
inc
mov
dec
aas
fwait
jge
andb
and
sbb
loope
mov
mov
jecxz
mov
jge
xlat
push
push
sahf
lds
cld
xchg
mov
jb
arpl
pop
cmp
aaa
dec
push
sbb
jo
fldt
mov
jmp
sbb
pop
lock
mov
notb
sti
aas
or
push
js
repnz
push
je
adc
repz
test
repnz
rorb
cmp
push
mov
fucom
add
rolb
fnstenv
lret
or
je
ret
pop
roll
clc
pop
enter
xchg
inc
xlat
adc
cmp
pusha
pop
insl
sbb
sub
xorl
mov
push
pusha
addb
pop
jmp
insl
push
lret
mov
dec
dec
mov
mov
sub
into
mov
ss
imul
xchg
jecxz
leave
scas
mov
sbb
mov
out
mov
mov
dec
sbb
out
jnp
data16
sub
xor
mov
or
aad
adc
iret
dec
xor
dec
push
cmp
jb
ja
cmpsl
xor
ds
xchg
lods
jle
mov
shlb
mov
push
xchg
loope
push
fsubrs
iret
pop
jle
loop
scas
adc
xor
cmc
mov
sarl
mov
loop
jle
xorb
or
sbb
int
out
cmc
jp
jg
cltd
sbb
sti
dec
call
scas
inc
adc
fnstenv
mov
fs
js
test
cmpsb
inc
lock
inc
sub
jmp
xchg
add
xchg
mov
dec
adc
cmpsl
shll
aaa
cwtl
leave
mov
scas
nop
iret
pusha
mov
or
aas
push
shlb
stos
push
loope
cmpsb
pushf
push
movsl
sbb
out
xor
stos
jns
dec
push
mov
daa
dec
fsubs
push
shl
out
xchg
loopne
pop
sub
adc
sbb
jns
xor
pop
inc
jmp
add
dec
je
add
jmp
das
mov
popa
jp
jmp
mov
into
mov
xchg
stc
lahf
and
xor
xchg
mov
inc
cmp
mov
mov
jg
xor
push
dec
out
aaa
xor
jg
fmul
lret
adc
imul
jb
and
test
in
lcall
inc
icebp
mov
xor
frstor
ret
mov
xor
xlat
and
imul
push
and
cmpsl
jb
jbe
xchg
stos
inc
push
test
call
aam
add
jl
jo
divb
sbb
outsb
push
gs
loopne
push
xchg
cs
xor
push
cmp
mov
and
pop
ljmp
stos
insl
imul
xor
pop
aam
inc
shl
loope
pop
fistpl
pop
loope
ja
popa
sbb
jne
repnz
cmp
pusha
std
mov
pop
daa
popf
cmpsl
adc
and
cmp
pop
imul
jo
cwtl
mov
sbb
ret
sub
inc
dec
imul
mov
and
pop
adc
inc
insl
gs
daa
mov
inc
pop
inc
pop
cmp
cmp
out
and
add
daa
popf
sub
mov
cmpsb
addl
std
lock
fwait
jo
int
testb
adc
loope
popf
xor
jp
fsubl
mov
jb
test
leave
sub
fildll
mov
lcall
imul
test
inc
mov
repnz
xor
lock
fmull
sbb
out
jl
nop
repnz
pop
cmpsl
in
sub
es
das
add
sbb
aas
test
aam
test
mov
das
rolb
add
push
sub
mov
push
xchg
lock
fs
mov
xchg
sub
lret
sbb
aaa
pop
iret
loope
mov
les
outsl
and
jbe
cli
scas
mov
adc
xchg
sub
xor
lcall
jl
arpl
push
lock
ret
mov
enter
scas
call
mov
jmp
or
mulb
cmpsl
sub
out
dec
push
lret
in
xchg
jmp
or
adc
popf
and
mov
test
mov
arpl
popa
push
jmp
cli
data16
xor
cmp
add
inc
call
pop
repz
cltd
and
add
push
push
addl
iret
mov
dec
bound
mov
sbb
jmp
jns
sbb
push
insb
mov
sahf
jbe
out
cmp
add
jbe
repnz
and
jp
xor
test
adc
sub
testl
idivb
push
leave
pop
lahf
pop
inc
push
mov
rcll
pop
outsl
fs
add
divb
ret
das
hlt
or
sub
adc
push
das
test
ret
std
cltd
cmpsl
cmp
mov
jle
imul
ds
sbb
xchg
jns
jl
test
xor
mov
adc
fcomip
mov
gs
or
mov
je
adc
inc
or
cmpsb
inc
dec
fsubr
shrl
mov
inc
mov
mov
or
les
mov
jb
fistl
jae
xor
xchg
mov
lret
jae
xor
xchg
jl
xchg
add
mov
repnz
pop
shl
daa
mov
arpl
in
call
cmp
test
inc
xchg
inc
pop
aaa
out
stc
nop
and
pop
out
adc
fstpl
xchg
mov
ret
dec
cmc
out
dec
mov
pop
test
enter
mov
jecxz
jnp
mov
push
mov
jge
mov
jl
or
push
lret
or
cmpsl
clc
pop
fdiv
in
jns
stc
push
cmpsb
push
push
adc
and
outsb
push
insb
push
jmp
inc
sub
aas
inc
xchg
mov
xchg
adc
push
inc
popf
scas
xchg
loopne
fnsave
shl
push
xor
popa
xor
xchg
mov
out
roll
mov
shll
gs
repz
pop
dec
mov
popl
imul
int
or
test
push
push
jmp
enter
cmpsb
les
int3
adc
jae
cltd
jo
xchg
cmp
cli
adc
add
dec
lock
clc
cltd
and
add
out
int
aas
jge
push
not
shlb
lods
les
pop
clc
in
jecxz
test
mov
jl
outsl
pop
icebp
loope
subl
pop
movzbl
xchg
lcall
adc
iret
adc
push
fwait
xchg
or
adc
testb
call
adcb
cmp
push
mov
xor
add
pop
mov
mov
dec
test
push
adc
je
mov
jo
mov
xor
mov
sbb
cmp
push
mov
sarl
shll
movb
pop
mov
mov
insl
cmp
sahf
or
mov
sbbb
pop
in
and
stos
test
add
lea
in
lret
scas
lods
std
fdivr
xchg
cmp
cmp
je
jo
icebp
jl
mov
arpl
cli
or
jge
inc
sub
insl
push
rcl
scas
jecxz
cltd
shl
ret
or
repz
fisttps
hlt
aaa
rcl
sbb
lea
pop
jne
and
push
sbb
stos
sub
dec
repz
cmp
in
adc
push
sub
sahf
inc
mov
js
stos
sbb
dec
cmovns
cmp
in
sahf
and
aaa
pop
lods
imul
push
sub
js
jl
enter
jbe
mov
out
mov
je
mov
lock
jmp
out
rcrb
into
faddl
jge
bound
push
or
cmp
dec
fisubs
not
mov
loope
gs
add
xchg
sub
adc
imulb
daa
xor
hlt
xchg
lds
xchg
xor
jecxz
push
sbb
cltd
and
out
lcall
vpsubd
dec
sbb
inc
out
inc
insw
fstl
aas
mov
faddl
mov
add
pop
xchg
adc
loopne
clc
mov
add
into
ljmp
fiadds
sbb
push
and
jg
add
push
and
mov
cmp
mov
and
pop
insl
or
adc
enter
test
xor
ficoml
adcb
imul
sysret
lea
adc
shlb
ret
pop
cmc
pop
and
cmpb
fwait
pop
loop
xor
jnp
and
inc
or
imul
lea
mov
iret
in
insl
push
sub
jbe
sub
stos
stos
jle
jns
jle
xchg
sub
pop
mov
push
inc
sbb
adc
pop
cmp
sub
push
dec
sub
divb
insl
sahf
imul
testb
imul
and
inc
std
rcll
xor
lahf
pop
jns
daa
xor
enter
loopne
rep
add
or
lds
aad
pusha
notl
and
pop
loop
xlat
and
xlat
stos
int3
das
jp
fs
mov
add
pushf
mov
xchg
pop
movsl
add
adc
mov
lods
cmp
fwait
jb
push
jl
enter
inc
sbb
sahf
fisttpll
and
idivb
lret
es
mov
lods
lret
sti
lods
push
ficoms
insl
leave
jne
std
jge
xchg
test
xchg
fidivrl
and
mov
ret
cmpsb
jb
jno
mov
cltd
out
xchg
cwtl
adc
mov
xchg
leave
push
and
mov
mov
pop
mov
mov
repnz
xor
cmpb
sub
push
subb
sbb
xor
and
push
fcmovnb
sbb
xor
out
add
push
out
lods
adc
ss
and
mov
xchg
aad
mov
xchg
and
cwtl
sbb
push
or
out
ljmp
adc
js
push
xchg
xchg
mov
jnp
sub
roll
fs
inc
or
jmp
popl
std
fmul
hlt
shl
and
push
daa
int
inc
aas
dec
andl
sbb
xor
cmpsb
fs
cmc
and
adc
int3
sahf
sbb
bnd
stos
popf
decb
insl
dec
addr16
mov
out
inc
sbb
jnp
testb
sub
and
pusha
mov
out
iret
fwait
adc
dec
push
sub
fwait
mov
daa
sar
fsts
lret
mov
mov
add
jmp
aad
xor
adc
int3
lret
xchg
test
adc
adc
ret
push
sub
adc
je
jg
fwait
xchg
adc
push
sub
sbb
orl
push
ret
sbb
or
xchg
gs
jge
pop
jecxz
mov
stos
xor
push
lds
cld
mov
cmpsb
xor
andl
nop
lock
push
std
xchg
sbbb
pop
pop
test
mov
enter
loop
adc
mull
jnp
sbb
mov
pop
mov
push
in
xchg
pop
ds
inc
and
cmpsl
dec
bound
std
pop
pusha
jle
jae
mov
push
jbe
pop
sbb
stos
pop
leave
inc
in
mov
int3
cltd
mov
push
xchg
dec
fwait
mov
popf
js
lds
addr16
pusha
orb
ss
jge
dec
mov
sub
lret
pop
mov
fists
cld
mov
mov
je
testl
test
stos
cmp
push
cmp
add
les
mov
jo
in
test
xchg
cmpsb
mov
inc
or
in
cmpsl
sbb
mov
stos
inc
inc
rorb
ljmp
es
fidivl
pop
inc
inc
pop
cmc
mov
out
sti
pushf
outsl
mov
lahf
dec
mov
cmp
pop
push
js
sub
inc
lea
jmp
ja
xor
mov
out
std
inc
pusha
das
adc
iret
jge
imul
sahf
push
iret
mov
in
cld
aad
test
scas
mov
fbstp
aas
cmpsl
push
mov
call
icebp
xchg
je
mov
xorb
insl
sub
jp
jb
aaa
movsb
xor
dec
jl
xchg
pop
pushf
sahf
cmp
lret
clc
xchg
mov
pushf
pop
adc
mov
test
push
jle
and
push
xor
jbe
les
inc
dec
lcall
fwait
xor
addb
cwtl
pop
cmp
dec
dec
pop
xor
adc
mov
int3
outsl
cmp
mov
lea
cmpsl
adc
fstps
mov
scas
aas
dec
pop
push
cmp
inc
js
mov
in
xor
rcrb
push
jne
sahf
fbld
inc
push
addl
or
pusha
xor
xchg
push
fidivl
in
test
fldenv
fcompl
mov
popf
rcrb
sub
icebp
subl
sbb
outsb
mov
add
mov
rcl
daa
mov
loope
cmp
aas
out
jno
cmpsb
dec
sbb
jle
les
shlb
lock
sub
sqrtps
fnstenv
shlb
pop
jl
and
in
les
xchg
stos
mov
ss
xor
pop
bound
add
push
inc
xchg
ds
jge
gs
inc
in
stos
fstps
or
movsl
sub
mov
fsubs
sub
adc
add
and
inc
mov
das
or
sahf
cmp
sub
and
sbbl
pop
mov
aas
mov
sti
push
loopew
sbb
pop
or
ret
imull
push
leave
insb
xchg
push
test
movsb
jnp
out
jbe
add
xchg
inc
and
jbe
js
sbb
pop
out
test
dec
sub
insl
les
iret
pop
cltd
add
loope
push
or
jne
mov
cld
or
adc
xor
lret
sarb
jmp
push
sub
jecxz
lock
out
sbb
jle
fnsave
fldl
cmp
inc
xchg
mov
xchg
dec
or
push
fsubl
and
xchg
test
sbb
xor
add
sub
adc
loope
add
jmp
push
shl
jge
ljmp
pop
shrb
push
rcr
cmp
lcall
dec
xor
cmp
mov
mov
inc
fsubrs
inc
or
insb
inc
mov
inc
movsl
cmc
enter
call
push
sbb
and
xchg
add
addr16
cmpsb
lock
mov
fbld
fucomip
fisttpl
fnstenv
loopne
add
testl
lds
jecxz
in
out
idivl
and
adc
mov
or
and
stos
cmp
shrb
fcmovb
inc
ja
js
in
push
sbb
xchg
repz
addr16
pop
push
rcl
mov
fwait
xlat
outsb
mov
cli
cmc
mov
test
je
pop
imul
arpl
jp
insb
push
dec
cld
push
xor
push
aam
test
mov
ja
mov
mov
or
sbb
ljmp
fbstp
lret
js
std
outsl
sbb
cmp
ret
and
inc
addl
pop
or
test
cmp
icebp
pop
mov
in
lcall
sub
pop
sub
outsl
cmp
pop
mov
ret
xor
mov
pop
mov
pcmpgtb
mov
fldl
dec
inc
je
mov
and
dec
dec
and
jmp
cltd
cmp
addr16
cmp
jno
rdtsc
adc
cmovae
or
mov
jle
jnp
ret
or
jp
and
rcll
mov
inc
repnz
mov
orl
jns
clc
mov
shl
lret
push
std
nop
addr16
inc
outsb
xor
sub
outsb
add
faddl
repnz
aas
jl
xor
sub
push
sbb
jo
jne
pop
lods
imul
mov
inc
fadd
testl
add
negl
ret
adc
inc
jo
inc
pusha
xchg
push
push
cmpsl
fnstenv
cmp
sub
orl
ficompl
and
jge
xor
enter
lret
outsl
sbb
cmp
sbbl
movsl
cmp
out
mov
inc
bound
int3
jno
sub
es
stc
push
mov
ljmp
mov
ja
mov
call
mov
ffree
push
prefetch
pop
mov
pop
cmp
gs
push
in
insl
cmp
out
or
adc
addr16
xchg
ljmp
push
mov
dec
es
inc
and
jge
sbb
or
mov
mov
fldl
sbb
xchg
mov
push
lcall
mov
imul
leave
pop
popf
xchg
ljmp
jp
aad
sub
scas
ret
pop
and
mov
xor
push
cmp
pushf
xor
dec
clc
adc
popf
stc
lret
lahf
or
repnz
in
cmp
divl
sbb
gs
fs
je
movl
mov
jmp
ds
xor
pop
aas
shlb
cmp
push
mov
jnp
movsb
movsl
sub
negl
mov
repz
sub
stos
in
pop
int3
test
lds
mov
les
pop
mov
xor
sbb
int
dec
add
mov
fwait
jnp
shrb
add
mov
ljmp
cmp
outsl
jo
stos
loop
push
jmp
arpl
sbb
inc
sti
sub
dec
rcll
fisttpl
sub
pop
fistl
or
lods
inc
mov
rcrb
sbb
inc
mov
mov
dec
adc
sub
add
or
sub
push
dec
mov
cs
or
cmp
daa
add
mov
je
push
mov
inc
xor
dec
filds
rcrb
pop
sub
cltd
data16
adcl
shl
cmp
sub
mov
jg
sub
cli
inc
pop
sub
add
aad
mov
xrelease
rcrl
outsb
add
daa
sub
jg
call
bound
push
lods
mul
xchg
jno,pn
pop
cmp
mov
fiadds
mov
int
daa
ret
in
stos
cltd
jnp
xor
mov
xchg
mov
orl
int
or
push
lock
es
jne
imul
dec
in
movsb
push
filds
mov
push
lret
or
push
lcall
and
xchg
fs
xchg
pop
aaa
fbstp
and
aaa
mov
mov
jne
push
sar
inc
cltd
jl
in
mov
mov
push
pop
mov
movsb
mov
or
lea
subl
fs
ljmp
mov
and
aas
into
pop
jge
ja
imul
dec
mov
jbe
mov
arpl
xchg
mov
push
and
loope
stos
pop
inc
sub
ret
pop
outsb
nop
jg
mov
in
xor
inc
fucompp
mov
jbe
jo
das
and
add
sub
pop
mulb
fld
cwtl
push
cmp
inc
cmp
fs
sbb
xchg
push
lods
cmpsl
out
fxch
psubsw
dec
xor
mov
cmp
lea
nop
enter
jge
mov
adc
imul
insb
lds
cltd
xor
sub
and
or
mov
fisubrl
sub
shlb
push
fstl
mov
ljmp
sbb
sbbb
xlat
call
add
and
pop
push
cs
jne
cld
repz
mov
pop
sub
push
mov
adc
pushf
mov
pop
mov
pop
fxch
or
enter
call
adcb
loopne
pop
addr16
mov
aaa
in
stos
sub
mov
std
add
insb
jecxz
sahf
std
push
inc
punpckhbw
out
sti
or
bound
jg
mov
lcall
rcll
sahf
movsl
ret
xlat
rorl
mov
mov
rol
xor
js
adcl
mov
mov
mov
jns
clc
or
xor
scas
bnd
sti
stos
dec
pop
jmp
mov
push
icebp
add
cmp
mov
mov
incb
lcall
inc
add
sti
mov
sbb
movb
out
pop
call
pcmpgtw
push
push
xchg
xchg
mov
xchg
loope
scas
adc
cmp
jb
jg
es
lea
loop
lea
fidivs
sti
das
or
fbstp
int
shr
dec
mov
or
test
outsb
add
inc
mov
and
out
jmp
inc
jg
or
rclb
lea
inc
cmp
js
aas
push
mov
lret
mov
rcrb
fstpt
or
mov
imul
shrb
js
dec
stos
mov
inc
call
cmp
push
mov
cmp
and
aas
enter
xor
jmp
inc
inc
cmp
jmp
aaa
mov
data16
sub
mov
add
les
loope
scas
dec
inc
mov
dec
shll
popa
sbb
aam
lahf
xor
fucomp
aam
jge
and
and
std
mov
sub
pop
fistpll
shrb
pop
lret
xor
jbe
loope
out
push
add
add
lcall
test
cwtl
in
push
outsl
sub
xchg
cmpsl
sbb
mov
lds
cmpsb
sbb
pusha
sub
mov
or
push
rcll
adc
pop
ds
cltd
dec
and
pop
addr16
data16
jg
mov
jb
ficoml
rcl
cmp
mov
jecxz
pop
inc
mov
loope
in
andl
inc
arpl
push
icebp
jne
into
mov
outsl
pop
fnsave
jne
data16
mov
xor
adc
jnp
sub
out
jg
push
push
cmp
mov
js
jp
pop
inc
std
or
call
jae
mov
jo
inc
rcrl
clc
cmpsl
fs
fisubrs
or
fnstcw
fdivl
push
jmp
nop
out
das
adc
xor
jb
ret
jl
dec
nop
imul
inc
sbb
mov
loope
popf
ljmp
mov
dec
add
or
adc
cmc
add
cli
pushw
roll
in
fstps
pushf
xor
cmp
jbe
add
push
pop
sub
xor
or
sub
mov
stos
jo
xlat
pop
ljmp
jmp
insl
sbb
inc
and
mov
push
cmp
idivl
xchg
lock
scas
movsl
sub
shll
cs
push
push
ret
sbb
push
jmp
or
fs
jb
sbb
aad
sahf
repz
fidivl
fcmovbe
in
xchg
popa
repnz
mov
mov
out
hlt
or
mov
popl
push
xor
mov
insl
mov
mov
enter
es
pop
mov
sub
push
rorb
roll
mov
stos
push
mov
rcrl
lods
clc
push
mov
push
mov
fwait
sti
mov
pop
lea
xor
mov
jmp
mov
sub
adc
dec
bound
dec
in
shl
add
daa
int
mov
popa
lahf
sti
outsl
push
sub
dec
inc
movsb
fiadds
js
push
popf
dec
dec
add
add
stc
shll
fisubl
fsubrs
cmpl
inc
xchg
mov
mov
ffree
aam
outsl
popa
mov
jnp
pop
mov
jo
or
cmpsl
xchg
stos
insl
inc
mov
jmp
test
and
and
cmpsb
in
sub
adc
mov
or
icebp
popf
mov
lea
xor
sbb
xchg
sub
cmpsb
into
fcompl
fstpl
lret
and
mov
mov
dec
inc
adc
sbb
pop
mov
sub
dec
imulb
or
mov
xor
fistpll
pop
xchg
push
lahf
testl
cltd
jg
movsb
jl
inc
mov
ret
in
cmpsb
sbb
inc
mov
std
loope
pushf
mov
push
jns
push
cmp
xchg
jmp
inc
and
cld
mov
mov
add
inc
cli
mov
lds
mov
and
rcr
jg
shll
out
testl
jl
mov
into
xor
pushl
shll
sbb
das
pop
sbb
lock
test
or
rorl
mov
cmp
adc
mov
sti
jecxz
cmp
and
pop
stos
push
leave
pop
inc
scas
mov
in
in
jp
add
test
js
outsl
dec
ljmp
stos
cmp
ret
lock
push
popa
iret
adc
js
push
ds
add
das
mov
mov
cltd
test
mov
jmp
and
inc
jl
jbe
push
sub
xchg
cli
add
stc
hlt
mov
xchg
push
pop
jecxz
movsl
clc
daa
xor
not
push
test
mov
addl
jecxz
inc
pop
imul
aaa
call
out
jecxz
push
icebp
rol
xchg
cmp
fnsave
fmuls
dec
imul
adc
pusha
out
lods
sahf
lret
das
push
inc
out
xor
es
pop
pop
cmp
ret
fldenv
xchg
test
cmp
jae
popf
mov
dec
mov
lahf
mov
js
pop
out
add
jp
push
pop
movsl
xor
inc
cmp
mov
popf
push
sub
push
pop
test
jbe
pop
jns
mov
lock
jl
pushf
add
add
aam
xchg
mov
imul
movl
es
pop
dec
ljmp
out
bound
xchg
in
popf
cmp
sub
jae
mov
popa
and
mov
mov
imul
push
ds
sbb
and
push
sbb
fldenv
or
cmpsb
mov
cld
jae
mov
mov
or
repnz
mov
ljmp
js
mov
test
add
les
adc
xor
ss
xchg
in
xchg
jbe
pop
imul
mov
sti
pushf
xchg
jp
sbb
mov
jl
or
push
loope
incb
das
push
cmpsl
cmp
cltd
mov
xchg
inc
cmp
xlat
add
movsb
pop
inc
jp
imul
adc
xor
in
mov
adcb
shll
sbbb
cwtl
sbb
aaa
and
xchg
xchg
fs
fcompl
pop
mov
mov
push
push
ds
add
mov
pop
pop
cmp
test
xchg
sbb
mov
enter
and
mov
nop
mov
mov
dec
test
add
jge
outsb
fimull
push
xor
push
jbe
bswap
pop
push
xlat
adc
cmp
out
mov
dec
loop
and
stos
mov
iret
pop
mov
xorl
andl
scas
stc
loopne
sbb
sahf
js
insl
sbbb
add
shrb
cmp
fidivl
lods
cmp
inc
xchg
cwtl
js
rcrl
sbb
pop
fwait
icebp
inc
fidivrs
cmp
cmp
jmp
pop
cmp
cld
arpl
stos
pop
cmp
add
pop
sbb
jne
int
cmpsb
mov
and
or
fisubrs
mov
push
pushf
mov
arpl
inc
test
adcl
das
mov
sbb
add
cltd
mov
or
xor
or
adc
mov
insl
pop
cli
popf
lret
out
xchg
jmp
xor
nop
into
fbstp
dec
push
out
rcrl
xchg
insl
cwtl
jmp
mov
std
dec
xchg
mov
adc
aam
add
xchg
push
shrb
lahf
mulb
test
mov
popa
ret
pop
out
aaa
fisubrl
xlat
ljmp
call
xchg
pop
push
push
insb
test
outsl
mov
lret
and
vpacksswb
mov
fistpll
test
shrl
push
ficoms
add
pop
ljmp
das
std
cmp
in
fldcw
dec
cmc
jmp
aad
test
mov
mov
push
sbb
scas
add
push
shrl
scas
imul
in
or
push
fsubrs
cmpsl
fsubp
stos
notb
rcr
mov
add
mov
lock
sub
or
xchg
jb
dec
mov
ret
arpl
arpl
pop
xchg
add
in
loope
or
mov
mov
jge
hlt
cmpsl
push
sbb
ret
arpl
mov
sub
mov
dec
insb
std
gs
adc
ss
push
fistps
std
fldt
adc
push
mov
cmp
pop
cmpsb
push
sub
cmp
pop
or
push
adc
mov
mov
ret
pop
add
addr16
and
leave
push
xor
lods
mov
adc
push
arpl
cmpsl
ds
jecxz
pop
andl
xchg
shlb
loope
xchg
dec
pushf
dec
cmp
data16
lock
cmpsl
in
ret
push
cmp
cmp
loop
jl
adc
mov
sbb
dec
lahf
mul
mov
mov
roll
aas
clc
lods
xchg
jb
sbb
fbstp
popf
lods
mov
mov
push
add
shrl
jp
inc
and
aas
or
outsl
push
cli
inc
cld
and
cmp
dec
lods
icebp
adc
aas
sahf
jb
pop
lea
xchg
fucomi
test
sbb
movsl
jb
repz
add
mov
dec
rcrb
out
ret
ret
sbb
fnstcw
in
cli
out
pop
adc
inc
lret
stos
or
sbb
ret
cmc
movsl
mov
hlt
lahf
enter
js
push
iret
xchg
ss
nopl
cs
loopne
jg
pop
shll
push
jge
fcompl
mov
mov
pop
sub
mov
mov
les
mov
jecxz
call
into
jmp
adc
jmp
inc
xor
in
fsts
ss
xorb
loopne
mov
in
xor
cltd
mov
push
or
push
movsl
adc
rolb
pop
mov
push
scas
lahf
aad
aaa
inc
int
inc
jbe
stc
popf
push
lods
cs
std
fwait
movsl
movsl
jle
jp
jns
nop
fisttps
data16
inc
mulb
sbb
mov
inc
add
sub
int
subb
ret
mov
xchg
mov
mov
mov
mov
mov
ret
add
cmp
inc
inc
add
shl
pop
sbb
pop
movl
pop
cmp
ret
fwait
xor
cmp
push
jmp
mov
jae
nop
adc
ret
sarb
inc
xor
adc
sub
adc
mov
sub
cltd
pop
cmp
pop
sbb
mov
shll
paddusb
cmpsl
add
dec
icebp
cmpsl
dec
rcrb
cmp
cli
xchg
pop
mov
adc
sbb
pop
les
insl
jne
int3
insb
xlat
mov
jl
mov
mov
popa
roll
leave
pushf
sahf
movsb
push
jno
jae
mov
ja
pop
in
pop
add
in
mov
cmp
je
mov
sbb
and
imulb
mov
sbb
lret
sahf
mov
mov
cld
rdpmc
enter
adc
int3
movsl
inc
mov
cmp
pop
push
push
or
push
inc
cmpsb
cmpsl
ret
out
push
and
out
xor
cmp
pop
repz
cmpsl
repnz
es
jne
std
mov
push
scas
add
xchg
mov
sbb
xchg
xor
cmp
pop
cmpsb
pop
mov
push
stos
scas
rcr
sbbb
ljmp
xchg
enter
sub
aaa
rclb
or
in
dec
clc
or
sub
inc
cmp
mov
and
nop
dec
add
loop
scas
pop
xlat
ret
push
or
fsubp
and
rcll
sub
aam
pop
add
mov
gs
lahf
mov
mov
push
pusha
sub
shrb
addr16
int3
or
mov
ficoml
imul
adc
sbbl
jge
pushf
shlb
out
xlat
lods
aaa
and
fwait
cmpsl
jno
popa
and
cmp
cmpsb
sbb
stos
ds
mov
inc
pusha
jmp
xorl
daa
or
and
mov
xor
lock
shl
out
ss
mov
aam
je
and
jae
adcb
push
lcall
pop
push
mov
cmp
xor
loopne
dec
insl
aad
xor
push
and
ja
rclb
add
and
jecxz
divb
push
cmovb
mov
xchg
cmpsl
icebp
jo
mov
mov
test
cmp
ja
push
cltd
repnz
dec
mov
sbb
out
inc
nop
std
rorl
lods
sub
push
dec
cmp
icebp
cmp
pop
loop
and
mov
sbb
xchg
lea
pop
push
daa
push
adc
hlt
into
pop
xor
arpl
mov
or
or
push
adc
movsb
mov
dec
xchg
sbb
dec
lods
and
inc
ja
leave
pusha
sahf
sbb
fdivrl
rol
jo
and
test
add
jb
fsubrl
inc
cli
push
out
das
outsb
in
xchg
xor
inc
insb
xor
xchg
xor
fucomp
dec
jp
push
xor
mul
lahf
in
xor
shl
jnp
and
xor
addr16
fcoml
incb
mov
and
hlt
sbbb
push
lcall
data16
sub
xchg
xchg
xchg
scas
aaa
sbb
push
shlb
and
stos
in
std
ljmp
cwtl
cmp
or
ja
dec
mov
cmpsb
sub
test
xchg
mov
test
sbb
pop
dec
rcrl
xchg
stc
or
aaa
daa
mov
mov
dec
mov
or
and
lods
push
dec
jno
aam
inc
pop
repnz
mov
cmpsb
in
xchg
cmpsl
xor
push
test
jmp
add
pop
push
mov
sbb
or
mov
mov
clc
push
jnp
jmp
int3
imul
push
xor
test
adc
cmc
push
xor
das
lock
dec
xchg
xor
push
or
fimuls
dec
jae
inc
cld
loopne
cmp
mov
pop
aas
mov
push
mov
adc
test
mov
sti
xchg
pop
mov
out
stos
popl
xchg
mov
push
fs
imul
aad
mov
lret
rorb
into
fs
xchg
xor
xor
pop
or
in
in
jbe
or
push
xor
and
push
sub
xchg
dec
in
mov
dec
mov
std
dec
cmp
daa
cmp
add
mov
add
sub
xchg
pop
cmp
inc
push
ds
mov
test
loop
xorl
mov
dec
dec
mov
ret
xchg
xchg
enter
out
mov
sub
xchg
lds
cmp
daa
mov
call
mov
xor
cmp
cmp
xor
test
mov
es
lcall
dec
add
xor
jne,pt
pop
int
pusha
cmc
repz
jl
inc
arpl
data16
outsb
test
or
jbe
addr16
sarl
fidivrl
mov
out
xchg
setbe
rcrl
filds
mov
cmp
sub
dec
inc
jge
dec
lods
mov
aas
mov
sbb
cmp
test
push
push
cwtl
xor
imul
jg
dec
fistpll
pusha
mov
shl
inc
mov
dec
sub
in
adc
imul
and
add
sub
imul
jno
pop
imul
or
test
mov
xor
push
out
aad
xlat
push
push
outsb
pop
sub
sbb
bound
jge
cmpl
mov
fldln2
out
pop
xchg
cld
movsb
cmpsb
ret
daa
mov
cmp
add
mov
dec
lcall
sbb
xchg
mov
cs
out
jg
int
inc
sbb
cmp
jae
loopne
cwtl
mov
loopne
jbe
ret
cmpsl
and
add
movsb
aad
pop
clc
sahf
stos
xchg
es
jbe
lea
adc
sub
out
int3
fstps
xchg
add
jg
int
cmp
enter
fsubs
xchg
push
mov
xchg
mov
inc
mov
mov
or
mov
or
add
mov
icebp
int3
inc
mov
adc
je
fcoml
negl
in
jno
and
xor
in
imul
cmp
mov
jle
and
or
fbstp
mov
fstpt
mov
xchg
jo
xlat
outsb
and
jno
mov
push
mov
lret
mov
icebp
repz
and
and
insb
mov
or
mov
or
mov
out
xlat
jns
cld
mov
mov
data16
int
push
in
add
or
mov
sub
cmp
imul
mov
xchg
mov
inc
ds
lahf
jle
cltd
decb
jecxz
aaa
aaa
scas
andl
inc
add
insl
ja
fnstsw
dec
push
or
xchg
mov
out
xor
fidivrl
xor
xchg
mov
xchg
ss
fs
lcall
dec
movsl
lods
dec
in
cmpl
ljmp
ss
pop
xor
lahf
ss
out
or
pusha
testl
fs
cmpsb
out
mov
sbb
icebp
ret
imul
clc
inc
pop
cmp
cmc
orl
nop
sbb
push
shrb
pusha
clc
or
vxorps
cltd
pop
testb
add
out
xor
jo
adc
cltd
xchg
call
and
and
stc
xor
loop
pop
test
push
loop
ficoml
mov
jl
pop
pop
dec
xor
xor
not
lods
xchg
mov
fs
je
es
cwtl
stc
fbld
fidivrs
xor
sub
sbb
push
xchg
jg
xor
inc
mov
jo
in
add
push
xorl
je
add
ficoms
aad
dec
cs
xor
cmpsb
inc
mov
inc
push
pushf
add
mov
push
push
rcrb
mov
pop
mov
mov
mov
rorl
imull
mov
pop
fstp
imul
arpl
lds
xchg
fpatan
xchg
jecxz
lock
inc
cmc
ret
xor
cmp
inc
cmp
dec
cmpsb
mov
shrl
dec
or
movsl
mov
or
daa
shrl
movsl
cs
subb
les
mov
add
mov
int
dec
or
sarb
cmp
push
test
cmp
dec
adc
fiadds
icebp
adc
outsl
int3
xchg
cs
loopne
cmpsl
jmp
stos
das
add
or
xchg
ljmp
jbe
xor
jne
xchg
xor
inc
push
enter
outsb
jmp
or
sbb
sbb
dec
dec
lahf
cmp
mov
jb
in
jnp
cmp
or
std
sti
and
sbb
int
lods
mov
jb
popa
psadbw
test
ljmp
lods
and
ljmp
std
movsl
sbb
xchg
lods
icebp
jbe
fwait
cmpsl
push
push
mov
dec
xchg
push
cltd
in
loope
popl
jns
js
jo
sub
js
pop
mov
mov
jp
movsb
std
jp
pop
xchg
adc
jg
das
outsl
nop
sub
mov
dec
jae
aas
icebp
jle
dec
jmp
dec
rolb
adc
dec
enter
sub
rcrl
ljmp
mov
xor
cmpsl
ret
test
mov
pop
inc
mov
call
pop
gs
inc
xchg
cmp
lods
sahf
in
imul
shrb
pop
push
or
pop
mov
jne
sti
stc
xor
mov
add
mov
jmp
pushf
out
mov
repz
inc
mov
sbbb
or
fs
fdivl
pop
insb
negb
fs
jmp
fld
jo
add
call
and
jg
push
in
inc
gs
popa
add
sbb
jmp
push
lods
test
inc
push
stos
ljmp
sub
mov
mov
clc
inc
and
fwait
pop
cmp
leave
mov
aas
sub
out
cs
into
movsb
push
sub
xchg
mov
lds
push
in
or
ficoml
ret
xchg
sub
iret
ja
clc
jmp
mov
mov
add
in
inc
cwtl
or
int
mov
lods
mov
insb
repnz
sbb
and
adc
push
mov
add
sbb
sub
mov
push
mov
movsb
mov
stos
shrl
fildl
pushf
out
pop
mov
pusha
sahf
xchg
leave
jl
pop
mov
cmp
or
pop
and
les
movsl
call
mov
addb
jb
mov
andb
cld
or
test
test
jp
xor
fwait
xchg
pop
nop
and
cli
push
pop
mov
and
movsl
xchg
sub
movl
fs
xor
popa
cmpsl
push
xchg
sti
dec
dec
sub
jno
es
sbb
rcrb
insb
cmp
xor
cmp
push
es
outsl
jbe
dec
stos
pop
adcl
movsb
bnd
mov
or
cmp
and
mov
rclb
mov
jmp
push
xchg
in
lcall
pop
mov
dec
scas
clc
dec
cmp
xchg
jg
lods
jg
daa
mov
aad
daa
imul
adc
mov
das
cmp
or
jg
cmp
xchg
insb
mov
sbb
add
mov
or
into
shr
cmp
scas
mov
push
out
push
mov
clc
mov
xor
out
cwtl
and
fdivl
sub
mov
xchg
repnz
push
cmp
or
pop
pushf
push
test
cmpl
test
xor
add
aaa
dec
lock
xor
scas
incl
sbb
or
mov
int
pushl
push
stc
mov
orl
adc
mov
or
sub
clc
dec
les
pop
lcall
dec
mov
push
jp
out
or
lahf
mov
sub
add
pop
pop
xor
pop
fwait
ret
stos
jmp
test
shl
sbbl
cmp
idiv
out
sub
or
mov
pop
sahf
sub
add
scas
jno
adc
lods
ljmp
arpl
jmp
xor
shll
movsb
or
in
pop
shrl
jl
cmpsl
lods
jo
movsl
shlb
fs
mov
or
insb
add
sub
movl
aam
pop
jp
mov
dec
jne
pop
sbb
mov
scas
inc
es
cld
cmp
fsubr
push
aas
dec
jp
scas
stos
imul
data16
mov
adc
xchg
daa
xor
std
stc
icebp
mov
push
cmp
jle
aad
outsl
adc
pop
mov
adc
cmp
jbe
cmp
pop
scas
push
cmp
dec
jecxz
or
fwait
rcrl
jmp
aas
popa
ja
push
push
inc
fidivrl
jbe
add
mov
xchg
cli
and
pop
ja
lret
mov
rcrb
aaa
popa
sbb
out
nop
mov
push
mov
icebp
movsl
push
xor
outsl
test
scas
mov
loope
add
pop
xor
pushl
and
mov
fstl
push
insb
push
lods
mov
ror
pop
add
imul
es
pop
mov
push
jns
gs
push
inc
xlat
xchg
mov
pop
cmc
in
or
jge
dec
out
pop
icebp
pop
jno
xor
movl
mov
fcoms
cmpsl
or
in
sub
aaa
into
or
jp
add
cwtl
das
pop
jl
and
jnp
mov
into
sti
adc
mov
rsqrtps
cmp
pop
jo
nop
pop
shlb
mov
lds
iret
dec
jecxz
mov
jno
sub
rcrl
adc
inc
xlat
pop
push
fwait
xor
pop
cmc
pop
jp
dec
lods
outsb
lock
rorb
icebp
rorl
mov
dec
cmp
xor
push
xchg
xchg
sub
das
push
call
and
mov
lds
testb
jae
out
test
jge
mov
int3
arpl
aad
xor
adc
and
test
lret
sti
pop
inc
fisttpll
jns
jns
ljmp
int
sbb
pop
adc
sub
cwtl
mov
pop
imul
pcmpgtw
inc
or
inc
fs
xchg
arpl
xchg
cltd
mov
sbb
mov
xchg
sub
inc
fs
notl
mov
inc
loop
adc
or
add
pop
sahf
adcl
mov
mov
loope
pop
mulb
add
jae
js
pop
lock
loope
loopne
daa
add
sbb
add
mov
inc
xlat
in
pop
sbb
lods
inc
xor
push
or
sub
movsb
mov
lret
lds
and
jne
inc
fdivs
fldenv
push
out
lcall
mov
lock
sbbl
int
mov
fnstcw
bndstx
mov
sub
int3
mov
inc
add
xchg
dec
daa
adc
cmp
jae
pop
movsl
mov
imul
pop
js
cld
lods
ret
fnsave
xchg
sub
sub
xchg
popa
jb
pop
mov
jnp
subb
popa
clc
test
pop
bnd
call
bound
inc
stos
mov
pop
mov
sub
test
jb
mov
jp
je
sub
mov
jb
inc
mov
jp
push
stos
sub
xchg
pop
jb
loop
mov
js
sub
daa
mov
testl
lret
bound
xchg
lods
pop
insl
lds
or
imul
cltd
les
inc
mov
das
push
outsl
loope
sahf
into
jne
incl
jecxz
pop
outsl
lds
xchg
sub
sbbl
sub
aam
outsb
jecxz
lahf
mov
pop
mov
sub
aaa
into
xchg
ret
test
mov
shll
push
gs
mov
nop
mov
xchg
cs
arpl
xchg
mov
in
test
xor
pop
fs
icebp
mov
xchg
pop
mov
xor
pop
sahf
mov
pop
out
push
call
insb
pop
and
loope
cltd
xor
inc
pop
sbbl
lods
das
loopne
pop
scas
int3
cmp
subb
xchg
das
aam
push
ljmp
imul
cwtl
sbbl
insl
pop
jg
mov
sub
into
aas
in
outsb
pop
fnstenv
mov
cltd
xor
cmp
jno
subl
pop
lock
sbbl
test
pop
pop
hlt
nop
push
fwait
xor
xor
shll
xchg
pop
cmp
mov
xsha1
cmpsb
leave
gs
notb
andb
test
and
mov
mov
outsl
mov
sbb
jno
movsb
mov
ja
hlt
movsl
xchg
xchg
sub
jno
aam
pop
movsl
cmp
ja
loopne
cltd
lds
cltd
xor
js
sbb
movb
std
push
in
sub
enter
jecxz
je
out
cmpsl
lahf
mov
daa
cld
call
scas
dec
cmp
xor
push
insl
mov
ret
in
xor
push
out
adc
xor
data16
sti
xchg
mov
lds
not
jg
add
and
popf
jp
sub
aad
addb
and
pop
addr16
xchg
jl
lods
test
int
scas
cli
or
call
adcl
push
movsl
call
or
cmp
cmpsl
ds
pop
pop
hlt
insb
popa
clc
cltd
lods
mov
fstpt
xor
xor
push
dec
in
popa
dec
in
cmpsl
shlb
mov
popf
loope
cmp
and
and
jecxz
call
les
add
xor
outsb
add
sbb
ds
outsb
retw
mov
inc
in
pop
out
mov
and
in
and
mov
gs
xchg
mov
daa
out
dec
jecxz
or
jae
push
adc
pop
movsb
das
shll
cmc
mov
int3
mov
cli
inc
mov
ja
jae
inc
lahf
sbb
cltd
out
push
adc
inc
fsub
ds
stos
cmp
cmc
mov
adc
fsubs
test
jb
jb
push
movsb
push
jmp
std
mulb
adc
dec
cmc
push
mov
arpl
sarl
mov
xchg
push
in
push
into
gs
nop
cmpsl
adc
mov
adc
mov
mov
or
sub
sub
pop
movsb
mov
cwtl
scas
imulb
sub
adc
xchg
jns
pop
mov
lcall
rorb
jnp
pop
jno
pushf
pop
outsl
into
ja
test
pop
scas
hlt
aaa
adc
push
nop
inc
ffree
jg
mov
sbb
aaa
fidivl
push
jne
inc
scas
inc
mov
xlat
mov
add
daa
shlb
push
in
addl
adc
aam
inc
add
or
dec
push
rcrb
sbb
icebp
or
aas
adc
cmp
data16
mov
push
in
in
jmp
cltd
cmpsb
add
ja
int3
out
inc
lret
out
out
pop
lods
sub
xchg
stc
mov
cs
mov
inc
sbb
push
ror
cwtl
stos
inc
dec
in
cmp
out
pop
xchg
jno
mov
cmpsb
push
xchg
and
pop
nop
jp
mov
cmp
adc
loopne
sub
push
sarl
lods
mov
pop
mov
and
jg
addl
pop
lods
inc
movsb
or
aad
xor
xor
jno
ret
dec
mov
sahf
adc
dec
xchg
jp
add
sahf
pop
lcall
pop
popf
cmp
sub
mov
jae
xor
jno
sub
ret
fbld
jne
add
popa
in
mov
in
insb
lcall
jnp
in
jp
mov
adc
mov
js
mov
cs
repz
inc
mov
adc
dec
andl
push
mov
xchg
push
jno
pop
sbb
push
scas
dec
xor
pop
in
inc
mov
or
inc
dec
jl
sbb
pop
scas
test
add
daa
add
stos
js
xchg
repnz
jo
fisubl
addr16
fisubs
les
inc
lret
lods
inc
jmp
cmp
or
lea
adc
xlat
push
jno
mov
xor
cli
inc
push
and
xchg
xchg
fbstp
push
cmc
fistpll
add
jge
fstl
sub
repz
inc
lret
cmp
jecxz
out
dec
sub
cld
sub
shrl
repz
mov
test
mov
imulb
and
inc
push
mul
sub
xor
inc
test
in
adc
rorb
icebp
sbb
out
call
push
jp
int
fdivs
jb
stc
sbb
mov
into
cmp
movsl
imul
shrb
jo
mov
data16
lret
mov
lods
jns
pop
xchg
pop
ret
cmc
and
arpl
xor
popa
xchg
jp
out
jg
gs
cmp
mov
adc
addl
jl
mov
in
ret
repnz
cli
xor
mov
mov
push
mov
in
popa
fstps
xchg
nop
loope
lret
add
cmpsl
fstpl
in
test
adc
fnstcw
negb
in
sarb
pop
cmp
jo
pop
xor
push
loop
push
lret
ljmp
ja
inc
test
outsl
xor
xor
xchg
cmp
xor
inc
jb
add
adc
push
sti
and
fwait
xchg
arpl
aam
or
ljmp
adc
out
leave
dec
mov
push
or
fwait
push
fwait
mov
cmpb
test
rcrb
jno
adc
test
jmp
cld
mov
adc
or
push
into
xchg
push
in
push
scas
subl
dec
adc
or
jne
loopne
js
xlat
cmp
dec
aad
pop
or
pop
xchg
jg
lret
push
add
in
cld
sub
fs
iret
gs
addl
insb
jbe
ds
push
into
push
xchg
or
dec
inc
mov
xchg
sub
mov
inc
mov
enter
stos
jmp
sub
mov
negb
mov
hlt
popf
cmpb
jl
mov
in
pop
fcoml
test
ljmp
push
int
mov
mov
add
cmp
clc
rcrl
add
add
add
shll
std
das
out
hlt
jbe
es
mov
gs
repz
das
and
insb
aas
sub
mov
adc
mov
adc
xchg
inc
jle
push
or
popf
pop
push
jmp
sti
imul
sarl
fdivrs
fisttps
imul
jnp
mov
push
sbb
stos
add
mov
mulb
enter
or
pop
shrl
inc
mov
repz
push
mov
stos
fwait
dec
aad
sti
iret
inc
les
test
clc
mov
mov
ficoms
mov
xchg
or
xor
pop
sub
jge
adc
cmp
pop
movsl
jle
and
loopne
mov
sub
mov
jle
shrb
test
outsl
fs
cmp
jge
rcrl
lahf
push
sub
orl
push
add
sbb
movsb
addr16
add
pushf
dec
add
pop
add
pop
repnz
sbbl
xchg
in
shl
daa
jmp
or
cmp
leave
pop
out
add
push
inc
daa
in
jae
or
movsl
pop
add
dec
enter
cmp
out
test
adc
subb
mov
mov
sbb
mov
or
mov
sbb
mov
ss
add
adc
loop
xchg
pop
jns
ret
cmp
xchg
scas
aad
push
adc
xchg
je
mov
sarb
mov
flds
arpl
inc
cli
pop
sarb
sub
loop
pop
rorl
push
add
cmp
insb
pushf
negb
das
cmp
or
rclb
mov
icebp
push
dec
sahf
jl
movsb
pop
cli
ds
rorl
stos
pop
mov
add
adc
mov
aad
repz
xchg
out
jnp
test
insb
mov
mov
std
push
call
cmc
push
sbb
lock
shrb
adc
xchg
xor
aaa
cltd
or
or
movsb
push
pop
div
xor
sbbb
es
inc
in
xor
jo
jne
jl
mov
jo
divl
fbstp
jge
lods
fidivs
outsb
lahf
cmpb
lods
pop
test
lret
les
icebp
lretw
and
fcoml
lods
fidivs
inc
stos
inc
sti
mov
out
inc
mov
pop
xchg
pavgb
arpl
or
pushf
mov
into
gs
arpl
push
mov
in
cli
sub
iret
gs
mov
les
pop
pop
ret
pop
mov
shrl
je
ficoml
daa
jno
jns
lods
arpl
call
sub
mov
mov
mov
inc
or
jl
mov
out
leave
iret
jae
sub
push
enter
xor
sub
cmp
stc
jecxz,pt
push
iret
push
push
mov
jl
popa
xchg
sub
roll
pop
add
insl
fimull
sti
repnz
roll
sahf
scas
xor
fnsave
pusha
cwtl
lret
cmp
fistpl
sbb
pop
imulb
pavgb
and
shlb
pop
pop
cwtl
push
adc
stos
xchg
adc
sbb
bound
jno
cmpl
aam
pop
ret
ret
scas
loop
xor
sbb
or
int3
inc
test
lret
lock
fcmovnu
mov
inc
leave
repz
xchg
loopne
cmp
mov
adc
in
mov
cli
lahf
xchg
mov
push
sbb
push
xorl
adc
out
test
into
cmp
int3
ljmp
ljmp
fisttpll
ja
les
jecxz
ret
rorb
push
shrl
add
out
pop
mov
out
daa
aad
jle
cmc
div
sub
mov
icebp
sbb
jecxz
xchg
mov
faddl
scas
je
cld
mov
fimull
int
aad
imul
mov
and
jge
icebp
and
xor
lods
mov
jmp
fwait
adc
lods
or
xchg
stos
call
jmp
fildl
out
leave
pop
imulb
repz
scas
or
mov
out
pop
fistl
or
call
sbb
or
lock
or
or
stos
into
dec
mov
mov
in
pop
int3
mov
jne
cld
aam
mov
or
daa
jge
xlat
dec
inc
xor
adcb
push
mov
xor
leave
lea
scas
inc
push
xor
fwait
inc
push
call
push
dec
daa
loop
mov
and
pop
addr16
loope
arpl
and
int
pop
pop
lock
dec
inc
into
push
push
pop
jl
popa
push
mov
testl
sbb
push
test
inc
sub
mov
cmp
sub
test
repnz
sub
subb
push
sub
dec
mov
shlb
dec
or
jp
addb
adc
repnz
sti
adc
cmpb
sarb
aaa
xchg
jno
xchg
fcoms
cmpsl
push
xchg
rcrb
icebp
sub
addr16
addl
xor
scas
gs
pop
add
jo
mov
pop
inc
sbb
xchg
jb
sub
std
xor
xchg
and
sbb
mov
cld
xor
and
dec
loope
add
cltd
sbb
xchg
popa
cld
cmp
cmp
dec
fwait
pushf
xor
cmp
out
mov
adc
test
popf
data16
adc
xchg
inc
sbbb
mull
cmp
imul
outsb
lock
inc
sti
adc
cmp
loope
sub
shrl
mov
out
addb
mov
cmpl
jne
arpl
nop
xchg
shll
pcmpgtb
jns
mov
testb
dec
out
aam
adc
les
in
shr
ret
mov
stc
add
out
fsubrs
pop
cld
les
iret
pusha
add
xor
push
xchg
pop
shrl
movsb
data16
xor
sahf
in
cmp
pusha
xchg
sub
mov
mov
mov
dec
loopne
sub
fcomp
add
sbb
add
in
pop
in
lods
inc
push
pushf
xchg
mov
mov
add
add
sbbl
aam
cs
aam
xchg
xor
daa
call
sub
fstl
fisubl
or
xchg
pop
mov
mov
ret
jno
sar
ficoms
les
cmc
mov
dec
mov
cs
leave
loopne
movsl
cmp
mov
mov
push
adc
repz
testl
sub
inc
mov
test
add
dec
inc
mov
sbb
std
push
sbb
pop
mov
jae
popa
scas
sarb
push
xchg
mov
ja
xchg
out
sbb
scas
je
arpl
and
pushf
pushf
xor
outsl
xchg
call
sub
xchg
add
lret
jl
test
cmc
cmp
shlb
xchg
mov
or
js
dec
movsl
mov
fsubl
jge
jns
cli
dec
in
mov
fucom
pop
mov
mov
xchg
adc
push
in
jne
push
cmpsl
cmp
fimull
or
aad
fs
cs
outsb
paddsb
pushf
aas
push
int3
orl
xor
cmpsl
out
xchg
mov
sti
pop
rcr
xor
adc
cmp
icebp
pop
cmc
dec
mov
and
imul
cmp
adc
out
or
popa
int3
in
sbb
cmp
jg
imulb
leave
lahf
ljmp
outsb
add
dec
push
call
push
bound
cmpsl
imul
xchg
hlt
pop
lahf
pop
pop
mov
add
out
and
cmp
fmuls
xor
mov
jo
int3
arpl
mov
sub
jp
js
dec
mov
mov
mov
and
in
ss
xchg
pop
mov
add
xchg
icebp
mov
sbb
mov
pop
inc
jge
push
dec
out
ret
jae
cmc
cmp
lds
or
sbb
inc
lret
repnz
or
loop
lock
in
xchg
adc
test
add
test
push
add
xchg
std
jne
mov
loopne
out
fistpll
loope
popf
mov
sahf
xchg
cmp
mov
pop
and
push
xchg
ja
adc
dec
test
cli
lods
data16
xchg
mov
in
cld
loope
arpl
or
cld
bnd
int3
scas
out
pextrw
push
lret
sarl
jo
les
shlb
nop
ja
shll
xchg
in
ss
xchg
outsb
lret
sub
ficoml
inc
rcl
insl
push
gs
mov
sti
mov
pop
mov
repz
adc
mov
into
push
es
cltd
ja
mov
jae
sub
nop
xchg
insl
add
jo
add
inc
push
jno
loop
jne
dec
lds
repz
inc
mov
mov
pop
lds
cmp
popf
call
cmp
cltd
loope
fwait
imul
lret
addr16
in
adc
fisubrl
testl
mov
repnz
shl
ljmp
sbb
outsb
push
jmp
stc
add
iret
insl
inc
rclb
and
fcoms
icebp
pop
mov
js
dec
pop
adcb
push
int3
pusha
pop
sub
adcw
sbb
sub
jl
dec
sbb
pop
pop
mov
outsb
push
adc
and
and
arpl
inc
or
dec
mov
stc
xchg
fnstsw
jno
daa
andb
es
pop
mov
outsl
mov
aas
fs
repz
imul
mov
jmp
cmp
mov
sub
fnstenv
inc
and
mov
data16
addr16
and
test
mov
cs
jnp
sub
dec
cmp
in
pop
inc
push
clc
inc
pushf
or
pop
push
xor
aaa
cltd
push
mov
sbbl
fnstsw
icebp
push
in
mov
mov
rolb
xchg
xor
jno
aam
cmpsl
push
lods
sbb
lret
test
adcb
push
outsl
mov
popa
bound
pop
push
and
outsb
jnp
xchg
xchg
inc
aas
lahf
xchg
push
imul
pop
dec
loop
fwait
scas
jb
scas
mov
cld
jge
ret
pop
push
les
cmp
mov
sub
push
mov
sbb
imul
and
lcall
mov
mov
push
add
sbb
sarb
test
outsb
and
les
cwtl
aad
inc
mov
sbb
inc
ret
inc
pop
jne
dec
imul
jl
dec
lea
mov
xor
lcall
sub
aad
fs
or
jo
ret
push
test
inc
mov
xchg
and
rorb
mov
clc
in
ss
clc
loop
sub
dec
ret
lcall
jp
aas
loopne
loopw
cmp
stos
lcall
addr16
out
std
xchg
jg
dec
rcrl
or
ret
outsl
mov
scas
inc
lret
gs
bound
push
lahf
ja
and
in
push
andb
pop
mov
inc
mov
daa
cmp
jno
cmpsl
bnd
ror
syscall
mov
pop
mov
enter
or
int
rorb
xchg
idivl
mov
pop
push
lods
jl
pop
cmc
sbb
enter
ret
scas
dec
inc
mov
or
arpl
dec
sbb
add
cmp
dec
dec
cli
xchg
jl
xor
mov
adc
fisubrs
lret
lock
into
inc
push
mov
mov
pop
jp
jns
jp
cmp
fwait
mov
cmc
jo
mov
shrb
aad
shl
sarb
xor
loop
out
aaa
add
sbbl
mov
mov
dec
movsl
orl
cwtl
loop
mov
test
movsl
cld
ret
lds
mov
rorl
xchg
cs
xchg
sub
or
test
jnp
or
pop
jno
in
test
pop
dec
fwait
pushf
je
push
cmp
xchg
push
dec
aad
lods
test
test
nop
shll
push
mov
jecxz
out
lea
inc
and
imul
movsl
mov
daa
mov
sbb
clc
and
mov
inc
push
jmp
dec
dec
mov
xor
mov
sub
mov
cmp
jl
fiaddl
xchg
push
dec
das
xlat
cmp
push
or
or
ret
shrb
sbb
adc
push
in
inc
inc
stc
into
xor
dec
mov
pop
xchg
ja
xchg
aaa
pop
xchg
jnp
jno
push
aas
fwait
xor
dec
stos
outsl
inc
pusha
xor
inc
inc
xchg
mov
aas
call
lea
daa
mov
lcall
dec
pop
stos
cs
xchg
add
test
hlt
xor
jle
inc
outsl
adc
es
das
stos
jb
pop
in
es
lcall
mov
sarb
xchg
sarl
lock
inc
ret
cmp
pop
pusha
sarb
xor
push
ret
hlt
add
loope
aad
cld
add
addr16
mov
xchg
in
add
add
xchg
inc
stos
mov
hlt
jg
xchg
cmp
imul
or
xor
inc
jne
repz
inc
xor
or
mov
fwait
xor
xor
enter
iret
subb
pop
hlt
pop
add
push
xorl
aas
mov
add
lods
pop
jne
mov
mov
mov
dec
push
fidivs
out
jmp
sarl
movsb
and
jbe
orl
fisttpl
mov
fs
sbb
adc
pop
ljmp
cmc
fcmovb
sub
pop
repnz
adc
dec
scas
lods
pop
repnz
or
pop
loop
sbb
xor
and
push
test
pop
inc
cmp
int3
fnstenv
mov
clc
xor
jbe
in
xor
aas
inc
leave
jl
fidivs
popf
push
test
or
push
rorl
in
mov
pushf
pop
sahf
cld
shrb
mov
adc
scas
inc
lock
fsubs
cmp
mov
mov
pop
out
or
push
stos
mov
push
mov
pushf
daa
pop
mov
scas
or
hlt
pop
iret
jne
out
pop
ds
lods
arpl
xorl
xor
adc
jge
or
jl
scas
jne
sub
stos
push
xchg
xchg
arpl
inc
enter
loopne
sbb
lods
cli
sbb
or
sbb
mov
sbb
mov
in
lock
neg
jno
mov
fildl
mov
xchg
lock
and
jp
clc
outsb
fcomps
dec
int3
or
cmp
adc
clc
lock
push
add
pushf
mov
stc
nop
xor
addr16
sarl
mov
bound
add
repz
jle
mov
mov
lds
in
xor
mov
push
xor
lcall
adc
lock
jecxz
in
fisttpl
mov
and
int
jb
nop
les
cmpsb
cmc
repnz
stos
push
mov
mov
out
mov
fsubrs
mov
pop
jb
pop
sub
dec
push
movd
mov
sbb
ret
scas
test
xor
xchg
or
or
lods
adc
adc
mov
addb
ds
jnp
addl
xchg
push
pop
lock
idivl
add
mov
call
add
call
es
stos
jb
or
pop
mov
jle
dec
cmc
dec
cmp
insb
mov
push
divl
gs
inc
xchg
cmp
fistps
and
sub
in
adcb
sbb
pop
add
pop
cld
and
fisubrl
adc
jnp
push
fldt
dec
cs
lods
xor
test
jecxz
cli
add
repnz
sbb
fwait
shl
xchg
test
sarl
into
sub
cmp
mov
ret
push
or
push
imulb
sub
outsl
int
in
enter
sbb
shrl
in
jns
outsb
mov
mov
xchg
xchg
push
jns
bound
pop
ret
jge
inc
cmp
stc
movsl
xor
inc
xchg
add
icebp
mov
popf
fwait
je
jo
xchg
inc
cwtl
movsb
fs
xchg
xchg
sub
pusha
dec
shll
cmp
or
and
jns
out
imul
xchg
shll
jg
fnstsw
mov
sbb
jns
or
pop
xchg
or
ja
push
lods
inc
cs
mov
sahf
sub
inc
jae
sub
pop
xor
pushf
lea
sbbl
jbe
vpmadcsswd
out
xor
sub
mov
pop
add
mov
adc
ret
dec
add
test
stc
jge
jecxz
mov
sbb
mov
stc
dec
orl
js
into
inc
push
fsts
aas
ljmp
jno
inc
fcmovne
cmp
push
pop
lock
add
sub
movsl
lock
in
add
push
les
stc
jg
mov
int
push
xchg
addr16
cvttps2pi
xchg
mov
sbb
test
cli
sub
sbb
call
sub
gs
cmp
adcb
mov
xor
insb
mov
cmp
cmp
mov
aas
mov
fwait
scas
ss
test
xchg
sbb
xchg
xchg
mov
std
addr16
rol
sub
rcl
push
add
scas
push
in
loopne
stc
nop
adc
je
xor
pop
scas
gs
xchg
sub
test
inc
fcmovu
push
ljmp
jno
pop
dec
in
addl
or
add
sub
push
inc
inc
fnstsw
jmp
sti
lret
sahf
cld
jmp
sbb
mov
ret
repz
jae
adc
cli
xchg
imul
scas
mov
fdivl
int
paddusb
cs
jmp
cli
xchg
xchg
xorb
mov
scas
out
nop
daa
add
es
inc
pop
pop
push
in
mov
arpl
int3
ljmp
and
mov
test
mov
xlat
les
cmc
clc
jmp
sub
fs
dec
dec
or
fwait
popf
daa
mov
out
out
inc
fsubl
adc
cli
jb
fnsave
sbbl
call
or
mov
cmp
iret
lea
in
stc
nop
adc
jne
xor
pop
scas
arpl
xchg
dec
push
ljmp
jno
pop
dec
in
test
mov
lods
inc
add
sub
and
inc
inc
fidivs
jmp
cld
leave
leave
pop
sahf
cli
ljmp
dec
cmp
inc
fistpl
shlb
jecxz
je
adc
xchg
push
mov
mov
mov
aaa
into
or
fdivl
sub
cli
xchg
xchg
jg
or
rclb
into
aaa
and
push
in
mov
fs
stos
jae
fmul
jmp
std
std
xchg
sub
pop
or
xorb
mov
ret
inc
imul
sub
fs
leave
lret
cld
jmp
insl
push
cmp
xor
test
lret
cld
pusha
mov
inc
dec
mov
outsb
and
inc
cmc
mov
xchg
mov
adc
pop
in
das
sub
add
push
out
call
fstpl
cmp
loop
pop
nop
cmp
xchg
pop
out
cmp
sbb
sub
sbb
dec
mov
test
popf
adc
fdivl
pop
repnz
xchg
mov
stos
pop
out
push
sbb
or
int
daa
ljmp
scas
inc
mov
jo
stos
int3
and
js
mov
int3
adc
pop
pop
adc
sub
jns
jp
fwait
stos
cli
add
sbb
pop
jne
shll
adc
inc
cli
dec
push
into
gs
out
lods
outsb
in
inc
mov
pop
jne
lret
fidivrl
sbb
pop
mov
dec
jge
out
popa
push
inc
and
add
loop
or
leave
or
sbb
frstor
adc
out
xchg
mov
jb
scas
xchg
add
mov
adc
fistpl
push
lock
stos
mov
push
sbb
pop
out
mov
cli
adc
test
imul
xor
imul
cs
cmp
pop
push
mov
sbb
shlb
mov
mov
cwtl
push
scas
insb
xchg
xor
mov
sub
fstl
cld
dec
xor
sub
call
jno
mov
ljmp
mov
add
inc
cs
movsb
test
mov
pop
test
jb
ret
add
dec
cwtl
test
xchg
fdivl
lock
cmp
imul
enter
cmp
repnz
inc
lock
mov
push
or
fnstsw
shlb
pop
adc
daa
scas
pop
push
mov
out
es
push
push
outsb
cmpsb
test
mov
arpl
scas
pop
mov
xor
lods
cmp
mov
dec
test
dec
clc
dec
cmp
jge
mov
inc
inc
mov
inc
enter
cmpsb
adc
pushf
test
mov
into
jno
push
push
lods
or
push
outsb
and
jo
orb
sbb
xor
pop
outsb
sti
xchg
inc
push
xor
addr16
jmp
lret
stc
adc
inc
imul
test
pop
shll
mov
sbb
inc
lods
imul
lcall
lahf
cmp
sub
repz
mov
add
roll
jge
xchg
lahf
add
insb
addr16
sub
add
fsincos
add
lock
cmp
mov
pop
or
lret
shrl
jns
lcall
push
dec
pop
push
adcl
pop
rol
inc
jmp
add
cmp
fs
popf
popf
testl
sti
pop
sahf
sub
iret
in
into
mov
sub
inc
nop
push
jmp
loopne
sbb
push
mov
push
daa
scas
push
out
int3
dec
jecxz
into
push
popf
mov
push
mov
out
loopne
jb
fisttpl
dec
jecxz
scas
sbb
pop
push
mov
js
loop
and
leave
or
mov
push
cmp
inc
cmp
adc
inc
mov
dec
push
sbb
das
outsl
cmp
repnz
and
xchg
pop
add
je
add
or
sub
enter
popf
jbe
out
pop
xchg
and
enter
scas
stc
inc
fldcw
rolb
jge
sarb
add
mov
xchg
inc
sub
add
inc
push
mov
sbb
inc
mov
jo
cmp
push
lret
iret
mov
sbb
pop
decb
mov
in
movl
ret
sub
imul
int3
mov
push
dec
or
pop
rorb
imul
ss
jmp
push
int
or
cld
pop
add
loop
or
fdivr
in
imul
xor
mov
popf
int
or
dec
or
mov
jge
imul
xor
adc
fstps
into
mov
pop
iret
or
push
lcall
or
cmp
cs
add
mov
fldcw
scas
mov
and
je
test
movsw
dec
push
lea
popf
test
xor
daa
sub
sbb
daa
sbb
int3
icebp
cmp
push
push
cmpsb
mov
cmp
dec
xor
lcall
push
sti
add
pop
lds
push
mov
sub
pop
cmp
and
movsb
insb
hlt
test
mov
paddq
rorb
mov
mov
jmp
enter
je
mov
leave
rorb
mov
cs
cmp
pusha
jmp
mov
lods
mov
sar
rorb
inc
xor
cmp
pusha
ljmp
adc
sbb
jle
mov
mov
add
ljmp
xchg
cmp
sub
mov
xchg
cmp
mov
xchg
xchg
aaa
jle
xchg
aam
iret
fnstenv
push
sub
cmp
enter
fistps
mov
add
jbe
pop
jg
aad
or
xor
outsb
repnz
es
adc
pop
fsubrs
lods
das
cwtl
push
inc
or
rcl
lock
loopne
inc
push
mov
test
sub
aas
and
daa
and
add
add
orb
lods
xor
aam
mov
inc
inc
or
mov
and
mov
dec
add
add
addr16
lods
xor
jb
mov
and
xor
mov
inc
mov
leave
add
test
push
lods
sub
fsubrl
mov
mov
aad
loopne
mov
inc
or
and
push
cmc
fs
movsl
es
jg
mov
nop
aas
sub
ss
add
cmp
mov
imul
inc
sub
pop
jbe
lock
cmpsl
jo
addr16
mov
ret
push
aam
add
jne
cmc
pop
dec
sub
push
mov
push
pop
xor
stos
sub
sub
dec
or
jb
mov
push
dec
nop
sub
insl
lcall
sub
or
inc
stos
push
int
mov
cmpsl
mov
mov
out
and
inc
test
push
cmp
sbb
mov
mov
xchg
cmc
and
fimuls
jnp
scas
push
pop
sti
mov
xor
aas
mov
jo
ja
adc
sbb
dec
mov
loopne
dec
pop
aaa
cld
dec
or
adcb
lea
jno
xorl
outsb
adc
adc
test
jg
mov
xchg
and
xor
cmpsb
and
rolb
aam
or
js
jnp
sbb
lods
pushf
cmp
cmpsl
fwait
cmp
jno
clc
pop
pop
insl
aam
dec
xorl
xor
sub
iret
mov
inc
cmpsb
adc
stc
mov
dec
or
scas
sub
mov
stos
sub
cld
dec
or
mov
push
sub
mov
xor
sti
int3
mov
rcr
js
and
in
jnp
scas
cld
int
jp
testl
mov
jmp
lahf
push
and
or
or
test
xor
xchg
sub
enter
mov
push
mov
js
clc
dec
or
std
cmp
jnp
add
popa
and
push
pop
clc
cmp
lea
and
shr
mov
pop
jl
or
mov
push
mov
jge
stc
dec
or
pop
cmp
jge
in
lea
add
mov
pop
mov
fdivrl
lea
or
rol
cmp
cld
pop
aam
push
int3
push
adc
mov
pop
lahf
cmp
out
ja
add
ds
cli
pop
mov
movsb
add
leave
sahf
xchg
inc
add
pop
mov
addr16
gs
jl
mov
xchg
sti
pop
cmp
movsl
xor
daa
adcl
sbb
jecxz
out
roll
push
add
paddw
and
cmp
cltd
cli
pop
xlat
sub
ss
repnz
fnstcw
adc
push
int
xor
fdivp
cltd
cmp
fwait
cmp
lds
hlt
aad
sahf
aaa
inc
or
fldl
stos
sub
mov
cmpsb
das
in
adc
ror
das
test
jns
inc
sbb
xchg
loop
add
pop
std
lods
sub
cltd
lea
push
aam
negb
sub
cwtl
inc
adc
adc
push
pop
cli
lods
sub
xchg
rol
push
loope
pop
sbb
test
xchg
dec
sbb
xchg
out
add
pop
stc
lods
sub
cwtl
mov
push
aam
cmc
pop
sbb
lds
jl
jl
mov
inc
jnp
mov
push
pop
and
sub
mov
int3
xchg
add
cmp
xchg
push
cmpsb
sub
movsl
cmp
iret
cs
pop
xchg
aas
mov
dec
adc
inc
or
jbe
fmul
cli
addr16
jne
cmp
cmp
stc
dec
xor
jle
or
dec
imul
inc
inc
mov
setns
outsb
pop
inc
or
jp
jp
aas
inc
push
sub
cmp
and
ljmp
mov
popf
inc
sarl
xor
pop
mov
aam
xor
addr16
sbb
cltd
mov
mov
or
ds
out
sbb
pop
cli
cmp
pusha
sub
pop
std
daa
adc
mov
push
aad
js
sub
xor
xor
push
or
popa
cmp
daa
mov
hlt
gs
aad
aas
sbb
push
roll
les
adc
push
psubusw
xchg
inc
push
add
call
mov
cmpsl
or
mov
sahf
cmp
mov
ljmp
pop
stc
sbb
lea
dec
adc
fisubrs
xor
clc
push
mov
and
fnstsw
inc
arpl
cmp
and
mov
pop
lods
mov
sbbl
lds
sub
pop
out
push
incl
pop
mov
cmpsl
add
enter
sub
push
mov
and
mov
fldenv
lods
jle
std
ds
xchg
inc
fldt
lods
xchg
push
inc
adc
int3
nop
data16
addr16
xchg
jp
pop
push
int3
push
rcl
mulb
adc
sahf
popf
dec
lahf
ss
movsl
cmp
or
clc
pop
xorb
dec
adc
push
jmp
mov
dec
cld
les
enter
icebp
push
cltd
inc
loopne
cmp
fcompl
das
aad
adc
jge
orl
jmp
int3
inc
xor
sbb
fiadds
loope
je
aad
xlat
rorw
addr16
add
sahf
inc
ret
jno
jne
pop
fs
mov
movsb
push
add
cwtl
cmp
leave
das
lods
xchg
addr16
mov
int
dec
ds
mov
mov
insl
fstpt
jb
and
mov
in
add
mov
mov
sti
xchg
fnstcw
nop
mov
sbb
cmc
lods
cmp
fbld
push
idivl
lea
fwait
adc
sahf
mov
mov
mov
imul
xor
cli
push
cmp
cltd
test
adcb
adc
mov
cmpsl
test
repnz
das
dec
push
push
icebp
and
ss
push
xor
dec
test
jo
cwtl
ret
jne
fs
in
out
push
cli
jnp
push
xor
sub
das
pop
lods
add
fnstsw
fstps
pop
add
mov
push
cld
push
fldt
mov
test
and
popa
pop
mov
movsb
jmp
pop
les
ja
mov
mov
mov
and
stos
loope
xor
ret
inc
pop
in
pop
int3
xchg
gs
add
push
je
xorl
js
jl
mov
jb
adc
imull
add
clc
pop
dec
pop
mull
daa
mov
outsl
roll
mov
test
or
test
test
fbstp
mov
xchg
mov
repz
out
push
stos
mov
lds
mov
dec
mov
imul
fbld
push
enter
pushf
add
dec
test
and
jg
inc
or
into
ds
push
sbb
shll
sub
inc
pop
rorl
xchg
or
lahf
ss
sbb
mov
xchg
mov
repz
fsubrs
imul
jae
or
push
cmp
test
stc
and
push
out
xlat
inc
xor
loop
mov
repz
cmovne
mov
xchg
movsl
fiadds
cli
loopne
enter
inc
das
dec
dec
adc
xchg
cmp
subb
jecxz
xchg
cmp
in
mov
notl
mov
xor
jno
fwait
es
fs
mov
fdivr
pop
add
mov
and
add
push
mov
sbb
mov
mov
scas
out
mov
or
icebp
mov
xchg
cmp
pushw
sub
add
mov
push
mov
ret
jl
pop
add
sub
sbb
cmpb
imul
in
jne
sbb
rol
dec
adc
xor
sub
faddl
push
js
imul
adc
push
inc
dec
mov
jae
faddl
stos
cmpsb
sbb
mov
loope
ret
movsl
insb
test
int
cs
dec
or
iret
sbb
fisubrs
adcb
notb
iret
outsb
out
jno
jecxz
pop
out
addr16
push
test
adc
das
pop
inc
int3
mov
pop
daa
scas
mov
mov
in
or
sbb
rcrb
inc
or
icebp
mov
jp
xlat
adc
jno
in
jb
gs
pop
jmp
mov
mov
cmp
mov
jne
push
movsl
mov
pushf
xchg
das
sahf
add
stos
loop
pop
cmp
hlt
arpl
mov
mov
in
cmp
or
push
rorl
xor
xchg
pop
push
cs
dec
inc
cmc
imul
lahf
iret
stos
sub
lds
pop
iret
add
ficoms
cmp
xchg
lahf
or
outsb
shlb
mov
je
jno
xchg
into
xchg
cmpsl
int3
cmpsl
leave
mov
adc
mov
inc
dec
or
out
mov
mov
repz
scas
ret
cmp
ljmp
out
out
out
push
sbb
testl
and
nop
cmp
xor
nop
and
pop
pushf
std
pusha
xchg
leave
scas
xor
mov
dec
cmp
and
fs
pop
sahf
cmp
mov
xchg
sbb
xor
stc
xor
inc
sbb
mov
pop
aad
xor
sarl
out
sarb
add
mov
xchg
or
rcr
out
add
imul
push
sub
mov
push
jae
insl
and
sub
cmp
or
cmp
mov
cld
inc
adc
cmp
imul
loope
ja
pop
mov
mov
xchg
cmp
cmpsb
mov
sahf
insb
mov
flds
testb
or
mov
test
jmp
in
mov
sbbb
rolb
inc
dec
inc
adc
pop
pusha
and
repz
mov
xchg
jmp
mull
push
jecxz
adc
mov
cmp
cmpsl
pmulhw
loopne
dec
popa
push
stc
xchg
fwait
or
or
pop
sbb
dec
lcall
cmp
cwtl
iret
orb
add
iret
aas
mov
xor
stc
mov
insl
push
jecxz
xor
inc
dec
and
roll
sti
inc
ljmp
fstp
jge
push
sbb
dec
icebp
mov
xchg
stos
sub
ret
mov
dec
or
shl
arpl
insb
dec
pop
jecxz
cmp
xor
sub
dec
aad
test
jae
lods
mov
add
mov
adc
pop
in
addr16
dec
sbb
fsts
out
addr16
imull
daa
jl
cmpsb
lods
dec
inc
or
xchg
mov
cltd
aas
xchg
pop
filds
sub
jl
jnp
mov
sbb
cmovs
adc
fiadds
rcl
inc
sub
jge
stos
das
stos
or
mov
and
int3
movsl
xor
shl
jmp
mulb
fstpt
sub
jl
push
sbb
mov
sarb
repnz
call
adc
mov
inc
aaa
pushf
jl
test
aam
mov
or
push
pop
scas
push
mov
and
push
sti
iret
xor
sbb
xchg
mov
mov
sti
insb
outsl
cmc
pop
cld
jl
bound
xlat
test
js
aaa
mov
movsb
dec
or
call
xchg
loop
xchg
aas
lret
cli
adcl
rcll
cmp
neg
xor
or
and
lret
test
inc
sbb
mov
xchg
xchg
fsubr
jae
mov
xchg
fcoml
pop
xchg
cmova
mov
das
dec
xor
pop
xchg
xchg
and
cs
and
loopne
rolb
xor
movsb
mov
mov
push
jo
xchg
aaa
arpl
loopne
jmp
push
add
add
inc
inc
dec
or
ret
pop
std
sub
lods
sub
xor
or
int
adcl
lret
test
es
mov
cmp
mov
pop
stos
dec
and
xchg
mov
test
inc
dec
adc
cmp
xor
pushf
gs
push
cli
aaa
ret
xchg
adc
nop
cmp
xchg
cmp
dec
adc
idivl
mov
push
outsb
lock
jle
sub
xchg
pop
jl
or
push
ss
into
mov
sbb
xor
push
cli
pop
mov
jp
pop
mul
pop
cli
imul
scas
sbb
cmp
std
leave
enter
push
sti
in
das
mov
mulb
fstl
decb
adc
adc
mov
and
and
xor
jbe
mov
mov
movsb
adc
pop
add
loope
push
ret
ss
inc
cmpl
inc
push
ja
xchg
fwait
pop
sti
fs
mov
jle
lea
rolb
hlt
and
cltd
push
pop
stc
lods
les
rclb
dec
or
mov
xchg
sub
je
icebp
pushf
in
or
add
pop
pop
mov
lret
dec
mov
in
xor
icebp
and
push
ljmp
loopne
out
xchg
or
push
pop
pop
dec
or
out
imul
addr16
mov
ds
js
cmp
mov
movsb
lock
mov
insl
dec
pop
xchg
inc
cmpsl
xchg
roll
stc
dec
jns
cli
in
xor
call
inc
push
push
mov
jmp
mov
les
roll
push
jbe
hlt
out
gs
out
ret
sti
test
test
mov
mov
aaa
adc
add
int3
mov
pop
imul
ds
popa
pop
or
push
test
mov
mov
cmc
sti
cmp
mov
mov
add
test
mov
cmpsb
adc
rcl
ljmp
sbb
inc
cli
jg
movsl
loopne
pop
insl
mov
mov
aas
and
jae
dec
xor
je
pop
ret
ss
out
mov
hlt
stc
arpl
scas
lret
xchg
rcrb
cmp
dec
psubusb
test
adc
lahf
icebp
adc
iret
popl
cli
pop
xor
das
or
out
mov
aam
and
lock
xchg
in
nop
inc
pop
pop
shr
out
dec
fdivp
test
mov
cmpsl
xor
inc
push
les
cmp
out
lahf
nop
out
xor
js
cltd
sub
out
push
jp
and
fisubs
pop
movl
jecxz
push
mov
mov
data16
mov
insl
stos
xor
movsl
sub
jg
push
push
das
mov
dec
xor
cmpsb
dec
or
xchg
jg
fs
enter
aam
dec
inc
and
lret
nop
push
pop
pop
add
orl
ljmp
aas
pop
add
xor
xchg
inc
fisubs
dec
inc
add
push
add
cmpsb
sub
xor
and
stos
mov
sbb
sub
xchg
sub
mov
jle
imulb
gs
dec
std
push
les
mov
or
push
jo
mov
mov
xor
dec
or
xlat
orb
pop
cli
pop
push
xchg
sub
mov
and
inc
stos
xor
lret
xchg
jbe
push
sbb
sti
nop
push
mov
jl
in
dec
rcll
xchg
cmp
add
lret
popf
out
out
jae
idivb
test
mov
push
sti
jne
mov
bound
xchg
and
loop
mov
test
mov
dec
mov
jbe
push
push
enter
mov
cmpsl
xchg
jae
mov
insl
add
xchg
xor
sahf
pop
into
popa
out
adc
dec
data16
xchg
into
lahf
adc
xor
and
jae
clc
adc
mov
fs
pop
loop
idivl
or
insl
sub
insb
adc
stos
js
mov
pop
lods
sub
js
movsl
das
loopne
mov
dec
aam
lea
iret
mov
roll
loop
xchg
clc
repnz
lahf
xlat
call
pop
cmp
cltd
xor
pop
mov
jb
lea
rolb
lcall
fcmovnb
stc
push
into
je
inc
or
data16
in
repz
mov
nop
adc
mov
cwtl
inc
rorb
pop
or
lods
orb
insb
sub
inc
and
push
stos
aas
int
mov
fdivrl
loopne
dec
mov
push
push
bound
out
and
sub
and
mov
add
pop
lcall
inc
pop
clc
or
shrb
mov
push
xchg
hlt
setno
cltd
xchg
push
mov
lret
mov
out
sarb
sbb
or
inc
sbb
das
mov
dec
cmp
repz
push
aas
or
or
cli
pop
or
inc
lock
cli
jp
xor
loope
jmp
cmp
test
sbb
mov
and
dec
mov
fisubl
mov
ja
pop
add
stos
sbb
add
icebp
push
xlat
in
xchg
pop
fidivrs
rclb
push
cmpsb
and
push
js
pop
je
jno
jmp
or
data16
test
xchg
loope
xor
add
sub
fs
int3
fidivrl
adc
push
ret
xchg
xchg
test
ljmp
test
xor
mov
ss
and
xor
int3
or
and
cmp
inc
jg
sbb
push
in
out
jno
repnz
leave
fidivrs
inc
xchg
cmp
adc
push
call
decl
aad
sub
mov
dec
cmp
mov
test
call
cmc
xchg
repnz
mov
enter
sbb
fdivr
inc
in
outsb
shr
lea
or
mov
mov
sbb
fstpt
data16
push
clc
shlb
push
push
rclb
sbb
add
pusha
push
les
out
lds
inc
fwait
ds
inc
jo
lahf
dec
rcll
push
or
imul
cwtl
stos
in
test
int
loop
inc
pop
add
mov
popa
jmp
adc
xchg
cmp
sbb
test
inc
cli
inc
or
xchg
sbb
xchg
cmpsl
cmp
add
xor
lods
bound
mov
add
sbb
pop
xor
lcall
mov
mov
mov
call
adc
loope
leave
inc
push
cld
mov
stos
paddq
int3
xchg
popa
addr16
add
adc
subl
shl
outsb
mov
mov
cmp
dec
jns
mull
lahf
scas
xor
les
push
cld
pusha
mov
test
push
xchg
mov
movb
loope
xor
inc
or
sub
out
mov
test
sbb
int
cmpsl
xchg
push
add
loopne
mov
int3
dec
sub
mov
lret
mov
stos
mov
pop
inc
sub
fs
fs
or
push
cmp
adc
fists
ret
push
jae
scas
orl
add
ret
fs
pop
inc
adc
sti
cltd
xor
mov
sub
mov
sbb
out
mov
fisubs
push
popa
jmp
sbb
push
sarl
jp
or
xor
fldenv
or
xchg
pop
jmp
lea
mov
xchg
push
lret
jb
jno
xchg
gs
push
pushf
mov
mov
lret
pop
lock
mov
out
es
decl
and
xchg
adc
mov
orl
test
dec
pushf
dec
std
arpl
test
jle
mov
cmpsb
mov
clc
pop
cltd
aaa
fucom
push
push
decl
mov
mov
adc
cmp
subl
repnz
fbstp
mov
or
dec
shl
int3
mov
setne
cmc
xchg
inc
test
and
psubusb
or
sahf
inc
pop
fildl
push
cmp
js
inc
dec
adc
mov
mov
movsl
and
inc
mov
lds
or
repz
inc
cltd
cmpsl
sub
js
je
jb
and
push
std
sti
xor
xchg
out
mov
cmp
popa
and
sbb
repz
dec
jl
xchg
inc
andb
js
fistpll
data16
xor
adc
lods
daa
adc
mov
ret
mov
pop
mov
xor
shlb
std
and
cwtl
shl
adcl
outsl
jecxz
fisttps
sbb
xor
enter
xchg
cmp
mov
xchg
cmp
sub
lods
jnp
ret
mov
imul
dec
imulb
add
push
pop
mov
jnp
jns
or
lret
pop
pusha
cmc
pop
push
push
mov
xor
xchg
test
mov
fldenv
mov
enter
xor
leave
ret
pop
mov
push
push
inc
jae
pop
repz
inc
adc
or
test
dec
or
xor
ds
daa
cmc
gs
outsl
jmp
add
cmp
loopne
std
xchg
mov
out
int
sti
xchg
out
jg
inc
sbb
std
fs
jo
mov
mov
sbb
sbb
or
call
pop
dec
mov
int3
and
repnz
call
std
dec
adc
leave
insb
icebp
pop
fstpl
and
inc
adc
ljmp
call
testl
outsb
mov
mov
push
mov
nop
cmp
xor
ret
rorb
mov
xchg
mov
mov
loopne
xor
les
push
lds
leave
fildl
or
in
pusha
movsl
sub
stc
hlt
pop
lahf
dec
inc
push
pop
lret
dec
adc
das
mov
mov
mov
mov
ljmp
rorl
cmc
pop
pop
inc
lds
test
cli
fs
push
or
sbb
inc
or
mov
loope
mov
imul
sti
rorb
adc
lods
inc
les
clc
jno
in
icebp
mov
scas
xor
pop
fdivrs
dec
or
adcb
mov
cmp
call
mull
dec
inc
adc
dec
std
push
pop
daa
out
in
scas
sub
cli
je
stos
idiv
pop
call
clc
scas
inc
sub
push
gs
inc
lods
xchg
push
stc
jns
lcall
das
in
jne
xchg
movsb
cs
pop
add
pop
rcrl
push
mov
xchg
fildl
insl
push
add
adc
gs
xor
cmpsb
dec
mull
mov
dec
push
inc
and
imul
icebp
int3
aam
mov
out
sub
or
cmc
jo
jb
leave
arpl
pusha
sbb
push
pop
dec
je
sub
in
inc
dec
adc
ret
cmc
mov
push
aad
sahf
sub
and
cmp
xchg
out
rclb
stos
inc
sub
mov
ss
mov
dec
lea
xor
jne
pop
inc
or
fstp
adc
jg
add
lahf
ds
xchg
stos
sub
push
pushl
movsl
push
leave
jb
cmp
mov
add
into
lods
add
lds
popa
clc
inc
sbb
aad
fs
xchg
push
addr16
fiadds
adc
jl
das
inc
mov
in
fwait
inc
cmc
push
xchg
pop
add
inc
xchg
lret
xchg
xchg
out
jno
movsl
sub
mov
xor
xchg
lret
int
iret
test
mov
pop
dec
fdivl
xchg
loope
stos
daa
stc
sti
inc
jle
xlat
jbe
in
or
or
and
jmp
fidivl
jge
push
ss
mov
rol
add
int3
cmp
pop
lock
pop
pmullw
cmp
lods
xor
dec
adc
orl
mov
mov
stos
xor
dec
enter
mov
push
mov
fistl
decb
push
jmp
and
movsl
mov
ret
std
or
imul
rclb
fnstcw
test
test
pop
inc
test
out
or
add
scas
add
jl
push
ret
xchg
lods
push
inc
cmp
push
xchg
xchg
mov
repnz
xchg
xchg
xchg
cmp
ret
and
flds
mov
mov
dec
or
rolb
hlt
or
ja
adc
insb
hlt
loope
test
fdivp
mov
sub
dec
adc
les
pusha
inc
repz
and
mov
test
or
xor
or
sbb
into
mov
or
cmp
repnz
icebp
rolb
ja
test
mov
push
adc
inc
mov
xor
outsl
sbb
leave
mov
ret
cwtl
inc
jne
fldl
daa
mov
fwait
inc
xchg
xchg
test
into
sbb
inc
fadds
or
dec
sub
push
andb
sub
sbb
cs
dec
test
and
data16
mov
jecxz
mov
push
cmp
pushl
movsb
mov
mov
sti
push
push
mov
add
sbb
push
shll
adc
insb
xchg
mov
gs
lods
add
aad
xchg
inc
mov
dec
pop
push
scas
out
adc
dec
cmpsl
xor
aad
jb
ret
mov
or
xchg
inc
outsl
aas
fdivrs
jb
and
icebp
jnp
insb
dec
insl
ljmp
popl
scas
aaa
lahf
xchg
es
daa
cmp
aad
cmp
pop
cli
inc
mov
mov
mov
sbb
cmpxchg
test
negl
mov
and
vunpckhps
fdivrs
jl
push
test
dec
or
pop
fiadds
push
push
mov
jmp
outsl
icebp
jmp
std
xor
cmp
sub
pushf
lahf
insl
movsb
sub
adc
shlb
add
pop
add
addr16
sub
imul
lcall
arpl
ficompl
fimuls
scas
sub
dec
and
fisttpl
sbb
pop
jmp
jp
orl
cmpsl
cwtl
xor
dec
fdiv
arpl
or
enter
ret
add
pop
jnp
and
sbb
pop
ds
outsb
out
loope
mov
cmp
mov
rclb
jecxz
push
xchg
rolb
and
xchg
cmp
notl
int
divl
pop
mov
sub
push
add
xchg
inc
ss
call
sbb
cli
hlt
mov
push
outsl
cmp
xchg
sub
mov
mov
xor
pop
call
xchg
push
lds
push
xor
sbb
add
push
inc
call
sbb
sub
out
push
add
mov
loopne
je
sub
xor
stos
ljmp
in
mov
outsl
testb
pop
fwait
pop
add
fisubs
out
mov
pop
sub
fisttps
ret
mov
sub
mov
je
mov
lods
xchg
loopne
xlat
adc
push
test
pop
cmc
add
xchg
cmp
inc
adc
add
jle
mov
adc
inc
or
lds
scas
es
jecxz
or
lcall
xor
sbb
iret
xchg
orb
xlat
sar
pusha
push
or
test
test
shll
dec
adc
jle
mov
push
enter
pusha
lock
in
out
jae
testl
mov
dec
les
fstpl
and
lea
repz
pop
loopne
sbb
dec
xor
pushf
dec
mov
leave
pop
add
mov
add
fdivl
popf
ret
or
mov
imul
aaa
jae
or
jb
fiadds
jno
stos
xor
addr16
push
fisttpl
cltd
adc
mov
mov
push
mov
dec
adc
xchg
xchg
inc
enter
mov
mov
mov
loope
inc
enter
mov
dec
push
mov
movsb
dec
and
imul
jne
or
or
mov
loop
adc
loopne
faddl
pop
pop
sarl
mov
stos
cld
sbb
xor
inc
push
arpl
push
add
jl
xchg
jae
mov
clc
ss
lea
jns
ret
mov
icebp
cmp
frstor
out
cmp
cmp
cmp
xchg
inc
fbld
pushf
aaa
lcall
mov
push
xor
mov
test
int3
xchg
and
imul
jmp
mov
lret
lea
lcall
lods
pop
or
push
jbe
mov
les
mov
shl
lahf
jmp
psrlq
mov
movsb
repz
lcall
mov
andl
sub
filds
ret
xor
adc
lret
sbb
stc
popa
hlt
dec
xchg
cmp
call
jo
sub
into
cmp
cld
push
add
xchg
and
mov
jae
inc
fdiv
xchg
cmp
lds
pop
icebp
pop
push
js
push
pushf
xor
mov
push
inc
fidivs
xchg
xor
imul
lock
xlat
push
movsl
or
lret
mov
sub
pop
lods
push
jmp
lods
pushl
xor
push
and
push
movsl
lods
inc
xlat
jae
cmp
clc
lret
mov
jg
sbb
jns
sahf
push
popf
iret
insl
add
and
push
mov
inc
inc
fnstenv
cmp
test
out
adc
jmp
or
push
mov
outsl
adc
testb
test
mov
adc
or
push
out
cld
dec
in
jl
add
or
and
mov
stos
inc
push
cmc
cmpsl
ds
jbe
pop
test
lds
out
sti
fwait
jecxz
int
add
cwtl
pop
outsl
and
jno
inc
fdiv
xchg
cmp
testl
adc
push
mov
push
fdivl
jo
das
shrl
mov
mov
xor
mov
push
lods
aaa
aad
cmpsb
push
pop
xor
mov
sub
jmp
stos
std
jo
das
int3
imul
sbbb
pop
push
mov
cmpsb
cmp
sub
les
dec
call
jp
pushf
push
popf
int
add
pop
mov
inc
fnstenv
ds
xchg
pusha
test
in
adc
call
or
push
mov
fstp
outsl
cmpxchg
insb
loop
testb
adcl
push
adc
push
test
push
out
sti
dec
in
jp
add
jg
mov
jmp
stos
inc
push
repz
and
inc
pop
js
out
stc
cltd
in
lret
sbb
popf
dec
in
add
sahf
and
lock
ds
adc
inc
loop
repz
xchg
xor
adc
popf
xor
xchg
push
cmp
mov
or
fidivl
sub
clc
jecxz
repnz
rcll
cmpsl
add
xor
lds
push
ljmp
jno
sub
dec
sbbb
inc
shll
mov
lds
jmp
jnp
lcall
fwait
in
and
mov
ds
fisubrl
aas
inc
nop
popa
clc
shll
xchg
loop
push
adc
jnp
out
popf
xor
pop
lcall
pop
mov
jo
scas
insl
loopne
testl
mov
adc
add
xor
fsubs
dec
out
js
push
stos
dec
insl
add
lret
lea
push
lods
inc
push
icebp
test
popa
movsb
inc
pop
jbe
call
jl
sbb
sahf
dec
ljmp
pushf
cmp
mov
out
mov
mov
loopne
hlt
adc
pop
xchg
xor
fs
xor
mov
mov
dec
or
mov
aad
pop
scas
stc
nop
loope
repz
rcll
test
push
ss
and
push
cmpsl
push
jmp
jne
in
stc
jb
sub
imul
dec
nop
daa
jle
mov
dec
lahf
scas
inc
shrl
aas
mov
ret
hlt
inc
ljmp
cwtl
or
cltd
ljmp
in
cmp
fldt
inc
xlat
mov
mov
loopne
pop
adc
sahf
xor
aaa
xchg
mov
fidivl
lods
xlat
outsb
fisubrs
pop
push
mov
adcb
mov
adc
add
push
jmp
sub
pop
test
lret
cld
pushf
mov
into
sbb
test
bound
jmp
jl
pop
or
sbb
mov
imul
mov
ficomps
punpcklwd
adc
lahf
ss
cltd
xor
mov
or
jae
sub
insb
pop
scas
cli
xchg
loopne
repz
iret
adc
test
das
push
cmpsb
push
in
xlat
jae
in
clc
jae
sub
imul
dec
xchg
sub
mov
dec
sahf
scas
inc
shrb
sahf
icebp
int
and
pop
repnz
jmp
jbe
in
inc
xchg
or
xchg
jmp
and
insb
or
cmp
arpl
mov
filds
adc
xor
xor
push
mov
jb
stos
xlat
outsb
fsubrl
stc
nop
pop
std
cmc
mov
jg
scas
mov
adc
add
push
ljmp
jno
test
insl
add
leave
es
lcall
dec
in
test
arpl
ret
ljmp
push
or
pop
imul
mov
in
mov
mov
fcompl
or
jnp,pn
pusha
mov
aaa
in
cltd
xor
aam
dec
push
pop
fnsave
aad
pop
lods
sti
xchg
fistpll
mov
adc
sbbl
push
movsb
push
in
aad
dec
in
divb
les
dec
xchg
sub
mov
dec
pushf
mov
into
push
inc
pushf
out
into
and
in
xorl
inc
xchg
or
xchg
out
mov
call
or
cmp
pop
testb
adc
xor
xor
cmpl
xchg
fdivl
test
outsl
fisubrl
cli
xchg
pop
sti
testb
dec
adc
jg
ss
mov
push
jmp
repz
out
je
or
nop
daa
stc
cwtl
mov
lret
inc
dec
jmp
inc
sbb
ds
jmp
repz
out
ret
adc
mov
adc
and
ljmp
cld
cmp
pop
cmc
or
sbb
mov
cmp
jg
xor
sarb
jne
and
cld
xchg
fnstsw
mov
int3
adc
sbbl
push
in
shll
out
hlt
je
es
insl
add
inc
xchg
sub
mov
dec
lcall
fwait
in
into
gs
mov
in
xorl
jle
xchg
or
xchg
in
mov
out
inc
inc
fnstcw
mov
pop
pusha
testl
mov
xor
cmpl
jae
cmpsl
fnstenv
daa
cli
xchg
pop
cli
testl
jle
ss
lahf
xor
rcrb
push
in
push
icebp
push
call
movsb
inc
outsl
push
jne
xchg
sub
xchg
lea
sbb
inc
sbb
sahf
cmp
pusha
outsb
mov
out
rcll
mov
adc
rclb
inc
fsubrp
xchg
mov
data16
cmp
pop
testb
test
mov
jge
pop
scas
mov
xor
sarb
jbe
and
outsb
push
test
cmc
mov
lret
sti
dec
cmp
jg
xor
dec
mov
push
out
bnd
and
outsb
add
ja
lea
cwtl
mov
lret
inc
cltd
jmp
sbb
pusha
in
ds
test
call
mov
xchg
jecxz
rclb
mov
pushw
inc
fidivl
xchg
mov
flds
push
cmp
popf
xor
cmpb
adc
je
movsl
fnstenv
es
xchg
pop
clc
testl
jl
aaa
into
std
popf
xor
into
push
push
in
dec
out
push
call
mov
les
and
pop
mov
dec
out
inc
sbb
popfw
cmp
pusha
insb
mov
out
mov
loopne
pushf
adc
xchg
xor
mov
out
inc
fdivs
pop
testb
test
scas
mov
xor
into
mov
ja
and
outsb
push
test
xchg
fidivl
cmpsb
sti
sbb
sub
adc
jle
xor
dec
lahf
pop
out
shrb
popf
icebp
jbe
and
xchg
sub
lea
xchg
mov
leave
gs
inc
xchg
ljmp
jmp
out
test
call
mov
nop
loop
rcll
and
jecxz
dec
fbld
inc
fidivl
push
popa
clc
xchg
test
or
mov
xor
jg
push
mov
mov
jne
mov
cld
xchg
push
div
mov
jns
mov
dec
adc
iret
cld
fwait
xor
int3
sbb
push
call
mov
ret
xchg
sub
xchg
lea
push
mov
dec
in
inc
pop
push
addr16
cmp
pusha
push
out
test
mov
jle
adc
pushf
packsswb
ret
and
out
inc
fdivs
aam
testb
jge
pop
lods
movsb
cmp
jns
xor
int3
mov
js
pop
fsubrs
cmpsb
call
movsb
stc
sbb
stos
testl
lret
pop
lock
push
call
and
xchg
sub
adc
dec
arpl
sbb
out
xchg
jmp
movsb
mov
loopne
ret
and
loopne
add
test
mov
stc
test
test
cmpsl
adcb
sub
xor
scas
dec
mov
jbe
mov
std
xchg
push
hlt
clc
es
mov
inc
push
lods
js
cmp
cli
cltd
xor
lret
out
dec
jmp
jmp
mov
rcll
adc
dec
inc
jecxz
inc
adc
ss
mov
call
movsl
aas
faddl
popf
or
cs
pop
mov
loope
addb
add
pusha
testl
and
adc
fidivs
xor
lret
mov
js
push
fnstenv
movsl
call
mov
lds
sarb
xor
dec
pushf
pop
lock
push
jmp
and
sub
jg
dec
bound
push
call
or
cmpl
pop
or
adc
dec
loopne
add
xor
arpl
test
test
cmpsb
sbbl
pop
stc
lahf
sub
scas
dec
mov
jbe
mov
std
xchg
push
repz
nop
and
inc
pop
scas
ja
cmp
stc
cwtl
xor
out
dec
ljmp
lahf
cmp
or
xchg
sub
rcll
dec
inc
loop
inc
adc
shrl
xor
out
xchg
mov
cmpb
pop
sahf
or
sub
xchg
sub
dec
loope
jg
fidivl
shll
add
push
mov
jg
push
stos
movsl
cmp
jbe
xor
inc
pop
xor
mov
js
sbb
call
mov
les
lods
cmc
dec
cmp
jp
xor
lock
push
ja
pop
mov
xchg
sub
push
nop
daa
inc
xchg
mov
lds
inc
xchg
out
push
out
out
xchg
jmp
cmp
mov
xsave
mov
popa
add
xor
fs
adc
sbb
movsl
sbbb
daa
mov
aaa
sub
pop
lods
dec
mov
jbe
lahf
fdivl
and
xchg
push
repnz
xchg
and
sbb
jbe
cmp
clc
xchg
ss
sbb
dec
jmp
jbe
sahf
cmp
insl
mov
nop
daa
rclb
dec
inc
loope
inc
adc
push
mov
jmp
ljmp
fimull
lahf
or
ret
nop
sub
mov
loop
inc
fldt
shlb
add
push
mov
adcb
stos
movsl
cmp
jne
xor
das
leave
mov
js
sbb
jb
mov
stc
nop
mov
ret
pop
scas
hlt
dec
cmp
jns
ss
lcall
cwtl
in
ja
push
mov
xchg
sub
or
mov
les
inc
xchg
in
push
out
out
xchg
in
cmpl
or
mov
push
lods
sub
pusha
incl
xor
fs
adc
sbb
movsb
sbbb
daa
mov
aaa
sub
pop
lods
dec
mov
jbe
sahf
fdivl
and
xchg
push
icebp
cli
xchg
and
mov
inc
sbb
clc
xchg
ss
sbb
dec
call
jbe
sahf
cmp
insb
mov
nop
daa
mov
loopne
inc
adc
push
gs
ljmp
lahf
or
ret
nop
sub
mov
loop
inc
fldt
iret
stc
add
push
mov
adcb
stos
movsl
cmp
je
xor
das
enter
push
loope
sbbb
jb
mov
stc
nop
mov
ret
repz
cmp
jns
ss
lcall
xchg
in
ja
push
mov
xchg
sub
or
sub
xchg
mov
les
inc
xchg
in
push
in
out
xchg
in
cmpl
or
mov
push
lods
sub
pusha
incb
das
andb
push
fs
adc
sbbb
daa
mov
aaa
sub
pop
lods
dec
mov
jbe
popf
fdivl
and
xchg
push
lock
xchg
and
mov
inc
sbb
clc
xchg
ss
sbb
dec
out
jmp
insb
jbe
sahf
cmp
imul
daa
mov
fildll
push
fs
ljmp
fmuls
lahf
or
ret
nop
sub
mov
loop
inc
fldt
into
stc
call
push
mov
sbbl
movsl
cld
ret
pop
cs
mov
js
sbb
jae
mov
cli
xchg
lahf
cmc
sbb
scas
repnz
cmp
js
aaa
into
inc
cltd
pop
lock
in
xchg
jmp
push
sbb
ds
sub
or
dec
ret
pop
mov
nop
in
push
in
out
xchg
in
test
mov
mov
or
cs
loopne
std
inc
fisubrs
andl
adc
sbb
mov
mov
cmp
jp
pop
lods
dec
mov
jbe
fsave
xchg
push
out
sti
xchg
and
movsl
inc
sbb
notl
pop
lock
in
in
push
imul
aaa
jae
imul
mov
inc
imul
sub
mov
cmp
or
pop
mov
loop
jp
fsubrl
int3
arpl
std
push
mov
xchg
sbbb
test
cmp
mov
lds
jns
sbb
je
mov
sti
xchg
popf
repz
mov
mov
cmp
jbe
cmp
inc
xchg
pop
icebp
enter
xchg
jmp
je
call
or
dec
rcrl
loop
imul
lock
out
test
push
or
xchg
sub
or
dec
loope
sti
dec
fildll
push
std
jle
xchg
shlb
cmp
mov
pop
stos
inc
rclb
loopne
std
cltd
fidivs
push
call
push
jb
mov
aas
sbb
cmc
xchg
cmp
ret
icebp
inc
jecxz
in
adc
js
fwait
xor
xchg
sub
mov
push
cs
gs
mov
mov
sub
cmpsl
cmp
or
lea
sub
fistpll
lret
sti
push
mov
test
sbb
cmpsl
fsubrs
cmp
ret
mov
jp
push
fidivs
lahf
add
fwait
icebp
pop
mov
mov
cmp
rolb
pop
repnz
popa
push
out
xchg
out
adc
mov
or
cmp
sub
lea
dec
mov
shrl
scas
shlb
xor
mov
out
xchg
xchg
cmpsb
mov
or
les
cmpsl
sub
fsubrs
dec
loop
stc
dec
loopne
jge
add
rolb
sbb
and
cmp
ja
pop
test
lret
cld
xchg
fbstp
sbb
std
xchg
sbb
push
mov
cmp
cmp
repz
cmp
rclb
inc
loope
out
adc
adc
mov
xchg
sub
fnstenv
imul
repnz
jg
test
rorb
mov
mov
rclb
in
jbe
fisubs
leave
gs
cli
push
mov
sbbl
sbb
cmpsl
ds
outsb
mov
pop
sub
rclb
jecxz
jl
fbstp
popf
add
lcall
mov
inc
cmp
sarl
xchg
pop
repnz
out
xchg
in
adc
mov
or
push
xchg
sub
mov
dec
mov
shrl
lods
shrl
xor
mov
lock
test
cmpsb
mov
push
movsl
test
sub
ret
xlat
sub
pop
clc
dec
loope
jnp
add
into
xchg
add
movsl
cmp
lock
cmp
jne
pop
cmpsl
inc
ret
enter
xchg
loopne
enter
dec
jmp
push
mov
cmp
mov
sarb
mov
sarl
loopne
out
adc
adc
mov
xchg
sub
fdivs
imul
repnz
jle
test
rorl
add
mov
sub
push
stos
dec
in
jne
fbld
enter
dec
mov
sbbl
cmpsl
ds
mov
pop
daa
rol
repz
jecxz
jp
loopne
inc
fwait
add
cltd
in
pop
mov
mov
cmp
sarb
xchg
pop
bnd
lock
jecxz
adc
ss
cs
mov
dec
mov
shrl
lods
shrb
das
icebp
mov
lock
orl
mov
push
movsl
adc
les
movsl
sub
daa
dec
loop
testl
lods
dec
push
push
lcall
cmpsb
cmp
and
cmpsb
inc
ret
loop
stc
xchg
loopne
sbb
cwtl
dec
out
xchg
sbb
mov
cmp
imul
sarl
ficomps
pcmpgtb
xchg
xor
bound
xchg
sub
mov
or
insb
nop
sub
addr16
mov
mov
jl
test
iret
or
add
mov
sub
push
test
dec
fbld
data16
testl
sbb
mov
mov
pop
es
in
jns
loopne
inc
lcall
pop
pop
add
push
ljmp
fisubl
stos
or
lods
mov
adc
pop
xor
cmp
and
shll
in
das
mov
mov
push
int
push
fldl
ds
out
adc
rclb
imul
mov
call
cmc
xor
loopne
in
and
inc
movsb
push
icebp
pushf
rcrl
push
leave
inc
pop
or
xchg
and
out
mov
push
mov
inc
lret
inc
divl
and
leave
push
pop
jp
into
sbb
sub
push
and
xor
adc
adc
daa
into
outsb
shl
jne
mov
inc
cmp
out
adc
jp
rolb
std
jnp
inc
js
add
dec
cld
fwait
adc
insb
dec
add
push
jnp
jmp
scas
push
stos
std
movsb
sub
das
int3
out
fbld
mov
adc
lret
jp
xchg
cwtl
ss
fdivrl
add
pop
sbb
das
mov
fsub
subl
inc
jge
shlb
jecxz
ds
cmpb
gs
ja
sbb
and
jb
add
lcall
notl
cmp
sbb
mov
cmp
jbe
add
mov
popf
push
and
xor
inc
pop
testb
pop
ja
inc
sbb
sub
fs
mov
cmp
daa
mov
jl
nop
int
and
shll
in
jg
decl
pop
loop
adc
xchg
ja
sbb
pusha
cmp
jae
hlt
cmp
lods
mov
sbb
jnp
pusha
imul
or
dec
pop
mov
push
push
push
mov
repnz
lea
dec
ds
mov
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
dec
xor
xchg
cld
sbb
or
sub
mov
scas
into
sub
mov
push
jno
add
imul
call
data16
loopne
sbb
and
outsl
mov
nop
jno
mov
push
js
mov
mov
mov
push
mov
or
inc
cmp
mov
ljmpw
pop
pop
sahf
imul
aam
sbb
adc
cmp
stos
inc
outsb
sbb
pop
dec
repz
repz
add
icebp
push
mov
mov
lock
pop
cmpsl
mov
adc
stc
adc
ljmp
sub
xor
or
pusha
adc
lahf
rcr
popf
xor
jg
aaa
arpl
leave
data16
xor
clc
jae
jnp
ss
fmull
test
and
or
pop
clc
fildll
rorl
ds
out
jno
aad
cmp
cmp
xlat
adc
xor
pop
adc
xor
ss
and
aas
pop
inc
dec
mov
mov
cwtl
fadds
loopne
popf
in
and
imul
mov
xchg
mov
inc
jne
insl
int3
dec
pop
stos
cmp
push
xor
gs
xchg
cli
mov
inc
jae
dec
add
in
aas
arpl
jecxz
xor
mov
insl
out
out
xchg
pop
je
xor
add
into
mov
ljmp
xchg
jns
gs
inc
xchg
add
ret
cli
in
add
mov
cli
cmp
mov
add
mov
pop
imul
add
adc
lock
mov
aam
stc
aaa
aam
sub
push
xchg
mov
add
cmp
mov
rcrl
pop
adc
jo
sbb
aaa
out
lret
nop
and
call
outsb
sbb
ret
or
aam
cmpsb
mov
mov
inc
adc
sub
into
xor
aas
ret
cmp
les
aad
xchg
fisubl
pop
insl
stc
add
inc
add
outsb
push
mov
test
fwait
out
leave
in
addb
je
jne
xchg
xor
rcll
xor
push
adc
dec
ret
xchg
mov
mov
out
cld
jp
das
outsb
push
lahf
push
xlat
jp
lret
in
mov
push
lcall
cs
push
sahf
xchg
mov
jg
js
andl
xchg
mov
lds
cmp
ret
cmp
mov
push
shrb
push
in
xchg
push
lret
scas
mov
dec
loopne
jp
icebp
jecxz
ja
test
jb
or
sbb
cmp
xchg
push
cmp
stc
push
repnz
rcrl
xorb
inc
movb
dec
push
inc
inc
mov
push
les
imul
pop
into
jmp
pop
cmp
clc
or
xabort
cmp
push
mov
mov
xor
lods
fcomps
add
js
fbld
pop
xchg
xor
inc
in
push
mov
jg
pop
push
arpl
test
xlat
int
mov
xor
dec
cmpsb
fisubl
scas
mov
xor
scas
aaa
or
mov
aaa
mov
outsb
xchg
insb
dec
inc
inc
test
jp
mov
mov
inc
rclb
dec
nop
bsr
imul
bound
sbb
push
or
adc
or
xlat
dec
cmc
push
leave
fwait
push
mov
dec
outsb
push
sbb
je
push
push
in
aad
in
mov
int3
out
ret
out
popf
rcll
lock
enter
popa
pop
xlat
sbb
inc
lret
scas
movsl
pop
push
mov
out
mov
daa
adc
or
cmp
sahf
cmp
sbb
in
fcompl
sub
scas
and
xor
inc
pop
movsb
mov
lcall
push
cmp
and
dec
xor
je
pop
fidivs
jg
fisubs
loope
into
jle
xor
jg
sub
stos
inc
xor
movsl
aaa
lret
jg
je
jns
push
push
and
mov
adc
mov
test
movsb
push
push
mov
pop
jno
shrl
call
stc
xchg
or
jge
push
jnp
fmull
bound
or
mov
jbe
fldt
cmp
xor
stos
cmpsl
xor
and
pop
loop
hlt
sbb
add
pop
out
jmp
xchg
shr
shll
scas
xor
out
and
dec
insb
ds
in
aam
or
out
fisubs
cmp
fadds
and
jge
jp
adc
pop
movsl
stc
test
xchg
outsl
mov
inc
mov
mov
push
cmp
adc
xlat
dec
push
jbe
loope
subl
or
adc
stos
lret
sahf
shlb
cwtl
mov
loope
dec
or
je
fimull
inc
sub
loopne
out
sub
ja
fisttpll
lea
arpl
hlt
cli
push
les
cmc
pop
mov
sbbb
dec
lea
ret
ds
jp
data16
dec
jnp
bound
loop
mov
sub
popa
loope
popf
pop
loopne
es
inc
and
mov
fcoml
jge
les
mov
pop
pop
lock
mov
pop
pusha
lock
jnp
bound
shlb
shll
dec
mov
mov
aam
and
daa
addr16
and
jnp
sub
pop
dec
mov
out
das
or
hlt
or
int3
push
sub
xlat
sub
or
outsl
dec
and
xchg
insl
pop
mov
xchg
outsb
pop
xchg
dec
mov
sti
push
mov
leave
cld
outsl
ss
nop
icebp
lea
cmp
pop
aaa
adc
enter
lds
jae
mov
addb
inc
mov
repz
mov
jg
lret
push
cs
loop
test
xor
mov
outsb
sahf
adc
icebp
mov
pop
xor
aaa
rcrb
js
adc
mov
inc
lahf
and
inc
sarb
icebp
out
repnz
jno
adc
repz
repnz
adc
or
repnz
push
or
dec
xrelease
mov
xchg
and
shrb
mov
lods
dec
pop
in
sbb
andl
sbb
jp
aaa
imull
dec
xchg
gs
xchg
sbb
lret
sub
call
mov
popf
add
aaa
ja
mov
pmaddwd
stos
aam
mov
mov
and
push
pushf
into
adc
push
and
pop
cmp
into
in
movsb
mov
cli
cmp
pop
xchg
cmp
mov
les
lods
jp
sub
dec
cmp
negb
xchg
jmp
cmp
xchg
ds
pop
mov
arpl
lret
jb
lds
jbe
push
and
movsb
test
iret
inc
pop
gs
mov
xchg
and
or
sahf
or
lock
jecxz
jae
cmp
mov
jmp
jg
mov
mov
inc
sti
push
and
rorb
add
shll
out
aam
push
je
nop
xchg
dec
imul
pop
test
js
hlt
stc
mov
sub
mov
fwait
gs
xchg
adc
xchg
push
xor
push
leave
jg
cmp
aaa
jp
pop
mov
mov
sbb
push
repnz
mov
data16
fdivl
clc
pop
xchg
mov
or
fisubl
push
cmpsl
mov
push
pop
mov
in
sarl
push
daa
xor
mov
push
jl
mov
pushf
popf
call
pop
neg
imul
out
sub
push
lea
nop
fisttpll
mov
sbb
in
daa
int
push
add
and
stc
fcoms
add
mov
ret
loopne
xchg
jnp
imull
mov
sti
push
mov
xlat
jae
push
push
mov
outsl
cmp
or
ds
push
pop
idivb
lods
or
inc
jge
xor
xor
shll
