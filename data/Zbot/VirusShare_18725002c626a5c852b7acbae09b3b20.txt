call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
pushl
shlb
pop
add
call
add
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
jmp
ret
mov
sub
sub
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
incl
lock
add
add
and
add
and
add
add
in
and
add
add
fsubs
add
mov
and
add
and
add
add
and
add
and
add
and
add
and
add
add
les
add
jle
add
add
add
pop
and
add
and
add
add
in
and
add
and
add
and
add
add
fisubl
add
cmpsb
and
add
add
cld
and
add
add
add
add
push
and
add
add
add
add
nop
and
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
add
and
add
and
add
add
in
and
add
add
fsubs
add
mov
and
add
and
add
add
and
add
and
add
and
add
and
add
add
les
add
jle
add
add
add
pop
and
add
and
add
add
in
and
add
and
add
and
add
add
fisubl
add
cmpsb
and
add
add
cld
and
add
add
add
add
push
and
add
add
add
add
nop
and
add
add
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jb
jbe
je
push
jb
imul
push
add
insb
outsl
jae
dec
popa
outsb
fs
add
fs
imul
add
aad
inc
gs
gs
inc
imul
imul
insl
gs
insb
outsl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
aam
inc
gs
jb
jbe
push
jns
gs
add
add
imul
outsb
je
outsl
insb
add
dec
jo
outsb
dec
jne
gs
add
dec
add
popa
insb
dec
outsl
arpl
rolb
dec
gs
jo
gs
jb
jns
out
inc
gs
imul
bound
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
jb
je
arpl
add
xchg
add
je
jne
jb
outsb
je
push
add
roll
dec
gs
jo
jb
add
push
push
je
imul
inc
add
dec
add
insb
outsb
inc
add
data16
je
je
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
ja
push
popa
arpl
jb
jne
add
outsb
push
push
popa
je
add
inc
gs
push
gs
inc
js
outsb
je
add
gs
push
gs
dec
gs
imul
jae
push
arpl
add
add
ja
push
fs
inc
gs
imul
gs
add
mov
push
gs
imul
gs
add
add
je
push
outsl
outsl
insb
add
jns
inc
gs
push
jns
push
imul
gs
push
outsl
insb
outsl
jb
xor
jae
push
push
popa
je
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
inc
gs
jbe
imul
imul
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jp
jl
lods
lods
stos
add
cmpsb
push
mov
mov
mov
ret
ret
stos
lret
lret
int3
rcl
in
rcl
shl
rcl
shl
into
into
into
hlt
enter
enter
mov
mov
mov
lods
stos
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
leave
lret
leave
not
rcl
cld
xlat
xlat
std
fcomp
fdivr
fcomp
aam
rcl
sar
into
into
int3
aad
aad
iret
iret
sar
ret
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
lret
lret
iret
iret
sar
aad
xlat
call
fdivr
aam
aam
int
int
into
int
call
aam
int
int3
mov
mov
mov
std
cmpsb
cmpsb
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
pop
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int
rcl
sar
xlat
xlat
call
xlat
call
aam
dec
into
into
dec
lret
leave
dec
int3
into
inc
inc
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
push
push
pop
pop
pop
fs
push
sbb
sub
cmp
aaa
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
inc
leave
dec
iret
iret
call
call
aam
dec
rcl
inc
leave
inc
mov
mov
mov
scas
lods
lods
jmp
pushf
sahf
cwtl
cwtl
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jge
jg
jb
jb
arpl
mov
cmp
inc
inc
mov
outsl
outsb
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
lret
dec
lret
lret
mov
mov
mov
ljmp
movsb
mov
call
xchg
xchg
xchg
xchg
lcall
lahf
aas
aas
aas
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jl
nop
mov
incb
jl
idivb
jp
outsl
outsb
outsl
out
addr16
jne
jne
jge
jge
jp
js
gs
inc
cmp
pop
sbb
pi2fd
fwait
lcall
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
nop
incl
addl
xchg
xchg
xchg
sahf
mov
mov
mov
jp
jns
das
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
mov
mov
mov
addl
mov
mov
jle
jno
jo
jae
jne
jge
jle
addb
xchg
data16
cmp
and
and
jge
jg
fwait
lcall
stos
test
icebp
lods
lods
lods
sti
lods
lods
lods
lods
stos
lods
stos
test
std
mov
fwait
cltd
xchg
xchg
xchg
decl
jg
jns
js
jp
jnp
xchg
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
or
add
add
add
add
add
add
push
pop
adc
movsb
cmpsl
out
lods
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
pop
pop
push
or
inc
inc
dec
imul
test
leave
fwait
fistps
cltd
stc
nop
nop
xchg
std
mov
mov
xchg
mov
lcall
cmpsb
movsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
mov
jp
lods
test
add
adc
test
call
cltd
xchg
cltd
incl
test
decb
xchg
xchg
sahf
pushf
popf
std
movsb
mov
mov
in
nop
in
xchg
push
jne
push
cmovp
or
daa
sub
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
mov
call
sahf
sahf
jmp
test
lods
pushl
mov
stos
std
rolb
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
sahf
xchg
pushf
incl
mov
nop
call
xchg
xchg
sahf
pushf
popf
mov
test
movsb
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jno
jae
jnp
jge
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
ss
mov
ja
mov
movsb
mov
mov
mov
mov
movsl
add
mov
add
pop
adc
mov
ljmp
sahf
decl
nop
xchg
call
xchg
xchg
call
xchg
cwtl
lcall
sahf
sahf
mov
std
mov
lcall
nop
xchg
xchg
les
cwtl
lcall
lea
stc
xchg
xchg
std
xchg
je
fwait
addr16
lahf
pop
test
movsb
push
cmp
inc
jge
mov
jp
mov
je
mov
insl
ljmp
adc
stos
or
lods
or
mov
jle
mov
mov
stos
pushf
movsb
movsb
movsl
and
add
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
lcall
lahf
lahf
lcall
cltd
cltd
call
xchg
xchg
decb
cwtl
xchg
xchg
xchg
lcall
cltd
lahf
stc
sahf
xchg
sahf
cld
sahf
xchg
xchg
push
xchg
pop
jle
cwtl
dec
jns
cltd
je,pt
cltd
sub
popf
push
addr16
lahf
pop
jmp
ljmp
adc
lods
pcmpgtd
scas
adc
mov
push
mov
push
mov
imul
ds
cltd
scas
mov
lods
lods
scas
mov
movsb
movsb
add
add
add
add
add
pop
pop
adc
mov
jmp
xchg
xchg
lcall
sahf
lahf
jmp
movsl
jmp
xchg
cwtl
decl
mov
xchg
xchg
xchg
jbe
fwait
jo
lcall
call
cs
sbb
pop
call
add
pop
lcall
add
push
pushl
pop
jno
mov
outsl
mov
and
mov
pop
jbe
mov
xchg
lods
mov
scas
scas
mov
lahf
sahf
lahf
add
add
add
add
add
pop
pop
adc
scas
mov
mov
lcall
movsb
mov
cmpsl
jmp
test
jmp
pushf
pushf
call
pop
jbe
mov
decl
sub
mov
popa
decl
or
addb
incl
add
nop
add
xchg
add
lcall
ljmp
pop
jo
mov
ja
mov
sub
mov
sub
les
jg
leave
das
cmp
inc
mov
mov
cld
scas
mov
lret
mov
add
add
add
add
stos
mov
push
adc
test
mov
jmp
stos
stos
ljmp
lods
lods
pushl
scas
lods
jmp
jno
decl
or
push
incl
add
addl
incl
add
mov
push
decl
push
call
add
sahf
add
movsb
add
lods
adc
mov
aaa
cmp
cmp
dec
cmp
sarb
call
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
sahf
jmp
lods
lods
pushl
mov
pushl
mov
ljmp
mov
mov
push
decl
push
push
decl
or
test
push
incl
add
nop
add
xchg
add
sahf
add
add
add
lods
add
mov
jb
ret
dec
inc
mov
int
call
inc
call
inc
mov
fmuls
fmuls
fisttpl
fisttpll
ficoml
call
test
std
mov
mov
movsb
movsl
movsl
arpl
mov
add
add
add
fwait
cwtl
cltd
add
inc
adc
jp
movsb
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
scas
mov
mov
aaa
outsl
decl
sbb
call
adc
decl
or
mov
push
call
add
popf
add
add
cmpsl
add
stos
add
mov
arpl
shlb
dec
dec
call
push
cwtl
call
push
lcall
push
popf
jmp
pop
sahf
fists
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
sahf
mov
add
inc
inc
adc
jns
lahf
cltd
lahf
jmp
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
je
nop
pop
arpl
xchg
and
callw
sbb
or
xchg
add
xchg
add
lcall
ljmp
add
mov
data16
mov
xor
fldenv
fbld
fisubs
jmp
gs
in
cmpsl
call
push
jmp
push
mov
int3
mov
mov
mov
sahf
mov
add
add
add
inc
inc
adc
jae
fwait
xchg
cltd
call
sahf
fwait
lahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
pop
call
add
fwait
add
mov
add
stos
add
mov
pushw
adc
roll
fsubrl
jmp
jo
jmp
jo
jmp
jno
jmp
jne
in
je
out
je
out
je
out
jae
jmp
mov
mov
cmpsl
cmpsb
lcall
sahf
add
jle
cmp
imul
mov
popf
fwait
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
lahf
cmp
sahf
cmp
lahf
xor
cltd
sbb
pop
call
add
movsb
add
test
popa
pushl
add
mov
sbb
ficoml
jmp
ja
jmp
jle
in
cmpl
push
xchg
push
test
ljmp
inc
mov
test
popf
sahf
popf
daa
mov
mov
add
bound
cmp
cmp
pop
pop
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
mov
jmp
cmp
mov
inc
jle
mov
sbb
xchg
add
popf
add
mov
add
scas
add
mov
fs
mov
add
shll
cmp
movsw
call
mov
icebp
sar
nop
ret
pop
push
xchg
xchg
xchg
pop
in
pop
fnstenv
lods
stos
mov
popf
pushf
xor
popf
popf
add
add
add
inc
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
mov
jge
lcall
jg
stos
dec
test
mov
punpcklwd
fwait
add
mov
add
lods
add
mov
mov
add
movl
jmp
jns
out
xchg
lcall
repz
push
fwait
leave
push
pushf
lret
sahf
lret
cli
lahf
into
sti
popf
into
cld
cltd
lret
xchg
ret
mov
dec
enter
mov
sahf
sahf
lahf
aas
nop
nop
add
add
add
xor
outsb
push
dec
dec
jecxz
pusha
popa
decl
mov
mov
mov
sar
ret
ret
mov
leave
enter
sar
mov
ljmp
mov
mov
push
pop
lcall
pop
ljmp
add
mov
add
leave
add
rorl
je
filds
in
mov
push
movsl
into
push
movsb
int
imull
sar
cli
movsl
sar
cli
test
test
sar
test
push
popf
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
cltd
cltd
add
add
add
xor
or
inc
bound
pop
xlat
je
jo
mov
rol
rol
mov
ret
ret
inc
leave
enter
rol
mov
test
mov
push
mov
scas
dec
test
mov
add
jmp
add
mov
mov
add
into
add
xlat
add
adc
in
pop
cmpsl
push
lahf
lret
cld
scas
sar
cli
scas
aad
sti
mov
sti
mov
mov
mov
cld
mov
mov
mov
mov
push
cmpsb
jmp
mov
dec
leave
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
dec
dec
outsl
outsb
outsl
mov
aam
fsubr
aam
not
rcl
std
lret
dec
lret
leave
lret
lret
leave
lret
inc
leave
mov
lods
jmp
push
mov
stos
cmp
arpl
mov
add
mov
fs
mov
add
rolb
outsl
call
add
add
pop
xchg
divl
cld
scas
sar
cld
mov
cld
mov
fdivr
cld
mov
mov
xlat
std
rcr
mov
int
out
enter
int
mov
sahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movb
in
out
out
jecxz
out
jecxz
loop
fucom
fucom
xlat
cli
aam
xlat
std
int3
ror
mov
push
cmp
sub
mov
add
mov
mov
add
leave
add
add
faddl
ja
in
jbe
out
xor
sti
mov
loopne
inc
loopne
inc
loopne
inc
inc
dec
dec
std
leave
dec
fdivrp
dec
loope
cld
mov
lret
lret
into
mov
mov
xchg
adc
add
add
incb
std
std
add
incl
repz
or
out
jmp
in
out
out
sub
in
in
dec
call
jmp
out
in
out
fcmovu
fucomi
les
xchg
cmpsb
cmp
movsb
push
jmp
ljmp
add
mov
add
int3
add
add
fiadds
jbe
ljmp
sti
mov
loop
cld
lret
jecxz
dec
out
dec
in
std
into
loop
dec
jecxz
dec
loop
call
in
std
shl
std
shl
shl
cld
out
mov
xlat
inc
ret
cmpsl
cmpsb
test
xchg
xchg
xchg
sbb
cltd
lcall
add
add
incl
std
incl
div
testb
repz
repz
push
in
lock
in
lock
cmp
out
out
pop
loopne
lds
xchg
sti
sahf
and
lcall
add
lods
add
mov
inc
add
movl
jo
fiaddl
jne
in
jnp
in
push
jle
negb
sti
mov
cld
iret
in
cld
shl
std
shr
shl
call
in
call
out
out
xlat
jmp
fldl2t
fucomi
cld
iret
loope
repz
aad
jecxz
fcos
leave
lret
lret
test
xchg
and
cwtl
xchg
add
std
cld
add
cld
testl
repnz
or
shlb
sarb
negb
add
add
scas
add
mov
add
lret
call
add
fldl
ja
call
sbb
push
jne
cli
cld
fldl2e
std
fucomi
std
fucomi
fucomi
std
fucomi
fsubr
fsubr
fsubr
loopne
fucomip
fucomip
std
aam
push
ret
aam
out
iret
iret
sar
lods
lods
stos
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
mov
loopne
add
mov
cwtl
repnz
and
sahf
add
cmpsb
add
mov
mov
add
into
add
add
filds
jne
call
sub
std
shl
std
fdivp
fucomp
fucompp
fldl2e
std
fsub
std
aam
shl
cld
shl
cli
shl
clc
iret
clc
lret
fdivr
test
out
mov
fcos
xlat
fdivr
mov
mov
lcall
add
add
add
xlat
xlat
add
leave
adc
scas
mov
lcall
add
mov
fs
mov
add
iret
add
xlat
add
loopne
jns
ljmp
sti
xchg
cli
leave
loopne
cli
lret
loope
cld
stc
rcl
cmc
mov
sar
icebp
mov
into
out
mov
int3
jmp
ret
ljmp
imul
fsub
cmc
loopne
loopne
mov
mov
xchg
add
add
add
int3
add
shrl
loopne
xor
jmp
add
mov
data16
mov
add
dec
pop
jb
rorl
ficoml
ja
loopne
cmp
call
scas
int3
jmp
scas
enter
ret
cld
loopne
ret
mov
neg
mov
leave
ljmp
rcr
fmulp
xlat
shl
xlat
fcmovnb
out
loop
in
in
test
out
lock
ljmp
push
lods
lods
lods
adc
test
cmpsl
add
ret
ret
ret
rol
pop
mov
lods
aam
dec
jg
pushf
sbb
cmpsl
sbb
lods
es
mov
js
mov
inc
xchg
ret
push
stc
lret
test
mov
out
mov
mov
lret
int
rol
int
int
mov
xlat
rcl
jg
fcmovu
jb
loopne
gs
jecxz
out
jmp
xor
div
cmc
and
icebp
lock
fcmovnu
or
mov
int
mov
add
mov
mov
roll
mov
test
imul
sbbl
sarb
test
mov
pushf
lret
ret
enter
int
ror
iret
addr16
rclb
rcl
dec
fcom
inc
rcl
xor
daa
fcomp
ficompl
fcmovnu
fstl
fsub
loop
loopne
in
out
jmp
add
sti
testl
incl
std
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
int3
lret
daa
int3
ror
and
aam
sbb
aam
adc
rorb
rcr
push
rcr
fadds
fstp
add
loopne
add
in
add
jmp
add
aad
std
incl
mov
mov
add
ret
ret
mov
rol
sub
mov
mov
push
rol
or
mov
add
int
add
roll
rcl
aam
aam
aam
aad
add
add
xlat
loopne
xlat
aad
add
loope
add
fucom
add
out
add
lock
std
incl
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
mov
mov
mov
stos
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
scas
adc
mov
enter
into
jmp
aam
cmc
rcl
sar
iret
into
into
cli
int
int
lret
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addb
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
iret
iret
iret
xlat
aad
aad
call
rcl
dec
iret
int
int3
lret
lret
mov
mov
stos
icebp
xchg
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
je
jae
fs
inc
dec
inc
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
mov
lret
lret
rcl
call
rcl
dec
int3
int3
inc
mov
mov
ljmp
sahf
popf
xchg
xchg
xchg
jmp
outsl
jno
pop
pop
adc
xor
add
add
add
add
addl
test
push
imul
imul
push
pop
pop
cmp
aaa
cmp
outsl
outsl
jo
scas
mov
pop
mov
mov
mov
mov
mov
rol
mov
inc
mov
mov
jmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
movups
add
add
add
add
add
pop
fwait
cltd
cltd
add
popf
xchg
lcall
addl
jmp
jp
sarb
jnp
jp
jp
jb
jb
push
push
push
cmp
aaa
sahf
pushf
pushf
mov
scas
scas
repz
lods
lods
sti
scas
lods
scas
std
test
popf
popf
call
xchg
call
mov
scas
jmp
lods
scas
leave
movsb
movsl
cmpsb
cltd
jae
jb
adc
adc
add
add
add
add
outsb
outsb
insl
pop
nop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
cltd
repnz
xchg
xchg
std
mov
call
popf
ljmp
mov
mov
scas
mov
xlat
movsl
mov
addb
add
add
add
add
pusha
or
lods
mov
cmpsl
mov
mov
mov
mov
xchg
cwtl
cwtl
std
popf
sahf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insb
outsb
outsb
xchg
subl
mov
std
xchg
xchg
ljmp
jle
pushl
pop
mov
jge
mov
scas
stos
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
xchg
lcall
lcall
pushf
popf
pushf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
insb
xchg
xchg
pop
jle
pushf
dec
jp
mov
ss
mov
je
mov
outsb
ljmp
sbb
mov
lods
mov
scas
mov
jle
mov
add
add
add
pop
pusha
popa
or
mov
in
movsl
cmpsl
lcall
sahf
sahf
jmp
lahf
mov
decl
orl
xchg
jae
cld
cwtl
pop
cmp
dec
jp
nop
cmp
xchg
sub
xchg
sbb
cwtl
adc
sahf
push
pusha
ljmp
sbb
mov
insl
pushl
push
jb
mov
pop
xchg
mov
lods
scas
xchg
lahf
sahf
sahf
adc
add
add
popa
pop
pusha
or
mov
stos
mov
mov
ljmp
cmpsl
test
decl
push
mov
decl
adc
xchg
pop
decl
add
xchg
add
pushf
add
cmpsb
or
mov
jb
mov
das
jle
les
jg
leave
das
cmp
xor
inc
test
imull
test
sbb
add
add
pusha
pusha
pop
or
cmpsb
test
test
cmpsl
jmp
scas
scas
pushl
mov
jmp
aas
jo
mov
pop
decl
or
xchg
decl
add
xchg
add
sahf
add
movsl
add
mov
insl
inc
cmp
call
inc
mov
rolb
inc
xchg
flds
call
popa
popf
inc
cmpsl
mov
mov
movsl
movsl
daa
std
std
add
add
add
popa
or
lahf
mov
ljmp
mov
mov
mov
mov
mov
jge
nop
pop
popa
call
push
pop
decl
add
xchg
add
lahf
add
test
pop
ljmp
and
iret
dec
xchg
fcoms
fistpl
fistps
jmp
pop
mov
fisubrs
int3
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jl
jnp
fwait
xchg
lcall
scas
mov
mov
mov
mov
mov
mov
lahf
fs
xchg
sub
imul
and
call
add
popf
add
test
pop
pushl
or
int3
xor
jecxz
test
out
stos
jmp
jno
in
jno
jmp
jns
call
test
mov
inc
addl
dec
pop
outsl
outsl
insb
bound
lcall
mov
mov
sar
mov
xchg
lcall
cmp
pushf
sub
xchg
or
lcall
add
lods
add
mov
gs
or
call
inc
xchg
jmp
jns
jmp
cmpl
xrelease
push
mov
mov
test
push
lcall
add
sub
push
push
push
dec
pop
addr16
xchg
mov
mov
mov
sarb
mov
mov
ljmp
sub
cltd
pop
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
ret
push
cwtl
push
xchg
stc
lcall
notl
vcmpss
mov
add
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
xchg
cmpsl
jmp
dec
cmp
pop
imul
add
jmp
add
mov
add
fldenv
cmp
jnp
push
mov
sar
clc
test
sti
stos
iret
sti
lods
iret
lods
sar
cli
test
jmp
mov
inc
rol
test
pushf
pushf
or
add
add
dec
push
dec
aaa
jb
jb
test
int
out
int
cmc
lret
sti
leave
lret
lret
enter
mov
mov
stos
inc
cmp
adc
cmpsl
add
mov
arpl
ret
dec
add
flds
ljmp
cld
mov
cld
mov
std
mov
xlat
cld
mov
fcos
sti
mov
jmp
enter
repz
lods
mov
add
add
add
add
or
aad
dec
loope
jecxz
loope
fadd
fcmovu
fcmovnu
fcom
out
shlb
test
jb
movsb
or
scas
add
mov
add
aad
jb
loop
jp
icebp
push
mov
cld
inc
loop
dec
inc
dec
fdivrp
dec
cld
out
mov
lret
mov
xchg
sahf
popf
pushf
sbb
add
add
std
incl
std
incl
jmp
in
sbb
in
in
xor
loopne
loop
lds
mov
mov
add
mov
fs
add
int
insl
faddl
jne
jmp
outsb
mov
std
ret
std
shl
std
shl
call
in
std
shl
std
aad
fsubr
cld
shl
push
fcos
fcmove
sar
mov
mov
add
incl
std
incl
std
std
incb
aad
mov
pop
xchg
lahf
or
pusha
pushl
add
rolb
jno
filds
ja
out
pop
mov
stc
mov
shl
std
std
fld1
cld
fsubr
std
fldl2t
sti
cld
fsubr
cld
aam
push
xlat
jmp
iret
sti
mov
popf
lahf
das
add
add
int
int3
or
fs
lahf
adc
add
mov
add
roll
jae
loop
js
out
xor
sti
int
stc
leave
loopne
cmc
repnz
aad
repz
out
sar
in
aad
in
vpsadbw
aam
jecxz
fsubrp
mov
test
add
add
add
aam
push
mov
je
or
insb
inc
sbb
lret
and
aad
test
fists
loop
mov
out
loop
lret
mov
loope
mov
lret
enter
iret
scas
jecxz
ficompl
out
jmp
rorb
mov
add
lods
lods
stos
add
xchg
movsl
les
push
xchg
mov
nop
fidivrl
jle
rol
stos
mov
mov
ret
nop
aam
enter
lret
insl
aam
iret
pop
aam
iret
dec
xlat
xlat
fdivrs
loopne
fisubrs
in
frstor
loop
icebp
adc
jmp
or
std
std
incl
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
aam
rcll
mov
rcl
or
loopne
or
into
int3
add
incb
std
incb
fwait
lcall
les
int3
into
int3
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
mov
xchg
leave
enter
mov
ret
rol
mov
mov
insb
stos
lods
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
enter
sar
aad
std
rcl
sar
iret
int
std
mov
mov
cmpsl
cmpsl
test
gs
push
pop
add
add
add
add
add
add
add
add
jno
jb
push
inc
dec
das
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int
call
rcl
dec
iret
int
enter
mov
scas
jmp
mov
push
add
add
add
add
jne
je
xchg
adc
jo
ret
arpl
outsb
insl
outsl
jb
popa
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jno
es
das
add
add
add
add
je
je
pushf
xchg
lcall
test
clc
xchg
test
test
imul
mov
into
mov
lahf
mov
decb
mov
pushf
lcall
mov
mov
ret
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
pushf
pushf
pushf
cmc
cltd
cwtl
lcall
push
push
imul
jle
lea
xchg
notl
mov
pushl
push
cwtl
mov
lods
scas
push
stos
lods
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
call
fwait
cltd
lcall
fwait
lcall
mov
loope
je
out
xchg
bound
std
pushf
inc
jbe
movsl
ss
scas
sub
jno
mov
outsb
pushl
sahf
lods
lock
mov
imul
into
add
xchg
pop
scas
cmpsb
lods
test
lahf
popf
sahf
jmp
movsl
movsl
call
jle
mov
nop
inc
jae
mov
push
lea
call
or
mov
sbb
pushl
es
shll
inc
ds
mov
mov
subl
je
push
mov
mov
cmpsb
pushl
scas
mov
lahf
xchg
decl
or
xchg
push
decl
pop
jmp
adc
shll
dec
aas
mov
roll
call
inc
call
push
xchg
dec
lcall
mov
add
add
push
test
lahf
mov
pushl
mov
ljmp
aaa
outsb
call
push
pop
decl
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
movsw
call
fwait
mov
mov
mov
cmpsl
cmpsl
test
add
add
arpl
adc
pushf
fwait
fwait
cld
mov
mov
mov
mov
mov
pushf
dec
jl
pushf
xor
cwtl
and
xchg
pop
pop
lcall
add
mov
xor
call
jl
push
jle
out
jle
fstps
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
rol
mov
fs
movsl
inc
jge
mov
add
ljmp
add
ret
pop
insl
fisttpl
out
lea
push
xchg
xchg
enter
jmp
cmpsb
inc
mov
movsl
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
mov
xchg
ljmp
sbb
movsb
add
mov
arpl
les
push
adc
ljmp
stc
stos
sar
cli
lods
sar
std
scas
sar
std
lods
iret
jmp
leave
inc
mov
cmpsb
ds
incb
xor
inc
scas
mov
mov
aam
mov
aam
aam
out
lret
cli
mov
mov
jmp
add
les
push
aam
jno
out
xchg
clc
pop
std
mov
fdivr
cld
rcr
cld
ret
std
ret
lock
ret
in
cmpsl
test
add
add
add
in
in
or
call
out
outsb
fldenv
movsb
and
popa
mov
add
faddl
jbe
out
cmp
cld
into
in
dec
in
shl
std
aad
call
in
cmc
leave
rol
into
in
scas
lods
scas
popa
addl
add
incl
std
push
int
shrl
sahf
sbb
lods
add
mov
add
loope
js
repz
movsl
std
loope
xlat
jmp
std
aad
sti
shl
sti
shl
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
ret
ret
ret
mov
cld
lods
add
insb
call
or
jg
in
insl
lods
cld
out
mov
aam
jmp
mov
shl
in
rcl
ljmp
scas
ret
lds
lcall
rol
or
pushf
lods
xchg
and
push
mov
shll
lret
js
mov
fdivrs
lret
into
outsl
fxch
rcrb
rcl
dec
jecxz
loope
out
call
sbb
sarb
cmp
mov
scas
push
mov
mov
ret
mov
les
sbb
bswap
int
or
aad
push
incb
addl
add
stos
incb
mov
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
pop
mov
daa
jmp
push
test
mov
lods
fisubs
xor
aas
in
sbb
mov
fimull
ret
xchg
loop
and
adcb
jns
popa
mov
pop
jo
push
xlat
stc
cltd
cmp
nop
nop
pop
out
or
std
xchg
js
or
call
xchg
rorb
sbb
pop
ds
in
and
xor
icebp
dec
nop
scas
lds
into
push
lret
icebp
cmpsb
inc
xchg
cmp
xchg
jo
repnz
sub
andb
mov
jg
test
and
and
xor
mov
lret
mov
inc
lods
ret
daa
inc
and
inc
pop
xor
ljmp
sub
mov
or
inc
arpl
inc
xor
js
lahf
in
mov
outsb
es
lock
stos
add
sti
cmpsl
adc
iret
cwtl
mov
rorl
lret
dec
pusha
xlat
fwait
das
mov
sarb
sub
imull
xchg
adc
pop
pop
sbb
adc
aad
out
fldcw
js
and
inc
or
int
mov
int
cmc
pushf
cmpsb
add
push
xchg
dec
faddl
ss
sti
add
fisubl
push
mov
cmpl
leave
mov
adcb
mov
push
dec
xor
je
dec
or
jle
pop
ss
test
inc
mov
mov
dec
add
sbb
dec
into
aas
or
cwtl
dec
jb
mov
jp
roll
repnz
les
mov
fcmovne
sahf
inc
xor
flds
cmc
push
out
loopne
and
scas
jae
lock
or
mov
js
insb
fcomps
xor
out
add
or
repnz
jge
and
xchg
loop
pushf
pop
in
add
dec
mov
adc
push
pushl
sub
mov
mov
jnp
int3
inc
sbb
cltd
pop
push
push
pop
jo
or
fiadds
jmp
push
int
xor
or
cwtl
aaa
or
push
mov
add
in
test
mov
ljmp
xor
imul
xlat
test
in
xchg
mov
mov
je
js
xor
mov
xor
std
fdivl
mov
movl
es
xchg
jns
test
fldl
clc
ret
sub
adc
mov
and
jp
mov
subl
xor
pop
dec
aaa
mov
loop
push
pop
sbb
push
addr16
inc
cmp
jp
cmp
inc
pop
test
ljmp
outsl
fcoml
mov
rclb
movsb
loop
jbe
mov
insb
test
lock
lods
leave
mov
or
jne
ja
dec
push
add
mov
push
mov
data16
dec
loopne
adc
ja
sbb
mov
push
and
xchg
or
lods
pop
cltd
push
int
push
addr16
cmpsb
push
pop
sti
arpl
out
xor
js
push
pushf
adc
sbb
lret
push
out
mov
cmpsl
dec
pop
movsl
mov
idivb
adc
loop
stos
inc
add
in
cwtl
and
add
out
add
aam
js
adc
lock
jnp
stos
mov
fs
xchg
xor
lcall
fsubr
xor
and
and
jp
data16
mov
outsl
insb
and
mov
add
push
jno
pop
shl
lahf
repz
or
and
stos
push
enter
add
fwait
cmp
scas
dec
in
sti
xchg
pop
imul
dec
push
lods
call
push
lret
cmp
gs
mov
je
cmp
push
jbe
cmp
xchg
inc
imul
decb
add
out
inc
dec
leave
loop
pop
enter
movsb
sti
pop
jb
cwtl
cmp
lcall
mov
outsb
jnp
rolb
pop
aaa
cmpb
test
cltd
lds
fildl
push
fwait
pushf
pop
mov
xor
jl
add
test
add
fsub
into
add
push
cld
pop
inc
mov
push
test
leave
loope
pop
pushf
into
sahf
mov
ret
dec
scas
cli
mov
mov
enter
aaa
mov
push
push
jns
push
cmpsl
arpl
int
cltd
aas
iret
sbb
add
je
fiaddl
dec
loope
jecxz
fwait
lahf
inc
cmp
data16
sub
mov
inc
sbb
push
fnsave
std
in
mov
scas
add
test
subl
or
jne
test
xchg
xchg
mov
mov
lcall
add
lahf
adc
dec
or
pop
jle
aad
pop
inc
cmp
mov
hlt
enter
movsl
cwtl
inc
sbb
dec
sbb
lea
jp
fsubrs
loop
xchg
mov
jecxz
pusha
cli
sbb
in
cmp
mov
imul
jb
outsl
or
es
lret
cmpsl
ds
lods
inc
inc
inc
mov
cltd
add
je
shlb
pusha
notl
jmp
dec
imul
add
xchg
addl
es
ret
sahf
xor
xor
add
lods
jmp
pop
repnz
into
sbb
ss
push
inc
add
adc
es
lea
pop
insb
jno
popa
jp
lcall
push
popf
mov
mov
mov
ret
popa
adc
jp
or
xchg
cld
xchg
add
movsl
ds
enter
les
cmp
mov
push
test
imulb
jns
mov
aam
and
mov
rclb
dec
inc
or
inc
jle
movsl
cmp
lahf
enter
ret
pop
dec
repnz
and
loop
stos
inc
repz
repz
cwtl
adc
dec
ljmp
mov
ret
dec
in
mov
rclb
inc
push
test
fbstp
bound
fcmovnu
test
mov
lcall
and
jmp
lods
inc
xabort
jl
pushf
mov
fprem1
push
bound
repnz
cmpb
negb
adc
call
or
xchg
jnp
sbb
ds
xor
insl
add
xchg
mov
ret
jno
and
lds
mov
enter
adc
popf
fsubrl
or
cs
in
adc
mov
mov
inc
fcoms
pop
mul
cmpsl
ds
or
cmp
pop
stos
pop
pushf
xor
scas
mov
cltd
push
add
jo
jno
mov
push
testl
fcoms
xor
ficoml
jae
leave
adcb
adc
jns
add
mov
push
inc
fwait
movsl
jecxz
mov
shll
into
in
ljmp
insl
pop
cmp
mov
push
mov
fdivrs
test
leave
int
pushf
ret
rcll
mov
add
into
loope
movsb
repnz
fdivp
adc
out
incl
das
push
push
cwtl
das
test
cmpsb
cmpsb
mov
fadd
aam
stc
stc
aam
sub
repz
repnz
adc
rol
das
icebp
icebp
lds
adc
inc
inc
dec
jecxz
gs
add
mov
mov
sbb
inc
cmp
pop
xchg
mov
pop
shlb
jns
push
add
aaa
xor
xchg
gs
and
mov
inc
xlat
fcmovnu
cmp
or
pop
cmc
sub
pop
dec
jl
cmpl
sub
mov
in
dec
pop
loope
adc
cmp
push
xor
das
jno
mov
push
testl
or
pop
sahf
xlat
inc
cmp
adc
pop
repz
out
js
lock
mov
inc
jle
dec
jo
sub
icebp
xchg
mov
jns
and
ret
xchg
jbe
xlat
lods
mov
popa
sub
cmp
es
ja
cmpsb
cmp
test
mov
fsts
clc
cmp
cmp
cmc
mov
iret
out
test
loopne
adcb
imul
testb
je
stos
or
jp
sub
mov
pop
sub
fnstenv
rorl
mov
jg
rcrl
les
movsb
in
sub
inc
out
js
pop
out
jmp
or
sarb
pushf
xor
popf
mov
in
fidivs
andl
popa
cmpsb
cmp
enter
gs
pop
idivb
sti
fnstenv
fnsave
std
push
xor
jg
stos
inc
int
call
and
inc
out
xchg
adc
inc
fadds
lret
push
in
sub
fnstsw
lock
jge
inc
out
js
mov
or
aaa
or
cmp
outsl
push
mov
fnsave
ret
cli
lock
out
popf
push
popf
movl
aam
mov
inc
ds
daa
mov
cltd
daa
lods
inc
pop
mov
inc
frstor
dec
add
std
pop
dec
loop
fwait
jp
ret
jno
cmpsb
bound
push
xchg
sub
cmc
xor
out
mov
fbstp
mov
jp
cmp
and
rorb
xlat
jecxz
aam
in
test
xor
repnz
cmp
popa
or
mov
les
cmp
pop
aam
outsb
repnz
hlt
adc
jne
fidivrl
fidivs
jb
les
xor
ret
in
test
pop
inc
fnstsw
xor
add
mov
adc
push
sub
je
jnp
ficomps
dec
loop
push
in
icebp
adc
lcall
adc
test
lock
es
xchg
loopne
mov
fcmovnbe
imul
and
fistps
inc
jb
sbb
add
fsubrs
sbb
mov
mov
push
popf
adc
ds
jns
push
jle
fldcw
inc
mov
jbe
inc
fdiv
and
pusha
push
mov
icebp
push
test
insb
add
cmp
dec
dec
fnstenv
xchg
clc
pop
loope
mov
push
in
lahf
repz
mov
ss
fs
sbb
or
jno
push
sub
dec
sahf
lods
repz
mov
sbbl
inc
inc
out
jns
jle
push
adc
sbb
imul
les
vmulss
push
jg
nop
cwtl
test
mov
clc
and
int
inc
push
popf
xor
push
das
movb
or
push
push
mov
cmc
js
cmp
adc
in
pop
aam
xchg
ljmp
and
inc
jne
cmp
fdivl
jb
push
cmpsb
insb
je
pop
dec
pop
idivb
ret
jo
ljmp
call
pop
lock
and
sub
xchg
sub
dec
cmp
std
lds
mov
sahf
insl
and
xor
leave
jo
test
bound
fucom
jp
and
in
sub
shrl
dec
pop
cmp
imul
dec
test
scas
mov
push
cltd
xor
ss
arpl
jb
dec
test
rcrl
call
loope
lods
pushf
ret
int
mov
aaa
data16
push
rorb
xchg
repz
in
movsl
cmp
pop
ret
pop
jns
and
or
cltd
xor
or
mov
movsl
cmp
rcr
jbe
punpcklbw
cmp
dec
loopne
aad
cmp
stc
mov
loop
out
jle
lcall
subl
cmp
mov
popf
xor
xlat
cmp
enter
or
jge
fsubl
cmp
out
mov
xchg
rorb
stos
subb
sahf
mov
adc
movsl
loope
inc
sub
ljmp
fucomi
xchg
mov
call
xchg
add
jb
popa
clc
push
xchg
movsb
cmp
daa
mov
pop
out
xor
sub
fwait
xor
jo
xchg
cmpsb
pop
fwait
xor
imul
jb
sub
cmp
cwtl
das
or
fnsave
cmp
fldt
fwait
xchg
aas
pop
mov
cmp
jmp
stc
jecxz
aad
lret
notb
arpl
xor
jno
pushf
ja
push
and
push
mov
ret
or
not
mov
xor
dec
shrl
cli
sbbl
cmp
push
lods
clc
mov
les
xor
movsl
dec
sbbb
push
sarb
fdivs
into
leave
lret
or
jp
fnstsw
cmc
mov
gs
inc
scas
adc
sbbb
lods
mov
dec
out
ss
cmpsl
pop
push
in
jbe
pop
scas
mov
jl
into
ds
in
dec
inc
sub
xchg
call
outsb
icebp
and
and
pop
cmc
or
jecxz
movsb
inc
ficoml
ss
xor
leave
sub
fcmovnbe
imul
out
js
loopne
jnp
and
inc
fdivs
and
push
xchg
les
mov
cltd
js
pop
movsb
mov
add
aas
and
rcll
inc
ficompl
jns
gs
enter
jmp
mov
add
or
es
scas
pop
cmp
xchg
sub
lock
test
mov
jecxz
mov
addr16
xchg
movsb
cmc
lret
out
lret
bound
xor
sbb
adc
mov
shrb
pushf
pop
mov
sar
xchg
lds
lods
xchg
out
fcmovnbe
outsl
push
pop
clc
and
das
or
lret
fwait
xor
sahf
mov
adc
rcrl
addr16
les
test
pop
cmpsl
ds
call
adc
mov
push
push
mov
adc
mov
imul
xor
and
in
das
xlat
test
xchg
notl
sbb
rorl
pop
iret
sbb
out
pop
aaa
into
lea
or
cwtl
mov
xor
or
lea
inc
mov
rcrl
movsl
jge
fbld
mov
mov
in
mov
pop
insl
add
repz
cmc
shrl
movsl
mov
fisttps
mov
fisttpl
cmpsb
in
xchg
sub
mov
sub
fwait
sub
pop
inc
icebp
mov
aaa
into
pop
xchg
addl
jg
xor
pop
mov
sbb
inc
inc
cli
xchg
pop
arpl
jge
sbb
inc
fstpl
out
xchg
lahf
scas
xchg
jl
sbb
push
in
call
or
jno
xchg
sub
inc
ficoml
je
add
je
xchg
and
and
push
sbb
sbb
pop
int3
arpl
lods
testl
xor
or
arpl
lret
addl
aad
dec
loope
arpl
push
jno
add
in
aas
adc
imul
cmpsl
ss
mov
sub
inc
popf
xor
add
iret
jae
aaa
into
xchg
movsb
cmp
cmp
add
push
call
rcr
clc
jmp
jnp
aam
and
inc
dec
loope
cmpsl
cmp
hlt
jmp
inc
fsubrs
iret
jb
fnstsw
test
xorl
pop
add
out
bound
xchg
sub
fidivrs
cli
mov
fwait
xor
stos
and
fsubr
mov
mov
fldt
rcrl
repz
stc
outsb
adcb
cmp
push
aad
mov
cwtl
test
test
xor
push
jmp
outsl
push
rclb
add
test
test
das
aad
lock
lods
in
mov
add
and
jle
data16
push
inc
jecxz
rorl
mov
dec
dec
call
sbb
andl
sub
dec
repnz
xchg
jmp
cs
in
push
arpl
hlt
and
inc
xor
mov
and
pop
outsb
or
test
and
mov
push
test
inc
dec
adc
xor
popf
jne
je
pop
fs
mov
push
dec
test
jecxz
inc
loop
dec
nop
dec
stos
std
xor
mov
add
lcall
movsl
xchg
repz
mov
out
inc
cwtl
aaa
lds
fdivs
sbb
loopne
gs
addr16
cmp
loopne
sbb
sub
adc
divl
enter
add
push
cwtl
add
fcmovnu
loope
sbb
addb
jae
mov
bound
aas
xchg
test
jno
cmpsb
movsb
cmp
into
out
aam
fbstp
cmc
add
mov
mov
in
dec
mov
sbb
dec
loop
dec
scas
inc
or
xchg
push
lods
inc
cmp
jp
loopne
test
dec
test
mov
xlat
add
popf
xor
and
add
lds
insb
add
enter
xchg
xor
sbb
push
fdivrl
adc
push
int3
arpl
mov
jno
call
lods
inc
test
cmp
cli
xchg
mov
scas
inc
pop
lods
dec
loop
subb
push
shl
mov
fdivs
jecxz
ret
pop
outsb
add
sbbb
add
xor
mov
test
add
mov
call
dec
lds
loop
call
adc
in
inc
fdivp
push
cmp
xchg
adc
iret
jg
inc
fdivl
aad
push
pop
sub
dec
xchg
mov
xor
dec
cli
lahf
ss
enter
mov
cwtl
mov
ret
hlt
push
scas
inc
adcb
cld
pop
outsb
pop
mulb
out
test
int
xchg
xchg
movsb
cmp
cmp
lds
xchg
sub
adc
pop
xchg
dec
in
or
lds
mov
enter
cltd
xchg
cs
into
inc
adc
mov
and
xchg
mov
adc
repnz
push
ja
ja
je
sbb
fnstenv
xchg
test
jl
add
loopne
pop
lret
in
insl
push
sbb
jl
in
into
aad
rcrl
inc
fisttpl
lret
mov
sub
insl
sub
sarb
mov
movsl
xor
imul
mov
mulb
enter
pop
lock
jp
xor
imul
cltd
xor
mulb
mov
fiadds
aaa
fnstenv
sbb
stos
inc
divl
jo
sbb
xchg
dec
jl
mov
jp
dec
push
add
push
pop
jmp
sbb
enter
xchg
dec
in
adc
adc
data16
jne
and
ljmp
inc
mov
fistpl
cmpsb
cmp
jg
and
mov
loop
in
aam
sbb
movsl
test
decb
fsts
push
flds
pusha
mull
dec
addr16
dec
xchg
inc
push
jmp
push
xchg
movb
sbb
push
scas
xor
enter
xlat
xchg
add
imul
pop
cmc
and
into
gs
push
in
icebp
pop
pop
cmc
dec
sub
jb
sub
inc
mov
add
push
js
dec
in
add
scas
jae
adc
inc
jmp
sti
fld
test
mov
adc
jnp
cli
lahf
ss
push
mov
mov
mov
jge
and
scas
inc
pop
or
xor
sub
inc
dec
mov
or
mov
cmp
xchg
pushf
mov
cs
loop
dec
jbe
dec
cmp
insb
outsb
je
outsb
inc
sbb
sbb
pusha
testl
je
out
movsl
and
ret
jbe
adc
xchg
xor
das
clc
dec
in
push
sub
sub
sub
clc
fldz
test
sbb
into
xchg
add
xor
push
add
push
sub
outsl
push
xor
and
out
fstpt
loopne
aam
cmp
sub
ja
shrl
cltd
xor
lret
xchg
scas
jbe
push
jmp
xlat
sbb
xchg
sub
movsb
iret
data16
test
sbb
pop
mov
cwtl
sbb
mov
test
pop
aaa
push
mov
xchg
outsl
into
rcrl
insl
add
and
pop
mov
xchg
lods
outsb
add
test
lret
aam
imul
cmc
test
test
fldcw
pop
cmpsl
or
xchg
rorb
ficompl
sbbl
ror
xchg
xor
dec
in
push
inc
fisubl
and
and
push
jmp
inc
sbb
jecxz
jae
ljmp
and
push
cld
pop
cmc
lret
pop
mov
stc
mov
loopne
pop
mov
faddl
cltd
call
xchg
sti
test
sub
dec
repnz
enter
sbbl
mov
fwait
mov
lds
shrl
add
stos
fs
xchg
lret
cltd
xor
mov
jg
add
jl
sub
aaa
loope
mov
std
add
outsb
xor
stos
inc
mov
es
sarb
pusha
cmpsb
adc
push
fisubl
nop
xchg
sti
xchg
sub
dec
mov
rclb
mov
shl
adc
arpl
pop
mov
push
shrl
ss
testb
pop
hlt
push
sbb
jle
das
or
rcrb
out
leave
inc
push
movsl
inc
ljmp
inc
fcoms
jb
loope
push
xchg
pusha
not
je
je
cmc
jle
jmp
cmpsl
cmpsl
ds
rcl
push
roll
lock
inc
sub
rolb
ret
into
in
mov
inc
shrl
adc
mov
rolb
xor
add
fdivl
adc
movsb
xchg
test
test
fcom
movsb
ds
hlt
jg
sub
jnp
jnp,pn
xchg
lods
jge
cwtl
scas
add
xor
jae
iret
jl
jg
pop
ljmp
xorl
cld
in
mov
lcall
sub
pusha
pop
lret
ljmp
int3
xor
dec
fiadds
arpl
fildl
outsl
jns
sbbl
int3
adc
insb
dec
jbe
gs
repz
adc
outsl
mov
or
fldt
sbbl
lret
pop
cli
jmp
mov
insb
mov
dec
movsl
mov
jmp
cmpsb
mov
add
jb
jno
lods
loope
pop
aad
dec
fildll
cmp
mov
repz
add
rcl
imul
sbbb
lock
aad
movlps
jne
jl
subb
mov
mov
ds
out
xor
addr16
nop
push
les
loope
ljmp
mov
ret
mov
sub
rclb
call
push
cmpb
das
loopne
popa
shll
lcall
adc
pop
cmp
mov
fcompl
dec
dec
insb
pop
icebp
popf
jo
jp
mov
repz
adc
cmp
xchg
scas
mov
jp
xchg
adc
test
push
dec
out
mov
dec
sub
pop
idivb
dec
in
es
add
hlt
into
gs
jbe
mov
mov
mov
push
out
add
test
ret
jl
dec
cwtl
gs
adc
ds
pop
js
inc
pusha
out
xchg
popa
aas
or
dec
xor
je
pushf
mov
into
mov
mov
xor
fildll
or
mov
test
outsl
ret
or
sbbl
sub
xlat
pushf
cltd
shlb
cmc
sbb
ljmp
test
mov
hlt
push
mov
add
mov
inc
nop
sahf
or
sub
pop
sub
jle
in
cmp
mov
cwtl
das
test
dec
pop
repnz
in
das
xchg
sub
and
jmp
in
arpl
daa
sub
movsl
mov
push
in
shrb
rorl
xor
std
fnsave
cmc
and
jle
jnp
cmp
push
popl
mov
repnz
adcb
pop
js
repz
jp
mov
cmp
push
mov
inc
sbb
dec
cmc
mov
repz
in
add
lahf
cmc
sbb
sbb
dec
or
jge
mov
mov
mov
inc
into
jmp
mov
mov
neg
inc
rolb
mov
out
pop
sahf
xchg
mov
popa
leave
xchg
xchg
mov
rcrb
syscall
lods
mov
jmp
mov
ljmp
outsl
mov
xchg
push
sub
push
mov
add
pop
not
mov
fmull
xlat
cmp
aad
and
sbb
in
sbb
xchg
and
adc
fxch
xor
mov
and
cmpsb
test
cmc
xor
push
lret
sbb
mov
aaa
fidivs
clc
adc
lret
cmc
ret
daa
int3
shl
xlat
jno
stc
lret
push
dec
mov
inc
rol
mov
push
fbstp
adcb
sbbl
cmp
scas
dec
mov
das
inc
push
int
popa
mov
fcoml
mov
int
jmp
ja
pop
push
gs
insb
jge
dec
scas
lea
sti
sbb
rolb
clc
push
jg
int3
pop
lret
out
daa
nop
xchg
je
sub
add
decl
push
inc
popf
test
inc
leave
sbb
jnp
sahf
xchg
sub
cli
cwtl
mov
aad
mov
aaa
into
xor
push
sbbl
pop
adc
mov
sbb
xchg
clc
jno
mov
xlat
outsb
sahf
loopne
sbb
jmp
lock
mov
adc
les
push
out
in
movsb
mov
fists
push
push
in
inc
mov
pop
in
xlat
clc
pushf
push
fwait
ret
ret
and
mov
ret
hlt
cld
sbb
les
gs
mov
in
lret
shlb
not
iret
ret
fsubl
push
loope
or
push
mov
cmp
cltd
leave
dec
push
xchg
das
iret
and
add
cmp
pop
fistpll
in
paddw
sub
jbe
inc
shlb
mov
orl
mov
je
and
xchg
and
cmp
push
cmp
scas
jl
ja
mov
cmpsb
push
cltd
xchg
cmpsb
pop
sbb
fwait
test
or
cltd
and
xorb
orl
jae
sub
add
add
sub
mov
push
xchg
jnp
clc
test
push
sbb
and
cmpsb
push
sbb
add
icebp
mov
pop
hlt
out
jecxz
add
sub
rcr
gs
ljmp
sub
movsl
cmp
pop
sarb
sbb
data16
cmp
cwtl
dec
in
jo
sbb
push
pushf
mov
or
nop
daa
repz
or
inc
pop
icebp
ja
inc
pop
mov
fnsave
cmp
pop
pop
pop
sbb
sub
dec
ret
pop
jle
je
mov
in
jge
push
adc
mov
jmp
sub
icebp
rorl
leave
cmp
test
lock
les
stc
hlt
cmpsl
in
fwait
adc
or
lret
sbb
testl
xor
xor
and
das
insb
jle
sahf
js
jp
sbb
mov
or
cmp
inc
push
ss
inc
xor
aas
inc
rclb
movb
pop
data16
inc
jns
outsb
mov
add
sub
arpl
loop
test
lods
inc
lret
xor
test
pop
es
mov
push
cmp
inc
fildll
add
insb
mov
jns
mov
adc
je
jmp
mov
inc
mov
jae
imul
xor
je
mov
adc
add
sbb
fdivp
and
pop
pop
or
or
fmull
iret
dec
adc
mov
mov
ret
fwait
xchg
loopne
rorb
jo
fsincos
rcrb
xor
lret
shr
test
movsb
pusha
fmul
xchg
daa
mov
fldl
dec
out
int
sub
scas
sbbl
cmp
sub
or
test
gs
mov
test
sub
inc
sbb
dec
insl
cmp
test
push
in
movsl
fmuls
or
sbb
mov
aam
lahf
insb
call
popf
mov
gs
dec
mov
mov
pop
mov
pop
repnz
sahf
or
inc
sub
add
cli
sub
sub
and
jge
mov
cmp
arpl
fidivrl
sbb
lcall
shlb
daa
push
mov
addr16
out
mov
aaa
lret
jmp
or
clc
scas
inc
sub
mov
data16
mov
sub
fsubrl
js
dec
insl
push
lahf
insl
jno
or
mov
je
outsl
add
cmp
aad
scas
lds
sbb
push
popf
mov
sub
faddl
push
mov
lret
call
mov
je
adc
insl
add
jg
cmp
arpl
fcmove
inc
xor
fs
ficoml
mov
xchg
pop
or
sbbl
pop
cli
push
mov
cmp
ret
xchg
cmc
sbb
inc
pop
push
lds
ja
bound
sub
pop
sub
mov
outsl
push
lcall
cs
into
cli
cs
push
stc
out
sub
in
mov
mov
dec
dec
cld
add
in
mulb
fwait
mov
aaa
out
sbb
pushf
lahf
mov
xchg
call
and
push
mov
inc
pop
jp
mov
imul
rclb
pop
lods
rcrl
es
lahf
iret
jecxz
cmp
hlt
addl
lock
aaa
es
cmc
pop
std
xor
pop
cld
lcall
fistps
add
in
inc
jne
or
cld
fmull
and
xor
mov
dec
ss
aad
int
adc
into
insl
or
or
pop
cmp
pop
iret
mov
push
jbe
in
insb
sbb
pop
orb
cwtl
movsb
add
inc
fwait
xchg
mov
fsub
test
jne
mov
pop
xchg
inc
and
lcall
in
push
pop
sarl
push
adc
sub
dec
in
inc
push
xchg
push
in
mov
mov
repz
fwait
das
sbb
xor
rcl
sub
add
mov
sahf
addr16
jl
cmp
data16
imul
out
aam
fldl
push
jle
inc
pop
scas
gs
lret
aaa
push
aaa
dec
shlb
xor
pop
and
jb
jnp
loopne
mov
xchg
pop
lods
std
mov
adc
gs
dec
aas
jp
push
add
imul
pusha
mov
je
adcb
out
movsl
xor
repnz
addr16
xchg
call
xchg
dec
in
stc
jne
mov
sub
and
imul
mov
pop
aas
in
popa
fisubl
push
icebp
jp
pop
pop
cld
jbe
in
test
pushf
jno
into
cli
das
sub
scas
inc
rorb
movsb
mov
shll
inc
in
mov
cwtl
addr16
pop
fistps
fistl
mov
fists
cmc
in
mov
fsubr
scas
imul
inc
sti
pop
xor
arpl
push
scas
outsb
push
inc
int
sub
mov
inc
in
adc
imul
mov
sub
add
test
inc
inc
cwtl
in
aaa
js
outsl
dec
pop
and
xorl
jo
xor
fimull
in
jle
xor
mov
push
mov
ja
mov
mov
out
xchg
in
or
and
jp
adc
repnz
fcmovbe
test
mov
xchg
mov
outsb
test
add
cmp
pop
xchg
cmp
rclb
xor
pop
lds
xchg
out
pop
fldl
outsl
push
sbb
nopl
inc
je
stos
adc
mov
and
insl
ret
scas
cltd
incl
sbb
inc
sub
imull
sub
popa
adc
out
mov
test
cs
ret
jbe,pn
cmc
cmpsl
dec
xchg
imul
test
adc
xchg
mov
dec
xor
push
shrb
int3
shrb
mov
cmc
mov
dec
lock
add
mov
loopne
shl
fnstsw
pushf
enter
fs
leave
xor
outsl
jmp
pop
jno
jge
notb
mov
leave
mov
testb
jg
pop
or
cmp
push
xor
enter
xchg
clc
add
lahf
je
ds
outsl
scas
mov
mov
notb
mov
pop
add
cli
mov
lret
and
insb
sub
or
mov
xchg
and
rorl
cmp
and
xorl
or
sub
xor
pushf
in
incb
ret
sub
mov
rclb
popa
add
push
cmp
sbb
psubd
pop
out
xor
cltd
xsha256
cmpsb
rcll
popf
mov
shrb
in
loop
inc
adc
jmp
jg
ja
icebp
jmp
inc
ficoms
mov
out
lcall
or
mov
movsb
arpl
push
jmp
mov
and
mov
clc
mov
sti
cli
les
out
mov
pop
lock
jo
push
inc
push
repz
fwait
gs
and
out
push
push
ds
mov
iret
push
movsb
dec
out
sub
jbe
inc
aaa
push
xor
dec
mov
cmp
std
insb
fwait
mov
int
inc
mov
and
cmp
sbb
sbb
cmp
cmc
sbb
xchg
cmp
cmp
enter
fcmovnb
aam
xor
xchg
and
jb
repz
sbb
jg
push
lahf
jo
or
xchg
outsl
inc
ret
dec
push
mov
ds
inc
or
cmp
ds
sub
fsts
add
loop
adc
iret
inc
cmpsl
outsb
lods
push
xor
push
xor
fldcw
mov
inc
jmp
fnstcw
outsl
fstps
ficompl
and
pop
stos
ret
push
push
rorl
fstpl
jne
int3
cmp
lret
test
pop
pusha
addr16
les
ret
ja
cmc
add
cs
ja
xchg
pop
xchg
dec
jno
adc
add
fs
push
testb
push
xchg
mov
test
cmpsl
shl
xchg
stos
popf
shlb
fisubrl
xor
insl
lret
es
jmp
sbb
lret
push
test
xor
pop
test
lods
in
jns
fcompl
dec
loop
rcll
stc
fdivl
push
mov
jb
dec
popf
cmp
into
insl
pop
adc
adc
data16
out
push
mov
jne
jns
xchg
lahf
push
iret
jle
ret
xor
shlb
inc
call
dec
dec
imul
mov
int
pop
add
in
test
inc
mov
js
repz
xchg
mov
enter
pop
repz
dec
imul
mov
test
pop
loopne
loopne
outsb
xchg
pop
xchg
pop
pop
cmc
jae
mov
or
mov
xchg
or
pop
fstpl
lock
cli
xor
pop
pop
repz
loop
fistps
pop
hlt
cmp
call
ja
jns
test
ds
fists
and
xchg
cmp
add
out
xchg
clc
pop
fmul
andb
and
imul
pop
lret
bswap
pusha
testl
and
xchg
insl
push
adc
aad
mov
pop
mov
ret
lock
test
stc
je
adc
push
insl
xchg
xchg
out
int
and
push
pushf
push
mov
cmpl
outsl
sub
mov
repz
mov
jno
push
les
and
add
sbb
xor
pop
hlt
jle
cwtl
cltd
inc
or
shll
inc
repnz
or
stc
or
mov
pushf
pop
popf
adc
cmpsb
xchg
fsubrs
push
jge
mov
out
or
lds
jo
mov
dec
cmp
cmp
movsl
dec
out
mov
pop
fcoms
pextrw
mov
test
jmp
jg
push
in
xor
lock
in
push
pushf
into
jo
and
add
push
in
and
icebp
dec
adc
and
xor
subb
pop
or
movsl
dec
xchg
loope
test
cmc
xchg
insl
jecxz
push
call
les
jmp
cmp
stos
insl
lods
icebp
inc
pushl
lds
mov
lods
push
mov
push
xor
outsl
push
xchg
test
push
jbe
js
pushf
data16
inc
add
inc
cld
xchg
cs
rcrl
test
call
mov
in
jecxz
add
scas
in
inc
fstpl
sarb
pinsrw
dec
mov
xor
pop
es
arpl
pop
cltd
cmp
mov
mov
ja
xor
es
add
int3
inc
mov
push
mov
jg
cmp
xor
adc
cmpsb
mov
popf
sbb
xchg
push
or
outsl
je
sub
lret
out
repnz
jg
out
mov
xlat
cltd
dec
push
add
mov
push
imul
incb
lcall
je
dec
mov
inc
lret
jbe
cmpb
jle
int3
mull
inc
add
loop
js
jns
mov
jl
jle
loopne
sbb
fucomip
xchg
push
mov
sti
xchg
sbb
lods
and
lea
jp
mov
adc
ret
hlt
addr16
mov
mov
inc
shl
pusha
jecxz
lods
inc
shr
shll
mov
shll
xchg
popa
mov
fcomps
je
inc
out
lock
push
lods
adc
cwtl
sbb
sahf
xchg
push
dec
out
dec
fdivrl
ficomps
test
mov
pushf
push
mov
dec
stos
xchg
jno
add
jl
push
xchg
pop
push
jmp
mov
aas
adc
rcl
scas
and
lds
into
movb
adc
fcmovu
fisubrl
add
xlat
call
cmp
shl
sbb
push
dec
adc
push
xorb
inc
lcall
push
jmp
fcompl
movsb
mov
push
mov
cltd
pop
fs
movq
or
std
jne
mov
inc
jmp
adc
pop
xchg
inc
pop
js
xor
orps
pushf
pusha
imul
loopnew
pushw
push
and
sub
fstpt
je
push
dec
dec
fldcw
xor
sub
and
pop
jb
mov
mov
sub
mov
cmpsl
scas
test
jl
xchg
add
arpl
xchg
cmp
adc
mov
popa
stos
out
clc
ljmp
enter
inc
ja
ret
rol
aas
sub
or
or
test
sbb
out
test
xor
shlb
pusha
jbe
out
hlt
jge
insl
jno
out
enter
push
ljmp
nop
cld
shrb
loop
mov
mov
xchg
sub
pop
jg
or
or
and
inc
imul
or
imul
jp
je
scas
mov
stos
xchg
inc
mov
mov
cmp
lods
fisttpll
mov
pop
int
mov
or
sarb
shll
mov
inc
stos
push
loop
lds
mov
xchg
mov
fimull
fbld
adc
std
sbb
mov
push
divb
push
add
mov
jns
mov
hlt
cmp
xchg
mov
mov
shlb
cvtdq2ps
xchg
jmp
jl
or
cmpsl
mov
fsubs
mov
daa
in
ljmp
insl
mov
push
inc
shrl
lock
adc
sahf
sub
push
mov
adc
in
or
mov
popa
aad
clc
xor
fimuls
and
je
mov
lahf
mov
mov
pop
dec
cmp
je
inc
out
inc
lret
sub
adc
insl
mov
add
inc
int3
sbb
iret
int
fsubrs
lods
mov
mov
xchg
jae
gs
mov
sub
xor
daa
cmp
or
sub
sub
pop
inc
nop
daa
jns
pop
push
mov
push
xchg
jnp
inc
xlat
enter
dec
test
in
or
data16
popf
xor
in
xor
jno
xchg
adc
cmp
sbb
dec
stc
ret
or
sub
inc
and
aas
sub
push
in
sti
dec
movups
adc
and
sub
lret
fsts
lahf
push
arpl
mov
loope
les
jne
jecxz
cmp
movsl
pop
sbb
cmp
mov
es
lret
in
or
mov
imul
iret
mov
mov
add
mov
pushf
mov
add
mov
ljmp
daa
les
xor
add
fcompl
repnz
loop
jg
popf
mov
push
and
outsb
repz
sub
loopne
push
xchg
dec
lret
mov
aad
cs
cmc
out
jg
dec
pop
fs
jmp
dec
test
or
dec
xchg
jl
gs
lret
or
inc
xchg
xchg
pop
or
sub
scas
pop
data16
cmp
xor
push
and
cs
push
xor
imul
add
orl
in
dec
dec
aam
sbb
bound
outsl
and
pop
mov
xchg
mov
inc
and
mov
mov
out
adc
and
xchg
loop
mov
xchg
adc
dec
dec
cmpb
mov
xor
mov
inc
ret
outsb
cmp
pop
inc
in
test
ja
mov
repz
inc
repnz
shlb
clc
push
mov
aam
in
cmpsl
and
fidivl
addb
jne
mov
mov
push
dec
xchg
mov
adc
ja
jle
imul
insl
cwtl
das
pop
xchg
cmp
sub
jbe
dec
push
mov
push
fsubr
xchg
clc
sahf
xor
popa
dec
mov
ret
fidivl
aam
loopne
repnz
and
addr16
pop
inc
push
lods
jbe
test
xchg
xor
enter
jmp
push
popf
inc
pushl
xor
ret
pushf
shr
addl
mov
push
inc
mov
addr16
aas
mov
into
dec
mov
pop
add
mov
inc
mov
jne
mov
ret
imull
sub
loopne
pop
inc
filds
mov
addb
xchg
xor
push
fisubrl
repz
add
ret
stc
sbb
in
and
rorl
mov
or
shrl
cld
gs
test
sar
mov
rcll
jae
and
mov
mov
xchg
dec
pushf
in
or
enter
jle
shlb
bound
inc
fsub
xorl
pop
icebp
jmp
pop
jmp
sbb
mov
call
gs
movsl
add
push
sub
jbe
test
jne
xor
xor
and
ret
mov
jns
in
mov
aad
mov
daa
adc
fisubrl
xchg
divb
jb
xchg
mov
jbe
adc
and
ljmp
aad
rorl
addl
sbb
je
sub
shr
xor
xor
pushf
das
loopne
dec
xchg
sub
iret
jecxz
in
xor
inc
fmul
add
movsb
into
fsubl
jmp
mov
sbb
or
dec
xlat
mov
mov
dec
pop
fcoml
mov
movsl
ds
sub
jb
mov
mov
add
cs
es
jnp
daa
xchg
popf
test
hlt
fs
sub
cld
in
insb
ds
popf
mov
pop
xlat
pop
loop
add
rcl
pop
mov
imul
xorb
lcall
cmpsl
imul
jb
aam
dec
out
jge
sbb
jp
xchg
outsb
inc
xchg
cmp
cltd
mov
ja
cwtl
fwait
xor
dec
lods
inc
mov
or
fidivrl
push
icebp
nop
popa
and
mov
push
inc
es
sbb
icebp
into
outsl
lods
push
loope
cli
mov
push
cmc
stos
dec
js
inc
push
aam
fst
jne
or
pop
loop
loope
jle
fyl2x
cmp
push
xlat
mov
pop
lret
fwait
add
mov
fucomp
and
dec
xor
mov
test
fs
mov
ds
xlat
fidivrs
mul
stc
mov
sti
dec
pop
lcall
dec
out
cmp
add
adc
cmp
into
cltd
pop
inc
test
clc
lods
sub
sbb
or
movsb
cmp
xor
insb
mov
ret
hlt
adc
pop
jnp
jb
pop
loopne
xchg
cwtl
mov
jecxz
inc
adc
addr16
mov
shll
lea
repnz
jns
aad
cmpsl
sub
imul
push
js
jae
xor
std
push
movsb
xchg
mov
test
push
jbe
push
testb
xor
arpl
movsl
ret
cmp
push
mov
cmpsl
loope
rcll
cmp
xchg
inc
mov
pop
xor
ljmp
pushf
repnz
out
aaa
adc
jle
mov
cmp
jmp
mov
cmp
and
sbb
sbb
mov
mov
jno
insl
xor
cmpsl
inc
inc
cwtl
jns
adc
out
jae
xchg
inc
popa
cli
jp
cs
xor
fisubs
sbb
cmp
or
rorl
clc
rol
filds
fidivl
push
or
testb
add
std
push
fstp
popa
pop
mov
lcall
mov
sub
sub
testb
sbbl
insb
fistps
dec
repnz
out
mov
mov
leave
lock
cltd
ret
lds
pop
neg
aas
shlb
fcompl
cli
add
fldcw
cmp
adc
jecxz
fdivs
jle
sbb
mov
pop
loope
jns
pushl
mov
ds
fisubrl
mov
mov
in
add
sti
pushf
pop
cmp
das
stos
mov
pop
and
dec
leave
jo
cmp
sub
ficomps
cltd
xor
js
cmp
mov
sti
pushf
rcl
mov
pusha
aad
daa
xchg
mov
or
imul
pop
fwait
lock
and
mov
dec
push
add
stos
mov
xchg
push
pop
xlat
xor
push
xor
xchg
loope
push
mov
daa
cmc
jl
jae
sub
mov
pop
cltd
test
and
in
xor
sub
jge
jle
push
aad
decb
shlb
fnstenv
iret
into
stc
jns
xlat
divb
into
fimull
sub
sub
into
outsb
mov
xchg
je
in
sti
pop
and
out
jbe
mov
inc
inc
push
shll
out
xlat
outsb
mov
scas
xchg
scas
outsb
cmpsl
in
popa
and
out
mov
mov
fisubrl
pop
popf
jbe
xor
clc
push
nop
mov
out
ja
or
das
or
ret
mov
loopne
jp
insb
pop
push
dec
cmp
cltd
cmpsl
ds
lods
sub
xorl
add
mov
cld
adc
mov
cmpl
iret
popf
mulb
cmpsb
mov
jg
add
mov
loop
push
loopne
add
outsb
sbbb
cmp
mulb
test
mov
mov
mov
sahf
and
or
inc
and
cmp
mov
ret
xchg
testb
fs
xchg
sti
jbe
or
cs
sub
pop
pop
and
int
mov
sbb
jnp
lds
das
push
push
lods
into
push
xchg
mov
imul
mov
ds
pushf
out
outsl
aaa
orl
pushf
add
inc
pop
cwtl
xchg
movsb
push
mov
or
xor
xlat
push
or
lods
sbb
std
mov
inc
push
and
scas
sub
aam
push
sbb
ljmp
stos
fsubp
dec
sbb
adc
subl
xor
adc
inc
scas
cmp
lahf
in
jne
into
push
mov
mov
shrl
add
cwtl
loop
fldl2t
pusha
add
mov
mov
push
lea
dec
pop
mov
movsl
gs
mov
mov
insb
dec
addr16
decb
xchg
stos
mov
test
roll
pusha
pop
int
enter
add
adc
aad
xor
and
lea
mov
mov
push
cmpsl
sbb
iret
sahf
int
xchg
and
push
mov
ja
out
test
cmp
jo
push
mov
scas
rclb
and
or
fistps
popa
and
pop
cmp
int3
shlb
mov
pop
lods
inc
shlb
or
mov
jle
lea
jne
inc
scas
js
push
outsl
stos
cmp
push
inc
pop
rorl
int3
cltd
in
ds
fwait
mov
addr16
and
lods
push
add
mov
iret
sarl
shll
cltd
in
pop
push
ja
pop
sub
cmp
in
inc
das
in
ret
lret
xchg
jns
imul
add
push
insl
jmp
and
push
loopne
ret
cld
loope
xor
mov
jmp
test
ljmp
pop
cli
dec
inc
mov
lcall
inc
stc
mov
subb
call
dec
mov
insl
inc
les
sti
outsb
add
push
mov
push
or
pop
sbb
decl
insl
jge
push
push
push
ja
cmp
push
mov
out
dec
shlb
inc
shld
pop
adc
pop
bound
lahf
sbb
jmp
insl
sbb
fdivs
push
push
mov
dec
std
subl
daa
push
inc
mov
or
add
insb
xchg
frstor
add
pop
mov
mov
mov
mov
shlb
lret
popa
negb
jae
inc
pop
jmp
inc
outsb
lock
push
lods
int
xchg
dec
push
push
mov
mov
cmp
aam
dec
mov
push
into
adc
mov
int3
mov
aad
fisubrs
adc
or
inc
xor
movups
mov
xor
lahf
sbb
mov
and
pop
dec
das
dec
fisubrl
push
test
push
jmp
add
jmp
test
mov
push
add
xchg
call
dec
out
sub
insb
lret
bound
pop
das
lds
fchs
in
pop
dec
jecxz
movsl
pusha
inc
pusha
scas
push
mov
dec
xor
in
cmp
sbb
inc
sbb
inc
mov
sbb
pop
sbb
sub
adc
enter
mov
lea
jbe
cltd
aaa
push
inc
inc
mov
jbe
push
xorl
or
repz
ret
cmp
pop
dec
stos
cmp
dec
adc
pop
out
insl
ror
lock
mov
ja
arpl
test
daa
pop
in
and
repnz
ret
call
adc
xchg
sbb
fldcw
gs
aam
cs
xchg
cwtl
xor
js
mov
push
das
xchg
mov
mov
popa
in
sbb
cmp
les
xor
sub
inc
mov
je
mov
and
fs
or
xorl
xor
outsb
inc
adc
jb
cmc
enter
jae
mov
stos
inc
mov
dec
fcomip
daa
inc
les
inc
pop
mov
inc
sar
inc
loopne
leave
cmp
mov
fstp
cld
aas
fbstp
push
or
and
ljmp
insl
or
repnz
push
push
mov
jmp
cmpsb
sbb
aaa
into
adc
push
jae
jg
add
lcall
mov
in
shrb
negl
lods
cmp
outsb
jle
mov
ja
xor
sbb
popa
dec
in
mov
adc
mov
jmp
xchg
icebp
out
leave
or
jne
xchg
test
sub
add
shlb
scas
inc
sahf
push
sti
imul
xchg
mov
dec
push
xor
fsubrl
mov
std
xchg
aaa
mov
xchg
cs
sbb
ljmp
sbb
stc
xor
sub
lcall
push
imul
mov
pop
mov
sbb
insl
dec
pop
mov
mov
jg
popa
icebp
adc
mov
loopne
cmp
xchg
sub
outsl
fstps
cld
cs
cld
call
mov
and
inc
and
mov
fwait
xor
cmp
fs
push
sahf
subb
repz
lcall
jne
push
fwait
and
in
test
mov
mov
mov
fildl
add
xlat
pop
sbb
lods
stos
out
mov
adc
mov
sbb
in
test
and
sbb
int3
jne
std
sub
xor
push
dec
loopne
inc
mov
mov
addr16
jmp
decb
addr16
and
push
es
push
loopne
sti
xchg
mov
sbb
lods
pop
mov
xchg
cmc
push
cmp
cmp
incb
fs
stos
jo
pop
sahf
cmp
jl
sub
jecxz
xchg
out
aad
cmp
filds
jmp
aaa
movsb
clc
in
mov
cmpsb
cmp
jp
jne
loopne
or
out
mov
fdivl
mov
xchg
xchg
aad
dec
shll
add
mov
icebp
sub
bound
jbe
dec
fcomps
push
mov
xor
test
pop
repnz
sbb
in
lret
in
popa
push
in
jae
sti
mov
lock
loope
mov
mov
adc
sub
mov
je
enter
xorl
lods
cmp
xor
test
fst
sub
adc
dec
add
pop
out
movhps
mov
jbe
std
scas
lods
pop
sbb
aas
xchg
jne
sub
jmp
adc
sbb
push
mov
out
sbb
cmp
xchg
sbb
lcall
mov
stc
out
sbb
das
psubsb
hlt
mov
push
loope
lods
adc
popf
sti
pusha
fucomi
aaa
pop
jmp
fimull
push
adc
jmp
lret
clc
xor
fcmovu
mov
xchg
cs
mov
int3
pop
aas
pop
jmp
or
jnp
xchg
nop
stos
cli
cmp
test
pop
sti
sbb
jg
and
stos
sbb
adc
xor
stos
adc
mov
pop
in
in
dec
mov
ret
repnz
xor
dec
adc
adc
sub
scas
jbe
std
xchg
mov
je
in
cs
js
repnz
xchg
sub
les
out
popf
jae
and
inc
stos
stc
movsl
lret
push
cmc
cmp
cmp
adc
sbb
sub
inc
arpl
fidivrl
mov
push
fldl
out
movsb
int3
pop
in
dec
movsl
nop
testb
sub
add
dec
cmp
scas
insl
arpl
scas
mov
xor
cmp
cwtl
add
inc
cltd
ret
popf
jg
iret
jbe
insb
test
hlt
pop
dec
dec
xchg
ljmp
pop
adc
jle
cltd
push
and
les
outsb
in
sbb
dec
cmc
cwtl
lahf
jb
ret
shrb
loop
jbe
cmp
adc
iret
pop
inc
std
push
jnp
add
xor
nop
mov
xchg
pop
adc
jae
cs
mov
pop
mov
sahf
int
jae
aad
xchg
and
pop
outsb
fbstp
xchg
es
iret
mov
in
and
cmpsl
xchg
lods
or
repz
scas
movsb
inc
push
pusha
in
xor
nop
out
les
test
es
lret
adc
xchg
fisubrs
cmc
in
and
jnp
jne
je
sub
and
gs
mov
jle
xlat
imul
popf
mov
cwtl
das
or
jle
dec
and
adcb
into
pop
push
jle
add
pop
lods
ret
aaa
push
rolb
outsl
dec
adc
nop
xlat
sbb
xchg
sbb
jle
cmp
rclb
lds
call
or
cmp
stos
jne
fld
jnp
and
sub
xchg
popa
mov
shll
negl
cmp
cmpsb
leave
pusha
fdiv
pop
or
add
push
mov
sub
arpl
fdiv
fldl
fimull
sbb
jns
push
fldpi
pop
lret
enter
xor
test
mov
insb
mov
sbb
inc
dec
fdivrl
mov
or
pop
sbb
cmpsl
dec
insb
adc
adc
inc
scas
ret
lds
fdivs
insl
inc
inc
cmpsl
jae
subl
mov
ret
mov
inc
xlat
setne
shrl
add
leave
jmp
sbb
cmp
mov
mov
shrl
scas
fs
mov
leave
jg
jne
sbb
jbe
adc
jle
fndisi(8087
inc
lret
bound
adcl
fwait
js
fidivrs
arpl
and
cli
or
incl
push
in
repnz
in
movswl
inc
outsb
movsb
les
sub
jns
shll
insb
sti
inc
sahf
fistl
ss
xchg
fwait
repnz
sbb
sub
cmp
hlt
mov
jmp
cwtl
jg
test
xchg
lock
lcall
aam
xchg
mov
lods
xor
popa
xchg
std
xchg
int
dec
xchg
insl
out
test
mov
dec
ror
in
imul
pop
hlt
sahf
bound
xor
cmpsb
jo
jl
sbb
jp
in
aaa
into
sbb
in
arpl
jl
xor
sub
movsl
shl
aad
mov
ret
push
pop
mov
lods
bound
xchg
sub
dec
cmpsl
lods
lahf
push
insb
push
lods
sahf
loop
jge
mov
loopne
rclb
push
ljmp
jno
sbb
inc
pusha
sahf
lock
data16
and
push
mov
dec
xor
shl
xchg
inc
inc
int3
inc
dec
pop
ja
pop
jg
gs
dec
mov
xor
xchg
push
jae
div
adc
js
nop
sbb
push
js
cmp
fisubrs
xor
xor
adc
cltd
xchg
divb
add
mov
pusha
lds
xchg
test
dec
xchg
xor
inc
mov
push
xchg
aam
daa
push
loope
sub
aad
dec
in
cmc
outsb
cmc
add
lock
into
sbbl
push
das
mov
mov
popl
pop
into
inc
push
add
ss
sub
or
pop
jb
stos
xchg
cld
dec
cld
jno
lahf
lret
push
out
mov
jo
xchg
rcl
lea
addb
pushf
jl
shlb
sbb
loop
lahf
inc
or
pcmpgtb
xor
cmpsl
or
cli
mov
icebp
adc
mov
arpl
imul
jmp
jbe
inc
fdivrs
mov
cmp
mov
sahf
std
or
test
and
sbb
dec
push
fdivl
xchg
jl
test
aaa
pop
add
pop
dec
loopne
dec
out
mov
xchg
xchg
sub
outsl
mov
xor
int
lret
pop
cltd
jns
push
push
pop
lcall
ja
js
jmp
sub
mov
jmp
and
roll
pop
mov
push
mov
cli
push
xor
cmp
iret
adc
jge
jmp
jge
mov
jnp
imul
pusha
fstpt
mov
sahf
clc
enter
sub
das
lds
lret
insl
dec
dec
jecxz
ret
out
push
call
or
call
or
mov
dec
sub
shl
pop
enter
pop
mov
ret
sub
xchg
fldcw
addr16
sub
lock
rorl
mov
jb
clc
xchg
jl
mov
lret
shll
mov
xchg
sub
add
push
hlt
fcomi
mov
cmpsl
adc
sub
xchg
test
lea
inc
mov
xchg
outsl
fimull
dec
mov
push
cmc
push
cmp
mov
pop
outsl
andl
jbe
aad
adc
pop
cmp
xchg
jg
cmpsl
xor
pop
cmpsb
addr16
xchg
push
cltd
ds
cli
lea
jo
icebp
shl
sti
rclb
mov
enter
adc
outsl
push
test
int3
fnstenv
scas
daa
clc
push
insl
cmp
xlat
outsb
pop
ds
out
outsl
xor
xor
rorb
pop
xchg
repz
dec
imul
mov
fs
xor
xchg
mov
add
lea
outsl
stos
fsubrl
adc
popa
cwtl
test
pushf
dec
rcrl
mov
add
sbb
mov
lods
adcl
or
push
mov
mov
fsts
mov
xor
data16
mov
ljmp
sbb
popf
dec
pop
stos
push
in
xchg
pop
pop
shl
adc
sbb
mov
fnsave
adc
ret
pop
icebp
cmp
mov
stos
xlat
js
or
or
stos
pushf
sub
scas
inc
mov
out
out
cmp
aad
pop
mov
call
pop
pop
hlt
cmpsl
dec
add
loope
dec
in
std
nop
mov
sbb
icebp
mov
enter
jecxz
mov
notl
xchg
xor
gs
adc
and
inc
push
inc
fwait
scas
push
stos
jne
jnp
movaps
xchg
mov
mov
lock
add
shrl
pop
push
insb
mov
std
or
cmp
int3
mov
fsts
ds
xchg
push
pop
je
lret
movsl
repnz
jmp
cmc
ja
and
bts
outsb
lea
xor
leave
sbb
or
push
loope
inc
cmp
insl
cmc
push
pop
mov
loop
testb
frstor
xchg
gs
pop
imul
in
jle
enter
fsubr
inc
hlt
movsl
jle
faddl
js
jae
inc
push
mov
insb
inc
int3
pop
cld
sbb
xor
fidivrs
cmp
ja
insb
mov
push
pop
pop
push
jecxz
mov
jecxz
mov
mov
push
ret
adc
inc
int
xchg
and
scas
mov
loope
push
fcom
xor
xor
xchg
stos
mov
sti
je
pop
push
mov
mov
sub
movsl
push
mov
push
xlat
pop
push
int
add
je
or
adc
push
jne
adc
movsb
fldl
jg
jmp
into
xor
addb
popf
sbb
cmpsb
xchg
fwait
xchg
jecxz
jae
lock
or
xchg
popl
jnp
jno
add
cli
or
rcll
rorb
fdivs
aad
bound
pop
mov
jae
and
orl
nop
mov
iret
orb
push
ds
sti
pop
mov
jbe
jmp
scas
sub
mov
stos
sahf
adc
inc
sub
xor
stos
fidivl
fdivr
decb
scas
test
mov
pop
adc
leave
mov
fstl
add
dec
cwtl
scas
ret
jne
hlt
fimuls
leave
jb,pt
repnz
dec
sbbl
cmp
fcomip
stc
pop
pop
insl
cmp
cmp
mov
aas
in
push
mov
adc
fxtract
inc
push
fwait
lods
push
mov
add
sti
sbb
fists
adc
adc
jmp
xchg
cmp
mov
mov
cmpsl
lods
mov
aam
pop
negl
mov
cmpsl
out
xchg
shlb
adc
scas
and
add
mov
fmull
xor
sub
push
cwtl
std
xchg
pop
mov
inc
push
sub
out
outsl
in
xor
mov
inc
or
jge
dec
sub
leave
js
pop
les
dec
mov
lcall
jmp
jae
push
add
sbbl
xor
pop
js
and
hlt
cmp
jnp
ret
mov
dec
push
sub
adc
mov
sub
inc
fstpl
movsl
lds
jl
mov
lock
inc
clc
and
in
into
das
rcl
mov
lahf
xabort
push
add
imul
xchg
add
inc
pop
mov
mov
add
or
adc
mov
in
out
cmp
lock
lock
mov
pop
add
imull
stos
jecxz
sub
sub
lods
lahf
dec
int
cmc
lock
xchg
cmp
or
ds
rclb
mov
add
push
jle
inc
stos
jl
leave
loop
cs
xchg
push
mov
cmp
pop
js
cmp
mov
addr16
mov
jns
ja
movsl
sub
loop
xchg
nop
add
cmp
inc
pop
cmp
stos
inc
popf
mov
cmpsb
lods
cmpsl
ret
fmulp
adc
outsl
jl
push
lods
mov
lods
mov
fs
shrb
pop
sub
or
push
jno
pop
xchg
rclb
pusha
add
mov
fmul
mov
cli
mov
fdivs
sub
push
imul
xchg
xor
xor
icebp
ds
xchg
cli
inc
fwait
xchg
lock
shl
repz
adc
sub
cld
jecxz
std
cltd
cmc
clc
push
scas
jmp
add
loope
gs
mov
stos
sbb
shrb
push
call
rol
rol
ss
movsl
ret
sbb
push
xor
mov
push
lea
pop
adc
inc
ds
jmp
lock
lods
xchg
cmp
int
jnp
dec
xchg
mov
jne
movsb
mov
xchg
pop
sbb
mov
divl
icebp
cmpsl
js
mov
adc
push
cwtl
pop
jae
dec
aaa
or
push
push
cs
divl
mov
fucomi
or
fisttps
das
mov
xor
mov
sub
fildl
into
jle
add
mov
enter
daa
mov
sbbl
mov
movsl
inc
mov
shrb
pop
adc
push
xchg
xchg
insb
add
cvtdq2ps
scas
decb
xor
jne
and
and
ds
add
adcl
fsubrs
xchg
inc
out
popf
testb
clc
stc
and
dec
jo
jg
mov
xorb
outsl
push
mov
loop
in
push
mov
or
aas
std
add
std
or
mov
test
sti
pop
lods
mov
sbb
fbld
dec
push
xchg
push
movsb
jno
fsubs
out
lea
mov
inc
arpl
cmp
movsb
dec
mov
dec
pop
cmp
xor
stc
xchg
pop
inc
push
shll
push
jnp
mov
adc
outsl
push
stos
flds
push
sbb
mov
mov
dec
adc
jmp
jns
fdivl
lret
fistpl
cmp
or
xlat
mov
mov
mov
aam
inc
sti
pop
jnp
ljmp
inc
rolb
ja
fcmovb
fimull
fucomip
sbb
imul
push
mov
cmp
outsl
pop
sbbb
or
mov
mov
int3
subl
aas
iret
icebp
lret
jo
add
or
mov
dec
pop
incb
jae
mov
and
mov
cld
test
leave
pop
mov
jp
cli
push
adc
es
aaa
fnstcw
adc
out
lret
jb
or
in
cmp
and
or
cmp
in
pop
fs
mov
add
jp
fnstsw
stos
inc
lods
jmp
dec
rorb
add
inc
and
mov
push
lock
jbe
enter
jg
mov
fs
jb
mov
lods
aas
rol
loop
aad
xor
add
jmp
and
mov
jno
mov
popa
inc
shrl
scas
cli
rorb
sbb
fcmovne
aaa
fisubrl
rorl
divl
ljmp
cmp
out
mov
fnstcw
fsubl
in
push
adc
sbbl
mov
outsb
push
xchg
scas
inc
push
mov
ss
lret
jo
mov
sbb
lahf
bound
mov
push
add
mov
fisubs
loop
pop
add
or
xor
flds
dec
dec
das
or
dec
xchg
add
lods
sub
push
mov
adc
testl
and
ljmp
sub
jle
lea
mov
mov
arpl
adc
or
xor
jle
xchg
mov
inc
ret
stc
test
aam
adc
jl
pop
aaa
into
test
jecxz
scas
mov
aad
cmp
push
jmp
jb
jno
hlt
fsubr
sahf
mov
mov
imul
mov
jge
movl
dec
jecxz
push
dec
fucomp
jl
jae
bt
dec
das
cmp
cmp
mov
in
add
aaa
add
test
dec
ret
dec
adc
mov
and
imul
push
or
push
sbb
outsl
push
test
cmpsl
or
fucomip
mov
repz
pushf
jecxz
outsb
or
mull
sbb
pop
jge
pushw
out
sbb
jg
shrl
lahf
ret
jl
cmpsl
mov
ljmp
outsl
inc
push
fdivr
xchg
xor
fwait
dec
rclb
jecxz
cmpsb
dec
loope
dec
push
in
push
and
movsl
mov
test
sub
incb
mov
fs
xchg
fldcw
mov
add
orb
fbstp
cmp
out
cmp
cwtl
mov
inc
and
stos
ja
stos
cmpsl
pusha
cmpsb
mov
xor
mov
mov
popf
fmulp
jno
pusha
imul
mov
iret
test
fstps
leave
stc
mov
imul
mov
jmp
and
sub
mov
mov
mov
popa
es
xchg
adc
add
shrb
dec
xor
aaa
mov
sub
lret
cld
popa
or
cwtl
in
test
adc
push
pop
outsl
jmp
scas
push
inc
jmp
cld
adc
sub
loopne
testb
stc
cmpsl
mov
push
adc
rorb
lock
inc
mov
cmc
add
clc
or
jl
xchg
in
xor
xchg
rclb
mov
mov
imul
cmp
sbb
aad
scas
fwait
push
and
xor
mov
lods
repnz
aas
stos
roll
fcompl
dec
mov
jb
in
sub
mov
fildll
dec
jg
sar
mov
mov
popa
fwait
inc
sahf
in
adcl
fsubrs
cli
loopne
rorb
cld
insb
out
fidivl
aas
dec
mov
js
pop
cs
cmp
lock
cmpsb
push
js
xchg
test
test
adc
into
jnp
xor
cld
cmc
and
fisttpll
lock
xchg
cli
pushf
aad
and
mov
push
fwait
and
pusha
outsw
push
lods
scas
imull
jno
mov
cmpsb
call
push
mov
sub
ss
dec
inc
pop
addl
mov
add
inc
stos
hlt
pop
fisttpll
subb
hlt
repnz
jne
fidivl
xchg
sbb
mov
cmc
sub
sbb
imul
outsl
iret
scas
stos
js
pop
int3
sub
into
cltd
jle
jecxz
add
push
scas
cmp
mov
mov
mov
jecxz
outsl
ret
mov
mov
mov
dec
movsl
popl
in
jnp
xor
stos
jmp
and
adcl
xor
mov
je
jmp
cltd
mov
loopne
mov
dec
out
mov
lahf
mov
orl
mov
cmp
mov
push
out
mov
jo
cli
rorb
rcrb
clc
cmp
and
cmpsl
int3
pushf
cli
std
add
adc
sub
and
fwait
out
push
dec
jge,pt
inc
scas
sahf
ret
mov
pop
in
call
sub
xlat
test
inc
sbb
mov
xchg
testl
das
pop
call
or
mov
pushf
sti
lret
shll
cmp
addr16
jg
out
sbb
sarl
xor
test
icebp
xchg
pop
mov
sub
mov
mov
mov
dec
ljmp
aas
fisttps
popa
js
mov
dec
and
jecxz
nop
daa
or
xor
sub
dec
mov
stc
nop
cmc
loopne
imul
cmp
pop
jnp
ficompl
mov
push
sub
dec
test
mov
loope
scas
dec
out
aad
xchg
mov
loopne
xor
leave
pop
movsl
fstpt
cmp
lods
sti
js
insl
test
hlt
dec
aam
pop
pop
dec
mull
jl
xor
xchg
ret
push
pop
lahf
xorl
adc
daa
push
xchg
into
loop
jbe
or
fcoml
pop
mov
pop
in
mov
sub
outsb
xchg
nop
hlt
jg
jne
aas
movl
in
or
cmp
jge
xor
fstl
push
out
push
test
sti
outsb
std
loope
fstp
xchg
lds
cmp
test
cmp
sub
sbb
out
sub
sbb
add
inc
xor
js
cmp
insl
test
arpl
rcrl
xor
cs
enter
xor
lock
cmp
into
repz
imul
inc
in
adc
jns
mov
mov
dec
sbb
out
xor
mov
int3
addr16
scas
mov
inc
xor
lahf
or
sub
inc
lods
xor
dec
lods
ss
and
pop
ss
add
leave
add
push
cld
test
dec
jae
cmp
mov
js
std
test
arpl
push
lret
push
xchg
loop
movsl
enter
or
inc
sbb
sahf
mov
pop
cmp
inc
add
loope
xchg
pop
mov
xchg
cmp
sub
add
add
sub
push
es
dec
aam
das
and
jl
xlat
dec
lock
or
jp
daa
push
test
inc
out
jne
stos
sbbl
or
push
mov
xchg
out
or
rcrl
ret
fstpl
jo
ss
mov
cmpsl
mov
or
movsl
cmp
pusha
aad
mov
fisttpl
cwtl
sarb
push
jne
sbb
sbb
out
dec
movsb
out
or
push
imul
xor
dec
in
lods
into
and
test
dec
jbe
test
sarl
jae
popa
jb
jb
add
clc
popa
mov
cld
bound
push
cmc
cmpsl
sbb
fsts
mov
add
mov
stos
push
mov
int3
jmp
push
and
adc
or
daa
sbb
js
inc
out
push
in
sub
fisttpll
fiaddl
rcrb
stos
mov
sbb
push
fidivs
mov
lret
gs
fcoml
jle
cmp
pop
enter
jo
mov
test
and
ret
inc
jne
ja
lock
sbb
inc
or
repz
add
push
fidivl
dec
add
stos
es
add
test
sbb
pop
jb
shll
mov
movsb
jno
push
push
inc
jecxz
mov
dec
add
in
aam
push
cmp
insb
xor
call
pushf
sub
imul
or
pop
inc
addr16
daa
sbbb
ss
pusha
stos
inc
lahf
mov
rorb
cmp
and
push
or
and
mov
ret
mov
repnz
mov
es
movsb
lret
lret
mov
sbb
add
mov
daa
add
sti
push
sub
repnz
and
stc
popf
imul
jnp
xchg
inc
pop
jno
mov
and
ljmp
mov
or
ret
test
hlt
mov
std
push
inc
pop
orb
push
pop
testl
and
mov
sbb
jp
jae
xchg
push
jne
mov
pop
sbb
pop
push
mov
int3
nop
mov
ret
fsubrl
dec
push
cmp
pop
mov
adc
movsl
icebp
fs
mov
cmp
imulb
push
inc
jnp
fstps
out
fwait
push
cli
xchg
dec
sar
aad
insb
jecxz
ret
push
dec
fiadds
mov
out
adc
addl
aaa
add
nop
scas
popa
lock
call
lds
or
mov
sub
pop
inc
or
dec
fisttps
jmp
lods
jnp
cmpsl
ja
push
mov
cwtl
lret
mov
mov
mov
out
test
pop
hlt
dec
stos
hlt
pop
mov
pop
xchg
push
xchg
and
sbb
xchg
mov
addr16
pop
dec
mov
jp
pop
clc
cmp
sbb
mov
lods
imul
lret
xchg
or
pop
push
aam
xlat
test
sbbl
xchg
in
or
test
xchg
inc
add
lahf
xor
out
xchg
loop
loope
mov
std
aad
sub
cli
in
dec
notb
adc
add
ja
in
rolb
mov
and
push
fldcw
push
dec
xchg
mov
pop
fcoml
mov
jmp
out
jb
int
leave
pusha
movb
lahf
sbb
jno
add
in
push
dec
inc
push
fcomp
jp
loopne
stc
pop
xor
out
test
dec
push
jmp
cmp
test
das
pop
pop
push
push
add
lcall
js
dec
stos
and
inc
mov
lds
xor
push
outsl
aam
loop
es
cli
xchg
sbb
loop
xchg
sti
or
test
aad
test
dec
repz
cli
fildl
xchg
or
les
mov
ret
jp
outsb
orl
aas
mov
adc
rol
pop
or
xchg
jmp
in
and
adc
clc
jnp
dec
sub
dec
push
dec
aad
outsb
sub
inc
xchg
mov
rcrl
insb
test
shll
popa
xorl
test
leave
ss
mov
lahf
mov
jo
mov
imul
mov
movsb
imul
mov
leave
jl
dec
std
sub
loop
outsl
shl
lcall
addr16
mov
mul
mov
and
add
sub
in
or
fpatan
sbb
mov
inc
and
push
and
add
inc
dec
or
xchg
and
pop
std
subb
pop
or
jecxz
movsl
test
add
mov
jno
xchg
lcall
mov
jbe
and
ljmp
cli
push
jae
cld
movsb
mov
inc
sahf
popf
and
inc
cmp
inc
popa
jbe
in
push
into
dec
adc
lods
pop
call
adc
xchg
jmp
ret
leave
repz
inc
push
pushf
lahf
push
inc
jbe
xchg
fisubl
vhaddpd
mov
in
mov
push
cmpsb
sar
testl
iret
xchg
adc
push
pop
jae
mov
add
scas
cmp
outsb
add
xor
enter
stc
inc
stos
addl
cld
inc
inc
jg
add
js
inc
jmp
leave
loopne
ds
pushf
in
mov
icebp
sti
arpl
and
jno
lcall
and
jp
out
test
inc
mov
cmc
mov
mov
adc
das
idivl
lcall
or
bound
mov
fists
dec
fsubrl
fnstenv
gs
lret
cmpl
loopne
xchg
outsb
jl
xor
mov
dec
pop
lock
sub
call
add
add
jle
xor
cmp
dec
iret
nop
pop
xchg
push
imul
add
mov
xlat
mov
fwait
lock
pop
cmp
and
sub
pop
or
xor
mov
mov
jae
fisubrl
pop
out
das
push
popa
sarl
xchg
sbb
dec
aas
pop
outsb
jl
imul
jb
test
adcb
add
jno
lea
mov
pusha
lret
or
orl
sub
xor
inc
mov
xor
lcall
aas
out
sbb
cmpsl
push
pop
xorl
xlat
and
xor
xor
int
mov
mov
sbbb
sbb
repz
pushf
xor
lds
insl
jb
inc
xlat
and
ljmp
stc
mov
clc
xor
imul
pop
add
mov
dec
aam
fsts
jb
arpl
jp
xor
sub
lret
mov
shrb
mov
dec
jmp
xchg
outsb
mov
xchg
cwtl
push
adc
dec
fcmove
fimuls
cmpsb
mov
and
fisubs
stc
test
adc
mov
negl
test
mov
adc
push
cmpsb
add
daa
inc
xor
pop
movsb
movsb
mov
movsl
push
ret
inc
push
jle
cld
es
jb
cli
xor
cmpl
fidivs
adc
or
jg
or
rcrb
test
lds
movsb
cmp
adc
vpshaq
scas
cmp
and
loop
aaa
cltd
sub
xchg
fisttpll
inc
ret
xor
out
and
iret
adc
adc
or
cli
sarb
int
out
ljmp
shlb
inc
sbb
adcl
inc
lahf
inc
fisttpll
inc
scas
repz
xor
cmp
outsl
insl
mov
imul
jecxz
jge
into
out
mov
push
add
in
cltd
pop
sahf
or
sti
out
sti
sahf
iret
jnp
in
ss
dec
jae
mull
insb
sub
stos
out
fdivrl
rcrl
fadds
xchg
fistps
mov
or
jne
daa
mov
fs
cwtl
add
inc
je
sbbl
xchg
adc
mov
insl
call
dec
insl
test
call
fcomps
push
or
es
into
adc
xchg
repnz
lods
xchg
sub
and
adc
pushf
sti
sub
ljmp
push
ret
xchg
mov
sbb
add
hlt
mov
pop
add
icebp
repnz
cs
sub
jp,pn
mov
cltd
mov
jge
mov
je
xchg
aam
lahf
mov
pushf
imul
or
fcompl
scas
or
bound
faddl
fsubrs
daa
push
outsb
aad
jl
xor
fstps
pop
das
jge
ret
outsb
pop
lret
dec
iret
mov
or
sub
test
cli
fistps
out
inc
cmp
inc
dec
dec
cmc
xchg
fsubrs
cmp
sub
dec
push
rorl
jnp
push
ret
fistps
into
loopne
mov
mov
cmp
clc
and
int
inc
xor
dec
les
jmp
and
push
pop
std
lret
xchg
aam
pushf
and
cmpsb
mov
xor
es
dec
pop
mov
ret
ret
push
sub
inc
scas
sarl
inc
pop
pushf
iret
je
insl
aas
jno
mov
sbb
mov
mulb
mov
cld
ja
into
gs
xor
fimull
cwtl
cmp
jp
aas
jae
lahf
cmp
movsb
out
andl
testl
or
sub
pushf
push
into
pop
iret
mov
imul
jnp
test
movb
in
ficoms
sub
repz
pop
jl
add
sbb
dec
push
mov
fisttpll
push
mov
les
inc
xlat
push
inc
sbb
push
pxor
sub
shrl
rorl
add
fldcw
jae
std
fisubl
mov
int3
mov
ds
push
cmp
cmp
dec
into
insb
pop
lock
mov
dec
xor
mov
jp
aam
aaa
mov
cli
pushf
fsubs
jo
lcall
adc
and
xchg
imul
sbb
xor
jno
cli
orl
pop
je
xchg
out
hlt
daa
or
pop
jae
shll
jae
mov
xchg
outsb
add
add
lahf
xor
add
and
add
fs
inc
ss
sbb
in
sub
inc
cmp
mov
fisttps
lea
xchg
cmp
cli
jno
sti
xor
pushf
lcall
cmpsl
test
mov
pop
rcl
adc
push
ror
mov
pusha
xchg
mov
mov
jne
xlat
bound
sbb
xorb
pop
fadd
mov
inc
out
sbb
add
jl
mov
xchg
dec
inc
lret
ljmp
fcmovu
out
jle
pop
ss
ret
rcll
and
cld
jmp
inc
sbb
xor
int
lret
cld
imul
fcompl
sbb
sarl
jl
mov
push
test
push
int3
xor
pop
loope
sub
loope
sub
sbb
mov
cmp
sub
pop
sbb
in
scas
xor
ss
or
gs
pmaxsw
and
addr16
inc
out
test
in
ljmp
jno
std
jb
ja
xchg
es
stc
lea
mov
jno
in
lahf
push
sub
mov
dec
cmc
mov
inc
lods
cmp
test
and
lods
test
xor
fucomp
dec
xor
ja
lds
cmp
pop
xchg
adc
shll
mov
insb
fwait
push
call
popa
mov
arpl
jecxz
clc
insl
xor
fadds
dec
pop
out
push
hlt
mov
nop
xor
jbe
negb
mov
xchg
in
jmp
jae
cmp
mov
cmp
mul
fstpl
inc
ret
sti
nop
shlb
pop
icebp
hlt
inc
or
std
push
mov
cmpsl
cmpsl
mov
and
add
ds
fiaddl
sub
leavew
pop
xorl
shll
out
pop
bound
mov
insl
sub
out
lret
and
and
pop
push
xor
std
jno
loopne
jmp
cmp
jno
xchg
test
cmpl
test
push
sbb
adc
lods
inc
cmpsl
fcomip
aas
dec
dec
int
jg
test
xchg
sbb
and
shrb
sbb
inc
fsts
loop
dec
pop
lds
popa
add
jecxz
sbb
or
out
and
pop
int3
es
dec
mov
mov
jae
dec
out
fnsave
rcl
js
into
pop
scas
sbb
mov
add
ret
ret
je
sbb
insl
dec
aad
sub
retw
pop
xchg
adc
mov
push
call
inc
repnz
jb
pushf
in
xchg
andb
cmp
mov
mov
mov
out
jno
pushf
fdiv
xchg
xor
jl
mov
mov
pop
or
dec
outsb
mov
fdivp
movsl
mov
or
repnz
rcll
push
loopne
mov
inc
fs
lret
and
lea
jmp
imul
lods
cmp
jae
jle
pushf
pop
test
cli
test
out
jge
aad
inc
rcl
hlt
add
jmp
xor
jp
xor
xor
or
pop
fsubl
loop
xchg
fucomi
ret
mov
fnstsw
addr16
loopne
cmpsl
pushf
sub
daa
jne
sahf
push
mov
decb
in
mov
shll
ss
jns
jbe
out
les
in
sbb
ret
mov
insl
iret
jecxz
xlat
and
or
and
pop
pop
jbe
push
std
cld
mov
out
cli
push
cs
ret
mov
fsubrs
rcll
pop
lcall
scas
xchg
add
add
sbb
mov
orb
dec
mov
sti
inc
mov
in
into
xor
out
xchg
xchg
nop
out
mov
int3
icebp
mov
adc
xchg
push
stos
stos
jae
and
stos
xchg
outsb
jbe
inc
sub
leave
pusha
jge
dec
sbbb
xchg
inc
jns
sahf
lods
cmp
out
add
outsb
ja
out
xlat
outsb
and
mov
popa
test
ljmp
aas
or
jo
pop
insl
push
push
inc
sahf
or
mov
cmp
mov
push
mov
pop
outsl
lret
ss
lds
and
add
sub
mov
les
testb
shlb
je
movsb
sti
inc
pusha
test
inc
fcomi
leave
aas
aam
cmp
cmp
sub
xchg
push
dec
push
push
mov
push
push
xor
addb
dec
arpl
mov
fistpl
ja
fildl
xlat
xchg
imul
out
fistps
xor
add
pop
xchg
aam
inc
inc
inc
call
mov
test
xchg
scas
dec
fsubs
pop
mov
pushf
sarl
jo
jb
jne
add
lods
stc
jg
sbb
sbb
lods
imul
scas
les
sub
inc
xor
inc
mov
jnp
mul
xchg
dec
dec
out
mov
pop
outsb
shlb
mov
mov
idivl
cmp
movsl
cmp
fstpt
loope
notl
ss
and
test
xor
mov
push
push
je
jl
nop
sub
adc
loop
fisubs
cs
mov
dec
mov
shrb
add
stc
add
xchg
jns
mov
bound
cmpl
test
pop
or
repz
cwtl
insb
jge
push
scas
mov
mov
test
lcall
sahf
xchg
lret
push
jmp
repnz
inc
add
es
ds
dec
imul
in
out
dec
stos
inc
lock
leave
enter
jbe
sbb
shr
and
dec
cmpsb
xchg
addr16
stos
aad
lret
cwtl
or
lcall
shr
fs
cli
adc
fdivr
dec
xchg
mov
repnz
and
cmpsl
mov
insb
mov
nop
cs
xchg
out
jl
jl
and
adc
lret
xor
jb
adc
sub
lods
inc
xchg
lods
jne
out
fstsw
test
cmp
inc
mov
or
inc
ffree
sub
pop
push
add
pop
shlb
or
add
scas
mov
insl
mov
lods
xchg
and
ljmp
cmp
int
sub
test
xor
adc
xchg
xchg
cmp
xchg
ja
loopne
push
std
push
push
ffree
add
xor
and
fnsave
push
ds
lret
mov
mov
sub
jge
cmp
es
xorl
cmp
fnstenv
fidivrl
and
test
sub
sarb
adc
int3
in
jmp
adc
sub
aaa
push
or
push
adc
jp
push
jb
sub
and
inc
lret
fstl
sbb
xchg
cmpsl
imul
call
fcmovu
mov
xor
xlat
ljmp
mov
sub
sub
sbb
mov
xorb
pusha
ljmp
mov
ss
sub
insl
pop
mov
lds
mov
into
jne
inc
push
xchg
lret
daa
lds
rcrl
sub
aad
mov
xor
mov
xorl
adc
jecxz
or
mov
jbe
notl
jbe
sbb
mov
gs
inc
dec
addr16
mov
imul
adc
pop
fdiv
and
push
push
cmp
ss
out
loope
or
xor
ret
cmp
cwtl
jp
inc
fisubrl
testl
cmp
fs
inc
and
add
enter
or
in
push
sub
push
sub
rcrl
add
sub
adc
mov
out
sbbl
add
mov
fsubrs
mov
dec
fsubrl
ss
cmp
mov
cmp
and
aaa
lcall
jg
scas
xchg
adc
lock
mov
lods
lods
and
rcll
movsl
in
adc
jle
call
lcall
stc
pop
mov
clc
fildll
xor
data16
testb
jno
xchg
lret
push
xchg
mov
in
test
pop
or
cmpsb
aaa
daa
pop
out
push
call
shr
dec
cmp
jl
nop
nopl
jle
cmpsb
and
mov
out
repz
mov
enter
call
xchg
xorb
leave
push
push
and
pop
clc
fbstp
sti
xchg
js
inc
push
jnp
add
mov
dec
sub
jl
or
fsubrs
add
inc
xchg
jne
fs
mov
lea
push
test
pop
negb
lret
fwait
xor
mov
mov
rclb
jb
js
repz
sbb
push
lahf
xor
movups
pop
imul
and
dec
cmpb
lods
enter
lcall
test
cld
repz
sub
insl
clc
cmpsl
aaa
dec
es
ds
pop
xor
aam
pop
hlt
xor
jg
add
xchg
xchg
and
cmp
hlt
jmp
movb
rcl
push
rcr
push
test
pop
push
in
cmp
jle
jae
dec
lahf
fbld
inc
fsubrl
dec
ljmp
daa
pop
clc
jae
aas
jae
push
pop
ljmp
dec
and
or
cmp
dec
mov
mov
ret
xor
dec
add
outsb
loop
pop
rcll
xchg
add
push
adc
sbbl
idivl
scas
mov
jle
pusha
mov
insl
clc
inc
add
adc
mov
in
jecxz
xchg
pusha
pop
jae
inc
or
mov
gs
pusha
pop
xlat
aaa
adc
aam
incb
cmpsl
adc
push
mov
loopne
mov
inc
shr
push
jnp
or
jg
xchg
sub
testb
and
xchg
cmpsb
daa
add
popa
pop
inc
mov
mov
ss
shlb
js
mov
pop
cmpsl
je
xchg
mov
out
and
imul
or
or
jmp
shrl
add
xchg
mov
cltd
sti
aaa
mov
push
fistpl
lret
jge
pop
mov
inc
mov
xchg
subb
icebp
cli
test
loopne
add
std
shrl
int3
in
xlat
dec
push
mov
mov
pop
mov
dec
xor
in
sbb
dec
sbb
test
mulb
adc
inc
jo
imul
dec
mov
lea
jo
mov
and
fs
mov
movsb
add
out
add
fstps
pop
add
repz
pushw
js
insl
pop
movsl
inc
fcoml
data16
sarb
mov
shl
insl
popl
mov
inc
movsb
cmpsl
push
fldl
mov
cld
jnp
adc
inc
imul
sti
out
push
lcall
xchg
mov
sbb
ja
xor
je
test
pop
test
fwait
notb
bswap
sahf
and
adc
adc
insb
aas
dec
imul
or
adc
out
sbb
pop
cmp
adc
cmp
mov
cld
test
jle
out
and
push
adc
aam
mov
outsb
imul
shrl
imul
mov
icebp
mov
imul
test
lea
inc
add
out
int3
rcll
loop
xor
xor
repz
cmp
daa
mov
or
push
shrl
ds
outsl
arpl
sbb
inc
in
add
and
xor
pop
inc
jmp
cmp
out
mov
cld
jl
test
jno
in
into
int
pop
outsl
mov
pusha
dec
cmpsb
mov
add
out
loope
push
dec
pop
sub
or
aaa
add
sub
call
pop
daa
movb
orb
cs
mov
dec
enter
rcl
popf
sbb
cmpsl
fisubl
inc
push
jns
inc
mov
stos
in
adc
jl
push
push
stos
or
aaa
mov
mov
or
mov
cwtl
cmpsl
ret
adc
inc
fs
push
mov
test
xchg
test
in
lods
fucomi
cmc
jne
sub
pop
adc
inc
stos
in
inc
pop
mov
jle
andb
push
adc
imul
popa
push
push
stos
daa
repnz
push
cld
test
movsl
mov
push
cmpsl
xor
jp
out
cs
and
out
xchg
inc
das
jns
mov
sbb
mov
xchg
mov
or
fdivs
sti
movsb
sub
shl
xchg
andb
daa
sti
dec
push
ss
sub
ljmp
das
lds
filds
inc
mov
lods
fstpl
es
lret
inc
inc
lods
and
mov
mov
jge
xor
cmp
push
out
mov
adc
ds
mov
daa
jl
bound
cltd
loopne
lock
dec
cmpsl
and
sub
jge
or
pop
mov
aas
clc
cmp
push
cmp
push
or
xor
jno
fnclex
in
daa
lcall
adc
ja
push
push
and
sbb
mov
mov
push
sub
enter
jbe
movsl
pop
pop
xchg
call
pop
jmp
lret
lock
fcoms
dec
mov
sbb
or
jae
push
mov
cli
mov
jle
push
push
jb
mov
and
lds
and
cld
pop
cmpsl
pop
inc
rcl
mov
mov
sub
mov
daa
sahf
sbb
sahf
mov
xor
arpl
sub
in
xor
leave
fistpl
daa
add
jge
mov
add
scas
fists
xor
adc
pop
icebp
stos
arpl
mov
xchg
ljmp
xor
lcall
movsl
pop
cli
xor
adc
pop
aad
arpl
adc
leave
jne
sti
jl
shrb
xchg
jmp
pop
pop
iret
pushf
daa
ss
push
mov
mov
mov
xor
jns
inc
es
jge
call
das
xchg
ja
jmp
mov
leave
call
mov
fsubs
in
out
enter
push
jbe
jl
test
scas
popa
jns
shrl
loop
cmp
jbe
incb
lahf
out
pop
fldl
xchg
icebp
mov
movsb
jo
imul
call
dec
out
hlt
dec
inc
cmpsb
hlt
cmc
hlt
mov
inc
sahf
cmp
dec
daa
or
andl
and
xor
loope
cmpsb
lds
je
dec
mov
std
xlat
hlt
cs
ficomps
xchg
mov
sub
and
jo
mov
aaa
pop
xor
es
pop
xchg
sbb
jp
push
inc
sbb
sahf
shll
stos
sbb
inc
sub
xchg
and
xor
push
loope
cmp
scas
pop
sti
popa
mov
aad
test
idiv
xchg
ret
in
ret
out
dec
xor
outsl
es
out
ret
aad
cmpsl
sub
lods
push
lret
jb
div
lret
ret
call
or
pushf
add
cmp
pop
fsts
mov
cs
insb
in
cwtl
pop
movsl
push
scas
sbb
imul
pop
aaa
fnsave
insb
and
popa
and
test
jnp
push
iret
scas
and
add
popf
ja
stos
arpl
rcrb
adc
lods
leave
push
incb
sub
stos
cmp
xchg
icebp
hlt
push
movsl
out
cmpsl
pop
mov
pop
dec
pop
xor
push
jae
sub
shrb
loopne
fcmove
call
fisubl
or
cltd
and
push
std
xchg
sbb
leave
dec
mov
imul
mov
push
scas
mov
loopne
xchg
dec
in
inc
stc
popf
cmpb
daa
sbb
mov
pop
popf
mov
lods
push
sahf
push
stos
mov
mov
negl
arpl
pop
adc
adc
xchg
xchg
jbe
sti
js
push
in
sbb
cmp
insb
aam
rcr
jbe
mov
jae
pop
cmpsl
data16
sti
adc
pop
out
popf
rcrb
gs
mov
mov
dec
and
lea
aam
push
sbb
sbb
add
scas
pushf
jo
xchg
cld
ret
sbb
jl
mov
aaa
aad
cmp
xor
test
in
cmc
shll
psubusw
std
push
jle
inc
adc
adc
aas
ja
andb
cmp
push
dec
mov
enter
mov
cltd
dec
scas
jp
js
dec
stos
repnz
pop
and
cmp
es
insl
mov
int3
lods
outsl
gs
mov
adc
sbb
fiadds
mov
pop
std
and
jnp
xchg
out
ret
hlt
inc
jmp
imul
and
or
mov
xchg
sarl
mov
cmp
cmp
mov
int
jae
test
popf
daa
inc
aam
mov
pop
mov
fimuls
sbb
adc
mov
fsub
sub
inc
icebp
movsl
cmpsl
stos
orb
aaa
fnstcw
push
movups
fdivp
pop
jmp
sub
jne
cld
in
mov
jl
cmpsl
xlat
mov
sbb
jb
or
mov
enter
imul
sub
or
lods
cmp
sub
sbb
dec
dec
sbb
jle
xchg
inc
mov
mov
mov
add
ret
sbb
rcrb
fwait
inc
sub
pusha
in
sarb
les
bound
rcrb
aam
in
xchg
cli
dec
cmp
pop
stc
push
add
adc
xchg
js
in
popl
out
inc
mov
scas
outsb
xor
insl
dec
xchg
es
inc
les
mov
mov
and
imul
add
inc
scas
call
aam
jne
pop
insl
ds
mov
adcl
cmp
cwtl
mov
rcrl
addr16
add
sti
das
lahf
testl
test
fwait
test
repnz
and
add
pop
jp
fidivrs
cld
popa
xor
ret
cld
pop
out
hlt
not
fmull
inc
jl
fwait
jbe
lret
xor
sub
or
fwait
lahf
jnp
or
adc
add
test
rorb
push
lcall
gs
not
adc
call
pop
dec
cmpsl
cmp
repnz
call
push
sti
sub
icebp
stc
push
mov
push
mov
dec
mov
aas
insl
add
loopne
mov
xor
sub
and
mov
mov
clc
out
loope
inc
rcl
push
jae
dec
pop
mov
shrb
nop
jb
lods
inc
ret
fnstsw
cmpsb
mov
repz
js
mov
jb
leave
aad
xlat
xchg
shlb
imul
mov
mov
push
pop
insb
xor
les
cmp
scas
xchg
xchg
mov
sbb
mov
lods
xchg
jnp
pop
sub
sbb
xor
push
jmp
mov
arpl
fidivs
pushl
or
test
mov
nop
sahf
sbb
nop
lret
loop
ja
in
imul
mov
dec
test
adc
mov
mov
fidivrl
add
mov
in
xor
cmpsl
add
inc
fistl
xor
xchg
xorb
cmc
inc
dec
sub
imul
fbstp
xchg
mov
popf
test
adc
and
out
xchg
mov
filds
std
add
push
lea
inc
xor
adc
mov
push
jmp
loopne
pop
fwait
sub
xchg
inc
lods
add
push
and
xchg
lods
add
push
xchg
mov
jne
test
jnp
packuswb
jne
xchg
stc
popf
dec
xchg
test
mov
cmp
mov
pop
scas
das
bound
mov
ffree
mov
mov
movsb
stos
and
mov
pop
mov
fimuls
loop
jne
shrl
xchg
sub
or
in
rolb
cltd
mov
push
dec
imul
rdtsc
lds
add
mov
mov
mov
xor
jl
es
rcr
rolb
dec
fbstp
and
dec
push
sbbb
lds
pop
or
bound
test
sub
pop
cmp
jg
arpl
dec
dec
adc
xor
xor
sub
mov
out
dec
xchg
dec
add
cmp
dec
popf
sub
mov
push
push
sbb
aad
stos
add
jg
sub
jbe
cltd
cmc
aas
mov
jge
sbb
mov
mov
cli
fimuls
fidivrl
push
lret
push
call
fmull
mov
mov
cbtw
ja
incl
push
fwait
ljmp
ret
sub
dec
jbe
es
fwait
and
pop
jge
and
lcall
movsb
in
pushf
push
and
and
movsb
pop
inc
inc
xchg
clc
sub
pop
sbb
test
testl
inc
push
dec
fs
lretw
push
mov
lock
dec
mov
pop
sub
dec
mov
jge
sub
or
xor
sbb
mov
pop
divl
xchg
testb
mov
inc
call
pop
mov
mov
ret
jbe
jecxz
cmp
fxtract
stc
pop
insl
sahf
xchg
scas
mov
add
hlt
stos
jne
add
fdiv
pusha
aas
das
cmp
jmp
mov
fwait
sahf
sbb
pop
in
inc
nop
call
sbb
mov
inc
les
sbb
xor
push
mov
jmp
xchg
cmp
sub
call
add
push
jle
sahf
cmp
jbe
fisttpll
insb
aaa
incb
das
pop
cmc
mov
call
dec
aam
lea
mov
and
push
in
xor
sbb
cmpl
pop
mov
add
pop
pop
lahf
add
and
das
inc
xchg
mov
fnsave
fisttpll
dec
mov
lret
xchg
sub
subb
fldenv
push
push
movsb
popa
clc
sar
lret
icebp
iret
mov
popa
sbb
adc
dec
loop
fnsave
add
push
mov
fimuls
add
data16
jmp
mov
push
shll
add
loopne
and
testl
sub
or
loope,pt
mov
cmp
rcll
pop
arpl
xchg
ss
xchg
aad
dec
mov
mov
cmp
add
scas
jno
rorl
mov
sbb
jno
adc
jbe
push
push
insl
xor
xchg
daa
ret
inc
gs
in
scas
lret
xor
push
jge
into
dec
mov
out
ret
pusha
imul
jo
dec
add
inc
rorb
ret
leave
call
or
pop
cmp
xlat
loope
or
sbb
rcrb
cmpb
push
pushl
ret
add
or
push
xor
mov
lds
shll
add
nop
adc
and
in
sbb
push
fldenv
nop
fs
xchg
mov
push
xorb
sbb
dec
xchg
faddl
mov
or
xlat
jle
test
cltd
push
iret
movsl
sbb
shrl
mov
sub
leave
flds
cmp
push
pop
sbb
hlt
mov
add
mov
pop
fstpt
inc
stos
ficompl
daa
cmp
jl
push
pop
jno
add
sarb
jg
out
pop
insl
jl
addl
jns
aas
stos
enter
mov
ret
sub
pop
xchg
pusha
test
push
mov
dec
out
inc
cmp
mov
mov
xor
fidivl
push
push
sub
inc
loope
mov
push
add
dec
shr
add
mov
mov
inc
in
xor
mov
fucom
stos
inc
mov
push
xchg
inc
ret
hlt
xchg
dec
jge
mov
shl
jp
lods
jae
shll
jae
mull
std
lock
jle
ja
push
mov
cmpsb
in
mov
xchg
mov
fwait
xchg
cmp
sub
lahf
adc
or
jmp
cli
pushf
fsubl
shlb
in
mov
imul
int
cmc
xor
pop
xor
stos
imul
cmp
pop
mov
xor
adc
push
push
and
int
and
mov
dec
out
mov
cmp
xchg
out
pop
out
sbb
scas
pop
in
mov
clc
inc
pop
lcall
mov
sbb
out
mov
daa
mov
or
rorl
mov
outsb
mov
inc
int3
imul
pop
inc
mov
xor
das
popa
jl
incb
and
cs
cmp
xor
mul
jle
sub
sbbb
fs
pop
adc
jmp
or
cmpsl
add
adc
ss
into
inc
movsb
or
cmpsl
mov
jo
sbb
pop
xchg
mov
rorb
fildll
jnp
add
movsb
jno
rcrl
xor
mov
rclb
inc
jmp
or
outsl
mov
xor
inc
imul
in
cld
inc
xchg
inc
inc
xor
out
cmp
add
aaa
fwait
adc
hlt
or
in
cmp
dec
popa
insl
ds
fnstenv
sub
push
xor
xchg
cld
dec
repz
es
mov
jae
js
out
xor
jo
inc
aad
out
dec
jmp
cmp
lea
jne
clc
ficomps
add
add
sub
mov
jns
mov
mov
jnp
out
movsl
jbe
xchg
dec
stos
adc
xor
ss
out
pop
xchg
das
neg
es
dec
cmc
lgs
sbb
cmp
jns
daa
in
jo
inc
movsb
mov
mov
jg
add
lock
icebp
inc
data16
into
mov
sahf
in
lods
orl
into
clc
ret
enter
and
ds
mov
mov
push
pushf
rcrl
test
mov
lods
das
ret
or
loopne
sti
sub
arpl
add
adc
cmp
mov
mov
mov
pop
das
jecxz
enter
mov
std
dec
adc
jmp
xchg
cmp
rorb
adc
clc
data16
dec
cld
sbb
cmp
cmp
aam
dec
imul
out
mov
xor
in
lds
ss
ficoms
or
add
jne
and
jp
jmp
sti
faddl
fiadds
jns
or
mov
ret
sub
jb
pop
cmp
pop
rorl
or
mov
adc
test
push
test
movsl
arpl
pop
mov
adc
jecxz
jl
sbb
dec
push
jnp
subb
lds
daa
adc
xor
aad
sti
ret
pop
or
cs
popa
repnz
aam
add
sbb
mov
loop
cmp
lds
pop
cmp
adc
dec
in
mov
aaa
mov
and
jns
int
negl
mov
testl
mov
sbb
pop
mov
push
cmp
mov
inc
loope
aad
and
popf
or
addr16
nop
loope
xchg
mov
pop
and
fcomps
pop
and
loope
jb
ljmp
push
pop
test
inc
ret
mov
xchg
xlat
mov
pop
addr16
jecxz
mov
mov
insb
pop
xchg
shl
dec
mov
mov
or
pop
jge
cmp
fucomp
push
subps
add
and
faddl
lret
sbb
mov
pushf
outsl
sbbl
pop
xor
inc
loope
hlt
sub
pop
adc
dec
cmp
sub
mov
cmc
int
lods
shl
outsb
xchg
pop
sbb
sub
pop
ds
pop
sub
filds
sahf
data16
xchg
and
push
ret
rol
insl
int
jg
pop
sbb
in
aam
dec
push
out
push
xor
mov
inc
clc
sahf
dec
andb
loop
setns
jns
pop
xor
xor
push
lods
jo
mov
leave
lret
hlt
les
jnp
mov
and
es
mov
mov
xchg
jo
daa
xlat
jno
sbb
stos
add
add
fnsave
mov
jno
inc
test
aam
pop
sbb
dec
popa
xor
adc
mov
mov
out
xchg
pop
hlt
sahf
gs
cmc
inc
pop
xchg
sbb
arpl
mov
sahf
int
fnstcw
xor
in
mov
cltd
cmp
fsubrs
loopne
jg
sbb
push
pop
jle
pop
mov
lahf
xor
pushf
pushf
ret
lods
sbb
and
sbb
lock
add
mov
add
pop
sbb
lahf
dec
inc
xlat
icebp
andl
jmp
fildl
mov
mov
mov
stc
out
js
and
jl
loope
filds
loopne
or
ficompl
push
int
fidivrl
xchg
js
popa
nop
mov
adc
sbb
adc
fwait
push
mov
das
jge
inc
daa
mov
jbe
inc
pop
mov
inc
push
push
mov
inc
ss
cmp
bnd
jb
test
push
push
fisubl
lds
cmp
dec
fstps
movsb
repnz
setne
ret
xor
pop
lahf
xor
ret
inc
mov
sub
push
shlb
stc
sbb
cmp
icebp
scas
fsts
mov
dec
and
shr
out
test
ss
call
push
aam
aas
adc
sbb
lcall
cmpsb
lret
jp
ror
flds
cmp
push
outsb
jp
cmp
xlat
insl
stc
rclb
or
inc
sbb
sub
shrb
mov
addb
sub
bsr
mov
mov
pusha
inc
jae
lea
xchg
and
das
xchg
xchg
and
dec
out
or
mov
xchg
fistpl
fucomi
jbe
stc
in
xlat
sets
ss
in
jne
insl
xchg
xchg
inc
sahf
dec
xchg
lods
lods
clc
dec
inc
fadds
push
hlt
gs
fmul
push
xchg
mov
mov
nop
cwtl
sbb
daa
fistl
aaa
notl
push
mov
cmp
fdivl
lock
mov
sahf
mov
push
add
iret
loope
fisubrs
pop
aad
cmc
mov
xchg
sarl
inc
test
pushf
inc
mov
mov
movsl
sub
jg
imul
nop
sbb
repnz
orl
xchg
pusha
jp
fsubrs
mov
sub
push
mov
pop
data16
lea
int3
mov
data16
mov
xchg
rolb
jo
jmp
add
in
jle
cwtl
pop
cmpb
sbb
lock
test
out
push
das
outsb
pop
lock
mov
jle
mov
pop
cld
mov
push
movsl
inc
sahf
pop
push
pop
paddb
xchg
mov
into
mov
adc
ljmp
mov
das
inc
jae
lods
inc
icebp
iret
cmpsl
mov
xor
cmp
push
into
inc
inc
leave
aaa
push
out
data16
xchg
inc
ljmp
sub
aas
sub
adc
sbb
out
aaa
call
add
pop
xchg
and
das
push
mov
and
jecxz
daa
adc
aaa
lods
jmp
cld
popf
popf
cmpsl
into
fstp
jo
or
mov
outsb
lret
lret
push
sarl
push
cltd
pop
mov
insb
push
mov
insl
addr16
fsubr
test
out
fadd
sti
mov
jbe
sbb
in
test
sub
push
imul
add
dec
push
js
mov
clc
inc
scas
sub
stos
pop
add
daa
mov
jne
jbe
mov
pop
fmull
pop
sub
sub
fnstcw
pop
or
cmp
pop
repnz
push
and
mov
cwtl
pop
daa
ret
mov
hlt
mov
xchg
mov
or
js
mov
xor
pop
pushf
ret
mov
add
mov
fstl
and
outsb
int
loope
insl
adc
stos
es
pop
jg
mov
push
cmc
xlat
or
cmpl
or
sub
jne
mov
or
stos
shrl
ds
xchg
out
icebp
js
aam
mov
or
adc
fldl
push
jb
mov
mov
add
out
subb
mov
ret
out
push
mov
xchg
push
and
lret
popa
js
cli
inc
ficoms
retw
outsl
insb
push
daa
inc
popa
cmp
cmp
data16
xor
pop
xor
in
int
aad
fdivr
jne
mov
add
add
mov
xor
das
repnz
add
andb
sub
fidivs
outsb
in
xor
sbbb
aam
lret
sub
ja
mov
imull
sarl
mov
cli
push
ljmp
inc
int3
pop
sti
je
lock
popa
xor
add
pop
cmp
dec
in
push
pop
mov
push
jno
es
aad
mov
cltd
rcr
mov
mov
push
push
out
inc
cmp
jmp
adc
lcall
mov
nop
xchg
clc
fdivs
jae
adc
xor
pop
mov
cmp
loope
and
in
lcall
jmp
push
mov
mov
fstpt
rcrb
jge
imul
jb
push
pop
jnp
nop
test
add
and
lea
ja
xor
enter
jne
subl
adc
and
jmp
jns
repz
in
int
push
repz
adc
inc
fwait
mov
inc
lret
xor
and
inc
xchg
imul
push
andl
dec
mov
inc
outsl
adc
in
test
fisubs
sub
fs
and
jg
inc
add
adc
push
imul
gs
lcall
push
pop
pop
jae
jbe
fwait
mov
ror
stc
jnp
and
push
push
xchg
es
pop
aad
cmc
mov
testb
shl
in
fs
ss
push
imul
out
sbb
mov
mov
js
cmp
mov
sar
xchg
clc
jne
xor
das
icebp
ss
xchg
fs
clc
adc
adc
inc
das
subl
jp
movq
jp
adc
mov
xchg
popf
loope
aaa
pop
test
or
mov
jb
jno
jle
or
out
addr16
pusha
xchg
js
movsb
lcall
mov
subl
stos
or
sbb
loope
sub
adcl
adc
int3
int
pop
lret
lahf
xor
sahf
push
and
jp
ret
ret
sub
and
sahf
inc
cmp
sbb
mov
mov
dec
mov
nop
push
xchg
cs
loopne
add
push
sub
xchg
inc
dec
adc
adc
xor
cs
push
fwait
into
enter
push
lock
addr16
daa
hlt
ret
add
fwait
scas
aaa
and
sti
jmp
and
sub
mov
fisubs
or
loope
lret
xchg
or
nop
incl
mov
add
std
loop
ret
mov
or
stc
mov
mov
xor
mov
push
shlb
add
mov
pcmpeqb
rol
add
rol
pop
sbb
and
or
divl
and
add
in
push
rol
push
data16
push
mov
sub
jecxz
out
or
jae
aam
jge
mov
jg
and
insl
jl
mov
sbbl
test
cmp
je
mov
xor
dec
and
inc
mov
xor
jns
jne
addr16
orl
mov
in
in
and
add
mov
adc
xchg
cmp
repnz
mov
jp
pop
aam
pop
mov
in
sbb
xchg
pop
fs
sar
dec
sub
std
mov
lea
mov
push
ds
repnz
jns
movb
xor
cltd
cmc
xor
mov
addr16
insl
cmc
push
aam
cmp
fadds
movsl
aad
mov
mov
xchg
jno
sbb
fdivp
mov
mov
xor
and
cld
cli
or
mov
push
int
add
in
gs
test
in
in
adc
mov
ljmp
shll
mov
in
and
xlat
fnstsw
in
pop
pop
out
daa
je
sbb
push
rol
lea
or
mov
mov
inc
insb
daa
aaa
dec
pop
enter
adc
test
imul
lods
adc
mov
push
adc
in
and
cmp
repnz
sub
mov
add
sbb
jnp
outsb
inc
push
ss
insl
add
lods
mov
test
dec
aam
das
xor
sbbl
sub
fstpt
xchg
or
jno
sbbb
loop
or
mov
test
sub
js
jge,pt
enter
stc
fucomi
andl
pop
jo
cmp
push
mov
cltd
jmp
ret
add
inc
mov
sbb
fdivr
pushf
mov
adc
rorb
fstps
test
divl
not
sbb
jo
gs
xchg
ss
and
pop
xor
xchg
ret
test
push
insl
ja
out
data16
xchg
pop
or
iret
push
pop
scas
leave
test
rcrl
dec
test
mov
aam
aam
cmpsl
adc
addr16
xchg
add
mov
xchg
imul
das
jg
pop
lahf
adcl
clc
jg
out
rcrl
mov
xchg
and
lret
inc
fwait
in
movsb
push
test
fidivs
inc
lods
push
fs
test
imul
mov
ret
fisubl
repz
les
fnstsw
aad
sub
xchg
repz
or
cmp
sbb
mov
es
int3
dec
xor
and
inc
fmull
mov
aas
out
arpl
inc
loope
mov
fs
in
push
cltd
mov
xor
sub
ficomps
or
loope
in
or
das
dec
ss
xlat
stos
adc
adc
pop
loope
test
add
shrl
jbe
shrl
rclb
fmull
test
test
xchg
ss
mov
adc
sub
add
jno
into
cmpsl
notb
leave
flds
sub
and
push
fs
xchg
mov
leave
and
cltd
movsb
lods
ljmp
shrl
pop
xchg
cmp
enter
lcall
xlat
jae
std
clc
dec
inc
fidivrs
fldenv
btr
push
add
outsl
cmp
dec
outsl
pop
outsb
leave
in
pop
shlb
ljmp
push
fwait
mov
push
adc
mov
push
jne
or
inc
adc
ljmp
fiaddl
loop
shlb
lahf
call
sbb
or
sub
imul
movsl
mov
enter
aam
pop
testb
xor
mov
clc
xchg
stos
sahf
jmp
xor
test
jbe
pop
jo
lods
test
push
xchg
insb
ss
and
jb
xchg
scas
insl
cmp
ret
pop
in
les
dec
dec
jb
lcall
sub
outsb
sub
adc
in
movsb
jne
std
into
nop
out
cld
shr
fnsetpm(287
dec
mov
cmp
cmp
inc
pop
or
cmp
repnz
std
imul
jno
arpl
shrb
imul
fcmovnu
push
xor
xchg
mov
inc
xchg
sub
fucomi
add
ja
inc
sub
push
movsb
sti
add
pop
test
lret
jns
jns
and
loope
test
ja
xchg
cmpsb
mov
sub
loopne
rclb
xor
scas
loope,pt
sti
pop
dec
adc
dec
pop
test
jle
cmp
pop
jmp
or
mov
push
scas
std
or
jbe
roll
or
sub
call
mov
outsl
sahf
fidivs
cmp
push
movsb
jmp
cmp
add
ror
repnz
jecxz,pn
popa
icebp
cmp
jae
cwtl
mov
pushf
lcall
ja
repnz
lock
xor
xorl
mov
mov
ret
push
ja
adc
or
hlt
data16
mov
cltd
addr16
int
inc
inc
sbb
stos
jmp
mov
cmp
inc
pop
xor
dec
test
cwtl
mov
sub
lds
in
lods
push
push
sahf
lret
add
loope
adc
fidivs
or
cwtl
test
stos
and
je
mov
mov
jae
dec
jecxz
cmp
adc
inc
xchg
push
scas
pop
fidivrl
mov
sbb
lods
aam
mov
xor
cmp
in
sahf
jno
push
arpl
iret
xchg
shrb
popf
pop
inc
fbld
xor
jbe
push
std
inc
std
ljmp
fildll
pop
scas
push
repz
dec
das
xor
mov
movsb
jg
push
je
and
jg
sbb
xchg
xchg
add
push
cmpsb
and
rclb
jle
add
cmpsb
mov
pop
xchg
dec
mov
outsb
jle
pushf
pusha
mov
sub
xchg
mov
xor
testl
nop
mov
cmp
dec
pop
xor
add
mov
lods
push
xchg
out
aam
and
movsb
jecxz
lret
rcl
mov
fcomps
cli
loopne
imul
and
dec
in
inc
jg
add
aaa
mov
imul
in
lods
mov
pop
rclb
mov
sahf
xor
inc
and
dec
cmp
lea
sarl
xchg
dec
jne
fsubl
push
pushf
jle
movsl
test
mov
aaa
or
cli
pop
or
popf
fs
into
inc
iret
adc
mov
mov
xlat
mov
jo
push
pop
pop
adc
shl
out
icebp
mov
stos
xor
push
sub
xor
lds
mov
inc
jne
je
data16
and
ds
clc
cmovle
jg
or
sbb
push
icebp
icebp
scas
mov
jmp
or
cmp
cmp
mov
push
mov
add
sub
aas
mov
dec
push
pop
pop
dec
add
mov
dec
sti
mov
int
mov
icebp
sub
push
fwait
in
push
mov
cmpsl
adc
and
leave
push
fcompl
mov
push
xor
and
pop
fsubrs
xor
sbbb
or
inc
adc
cmpl
in
aam
icebp
pop
out
sbbb
mov
outsb
mov
dec
mov
xchg
jg
out
stos
lret
push
mov
push
fadd
int3
neg
jae
stc
out
jne
jb
lods
adc
or
inc
sub
in
adc
pop
xlat
xor
mov
or
jle
shrl
cmpsl
push
mov
inc
clc
call
and
fdivrl
in
std
mov
mov
mov
jmp
daa
xor
and
and
mov
je
pop
and
xchg
arpl
xchg
lds
add
add
inc
xlat
dec
scas
inc
and
xchg
mov
cmpsb
test
nop
xchg
adc
add
push
mov
mov
xchg
adc
data16
dec
mov
imul
insb
je
sahf
sub
enter
inc
pushf
iret
dec
repnz
inc
push
xchg
jmp
inc
rorl
out
inc
idivl
push
add
ret
call
ret
fldl
xlat
lcall
out
icebp
or
test
scas
cmp
mov
fisubrs
scas
mov
les
les
adc
dec
push
iret
add
jle
adc
mov
xchg
aad
repnz
stc
mov
push
in
sti
mov
jae
shlb
push
jl
dec
pop
add
sub
repnz
push
out
sbb
aaa
jbe
imul
out
sarl
lods
jb
cmc
add
daa
and
xor
stc
je
icebp
call
dec
popf
push
fstps
fdivp
idivb
rcrl
call
jecxz
out
stos
inc
ss
dec
sub
mov
inc
repz
add
inc
je
lock
jg
fbld
mov
sbb
inc
mov
hlt
mov
push
call
subb
xchg
mov
lcall
fisubrl
ljmp
scas
hlt
aaa
push
mov
iret
xor
and
loop
xchg
sub
cwtl
push
mov
inc
lcall
and
jle
imul
std
pop
add
and
sub
pop
sbb
ror
cmp
jecxz
sbb
cwtl
jae
js
mov
jnp
cli
push
cmp
movsl
loope
clc
lcall
int
inc
fldcw
pusha
stos
fists
push
lods
fisubrl
jns
insl
inc
jg
ja
jle
sub
push
divb
cmp
xchg
or
pop
out
mov
or
dec
jg
mov
or
push
and
sub
pushf
aaa
daa
outsl
std
fnsave
inc
out
pop
sub
rolb
adc
gs
fdivl
jmp
mov
aam
inc
xchg
insb
shr
sti
xchg
add
cmp
dec
fadds
add
mov
mov
insl
cmpl
in
push
mov
sub
nop
sarl
mov
pop
adc
mulb
movsb
dec
and
out
rorb
mov
ds
repnz
or
clc
push
loopne
jae
mov
adc
pusha
ss
or
out
jg
xchg
add
cmp
sbbl
scas
xchg
sub
clc
mov
ret
jle
sbb
mov
jo
add
lret
testl
lret
push
sarl
push
add
std
je
sti
ret
test
loope
lret
mov
jmp
xchg
pop
jo
aad
and
les
mov
jnp
sbbl
fwait
in
andps
mov
and
xlat
outsl
cmp
mov
and
loop
xlat
jae
mov
sbb
jmp
aad
and
into
pop
push
lods
mov
das
inc
mov
mov
jl
sub
rep
cmpb
add
xchg
into
pop
sub
add
scas
cltd
sub
gs
es
mov
stos
jmp
decb
loop
repz
bound
push
loopne
and
add
push
mov
test
jmp
movsb
jb
push
aaa
into
nop
popf
adc
and
push
sub
arpl
mov
or
jno
push
jmp
ret
pop
insl
mov
mov
cmpsb
loope
cs
add
add
lea
cmp
pop
jb
mull
call
sub
inc
xlat
xchg
mov
fs
fildll
dec
leavew
repz
dec
loopne
mov
dec
data16
cli
mov
adc
lods
adcb
test
xchg
sbb
jmp
mov
popa
sbb
push
sti
cmp
and
mov
dec
outsb
pop
add
lcall
sbb
addw
mov
or
ljmp
push
jbe
jecxz
out
sbbl
int
jg
xchg
shl
repz
dec
jne
aas
xchg
scas
cmp
pop
dec
and
icebp
sbbb
mulb
scas
daa
or
movsb
inc
fsubrp
inc
pop
or
jno
cmp
ret
stc
nop
jecxz
insb
mov
mov
adcb
fcomps
push
or
cltd
xchg
dec
pop
xor
inc
loop
nop
daa
and
enter
and
daa
scas
outsl
xor
std
inc
pop
stos
pop
inc
push
xchg
jl
loopne
bound
or
std
stos
push
or
or
sub
fsts
cmpsb
cwtl
das
fsubs
push
jae
sub
dec
jecxz
pop
stc
pusha
jecxz
arpl
xchg
stos
pop
les
cmc
jns
scas
mov
lods
ret
in
cmp
mov
stc
and
cmp
addr16
cltd
dec
sbb
idivb
mov
clc
push
push
sub
xchg
gs
cli
les
fisubrs
xchg
pushf
aad
rcrb
in
andl
fists
mov
data16
xchg
adcb
push
jnp
xor
movsl
inc
push
xlat
lcall
enter
sbb
jl
dec
mov
cmp
dec
mov
push
and
and
js
das
cmpsl
jecxz
icebp
in
adc
lret
dec
add
jns
lods
jg
lcall
decl
mov
lret
icebp
push
inc
out
inc
andl
in
jnp
and
mov
or
pop
pop
fstps
sub
lcall
jnp
push
xchg
xchg
or
int3
das
popl
cmpl
leave
bound
je
add
lock
test
nop
cmc
loop
call
in
push
pop
rorb
pop
movsl
mov
std
lock
test
add
inc
inc
clc
in
js
ljmp
popw
push
and
mov
lret
loope
pushf
push
jmp
icebp
xchg
jo
notl
loope
pop
outsl
jno
mov
fimull
mov
dec
pop
sub
dec
cli
loopew
rorl
scas
push
push
loop
aas
mov
fadds
xchg
push
ljmp
lods
pop
and
inc
fldcw
shrb
inc
fistl
insb
stos
sahf
xor
sub
ds
jg
sub
lds
cli
inc
or
es
inc
xchg
xchg
xor
aas
fwait
bnd
mov
pop
ss
shlb
adc
nop
shr
mov
je
imul
aad
cmp
push
repz
adc
std
andb
mov
xor
mov
dec
xchg
jne
sahf
fdivr
xchg
out
or
and
rorb
lret
mov
std
sub
push
xlat
fucomip
mov
arpl
mov
pushf
push
ljmp
call
je
mov
inc
or
fwait
push
add
mov
mov
xor
movsb
js
stos
iret
cmpsb
pop
adc
cwtl
stos
gs
mov
inc
test
into
fistpl
push
out
fucomp
ss
shr
add
inc
adcb
shll
push
lret
and
data16
mov
cmp
jnp
mov
or
add
mov
cmc
mov
push
fisttpl
add
cmp
stos
xchg
mov
call
inc
mov
push
xorb
loop
stos
add
cltd
mov
ljmp
xchg
popa
out
push
js
mov
test
les
fwait
pusha
and
cli
cwtl
sub
repnz
sbb
out
idivb
add
jle
mov
mov
xchg
neg
int3
ss
and
lret
pusha
das
jp
fsubrl
xor
clc
sbb
add
cmpsl
pop
and
mov
jns
aam
mov
cmp
int3
mov
rorb
int
fdivs
jl
push
and
pop
in
sbbb
lods
add
mov
das
adc
pop
notb
in
and
jmp
imul
nop
mov
mov
jns
sti
sahf
out
and
and
and
inc
ja
mov
jne
jo
push
sbb
mov
imul
push
xchg
lods
lds
adcl
fcoml
bound
lods
fiadds
aam
mov
jbe
loope
jl
int3
out
fs
inc
movsl
aaa
rcr
jmp
pop
cmp
push
adc
cmpsb
rcrl
jg
sub
xchg
xor
stos
outsl
cmp
lcall
das
sub
loopne
xor
mov
xor
mov
jo
sarb
mov
stc
out
mov
xor
test
in
xor
push
or
lret
sub
call
hlt
sbb
jle
cmpb
dec
daa
movsb
cmc
push
xchg
lea
mov
push
stos
sub
pop
stos
jmp
jne
pop
cmpsl
push
jae
mov
mov
mov
fcompl
aad
loope
xchg
ds
xor
push
popf
das
rcrl
push
jne
stc
and
es
andl
movsl
enter
push
mov
negb
jnp
mov
sbb
imul
repz
test
xchg
cltd
or
lea
stos
mov
imul
test
test
fwait
and
dec
push
cmc
push
loopew
lock
loope
push
adc
inc
fprem1
cmc
xchg
push
mov
pop
rcr
and
push
daa
stos
std
ss
xor
and
inc
jns
push
scas
lds
out
mov
dec
loope
aas
mov
xchg
pushf
lea
pop
mov
sahf
loope
inc
nop
aad
add
mov
and
rsqrtps
mov
cltd
jb
adc
mov
cwtl
shrb
jno
das
int3
test
ljmp
movsb
mov
out
roll
fistps
xor
push
or
adc
sbb
pushf
mov
push
cwtl
pop
scas
negl
pusha
add
pop
xchg
xchg
pop
xor
mov
xor
mov
or
in
mov
inc
data16
push
sahf
inc
push
mov
inc
cli
mov
jne
xchg
cmp
xchg
iret
mov
pop
add
and
push
xor
in
jns
push
mov
or
xchg
aas
add
notl
push
dec
aam
inc
dec
mov
test
roll
or
jge
ss
mov
pusha
icebp
in
push
jae
imull
int
aam
xor
fmul
xor
cld
insl
and
jnp
stc
and
xor
cmovae
aam
ds
or
xchg
jno
jge
push
adc
das
jle
fisubl
sbb
cmp
mov
jnp
push
jo
add
sub
insl
aam
mov
fnstcw
pusha
pop
mov
and
or
adc
sub
xchg
fsts
stos
xorb
jne
push
jg
pshufw
jmp
sub
add
xor
testb
dec
int
or
mov
aam
xchg
add
insb
mov
scas
dec
leave
add
stos
fbld
pop
pop
inc
int3
std
pop
add
popf
cld
xorl
pop
mov
inc
hlt
orl
popl
scas
fdivrl
sbb
ja
sbb
lret
test
lret
mov
mov
test
fwait
dec
outsl
jl
dec
scas
jno
lods
call
loopne
fsubl
mov
rorb
insb
popa
xchg
sbb
mov
xchg
mov
out
xchg
cmp
pop
hlt
jmp
xor
dec
dec
dec
jge
mov
push
jp
rcrb
pop
out
xchg
fs
cmp
imul
cmp
into
subb
jmp
adc
jns
in
jns
pop
mov
lds
add
adc
mov
lods
mov
sbbl
mov
pop
cmc
jno
mov
push
sahf
sub
movsb
add
scas
sbb
dec
xor
clc
rcl
fidivl
mov
jge
rcll
pusha
pop
ret
testl
jnp
mov
cmpsl
add
mov
push
push
icebp
push
push
out
cmpsb
add
xor
pop
and
rcl
movsb
cwtl
in
dec
fildll
mov
mov
imulb
outsl
repz
mov
mov
gs
sbb
adc
sub
pushf
daa
mov
xchg
aas
jo
repnz
imulb
sbb
push
mov
cltd
sub
addr16
bound
or
push
lods
pop
cltd
out
push
cmc
xor
mov
pop
cmp
aaa
ret
mov
mov
dec
push
gs
fwait
arpl
sarb
test
add
push
cli
cmp
fs
cwtl
xchg
hlt
inc
jg
mov
out
loopne
iret
jnp
jo
imul
fnstenv
pop
cs
out
test
fimuls
pusha
mov
sub
or
repz
sub
dec
fxsave
push
mov
jae
jnp
inc
push
fiaddl
push
xchg
jp
cmpsl
push
jno
mov
ds
adc
mov
lahf
or
cmp
jp
xchg
and
sbb
fadds
mov
jns
leave
sbb
sahf
loop
sbb
out
xchg
adc
xchg
mov
in
shl
adc
stos
inc
fstpl
mov
jmp
jg
enter
rolb
adc
ja
lods
pushf
addb
xchg
push
leave
int
mov
lods
inc
mov
mov
insl
push
inc
jnp
das
fwait
in
movsl
inc
popa
fistpll
mov
in
inc
mov
movsl
xchg
es
in
into
push
dec
mov
or
repz
je
inc
repz
xor
outsb
test
int3
mov
cli
loop
cmpsb
lcall
and
mov
cmp
push
jl
push
sarl
roll
pop
jl
inc
push
mov
gs
and
aad
inc
movb
insb
xor
xor
mov
sbb
gs
xlat
popa
ss
inc
inc
out
ss
and
jge
out
fnsave
test
movsb
lods
sbb
push
fnstenv
jno
bound
js
subb
pop
or
cltd
cli
shr
add
mov
pop
push
stos
mov
xlat
cmp
mov
stos
inc
cmp
sbb
push
add
xor
cmp
lret
es
push
add
in
adc
int3
iret
push
sti
push
jmp
mov
lods
out
mov
mov
lret
push
inc
sub
mov
imul
and
adc
lods
add
jo
shll
add
push
push
imul
mov
cmpsb
mov
int
jb
repnz
sbb
mov
xchg
in
out
shlb
dec
idivl
mov
sub
stos
inc
pop
and
arpl
jl
enter
sbb
bound
jns
pop
dec
fisttps
out
mov
fcmovbe
insl
add
cmp
stc
cmpsl
push
psllw
bnd
adc
lahf
out
mov
in
js
mov
fisttps
aad
lret
scas
inc
mov
nop
xor
shrb
into
pop
cmp
push
fcmovnbe
cltd
testl
cmp
out
insl
xorb
test
pop
pop
jne
mov
mov
add
xor
cmp
jnp
inc
and
push
stc
pop
push
dec
ljmp
gs
lock
and
pop
mov
ljmp
stc
sub
aas
rcl
jns
packuswb
je
push
mov
jnp
or
cmp
cs
lcall
or
ja
cltd
push
push
nop
cmp
or
sub
movsb
inc
mov
shlb
mov
mov
mov
mov
mov
daa
and
out
pop
notb
jg
ret
repz
dec
les
inc
mov
clc
sbb
adc
test
repnz
inc
popf
sarl
fisttpll
fistpl
adc
mov
pop
int3
xor
gs
pop
ss
leave
sbb
adc
mov
aaa
jmp
daa
loop
jmp
dec
insb
scas
push
orb
cmpsl
insb
cmpxchg
and
cmpsb
cmp
cmp
lds
jns
out
cmpsb
cmp
mov
xchg
adc
js
test
les
movsl
push
cltd
rolb
popa
xorb
repnz
sub
push
mov
xor
aaa
and
stos
jbe
enter
es
gs
movsb
inc
or
jnp
inc
testl
adc
push
iret
mov
add
mov
pop
mov
out
scas
hlt
les
push
mov
std
mov
xor
ljmp
insb
mov
xchg
daa
add
xorl
outsl
push
lahf
adc
popf
mov
mov
cld
add
inc
adc
shr
jae
mov
dec
jl
jae
repz
adc
mov
inc
out
cmp
inc
sbbb
cmc
mov
aad
push
or
in
ds
loope
mov
inc
mov
dec
bnd
bound
dec
js
jmp
lock
or
cmpsb
mov
add
pop
xchg
fidivl
jecxz
sub
inc
add
xchg
mov
jbe
sub
aam
mov
fistps
mov
sub
cltd
push
rol
jg
sbb
ret
dec
mov
popa
or
jne
cmp
loop
lods
mov
or
stos
inc
push
xchg
inc
push
cwtl
std
ss
mov
and
pushf
pop
xchg
test
mov
sub
mov
and
pop
sbb
bound
push
mov
sbb
cmp
cmp
push
loop
outsl
pop
fstl
enter
mov
dec
jmp
push
mov
mov
loopne
mov
adc
xor
cltd
jbe
pop
sbb
jmp
pop
scas
or
jne
adc
pop
cmp
out
fiaddl
sub
or
add
xchg
aas
jge
les
add
mov
pop
jnp
aam
cmp
dec
fwait
and
fistl
add
pop
mov
negb
into
stc
pushl
gs
mov
or
or
jno
xor
xchg
int
xor
xchg
mov
clc
push
cmpsl
or
stc
mov
add
xchg
xor
sbbb
jbe
sub
sti
pop
xor
loopne
mov
xchg
in
lock
push
arpl
mov
sub
cmp
js
sub
jecxz
add
imul
xchg
sub
hlt
mov
add
jnp
loop
gs
pop
add
sbb
add
pop
xor
and
cs
loope
fcomi
test
out
in
sbb
in
jo
xchg
pop
out
push
mov
lcall
sahf
add
sub
jp
cmp
and
jo
push
shll
pop
and
insb
cli
repnz
fldenv
jne
mov
out
aaa
or
movsb
js
outsl
nop
push
movsb
ss
inc
and
call
arpl
add
lahf
jno
insb
shrl
push
cltd
std
ret
xor
incb
xor
test
lds
notl
pop
jl
xchg
ret
adc
adc
repz
cmp
xchg
adc
push
daa
mov
ds
dec
pop
push
dec
pop
and
mov
pop
fcmove
xchg
cmpsl
rolb
inc
xor
lcall
inc
popf
jno
xchg
xor
out
xchg
jp
cmp
les
rcll
push
or
xchg
jae
insl
popa
loope
sbb
xorl
push
jp
adc
jmp
jnp
push
cmpsl
pushf
hlt
sub
ds
cmp
pop
push
xchg
push
enter
call
push
or
inc
std
ficomps
cmp
push
outsl
dec
popf
mulb
xchg
mov
outsl
gs
aam
into
sub
pop
push
outsl
or
and
jo
cmp
push
ljmp
call
mov
jo
jae
mov
xlat
xchg
or
mov
je
xor
or
add
and
push
cmovns
jg
cwtl
xor
sbb
int
xorl
fisttpll
cmpsb
jns
mov
add
and
add
aas
mov
mov
xor
inc
and
cmc
shlb
addr16
rorb
inc
pop
push
insb
pusha
gs
test
lock
or
pop
mov
insb
ja
mull
xchg
stc
lea
cmp
imul
mulps
and
xor
cmp
mov
es
push
imul
and
push
lret
dec
mov
cmpsl
ss
lea
cmp
cmc
aas
xor
cmp
pop
test
mov
pop
push
stos
jle
push
pop
jo
inc
mov
jl
movsl
sub
adc
je
lahf
cs
test
aad
xor
enter
and
pop
scas
popa
addl
mov
sahf
cmpsb
leave
xchg
out
xor
dec
dec
adc
lea
leave
sarl
add
ljmp
mov
fs
xchg
aas
test
mov
or
adc
mov
mov
pop
jns
clc
in
mov
pop
pop
scas
repz
inc
aam
adc
pop
push
ljmp
push
pop
fisubrl
push
stc
pop
add
sub
sub
stos
mov
sar
push
sub
test
xchg
dec
in
cmp
push
jb
sbb
int3
dec
mov
mov
jo
test
aas
mov
ljmp
fcomip
xchg
loopne
mov
xchg
inc
sub
scas
adcl
jmp
xchg
ss
out
dec
fsubrs
xchg
insb
incl
cmc
xchg
rclb
jg
lret
je
inc
add
stc
cltd
std
xchg
or
mov
in
icebp
and
out
mov
xchg
or
mov
inc
xorl
xor
and
push
jecxz
add
cld
push
mov
jo
sarb
cltd
in
je
xchg
outsl
popf
and
and
lret
cwtl
das
negl
push
sub
int3
orb
inc
sbb
push
fwait
inc
adc
sub
cmp
adc
fimuls
fisubs
icebp
push
mov
adc
jecxz
cmpsl
in
mov
xchg
enter
jecxz
push
data16
or
mov
popf
mov
push
out
sub
lret
out
dec
add
repz
jg
int3
xchg
es
movsb
or
mov
outsb
shrb
andl
dec
jecxz
sbbl
dec
xor
je
int3
cmpsb
ret
cmc
mov
sti
popa
pop
scas
sbb
push
cli
aaa
push
xor
xchg
cmpsl
pop
fcompl
jns
jns
cmp
fimull
push
stos
jnp
and
jno
aas
das
dec
jbe
sarl
xchg
and
inc
sbb
movsl
lea
add
cmp
in
xor
xor
data16
xchg
and
repnz
or
lahf
mov
mov
add
add
mov
mov
push
add
xor
ret
pushf
sbb
ror
in
stos
push
mulb
arpl
or
ja
mov
jmp
mov
pop
cmp
sub
out
sbb
dec
push
movsl
sbb
arpl
popa
faddl
and
jmp
loop
pop
stos
inc
pusha
std
out
sbbl
mov
fisubrs
lock
add
les
mov
test
xor
jo
test
pop
sbb
dec
pop
jbe
test
jle
mov
mov
insb
daa
lcall
pop
lret
jecxz
leave
and
fiaddl
pop
in
mov
cmp
sti
add
xor
lea
mov
mov
mov
adc
push
push
jno
cli
sti
xchg
sbb
hlt
cmp
dec
out
push
cmp
mov
sbb
xlat
dec
mov
stc
mov
out
cmp
rcrl
imul
cmp
mov
data16
sub
xor
or
fiadds
dec
xor
jecxz
pop
push
or
jns
push
xchg
and
dec
sbb
test
mov
imul
mov
js
push
pop
xor
jno
pop
push
fidivrl
fdivrs
cmp
push
inc
pop
cltd
cli
pushf
add
adc
pop
push
daa
cmp
stc
adc
lcall
cmp
push
mov
mov
sbb
repz
mov
inc
fidivs
or
mov
xchg
xor
dec
add
jno,pt
nop
and
and
enter
aaa
fistpl
addr16
add
das
lds
pop
dec
pop
ret
test
movsb
das
sub
es
dec
or
mov
mov
inc
xor
arpl
mov
test
mov
sbb
sub
jmp
sbb
lcall
inc
push
xor
pop
icebp
add
in
mov
js
jmp
or
xor
push
icebp
cmp
loop
dec
dec
repz
lea
lahf
in
cmc
lcall
rcrb
xor
mov
out
in
mov
jns
inc
stos
mov
mov
mov
fs
push
mov
fmul
add
sbb
inc
push
mov
mov
push
lds
cmp
das
mov
ds
xor
repz
scas
mov
mov
xchg
sbb
add
bound
ficompl
aaa
jmp
cli
xchg
xor
mov
inc
mulb
pop
jb
cmp
mov
sarb
out
or
add
push
sub
lods
out
cmp
outsb
ljmp
test
lret
lret
js
pop
jl
pop
test
es
cmpsb
pushf
lret
in
lods
mov
lds
subb
fldenv
lcall
mov
dec
ret
adc
mov
je
mov
sti
cs
mov
cmpsb
xor
and
sub
scas
inc
data16
mov
adc
das
xchg
adc
outsl
lahf
fcmovb
fmuls
rcll
ja
lahf
mov
cwtl
mov
rcrb
inc
or
call
rorl
stc
xchg
out
pop
add
xor
add
cmp
notb
or
mov
stos
and
adc
test
out
mov
cmp
jno
lret
ret
dec
cmp
fucomip
in
rol
and
hlt
xchg
sub
rcll
inc
mov
xchg
jno
les
dec
cmp
fsts
dec
add
sub
mov
push
pusha
cmp
xor
cmpsb
push
out
jmp
and
mov
dec
das
out
inc
push
movsl
ds
rorb
jb
pop
movsl
xchg
fistl
push
stos
inc
es
and
icebp
jno
shrl
xor
out
dec
jne
jecxz
pop
mov
incl
pushf
ds
inc
in
test
out
bound
xor
pop
icebp
stos
xor
fists
dec
in
lods
popf
sub
leave
xor
rcrb
sbb
outsl
mov
add
aaa
and
dec
cltd
and
stos
shrb
pop
pushf
out
cli
jecxz
addr16
mov
cmpsl
lea
sbb
jno
xchg
inc
fwait
sub
int3
inc
mov
xchg
lret
stos
nop
mov
sub
lahf
and
add
or
sahf
mov
mov
adc
jo
cmp
pop
cmc
loope
jge
addb
sahf
rcr
mov
mov
mov
pushf
movsb
jae
mov
adc
out
pop
inc
jmp
filds
xor
in
ficoms
add
dec
xor
cltd
push
mulb
movsl
xchg
inc
inc
sbb
lea
mov
fstl
into
jp
sbb
lods
fwait
shl
lock
adc
inc
xchg
mov
sub
mov
mov
pop
sbb
cld
mov
hlt
mov
fwait
push
rcrb
cli
hlt
sbb
es
jmp
enter
dec
inc
dec
divl
ds
pop
jno
mov
mov
or
mov
mov
pop
dec
and
jg
shll
pop
mov
push
lret
cmp
repz
mov
lods
repz
in
or
cmp
mov
mov
dec
aam
cs
outsb
shrl
enter
sbb
aam
jmp
dec
pop
mov
ret
hlt
clc
sub
addl
push
rcll
lock
mov
imul
add
mov
adc
or
inc
test
push
xchg
dec
push
add
cli
xor
lods
cmpsl
rorw
cmp
outsl
fildl
orl
xor
sub
inc
gs
andb
mov
inc
mov
pop
scas
xchg
or
aas
cs
fs
dec
mov
push
fwait
mov
outsl
pop
add
fwait
xor
add
jnp
fld
or
jo
adc
push
mov
fisttpll
cmp
xchg
dec
jecxz
cmp
mov
shrb
aad
dec
aam
ret
inc
cmpsl
cwtl
pop
js
push
mov
test
leave
and
dec
add
lret
xchg
or
mov
adc
ffree
mov
inc
sub
std
aam
fxch
inc
or
scas
jno
xchg
in
mov
test
dec
push
xchg
xchg
data16
rcrl
outsl
dec
pop
idivb
push
or
push
sub
nop
mov
dec
sub
dec
mov
dec
cmpsb
mov
sub
xchg
xchg
insl
icebp
inc
lock
sub
test
imul
adc
loope
andl
ficomps
or
hlt
cmp
pop
cmc
das
push
das
rcr
push
jl
inc
out
mov
int3
mov
sub
pxor
lods
mov
mov
dec
mov
inc
dec
jbe
imul
scas
or
inc
shll
mov
cli
pop
sub
or
jmp
dec
roll
add
mov
shl
jl
pop
repnz
dec
or
xchg
repz
lahf
movups
jns
in
stos
xorb
aas
sbb
jge
mov
jp
enter
pop
push
push
dec
rol
lods
scas
ficomps
mov
push
test
xchg
testl
pop
lcall
stc
adc
push
xor
mov
or
jns
mov
imul
pop
fimull
push
add
lret
in
int3
fimuls
and
push
xchg
lock
xor
int3
aad
gs
sbbb
pop
add
mov
dec
jnp
andb
push
fistps
sub
out
clc
add
sub
cmp
in
aaa
mov
lahf
data16
notl
lock
sub
cmp
inc
lcall
test
mov
or
sbb
fstpl
inc
in
mov
fdiv
lret
test
inc
push
scas
lea
jmp
xor
rcrl
sbb
cmp
out
pop
adc
shll
xchg
loope
or
mov
setle
pop
xchg
out
lea
aas
push
pop
sbb
dec
dec
xor
clc
xchg
sbb
push
inc
pop
loop
sub
dec
fadd
leave
sbb
out
shr
xor
xchg
test
mov
nop
xor
add
mov
jbe
mov
mov
fnsave
pop
in
inc
rcrb
insb
outsb
sarl
aaa
rclb
sbb
call
lahf
mov
out
aad
movsl
cmp
out
push
out
or
sub
addl
fidivs
mov
rep
imul
pop
jne
sbb
pop
sbb
inc
cmp
pop
mov
xor
fisubl
pop
ljmp
jno
xlat
mov
or
xor
pop
es
adc
xchg
fucomip
pop
dec
fnstenv
enter
jnp
insb
cwtl
sub
leave
dec
test
mov
jb
jns
clc
mov
pop
addl
mov
into
enter
aas
scas
dec
fs
dec
icebp
sub
xchg
lock
and
mov
adc
sbb
rorl
lds
scas
cmp
ret
mov
jg
sub
lds
pop
sarl
jo
rclb
or
or
arpl
jl
es
adc
clc
loope
or
xor
test
pushf
rol
pop
inc
jle
ret
mov
mov
add
stos
shrb
rclb
xchg
test
fidivrs
dec
adc
push
adc
or
test
movntq
andw
inc
out
jbe
in
or
mov
cmp
mov
stos
push
mov
dec
jns
popf
dec
loopne
pop
add
lret
stc
incl
iret
push
mov
cltd
fimuls
hlt
mov
out
push
test
aam
or
fisttps
fstpl
cs
and
mov
push
stc
jns
dec
xchg
shll
adc
push
dec
fdivrl
cmpsl
xchg
int3
dec
enter
and
cmp
push
sbb
test
ja
mov
movsl
cmpsb
push
je
mov
xchg
mov
adc
jecxz
pop
pop
push
or
mov
dec
pushf
add
cmp
jle
pop
daa
jge
dec
add
fldl
test
test
cmp
pop
push
das
push
outsl
loop
nop
xor
fsubs
lods
fcompl
lahf
div
ret
fiaddl
gs
mov
mov
add
mov
icebp
pop
ret
push
sub
inc
imul
outsb
int
popl
cld
sbb
mov
andb
push
cld
mov
mov
cmpb
xor
adc
add
aad
cmpsl
sti
mov
call
aas
jmp
cmp
dec
pop
rorl
mov
mul
es
lea
cmp
fwait
out
popa
adc
pop
adc
adc
xchg
fisttpll
repnz
test
adc
push
mov
fisubl
testb
loop
sub
xchg
push
cli
or
idivb
pop
lahf
mov
jne
mov
sbb
insl
cmpb
int3
bound
cmp
lcall
push
xchg
xchg
xchg
mov
dec
mov
lcall
cmc
enter
or
movsl
jb
ret
pop
icebp
insl
shrl
sub
cmp
gs
xchg
push
mov
add
bound
cmc
mov
pop
adc
dec
jl
sarb
adc
push
and
xchg
leave
inc
jbe
ja
or
fnsave
mov
jnp
jno
xchg
ss
loop
inc
repz
ljmp
sub
ret
test
jo
out
xchg
jg
jecxz
testl
mov
or
pop
jno
mov
popa
push
fcoms
int
sbb
movb
xor
push
pushf
and
rcrl
std
shlb
inc
inc
push
jae
sti
and
std
pop
cli
pop
adc
dec
pop
incb
movsb
and
ret
or
xor
ss
scas
das
js
add
cltd
adc
and
call
mov
inc
loope
inc
sbbl
out
and
sub
adc
and
dec
stos
out
ljmp
or
ljmp
fcomps
xor
push
cmpsl
xchg
push
cs
jecxz
clc
sbbl
pushf
dec
jle
jge
add
and
xor
xchg
js
pop
pop
pop
cmp
mov
sbb
repnz
sub
xchg
shld
pop
lds
sbb
xchg
push
sub
mov
bound
ljmp
inc
stos
mov
int3
fsubl
push
or
adc
test
add
int
popf
pop
inc
push
es
inc
or
sub
jl
cmpsb
sub
adc
syscall
cmp
insb
mov
dec
enter
js
aam
push
pop
mov
add
sahf
lods
lcall
mov
mov
mov
pop
pop
pop
xor
cltd
call
xlat
lcall
adcb
inc
lcall
push
inc
std
jecxz
scas
in
xchg
imul
inc
pop
mov
and
jo
insl
mov
vandnps
xor
shll
gs
lcall
sbb
out
sbb
cmp
mov
addr16
mov
cltd
push
sub
in
aam
xchg
mov
cmp
push
call
fcomps
stos
repz
es
test
inc
push
add
and
push
and
jo
movl
pop
and
int
pushf
add
adc
cmp
imul
flds
out
mov
dec
aam
jo
and
add
push
stc
dec
cwtl
pop
sahf
idivl
rclb
dec
es
dec
jmp
aas
jno
dec
push
adc
mov
inc
pop
xor
mov
xchg
push
push
sbb
mov
fcompp
jmp
insb
dec
in
mov
insb
sti
mov
idivl
xchg
and
add
or
je
je
psrld
xlat
sub
xchg
dec
ljmp
and
mov
aam
push
test
mov
sub
aam
lods
xor
sub
in
cmpsb
ljmp
lds
shll
inc
mov
test
fildll
imul
pushf
shl
sbb
add
add
outsb
lods
inc
ss
mov
inc
jp
fs
dec
xor
int
pop
testb
scas
outsb
jp
cmp
int
sbb
inc
mov
cmpsb
test
aaa
clc
fcoms
test
mov
test
mov
int3
ss
cmp
insl
insb
out
andb
insl
rolb
push
inc
dec
cmp
clc
jge
lret
inc
xor
in
push
aaa
stos
jp
outsl
xchg
shll
jae
xchg
stos
mov
adc
gs
xchg
mov
ret
call
mov
shrb
cmp
loop
ret
rcrb
jmp
jns
in
daa
ss
cmpsb
jp
hlt
leave
sbb
gs
adc
add
and
cmpsl
mov
lods
mov
push
fbstp
shrl
gs
lret
push
adc
int
repz
sbb
jp
dec
xor
idiv
xor
and
iret
xchg
cmp
push
mov
add
mov
fisubrs
xlat
xchg
xlat
ret
pop
dec
push
data16
mov
icebp
mov
mov
mov
pop
add
adc
dec
mov
es
xchg
hlt
test
jge
lcall
inc
ret
out
sti
or
cmp
xchg
xchg
bound
mov
sub
xchg
pushf
mov
pusha
clc
sbb
ss
jnp
mov
fdivl
add
fwait
inc
decb
inc
fdivrl
out
js
xchg
jno
call
adc
adc
jle,pn
xor
xchg
sub
pop
mov
pushf
pop
outsb
into
pop
imul
mov
inc
dec
push
popf
andb
xchg
out
stc
out
or
xchg
xchg
push
sarb
aam
cmpb
leave
pop
mov
ljmp
movsl
in
add
scas
and
scas
xchg
inc
in
push
roll
fscale
sarb
pop
sub
ret
jae
pop
inc
cld
popa
and
test
jb,pt
testl
adc
fisubrl
push
cmp
inc
es
lds
gs
jmp
ja
mov
imul
dec
movsl
ss
jp
aam
sub
mov
int
mov
and
fwait
inc
inc
pop
cltd
loopne
cmp
mov
fwait
mov
inc
dec
adc
mov
mov
testb
xchg
mov
dec
sbb
xchg
movsb
jmp
orb
stc
daa
icebp
lea
into
inc
pop
pop
mov
pusha
mov
adc
fidivs
insl
push
lcall
in
jns
adc
jns
ret
sub
ljmp
cmp
xor
xorl
adc
and
xor
add
lahf
inc
fisubs
cmp
adc
dec
adc
jnp
cmp
out
in
adc
dec
cmpsl
or
shll
inc
lods
fcmovnu
ja
rorb
lret
inc
or
pop
scas
je
out
and
jp
xor
repz
xchg
sbbl
and
scas
push
or
outsb
movsb
adc
xchg
xor
cltd
push
out
out
dec
repnz
enter
xchg
cwtl
stos
les
and
fdivl
mov
es
test
adc
adc
mov
sbb
insb
xchg
push
ss
imul
pusha
insl
xor
or
mov
in
shl
push
push
mov
out
add
mov
dec
dec
xlat
jp
ret
cmp
sbb
jmp
int
sbb
ret
mov
hlt
push
or
fisubs
outsb
push
add
das
outsl
xor
notb
subb
js
fildll
xchg
and
ret
cwtl
lods
mov
push
mov
xchg
jo
mov
pop
dec
cmp
pop
jae
jns
mov
sbb
lods
mov
cmpsb
leave
add
add
in
mov
mov
dec
xor
push
mov
out
pop
mov
xor
inc
ja
das
pop
ljmp
daa
lcall
mov
cwtl
cld
stos
sahf
jmp
add
xor
or
cmp
xchg
xor
sbb
xchg
imul
nop
int
cs
ret
push
sub
xchg
or
aas
test
sbb
jo
xlat
call
and
adc
stos
lret
sti
or
aam
cld
push
adc
pop
icebp
sbb
js,pt
jo
or
mov
xchg
jmp
and
push
in
jb
inc
fmull
je
outsl
movsb
jo
push
lret
aas
push
jmp
mov
outsb
adc
and
rcrl
nop
add
out
sub
cmpsb
dec
pushf
xor
mov
cmp
or
cmp
repz
mov
mov
push
xor
sahf
cld
dec
in
jne
enter
jecxz
sbb
cmovs
jl
movd
iret
mov
dec
jecxz
cwtl
rol
fdivl
mov
scas
sub
lret
mov
cmc
gs
in
aam
mov
sti
jnp
leave
sbb
dec
subb
cmp
shrb
repnz
add
cltd
push
mov
mov
push
add
imul
mov
dec
ficompl
aad
in
xchg
adc
addr16
adc
fimull
fwait
adc
das
add
orl
or
loopne
or
adc
mov
pop
cmp
jns
jge
outsl
lcall
mov
jb
xchg
lods
inc
popa
out
jecxz
or
and
cs
repnz
mov
xor
push
xchg
push
push
out
insb
jp
lods
push
loopne
adc
mov
mov
ljmp
ret
mov
sarb
push
push
movsl
addb
adc
loope
jnp
pop
andb
jo
sti
mov
cmp
rcrb
inc
jle
mov
aad
cmpsb
ret
adc
scas
pusha
int3
sahf
and
jb
repz
adc
and
mov
jbe
sub
lcall
and
and
scas
sbb
sub
leave
shl
std
push
push
jmp
mov
jo
sbbb
fs
bound
jp
scas
and
out
shr
dec
hlt
roll
sub
cmp
leave
stc
pop
roll
shrb
fildl
inc
mov
mov
call
repnz
lea
test
into
pushf
insl
mov
push
call
mov
and
faddl
fimull
dec
adcb
pop
stos
cmp
lcall
nop
mov
fcomp
aaa
enter
jbe
push
sbb
jne
cld
les
daa
sarb
aam
bound
jl
jb
sub
rol
mov
push
jmp
idivl
mov
jge
cmp
cmp
sub
inc
das
add
cwtl
add
ret
std
ret
pop
ss
cld
mov
int
jmp
scas
xor
int
fwait
in
xlat
sub
in
sub
in
dec
push
cmp
ja
sub
cmpsl
clc
xchg
daa
ljmp
enter
arpl
jno
mov
lea
xlat
hlt
push
mov
xlat
scas
inc
aam
add
ja
scas
dec
xchg
fimull
jmp
or
mov
mov
pop
aam
cltd
add
jno
inc
mov
cmp
pusha
sbb
je
jno
mov
push
cmc
arpl
pop
ds
inc
sub
loop
insb
jmp
sahf
popa
mov
mov
jg,pn
fwait
jge
dec
dec
imulb
enter
mov
cmpsb
leave
jns
or
sub
into
int
sbb
lods
mov
in
dec
mov
adc
mov
add
inc
cmp
mov
cmp
inc
xchg
push
xor
xchg
jl
sbb
xchg
xor
xlat
loop
lret
cmp
and
dec
push
lods
add
or
gs
fcomp
dec
or
push
sbb
lock
sub
xchg
mov
mov
fsubrs
rcrb
adc
jmp
xchg
es
bound
sub
dec
xchg
adc
fcompl
adc
fbld
adc
adc
out
shrl
add
and
call
jge
mov
lds
lods
inc
stc
sbb
in
adcl
or
or
outsb
lcall
rcrb
inc
icebp
jge
sti
iret
pop
mov
adc
mov
rorl
adc
or
aam
imul
addr16
rcrl
mov
add
fdiv
imul
jge
push
loopne
into
pop
scas
inc
xchg
in
dec
or
xor
inc
or
mov
das
jmp
pop
pand
push
addr16
sbb
and
int
adc
push
mov
push
outsl
mov
sti
mov
fsubr
jp
fwait
cmpsl
cmpsl
ret
and
xor
inc
xlat
test
dec
pop
in
cmp
inc
fildl
leave
pushf
and
in
movsb
pop
mov
nop
mov
popf
fwait
pop
nopl
and
std
pop
mov
and
outsb
shl
lahf
sti
mov
cmp
jnp
test
cmc
mov
inc
movsb
mov
jns
aad
arpl
aad
xor
xor
inc
dec
lret
es
rcrl
jne
inc
js
jmp
popa
mov
cwtl
arpl
fcoms
lock
mov
jmp
sarb
aad
pop
or
out
test
lret
and
sbb
inc
mov
ss
rcrl
shlb
xor
mov
loopne
pop
adc
faddp
inc
cmp
bound
sahf
xchg
daa
xlat
dec
mov
into
cmp
xchg
or
jmp
push
push
mov
mov
push
data16
ret
jg
mov
into
faddl
mov
in
cmp
and
xor
sub
stc
mov
fdivrl
dec
gs
xor
cmp
push
pop
mov
jo
cmp
lods
mov
xchg
sub
test
sbb
xor
fistl
mov
adc
mov
cwtl
push
add
cld
fwait
in
test
xchg
add
pop
mov
jmp
pop
out
push
cli
lea
push
cmp
jl
inc
out
pop
dec
or
sbb
xor
and
xlat
and
pop
dec
sub
aaa
pop
xchg
mov
push
dec
cltd
and
stos
pop
jmp
or
or
call
test
inc
repnz
incl
loope
ljmp
adc
rep
xor
cmpsb
pop
in
scas
repz
and
xlat
xchg
inc
faddp
sub
xchg
sbb
cld
xchg
into
pushf
das
mov
pushl
into
mov
test
pop
add
daa
in
loopne
pop
insl
notl
in
jbe
push
fidivs
or
and
pop
mov
push
cwtl
xor
jae
cmp
sbb
pop
xchg
jmp
add
cmp
mov
test
data16
pop
jmp
dec
mov
gs
outsb
aaa
push
cmpsl
mov
mov
pushf
ss
mov
xchg
sbb
xor
pop
ljmp
push
insl
out
js
cmp
xor
mov
cmc
outsl
mov
or
xchg
mov
es
sub
adc
and
sbbl
lods
mull
ror
insb
icebp
push
cmp
ja
xor
push
imul
mov
cwtl
fnsave
fisubl
out
popf
in
or
push
cltd
js
lea
and
xor
adc
repz
ficompl
gs
sub
mov
inc
lea
jns
daa
push
testl
pop
xor
dec
loope
das
aas
jmp
stc
test
test
push
test
stos
into
adcl
mov
pop
out
push
cmpl
ss
or
mov
scas
dec
xchg
pop
and
mov
push
loope
out
lock
movsl
lea
adc
mov
jae
arpl
or
sbb
cmp
pop
aaa
pop
out
sbb
clc
jp
sbb
std
ss
imul
xor
int3
inc
push
sub
lcall
mov
ja
outsb
add
mov
push
or
mov
cli
push
mov
mov
xor
push
fwait
jl
out
and
push
sti
jp
jge
xor
in
inc
aam
dec
ficomps
fsub
aad
inc
fmuls
dec
or
movsl
fsubr
scas
mov
mov
lods
sbb
fcmovnbe
push
mov
push
fstpl
jp
fcoml
cmpsl
in
fsubrs
sbb
scas
mov
jbe
jg
adc
aad
or
jne
lcall
and
outsb
aaa
cld
push
imul
adc
mov
std
cltd
lcall
or
xchg
out
insl
and
ret
aaa
mov
in
mov
xchg
sbb
scas
xchg
pop
icebp
add
jecxz
aas
sti
cwtl
pop
jecxz
fdivrs
pop
in
es
inc
and
jno
notl
inc
outsb
adc
jmp
outsl
fldl
jae
mov
stc
xchg
and
cmc
js
jmp
or
mov
sbb
in
or
cmpl
rorb
dec
adc
dec
loop
pop
arpl
sahf
mov
pop
repz
lods
fisubrs
out
mov
mov
sahf
pop
lahf
fucomip
sub
xchg
stos
push
jno
cmc
pop
imul
addl
enter
cmpsl
bound
pushf
clc
adc
adc
fbld
add
jp
ds
sbb
in
add
xor
inc
inc
xlat
xor
adc
push
sub
stc
adc
loopne
sbb
xlat
or
xchg
pop
pop
test
push
fsubl
mov
push
aaa
mov
data16
subl
cli
mov
sbb
sbbl
mov
js
bound
jno
addr16
aam
leave
mov
or
adcb
in
lret
push
fsubs
mov
xor
inc
pop
or
aaa
xchg
jb
push
jnp
jnp
inc
sub
sbb
fmulp
gs
into
iret
xchg
jmp
mov
jne
inc
lret
int3
xor
mov
push
sti
xchg
mov
sub
lret
movsb
lds
add
jne
jnp
repnz
iret
xor
inc
std
out
mov
and
cmpsb
pusha
loop
xorb
cmc
ret
loop
xor
mov
inc
push
and
outsl
mov
dec
out
data16
mov
sbb
inc
test
mov
shll
push
add
movsl
xchg
lcall
in
pop
lods
mov
push
stos
mov
fisttpll
dec
inc
mov
subb
dec
cmp
sub
ljmp
out
add
pusha
inc
sahf
jno
push
push
sub
fmul
and
in
test
cltd
je
xchg
dec
jns
sti
or
fldt
adc
cld
movd
mov
xchg
jecxz
dec
fsubl
insb
sti
push
adc
in
or
jmp
push
imul
mov
les
jb
icebp
mov
xchg
adc
cmc
push
imul
mov
stos
cmpsl
nop
psraw
lret
push
add
mov
imul
lahf
mov
add
adc
inc
cmc
lret
into
jl
or
fs
insb
push
mov
fnsave
int3
mov
mov
andl
inc
sahf
rclb
ror
add
jl
ljmp
jmp
cltd
in
and
rclb
jl
loope
lahf
push
test
dec
pop
mov
cwtl
test
xor
das
movsl
cmp
or
mov
data16
clc
cmpsl
outsl
adc
xor
xchg
js
jno
mov
sub
out
and
dec
int
mov
sti
stos
sbb
sub
mov
push
push
or
stos
cmp
test
or
sti
cmp
xchg
sti
shll
cltd
insl
push
movsl
loopne
adc
mov
cs
and
in
xorb
shll
fdivr
std
faddl
and
mov
jo
push
test
cwtl
ficomps
jno
jns
or
dec
loopne
xlat
adc
mov
addr16
pop
adc
nop
out
dec
add
movsl
stos
fstps
sbb
rol
jecxz
jo
icebp
adc
fs
inc
mov
xchg
mov
dec
mov
cmp
inc
movsb
dec
cwtl
ret
outsl
mov
or
rorb
es
mov
or
fldcw
push
push
out
jo
mov
push
sbbb
shrb
popf
xor
sbb
je
mov
int
pop
xor
xor
mov
into
sarl
enter
in
and
mov
and
insb
out
fiadds
movsb
js
xor
or
mov
mov
cmc
mov
ror
int3
mov
subl
divl
pushf
pop
mov
jmp
sbb
sub
sbb
sub
adcl
pop
jbe
add
add
pop
das
ljmp
scas
inc
lods
sub
cmp
inc
subl
and
or
outsl
lret
push
push
cmp
stc
push
sti
pop
in
mov
or
pop
adc
xor
push
mov
pop
xchg
jbe
xor
and
cmc
sbb
loopne
fildl
lea
in
xchg
sbb
outsb
add
xchg
mov
in
hlt
xor
mov
rcrl
test
mov
stos
fsts
fwait
sti
dec
jnp
ja
testl
pushl
cmpsl
sti
xor
andb
xor
mov
repnz
fistpll
insl
xchg
js
out
je
ret
mov
mov
sahf
pop
movsl
rcll
idivb
mov
or
call
cmp
imul
stc
mov
cmp
jle
or
lahf
hlt
mov
out
push
mov
mov
pusha
mov
movsb
lock
mov
das
mov
fistpll
mov
cmpb
and
jae
repnz
lret
xlat
add
insl
dec
xchg
test
dec
dec
loope
cmp
adc
mov
jl
jno
add
mov
orl
pop
mov
insl
int
js
mov
hlt
cmp
adc
ret
sbb
aas
or
stos
inc
fiaddl
sbb
pushf
fucomi
cld
mov
mov
pop
out
mov
popa
sub
movsl
or
xlat
dec
jnp
jp
cs
arpl
sti
les
daa
out
push
push
inc
negl
stc
dec
pop
push
fstl
aas
adc
push
mov
shl
mov
arpl
call
cli
nop
inc
inc
in
xor
das
jb
out
aam
sub
pop
movsl
and
cmp
enter
pop
jb
sub
pop
push
jnp
cmp
pop
add
mov
scas
adc
daa
and
dec
push
pop
std
scas
les
jns
sub
xor
push
pop
and
leave
push
movsb
sbb
adc
or
mov
xor
jne
cmp
inc
jl
pop
pop
ds
jg
jb
in
jne
in
cmp
fnsave
pop
in
mov
nop
push
leave
inc
sbb
push
out
push
dec
cmc
or
fwait
push
jnp
cmp
ret
pop
stc
sub
js
or
loope
xchg
sbb
xor
in
icebp
imul
adc
push
mov
push
xor
out
jmp
adc
leave
jae
cmc
sub
out
push
call
dec
xchg
push
or
jo
xchg
bound
out
sbb
jmp
dec
iret
xchg
out
or
pop
sbb
adc
add
jmp
add
decl
lds
add
enter
popa
lahf
cmpsl
or
adc
xchg
mov
idivb
push
sub
inc
jge
mov
mov
lock
xor
jbe
inc
in
xor
lret
xchg
fsubs
lds
push
rcl
add
pusha
or
adc
fisubrl
xlat
or
and
fwait
sbb
push
adc
sub
aaa
jle
or
out
jnp
sar
add
repnz
jge
jnp
shll
adc
test
out
sbbb
jle
in
dec
add
in
sbb
or
add
lea
push
jl
pop
sbb
mov
cmp
cmc
mov
test
dec
cmp
stos
add
or
dec
xchg
pushf
popa
xchg
mov
mov
cmp
testb
and
fisubrl
in
pusha
cs
pop
inc
pop
mov
popf
mov
add
es
push
shrl
pusha
ss
adc
xor
xchg
push
stos
jge
mov
inc
inc
jl
mov
setae
mov
clc
cmpsl
ss
pop
hlt
and
daa
mov
das
add
cs
or
jns
test
incl
or
xlat
or
jl
jecxz
ljmp
insl
jnp
cmp
mov
fbld
outsb
push
mov
push
mov
in
out
adc
stc
inc
jo
addr16
push
jmp
ss
das
ss
xchg
adc
jl
and
mov
pop
adc
mov
inc
push
les
jae
das
sub
xchg
and
imul
inc
popf
push
add
add
push
add
lock
lods
adc
pop
ja
lea
out
fsubs
sub
lcall
mov
mov
cmp
les
cmc
aas
dec
adc
mov
outsb
dec
or
add
or
push
je
sub
rep
pop
mov
mov
mov
mov
dec
dec
lea
sub
lock
outsb
faddp
push
xchg
mov
mov
jmp
leave
cmpsl
ss
push
sub
xor
add
pop
jo
jmp
repz
sti
inc
cmp
adc
mov
or
sub
cmp
mov
adc
mov
sti
xor
lret
popa
bound
call
fldl
movsl
mov
pop
aam
add
data16
lcall
sti
adc
fpatan
negb
mov
ret
lcall
stos
cmc
mov
mov
loopne
jbe
pusha
jl
call
or
sarb
dec
mov
dec
or
jge
cmp
add
jge
dec
sbb
sub
mov
lock
das
mov
movsb
jecxz
sbb
rorl
out
sub
rclb
mov
jnp
pop
lock
ds
sub
mov
cmpsb
mov
lods
int3
sbb
aaa
xor
pop
xor
nop
add
pushf
jmp
es
mov
into
aaa
stc
jmp
jno
xor
nop
mov
push
enter
mov
mov
push
pop
out
dec
jp
dec
les
or
and
xchg
and
or
imul
push
add
fs
int3
cld
mov
cmpxchg
clc
and
inc
mov
test
jmp
aaa
lret
xlat
scas
sbb
mov
enter
icebp
cmp
and
imul
mov
inc
out
insl
jecxz
mov
push
sub
rep
rcrb
pop
or
mov
fcmovne
incl
cmpsl
sbbl
leave
in
xor
add
mov
fistpll
stos
inc
mov
pop
stos
les
push
xchg
das
scas
xchg
loopne
xlat
add
sbb
add
mov
add
es
cmpsl
xor
lret
or
mov
loope
cmpb
mov
pop
data16
mov
movsl
cmp
out
popf
incl
ret
pop
xor
xchg
ja
jecxz
push
lahf
add
inc
stc
push
outsb
mov
adc
sbb
cmp
lahf
push
xchg
and
and
cmp
and
es
ds
add
push
lret
cmp
xlat
or
or
inc
cmp
add
dec
mov
jo
ret
shl
push
mov
fmuls
popf
in
iret
cs
movsb
jge
mov
jecxz
mov
inc
add
jae
and
daa
mov
movsl
sbb
adc
mov
mov
imul
sub
into
aas
aam
fwait
movsb
push
lods
cmp
inc
and
add
inc
jge
or
shl
fwait
andl
sbb
cs
lods
pop
lahf
in
das
xchg
sti
fistl
jb
or
out
imul
addl
or
pop
jmp
sbb
repz
cmpl
add
fwait
or
arpl
and
xor
shl
mov
cmc
shll
les
sub
call
mov
in
cmpl
jecxz
adc
repnz
jle
sarb
jns
leave
mov
dec
negb
dec
jns
pop
stos
jo
sbb
dec
mov
ret
or
push
cld
add
mov
mov
and
sahf
push
sbb
mov
test
andb
cltd
enter
mov
mov
jno
mov
jbe
cmpb
sbb
pop
data16
jo
xchg
adc
jno
repnz
jecxz
dec
adc
fsubrl
xchg
or
movsl
cmp
rol
dec
mov
lock
popf
shrb
dec
notl
sub
out
mov
es
arpl
jae
cmp
cltd
int
push
add
add
shlb
lahf
lods
sub
fmulp
and
repz
inc
cmpsb
enter
in
in
and
push
xor
cmp
push
loop
ja
and
lret
inc
andl
xchg
mov
adcb
add
mov
enter
lock
lods
scas
dec
jecxz
lods
mov
add
push
mov
jg
jge
std
nop
add
into
test
mov
pop
cwtl
cwtl
push
adc
cmp
insl
push
insl
jge
sub
mov
push
cmp
jmp
and
or
add
mov
das
daa
ljmp
or
in
adcb
repz
sub
repz
xchg
dec
mov
jp
mov
and
mov
cs
dec
aam
adc
and
add
test
push
push
dec
cmp
push
adc
inc
dec
imul
ret
pushf
sbbl
mov
pop
xor
mov
bound
inc
push
inc
mov
or
fwait
sbb
xchg
pop
xor
andl
lds
pop
incb
test
pop
push
mov
mov
lods
loop
pop
xchg
in
mov
and
pop
cwtl
xor
daa
in
mov
inc
mov
cwtl
jae
addl
movsb
sbbb
mov
lods
dec
cmp
outsl
or
or
shlb
pop
pop
imul
mov
mov
mov
out
rcl
xchg
xor
and
mov
adc
or
cmp
mov
cmc
cmpsl
mov
adc
jge
rol
clc
ja
xor
mov
cmp
movsl
cmp
pop
pop
scas
les
outsb
mov
jecxz
int
push
push
ss
lods
orl
jecxz
pop
in
push
mov
test
and
adc
ss
mov
sub
lods
mov
gs
cli
mov
inc
pop
mov
data16
jbe
xchg
cli
lret
js
loopne
nop
push
fwait
ret
inc
jg
pop
mov
jmp
sbb
lds
movsl
lds
mov
mov
in
mov
fsubs
popf
cli
adc
into
pop
xor
stos
add
adc
in
mov
add
popf
fldpi
into
lock
push
cmp
mov
int
in
add
iret
leave
leave
jo
scas
leave
push
mov
ljmp
out
mov
or
sub
es
mov
inc
lods
jmp
mov
arpl
xchg
out
test
je
ret
pop
sarb
cmp
nop
in
push
js
test
push
xchg
fcoml
pushf
das
push
fdivs
je
rcll
lea
mov
dec
arpl
xchg
adc
rcrb
cmp
jg
lock
iret
sbb
movsl
cli
subb
fwait
mov
sbb
out
xchg
jl
incb
lret
sbb
pop
inc
inc
mov
and
ret
fdivrl
xor
js
and
cmp
xchg
cltd
xor
jmp
out
sub
sub
jno
add
nop
sub
jecxz
jne
mov
pop
push
aas
shrb
clc
cmp
mov
xchg
or
mov
push
push
sub
sbb
sub
sub
dec
sarb
sbb
push
loop
cmpsb
std
in
flds
adc
scas
push
out
push
jb
mov
cmp
jns
mov
imul
dec
dec
in
fiaddl
popf
ror
mov
mov
push
xor
ljmp
je
das
sbbb
inc
cmc
add
pop
in
xchg
lret
ret
or
loope
push
or
pop
fucomi
mov
clc
jecxz
push
sub
adc
push
lret
iret
arpl
push
outsb
jns
xchg
cmp
sub
jg
flds
push
imul
add
pop
xchg
jne
in
xchg
and
or
cmp
fcom
fidivl
iret
fwait
sub
in
inc
cmp
mov
mov
int
scas
xchg
dec
fnstcw
aaa
jl
lcall
sahf
xor
mov
fs
arpl
cmpsl
mov
scas
push
stc
cmp
stos
or
add
decl
mov
jb
push
fwait
push
lods
and
jns
dec
in
cmpsl
cmpsb
les
jge
int
jbe
xchg
sub
dec
loopne
dec
popa
and
sahf
xchg
es
add
out
sbb
shlb
or
add
mov
adc
shrb
pop
push
fnop
adc
lret
inc
xor
jecxz
push
dec
push
insl
sti
aaa
hlt
pop
jg
push
out
test
or
push
mov
sub
nop
add
adc
imul
xchg
ljmp
pop
add
dec
xchg
insl
test
mov
pop
mov
push
push
je
cltd
cmpsl
or
xor
push
sbb
cmc
adcl
pop
sarl
lahf
and
mov
xor
mov
les
aaa
aam
rcrb
repnz
add
and
scas
jo
sbb
or
sbb
stos
xor
in
fabs
xchg
sub
dec
jl
out
mov
and
xchg
and
movsl
cmp
dec
sub
inc
push
stc
push
scas
xor
push
mov
mov
and
stc
add
or
lds
sbb
push
push
inc
push
js
je
rol
inc
sub
jp
mov
test
pop
inc
mov
add
movsl
arpl
out
lea
ss
movsl
lods
mov
sub
sbbb
and
sub
ret
xor
and
lret
mov
inc
cmp
fwait
and
loop
cmp
jne
xor
inc
cmp
enter
fisttpll
sub
jge
mov
cmp
pusha
int
into
add
xchg
pop
push
cwtl
rcrb
xchg
pop
push
movsl
xchg
pop
mov
cmp
mov
adc
xor
addr16
aad
xlat
xchg
xchg
and
scas
sub
inc
enter
dec
inc
insl
leave
jmp
bswap
pop
add
adc
add
in
rcrb
jno
aad
cmpsb
add
sahf
xor
add
sub
das
popf
sbb
out
cmp
sub
sub
pop
mov
les
push
inc
jae
cli
mov
jp
xor
fistps
push
lret
pop
loop
pop
sub
out
scas
and
and
ucomiss
test
adc
daa
js
pop
push
popa
xor
aas
pop
push
cs
pop
fcmovne
js
cmpsb
xor
pop
in
xchg
mov
lret
jb
pop
in
imul
ficomps
inc
out
cmc
sub
push
call
jmp
sarl
or
outsb
popa
and
jbe
call
pop
adc
mov
xchg
sahf
sub
dec
imul
shll
xlat
sarb
pop
cld
xchg
in
push
mov
adc
scas
inc
js
pop
cmpsl
dec
inc
lods
mov
push
icebp
push
add
inc
mov
push
lret
bound
adc
aaa
data16
aaa
stos
rclb
enter
push
mov
pop
fadds
ljmp
outsb
mov
in
xchg
dec
fistps
jns
jb
gs
adc
lret
pop
and
dec
clc
aas
arpl
aaa
jbe
sbbl
aam
cmp
scas
sub
adc
xlat
ret
inc
jge
cld
rcl
pop
outsb
test
subl
sbb
scas
stos
jnp
lret
ja
pusha
sub
out
fcmovnb
decb
xor
xchg
inc
add
sbb
cmpsl
cmp
icebp
movsl
sbb
es
sub
xor
stos
out
sahf
clc
mov
push
out
mov
cmpsb
testl
lods
fldl
roll
sub
or
sub
in
xor
push
xchg
sahf
in
jns
repz
das
jae
mov
push
stos
movsb
jp
mov
jp
outsl
inc
out
movsb
icebp
dec
sarl
cld
xchg
xor
sbb
cmp
dec
test
dec
loope
adc
inc
push
test
movsb
stc
push
test
inc
pushf
aad
jae
cmp
shl
mov
pop
mov
xchg
icebp
adcl
mov
out
loope
test
adc
pop
push
ret
pop
jae
fisttpl
jp
outsb
scas
sub
cmc
lret
cmc
ss
pushf
int3
sbb
cltd
cmp
add
aaa
inc
rclb
cmp
scas
pop
pushf
fisttps
bound
sbb
cmc
dec
andb
or
repz
movsb
jg
sub
shll
xor
out
mov
jo
or
cmp
cmp
loopne
fildll
aaa
push
fwait
and
pop
sbb
std
daa
cmp
stos
inc
popa
inc
push
jae
not
les
repnz
das
pxor
or
xchg
inc
notl
add
lods
imul
repz
pop
shlw
or
shll
push
aad
mov
or
loop
adc
fisubrs
mov
push
imul
scas
fstpt
pop
mov
add
ja
stos
adc
mov
outsl
xor
xchg
or
pop
arpl
pop
and
jmp
or
cmp
and
and
push
cmp
jo
lret
clc
xchg
aas
test
sub
xor
mov
jns
mov
mov
loop
pop
mov
fwait
cmp
jbe
pop
fucomi
pushf
push
cmp
jl
lret
lcall
jnp
mov
jo
vmovdqa
adc
dec
add
inc
loopne
stos
cs
ret
addr16
or
aad
xchg
mov
insl
shlb
je
push
das
dec
jnp
add
xchg
sbb
sbb
bound
gs
sub
mov
int
sub
pop
jmp
add
cmp
cmp
fisttps
cmp
or
mov
jno
andb
daa
mov
int3
addl
in
out
sub
scas
xchg
dec
testb
sti
mov
jle
fidivs
push
loop
push
mov
mov
add
subl
and
jmp
or
mov
mov
push
push
or
lds
and
add
inc
mov
jmp
out
inc
cmp
mov
aas
gs
push
mov
lods
stc
mov
xor
jae
xor
lock
and
jno
sbb
mov
and
sub
inc
add
jge
rolb
inc
mov
mov
enter
mov
stos
adc
subb
pop
cltd
movsl
sbb
fcoms
push
jmp
cmp
mov
in
or
fstl
nop
rcrb
adc
cmp
shlb
std
or
aam
push
ret
jle
push
pop
mov
sbb
jnp
sbb
daa
sahf
popf
cld
dec
cli
ljmp
push
xor
ljmp
mov
cmp
pop
mov
lret
dec
dec
fstpt
lock
ret
mov
jecxz
pop
and
add
bound
addr16
imul
inc
mov
or
jmp
lret
call
and
jg
bound
pusha
sbb
push
push
int
fidivl
lret
adc
subb
adc
adc
ds
jo
test
mov
cltd
test
inc
fs
pop
fidivl
ja
cwtl
stos
fwait
je
clc
jmp
add
add
push
jl
stc
mov
es
lret
mov
pop
or
mov
sbb
jg
stos
lret
sahf
mov
dec
dec
add
lock
xchg
inc
ljmp
test
lret
lret
jle
add
mov
mov
inc
sbbl
hlt
xlat
pop
cltd
xor
mov
push
sbb
ljmp
je
mov
mov
xor
repz
cmp
jo
jno
mov
arpl
int
pop
xor
rcr
int
cli
mov
data16
loope
test
ljmp
adc
mov
sbb
insb
popa
subl
cmp
insb
jecxz
and
push
xor
dec
mov
gs
mov
sbb
test
int3
jge
mov
shl
cli
inc
cltd
sbb
ret
ret
fsubs
cmpsb
insb
mov
cmp
dec
repnz
icebp
xchg
xchg
jmp
inc
repz
push
adc
pop
outsl
orl
mov
xor
mov
ret
mov
into
mov
push
pop
loop
into
icebp
imul
in
jp
jb
sbb
add
mov
sbb
push
test
fwait
pop
ret
or
aas
jnp
cmp
pusha
in
jns
adc
inc
sti
dec
addr16
aad
push
stos
sbb
cmp
lret
sti
add
and
cmpsl
jo
je
insl
and
decl
imul
les
push
inc
add
cmpl
pop
scas
pop
leave
aam
push
fbld
adc
dec
scas
xor
arpl
xor
adc
push
cmpsb
jb
mov
je
jecxz
push
out
jl
jb
stos
jno
arpl
sub
lret
push
mov
cmp
popa
jge
lcall
push
icebp
pop
sub
hlt
lods
ss
cmp
aaa
push
out
insb
mov
push
xchg
into
sbb
ja
hlt
out
pushf
cwtl
clc
ret
nopl
lea
and
xor
inc
or
jo
xchg
int
nop
push
mov
xchg
push
sarb
push
icebp
pusha
pop
loope
and
jbe
or
div
jmp
adc
rolb
mov
pop
scas
mov
aam
outsl
jge
mov
mov
cmp
in
cmp
push
cmp
adc
pop
inc
in
add
and
out
mov
fdivp
leave
stos
test
jns
dec
pop
or
jno
fwait
jbe
lahf
shr
jle
mov
jl
jg
or
stc
xor
or
subl
jb
and
leave
push
sub
loope
pushl
movsl
iret
xchg
scas
cmp
dec
pop
adc
mov
testl
cmpsb
sbb
push
jb
test
aam
xlat
dec
ret
adc
mov
mov
lods
jmp
icebp
and
pop
push
js
std
add
mov
in
cs
mov
ja
cs
push
push
and
scas
dec
repnz
pusha
adc
imul
popa
jne
mov
int3
imul
stc
xchg
int3
ret
xor
in
pop
dec
cmp
bound
mov
call
in
xchg
data16
jo
sub
dec
dec
mov
dec
sub
mov
mov
rcrb
add
pop
jo
inc
or
push
cwtl
lods
xlat
push
mov
repz
xchg
xchg
add
mov
sahf
ss
mov
rolb
inc
incl
mov
in
mov
imul
rcrl
mov
adcl
dec
add
sub
dec
cmpl
pushf
shrb
sbb
dec
jp
ret
imul
fs
data16
jle
in
mov
mov
mov
lock
pop
pop
icebp
mov
jnp
pop
mov
or
xchg
not
stos
es
cmp
sbb
xchg
aas
leave
stos
push
push
sub
xchg
inc
sub
data16
es
push
pop
adc
das
sub
xor
sbb
or
dec
add
jae
pop
stc
and
sbb
push
sbb
popf
xor
pop
sahf
cmp
push
cmp
or
imul
lea
dec
xchg
sbb
fwait
pop
ja
fcoml
std
loopne
adc
sti
shll
xor
lret
jae
jmp
and
cli
jno
shll
inc
bound
out
push
lcall
push
stc
cmp
and
mov
scas
fidivl
lcall
cwtl
jle
into
int
add
adc
mov
cwtl
lods
test
lret
dec
or
rclb
out
mov
jnp
mov
dec
icebp
pusha
mov
and
mov
xor
cld
shl
and
test
fcomps
cmp
sbb
mov
test
cmp
repz
out
mov
pusha
in
mov
lods
push
sti
fsubrs
cmp
jmp
pop
lock
out
jmp
outsb
ja
lahf
leave
jb
lret
cmp
cvtps2pd
and
mov
int
out
cmc
xchg
rcll
cmp
or
lret
sti
jnp
mov
jecxz
inc
adc
enter
in
xchg
mov
repz
ss
sti
push
mov
pop
cmc
inc
and
push
arpl
int3
push
sbb
or
dec
cwtl
push
insl
lret
mov
sbb
inc
loopne
inc
dec
jecxz
imul
subl
dec
pop
jnp,pn
or
mov
cmp
dec
fcoms
pop
pop
and
dec
inc
gs
cmp
lea
push
dec
bound
mov
push
push
sbb
int
cld
xchg
mov
mov
hlt
addr16
test
xchg
jg
stos
es
pop
in
pop
xchg
jmp
inc
frstor
xlat
outsb
push
push
enter
ret
push
jmp
or
pop
lock
xor
lods
ja
cld
ja
pop
scas
push
stos
jmp
mov
leave
outsb
stc
xor
mov
lds
jb
adc
lahf
push
jg
fiaddl
popf
insb
ds
push
insb
cmp
fildl
lcall
xchg
xchg
mov
mov
jmp
scas
mov
sub
lds
dec
add
fldenv
cmp
mov
icebp
outsl
sub
dec
mov
ljmp
inc
ficoml
cld
and
fldl
fnstcw
sbb
leave
fstps
jle
daa
das
inc
es
mov
cmc
addr16
fbld
popa
lods
rorb
mov
insb
cmpsb
jo
roll
cmp
lds
dec
pusha
mov
dec
dec
pop
repnz
arpl
cmp
or
in
nop
aam
dec
cmp
xor
mov
and
sub
mov
xor
pop
jno
aam
dec
cld
lods
shrl
push
shrl
clc
pop
mov
popf
mov
cmp
lods
jne
fbld
and
clc
mov
push
lret
repz
pop
push
mov
mov
and
mov
out
leave
popf
xorb
sbb
xchg
mov
rolb
imul
and
inc
lock
or
xchg
pop
scas
adc
arpl
pop
test
rclb
repz
es
mov
xchg
shlb
fisttps
adc
movsb
addr16
mov
inc
and
loop
cwtl
xchg
rcrb
mov
insb
out
rcrl
adc
fistpl
mov
inc
sti
int
push
sbb
sbb
jl
icebp
prefetcht0
pop
lods
xchg
std
loop
sahf
or
push
idivb
jns
push
call
out
and
fistl
jge
int
jae
sub
hlt
or
fadd
in
pop
loop
lea
movsb
cld
cmp
int3
inc
cs
roll
mov
iret
adc
add
and
fildll
and
or
cmpsl
out
inc
mov
xchg
pop
rcrb
add
push
pop
incl
mov
cld
fcomps
rcrl
int3
mov
outsb
xor
lea
fisubs
popa
xchg
mov
sub
aad
jg
cmp
cmc
fldenv
insl
cmp
dec
push
movsl
ret
xchg
ljmp
inc
inc
repnz
pop
mov
xchg
clc
inc
fs
push
mov
and
pop
jo
loope
xor
pop
das
aas
adc
jns
push
pop
loope
nop
pop
andb
lret
aam
pop
cld
les
daa
pop
fmuls
mov
dec
sub
inc
aam
ret
pop
push
cmp
test
mov
pushf
lods
sub
js
inc
pop
mov
jae
lret
and
and
and
jns
je
pop
xor
orb
sub
and
addl
addr16
js
scas
xchg
mov
hlt
fdivrl
xchg
sbb
aaa
into
inc
push
jmp
fs
mov
cmc
mov
and
xor
push
out
sarb
popa
hlt
or
mov
xchg
jo
cld
test
xor
insb
lods
cmpsb
int
in
stos
jb
stc
push
cld
xchg
icebp
cwtl
xlat
js
imul
xor
xchg
leave
pop
adc
jnp
dec
movsl
aas
sub
bnd
xor
mov
imul
divb
xsha256
cmpsb
push
lret
lret
cmpsb
dec
aad
mov
pop
push
loope
mov
movsl
jl
pop
fwait
pushf
mov
fstpt
fcmovnb
test
repz
cmpsl
popf
arpl
call
cld
pop
mov
xchg
pop
dec
xchg
dec
lods
dec
mov
cwtl
ret
sbb
mov
not
imul
add
or
es
push
dec
mov
ja
sub
lods
pop
sub
mov
cmp
leave
xchg
xor
cmp
and
jbe
dec
outsl
cmp
mov
andl
jb
cwtl
inc
repnz
mov
sti
add
sbb
mov
inc
adc
xor
mov
mov
mov
jae
pop
movsb
jl
xchg
es
pop
sbb
xor
leave
mov
mov
test
xchg
scas
push
leave
sbb
jmp
icebp
mov
mov
out
rol
fdivs
test
xor
dec
lahf
jb
dec
pushf
fdiv
frstor
cmpsb
adc
jno
adc
dec
or
pop
movsb
inc
mov
aam
lock
clc
cli
jno
testb
daa
ljmp
shrl
pop
push
cmp
lret
push
nop
or
test
sbb
aas
lcall
popa
lret
leave
adc
clc
or
push
push
jbe
sub
xchg
sub
dec
push
popa
xorl
cli
loope
lret
jae
movsl
sbb
pop
pop
insb
add
mov
and
stos
mov
xchg
ret
dec
nop
inc
xchg
sarb
in
fcomps
mov
mov
inc
push
sbb
xchg
out
dec
pushw
ja
les
xchg
imul
cmp
pop
dec
sub
stos
dec
out
jns
cmp
add
inc
into
ficomps
popa
clc
push
jle
xchg
mov
outsb
adc
mov
and
mov
out
push
xchg
stos
push
jae
push
xchg
addr16
stos
mov
xchg
xlat
subl
dec
loop
xor
xchg
jns
pusha
lahf
arpl
inc
fmull
test
hlt
addb
push
sbb
inc
cmp
lea
adc
mov
mov
pushf
mov
adc
or
sbb
imul
cmp
ds
dec
fcoml
inc
adc
or
fwait
mov
incl
int3
bound
cmp
cmp
mov
cmp
add
lret
xor
sbb
pop
mov
and
and
inc
icebp
xchg
xor
mov
pop
ss
outsl
mov
sbb
outsl
pop
add
sub
sub
popf
push
notl
int3
push
ds
inc
aas
inc
or
pop
sbb
pop
mov
shlb
pop
mov
fidivs
push
push
outsl
bound
std
mov
inc
fsubrl
hlt
cmp
jge
bound
shrl
mov
pop
mov
or
les
daa
repnz
jmp
pop
xchg
lods
and
mov
cli
or
and
adc
cltd
mov
pop
fsubl
hlt
xor
xor
mov
bnd
jle
inc
push
mov
orl
dec
add
fldcw
cmp
shr
push
rcrl
mov
insl
inc
stos
sahf
pop
xchg
add
lret
sbb
jo
cltd
xchg
cmovle
stc
push
adc
fidivl
mov
negb
sbb
dec
mov
daa
lcall
xor
fsubr
into
cmc
mov
sub
shrl
scas
push
es
xor
sbb
icebp
clc
cld
xor
sub
mov
repz
je
into
movsl
mov
into
mov
lods
xor
jne
pusha
pop
test
add
sbb
cwtl
sbb
pop
fwait
popa
pop
negb
das
fnstenv
mov
cmp
sub
pop
daa
jge
xchg
jno
out
jge
jbe
fnstcw
or
or
xor
sub
das
fldcw
xchg
bnd
pop
es
mov
daa
add
fisttpl
and
jne
push
or
adc
jl
lods
ljmp
xchg
aas
shlb
insb
sbb
arpl
sub
lock
inc
and
dec
pop
lods
jmp
jg
fwait
mov
jmp
inc
add
mov
lock
int3
lods
mov
push
lcall
ja
stc
add
mov
sub
xchg
imulb
jp
lahf
testl
fwait
jg
adcl
orb
or
mov
inc
icebp
sub
rcll
iret
mov
loop
scas
push
addr16
aad
ja
fldcw
sub
fimull
call
shl
push
jl
dec
add
pop
lcall
push
loopne
mov
jge
jmp
sub
in
sarl
aaa
jl
cmp
pop
jo
xchg
push
les
xlat
sbb
lds
in
sbb
mov
cmp
ss
sbb
stos
test
cli
jmp
add
mov
xchg
clc
sahf
or
inc
sbb
cmpsl
call
sub
popf
loope
inc
mov
aas
cmp
mov
mov
dec
jo
cltd
lods
cmp
inc
not
push
lds
mov
add
pop
lcall
adc
jns
ror
push
add
ja
aam
js
jno
dec
jae
mov
scas
adc
cmp
pop
push
ds
cmp
icebp
mov
imul
add
es
fs
pusha
aad
mov
sbb
xsha256
cmpsb
xlat
mov
jp
adc
sbb
mov
sub
mov
aaa
add
popf
pop
jle
pop
mulb
fists
mov
out
movsl
dec
xchg
and
jne
clc
repz
mov
xor
jmp
mov
test
shrb
insb
out
mov
ret
pop
in
cwtl
test
loope
nop
xor
cmp
mov
sub
je
cs
sub
inc
sbb
dec
gs
sub
dec
addb
mov
jmp
adc
xchg
mov
fsubl
or
add
cltd
inc
xchg
xchg
in
call
loope
dec
gs
mov
js
sub
in
sbb
dec
loopne
cwtl
nop
insb
inc
in
xlat
mov
push
push
movsl
mov
aas
fidivrs
test
scas
push
cmp
adc
sti
bound
popa
adc
jne
pushf
cmc
imul
or
pop
leave
add
insb
out
outsb
xor
jge
outsb
add
push
mov
cmp
sbb
mov
loop
mov
adcl
mov
jae
xor
adc
mov
sbb
cld
xchg
xor
pop
push
je
fcompp
push
push
xor
inc
mov
movd
out
mov
std
jg
je
inc
mov
mov
stos
ss
repz
mov
stos
rcrl
inc
imul
jle
sub
lahf
add
shr
stos
inc
sbb
inc
test
enter
push
test
jne
adc
jno
pop
mov
dec
sti
mov
adc
sbb
sub
imul
pop
loope
add
inc
fildl
mov
xchg
test
jb
sbb
pushf
sbb
sarb
push
out
out
pop
mov
out
sbb
or
adc
pop
int
cld
push
or
out
mov
insl
decl
in
sub
leave
pop
popa
adc
sub
push
dec
dec
loop
add
push
dec
in
and
js
inc
out
xchg
pop
mov
in
pushf
repnz
ret
in
clc
push
add
stc
mov
scas
out
cmp
cmp
or
rorb
loope
jo
xchg
lret
push
xor
test
js
push
mov
shrb
pop
hlt
les
xor
sbb
jg
aaa
pop
scas
loope
rolb
pop
icebp
mov
rclb
js
test
fbstp
mov
fldenv
test
lea
out
in
dec
or
jb
lds
dec
les
icebp
ljmp
xchg
mov
stos
push
repnz
mov
jg
and
ja
inc
push
js
jns
sbb
xchg
arpl
out
xchg
lock
addr16
or
arpl
test
shll
add
inc
cmp
and
adc
or
cmpsl
jl
fdivrs
xchg
sub
cld
mov
jae
data16
fisubrs
sbb
or
enter
dec
adc
mov
cmpsb
and
pop
or
nop
in
dec
pop
lock
mov
testb
fnstsw
ret
int3
out
dec
jl
loop
aas
or
call
ja
dec
out
rorl
in
cmp
mov
js
push
lahf
icebp
or
lret
call
push
jbe
ss
icebp
jae
enter
add
js
sbb
add
dec
mov
sub
std
xor
push
mov
pop
push
test
push
ds
sub
xchg
xchg
out
pop
and
cmpsb
push
ja
mov
fldcw
inc
push
cli
in
adc
or
aas
in
dec
addl
call
imul
jnp
pop
lds
test
outsl
push
outsl
loop
mov
cmp
cmc
gs
popf
xchg
enter
mov
cltd
lods
xchg
imul
dec
adc
cmc
pop
clc
sbb
add
iret
push
push
aad
dec
xchg
jle
js
lcall
scas
fwait
sbb
mov
push
nop
xor
mov
test
dec
pop
jno
xlat
repz
mov
fnop
pop
jge
pushf
jl
mov
cmp
add
lea
pop
pop
add
lcall
ss
inc
fcmovu
and
pop
push
jl
xor
mov
enter
mov
lock
xchg
daa
outsl
test
fwait
pop
add
out
mov
outsb
add
ljmp
pop
jp
sbbb
mov
dec
hlt
add
es
cmp
dec
popa
clc
sbbb
pushf
or
mov
mov
shll
es
mov
cmp
xor
add
arpl
mov
or
test
es
and
and
jle
inc
pop
pop
xor
mov
push
popf
test
push
rorl
ljmp
jbe
das
xchg
xchg
or
jp
cmc
in
jge
inc
xchg
adc
or
sub
ficoms
xor
shrd
adc
sbb
add
add
in
icebp
stos
cmp
inc
in
adc
fistps
cmp
aad
and
pop
or
sub
and
subb
fsubs
inc
fnstcw
mov
rcrb
popa
add
xor
daa
icebp
jle
push
lods
mov
hlt
add
insb
or
add
push
mov
test
cmp
lahf
xor
pop
int3
movsb
es
mov
xlat
jecxz
adc
jge
jecxz
sbb
or
in
leave
sub
inc
pop
mov
rcll
movsl
push
cmp
adc
imul
push
cltd
pusha
sub
es
xchg
lahf
adc
adc
fisubrl
leave
repz
pop
lock
sub
mov
jle
sbb
pushf
pop
shl
divps
cmp
push
push
sti
mov
addr16
push
push
jae
xchg
outsl
rclb
hlt
sub
subl
jns
add
lods
rorl
add
pop
dec
pop
stos
sbbl
adcl
sub
sbb
decl
xchg
adc
cmp
xlat
icebp
aam
es
dec
lods
ljmp
pushf
sub
mov
or
push
mov
sbb
mov
cmc
cmp
lods
push
inc
mov
push
inc
sub
outsl
inc
movsl
and
add
xchg
xchg
and
imul
pop
pop
inc
idivb
sub
push
gs
inc
sub
js
push
inc
cwtl
push
sbb
adc
mov
adc
mov
arpl
int
aam
aad
js
jge
jp
sub
imul
cmp
data16
lods
inc
stos
xor
mov
int3
arpl
neg
and
xchg
bound
fs
pushf
dec
lods
mov
sub
jmp
sbb
inc
and
rcrb
mov
arpl
xchg
ficoml
add
ja
cmp
aam
fildl
mov
jnp
jne
mov
lahf
mov
adcl
jae
or
inc
aam
gs
mov
inc
cmpsl
inc
dec
subl
sbbb
lret
cld
dec
inc
mov
mov
mov
mov
shrl
rcl
cmp
adcb
sbbl
out
out
movsb
bound
push
and
int3
std
ja
xor
jl
mov
into
js
jbe
rcl
push
in
xchg
dec
mov
rolb
mov
or
pop
call
cmpsl
dec
jae
cmc
mov
inc
aas
push
jg
and
mov
adc
test
sub
sub
mov
les
fiadds
std
in
dec
pop
outsl
and
inc
iret
data16
stos
push
jmp
sub
je
lahf
ds
adc
lea
fisubs
push
cmpsb
cli
pop
nop
jmp
push
out
and
dec
and
push
vpsrlq
xchg
xchg
fsubrl
push
loop
stc
sbb
inc
sbb
sbb
sub
sbb
out
push
jmp
movsb
imul
in
jl
fstpt
mov
out
mov
fdivrl
adc
popa
cld
cmp
test
lcall
pop
xchg
je
sbb
int
data16
or
les
xlat
push
loope
adc
dec
dec
sti
jo
aam
mov
jne
les
mov
iret
jb
inc
inc
jge
dec
mov
aad
lret
decl
jecxz
scas
mov
add
dec
cwtl
lock
lock
mov
lock
sahf
ret
test
fimuls
xchg
or
push
in
mov
ja
mov
add
mov
push
ss
mov
jbe
dec
mov
insl
popa
mov
jns
dec
mov
stos
inc
or
enter
dec
mov
xchg
mov
mov
sub
xor
xchg
aam
sahf
and
loop
fcoml
inc
push
xchg
jno
shrb
xchg
test
movsl
repnz
sbb
push
push
fmuls
int
call
outsb
mov
fwait
pop
scas
and
xor
add
jmp
lea
popf
popa
bound
xchg
cmp
xor
sub
in
movsl
fstpt
push
inc
ds
ja
in
sub
pop
mov
sti
ret
ss
cmpb
lea
ret
jg
js
sub
cmpsl
cmp
ljmp
sub
xchg
add
rcrl
cltd
pop
into
je
andl
pop
icebp
inc
adc
ss
xchg
mov
dec
test
mov
js
cmc
jmp
mov
jae
jg
mov
lret
lods
ds
pop
push
loop
fdivl
adc
sbb
jg
arpl
sub
mov
popa
xchg
add
mov
mov
fistl
test
js
inc
stos
mov
fwait
and
mov
mov
mov
movsl
lcall
dec
icebp
jmp
and
shl
dec
int3
jge
lock
movsl
cmp
xor
cwtl
xchg
mov
fdivl
xor
in
sub
xor
and
xchg
sti
xchg
dec
xchg
or
jnp
sub
lods
mov
jge
stc
stc
nop
jmp
sbb
inc
nop
pop
pop
dec
xor
inc
and
xor
ror
sbb
pop
je
pop
clc
or
inc
jb
and
xchg
sub
clc
out
test
sub
xor
cmp
jno
jl
xchg
ret
add
loope
icebp
inc
mov
adc
icebp
jb
and
nop
cmp
dec
lock
nop
inc
fiadds
outsb
push
mov
mov
dec
sbb
mov
test
jg
inc
push
mov
mov
addr16
and
dec
inc
in
push
aaa
cs
jge
lcall
ss
push
pop
push
jmp
sbb
out
int
pop
scas
das
insb
mov
add
push
jne
shr
addb
jp
cmp
cltd
xor
mov
xor
mov
mov
icebp
in
ret
ret
dec
in
mov
jmp
idivb
pop
imul
daa
data16
scas
call
jbe
hlt
mov
ret
ljmp
ss
sbb
incl
lods
hlt
lahf
ss
inc
lahf
xor
mov
xor
mov
scas
sub
mov
pop
add
mov
jp
mov
mov
lahf
cmp
jl
nop
sub
mov
das
dec
stc
xchg
ja
dec
fcmovnbe
cwtl
sbb
and
pavgw
xor
bound
cmpsb
xlat
repz
and
sbb
pop
out
add
and
mov
jg
cmp
rolb
jo
xchg
in
loope
mov
push
jmp
xchg
add
inc
mov
xchg
sbb
lea
inc
sti
cmp
xchg
or
cmp
jg
addr16
push
xchg
mov
add
stc
xor
out
adc
enter
sbb
stc
or
sub
cli
enter
stos
xor
mov
inc
inc
repnz
mov
mov
call
daa
or
mov
xor
xchg
add
sub
es
outsb
sub
mov
fiaddl
outsl
add
lds
push
data16
inc
cmp
push
mov
mov
outsb
out
add
lret
vpshaw
cwtl
stos
push
mov
repz
sbb
push
mov
stc
inc
fadds
fstpt
hlt
or
xor
js
push
add
pop
or
jecxz
mov
cmp
ss
xor
pusha
xchg
dec
push
andb
das
cs
popa
mov
lcall
pushf
mov
mov
sbb
cmc
rep
mov
mov
and
lds
adc
lods
inc
in
cmp
rolb
out
add
je
and
lea
pusha
idiv
mov
push
mov
ret
out
cmc
jg
es
sbb
fdivl
stc
nop
into
in
inc
push
sti
arpl
dec
adc
xlat
jns
jge
mov
rep
and
jge
xchg
xchg
leave
mov
or
sbb
popa
and
adc
aas
outsl
xor
gs
xchg
stos
lcall
fcmovne
fisttps
jnp
and
or
stos
and
dec
xchg
rclb
xchg
sti
insb
arpl
xchg
scas
lea
push
mov
mov
sbb
aaa
pop
imul
test
lahf
adc
push
pop
stos
es
imul
dec
mov
test
ret
repz
mov
push
insl
or
ljmp
stc
push
enter
jp
push
icebp
out
and
sbb
sub
push
jb
cld
pop
sub
mov
incl
mov
push
jmp
or
jb
xchg
mov
xor
inc
faddl
xchg
ficomps
pop
inc
adc
es
mov
mov
ret
std
dec
pop
and
out
or
insb
sub
cli
xchg
cmp
jg
dec
out
mov
in
cmp
mov
sub
rorb
in
pop
dec
inc
mov
mov
notb
out
ret
xor
fs
jge
mov
sbb
add
sub
jg
pop
shlb
add
fidivl
xchg
imul
sahf
xchg
push
insl
inc
dec
mov
cmc
sbb
cmp
jmp
sbb
hlt
dec
cmp
mov
xlat
adcl
jno
xchg
sahf
mov
and
cmp
sbb
bound
inc
xchg
fsubrs
mov
jno
mov
push
or
push
mov
mov
popl
xlat
mov
push
test
sub
add
das
inc
mov
bound
mov
sub
stos
jg
mov
mov
mov
xchg
sbbl
mov
sbb
popf
das
hlt
imul
mov
add
std
push
dec
mov
aad
out
mov
xor
push
push
sahf
push
outsb
cli
push
mov
dec
mov
mov
push
test
loop
mov
ja
ljmp
out
jo
in
mov
ja
fisubl
hlt
inc
enter
push
and
jae
fimull
mov
jae
test
inc
xchg
adc
mov
xchg
jle
push
xor
repnz
add
dec
xchg
and
push
xchg
add
adc
sub
cmpsl
ret
negl
lret
push
dec
adc
cld
pop
mov
vmulss
js
mov
sbb
daa
arpl
xchg
jne
xor
add
popa
xchg
fildll
add
xor
mov
xchg
loop
out
rol
aas
in
test
adc
or
push
fidivs
add
fstpt
shlb
push
imul
cmpsl
cmp
fmuls
or
loop
jno
dec
out
sbb
in
in
xchg
loope
out
fwait
inc
mov
out
inc
jae
stos
jne
pop
lret
lret
add
push
ja
jo
or
push
in
add
imul
add
movsb
lcall
xchg
and
repz
xchg
or
sbb
sbb
push
ret
adcb
lret
int
and
das
rcrl
mov
icebp
cmpsl
mov
xor
xchg
jns
add
xor
test
mov
mov
add
insb
push
mov
addr16
pop
jns
shrl
mov
pop
repnz
adc
sti
xchg
and
jmp
mov
jb
cmpsl
ds
jns
ret
out
rcl
mov
push
daa
dec
icebp
lcall
dec
stos
out
push
out
or
stos
sub
fbld
xchg
popf
test
dec
pop
mov
clc
iret
jnp
movsb
push
pop
lcall
adc
mov
lahf
xchg
push
xor
icebp
rcll
and
xor
ret
pop
lock
jnp
dec
aam
pop
iret
mov
lea
jg
xlat
mov
mov
cs
or
sti
clc
sbbl
mov
mov
mov
subl
jns
adc
jecxz
sbb
enter
cmp
pop
mov
pop
call
int3
dec
fsubrl
pop
or
add
xchg
test
shl
inc
into
fnstsw
les
mov
enter
popa
clc
push
lock
repz
xlat
push
ljmp
cltd
mov
rsqrtps
lcall
cmc
jl
and
rcrb
xorl
dec
aas
or
scas
pop
xor
in
inc
out
out
popf
dec
imul
clc
xchg
imul
sub
clc
jbe
cmpsb
lock
std
es
outsl
pop
xchg
mov
lods
push
add
movsb
mov
fwait
lock
stc
xchg
push
jl
movsl
dec
cmc
ds
or
mov
or
xor
mov
mov
xor
rorb
insb
sub
adc
movsb
test
nop
jmp
lods
fwait
push
inc
iret
mov
push
je
icebp
rorl
mov
shlb
pop
mov
sub
test
dec
out
xchg
dec
imul
fxch
pop
mov
or
dec
pop
mov
pushl
aas
jnp
add
popa
mov
inc
jl
xlat
mov
pop
inc
lods
js
and
cmpsl
add
jno
inc
cmp
jbe
cli
xchg
int3
int
in
jge
jbe
ja
and
push
push
mov
or
loopne
dec
int
test
push
leave
mov
lea
aad
fsubl
inc
arpl
cmc
pop
out
lds
xor
shll
add
aam
xor
adc
add
pusha
test
gs
cwtl
jnp
dec
jp
fstl
cmpb
cmp
fs
mov
cmp
repnz
or
mov
aad
imul
inc
mov
xchg
add
adc
fsubrl
xor
test
testb
cs
cltd
lods
cld
ds
dec
js
subb
cltd
or
xor
jp
adc
add
xchg
movsb
inc
push
mov
add
or
enter
pop
mov
lret
mov
rolb
lret
loop
pop
mov
ds
jp
pop
push
cmp
pop
sbb
pushf
iret
mov
iret
or
dec
stos
lea
push
in
add
mov
jne
or
fsubl
inc
or
and
inc
xor
js
aad
and
enter
repz
orl
lret
or
call
sbb
mov
mov
mov
int
pop
pop
mov
mov
lea
bound
sub
lret
in
sti
cmp
daa
and
scas
ja
sbb
lds
je
outsl
cltd
lea
push
fisubs
shll
mov
cmp
sbb
cmpsl
pusha
jbe
jl
inc
jb
scas
lds
inc
lcall
pop
dec
push
addr16
fbstp
inc
mov
add
sbb
add
fdivrs
cwtl
and
rorb
cwtl
jmp
rcl
movl
cmpsb
fbld
lds
adc
sbb
lcall
jp
adc
push
jge
movsl
cmp
adc
mov
repnz
es
or
int3
adcb
mov
movsl
pop
xrelease
gs
sub
sub
sub
clc
cli
mov
mov
cmp
aad
ljmp
jg
pop
and
dec
pusha
testl
pop
cmc
cmpsl
lods
test
imul
jl
shr
fists
aad
add
xor
mov
lods
inc
pop
cwtl
das
mov
dec
mov
cmp
aad
adc
add
lods
dec
popa
rcr
pop
test
or
mov
adc
mov
xchg
dec
adc
addl
xchg
sub
lret
push
ds
call
xor
cmpl
add
into
jmp
in
jp
insl
push
in
sahf
leave
test
jno
pop
mov
mov
fistpl
js
or
in
mov
sbb
add
add
xor
loope
iret
push
movsb
cmp
je
adc
cli
or
xor
mov
into
cmc
push
jg
and
lret
xchg
rorl
int3
xlat
mov
insl
add
push
jp
mov
mov
xchg
stos
cmc
push
pop
roll
xchg
jnp
mov
mov
inc
out
stos
add
addr16
xchg
sub
pop
rorl
add
mov
mov
pop
out
dec
adc
or
fcoms
add
push
aas
mov
sub
and
xchg
sbb
arpl
loopne
and
pop
add
popf
lret
or
xor
daa
aas
inc
sti
push
add
inc
fldcw
or
push
cmp
lds
push
dec
rcl
aad
add
jl
loop
push
jnp
test
sub
pop
icebp
or
stc
sbbl
push
out
pop
in
push
inc
stc
push
mov
xchg
pop
in
sbb
mov
dec
add
lea
mov
or
sbb
sbb
sub
icebp
mov
add
push
sub
gs
inc
aas
add
xchg
repnz
fcmovnb
and
sbb
inc
dec
loope
inc
cmp
popa
cmp
stos
clc
mov
fcmovnb
pop
das
jae
scas
xor
inc
sbb
aaa
push
xchg
pop
pop
addr16
repnz
std
jp
xchg
test
inc
cld
les
outsl
lods
or
pusha
jl
sub
pop
lcall
adc
sarb
xchg
pop
mov
fisttps
xchg
loope
les
rorb
push
xor
ss
iret
jle
pop
daa
push
cli
xchg
mov
fwait
test
addr16
adc
pop
je
movsb
subb
or
test
jge
pushf
imul
jnp
scas
and
xchg
clc
mov
mov
in
fsubl
aad
mov
aad
adc
xchg
lds
insl
loopne
gs
jne
movl
jp
push
mov
mov
les
add
add
sub
jl
push
pop
aam
lahf
push
xor
je
loop
dec
fadds
cmpsl
das
loopne
jns
jno
shlb
aas
push
lahf
xor
mov
pop
popa
jnp
push
xor
and
daa
cmp
movsl
cld
cmp
call
cmp
adc
test
shll
std
cmc
xchg
xchg
test
leave
sub
cmp
and
fimuls
leave
jg
jb
pushl
call
pop
stos
inc
push
fsubl
js
inc
fisubrs
test
mov
insb
push
andb
mov
inc
sbb
xchg
and
repnz
fisttpll
daa
adc
push
adc
rcll
addr16
push
lret
outsl
scas
xor
mov
loop
and
mov
sbb
and
call
mov
sbb
pop
ds
jb
inc
pop
mov
aad
lret
loop
cmp
dec
mov
or
or
mov
sub
xchg
xchg
xchg
sahf
mov
movb
sub
jne
jge
or
or
insb
aaa
sub
pop
fs
fstpl
pop
ret
mov
mov
repz
sbb
push
in
jg
inc
cmp
cmp
adc
int3
pop
in
repnz
pop
nop
pop
in
adc
std
lock
push
cmpsb
pop
pop
sbb
xor
sub
out
mov
jecxz
dec
dec
inc
xchg
sub
clc
inc
int3
leave
xor
test
mov
and
lcall
cli
adc
mov
mov
sbb
pop
jbe
inc
push
imul
aam
pushf
mov
cmc
xor
jne
adc
sbbl
popa
jb
outsb
loop
pop
jno
repnz
or
and
insb
or
mov
inc
les
mov
push
jmp
mov
pop
jl
jmp
mov
cmp
test
jge
push
loope
fistpl
mov
xchg
test
ret
ljmp
das
lret
jb
std
mov
mov
and
jp
cmp
or
fistpl
sub
and
nop
scas
push
sub
cmp
insb
mov
push
in
push
bnd
aaa
pop
add
sbb
aam
xor
sub
sti
nop
hlt
lea
fdivrp
shll
mov
mov
sub
in
adc
cmp
in
je
outsb
jl
xchg
lock
dec
inc
int
addr16
push
xchg
enter
mull
cmp
push
inc
in
push
sub
out
lods
add
xchg
pop
imul
movsl
test
add
cmp
mov
negb
push
hlt
dec
adc
jecxz
popf
adc
imulb
push
sub
pop
ss
hlt
lods
inc
es
clc
push
lds
dec
mov
bound
popf
outsb
xor
ljmp
or
into
push
dec
xchg
push
inc
sub
adc
cmp
imul
pop
push
pop
mov
loope
shr
fldcw
adc
jns
repnz
xor
test
or
mov
pop
aas
jne
clc
es
loopne
adc
inc
shlb
xlat
pop
jle
mov
fisubs
sbbl
test
ds
jo
hlt
leave
inc
mov
dec
pop
outsb
xor
cltd
xchg
push
aas
push
push
clc
fwait
popa
push
inc
andb
add
arpl
call
lds
xchg
mov
in
je
in
lret
data16
jnp
xlat
mov
stos
fwait
insb
imul
gs
in
pop
pop
loopne
iret
fnstsw
pop
insb
test
and
fimuls
xchg
repnz
cltd
je
add
push
addb
js
fdiv
and
xchg
push
mov
add
or
mov
adc
movsb
pop
add
push
outsb
xor
cmp
xchg
dec
push
fnstenv
and
inc
sti
xchg
mov
rorl
ds
adc
push
movsl
mov
mov
js
inc
cmp
jecxz
repnz
icebp
sub
mov
pop
dec
loope
mov
push
push
pop
sbb
pop
and
xchg
push
mov
push
sub
jmp
or
rcrb
aas
pop
popa
fmuls
xchg
test
sahf
xor
sar
lock
aaa
stos
cmp
inc
push
xchg
scas
cmpsl
movsl
inc
or
int
push
dec
ficomps
test
pop
repz
pop
imul
cmp
lock
dec
lock
inc
stc
adc
add
rcrb
cmp
test
pop
jb
xor
popa
jge
sub
cmpsl
fidivrs
pop
data16
stc
mov
bound
xchg
cmp
movsl
iret
xchg
andb
fwait
pop
shrl
cltd
sub
je
popf
movsl
xor
push
je
insb
pusha
lods
sbb
mov
mov
into
add
pop
in
icebp
dec
cmp
jmp
jecxz
or
cmpsl
je
sarb
in
mov
mov
daa
adcb
dec
fcoms
push
inc
std
adc
push
sti
mov
in
cli
sbb
xor
xor
ljmp
cmp
lods
or
ds
pop
mov
mov
adcl
mov
call
sbb
sub
add
in
dec
or
mov
mov
sbbl
dec
scas
cli
lds
sub
jge
and
sahf
add
cld
rorb
shlb
cmp
test
dec
push
lret
loop
add
jbe
push
push
in
rolb
sub
dec
fs
xchg
adc
add
sarb
std
lock
loope
cli
lcall
and
lcall
pop
add
inc
mov
mov
jmp
movsl
cmp
ret
jae
repnz
maskmovq
divl
adcl
sub
lahf
lahf
xor
shlb
mov
mov
call
cmpsl
push
and
xchg
rolb
jg
sub
nopl
movsb
enter
push
or
mov
push
in
xor
scas
inc
es
aas
mov
int3
jg
and
sahf
mov
mov
mov
jp
jbe
fdivl
jmp
ja
and
bound
jl
fadd
fnstsw
push
call
shll
mov
push
test
adc
jg
nop
or
popf
sub
sbb
shll
xor
loop
insb
pop
scas
add
pushf
mov
out
stos
cmpsl
inc
fstp
mov
adc
sbb
push
test
sub
jge
or
pushf
stc
xchg
fisubl
or
lods
lods
lret
fwait
popf
roll
sub
lea
enter
insl
shlb
or
mov
nop
mov
jp
jg
shr
add
cwtl
cwtl
inc
push
fsubl
movsl
mov
stos
decb
xchg
xor
dec
mov
pop
xor
pop
std
outsb
popf
pop
push
les
ret
mov
outsb
dec
lcall
aad
stc
ret
sbb
push
lahf
ss
and
std
and
cmpsl
or
inc
daa
js
cmp
push
push
xchg
inc
xor
test
popf
lods
sbb
std
mov
push
xchg
mov
mov
inc
xchg
jg
bound
ja
cmp
imul
xor
cmpsl
arpl
mov
cmp
push
jo
rorl
out
mov
push
xchg
add
xchg
push
jno
int
mov
repnz
inc
std
orb
mov
add
xchg
xor
cli
xlat
sub
push
mov
dec
pop
outsb
shrl
push
inc
mov
jne
cs
test
aad
xor
out
jo
sbb
setp
jg
cmp
sbb
hlt
pop
cmpsl
ds
adc
push
sbb
pop
inc
call
dec
dec
hlt
mov
mov
inc
xlat
or
lods
sti
icebp
xor
mov
push
or
lcall
cltd
cmc
inc
push
push
inc
push
push
mov
xor
push
inc
cld
push
stos
out
ss
and
mov
rclb
jle
cmp
adc
outsb
add
adc
lea
out
xchg
in
push
lods
inc
mov
out
xor
xchg
inc
aaa
mov
inc
arpl
int
cmp
push
push
cli
aam
jne
sbb
push
and
xchg
sbb
inc
lcall
arpl
or
sbb
decb
shlb
or
adc
mov
test
jmp
movsb
jo
lret
sub
jbe
adc
add
adc
not
ljmp
movsl
mov
fadd
in
adc
insb
inc
push
lods
in
pop
or
pop
in
adc
js
icebp
xchg
add
negb
stos
adc
push
fucomip
aaa
xchg
lcall
push
movsl
or
mov
push
stc
mov
in
mov
mov
and
jbe
mov
movsb
loop
stos
xchg
rcll
loopne
push
push
into
lock
push
pop
fistpl
cmpl
ljmp
aaa
jns
insb
js
push
xchg
es
xchg
xchg
xchg
scas
jno
rcrb
scas
add
and
stos
subb
dec
cmc
jecxz
stc
xchg
push
dec
xor
mov
in
std
clc
sahf
xor
mov
xor
adc
pop
push
push
pop
test
push
and
mov
cmp
cmp
jmp
aas
cmpsb
filds
dec
jb
scas
roll
in
or
shl
js
movsl
addr16
push
fs
je
add
js
cmp
cli
mov
push
in
out
cld
and
fnstenv
stos
xchg
sub
inc
stos
ljmp
add
sbb
clc
xchg
std
xchg
push
xchg
lods
pop
aam
dec
cmc
rorb
dec
out
mov
mov
daa
pop
jno
stos
je
and
mov
jg
inc
cwtl
lods
enter
pushf
je
int3
gs
andl
sbb
fnstsw
hlt
inc
xchg
mov
mov
xchg
outsb
loopne
push
divl
mov
xchg
in
leave
mov
cwtl
mov
push
pop
shlb
lahf
stos
mov
mov
test
outsb
rclb
adc
sbb
pop
shrl
dec
ljmp
popa
mov
dec
mov
lock
mov
test
xchg
mov
xor
sub
inc
icebp
mov
push
add
pop
stos
jbe
out
sbb
popf
stos
loope
xchg
or
int
ds
mov
xchg
mov
int3
divl
dec
sub
mov
loope
cmp
clc
sbbl
lret
sbbb
cmc
adc
cmp
test
adc
out
and
mov
mov
add
inc
fchs
stos
arpl
mov
inc
out
out
pop
jecxz
lcall
push
movsb
pop
into
push
dec
lret
jmp
pop
in
xor
addr16
push
arpl
cwtl
leave
inc
and
lret
push
lea
aam
jno
mov
cmpsb
mov
sub
mov
sub
dec
dec
push
stc
cmp
xor
daa
icebp
mov
adc
in
cmp
mov
pop
add
ljmp
and
jno
scas
mov
jl
and
sbb
rclb
add
jno
test
push
sbb
jns
cltd
jnp
lock
es
cmpsl
scas
mov
ffreep
shrb
aam
mov
lods
xchg
push
sbb
mov
iret
sbb
insl
and
sub
scas
ds
sbb
shlb
je
xorb
and
ljmp
inc
repnz
loope
sbb
push
loopne
pop
push
jl
stos
and
movsb
and
mov
lock
dec
mov
imul
out
popa
jae
daa
add
xchg
call
cltd
rcl
xchg
xor
cltd
stos
pop
mov
lret
loope
inc
sbb
cmc
ja
es
rcrb
jo
fscale
mov
mov
push
mov
or
mov
jb
int3
xchg
in
ja
cli
cmp
xchg
mov
sbb
mov
pop
ds
pop
mov
outsl
sbb
ds
lods
lods
repz
push
inc
stos
jecxz
jns
adc
mov
mov
cli
push
jb
sbb
lret
mov
dec
sbb
cmc
dec
push
outsb
lret
icebp
sbb
daa
sbb
outsl
lds
xchg
push
or
and
cmovo
xchg
sbb
imul
movsb
adc
sub
aaa
fs
js
fs
adc
mov
js
xor
hlt
and
inc
pop
add
and
cmp
hlt
or
inc
sub
pusha
xchg
dec
cmp
ljmp
push
push
dec
iret
fiadds
mov
imul
mov
mov
fisubs
lock
inc
movsb
adc
xlat
xchg
lds
das
or
push
leave
sub
pop
mov
fmulp
fbld
ret
and
and
leave
std
cmovno
push
mov
aad
pop
aam
pop
lock
sub
jge
push
mov
xchg
stos
push
and
add
js
aad
fbld
pop
or
add
shlb
loope,pt
test
jg
outsb
insl
les
movsb
dec
push
adc
push
push
stos
fisubrl
shrb
sbb
mov
inc
adcb
imul
add
dec
out
rolb
pop
hlt
lahf
imul
rorl
jmp
push
dec
push
addb
out
and
xchg
jae
pop
mov
pop
mov
pop
ljmp
repnz
jp
cltd
lods
cmp
cwtl
mov
aas
mov
cmp
outsb
push
imul
je
mov
xorl
inc
lods
push
call
push
pushf
scas
in
inc
popaw
sub
out
test
inc
ret
pop
mov
mov
iret
xchg
pop
adc
stos
cmp
or
mov
dec
mov
adc
lock
mov
mov
stos
push
call
pop
scas
inc
fchs
sub
fildll
xchg
pop
shrl
xchg
cmp
or
shrl
cmc
xchg
inc
sbb
test
xchg
shrl
add
gs
pop
aad
outsl
nop
jg
adc
push
push
or
add
bound
mov
inc
mov
leave
sub
jmp
lock
pop
jo
mov
or
out
adc
ds
mov
repnz
mov
sub
rclb
jmp
repnz
push
fstl
xchg
fadds
xlat
js
ret
fists
frstor
hlt
out
add
popl
je
lret
andl
lret
cmp
xchg
push
inc
repz
adc
cli
and
push
cltd
icebp
push
push
sub
das
in
add
shlb
sub
dec
push
jmp
jge
inc
mov
pop
call
repz
adc
lret
inc
fildll
decl
test
dec
cmp
jge
and
pop
mov
insb
xlat
es
stos
cmp
mov
insl
sub
mov
loope
mov
or
mov
loope
cs
hlt
inc
insl
outsl
xor
out
inc
pop
inc
mov
data16
in
movb
out
dec
adc
aaa
incb
dec
loope
pop
sub
mov
mov
xchg
xchg
js
pop
stos
xchg
aad
mov
adc
iret
rolb
and
repz
jb
into
pop
test
push
movb
shlb
pushf
fidivrs
scas
ret
aaa
dec
jae
fistpl
cmc
into
les
inc
xor
and
cli
dec
add
int3
scas
inc
mov
or
aam
je
sub
sub
pop
jmp
add
fdivrl
mov
insb
jbe
lods
mov
mov
xchg
mov
lcall
jbe
test
in
push
pushl
fmull
dec
adc
cmp
shrb
pop
lahf
jl
jmp
push
out
jae
outsb
movsl
movd
je
lds
mov
xor
pushf
push
pop
cmp
lock
cmp
sub
push
mov
cmp
push
cmp
aaa
clc
stos
daa
cmp
aad
outsl
arpl
jbe
or
add
xor
ficoml
or
xchg
jo
sub
mov
push
lcall
and
add
scas
dec
xor
jno
lea
sbbl
mov
pop
lds
adc
call
jns
push
in
dec
dec
pop
lahf
lahf
in
clc
push
shll
push
lret
in
out
dec
dec
xor
jmp
mov
adcb
sub
and
and
orl
sub
and
push
push
jmp
jp
jo
aaa
lods
scas
inc
divb
fdiv
pop
int
sbbb
das
xor
shr
add
movsb
mov
push
js
jo
pop
xchg
cmpb
fisubrs
shr
loopne
and
or
mov
out
cmp
fldl
decb
js
pop
pusha
pop
scas
cmpl
fidivs
add
push
jb
push
pushf
lods
mov
cmpsl
pop
aaa
mov
jo
out
xchg
inc
push
testl
int
jno
iret
or
mov
rolb
cltd
cmp
addr16
push
jne
loope,pt
inc
fucomp
cli
dec
jecxz
mov
push
movsb
icebp
mov
lds
pop
cmpsb
fwait
jp
xchg
dec
fnsave
loopne
dec
push
xchg
fs
or
push
jae
dec
pop
cmp
mov
mov
cmpsb
push
inc
mov
cwtl
sub
add
inc
pop
jecxz
cmpsb
cmp
jl
dec
jae
das
outsb
fwait
xor
mov
and
or
push
and
test
sbb
nop
cmp
cmc
out
mov
ret
in
in
shll
popf
aad
push
aaa
sbbb
ljmp
pop
sbb
loope
insl
rorl
mov
mov
ds
sbb
mov
mov
faddl
push
cpuid
into
pop
subb
sbb
inc
xchg
adc
add
dec
jbe
cmp
cmp
xchg
adc
add
psubsb
call
xrelease
sahf
pop
inc
test
outsl
jb
pop
jbe
scas
pop
xor
dec
cmp
ljmp
jne
push
jns
dec
mov
add
pop
sbb
add
sub
gs
inc
xor
lds
xor
xor
xor
popf
out
jge
mov
daa
xchg
or
mov
cmp
xchg
dec
add
nop
in
sahf
xchg
sbb
pop
push
dec
pop
push
sahf
cmp
jg
mov
daa
cmp
mov
cmp
xor
or
or
pop
aad
sub
pop
adc
sub
sub
imul
ljmp
in
jecxz
stc
xor
out
sub
or
ljmp
sbb
inc
popf
int
iret
lcall
cmp
jl
cmp
dec
aaa
or
movsl
stc
mov
mov
lahf
lcall
jg
cmp
addr16
cmp
data16
jl
out
sub
repz
pushf
inc
lods
clc
or
jo
and
les
xchg
mov
xchg
jp
and
pop
dec
ja
pop
pushf
ret
and
andb
mov
xlat
pop
sub
push
insl
add
mov
cmpsb
test
pusha
mov
xor
ret
lods
mov
cmp
add
jno
pusha
lahf
ss
and
add
lea
cmc
jb
movsb
mov
or
repz
fisttpl
dec
ret
xor
adc
pop
in
or
lods
in
mov
add
push
lret
popa
add
cwtl
cli
or
xor
mov
iret
leave
mov
inc
repnz
ds
mov
cmpsl
cmpsl
ret
mov
insb
xchg
jmp
mov
and
cld
sti
test
or
xlat
pop
cld
outsl
lret
mov
and
add
loop
into
hlt
lds
sbb
dec
repnz
inc
insl
inc
stc
je
or
jmp
test
sub
rcrl
mul
dec
mov
aad
fisubrl
push
sbb
nop
arpl
mov
pusha
xorb
iret
jno
dec
orl
and
push
jl
sub
inc
inc
push
scas
push
inc
orl
nop
mov
and
push
dec
test
sbb
stc
jge
cmp
jp
xorb
nop
std
ss
add
xchg
push
lods
out
pusha
sbb
lods
and
mov
inc
ret
inc
cli
rcrb
sbb
enter
rcl
jbe
mov
icebp
pcmpeqw
sbb
and
and
mov
jb
jl
arpl
test
mov
outsb
loope
popa
mov
or
cmpsb
cmp
cmp
dec
inc
and
ljmp
lods
xchg
repz
cmc
pop
pushf
outsb
loope
clc
xchg
mov
lret
movsl
sub
pop
ffreep
bound
icebp
pop
push
jmp
sahf
sbb
push
jno
push
sarl
int3
xor
mov
push
arpl
xor
ja
add
cmpsb
les
inc
dec
dec
add
xchg
loopne
and
test
push
cmc
mov
jp
in
push
mov
js
lret
shlb
enter
lods
sub
push
sbb
pop
int3
fisubs
dec
mov
cmp
std
nop
push
jmp
sub
adc
push
push
inc
pusha
and
mov
and
push
inc
test
pop
int
fbstp
xor
mov
mov
mov
sub
je
enter
pop
xorl
adc
mov
rolb
icebp
cmpsl
test
push
and
loop
sbb
and
dec
pop
cld
cmpsl
xchg
aam
and
scas
js
imul
lods
js
repnz
lods
and
push
fisubrl
stc
adc
test
leave
pop
pop
enter
add
xor
cmpsb
lods
cmp
push
or
and
sahf
in
cltd
je
push
test
mov
repz
add
lcall
jne
sub
mov
lahf
movsbl
mov
cmp
jmp
or
inc
xor
das
and
jb
test
andl
aam
mov
or
loopne,pt
push
adc
dec
leave
jne
mov
pop
mov
or
frstor
pushf
gs
and
add
add
push
xor
dec
les
cmpsl
mov
sub
pop
mov
aam
xor
shll
outsl
test
sbb
nop
adc
mov
aad
xchg
lret
fldcw
into
popa
or
add
lahf
sbb
cwtl
xchg
cs
cmp
push
incb
daa
mov
cs
sbb
ret
jne
ficoml
notb
je
movsl
xchg
sbb
ja
xor
lahf
or
fwait
cmpsl
pop
movsb
pop
adc
mov
rcrl
inc
dec
ret
ss
push
xchg
dec
inc
mov
jl
aad
lds
stos
inc
dec
mov
and
pop
cltd
aad
inc
push
sbb
dec
sbb
push
ljmp
pushf
scas
leave
pusha
imul
loopne
out
movsl
inc
jp
int
jp
mov
out
cld
mov
push
xchg
lock
int
out
sbb
repnz
push
das
jb
add
cwtl
mov
ret
adc
cmp
mov
xor
push
push
adc
xchg
xchg
iret
mov
fidivl
andl
push
pusha
xchg
mov
scas
lock
xor
mov
into
loop
pop
dec
adc
sbbl
ss
mov
loope
movsl
pushf
mov
pop
cmp
fsub
or
testb
jge
add
outsb
pop
outsl
ror
sub
leave
pusha
xchg
and
inc
add
scas
inc
pop
ljmp
in
lahf
mov
cmp
call
andl
test
aaa
push
mov
dec
ret
mov
sub
incl
cld
and
xor
sahf
xor
sbb
mov
or
cmc
sahf
xor
and
sbb
lods
pop
loope
mov
in
mov
ljmp
lcall
push
mov
mov
sbb
ret
pop
bswap
inc
inc
insl
xor
xorb
rorb
inc
inc
mov
pop
dec
pop
shrb
inc
xchg
dec
xor
xchg
cmp
xchg
jle
shll
imul
ret
shl
pop
xchg
movsb
cmp
mov
stc
aad
mov
outsb
gs
test
ds
clc
jg
pop
stc
ret
popf
xor
sub
mov
sahf
clc
rolb
sub
inc
cmpsl
adc
daa
aaa
pop
imul
adc
test
lret
data16
stos
lea
data16
mov
scas
notb
shufps
cli
pop
push
add
mov
push
cmp
add
call
or
repz
scas
cltd
and
cmp
outsb
aaa
or
call
jl
lcall
icebp
xchg
ret
jo
sub
insl
push
out
scas
and
mov
jge
add
andb
add
imul
addl
or
hlt
sbb
and
mov
pop
dec
mov
testb
jg
jge
orl
mov
outsb
fwait
js
inc
push
shll
jmp
ja
pop
adc
jne
insl
mov
adc
popf
dec
loop
out
push
mov
bnd
insl
mov
out
mov
addr16
jl
cmp
in
sub
test
clc
daa
xchg
inc
aad
xchg
cmpsb
daa
cmp
popf
std
inc
out
or
xchg
pop
into
gs
xor
call
js
push
out
jl
xchg
xchg
xchg
and
xlat
data16
test
fsub
cmpsb
jmp
sub
and
ds
or
fs
shl
stos
lret
jbe
push
aaa
faddl
and
xchg
lods
test
imulb
adc
or
push
in
xchg
icebp
decb
iret
and
and
addb
insl
mov
mov
mov
sub
mov
jecxz
int
cmp
mov
not
stos
push
sub
test
lcall
dec
push
mov
cs
fmull
pop
imul
dec
mov
sbbb
xor
inc
gs
cmp
cmp
subb
sbb
bswap
lock
adc
sbb
adc
stos
fidivs
cld
pop
pop
push
sub
and
push
lea
or
push
addr16
lret
cli
sbb
insb
sub
push
cwtl
cmpsb
cmp
mov
push
xor
dec
fstl
mov
xor
push
sub
pushl
fcmove
stos
inc
es
jg
mov
bnd
xor
lods
mov
jo
xchg
cltd
push
in
xor
rcrb
cltd
xchg
insl
cld
sti
xor
stc
aas
dec
outsl
xor
stos
cmc
sub
and
sub
dec
setnp
or
sbb
inc
mov
mov
sbb
fistl
jg
loopne
cmovb
pusha
loopne
add
loopne
jmp
negl
call
xchg
or
inc
mov
jmp
fsubrl
inc
dec
orl
mull
ss
sub
xchg
or
push
out
adc
jl
xlat
sbb
and
sub
adc
xor
fmuls
add
pop
mulb
and
jge
sub
push
insl
lods
jg
cmpsb
mov
fcoml
xlat
ds
or
and
adc
add
popa
mov
arpl
pop
repnz
push
movsl
icebp
xor
out
sub
out
ret
cmp
cmpl
or
aaa
or
xchg
cmp
sbb
xor
imul
jnp
xchg
imul
add
movb
outsb
mov
push
jecxz
add
ret
jecxz
iret
andb
sbb
and
xchg
jb
int3
arpl
ja
mov
push
ficomps
rcrb
mov
mov
fbstp
lcall
sbbl
out
movsb
pop
dec
in
int
xchg
stos
xor
psllw
sbb
xor
mov
shl
in
mov
jecxz
adc
lods
out
ja
mov
andl
subb
pop
bound
cmp
or
sub
push
xchg
xchg
cld
jne
sub
mov
fdivl
jmp
outsl
push
test
push
in
xchg
pop
mov
mov
call
mov
cs
jl
adc
xlat
pop
cwtl
mov
pop
movsb
jmp
loop
xchg
jnp
mov
inc
sub
clts
out
inc
push
dec
stc
push
ss
cld
frstor
enter
xchg
push
roll
mov
adc
popa
popa
stc
nop
xchg
cmpl
out
push
ficompl
icebp
xchg
sarb
mov
lcall
add
fnsave
adc
add
std
xchg
loope
fcompl
pop
movsb
les
out
sahf
in
xchg
pop
ja
test
pop
sar
test
mov
sahf
mov
shrb
cmp
inc
dec
clc
aad
test
rcrl
mov
loopne
ret
popa
and
add
scas
xor
arpl
mov
fs
inc
cwtl
test
out
pushf
xor
shrb
xor
shlb
rorb
fistl
jne
jge
flds
dec
jns
cmp
fisttps
bnd
mov
xor
push
into
adc
fldenv
mov
jmp
std
push
mov
push
js
jae
adc
mov
js
int3
and
mov
mov
and
fsubrs
ret
and
out
push
inc
push
ljmp
jno
cli
call
aas
push
dec
mov
mov
mov
in
imul
inc
and
pop
xor
jmp
cmp
cmp
mov
data16
sbbl
ret
inc
cmc
pop
mov
inc
faddl
notl
mov
xchg
fs
insb
ret
mov
ljmp
outsl
and
in
jne
dec
cmpsl
popa
push
push
dec
aad
push
daa
push
sysexit
dec
sbb
push
repz
sbb
fucomip
xor
ss
icebp
test
scas
pop
inc
bound
mov
ljmp
shl
push
mov
mov
jge
les
leave
loope
shr
pop
mov
sarb
inc
fmull
jl
cmp
push
mov
pop
sub
je
cmp
xchg
mov
repz
and
dec
aaa
sub
stos
mov
sbb
dec
add
sbb
mov
push
mov
pop
ljmp
push
rclb
inc
sbb
pop
stos
sbb
add
mov
adc
adc
ss
mov
jb
inc
lods
inc
cmc
das
xor
push
int
xor
mov
nop
xor
mov
push
into
mov
popf
inc
sub
fwait
xor
loop
shl
inc
and
add
popa
push
push
jo
ret
mov
jp
das
sbb
mov
cmp
iret
push
stc
xchg
pop
and
add
inc
fcomip
outsl
loop
jge
test
xor
ficoms
mov
sub
or
es
mov
inc
jecxz
mov
out
call
mov
ja
push
lds
mov
fwait
pop
pop
icebp
dec
or
add
lcall
and
sub
lret
das
inc
std
stc
xchg
and
rorl
icebp
mov
ja
and
bndstx
movsl
mov
outsl
inc
add
dec
cmp
lret
not
lahf
inc
fcoms
test
inc
hlt
pop
mov
inc
divl
lahf
xchg
push
cwtl
push
insb
lret
aam
seto
push
mov
pop
cwtl
subb
ja
andl
cmp
ss
dec
insb
add
sbb
mov
sti
sub
mov
jns
fdivrp
cmp
or
test
int
or
mov
xchg
sub
jb
add
orl
inc
sub
pop
jae
mov
jae
sub
mov
pop
mov
xchg
adc
adc
addl
push
or
push
jle
scas
xchg
repz
repnz
xchg
add
rcrl
iret
mov
push
xchg
sub
shll
andb
jle
enter
imul
test
pusha
lret
xchg
xchg
pop
cmp
pop
xlat
outsb
push
or
std
ss
jo
rclb
pushf
sub
gs
pop
stos
cmp
push
sti
cmp
mov
shl
lea
popa
cmp
and
sbb
pop
mov
cmpsl
or
out
out
xchg
call
shlb
js
mov
ljmp
mov
nop
lods
outsl
cmpsl
int
into
pop
jo
fcoml
test
push
popf
in
roll
cmp
sbb
incb
mov
lods
sti
lret
and
test
dec
loopne
fidivrs
outsl
sub
jbe
jle
push
mov
into
pop
sahf
rorl
sbb
ret
jge
or
mov
clc
sub
xchg
push
ss
xchg
push
aam
mov
test
out
inc
xchg
pop
cs
in
in
push
in
inc
cmc
imul
sub
mov
fs
rorl
mov
popf
mov
pop
and
mov
inc
scas
sub
pop
fdivs
cmp
inc
fdivrs
jnp
mov
les
arpl
push
add
shll
nop
out
push
loope
or
pop
out
mov
hlt
dec
add
scas
xor
xchg
stos
mov
dec
pop
imul
cmc
popf
mov
sub
push
outsl
xor
sbb
sar
xor
sbb
daa
inc
pop
fucomp
push
ljmp
outsl
or
loopne
jp
mov
cltd
shr
shrl
push
jmp
arpl
int
dec
jb
push
pop
rdpmc
out
test
pushf
xor
daa
lea
ljmp
mov
add
fwait
arpl
test
xor
inc
lods
andb
into
fstpl
fistpl
mov
insb
and
out
adc
mov
jo
mov
xchg
inc
inc
sub
mov
addb
stos
sbb
jae
cmp
outsl
das
jecxz
bound
mov
ss
fldcw
mov
lret
fwait
leave
jmp
aaa
xchg
out
push
and
popf
je
out
pop
dec
mov
inc
lods
ja
jg
fwait
and
in
xchg
sbb
arpl
fucomp
fldenv
cmp
sbb
sahf
aam
sbb
or
mov
aas
cmp
imul
dec
push
adc
or
add
xchg
jge
adc
or
dec
bound
and
stos
mov
in
cwtl
fimull
in
fcom
jg
ss
inc
jb
test
add
dec
xor
cmp
push
rep
inc
mov
mov
or
cs
fcmovnb
or
repz
push
push
or
mov
sub
lret
jl
imull
aad
out
xor
push
and
rep
or
mov
mov
dec
stos
jle
adc
lea
ret
xchg
clc
mov
movsl
jmp
inc
fstps
and
lds
pop
jbe
pop
mov
xlat
out
out
jp
xor
xor
and
push
insl
jge
push
dec
dec
xchg
aad
xor
insl
jge
push
and
pusha
aad
insb
add
ds
frstor
or
xchg
andb
adc
std
cmp
mov
sub
xchg
cmp
push
cmpsl
scas
mov
pop
lcall
inc
bound
mov
xchg
add
sbb
push
clc
aaa
into
das
repz
adc
sahf
push
xor
cmp
loope
cwtl
xchg
mov
xchg
test
nop
mov
ret
cmc
push
imul
aaa
lods
jo
mov
jmp
addb
rorl
pop
mov
sub
dec
cmp
rol
aad
mov
mov
or
insl
push
push
jg
data16
add
jo
cmp
mov
out
xchg
or
mov
aaa
jbe
out
xor
pop
xor
aaa
ret
cmp
aaa
dec
je
jg
leave
test
loopne
shr
xor
popf
movsb
cmp
pop
orl
xor
jp
push
mov
stos
add
cmpsb
test
arpl
cmp
mov
jge
movsl
inc
and
add
xchg
jno
inc
and
pop
cmpsl
in
sahf
leave
loope
ljmp
stc
rorl
push
xlat
cs
int3
test
jns
add
rcr
notb
push
jecxz
jl
outsb
clc
enter
dec
adc
xchg
loop
out
push
add
icebp
ljmp
into
xchg
xlat
in
aam
in
sahf
push
faddl
pop
adc
ds
imul
adc
fwait
dec
push
stos
xchg
mov
jo
add
pusha
inc
push
jp
jmp
out
jnp
daa
loope
pop
inc
cmp
xchg
adc
movsl
imul
mov
and
pop
ret
xor
push
pop
enter
jno
xor
and
adc
pop
add
test
sub
fs
scas
aas
int
cwtl
stos
decb
das
mov
inc
shrb
fstpl
and
js
cld
fbstp
jle
push
enter
das
pop
dec
cltd
or
cs
lret
sbb
pop
stos
cmp
mov
inc
push
fbstp
mov
push
sbb
sub
dec
aad
cltd
out
jp
jp
sbb
xor
and
in
cld
jmp
sbb
int
dec
cmp
popf
jne
adc
sti
addr16
mov
cmp
loop
dec
mov
cmp
xchg
or
lret
mov
mov
stc
into
int3
arpl
mov
mov
push
ljmp
imul
jge
das
loope
popf
dec
add
imul
scas
add
mov
inc
cmpsl
test
subl
jb
xchg
xor
sub
movb
pop
arpl
xchg
lods
repz
imul
xchg
arpl
add
mov
adc
dec
pop
stos
push
shl
xor
cltd
xor
aam
push
je
mov
leave
not
sbb
leave
fwait
and
and
es
arpl
mov
jge
inc
outsl
jmp
jge
test
sahf
xchg
and
pop
or
xchg
rorl
and
push
nop
mov
dec
imul
ja
pop
mov
pop
jo
insl
in
cmpsl
ret
push
adc
leave
pop
ss
cmp
cmp
sbb
mov
aam
pop
pop
mov
popa
inc
cmp
jb
push
dec
pop
pop
xchg
jecxz
xchg
scas
test
scas
jb
in
outsb
hlt
data16
push
xlat
adc
inc
int3
pusha
mov
and
xor
mov
mov
icebp
dec
pop
shll
xchg
bound
xchg
int
les
popa
clc
xor
adc
cltd
xor
rcrb
fsubrs
push
outsl
or
dec
mov
xchg
call
xchg
repz
mov
sbb
jge
mov
xchg
sahf
mov
and
shll
gs
aam
hlt
loope
sarl
je
lcall
test
and
push
cmp
xchg
cmc
mov
in
mov
mov
lcall
das
add
xchg
or
out
jno
in
fwait
push
sbb
push
int3
jno
ljmp
sbb
mov
js
movsb
adc
adcb
test
jmp
add
es
insl
data16
jb
cmc
pop
xor
xchg
and
lcall
pop
shrb
sbb
push
xor
test
outsb
cwtl
cmpsb
jge
out
mov
mov
fsubr
cmp
aas
jno
out
imul
out
lcall
dec
and
mov
cmp
jns
js
lock
xchg
dec
push
addr16
loopne
xchg
ret
ficoml
adc
push
jb
mov
ret
sub
sub
inc
out
inc
dec
roll
dec
push
xor
xor
fistpll
int3
xor
cs
cmpsb
hlt
add
ds
jl,pn
xchg
add
jo
loope
cmp
sbb
sub
fildll
scas
icebp
jnp
add
pop
mov
add
sahf
mov
mov
in
jno
push
inc
mov
mov
adc
jp
xor
fnsave
jb
mov
fldl
sbb
test
mov
sub
dec
lods
out
sbb
sti
xchg
popf
adc
cs
mov
xchg
mov
dec
xadd
stos
xchg
call
jmp
iret
cmpsb
lret
dec
daa
arpl
mov
push
stc
push
cli
mov
fcompl
pop
sbb
xor
xchg
sbb
xchg
fwait
jbe
lock
push
incb
sti
push
xchg
mov
pop
aaa
push
mov
mov
and
add
loope
cwtl
dec
add
push
movsl
lds
pop
sahf
or
inc
cmp
jg
adc
cmpsb
mov
push
test
out
idivb
int3
mov
sbb
out
mov
notb
push
inc
mov
jae
pop
fstpt
cmp
pop
scas
add
fwait
mov
push
and
cmp
ja
je
adc
cmp
and
inc
dec
cwtl
jae
fs
and
push
call
je
ljmp
mov
jnp
jmp
sbb
fnstenv
ret
or
sub
mov
insb
mov
push
or
cmpsl
fidivs
jbe
stos
in
cld
xchg
adc
ss
push
xchg
dec
lock
loop
jae
jmp
or
push
cli
and
aas
push
add
mov
lock
sub
push
push
inc
mov
xor
loope
pop
adc
sub
xor
adc
rorl
rorl
or
out
cltd
test
imul
out
or
or
sub
mov
sub
pop
hlt
and
jnp
fldcw
and
mov
fimuls
adc
sbb
jnp
stos
frstor
mov
add
rcl
pop
in
inc
cmp
dec
aad
fmulp
xor
adc
in
es
aas
fadds
aaa
jae
lds
mov
xor
mov
repnz
pushf
frstor
cld
cmp
rcrl
inc
xlat
icebp
out
adc
icebp
xchg
pop
gs
sbb
fwait
lret
lods
sub
jmp
jecxz
imul
les
jg
and
inc
sahf
mov
push
mov
das
and
adc
ljmp
jno
lcall
dec
pop
pop
ds
inc
mov
rorb
fimuls
aad
ljmp
jb
mov
ds
pop
add
sub
dec
arpl
loope
xor
sbb
xor
add
mov
sbb
push
out
insl
jmp
jo
xor
mov
sarb
fcompl
push
nop
push
scas
mov
stos
xchg
testb
jno
cmp
inc
or
add
sbb
mov
or
int
jecxz
dec
loopne
add
mov
xor
sbbl
jns
adc
mov
cwtl
inc
fstps
adcl
adc
ss
pop
mov
sbb
cmc
jno
mov
test
dec
xchg
test
push
adc
cmp
fs
sub
mov
push
repz
xor
xchg
add
test
xchg
pop
popa
adc
neg
jno
fcmovnu
cld
test
sub
out
jo
hlt
lds
out
jg
pop
cmpsb
ret
mov
jge
jns
icebp
ja
mov
notl
push
sbbl
out
pop
imulb
sub
push
bound
adcb
xchg
and
outsb
rorl
lret
inc
cmpsl
cmp
mov
adc
lcall
into
fwait
leave
xor
loop
push
sub
ret
in
loop
or
or
subl
in
xchg
repnz
fxtract
leave
adc
scas
sbb
sbb
ljmp
sbb
scas
jno
jge
jl
xor
inc
cltd
dec
test
cli
gs
push
sub
jbe
adc
xchg
stc
mov
add
imul
push
test
cltd
test
adc
dec
out
and
andb
mov
leave
stos
jne
mov
popf
or
add
sbbb
shll
test
and
jbe
js
or
in
roll
xchg
pushf
add
movsl
xchg
scas
push
jecxz
mov
pop
push
mov
lock
and
arpl
addr16
dec
mov
clc
or
add
iret
je
push
mov
data16
loop
lret
dec
inc
ret
sub
pop
push
loopne
popf
sahf
mov
inc
pop
in
and
mov
aas
loop
and
insb
add
inc
cmp
pop
cmp
out
hlt
pop
out
and
xchg
inc
fldl
out
push
and
xchg
sbb
cltd
pushf
xchg
sbb
lods
lcall
ja
inc
pop
insl
sarb
mov
jle
rorl
push
xchg
icebp
sbb
lcall
aam
pop
int
in
es
cli
jno
xchg
lods
in
sbb
xchg
jmp
cmp
orb
loope
gs
mov
xchg
sub
test
mov
scas
inc
inc
or
and
sub
pcmpeqd
or
adc
mov
push
sbb
mov
add
fsubp
lret
inc
test
hlt
inc
stos
arpl
jmp
fnstsw
mov
and
inc
mov
adc
nop
xchg
dec
mov
sbb
jbe
pop
roll
dec
stc
in
out
fisttps
test
lret
fildll
cld
push
clc
pop
xchg
lds
fcompl
mov
stc
sbb
inc
or
sub
ljmp
cmc
inc
fsubrs
cmpsb
push
xchg
repnz
mov
dec
out
aas
lret
pushw
mov
xor
mov
mov
es
xchg
ljmp
sbb
adc
xchg
dec
test
mov
jl
add
cmp
in
xor
mov
add
sub
sub
jnp
cmp
dec
add
mull
out
xchg
mov
movsb
push
fwait
cmp
ror
mov
jmp
loopne
dec
rcrb
push
ljmp
jno
add
cmp
adc
fsts
invd
les
lahf
aad
jbe
data16
gs
lea
bound
mulb
and
and
mov
cmp
mov
or
cmp
pushf
dec
call
lods
sbb
and
js
mov
sub
fwait
mov
ret
data16
subb
test
and
push
xchg
pop
and
mov
iret
xor
jns
sub
dec
lret
fbstp
mov
sbb
sbb
sbb
xchg
pop
test
add
out
jge
xchg
insl
push
dec
ret
leave
pop
pop
jge
ss
inc
in
es
xor
cmp
leave
push
sub
or
sub
insl
xorl
ret
xlat
cmpsb
mov
out
rolb
cwtl
or
adc
scas
xchg
fisubrs
mov
or
mov
dec
mov
scas
js
fdivrp
xor
mov
or
adc
inc
lock
mov
fcmove
pushf
mov
cmpsb
testb
fwait
aas
cmp
in
jp
ljmp
jg
jmp
push
adc
or
gs
push
jae
jg
mov
fmul
mov
push
xor
pop
xchg
inc
mov
into
mov
das
pusha
cmp
xchg
dec
dec
mov
lcall
cwtl
out
nop
in
xor
sti
xchg
fmull
push
aas
inc
push
add
imul
sub
inc
adc
sahf
and
inc
outsl
xchg
aaa
pop
scas
out
movsl
hlt
les
push
test
cltd
rol
xchg
dec
mov
idivb
push
lods
jae
cld
or
sbb
shll
mov
das
add
shll
dec
lds
iret
push
pop
and
mov
hlt
mov
adc
int
leave
int
into
ss
mov
fs
lods
icebp
std
xlat
mov
sarb
add
decl
ret
cmp
pop
test
cmp
cmp
out
sbb
subb
xor
loop
mov
test
fsubl
std
jl
xchg
pop
sub
repnz
in
loope,pt
jp
movsb
push
adc
or
jmp
mov
xchg
xchg
test
hlt
lea
out
cmp
add
and
dec
lods
or
scas
xchg
loope
out
cltd
mov
sub
jp
test
sti
xchg
mov
cmp
aam
push
cli
cmp
fwait
xchg
mov
inc
push
sbb
dec
cmp
popl
sbb
and
in
sbb
lock
pop
xchg
push
pop
popf
dec
arpl
dec
fsubr
dec
dec
sub
fidivrs
lcall
repz
out
lahf
and
out
cld
jno
and
xchg
mov
inc
lock
xchg
sbb
aad
mov
int3
mov
into
aam
xor
gs
mov
mov
pop
mov
idiv
addr16
dec
cmp
into
or
aad
cmp
and
imul
lock
fstps
repnz
mov
int
mov
js
xor
out
dec
inc
sub
fimull
loope
inc
xchg
and
inc
push
fisubs
mov
enter
pop
fnstsw
pop
mov
adcb
adc
stos
cli
mov
enter
jae
push
lret
adc
pop
ret
cmc
sbb
mov
ljmp
dec
stc
add
push
pop
loop
fsubs
mov
shrb
sub
push
flds
js
jae
or
rclb
cmp
add
dec
lds
add
mov
ja
cmpb
nopl
test
and
jmp
jl,pn
pop
out
lret
or
clc
ret
popf
xor
or
xor
aam
push
sbb
rcll
mov
inc
mov
dec
and
fs
test
jmp
mov
into
fdivl
aam
cwtl
nop
xorb
mov
leave
push
inc
scas
jnp
cwtl
in
cmp
mov
inc
and
mov
mov
notb
adc
lret
fbld
ja
cs
mov
scas
std
fwait
cmp
shlb
mov
jl
sbb
or
xchg
iret
loope
inc
pop
mov
push
and
bnd
xchg
rcrb
and
pop
and
lahf
rcr
sti
ljmp
fsubl
movd
pop
out
nopl
xlat
shrl
scas
adc
push
add
adc
fldcw
cmp
and
outsl
mov
rorl
popf
xor
add
push
sahf
clc
xor
adc
loope
xchg
aad
rcrl
mov
ljmp
jno
sarl
iret
cmp
jl
push
jl
mov
mov
int3
or
fs
and
je
add
mov
mov
lahf
and
add
jae
dec
and
dec
pop
mov
inc
add
fistps
add
jo
clc
je
insb
fists
pop
aaa
stos
mov
cmpb
lds
cli
arpl
clc
daa
or
cli
xor
mov
sub
cwtl
movsb
nop
xor
jmp
push
nop
jo
add
pushf
jecxz
mov
int
mov
cmpsl
and
inc
repz
movsl
adc
inc
lds
test
in
dec
pop
js
cmpb
mov
xlat
pusha
aaa
test
push
mov
and
shrl
int
jae
inc
shll
pop
out
sbb
sub
lret
inc
mov
mov
push
push
stos
test
fs
push
dec
in
and
insb
repz
ret
repz
sub
sub
lds
bound
aad
sbb
dec
rorl
adc
loope
cmc
sub
push
cwtl
mov
push
push
test
lods
mov
dec
cmp
aam
lret
push
imul
mov
loope
cmp
jle
gs
mov
and
mov
pop
addr16
or
and
test
xchg
in
mov
es
leave
and
sbb
jmp
xchg
push
push
bound
xor
or
xchg
clc
jae
sub
mov
out
inc
loope
gs
in
rorl
fimull
jmp
dec
in
jnp
jb
mov
scas
jge
orb
lods
mov
testb
dec
int3
mov
add
fcmove
fsub
cmpsb
push
xchg
sahf
fs
mov
push
and
out
aad
xchg
push
xorl
jmp
mov
fidivl
inc
pop
inc
mov
gs
and
cmp
mov
test
inc
aas
in
pop
shrb
cmp
inc
or
arpl
pushf
jle
cmp
jo
dec
mov
dec
sub
dec
das
or
pop
push
ret
push
cmc
mov
push
nop
daa
inc
xchg
jne
loop
xor
leave
dec
stos
inc
fnstenv
mov
lret
adc
lcall
in
dec
addl
fistpl
push
jo
and
lahf
push
movsl
adc
jg
inc
pop
enter
jmp
mov
js
leave
or
mov
fcompl
inc
aam
or
inc
sbb
push
orb
out
push
sub
mov
pop
test
cmp
jnp
jbe
and
inc
mov
lods
push
lahf
jne
mov
test
popa
mov
cmpsl
insl
cmp
clc
outsb
scas
xor
fsubrl
aas
push
or
orb
or
dec
push
push
push
lods
scas
mov
jecxz
sbbb
cmpsb
dec
pop
add
nop
push
mov
sar
mov
popw
jle
and
sbb
sub
inc
and
es
or
repz
cmc
cmp
jbe
push
sete
mov
xchg
stos
push
pop
sub
cltd
jl
movsb
cmp
pushf
inc
loope
jp
mov
inc
das
jmp
std
int3
test
leave
inc
mov
fsubrs
mov
pushf
fwait
divb
cmp
xchg
mov
mov
stos
add
and
ret
mov
or
aas
lret
add
out
sahf
pop
pop
movsl
nop
mov
mov
inc
imul
ja
daa
cmp
jecxz
call
jp
jg
inc
sti
leave
testb
repnz
inc
cwtl
movsl
ret
imul
sbb
icebp
mov
xchg
ret
pop
les
pop
and
mov
icebp
push
dec
subb
push
repz
inc
stos
or
leave
mov
lea
and
nop
fucomp
mov
jbe
push
inc
pop
mov
out
pop
sahf
pop
mov
mov
mov
mov
jmp
jnp
jb
stos
movsl
or
push
xchg
in
scas
mull
cmp
xor
inc
insl
sbb
xchg
lods
inc
imul
push
test
sub
loope
push
xor
dec
out
loope
test
mov
aam
enter
shl
jecxz
aas
add
mov
lret
hlt
out
and
mov
push
mov
xor
ret
pop
rcrb
mov
pushf
or
dec
sbb
movsb
mov
adc
movl
add
jo
pop
xchg
aaa
cld
in
and
test
ss
mov
lcall
mov
fnsave
loope
loop
add
fsubrs
ss
fidivs
lods
push
adc
add
mov
int
lea
test
jmp
and
fistl
sub
mov
ss
add
xor
aas
or
lcall
add
gs
test
jg
imull
mov
int3
sub
in
sti
jle
pop
mov
loop
cmp
adc
aas
cmpsb
insl
gs
pushl
mov
repz
out
xchg
dec
loope
repnz
jo
sti
xchg
jecxz
pop
dec
gs
xchg
loope
xor
out
fbld
les
lock
jb
fistpll
jmp
sub
shr
cli
add
insb
ffreep
test
stc
push
loop
dec
clc
fwait
lea
lret
mov
cld
lcall
aaa
negb
mov
xchg
xchg
dec
loope
mov
nop
dec
pop
fistps
xor
leave
xor
xchg
jnp
xchg
push
push
cli
xchg
mov
jne
hlt
cmpsb
mov
add
hlt
outsb
loope
and
push
mov
stos
xchg
mov
fildl
jecxz
adc
shrb
les
sti
sti
ret
hlt
out
std
ljmp
inc
push
inc
inc
fwait
mov
and
sub
pop
ret
outsb
loope
mov
addr16
ret
xchg
or
or
testl
mov
jb
or
rorb
push
cmp
andl
or
inc
lcall
push
cwtl
xchg
jns
lcall
orl
inc
pop
mov
stos
imul
xchg
cmpsb
mov
adc
lods
in
stos
mov
lods
xchg
sub
hlt
xchg
push
dec
jl,pt
or
out
sbb
fwait
lods
je
loop
adc
pop
fcomp
xor
iret
mov
add
imul
cltd
push
jge
sahf
setg
inc
inc
dec
jno
testb
sub
cmpsl
out
xor
add
or
inc
pop
scas
jbe
mov
pop
mov
cmp
das
sti
sbb
shl
stos
aas
mov
movsb
jp
adc
jae
daa
pop
sbb
daa
mov
addr16
jmp
aaa
test
stos
lcall
std
inc
lret
push
pop
dec
or
jne
popf
xchg
pusha
repnz
push
add
sub
mov
les
test
clc
sahf
addl
and
fstpt
adc
stos
add
mov
xor
andl
shr
add
ljmp
mov
pop
and
imul
stc
jb
daa
ljmp
pusha
ss
jecxz
mov
clc
les
mov
xchg
xor
clc
arpl
idiv
pop
popf
xor
into
je
mov
push
imulb
arpl
out
mov
adc
idivb
sbb
jl
lret
mov
inc
push
adc
fmulp
aaa
leave
pusha
imul
insb
adc
aad
in
xchg
addr16
dec
in
inc
push
adc
fdivl
pop
xor
outsl
pushf
xlat
outsb
into
lods
addr16
pushf
das
in
mov
or
cmp
nop
xor
cwtl
test
push
sbb
mov
rol
push
lret
cli
mov
mov
loopne
adc
movsb
iretw
xchg
sbbl
fs
xchg
xchg
mov
sub
push
add
xchg
jge
cmp
dec
movsl
lds
cmpsb
ds
fnstsw
pop
popa
mov
pop
in
cmc
pop
inc
cmp
xor
adc
cmpb
xchg
lcall
sti
push
mov
sub
inc
decb
fstpl
and
lock
sub
pushf
or
in
fwait
pop
ljmp
outsl
test
dec
cmp
daa
push
lahf
iret
pop
inc
push
mov
in
in
sbb
inc
pusha
repnz
dec
lcall
fwait
mov
jb
jecxz
push
jge
add
sbb
jae
addb
push
cmp
and
add
and
add
push
cmp
xor
or
addr16
rorb
loope
pop
loopne
mov
add
cld
test
js
mov
xchg
and
cwtl
lods
mov
les
sbb
movsl
icebp
or
mov
pushl
ret
cwtl
push
xchg
nop
push
pop
loop
in
xchg
fdivp
repz
jne
fstps
lret
mov
movsb
lock
int3
lret
sar
mov
data16
imul
dec
sarl
scas
lret
adc
inc
in
xor
ss
aad
sub
les
mov
in
pop
mov
decb
outsb
call
or
outsl
mov
mov
push
sarl
push
cmc
and
pop
mov
cld
cmp
cmp
sub
addr16
add
mov
arpl
mov
cmpsb
enter
lock
aad
hlt
mov
cmp
pop
outsb
sbb
fimuls
push
dec
repz
jle
loopne
xchg
gs
xchg
mov
pop
hlt
mov
sub
mov
sub
ficoml
lahf
js
les
mov
pop
mov
dec
loopne
cmp
gs
ficompl
xor
leave
fistl
xchg
jl
xor
rcl
movsb
push
cmp
jecxz
out
inc
mov
enter
shrb
lea
dec
outsb
dec
push
adc
xchg
sub
bswap
outsl
std
or
jb
dec
pop
and
lea
test
push
mov
test
mov
fnsave
orl
inc
mov
push
movsb
out
cmc
sbb
jmp
popf
ljmp
es
aad
push
and
cmp
pop
ds
test
sahf
xor
and
cmp
shll
outsb
fcmovb
cmpsb
sbb
mov
or
mov
xchg
mov
cmp
push
adc
ss
into
push
sub
mov
add
and
out
rcr
cld
sub
mov
cmc
icebp
mov
lret
fidivl
and
xorb
pop
and
or
fsts
xor
sub
fwait
dec
and
stos
in
mov
loope
add
sub
push
out
testl
jne
ds
dec
pop
lret
bound
jno
adc
sub
mov
jecxz
adc
stc
sahf
addl
adc
fimull
xor
xor
lock
push
sbb
pop
push
mov
xchg
mov
mov
cmc
push
add
jae
and
mov
test
pop
sbb
call
rorl
insl
test
cmp
jmp
or
or
pop
nop
out
pop
push
mov
xchg
stos
cmp
divb
lret
mov
xchg
in
pop
push
xchg
jns
lcall
subl
mov
pop
add
fidivrl
mov
cmpsb
jle
fmul
nop
jnp
int
ret
dec
arpl
rcrb
mov
or
mov
in
jo
scas
loope
bound
scas
int
jns
iret
shrl
daa
cmp
pop
pop
scas
mov
inc
or
adc
out
jns
inc
addr16
fsubrl
adc
shrl
and
cmp
js
or
and
mov
inc
imul
mov
outsl
dec
jg
push
mov
rcrl
pop
jp
mov
and
xchg
mov
ljmp
cmp
mov
insl
sbb
js
mov
adc
fwait
sbb
inc
loope
je
jge
add
stos
and
sbb
push
fimull
fwait
jp
test
sub
lea
xor
dec
adc
dec
push
das
repnz
and
fcoml
dec
sbb
leave
es
sub
icebp
repz
dec
sub
mov
lret
mov
loop
dec
fwait
mov
mov
mov
xchg
xor
lcall
outsl
add
jge
mov
stos
adc
inc
lret
jbe
arpl
xor
and
mov
leave
movsl
repnz
mov
stc
mov
lret
rol
push
inc
stos
out
xor
add
addl
addr16
ror
sub
sub
lods
fnstenv
aas
dec
lahf
lea
mov
xchg
cli
in
push
jl
mov
dec
and
ja
mov
push
pop
les
js
adc
mov
cmc
dec
and
xor
cltd
cmp
movsb
inc
xor
cs
or
frstor
test
imul
cmc
inc
push
mov
add
xlat
adc
int3
xchg
adc
enter
dec
inc
mov
out
or
or
push
xchg
cmp
cs
push
mov
jge
mov
pop
shrl
cmp
das
cld
stos
adc
ret
sub
movsb
push
cmc
aaa
aaa
dec
fucomp
jb
cmp
pop
cmp
mov
rcll
lods
mov
and
daa
lea
xor
fucomp
aas
jnp
addb
nop
mov
fisttpll
jnp
ret
xchg
push
adc
ss
add
pop
and
inc
out
mov
pushf
pop
out
jle
std
xchg
test
dec
mov
push
and
mov
push
pusha
fadd
dec
pop
sbb
sub
add
repz
dec
cmc
dec
hlt
rorb
enter
shlb
rolb
or
insl
aam
jo
jne
push
ret
xor
push
scas
scas
sbb
lea
lcall
or
pop
and
lret
and
andb
test
xor
mov
push
jg
rcrl
vpmulhw
mov
scas
sbb
stos
add
sub
xor
hlt
mov
cmp
sub
ds
dec
repz
jp
push
push
adc
lea
push
js
xchg
adc
mov
hlt
dec
push
jno
pop
mov
loope
stc
fidivrl
lret
pop
jp
xor
fdiv
adc
mov
sub
sti
testb
inc
adc
addr16
mov
dec
pop
aam
pop
jmp
xchg
scas
rorl
pop
adc
repz
loop
xchg
sub
ret
ss
pop
mov
sbb
add
mov
jecxz
in
lea
mov
pop
out
dec
aaa
stos
mov
cmp
and
out
dec
out
and
xor
pop
mov
dec
lods
cmp
insb
int
out
dec
xchg
stc
jmp
xchg
mov
mov
dec
lock
dec
mov
sbb
mov
push
lds
xchg
xor
loopne
ds
add
jb
lcall
dec
sbb
je
ss
imul
daa
clc
adc
and
cmp
aas
das
test
mov
mov
add
inc
jb
mov
data16
jmp
xchg
icebp
ljmp
icebp
mov
or
pop
dec
push
jp
out
imul
sbb
and
mov
xorb
xchg
mov
lods
sbb
adc
repz
iret
pop
es
mov
divl
xchg
rcr
outsl
add
xor
sahf
mov
adc
inc
fdiv
sbb
push
xchg
xchg
jnp
mov
popa
int3
push
jmp
push
test
or
std
dec
xor
fwait
xor
add
scas
mov
fldl
and
js
and
push
sub
push
xchg
jo
dec
sub
mov
cmc
jns
es
es
pop
sbb
push
dec
add
lahf
in
cmp
jno
pusha
sub
out
or
push
cmp
mov
loop
xor
xchg
sub
test
xor
repz
pusha
push
je
aaa
xor
adc
out
mov
inc
sbb
test
mov
jg
and
pushf
popf
xor
sbb
xchg
cwtl
mov
cmp
pop
pop
negb
mov
lret
fisubs
jno
cltd
mov
jmp
add
inc
cmp
dec
cwtl
cmp
imul
xchg
imul
adc
lret
or
pop
mov
leave
push
fucomi
adc
cmp
pop
rcl
push
push
cmpsb
mov
cmpb
ret
add
xor
stos
add
push
imul
adc
ficomps
dec
ficoms
loopne
sub
mov
addr16
jmp
jns
push
in
pop
shl
jmp
mov
dec
ret
xor
push
notl
dec
inc
std
das
shll
jae
mov
inc
sbb
and
jo
addl
test
mov
inc
rclb
fwait
push
xchg
mov
and
loop
sub
repnz
int
js
mov
scas
mov
push
andb
mov
popa
clc
das
sbb
rcll
out
pop
fnstenv
shr
inc
rcrb
pop
mov
mov
push
js
je
loop
fidivl
add
gs
cmc
mov
jo
sub
ret
jae
inc
stc
xbegin
pop
cmp
push
push
jae
mov
std
js
mov
push
mov
and
xchg
out
push
inc
sub
jecxz
rorb
adc
fcoms
js
scas
pushf
adc
testb
cltd
jne
fstpt
mov
jno
lods
push
push
add
ja
cmp
jno
notl
xor
loopne
adc
sbb
lcall
in
test
lods
mov
pop
fwait
mov
jge
push
test
aas
jg
push
fidivrl
js
cmpsb
loop
je
call
dec
push
lods
cwtl
call
xor
outsb
or
jb
mov
stc
inc
fnstcw
xor
pop
or
add
cmp
and
iret
xchg
ljmp
lds
test
lret
dec
mov
inc
sub
mov
sbb
jo
mov
sub
mov
inc
repz
into
dec
sub
popa
decl
popa
sti
cmpsl
xchg
ljmp
pop
mov
std
out
add
xor
subb
push
xchg
lahf
sbb
push
imul
cmp
out
mov
bound
mov
mov
jb
add
test
push
test
std
cltd
mov
mov
in
das
fisubrs
js
repz
adc
cmp
xlat
outsb
adcl
jno
push
push
push
jmp
pop
nop
test
jno
push
mov
xchg
imul
movsb
nop
inc
jbe
jne
loope
push
pushf
sarb
fxch
ljmp
sub
movl
fnsave
dec
pop
xchg
inc
frstor
fnstsw
lock
sbb
popf
stos
sbb
cmc
push
push
push
aaa
lret
jnp
pop
add
cld
cmp
mov
inc
push
push
cmp
push
mov
mov
repnz
mov
cwtl
ja
cmpsl
mov
int
lods
shl
pop
out
testb
test
add
xchg
imul
dec
jmp
xchg
das
ret
fwait
sti
cltd
or
scas
push
xor
jecxz
mov
mov
loopne
inc
popf
stc
je
and
inc
jecxz
sahf
jbe
ret
jnp
adc
lds
push
cld
xchg
cmpsl
lcall
xchg
out
jp
mov
sbb
sahf
insl
ds
imul
dec
ljmp
cmp
jp
push
sbb
adc
cmp
pop
hlt
jno
jb
rcll
sti
add
test
into
jbe
ja
cmpsb
sub
dec
js
mov
pushf
and
jmp
gs
or
filds
je
xlat
sarl
xchg
push
xlat
xor
pop
in
sbbl
rolb
add
cmp
and
cmpsl
loope
rcr
adc
jg
xchg
mov
cwtl
or
jecxz
add
rclb
lcallw
into
xchg
adc
enter
mov
xlat
shll
mov
mov
insb
pop
mov
sub
jg
jl
cld
testb
sbb
jl
dec
jno
mov
iretw
roll
ljmp
cli
frstor
pop
mov
insb
cmp
shl
inc
sub
cwtl
les
push
cmpsl
mov
stos
imul
fiaddl
xor
push
mov
jl
lds
sbb
mov
ret
sbb
loope
out
lds
sub
xchg
bound
insl
or
loop
dec
mov
pushf
leave
movsb
repnz
bound
xor
mov
sub
pop
pop
jno
nop
stos
jb
or
sbb
outsl
loopne
ja
xchg
outsb
jns
in
orl
add
adc
adc
cmc
mov
rcr
lret
adc
insb
lods
mov
pop
test
mov
pop
in
stos
call
hlt
mov
or
mov
into
add
bound
ljmp
inc
fcomp
fldl
fidivrs
jns
lds
addl
icebp
pusha
mov
cmp
mov
xchg
push
mov
fldenv
dec
pop
add
into
shll
mov
loope
pop
fistps
in
push
sbb
iret
xor
cmp
out
testb
mov
loop
dec
out
js
mov
or
jbe
jae
add
imul
out
xor
aas
outsl
daa
mov
dec
cmp
nop
clc
rcrb
aas
dec
adc
add
sbb
dec
push
movsb
inc
fcmovbe
loope
or
add
add
mov
inc
popf
cmpsl
mov
in
mov
cmp
pusha
addl
into
outsb
push
inc
scas
push
frstor
arpl
xchg
jno
or
imul
xor
inc
adc
in
add
scas
cwtl
pop
and
out
push
xchg
cmc
loope
fimuls
mov
in
lahf
hlt
call
cmp
loop
test
int3
push
arpl
xorl
mov
jns
push
loope
dec
inc
pop
dec
fisttpll
mov
push
dec
int3
insb
fistpll
cmc
xchg
pop
xor
sub
insb
fidivs
mov
andb
xlat
push
daa
dec
repnz
xor
fs
addr16
mov
mov
inc
fsubs
ljmp
push
cmpsl
or
lods
pop
jle
int
and
push
jge
pop
mov
sbb
test
mov
test
cs
ja
mov
lret
xlat
pop
push
les
mov
cmp
fsubrp
mov
mov
push
imul
cmp
pop
push
xlat
insb
mov
icebp
pop
aaa
inc
ljmp
sub
cmp
mov
cmp
movsb
inc
in
sub
testb
fisttps
add
pop
jp
push
jne
xchg
rcr
dec
fldcw
scas
icebp
push
int3
mov
mov
xor
shl
scas
repnz
daa
fsubrl
bswap
gs
pushf
dec
pop
mov
in
sbb
push
mov
lds
leave
dec
and
pop
add
insl
scas
inc
adcl
stos
mov
sbb
xchg
sbb
sbb
sbb
push
inc
cmp
pop
leave
bound
insl
stos
cli
lahf
xor
mov
dec
cwtl
push
aaa
fldcw
push
jg
lea
and
and
sbb
cmp
push
mov
divl
lods
pop
cmpsl
and
lods
jns
mov
mov
jnp
push
jle
popl
add
insb
pop
cli
sbb
imul
pushf
out
sbb
adc
fwait
push
xor
movsl
cmp
push
pop
or
ss
pop
movsb
sbb
sbb
cmp
imul
xor
pop
jbe
mov
out
dec
pop
add
cmp
fldcw
pushf
andl
das
sbb
mov
in
inc
aas
adc
xchg
dec
popa
shrb
lret
pop
jbe
jmp
call
jnp
ss
jns
aad
lds
add
add
bound
mov
xchg
loopne
cmp
lds
rorb
jae
dec
fstl
mov
iret
shll
fdiv
mov
mov
movb
notl
loope
or
cmpsl
pop
lds
mov
mov
adc
mov
fidivrs
mov
inc
sti
mov
arpl
pusha
push
sbb
adc
sbb
xor
ret
lret
sbbb
imul
and
int
jecxz
and
mov
fcomps
mov
outsl
lods
dec
dec
cli
insl
and
ficomps
inc
test
clc
or
dec
add
leave
mov
js
push
lds
pop
shrl
cmpsl
inc
sub
mov
mov
lods
out
jle
mov
in
ret
mov
jne
dec
pop
dec
and
sbb
mov
or
lcall
push
ror
dec
clc
ret
ret
jp
loopne
inc
dec
pop
cmp
int
popa
jae
pushf
ds
fwait
sub
push
ss
in
aas
adc
xor
popa
data16
add
jmp
xchg
and
pop
rcll
add
xchg
pop
fmull
fwait
dec
mov
movsl
sbb
aaa
dec
inc
inc
add
dec
inc
and
jmp
ret
pop
arpl
mov
pusha
les
cmc
xchg
popf
repz
and
aad
jle
cmc
fimuls
sub
or
lds
add
loopne
fwait
cwtl
aad
cwtl
sbb
iret
push
xor
xor
loop
pop
cmp
jl
add
call
movsl
les
sbb
pop
mov
push
movb
adc
adc
addr16
shll
add
fidivl
xchg
and
out
jns
and
inc
call
clc
popf
fs
lea
push
ds
mov
pop
imul
outsb
sub
jbe
xchg
dec
cmc
mov
popf
arpl
pop
jb
fs
pop
jo
add
xor
fstl
xchg
pop
jmp
pop
gs
or
popf
cmp
mull
movsl
sbb
pop
ficoms
sbb
inc
insl
inc
stc
inc
icebp
mov
rclb
stos
add
sbb
test
and
loopne
push
into
shr
repnz
popa
jecxz
jecxz
enter
adc
mov
pop
inc
test
adc
aaa
gs
imul
cmp
mov
xchg
push
xchg
mov
mov
lret
dec
mov
dec
loopne
push
inc
and
aas
push
movsl
jnp
jne
inc
std
jo
mov
xor
hlt
mov
pop
mov
or
mov
fldl
mov
cs
popa
pusha
fisubrl
test
xor
dec
pusha
cmp
cmp
xchg
popf
push
rolb
fadds
adc
std
sbb
jno
dec
sti
pop
out
sub
ror
fwait
jbe
or
jmp
lods
add
xor
inc
pop
pop
jno
gs
hlt
cwtl
sub
sahf
xor
mulb
mov
hlt
in
clc
jae
mov
aad
xor
push
ss
insb
and
in
and
clc
loopne
test
shrb
add
mov
cmp
or
call
shrl
mov
adc
mov
jle
cmp
pop
out
adcl
stos
mov
pusha
lret
ja
loopne
mov
jbe
lret
movsb
rolb
je
sbb
sahf
push
pop
mov
jbe
jl
setnp
incl
orl
pop
stos
mov
mov
loopne
es
sbb
pop
outsl
rcrb
sub
add
int
or
inc
addr16
mov
xor
clc
cmpsb
call
dec
loopne
shlb
fldcw
or
sbb
mov
inc
jp
bound
jbe
mov
jecxz
xor
or
test
stc
or
dec
fs
push
loope
shl
mov
mov
lahf
dec
rorb
pop
cmp
scas
mov
sbb
mov
aas
add
jle
js
sar
stc
rclb
dec
je
inc
popf
sbb
es
and
pop
inc
outsb
add
notl
sub
loope
cmp
out
and
inc
xor
mov
lcall
lods
jne
mov
inc
jns
mov
bound
cltd
mov
dec
subb
cwtl
xchg
ja
pusha
gs
sarb
xchg
push
loopne
jne
xlat
rorl
lcall
jae
and
xor
inc
mov
xor
mov
add
test
imul
mov
insl
jnp
or
push
call
loope
and
mov
add
pop
xorl
push
int
mov
pop
ret
mov
ret
sub
jne
outsl
sub
rorb
orl
hlt
popf
movsl
hlt
dec
std
push
inc
stos
popa
xchg
inc
xchg
int3
lret
cmp
fnstenv
cltd
insb
or
je
inc
cltd
cmpsl
js
jle
mov
mov
fwait
xchg
mov
ss
lcall
imul
cmpsb
dec
cmp
cltd
add
cmp
lret
inc
pop
lret
inc
cwtl
incb
jecxz
pusha
adcl
enter
xchg
add
lcall
inc
add
out
push
lcall
dec
jo
mov
fiaddl
add
pop
mov
loope
inc
cwtl
out
sbb
mov
mov
mov
mov
or
cld
cmp
push
in
and
add
inc
popf
pop
out
rcrb
xchg
cmpsl
call
push
imul
je
mov
mov
push
rorl
int3
repnz
sub
fisttpl
pop
push
push
lods
aas
test
lret
mov
cmp
cmpsl
shl
jle
shll
aad
sub
xchg
xor
aas
inc
sbb
aaa
jae
add
jmp
pop
inc
and
xchg
and
inc
mov
data16
adc
mov
mov
cmp
jno
mov
jo
dec
sarb
jb
jb
sub
fisubrl
and
add
bound
int3
hlt
jne
and
cmp
lods
fsubs
jbe
scas
pop
add
push
pop
mov
jle
pushf
mov
out
dec
mov
ljmp
mov
mov
test
test
lahf
jb
int3
sub
adcb
add
or
and
incb
inc
mov
push
pop
lods
or
inc
or
std
inc
dec
inc
call
test
lret
and
dec
out
adc
jmp
dec
jbe
xchg
movsb
mov
stc
lea
nop
sub
sub
in
jb
fmul
inc
popa
sub
mov
pushf
outsb
cmc
xorl
push
fwait
jmp
bound
into
mov
mov
pop
fbld
cwtl
aaa
std
sub
das
or
fildl
out
xlat
lahf
cmp
repnz
jmp
sub
cmpsl
insb
shll
cmpsl
pusha
lahf
addb
loop
and
movsb
cmp
inc
adc
int
push
jb
xchg
pop
pop
push
inc
cmp
jg
xchg
add
stos
jmp
lds
aaa
rcrb
sbb
mov
inc
movsl
sub
xor
aaa
imul
nop
enter
das
ljmp
cltd
sub
into
outsl
xchg
jns
in
cli
dec
cmp
dec
mov
loope
add
jbe
and
inc
dec
shr
es
rol
fldl
ljmp
fbstp
enter
pusha
jecxz
lret
out
inc
jnp
and
sub
mov
das
stc
mov
clc
arpl
xor
dec
data16
cli
js
mov
aam
aad
push
sbb
fucomip
call
in
inc
repz
in
ss
jae
jmp
jmp
sub
fwait
mov
jo
push
out
mov
jbe
scas
lcall
cmpsb
ret
scas
xor
jbe
lcall
out
inc
fs
push
mov
dec
or
cld
loop
xor
or
push
jno
int
cmp
fst
inc
sbb
cmpsb
daa
mov
xor
mov
mov
lods
pop
add
cld
xor
mov
ficomps
push
mov
mov
xchg
addb
test
jne
and
mov
inc
clc
xor
das
push
sti
sub
cmp
es
mov
xchg
stc
stos
adc
dec
adc
push
dec
push
pop
int3
push
xor
mov
jmp
out
pop
aas
xorl
imul
pop
imulb
shlb
or
and
pushf
mov
std
sbb
js
xchg
sub
adc
int3
mov
leave
pusha
leave
mov
lret
dec
mov
cmpb
sti
bound
jnp
dec
pop
mov
mov
sub
leave
imul
nop
mov
add
xor
stc
test
aam
pop
pop
dec
sub
jbe
pusha
and
jae
in
jns
sbb
xchg
dec
insl
loopne
xor
test
iret
push
push
mov
sbb
ss
imul
in
sub
fdivl
add
inc
scas
mov
ja
mov
mov
out
pop
in
xor
andl
mov
ss
popf
mov
inc
scas
cltd
pusha
fbstp
xchg
add
sbb
andl
mov
data16
and
push
test
iret
stc
sbbb
outsb
daa
outsl
ret
xchg
sbb
test
ja
sbb
lret
mov
pop
cmp
mov
pop
mov
andl
mov
dec
lds
shl
add
rcll
mov
xor
movsl
subb
sub
test
push
mov
arpl
sarb
gs
and
adc
sti
mov
pop
ds
xchg
dec
jecxz
dec
fs
fcmovbe
mov
or
js
aaa
iret
es
add
orl
icebp
lea
cld
stc
xchg
mov
xchg
movsl
jno
je
mov
arpl
add
xor
gs
fwait
add
mov
popf
xor
add
mov
cld
pusha
lds
fnstsw
jae
pop
cmp
mov
pushf
lret
lock
and
arpl
faddl
mov
mov
and
inc
repz
out
jne
filds
fsts
test
in
sbb
outsb
js
ret
nop
push
in
add
stos
pop
es
push
mov
sub
notb
pop
aas
adc
lds
in
mov
shlb
das
sub
fsubl
lahf
out
adc
adc
icebp
sti
aaa
loope
call
aaa
ficoml
leave
test
mov
xor
in
lock
lods
mov
leave
aaa
adcb
pop
add
call
stos
stos
call
add
jecxz
inc
repnz
sbb
mov
jnp
pushf
sub
aaa
mov
pushf
pop
lret
push
inc
cmc
push
test
cld
mov
fiadds
mov
xor
jne
jne
loope
stos
adc
xchg
mov
fcoms
add
and
pop
xchg
aam
push
inc
ret
insl
xchg
cmovg
xchg
jge
sub
push
ret
dec
addr16
jmp
or
daa
repnz
fucomp
inc
cmpsl
pop
bound
sahf
and
ja
dec
pop
arpl
movsb
push
js
daa
rclb
ffreep
cmp
lret
jg
loop
xchg
iret
fbstp
imul
inc
shrb
mov
push
outsl
and
inc
cli
or
xrelease
aaa
adc
push
cmp
sbb
ja
mov
xchg
cmp
sub
mov
insl
das
adc
pop
lahf
xor
push
mov
dec
addr16
mov
sub
testb
aam
inc
add
sub
xchg
mov
nop
and
xor
mov
and
repz
xchg
out
jmp
push
fstpt
push
and
xor
and
pushf
xor
in
and
add
xchg
cmpsl
out
inc
loopne
jg
out
inc
arpl
test
push
fwait
test
inc
mov
cmpsl
into
mov
enter
ja
cld
push
xchg
out
bound
outsb
add
popf
ret
and
lods
shr
jmp
mov
cmp
pop
aad
lods
push
or
sbb
out
lret
xlat
mov
push
xchg
sub
pop
shl
inc
pop
cmc
jne
push
repnz
jge
insb
ds
dec
dec
stc
shrl
outsb
aad
xchg
pop
pop
xchg
insl
xlat
xor
cmp
aaa
lret
sub
jb
xor
inc
mov
testl
pop
gs
fdivrs
mov
fs
jb
andl
lret
and
push
sahf
cmp
or
sub
iret
mov
dec
mov
fists
xchg
mov
push
mov
cs
test
jl
xchg
add
ficomps
push
sub
sbbl
fstpt
loope
lock
mov
mov
outsl
cmp
fnstsw
fcoms
or
push
jbe
test
dec
jg
inc
in
pop
jecxz
dec
push
hlt
and
loopne
in
sbb
shlb
cmpsl
ret
cmp
daa
ficompl
xor
loop
xchg
sub
inc
mov
sti
rcl
jbe
push
insl
jecxz
xchg
sbb
negb
shr
inc
lret
aas
fucomi
push
test
adc
addr16
popf
or
dec
mov
jp
pop
pop
add
pop
decl
into
lret
xchg
arpl
das
cmp
ljmp
lock
or
xchg
popa
or
pop
aas
pop
addb
mov
popa
hlt
adc
int
ret
push
pop
call
in
out
push
cmc
xchg
xchg
push
or
xchg
in
dec
es
add
sbb
mov
push
cmp
bound
hlt
push
mov
ret
or
cwtl
push
jmp
out
pop
dec
sbbb
mov
lds
xor
clc
hlt
xchg
and
sub
mov
or
xor
sub
lea
scas
adc
jle
fs
pop
xor
push
aaa
in
imul
xchg
daa
andb
sbb
push
sbb
dec
or
cmpsl
int
fsubr
rcl
adc
jne
mov
push
sub
or
inc
mov
scas
imul
daa
sbb
mov
mov
jbe
addr16
aas
adc
xor
sbb
sbb
push
dec
lcall
imul
in
pusha
mov
rclb
inc
lret
mov
push
movsb
mov
xor
mov
flds
jl
stc
frstor
jp
shrb
xor
push
aam
dec
cmp
adc
or
fbld
jbe
clc
cmpsb
in
cmpsb
inc
fcoml
ret
push
addr16
and
xor
roll
dec
cli
sub
cwtl
in
add
popa
cmp
out
pop
out
add
sbb
scas
aaa
adc
pop
cld
xor
mov
cs
xchg
cld
cmp
es
cli
add
aad
push
mov
push
adc
mov
leave
dec
loope
add
pushl
push
xor
or
jne
or
outsb
xor
pop
mov
lea
mov
mov
mov
inc
icebp
out
jle
popf
std
mov
rolb
dec
into
mov
es
pop
push
mov
push
fisubrs
adc
fs
lret
out
out
pop
std
push
jmp
lret
lret
leave
mov
dec
stos
imul
lea
or
cltd
pop
sbb
andl
push
jge
subb
mov
jnp
sbb
add
xchg
xchg
fldcw
inc
jl
adc
sahf
cmp
insb
outsl
pop
xor
cld
loopne
and
jp
pusha
arpl
outsl
movsl
lods
inc
add
test
pop
push
mov
shlb
push
push
hlt
sahf
push
enter
jbe
pop
leave
pop
lahf
pop
int
dec
aaa
stos
cli
xchg
faddl
pop
repz
mov
pushw
and
adcb
pop
adc
and
shlb
rcrb
cmp
pop
dec
mov
add
imul
xchg
xchg
fldenv
xchg
adc
lods
xor
pop
pop
cli
sub
setnp
xchg
xor
arpl
call
or
dec
dec
pop
movsl
sarl
fistps
out
lret
bound
and
addr16
into
inc
jbe
and
adcl
imul
sub
je
rorb
and
xor
int3
or
cmc
ret
outsl
sub
sub
mov
xchg
mov
cmpsl
lock
sub
sbb
cmpsb
sti
cld
cli
or
ficompl
add
pop
addr16
mov
pop
hlt
xchg
fwait
dec
dec
inc
xchg
mov
shll
sub
add
test
rorl
dec
jb
lret
aas
adc
push
fcomps
leave
sub
and
call
cmpsb
xor
pop
pushf
orb
sbb
sub
int3
mov
int3
jno
inc
cs
mov
cli
mov
mov
movzbl
les
pop
push
mov
negb
dec
sbb
xchg
arpl
mov
mov
lods
mov
pslld
push
or
dec
pop
fcomps
jne
mov
out
or
lds
les
dec
out
mov
pop
mov
mov
inc
fidivl
ficoms
mov
dec
push
subl
iret
xorb
add
out
adc
outsb
test
push
inc
cmpsl
aaa
clc
pop
jecxz
jle
sbb
jmp
jmp
mov
push
cltd
negb
pushl
incl
or
cld
and
sub
add
pop
outsl
sbb
or
sbb
sub
jge
mov
or
jge
add
jl
shrl
mov
dec
iret
push
ret
jne
jb
mov
or
add
jbe
hlt
faddp
arpl
mov
pop
and
test
loop
shll
sub
cs
xlat
xor
push
les
mov
xor
fwait
pop
repz
pusha
test
leave
inc
arpl
pushf
cmc
pop
add
add
mov
xor
inc
aas
xor
enter
fimull
xchg
orb
or
arpl
imul
mov
sbbb
and
movaps
fisubs
adc
mov
test
mov
insb
pushl
outsl
dec
sbb
mov
inc
mov
insl
xlat
leave
add
dec
cmpsl
xor
stos
stc
sbb
fidivl
in
add
xchg
out
add
mov
add
addr16
clc
mov
mov
jp
ffree
clc
iret
je
inc
lcall
divb
lahf
dec
cmpsl
sbb
inc
push
scas
es
ret
outsl
lret
pop
dec
dec
jb
mov
sub
sbb
movsb
bndldx
mov
pop
repnz
pop
xchg
ds
sbb
movsb
push
in
mov
push
jne
shlb
in
jp
pop
hlt
rol
mov
addr16
rorb
xor
imul
push
inc
fwait
xchg
cltd
sub
inc
fwait
mov
jbe
std
jecxz
fdivl
mov
stos
inc
jno
stos
mov
js
fbld
int
stos
insl
push
pop
cmp
in
test
jbe
outsl
mov
jbe
add
mov
jp
insb
rcrb
push
push
mov
test
in
movsl
cmp
sub
xor
and
or
jne
in
call
lods
les
movsl
mov
mov
sbb
out
jp
loope
jp
push
and
add
jne
test
das
push
xor
mov
or
int
sbb
lahf
sub
add
inc
pop
pushl
in
dec
pop
inc
movups
fdivs
xor
jecxz
loop
push
mov
mov
xchg
mov
js
fsubl
outsl
in
loopne
mov
xchg
add
fidivrl
lss
and
mov
lds
cmc
daa
mov
pop
aam
std
jae
movsb
nop
daa
add
imulb
adc
push
jg
mov
mov
icebp
lock
mov
xchg
std
or
lahf
or
sub
xor
cli
fnstenv
movsl
mov
xchg
mov
fiadds
cltd
icebp
or
and
jl
mov
xor
loop
jbe
mov
popa
and
sti
pop
lcall
jecxz
fwait
aaa
sub
mulb
jg
push
lret
add
push
jg
xchg
outsb
push
outsb
ret
push
shl
fdivs
rcrl
outsl
sbb
mov
pop
sbb
mov
cmp
jge
lret
insb
ljmp
mov
or
mov
push
stos
mov
loopne
int
and
add
scas
push
into
mov
mov
add
jbe
pop
call
or
xor
roll
push
movsl
sub
cmc
sub
clc
xor
add
pop
mov
scas
subb
pop
push
sbb
gs
mov
incb
sarb
mov
jno
sbb
jmp
hlt
push
jo
jle
xlat
pop
filds
ret
scas
cmp
mov
xorb
insb
ss
mov
xor
mov
xchg
inc
push
stos
andl
aam
xor
testb
std
test
and
mov
jecxz
mov
scas
or
push
cmc
pop
test
pushl
push
inc
cltd
or
scas
mov
push
mov
xor
sbb
loop
adc
into
and
mov
int3
mov
je
xor
les
test
jle
das
daa
out
ret
sub
les
add
rolb
fdivrs
cmp
cwtl
and
arpl
and
repz
inc
or
inc
dec
aas
push
fcomi
imul
dec
sub
mov
ret
sub
std
jnp
cmp
cwtl
inc
mov
icebp
lret
mov
xor
leave
shlb
xchg
jns
lods
adc
jo
outsl
gs
movsl
test
outsb
jmp
pushf
inc
pop
dec
dec
cmp
adc
push
and
ret
popf
mov
in
sbb
lret
cmp
ljmp
jp
aam
add
inc
sub
test
notb
lds
jmp
push
movsb
lcall
nop
jne
inc
stos
scas
mov
test
cmp
push
and
popa
fsubl
jle
inc
insb
rol
mov
push
aaa
shll
mov
mov
pusha
mov
and
xlat
adc
scas
outsb
xchg
xchg
cmp
cltd
mov
dec
and
xchg
aas
or
push
test
and
bound
inc
insl
frstor
leave
das
pop
dec
xlat
add
test
inc
push
movsl
mov
sbb
or
lea
sbbb
scas
movsl
mov
insl
mov
fwait
xor
cmpsl
mov
fs
xor
inc
je
dec
ss
inc
add
add
mov
and
std
insb
adc
cmpsl
ds
and
iret
xchg
into
addl
and
stos
cmpsl
out
pop
repnz
orb
out
xchg
dec
mov
or
stos
sti
pop
enter
outsl
movb
gs
add
mov
adc
sbb
cwtl
xchg
pop
std
xchg
push
xchg
es
jecxz
mov
pop
outsl
xor
add
mov
fldt
push
bound
pusha
lds
xchg
inc
add
push
jno
dec
inc
mov
ja
arpl
stc
pop
test
xchg
xchg
jno
mov
mov
jl
mov
loopne
dec
add
insb
push
sub
into
jle
fidivl
stc
bound
mov
pop
call
xor
scas
add
pop
mov
enter
xor
cmp
lock
cld
sarl
cmp
out
cmp
jo,pn
shld
or
data16
mov
divl
mov
inc
mov
fcmovne
out
xor
jbe
jne
insl
xchg
lret
in
inc
xor
xchg
add
sub
inc
push
cwtl
andl
push
jae
out
in
test
lret
shufps
shl
add
add
mov
mov
icebp
mov
repz
lahf
xsha256
cmpsb
adc
pop
insl
icebp
stos
push
mov
sbb
loopne
nop
jle
std
xchg
adc
das
sti
cmpsl
push
int
negl
add
mov
xor
aaa
pminub
pusha
hlt
dec
adc
xchg
icebp
stos
push
lahf
mov
cwtl
jae
data16
push
and
xchg
inc
lret
fs
inc
fidivrs
leave
mov
leave
je
jne
repz
sbbl
push
and
push
lahf
dec
fdivs
xor
lds
dec
sti
stos
test
fstpt
sub
mov
lods
xchg
dec
push
stc
nop
cmp
fwait
inc
test
insb
pusha
subb
test
cmp
shrl
push
jb
ja
daa
cmp
je
mov
sti
andl
xor
into
pop
xchg
pop
dec
push
mov
push
add
mov
fcoml
xor
mov
jle
ret
fidivrs
sbb
cltd
data16
add
jo
push
lods
imul
mov
sub
enter
stos
or
mov
data16
pop
ret
imul
sahf
xchg
xchg
sbb
cmp
add
les
je
add
loopne
dec
ljmp
aas
ret
arpl
adc
pop
xlat
in
inc
leave
cmp
cmp
lds
adc
daa
arpl
pop
int
lods
frstor
mov
js
repz
addb
sub
mov
ret
pop
sbb
jae
in
fisubl
adc
mov
pop
imul
push
or
jnp
sub
push
out
pop
cmc
mov
lcall
inc
outsb
cwtl
dec
mov
imul
scas
add
mov
test
out
xlat
lret
add
cmc
cmp
dec
lcall
hlt
push
jmp
stos
mov
jmp
jbe
mov
rclb
adc
mov
inc
adc
mov
sub
jno
xchg
loope
ret
scas
clc
loopne
notb
jmp
push
and
jl
xor
ss
mov
xchg
cmc
std
adc
add
xchg
mov
pop
cmp
in
push
pop
aas
add
sbb
push
add
gs
adc
shrl
jae
daa
insb
push
add
inc
jb
popa
pop
mov
or
call
in
cmc
xchg
cmp
cmp
xchg
add
pop
adc
or
div
hlt
push
lods
es
adc
stos
dec
dec
mov
stos
dec
push
sarl
mov
dec
js
clc
insl
call
pop
dec
cmp
sub
sub
adcl
out
sbb
int3
xor
push
movsl
mov
in
stos
fldl
test
cli
es
sub
sub
lret
xor
pushf
lock
popl
or
leave
addb
mov
decl
jo
rol
gs
fstl
pop
outsb
sahf
fimull
call
andb
dec
dec
add
jp
mov
mov
bound
or
xchg
mov
mov
vmovhpd
scas
lock
movsb
sti
pop
cmc
adc
mov
pop
loop
sbb
dec
pop
cmp
imul
mov
xchg
sub
jmp
xor
in
xchg
dec
adcl
fidivrs
or
mov
push
cwtl
repnz
push
jge
cli
and
push
jge
inc
outsl
daa
and
add
mov
movsb
lcall
std
cltd
shll
ss
adc
rcrb
push
push
mov
stos
int
xchg
out
mov
call
mov
xor
in
cwtl
or
das
adc
pop
imul
ror
jle
or
mov
push
mov
and
lods
ss
inc
sahf
cmpsb
mov
jno
jge
sub
aad
cwtl
enter
les
jecxz
dec
adc
cmc
jge
loop
cwtl
outsl
shrb
int
imulb
adcl
fdivl
addb
das
cli
push
stc
xchg
fs
testl
add
repnz
mov
or
adc
popf
shll
arpl
push
fdivl
pop
lcall
pop
adc
scas
adc
lods
data16
stos
pop
inc
stos
cs
ds
and
or
das
mov
xchg
aad
repz
or
cmp
push
rclb
adc
das
push
jl
jno
aaa
push
and
xlat
out
movl
add
aam
mov
lods
test
es
mov
dec
inc
ds
in
lret
adc
arpl
test
jno
ljmp
dec
icebp
in
imul
dec
paddw
mov
cmp
mov
test
rol
jle
outsl
pushf
pushl
inc
xchg
mov
leave
mov
add
rorb
sbb
push
js
sbbb
repnz
inc
daa
into
inc
lea
sahf
sub
jg
ljmp
jnp
mov
sbb
movsb
pop
jmp
adc
xchg
incb
adc
cmp
mov
int3
dec
pop
into
divl
push
fidivrl
pop
jae
int
shll
in
jo
sub
xor
into
sub
xlat
scas
and
adc
xchg
and
dec
cld
inc
push
icebp
fiaddl
hlt
adc
inc
sti
rorl
push
cs
cmp
push
dec
add
xchg
xor
fistl
in
lahf
and
push
fs
adc
dec
mov
popf
inc
stc
aam
push
sbb
add
sub
or
dec
filds
out
fstpt
and
lcall
cli
jb
insb
aam
sbb
lods
mov
sub
adc
iret
fisubl
aad
das
xchg
sahf
mov
sti
sbb
sbb
mov
inc
imul
out
adc
jg
in
mov
xchg
jmp
ja
jle,pt
fisttpl
insl
pop
adc
orps
pop
mov
pushf
dec
sub
cli
dec
mov
or
adc
out
jp
mov
mov
into
sbb
outsl
repz
addr16
xor
mov
jo
add
mov
ljmp
fisttpl
pop
icebp
xor
xchg
imul
movsb
or
fcmovnb
dec
dec
fldcw
push
out
out
and
add
mov
ret
cmc
dec
add
push
lret
insl
shlb
push
inc
in
cmp
lcall
cmpsb
push
jbe
pop
incl
and
pop
je
cli
jl
cmp
mov
cmpsl
cs
ljmpw
inc
xor
rorl
hlt
mov
jno
inc
mov
loopne
pop
movsb
ds
add
ret
jp
or
mov
outsb
add
repz
lock
aad
pop
jp
lea
fs
mov
ffree
nopl
cmp
pop
mov
repz
outsl
fidivs
dec
sbbb
sar
or
pop
cmpsb
push
in
sbb
ss
pop
mov
fldpi
xchg
mov
lahf
push
xor
jns
shrl
xchg
mov
inc
jb
pop
and
sub
jg
mov
ret
push
in
jecxz
cmp
lret
cld
imul
aad
arpl
jne
lds
pop
sub
movsb
mov
sbb
dec
rcrb
outsl
xchg
mov
inc
sub
inc
jo
push
jae
addb
nop
jbe
in
xor
mov
lret
mov
aas
cli
loop
lods
sub
add
sbb
push
outsb
fs
ss
in
xor
cwtl
popa
in
xchg
bound
or
xor
push
scas
out
loopne
add
mov
xchg
cltd
or
icebp
add
sub
fucomip
test
mov
hlt
iret
push
dec
arpl
cmp
sbbb
pop
imul
inc
push
test
xchg
mov
je
cltd
xlat
orl
and
pop
jnp
arpl
leave
xchg
movsl
sub
lea
dec
xchg
mov
cmpsl
xchg
ret
adc
icebp
xor
fists
mov
scas
lods
inc
push
out
jle
pushl
int
lods
sub
xchg
xchg
les
scas
and
cwtl
das
mov
xor
cmc
dec
xchg
loop
adc
xchg
cwtl
das
pop
jg
inc
sti
jo
scas
adc
mov
xor
int
push
fidivs
loop
cli
xchg
sti
sub
pop
fstps
mov
out
push
mov
dec
mov
sbb
add
jns
aas
outsl
sbb
inc
pop
mov
lret
ljmp
ret
movsl
and
lret
and
mov
aam
nop
push
lret
lods
negb
pop
mov
or
cmp
push
out
pop
aam
mov
xor
mov
stos
push
push
xchg
insl
outsb
xor
dec
call
ja
sub
cmp
mov
rclb
sbb
add
loop
cmpsb
mov
pop
mov
fcoms
inc
jbe
push
xchg
arpl
pop
call
fnstenv
pop
pusha
sub
icebp
pop
or
add
fstl
hlt
mov
and
test
lret
stos
loopne
sbb
lret
lcall
in
jecxz
cmp
sahf
xor
pop
dec
out
in
stos
adc
jne
aaa
cmpsl
lods
push
popf
fiadds
dec
ret
lock
lcall
push
scas
xor
loopne
sub
popf
sbb
lcall
pop
pop
icebp
inc
rcl
cltd
mov
push
cmp
sub
sti
push
mov
fwait
in
xchg
mov
sbb
push
mov
je
push
or
gs
in
adc
testl
or
out
dec
mov
ret
shrb
pop
cli
pushf
ret
lds
xchg
jae
ljmp
mov
sbb
enter
lods
inc
aam
or
dec
dec
jecxz
adc
fs
jne
xlat
mov
xchg
fidivrl
int
xlat
arpl
pop
cmp
scas
mov
ret
repz
rolb
mov
pushf
hlt
je
push
sub
out
mov
mov
lret
daa
ret
mov
inc
ljmp
pop
sahf
int
mov
mov
adc
clc
mov
subl
jae
icebp
cmp
dec
inc
js
cmp
icebp
jecxz
imul
shlb
push
pop
sbb
sbb
pop
loop
imul
mov
inc
outsl
adc
xchg
add
and
add
insl
add
xor
ds
mov
push
js
add
das
or
add
sti
shr
xchg
xchg
sub
sbb
popa
cld
cltd
scas
testl
mov
test
add
xchg
mov
adc
int
inc
aas
push
push
repnz
jns
push
addr16
aas
sub
or
mov
dec
cld
xor
and
fnstenv
pop
mov
mov
fwait
int3
out
inc
out
test
xchg
mov
xlat
insb
pop
cmpsl
adc
bound
xchg
or
mov
fists
mov
mov
pop
jns
add
mov
jno
push
inc
xchg
clc
sbb
subl
cmpsb
addr16
pop
pop
movsl
adc
jle
fwait
mov
lahf
pop
xor
enter
pop
in
mov
or
fildl
cmpsb
xor
push
push
insl
push
mov
xchg
repnz
jl
sbb
jp
lods
int3
add
es
push
adc
frstor
loope
add
cmp
mov
inc
lock
loop
test
dec
cmpl
sbb
mov
ret
pop
std
push
mov
push
jecxz
outsb
lcall
shlb
mov
popf
xor
mov
sbb
sbb
fstpt
cmp
dec
cmpsl
adc
mov
iret
pop
lds
js
pop
aam
xchg
outsb
jp
add
dec
mov
inc
cltd
inc
sub
lret
inc
fst
sub
cmc
data16
mov
add
ds
mov
clc
push
sbb
xchg
aam
nop
xchg
jnp
push
cmp
mov
push
jo
xlat
cmp
mov
jae
lret
mov
sub
pop
mov
aas
movsb
push
out
cmpsl
push
jl
test
mov
push
mov
rclb
xchg
mov
lds
jns
dec
shlb
pop
or
cmp
insl
out
aam
xchg
and
mov
enter
rclb
add
lock
loop
jge
daa
into
xchg
sbb
inc
daa
outsl
ljmp
ret
inc
bound
mov
jp
push
pushf
sbb
mov
dec
test
insb
fisubrl
dec
sbb
add
in
fucomp
push
jg
das
sub
xchg
negl
mov
lcall
xchg
fs
jp
out
adc
mov
jb
mov
adcb
push
cmp
into
or
push
jmp
test
scas
jbe
mov
xchg
dec
inc
stos
jge
push
adc
lea
add
mov
sti
fisubrl
or
cs
jecxz
cmp
mov
mov
repz
inc
mov
adc
aas
jo,pn
test
lret
push
push
dec
push
mov
pop
jb
mov
mov
gs
sub
loope
or
add
push
lahf
inc
and
sbb
cmc
inc
mov
aaa
into
pop
mov
push
aas
lret
xor
push
lock
sbb
into
adc
lods
push
pop
repnz
ds
lcall
ja
fcomps
ja
mov
xsaveopt
shll
pop
mov
imul
rcrb
cmc
ja
mov
mov
fistps
pushf
mov
fsubl
mov
mov
push
aad
int
lods
outsb
mov
sub
fwait
shll
push
adc
mov
jb
enter
pop
out
dec
sti
test
push
leave
sub
push
pop
lods
xchg
mov
pop
addr16
dec
dec
inc
or
in
push
lock
mov
mov
mov
jne
jbe
sbb
test
je
outsl
in
les
mov
loopne
sub
fsubrs
jge
add
pusha
lods
or
sub
icebp
push
movsl
mov
push
cld
inc
xor
inc
lret
xchg
cmp
mov
bound
dec
mov
xchg
mov
jno
mov
int
push
iret
dec
gs
push
in
pause
mov
out
idivb
dec
xlat
scas
in
shrl
lods
cmp
sahf
repnz
dec
icebp
das
pop
and
into
sbb
xchg
sub
out
out
dec
and
ja
sbb
mov
inc
xchg
addr16
aad
enter
adc
push
jae
ja
adc
aam
lret
sub
xor
aaa
pop
scas
addb
push
sub
and
adc
fistl
cmp
outsb
dec
in
pusha
xchg
mov
fdivrp
or
jae
movsl
cwtl
int
movb
fwait
in
mov
dec
pop
dec
movsb
adc
in
xor
test
and
ficomps
mov
mov
fwait
loopne
das
repnz
test
adc
jmp
decl
addl
cmp
push
pop
popa
cmpl
jg
pop
call
cmp
xlat
ljmp
mov
clc
adc
mov
in
out
xor
xchg
enter
cmp
stos
jg
aad
stos
mov
jl
js
sub
dec
dec
jmp
add
mov
push
mov
dec
enter
out
jge
cmp
loop
or
pusha
sbb
jns
popa
sbb
adc
ja
pop
or
and
fs
mov
xchg
imull
sbb
movsl
loope
and
rcrb
push
aad
jns
shlb
aas
mov
add
jae
mov
adc
js
int
mov
add
xor
testl
cli
pop
pop
mov
adc
dec
loop
xchg
xor
loopne
xor
arpl
mov
sub
pop
xchg
jg
push
cmpsb
lock
pop
fiadds
mov
cmp
push
cmp
pop
lea
jp
arpl
cmpsb
cmpsl
jp
add
sbbl
dec
cs
in
inc
enter
movsl
push
in
adc
jge
in
inc
sbb
in
mov
and
lock
xchg
mov
out
inc
movsb
mov
pop
test
in
ret
pop
mov
push
fstpt
add
xchg
insb
cli
dec
pop
adc
dec
imul
pop
jle
outsl
mov
lahf
mov
aam
pop
xor
mov
mov
aaa
xchg
cs
inc
mov
dec
pop
sub
arpl
fisttpl
fnstenv
mov
push
and
test
sub
out
mov
push
fsubr
je
push
cwtl
arpl
mov
or
mov
jge
and
push
push
mov
sbb
imulb
scas
dec
popa
and
call
mov
add
push
or
sbb
sbb
mov
lahf
data16
sub
xchg
mov
sbb
xchg
mov
les
xor
data16
inc
lods
cmc
sub
pushf
dec
int
add
bound
test
lret
sti
subb
add
fs
adc
xor
sahf
lea
mov
sbb
cmp
and
xchg
mov
imulb
xchg
outsl
sub
repnz
cs
and
adc
les
ret
iret
lock
and
orl
inc
lret
pop
push
xorb
pop
adc
cmp
orb
popa
mov
js
orb
pop
push
sbb
push
mov
ss
or
mov
test
popa
mov
cmp
mov
fs
test
test
mov
outsb
jo
xor
fwait
xchg
pushf
mov
arpl
sahf
sbb
inc
xlat
mov
mov
loope
xor
rcll
mov
in
js
jge
call
add
xchg
and
call
call
push
inc
push
lret
mull
push
xor
mov
jge
pop
jmp
mov
movsb
cmp
in
dec
loop
xchg
inc
xchg
sbb
mov
ss
mov
mov
adc
xchg
push
push
fdivs
mov
enter
into
gs
fwait
mov
in
cs
dec
cmc
dec
mov
call
stos
sti
cmp
xor
rep
xchg
sub
addr16
or
hlt
dec
xchg
jmp
das
bound
or
mov
push
lea
dec
mov
aam
xchg
push
in
fwait
repz
pop
mov
push
popl
fidivrs
dec
cld
insl
jae
push
xchg
sbb
repnz
push
movsl
cmp
lahf
push
sahf
sbb
adc
in
adc
jnp
cmpsl
sahf
dec
dec
enter
pop
pop
call
mov
mov
cmpsb
pop
out
jecxz
lods
inc
stos
ljmp
js
xchg
xor
loopne
int
or
cmpsl
push
movsb
mov
nop
gs
lea
gs
inc
pusha
and
fwait
xor
cmpsl
adc
mov
test
pushf
mov
hlt
push
nop
xchg
dec
out
xchg
pop
mov
cmp
inc
add
pop
adc
xchg
outsb
push
pop
xchg
sub
rcll
fwait
xor
lret
lret
fidivl
xor
test
std
xchg
dec
jmp
and
mov
fsts
pop
adc
inc
add
pop
sub
xchg
rcrl
cmpb
leave
push
cmc
sbb
pop
jne
xor
cmp
add
nop
leave
inc
out
mov
mov
mov
jne
ss
xchg
push
pop
jb
loope
xchg
mov
sbb
inc
stos
js
ljmp
inc
and
push
sub
pop
jne
aas
orl
lahf
lock
cmpsb
push
mov
push
jg
lods
faddl
cwtl
das
mov
rcrl
push
cmp
jle
imull
shll
inc
mov
dec
jns
jg
sub
and
and
inc
xchg
inc
lret
inc
ljmp
cmpsb
cmp
mov
les
cmpsl
mov
stos
movl
adc
inc
jmp
sub
rclb
xor
gs
pop
sub
xchg
icebp
sbb
stos
cmp
or
mov
adc
jmp
mov
rcl
int
shll
xchg
push
fsubrs
clc
cmp
cmp
pop
mov
dec
jbe
lahf
push
divl
data16
cmp
in
xorb
jmp
add
aaa
fcoml
pop
repz
xchg
fwait
cmp
pusha
sbb
pusha
dec
inc
mov
xchg
hlt
jl
cwtl
stos
jbe
jnp
jge
sbb
lahf
cmpsb
dec
mov
scas
xchg
xor
add
mov
pop
jne
or
fdivp
test
lahf
sub
pusha
rol
cmp
in
insb
sar
dec
mov
divl
enter
jo
xor
jne
insl
add
xchg
mov
push
stos
or
push
push
adcb
std
push
insb
inc
xor
ss
mov
jecxz
aaa
mov
sahf
xor
repz
lea
and
xchg
xor
sbb
hlt
sbb
aad
out
push
movsb
cmp
aad
test
dec
push
push
scas
jmp
mov
fwait
aaa
dec
int
adc
xor
push
add
xor
sbb
pop
call
mov
dec
stos
inc
mov
push
lcall
cld
enter
dec
pop
cmp
ficomps
daa
inc
js
xor
mov
in
mov
fwait
aaa
lods
pop
je
add
xor
outsb
jl
push
mov
sbb
dec
cmp
nop
aad
ret
rcll
mov
dec
jl
push
pop
jbe
mov
sarl
inc
jmp
into
pop
popf
stc
arpl
lea
pop
cmp
insl
xchg
test
jl
sahf
stos
imul
clc
sbb
cmp
inc
scas
inc
je
ficoms
lret
aad
aad
mov
push
adc
pusha
cmpb
pop
add
ficomps
sub
shlb
ret
lods
mov
fcomip
lea
dec
inc
leave
call
mov
or
repnz
adc
addr16
pop
jmp
jl
call
pop
stos
and
mov
sti
shlb
sbb
iret
dec
andl
add
jbe
push
loopne
dec
inc
in
xor
ret
outsb
add
mov
mov
aas
cmpsl
jecxz
in
sbb
push
lret
in
jmp
stos
add
mov
push
push
scas
dec
mov
sbbb
stos
mov
bound
jle
fucomi
bound
inc
xlat
stos
inc
call
mov
and
inc
pop
mov
or
stc
push
sbb
std
popf
les
lret
ret
pop
mov
push
je
adc
repz
fs
and
lahf
in
adc
pop
stos
popa
in
dec
cmp
xor
xor
cmp
xor
cli
cmp
mov
ret
add
jae
sbb
imul
addr16
cmp
sbb
mov
mov
xchg
mov
flds
xchg
pusha
test
outsb
jl
mov
add
mov
arpl
in
xor
lret
ret
xor
cmp
inc
sbbl
scas
xor
shlb
sbb
mov
mov
fwait
cs
lea
push
mov
mov
jno
dec
xchg
jp
shlb
movsb
inc
mov
cwtl
xor
push
adc
ljmp
jno
inc
int
ja
and
jns
jle,pn
lret
inc
andb
cmp
xchg
mov
and
arpl
cltd
pop
iret
faddl
hlt
js
scas
pushf
repz
dec
jle
xor
mov
sbb
adc
jg,pt
out
ss
gs
shlb
bound
xchg
leave
inc
es
mov
mov
jno
add
aad
testb
push
mov
lods
add
fbld
cmp
aas
cmpsb
jno
lea
cmp
sbbl
daa
xchg
mov
push
pop
mov
fucom
testl
stos
movsl
inc
popf
dec
mov
xchg
inc
push
arpl
mov
leave
cmp
or
sub
fdiv
xchg
lock
ss
push
sahf
nop
fstpt
fildl
jae
shll
dec
lds
jo
icebp
lcall
fsincos
test
xchg
inc
jp
aas
xor
jo
scas
add
dec
daa
int3
lods
mov
data16
jmp
shll
mov
imul
dec
push
jbe
pop
cmp
push
xrelease
mov
sbb
pop
dec
xor
clc
mov
jle
sbbl
dec
in
push
push
imul
sbb
jp
sub
lcall
add
cltd
int3
dec
jl
hlt
in
and
add
pushf
scas
add
pop
cmp
jo
pushf
insb
inc
pushf
push
je
imulb
pusha
aas
mov
shl
scas
aaa
and
or
ror
pop
xlat
xchg
repz
jecxz
loope
adc
pop
adc
pop
movsb
nop
dec
add
ljmp
shrb
dec
jmp
push
outsl
loopne
jmp
imul
mov
out
mov
fwait
xlat
push
mov
scas
pushf
repz
mov
mov
mov
and
add
fildll
in
loop
fucomi
cmp
mov
mov
push
shll
ss
in
out
mov
outsl
add
imul
and
add
scas
pop
jo
nop
outsb
bnd
out
jbe
sar
test
cmp
adc
aam
std
les
sti
inc
aad
xor
mov
push
inc
in
sbb
arpl
dec
shrb
inc
mov
mov
sbb
mov
push
cmp
subb
mov
fistps
mov
mov
js
ja
sbbb
push
lea
loop
cld
clc
pop
sub
lock
cli
shrl
dec
gs
mov
sub
mov
or
nop
daa
loope
das
mov
adc
iret
pop
test
fadds
inc
divb
cmpsl
push
out
jl
lret
sti
and
daa
js
mov
jns
imul
cltd
leave
jnp
nop
and
inc
loope
mov
jle
popf
fisubrs
lods
sub
leave
insl
jno
push
dec
add
mov
das
xchg
jnp
inc
mov
rorb
pop
pop
xor
push
inc
lods
or
xlat
test
inc
jp
xor
not
and
cmp
iret
sar
icebp
jg
inc
sti
pop
test
pop
int
or
mov
xor
xchg
inc
xchg
xchg
ljmp
jno
sub
jnp
cmpsb
nop
jb
lods
mov
jns
and
stos
insl
add
mov
imull
or
rcll
sub
scas
js
movsb
test
je
mov
imul
xchg
enter
push
mov
test
sahf
in
xor
shr
cmp
test
mov
enter
test
or
jle
test
jl
ljmp
fwait
cmp
xchg
sub
and
mov
and
les
cli
nop
sub
lcall
adc
xchg
mov
mov
jo
jbe
and
into
push
sbb
dec
aaa
inc
insl
gs
loopne
sbb
push
xor
test
incl
mov
push
repz
das
adc
push
shl
pop
mov
push
aad
repz
mov
dec
jnp
cmpsl
xor
jbe
sub
or
addr16
fidivrl
push
sbb
ficoms
call
ffreep
iret
cs
je
lock
jge
cmpl
dec
jp
das
out
add
imul
or
fdivrl
sub
push
test
push
or
fsubs
es
or
mov
outsl
jns
imul
notb
movsb
and
xchg
nop
mov
movsl
jl
out
mov
sbb
cmp
xorl
adc
cltd
xor
ds
mov
xchg
faddl
nop
push
mov
xchg
imul
jp
ss
pop
loop
hlt
test
repnz
jl
jl
in
pushf
mov
xchg
pop
movsb
mov
jo
and
mov
adc
loop
rclb
push
loope
dec
int3
rol
and
cmpsb
push
ljmp
cmc
xchg
scas
mov
mov
adc
push
jne
lock
dec
aad
push
or
adc
mov
xchg
mov
pop
cmpsl
xchg
sub
jp
push
nop
jle
add
adc
mov
jg
inc
flds
mov
lcall
and
mov
jo
hlt
push
loop
inc
pushf
jns
ja
xor
ja
and
mov
test
fisubrl
std
cmpsl
or
subl
inc
push
push
in
fistpl
test
js
add
out
dec
fbstp
outsb
outsl
movsl
xchg
sbb
xor
inc
sub
push
test
adc
adc
fcmovb
sub
mov
sub
lret
negl
mov
push
test
leave
inc
testl
jle
xor
das
jno
je
es
js
dec
fwait
adc
shlb
pop
jecxz
xlat
pop
xchg
add
push
add
lahf
loopne
mov
cld
outsl
movsl
pop
ret
inc
push
popf
jb
cmpsb
bndstx
mov
lret
divl
push
jmp
in
jg
sub
sahf
pop
adc
pop
push
pusha
push
test
pop
outsb
inc
leave
fidivs
xchg
std
lock
jae
dec
ja
or
xchg
mov
jo
jle
test
cmp
or
lcall
mov
insl
mov
add
mov
nop
pushl
into
das
cli
clc
roll
fcoms
sbbl
pop
dec
push
shr
or
cmpsb
sbb
jne
int3
pop
leave
in
out
xchg
sub
sub
ds
lcall
insl
add
cmp
hlt
mov
push
int3
adc
dec
ret
gs
xor
mov
lea
push
jmp
insb
jo
sbb
arpl
cmpsb
test
push
ljmp
out
test
pop
aaa
daa
xchg
or
cld
and
push
or
jb
lret
dec
dec
push
loopne
jg
push
cmp
add
icebp
div
xchg
sahf
sub
pop
je
dec
cmpsb
and
jp
jmp
repz
add
push
js
loopne
jae
dec
xchg
scas
sub
sub
adcb
cmp
xor
loope
leave
mov
repz
sbb
jl
and
sahf
push
xchg
mov
ja
fidivl
cltd
arpl
pusha
outsl
sbb
pushl
mov
shl
push
ret
test
lock
into
jmp
jl
xor
imul
push
xor
dec
push
xchg
daa
lea
rcrl
insl
dec
sub
mov
testl
cli
adc
hlt
sub
aad
repz
sahf
int3
setae
mov
inc
dec
inc
faddl
mov
cs
jnp
jo
stc
jle
scas
adc
movsb
rorl
stc
repnz
lods
push
mov
inc
push
lcall
jmp
mov
or
sbbl
xchg
les
popa
push
pushf
cli
sub
clc
push
add
data16
jb
xor
or
cmpl
hlt
or
das
jl
movsl
and
fwait
add
outsl
push
daa
sbb
subb
mov
mov
test
int3
pop
icebp
xor
lahf
or
cmp
adc
jmp
mov
iret
lret
bnd
push
jb
pop
aaa
test
jle
nop
cmpsb
mov
mov
data16
mov
stos
rcrl
mov
rcrl
sahf
scas
call
dec
or
rcll
mov
mov
loope
sub
cmp
push
lret
iret
mov
xor
jge
xor
cltd
inc
push
int
mov
out
pop
or
es
vzeroupper
sub
jb
inc
dec
out
idiv
je
xchg
idivb
loop
xchg
jae
lret
movsb
loope
pop
lcall
mov
int
adc
sub
es
inc
cmc
scas
ret
and
xor
jl
xchg
and
icebp
mov
mov
mov
mov
fbld
jg
popa
pop
push
addb
mov
test
jp
sahf
jne
imul
pop
das
mov
sarl
stc
jbe
stos
pop
loope
or
mov
mov
lods
pop
mov
gs
sbb
jnp
sbb
ja
jle
outsb
adc
out
push
ljmp
jno
aam
push
cltd
clc
push
pop
hlt
mov
jae
jp
add
or
test
add
add
pop
mov
mov
add
mov
out
pop
cmp
das
adc
fdivl
and
adcl
jle
cmp
jb
jne
repnz
pop
adc
cli
dec
lahf
aam
xchg
aad
add
int3
leave
loope
push
mov
js
xchg
lahf
adc
pop
inc
mov
into
sbbl
loope
adc
fcmove
jno
cli
sti
lock
sbb
ret
xchg
jns
pop
shrb
jns
xchg
mov
mov
push
sub
lret
mov
sbb
mov
sub
rcrb
loope
add
add
test
loopne
cmp
cmp
add
jp
adc
mov
pop
cltd
xor
iret
popf
lods
aam
mov
int
sti
or
imul
pop
mov
inc
addb
xor
inc
mov
pop
and
popa
cmc
dec
and
push
push
mov
adc
ret
cwtl
inc
pop
sub
mov
sbb
enter
push
mov
inc
xchg
fdivrl
or
mov
shll
mov
pop
or
mov
inc
dec
cmp
bound
pop
cmp
dec
in
jp
mov
jnp
rcr
xchg
pop
aaa
into
icebp
scas
pop
outsl
mov
inc
addr16
shlb
mov
pop
inc
bound
fsubs
data16
movsb
push
fwait
push
sahf
movsb
mov
scas
out
scas
and
into
or
movsl
and
es
push
aam
test
popa
mov
mov
cld
cmp
lahf
jg
in
das
xchg
add
xchg
xor
jmp
xorl
lret
rclb
imul
xchg
rclb
iret
ja
pop
jae
stos
add
mov
out
pop
pushf
or
pop
jmp
mov
push
fucomp
mov
test
and
mov
jae
test
jge
push
xchg
das
cmp
das
sti
xchg
lds
xchg
pop
rdmsr
mov
outsb
xchg
xor
jnp
mov
adc
jp
sbb
arpl
adc
fldenv
cmp
adc
dec
mov
adc
call
imulb
cmp
push
imul
sti
xchg
adc
and
ret
mov
inc
fldl
inc
or
js
lahf
jbe
insb
mov
dec
cmpl
dec
loop
xchg
xchg
push
sub
aaa
xlat
outsb
dec
mov
inc
sub
mov
xorb
shlb
out
cmpb
rcrl
pop
out
jge
push
push
fisubs
das
mov
clc
sbb
lahf
in
mov
mov
rorl
pushf
dec
out
mov
hlt
push
popa
push
jo
mov
scas
jbe
fsubrs
rol
cmc
inc
jl
xchg
xchg
out
into
bound
mov
mov
cld
es
mov
pushl
xchg
cmp
jns
mov
xchg
jnp
adc
test
mov
dec
mov
mov
sar
mov
aam
mov
pop
sub
insb
enter
mov
imulb
dec
dec
or
or
loopne
pusha
rcl
pop
sub
hlt
out
es
in
sti
pop
mov
xlat
mov
cmp
push
mov
mov
leave
aas
cli
pop
cmp
rcll
lahf
jno
inc
lret
sub
or
jbe
xlat
fs
mov
sbb
adc
cmp
xor
cltd
mov
jmp
loope
daa
add
jp
je
mov
repnz
jmp
addl
mov
ds
fbld
mov
lea
mov
mov
into
and
pop
push
out
adcb
into
push
fdivrs
mov
mov
push
addr16
frstor
in
gs
cmc
cmpb
loopne
jo
ja
and
rcl
push
mov
imul
fiaddl
clc
jmp
in
push
and
ja
cmp
stos
mov
stc
popf
in
stos
xchg
mov
call
mov
loopne
scas
or
add
sub
lcall
pop
rol
sub
aaa
mov
test
inc
pop
sub
sub
ja
mov
loopne
xchg
fwait
sbb
hlt
jbe
cli
bt
sbb
xor
sub
push
insb
push
mov
xchg
add
fisubrl
or
cld
clc
clc
pop
cmp
out
jbe
or
mov
pusha
or
stc
jl
shrl
sbb
daa
dec
dec
push
addr16
data16
xchg
mov
fisttpl
aad
lds
repz
jl
cmpsl
fwait
mov
cs
out
rcl
cmp
pushf
dec
shrl
arpl
mov
stos
je
fisttpll
inc
lock
jl
cmp
ja
sbb
adc
sbb
push
out
loope
ja
mov
jg
call
cmp
push
push
insl
cmc
mov
push
push
je
mov
aad
out
cmpsl
sbb
enter
ljmp
pushf
scas
addr16
movsl
std
mov
pop
ja
push
rclb
seta
rcrl
xor
lock
sbb
das
dec
or
pop
inc
fnstcw
repnz
mov
sbb
arpl
rclb
loop
stc
fmul
je
orl
pop
loope
sub
or
push
or
sub
jmp
pop
test
insl
fisttps
mov
xor
in
pop
xchg
shl
mov
jle
scas
cs
dec
test
inc
sub
je
and
inc
lcall
or
repz
loop
shll
aas
std
mov
cltd
or
in
mov
mov
loope
push
push
xor
pusha
mov
mov
xchg
popa
mov
cwtl
mov
jecxz
cmp
in
popl
cld
scas
mov
pop
out
pusha
orb
bound
mov
mov
push
loop
add
or
pusha
in
insb
rcrb
aam
clc
and
xchg
mov
test
pop
call
or
es
add
xchg
into
cmp
test
dec
push
push
adc
and
sarb
dec
lock
mov
loop
lret
and
jl
test
outsb
sbb
sbb
xor
shlb
lcall
mov
mov
pusha
cmc
push
ror
or
daa
cmp
sbb
mov
cs
mov
pop
repz
jl
int
pop
sbbb
mov
or
xchg
jnp
out
iret
stc
mov
cli
dec
cmpsb
lds
fcomi
xchg
imul
push
pop
and
mov
or
push
jg
push
dec
push
sub
xchg
in
ss
push
out
cli
push
add
mov
loopne
or
sub
nop
adc
jp
loope
divl
sbb
aas
jle
pop
inc
imul
out
lret
or
pop
mov
adc
push
int
ret
sbb
repnz
lcall
repnz
stos
jae,pn
mov
xor
cltd
sbb
or
jp
or
adc
xor
xor
xor
incb
sub
lds
fistl
pop
in
mov
fs
jbe
mov
mov
jecxz
dec
sub
ja
sti
call
pushf
or
aas
xchg
jmp
rol
inc
adc
jns
loopne
ret
les
add
and
sbb
mov
adc
cmp
adc
les
dec
mov
mov
or
adc
shlb
jmp
ljmp
push
lods
adc
xor
wbinvd
and
pop
or
mov
mov
jecxz
and
ret
mov
pop
fs
and
sub
xor
imul
in
test
iret
dec
out
insb
addr16
mov
lea
movsb
pusha
add
jmp
leave
sbbl
pop
xlat
in
pop
stos
and
outsl
push
cmp
xor
sbb
aas
in
or
sub
movsl
cmp
push
mov
or
push
jbe
jecxz
dec
std
or
fdivr
lahf
sub
bound
mov
aad
lods
pop
in
push
lcall
xor
mov
icebp
loope
jo
mov
mov
lcall
pop
adc
xor
movsb
push
xchg
pop
or
inc
mov
mov
in
or
scas
jge
ljmp
push
mov
scas
arpl
and
pop
imul
mov
cmpsl
cs
mov
xor
rclb
xchg
pop
aam
andl
dec
or
pop
sub
fidivl
mov
add
mov
dec
mov
xor
jnp
loop
and
ficoms
je
inc
sbb
jns
jecxz
and
cltd
push
sbb
int
jns
or
dec
or
std
stc
addr16
adc
popl
sti
psubd
out
jnp
or
dec
out
push
sub
clc
push
dec
jp
sub
dec
fsubl
lock
and
aad
mov
pop
adc
sarb
cmpsl
fnstenv
or
or
loope
xor
imul
xchg
jmp
sub
out
sbb
pop
mov
in
scas
inc
pop
lods
jns
pop
outsl
int3
lret
sub
pop
mov
adc
icebp
mov
bound
or
jb
daa
bound
ja
or
cwtl
dec
shll
and
push
fdivrl
cli
or
ret
mov
xchg
jnp
les
adc
lea
mov
inc
mov
sbb
push
xchg
or
push
adc
fcoml
ficoml
add
cmp
mull
scas
xchg
xchg
push
add
xchg
loope
in
or
adc
cmp
fistpll
pop
mov
orb
dec
mov
rorl
xor
das
mov
push
nop
daa
push
cmc
mov
add
xor
push
insl
cmp
jl
enter
daa
mov
dec
adc
lods
push
mov
xorl
fs
cmc
sbb
dec
xchg
cmp
ret
xor
in
mov
divb
or
pop
ds
lahf
ss
popa
fcompl
mov
addr16
fs
mov
cli
add
sub
xor
jno
andb
test
fwait
inc
or
lea
test
mov
adc
aam
push
push
imulb
cmp
push
mov
mov
int
pusha
rcr
test
cmpsl
jo
mov
mov
mov
adc
push
mov
in
add
ds
test
stos
jecxz
push
dec
inc
scas
sub
lret
push
aas
xor
add
and
push
jb
add
int
stc
out
in
cld
mov
iret
sub
cmp
not
stos
xor
and
and
daa
movsb
jnp
data16
push
stc
ja
mov
mov
scas
fdivrl
scas
mov
xchg
jo
fwait
repnz
dec
add
scas
cmp
dec
daa
mov
imull
dec
mov
js
sti
enter
test
popa
push
dec
fisubrl
inc
jmp
cmp
push
inc
adc
inc
popf
push
repz
mov
xor
in
incl
incl
fwait
mov
add
push
bound
das
test
add
add
cmp
dec
sti
pop
fwait
sub
es
sbb
sub
or
jle
pop
mov
dec
lret
aam
adc
xchg
jbe
loope
cs
shl
scas
adcb
dec
pusha
sub
sub
fdivs
pop
pop
clc
int3
or
mov
ja
aam
mov
xchg
and
popa
fbstp
loop
lock
arpl
mov
xor
movsb
jne
jnp
leave
jmp
testl
push
and
pop
movnti
xchg
insl
outsl
fdivs
cs
aas
and
lcall
xchg
call
push
lea
mov
mov
mov
loopne
lds
fcmovbe
xor
enter
cmp
xchg
mov
push
into
orb
adc
pusha
pop
mov
push
test
aas
inc
ds
cmp
sub
pop
mov
sti
dec
dec
or
jp
or
cmp
add
testl
rol
ret
in
stos
push
lret
pop
lods
test
fldl
push
icebp
inc
aaa
push
xor
xor
test
xorl
push
loop
lret
xchg
dec
lahf
push
shr
mov
inc
adc
pop
pop
lods
mov
bnd
inc
fadds
and
cmp
sti
jmp
mov
mov
inc
xrelease
ds
addl
mov
push
inc
pop
test
xchg
mull
fdivrl
outsb
adc
jp
or
cltd
xor
jno
adc
mov
js
inc
mov
sbb
mov
jb
sub
pop
push
mov
adc
aaa
into
divl
sti
ds
fs
sti
mov
xchg
scas
mov
movsl
lahf
sbb
cmc
adc
lods
push
and
push
into
cmp
jl
dec
idivb
mov
jle
pop
jge
add
mov
mov
lock
sub
pop
jae
jno
add
mov
xor
sti
xchg
hlt
push
pushf
and
and
popa
mov
cmpsb
inc
lock
mov
stos
repz
lock
loop
mov
lock
add
xor
dec
xchg
xchg
fwait
jbe
mov
fnstenv
or
mov
popa
xor
sbb
lock
ja
in
stc
dec
add
stos
js
imulb
mov
pop
fcomps
adc
push
sti
dec
movsl
mov
lods
or
leave
outsl
loop
aaa
push
mov
dec
add
fcmovnbe
sarl
fs
add
int3
lds
and
iret
inc
insl
add
les
jbe
xchg
outsb
fstl
data16
jb
xor
test
scas
arpl
lods
dec
scas
mov
and
jecxz
pop
push
cmp
lds
popa
jns
lret
int
cmc
sbb
mov
into
nop
out
ret
jl
mov
cli
push
push
adc
clc
mov
sbbl
movsb
xchg
and
fwait
stos
mov
cmp
sbbl
add
push
outsl
push
and
outsl
ret
dec
imul
push
bound
aad
test
movsb
sbb
ds
loope
jg
popa
mov
cmpsl
pop
mov
mov
popf
subb
scas
aaa
jo
loope
fnstenv
aas
mov
mov
xor
mul
mov
add
jmp
iret
adc
xchg
mov
mov
jmp
sti
sub
adcb
movsb
xchg
inc
mov
mov
cmc
outsb
or
cmp
scas
xchg
gs
pusha
xchg
ret
mov
jne
je
jp
and
gs
into
js
adc
mov
mov
ret
inc
adc
orl
out
cwtl
jl
dec
int
mov
arpl
inc
aad
addr16
negb
daa
leave
loope
jle
js
jnp
jbe
mov
sbb
pushf
cwtl
cmp
insb
lret
cld
push
cmp
lcall
pop
out
mov
push
add
push
out
xchg
xor
xchg
xchg
jo
popa
clc
xchg
xchg
mov
shr
sub
fcomps
fisubs
popa
inc
data16
cmp
push
jns
inc
lahf
cwtl
mov
mov
mov
fwait
scas
push
xor
fs
ror
xor
stos
insb
fs
lea
aam
lods
xchg
out
xlat
mov
sbb
cmp
dec
push
xchg
aad
mov
notb
ljmp
push
jmp
out
testb
jb
pop
sub
arpl
fldenv
mov
xchg
adc
pop
enter
bnd
popa
or
addb
imul
inc
shll
sbb
add
mov
fnstsw
out
mov
cmp
loope
push
std
jbe
add
pop
inc
mov
mov
sbb
xchg
mov
xchg
xchg
rorl
daa
sbb
mov
cmp
daa
cmp
push
fs
mulb
adc
loopne
in
loop
fildll
inc
add
dec
in
xor
lods
inc
dec
imulb
jmp
add
repnz
add
adc
sahf
cmpl
sub
xchg
mov
cli
rcl
mov
inc
ss
mov
xchg
xchg
push
xor
mov
xor
mov
jle
outsb
ret
push
pop
mov
rcll
fidivl
ffreep
loopne
ror
mov
adc
loope
dec
in
shlb
sub
in
daa
iret
push
or
jae
and
pop
xchg
into
and
mov
aad
ljmp
insl
jns
test
stc
jbe
push
push
xor
sbb
and
and
xor
xchg
push
imul
jl
js
lods
jns
cmpsb
lcall
add
lahf
pusha
cmp
sbb
mov
cmpsb
and
xor
or
cmpsl
shl
fnsave
lds
sbb
mov
int3
adc
or
xchg
outsb
mov
jns
popl
sbb
shl
jo
out
popa
subb
add
sti
out
movsb
cmp
ljmp
aaa
test
push
mov
fnsave
sub
xchg
xchg
sbb
ja
dec
mov
mov
ficoms
mov
out
push
mov
jl
jnp
idivb
pop
add
subb
test
mov
pop
dec
pop
mov
push
jmp
hlt
jp
sti
pop
mov
pop
icebp
cwtl
mov
add
jmp
test
mov
adc
xchg
test
pusha
sub
sbb
push
lock
jns
data16
mov
adcb
repz
addb
cmc
mov
popf
jb
mov
movsb
cmp
outsb
mov
in
cmpl
sti
data16
in
js
enter
mov
mov
lods
pop
inc
pop
mov
test
dec
out
jne
dec
sub
mov
outsb
cmp
sbb
or
fistpll
and
cmp
je
sub
cmp
ret
out
pop
xchg
or
ret
fsubrs
fnstsw
popf
mov
in
fstpl
cld
mov
cmc
or
and
or
mov
mov
pop
cmpsb
cmc
or
inc
adc
mov
sbb
js
je
mov
rclb
mov
add
push
inc
mov
xor
imul
mov
xor
test
mov
cmp
pop
xor
out
cmp
push
test
pop
sub
pop
cmc
mov
sub
sub
pop
cmp
daa
push
nop
xor
mov
xchg
in
notb
call
mov
rol
test
ret
mov
dec
add
sbb
cmp
aam
rcrl
inc
add
jns
sub
push
pop
in
xchg
xor
and
cwtl
cmp
xchg
mov
dec
or
dec
dec
out
ds
int
lret
lea
push
mov
dec
and
pop
int3
mov
sub
sbb
jl
testb
xor
popa
pushf
sbb
xchg
and
outsb
fdivrs
popf
mov
ret
lahf
clc
pop
pushf
adc
xlat
xchg
loop
cmp
lds
xchg
dec
dec
sbb
mov
mov
pop
cwtl
jno
fwait
int3
xor
ror
std
dec
xchg
mov
add
les
inc
add
sub
mov
mov
cmp
daa
adc
mov
into
in
sbb
dec
jp
lahf
popa
sahf
mov
divl
mov
add
jae
jp
dec
dec
pop
shll
push
push
cli
stos
push
sub
insl
add
cmp
and
in
inc
adc
mov
test
add
mov
push
adc
xchg
mov
out
sub
lret
mov
adc
sub
jbe
cmp
jb
pusha
stos
and
popf
add
and
and
dec
fidivl
sub
dec
pop
adc
mov
ja
xchg
js
addr16
mov
xor
and
mov
pop
mov
cli
mov
popa
notl
sbb
jg
decl
dec
jp
add
cmpsl
sbb
push
ret
lods
iret
out
xchg
mov
icebp
xor
ficompl
out
push
shrb
out
test
xchg
pop
out
cli
iret
mov
ret
xchg
xchg
dec
lods
out
pop
ja
or
test
dec
pop
fsubl
xchg
add
cmp
sbb
push
movsl
sub
mov
mov
jl
mov
cmpsb
cmp
neg
les
lret
rep
leave
or
dec
in
sbb
cmp
enter
data16
vmptrld
loope
pop
ja
xchg
or
cmc
lret
adc
cmp
loopne
ret
mov
clc
jg
shlb
mov
gs
in
fisttpl
dec
fnstsw
cld
add
das
cwtl
repnz
inc
outsl
imul
jo
xchg
insl
pop
inc
sbb
je
xorl
mov
mov
and
xchg
or
jg
mov
stc
xor
aam
addr16
fs
lock
adc
mov
mov
bswap
daa
adc
fnsave
xor
repnz
aad
mov
ret
lcall
xor
cmp
movsl
nop
call
xor
and
pusha
mov
lcall
mov
inc
insb
jno
sbb
ficomps
sti
out
and
or
jmp
push
cmp
repz
inc
and
pop
mov
pop
mov
xchg
or
scas
imul
push
mov
adc
sub
fidivs
ja
call
ds
xchg
xchg
sbb
ret
xorb
int3
jle
cmp
push
jmp
fcompl
adcl
loop
sahf
or
ds
lods
inc
lods
or
jbe
scas
sub
fdivr
or
add
sub
pop
stc
mov
sub
dec
push
add
ss
movsb
push
or
push
jmp
je
insb
sbb
or
jmp
data16
xor
pusha
ss
mov
push
inc
or
shlb
icebp
movsl
xlat
movsb
push
mov
adc
cmp
aaa
ss
dec
push
outsb
ljmp
adc
insb
add
ss
inc
les
sbb
push
movsb
leave
pop
popa
sbb
and
in
cmc
inc
data16
mov
ss
into
dec
pop
add
mov
push
xchg
fwait
push
sbb
jnp
fbstp
call
test
lods
mov
push
xor
inc
int
subl
cli
into
gs
in
inc
adc
ss
pushf
vmread
mov
into
stos
xor
or
out
fisttpl
cmp
jle
sub
jb
xor
xchg
jne
adcl
stos
mov
lcall
and
sub
xlat
pop
nop
ficompl
or
mov
mov
pusha
mov
xchg
dec
mov
scas
mov
shlb
call
gs
sahf
xchg
jg
and
mov
mov
inc
stos
lods
sub
sbb
xchg
sbb
jp
add
sbb
sahf
xchg
or
movsl
cmp
js
scas
rol
lcall
sbb
sbb
arpl
push
nop
mov
xchg
cmp
or
xchg
add
scas
pop
mov
or
lds
fnstsw
pop
push
hlt
mov
add
pop
out
in
mov
adc
mov
sbb
xor
mov
jl
idivb
out
sbb
xor
in
mov
out
scas
subl
orps
adc
mov
fstpl
mov
in
fwait
addr16
clc
ljmp
outsl
dec
xor
jp
clc
jecxz
dec
and
sbbb
sti
in
adc
fdivrs
sub
aam
mov
rcrw
xor
movb
cmp
sub
iret
or
popa
dec
cli
rolb
cmpsb
mov
push
ret
add
lret
fwait
push
popa
imul
ds
xchg
ret
sub
ss
mov
sub
mov
xchg
sbb
rep
xor
cmc
cmp
xchg
movsb
pop
iret
montmul
cmpsb
inc
out
rorb
out
scas
inc
fsubs
in
and
cltd
inc
pop
lcall
and
sub
dec
and
insb
add
inc
sahf
pop
xchg
mov
fbstp
js
mov
fdivl
stos
push
mov
or
inc
bound
aaa
add
in
and
int3
rcr
xlat
and
rcpps
mov
fstp
jmp
mov
cmpsl
mov
rclb
divl
jp
cmpsl
lock
lds
inc
imul
lea
mov
orb
jg
shll
mov
push
fnstsw
mov
jle
adc
addb
enter
mov
ret
test
pop
negb
dec
nop
push
addl
pop
pusha
jo
jecxz
rclb
aad
in
pop
fwait
pop
loop
add
inc
xor
imul
hlt
and
jle
dec
mov
shlb
adc
pushf
pop
insb
jl
or
ljmp
leave
int3
fdivrp
and
loope
out
lret
fs
inc
jae
or
nop
sub
pop
inc
and
popa
scas
and
pop
xchg
push
daa
add
movsb
aaa
push
js
cmp
test
pop
xchg
test
mov
bound
aas
cltd
frstor
inc
daa
out
push
dec
jne
popf
stos
ja
xchg
test
pop
xor
insl
ds
or
and
ss
into
lcallw
jmp
ja
push
sbbl
ja
lods
das
jo
jecxz
pusha
cmpps
and
jbe
jno
pop
in
adc
cmp
sub
mov
imul
aam
roll
aaa
sub
cli
fdivp
mov
adc
lret
jne
adc
daa
hlt
pop
icebp
xchg
stos
das
push
rcl
repz
in
and
pop
icebp
mov
pop
jb
aam
sysret
mov
sub
addr16
pop
pop
inc
xchg
dec
and
xchg
sub
inc
cltd
in
push
sub
adc
dec
sub
aas
and
push
pusha
cmp
insl
xchg
jmp
lock
sbb
jle
leavew
xchg
inc
stos
push
and
fs
dec
and
pop
scas
push
sahf
cmc
es
lret
or
mov
je
call
ja
push
xor
iret
mov
cmpsb
sub
imulb
xor
shl
xlat
dec
outsb
dec
in
cmp
mov
mov
test
lret
fnstcw
rolb
jl
into
ja
mov
fsubl
imul
push
pusha
adcl
push
adc
pop
rolb
sub
xchg
mov
cmpsl
push
fcompl
mov
test
xor
enter
pop
jl
mov
lcall
into
jle
add
mov
cmp
out
arpl
and
imul
or
mov
movntps
fdivl
dec
xchg
hlt
fs
cmp
fisubrs
fisubrl
cmp
call
sbb
ret
hlt
sub
ja
xlat
rcll
clc
jnp
pop
xchg
out
pop
xchg
dec
pop
sbb
out
data16
pushl
push
mov
fwait
add
push
icebp
adc
push
arpl
out
outsb
sbb
jbe
sub
and
test
inc
push
out
inc
stc
push
jg
sub
gs
jg
mov
shl
adc
inc
ds
out
sub
jle
out
cmc
or
sbb
jns
out
sub
and
xchg
dec
jecxz
idivl
int
cmp
lahf
insl
xor
add
jge
pop
sti
xchg
stc
nop
ret
sbb
mov
xchg
icebp
movsl
sahf
ds
arpl
out
mov
rol
ja
lea
add
roll
xchg
mov
out
mov
out
cmp
notb
jno
movsb
xchg
jbe
jo
ss
divl
push
shrl
mov
ja
movsl
shrb
cltd
fdivl
jns
gs
push
lods
in
das
push
fwait
pop
mov
ret
out
hlt
leave
add
icebp
mov
das
call
lret
push
stc
or
fldl
cmp
push
mov
repz
add
fisubs
mov
ss
pop
jae
and
push
sbb
xchg
sub
mov
mov
jl
sbb
je
mov
ja
inc
stos
cmpsl
jmp
clc
pop
not
jge
stc
dec
push
mov
rcll
add
sub
mov
push
mov
jbe
mov
pop
mov
hlt
inc
lds
mov
outsl
inc
mov
mov
scas
mov
sbb
pusha
filds
adc
lcall
int3
push
in
std
dec
mov
call
aad
scas
dec
cwtl
fstpl
out
sbb
enter
cmc
and
inc
pop
add
clc
sahf
sub
mov
jle
pop
pushf
cld
xchg
repnz
sbb
popa
adc
mov
xchg
lock
jnp
jmp
add
in
fwait
pop
mov
jbe
mov
test
lret
pop
sub
fs
rcll
jo
shrl
cmp
cmp
js
sbb
xlat
cmp
test
mov
jmp
call
pop
shrl
sub
push
outsb
add
popa
xor
mov
inc
cmp
pop
xchg
push
ljmp
jb
jo
mov
clc
xchg
dec
dec
ret
fisubrs
mov
xchg
cmp
mov
and
xchg
ds
inc
loop
add
dec
in
and
in
ds
aam
seta
cmp
push
dec
repnz
adc
addr16
out
dec
mov
fxch
or
ret
pop
fimull
jecxz
sti
loopne
shrb
jne
push
mov
out
ja
jae
rcr
add
jle
xchg
mov
cmpsl
add
add
jge
or
cli
mov
sbb
cmp
sub
sbb
add
pop
mov
fbld
sbb
lret
cld
jns
mov
fidivl
int
scas
mov
rcr
push
stos
out
or
xchg
lock
leave
arpl
push
inc
ja
push
out
je
inc
test
ds
test
and
sti
pop
pushl
roll
pop
jns
and
ss
sbb
dec
stos
sbb
jmp
xor
push
xor
lcall
in
stos
mov
mov
dec
xor
jge
cmp
adc
dec
inc
int
adcb
dec
adc
lahf
push
push
push
jns
jbe
or
mov
fimuls
mov
mov
add
or
and
js
adc
xchg
test
fnstenv
pop
hlt
xchg
pop
push
pop
nop
mov
mov
jbe
inc
pop
cmp
in
push
in
mov
jle
lret
int
cmp
push
cmp
and
xchg
sub
dec
sbb
mov
shll
mov
or
pop
mov
xor
mov
cmp
mov
inc
pop
testb
sarl
jge
mov
adc
mov
mov
sahf
je
rcrb
test
inc
nop
pusha
aam
xchg
mov
iret
mov
mov
inc
jo
dec
mov
into
aad
iret
mov
loop
es
test
push
lds
lods
dec
jecxz
xchg
aaa
cld
imul
repnz
jns
incl
cwtl
xor
adc
rcll
fisttpl
or
mov
ja
and
js
popa
xchg
xor
jns
inc
push
sbb
mov
je
movaps
insl
lahf
fimull
out
stc
sub
ds
out
xor
mov
dec
cwtl
cld
notb
and
les
mov
dec
and
repnz
aas
shll
mov
jo
loopne
jmp
mov
pop
inc
push
push
adc
cs
xchg
shrl
xchg
sub
push
movsl
out
data16
mov
and
xor
mov
stos
jne
das
jb
pop
cmp
mov
pop
mov
dec
mov
and
js
aaa
dec
rcrb
cmc
push
pop
xchg
scas
inc
adc
push
imul
insl
pop
mov
aas
shrb
icebp
sbb
xchg
push
pop
cmpsb
test
ret
mov
insb
cmp
testl
sbb
inc
push
outsl
mov
and
outsb
enter
stos
mov
push
leave
dec
movsb
ret
insb
sbb
aad
cmp
pushf
pop
or
cmp
mov
mov
out
and
enter
cmp
fnsave
jno
sub
std
lock
mov
add
mov
xchg
mov
push
test
xlat
adc
adc
sbb
sarl
cltd
pop
dec
int3
fnstcw
pop
sub
fsubrl
dec
pop
cmp
popf
lods
das
aas
mov
push
add
imul
cmpsl
mov
fldenv
jno
cmp
testl
cmpsl
sarl
jmp
lret
lret
jecxz
mov
aad
pop
arpl
nop
add
mov
push
test
lret
inc
pushf
push
push
jbe
push
cmpb
cmp
adc
xor
cmp
pop
dec
pop
cmp
mov
fdivs
popf
and
sti
jmp
fldt
fnstenv
movsb
mull
pop
mov
adc
sbb
out
inc
popa
lcall
sub
dec
outsl
mov
cmpsl
rol
shlb
add
jns
scas
addl
mov
push
out
lea
addr16
xchg
test
ret
sub
hlt
data16
cli
dec
sub
jnp
sysenter
sub
pop
mov
xor
adc
fwait
cwtl
jno
int3
push
push
dec
clc
push
mov
inc
fwait
sbb
sbb
clc
xor
aam
dec
sbb
xchg
js
jecxz
cmp
dec
jecxz
mov
xchg
adc
xchg
xor
push
stc
push
jo
mov
xor
fwait
mov
sarb
sbb
loope
pop
scas
xor
jns
out
or
pop
mov
xchg
xchg
addr16
out
adc
mov
inc
iret
fs
jb
inc
lret
inc
stc
push
jge
cmpsb
jnp
xor
addl
loop
mov
mov
icebp
push
jmp
aaa
cmp
xor
xchg
mov
inc
stos
sub
into
push
shrb
out
xchg
sbb
cmp
lcall
adc
ja
lahf
popf
out
push
mov
call
jmp
loopne
mov
faddp
decl
pop
adc
or
jg
cmpsl
test
push
scas
xor
mov
mov
cmpsl
push
stc
rcll
add
add
sub
mov
inc
inc
xchg
scas
jg
and
xchg
cmp
mov
or
sub
mov
xor
test
push
jecxz
pop
fsubrl
add
imul
cmc
bound
cmp
adc
ret
sbb
arpl
jb
lahf
je
jecxz
push
notl
movsb
sub
jbe
cmpsl
xlat
sub
xchg
std
push
jecxz
mov
setl
ss
pmulhuw
pop
imul
sbb
lock
cmovs
push
mov
push
test
adc
or
jmp
imul
clc
lock
cli
mov
xorb
or
das
lahf
mov
jecxz
imul
ljmp
lret
sub
push
adcl
rorb
push
scas
xchg
aam
add
repz
add
cmpsl
jbe
pop
mov
rcrb
adc
adc
xchg
mov
push
movsl
in
std
cmp
clc
mov
mov
movsb
cmp
pop
ficompl
lcall
dec
call
mov
insb
mov
pop
repz
and
mov
add
pop
decb
jecxz
mov
cmpsl
ficoms
cmpsl
psrlw
out
and
stc
fldcw
mov
ljmp
jmp
sub
aaa
pushf
add
pop
outsb
cmp
into
mov
movsb
pop
stos
adc
outsl
loop
and
xchg
xchg
adc
test
inc
sub
push
mov
push
stos
push
ljmp
call
aad
or
push
push
fcompl
in
add
aad
loopne
jno
dec
inc
daa
mov
std
mov
dec
es
mov
mov
ret
hlt
xchg
xchg
push
daa
mov
pop
call
out
shlb
cmp
inc
inc
fsubr
push
xchg
test
jl
sbb
jmp
pop
jle
xchg
mov
mov
xchg
lods
mov
nopl
inc
jl
and
adc
data16
pop
sbb
dec
and
cmp
aam
inc
lods
cmc
mov
lds
insl
jnp
cmp
lahf
in
xchg
pop
daa
shll
or
cmc
mov
jp
cmp
out
rcrb
and
xlat
cmp
and
out
cmp
test
xchg
add
dec
les
xor
mov
in
fs
or
inc
jl
jbe
xor
fstpl
sub
popf
xchg
xorb
shlb
ss
in
imul
nop
data16
int
push
outsb
es
aad
inc
fmull
out
popa
and
arpl
pop
inc
inc
rcll
ja
xchg
test
sbb
fildl
pop
ret
mov
add
inc
fcomi
es
push
adc
lea
js
in
push
fistl
call
xchg
inc
outsl
jge
outsb
add
mov
in
data16
popa
je
mov
lahf
or
inc
mov
sub
adc
aaa
imul
xor
pop
icebp
mov
adc
inc
mov
cmp
mov
jo
xor
push
jg
dec
xor
push
dec
out
scas
outsb
fmul
lahf
rclb
mov
aas
mov
in
addb
in
ret
mov
mov
or
hlt
aam
adc
xchg
lcall
and
pop
jne
into
call
mov
lcall
addr16
js
in
xchg
push
loope
add
xchg
idivb
dec
cli
add
add
add
dec
int
sbb
adc
and
sbb
cwtl
xchg
sbb
scas
or
cmpl
cmp
out
test
cmpw
mov
lods
in
out
insb
test
dec
push
add
sub
rcll
out
imul
dec
mov
inc
out
lret
and
or
dec
mov
pop
sti
mov
dec
loop
fidivrl
inc
inc
adc
cmc
scas
clc
popl
ds
sbb
push
jne
add
push
rcr
loope
mov
repz
add
cs
mov
fs
jle
fs
das
test
cmp
iret
and
add
cmp
mov
mov
add
in
les
sti
mov
das
lods
in
xchg
mov
aad
andb
xor
sub
inc
bound
mov
rclb
xchg
test
test
sub
xchg
popf
pop
xchg
mov
or
cld
mov
dec
stos
aad
and
mov
cld
xchg
outsl
fnsave
add
mov
mov
mov
sub
scas
jg
out
lods
mov
test
cwtl
sbb
mov
rolb
cld
push
pop
xor
mov
aas
dec
ja
xor
rorb
jl
lea
push
pop
call
jge
or
into
mov
notb
rcrl
jbe
or
mov
pop
mov
pop
push
addl
dec
sub
mov
mov
loopne
test
push
lock
outsl
cld
outsl
push
sub
sti
push
repnz
xchg
les
jle
cltd
jg
popa
add
out
pop
inc
or
xor
and
aad
js
lret
mov
adc
push
mov
mov
sub
pop
mov
scas
mov
fdivl
lods
movsl
xchg
mov
fstpl
lea
mov
mulb
test
popf
xor
test
ss
divb
pop
cltd
in
or
int3
cltd
in
clc
jae
mov
jnp
lcall
sti
mov
mov
out
mov
ljmp
or
js
stos
imul
lcall
jne
hlt
push
mov
jnp
pop
fdivrs
mov
jnp
sub
je
sbb
lods
insb
xor
jne
mov
xor
jecxz
cmp
in
fdivs
lahf
xor
jae
fidivl
jo
ds
push
cmp
push
pop
dec
push
std
pop
shrb
ljmp
sub
jno
call
in
jl
or
xchg
pop
cmc
les
dec
add
ror
jno
inc
jl
stos
inc
push
and
clc
pusha
jne
mov
stos
lcall
in
inc
fsubr
fidivl
adc
cmp
pushf
xchg
dec
pop
mov
cmp
nop
and
push
sbb
cmp
test
lret
sti
cmp
jnp
cmp
cmp
or
mov
fsubr
imul
cmc
jne
daa
jle
adc
inc
inc
xor
or
jg
sub
loope
xchg
adc
jecxz
sub
jecxz
mov
repz
xchg
jb
rcl
xchg
insl
sub
lods
fidivs
cmp
jo
leave
cld
fistpl
roll
xchg
inc
mov
xchg
outsl
xchg
push
dec
sbb
sub
in
xor
sbb
inc
int
dec
pop
shrb
daa
lcall
jns
arpl
mov
push
cmp
mov
push
stos
arpl
jns
popa
and
cmp
push
xor
sbb
test
and
in
inc
aas
mov
clc
stc
shrb
inc
cli
jecxz
xor
aas
mov
rcl
mov
xor
and
xor
inc
enter
in
ljmp
and
xor
loope
test
mov
mov
arpl
cltd
stos
xor
fdivrl
enter
cmp
mov
cmc
mov
cmp
insb
stos
int
sbb
jmp
xchg
mov
add
call
cmp
jmp
scas
test
fimuls
rcl
sbb
stc
shrl
mov
or
cmpb
movsl
and
pop
test
test
testb
pop
stc
in
xchg
push
cwtl
das
xorl
pop
pushf
sbb
inc
mov
shlb
in
xor
mov
jae
push
gs
ds
lea
rorl
jecxz
imul
lcall
and
push
cld
aas
sub
pop
out
dec
out
pop
ds
mov
push
push
inc
xchg
add
in
add
ret
lret
cwtl
push
jns
fdivl
lcall
imul
push
mov
adc
pusha
divl
jle
pop
mov
fsubrl
mov
dec
mov
xchg
sbb
sbb
test
stos
std
fstpt
push
dec
fcompl
or
out
mov
lock
das
repz
add
call
cmp
mov
out
pop
dec
dec
sub
orl
outsl
xchg
imul
xchg
call
jmp
and
out
inc
neg
sub
ja
mov
and
testl
cltd
xor
pop
scas
push
or
fsts
jne
mov
jo
bound
mov
das
ja
mov
jle
and
clc
pop
imul
in
add
fstpt
xchg
adc
sbb
es
cmp
repz
jae
fs
jne
inc
jb
add
jae
push
push
int
adc
jl
cld
sub
in
aaa
popf
sub
jo
mov
cld
jecxz
and
mov
call
repz
push
adcl
ljmp
sbb
push
cmp
push
or
adc
hlt
dec
dec
push
rcl
pop
aam
testb
rorl
jl,pt
call
adc
lret
lcall
xchg
jle
shll
sub
mov
adc
popa
cld
movsl
mov
jno
xchg
adc
adc
sbb
push
shrl
xorb
or
inc
or
in
leave
or
inc
outsb
push
push
cmp
xlat
rorb
out
loope
cmp
xlat
mov
xchg
fisubs
aam
jl
push
addr16
lahf
ss
push
fildll
mov
cmp
movnti
xor
idivl
stos
es
testl
lret
into
pop
std
call
pop
shl
inc
popf
cmp
pop
lock
fisubl
mov
push
cld
movsl
jmp
sbb
mov
pusha
sti
inc
popf
push
pop
adc
sahf
cmc
add
sbb
fimuls
fs
mov
popf
or
push
cmc
mov
lahf
mov
inc
enter
shlb
push
gs
popf
inc
pop
mov
imul
pop
xor
push
lahf
sbb
stc
aam
js
and
aaa
xchg
cmpsl
cmp
lea
push
pop
stc
insb
adc
bound
push
dec
mov
jae
repnz
xchg
mov
int
aad
pop
jno
mov
ret
or
imul
mov
rcll
stc
add
dec
mov
loopne
xor
cmp
cltd
dec
outsl
inc
bound
leave
mov
sti
dec
dec
push
fists
jmp
fwait
test
aam
jno
aas
cmc
add
jns
popa
and
inc
cmp
cmp
jle
pop
mov
aaa
enter
jmp
loop
subb
ds
outsb
enter
test
mov
mov
xor
mov
dec
mov
dec
mov
xlat
repnz
rcrl
ljmp
add
nop
adc
inc
mov
pop
xchg
add
and
lret
lcall
mov
repnz
shrb
adc
inc
dec
jecxz
dec
add
xchg
and
iret
mov
ret
add
mov
das
test
mov
inc
jne
shr
fnstcw
jg
shl
sub
fs
std
xor
mov
pop
push
hlt
inc
mov
mov
bswap
aas
icebp
adc
sbb
jne
aas
dec
repnz
jb
lock
and
and
pop
scas
mov
jo
loop
into
adc
xchg
fwait
xor
addr16
xchg
test
push
lods
test
mov
icebp
les
fcomps
mov
pop
push
add
adc
aaa
lret
adcl
push
fiaddl
or
int
ja
dec
hlt
in
push
daa
fists
aad
jne
lods
and
inc
dec
mov
or
inc
frstor
xor
fists
mov
add
leave
movsl
out
xor
cmp
inc
shrl
repz
notb
jne
jle
xlat
stos
pushl
pop
clc
mov
sub
xchg
dec
inc
in
sahf
sti
inc
push
jmp
lea
mov
push
dec
in
aaa
pusha
or
out
gs
imul
push
mov
test
mov
ja
hlt
xchg
xchg
stos
adc
jns
insb
mov
xchg
sub
repz
fldcw
xchg
scas
lret
mov
outsl
notb
int3
mov
cltd
mov
jae
cmc
pop
bound
adc
pop
mov
aas
add
pusha
hlt
aad
jecxz
push
sub
fs
cmc
leave
faddl
aad
and
mov
repnz
mov
lock
jns
adc
and
ss
iret
fimull
shll
add
jg
imul
aas
iret
xchg
inc
loope
push
push
ds
insl
out
push
fiadds
mov
pusha
stos
pop
pop
sub
enter
xchg
push
shl
inc
cmp
cmp
pusha
or
jb
inc
and
cmp
inc
pop
mov
jo
and
push
inc
fs
in
clc
mov
xchg
mov
mov
test
add
xor
xor
insl
movsl
cmp
push
jg
or
subb
movl
sbb
xchg
pop
jg
movsl
cmp
scas
push
push
fnstcw
cmp
dec
fisubrs
xlat
das
pop
add
lods
fcmovnu
push
mov
jae
arpl
adc
aas
fstl
imul
and
mov
dec
out
insb
xor
sbb
mov
push
pop
add
cmp
or
jg
loope
rclb
adc
in
repnz
fstpl
repnz
fdivp
mov
orl
pop
mov
ret
scas
imul
and
int3
imulb
loopne
adc
and
and
sub
scas
pusha
mov
inc
dec
fs
jmp
mov
movsb
das
lret
pop
push
cmp
push
or
ja
enter
mov
or
pop
xchg
imul
sbb
addl
cmp
or
test
test
and
arpl
xchg
add
mov
jmp
sbb
aaa
xchg
sbb
adc
into
push
mov
sub
dec
test
leave
fldenv
and
lds
je
fldl
imul
push
fldcw
jns
ret
aas
lods
pop
dec
cmpsb
adc
adcb
dec
rcr
cmpsl
cmp
leave
ds
in
stos
push
je
cmc
stc
pushf
cld
stos
repnz
sti
push
sub
hlt
cmp
fwait
sub
test
xor
xchg
cmp
lock
mov
mov
fidivl
lea
pushf
and
sarl
orb
push
cmp
dec
xor
dec
test
adc
sub
fwait
gs
and
push
mov
dec
pop
sarb
out
out
push
jo
push
and
dec
decb
test
outsb
stc
cmpsb
int
cmp
hlt
lea
push
lock
je
sbb
dec
fstpl
pop
out
xchg
dec
repz
insl
sub
inc
mov
mov
push
mov
jnp
movsl
inc
sub
dec
filds
mov
mov
or
cld
xchg
mov
and
rcrl
fidivs
lcall
fnstcw
lretw
mov
cmc
mov
std
cmpl
and
push
xchg
lcall
mov
add
dec
orl
push
lret
rclb
xor
xchg
outsb
scas
cmp
cmp
pop
or
je
sbb
fiadds
mov
add
test
xchg
dec
stos
pop
push
loope
mov
sub
fiaddl
dec
cld
fwait
cmp
mov
scas
pop
jb
std
pop
lock
and
pop
xchg
sub
mov
mov
cmp
test
cmpsb
xchg
dec
cmp
cmp
cltd
in
pushf
or
dec
xchg
sub
mov
loope
cmp
jno
lcall
cmp
mov
cmp
repz
aad
dec
add
repz
mov
mov
adc
out
ljmp
jae
xchg
or
dec
out
xchg
xchg
sbbb
jmp
jp
scas
inc
test
leave
mov
push
outsb
gs
ss
nop
fdivl
xor
and
rcr
add
hlt
sub
ds
cmc
icebp
adc
cmpsb
cltd
call
mov
movsl
mov
mov
adc
pop
rorb
fnstsw
sub
pop
mov
dec
loop
sub
imul
imul
std
jmp
addr16
inc
mov
or
push
push
out
cmpb
adc
dec
inc
pushf
pop
xchg
xor
outsl
cmpsb
aas
push
pushf
pop
add
sbb
push
popf
xchg
pusha
xor
aad
shr
shlb
sar
sub
in
jnp
call
and
scas
inc
pop
sbb
movsl
inc
int
xchg
xchg
mov
insb
push
inc
cmpsl
andl
sti
xor
mov
pop
push
cmpb
mov
notl
cmp
mov
sbb
and
push
das
mov
adc
add
das
mov
sub
repnz
arpl
aam
pop
lahf
ss
xchg
and
int
xchg
push
cmpsl
jg
cwtl
icebp
pusha
arpl
jmp
mov
jne
cmc
push
cmp
ja
popf
xor
mov
jbe
pop
in
xor
ds
xchg
jle
orl
aaa
data16
pop
adc
arpl
jmp
push
or
xchg
sub
or
pop
ret
enter
and
loope
js
or
hlt
leave
xor
lret
aaa
cmp
mov
mov
inc
ror
arpl
clc
sbb
std
dec
fldenv
pop
xchg
call
stos
dec
addl
and
test
lock
and
lahf
xchg
jmp
push
into
jg
enter
into
push
mov
fisubs
in
or
cwtl
test
ss
inc
aad
das
mov
push
xorb
push
clc
sub
dec
mov
fildll
out
jecxz
frstor
mov
das
fildll
lahf
pop
cmp
jb
jmp
test
jp
fists
in
negl
leave
ljmp
dec
insb
icebp
loop
jno
xchg
rcrb
sub
out
lret
xor
and
enter
iret
fisttpl
insl
je
jp
mov
fnsave
or
adc
in
lahf
stos
pop
aam
cmp
scas
icebp
insb
adc
cmp
scas
push
ds
or
mov
aas
pop
sub
in
test
cmp
das
inc
cs
push
adc
dec
daa
pop
xchg
data16
xchg
testb
mov
into
jae
lcall
dec
fnsave
cld
sub
sub
cld
dec
loope
cltd
add
sarb
jg
in
mov
ret
in
shr
cmp
out
jnp
repz
mov
push
jo
xchg
mov
mov
sbb
inc
xor
int3
or
ljmp
jae
lret
dec
lds
jl
or
dec
mov
adc
or
pop
stos
and
fistpl
push
sub
sub
into
xchg
mov
js
jg
int
xorb
cmp
push
mov
jge
cmpsb
lods
push
xchg
out
int
push
vstmxcsr
pop
addr16
jle
push
int
mov
jo
sub
dec
sub
jnp
cmp
jae
stc
sub
lcall
mull
int3
xchg
call
in
pop
ffree
iret
adc
sub
sbb
jno
hlt
lock
jbe
dec
xor
les
dec
add
outsb
loope
add
push
cmpsl
jno
inc
pushf
loop
or
xchg
aam
in
xor
mov
jg
in
insb
sbb
mov
lock
pop
sub
lock
fdivr
and
cmp
xchg
inc
mov
jne
out
sub
je
pop
jns
jnp
inc
pop
jmp
cli
aad
jl
or
pop
and
cmp
xchg
inc
push
les
mov
inc
inc
xor
cmp
inc
icebp
mov
jge
sbb
cs
mov
mov
fsubrs
mov
cmp
adc
mov
imul
outsb
pop
xor
inc
push
fwait
pop
movsb
test
outsl
push
jne
and
cld
add
std
xor
std
or
or
sbb
out
lret
into
movsl
orb
xchg
icebp
sbbb
push
push
jae
jp
cmp
xchg
dec
jl
movsl
sub
adc
clc
aam
push
jbe
xchg
adc
lret
in
add
mov
or
sub
lahf
push
or
insl
jg
pop
stc
dec
push
cmp
insl
cmpsl
sub
addr16
lock
inc
adc
pop
xlat
or
cmc
jns
lea
stos
ss
pop
scas
inc
push
mov
adc
mov
fdivrs
mov
xor
mov
enter
pop
loopne
cmp
push
sub
jle
and
add
insl
add
inc
xor
lds
in
mov
adc
outsl
fimuls
mov
sub
cmpsb
push
addr16
push
jb
popf
cmp
test
mov
and
insl
fbstp
dec
add
sub
adc
dec
int
test
cmp
clc
xorb
cmp
lret
pop
mov
call
cmp
jo
in
adc
scas
aam
xchg
das
jnp
ss
cmp
and
cs
data16
jle
push
and
xchg
sub
movl
cmpsb
lock
pushf
addb
or
inc
stos
pushf
das
pop
out
inc
mov
jnp
dec
test
push
out
jae
call
leave
iret
iret
lods
in
jne
jne
pop
push
in
stos
xchg
das
push
jg
jae
pop
xor
in
adc
out
add
incl
xor
into
mov
ffree
and
sbb
mov
gs
cmpps
stos
mov
fstpl
ss
or
cs
pop
mov
lcall
in
aas
shl
inc
cmpsl
lods
jmp
aaa
sbb
sarb
out
js
pop
fwait
mov
pop
cmp
das
out
inc
insb
pop
mov
or
xchg
push
je
xor
xchg
and
mov
call
gs
ljmp
pusha
std
push
cmpsl
lods
push
mov
jp
mov
movsl
xchg
cmp
cltd
scas
push
je
andb
insl
cli
loope
jo
shr
inc
adc
inc
arpl
cmp
push
lret
cmp
push
repnz
cltd
std
mov
push
mov
add
jns
add
ds
or
incl
pop
int
enter
cld
pop
sbb
inc
push
ss
mov
cs
sub
fsin
gs
vmptrst
push
ds
popf
push
xchg
cli
pop
gs
lret
push
popf
jae
xchg
out
rcrl
cmp
ds
jmp
loop
arpl
mov
insb
inc
add
fwait
mov
movsl
dec
jb
mov
fsubrp
orb
add
dec
mov
fwait
std
pop
ret
pop
sub
test
outsl
iret
pop
int3
dec
dec
push
push
push
and
fldt
scas
fidivs
mov
xchg
test
push
mov
push
ljmp
jno
push
xor
xlat
sbb
mov
bound
lods
xchg
pop
sub
add
pop
jl
fiadds
andb
insl
inc
mov
shlb
ja
adc
dec
pop
out
cmp
or
mov
mov
push
rol
sarb
cs
mov
mov
je
loope
int3
bndldx
mov
pop
cmp
inc
aad
rcl
pop
dec
inc
jmp
dec
add
es
pop
mov
lods
shll
adc
in
xlat
repz
inc
imul
into
fbstp
xor
std
cmp
std
jb
ds
pop
daa
xor
inc
inc
pop
jne
dec
mov
pushf
lcall
rolb
outsl
mov
xor
inc
mov
mov
xor
add
call
inc
les
jo
sub
divl
jbe
or
loope
shl
loop
out
lahf
jmp
or
mov
sub
mov
jmp
bound
or
arpl
movsl
sbb
scas
out
insb
mov
mov
jns
test
xor
jp
adc
jecxz
test
outsb
mov
and
push
cmp
movl
or
fstpl
jbe
enter
sahf
cld
popa
xchg
adc
les
inc
or
or
mov
inc
sub
outsl
mov
mov
jae
dec
and
scas
cmpsl
lock
faddl
add
jmp
aad
push
testb
mov
call
mov
sahf
data16
sbb
jnp
sbb
test
es
mov
mov
gs
sub
leave
nop
jge
clc
es
sub
insb
adc
xchg
push
popa
sub
jp
inc
jmp
dec
test
inc
jecxz
cld
stos
lods
jp
or
fnstenv
xchg
inc
popa
leave
add
pop
shl
imul
and
test
xor
stos
sar
fmuls
in
adcb
sbb
jbe
iret
movsb
sub
mov
dec
daa
or
and
sbb
mov
inc
cltd
gs
xchg
push
or
sub
pop
fdiv
dec
pop
leave
pusha
mov
pop
cmp
in
adc
push
lds
out
xchg
fisttpl
jge
cmp
scas
test
mov
das
inc
ret
pop
pop
xchg
pop
adc
xchg
lods
inc
cmpsb
jle
push
outsb
out
cmp
aaa
cmpsl
sbb
dec
vhaddps
sub
fsubrl
flds
add
pop
repnz
sbb
mov
inc
mov
stos
std
je
rcl
cli
or
and
and
and
ja
dec
adc
inc
insl
xchg
push
jo
int
or
mov
in
dec
out
mov
andb
into
and
movhps
dec
adc
movsl
dec
pop
notb
push
insb
jle
cmp
shrb
cmp
pop
stc
jno
cmpsl
push
or
adc
into
fsubl
cmc
mov
mov
inc
shrl
inc
adc
outsb
xchg
xor
data16
out
push
jns
aaa
sti
shr
sbb
lods
adc
cmp
jne
mov
push
insl
ss
fbstp
fmul
adc
arpl
dec
fcoms
insl
lods
jo
lcall
adc
add
add
nop
pop
jmp
dec
pop
jne
mov
cmp
insl
add
mov
mov
sub
cmp
cs
pop
sub
mov
lret
jbe
in
cmpsl
in
xor
jns
les
arpl
cmp
dec
push
sub
cmp
or
pop
clc
pop
cmp
insl
xchg
ljmp
jne
cmp
sub
push
scas
jg
jns
adc
xor
dec
cmovno
rorl
add
sbbb
jnp
xlat
fs
mov
mov
shll
and
stos
xor
push
lods
push
fdivs
mov
fdivrl
and
jp
sub
jg
add
mov
fwait
sub
cld
inc
fistps
or
add
out
xchg
xor
push
shrl
aam
js
js
xchg
repnz
out
push
cmp
sbb
dec
dec
rcrb
iret
repz
mov
jno
test
les
adc
mov
nop
mov
cs
mov
add
les
xchg
idivl
pop
cmp
add
or
jno
mov
push
cmpsb
or
sub
test
jmp
rol
mov
mov
push
and
push
sbbb
mov
mov
rcrb
lock
fsubrp
xor
mov
stos
out
sbb
repnz
cmp
in
add
stc
stos
fxch
xchg
xchg
inc
fadd
add
pop
xchg
xor
push
lods
cld
xchg
pop
inc
push
lcall
ds
out
dec
sarl
xchg
insb
mov
popf
mov
pop
adc
pop
push
leave
je
iret
andw
pop
mov
std
or
jle
pop
jo
mov
std
add
test
or
cwtl
jno
ror
dec
push
adc
adc
sbbb
nop
arpl
outsb
jp
test
insl
cmp
pop
sub
mov
adc
test
mov
outsl
sbb
mov
push
rdmsr
cwtl
aas
and
or
shl
mov
jecxz
mov
fwait
enter
add
jl
mov
push
jge
cmpb
stc
xchg
xchg
jge
push
mov
xlat
loope
xor
std
icebp
inc
xlat
sahf
outsb
xchg
insb
adc
cs
cmp
sti
imull
andb
xchg
sbb
nop
dec
cmp
cmp
dec
push
lea
jmp
loop
test
aam
imul
jle
push
xchg
push
je
sbb
lret
jg
push
mov
ret
push
pop
sbb
push
xchg
jg
jmp
adc
adc
cmp
adc
add
dec
dec
mov
cld
xchg
enter
sahf
pop
sub
rcrl
aad
cmp
repz
inc
out
andb
pop
ljmp
je
popa
mov
pop
lret
pop
xchg
xor
dec
in
stos
loope
scas
and
test
in
xor
je
dec
outsb
mov
push
push
stc
fdiv
mov
pop
mov
mov
lods
test
rcrl
outsb
stc
mov
dec
pop
xor
jge
adc
imul
push
gs
sti
sub
in
jbe
in
dec
push
sti
cmp
loope
push
lds
push
pushf
lods
les
push
jge
add
xor
sbb
insb
pop
xorb
pop
cmpsl
decb
or
mov
das
adc
movsb
nop
das
mov
adc
lds
lahf
jle
mov
and
ljmp
call
or
push
int3
mov
ja
push
cmp
inc
or
ljmp
xor
push
add
dec
lret
sbb
std
sub
ror
ret
or
mov
jl
stos
fisubrs
aad
lds
shrb
xchg
adc
push
leave
xchg
jge
popa
stc
cmovle
sahf
notl
ljmp
xor
mov
movsb
jmp
xlat
add
push
xchg
arpl
jge
dec
xor
adc
int
push
iret
add
xor
ret
bound
xor
outsb
dec
sub
insb
cmc
xlat
sbb
ja
mov
bound
es
ud0
loope
mov
fldcw
inc
pop
ljmp
rcrl
jge
mov
cmp
test
loop
arpl
pop
aam
jb
daa
push
cmpsb
or
sub
fcompl
mov
inc
jg
mov
stos
mov
inc
jmp
pop
lret
mov
in
inc
les
inc
add
push
dec
push
sub
or
pusha
addb
hlt
dec
loopne
fwait
jne
sbb
inc
and
or
mov
xchg
sub
mov
xor
xlat
sbb
pop
test
jbe
outsl
in
adc
fsts
in
pop
js
sbb
sub
adc
popf
ljmp
fadd
fistpl
mov
and
dec
push
cmp
dec
in
shl
out
push
out
mov
cmpsb
cli
jne
imul
mov
sbb
inc
scas
js
loop
jb
jns
dec
mov
jle
clc
xchg
lds
cwtl
stos
jl
or
inc
cs
push
push
and
nop
inc
lea
nop
out
mov
push
test
fdivl
adc
and
inc
insl
jb
leave
and
xchg
loope
lret
mov
adc
scas
mov
in
fwait
fwait
inc
push
clc
xor
xchg
inc
enter
xor
addr16
cwtl
pop
in
mov
mov
pop
xchg
dec
cmp
dec
pop
lcall
fidivl
pop
and
pusha
pusha
ja
adc
enter
cmp
fs
mov
lahf
adc
xor
test
pop
xlat
outsb
movsb
or
scas
add
aaa
out
mov
stos
mov
push
xor
idivl
jne
or
cmc
or
scas
xchg
add
ret
rcrl
mov
insb
je
pop
mov
mov
jb
movsb
scas
ds
shlb
lock
lret
adc
jne
xor
inc
icebp
jb
cmp
cltd
cmp
daa
int3
push
test
dec
ffreep
add
or
daa
xor
out
pop
in
lock
mov
push
mov
insl
arpl
or
mov
ret
add
jg
inc
pop
mov
dec
jbe
aas
jne
jmp
jmp
fstpt
aas
loop
pop
adc
rcrb
jns
sbb
inc
pop
jne
in
mov
dec
add
imul
xchg
rcrb
loop
lods
pop
push
push
add
cmc
inc
aam
jnp
add
add
sub
cli
pop
mov
outsl
lcall
mov
xchg
idivb
add
aam
aaa
shl
stc
add
pop
sub
fwait
int
xchg
jnp
mov
arpl
aam
and
inc
sahf
ja
bound
mov
popa
movsb
fadd
pop
add
into
jmp
mov
xor
cmp
push
loopne
scas
mov
jmp
push
dec
or
insl
aaa
outsl
pop
nop
lahf
notl
adc
popf
inc
push
mov
out
cmp
add
jmp
jne
xor
add
jg
or
cltd
fildl
fdivrs
fidivrs
mov
adc
les
cmp
sub
xor
inc
push
sub
repz
and
lcall
inc
xchg
loop
not
fs
data16
mov
call
inc
loopne
jge
mov
subl
fistl
int3
rcr
in
sti
stos
hlt
jg
xchg
jbe
sarb
sbb
xchg
cmpsl
xor
or
jecxz
je
or
pusha
inc
pop
sub
sbb
imul
outsl
add
dec
push
cmp
adc
add
popf
jno
es
sbb
scas
repz
sub
inc
aam
jmp
dec
out
dec
mov
mul
push
push
ret
shl
shlb
fsubl
mov
pop
mov
mov
fnstcw
inc
sbbb
aas
dec
ret
xor
movb
inc
and
rcr
mov
xor
iret
imul
dec
xlat
add
inc
clc
push
ret
pop
cmp
in
test
cmp
fldt
dec
dec
arpl
shr
mov
sbb
dec
dec
lods
cmc
add
cmp
cmp
dec
mov
or
dec
pop
and
movsl
in
sbb
or
fidivrl
divl
push
xor
aas
jmp
fistpl
adc
cld
shl
sub
leave
mov
and
daa
push
bound
je
stos
jae
popf
movsb
cmp
push
ret
fwait
jb
add
std
pop
fld
outsl
shl
ret
jecxz
mov
repz
rcrb
in
insl
mov
mov
ja
xor
sub
std
decb
int
xchg
fisttpl
insl
insb
sub
dec
pop
adc
repz
cmp
push
movsb
dec
insl
and
pop
repz
hlt
dec
push
cmp
jl
sub
movsb
lea
aaa
or
push
and
xchg
mov
sub
repz
rcrl
pop
pop
push
push
add
jns
test
hlt
fwait
or
mov
bound
mov
adc
xlat
push
sbb
pop
in
sbb
xor
push
dec
dec
inc
in
xchg
mov
test
push
out
stc
adc
out
lea
fnsave
jae
add
cmpsb
fnstcw
fs
mov
cmp
sbb
lock
imulb
push
add
leave
insb
jo
pop
bound
sbb
out
aaa
mov
push
xchg
sbb
mov
or
or
adc
pop
xchg
jmp
idivb
mov
ljmp
xchg
ror
out
xorl
jge
mov
rol
push
idivb
adc
ret
or
sbb
mov
xor
sbb
jmp
sarl
add
das
fs
test
mov
jbe
mov
cmpsl
nop
or
pop
sahf
fnstcw
scas
cli
jge
and
add
addb
mov
int
xor
mov
add
daa
imul
sub
outsb
aam
mov
shll
and
call
inc
test
lret
mov
push
push
movsb
sub
adc
xor
loop
pop
insb
cmp
movsl
sub
pushaw
inc
fistl
cwtl
scas
pop
jne
xor
jp
xchg
dec
sarb
cmp
pushf
popf
imul
add
adc
push
ljmp
dec
ret
sbb
outsb
fs
test
add
mov
dec
ds
das
or
pop
lods
push
stc
aad
mov
jge
push
in
push
xchg
pop
orl
cmpsb
cmpsl
xlat
pop
mov
cli
shll
idivl
inc
mov
mov
add
cmp
out
mov
mov
xor
mov
fwait
inc
jbe
idivb
pop
jp
lahf
in
sbb
std
sub
in
jecxz
ret
push
sbb
ds
xor
mov
xchg
bound
and
jno
or
out
adc
or
pop
shlb
jl
lret
fildl
or
mov
or
adc
inc
pop
mov
sbb
negl
cmp
cmp
ljmp
out
add
leave
xor
xchg
sbb
dec
adc
mov
pop
inc
mov
sbb
fdiv
in
stos
xchg
mov
xor
and
icebp
jge
xor
fsubl
pusha
add
push
ja
les
inc
out
mov
sarb
cs
push
cmc
mov
pop
push
mov
cmp
outsb
lret
es
inc
das
inc
enter
push
fimuls
lahf
iret
dec
mov
pop
sbb
aad
cmp
cs
gs
xchg
mov
push
jnp
mov
sub
out
cmp
or
stos
mov
test
jae
jns
mov
mov
out
popa
lock
pop
ret
jne
jecxz
mov
popf
ja
adc
movsb
test
push
inc
inc
or
sbb
int
or
scas
jb
out
dec
pop
scas
jno
xchg
cmpsb
in
cmpsl
mov
add
out
pop
mov
out
fdivrl
in
scas
adc
jno
inc
dec
adc
inc
cmpsb
mov
test
andl
adc
pop
int
dec
and
add
jae
inc
pop
ret
repnz
mov
insb
add
addr16
je
pop
jg
or
jge
ljmp
xor
push
add
mov
fwait
pop
xchg
push
xor
loope
push
adc
fnsave
mov
fsubl
pusha
dec
push
inc
mov
pop
ljmp
inc
sbb
test
push
dec
xchg
push
xor
sbb
test
outsb
push
in
pop
cmpsl
ds
imulb
dec
cmpsb
cmp
mov
mov
popl
and
cvtps2pi
fwait
imul
adc
int
dec
scas
leave
pop
inc
stos
push
out
repz
rcrl
incb
andb
mov
sahf
and
gs
mov
push
fistpll
inc
es
jns
insl
push
push
fsub
or
bound
call
ljmp
mov
fs
popf
ret
mov
mov
sub
xor
push
imul
fwait
xchg
ds
repz
pop
cs
jb
xlat
repnz
and
sbb
inc
dec
dec
mov
lds
mov
and
shll
lcall
inc
roll
call
xchg
dec
cmpsl
mov
jle
jmp
repnz
loope
or
cmp
lock
adc
or
pop
mov
lods
out
jns
fnstenv
scas
fdivrp
push
xchg
das
jne
mov
and
xor
and
int
mov
ret
inc
fsts
pushf
or
cmp
dec
cwtl
mov
popf
popa
in
xchg
sbb
mov
sbb
mov
and
adc
popa
insl
divl
mov
jle
dec
sbb
xchg
outsl
ds
mov
outsl
lods
out
mov
cmpb
mov
mov
dec
popa
lcall
negl
dec
add
ret
mov
rorl
pop
sbb
mov
jg
movsb
jnp
pushf
jle
hlt
pop
add
mov
mov
jmp
lcall
sbb
or
jg
inc
mov
fs
pop
mov
aas
call
jp
pop
inc
leave
mov
push
xchg
ss
loop
les
aam
push
mov
jmp
xchg
sbb
jb
aaa
add
push
mov
sbb
sbb
imul
push
insb
or
data16
push
cwtl
push
push
jae
fnstenv
or
scas
popf
je
cmpsl
movsb
dec
mov
sti
xchg
sarl
dec
mov
cld
lds
negb
lock
cmp
sub
hlt
ret
xlat
or
xor
rcrl
mov
xchg
incl
cmp
shrb
push
mov
jb
and
pushf
xchg
push
xor
jmp
rolb
jne
xchg
lcall
mov
adc
cld
fsubrs
cs
cld
jbe
push
popf
cmp
push
mov
bound
dec
jp
adc
sahf
and
add
mov
stos
inc
add
inc
ljmp
push
mov
in
popf
cltd
lods
ja
cs
inc
push
shl
mov
pusha
xor
jno
outsb
lret
loopne
dec
xor
mov
xchg
inc
aas
scas
sar
pop
sbb
dec
shlb
cmp
clc
ss
inc
xchg
stos
sbb
pop
jno
mov
in
arpl
dec
or
icebp
cmp
pop
xchg
insl
sarl
pop
adc
out
testl
fdivrs
xchg
in
idivl
rclb
fidivrl
ret
mov
mov
and
jno
jle
mov
inc
pop
and
xor
jp
inc
nop
or
outsb
or
bound
mov
aaa
clc
popa
adc
inc
xchg
mov
inc
imul
push
cli
mov
pop
sub
in
sbb
mov
sub
shrl
decl
and
inc
out
push
nop
push
pop
loope
cmpsb
ss
mov
std
push
sub
lahf
add
jnp
repnz
lods
xchg
mov
push
test
imul
scas
cmp
in
dec
adc
vmovddup
sub
lcall
addr16
enter
mov
and
in
xor
out
pmaxsw
sub
jno
jae
mov
adc
shlb
popa
push
jmp
push
mov
mov
arpl
adc
xor
push
out
xchg
arpl
fs
arpl
pop
inc
mov
pop
mov
mov
mov
mov
bound
shll
pushf
rcrb
or
je
out
mov
inc
ljmp
mov
jo
dec
and
dec
add
cmp
iret
mov
daa
cli
out
pop
jecxz
rolb
hlt
jg
int
stc
les
mov
scas
stos
xchg
mov
lret
push
push
and
lahf
mov
xchg
jecxz
imulb
lock
movsb
push
je
push
in
ret
push
roll
mov
mov
jmp
xor
push
fwait
mov
iret
cwtl
pop
xchg
hlt
push
out
and
jmp
push
aaa
jnp
outsl
add
xor
jl
inc
pop
ret
int3
jnp
jns
mov
mov
push
cmpsb
cmp
loope
jo
les
pop
lret
dec
and
or
je
dec
sub
repnz
lods
and
push
ret
in
xor
aad
and
in
sub
adc
lods
mov
jne
cs
jae
mov
cli
push
mov
inc
sbb
int3
arpl
pop
aad
push
outsl
mov
ljmp
faddl
cmp
inc
adc
js
leave
mov
inc
ljmp
mov
dec
subb
adc
sub
iret
sti
fwait
bound
pop
push
or
dec
mov
je
jle
int
sub
mov
cmc
out
xchg
sti
popf
shrl
jo
fmul
sub
add
pop
iret
lods
jbe
jecxz
cmp
fstpt
enter
nop
icebp
enter
push
dec
or
cmpsl
xor
jns
adc
test
int
lahf
out
dec
pop
fmull
ret
sbb
push
pushfw
push
cltd
push
sub
adc
aam
dec
fistps
sbbl
sub
js
rcr
mov
jmp
clc
dec
fnstsw
adc
imul
out
xor
xor
int3
movsb
dec
push
mov
adc
lahf
add
add
out
shll
rol
mov
dec
pusha
adc
cmp
add
test
arpl
push
push
xor
test
lahf
outsb
movsl
mov
cmp
out
and
popa
subl
lock
testb
jmp
xchg
adc
fs
mov
sub
sti
nop
sbb
aad
cmpxchg8b
lret
adc
pop
fs
mov
jmp
adc
sub
data16
cmp
lcall
sbb
push
mov
cmp
sar
push
mov
notl
jl
cmp
xor
imul
and
stos
inc
or
sbb
jp
scas
arpl
mov
cld
ret
into
vpinsrw
pop
mov
or
xorl
jbe
shlb
movsb
sbb
fadds
mov
bound
icebp
cmp
shr
shll
sub
or
xor
or
mov
test
adc
sub
imul
lret
xlat
test
stc
mov
fldt
and
enter
adc
loop
shl
cld
in
cs
cwtl
mov
cmpsb
lock
adc
pop
or
adc
jp
and
mov
add
mov
ret
lcall
clc
adc
jmp
fs
and
dec
das
cli
notl
push
ret
aam
je
outsl
pop
fwait
adc
xchg
je
in
pop
lods
ja
pop
push
sar
or
std
fucomp
cs
add
sub
push
pop
insb
dec
cmp
icebp
iret
mov
push
push
jno
mov
xchg
push
or
hlt
mov
test
jmp
ss
je
xchg
arpl
or
add
xchg
push
popf
sub
subl
pop
pop
int3
or
sarb
cltd
xchg
adc
inc
xor
leave
pusha
test
int3
movzbl
es
or
push
adc
and
mov
push
jnp
je
cmp
push
add
sub
jbe
int
lds
es
pop
shrb
push
neg
imul
int
inc
aas
and
cmp
scas
mov
das
inc
outsl
pushf
jae
add
inc
dec
pop
lcall
orl
fdivrl
mov
pop
es
inc
and
dec
pop
repz
cmp
repnz
add
dec
xor
inc
jnp,pt
xchg
sub
lret
sbb
das
call
add
lahf
sbb
dec
mov
or
inc
daa
popf
mov
jge
adc
outsb
or
jb
out
sbb
ljmp
lea
test
mov
stc
mov
and
dec
out
sti
push
xchg
rorb
mov
out
sbb
add
inc
adc
cmpsl
in
test
push
mov
ja
pop
addr16
pop
outsl
inc
jne
mov
pop
or
push
inc
inc
shlb
pusha
jo
xchg
imul
dec
and
jecxz
cmp
cmpsl
out
push
rcrl
loopne
and
iret
inc
xchg
lock
arpl
outsl
inc
sarb
popf
xchg
jp
clc
pushf
sub
and
stc
testl
jae
xchg
xor
out
subl
mov
or
ret
ja
xchg
dec
int3
sub
push
cli
push
lock
add
mov
mov
shlb
andb
pop
test
mov
add
mov
mov
cwtl
dec
cmp
cmp
xorl
movsl
cwtl
das
xlat
mov
xor
push
adc
dec
xchg
int
add
sbb
lret
into
pop
mov
lret
jae
sahf
scas
mov
push
inc
arpl
dec
pop
and
fwait
aas
repnz
lea
into
xchg
les
jge
in
adc
sbb
sub
sbb
sahf
cmp
add
mov
cs
inc
in
mov
fsubrs
loop
roll
cmp
push
insl
dec
inc
mov
add
test
insl
adc
dec
and
fistpl
outsb
push
out
in
push
xlat
fisubrl
test
add
arpl
addr16
sbb
and
xchg
or
cmp
pop
dec
mov
mov
pop
mov
xchg
iret
and
lea
call
and
loopne
aaa
int
dec
mov
pop
dec
lahf
dec
dec
xchg
adc
scas
jae
inc
test
popf
push
mov
xchg
add
mov
lea
xchg
inc
in
mov
aaa
jae
adc
shlb
popa
clc
jmp
cld
sbb
mov
dec
jmp
dec
jecxz
cwtl
cld
jnp
shr
pop
sub
imul
outsl
jo
inc
add
sti
xchg
testl
inc
jae
sbb
outsb
faddl
mov
xor
loopne
data16
mov
cmp
pop
lret
mov
xor
ja
and
sub
sbb
jae
jmp
mov
push
pop
jge
dec
jns
or
test
fbstp
lahf
pop
or
mov
jecxz
inc
leave
in
jae
xchg
jmp
mov
xor
mov
fsubrs
inc
inc
adc
cmpsb
cmp
test
fidivs
mov
adc
les
mov
mov
pop
lods
addr16
jns
push
das
add
fldl
pusha
notl
sbb
sarl
stos
nop
loop
clc
sbb
jne
ret
xchg
mov
inc
jb
out
jp
popa
clc
fisubrl
or
pop
fnstenv
mov
push
sahf
and
stos
ljmp
cmpb
nop
clc
add
mov
push
insb
fidivs
add
inc
aam
jbe
iret
fs
loopne
mov
add
cmpsl
mov
lds
fsubrs
mov
sbb
push
test
lds
orb
mov
xlat
lods
inc
xchg
push
mov
mov
loope
or
rolb
fisubrs
in
or
sahf
mov
inc
or
cmp
xor
jne
inc
dec
mov
cmp
fnstenv
cli
or
jns
jecxz
mov
insl
lods
push
stos
fadds
jg
jle
popa
add
fsubrs
shl
xchg
pop
pop
mov
jl
test
xor
mov
push
call
or
xchg
scas
in
xor
xchg
inc
bound
inc
sbb
imul
push
fimull
and
test
stc
test
das
inc
push
add
data16
dec
and
je
shll
cmpsb
inc
inc
in
rclb
push
ficomps
shrb
dec
and
inc
adc
add
insl
push
and
repnz
insb
filds
fadd
jns
gs
arpl
lock
aaa
mov
aaa
shrl
add
add
arpl
sti
mov
ret
outsl
lea
int3
hlt
fsubs
xchg
jo
jnp
dec
dec
add
jl
cli
es
pop
sti
push
insl
inc
inc
vsqrtss
aad
xchg
mov
outsl
das
cmp
sub
sbb
adc
sub
sbb
je
push
lret
xor
jl
out
push
sub
iret
xchg
in
pop
int
sbb
push
imul
js
mov
push
int3
arpl
outsl
fidivl
jl
scas
adc
or
dec
add
xchg
scas
mov
or
adc
xchg
cld
xorb
cmp
dec
fs
inc
adc
loop
rcll
pop
loope
dec
mov
rorl
shlb
insb
add
ret
mov
push
psllw
push
pop
popf
xor
adc
pop
inc
add
pusha
pushf
das
cwtl
cmp
ret
pop
fists
xor
leave
in
xor
ret
dec
mov
movsb
movsl
js
mov
or
mov
aad
jne
cwtl
dec
dec
lret
sbb
ret
sub
push
ret
data16
loopne
mov
jmp
test
aas
mov
jg
inc
aas
paddw
jge
leave
xchg
fsubrp
popa
pop
aaa
push
mov
mov
xchg
ret
cmp
mov
jge
mov
ljmp
loop
lea
mov
lods
sbb
test
bound
cmc
dec
stos
push
push
out
aas
je
ret
sub
test
sbb
pop
lods
cmpsl
cmp
enter
adc
and
test
insb
aam
sysenter
fprem1
movsl
mov
jb
out
outsb
jmp
push
sbb
and
lret
push
inc
pop
add
loop
jo
jecxz
xchg
jmp
in
xchg
dec
fsubr
dec
mov
int3
je
mov
xor
push
xlat
outsb
jo
sub
inc
movb
loope
fistl
lret
lret
push
xchg
test
mov
enter
dec
dec
or
cmp
addr16
out
addps
or
adc
pop
xor
fwait
test
clc
sub
push
stos
int3
pushf
pop
jg
mov
icebp
or
mov
xchg
ljmp
aaa
pop
dec
shrb
mov
jno
sbb
movsb
mov
mov
ficomps
inc
stos
push
movsl
sbb
jmp
sbb
scas
push
cmp
pop
ljmp
ljmp
aaa
fiaddl
pop
jge
sub
jnp
add
mov
adc
inc
imul
xchg
jmp
or
push
ret
int3
push
push
and
loope
xchg
push
lods
sbb
out
mov
pop
xor
in
les
push
insl
je
iret
pop
push
imul
sbb
sbbb
sub
pop
hlt
inc
rcll
adc
stc
rcrl
pmulhw
mov
sub
nop
push
sbb
xorl
insb
push
sbbl
insb
in
sti
decl
fwait
clc
add
stc
jbe
sub
call
loop
leave
aam
call
sbb
jle
rcll
or
or
call
xor
xchg
clc
mov
jmp
xor
pop
mov
push
xchg
insl
ret
js
insb
hlt
mov
and
repz
xchg
vzeroupper
divl
out
mov
mov
dec
test
push
pop
aad
push
jle
inc
pop
xchg
push
fldl2t
cmp
xor
cmp
shl
pop
in
outsb
inc
cmp
push
jmp
insb
rorl
and
inc
pop
ret
mov
dec
fsubrl
leave
mov
sub
scas
inc
push
adc
insb
inc
cmp
xchg
cmc
inc
adc
int
data16
outsl
lret
enter
sub
clc
cmp
mov
cld
loope
movsl
xlat
xchg
out
mov
mov
mov
pop
mov
sbb
or
insb
insl
aad
mov
jge
movsb
imul
test
sub
leave
jbe
inc
mov
in
cmp
mov
fsubrp
icebp
cltd
shll
jno
and
cwtl
daa
adc
stos
jmp
xchg
push
mov
and
sbb
aam
bound
test
add
stos
push
aaa
fdivs
leave
fldenv
daa
loope
jo
sahf
out
mov
push
pop
into
xchg
pusha
add
vsubpd
xor
test
fwait
xchg
scas
loopne
jno
push
mov
xorb
dec
ss
das
inc
loope
dec
pop
mov
jb
imul
dec
or
and
adc
jmp
inc
mov
adc
sbb
daa
mov
jne
gs
cmp
xchg
pop
lds
dec
push
daa
jecxz
fwait
cli
inc
fsts
cmp
rcl
lret
jb
jp
jge
inc
mov
inc
adc
cwtl
lds
jnp
mov
lods
and
ja
push
in
out
add
shlb
sbb
dec
lods
cmp
test
stc
and
imul
and
lea
jns
mov
ss
jno
mov
or
or
jne
les
stos
adc
andl
push
mov
inc
pop
sub
hlt
cmp
lcall
mov
xchg
fcoms
movsl
cmp
in
pop
sbb
fld
jbe
outsb
add
lret
or
fsubs
aas
leave
stos
bnd
lods
ljmp
pushf
xor
jge
hlt
mov
iret
adc
or
and
jge
lock
dec
and
and
fists
ret
in
cli
iret
and
adc
push
cmp
dec
jae
cmp
insb
mov
sbb
or
fidivs
frstor
adc
sbb
jg
ficompl
xchg
cmp
push
pop
stos
xor
add
mov
shl
out
rcrb
leave
jecxz
ret
sbb
dec
daa
inc
push
stos
out
xor
iret
mov
in
inc
ds
pop
jo
mov
jne
pop
addr16
xchg
ret
dec
adc
push
mov
push
lock
and
pop
and
stc
pop
xchg
sub
sbb
xor
xor
lahf
cmpsl
int
out
adc
and
jbe
es
xlat
addr16
shr
sub
stc
push
je
ss
movd
mov
arpl
movsb
cmp
sbb
in
mov
xchg
inc
insb
dec
add
xchg
shlb
add
mov
push
ljmp
and
push
imul
int3
mov
repz
mov
sub
insl
push
or
adc
push
lods
xchg
mov
xor
ret
inc
push
mov
data16
xchg
xchg
aas
leave
mov
test
xchg
mov
or
icebp
sarb
add
push
movsl
fstpl
sub
shl
rorb
mov
sub
sbb
mov
add
pop
xsha1
cmpsb
mov
cmc
or
loopne
mov
jns
rolb
insb
test
dec
leave
pusha
jle
pop
pop
lahf
testl
mov
add
dec
scas
jb
jle
stc
bound
cwtl
js
mov
jmp
std
mov
mov
inc
mov
mov
jg
mov
insl
out
push
lods
sarb
fisubrl
shl
mov
adcl
mov
push
and
outsl
jge
and
ljmp
bound
in
or
push
cli
xor
subl
aaa
sbb
jae
imul
loop
mov
jno
fcoms
sub
pop
fwait
dec
jp
dec
loopne
sub
mov
fbstp
je
cmp
xor
in
ficoms
sysenter
stos
xchg
icebp
sub
pop
roll
cmp
in
add
push
dec
and
jl
cmc
int3
push
xchg
sbbb
add
lock
repz
adc
ss
addr16
testl
sub
sahf
mov
inc
cli
sub
clc
add
in
adc
mov
popf
cmpsl
jg
add
adc
add
andl
mov
or
jg
mov
loop
loopne
mov
js
leave
xlat
loope
pop
mov
frstor
and
jae
aas
rorl
rcrl
dec
pop
xchg
jp
loope
jmp
mov
jnp
add
pop
fadd
pop
adc
loopne
out
jae
and
in
mov
fidivs
pop
out
mov
dec
adc
addl
je
mov
sbb
jo
mov
arpl
push
mov
pop
scas
jo
fistpll
mov
mov
inc
scas
xlat
dec
pop
hlt
inc
xchg
lcall
sub
dec
pushl
adc
cmpsb
in
adc
adc
addr16
pop
push
inc
cwtl
mov
inc
pop
mov
xorb
dec
or
push
xor
test
pop
mov
test
dec
pop
popf
lods
je
fiaddl
adc
xor
mov
stc
inc
insb
leave
sbb
mov
jmp
sbb
std
leave
or
js
sbb
inc
push
stc
xor
jl
sbb
shrb
in
arpl
cli
cmc
cs
adc
loop
shlb
push
jmp
dec
pop
bnd
dec
pusha
inc
out
test
cwtl
xor
aam
or
sbb
mov
jg
inc
fstl
mov
lahf
stos
test
imul
mov
gs
pop
aas
pop
fcomps
ja
xlat
and
adc
cld
out
pop
movsb
outsl
or
leave
jne
jge
cmp
pop
inc
dec
movsl
inc
xchg
icebp
adc
push
mov
push
stos
sub
cmp
pop
insl
push
out
cmp
stos
das
jnp
pop
lock
insl
sbb
test
add
insb
adc
inc
pop
repz
pushf
jb
pop
lahf
xor
sub
imul
movsl
hlt
aam
adc
mov
sbbb
icebp
inc
cmpsb
out
ss
sbb
cmp
jns
push
scas
rcrl
or
data16
in
clc
jl
sahf
movsb
sub
cmp
pop
enter
lock
pusha
fstpt
pcmpgtd
jbe
adc
lods
outsb
and
or
fistpll
movsl
bndstx
pop
pop
hlt
fcmovnbe
insb
inc
mov
jnp
sub
cwtl
mov
enter
orb
mov
ds
xchg
sbb
insl
lcall
imul
test
mov
or
push
cmp
xchg
fs
loope
lea
add
icebp
das
cld
lcall
in
adc
rorb
cmpsb
push
mov
rcrl
sbb
dec
xlat
ja
aas
xchg
test
sub
popa
fsubrs
xor
cmp
imul
fdivrl
rorb
xchg
fiaddl
test
xor
leave
loope
hlt
cmp
pop
mov
inc
add
fs
inc
xchg
mov
ss
int
push
xchg
int
xlat
xor
pop
inc
mov
dec
ret
repz
and
cmp
pop
and
jb
dec
mov
mov
push
mov
rclb
inc
jp
clc
addr16
push
mov
push
xor
push
jae
pop
lret
shr
cmp
jge
hlt
cmp
lret
mov
sub
test
mov
push
stos
out
arpl
pop
xchg
cmp
mov
insb
add
sbb
cmp
add
push
imulb
ficoml
out
ljmp
and
lret
outsl
fcomi
bound
sbb
xor
mov
fcoms
xchg
call
sub
adc
mov
mov
cmpsl
jp
mov
shrl
mov
jae
pusha
push
jmp
and
dec
fmulp
and
pop
pop
icebp
or
leave
int
cld
imul
push
xchg
sub
data16
lahf
mov
mov
idiv
cli
adc
sbb
pop
or
mov
adc
js
xor
jmp
inc
scas
test
lods
mov
or
movsb
pop
loopw
or
aaa
out
iret
sbb
testl
add
and
xchg
sub
inc
pop
dec
pop
mov
and
lds
movsl
mov
lods
jb
pop
mov
shrl
cmp
cs
dec
pop
add
outsb
lds
cmp
xchg
les
sbb
lahf
jb
popa
add
push
cwtl
mov
add
sbbb
outsb
testl
inc
mov
push
mov
in
pop
inc
xor
imulb
lods
mov
pop
mov
inc
mov
mov
adc
xchg
mov
dec
insb
test
repnz
test
ss
add
cmp
xchg
sbb
add
xchg
cmc
push
xchg
jge
push
or
movsb
inc
adc
ret
in
incb
scas
xor
orl
cmp
push
inc
test
in
lea
fsubr
jno
inc
mov
sahf
sub
fmuls
xchg
add
push
insl
cmc
fildll
shrl
outsb
loope
and
mov
push
or
and
pop
fstl
adcb
and
fbld
stos
xor
xor
jae
jb
mov
sbb
popa
or
jb
push
sbbl
imul
mov
aam
cmp
fcomi
test
sub
pop
fcomip
dec
jns
dec
stos
push
cmp
dec
mov
negl
mov
sub
sbb
stc
adc
shrl
andb
rcrb
cmp
xchg
xor
xor
shrl
mov
add
sub
cmp
sbb
outsb
stos
cmp
test
fsts
sarl
mov
dec
gs
mov
pop
popa
mov
xor
out
imul
mov
cmp
icebp
or
sbbb
aam
ds
cs
sti
push
rol
in
scas
or
shl
cs
stos
pop
js
mov
inc
in
cmp
inc
sbb
sbb
call
mov
push
jmp
rcrb
leave
int
jo
popf
es
leave
add
pop
sub
mov
sub
mov
and
lods
cmp
fs
jno
lds
add
lcall
ja
loope
daa
je
pop
inc
fidivrl
idivb
outsl
lods
repz
lcall
sbb
loop
ljmp
iret
dec
push
add
leave
bound
popf
xor
leave
hlt
idivb
cwtl
loop
adc
int
cmp
push
mov
jbe
nop
xchg
cmp
scas
adc
adc
pop
idivb
push
cltd
or
popa
call
or
inc
add
into
imulb
scas
push
jns
shlb
cmp
mov
and
xor
fsubl
push
divb
or
xor
adc
inc
fisubrl
insb
imul
daa
lods
jb
test
fwait
adc
jae
nop
xchg
push
push
test
insb
jbe
sahf
xor
fimuls
cmp
sub
sbb
loope
daa
cs
imul
add
movsb
sub
or
mov
or
xor
inc
les
inc
inc
pop
call
adc
outsb
sub
pop
icebp
pusha
xchg
add
dec
mov
or
mov
out
jge
dec
ret
mov
shl
in
or
scas
clc
mov
rcl
cmpsb
repnz
and
mov
rorb
bound
iret
out
xchg
sbb
lods
xchg
sub
cmpsl
dec
les
movsb
dec
out
mov
daa
cmp
cmp
into
jge
mov
push
fiaddl
mov
addr16
jno
stc
cmp
inc
mov
jae
rol
add
fcompl
or
stc
push
mov
lea
jmp
imul
push
or
ss
push
and
outsl
arpl
ljmp
dec
mov
lods
not
sti
jb
aad
ljmp
popf
push
mov
loopne
sbb
or
mov
mov
add
loop
ret
cmp
lods
mov
cmp
push
imul
jnp
or
adc
sub
mull
jno
sub
pop
xchg
pop
xchg
push
std
gs
popa
fwait
pop
jnp
mov
push
sub
test
dec
xor
cmp
and
mov
aad
mov
push
notb
andl
test
insl
sub
repnz
mov
ret
lahf
and
movsb
jecxz
lret
dec
scas
fidivrs
lods
nop
sbb
cmp
mov
adc
jl
in
andl
aad
dec
nop
pop
mov
sub
lcall
fldcw
inc
adc
xchg
mov
mov
stc
pop
and
adc
cmc
iret
out
insl
mov
aaa
fidivrl
test
repz
andb
jecxz
lret
jecxz
cwtl
sbb
mov
dec
and
sub
addl
and
jo
and
andb
in
jae
push
push
adc
sub
aad
dec
ret
repz
loopne
into
imul
xlat
jb
stos
or
jae
scas
ret
add
aad
mov
jo
mov
push
movsb
cs
rcll
cmp
dec
or
icebp
mov
push
repz
cmpsl
sbb
mov
sub
and
rorb
push
pop
inc
pop
jb
xchg
mov
in
sahf
or
lcall
rclb
test
lret
outsb
mov
and
xchg
adc
dec
pop
fisubrl
ljmp
mov
es
or
cltd
push
xor
jle
mov
xor
dec
or
je
jne
fadds
subb
fs
and
xchg
mov
inc
dec
in
adc
scas
push
adc
cld
lcall
xchg
cmc
sbb
lods
nop
push
dec
jns
mov
dec
in
mov
xchg
push
arpl
sbb
shl
mov
xor
sbb
xlat
leave
inc
mov
push
adc
repz
push
mov
dec
adc
test
stos
lods
popa
aaa
push
xchg
int
push
fstps
es
or
lret
mov
fstpl
sbb
fcomps
push
xor
rcrl
push
dec
inc
mov
jnp
sub
jmp
mov
or
mov
test
cmp
cmp
sti
jbe
shll
mov
mov
dec
pusha
pop
mov
loope
or
dec
xor
lea
lds
jmp
dec
jmp
std
call
int
arpl
lds
jecxz
cmpsl
cmp
test
in
std
xchg
lcall
sub
push
adc
jno
inc
xchg
js
jl
mov
sbb
adc
pop
leave
sbb
sbb
mov
inc
test
scas
lods
adc
sbb
mov
xor
popa
cmpsl
ret
lcall
jbe
push
push
jae
pop
mov
lods
dec
fcomi
mov
loope
out
jae
xchg
mov
jne
push
mov
or
stos
scas
aas
xor
xor
push
rclb
bound
or
outsl
out
lods
and
pop
and
lods
js
adc
jns
sub
clc
pop
add
pop
pop
add
mov
rorl
mov
aad
mov
fdecstp
xchg
mov
push
shrb
test
cltd
cs
adc
mov
jno
sub
dec
mov
ja
and
pop
stos
xor
fwait
adc
push
loop
lret
add
cmpsl
or
mov
push
xchg
adc
cmp
cmp
dec
cmp
mov
dec
aam
jo
insl
sub
mov
fstpt
iret
cmpsb
jns
xor
lock
in
jne
mov
and
fbstp
and
and
aad
into
or
sbb
aam
fsubrl
aas
adc
sbb
mov
addr16
pop
out
popa
dec
out
pop
dec
mov
imulb
scas
out
adc
mov
xor
out
aaa
cs
jmp
or
rorb
xor
mov
mov
jecxz
pop
in
enter
es
jg
lds
mov
fcomip
enter
push
mov
clc
adc
cli
or
mov
pop
fisubs
mov
sub
sub
arpl
ret
mov
push
sarb
or
ret
andl
shlb
mov
cld
ss
cltd
inc
xchg
fwait
xchg
dec
cltd
das
mov
xor
jb
mov
mov
dec
jne
cmpsl
ds
pop
test
xor
pushf
cmc
mov
dec
fidivl
cmp
jmp
notl
in
scas
out
std
xchg
rorb
push
or
cmp
lahf
mov
pusha
pop
test
inc
mov
push
jo
mov
jne,pt
lret
dec
pop
mov
adc
rorb
into
enter
mov
insl
inc
or
aad
pop
cmp
movsl
lcall
jbe
xchg
push
int
push
push
sti
dec
popa
sub
ds
lret
push
sbb
insl
addl
jmp
lcall
inc
mov
sub
lret
jnp
mov
jmp
ljmp
dec
andl
dec
ds
leave
mov
cld
les
xlat
loop
pusha
dec
loop
jno
lcall
add
jl
insl
scas
adc
mov
mov
sarb
jae
inc
imulb
in
inc
bound
loopne
dec
add
mov
in
popa
push
fwait
and
and
insb
repz
xor
cmpsb
sbb
shlb
inc
sub
aam
fstpl
inc
test
add
fidivs
sub
or
mov
popa
push
mov
fdivl
mov
sbb
push
xor
dec
bswap
and
loop
ficompl
adc
cmp
cmc
in
adcl
cmp
clc
cmp
inc
inc
jb
ja
adc
rclb
daa
adc
mov
push
xor
dec
mov
popf
jnp
jg
pop
popa
or
sbb
loope
sahf
imul
mov
iret
mov
mov
test
xor
adc
lea
pop
imul
xchg
push
loope
jb
test
jbe
mov
push
adc
leave
mov
aad
inc
test
cli
xchg
pop
push
sub
pusha
sti
add
stc
jo
mov
scas
repnz
jl
cmpsb
test
mov
pop
hlt
movsl
int
mov
dec
scas
jno
addr16
repnz
jb
movsl
mov
jo
push
out
popa
dec
enter
in
xlat
lcall
aad
push
xlat
adc
add
add
add
ja
fbld
in
shr
lret
fnstenv
or
lods
push
gs
jmp
or
inc
lock
push
cmp
lods
adc
insb
mov
push
rep
xor
iret
cmpsl
lret
int3
test
loopne
push
mov
addl
mov
adc
fidivrl
mov
nop
dec
fdivrl
push
pusha
sbb
cmp
gs
call
mov
or
xchg
ja
and
stos
xchg
jmp
xor
dec
or
mov
jecxz
in
xchg
lcall
icebp
movsl
dec
lock
cli
push
pop
xor
or
mov
dec
nop
dec
cmp
add
ficoml
int
sub
aam
mov
loope
mov
mov
push
jmp
pop
jo
adc
es
cmp
sub
ret
mov
sbb
hlt
cmpsb
out
outsb
ret
or
push
int3
mov
rcll
mov
sub
shlb
outsl
lret
pop
insb
jmp
arpl
or
int3
sahf
dec
jg
jle
xchg
add
test
xor
enter
dec
mov
xlat
sub
test
cmp
add
sbb
sarb
lea
ret
xchg
test
dec
pop
cmovbe
mov
dec
das
jns
cltd
cmp
xor
jns
mov
push
in
mov
shl
int3
shll
mov
sub
adc
and
aam
loop
adc
sub
mov
andl
lahf
sub
mov
push
incl
mov
fdivr
nop
or
fwait
xor
dec
inc
sbb
mov
pushf
scas
rorb
and
and
dec
dec
movsl
jbe
add
mov
in
repnz
stos
push
shrl
jmp
push
jmp
popa
mov
out
lds
stc
jns
movsl
es
mov
xchg
mov
andl
mov
mov
adc
jno
push
or
xor
aam
adc
jle
mov
enter
test
repz
jb
clc
jge
sub
pop
add
mov
inc
out
cmp
pushf
add
fninit
mov
test
rcrb
dec
xor
int
outsb
cmp
push
push
push
jmp
or
pop
stc
jl
pop
cmc
fsubr
sub
mov
sbb
clc
sti
fwait
sti
xor
fisttps
push
repz
movsb
pop
cltd
loope
cwtl
adcb
inc
test
fdivrl
pushf
ficoml
xchg
add
pop
or
icebp
jge
shrb
iret
mov
sbb
dec
sti
jle
dec
sub
cli
push
push
mov
sub
dec
fsubs
pusha
ss
mov
rcrb
mov
sub
cmpsl
sbb
les
mov
mov
pminsw
ret
push
mov
pop
adc
ret
and
test
pop
das
inc
cmp
call
test
andb
imul
testl
and
xchg
jne
std
inc
pop
inc
sbb
lcall
cli
inc
cmpsb
push
shlb
jp
fadd
mov
dec
popa
mov
fucomip
xor
mov
repnz
shlb
sbb
add
clc
into
sub
aas
aam
pop
xchg
and
push
popf
daa
fucomi
movsl
test
scas
push
popf
fistpll
adc
loope
and
push
push
adcb
sahf
bound
ss
pop
out
lods
mov
lret
mov
paddusb
mov
inc
es
sbb
inc
outsl
shlb
icebp
daa
dec
push
mov
ss
fmull
pop
inc
inc
fisttpll
int
xor
aad
cmp
daa
cmpsl
xor
mov
out
fs
dec
lcall
or
sub
adc
es
or
faddl
cld
dec
sbb
pop
fdivs
inc
or
or
xlat
adc
mov
jne
inc
clc
fistpl
push
test
add
pop
mov
push
ljmp
jno
mov
pop
mov
aas
adc
add
xor
xor
mulb
pusha
lret
es
nop
out
push
mov
dec
push
outsl
lret
test
or
mov
shll
aaa
sub
lcall
ljmp
shlb
je
repz
or
xchg
dec
jae
xlat
das
gs
outsb
xchg
jp
fisubrs
mov
sbb
dec
inc
ljmp
mov
pushf
addr16
out
test
ja
jnp
test
jle
push
or
mov
enter
call
popa
sti
jne
pushf
push
sbb
sub
jno
lods
shl
and
mov
push
inc
pop
stc
xchg
and
ss
sti
xchg
and
rcrl
icebp
and
scas
jmp
addr16
ror
sub
mov
cmpsb
into
dec
mov
clc
sahf
or
dec
pusha
add
xchg
insb
ret
mov
mov
enter
loopne
iret
sub
add
ss
scas
inc
jne
add
add
and
or
add
xor
adc
jns
sbb
xor
inc
add
bound
mov
in
daa
mov
andb
pop
jl
jo
sbbb
xor
lea
sub
pop
andl
lret
and
sti
cltd
xchg
mov
popa
rcl
xchg
dec
int
mov
xchg
add
ljmp
lcall
es
mov
lret
mov
fs
or
mov
loopne
jnp
jbe
push
sbb
xchg
dec
das
hlt
inc
aam
dec
pop
popf
aad
cltd
rcr
popf
stc
push
nop
sbb
out
testl
dec
jb
out
xchg
add
dec
outsb
add
inc
and
cs
adc
mov
ljmp
mov
fisubrs
or
arpl
jmp
and
mov
aad
seto
add
shll
push
xchg
mov
popa
jbe
aaa
into
fwait
jae
mov
je
and
adc
cli
jae
js
aam
mov
mov
lds
jb
dec
fwait
mov
imul
test
cs
repnz
jne
dec
lock
and
out
in
xchg
xchg
mov
xlat
imul
in
pop
push
mov
add
ds
ja
mov
clc
nop
imul
cmp
mov
xor
aas
mov
mov
stc
mov
adc
lret
adc
mov
in
aas
push
xor
sub
jnp
out
lds
lret
sub
mov
inc
movsb
dec
imul
into
gs
mov
in
daa
outsb
push
inc
loopne
pop
mov
nop
test
pop
push
cmp
lcall
pop
mov
out
adc
es
mov
imul
xchg
pop
rcll
add
in
push
fbstp
sbb
jo
add
aas
adc
iret
dec
cmp
or
shll
jnp
daa
lock
mov
and
or
inc
fucomp
sub
jne
jb
outsb
push
inc
dec
xchg
add
pop
aas
dec
enter
repz
xchg
xor
jmp
cmpsb
clc
mov
sarl
cs
push
ss
cmpsb
imul
sbb
push
fbstp
sub
cmpsl
fstpl
outsb
out
sub
arpl
into
xor
add
mov
inc
fsubl
pop
xor
cmp
pop
cs
or
cmp
fistpll
shl
push
and
and
loope
xchg
test
dec
dec
lods
incb
mov
andb
dec
repnz
inc
out
jg
push
call
sbb
insb
add
mov
test
xchg
inc
leave
add
out
mov
das
add
add
mov
inc
cmpsl
or
mov
mov
mov
call
inc
out
dec
fisubrs
aaa
inc
mov
xor
xor
adc
mov
xor
nop
xchg
lods
icebp
adc
mov
test
xchg
ja
rcll
out
inc
lcall
xchg
jecxz
cmp
out
cmp
xchg
push
mov
popa
fwait
cli
pusha
dec
pop
shll
cli
fwait
jmp
idivl
mov
ret
mov
mov
push
repnz
or
sbb
ds
pop
sub
dec
stc
sbb
and
shlb
mov
or
test
adc
mov
add
xchg
cli
outsb
jl
cmc
push
push
and
nop
xchg
mov
insb
scas
add
cmp
and
bound
stc
xchg
push
in
adc
outsl
add
mov
out
mov
pop
xor
arpl
shrl
fsubr
jo
jnp
cmpsl
adc
arpl
pop
repnz
pop
outsl
daa
lds
fxch
pop
shr
jo
stos
push
xchg
shll
xorb
push
jmp
pop
sbb
int
mov
push
xor
and
xchg
lock
jge
cmp
sti
xchg
add
sbb
out
mov
js
stos
cmp
orl
mov
or
xchg
sub
sbb
xor
dec
push
fistpl
mov
fdivrl
pop
cs
xchg
test
test
bnd
and
or
popa
mov
lea
outsb
cli
inc
adc
mov
filds
mov
stc
mov
scas
bound
lret
jae
stc
aas
and
xchg
int
or
sub
mov
pop
enter
dec
mov
push
cmpsl
loop
cmp
pop
inc
fwait
or
ljmp
xchg
call
adc
xor
sbb
out
ret
push
push
pushf
jmp
lea
arpl
pushf
pop
sub
cmp
sub
jmp
ja
xor
ss
xor
sti
in
mov
sub
xchg
mov
iret
in
inc
jo
adc
sbb
imul
pop
and
clc
fstpt
arpl
xchg
jmp
jb
sub
int3
lret
or
sub
clc
and
iret
aaa
jbe
in
mov
inc
cmc
daa
out
fldenv
push
or
mov
sbb
push
xchg
inc
outsb
push
and
scas
mov
pushf
loopne
into
cmp
shr
inc
dec
stos
stc
fisttpl
mov
xlat
lods
mov
dec
jne
stos
and
inc
sbb
ds
mov
lahf
inc
fildl
lock
xchg
xchg
and
out
sbb
popf
daa
aam
fmul
mov
ret
jb
pop
xor
cmp
lahf
in
sbb
mov
pop
lret
cmp
ror
das
outsb
add
int3
fadd
inc
nop
je
sbb
cmc
add
jb
push
xor
jecxz
add
fs
sub
cmc
dec
pop
imul
stos
mov
pop
std
pusha
shrb
adc
mov
sub
xor
fldcw
ret
mov
aam
xchg
sbb
lds
divb
mov
testb
cmpsb
push
out
imul
push
adc
fwait
xchg
stc
add
push
lods
rcr
inc
invd
xor
loop
in
cmpsb
inc
test
and
subb
xchg
jne
inc
leave
mov
rolb
pushl
mov
sbb
bound
or
rcrb
lcall
lahf
out
sub
pop
jle
jle
cli
xchg
push
sub
aam
outsb
add
jns
jb
dec
popa
int3
sbb
jle
out
std
cwtl
pop
cmpsb
jp
xchg
aas
jbe
mov
jl
mov
in
cmp
jbe
cwtl
test
lods
xchg
xor
enter
pop
loope
cmp
xchg
les
iret
bound
jge
and
and
movsl
lahf
push
jno
push
addl
or
jmp
and
lret
test
cmp
cmp
mov
mov
mov
lcall
or
mov
lods
ret
xor
dec
cmp
rcll
outsb
mov
jbe
jl
xchg
inc
shlb
add
push
and
outsb
dec
or
loop
out
cli
mov
mov
rcrl
jb
cmpsl
movsl
inc
adc
push
out
xorl
cmp
lods
enter
pop
mov
andb
lcall
ret
adc
ss
jl
xchg
mov
pop
in
add
jg
std
jl
sbb
fcomps
aam
push
and
popf
fmuls
jne
shrb
imul
icebp
and
or
ret
imul
adc
xchg
dec
rorl
push
rorb
pop
test
shrl
les
dec
pop
xchg
mov
sbb
iret
jo
pusha
loop
dec
shrl
dec
pop
cmc
insb
test
cmp
mov
xlat
inc
std
xchg
inc
fcmovne
test
enter
pop
mov
into
rclb
ja
sbbl
pop
mov
and
mov
mov
dec
loopne
add
xchg
cmp
ret
adc
lret
adc
mov
mov
adc
sbb
pop
xor
arpl
pop
xor
mov
icebp
imul
cmp
or
out
xor
dec
int3
pop
cmp
xor
push
je
xchg
sbb
enter
lcall
mov
jb
add
jb
aam
cmc
push
mov
pop
inc
stos
cmp
insb
or
push
or
stos
cmc
into
dec
pop
dec
lahf
faddl
rcrl
rcr
dec
cld
pop
jo
cmp
fsubs
test
in
jae
dec
cmp
ret
cmpl
xchg
pop
rcrl
call
test
sub
call
xor
cmp
jb
cmp
mov
fsubr
jle
mov
sarb
popa
cmp
jg
sbb
clc
dec
js
lcall
pusha
gs
pop
xchg
ja
dec
mov
cs
push
mov
adc
pop
nop
mov
test
outsl
sbb
push
pop
imul
dec
hlt
mov
daa
rcrb
pusha
imull
dec
jle
jge
jle
push
push
fldenv
mov
push
addr16
pop
in
aad
pop
push
icebp
jge
frstor
mov
pusha
insl
movb
pop
daa
mov
xchg
cs
ret
add
cmp
pop
and
pop
push
xlat
push
add
fwait
mov
mov
pop
mov
push
movsl
lds
jmp
pop
mov
xor
and
mov
arpl
imul
mov
or
fs
int
xchg
jns
push
out
jmp
pop
loope
test
insb
subl
xchg
sbb
clc
dec
mov
lea
lcall
jge
inc
mov
xchg
iret
loopne
cwtl
cmc
fcompl
and
push
jp
scas
mov
xor
mov
mov
cmpl
mov
aas
inc
shrb
jp
mov
mov
adcb
rcrl
mov
in
hlt
js
jae
xchg
gs
sub
or
xor
and
std
fldcw
pusha
jecxz
xchg
fnstsw
enter
jp
mov
pop
leave
jno
add
mov
add
aad
scas
andl
or
jns,pn
and
xchg
pop
subb
push
movsl
rcrb
inc
and
adc
in
jbe
aas
pop
stos
jecxz
std
xchg
loope
adc
repz
das
sbb
mov
repnz
std
adc
aas
jnp
inc
lods
mov
or
les
or
sbb
aam
fldl
cmp
sbb
js
js
fcompl
mov
movsl
out
lods
cmpsb
movb
pop
pop
sub
call
in
add
outsl
es
fidivs
lock
data16
lods
pop
mov
pop
test
xor
test
in
test
sbb
stc
je
frstor
lcall
cmc
xor
dec
or
cmp
xor
pop
lock
cmp
cmc
and
push
xor
dec
jnp
aas
push
mov
dec
or
adc
lods
pop
cmp
dec
scas
pushf
xor
pop
mov
or
in
mov
dec
les
mov
in
pop
or
cmp
xchg
sub
add
adc
xor
lds
mov
jmp
jne
cmpb
pop
and
mov
stos
push
ds
mov
jns
imul
adc
addr16
js
shrb
cmp
jb
pop
stos
clc
fsubrl
mov
pop
push
sub
andb
push
lods
add
push
or
out
cmp
push
xchg
cmpsl
sti
fcoms
rcrb
xchg
or
lcall
jecxz
lea
out
stos
push
sbb
pushf
jg
insl
lds
enter
xor
dec
or
call
xor
pop
dec
shl
jle
dec
arpl
inc
in
rcrl
addr16
jp
adc
sahf
xchg
or
pop
daa
mov
sahf
aam
mov
mov
fwait
jp
add
mov
jecxz
jae
mov
rolb
sbb
push
mov
fcom
out
lret
push
mov
jno
dec
dec
xchg
sub
push
loope
add
inc
aas
cld
push
scas
pop
xchg
add
pop
cmp
fisubs
xchg
call
jae
fsubl
lret
ss
or
ficompl
inc
je
and
sub
test
fdivl
test
sar
ja
adc
xchg
xlat
push
mov
mov
xchg
pop
xchg
jge
pop
cmpsl
jno
xor
dec
fnstenv
fsubs
iret
adc
pop
ret
arpl
dec
into
pop
adcb
jmp
call
ljmp
sar
mov
push
push
add
lods
mov
mov
faddl
cmpsb
outsb
cmpsl
mov
in
cmp
fcmovbe
and
dec
mov
mov
and
sbb
aam
sbb
push
hlt
into
dec
leave
popa
add
xchg
sahf
cmp
pop
mov
insl
inc
aas
rorl
xchg
subl
mov
std
popf
in
push
sarl
out
lods
mov
xlat
dec
mov
outsb
jg
mov
push
aam
fbld
std
jae
lcall
sbb
out
dec
and
xor
xorl
adc
js
insb
cmp
lcall
arpl
nop
add
roll
inc
pop
pop
jmp
or
sahf
jne
or
mov
mov
out
xchg
fcoms
stos
pop
daa
div
arpl
xor
les
rorb
les
adc
inc
popa
aam
mov
and
push
mov
outsl
aam
test
mov
aam
jbe
repz
mov
into
and
bound
and
mov
popf
fildl
lret
cmpsb
rcrb
testl
jmp
cwtl
std
xchg
or
mov
ds
popa
rol
int
jns
sub
inc
adc
mov
inc
imul
dec
aas
mov
sarb
popl
pop
ret
push
loopne
and
push
shrl
mov
flds
fwait
test
xchg
aas
test
jbe
aaa
mov
lds
ret
jae
dec
lods
outsl
mov
call
sub
xlat
sbb
push
xchg
adc
stos
rol
test
lcall
cli
jg
and
inc
icebp
mov
repz
arpl
inc
dec
dec
pop
push
push
dec
fistpll
int3
cmp
fiadds
adc
xchg
inc
fiadds
popf
fcmovu
or
jne
adc
ret
cmp
insl
adc
push
inc
outsb
sbb
filds
push
mov
mov
push
sbb
ss
xor
hlt
mov
push
ds
inc
fnstenv
leave
or
lret
lock
inc
outsl
jmp
adc
fstpt
out
push
fucomi
data16
sub
or
sub
add
cltd
and
fnstenv
imul
push
stos
in
xchg
xor
inc
bnd
or
cmp
inc
test
vpcmov
xchg
push
movsl
jno
rorl
pop
and
data16
fisubrl
ss
xor
inc
rolw
push
rcrl
or
cld
loopne
test
push
adcb
and
and
out
loop
enter
les
outsl
mov
insb
sub
popa
xchg
fs
loop
add
mov
loopne
and
mov
xchg
dec
insb
dec
dec
pop
call
dec
dec
mov
lret
adc
rol
mov
std
cmp
add
in
iret
sub
outsb
add
hlt
or
fidivrl
sub
rorl
lcall
sub
inc
xlat
add
in
lea
and
push
xor
add
loopne
pop
push
fwait
nop
pop
inc
in
push
cmpsb
jmp
and
or
out
xchg
sub
dec
sahf
push
inc
inc
mov
add
add
sarb
cmp
add
add
out
jg
scas
pop
cmp
xchg
scas
dec
xchg
in
out
lods
es
call
sub
jns
or
jp
push
enter
es
xchg
stos
xchg
sub
mov
cltd
mov
mov
test
push
popa
aaa
mov
lods
or
mov
test
mov
pushf
daa
xor
adc
cmp
inc
cs
jbe
cmp
call
add
or
ja
leave
cwtl
xor
inc
or
mov
mov
stos
fidivs
jne
sti
add
mov
push
mov
sub
inc
xchg
inc
push
jecxz
fidivs
ss
test
adc
ljmp
fidivrs
int
pop
push
icebp
push
cmpb
test
out
addr16
jge
in
das
dec
dec
jmp
mov
mov
mov
lock
jno
frstor
xchg
push
jp
aas
jne
sub
jb
jbe
dec
dec
push
xchg
mov
sbb
repz
adc
pop
pop
xor
cltd
mov
pop
fstp
xchg
ret
mov
orb
adc
jl
nop
jl
sbb
nop
loop
in
fwait
sbb
ror
jne
testb
inc
pop
xor
ret
outsl
or
jl
sub
fstl
pop
enter
sub
je
inc
not
and
push
stc
cmp
movsl
mov
cltd
jmp
dec
loopne
sarl
enter
clc
pop
xlat
rclb
jnp
ljmp
jno
mov
sbb
mov
adc
sub
add
mov
dec
dec
call
xchg
ja
and
sbb
xor
jl
push
pop
pop
rcll
mov
sub
sub
or
cmp
cmp
xchg
pop
sub
fwait
movb
push
sbb
fldl
push
fdiv
aaa
popa
xchg
stos
lcall
mov
pop
mov
loopne
out
sub
mov
jle
mov
sarl
test
js
jg
hlt
mov
pusha
inc
and
pushf
scas
mov
arpl
ja
outsb
out
push
sub
pop
and
push
popa
and
xor
mov
icebp
sub
pop
adc
popl
mov
sbb
rcrl
pop
popf
test
lret
dec
mov
xchg
aaa
jnp
ja
pop
pop
call
cmpsb
jecxz
out
or
iret
in
imul
sbb
out
fcomps
xchg
add
lock
int3
mov
out
pusha
movsb
and
cmp
xor
pushl
bnd
dec
lahf
jle
outsb
or
stos
es
xor
cwtl
mov
xchg
push
jmp
out
std
sub
mov
sbb
jno
stos
sub
xchg
or
push
jle
push
fildll
je
orb
and
dec
mov
pop
dec
mov
sub
or
out
or
adc
fisubs
inc
popl
lcall
xor
cwtl
or
sub
pop
ja
pop
add
sub
mov
xor
push
std
jo
sub
lods
cmp
jb
fmull
mov
mov
cltd
cli
pushf
or
cmp
and
adc
pusha
aas
xchg
cmp
push
cmp
pop
insl
lret
repnz
fcoml
addl
cltd
std
cltd
pushl
aad
fwait
rcl
xchg
add
mov
dec
mov
push
out
pop
in
cmp
aas
add
dec
pop
fcmovne
popf
dec
dec
xchg
pusha
push
movsl
jne
push
repnz
lock
lods
arpl
jns
pop
lods
enter
pop
stc
adc
sub
push
mov
testb
test
out
mov
push
xchg
add
jb
jge
pop
mov
cld
xchg
in
out
inc
or
adc
pop
pop
cmp
out
dec
js
stos
scas
scas
out
lret
or
push
cmp
jno
xchg
popa
cli
adc
aad
push
in
add
in
fs
xchg
lea
cmp
and
inc
or
ja
xor
pop
mov
jae
jge
pushf
mov
xor
mov
hlt
ss
cmp
push
inc
sbb
test
dec
or
cmp
repz
push
mov
cmp
and
push
inc
push
loope
loopne
movsl
cmp
push
xor
mov
add
xorb
aad
notb
mov
ljmp
in
sarb
adc
dec
jecxz
and
dec
add
lods
andl
dec
roll
or
pop
jns
int
dec
pop
stos
insb
scas
cmpsl
ja,pn
pop
out
jno
lret
pop
aaa
inc
jne
out
mov
xor
cmp
dec
and
push
jo
cmpl
adc
jae
aaa
cmc
jle
test
out
push
push
test
into
mov
int3
push
or
sbb
insl
jb
mov
out
out
lret
xor
mov
scas
sahf
outsl
push
mov
push
out
inc
loopne
imul
aam
and
adc
andb
adc
dec
call
aaa
adc
enter
lock
sub
sarb
int
add
mov
mov
push
cmpsl
inc
fdivp
mov
xor
movsl
sub
push
mov
insl
mov
xor
add
mov
aas
sub
imul
das
ficoml
mov
sbbl
sbb
jb
pop
popf
pop
cwtl
or
push
lds
lcall
cltd
gs
cmpl
dec
adc
mov
push
clc
shl
xor
leave
inc
mov
mov
ss
ficoml
push
lods
mov
adc
negb
cs
in
test
xor
outsb
cmp
pushf
ss
stc
dec
or
sbb
mov
sub
xor
cmpsl
mov
cmpsb
push
xchg
sub
repz
lods
xchg
mov
dec
and
mov
pop
in
cmpb
negb
mov
repnz
sub
sahf
or
cli
and
cmp
sahf
pop
jo
mov
or
pop
cmp
push
fldcw
mov
test
daa
mov
lret
jmp
fsubrs
sbb
push
insl
xor
mov
cs
mov
sbb
xchg
dec
pop
or
add
dec
pop
xor
sbbb
scas
inc
push
push
xchg
lods
cld
fcompl
out
pusha
push
mov
pop
scas
xor
adc
push
push
or
shrl
cmp
mov
call
pusha
daa
ficoml
push
test
cwtl
mov
cmpsb
scas
cmp
in
fimull
mov
scas
mov
icebp
mov
pop
stos
adc
or
mov
mov
jmp
jmp
inc
add
out
cli
imul
pop
sbb
pop
jbe
jge
out
or
aad
cmp
std
loop
sub
jmp
aas
xchg
adc
ret
mov
xchg
ss
pavgw
push
ljmp
insl
push
cmp
sbb
insb
ret
mov
push
jg
mov
lds
push
es
mov
inc
pop
cmp
test
lret
push
push
jg
loope
mov
add
dec
rol
lahf
mov
mov
dec
xor
js
push
inc
comiss
rcll
pop
sub
mov
imul
jb
js
scas
rorl
movsl
mull
inc
push
vshufps
xor
mov
push
xchg
mov
mov
adc
imul
shrl
aad
hlt
testb
adc
mov
rorl
pop
and
insb
inc
push
in
into
ja
mov
out
jae
xchg
movsb
aad
fcompl
push
or
inc
popf
sub
cmp
cmp
ret
ret
pop
and
inc
loope
lret
push
dec
jmp
test
push
jecxz
aad
divb
lock
in
std
sub
and
call
mov
cmp
mov
dec
pop
icebp
enter
mov
or
pop
int
pop
inc
pop
pop
imul
or
rcrl
stos
sbb
fidivl
jno
cwtl
and
xchg
es
fs
in
xchg
repz
add
adcl
lret
rcrl
push
xor
insl
cmc
setg
addb
fwait
or
popa
out
and
ret
pop
xor
and
and
scas
mov
scas
mov
xor
int3
and
scas
ljmp
or
mov
sub
push
cmp
mov
mov
cld
lcall
cmc
push
adcl
std
test
repz
roll
pusha
jno
sbb
mov
lcall
cmpsl
out
xchg
dec
arpl
dec
pop
sub
xor
adc
jle
sub
popa
mulb
jmp
insb
jp
pop
lods
dec
aam
cmp
fadd
pop
or
cltd
outsl
pop
jne
jp
dec
lods
mov
adc
jnp
repnz
and
push
jecxz
jno
cli
mov
sub
in
fwait
enter
mov
mov
fisubl
add
gs
lods
ljmp
and
out
aaa
cli
in
sbb
add
adc
fdivrs
enter
jmp
inc
sbb
mov
insb
or
mov
xchg
add
cmpb
fs
inc
movsb
cmp
mov
test
jnp
mov
mov
mov
cmp
xor
adcl
insb
iret
js
cmpb
lcall
in
add
scas
sbb
sub
aaa
mov
cmp
inc
fcompl
mov
push
outsb
in
clc
xor
cmpsl
mov
pop
adc
fadd
sub
push
pop
loop
mov
repnz
pop
jno
fwait
imul
fidivs
add
mov
ljmp
jo
pop
in
xchg
pop
sbb
jne
loopne
push
aam
push
pop
add
sbb
cmp
adc
xor
adc
fwait
xor
clc
push
jmp
push
dec
loope
or
push
sbb
push
arpl
es
push
cmp
lods
divl
jbe
ljmp
xchg
cmp
cmpsb
inc
jbe
fadd
pop
inc
int3
sbb
dec
test
and
test
aam
mov
cli
mov
scas
test
push
in
popf
cmp
xchg
dec
or
loop
int3
std
sub
mov
fisttpl
mov
mov
sbb
xor
sbbb
loopne
test
scas
xorl
testb
dec
jnp
jge
cli
pushf
shrb
xor
fdivp
fcomi
sbb
addb
test
test
jno
cmp
xchg
mov
xor
pushf
sub
mov
out
adc
lcall
inc
cwtl
jp
jo
out
fnstcw
mov
or
data16
enter
jae
push
dec
push
clc
je
mov
ficoms
out
mov
ja
shll
mov
out
mov
lds
or
jns
xlat
das
addr16
add
lods
or
and
jae
shrb
push
mov
cld
dec
inc
mov
insl
iret
xchg
aad
dec
pop
xchg
and
sarb
dec
dec
loop
jecxz
faddp
stc
in
pop
fidivl
popf
cld
push
mov
adc
mov
stc
xchg
sub
pusha
movsl
xchg
sbb
dec
mov
out
xchg
fwait
sti
mov
xchg
outsl
movsb
fisttps
int
lcall
inc
jb
and
mov
aaa
xor
push
in
inc
mov
lret
addl
stc
adc
mov
std
xor
push
add
push
xor
mov
hlt
movl
mov
addr16
xor
cltd
lock
enter
push
jo
stc
daa
push
outsl
fs
jmp
cmc
sahf
push
addr16
inc
jo
test
loop
data16
aas
push
sub
cwtl
inc
push
lret
push
mov
pop
pop
lock
jecxz
push
lds
mov
ljmp
xlat
mov
jb
fs
loopne
xchg
out
and
push
test
sbb
sbb
gs
out
fcoms
out
insl
add
sub
jl
xchg
xor
inc
cmp
xchg
call
lods
mov
outsb
shlb
andb
outsl
push
mov
push
nop
rorl
testb
pop
adc
sbb
sbb
mov
loopne
loope
sub
inc
cld
and
gs
xchg
lea
mov
sub
loop
push
nop
adc
dec
sub
stos
fcomi
push
test
pop
push
xor
test
add
dec
loopne
adcb
sub
pop
inc
inc
pop
sub
test
icebp
adc
ss
push
adc
lea
jne
cmp
adc
lret
dec
pop
mov
bound
fidivrl
stc
mov
sti
sub
sbbl
xchg
idivl
shrl
rcrb
cmp
sbb
aas
ja
outsl
push
dec
fsubs
adcb
adc
popf
int
mov
and
loop
arpl
add
fildll
les
testl
xchg
xor
push
lahf
out
bound
lret
sti
mov
inc
fistps
jb
les
shlb
and
stc
inc
xchg
rorb
lea
insb
mov
cmp
mov
ss
shlb
mov
ljmp
push
in
mov
pop
mov
xchg
pop
adc
xchg
mov
mov
pop
xchg
cs
call
cmp
xor
xor
sub
xlat
or
pusha
int3
into
fsub
ss
pop
jecxz
call
push
lret
ja
sar
mov
xchg
jae
xchg
out
jnp
jmp
pushf
jl,pt
dec
rorb
jp
imul
mov
sub
cmc
lock
insb
sbb
jle
pop
scas
stc
pop
aas
shlb
sbb
fsubrs
pop
iret
rolb
in
outsl
jb
enter
push
mov
or
sub
and
sahf
adc
xor
mov
and
sub
cltd
jg
mov
pop
mov
rep
int3
adc
dec
das
mov
xor
call
xchg
scas
sbb
or
xlat
insb
sti
lret
or
mov
ds
mov
push
cmp
pop
cmc
aad
sbb
icebp
sbb
std
adc
mov
mov
inc
push
push
fidivrs
add
push
xchg
adc
adc
push
fistpll
cmpsb
push
dec
nop
leave
add
sbb
or
lahf
mov
hlt
add
mov
loopne
dec
push
fbstp
push
imul
cld
data16
xchg
insl
clc
lods
jo
or
cltd
jge
mov
ror
sbb
jbe
sbb
cwtl
push
pop
scas
or
inc
lods
mov
lods
flds
xchg
mov
fisttpll
push
fs
daa
sbb
test
mov
sbb
pushf
pop
xchg
sub
ret
sbbl
fs
in
sti
ja
fidivrl
daa
jmp
mov
imul
arpl
push
out
pop
rolb
out
fidivs
push
lods
inc
rcrl
xor
push
popa
adc
jmp
daa
cs
pop
aaa
mov
or
jo
xchg
icebp
jl
sbb
add
mov
ret
and
nop
pop
testb
mov
mov
jns
and
mov
mov
loope
mov
lods
inc
mov
mov
sahf
mov
adc
clc
cmp
fdivrs
dec
icebp
out
popa
out
inc
loop
popl
and
lret
cld
dec
fisubs
push
into
enter
sti
pop
or
rcrb
and
adcl
fs
repnz
push
jns
movsb
sub
pop
fcmovb
inc
lret
jg
mov
fbstp
jp
push
pop
fistpll
and
mov
jno
fisubrl
shlb
not
adc
test
out
jne
loopne
addr16
jns
outsl
add
fadd
jecxz
cmp
daa
or
xchg
divl
mov
mov
mov
jg
rolb
out
dec
sbb
movsl
dec
jl
mov
or
arpl
push
icebp
cmp
div
lret
sarb
mov
pop
sbb
dec
jno
pop
lret
cmp
mov
mov
pop
cmpsl
iret
mov
cmpsl
xor
lods
divb
mov
adc
and
push
mov
pop
shlb
inc
and
frstor
sahf
ljmpw
and
push
fidivl
call
sbb
xchg
cmpsb
aas
mov
mov
add
rcr
adc
imul
push
lcall
mov
leave
adc
jbe
mov
lea
orb
cmpsl
movsb
mov
push
add
push
sub
movsb
cmpsl
and
repz
mov
sbb
xor
xorb
fmull
fldl2t
cmp
lahf
mov
fidivl
push
daa
lret
lret
movsl
mov
sub
popf
mov
cmp
pop
cmp
sub
mov
xor
xchg
ja
lea
sbb
andl
push
orl
xchg
jmp
add
fidivl
fnstsw
adc
sbb
dec
test
inc
push
inc
push
lock
mov
jnp
lahf
cmpsb
xor
aam
jns
in
pop
in
in
fidivl
push
push
ljmp
pusha
ret
mov
out
xchg
fisubrs
add
sbb
or
xchg
clc
pop
jbe
xchg
rcll
ljmp
test
xchg
inc
fiadds
lcall
out
fmulp
cmp
lret
cmp
popa
mov
jmp
outsl
les
loope
mov
dec
pop
add
ss
popa
add
mov
decb
ss
pop
mov
mov
cmp
adc
pmaxsw
mov
sub
out
and
imul
cmp
sbb
and
je
in
fdivrs
out
add
inc
cmp
in
pop
pushf
leave
lahf
mov
daa
xor
dec
jl
rclb
aaa
shrb
pop
loopne
push
sbb
fs
xchg
jmp
cmp
jae
cmpsl
and
and
cmc
inc
pusha
cs
xor
stos
ss
aaa
and
xor
mov
cmp
test
jno
mov
xchg
scas
mov
test
int
pop
add
adc
out
scas
inc
ret
mov
lcall
loop
insb
inc
repz
push
dec
sbb
lret
dec
outsb
cwtl
push
sahf
pop
xchg
lods
add
jg
mov
push
fdivrl
push
add
scas
les
sbb
test
sub
call
and
mov
pop
dec
inc
arpl
dec
push
adc
mov
mov
cld
push
movsb
xlat
cmp
rorl
nop
movsl
in
pusha
mov
lcall
shlb
das
in
xor
popf
push
xor
in
pop
mov
mov
pop
ret
shrb
gs
dec
pop
pop
stos
add
shrb
add
fs
jle
call
into
xor
ja
mov
pop
enter
in
fidivl
fmull
or
lods
jp
sub
repnz
je
ljmp
scas
inc
or
decb
das
cltd
test
ss
dec
call
fnstsw
cmp
lahf
arpl
mov
fwait
xchg
out
inc
es
inc
pushf
sbb
in
pop
insb
pop
and
cmp
cmc
movsb
outsb
jg
jo
aaa
push
push
test
fwait
pop
jle
mov
inc
aad
cmpsl
out
lret
or
and
mov
out
aad
mov
movsb
in
mov
imull
inc
cltd
outsb
add
jns
and
stos
mov
outsl
out
into
xchg
jg
maskmovq
notl
push
mov
mov
fcomps
sub
and
jnp
leave
stos
push
or
mov
call
xchg
pop
adcl
les
loope
sbb
sahf
ret
adc
mov
lea
xchg
xchg
xchg
xchg
pop
cltd
sahf
out
mov
scas
xor
or
mov
xchg
ss
dec
adc
pop
inc
and
pop
mov
mov
rorl
push
xchg
imul
mov
inc
ds
jae
cmp
inc
push
cmp
xor
loope
or
mov
push
jp
xor
adc
popl
lock
aam
cltd
ret
repz
mov
test
or
das
cwtl
lahf
jne
nop
ds
das
les
scas
cmc
push
loopne
mov
scas
mov
or
aad
mov
bound
mov
out
pop
int3
sbb
scas
inc
out
sbb
mov
xchg
test
lret
addr16
push
popf
in
xor
rorl
sahf
fs
lret
notl
xchg
mov
cmc
stos
in
push
aad
adc
pop
sti
jo
sub
jbe
xorb
jge
cld
adc
cs
testb
movb
dec
loopne
pop
push
xorb
push
lods
dec
add
aas
jne
and
sarb
out
stos
xchg
das
orl
lret
loopne
imul
mov
and
dec
lds
icebp
cmp
add
and
lds
xchg
fldt
jne
jae
jmp
xchg
lret
sahf
inc
in
fnstenv
arpl
mov
fdivp
enter
scas
cmp
push
daa
and
cmpsl
cmp
out
xor
test
jmp
std
sbb
leave
xlat
xchg
mov
imul
jp
push
imul
push
cltd
fwait
int3
sbb
sbb
xchg
cs
and
ret
shlb
sbb
xor
mov
into
aam
rolb
xchg
test
pop
mov
in
cwtl
cld
or
mov
notl
pushf
out
ret
enter
lea
xchg
jmp
insl
int
cs
pop
fdivr
cmp
jl
test
xchg
cld
or
shll
push
inc
rorl
cwtl
clc
xor
or
jne
lods
ja
xchg
inc
addr16
fiaddl
mov
loop
mov
jmp
mov
ss
push
adc
sbb
lcall
sbb
scas
fadd
push
in
push
adc
int
imul
pop
push
lret
push
lods
jg
inc
out
inc
stos
in
mov
pop
lcall
negb
push
inc
cmpsb
adc
pusha
and
popa
std
cltd
dec
pop
cwtl
and
pop
data16
maskmovq
idivl
add
ret
jge
pop
test
clc
xor
adc
xor
fimull
loopne
push
push
repnz
push
jge
pop
cmpsb
add
les
xchg
insb
int
mov
dec
xor
dec
icebp
mov
movb
into
push
rcrb
mov
leave
mov
hlt
pop
test
xchg
pop
jl
push
fwait
movb
clc
cld
mov
adc
aaa
leave
sub
sub
sub
icebp
jae
cli
mov
ja
pop
add
mov
jmp
bound
sub
outsb
add
xor
adc
shll
jge
lret
sub
ljmp
gs
iret
shrl
jl
imul
cmpsl
mov
daa
sbbl
stos
test
testl
sbb
xor
pop
push
sub
push
out
push
push
or
adc
or
sbb
xlat
jno
lods
mov
jmp
push
stos
mov
into
shrl
fisttps
call
push
xchg
cmp
push
cli
notl
loop
push
xchg
lds
out
jg
fiaddl
sbb
dec
inc
in
xchg
and
pop
mov
movsb
lea
mov
adc
inc
or
dec
jmp
in
ficoms
nop
test
mov
jg
push
fidivl
mov
pop
in
push
aam
xor
incb
cmpsb
mov
or
jnp
stc
mov
dec
mov
jg
mov
sbbl
je
mov
push
push
lcall
imul
ror
pop
pop
jg
xchg
imul
sbb
jno
in
or
cwtl
mov
jnp
addr16
mov
gs
xchg
js
xor
xor
inc
push
dec
lods
mov
mov
into
push
in
xor
in
push
inc
or
cli
jb
mov
add
add
adc
cmp
mov
shll
outsb
popf
xor
push
fnstcw
pushf
lea
sbb
xchg
jp
push
adc
das
cmp
pop
pop
insl
mov
cmpsb
test
andb
movsb
dec
addr16
pop
sub
not
and
nopl
nop
push
and
ss
jmp
mov
aam
mov
push
outsl
test
rclb
rcrb
lret
cli
cmp
test
mov
fs
xor
scas
jp
and
in
inc
pushf
lcall
outsl
lahf
push
mov
sbb
jmp
cli
gs
scas
aaa
movsb
sub
jl
pop
mov
notl
dec
jle
pop
jecxz
dec
fdivs
xchg
add
sub
mov
cmp
lret
cmp
inc
fsubl
arpl
popa
out
cmp
rcrb
test
aam
cwtl
out
gs
jg
mov
imul
stc
dec
adc
leave
ret
mov
movsb
inc
js
push
jl
lcall
rorb
clc
adc
and
lret
decl
gs
mov
xchg
adc
imull
adc
lahf
sub
adc
sbbl
push
scas
fldl
jmp
les
inc
fmulp
push
push
xor
or
pushf
divl
add
mov
sub
addr16
cmc
aam
scas
mov
fistps
test
rcrl
fisttpl
fwait
into
add
jae
lahf
sbb
shrl
nop
add
popa
imul
mov
shlb
cmp
and
pop
cmp
cltd
das
mov
popf
rorl
lcall
jno
out
test
mov
ret
push
or
or
cmp
lods
movsl
push
sahf
add
out
adcb
imul
out
xchg
push
movl
push
xchg
cmc
imulb
mov
mov
push
add
test
add
push
xor
xchg
push
jmp
mov
lods
mov
lea
pop
or
fisubrl
ret
insl
shrl
hlt
nop
enter
cmp
in
push
push
jae
cmp
pop
push
mov
arpl
mov
cmc
gs
xchg
add
mov
shrb
xchg
je
les
push
mov
jnp
jg
cli
daa
push
les
lea
jnp
mov
mov
mov
mov
mov
cmp
mov
push
leave
sbb
add
ror
shrb
cmpsl
xor
in
dec
fdivs
mov
data16
idivl
lods
add
jecxz
and
and
jbe
lcall
xor
scas
adc
or
das
ds
or
sbb
loope
pop
roll
cmp
add
mov
fs
xchg
shl
mov
add
gs
pop
int3
jb
test
mov
add
push
test
add
es
test
or
sub
pusha
into
dec
lcall
shlb
push
xchg
add
xor
and
pop
adc
push
jbe
sbb
pop
and
fwait
scas
jne
cmp
sub
stos
test
movsl
mov
fisubrs
pusha
adc
pop
cmp
push
out
fsubp
dec
loope
aas
repnz
movsl
icebp
xchg
pusha
push
fdivl
in
sbbl
xchg
bound
cmpsb
lahf
test
fstpl
xchg
adc
scas
adc
fs
arpl
mov
xor
sbbl
lods
popa
jns
shll
aaa
jns
jmp
cs
pop
cmp
xlat
jbe
mov
data16
int3
xchg
jecxz
adc
add
inc
mov
mov
mov
mov
xor
rcr
cmp
xor
in
and
mov
scas
adc
jle
mov
push
mov
mov
lret
xor
push
mov
inc
out
push
jbe
ja
inc
sar
jle
xchg
ss
mov
imul
add
ja
add
ss
jnp
jo
jle
gs
lds
and
xorl
clc
push
call
dec
repnz
into
leave
int3
dec
xchg
xor
push
loope
fnstenv
sbb
sub
sti
xchg
cmpsb
out
jp
and
into
cltd
inc
dec
push
sbb
and
adc
mov
jp
pop
adc
pop
stos
push
mov
xor
insl
sarl
mov
stos
stos
jne
dec
sbb
notl
ret
fwait
jge
push
mov
jbe
sbb
mov
cmp
push
std
push
mov
and
cmpsb
dec
inc
push
jmp
pop
mov
cli
ds
dec
and
lods
inc
push
xchg
dec
cmp
jns
push
mov
movsl
cmp
add
movsl
adc
jp
aam
int
mov
push
mov
pop
push
jge
testl
lods
xor
nop
das
mov
sub
sbb
mov
int
cmp
cmpsb
js
push
notb
xor
clc
iret
lcall
sbb
mov
call
roll
std
mov
jo
adc
mov
call
cmp
shr
es
cld
gs
sti
cs
inc
xchg
sub
subl
pusha
or
inc
pusha
jbe
mov
jbe
mov
pop
repz
pushf
xchg
push
and
test
das
adc
mov
bound
cmp
fs
int
dec
mov
xor
push
sbb
adc
lock
sahf
add
or
js
pop
lds
clc
iret
mov
sbb
mov
adcb
cmp
push
in
sbb
cltd
xor
fdivrl
loop
jecxz
xchg
and
xchg
dec
and
cli
adc
lock
or
or
push
add
cmpsb
jns
jp
adc
in
test
pop
mov
clc
jns
or
outsl
xchg
push
xchg
call
repz
adc
xchg
das
insl
jp
lahf
push
push
les
cmp
popa
lods
fwait
in
mov
fisttpl
shrl
xor
or
out
aam
fsubr
mov
xchg
fdivl
add
and
dec
sti
bound
sub
dec
fwait
push
cmp
movsb
sti
sub
pusha
cli
dec
jp
sahf
cmpsl
jb
pop
insl
mov
pop
adc
mov
jg
pop
cmpl
repz
out
mov
leave
lret
out
jg
xor
dec
sbb
ror
push
inc
sahf
mov
inc
clc
pusha
sbb
das
cmp
xchg
or
jnp
ja
mov
mov
mov
mov
fcomi
sub
jecxz
dec
scas
xor
add
std
data16
scas
push
dec
fidivl
mov
clc
adc
cmpsb
pop
sub
or
mov
lods
jne
pop
xor
or
xchg
pop
movsb
leave
rcll
es
xchg
cld
cli
ss
sub
or
cmp
adc
pop
ds
test
sahf
add
in
es
dec
cmp
repz
mov
xor
mov
scas
or
pop
out
ret
scas
cmpb
sub
sarb
in
popf
addr16
cmc
push
mov
inc
and
xchg
int3
out
negb
mov
int
das
push
cmpsb
sub
mov
aam
aam
push
jno
repnz
push
int3
in
inc
adc
std
sbb
daa
fsubrs
mov
mov
mov
leave
mov
rorb
jno
jp
push
or
gs
sbb
fldenv
and
mov
ret
fdivrs
pop
bnd
pop
sub
cmp
or
es
xchg
xchg
out
mov
jge
cbtw
stos
mov
imul
dec
cli
xchg
cmp
out
je
aam
mov
push
adc
push
sbb
lret
dec
xor
xchg
lcall
nop
sub
incl
lock
cld
mov
into
push
cmp
loop
hlt
fmuls
cltd
pop
outsb
das
pop
jp
ret
es
lcall
repnz
add
into
fsubrs
push
cmpsb
jno
cmpsb
cmp
leave
les
mov
adc
mov
ret
adc
je
inc
mov
in
xchg
or
int3
mov
mov
fcmovnu
pop
insb
add
mov
addr16
cmpsl
mov
cli
pushf
xchg
xor
inc
cmp
aas
pop
mov
scas
adc
fsubr
cmp
jb
cmpsb
mov
rcrl
adc
sub
ret
bound
cmp
movsb
dec
pop
out
dec
lds
cmpsb
loop
and
push
mov
adc
fsubl
dec
push
pop
xchg
jns
aaa
int
gs
test
insl
stc
pushf
dec
stc
iret
lock
stos
loop
push
sbb
pop
data16
out
jle
xchg
std
xchg
add
dec
dec
and
sbb
dec
add
negb
jo
cltd
mov
sbb
ds
push
fsubr
test
inc
cwtl
push
cmpsl
xchg
mov
fsubrp
mov
cmc
stc
inc
inc
imul
sub
loope
sub
mov
push
lea
dec
arpl
clc
popf
lret
pop
fs
xchg
ss
in
sbb
inc
insl
cli
cwtl
jle
jbe
or
cld
pop
dec
fdivs
mov
inc
cld
inc
dec
inc
push
jge
push
push
ficompl
xchg
cmp
xchg
jecxz
mov
xlat
adc
mov
xor
sub
dec
mov
ficoml
push
imull
iret
mov
cs
in
xor
outsb
orl
jno
mov
add
inc
aam
push
rorb
jae
mov
inc
clc
pop
xchg
loopne
mov
aas
or
or
addb
xor
pop
outsb
or
imul
inc
mov
mov
leave
stos
cmp
lods
dec
mov
notb
lock
out
mov
negb
ss
sbb
stos
fisttpll
dec
pushw
dec
gs
mov
addb
and
icebp
cmp
popf
jge
rcr
pop
jg
out
xor
push
xchg
dec
movsb
and
orb
mov
pop
pushf
pop
add
dec
ds
nop
push
push
aaa
icebp
mov
push
int
inc
pushf
outsl
cmp
ljmp
adc
dec
inc
cmp
fwait
lret
mov
push
sub
nop
push
mov
mov
mov
sub
and
cmp
fadd
xor
sbb
pop
pop
or
repnz
mov
push
xchg
xchg
imul
popf
adc
or
sub
xchg
ljmp
xchg
popa
inc
xchg
push
mov
push
rcrb
pop
pop
stos
dec
adc
aad
imul
in
adc
insl
add
and
or
dec
fildll
lds
iret
jle
inc
aam
push
and
nop
sub
sbb
cmpsb
das
shlb
call
ficoms
xor
sbb
fimull
jns
xor
xchg
push
leave
fisttpl
sbb
lods
outsl
adc
mov
cld
adcl
xadd
cmp
dec
push
imul
nop
jo
mov
repz
push
inc
fiaddl
out
push
and
push
pop
fidivl
cmpb
lds
rorb
in
mov
fidivrs
jbe
adc
mov
popf
jg
jne
pop
mov
fadds
cmp
xlat
cltd
jo
push
ljmp
add
xor
mov
pop
dec
loope
test
push
aam
pop
push
jae
inc
jae
mov
ret
xchg
xor
out
inc
fsubrp
inc
lods
xor
fs
xor
inc
dec
into
daa
cmp
in
mov
adc
aaa
pop
sub
dec
mov
rcl
cmp
stos
xor
cmpsl
call
pop
aas
and
test
jg
xor
lahf
jmp
fsubl
insb
movsb
add
decb
sbb
push
jae
push
dec
mov
loope
cmp
aas
and
sarb
cld
and
jle
nop
ret
xlat
insb
jmp
dec
divb
popf
enter
mov
cld
daa
test
ret
test
fiaddl
xchg
add
movsl
bound
aam
add
xchg
cwtl
push
adc
mov
pop
add
test
inc
ja
xlat
or
xchg
xchg
lea
cwtl
push
adc
jbe
push
lahf
popa
mov
adc
add
push
stos
jecxz
cmp
xor
inc
fistpll
push
xlat
mov
mov
push
push
mov
mov
mov
push
and
xchg
adc
ljmp
outsl
xchg
and
ss
in
outsl
jnp
mov
xor
push
mov
test
add
sub
pop
fidivs
adcb
jp
add
mov
ret
shll
outsl
insb
add
or
aas
enter
je
insl
loopne
pop
push
popf
nop
lock
bound
gs
ret
imul
cmp
mov
add
cmp
push
push
int
ret
bound
iret
lods
pop
adc
jbe
lock
jp
dec
sub
cwtl
stos
call
cwtl
cmpsb
out
test
rcrl
mov
mov
pop
mov
imul
sub
cpuid
jb
mov
adc
cmp
stc
or
lcall
adc
popa
ss
cmp
dec
ss
inc
daa
in
xchg
mov
xchg
mov
inc
lret
push
ret
fmuls
xor
inc
jmp
test
jmp
ljmp
pop
cltd
sub
inc
ljmp
in
jp
ret
dec
or
fmulp
das
imul
sbb
inc
or
scas
inc
pop
and
int
cmc
inc
xor
and
rorl
xor
add
or
cmp
and
xor
xor
pop
sbb
mov
push
out
xchg
jmp
mov
jmp
push
lock
pop
scas
mov
mov
lahf
mov
xchg
pop
repnz
leave
and
pop
aaa
add
test
pop
fisttps
into
jg
xor
adc
shl
add
adc
xchg
inc
mov
cmp
fimull
inc
fisubrs
add
out
enter
lds
ror
das
in
inc
inc
inc
xchg
inc
pop
dec
xchg
into
gs
xchg
xor
add
push
out
nop
inc
faddp
popf
outsb
addr16
mov
stos
in
adc
stc
popl
mov
jecxz
cmpsl
ljmp
iret
sti
sbb
arpl
fwait
lock
out
cmp
add
cmpsb
pop
push
je
in
sub
push
fdivrs
xchg
fisubs
adcb
cmp
mov
leave
cmpsl
addr16
push
aas
sbb
stos
inc
clc
adc
leave
xor
in
movsl
push
inc
push
mov
push
aas
dec
jecxz
je
cmpsb
sbb
adc
mov
outsb
pop
adc
mov
fwait
stc
inc
int
ds
xor
push
clc
pop
push
dec
dec
fiadds
mov
lds
pop
or
frstor
cmpsb
cli
lods
int3
sub
es
in
rcl
jns
adc
fildll
xor
dec
aaa
repz
cmp
mov
stc
and
ss
outsl
in
shr
add
out
stos
mov
push
push
adcb
scas
or
mov
std
xchg
out
jbe
xor
push
xchg
sub
mov
mov
pop
or
sub
shlb
dec
rcr
decb
out
push
inc
pop
pusha
idiv
call
jg
push
mov
dec
mov
lea
jge
lock
push
sub
xchg
cmp
dec
rcll
jl
mov
add
xlat
xlat
fwait
xor
in
push
push
cwtl
mov
push
or
fwait
outsb
dec
lea
les
aad
dec
push
push
cmpb
shl
adc
test
ja
mov
inc
or
jbe
mov
int
add
daa
sub
iret
scas
inc
scas
push
fwait
fwait
int3
ror
fs
ljmp
and
jno
test
nop
cli
mov
fistl
sbb
jle
bound
in
push
or
test
imul
arpl
push
lds
lea
sub
hlt
adc
xor
stc
fcompl
out
cmpsb
mov
push
push
test
scas
lods
sahf
repz
adc
push
dec
je
jg
stos
ret
sub
dec
cwtl
pop
mov
popa
xchg
cmp
insb
push
loope
loop
push
enter
leave
in
mov
arpl
cmp
pop
sti
add
in
js
dec
pop
push
lcall
loop
xchg
push
mov
mov
push
in
fldcw
push
sbb
pop
inc
fcompl
push
js
loop
cli
xchg
add
cli
mov
lret
rcr
mov
or
add
and
jge
movsb
mov
fimuls
and
push
in
and
ja
cmp
scas
inc
xor
mov
cld
cmp
adc
jle
and
cmp
mov
push
lcall
sbb
loop
jp
sub
inc
mov
js
sbb
pop
lea
aad
dec
cmpsb
dec
out
or
jecxz
cld
test
sub
bound
mov
lods
cmp
mov
xchg
ret
loope
data16
lock
push
fists
stos
inc
jg
rolb
popa
push
in
pop
test
int3
adc
inc
arpl
dec
or
pushl
sub
jne
push
js
pop
out
dec
aam
in
aaa
sti
call
push
mov
int3
mov
dec
mov
roll
test
pop
lret
dec
jmp
in
mov
xor
fwait
sbb
shr
cli
add
inc
fdivrl
mov
std
daa
xor
jae
or
xor
test
pusha
out
jns
sbb
mov
pop
nop
leave
xor
fs
into
cmp
fs
and
dec
lret
and
xor
rcr
adc
sahf
adc
test
les
mov
scas
int3
pusha
mov
out
addr16
add
clc
std
jg
test
pop
sbb
xchg
mov
pusha
jnp
mov
push
jecxz
add
xchg
push
movsb
sub
add
addl
fmull
shll
sbb
push
jle
sbb
push
daa
xchg
movsb
js
add
add
adc
les
mov
loop
pop
pop
icebp
ja
xchg
jl
adc
sbb
and
lcall
je
xor
test
mov
pop
mov
pop
mov
jp
notl
sub
je
shll
jmp
insb
mov
cmp
pushf
repnz
cmpsb
add
inc
insb
sub
es
out
or
pusha
int
mov
mov
xor
das
xchg
loope
int3
scas
pop
cli
push
cmp
add
outsl
lods
push
call
andl
add
sub
pop
xchg
push
xchg
push
xor
sub
inc
subb
subb
out
int
shll
mov
jmp
lea
mov
cs
leave
pop
pusha
and
pop
cmpl
push
xchg
jg
mov
mov
sub
shlb
lea
lds
stos
ss
aam
ret
aaa
pop
cmp
mov
lcall
outsb
pushl
mov
dec
lock
loope
jns
sbb
mov
negl
dec
shl
imul
xchg
jmp
aaa
repnz
stc
ss
jle
pop
notb
popa
xor
mov
mov
inc
push
or
test
stc
into
sbb
pop
mov
adc
es
out
pop
push
pop
imul
fnstenv
aas
push
push
push
rol
aas
xchg
stos
fnstenv
outsb
arpl
sbb
ljmp
pop
adc
ret
xchg
push
mov
popf
stc
cmp
adc
icebp
add
jb
dec
mov
popa
mov
mov
jp
jl
addr16
outsl
push
enter
shr
jns
scas
dec
in
cltd
stos
enter
lock
push
call
in
cmp
pop
add
shr
or
mov
sbb
jle
fldcw
mov
sahf
aas
mov
jno
jne
adcl
jae
dec
dec
in
or
mov
insb
rcrl
cmp
fcomip
jl
repnz
mov
arpl
sbb
jecxz
js
sub
mov
and
xchg
mov
incl
mov
sbb
aas
icebp
aas
or
pop
popa
in
add
mov
adc
jbe
jmp
jae
jg
pusha
push
mov
lock
jp
jge
cmp
fcompl
xchg
inc
xlat
out
jnp
xchg
clc
pop
mov
xchg
pop
xor
mov
xchg
scas
add
imul
sbb
pop
or
inc
fldt
add
cs
mov
jl
mov
and
into
mov
and
dec
sub
lret
pop
shll
out
mov
add
xchg
cmpsl
lods
push
cltd
jnp
inc
scas
mov
lods
inc
xchg
push
into
adc
cmp
mov
in
mov
adc
mov
nop
and
iret
cmpsb
and
adc
mov
lods
mov
imul
add
mov
cmpsb
addr16
sbb
dec
in
in
push
out
mov
data16
cltd
jnp
dec
pop
dec
loop
jmp
cmp
jmp
ds
fcoml
movsb
imul
std
push
ss
mov
mov
xchg
xor
js
clc
aad
lret
dec
mov
jp
movsb
cmp
pop
loopne
rcrl
pop
in
test
or
push
data16
push
mull
and
dec
fisubrs
into
lock
outsb
jg
fs
insl
xchg
outsb
scas
pop
push
shr
mov
repnz
push
aas
mov
mov
and
shrl
aam
rcll
cmp
inc
loopne
or
or
pop
xchg
js
sarl
enter
push
scas
mov
sbb
mov
xchg
imul
loop
dec
xor
push
jmp
test
cli
sarl
imul
aad
dec
jg
test
jne
cltd
xor
jns
push
mov
pop
xchg
lods
jo
inc
fwait
dec
cmp
cld
and
call
sub
pop
sub
lcall
push
jecxz
je
xor
fistpll
ds
out
pop
push
jg
lahf
mull
dec
popl
cmp
cli
dec
test
ja
nop
jbe
aas
icebp
jbe
push
inc
int
mov
fcoml
mov
loopne
mov
and
dec
jmp
dec
aad
mov
in
add
adc
cmpsl
fnsave
mov
xchg
stos
push
imul
sti
movsb
xchg
dec
ret
ds
add
pop
cmc
pop
out
jo
data16
mov
pop
stos
lds
sub
test
xor
sub
and
jmp
sbbl
movsb
leave
xlat
jge
sbb
mov
adcl
test
mov
aam
sbb
cmp
push
fs
ss
mov
xchg
xor
cmp
mov
mov
push
jg
fs
loope
repnz
add
cld
or
das
jg
decl
add
adcb
cmp
xor
xchg
addl
inc
scas
dec
mov
scas
inc
jbe
pop
mov
mov
pop
lea
sbb
xor
cmpb
das
movsb
jbe
push
les
ljmp
jno
jne
push
out
pop
adc
pop
int3
jnp
or
or
push
sub
sub
sbb
data16
sub
sbb
addr16
jge
arpl
addr16
pop
es
insl
xchg
lcall
push
sbb
dec
cmp
clc
pop
outsl
mov
pcmpeqw
stos
lret
jb
inc
lcall
jge
test
into
je
outsb
bound
sub
xor
lcall
or
sbb
cs
cmp
adc
fistpll
mov
pop
mov
ss
dec
dec
sub
inc
cmp
add
pop
call
or
mov
fnstenv
orl
lock
outsl
mov
dec
repnz
or
xchg
mov
adc
mov
xchg
sub
mov
sti
push
es
stos
insl
cmpsl
dec
fildll
int3
shl
stc
inc
addr16
fisubl
imul
push
xchg
sbb
dec
jp
pop
and
stos
xchg
jle
js
mov
fcmove
aas
add
in
fcomp
outsl
jns
xorb
jno
movd
sbb
jmp
les
call
and
je
js
sub
cmc
mov
adc
mov
aaa
mov
and
ds
or
sbb
ds
xchg
ljmp
sub
stos
mov
mov
insl
aam
sahf
lock
mov
int3
loopne
jae
jmp
and
mov
fstpt
or
shrl
mov
or
fists
mov
nop
sarb
lret
mov
and
clc
es
mov
cwtl
inc
jg
jne
inc
pusha
pop
inc
into
enter
stos
ds
enter
repz
push
daa
or
mov
lea
out
or
inc
or
mov
cmp
xchg
das
addr16
mov
push
cmp
jno
xor
cwtl
andl
cs
cmp
fnstenv
imul
or
or
adc
pop
mov
dec
lcall
or
sbb
lock
in
mov
xor
fidivl
pop
shll
out
jns
add
call
lods
lcall
sub
dec
and
inc
cltd
jo
js
xor
jns
arpl
fldcw
gs
addr16
inc
or
sbb
fstpl
iret
lahf
jp
mov
and
and
cwtl
sbb
enter
scas
sbb
in
push
fmull
pusha
andb
arpl
mov
aas
aad
jns
ret
sub
jne
dec
push
in
jl
xchg
es
lods
lods
popf
loop
cli
call
mov
loopne
pusha
adc
fs
es
push
out
mov
jbe
dec
mov
and
mov
iret
insb
repnz
stos
cs
shrl
push
cmp
add
les
and
fwait
pop
in
test
sbb
push
mov
dec
xchg
out
ja
call
inc
scas
adc
or
push
jnp
mov
gs
adc
cltd
dec
push
inc
loop
insb
pusha
or
cli
movsb
cmp
repnz
and
mov
cld
loope
xor
jle
sbbl
decb
cmpsl
ficoml
scas
sti
test
mov
adc
inc
pop
sbb
arpl
cli
pop
mov
mov
fstpl
mov
scas
cmp
pop
or
jmp
cmpsb
inc
movsl
pop
pop
push
insb
push
sub
or
pop
adc
push
cmc
adc
fdivs
jae
imull
lahf
js
xchg
movsl
xor
fdivs
push
add
mov
push
pop
in
or
sub
xlat
aad
enter
mov
scas
decl
xchg
andb
jae,pt
pop
inc
jle
jne
shrb
dec
repz
fdiv
sub
cs
mov
push
adc
xor
imul
fistpl
stc
scas
rorb
movsl
ret
add
xor
gs
or
xchg
sub
fistpl
fsubrp
push
fldl
aaa
xor
nop
icebp
cmpsb
jmp
sbb
pop
xor
not
imul
adc
jno
cmp
cmp
bound
adc
into
pop
enter
in
jns
cltd
and
daa
test
mov
dec
fcmovnbe
add
andl
cmpb
xor
mov
push
xor
aam
test
fstl
xchg
push
ds
sbb
cmp
sbb
mov
imul
adc
imul
mov
and
sbb
addr16
in
aam
aad
int
fstpt
add
sub
or
adc
outsb
pop
xor
jecxz
dec
jle
rorl
xor
icebp
dec
cmp
insl
dec
clc
inc
dec
mov
and
in
pop
fwait
in
jmp
movsb
add
loope
mov
aad
aas
outsb
aad
mov
ror
in
xor
scas
fldenv
dec
dec
fwait
repz
cmp
aad
inc
pop
dec
dec
or
sti
arpl
inc
xchg
sbb
notb
xchg
lods
pop
xchg
cmp
inc
hlt
mov
arpl
scas
inc
push
test
jns
push
sbb
mov
stos
shl
ret
lret
rcl
add
xlat
mov
and
ret
inc
xor
push
andl
lret
sbb
mov
mov
out
scas
inc
mov
pop
cli
jo
fsubrl
sbb
jne
jg
sub
or
divb
xor
cmc
in
rorl
mov
sub
cwtl
stos
int
mov
pop
push
ljmp
mulb
subl
and
mov
pop
mov
loop
add
xor
aad
xor
loopne
in
outsb
clc
addr16
enter
jl
push
sub
out
xchg
jp
cs
add
add
and
and
lahf
push
out
test
and
xchg
dec
fidivrl
mov
fimull
out
sbb
pop
jno
enter
inc
jmp
sahf
fs
fists
and
jecxz
xor
sub
dec
and
jo
lret
in
mov
mov
loope
xor
adc
inc
xchg
imul
cmc
push
ss
cltd
pop
jmp
and
cmp
jne
adc
dec
cmp
lcall
popa
fisttps
pushf
or
fstps
ljmp
mov
xor
dec
sarb
xchg
int
mov
scas
scas
adc
insl
hlt
pop
fdivl
pop
insl
fcmovnb
outsb
movl
and
addr16
xor
mov
cmp
das
cs
in
cltd
cmp
sub
nop
adc
dec
push
lock
jmp
jmp
jbe
jl
mov
imul
das
inc
in
mov
leave
cmp
adc
repz
sbb
mov
mov
inc
testb
jns
test
out
test
cmp
lahf
ficomps
loop
icebp
repz
dec
in
les
sbb
cmp
repz
add
scas
xchg
scas
dec
pop
aaa
dec
pop
mov
mov
pop
js
push
mov
sbb
and
sbb
jmp
mov
pushf
test
sbb
adc
repz
aam
lret
aam
les
flds
cmc
scas
adc
add
xchg
test
sbb
arpl
adc
xchg
jge
stos
mov
and
mov
popa
adc
insl
sbbl
sub
test
pop
mov
fiadds
pop
push
lahf
and
bound
in
adc
jp
outsb
jae
push
in
cmpsl
inc
ja
lret
aaa
gs
push
xor
es
add
inc
popa
cmp
mov
jb
sub
fsubr
mov
stos
pcmpeqb
testl
je
mov
pusha
out
loop
and
adcb
push
pop
ljmp
insb
cs
inc
scas
lds
jle
xchg
lcall
outsb
push
mulb
sub
out
movsb
add
int
lds
or
dec
aaa
dec
lcall
aam
je
mov
xlat
sarl
rorb
pop
jmp
push
nop
jns
std
push
mov
out
push
inc
flds
lahf
loopne
rolb
push
sbb
push
jns
out
pop
lcall
loope
aad
xchg
add
in
repz
enter
sahf
xor
sti
push
cmp
arpl
xor
pop
out
paddb
mov
add
insb
out
imul
decb
xorl
add
mov
iret
out
jmp
movsb
lods
push
pop
mov
mov
push
or
add
sbb
dec
fsubr
lods
push
js
mov
jns
imul
mov
and
jmp
push
lret
pop
xor
in
sbb
adc
aaa
jle
xorps
fsts
xchg
out
lret
sub
call
fsubrl
stos
inc
jb
xchg
add
sbb
sbbb
or
cmpl
popf
out
popf
mov
xor
inc
lds
ja
inc
xor
or
fs
jge
pushl
imul
ljmp
repz
mov
inc
mov
lahf
mov
pop
push
jo
dec
fxch
mov
pusha
push
mov
xor
in
push
test
cvtps2pd
jne
and
les
popa
adc
in
hlt
clc
mov
in
lods
pusha
jnp
mov
orl
andb
sub
stc
push
push
popa
xor
daa
cmp
pop
hlt
orb
xchg
insb
sbb
in
jecxz
loope
add
pushf
sbb
xchg
lea
or
cmpl
stc
imulb
pusha
xor
sbb
adc
dec
jnp
adc
xor
jecxz
imul
ss
ss
cmp
test
xchg
xor
enter
les
dec
in
sub
fisttpl
sbb
sbb
mov
xlat
sub
inc
dec
or
iret
pop
mov
adc
lahf
out
mov
stc
je
lock
sub
inc
loope
scas
jns
jmp
lret
sti
push
xchg
pusha
inc
fidivs
jg
push
or
je
std
jnp
add
adc
push
popf
pop
mov
loope
sti
mov
push
mov
gs
jb
mov
sub
lret
cmp
es
out
xor
das
cli
xchg
jne
out
push
jge
or
fcompl
sub
stc
adc
mov
jb
pop
push
mov
ds
adc
lods
xchg
cs
inc
movsb
jb
push
addr16
adc
out
bound
call
or
lret
popf
add
call
or
rcll
call
add
loope
dec
out
sub
lock
in
mov
lret
hlt
test
into
fsubl
mov
ret
mov
inc
popa
cmp
xor
in
in
push
aam
int
subb
icebp
or
std
jo
and
arpl
in
inc
das
rclb
sbb
outsl
pop
cli
pushf
stos
jl
je
movb
dec
test
and
lods
mov
mov
dec
jp
sahf
mov
xchg
cmp
ret
idivb
int3
pop
pop
clc
jnp
cs
data16
mov
sub
xchg
adc
dec
adc
mov
sub
adc
sub
lea
mov
push
bound
cmpsb
push
ljmp
jno
fidivs
xor
or
repz
sub
shll
leave
pop
xor
add
int
stos
dec
xor
out
mov
lret
cs
add
cld
fadds
mov
clc
mov
xor
fwait
cli
fistpl
clc
jae
out
mov
jmp
out
cld
dec
pushf
mov
or
lea
xchg
stos
dec
in
xchg
sub
aam
repnz
cwtl
stos
mov
flds
orl
cltd
mov
adc
add
jg
pop
daa
ret
add
jne
aam
xchg
push
and
cmp
push
mov
gs
jecxz
fcomps
sti
mov
fildl
sahf
xchg
mov
sub
jno
in
stos
inc
shl
pop
push
jg
mov
rcrl
jmp
push
jl
or
movsb
add
mov
sbb
sbb
xchg
int
fsts
adc
sbb
push
stos
push
mov
xchg
fimuls
subl
sub
andl
mov
mov
in
lret
adc
popa
mov
pop
push
xor
xchg
flds
jmp
bound
mov
sub
jae
loope
mov
rcrb
ds
sbb
lahf
or
test
loop
pushf
addr16
jge
pop
lret
sub
pop
mov
int3
scas
out
mov
jnp
leave
mov
inc
cld
insl
fs
cwtl
addb
movsl
mov
dec
icebp
sti
inc
fisubrs
dec
in
ss
jnp
pushf
mov
loopne
decl
push
in
fldt
insb
fidivl
sbb
aam
mov
push
out
daa
js
sub
cmpsb
push
mov
mov
aaa
mov
mov
push
in
cmp
push
sub
push
pop
in
call
lock
lcall
stos
psubsw
loope
lea
fimuls
xchg
sarb
comiss
insl
test
mov
cmp
call
xchg
inc
pushf
cmpsb
sbb
test
inc
xchg
pop
or
loope
stc
iret
daa
cs
sbb
cltd
pop
leave
push
push
sub
data16
repz
out
mov
ffreep
or
mov
sub
add
repz
ficompl
mov
inc
cmp
movsb
mul
aaa
push
and
jae
cli
shll
cmp
aas
push
ss
dec
mov
das
push
fs
push
test
jg
hlt
mov
inc
jnp
popa
sbb
xchg
jae
shll
es
fucom
aad
cmp
add
es
std
repz
adc
enter
inc
mov
inc
add
loopne
fistl
inc
xchg
lods
mov
lahf
mov
push
jae
mov
andb
jno
push
lret
pop
xor
pop
enter
dec
nop
rcll
cltd
mov
or
inc
cmp
mov
jge
and
ret
aam
cmp
out
xchg
mov
ficompl
push
adc
popa
shlb
push
scas
ja
cmpl
in
clc
xchg
xchg
push
je
mov
jg
outsb
xchg
sub
add
loope
pop
xchg
stc
xor
out
loope
icebp
or
daa
xor
push
inc
pop
cmp
lret
cli
into
dec
dec
sbbb
and
push
dec
sbb
test
ficoms
dec
or
popf
dec
and
dec
push
test
jl
adcl
xor
inc
cwtl
mov
sub
jae
out
into
mov
pop
cwtl
dec
xchg
les
test
sbb
mov
push
popa
push
sbb
sbb
in
jge
out
mov
xchg
jp
mov
and
pop
mov
aam
pop
call
fiaddl
outsl
push
hlt
fldcw
push
cmp
cltd
mov
ficompl
push
or
add
or
bound
loopne
dec
pop
in
cwtl
push
jnp
cmp
jb
push
int
ret
push
xor
loop
movsl
cmc
enter
in
call
push
test
sub
inc
mov
into
leave
pusha
in
or
jbe
fs
xchg
inc
inc
ret
push
pop
sub
daa
addr16
xchg
sub
or
dec
cmp
movsl
cli
mov
andb
cmp
xchg
xlat
es
into
js
add
xchg
inc
add
jae
test
lret
cmp
iret
jnp
cmpb
int3
aas
aad
sbb
dec
jae
xor
aad
xchg
push
jb
fildll
jae
and
fdivrs
je
xchg
cmpsb
xor
or
shl
repnz
ret
push
fwait
je
test
cli
daa
xchg
jge
mov
cwtl
dec
stc
xchg
fiadds
pop
pop
lcall
test
ja
sub
scas
jmp
adcl
lods
out
xchg
push
pop
dec
mov
popf
cmpsb
adc
movsl
push
xor
aas
aam
lahf
sti
out
pop
mov
in
fwait
jg
enter
cmpsb
push
fnstcw
mov
loop
push
sub
lea
mov
inc
loopne
xlat
fbld
cmp
lods
mov
push
mov
lea
lds
cmpsl
cmp
loopne
subb
cwtl
jb
xchg
stos
lret
bound
push
sub
icebp
jae
test
repz
scas
jo
jne
xlat
das
dec
fildll
xchg
pop
jge,pn
adc
dec
jl
sahf
adc
mov
xor
call
mov
jnp
ficoml
loop
sti
fisubrl
stos
jmp
sbb
je
cmp
add
sbb
inc
sti
outsl
daa
frstor
or
fcoml
call
push
outsl
shll
ja
inc
mov
push
inc
jecxz
jge
jo
fldz
nop
rcll
mov
rolb
pop
bound
push
jl
push
add
aaa
dec
popf
mov
out
cmp
repnz
jno
jbe
fptan
arpl
in
aaa
mov
sub
std
xchg
enter
push
insb
sbb
dec
mov
call
and
xchg
push
sub
stos
push
out
stc
xor
and
push
push
mov
inc
lods
cmc
mov
icebp
dec
inc
mov
testl
add
or
sahf
inc
scas
dec
imul
aaa
adc
pop
scas
aas
lret
mov
into
es
vpmaxsw
sbb
mov
and
rcrl
fidivl
add
xchg
punpckhbw
inc
cltd
cmc
sbb
mov
ret
pop
jne
add
test
test
or
sub
stc
jmp
daa
sub
inc
in
push
popf
je
mov
push
cmpsb
xchg
stos
sub
mov
mov
fiadds
push
xlat
pop
push
shrl
aad
dec
xchg
jle
stos
shr
fstpt
adc
lcall
mov
xor
call
filds
sbb
jae
mov
push
fdivs
or
xor
inc
sub
jbe
cltd
cmpl
jnp
and
iret
jl
sbbl
js
test
jb
and
stos
fisubl
scas
push
ljmp
icebp
xchg
sub
mov
shr
push
push
sub
mov
mov
int3
sbbl
imul
push
add
sbb
cwtl
loop
int
mov
or
and
rcrb
call
aaa
jb
add
inc
push
subb
dec
push
mov
inc
jge
test
xchg
shlb
or
mov
and
pushf
adc
xor
push
sbb
mov
inc
mov
adc
popa
mov
lahf
or
cmp
pushf
dec
mov
inc
int
push
jg
in
cmp
nop
dec
data16
fidivs
dec
lea
sub
add
call
aam
sub
xor
sbb
add
adc
dec
mov
lret
push
xchg
xor
pop
cld
ss
push
call
mov
push
mov
jae
mov
mov
push
cmp
xchg
pop
jmp
mov
jg
idivl
push
jb
add
mov
mov
ja
xchg
push
jmp
sahf
inc
rep
cwtl
jmp
mov
sbbb
cs
daa
and
pop
xor
repz
bound
pop
xor
loop
js
or
mov
pop
adc
fcoml
orb
push
cs
iret
mov
cmp
pop
jmp
push
popa
xrelease
int3
rcr
shrl
imul
xchg
ficoms
dec
push
rcll
push
loopne
rcl
stc
bound
pop
jp
adc
pop
enter
clc
push
push
push
xchg
rol
sahf
sbb
pop
pop
call
push
stos
sub
push
pop
lret
fisttpl
push
in
xchg
cmp
cmp
sbb
dec
mov
inc
shlb
jecxz
xchg
outsb
jecxz
sub
dec
ss
pop
outsb
repnz
dec
push
jnp
imul
pop
lock
pop
lock
imul
xor
push
sub
jg
repz
roll
stos
jmp
push
jne
es
notl
mov
imul
mov
in
push
jne
inc
testl
inc
js
jmp
and
sub
enter
and
dec
or
jae
gs
jbe
jns
in
out
scas
sahf
int3
popf
mov
ljmp
mov
adc
jbe
ret
shlb
push
mov
rcrl
mov
jae
scas
int
sbb
jbe
xchg
cli
push
aas
aaa
mov
jg
mov
push
push
adc
bound
add
cmp
jge
packssdw
lock
push
stos
loopne
ds
aad
loop
addr16
lods
enter
dec
call
cwtl
mov
pushl
pusha
xor
rcll
jno
ret
insb
or
dec
dec
das
loop
mov
lret
stc
fldt
bound
and
xchg
xor
jge
cmp
lahf
rclb
fucomip
and
mov
push
pinsrw
ljmp
mov
sub
add
or
xor
push
in
arpl
fnstcw
jo
xor
shrl
dec
arpl
hlt
js
inc
sub
push
mov
ficompl
cmpsl
outsl
sbb
orb
in
or
mov
mov
int
outsb
xor
imul
mull
mov
movsl
popf
int3
jg
lret
rcrb
mov
test
sbb
outsl
add
lods
jmp
jno
popf
decl
mov
mov
jp
xor
pushf
sub
in
mov
cmpsb
xor
stos
jbe
fnstenv
lods
mov
push
adc
inc
sbb
test
lock
sahf
lods
subl
cmp
xor
sub
pop
mov
push
cmp
or
mov
dec
in
ret
pop
and
insb
cmp
lahf
mov
negl
mov
or
sahf
xor
into
fildll
ja
mov
repz
jnp
lret
xorl
or
sbb
bswap
pop
dec
push
movsl
mov
icebp
arpl
lret
outsl
xchg
push
pop
out
mov
add
insl
js
scas
aaa
cmc
push
std
push
leave
push
cli
push
repnz
push
data16
mov
or
cmp
sbb
seta
mov
lcall
pop
sub
mov
stos
test
cltd
enter
sub
push
jne
rorl
and
cli
dec
mov
xor
testb
fnstsw
push
mov
stc
movsb
dec
sbb
aaa
sbb
fisubrs
xor
fs
sbb
stos
adc
mull
call
test
jle
dec
es
aad
push
lock
push
jg
cmp
pop
dec
dec
fidivs
adc
jg
push
icebp
jne
fildll
in
stc
mov
lahf
pop
das
dec
pop
stc
lea
imul
dec
mov
cmp
mov
popa
sbb
int
jo
adc
xchg
pop
mov
mov
adc
mov
push
scas
xchg
mov
aam
jns
mov
mov
push
or
sbb
scas
fstpl
aaa
xchg
add
cmp
in
sbb
push
std
or
stos
xor
or
dec
dec
imulb
shl
fmul
jecxz
pand
inc
stos
push
hlt
je
pop
daa
test
sahf
mov
push
lock
imul
and
imul
leave
fdivrs
or
push
mov
lock
xchg
test
in
ljmp
mov
nop
dec
sbb
in
jmp
jae
out
mov
push
subl
clc
add
jmp
lret
jno
add
sbb
nop
imul
daa
lcall
cmp
aaa
cmp
stc
pushf
cmp
pop
add
jnp
sub
add
fcoml
xchg
dec
mov
ljmp
shr
inc
push
push
scas
scas
cmp
scas
shll
js
xchg
xor
pop
jb
lds
lds
pop
add
and
sub
sbb
mov
es
outsl
jnp
cli
pop
fwait
mov
into
push
jne
mov
jae
leave
jns
push
cmpsl
mov
pop
stc
out
and
jecxz
aas
inc
add
orb
lea
xchg
push
jle
or
xchg
mov
adcb
xchg
mov
pop
shrb
sbb
dec
inc
jmp
mov
dec
aaa
inc
inc
dec
bound
iret
jg
stos
adcb
negl
dec
xor
xchg
aam
jns
cmp
xchg
daa
mov
out
decb
imul
push
insl
aam
mov
xchg
mov
icebp
xor
fwait
imul
cmp
in
dec
loopne
stc
push
dec
pusha
xchg
push
negl
mov
loopne
movsl
cld
pop
out
inc
shlb
fildll
lea
adc
push
stos
add
fsubs
inc
repz
xor
and
cwtl
mov
add
inc
cmp
sti
adc
mov
cltd
cmpsb
dec
or
push
testb
jge
ss
jne
ja
les
xchg
add
jbe
sbb
adc
pop
push
inc
push
adc
xor
out
fsubrs
jno
aas
imul
mov
movsl
jno
rorl
das
ljmp
icebp
mov
push
lahf
pop
dec
stc
addr16
es
ret
xor
and
add
jnp
andnps
sahf
out
in
sbb
inc
addb
pusha
pop
xchg
push
adc
jge
cli
cmp
pop
xchg
ljmp
mov
sub
jne
mov
ret
xor
fs
add
aas
push
sub
and
test
cmp
xchg
adc
jnp
jbe
aad
mov
sbb
pop
lcall
int
stos
es
lods
xchg
mov
jge
pushf
sub
jl
lahf
mov
pop
mov
aad
xchg
jmp
aaa
repnz
outsl
jge
pop
cmpsl
ds
shrb
ret
ss
dec
rclb
add
loop
jno
in
cs
fstps
mov
std
test
addr16
adc
pushf
mov
xchg
decb
aad
movsb
fsubrs
js
push
insb
mov
inc
or
popf
popa
mov
pop
inc
dec
in
sub
clc
push
je
nop
push
mov
xchg
cs
in
lahf
fmul
jmp
filds
ja
inc
aad
imul
xor
ret
lret
dec
push
mov
inc
mov
outsl
ds
dec
popf
xor
aad
sbb
fcoml
cmp
inc
mov
shl
or
dec
cmp
sbb
imul
pop
pop
push
movsl
dec
shlb
ret
addr16
dec
lock
add
enter
mov
lds
hlt
mov
xchg
sub
les
mov
lock
pop
icebp
push
movl
mov
push
sub
lds
sbb
stc
pop
rol
sub
adc
shlb
pop
sub
adc
hlt
sub
cmpxchg
mov
pop
int
stc
adc
movsl
add
sbb
loop
or
jmp
gs
sbb
les
cmp
push
or
dec
cltd
je
mov
sbb
leave
cld
mov
push
pushf
dec
add
scas
adc
test
shrl
and
jno
fwait
stc
sbb
imul
jle
push
ja
stos
hlt
test
dec
push
inc
std
xor
adc
cli
daa
cmpsb
repnz
push
cmp
aas
movsl
popa
ss
rclb
and
jae
mov
clc
mov
jnp
gs
not
ljmp
out
mov
pop
bound
pop
mov
out
pop
xlat
and
sbb
fnsave
jmp
push
outsl
sub
add
cmp
mov
lret
inc
push
inc
add
loope
ljmp
cmp
int
arpl
popf
std
dec
sub
int
scas
xor
call
shr
add
or
fiaddl
andl
sub
jb
repz
cmp
rcr
dec
in
movsb
sbb
push
shl
jb
jne
lods
daa
and
andl
enter
shl
inc
sbb
cld
mov
in
dec
mov
inc
xor
movsl
jns
sahf
insb
dec
or
inc
and
add
jae
sbb
sub
fildll
mov
into
scas
pop
cld
fdivs
int
mov
inc
mov
inc
mov
aad
dec
or
lcall
test
imul
repnz
cmp
jne
xchg
mov
sub
stos
mov
fucom
inc
out
ljmp
and
mov
fistpll
fsubrp
cmp
pop
push
movsb
cs
aas
add
insb
inc
jne
jp
cld
xor
sub
pop
push
jmp
and
mov
in
jecxz
popa
ret
repnz
inc
push
into
loop
mov
data16
pusha
das
shlb
mov
in
adc
lea
stos
shr
xor
xor
fwait
leave
xchg
cmpsl
testl
in
inc
jge
cmpl
jle
mov
cltd
insb
push
or
je
and
add
les
mov
js
lock
jmp
mov
sbb
mov
pop
shlb
mov
lock
lods
dec
cmp
out
dec
dec
inc
aas
filds
pop
mov
gs
sub
mov
push
cmp
fstps
push
adc
and
data16
jns
mov
jl
jecxz
mov
mov
loope
adc
cwtl
inc
jle
int
add
pop
xchg
lea
push
mov
xor
ja
imul
lahf
in
ss
jge
push
mov
push
jecxz
aas
lock
call
andb
sbb
mov
pop
sub
test
shrb
xchg
push
xor
adc
sub
cwtl
jb
pop
fs
jnp
adc
xchg
dec
cmp
ljmp
xor
adc
mov
or
cmp
iret
negl
xchg
incl
in
repz
shrl
iret
xchg
sub
dec
std
adc
hlt
inc
js
je
jmp
mov
pop
enter
or
xor
xor
mov
inc
mov
mov
addl
rcr
push
jmp
movsl
mov
mov
filds
jecxz
mov
and
push
push
fsubrl
adc
mov
or
jmp
out
outsb
xor
xor
dec
fsubrl
push
fildll
outsb
sub
sbb
mov
decb
lret
js
out
add
adc
decb
insl
pop
jnp
or
shrl
mov
add
insl
dec
data16
inc
movsb
mov
in
pop
das
mov
shl
dec
mov
jae
pop
mov
cmp
pop
push
in
shll
inc
or
xor
fwait
popa
xor
ret
sub
js
inc
mov
fisubrs
out
push
addb
sbb
adc
push
mov
cltd
pop
push
sahf
pop
mov
mov
cmp
cmpsb
add
cmp
fcmovbe
insl
push
insb
inc
es
cmp
divl
and
ret
push
xchg
inc
dec
dec
inc
fld
imul
pop
push
imul
les
and
dec
mov
xchg
pop
push
lret
xchg
sbb
sub
mov
push
lods
insb
cli
fucom
out
add
call
mov
lret
pushl
dec
and
add
xchg
xchg
mov
mov
cltd
insl
inc
mov
sar
sbb
mov
xor
push
or
jmp
test
loop
jle
and
dec
dec
add
outsl
lock
lea
js
push
pop
pushf
xor
mov
es
dec
fwait
sti
xor
jmp
mov
xor
push
mov
test
ret
push
xchg
aad
mov
dec
pop
inc
imul
in
jo
idivl
dec
add
jge
leave
mov
mov
and
xchg
loopne
arpl
inc
xchg
pop
std
adc
push
sbb
fcmovb
jbe
jne
outsb
gs
dec
jg
jge
cmp
cmp
nop
add
mov
sub
jmp
add
jb
mov
ret
pop
push
std
test
outsl
jge
les
jg
pushf
sub
sub
lea
gs
scas
rcrb
loopne
cs
fstpl
shl
imul
lcall
inc
fs
sub
dec
add
mov
daa
inc
inc
fimuls
pushl
adc
push
jmp
mov
add
xchg
idivl
lea
jmp
ror
repnz
mov
mov
xor
fiadds
jg
mov
xlat
pop
sbb
and
pop
mov
nop
jnp
add
pop
pop
cli
test
and
xor
lods
or
loopne
aas
cmpsl
scas
push
pop
or
and
adc
fs
xchg
ss
pop
push
mov
adc
aam
jns
loop
mov
test
and
sbb
xchg
ret
mov
jns
repz
mov
dec
mov
test
inc
arpl
cwtl
inc
inc
adc
adc
cmp
test
fildll
mov
inc
adc
push
rcr
pop
shrl
pop
adc
loopne
pop
push
or
jns
enter
out
and
ret
sub
push
icebp
jp
shrl
cmp
sub
xlat
add
daa
push
leave
xor
pop
hlt
push
pop
xchg
add
dec
out
fcoms
mov
jno
jb
pop
mov
jo
dec
daa
les
lds
fmull
pop
sub
add
add
andl
in
cwtl
xor
jg
lret
aam
rcr
cli
push
mov
cmp
mov
popf
in
xchg
and
popf
mov
mov
ret
and
fs
sbbb
add
xor
add
or
pop
cmp
or
inc
mov
loopne
rol
dec
push
aaa
stos
cmpsl
sub
popa
movsb
mov
fdivrs
inc
push
xor
pop
in
push
cltd
bound
dec
ret
mov
fistps
and
in
xor
inc
ja
pop
lods
mov
ljmp
xor
bound
jl
xrelease
jmp
jbe
push
aad
push
inc
js
pop
jo
pop
dec
pop
adc
aaa
push
pop
xor
negl
sahf
mov
push
mov
or
push
xchg
dec
je
arpl
cmp
mov
fldenv
gs
fs
fistpl
mov
jmp
int3
dec
mov
hlt
mov
sub
rclb
sbb
cmp
leave
test
rcll
mov
sbb
adc
mov
out
hlt
mov
mov
bound
adc
mov
lret
sub
insl
jb
mov
out
scas
les
int3
sub
int3
jns
scas
push
mov
imul
add
xchg
push
mov
daa
push
movsl
fadd
in
rolb
push
or
sahf
sub
mov
pop
lods
sbb
dec
fiadds
mov
lret
and
sub
jns
ss
sbb
sahf
or
out
sub
gs
xchg
xchg
fbstp
inc
or
sbb
cmp
jno
pop
xchg
testl
aam
lcall
je
fistpll
insl
scas
test
pop
in
jns
mov
notl
lea
das
nop
adcb
orl
sub
push
push
inc
push
cmp
cmpsb
es
imul
sub
in
dec
fmul
jp
and
fistl
xchg
nop
pop
imul
hlt
shrb
ss
ja
dec
mov
inc
fistpl
mov
cwtl
lods
dec
out
mov
sahf
or
pushf
xor
pop
sub
mov
aas
sbb
jbe
inc
frstor
pop
cmp
pop
aas
ss
xor
jmp
sub
btc
push
ret
sbb
push
jp
sbb
jl
xlat
mov
into
fs
dec
jo
imulb
xchg
xchg
adc
in
push
xor
dec
call
or
jg
shlb
mov
fistpll
pop
negl
andl
icebp
cmp
add
dec
and
xchg
mov
jno
add
sahf
xor
and
adc
fdivs
scas
jne
shll
sbb
out
imul
lret
pop
insb
ljmp
xor
dec
out
sbb
popa
repz
dec
repnz
xchg
sub
sbb
mov
cmc
mov
jge
popl
dec
outsl
push
sub
mov
pop
ljmp
xor
dec
ja
mov
adc
xor
data16
pop
out
dec
xchg
sub
ficoml
push
dec
pop
mov
jb
leave
push
add
aam
stc
or
mov
pop
jl
xchg
and
push
data16
lcall
lock
pop
and
xchg
loopne,pn
adc
add
mov
cs
std
aad
nop
cmpsl
jae
test
push
shrl
or
push
les
sub
notl
and
xchg
dec
lock
mov
dec
or
jo
or
cmpsl
xlat
mov
sbb
push
pop
xchg
sub
das
mov
cmp
pop
mov
inc
popa
xchg
roll
cwtl
mov
gs
mov
sbb
or
jle
pop
popf
psraw
inc
rorb
aaa
cmpsb
sub
fcomps
inc
xor
inc
push
pop
mov
std
or
xchg
je
inc
out
jecxz
mov
jno
jo
and
repnz
insw
lods
mov
into
cltd
addl
roll
dec
out
sub
xchg
push
clc
mov
sub
pushf
fwait
insb
dec
shlb
adc
loop
push
mov
or
in
adc
or
imul
push
movsb
cmp
daa
ret
lea
movd
mov
jbe
mov
scas
or
loopne
cmpsl
ret
outsb
hlt
sub
sub
jp
push
aad
aas
or
call
outsb
mov
jle
pop
daa
in
ret
out
insb
fcomip
lret
jmp
and
fnstcw
and
leave
test
or
xor
sbb
stc
cltd
std
and
mul
adc
sub
jge
je
insl
mov
mov
imul
test
mov
xor
xor
data16
jl
xor
test
lret
push
mov
and
dec
and
das
imul
mov
xor
push
lock
dec
dec
or
push
sub
inc
push
das
divps
inc
rol
in
out
mov
pop
enter
pop
and
sub
ret
ds
or
lods
cli
push
push
xor
lret
out
clc
nop
push
test
push
jb
fisubs
fsubrs
mov
mov
push
mov
inc
lcall
loop
inc
cmpsl
out
dec
cmc
shll
push
loopne
xchg
pop
mov
fists
cli
xchg
add
std
pop
mov
push
cltd
mov
mov
pop
gs
push
push
xchg
mov
mov
outsb
out
adc
push
inc
adc
cmpsl
mov
sbb
mov
loop
adc
mov
repnz
mov
jns
cmp
pop
jmp
int3
inc
push
sbb
in
mov
cmp
mov
xchg
rcll
sbb
test
pop
addr16
cwtl
xchg
shrb
fs
stc
lea
cltd
shl
mov
adc
mov
scas
ljmp
gs
ds
and
stos
dec
mov
and
outsb
inc
xchg
inc
idivb
cli
lret
orl
cld
inc
adc
ja
mov
ds
mov
out
cmc
les
or
les
popa
js
inc
sub
pop
lahf
xor
jmp
popa
rcl
subb
movsl
enter
test
lods
or
decb
imul
sahf
inc
scas
add
jno
sbb
outsl
sub
arpl
out
xor
inc
rolb
jecxz
call
cmp
xchg
xchg
add
ja
jns
push
pushl
xor
lret
je
in
movsl
lods
push
mov
or
subb
rcrb
mov
insb
shl
aam
xchg
ret
xchg
test
adc
call
pop
cwtl
jnp
cs
cmpsb
mov
xorb
sahf
sahf
pop
sub
sbb
leave
scas
add
popa
orl
mov
xor
leave
pushl
es
inc
arpl
push
jmp
jae
jbe
add
std
iret
push
cli
xchg
inc
popa
jns
mov
mov
xor
adc
mov
pop
sbb
ja
adc
fisubl
xor
scas
dec
dec
lahf
or
dec
jmp
cltd
fsubrl
push
cltd
pop
xor
in
ret
outsb
ds
fbld
xchg
int3
or
popa
push
push
jnp
inc
lea
cmp
les
xchg
test
fs
out
int3
jo
cmp
lods
pop
out
sbbb
cwtl
mov
inc
popf
fldenv
push
out
mov
fdivl
std
les
add
cltd
push
xchg
sti
xchg
hlt
fildl
jmp
pop
mov
mov
jecxz
cmp
push
dec
dec
and
or
sahf
in
push
pop
xor
xchg
push
sti
fwait
jne
leave
lea
dec
std
test
cmpsb
dec
loop
xor
imul
push
aas
inc
or
std
cmp
add
in
cld
outsb
stos
xor
jp
test
ljmp
add
mov
inc
push
inc
or
inc
dec
lea
out
lret
pop
mov
adc
mov
mov
movb
leave
lea
pop
bt
out
repz
adc
jmp
xor
xor
jb
and
cmp
xlat
mov
lcall
jl
out
lcall
fisubs
sub
push
or
stos
es
adc
pop
jmp
sbb
ret
jno
cmc
xchg
xchg
nop
jecxz
shrb
andl
or
fstpt
push
pop
insl
aaa
cmp
mov
lods
loope
sbb
orb
jnp
shrb
mov
mov
xor
mov
and
int
cmpsl
out
popa
adc
mov
adc
out
mov
and
xchg
arpl
push
loope
je
arpl
dec
lahf
imul
ja
and
lahf
push
in
or
lret
rcrl
movzwl
fs
sbb
inc
shll
shr
arpl
cld
pop
adc
mov
jnp
mov
jbe
iret
ss
jae
sti
mov
faddl
cmpsl
and
cmpsb
jno
in
mov
sub
stc
in
stos
sbb
cmpsb
sbb
xchg
mov
mov
mov
fnstenv
rorb
aaa
dec
dec
cmpsb
mov
dec
and
push
int
push
or
mov
or
fs
sub
pop
in
jno
lret
negb
push
roll
sti
fstpl
jne
and
sbb
lods
mov
fucom
ret
ret
jg
shll
orb
mov
sbb
mov
xlat
jb
or
mov
sahf
aad
dec
filds
mov
adc
sbb
scas
lea
test
or
sahf
mov
stos
inc
fistpll
enter
dec
add
inc
out
inc
rcrl
mov
movsb
jb
test
cli
push
cmp
mov
pop
jecxz
imul
rcrl
mov
call
cmc
shlb
push
push
sbb
and
jmp
mov
pop
test
lds
loop
fucom
cld
add
lcall
movswl
mov
jge
test
dec
cmp
mov
xchg
in
ret
push
insb
sbb
test
inc
cmp
ja
mov
fiaddl
sahf
jb
sbb
subl
or
icebp
inc
shl
or
and
movsb
js
adc
aam
adc
mov
sub
sub
xchg
mov
or
das
imul
aam
mov
fdivr
test
push
sbb
test
test
icebp
int
clc
adc
out
cmp
push
outsl
imul
loop
mov
lods
stos
sub
into
into
enter
rclb
testb
xchg
jmp
mov
cltd
in
sub
mov
cld
xor
dec
in
dec
cmp
push
je
pop
rol
shlb
rcrl
aam
mov
pop
jbe
xchg
lods
inc
dec
cmp
arpl
clc
dec
arpl
jnp
icebp
lahf
stos
stos
mov
cs
ret
lahf
pop
fsubrs
sub
adc
loop
jecxz
andb
adc
ret
jle
mov
adc
les
push
jae
mov
push
bound
mov
push
mov
add
xor
cwtl
push
flds
mov
pop
dec
inc
cld
sbb
push
push
lds
and
lods
push
stc
push
sahf
cs
mov
loope
cltd
mov
stos
test
xchg
pop
popf
jmp
into
and
or
or
push
mov
cltd
fnsave
sbb
cmpsl
lock
enter
movl
das
pop
ljmp
imul
aam
lods
jbe
jne
pop
inc
mov
inc
or
push
out
pop
mov
jne
lock
push
xor
cmpsb
xor
fdivr
ljmp
add
cmp
cmp
sub
inc
sub
lret
pop
fidivrl
cli
dec
loop
pop
popa
clc
dec
arpl
inc
popf
into
mov
fisttpl
mov
mov
rcrl
sub
pushf
das
adc
inc
gs
and
inc
jbe
push
inc
xor
ja
fsubr
leave
int
push
mov
clc
shr
out
sbb
pop
mov
sbb
loopne
push
and
adc
jmp
stos
ret
jns
pop
loopne
pop
lock
push
and
popl
jle
pop
call
movb
lods
or
xor
push
xlat
inc
xchg
xchg
add
sbb
rclb
sahf
test
mov
lcall
ss
cmpsb
repnz
popa
and
add
jno,pt
mov
imulb
cltd
mov
cltd
cs
jb
jmp
orl
mov
sbb
sub
shrb
inc
sub
cltd
or
addr16
fnstsw
xchg
popf
in
pushf
cli
push
sbb
push
push
dec
sub
xchg
mov
jno
in
sbb
aam
lret
sti
adc
and
mov
notl
in
out
add
jo
mov
js
jecxz
gs
cwtl
pop
je
inc
xor
movsl
icebp
lea
imul
imul
fisttps
cmp
push
arpl
mov
push
push
xchg
add
sbb
lods
out
pop
lock
push
int
xor
lods
pop
test
rorl
jl
scas
sub
jp
sete
xchg
add
into
neg
inc
out
push
and
lahf
popf
rorb
xor
shl
pop
mov
and
insb
adc
insb
fs
jb
jae
sbb
xor
scas
int3
jo
mov
cmp
mov
pop
arpl
dec
pop
ljmp
es
inc
pop
mov
loope
imul
cmp
rolb
jo
int
dec
stc
dec
mov
push
imul
sbb
mov
cmp
cs
sbbb
push
dec
loope
push
test
mov
fwait
imul
sub
sbb
ss
dec
xlat
push
jp
inc
insb
jmp
or
aam
dec
cmp
mov
cmpb
push
ja
ss
push
into
jb
mov
imul
cmpl
testb
and
out
outsb
cld
outsl
push
mov
sbb
pop
out
lds
inc
push
test
dec
add
sbb
lea
sbb
test
lcall
jae
mov
mov
jp
fsts
test
adc
dec
sub
sub
js
xor
outsb
cltd
add
repnz
fnsave
push
pop
in
in
fstps
notb
and
inc
in
test
andl
sub
sarl
lea
mov
dec
das
lcall
inc
mov
jae
rcrb
jle
mov
mov
adcl
jae
adc
stos
rcll
fdivl
incb
inc
hlt
pushf
cli
cmp
xchg
push
add
sub
cmpsb
mov
out
mov
fwait
sbbb
lock
cmp
ja
lods
jg
mov
pop
pop
dec
into
rorb
sub
loop
or
rcl
sbb
imul
out
in
cmp
adc
mov
repnz
fisubrl
fldl
stc
jnp
jno
fwait
inc
push
shlb
arpl
out
fs
push
inc
fldl
popl
lcall
in
ret
mov
inc
je
push
gs
push
mov
push
mov
mov
rclb
popa
hlt
mov
push
out
int
xor
mov
and
imul
call
mov
mov
loop
das
mov
lds
cmp
mov
mov
xor
jno
shll
adc
jmp
push
pop
and
cmp
push
sbb
je
mov
pop
jae
addb
lods
fcomps
insb
mov
sbb
pop
mov
movsl
dec
in
jmp
push
sbb
and
or
inc
push
stos
out
or
jmp
dec
inc
mov
cmpsl
ds
xchg
pmaddwd
push
sub
inc
push
stos
xchg
xchg
shll
adc
cmpsl
insb
and
jbe
fidivrl
xor
add
dec
mov
xor
xchg
addr16
mov
es
inc
push
ret
cmp
cli
rol
cmp
cmp
aam
loop
test
pop
ret
xor
sbb
jae
hlt
scas
flds
or
pop
mov
psubq
fidivs
clc
sbb
dec
loope
lock
jnp
fucomi
shrl
xchg
stos
pop
mov
pop
add
int
push
mov
sbb
testl
xor
cmp
xchg
jp
mov
or
mov
jp
cmpsl
inc
xchg
ja
fadds
add
push
jmp
test
xchg
in
std
mov
mov
in
xchg
cld
rcrl
pop
in
sub
lods
repz
cmc
mov
sub
sub
and
cmpsl
adc
fistps
push
jecxz
sbbb
mov
cmp
stos
popa
add
fsubl
sbb
jl
xor
stc
mov
hlt
inc
fidivs
arpl
lahf
testl
sub
jno
push
pushf
xor
jnp
adc
mov
xlat
pop
shlb
dec
sub
cmc
mov
loopne
test
sub
fnstenv
es
jl
dec
push
mov
dec
push
ds
popa
pop
xchg
pop
jnp
mov
fstps
arpl
push
int3
mov
fsubrs
pop
push
jp
pop
aaa
xor
je
notl
jle
inc
add
jns
fwait
cmpsl
mov
das
stc
cmp
testb
adc
cmpsl
inc
jp
fs
jnp
movsl
lahf
sbb
iret
xor
cmpsb
cmp
test
mov
rclb
cmp
inc
jl
sbb
and
mov
jns
xor
push
inc
cmp
or
push
lahf
orb
stos
je
and
imul
adc
dec
loope
mov
mov
sub
je
sbb
mov
mov
sbb
jno
dec
into
pusha
fadds
jns
xchg
pop
mov
mov
mov
dec
dec
iret
mov
stc
push
cmp
xor
xchg
dec
gs
je
sub
or
and
pop
mov
mov
push
adc
fsubrl
xchg
in
push
mov
jle
pop
test
pop
add
cmp
pop
or
test
adc
xor
jne
mov
adc
sub
xor
hlt
shlb
dec
shlb
jl
test
add
ljmp
jne
lock
out
movsb
hlt
fcoml
xchg
inc
das
les
xor
fisubs
xchg
push
or
mov
jae
push
aad
aaa
and
xor
sbb
dec
or
in
adc
xchg
stc
adc
pop
repnz
mov
dec
imul
push
addl
inc
and
mov
insb
repnz
xchg
enter
jne
dec
shr
jb
cld
xchg
notb
popf
mov
bnd
and
popf
dec
and
adc
lods
repnz
xchg
ror
lcall
into
mov
add
pop
loopne
mov
jo
sub
xchg
xor
xchg
cli
test
mov
xorl
mov
in
popa
fwait
push
xchg
inc
mov
mov
mov
pop
mov
cmp
mov
xchg
dec
aas
arpl
ficomps
sbb
repz
repnz
cmp
jb
mov
out
imul
xchg
sti
and
push
sbb
adc
and
cmp
insb
sub
xor
hlt
inc
xchg
mov
loope
dec
test
je
jmp
push
xchg
cmpsl
sub
adc
int
xchg
or
outsl
jnp
aaa
sti
adc
es
decl
jne
cld
or
push
or
icebp
repz
fistpll
push
shll
outsb
mov
rcll
dec
cmpsb
adc
int
push
imul
jne
stos
pop
sub
or
xchg
cltd
push
cmp
call
scas
out
dec
add
mov
jmp
push
dec
mov
jle
rolb
mov
clc
data16
lret
in
dec
mov
enter
xor
xor
ljmp
pop
insl
aaa
lods
in
jne
cmpsl
mov
mov
push
add
scas
mov
add
add
mov
jg
lret
std
lahf
stos
sub
pop
and
mov
fbstp
mov
mov
inc
cmpsb
fimull
fnsave
jne
jb
arpl
xor
leave
push
fs
inc
imul
sub
dec
dec
cmc
push
test
cmp
pop
outsb
mov
das
cmpl
mov
jge
clc
scas
mov
filds
xchg
fucomi
repnz
mov
cli
mov
ret
mov
insb
insb
int
xchg
xchg
mov
mov
jle,pt
outsb
ds
ret
decl
xor
xor
out
sbb
or
popa
pop
sahf
push
jle
pop
enter
mov
or
lds
sbb
sub
jecxz
int
out
imul
or
clc
inc
cmp
mov
mov
adc
les
pop
cwtl
mov
movsb
aad
inc
fistl
pop
fdivrs
xlat
adc
push
xchg
in
add
sub
mov
jns
or
push
sbb
pop
popf
jnp
mov
rcl
dec
in
adcb
mov
imul
xor
cld
sbb
cmp
mov
rorl
mov
push
out
bound
inc
lret
enter
sbb
mov
movsl
cmp
sbbl
mov
jl
call
pop
push
in
out
push
mov
cs
hlt
fcompl
fdivrl
adc
mov
ret
lods
mov
je
push
inc
inc
fisttpl
repnz
cwtl
scas
ret
lcall
insb
inc
lcall
ficompl
xor
test
hlt
adc
dec
pop
xchg
mov
outsb
pop
mov
sub
pop
mov
sbb
enter
and
push
cmpl
lahf
mov
add
popf
xchg
mov
clc
lea
add
movsl
sub
and
sub
and
xor
push
inc
stos
ss
nop
cmpsl
push
test
add
fs
mov
aas
push
out
fs
inc
inc
les
divl
shr
fs
lea
test
jle
fldcw
test
mov
sbb
dec
call
sub
xchg
push
mov
std
jnp
test
leave
and
stc
inc
clc
outsb
mov
sbb
jle
cmp
insb
xchg
jo
sub
fstps
xchg
push
bound
mov
sbb
repz
rorl
and
imul
ljmp
fwait
mov
mov
lods
and
push
fisubs
xor
jl
cmpsl
movsb
fwait
scas
decl
test
nop
cmc
push
mov
movsb
cmp
push
sub
jge
pop
scas
and
fisubrl
imul
insl
bound
mov
cli
hlt
cmp
cmp
nop
xchg
push
negl
clc
push
pusha
fstpt
sbb
and
cmp
xchg
mov
add
sub
jb
mov
xchg
add
mov
jp
sub
cmp
add
push
xor
mov
pop
cmp
out
je
push
hlt
cmpsb
push
in
cmpsl
sti
adc
repz
sub
mov
sbb
mov
stos
jbe
rcll
in
cmp
loope
ret
fisubl
cli
roll
clc
pop
mov
lea
imul
pusha
jmp
ret
jmp
sarb
jp
cmpsl
lret
test
sub
adc
inc
xorl
push
insb
es
jecxz
mov
sbb
iret
out
push
sbb
scas
dec
cmp
xor
mov
data16
cmpsl
inc
stc
mov
loop,pt
int3
imul
dec
lea
sub
add
outsl
lcall
mov
ja
dec
loop
adc
lret
loop
pop
sub
mov
test
fucom
mov
cltd
adc
pop
add
mov
push
push
cwtl
fisubs
or
ds
outsl
push
test
push
mov
mov
lock
cmpsb
pop
sub
movsb
inc
lahf
pusha
cmp
out
dec
xor
sub
cmp
mov
cmp
sub
or
in
stos
into
das
lcall
shr
mov
mov
sbb
lret
out
and
xor
mov
push
xchg
mov
fcmovnu
popf
sbb
movsl
jno
movsl
std
in
out
adc
sbb
xlat
or
xor
or
outsl
repnz
mov
outsl
xor
sar
insl
mov
push
add
fnsave
andl
push
loop
pop
xorl
sar
and
xchg
dec
push
shrl
mov
fisttpl
imul
loope
push
push
adc
popa
icebp
mov
pop
adc
movsb
clc
mov
lret
add
bound
and
cltd
jmp
and
sbbb
aad
xchg
dec
cmp
notb
push
inc
jp
sbbl
clc
std
rorl
loope
int
dec
out
lods
iret
adcb
movsl
pop
sbb
mov
shl
in
cli
ljmp
daa
shlb
dec
mov
negl
push
mov
scas
lea
fstpt
xchg
nop
in
sub
in
fwait
lods
pop
inc
mov
lds
or
mov
add
inc
fnsave
cltd
pusha
outsb
cwtl
xlat
insl
mov
hlt
adc
mov
jno
mov
clc
or
test
mov
pop
inc
sub
popf
jae
inc
outsb
sbb
rorl
fsubr
ljmp
xor
adc
int3
lret
cmp
in
jmp
jbe
dec
add
data16
sub
push
push
jno
nop
inc
mov
cmpl
fldt
and
inc
jno
jmp
fdivl
or
add
dec
out
lods
lock
or
cmpsb
sbb
mov
xchg
mov
imull
dec
push
out
loopne
add
addr16
dec
loop
std
push
pop
mov
lcall
sbb
icebp
mov
sbb
cmpsb
icebp
enterw
push
std
or
jne
lods
inc
xlat
push
mov
pop
cmc
cmpsl
imul
push
dec
jl
bnd
add
fsubs
sub
pushf
ljmp
cmp
mov
sbb
pop
sbb
add
cmpsl
inc
daa
in
out
push
cmpsb
push
lods
stos
test
sbb
int
das
icebp
and
test
xchg
outsl
ss
xorl
subl
mov
aaa
int
mov
inc
scas
cltd
push
ljmp
mov
xor
push
and
ds
iret
mov
mov
sbb
xchg
stos
xor
setbe
sub
pop
sub
dec
cmc
xlat
xlat
adc
stos
push
dec
sbbl
sbb
mov
loopne
popa
sarl
mov
sub
int3
sub
out
pop
and
jbe
cmp
pop
jno
push
mov
out
mov
test
ds
xor
movb
movsl
inc
mov
out
inc
shrb
ljmp
movsb
cmp
mov
mov
pop
mov
testb
sahf
or
fildll
adcb
hlt
fdivl
push
sbb
sbb
imul
lods
jg
int
sbb
loop
sbb
jnp
mov
push
jge
push
or
mov
ja
xchg
pop
hlt
xor
sbb
push
jnp
xchg
sub
adc
jo
sub
shll
dec
fcmovnu
sub
popa
jnp
aam
pop
fistl
push
add
mov
mov
rcrl
add
nop
mov
pop
adc
mov
mov
mov
in
les
mov
or
and
add
lret
dec
mov
fadds
mov
and
or
add
dec
mov
and
sahf
sbb
lcall
js
imul
rcll
out
sbb
outsl
pop
hlt
mov
ljmp
or
sub
lods
mov
and
sbb
cmpsb
sbb
xlat
adc
cmp
mov
dec
loope
xchg
pop
push
lods
and
push
je
js
push
call
loopne
push
in
rclb
mov
inc
cmpsl
inc
pop
adc
jg
dec
loop
nop
and
int
inc
scas
pop
push
sbb
leave
fucomp
cmc
jl
mov
fimull
cmpsb
or
mov
mov
pop
and
lds
dec
cltd
jle
xchg
shr
xor
lret
push
cmc
test
or
xchg
xor
mov
adc
sbb
push
jbe
xlat
jbe
int3
arpl
or
adc
cmpl
jnp
test
rorl
jbe
cmp
xor
bound
adc
jno
xchg
and
in
mov
shlb
push
in
xchg
xchg
iret
pop
scas
and
jnp
leave
mov
dec
push
sahf
pop
or
xchg
and
push
jmp
nop
lods
sub
and
cmc
jbe
pushf
cmpsl
jbe
or
mov
sub
pushf
sub
sub
loopne
sub
mov
push
shlb
bndstx
aaa
cmp
jne
jno
popa
push
movsl
repnz
jg
pop
adc
xchg
daa
out
adc
and
jecxz
es
lret
fdivrp
cmp
subb
clc
test
jne
mov
rcr
mov
movsb
cmp
js
add
mov
ljmp
imul
jl
xchg
ljmp
rorl
mov
xchg
sarl
adc
or
mov
iret
loop
nop
arpl
stos
inc
pop
cmp
enter
cld
jbe
aam
or
push
pop
andb
xchg
lret
cwtl
mov
mov
and
jne
aas
lea
cli
cld
or
cmpsl
out
fstps
adc
nop
jae
and
mov
sbb
adcb
jne
mov
pop
cwtl
adc
cvtps2pd
push
je
mov
sub
dec
stos
xlat
sarb
imul
add
enter
cmpsb
xchg
ja
dec
mov
in
test
cmp
cmc
add
popa
add
xchg
nop
mov
xorl
fiaddl
mov
or
iret
or
cmp
xchg
push
stos
dec
inc
mov
shll
fimull
pop
addr16
out
sub
inc
fildl
or
and
push
out
cmp
add
cld
repz
shr
test
je
inc
sub
or
dec
int3
arpl
insb
add
dec
mov
xchg
or
fst
testl
into
push
jne
cli
popa
lods
mov
dec
cmp
xor
cmp
negb
test
or
inc
leave
lea
pop
jl
push
xchg
cmpb
jge
js
mov
push
ss
imul
das
lods
add
test
inc
inc
mov
mov
xor
insb
loopne
movsb
pushf
pop
into
adc
inc
outsl
xor
pop
cmpsb
add
jnp
jg
stos
jbe
mov
cli
lret
testb
cs
xor
outsb
sbb
xor
mov
lods
mov
repz
scas
add
pop
movsl
jne
xlat
inc
cld
push
mov
xchg
jns
or
lock
pop
in
mov
cmp
sub
mov
fadd
push
xchg
cmp
xorb
pop
and
sbb
and
push
rcrb
jno
jne
sbb
fwait
push
ficomps
aaa
and
in
scas
cmp
and
cli
xchg
enter
mov
jbe
and
mov
aaa
pop
call
fdivs
aam
testl
addr16
pushw
push
nop
pop
aam
lret
fiaddl
mov
call
and
jno
xor
and
out
jg
xchg
lods
outsb
cmp
jnp
mov
scas
xchg
cld
or
es
jle
jmp
popa
jns
sbb
xchg
mov
jp
mov
lock
loope
idivb
xchg
push
iret
sbb
js
andb
mov
inc
das
push
shlb
dec
xchg
mov
sub
sub
jnp
jb
ljmp
aad
and
inc
fildl
inc
cmc
nop
cwtl
xlat
outsb
sbb
ds
or
xchg
cld
xchg
or
mov
outsb
add
jo
int
out
cmp
adc
mov
mov
fisubs
add
aas
cmp
pop
outsl
pop
out
fidivl
adcl
sbb
and
add
data16
aad
bnd
imul
sbb
sti
ds
cwtl
pop
aaa
rcll
mov
rolb
mov
jns
gs
ljmp
jp
out
mov
gs
adc
lods
mov
pop
mov
or
jno
rcrb
ss
cwtl
pmaxsw
inc
xchg
cltd
mov
xchg
pop
push
call
sbb
xchg
pop
mov
mov
mov
sub
fsubr
aaa
stc
jmp
cmp
dec
push
jno
inc
xchg
arpl
mov
ret
arpl
daa
ja
mov
test
jp
pop
and
movsl
in
pusha
cmp
jno
jns
push
stc
pusha
mov
jbe
push
mov
jb
push
sub
flds
out
loope
pop
in
daa
inc
push
push
int3
cmp
sub
inc
popf
ljmp
fnstsw
cmp
jne
ds
push
out
fnsave
inc
data16
pop
sti
mov
cld
sub
xchg
push
push
dec
hlt
arpl
cmp
imul
mov
jmp
inc
pop
fistl
push
or
add
jne
movsb
cld
xchg
jns
inc
orl
push
push
int3
test
jns
adc
jecxz
repnz
cmpsl
testl
push
xchg
js
lods
outsl
ret
mov
cmp
lds
xchg
pop
xchg
adc
std
js
dec
push
dec
test
lods
aam
xor
push
int
sbb
xlat
leave
movl
xchg
add
pop
andb
mov
mov
ret
or
mov
sarb
jmp
adc
jo
xchg
xor
cmp
push
mov
mov
mov
xchg
cld
sti
inc
push
aam
jb
sbb
fidivrl
dec
pushf
stos
xchg
cmp
popl
cmp
add
mov
outsl
jnp
out
cmpsb
xor
insl
push
dec
pop
cmp
in
sbb
mov
lds
insl
add
andb
outsb
pop
arpl
xchg
cmp
pushl
fistl
in
dec
xor
test
loope
pushf
cmp
fstpt
into
dec
inc
jo
xchg
mov
aam
rorb
daa
mov
cmpsb
imul
mov
test
xor
jl
add
nop
cmp
fldcw
push
subb
adc
lcall
push
cmp
pop
neg
jb
into
lahf
daa
leavew
movsb
or
and
out
xchg
inc
imul
ljmp
pushf
hlt
mov
mov
sbb
push
jg
or
dec
mov
cli
jl
clc
addl
stos
add
decb
xchg
popa
jns
mov
xor
ds
adc
inc
dec
mov
ror
or
sti
sar
push
dec
lea
mov
jbe
push
rcl
jl
fsubr
push
pusha
cmp
or
je
xlat
in
int3
jmp
sbbl
push
cmpsl
jbe
and
loope
inc
and
jno
test
cli
fwait
push
add
mov
push
sub
lds
repnz
xchg
adc
je
mov
and
or
push
xor
stc
pop
add
push
scas
scas
sub
int3
sbb
push
in
add
push
daa
cmc
lods
mov
pusha
add
xchg
or
push
or
sbb
mov
pop
and
sub
xchg
lcall
scas
jne
out
xorb
out
sub
and
mov
aas
dec
pop
pop
rorb
mov
mov
push
sub
push
inc
scas
js
pop
mov
lock
mov
push
jp
mov
out
cmc
mov
scas
mov
loopne
cmpsl
clc
mov
sub
dec
aaa
add
and
push
cmp
roll
popf
shr
mov
add
mov
pop
movsl
cld
stos
pushf
div
mov
dec
mov
mov
mov
mov
mov
cmp
cmp
shrl
fstps
mov
je
adc
push
loope
rcrl
mov
sahf
mov
jbe
xchg
jbe
jae
jge
cwtl
mov
push
mov
cld
lret
push
cmp
xchg
movsb
mov
jecxz
or
mov
shrb
mov
push
or
or
lea
sarb
mov
sub
jge
pop
xchg
popa
clc
enter
ljmp
jg
or
stos
scas
and
jb
xchg
add
clc
jg
insb
fmulp
scas
mov
adcl
cmpsl
cmpsb
jo
rolb
push
loop
or
movsl
test
mov
js
add
aad
and
ror
sbb
fs
sub
stc
lods
les
ret
dec
pop
lds
sbb
repnz
mov
xchg
add
je
xchg
sahf
push
ja
or
sbb
jge
and
aam
sbb
cmpsb
call
or
inc
mov
jmp
dec
das
inc
mov
add
mov
mov
push
sbb
icebp
repnz
aas
xor
push
sbb
and
ss
pop
mov
outsb
xchg
pop
cmp
dec
dec
pop
jae
stos
inc
fists
mov
pushf
mov
pop
xor
mov
and
pop
loop
adc
or
mov
or
xchg
and
push
push
lods
aas
adc
lea
xchg
inc
pop
fnsave
push
jb
mov
mov
inc
in
sub
and
jmp
mov
nop
mov
add
cmp
adcb
jb
lret
divl
lock
xchg
cmp
inc
sbb
out
xchg
adc
orb
int
mov
popa
fsubs
or
mov
add
push
in
mov
cmp
fisubrl
lcall
pop
inc
push
or
mov
sbb
sub
pop
shlb
push
std
mov
pusha
mov
lea
imul
push
mov
xchg
xor
mov
cmpsb
cmp
out
sbb
mov
dec
xchg
push
mov
scas
call
pusha
cmp
jge
sbb
cli
lret
pop
imul
out
pop
pop
movsl
lock
mov
add
loope
mov
in
and
jmp
mov
mov
push
ret
ret
aam
mov
dec
loope
dec
in
hlt
push
push
jne
lretw
jne
test
outsl
sbb
cld
adc
jbe
ja
jge
mov
jle
in
dec
push
lret
sub
data16
mov
andnps
cmp
ret
inc
mov
dec
loop
pop
cli
or
fnstsw
push
lret
adc
and
xor
ret
out
pop
test
jecxz
cmp
xchg
dec
jmp
insb
pinsrw
adc
loope
xchg
insl
aad
icebp
dec
or
mov
aam
out
cmpsl
cli
ret
jnp
mov
shl
rclb
movsb
xchg
push
sub
ficomps
frstor
pop
sub
xor
test
and
roll
fnstenv
push
xchg
fidivrs
sbb
mov
iret
xorb
sbb
xor
xor
pop
pop
mov
cli
fsubs
or
dec
push
shlb
jg
pop
icebp
fcmovnbe
adc
jbe
fsubp
fs
test
sub
int
add
inc
mov
or
iret
repz
stos
lock
fcmove
ja
or
popa
mov
xor
test
dec
xor
dec
nop
pop
ss
inc
jne
jbe
push
pop
cmpsl
mov
or
pop
stos
xchg
jp
or
fimuls
or
aaa
lret
scas
pop
clc
jae
or
aas
je
mov
rcrl
inc
sbb
xor
xchg
dec
fldenv
lcall
and
sbb
mov
cmpsl
dec
popa
or
sarl
mov
fmulp
test
bound
sbb
daa
mov
pop
pop
mov
movsl
mov
mov
in
addr16
adc
imul
push
jbe
xor
mov
dec
in
push
pop
adc
or
lahf
dec
stos
inc
jb
xchg
mov
int
sub
push
pop
fnstsw
jno
jmp
cmpsb
dec
scas
cmp
or
jns
das
mov
fnstsw
fisubl
adc
jmp
arpl
sub
sub
leave
dec
scas
cmp
mov
lret
mov
xchg
outsl
sbb
mov
jb
adc
lock
es
push
or
sub
das
xor
dec
lods
xchg
dec
mov
cmc
adc
ja
fbstp
js
stos
mov
jg
adc
ret
or
push
rcll
shrl
mov
mov
pop
aas
flds
mov
xor
imul
xor
mov
mov
aas
test
jbe
push
stos
fwait
jo
mov
ljmp
sbb
mov
add
mov
sub
jp
mov
mov
in
popa
aad
stos
sarb
cmpsl
mov
js
add
aas
pop
mov
pop
and
dec
fwait
mov
jno
jmp
jo
enter
insb
rcll
jns
dec
jmp
sbb
loop
lret
shll
test
add
ficoml
jg
adcb
xchg
test
mov
in
repz
mov
xchg
jne
push
xor
push
icebp
inc
rol
fbstp
ljmp
in
mov
inc
jb
shll
sbb
push
repnz
mov
mov
add
aaa
or
sub
sub
call
popf
das
repnz
leave
mov
dec
adc
shrb
int3
jp,pn
xchg
sub
mov
sbb
pop
sub
mov
mov
fdivs
lea
and
movsb
std
int3
sahf
gs
push
pop
mov
add
cmp
lods
addr16
sbb
cld
cmp
leave
jae
scas
loopne
and
push
mov
pop
ret
fmul
xchg
test
sti
fxtract
jbe
fs
jle
out
fwait
inc
push
dec
pushf
inc
jnp
int
out
sbb
mov
fsubrs
or
add
mov
test
call
or
jb
add
or
insb
lcall
dec
mov
jge
pop
aam
mov
cmp
ljmp
adc
pop
test
addr16
mov
inc
insb
pop
shrl
lea
sub
stos
imulb
aas
aas
fldl
stc
clc
lahf
movsb
daa
sbb
repz
jno
fimuls
movsl
fisttpl
add
adc
mov
stc
or
lcall
xor
jecxz
imul
andb
daa
push
mov
adc
aaa
push
mov
roll
cld
mov
cmpsl
cld
test
lret
pop
hlt
pop
fldt
pop
int3
bswap
adc
mov
sahf
adcl
cmp
stos
imul
insl
jne
mov
mov
add
les
xor
movl
lds
sti
rcrl
push
push
xchg
mov
popa
lods
add
pop
mov
lock
inc
sbb
lods
ror
sub
hlt
xor
mov
cmc
pop
imull
dec
ljmp
scas
cmp
rol
xchg
imul
sbb
add
pop
push
mov
xchg
insb
imul
repz
ret
push
imul
cmc
pop
sub
sti
push
adc
cld
push
cltd
dec
in
jb
adc
out
and
addr16
mov
out
aam
fucomi
test
pop
add
mov
cs
add
js
xchg
leave
adc
divl
lods
arpl
cmp
mov
cmp
inc
fstpl
push
bound
jp
fdivrl
lods
sub
xchg
test
pushf
lock
repz
jne
and
and
into
push
jg
xchg
and
pop
xor
fbld
fisubrs
mov
lret
sqrtps
push
aas
dec
jl
ret
in
jns
outsl
pop
popa
xor
jbe
pop
jno
dec
ja
jne
and
adc
xchg
dec
xchg
mov
in
or
pusha
subb
mov
xor
jae
movb
gs
adc
jb
xor
jb
fdivl
pop
inc
fwait
dec
xchg
mov
lahf
cmp
in
movsb
add
in
dec
out
xchg
lcall
add
mov
add
inc
push
imul
xchg
sbb
shl
sub
adc
mov
lea
sbb
mov
xchg
push
pop
enter
aad
jns
push
mov
mov
inc
lock
sbb
pusha
push
fists
push
unpckhps
pop
dec
inc
lcall
in
inc
pusha
or
sub
sahf
or
cltd
imul
mov
ret
inc
inc
lock
inc
push
jnp
xchg
jp
mov
lcall
in
xchg
orl
push
icebp
ds
cmp
es
fimuls
ja
jl
lret
jns
in
push
call
push
sbb
pop
mov
jo
dec
rorb
es
inc
cli
dec
xor
mov
lods
jle
inc
gs
xchg
into
pop
xor
cmp
jbe
push
cmpsl
jp
jge
add
in
add
cmpsl
fcomi
ljmp
cmp
test
xchg
cmp
jno
cwtl
sub
pop
mov
push
add
jmp
push
jle
lret
out
push
loope
sub
jbe
sti
pop
addr16
repz
jg
sbb
movsl
inc
stos
jmp
cmpl
adc
jl
sbb
mov
inc
adc
dec
cmpsb
push
inc
or
or
lahf
cmpsl
popl
icebp
or
mov
push
subl
mov
ret
pop
mov
push
jno
sahf
lahf
test
lock
and
adc
jle
mov
stos
dec
ds
cld
dec
and
push
jbe
mov
mov
cmpsl
mov
cmpsb
cltd
mov
or
mov
mov
sbb
rcr
das
mov
xchg
pop
imul
jns
fimuls
mov
push
ficoml
mov
nop
jg
pop
lea
adc
mov
sub
out
lea
insb
rolb
cmc
or
jg
mov
lods
andb
daa
add
dec
movsl
cmp
test
testb
and
push
inc
cld
cmpsb
sahf
ss
jns
fwait
or
jo
mov
imul
pop
icebp
orb
pop
fisttps
dec
dec
mov
xor
mov
shl
loop
xchg
xor
push
push
movb
fs
repnz
fiaddl
bound
xor
and
xchg
mov
mov
popa
mov
jecxz
aas
sbb
and
iret
mov
jne
or
xchg
cmp
test
pop
add
adcl
xchg
adc
cmpsb
jbe
mov
nop
push
dec
sbb
sub
sub
mov
mov
loopne
push
insb
sbb
mov
xor
add
neg
mov
inc
mov
push
rcrb
mov
insb
push
mov
add
lods
mov
cltd
mov
jmp
mov
xor
jno
aas
xchg
sahf
sbb
cmp
dec
rclb
push
xchg
xchg
in
and
pop
xor
cmp
adcb
cmp
mov
dec
mov
andb
shll
pop
fs
mov
lret
stos
cltd
sbb
adc
stos
sbb
mov
and
lock
inc
inc
and
push
xor
test
fs
inc
dec
push
out
repz
fiadds
insl
inc
nop
pop
mov
and
push
cmp
mov
jnp
and
or
or
addr16
push
scas
xchg
ljmp
jbe
enter
mov
jmp
xchg
adc
and
xor
push
in
test
call
rorl
fsubrl
lds
lcall
mov
fmul
in
cmpsl
mov
in
stos
loop
xchg
jbe
movsb
dec
movsb
test
lds
lahf
adc
inc
fwait
xor
push
push
sbb
insb
add
cmp
js
or
sub
sbb
dec
inc
dec
pop
pushf
jg
adc
inc
dec
mov
mov
jge
es
aad
jge
lcall
mov
mov
es
aas
and
div
fsubrl
int3
mov
fs
sub
cmp
fsubrp
sbb
idiv
lds
sbb
test
pop
and
inc
mov
inc
imull
popf
dec
rclb
and
pusha
cmpb
pop
and
lds
and
and
lods
jne
adc
gs
pushf
push
adc
and
test
pop
out
sub
mov
cld
mov
pop
jnp
mov
push
inc
jl
sbbl
mov
mov
ret
movl
loop
mov
sbb
fwait
je
mov
std
in
mov
psubsb
mov
lcall
inc
dec
xchg
call
jecxz
les
pop
cmpl
pop
mov
nop
stos
pusha
xchg
push
sub
loopne
scas
push
sar
fwait
pop
shlb
popa
test
lret
push
aaa
imul
xchg
aas
pushf
xchg
lahf
mov
xchg
std
sbb
xchg
repz
test
cmp
cli
test
clc
push
in
incl
xor
sbb
out
add
pop
cs
mov
push
adc
cmc
les
pop
jns
mov
stos
adc
sbb
orl
xchg
call
out
outsb
loope
je
xchg
addr16
cmpsl
rcll
std
movsb
dec
in
pop
adc
push
inc
jl
nop
xchg
arpl
enter
ja
push
mov
and
lods
popf
dec
dec
push
cmp
arpl
push
iret
and
rorl
repnz
mov
hlt
and
test
pop
sub
cmpsb
push
pusha
fstpt
dec
cmp
fdivr
cs
pop
jle
mov
repnz
repnz
adc
dec
mov
mov
mov
mov
js
popf
movl
ds
scas
nop
cmpsb
mov
dec
jecxz
xor
mov
gs
sub
push
sbb
mov
in
or
lcall
pop
cli
sbb
pop
test
cltd
scas
std
mov
xor
je
aas
mov
xchg
dec
frstor
mov
fdivs
pushf
ja
rorb
push
mov
mov
popf
stc
js
call
pushf
dec
dec
push
je
mov
mov
jb
cmp
mov
lahf
and
push
lret
lock
xchg
add
adc
pop
and
ret
leave
cmpsl
out
iret
lock
pop
gs
pushf
pop
sub
mov
pop
outsl
and
hlt
mov
xchg
adc
push
cmp
push
or
add
push
loope
push
out
push
mov
loope
icebp
add
cmp
adc
scas
jg
test
mov
lcall
lea
xchg
test
leave
test
xchg
js
dec
xor
daa
adc
inc
mov
sar
cmp
hlt
mov
add
outsl
xchg
mov
add
mov
test
les
pop
xor
repz
aaa
mov
loope
adc
xchg
push
in
push
aas
ret
mov
sti
sarl
ss
daa
dec
ljmp
mov
enter
pop
cld
add
sbbb
pop
cmp
pop
sahf
das
outsl
pop
movsl
push
cld
or
loope
push
out
inc
cli
clc
aaa
movsb
mov
loop
sub
test
cli
test
push
hlt
pop
xor
pop
andb
and
sti
inc
loopne
adc
xor
cmpsb
mov
stos
adc
jmp
test
call
and
addr16
xor
ljmp
sub
js
xor
popa
aad
in
dec
inc
cwtl
mov
test
enter
add
or
push
andb
pop
ds
addb
xlat
scas
mov
fbld
jne
sarb
ret
test
test
cli
divb
xchg
mov
mov
lds
pop
imul
in
fcomip
mov
xor
inc
enter
xchg
idivb
mov
add
int3
xor
cmpsl
or
fildl
jl
pop
cmp
ror
shrl
lds
jne
sub
loop
cs
test
outsb
push
pusha
xor
sub
push
shll
aad
leave
outsb
sub
ret
outsl
inc
in
dec
mov
jne
add
cld
mov
mov
pop
xor
jp
in
and
nop
sbb
flds
adc
adc
push
xor
sbb
leave
pusha
les
pop
sub
push
pop
imul
cmpl
jbe
sbb
hlt
and
test
ret
addr16
imul
int3
test
scas
and
sub
mov
jo
lods
stos
xchg
or
lcall
sahf
mov
xor
jb
sbb
pop
sbb
les
mov
clc
pop
mov
inc
dec
mov
loope
clc
jae
cli
mov
xchg
sbb
xor
adcb
jecxz
cmp
sub
adc
xorw
icebp
xchg
adcb
loope
fucomp
mov
cmc
call
cmpb
sarb
add
jge
stos
and
leave
push
mov
movsb
pop
xchg
shlb
jl
jb
pop
sahf
cmc
scas
or
daa
push
sub
test
bound
push
mov
mov
stos
call
mov
int
je
dec
lods
push
mov
adc
jno
jb
xor
inc
cmpsl
lea
shrb
xlat
sbb
pop
daa
es
mov
or
ret
fdiv
insb
jge
insl
sahf
cmp
out
cs
push
adc
dec
push
in
pop
mov
cmp
andb
andb
add
cmp
shrl
pop
enter
out
mov
jge
arpl
push
mov
or
std
aas
int
xor
lcall
out
call
sbb
and
stos
dec
mov
cmp
sub
jne
cltd
xor
stos
ret
test
mov
andb
fistl
mov
xor
push
or
fmull
sahf
inc
mov
dec
fs
sub
and
push
aad
inc
mov
cmp
movsb
out
cmp
sbb
adc
outsl
pop
icebp
push
stos
popf
jmp
add
push
lock
das
cmpsb
inc
add
fcomps
xchg
mov
iret
push
jmp
add
xchg
mov
xor
xor
jp
xchg
push
rorl
outsl
xchg
stc
inc
mov
mov
loopew
test
xor
pushf
inc
cld
outsl
xor
sar
loopne
sbb
cmp
sar
mov
adc
int3
mov
push
adcb
mov
pop
mov
adc
dec
out
fcmovnb
xchg
lea
xor
mov
imul
cmpsb
xor
cmc
dec
repz
mov
add
adc
sub
adc
dec
cmc
f2xm1
and
or
add
int
clc
inc
loopne
fwait
push
das
into
push
inc
bound
inc
cld
movsl
or
push
outsl
arpl
adc
and
xor
inc
push
inc
add
jle
sbb
fidivs
outsb
xchg
into
gs
addr16
cmpsb
push
jb
test
ja
push
inc
popa
enter
xlat
out
int3
arpl
mov
adc
sarl
int
push
daa
fldt
in
mov
mov
mov
pop
or
imul
cld
xchg
pop
outsb
pop
jb
loop
nop
imul
cmp
shl
out
jp
inc
add
ret
es
lret
rcr
loope
push
xchg
cmp
shlb
xchg
or
or
jl
dec
jle
mov
pop
sahf
ljmp
cmp
int
mov
adcb
jne
pop
stos
sbb
mov
inc
test
push
adcb
in
int3
pop
jl
dec
sbb
lahf
adc
sub
lods
mov
scas
add
fidivs
lods
lret
xor
jl
adc
sbb
or
in
and
mov
mov
or
ljmp
push
mov
loop
and
lret
xchg
mov
jbe
mov
into
mov
mov
mov
aas
mov
fdivs
pop
cmp
adc
cltd
aam
push
outsb
sbb
xlat
and
aaa
mov
lret
repnz
jmp
pop
jecxz
pushl
repnz
mov
lods
mov
pop
mov
and
fs
mov
jo
mov
fcoms
push
push
jg
xchg
cmpsl
or
stc
dec
je
in
fldenv
mov
mov
aam
andb
mov
out
mov
mov
or
bound
fsubrs
cmc
inc
mov
mov
ret
jp
mov
aas
or
shrl
push
mov
sub
push
lods
cmpsb
insl
and
push
cld
sarl
data16
out
sub
push
or
scas
xchg
mov
loopne
sub
std
dec
hlt
mov
out
xchg
and
loop
cld
and
xchg
clc
mov
sbbb
idivb
stos
sbb
enter
ja
jns
fistps
and
or
in
mov
push
out
inc
mov
movsl
and
mov
mov
outsb
sbb
jnp
ds
out
fdivrl
mov
sub
push
mov
int
aas
stos
scas
cmovae
sub
shr
jae
imul
je
mov
adc
sub
icebp
push
call
adc
mov
mov
mov
loopne
scas
sti
jbe
sbb
rcl
pop
jmp
dec
mov
lret
out
shl
mov
scas
xor
push
sub
aaa
pavgw
adc
insl
pop
ret
xchg
add
in
jp
sub
jns
dec
inc
in
jp
add
xchg
inc
cmpb
ds
fsubrl
push
aam
jo
jge
add
repnz
mov
rol
rcr
call
cld
jl
mov
lcall
fsts
sbbl
daa
mov
sub
out
cmp
pushf
jge
lahf
push
js
dec
add
test
ficoms
and
dec
pop
rcll
sbb
shl
cmovp
and
aad
xchg
mov
cwtl
pop
dec
in
xor
outsl
push
stos
cmpsl
add
add
in
xor
push
lahf
push
aas
pop
sbb
loope
fisttpll
call
daa
mov
mul
and
xchg
out
sbb
add
sub
pushf
add
loope
ljmp
loope
cwtl
push
ds
ja
or
cmp
xor
add
pcmpgtb
rcrb
mov
data16
ljmp
xchg
pop
xchg
loope
dec
cmp
mov
and
sbb
fs
lcall
in
clc
lret
sub
push
xchg
pop
rclb
sub
and
dec
pop
hlt
jns
push
lea
push
mov
pop
add
cmp
adc
in
test
mov
jne
dec
xor
cmp
enter
bound
xchg
adc
rol
sbb
js
stc
mov
shll
sbb
xor
cld
lcall
jbe
dec
jne
negb
jno
fcoms
dec
cmpsb
popa
and
mov
add
inc
pop
imul
insl
inc
or
dec
sbb
mov
jnp
insb
shl
mov
imul
orb
dec
xor
pop
mov
rcr
sub
sub
arpl
cmp
push
inc
pop
sahf
xor
mov
jbe
xor
pop
inc
arpl
iret
pop
xor
sub
pop
sub
ds
mov
gs
cmc
pop
inc
pop
jae
lret
cmp
push
out
movsb
sub
fwait
lods
adc
iret
clc
bound
call
leave
popa
mov
cmp
decb
ds
pushf
ja
push
mov
jno
add
dec
sub
mov
mov
test
xchg
jmp
ja
mov
insl
in
enter
or
rol
mov
ret
adc
push
push
mov
adc
cmc
loop
inc
lcall
stc
dec
dec
xor
outsb
stos
push
inc
xchg
mov
inc
dec
xchg
loope
outsb
mov
lds
andb
mov
sbb
daa
cmpsl
mov
pusha
sbb
in
pusha
aaa
loopne
cmc
mov
push
sbb
push
sbb
mov
dec
adcb
mulb
jo
ljmp
mov
mov
out
icebp
test
pop
je
ret
lret
fidivrs
and
repnz
sub
dec
mov
mov
fsts
mov
cs
add
icebp
mov
int
jge
adc
xor
into
sbbb
fisubl
aaa
mov
and
je
iret
or
cmp
loop
movsl
fdivrl
add
lret
in
jbe
inc
and
lods
pop
iret
cld
inc
aas
adc
or
pop
leave
insb
mov
rol
arpl
dec
scas
out
xor
push
dec
enter
testl
into
stc
or
in
mov
cmp
sbb
fdivr
add
lahf
push
test
pop
xor
xchg
les
stc
in
out
cmp
jp
flds
pop
sbb
lret
into
test
out
jae
movsl
or
mov
sub
pop
pusha
sti
shlb
mov
mov
push
ljmp
call
repz
push
pop
cltd
jmp
push
xor
dec
and
std
es
adc
jmp
cmp
sub
psubq
dec
adc
stc
add
repnz
shll
andb
les
fiaddl
sbb
xor
pop
mov
mov
mov
fucom
cli
push
mov
inc
jge
fldcw
les
pop
fstl
push
ret
jns
xor
lcall
in
jmp
loope
repnz
inc
test
ja
int3
sbb
mov
lcall
popa
jbe
inc
pop
into
and
std
cmp
outsl
fwait
into
fpatan
bound
mov
int
jge
xor
pop
pop
fdivrl
dec
outsb
mov
pop
mov
out
outsl
outsb
imul
js
add
lods
jae
fdivrs
sbb
xchg
xchg
adc
decl
iret
sbb
pop
push
xchg
cmpsl
and
mov
push
jns
aaa
es
xchg
pop
mov
pop
jae
xchg
mov
cmpsb
cmp
outsb
pop
mov
lahf
into
push
jbe
cmp
sbb
iret
cmpsb
jne
pop
call
or
test
xor
xchg
jb
les
icebp
test
test
scas
mov
or
jg
ljmp
leave
aaa
or
xchg
popf
cltd
lahf
testl
cwtl
pop
out
xor
jge
enter
cmp
xlat
ss
aaa
clc
and
sbb
cltd
xor
jmp
inc
pop
movsb
adc
mov
sbbb
sbb
test
pop
cmp
or
mov
push
jmp
inc
pop
fidivs
lods
pop
push
pop
fdivl
push
add
imul
sahf
and
pop
xor
pop
ret
add
mov
imul
notb
dec
xor
mov
xchg
ljmp
popa
inc
push
sub
pop
xchg
test
lds
sahf
or
mov
cmp
mov
jb
push
jno
out
cmpsl
gs
inc
into
mov
ja
and
inc
fdivr
xor
cmp
lea
insb
inc
xchg
push
cmpsb
xchg
mov
push
adc
and
mov
ss
fdivrs
push
sahf
inc
sahf
pop
jmp
fnstsw
push
sub
xchg
mov
sub
mov
cmp
cmp
aad
lahf
and
fwait
mov
push
lcall
in
or
dec
popa
and
push
jmp
test
fisubl
lret
out
push
cmc
das
inc
int3
test
aas
arpl
movsb
add
adc
icebp
mov
ds
cmp
mov
mov
and
in
rorl
mov
enter
push
pop
lock
incl
pop
test
sbb
arpl
xrelease
popa
loope
rolb
mov
lret
sub
insb
iret
in
sbb
movsb
insb
pop
mov
mov
cmp
cltd
cmpsl
push
mov
push
lahf
shl
clc
fdivrl
xchg
jnp,pn
mov
repnz
mov
mov
push
cwtl
dec
push
imul
mov
scas
sti
shlb
inc
push
scas
loopne
arpl
xchg
sbb
rolb
lds
mov
shrl
inc
fs
xchg
ret
icebp
movsl
insl
mov
xor
ljmp
mov
addr16
cwtl
and
mov
push
mov
mov
add
push
jp
lds
cmp
mov
push
jmp
stos
mov
cmp
movsl
nop
stos
inc
out
pop
cmp
mov
or
movsb
xor
cmp
imul
out
popa
rolb
dec
jmp
pop
xchg
repz
jge
subps
aam
inc
jge
ret
hlt
lret
xchg
iret
dec
loopne
mov
addr16
imulb
test
js
jmp
movsb
cmp
pop
or
les
xor
sub
sbb
mov
inc
cmp
adc
pop
enter
xchg
ficoml
bound
addr16
mov
loopne
push
or
test
mov
mov
call
scas
mov
jns
not
jb
xchg
fsubs
dec
push
xor
mov
jnp
jb
or
repz
fdivl
sub
int
mov
xchg
pop
imul
jecxz
jnp
adc
pusha
pop
lret
enter
jb
ja
mov
jbe
inc
and
popa
cld
lret
sbb
mov
pusha
mov
jne
add
clc
jae
lahf
mov
dec
mov
shrb
fcoms
pushf
sahf
call
push
mov
loope
dec
ja
data16
mov
cmp
push
ret
cmpsb
cmp
dec
out
sub
adc
push
dec
xchg
nop
or
xlat
dec
in
mov
jb
sub
rcr
fstpl
idivb
out
xchg
add
pop
jns
xchg
jl
sbb
add
movsb
jo
aaa
in
pop
dec
sub
mov
mov
sahf
and
xchg
cmp
shlb
mov
ljmp
push
gs
ljmp
jbe
loop
sub
repnz
pop
in
xchg
das
push
repnz
sahf
cmp
push
dec
push
cwtl
or
jns
or
mov
test
sarl
dec
repnz
push
rcr
mov
cwtl
das
leave
adc
xchg
mov
aaa
das
stc
mov
aam
and
cmp
xchg
and
inc
fnstcw
or
lret
add
int
testb
xlat
push
or
hlt
popa
stos
fwait
inc
and
adc
addb
test
mov
push
or
sarl
mov
arpl
xlat
ds
ret
stos
lds
ja
sbb
out
xchg
jns
cmp
sbbl
aad
adc
xchg
push
bound
pop
ja
xor
jb
push
adc
jge
cmp
pop
sbb
aad
outsb
in
cwtl
push
loope
mov
jge
xor
pop
mov
mov
repz
cmpsb
ss
mov
add
sahf
sbb
rclb
std
sahf
or
and
push
imul
gs
jo
mov
xchg
cs
add
add
mov
pop
prefetch
or
adc
imul
cltd
stos
add
cld
daa
pop
push
pushf
add
mov
sub
maskmovq
add
imul
pop
xchg
adc
xchg
lcall
cwtl
or
incb
sahf
sub
shll
sbb
jp
pop
cmp
pop
cmpl
push
and
adc
add
shrl
outsb
ret
sub
cmp
add
inc
in
sub
inc
mov
jae
repnz
std
xchg
mov
push
std
loope
inc
negl
lret
push
dec
jmp
xlat
mov
add
or
test
ror
std
sbb
pop
cmp
jb
loop
lock
adc
int3
arpl
outsl
ss
in
fsubs
cmpsb
cmpl
lret
out
std
popf
cmc
cmp
rcll
xchg
or
subl
xor
push
pop
sub
jnp
dec
into
dec
pop
xchg
ret
xchg
lds
test
lock
leave
push
std
aas
xchg
inc
push
mov
sahf
and
fistps
and
mov
sub
mull
mov
cmp
adc
data16
out
xchg
int
jbe
mov
lss
sbb
in
popf
jmp
notb
mov
cltd
into
pop
mov
pop
xlat
repz
cmp
sub
or
pop
sbb
ret
data16
and
int3
lds
inc
gs
rcrb
jno
cmpsl
dec
cld
inc
xchg
sub
in
std
xchg
sub
or
push
je
jb
xchg
cwtl
popf
and
aaa
das
mov
mov
push
loopne
cmp
and
daa
mov
inc
in
cltd
adc
push
je
xor
push
sahf
test
dec
xchg
lds
inc
leave
test
push
test
fwait
xor
sarl
jmp
add
sti
add
or
cltd
pop
mulb
addr16
push
jg
fdivl
fdivl
add
push
push
sub
or
pop
cmp
dec
dec
out
sbb
mov
cmp
test
xchg
out
and
repnz
rorb
sbb
out
iret
mov
jbe
jp
sub
mov
mov
mov
cmpsl
es
xor
shl
lahf
xchg
sub
lcall
cmpsl
and
jp
mov
dec
addr16
loope
iret
sub
fbstp
daa
add
fwait
pushf
scas
add
and
in
int3
bound
outsb
add
test
shrb
ret
lock
test
xchg
mulb
adc
mov
dec
mov
adc
daa
mov
inc
paddd
mov
pop
or
js
cmp
cmp
in
inc
mov
sti
or
push
sbb
sbbb
cmpsb
inc
stos
ds
push
insb
adc
jnp
iret
sub
rclb
test
push
cmc
test
cmp
pop
out
push
inc
inc
add
cmp
jecxz
cwtl
adc
pop
pushf
sub
push
sbb
adc
int3
sub
ljmp
xchg
push
stos
xchg
dec
stc
adc
jmp
icebp
inc
aam
imul
ljmp
mov
sti
ror
cmc
mov
push
aad
push
mov
hlt
xchg
pop
cs
lds
enter
dec
loope
shrl
lahf
sbb
jle
xor
aam
lcall
out
mov
mov
fcmovbe
sub
mov
fdivrp
in
or
negl
mov
ret
cld
pop
pop
adc
in
fsub
sub
sbb
iret
xor
xor
ljmp
pushf
jno
pop
push
add
xor
mov
mov
inc
fldl
push
sub
pop
sub
cmp
cltd
cmp
std
adc
and
pandn
sbb
outsb
test
pop
fs
push
and
sub
enter
dec
test
cmp
sub
xchg
addl
mov
stos
arpl
rorl
arpl
inc
or
fidivs
popa
pusha
add
movhlps
out
test
cwtl
mov
cmpsb
add
add
adc
ss
out
inc
fimuls
das
jmp
inc
lods
mov
mov
mov
adcl
fistl
jmp
cli
das
fwait
lods
mov
xor
jle
lret
push
jmp
dec
dec
cwtl
repz
pop
cwtl
sbb
cmp
dec
arpl
loop
pop
lret
mov
movsl
cmp
popa
dec
bnd
mov
insb
or
in
lods
inc
push
jmp
mov
pop
imul
shrl
pop
add
shrb
mov
cs
imul
lret
jae
out
cmc
cmp
int3
xor
lds
fwait
pop
out
movsl
jp
icebp
jnp
shrl
aam
or
lock
cmp
test
jl
rol
push
push
and
add
decb
stos
jge
push
push
shrb
hlt
ds
es
adc
fmuls
sub
inc
pop
cmp
pop
dec
xlat
dec
jmp
inc
inc
loop
jl
fildl
adcb
sub
in
sbb
fimull
dec
loop
cwtl
aad
pop
sub
ss
addr16
jne
xchg
and
sbb
inc
imulb
fcomip
and
sub
fstpl
adc
addb
mov
cmp
mov
lret
dec
push
cwtl
pop
cmp
dec
jmp
dec
push
jb
fcoml
addr16
jae
subl
xchg
inc
cli
jg
jae
dec
sub
dec
mov
cmp
push
mov
ret
mov
fmull
fbstp
lret
xchg
adc
add
mov
xchg
in
fwait
cs
cmp
ficompl
push
pop
dec
mov
cmp
in
xorl
scas
xor
mov
or
inc
ss
push
inc
flds
dec
outsl
jnp
push
movsb
cmp
pop
cmc
xchg
stos
inc
pop
or
cmp
popf
in
xchg
cmpb
lcall
imul
scas
cmc
cmp
fdiv
adc
cmp
test
sbb
hlt
xlat
adc
adc
repnz
cmp
mov
test
pop
fnstenv
mov
jo
pusha
in
inc
pop
mov
nop
in
push
lock
aaa
push
inc
ret
mov
push
imul
clc
adc
mov
icebp
nop
out
dec
es
ljmp
sbb
xchg
mov
aas
fdivs
cli
daa
cmp
fstps
jae
std
sahf
popa
or
clc
or
pop
push
jb
imul
adc
xor
les
out
xlat
inc
pop
pop
sbb
xor
test
pop
adc
aad
sub
lds
cmc
jo
jne
mov
js
mov
insl
inc
dec
dec
sub
or
push
inc
cmp
mov
cmp
sbb
xor
negl
push
and
sub
bound
mov
sub
pop
out
jecxz
or
dec
roll
cmc
test
sub
lea
pop
push
and
and
std
fiaddl
lahf
testl
fs
out
stos
adc
dec
xchg
mov
sub
xchg
jae
or
cmpsb
hlt
push
add
sub
in
sbb
dec
inc
pop
push
insl
inc
iret
les
loope
imul
outsl
fistpll
inc
int3
pop
jle
add
aad
jns
jg,pt
aas
ljmp
xor
pop
mov
enter
repz
lahf
stos
dec
and
fidivl
sub
repnz
mov
fildll
nop
mov
std
jne
fidivrs
push
mov
adc
jecxz
ss
sarl
addr16
imul
inc
out
std
lea
pop
fstpt
ja
jbe
je
lods
jo
adc
sarb
dec
imul
subb
mov
add
loope
xchg
pop
stc
xor
sub
fcom
ret
inc
cmp
lds
lock
fucomi
or
xor
mov
cli
loope
ljmp
es
lock
in
adc
push
jbe
lea
rcll
adc
xlat
ret
lcall
xchg
outsb
cld
rorb
stos
out
push
and
push
nop
cltd
mov
inc
xlat
lahf
or
sub
insl
mov
xchg
mov
loop
pop
in
jle
mov
xchg
mov
imul
pusha
sbb
pop
ljmp
pop
dec
cmp
and
or
adc
cmp
or
les
add
xchg
jb
popf
sbb
out
add
shrb
adc
aaa
aad
sbb
sbb
mov
push
stos
sub
dec
cmc
add
pushl
shll
sub
loope
sbb
movsl
repz
test
inc
mov
mov
mov
cmp
fmull
outsl
and
or
xor
mov
add
jg
stos
fisubrs
test
je
mov
clc
ret
sub
jecxz
xor
jp
out
or
dec
mov
xor
pop
fsubr
cmp
enterw
movsb
nop
sub
xor
fidivl
stos
js
push
sub
insb
sti
jecxz
inc
sbb
dec
sub
stos
push
call
pop
add
jb
insl
mov
jo
mov
pop
lea
xor
ret
push
sub
or
out
sbb
dec
adc
insl
fs
ret
int
pop
loopne
mov
sub
bound
lcall
inc
mov
lds
fcompl
jb
in
push
popf
popl
sub
jnp
not
jo
add
test
jp
incb
or
pop
adcb
xchg
mov
dec
pop
movsb
std
sub
push
push
scas
sub
roll
jg
subb
sti
adc
sub
mov
pop
inc
add
negb
shl
cmp
clc
out
cmp
test
icebp
sub
push
pop
adc
sub
aam
inc
cmpsl
out
xor
mov
jo
stos
mov
fistpll
je
pushf
lods
loope
xlat
cli
mov
mov
adc
shlb
mov
icebp
pop
cli
pop
loope
inc
push
shl
movsl
inc
mov
push
call
adc
mov
in
adc
push
or
push
sbb
adc
mov
testl
leave
cmp
fs
inc
or
cmpsl
xor
popa
jp
std
jno
xor
in
push
xorb
scas
mov
pop
scas
push
jo
fcompl
xchg
mov
mov
lock
and
jbe
cli
rcrb
fiadds
sbb
div
jne
fadd
ds
jo
xchg
jge
xchg
adc
and
ljmp
mov
adc
mov
les
cwtl
outsl
sub
into
xchg
xor
push
lahf
out
sbb
fdivrl
lret
lret
jl
movsb
cmp
aam
pop
xchg
iret
into
hlt
negl
shlb
int3
cmp
and
push
cmpsl
jl
sbb
inc
movsl
mov
rcrb
rclb
nop
cmc
pushf
push
sbb
pop
call
mov
into
mov
hlt
ja
push
mov
inc
cmpsl
out
cmp
and
pop
fwait
in
adc
jl
ret
jae
fwait
xor
scas
push
inc
push
jae
psraw
xor
push
int3
rorl
add
sbb
ffreep
add
out
sti
and
mov
jae
movsb
dec
mov
rol
pop
add
and
cmp
mov
pop
out
push
push
push
cmp
mov
call
inc
test
out
repnz
stos
xchg
xchg
sub
negl
sbb
xor
add
cmp
sub
lea
cmpsl
mov
repz
int3
pop
push
fdivrl
inc
xor
shl
out
popf
loope
add
push
mov
sahf
adc
dec
mov
mov
inc
popf
sub
iret
lea
inc
dec
test
stos
mov
aad
je
orl
mov
fwait
rcll
push
and
mov
loope
call
loopne
xor
fcomip
cmp
xor
movsl
lds
lods
inc
testb
or
and
push
dec
cmpsb
les
sarb
adc
push
jmp
ret
lds
not
es
sub
fidivrl
vcvtdq2pd
xor
dec
mov
loopne
pushf
in
mov
pop
push
in
scas
rcll
arpl
dec
push
push
ljmp
insb
enter
xchg
or
mov
jnp
dec
lcall
and
popa
or
shrb
movl
mov
std
repnz
outsl
dec
aaa
pop
in
cwtl
sti
lock
mov
dec
push
adc
shlb
inc
mov
pop
sbb
mov
sub
jg
sub
pop
dec
sbb
fwait
or
adc
out
add
rol
lock
or
add
push
dec
pop
xor
es
adc
add
pushf
sti
xor
jmp
xchg
push
xchg
mov
outsl
and
imul
pop
mov
xor
mov
in
ja
mov
push
pop
jne
adc
ficompl
push
cmp
dec
pop
sbb
popf
cmpsl
push
xchg
ja
ljmp
and
add
fs
outsb
test
inc
test
test
loope
mov
add
sub
repz
add
lock
je
jo
pop
push
hlt
call
mov
pop
out
imul
sbb
aad
xor
repz
or
shr
loop
pop
pop
sbb
sbb
xchg
xor
inc
xchg
lods
sub
jne
dec
cs
aaa
dec
jb
andb
mov
cmpsb
in
mov
push
jp
sbb
and
pop
outsl
adc
or
inc
mov
jg
cmp
pushf
cli
sbb
sbb
xorb
add
orb
in
mov
lret
mov
scas
out
inc
xchg
sub
mov
loope
das
adc
repz
cmp
fbld
test
imul
xchg
roll
mov
xchg
cmc
jp
test
jle
jnp
fdivrs
pop
add
add
xlat
adc
lods
cmc
jno
dec
ds
in
repnz
xchg
mov
cmpsb
flds
or
mov
stc
xor
xchg
repz
pop
adc
push
mov
pop
cmp
mov
outsl
push
and
mov
ljmp
pop
add
pop
jne
test
xor
mov
push
iret
xchg
inc
mov
mov
insb
scas
sub
loope
das
jnp
add
cmc
or
fsubp
add
cmp
jo
inc
and
leave
inc
or
and
inc
cld
xor
sbb
and
inc
xlat
repnz
lods
and
push
xchg
movsb
out
sbb
insb
addb
mov
fsubs
clc
lahf
std
hlt
xchg
pop
xlat
dec
sbb
push
mov
mov
sbb
cmp
aaa
daa
sbb
sarb
mov
das
push
loop
jl
js
iret
pop
dec
popa
mov
into
sub
call
xchg
subl
add
sbb
lock
cltd
inc
rorb
xchg
in
mov
rol
aam
adc
out
jae
aam
jl
inc
sbb
mov
adc
in
aad
jo
adc
flds
shrb
push
mov
sub
inc
pop
jg
jl
cmp
dec
push
notl
jno
jbe
nop
gs
adc
loopne
sti
mul
fisttps
jo
daa
lods
outsb
clc
test
xlat
outsb
hlt
addb
xchg
cmc
mov
ja
call
sub
stos
push
ret
hlt
pop
mov
cmpsl
jns
testl
dec
fwait
push
mov
fsubl
inc
xor
cld
inc
es
bound
push
pusha
sbb
or
sub
mov
test
pushf
adc
ja
cs
je
sbb
insl
sbb
cli
iret
imull
and
jb
iret
inc
in
dec
int
push
fists
push
fs
jecxz
stc
xchg
lods
adcb
xchg
sti
cmp
loope
ficoms
adc
test
movsl
cwtl
das
xchg
loop
inc
push
je
push
arpl
or
lahf
dec
es
pop
loope
or
test
aas
or
inc
pushf
dec
mov
pop
mov
xchg
stos
stc
insb
shl
scas
repnz
add
les
ja
inc
pushf
icebp
dec
jnp
mov
outsb
insl
sbb
jo
jl
inc
inc
lods
js
add
lret
dec
test
lcall
pop
jg
in
clc
test
outsl
push
sbb
and
mov
test
xor
xor
sahf
push
xlat
repz
add
cmp
out
out
sub
pop
outsb
ret
dec
dec
cmpsb
mov
push
jl
bndstx
lret
in
mov
pop
add
lret
mov
mov
adc
dec
push
test
lret
push
arpl
or
jp
jl
lcall
sbb
clc
cmp
popa
cmp
call
or
sbb
or
add
and
adcb
pop
insb
mov
fildll
js
or
lods
div
cmp
loope
arpl
mov
push
insb
or
rorl
icebp
loope
cmpsb
or
inc
addr16
lock
out
sub
push
and
mov
bound
test
push
jno
cmp
fadds
adc
adc
cmpsl
out
dec
jmp
pushl
in
mov
push
xchg
xor
pushf
and
popf
out
inc
xlat
pop
mov
pop
lds
movsb
inc
and
cmp
jl
pop
lahf
mov
pop
sbbb
or
pop
daa
ficompl
ds
stc
adc
insb
enter
mov
repnz
outsb
sub
jp
add
dec
loopne
push
jecxz
mov
lods
ljmp
jno
mov
adc
add
inc
hlt
xchg
push
enter
out
ss
adc
push
xchg
inc
arpl
mov
pop
lds
push
cmp
mov
int
xchg
stos
jno
repz
adc
dec
jmp
or
out
add
sub
push
pop
dec
dec
shrl
and
jns
mov
jne
xchg
lods
dec
mov
and
adcl
jae
int
xchg
rolb
push
jns
jp
mov
mov
cmp
pop
push
arpl
push
pushl
push
fildl
adc
out
push
fimuls
ret
repz
xchg
cltd
jp
cld
fistpl
xor
cmp
adc
jne
adcb
subl
call
inc
ljmp
lea
sbb
insb
mov
outsl
xchg
inc
push
mov
dec
xor
cmp
je
repz
jl
cmp
push
jmp
mov
andb
mov
imul
mov
add
xor
jbe
adc
cmc
inc
pop
cmp
insl
inc
pop
pop
pop
or
mov
aaa
add
inc
push
arpl
dec
in
int
mov
add
sarb
in
gs
je
lret
adc
aam
and
cmp
lret
hlt
or
sbb
fdecstp
pop
shrl
pop
mov
xchg
add
mov
push
insl
jno
xchg
xacquire
xchg
mov
jmp
push
test
les
mov
xchg
push
inc
lcall
je
filds
lret
stos
inc
sbb
push
cmp
movb
testb
popa
ret
sbb
mov
or
ret
xor
dec
loope
mov
imul
leave
jp
adc
mov
add
lret
sub
or
ljmp
lods
dec
test
jno
std
push
jae
cmp
pusha
imul
je
test
mov
into
or
loop
in
dec
push
sbb
pop
sub
cld
lods
roll
and
mov
fwait
lcall
xor
lahf
add
sub
es
mov
arpl
push
xor
xchg
repnz
pop
inc
pop
in
mov
mov
mov
insl
iret
sarl
addr16
xor
pop
sbb
test
push
mov
add
mov
shlb
mov
aas
idivb
aad
inc
mov
xchg
adc
lods
aas
jp
in
dec
pop
cmp
gs
out
push
das
cmp
push
outsb
add
icebp
testl
sub
dec
inc
jo
or
mov
push
imul
sub
pop
clc
out
lret
hlt
imul
cmp
pop
aaa
into
mov
int3
sub
les
push
fnstcw
mov
outsb
out
imul
xchg
cmc
decl
jmp
or
pop
jge
xor
jg
jo
insl
adc
xchg
add
jbe
movsb
inc
out
add
pop
in
repz
in
nop
ret
stos
out
icebp
ficomps
push
dec
sarl
mov
pop
inc
push
mov
inc
and
mov
test
sub
xor
xchg
xor
and
push
clc
sbb
sbb
pop
add
pop
xor
mov
fs
mov
dec
stc
loopne
aas
jecxz
stos
mov
shr
xlat
loopne
pop
in
test
mov
fnsave
adc
test
and
shll
push
mov
test
add
es
cltd
or
aas
pop
movsb
adc
push
frstor
push
out
add
push
mov
sub
pop
lahf
ss
lahf
inc
loope
in
mov
mov
out
inc
push
xchg
in
fisttpl
loope
adc
or
adc
mov
daa
mov
out
xchg
jge
divl
and
nop
gs
push
jecxz
add
shr
je
and
xchg
scas
test
sub
imul
inc
push
push
jns
test
xchg
sbb
push
cmpl
gs
sbb
dec
dec
js
sbbl
pop
dec
dec
setae
in
popf
rcl
sbb
inc
loope
pop
inc
in
fisttpl
mov
negb
dec
cmp
pop
rol
out
jae
push
sub
jns
push
ret
lea
sti
fiadds
out
test
test
out
xchg
out
inc
sbb
enter
in
sub
rcll
invd
lods
test
cs
out
push
lods
test
pop
leave
pop
les
call
stos
inc
sbb
dec
int3
pop
imul
imul
mov
test
add
mov
push
cmpsl
cmc
rcrb
or
jbe
sub
into
das
cmp
into
lahf
pop
jp
out
stos
in
mov
jmp
add
mov
sbb
xor
das
outsl
lods
push
popf
loope
iret
out
push
sahf
in
ja
in
dec
jge
mov
sbb
sbb
clc
adc
repz
in
clc
or
mov
nop
push
xor
xchg
out
lds
sub
inc
and
or
push
adcb
push
lahf
stos
mov
out
mov
daa
std
enter
sbb
or
movb
loopne
aam
pop
adc
aad
loope
pop
repz
or
sarl
adc
dec
cmp
clc
dec
test
loope
testl
inc
lcall
pop
jae
mov
and
push
out
stos
in
out
inc
loop
test
mov
test
adc
lods
pop
cmp
repz
push
test
sub
sbb
into
jge
dec
scas
notl
sub
testl
js
inc
dec
push
test
test
sub
mov
and
jmp
fildll
sbb
mov
js
sub
jbe
xchg
mov
jae
enter
pop
xor
push
inc
inc
fmuls
inc
xor
andl
mov
pop
into
fs
xchg
in
mov
movsl
pop
mov
push
pop
inc
int
and
inc
push
fidivs
push
imul
fldcw
daa
outsl
jnp
test
dec
imul
and
sti
je
mov
ds
aam
leave
ret
jne
imul
or
test
push
push
call
cmp
fisubrs
inc
loopne
mov
pop
loopne
add
xor
push
aaa
fstl
inc
xlat
fcmove
fisttps
xor
cmpsb
mov
jns
and
pop
jmp
or
sbb
addr16
pop
les
aad
jbe
jg
xor
fwait
push
lcall
lret
repnz
inc
fstpl
sub
sub
loopne
mov
pop
cmp
pop
aaa
and
cmp
inc
xor
push
push
add
aas
xchg
scas
pop
xor
adc
mov
pop
jnp
inc
push
push
inc
sbb
inc
inc
jp
jno
dec
mov
sub
fidivl
adc
jb
cltd
out
bound
stc
aas
mov
push
cmp
rclb
mov
xchg
xor
xchg
fs
add
in
and
fs
cmp
inc
pushf
inc
popa
xor
xor
push
add
cli
cltd
hlt
stos
mov
int
sbb
xor
std
sbb
or
scas
push
push
jb
and
and
pop
push
testl
sti
fwait
mov
and
daa
jmp
ret
inc
iret
jmp
adc
push
lret
filds
fwait
mov
xlat
rcl
fcomps
jge
cmc
loop
dec
ret
outsl
rcll
xchg
inc
cmpsb
lcall
lret
xor
fistpl
and
lea
outsb
sub
ss
jmp
cmp
clc
or
inc
inc
and
inc
push
xor
xchg
cmp
outsl
dec
dec
ret
push
push
sub
pop
sbbl
cmp
lcall
xchg
mov
mov
mov
idivb
mov
push
mov
mov
jg
lock
incl
sbb
push
inc
sbb
cmc
or
mov
push
xor
scas
push
fwait
test
or
scas
cli
pushf
cmpl
pushf
mov
pushf
xor
or
push
out
test
pop
push
out
icebp
sahf
cmp
pop
cmp
xchg
clc
aas
cmp
loope
xchg
cmp
scas
or
or
out
ret
jge
stos
mov
dec
lods
dec
sub
dec
mov
leave
sbb
ja
lahf
push
jg
mov
addr16
cltd
rclb
orb
bswap
inc
lods
jp
mov
mov
mov
mov
test
rol
mov
stc
lea
and
das
pusha
cmpsl
jmp
fs
xor
sarb
dec
cmp
jg
push
jbe
mov
jb
cld
cmp
clc
and
xor
movsb
cmpsb
lods
mov
daa
cmpb
stc
cmp
movsb
inc
out
leave
sbb
popf
repz
sbb
stos
cltd
rorl
fcmovb
loopne
or
stos
hlt
pushf
xchg
lock
xlat
mov
loopne
insl
rol
and
push
imulb
shrb
les
push
inc
gs
movsb
or
pop
add
aaa
sub
out
push
scas
dec
mov
pusha
push
mov
jmp
fldt
adcl
mov
ret
imul
and
adc
and
mov
dec
lods
clc
mov
add
iret
fwait
mov
stos
sahf
std
xchg
mov
or
jnp
bt
aam
mov
pop
lods
lahf
xchg
jae
shrb
out
push
sub
loopne
mov
fldt
jge
ss
es
pop
inc
pop
lds
pop
sub
cmc
push
xchg
movsb
push
repnz
outsb
ja
pop
pop
pop
hlt
jns
sti
mov
arpl
lret
mov
sbbl
add
repnz
lret
cs
sbb
insb
jle
sar
pop
ficoms
xchg
inc
cmpsb
lock
jecxz
outsb
and
cmp
xor
test
lcall
push
pushf
jge
mov
pop
inc
fisttps
scas
test
jae,pt
jo
mov
xchg
sbb
scas
jo
mov
shll
insb
inc
bound
cmp
clc
lea
icebp
stc
mov
fdivrl
lret
adc
ds
mov
xchg
add
cmp
arpl
ljmp
mov
xchg
movsl
push
xor
add
xor
scas
fstpt
adc
mov
pop
inc
ret
pop
jns
insl
and
pop
push
aam
hlt
fistpll
int3
sub
sbbb
cmp
nop
insl
bound
mov
fidivs
add
sub
pop
pop
sbb
pop
inc
ljmp
xchg
lret
bound
push
jno
insb
jmp
jo
stc
xchg
sub
and
pop
ret
hlt
sarb
push
fucomi
xchg
jmp
cmp
iret
xchg
sub
mov
mov
jl
out
add
pop
imul
jmp
das
sub
mov
repz
test
movb
sbb
jbe
push
test
and
out
and
mov
push
std
adc
inc
outsl
pop
imul
lods
lcall
mov
or
loopne
ret
xor
cld
test
ss
push
das
xor
fldenv
std
jo
or
pop
mov
nopl
dec
and
sub
cltd
xchg
push
fimull
enter
loop
inc
or
jg
pushf
xchg
push
or
xchg
cli
mov
inc
jp
push
mov
inc
fucomp
mov
xchg
scas
dec
xchg
jl
insl
ret
add
mov
xchg
sub
fdivs
pop
xor
mov
lods
lret
mov
bound
add
pop
sbb
mov
sbb
fisubs
cmp
insb
mov
xlat
pop
rclb
push
pop
addr16
icebp
hlt
jl
adc
das
dec
mov
neg
jne
mov
jle
xor
aas
pusha
testb
rcll
mov
fildl
pop
mov
xchg
pop
jg
jl
call
lock
inc
lahf
mov
daa
sahf
lahf
sbb
jno
shlb
sub
push
lods
adc
jge
rcrl
popa
inc
adc
lods
popa
inc
mov
mov
pop
je
add
or
xchg
adc
cmp
repz
mov
cmp
and
rolb
test
mov
mov
push
adc
add
mov
aad
pop
rep
hlt
xlat
divb
xlat
cmpsb
sub
jcxz
into
cltd
mov
jge
or
pop
push
std
loopne
jmp
imul
icebp
xor
cs
mov
sub
shll
adc
add
subb
shl
fmulp
fwait
leave
inc
cmp
inc
cli
gs
and
xor
xor
test
in
test
inc
xchg
into
icebp
adc
clc
push
jno
and
scas
adc
ljmp
xchg
outsl
cli
adc
cmp
cmc
push
mov
cld
loopne
xor
test
in
decb
inc
add
inc
lcall
and
push
gs
jno
xchg
pop
fdivl
jecxz
shl
inc
mov
mov
mov
sub
mov
mov
and
jecxz
xchg
leave
or
mov
nop
stos
sarl
xchg
int3
inc
pop
lcall
mov
ljmp
xchg
pop
mov
cs
int
cmp
andb
jo
ds
pushf
dec
movsb
dec
dec
cmp
popf
mov
test
jnp
popf
call
inc
push
stos
xchg
out
out
mov
mov
or
xor
xlat
cmp
and
mov
stos
mov
insb
test
es
test
mov
xor
inc
in
cwtl
xlat
je
leave
lods
jl
test
inc
jns
ss
into
pop
fldt
loop
fcompl
pop
inc
pop
sub
mov
lret
imul
inc
and
test
aam
test
stos
sti
fs
in
fimull
lret
add
xchg
cmp
xchg
xchg
mov
fsubrp
xor
sub
bswap
bound
fs
mov
mov
xchg
shr
test
ret
mov
pushl
adc
xchg
mov
cs
sarl
cmp
aad
pop
fwait
repz
repz
inc
cmp
mov
fsts
and
scas
stc
mov
lea
jmp
fildll
int3
popf
arpl
mov
mov
pandn
enter
or
mov
icebp
lods
aas
dec
fmuls
in
out
sbb
test
xor
jno
push
and
jb
sbb
inc
mov
push
inc
rclb
xchg
or
xchg
mov
movsb
pusha
adc
test
enter
inc
pop
pushf
dec
pop
inc
scas
jne
ss
xchg
hlt
mov
push
and
mov
adc
cmp
sti
dec
aam
sbb
mull
lock
shrb
jb
sti
dec
dec
pop
nop
lods
sbb
xchg
sbb
jns
add
jp
popf
out
push
xor
push
ljmp
adc
sbb
popf
dec
fisttps
fwait
imul
xor
mov
sahf
or
stos
push
and
jge,pn
repnz
xlat
xchg
push
and
xchg
xchg
jnp
cmc
movsb
xchg
fsubl
lahf
lds
decl
xchg
ljmp
jno
xchg
jg
fyl2xp1
xor
fcoml
mov
aas
shl
cmpsb
sbb
mov
lret
and
aam
daa
mov
jmp
and
jne
sbb
test
and
repz
mov
xchg
scas
fs
ss
jbe
aaa
bswap
and
pop
xchg
scas
inc
mov
ss
mov
aam
xlat
lret
test
and
sub
mov
jp
daa
shll
shrl
mov
sub
psubsb
add
sbb
fidivrs
push
pop
outsl
mov
lret
js
ret
icebp
movsl
sbb
dec
or
pop
fisubs
ret
gs
ja
mov
push
push
jecxz
inc
pop
sub
test
adc
outsb
rclb
jns
movsl
jae
jecxz
mov
pop
cmc
sbb
gs
dec
mov
testl
pop
div
or
sub
dec
orb
push
and
push
push
out
inc
pop
or
lcall
stos
jmp
aas
sbb
push
mov
out
pop
les
dec
es
leave
pop
pop
enter
sbb
push
imul
sub
cmovl
sub
notl
pop
or
sub
sub
mov
leave
mov
cmp
inc
xlat
jne,pn
iret
repz
sahf
jne
stos
push
jbe
mov
xchg
loop
jg
mov
lds
or
pushf
mov
xor
add
jge
cltd
hlt
rcrl
test
xor
test
idivb
mov
shll
fnstenv
mov
jp
inc
mov
scas
test
cmp
dec
mov
push
das
addr16
pop
imul
movsl
pusha
pop
push
ja
fs
mov
in
pop
rcrb
cli
loop
adc
movsl
mov
sbb
adc
aam
inc
add
popa
dec
loope
inc
imul
sub
sbb
push
test
inc
arpl
sahf
in
fdivl
movsl
mov
jae
sbb
js
xorl
xor
and
mov
ja
and
scas
lods
decb
aaa
dec
cmpsl
adc
loope
int
mov
xlat
addr16
cwtl
clc
dec
inc
lods
mov
int3
sub
pop
cltd
mov
cmp
lea
in
push
loop
dec
repz
lahf
data16
aaa
push
rorl
mov
mov
enter
repnz
loope
sub
sbbl
pop
popf
xchg
pop
add
movsl
xor
jl
push
scas
push
mov
addr16
mov
rcl
dec
int3
dec
xor
pop
jno
sbb
orps
subl
mov
mov
push
dec
xlat
xchg
fnstenv
pusha
cmp
dec
sub
mov
dec
rolb
loopne
lret
adc
testl
roll
mov
xlat
jbe
lret
mov
xchg
fsubs
pusha
sbb
movsb
sbb
pop
ds
test
cmp
jmp
sub
sub
shl
lea
scas
hlt
lods
inc
incb
and
leave
adc
jle
pusha
mov
test
push
jb
pop
aad
add
scas
insb
sti
or
test
pusha
mov
lea
stc
pushf
leave
pop
xchg
scas
pusha
mov
and
sbb
pushf
sub
cmp
test
xor
sti
push
or
mov
cli
dec
push
and
stos
cltd
fildl
adc
fucomip
imul
call
mov
fcomps
out
xchg
outsb
mov
cmp
shrb
mov
jo
cmp
pop
test
pop
jbe
dec
outsl
dec
ja
repnz
lea
inc
lcall
call
or
sub
notl
int3
cmp
ret
mov
stc
inc
inc
push
scas
xchg
out
dec
fistps
js
adcb
jb
cwtl
decb
xchg
mov
inc
fbstp
test
les
dec
jge
clc
scas
insl
cwtl
mov
iret
jg
jmp
shr
sbb
out
repnz
mov
xorb
inc
imulb
adc
scas
cld
sbb
sbbl
dec
push
mov
jle
mov
pop
je
fidivs
mov
cmp
mov
lods
inc
push
push
rorb
inc
lret
jge
xor
imul
push
mov
sbbb
lock
lock
xchg
xor
ljmp
inc
movsb
pop
xor
leave
inc
and
or
push
add
jle
stos
mov
adc
ret
int
ficomps
mov
or
addr16
in
xor
mov
bound
mov
or
cli
cmpl
pop
push
xchg
addr16
push
jp
dec
cmpsb
mov
sti
inc
mov
aad
stos
add
daa
dec
sub
xor
sahf
pop
js
lods
jnp
adc
jne
loop
sbb
or
jno
cmp
mov
mov
stos
aaa
dec
adc
loopne
xchg
fnstsw
cmp
imul
into
jno
adc
icebp
ss
je
push
and
push
xor
mov
nop
jle
paddd
loope
push
xlat
push
cltd
shrb
inc
aaa
pop
xchg
mov
fisttpll
push
in
or
mov
cltd
xor
aam
fsubrs
mov
sbb
inc
push
sub
icebp
cs
dec
test
shlb
rcr
ja
mov
cld
pop
out
sub
dec
fisubrs
xchg
lret
scas
mov
sbb
inc
pusha
fistps
sbb
mov
dec
cmp
jle
jl
pop
dec
stc
dec
add
jle
shl
mov
cs
adc
push
fists
lret
xor
cld
fbld
xor
sub
sub
sti
cs
lret
xlat
out
ret
jnp
and
xchg
xchg
sarb
pop
mov
xor
iret
outsb
sub
mov
inc
aaa
mov
fnstcw
cli
test
xchg
push
mov
out
imul
sbbb
std
push
push
jl
mov
insl
and
xor
jle
xor
pop
inc
loope
adc
mov
and
repz
lcall
mov
iret
or
pushf
loopne
outsl
add
lods
nop
sbb
cli
pusha
movsb
cmp
mov
rcl
push
rclb
or
cmp
and
scas
cmp
sbb
push
hlt
jne
imull
inc
or
xchg
or
dec
pop
cwtl
ja
out
push
int
imul
lcall
jge
and
pop
repz
je
lret
jnp
xchg
adc
leave
sbb
and
inc
mov
iret
mov
add
adc
out
and
repz
xchg
adc
mov
ficoms
mov
jp
and
fcompl
sub
add
pop
jle
inc
test
rcr
dec
mov
jecxz
filds
lcall
inc
stos
sbb
or
inc
in
xchg
adc
stc
xorb
xchg
sub
out
loopne
mov
hlt
pop
and
push
fildll
stc
nop
add
imul
sbb
int
mov
xchg
mov
lods
fs
icebp
xchg
mov
cltd
test
jmp
icebp
aam
dec
enter
lahf
ljmp
inc
in
inc
stc
nop
ja
cmp
cwtl
pop
sub
bound
pop
addr16
xor
sahf
enter
subb
adc
mov
xchg
or
jmp
add
push
lods
daa
xchg
imul
jbe
mov
shll
push
in
add
gs
pop
inc
and
aaa
scas
push
test
fucomp
sub
ja
or
pop
fwait
lret
xor
push
mov
mov
in
sbb
and
and
jns
dec
fists
mov
and
mov
xchg
or
add
xor
jnp
fildl
popa
push
push
imul
pusha
cmpb
mull
dec
or
adc
and
xchg
sbb
pop
push
sbb
popa
jle
add
jge
xchg
lea
sti
xchg
out
sahf
movsb
cmp
mov
sbb
dec
ret
jg
xchg
daa
dec
pop
mov
inc
loop
lock
cmc
xchg
int
loop
insl
push
lds
or
xor
push
push
ljmp
jno
sarl
push
int3
mov
mov
popf
sub
cmc
pop
call
lea
mov
nop
call
test
lret
and
das
sub
dec
nop
mov
call
mov
adc
rcll
xor
adc
pop
push
mov
push
imul
adc
xchg
push
push
imul
pop
sbb
loop
lea
inc
mov
fstps
pop
mov
nop
sub
es
scas
cmp
jecxz
mov
push
lcall
popa
mov
jne
pop
sarl
mov
aas
mov
sub
dec
mov
lret
mov
pop
sbb
jno
es
mov
es
mov
mov
jp
jb
sahf
sahf
lods
test
xor
push
jle
xor
arpl
lahf
lods
push
mov
push
add
cmc
out
pop
aas
mov
pop
cmp
dec
enter
lahf
inc
mov
mov
cmp
mov
xchg
loopne
push
movsl
pop
mov
loope
push
lret
adc
mov
sbb
ret
into
push
testb
sub
fs
scas
add
dec
test
adc
insb
xchg
sub
cmp
cmp
js
inc
adc
jne
xchg
ret
push
sub
add
mov
sbb
dec
cmp
sub
pop
sbb
inc
jmp
push
subl
cmc
lret
cli
mov
cld
mov
pop
pop
dec
mov
xor
inc
inc
test
cmc
inc
out
mov
in
cmpsb
push
adc
mov
negl
mov
std
add
fidivl
push
mov
dec
jp
shl
addr16
jecxz
push
sti
cli
or
jae,pn
popa
lea
mov
sub
es
in
clc
push
adc
push
add
sbbb
scas
push
xchg
jno
xchg
ss
movsl
lds
scas
adc
inc
push
push
test
test
inc
cld
pop
cld
push
insl
jnp
pop
popa
pop
jecxz
mov
mov
aad
push
xor
stc
cmp
rorl
filds
adcb
add
and
iret
mov
push
mov
push
or
add
ret
sbb
dec
inc
sahf
icebp
andb
inc
and
lahf
jae
adc
out
and
add
call
int3
xchg
add
lds
and
std
std
push
push
ss
das
test
scas
ljmp
jne
mov
imul
mov
icebp
nop
cmp
pop
sub
test
xor
dec
dec
fistpll
cwtl
mov
and
jo
mov
jb
cmp
cmp
shl
pusha
adc
xchg
mov
stos
ret
inc
call
push
push
dec
xlat
push
sahf
sub
sub
mov
sahf
dec
push
in
jp
out
lret
mov
adc
xor
jns
push
je
mov
sub
push
insl
les
sbb
push
iret
xchg
leave
add
cli
adc
push
xlat
push
push
xor
jmp
or
xorb
fbstp
jge
mov
mov
pmaddwd
insb
pop
push
scas
pop
mov
xor
scas
or
sub
rorb
pushf
das
pop
cld
pusha
mov
adc
sbb
and
pop
mov
int
out
xchg
imul
xchg
mov
jecxz
fs
mov
jge
or
push
adc
add
and
addr16
add
xor
cmpsl
in
iret
sub
add
push
out
dec
mov
jne
add
pop
lods
mov
testl
inc
gs
rcl
call
leave
mov
sub
aas
or
xchg
mov
push
cmp
hlt
std
sbb
push
push
push
push
mov
ljmp
adc
cs
das
sub
fidivl
pop
cmp
cmp
inc
push
mov
sbbb
jae
pop
cmp
dec
movsl
sub
mov
decl
mov
repz
pop
rorl
pusha
or
mov
mov
negl
nop
cs
cmp
push
pop
mov
icebp
inc
add
dec
push
loop
push
imul
jno
sbb
and
or
dec
pop
xor
nop
shrl
std
mov
outsb
call
cwtl
outsb
outsl
addl
into
aad
daa
push
scas
and
mov
jne
pop
adc
int3
pop
xchg
jl
pop
ret
sub
iret
lods
and
sar
mov
mov
sub
je
push
dec
leave
mov
pop
push
jne
push
xchg
aam
inc
mov
push
jnp
dec
roll
sbb
mov
sbb
push
test
sub
jno
mov
lea
pop
sub
fstpt
dec
and
push
shlb
leave
xchg
repz
pop
pop
dec
mov
jbe
xor
std
lock
call
jae
inc
bound
push
out
or
or
mov
fcomip
ja
jb
inc
inc
sar
xchg
js
push
mov
lcall
enter
aam
adc
pop
fdivl
cmp
fbld
and
fstpt
repz
jnp
ja
adc
lret
shrb
stos
xchg
stos
xor
arpl
sbb
cwtl
mov
mov
mov
ljmp
je
dec
cs
in
push
sub
ret
in
mov
or
aad
inc
xlat
mov
fistpl
pop
leave
outsl
jmp
mov
mov
stc
jbe
add
es
je
scas
push
or
lret
insb
clc
jg
iret
insl
sbb
mov
pop
outsb
stos
fwait
sbb
mov
dec
pop
xor
mov
in
ror
cs
jecxz
stc
int3
daa
xor
push
stos
stc
popa
fcmovnu
nop
xchg
mov
fldl
loopne
mov
bnd
mov
ja
dec
add
or
lahf
negl
jl
lods
push
pop
cli
inc
sbb
mov
sbb
mov
fsubl
fidivrs
cmp
mov
xlat
or
mov
sbb
lock
jo
dec
shlb
and
xchg
out
add
add
mov
cltd
mov
shll
inc
fwait
dec
fidivs
gs
mov
inc
mov
jo
int
pop
sbb
aas
push
in
sbb
cmp
dec
shll
rolb
xchg
jno
xchg
in
sbb
insb
jmp
rcl
out
fwait
sbb
adc
in
je
mov
inc
fdivrs
cmp
adc
insl
xor
mov
fdiv
orb
popa
adcl
jae
testl
push
out
stos
nop
push
lock
int
inc
cmpsl
addb
adc
xlat
in
mov
bound
push
aad
push
in
nop
inc
cmp
bound
mov
test
imul
scas
sti
xchg
inc
pop
mov
xor
aas
neg
mov
jecxz
adc
or
stc
nop
sub
loope
je
outsb
add
mov
pop
imul
repnz
lods
mov
iret
fs
insb
jbe
lahf
xor
push
sbb
mov
pop
jecxz
int3
fidivrs
pop
icebp
xor
sbbb
and
push
jo
mov
dec
jg
shll
cmp
sbb
jae
fst
fldt
cmp
bound
dec
clc
mov
lods
iret
jecxz
sbb
bound
mov
mov
ret
ds
out
lahf
imul
adcb
mov
pop
loop
xchg
pop
push
lret
and
test
js
and
in
sbbb
xchg
xor
xor
stos
cmp
jmp
mov
ja
andl
and
inc
addl
enter
pop
out
or
jbe
mov
ret
xchg
sub
xlat
mov
jae
repz
and
dec
idivl
bound
pop
mov
js
fadd
fsubs
je
loope
ljmp
or
bound
pop
scas
add
sbb
addr16
test
and
repnz
pop
lods
pop
incb
or
xchg
adcb
xor
push
sahf
loopne
imul
imul
into
leave
mov
xchg
shrl
and
and
cmp
insl
xor
aas
dec
pop
outsb
hlt
mov
mov
pop
xor
shll
xchg
dec
sub
repz
mov
or
fwait
das
ret
jmp
lahf
fcomip
shlb
in
mov
aaa
mov
test
inc
test
sub
int3
pop
in
ja
inc
ret
hlt
dec
jl
das
sbb
jg
sbb
mov
out
iret
cmp
scas
sbb
outsb
inc
fcomp
push
mov
mov
fisttps
lcall
mov
dec
lahf
je
adc
mov
mov
mov
fdiv
into
xor
adc
repz
loope
stc
outsl
add
int
pop
mov
dec
push
push
push
nop
mov
je
adc
sub
or
in
aas
push
add
repz
xchg
fmul
test
cld
sbb
out
shlb
add
pop
stc
push
cmp
aas
aas
pop
leave
pop
js
cmp
pop
adc
ds
jge
xor
xchg
lods
xchg
xchg
mov
adc
std
jae
mov
add
inc
cltd
into
gs
dec
and
in
test
jmp
and
scas
inc
mov
adc
inc
pop
in
test
es
arpl
jnp
in
nop
or
mov
mov
sub
dec
xor
aam
arpl
jp
push
or
test
loop
addr16
in
pop
mov
lret
inc
sub
cmp
push
mov
fsubr
and
xor
and
mov
pop
dec
into
mov
jle
inc
popf
mov
or
pop
lea
call
pop
lock
andps
sbb
out
ljmp
and
or
inc
gs
ret
in
inc
faddp
add
fnstenv
fldenv
mov
fcomip
pop
lods
adc
pushf
lods
test
into
pop
jb
cli
cmp
and
fsub
cs
adc
mov
insl
sub
sbb
pop
push
cmp
incb
sbb
shrl
popa
sbbl
mov
mov
mov
and
ds
mov
and
popf
dec
push
test
ljmp
xor
in
pop
mov
push
lret
sub
daa
inc
fstps
and
outsb
inc
xlat
cmpsl
js
decb
lods
dec
lods
test
dec
xor
insl
jg
sahf
lds
loopne
popf
dec
loop
mov
sbb
inc
and
les
lcall
adc
mov
outsb
jmp
jl
jmp
notb
push
into
sti
xchg
adc
add
pop
std
aaa
in
lock
push
lahf
jo
das
fidivs
mov
std
lods
dec
pushf
or
add
or
imul
cwtl
mov
lret
or
fsubrs
xchg
sbbl
push
jae
shld
lahf
pop
mov
adc
das
add
mov
shll
subb
sub
mov
lods
sub
jmp
jle
or
cli
stc
popf
ss
mov
mov
addr16
xchg
add
in
jmp
in
and
mov
shll
insb
adc
int
push
jnp
mov
mov
test
out
or
in
mov
clc
cmp
out
icebp
lcall
inc
inc
dec
pop
std
lock
pop
and
loop
dec
cld
popa
sub
jge
pop
jno
mov
sbb
sbb
jns
addr16
xchg
push
pop
cmpsb
mov
les
xor
push
pushf
inc
jle
repnz
or
pop
adc
inc
xchg
lds
shrb
inc
pop
xchg
shr
cmp
xor
lock
jmp
sub
mov
aas
fwait
jg
and
inc
push
test
lcall
adc
mov
adc
clc
add
pusha
data16
or
sahf
repz
sbb
jnp
or
out
rol
mov
imul
push
add
fimuls
cld
adcl
mov
and
int3
fisubs
push
xchg
xor
pushf
ret
outsb
mov
cld
das
cmp
sbb
sbb
mov
rorb
mov
push
psrlq
mov
aam
arpl
inc
or
std
xor
mov
dec
xchg
cmc
les
adc
fsubrl
mov
push
jmp
add
addr16
push
jmp
inc
jbe
sbbb
adc
aam
es
jo
and
loopne
fstps
push
in
popa
jbe
lret
stos
xchg
cmp
dec
les
ret
mov
pop
rcl
decb
sub
xor
cltd
je
push
scas
scas
into
psrlq
xchg
push
stc
fildll
sub
adc
imul
mov
mov
cltd
rcll
hlt
in
clc
ja
xchg
and
popa
out
or
cmp
add
and
adc
pop
jg
cwtl
je
sbb
xchg
dec
sub
in
sarb
jne
mov
add
mov
scas
out
or
and
loope
rcrl
imul
loope
xchg
adc
mov
cmp
ss
pop
push
push
jg
sbb
mov
pop
lods
add
inc
inc
and
dec
push
sbb
pop
mov
movsb
push
ret
idiv
pop
fmuls
out
outsb
push
push
jmp
mov
sbb
jns
push
nop
rcl
jl
xchg
xor
sbb
int
add
icebp
adc
addb
adc
xchg
stc
mov
mov
adc
repz
stos
inc
mov
xchg
sub
shll
jno
pop
mov
rcr
jo
mov
jp
sub
and
dec
cltd
cmpsl
jns
mov
fadds
mov
jne
jecxz
add
enter
xchg
mov
stos
push
repnz
imul
xor
cwtl
mov
pop
and
inc
popf
cmpsb
mov
xor
or
jne
adc
mov
pop
cmp
iret
cli
inc
lret
fisttpll
push
push
inc
dec
stc
cmp
mov
popf
push
jle
mov
mov
mov
test
mov
jg
ljmp
loopne
movsl
shlb
cltd
mov
jge
mov
adc
mov
xchg
loope
add
mov
mov
sbb
mov
out
call
stc
mov
cmpsb
mov
mov
push
ja
mov
pop
je
cli
lds
add
fmuls
cs
fsubrl
mov
or
das
pop
xor
cltd
and
pushf
gs
mov
jmp
in
jo
pop
dec
cltd
repnz
and
xor
gs
lock
scas
mov
fwait
lock
mov
je
movsl
pop
add
fdivs
sbb
mov
jbe
pop
ret
xor
clc
sahf
or
adc
andb
push
test
xchg
inc
pushf
mov
test
sub
dec
mov
stos
adc
push
mov
and
sub
sub
test
jmp
pop
sbb
repz
xor
std
mov
xchg
je
dec
jecxz
push
fsubr
xchg
ljmp
sub
sbbb
mov
and
push
imul
sbbl
push
cmp
mov
add
jns
jp
test
les
cmp
bound
xchg
mov
inc
scas
jecxz
aaa
push
pop
aad
xchg
mov
xor
sub
or
jl
xchg
insl
cmp
sub
or
and
es
dec
aad
ret
fcmovb
fildl
jae
stos
cmpsb
lahf
mov
jb
test
mov
mov
add
leave
xchg
jp
and
adc
push
add
add
xchg
dec
fadds
cs
fimull
push
imul
jp
lret
outsb
jo
icebp
mov
addr16
jno
and
and
push
mov
xor
call
adc
dec
xor
mov
cmpsl
in
adc
xor
int
outsb
mov
fldl
mov
les
cmp
pushf
cmp
xor
scas
pop
jo
fnstenv
psrad
xchg
and
xchg
sbb
jl
add
xlat
jb
mov
mov
aaa
jmp
arpl
dec
lahf
dec
mov
push
enter
shlb
jl,pt
sbb
popl
fs
jecxz
mov
pop
into
cmp
ret
out
pop
and
fstl
mov
int
push
inc
mov
fdivrl
cmp
mov
lahf
and
daa
mov
and
add
sub
iret
inc
fldt
xor
jg
adc
mov
jg
addr16
out
xor
xor
xor
stos
dec
fwait
dec
xchg
pop
dec
movsb
incb
loop
pop
cmpsl
push
jbe
dec
lcall
inc
mov
js
xchg
xor
lock
mov
inc
pushf
jns
pop
fstl
pop
pop
push
imul
pop
and
jae
lods
sub
xlat
xor
or
das
pop
pop
push
sub
loopne
cmp
xchg
mov
fstpl
add
enter
jo
jae
and
pmaddwd
cs
das
enter
int
inc
jmp
push
and
lret
iret
inc
icebp
mov
rcrb
cwtl
arpl
enter
add
dec
test
add
jl
and
xchg
loopne
xlat
icebp
int
cmpsl
push
out
fcoms
fisttpl
cli
jne
pop
push
jle
mov
pop
ret
push
mov
mov
pop
ret
pop
mov
jno
das
dec
rcrl
int
dec
js
loopne
out
fnstenv
jne
sbb
cmc
mov
mov
stos
insl
decb
movsb
push
lods
rcrl
sub
test
les
dec
popf
or
cld
inc
flds
push
push
push
test
mov
daa
loop
decl
jo
mov
hlt
clc
add
sub
lods
ret
imul
sub
xchg
pop
imul
push
clc
vpshld
ficoml
mov
lds
outsl
orb
rcll
adc
jnp
push
push
data16
add
mov
iret
out
cmpb
repnz
fldenv
loopne
and
ss
fst
insb
cld
xor
push
dec
lds
out
dec
push
out
std
das
inc
inc
gs
jno
xchg
stos
mov
in
dec
in
inc
je
jbe
insb
add
in
ret
xsha256
cmpsb
xchg
ljmp
cmpsl
sahf
clc
imul
mov
mov
cmp
pop
sub
pop
pop
inc
jge
lods
icebp
popf
fimuls
mov
jl
or
orb
adc
xor
mov
pop
pop
fisttpll
adc
jp
leave
test
aas
dec
dec
mov
pop
test
pop
sbb
lea
cmp
popa
leave
pusha
push
jb
decl
out
dec
int3
mov
ja
fwait
inc
pusha
shl
jge
leave
enter
lods
inc
setno
push
in
es
divl
or
pop
mov
lods
out
cltd
leave
test
xor
loopne
addr16
inc
ror
and
xchg
push
out
test
mov
cmp
pushf
aas
int
int
jge
lret
xchg
jmp
mov
xchg
shl
or
imul
in
clc
jmp
ret
arpl
xchg
push
and
adc
sbb
cli
mov
add
ret
xor
cwtl
das
push
inc
sbbl
add
test
push
mov
xor
inc
stos
mov
loop
mov
push
insl
loope
jns
push
push
dec
lret
cs
or
sub
push
jp
pop
add
add
movsl
pop
or
cmp
test
int
adc
cwtl
jns
decl
arpl
dec
mov
repnz
or
out
mov
or
or
fadds
pop
inc
lahf
cwtl
daa
test
push
sub
arpl
cmp
dec
pop
lahf
adc
dec
xor
or
testb
gs
mov
repnz
ffreep
stos
dec
adc
push
fwait
xor
mov
pusha
xor
or
xchg
cmp
andl
xchg
es
lods
jge
sub
push
sahf
adc
ret
sti
or
or
int
sub
lods
adc
sub
pop
xor
dec
inc
fnstenv
das
mov
lods
and
out
hlt
scas
jmp
mov
sahf
stc
mov
pop
orb
movsb
cli
fldenv
scas
xchg
incb
mov
mov
clc
inc
pop
or
jnp
or
scas
inc
dec
jbe
stos
icebp
popa
int
into
fstp
xor
lcall
rolb
xchg
stos
fdiv
sbb
cmp
xchg
mov
cwtl
sub
sub
ret
adc
mov
xchg
push
sbb
pop
mov
and
std
imul
out
mov
lds
fidivl
out
mov
adc
shll
test
lret
lcall
popa
insb
mov
pop
cmp
or
sub
mov
lahf
shlb
shlb
xchg
rcr
cmc
add
data16
and
push
mov
movsl
pop
rorb
out
and
test
push
pop
mov
push
sub
shlb
cmpsl
pop
jp
lret
stos
inc
out
fcoms
adc
push
daa
or
addr16
or
sub
mov
add
push
xchg
or
sbb
sbb
out
imul
dec
mov
mov
stos
inc
and
push
out
push
inc
shlb
mov
out
jbe
sbb
xchg
cld
sbbl
and
mov
pop
push
sahf
insl
add
pushf
pop
test
mov
xor
add
sub
inc
fndisi(8087
out
out
inc
fidivrl
pop
jb
mov
mov
lods
mov
fsubrl
sub
mov
js
inc
jl
test
movsb
pop
sbb
pop
insb
lret
insl
dec
push
ror
in
xchg
dec
and
nop
ljmp
rcll
fdiv
or
mov
test
fiaddl
shll
xlat
sbb
cmp
dec
or
jae
dec
loop
xchg
push
mov
stc
call
sbb
lret
add
mov
dec
push
lahf
test
xor
adc
lcall
or
mov
orb
dec
push
test
push
ss
and
add
or
pop
cmp
xor
iret
sbb
dec
sub
xchg
sub
repz
adc
nop
iret
sub
mov
push
jmp
lods
push
cltd
jo
sub
cmpsl
cs
ds
call
mov
shrb
cmp
inc
into
jmp
adc
mov
scas
add
out
test
lret
push
push
lds
xor
xor
popl
jo
xchg
or
inc
in
mov
inc
mov
es
out
dec
dec
sbb
cmp
mov
sub
xor
inc
dec
fsubrl
fadds
out
daa
out
mov
add
xlat
xor
popf
jns
jecxz
xchg
and
dec
xchg
push
mul
xchg
mov
shll
mov
aas
jns
jno
inc
ficompl
cmp
jmp
lret
out
or
inc
push
pop
stos
call
mov
mov
add
cmp
outsb
inc
jmp
sub
push
les
ds
pop
aas
call
jle
sbb
imul
bound
xor
mov
cmpl
rolb
fstpl
push
jne
mov
xchg
lret
out
xchg
dec
es
xlat
mov
or
pop
mov
pusha
mov
inc
in
xor
mov
mov
push
rcr
jmp
jae
les
in
jl
mov
pop
shlb
cli
addr16
jo
stos
xchg
adc
popa
fdivl
sbb
rcr
mov
and
push
and
ror
ret
ja
xor
std
mov
xchg
jb
psubusw
xchg
jo
lahf
lea
xchg
jl
stos
in
cmp
pop
dec
jg
or
fs
ja
adc
pop
lahf
xchg
btr
jns
cs
loop
iret
cmp
shrl
aam
pop
or
xor
pop
cmp
out
mull
in
outsb
ror
dec
and
test
scas
inc
adc
dec
out
fwait
test
dec
mov
cmpl
and
cmp
scas
shr
shl
dec
loop
cli
xchg
ljmp
mov
push
jno
cmp
mov
rep
nopl
or
push
cs
cmpsb
push
inc
pusha
cmp
loopne
jge
pop
cmp
sbb
jnp
push
dec
movl
and
out
add
adc
cwtl
cwtl
stos
leave
and
jle
stos
je
pushf
jnp
test
movsl
sbb
shll
push
cmpsl
sarl
insl
pushf
or
inc
int
lahf
ds
xor
fisubs
shll
in
push
adc
push
mov
stos
push
inc
and
sbb
dec
mov
push
sub
lods
icebp
fs
iret
lea
dec
pop
sahf
fwait
stos
push
in
mov
movsl
inc
js
imul
int
mov
in
lret
in
ja
inc
sub
add
cld
or
mov
cmp
bound
hlt
sub
loopne
pop
or
mov
pop
adc
push
dec
mulb
sti
jnp
sub
mov
dec
pop
push
inc
xchg
pop
fistpl
ds
mov
stos
aaa
into
fisttpl
or
push
jne
lahf
xchg
jne
sub
shrl
dec
shll
dec
dec
dec
pop
jnp
lds
jno
out
sub
dec
xor
loope
xor
rcl
jae
lret
fidivrs
adc
loopne
or
push
cmp
push
sbb
mov
enter
jo
push
push
mov
out
xchg
insb
pop
or
mov
xchg
mov
repnz
pop
pop
xchg
out
cmc
xor
frstor
fwait
xchg
and
push
jbe
xchg
in
cs
xor
mov
dec
or
push
jecxz,pt
mov
rcll
ss
or
mov
shll
inc
jmp
shrb
scas
inc
xor
ss
jno
push
xchg
outsl
or
pop
mov
out
out
in
inc
pop
xor
jg
mov
packsswb
and
das
shll
outsl
decb
xor
xchg
es
push
or
gs
test
stos
lds
xchg
add
pop
inc
iret
pop
sbb
xchg
int
lret
out
and
push
add
mulb
sahf
in
je
cltd
inc
push
repz
adc
dec
fcmove
push
dec
cwtl
mov
mov
sbb
mov
out
ljmp
cmp
push
gs
popf
dec
and
mov
push
mov
cwtl
stos
cmpl
or
push
push
lahf
clc
dec
imul
repnz
xchg
and
lods
call
push
inc
pop
xor
or
sub
sbb
sub
in
mov
mov
shrb
xchg
test
sti
loopne
outsl
fisubrs
pop
loopne
mov
es
test
and
ds
loopne
clc
ljmp
dec
add
repnz
hlt
loope
ret
lret
cmp
fsubs
jmp
pop
jg
pop
test
dec
daa
add
es
ja
mov
ljmp
enter
enter
ljmp
dec
xor
sti
outsb
mov
xchg
jnp
andb
inc
inc
jp
je
cwtl
insb
int
inc
sub
and
sbb
test
mov
pop
push
outsb
pop
aaa
mov
pop
fldcw
add
fdiv
and
out
rorl
add
ljmp
sti
pusha
ja
xchg
mov
xor
hlt
fs
add
inc
push
popf
sbb
sbb
push
andb
cmp
ljmp
jp
ljmp
enter
jae
fsubs
dec
mov
shlb
or
pop
sub
dec
loopne
dec
movsb
cmp
ret
xorl
aas
dec
sti
dec
popa
les
xchg
shrl
into
shl
int
out
aas
insl
into
sub
rcrl
mov
jecxz
test
push
sbb
jbe
cld
cmp
dec
xchg
add
cs
scas
ja
sti
add
fnsave
aaa
mov
fidivrl
mov
adc
sub
test
cmc
hlt
out
mov
in
lcall
add
inc
sbb
push
in
imul
stos
sbb
push
xchg
cmp
cwtl
ss
daa
pop
lock
insb
test
push
stc
int
push
sbb
xchg
stos
lods
fldcw
pop
les
ret
hlt
dec
pop
sub
pushf
lods
inc
cmp
xor
jne
push
xlat
push
mov
sbb
and
inc
fnstcw
dec
pop
ss
pop
out
cmp
stc
sahf
cmc
dec
loope
ss
jo
jmp
pop
sti
xchg
push
hlt
fistps
or
rorl
out
ja
and
dec
cmp
xor
daa
movsb
sahf
sti
xchg
rol
mov
pop
orl
jnp
out
cltd
jns
in
xor
in
mov
xchg
xchg
dec
cs
and
sbb
mov
sahf
xor
xchg
stc
fwait
mov
dec
sub
orl
pop
aaa
into
mov
push
jae
mov
repz
test
cmpsb
adc
sub
stc
rol
dec
sahf
int
in
xchg
mov
pushf
mov
mov
xor
pushf
push
fidivs
les
sti
mov
inc
dec
out
mov
push
stos
aas
js
or
and
in
imul
test
sbb
cmp
int3
movsb
hlt
sbb
es
adc
mov
ds
pushf
add
lods
push
outsl
shlb
xor
loope
popa
or
jmp
repnz
insl
add
insb
push
icebp
aas
mov
mov
push
inc
pop
add
xor
xchg
mov
popf
shrl
enter
cltd
lahf
dec
pop
sahf
inc
xchg
popf
out
inc
dec
aas
push
adc
mov
addr16
sbb
mov
pushf
insb
fisubrs
inc
mov
mov
push
lods
mov
insl
std
pop
xchg
scas
inc
mov
cld
adc
sbb
cli
into
or
es
andl
xor
test
fsts
arpl
push
jo
xor
test
mov
adc
inc
lret
push
sub
dec
popf
push
jmp
insl
les
sbb
jb
dec
mov
popa
fsubrl
out
xchg
arpl
mov
dec
jl
jns
cmpsb
icebp
shlb
add
loop
mov
or
pop
cmpsl
mov
cmp
sbb
sbb
or
gs
bound
mov
in
leave
out
add
bnd
in
es
pop
add
mov
or
cmp
mov
mov
pop
repz
dec
mov
sub
inc
adc
add
cli
xlat
popf
jmp
popa
lods
lahf
or
fsubr
xchg
mov
loop
data16
jbe
sbb
clc
mov
aas
xor
js
pop
faddl
add
popa
nop
inc
popf
adc
rcll
cmp
cmpsl
shll
jns
adc
jo
xchg
incb
jp
mov
mov
aas
adc
cmpsb
xor
mov
mov
push
inc
push
push
push
mov
and
jmp
jge
lds
jnp
es
cmpsl
andl
inc
mov
xchg
scas
int
xchg
aas
mov
mov
setle
xor
movsb
xchg
cli
clc
movsb
mov
andl
jbe
cmp
in
repz
das
xchg
clc
fdivrs
inc
mov
dec
test
in
popf
adc
cmc
fdivl
sbb
pop
sbb
jne
icebp
cmp
mov
cmp
adc
add
in
xchg
mov
add
call
sbb
xor
movsl
jb
leave
xchg
ret
xchg
imul
test
adc
push
push
popf
sub
push
mov
push
leave
cmpsb
or
xor
cmp
mov
dec
cld
jle
aaa
push
jns
lods
subl
bound
repnz
push
leave
adc
sbb
and
lods
insb
push
popa
icebp
jecxz
jbe
pop
lock
lods
cmp
scas
ss
bound
xchg
jb
test
int
fs
pop
cmpsl
mov
mov
mov
mov
mov
jge
pop
icebp
xchg
inc
pop
xor
push
push
dec
push
sbb
and
fsubr
mov
sbb
outsl
cmc
fdivrs
ja
dec
pusha
sub
push
mov
mov
jle
mov
dec
roll
pop
push
dec
test
fisubl
or
sbbl
bound
push
pusha
dec
in
dec
pop
icebp
mov
ret
js
cmc
test
xor
push
mov
into
xor
mov
cli
adc
and
mov
je
in
movsl
fwait
lods
inc
int3
mov
adc
mulb
push
insl
sub
gs
pop
gs
add
or
xchg
dec
leave
push
or
sub
mov
push
jl
jnp
sbb
push
mov
inc
push
cmpsb
pushf
adc
negb
bnd
add
jnp
das
rclb
shrl
aaa
inc
fimuls
or
dec
push
dec
repnz
mov
lods
and
subl
in
mov
js
fidivrs
imul
jecxz
dec
mov
mov
aaa
pushf
aam
jmp
and
cmpsb
xlat
cmpsl
icebp
mov
push
call
mov
out
lret
ds
std
pop
outsb
clc
mov
mov
inc
xor
mov
cltd
push
imul
inc
fucomp
inc
addr16
js
pop
and
test
aas
dec
sbb
and
ja
loop
rcrl
mov
leave
lock
cwtl
pushf
pop
inc
push
fsts
jno
inc
loope
test
ret
jnp
adc
je
mov
dec
pop
mov
inc
dec
je
mov
adcb
mov
inc
arpl
pop
shll
or
xchg
test
add
movsl
sbb
mov
push
sub
adc
and
cmpsb
movsl
adc
loopne
rolb
lock
daa
mov
inc
in
mov
push
xor
mov
sbb
fdivs
shl
xchg
inc
dec
add
lods
cmpsb
insl
aad
mov
fsubrs
inc
pop
add
dec
dec
or
pop
inc
es
ret
out
pop
test
imulb
loopne
ret
xlat
and
and
add
jbe
scas
ret
adc
decb
daa
cmp
rcll
add
sahf
lods
inc
xchg
sbbb
subl
pop
shll
out
and
pop
fimull
popa
mov
mov
gs
pop
mov
pop
out
or
pop
cmp
insb
cmp
les
push
lods
mov
fnsave
sbbl
cmp
dec
daa
dec
jne
dec
xlat
cmp
and
or
das
testb
mov
sub
xor
xchg
jmp
lods
in
int
jae
stos
mov
add
je
inc
je
rcrb
and
cmp
mov
dec
sub
cmp
shrl
lds
ret
loope
xor
xchg
ror
shrb
imul
sbb
cmp
ror
pusha
idivl
inc
cmp
xor
int3
dec
out
outsb
lds
and
insl
loope
xor
adc
adcb
iret
xor
sbb
es
adc
repnz
pop
mov
dec
hlt
sbb
push
outsl
inc
pushf
xor
adc
lds
fnsave
insl
cmp
sbb
shrb
hlt
es
xor
add
mov
test
sbb
jg
mov
out
fdivs
cmp
push
scas
ljmp
add
xchg
cmpsb
mov
rcrl
jl
sbb
test
jns
xchg
in
mov
fidivl
dec
lcall
fwait
insb
mov
ljmp
notb
mov
test
cld
jmp
xchg
into
jp
push
mov
dec
dec
mov
fs
int
pop
loope
sub
cld
iret
cld
mov
bound
sar
or
and
pop
mov
ret
inc
test
aam
sbb
add
xor
dec
and
jae
out
lret
xor
cmp
mov
aas
fst
mov
arpl
pop
mov
xchg
push
xor
mov
repz
xchg
jo
jae
add
loop
inc
out
and
add
mov
jle
pop
aad
lret
dec
fidivs
adc
insb
add
sub
and
shlb
lods
jmp
mov
sti
ret
cmp
and
ret
cmp
repz
xchg
stc
in
cltd
pop
ret
mov
dec
insl
add
xorl
rorb
mov
lock
subb
pop
mov
xor
repnz
inc
fdivl
sbb
mov
frstor
mov
int
stos
xchg
add
in
cmp
add
push
dec
jne
mov
pop
sub
mov
cmpl
or
rcl
sub
pop
or
mov
cli
push
movsl
fsts
aam
sbb
push
rcr
mov
sbb
daa
scas
sbbb
stc
push
gs
hlt
mov
sbb
jne
dec
lods
inc
ds
pop
repz
std
dec
cmpl
adc
repz
sbb
xchg
loope
dec
out
dec
sbb
test
sbb
shr
loop
adc
out
imul
lcall
es
sub
fidivrs
movsb
mov
insl
jg
movsb
sub
adc
gs
mov
bound
cwtl
and
bound
push
outsb
nop
push
mov
loope
cmp
mov
enter
ja
inc
push
dec
repnz
mov
sbb
push
dec
push
icebp
shlb
idivl
sahf
les
in
int
and
mov
and
stc
je
jbe
xor
jb
and
lods
xor
mov
mov
mov
ja
mov
pop
jg
sub
stc
movb
xchg
popf
shll
int
xchg
aas
sti
std
insb
in
sbb
fsubs
inc
fnstsw
hlt
mov
mov
jb
cwtl
popa
jo
lret
cli
popa
dec
mov
pushf
dec
fldcw
imul
adc
xor
or
jle
imul
mov
push
jle
ds
push
dec
add
es
xor
lret
cmp
fsubs
loopne
or
scas
jge
mov
frstor
stos
inc
shl
stc
or
repnz
pop
mov
cmpsl
fisttps
mov
push
aam
rol
xchg
in
sbbl
or
ret
cs
cs
jmp
xchg
sti
fwait
dec
sahf
in
ret
dec
insl
das
test
out
inc
cltd
clc
icebp
mov
mov
mov
movsb
lret
addr16
in
rorl
pop
jns
xchg
jl
cmp
push
std
xchg
sub
cwtl
cmp
push
mov
stos
xchg
inc
fsubrs
inc
sbb
dec
add
push
mov
inc
dec
and
cmp
xchg
lahf
push
test
dec
iret
xor
dec
mov
dec
sbb
test
lock
sub
dec
insb
rcll
pusha
lods
mov
xchg
out
sub
xchg
inc
test
xchg
aad
call
aas
out
xor
mov
sahf
aas
ds
dec
aad
lods
jae
jbe
inc
arpl
inc
out
pop
arpl
xchg
inc
jne
xchg
adc
pop
jae
lcall
adc
icebp
iret
xchg
and
div
xchg
lret
cld
mov
add
sub
pushf
scas
dec
addr16
nop
das
movsl
add
lock
insl
repz
ss
mov
inc
fiadds
jne
adc
std
or
mov
sbb
shl
inc
das
sub
push
pop
push
push
or
mov
test
enter
inc
cmpl
test
cmc
nop
push
fdivr
adc
cwtl
rcrb
fs
inc
lods
xchg
sub
sbbb
mov
cmc
xchg
loop
adc
sbb
add
mov
les
cmc
pop
fists
js
pop
movsl
lds
ret
cli
jbe
inc
sbb
fucomi
and
sub
dec
and
push
pushf
adcb
jg
andl
push
add
push
jl
lock
inc
in
scas
mov
out
int3
arpl
lret
jo
jb
les
dec
fisubrl
cltd
aaa
call
f2xm1
inc
jne
inc
fs
xlat
lgs
cli
ret
loope
cmp
sub
pop
cmp
push
test
jle
aad
aas
push
and
xchg
pop
bound
cmc
mov
and
movl
push
aaa
aad
roll
mov
ficoms
pop
xchg
jge
mov
inc
pop
insl
sti
jnp
shrl
lcall
icebp
cs
pop
out
mov
cs
pop
ja
sahf
adc
cmpl
sbb
das
cld
xchg
popa
in
shll
or
out
xchg
xorps
mov
or
fwait
xor
pop
dec
fcmovnu
fistps
insb
add
fldt
mov
add
push
aad
pushf
or
mov
mov
cs
pop
loopne
outsl
ret
repnz
pop
rcll
or
lods
je
mov
out
cs
inc
sbb
xchg
in
mov
ret
xor
adc
mov
dec
sbb
hlt
pop
mov
jp
jmp
ret
jb
rcl
push
jmp
lahf
and
jb
xchg
addb
sub
imull
lret
mov
pop
loope
sahf
popl
pop
xchg
sub
and
popa
fsubrl
lret
stc
in
mov
sub
pop
out
test
mov
addr16
and
push
hlt
mov
mov
cmp
push
movsl
in
and
inc
adc
scas
pop
jo
mov
pop
push
and
push
xchg
or
push
jmp
jmp
sti
ss
test
jae
cmp
lret
lret
xchg
or
mov
test
out
add
cmp
inc
rcrl
mov
inc
xor
rorb
lea
cmpsb
inc
and
dec
fldcw
je
xchg
cmpsb
lea
push
jns
or
pop
test
loope
ret
pop
xchg
icebp
movups
mov
sbb
jb
ja
je
mov
xchg
or
scas
ljmp
dec
cmpb
ds
jmp
xor
gs
xlat
pusha
add
mov
loope
insb
jecxz
aaa
adc
xchg
mov
fwait
fwait
push
pop
inc
loope
repz
and
lock
pop
push
jae
mov
mov
orl
pcmpeqw
xchg
mov
lock
or
mov
cmp
push
jne
fidivrs
stc
pop
hlt
and
mov
adc
mov
movsl
inc
loop
or
mov
dec
adc
cmp
jge
imul
sbb
jg
sbb
sbb
fs
shrb
mov
dec
xchg
in
movsb
push
dec
outsl
inc
dec
inc
push
xor
xchg
adcl
roll
dec
adc
cltd
cmc
sti
and
mov
aaa
add
jo
imul
test
lret
imull
sbb
outsb
adc
push
jb
cmc
push
in
sahf
jo
rorb
jp
roll
stos
es
frndint
inc
loop
lds
jg
fsubr
and
and
loope
add
push
iret
loop
pop
mov
sub
hlt
mov
das
mov
repz
xor
sub
pop
push
aas
pop
mov
loope
test
mov
and
insb
repz
and
xor
loop
arpl
das
jp
lret
push
push
mov
decb
sbb
lds
cs
leave
push
mov
loopne
inc
loope
mov
xor
xor
or
movsb
popl
call
cmp
pusha
mov
and
popf
xor
mov
xor
fwait
adc
les
mov
or
inc
xchg
sbb
or
cmp
mov
sbb
xor
out
push
nop
jmp
mov
std
in
fadds
push
inc
sub
fld
jae
movsb
mov
mov
arpl
jb
add
loope
dec
adc
add
and
pop
loope
stos
xchg
adc
xchg
jmp
lcall
stos
mov
mov
rcll
scas
ficompl
bound
push
mov
pop
push
dec
pop
mov
rcrl
imul
pop
inc
xlat
mulb
dec
xlat
outsb
jp
roll
and
popf
lods
cld
pusha
cmc
mov
bound
cmp
push
das
or
imull
sbb
test
arpl
adc
int
mov
pop
mov
sti
xchg
call
add
mov
and
cmc
adc
mov
and
clc
or
push
fistps
jbe
pop
std
outsl
push
sbb
mov
rcl
fiaddl
popf
vmovntps
sub
xchg
dec
js
pop
mov
jne
inc
xor
sub
xchg
test
lock
sub
add
stos
nop
mov
mov
push
iret
jecxz
add
mov
test
imul
sahf
in
cmp
push
lea
ljmp
cmpb
sbb
test
incb
loop
xchg
sub
jge
pop
addr16
mov
mov
mov
aas
pop
jl
jg
jnp
jae
sti
shlb
mov
test
daa
imul
mov
mov
jle
stos
cltd
int3
std
xchg
aas
cmp
enter
popf
imul
and
ss
int
sti
push
pop
in
xchg
jne
icebp
out
xchg
push
fnsave
enter
outsl
repz
nop
daa
dec
mov
xor
jecxz
mov
sbb
push
jl
imul
push
sti
cmpsb
imul
xchg
fs
jns
mov
mov
inc
jmp
inc
sub
incb
std
push
and
out
mov
push
daa
mov
or
mov
and
enter
int
dec
fs
and
sbb
adc
push
jmp
jmp
sub
adc
cmc
jp
mov
add
mov
fs
das
mov
push
sub
fldenv
push
add
in
mov
add
xor
arpl
adc
ficompl
mov
adc
cs
les
pop
sbb
mov
shlb
push
loop
add
inc
incl
pop
shrl
jmp
mov
lret
loope
fs
inc
iret
data16
mov
jb
xchg
mov
fwait
lods
test
gs
sub
ret
mov
inc
aas
xchg
shl
or
xor
hlt
icebp
out
and
sbb
jl
mov
and
push
pop
lcall
and
xchg
lcall
dec
aad
jmp
fnstenv
jge
cwtl
sahf
xor
fwait
sbb
adc
mov
cmp
pop
and
pop
jle
dec
or
mov
loope
jo
mov
mov
loopne
lds
fsubrp
cmp
mov
call
sbb
or
test
or
mov
stos
data16
fwait
pop
sub
into
mov
mov
ss
leave
and
jo
jp
pusha
sahf
out
push
loope
out
imul
lods
xor
sbb
add
adc
or
add
lds
ljmp
mov
adc
mov
push
cs
ja
ret
dec
lret
pop
gs
stc
lods
stos
sub
test
jecxz
mov
push
daa
lock
rcr
cmp
cmp
push
orb
push
mov
stc
movsb
sub
push
pop
dec
dec
xlat
into
inc
arpl
stos
pushf
out
mov
mov
int
xchg
mov
test
mov
pop
insl
or
clc
movsl
fucomi
adc
cmp
xchg
mov
fmuls
adc
jo
pushf
and
ret
pop
rcll
push
jp
pusha
mov
fisubrs
fsubrl
aaa
push
arpl
sbb
inc
mov
mov
push
enter
adc
push
push
cmp
mov
mov
lea
outsl
subb
sub
ret
fsubl
inc
nop
fidivl
pop
test
or
ss
sub
and
xor
mov
adcl
pop
outsb
pfrcp
sbb
push
sbb
or
cmpsl
jbe
fidivs
mov
dec
xchg
fsubrs
or
ret
ret
ds
pop
or
cmp
mov
cmp
or
pop
in
scas
xor
inc
notl
das
sub
or
pop
icebp
mov
outsl
xchg
pop
inc
sub
repnz
lock
out
mov
xor
cmpsl
imul
popf
rcrb
mov
mov
jbe
xor
or
es
mov
xor
mov
fiaddl
es
aam
in
adc
and
push
inc
sub
mov
lret
add
adc
push
add
pop
inc
fs
fistl
cmp
and
jp
dec
movsb
xlat
push
cld
loop
clc
imul
vpaddw
fdivrs
cmp
xchg
inc
out
nop
out
sarb
add
adc
mov
push
cs
push
popa
shrl
or
pop
je
icebp
adc
pop
cli
lea
inc
pop
shlb
xor
lods
inc
fisttpll
leave
xlat
repz
xchg
test
sub
mov
pusha
dec
je
sub
pop
cmc
add
sbb
icebp
sub
ret
lods
cmp
data16
ss
pop
shr
out
pop
mov
add
mov
iret
outsb
xchg
xchg
sub
loop
cltd
and
cmp
mov
repz
push
dec
mov
sbb
cli
mov
cltd
stos
std
xchg
mov
mov
sub
movsb
mov
mov
ss
mov
inc
movsl
cmp
ljmp
jno
in
aam
push
test
push
icebp
int3
add
insb
mov
cmp
adc
mov
sti
or
cs
dec
sub
sbb
push
jmp
in
jbe
xorl
ret
dec
mov
pop
mov
sti
ret
mov
insb
mov
aad
push
sti
add
in
mov
movsb
push
outsb
std
test
nop
lods
mov
cmc
mov
inc
in
mov
shll
xchg
xchg
and
push
mov
mov
ja
clc
addr16
sbb
dec
enter
loop
orb
or
sbb
shl
push
movsl
imul
dec
lcall
sbb
ds
ficompl
into
or
mov
jne
jne
shll
shll
lret
loopne
lret
pop
sub
aad
push
xchg
adc
pop
es
sub
negb
scas
dec
test
pop
repz
sub
xchg
sbb
push
cltd
adc
call
xlat
cmp
dec
sbbl
loopne
dec
lcall
sbb
sub
inc
decl
repnz
aas
jle
pop
jl
jmp
repnz
pop
mov
sub
xor
outsl
movsl
push
bound
lods
test
loopne
inc
mov
enter
push
addb
ret
sbb
neg
inc
and
fdivrl
jle
ret
push
pop
mov
mov
or
dec
cmp
arpl
and
mov
jle
scas
fwait
xor
lods
sbb
out
bound
cltd
xchg
outsb
cmpsl
cmp
jmp
mov
mov
loop
sub
add
jbe
jmp
jp
test
or
pop
mov
mov
in
in
xor
stos
adc
inc
test
jmp
rorl
dec
inc
mov
inc
xchg
fldt
dec
repnz
push
repz
adc
clc
and
mov
pusha
jmp
ss
sbb
out
fstpl
lea
in
jle
and
mov
mov
inc
popa
inc
add
cmp
jbe
add
sub
and
and
add
out
mov
das
mov
mov
or
mov
cmp
testl
out
xchg
xchg
xor
dec
mov
mov
fs
jl
pop
mov
out
aaa
mov
daa
inc
repz
mov
pushl
movsb
sbb
add
aad
pop
cmc
int3
jae
and
cld
adc
jbe
pop
cli
xor
int3
punpckhbw
in
insl
pop
ret
repz
clc
stc
jo
test
mov
scas
push
or
sti
jne
iret
push
jle
and
into
lahf
lahf
and
sti
and
jnp
sub
add
mov
insl
cld
or
xor
xchg
push
scas
pusha
or
lret
sbb
push
inc
mov
mov
sahf
pop
pop
flds
jnp
fld
and
pop
hlt
les
stos
jno
ja
mov
call
adc
sbb
imul
les
popw
sub
pop
std
xor
cmp
push
jmp
les
fwait
nop
daa
xor
add
mull
int
out
add
dec
push
in
jp
inc
or
fwait
jae
push
lahf
icebp
mov
js
add
dec
mov
mov
jae
dec
shr
ret
stc
nop
sub
push
sub
inc
insb
add
rorl
mov
gs
fiaddl
xchg
mov
pop
leave
pop
in
xor
mov
dec
fcomi
mov
in
stc
pop
push
stos
shlb
mov
daa
dec
aam
xchg
sarl
je
xchg
cmp
into
pushf
and
lcall
push
jp
pop
and
xchg
xor
mov
and
pop
int
mov
in
push
push
shrl
mov
adc
mov
sbb
mov
add
pop
cwtl
add
pop
cmp
sbb
mov
adc
cli
mov
pushf
jno
push
xor
pop
xchg
aam
push
mov
shlb
and
inc
sahf
popf
mov
sbb
daa
lret
imul
adc
pop
not
and
xchg
fsub
movsb
sbbl
adc
dec
int
shl
adc
test
jb
xor
lods
divl
mov
jmp
cmp
ja
and
mov
sub
movsb
nop
imul
imul
cmc
outsb
adc
or
inc
outsb
mov
mov
pop
push
fimuls
and
fdivrs
aam
test
xorb
pop
rclb
imul
pop
mov
test
pusha
sub
cmp
loopne
sbbl
imul
sbb
push
xor
scas
popa
jp
and
jne
das
pushl
xor
sub
lea
hlt
xchg
sub
sbb
shll
fisubl
cmp
stc
add
imul
out
loopne
or
push
pop
jle
shrb
out
das
lahf
dec
lock
jle
rcl
fidivs
inc
mov
lret
popa
sbb
lods
sti
adc
mov
lret
fwait
cmpsl
shlb
scas
or
lahf
pop
xor
and
jle
jnp
and
das
inc
fsubs
and
jecxz
clc
inc
sbb
cmove
push
mov
xchg
pop
popa
xor
sarb
mov
add
jns
repnz
testb
add
pop
xor
movsl
lds
pop
cmp
jmp
xchg
add
cmp
in
mov
imul
fsts
test
or
mov
testb
xchg
mov
cs
mov
mov
mov
loopne
sub
mov
inc
mov
xchg
pop
inc
jecxz
ret
adc
xchg
stos
sbb
inc
fxch
mov
sub
aas
mov
jae
aaa
test
mov
xor
xor
dec
mov
bound
pop
sbb
cmp
andb
cmpsb
repnz
or
loop
xor
jg
mov
adcl
ja
mov
out
aad
adc
sbb
mov
loope
sub
pop
pusha
pop
repz
nop
int3
inc
outsb
add
outsb
or
jecxz
mov
sub
shl
jne
addr16
ficompl
arpl
sbb
fcompl
jmp
xor
mov
xchg
bound
inc
cmpl
push
push
inc
push
sub
xchg
fs
sub
in
js
andb
or
notl
push
daa
jb
into
test
mov
cmp
adcl
lahf
xchg
mov
es
outsl
lahf
push
repz
jl
out
int3
cmp
clc
xorl
xor
and
mov
aam
inc
movsb
jecxz
stc
lods
xor
mov
addb
adc
imul
in
loopw
push
push
sahf
add
xchg
cltd
xchg
testl
fidivrs
and
inc
ret
xor
adc
push
daa
sub
orb
repnz
std
enter
cmp
jp
mov
ret
lods
and
lret
jp
loope
or
stc
nop
pop
mov
pop
xor
push
call
out
scas
outsl
addl
into
mov
mov
aaa
xchg
xor
jecxz
lahf
lock
push
jns
int3
stos
push
jg
lret
push
out
repnz
jo
popa
adc
int3
clc
push
enter
aad
mov
imul
cld
mov
pop
mov
push
xchg
mov
cmp
pusha
dec
out
push
jp
repnz
jbe
xchg
and
rcrb
mov
xor
push
mov
jnp
jae
push
std
cs
stc
pop
ss
negl
cmp
pop
adc
fs
pop
sub
pop
icebp
push
aad
push
lock
add
shr
call
mov
cmp
negb
push
out
xor
jne
cld
cmp
cs
rorl
cmpsl
jno
ss
mov
or
adc
and
adc
div
mov
ret
int3
adc
push
in
lods
xorb
sbb
cmp
test
cmp
frstor
mov
nop
outsl
adc
mov
jg
sahf
cmpsl
or
imul
xchg
imul
lret
sub
sbb
imul
mov
jns
jns
pusha
adc
inc
test
xor
pushf
test
xor
cmp
in
clc
out
les
add
loop
jae,pn
loope
dec
add
pop
dec
xor
dec
push
shr
push
lea
pop
outsl
daa
enter
pop
or
xchg
cs
pop
mov
addl
push
sahf
mov
mov
in
ljmp
mov
jg
push
push
jmp
jp
fyl2x
fs
adc
mov
mov
cwtl
cmp
mov
pop
sarl
je
ljmp
xor
in
out
outsb
loopne
adc
inc
jmp
sbb
jg
mov
adc
sub
sbb
enter
loop
xor
jmp
call
jbe
stos
xor
lcall
add
add
fwait
adc
je
cwtl
mov
jne
imul
cmp
xchg
lret
leave
cmpsl
les
fs
lock
addr16
or
push
nop
pushf
and
imul
mov
hlt
sbb
and
xor
mov
sbb
shlb
sarb
mov
mov
mov
jno
push
and
iret
arpl
pushf
lods
ss
jp
in
jo
cmp
mov
xchg
push
mov
mov
and
sbb
mov
inc
push
shll
adc
fsts
jne
sub
xchg
lods
xchg
dec
xchg
sub
mov
das
add
sahf
pop
jecxz
sub
push
add
cmp
sahf
inc
sbb
dec
pop
mov
push
cmpsb
add
cltd
xor
sub
jmp
or
icebp
sbb
aam
or
xchg
or
jg
jbe
xor
mov
sub
and
jle
lods
inc
out
outsl
es
lret
in
fisubl
popa
push
cmpsb
jl
inc
sub
xchg
push
js
inc
pusha
cmc
cltd
out
les
jle
mov
push
mov
pop
out
mov
ret
jne
cmc
xchg
popf
repnz
lds
dec
pop
or
sbb
hlt
sub
lods
mov
xchg
jne
inc
loopne
pop
sbb
mov
out
jp
inc
pop
loope
aam
jecxz
dec
push
mov
imul
fnsave
mov
push
push
sti
or
popf
xor
ljmp
inc
cmp
lahf
mov
mov
xor
inc
mov
pop
push
cmp
add
loope
call
or
jnp
add
sub
bound
nop
ss
lret
outsl
pop
inc
or
jl
adcl
pop
dec
dec
mov
or
pop
es
cmp
xor
inc
rcll
cltd
std
push
push
dec
dec
or
cmpsb
movsb
popf
sar
ret
leave
push
xor
in
sbb
add
mov
and
testb
je
gs
push
in
jle
xchg
daa
jl
addb
and
movsl
sub
mov
fnsave
test
into
repnz
or
test
daa
jne
enter
sub
cli
adc
xchg
jecxz
lcall
jge
sub
inc
fdivrp
mov
pusha
out
jl
out
inc
lds
cmp
sbbl
sbb
not
or
mov
hlt
mov
xchg
test
fdivs
sub
rcrb
rcl
hlt
pushl
mov
imul
icebp
ds
decb
cmp
scas
inc
sar
mov
jnp
adc
pusha
pop
out
aam
jb
arpl
cmp
cmpl
xor
mov
sbb
push
jmp
mov
imul
inc
xor
pop
bt
xchg
insl
rclb
lock
jno
int3
clc
pop
pop
aad
dec
pop
pop
clc
sbb
or
adc
paddsb
xlat
pop
clc
cmp
aas
inc
and
orb
popa
fists
add
das
lock
push
inc
subl
ljmp
mov
cwtl
andb
dec
iret
xor
in
mov
inc
dec
mov
mov
push
in
out
addl
mov
add
mov
jno
insl
clc
xchg
push
aas
adc
fbstp
xor
fcmovb
fisttpl
lock
ljmp
cmp
add
pop
out
dec
push
in
dec
jecxz
ds
xor
imul
sahf
in
pop
fwait
inc
mov
fdivs
pop
pop
lahf
push
in
aas
roll
pop
sahf
push
out
std
xchg
and
and
mov
das
ret
inc
insb
fidivrs
add
jl
and
jmp
push
mov
in
outsl
fwait
movsl
arpl
cmpsb
loop
xlat
ljmp
gs
pusha
add
push
mov
jae
push
jg
out
xchg
outsb
cmpsl
adc
or
sarb
jnp
jns
aam
dec
and
xchg
lahf
scas
les
xor
sti
cmp
repnz
mov
pusha
pop
sub
test
cmp
add
lea
data16
xorb
cs
sbb
insb
pxor
rcrl
cmc
adc
jne
popa
xor
xchg
sub
push
sub
dec
mov
insb
jmp
ljmp
xchg
push
sbb
mov
bound
outsb
fldenv
mov
jg
aas
imul
imul
pop
pusha
js
or
test
pop
pop
push
out
bound
repz
mov
rcll
test
mulb
jae
fisubrl
subb
pop
sahf
dec
push
xlat
testl
aam
mov
xor
aas
addr16
lds
add
push
idivb
jp
push
mov
add
inc
cmpsl
cmp
jecxz
les
or
or
jl
js,pn
rorl
lahf
adc
xchg
lahf
jecxz
dec
xchg
lar
inc
sbb
mov
and
or
lods
xchg
mov
scas
inc
and
xor
jg
fnstsw
lea
jge
sbb
movsl
cmc
inc
pusha
jecxz
pop
lcall
out
push
sub
xlat
imul
pusha
dec
fnstenvs
fsubrp
sub
sub
jne
mov
dec
es
test
cld
fidivrl
dec
push
and
xchg
dec
xchg
movsl
ds
fcmovnb
sub
fistl
movsl
fisubl
leave
inc
popl
push
into
lret
out
xchg
or
jmp
sub
xchg
inc
jno
js
dec
fucomip
cltd
xchg
sub
cmp
mov
out
mov
mov
jno
cwtl
das
loope
cmp
ret
out
xor
mov
sbb
cs
pop
rcrl
add
dec
jp
cwtl
das
push
cmpsb
cmp
iret
push
out
stc
dec
mov
ja
cwtl
das
push
cmp
mov
out
cli
pop
mov
fsubs
cwtl
xor
dec
cmp
out
push
out
cmp
push
sub
xor
out
sbb
mov
out
mov
popa
outsb
lds
push
shlb
fwait
cld
jg,pn
xor
and
jmp
pop
fs
int
push
scas
jmp
test
movsl
adc
mov
sbb
rol
pop
mov
ret
test
ret
cmp
in
jmp
sub
pop
lds
push
je
in
dec
loopne
cmp
pop
or
call
fisubrl
and
xchg
mov
dec
xor
pop
sti
or
mov
mov
inc
movsl
aad
push
and
push
xor
addl
outsl
into
inc
sbb
fidivs
mov
lcall
fadd
mov
clc
sbb
movsl
pop
adc
cld
push
ds
jo
test
inc
lret
sub
jnp
sahf
enter
add
pop
lea
sti
dec
lahf
mov
push
pop
into
movsb
jnp
jmp
repnz
mov
cmp
pop
sarl
in
and
mov
inc
xchg
jbe
shrb
mov
lock
sub
push
mov
mov
jb
lret
xchg
fimull
or
insl
xchg
sbb
xchg
jo
or
mov
sarl
xor
mov
or
pop
push
mov
mov
pop
sbb
shr
or
xor
bound
fs
pop
adc
push
xor
adc
mov
pop
xchg
inc
std
push
push
sbb
or
dec
cmp
or
cmp
pop
in
jmp
movsb
rcrw
jae
pop
lret
ret
and
xchg
sbb
pop
dec
cmp
clc
cmp
or
cli
jbe
pop
mov
repnz
out
pop
pop
cmc
sbb
jo
cmp
scas
mov
or
test
ljmp
push
or
data16
jbe
lods
adc
mov
xchg
dec
insb
out
jp
jp
push
fxam
jl
je
push
subb
jne
popa
add
daa
inc
in
jo
hlt
sub
mov
sti
leave
jge
cli
jg
sbb
out
test
sbb
inc
sbb
loopne
ror
inc
cmpsb
pop
xor
hlt
pop
pop
cld
xchg
push
mov
mov
push
in
inc
xchg
icebp
xor
outsb
sarb
add
cmc
push
cmc
xor
iret
popa
push
decb
add
sbb
movsl
inc
dec
sub
cltd
mov
in
lds
out
aad
sahf
dec
mov
out
push
lods
cmp
jmp
mov
jge
push
add
sub
add
sarl
lock
std
cmp
cld
xchg
jne
repnz
mov
nop
insl
sbb
mov
faddl
lods
rorl
sub
dec
adc
push
int3
mov
xchg
push
mov
xchg
mov
arpl
lea
or
pop
push
sub
pop
mov
mov
scas
je
std
jo
and
daa
adc
out
mov
pop
mov
loopne
sahf
add
mov
sub
daa
jo
in
jecxz
or
adc
loopne
ljmp
sbb
fs
xchg
or
in
aad
mov
xchg
dec
in
out
and
pop
xor
mov
or
jmp
xor
std
or
or
inc
push
bound
pop
out
and
dec
and
fdivrl
lods
push
shl
xor
cmc
fcomps
cli
pop
sbb
arpl
xchg
dec
orl
cmp
addb
push
sub
ret
and
into
lcall
push
sbb
adc
cmp
add
lds
sub
jnp
push
sub
in
lret
xchg
insb
fimuls
xchg
out
adc
rcll
mov
insl
inc
cmp
fsubrs
js
rolb
js
fcomi
mov
push
adc
pop
out
imul
das
cmp
mov
push
jne
js
lods
pop
sub
ror
pop
sub
mov
cmpsl
gs
add
lcall
mov
sbbb
ficomps
iret
repz
fs
dec
dec
icebp
push
mov
pop
ljmp
adc
stos
mov
xchg
or
stos
jmp
mov
lret
bound
shll
shrb
push
sbb
inc
dec
dec
repz
cmpsb
imul
push
adc
test
sbb
mov
sbb
lret
push
les
mov
and
andl
xchg
int3
lret
rol
xor
push
cmpsb
sbb
xor
rolb
and
movsb
sbb
dec
mov
cmpsb
xorl
mov
dec
push
push
pop
loopne
or
sahf
push
in
fadd
dec
inc
clc
call
pop
enter
dec
add
mov
pop
xor
sub
sub
mov
pop
jg
sub
add
jg
aad
mov
push
mov
pop
pop
aad
jo
ret
mov
mov
dec
cwtl
sbbl
or
jnp
jecxz
adc
add
xor
jns
fdiv
dec
popa
jb
rcll
xor
dec
rorl
mov
sub
mov
test
js
ret
or
fcmovnb
stos
push
mov
test
fisttpll
mov
jo
xchg
pop
pop
push
nop
popf
dec
loope
jb
xchg
sub
lds
adc
push
loope
xchg
jmp
clc
icebp
jl
hlt
jmp
mov
mov
mov
and
jb
adc
rorb
lds
mov
outsb
cmpsl
inc
std
aaa
and
push
sub
adc
test
bound
icebp
mov
ja
call
aad
pushf
aam
fwait
out
mov
ds
xlat
jne
stc
es
push
hlt
mov
or
xchg
mov
adc
cmp
jge
inc
inc
in
mov
scas
or
cwtl
add
cmpsb
inc
xchg
pop
std
sti
jnp
insl
out
aad
xchg
movb
xchg
icebp
dec
push
jb
movsb
push
dec
mov
stc
pop
pop
jns
xchg
ret
loope
sub
dec
mov
mov
lock
inc
fsubs
and
pop
mov
stos
and
sub
mov
and
sub
in
and
jns
dec
repz
lcall
test
jle
xor
test
stos
xchg
xor
test
xor
adc
call
xchg
add
movsb
mov
pop
cmp
xor
in
pop
testb
push
jb
jecxz
mov
clc
push
mov
jb
jns
xor
loope
sti
and
mov
cltd
pop
inc
fcomi
mov
das
jl
sub
js
loope
sub
inc
not
cmp
loopne
icebp
mov
out
xor
ljmp
and
add
jo
mov
aaa
xchg
sub
xchg
insb
sti
scas
mov
add
call
imul
jmp
dec
pop
mov
lds
mov
outsl
fidivl
cmp
xor
arpl
les
fcomi
dec
cmp
xor
add
inc
jge
mov
outsb
push
enter
stos
sub
pop
pop
leave
dec
inc
aas
cld
xor
add
xchg
dec
and
cmp
call
iret
inc
sub
jmp
adc
push
in
mov
ss
js
je
and
out
movsl
test
pushf
mov
nop
insb
rcr
mov
iret
mov
and
lock
lods
sub
jne
dec
adcl
and
and
repnz
add
fstpt
andl
cmpsb
lret
cld
xchg
sub
out
iret
and
insl
and
hlt
mov
je
shrb
dec
add
adc
es
into
xor
in
repz
int
xlat
mov
les
pop
in
adc
sbb
xor
add
dec
xchg
loopne
popf
sti
mov
loopne
mov
arpl
cmp
sbb
jmp
add
into
aas
scas
imul
jge
xchg
loopne
xchg
xlat
mov
push
mov
mov
adc
test
fdivl
stos
ret
adc
cmpsl
lcall
cld
sbb
shlb
jp
fbstp
mov
xor
mov
push
lahf
jno
dec
loop
in
ja
imul
jge
push
push
jo
aad
ficoms
repz
add
cmp
inc
fcomip
jle
or
lahf
daa
xchg
das
std
aam
xor
incb
lock
push
ds
test
enter
push
push
loope
xchg
mov
int
inc
js
cmp
mov
hlt
mov
sub
and
shl
pop
mov
sarl
pop
fwait
scas
dec
push
cmp
mov
xor
mov
xchg
adc
ja
out
addb
mov
test
repz
sbb
test
inc
lea
loope
shll
dec
cmp
jbe
mov
mov
adc
rcrb
jge
imul
sub
jo
xchg
addr16
imul
enter
sub
mov
or
hlt
dec
push
repnz
leave
jg
das
insb
arpl
ret
sub
pop
xlat
push
jb
cmp
mov
and
mov
push
aad
mov
jmp
or
xor
fbstp
adc
enter
jmp
adc
mov
add
test
pop
adc
test
adcb
sarb
dec
aaa
es
adc
sub
pop
insl
inc
sub
loope
push
scas
cmpsb
jecxz
mov
arpl
das
pop
xor
and
fcompl
dec
xorb
and
adc
jl
cmp
mov
test
mov
pop
adc
inc
cmpb
in
popf
lods
inc
jmp
je
or
cltd
sbb
pop
xchg
mov
xchg
xchg
repnz
adcb
in
mov
or
jo
xchg
rcl
dec
enter
imul
imul
pop
fnstenv
push
addb
cmpl
xchg
jno
loope
loope
ljmp
mov
in
cmp
pushf
pop
sahf
xchg
adc
jle
loop
fs
and
push
mov
into
aaa
jbe
xchg
push
and
or
lcall
cmp
xchg
js
hlt
ffree
mov
xchg
push
inc
pop
loopne
call
mov
cld
stos
inc
lods
lock
pop
ret
cmp
xchg
mov
ljmp
lahf
stos
jb
xor
ss
mov
stc
outsb
sub
jg
xchg
lds
call
pop
fadds
push
pop
sub
call
cmpsl
inc
popf
lret
aaa
jb
ss
jmp
popa
leave
sub
fldl
and
repnz
mov
imul
das
sbb
inc
sbb
xchg
mov
jne
hlt
cmpsl
std
inc
xchg
mov
ret
cmp
xor
fdiv
push
push
lea
repnz
and
add
jns
add
xor
in
decb
aam
test
adc
mov
cld
lahf
call
or
inc
sub
jle
repnz
pop
xchg
add
sub
icebp
dec
jle
push
ljmp
movsb
gs
sbb
pop
mov
jb
sahf
movsl
sahf
or
xchg
sub
nop
idivb
aaa
in
xchg
or
xchg
insl
pushf
or
cmp
mov
aas
idivb
pop
aam
jbe
sub
xchg
and
ljmp
push
jle
imul
in
stos
inc
sub
push
fs
xchg
add
cmpsl
pop
mov
imul
dec
call
and
nop
xchg
jae
dec
push
lods
dec
out
sub
lahf
mov
pmuludq
stos
clc
xchg
call
sbb
ds
cmpsl
mov
inc
mov
jle
mov
inc
fisttpll
adc
xor
inc
pop
dec
dec
repz
enter
scas
mull
stos
stc
or
xor
in
cmc
jecxz
scas
out
notb
xlat
sbbl
ss
pop
xchg
lds
mov
insb
ljmp
or
icebp
fidivl
push
cmpsl
es
arpl
xor
popf
cmp
xor
call
outsl
mov
movsb
mov
andb
push
dec
pop
jmp
inc
inc
cld
mov
lret
jns
jmp
imul
pop
fs
mov
jae
push
sub
push
jbe
lods
jmp
push
ss
movl
push
xor
ljmp
cmc
loopne
or
push
testl
aad
push
fsubrs
into
xor
std
fdivl
push
xor
dec
aaa
pop
call
andb
scas
int3
in
scas
mov
mov
xchg
sbb
pushf
pop
pusha
mov
scas
fnstcw
int
enter
scas
mov
cld
test
lods
and
xlat
pop
and
xlat
dec
out
cmpsl
jp
inc
scas
sub
fnstcw
inc
mov
and
out
lods
xchg
lock
pushf
scas
pushf
inc
dec
fstps
iret
in
jle
sub
mov
fistl
xchg
pop
jmp
outsl
jns
sub
mov
test
push
or
stc
jl
pop
scas
pop
mov
test
mov
lret
bound
adc
mull
addr16
pusha
aas
cmp
mov
dec
lahf
loope
sbb
add
scas
insb
cmpsb
mov
iret
fldenv
sti
fimuls
mov
cld
push
dec
cmp
push
movb
jmp
sbbb
fildl
mov
adc
xchg
imul
dec
lods
cs
xor
sahf
sbbl
pop
sub
lods
sahf
repnz
ds
sub
mov
add
shlb
shrb
in
cmpsb
hlt
pop
dec
out
mov
flds
jne
mov
pop
and
jne
pop
mov
push
pop
xchg
or
push
mov
jae
pop
adc
pop
cmc
mov
fnstsw
gs
xor
mov
dec
sub
clc
ret
rclb
movsl
and
xlat
mov
sub
xchg
or
mov
mov
inc
fadds
push
and
push
cmpsb
ss
sbb
push
push
outsb
mov
ss
pop
inc
inc
push
cmp
int
mov
pop
ljmp
pop
cmp
insl
cli
pop
scas
movl
mov
xchg
pusha
mov
mov
or
lcall
popa
and
jecxz
pop
cmp
cmp
sbb
js
test
dec
cmpsl
out
loope
mov
dec
jnp
add
and
subb
leave
loope
push
mov
adc
and
leave
out
add
add
fucomp
add
mov
inc
sub
dec
gs
popa
in
or
inc
rol
xor
xor
lds
push
stos
mov
dec
stos
inc
mov
sub
es
imul
iret
cmpsb
push
test
push
adc
cs
xchg
add
inc
bound
data16
add
ror
or
ret
repz
jl
jnp
dec
push
aam
mov
jae
pop
jmp
flds
cmp
rol
push
add
push
stos
jns
mov
cmpsb
lods
pop
clc
sahf
shlb
pusha
dec
jp
inc
test
es
rcr
mov
fisttpl
or
and
loop
mov
mov
xor
cmp
jg
cwtl
sub
rcll
sub
das
xchg
jmp
lea
or
jbe
cmpb
jp
xchg
test
out
addr16
ret
pop
sbb
in
jl
xchg
data16
mov
fiaddl
push
inc
jmp
xor
fimuls
mov
imul
jl
pop
jbe
lea
add
mull
add
sti
fwait
pop
inc
test
ljmp
lods
clc
mov
popa
cli
jns
cli
dec
mov
sbb
ret
cmp
iret
pusha
adc
lcall
push
jge
xchg
dec
dec
mov
aas
xchg
pop
cmp
daa
mov
jle
into
xchg
das
add
add
in
push
mov
pop
imul
inc
mov
out
sub
inc
out
cmp
mov
imul
push
test
fcmovnb
sub
mov
jbe
mov
mov
pop
xchg
imul
icebp
sbb
jae
sbb
adc
std
cmpl
out
fidivrs
dec
pop
mov
lea
dec
sbb
jecxz
insl
push
lock
xchg
push
movsl
xchg
test
sbbb
jl
push
jecxz
stc
pop
aad
pushf
adc
mov
aad
jp
or
cltd
mov
xor
cmpb
cltd
out
in
inc
jmp
out
into
cmp
adc
sbb
inc
ds
orb
dec
stos
mov
cld
js
lahf
and
mov
or
push
imul
dec
imul
xchg
mov
fsubrl
cmp
ljmp
adc
flds
pop
dec
jno
jae
std
cltd
add
sbb
insb
mov
movsb
xor
mov
ret
arpl
clc
xchg
add
and
push
and
pop
test
inc
sub
addb
cmp
icebp
push
pop
out
adc
rorb
arpl
into
lret
sub
movsl
aad
push
dec
test
dec
imul
frstor
sbb
mov
cmc
mov
loopne
imul
out
jno
mov
mov
scas
sti
andl
or
out
and
push
aaa
cmp
mov
add
sbb
jl
dec
push
sub
out
xor
loope
pop
inc
mov
add
xlat
cmp
push
lret
sbbl
cmp
xor
push
fsubrs
inc
arpl
outsb
xchg
shlb
pushf
cmc
js
aaa
jne
out
mov
pop
and
xor
in
inc
loope
sbb
pop
or
and
jns
loopne
sub
ret
xchg
mov
or
cmp
xor
dec
fistpll
aad
out
jge
xchg
add
ljmp
shrb
clc
xor
es
dec
aad
xchg
jmp
dec
cmp
or
xchg
sbb
add
mov
fcomps
fimull
outsb
mov
das
mov
shl
movsl
cmp
ret
loope
sbb
add
sub
data16
leave
lret
mov
das
mov
int3
icebp
mov
or
push
add
cmc
shlb
stos
add
repz
mov
push
push
cmp
pop
push
cmp
mov
push
pop
jb
xchg
sbb
fiaddl
das
and
jno
or
mov
mov
mov
fcmovb
sub
mov
xchg
dec
jle
cmp
mov
ljmp
inc
adc
setae
xor
bound
stos
sbb
or
lcall
ljmp
inc
jl
lds
or
outsb
repz
mov
sti
jecxz
mov
shlw
xchg
js
in
or
iret
or
ja
out
aam
jl
dec
scas
pushf
xor
scas
outsb
cmp
jne
inc
jmp
and
dec
adc
dec
and
xchg
mov
push
mov
imul
or
mov
movl
dec
out
adc
movsl
mov
nop
icebp
ficomps
fimuls
fldcw
gs
fidivl
push
inc
shrb
cli
stos
aas
clc
sahf
imul
sbb
subb
push
pop
adc
adc
sub
loope
mov
dec
test
add
movl
stos
iret
rcll
cli
ss
cltd
icebp
stos
jle
jnp
les
popa
imulb
adc
pop
sbb
pop
cld
movsb
xchg
xor
push
cltd
dec
push
sti
inc
inc
fbld
push
adcb
pop
xor
push
mov
hlt
into
push
test
nop
pop
jg
hlt
push
ljmp
lea
or
fstps
nop
mov
lahf
cli
xor
jmp
pop
lock
lock
adc
push
and
pushf
addr16
or
xor
adc
add
in
jno
shrl
mov
jns
sub
cmp
testl
stc
shrb
jo
pop
xchg
pop
out
stos
and
sub
in
into
cmp
or
sub
sbb
mov
cmc
xor
lods
mov
xchg
add
and
jns
push
inc
mov
icebp
and
or
add
mov
push
int3
mov
shlb
stos
xchg
sbb
sbb
lds
out
xchg
xchg
sahf
cmp
test
aas
ja
icebp
or
inc
fdivl
lahf
leave
pusha
sarl
cli
in
repnz
arpl
push
in
rcrb
push
fadd
mov
mov
in
les
sbb
and
jne
sbb
pop
adc
xchg
iret
or
jle
repz
mov
das
add
xor
icebp
and
dec
and
xchg
daa
jbe
sbb
repnz
stos
daa
in
rcrl
mov
repz
mov
pop
sbb
test
scas
std
dec
dec
adc
test
lcall
aaa
xor
out
mov
pop
cmpsb
pop
scas
dec
scas
jecxz
lret
dec
inc
mov
jne
push
or
fdivrs
dec
cmp
mov
pop
mov
idivb
and
cmp
or
loop
add
add
clc
addl
and
mull
shlb
shrb
or
in
sarb
adc
pop
jae
jnp
jae
lcall
jne
sahf
push
lcall
and
popf
inc
pop
es
aas
outsb
inc
push
ret
loope
xlat
shll
and
ljmp
fistpl
xchg
sub
pop
cmc
data16
sub
and
mov
ljmp
push
lcall
or
xchg
jle
add
cmpsl
push
movsl
fadds
mov
cmp
mov
insl
movups
enter
xor
ds
repnz
and
je
lods
jmp
sbb
movsb
adc
cmc
repnz
fidivl
lea
ret
lret
sub
fidivl
and
push
inc
clc
sahf
in
int3
jo
mov
inc
push
jmp
es
cltd
or
cmp
movsb
inc
fcom
dec
ret
dec
scas
inc
cmp
pop
sahf
or
movsb
cmp
sub
loop
mov
push
call
jecxz
sahf
xor
adc
divl
jge
lods
and
xchg
pop
cmp
mov
in
rcr
adc
call
imul
xor
sbb
mov
inc
lret
sub
cld
push
sub
pop
fsubrl
loop
das
add
xor
mov
and
loop
sbb
add
mov
or
sbb
add
jbe
cmp
imul
mov
lea
push
aaa
into
andl
xchg
mov
mov
cltd
adc
xor
in
pop
icebp
sbb
adc
enter
lret
mov
dec
out
outsb
sbb
loope
lret
add
addr16
call
vpmadcsswd
je
pop
cmpsb
aam
add
enter
xor
popa
cmp
sti
mov
mov
addr16
push
lret
bound
fdivl
popa
jmp
sbb
test
fldl
cmc
je
mov
adc
push
jns
xchg
fidivl
push
out
rolb
ja
jne
pop
xchg
les
and
jb
jbe
fnsave
nop
daa
sahf
cli
testl
aas
jns
xchg
cs
iret
push
in
std
pop
xchg
push
mov
cmp
jne
jg
adc
add
mov
aaa
into
jecxz
xchg
cs
add
in
xor
push
je
mov
shrl
test
sub
mov
repz
push
in
lea
mov
mov
in
cmp
or
popf
xor
mov
shrl
ss
stc
mov
out
mov
add
jecxz
mov
lcall
sub
out
roll
ss
out
sub
jns
mov
movsb
cmp
imul
sub
xchg
pop
mov
adc
addr16
jge
mov
cmp
clc
xor
pop
lock
xchg
pop
mov
lcall
mov
sub
inc
xlat
cmp
xorb
pop
sahf
pop
scas
inc
xlat
fsubrl
cltd
xor
xor
sub
xor
adc
sub
mov
popf
xor
stc
mov
das
jle
push
mov
stos
inc
test
adc
cwtl
adcb
andl
xchg
popa
sbbl
mov
outsl
stos
inc
sahf
outsl
mov
sahf
mov
sarb
jmp
lahf
lret
aad
rclb
push
xsha1
cmpsb
mov
ror
fidivs
pop
imul
flds
ret
fs
es
lods
lods
inc
loope
cmp
mov
imul
lcall
enter
push
jo
dec
out
cmpsb
in
xlat
dec
in
inc
shlb
imul
pop
fisttpll
mov
jl
fbstp
stos
jb
fisttpl
push
jmp
insb
arpl
mov
ja
adc
jno
inc
movsb
lods
push
popf
fbstp
cmp
dec
jl
jnp
shrl
scas
sbb
fidivrs
adc
jns
hlt
stos
stos
test
fidivrl
sub
dec
cwtl
das
jg
lods
test
jmp
mov
xchg
push
movb
movsl
andb
xchg
xchg
xchg
sub
mov
jb
test
cli
xchg
xchg
sbbb
nop
ja
lds
pop
sbbl
pushf
cmpsb
cmp
iret
inc
inc
fnstsw
in
test
sahf
daa
mov
andb
xchg
xchg
mov
ret
test
into
mov
js
andb
xchg
xchg
ss
test
rorl
pushf
cmp
rorb
sbb
jb
jge
movsl
movsb
push
mov
jne
push
test
cmp
jp
jae
lods
stos
mov
fidivrl
fisubrs
addb
mov
mov
cmp
mov
jl
xchg
mov
mov
jno
lcall
in
test
jo
test
imul
lcall
sbb
fadd
pop
or
add
mul
decb
rcrb
xchg
sub
push
call
push
or
fistpll
aad
mulb
es
loopne
sbb
mov
sub
dec
mov
mov
mov
shrl
or
aad
inc
aas
jb
mov
xor
mov
out
in
mov
mov
aaa
pop
jbe
pop
or
mov
add
xchg
pop
out
test
repnz
xor
xchg
fs
adc
nop
test
mov
mov
fs
cwtl
test
mov
adc
clc
mov
jge
mov
outsb
fsubrs
mov
mov
bound
rclb
nop
das
mov
es
mov
test
mov
xlat
cmpsb
pop
popf
xor
jns
mov
int3
inc
flds
pop
add
out
xchg
pop
scas
int3
std
out
int3
push
es
bound
cmp
inc
iret
lea
ficoms
test
pop
sbb
mov
pop
xor
fs
imul
clc
popl
cmp
and
out
adc
jne
add
loopne
push
mov
add
and
hlt
pop
add
mov
xchg
sub
bound
pusha
cmp
test
mov
jmp
or
movsl
cmp
hlt
mov
stos
cwtl
das
faddl
jbe
fldt
cwtl
loop
into
dec
out
add
and
mov
daa
xchg
cs
dec
call
sbb
lcall
nop
loopne
movb
je
jmp
xchg
leave
ss
movsl
arpl
inc
fstps
test
inc
pop
out
jne
lods
inc
or
and
sbb
sbb
imul
repz
lods
inc
mov
fdivrl
pushf
test
lret
cld
sub
fisttps
adc
movsl
and
test
stos
adc
inc
inc
iret
add
xchg
sbb
insb
out
jbe
lcall
cmc
in
push
loop
test
mov
xchg
xlat
divb
int
ljmp
fsubrp
xchg
sub
add
xor
in
push
in
and
loope
sub
sbb
xor
movsl
cmp
out
lock
sti
pop
lock
lahf
jae
pop
and
fisttpl
mov
cs
pop
mov
icebp
dec
or
push
stos
jo
lret
xor
mov
ret
cwtl
xchg
lock
fst
fsubrs
in
and
jmp
pop
repz
or
adc
push
jmp
cmp
iret
jns
sarb
in
daa
jmp
cmpsl
fldl
scas
pop
enter
inc
push
mov
scas
data16
cmp
xchg
jge
outsl
and
aas
pop
pushf
jg
jnp
aam
ljmp
xor
jge
addl
aad
inc
insl
add
xchg
hlt
xchg
lret
pop
push
mov
out
mov
or
mov
sbb
and
or
sbb
dec
sbb
insl
cmpsl
inc
into
push
inc
ret
outsb
mov
and
iret
aad
mov
icebp
in
sahf
xor
add
in
push
rcll
xor
movsl
faddp
inc
out
or
test
das
fcoml
mov
inc
fstps
jne
cld
test
stc
xchg
nop
into
in
mov
mov
stos
mov
xor
dec
mov
jp
dec
pop
pop
shlb
lret
fstpt
xor
sbb
sub
jbe
hlt
mov
lds
or
dec
sbb
jge
sub
and
add
ds
push
adc
aam
ret
dec
sub
enter
lods
inc
jo
fisttpll
xchg
inc
lret
sbb
sub
mov
loopne
inc
shll
xchg
xchg
mov
fmull
jp
cmp
mov
cmp
cltd
lahf
xchg
adc
insb
rorl
or
mulps
xchg
jnp
xlat
mov
xor
stos
jo
and
dec
mov
lcall
and
pushl
popf
xor
inc
adc
cmp
xchg
mov
jne
hlt
inc
shll
out
sbb
movsl
pop
pop
mov
loope
mov
testl
in
daa
mov
mov
sti
push
cltd
hlt
dec
ffreep
sbb
lods
xchg
mov
icebp
push
insl
je
push
jmp
adc
xor
pop
and
in
fstpl
out
test
jge
fs
popa
sahf
cli
push
pop
das
xor
stos
mov
clc
xchg
push
mov
lret
or
xlat
in
and
rcl
jecxz
xlat
mov
enter
ss
ja
movsb
pop
lret
loop
cmpsl
shl
pop
push
dec
mov
mov
sarb
mov
jb
sub
xlat
dec
rorl
ret
push
les
repnz
daa
jmp
mov
jb
push
xchg
pop
ficoml
pop
mov
cld
add
rorb
xor
jo
push
dec
movsb
in
dec
push
addb
dec
jno
push
ljmp
mov
sub
mov
pop
aas
setge
mov
scas
pusha
mov
dec
pop
xor
ljmp
jecxz
push
inc
pop
xchg
divb
pop
and
in
and
adc
in
sahf
push
loop
push
repnz
jecxz
insb
jl
and
stc
sub
sub
add
inc
and
test
nop
addr16
pop
test
lret
aad
inc
lret
or
test
in
sub
mov
ja
jg
cmp
sarb
in
mov
or
out
leave
pusha
iret
cmpsl
xor
out
sbb
enter
inc
into
cld
xchg
fisttpll
sub
or
roll
jl
mov
sub
cwtl
jns
sub
push
enter
jno
xchg
sub
call
scas
or
push
sub
sahf
sbbl
movsb
in
push
mov
adc
jg
inc
sahf
imul
push
inc
mov
inc
icebp
dec
push
sbb
cmpsl
push
test
push
out
in
pop
mov
or
and
mov
pusha
lds
lods
cmpb
mov
jge
pop
lahf
mov
nop
daa
scas
push
jbe
inc
into
adc
out
xor
xchg
jno
jmp
adc
aam
sti
es
test
fbld
mov
addl
ret
js
mov
out
iret
add
or
out
push
mov
inc
movsl
sub
rolb
dec
out
in
arpl
push
fwait
je
xor
lahf
adcb
outsb
xchg
xchg
lea
mov
repz
push
in
mov
pop
lock
int
xchg
int3
inc
into
adc
dec
xchg
fwait
xor
sbb
mov
mov
sbb
out
and
xor
xchg
and
and
imul
dec
and
subb
jp
repz
and
xchg
xchg
idiv
and
loop
ret
int3
inc
fdivr
xor
sub
mov
mov
or
ret
nop
daa
mov
inc
mov
fadds
push
movsl
stos
add
cmp
jmp
aas
in
leave
or
fld
sbb
fs
leave
divl
mov
xchg
xchg
xchg
clc
lret
inc
lds
test
cmpsl
test
pop
repz
xchg
ret
fs
int
adc
sbb
inc
cmpsb
or
sbb
cmc
mov
push
mov
fiadds
or
movsl
loopne
xor
ljmp
ret
cmp
loop
xlat
outsb
inc
mov
stos
and
push
inc
andl
inc
stos
arpl
mov
clc
xor
xchg
lret
outsl
in
mov
enter
out
mov
and
mov
inc
or
push
jge
mov
xor
add
cmpsb
push
cmp
jo
cli
dec
lds
rcrl
adc
test
jle
xchg
std
jmp
stc
data16
inc
mov
cmp
jns
xchg
imul
subb
aad
inc
loop
pop
mov
xchg
in
or
rorb
mov
adc
out
cmp
int3
lcall
in
fldt
push
imul
outsb
cmp
adc
sar
push
out
outsl
jmp
xor
and
lret
inc
fldl
rolb
loopne
test
sar
sub
mov
mov
testl
sub
clc
daa
jp
and
adc
sbb
jns
and
dec
lds
push
aam
pop
pushf
or
and
xchg
out
and
cmpsb
rcll
fdivrl
aam
mov
sbb
jno
cs
mov
sub
adc
inc
push
adc
pop
inc
mov
inc
fs
mov
xor
xchg
mov
mov
cwtl
jl
pushf
xor
enter
ljmp
lods
xchg
xor
leave
int
or
fcoml
adc
testl
sub
fbstp
mov
out
mov
push
rcr
inc
loope
mov
fisubl
lods
pop
mov
add
test
sub
push
aaa
js
mov
push
mov
inc
lcall
sbb
lahf
jno
daa
mov
dec
sarl
jl
push
pop
pop
mov
add
xchg
mov
hlt
dec
xor
sahf
hlt
mov
in
arpl
idivl
cwtl
xor
sbbl
mov
ret
mov
sub
ja
repz
adc
push
into
fbstp
add
int
xor
adc
jp
repz
sbb
pop
stos
mov
je
xchg
std
xor
std
pop
aam
insl
in
xor
daa
mov
push
movb
jo
mov
pop
clc
pop
lcall
jecxz
ror
sahf
test
int3
in
pop
int
fstl
sahf
push
scas
jl
sub
imul
adc
aaa
add
xchg
pop
or
iret
jg
dec
roll
clc
xchg
dec
daa
jecxz
push
sbb
hlt
subl
push
insb
mov
subb
mov
sbb
popf
jbe
lods
cs
adc
sti
xlat
emms
or
clc
adc
leave
jecxz
in
div
sub
mov
lret
push
orb
push
jbe
jno
nop
xchg
jecxz
dec
popf
push
mov
mov
pop
xchg
imul
fwait
test
jecxz
jge
cmpb
lret
push
pushf
mov
mov
cwtl
xchg
in
sub
das
mov
mov
lret
push
xor
jl
ds
dec
inc
mov
push
shrl
pop
bound
push
jnp
fiaddl
aas
out
fwait
data16
cmp
and
subb
pop
pop
sub
nop
jle
pop
pop
add
ds
mov
std
sub
xor
push
sarl
and
add
xchg
test
mov
lods
pop
push
enter
mov
sub
popa
jne
int
and
sub
dec
push
shrl
insl
insl
ret
mov
fstpl
jo
lcall
testl
lea
xlat
jp
jno
xchg
fisubs
pop
lock
cmp
icebp
lcall
and
inc
ret
test
sti
xor
add
out
mov
and
sbb
adc
or
stos
cmp
aam
or
inc
mov
test
lret
lock
mov
or
pop
rcr
mov
in
loopne
fmul
imul
add
js
push
stc
add
lahf
push
mov
int
xorb
lret
fsubs
cmp
loopne
shlb
jae
ror
das
jmp
movsl
int
sub
pop
inc
xchg
and
clc
nop
je
test
xchg
lods
adcb
jg
or
js
mov
mov
mov
pop
das
inc
int
mov
or
pop
cmpl
je
cwtl
mov
xchg
dec
jae
push
inc
and
jle
test
cltd
sub
pop
ret
inc
xchg
aad
adc
sub
movsl
mov
or
ret
fdivp
les
or
mov
xchg
xchg
xchg
out
xchg
mov
imul
mov
cmp
in
mov
xor
rorl
clc
and
scas
adc
xchg
popf
mov
fstpt
repnz
filds
mov
jg
es
jns
lahf
test
out
aas
jb
int3
dec
jo
inc
dec
dec
or
aas
mov
adc
jae
sub
or
sbb
bound
sti
push
mov
mov
dec
fsts
clc
test
mov
addr16
jbe
clc
xor
loopne
loope
mov
rclb
bnd
add
ficoml
mov
das
sbb
movsb
insb
repz
jo
std
and
out
mov
cwtl
xchg
cld
jbe
push
sbb
mov
jge
adc
scas
dec
pop
iretw
xchg
jp
sub
pusha
enter
cwtl
fnstsw
adc
xchg
xchg
imull
xor
iret
dec
pop
nop
sub
mov
je
stc
aaa
popf
test
xor
jg
dec
out
jno
aaa
out
jae
push
call
mov
sbb
sub
inc
fwait
pop
jmp
lds
or
mov
mov
maxps
fs
jl
xchg
xor
out
mov
jp
in
jb
jnp
pop
dec
lret
pushf
nop
mov
mov
sbb
cltd
mov
mov
enter
imul
rcrb
mov
std
clc
and
or
daa
mov
fists
jecxz
inc
mov
mov
and
mov
out
and
cmp
test
or
push
mov
in
test
pop
inc
int
ret
fdivr
inc
rol
lret
daa
mov
mov
add
mov
repz
mov
add
shrb
xchg
add
roll
mov
mov
mov
add
jae
mov
lds
push
xor
aaa
scas
xchg
jge
pop
cwtl
popa
pop
nop
mov
dec
arpl
aaa
pop
pushf
xor
pop
jae
push
ret
imull
jecxz
jne
mov
cmp
movsb
mov
daa
cli
jns
dec
in
cs
lcall
not
sar
in
pop
psrad
jmp
pop
jg
in
jg
test
xor
and
push
mov
loopne
and
dec
mov
icebp
pop
jo
imul
stc
nop
and
pop
mov
lcall
iret
imul
add
cmp
nop
mov
or
xor
cmpsl
test
notl
push
sbb
push
pop
add
mov
stc
inc
sub
pop
popf
xchg
dec
int3
ss
bound
jg
push
mov
mov
pop
rclb
mov
xchg
jle
mov
sahf
adcl
mov
push
jb
jmp
dec
popf
daa
fstps
push
sub
adc
pop
sbb
jno
in
sub
add
xor
es
cmp
int
shrb
out
jo
lret
add
pop
mov
pop
ret
fidivl
or
mov
mov
fldpi
push
leave
mov
pop
imul
shrb
adc
stos
cmp
sub
add
fisttpll
xor
ja
lods
xor
int3
push
mov
std
mov
les
outsb
arpl
xchg
xchg
push
movsb
cmp
stos
sbb
shrl
arpl
ljmp
fldenv
sarb
nop
push
pop
adc
sti
std
push
filds
test
out
mov
add
fnstcw
xor
aam
popf
mov
mov
cld
mov
or
dec
ret
cwtl
das
sub
sbb
mov
push
jmp
loope
pusha
adc
out
xor
test
sbb
cmpsb
das
fcoml
negl
mov
sahf
mov
pushf
push
sub
addl
mov
adc
lods
pop
sub
insb
pop
imul
cmp
mov
mov
je
mov
pop
push
push
out
cwtl
pop
sar
push
hlt
sub
mov
loopne
jle
ds
mov
icebp
add
jae
in
xor
push
jb
adc
aas
push
test
push
inc
insl
aaa
cltd
cld
pop
cld
push
int
insb
loopne
mov
pop
mov
ljmp
and
mov
and
outsb
ds
xchg
cmp
test
out
or
testl
xchg
aam
pop
jecxz
paddq
scas
jbe
gs
jne
js
lret
pop
popa
mov
dec
sub
dec
xor
sbb
sbb
hlt
sub
adc
xchg
add
and
icebp
pop
movb
xor
icebp
add
ret
lret
or
lock
pop
mov
lds
into
sub
rorb
adc
mov
or
and
ficoms
imul
cmp
mov
xor
aad
mov
sub
das
loope
xor
sbb
and
xchg
mov
repz
insl
lahf
push
mov
or
stos
int
pop
xchg
jnp
add
faddl
xorl
insb
mov
jno
inc
cmpsl
scas
inc
pusha
mov
mov
or
and
adc
xor
into
mov
aad
das
cli
sbb
pop
jmp
sbb
scas
lret
mov
sbb
sbb
add
out
pop
loop
add
js
xchg
push
sub
int
push
push
leave
push
push
mov
inc
inc
lods
imul
pop
add
and
adc
out
mov
cli
sbb
adc
mov
mov
fwait
aas
stc
jo
ljmp
and
or
jae
inc
aaa
add
xchg
fs
inc
add
loop
mov
lret
adc
adc
xor
add
add
test
lret
mov
iret
data16
jecxz,pt
add
adc
jmp
clc
or
push
bsr
in
sbb
popf
pop
cmc
into
iret
call
out
mov
fimuls
testl
mov
and
jb
lock
mov
xor
jnp
sbb
notb
arpl
and
lods
xor
push
jo
push
stc
pushf
ss
jmp
or
movsl
mov
insb
mov
adc
popa
out
pop
xor
addr16
adc
jg
sub
arpl
cmp
int3
cmp
jg
lods
dec
pop
shlb
jo
jmp
stos
inc
and
push
sti
mov
lods
xchg
in
das
divl
orl
call
or
std
scas
dec
jl
push
out
cmp
pop
inc
pop
mov
gs
clc
push
inc
imul
and
jno
data16
shlb
xchg
mov
sub
pop
mov
std
jnp
mov
fldcw
add
add
xor
mov
mov
scas
popa
mov
xor
enter
lret
ret
imul
test
mov
pop
clc
iret
sub
mov
scas
jg
mov
subb
mov
lahf
dec
subl
lea
sub
ljmp
inc
fcmovnb
adcb
loop
fwait
aam
pop
into
sub
xchg
fs
push
mov
test
cmp
insb
add
ja
ds
cs
lods
gs
dec
stc
lods
inc
ljmp
and
sub
inc
addl
mov
sub
clc
out
aaa
inc
fisubrs
add
mov
jl
sbb
xor
test
push
ss
sbb
ljmp
loopne
mov
repz
xchg
nop
out
push
sub
nop
fisttpll
ficoml
mov
sti
inc
lcall
jge
hlt
subl
data16
jnp
sahf
dec
push
dec
jecxz
imul
adc
fcos
and
nop
push
mov
cmp
bound
fstpt
sub
add
repz
mov
lock
mov
mov
popa
f2xm1
xchg
nop
lret
jmp
dec
aad
cmpsl
les
hlt
lock
fcoms
push
mov
xchg
xchg
and
sub
pusha
lcall
xchg
xchg
in
push
neg
add
aad
push
out
daa
pop
les
imulb
sbb
sub
jp
add
sbb
pusha
mov
and
push
mov
adc
push
mov
testb
mov
lahf
jo
roll
xor
paddsw
insl
lahf
test
bound
int3
push
push
push
fildll
adc
inc
sub
shr
push
ret
jmp
mov
xchg
add
hlt
and
mov
dec
iret
cwtl
test
adc
repnz
enter
pop
ljmp
add
jge
lret
pop
xor
inc
xlat
adc
xor
xchg
sahf
xchg
mov
push
push
adc
lods
jg
add
es
ret
xor
arpl
pop
sbb
stos
stos
mov
add
icebp
mov
ljmp
and
jl
popa
cltd
and
push
popf
lea
ja
jnp
sub
xchg
dec
lds
sbb
dec
pop
xor
jg
cwtl
lea
or
inc
outsl
mov
div
dec
lret
stc
std
jmp
dec
shll
dec
mov
push
mov
sahf
dec
icebp
sbb
mov
and
inc
test
mov
les
scas
inc
stos
in
cld
ret
pop
int
inc
mov
into
mov
mov
mov
rorl
pop
xlat
push
stos
aad
xor
jmp
jo
cmova
and
iret
pop
and
lock
xor
loop
loopne
daa
vmovapd
xchg
lret
inc
push
mov
sub
arpl
fisttpl
inc
mov
push
cmp
sub
or
daa
sahf
push
jo
or
xor
push
cmpsl
imul
repnz
stos
push
fsubs
adc
pop
ds
inc
sbb
sub
das
bound
fisubs
cld
push
cmp
sbb
and
cli
inc
mov
mov
push
mov
pushf
aad
aad
adc
xor
or
test
aaa
in
out
push
adc
pushl
jne
pop
enter
push
arpl
lods
pop
jg
aas
icebp
clc
aaa
xchg
imul
rolb
cmp
pop
fdiv
adc
ljmp
aaa
jne
fcoml
xor
js
mov
adc
fidivl
cmp
aaa
dec
sbb
xorb
enter
adc
cmp
mov
orb
pop
sbb
xchg
jbe
in
xor
add
into
fs
int
fisubrl
pop
mov
cmp
fcmovu
fidivs
cld
or
shlb
dec
add
rcrl
xor
imul
filds
adc
push
lods
loopne
dec
mov
xor
aam
ds
fsub
loop
mov
fsubrl
fldcw
pop
adc
xchg
test
inc
push
shlb
gs
sub
dec
jb
sahf
and
mov
jge
sahf
xor
lods
enter
out
xchg
push
out
cwtl
lea
jmp
and
sub
inc
mov
das
xor
cmpsb
insb
sbb
dec
in
scas
mov
clc
dec
jecxz
mov
push
and
inc
mov
je
jo
shll
rorb
cmp
push
and
inc
lea
icebp
fbstp
lcall
jbe
leave
pusha
pop
cwtl
sbb
jb
cmp
sbb
out
insl
out
mov
sarl
fsubrs
xchg
sub
pop
idivb
jge
jns
fwait
xor
in
test
test
mov
or
and
jle
jle
fldt
rcrb
shll
sub
movsb
popa
clc
aad
mov
div
insl
add
sbb
fs
dec
mov
cmp
dec
loop
pop
test
shrd
xchg
sub
je
jmp
ljmp
outsb
lret
jnp
in
cmc
mov
cmp
cltd
imul
stos
jo
and
lods
xor
faddp
lret
decl
xor
test
cmp
enter
lret
jmp
pop
lock
cmp
push
lods
jo
cli
xchg
ret
or
sbbl
mov
xchg
sub
ss
and
xchg
sub
into
and
mulb
shrl
dec
outsl
mov
mov
ret
incl
sahf
push
xlat
mov
fdiv
sbb
xor
pusha
mov
repz
ds
inc
dec
mov
jg
sub
pushf
scas
test
out
call
scas
arpl
xchg
imul
repz
int3
xor
xlat
jnp
push
mov
ret
jp
jno
mov
or
cmp
push
push
test
inc
xlat
out
cmpsb
jecxz
loopne
inc
cmc
ljmp
lods
cmpl
jae
adcl
mov
fidivl
sub
sub
js
aam
mov
iret
lea
mov
push
stos
dec
sub
jl
jle
andb
int3
orb
jbe
mov
cltd
test
push
out
mov
stc
imul
mov
dec
adc
cwtl
bound
xor
add
xor
xor
jbe
scas
push
sahf
lahf
pop
pop
aad
xor
das
icebp
mov
sub
ret
das
fidivrs
scas
or
jns
sahf
sbb
sub
inc
mov
add
bound
loope
push
xor
cwtl
sub
cld
inc
in
aam
xchg
mov
mov
push
mov
fistps
xorb
pop
outsl
subb
dec
or
cs
aaa
leave
lea
lret
mov
push
mov
scas
jo
dec
int
loopne
inc
cmp
xchg
sti
pop
xchg
fs
push
imul
aam
cwtl
in
andps
mov
xchg
aaa
sbb
mov
mov
push
hlt
jno
fbstp
pop
pop
xchg
add
add
leave
jecxz
add
dec
jb
jge
sbb
mov
fistps
dec
test
fisttpll
adc
pop
xchg
lea
lret
push
stos
icebp
push
aaa
mov
mov
or
adc
shrb
sahf
dec
aas
test
sti
push
add
inc
cltd
cmpsb
test
add
xor
push
inc
or
mov
push
mov
pop
in
repz
loopne
test
fsubl
adc
ret
std
mov
pop
mov
add
xchg
push
xlat
mov
inc
daa
pop
hlt
loopne
inc
xchg
sub
dec
push
cmp
ret
add
lock
adc
push
mov
in
test
cmp
jns
stos
in
sbbl
sub
repnz
jecxz
lock
mov
jle
push
int3
es
pop
sub
push
mov
jb
popf
cmp
push
test
imulb
shrl
ret
mov
sub
roll
ss
jmp
dec
loopne
jl
fldcw
outsl
push
push
or
mov
fists
adc
or
push
jle
nop
andl
cmovns
subb
pop
xchg
test
mov
jle
fnsave
mov
mov
out
sub
add
testb
xchg
xchg
inc
bound
repnz
icebp
jnp
fchs
ljmp
sub
mov
sbb
fwait
xchg
aam
xchg
xchg
outsb
ljmp
in
addr16
jl
insb
ljmp
adc
jl
push
int3
mov
push
outsl
out
in
and
insb
ljmp
xchg
inc
or
fidivl
jge
pop
scas
lods
inc
pop
rol
loop
push
add
inc
pop
pop
aam
xchg
mov
fs
mov
int3
ljmp
xchg
test
jecxz
xchg
mov
push
ret
scas
xchg
jl
sarb
mov
dec
adc
lds
stos
subps
je
pop
and
sbb
sub
add
xchg
roll
negb
and
les
dec
xchg
mov
aas
xchg
mov
ret
setle
pop
sub
test
xlat
int3
in
and
stos
fiadds
lea
sbb
lea
push
outsb
fs
mov
xlat
mov
cwtl
inc
pop
std
adc
mul
addl
mov
xor
test
cmp
mov
cwtl
inc
pop
movsl
mov
mov
jbe
sbb
jbe
mov
xor
mov
add
sbb
inc
or
stc
fs
mov
mov
xor
sub
cmc
pop
cwtl
sub
push
imul
cmp
mov
movsb
sarl
enter
pop
ret
out
jno
bound
mov
in
jo
cmpsb
mov
int3
std
lret
xchg
jecxz
loop
js
dec
adc
outsb
xchg
cmp
je
xchg
inc
or
push
xchg
pop
out
mov
xchg
shr
jae
into
and
out
mov
push
out
sbb
roll
sbb
pushf
inc
cmp
jnp
sub
jo
and
push
pop
sbb
dec
jmp
adc
shll
sub
movsl
push
cmp
cmpl
loopne
lods
sub
stc
and
mov
je
movsb
mov
xor
es
jg
adc
push
inc
adc
jnp
test
sub
cld
pop
inc
xor
scas
mov
test
xchg
int
cs
int3
adc
push
mov
mov
scas
sub
add
test
sub
or
pop
in
ja
dec
inc
xchg
inc
jne
mov
addl
push
mov
loop
outsl
cmc
dec
mov
mov
addb
xor
es
sbb
fildll
cmp
pop
inc
jbe
aaa
test
mov
push
fimull
add
fwait
add
adc
lret
insl
and
cli
mov
xor
adc
jmp
repz
adc
and
std
popa
pop
lahf
cmp
mov
pop
stc
outsb
xor
pop
mov
cmpsl
cmp
mov
cmc
loop
pop
ret
lock
cmc
pusha
test
mov
cmpsb
cmp
pop
cmp
roll
insl
dec
push
ret
jns
jbe
jne
mov
outsb
ljmp
cmp
sti
push
xor
aad
pop
and
add
out
inc
jge
mov
icebp
arpl
mov
adc
mov
adcl
dec
add
cmp
pop
pop
sub
mov
xchg
notb
cmp
xchg
fimull
sbb
xchg
inc
in
add
mov
adcl
ss
bswap
movsl
popaw
cmc
xchg
mov
adcb
popl
inc
add
xor
aam
and
and
cmp
adc
dec
add
sbb
adc
in
add
mov
add
pop
lods
mov
inc
movsl
gs
clc
xchg
mov
adcb
or
lcall
test
and
daa
into
inc
adc
jns
nop
insb
out
lock
sbb
inc
jb
scas
insl
jno
push
mov
stos
sbb
push
add
pop
clc
out
jb
pop
cmc
repz
inc
ljmp
std
push
mov
fs
sub
push
push
mov
inc
inc
imul
fwait
xchg
inc
push
jge
mov
inc
stos
sub
mov
sbb
repz
jmp
in
push
lods
lret
mov
fdivl
or
pop
push
std
jae
add
and
pusha
out
xor
sub
add
loopne
or
aad
pop
jp
sub
clc
pop
xchg
faddl
ss
test
sub
jnp
pop
clc
pusha
xchg
into
jne
sti
popa
es
mov
faddl
mov
sub
mov
stc
pop
mov
sub
or
xchg
xor
fcoms
xchg
push
sub
push
pop
call
fstpt
in
jne
push
dec
mov
enter
xchg
cmp
lods
out
add
jno
push
jbe
add
cmc
std
push
push
lret
and
enter
xchg
cmp
jg
xchg
lds
jmp
sbb
jno
jmp
fsubrl
xchg
in
jbe
cmp
jecxz
dec
xchg
in
cs
testl
and
jo
pop
push
int3
clc
push
insb
not
in
out
jae
add
nop
call
movsb
aas
in
lret
xor
add
pop
pop
push
mov
shll
cmpsl
popl
addr16
inc
or
sbb
or
xchg
cs
loope
insl
cmp
call
std
pop
add
nop
cmp
jnp
lds
stos
adc
outsb
shlb
arpl
pop
push
xchg
ja
jg
ret
jmp
ds
in
loop
xchg
xor
scas
data16
fdivrl
cli
pop
leave
and
jge
xor
jle
or
xor
mov
cmp
cmpsb
ret
sbb
cld
adc
xchg
inc
push
ljmp
xchg
mov
loope
jbe
mov
jle
mov
and
jae
rol
xor
outsl
je
inc
adc
fidivrs
xchg
fidivl
mov
sub
sbbl
push
xchg
mull
jp
in
sarb
add
xchg
jmp
jae
ljmp
dec
aaa
xchg
push
ret
pushf
cs
mov
testb
cmp
push
jo
jnp
repz
jle
inc
adc
data16
xchg
cmp
add
subb
out
fcmovu
jns
pop
jecxz
adc
sub
mov
cld
pop
cli
test
cmp
add
in
addr16
pop
mov
cmp
inc
jp
add
mov
insb
push
fsubrs
scas
mov
mov
jp
push
add
cmp
mov
cmpsb
fwait
cmp
aad
mov
mov
jno
ja
or
call
clc
das
cmpsl
mov
cmpsl
pop
cld
pop
fidivl
cmpsb
orl
cmp
out
adcb
mov
mov
lods
xchg
cmp
dec
add
cwtl
sti
cmpsl
cs
orb
popf
inc
dec
cmp
cmp
mov
jmp
pop
test
xchg
cmp
mov
xchg
xor
inc
xor
mov
pop
loop
mov
addl
add
repz
jp
test
mov
sub
das
lods
into
xor
cld
sbb
jne
pop
std
xor
mov
das
adc
rorb
inc
mov
aas
lret
out
xlat
repnz
stc
pop
xchg
jecxz
mov
les
mov
jl
push
sub
add
sbb
dec
data16
pushf
xchg
aaa
iret
pop
pop
repnz
push
mov
mov
test
js
mov
repz
in
and
mov
inc
call
jne
repz
mov
aaa
add
mov
scas
xchg
cmp
test
mov
add
push
mov
push
clc
cmp
adc
mov
fldl
out
popa
sbb
es
push
lods
nop
cmp
push
std
cltd
bound
arpl
inc
push
fdivs
sub
add
in
jb
adc
popf
aas
dec
inc
rorl
outsl
and
cmp
dec
negl
cmpsl
and
out
xlat
movl
jecxz
adc
jae
mov
xor
frstor
cmpsl
ss
push
pusha
or
icebp
pop
push
je
iret
dec
mov
xchg
cmp
sub
pushf
test
mov
push
dec
adc
setae
mov
insl
mov
sbb
fidivrl
mov
jmp
ds
imul
push
test
xchg
lods
add
jl
sub
sti
ljmp
xor
xor
sbb
imul
popa
pop
xchg
mov
pop
call
stc
lahf
inc
aam
lcall
pop
mov
mov
lods
jp
xor
daa
xor
or
stos
xor
call
je
or
jge
cli
cpuid
sub
in
in
adc
fs
sarb
stos
xor
sbb
cwtl
inc
clc
push
add
mov
out
insl
pop
sub
or
hlt
lahf
mov
stos
pop
inc
and
sbb
inc
xor
xor
daa
lods
outsb
jmp
imul
movsl
ja
cmp
mov
mov
xchg
stos
in
push
adc
jnp
pop
dec
jl
popa
mov
ja
mov
push
mov
scas
jns
push
scas
sarb
andb
jns
xor
jmp
std
sub
scas
fstpt
cmp
mov
xlat
lea
inc
adc
aad
jo
jmp
jmp
push
in
insl
cltd
pop
inc
adc
fidivrs
xchg
fidivl
mov
lcall
sbb
sti
push
pop
jnp
fcom
test
pop
adc
jno
fmull
fldt
ja
bnd
xchg
out
xchg
sub
inc
or
or
enter
pop
sbb
pop
sub
pushf
in
outsl
repz
addl
out
je
rcrl
rcrb
aam
mov
and
inc
or
in
jo
jae
sub
mov
js
xchg
fldl
dec
push
lea
pushf
pushf
inc
and
push
add
or
outsb
in
mov
fisubl
mov
fwait
jmp
push
pushl
int3
mov
mov
cmpsl
xor
and
mov
xchg
jge
stc
xchg
movsl
mov
test
outsb
repz
push
rorb
mov
sbb
mov
js
nop
or
loop
add
sub
add
adc
aas
lcall
mov
dec
jne
inc
adc
insb
pop
negb
ror
out
dec
filds
dec
dec
push
inc
mov
rolb
mov
inc
fld1
lret
mov
add
jl
xchg
cmp
loop
jbe
in
push
aas
xor
insb
dec
and
mov
xchg
loopne
es
pop
std
pop
cmp
dec
roll
test
jns
xor
test
cmp
and
dec
hlt
push
int
push
push
and
or
adc
jmp
xor
lods
cmp
es
xor
dec
lcall
xor
pushf
aam
iret
or
rorl
outsb
divb
cltd
dec
adc
inc
sub
pusha
gs
notb
lds
test
adc
mov
fwait
inc
sbb
push
sub
sub
cmp
pop
add
adcl
xchg
mov
mov
xchg
inc
int3
rcr
jl
pop
inc
adc
mov
nop
inc
lcall
inc
jmp
jl
fdiv
dec
or
loope
xchg
ds
cmc
data16
and
mull
mov
rorb
das
stos
daa
jl
adc
add
mov
pop
roll
inc
xor
push
sarl
xchg
inc
lcall
popa
mov
mov
xchg
and
stos
cmpsl
sub
lods
sub
inc
adc
scas
mov
shll
pop
push
push
cli
fcomi
out
jae
or
popf
popf
scas
xor
fidivs
ret
pop
js
mov
lds
and
fidivrl
xor
sysenter
mov
lret
adc
pop
sti
fiaddl
sahf
cmp
push
andl
sub
mov
call
jmp
inc
rolb
stos
xor
add
cmc
scas
cmc
pop
add
lds
sti
sbb
test
loopne
sahf
mov
outsb
hlt
cmp
out
sub
xchg
bnd
incb
xor
pop
cmp
xor
sub
jmp
daa
pop
sbb
jae
cli
fs
sub
int3
call
adcl
fs
add
xchg
mov
mov
push
call
or
adc
outsl
cmp
sub
xchg
fiadds
jo
dec
adc
outsb
mov
popa
icebp
cmp
sub
adc
lret
daa
cmc
pop
mov
xor
and
fbstp
cmp
xchg
jae
jne
out
fs
mov
imul
testl
pusha
lret
outsb
push
fcoms
lds
ret
push
dec
iret
xchg
jp
mov
test
mov
adc
sbb
xchg
jo
aam
fsub
andl
out
lret
outsl
lods
and
inc
mov
cs
lahf
dec
adc
push
lret
or
fdivr
cmp
xchg
dec
arpl
test
jl
shll
lahf
jno
nop
aas
cmpsb
push
data16
rclb
adc
dec
sub
push
pop
cmp
bound
mov
out
sub
xlat
into
aaa
in
push
mov
jle
fwait
inc
call
cld
into
xchg
gs
js
pop
dec
xor
sbb
add
fwait
dec
fisubl
jl
sub
hlt
xor
add
pop
sub
pop
xor
and
sbb
sbb
mov
fs
dec
push
push
add
xchg
in
outsb
shr
out
mov
test
pop
test
mov
push
add
push
out
nop
xor
mov
rcrl
scas
add
push
stc
aas
movsl
xor
pop
adcl
jnp
push
cli
jle
leave
xchg
mov
ret
mov
mov
das
add
lods
das
in
faddl
sbb
mov
pop
outsb
mov
andl
add
dec
mov
mov
mov
sbb
aas
outsb
cmp
or
flds
icebp
sbb
dec
fwait
inc
xor
into
xchg
cmpsl
daa
mov
sbb
pop
add
xchg
xchg
mov
roll
xor
imul
lret
xchg
orb
fldl
xchg
jno
popf
rcll
and
xchg
inc
mov
push
fmuls
scas
loopne,pn
pop
stc
mov
and
leave
jp
mov
fmull
adc
shrl
mov
push
dec
jmp
sub
xchg
mov
adc
js
insl
stos
ds
cli
mov
movsl
daa
popa
adc
gs
dec
adc
insl
push
cld
loope
xor
enter
adc
or
nop
dec
xchg
leave
in
insl
aam
adc
movsb
imul
dec
xor
mov
cmp
pop
mov
lcall
jae
rcr
ds
xchg
imul
xor
jmp
cld
pop
ret
out
mov
dec
pop
push
jae
jl
icebp
pop
imul
jle
adc
cmpsb
scas
dec
xadd
mov
mov
xchg
inc
push
ljmp
jae
dec
push
imul
aaa
mov
arpl
mov
pushf
pop
push
fdivrl
test
hlt
jnp
addl
mov
imul
add
leave
gs
out
sbb
out
leave
add
movsl
cld
fadds
movb
jno
es
pop
pop
push
push
incb
sbb
push
push
cmp
push
loop
inc
addb
cmpsl
lret
push
xor
pop
dec
adc
daa
pop
mov
inc
mov
cmp
lcall
xchg
jmp
inc
adc
push
dec
or
ds
xchg
jno
xchg
sub
fwait
inc
test
mov
mov
cmpsb
daa
mov
loopne
fstl
mov
mov
push
cli
clc
jg
xor
out
sarl
in
adc
inc
cwtl
and
xor
fistpll
xlat
adc
ficomps
leave
xchg
jnp
repz
clc
sarb
mov
loopne
mov
popa
repnz
lahf
xor
sub
xor
nop
mov
push
movsl
xchg
repnz
insl
ret
cmp
fldl
and
lahf
inc
icebp
cwtl
daa
stos
push
jecxz
pop
outsl
test
ja
cwtl
orb
push
iret
cmp
arpl
outsl
sub
or
fiaddl
rol
cmp
out
ret
stos
sbb
sub
aad
imul
repz
inc
arpl
addr16
sub
lea
jg
sub
and
rorl
hlt
sbb
imul
pop
out
outsl
xor
imul
jae
xor
rclb
imul
mov
jle
lret
xchg
adc
lock
fucomip
dec
or
rolb
mov
test
jb
into
stc
nop
add
mov
inc
js
adc
lahf
popa
and
jle
mov
mov
lahf
inc
jecxz
cs
repz
inc
mov
pop
ja
mov
lahf
xor
movsl
cs
sbb
and
mov
sbb
sahf
mov
pop
fcmove
xchg
cld
mov
mov
and
in
push
in
adc
lods
testl
test
push
out
xchg
mov
mov
addr16
cmp
and
adc
sub
dec
cmp
mov
add
or
or
cmpsl
pop
add
cmp
fadd
xor
popf
add
stos
xor
mov
cmp
bound
or
xorb
dec
inc
je
mov
scas
inc
or
dec
mov
out
or
mov
mov
in
pop
add
imul
or
jle
mov
mov
and
mov
push
pusha
xchg
mulb
jp
in
sub
mull
cld
pop
sbb
xor
into
subb
adc
leave
repz
scas
sub
into
add
push
orb
mov
xchg
mov
mov
push
add
lods
cmp
inc
divl
pushf
jo
fdivrl
loopne
cli
adc
cltd
inc
lods
inc
dec
movntps
insb
hlt
iret
cmc
data16
pop
mov
mov
inc
xchg
push
lods
add
mul
push
lea
cmc
mov
es
push
lret
inc
and
mov
dec
push
lret
insl
loop
adc
inc
adcb
adc
sub
xor
mov
test
mov
or
jg
lcall
loopne
xor
in
test
mov
jge
decl
insb
push
xchg
aaa
outsl
adcb
je
cmp
gs
cmp
out
movsl
sub
inc
or
out
test
xchg
cli
mov
icebp
fs
push
sti
sahf
jae
push
movsb
leave
lea
mov
adc
add
push
daa
std
popa
inc
test
out
sarl
repnz
adc
add
fiadds
fs
add
shr
loop
push
cli
adc
lea
inc
push
sar
rcrb
ljmp
movsl
mov
loopne
mov
jae
popf
aam
push
and
adc
orl
inc
pop
add
insb
fs
mov
jmp
sbb
or
adc
cmp
and
popf
cmp
cmp
sub
xlat
sub
aam
sbb
cwtl
aaa
mov
test
call
mov
inc
aam
fwait
pop
sbb
in
imul
and
xor
sub
scas
inc
in
sbb
mov
jns
and
add
add
push
stc
mov
lods
lahf
inc
cmpsl
div
pop
ds
pushf
sbb
popf
aas
fisttpl
out
or
push
enter
nop
les
dec
xor
cmpsl
sahf
cwtl
push
mov
fs
test
jg
xchg
enter
cmp
daa
add
js
jo
popa
roll
mov
mov
subl
mov
jg
shll
repz
hlt
pop
sbb
stc
pop
into
dec
int
nopl
push
bound
les
or
and
xchg
dec
adc
push
lcall
cmp
pop
repnz
lods
sub
jmp
insl
xchg
mov
jns
int
jmp
rcrb
pop
repz
add
xchg
push
sbb
les
icebp
leave
pushf
inc
dec
in
mov
fwait
xor
mov
pop
mov
ret
jp
mov
lods
jg
xlat
sub
sub
pushf
inc
lret
mov
push
cmp
adc
pop
jo
jo
mov
aam
hlt
push
roll
mov
ficomps
nop
mov
or
mov
mov
jbe
mov
mov
sub
push
mov
xchg
into
mov
ficompl
cld
add
add
cmpsb
push
mov
and
fisttpl
gs
sub
push
dec
in
pop
mov
dec
or
fisttpl
dec
xchg
cmpsb
fwait
cwtl
lods
cs
hlt
fidivrs
rolb
push
arpl
in
mov
imull
or
and
cmpsb
or
mov
mov
cmp
add
addl
mov
popa
stos
xor
shl
pop
hlt
xchg
cmp
lods
push
shll
mov
sbb
pop
add
dec
lret
and
push
les
xor
stos
xor
addl
stos
xor
xor
cmp
mov
cs
decl
fdivrp
bound
leave
popa
lock
add
into
inc
mov
sbb
fcmovu
jnp
test
mov
mov
cmpsl
mov
imul
mov
loopne
aas
adc
jmp
es
cmc
daa
mov
rol
fdivr
loope
pop
inc
jmp
bound
xchg
pop
push
and
xor
pop
cmp
or
or
adc
movsb
push
sub
mov
xor
mov
jno
mov
mov
out
mov
or
in
xchg
cmp
ret
pop
dec
sub
sub
mov
sub
lock
fidivrl
jl
inc
loopne
dec
or
add
mov
xchg
inc
dec
or
out
cwtl
jae
jp
fidivl
data16
xchg
add
nop
xor
adc
xchg
push
xchg
cmp
les
lea
mov
dec
adc
pop
or
and
or
mov
fs
push
cli
inc
jno
or
xchg
call
push
mov
adc
popa
sbb
enter
mov
aad
jle
lock
int3
mov
rclb
or
fistl
push
pushl
lods
lods
sub
adc
aad
repnz
sbb
xchg
lock
xchg
and
inc
adc
push
xchg
inc
jne
mov
imul
add
pop
scas
pop
pop
icebp
divl
iret
into
cmp
lds
sbb
leave
adc
nop
cmp
sub
sbb
popf
adc
sbb
flds
sbb
daa
jecxz
dec
or
mulb
sbb
ljmp
jg
add
lret
cld
je
movsl
xor
imul
fsubrs
or
clc
jno
push
cmp
hlt
fnstsw
add
add
pushf
out
adc
clc
and
jp
negl
push
insl
scas
sub
inc
mov
adc
pop
push
jl
push
inc
ja
mov
xchg
sti
das
scas
sub
dec
mov
mov
cmp
aam
sti
clc
pop
fcmovbe
sbb
cmp
pop
scas
xor
sbb
sbb
add
add
push
push
cmp
mov
lods
xlat
js
outsl
insl
repnz
in
cli
loop
xchg
push
in
mov
jo
loopne
mull
loopne
loope
mov
pop
roll
inc
sbbl
rcll
pop
fwait
es
andb
jmp
add
fldcw
jecxz
push
out
adc
test
xchg
shll
xor
sbb
and
fidivrl
mov
imul
sbb
sub
inc
fdivl
test
lods
xor
mov
jle
sti
add
movsb
xchg
mov
push
mov
mov
cmpsb
movl
push
mov
xchg
inc
pop
pop
jnp
js
fnstcw
das
and
jge
mov
setns
cmp
mov
or
mov
movsl
adc
cli
sbb
jp
loop
popf
iret
mov
adc
dec
or
adc
mov
cmp
cwtl
cmp
sub
cmp
movsl
xor
sbb
out
in
inc
sbb
dec
add
jns
cwtl
cmp
xchg
cmp
lret
outsl
lret
divl
xchg
in
daa
mov
rcrb
inc
cmp
sahf
nop
inc
or
push
leave
jno
xchg
inc
aaa
outsb
and
jp
pop
std
sbb
inc
adc
outsl
xchg
js
mov
mov
inc
adc
inc
lods
inc
jns
mov
and
xlat
jge
mov
js
jae
mov
xchg
xchg
lea
ret
mov
insl
out
push
popf
inc
imul
sbb
xor
pop
fs
push
cmp
adcl
rorl
les
mov
mov
xchg
aaa
adcb
pop
cld
notb
and
in
xchg
cwtl
clc
pop
sbb
and
mov
pop
sbbl
xorl
jae
push
xchg
loopne
loop
fnstsw
std
mov
xchg
jae
push
test
jbe
xor
push
enter
pop
mov
sbb
adc
jmp
mov
add
shlb
mov
dec
add
mov
call
arpl
xchg
pop
add
push
pop
mov
xchg
sbb
fadds
cmp
pop
sti
pusha
cmp
clc
popa
fwait
sub
mov
stos
out
je
sub
mov
divb
xor
lret
mov
mov
cli
xchg
mov
cltd
inc
mov
xchg
aaa
sbb
or
pop
test
ljmp
inc
or
stos
pop
add
pusha
jmp
jl
push
testl
sub
jle
cmpb
xor
or
imul
cmp
insb
jb
add
fidivrs
pop
mov
in
pop
sub
add
or
add
fnstcw
pop
popf
xor
and
mov
mov
insl
in
cmpl
add
leave
jp
sti
xor
lea
es
pop
jle
nop
dec
dec
or
adcb
sbb
out
pop
mov
mov
pop
cli
push
scas
and
imul
push
sbb
rolb
or
dec
adc
loop
push
fs
dec
or
addr16
and
mov
or
les
das
fs
inc
std
cmp
jp
jmp
dec
sbb
dec
aad
pusha
fcoms
icebp
ja
jno
out
mov
adc
ret
xchg
lock
jo
xor
mov
cmpsl
inc
mov
jo
pop
add
inc
or
movsl
ss
cmpsb
sar
pop
and
in
insb
data16
xchg
enter
push
adc
push
push
out
xchg
cmp
push
lock
jmp
div
data16
mov
clc
inc
adc
sti
pop
inc
ret
or
pop
lock
out
gs
mov
cmp
xor
daa
insb
divb
mov
sub
mov
cmpsl
sub
mov
clc
push
dec
mov
sar
das
mov
ljmp
cmp
cs
test
rcrl
iret
sub
mov
shr
adc
xchg
sti
pop
inc
int3
sub
mov
mov
gs
fistl
xor
loopne
adcb
pop
jmp
inc
inc
pop
sahf
divl
test
mov
inc
or
lea
or
pop
negl
xor
ret
jns
mov
out
repnz
shl
jge
inc
or
jmp
and
ret
in
lock
popf
hlt
mov
sub
stos
inc
jno
les
jmp
std
rolb
push
mov
mov
testb
and
cltd
addl
mov
movsb
movsb
xor
pop
pop
std
icebp
pop
inc
fidivs
push
add
popa
mov
mov
dec
mov
dec
pop
adc
push
cli
push
add
pop
idiv
xchg
mulb
loope
addr16
xchg
push
pop
or
xchg
cmp
notl
fstpt
out
mov
push
jae
push
push
pushf
lret
mov
pop
cli
push
popf
xchg
inc
jg
lret
mov
lret
push
lret
cmp
pop
cmp
jmp
cmc
push
mov
xchg
js
outsb
pushf
int
dec
sbb
mull
dec
push
push
sbb
xchg
out
mov
gs
cmpsl
and
or
rcrl
and
iret
mov
ss
fwait
insl
les
movb
sbb
mov
in
jbe
bound
cmpsl
fdivrp
pop
add
roll
fisttps
mov
cld
inc
inc
or
push
stc
cli
jno
cmp
push
dec
mov
adcl
lcall
xchg
mov
dec
rcll
outsb
inc
inc
mov
in
jb
test
add
mov
xchg
add
dec
out
mov
mov
mov
mov
hlt
jo
dec
cmp
pop
std
mov
cs
or
and
xchg
sub
mov
lods
jmp
pop
lcall
leave
push
xor
mov
dec
adcl
mov
jno
cmpl
jb
test
gs
repnz
test
lret
inc
or
in
jb
test
or
lret
insl
icebp
xchg
test
dec
push
adc
pop
dec
daa
shrl
push
mov
mov
and
push
loop
test
add
push
mov
sub
mov
mov
aas
push
repnz
popa
pushf
xchg
cwtl
pop
rolb
outsb
mov
mov
jle
in
out
dec
cmp
enter
sub
test
insb
dec
xor
jle
pop
mov
loopne
jnp
repnz
add
xor
cltd
gs
mov
ja
and
lret
aad
in
pop
push
sub
aas
in
jno
jp
scas
xchg
add
add
and
push
aaa
aas
push
mov
mov
fstpt
or
cs
xor
das
mov
ret
repz
insb
push
adc
repz
mov
lcall
aas
in
int3
das
std
push
pop
inc
push
dec
in
popa
in
xchg
jo
add
ret
mov
cmc
push
and
dec
pop
inc
xlat
mov
pop
fwait
stos
pop
cmc
fstpt
adc
adc
inc
dec
lcall
mov
inc
xlat
in
insl
daa
pop
pop
idivb
dec
hlt
mov
jge
mov
fwait
xor
in
xor
push
add
in
push
fsubrs
xchg
insb
add
cmpsb
testb
cli
adc
sub
test
push
xor
jge
pop
mov
fsubp
jnp
icebp
outsb
add
arpl
jbe
and
leave
ds
jmp
pop
sbb
ds
jo
jp
lods
xchg
add
ret
das
add
and
push
ss
xlat
addr16
imul
repnz
fidivrl
sbb
test
sub
das
lahf
cmpb
icebp
rcl
insl
add
es
mov
mov
cwtl
jns
test
jmp
xor
cld
or
pop
ds
in
xchg
outsl
insl
add
mov
lcall
and
inc
push
inc
xlat
xchg
pop
lcall
jge
cli
jl
sub
add
xor
and
shlb
insl
and
inc
hlt
mov
jle
mov
pushf
xor
jmp
sbb
mov
in
push
fsubrs
nop
insb
add
movsl
testb
stc
adc
sub
test
imul
pop
mov
fucom
jnp
lock
add
bound
and
and
enter
push
ljmp
pop
cmp
jp
lods
nop
add
ror
das
jmp
and
push
xor
xlat
gs
insb
cmpsb
xchg
mov
repz
fdivrs
sbb
test
pop
insl
xor
sahf
jle
dec
mov
dec
in
rcl
insl
add
insl
add
and
mov
mov
xchg
ja
test
ljmp
pop
cmp
pop
out
nop
insl
insl
add
mov
fwait
loop
mov
repnz
mov
inc
push
inc
fadds
cmpsl
pop
neg
mov
jge
sub
fwait
xor
and
shll
xlat
outsb
and
pusha
divl
push
jle
mov
pushf
xor
ljmp
das
cmp
fsubrs
insl
add
mov
mov
adc
adc
sub
test
leave
jp
pop
mov
fsub
jl
out
outsb
add
popa
inc
mov
jae
and
aam
add
daa
pop
hlt
pop
cmp
jge
jns
adc
int3
cltd
xor
loopne
mov
push
xor
arpl
insl
movsl
test
mov
hlt
mov
jl
or
adc
pop
insb
xor
popf
jl
dec
scas
mov
insl
add
outsb
add
push
mov
xchg
jne
test
jmp
or
pusha
cmp
dec
out
pop
out
imul
mov
pushf
loope
mov
lock
xor
stos
inc
inc
push
inc
flds
cmpsb
pusha
not
mov
jge
clc
jle
sub
add
xor
and
shrb
fsubrs
add
xor
jbe
jle
xchg
pushf
xor
jmp
mov
out
dec
fsubrs
mov
shlb
and
cmc
adc
es
xor
js
enter
push
out
jge
in
outsb
add
pusha
aas
mov
jno
and
roll
add
enter
pop
cmc
push
cmp
jge
js
adc
lret
lcall
pop
mov
xlat
popa
jb
outsb
movsb
sbbb
not
jl
push
sbb
dec
daa
lcall
jp
dec
lods
mov
insl
decl
outsl
push
inc
and
mov
lea
jae
stos
movsb
mov
inc
out
xor
testb
popa
cmp
push
out
pop
call
add
fistpll
mov
inc
push
inc
fiaddl
movsb
popa
clc
aad
out
out
jg
sub
push
popf
cmp
xor
pop
and
mov
out
fnstenv
add
xor
mov
push
test
popf
xor
out
lret
mov
call
jle
outsl
push
mov
fisttps
lods
and
stos
inc
gs
xor
jbe
leave
pusha
mov
jle
ljmp
pop
cmp
and
ret
fadds
in
pusha
push
and
notb
out
imul
pushf
mov
fsubl
mov
dec
cs
fcomps
fsubrs
sbbb
ret
testb
pop
adc
xor
xor
lcall
call
std
or
testb
jno
stos
mov
ret
xor
hlt
push
lret
bound
adc
jmp
push
cltd
lods
pop
sahf
fnstsw
and
inc
inc
push
inc
fiaddl
mov
call
push
or
sahf
cmp
xor
pop
and
push
int3
lods
inc
fcmovu
in
fnstenv
jmp
xor
mov
jg
adcl
out
lret
mov
call
jge
outsl
push
mov
fimuls
lods
and
stos
inc
fs
xor
jne
leave
pusha
mov
push
call
or
outsl
push
sbb
and
jle
mov
rcl
fadds
jecxz
pusha
adc
ss
push
mov
xor
mov
dec
sub
fsubrs
jg
divb
sarl
add
adc
xor
xor
cltd
ja
push
test
lret
cld
or
pop
ds
mov
mov
ret
repz
push
call
mov
push
cwtl
stos
pop
sahf
fdivrl
and
inc
aas
dec
inc
fiaddl
mov
call
push
and
inc
popf
xor
pop
and
push
lret
stos
inc
fcmovu
in
fnstenv
popa
clc
das
inc
testl
les
xor
push
idivl
call
jl
outsl
push
mov
fisttpll
lods
and
stos
inc
arpl
lret
leave
pusha
mov
push
call
or
outsl
push
sbb
add
and
jge
mov
ror
fadds
loop
pusha
adc
pop
notb
out
addr16
adc
mov
xor
fisubl
mov
dec
sub
fcomps
fsubrs
jle
imulb
sarb
add
fwait
xor
xor
cwtl
jbe
push
test
push
call
sti
or
cmp
pop
mov
mov
shll
repnz
bound
adc
inc
push
jmp
push
xchg
stos
pop
sahf
fstpt
and
inc
ds
inc
fidivrl
lret
mov
call
push
and
pop
sahf
aaa
inc
popf
xor
pop
and
push
lret
fcmovu
jmp
jo
std
popa
clc
cs
testl
ret
mov
xor
adc
aaa
push
call
jnp
outsl
push
mov
fmull
lods
and
stos
inc
bound
lret
leave
pusha
mov
push
call
or
outsl
push
sbb
add
and
jl
mov
mov
loopne
pusha
adc
pusha
notl
out
gs
adc
mov
pushf
xor
fsubs
mov
dec
sub
pop
insl
fnstenv
jl
imulb
into
jge
add
lods
inc
and
lret
xchg
je
push
cmpsb
mov
xlat
outsb
stc
or
cmp
testb
insl
adc
sahf
mov
inc
loop
xor
lock
arpl
push
ljmp
test
lea
sti
es
cmp
inc
fstpt
lret
lahf
stc
shlb
adcb
add
sahf
xor
push
and
push
leave
test
fcmovu
ljmp
sub
clc
jo
jg
jg
push
lods
ret
xor
jecxz
lret
adc
mov
jmp
jns
jo
mov
fisttpl
lods
pop
das
lods
inc
popa
inc
xor
jno
lret
xchg
push
call
pop
in
push
pop
sub
popf
pop
cmp
mov
mov
fmulp
pusha
adc
popa
clc
push
xor
jle
jb
push
movsb
test
xor
and
dec
sub
pop
insb
fidivl
jp
imulb
int3
jge
adc
scas
inc
pop
pushf
xor
xor
push
movsb
mov
ljmp
jb
cmp
testl
pushf
scas
scas
inc
loopne
xor
out
add
xor
push
jmp
xchg
pop
xchg
cmpsl
or
out
daa
mov
cmp
fdivrl
bound
scas
jmp
sbb
add
lahf
xor
ss
es
cmpsb
inc
fcmovnbe
call
stc
sub
nop
outsb
dec
adcb
pop
scas
rcrb
int3
adc
mov
ljmp
jno
mov
lods
sbb
ds
outsl
or
mov
push
jmp
add
daa
pop
sahf
pop
mov
stos
mov
cld
fmul
popa
push
push
stc
dec
das
call
pop
mov
ret
sahf
xor
add
es
fsts
js
imull
lret
cld
adc
scas
inc
sbb
ss
jo
push
mov
ret
fnstenv
push
jae
cmp
clc
sub
lods
scas
inc
fidivrs
int
xor
push
ljmp
jno
xchg
movsl
or
in
daa
mov
cmp
fdivrl
int3
arpl
ljmp
add
mov
jb
daa
mov
lds
clc
arpl
sub
stc
nop
insb
dec
sbbl
mov
fbstp
push
and
push
ljmp
jno
mov
stc
nop
leave
xlat
es
pop
scas
sbb
lods
inc
pop
cmp
lret
bound
shr
addb
jno
adc
pop
sahf
push
xor
and
inc
mov
fcmovne
bound
cs
pop
mov
rcrl
add
mov
ficoml
ja
clc
test
stc
nop
in
leave
jg
sti
push
sbb
dec
pusha
ss
outsl
mov
jmp
ret
hlt
add
or
adc
xchg
sub
stos
scas
inc
fdivrl
int
das
or
jmp
sbbb
xchg
mov
nop
daa
in
daa
mov
cmp
fdivrl
int
mov
jmp
fsubrp
sbbl
xor
lahf
ss
sub
ret
movsb
inc
fst
in
jb
mull
cmp
nop
push
sbbb
mov
scas
mov
fnsave
push
and
push
ljmp
jno
mov
cli
xchg
enter
pop
ljmp
pop
cmp
int
jl
bound
iret
jmp
or
and
sahf
push
xor
daa
data16
mov
mov
fcmove
arpl
stc
dec
sub
adcb
orb
mov
sahf
xor
add
mov
fistl
jbe
stc
cmpsl
mov
adcb
or
scas
cmp
pop
ss
outsb
mov
jmp
rcr
repz
xor
cli
xchg
inc
push
xchg
sub
test
inc
fidivrl
int
sub
dec
jmp
sbbb
nop
mov
xchg
sub
repz
mov
aaa
inc
inc
fdivl
into
mov
in
sbb
sbbl
xor
sub
ret
fst
jecxz
jb
mulb
aaa
stc
nop
imul
scas
mov
fdivl
push
and
push
ljmp
jno
mov
cli
xchg
aam
es
jmp
lods
inc
pop
cmp
int
jnp
bound
into
jmp
or
and
sahf
push
xor
mov
mov
fxch
arpl
sbb
dec
sub
sbbl
or
lock
mov
inc
and
jne
stc
cmpsb
mov
adcb
or
scas
cmp
lahf
ss
pop
ss
insl
mov
jmp
rcr
repnz
xor
cli
xchg
inc
push
xchg
sub
cmpsl
scas
inc
fnstcw
int
sub
push
in
cmp
jmp
jg
jae
mov
xchg
sub
repnz
mov
ss
inc
fdivl
into
mov
in
sbb
sbbl
das
cmp
outsb
push
sub
shll
jb
cmc
fs
es
nop
push
mov
scas
mov
push
and
push
ljmp
jno
mov
cli
xchg
rorl
scas
sbb
lods
inc
pop
cmp
int
jp
bound
jmp
or
and
lahf
push
xor
mov
mov
inc
fcomi
xlat
int3
arpl
sbb
dec
sub
sbbl
lahf
scas
mov
es
inc
and
fdivl
jae
stc
movsb
mov
xchg
jmp
or
mov
sbb
into
lea
push
popf
scas
push
in
fistpll
je
xor
cli
xchg
inc
push
xchg
sub
cmpsb
mov
fdivs
into
sub
push
in
cmp
jle
jae
lea
xchg
sub
icebp
sub
xor
inc
fnsave
xchg
in
sbb
sbbb
cld
or
insl
dec
sub
shlb
jae
repz
and
cli
xchg
addr16
sbbb
mov
scas
mov
fidivl
int
in
mov
jmp
aas
fdivl
jg
or
rclb
scas
pop
es
inc
pop
cmp
int
jns
arpl
int3
ljmp
and
mov
popa
jb
mov
mov
inc
fdiv
aad
arpl
pop
fs
dec
sub
sbbl
or
out
int
mov
inc
pop
inc
fcoml
fnsave
arpl
mov
ret
sbbl
cmp
mov
iret
mov
push
fwait
lods
push
in
fnstsw
or
adc
xchg
inc
push
xchg
sub
movsb
mov
mov
into
out
into
sub
push
in
cmp
cmpl
mov
xchg
sub
out
sub
xor
fnsave
iret
data16
in
test
in
sbb
sti
or
imul
jle
mov
jae
repnz
and
cli
xchg
gs
sbbl
xchg
scas
mov
mov
int
jmp
push
sbb
fnsave
jb
scas
xchg
sti
xchg
ret
rclb
mov
and
inc
push
aaa
aaa
into
push
mov
mov
or
cs
sub
daa
mov
mov
inc
fdiv
aam
fs
adc
jmp
pop
sbbb
jp
mov
in
int3
daa
mov
aas
push
inc
fisttpll
fnsave
fs
mov
ret
hlt
push
sbb
inc
pop
cmp
mov
push
lcall
je
cld
je
paddb
andl
inc
aam
cmp
in
into
gs
pop
push
out
cmp
cmpl
or
fwait
or
fsubrp
sub
xor
inc
fnsave
shlb
xchg
fs
ret
test
jecxz
sbb
aaa
mov
sarl
push
mov
fstp
jae
icebp
data16
and
cli
xchg
arpl
sbb
sbb
enter
pop
ljmp
pop
cmp
jb
lods
nop
cld
xchg
ret
daa
add
sbb
push
ss
addr16
arpl
enter
fidivl
sbb
mov
pop
outsb
daa
mov
mov
inc
fdiv
ror
gs
es
sbbl
sbb
mov
sub
cmp
pop
fnsave
gs
mov
roll
xor
push
cmp
xchg
push
cltd
test
in
fnstcw
je
sub
std
xchg
inc
dec
xchg
sub
sbb
shlb
into
gs
inc
in
cmpl
or
lret
sub
jmp
mov
xor
inc
shlb
nop
fs
shll
sbb
or
sub
mov
sarl
mov
push
and
fs
pop
fstpt
stos
mov
lret
imul
adc
add
xor
imul
pop
out
faddl
je
roll
mov
in
mov
jge
pop
notb
pop
aad
mov
stos
rorl
sbb
xchg
shlb
hlt
and
push
inc
shll
lahf
push
pushf
xchg
call
xor
mov
adc
das
push
loopne
push
sbb
ret
cmc
jnp
in
adc
adc
cwtl
sbb
test
into
into
push
outsl
pop
mov
cmp
rcrb
mov
xchg
out
push
ret
add
cs
mov
ds
mov
lahf
in
sbb
push
test
inc
shl
into
jecxz
jae
or
aas
xchg
or
lret
push
mov
pop
daa
sahf
insb
arpl
jecxz
jmp
push
jne
enter
xchg
fiadds
dec
mov
cs
add
push
fwait
cmp
mov
mov
xchg
test
xor
mov
leave
cmpsl
push
or
fs
stos
cmp
bound
dec
mov
sti
lahf
cmp
and
stos
mov
xchg
push
jbe
clc
call
xchg
cld
xchg
mov
jno
orl
fadd
xchg
ds
ss
idiv
ljmp
xchg
push
jmp
xchg
dec
in
or
sbb
or
cmp
popa
shlb
mov
inc
mov
pop
xchg
sti
sub
gs
out
mov
imul
jp
xlat
push
scas
fcmovne
std
dec
mov
scas
sbb
call
movsb
mov
jmp
or
sbb
xchg
sbb
aaa
ds
dec
sar
test
jb
xchg
or
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
sbbb
add
sub
sub
pop
es
jl
push
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jmp
fldcw
leave
jb
ljmp
xchg
push
mov
mov
jge
scas
dec
push
pusha
xchg
hlt
sub
mov
pop
gs
out
jge
js
push
cmpsl
inc
shr
popf
jmp
sub
ret
mov
into
cmpsb
xchg
jecxz
mov
fisubs
aas
popf
mov
jbe
jecxz
dec
in
ljmp
sub
adc
stos
dec
cmp
sbb
add
ret
nop
dec
lcall
cs
sbb
sbb
fstp
add
push
adc
or
cwtl
dec
imul
push
sarl
lahf
pop
add
scas
adc
enter
fwait
mov
call
cwtl
fdiv
sbb
xchg
decb
cmpsl
ljmp
mov
push
cmpsb
push
mov
les
ret
scas
sbb
xor
jge
push
xor
testb
movsl
daa
lahf
mov
je
cld
imulb
out
shl
cs
mov
outsl
fmull
or
lds
imul
xchg
dec
push
std
and
sub
leave
decl
into
cmpsb
aad
pushf
shll
pop
dec
into
fnstcw
pop
inc
out
rcr
cli
jb
or
cmp
popf
and
or
repz
sub
ljmp
jne
rcrl
cmpsb
adc
in
fwait
mov
insl
xchg
lds
mov
ja
xor
push
fldlg2
jmp
sub
xor
dec
imulb
rcll
pop
call
jo
or
mov
or
push
push
fcoms
mov
flds
cwtl
sbb
fnsave
mov
adc
sub
lcall
les
jge
lods
push
decb
ficoms
pop
sbb
ljmp
ret
sub
xchg
scas
push
jmp
and
nop
aad
aas
mov
inc
mov
