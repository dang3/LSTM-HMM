push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
cmp
add
cmpsb
pop
ss
clc
in
fs
cmpb
dec
bound
arpl
pop
or
outsl
fildll
jae
gs
test
dec
dec
outsb
or
fldenv
fbld
jo
shrb
add
dec
addl
jmp
or
iret
je
daa
sbb
int3
mov
mov
dec
ja
dec
rcll
or
in
dec
adc
pop
or
pop
jb
jb
adc
pop
rcrb
jg
push
fs
jmp
out
xchg
inc
add
jl
je
nop
inc
push
jo
push
fs
pop
inc
push
sbb
xchg
push
sbb
nop
dec
dec
sbb
inc
inc
cmp
nop
inc
push
cmp
nop
inc
push
sbb
and
push
sbb
sbb
sbb
adc
mov
pushf
adc
nop
inc
push
mov
lods
nop
inc
push
sbb
add
sbb
jae
nop
push
add
mov
add
dec
sbb
sub
je
movzwl
mov
sbb
arpl
repnz
xchg
nop
hlt
nop
lock
in
nop
dec
sahf
cmp
call
nop
fcoml
mov
cmp
jne
push
call
pop
fmuls
push
pop
xor
mov
jmp
mov
adc
adc
mov
mov
add
mov
push
roll
push
movsl
mov
or
or
mov
inc
cmp
jne
mov
dec
adc
insl
cmp
pop
push
mov
lds
adc
lret
push
push
push
clc
mov
mov
jg
in
lret
sarb
add
cmp
fldcw
addl
push
ss
adc
xchg
push
pop
add
push
insl
fistpl
sub
pop
pop
arpl
mov
mov
adc
ds
aaa
mov
dec
add
loopne
push
xor
mov
mov
mov
mov
jg
pop
mov
mov
insl
xor
jns
mov
lret
mov
dec
mov
enter
mov
in
faddl
sub
jmp
add
shlb
sti
aas
jnp
push
pop
mov
scas
mov
mov
testl
lock
mov
xchg
in
hlt
xchg
push
das
cmp
faddl
pop
outsl
jb
ds
mov
stc
add
fbstp
xchg
cmpsl
mov
add
rorb
sub
cmpl
push
pop
xchg
dec
xor
or
jmp
in
sti
xor
pop
fnstsw
mov
add
sub
mov
ja
or
enter
lea
push
lods
insl
rcrl
sbb
adc
adc
mov
cmp
test
add
mov
test
nop
ret
mov
inc
cmp
pop
mov
sti
jmp
add
add
mov
push
push
mov
or
call
test
je
sbb
in
jo
and
movsl
push
cmp
push
es
push
sti
adc
call
add
fs
in
sbb
push
push
jne
js
fisubrl
and
or
and
xorb
pop
scas
imul
stc
leave
mov
inc
popa
ret
or
adc
sub
adc
dec
sbb
xchg
push
jmp
es
pop
mov
jb
int
add
adc
inc
adc
jae
or
push
add
push
adc
sbb
xchg
rcrb
loope
or
push
push
mov
out
arpl
stos
pop
dec
or
adc
imul
leave
mov
mov
sbb
out
call
dec
cmpsb
je
jge
jae
int
xchg
mov
sub
aam
xlat
lock
adc
dec
adc
sub
in
pop
jmp
mov
push
add
inc
lahf
out
imul
in
jae
xor
adc
jbe
out
outsb
mov
sbb
adc
or
lcall
out
push
jae
punpcklwd
pop
faddl
jne
rolb
pop
ljmp
ss
insb
mov
dec
inc
pop
add
insb
enter
push
sbb
dec
cwtl
xor
inc
add
add
cmp
scas
movsl
imul
into
push
inc
rorb
inc
cmp
fcomps
mov
cwtl
mov
pusha
pop
and
pop
mov
push
jbe
pop
add
in
pop
fdiv
dec
push
inc
mov
js,pt
das
jne
cmp
mov
lea
adc
es
xchg
adc
add
fnstcw
in
adc
pop
jae
or
xchg
mov
cli
inc
addr16
pop
pop
xchg
xchg
out
push
push
jae
fprem
cmp
je
jmp
pop
jae
mov
lcall
sub
int
rcl
push
add
jns
fwait
in
popf
xchg
lret
mov
or
arpl
adc
repz
sub
or
mov
push
inc
xor
ret
mov
jae
in
and
jne
scas
jg
and
fildl
adc
jb
cmp
lock
ret
inc
js
or
adc
push
inc
cmp
xor
loope
jmp
rclb
popf
daa
cmp
pop
jmp
jge
jmp
jns
fstl
insb
mov
es
je
mov
bound
adc
ror
add
mov
jbe
adc
in
push
movsb
push
push
sti
cmp
pushl
mov
push
cmpb
or
movsb
sbb
and
daa
mov
inc
mov
add
lock
mov
and
icebp
std
push
stos
jne
movl
mov
jne
cmp
mov
adc
movb
loope
pop
pop
pop
pushf
adc
cmpsl
xchg
or
add
jmp
mov
ja
mov
psllq
xor
xor
fmull
add
jle
lods
xor
sbb
jmp
xchg
and
or
or
hlt
cld
sub
jge
add
out
push
or
fisttps
or
fs
negl
mov
push
xor
fistpl
push
std
cmp
inc
jne
add
pop
clc
push
or
insb
jne
test
jns
aas
test
cli
add
dec
push
shl
out
mov
mov
inc
call
adc
pop
jmp
sbb
inc
gs
iret
push
mov
add
inc
jmp
adc
sbb
sahf
sbb
push
or
sbb
lods
adc
mov
cmp
cmp
inc
lret
mov
sbb
mov
adc
add
and
int
js
mov
push
bswap
es
add
emms
in
aam
mov
mov
lods
dec
dec
fisttpl
rolb
adc
je
outsl
out
or
add
pop
cmp
push
fs
mov
or
mov
add
push
or
or
mov
mov
inc
sqrtps
or
fbld
je
add
idiv
fiaddl
enter
ret
mov
add
inc
pusha
push
or
sbb
or
add
add
loop
ja
xor
mov
test
pusha
add
add
test
push
adc
cltd
or
inc
or
sbb
push
hlt
push
inc
loopne
sub
fistl
or
pop
dec
daa
jb
js
movl
or
sub
sbb
push
mov
jg
lock
xor
jge
sub
enter
dec
in
xchg
les
mov
inc
add
mov
sbb
cmp
lret
cmp
aad
mov
push
cmp
add
mov
cmc
shlb
lea
xor
jp
lods
mov
testl
in
fldcw
data16
push
call
movsl
mov
jns
rolb
insl
clc
add
outsb
pop
jne
jbe
in
adc
inc
mov
into
xchg
or
mov
xchg
mov
dec
pop
mov
jl
fs
dec
cmp
movups
inc
mov
sub
int3
push
clc
mov
add
aaa
inc
adc
inc
or
mov
or
pop
hlt
gs
jp
out
sub
sbb
push
jae
xor
push
and
push
inc
lea
sub
jno
adc
cmp
pusha
mov
ja
push
jp
jae
dec
pop
sub
add
mov
sub
add
mov
jae
jno
xchg
rclb
cmp
jne
mov
ss
loope
jmp
orl
fistps
xchg
mov
lods
or
adcl
adc
sbb
addb
add
fs
sbb
push
push
ret
xor
dec
call
push
pop
int3
or
cmpsl
lret
xchg
jg
iret
dec
xor
sbb
cmp
or
mov
or
push
jle
mov
or
stos
aad
nop
fsubs
lcall
fcoms
jg
pop
mov
xor
je
int3
jbe
addr16
fmuls
ret
adc
inc
cmpl
pusha
or
je
or
adc
pop
daa
dec
xchg
in
mov
add
hlt
sub
sub
push
jecxz
xor
add
add
addr16
stc
ds
jle
jmp
jnp
test
mov
dec
lods
ret
jl
jge
xchg
divb
and
push
push
movsb
jne
iret
inc
adc
pop
mov
out
mov
and
movsb
scas
sub
inc
gs
adc
ss
clc
mov
jmp
cld
adc
das
test
sbb
cmp
fwait
cmp
loop
mov
lods
sub
push
clc
cmp
insl
imul
aad
or
adc
pop
xchg
int
outsb
xchg
and
or
cmp
sub
or
fwait
jmp
inc
scas
or
out
dec
lock
loopne
hlt
sub
mov
in
pushw
or
pop
pop
adc
inc
cld
ret
call
cmp
pop
shlb
popa
push
in
or
pop
cmp
jmp
jb
jb
inc
adc
das
and
mov
pop
mov
lock
and
mov
iret
nop
cmp
jne
jae
mov
lahf
or
mov
cld
sub
or
push
sub
sbb
ret
stos
pusha
sbb
or
jbe
push
int
sub
aad
pop
push
cmp
popa
push
jnp
mov
test
or
int3
cwtl
dec
pop
sub
dec
inc
sbb
mov
lock
addr16
add
sub
mov
add
pop
aad
add
fwait
xabort
add
push
mov
jae
cmp
add
or
subl
or
jmp
pop
jns
sbb
pop
cmp
test
inc
or
or
pushf
fwait
mov
xor
adc
lods
lock
jb
lods
shll
add
adc
movsb
gs
ds
jmp
mov
and
insl
push
mov
inc
dec
sbb
or
out
sub
idivl
adc
sbb
outsl
fists
sbb
mov
inc
fsubrp
mov
add
shll
std
jge
dec
sub
and
dec
add
loopne
sub
add
repz
sub
mov
arpl
pop
add
and
outsb
and
push
jae
mov
cmpb
and
sbb
cmp
adc
pop
les
add
enter
divl
shr
add
and
std
adc
out
aam
inc
mov
dec
add
pop
mov
jmp
adc
iret
sub
xlat
and
xor
enter
enter
pop
jmp
ret
andb
or
pusha
enter
xlat
adc
sbb
lret
shrl
ja
inc
fsubs
add
arpl
cld
jmp
in
adc
jbe
and
mov
jge
sbb
lock
sub
je
ret
popa
ljmp
inc
leave
enter
cli
jbe
mov
fcomps
adc
mov
jmp
jne
mov
sbb
jmp
insl
mov
loope
xlat
jae
stos
jbe
addr16
sub
sub
pop
jne
add
ret
push
jmp
leave
je
jmp
sbb
enter
or
sbb
sub
lahf
pop
fldcw
sbb
jne
adc
dec
adc
test
out
mov
add
mov
jecxz
call
or
inc
xor
aas
pop
mov
dec
clc
cwtl
add
jo
ret
sbb
mov
mov
stos
lahf
mov
and
adc
outsb
sarb
test
push
push
cmp
mov
mov
jnp
rclb
xchg
hlt
dec
hlt
or
mov
adc
inc
push
or
je
lds
cmp
jg
sub
inc
push
jl
cmp
jg
add
loopne
call
mov
inc
rep
jmp
mov
leave
jmp
shr
mov
mov
dec
pop
mov
or
nop
or
jg
out
arpl
ja
je
sar
js
rep
sti
mov
fiadds
loope
push
inc
and
lea
sbb
std
sbb
cld
and
or
or
sub
sub
mov
or
xor
mov
add
push
lea
push
mov
add
or
xchg
dec
jns
mov
repnz
insl
lcall
xchg
push
arpl
sbb
jae
test
sub
jb
push
push
push
inc
mov
push
in
cmp
and
fistl
push
aam
inc
jnp
add
xchg
push
nop
pcmpgtd
mov
cmp
sbb
test
sub
jno
push
xor
mov
mov
or
and
les
dec
ja
push
add
repz
push
inc
sbb
sub
add
sub
adc
inc
push
and
cmpsb
mov
jle
ljmp
push
push
push
lea
push
or
jg
mov
lcall
cmpl
imul
jne
dec
add
pushl
and
out
mov
jbe
sub
mov
mov
pop
mov
push
pusha
lea
jne
push
and
in
cmp
jae
cmpb
jmp
push
dec
sub
outsb
std
in
add
jne
inc
lea
sub
or
iret
xor
adc
mov
je
imul
push
cmp
int
mov
sarb
into
fcomps
pop
push
insb
lock
add
rcll
pop
adc
push
sbb
mov
cmp
mov
sbb
popa
out
stos
shl
mov
push
and
pop
cwtl
mov
adc
shll
out
mov
push
pop
inc
sbb
cmp
aaa
dec
lea
pop
in
pop
and
jle
inc
add
repz
clc
fnsave
add
jmp
sub
mov
call
jp
sbb
jo
xchg
xorb
adc
mov
loopne
xchg
or
sbb
push
nop
or
lret
outsl
ljmp
pusha
mov
movzwl
and
cmp
jne
jno
lahf
dec
sub
imul
push
push
out
push
or
or
aad
adc
add
aas
ret
out
xor
divl
or
adc
sub
push
jmp
cmp
in
in
cmp
xchg
pushf
adc
jo
ret
push
or
clc
pop
or
hlt
push
std
frstor
pop
pop
inc
xchg
fstl
inc
cmp
sub
xchg
ja
and
add
xor
ja
call
mov
cmpsb
or
sbb
push
push
insb
jmp
cld
dec
sbb
pop
sahf
sbbb
loopne
cmp
xor
pop
stc
fnstcw
fmull
jno
xlat
jbe
cmp
in
movsb
xor
inc
sbb
or
sti
mov
adc
or
push
sbb
push
sub
dec
mov
inc
es
mov
das
loopne
dec
xor
mov
shl
pop
mov
shll
rep
mov
stos
xor
xor
or
sbb
pop
mov
dec
mov
xor
ljmp
adc
xchg
insl
jnp
add
xchg
pop
and
xor
xchg
pop
dec
inc
sbb
dec
xor
and
stos
icebp
and
shr
cli
mov
xchg
or
and
and
stos
or
aam
mov
je
int3
xor
dec
cmp
insb
cmp
jmp
mov
negb
jg
loope
mov
and
mov
and
decl
lock
sti
push
sub
std
or
pop
ja
xor
jo
or
sbb
xor
icebp
inc
add
mov
sbb
inc
mov
inc
adcl
inc
ret
pop
in
push
sub
jle
sar
mov
je
shll
clc
mov
hlt
inc
dec
jne
sub
mov
lret
and
addr16
push
push
dec
insb
pop
bound
das
icebp
or
push
inc
les
je
mov
sti
sub
sub
pop
and
je
pop
je
xor
daa
adc
test
pushl
add
sub
ja
cmp
ja
lea
mov
or
add
add
sub
out
int
out
mov
or
push
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
push
cvtpi2ps
popa
jb
dec
notl
jbe
pop
adc
or
jb
inc
leave
pop
add
aad
add
sti
pop
xor
mov
fnsave
repz
test
in
int
mov
jl
mov
idivb
lea
adc
fldt
in
out
fcmovnu
call
pcmpeqb
xor
jge
je
xlat
adc
jmp
jge
cmp
inc
stc
xor
add
stc
sbb
pop
fisubrl
fldt
fldz
fs
into
or
addb
aas
mov
repnz
repnz
or
or
ret
paddb
daa
mov
adc
mov
xchg
lahf
sub
sbb
add
mov
and
movsl
aam
movsl
adc
out
xchg
sub
out
incl
sub
pop
jecxz
add
leave
sbb
inc
cs
jbe
imul
cmp
mov
mov
jg
fwait
bound
cmpb
xlat
fadds
repnz
lods
outsb
xor
xchg
push
or
push
push
int3
into
sbb
sar
decl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
incl
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
inc
inc
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
ret
cmp
inc
xor
cmp
call
mov
push
inc
decl
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
jg
pop
cmp
addr16
repz
mov
subb
and
jmp
and
outsb
bound
xor
inc
mov
ja
es
pop
jne
rcrb
and
and
push
dec
les
addb
inc
mov
imul
clc
push
push
nop
sbb
jl
sbb
gs
hlt
ss
hlt
push
xor
xor
gs
jnp
and
ss
mov
and
lock
sar
sub
or
mov
decl
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
dec
add
push
dec
popa
cmpsb
push
popa
insb
jne
pop
lret
fninit
fldcw
aaa
mov
add
das
fidivs
in
es
push
add
mov
mov
xor
outsb
fdivs
add
rorb
sbb
call
mov
shlb
push
sub
fildl
je
popl
mov
iret
in
jle
insb
aaa
jo
mov
push
pop
mov
cld
out
xchg
stos
mov
mov
lods
roll
pop
subb
popf
adc
pop
rolb
les
ss
sbb
in
cmp
je
pop
mov
fadd
in
or
inc
push
mov
xor
add
dec
jne
jne
jecxz
lods
std
mov
mov
mov
xchg
pop
cmp
mov
test
and
ds
jae
pop
jb
movswl
xchg
and
rol
loope
pop
add
orb
rolb
push
dec
add
repnz
mov
stos
lfs
adc
rcl
cmp
mov
mov
and
mov
loop
push
push
lea
and
add
shl
dec
cli
pop
jae
xchg
mov
fmuls
xchg
mov
sbb
out
sbb
xor
pop
or
mov
mov
xor
xor
jb
cmp
jne
pop
or
jne
or
mov
adc
sub
inc
das
lds
push
repnz
xor
fistl
inc
or
out
sub
xchg
insl
aam
adc
push
jle
or
sqrtps
scas
mov
std
push
sbb
pop
out
sub
mov
mov
push
orb
pop
gs
pop
lea
fstpt
add
or
jne
pop
pop
mov
fdivs
add
leave
or
mov
shl
dec
mov
icebp
pop
lods
pop
inc
loope
test
push
sub
jg
shlb
and
mov
mov
mov
aaa
lock
push
inc
add
orb
mov
or
pop
cmp
test
and
sub
mov
pushf
adc
pop
icebp
cli
xchg
adc
push
clc
testl
clc
jmp
add
cmpb
push
repnz
in
push
call
mov
sbb
mov
add
xchg
je
in
or
pop
push
sbb
push
fcomip
jbe
pop
push
push
mov
aam
or
mov
cmp
lods
les
jmp
or
mov
add
xor
lods
fwait
xor
mov
sub
push
pop
mov
push
pop
loop
xchg
sbb
scas
mov
testl
call
cmpl
adc
outsb
cld
sub
sub
popa
shrb
arpl
addr16
clc
outsl
add
fstpl
out
push
je
mov
mov
sub
shlb
pop
ja
mov
ss
lods
add
stos
pushf
xchg
lods
shl
jp
or
or
mov
xchg
push
adc
push
mov
push
cmp
je
orl
loope
sbbl
sub
sub
push
das
pop
or
pushl
jle
inc
das
add
add
add
pop
sub
mov
popa
mov
insb
test
adc
fstpl
enter
testb
push
das
je
mov
push
add
cmp
outsb
xor
pusha
mov
fnsave
int
in
ljmp
pop
inc
mov
clc
push
push
push
push
push
inc
pop
pop
insb
xchg
jb
mov
and
add
sahf
int
pop
cmp
xchg
inc
or
outsb
lcall
rolb
call
rclb
pop
test
lea
mov
mov
lea
pushl
xor
jmp
fistpl
add
ret
das
int3
jg
stos
mov
add
je
cmp
push
cli
aas
fmul
sub
adc
pusha
add
pop
stc
aas
sub
jb
je
jmp
cmp
cmp
jge
insl
and
add
cmp
cmp
lea
pop
or
cmp
mov
jmp
mov
jmp
ljmp
arpl
push
mov
jmp
mov
dec
push
or
inc
add
pop
xor
enter
mov
mov
inc
cmp
inc
aas
je
in
xor
sub
xor
inc
ljmp
loopne
mov
cli
cli
out
push
out
or
push
jp
mov
add
lret
test
test
lcall
adc
xor
lds
sub
push
outsb
in
xor
mov
mov
xlat
shrb
cmp
fildl
sub
or
add
stc
inc
daa
adcl
test
xor
test
rorl
jnp
dec
mov
xchg
inc
fsub
imul
repz
xchg
sbb
jo
in
jmp
inc
sbb
das
das
xor
fs
fs
outsl
mov
pop
push
xor
jle
insb
and
imul
or
cmp
jg
xor
add
mov
cwtl
mov
movsl
mov
js
inc
xchg
sub
jmp
mov
cmp
in
movb
pop
jne
call
lea
xchg
push
xor
fistpll
sbb
or
jmp
pop
notl
sub
daa
add
sbb
or
mov
push
clc
shlb
ret
mov
std
cltd
idiv
add
add
mov
adc
sti
pop
dec
cwtl
call
and
mov
add
dec
sbb
loope
sbb
push
neg
sbb
inc
pop
aam
outsl
cmp
pushl
add
mov
mov
jbe
movsl
sub
jg
jl
loop
iret
inc
adcb
sbb
mov
cmp
mov
lcall
adc
mov
addl
mov
lock
jl
test
add
das
xlat
add
push
mov
mov
inc
xchg
cmpb
push
cmpl
push
add
push
cld
and
mov
or
into
out
sahf
loope
xor
xor
nop
pop
add
xor
ss
jbe
icebp
jnp
ret
cs
mov
mov
mov
cmp
mov
repz
in
or
add
sbbb
aas
mov
or
xor
push
hlt
les
xchg
sbb
fimuls
and
fcmovnbe
inc
xor
mov
addl
jl
lock
sbb
inc
clc
inc
pop
out
push
mov
insl
adc
sbb
add
mov
dec
push
or
frstor
pop
fsubr
dec
jne
mov
and
clc
aad
jg
test
xor
jbe
push
fmull
dec
cld
cmpsl
out
jmp
cmp
add
mov
xchg
dec
inc
mov
jle
jae
jle
push
mov
or
pop
movw
inc
add
or
push
cld
lcall
mov
xchg
push
loop
mov
xchg
stc
mov
jne
add
mov
pushf
push
shll
mov
shrl
xor
push
cmp
push
pop
mov
mov
add
add
mov
sar
les
mov
clc
insb
jg
clc
arpl
pop
add
sub
cmp
sub
aas
cli
pop
lds
jl
sbb
add
mov
fwait
out
fldl
fisttpl
sarl
jl
pop
xor
das
jge
xor
jl
push
push
mov
push
test
or
inc
addr16
push
and
or
cmp
lret
add
je
divb
mov
mov
pop
sub
jmp
arpl
sub
and
imul
sub
add
xor
jmp
add
mov
insb
add
cmp
cmp
test
iret
mov
inc
dec
nop
push
sub
insl
repnz
or
test
pop
pop
sbb
mov
mov
add
stos
jnp
cmp
inc
cld
ret
sbb
aaa
loope
xchg
sbb
jns
and
or
cld
add
cmpsb
mov
mov
mov
adc
repz
sti
fiaddl
mov
inc
pop
mov
adc
cmp
mov
cmp
push
push
rorl
sbb
mov
sub
push
pop
dec
mov
cli
bound
cltd
fcmovu
add
pop
pinsrw
lds
mov
jmp
pop
outsb
pop
pop
push
push
xor
mov
test
push
cmp
jns
cld
dec
jmp
cmp
in
adc
iret
push
es
mov
jg
add
mov
add
dec
jmp
xchg
dec
hlt
sbb
push
das
inc
pushf
sbb
push
insl
dec
mov
jmp
insb
outsb
or
xchg
dec
pop
xchg
pop
lea
ljmp
aas
jns
in
cmp
adc
push
add
push
cld
sub
ja
add
push
je
mov
es
cmp
jne
dec
je
in
add
lds
popf
or
add
lahf
loop
mov
add
or
das
lret
mov
and
cmp
cmp
jne
push
adc
ret
jecxz
insb
add
mov
and
sbb
push
adc
std
pop
adc
shr
or
hlt
fcom
push
clc
inc
repz
loopne
cmp
inc
inc
sub
add
je
push
call
in
mov
fists
push
pop
pop
or
mov
es
dec
inc
adc
rolb
or
iret
pop
aaa
pop
pop
cmc
jg
fisubrs
dec
es
jl
cmp
jge
sub
cmpsl
push
push
xchg
sbb
fsubp
movsb
or
jmp
mov
jmp
mov
inc
fldenv
xor
jl
jl
xchg
jge
pop
jle
sub
fnstcw
cmp
fbld
sub
add
lea
mov
ja
adc
cmpsl
cmp
cmp
hlt
cmp
or
fimull
sbb
outsb
mov
adc
aad
in
sbb
in
pop
aas
adc
popa
lret
rcr
clc
push
mov
xor
jne
pop
push
and
mov
pop
ss
mov
push
adc
hlt
inc
mov
jmp
sbb
insb
mov
jmp
push
jl
push
or
bndldx
cli
int
mov
push
jp
mov
sub
cmp
push
push
popf
mov
sti
pop
mov
pop
push
push
rcr
popf
push
pop
stos
stos
jb
mov
mov
call
inc
mov
mov
sahf
scas
aam
push
jb
jno
nop
pop
and
cmp
jmp
pop
repnz
lock
cld
jmp
xor
pop
andl
xchg
inc
cmp
leave
xchg
or
daa
mov
int3
pop
pushl
dec
loopne
inc
cmc
adc
sub
cs
and
jo
add
add
jbe
imul
call
add
push
push
push
enter
xor
mov
sub
pop
data16
shl
in
sbb
or
and
outsb
or
pop
push
stc
insb
cmp
js
std
cmp
add
pop
dec
cmp
dec
push
testl
leave
sub
cmp
orps
ret
add
fisttpll
xchg
mov
outsl
mov
dec
das
push
inc
lds
sub
mov
push
pop
add
cmp
inc
mov
add
ja
or
faddl
or
ljmp
out
sub
sbb
pop
and
in
les
mov
mov
pop
cmp
push
pop
sub
jg
stc
insl
or
cmpsb
push
mov
mov
add
add
mov
or
mov
push
add
and
cmp
jp
or
jbe
push
mov
mov
sub
cmp
pop
mov
shrb
cmp
inc
add
or
pushf
jl
adc
or
sbb
pop
dec
in
arpl
ja
cmp
jmp
adc
outsl
mov
cmpl
push
mov
mov
adc
add
dec
rclb
sbb
call
imul
sbb
jge
clc
xchg
lock
cmpsb
inc
sbb
xchg
lods
push
sbb
jmp
cmp
sbb
mov
dec
test
inc
sbb
pop
cmpxchg
cmp
orb
cld
push
inc
inc
add
cld
out
lock
and
add
sarl
add
je
imul
xchg
mov
pop
sbb
or
je
xchg
xchg
xchg
dec
or
jo
andb
mov
bound
in
aas
adcb
adc
pslld
in
adc
xor
push
add
je
cld
or
mov
xchg
cmp
pop
add
movsl
push
ja
cld
sbb
pop
in
in
in
test
pop
adc
rcrl
dec
jne
sbbb
sbb
call
iret
and
jns
addr16
testb
jge
inc
push
sbb
cmp
cmc
lods
pushf
dec
jne
push
xchg
cmp
sarl
adc
adc
dec
arpl
sbb
or
ja
std
add
popa
and
jmp
pop
mov
sbb
les
cmp
add
sahf
cmp
pop
add
cwtl
loope
dec
adc
xor
adc
in
lods
push
nop
mov
sub
mov
push
and
mull
mov
int3
inc
mov
or
jecxz
or
pop
pop
hlt
sub
insb
mov
fisttpll
cmp
into
or
dec
jp
sahf
sahf
rol
pop
ret
in
dec
and
pusha
sub
pop
mov
cmpsb
ss
sbb
imul
pop
mov
sbbb
loop
mov
inc
or
incl
subl
jne
inc
xor
or
movzbl
add
jo
mov
jo
push
push
outsl
jno
lcall
bound
je
out
sub
mov
pop
sbb
lock
adcl
push
or
dec
in
dec
cmpl
cmp
sub
cmp
jle
pop
test
or
sbb
rclb
test
pop
iret
sub
mov
and
jne
outsb
in
jmp
sub
dec
in
lret
mov
clc
mov
cmp
jge
add
lock
xor
push
xor
push
mov
ret
push
push
in
xor
fcoms
push
dec
adc
rcl
into
sbb
pop
and
and
and
add
sti
push
sti
stos
sbb
shrl
xlat
pop
movb
pusha
lods
xchg
cvtps2pd
add
pop
or
ljmp
xchg
sbb
xor
repnz
pusha
hlt
lret
push
inc
xchg
push
ds
xor
jnp
addl
and
ljmp
int
xor
cmpsb
dec
daa
push
cmp
xchg
adc
js
jle
pop
lds
lcall
mov
adc
adc
dec
dec
push
sbb
adc
pop
add
cmp
sbb
sub
mov
xchg
data16
xchg
aam
mov
clc
cmc
or
dec
out
sub
in
stos
or
les
lea
lret
adc
inc
sbb
add
jb
fisttpll
add
hlt
mov
or
aam
sub
cld
lret
pop
or
or
add
mov
dec
mov
sti
negl
dec
test
adc
mov
pusha
adc
icebp
mov
imul
sti
pop
out
sub
movsb
push
decl
hlt
push
xor
and
clc
mov
inc
push
adc
sahf
loope
mov
cmp
dec
sbbl
adc
lods
mov
cmp
pop
js
pop
out
inc
ret
mov
aad
cmp
mov
stos
jo
or
inc
jbe
inc
pop
cmc
cmp
xor
outsl
mov
cld
lea
imul
lock
imul
clc
mov
ret
inc
cmp
in
mov
mov
sbb
inc
stos
adc
inc
jl
adc
je
push
aam
aas
cmp
inc
lea
ret
pop
movb
lret
push
mov
mov
xchg
int
pop
inc
pop
aas
hlt
mov
call
test
rorb
cmpsl
inc
ljmp
xchg
or
imul
gs
xor
cs
loope
fildll
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
adc
or
shrb
ljmp
adc
sbb
add
mov
inc
cmpsb
lods
push
dec
sbb
insb
and
movsb
xchg
in
add
xor
div
into
ds
faddl
add
inc
out
mov
std
fs
addr16
loopne
sbb
add
sarb
outsb
dec
push
clc
notb
push
push
inc
and
add
in
dec
shlb
out
cmpb
repz
mov
je
or
imul
xlat
notb
add
pop
mov
in
fsubl
test
and
or
add
inc
sar
and
in
rcl
int3
ret
xchg
imull
sub
jne
xchg
pop
cmp
push
pop
test
cmp
lahf
push
stos
cld
addr16
outsl
data16
popa
jb
fsubrl
or
gs
mov
ror
mov
adc
inc
aam
inc
hlt
cli
add
arpl
or
jno
cmp
pop
or
in
add
push
push
lock
or
mov
lds
push
lods
cmp
jne
pop
repnz
fcompl
mov
inc
or
aas
cs
mov
pop
inc
xor
mov
enter
roll
xor
or
xor
push
jo
cmp
jecxz
lcall
and
shll
popf
inc
mov
add
mov
cmp
mov
divb
push
jg
cld
push
or
pop
gs
and
add
adc
dec
inc
jl
inc
insb
pop
cmp
inc
arpl
xor
dec
add
push
and
jmp
loopne
rolb
aam
lahf
nop
pop
mov
call
adc
ss
push
mov
or
enter
push
and
in
testb
adc
pushf
sarl
pop
mov
daa
pusha
adc
stos
inc
xlat
ja
xchg
and
or
sbb
rolb
jmp
lods
or
or
push
pop
xchg
daa
pusha
add
rep
pop
or
mov
lock
les
fs
sub
test
imul
push
mov
dec
rorb
loopne
cli
mov
inc
cmp
ja
mov
cli
mov
jbe
lea
cs
ja
fcmovb
jmp
orb
sti
lret
loopne
sbb
or
and
or
sbb
pop
mov
or
push
xor
push
jmp
int3
sub
mov
add
push
shlb
loop
cltd
add
mov
xchg
fbstp
add
mov
xor
sbb
or
add
sbb
jecxz
push
loopne
inc
mov
in
test
inc
movl
aam
jmp
cld
sub
pop
ljmp
outsl
lods
jg
or
inc
test
push
xchg
jae
jl
loope
adc
je
push
mov
shlb
mov
shlb
enter
xor
mov
and
fucomi
loope
or
out
fidivrl
cld
mov
jmp
sub
or
inc
ljmp
cmp
sti
sbb
sahf
xor
movl
pop
int
lret
cmpsb
ret
xor
subb
jb
xorb
and
cs
sbb
or
mov
xchg
ja,pt
dec
ds
or
insl
negl
mov
inc
daa
dec
cld
xor
mov
or
adc
je
addl
add
mov
inc
dec
inc
in
popa
pop
sub
or
dec
pop
jo
pop
in
rcrb
shll
incb
dec
sub
mov
pop
orb
inc
sbb
dec
ss
jl
adc
inc
mov
cmp
leave
inc
cmp
cmp
loope
dec
and
cs
scas
pop
xlat
cmp
dec
dec
push
dec
rcll
repnz
adcl
cmpl
jns
sub
mov
shrb
add
je
xor
enter
popa
or
push
add
xchg
dec
insl
xor
push
add
das
mov
and
push
cld
sub
mov
push
lea
push
push
or
cwtl
lock
mov
and
mov
xchg
in
inc
inc
sahf
xchg
mov
add
cmpb
push
incl
mov
pop
jne
cwtl
cwtl
or
orl
mov
sbb
jae
push
clc
pop
subl
sub
push
add
fldcw
addb
xor
sti
es
insl
mov
loopne
loopne
sbb
cmp
sbb
mov
iret
cmpsb
add
push
test
cmp
sub
cmp
dec
cwtl
or
and
jg
dec
mov
movsb
mov
add
inc
mov
fadd
pop
sarb
dec
lock
mov
xor
adc
ss
lea
push
incl
adc
inc
repz
mov
negl
pop
adc
push
mov
mov
or
lds
test
aad
xchg
sub
xchg
lea
sub
push
hlt
mov
cmp
ds
mov
mov
movsb
fisubs
call
fsubr
pop
add
les
xor
cmp
ds
mov
adc
xchg
pusha
fs
or
les
and
sub
mov
aaa
push
insb
and
and
fsubs
xchg
pop
fs
pusha
pop
pop
and
or
push
push
dec
and
inc
orl
cmp
xor
or
enter
and
enter
sbb
enter
adc
or
orl
add
push
sbb
in
xchg
clc
hlt
lock
in
call
push
loopne
fmul
inc
push
sbb
sarb
mov
xor
and
and
and
and
jl
or
enter
lock
enter
loopne
enter
fcom
enter
ror
enter
xor
scas
leave
in
push
enter
jo
enter
arpl
je
arpl
push
in
je
lock
fs
inc
ds
icebp
repnz
inc
push
sbb
cmc
testb
fs
stc
push
sbb
sti
cld
std
sbb
jmp
fs
inc
push
loope
jecxz
inc
push
sbb
in
inc
push
sbb
jmp
ljmp
inc
out
out
shlb
push
rcl
rcll
aad
inc
push
sbb
flds
sbb
fcmovnu
fstpl
fs
inc
shlb
rol
nop
inc
push
sbb
push
sbb
leave
push
sbb
lret
int3
int
fs
inc
into
iret
mov
nop
inc
push
mov
mov
inc
push
sbb
fs
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
cmpsl
test
pmulhuw
js
data16
jb
js
pop
add
sub
or
jp
das
xor
xchg
femms
add
inc
fmul
aas
or
arpl
je
outsl
outsb
rcrb
sub
rclb
sbb
mulb
or
inc
dec
gs
jo
nop
sub
pop
add
in
sub
test
inc
dec
jne
dec
dec
gs
outsl
jb
inc
mov
ret
pop
mov
mov
inc
dec
outsb
pop
inc
jb
pop
loopne
push
or
je
mov
insb
xlat
cmp
in
jns
cmp
adc
gs
nop
imul
test
prefetch
enter
lock
lock
push
or
imul
outsl
nop
dec
imul
imul
mov
aaa
add
outsb
jbe
jb
insb
outsl
ja
lock
pop
cld
pop
pop
arpl
pop
sbb
dec
mov
leave
xchg
pop
fsts
push
push
imul
jbe
imul
adcl
mov
push
inc
arpl
pusha
pop
sub
sbb
push
pop
imul
sub
pop
push
outsb
fs
nop
mov
inc
pusha
mov
jbe
jl
pop
push
outsl
imul
enter
das
mov
pop
ss
inc
popa
jae
outsl
insb
pop
lods
pop
inc
xchg
inc
and
imul
sarb
adc
arpl
jae
push
mov
sub
insl
js
repnz
insl
push
jb
lret
js
gs
adcb
outsl
adc
scas
push
je
arpl
or
lret
fcompl
cs
js
or
push
inc
imul
and
adc
xor
push
lret
test
popa
lahf
nop
pop
rcll
sbb
push
inc
and
inc
popa
outsb
lea
or
or
pop
lock
sti
lods
mov
fdivs
mov
pusha
adc
and
jb
push
data16
adc
pop
or
push
push
lea
mov
jo
dec
lods
inc
push
popa
data16
adc
fldl
cs
xor
scas
pop
add
insb
dec
pop
or
mov
insb
jae
cmp
cmp
jmp
fbld
add
cli
inc
pop
inc
dec
xchg
xchg
mov
jb
call
add
loop
add
add
cmpl
mov
pop
mov
and
aaa
aam
xor
aaa
jb
jmp
leave
fbstp
rcr
loope
add
adc
or
fisttpl
push
loopne
sbb
fbstp
xlat
or
lcall
xor
xchg
add
mov
mov
ds
ficoms
inc
sub
je
push
insb
loope
outsb
arpl
bound
mov
popf
imul
movsl
cli
ret
mov
js
mulb
add
adc
lret
mov
mov
mov
add
call
loop
sbb
adc
ds
and
cmp
fadds
les
mov
or
adc
fisubs
add
push
cmp
ja
sub
add
mov
adc
pop
dec
sbb
xor
popa
xor
dec
inc
pop
and
push
mov
sub
sub
orb
mov
mov
cmp
jbe
cmp
repz
je
mov
adc
add
or
cmp
es
mov
out
and
sti
je
test
mov
add
sub
pop
mov
and
mov
pop
dec
adc
or
jne
dec
aad
bound
add
sub
pop
int
xchg
das
push
cli
movnti
sbb
push
jnp
aaa
add
arpl
push
iret
ljmp
dec
lock
hlt
in
cmp
jl
cmpb
jbe
or
mov
mov
mov
cmp
dec
adc
clc
xor
jns
adc
mov
aaa
lods
inc
or
jne
cmp
push
mull
sbb
push
ret
adc
aas
add
push
outsl
mov
jb
pop
pop
mov
dec
ljmp
icebp
sub
jbe
add
jne
jmp
mov
dec
jne
sarl
mov
sub
xor
push
aaa
dec
add
repnz
push
fisttpl
imul
test
lds
loope
pushl
xor
jo
pushl
mov
imull
or
movsb
movb
dec
inc
cli
jg
test
push
push
add
jl
add
cmp
orw
ficoms
fldcw
mov
call
aad
andl
fildll
sti
imulb
fildll
ret
sub
fildll
filds
rorl
dec
rcr
fildll
stc
mov
xor
mov
insl
imul
push
fcom
fstsw
sahf
jae
fnstenv
test
ffree
ffree
ffree
ffree
pop
ljmp
add
out
out
in
mov
or
jo
shll
mov
andl
and
push
mov
ret
push
cmp
pop
jne
aam
mov
mov
sbb
push
or
adc
push
push
or
pmuludq
mov
cmp
inc
mov
ja
push
lock
shlb
sbb
jbe
xor
mov
mov
mov
xchg
xchg
jb
cwtl
das
adc
syscall
mov
and
stc
adc
inc
dec
add
repnz
jl
inc
mov
mov
mov
push
sbb
add
add
jecxz
or
push
adcl
jmp
fiaddl
ds
mov
dec
ja
mov
mov
adc
insl
lock
setne
jmp
leave
out
sbb
push
jmp
or
inc
mov
mov
xor
and
mov
cmpsl
ret
mov
mov
add
or
lret
sub
mov
ja
adc
in
ret
jno
adc
jmp
adc
mov
shr
jge
xchg
push
jno
adc
out
movsl
jg
or
mov
and
cmp
ja
cwtl
and
rcrl
inc
ja
sbb
aam
inc
notl
mov
and
mov
mov
mov
xor
int
mov
add
or
cld
mov
shrb
push
jecxz
sub
sub
xchg
adc
scas
aam
loopne
pop
sbb
enter
in
sub
dec
push
or
or
push
adc
mov
cmpsl
pop
les
lock
mov
arpl
ror
mov
mov
xor
pop
ds
jnp
pop
aas
testb
push
jae
mov
mov
dec
dec
sub
cmpsb
dec
jo
aas
adc
sarl
xchg
in
mov
sub
push
ljmp
out
lods
sub
pop
cmp
mov
loopne
or
adc
loopne
enter
sub
addl
andb
push
mov
in
fdivs
adc
aas
sub
imull
sub
inc
mov
mov
xor
stos
call
lret
das
inc
add
jb
adc
jae
mov
xchg
cld
fdivrp
xor
mov
ljmp
enter
or
push
in
add
lock
mov
add
lret
mov
lea
inc
fnstcw
fisttps
cmp
cltd
fnstcw
pop
pop
ret
and
add
add
test
sbb
pop
xlat
mov
xor
or
pop
fsts
sub
mov
cmp
mov
and
je
jo
int3
fdivrs
or
call
outsl
shrl
jne
pop
or
cwtl
ret
mov
mov
test
dec
je
mov
mov
push
fildl
sbb
push
mov
lods
ljmp
jae
mov
lea
in
and
sub
fwait
and
insl
rolb
and
sbb
dec
sbb
ret
lock
ljmp
pop
sub
jo
aad
lock
rolb
sti
pop
jbe
mov
pop
pusha
rorl
push
cmp
jo
mov
or
inc
rcl
cmp
ss
jns
les
and
add
inc
popa
jne,pn
and
mov
movsb
in
popa
rorb
mov
cmp
mov
sbb
rcrl
lds
add
leave
add
push
in
in
into
jmp
js
lcall
test
push
popa
xchg
shlb
mov
push
stos
jmp
js
dec
xor
push
bnd
inc
incb
mov
cmp
jne
adc
lret
in
adc
or
hlt
adc
lods
jmp
or
ss
cmp
adc
std
and
fmull
adc
and
sti
adc
cmpb
or
out
pop
pop
data16
rcrl
movsb
xchg
or
sbb
push
sbb
cwtl
outsb
repnz
jb
pop
ret
mov
dec
popf
insb
adc
dec
cmp
jb
push
cmp
imul
shrb
dec
push
mov
daa
and
das
cmp
xchg
jg
incl
jle
ja
test
sbb
mov
add
xor
ret
and
mov
mov
mov
pop
pop
or
xor
mov
outsb
loope
insb
dec
push
popa
and
cmp
fwait
cmpsb
jae
addl
scas
jle
jmp
dec
sbb
sub
pop
cwtl
jbe
in
movsl
push
mov
aas
jg
fsubrs
shll
push
fstpt
jne
adc
xor
cmp
testb
iret
push
sub
imul
test
mov
cmpsl
cs
xor
arpl
xor
xor
push
adc
lea
pushf
sti
ret
ljmp
sbb
lds
adc
push
add
jmp
or
lods
ljmp
div
push
sti
jmp
mov
mov
jne
pop
mov
mov
aad
xchg
mov
test
or
add
xorb
lods
adc
push
jmp
mov
dec
mov
pop
pop
push
leave
cmp
repz
insl
outsl
adc
mov
aaa
mov
inc
je
mov
out
repnz
outsl
push
inc
je
mov
inc
je
mov
dec
je
outsl
jo
mov
mov
sub
ret
dec
mov
cmpl
nop
test
add
inc
pop
cli
xchg
adc
cmp
aam
xchg
scas
and
movsb
jo
mov
jl
ret
sbb
adc
leave
jo
pop
pop
iret
lahf
sub
xchg
lret
inc
stos
call
cmp
push
xor
aaa
push
xlat
ljmp
jns
sub
cmp
pop
icebp
iret
dec
push
pusha
adc
xchg
data16
dec
add
adc
jbe
pusha
inc
cmp
ret
or
arpl
call
jmp
pop
xlat
mov
daa
ds
cwtl
dec
cmp
jl
jmp
add
shlb
mov
dec
fadds
dec
cmp
das
xlat
mov
sbb
cs
xor
rcrb
imulb
push
mov
test
or
das
fucomp
neg
push
or
mov
push
mov
jp
push
jbe
mov
push
mov
decl
jg
dec
mov
stos
cmp
jne
pop
pop
push
jnp
push
jg
jno
cmp
xchg
mov
mov
jl
in
pop
hlt
mov
xor
push
cmp
mov
les
loope
jne
xchg
sbb
pop
and
jle
sub
ret
stos
or
scas
adc
jb
out
insb
call
stc
stos
jae
mov
movzwl
sub
push
cmp
sbb
mov
lret
lea
or
insb
push
xor
adc
ja
jg
je
add
or
mov
add
fbstp
mov
cs
dec
sbb
js
mov
fs
aaa
subl
xor
dec
dec
inc
sub
clc
dec
inc
dec
lods
or
outsb
mov
test
cmp
aam
clc
das
adc
sbb
sbb
adc
in
cmp
or
pop
jmp
cmc
inc
inc
je
stos
loop
jge
mov
les
stos
or
and
daa
mov
stos
adcl
ret
lds
mov
xchg
dec
or
cmp
leave
mov
mov
int
mov
dec
sub
fwait
out
sbb
add
add
test
add
nop
dec
int3
jle
dec
scas
div
mov
inc
push
rorb
mov
in
dec
jne
cli
xor
stos
sbb
call
mov
stos
jecxz
cmp
add
insb
in
push
mov
cs
test
mov
and
or
adc
mov
lret
xchg
mov
fimuls
addr16
cli
stos
mov
je
mov
jmp
jmp
or
movsl
pop
push
jb
jl
loop
lret
pop
pop
test
test
inc
add
and
popf
or
jle
int
and
adc
inc
sub
sub
adc
and
or
out
mov
aaa
or
frstor
sub
sbb
inc
sub
mov
loopne
mov
add
insb
xorb
scas
int
in
jno
adc
ret
rolb
mov
testw
aaa
mov
mov
add
movb
out
or
xor
mov
bound
clc
adc
repz
jmp
neg
loope
frstor
inc
pop
frndint
jmp
fldt
fstsw
fwait
pop
inc
testb
fnstsw
mov
ljmp
fbstp
lea
mov
fbld
out
loope
and
add
cld
in
push
mov
stos
inc
clc
add
jns
fisttps
dec
fdivr
cmp
dec
add
call
jae
sub
cmp
xor
pop
loop
xchg
and
or
in
jmp
or
mov
mov
fs
mov
out
mov
icebp
sti
push
or
mov
push
add
dec
out
in
fs
fisubl
movups
pop
jo
pop
sub
lahf
or
pushl
dec
xchg
ljmp
test
or
jge
fldl
pop
mov
cmpsl
sbb
jae
add
add
addr16
fildll
cli
push
lods
or
mov
mov
filds
insb
rcr
push
mov
outsl
cmp
pcmpeqw
dec
adc
cmp
or
pop
adc
push
in
push
and
add
movb
int
jae
cmpb
idivl
fistpl
scas
pusha
test
or
push
and
sbb
shrl
pop
fstenv
insb
clc
or
fnclex
fldcw
shll
mov
inc
lods
icebp
ds
add
add
icebp
adc
adc
xor
inc
push
mov
or
cmp
je
adc
fimuls
inc
push
adc
pop
add
aas
push
pop
in
dec
jne
pop
iret
xorb
add
loopne
pop
loop
outsl
pop
add
aas
pushf
fstpt
pop
test
xchg
push
ret
mov
scas
fcmovnbe
ret
xchg
jmp
data16
and
lock
lcall
fsubrs
pminub
xor
jmp
sbb
mov
scas
stc
xchg
sub
inc
imul
popl
cli
hlt
enter
add
test
mov
insb
mov
cmp
add
xor
xchg
cmp
mov
add
daa
inc
mov
add
pop
jne
or
mov
sti
pop
adc
aam
fldt
fstpl
fwait
and
sub
push
mov
test
add
mov
sbb
and
sub
mov
jmp
lods
inc
jae
divl
or
pop
xchg
or
leave
push
push
loop
or
testb
or
ja
jae
add
cli
cmp
inc
stc
inc
ss
orl
cmp
shlb
out
add
shrb
pusha
ljmp
aam
call
mov
filds
fdivs
fstpl
fwait
jmp
or
out
pop
repnz
push
int
lret
movsb
dec
mov
push
sub
push
pushl
add
mov
shlb
mov
sbb
mov
lret
jo
cmp
mov
iret
adc
call
adc
sub
sbb
pop
fdivs
test
or
ss
adc
test
jne
push
mov
inc
and
xchg
bound
xchg
xchg
lcall
js
dec
jg
add
pop
mov
fldl
pop
incb
jb
mov
and
mov
jb
add
sti
idivl
and
cmp
ja
or
adc
push
dec
pop
adc
arpl
sbb
add
inc
dec
push
shll
idiv
imul
fcmovnu
imul
mov
stc
add
das
ret
pop
push
out
ret
cmp
push
inc
push
daa
iret
in
mov
xchg
inc
push
jg
fsubrl
lahf
dec
xchg
flds
hlt
insl
loopne
inc
add
sub
je
mov
retw
filds
xor
pop
or
mov
repnz
lock
ret
lods
mov
jbe
fistpl
decw
sbbl
mov
ret
fsubrs
adc
repnz
mov
shl
sbb
sbb
add
pop
pushf
test
rolb
push
or
and
stos
in
data16
enter
dec
mov
testl
or
das
inc
jmp
push
sbb
stos
cwtl
pop
adcb
hlt
jno
xchg
push
sub
pop
int
pop
lock
add
nop
mov
in
pop
fidivl
xorl
clc
lret
aaa
insb
lds
lock
jne
cmp
xchg
cmp
mov
add
test
loop
sub
mov
sbb
adc
inc
fsubl
lea
fbld
or
cwtl
sbb
ss
in
sbb
xchg
pop
dec
push
sbb
mov
loopne
in
mov
pop
mov
or
jo
xchg
mov
mov
xor
aam
rorb
inc
or
cmpsl
push
push
adc
add
icebp
sub
mov
mov
cmp
je
dec
cld
inc
mov
jne
add
cmpb
sub
mov
add
mov
dec
out
add
cmp
push
imul
movb
cmp
jecxz
inc
outsb
and
in
ds
test
insb
inc
ljmp
int3
roll
sbb
icebp
or
cld
into
pop
and
cmp
mov
xchg
or
in
push
lcall
pop
stc
mov
dec
push
arpl
push
lods
imul
pop
rcll
test
sub
sar
push
dec
pop
adc
push
aaa
xchg
sub
rolb
sbb
push
popa
mov
and
push
test
push
and
or
pop
push
or
cmpl
or
push
loop
mov
dec
sub
jl
jmp
xlat
add
je
bound
rorl
fsubs
sbb
or
ja
sub
sbb
mov
or
add
adc
adc
pop
jb
in
out
repnz
pop
push
repnz
punpckhdq
or
inc
jb
in
in
inc
or
je
jne
xchg
loope
cld
test
cmpb
jne
push
inc
enter
push
xor
add
jnp
pop
inc
clc
idivl
add
pushf
rcll
add
add
mov
add
fldt
enter
mov
xchg
rolb
popa
lahf
push
pop
pop
mov
sarb
jne
add
dec
ud0
in
loop
add
add
loope
xchg
insb
fisubs
inc
push
adc
mov
mov
dec
cmc
push
icebp
mov
or
dec
ds
and
pop
ljmp
xor
mov
dec
mov
lret
dec
mov
insb
sub
mov
ficomps
outsl
ja
sbb
cmp
jmp
mov
maskmovq
testl
andl
push
pop
inc
test
pop
or
xchg
cmp
inc
pop
xchg
add
pop
cs
adcl
pop
ss
sub
xor
ja
jp
ret
jl
pop
push
js
clc
loopne
xor
sub
jmp
nop
in
icebp
insl
sarb
jbe
frndint
pop
sti
and
ffreep
dec
and
and
fsubrs
push
and
xchg
aam
pop
aam
dec
data16
cltd
and
mov
xchg
sbb
sub
dec
sub
fadd
mov
popf
shlb
div
add
dec
je
add
jg
push
shrb
mov
hlt
pop
pop
fistps
xchg
scas
in
sbb
mov
mov
adc
mov
xchg
loopne
sbb
jbe
addl
aad
fwait
loope
adc
scas
and
mov
sub
jg
cmp
das
outsl
aas
mov
je
add
je
sbb
bound
fistps
lods
pop
pop
je
push
mov
dec
jae
dec
push
push
sahf
das
in
sub
and
add
mov
je
jne
jl
pop
mov
mov
add
shlb
cmp
jge
push
inc
push
data16
mov
outsb
sub
or
add
or
or
fmuls
mov
das
inc
popa
push
add
dec
and
add
push
leave
add
test
sbb
add
in
pusha
call
lods
je
sbb
jp
sub
adc
dec
cmpsl
push
mov
add
and
popf
ds
inc
add
add
jbe
mov
xor
jae
in
leave
fmuls
xchg
inc
jmp
adc
dec
add
cs
mov
xor
dec
pop
test
inc
cmp
add
jmp
stc
mov
add
dec
mov
add
push
test
lcall
les
int3
sbb
pop
aaa
movsb
jae
cmpb
mov
ss
and
mov
mov
in
pop
push
mov
or
lods
push
or
or
nop
shl
mov
sub
fimuls
popf
and
sub
adc
jno
sub
mov
and
adc
add
repnz
aam
std
inc
sbb
dec
das
push
dec
add
add
adc
out
add
adc
ljmp
pop
adc
dec
and
cmp
or
mov
int3
jae
andb
jp
or
stos
fnstenv
pop
inc
pop
cmp
pop
out
push
sub
push
or
inc
pop
ljmp
fdivrs
push
jmp
je
mov
xor
dec
jnp
or
mov
mull
dec
lods
je
jge
cmpsb
mov
xor
ret
inc
add
aam
mov
pop
mov
inc
das
out
ljmp
lahf
loopne
pop
adc
sub
jae
cmc
jb
xlat
stos
pop
add
sbb
dec
pop
in
ss
adc
ret
add
sbb
mov
outsl
jbe
fildl
or
cmpb
in
loope
xor
push
aad
add
dec
mov
push
test
inc
shrb
add
add
enter
call
arpl
and
push
mov
inc
test
add
jae
outsb
dec
jp
stos
cmp
push
pop
repnz
cmp
sbbb
add
pop
rolb
mov
in
sub
ds
fildll
je
dec
je
sub
outsl
mov
je
adc
push
pop
not
push
push
inc
pop
clc
jle
xor
aad
outsb
xchg
cs
movsb
mov
push
mov
xor
mov
add
aas
add
test
jl
sub
add
push
push
mov
lea
add
add
sub
fcomps
les
pop
add
mov
lock
mov
cs
cmp
pop
stos
or
hlt
outsl
mov
push
inc
adc
cmp
jg
jg
dec
lock
test
ret
cltd
xor
sub
aas
mov
ret
andl
cmpsl
out
mov
mov
cld
repnz
or
pop
cld
jmp
jb
xor
xor
ret
outsl
fadds
mov
push
fadds
fsub
in
lea
push
movups
roll
out
jb
ret
jp
sbb
iret
xlat
dec
mov
mov
js
and
mov
ds
addr16
cmpl
sbb
je
mov
dec
pop
pop
test
cmp
inc
adc
lea
inc
cmp
fists
adc
jge
clc
aam
inc
cwtl
or
add
hlt
push
xchg
test
xor
adc
lock
jns
cs
into
add
lock
loopne
add
and
cmp
push
push
lock
imul
data16
inc
fstps
pop
xor
test
jmp
sbb
hlt
jae
dec
xor
hlt
jmp
into
lds
cli
scas
push
jg
inc
sub
pop
stc
jo
xor
or
mov
or
jmp
in
inc
filds
or
and
sub
cmp
cmp
jle
adc
fs
cmp
popa
pop
insb
inc
negb
test
xor
and
cmp
mov
dec
dec
cmp
adc
sbb
adc
adc
repz
or
ljmp
push
sbb
dec
mov
ljmp
insb
xchg
in
xlat
mov
pop
outsl
je
sub
cwtl
bound
cltd
jbe
jo
add
xchg
rol
movsl
jns
xor
xchg
lahf
popf
fdivrs
sbb
ret
andl
inc
sti
sub
add
rcrb
mov
jmp
or
sub
mov
adc
repz
cmpsb
in
jmp
sub
push
jl
xchg
add
push
xor
add
adc
inc
add
dec
repnz
mov
inc
add
test
add
sub
daa
in
inc
or
add
sbb
das
or
fsubrs
and
jns
adc
sub
or
ds
cmp
jne
pop
add
push
cmp
add
push
jae
test
push
lods
adc
pusha
mov
pop
int3
andb
outsl
sub
and
sbb
leave
into
xlat
cmp
xchg
or
leave
rorl
insb
sbb
ficomps
cmp
subb
add
sarl
fwait
dec
ja
adc
inc
mov
pop
nop
outsb
xchg
push
sbb
popa
jne
outsl
pop
mov
jmp
fucomp
fdivs
xchg
sbb
or
pop
fwait
and
or
aam
arpl
dec
push
mov
xorb
mov
outsb
push
or
xor
add
xchg
mov
jne
ljmp
xchg
xchg
sub
dec
and
arpl
xchg
dec
mov
push
je
mov
lea
imul
adc
xor
scas
inc
roll
in
mov
jge
pop
dec
mov
aam
cltd
push
in
inc
add
es
add
or
cwtl
adc
rorl
ss
xor
push
nop
mov
cmpb
jecxz
je
and
mov
out
loopne
in
add
inc
shll
cld
jecxz
mov
enter
movsb
add
jbe,pn
ja
push
push
and
das
add
lea
dec
sub
out
push
pop
mov
and
shlb
repnz
cmp
mov
inc
addr16
inc
or
sti
or
pusha
shl
lcall
cs
mov
add
jbe
inc
dec
shlb
subb
inc
jb
sub
or
jmp
push
dec
jle
pop
xchg
es
ja
outsb
outsl
arpl
push
ds
je
dec
cmp
adc
je
add
lahf
or
push
scas
jo
lods
int3
cwtl
inc
xor
sbb
xchg
mov
pusha
lcall
inc
lret
mov
push
and
ljmp
jne
jecxz
mov
mov
cmp
call
push
inc
hlt
in
xchg
insl
add
das
aad
cmp
addl
add
or
popf
push
mov
pop
jns
add
inc
push
sti
dec
jne
push
sub
test
ficompl
push
gs
xor
inc
mov
out
clc
mov
xchg
out
movsl
or
ret
cmpl
inc
add
scas
pop
rorl
fsubrl
inc
stos
sub
and
xlat
loope
push
and
js
cwtl
int
push
int3
dec
insl
inc
pop
jle
xchg
xchg
pop
stos
daa
movsb
pop
sub
inc
and
mov
sbb
lock
fsubs
mov
push
add
sti
imul
mov
fldl
or
outsb
mov
int3
sbb
and
xor
lock
push
popa
das
xchg
push
mov
and
in
xor
pop
je
jne
sbb
xchg
or
ret
jmp
in
in
xchg
test
sub
movsl
in
daa
fildll
shll
jae
or
or
inc
jg
gs
fidivs
test
mov
bound
lods
sub
cmp
adc
lcall
int3
cld
arpl
or
daa
inc
cld
sub
fsubr
mov
and
push
jne
sbb
sbb
adc
adc
sahf
sub
stos
mov
dec
sbb
xchg
movsb
inc
pxor
call
pop
cmpsl
inc
xchg
pop
clc
into
inc
xor
sub
adc
out
je
and
ds
mov
je,pn
mov
cmp
xchg
cld
in
shrl
add
hlt
add
or
add
fnstcw
or
add
lret
scas
add
adc
stc
hlt
lfs
xor
pinsrw
into
enter
dec
lea
adc
outsl
pusha
push
mov
dec
add
add
sub
mov
jo
or
mov
pop
cmp
cmpsb
sbb
fadds
jne
mov
mov
in
mov
jnp
mov
push
sbb
jl
sub
cwtl
mov
inc
or
inc
cs
je
push
js
and
adc
sbb
lods
pop
add
test
ret
out
pop
mov
lea
cld
lea
pop
incb
test
out
mov
test
std
dec
or
outsl
cld
bound
test
jge
mov
push
or
mov
mov
rorl
mov
enter
clc
mov
fs
cmpsl
stos
pop
mov
cmpb
daa
jl
sbb
cmpb
iret
or
arpl
pop
add
movsb
mov
stos
jp
push
dec
icebp
das
rorl
or
xor
cmp
pushl
jne
or
cmp
inc
std
mov
jl
sbb
adc
jo
push
lea
jo
pop
xor
or
mov
jo
push
sub
dec
outsb
add
dec
sbbl
outsl
sub
jb
addr16
iret
mov
sub
xchg
and
pop
loope
and
xchg
imul
jmp
or
pop
lock
push
call
shrl
or
xchg
fs
jae
dec
pop
pop
adc
ja
test
popf
cld
fists
or
in
push
lock
clc
xchg
mov
dec
sub
mov
leave
xchg
sbb
xchg
add
push
bound
ds
ja
fmuls
mov
hlt
sub
adc
roll
mov
dec
push
es
mov
sbb
mov
xor
inc
inc
push
push
push
cmp
je
jmp
addr16
pop
xor
inc
je
sub
in
jmp
and
add
mov
add
push
pop
or
or
sub
or
push
push
cmpsl
cwtl
mov
mov
cmpsl
clc
test
push
xor
push
mov
inc
addr16
add
inc
mov
nop
gs
cld
cmpl
setae
or
in
mov
shrl
or
lret
sahf
les
sub
or
xlat
inc
loopne
xlat
add
movsb
xor
decb
ss
dec
add
rcll
lea
ss
les
mov
mov
enter
rcl
pop
adc
ss
mulb
in
mov
cmp
insb
in
mov
nop
ds
pop
sbb
mov
cmp
add
pop
orb
lcall
mov
xchg
adc
leave
xor
andl
call
push
ljmp
sbb
and
icebp
cmp
fldl
pushf
nop
pop
or
pop
xchg
inc
lcall
cmp
xchg
frstor
iret
in
sub
cs
xor
enter
sub
lret
enter
sub
or
pop
js
inc
outsb
scas
inc
mov
push
and
insb
lods
mov
scas
insb
mov
fwait
test
jg
and
xchg
and
jl
lods
push
inc
dec
or
mov
push
mov
mov
loopne
hlt
sbb
mov
push
stos
inc
or
mov
fcmovbe
and
or
fs
mov
jns
and
xorb
adc
mov
jno
xor
mov
lahf
fmull
add
in
mov
add
adc
and
xlat
enter
or
js
sub
andb
scas
fsubrl
pop
out
sarb
add
icebp
pusha
addr16
pop
mov
jp
dec
mov
dec
addr16
ficompl
xor
mov
jb,pt
ror
adc
vandnps
dec
or
inc
jae
cltd
mov
add
add
adc
push
les
mov
dec
bound
xor
and
mov
fsubs
ja
leave
sbb
xor
and
sbb
lock
xchg
lock
or
dec
fbstp
add
mov
pop
subb
xor
inc
sbb
dec
sbb
rcl
inc
and
movb
and
sbb
xor
inc
cmp
scas
cmp
xor
inc
push
pop
flds
dec
cmp
jge
jl
cltd
mov
push
fisttpll
push
xor
shl
dec
testl
inc
sbb
aad
in
inc
xor
xor
repnz
js
test
mov
in
dec
cmp
faddl
and
and
sahf
inc
xchg
or
add
cmpsb
sub
xchg
in
arpl
add
add
add
lea
pop
jge
or
xchg
cmp
push
jmp
sub
adc
and
fcoms
stos
sbb
jne
loope
sub
and
and
loop
roll
dec
call
repz
leave
jb
or
es
movups
push
or
mulb
arpl
push
sbb
stos
addb
pop
inc
daa
cmp
sub
call
mov
jge
xchg
xor
mov
sbb
mov
adc
aad
test
cmp
in
xlat
adc
lods
or
jmp
lock
je
push
add
test
inc
clc
sbb
lods
cmp
arpl
add
test
aaa
lods
movups
mov
adc
cmp
jbe
mov
mov
push
lcall
sahf
sbb
add
or
call
adc
pop
cld
add
push
cmc
arpl
mov
sub
aam
add
adc
or
mov
hlt
hlt
loopne
sbb
bound
stc
mov
fadds
hlt
sbb
sbb
lret
rcrb
fdivs
out
hlt
cs
xor
push
adc
movsl
jns
movsl
js
mov
aaa
push
mov
sub
jb
fcmovne
and
inc
mov
mov
stos
decb
cld
jle
loop
jne
bound
sub
add
test
mov
pop
add
jae
xchg
pop
pushf
ja
fs
add
or
inc
xlat
add
andb
or
in
fldl
out
or
mov
or
call
push
mov
pop
mov
cmp
call
lods
dec
cmpsb
dec
mov
orl
push
dec
idiv
fnsave
cmpsl
mov
imul
pop
mov
divl
shlb
xchg
ret
mov
addr16
aaa
xor
sbb
inc
inc
cmp
xor
sbb
push
imul
add
fcomps
inc
pop
and
and
cmpl
xchg
rorl
add
jne
jmp
push
imul
xchg
shlb
inc
or
jbe
mov
mov
add
xchg
sbb
jne
push
jge
mov
cmpsb
fs
adc
or
xchg
cmp
rclb
test
test
vorps
inc
jb
rorb
mov
sbb
adc
push
and
sbb
cmp
inc
call
prefetchw
or
cld
mov
push
xorl
mov
sbb
enter
test
das
mov
cmp
fmul
pop
fdivrl
ljmp
sub
cmp
fadds
testb
mov
push
insb
nop
xor
hlt
sub
movsb
mov
xchg
int3
and
mov
bswap
mov
movsb
ret
and
enter
fs
adc
jb
subl
les
mov
aas
popa
rolb
shl
and
mov
inc
jns
cld
push
inc
sysret
hlt
mov
pusha
stos
ss
push
mov
clc
or
fdivrl
jo
mov
sarb
negb
push
insl
das
fs
xlat
add
add
fs
add
enter
popa
insl
or
fs
push
dec
shll
femms
and
cmp
int3
mov
jae
sbb
dec
adc
cmpsl
in
push
mov
mov
hlt
getsec
and
pusha
pushf
mov
mov
or
lgs
cld
loop
jge
xchg
psllw
outsl
mov
adc
sarb
mov
rorl
adc
fimuls
divl
inc
inc
sahf
mov
pop
add
shll
stos
pop
js
mov
and
mov
addb
push
nop
mov
js
or
or
mov
jo
je
or
test
outsb
orb
adc
dec
jno
sbb
fiadds
jns
adc
lahf
shlb
inc
imul
push
jo
jb
inc
cmp
popa
sbb
xadd
mov
xchg
popw
stos
adc
sbb
push
mov
and
inc
inc
lea
mov
orb
inc
lahf
add
jne
inc
mov
add
and
push
pop
int3
aad
sbb
rorl
daa
shll
pop
or
insb
add
xchg
push
cmpsl
push
mov
pop
xchg
fsubrs
decb
pxor
inc
add
adc
std
lods
or
sub
lret
mulb
xchg
jmp
jno
sbb
jge
cmp
jne
or
dec
mull
xor
and
fiadds
inc
or
scas
into
push
lea
and
test
add
pop
cmp
in
call
out
add
add
pusha
pop
pop
push
or
or
lcall
xor
xor
mov
push
fadds
push
hlt
iret
rcll
inc
add
or
sub
aad
dec
push
mov
fcoms
pop
ror
daa
cwtl
movl
jno
add
jo
jo
mov
es
push
jo
adc
lods
lods
movsb
mov
adc
popa
ljmp
out
mov
sub
adc
mov
push
into
movb
jbe
pop
inc
sub
or
sti
xchg
xchg
jo
push
sbb
nop
xchg
unpcklps
call
mov
daa
les
push
scas
mov
xchg
dec
fsubs
xchg
ret
loop
xchg
fbld
nop
jmp
or
arpl
push
add
inc
scas
and
mov
or
sbb
xchg
out
inc
mov
jge
sub
sub
pop
ret
incl
ret
adc
jg
inc
decl
shlb
dec
and
cmpsb
fnstenv
push
scas
cld
scas
shrl
fs
pop
inc
push
clc
xor
rcr
inc
incl
fiadds
pushl
inc
and
inc
movsl
jne
push
adc
daa
lea
inc
adc
rorl
stos
push
sub
pushf
or
sti
add
dec
stc
int3
sub
aam
enter
push
pop
sbb
fldpi
sbb
adc
mov
incl
mov
jbe
mov
aaa
std
ret
or
sbb
dec
xchg
adc
cmpsb
pop
jbe
in
ja
cmp
jo
dec
mov
cld
jb
test
mov
in
shll
adc
clc
pop
shll
int3
les
shlb
mov
lods
shll
cmp
sub
xor
das
aam
int3
imul
cmpsb
imul
pop
pop
and
cmpsb
imul
and
fstl
cmpsb
imul
int
out
xor
xor
inc
ja
fs
fwait
xchg
js
sub
and
xor
xor
and
dec
fstps
push
adc
js
xor
cmp
pop
or
nop
data16
or
ja
data16
mov
and
clc
pushf
hlt
sub
je
in
add
lcall
daa
fwait
inc
lcall
xorl
movsb
aam
rcrb
int3
enter
mov
in
imul
js
addr16
dec
jl
mov
pusha
cmpsl
mov
or
imul
rorb
pushf
movsb
adc
fsubl
ja
test
add
popa
lds
dec
test
addb
or
lahf
les
dec
les
leave
enter
mov
sbb
movsb
cmp
add
adc
inc
fs
leave
adcb
test
adc
xchg
popf
dec
xchg
and
repz
add
xchg
push
xchg
and
dec
jbe
or
leave
mov
in
jo
cmp
mov
nop
adcb
lcall
sub
sbb
aas
sti
mov
mov
ret
cmpb
lock
inc
jnp
loope
cltd
inc
test
inc
xor
cmpsl
sbb
iret
mov
push
push
xor
xchg
inc
push
sbb
adc
imul
mov
sub
dec
sub
movsb
sbb
adc
out
xchg
outsl
mov
pop
ret
jb
stos
bound
cmp
or
dec
inc
add
pop
idivb
and
and
inc
or
fcoml
jbe
int
test
xor
or
fld
cld
gs
ficoms
add
and
es
ja
and
sub
add
pop
cltd
add
mov
add
enter
and
jno
stc
sahf
add
jmp
sub
jmp
mov
sti
das
cmpb
cmc
sbb
mov
mov
jmp
sub
mov
filds
test
aam
add
sbb
cld
adc
xor
inc
fmuls
movsl
arpl
icebp
add
outsl
int3
add
pushf
xchg
jb
inc
lret
or
add
dec
fs
dec
adc
inc
lret
push
or
nop
arpl
or
enter
in
and
mov
mov
stos
inc
and
test
push
add
sub
xchg
int3
push
shl
xor
fcoms
jns
add
insb
pop
mov
mov
mov
xchg
addr16
enter
xchg
dec
lods
fdivs
loopne
call
mov
in
clc
rolb
les
jb
and
xor
adc
pusha
sbb
xor
int3
sub
sbb
cmp
movsb
rcrb
in
fcoml
enter
mov
push
mov
js
insb
leave
jns
imul
push
outsl
insb
gs
jne
sahf
add
xlat
sbbb
and
and
add
outsl
je
fs
mov
enter
jne
inc
imul
out
pop
outsl
fs
outsb
dec
jb
xchg
inc
push
pop
outsl
jb
insl
jo
inc
jb
insl
push
je
sbb
negl
rsqrtps
pop
mulb
adc
pop
inc
bnd
in
outsl
insb
je
inc
jns
hlt
push
notb
inc
getsec
movsb
mov
int
cs
int
pop
inc
movsl
xchg
dec
inc
and
add
inc
jmp
mov
sub
jmp
add
add
into
cmp
int3
jne
xchg
into
pop
test
push
shll
ror
dec
out
insl
pop
repnz
mov
lcall
icebp
pop
sub
mov
pop
adc
adc
out
add
push
inc
jne
and
or
sbb
sbb
pusha
adc
adc
add
iret
push
iret
sbbb
inc
pop
push
rclb
mov
or
push
ss
mov
add
outsb
xchg
pop
flds
sbb
sub
inc
add
sbb
in
and
sub
gs
out
add
or
or
shrl
inc
js
add
gs
xchg
test
mov
push
sbb
popa
jns
inc
rcrb
imul
adc
pop
xchg
mov
inc
jb
xchg
js
add
inc
adc
xchg
sbb
inc
dec
jo
lret
fsubrl
mov
mov
arpl
push
outsb
fldenv
fsubrl
sti
pop
arpl
arpl
icebp
inc
pop
arpl
movb
push
adc
sbb
aam
pop
inc
pop
out
adc
popa
shl
inc
jg
iret
sbb
adc
adc
leave
ss
pusha
imul
in
add
and
call
mov
mov
lods
fistpll
or
call
nop
dec
mov
sbb
in
aam
sbb
mov
and
out
fs
dec
enter
add
push
enter
xchg
aad
adc
mov
int3
and
inc
pop
lcall
jb
shl
push
push
nop
inc
adc
dec
add
ljmp
add
jg
leave
add
push
popa
daa
adc
into
inc
inc
jo
mov
rcrb
and
je
push
or
flds
sub
nop
fcmovne
dec
adc
dec
cmp
add
pop
mov
or
or
add
shlb
es
clc
mov
out
mov
mov
mov
clc
xor
and
lock
shr
mov
mov
mov
imul
lea
jbe
xor
jnp
xchg
loopne
loopne
dec
inc
pop
loope
jmp
icebp
mov
enter
mov
int3
or
dec
les
lret
mov
fcomp
enter
std
add
fcoml
cwtl
call
daa
inc
fadds
mov
loopne
or
adc
dec
inc
add
mov
inc
jmp
push
mov
sarl
or
push
ret
mov
pop
adcb
lds
jmp
jb
daa
mov
adc
daa
nop
pop
pop
rcr
fmuls
add
fisttps
push
roll
sarl
aam
push
setg
dec
ret
add
jge
ja
xor
xor
test
and
mov
cmp
out
testb
pushf
dec
jne
pushf
xchg
add
dec
sbb
mov
mov
rolb
outsb
pop
leave
or
shl
shll
call
or
or
add
and
mov
inc
mov
xor
inc
adc
arpl
lcall
xchg
or
inc
je
and
mov
fwait
lods
add
jmp
adc
fidivs
movzwl
lock
add
pop
imul
lea
das
mov
call
push
je
inc
add
fwait
or
hlt
adc
pop
lods
inc
pop
cwtl
std
cmp
inc
seto
mov
and
inc
inc
fsubs
push
xchg
movsb
or
scas
adc
repz
and
scas
enter
sub
pusha
outsl
fs
test
fisttpll
push
or
pop
push
ss
or
mov
sub
xchg
and
push
mov
adc
or
incb
jne
aam
inc
or
xchg
mov
inc
adc
mov
xchg
xor
notl
stc
and
fs
jge
add
lret
in
adcl
add
and
or
sub
mov
mov
loopne
push
mov
sbb
jae
fmull
inc
xor
sbb
fwait
add
xchg
or
or
lret
pop
mov
push
xchg
or
fsubr
call
or
add
jge
dec
je
outsb
mov
popa
ss
loopne
mov
and
pop
sub
out
sbb
lret
js
in
sub
inc
call
leave
test
cmp
xor
call
push
fs
cli
jmp
push
add
nop
das
es
mov
into
cwtl
faddl
sub
xchg
add
dec
xchg
imul
lock
leave
clc
jns
pop
add
or
clc
bnd
add
mov
sahf
es
jb
cs
add
mov
call
movsb
imul
pusha
or
add
sbb
sbb
or
sti
inc
xor
mul
cmp
je
lods
and
mov
jne
mov
jecxz
add
insb
test
fiaddl
shrl
out
sbb
mov
dec
rclb
sub
pop
jb
insl
test
or
or
subl
stos
xchg
sbb
add
pop
leave
xchg
arpl
daa
insb
dec
push
mov
addb
mov
cmp
in
je
and
inc
std
adc
push
jae
es
fwait
bound
fnstcw
lcall
inc
call
add
push
dec
or
or
psubsb
mov
cmp
arpl
push
mov
or
rcr
mov
push
and
add
fdivl
lea
clc
lcall
add
stos
push
cmp
xchg
es
mov
ja
sbb
ficomps
inc
adcb
sub
fiadds
loope
ja
xchg
xchg
rcrl
ret
sbb
adc
rol
stos
and
das
aas
cltd
mov
shlb
or
insl
mov
sub
inc
lock
cmpb
fsts
mov
xchg
jp
fmuls
sbb
in
or
fwait
nop
fld
and
lcall
push
jo
push
sbb
out
xor
add
adc
xchg
aad
mov
or
add
sbb
bound
movsl
mov
jbe
mov
cmp
in
pusha
invd
in
xlat
jl
adc
add
xor
mov
mov
sti
or
cltd
sub
adc
pop
loope
fadd
xchg
fcomp
movswl
sbb
sbb
test
and
fsts
add
cmp
fsubrl
jbe
and
sbb
lock
jae
add
xchg
jge
fcompl
iret
adc
cmp
call
mov
mov
mov
shll
dec
sbb
sub
movsbl
fdivl
xchg
xor
aam
add
push
adc
ror
push
cmp
sbb
cmp
repz
arpl
rclb
sub
inc
repz
je
dec
je
jmp
push
pop
dec
push
fwait
adc
fadd
enter
and
test
ja
push
mov
add
mov
push
cld
mov
lcall
pushf
in
cltd
insb
rcrb
or
lret
lret
scas
out
add
and
sbb
add
or
sbb
flds
cmp
xchg
and
mov
ss
push
and
nop
inc
mov
lods
jne
fsubs
lods
push
pop
gs
sti
add
mov
mov
dec
test
ljmp
mov
nop
inc
mov
enter
add
pop
jbe
sarl
jmp
rclb
dec
push
jmp
insb
xchg
lea
dec
nop
nop
and
jne
je
daa
daa
ret
inc
lds
orb
mov
out
mov
push
es
test
xchg
add
adc
in
xor
in
enter
or
mov
fldenv
jmp
in
adc
cwtl
out
repz
add
call
fsub
sbb
loopne
xchg
outsl
fs
loopne
fcoms
xor
jo
mov
call
xor
mov
loopne
loopne
das
nop
out
call
xchg
sbb
add
and
shll
sub
jmp
fnstenvs
ljmp
sub
inc
jb
sbb
shll
adc
nop
int
std
ljmp
mov
mov
mov
sbb
or
mov
and
and
and
nop
or
cmp
xchg
lods
and
sbb
sbb
mov
push
lods
in
subb
in
adc
sbb
jecxz
adc
fadds
adc
sbb
fs
sbb
aam
fmul
inc
adc
cs
pusha
cmpsb
pop
mov
dec
or
cmp
add
leave
inc
sahf
enter
xor
mov
cmp
add
jmp
in
sub
imul
cltd
insb
rorb
insb
adc
stc
add
in
xor
adc
inc
loop
cwtl
les
adc
in
rcrb
mov
mov
sbb
and
mov
dec
or
and
notb
test
and
mov
lods
adc
adc
lods
dec
test
test
and
ljmp
and
cs
cmp
ret
cmp
inc
nop
pushf
adc
sbb
fsub
and
dec
xchg
dec
xchg
adc
adc
sbb
sub
cmc
xor
mov
addl
cwtl
mov
dec
loop
mov
sbb
adc
inc
cmp
push
sbb
jb
movsb
hlt
push
or
in
loop
pop
movsb
push
insl
jo
adc
jne
in
out
fisttpl
or
popa
adc
mov
int
pop
mov
jbe
dec
addr16
push
pop
insb
jg
fldenv
cmove
bound
jne
addb
arpl
push
and
nop
push
and
dec
test
pop
mov
andb
setg
mov
push
outsb
imul
jle
outsl
ja
arpl
pop
jae
gs
and
inc
out
pop
je
mov
inc
jns
push
outsl
jb
cwtl
test
sub
fstpl
mov
andb
xor
ret
loop
int3
or
out
ficoms
xchg
push
sti
mov
ja
insb
push
insl
xor
fcom
mov
fcomps
jle
mov
out
push
ss
addb
sub
or
jmp
lea
lret
repnz
out
rorb
xchg
cld
jl
xor
or
lar
xor
xchg
add
adc
out
xor
mov
mov
fs
in
mov
ret
adc
test
je
mov
sbb
inc
push
inc
rclb
shlb
sub
xchg
or
and
cmc
cmc
movl
cmp
mov
out
push
gs
mov
out
add
inc
mov
mov
pop
pop
icebp
inc
xor
add
xor
mov
xchg
mov
aam
inc
jbe
pop
in
hlt
push
mov
add
push
nop
pop
push
mov
fyl2x
inc
or
insb
dec
sbbl
rorb
and
out
and
enter
add
fadd
fsub
cmp
inc
repnz
shlb
or
sbb
mov
sbb
adc
or
aam
dec
shll
jmp
inc
aad
sbb
cwtl
iret
add
mov
push
jge
insl
rcrb
add
pop
jl
adc
rol
mov
xor
mov
or
lods
pusha
inc
mov
push
push
jmp
xor
xor
std
lea
add
add
inc
xor
jno
or
int3
pop
mov
mov
pusha
enter
pop
sbb
inc
stos
outsl
xor
sub
jle
repz
jne
dec
sbb
add
loope
add
jl
stos
mov
roll
jns
in
add
pop
repz
pop
push
jae
inc
popf
cmovne
or
int3
lds
mov
pop
or
loope
push
add
sub
add
or
sbb
mov
pop
enter
call
or
pop
enter
or
lods
inc
stos
adc
lock
mov
add
in
es
push
ljmp
and
in
adc
hlt
popa
and
cmp
pushf
or
dec
cmp
setg
es
mov
test
gs
in
jne
jo
and
daa
adc
inc
sub
mov
scas
push
xchg
dec
dec
lahf
je
and
jne
push
icebp
and
adcl
dec
push
jmp
xchg
adc
lret
jo
dec
cmc
pushf
in
push
fucomip
cmc
sbb
jns
loope
mov
shlb
push
mov
mov
shll
sbb
fucomi
out
enter
cmp
or
ja
ficomps
sahf
daa
fists
loopne
call
inc
sbb
mov
add
cmc
sbb
and
cmp
sbb
cmp
or
enter
scas
or
enter
xchg
xor
and
sbb
or
lahf
mov
cmp
cmp
inc
push
add
cmpsl
jmp
cmp
sbb
daa
inc
testl
lcall
push
mov
dec
notl
cmpl
in
xor
daa
xchg
or
fdiv
fdiv
push
push
add
fnsave
out
xor
nop
and
adc
pop
mov
pop
or
xchg
pop
xchg
xchg
call
or
mov
lock
lock
mov
jo
pop
add
stc
adc
push
xor
jb
jb
mov
mov
pop
add
or
sbb
ds
clc
push
clc
fmuls
pop
nop
add
push
cli
mov
outsb
sub
enter
test
insb
inc
lea
pop
add
or
pop
or
test
adc
add
ja
pop
sub
jecxz
lret
inc
cmc
push
cmpsb
sub
leave
arpl
add
fbld
pop
pop
and
add
wrmsr
or
or
add
fmuls
or
lret
insb
add
add
inc
ret
pop
shlb
mov
xchg
fdivl
push
lret
arpl
adc
adc
inc
insb
popa
sbb
sub
outsl
js
fisttpl
dec
mov
pop
fs
jo
jb
mov
das
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
pop
insb
jnp
pop
clc
ret
js
cwtl
in
leave
add
add
shll
or
or
mov
sub
adc
insb
lret
gs
add
xchg
cld
push
test
inc
mov
imul
add
aaa
mov
jl
jo
adc
js
mov
adc
adc
sub
pop
xlat
add
mov
jno
pcmpeqb
movsl
or
pop
mov
nop
xlat
pop
push
cmc
dec
cld
inc
push
fldcw
push
or
nop
and
aas
insl
and
movsb
or
xchg
xadd
das
lods
cld
into
mov
mov
lsl
lock
fs
xchg
lret
in
das
mov
and
push
insb
mov
adc
add
sbb
dec
adc
mov
cwtl
sbb
scas
pop
mov
sbb
cmp
pop
fdivs
adcl
lret
sub
inc
jp
jae
lcall
das
arpl
jge
pusha
jecxz
add
mov
fsubrs
and
xchg
or
xor
data16
and
sbb
sub
out
fadds
or
mov
sub
in
adc
pop
ja
decl
mov
mov
and
lcall
push
push
push
dec
decb
push
fcoml
jns
adc
pop
adc
xchg
mov
or
inc
push
leave
in
push
pcmpeqw
sbb
mov
add
pop
and
sbb
or
xchg
stc
mov
fdiv
nop
sbb
addr16
lds
add
push
fdivr
or
xchg
or
push
rcrb
add
mov
xor
ret
leave
rorb
sbb
in
addb
add
enter
inc
lods
mov
sub
arpl
andb
dec
addb
loope
jg
push
sub
aas
jno
and
addr16
test
icebp
fcompl
fcoml
cmp
or
nop
add
add
adc
mov
mov
xor
lea
push
shlb
and
add
inc
or
out
push
sbb
or
pop
aas
cmp
fsubl
in
jbe
inc
adc
sahf
add
lea
fcomip
push
jl
inc
xor
or
loope
jnp
dec
jne
xchg
stos
dec
add
and
in
add
mov
or
loope
or
pop
pop
sti
es
aad
cltd
mov
mov
pop
ret
and
lret
jne
js
mov
lcall
inc
sbb
lcall
mov
pop
inc
je
pop
sbb
push
pusha
lcall
push
pop
mov
add
dec
or
or
ror
push
cwtl
inc
pop
jecxz
movups
add
hlt
jl
pushf
xchg
adc
mov
lods
mov
out
jne
or
mov
lea
scas
arpl
negb
mov
cld
mov
jmp
adc
jne
adc
sub
sti
std
inc
mov
ljmp
adc
inc
sti
dec
imul
cmp
mov
sbb
adc
pusha
adc
mov
jmp
mov
cmp
jne
sbb
push
loop
fnstsw
test
or
leave
mov
adc
pop
sbbb
or
call
add
mov
adc
sbb
out
imulb
call
ds
decl
jno
jge
sub
mov
mov
loope
lea
add
je
mov
adc
mov
inc
add
loopne
popf
push
icebp
iret
dec
xor
jns
rclb
or
outsb
inc
lods
pusha
lret
pop
add
mov
popa
dec
jmp
add
or
or
push
ljmp
aad
xor
adc
xchg
mov
shl
ret
das
add
mov
add
mov
sahf
lret
frstor
add
adc
cli
mov
adc
mov
lods
or
add
mov
dec
pop
jbe
mov
shr
cmp
cmp
or
cmp
adc
push
or
xchg
cs
fwait
mov
cmp
mov
pushf
loopne
inc
mov
jecxz
and
xchg
inc
loope
pop
fxch
cs
cmp
ja
jb
jo
loope
lret
jle
mov
andb
add
mov
test
add
scas
jmp
sub
jg
dec
dec
movsl
dec
lock
shll
dec
pusha
test
add
pop
jae
push
or
mov
inc
sub
test
sub
and
push
cmp
or
cmp
pop
inc
xchg
inc
xorl
in
sbb
mov
andl
add
test
inc
jne
comiss
push
int3
into
ret
add
adc
xchg
xchg
inc
jo
xchg
sbb
mov
cmp
add
adcl
fnstcw
dec
aaa
or
outsl
xchg
add
xor
es
xchg
and
aas
mov
xchg
sbb
popf
into
or
sbb
inc
popf
data16
fistl
in
xchg
or
pusha
lret
push
lock
sbb
into
leave
add
adc
lock
or
lds
and
aad
inc
loop
inc
lret
add
add
push
sub
fld
xchg
or
fadd
xlat
aaa
mov
sub
mov
rorl
add
fs
mov
add
aaa
cmp
pushf
in
and
or
nop
or
push
int3
test
cmpsl
jo
orb
das
stc
roll
cld
stc
aam
or
leave
dec
insb
adc
int
push
push
pop
pusha
mov
shrb
ja
mov
out
push
iret
dec
popa
and
sbb
inc
ljmp
outsl
leave
sbb
movsl
or
jno
and
std
insb
adc
sbb
sub
lcall
push
or
or
add
pop
sbb
cmp
xchg
sub
into
or
hlt
mov
pop
pop
ss
add
mov
xor
out
or
mov
fs
pop
lret
mov
or
pop
push
scas
test
gs
add
xchg
jge
inc
lods
imul
iret
lods
sub
mov
cltd
cmp
fisubs
adc
jo
sub
negb
mov
clc
push
cmp
xor
jmp
adc
aad
inc
cs
pop
ret
clc
or
jnp
arpl
push
or
xchg
sbb
test
mov
inc
jne
in
mov
nop
or
mov
sahf
arpl
mov
pop
in
lock
or
and
aad
jg
sbb
cld
lcall
sbb
sub
mov
insb
push
xor
subb
lock
das
in
jmp
hlt
hlt
push
in
pop
cmp
jl
rcll
pop
test
push
fmull
inc
add
movsb
adc
cmp
mov
in
pop
add
adc
and
inc
ret
es
xchg
hlt
pop
call
push
rclb
adcb
jb
fidivs
add
fwait
pop
push
adc
add
adc
imul
push
and
jo
ljmp
or
clc
and
aad
and
cmp
pop
adc
push
xchg
inc
inc
jnp
dec
xor
out
dec
inc
mov
add
adc
cltd
sbb
push
pop
adc
adc
je
add
mov
loopne
iret
adc
mov
inc
adc
mov
xchg
call
xor
cmp
stos
int
dec
sub
es
loopne
scas
mulb
fisttpl
in
clc
add
ljmp
stos
test
adc
mov
mov
in
dec
pop
call
push
dec
call
fcoms
leave
xchg
jne
mov
sbb
insb
jae
jp
adc
mov
and
adcb
dec
and
mov
mov
sub
clc
hlt
aas
xchg
dec
mov
pop
adc
or
imul
imul
xchg
adc
repnz
in
nop
cmp
dec
ror
outsl
push
xchg
jb
pop
mov
push
rolb
aam
rolb
push
scas
inc
adcb
sub
and
orl
xchg
and
movl
ud0
jbe
inc
adc
loop
adc
xor
jecxz
xchg
inc
inc
rcrl
inc
jg
dec
adc
adc
call
aam
jo
and
mov
movsl
xor
nop
insl
or
and
loope
addb
push
sbb
pop
jl
mov
adc
hlt
mov
xchg
jae
es
fs
adc
pop
popf
nop
sub
pop
mov
mov
in
andl
lock
cmp
lock
into
push
or
pop
addr16
push
mov
or
call
sub
inc
test
das
xorl
add
xor
adc
clc
mov
dec
jb
add
cmp
pop
adc
and
push
mov
popf
sbb
dec
push
inc
lock
inc
inc
dec
sub
cmp
or
jne
sub
sbbb
add
push
add
ja
js
pop
pop
iret
push
ljmp
shlb
cmp
push
cmp
jecxz
inc
dec
inc
push
sti
xchg
pusha
sbb
push
push
dec
dec
xchg
push
js
push
push
lds
out
xor
in
push
xor
jbe
push
mov
adc
sbbb
hlt
push
adc
pop
xchg
out
orl
lea
sub
mov
or
repz
or
xchg
push
inc
xchg
inc
ja
xor
sub
sbbl
mov
add
cmp
inc
test
lahf
sbb
inc
jecxz
subl
adc
sti
dec
mov
je
add
gs
cmpl
sti
and
cmpb
jne
add
test
ret
sbb
sbb
daa
out
test
and
test
ret
push
pop
mov
sbb
add
and
test
lds
push
iret
add
arpl
xor
testb
cmp
pop
jbe
pop
inc
push
cmp
jne
testb
orb
or
fimull
xchg
outsl
imul
pop
sub
aam
add
movsb
mov
or
dec
fs
je
adc
lock
sub
fisubrl
jnp
mov
pop
loope
or
into
call
xor
jne
mov
or
push
add
fisubrl
mov
or
sub
jno
pop
add
sti
nop
dec
stos
mov
xchg
jmp
push
cmp
add
andb
imul
and
cmp
shll
cltd
in
mov
and
sub
lret
push
sub
xor
pop
fsubr
cmp
dec
adc
inc
data16
bnd
sub
sub
jns
push
lea
cmp
jmp
outsl
mov
push
mov
and
add
shl
or
imul
xchg
outsb
test
xchg
rorb
repnz
dec
inc
sub
add
adc
mov
jle
inc
cmpsb
call
push
pop
sbb
dec
js
call
pop
add
das
and
adc
xchg
lcall
inc
fildl
cmp
sarb
pop
add
adc
call
scas
ret
fbstp
add
sbb
mov
subb
add
test
repz
sub
push
jl
xor
mov
arpl
mov
cmpl
repnz
xor
sbb
and
test
insl
mov
push
mov
inc
push
stc
repnz
movb
mov
jbe
push
pop
inc
adc
jecxz
rorl
push
mov
in
add
sbb
les
jnp
and
push
pop
movsb
jecxz
ss
je
in
and
es
mov
insl
mov
lret
dec
xchg
test
push
add
mov
jne
sbb
loope
ret
sbb
or
dec
xchg
scas
sbb
push
ret
mov
mov
mov
sar
incl
jns
int
dec
or
pusha
and
test
jb
or
push
mov
sub
inc
mov
add
dec
jae
xor
sbbl
aam
mov
dec
hlt
fsubl
and
fistl
and
mov
or
push
mov
inc
dec
and
add
jle
in
insl
call
or
jl
mov
stos
push
mov
mov
sbb
loope
sub
mov
ror
adc
pop
lret
add
sub
and
xchg
and
sub
add
stos
jmp
and
dec
rcll
imul
push
daa
pop
sub
xchg
xorl
mov
inc
jbe
jmp
pusha
cmp
add
pop
pop
lahf
cmpsb
fldenv
pop
jae
ret
and
pop
jbe
dec
icebp
adc
cmp
add
xor
add
sbb
jge
mov
or
pop
jmp
jl
adc
inc
fildl
and
or
push
jle
rcrl
das
push
push
icebp
push
mov
dec
sub
les
fildl
inc
test
add
inc
xchg
mov
addl
and
mov
lea
in
enter
orl
push
or
sub
cmp
add
push
nop
push
mov
pop
sbb
xchg
xchg
mov
imul
push
mov
iret
add
xchg
cmp
jmp
nop
test
lret
xchg
adc
inc
test
or
movsl
push
add
sbb
xchg
lret
cs
add
rclb
pop
dec
sbb
xchg
or
push
cld
fstps
fs
popf
mov
sub
addr16
cmp
icebp
push
xor
pusha
punpckhbw
pusha
cmpl
push
push
rclb
insb
mov
popa
push
sbb
mov
sub
push
push
adc
sbb
cmp
loop
test
lea
ljmp
dec
mov
call
in
icebp
mov
nop
pop
adc
cmpw
les
faddp
pmuludq
test
push
push
les
js
add
inc
xchg
and
dec
push
out
sbb
in
add
jle
nop
fs
pop
push
cmp
mov
je
loop
clc
jmp
mov
js
fs
in
jge
fs
fmull
ja
movsb
addb
sub
xor
mov
or
inc
addl
sbb
decl
mov
mov
adc
cmp
mov
test
mov
arpl
xchg
pop
stos
inc
pop
mov
scas
orb
or
sbb
or
add
add
sub
daa
int
scas
cmp
es
jae
push
out
daa
pop
adc
shll
jns
mov
cmpl
dec
ss
aas
xor
lcall
cmp
pop
sbb
cmp
cli
mov
addr16
adc
pop
xchg
pop
mov
test
insb
cltd
adcl
push
adc
ljmp
mov
mov
inc
ja
mov
inc
lock
cmp
jb
mov
push
sub
mov
or
jno
ficompl
les
mov
mov
rcrl
pop
ret
or
xchg
fadds
or
push
push
push
jo
xchg
adc
cmpsb
stos
fldt
hlt
test
inc
sbb
jnp
pop
sub
pop
lods
or
sbb
xchg
andl
movsb
dec
push
ret
mov
hlt
ja
and
pop
inc
mov
daa
sub
pop
or
xchg
sub
inc
add
add
adc
xor
and
clc
jmp
cld
sub
mov
push
add
jmp
sbb
adc
in
jmp
adc
inc
andl
push
or
and
xor
cmp
flds
or
pop
movaps
push
push
hlt
adcl
inc
xor
ud2
fnstenv
add
pop
test
cmp
or
leave
cmpsb
sarb
xchg
sbb
int3
add
jle
movsl
rorl
inc
xchg
xchg
sub
sub
daa
jno
dec
push
aad
dec
mov
idivl
insb
sub
cmp
movsb
fs
repnz
ljmp
ret
cld
mov
add
subl
xchg
out
or
pop
sub
sbb
pusha
xchg
repz
nop
out
imul
adc
mov
push
cmp
add
sub
jae
pop
mov
sbb
or
dec
push
xor
scas
aad
mov
and
xchg
lds
sub
scas
movsl
and
pop
enter
aaa
enter
adc
movsl
and
xor
and
cmp
dec
pop
xlat
xor
shrl
mov
fsubrs
push
jno
pop
or
fs
into
or
add
rorl
or
fistpll
xor
arpl
mov
adc
pusha
in
jmp
pop
pop
push
or
pop
testb
push
jmp
mov
leave
jbe
sub
sbb
bound
or
andb
bnd
xchg
popa
js
jns
sub
sub
sub
cli
push
xor
test
jle
jp
fwait
sub
jle
or
mov
jnp
jmp
jmp
in
xlat
stc
jbe
xor
add
add
sub
add
and
mov
push
mov
leave
mov
inc
dec
pop
popa
push
addl
arpl
sbb
pop
lahf
push
cmc
xor
ss
je
pop
add
cltd
sub
cmp
push
sub
or
dec
loop
fnstcw
jg
mov
aaa
cs
jb
jmp
mov
push
add
push
dec
cmp
jne
add
test
or
xor
mov
push
push
lock
xor
push
sub
cld
cmp
inc
popf
sub
sub
test
lock
int3
mov
in
and
or
sub
push
sub
inc
pop
insl
sub
mov
lcall
push
out
mov
mov
enter
repz
inc
inc
jae
jge
and
nop
adc
cmc
fwait
adcb
test
fmull
mov
mov
cmpb
sbb
dec
leave
jle
dec
dec
insb
mov
mov
pop
enter
sub
fwait
rclb
subl
out
push
popa
xchg
pop
dec
testb
dec
inc
jno
sub
jb
movsl
bound
aam
test
int3
repnz
mov
mov
clc
or
push
adc
xchg
js
and
int3
inc
sub
mov
std
cmpl
das
inc
jl
pop
out
adc
add
push
inc
outsl
insb
outsl
jb
addb
into
and
sub
or
inc
outsl
xchg
roll
cli
jb
gs
and
inc
push
ja
das
cmp
jle
das
inc
add
jae
jne
arpl
popa
outsb
popa
addr16
xchg
add
jmp
mov
and
push
lret
cmp
and
das
pop
add
insb
popa
arpl
adc
outsl
setnp
or
and
xchg
mov
lar
je
insb
mov
aas
inc
dec
popa
jbe
add
jb
insb
mov
xchg
popf
and
insb
rcpps
in
fsubs
push
imul
mov
das
fs
dec
imul
mulps
insb
outsl
ja
jne
or
inc
push
or
arpl
imul
jno
adc
push
push
into
cs
add
gs
add
add
sti
push
imul
fwait
mov
jmp
insl
and
fisubrl
xor
sbb
arpl
cmp
fildll
out
pop
cmovae
sbbl
mov
aad
xor
inc
or
fs
std
sub
outsb
inc
sub
dec
imul
add
push
test
aas
sahf
fsubrs
js
xlat
or
aas
or
inc
gs
jne
pop
xchg
xor
imul
mulb
fldcw
sbb
or
enter
adc
sub
mov
push
aas
dec
outsl
je
jmp
jb
test
jns
adc
adc
test
or
outsw
inc
xor
xor
jnp
adc
jb
outsb
jne
or
mov
ret
iret
adc
or
adc
xchg
dec
dec
xchg
pop
mov
cmp
arpl
push
and
inc
inc
imul
pusha
pop
fsubs
imul
or
sarl
adcb
das
jp
insl
loop
insl
push
push
push
iret
loopne
mov
fwait
psubb
ret
into
hlt
loopne
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
jg
pop
inc
inc
inc
inc
push
dec
push
sbb
pop
mov
pop
push
pop
dec
inc
dec
dec
xor
dec
inc
inc
pusha
pushl
popa
sub
dec
dec
inc
push
dec
dec
push
pop
ret
xchg
jge
adc
inc
push
dec
out
jg
fisttpl
adc
ja
inc
xor
xor
mov
ja
adc
dec
inc
adc
or
dec
flds
dec
inc
push
inc
inc
dec
fistpl
xchg
call
dec
dec
push
dec
dec
inc
xor
imul
pop
push
xchg
dec
inc
pop
cld
in
inc
inc
dec
push
pop
push
push
push
jle
pop
sub
imul
sti
dec
adc
push
push
inc
xchg
dec
push
inc
loope
stc
dec
push
dec
inc
dec
push
mov
test
shrl
mov
add
sbb
aaa
dec
ficoms
test
add
xchg
out
and
add
add
shll
sub
iret
add
sbb
enter
cmp
sbb
je
movl
add
int3
jne
nop
push
sbb
dec
inc
into
pop
pop
mov
or
aad
sub
outsb
inc
mov
or
dec
lds
shl
arpl
mov
add
fistps
jae
sbb
dec
ret
mov
or
xor
sbb
mov
xchg
mov
inc
fiaddl
add
movsb
lcall
enter
cmp
fildl
jmp
add
popa
add
jnp
mov
add
mov
enter
push
mov
and
aaa
adc
cmp
mov
inc
xor
add
call
xor
jne
mov
xchg
xchg
cmp
or
sbb
mov
inc
adc
popa
in
push
xchg
call
and
dec
inc
mov
jl
in
rolb
rolb
enter
pop
xchg
inc
lahf
lock
rcr
dec
xor
jb
daa
jge
mov
adc
mov
cmp
insb
pop
push
lds
or
mov
rolb
jmp
adc
lock
add
or
mov
es
call
xchg
xchg
in
lock
cmp
popl
shrl
dec
add
inc
push
or
adc
mov
aad
fcoml
mov
pusha
pushf
ljmp
push
out
jbe
pop
xchg
xor
cmp
cmpsl
mov
dec
xchg
mov
dec
and
jae
or
daa
cmp
sub
jae
and
out
cwtl
sbb
dec
and
lods
nop
cmp
loopne
xchg
test
xchg
sbb
mov
dec
js
icebp
ja
mov
mov
mov
shlb
inc
or
je
mov
mov
push
clc
or
pop
inc
mov
add
push
add
and
sbb
pop
sub
das
cmpsl
sub
stos
xor
stos
inc
jge
sbb
cmpsb
inc
sbb
add
arpl
incb
adc
cltd
lea
sub
jg
lock
not
and
sbb
loopne
mov
je
mov
andb
inc
jg
mov
mov
add
cs
jnp
jb
add
add
xor
pop
mov
add
mov
mov
repnz
xor
fs
cmp
rcrb
and
xor
sub
adc
or
cmp
in
or
insb
and
movsb
ja
push
push
push
dec
pop
cmp
and
add
clc
sti
movw
or
call
inc
sbb
xorb
push
repnz
stos
lods
cmp
insl
add
jno
in
sti
out
mov
popf
mov
push
shlb
lock
mov
dec
pop
or
nop
in
or
and
test
mov
out
pop
push
sbb
xor
push
xor
jae
or
jnp
sbb
mov
enter
shrl
clc
sub
dec
hlt
mov
push
ret
jle
ds
add
jl
pop
lock
add
add
add
out
sub
stc
xchg
call
jo,pn
cld
into
leave
xchg
inc
ds
inc
xchg
mov
dec
xchg
pushl
and
insl
mov
adc
or
mov
add
or
lds
mov
inc
pop
fbstp
bound
push
or
pusha
loop
ss
adc
jl
inc
push
add
dec
sub
and
ss
mov
mov
and
jns
stos
arpl
xor
mov
inc
loopne
jnp
xlat
mov
mov
jmp
mov
xchg
enter
outsl
lods
scas
jnp
je
scas
adc
aaa
mov
add
pop
and
push
push
icebp
ds
push
les
adc
mov
iret
adc
mov
js
fidivrl
das
dec
pop
int3
jge
std
sub
jne
mov
movsl
add
push
out
add
add
aas
jb
subb
subl
lret
xchg
mov
mov
fcoml
int3
add
inc
adc
or
push
push
mov
add
mov
inc
or
fsubrl
mov
data16
outsl
mov
out
dec
mov
leave
and
inc
dec
movb
inc
xor
mov
subl
jbe
sub
xor
dec
inc
sbb
jne
xchg
add
fldenv
test
loop
add
fnsave
jbe
jae
les
fldenv
or
aam
cmp
push
adc
cmpb
fcoml
push
add
jae
mov
adc
inc
ret
sahf
mov
in
sti
das
adc
cmp
call
push
or
int
jae
or
inc
xorl
cli
js
cwtl
cmp
mov
and
stc
testl
adc
jbe
add
add
lds
pop
mov
jle
fcoms
push
mov
jl
rcrl
adc
mov
aas
ss
rclb
xchg
shr
mov
lock
or
and
aad
aaa
cmp
and
xor
fbld
orb
sub
sub
jmp
int
sbb
dec
hlt
sbb
nop
jbe
pop
adc
dec
in
je
inc
sub
pop
mov
push
push
adc
inc
and
inc
pop
and
mov
add
mov
lcall
dec
and
es
and
ret
jg
int3
mov
add
sbb
addl
js
pop
fmuls
adcl
adc
push
inc
dec
ret
test
rolb
jge
insl
sub
test
inc
xchg
stos
lret
ret
cld
push
ret
sbbb
daa
xchg
ret
and
xchg
push
adc
ret
inc
xchg
pop
aam
stos
gs
addr16
push
add
test
sub
mov
test
enter
or
lods
mov
pop
xchg
jl
das
dec
aaa
sub
add
add
dec
adc
mov
xor
scas
xor
shrl
pop
push
or
dec
pop
cmp
in
push
sub
sti
outsl
mov
arpl
in
add
mov
xchg
and
imul
mov
fs
and
mov
stos
push
cmp
mov
add
pop
js
scas
inc
test
outsl
add
sub
inc
in
xor
or
subb
add
test
gs
dec
add
xor
sub
dec
inc
mov
adc
and
jnp
adc
lahf
jmp
mov
ror
pop
add
loopne
mov
or
pop
shrl
add
pop
cmp
pusha
push
xor
data16
cmp
repnz
or
jb
dec
scas
rclb
jb
insl
shlb
pop
add
pop
les
sub
in
pusha
sub
bound
mov
adc
add
mov
cs
ret
fmul
test
cmc
sub
sub
hlt
or
idiv
test
add
xor
dec
or
cmp
sub
sub
or
in
adc
xchg
add
inc
outsl
or
mov
cld
mov
dec
lods
mov
gs
sbb
add
push
add
in
mov
inc
and
jl
or
ds
pop
mull
push
jge
div
mov
movzwl
mov
xor
mov
or
ret
jb
dec
jne
pop
add
je
jno
cmpl
jl
bound
sbb
or
leave
push
and
or
inc
push
fsubs
jne
jl
mov
push
xchg
ljmp
popa
std
inc
rorl
sub
push
sbbb
cmp
repnz
xor
mov
mov
add
add
inc
jo
and
rorb
adc
pop
ss
push
adc
mov
xor
fucomp
test
add
adc
test
inc
out
push
cmp
add
add
mov
cmp
in
subl
pop
and
lahf
enter
mov
adc
mov
or
out
and
mov
mov
test
pop
nop
dec
push
fs
cmp
enter
mov
xor
orl
inc
xor
orb
mov
sbb
ret
or
push
mov
mov
stos
bound
cmp
or
iret
lock
cld
mov
or
push
aam
push
adc
aam
cmc
cmp
sbb
push
enter
mov
clc
pop
mov
or
mov
sbb
inc
pop
aam
pop
sbb
mov
int3
dec
movsb
aam
dec
xor
mov
dec
pop
mov
mov
mov
push
neg
lahf
rorl
mov
jae
and
ljmp
add
hlt
or
cvtdq2ps
xchg
add
fcom
outsb
sub
fmuls
dec
mov
and
xchg
int3
in
push
and
mov
jle
rolb
adc
add
sub
xor
lret
xchg
scas
es
jnp
xlat
leave
enter
adc
mov
mov
add
mov
or
jle
adc
fwait
mov
sbb
clc
les
iret
xchg
xor
clc
xor
int
push
loopne
sarb
xor
sub
inc
loopne
jg
add
jo
mov
jns
insb
mov
mov
xchg
inc
in
js
aaa
jge
mov
push
cmp
add
mov
dec
ljmp
pushf
es
dec
in
imul
movzwl
dec
jge
mov
leave
and
push
shrb
xorb
push
xor
mov
push
or
and
js
mov
adc
insb
or
mov
push
dec
cmp
mov
and
mov
addl
lods
jge
addr16
sbb
or
or
lods
test
xchg
mov
js
stos
jae
icebp
xchg
mov
or
addr16
adc
add
leave
and
mov
repnz
and
and
and
mov
test
icebp
xchg
outsl
xchg
fldt
dec
shll
ljmp
and
enter
shrl
mov
dec
repnz
push
movsb
mov
repnz
adc
mov
xchg
pop
mov
push
push
les
mov
rorl
decb
and
jns
je
arpl
cmp
in
leave
add
sub
mov
orb
nop
add
xor
xor
sbb
add
nop
aaa
cmp
mov
sub
bound
inc
jne
inc
jns
ljmp
js
pop
inc
jae
push
jae
gs
inc
inc
inc
fs
jae
data16
hlt
imul
sub
cmp
jb
insb
imul
jl
push
ljmp
adc
lret
xchg
cmp
sbb
scas
je
das
add
gs
popa
ljmp
or
das
arpl
jae
jae
jl
das
in
dec
in
jo
or
push
sub
sbb
icebp
inc
sub
outsb
adc
js
or
arpl
fwait
push
stos
fs
outsl
sbb
and
jae
jae
insl
das
sbb
mov
imul
cmpsb
ja
push
das
outsb
das
insl
popa
and
imul
push
or
xor
dec
xchg
xor
xchg
push
dec
inc
mov
insb
jb
fs
insb
mov
add
arpl
inc
js
dec
or
sbbl
mov
sti
xor
test
mov
dec
in
frstor
flds
jg
jns
sub
sub
xchg
into
xchg
pop
push
insl
dec
dec
das
leave
dec
mov
and
popf
iret
lock
and
and
adc
pop
push
jne
push
jb
adc
sub
xor
add
or
movsb
movsl
sbb
push
jns
jnp
das
push
lods
jmp
test
jnp
out
push
les
dec
add
mov
and
inc
add
sbb
add
add
andb
jg
mov
sub
int3
enter
enter
fcomp
fxch
fcompl
loopne
jecxz
in
das
add
test
inc
shlb
outsl
mov
push
leave
in
ja
mov
add
and
push
std
jg
pop
xor
xor
xor
ss
cmp
inc
inc
inc
imul
mov
add
add
fwait
mov
push
or
pop
add
adc
ja
mov
pushf
add
addb
add
faddl
rolb
xchg
or
mov
or
pop
dec
shrl
es
mov
and
dec
shll
in
hlt
cld
imul
cmpsb
imul
imul
cmpsb
imul
mov
int3
nop
xchg
aam
lsl
or
fs
pop
jb
inc
stos
gs
dec
push
jb
dec
imul
imul
daa
pop
cmp
sub
mov
xor
nop
leave
xchg
daa
pop
cmp
outsl
add
inc
sar
push
pop
and
pop
cmp
scas
push
mov
js
mov
dec
int3
loopne
add
adc
cmpsb
imul
cmpsb
imul
sub
or
xchg
testb
dec
cmpsl
add
popa
outsb
jae
cmp
shll
mov
and
cmp
testl
pop
pop
mov
invlpg
orb
ljmp
dec
pop
or
ud0
pop
ja
hlt
pop
incl
add
pop
sbb
sub
aas
fdivrl
pop
cmpsb
lret
mov
lock
pop
mov
or
cmpsb
jmp
mov
add
lcall
dec
mov
lcall
or
jle
bndstx
xor
imul
adc
rorb
sbb
or
pop
add
cmp
xor
rcrl
pop
pop
insb
add
shll
movsb
pop
xlat
je
ss
verr
pop
fnstenvs
xor
cltd
cmpsb
imul
testl
add
push
shll
orl
pop
andb
xor
shll
push
mov
dec
rorl
pop
shll
fidivrs
xor
insb
pop
out
sbb
xor
jo
divb
add
add
mov
or
sbb
and
gs
scas
or
sti
or
testl
fdiv
push
dec
addr16
or
or
insb
fldenv
inc
add
pop
and
es
outsb
nop
cmpsb
adc
add
inc
imul
addr16
xor
adc
pop
mov
jo
pop
adc
sbbb
inc
invd
movntps
cmpsb
jnp
add
or
mov
mov
jbe
sbb
add
mov
imul
imulb
scas
xor
pop
fsubrl
add
jnp,pn
xor
shll
lods
add
cmp
sbb
testb
sub
mov
popf
mov
push
je
mov
dec
stos
inc
cmp
mov
sbb
mov
mov
je
leave
pop
and
pop
pop
testb
scas
cmp
fwait
test
inc
cld
xchg
mov
or
gs
je
fisubs
jae
xor
adc
xor
pushf
or
xor
js
mov
and
les
fs
push
fs
or
dec
jno
je
ficoms
scas
andb
sbb
xlat
sbb
jl
dec
add
adc
sub
dec
faddl
inc
push
and
add
add
adc
push
adc
adc
adc
and
insb
out
out
push
add
add
dec
add
add
or
filds
inc
add
dec
add
dec
aad
inc
dec
mov
dec
inc
dec
dec
sub
add
adc
add
pop
data16
cmp
fiadds
push
push
out
imul
push
incl
adc
add
adc
push
inc
and
add
scas
sti
in
add
arpl
popa
add
arpl
je
jns
jne
outsl
add
pop
add
outsb
add
inc
int
or
add
dec
and
sbb
add
adc
push
and
into
fsub
xor
pop
mov
add
pop
sub
sub
scas
jmp
imul
pop
insl
insl
jmp
lcall
mov
cmp
jo
lods
jmp
aas
popa
adc
outsb
xor
idivb
insb
ja
popf
sbb
out
sub
and
iret
adc
ja
imul
inc
jbe
fildl
sbb
jae
sbb
pop
shlb
add
push
add
out
jae
fwait
pop
inc
jge
xchg
xlat
push
pop
dec
outsb
mov
dec
or
arpl
jne
wbinvd
add
outsb
xchg
or
push
jb
push
mulb
popaw
pop
and
jmp
or
out
jae
imul
outsb
or
rcpps
lret
mov
sbb
ret
sub
xchg
xor
sbb
sbb
ret
arpl
frstor
fstpl
jmp
insb
or
lds
or
sbb
outsl
imul
mov
dec
push
fistpl
andl
movsl
movsl
pop
gs
sbb
sbb
dec
xorl
stos
inc
aaa
cmp
or
add
pop
mov
push
add
pop
test
ds
add
cmp
cmp
add
outsl
push
je
test
mov
ja
or
cmp
inc
pop
arpl
scas
sbb
pop
fwait
add
jmp
xchg
bound
aaa
jge
inc
aas
sbb
bound
inc
out
insb
jbe
pop
inc
stc
or
cmp
dec
and
outsl
and
daa
daa
xlat
pop
pusha
mov
inc
sbb
jns
mov
test
inc
out
mov
adc
pop
sub
and
testl
xor
add
loope
popa
ret
fldcw
mov
xchg
xor
add
sbb
filds
inc
sbb
shrl
add
loopne
inc
pusha
je
jb
cmpsl
je
mov
andl
movsb
mov
pop
imul
push
enter
xchg
idivb
jno
sbb
fsts
xor
mov
cmp
popa
lret
jp
fs
je
cmp
add
fstps
popa
add
mov
sbb
cltd
push
rolw
push
ss
jnp
xchg
jo
adc
mov
das
inc
dec
xorl
xor
adc
jae
jo
arpl
push
lds
arpl
pop
lods
adc
mov
xchg
sbb
pop
inc
jo
jno
or
jmp
test
inc
neg
in
inc
scas
movsb
inc
lret
jge
jg
mov
xchg
mov
aas
and
mov
xchg
sub
lret
pop
aaa
outsl
dec
add
mov
imul
mov
loope
sti
mov
nop
sub
dec
gs
and
popa
push
add
lods
jne
pop
movsb
or
sub
je
dec
je
push
xor
icebp
fbld
and
jne
sub
int
sbb
rcrl
fnstenv
test
pusha
push
xor
pop
insl
adc
xor
lods
jae
cmpsl
pop
mov
and
mov
popl
movsb
scas
sbb
pop
add
negb
push
xorw
push
and
rorl
and
push
add
mov
lods
mov
dec
fs
lea
adcb
mov
sbb
fisttps
jp
jno
sbb
lods
or
push
xchg
imul
cmpsl
aad
mov
sbb
inc
mov
ja
pop
or
subl
fldenv
insl
outsl
outsl
xchg
shr
in
jns
mov
adc
pop
sti
sti
xchg
cmp
outsb
sbb
mov
mov
fnclex
or
xchg
push
or
imul
xadd
sti
adc
push
andb
jno
sub
aas
cmc
mov
mov
das
xlat
adc
push
and
mov
dec
and
adc
xor
dec
pusha
pusha
pop
sub
pop
aas
xor
mov
mov
mov
sbb
pop
xor
inc
pop
nop
add
cmp
aaa
mov
jmp
add
fwait
cmp
jnp
aad
sub
insb
outsl
popa
addr16
test
js
add
mov
orl
pop
add
nop
add
rorl
adc
inc
inc
push
leave
adc
bound
or
dec
popa
fisttpll
or
xor
sbbl
xchg
add
jmp
fmul
push
cmp
jae
outsl
arpl
inc
jb
jo
imul
jb
je
dec
inc
push
pop
test
stc
fisttps
clc
addb
add
gs
jge
and
popa
je
add
sub
cmp
loope
popa
inc
outsl
jb
add
and
sub
je
popa
insb
push
jne
jb
inc
push
int
mov
mov
cmovne
or
outsb
fs
push
andb
sbb
out
jmp
xchg
mov
jmp
pop
adc
bound
pop
mov
mov
pop
sub
imul
add
imul
in
lret
pop
push
jl
or
pop
adc
add
jbe
cmp
adc
fisttpl
fs
adc
inc
pop
push
jb
fmuls
mov
pop
pop
sub
bound
cmp
gs
das
pusha
and
mov
cwtl
mov
out
andps
or
mov
inc
cmp
insb
dec
add
sub
push
adc
and
mov
insl
nop
setge
dec
adc
imul
or
pop
das
shll
outsb
pop
push
sar
inc
cwtl
cmovae
xchg
nop
adcl
mov
imul
xchg
rorb
pop
push
scas
push
or
lods
std
and
or
addr16
xor
mov
mov
push
outsb
pop
and
and
inc
cmp
xchg
rorb
and
jg
push
sbb
in
faddl
add
fisttpl
das
pop
mov
xchg
or
lahf
and
sub
stos
jp
or
insb
or
jbe
mov
adc
dec
outsb
pusha
push
ficoml
push
outsl
adc
imul
adc
aam
roll
jo
or
sub
push
adc
jno
add
mov
add
negl
insl
inc
mov
inc
inc
mov
inc
xchg
test
js
lea
or
fs
mov
lret
pop
jns
jg
sub
mov
pop
jle
adcb
adc
es
sub
out
sbb
call
popf
pushf
fs
fnsave
sarb
adc
jo
popa
push
cmp
popf
into
loopne
fisubrl
mov
ljmp
jnp
cmpsl
or
stos
xor
inc
imul
fs
insb
xor
insb
imulb
ss
pop
out
xor
lods
arpl
inc
mov
or
cltd
cmp
jp
stos
std
sbb
cmpsl
inc
mov
shrb
jae
push
lret
pop
dec
dec
andb
or
sub
sub
adc
insb
pop
ret
je
pop
sbb
xchg
addr16
jb
jae
adc
and
push
mov
and
xorb
and
dec
fs
jnp
addb
outsl
push
or
iret
pop
leave
pop
or
dec
loopne
cmp
or
mov
push
jmp
adc
mov
pop
adc
mov
rol
arpl
and
jmp
sub
mov
and
test
arpl
lret
mov
sbb
adc
xchg
test
add
cli
rorb
mov
pop
leave
jae
in
pop
int
or
mov
dec
dec
inc
mov
jbe
jne
bound
and
or
ret
jg
lcall
add
add
pop
inc
sub
popl
sbb
add
add
pop
adc
or
and
imul
inc
int3
sbb
lret
adc
mov
add
adc
pop
xor
in
mov
or
nop
daa
sahf
or
repnz
push
faddl
aam
out
rolb
les
mov
add
sbb
inc
inc
inc
jl
jle
adc
jmp
fcomp
pop
sbb
pusha
inc
inc
push
inc
fisttps
sti
outsl
es
aaa
or
bound
movsl
inc
inc
push
push
add
jmp
subb
pop
push
popa
add
nop
adc
push
inc
pop
enter
push
or
dec
jp
jl
add
daa
mov
cmp
gs
add
sbb
imul
and
add
jle
push
or
add
add
add
add
add
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
inc
add
inc
add
add
add
pop
add
add
add
add
mov
add
sub
add
mov
add
clc
add
adcb
add
cmp
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
call
add
add
add
add
add
add
add
xor
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
add
add
enter
in
xor
add
add
add
add
add
add
add
add
add
add
lock
add
xor
add
in
add
add
add
add
add
add
add
sbb
add
or
add
sub
add
in
add
add
add
add
pop
add
sldt
jo
add
cwtl
add
cmp
add
rolb
cmp
add
call
sldt
adc
add
cmp
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
mov
add
adc
add
faddl
add
in
add
add
add
add
add
add
add
mov
add
in
out
add
adc
add
in
add
add
add
add
add
add
add
fadds
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
in
repnz
cwtl
add
add
add
add
add
add
add
add
add
sub
add
test
add
mov
add
in
add
add
add
add
add
add
add
push
add
add
clc
add
jl
add
in
add
add
add
add
add
add
add
js
add
mov
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
call
incb
add
add
add
add
add
add
fiadds
add
add
add
add
add
add
add
sub
add
cmp
add
xor
add
in
add
add
add
add
add
add
add
push
add
addb
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
add
add
add
add
add
nop
add
addb
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
dec
inc
dec
dec
dec
inc
dec
dec
shr
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
inc
cld
cmp
inc
cld
pop
clc
aas
cld
pop
sti
cld
pop
sti
cld
jg
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
inc
sti
cld
cmp
clc
cmp
sti
ret
clc
aas
sti
inc
cld
add
rolb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
incl
ljmp
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
call
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
add
or
push
ja
add
push
jo
add
push
add
add
push
add
add
incl
jo
add
add
out
loopne
add
add
loopne
incl
add
incl
add
popl
add
add
add
add
add
pop
add
rorb
add
sldt
rorb
add
sldt
rorb
add
jg
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
and
add
add
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
xor
push
incl
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
and
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
add
je
xor
add
add
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jb
outsl
add
add
je
xor
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
add
je
xor
add
js
add
add
add
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
or
and
insl
gs
outsl
push
outsl
data16
popa
jb
cs
imul
insb
insb
cs
outsl
outsb
je
arpl
or
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
ds
jae
jb
jo
imul
outsl
ja
and
gs
insb
cmp
fs
jb
jo
imul
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
jae
gs
bound
or
add
test
add
insb
add
mov
add
mov
add
ret
add
add
add
add
cwtl
add
fnstcw
add
mov
add
add
add
repnz
add
add
adc
add
and
add
cs
add
add
add
cmp
add
add
add
dec
aas
add
add
add
push
aas
add
add
add
bound
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
gs
dec
push
xor
add
push
popa
jb
popa
outsb
je
outsl
jo
add
add
je
inc
add
add
das
adc
inc
sub
dec
cmp
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
ljmp
xchg
pop
movsl
dec
adc
or
mov
adc
inc
push
loopne
lcall
inc
popa
fcomps
test
loope
pop
repz
sub
xor
push
std
mov
mov
out
adc
ja
es
xchg
jge
outsl
sbb
sahf
jbe
pop
out
mov
pusha
pop
imul
mov
lret
sub
dec
xchg
adc
mov
daa
inc
fwait
and
lcall
loop
xchg
dec
add
les
sub
sub
fwait
xor
cmp
lcall
lcall
ret
fwait
lcall
and
and
popf
sti
adc
ret
lcall
ret
sbb
lcall
fwait
and
lcall
lcall
test
jp
cmp
fwait
fwait
sub
and
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
mov
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
pushf
mov
or
out
fwait
xor
adc
inc
sub
mov
lret
pop
or
or
mov
lret
and
cli
stos
adc
mov
stos
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
fiaddl
dec
pop
rcrl
mov
mov
fwait
add
push
mov
and
jne
xor
mov
xchg
fistl
pop
and
out
add
adc
loop
pop
movsl
icebp
xchg
mov
clc
fisubs
push
pop
fistpl
adc
aas
fbstp
loope
push
lret
lods
iret
lods
inc
mov
jmp
xor
add
fnsave
hlt
mov
loope
adc
cmp
push
pop
sub
mov
div
pop
push
sbb
or
xchg
add
pop
xor
mov
add
lret
movsb
gs
stos
cwtl
pop
popa
ss
lds
push
lahf
imul
mov
mov
daa
lds
sub
push
popa
mov
pop
or
cmc
mov
out
inc
mov
in
dec
sbb
sbb
jns
es
out
inc
mov
push
or
jmp
das
and
or
mov
rolb
bnd
sub
loop
in
dec
and
std
xor
inc
cmp
jnp
mov
roll
int
xchg
adc
and
fiaddl
mov
adc
cmp
mov
ljmp
add
push
stos
mov
or
and
sub
xchg
test
adc
imul
es
je
jns
sbb
jnp
flds
cmp
dec
jnp
sub
push
iret
loope
xchg
add
aad
jmp
repz
add
lret
stos
test
sbb
push
cld
mov
mov
cltd
scas
fsubp
rcl
orb
imul
dec
stc
fsubs
repnz
jl
mov
push
pop
xor
push
inc
in
and
mov
pusha
mov
out
push
hlt
push
and
sub
pop
and
out
sub
loopne
cmp
or
xor
repnz
clc
add
push
add
mov
stos
add
fstpl
mov
sub
mov
and
sahf
hlt
movsl
jecxz
aam
adc
loope
mov
lea
mov
fisubrl
sub
mov
dec
mov
inc
shll
ficompl
cmp
stc
push
add
ret
sub
adc
fldt
mov
mov
and
xor
lahf
pop
pop
pop
or
jle
jmp
mov
mov
lcall
jno
sub
cmp
and
xor
jo
test
js
daa
inc
popf
jns
cmp
out
out
cmpl
add
dec
jbe
arpl
jb
jnp
mov
push
call
push
clc
lcall
shlb
jae
fisubl
in
gs
cld
inc
imul
cmp
cmp
sbb
sub
pop
imulb
push
jnp
insb
xchg
lcall
das
and
cli
lcall
pop
loopne
adc
pop
insb
sarb
jp
add
out
jns,pt
sbb
outsl
pop
xchg
jne
fst
sub
xchg
xchg
inc
mov
rcrb
mov
stc
shlb
jno
push
imul
sub
mov
or
sub
aam
mov
cmp
cmp
pop
mov
sub
test
loope
fidivrs
adc
xor
rorl
pusha
mov
fdivs
dec
hlt
outsl
sarl
popf
xor
xor
popl
cmp
push
call
out
jp
lahf
mov
shll
pop
push
and
stos
inc
push
sbb
mov
push
int
fistpl
les
jmp
lcall
rorl
test
or
sbb
push
pop
sbb
enter
xor
fdivrs
mov
sub
cld
cmp
adc
test
call
nop
loop
dec
inc
and
mov
mov
pop
aaa
inc
sbb
xchg
fs
call
mov
loop
lcall
repnz
test
mov
data16
sbb
je
roll
and
sub
xlat
mov
movsb
and
adc
rcll
push
sbb
and
inc
das
bound
loopne
bound
shll
dec
in
mov
mov
xor
mov
cmp
sub
loopne
hlt
shlb
sbb
cltd
ss
mov
lret
add
jae
bound
sbb
or
lret
xchg
jmp
push
es
or
ret
loope
mov
daa
push
jp
xor
dec
dec
xchg
dec
addr16
jbe
imul
cli
negl
xchg
loopne
fldl
jge
sbb
movsb
test
stc
inc
xor
adc
or
xchg
push
sarl
jg
adc
cmp
int3
or
dec
lods
dec
push
adc
push
popa
push
sbb
in
mov
jecxz
mov
scas
aam
sub
enter
test
xchg
sub
stc
sbb
sbb
bnd
mov
jl
xchg
or
cmc
sbb
mov
shrl
jns
inc
stos
fildl
add
mov
push
inc
enter
dec
cmp
mov
push
xor
stos
insl
pusha
xchg
xchg
mov
jl
icebp
addl
imul
push
push
loopne
xor
sbb
mov
outsl
mov
pop
aaa
lea
jg
inc
das
jae
lods
rcll
add
xor
xchg
inc
lock
adc
outsb
arpl
pop
mov
scas
xchg
jecxz
lea
sbb
jo
pop
adc
loope
popa
sbb
dec
push
pop
pushf
and
add
fdivp
cmpsl
mov
dec
mov
hlt
jae
lock
jle
mov
das
pop
lock
mov
ljmp
mov
pop
pop
push
push
iret
aad
pop
xchg
or
mov
add
in
adc
cmp
and
fisttpl
cmpsb
insl
sbb
cmp
add
mov
mov
lea
in
dec
fs
lret
bound
dec
xchg
lock
xchg
repz
leave
or
push
push
lods
pop
mov
xchg
insb
arpl
mov
pop
jge
fdivrl
pop
es
lcall
sub
inc
push
int3
push
or
enterw
mov
imul
cmp
rcrb
pop
and
dec
xchg
push
jae
pop
jmp
hlt
add
inc
sub
out
cmp
test
cmpl
loop
int3
sub
pop
mov
sbb
movsb
js
mov
fwait
pop
js
jge
or
xor
fdivrl
push
xchg
mov
xchg
es
mov
inc
pop
daa
cmc
xor
jl
sub
mov
dec
fs
ret
xor
jno
iret
cmp
lahf
pop
aam
lahf
and
and
sbb
test
repnz
mov
mov
mov
and
adc
sbbb
pop
aaa
roll
test
add
pusha
adc
dec
lea
aam
jns
xchg
in
in
sbb
add
fildl
mov
pop
adc
jae
shll
les
mov
mov
sbb
xchg
pop
repnz
arpl
sbb
ret
mov
add
jne
mov
ret
jg
push
in
stos
sub
dec
rolb
jo
mov
shll
jo
pop
inc
push
jmp
fimuls
pop
flds
jg
adc
out
pushf
ss
arpl
in
mov
and
mov
movb
addr16
scas
ds
jge
mov
push
enter
fs
cs
mov
pop
mov
daa
sub
jecxz
push
sbb
popf
mov
cmpsl
mov
lds
xchg
lret
lods
sbb
insl
push
sub
iret
das
cmp
cld
xchg
outsl
nop
mov
lret
aaa
orl
cmp
sbb
inc
imul
fnsave
adc
lret
xchg
iret
pop
lods
fadds
cltd
inc
bound
sub
lds
popa
mov
jns
fs
xor
nop
push
inc
loope
adc
imul
or
inc
je
fs
jb
pop
xor
push
std
mov
sbb
xchg
mov
inc
mov
pop
dec
push
push
filds
imul
mov
fcompl
inc
cmp
xor
jb
stos
lcall
icebp
mov
sub
cwtl
stos
stos
jge
pusha
imul
lea
adc
cmp
popf
loop
sub
adc
mov
and
add
lea
inc
mov
adc
cmp
daa
xor
mov
sbb
inc
jle
inc
mov
pminsw
pop
sbb
cmp
pop
push
adc
dec
cmp
hlt
push
push
icebp
mov
jb
or
imul
lcall
add
sub
push
mov
push
mov
mov
dec
mov
sub
jmp
cld
lcall
mov
push
mov
mov
imul
add
add
js
jb
fiaddl
lret
loop
pushf
cmp
popf
jo
imul
sbb
sarl
push
lods
imul
scas
stc
adc
test
in
pop
repnz
clc
inc
sahf
sub
inc
and
int
fcmovnbe
aaa
push
nop
xlat
add
adc
dec
out
enter
pushf
orl
inc
imul
mov
lea
imul
cltd
xchg
cmp
hlt
sub
fimuls
adc
sbb
in
jbe
frndint
jnp
adc
arpl
inc
das
xchg
pop
xchg
jb
data16
cmp
fcoms
imul
ds
lods
lret
sar
shlb
rcll
dec
push
xlat
mov
mov
out
pop
sbb
push
pop
mov
cmp
and
test
xchg
inc
mov
lea
test
mov
jbe
sub
outsl
ret
in
add
push
inc
xor
mov
test
testb
lret
xchg
dec
clc
ja
icebp
xchg
imul
jnp
dec
jg
addr16
adc
enter
in
mov
inc
dec
lds
mov
push
outsb
fwait
jne
jle
cli
mov
jnp
cltd
outsb
and
inc
lock
or
cmp
jns
mov
mov
pop
xchg
enter
pop
mov
test
adc
orb
daa
cmp
imul
adc
nop
add
test
or
inc
xor
js
sbb
mov
ljmp
scas
mov
das
xlat
in
inc
mov
imul
mov
test
loopne
daa
push
mov
das
mov
fisubrl
jnp
jg
outsb
inc
xor
in
jns
mov
jle
cmp
es
fnstsw
lods
testl
iret
mov
popf
fldl
movsb
stos
out
push
gs
pusha
pop
pop
ret
scas
in
xchg
or
xor
icebp
pusha
pop
xlat
mov
jle
out
jle
frstor
faddl
cltd
or
xlat
jbe
mov
ljmp
test
fdivrs
leave
sub
aam
and
imul
in
inc
push
test
xchg
ds
cli
and
in
sbb
jmp
stc
sahf
pop
nop
add
push
or
push
mov
dec
cmp
test
mov
lahf
jle
mov
push
imul
insl
int3
imulb
mov
fldcw
cli
add
aam
dec
inc
push
js
mov
add
mov
push
cmpsb
sbb
mov
scas
mov
mov
dec
inc
xchg
sti
lds
inc
pop
add
and
cmp
lret
jge
inc
test
stc
sub
and
shll
enter
push
jae
flds
stos
jp
lret
or
fs
add
pop
pop
mov
mov
js
push
or
enter
add
mov
aaa
mov
dec
jp
mov
mov
and
and
aas
ds
add
das
lret
push
test
call
test
mov
jae
pop
loope
pop
aaa
push
mov
jno
pop
dec
imul
pop
pop
push
pop
loopne
mov
mov
push
mov
ret
xorb
mov
inc
mov
das
jb
adcl
push
dec
inc
incb
pop
xchg
repnz
fisttps
xor
aaa
fimull
adcb
nop
scas
push
xor
sbb
jmp
mov
mov
das
push
mov
push
mov
cwtl
cmp
adc
mov
call
mov
xor
enter
fnstsw
mov
aad
addl
leave
andb
mov
mov
mov
into
pop
mov
inc
cwtl
jnp
mov
cli
into
stc
and
or
push
or
sbb
inc
and
xor
test
adc
and
in
jns
dec
aaa
push
or
sub
mov
pop
mov
sub
fcmovbe
rcll
clc
addl
sar
sbb
daa
leave
ficomps
ja
mov
xchg
push
sahf
mov
cmc
or
pmaxub
pop
ds
aaa
fmull
add
push
decb
or
dec
sub
pop
scas
daa
adc
sub
addr16
fisubs
lret
adc
cmp
mov
sbb
std
test
sbb
test
outsl
cltd
lcall
mov
adc
fadd
dec
dec
out
lret
sbb
mov
dec
inc
push
mov
das
xchg
out
jecxz
add
dec
fisttpll
push
lods
faddl
loop
sahf
push
imul
fwait
cmp
fwait
xor
mov
push
out
lret
mov
xchg
lods
fmuls
mov
shlb
ret
sub
sahf
stos
es
adc
adc
js
mov
popf
les
stos
je
fstl
lods
push
cs
iret
das
or
shl
sub
xchg
inc
mov
bound
mov
das
arpl
mov
cmp
cmp
cs
daa
cmp
sbb
xchg
adc
add
push
arpl
repz
adc
popa
or
nop
loopne
loope
jmp
cwtl
dec
jmp
jno
cmpsb
arpl
or
lea
lds
cwtl
mov
fbld
or
mov
jnp
fldcw
popa
adcb
inc
xchg
pop
dec
and
fists
pop
push
xchg
ds
sbb
cmp
xchg
rolb
faddp
stos
clc
or
movb
fs
inc
repnz
or
push
sbb
cltd
je
xchg
pop
das
mov
dec
mov
dec
add
rcrb
test
movsl
dec
stos
daa
insb
add
sub
adc
push
jecxz
push
add
les
pop
int
mov
or
std
in
aaa
dec
insl
loopnew
incl
add
adc
adcl
mov
shll
jecxz
mov
lods
inc
jp
outsb
ror
in
dec
pop
out
sbb
sub
mov
lock
cli
xchg
sbb
mov
cmp
push
movsl
pop
enter
cmp
inc
fistpll
cli
adc
add
sub
fwait
adc
in
mov
sub
pop
icebp
mov
add
lock
xorb
cli
stos
or
sbb
xor
cs
sub
jae
enter
add
fwait
shl
sub
aam
push
fyl2xp1
lcall
sub
icebp
mov
mov
sbb
ja
aas
jae
lret
and
lcall
repnz
fdivrs
shlb
int
xor
fstl
mov
inc
fistps
ss
lods
mov
in
mov
cwtl
or
push
sub
cmp
bnd
rcl
jb
stc
push
push
push
push
test
jmp
sti
cwtl
add
arpl
jecxz
test
mov
leave
mov
pop
outsb
sub
lds
push
push
scas
out
sbb
dec
push
out
jbe
push
cs
sub
dec
mov
push
sbb
push
mov
xor
rcrl
pop
mov
mov
pop
cmpsb
cmp
pushf
cmp
add
shll
les
sbb
std
adc
cmpsl
lds
xor
daa
or
push
jle
xor
mov
nop
daa
pop
and
adc
out
mov
xor
xchg
dec
iret
jecxz
pop
ficoms
int3
psubsb
push
lahf
inc
aaa
mov
loopne,pn
push
jnp
cmp
inc
out
pop
mov
fwait
sahf
cs
sub
outsl
gs
push
dec
lahf
pop
mov
sub
les
pushf
mov
mov
lret
sub
sbb
fdivs
loop
imul
mov
jge
bound
xor
jmp
bound
fsubs
adc
mov
orl
insb
inc
cli
push
std
inc
pop
pop
jmp
add
test
scas
inc
mov
faddl
into
or
js
bnd
pop
pop
cwtl
add
add
add
ficoms
mov
or
jns
ljmp
add
cmp
cmp
lods
and
sbb
repnz
icebp
jg
insb
aad
movsb
imul
cmp
notl
loopne
xchg
and
imul
mov
addb
lahf
jmp
sbbl
sbb
shlb
push
adc
addl
iret
adc
and
aad
ja
pop
lock
or
clc
stos
js
or
addr16
or
stc
mov
lahf
sub
xchg
add
lds
subb
or
mov
add
loop
mov
or
dec
cmp
xlat
xor
cmpsl
xchg
das
bound
jecxz
fistl
inc
cmc
inc
sub
mov
pop
pop
testl
gs
add
aam
xchg
stc
inc
jg
sub
ret
ret
mov
or
jne
dec
xor
daa
sbb
mov
adc
lahf
scas
lea
mov
ds
call
or
stc
aad
cmpl
cltd
fwait
pusha
adc
fdivl
mov
push
daa
or
frstor
dec
in
fldt
ret
dec
js
pop
stos
orl
dec
je
inc
push
mov
xlat
outsb
loope
pop
jle
jae
mov
adc
push
lods
lods
sub
jnp
jne
sbb
mov
int3
ds
shrb
loopne
mov
dec
cs
mov
cmp
mov
cmp
incl
xor
or
sub
sub
iret
cltd
es
shr
pop
jns
subb
popa
lds
jb
rcl
arpl
sahf
cmp
xor
or
and
lret
or
stc
test
pop
cmp
in
push
sub
addl
jnp
push
add
add
mov
mov
orl
call
cld
test
sbb
dec
mov
dec
inc
mull
movsl
inc
xor
fbstp
inc
popf
daa
mov
aam
xor
sarl
and
mov
nop
movl
out
xchg
je
inc
mov
or
call
sbb
sbb
xor
cli
fcomps
test
xorb
mov
imul
imul
ret
mov
clc
dec
or
cwtl
jmp
sbbb
dec
mov
dec
mov
mov
fistl
mov
cmpsb
pop
sub
scas
sarl
mov
cli
cmp
imul
push
jbe
cmp
and
lds
mov
stos
pusha
push
scas
xchg
ret
shr
push
mov
in
jb
xchg
xchg
fidivrs
shld
rcll
jmp
enter
out
jns
into
sarl
or
push
fwait
add
jl
lahf
mov
imul
pusha
mov
lret
dec
or
inc
test
aaa
sub
sti
mov
shll
call
ljmp
cmp
inc
lods
push
inc
and
jnp
in
rclb
rep
mov
mov
jo
cmc
fcomp
jge
out
gs
out
xor
xor
pop
mov
shr
int
andb
dec
inc
sbb
mov
repz
and
jno
fidivs
data16
dec
loopne
movsb
xchg
repnz
mov
out
push
xor
pop
mov
mov
pop
ljmp
sar
andb
jmp
fstpl
jae
pop
dec
inc
sbb
loop
mov
js
stc
mov
jmp
lcall
cs
aas
cmp
inc
pop
inc
mov
popa
stos
int
dec
adc
out
orb
push
enter
gs
fneni(8087
cmp
inc
mov
repnz
mov
inc
cmc
or
sub
bound
loopne
shlb
imul
and
filds
sub
push
push
inc
fildl
xor
in
lcall
cs
sahf
ret
and
outsl
mov
cmpsb
pop
fsubrs
fidivrs
je
es
lret
gs
dec
int
sbb
and
ficoml
adc
inc
out
hlt
sub
xchg
arpl
mov
jp
mov
in
jp
sbb
lret
lock
xor
popa
pushf
sti
in
leave
into
push
mov
pop
mov
jnp
out
rcl
xor
fbld
fcoms
and
stc
out
ret
push
mov
jnp
enter
mov
jbe
push
sub
add
mov
mov
pusha
rorb
nop
addr16
xor
mov
scas
xor
dec
loopne
imul
xor
sbb
dec
sub
sub
loopne
push
pushf
incb
pusha
nop
sbb
loopne
pop
sti
push
dec
lret
mov
in
inc
and
or
jae
or
in
adc
pop
xchg
loope
popf
dec
xor
pop
mov
add
test
or
dec
arpl
stos
fwait
adc
rorl
dec
imul
cmp
xchg
out
jg
jae
jg
add
out
adc
xor
stos
pushf
mov
xchg
push
dec
dec
sbb
and
pop
push
pop
push
lcall
lcall
movsl
jecxz
xchg
mov
lock
insb
inc
das
lret
rcll
xor
jbe
cmpsb
pop
and
push
sahf
jmp
lcall
sbb
inc
adc
cmpsl
testb
mov
fwait
hlt
and
into
xlat
leave
push
mov
mov
lcall
mov
inc
mov
ja
push
push
cmp
cmp
adc
out
adc
jo
lahf
lret
cltd
ficoml
cli
inc
ret
inc
movsl
and
lods
mov
jp
cmp
mov
jecxz
sub
dec
jle
imul
mov
mov
or
jnp
adc
sbb
adc
stos
adc
lods
fidivrs
and
inc
xchg
mov
jecxz
push
adc
shll
xor
push
sahf
shlb
adc
shll
scas
inc
lahf
jecxz
cmp
dec
stos
sahf
or
xor
cli
push
dec
sub
and
ljmp
cmp
mov
xchg
imull
ret
lock
pop
mov
xchg
out
fisubs
xlat
vsubss
sub
loop
add
es
or
xchg
imulb
xchg
arpl
inc
mov
and
lock
mov
add
push
pop
mov
mov
dec
ss
mov
das
mov
mov
and
or
cmp
lea
or
sub
test
out
pop
and
scas
dec
pmulhuw
xchg
push
rcrb
lock
cmpsb
cmc
pop
aad
add
mov
pop
mov
mov
xchg
add
repnz
mov
jnp
sub
sub
es
sbb
dec
addr16
push
push
cmc
sub
data16
popf
iret
add
xchg
adc
stos
addl
inc
mov
mov
iret
add
subb
xchg
cmpsl
shr
pop
insb
mov
inc
mov
ret
jns
cmp
add
mov
mov
xorb
cmc
mov
adc
ret
xchg
mov
into
fwait
jb
adc
mov
std
cmp
cmp
in
lahf
and
in
cmpsl
or
add
in
lret
sub
inc
and
rep
lods
mov
insb
adc
xor
cmp
xchg
or
mov
push
lret
mov
push
cmp
inc
in
mov
and
mov
push
xor
jnp
pop
cmp
mov
out
or
push
test
roll
push
adc
cmpl
xchg
stos
xchg
pushf
dec
aas
movsl
dec
sarl
mov
add
push
mov
xlat
sub
outsl
pop
mov
push
push
out
pushf
xor
adc
adc
push
fwait
xlat
sub
test
jle
insb
addb
int
fnstsw
inc
inc
lcall
test
mov
sub
mov
insl
fsubrs
dec
lds
jecxz
cli
out
xchg
xor
and
xchg
lahf
sbb
adc
es
or
ret
shll
xor
add
cs
fsubrs
or
stos
sub
cltd
loop
repz
ret
xchg
ja
jmp
and
inc
fists
inc
cmp
cmp
add
sti
or
dec
push
fwait
jnp
mov
data16
xchg
inc
ret
dec
mov
cmp
push
mov
sub
pushl
es
sub
mov
fwait
adc
ds
js
inc
cmp
jne
xchg
pusha
push
mov
mov
dec
fdivrs
clc
jno
push
lock
mov
cmp
lret
sbb
sub
sbb
cmp
repnz
lods
popa
lock
outsb
jo
xor
and
sub
dec
sub
out
and
push
loop
rcll
dec
cmp
sbb
sbb
das
push
jnp
xor
push
push
cmp
popf
je
cwtl
inc
out
std
pop
xchg
jno
shr
lock
and
mov
xchg
jg
mov
lahf
ret
pop
jle
lcall
cmp
loopne
clc
mov
pop
inc
cltd
or
mov
mov
or
xchg
xor
repnz
or
mov
sbb
ljmp
jbe
lret
or
push
jbe
push
push
stos
aaa
pusha
cmp
xor
loop
sub
cmp
lcall
lea
cmp
aaa
cmpsl
leave
fcomps
andb
sarl
push
scas
cmp
sub
mov
movb
in
imul
pusha
pop
out
sub
or
int3
jp
inc
mov
mul
ja
mov
push
imull
mov
or
pop
aas
jbe
lods
inc
sbb
or
push
pop
lret
mov
lcall
mov
pop
adc
jnp
mov
pop
imul
negl
mov
xchg
or
inc
bound
mov
lret
insl
lahf
push
and
sbb
aaa
xchg
sahf
jo
loop
lcall
mov
and
and
jns
xchg
mov
imul
test
insl
mov
jl
jb
lea
out
pushf
out
and
jae
test
inc
mov
fisttpll
nop
and
jne
inc
push
cmp
and
mov
fucomip
ret
adc
int
mov
pop
cmp
arpl
dec
sub
xchg
je
pusha
and
sbb
xchg
push
pop
add
xchg
mov
or
ret
addb
adc
mov
pop
mov
cmp
push
mov
cmp
fs
les
push
xchg
inc
adc
mulb
mov
repz
cmpsl
add
sub
push
les
add
aaa
stos
lahf
cmc
pop
and
in
jmp
lcall
sahf
jno
pop
xchg
outsl
push
xor
mov
arpl
sub
push
clc
push
pop
mov
sub
popa
leave
stos
and
xchg
sbb
xor
cli
sbb
std
xor
mov
nop
int3
xchg
or
push
push
lret
mov
adc
dec
rorb
cmp
nop
nop
cli
stos
popf
sub
mov
iret
mov
or
xchg
inc
imul
mov
xchg
sub
cltd
pop
das
and
into
fnstenv
and
add
andb
sub
adc
and
xchg
cli
and
flds
mov
or
xchg
call
ret
rorb
add
mov
jecxz
lock
mov
cmc
ret
ret
cmp
fnstenv
mov
cli
xchg
lcall
test
xchg
in
adc
cs
lcall
xchg
cmp
xchg
shlb
cwtl
aaa
jmp
sarl
stos
andl
and
pop
leave
ret
xchg
adcb
cmp
ret
sbb
iret
sbb
cmpsl
shrb
mov
iret
lock
fnstcw
negl
sahf
sub
sub
insl
lret
cli
mov
insb
jns
mov
cmp
push
pop
pop
int3
fimull
movsb
movsl
mov
adc
xchg
in
mov
loope
lahf
mov
popf
mov
movsb
arpl
jne
and
cmp
mov
cmpsb
rolb
mov
lods
and
leave
je
pop
xor
fcmovnbe
mov
mov
out
adc
out
fs
push
mov
jecxz
fldenv
jnp
lods
add
mov
out
sbb
fdivrl
ret
gs
jl
out
mov
mov
fdivl
mov
xor
scas
gs
ljmp
sub
and
shlb
imul
insb
jle
cltd
out
fisttps
insl
in
fimull
pop
shll
sbb
or
jo
xchg
test
stos
dec
imul
xor
aad
pop
cltd
mov
sub
cmp
enter
pusha
adc
sbbb
xchg
xchg
movsb
aam
xchg
and
xor
and
cs
int3
nop
jno
mov
dec
mov
and
push
sub
mov
or
gs
test
pop
dec
jmp
icebp
imul
lret
insb
adc
outsl
or
add
mov
inc
dec
fadd
gs
mov
xchg
cmp
pop
daa
mov
push
xchg
aad
jp
insb
test
adc
ret
xor
cli
pop
pushf
popa
pop
stos
aam
push
sbb
or
scas
lods
out
pushf
adc
in
or
mov
jo
xor
lock
dec
xchg
repnz
mov
gs
push
mov
jae
push
push
sbb
push
pop
shrl
push
xor
xor
push
xchg
dec
jle
cmpsl
imul
cmp
pop
mov
pop
xchg
stos
mov
jmp
bound
inc
xor
adc
or
pop
mov
dec
jge
rcrb
rorl
lds
add
cmc
adc
xlat
ret
sarl
insb
int3
jae,pt
xor
rcrb
movsb
hlt
nop
rcr
aad
call
je
movsb
ja
cld
dec
lahf
sti
jmp
cltd
mov
xchg
cs
aaa
loopne
loop
jae
insb
jl
gs
mov
add
shrb
xchg
sbb
aam
ja
in
in
push
decl
loop
cltd
jmp
cli
mov
mov
mov
xchg
sbb
sar
sub
or
mov
xlat
add
int3
adc
loopne
test
jmp
nop
and
xchg
and
mov
mov
add
ret
mov
add
push
gs
test
pop
mov
iret
cmp
jge
cmp
inc
rcr
insl
lds
loope
pop
xchg
and
jne
mov
in
xchg
ljmp
roll
adc
out
scas
push
jne
xor
or
in
pushl
cmpsb
dec
movsb
jno
mov
aad
in
adc
lock
jno
adc
sar
insl
push
out
mov
fsubs
xor
repnz
test
ljmp
add
xchg
cmc
leave
sarl
xchg
mov
or
jae
pusha
pop
cwtl
mov
stos
pop
lock
sub
stc
aas
aam
int
fs
mov
idiv
xchg
in
int
mov
int
stos
dec
xor
mov
leave
cld
je
add
int3
sar
ljmp
in
pop
int
fwait
jp
inc
sub
dec
xor
mov
dec
pop
iret
mov
bound
xchg
jne
aaa
mov
mov
mov
push
popf
popf
leave
loop
ja
mov
stos
and
je
ja
add
dec
int3
sbb
or
cmp
dec
and
adc
test
xchg
or
jb
xor
repz
cli
cltd
pop
loopne
mov
fnstsw
das
stos
mov
jecxz
and
jle
call
pop
daa
idivl
leave
push
inc
ffree
das
int
add
or
mov
mov
and
sub
lods
ret
sbb
leave
outsl
das
push
cmc
int3
ljmp
pop
in
movsb
mov
or
push
lock
cmp
test
int
fsubl
jnp
jge
sub
das
cmovne
jnp
test
cmp
sbb
cmc
jmp
dec
sub
in
aaa
mov
ja
push
push
insl
rorl
dec
sub
cltd
pop
push
in
xchg
fdiv
imul
cli
xchg
xor
pushl
mov
aaa
out
fistpl
and
jns
sahf
mov
cmpsb
xor
xchg
in
cmp
loopne
and
std
sbb
mov
or
xor
cmp
adc
jp
testl
in
gs
add
addr16
gs
fsts
lret
mov
imul
lods
mov
xchg
shrb
data16
adc
sti
add
stc
repz
pop
sti
mov
movsl
hlt
stc
mov
jns
xor
nop
push
ret
in
pop
sti
test
adc
mov
cld
or
xchg
adc
xchg
xor
sub
gs
or
add
sbb
cmp
rcr
loop
or
jno
fmull
aad
inc
cmpsl
push
addr16
movsl
addr16
pop
cltd
jb
aam
int
or
mov
or
push
sub
bound
cmc
adc
shl
je
flds
cmp
mov
adc
mov
mov
das
mov
stos
pop
pop
movsl
in
aam
add
mov
inc
pop
dec
adc
cmpsb
and
int3
pop
xor
lcall
or
cwtl
push
cmpsb
cmp
adc
mov
ja
or
inc
jmp
jle
rcrl
jecxz
mov
push
add
mov
aas
fsubrl
nop
sbb
push
sbb
adc
lock
jne
in
or
dec
stc
adc
shlb
jmp
adc
mov
sahf
pushl
and
dec
jg
dec
xor
clc
jae
repz
adc
inc
mov
stos
test
or
fcom
loopne
xlat
mov
mov
lcall
fs
cwtl
mov
push
sub
xchg
push
addl
icebp
repz
sbb
std
aaa
fstps
jecxz
popa
int
ficomps
and
or
xchg
ds
fistpll
out
jnp
sbb
cmp
xchg
jp
push
in
aam
lea
or
xor
testb
add
aad
jecxz
fsubl
insb
xlat
push
loop
mov
push
inc
jg
adc
ja
out
xchg
dec
jns
fwait
fs
cmp
cs
sbb
movsl
insl
insl
mov
dec
test
cmp
mov
xor
and
jecxz
movsl
mov
cwtl
popa
sub
pushf
in
movsb
gs
loop
enter
fistl
rdtsc
clc
sub
mov
insl
jns
fmulp
aaa
fs
stc
sahf
data16
xchg
mov
jnp
nop
xlat
mov
or
jne
jl
push
add
negb
jnp
add
js
xchg
enter
int
dec
cmp
xor
jge
aaa
scas
xchg
jmp
js
fucomp
dec
inc
stos
loopne
mov
adc
int
in
inc
or
sbb
sub
lret
cmc
ljmp
mov
aad
xchg
jbe
sbb
inc
dec
cmp
push
sar
fstp
fcoms
sub
repnz
lock
inc
jno
gs
aam
mov
jns
in
ds
hlt
add
mov
and
lods
fs
xlat
scas
dec
push
jnp
sbb
mov
adc
mov
jmp
sbb
js
add
xchg
std
or
push
jne
ret
insb
mov
add
and
gs
test
dec
sub
and
mov
pop
std
add
jg
add
inc
inc
enterw
mov
int
jle
sahf
jo
dec
imul
inc
test
addr16
fs
mov
ss
xchg
sub
repz
cmpsl
std
jnp
cmpsb
fisttpl
les
shrl
adc
ds
sbb
insl
push
and
enter
loope
dec
scas
popa
or
adc
xchg
and
andb
int3
jmp
push
cmp
aam
orl
mov
enter
xor
mov
xchg
in
add
cmpsb
repz
out
dec
inc
shrl
sbb
popa
jl
mov
adc
shl
addl
jge
lds
stos
je
jle
inc
int
push
dec
xor
sub
dec
int
int3
and
int
sub
hlt
mov
xor
popa
call
and
gs
int3
mov
aam
insl
dec
call
stc
fstl
std
xor
dec
insl
stc
jle
lret
sbb
xor
rorl
clc
add
hlt
rcrb
aas
sub
loopne
push
jb
mov
icebp
test
push
sub
in
rorb
int3
popf
pop
iret
mov
and
rcr
test
pushf
addr16
jecxz
xchg
imull
mov
pop
inc
or
aam
movsl
jae
mov
lds
xor
jmp
dec
in
jecxz
scas
inc
rolb
xchg
fmul
insl
xchg
xchg
loop
in
cmp
inc
push
inc
gs
push
movsb
outsb
ret
and
or
mov
and
pop
inc
in
mov
cmpsl
in
mov
mov
jb
lahf
faddp
pop
mov
cmpsb
jmp
fcmovne
push
inc
fdivrl
outsb
dec
and
pop
inc
cmc
leave
pop
fs
dec
insl
adc
fsts
insb
xchg
cld
inc
push
lods
das
insl
cmpsl
cmc
in
pusha
mov
jp
ficoms
add
clc
in
fmull
pop
mov
cwtl
push
outsb
and
clc
pop
mov
lahf
adc
fiadds
pusha
jge
push
mov
fs
data16
jg
dec
jge
sbb
pop
outsb
xchg
stos
icebp
test
add
cmpsl
pusha
dec
mov
pop
pusha
adc
or
fcoms
sub
stc
add
outsl
and
mov
pop
sub
popf
cmp
cmp
mov
push
aaa
add
mov
out
lcall
xchg
in
stc
faddp
xchg
iret
mov
clc
lcall
ret
insl
pop
fcmovnbe
or
dec
mov
sbb
and
push
jp
dec
lods
ss
xchg
jl
ja
lock
dec
gs
das
sbb
push
push
shrl
lock
js
xor
int3
adc
mov
mov
lea
jno
aad
pop
ljmp
jb
das
pop
ret
loopne
and
sarb
push
pop
xor
mov
fsubrl
lods
xchg
int
pop
jg
push
aam
cmc
push
add
sbb
mov
sub
fdiv
in
mov
loope
je
test
out
out
fs
ja
fwait
mov
popf
addr16
inc
jno
cld
call
mov
stos
idiv
pop
ss
jecxz
fs
enter
popf
cmp
mov
push
mov
cmp
outsl
aas
fidivl
mov
jmp
pushf
les
xor
js
in
sbb
sub
mov
mov
inc
out
adc
and
rolb
int
enter
xor
sub
add
gs
dec
sgdtl
mov
pop
aam
add
into
sub
or
loope
loope
inc
mov
pusha
mov
xchg
aam
sbb
mov
lea
in
loopne
xlat
mov
mov
inc
add
fidivs
fadd
leave
pop
jno
aad
aad
ficomps
add
xchg
adc
leave
stc
test
test
pop
data16
push
fs
sarb
mov
iret
sub
pop
jno
fbstp
sub
mov
push
std
test
mov
adc
jns
rolb
or
jmp
or
aam
cld
sete
mov
in
lds
or
out
xchg
js
inc
test
jecxz
fs
mov
inc
orb
aad
mov
lcall
loopw
mov
sub
roll
sbb
xchg
lea
test
fsts
xor
imul
fbld
dec
inc
lds
inc
repnz
lret
xchg
xchg
pop
fstl
mov
ret
scas
aam
pop
das
out
test
adc
jp
popf
xor
and
xor
loopne
jb
movsb
stos
push
leave
push
or
aam
popf
test
xchg
add
sbb
jne
fisttpl
fsubl
stc
add
movsb
int
pushf
mov
add
jmp
stos
aam
xor
rcrb
movl
shrb
jbe
inc
sub
xchg
mov
bound
add
addr16
or
xchg
fdiv
sub
pop
ret
sbb
push
xor
test
mov
and
jnp
lods
mov
cmp
outsb
insb
sub
cmc
into
sti
or
rolb
xlat
imul
pop
aam
movsb
push
lds
adc
inc
dec
scas
shrb
aad
mov
inc
insl
inc
cmp
in
scas
shll
inc
movsb
xor
or
loope
push
push
mov
call
jne
test
jb
arpl
shrb
imul
loop
mov
out
loope
lea
cmc
jmp
xchg
clc
flds
adc
aas
gs
fs
xchg
add
ss
xor
push
jp
dec
imul
pusha
int
shl
xchg
pop
adc
in
js
adc
mov
and
movsl
push
cmp
aad
mov
add
fcompl
sbb
dec
jns
or
dec
cmp
das
lock
clc
sub
lea
xor
or
sub
gs
loop
push
scas
jb
add
sbb
jbe
divl
and
lret
push
loop
addb
imul
xor
pop
sbb
dec
sub
add
test
rcrb
xchg
popl
loop
push
dec
movsb
xchg
adc
jp
or
sub
add
je
gs
out
pop
inc
cwtl
mov
fidivrl
in
dec
roll
and
mov
inc
in
mov
jno
fs
mov
cmpsb
adc
sarl
mov
inc
mov
pop
jno
or
insl
addr16
sub
je
add
mov
mov
pop
or
rorl
xchg
lods
cmp
arpl
outsl
inc
fsubrl
add
pop
test
fs
sbb
adc
cmp
fcomps
stos
mov
stos
mov
repz
xchg
xchg
jne
in
inc
lds
out
or
cmp
and
and
insl
das
jb
dec
pushf
sub
out
jmp
sub
fadd
int
out
popa
addr16
xor
sbb
sub
mov
mov
jecxz
sub
insl
in
jp
dec
aam
faddl
ret
mov
adc
sarb
or
insb
rolb
mov
xor
fldcw
jb
cmp
icebp
mov
sbbl
adc
push
xorl
js
shlw
mov
cmp
cmp
test
add
mov
dec
in
pop
ss
mov
push
aad
ds
cmp
hlt
and
stos
jecxz
or
imul
mov
dec
pmulhuw
fmul
sub
adc
lret
sbb
jns
pop
or
pop
mov
jg
cmc
dec
jnp
call
lds
sarl
or
xchg
push
ret
stc
aam
and
movsl
lea
cld
lret
mov
loop
push
xchg
mov
push
cmp
xlat
in
fstl
popf
or
push
inc
push
cmc
mov
inc
sbb
dec
adc
dec
fcoms
outsl
add
daa
cmpsb
mov
test
and
rcrb
insl
mov
into
ja
pop
mov
jne
in
out
clc
push
xorb
mov
je
xlat
imul
mov
lock
out
rcrl
sti
cmp
insl
gs
pop
popf
push
inc
sbb
fldl2e
sbb
mov
lods
lods
ja
dec
add
inc
and
sub
inc
add
mov
jnp
ja
hlt
repnz
es
push
xor
xor
sub
mov
and
mov
sub
jmp
shlb
pop
popa
in
push
add
jbe
push
stos
jp
bound
jg
mov
lahf
jl
loope
push
or
hlt
mov
int3
cmc
int
into
shl
add
shrl
add
mov
xor
lods
test
sahf
pop
cmp
xor
stos
pop
and
aam
lds
and
daa
add
sbb
popa
adc
pop
mov
dec
xchg
push
pop
inc
ljmp
pop
and
sub
fdivp
cmp
add
push
add
mov
popf
lret
mov
into
mov
mov
adc
mov
jp
addr16
pop
adc
xor
in
jmp
sub
sub
cmp
mov
cmp
test
add
xor
and
sub
dec
idiv
leave
pop
add
sub
mov
pop
xchg
aam
mov
outsb
std
sti
js
out
ja
int3
stc
sub
push
or
adcl
test
mov
xchg
mov
jecxz
mov
fistps
loop
inc
sbb
into
or
cli
mov
rorl
pop
jge
mov
daa
push
lock
fnstcw
imul
pushf
bound
xchg
jnp
sub
bound
std
scas
jnp
inc
adc
ret
hlt
push
adc
out
xchg
int3
cmp
push
or
fidivl
and
inc
pop
sub
int
push
loop
xchg
clc
sbb
inc
fs
shl
int
push
imul
xor
lea
and
das
inc
ret
andb
aam
in
cwtl
cli
adc
jne
xor
daa
jecxz
adcb
dec
sub
test
xchg
dec
cmp
vmulps
outsb
xorb
or
jge
out
stos
push
add
cmp
pop
mov
cli
jle
sbb
les
push
sbb
push
lods
or
cmp
loopne
push
repnz
cltd
imul
mov
sub
inc
test
cmpsb
mov
xchg
xchg
lea
mov
mov
gs
aam
int3
movsl
sub
shll
sbb
shll
lods
dec
hlt
arpl
sub
xchg
fsts
push
push
mov
pop
push
sarb
mov
mov
cli
mov
and
dec
insl
add
push
sub
lds
aas
push
sbb
or
aaa
sbbl
loop
idivl
cmp
xchg
adc
insb
xchg
xor
negb
jl
inc
js
mov
ret
gs
jp
decb
mov
data16
mov
stos
loopne
fdivrl
imul
xchg
call
insb
mov
out
inc
fwait
push
imul
xor
and
rcll
out
test
fldcw
push
push
cmpsb
rorb
sub
sbb
fisttps
and
sbb
lea
int
dec
lea
std
pop
xchg
pusha
or
mov
fnsave
in
jae
mov
mov
cld
jg
iret
ret
sarl
mov
stos
arpl
sub
cmc
js
andb
outsl
mov
cmp
movsb
and
or
cmp
int
cmpsb
sub
xchg
cmpl
push
and
lahf
pop
lret
outsl
ja
idivl
sub
aam
mov
add
push
push
push
stc
mov
jne
std
xchg
pop
cltd
mov
xchg
fsts
mov
mov
roll
gs
sbb
lret
jl
add
movsb
aad
sti
subb
jmp
in
lret
fs
push
add
fsts
fisttps
es
aam
pop
inc
subb
push
daa
inc
pop
sub
clc
je
hlt
bound
in
sahf
sahf
jo
dec
daa
test
jae
fnstsw
xor
mov
cmp
sarb
cs
sub
xchg
ja
dec
and
mov
hlt
xchg
xchg
fs
inc
into
aam
fdivrs
int
repz
enter
in
xor
fists
fs
mov
sbb
lods
mov
cmp
add
mov
jno
insb
mov
in
mov
cmpxchg
sbb
cltd
xchg
dec
aam
push
sahf
call
cmp
lods
movsb
imul
jle
cltd
cmc
sub
inc
xor
pop
dec
fiadds
mov
aad
lret
pop
cs
dec
dec
mov
fdivl
mov
repz
cltd
jae
mov
pusha
into
adc
cmp
jge
add
out
out
cmp
push
pusha
dec
sbb
sub
pop
xchg
mov
pop
add
cmp
sbbl
jnp
adc
push
into
out
movsb
mov
test
int3
fdivl
les
enter
mov
mov
lds
sub
stc
aas
jle
enter
lock
mov
test
popa
jnp
imul
cmc
jle
das
cld
adc
sbb
stos
int
xchg
cmpb
insl
icebp
stos
xchg
xorl
push
sub
jbe
push
push
pop
sbb
jns
jno
int3
mov
xor
sahf
xchg
fwait
dec
push
mov
out
inc
repz
jns
add
mov
dec
lods
sti
negl
test
mov
fs
xor
mov
sub
sub
jmp
jle
stos
mov
fs
mov
xchg
add
mov
addr16
pop
cmpl
outsl
jl
mov
pop
mov
in
mov
pop
arpl
pop
out
inc
and
outsb
fstps
stos
pop
shl
ljmp
sbb
in
addr16
push
lahf
sub
and
and
gs
shlb
call
xor
fs
out
mov
pop
lds
mov
adc
mov
and
or
jecxz
loope
aam
aad
fldl
pop
jns
mov
xchg
sahf
adc
fs
ret
fdivs
sub
mov
fcoms
jp
push
shll
jg
rorb
arpl
test
cmpl
sub
js
shl
xchg
xchg
in
mov
sub
insb
mov
outsb
lea
mov
clc
mov
xor
sub
or
imul
jnp
pop
arpl
gs
mov
or
in
pop
or
jge
or
adc
mov
push
bound
add
lock
mov
mov
lea
xor
pop
cwtl
fsubl
aad
shrl
pop
test
push
cmc
lods
int3
xor
push
inc
data16
clc
or
push
in
andl
xchg
push
xchg
mov
int
hlt
sbb
dec
imul
xchg
psllq
fcmovne
aam
ljmp
xchg
hlt
or
or
rorb
call
stc
adc
addb
loope
cmp
or
sub
push
jg
sbb
or
and
sbb
cmp
insb
jae
adc
out
test
mov
xchg
out
inc
xchg
mov
push
insb
jno
test
loopne
or
cmpsb
stos
sbb
mov
shl
sarl
dec
mov
push
xor
mov
mov
push
ja
jbe
pop
push
mov
add
cld
inc
jns
in
gs
in
sub
lds
or
sub
push
push
lret
in
mov
sar
fsubl
int3
fs
pop
dec
push
push
ljmp
xchg
fistpll
or
testb
and
outsl
adc
les
sbb
loop
popf
aam
push
push
int
xchg
enter
popf
outsl
arpl
std
adc
mov
and
xchg
xor
mov
lahf
pop
and
or
mov
xor
andl
daa
jecxz
sub
enter
leave
and
das
sbb
rclb
out
sbbb
cld
lcallw
or
int
xchg
push
mov
mov
lods
cmpsb
xor
jge
outsb
xchg
mov
push
mov
ret
cmpsl
lds
and
sub
inc
mov
cmp
ficompl
fisubrl
xchg
test
call
mov
stos
add
jno
aad
arpl
je
push
out
movsl
lods
adc
sub
cmpb
pop
mov
ret
cs
jae
push
sub
adc
and
pop
xor
int
or
pusha
test
xor
sub
xor
rolb
mov
dec
and
aad
test
mov
fnsave
into
sub
pusha
pop
ds
mov
dec
fmull
popf
loop
add
or
movb
dec
cmc
outsb
fcoml
inc
jne
js
add
pop
jle
out
dec
push
dec
cmp
mov
jno
fisubl
mov
rol
xchg
xchg
jno
cmp
mov
cmp
adc
ljmp
mov
test
fs
arpl
stos
pop
fs
cs
sar
stos
cmpsb
stos
xor
sbbb
ja
bound
cmp
pop
fwait
push
sbb
inc
in
mov
icebp
inc
data16
dec
mov
je
add
push
inc
hlt
cs
pop
in
and
in
pushf
outsl
sarb
dec
out
add
mov
adc
dec
shlb
in
cmp
sub
sbb
push
int
dec
scas
and
or
push
sub
sbb
ficoml
test
mov
mov
cmp
jl
arpl
push
or
jp
pop
cmp
mov
dec
imul
ja
push
pop
and
sub
xchg
or
inc
jno
js
jg
test
mov
sbb
aaa
call
sub
xlat
pop
lods
fldenv
jo
mov
cmp
mov
insb
rorl
inc
mov
pop
in
stos
std
repz
addb
dec
dec
pop
xor
negb
push
mov
adc
sub
mov
and
loop
inc
aas
xchg
dec
div
push
mov
rcll
cmpb
call
data16
push
adc
int
sbb
clc
and
out
dec
cmp
push
and
cmp
pop
xchg
dec
push
cmp
fildll
orl
stos
push
ss
cmp
xor
fs
gs
and
imul
pop
mov
mov
arpl
loope
dec
inc
cmpsb
cmp
fs
pusha
std
dec
inc
sub
add
je
data16
les
jne
mov
fs
fs
insl
cmp
divb
cmpsb
out
adcl
sub
inc
jecxz
aam
xchg
orb
xlat
jo
ret
dec
adc
pop
andb
dec
daa
add
addr16
lods
das
push
popf
cwtl
xchg
xor
and
in
push
mov
pusha
dec
mov
fwait
jno
xor
sub
cmc
or
fs
lret
fcoml
lret
cmp
push
jmp
or
push
frstor
ret
lods
dec
mov
icebp
push
or
inc
ret
rcll
rol
cwtl
scas
scas
sbb
or
push
push
xor
add
cmpsl
inc
mov
xchg
cmp
jnp
jp
enter
jne
push
dec
mov
in
and
hlt
jns
jp
dec
fwait
xor
adc
fdivrl
in
mov
stos
gs
notb
jl
push
pop
lods
sub
mov
mov
jo
inc
sbb
sahf
rcll
in
cld
cmp
xchg
or
inc
push
and
fcompl
out
push
dec
mov
push
push
lcall
in
pop
mov
subb
sub
mov
xchg
ja
popa
inc
add
xorb
dec
xor
pop
and
in
fsts
sbb
cmp
inc
cmp
push
clc
ljmp
cmp
xchg
fnstenv
imul
xchg
data16
adc
test
in
xchg
mov
fs
cmc
stc
inc
lods
jl
xchg
test
mov
jbe
mov
insl
lods
pop
mov
gs
jae
jmp
lret
inc
and
xchg
add
mov
mov
std
jo
fs
fwait
gs
ret
jp
sub
out
pop
adc
sub
les
sub
xor
faddl
out
addl
mov
stc
sub
in
int3
adc
push
mov
push
int3
testl
push
pusha
mov
daa
push
sbb
push
cltd
adc
fsubl
cmpl
mov
add
jge
or
movsb
dec
add
rcrb
lock
dec
dec
out
xchg
jmp
cmp
mov
movb
in
adc
xchg
shl
cmp
leave
adc
inc
pop
int3
aas
jmp
call
mov
add
mov
inc
jmp
pop
adc
gs
dec
fldenv
cmp
inc
xor
xor
std
lds
rorl
lock
push
jg,pt
mov
xchg
or
xchg
insb
or
stc
ret
sbb
divl
mov
in
push
mov
fmull
fcoml
dec
mov
psubw
pop
in
mov
mov
popa
fs
scas
test
push
je
movsb
das
cmpsb
in
in
xchg
inc
dec
mov
jp
sub
je
push
fstps
repnz
in
shl
mov
shlb
mov
rcrb
ror
pop
xor
mov
mov
es
mov
sub
inc
mov
popa
fs
cmpb
or
adc
test
nop
jne
pop
aas
jge
int
aam
gs
pop
data16
mov
jns
test
cmp
aad
cmp
lahf
imul
xchg
das
lret
mov
out
inc
outsb
out
mov
ret
inc
stos
ret
insl
pusha
scas
sarl
mov
addb
test
sbb
test
insb
add
inc
mov
adc
lahf
lcall
and
pop
inc
or
loopne
mov
in
movsb
rclb
adc
cwtl
in
push
loopne
pop
inc
xchg
ss
mov
sahf
or
pop
loop
xchg
sub
and
enter
pusha
idivl
xorl
push
jmp
and
movsb
dec
push
push
cs
mov
stos
cwtl
std
mov
cmp
das
xchg
lods
pop
jecxz
in
sti
cltd
sarl
repz
int3
movaps
insb
xchg
xor
in
cmp
and
dec
out
or
cmpsb
loop
loope
fsubl
push
call
adc
outsb
mov
lock
scas
jb
cmc
inc
jo
push
das
dec
sarb
xchg
sbb
orb
bound
jnp
pop
clc
mov
fs
fs
inc
mov
frstor
ret
cmpsb
mov
aaa
push
imul
loope
repz
xchg
add
sub
imulb
popa
add
imul
fs
and
xchg
lock
in
in
fsubl
push
or
or
sub
add
xor
mov
fs
inc
xor
aad
adc
ret
push
mov
pop
jmp
xor
sub
or
dec
negl
cmp
mov
jne
push
loope
pop
ret
jp
sbb
insl
mov
sbb
jp
adc
cmp
daa
mov
rcr
adc
jmp
mov
add
and
mov
ret
xchg
call
pop
pop
or
mov
ljmp
mov
push
push
push
sahf
gs
mov
cmp
jecxz
dec
and
stos
inc
lcall
mov
add
pop
dec
sub
mov
lea
jge
and
scas
xor
cmp
pop
xor
dec
dec
jecxz
clc
or
cltd
ss
dec
ret
dec
lcall
sbb
mov
push
mov
dec
inc
cmp
cmp
fucomp
inc
jl
rcr
xchg
aam
aad
mov
mov
xor
sti
mov
xchg
pop
int3
fdivrl
xchg
jb
aam
ds
loop
out
lock
sbb
jge
lahf
cmp
xchg
sbb
cmp
outsl
mov
xchg
inc
jge
adc
fisubrs
dec
mov
inc
inc
add
fdivl
mov
in
dec
cmpb
adc
hlt
or
mov
test
test
les
enter
sub
or
inc
gs
shl
repnz
and
lock
sub
and
aad
dec
cld
les
insl
mov
out
mov
enter
repnz
loopne
aad
addr16
enter
lods
test
fcomp
out
lods
ret
pusha
pop
cltd
mov
int
sahf
xor
fs
in
cmp
lahf
fisubl
shrb
xorb
push
inc
cs
sbb
aam
into
pop
sbb
pop
mov
push
gs
mov
popf
mov
jae
leave
fsubl
adc
and
pop
add
mov
push
inc
cmpsb
sub
arpl
sub
test
pop
and
aas
and
xlat
cmp
xor
mov
movsb
in
data16
sbb
cmc
xchg
pop
jl
fs
jl
setle
sbb
xchg
pop
jno
das
fsubrs
mov
movb
gs
lret
fsubl
pop
loope
or
jbe
inc
push
push
je
pusha
popa
pushf
or
adc
rsqrtps
bound
xor
xor
sbb
lock
inc
jns
fimull
push
sbb
daa
xchg
loopne
js
adc
xchg
push
push
dec
or
cmp
or
mov
rcll
leave
sub
xchg
movsb
mov
shll
and
adc
mov
push
dec
jle
add
ds
loop
in
jae
xor
dec
cmp
cmp
sbb
lods
lods
cmc
repnz
in
adc
mov
push
mov
loopne
inc
sub
cmp
xor
jae
cltd
pop
push
cmp
push
sbb
mov
out
and
repnz
cmp
in
std
dec
dec
loope
shlb
fmul
dec
nop
out
add
jne
cwtl
call
int
dec
das
rclb
jne
shl
inc
fstp
cmpsl
cmp
push
arpl
pop
pop
hlt
push
hlt
xchg
test
mov
nop
mov
or
cltd
push
loopne
mov
inc
cmp
mov
sbb
and
or
sarb
insb
cld
nop
fcompl
fimull
cmp
mov
jae
jne
movsb
icebp
mov
test
shl
sub
int
cld
scas
imull
lods
xchg
in
mov
scas
cwtl
or
pop
sub
and
inc
or
loop
and
pop
dec
inc
je
and
notl
les
xor
and
sbb
jg
and
aam
das
imul
add
out
jnp
movl
clc
aam
aam
insb
cmc
adc
add
pop
xor
mov
sub
xchg
jmp
sti
lahf
push
and
fwait
cmpsl
lret
enter
dec
roll
stos
mov
nop
and
jmp
fwait
cld
fldl
xor
not
arpl
cmp
sbb
push
jns
sub
outsb
adc
mov
cmc
fstpt
mov
adc
pop
call
nop
or
mov
pusha
in
or
in
ljmp
ss
mov
pop
lock
insb
mov
xor
mov
cli
addb
inc
imul
or
push
mov
iret
lods
dec
cmp
cmp
jg
stos
jno
push
pop
pop
sarb
inc
in
cmp
push
add
dec
andl
mov
rorb
test
cmp
mov
je
add
sub
mov
adc
mov
pop
jg
insb
cmp
rolb
dec
cmp
mov
in
inc
test
inc
pushf
add
or
dec
push
xchg
and
out
test
sbb
jmp
ja
pushf
cs
inc
jb
in
add
and
popa
and
sub
mov
ficoml
daa
pop
mov
dec
sbb
mov
mov
mov
data16
pop
outsl
mov
push
cs
sub
scas
fs
sub
jp
jge
sbb
loop
lods
lahf
sarl
sbb
mov
push
cli
pop
std
cld
add
das
test
inc
bound
sti
mov
aaa
dec
lods
es
iret
jo
ss
sbb
je
mov
shlb
loop
pop
enter
inc
stos
xchg
or
mov
pop
adc
jl
orl
mov
test
xor
lcall
sub
fsubrs
movb
testl
nop
fisubrl
dec
sbb
cltd
jmp
f2xm1
sbb
stos
scas
std
or
xlat
add
clc
sub
pop
sub
pushf
adc
clc
sub
mov
mov
inc
aas
cs
outsl
aam
les
hlt
cmc
jae
bound
shll
or
les
cmp
and
stos
cs
sti
cwtl
ret
fs
gs
ljmp
inc
or
xor
inc
popl
cltd
mov
je
dec
mov
jl
mov
mov
adc
jne
cwtl
xor
pusha
call
js
add
stos
mov
sub
mov
cmp
cmp
dec
aam
test
lret
nop
imul
lods
jl
mov
cmp
shl
ljmp
jmp
movsb
sub
and
adc
pusha
cmp
insl
icebp
test
fmull
jg
dec
rolb
out
clc
push
into
cmp
mov
test
test
fcmovne
xor
lds
mov
jle
repz
pop
pop
repz
gs
add
pop
xchg
cmp
fdivr
mov
push
cmp
add
into
cli
add
cmp
scas
sti
test
lahf
movsb
push
out
enter
add
cmc
cwtl
stos
test
xchg
out
mov
rorb
mov
pusha
fadds
lods
fmulp
or
pushf
push
nop
fucomp
mov
xchg
cli
sub
dec
sub
push
mov
mov
xchg
jae
jnp
cmpsb
push
lret
mov
psrad
push
push
sub
cmpsb
lret
xor
xchg
or
cli
rclb
lcall
pop
inc
js
mov
jae
decb
mov
jecxz
mov
leave
or
cwtl
sbb
cltd
ljmp
sahf
lods
cmp
mov
adc
cmp
ds
mov
arpl
loope
inc
add
push
add
aas
jno
sbb
fsts
dec
outsb
sarb
mov
push
or
fcomps
dec
mov
aas
jecxz
jg
jb
pop
mov
cmp
sbb
aaa
je
aam
lods
adcl
jae
rcrb
lea
jne
mov
stos
aas
and
and
fs
rcrl
xchg
mov
xor
shr
push
mov
gs
xlat
test
scas
xor
sbb
mov
test
out
jp
add
sahf
push
loope
shlb
cmp
or
adc
and
xchg
out
inc
adc
xor
pusha
xor
xor
xchg
lcall
insl
push
scas
xor
adc
arpl
arpl
inc
arpl
inc
dec
popf
mov
and
movsl
popa
hlt
div
mov
mov
rcrb
int3
dec
mov
push
js
in
xchg
idivl
bound
mov
sbb
mov
mov
ret
std
mov
fwait
daa
aad
mov
lock
pusha
push
mov
jb
test
fsub
mov
rorl
ds
lcall
jg
lret
sti
aas
repnz
adc
fistl
mov
and
enter
add
repz
or
arpl
jo
in
add
inc
mov
add
mov
das
aas
out
enter
fstl
jp
hlt
add
gs
mov
fistps
pop
fs
inc
fcoml
xor
cmpsl
sub
hlt
sbb
enter
int
pop
push
push
and
insb
pop
add
mov
mov
fsts
inc
rcrl
cmp
jno
sub
in
xchg
adc
std
xchg
stc
cmpb
xor
aaa
clc
loopne
in
jb
adc
xorl
aas
mov
sbbb
das
push
and
jmp
lret
test
rorl
mov
lds
mov
int
ja
adc
pop
and
and
xchg
inc
add
xchg
push
test
inc
jmp
mov
sbbl
dec
jle
mov
cmp
dec
mov
flds
data16
cmp
jmp
inc
loope
mov
imul
xor
stc
push
jmp
mov
dec
inc
or
xor
cltd
jmp
mov
punpckhwd
lds
sahf
sti
adc
sbb
jno
movsl
aad
stos
xor
test
inc
cmpsb
mov
jne
push
in
cmp
adc
pop
mov
inc
inc
push
push
repnz
inc
lcall
jmp
pmulhw
sti
jg
xchg
test
cmp
out
hlt
cli
insl
inc
dec
inc
ja
fisttpl
addl
dec
and
jl
mov
cmp
sub
mov
aas
mov
mov
cwtl
sub
aad
add
push
sub
iret
pop
out
pop
push
cmc
xor
ret
cmp
dec
cmp
mov
add
xchg
fldl
ret
ds
xor
dec
push
or
sub
pop
jmp
in
mov
shll
push
hlt
xchg
or
shl
and
pushf
push
out
pushw
fdivrl
add
in
dec
xchg
aam
mov
push
das
sbb
cmp
adc
aaa
xor
ret
dec
out
lock
jg
jge
xor
mov
ljmp
xchg
scas
xor
inc
stos
aam
mov
jmp
mov
cmpsb
ds
mov
in
popf
aad
adc
sbb
mov
fwait
mov
out
fsub
mov
lcall
jmp
push
jecxz
add
pop
insb
and
xor
sti
xchg
outsb
popa
popf
cli
stos
add
mov
cli
out
stos
cmpsb
lret
lret
rcl
xlat
push
mov
xchg
lods
adc
or
jle
push
incb
mov
je
rcrb
jbe
xchg
cmp
dec
and
jo
xchg
pop
pop
push
xchg
sti
push
jo
loop
jmp
sub
and
cmp
movsb
mov
or
stos
jmp
out
pusha
in
jp
sbb
imull
movl
pop
add
in
mov
loope
aad
pop
ds
mov
push
xchg
xor
adc
cmp
jg
dec
sar
cmp
iret
loopne
pop
and
push
fst
arpl
cmpsb
lahf
shll
pop
push
fnstcw
sub
add
int3
cwtl
insl
xor
and
jp
xchg
and
flds
cld
icebp
xorb
sbbb
xor
push
ficompl
ret
gs
sar
mov
mov
aas
dec
ljmp
loop
jl
pop
sbb
call
cmp
fdivrs
lret
stc
or
pop
dec
adc
mov
xchg
pop
mov
mov
inc
daa
mov
out
cmp
lds
scas
jae
pop
pop
cwtl
add
scas
pushf
jle
pop
not
adc
adc
cli
cmp
rcrb
sbb
imulb
xor
sub
lret
lods
arpl
adcb
mov
icebp
hlt
fxtract
jbe
push
dec
test
cmc
jp
or
sbb
push
int3
inc
inc
push
mov
les
add
inc
int
jg
in
lret
cmpsb
push
out
add
int3
nop
popf
test
mov
pop
push
add
mov
imulb
sbb
js
add
add
lahf
jo
mov
stc
jb
data16
pop
nop
pop
cs
and
out
inc
push
hlt
pop
ds
lcall
aam
inc
gs
shll
and
xor
mov
iret
lahf
mov
sbbb
clc
js
push
xor
iret
push
jg
js
jmp
add
mov
sub
fsubrl
push
xchg
xor
ret
nop
and
jbe
ret
xchg
mov
cld
loope
das
inc
int
jecxz
insb
xchg
mov
mov
lea
jg
lret
sub
xor
mov
out
xchg
sbb
popl
and
subb
fcoms
add
sbb
fstl
jae,pn
mov
jns
dec
test
lret
fdivl
lea
jo
rorb
jne
pusha
add
scas
fsubl
int
addr16
jns
mov
add
sti
cmp
std
pop
push
ret
std
cmp
das
sarl
or
enter
mov
fidivrl
jmp
mov
fs
xchg
andl
push
lret
inc
aad
pop
lcall
add
aam
or
jl
das
dec
jecxz
push
outsl
inc
xor
push
jae
add
sbb
xor
cmpsb
cmp
pusha
mov
inc
pusha
loop
mov
aaa
push
xchg
cmp
mov
orl
sub
push
arpl
push
pop
and
scas
ret
adc
pushf
xor
fisubrs
sub
push
mov
jge
fs
shll
jae
xchg
sub
nop
xchg
cmp
test
push
jp
lock
jl
pop
xor
inc
cmp
lds
adc
or
inc
xor
push
ret
push
add
cltd
xchg
shl
leave
hlt
sub
inc
aam
cmp
xor
jp
push
dec
dec
in
iret
push
mov
jbe
cs
add
pop
repz
pop
push
rolb
fiaddl
call
subl
out
mov
ret
into
mov
pop
loope
xchg
sarl
fucom
jnp
cmp
out
adc
fnstcw
loope
stos
mov
jbe
cmpsb
rep
fstpl
inc
data16
scas
sub
and
and
scas
negl
push
ljmp
jae
xor
lods
mov
ds
add
mov
mov
push
xchg
dec
aas
mov
sahf
fs
fisubrs
sub
shlb
sbb
jp
cmp
icebp
test
mov
jp
mov
sub
cld
cld
cmp
int
cmc
mov
popa
inc
inc
je
pop
jl
push
addr16
xchg
jecxz
push
inc
mov
outsl
aas
cmp
scas
jecxz
fsave
call
enter
jnp
pop
mov
ret
xor
in
push
sub
scas
imul
dec
or
popa
sbb
aas
push
cltd
fchs
loope
mov
mov
rclb
in
mov
lahf
pop
inc
inc
imul
dec
xchg
int3
mov
jb
cmp
int3
push
js
xlat
cmp
sar
loop
mov
fsubs
lret
pop
pop
jb
cltd
xchg
loop
fdiv
mov
leave
push
negl
mov
or
jle
nop
insb
loop
jo
cmpsb
iret
lret
testb
pop
sbb
fmuls
inc
dec
jno
iret
or
cmc
cs
sbb
dec
or
push
push
mov
scas
xchg
lea
insl
pop
adc
mov
stos
push
jno
xchg
add
mov
hlt
cs
xlat
data16
sub
dec
mov
mov
ror
pop
xor
cmpsb
jg
sahf
inc
loop
clc
push
outsb
into
shlb
lret
int3
out
scas
add
or
mov
data16
adc
mov
lea
lea
pop
imul
adc
jecxz
test
push
mov
int3
idivl
lcall
jecxz
xchg
addb
push
adc
std
test
das
ljmp
cmp
adc
test
sbb
in
out
les
icebp
add
ss
pushf
lret
popl
loope
sbb
into
push
mov
data16
sub
mov
and
scas
mov
out
cmc
xchg
sub
or
sub
movsb
cmp
outsl
sub
or
jb
push
loope
fucom
adc
into
or
adc
or
lahf
cmpsb
orb
and
mov
repz
int3
xor
fnstsw
sar
mov
aaa
loopne
fadds
push
jp
gs
shlb
mov
subb
add
dec
cli
mov
xor
repnz
dec
adc
int3
push
sbb
xor
mov
imul
hlt
mov
sbb
shrb
sbb
testb
in
xchg
hlt
cmpsl
sub
data16
mov
push
adc
pusha
stc
cmp
in
adc
jle
dec
fucom
repnz
lcall
loopne
stos
pop
aaa
xor
cmpps
mov
test
dec
sti
jno
in
or
repnz
xchg
dec
or
or
int3
dec
mov
repnz
pop
sbb
sarb
fmull
in
sbb
adc
pop
cmp
jge
fwait
inc
pop
lcall
and
orb
xchg
shll
jle
sbb
ljmp
inc
shll
shrb
and
xor
sbb
cmp
mov
mov
cmp
mov
hlt
jno
mov
daa
push
pop
pop
and
flds
sbb
xor
or
fwait
subl
loope
in
lea
mov
addb
je
xor
imul
push
mov
mov
data16
and
adc
lods
xchg
stc
hlt
sarb
or
inc
mov
mov
cmc
mov
jmp
and
cli
mov
hlt
pusha
cmp
ss
xor
mov
dec
leave
fstpt
pop
fisubrl
mov
adc
add
xchg
xor
push
pop
pushf
add
fisttpll
sarl
fdivs
pop
call
addl
rcll
int3
xchg
sub
int
jmp
cmpsb
and
testl
jno
pop
pop
mov
pop
and
xchg
fbld
and
cmp
xchg
or
mov
dec
cli
adc
adc
frstor
testl
aaa
add
in
lret
inc
out
shrb
hlt
addb
jnp
adc
push
jmp
push
mov
cs
sub
adc
lods
fsubrs
dec
sarb
xchg
pop
inc
adc
rorb
arpl
stos
sbb
adc
and
sbb
push
lods
icebp
mov
mov
xor
jge
mov
insb
orb
dec
or
rorb
sbb
ret
sub
stc
mov
xor
dec
xchg
call
jp
dec
xor
aam
mov
sub
pop
or
jge
loop
lea
sub
dec
mov
popa
cmp
fisubl
xlat
sbb
rcl
add
loope
push
aad
fldl
aaa
mov
adc
lods
cmp
sub
xor
xor
ss
adc
std
int3
jb
in
stos
sbb
fmul
into
mov
cltd
cmpsl
mov
pop
int
mov
cli
xor
push
les
jnp
jg
inc
or
outsb
mov
addr16
cmpsb
pop
dec
pop
hlt
and
mov
test
add
icebp
mov
cld
repz
outsb
aas
repnz
inc
sarb
cltd
mov
xchg
das
add
jecxz
sub
je
std
and
mov
outsb
and
stos
or
movb
mov
addr16
sbb
xor
xor
scas
fdecstp
pusha
pop
shld
adc
adc
pushf
dec
dec
ret
call
or
mov
outsl
mov
inc
push
sub
mov
jmp
jge
adc
inc
clc
mov
mov
add
das
and
iret
pop
les
ja
mov
clc
aaa
mov
push
mov
inc
xor
aam
test
insl
or
add
xchg
cs
pop
lds
dec
mov
xchg
jno
mov
xchg
jmp
sub
fldl
push
mov
mov
jnp
pop
je
stc
pop
adc
loope
push
std
stc
or
in
enter
adc
imul
out
mov
xchg
push
lahf
jecxz
lds
inc
push
repz
movsl
int
ficompl
lock
andl
fcmovb
stos
mov
xor
ljmp
jle
and
push
and
movsb
and
add
xor
es
jge
sahf
cld
dec
fcomip
arpl
mov
mov
pop
sbb
dec
fldlg2
dec
jg
test
inc
repz
and
imul
mov
xlat
adc
pop
arpl
dec
dec
push
xor
jne
movsl
xchg
dec
clc
mov
ja
or
sub
rcrl
dec
xor
test
repnz
xor
mov
and
repnz
into
dec
push
fsts
loopne
jge
repnz
aaa
cmpl
mov
pop
dec
push
dec
cmpsb
jl
dec
dec
fiaddl
pushf
lea
cmp
mov
lock
or
push
cmpsl
sub
out
sub
push
xor
ficoms
repz
loope
mov
and
mov
test
dec
ljmp
mov
cmp
and
push
insl
inc
jae
and
insl
sbb
jb
jmp
mov
incb
jle
pop
sbbl
enter
loope
jae
dec
adc
mov
and
sub
clc
repnz
outsl
das
fstps
ss
mov
cmp
add
mov
mov
xchg
subl
andb
pop
jg
loop
fdivl
cli
insb
inc
or
jne
add
adc
xchg
cld
pop
and
int3
sbb
into
aam
in
test
stos
dec
fwait
sbb
jnp
xchg
loopne
imul
jle
adc
adc
add
loop
pop
mov
adc
idivl
sub
jmp
xchg
xchg
lods
or
xchg
xorl
add
mov
add
xor
xor
dec
dec
cmpsl
andb
movb
xor
enter
xchg
xor
pushf
mov
into
lods
pop
pop
cmc
rcll
jno
pop
scas
sub
cmp
sbb
cmpsb
add
test
xchg
nopl
and
std
and
xor
cmp
lds
xor
adc
mov
int3
cwtl
inc
aas
dec
aam
pop
or
jecxz
jge
sarb
int3
inc
jge
cwtl
add
push
lods
pop
cmpsb
adc
and
sub
fldenv
sub
testl
add
add
aas
cli
adc
lcall
fcompl
mov
test
sarb
repnz
sbb
orl
movsb
andl
int3
aad
xchg
inc
inc
test
jmp
cmp
popf
inc
xor
cmp
inc
iret
add
outsb
mov
adc
fisttpll
iret
repz
mov
and
orb
enter
jb
jnp
mul
imul
dec
xor
add
or
movsl
and
das
lods
xchg
jo
dec
jne
mov
push
push
cmp
and
xchg
cmp
or
shlb
imul
and
jg
ret
pop
loopne
xchg
adc
add
adc
jle
test
nop
cmp
inc
rcrb
dec
push
jl
stc
sub
cltd
mov
xor
shll
rcrl
fldcw
pusha
sub
mov
inc
loope
jg
inc
mov
loopne
negb
mov
xor
xchg
fwait
pushf
pop
or
add
dec
test
push
push
addr16
pusha
mov
and
ljmp
orb
call
ljmp
frstor
in
cmpsl
cwtl
ret
fcmovnu
dec
dec
dec
inc
add
dec
and
mov
sahf
les
mov
xor
or
je
inc
out
xor
push
pop
aad
jg
test
xchg
rcrl
cwtl
xchg
and
jo
sarl
xchg
pop
cli
mov
pop
push
xchg
cs
xlat
aas
and
xchg
mov
adc
lret
or
xchg
test
les
and
push
sarl
aas
es
pop
xchg
les
enter
xor
fwait
ja
imul
les
cmp
and
stos
jns
je
sbb
xor
jecxz
adc
and
test
std
inc
mov
jae
pusha
shrb
test
fdivrs
arpl
outsl
mov
push
imul
xor
imul
cmp
int
mov
mov
mov
out
cmp
inc
mov
inc
pop
out
dec
adc
cld
adc
ds
aad
ja
add
sub
xor
mov
jno
dec
std
int3
lret
xor
pop
fildl
lahf
xor
rcrl
adc
test
inc
or
push
jmp
and
lds
or
jne
xchg
out
and
add
xchg
mov
lds
adc
rol
mov
aam
and
xchg
sub
and
xor
or
nop
jg
sub
in
daa
test
push
mov
lret
les
rcl
insl
sub
call
imull
stos
imull
stos
out
push
loope
and
cmp
lea
testb
and
cld
pop
mov
dec
dec
out
push
xor
xchg
jmp
mov
jmp
jne
nop
repnz
jne
rcr
add
or
or
jmp
in
inc
js
cmp
sahf
jno
mov
imul
in
insb
scas
push
scas
lea
and
inc
loopne
xlat
push
mov
push
lret
les
and
pop
test
xlat
dec
cmp
cmp
popf
hlt
insl
aam
fsubr
fwait
ljmp
les
mov
pusha
fildl
les
ret
test
and
cmpsl
sbb
sub
and
sbb
xlat
sbb
push
movsb
out
movsb
mov
mov
stos
enter
lret
mov
outsb
push
movsl
clc
xchg
stos
xor
xor
jmp
ds
lods
mov
mov
fisttpl
movsl
into
lods
les
roll
push
mov
int
push
stos
aam
loop
dec
xchg
fiadds
loopne
fstl
cmp
xorl
xor
xchg
cs
mov
push
or
dec
xchg
adc
mov
dec
lods
popa
stos
subb
cmc
sbb
sub
cmp
ja
mov
xchg
adc
add
xchg
push
rorb
push
cmp
cmp
xchg
in
nop
outsb
mov
cmp
inc
fldt
dec
inc
jbe
pop
jecxz
push
das
and
insb
cld
sbb
and
and
lcall
adc
cltd
sahf
push
add
pop
bnd
js
sub
pusha
fisubs
sbb
sub
arpl
insl
rolb
lock
rcrl
push
push
dec
imul
mov
pop
adc
jo
imul
dec
fs
mov
stos
fbstp
movsl
jp
fsubl
dec
decl
testl
sub
enter
stc
in
test
push
lret
addr16
xchg
or
and
testb
cmc
rorb
out
movsl
pop
cmpsb
rorb
mov
aaa
mov
lock
insl
cwtl
mov
sbb
out
sbb
rolb
xchg
xchg
push
hlt
mov
mov
adc
lods
sub
daa
insb
mov
xchg
mov
cmp
movsl
pusha
leave
lds
mov
xchg
sbb
jns
stos
ss
jne
sahf
mov
cli
fwait
cmp
mov
xchg
testl
aam
iret
mov
nop
aad
mov
mov
sbb
xchg
jnp
jo
lret
mov
xor
adc
pop
pop
jo
mov
and
adc
and
dec
or
cwtl
cmc
fwait
mov
into
pop
mov
push
cmpsb
ret
and
cs
stos
mov
push
cmpl
add
mov
aas
add
mov
or
xor
add
rorb
and
sub
jo
lods
ljmp
jns
mov
imul
mov
push
sub
and
xor
push
xchg
lods
add
in
or
inc
hlt
dec
les
sub
mov
pop
jne
imul
xchg
sub
jns
xor
mov
pop
mov
dec
xor
fidivs
cmp
iret
push
jl
add
popa
imul
call
in
xor
subb
insl
sbb
les
insb
into
jns
pop
inc
pop
jge
in
or
int3
sbb
dec
adc
cltd
mov
sbb
pop
jecxz
or
xor
adcb
sbb
mov
dec
je
lsl
loope
in
insb
mov
lods
and
ret
pop
jg
mov
add
jb
jle
inc
imul
sbb
out
testb
ljmp
clc
xor
movsb
bound
xchg
sti
scas
lock
ljmp
xchg
in
lods
mov
push
aaa
movsb
out
cld
push
sbb
lea
sbb
add
movsl
ja
fs
dec
jl
add
in
and
sub
xor
or
xchg
test
pushf
fistpll
mov
stc
mov
popa
out
cmp
add
int3
cmp
jne
lods
push
push
inc
stos
xor
pop
and
xchg
mov
sarb
cmp
shlb
out
sahf
inc
shr
popl
mov
lahf
lods
add
xor
mov
mov
jmp
cld
cmp
add
test
xor
and
xchg
pushf
adc
popl
jns
popf
sub
outsl
inc
out
pop
mov
adc
pop
sbb
adc
lcall
in
xchg
mov
fcmove
les
subb
mov
push
adc
ja
cmp
sbb
repz
sbb
in
or
lods
lds
and
mov
dec
inc
cmp
push
ftst
mov
add
out
xlat
add
cmp
lds
jne
cmc
jmp
loop
lds
je
sub
repnz
mov
loopne
test
xor
sbb
sbb
add
xor
imul
sbb
or
pop
icebp
sbb
dec
daa
add
test
fstl
movb
xchg
es
jle
fwait
xchg
fmull
scas
mov
jecxz
lea
popa
push
cmp
shl
pop
mov
lods
xlat
mov
insb
pusha
sti
adc
ss
and
mov
pop
lock
stc
xor
sarb
mov
pop
popf
aam
int3
cmp
and
into
cwtl
push
shlb
pop
std
adc
in
inc
fldenv
sbb
adc
xchg
in
xor
and
imul
xchg
adc
cmp
push
xlat
into
mov
pusha
movsl
and
adc
inc
stos
jns
pminub
jo
sub
sub
xor
sub
ds
mov
push
sub
adc
leave
pushf
fs
arpl
dec
addr16
jb
mov
daa
aam
cltd
adc
sub
mov
sbb
std
ja
pusha
pop
pop
or
test
mov
fwait
jnp
cmp
mov
push
cs
cmc
cmp
jno
or
xchg
test
sti
xchg
lds
mov
test
fcompl
push
mov
or
jne
loop
xor
mov
aam
adc
push
sbb
movsl
and
dec
mov
lds
shrb
stos
sbb
movsb
cmp
mov
xor
xor
xchg
add
out
adc
jb
stc
fildll
ret
mov
mov
and
fsubs
lret
xchg
fwait
dec
int3
inc
sub
insb
xchg
insl
out
sub
loop
out
sub
xlat
rcr
xor
xchg
xchg
mov
dec
bound
inc
xchg
mov
sbb
aaa
fistpl
pop
push
stos
in
inc
out
and
arpl
xchg
pop
std
sbb
push
into
daa
stos
ret
imul
ret
xchg
or
push
inc
mov
mov
mov
xor
roll
jg
cli
aam
mov
ret
xchg
mov
mov
outsl
clc
push
stos
in
enter
popf
test
xchg
arpl
cmpsb
add
data16
loopne
sub
add
subb
mov
cmc
adc
inc
xlat
mov
or
pop
xor
scas
aam
pop
push
or
inc
int
lods
imul
and
js
push
dec
cmp
divl
mov
xor
insl
repnz
sub
lods
outsl
jecxz
sbb
push
push
pop
push
lret
data16
xor
or
out
out
push
imul
cmp
mov
repnz
push
push
int
ficomps
aam
loope
ljmp
pop
and
inc
fs
cmp
out
xchg
add
or
ss
fcmovnb
nop
test
mov
sub
or
nop
popa
and
cmp
xchg
dec
rol
mov
push
stos
xlat
test
pop
sahf
cmpsb
and
xor
std
cmc
stos
repz
add
mov
scas
push
adc
sbb
push
jno
out
cmpsb
test
mov
and
push
outsb
lds
push
jns
sub
mov
lcall
sti
dec
rcrl
jmp
jb
in
mov
mov
nop
imul
mov
mov
aad
mov
mov
test
inc
ss
aad
mov
flds
out
imul
dec
jle
sbb
cld
test
leave
mov
adc
pop
push
ret
or
jge
xor
ja
lret
dec
sub
mov
mov
mov
ja
hlt
aam
js
pop
dec
insl
in
cmp
arpl
dec
fcompl
fucomp
dec
stc
fcom
and
dec
add
icebp
into
fwait
xchg
in
sbb
mov
mov
jbe
or
and
stos
test
xor
jge
add
jb
jg
imul
imul
jecxz
insl
call
adc
sub
inc
test
adc
xchg
lret
sbb
negl
add
es
mov
xchg
xchg
jno
pop
inc
pop
cmpsl
mov
int3
mov
sbb
rolb
adc
nop
inc
sub
or
in
add
cmc
test
pushf
out
outsb
or
cmpsb
andl
xorl
roll
aad
sub
imul
int
iret
inc
fisttps
push
pusha
icebp
jle
push
dec
dec
std
stos
cs
hlt
lds
std
loop
mov
shlb
pop
and
call
cmp
xor
mov
and
movb
roll
pop
xchg
out
popa
push
dec
movsb
rorl
dec
ljmp
movsb
idivl
out
test
jl
xor
jp
or
lahf
bound
xchg
xchg
repnz
std
cmp
dec
ret
inc
mov
fwait
push
orl
std
mov
int
pop
dec
sub
or
cmp
dec
inc
mov
mov
or
jb
push
ljmp
pop
loop
xchg
into
sbb
jnp
out
mov
cmp
fmul
dec
shlb
mov
daa
ljmp
mov
mov
xor
in
adc
rcrl
popa
push
xchg
loope
gs
data16
and
bswap
push
leave
jp
cmp
enter
mov
xor
addr16
jp
mov
call
ret
push
xchg
sub
and
mov
test
jl
pop
push
mov
add
outsb
or
pop
inc
add
xor
or
daa
dec
clc
aas
loop
pop
xchg
sbb
scas
jo
mov
cmpsl
mov
outsb
sbb
jbe
and
lods
outsb
pop
insl
xor
xor
cmp
and
sub
cmp
imul
lret
hlt
mov
mov
push
fmul
pushf
nop
dec
cmp
jb
jnp
flds
push
jge
pop
ss
mov
inc
insb
adc
int3
and
repnz
jl
xchg
ficoml
push
fucomip
xchg
sti
iret
and
sbb
add
cmp
push
andb
xor
shl
adc
mov
xor
add
xor
int3
cmc
ret
sub
pop
js
cltd
mov
xchg
fimull
lods
popf
inc
dec
push
stc
stc
mov
mov
fwait
popa
jno
fsub
dec
leave
out
and
lock
shlb
sarl
aad
adc
aad
arpl
inc
adc
adc
sub
mov
adc
fcmovnu
aaa
shll
mov
xchg
dec
out
jnp
ret
jle
pop
dec
mov
insb
decl
mov
pop
repnz
dec
push
lds
ss
cmp
lock
xchg
ss
hlt
aaa
pusha
mov
xchg
xchg
in
int
mov
pop
push
cwtl
jle
aas
int3
add
xchg
jno
or
adc
xchg
cwtl
and
dec
adc
push
xchg
xlat
icebp
loop
mov
dec
sub
dec
lds
push
shll
pop
pusha
push
sub
or
cld
mov
push
cmp
popf
outsb
std
jge
jne
bound
pop
add
pusha
adc
imul
dec
jno
arpl
lea
dec
cmp
or
in
fcompl
xor
xchg
rcll
mov
xor
fs
and
xchg
cmp
lds
mov
adc
inc
lea
mov
adc
pop
pop
jp
fsubrs
jbe
fs
sub
push
repz
cld
in
sub
iret
push
cmp
cwtl
mov
enter
vpcomb
xor
loopne
out
fdivrl
or
jg
cmp
sbb
mov
sbb
shrb
rcr
or
push
push
xchg
sub
cli
pop
cmp
inc
mov
push
pop
pop
xchg
rorl
cwtl
fdivl
daa
int
fidivrl
icebp
jno
iret
lods
push
jmp
add
inc
and
mov
sbb
push
pop
lds
and
mov
or
fldcw
and
fcomi
add
and
adc
cmc
xchg
repnz
cmp
outsl
adc
mov
aad
lcall
cmp
addb
xorl
pcmpgtd
add
cwtl
aaa
shrd
jp
push
popa
adc
leave
fs
into
and
mov
cmp
test
mov
push
loopne
mov
lcall
mov
insb
lods
lock
fistps
dec
mov
dec
cmp
jae
in
mov
int3
fbld
andb
and
and
xchg
jg
int3
rorl
adc
push
imull
outsl
mov
clc
lcall
neg
cli
inc
aas
ljmp
mov
shl
icebp
out
fnop
mov
mov
xor
inc
bound
test
pushf
inc
jae
popa
js
subb
and
scas
out
and
push
sahf
sbb
pop
sub
push
xlat
enter
leave
stos
jmpw
addr16
cltd
divl
cltd
das
setns
push
mov
mov
push
in
cmp
push
sub
or
test
aam
inc
mov
cmpsb
jb
int
or
dec
leave
pop
xor
faddl
xchg
add
dec
push
out
pop
pop
jo
fs
aam
jle
sub
shlb
inc
subl
gs
sbb
imull
cmp
xchg
add
jns
mov
xor
cmp
ljmp
cmc
js
mov
in
jbe
cltd
je
repz
loopne
shll
int3
xor
jmp
nop
jae
shl
lock
lock
push
and
mov
jp
dec
data16
neg
fildl
jae
enter
shl
pop
outsb
jle
rorl
xor
adc
repz
aam
xchg
and
fnstcw
pop
cmpl
fs
adc
mov
push
rcr
rorl
pop
sbb
lods
icebp
sbb
adc
fnstenv
mov
clc
cltd
mov
xchg
pop
add
push
mov
fs
cmpsl
outsl
or
and
mov
loop
sbb
scas
xchg
xchg
add
out
jmp
ror
fsubl
inc
and
push
ljmp
cld
add
xor
mov
int
and
xchg
int
sub
mov
or
addr16
out
xchg
in
pusha
jns
mov
aaa
out
xor
idivb
gs
out
dec
ficoml
fneni(8087
jae
push
inc
mov
push
or
insb
mov
enter
mov
ret
mov
imul
inc
sub
jne
icebp
mov
or
repnz
aaa
std
mov
or
out
stc
jno
jnp
movsb
cli
ret
popa
jmp
mov
sahf
in
dec
mov
iret
sub
xor
mov
insl
rcrl
mov
xlat
push
in
and
cmpb
inc
dec
cmp
mov
mov
insl
xor
xor
or
or
inc
imul
insl
push
in
jae
jb
or
hlt
push
pop
adc
aam
mov
mov
mov
scas
mov
test
fsubrs
push
or
and
aaa
sub
mov
rol
lods
stc
mov
mov
and
and
scas
push
mov
xor
push
and
ljmp
pop
notb
xor
in
scas
sub
jnp
gs
cmc
xchg
mov
je
and
xor
das
sbbb
cltd
mov
xor
ja
rorl
aam
or
mov
xchg
jl
insl
dec
cli
mov
pop
aam
faddl
repnz
rol
in
push
repnz
andb
adc
xchg
pop
or
stos
in
lds
sub
pop
dec
cmp
loope
mov
int3
push
cmpsl
fbstp
sub
bound
insb
scas
ret
jecxz
cmp
and
int3
push
gs
xor
jle
inc
push
aaa
sub
cmp
push
mov
loopne
mov
lret
in
cmp
out
je
loop
xor
shlb
fcmovnbe
iret
testb
test
ljmp
test
mov
mov
dec
into
repz
mov
sub
sbb
push
insl
inc
loopne
or
js
fwait
js
inc
bound
in
mov
lahf
mov
or
or
lods
out
or
test
es
lods
cmpsb
lea
stos
cmpsb
mov
jl
cmp
sub
sub
call
pop
mov
clc
cmp
in
enter
aam
xor
rcr
inc
push
jno
dec
jge
cmp
pop
or
mov
loop
dec
jl
aad
or
sub
cmpsl
add
adc
mov
rcrl
fcom
outsb
sbb
dec
pop
push
xchg
add
pushf
fdivrl
or
mov
lods
jmp
fstp
pushf
inc
jns
dec
mov
adcb
and
xor
or
fldl
fstl
dec
loopne
jo
xor
call
push
jl,pt
xor
fs
add
insl
outsb
test
fsubrs
cmpl
cmp
out
das
inc
nop
and
and
or
fcompl
and
mov
lahf
out
xor
and
push
pushf
cmp
mov
cmc
cmpsb
xchg
fildll
and
push
jle
push
cwtl
cmc
movsl
or
jmp
xor
xchg
xor
das
movsl
inc
fldcw
jge
je
cld
mov
pop
ss
mov
clc
call
int3
xlat
fbld
mov
sbb
mov
jno
cmpl
aad
inc
stos
or
pop
das
jns
inc
out
das
lcall
push
loopne
mov
mov
mov
insl
aad
xchg
mov
add
aas
jbe
sub
cmp
out
aam
ja
test
push
aad
mov
out
roll
sub
add
hlt
push
jo
movsl
xchg
repnz
push
cmpsb
mov
cmpsb
cmp
es
mov
int3
sbb
push
pushf
mov
cmp
lret
aas
or
mov
fdivr
lret
andb
xor
or
int
dec
push
fidivl
out
inc
mov
aad
cmp
repz
mov
xchg
fsubl
insb
jbe
add
push
add
dec
pop
icebp
inc
jg
dec
xor
sahf
pop
jge
xchg
add
lods
sbb
cmc
dec
and
loope
xor
insb
and
dec
into
fldt
xchg
ret
shrl
jne
mov
je
mov
ss
add
test
cmp
mov
fadds
stos
stc
fstps
mov
icebp
shrb
push
adc
and
sub
in
mov
clc
adc
call
std
mov
mov
dec
test
clc
push
leave
and
xchg
lahf
jns
aaa
js
adc
adc
decb
sbbl
repz
in
aad
mov
mov
gs
not
sar
outsb
jnp
in
and
aad
repz
test
mov
inc
push
ret
je
int
je
test
xchg
cmp
loopne
scas
jecxz
lret
aad
cmp
setg
fsubp
jg
push
shll
sbb
fs
pop
inc
dec
push
shr
rorb
insb
xor
xchg
sti
dec
lds
ret
add
jmp
mov
or
xchg
or
jl
jg,pt
mov
hlt
jecxz
mov
aam
push
push
das
fs
or
inc
fldenv
fdivrl
cmp
mov
out
push
dec
pop
adc
insb
cmc
push
add
lret
pop
add
enter
lea
xchg
mov
enter
in
dec
xor
push
xor
dec
sub
out
push
pop
cld
sub
mov
jno
push
mov
mov
pop
mov
sbb
mov
xchg
jmp
mov
icebp
pop
pop
or
push
sbb
les
enter
addr16
and
int3
gs
in
repz
popa
in
sub
gs
pushf
popf
out
pop
jge
aam
movsl
addb
mov
outsl
mov
pop
aad
push
jns
mov
xchg
lcall
or
hlt
dec
movsb
xchg
jecxz
ud2
cmp
in
insl
hlt
xor
add
or
pop
fs
test
dec
and
loopne
push
daa
xchg
xlat
mov
dec
int3
add
inc
dec
test
jge
and
pusha
or
lret
int
call
mov
xor
push
insb
sbb
adc
sbb
mov
jo
loop
sbb
mov
inc
ret
movsb
dec
adc
lods
enter
push
push
jmp
stos
lahf
inc
xchg
les
adc
jge
hlt
cmp
xor
xchg
divps
mov
loope
enter
pop
inc
push
xchg
lods
lea
push
dec
xor
and
sub
fnstenv
push
in
stc
jl
mov
pop
pop
int3
in
sbb
or
cmp
into
icebp
fucomi
push
cli
cmpb
xlat
xrelease
mov
aam
fimull
sbb
nop
xor
dec
fwait
mov
in
or
mov
xchg
sahf
dec
or
mov
fnstsw
or
mov
in
and
cmc
pop
fucomp
in
xor
mov
sub
and
mov
sbbb
pop
ja
rorl
int
sbb
addr16
add
loop
xor
sub
xchg
inc
xchg
aad
add
push
loop
pushf
outsb
test
andl
mov
pusha
popf
into
sub
ja
mov
stc
pop
int
sbb
pop
pop
aam
sarb
mov
ret
mov
cmpsl
cltd
dec
mov
mov
and
cltd
jo
outsl
sbb
mov
int3
sbb
pusha
gs
je
popa
clc
mov
icebp
movsl
mov
ja
test
ret
data16
cmpsb
test
fisttps
jl
mov
fs
jbe
xor
sub
lods
jns
in
js
xchg
mov
adc
sti
in
filds
mov
jp
cmp
pop
cwtl
pushf
lock
push
fldenv
inc
ljmp
sub
dec
movsb
sbb
scas
fs
and
cmpb
sub
adc
ljmp
lcall
rorb
enter
sbb
lcall
pop
fneni(8087
lods
mov
push
rcrl
add
lock
pop
push
clc
xor
cmc
mov
gs
outsl
dec
dec
inc
int
stos
test
fidivrl
xor
int3
jle
cltd
lret
jo
push
inc
mov
inc
xchg
push
mov
fstpt
or
dec
or
xchg
add
ljmp
test
and
push
dec
mov
sub
xor
outsb
sbb
out
cltd
mov
fidivl
push
and
imul
int3
pop
fs
in
pmaxub
jecxz
divl
pop
push
sub
dec
xor
mov
dec
push
les
pop
mov
mov
xor
dec
pusha
inc
sahf
pop
adc
sbb
stc
adc
mov
sub
sub
xor
mov
call
lods
pop
popf
fs
cmp
fidivrs
addr16
or
lret
push
pop
and
inc
cmp
xchg
xchg
imul
lock
and
std
outsb
add
shrb
jge
dec
lds
test
aad
xor
push
vfmsubpd
test
mov
xchg
adcb
idivl
cmpsl
sub
cmc
or
mov
add
dec
outsl
movsl
fimull
xchg
dec
cmp
jb
mov
xchg
je
mov
sub
sbb
jae
add
ds
imul
cmpsb
and
jmp
popa
sbb
gs
pop
pop
and
cmp
pushf
pop
cli
dec
xchg
sub
xchg
in
sbb
cld
pusha
xchg
jb
jbe
imul
insb
shrb
imulb
mov
pushf
gs
and
cli
or
mov
sub
mov
cmp
ficoml
lahf
popa
or
lahf
loopw
leave
lcall
outsb
gs
rcrb
add
adc
out
push
cli
stos
adc
ljmp
or
paddusb
sub
ja
jmp
mov
fmul
shrb
jnp
loopne
rorb
push
int
js
fmulp
aad
cmp
fs
int
mov
inc
lods
mov
cld
xchg
cmp
xor
sbb
divb
add
cmp
push
lahf
gs
and
cmp
insb
push
loop
xor
cltd
insl
addr16
rcrl
dec
jp
pushf
or
out
cld
cmpl
ljmp
or
ja
in
push
add
sub
mov
push
and
movsl
cmp
xor
call
pop
int
cld
cmp
fdivl
nop
jns
int3
mov
or
and
pop
imulb
aam
sub
push
cltd
shll
xor
repz
cmpsb
jmp
jno
mov
fstl
jnp
xor
insl
outsb
sbb
mov
xchg
sahf
sub
in
aam
adc
outsl
mov
adc
and
cmpsl
pop
mov
sarl
mov
pop
int
mov
xchg
pop
test
pusha
inc
mov
cwtl
insl
sub
stc
jne
jns
add
fadd
and
dec
push
mov
dec
push
adc
cmp
adc
loop
pop
xchg
ss
fcoml
cwtl
pusha
mov
test
lods
mov
jmp
insb
xchg
lcall
pop
arpl
mov
in
push
xchg
inc
lock
in
int
mov
arpl
or
dec
mov
xor
js
popl
js
repz
fsubrp
pushf
jle
push
fs
cmc
push
dec
pop
movsb
sbb
dec
nop
pop
pop
and
pop
shl
cmp
cmp
in
xchg
jbe
dec
add
mov
es
lds
mov
lret
mov
dec
div
inc
xchg
jle
and
sbb
mov
movsb
mov
fldenv
jbe
out
mov
xchg
and
mov
loope
insl
adc
cmp
push
cmp
cld
push
cld
bound
dec
inc
mov
mov
in
pop
pop
aad
or
xchg
int
test
pop
cmp
pop
rcrl
push
out
iret
mov
movsb
aaa
inc
into
jecxz
shll
pusha
lds
js
gs
stc
or
imul
adc
into
xor
mov
cltd
scas
jae
loopne
test
cmp
test
lret
mov
pop
mov
cmp
xchg
into
daa
add
or
cld
adc
aaa
push
insl
imul
mov
pop
mov
imul
cwtl
jecxz
add
and
jecxz
pop
call
out
imul
lods
or
cmp
dec
test
cmp
fsubl
xchg
jge
dec
aaa
outsl
shrb
mov
inc
dec
fs
dec
shlb
aam
rep
stos
xchg
cmp
in
frndint
mov
xchg
and
pop
dec
int3
or
out
mov
inc
mov
mov
movl
push
fwait
outsb
sub
outsl
cmp
dec
mov
mov
inc
pop
xchg
jg
xor
aad
in
adc
fadds
cmp
aam
aas
sub
enter
mov
icebp
lods
insb
int3
repnz
out
outsl
pop
into
mov
cmp
jmp
inc
cld
push
test
fisttps
sahf
inc
mov
das
add
mov
sbbb
xchg
sbb
js
sbbb
in
aad
sbb
std
lea
cmp
mov
sbb
flds
enter
push
dec
mov
gs
in
push
mov
ljmp
or
int
inc
pop
inc
inc
lret
xchg
fdivl
lods
push
xchg
add
rorb
mov
push
and
jmp
mov
or
mov
orl
xchg
je
sbb
aad
mov
cs
into
mov
xlat
bound
rorl
ffreep
adc
pop
mov
fwait
sub
xor
dec
sub
add
sub
ljmp
xor
daa
insb
xor
jge
mov
cmp
test
dec
cmp
scas
add
add
out
jl
enter
xchg
aam
mov
jmp
dec
les
pop
adc
fcomps
dec
fmull
dec
push
cmp
pushf
inc
mov
imul
push
movsb
scas
ret
aad
pop
fldpi
gs
cwtl
in
push
decl
popa
in
pop
mov
gs
test
inc
mov
jl
sub
and
jo
mul
xor
add
arpl
push
outsl
aad
pop
mov
arpl
dec
ss
popf
add
int3
gs
bndstx
testl
mov
inc
jbe
gs
bound
or
mov
add
add
sub
lcall
jae
loope
aad
xchg
fs
ret
mov
xor
cld
jae
push
data16
das
xchg
xor
gs
insb
mov
mov
and
movsl
xchg
hlt
and
test
lds
mov
mov
fistl
ret
or
gs
dec
sub
in
xor
popa
sahf
popa
rcll
int
sub
sahf
clc
add
mov
in
cmp
jge
jne
add
aam
push
and
pop
out
pop
jne
out
jns
bound
test
repz
es
xor
cmpsb
sarb
inc
xchg
mov
in
jecxz
lcall
sub
je
xchg
movsl
int3
int3
add
sub
pusha
lret
ret
push
in
xchg
in
mov
lds
pop
xchg
mov
hlt
jae
lcall
xchg
add
and
lods
ds
dec
es
pop
dec
lods
leave
enter
fs
pusha
rcrb
adc
popa
or
lods
data16
xor
xor
mov
mov
stos
gs
les
dec
or
mov
and
loopne
int3
add
cmpsl
lcall
aad
xchg
movsb
mov
bound
pop
and
in
arpl
icebp
aam
mov
popf
lea
sub
cmpsl
in
push
and
inc
xor
adc
cmp
pop
or
test
pop
frstor
fsubl
stc
add
js
dec
mov
cltd
dec
mov
cwtl
inc
or
test
adc
lods
hlt
aam
sub
cld
mov
outsl
lock
xor
loop
jecxz
ss
or
sub
pushf
mov
mov
or
inc
or
scas
sbb
int3
inc
aam
insb
rcll
addr16
jge
adc
add
aam
test
les
inc
inc
xlat
cwtl
mov
fwait
loope
int
sbb
pushf
sarb
jl
jmp
sbb
add
fdivrs
or
sbb
mov
mov
fildl
test
bound
dec
popa
icebp
jge
pop
sbb
and
or
nopl
xor
mov
push
rcl
push
pusha
stc
cmc
push
cli
les
orb
or
cmc
xchg
insb
sub
mov
pop
xor
ss
lret
fstpl
mov
and
outsl
aas
dec
ljmp
mov
gs
jb
rorb
sbb
jmp
jns
les
push
add
cmp
fs
fs
push
mov
or
cld
jmp
add
or
push
cmp
fidivl
mov
outsb
add
shlb
push
adc
mov
xchg
pop
inc
inc
arpl
aad
and
lods
out
add
hlt
mov
sub
popf
jg
pop
cmp
stc
pop
and
jno
adc
insl
jle
pushf
hlt
xchg
adc
js
dec
movsl
addl
mov
mov
dec
jmp
insl
push
sbb
insb
inc
test
xchg
imul
repnz
arpl
orl
int
mov
mov
cmp
addr16
jle,pn
fdivr
je
in
insb
jmp
andl
in
push
mov
insl
test
mov
dec
ljmp
or
test
repz
push
shl
or
nop
fwait
insl
stc
or
pop
cmp
ret
popf
jno
je
xchg
ja
stos
pop
adc
add
jge
dec
cmp
fidivrl
nop
adcl
sbb
xor
fwait
mov
pusha
in
inc
mov
inc
sub
dec
ds
xchg
dec
popa
inc
fsubrl
cld
push
xor
shlb
fs
aas
mov
outsl
loope
push
jns
add
push
or
add
ds
fcomps
inc
dec
mov
in
push
push
sbb
push
je
sbb
xor
push
mov
sbb
lds
test
shlb
lock
ja
fidivrl
mov
insb
add
in
cwtl
mov
xor
scas
push
iret
inc
sbb
int3
xor
arpl
mov
or
les
cltd
into
pop
pop
mov
sub
mov
popa
jp
and
lret
mov
ret
pop
xchg
push
mov
int
repz
pop
sub
push
add
inc
lock
or
les
push
pop
adc
fcmovbe
jl
popf
or
rcr
or
xchg
notl
sub
jno
add
dec
cmp
pop
insl
cmc
jge
test
cltd
fdivrs
dec
in
xchg
cmp
push
fmul
in
out
bound
and
dec
mov
pusha
pop
mov
pop
adcl
mov
pop
mov
movsl
xor
xor
dec
das
imul
or
ret
into
leave
lret
dec
jg
std
outsl
xchg
jb
in
lods
cmp
inc
mov
push
fnstcw
hlt
cmpsb
mov
mov
mov
pushf
sub
mov
pop
or
outsl
arpl
mov
and
pop
movsl
dec
pop
or
icebp
dec
adc
aam
int3
push
pop
cmp
dec
jnp
push
inc
nop
int
pop
repnz
in
inc
adc
push
lds
mov
test
sbb
xchg
les
or
fs
ds
mov
jl
xchg
and
mov
not
je
push
stos
mov
imul
xchg
addr16
xchg
sub
gs
mov
outsb
mov
pop
mov
in
cmpsb
jo
dec
push
lods
push
sbb
in
mov
xchg
negb
jne
pop
sbb
pop
xchg
out
xchg
sub
xchg
sbb
sarb
and
call
iret
cli
and
mov
enter
test
mov
add
push
insl
mov
lret
int
lcall
test
fstp
xor
dec
aad
or
sbb
std
adcl
adc
in
push
pop
sbb
mov
dec
stc
and
bound
add
das
rorl
cmp
aam
ret
push
mov
mov
xchg
and
sahf
mov
push
dec
insl
jmp
sbb
xchg
xchg
enter
mov
cmp
sub
add
sub
and
in
aas
cmp
fimull
pop
insb
filds
push
mov
leave
movsb
xchg
lcall
mov
mov
inc
loop
cmpsb
xchg
xor
pop
push
mov
sub
pop
dec
inc
dec
aas
sbb
and
mov
lds
pusha
sbb
cs
cmp
dec
cmp
movsb
jl
ss
mov
shlb
shlb
sub
add
fistpl
scas
mov
and
imul
sub
shrl
and
xor
lds
jnp
clc
xchg
cmp
dec
xor
and
adcl
icebp
mov
in
aam
sti
cmp
ja
imul
adc
mov
mov
xchg
test
xor
adc
mov
inc
mov
fistl
jle
aaa
push
mov
mov
test
cmp
pop
mov
pusha
dec
rolb
xchg
fs
aas
adc
mov
push
mov
into
cmc
inc
or
popf
dec
pop
mov
je
sub
add
cs
xchg
in
mov
orl
int
inc
add
cmc
mov
out
insl
movsb
fldenv
dec
lret
hlt
test
xor
in
test
cmc
icebp
mov
push
mov
aad
arpl
int
mov
xor
adc
scas
fsubrs
push
cmp
idivl
cmp
mov
xchg
jns
sub
mov
fldt
movsb
dec
out
mov
add
call
push
leave
sbb
jne
sarl
jecxz
pop
xor
fs
pop
and
jl
sub
out
insl
sbb
test
jmp
test
and
pop
leave
popa
xchg
xchg
and
aam
into
cmpsl
lea
cmpsb
pop
negl
cmpsl
add
imul
xlat
dec
stc
ljmp
and
iret
fcmovb
inc
mov
dec
jno
cmp
mov
add
shlb
sbb
inc
pop
les
pop
int3
aad
pusha
and
gs
mov
divl
cmpsb
out
lret
or
mov
int3
movsl
or
andl
xchg
cmp
rcrl
cmp
pop
loope
jo
adc
push
inc
xor
fcoml
insb
loopne
cwtl
mov
js
mov
shll
add
push
stos
xor
jbe
inc
xchg
push
repz
adc
lds
cmc
fadd
xor
rclb
sbb
aas
push
and
orb
jo
outsb
xchg
pop
adcb
pop
jecxz
xor
fs
gs
xor
nop
imul
push
xchg
hlt
movsl
ret
mov
rcl
pop
in
inc
test
imul
pop
iret
cmp
fisttpll
jmp
jno
lods
xchg
insb
pop
xor
push
push
addl
dec
jg
andb
gs
sub
sbb
dec
jns
sbb
into
xor
loopne
inc
cmp
and
inc
loop
in
test
clc
pop
sbb
mov
push
add
xchg
test
inc
xchg
xlat
fistpl
rcr
cltd
sbb
aam
mov
dec
test
das
loope
leave
aam
call
add
jle
stos
into
jg
jb
insb
and
loopne
mov
sub
inc
jbe
mov
subl
lea
push
pop
mov
lock
test
bound
imul
pop
fs
push
lds
mov
dec
sbb
jl
addr16
outsl
cmp
cmc
pop
test
or
int3
data16
mov
shlb
stos
imul
shlb
lret
stc
std
adcl
mov
and
pop
push
dec
jno
frstor
sbb
mov
adc
mov
mov
cmp
leave
sub
subl
pushf
gs
and
jbe
push
inc
movsl
sbb
rcll
push
dec
add
movsl
ss
adc
pop
fstpl
dec
loop
bound
mov
lds
in
aad
or
mov
gs
cmp
icebp
xor
or
jecxz
mov
int
aaa
push
cmp
and
add
mov
fisubrl
mov
fimull
push
popf
adc
mov
int3
mov
inc
mov
mov
dec
xor
pop
outsb
lret
loope
inc
xorb
sub
addr16
mov
and
jno
xchg
lods
sarb
notb
pop
aad
pop
aam
cmp
scas
stos
out
xor
xchg
mov
cmp
sub
outsb
adc
sbb
sbb
enter
xor
jge
scas
add
push
aad
decb
cltd
pop
cmp
mov
xlat
xor
cmc
popa
std
fbstp
xchg
xlat
jns
je
lods
lahf
loopne
ftst
mov
cmp
rol
notl
cltd
jp
xchg
in
mov
or
adc
hlt
test
lods
cmp
sbb
jne
sbb
push
or
in
arpl
cld
xor
cltd
sbb
pop
push
add
je
pushf
or
and
cmp
in
mov
stc
lds
hlt
lods
jl
sub
mov
into
lds
in
xchg
mov
dec
test
pop
jp
popa
dec
sahf
pop
pop
movsl
xchg
inc
sbb
inc
sbbb
mov
dec
ror
mov
jbe
adc
and
ficoms
mov
inc
cltd
add
fstp
fmull
lock
ja
push
ja
dec
push
pusha
or
inc
and
xchg
leave
xor
std
mov
hlt
cmp
call
dec
addr16
mov
add
and
mov
sub
pop
mov
lods
push
fisttpl
in
fs
bnd
cld
aaa
sbb
mov
and
sub
adc
mov
cmpsb
leave
movsl
les
and
xchg
sbb
fildll
or
in
lds
mov
mov
jbe
fsubrl
std
push
dec
incl
pushf
or
repnz
cmc
shlb
stc
xchg
xchg
adc
icebp
enter
lods
jmp
roll
movsb
push
xchg
mov
or
scas
test
ja
or
fstl
decl
lcall
inc
into
xchg
inc
push
mov
call
jp
fnstcw
lds
jecxz
lds
or
push
repz
push
incl
cmp
shlb
stos
inc
mov
mov
stos
fldenv
cmp
mov
jmp
ret
js
pop
stc
push
jl
aam
in
sub
fnstenv
mov
push
inc
rorl
mov
push
outsb
repnz
dec
pop
mov
pop
aad
mov
out
cmp
out
xor
insb
push
cli
xlat
and
and
shll
cmp
mov
addr16
fucomp
cld
mov
jge
in
pop
xlat
call
fcoml
stos
inc
ja
and
mov
out
movsb
fnstenv
dec
fsubrs
add
xor
dec
cmp
cmpb
add
jg
out
pusha
fmull
mov
dec
ret
faddl
mov
scas
jecxz
push
repz
cmc
popf
int3
pop
jge
dec
sahf
sahf
andl
rorb
int
sbb
mov
adc
dec
sub
jp
mov
in
jbe
sbb
stos
pop
es
stos
lret
pop
loopne
test
inc
mov
out
lods
xchg
adc
test
fcmove
repnz
arpl
dec
les
into
mov
adc
jle
popf
dec
les
insl
xlat
int
insl
int3
lea
scas
mov
push
and
pop
jg
jle
sub
dec
in
addr16
data16
into
mov
aad
insb
test
pop
xchg
dec
mov
les
mov
insl
add
aam
mov
fcoml
mov
mov
mov
mov
lea
inc
daa
cmpl
scas
push
adc
jmp
add
pop
ret
adc
inc
dec
test
ljmp
and
loopne
xlat
adc
popa
ret
sub
pop
aas
insl
ret
insl
mov
int3
repz
sbb
insl
and
jmp
arpl
add
bound
xchg
mov
xchg
out
cld
pop
cmp
int
repnz
jmp
xorb
jae
pop
flds
jnp
xor
ds
pop
jbe
aad
adc
push
imul
xor
sub
sbb
jae
js
xchg
in
and
sbb
rcll
xor
aas
orl
xor
inc
inc
mov
mov
fstl
test
bound
subb
in
aas
push
lds
sbb
and
sub
notb
sbb
rolb
int3
aad
inc
and
inc
cmp
mov
loop
or
pop
mov
mov
sub
loopne
pushf
mov
je
bound
leave
push
aas
sub
pop
in
xor
addr16
mov
mov
and
mov
in
fs
popa
add
lds
xor
cltd
push
xchg
loopne
outsl
mov
cmp
jbe
mov
dec
es
jge
gs
adc
aam
gs
push
leave
mov
lock
imul
stc
popf
in
push
xchg
hlt
aas
aaa
push
push
stc
cmp
dec
inc
inc
push
loop
test
jns
loope
or
popa
outsb
cmp
fmul
inc
aaa
mov
sbb
fprem1
or
not
dec
popa
sub
fcoms
std
popa
pop
or
pop
pushf
rcll
dec
popf
add
sub
push
sbb
xchg
dec
push
adc
pop
fisubrl
leave
cmpsb
aaa
cli
jge
je
dec
aas
cmpsb
rclb
xchg
call
add
movl
inc
enter
fadds
mov
push
pop
dec
enter
adc
inc
test
cld
xchg
lahf
fs
push
mov
push
ds
test
mov
adc
pop
xor
push
cmp
movsl
test
cmp
adc
xchg
mov
fs
fsubl
outsl
jl
outsb
incb
rorl
inc
pop
push
call
pop
cltd
push
push
xchg
loop
rcrb
fsubrl
cltd
cmp
inc
push
inc
aam
mov
lahf
testl
cmp
dec
orl
sbb
xchg
inc
jb
adc
nop
int3
rorb
aad
jne
jbe
jne
mov
fisttpll
sub
mov
dec
push
dec
cwtl
cmpb
cmp
mov
jmp
jmp
xor
fwait
std
pop
mov
out
dec
xchg
xor
push
push
inc
sarl
imul
mov
popa
mov
adc
sub
arpl
sub
cli
adc
pop
rorl
sbb
ljmp
dec
lds
notb
cmp
cmp
pop
ret
into
jl
push
aad
in
mov
addr16
and
jne
mov
inc
ret
xchg
xor
cmc
dec
mov
sbb
out
cmp
pushf
movb
mov
fdivrs
push
outsb
aam
xchg
mov
shrl
lcall
insl
cmc
popf
in
into
loopne
dec
pop
imul
nop
dec
cwtl
push
jmp
dec
push
lcall
out
rcrl
orb
in
inc
sub
clc
add
sbb
nop
adc
std
pop
adc
pop
cmc
ficoml
das
inc
xor
add
addr16
cmp
dec
and
lds
dec
aam
jne
je
inc
movsb
xor
add
push
std
pop
mov
mov
mov
sahf
addr16
jns
mov
push
pop
lea
adc
mov
add
sahf
movsb
cltd
or
icebp
aad
imul
out
cmp
gs
enter
vphaddwd
fistl
int
dec
mov
sbb
mov
arpl
imul
lods
add
ret
mov
add
lods
shr
divb
je
sub
pop
mov
ds
test
gs
movsb
mov
xor
sbb
in
dec
or
pop
dec
mov
imul
int3
out
ficomps
gs
bound
cmp
aam
fadds
int3
les
and
lcall
and
ret
mov
sbb
mov
mov
mov
inc
or
lea
clc
pop
fwait
int
int3
and
test
fidivrl
je
mov
pusha
jnp
cmpsb
push
xor
and
pop
adc
push
popa
sub
push
sub
xor
mov
add
rclb
fstpt
cld
xchg
or
shll
mov
xor
xor
aam
cmc
sbb
test
rcl
lcall
mov
movsb
cmp
je
rclb
adc
add
inc
mov
imul
lret
repz
frstor
cmp
testl
add
xlat
out
ljmp
cmpsb
cs
sbb
shll
xor
fs
pop
insl
add
mov
js
in
sbb
mov
inc
mov
xchg
fistpll
push
pop
std
push
push
cmp
push
inc
js
sahf
es
pop
dec
fmulp
mov
xchg
sbb
test
popa
push
mulb
and
fwait
cwtl
mov
mov
lods
cmp
xor
pop
mov
dec
aad
cmc
mov
and
mov
mov
fs
shl
insl
lds
movsb
or
andb
shll
sbb
mov
sbb
push
sub
std
fwait
bound
movsb
dec
rorb
in
fimull
jae,pt
xchg
cmc
mov
sbb
mov
sub
push
in
mov
jmp
enter
shl
dec
mov
push
cmp
mov
jl
add
jbe
dec
mov
xor
psubq
addl
pop
je
bound
push
pop
or
mov
mov
mov
dec
mov
popf
cmp
ljmp
outsl
fisttps
addr16
cmc
fstl
and
hlt
mov
sbb
loope
lret
lock
xor
sarl
unpckhps
pop
adc
push
test
push
pop
flds
lods
pop
pop
rcll
add
std
cmpsl
xorb
int3
out
stos
shlb
fwait
andl
fmul
cmp
aaa
lds
and
add
cmp
adc
dec
jecxz
push
and
test
sbb
xchg
inc
rol
ltr
je
addr16
xor
pop
fistl
sub
dec
adc
mov
sbb
pop
nop
sub
cmp
dec
mov
mov
push
cmp
dec
push
sub
jne
dec
xchg
popa
arpl
push
hlt
sub
cmc
int
das
mov
fcoms
outsl
in
pop
sub
clc
jle
in
mov
test
fists
cmp
cmp
jno
enter
dec
add
cmp
push
std
xchg
sbb
xchg
stos
frstor
mov
in
and
mov
ss
iret
xchg
pop
sub
ficoml
or
push
je
in
xlat
stos
inc
leave
out
les
roll
mov
in
and
imul
mov
ret
xor
lods
in
xchg
jge
or
dec
popa
adc
mov
pop
fs
nop
popf
movsl
adcl
xchg
xor
or
push
mov
push
lock
pop
and
and
push
lock
xor
xor
cli
int3
aaa
andb
data16
jg
cmp
push
repnz
xor
sub
inc
mov
insl
in
sub
movsb
mov
out
data16
and
mov
jo
test
dec
movsb
int3
and
jne
les
insl
popf
adc
std
jb
mov
mov
fcomps
mov
fadd
mov
sbb
outsl
stc
iret
out
pop
push
jb
test
xor
xor
push
cmc
and
adc
sub
ret
out
call
cwtl
ret
dec
pop
push
pushf
cmc
loop
cmp
call
popf
push
into
sbb
cmpsb
jp
data16
icebp
sbb
rclb
call
gs
faddl
xchg
push
test
ds
mov
push
int
fs
imul
and
cmp
imul
fs
lea
pushf
mov
jno
cmc
aam
mov
pop
cli
push
movsb
ss
ja
pop
add
in
or
mov
lock
jno
xchg
adc
xor
pop
inc
cmp
sbb
or
in
mov
and
or
xor
mov
fnstenv
cmp
adc
xchg
push
add
sarl
lea
cmp
and
mov
push
inc
xor
mov
lods
jg
sbb
inc
outsb
mov
loopne
into
fsubl
jl
push
and
popf
insl
loope
or
lods
inc
dec
fstps
loop
add
int3
jo
mov
mov
sub
js,pn
cld
clc
pop
push
nop
cmp
in
pop
dec
sbb
fisubrl
int3
ret
mov
jne
mov
loope
push
outsl
push
xchg
pop
dec
add
outsl
sbb
pop
gs
int
andb
pop
cmp
add
dec
jo
insl
push
divl
imul
xlat
or
xchg
fnstsw
cld
cmpsl
fcmovne
loop
xchg
adc
movsl
xchg
or
clc
movsl
in
je
test
dec
mov
hlt
xor
add
aad
in
jp
rcrl
cld
test
ret
lcall
rolb
lret
mov
nop
xor
movsb
je
outsl
sbb
scas
aam
lret
push
mov
popa
jp
aam
mov
cli
ficomps
xchg
test
lds
int3
add
and
xchg
xchg
pop
mov
out
sbb
jno
les
adc
cmc
enter
insl
loopne
movsl
fnstenv
das
cld
jl
mov
sub
mov
imul
test
lea
out
pop
addl
stos
inc
les
lcall
rolb
or
xchg
test
sbb
repnz
gs
adc
pushf
pop
sub
mov
mov
test
cmp
mov
push
mov
sub
imul
jmp
mov
or
xchg
xchg
sbb
jo
cmc
out
repnz
inc
addr16
jge
hlt
cs
fs
insb
repz
popf
pop
push
dec
pop
pushf
pop
sub
push
pop
and
mov
insb
jle
aam
adc
jmp
ret
jl
and
les
dec
sbb
mov
stos
mov
xchg
push
push
in
xchg
shrb
jno
add
jns
jg
jnp
out
and
jae
push
mov
gs
in
inc
mov
cmp
sbb
pop
add
mov
cwtl
int
inc
cmpsl
int3
data16
outsb
inc
pop
cld
add
call
pushf
loope
pop
scas
xlat
add
repz
inc
xor
push
std
in
push
incb
or
adc
mov
pop
cmp
pop
adc
shrl
popa
icebp
lods
aad
dec
jbe
xchg
xor
adc
pop
scas
push
popfw
inc
push
repz
out
outsb
insb
mov
cltd
shl
data16
outsl
push
dec
cmp
cmp
std
pop
test
outsl
dec
push
cltd
shrl
imul
daa
repnz
mov
imul
adc
icebp
push
popa
imul
mov
pop
cwtl
clc
insl
insl
aaa
mov
daa
mov
mov
int3
xchg
pop
jns
xchg
push
xor
mov
mov
insl
pop
jp
fs
in
out
cmpsb
sti
inc
test
mov
test
push
adc
sub
fbstp
rolb
inc
push
repnz
sub
fisttps
int3
call
inc
sub
in
adc
xchg
xor
add
lcall
add
adcb
adc
loope
insl
jns
imul
jno
xor
movsl
sub
aas
push
inc
fnsetpm(287
fmull
loopne
clc
adc
mov
call
dec
mov
mov
sbb
mov
lea
xchg
aas
push
inc
mov
gs
mov
jge
testl
scas
xor
lahf
stc
pop
push
push
int
dec
pushl
fwait
jle
in
in
xchg
subl
and
jecxz
aad
mov
test
add
daa
mov
loopne
mov
test
xor
pop
inc
mov
cmc
rolb
sbb
sahf
and
out
test
popa
sarb
push
dec
aas
orb
loopne
jno
daa
gs
mov
mov
push
mov
xchg
adc
mov
sbb
mov
mov
int3
js
test
adc
fs
dec
sub
outsl
adc
or
aaa
mov
push
adc
pop
stos
xchg
sub
gs
jae
jno
enter
dec
mov
gs
sbb
incl
push
loope
subl
aam
lea
js
sbbb
dec
xor
leave
nop
or
std
mov
outsb
dec
and
insl
xor
mov
pop
inc
pop
clc
pushf
lock
cmp
lods
pusha
and
outsb
test
adc
sub
adc
push
imul
inc
andb
lds
inc
out
jmp
stc
sarl
mov
adc
jbe
sbb
lds
gs
fmull
int
inc
sub
push
cld
dec
mov
jb
insl
mov
shll
movsb
sub
mov
test
push
paddb
dec
push
push
fnsave
jns
xor
das
fsubrl
imul
scas
fstpl
adc
mov
jge
movsb
lret
into
ja
xchg
sbb
mov
mov
scas
ficoms
mov
aad
sarb
xor
mov
xchg
add
nop
push
in
ret
jno
sbb
call
cltd
scas
faddl
cmp
jl
xchg
mov
fdivrl
xlat
repnz
pop
adc
pusha
fwait
cmpsl
mov
ljmp
lret
movb
out
add
imul
hlt
aad
and
and
xchg
hlt
pop
xchg
lods
dec
cli
jg
fnstsw
sub
push
mov
nop
mov
bound
repz
fstpl
out
sbbl
push
sbb
dec
mov
int3
sbb
shlb
in
jle
add
pop
pushl
push
dec
test
and
mov
subl
std
xchg
mov
int3
test
imull
aad
mov
or
sbb
shlb
adc
mov
and
subl
adcb
fdivr
xor
pop
fs
addr16
pop
outsb
fwait
loop
hlt
push
out
shll
jg
test
jb
jns
inc
hlt
xor
push
inc
dec
insl
insb
je
incl
inc
fmuls
or
roll
ss
xchg
mov
push
sub
sbb
ja
in
mov
ds
inc
sarl
add
leave
andb
scas
lods
mov
jge
imul
fmul
gs
cmp
pop
add
push
int3
int
push
aam
jmp
cmc
fisttpll
dec
lds
jnp
js
int
icebp
push
sbb
imul
pop
hlt
mov
mov
jo
int3
dec
lcall
movsl
rol
ret
and
les
jge
rorl
mov
and
xlat
testb
jp
mov
sbb
push
dec
or
nop
lds
jg
sbb
cmp
cmp
sub
xadd
dec
and
aam
ret
fwait
leave
out
sub
or
divl
adc
ljmp
fcompl
jg
ret
pop
cmp
addb
mov
imul
cwtl
jb
pop
adc
sbb
in
mov
imul
mov
adc
sbb
lcall
cmpsb
jecxz
rclb
lret
sub
inc
push
mov
jnp
aad
inc
aam
xchg
out
call
cmp
mov
repz
lea
dec
xchg
or
mov
push
fnstcw
xchg
data16
sahf
sub
add
mov
je
dec
paddusb
add
mov
dec
and
addr16
ja
aam
out
fidivl
aam
cli
pop
xorl
fcmove
sub
mov
inc
sbb
in
cs
lret
sub
aam
cmp
xor
xchg
sbb
mov
fisttpll
fs
jo
and
jns
fmull
daa
sbb
leave
cs
or
aam
in
lods
dec
lret
in
sbb
out
scas
into
mov
test
pop
or
iret
out
mov
outsb
test
fcoml
jl
mov
mov
nop
js
sbb
inc
insb
fidivl
dec
and
pop
in
jno
add
nop
adc
and
loop
add
mov
dec
mov
xchg
aaa
adc
ja
nop
sub
seta
in
jmp
fisubs
dec
mov
shll
jp
xchg
sub
dec
mov
in
sbb
and
mov
mov
fcompl
dec
push
cmc
es
push
fwait
dec
aas
in
fcompl
lock
cmp
mov
imul
mov
clc
rcl
sub
out
dec
mov
push
sbb
mov
xchg
out
movsb
pop
xor
lock
dec
push
fs
cmp
lcall
sbb
dec
dec
fs
js
cmp
test
sub
jg
repz
mov
hlt
jbe
cmpsl
insl
popf
mov
loop
fisubs
cli
mov
mov
pop
dec
xor
xchg
xchg
aad
mov
movsb
push
repnz
and
push
fisubl
in
pop
repz
das
pop
inc
cmp
loop
or
dec
lret
xor
adc
lods
sub
lods
pop
mov
push
cmp
inc
adc
sub
shld
mov
sbb
aas
lock
je
imul
dec
xchg
mov
inc
mov
sahf
sbb
adc
sahf
iret
adc
jge
stc
mov
int
xor
xor
stc
adc
and
fs
test
cmpsl
fcmovnu
cmp
and
cmc
hlt
or
or
sbb
out
into
xor
xchg
fcoml
pop
push
and
cmp
xor
or
adc
push
sub
in
jge
leave
sbb
jnp
pop
mov
pop
aaa
pop
add
or
fsub
inc
icebp
sub
bound
out
mov
jae
lods
push
outsb
es
outsb
scas
and
insb
test
ret
aam
into
inc
push
popl
sub
pop
sub
push
xor
push
mov
push
cmp
cld
cmc
xchg
xchg
call
aad
inc
xor
js
or
mov
push
and
or
adc
mov
out
and
pop
ret
jb
ds
mov
int
fdivrl
je
scas
pop
fadds
dec
xchg
fbstp
in
rcrb
or
stos
jnp
and
in
ljmp
add
cmp
inc
or
mov
add
dec
xor
cmp
scas
ret
pop
adc
insl
or
jb
lcall
out
adc
or
sub
mov
push
and
push
nop
std
cld
xchg
test
sub
add
fs
cs
sub
mov
xor
mov
push
jge
or
pop
ret
cmp
out
jbe
rcrb
in
test
call
mov
pop
fcomps
popa
inc
pop
dec
ja
aad
cmc
popf
aad
mov
outsb
popf
sbb
or
inc
int3
mov
pop
inc
popa
mov
lret
mov
cmp
leave
push
add
fiaddl
std
mov
orl
loope
fisubrs
xorl
popf
pop
nop
xchg
les
out
shll
pop
xor
inc
cld
test
sub
dec
pop
aam
cmc
iret
push
orb
xchg
leave
idivb
pop
mov
scas
gs
mov
and
lods
rcrl
adc
sbb
push
push
push
pop
pcmpeqd
lock
in
aam
adc
addb
and
jo
sbb
repnz
hlt
adc
popf
cmpsb
lods
lahf
cmp
aas
dec
cmp
shlb
pop
pop
int
sahf
push
cmpsl
dec
repnz
int3
and
xchg
popa
repnz
adc
push
mov
insl
push
sub
mov
notb
push
hlt
inc
lock
test
stos
and
imul
push
jmp
sbb
jmp
dec
sbb
xchg
in
push
cmp
adc
imul
test
in
rol
xchg
cli
scas
sbb
jge
and
push
ret
sarb
int3
mov
lahf
sub
je
xchg
stos
daa
mov
xchg
mov
cld
lcall
rolb
jmp
pusha
lock
cmp
inc
adc
sti
fmull
sub
adc
in
enter
es
or
fwait
cli
idivl
dec
mov
movsl
outsb
lods
jmp
shl
lods
stos
cwtl
lds
nop
cmpsl
pop
sahf
addr16
mov
jg
cltd
in
lahf
fdiv
addr16
sahf
add
and
xor
cmp
movsl
dec
mov
gs
bound
inc
push
pop
push
loop
push
xor
mov
adc
aam
lods
mov
in
dec
mov
in
into
shrb
arpl
int3
in
insb
fwait
icebp
inc
pop
shlb
psllq
mov
lock
fmull
push
aad
in
bound
ror
call
fs
or
sbb
sub
inc
lods
loope
sub
aam
ja
xchg
lods
inc
imul
insb
fs
imul
pop
pop
test
mov
mov
sbb
cmp
cmp
movsl
dec
cmp
fcompl
jge
or
adc
xchg
mov
jl
in
adc
jb
lea
xor
lea
mov
push
pop
loop
cwtl
gs
lahf
dec
js
dec
xor
lret
jno
repnz
stos
push
push
arpl
sub
leave
mov
add
gs
xor
shlw
pop
std
mov
push
push
xor
mov
xor
inc
ret
or
mov
imul
dec
adc
dec
xchg
xlat
lret
jmp
ret
xchg
push
int
lods
xor
movsl
xchg
in
popf
xchg
pop
mov
or
inc
and
mov
dec
xchg
jmp
scas
xlat
push
int
in
aam
out
push
dec
sbb
mov
test
mov
cmpb
ret
push
adc
lock
int
lds
aas
movsb
std
mov
leave
cmp
loopne
cmp
mov
jb
test
stc
sbb
or
int3
insl
push
les
or
fldenv
xchg
in
outsb
cs
orl
mov
scas
and
sbb
sarl
nop
jb
jle
roll
sbbl
icebp
popf
and
jbe
fidivrl
inc
push
mov
mov
inc
sbb
and
cmp
rolb
movsb
sbb
xchg
mov
in
aam
sbb
das
push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
cmp
add
cmpsb
pop
ss
clc
in
fs
cmpb
dec
bound
arpl
pop
or
outsl
fildll
jae
gs
test
dec
dec
outsb
or
fldenv
fbld
jo
shrb
add
dec
addl
jmp
or
iret
je
daa
sbb
int3
mov
mov
dec
ja
dec
rcll
or
in
dec
adc
pop
or
pop
jb
jb
adc
pop
rcrb
jg
push
fs
jmp
out
xchg
inc
add
jl
je
nop
inc
push
jo
push
fs
pop
inc
push
sbb
xchg
push
sbb
nop
dec
dec
sbb
inc
inc
cmp
nop
inc
push
cmp
nop
inc
push
sbb
and
push
sbb
sbb
sbb
adc
mov
pushf
adc
nop
inc
push
mov
lods
nop
inc
push
sbb
add
sbb
jae
nop
push
add
mov
add
dec
sbb
sub
je
movzwl
mov
sbb
arpl
repnz
xchg
nop
hlt
nop
lock
in
nop
dec
sahf
cmp
call
nop
fcoml
mov
cmp
jne
push
call
pop
fmuls
push
pop
xor
mov
jmp
mov
adc
adc
mov
mov
add
mov
push
roll
push
movsl
mov
or
or
mov
inc
cmp
jne
mov
dec
adc
insl
cmp
pop
push
mov
lds
adc
lret
push
push
push
clc
mov
mov
jg
in
lret
sarb
add
cmp
fldcw
addl
push
ss
adc
xchg
push
pop
add
push
insl
fistpl
sub
pop
pop
arpl
mov
mov
adc
ds
aaa
mov
dec
add
loopne
push
xor
mov
mov
mov
mov
jg
pop
mov
mov
insl
xor
jns
mov
lret
mov
dec
mov
enter
mov
in
faddl
sub
jmp
add
shlb
sti
aas
jnp
push
pop
mov
scas
mov
mov
testl
lock
mov
xchg
in
hlt
xchg
push
das
cmp
faddl
pop
outsl
jb
ds
mov
stc
add
fbstp
xchg
cmpsl
mov
add
rorb
sub
cmpl
push
pop
xchg
dec
xor
or
jmp
in
sti
xor
pop
fnstsw
mov
add
sub
mov
ja
or
enter
lea
push
lods
insl
rcrl
sbb
adc
adc
mov
cmp
test
add
mov
test
nop
ret
mov
inc
cmp
pop
mov
sti
jmp
add
add
mov
push
push
mov
or
call
test
je
sbb
in
jo
and
movsl
push
cmp
push
es
push
sti
adc
call
add
fs
in
sbb
push
push
jne
js
fisubrl
and
or
and
xorb
pop
scas
imul
stc
leave
mov
inc
popa
ret
or
adc
sub
adc
dec
sbb
xchg
push
jmp
es
pop
mov
jb
int
add
adc
inc
adc
jae
or
push
add
push
adc
sbb
xchg
rcrb
loope
or
push
push
mov
out
arpl
stos
pop
dec
or
adc
imul
leave
mov
mov
sbb
out
call
dec
cmpsb
je
jge
jae
int
xchg
mov
sub
aam
xlat
lock
adc
dec
adc
sub
in
pop
jmp
mov
push
add
inc
lahf
out
imul
in
jae
xor
adc
jbe
out
outsb
mov
sbb
adc
or
lcall
out
push
jae
punpcklwd
pop
faddl
jne
rolb
pop
ljmp
ss
insb
mov
dec
inc
pop
add
insb
enter
push
sbb
dec
cwtl
xor
inc
add
add
cmp
scas
movsl
imul
into
push
inc
rorb
inc
cmp
fcomps
mov
cwtl
mov
pusha
pop
and
pop
mov
push
jbe
pop
add
in
pop
fdiv
dec
push
inc
mov
js,pt
das
jne
cmp
mov
lea
adc
es
xchg
adc
add
fnstcw
in
adc
pop
jae
or
xchg
mov
cli
inc
addr16
pop
pop
xchg
xchg
out
push
push
jae
fprem
cmp
je
jmp
pop
jae
mov
lcall
sub
int
rcl
push
add
jns
fwait
in
popf
xchg
lret
mov
or
arpl
adc
repz
sub
or
mov
push
inc
xor
ret
mov
jae
in
and
jne
scas
jg
and
fildl
adc
jb
cmp
lock
ret
inc
js
or
adc
push
inc
cmp
xor
loope
jmp
rclb
popf
daa
cmp
pop
jmp
jge
jmp
jns
fstl
insb
mov
es
je
mov
bound
adc
ror
add
mov
jbe
adc
in
push
movsb
push
push
sti
cmp
pushl
mov
push
cmpb
or
movsb
sbb
and
daa
mov
inc
mov
add
lock
mov
and
icebp
std
push
stos
jne
movl
mov
jne
cmp
mov
adc
movb
loope
pop
pop
pop
pushf
adc
cmpsl
xchg
or
add
jmp
mov
ja
mov
psllq
xor
xor
fmull
add
jle
lods
xor
sbb
jmp
xchg
and
or
or
hlt
cld
sub
jge
add
out
push
or
fisttps
or
fs
negl
mov
push
xor
fistpl
push
std
cmp
inc
jne
add
pop
clc
push
or
insb
jne
test
jns
aas
test
cli
add
dec
push
shl
out
mov
mov
inc
call
adc
pop
jmp
sbb
inc
gs
iret
push
mov
add
inc
jmp
adc
sbb
sahf
sbb
push
or
sbb
lods
adc
mov
cmp
cmp
inc
lret
mov
sbb
mov
adc
add
and
int
js
mov
push
bswap
es
add
emms
in
aam
mov
mov
lods
dec
dec
fisttpl
rolb
adc
je
outsl
out
or
add
pop
cmp
push
fs
mov
or
mov
add
push
or
or
mov
mov
inc
sqrtps
or
fbld
je
add
idiv
fiaddl
enter
ret
mov
add
inc
pusha
push
or
sbb
or
add
add
loop
ja
xor
mov
test
pusha
add
add
test
push
adc
cltd
or
inc
or
sbb
push
hlt
push
inc
loopne
sub
fistl
or
pop
dec
daa
jb
js
movl
or
sub
sbb
push
mov
jg
lock
xor
jge
sub
enter
dec
in
xchg
les
mov
inc
add
mov
sbb
cmp
lret
cmp
aad
mov
push
cmp
add
mov
cmc
shlb
lea
xor
jp
lods
mov
testl
in
fldcw
data16
push
call
movsl
mov
jns
rolb
insl
clc
add
outsb
pop
jne
jbe
in
adc
inc
mov
into
xchg
or
mov
xchg
mov
dec
pop
mov
jl
fs
dec
cmp
movups
inc
mov
sub
int3
push
clc
mov
add
aaa
inc
adc
inc
or
mov
or
pop
hlt
gs
jp
out
sub
sbb
push
jae
xor
push
and
push
inc
lea
sub
jno
adc
cmp
pusha
mov
ja
push
jp
jae
dec
pop
sub
add
mov
sub
add
mov
jae
jno
xchg
rclb
cmp
jne
mov
ss
loope
jmp
orl
fistps
xchg
mov
lods
or
adcl
adc
sbb
addb
add
fs
sbb
push
push
ret
xor
dec
call
push
pop
int3
or
cmpsl
lret
xchg
jg
iret
dec
xor
sbb
cmp
or
mov
or
push
jle
mov
or
stos
aad
nop
fsubs
lcall
fcoms
jg
pop
mov
xor
je
int3
jbe
addr16
fmuls
ret
adc
inc
cmpl
pusha
or
je
or
adc
pop
daa
dec
xchg
in
mov
add
hlt
sub
sub
push
jecxz
xor
add
add
addr16
stc
ds
jle
jmp
jnp
test
mov
dec
lods
ret
jl
jge
xchg
divb
and
push
push
movsb
jne
iret
inc
adc
pop
mov
out
mov
and
movsb
scas
sub
inc
gs
adc
ss
clc
mov
jmp
cld
adc
das
test
sbb
cmp
fwait
cmp
loop
mov
lods
sub
push
clc
cmp
insl
imul
aad
or
adc
pop
xchg
int
outsb
xchg
and
or
cmp
sub
or
fwait
jmp
inc
scas
or
out
dec
lock
loopne
hlt
sub
mov
in
pushw
or
pop
pop
adc
inc
cld
ret
call
cmp
pop
shlb
popa
push
in
or
pop
cmp
jmp
jb
jb
inc
adc
das
and
mov
pop
mov
lock
and
mov
iret
nop
cmp
jne
jae
mov
lahf
or
mov
cld
sub
or
push
sub
sbb
ret
stos
pusha
sbb
or
jbe
push
int
sub
aad
pop
push
cmp
popa
push
jnp
mov
test
or
int3
cwtl
dec
pop
sub
dec
inc
sbb
mov
lock
addr16
add
sub
mov
add
pop
aad
add
fwait
xabort
add
push
mov
jae
cmp
add
or
subl
or
jmp
pop
jns
sbb
pop
cmp
test
inc
or
or
pushf
fwait
mov
xor
adc
lods
lock
jb
lods
shll
add
adc
movsb
gs
ds
jmp
mov
and
insl
push
mov
inc
dec
sbb
or
out
sub
idivl
adc
sbb
outsl
fists
sbb
mov
inc
fsubrp
mov
add
shll
std
jge
dec
sub
and
dec
add
loopne
sub
add
repz
sub
mov
arpl
pop
add
and
outsb
and
push
jae
mov
cmpb
and
sbb
cmp
adc
pop
les
add
enter
divl
shr
add
and
std
adc
out
aam
inc
mov
dec
add
pop
mov
jmp
adc
iret
sub
xlat
and
xor
enter
enter
pop
jmp
ret
andb
or
pusha
enter
xlat
adc
sbb
lret
shrl
ja
inc
fsubs
add
arpl
cld
jmp
in
adc
jbe
and
mov
jge
sbb
lock
sub
je
ret
popa
ljmp
inc
leave
enter
cli
jbe
mov
fcomps
adc
mov
jmp
jne
mov
sbb
jmp
insl
mov
loope
xlat
jae
stos
jbe
addr16
sub
sub
pop
jne
add
ret
push
jmp
leave
je
jmp
sbb
enter
or
sbb
sub
lahf
pop
fldcw
sbb
jne
adc
dec
adc
test
out
mov
add
mov
jecxz
call
or
inc
xor
aas
pop
mov
dec
clc
cwtl
add
jo
ret
sbb
mov
mov
stos
lahf
mov
and
adc
outsb
sarb
test
push
push
cmp
mov
mov
jnp
rclb
xchg
hlt
dec
hlt
or
mov
adc
inc
push
or
je
lds
cmp
jg
sub
inc
push
jl
cmp
jg
add
loopne
call
mov
inc
rep
jmp
mov
leave
jmp
shr
mov
mov
dec
pop
mov
or
nop
or
jg
out
arpl
ja
je
sar
js
rep
sti
mov
fiadds
loope
push
inc
and
lea
sbb
std
sbb
cld
and
or
or
sub
sub
mov
or
xor
mov
add
push
lea
push
mov
add
or
xchg
dec
jns
mov
repnz
insl
lcall
xchg
push
arpl
sbb
jae
test
sub
jb
push
push
push
inc
mov
push
in
cmp
and
fistl
push
aam
inc
jnp
add
xchg
push
nop
pcmpgtd
mov
cmp
sbb
test
sub
jno
push
xor
mov
mov
or
and
les
dec
ja
push
add
repz
push
inc
sbb
sub
add
sub
adc
inc
push
and
cmpsb
mov
jle
ljmp
push
push
push
lea
push
or
jg
mov
lcall
cmpl
imul
jne
dec
add
pushl
and
out
mov
jbe
sub
mov
mov
pop
mov
push
pusha
lea
jne
push
and
in
cmp
jae
cmpb
jmp
push
dec
sub
outsb
std
in
add
jne
inc
lea
sub
or
iret
xor
adc
mov
je
imul
push
cmp
int
mov
sarb
into
fcomps
pop
push
insb
lock
add
rcll
pop
adc
push
sbb
mov
cmp
mov
sbb
popa
out
stos
shl
mov
push
and
pop
cwtl
mov
adc
shll
out
mov
push
pop
inc
sbb
cmp
aaa
dec
lea
pop
in
pop
and
jle
inc
add
repz
clc
fnsave
add
jmp
sub
mov
call
jp
sbb
jo
xchg
xorb
adc
mov
loopne
xchg
or
sbb
push
nop
or
lret
outsl
ljmp
pusha
mov
movzwl
and
cmp
jne
jno
lahf
dec
sub
imul
push
push
out
push
or
or
aad
adc
add
aas
ret
out
xor
divl
or
adc
sub
push
jmp
cmp
in
in
cmp
xchg
pushf
adc
jo
ret
push
or
clc
pop
or
hlt
push
std
frstor
pop
pop
inc
xchg
fstl
inc
cmp
sub
xchg
ja
and
add
xor
ja
call
mov
cmpsb
or
sbb
push
push
insb
jmp
cld
dec
sbb
pop
sahf
sbbb
loopne
cmp
xor
pop
stc
fnstcw
fmull
jno
xlat
jbe
cmp
in
movsb
xor
inc
sbb
or
sti
mov
adc
or
push
sbb
push
sub
dec
mov
inc
es
mov
das
loopne
dec
xor
mov
shl
pop
mov
shll
rep
mov
stos
xor
xor
or
sbb
pop
mov
dec
mov
xor
ljmp
adc
xchg
insl
jnp
add
xchg
pop
and
xor
xchg
pop
dec
inc
sbb
dec
xor
and
stos
icebp
and
shr
cli
mov
xchg
or
and
and
stos
or
aam
mov
je
int3
xor
dec
cmp
insb
cmp
jmp
mov
negb
jg
loope
mov
and
mov
and
decl
lock
sti
push
sub
std
or
pop
ja
xor
jo
or
sbb
xor
icebp
inc
add
mov
sbb
inc
mov
inc
adcl
inc
ret
pop
in
push
sub
jle
sar
mov
je
shll
clc
mov
hlt
inc
dec
jne
sub
mov
lret
and
addr16
push
push
dec
insb
pop
bound
das
icebp
or
push
inc
les
je
mov
sti
sub
sub
pop
and
je
pop
je
xor
daa
adc
test
pushl
add
sub
ja
cmp
ja
lea
mov
or
add
add
sub
out
int
out
mov
or
push
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
push
cvtpi2ps
popa
jb
dec
notl
jbe
pop
adc
or
jb
inc
leave
pop
add
aad
add
sti
pop
xor
mov
fnsave
repz
test
in
int
mov
jl
mov
idivb
lea
adc
fldt
in
out
fcmovnu
call
pcmpeqb
xor
jge
je
xlat
adc
jmp
jge
cmp
inc
stc
xor
add
stc
sbb
pop
fisubrl
fldt
fldz
fs
into
or
addb
aas
mov
repnz
repnz
or
or
ret
paddb
daa
mov
adc
mov
xchg
lahf
sub
sbb
add
mov
and
movsl
aam
movsl
adc
out
xchg
sub
out
incl
sub
pop
jecxz
add
leave
sbb
inc
cs
jbe
imul
cmp
mov
mov
jg
fwait
bound
cmpb
xlat
fadds
repnz
lods
outsb
xor
xchg
push
or
push
push
int3
into
sbb
sar
decl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
incl
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
inc
inc
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
ret
cmp
inc
xor
cmp
call
mov
push
inc
decl
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
jg
pop
cmp
addr16
repz
mov
subb
and
jmp
and
outsb
bound
xor
inc
mov
ja
es
pop
jne
rcrb
and
and
push
dec
les
addb
inc
mov
imul
clc
push
push
nop
sbb
jl
sbb
gs
hlt
ss
hlt
push
xor
xor
gs
jnp
and
ss
mov
and
lock
sar
sub
or
mov
decl
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
dec
add
push
dec
popa
cmpsb
push
popa
insb
jne
pop
lret
fninit
fldcw
aaa
mov
add
das
fidivs
in
es
push
add
mov
mov
xor
outsb
fdivs
add
rorb
sbb
call
mov
shlb
push
sub
fildl
je
popl
mov
iret
in
jle
insb
aaa
jo
mov
push
pop
mov
cld
out
xchg
stos
mov
mov
lods
roll
pop
subb
popf
adc
pop
rolb
les
ss
sbb
in
cmp
je
pop
mov
fadd
in
or
inc
push
mov
xor
add
dec
jne
jne
jecxz
lods
std
mov
mov
mov
xchg
pop
cmp
mov
test
and
ds
jae
pop
jb
movswl
xchg
and
rol
loope
pop
add
orb
rolb
push
dec
add
repnz
mov
stos
lfs
adc
rcl
cmp
mov
mov
and
mov
loop
push
push
lea
and
add
shl
dec
cli
pop
jae
xchg
mov
fmuls
xchg
mov
sbb
out
sbb
xor
pop
or
mov
mov
xor
xor
jb
cmp
jne
pop
or
jne
or
mov
adc
sub
inc
das
lds
push
repnz
xor
fistl
inc
or
out
sub
xchg
insl
aam
adc
push
jle
or
sqrtps
scas
mov
std
push
sbb
pop
out
sub
mov
mov
push
orb
pop
gs
pop
lea
fstpt
add
or
jne
pop
pop
mov
fdivs
add
leave
or
mov
shl
dec
mov
icebp
pop
lods
pop
inc
loope
test
push
sub
jg
shlb
and
mov
mov
mov
aaa
lock
push
inc
add
orb
mov
or
pop
cmp
test
and
sub
mov
pushf
adc
pop
icebp
cli
xchg
adc
push
clc
testl
clc
jmp
add
cmpb
push
repnz
in
push
call
mov
sbb
mov
add
xchg
je
in
or
pop
push
sbb
push
fcomip
jbe
pop
push
push
mov
aam
or
mov
cmp
lods
les
jmp
or
mov
add
xor
lods
fwait
xor
mov
sub
push
pop
mov
push
pop
loop
xchg
sbb
scas
mov
testl
call
cmpl
adc
outsb
cld
sub
sub
popa
shrb
arpl
addr16
clc
outsl
add
fstpl
out
push
je
mov
mov
sub
shlb
pop
ja
mov
ss
lods
add
stos
pushf
xchg
lods
shl
jp
or
or
mov
xchg
push
adc
push
mov
push
cmp
je
orl
loope
sbbl
sub
sub
push
das
pop
or
pushl
jle
inc
das
add
add
add
pop
sub
mov
popa
mov
insb
test
adc
fstpl
enter
testb
push
das
je
mov
push
add
cmp
outsb
xor
pusha
mov
fnsave
int
in
ljmp
pop
inc
mov
clc
push
push
push
push
push
inc
pop
pop
insb
xchg
jb
mov
and
add
sahf
int
pop
cmp
xchg
inc
or
outsb
lcall
rolb
call
rclb
pop
test
lea
mov
mov
lea
pushl
xor
jmp
fistpl
add
ret
das
int3
jg
stos
mov
add
je
cmp
push
cli
aas
fmul
sub
adc
pusha
add
pop
stc
aas
sub
jb
je
jmp
cmp
cmp
jge
insl
and
add
cmp
cmp
lea
pop
or
cmp
mov
jmp
mov
jmp
ljmp
arpl
push
mov
jmp
mov
dec
push
or
inc
add
pop
xor
enter
mov
mov
inc
cmp
inc
aas
je
in
xor
sub
xor
inc
ljmp
loopne
mov
cli
cli
out
push
out
or
push
jp
mov
add
lret
test
test
lcall
adc
xor
lds
sub
push
outsb
in
xor
mov
mov
xlat
shrb
cmp
fildl
sub
or
add
stc
inc
daa
adcl
test
xor
test
rorl
jnp
dec
mov
xchg
inc
fsub
imul
repz
xchg
sbb
jo
in
jmp
inc
sbb
das
das
xor
fs
fs
outsl
mov
pop
push
xor
jle
insb
and
imul
or
cmp
jg
xor
add
mov
cwtl
mov
movsl
mov
js
inc
xchg
sub
jmp
mov
cmp
in
movb
pop
jne
call
lea
xchg
push
xor
fistpll
sbb
or
jmp
pop
notl
sub
daa
add
sbb
or
mov
push
clc
shlb
ret
mov
std
cltd
idiv
add
add
mov
adc
sti
pop
dec
cwtl
call
and
mov
add
dec
sbb
loope
sbb
push
neg
sbb
inc
pop
aam
outsl
cmp
pushl
add
mov
mov
jbe
movsl
sub
jg
jl
loop
iret
inc
adcb
sbb
mov
cmp
mov
lcall
adc
mov
addl
mov
lock
jl
test
add
das
xlat
add
push
mov
mov
inc
xchg
cmpb
push
cmpl
push
add
push
cld
and
mov
or
into
out
sahf
loope
xor
xor
nop
pop
add
xor
ss
jbe
icebp
jnp
ret
cs
mov
mov
mov
cmp
mov
repz
in
or
add
sbbb
aas
mov
or
xor
push
hlt
les
xchg
sbb
fimuls
and
fcmovnbe
inc
xor
mov
addl
jl
lock
sbb
inc
clc
inc
pop
out
push
mov
insl
adc
sbb
add
mov
dec
push
or
frstor
pop
fsubr
dec
jne
mov
and
clc
aad
jg
test
xor
jbe
push
fmull
dec
cld
cmpsl
out
jmp
cmp
add
mov
xchg
dec
inc
mov
jle
jae
jle
push
mov
or
pop
movw
inc
add
or
push
cld
lcall
mov
xchg
push
loop
mov
xchg
stc
mov
jne
add
mov
pushf
push
shll
mov
shrl
xor
push
cmp
push
pop
mov
mov
add
add
mov
sar
les
mov
clc
insb
jg
clc
arpl
pop
add
sub
cmp
sub
aas
cli
pop
lds
jl
sbb
add
mov
fwait
out
fldl
fisttpl
sarl
jl
pop
xor
das
jge
xor
jl
push
push
mov
push
test
or
inc
addr16
push
and
or
cmp
lret
add
je
divb
mov
mov
pop
sub
jmp
arpl
sub
and
imul
sub
add
xor
jmp
add
mov
insb
add
cmp
cmp
test
iret
mov
inc
dec
nop
push
sub
insl
repnz
or
test
pop
pop
sbb
mov
mov
add
stos
jnp
cmp
inc
cld
ret
sbb
aaa
loope
xchg
sbb
jns
and
or
cld
add
cmpsb
mov
mov
mov
adc
repz
sti
fiaddl
mov
inc
pop
mov
adc
cmp
mov
cmp
push
push
rorl
sbb
mov
sub
push
pop
dec
mov
cli
bound
cltd
fcmovu
add
pop
pinsrw
lds
mov
jmp
pop
outsb
pop
pop
push
push
xor
mov
test
push
cmp
jns
cld
dec
jmp
cmp
in
adc
iret
push
es
mov
jg
add
mov
add
dec
jmp
xchg
dec
hlt
sbb
push
das
inc
pushf
sbb
push
insl
dec
mov
jmp
insb
outsb
or
xchg
dec
pop
xchg
pop
lea
ljmp
aas
jns
in
cmp
adc
push
add
push
cld
sub
ja
add
push
je
mov
es
cmp
jne
dec
je
in
add
lds
popf
or
add
lahf
loop
mov
add
or
das
lret
mov
and
cmp
cmp
jne
push
adc
ret
jecxz
insb
add
mov
and
sbb
push
adc
std
pop
adc
shr
or
hlt
fcom
push
clc
inc
repz
loopne
cmp
inc
inc
sub
add
je
push
call
in
mov
fists
push
pop
pop
or
mov
es
dec
inc
adc
rolb
or
iret
pop
aaa
pop
pop
cmc
jg
fisubrs
dec
es
jl
cmp
jge
sub
cmpsl
push
push
xchg
sbb
fsubp
movsb
or
jmp
mov
jmp
mov
inc
fldenv
xor
jl
jl
xchg
jge
pop
jle
sub
fnstcw
cmp
fbld
sub
add
lea
mov
ja
adc
cmpsl
cmp
cmp
hlt
cmp
or
fimull
sbb
outsb
mov
adc
aad
in
sbb
in
pop
aas
adc
popa
lret
rcr
clc
push
mov
xor
jne
pop
push
and
mov
pop
ss
mov
push
adc
hlt
inc
mov
jmp
sbb
insb
mov
jmp
push
jl
push
or
bndldx
cli
int
mov
push
jp
mov
sub
cmp
push
push
popf
mov
sti
pop
mov
pop
push
push
rcr
popf
push
pop
stos
stos
jb
mov
mov
call
inc
mov
mov
sahf
scas
aam
push
jb
jno
nop
pop
and
cmp
jmp
pop
repnz
lock
cld
jmp
xor
pop
andl
xchg
inc
cmp
leave
xchg
or
daa
mov
int3
pop
pushl
dec
loopne
inc
cmc
adc
sub
cs
and
jo
add
add
jbe
imul
call
add
push
push
push
enter
xor
mov
sub
pop
data16
shl
in
sbb
or
and
outsb
or
pop
push
stc
insb
cmp
js
std
cmp
add
pop
dec
cmp
dec
push
testl
leave
sub
cmp
orps
ret
add
fisttpll
xchg
mov
outsl
mov
dec
das
push
inc
lds
sub
mov
push
pop
add
cmp
inc
mov
add
ja
or
faddl
or
ljmp
out
sub
sbb
pop
and
in
les
mov
mov
pop
cmp
push
pop
sub
jg
stc
insl
or
cmpsb
push
mov
mov
add
add
mov
or
mov
push
add
and
cmp
jp
or
jbe
push
mov
mov
sub
cmp
pop
mov
shrb
cmp
inc
add
or
pushf
jl
adc
or
sbb
pop
dec
in
arpl
ja
cmp
jmp
adc
outsl
mov
cmpl
push
mov
mov
adc
add
dec
rclb
sbb
call
imul
sbb
jge
clc
xchg
lock
cmpsb
inc
sbb
xchg
lods
push
sbb
jmp
cmp
sbb
mov
dec
test
inc
sbb
pop
cmpxchg
cmp
orb
cld
push
inc
inc
add
cld
out
lock
and
add
sarl
add
je
imul
xchg
mov
pop
sbb
or
je
xchg
xchg
xchg
dec
or
jo
andb
mov
bound
in
aas
adcb
adc
pslld
in
adc
xor
push
add
je
cld
or
mov
xchg
cmp
pop
add
movsl
push
ja
cld
sbb
pop
in
in
in
test
pop
adc
rcrl
dec
jne
sbbb
sbb
call
iret
and
jns
addr16
testb
jge
inc
push
sbb
cmp
cmc
lods
pushf
dec
jne
push
xchg
cmp
sarl
adc
adc
dec
arpl
sbb
or
ja
std
add
popa
and
jmp
pop
mov
sbb
les
cmp
add
sahf
cmp
pop
add
cwtl
loope
dec
adc
xor
adc
in
lods
push
nop
mov
sub
mov
push
and
mull
mov
int3
inc
mov
or
jecxz
or
pop
pop
hlt
sub
insb
mov
fisttpll
cmp
into
or
dec
jp
sahf
sahf
rol
pop
ret
in
dec
and
pusha
sub
pop
mov
cmpsb
ss
sbb
imul
pop
mov
sbbb
loop
mov
inc
or
incl
subl
jne
inc
xor
or
movzbl
add
jo
mov
jo
push
push
outsl
jno
lcall
bound
je
out
sub
mov
pop
sbb
lock
adcl
push
or
dec
in
dec
cmpl
cmp
sub
cmp
jle
pop
test
or
sbb
rclb
test
pop
iret
sub
mov
and
jne
outsb
in
jmp
sub
dec
in
lret
mov
clc
mov
cmp
jge
add
lock
xor
push
xor
push
mov
ret
push
push
in
xor
fcoms
push
dec
adc
rcl
into
sbb
pop
and
and
and
add
sti
push
sti
stos
sbb
shrl
xlat
pop
movb
pusha
lods
xchg
cvtps2pd
add
pop
or
ljmp
xchg
sbb
xor
repnz
pusha
hlt
lret
push
inc
xchg
push
ds
xor
jnp
addl
and
ljmp
int
xor
cmpsb
dec
daa
push
cmp
xchg
adc
js
jle
pop
lds
lcall
mov
adc
adc
dec
dec
push
sbb
adc
pop
add
cmp
sbb
sub
mov
xchg
data16
xchg
aam
mov
clc
cmc
or
dec
out
sub
in
stos
or
les
lea
lret
adc
inc
sbb
add
jb
fisttpll
add
hlt
mov
or
aam
sub
cld
lret
pop
or
or
add
mov
dec
mov
sti
negl
dec
test
adc
mov
pusha
adc
icebp
mov
imul
sti
pop
out
sub
movsb
push
decl
hlt
push
xor
and
clc
mov
inc
push
adc
sahf
loope
mov
cmp
dec
sbbl
adc
lods
mov
cmp
pop
js
pop
out
inc
ret
mov
aad
cmp
mov
stos
jo
or
inc
jbe
inc
pop
cmc
cmp
xor
outsl
mov
cld
lea
imul
lock
imul
clc
mov
ret
inc
cmp
in
mov
mov
sbb
inc
stos
adc
inc
jl
adc
je
push
aam
aas
cmp
inc
lea
ret
pop
movb
lret
push
mov
mov
xchg
int
pop
inc
pop
aas
hlt
mov
call
test
rorb
cmpsl
inc
ljmp
xchg
or
imul
gs
xor
cs
loope
fildll
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
adc
or
shrb
ljmp
adc
sbb
add
mov
inc
cmpsb
lods
push
dec
sbb
insb
and
movsb
xchg
in
add
xor
div
into
ds
faddl
add
inc
out
mov
std
fs
addr16
loopne
sbb
add
sarb
outsb
dec
push
clc
notb
push
push
inc
and
add
in
dec
shlb
out
cmpb
repz
mov
je
or
imul
xlat
notb
add
pop
mov
in
fsubl
test
and
or
add
inc
sar
and
in
rcl
int3
ret
xchg
imull
sub
jne
xchg
pop
cmp
push
pop
test
cmp
lahf
push
stos
cld
addr16
outsl
data16
popa
jb
fsubrl
or
gs
mov
ror
mov
adc
inc
aam
inc
hlt
cli
add
arpl
or
jno
cmp
pop
or
in
add
push
push
lock
or
mov
lds
push
lods
cmp
jne
pop
repnz
fcompl
mov
inc
or
aas
cs
mov
pop
inc
xor
mov
enter
roll
xor
or
xor
push
jo
cmp
jecxz
lcall
and
shll
popf
inc
mov
add
mov
cmp
mov
divb
push
jg
cld
push
or
pop
gs
and
add
adc
dec
inc
jl
inc
insb
pop
cmp
inc
arpl
xor
dec
add
push
and
jmp
loopne
rolb
aam
lahf
nop
pop
mov
call
adc
ss
push
mov
or
enter
push
and
in
testb
adc
pushf
sarl
pop
mov
daa
pusha
adc
stos
inc
xlat
ja
xchg
and
or
sbb
rolb
jmp
lods
or
or
push
pop
xchg
daa
pusha
add
rep
pop
or
mov
lock
les
fs
sub
test
imul
push
mov
dec
rorb
loopne
cli
mov
inc
cmp
ja
mov
cli
mov
jbe
lea
cs
ja
fcmovb
jmp
orb
sti
lret
loopne
sbb
or
and
or
sbb
pop
mov
or
push
xor
push
jmp
int3
sub
mov
add
push
shlb
loop
cltd
add
mov
xchg
fbstp
add
mov
xor
sbb
or
add
sbb
jecxz
push
loopne
inc
mov
in
test
inc
movl
aam
jmp
cld
sub
pop
ljmp
outsl
lods
jg
or
inc
test
push
xchg
jae
jl
loope
adc
je
push
mov
shlb
mov
shlb
enter
xor
mov
and
fucomi
loope
or
out
fidivrl
cld
mov
jmp
sub
or
inc
ljmp
cmp
sti
sbb
sahf
xor
movl
pop
int
lret
cmpsb
ret
xor
subb
jb
xorb
and
cs
sbb
or
mov
xchg
ja,pt
dec
ds
or
insl
negl
mov
inc
daa
dec
cld
xor
mov
or
adc
je
addl
add
mov
inc
dec
inc
in
popa
pop
sub
or
dec
pop
jo
pop
in
rcrb
shll
incb
dec
sub
mov
pop
orb
inc
sbb
dec
ss
jl
adc
inc
mov
cmp
leave
inc
cmp
cmp
loope
dec
and
cs
scas
pop
xlat
cmp
dec
dec
push
dec
rcll
repnz
adcl
cmpl
jns
sub
mov
shrb
add
je
xor
enter
popa
or
push
add
xchg
dec
insl
xor
push
add
das
mov
and
push
cld
sub
mov
push
lea
push
push
or
cwtl
lock
mov
and
mov
xchg
in
inc
inc
sahf
xchg
mov
add
cmpb
push
incl
mov
pop
jne
cwtl
cwtl
or
orl
mov
sbb
jae
push
clc
pop
subl
sub
push
add
fldcw
addb
xor
sti
es
insl
mov
loopne
loopne
sbb
cmp
sbb
mov
iret
cmpsb
add
push
test
cmp
sub
cmp
dec
cwtl
or
and
jg
dec
mov
movsb
mov
add
inc
mov
fadd
pop
sarb
dec
lock
mov
xor
adc
ss
lea
push
incl
adc
inc
repz
mov
negl
pop
adc
push
mov
mov
or
lds
test
aad
xchg
sub
xchg
lea
sub
push
hlt
mov
cmp
ds
mov
mov
movsb
fisubs
call
fsubr
pop
add
les
xor
cmp
ds
mov
adc
xchg
pusha
fs
or
les
and
sub
mov
aaa
push
insb
and
and
fsubs
xchg
pop
fs
pusha
pop
pop
and
or
push
push
dec
and
inc
orl
cmp
xor
or
enter
and
enter
sbb
enter
adc
or
orl
add
push
sbb
in
xchg
clc
hlt
lock
in
call
push
loopne
fmul
inc
push
sbb
sarb
mov
xor
and
and
and
and
jl
or
enter
lock
enter
loopne
enter
fcom
enter
ror
enter
xor
scas
leave
in
push
enter
jo
enter
arpl
je
arpl
push
in
je
lock
fs
inc
ds
icebp
repnz
inc
push
sbb
cmc
testb
fs
stc
push
sbb
sti
cld
std
sbb
jmp
fs
inc
push
loope
jecxz
inc
push
sbb
in
inc
push
sbb
jmp
ljmp
inc
out
out
shlb
push
rcl
rcll
aad
inc
push
sbb
flds
sbb
fcmovnu
fstpl
fs
inc
shlb
rol
nop
inc
push
sbb
push
sbb
leave
push
sbb
lret
int3
int
fs
inc
into
iret
mov
nop
inc
push
mov
mov
inc
push
sbb
fs
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
cmpsl
test
pmulhuw
js
data16
jb
js
pop
add
sub
or
jp
das
xor
xchg
femms
add
inc
fmul
aas
or
arpl
je
outsl
outsb
rcrb
sub
rclb
sbb
mulb
or
inc
dec
gs
jo
nop
sub
pop
add
in
sub
test
inc
dec
jne
dec
dec
gs
outsl
jb
inc
mov
ret
pop
mov
mov
inc
dec
outsb
pop
inc
jb
pop
loopne
push
or
je
mov
insb
xlat
cmp
in
jns
cmp
adc
gs
nop
imul
test
prefetch
enter
lock
lock
push
or
imul
outsl
nop
dec
imul
imul
mov
aaa
add
outsb
jbe
jb
insb
outsl
ja
lock
pop
cld
pop
pop
arpl
pop
sbb
dec
mov
leave
xchg
pop
fsts
push
push
imul
jbe
imul
adcl
mov
push
inc
arpl
pusha
pop
sub
sbb
push
pop
imul
sub
pop
push
outsb
fs
nop
mov
inc
pusha
mov
jbe
jl
pop
push
outsl
imul
enter
das
mov
pop
ss
inc
popa
jae
outsl
insb
pop
lods
pop
inc
xchg
inc
and
imul
sarb
adc
arpl
jae
push
mov
sub
insl
js
repnz
insl
push
jb
lret
js
gs
adcb
outsl
adc
scas
push
je
arpl
or
lret
fcompl
cs
js
or
push
inc
imul
and
adc
xor
push
lret
test
popa
lahf
nop
pop
rcll
sbb
push
inc
and
inc
popa
outsb
lea
or
or
pop
lock
sti
lods
mov
fdivs
mov
pusha
adc
and
jb
push
data16
adc
pop
or
push
push
lea
mov
jo
dec
lods
inc
push
popa
data16
adc
fldl
cs
xor
scas
pop
add
insb
dec
pop
or
mov
insb
jae
cmp
cmp
jmp
fbld
add
cli
inc
pop
inc
dec
xchg
xchg
mov
jb
call
add
loop
add
add
cmpl
mov
pop
mov
and
aaa
aam
xor
aaa
jb
jmp
leave
fbstp
rcr
loope
add
adc
or
fisttpl
push
loopne
sbb
fbstp
xlat
or
lcall
xor
xchg
add
mov
mov
ds
ficoms
inc
sub
je
push
insb
loope
outsb
arpl
bound
mov
popf
imul
movsl
cli
ret
mov
js
mulb
add
adc
lret
mov
mov
mov
add
call
loop
sbb
adc
ds
and
cmp
fadds
les
mov
or
adc
fisubs
add
push
cmp
ja
sub
add
mov
adc
pop
dec
sbb
xor
popa
xor
dec
inc
pop
and
push
mov
sub
sub
orb
mov
mov
cmp
jbe
cmp
repz
je
mov
adc
add
or
cmp
es
mov
out
and
sti
je
test
mov
add
sub
pop
mov
and
mov
pop
dec
adc
or
jne
dec
aad
bound
add
sub
pop
int
xchg
das
push
cli
movnti
sbb
push
jnp
aaa
add
arpl
push
iret
ljmp
dec
lock
hlt
in
cmp
jl
cmpb
jbe
or
mov
mov
mov
cmp
dec
adc
clc
xor
jns
adc
mov
aaa
lods
inc
or
jne
cmp
push
mull
sbb
push
ret
adc
aas
add
push
outsl
mov
jb
pop
pop
mov
dec
ljmp
icebp
sub
jbe
add
jne
jmp
mov
dec
jne
sarl
mov
sub
xor
push
aaa
dec
add
repnz
push
fisttpl
imul
test
lds
loope
pushl
xor
jo
pushl
mov
imull
or
movsb
movb
dec
inc
cli
jg
test
push
push
add
jl
add
cmp
orw
ficoms
fldcw
mov
call
aad
andl
fildll
sti
imulb
fildll
ret
sub
fildll
filds
rorl
dec
rcr
fildll
stc
mov
xor
mov
insl
imul
push
fcom
fstsw
sahf
jae
fnstenv
test
ffree
ffree
ffree
ffree
pop
ljmp
add
out
out
in
mov
or
jo
shll
mov
andl
and
push
mov
ret
push
cmp
pop
jne
aam
mov
mov
sbb
push
or
adc
push
push
or
pmuludq
mov
cmp
inc
mov
ja
push
lock
shlb
sbb
jbe
xor
mov
mov
mov
xchg
xchg
jb
cwtl
das
adc
syscall
mov
and
stc
adc
inc
dec
add
repnz
jl
inc
mov
mov
mov
push
sbb
add
add
jecxz
or
push
adcl
jmp
fiaddl
ds
mov
dec
ja
mov
mov
adc
insl
lock
setne
jmp
leave
out
sbb
push
jmp
or
inc
mov
mov
xor
and
mov
cmpsl
ret
mov
mov
add
or
lret
sub
mov
ja
adc
in
ret
jno
adc
jmp
adc
mov
shr
jge
xchg
push
jno
adc
out
movsl
jg
or
mov
and
cmp
ja
cwtl
and
rcrl
inc
ja
sbb
aam
inc
notl
mov
and
mov
mov
mov
xor
int
mov
add
or
cld
mov
shrb
push
jecxz
sub
sub
xchg
adc
scas
aam
loopne
pop
sbb
enter
in
sub
dec
push
or
or
push
adc
mov
cmpsl
pop
les
lock
mov
arpl
ror
mov
mov
xor
pop
ds
jnp
pop
aas
testb
push
jae
mov
mov
dec
dec
sub
cmpsb
dec
jo
aas
adc
sarl
xchg
in
mov
sub
push
ljmp
out
lods
sub
pop
cmp
mov
loopne
or
adc
loopne
enter
sub
addl
andb
push
mov
in
fdivs
adc
aas
sub
imull
sub
inc
mov
mov
xor
stos
call
lret
das
inc
add
jb
adc
jae
mov
xchg
cld
fdivrp
xor
mov
ljmp
enter
or
push
in
add
lock
mov
add
lret
mov
lea
inc
fnstcw
fisttps
cmp
cltd
fnstcw
pop
pop
ret
and
add
add
test
sbb
pop
xlat
mov
xor
or
pop
fsts
sub
mov
cmp
mov
and
je
jo
int3
fdivrs
or
call
outsl
shrl
jne
pop
or
cwtl
ret
mov
mov
test
dec
je
mov
mov
push
fildl
sbb
push
mov
lods
ljmp
jae
mov
lea
in
and
sub
fwait
and
insl
rolb
and
sbb
dec
sbb
ret
lock
ljmp
pop
sub
jo
aad
lock
rolb
sti
pop
jbe
mov
pop
pusha
rorl
push
cmp
jo
mov
or
inc
rcl
cmp
ss
jns
les
and
add
inc
popa
jne,pn
and
mov
movsb
in
popa
rorb
mov
cmp
mov
sbb
rcrl
lds
add
leave
add
push
in
in
into
jmp
js
lcall
test
push
popa
xchg
shlb
mov
push
stos
jmp
js
dec
xor
push
bnd
inc
incb
mov
cmp
jne
adc
lret
in
adc
or
hlt
adc
lods
jmp
or
ss
cmp
adc
std
and
fmull
adc
and
sti
adc
cmpb
or
out
pop
pop
data16
rcrl
movsb
xchg
or
sbb
push
sbb
cwtl
outsb
repnz
jb
pop
ret
mov
dec
popf
insb
adc
dec
cmp
jb
push
cmp
imul
shrb
dec
push
mov
daa
and
das
cmp
xchg
jg
incl
jle
ja
test
sbb
mov
add
xor
ret
and
mov
mov
mov
pop
pop
or
xor
mov
outsb
loope
insb
dec
push
popa
and
cmp
fwait
cmpsb
jae
addl
scas
jle
jmp
dec
sbb
sub
pop
cwtl
jbe
in
movsl
push
mov
aas
jg
fsubrs
shll
push
fstpt
jne
adc
xor
cmp
testb
iret
push
sub
imul
test
mov
cmpsl
cs
xor
arpl
xor
xor
push
adc
lea
pushf
sti
ret
ljmp
sbb
lds
adc
push
add
jmp
or
lods
ljmp
div
push
sti
jmp
mov
mov
jne
pop
mov
mov
aad
xchg
mov
test
or
add
xorb
lods
adc
push
jmp
mov
dec
mov
pop
pop
push
leave
cmp
repz
insl
outsl
adc
mov
aaa
mov
inc
je
mov
out
repnz
outsl
push
inc
je
mov
inc
je
mov
dec
je
outsl
jo
mov
mov
sub
ret
dec
mov
cmpl
nop
test
add
inc
pop
cli
xchg
adc
cmp
aam
xchg
scas
and
movsb
jo
mov
jl
ret
sbb
adc
leave
jo
pop
pop
iret
lahf
sub
xchg
lret
inc
stos
call
cmp
push
xor
aaa
push
xlat
ljmp
jns
sub
cmp
pop
icebp
iret
dec
push
pusha
adc
xchg
data16
dec
add
adc
jbe
pusha
inc
cmp
ret
or
arpl
call
jmp
pop
xlat
mov
daa
ds
cwtl
dec
cmp
jl
jmp
add
shlb
mov
dec
fadds
dec
cmp
das
xlat
mov
sbb
cs
xor
rcrb
imulb
push
mov
test
or
das
fucomp
neg
push
or
mov
push
mov
jp
push
jbe
mov
push
mov
decl
jg
dec
mov
stos
cmp
jne
pop
pop
push
jnp
push
jg
jno
cmp
xchg
mov
mov
jl
in
pop
hlt
mov
xor
push
cmp
mov
les
loope
jne
xchg
sbb
pop
and
jle
sub
ret
stos
or
scas
adc
jb
out
insb
call
stc
stos
jae
mov
movzwl
sub
push
cmp
sbb
mov
lret
lea
or
insb
push
xor
adc
ja
jg
je
add
or
mov
add
fbstp
mov
cs
dec
sbb
js
mov
fs
aaa
subl
xor
dec
dec
inc
sub
clc
dec
inc
dec
lods
or
outsb
mov
test
cmp
aam
clc
das
adc
sbb
sbb
adc
in
cmp
or
pop
jmp
cmc
inc
inc
je
stos
loop
jge
mov
les
stos
or
and
daa
mov
stos
adcl
ret
lds
mov
xchg
dec
or
cmp
leave
mov
mov
int
mov
dec
sub
fwait
out
sbb
add
add
test
add
nop
dec
int3
jle
dec
scas
div
mov
inc
push
rorb
mov
in
dec
jne
cli
xor
stos
sbb
call
mov
stos
jecxz
cmp
add
insb
in
push
mov
cs
test
mov
and
or
adc
mov
lret
xchg
mov
fimuls
addr16
cli
stos
mov
je
mov
jmp
jmp
or
movsl
pop
push
jb
jl
loop
lret
pop
pop
test
test
inc
add
and
popf
or
jle
int
and
adc
inc
sub
sub
adc
and
or
out
mov
aaa
or
frstor
sub
sbb
inc
sub
mov
loopne
mov
add
insb
xorb
scas
int
in
jno
adc
ret
rolb
mov
testw
aaa
mov
mov
add
movb
out
or
xor
mov
bound
clc
adc
repz
jmp
neg
loope
frstor
inc
pop
frndint
jmp
fldt
fstsw
fwait
pop
inc
testb
fnstsw
mov
ljmp
fbstp
lea
mov
fbld
out
loope
and
add
cld
in
push
mov
stos
inc
clc
add
jns
fisttps
dec
fdivr
cmp
dec
add
call
jae
sub
cmp
xor
pop
loop
xchg
and
or
in
jmp
or
mov
mov
fs
mov
out
mov
icebp
sti
push
or
mov
push
add
dec
out
in
fs
fisubl
movups
pop
jo
pop
sub
lahf
or
pushl
dec
xchg
ljmp
test
or
jge
fldl
pop
mov
cmpsl
sbb
jae
add
add
addr16
fildll
cli
push
lods
or
mov
mov
filds
insb
rcr
push
mov
outsl
cmp
pcmpeqw
dec
adc
cmp
or
pop
adc
push
in
push
and
add
movb
int
jae
cmpb
idivl
fistpl
scas
pusha
test
or
push
and
sbb
shrl
pop
fstenv
insb
clc
or
fnclex
fldcw
shll
mov
inc
lods
icebp
ds
add
add
icebp
adc
adc
xor
inc
push
mov
or
cmp
je
adc
fimuls
inc
push
adc
pop
add
aas
push
pop
in
dec
jne
pop
iret
xorb
add
loopne
pop
loop
outsl
pop
add
aas
pushf
fstpt
pop
test
xchg
push
ret
mov
scas
fcmovnbe
ret
xchg
jmp
data16
and
lock
lcall
fsubrs
pminub
xor
jmp
sbb
mov
scas
stc
xchg
sub
inc
imul
popl
cli
hlt
enter
add
test
mov
insb
mov
cmp
add
xor
xchg
cmp
mov
add
daa
inc
mov
add
pop
jne
or
mov
sti
pop
adc
aam
fldt
fstpl
fwait
and
sub
push
mov
test
add
mov
sbb
and
sub
mov
jmp
lods
inc
jae
divl
or
pop
xchg
or
leave
push
push
loop
or
testb
or
ja
jae
add
cli
cmp
inc
stc
inc
ss
orl
cmp
shlb
out
add
shrb
pusha
ljmp
aam
call
mov
filds
fdivs
fstpl
fwait
jmp
or
out
pop
repnz
push
int
lret
movsb
dec
mov
push
sub
push
pushl
add
mov
shlb
mov
sbb
mov
lret
jo
cmp
mov
iret
adc
call
adc
sub
sbb
pop
fdivs
test
or
ss
adc
test
jne
push
mov
inc
and
xchg
bound
xchg
xchg
lcall
js
dec
jg
add
pop
mov
fldl
pop
incb
jb
mov
and
mov
jb
add
sti
idivl
and
cmp
ja
or
adc
push
dec
pop
adc
arpl
sbb
add
inc
dec
push
shll
idiv
imul
fcmovnu
imul
mov
stc
add
das
ret
pop
push
out
ret
cmp
push
inc
push
daa
iret
in
mov
xchg
inc
push
jg
fsubrl
lahf
dec
xchg
flds
hlt
insl
loopne
inc
add
sub
je
mov
retw
filds
xor
pop
or
mov
repnz
lock
ret
lods
mov
jbe
fistpl
decw
sbbl
mov
ret
fsubrs
adc
repnz
mov
shl
sbb
sbb
add
pop
pushf
test
rolb
push
or
and
stos
in
data16
enter
dec
mov
testl
or
das
inc
jmp
push
sbb
stos
cwtl
pop
adcb
hlt
jno
xchg
push
sub
pop
int
pop
lock
add
nop
mov
in
pop
fidivl
xorl
clc
lret
aaa
insb
lds
lock
jne
cmp
xchg
cmp
mov
add
test
loop
sub
mov
sbb
adc
inc
fsubl
lea
fbld
or
cwtl
sbb
ss
in
sbb
xchg
pop
dec
push
sbb
mov
loopne
in
mov
pop
mov
or
jo
xchg
mov
mov
xor
aam
rorb
inc
or
cmpsl
push
push
adc
add
icebp
sub
mov
mov
cmp
je
dec
cld
inc
mov
jne
add
cmpb
sub
mov
add
mov
dec
out
add
cmp
push
imul
movb
cmp
jecxz
inc
outsb
and
in
ds
test
insb
inc
ljmp
int3
roll
sbb
icebp
or
cld
into
pop
and
cmp
mov
xchg
or
in
push
lcall
pop
stc
mov
dec
push
arpl
push
lods
imul
pop
rcll
test
sub
sar
push
dec
pop
adc
push
aaa
xchg
sub
rolb
sbb
push
popa
mov
and
push
test
push
and
or
pop
push
or
cmpl
or
push
loop
mov
dec
sub
jl
jmp
xlat
add
je
bound
rorl
fsubs
sbb
or
ja
sub
sbb
mov
or
add
adc
adc
pop
jb
in
out
repnz
pop
push
repnz
punpckhdq
or
inc
jb
in
in
inc
or
je
jne
xchg
loope
cld
test
cmpb
jne
push
inc
enter
push
xor
add
jnp
pop
inc
clc
idivl
add
pushf
rcll
add
add
mov
add
fldt
enter
mov
xchg
rolb
popa
lahf
push
pop
pop
mov
sarb
jne
add
dec
ud0
in
loop
add
add
loope
xchg
insb
fisubs
inc
push
adc
mov
mov
dec
cmc
push
icebp
mov
or
dec
ds
and
pop
ljmp
xor
mov
dec
mov
lret
dec
mov
insb
sub
mov
ficomps
outsl
ja
sbb
cmp
jmp
mov
maskmovq
testl
andl
push
pop
inc
test
pop
or
xchg
cmp
inc
pop
xchg
add
pop
cs
adcl
pop
ss
sub
xor
ja
jp
ret
jl
pop
push
js
clc
loopne
xor
sub
jmp
nop
in
icebp
insl
sarb
jbe
frndint
pop
sti
and
ffreep
dec
and
and
fsubrs
push
and
xchg
aam
pop
aam
dec
data16
cltd
and
mov
xchg
sbb
sub
dec
sub
fadd
mov
popf
shlb
div
add
dec
je
add
jg
push
shrb
mov
hlt
pop
pop
fistps
xchg
scas
in
sbb
mov
mov
adc
mov
xchg
loopne
sbb
jbe
addl
aad
fwait
loope
adc
scas
and
mov
sub
jg
cmp
das
outsl
aas
mov
je
add
je
sbb
bound
fistps
lods
pop
pop
je
push
mov
dec
jae
dec
push
push
sahf
das
in
sub
and
add
mov
je
jne
jl
pop
mov
mov
add
shlb
cmp
jge
push
inc
push
data16
mov
outsb
sub
or
add
or
or
fmuls
mov
das
inc
popa
push
add
dec
and
add
push
leave
add
test
sbb
add
in
pusha
call
lods
je
sbb
jp
sub
adc
dec
cmpsl
push
mov
add
and
popf
ds
inc
add
add
jbe
mov
xor
jae
in
leave
fmuls
xchg
inc
jmp
adc
dec
add
cs
mov
xor
dec
pop
test
inc
cmp
add
jmp
stc
mov
add
dec
mov
add
push
test
lcall
les
int3
sbb
pop
aaa
movsb
jae
cmpb
mov
ss
and
mov
mov
in
pop
push
mov
or
lods
push
or
or
nop
shl
mov
sub
fimuls
popf
and
sub
adc
jno
sub
mov
and
adc
add
repnz
aam
std
inc
sbb
dec
das
push
dec
add
add
adc
out
add
adc
ljmp
pop
adc
dec
and
cmp
or
mov
int3
jae
andb
jp
or
stos
fnstenv
pop
inc
pop
cmp
pop
out
push
sub
push
or
inc
pop
ljmp
fdivrs
push
jmp
je
mov
xor
dec
jnp
or
mov
mull
dec
lods
je
jge
cmpsb
mov
xor
ret
inc
add
aam
mov
pop
mov
inc
das
out
ljmp
lahf
loopne
pop
adc
sub
jae
cmc
jb
xlat
stos
pop
add
sbb
dec
pop
in
ss
adc
ret
add
sbb
mov
outsl
jbe
fildl
or
cmpb
in
loope
xor
push
aad
add
dec
mov
push
test
inc
shrb
add
add
enter
call
arpl
and
push
mov
inc
test
add
jae
outsb
dec
jp
stos
cmp
push
pop
repnz
cmp
sbbb
add
pop
rolb
mov
in
sub
ds
fildll
je
dec
je
sub
outsl
mov
je
adc
push
pop
not
push
push
inc
pop
clc
jle
xor
aad
outsb
xchg
cs
movsb
mov
push
mov
xor
mov
add
aas
add
test
jl
sub
add
push
push
mov
lea
add
add
sub
fcomps
les
pop
add
mov
lock
mov
cs
cmp
pop
stos
or
hlt
outsl
mov
push
inc
adc
cmp
jg
jg
dec
lock
test
ret
cltd
xor
sub
aas
mov
ret
andl
cmpsl
out
mov
mov
cld
repnz
or
pop
cld
jmp
jb
xor
xor
ret
outsl
fadds
mov
push
fadds
fsub
in
lea
push
movups
roll
out
jb
ret
jp
sbb
iret
xlat
dec
mov
mov
js
and
mov
ds
addr16
cmpl
sbb
je
mov
dec
pop
pop
test
cmp
inc
adc
lea
inc
cmp
fists
adc
jge
clc
aam
inc
cwtl
or
add
hlt
push
xchg
test
xor
adc
lock
jns
cs
into
add
lock
loopne
add
and
cmp
push
push
lock
imul
data16
inc
fstps
pop
xor
test
jmp
sbb
hlt
jae
dec
xor
hlt
jmp
into
lds
cli
scas
push
jg
inc
sub
pop
stc
jo
xor
or
mov
or
jmp
in
inc
filds
or
and
sub
cmp
cmp
jle
adc
fs
cmp
popa
pop
insb
inc
negb
test
xor
and
cmp
mov
dec
dec
cmp
adc
sbb
adc
adc
repz
or
ljmp
push
sbb
dec
mov
ljmp
insb
xchg
in
xlat
mov
pop
outsl
je
sub
cwtl
bound
cltd
jbe
jo
add
xchg
rol
movsl
jns
xor
xchg
lahf
popf
fdivrs
sbb
ret
andl
inc
sti
sub
add
rcrb
mov
jmp
or
sub
mov
adc
repz
cmpsb
in
jmp
sub
push
jl
xchg
add
push
xor
add
adc
inc
add
dec
repnz
mov
inc
add
test
add
sub
daa
in
inc
or
add
sbb
das
or
fsubrs
and
jns
adc
sub
or
ds
cmp
jne
pop
add
push
cmp
add
push
jae
test
push
lods
adc
pusha
mov
pop
int3
andb
outsl
sub
and
sbb
leave
into
xlat
cmp
xchg
or
leave
rorl
insb
sbb
ficomps
cmp
subb
add
sarl
fwait
dec
ja
adc
inc
mov
pop
nop
outsb
xchg
push
sbb
popa
jne
outsl
pop
mov
jmp
fucomp
fdivs
xchg
sbb
or
pop
fwait
and
or
aam
arpl
dec
push
mov
xorb
mov
outsb
push
or
xor
add
xchg
mov
jne
ljmp
xchg
xchg
sub
dec
and
arpl
xchg
dec
mov
push
je
mov
lea
imul
adc
xor
scas
inc
roll
in
mov
jge
pop
dec
mov
aam
cltd
push
in
inc
add
es
add
or
cwtl
adc
rorl
ss
xor
push
nop
mov
cmpb
jecxz
je
and
mov
out
loopne
in
add
inc
shll
cld
jecxz
mov
enter
movsb
add
jbe,pn
ja
push
push
and
das
add
lea
dec
sub
out
push
pop
mov
and
shlb
repnz
cmp
mov
inc
addr16
inc
or
sti
or
pusha
shl
lcall
cs
mov
add
jbe
inc
dec
shlb
subb
inc
jb
sub
or
jmp
push
dec
jle
pop
xchg
es
ja
outsb
outsl
arpl
push
ds
je
dec
cmp
adc
je
add
lahf
or
push
scas
jo
lods
int3
cwtl
inc
xor
sbb
xchg
mov
pusha
lcall
inc
lret
mov
push
and
ljmp
jne
jecxz
mov
mov
cmp
call
push
inc
hlt
in
xchg
insl
add
das
aad
cmp
addl
add
or
popf
push
mov
pop
jns
add
inc
push
sti
dec
jne
push
sub
test
ficompl
push
gs
xor
inc
mov
out
clc
mov
xchg
out
movsl
or
ret
cmpl
inc
add
scas
pop
rorl
fsubrl
inc
stos
sub
and
xlat
loope
push
and
js
cwtl
int
push
int3
dec
insl
inc
pop
jle
xchg
xchg
pop
stos
daa
movsb
pop
sub
inc
and
mov
sbb
lock
fsubs
mov
push
add
sti
imul
mov
fldl
or
outsb
mov
int3
sbb
and
xor
lock
push
popa
das
xchg
push
mov
and
in
xor
pop
je
jne
sbb
xchg
or
ret
jmp
in
in
xchg
test
sub
movsl
in
daa
fildll
shll
jae
or
or
inc
jg
gs
fidivs
test
mov
bound
lods
sub
cmp
adc
lcall
int3
cld
arpl
or
daa
inc
cld
sub
fsubr
mov
and
push
jne
sbb
sbb
adc
adc
sahf
sub
stos
mov
dec
sbb
xchg
movsb
inc
pxor
call
pop
cmpsl
inc
xchg
pop
clc
into
inc
xor
sub
adc
out
je
and
ds
mov
je,pn
mov
cmp
xchg
cld
in
shrl
add
hlt
add
or
add
fnstcw
or
add
lret
scas
add
adc
stc
hlt
lfs
xor
pinsrw
into
enter
dec
lea
adc
outsl
pusha
push
mov
dec
add
add
sub
mov
jo
or
mov
pop
cmp
cmpsb
sbb
fadds
jne
mov
mov
in
mov
jnp
mov
push
sbb
jl
sub
cwtl
mov
inc
or
inc
cs
je
push
js
and
adc
sbb
lods
pop
add
test
ret
out
pop
mov
lea
cld
lea
pop
incb
test
out
mov
test
std
dec
or
outsl
cld
bound
test
jge
mov
push
or
mov
mov
rorl
mov
enter
clc
mov
fs
cmpsl
stos
pop
mov
cmpb
daa
jl
sbb
cmpb
iret
or
arpl
pop
add
movsb
mov
stos
jp
push
dec
icebp
das
rorl
or
xor
cmp
pushl
jne
or
cmp
inc
std
mov
jl
sbb
adc
jo
push
lea
jo
pop
xor
or
mov
jo
push
sub
dec
outsb
add
dec
sbbl
outsl
sub
jb
addr16
iret
mov
sub
xchg
and
pop
loope
and
xchg
imul
jmp
or
pop
lock
push
call
shrl
or
xchg
fs
jae
dec
pop
pop
adc
ja
test
popf
cld
fists
or
in
push
lock
clc
xchg
mov
dec
sub
mov
leave
xchg
sbb
xchg
add
push
bound
ds
ja
fmuls
mov
hlt
sub
adc
roll
mov
dec
push
es
mov
sbb
mov
xor
inc
inc
push
push
push
cmp
je
jmp
addr16
pop
xor
inc
je
sub
in
jmp
and
add
mov
add
push
pop
or
or
sub
or
push
push
cmpsl
cwtl
mov
mov
cmpsl
clc
test
push
xor
push
mov
inc
addr16
add
inc
mov
nop
gs
cld
cmpl
setae
or
in
mov
shrl
or
lret
sahf
les
sub
or
xlat
inc
loopne
xlat
add
movsb
xor
decb
ss
dec
add
rcll
lea
ss
les
mov
mov
enter
rcl
pop
adc
ss
mulb
in
mov
cmp
insb
in
mov
nop
ds
pop
sbb
mov
cmp
add
pop
orb
lcall
mov
xchg
adc
leave
xor
andl
call
push
ljmp
sbb
and
icebp
cmp
fldl
pushf
nop
pop
or
pop
xchg
inc
lcall
cmp
xchg
frstor
iret
in
sub
cs
xor
enter
sub
lret
enter
sub
or
pop
js
inc
outsb
scas
inc
mov
push
and
insb
lods
mov
scas
insb
mov
fwait
test
jg
and
xchg
and
jl
lods
push
inc
dec
or
mov
push
mov
mov
loopne
hlt
sbb
mov
push
stos
inc
or
mov
fcmovbe
and
or
fs
mov
jns
and
xorb
adc
mov
jno
xor
mov
lahf
fmull
add
in
mov
add
adc
and
xlat
enter
or
js
sub
andb
scas
fsubrl
pop
out
sarb
add
icebp
pusha
addr16
pop
mov
jp
dec
mov
dec
addr16
ficompl
xor
mov
jb,pt
ror
adc
vandnps
dec
or
inc
jae
cltd
mov
add
add
adc
push
les
mov
dec
bound
xor
and
mov
fsubs
ja
leave
sbb
xor
and
sbb
lock
xchg
lock
or
dec
fbstp
add
mov
pop
subb
xor
inc
sbb
dec
sbb
rcl
inc
and
movb
and
sbb
xor
inc
cmp
scas
cmp
xor
inc
push
pop
flds
dec
cmp
jge
jl
cltd
mov
push
fisttpll
push
xor
shl
dec
testl
inc
sbb
aad
in
inc
xor
xor
repnz
js
test
mov
in
dec
cmp
faddl
and
and
sahf
inc
xchg
or
add
cmpsb
sub
xchg
in
arpl
add
add
add
lea
pop
jge
or
xchg
cmp
push
jmp
sub
adc
and
fcoms
stos
sbb
jne
loope
sub
and
and
loop
roll
dec
call
repz
leave
jb
or
es
movups
push
or
mulb
arpl
push
sbb
stos
addb
pop
inc
daa
cmp
sub
call
mov
jge
xchg
xor
mov
sbb
mov
adc
aad
test
cmp
in
xlat
adc
lods
or
jmp
lock
je
push
add
test
inc
clc
sbb
lods
cmp
arpl
add
test
aaa
lods
movups
mov
adc
cmp
jbe
mov
mov
push
lcall
sahf
sbb
add
or
call
adc
pop
cld
add
push
cmc
arpl
mov
sub
aam
add
adc
or
mov
hlt
hlt
loopne
sbb
bound
stc
mov
fadds
hlt
sbb
sbb
lret
rcrb
fdivs
out
hlt
cs
xor
push
adc
movsl
jns
movsl
js
mov
aaa
push
mov
sub
jb
fcmovne
and
inc
mov
mov
stos
decb
cld
jle
loop
jne
bound
sub
add
test
mov
pop
add
jae
xchg
pop
pushf
ja
fs
add
or
inc
xlat
add
andb
or
in
fldl
out
or
mov
or
call
push
mov
pop
mov
cmp
call
lods
dec
cmpsb
dec
mov
orl
push
dec
idiv
fnsave
cmpsl
mov
imul
pop
mov
divl
shlb
xchg
ret
mov
addr16
aaa
xor
sbb
inc
inc
cmp
xor
sbb
push
imul
add
fcomps
inc
pop
and
and
cmpl
xchg
rorl
add
jne
jmp
push
imul
xchg
shlb
inc
or
jbe
mov
mov
add
xchg
sbb
jne
push
jge
mov
cmpsb
fs
adc
or
xchg
cmp
rclb
test
test
vorps
inc
jb
rorb
mov
sbb
adc
push
and
sbb
cmp
inc
call
prefetchw
or
cld
mov
push
xorl
mov
sbb
enter
test
das
mov
cmp
fmul
pop
fdivrl
ljmp
sub
cmp
fadds
testb
mov
push
insb
nop
xor
hlt
sub
movsb
mov
xchg
int3
and
mov
bswap
mov
movsb
ret
and
enter
fs
adc
jb
subl
les
mov
aas
popa
rolb
shl
and
mov
inc
jns
cld
push
inc
sysret
hlt
mov
pusha
stos
ss
push
mov
clc
or
fdivrl
jo
mov
sarb
negb
push
insl
das
fs
xlat
add
add
fs
add
enter
popa
insl
or
fs
push
dec
shll
femms
and
cmp
int3
mov
jae
sbb
dec
adc
cmpsl
in
push
mov
mov
hlt
getsec
and
pusha
pushf
mov
mov
or
lgs
cld
loop
jge
xchg
psllw
outsl
mov
adc
sarb
mov
rorl
adc
fimuls
divl
inc
inc
sahf
mov
pop
add
shll
stos
pop
js
mov
and
mov
addb
push
nop
mov
js
or
or
mov
jo
je
or
test
outsb
orb
adc
dec
jno
sbb
fiadds
jns
adc
lahf
shlb
inc
imul
push
jo
jb
inc
cmp
popa
sbb
xadd
mov
xchg
popw
stos
adc
sbb
push
mov
and
inc
inc
lea
mov
orb
inc
lahf
add
jne
inc
mov
add
and
push
pop
int3
aad
sbb
rorl
daa
shll
pop
or
insb
add
xchg
push
cmpsl
push
mov
pop
xchg
fsubrs
decb
pxor
inc
add
adc
std
lods
or
sub
lret
mulb
xchg
jmp
jno
sbb
jge
cmp
jne
or
dec
mull
xor
and
fiadds
inc
or
scas
into
push
lea
and
test
add
pop
cmp
in
call
out
add
add
pusha
pop
pop
push
or
or
lcall
xor
xor
mov
push
fadds
push
hlt
iret
rcll
inc
add
or
sub
aad
dec
push
mov
fcoms
pop
ror
daa
cwtl
movl
jno
add
jo
jo
mov
es
push
jo
adc
lods
lods
movsb
mov
adc
popa
ljmp
out
mov
sub
adc
mov
push
into
movb
jbe
pop
inc
sub
or
sti
xchg
xchg
jo
push
sbb
nop
xchg
unpcklps
call
mov
daa
les
push
scas
mov
xchg
dec
fsubs
xchg
ret
loop
xchg
fbld
nop
jmp
or
arpl
push
add
inc
scas
and
mov
or
sbb
xchg
out
inc
mov
jge
sub
sub
pop
ret
incl
ret
adc
jg
inc
decl
shlb
dec
and
cmpsb
fnstenv
push
scas
cld
scas
shrl
fs
pop
inc
push
clc
xor
rcr
inc
incl
fiadds
pushl
inc
and
inc
movsl
jne
push
adc
daa
lea
inc
adc
rorl
stos
push
sub
pushf
or
sti
add
dec
stc
int3
sub
aam
enter
push
pop
sbb
fldpi
sbb
adc
mov
incl
mov
jbe
mov
aaa
std
ret
or
sbb
dec
xchg
adc
cmpsb
pop
jbe
in
ja
cmp
jo
dec
mov
cld
jb
test
mov
in
shll
adc
clc
pop
shll
int3
les
shlb
mov
lods
shll
cmp
sub
xor
das
aam
int3
imul
cmpsb
imul
pop
pop
and
cmpsb
imul
and
fstl
cmpsb
imul
int
out
xor
xor
inc
ja
fs
fwait
xchg
js
sub
and
xor
xor
and
dec
fstps
push
adc
js
xor
cmp
pop
or
nop
data16
or
ja
data16
mov
and
clc
pushf
hlt
sub
je
in
add
lcall
daa
fwait
inc
lcall
xorl
movsb
aam
rcrb
int3
enter
mov
in
imul
js
addr16
dec
jl
mov
pusha
cmpsl
mov
or
imul
rorb
pushf
movsb
adc
fsubl
ja
test
add
popa
lds
dec
test
addb
or
lahf
les
dec
les
leave
enter
mov
sbb
movsb
cmp
add
adc
inc
fs
leave
adcb
test
adc
xchg
popf
dec
xchg
and
repz
add
xchg
push
xchg
and
dec
jbe
or
leave
mov
in
jo
cmp
mov
nop
adcb
lcall
sub
sbb
aas
sti
mov
mov
ret
cmpb
lock
inc
jnp
loope
cltd
inc
test
inc
xor
cmpsl
sbb
iret
mov
push
push
xor
xchg
inc
push
sbb
adc
imul
mov
sub
dec
sub
movsb
sbb
adc
out
xchg
outsl
mov
pop
ret
jb
stos
bound
cmp
or
dec
inc
add
pop
idivb
and
and
inc
or
fcoml
jbe
int
test
xor
or
fld
cld
gs
ficoms
add
and
es
ja
and
sub
add
pop
cltd
add
mov
add
enter
and
jno
stc
sahf
add
jmp
sub
jmp
mov
sti
das
cmpb
cmc
sbb
mov
mov
jmp
sub
mov
filds
test
aam
add
sbb
cld
adc
xor
inc
fmuls
movsl
arpl
icebp
add
outsl
int3
add
pushf
xchg
jb
inc
lret
or
add
dec
fs
dec
adc
inc
lret
push
or
nop
arpl
or
enter
in
and
mov
mov
stos
inc
and
test
push
add
sub
xchg
int3
push
shl
xor
fcoms
jns
add
insb
pop
mov
mov
mov
xchg
addr16
enter
xchg
dec
lods
fdivs
loopne
call
mov
in
clc
rolb
les
jb
and
xor
adc
pusha
sbb
xor
int3
sub
sbb
cmp
movsb
rcrb
in
fcoml
enter
mov
push
mov
js
insb
leave
jns
imul
push
outsl
insb
gs
jne
sahf
add
xlat
sbbb
and
and
add
outsl
je
fs
mov
enter
jne
inc
imul
out
pop
outsl
fs
outsb
dec
jb
xchg
inc
push
pop
outsl
jb
insl
jo
inc
jb
insl
push
je
sbb
negl
rsqrtps
pop
mulb
adc
pop
inc
bnd
in
outsl
insb
je
inc
jns
hlt
push
notb
inc
getsec
movsb
mov
int
cs
int
pop
inc
movsl
xchg
dec
inc
and
add
inc
jmp
mov
sub
jmp
add
add
into
cmp
int3
jne
xchg
into
pop
test
push
shll
ror
dec
out
insl
pop
repnz
mov
lcall
icebp
pop
sub
mov
pop
adc
adc
out
add
push
inc
jne
and
or
sbb
sbb
pusha
adc
adc
add
iret
push
iret
sbbb
inc
pop
push
rclb
mov
or
push
ss
mov
add
outsb
xchg
pop
flds
sbb
sub
inc
add
sbb
in
and
sub
gs
out
add
or
or
shrl
inc
js
add
gs
xchg
test
mov
push
sbb
popa
jns
inc
rcrb
imul
adc
pop
xchg
mov
inc
jb
xchg
js
add
inc
adc
xchg
sbb
inc
dec
jo
lret
fsubrl
mov
mov
arpl
push
outsb
fldenv
fsubrl
sti
pop
arpl
arpl
icebp
inc
pop
arpl
movb
push
adc
sbb
aam
pop
inc
pop
out
adc
popa
shl
inc
jg
iret
sbb
adc
adc
leave
ss
pusha
imul
in
add
and
call
mov
mov
lods
fistpll
or
call
nop
dec
mov
sbb
in
aam
sbb
mov
and
out
fs
dec
enter
add
push
enter
xchg
aad
adc
mov
int3
and
inc
pop
lcall
jb
shl
push
push
nop
inc
adc
dec
add
ljmp
add
jg
leave
add
push
popa
daa
adc
into
inc
inc
jo
mov
rcrb
and
je
push
or
flds
sub
nop
fcmovne
dec
adc
dec
cmp
add
pop
mov
or
or
add
shlb
es
clc
mov
out
mov
mov
mov
clc
xor
and
lock
shr
mov
mov
mov
imul
lea
jbe
xor
jnp
xchg
loopne
loopne
dec
inc
pop
loope
jmp
icebp
mov
enter
mov
int3
or
dec
les
lret
mov
fcomp
enter
std
add
fcoml
cwtl
call
daa
inc
fadds
mov
loopne
or
adc
dec
inc
add
mov
inc
jmp
push
mov
sarl
or
push
ret
mov
pop
adcb
lds
jmp
jb
daa
mov
adc
daa
nop
pop
pop
rcr
fmuls
add
fisttps
push
roll
sarl
aam
push
setg
dec
ret
add
jge
ja
xor
xor
test
and
mov
cmp
out
testb
pushf
dec
jne
pushf
xchg
add
dec
sbb
mov
mov
rolb
outsb
pop
leave
or
shl
shll
call
or
or
add
and
mov
inc
mov
xor
inc
adc
arpl
lcall
xchg
or
inc
je
and
mov
fwait
lods
add
jmp
adc
fidivs
movzwl
lock
add
pop
imul
lea
das
mov
call
push
je
inc
add
fwait
or
hlt
adc
pop
lods
inc
pop
cwtl
std
cmp
inc
seto
mov
and
inc
inc
fsubs
push
xchg
movsb
or
scas
adc
repz
and
scas
enter
sub
pusha
outsl
fs
test
fisttpll
push
or
pop
push
ss
or
mov
sub
xchg
and
push
mov
adc
or
incb
jne
aam
inc
or
xchg
mov
inc
adc
mov
xchg
xor
notl
stc
and
fs
jge
add
lret
in
adcl
add
and
or
sub
mov
mov
loopne
push
mov
sbb
jae
fmull
inc
xor
sbb
fwait
add
xchg
or
or
lret
pop
mov
push
xchg
or
fsubr
call
or
add
jge
dec
je
outsb
mov
popa
ss
loopne
mov
and
pop
sub
out
sbb
lret
js
in
sub
inc
call
leave
test
cmp
xor
call
push
fs
cli
jmp
push
add
nop
das
es
mov
into
cwtl
faddl
sub
xchg
add
dec
xchg
imul
lock
leave
clc
jns
pop
add
or
clc
bnd
add
mov
sahf
es
jb
cs
add
mov
call
movsb
imul
pusha
or
add
sbb
sbb
or
sti
inc
xor
mul
cmp
je
lods
and
mov
jne
mov
jecxz
add
insb
test
fiaddl
shrl
out
sbb
mov
dec
rclb
sub
pop
jb
insl
test
or
or
subl
stos
xchg
sbb
add
pop
leave
xchg
arpl
daa
insb
dec
push
mov
addb
mov
cmp
in
je
and
inc
std
adc
push
jae
es
fwait
bound
fnstcw
lcall
inc
call
add
push
dec
or
or
psubsb
mov
cmp
arpl
push
mov
or
rcr
mov
push
and
add
fdivl
lea
clc
lcall
add
stos
push
cmp
xchg
es
mov
ja
sbb
ficomps
inc
adcb
sub
fiadds
loope
ja
xchg
xchg
rcrl
ret
sbb
adc
rol
stos
and
das
aas
cltd
mov
shlb
or
insl
mov
sub
inc
lock
cmpb
fsts
mov
xchg
jp
fmuls
sbb
in
or
fwait
nop
fld
and
lcall
push
jo
push
sbb
out
xor
add
adc
xchg
aad
mov
or
add
sbb
bound
movsl
mov
jbe
mov
cmp
in
pusha
invd
in
xlat
jl
adc
add
xor
mov
mov
sti
or
cltd
sub
adc
pop
loope
fadd
xchg
fcomp
movswl
sbb
sbb
test
and
fsts
add
cmp
fsubrl
jbe
and
sbb
lock
jae
add
xchg
jge
fcompl
iret
adc
cmp
call
mov
mov
mov
shll
dec
sbb
sub
movsbl
fdivl
xchg
xor
aam
add
push
adc
ror
push
cmp
sbb
cmp
repz
arpl
rclb
sub
inc
repz
je
dec
je
jmp
push
pop
dec
push
fwait
adc
fadd
enter
and
test
ja
push
mov
add
mov
push
cld
mov
lcall
pushf
in
cltd
insb
rcrb
or
lret
lret
scas
out
add
and
sbb
add
or
sbb
flds
cmp
xchg
and
mov
ss
push
and
nop
inc
mov
lods
jne
fsubs
lods
push
pop
gs
sti
add
mov
mov
dec
test
ljmp
mov
nop
inc
mov
enter
add
pop
jbe
sarl
jmp
rclb
dec
push
jmp
insb
xchg
lea
dec
nop
nop
and
jne
je
daa
daa
ret
inc
lds
orb
mov
out
mov
push
es
test
xchg
add
adc
in
xor
in
enter
or
mov
fldenv
jmp
in
adc
cwtl
out
repz
add
call
fsub
sbb
loopne
xchg
outsl
fs
loopne
fcoms
xor
jo
mov
call
xor
mov
loopne
loopne
das
nop
out
call
xchg
sbb
add
and
shll
sub
jmp
fnstenvs
ljmp
sub
inc
jb
sbb
shll
adc
nop
int
std
ljmp
mov
mov
mov
sbb
or
mov
and
and
and
nop
or
cmp
xchg
lods
and
sbb
sbb
mov
push
lods
in
subb
in
adc
sbb
jecxz
adc
fadds
adc
sbb
fs
sbb
aam
fmul
inc
adc
cs
pusha
cmpsb
pop
mov
dec
or
cmp
add
leave
inc
sahf
enter
xor
mov
cmp
add
jmp
in
sub
imul
cltd
insb
rorb
insb
adc
stc
add
in
xor
adc
inc
loop
cwtl
les
adc
in
rcrb
mov
mov
sbb
and
mov
dec
or
and
notb
test
and
mov
lods
adc
adc
lods
dec
test
test
and
ljmp
and
cs
cmp
ret
cmp
inc
nop
pushf
adc
sbb
fsub
and
dec
xchg
dec
xchg
adc
adc
sbb
sub
cmc
xor
mov
addl
cwtl
mov
dec
loop
mov
sbb
adc
inc
cmp
push
sbb
jb
movsb
hlt
push
or
in
loop
pop
movsb
push
insl
jo
adc
jne
in
out
fisttpl
or
popa
adc
mov
int
pop
mov
jbe
dec
addr16
push
pop
insb
jg
fldenv
cmove
bound
jne
addb
arpl
push
and
nop
push
and
dec
test
pop
mov
andb
setg
mov
push
outsb
imul
jle
outsl
ja
arpl
pop
jae
gs
and
inc
out
pop
je
mov
inc
jns
push
outsl
jb
cwtl
test
sub
fstpl
mov
andb
xor
ret
loop
int3
or
out
ficoms
xchg
push
sti
mov
ja
insb
push
insl
xor
fcom
mov
fcomps
jle
mov
out
push
ss
addb
sub
or
jmp
lea
lret
repnz
out
rorb
xchg
cld
jl
xor
or
lar
xor
xchg
add
adc
out
xor
mov
mov
fs
in
mov
ret
adc
test
je
mov
sbb
inc
push
inc
rclb
shlb
sub
xchg
or
and
cmc
cmc
movl
cmp
mov
out
push
gs
mov
out
add
inc
mov
mov
pop
pop
icebp
inc
xor
add
xor
mov
xchg
mov
aam
inc
jbe
pop
in
hlt
push
mov
add
push
nop
pop
push
mov
fyl2x
inc
or
insb
dec
sbbl
rorb
and
out
and
enter
add
fadd
fsub
cmp
inc
repnz
shlb
or
sbb
mov
sbb
adc
or
aam
dec
shll
jmp
inc
aad
sbb
cwtl
iret
add
mov
push
jge
insl
rcrb
add
pop
jl
adc
rol
mov
xor
mov
or
lods
pusha
inc
mov
push
push
jmp
xor
xor
std
lea
add
add
inc
xor
jno
or
int3
pop
mov
mov
pusha
enter
pop
sbb
inc
stos
outsl
xor
sub
jle
repz
jne
dec
sbb
add
loope
add
jl
stos
mov
roll
jns
in
add
pop
repz
pop
push
jae
inc
popf
cmovne
or
int3
lds
mov
pop
or
loope
push
add
sub
add
or
sbb
mov
pop
enter
call
or
pop
enter
or
lods
inc
stos
adc
lock
mov
add
in
es
push
ljmp
and
in
adc
hlt
popa
and
cmp
pushf
or
dec
cmp
setg
es
mov
test
gs
in
jne
jo
and
daa
adc
inc
sub
mov
scas
push
xchg
dec
dec
lahf
je
and
jne
push
icebp
and
adcl
dec
push
jmp
xchg
adc
lret
jo
dec
cmc
pushf
in
push
fucomip
cmc
sbb
jns
loope
mov
shlb
push
mov
mov
shll
sbb
fucomi
out
enter
cmp
or
ja
ficomps
sahf
daa
fists
loopne
call
inc
sbb
mov
add
cmc
sbb
and
cmp
sbb
cmp
or
enter
scas
or
enter
xchg
xor
and
sbb
or
lahf
mov
cmp
cmp
inc
push
add
cmpsl
jmp
cmp
sbb
daa
inc
testl
lcall
push
mov
dec
notl
cmpl
in
xor
daa
xchg
or
fdiv
fdiv
push
push
add
fnsave
out
xor
nop
and
adc
pop
mov
pop
or
xchg
pop
xchg
xchg
call
or
mov
lock
lock
mov
jo
pop
add
stc
adc
push
xor
jb
jb
mov
mov
pop
add
or
sbb
ds
clc
push
clc
fmuls
pop
nop
add
push
cli
mov
outsb
sub
enter
test
insb
inc
lea
pop
add
or
pop
or
test
adc
add
ja
pop
sub
jecxz
lret
inc
cmc
push
cmpsb
sub
leave
arpl
add
fbld
pop
pop
and
add
wrmsr
or
or
add
fmuls
or
lret
insb
add
add
inc
ret
pop
shlb
mov
xchg
fdivl
push
lret
arpl
adc
adc
inc
insb
popa
sbb
sub
outsl
js
fisttpl
dec
mov
pop
fs
jo
jb
mov
das
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
pop
insb
jnp
pop
clc
ret
js
cwtl
in
leave
add
add
shll
or
or
mov
sub
adc
insb
lret
gs
add
xchg
cld
push
test
inc
mov
imul
add
aaa
mov
jl
jo
adc
js
mov
adc
adc
sub
pop
xlat
add
mov
jno
pcmpeqb
movsl
or
pop
mov
nop
xlat
pop
push
cmc
dec
cld
inc
push
fldcw
push
or
nop
and
aas
insl
and
movsb
or
xchg
xadd
das
lods
cld
into
mov
mov
lsl
lock
fs
xchg
lret
in
das
mov
and
push
insb
mov
adc
add
sbb
dec
adc
mov
cwtl
sbb
scas
pop
mov
sbb
cmp
pop
fdivs
adcl
lret
sub
inc
jp
jae
lcall
das
arpl
jge
pusha
jecxz
add
mov
fsubrs
and
xchg
or
xor
data16
and
sbb
sub
out
fadds
or
mov
sub
in
adc
pop
ja
decl
mov
mov
and
lcall
push
push
push
dec
decb
push
fcoml
jns
adc
pop
adc
xchg
mov
or
inc
push
leave
in
push
pcmpeqw
sbb
mov
add
pop
and
sbb
or
xchg
stc
mov
fdiv
nop
sbb
addr16
lds
add
push
fdivr
or
xchg
or
push
rcrb
add
mov
xor
ret
leave
rorb
sbb
in
addb
add
enter
inc
lods
mov
sub
arpl
andb
dec
addb
loope
jg
push
sub
aas
jno
and
addr16
test
icebp
fcompl
fcoml
cmp
or
nop
add
add
adc
mov
mov
xor
lea
push
shlb
and
add
inc
or
out
push
sbb
or
pop
aas
cmp
fsubl
in
jbe
inc
adc
sahf
add
lea
fcomip
push
jl
inc
xor
or
loope
jnp
dec
jne
xchg
stos
dec
add
and
in
add
mov
or
loope
or
pop
pop
sti
es
aad
cltd
mov
mov
pop
ret
and
lret
jne
js
mov
lcall
inc
sbb
lcall
mov
pop
inc
je
pop
sbb
push
pusha
lcall
push
pop
mov
add
dec
or
or
ror
push
cwtl
inc
pop
jecxz
movups
add
hlt
jl
pushf
xchg
adc
mov
lods
mov
out
jne
or
mov
lea
scas
arpl
negb
mov
cld
mov
jmp
adc
jne
adc
sub
sti
std
inc
mov
ljmp
adc
inc
sti
dec
imul
cmp
mov
sbb
adc
pusha
adc
mov
jmp
mov
cmp
jne
sbb
push
loop
fnstsw
test
or
leave
mov
adc
pop
sbbb
or
call
add
mov
adc
sbb
out
imulb
call
ds
decl
jno
jge
sub
mov
mov
loope
lea
add
je
mov
adc
mov
inc
add
loopne
popf
push
icebp
iret
dec
xor
jns
rclb
or
outsb
inc
lods
pusha
lret
pop
add
mov
popa
dec
jmp
add
or
or
push
ljmp
aad
xor
adc
xchg
mov
shl
ret
das
add
mov
add
mov
sahf
lret
frstor
add
adc
cli
mov
adc
mov
lods
or
add
mov
dec
pop
jbe
mov
shr
cmp
cmp
or
cmp
adc
push
or
xchg
cs
fwait
mov
cmp
mov
pushf
loopne
inc
mov
jecxz
and
xchg
inc
loope
pop
fxch
cs
cmp
ja
jb
jo
loope
lret
jle
mov
andb
add
mov
test
add
scas
jmp
sub
jg
dec
dec
movsl
dec
lock
shll
dec
pusha
test
add
pop
jae
push
or
mov
inc
sub
test
sub
and
push
cmp
or
cmp
pop
inc
xchg
inc
xorl
in
sbb
mov
andl
add
test
inc
jne
comiss
push
int3
into
ret
add
adc
xchg
xchg
inc
jo
xchg
sbb
mov
cmp
add
adcl
fnstcw
dec
aaa
or
outsl
xchg
add
xor
es
xchg
and
aas
mov
xchg
sbb
popf
into
or
sbb
inc
popf
data16
fistl
in
xchg
or
pusha
lret
push
lock
sbb
into
leave
add
adc
lock
or
lds
and
aad
inc
loop
inc
lret
add
add
push
sub
fld
xchg
or
fadd
xlat
aaa
mov
sub
mov
rorl
add
fs
mov
add
aaa
cmp
pushf
in
and
or
nop
or
push
int3
test
cmpsl
jo
orb
das
stc
roll
cld
stc
aam
or
leave
dec
insb
adc
int
push
push
pop
pusha
mov
shrb
ja
mov
out
push
iret
dec
popa
and
sbb
inc
ljmp
outsl
leave
sbb
movsl
or
jno
and
std
insb
adc
sbb
sub
lcall
push
or
or
add
pop
sbb
cmp
xchg
sub
into
or
hlt
mov
pop
pop
ss
add
mov
xor
out
or
mov
fs
pop
lret
mov
or
pop
push
scas
test
gs
add
xchg
jge
inc
lods
imul
iret
lods
sub
mov
cltd
cmp
fisubs
adc
jo
sub
negb
mov
clc
push
cmp
xor
jmp
adc
aad
inc
cs
pop
ret
clc
or
jnp
arpl
push
or
xchg
sbb
test
mov
inc
jne
in
mov
nop
or
mov
sahf
arpl
mov
pop
in
lock
or
and
aad
jg
sbb
cld
lcall
sbb
sub
mov
insb
push
xor
subb
lock
das
in
jmp
hlt
hlt
push
in
pop
cmp
jl
rcll
pop
test
push
fmull
inc
add
movsb
adc
cmp
mov
in
pop
add
adc
and
inc
ret
es
xchg
hlt
pop
call
push
rclb
adcb
jb
fidivs
add
fwait
pop
push
adc
add
adc
imul
push
and
jo
ljmp
or
clc
and
aad
and
cmp
pop
adc
push
xchg
inc
inc
jnp
dec
xor
out
dec
inc
mov
add
adc
cltd
sbb
push
pop
adc
adc
je
add
mov
loopne
iret
adc
mov
inc
adc
mov
xchg
call
xor
cmp
stos
int
dec
sub
es
loopne
scas
mulb
fisttpl
in
clc
add
ljmp
stos
test
adc
mov
mov
in
dec
pop
call
push
dec
call
fcoms
leave
xchg
jne
mov
sbb
insb
jae
jp
adc
mov
and
adcb
dec
and
mov
mov
sub
clc
hlt
aas
xchg
dec
mov
pop
adc
or
imul
imul
xchg
adc
repnz
in
nop
cmp
dec
ror
outsl
push
xchg
jb
pop
mov
push
rolb
aam
rolb
push
scas
inc
adcb
sub
and
orl
xchg
and
movl
ud0
jbe
inc
adc
loop
adc
xor
jecxz
xchg
inc
inc
rcrl
inc
jg
dec
adc
adc
call
aam
jo
and
mov
movsl
xor
nop
insl
or
and
loope
addb
push
sbb
pop
jl
mov
adc
hlt
mov
xchg
jae
es
fs
adc
pop
popf
nop
sub
pop
mov
mov
in
andl
lock
cmp
lock
into
push
or
pop
addr16
push
mov
or
call
sub
inc
test
das
xorl
add
xor
adc
clc
mov
dec
jb
add
cmp
pop
adc
and
push
mov
popf
sbb
dec
push
inc
lock
inc
inc
dec
sub
cmp
or
jne
sub
sbbb
add
push
add
ja
js
pop
pop
iret
push
ljmp
shlb
cmp
push
cmp
jecxz
inc
dec
inc
push
sti
xchg
pusha
sbb
push
push
dec
dec
xchg
push
js
push
push
lds
out
xor
in
push
xor
jbe
push
mov
adc
sbbb
hlt
push
adc
pop
xchg
out
orl
lea
sub
mov
or
repz
or
xchg
push
inc
xchg
inc
ja
xor
sub
sbbl
mov
add
cmp
inc
test
lahf
sbb
inc
jecxz
subl
adc
sti
dec
mov
je
add
gs
cmpl
sti
and
cmpb
jne
add
test
ret
sbb
sbb
daa
out
test
and
test
ret
push
pop
mov
sbb
add
and
test
lds
push
iret
add
arpl
xor
testb
cmp
pop
jbe
pop
inc
push
cmp
jne
testb
orb
or
fimull
xchg
outsl
imul
pop
sub
aam
add
movsb
mov
or
dec
fs
je
adc
lock
sub
fisubrl
jnp
mov
pop
loope
or
into
call
xor
jne
mov
or
push
add
fisubrl
mov
or
sub
jno
pop
add
sti
nop
dec
stos
mov
xchg
jmp
push
cmp
add
andb
imul
and
cmp
shll
cltd
in
mov
and
sub
lret
push
sub
xor
pop
fsubr
cmp
dec
adc
inc
data16
bnd
sub
sub
jns
push
lea
cmp
jmp
outsl
mov
push
mov
and
add
shl
or
imul
xchg
outsb
test
xchg
rorb
repnz
dec
inc
sub
add
adc
mov
jle
inc
cmpsb
call
push
pop
sbb
dec
js
call
pop
add
das
and
adc
xchg
lcall
inc
fildl
cmp
sarb
pop
add
adc
call
scas
ret
fbstp
add
sbb
mov
subb
add
test
repz
sub
push
jl
xor
mov
arpl
mov
cmpl
repnz
xor
sbb
and
test
insl
mov
push
mov
inc
push
stc
repnz
movb
mov
jbe
push
pop
inc
adc
jecxz
rorl
push
mov
in
add
sbb
les
jnp
and
push
pop
movsb
jecxz
ss
je
in
and
es
mov
insl
mov
lret
dec
xchg
test
push
add
mov
jne
sbb
loope
ret
sbb
or
dec
xchg
scas
sbb
push
ret
mov
mov
mov
sar
incl
jns
int
dec
or
pusha
and
test
jb
or
push
mov
sub
inc
mov
add
dec
jae
xor
sbbl
aam
mov
dec
hlt
fsubl
and
fistl
and
mov
or
push
mov
inc
dec
and
add
jle
in
insl
call
or
jl
mov
stos
push
mov
mov
sbb
loope
sub
mov
ror
adc
pop
lret
add
sub
and
xchg
and
sub
add
stos
jmp
and
dec
rcll
imul
push
daa
pop
sub
xchg
xorl
mov
inc
jbe
jmp
pusha
cmp
add
pop
pop
lahf
cmpsb
fldenv
pop
jae
ret
and
pop
jbe
dec
icebp
adc
cmp
add
xor
add
sbb
jge
mov
or
pop
jmp
jl
adc
inc
fildl
and
or
push
jle
rcrl
das
push
push
icebp
push
mov
dec
sub
les
fildl
inc
test
add
inc
xchg
mov
addl
and
mov
lea
in
enter
orl
push
or
sub
cmp
add
push
nop
push
mov
pop
sbb
xchg
xchg
mov
imul
push
mov
iret
add
xchg
cmp
jmp
nop
test
lret
xchg
adc
inc
test
or
movsl
push
add
sbb
xchg
lret
cs
add
rclb
pop
dec
sbb
xchg
or
push
cld
fstps
fs
popf
mov
sub
addr16
cmp
icebp
push
xor
pusha
punpckhbw
pusha
cmpl
push
push
rclb
insb
mov
popa
push
sbb
mov
sub
push
push
adc
sbb
cmp
loop
test
lea
ljmp
dec
mov
call
in
icebp
mov
nop
pop
adc
cmpw
les
faddp
pmuludq
test
push
push
les
js
add
inc
xchg
and
dec
push
out
sbb
in
add
jle
nop
fs
pop
push
cmp
mov
je
loop
clc
jmp
mov
js
fs
in
jge
fs
fmull
ja
movsb
addb
sub
xor
mov
or
inc
addl
sbb
decl
mov
mov
adc
cmp
mov
test
mov
arpl
xchg
pop
stos
inc
pop
mov
scas
orb
or
sbb
or
add
add
sub
daa
int
scas
cmp
es
jae
push
out
daa
pop
adc
shll
jns
mov
cmpl
dec
ss
aas
xor
lcall
cmp
pop
sbb
cmp
cli
mov
addr16
adc
pop
xchg
pop
mov
test
insb
cltd
adcl
push
adc
ljmp
mov
mov
inc
ja
mov
inc
lock
cmp
jb
mov
push
sub
mov
or
jno
ficompl
les
mov
mov
rcrl
pop
ret
or
xchg
fadds
or
push
push
push
jo
xchg
adc
cmpsb
stos
fldt
hlt
test
inc
sbb
jnp
pop
sub
pop
lods
or
sbb
xchg
andl
movsb
dec
push
ret
mov
hlt
ja
and
pop
inc
mov
daa
sub
pop
or
xchg
sub
inc
add
add
adc
xor
and
clc
jmp
cld
sub
mov
push
add
jmp
sbb
adc
in
jmp
adc
inc
andl
push
or
and
xor
cmp
flds
or
pop
movaps
push
push
hlt
adcl
inc
xor
ud2
fnstenv
add
pop
test
cmp
or
leave
cmpsb
sarb
xchg
sbb
int3
add
jle
movsl
rorl
inc
xchg
xchg
sub
sub
daa
jno
dec
push
aad
dec
mov
idivl
insb
sub
cmp
movsb
fs
repnz
ljmp
ret
cld
mov
add
subl
xchg
out
or
pop
sub
sbb
pusha
xchg
repz
nop
out
imul
adc
mov
push
cmp
add
sub
jae
pop
mov
sbb
or
dec
push
xor
scas
aad
mov
and
xchg
lds
sub
scas
movsl
and
pop
enter
aaa
enter
adc
movsl
and
xor
and
cmp
dec
pop
xlat
xor
shrl
mov
fsubrs
push
jno
pop
or
fs
into
or
add
rorl
or
fistpll
xor
arpl
mov
adc
pusha
in
jmp
pop
pop
push
or
pop
testb
push
jmp
mov
leave
jbe
sub
sbb
bound
or
andb
bnd
xchg
popa
js
jns
sub
sub
sub
cli
push
xor
test
jle
jp
fwait
sub
jle
or
mov
jnp
jmp
jmp
in
xlat
stc
jbe
xor
add
add
sub
add
and
mov
push
mov
leave
mov
inc
dec
pop
popa
push
addl
arpl
sbb
pop
lahf
push
cmc
xor
ss
je
pop
add
cltd
sub
cmp
push
sub
or
dec
loop
fnstcw
jg
mov
aaa
cs
jb
jmp
mov
push
add
push
dec
cmp
jne
add
test
or
xor
mov
push
push
lock
xor
push
sub
cld
cmp
inc
popf
sub
sub
test
lock
int3
mov
in
and
or
sub
push
sub
inc
pop
insl
sub
mov
lcall
push
out
mov
mov
enter
repz
inc
inc
jae
jge
and
nop
adc
cmc
fwait
adcb
test
fmull
mov
mov
cmpb
sbb
dec
leave
jle
dec
dec
insb
mov
mov
pop
enter
sub
fwait
rclb
subl
out
push
popa
xchg
pop
dec
testb
dec
inc
jno
sub
jb
movsl
bound
aam
test
int3
repnz
mov
mov
clc
or
push
adc
xchg
js
and
int3
inc
sub
mov
std
cmpl
das
inc
jl
pop
out
adc
add
push
inc
outsl
insb
outsl
jb
addb
into
and
sub
or
inc
outsl
xchg
roll
cli
jb
gs
and
inc
push
ja
das
cmp
jle
das
inc
add
jae
jne
arpl
popa
outsb
popa
addr16
xchg
add
jmp
mov
and
push
lret
cmp
and
das
pop
add
insb
popa
arpl
adc
outsl
setnp
or
and
xchg
mov
lar
je
insb
mov
aas
inc
dec
popa
jbe
add
jb
insb
mov
xchg
popf
and
insb
rcpps
in
fsubs
push
imul
mov
das
fs
dec
imul
mulps
insb
outsl
ja
jne
or
inc
push
or
arpl
imul
jno
adc
push
push
into
cs
add
gs
add
add
sti
push
imul
fwait
mov
jmp
insl
and
fisubrl
xor
sbb
arpl
cmp
fildll
out
pop
cmovae
sbbl
mov
aad
xor
inc
or
fs
std
sub
outsb
inc
sub
dec
imul
add
push
test
aas
sahf
fsubrs
js
xlat
or
aas
or
inc
gs
jne
pop
xchg
xor
imul
mulb
fldcw
sbb
or
enter
adc
sub
mov
push
aas
dec
outsl
je
jmp
jb
test
jns
adc
adc
test
or
outsw
inc
xor
xor
jnp
adc
jb
outsb
jne
or
mov
ret
iret
adc
or
adc
xchg
dec
dec
xchg
pop
mov
cmp
arpl
push
and
inc
inc
imul
pusha
pop
fsubs
imul
or
sarl
adcb
das
jp
insl
loop
insl
push
push
push
iret
loopne
mov
fwait
psubb
ret
into
hlt
loopne
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
jg
pop
inc
inc
inc
inc
push
dec
push
sbb
pop
mov
pop
push
pop
dec
inc
dec
dec
xor
dec
inc
inc
pusha
pushl
popa
sub
dec
dec
inc
push
dec
dec
push
pop
ret
xchg
jge
adc
inc
push
dec
out
jg
fisttpl
adc
ja
inc
xor
xor
mov
ja
adc
dec
inc
adc
or
dec
flds
dec
inc
push
inc
inc
dec
fistpl
xchg
call
dec
dec
push
dec
dec
inc
xor
imul
pop
push
xchg
dec
inc
pop
cld
in
inc
inc
dec
push
pop
push
push
push
jle
pop
sub
imul
sti
dec
adc
push
push
inc
xchg
dec
push
inc
loope
stc
dec
push
dec
inc
dec
push
mov
test
shrl
mov
add
sbb
aaa
dec
ficoms
test
add
xchg
out
and
add
add
shll
sub
iret
add
sbb
enter
cmp
sbb
je
movl
add
int3
jne
nop
push
sbb
dec
inc
into
pop
pop
mov
or
aad
sub
outsb
inc
mov
or
dec
lds
shl
arpl
mov
add
fistps
jae
sbb
dec
ret
mov
or
xor
sbb
mov
xchg
mov
inc
fiaddl
add
movsb
lcall
enter
cmp
fildl
jmp
add
popa
add
jnp
mov
add
mov
enter
push
mov
and
aaa
adc
cmp
mov
inc
xor
add
call
xor
jne
mov
xchg
xchg
cmp
or
sbb
mov
inc
adc
popa
in
push
xchg
call
and
dec
inc
mov
jl
in
rolb
rolb
enter
pop
xchg
inc
lahf
lock
rcr
dec
xor
jb
daa
jge
mov
adc
mov
cmp
insb
pop
push
lds
or
mov
rolb
jmp
adc
lock
add
or
mov
es
call
xchg
xchg
in
lock
cmp
popl
shrl
dec
add
inc
push
or
adc
mov
aad
fcoml
mov
pusha
pushf
ljmp
push
out
jbe
pop
xchg
xor
cmp
cmpsl
mov
dec
xchg
mov
dec
and
jae
or
daa
cmp
sub
jae
and
out
cwtl
sbb
dec
and
lods
nop
cmp
loopne
xchg
test
xchg
sbb
mov
dec
js
icebp
ja
mov
mov
mov
shlb
inc
or
je
mov
mov
push
clc
or
pop
inc
mov
add
push
add
and
sbb
pop
sub
das
cmpsl
sub
stos
xor
stos
inc
jge
sbb
cmpsb
inc
sbb
add
arpl
incb
adc
cltd
lea
sub
jg
lock
not
and
sbb
loopne
mov
je
mov
andb
inc
jg
mov
mov
add
cs
jnp
jb
add
add
xor
pop
mov
add
mov
mov
repnz
xor
fs
cmp
rcrb
and
xor
sub
adc
or
cmp
in
or
insb
and
movsb
ja
push
push
push
dec
pop
cmp
and
add
clc
sti
movw
or
call
inc
sbb
xorb
push
repnz
stos
lods
cmp
insl
add
jno
in
sti
out
mov
popf
mov
push
shlb
lock
mov
dec
pop
or
nop
in
or
and
test
mov
out
pop
push
sbb
xor
push
xor
jae
or
jnp
sbb
mov
enter
shrl
clc
sub
dec
hlt
mov
push
ret
jle
ds
add
jl
pop
lock
add
add
add
out
sub
stc
xchg
call
jo,pn
cld
into
leave
xchg
inc
ds
inc
xchg
mov
dec
xchg
pushl
and
insl
mov
adc
or
mov
add
or
lds
mov
inc
pop
fbstp
bound
push
or
pusha
loop
ss
adc
jl
inc
push
add
dec
sub
and
ss
mov
mov
and
jns
stos
arpl
xor
mov
inc
loopne
jnp
xlat
mov
mov
jmp
mov
xchg
enter
outsl
lods
scas
jnp
je
scas
adc
aaa
mov
add
pop
and
push
push
icebp
ds
push
les
adc
mov
iret
adc
mov
js
fidivrl
das
dec
pop
int3
jge
std
sub
jne
mov
movsl
add
push
out
add
add
aas
jb
subb
subl
lret
xchg
mov
mov
fcoml
int3
add
inc
adc
or
push
push
mov
add
mov
inc
or
fsubrl
mov
data16
outsl
mov
out
dec
mov
leave
and
inc
dec
movb
inc
xor
mov
subl
jbe
sub
xor
dec
inc
sbb
jne
xchg
add
fldenv
test
loop
add
fnsave
jbe
jae
les
fldenv
or
aam
cmp
push
adc
cmpb
fcoml
push
add
jae
mov
adc
inc
ret
sahf
mov
in
sti
das
adc
cmp
call
push
or
int
jae
or
inc
xorl
cli
js
cwtl
cmp
mov
and
stc
testl
adc
jbe
add
add
lds
pop
mov
jle
fcoms
push
mov
jl
rcrl
adc
mov
aas
ss
rclb
xchg
shr
mov
lock
or
and
aad
aaa
cmp
and
xor
fbld
orb
sub
sub
jmp
int
sbb
dec
hlt
sbb
nop
jbe
pop
adc
dec
in
je
inc
sub
pop
mov
push
push
adc
inc
and
inc
pop
and
mov
add
mov
lcall
dec
and
es
and
ret
jg
int3
mov
add
sbb
addl
js
pop
fmuls
adcl
adc
push
inc
dec
ret
test
rolb
jge
insl
sub
test
inc
xchg
stos
lret
ret
cld
push
ret
sbbb
daa
xchg
ret
and
xchg
push
adc
ret
inc
xchg
pop
aam
stos
gs
addr16
push
add
test
sub
mov
test
enter
or
lods
mov
pop
xchg
jl
das
dec
aaa
sub
add
add
dec
adc
mov
xor
scas
xor
shrl
pop
push
or
dec
pop
cmp
in
push
sub
sti
outsl
mov
arpl
in
add
mov
xchg
and
imul
mov
fs
and
mov
stos
push
cmp
mov
add
pop
js
scas
inc
test
outsl
add
sub
inc
in
xor
or
subb
add
test
gs
dec
add
xor
sub
dec
inc
mov
adc
and
jnp
adc
lahf
jmp
mov
ror
pop
add
loopne
mov
or
pop
shrl
add
pop
cmp
pusha
push
xor
data16
cmp
repnz
or
jb
dec
scas
rclb
jb
insl
shlb
pop
add
pop
les
sub
in
pusha
sub
bound
mov
adc
add
mov
cs
ret
fmul
test
cmc
sub
sub
hlt
or
idiv
test
add
xor
dec
or
cmp
sub
sub
or
in
adc
xchg
add
inc
outsl
or
mov
cld
mov
dec
lods
mov
gs
sbb
add
push
add
in
mov
inc
and
jl
or
ds
pop
mull
push
jge
div
mov
movzwl
mov
xor
mov
or
ret
jb
dec
jne
pop
add
je
jno
cmpl
jl
bound
sbb
or
leave
push
and
or
inc
push
fsubs
jne
jl
mov
push
xchg
ljmp
popa
std
inc
rorl
sub
push
sbbb
cmp
repnz
xor
mov
mov
add
add
inc
jo
and
rorb
adc
pop
ss
push
adc
mov
xor
fucomp
test
add
adc
test
inc
out
push
cmp
add
add
mov
cmp
in
subl
pop
and
lahf
enter
mov
adc
mov
or
out
and
mov
mov
test
pop
nop
dec
push
fs
cmp
enter
mov
xor
orl
inc
xor
orb
mov
sbb
ret
or
push
mov
mov
stos
bound
cmp
or
iret
lock
cld
mov
or
push
aam
push
adc
aam
cmc
cmp
sbb
push
enter
mov
clc
pop
mov
or
mov
sbb
inc
pop
aam
pop
sbb
mov
int3
dec
movsb
aam
dec
xor
mov
dec
pop
mov
mov
mov
push
neg
lahf
rorl
mov
jae
and
ljmp
add
hlt
or
cvtdq2ps
xchg
add
fcom
outsb
sub
fmuls
dec
mov
and
xchg
int3
in
push
and
mov
jle
rolb
adc
add
sub
xor
lret
xchg
scas
es
jnp
xlat
leave
enter
adc
mov
mov
add
mov
or
jle
adc
fwait
mov
sbb
clc
les
iret
xchg
xor
clc
xor
int
push
loopne
sarb
xor
sub
inc
loopne
jg
add
jo
mov
jns
insb
mov
mov
xchg
inc
in
js
aaa
jge
mov
push
cmp
add
mov
dec
ljmp
pushf
es
dec
in
imul
movzwl
dec
jge
mov
leave
and
push
shrb
xorb
push
xor
mov
push
or
and
js
mov
adc
insb
or
mov
push
dec
cmp
mov
and
mov
addl
lods
jge
addr16
sbb
or
or
lods
test
xchg
mov
js
stos
jae
icebp
xchg
mov
or
addr16
adc
add
leave
and
mov
repnz
and
and
and
mov
test
icebp
xchg
outsl
xchg
fldt
dec
shll
ljmp
and
enter
shrl
mov
dec
repnz
push
movsb
mov
repnz
adc
mov
xchg
pop
mov
push
push
les
mov
rorl
decb
and
jns
je
arpl
cmp
in
leave
add
sub
mov
orb
nop
add
xor
xor
sbb
add
nop
aaa
cmp
mov
sub
bound
inc
jne
inc
jns
ljmp
js
pop
inc
jae
push
jae
gs
inc
inc
inc
fs
jae
data16
hlt
imul
sub
cmp
jb
insb
imul
jl
push
ljmp
adc
lret
xchg
cmp
sbb
scas
je
das
add
gs
popa
ljmp
or
das
arpl
jae
jae
jl
das
in
dec
in
jo
or
push
sub
sbb
icebp
inc
sub
outsb
adc
js
or
arpl
fwait
push
stos
fs
outsl
sbb
and
jae
jae
insl
das
sbb
mov
imul
cmpsb
ja
push
das
outsb
das
insl
popa
and
imul
push
or
xor
dec
xchg
xor
xchg
push
dec
inc
mov
insb
jb
fs
insb
mov
add
arpl
inc
js
dec
or
sbbl
mov
sti
xor
test
mov
dec
in
frstor
flds
jg
jns
sub
sub
xchg
into
xchg
pop
push
insl
dec
dec
das
leave
dec
mov
and
popf
iret
lock
and
and
adc
pop
push
jne
push
jb
adc
sub
xor
add
or
movsb
movsl
sbb
push
jns
jnp
das
push
lods
jmp
test
jnp
out
push
les
dec
add
mov
and
inc
add
sbb
add
add
andb
jg
mov
sub
int3
enter
enter
fcomp
fxch
fcompl
loopne
jecxz
in
das
add
test
inc
shlb
outsl
mov
push
leave
in
ja
mov
add
and
push
std
jg
pop
xor
xor
xor
ss
cmp
inc
inc
inc
imul
mov
add
add
fwait
mov
push
or
pop
add
adc
ja
mov
pushf
add
addb
add
faddl
rolb
xchg
or
mov
or
pop
dec
shrl
es
mov
and
dec
shll
in
hlt
cld
imul
cmpsb
imul
imul
cmpsb
imul
mov
int3
nop
xchg
aam
lsl
or
fs
pop
jb
inc
stos
gs
dec
push
jb
dec
imul
imul
daa
pop
cmp
sub
mov
xor
nop
leave
xchg
daa
pop
cmp
outsl
add
inc
sar
push
pop
and
pop
cmp
scas
push
mov
js
mov
dec
int3
loopne
add
adc
cmpsb
imul
cmpsb
imul
sub
or
xchg
testb
dec
cmpsl
add
popa
outsb
jae
cmp
shll
mov
and
cmp
testl
pop
pop
mov
invlpg
orb
ljmp
dec
pop
or
ud0
pop
ja
hlt
pop
incl
add
pop
sbb
sub
aas
fdivrl
pop
cmpsb
lret
mov
lock
pop
mov
or
cmpsb
jmp
mov
add
lcall
dec
mov
lcall
or
jle
bndstx
xor
imul
adc
rorb
sbb
or
pop
add
cmp
xor
rcrl
pop
pop
insb
add
shll
movsb
pop
xlat
je
ss
verr
pop
fnstenvs
xor
cltd
cmpsb
imul
testl
add
push
shll
orl
pop
andb
xor
shll
push
mov
dec
rorl
pop
shll
fidivrs
xor
insb
pop
out
sbb
xor
jo
divb
add
add
mov
or
sbb
and
gs
scas
or
sti
or
testl
fdiv
push
dec
addr16
or
or
insb
fldenv
inc
add
pop
and
es
outsb
nop
cmpsb
adc
add
inc
imul
addr16
xor
adc
pop
mov
jo
pop
adc
sbbb
inc
invd
movntps
cmpsb
jnp
add
or
mov
mov
jbe
sbb
add
mov
imul
imulb
scas
xor
pop
fsubrl
add
jnp,pn
xor
shll
lods
add
cmp
sbb
testb
sub
mov
popf
mov
push
je
mov
dec
stos
inc
cmp
mov
sbb
mov
mov
je
leave
pop
and
pop
pop
testb
scas
cmp
fwait
test
inc
cld
xchg
mov
or
gs
je
fisubs
jae
xor
adc
xor
pushf
or
xor
js
mov
and
les
fs
push
fs
or
dec
jno
je
ficoms
scas
andb
sbb
xlat
sbb
jl
dec
add
adc
sub
dec
faddl
inc
push
and
add
add
adc
push
adc
adc
adc
and
insb
out
out
push
add
add
dec
add
add
or
filds
inc
add
dec
add
dec
aad
inc
dec
mov
dec
inc
dec
dec
sub
add
adc
add
pop
data16
cmp
fiadds
push
push
out
imul
push
incl
adc
add
adc
push
inc
and
add
scas
sti
in
add
arpl
popa
add
arpl
je
jns
jne
outsl
add
pop
add
outsb
add
inc
int
or
add
dec
and
sbb
add
adc
push
and
into
fsub
xor
pop
mov
add
pop
sub
sub
scas
jmp
imul
pop
insl
insl
jmp
lcall
mov
cmp
jo
lods
jmp
aas
popa
adc
outsb
xor
idivb
insb
ja
popf
sbb
out
sub
and
iret
adc
ja
imul
inc
jbe
fildl
sbb
jae
sbb
pop
shlb
add
push
add
out
jae
fwait
pop
inc
jge
xchg
xlat
push
pop
dec
outsb
mov
dec
or
arpl
jne
wbinvd
add
outsb
xchg
or
push
jb
push
mulb
popaw
pop
and
jmp
or
out
jae
imul
outsb
or
rcpps
lret
mov
sbb
ret
sub
xchg
xor
sbb
sbb
ret
arpl
frstor
fstpl
jmp
insb
or
lds
or
sbb
outsl
imul
mov
dec
push
fistpl
andl
movsl
movsl
pop
gs
sbb
sbb
dec
xorl
stos
inc
aaa
cmp
or
add
pop
mov
push
add
pop
test
ds
add
cmp
cmp
add
outsl
push
je
test
mov
ja
or
cmp
inc
pop
arpl
scas
sbb
pop
fwait
add
jmp
xchg
bound
aaa
jge
inc
aas
sbb
bound
inc
out
insb
jbe
pop
inc
stc
or
cmp
dec
and
outsl
and
daa
daa
xlat
pop
pusha
mov
inc
sbb
jns
mov
test
inc
out
mov
adc
pop
sub
and
testl
xor
add
loope
popa
ret
fldcw
mov
xchg
xor
add
sbb
filds
inc
sbb
shrl
add
loopne
inc
pusha
je
jb
cmpsl
je
mov
andl
movsb
mov
pop
imul
push
enter
xchg
idivb
jno
sbb
fsts
xor
mov
cmp
popa
lret
jp
fs
je
cmp
add
fstps
popa
add
mov
sbb
cltd
push
rolw
push
ss
jnp
xchg
jo
adc
mov
das
inc
dec
xorl
xor
adc
jae
jo
arpl
push
lds
arpl
pop
lods
adc
mov
xchg
sbb
pop
inc
jo
jno
or
jmp
test
inc
neg
in
inc
scas
movsb
inc
lret
jge
jg
mov
xchg
mov
aas
and
mov
xchg
sub
lret
pop
aaa
outsl
dec
add
mov
imul
mov
loope
sti
mov
nop
sub
dec
gs
and
popa
push
add
lods
jne
pop
movsb
or
sub
je
dec
je
push
xor
icebp
fbld
and
jne
sub
int
sbb
rcrl
fnstenv
test
pusha
push
xor
pop
insl
adc
xor
lods
jae
cmpsl
pop
mov
and
mov
popl
movsb
scas
sbb
pop
add
negb
push
xorw
push
and
rorl
and
push
add
mov
lods
mov
dec
fs
lea
adcb
mov
sbb
fisttps
jp
jno
sbb
lods
or
push
xchg
imul
cmpsl
aad
mov
sbb
inc
mov
ja
pop
or
subl
fldenv
insl
outsl
outsl
xchg
shr
in
jns
mov
adc
pop
sti
sti
xchg
cmp
outsb
sbb
mov
mov
fnclex
or
xchg
push
or
imul
xadd
sti
adc
push
andb
jno
sub
aas
cmc
mov
mov
das
xlat
adc
push
and
mov
dec
and
adc
xor
dec
pusha
pusha
pop
sub
pop
aas
xor
mov
mov
mov
sbb
pop
xor
inc
pop
nop
add
cmp
aaa
mov
jmp
add
fwait
cmp
jnp
aad
sub
insb
outsl
popa
addr16
test
js
add
mov
orl
pop
add
nop
add
rorl
adc
inc
inc
push
leave
adc
bound
or
dec
popa
fisttpll
or
xor
sbbl
xchg
add
jmp
fmul
push
cmp
jae
outsl
arpl
inc
jb
jo
imul
jb
je
dec
inc
push
pop
test
stc
fisttps
clc
addb
add
gs
jge
and
popa
je
add
sub
cmp
loope
popa
inc
outsl
jb
add
and
sub
je
popa
insb
push
jne
jb
inc
push
int
mov
mov
cmovne
or
outsb
fs
push
andb
sbb
out
jmp
xchg
mov
jmp
pop
adc
bound
pop
mov
mov
pop
sub
imul
add
imul
in
lret
pop
push
jl
or
pop
adc
add
jbe
cmp
adc
fisttpl
fs
adc
inc
pop
push
jb
fmuls
mov
pop
pop
sub
bound
cmp
gs
das
pusha
and
mov
cwtl
mov
out
andps
or
mov
inc
cmp
insb
dec
add
sub
push
adc
and
mov
insl
nop
setge
dec
adc
imul
or
pop
das
shll
outsb
pop
push
sar
inc
cwtl
cmovae
xchg
nop
adcl
mov
imul
xchg
rorb
pop
push
scas
push
or
lods
std
and
or
addr16
xor
mov
mov
push
outsb
pop
and
and
inc
cmp
xchg
rorb
and
jg
push
sbb
in
faddl
add
fisttpl
das
pop
mov
xchg
or
lahf
and
sub
stos
jp
or
insb
or
jbe
mov
adc
dec
outsb
pusha
push
ficoml
push
outsl
adc
imul
adc
aam
roll
jo
or
sub
push
adc
jno
add
mov
add
negl
insl
inc
mov
inc
inc
mov
inc
xchg
test
js
lea
or
fs
mov
lret
pop
jns
jg
sub
mov
pop
jle
adcb
adc
es
sub
out
sbb
call
popf
pushf
fs
fnsave
sarb
adc
jo
popa
push
cmp
popf
into
loopne
fisubrl
mov
ljmp
jnp
cmpsl
or
stos
xor
inc
imul
fs
insb
xor
insb
imulb
ss
pop
out
xor
lods
arpl
inc
mov
or
cltd
cmp
jp
stos
std
sbb
cmpsl
inc
mov
shrb
jae
push
lret
pop
dec
dec
andb
or
sub
sub
adc
insb
pop
ret
je
pop
sbb
xchg
addr16
jb
jae
adc
and
push
mov
and
xorb
and
dec
fs
jnp
addb
outsl
push
or
iret
pop
leave
pop
or
dec
loopne
cmp
or
mov
push
jmp
adc
mov
pop
adc
mov
rol
arpl
and
jmp
sub
mov
and
test
arpl
lret
mov
sbb
adc
xchg
test
add
cli
rorb
mov
pop
leave
jae
in
pop
int
or
mov
dec
dec
inc
mov
jbe
jne
bound
and
or
ret
jg
lcall
add
add
pop
inc
sub
popl
sbb
add
add
pop
adc
or
and
imul
inc
int3
sbb
lret
adc
mov
add
adc
pop
xor
in
mov
or
nop
daa
sahf
or
repnz
push
faddl
aam
out
rolb
les
mov
add
sbb
inc
inc
inc
jl
jle
adc
jmp
fcomp
pop
sbb
pusha
inc
inc
push
inc
fisttps
sti
outsl
es
aaa
or
bound
movsl
inc
inc
push
push
add
jmp
subb
pop
push
popa
add
nop
adc
push
inc
pop
enter
push
or
dec
jp
jl
add
daa
mov
cmp
gs
add
sbb
imul
and
add
jle
push
or
add
add
add
add
add
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
inc
add
inc
add
add
add
pop
add
add
add
add
mov
add
sub
add
mov
add
clc
add
adcb
add
cmp
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
call
add
add
add
add
add
add
add
xor
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
add
add
enter
in
xor
add
add
add
add
add
add
add
add
add
add
lock
add
xor
add
in
add
add
add
add
add
add
add
sbb
add
or
add
sub
add
in
add
add
add
add
pop
add
sldt
jo
add
cwtl
add
cmp
add
rolb
cmp
add
call
sldt
adc
add
cmp
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
mov
add
adc
add
faddl
add
in
add
add
add
add
add
add
add
mov
add
in
out
add
adc
add
in
add
add
add
add
add
add
add
fadds
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
in
repnz
cwtl
add
add
add
add
add
add
add
add
add
sub
add
test
add
mov
add
in
add
add
add
add
add
add
add
push
add
add
clc
add
jl
add
in
add
add
add
add
add
add
add
js
add
mov
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
call
incb
add
add
add
add
add
add
fiadds
add
add
add
add
add
add
add
sub
add
cmp
add
xor
add
in
add
add
add
add
add
add
add
push
add
addb
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
add
add
add
add
add
nop
add
addb
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
dec
inc
dec
dec
dec
inc
dec
dec
shr
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
inc
cld
cmp
inc
cld
pop
clc
aas
cld
pop
sti
cld
pop
sti
cld
jg
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
inc
sti
cld
cmp
clc
cmp
sti
ret
clc
aas
sti
inc
cld
add
rolb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
incl
ljmp
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
call
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
add
or
push
ja
add
push
jo
add
push
add
add
push
add
add
incl
jo
add
add
out
loopne
add
add
loopne
incl
add
incl
add
popl
add
add
add
add
add
pop
add
rorb
add
sldt
rorb
add
sldt
rorb
add
jg
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
and
add
add
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
xor
push
incl
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
and
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
add
je
xor
add
add
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jb
outsl
add
add
je
xor
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
add
je
xor
add
js
add
add
add
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
or
and
insl
gs
outsl
push
outsl
data16
popa
jb
cs
imul
insb
insb
cs
outsl
outsb
je
arpl
or
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
ds
jae
jb
jo
imul
outsl
ja
and
gs
insb
cmp
fs
jb
jo
imul
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
jae
gs
bound
or
add
test
add
insb
add
mov
add
mov
add
ret
add
add
add
add
cwtl
add
fnstcw
add
mov
add
add
add
repnz
add
add
adc
add
and
add
cs
add
add
add
cmp
add
add
add
dec
aas
add
add
add
push
aas
add
add
add
bound
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
gs
dec
push
xor
add
push
popa
jb
popa
outsb
je
outsl
jo
add
add
je
inc
