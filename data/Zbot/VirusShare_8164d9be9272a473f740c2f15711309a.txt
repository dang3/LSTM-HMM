mov
hlt
ja
ja
ja
stos
repz
psllq
add
add
dec
cmp
or
jle
add
jle
cmp
jle
mov
cmp
into
ss
or
jle
add
add
test
cmpl
cmpl
jl
add
add
fbstp
mov
loop
add
add
mov
nop
pop
ja
xlat
pop
ja
cltd
push
ja
pop
push
ja
or
mov
pop
xchg
xchg
std
lahf
les
shrb
repz
enter
adc
in
hlt
xchg
aam
sbb
fsubrl
ds
fistpll
adc
repnz
xor
insb
fmul
sbb
leave
mov
xchg
push
nop
mov
mov
fdivp
stc
xor
cs
adc
xor
outsb
dec
es
mov
imul
dec
aam
xor
pop
sub
cmp
push
xor
jb
ja
jecxz
xchg
add
out
mov
mov
dec
push
shrb
dec
jae
ljmp
dec
and
jae
mov
loope
mov
sub
clc
repz
das
outsb
add
add
test
mov
push
int
in
insb
fmuls
movsl
jne
push
xor
cwtl
ret
mov
mov
xor
jmp
mov
sbb
add
lea
mov
dec
inc
sar
xor
sub
shl
ror
add
mov
xor
mov
add
xor
dec
call
jmp
shl
ror
ret
add
add
add
jl
jmp
fcmovnbe
pop
stos
inc
xchg
xor
sub
or
add
cmp
cmp
ss
push
lahf
jae
out
dec
addr16
adc
mov
mov
test
outsb
loope
mov
xchg
jmp
mov
daa
addr16
xchg
sbb
fdiv
push
push
negl
ret
mov
int3
aam
lret
mov
jmp
nop
add
inc
xor
iret
movsb
mov
dec
ja
or
in
cld
adc
shlb
push
rcl
scas
cmp
in
add
mov
lretw
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
pushf
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
dec
shll
jbe
inc
jp
pushf
mov
shlb
mov
pop
jle
jecxz
push
mul
ds
push
xchg
lods
mov
xor
sub
inc
cmpsb
xchg
stos
pop
dec
pop
mov
add
jg
jno
mov
cmpb
adc
imul
in
repnz
sub
mov
insb
add
in
loop
sub
shll
add
out
shr
add
icebp
xor
xchg
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
popf
in
or
and
ss
jno
shlb
mov
pop
inc
jp
pushf
mov
shlb
mov
push
or
mov
test
push
push
xchg
lods
mov
xor
cmp
inc
cmpsb
lea
mov
add
push
jl
sbb
sti
cmpb
push
arpl
imul
pop
repnz
cmp
mov
insb
adc
xchg
std
loop
add
jo
cmpsb
or
out
shr
sbb
sbb
orl
xor
ffree
cli
or
loope
push
and
sub
sub
out
add
shll
ret
xor
clc
out
call
pusha
mov
rcl
xor
and
loope
call
popa
outsl
mov
dec
cli
mov
jns
mov
das
xchg
pop
adc
arpl
push
or
mov
movsl
jb
aaa
xchg
mov
mov
sub
fwait
mov
inc
adcb
aas
push
mov
bound
pop
xchg
cwtl
out
in
add
cltd
lcall
call
int
add
or
cwtl
pop
push
mov
pop
pop
cmc
int
or
std
push
mov
insb
pop
inc
mov
inc
pop
push
movsl
xchg
add
scas
sub
push
pop
bound
lock
jl
js
or
mov
mov
adc
adc
add
ret
push
inc
fisubrs
lret
loope
xor
fistpl
stos
adc
mov
fwait
cs
sbb
xchg
out
xchg
xchg
sub
xor
dec
push
sub
int
pop
jbe
and
adcb
dec
leave
mov
and
jmp
xor
push
into
cmp
xor
in
iret
mov
addr16
inc
movsb
push
out
sub
sbb
inc
lret
lcall
aas
shlb
imul
loopne
cmp
clc
arpl
inc
arpl
push
int3
jmp
flds
mov
xchg
dec
fsub
nop
cmp
jns
pop
or
add
fcom
or
dec
stos
mov
nop
add
icebp
test
popf
mov
pop
sbb
ja
icebp
aad
iret
or
aam
into
and
sub
mov
jne
mov
stos
clc
push
push
sbb
mov
dec
jne
mov
mov
lods
push
shll
inc
out
mov
shld
add
inc
push
inc
mov
mov
and
test
int3
adc
sub
popa
push
mov
stos
shrl
cltd
push
mov
in
or
push
dec
push
out
push
dec
movb
and
push
push
popa
or
shlb
js
out
out
hlt
cli
lcall
daa
leave
pop
call
dec
out
and
into
adcl
xchg
cmpsl
cmp
push
inc
cmp
sub
out
mov
inc
jo
daa
ret
movsl
outsb
enter
insb
pop
mov
into
arpl
jmp
inc
add
fsubl
cs
pushf
xlat
adc
xor
in
or
push
dec
mov
mov
cld
sahf
shlb
sbb
push
jnp
xor
jl
ja
in
lcall
loop
rorl
movsb
iret
call
pop
push
arpl
popf
lea
stos
movsb
orl
test
jl
int
les
add
xchg
loop
and
out
inc
loop
and
jnp
repnz
sub
xor
fisubrl
dec
rorl
mull
push
out
ljmp
pop
loope
inc
in
aam
in
lds
lret
in
cli
xor
sti
mov
dec
in
out
popa
add
jo
xlat
inc
cmp
sbb
xor
into
dec
mov
imul
adc
mov
and
call
dec
pop
js
mov
int
push
dec
jb,pt
cmp
shll
push
pop
xor
insl
sub
mov
call
jne
mov
test
stos
pop
push
out
pop
push
xor
sbb
in
movsb
mov
push
cmp
cmp
xor
movsb
jno
sbb
sbb
or
and
mov
sahf
repz
sub
shr
addr16
daa
aas
mov
sbb
lea
and
in
xor
pop
mov
test
xchg
push
icebp
xchg
lcall
sbb
mov
pop
adc
stos
cmpsb
add
adc
adc
jge
cmpsb
jmp
adc
repnz
decb
xchg
es
push
scas
adc
cmp
stos
lcall
xchg
dec
add
dec
inc
fmuls
sub
inc
outsb
test
dec
iret
mov
les
daa
mov
sbb
fsubs
xchg
cltd
pop
dec
push
mov
test
jae
and
pop
cmp
lahf
or
outsl
fprem1
div
sbb
mov
sbb
icebp
iret
ret
or
mov
pusha
push
push
push
call
cmp
in
pop
mov
sar
fisubs
movsl
pop
fistpl
ja
in
sbb
jne
out
sti
scas
adc
loope
mov
nop
mov
push
pop
ljmp
push
test
cli
xchg
mov
scas
scas
repz
push
andb
inc
mov
lret
and
mov
clc
les
pop
nop
int
orl
xlat
push
dec
clc
jecxz
incb
cmpsb
xchg
aaa
cltd
loope
mov
mov
loope
mov
or
test
xor
jmp
xchg
pop
jge
leave
leave
bound
arpl
sarb
test
stc
dec
imul
jecxz
add
pop
push
jg
stos
mov
add
rorl
fs
inc
lock
testb
stc
mov
xchg
mov
addr16
js
push
add
cld
movl
ljmp
mov
inc
jb
and
push
pop
lcall
mov
lcall
dec
repnz
mov
mov
stos
push
and
sbb
imul
sar
incl
les
shrb
and
js
loopne
lret
push
ja
mov
filds
outsl
cltd
dec
jbe
or
mov
add
and
stc
out
or
sahf
push
jl
mov
xor
out
outsb
push
pushf
xchg
jg
lods
sbbl
mov
xchg
sar
sub
ljmp
or
enter
sbb
pop
test
xor
pop
adc
roll
jne
dec
mov
inc
mov
test
sahf
push
mov
fisubrs
mov
icebp
int
mov
mov
sub
lods
lahf
xchg
arpl
xchg
add
dec
xor
popf
or
inc
adc
movsb
fcmovnb
popf
cmp
sub
mov
ss
cld
aam
cmpsl
stos
inc
fsubr
fldcw
mov
outsb
pop
jg
mov
and
dec
pop
cld
xor
cmp
jae
push
shll
shrl
sbb
call
int3
in
add
fs
inc
out
pop
pop
das
adc
sub
js
pop
je
cmp
nop
icebp
mov
addl
inc
repnz
mov
xchg
rep
insl
cmc
inc
dec
sarb
push
imul
test
mov
jge
arpl
xchg
out
sbb
rclb
lea
sbb
cwtl
out
daa
add
or
jmp
jae
mov
push
dec
mov
push
leave
fs
pop
movl
jbe
mov
pop
pusha
sbb
sarl
add
into
imul
xor
push
xor
adc
mov
cmpsl
dec
out
call
sbb
ret
sbb
lock
clc
lcall
mov
sub
icebp
xor
mov
xlat
jp
xor
push
pop
out
loope
pop
and
hlt
ss
enter
jl
dec
insl
and
or
ljmp
cmc
xchg
idivb
and
adc
push
pop
test
add
cwtl
data16
aam
cmp
fdivrp
add
lods
xlat
aas
dec
sub
pmaxub
fsubrp
int
inc
or
dec
pop
cmp
push
mov
or
fcomip
pop
addr16
dec
xor
add
into
cmp
pop
arpl
push
daa
sbb
aas
loope
imul
push
push
push
mov
stos
in
xchg
xchg
pop
dec
jno
test
pop
mov
dec
outsl
jno
mov
mov
xorb
mov
outsl
xchg
imul
pop
sub
mov
mov
and
dec
add
aam
inc
cmpsl
jg
hlt
and
cmp
and
insl
push
push
push
inc
add
jp
aaa
adc
xchg
gs
mov
shl
adc
inc
mov
ds
lods
stc
cld
or
xor
scas
mov
mov
ret
fisubl
fwait
rep
imul
xchg
sti
aaa
pop
lret
adc
jmp
mov
mov
mov
ja
and
mov
sarl
fidivs
mov
shr
add
jl
into
rol
insl
cmp
mov
sbb
dec
xor
pop
lahf
mov
lods
orl
roll
test
adc
mov
sti
and
dec
andl
les
cmp
mov
inc
pusha
arpl
add
mov
rcll
mov
cmp
out
jl
loopne
push
clc
mov
push
mov
inc
push
mov
cmp
mov
add
lock
popa
jmp
ja
das
movsl
jle
mov
rorb
out
cmp
mov
push
cwtl
mov
push
aas
jecxz
lcall
pop
and
jge
push
testl
add
sub
hlt
fnstsw
inc
mov
adc
stos
out
cmp
ljmp
out
loopne
mov
or
out
mov
mov
stos
cmc
inc
clc
clc
in
adc
std
outsl
xchg
xchg
sbb
xchg
addb
adc
pop
xor
shll
sub
push
xor
pop
dec
test
jb
test
dec
arpl
arpl
pop
jge
sub
movsb
adc
jl
rorb
or
jb
and
xor
sbb
xor
inc
scas
aad
pop
push
in
jnp
sahf
mov
rcr
jg
imul
inc
aaa
in
sarl
outsl
jmp
ljmp
jne
std
mov
gs
inc
pop
adc
push
enter
xor
hlt
jns
cmp
es
cld
enter
or
adc
sub
insl
mov
insl
jge
pop
lods
out
pop
ds
mull
les
xor
add
mulb
and
inc
insb
or
xor
movsl
insl
clc
sub
inc
dec
push
nop
mov
rcr
pop
sti
popf
xchg
aam
lods
inc
lods
lret
jecxz
cmp
xchg
cmpsb
inc
dec
jne
mov
jecxz
pushf
inc
rclb
cmp
sub
mov
xchg
xchg
stos
es
sbb
dec
mov
sbb
std
std
mov
mov
bound
in
push
jo
sbb
and
leave
popf
ja
cld
lds
ret
ljmp
pop
pop
xchg
es
popl
xchg
in
jp
xlat
dec
add
sub
enter
fbstp
repz
inc
push
mov
cmp
cmpl
test
jnp
push
sub
mov
push
cwtl
mov
stos
sahf
or
je
adc
out
cmp
sub
fdiv
or
cli
repnz
jge
aaa
in
fs
out
sub
adc
cli
nop
or
push
jl
movsb
aaa
stos
or
adc
and
jbe
mov
mov
fstpl
in
mov
mov
dec
push
mov
fdivrp
neg
lods
or
ja
jecxz
lret
and
cltd
test
dec
dec
sbbb
outsb
test
rcrb
push
inc
fidivl
mov
dec
dec
popa
mov
sbb
hlt
jns
jge
and
jge
fisubrl
les
or
cltd
and
mov
inc
ljmp
cmp
aam
pop
jl
sbb
test
outsb
inc
in
cmp
sbb
and
sbb
sbb
add
test
push
pop
mov
and
ljmp
les
leave
sub
lds
pop
mov
fdivs
in
rorl
fwait
xor
aaa
pop
push
mov
test
loopne
inc
pop
pop
popl
sbb
imul
push
clc
nop
cmp
adc
scas
sub
push
xchg
in
ret
gs
jnp
iret
mov
idivl
mov
dec
repz
outsl
or
test
popa
cmpsl
jmp
push
stos
xlat
mov
shll
adc
push
movsb
insb
movsl
fxch
push
jae
xor
leave
fsts
mov
pop
pop
mov
or
hlt
inc
in
xchg
enter
inc
inc
das
fldt
insb
mov
sbbl
mov
adc
dec
mov
mov
mov
mov
xor
cwtl
es
jmp
loope
sub
movsl
mov
int3
fimuls
rcl
iret
ret
and
test
cmc
insl
and
rolb
call
pushf
xlat
sbbb
push
adc
loop
add
xchg
add
mov
xchg
lock
sbb
in
xchg
push
jmp
scas
es
lods
add
lahf
out
scas
ja
mov
ds
test
jp
je
sbb
in
jb
enter
xor
xor
push
inc
inc
movsb
mov
or
stos
adc
hlt
add
fs
mov
push
inc
pop
push
dec
enter
movsl
in
pusha
mov
adc
push
push
dec
sub
and
cwtl
and
add
stc
cltd
inc
push
scas
neg
int
sbb
imul
sbb
jnp
cmpsb
or
cmp
cmp
and
dec
sub
pop
dec
dec
das
lods
pop
movsb
ljmp
or
pop
pop
mov
jp
fistl
xlat
test
and
rcll
xor
jmp
xor
lret
fisubrl
mov
rcll
das
sub
mov
leave
into
arpl
add
ret
in
into
xor
add
stos
mov
mov
hlt
test
orl
push
test
enter
sbb
pop
nop
xchg
adc
pop
and
sbb
popa
sub
add
pop
adc
mov
ljmp
push
hlt
xchg
push
insl
jo
jg
outsl
out
clc
loopne
in
pop
and
iret
pop
insb
pop
dec
adc
xchg
fisttps
adc
sub
mov
jbe
push
adc
sti
jl,pt
sub
xchg
mov
fldl
loopne
ljmp
gs
std
bnd
add
jmp
mov
mov
sbb
test
jno
scas
xor
add
rol
sbb
sahf
sbbb
mov
nop
out
jb
mov
jp
push
test
sbb
sbb
ss
mov
ret
lret
cmp
inc
jb
roll
inc
shll
movsb
and
fwait
jns
stos
xchg
rcll
push
jecxz
test
loop
mov
lea
lods
shlb
and
mov
add
and
mov
movsb
xor
and
push
scas
push
aas
dec
movsb
xchg
cli
jb
call
ss
and
mov
call
cld
stos
das
jb
daa
cmpsb
mov
pop
je
scas
nop
push
jbe
hlt
inc
ja
outsb
adc
pop
mov
pop
sub
and
daa
push
adc
xchg
push
xlat
andb
add
sbb
lock
aam
inc
enter
test
lret
aam
lods
jl
sbb
in
pop
jmp
nop
push
push
adcb
cmp
rorb
sub
xchg
fcomps
in
in
les
sbb
js
or
repnz
push
inc
pop
fwait
int
cmpb
mov
dec
fcompl
push
fidivrs
mov
addr16
dec
mov
data16
inc
dec
subps
jp
aaa
out
cmpsl
icebp
jns
mov
imul
xchg
lahf
jno
and
xor
pop
inc
out
adc
fisttpll
icebp
xchg
mov
andb
aam
hlt
addb
push
push
pop
lahf
les
and
inc
dec
ret
cmp
dec
cmp
sub
cmp
cmpl
lret
mov
leave
test
add
inc
push
xor
shll
inc
jg
js
xor
cli
cmp
sbb
rcr
mov
push
xor
adc
jb
adc
fyl2xp1
into
and
ss
imul
cs
xchg
imull
and
lret
jp
div
or
lock
add
adc
fwait
scas
fimuls
xor
imulb
call
mov
int
sbb
popf
jle
cli
or
mov
in
mov
cmpsb
fdivl
pop
inc
pushf
jp
sub
pop
sbb
adc
cli
lods
movsl
out
jg
jecxz
outsl
jnp
jnp
jle
in
aad
outsb
xor
jnp
and
mov
bound
lds
pop
inc
aam
cmp
dec
hlt
push
adc
loope
ljmp
sbb
xor
xchg
or
sti
ror
enter
push
into
mov
scas
fs
loopne
jmp
jle
pop
mov
xchg
decl
mov
std
das
lock
test
jo
stos
fldcw
scas
jecxz
mov
xor
insb
cli
push
ret
jo
popa
push
dec
lock
pushf
xchg
adc
enter
and
enter
adc
add
es
mov
and
mov
call
sub
xchg
mov
daa
andps
dec
sbb
int3
add
out
repz
push
sti
subb
cmp
jp
jg
in
mov
mov
inc
idivl
fs
enter
xor
xchg
cmp
inc
add
jl
rolb
or
or
fwait
andl
lods
xor
pusha
std
lods
push
popf
imull
push
js
aaa
cmpb
sub
mov
movsb
leave
pop
aas
pop
fstpt
dec
jl
cmp
sbb
xchg
cmc
add
dec
jmp
pusha
adc
loop
es
push
xor
in
push
cltd
addr16
into
adc
push
xchg
enter
test
in
xor
sbb
push
or
mov
test
je
inc
nop
push
jno
mov
push
sbb
cmc
push
xchg
dec
and
push
jae
ficompl
cmp
jno
mov
mov
push
jbe
lea
mov
orb
jge
outsb
cmpsb
ret
int3
movsb
fisubs
mov
push
mov
jp
popl
xor
mov
insl
mov
test
adc
jmp
cmp
cmp
sbb
jecxz
mov
mov
push
lods
call
mov
xchg
fistpll
adc
sub
sub
xor
in
in
lcall
cmc
mov
and
xor
jge
stc
cmp
adc
mov
repz
movb
movsb
add
and
leave
ficomps
and
fsubr
lods
aaa
jo
pop
and
out
sbb
in
mov
jecxz
xor
lcall
sbb
dec
cltd
into
aam
pop
iret
insl
xchg
cmpsb
xor
fs
stos
push
bound
sarl
mov
js
add
stos
outsl
dec
cmpsl
int3
imul
jae
jae
icebp
xlat
and
insl
cmpsb
jge
ljmp
movsl
jl
inc
cltd
pop
mov
push
insl
mov
and
mov
mov
dec
daa
sbb
lods
repnz
nop
xor
cli
int3
incb
out
cltd
push
add
cltd
out
punpckhwd
pop
fwait
movsl
or
es
and
dec
add
out
repz
and
cmp
ror
xor
repnz
pop
rolb
mov
cmp
cli
in
cmp
inc
inc
xor
pusha
pop
pushl
dec
mov
xchg
scas
push
sti
adc
mov
mov
sbb
gs
arpl
aas
adc
test
std
pop
inc
mov
sarl
and
ja
cwtl
xor
mov
xchg
add
inc
push
sub
fistpll
addr16
mov
cmp
xor
sub
xchg
pop
fisubs
xchg
out
and
fnstsw
nop
test
pop
hlt
xchg
insl
push
stos
bound
das
inc
aam
fwait
mov
movsl
cmpl
mov
xchg
aad
sbb
aas
inc
movsl
in
sahf
mov
add
cmp
test
je
cli
cmpsb
cmpsb
lcall
cld
clc
sub
loopne
push
mov
insl
pop
cmpsl
lret
pop
jbe
lods
faddl
xchg
mov
jl
cmp
mov
mov
js
nop
out
sbb
adc
stos
aam
in
mov
aaa
ffree
dec
stos
fnsave
daa
std
push
pinsrw
sub
cmp
xor
adc
mov
xor
sbb
pop
fstps
xor
xchg
lods
adc
sbb
xor
mov
inc
daa
pop
aas
xorl
repz
mov
jle
mov
inc
mov
out
movsb
pmaddwd
popf
push
imul
push
push
mov
push
jae
cmp
pop
mov
jbe
xor
jecxz
jnp
in
rcrl
or
cltd
in
add
aaa
xor
dec
stos
dec
pop
adc
stos
shl
divl
xchg
xchg
loope
xor
call
adc
cmp
adc
ja
test
out
test
in
push
push
test
mov
adc
and
add
pop
lods
add
and
leave
sub
push
or
fs
lcall
push
dec
add
mov
and
mov
dec
fstl
cmpb
es
icebp
dec
and
lods
js
dec
dec
in
mov
push
out
fisubs
or
inc
lods
xlat
bound
inc
ror
mov
lahf
mov
popf
sbb
mov
inc
pop
fwait
xchg
mov
pop
sub
data16
pop
and
and
xchg
pop
int3
mov
ljmp
int3
enter
int3
in
outsb
and
sbb
loopne
repz
lret
loope
xor
adc
stos
push
out
loopne
mov
adc
subb
pop
test
cmp
aaa
sub
mov
mov
and
out
lret
out
inc
xchg
stc
mov
les
push
lret
push
ficompl
push
xchg
and
popf
call
repz
lret
mov
pop
call
imul
fstps
loop
mov
ja
sti
push
cwtl
movsb
adc
aam
mov
mov
std
mov
jae
cltd
stos
ss
pop
and
xchg
loopne
call
aam
mov
add
sahf
inc
xchg
adc
adc
or
cmpsb
sarb
mov
sti
mov
aaa
jno
mov
xor
push
scas
mov
cmp
sbbb
out
aas
and
loopne
push
subb
sub
fdiv
outsl
dec
hlt
mov
popf
add
mov
in
jne
arpl
jmp
out
aad
cmp
test
xchg
testb
adc
int
pop
mov
fs
cmc
in
add
cltd
pop
dec
pop
inc
mov
adc
iret
shl
mov
out
aam
idiv
cltd
in
repnz
stos
lcall
sarb
inc
aam
jne
mov
jge
dec
mov
dec
sub
orl
mov
icebp
les
pushf
dec
mov
js
cmp
jae
pop
gs
js
xor
cmpsb
inc
ret
in
fidivrl
pusha
popa
inc
add
mov
mov
mov
cltd
sarb
push
negb
mov
mov
dec
icebp
ds
or
sbb
xchg
cld
data16
das
fistpl
imul
dec
push
loopne
enter
in
or
xchg
imul
sub
sub
sbb
out
cmp
mov
and
xlat
fs
stos
icebp
icebp
inc
ljmp
xor
add
adc
or
add
pusha
mov
minps
roll
cmp
xchg
insl
push
xor
or
sub
cwtl
insb
movsb
or
jp
adc
sub
insb
int
bound
mov
xor
or
loop
mov
mov
hlt
inc
cmp
ja
adcl
lcall
pop
sahf
mov
hlt
mov
pop
add
or
pop
push
jbe
fidivl
lds
mov
dec
sub
fldl
fs
fisttpll
mov
cmp
jg
xor
or
stos
loope
mov
shl
mov
test
and
movsl
lret
in
iret
rorl
pop
and
ret
mov
or
outsl
mov
inc
cmp
mov
imul
lret
push
cld
and
and
scas
in
inc
iret
xchg
clc
data16
lahf
aaa
push
cs
aaa
and
rcrb
loopne
sub
ljmp
rclb
xor
mov
out
xchg
inc
mov
aaa
scas
pushl
and
cmc
mov
or
sub
scas
add
ficoml
daa
add
aam
cli
pop
jge
jo
dec
mov
and
and
lods
jae
fmuls
test
add
or
jg
and
and
mov
bound
cmp
and
aad
leave
cwtl
push
add
mov
les
ds
pop
sbb
dec
sarb
aas
push
icebp
adc
test
call
pop
sbb
jmp
stc
ja
subl
adc
xchg
cld
xchg
in
stos
xor
push
adc
cmpsb
in
xchg
enter
int
and
leave
and
imul
pop
jo
iret
cmpsl
cli
sti
add
and
and
mov
mov
fidivrs
js
add
sahf
dec
xchg
jnp
jo
jnp
daa
sub
lods
push
sub
mov
sub
ret
call
shrl
or
lock
xchg
fidivs
lcall
sahf
out
cmp
adc
arpl
push
rolb
pop
or
mov
push
and
loopne
cmpsb
loop
stc
add
mov
fst
mov
sbb
popa
enter
adc
fdivp
push
rcl
xor
inc
mov
inc
dec
vunpckhps
xor
fs
aad
ja
lds
mov
test
sarb
xchg
sub
mov
int3
mov
cmc
mov
push
push
push
outsb
jle
mov
mov
insl
ljmp
cltd
add
fstp
mov
mov
add
repz
stos
push
int3
dec
push
jge
mov
cmpsl
imul
inc
jno
jg
jns
cmp
loop
js
cmp
dec
mov
sub
dec
in
mov
xlat
repz
cli
dec
int3
sub
loope
jge
sbb
xor
pop
sti
dec
jne
pop
jg
subb
repnz
jg
fldenv
jns
lcall
jl
scas
push
leave
lea
jo
scas
lcall
test
into
push
jns
stos
mov
cmp
cli
or
mov
mov
fdivrp
cmp
mov
sahf
xchg
adc
cli
dec
aaa
xchg
push
mov
xchg
mov
dec
fbld
lret
xor
sub
cld
adc
dec
inc
or
mov
jne
sub
dec
aad
dec
xorb
jno
mov
xchg
mov
scas
clc
sbbb
dec
pop
sbb
push
stos
ret
loope
ja
mov
mov
out
lea
mov
and
cmp
icebp
jns
xchg
inc
xor
sub
and
andl
jae
imul
push
adc
adc
and
pop
push
pop
mov
inc
shll
mov
jae
jmp
loopne
pop
adc
sahf
int3
push
nop
mov
sbb
les
ja
jbe
fwait
adc
push
hlt
inc
add
xlat
or
aaa
pop
negw
and
inc
inc
shll
sub
nop
push
add
ret
aaa
sarb
mov
ja
inc
cmp
mov
lea
aad
ficomps
insl
lahf
lock
pusha
cmp
popa
mov
int3
push
enter
sbb
mov
xor
nop
aad
test
sbb
cmp
xchg
inc
outsb
mov
ret
pop
mov
lods
jo
pop
shlb
and
test
xor
mov
pop
dec
or
push
fs
adc
mov
mov
mov
cld
mov
jl
add
adc
pop
and
inc
in
inc
clc
into
shl
or
test
insb
add
xlat
int
adc
jnp
je
pop
mov
mov
dec
mov
pop
imul
dec
sub
mov
call
push
jae
or
jmp
sub
sti
inc
push
mov
inc
or
pop
jge
adc
rolb
in
test
push
mov
add
shlb
push
fistl
mov
sbb
pop
shrb
cwtl
xchg
dec
imul
scas
adc
adc
mov
fistl
adc
push
sub
out
xchg
fildll
add
inc
lahf
sub
call
jns
pop
cmp
das
pop
add
pop
lea
mov
mov
in
or
scas
int
and
inc
xchg
xlat
push
inc
and
dec
fwait
popa
inc
pop
dec
push
or
xchg
jns
hlt
jp
mov
rcrb
in
stc
sahf
lahf
and
mulb
js
orl
mov
imul
rcl
push
aaa
xor
test
mov
xor
mov
or
hlt
or
dec
mov
shr
stc
stos
push
jnp
imulb
stc
lcall
xchg
int
inc
std
cmpsb
out
jg
cmp
jae
sub
in
xor
in
xchg
sub
scas
movsl
inc
sub
outsb
push
test
mov
xchg
mov
movsb
jno
popa
and
inc
dec
cmp
xchg
xor
mov
fdivrl
mov
and
add
xchg
sub
push
mov
jge
daa
dec
pushf
or
je
aas
jle
fimuls
mov
in
pop
xor
push
cmp
push
mov
pop
xor
adc
jae
jle
jge
nop
mov
mov
xor
xchg
mov
cmc
jb
dec
xchg
lret
sahf
xor
or
cmc
pushl
mov
sahf
rol
out
loope
dec
fcompl
in
adc
rcl
push
int
pushl
cmp
jno
lret
in
pop
enter
dec
je
subl
scas
pusha
fnstsw
xchg
pop
sbb
lahf
enter
mov
ret
add
fucomi
mov
sub
les
inc
sbb
scas
repnz
sbb
orb
and
sti
and
push
ljmp
pop
fistpll
pop
xchg
sbb
adc
adc
sti
pusha
push
sub
repz
xchg
sbb
aam
mov
and
lret
mov
pop
and
xchg
in
sub
or
adc
inc
inc
mov
lahf
mov
lods
movsb
mov
in
out
ds
sbb
sti
and
sbb
sub
leave
xchg
popf
sbb
pop
pusha
jge
stos
mov
mov
popa
and
xor
pop
adc
inc
cmpsl
push
jmp
popf
cmp
cs
out
mov
daa
fnsave
xor
mov
lea
out
loopne
and
test
je
scas
jae
sub
or
loope
inc
sub
pop
nop
and
lea
mov
xor
jbe
popf
mov
cmpsb
ljmp
push
mov
jno
pushf
sbb
jns
xor
test
fs
idivl
inc
jl
mov
adc
cmpsl
jmp
jb
cltd
jl
sbb
loopne
mov
jp
fwait
push
cmpsl
xchg
idivb
push
dec
or
and
and
add
mov
mov
ljmp
mov
push
adc
cmpsl
loopne
sub
fsts
dec
andl
cmpsl
test
mov
mov
bound
and
jno
mov
stc
inc
fdiv
aaa
sbb
cmp
mov
jmp
xor
jns
imul
in
and
insl
popa
xchg
outsl
push
push
and
stc
mulb
test
fimuls
test
jns
mov
inc
sahf
fmuls
cmp
out
loop
cmp
mov
and
or
cmpsb
pop
inc
xchg
lds
popa
add
ja
xchg
push
jge
add
push
out
push
enter
push
aad
jge
loopne
cmpsl
loopne
scas
sarl
xchg
int3
mov
imul
aam
movsl
shll
or
aaa
pop
xchg
mov
sub
fiadds
ret
xor
rclb
xchg
fs
pop
jg
pop
fwait
pushf
xchg
adc
cmp
insl
adc
jb
repnz
dec
xor
cli
pop
or
sahf
inc
push
adc
nop
fcomi
jbe
lea
pop
pop
sbb
mov
test
fadds
pop
neg
jbe
push
cmpsb
pop
jmp
mov
dec
insl
mov
mov
aaa
das
push
xchg
scas
and
fbstp
inc
in
sarb
aam
or
sub
jne
int3
jp
pop
scas
xchg
pushf
mov
add
pop
aad
addr16
add
dec
push
mov
xchg
push
shrb
dec
jl
fstpl
das
jl
mov
js
push
rorb
inc
negb
lods
mov
outsl
dec
repnz
pop
jp
movsl
je
mov
xorl
fbstp
js
sbb
mov
xlat
sbbl
repnz
cwtl
lea
rcll
loopne
xor
and
mov
dec
pushf
add
mov
cmpsl
daa
xchg
cltd
xor
adc
pusha
leave
and
addr16
rcll
arpl
popf
pop
lcall
mov
sbb
repnz
bnd
adc
push
repz
xchg
adc
or
push
repz
dec
sbb
and
or
inc
incl
inc
mov
mov
loopne
and
lahf
mov
cld
mov
mov
gs
xor
push
xor
and
jle
inc
stos
cmpsb
mov
jae
xor
and
cmc
dec
cmp
xchg
rolb
mov
roll
or
add
dec
xchg
mov
loope
mov
icebp
sub
ss
push
and
sahf
scas
lods
mov
jle
pop
pop
or
ret
in
adc
xchg
test
into
mov
aas
cmp
inc
or
leave
push
mov
xor
jl
xchg
sbb
pop
xor
sub
shlb
push
mov
adc
lock
sub
scas
or
mov
inc
sbb
rol
and
pop
mov
shll
dec
sub
cmp
xor
shll
pop
cmc
inc
sub
das
xlat
adc
cld
inc
shll
mov
incb
stos
add
mov
int
and
mov
scas
push
xor
sti
into
movsl
jns
sbb
mov
jae
pop
adcl
push
dec
out
div
mov
push
dec
aam
test
rol
enter
xchg
std
sbb
jmp
mov
mov
fbld
icebp
iret
add
jp
mov
clc
jae
mov
and
bound
sbbl
dec
or
or
je
jp
dec
xchg
lret
mov
cmp
cmp
test
jae
pop
mov
sbb
pop
adc
push
push
in
jne
cmpsb
push
inc
addb
int
add
aas
dec
push
cmc
je
cmp
lea
int3
adc
in
jle
lret
outsl
imul
add
xchg
adc
pop
xlat
xor
insl
enter
adc
jo
ljmp
push
add
cmc
jno
cmp
jns
clc
scas
mov
into
pop
in
mov
pop
sbb
and
jle
popa
in
out
arpl
test
pop
xchg
out
jp
sti
fwait
test
xor
mov
ljmp
sbbb
daa
ja
push
loop
pop
jl
bound
push
fstl
test
inc
test
mov
repz
jns
nop
mov
loopne
out
and
mov
sbb
movsl
scas
stos
jnp
faddp
aaa
dec
rorb
mov
loop
aas
fsubs
jge
sbb
xadd
dec
arpl
cmp
mov
inc
nop
jle
scas
cmc
add
xchg
test
or
cmp
cmp
and
scas
sbb
imul
dec
or
mov
xchg
jle
dec
outsb
das
xor
xchg
add
xor
aad
call
mov
clc
mov
ret
out
mov
sub
shr
mov
mov
mov
out
or
fscale
fcoml
loopne
outsb
pop
inc
cltd
jecxz
js
xor
outsb
shlb
fnstenv
fcmovnb
jmp
inc
aas
sahf
sbb
aaa
subl
shlb
aad
popa
add
or
pushfw
andl
push
mov
and
dec
mov
pop
lahf
mov
mov
mov
mov
add
lcall
in
aaa
push
cmpsb
pop
stc
fnstenv
and
sub
push
inc
push
int
scas
lds
lcall
sbb
gs
ljmp
call
pusha
gs
cmp
xchg
lock
or
js
andb
jp
in
stos
xchg
dec
shlb
sysexit
fisubs
xchg
jo
rorl
ret
xorb
lret
hlt
cld
pop
icebp
out
or
negl
rclb
pusha
mov
xlat
push
test
adc
daa
imull
sbb
negb
das
mov
jne
pop
fildll
or
lds
mov
cmp
fsub
test
cmpsb
inc
adc
or
jmp
push
jg
loopne
pushf
and
clc
aas
sbb
mov
xor
out
pusha
fildl
cmp
jle
ficoms
imul
xlat
or
mov
cwtl
lock
xchg
outsl
fdiv
loopne
mov
xor
pop
ja
sbb
aad
sub
pop
in
insl
ljmp
call
cmp
fmuls
or
pusha
sbb
and
movsb
out
dec
aas
aaa
push
outsb
nop
mov
addb
adc
add
imul
roll
hlt
shll
mov
ret
mov
movsl
dec
adc
sbb
xor
repnz
out
out
shrl
adc
repnz
xor
lods
mov
push
mov
repnz
and
les
dec
loopne
in
cmp
mov
out
daa
sarl
sti
lea
jns
inc
and
push
repz
pop
mov
pushf
xchg
mov
cmpb
and
sbbl
xor
imul
out
adc
mov
pop
not
adc
sbb
or
xchg
inc
shll
mov
jo
jg
inc
xchg
test
inc
push
out
fwait
dec
loop
jp
mov
test
cli
int3
pusha
xchg
testb
ljmp
aaa
or
ficoml
pop
sbb
adc
je
lret
xor
popa
push
sbb
mov
hlt
dec
sbb
mov
lahf
int3
into
aas
sub
stos
xchg
fwait
jnp
movsb
inc
loopne
stc
lds
push
push
orl
sbb
and
sub
fsubrl
xor
movsb
cmp
mov
xchg
pop
popa
pusha
insb
lock
mov
popa
inc
or
scas
xchg
aad
iret
cmpb
aas
adc
fsubrl
aad
pop
mov
cld
iret
lcall
test
sbb
jmp
sbb
jae
fs
setne
cmpsl
imul
cmp
xchg
shrb
jecxz
sub
fcoml
mov
and
push
sahf
xor
pop
jecxz
xchg
sub
sbb
aaa
push
jp
js
pop
adc
inc
ja
ds
xchg
jge
iret
in
int
push
ljmp
pop
pop
pusha
int3
inc
push
add
insl
push
in
and
lret
out
int3
and
sub
push
mov
pop
gs
xchg
mov
outsb
xorl
cltd
mov
imul
orl
subl
and
add
pop
mov
mov
pop
insb
xorb
inc
int3
loopne
jb
scas
pushf
cmpsb
repz
rorl
leave
fldt
mov
gs
xor
pop
fstpt
ret
cmp
adc
mov
data16
adc
fmul
inc
scas
push
pop
hlt
repz
lret
hlt
test
pop
pop
ret
or
and
dec
sti
int3
xchg
icebp
xor
lret
jp
arpl
and
popa
fisubs
dec
jae
cmp
fildll
sbb
sar
mov
aad
fstp
adc
sbb
mov
mov
lahf
outsb
loop
loopne
pop
loopne
add
xor
sub
popa
pop
cmp
mov
mov
or
adc
aaa
movsl
movsl
mov
cmp
push
xchg
inc
insb
lcall
andps
fsubl
or
mov
xor
js
add
fstl
dec
pop
pop
inc
sahf
fcomps
les
and
hlt
sti
hlt
jle
idivb
jbe
stc
and
jl
cmp
jmp
pop
lcall
lods
clc
popf
sub
stos
push
push
int
mov
jb
mov
addr16
rorb
sub
int3
sbb
jp
xchg
cs
cwtl
insb
xchg
and
cmp
enter
pop
add
shlb
dec
cmc
xchg
nop
sub
cmc
loopne
enter
mov
pop
sub
dec
dec
dec
jmp
out
minps
idivl
aaa
adc
hlt
mov
mov
in
adc
mov
cmp
cmpsb
pop
adc
adc
dec
das
popa
cli
out
xchg
xchg
mov
icebp
xlat
xchg
gs
or
push
int3
aam
arpl
jp
adc
adc
rolb
pop
ljmp
arpl
mov
mov
daa
addr16
lret
popa
stos
in
into
ret
pop
mov
ljmp
dec
outsl
push
mov
or
into
in
out
sar
xchg
out
repnz
lds
cwtl
scas
lea
test
loopne
sar
iret
mov
outsl
dec
fistpll
mov
stos
aaa
ja
xchg
test
arpl
scas
icebp
aaa
mov
adcl
mov
jle
cmc
mov
inc
cs
xchg
out
lock
daa
subb
or
mov
push
pusha
push
out
sub
add
stos
in
lret
push
mov
xchg
jmp
scas
push
or
pop
xchg
and
cs
sbb
mov
xor
and
jmp
aad
push
ja
lods
mov
cltd
adc
add
lods
rcrb
add
cmp
lret
icebp
mov
imul
pop
mov
rcl
push
les
mov
rcr
das
out
repz
stos
xchg
inc
xor
aad
das
shlb
sahf
jnp
xchg
dec
inc
data16
icebp
inc
fiaddl
outsb
inc
or
mov
and
stc
and
mov
jae
push
test
xor
inc
push
fidivs
orl
fildll
jno
inc
out
inc
xchg
ja
mov
ret
ja
repnz
dec
or
pop
fnstenv
mov
sbb
add
lea
out
dec
pop
cmpsl
add
xchg
xor
aad
insl
mov
clc
decl
mov
les
iret
cmp
std
loope
xor
in
gs
or
and
jb
popf
sarb
xlat
scas
sub
imul
jecxz
bound
or
sahf
or
jg
and
repnz
sub
fwait
xor
add
lcall
popa
lahf
xchg
push
xor
mov
cmc
dec
pop
mov
cli
imul
mov
leave
inc
or
imul
addr16
cmc
pop
mov
mov
insl
jmp
mov
shl
icebp
adc
movsl
stc
dec
inc
and
mov
inc
mov
mov
fs
cmpsb
clc
push
addr16
push
mov
lcall
mov
jbe
inc
insb
in
mov
pop
sbb
testl
xchg
push
inc
loopne
or
popf
xor
movsl
arpl
push
repnz
lods
test
jne
inc
js
and
and
adc
ss
in
push
testb
sub
mov
dec
rcr
roll
jg
lods
in
cli
and
lods
cmp
inc
xor
shll
outsl
in
mov
loope,pn
pop
dec
bound
sub
mov
cmp
dec
jb
or
xchg
pushf
mov
nop
mov
lods
sarl
add
adc
into
clc
ja
jp
stos
sahf
xor
addr16
les
into
out
lea
repz
mov
sub
and
mov
lahf
mov
aam
xor
pop
fs
imul
inc
dec
push
jns
jb
jbe
or
mov
nop/reserved
lods
xor
in
in
das
loopne
sahf
andl
fstps
cmp
push
movsl
adc
jge
arpl
cld
cvttps2pi
lods
pop
das
mov
push
xchg
jmp
repnz
cld
roll
jne
dec
jns
pop
fstl
xor
jg
neg
leave
int
mov
xchg
and
popf
sbb
pop
iret
xlat
fstps
jge
mov
adc
lahf
test
mov
and
pop
nop
insl
aas
cli
nop
jo
dec
mov
push
arpl
sub
rorl
push
sub
roll
push
or
mov
rcrb
sbb
ds
sti
jecxz
jno
loope
push
and
xchg
mov
out
mov
mov
hlt
and
ljmp
pop
pushf
mov
pop
movsl
fucomip
mulb
jno
xchg
shrl
push
hlt
add
gs
aas
inc
fmuls
fnstcw
lret
and
sub
fs
push
mov
jecxz
ljmp
jnp
or
fs
popf
mov
mov
ja
outsb
ja
inc
xchg
jnp
sbb
test
iret
ficomps
lds
lods
lret
nop
leave
js
mov
sbb
cld
popf
ret
sub
shrl
sub
ss
ret
inc
jno
rcrl
lret
int3
push
add
das
jecxz
and
and
out
or
lock
test
dec
push
fwait
push
je
adc
mov
mov
push
xor
cmc
shll
inc
cmp
adc
sti
sub
adc
xor
inc
jne
sbb
or
int3
icebp
dec
lret
or
jmp
mov
jecxz
xchg
add
adc
mov
dec
mov
jo
mov
mov
mov
jne
paddusb
idivb
in
dec
inc
cwtl
and
xchg
and
xchg
test
in
push
outsl
ss
outsl
addr16
mov
ljmp
negl
mov
scas
adc
cmp
jns
add
int3
in
cmp
inc
push
and
out
test
cli
jmp
aam
aaa
cmc
cltd
lock
lods
pusha
jge
imul
ja
pmuludq
mull
or
jnp
es
lret
lret
pusha
int
lret
ds
push
data16
push
pop
sub
xchg
outsb
out
pop
aad
jle
mov
push
cmp
dec
movzbl
push
sbb
jecxz
xchg
bswap
xor
inc
stos
sahf
imul
loopne
add
leave
sub
std
int3
mov
mov
jp
lods
adc
sbb
push
je
xor
add
sbb
popa
jb
pop
in
xlat
inc
mov
sbb
inc
cmpsb
sarb
mov
jo
mov
adc
xor
pop
jmp
xor
push
cmp
xor
xorl
lcall
adc
insl
sbb
jge
lods
in
xor
and
pop
les
dec
enter
fldt
push
or
outsl
mov
xor
js
mov
push
cmpsl
add
or
das
sbb
mov
pop
inc
inc
pushf
out
inc
mov
add
adc
movsl
js
push
add
xor
inc
inc
ds
push
adc
mov
pushf
popf
cld
iret
xchg
push
inc
adc
push
jae
call
mov
or
scas
sub
adc
je
lods
push
mov
jg
lods
mov
test
gs
adc
push
mov
int3
lock
dec
lcall
jge
sub
int
xor
and
mov
test
lds
add
sbb
scas
cli
out
in
repnz
fwait
out
mov
and
dec
pop
mov
test
jns
int
test
or
in
or
inc
or
scas
repz
sbb
or
mov
loope
jge
ret
call
xlat
insb
sbb
inc
outsl
adc
movsb
dec
lods
into
cmp
dec
es
dec
mov
jae
sub
decl
cld
loope
cmp
mov
enter
aaa
xor
mov
pop
icebp
xchg
dec
pop
fidivrl
dec
daa
jno
adc
and
pop
mov
loop
bsf
test
sub
outsl
fs
jmp
jp
jo
and
jecxz
jge
xor
lcall
jbe
mov
pop
ficoms
sub
jmp
test
mov
pop
mov
push
in
mov
fs
mov
add
fld
sbb
jnp
out
enter
add
xchg
rol
jecxz
cmp
aam
push
test
cli
mov
sub
les
cmp
fcmovb
mov
mov
push
pop
and
dec
int
push
lods
test
fmuls
in
cmp
or
pusha
fsts
lods
test
leave
lret
pop
xchg
xor
dec
and
arpl
mov
inc
out
aas
xor
adc
add
cmp
shll
lret
mov
adc
adc
lret
insl
mov
test
push
dec
rorl
dec
inc
mov
jg
or
ss
xor
mov
dec
push
mov
inc
push
mov
adc
xor
jle
lods
daa
xor
nop
dec
adc
sbb
sarb
mov
xchg
cld
push
in
sbb
out
dec
sbb
stc
lret
mov
pop
es
fstp
leave
andl
js
sbb
cmp
testb
imul
and
stos
adc
ljmp
rol
lcall
int3
loop
inc
xchg
jmp
cli
lcall
aad
mov
jl
mov
sub
or
sbb
jl
xchg
dec
xchg
decl
dec
mov
or
ss
sti
mov
cmc
out
lcall
imul
add
aaa
xor
push
sbb
dec
data16
aad
or
jbe
jg
stos
int3
insl
jae
je
lea
add
bnd
cmp
mov
mov
mov
mov
adc
std
imul
dec
add
xchg
test
dec
and
sub
lods
popf
push
icebp
pop
add
mov
xlat
das
and
imul
push
iret
push
fmuls
inc
push
jmp
xchg
add
lds
cmc
ds
imul
mov
jg
hlt
jmp
xor
in
mov
iret
test
inc
mov
jbe
push
stos
jo
dec
lods
mov
mov
lock
negb
xor
icebp
lods
cmp
adc
inc
sbbl
mov
jmp
pushf
xchg
inc
icebp
rcrl
out
or
test
repnz
insb
sbb
and
xor
fidivs
fs
addb
xor
mov
daa
xchg
fcomp
xor
mov
pop
mov
in
push
add
xchg
xor
mov
inc
shl
rcr
add
xor
sbb
aad
mov
lret
cld
leave
push
jl
adc
lahf
arpl
jmp
add
xor
cli
ds
les
cmp
and
mov
or
mov
and
push
loope
sub
sbb
fistpl
cli
inc
das
shlb
cmp
sahf
rcrb
or
notl
xor
xor
ljmp
push
gs
mov
dec
in
fwait
jo
dec
std
lret
cli
imul
arpl
stc
sbb
mov
fnstsw
cmpsl
repnz
pusha
mov
data16
pusha
js
sbb
push
push
push
movaps
sub
in
lcall
and
xchg
or
and
mov
inc
lret
sbb
mov
inc
dec
add
mov
sub
ret
pop
lods
sbb
mov
xchg
xor
ljmp
popa
rclb
pusha
in
sub
xchg
mov
lret
ds
pop
repnz
sbb
ss
jnp
push
adc
push
hlt
lea
mov
js
add
inc
pusha
fstl
sbb
adc
adc
clc
lahf
addr16
or
add
dec
lods
sbb
repnz
inc
dec
lods
sub
pusha
mov
mov
push
mov
ja
sbb
mov
iret
sub
or
cld
sub
dec
filds
sub
sbb
ja
sbb
cld
sti
push
dec
pop
xchg
add
xor
rcr
push
jae
dec
jno
sahf
push
dec
lea
adc
pop
mov
lods
mov
mov
fs
adc
cltd
sub
fcomps
and
decb
faddp
imul
outsl
inc
lock
gs
xchg
add
sar
fbstp
fnsave
rol
sub
adcb
dec
mov
orb
lods
icebp
cmpsb
repnz
icebp
jp
bound
add
mov
adc
xchg
push
jge
cmp
fnstsw
lods
mov
mov
inc
inc
xor
es
xchg
fisubs
repz
mov
cmp
pop
adcl
push
mov
arpl
ret
int3
push
ret
jecxz
leave
jnp
inc
jl
test
scas
loope
aam
out
fmulp
and
out
cmpsl
fucomip
lea
adc
mov
or
int
ficompl
dec
insb
mov
jge
loopne
mov
mov
push
dec
sbb
clc
sbb
jg
imul
popa
sbb
mov
cmp
inc
mov
sub
pop
lret
call
sbb
arpl
inc
mov
mov
fcoml
mov
and
xchg
pop
and
clc
sbb
repz
xchg
jmp
pusha
add
mov
or
shrl
pop
js
ljmp
adc
and
xchg
pop
add
xor
cmc
jge
jae,pt
out
es
js
cmp
outsb
lret
test
xchg
fcompl
shrl
xor
lcall
in
or
jbe
pop
scas
out
hlt
pop
xchg
mov
sub
and
dec
pop
inc
daa
inc
adc
mov
xor
push
push
addr16
adc
mov
pop
sbb
inc
inc
sbb
es
sbb
cmp
ret
mov
mov
sarl
std
in
jnp
imul
mov
push
data16
test
test
js
push
stos
sbb
lahf
add
sbb
out
enter
nop
es
adc
sub
lea
and
xlat
xchg
jne
or
cmp
das
inc
aaa
mov
xor
inc
pop
mov
jbe
lret
jmp
ja
sub
jle
and
xchg
iret
test
mov
shrb
xchg
test
mov
aad
in
cltd
and
sti
lahf
pop
int
xor
adc
mov
and
xlat
daa
outsb
inc
sub
lea
dec
adc
js
fiaddl
sbb
cmp
pop
les
scas
xchg
gs
mov
mov
pop
jp
dec
adc
pop
sti
jg
or
shlb
jo
bound
pop
into
andb
push
mov
sub
mov
adc
pop
jbe
xchg
shll
push
adc
push
jne
sarl
xor
mov
cmp
sbb
jmp
sar
sbb
iret
jmp
call
jns
dec
imul
pop
inc
pushf
loope
popa
sub
cmp
ret
add
mov
cmc
sub
push
cmp
or
jle
inc
out
mov
xor
popa
aas
and
jmp
adc
mov
loope
dec
xchg
dec
mov
pop
js
mov
stc
mov
jg
imull
ja
lret
pop
xor
mov
addr16
xchg
adc
mov
push
sbb
out
jne
lea
call
imul
mov
jp
jge
dec
ficompl
or
pop
dec
cmp
sub
add
xchg
xor
push
pusha
sub
mov
gs
or
aad
das
pusha
lret
shrb
ljmp
push
popa
arpl
xchg
xchg
aas
loop
data16
add
sbb
or
inc
in
inc
jb
shr
mov
jmp
shll
push
test
stc
or
rorb
mov
push
fs
jecxz
loope
xchg
jle
and
push
pushf
jbe
adc
test
out
or
add
outsb
dec
es
adc
fdivrl
sub
out
add
movsb
cmp
sub
or
in
loop
pop
aas
ljmp
loop
shr
lods
push
pop
push
subb
mov
lods
mov
repz
or
rcrb
in
sub
jecxz
cmc
into
lods
int
pop
pop
adc
inc
lds
sbb
leave
mov
dec
out
inc
icebp
push
mov
adc
scas
sbb
inc
push
jl
imul
and
fiadds
and
or
movsb
ret
sub
fistps
insl
in
inc
xchg
add
xchg
pop
inc
fcom
inc
xchg
push
cmp
nop
adc
out
ljmp
ret
xchg
mov
std
outsb
sub
mov
sub
jecxz
sub
mov
dec
lds
je
insb
xchg
xor
lcall
fstps
adc
sub
pcmpeqw
or
repnz
cmp
rcll
pop
inc
sarl
mov
mov
add
cli
test
jno
aas
fwait
nop
or
test
sar
sarb
dec
fadds
repz
fcmovbe
jns
adc
mov
gs
push
fisttps
rolb
enter
inc
fsubr
in
mov
pop
xorl
into
sub
pop
das
push
or
adc
stos
daa
enter
mov
mov
sub
int
and
mov
jo
push
pusha
scas
mov
xchg
cs
jmp
aaa
pmuludq
mov
mov
out
inc
or
lret
scas
cmovbe
sub
inc
cmp
pop
mov
push
outsb
sbb
cwtl
add
adc
mov
ret
sbb
sub
or
jmp
in
mov
jb
movsl
inc
push
inc
in
inc
into
ds
and
adc
mov
jno
cmpsb
sub
and
movsl
icebp
mov
aaa
push
adc
sub
out
add
mov
dec
or
call
stc
xor
cs
test
mov
adc
cmp
and
cli
jle
push
sub
mov
jge
gs
mulb
lahf
cmpsb
and
lea
push
cli
pop
cmp
loope
xor
mov
mov
sub
dec
sub
dec
fwait
in
rorl
fidivrs
outsl
ret
push
pop
dec
jp
inc
xchg
nop
add
pop
cmp
mov
loope
mov
cmp
push
aad
sahf
cltd
loop
popf
inc
sub
mov
and
cmp
xchg
pop
movsl
jo
jl
insb
mov
fwait
or
mov
dec
inc
mov
shl
push
jp
mov
push
xchg
mov
jno
fs
addr16
mov
int3
rolb
xchg
and
dec
mov
insb
mov
popa
addl
sbb
ds
inc
mov
mov
dec
sbb
stos
outsl
pop
inc
rcrl
outsl
adcl
cmpsb
insb
jns
into
pop
rorl
fwait
jle
dec
mov
xor
mov
dec
or
insl
mov
ret
push
addr16
mov
mov
add
incl
js
negb
or
and
inc
std
shlb
xlat
pop
cmp
push
popf
push
dec
push
adc
jle
mov
pushf
jae
pop
fcoml
cmp
jae
pop
aas
jne
add
loop
adc
repnz
sub
mov
fsubr
addr16
xor
pop
cld
mov
pavgb
sarl
xchg
filds
shl
xchg
ja
inc
pop
jmp
cmp
insl
mov
add
jp
adc
mov
cld
xchg
movsb
cmpl
addr16
loopne
lds
lds
movsb
fs
ds
adc
sub
fistps
push
daa
jle
in
sahf
test
pop
in
sub
dec
mov
lcall
lods
or
xor
cltd
loope
xor
fsubs
mov
shrb
ja
mov
mov
daa
ret
xlat
out
push
pop
fisttps
ret
inc
adc
popf
mov
fistpl
and
or
loope
movsb
jle
sbb
mov
mov
add
mov
push
mov
inc
cmpsb
pop
jbe
das
out
lds
mov
jg
cmp
sbb
test
stos
cmp
fimuls
sub
xchg
xchg
test
enter
gs
push
mov
cmpsb
ret
es
dec
cli
sub
xor
jae
out
sub
enter
add
nop
push
push
xchg
or
jno
xchg
inc
imul
jae
sub
cmc
daa
cmpsl
nop
in
loop
sbb
pop
nop
test
cltd
mov
and
es
push
push
or
ja
outsb
out
repz
into
push
or
mov
clc
call
out
add
dec
sub
shll
subl
cmp
push
sahf
mov
pushf
ja
jns
stos
scas
fldt
mov
cmp
loopne
insb
push
sbb
dec
mov
xchg
xchg
push
xor
mov
jmp
lret
pop
mulb
xchg
pop
out
dec
mov
xchg
popa
roll
jle
out
and
dec
add
fs
mov
push
test
dec
sub
in
sub
nop
push
mov
dec
jo
fwait
mov
adc
cld
ror
in
ljmp
jmp
out
scas
shrl
jg
in
mov
push
arpl
test
xchg
rclb
ja
add
mov
test
test
popf
fdivrl
test
cmp
in
idivb
jo
fdivrl
cmc
cmpsb
jl
mov
mov
mov
test
jecxz
xor
aas
lea
clc
hlt
lret
sub
fdivrs
jno
xor
jne
push
mov
pop
rcrl
imul
sbbl
mov
push
lcall
lcall
out
int
add
enter
pop
scas
rcll
arpl
fnsave
pushf
xchg
mov
addr16
adc
or
mov
mov
jbe
mov
xchg
in
and
ficoml
idivb
ret
xchg
or
test
adc
adc
cs
mov
sbb
cmpb
xor
cmp
inc
xchg
cmpsl
pop
push
sbbb
and
jle
outsl
push
pop
test
incl
sub
pop
mov
cmc
xor
mov
stos
cwtl
xchg
subb
ss
jecxz
pop
jae
lcall
sbb
jg
imul
pop
xor
fsubrs
cmpsl
pop
testl
dec
into
pop
icebp
aaa
push
dec
jl
jbe
inc
mov
jo
push
dec
or
or
out
pop
adc
mov
and
cmpl
inc
test
pushf
loop
icebp
pop
inc
cld
loope
loop
pop
cmpsl
jge
and
loop
jo
cmp
or
mov
push
fstps
mov
popf
adc
loope
hlt
out
inc
iret
out
push
pop
ret
sbb
subl
ljmp
push
inc
out
add
inc
inc
testb
mov
cmpsl
sbb
ljmp
sti
mov
mov
inc
cmp
cmp
popa
push
dec
gs
mov
dec
jl
and
xchg
mov
pop
mov
pop
xchg
mov
dec
mov
or
pushf
dec
dec
or
or
rclb
into
das
fidivl
pop
xlat
add
cld
dec
adcl
pop
jno
xchg
sahf
adc
push
mov
cmpsl
pop
sub
hlt
or
mov
popa
sub
icebp
xor
ds
jmp
xor
jge
sbb
repz
xchg
pop
sbb
add
add
xor
in
daa
movsl
aam
inc
jmp
ret
or
sbb
cld
inc
bound
fucomp
mov
into
sub
gs
loopne
push
push
aaa
scas
sahf
mov
sub
inc
adc
pop
clc
jge
inc
notl
push
pusha
mov
push
ficomps
fcmovnbe
test
dec
ficoms
or
xchg
pop
cmp
jns
mov
mov
in
mov
and
xchg
into
incb
mov
xchg
aam
pop
stc
xchg
xchg
lock
or
sbb
arpl
inc
xchg
aam
out
imul
imul
xor
mov
in
mov
subl
lret
mov
mov
jno
loopne
sub
pop
test
test
jge
inc
outsl
adc
je
stc
or
dec
xchg
in
es
imul
stos
mov
pop
addr16
stos
ret
cmp
ret
push
pop
cmc
xlat
xchg
mov
in
mov
pop
mov
in
es
ss
xor
std
je
xchg
add
test
rcrl
out
xchg
inc
mov
xchg
sub
jnp
int
push
pushf
rclb
inc
mov
xchg
lahf
loope
cmp
and
push
add
add
je
pop
stc
xchg
cmp
stos
aas
xor
mov
hlt
test
pusha
adc
xchg
test
xor
fwait
popf
adc
mov
cmpsl
inc
andb
pop
test
insb
mov
int3
or
test
dec
mov
jge
push
out
add
pop
iret
xor
stos
mov
bound
mov
adcl
jp
insl
push
mov
xchg
outsl
jge
or
xchg
cmp
cwtl
icebp
or
jl
fisubl
adc
inc
sub
popf
inc
dec
dec
fwait
cld
popa
sbb
mov
fisubrl
out
xor
in
jno
scas
mov
mov
and
je
mov
add
push
clc
cs
ret
cmpl
insb
adc
jb
mov
ja
jbe
arpl
dec
cs
sti
xchg
cld
pop
flds
sub
inc
push
je
cld
hlt
mov
dec
pop
lock
cmp
insb
sbb
xchg
mov
sbb
adc
pop
fdivrl
push
inc
dec
sbb
notb
push
mov
inc
dec
add
sbb
test
in
jno
xchg
mov
dec
into
xlat
cwtl
mov
cltd
enter
push
mov
neg
xor
stos
xchg
insl
out
xor
rorb
fwait
fwait
into
fisttpll
or
adc
insl
frstor
sbb
inc
mov
mov
jmp
arpl
cwtl
pop
in
es
sub
cld
adc
ds
pop
mov
inc
mov
xchg
cli
movsl
dec
movl
sti
adc
imul
xor
cmp
xor
fisubl
out
pop
mov
out
pop
or
inc
push
rcll
out
out
inc
xor
mov
xor
shll
cmpsl
push
cmp
fdiv
pop
test
pusha
cmp
js
rorl
and
icebp
fildll
leave
insb
mov
inc
mov
shrl
add
dec
push
mov
popf
cmc
jp
cmp
push
jnp
xor
bound
push
cmp
or
sbb
lock
sbb
das
and
push
pop
sub
sub
testl
fcmove
add
movsb
pop
pop
lock
jnp
into
inc
mov
sub
cmc
movsl
push
adc
mov
fsts
sahf
push
cmc
cmp
mov
pop
into
or
xor
lahf
sahf
vpor
push
add
sti
imul
and
in
gs
xchg
imul
mov
mov
push
inc
outsl
xor
mov
clc
movsb
or
xchg
pop
addl
sbb
ss
dec
inc
pop
jae
test
adc
ds
hlt
popa
fsubrs
xchg
rorl
xor
jecxz
mov
dec
cmp
lods
dec
cmp
and
ficomps
jno
in
lods
mov
cwtl
or
xchg
test
dec
dec
aaa
mov
js
aam
stos
or
xchg
gs
test
cmp
push
out
shrl
jp
daa
or
cmp
call
cmp
int3
dec
pop
lret
pushf
xor
push
enter
in
sub
cmp
nop
in
adc
dec
push
dec
scas
jno
mov
rep
nop
mov
ja
ss
notl
loopne
pop
sbb
xchg
repnz
jge
in
jge
push
sub
lock
popa
mov
jg
mov
inc
je
xor
sbb
xchg
test
addr16
mov
sbb
or
popf
mov
xor
hlt
sbb
leave
mov
jmp
mov
sbb
and
dec
or
jb
movsl
icebp
xchg
add
rorb
es
insl
pop
dec
pop
dec
rorb
lcall
or
leave
das
add
pop
cltd
mov
repz
pushf
leave
sub
fdivrl
xor
cltd
push
stos
pop
jns
inc
mov
dec
inc
jg
xchg
push
shlb
inc
pop
loop
mov
push
hlt
fwait
adc
test
inc
fistpl
out
das
jle
jg
mov
cs
movsb
sbb
mov
mov
aam
xchg
lahf
rol
sub
adc
sbb
into
xchg
arpl
xor
loopne
hlt
mov
sub
mov
mov
xor
add
xchg
rorl
sub
dec
fstpl
in
daa
cwtl
imul
int3
mov
aam
out
ds
sbb
addr16
test
xchg
jbe
mov
dec
aad
and
scas
xchg
cld
js
fnstenv
jg
lods
xchg
into
lods
out
lea
ret
xchg
xor
fisubl
popa
cmp
add
cli
cmc
add
mov
mov
xchg
mov
and
in
mov
ja
ds
icebp
cmp
jle
mov
cwtl
dec
cmp
movb
repnz
repnz
mov
jp
jb
nop
loope
out
and
in
mov
dec
pusha
loop
or
sbb
decl
mov
cmp
and
sbb
nop
sbb
mov
mov
loopne
jmp
mov
inc
sbb
mov
jae
stc
nop
lds
enter
fildl
xchg
xchg
fmul
orb
js
mov
cmpsl
call
cli
fstpl
lcall
aas
popl
dec
lret
xor
xchg
dec
std
call
lahf
rcrl
pushf
rcrl
mov
push
dec
push
imul
sbb
test
loope
loop
dec
lods
icebp
mov
xor
mov
cmp
dec
push
int
nop
or
xchg
pop
cmp
xchg
adc
push
pop
xchg
jg
jno
lcall
daa
js
inc
bound
or
std
mov
add
sbb
inc
dec
jnp
lea
mov
sub
jp
or
addb
out
cmp
dec
in
sub
cmp
aam
dec
push
cmp
pop
data16
movsl
repnz
imul
push
out
pop
cld
cmpsb
xlat
adc
inc
mov
ja
push
jae
or
xor
scas
sub
inc
mov
inc
outsb
loop
or
dec
jle
jp
mov
jg
cmp
pushf
call
inc
in
cmp
xchg
mov
mov
ja
inc
mov
loop
xchg
sbb
in
inc
loopne
mov
push
gs
lock
push
inc
pop
scas
mov
inc
sahf
push
xchg
pop
mov
loope
add
ss
cld
daa
ficomps
cmp
pop
adc
mov
clc
xlat
jbe
jge
pop
ret
sub
fidivrs
cld
mov
aas
lock
sahf
jmp
cmp
aam
mov
mov
fldenv
arpl
stos
mov
data16
movsl
or
xchg
inc
add
push
jo
jb
ds
enter
sub
outsl
cld
mov
shlb
mov
dec
xlat
ds
xchg
mov
dec
fcmovbe
fcmove
int3
movsb
addr16
sbb
add
arpl
inc
xorb
sub
jae
inc
cld
bound
jmp
push
adc
mov
sub
and
clc
repz
testb
lock
dec
in
push
pop
cmp
mov
arpl
sbb
or
sbb
jp
rcll
xchg
inc
adc
add
shlb
movl
js
out
mov
iret
outsb
push
mov
fbstp
sbb
jle
mov
dec
fdivl
pop
push
adcl
sbb
in
pop
rcrb
xchg
adc
xchg
xchg
je
loope
sbb
ret
xchg
sub
mov
jecxz
jns
xchg
xchg
sahf
xor
outsb
enter
cmp
xchg
inc
lcall
stos
sti
ret
mov
adcl
add
rcl
cmc
pushf
ljmp
add
icebp
fnsave
add
xchg
std
outsb
pushf
sub
icebp
fnstcw
leave
out
mov
sbb
xchg
mov
cmpl
fdivrl
mov
and
mov
dec
fsubrl
xchg
pop
sbb
test
mov
dec
hlt
pop
outsl
daa
cwtl
addr16
jle
jg
push
cltd
aas
ss
xchg
inc
mov
enter
mov
rcrb
shr
xor
sub
fidivs
mov
xor
lods
mov
sub
sub
sbb
or
mov
inc
rolb
dec
push
inc
xchg
inc
outsb
out
mov
imul
cmp
adc
cmp
pop
ljmp
xor
notl
test
movsb
addr16
ret
sub
lret
pop
test
jecxz
mov
fbld
clc
xlat
iret
mov
out
dec
outsb
push
aad
mov
xchg
push
inc
inc
in
or
sti
push
and
in
jecxz
push
pop
mov
cld
cmp
mov
sub
nop
hlt
mov
insb
rcl
clc
aam
lahf
dec
mov
push
movsb
cld
outsb
add
adc
mov
inc
sub
std
mov
mov
fucomp
arpl
shll
dec
filds
loope
lods
pop
aaa
and
cltd
mov
movsb
sar
or
in
mov
xlat
adc
in
or
jbe
add
inc
fsubrl
jmp
sbb
fs
xor
jne
sar
call
enter
push
incb
mov
cltd
adc
inc
orl
mov
mov
jmp
sub
dec
cmp
sbb
mov
xchg
push
push
imul
jo,pt
lahf
inc
int3
xchg
inc
dec
and
call
mov
out
cmp
pushf
pop
scas
xlat
jg
movsl
mov
jle
fistl
mov
adc
mov
sub
jbe
cmpsb
loop
nop
aad
ss
pop
push
hlt
js
mov
movsl
or
mov
pop
inc
test
mov
lcall
xchg
jne
scas
test
divl
sub
or
inc
add
xchg
mov
fstpt
ljmp
test
sbb
mov
lods
js
add
ds
sti
inc
rclb
or
ds
add
subb
leave
gs
inc
mov
cs
mov
xchg
inc
xchg
xor
insl
lret
daa
mov
ljmp
jae
mov
fistl
fs
movl
dec
pop
sbb
in
mov
mov
sbb
fistpl
or
ficomps
mov
lret
ds
and
jnp
je
or
pop
cmp
adc
push
fwait
mov
scas
lock
cltd
mov
scas
inc
mov
pusha
cmc
push
rcll
jp
fisubrs
out
cmp
or
fidivl
frstor
mov
adc
xlat
inc
inc
iret
push
hlt
cmp
movsb
cmpsb
sbb
pop
or
pop
mov
sub
cltd
repnz
sub
dec
sbb
sbb
in
mov
je
dec
in
in
and
call
xchg
fidivrl
sahf
test
inc
sub
adc
cli
test
sti
pop
aaa
mov
mov
and
push
inc
lea
scas
inc
pop
jno
cmp
or
mov
jmp
out
repnz
loopne
loopne
lock
mov
sti
stos
in
xor
aam
jmp
fmull
mov
in
ss
xor
les
add
or
sbb
rorb
xchg
add
out
rcl
jno
jg
xchg
sahf
inc
roll
lret
sub
mov
push
clc
scas
lea
xchg
in
jmp
mov
inc
in
loopne
movsb
cmp
dec
mov
sub
mov
sbb
dec
roll
and
lret
push
outsb
test
cs
jae
nop
call
rcll
lods
mov
fs
fstps
jge
sbb
pop
cmp
sbb
inc
cmp
pop
arpl
data16
xchg
adc
scas
and
add
sbb
icebp
sbbl
mov
lret
pop
push
lret
xchg
scas
int3
repz
pop
xorl
lods
scas
pop
inc
pop
mov
bnd
mov
xchg
dec
mov
aad
out
out
test
jl
or
add
mov
cltd
and
sub
cmpsb
shlb
xchg
cwtl
bound
cmc
pop
mov
imul
in
or
lcall
xchg
xor
push
adc
jg
mov
inc
mov
xor
mov
xor
sub
sahf
out
pop
cmp
push
rorb
adc
or
jne
insb
xchg
sbb
xor
popf
sahf
lret
ret
mov
repnz
cmc
or
sub
ljmp
xor
push
arpl
aam
das
mov
dec
jne
xchg
adc
sbb
xorb
inc
sbb
push
aaa
pop
and
adcl
sbb
inc
mov
lods
out
cmp
dec
in
nop
rcl
mov
repnz
dec
xchg
jp
out
xchg
popf
dec
popf
out
rclb
mov
pcmpgtw
push
push
test
mov
out
cwtl
jg
mov
fsts
push
pop
roll
push
int3
mov
adc
mov
sbb
imul
sti
scas
pop
adc
test
repnz
sbb
mov
pop
mov
loop
cmc
faddp
push
jecxz
adc
insl
leave
mov
test
cld
imul
cld
sbb
cwtl
in
or
in
push
cli
movsb
mov
jmp
out
add
xchg
inc
mov
bound
xchg
dec
push
sarb
mov
jae
lcall
cli
add
pop
or
add
scas
outsb
jne,pt
jne
dec
fmul
aaa
movsb
mov
xor
mov
clc
xor
scas
lods
inc
jo
popa
ret
es
lock
dec
clc
pop
sub
pop
mov
sbb
dec
sahf
pop
pusha
cmc
sub
add
mov
pusha
cmp
int
mov
inc
xchg
mov
stc
subl
dec
xor
mov
iret
mov
loop
adc
insb
mov
pop
push
repnz
xchg
add
sub
add
aas
xchg
ljmp
sbb
push
ja
outsb
mov
out
mov
xor
sahf
jns
insl
xor
scas
addl
xchg
push
adc
mov
int
fnsave
xchg
inc
fldcw
cld
lock
std
xchg
jae
lods
dec
addr16
out
mov
cmp
inc
xor
jp
nop
pop
leave
xchg
lods
cli
ja
jmp
mov
shl
adc
fstl
jno
and
dec
cmp
imul
testb
sysret
jmp
out
sbb
insl
mov
inc
popf
push
jge
xchg
or
cs
mov
mov
outsb
jg
xor
cmpsb
xchg
loop
mov
mov
rcr
mov
lea
and
data16
lock
das
call
add
dec
out
cmp
mov
jmp
mov
fwait
rcrb
jo
enter
or
xchg
dec
mov
dec
lahf
cmp
js
rclb
mov
xchg
mov
iret
xor
mov
cmpsb
mov
aad
and
cmp
int3
cld
mov
test
sbb
test
pop
out
mov
jne
dec
sti
push
and
adc
push
pushf
jbe
cmp
das
jmp
mov
or
out
dec
in
pop
mov
roll
arpl
movsb
pop
inc
mov
jb
lcall
sbb
fiadds
test
xor
enter
jmp
lds
scas
roll
and
xchg
cmp
mov
mov
in
lahf
in
fidivrl
mov
lock
push
test
ret
mov
sub
stos
jo
es
pop
jp
inc
adc
imul
arpl
dec
pop
into
fucom
xchg
cmp
mov
push
dec
adc
pushf
xor
into
in
je
cmp
rcll
xor
dec
lock
xchg
leave
imul
testl
mov
dec
or
mov
in
cmpsl
and
fldcw
xchg
bound
movsl
repz
pusha
pop
pop
mov
aam
dec
fcompl
insb
xor
xchg
cmpsl
aas
insb
hlt
cmc
inc
inc
lcall
xor
push
addr16
scas
sahf
leave
sub
fiaddl
insb
fidivl
xor
mov
ret
mov
jmp
jg
sahf
arpl
mov
push
in
sub
sbb
mov
pop
mov
mov
add
ja
mov
aam
adc
dec
iret
ret
mov
out
and
mov
mov
add
addr16
roll
nop
aas
aas
jbe
rol
mov
daa
iret
stc
mov
fs
fbld
scas
pop
or
and
inc
xlat
dec
dec
add
nop
push
fwait
es
push
cld
cwtl
out
ds
sbb
mov
sub
mov
adc
cmp
cmpsb
lea
sbb
icebp
rorl
fisubrl
lret
arpl
ljmp
cmp
jecxz
mov
cmpsl
rcll
bound
in
lahf
inc
jno
adc
inc
cltd
sbb
imul
and
pop
adc
fiaddl
and
hlt
xchg
fidivs
loope
pop
outsl
hlt
sti
inc
xchg
sub
jno
mov
vmptrld
les
xrelease
cmpsl
sbb
jmp
add
shll
xor
dec
jbe
fldt
push
dec
lods
push
subl
icebp
sub
imul
daa
cmp
mov
imul
ss
xor
cmp
and
mov
loope
pop
xchg
jb
xchg
aam
icebp
push
sahf
andl
das
add
not
mov
and
bound
bound
jnp
fists
fdivs
adc
add
movsb
xchg
xor
add
cmpl
sub
pushf
rcl
fcomip
leave
push
inc
fisttps
loopne
filds
leave
das
sub
sub
sub
jp
adc
repnz
xor
add
add
adc
adc
icebp
test
into
mov
in
ds
test
loopne
or
mov
mov
lock
aaa
sub
push
push
pusha
gs
movsl
cmp
repz
push
cli
mov
shrl
dec
xchg
test
jo
insb
ret
popa
cmp
or
fisubs
movl
insl
xor
ja
sbb
xlat
aaa
movsl
inc
pop
or
xor
idivb
xor
je
int
mov
inc
pop
jnp
bound
int
add
pop
xchg
lcall
jne
dec
out
or
push
mov
outsb
xchg
fldenv
loopne
pop
push
fcoms
push
in
or
std
std
rcr
rcrb
stos
mov
add
push
ret
int3
lock
jo
fisttps
dec
iret
push
fldl
pop
jl
fiadds
adc
jecxz
jo
jb
es
enter
add
mov
xchg
pop
jle
xchg
out
push
scas
clc
decl
cmp
mov
jne
jno
xchg
dec
inc
aad
clc
stos
or
aas
sub
pop
loopne
add
add
push
jns
xor
and
movsl
lods
sub
mov
xor
or
decl
pop
fwait
sti
bound
negb
cs
jb
ljmp
xchg
inc
lcall
adcl
daa
add
or
jbe
xchg
popa
jp
js
fstps
divps
negl
lret
push
adc
out
pop
cmp
repz
lret
dec
push
xorb
cmp
sbb
cmc
lods
mov
fsubrp
clc
in
sbb
mov
stos
add
fsubrs
jle
cmc
mov
or
mov
ljmp
loop
dec
mov
sti
or
fwait
mov
xchg
pusha
sub
imul
jae
dec
add
popa
xchg
int
das
mov
call
sbbb
fs
das
repz
mov
pop
jmp
popa
push
stos
mov
ss
data16
pop
jle
call
loop
push
insb
jnp
pop
pushf
icebp
fmuls
sub
adc
push
ds
jae
leave
mov
jmp
fistpll
adc
and
xor
pop
or
int
xchg
testl
fiaddl
scas
push
divl
dec
pop
lret
or
xchg
fsubrl
addr16
xorl
leave
adc
push
xchg
std
cwtl
daa
aam
sti
or
inc
test
xchg
enter
orb
or
pop
xchg
notl
add
fldl
rcrb
sub
into
movsb
and
jnp
or
testb
enter
adc
popa
jmp
mov
jne
adc
inc
mov
idiv
inc
sub
xor
mov
mov
inc
popf
cmpsb
mov
inc
adc
lock
dec
pop
dec
rcr
adc
mov
fwait
jp
push
sub
mov
lods
int
imul
pop
in
fs
stc
scas
je
push
inc
mov
pop
adc
dec
and
inc
inc
pusha
call
xchg
sub
mov
lahf
mov
sub
cs
mov
inc
in
mov
pop
test
pop
mov
pop
push
pop
push
stos
out
push
adc
dec
daa
loopne
sub
jecxz
jmp
sub
cli
dec
loopne
xlat
inc
fwait
mov
push
adc
pop
leave
jp
sbb
cmp
std
pushf
push
push
mov
call
shld
daa
xor
pop
into
aam
in
lock
cmp
xchg
repnz
jo
adc
fldenv
or
push
fnstenv
sarl
data16
cmp
and
mov
aas
dec
sub
jo
add
lcall
inc
mov
mov
popf
inc
jp
lock
js
daa
daa
shll
in
inc
sarl
or
arpl
jle
lods
push
sti
loopne
mov
pop
jmp
ds
pop
ja
fadds
xor
jl
sub
adc
dec
icebp
cmp
mov
daa
out
ret
pop
pop
adc
push
and
das
lock
sbb
ljmp
inc
popa
push
mov
add
ss
rcrb
loopne
jp
mov
loop
into
pop
jo
mov
out
or
popa
jmp
inc
fisubs
inc
mov
ds
add
mov
adc
pop
dec
inc
or
movsl
pop
xlat
sahf
outsl
clc
sbb
pushf
sub
adc
lods
call
push
loope
mov
loop
push
outsb
fnstsw
idiv
jae
daa
fmul
insl
pop
cmpsl
xor
mov
clc
test
pusha
fnstcw
sub
jbe
jle
xor
mov
fdiv
test
push
xchg
les
xchg
mov
mov
sahf
dec
int
mov
jbe
sub
aam
inc
pop
mov
jg
adc
add
cli
mov
cmp
fisttpll
shl
jp
stc
xor
inc
pop
lea
xlat
ljmp
jb
ljmp
cli
fwait
out
lahf
ret
scas
xchg
out
push
push
out
popf
pop
lahf
mov
push
out
sbb
mov
loop
das
pop
jge
data16
dec
inc
shlb
addb
mov
test
enter
mov
out
pop
cmpsl
xor
mov
and
rcll
or
ljmp
scas
xchg
addr16
loope
sar
add
lahf
test
lods
xchg
mov
clc
scas
testb
xchg
mov
hlt
les
mov
fdivrl
jmp
loop
mov
adc
hlt
dec
mov
frstor
lahf
xchg
test
and
jecxz
mov
nop
and
sbb
testb
sub
clc
mov
in
in
and
mov
das
mov
jmp
pushf
and
cs
or
scas
fnstsw
sub
lret
push
jae
out
je
push
push
push
ret
rcrb
lods
out
mov
or
inc
shlb
push
shll
pop
test
ds
imull
xor
xor
arpl
stos
add
ret
ror
jecxz
repz
test
jg
mov
mov
fistpl
jno
xchg
mov
sub
test
sub
add
mov
repz
xchg
push
xchg
mov
mov
mov
adc
inc
dec
jge
sbb
pushf
cs
int3
fdivs
paddsw
add
cmp
loope
push
pusha
xchg
xor
icebp
push
push
inc
jecxz
jle
jo
orb
cli
add
loop
sub
lcall
adc
int3
sbb
fs
dec
ret
test
adc
icebp
insb
mov
stos
cmp
mov
push
in
jno
into
out
or
adc
cltd
out
arpl
in
sub
gs
es
out
daa
mov
repz
mov
int
lea
jp
mov
fmull
mov
jno
add
adc
and
xchg
pushf
mov
call
ret
inc
mov
inc
and
fucomp
cmp
shlb
add
imul
cmc
cltd
push
cmp
inc
mov
jle
lcall
ds
jae
ret
shll
and
icebp
rolb
pop
shll
dec
adc
mov
cmp
or
cmp
xchg
lea
fwait
mov
mov
and
lods
mov
or
mov
pop
shrb
sub
push
into
push
imul
loop
adc
jle
fistpl
repz
xchg
fcmove
out
loope
mov
add
mov
aaa
pop
fcoms
or
mov
jbe
adc
test
insl
out
push
mov
sbb
xor
pop
jle
adc
ret
nop
les
xor
out
adc
rol
cwtl
xchg
not
in
cli
inc
jbe
lods
or
mov
repnz
ret
out
dec
aam
bound
cmp
scas
xor
je
addl
add
testb
dec
xchg
les
push
pop
pop
cmp
outsb
mov
sbb
mov
push
jmp
jp
xchg
cmp
sub
outsb
std
int3
int
jns
or
loope
sub
dec
je
add
out
fisubs
pop
cs
push
cmpb
das
pop
jnp
int
das
out
mov
out
neg
cmpsb
jl
shl
add
jmp
mov
mov
cld
pop
cmpsb
cli
into
movsl
aad
jnp
into
int
add
cld
ret
ss
fnstsw
sub
jmp
sbb
sbb
jno
cltd
rcrb
cmp
push
movsl
es
inc
mov
inc
roll
sbb
xor
inc
inc
sub
pop
arpl
sub
jp
or
ja
lret
adc
inc
inc
xlat
xor
aaa
xchg
stos
leave
and
imull
lea
dec
push
outsl
lds
cltd
jg
sbb
xchg
stc
jo
lods
ja
or
scas
nop
sub
negl
mov
inc
or
je
sbb
add
sbb
mov
xchg
jl
lods
cmp
push
mov
mov
fldcw
cmp
shrb
divl
ret
inc
gs
sub
cmpsl
pop
mov
mov
inc
jmp
inc
mov
push
cli
sub
fs
push
push
mov
cmp
insb
xchg
jl
add
repnz
clc
cmpsl
mov
pop
sub
cmpsb
push
out
sbb
or
pushf
les
or
popf
push
ss
push
hlt
push
xor
sbb
xor
and
stc
fmul
add
mov
enter
lea
xchg
xor
cmp
jmp
dec
daa
jg
jmp
jge
data16
jl
arpl
cmp
sbb
or
sbb
arpl
cmc
or
jbe
insb
jne
insl
sub
or
js
jle
in
mov
ret
mov
cmp
dec
push
and
inc
inc
call
adc
xchg
in
mov
jl
leave
add
add
jmp
lret
wrmsr
in
mov
xchg
popa
jge
inc
pop
adc
nop
leave
xchg
leave
xchg
mov
mov
cli
xchg
add
js
pop
jo
adc
lods
enter
pop
jle
mov
mov
mov
dec
xchg
cltd
out
sub
inc
xor
mov
inc
mov
mov
push
dec
rcll
adc
or
xchg
lret
push
or
pop
adc
push
jg
lret
movsb
and
fsubr
push
sbb
mov
sub
test
pop
and
pop
cmpsl
pop
fincstp
lea
xor
das
push
sbb
cltd
mov
push
jle
jmp
push
sub
scas
mov
int
sahf
adc
mov
xor
repz
mov
into
roll
ljmp
add
rorl
std
test
push
jne
and
pop
jmp
push
es
pop
fdivr
add
mov
ds
xor
mov
idiv
dec
std
shlb
adc
adc
into
leave
jg
hlt
adc
insb
lock
nop
scas
ret
clc
leave
add
or
mov
pop
cld
stos
mov
in
outsb
cmc
into
sub
dec
xor
fsts
in
cli
inc
ja
loopne
les
addr16
lock
cmp
xchg
ficoms
jmp
pop
cmpsl
add
or
call
sbbb
mov
gs
push
push
xchg
push
mov
je
insb
cli
fs
mov
xchg
sbb
testb
pop
hlt
rcr
sub
sub
xchg
push
dec
mov
mov
lahf
mov
mov
in
cmp
dec
mov
hlt
cmp
aaa
inc
push
in
sbb
mov
fcomi
icebp
mov
adc
pop
pushf
pop
leave
mov
adc
imul
push
adc
bound
lret
loope
mov
pusha
mov
hlt
icebp
clc
add
filds
xor
in
dec
ljmp
insl
mov
sbb
ljmp
inc
imul
fisubl
test
push
out
stos
adc
inc
jp
mov
xchg
rolb
jns
cmpsl
notb
aad
ss
xchg
cwtl
out
test
outsb
inc
xor
add
cmpsb
xlat
and
sbb
sarl
int
mov
pop
xchg
push
jp
leave
lret
xchg
sub
add
and
or
mov
fisttpll
adc
pop
cwtl
xchg
test
xchg
aam
dec
dec
push
xchg
sbb
lock
jns
xor
inc
mov
mov
sub
test
dec
leave
pop
hlt
andl
mov
pop
mov
dec
lods
pop
testl
pop
xchg
lea
lods
inc
xchg
popf
lea
push
loop
xlat
or
hlt
lock
inc
pop
mov
cmp
test
stos
test
orps
or
sahf
adc
or
sub
mov
out
cmp
mov
subb
mov
push
jmp
cltd
mov
aad
js
bound
in
jns
xchg
mov
jecxz
inc
or
add
mov
aad
lret
and
jne
dec
xchg
lods
pop
mov
adc
and
xchg
lret
dec
stos
shrb
cmp
cli
shr
fisubl
cwtl
cmp
push
push
in
insb
movsb
mov
mov
out
sbb
sbb
xlat
and
mov
mov
ljmp
push
mov
adc
loop
lods
daa
mov
inc
push
frstpm(287
stos
xchg
das
jo
pop
icebp
negl
adc
inc
ljmp
mov
push
jge
sbb
mov
ret
sub
loopne
arpl
mov
cmp
add
and
gs
push
data16
add
arpl
ds
in
push
mov
add
out
mov
or
inc
test
enter
add
lcall
loope
lahf
in
dec
repnz
jecxz
mov
pop
push
adc
in
inc
sbb
shrb
mov
push
mov
stos
in
sub
jnp
xor
inc
mov
and
ret
dec
insl
aas
adc
shrl
xchg
xor
jg
hlt
add
inc
pop
jno
sub
fistps
sbb
push
mov
lcall
cli
fcoml
into
mov
jbe
xor
test
addr16
popa
push
ljmp
dec
mov
xchg
or
or
jnp
cmc
xchg
inc
or
int3
popa
sub
dec
xlat
cmp
or
add
scas
mov
dec
aad
sti
arpl
adc
lods
or
movb
push
popf
or
jle
and
jmp
fcmovnb
and
adc
lahf
push
sub
stos
fiadds
cmp
loopne
lret
int
dec
out
lods
mov
fldl
das
sub
cmp
mov
add
dec
cmpsl
jmp
stc
lds
pop
mull
pop
inc
adc
fucom
cmpsl
dec
sbbb
ret
in
ret
aas
pop
into
lret
xchg
lods
ja
popf
arpl
xor
dec
stc
xchg
mov
xchg
push
out
jp
movsb
aaa
repz
push
testb
cmp
test
aam
iret
cmpsl
dec
add
jne
mov
jo,pt
cmp
mov
fwait
push
jnp
rorl
cmp
in
imul
fcomps
in
vzeroall
mov
pusha
call
stc
movsb
scas
sbb
mov
test
rolb
scas
hlt
xor
lock
xchg
cmp
adc
xor
inc
test
bound
adc
loope
or
addr16
sub
test
loopne
jae
cmp
xchg
in
and
inc
inc
pusha
or
lahf
mov
aaa
pop
inc
inc
inc
sub
cltd
and
lods
cmp
xor
shll
add
push
imul
lods
add
mov
xor
lret
in
lods
inc
lahf
popa
jecxz
mov
sbb
jno
jmp
push
push
stc
stos
jb
jne
jge
dec
cwtl
es
insb
fcoml
xchg
jmp
cmp
and
ljmp
sbb
or
shlb
ret
outsb
mov
test
dec
jp
mov
inc
mov
jge
inc
mov
mov
insb
inc
sbb
cltd
aam
xor
add
ljmp
mov
pop
in
and
or
mov
pop
pushf
pop
aad
fwait
and
cmova
and
dec
pop
addr16
sub
aaa
aaa
cmp
mov
push
lods
mov
sbb
jne
sbb
iret
outsl
icebp
sbb
xor
das
sub
jp
iret
aaa
inc
popf
sub
xchg
pusha
sub
dec
ret
mov
mov
movsl
xlat
dec
cmp
loop
jno
in
loop
cld
lds
push
mov
xchg
mov
int
xchg
mov
push
inc
pop
or
mov
cmp
cmp
xorb
or
mov
adc
movsl
fnsave
push
sub
stos
pop
xchg
push
and
pop
outsb
fisttpl
xlat
jne
out
pushf
push
fcmovnbe
xchg
and
loopne
cli
roll
jl
dec
jbe
xchg
xor
xor
or
mov
test
xchg
push
int
lods
inc
rolb
cmc
add
jo
fsubrs
dec
std
test
call
and
push
inc
jecxz
rcrl
ficoms
push
fdiv
arpl
outsl
or
fisubs
mov
aam
aad
xor
cmp
push
icebp
cltd
jl
mov
dec
cmp
xchg
test
rol
jns
xor
push
orb
sbb
subl
jo
mov
sub
sbb
or
nop
pop
or
test
fscale
repz
mov
xlat
mov
roll
or
outsl
mov
dec
jp
in
movsb
pop
es
and
cmp
or
into
inc
movsl
sub
mov
jle
popf
jo
jne
xor
imul
sub
call
test
inc
cmp
test
imul
es
adc
in
and
add
adc
push
jo
pop
stos
shll
xor
pop
ljmp
push
in
mov
cmpsl
out
in
stc
std
aad
mov
jae
and
int
jne
adc
mov
jns
lea
dec
xor
jae
je
sub
mov
mov
ds
insl
push
insb
or
add
xor
cmp
test
testb
maskmovq
divl
popa
or
dec
cltd
movd
fisubrs
sbb
push
jnp
dec
aaa
cmp
sub
xlat
or
scas
mov
push
enter
push
mov
rcll
push
inc
or
jge
out
mov
flds
sahf
outsl
iret
lcall
add
iret
rcll
pop
cmp
enter
pop
jne
int3
cwtl
leave
mov
fwait
adc
sub
das
out
mov
fwait
jnp
aas
in
dec
xchg
scas
push
daa
pop
or
xchg
dec
rcrb
sub
push
sbb
imul
jp
sbb
test
scas
sbb
and
jp
cmp
bound
cmp
and
push
stos
stc
fistps
movsl
test
lcall
or
cmpsb
hlt
inc
cmp
imul
cltd
sbbb
mov
inc
xor
xor
loope
push
mov
in
fnstenv
cmp
rolb
mov
or
test
adc
and
and
inc
nop
sbb
cmp
pop
roll
adcl
clc
jo
loop
jae
adc
mov
lahf
xorl
adc
aaa
cmp
into
or
lret
imul
mov
mov
loop
xchg
lahf
in
test
out
mov
in
insb
mov
and
lcall
cs
sbb
out
pop
add
jo
push
pop
ret
pop
adc
sbb
out
push
faddl
das
add
les
int3
and
es
ret
jne
add
xlat
popa
loope
ss
cmp
cmp
dec
mov
xlat
lds
pop
mov
xchg
add
fldl
mov
mov
xchg
or
mov
loopne
cmpsl
push
jno
mov
jne
lahf
mov
leave
shlb
inc
shr
dec
mov
lods
lock
cli
add
mov
fbstp
fs
aam
inc
fists
enter
int
sub
jle
rclb
test
popf
mov
pushf
jecxz
add
adc
jge
mov
mov
add
aam
xchg
mov
jmp
mov
inc
addb
mov
in
data16
loope
stos
repz
mov
daa
fstl
dec
dec
add
adc
or
shlb
das
out
mov
inc
cli
ds
std
mov
adc
xchg
xor
mov
shll
ret
mov
int3
cmp
push
add
pop
cmp
es
xlat
int
dec
mov
in
imul
repz
xor
add
or
shrl
push
and
imul
sbb
fldenv
je
inc
adc
insl
jmp
jmp
or
testb
ret
push
dec
repnz
das
shrb
lds
inc
inc
xchg
sub
lcall
loope
daa
xor
jb
mov
jo
iret
imul
jno
mov
cs
rcrb
jg
push
mov
xor
fimuls
les
pcmpgtd
shlb
sub
pop
xchg
popf
inc
insl
mov
outsb
dec
lahf
xchg
mov
mov
cs
lret
in
adc
inc
cmp
mov
mov
in
shl
int3
cwtl
imul
inc
shr
fisubrl
lock
ret
cmc
enter
sbb
movsl
aaa
mov
mov
xchg
sub
xchg
dec
xchg
and
pusha
ficoms
mov
mov
xchg
in
cmp
xor
inc
in
push
adc
cwtl
ljmp
sub
sub
or
push
jne
or
cmpsb
mov
gs
sbb
fisttpl
mov
hlt
sub
jns
xor
sbb
mov
std
lret
out
repz
push
xchg
mov
cmp
push
push
mov
insl
mov
adc
fstpl
push
xor
outsb
mov
shlb
dec
lods
push
inc
dec
icebp
fcomps
cmp
mov
lock
insl
push
and
stos
cltd
or
mov
jge
sub
fld
xor
cltd
stc
or
or
lcall
imulb
and
jne
add
insl
mov
adcl
or
pop
inc
movsb
ss
test
stos
jbe
push
fstl
dec
movsb
mov
insl
and
xchg
fists
es
jle
aam
sbb
lahf
jge
add
pusha
jp
jmp
add
cmp
test
push
add
pop
scas
push
es
or
popa
mov
dec
int
mov
inc
cld
lea
into
xchg
mov
mov
jecxz
sbb
and
ja
jbe
pop
cmp
filds
negl
push
nop
adc
mov
data16
rcll
pop
sti
ds
stos
loop
push
xchg
cli
divb
fstl
jne
xchg
fwait
sbb
inc
jecxz
jg
sub
lret
inc
push
xor
dec
int
aam
mov
xor
int
bound
loope
adc
mov
dec
scas
nop
xor
test
ja
pop
mov
cmp
fistps
loope
mov
mov
stos
aad
in
jmp
loope,pn
sti
dec
outsl
and
insl
fwait
dec
or
push
pop
gs
rorb
in
fistpl
popa
push
ss
inc
pop
popa
or
loopne
pushf
cmpsb
mov
rcl
and
push
cltd
mov
inc
adc
cmp
cmpsl
mov
cmp
push
xor
cltd
cmp
or
push
mov
mov
pop
mov
sahf
inc
and
pop
sbb
fisttpll
add
inc
scas
das
pop
add
call
out
mov
scas
mov
aaa
decb
les
dec
dec
scas
in
push
cmp
xchg
adc
insb
add
out
jp
stos
loope
ja
inc
xchg
and
xchg
popf
test
mov
insb
rcl
inc
divl
push
and
mov
dec
cmpsl
enter
pop
inc
pop
repz
dec
mov
mov
jno
insb
jns
popf
or
addl
add
push
pop
mov
jbe,pn
push
jnp
mov
or
pop
and
adc
arpl
lods
cli
pop
pop
mov
mov
cld
std
add
jecxz
mov
addl
push
fcomi
movsb
es
push
mov
jmp
cmp
in
sub
shl
rcrb
xor
add
cwtl
test
add
std
int
add
sti
jmp
jecxz
les
xor
or
lods
testb
cs
std
pop
bound
xlat
xor
mov
or
fisttpll
scas
push
or
stos
lods
mov
sbb
lahf
nop
int3
shr
jne
mov
lods
test
js
das
add
nop
xor
jmp
sub
add
push
jbe
adc
out
push
push
mov
pop
adcb
lods
or
lods
pop
xor
and
cmp
stos
orb
xchg
pop
loop
imul
lds
pop
dec
inc
mov
cmp
pop
xchg
test
fidivl
adc
aaa
pop
repz
push
jo
dec
mov
dec
mov
pop
pop
xchg
loopne
sarl
xchg
xchg
mov
in
dec
dec
mov
repz
lds
dec
and
call
aam
fst
inc
mov
sbb
adc
sbb
push
jl
ljmp
pop
add
pmaxsw
sbb
jbe
testb
outsl
lret
cmp
mov
pop
push
inc
add
cltd
lret
popf
push
in
subl
scas
add
orl
jmp
insl
adc
cmpsb
mov
sub
sar
cltd
leave
pop
add
nop
ftst
daa
fnsave
out
xchg
aam
aaa
dec
cmp
ficompl
in
notl
enter
or
sub
xchg
sub
lods
mov
icebp
scas
or
dec
and
fwait
push
mov
lock
cmp
imul
push
fisttps
pop
mov
lcall
into
pop
and
out
mov
jno
arpl
fwait
mov
push
loopne
jne
dec
mov
sahf
outsl
fcompl
ja
xchg
popf
test
and
xchg
sbb
aad
lret
push
xchg
test
add
push
jl
shrb
dec
dec
xor
imull
sti
aaa
in
cmc
mov
inc
sub
xor
sti
sbb
xor
add
mov
xlat
daa
dec
push
and
sahf
inc
test
or
xchg
fsts
sub
in
sub
and
out
mov
es
addr16
cli
ja
dec
mov
faddp
enter
jmp
lds
pop
test
sarb
or
inc
and
dec
add
out
inc
cld
pop
repz
mov
xor
imul
sub
add
push
in
jle
fidivrs
jge
stos
aad
mov
sti
test
jecxz
addb
cmc
lcall
inc
in
pop
js
fdivr
roll
sub
dec
cmp
inc
pop
in
rclb
or
mov
popa
add
mov
andb
sub
inc
push
xchg
and
xor
push
dec
imul
jbe
mov
dec
shrb
dec
stc
aam
inc
jno
int3
jge
negb
inc
jp
rclb
lock
push
pop
jecxz
sub
scas
sti
push
xor
in
xchg
movsb
fsubs
cltd
mov
dec
aas
push
pusha
sarl
or
pop
dec
fisubrl
push
jl
push
xor
pop
nop
shll
pop
in
pop
cli
aad
pop
inc
pop
dec
std
push
inc
int3
out
push
dec
jp
test
push
mov
fbstp
in
dec
in
clc
std
imul
adc
cmpsl
adc
push
cmp
ficompl
jo
data16
leave
mov
dec
int3
dec
daa
xchg
test
mov
dec
xor
inc
and
icebp
lods
stos
ja
dec
repnz
inc
aad
fistpll
inc
ss
xor
xchg
jle
sbb
shl
std
add
adc
mov
pop
inc
call
lods
pop
dec
test
shlb
icebp
pop
loopne
adc
jg
and
xor
sub
or
push
movsb
inc
jbe
xor
or
mov
stos
lods
negl
lock
pusha
mov
and
stos
icebp
mov
sbbl
scas
es
mov
loopne
out
cmc
mov
mov
movsb
and
mov
nop
ss
lock
mov
ret
out
jnp
cmp
mov
bound
sub
ja
add
adc
jns
stos
js
mov
hlt
std
adc
xchg
push
in
mov
int
xor
lock
cmp
inc
pushf
std
lods
mov
testl
stc
dec
stos
addr16
mov
xchg
adc
aam
fsubrs
lahf
mov
daa
cmp
mov
sub
xchg
sbb
add
in
in
and
insb
or
dec
mov
xchg
xchg
pop
adc
icebp
lods
sti
mull
mov
shll
mov
lcall
pop
sub
rorl
dec
subl
and
loope
outsb
push
int
sbb
test
jb
aaa
bound
or
scas
insl
sub
popa
test
inc
insb
jb
or
add
aas
out
addr16
repz
sar
xchg
sti
repz
dec
ds
xchg
push
shl
or
cmp
mov
cltd
dec
cmc
js
xchg
rclb
gs
sub
mov
pop
mov
inc
popf
sbb
mov
cmpsl
sub
dec
int
xor
mov
and
xlat
int
sub
add
nop
fidivrs
xorb
inc
push
pusha
push
pop
add
mov
or
data16
mov
loope
xchg
es
xchg
inc
cmpsl
or
adc
inc
and
xchg
xor
adc
subl
xor
cwtl
nop
hlt
sbb
insl
pop
pop
sub
push
hlt
mov
xchg
dec
lods
push
or
stos
lret
into
pop
sbb
pop
std
cltd
xor
sbb
rcll
inc
pop
popa
out
roll
lock
mov
mov
sbb
rorb
push
dec
loope
scas
fs
cwtl
pusha
mov
xchg
add
jp
lahf
lea
jg
sbb
pop
mov
sti
jne
into
imulb
jl
es
shrl
mov
and
or
pop
in
cmp
push
inc
out
dec
and
jns
aaa
jge
fwait
aad
ss
xchg
fnstsw
xlat
cmpsb
pop
mov
dec
jbe
xchg
ficoms
mov
lahf
pop
iret
ss
sub
mov
mov
push
jmp
mov
and
jp
lahf
add
pop
mov
inc
xchg
cmp
hlt
jl
ds
inc
xor
xchg
stos
mov
into
dec
scas
test
sbb
jb
cmp
xchg
adc
mov
les
divl
imul
push
mov
std
rolb
push
sbb
inc
dec
cmpsl
or
jno
orl
xchg
xlat
lods
jge
je
adc
push
repnz
sub
pop
mov
xchg
sub
pop
clc
push
push
movl
or
movsb
xor
mov
push
jg
mov
jp
and
daa
or
mov
idivl
jg
aam
cmpsl
rdtsc
call
inc
int3
adcl
dec
xlat
mov
in
orb
or
insl
rcr
xlat
pop
popf
push
loopne
cmc
inc
xchg
out
popf
mov
bound
cmp
ret
jne
cmpsl
and
ret
arpl
shlb
ret
mov
push
into
clc
sub
push
push
or
hlt
repz
int3
jb
movsb
adc
ret
and
repnz
cmpsl
loope
jne
sti
sub
mov
fs
ja
cmp
imul
bound
loop
leave
cli
mov
insb
xlat
pop
pusha
rcrb
cmp
out
rorb
outsb
mov
dec
mov
jne
out
adc
xchg
popf
mov
sub
ror
xor
xchg
sbb
or
mov
sbb
mov
xor
sub
fists
mov
xchg
cli
xchg
lock
in
int3
mov
testb
push
push
jmp
xchg
cltd
inc
pop
mov
jmp
mov
mov
pop
push
or
lahf
scas
test
out
sbb
push
aaa
fucom
int3
into
out
push
sbb
and
push
jl
xchg
lods
pop
faddp
in
repnz
xor
xchg
mov
sbb
jmp
pushf
add
lret
lods
pop
rcrl
xchg
sti
sub
mov
push
out
fldt
enter
imulb
test
cmp
fnstcw
movsl
xor
xor
pushf
sahf
cli
addr16
adc
popa
adc
out
and
mov
addr16
add
mov
sbb
add
xchg
pop
mov
adc
xchg
pop
fisttpll
shld
push
xor
mov
aam
outsl
orl
idivl
inc
adcl
dec
insl
push
nop
int3
pop
frstor
rcll
fistl
dec
add
jg
popf
sbb
xchg
cmp
mov
popf
dec
pop
hlt
mov
sub
cmp
dec
dec
mov
cwtl
cmp
and
stc
ja
inc
pandn
xlat
es
pop
mov
mov
sbb
aad
mov
cld
data16
stos
xor
fcmovbe
xor
mov
push
cmp
jmp
mov
sbb
or
adc
jno
sti
repnz
push
icebp
and
pop
or
scas
cmp
cld
flds
or
out
out
mov
fisubrl
adc
or
mov
dec
outsb
dec
daa
cmp
aad
push
cmp
das
arpl
adc
xor
mov
int3
or
fnstcw
or
fstpl
jno
std
pop
pop
fwait
shr
xchg
aam
mov
xor
xorl
pop
add
cmp
jne
fucomi
jbe
sub
cmp
sbb
xor
sbb
sbb
addb
repnz
jo
ljmp
test
push
mov
push
push
sbb
stos
loop
lcall
int
icebp
add
push
dec
or
in
cmp
stc
into
push
push
sarl
out
add
push
cmpsb
fidivrs
test
push
sbb
mov
mov
jge
cmpsb
scas
ffreep
jbe
push
jne
int3
jmp
insb
hlt
xlat
stc
xlat
insb
cli
mov
sbb
sarl
fldenv
xchg
pop
and
inc
ret
test
arpl
stos
std
mov
add
call
pop
pop
outsb
in
push
pop
mov
xchg
data16
pop
jne
loope
inc
loop
andb
test
pop
cmp
aam
cwtl
sub
pushf
push
jno
jb
leave
fnsave
movsl
cmp
outsb
gs
aaa
xchg
cmpsb
shrb
mov
movsb
sub
adc
in
jb
std
repnz
cmp
out
sbb
jo
mull
dec
inc
sbb
and
pop
sub
jb
mov
test
lods
add
or
out
cmpsb
fcmovbe
dec
orl
and
jns
push
in
cmp
sub
imul
jg
lock
or
fwait
inc
add
jge
pop
push
loope
arpl
adc
lods
pusha
xchg
movsl
add
insl
stc
adc
js
outsb
pop
ds
dec
repnz
pop
leave
mov
daa
push
mov
sbb
xchg
cli
pop
in
dec
scas
pop
push
out
repnz
add
mov
in
xchg
inc
cld
mov
call
cmp
jno
movsl
btc
loopne
cwtl
lods
cwtl
aaa
inc
push
cmp
xor
push
mov
lahf
or
sub
sbb
inc
or
jmp
call
xor
call
pop
push
push
adc
outsl
sub
jmp
rcrb
or
insl
jbe
out
xchg
jns
jl
das
inc
add
xchg
jae
push
push
movsl
inc
lods
in
ja
fisubrl
mov
iret
adc
add
inc
dec
jl
xor
lds
push
cmpb
or
or
jno
jbe
movsl
es
addr16
out
pop
call
push
outsl
nop
adc
xchg
clc
push
mov
xchg
arpl
popa
push
xchg
pop
mov
sbb
lea
fistpl
sahf
or
push
pusha
lret
popf
or
mov
andl
mov
out
in
pop
rolb
lods
pop
ret
sub
jl
cmp
lods
mov
xchg
scas
mov
xor
mov
inc
jle
jl
mov
je
in
push
fiadds
pop
psubq
mov
ret
sbb
or
ror
add
mov
lahf
stos
push
pop
adc
mov
sub
je
mov
hlt
je
push
bound
int3
jo
or
sbb
jno
inc
sub
mov
mov
rcll
jl
push
jecxz
int3
xor
mov
testl
xor
aam
scas
ljmp
addl
and
sbb
inc
rclb
xor
sub
push
jecxz
sbb
xchg
cs
mov
sub
xchg
imulb
ja
xchg
adc
pop
pusha
mov
jo
add
fs
mov
dec
or
adc
xchg
fcompl
lahf
testl
sahf
arpl
imul
js
mov
bnd
incl
pop
or
movsl
fxtract
sahf
adc
stos
js
jno
sbb
pop
mov
lds
rcll
xor
adc
fildll
cltd
mov
push
adc
shr
xor
daa
rcrb
ret
and
dec
lahf
inc
testl
xlat
in
jne
sbb
insl
add
mov
dec
in
mov
xor
adc
add
xchg
sbb
mov
sbb
and
in
fwait
dec
addl
cmp
sbb
jo
jnp
and
add
pop
fsubp
pop
mov
jp
push
movsl
fwait
iret
js
cmp
ljmp
mov
pop
roll
pusha
sbb
lret
jne
jge
loop
sbb
xchg
or
jo
push
push
pop
clc
mov
sahf
je
xchg
cltd
mov
cltd
xchg
ret
sbb
insl
out
les
push
sbb
and
pop
inc
pop
loope
arpl
xor
mov
add
addl
mov
cld
pushf
clc
pop
and
stc
dec
outsl
add
ffree
cmp
sub
ja
inc
outsb
add
adc
int3
adc
popl
and
outsb
stc
cmp
push
mov
xchg
adc
add
xchg
pop
int3
out
xchg
jg
into
adc
repnz
push
mov
out
mov
mov
pop
hlt
jg
cld
sbb
pop
dec
adc
dec
and
lods
and
dec
stos
jns
inc
jae
sub
mov
stos
xlat
inc
lods
aam
mov
in
hlt
imul
dec
pop
xchg
mov
mov
lret
jnp
cmp
inc
pop
xchg
out
je
add
out
mov
xor
data16
xor
icebp
jae
push
imul
pusha
mov
loopne
lods
lea
fwait
stos
cs
repnz
push
xor
sub
rorl
lds
notb
insb
into
fisttps
add
and
push
out
cmp
in
scas
dec
pop
sbb
sub
push
bound
mov
repnz
bound
movb
or
xor
cwtl
or
xor
sbb
rclb
push
sub
in
out
cmp
mov
mov
mull
addr16
and
cmc
pushf
inc
or
paddb
add
jmp
xchg
cmp
or
xchg
push
inc
or
popa
cmpsl
xor
je
loop
pop
test
push
enter
andl
dec
mov
or
fists
jns
mov
mov
int
sub
ds
pop
pop
xor
pop
adc
push
fdiv
std
jo
dec
inc
lret
daa
clc
es
push
sbb
fimuls
pop
push
in
sub
sbb
jmp
lods
je
lcall
iret
repz
jb
pusha
and
xor
mov
movsb
popa
fstpl
xchg
add
fs
rcrl
fistl
push
add
rcrl
bnd
mov
cmpb
scas
into
pushf
mov
push
pop
cmp
roll
es
bound
cmp
lock
js
jae
dec
push
xchg
adc
mov
adc
cs
and
mov
inc
sbb
mov
cmp
or
jbe
lcall
dec
out
sbb
dec
dec
inc
daa
leave
xor
mov
sub
imul
test
aaa
inc
mov
ljmp
sub
xor
add
mov
xchg
sbb
fsubl
clc
loop
inc
cmc
lds
test
scas
mov
fidivs
out
add
in
xor
or
cmpsb
sahf
mov
int
or
fidivl
cmpsl
jecxz
dec
sti
dec
and
gs
mov
adc
mov
cwtl
push
hlt
je
push
mov
ds
rorb
cld
ds
push
lods
adc
dec
push
addb
push
scas
outsb
fsubs
pop
inc
mov
stos
fnsave
sub
mov
pop
jo
cmp
jno
int3
and
pop
mov
add
xchg
mov
pop
or
push
inc
dec
insl
mov
pop
jp
or
in
xor
int3
and
cmpsl
pop
and
push
pop
js
or
mov
or
mov
jmp
jmp
mov
push
jl
cmpsl
push
incl
adc
insb
mov
dec
fsub
nop
out
call
js
scas
js
adc
ja
jmp
pop
out
leave
jge
inc
popl
push
out
dec
in
push
dec
or
mul
jge
mov
outsl
cs
out
aas
xor
inc
adc
cmpsb
jle
scas
pop
push
pop
or
ja
jae
add
or
or
jge
dec
cli
xor
enter
or
fsub
jge
lret
sub
cltd
arpl
mov
push
jnp
sbb
jmp
cmp
mov
leave
pushf
push
mov
movsl
jge
sarl
add
jecxz
sub
loopne
mov
or
add
and
ds
lret
dec
int
outsl
movsb
nop
fdivl
pop
fsts
ja
fnstcw
outsl
dec
xorb
sub
or
dec
je
popf
dec
shlb
pop
dec
jmp
dec
jae
loopne
ja
mov
ljmp
mov
mov
or
pop
pop
test
rcll
mov
sbb
mov
mov
dec
inc
daa
gs
xor
repz
jmp
fiadds
push
imul
mov
sub
jmp
sbb
push
mov
adc
cmp
test
fs
xchg
cltd
arpl
jns
pushf
fildl
add
mov
fsts
insl
mov
ret
pop
dec
test
push
outsl
lds
push
ds
lock
out
inc
mov
ds
jb
rcrb
shlb
movsb
cwtl
out
leave
mov
shrl
adc
fistps
push
das
jnp
pop
loope
sbb
cmp
mov
test
dec
notb
mov
or
xchg
jno
rcrb
push
mov
push
es
adc
addl
cwtl
in
and
loopne
aad
insb
fdivrl
mov
and
clc
xchg
test
addr16
ljmp
mov
push
leave
adc
push
mov
mov
in
lret
sar
daa
in
shrb
call
adc
add
push
or
loope
into
fs
mov
jle
pop
mov
pop
sub
add
dec
cmp
mov
pusha
sbb
leave
repz
and
mov
rcrb
int
or
int3
dec
cli
scas
imul
mov
or
popf
cmpb
cmp
ror
fisubrl
test
cmp
sub
and
sbb
push
fdivr
inc
dec
lcall
sbb
iret
cltd
or
push
push
in
fucomi
movsb
test
insl
adc
cmp
loopne
sbb
notb
arpl
push
mov
sarb
pop
lods
dec
daa
bound
sbb
xchg
dec
cmp
dec
push
and
jp
hlt
or
notb
push
sub
movq
jne
out
lea
xchg
subl
add
mov
sbb
mov
movsb
cmc
add
xchg
jnp
sub
repnz
add
pop
ret
cmc
cld
dec
pop
sbb
add
jp
mov
hlt
inc
cmp
imul
repz
adc
out
loope
dec
add
jns
in
nop
lods
ja
xor
std
push
mov
pop
fistpl
jecxz
das
fcoml
notl
dec
pop
int
mov
or
push
sbb
xchg
add
jl
jnp
or
sarb
sub
add
jb
adc
cmp
inc
imul
dec
insl
lret
out
cmp
xlat
or
outsb
shll
fmuls
nop
cld
daa
das
outsb
adcb
ds
aad
lock
inc
bound
dec
cmc
aaa
jge
cmp
fstl
dec
stos
pop
xor
das
imull
in
in
into
pop
or
jecxz
fstps
adc
call
dec
fsin
mov
into
mov
shl
cli
mov
jns
mov
iret
outsb
add
imul
test
ss
push
out
decl
shrl
or
mov
pop
ret
pop
mov
adc
rorl
adc
ret
mov
mov
sti
roll
inc
popa
inc
scas
ffree
sahf
je
and
mov
dec
xchg
adc
xchg
adc
mov
push
pop
testl
xchg
xchg
sbb
mov
push
or
mov
adc
call
pop
inc
xor
cli
stos
dec
aad
adc
push
xchg
hlt
pop
insl
gs
mov
fsubr
mov
lret
movsb
cmp
pop
sub
sub
jl
out
or
sarb
das
ds
jbe
sbb
shl
mov
movswl
outsb
xchg
outsb
push
sbb
xor
cmp
pop
add
cwtl
xchg
xor
mov
gs
mov
scas
add
insl
sub
inc
in
xor
and
xor
in
mov
xor
jbe
xchg
jae
inc
clc
divb
cmp
mov
out
imul
and
cmp
lods
jo
loop
ret
jle
xchg
mov
sti
sub
lahf
xor
pop
data16
fiadds
ds
stos
mov
and
or
fs
hlt
jp
inc
or
add
fs
or
in
push
cld
mov
sub
xor
ficoml
popf
bswap
cmp
cmp
cli
je
sub
mov
cld
fcoms
lds
pop
sub
mov
or
nop
movsl
xor
cmpsb
and
imul
cwtl
xlat
mov
jne
mov
push
mov
mov
das
out
adc
out
fsts
iret
imul
xor
xlat
clc
add
lds
fs
outsb
jo
loopne
adc
enter
xchg
enter
adc
imul
fcomps
std
fistpll
aad
push
shrb
xorl
repz
mov
cmp
and
jecxz
out
fidivrs
ret
js
pop
iret
inc
out
jle
mov
add
lcall
insb
cmpsb
movsb
idivl
or
xor
or
sarb
mov
jae
cmpsb
sti
jno
daa
leave
ja
and
in
inc
mov
rcrl
push
repz
fldl
cmp
cmpsl
or
cmc
mov
sub
cld
xchg
xor
pop
lock
lret
cmpsb
mov
add
lret
inc
mov
loop
push
aas
inc
stos
mov
out
mov
or
adc
mov
pop
cmp
xchg
nop
insb
loop
push
movsb
fstpt
popf
adc
fcomps
lahf
pop
aaa
jne
mov
push
adc
int3
xchg
inc
fadd
xchg
lret
movsb
scas
cmp
dec
mov
int
pop
rolb
daa
push
push
test
pop
out
add
sbb
sbb
adc
sti
adc
repnz
inc
mul
scas
test
xor
insl
xor
cmp
adc
cli
lock
cld
push
outsl
call
cmpsl
cltd
jno
pop
loop
jne
mov
xchg
pop
shl
fcomps
addl
pusha
or
sbb
lods
out
fdivrs
scas
outsl
icebp
out
add
jne
bound
gs
mov
xchg
lret
add
push
vcmpsd
fucompp
insl
inc
sub
inc
or
or
cli
push
sub
sbb
jecxz
stos
sub
push
pop
xchg
dec
cmp
imul
sbb
sbb
mov
xchg
push
ljmp
shl
clc
mov
adc
das
mov
pop
sub
xchg
sbb
mov
lahf
testb
jns
cmp
shlb
adc
cmpl
outsl
and
in
jnp
pop
jns
pop
xor
sbb
add
popf
mov
mov
xor
arpl
cwtl
pop
lcall
or
sar
sub
mull
cwtl
loope
cmp
sbbb
aad
aad
sti
es
das
repnz
imul
jg
mov
cmp
lret
mov
outsl
ja
sbb
call
jbe
jno
mov
inc
mov
push
daa
inc
or
jne
ret
je
imul
xchg
pop
lret
rcl
inc
nop
inc
enter
mov
jle
add
in
int3
lds
movsl
sub
mov
inc
pop
lock
and
test
aad
push
add
sbb
ds
test
lea
cmp
pop
dec
jge
cwtl
cmp
ret
mov
dec
js
mov
mov
in
mov
mov
cmp
push
aad
test
scas
cmp
fcoml
mov
mov
cmpsl
xor
aad
push
mov
push
scas
pop
pop
rorl
and
jbe
pusha
mov
or
or
ljmp
push
out
inc
pushf
mov
mov
mov
aad
mov
sahf
adc
movsl
in
xchg
ljmp
push
pop
fs
pop
jno
mov
sbb
int3
xchg
rol
fucomi
and
add
sub
adc
and
inc
inc
fsts
cltd
cmp
movsl
pop
push
adc
push
into
adc
pusha
stc
jmp
pusha
jle
pusha
pop
jle
sarb
movsb
sub
xchg
das
push
mov
cmp
add
stos
dec
lea
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
xor
es
out
clc
call
iret
mov
ss
call
jb
test
xor
push
ds
fmul
and
out
cwtl
in
and
stc
aas
hlt
mov
imul
std
sub
imul
and
sbbl
adc
push
sub
pop
repz
mov
jle
push
adc
jecxz
sub
lods
or
in
test
outsl
into
arpl
rol
fldcw
jae
popa
mov
ljmp
sbb
and
vmovaps
adc
rclb
mov
testl
jg
push
scas
scas
lea
loopne
xor
or
push
or
cmp
mov
imul
pop
jae
pushf
outsl
pop
cwtl
repnz
add
cs
aam
xchg
popf
xor
dec
mov
dec
sbb
jae
add
gs
imul
mov
lret
or
sub
pop
sbb
mov
lea
outsl
loopne
push
add
push
push
test
xchg
lock
scas
xor
lret
mov
mov
jnp
pop
lcall
hlt
sbbb
mov
sahf
hlt
imul
loope
cmp
out
nop
mov
loope
adc
out
jbe
ret
mov
in
cs
call
ret
call
sub
jg
adc
mov
push
mov
imul
cmp
adc
js
or
sahf
cltd
pop
or
repz
sub
adc
fsubl
sub
jns
test
outsb
out
cmc
push
xor
rep
sti
sbb
sti
popf
fisubs
stos
cmp
dec
in
sub
fwait
sub
mov
les
push
bound
fdivs
inc
iret
cmp
das
mov
pushl
rcrb
and
mov
and
mov
pop
lcall
icebp
cmp
or
mov
mov
mov
sub
pop
inc
cltd
test
fwait
dec
loop
and
scas
mov
mov
loopne
test
jno
pop
mov
and
sub
xlat
hlt
gs
xchg
int3
push
jns
push
mov
sti
mov
cmc
data16
inc
push
dec
mov
fwait
mov
xchg
mov
in
repnz
jg
and
out
add
mov
mov
in
icebp
jle
sbb
add
out
rol
xor
cmp
inc
rcr
mov
out
fwait
scas
data16
push
sub
cmp
fcomps
arpl
cmc
fmull
mov
sbb
and
xchg
pop
xchg
push
fidivrs
xor
xchg
outsb
stos
sbb
dec
push
push
cmp
mov
inc
xchg
bound
loopne
jg
les
in
xchg
push
adc
ret
ror
aam
daa
fmuls
push
clc
mov
jmp
sub
xchg
cmp
aad
dec
pop
pop
rorb
push
jecxz
out
mov
pop
data16
xor
or
dec
rcrb
jno
adc
repnz
pop
mov
lock
pop
aam
popf
mov
jge
out
dec
into
jnp
in
pop
test
jge
adc
and
cmp
inc
ja
xchg
bound
movsb
shll
insb
std
push
addr16
repnz
add
xor
arpl
and
leave
mov
test
sar
test
push
gs
int3
push
scas
mov
sub
jp
fnstsw
out
sbb
lds
dec
aad
pop
idivl
orl
sahf
push
push
adc
or
icebp
push
outsl
jo
mov
lods
aaa
lret
xlat
imul
incb
es
cmp
popf
bound
pop
dec
pop
push
pop
add
aad
lcall
in
insl
fmull
sbb
enter
cmpsb
mov
pop
push
xchg
data16
pusha
mov
pop
hlt
xor
jo
mov
mov
add
push
fwait
outsl
mov
adc
es
popl
das
push
jbe
pop
or
fistpll
movzbl
add
jg
jecxz
mov
adc
int3
sub
sbb
inc
cmp
shrb
fcomi
push
xor
cmc
adc
xor
cmpsl
xchg
fisttpll
inc
lds
imul
mov
loop
lret
clc
jecxz
jg
push
pop
mov
into
test
and
adc
cmc
push
sub
mov
lahf
inc
test
shrb
mov
sub
hlt
sub
dec
outsb
adc
adc
in
popa
xchg
cmp
pusha
repz
enter
adc
repz
dec
icebp
add
and
ret
scas
pop
jmp
xlat
jl
or
adc
or
shlb
repnz
sbb
lcall
sub
div
lahf
xor
mov
inc
aad
push
push
fidivl
outsb
ss
jne
popf
adc
or
iret
sub
inc
mov
insb
ja
and
into
addr16
mov
sub
test
scas
mov
and
stos
lock
cmp
dec
movsb
pop
jnp
repz
inc
std
mov
lea
cmp
jmp
sti
in
dec
push
rcr
popf
inc
cmp
es
jg
roll
and
dec
scas
xchg
inc
sarl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
and
mov
push
inc
lods
ficomps
insb
outsl
stos
sbbb
into
or
jl
fwait
mov
xchg
data16
lret
mov
mov
or
jmp
rol
dec
fmull
mov
test
ret
les
nop
jmp
mov
movsb
int3
cmp
and
sbb
xchg
mov
scas
inc
cmp
mov
xor
test
and
dec
mov
lret
dec
pop
cld
in
sub
lock
inc
sbb
sub
es
xchg
pop
pusha
xchg
xchg
lods
jo
adc
outsb
xor
pusha
ret
popf
pusha
sub
cli
shlb
ficomps
mov
xchg
lock
pop
sub
fucomp
test
cmpsb
dec
or
add
std
js
int
clc
inc
idivb
cmp
adc
in
dec
pop
clc
pop
icebp
xchg
das
in
aad
adc
adc
nop
insl
and
pop
aad
in
and
and
mov
jno
fdivr
xlat
or
cmp
lea
decl
jge
mov
mov
popf
lods
dec
mov
and
shlb
mov
jnp
mov
xchg
pop
push
icebp
push
or
mov
dec
iret
cmc
inc
lds
addl
pop
rcll
push
lods
ja
xchg
jnp
call
shll
lea
inc
push
out
dec
in
inc
ss
pushf
jne
inc
push
xorb
sub
adcl
rorb
fsubs
stos
test
inc
popf
mov
push
sub
sbb
push
insb
std
mov
cmp
or
push
pop
int
js
mov
xor
loopne
out
dec
push
ret
gs
add
cwtl
mov
mov
hlt
nop
adc
cmp
mov
sub
jecxz
enter
pop
outsb
in
mov
sbb
xor
iret
push
cmpsb
fimuls
lock
repz
lds
or
xor
rcll
xor
pushf
xor
stc
or
cmp
jp
iret
fldl
sbb
pop
in
jecxz
jl
int
jmp
sbb
xchg
rorb
mov
add
dec
roll
lea
test
popa
jbe
lret
popf
aad
or
test
cmp
in
cmp
jns
fwait
xchg
fidivrl
imul
push
cmpsb
mov
pop
xchg
ret
daa
jb
jnp
jno
xchg
stos
mov
xor
mov
testb
mov
jl
jecxz
push
xchg
pop
dec
push
cmp
mov
test
xchg
mov
sub
jmp
sub
shlb
xor
sub
pop
loop
sub
add
push
add
out
pop
mov
fwait
adc
ss
fxch
cmp
lret
loop
jmp
loope
rclb
jmp
mov
popf
cli
inc
lock
and
ljmp
dec
lret
roll
cmp
adc
repz
adc
sbb
push
inc
or
scas
mov
leave
and
lcall
push
mov
mov
adc
inc
sbbl
lret
mov
ja
lods
lcall
jo
xchg
dec
sub
lahf
arpl
cmpsl
jb
dec
pop
stos
pop
pop
ret
add
xchg
bound
dec
cmp
inc
sub
test
jle
loope
push
fstpl
push
inc
hlt
lret
or
push
loop
push
call
sub
ret
sbb
mov
sub
pop
aam
loopne
sub
lcall
lret
enter
cmpl
xlat
adc
xor
add
push
pop
loopne
jmp
mov
loopne
push
fidivrs
stc
jnp
or
and
jmp
pop
shlb
repnz
stc
sub
test
arpl
loope
push
inc
mov
mov
mov
pop
push
jno
inc
push
mov
mov
push
popa
sub
xor
sub
jno,pt
jno
jbe
and
xchg
aad
xor
shrb
lds
fistps
adc
xchg
jb
xchg
dec
cmpsb
insl
outsl
subl
xlat
inc
or
sbb
or
and
hlt
lds
mov
lock
mov
call
xchg
in
sarl
sbb
pop
cmp
aas
dec
xor
popf
das
test
imul
cmp
or
sub
aam
or
inc
sbb
test
movsl
and
pop
sub
or
imul
popa
push
popa
mov
sarl
jmp
pop
add
mov
push
sub
jnp
fwait
sti
scas
fs
neg
and
and
inc
mov
mov
add
insl
push
movd
fs
jmp
mov
ds
adc
cmpsb
cmp
mov
xorl
jns
xor
sbb
mov
sahf
lods
icebp
cltd
adc
mov
jns
jo
jp
mov
add
and
cltd
outsb
push
sbb
pop
fsubr
imul
sahf
fwait
dec
scas
bound
in
mov
enter
in
add
mov
xor
jns
in
cmpsl
mov
and
ret
pop
loopne
or
shl
idivl
dec
sahf
jo
cmpsb
jns
jns
xchg
in
scas
lret
ucomiss
mov
outsb
mov
xlat
pop
ret
cmp
xchg
xor
cwtl
and
out
fadds
mov
jbe
insl
hlt
cmp
divl
jecxz
in
jnp
lret
or
int3
out
sarl
xor
movsl
or
jo
xchg
ljmp
fcmovb
fdivrp
xchg
jnp
inc
or
xchg
jnp
lret
insb
mov
and
lods
aaa
mov
jmp
cmp
fbstp
push
aas
mov
dec
sar
addr16
push
xchg
test
mov
jle
xchg
scas
mov
into
dec
clc
bswap
cwtl
inc
push
adc
push
cmp
ja
cmp
pop
out
fwait
and
jae
inc
lret
ss
ret
mov
xchg
stc
and
add
rorb
jecxz
jno
cmp
dec
sbb
scas
pop
cmp
ror
bound
pop
in
jg
ret
mov
xor
aas
add
enter
add
xor
enter
repnz
lods
lock
stc
std
add
pushf
push
ds
mov
jbe
fs
jno
or
add
icebp
or
sbb
fsubrs
mov
xlat
cmpsb
je
mov
push
enter
sti
pop
cmp
hlt
jno
stos
mov
add
fidivrs
in
and
stc
and
dec
inc
idivb
jmp
ljmp
pop
pop
add
dec
push
out
rorb
xchg
pusha
xchg
xchg
bound
cmc
xchg
inc
movsl
jns
nop
imul
dec
iret
inc
adc
mov
je
sub
cwtl
movsb
push
popa
pop
lret
push
lret
cmp
sub
out
xchg
in
cmp
sti
mov
and
and
insb
add
cmp
xor
sbb
adc
sbb
repz
mov
loope
dec
aas
sub
mov
add
fs
loopne
ljmp
out
sbb
imul
add
insb
adc
jg
sub
mov
xor
mov
icebp
nop
int3
insl
push
lahf
imul
ljmp
pop
loop
dec
cmp
or
jle
xor
jle
xchg
outsl
movsb
mov
test
in
repnz
movsb
int3
inc
inc
mov
xchg
bound
icebp
xchg
cmp
int
adc
nop
fnstenv
push
insl
add
in
jo
enter
pop
mov
jle
test
sarb
push
cmc
fnstcw
in
push
fldl
cmp
je
divl
dec
and
rcrl
testb
push
or
xor
mov
stos
bound
ret
adc
sbb
pop
repnz
mov
inc
call
sub
cmp
lcall
shr
inc
imul
adc
sbb
mov
or
ss
test
cmpsb
xchg
ds
or
cmp
into
pop
ss
ss
scas
mov
xchg
outsb
stos
fbstp
or
mov
jno
dec
or
mov
pop
arpl
push
in
lods
add
push
or
xor
mov
testl
xchg
lds
pop
dec
shll
mov
xor
les
test
gs
cwtl
stos
mov
xchg
sub
cwtl
lock
sub
push
push
fucomi
std
jns
ja
fcoms
adcl
movsl
cmp
dec
sub
xor
cmp
and
fsubs
mov
inc
stos
pop
loope
xchg
sbb
mov
jo
push
addr16
outsl
int3
adc
jle
inc
mov
inc
cld
cld
cmpsl
cmp
scas
mov
sub
inc
xchg
jno
sub
cmc
div
jae
test
js
mov
mov
lea
pop
int
inc
push
gs
dec
xchg
insb
or
mov
sub
mov
and
or
mov
adc
lock
int
or
xor
movsl
lahf
sub
enter
push
aad
push
ret
jecxz
lods
fs
ja
mov
mov
or
fdivrl
testl
mov
js
in
cmp
dec
pushf
daa
add
adc
push
push
jl
pop
std
cmp
test
dec
and
push
out
fcomip
xchg
scas
cmp
push
jne
cltd
cmc
push
rorb
js
scas
popf
je
or
pop
ret
std
pop
xchg
xchg
mov
clc
sbb
mov
ret
das
mov
pop
cmp
test
fsub
xor
xor
enter
lret
out
mov
adc
icebp
std
notb
imul
lods
mov
push
dec
push
pandn
cmp
dec
in
cmpb
iret
and
scas
push
push
inc
pcmpeqb
sahf
jecxz
ss
inc
pop
jo
int3
sahf
imul
ficomps
adc
push
notb
lcall
add
repz
and
pop
push
sub
mov
sbb
rorl
mov
mulb
rcl
jb
in
mov
btc
mov
mov
fwait
pop
dec
sbb
mov
in
add
mov
cmp
fwait
dec
loop
fcompl
inc
sbb
fs
icebp
fs
shll
sub
shlb
mov
add
or
or
arpl
frstor
mov
js
mov
sub
xchg
add
adc
lods
adc
dec
dec
out
cli
fdiv
gs
aaa
push
add
add
in
sbb
xchg
daa
or
lock
or
xorb
or
stc
bound
testl
sub
jle
scas
xchg
dec
arpl
test
mov
popf
jae
mov
insl
shl
add
mov
mov
out
in
add
ret
mov
jnp
xchg
unpckhps
pusha
sub
mov
xrelease
add
lds
dec
jmp
jp
xchg
ljmp
pop
movsb
push
mov
or
sbb
psubw
std
sbbb
sub
fisttpll
xor
shrl
sub
jmp
inc
push
test
cmp
hlt
hlt
mov
dec
cmp
shll
pop
xor
fbld
push
xchg
pushf
inc
test
mov
inc
push
add
inc
pop
add
adc
pop
repnz
push
in
push
sbbb
jmp
push
inc
scas
push
hlt
mov
shlb
or
dec
stos
mov
sbb
xchg
rorl
push
fwait
mov
pushf
push
push
inc
lret
pusha
push
xor
cmpl
scas
mov
lods
sub
or
adc
mov
int
mov
xchg
push
mov
push
dec
push
movsl
jns
pop
jo
xor
lret
xchg
imul
negb
inc
xchg
push
jno
xor
into
out
testl
cmp
dec
inc
cwtl
inc
inc
jae
push
rorl
hlt
cmp
xor
and
outsb
into
sub
xor
iret
in
mov
or
rolb
push
and
daa
push
es
pop
push
fwait
xchg
ljmp
pop
shr
loop
and
inc
fmuls
addl
scas
adc
mov
pop
mov
mov
mov
sbb
jae
cmp
add
adc
mov
fs
iret
mov
jle
mov
daa
cmp
je
add
cmp
int
mov
pop
mov
out
xor
in
or
xlat
mov
fidivrl
test
insl
cmp
sahf
cmp
push
lods
into
addb
cmp
mov
movsb
inc
shll
and
in
xor
insl
adc
stc
ret
pop
push
mov
pushf
xchg
out
shll
push
adc
mov
sbb
es
push
pop
mov
out
clc
cmp
mov
call
jnp
js
mov
mov
int3
mov
push
xor
sbb
cmpsl
ljmp
ror
dec
fdivl
addr16
mov
adc
sti
xor
add
mov
pop
stos
sahf
pop
or
fdivrl
enter
dec
fsubrs
bound
lock
and
stos
ret
inc
adc
jbe
lahf
test
lods
pop
cwtl
mov
or
dec
stc
push
js
sete
enter
xchg
xchg
push
test
and
and
and
rcrb
or
inc
pop
sbb
repz
sub
mov
dec
push
push
lods
xlat
xchg
add
cmp
jns
sbb
dec
daa
jo
movsb
inc
or
rcrl
cmpb
cmp
in
loope
pop
inc
cli
sub
popf
mov
ss
leave
je
push
daa
shrl
lock
push
or
movsb
sbb
mov
and
mov
dec
push
sub
cwtl
inc
add
add
jnp
cmp
push
push
les
ficomps
andl
add
int3
nop
jge
les
test
add
and
cli
jb
test
xor
pop
aas
jle
hlt
hlt
cmp
xchg
xor
xor
fwait
addb
leave
mov
add
movsb
cmp
sub
inc
aaa
fucompp
call
inc
lcall
inc
add
xchg
test
xorb
add
push
aaa
leave
js
jno
scas
test
mov
mov
mov
pop
out
push
xor
adc
sti
ss
lea
fisubrs
pop
ficoms
aam
jl
loop
dec
test
push
stos
sahf
add
push
fwait
push
out
fmull
cli
outsl
dec
fsubrs
inc
xor
test
mov
out
adc
scas
and
insb
loope
es
inc
fisttps
je
adc
and
lods
xchg
cmc
jnp
cmpsl
or
cmc
cmp
sub
lds
xor
pop
scas
out
pop
mov
repz
decb
cmp
dec
sbb
sbb
xor
lcall
xchg
xchg
test
addl
add
sti
xor
mov
in
sbb
rcll
hlt
cwtl
mov
add
call
sbb
sub
idiv
mov
lea
jbe
pop
push
shrl
jo
mov
sub
aas
inc
mov
movl
inc
mov
sbb
jg
inc
movsb
jno
cli
and
pop
movsl
mov
mov
pushf
rcrb
pop
lock
mov
lret
jg
aaa
repnz
pusha
sbbl
dec
cmp
cltd
mov
adc
fcmovne
faddl
adc
icebp
cmp
cmp
fmul
and
loop
mov
insb
jb
call
loopne
ss
in
xchg
fiaddl
jl
test
xor
andb
cld
addl
add
mov
call
pop
inc
adc
popf
mov
inc
shll
cmp
lods
mov
jnp
jl
mov
push
mov
lds
or
cmp
xchg
adc
dec
pop
jns
add
sub
cmpb
out
sbb
repnz
sub
adc
dec
insl
adc
test
loop
js
sub
loopne
add
mov
ror
dec
or
xor
neg
ret
sbb
and
jg
and
sub
lcall
rol
lods
rcl
push
cmp
in
addr16
mov
adc
mov
adc
pop
xor
repnz
lods
push
cmp
loop
add
lret
fdivr
xor
sti
inc
scas
cld
and
sbb
cld
mov
lock
sti
mov
jecxz
and
pushf
jno
shl
fmull
or
repnz
mov
add
call
enter
sub
jecxz
push
testb
ss
clc
enter
add
inc
out
outsb
and
cmc
call
sub
xchg
jnp
sbb
sar
shll
and
rcll
xor
stos
fwait
movsb
pop
jnp
shll
add
jnp
cltd
movsb
mov
pop
bound
or
xchg
jg
shlb
push
cmc
insb
dec
xor
testb
mov
es
rolb
jno
dec
push
pop
sti
in
cld
adc
aam
xor
push
cmp
cwtl
jae
fnsave
ret
inc
pop
test
xor
sti
sti
lahf
addl
fwait
and
loop
popf
repnz
xchg
xor
sbb
mov
inc
test
mov
pop
out
aad
xor
loope
cltd
repnz
pop
sub
sub
mov
popa
repnz
jbe
inc
jp
bnd
imul
ljmp
nop
outsb
xor
xchg
mov
pmaxsw
cmp
inc
cmpsb
fdivp
ficoms
sub
les
bound
sbb
dec
movaps
andl
push
outsl
adc
dec
jg
mov
or
sbb
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
add
ret
mov
adc
fcmovne
fdivl
inc
xor
sti
mov
repnz
int3
and
loop
jmp
loope
inc
insl
jb
mov
loopne
ss
in
xchg
xchg
push
jge
pop
stos
mov
andb
cld
addl
add
mov
mov
pop
inc
jp
pushf
mov
shlb
mov
jnp
jl
jecxz
push
negb
push
push
xchg
mov
insb
xor
cmp
inc
cmpsb
lea
mov
add
jnp
jno
mov
cmpb
adc
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
push
sub
cld
adc
shlb
lods
rcl
push
cmp
in
xorl
rol
or
fnsave
inc
xor
lret
mov
jb
sbb
int3
and
loop
jmp
loopne
inc
insl
jb
rep
mov
ss
out
xchg
xchg
push
jge
pop
stos
mov
mov
mov
xlat
xorb
fnstenv
shl
repnz
mov
pop
sbb
popa
push
shr
push
stos
fsubl
je
insb
jge
jmp
push
mulb
ficoms
mov
jecxz
repz
dec
cmp
inc
mov
dec
pop
mov
add
jnp
jno
mov
cmpb
adc
pop
sbb
bound
sub
ror
pusha
jle
jle
pop
adc
cmp
rorl
cmpsb
or
ror
loop
and
icebp
mov
add
into
fst
cli
or
loope
push
dec
xchg
inc
and
dec
or
mov
movsl
shrb
popa
sbb
mov
mov
ret
es
int3
test
add
mov
pop
sbb
mov
ss
xchg
inc
mov
dec
iret
lods
aad
dec
loopne
ss
xchg
sbb
pop
iret
mov
fisubl
roll
fwait
mov
push
mov
pop
jp,pn
pushf
fisubl
rcl
push
fcomp
enter
fmull
movsb
and
ss
push
mov
jl
orl
movsb
add
adc
popf
les
mov
or
or
bound
sub
rcll
dec
adc
std
rcr
sub
rcrl
dec
add
or
icebp
in
inc
push
xchg
push
dec
jg
xchg
loope
push
sbb
xor
out
adc
sahf
jbe
lods
mov
ja
dec
sbb
mov
mov
ret
jp
scas
int3
fdivl
das
sbbb
add
mov
inc
rcrl
dec
fisubrs
ss
in
jecxz
aaa
jge
pop
into
mov
lock
repnz
push
mov
jno
rol
hlt
int3
call
jp
pushf
xchg
shl
push
into
mov
sbb
lods
and
divb
sub
push
xchg
mov
add
dec
cmp
inc
xchg
lea
mov
sbb
jb
popf
idivb
mov
sbb
bound
sub
rcll
insb
and
fisubrl
sub
mov
push
cmpsb
push
jae
mov
or
icebp
lret
xchg
pop
dec
pop
xor
ffree
cli
das
sbb
loope
push
jbe
pop
pop
inc
and
inc
or
mov
mov
sbb
clc
in
add
mov
mov
addr16
outsl
outsl
lock
lcall
ret
ret
mov
mov
dec
pop
and
les
cmp
or
aad
test
push
add
sub
sub
or
les
sbb
add
out
clc
xchg
incb
pop
imull
sar
leave
pushf
cld
arpl
sbb
in
mov
scas
pop
mov
cmpsl
jecxz
push
pop
cmp
jmp
pop
jl
mov
sarb
stos
icebp
aaa
cmp
negl
dec
mov
imul
in
repnz
cmp
mov
insb
adc
std
loop
sub
shll
add
out
shr
sbb
icebp
addl
cmp
neg
ret
sbb
loope
push
and
add
pop
and
mov
lea
jmp
xor
jmp
test
cmp
je
mov
sahf
sub
fwait
fwait
mov
jmp
xchg
add
nop
cmc
cmp
ja
neg
stc
xor
add
sahf
clc
jmp
not
stc
nop
mov
mov
jmp
call
fprem
mov
jmp
addb
clc
jmp
out
orb
fldl
add
add
jmp
mov
mov
mov
jmp
test
xor
jmp
mov
xor
jne
jmp
addl
inc
add
add
and
mov
and
cmpw
je
sub
jmp
inc
cmpl
jne
cmpl
jne
dec
cmpb
jne
mov
jmp
xchg
popl
sub
mov
add
push
sbb
push
jmp
mov
inc
add
shlb
mov
or
push
jmp
in
call
not
jmp
out
mov
jmp
out
jmp
test
mov
jmp
addl
lea
jmp
out
test
add
xor
jmp
test
add
fdiv
push
lock
jo
outsl
mov
mov
xor
mov
mov
jge
push
loop
mov
cli
pop
mov
add
mov
ret
jno
jno
cmpb
xor
sub
push
sub
mov
enter
pop
mov
pop
pop
mov
jl
mov
mov
jo
sub
lock
enter
mov
mov
mov
sbb
mov
add
mov
subb
mov
mov
pushf
rol
shlb
shl
stos
and
xor
mov
lock
mov
xchg
shlb
mov
outsl
sub
icebp
mov
shlb
mov
sbb
xlat
add
jle
add
add
add
mov
call
jecxz
add
adc
add
loope
add
jp
add
cmp
add
clc
loope
add
dec
jecxz
add
add
loop
add
lcall
add
add
add
cmp
add
dec
loop
add
add
push
add
add
loop
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
add
add
jecxz
add
jecxz
add
add
add
fs
add
add
add
jecxz
add
add
fsub
add
lock
add
add
push
in
add
in
add
push
gs
outsb
push
inc
imul
add
add
imul
jne
outsb
popa
insb
add
add
inc
imul
add
je
jb
inc
imul
outsb
add
add
je
gs
arpl
popa
insl
insl
popa
push
popa
insl
jo
add
dec
xor
cs
insb
add
add
fs
popa
jb
je
add
push
push
jb
outsl
jb
add
add
inc
bound
outsl
outsb
push
jb
outsb
jae
arpl
outsb
add
add
push
inc
gs
dec
inc
inc
add
add
dec
jae
insb
imul
inc
outsl
jb
popa
je
jbe
imul
add
dec
gs
push
outsl
inc
push
data16
add
add
push
gs
outsb
jne
add
dec
gs
popa
addr16
outsl
js
js
add
inc
push
xor
cs
insb
add
add
inc
jne
insb
fs
outsl
insl
insl
inc
inc
inc
inc
add
add
arpl
outsb
arpl
insl
gs
imul
popa
jo
imul
insb
gs
js
add
dec
outsl
arpl
push
outsb
insb
outsl
arpl
add
dec
jne
je
inc
jns
gs
outsl
push
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
push
gs
gs
gs
arpl
imul
addr16
jb
popa
je
dec
gs
add
add
je
jne
bound
dec
inc
jbe
outsb
je
outsl
addr16
arpl
fs
add
push
inc
push
dec
xor
cs
insb
add
add
inc
outsl
inc
gs
je
outsb
fs
jb
dec
popa
jb
push
add
dec
insb
gs
outsl
popa
fs
jb
insl
push
je
gs
insl
add
add
inc
dec
inc
inc
dec
push
dec
pop
push
jae
jb
outsb
insl
popa
jb
push
add
inc
jb
popa
je
inc
jne
add
add
dec
inc
dec
dec
inc
inc
dec
pop
push
jae
jb
jb
add
add
push
push
inc
dec
inc
inc
dec
push
dec
pop
push
jae
jb
outsb
insl
popa
jb
push
dec
inc
xor
cs
insb
mov
jge
test
jp
nop
repz
add
inc
dec
ret
sub
dec
pop
sbb
jns
mov
add
es
cmpsl
imul
push
lret
push
in
fisttps
adc
adc
xor
push
xchg
pop
mov
mov
xchg
sbb
test
jne
jl
jle
inc
jae
xor
jmp
jo
out
test
out
jmp
fs
jle
rcrb
je
sti
fsubs
test
pusha
sbb
lret
adc
xor
xchg
ret
fnstsw
std
aas
shr
repz
cld
pop
pop
call
in
mull
pop
xor
inc
add
adc
and
enter
xchg
add
test
test
jmp
sbb
xlat
cli
sub
add
js
jo
or
and
in
jmp
mov
xor
xchg
or
lock
push
sbb
fisttps
cmpsl
ret
dec
les
mov
rorb
scas
iret
cmp
lcall
mov
sahf
mov
stos
xchg
xor
iret
stos
lock
push
call
push
xchg
cltd
pushf
fwait
jbe
test
mov
inc
ds
int
dec
lea
cmp
cmc
mov
cld
stos
add
insl
mov
jmp
int3
mov
jmp
jb
imul
ror
shl
scas
fistps
mov
aam
inc
pop
mov
icebp
sarb
dec
inc
subl
add
fs
ja
in
adc
xor
daa
daa
call
cmc
cmp
dec
xchg
fwait
pop
xor
sbb
and
xchg
sbb
adc
mov
clc
jbe
add
cmp
jp
add
test
jmp
jne
arpl
dec
pusha
xlat
fcmovnu
mov
mov
pusha
pop
pop
push
or
adc
sbb
push
dec
cwtl
pop
movsb
outsb
imul
and
mov
jmp
scas
jp
in
mov
xchg
dec
and
mov
mov
loop
inc
addl
cmp
xchg
xchg
or
in
jne
js
repnz
movsl
mov
sti
addr16
hlt
aam
cmp
rcl
fstl
adc
pop
pop
push
jns
push
idivb
iret
mov
orb
jnp
mov
movswl
xchg
push
out
mov
inc
movsb
and
mov
push
nop
cld
stc
popa
dec
xorl
inc
adc
imul
push
xchg
loope
mov
das
test
mov
cmp
test
adc
ror
and
mov
loop
subl
mov
push
xchg
aad
push
mov
cli
dec
subl
scas
rolb
stos
lahf
xchg
cmp
lcall
mov
jb
ljmp
lds
scas
std
scas
sbb
and
sbb
add
or
xchg
iret
or
stc
cwtl
test
lcall
icebp
and
mov
fs
push
jns
push
inc
test
and
pop
jnp
pushf
int
rorl
dec
dec
dec
in
rcl
aam
cli
cmp
add
addr16
xor
in
inc
xor
sub
sub
xchg
xlat
sub
insl
outsl
fdivs
jno
repnz
cwtl
sbb
sub
lret
and
sar
in
push
jg
out
xor
stc
or
mov
lods
mov
cwtl
xchg
xchg
xor
cmpsl
pop
inc
push
adc
cmpsl
mov
stos
inc
pop
sahf
pusha
dec
adc
push
hlt
mov
es
push
push
dec
out
cmp
lods
mov
xor
cs
xor
mov
or
ja
sub
jp
xchg
push
notb
fwait
adc
jmp
out
pushf
push
je
scas
jl
cltd
lcall
mov
cmpsb
cld
jns
jecxz
xorb
mov
daa
mov
pushf
icebp
adc
lock
call
mov
fstpl
shlb
adc
gs
and
mov
lret
iret
mov
jne
xchg
test
inc
jle
mov
push
xor
popa
jmp
jg
out
dec
and
hlt
js
pusha
pop
bound
sub
js
sbb
pop
sbb
adc
and
sti
cltd
push
mov
xchg
divl
adc
jle
je
daa
mov
jns
cli
js
fbstp
in
jo
cmp
out
in
add
repnz
mov
stos
fisubs
dec
push
mov
pop
pushf
fisttpll
outsb
out
pop
pop
push
rdseed
jecxz
push
inc
or
stc
or
cmp
gs
outsb
pop
jo
jg
sub
subb
sub
leave
sbb
ret
xchg
imul
sbb
xchg
or
sahf
fwait
pushf
add
pop
stos
imulb
add
cmc
inc
cmpsb
xchg
loopne
mov
cmp
and
inc
jo
sub
cmp
addr16
pop
lret
cmp
ret
xor
addb
dec
dec
ret
or
test
sub
cmp
ds
aad
out
add
sti
cld
mov
repz
sahf
imul
hlt
mov
or
inc
mov
or
or
mov
stc
and
iret
adc
dec
jl
xor
xchg
btc
cld
lret
and
push
imul
in
cmpsl
ljmp
in
push
xchg
sarl
lods
fbld
and
dec
jb
stc
and
leave
int3
lret
push
outsl
and
pop
imul
scas
mov
movsb
mov
jnp
and
jp
jmp
sub
mov
fsts
fcompl
loop
es
test
inc
sahf
les
leave
nop
jae
ja
imul
enter
in
cmp
cmc
pop
jo
jb
clc
cmp
pop
pop
xor
bound
cmp
loope
repz
jae
roll
jns
jne
test
pop
lock
out
mov
sub
out
mov
std
pop
call
iret
fistl
push
push
ror
dec
imul
mov
dec
test
in
or
add
pop
test
or
add
add
add
inc
add
add
cmp
add
pop
addl
add
adc
loope
add
add
add
lahf
fisubrl
add
cmp
add
add
add
add
popf
add
sbb
xor
add
mov
add
cmpsl
add
xchg
add
add
add
add
add
add
add
add
add
add
cld
out
add
add
mov
xor
push
add
roll
movsb
jl
add
add
jnp
add
adc
push
pusha
add
add
dec
cmp
add
bound
insl
add
mov
pop
repz
loop
ret
loopne
cmp
ja
adc
add
add
and
add
jg
add
xorb
add
add
add
pop
add
add
nop
add
ret
add
add
push
add
add
clc
or
add
add
fdiv
pop
add
fimull
xor
add
jbe
add
add
sbb
lods
add
add
add
pop
jecxz
lret
add
jle
mov
add
add
add
add
add
jbe
add
add
add
add
add
add
add
add
hlt
add
out
add
and
add
add
and
add
add
add
in
add
add
add
aas
ret
push
xchg
inc
add
push
inc
ret
add
pop
xchg
push
in
add
add
dec
fimull
add
add
add
fadds
add
mov
outsl
add
mov
pop
add
ret
ret
sub
cmp
add
sbb
add
add
dec
add
addb
hlt
stos
loope
add
loope
cwtl
mov
add
mov
cld
lods
jbe
push
add
mov
add
add
mov
add
cld
pop
add
cmpb
add
add
insb
sldt
add
add
add
add
add
and
cmp
add
adc
sbb
add
dec
add
into
lods
cwtl
xor
jmp
xor
add
push
outsb
add
mov
add
add
add
add
add
jg
push
lret
add
insl
add
mov
add
xchg
add
add
add
add
ret
add
add
add
add
lds
dec
cmp
add
mov
add
fwait
add
cmp
daa
int
add
call
mov
and
loope
or
add
add
lret
shlb
add
add
and
mov
in
add
add
out
add
stos
add
add
push
lods
add
xor
add
push
aaa
add
aaa
add
les
add
jmp
jbe
add
add
dec
add
add
mov
jle
add
xchg
aad
mov
add
add
cmc
add
movsb
add
add
in
mov
loopne
jp
rolb
mov
add
add
pop
add
mov
add
add
scas
add
add
faddl
add
add
mov
add
add
adc
push
cmp
sahf
dec
add
add
pop
fldl
xor
add
dec
add
mov
add
add
bound
add
add
add
ret
add
mov
add
add
add
leave
add
add
add
add
mov
mov
add
mov
mov
push
add
push
add
pop
add
add
add
testb
add
add
add
add
add
xor
sub
add
add
and
add
sub
add
in
add
add
dec
addb
daa
xchg
popl
lea
add
fwait
add
add
cmc
add
inc
add
add
sbb
push
add
inc
add
mov
add
add
add
add
push
daa
adc
mov
mov
add
add
add
add
test
in
sbb
int3
cmpsb
add
add
mov
sbb
jb
add
add
insb
add
jecxz
addb
sub
add
incb
add
add
cld
mov
lods
ljmp
mov
add
add
add
add
sbb
add
dec
aam
popf
mov
push
cld
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
pusha
aad
into
add
stc
fiadds
add
add
insl
add
add
mov
add
cld
cmc
xchg
cmp
in
add
cmp
gs
add
add
sarl
add
repz
inc
stos
pop
andb
add
add
stos
add
add
add
addl
add
xor
add
cmp
add
add
icebp
aaa
add
dec
cmp
xor
mov
cmc
lcall
mov
add
xor
add
add
mov
add
add
aaa
add
lret
add
add
add
outsl
repnz
add
add
add
add
data16
insb
aad
add
add
add
add
add
add
add
mov
add
movsl
add
jnp
add
add
add
add
add
popa
add
xchg
jb
sbb
add
add
add
xchg
repnz
add
add
scas
xlat
add
mov
add
mov
das
add
rolb
mov
add
add
add
add
add
dec
add
or
add
pop
pop
mov
add
aaa
add
rcl
add
faddl
xchg
add
add
add
add
jmp
add
or
add
add
add
add
add
fildl
add
pop
xor
add
jp
pop
xor
add
rolb
add
add
leave
add
dec
add
sbb
add
add
add
add
add
add
add
and
add
lea
ss
add
add
add
cmp
add
add
jecxz
ret
add
add
icebp
in
add
in
push
sbb
xchg
push
add
pop
and
add
add
lds
movsb
jg
cmp
cmp
push
sbb
or
add
lcall
add
jno
pop
filds
add
add
clc
and
inc
add
xor
push
add
add
nop
adc
add
add
jp
lcall
add
mov
push
jle
add
add
add
cmpsb
add
mov
add
add
add
inc
add
add
push
add
xchg
add
push
add
add
add
add
or
call
xchg
aad
add
add
cmp
add
add
add
faddl
add
cmp
and
add
aam
inc
and
adc
xor
cmc
cmp
add
loop,pt
add
xchg
add
add
add
es
stos
mov
add
or
add
jge
add
add
into
dec
add
xor
rclb
add
mov
or
add
add
test
jb
movsb
add
add
mov
push
mov
add
xchg
jno
add
mov
mov
add
add
filds
jl
add
add
filds
and
add
xor
shll
iret
add
add
in
add
pop
das
add
add
or
testl
mov
add
addb
mov
dec
movsl
add
add
lea
add
add
add
cmpsb
movsb
add
sub
filds
incb
add
add
cmp
mov
add
add
xchg
lret
add
add
add
add
add
fiaddl
add
add
add
daa
add
add
scas
dec
loope
add
jg
add
add
add
add
insl
mov
mov
add
pop
add
mov
jecxz
add
add
sbb
out
add
aaa
xchg
add
or
and
cld
mov
or
loopne
push
add
add
mov
add
add
add
add
lods
add
dec
add
add
add
add
xor
js
inc
add
add
ja
add
dec
fsub
xor
add
inc
add
jo
outsb
add
mov
icebp
ret
add
add
push
add
fstpl
add
add
daa
add
add
xchg
cli
add
mov
add
add
jp
add
add
add
add
call
add
add
cwtl
add
add
add
jmp
add
add
add
lds
add
loop
add
add
add
loop
add
sahf
add
and
add
add
add
daa
add
add
dec
push
rolb
aad
add
or
cmp
test
add
add
add
mov
cmp
cmc
add
add
add
push
add
int3
add
jmp
mov
add
add
add
lods
add
push
add
add
add
or
add
mov
je
add
dec
add
add
add
add
jno
lods
add
inc
add
add
ds
add
daa
add
out
add
add
and
xchg
add
add
add
add
add
add
add
add
xlat
inc
in
add
aas
add
sub
hlt
sldt
add
in
add
xchg
movsb
movsl
add
std
add
faddl
imul
cmpsl
jl
sbb
add
add
add
add
add
imul
add
dec
push
mov
add
add
adc
add
nop
add
or
inc
add
push
add
and
push
insb
testb
add
add
add
fldl
add
out
cmp
les
cs
add
add
add
add
mov
adc
add
sub
add
add
cmpsl
add
add
psrlq
add
add
add
add
add
add
jnp
add
cmp
lods
jno
add
or
and
jecxz
add
ja
sub
pusha
outsl
pop
add
leave
cmp
repnz
add
add
add
icebp
cmp
lcall
fdivrp
mov
cmp
xor
add
cld
leave
cmp
add
add
add
insb
add
add
add
push
hlt
js
push
push
lret
add
addl
add
add
add
add
add
add
add
add
fcmovu
add
insb
add
xchg
add
lcall
or
add
sbb
add
inc
add
add
pop
jp
add
mov
pop
enter
scas
cli
add
add
cltd
add
mov
pop
js
mov
add
jg
add
fwait
add
sub
movsb
add
fadds
add
in
inc
push
add
add
add
add
push
add
pop
or
scas
add
mov
mov
add
iret
sub
add
add
adc
add
inc
add
xor
add
add
push
add
add
add
addl
xchg
add
push
add
add
add
and
add
add
add
add
ljmp
add
add
add
add
adc
add
add
pop
add
inc
mov
pop
add
add
add
add
add
add
pop
cltd
cmc
add
add
xchg
add
jbe
xchg
add
in
mov
cmp
pop
add
inc
add
insl
add
test
add
add
add
sbb
add
test
add
add
add
add
scas
mov
and
add
adc
add
add
add
sbb
add
mov
add
add
add
jmp
add
add
add
add
and
add
add
add
add
roll
add
pop
add
jno
mov
add
push
add
jmp
jae
add
pop
add
add
rolb
dec
aam
xchg
add
add
inc
or
aaa
loop
cmp
add
add
fmull
add
pop
das
ret
add
jg
test
loope
add
xchg
add
add
push
sub
or
sahf
cli
add
add
mov
add
cld
add
add
add
add
add
add
add
pop
add
add
add
add
in
call
add
rolb
inc
fldl
stos
add
adc
add
add
rolb
add
pop
cmp
mov
add
add
add
xchg
sbb
add
imul
add
cli
cmp
fcmovb
push
add
cmp
add
add
push
std
and
add
inc
add
fnstsw
scas
pusha
test
add
mov
outsb
add
add
add
add
sub
mov
les
push
jae
add
add
or
add
add
mov
add
add
add
js
push
add
xchg
add
add
cmpsl
add
add
addb
add
add
push
add
add
and
mov
add
mov
add
add
add
mov
add
out
add
xchg
add
add
add
add
add
push
add
in
add
add
add
add
aad
add
shlb
add
add
add
fs
add
add
jns
mov
add
push
mov
inc
add
add
add
adc
and
add
mov
add
add
add
add
mov
stos
jnp
add
add
nop
ja
cltd
or
add
add
add
add
and
push
add
add
out
jbe
jle
add
add
add
sub
mov
add
icebp
add
add
add
pop
add
ja
mov
add
iret
push
add
scas
movl
mov
jnp
out
sbb
add
add
popf
mov
in
and
mov
add
add
add
clc
add
add
add
and
test
add
add
imul
add
mov
rolb
inc
or
add
add
lock
add
add
push
add
add
cmp
add
jne
aaa
outsl
add
add
mov
inc
jg
add
add
imul
ss
add
cltd
add
add
sti
add
mov
xchg
inc
sbb
add
add
add
in
add
fldl
mov
add
add
add
push
out
add
testl
add
sbb
add
das
add
test
add
shlb
add
add
add
addb
add
icebp
add
add
push
add
dec
add
push
hlt
sub
mov
add
add
add
pop
sbb
in
add
sub
mov
add
sub
mov
add
add
add
xchg
add
xchg
add
xlat
enter
inc
add
in
mov
add
add
push
add
add
cmc
lds
add
add
add
and
fld
mov
loop
add
lea
cltd
add
jbe
clc
cmp
scas
cmp
or
pop
add
pop
mov
mov
cmpsb
js
sub
add
insb
inc
inc
push
add
add
int3
add
test
add
add
add
fdivrl
add
mov
xor
xor
add
rolb
add
add
cli
add
add
lea
add
cli
push
add
fidivs
xlat
cmp
add
int3
add
outsl
add
add
add
jnp
test
mov
inc
repz
mov
pop
xchg
pop
add
add
add
add
dec
das
xor
sbb
adc
add
add
add
add
sub
add
adc
adc
sub
lret
shlb
add
add
add
add
add
add
jno
in
add
insl
add
add
aaa
add
xchg
jge
add
inc
add
lods
nop
lret
mov
add
add
add
and
jbe
add
or
or
ret
add
data16
adc
add
sub
add
add
scas
add
add
add
add
add
iret
pop
add
dec
add
lods
add
add
add
lock
add
add
add
in
add
add
add
stos
add
push
fildl
inc
cmp
test
xchg
add
add
addl
add
add
add
add
cmpl
dec
push
sbb
add
add
add
inc
loopne
rolb
pop
add
roll
add
add
add
add
add
es
jle
in
add
add
xlat
xchg
imul
push
add
xlat
lcall
add
addl
pop
stc
add
add
loop
faddl
les
outsb
add
icebp
and
testl
mov
xchg
add
push
add
add
cmc
fadds
add
mov
add
fadds
mov
add
fiadds
leave
add
add
add
testb
lahf
add
add
mov
add
pusha
add
add
fildl
or
add
mov
add
cmp
in
stos
add
add
add
add
dec
jbe
fisubs
add
in
orl
add
jecxz
add
mov
mov
inc
add
or
add
add
add
add
sub
xor
cmp
inc
add
add
jne
into
add
add
add
add
add
add
and
aad
dec
add
add
add
sbb
mov
add
add
or
dec
add
add
add
lock
aad
cld
add
leave
add
add
add
adc
add
add
jecxz
aas
add
add
add
add
add
add
add
fsubs
add
repnz
add
add
roll
cltd
add
add
add
add
add
add
mov
roll
mov
add
add
add
cltd
adc
scas
add
inc
data16
add
add
add
sub
mov
add
add
add
add
jecxz
pop
test
add
add
aam
add
add
sbb
and
fistps
aas
stos
repz
inc
pop
ds
pusha
add
push
add
ret
or
add
cli
add
add
add
xchg
add
add
pop
add
daa
add
add
addb
add
add
fiadds
add
add
add
outsl
add
add
ret
add
add
lods
add
add
pop
out
add
add
add
mov
xor
das
testb
out
add
sbb
loope
std
in
stc
push
add
out
das
add
cmp
add
std
add
mov
add
add
add
jne
add
add
add
xchg
add
add
repnz
add
imul
add
shlb
xor
add
dec
lds
add
add
add
cwtl
inc
add
add
add
add
add
add
add
lret
add
add
add
add
xchg
adc
add
loope
inc
add
cmp
add
add
sub
shlb
add
adc
mov
in
add
pop
fiaddl
add
inc
pop
add
add
add
cmp
adc
add
mov
fwait
dec
mov
xchg
add
add
adc
add
push
xor
and
add
add
xor
gs
call
mov
in
add
add
repnz
lret
add
add
sub
add
add
add
add
out
add
add
add
add
add
add
mov
add
add
add
verr
cmp
inc
add
in
cltd
add
add
adc
loopne
add
nop
add
add
add
repnz
inc
add
xchg
icebp
add
add
add
add
adc
ret
add
adc
add
add
testl
lods
add
add
add
add
rolb
add
testb
mov
add
add
add
add
ffreep
insb
mov
add
add
add
add
add
lods
add
add
sub
jg
add
mov
popf
add
inc
inc
xchg
add
faddl
add
add
out
testl
popf
add
add
aaa
add
roll
add
add
sbb
add
add
add
sub
fwait
js
lods
mov
dec
orl
fiaddl
add
sbb
add
add
cmp
add
add
popf
add
movsb
add
add
out
add
pop
pop
add
or
add
add
add
cmp
add
add
add
dec
add
add
add
xor
add
jge
add
add
shll
add
add
add
add
add
add
add
add
add
add
das
add
negb
cmp
add
adc
add
fidivl
add
push
add
add
movsb
add
lret
add
xor
cmpsl
add
fwait
add
les
add
cmp
add
add
add
add
add
push
add
add
add
add
rolb
je
mov
add
add
xor
add
add
add
add
add
sub
add
cmpsl
pop
repnz
divb
lret
aas
stos
add
add
add
add
sub
add
add
add
int
dec
lock
cltd
add
add
add
add
aad
fildl
and
add
add
add
add
add
add
cmp
add
add
inc
pop
stc
add
add
call
add
add
lods
add
add
adc
push
jmp
mov
add
outsl
add
add
add
push
add
lds
add
add
add
add
add
add
add
add
add
add
add
nop
jo
add
add
add
inc
dec
lahf
add
adc
push
add
add
das
add
repz
add
add
push
add
ja
out
test
add
add
hlt
add
mov
rolb
add
add
incb
ret
add
add
fwait
sub
add
add
add
add
push
add
out
test
add
push
add
cmp
or
int3
push
add
cmp
push
add
and
std
push
add
add
add
inc
bound
sub
add
add
add
add
fldl
add
add
add
add
insb
add
mov
xchg
add
add
add
add
add
add
add
mov
stc
add
jmp
xchg
aam
jg
add
add
add
add
mov
add
add
mov
js
xor
rolb
add
add
loope
add
add
add
out
add
xchg
addl
add
add
movsl
flds
repz
add
add
sub
add
add
add
add
add
mov
stos
jle
sub
add
add
add
lods
xor
testl
add
into
or
ljmp
add
cli
inc
add
add
mov
add
add
movsb
inc
xor
inc
out
add
add
push
test
aam
and
add
add
xchg
add
add
add
add
add
add
add
add
sahf
jecxz
cld
add
add
hlt
add
dec
mov
dec
jb
in
popl
add
add
add
add
and
add
xor
daa
adc
stos
adcb
add
mov
scas
sbb
cli
adc
add
loop
jo
dec
add
add
aaa
add
add
rolb
in
insb
dec
adc
add
add
add
outsb
inc
cwtl
movb
adc
add
dec
mov
add
xchg
jmp
xchg
add
aaa
add
add
xor
push
add
xchg
add
jno
push
or
cmp
add
add
add
stc
add
repnz
add
add
add
sbb
add
insl
add
add
add
mov
mov
add
iret
add
add
lahf
add
add
add
add
add
add
add
add
adc
adc
sahf
daa
add
pop
addl
fiadds
add
lods
mov
add
add
add
add
xchg
add
add
jbe
add
add
add
fldl
push
xchg
add
add
ja
cs
xor
add
add
add
push
dec
add
add
add
adc
add
popa
add
add
ljmp
add
add
add
add
in
in
add
add
dec
ss
sub
pusha
add
add
xlat
adc
les
add
add
add
add
add
add
cmp
mov
add
movb
add
in
xor
ret
add
add
add
add
add
cmpsl
add
xchg
add
scas
cmp
add
adc
inc
add
add
add
mov
cmc
add
add
sub
addb
add
add
pop
into
faddl
inc
jge
add
add
outsl
int3
outsl
ficoms
push
add
add
add
add
pop
push
add
adc
add
add
add
add
cmp
add
add
add
add
lret
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
icebp
cltd
add
add
enter
mov
add
add
loop
add
test
or
out
dec
add
jns
js
int3
add
push
add
add
ret
add
add
add
lods
add
add
add
add
add
hlt
sti
add
xchg
imul
add
add
enter
add
add
add
add
addl
cld
sub
add
aam
add
add
out
push
add
add
add
add
add
and
add
ja
adc
add
add
add
add
das
add
add
cwtl
push
add
sbb
mov
add
add
jl
flds
add
add
int3
add
add
add
add
jl
add
or
add
dec
add
daa
sub
add
add
inc
add
std
add
add
add
add
add
add
push
add
sbb
mov
dec
add
add
add
dec
push
mov
and
test
add
add
sbb
adc
push
std
push
add
add
jmp
add
loopne
add
fdivs
add
add
add
out
and
hlt
add
add
mov
cmp
add
mov
jno
dec
mov
add
add
pop
add
mov
add
or
je
int
add
xor
add
add
add
add
leave
push
add
push
jge
add
and
pusha
inc
mov
add
add
or
add
add
add
add
in
mov
add
add
outsl
add
add
add
mov
inc
add
filds
add
sub
add
add
jb
add
sub
mov
add
add
lods
xchg
sahf
pop
leave
bound
add
out
add
add
add
add
add
add
arpl
add
add
add
add
mov
lock
add
dec
add
loopne
add
add
add
faddl
nop
or
add
or
mov
add
add
add
mov
test
add
add
bswap
or
mov
add
roll
test
test
ret
add
fiaddl
add
add
dec
lods
add
add
add
add
add
add
out
add
add
or
shll
add
add
add
add
add
movsl
add
add
filds
add
add
jl
add
add
mov
add
test
add
cs
add
ja
dec
add
xorl
add
add
add
push
add
cmp
add
add
add
fldl
add
add
add
inc
sahf
and
add
xchg
add
add
pop
add
add
add
ja
push
in
add
cltd
mov
add
add
rclb
add
add
cld
jecxz
add
add
add
add
daa
xchg
into
jmp
add
ror
imul
inc
pop
mov
add
add
add
mov
add
add
add
and
mov
roll
add
add
add
aam
mov
add
outsb
pusha
adc
movl
add
movsb
or
jle
pop
cli
pop
add
add
cmp
add
add
into
dec
add
add
jl
add
jne
add
es
add
add
add
ret
add
add
push
add
cli
add
ret
add
pusha
add
jne
fldl
push
add
add
add
cwtl
add
add
rol
add
cmpsb
enter
adc
std
pop
xchg
add
mov
add
repz
adc
add
add
call
movl
add
pop
pop
loope
add
adc
in
add
mov
add
add
add
add
cwtl
scas
mov
xchg
add
es
add
insl
add
add
add
add
popf
add
adc
add
add
bound
add
aad
add
push
add
outsb
dec
stc
cwtl
out
pop
idivl
inc
lcall
add
addr16
add
add
mov
add
sbb
mov
add
add
add
les
pushf
sub
sbb
add
add
mov
mov
add
add
add
lods
call
push
push
test
mov
add
add
add
lods
int
jo
add
add
push
add
lahf
add
add
add
add
sti
sub
int3
add
add
add
add
inc
add
sahf
add
add
pop
add
ret
xchg
add
add
add
add
add
push
add
mov
add
pusha
fistpl
rcrb
add
filds
add
add
add
inc
add
clc
std
inc
sub
add
fildl
scas
sub
add
add
add
xor
pop
aas
mov
add
add
add
add
add
add
sub
add
inc
add
adcb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
nop
add
call
add
add
add
add
xchg
add
adc
add
in
add
add
add
clc
xchg
add
lock
add
add
add
add
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
xor
add
add
add
add
add
mov
xor
add
sti
sti
mov
mov
addb
mov
mov
incl
sldt
or
incl
or
xor
inc
data16
movswl
xor
incl
or
add
data16
mov
incl
mov
data16
btr
or
incl
xor
add
incl
xor
incl
add
incl
ud0
incl
incl
int3
rorb
incl
push
and
int3
sar
incl
push
mov
incl
ljmp
mov
incl
inc
cs
and
add
add
dec
out
out
in
and
incl
dec
loop
in
ret
incl
cld
sub
out
sar
incl
push
clc
mov
incl
jmp
cli
and
lock
add
add
pop
jmp
das
push
clc
add
add
pop
push
incl
pop
push
clc
add
add
add
push
addb
add
add
push
add
add
add
pop
ja
ja
ja
ja
ja
add
cld
pop
clc
ud0
rolb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
add
add
add
and
add
add
add
call
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
ja
insb
add
je
je
sub
add
imul
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
jae
imul
and
push
add
jo
outsl
add
imul
jb
jns
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
and
xor
xor
xor
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
