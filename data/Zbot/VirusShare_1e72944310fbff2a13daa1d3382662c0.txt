in
int
lahf
jmp
xchg
adc
loope
mov
pop
push
cs
out
test
sbb
jge
sub
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
icebp
push
mov
jns
or
clc
mov
daa
or
and
int3
ret
pusha
mov
pop
xchg
insb
mov
cld
cmp
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
lods
mov
test
mov
ljmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
mov
add
push
pop
xor
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
add
mov
test
mov
fstpl
pop
cmp
and
data16
jp
xor
and
movsl
in
icebp
adc
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
or
jae
fstps
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
rcll
inc
ja
test
divl
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
or
push
loope
fcomp
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
sarl
mov
stos
out
and
pop
repz
cmpsb
and
scas
cld
dec
or
shlb
xchg
or
cmp
mov
inc
fnstsw
test
inc
mov
jno
and
add
lock
dec
xchg
cmc
cmp
xlat
push
inc
push
cmp
jg
lea
cwtl
pushf
inc
adc
sbb
jecxz
pop
and
or
cmpsl
fwait
orb
adc
xorl
sbb
mov
inc
push
pop
clc
sbb
sub
pushl
pop
lods
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
push
pop
jge
xor
popf
call
int3
adc
add
test
add
mov
and
add
and
add
and
add
and
add
and
add
add
and
add
add
scas
and
add
and
add
and
add
and
add
add
pop
and
add
add
add
add
and
add
and
add
and
add
add
andb
add
and
add
and
add
and
add
add
push
and
add
add
dec
and
add
add
add
add
shlb
add
mov
add
add
and
add
and
add
and
add
add
add
test
add
in
and
add
add
add
and
add
add
in
and
add
and
add
and
add
and
add
and
add
add
and
add
add
scas
and
add
and
add
and
add
and
add
add
pop
and
add
add
add
add
and
add
and
add
and
add
add
andb
add
and
add
and
add
and
add
add
push
and
add
add
dec
and
add
add
add
add
shlb
add
mov
add
add
inc
gs
je
imul
push
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
add
je
outsl
imul
jbe
jae
add
add
fs
imul
add
icebp
add
imul
jb
je
arpl
add
aad
inc
gs
jb
jbe
push
jns
gs
add
add
fs
je
insl
inc
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
fs
outsl
outsb
jae
insb
gs
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
fs
je
insl
push
add
inc
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
rolb
dec
gs
jo
gs
jb
jns
add
je
imul
bound
gs
add
dec
add
insb
outsb
push
add
mov
push
insb
gs
roll
dec
gs
jo
imul
inc
outsl
jo
inc
imul
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
imul
jb
gs
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
push
add
test
add
cmp
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
int3
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsl
movsl
pop
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
lcall
jg
add
add
xchg
add
mov
inc
mov
leave
lret
into
int
rcl
shr
rcl
shl
iret
rcl
hlt
int3
int
hlt
enter
enter
mov
mov
mov
mov
stos
stos
lea
fwait
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
leave
lret
lret
rcl
cld
xlat
fcom
std
fcomp
fcom
aam
aad
iret
ror
dec
int
aam
dec
ror
inc
ret
mov
mov
lods
iret
movsb
movsb
mov
dec
das
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
mov
leave
leave
lret
dec
iret
iret
aad
aad
fcom
call
fcom
call
dec
int3
into
dec
int
call
dec
into
int
rol
mov
mov
lods
std
cmpsb
cmpsb
cmpsb
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
dec
add
push
add
push
or
inc
or
sbb
push
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
int
rcl
sar
fcom
call
fcom
call
aam
dec
into
into
dec
lret
into
int3
into
inc
mov
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
popa
or
imul
pop
pop
pop
fs
sbb
or
push
sbb
aaa
cmp
aaa
cmp
sub
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
inc
leave
call
rcl
call
aad
call
aam
call
rcl
dec
leave
inc
mov
ret
mov
mov
ljmp
movsb
mov
cwtl
cwtl
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jge
jle
jle
jge
jno
jo
bound
mov
cmp
cmp
mov
outsb
jo
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
lret
dec
leave
leave
inc
mov
mov
mov
ljmp
movsb
mov
call
xchg
xchg
cwtl
xchg
xchg
cltd
fwait
lcall
cmp
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
jo
pop
pop
pop
or
jp
xchg
mov
incb
jp
jl
jnp
jo
outsl
out
push
fdivs
jne
jle
jle
js
js
fs
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
popf
pushf
popf
call
xchg
decl
xchg
xchg
sahf
sahf
lahf
sti
mov
xchg
xchg
mov
jp
jns
cs
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
lcall
mov
cmp
mov
mov
jle
jg
jb
jo
jae
jae
jg
jg
addl
addr16
cmp
and
and
jge
jg
cltd
fwait
cltd
lea
test
sti
lods
lods
lods
stos
lods
lods
test
movsl
mov
xchg
xchg
xchg
decl
jle
jp
js
jl
jnp
xchg
cwtl
movsb
mov
scas
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
push
push
push
xor
inc
dec
imul
test
leave
cltd
lcall
fwait
lcall
mov
mov
mov
mov
mov
fwait
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
lods
test
add
adc
test
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
popf
popf
sahf
std
movsb
movsl
movsb
stc
mov
xchg
xchg
in
nop
nop
in
test
jne
prefetchw
add
or
or
daa
daa
sub
dec
dec
data16
jb
xchg
xchg
rclb
xchg
xchg
std
lea
call
mov
test
stos
test
scas
pushl
lahf
scas
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
les
fwait
decl
mov
call
nop
nop
xchg
xchg
xchg
sahf
pushf
pushf
movsl
movsl
movsb
test
mov
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pushaw
bound
jb
jae
jl
jge
test
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
xor
js
mov
cmpsb
mov
mov
stos
stos
mov
mov
add
shll
adc
mov
lcall
mov
call
xchg
xchg
call
xchg
cltd
fwait
cltd
pushf
pushf
popf
sahf
mov
movsl
std
movsb
movsb
movsl
stc
cwtl
lcall
nop
xchg
les
cwtl
fwait
in
xchg
xchg
out
lea
nop
stc
xchg
xchg
std
xchg
jae
cltd
imul
ljmp
jns
mov
jae
mov
insl
ljmp
adc
lods
or
ljmp
jg
mov
mov
stos
pushf
movsl
movsb
movsl
and
add
add
mov
add
pusha
adc
mov
lcall
xchg
xchg
call
fwait
fwait
lcall
mov
lcall
xchg
xchg
call
xchg
xchg
call
xchg
lcall
cltd
mov
cld
popf
mov
xchg
imul
xchg
dec
jns
lcall
sahf
push
addr16
mov
adc
ljmp
adc
stos
adc
scas
adc
mov
imul
mov
insb
mov
lcall
lods
scas
scas
scas
mov
movsl
movsl
add
add
add
add
add
pop
pop
adc
mov
jmp
xchg
xchg
lcall
lahf
jmp
movsb
mov
call
decl
addl
jbe
lcall
xchg
dec
jp
xchg
cmp
call
push
decl
or
call
add
lcall
ljmp
sbb
mov
outsb
pushl
sbb
jae
mov
and
shlb
inc
inc
test
les
mov
mov
sahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
movsb
ljmp
test
ljmp
cmpsb
cmpsb
lcall
orb
mov
decl
sub
mov
decl
or
push
incl
add
mov
pop
call
add
cltd
add
lahf
add
cmpsl
or
mov
outsb
pushl
sub
mov
sub
les
jnp
les
inc
das
cmp
inc
mov
leave
scas
inc
mov
mov
movsb
movsl
mov
add
add
add
add
add
push
adc
test
ljmp
popf
jmp
stos
test
stos
lods
stos
ljmp
mov
ljmp
mov
mov
mov
incl
or
push
incl
add
test
push
incl
add
add
popl
push
call
add
lahf
add
add
scas
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
sahf
lcall
lods
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
mov
add
lods
add
jno
ret
dec
inc
dec
inc
call
inc
call
inc
nop
fmuls
call
dec
xchg
fimull
fisttpl
fistl
call
test
std
mov
mov
movsb
movsl
movsb
arpl
mov
add
add
add
lcall
adc
jl
movsl
popf
mov
lcall
stos
test
pushl
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
xchg
sbb
mov
decl
or
mov
push
decl
add
popf
add
add
cmpsb
add
test
popa
pushl
and
dec
dec
call
push
cwtl
fcoms
fsts
fstpl
ficomps
ficomps
jmp
pop
mov
jmp
pop
lahf
fadds
mov
cmpsb
jne
sahf
sahf
or
xchg
xchg
xchg
add
adc
ja
lahf
cltd
sahf
jmp
sahf
fwait
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
and
xchg
and
push
call
or
decl
add
lcall
ljmp
add
mov
data16
mov
xor
fcomps
fisubs
fisubs
jmp
cmpsl
jmp
gs
out
cmpsl
jmp
test
addr16
dec
mov
mov
mov
lahf
mov
add
add
add
inc
inc
adc
jae
cltd
xchg
lcall
pushf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
xor
fwait
das
outsl
call
sbb
pop
call
add
mov
add
lods
add
mov
pushl
movd
roll
jmp
outsb
lods
jmp
jo
jmp
jb
jmp
je
in
jne
out
jbe
in
jbe
out
jb
jmp
xchg
mov
cmpsl
test
lahf
lahf
mov
add
jge
ds
insl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
aaa
je
lahf
xor
lcall
call
add
add
stos
add
mov
popa
pushl
add
enter
fsts
jecxz
mov
call
jge
jmp
mov
out
cmpl
push
test
push
cmpl
call
mov
inc
mov
stos
cmpsl
sahf
popf
pushf
daa
sahf
lahf
sahf
add
add
add
pusha
add
xor
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
inc
ret
ret
pushl
insb
mov
lcall
jmp
jbe
fwait
pop
arpl
xchg
add
popf
add
movsb
add
add
scas
add
add
add
ret
add
call
daa
cmp
movsl
call
mov
push
sar
nop
ret
push
nop
ret
push
xchg
xchg
ret
clc
xchg
push
ret
mov
fnstenv
ret
clc
stos
lods
stos
mov
pushf
popf
xor
sahf
add
add
add
inc
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
mov
xchg
lcall
cmp
mov
push
popa
lcall
add
add
lods
add
mov
arpl
mov
add
movl
mov
in
xchg
ret
push
fwait
enter
lcall
cmc
lcall
cld
lahf
int
cld
popf
int3
sti
cltd
lret
push
xchg
ret
fidivs
enter
mov
sahf
lahf
sahf
aas
nop
xchg
popl
fwait
fwait
fwait
add
add
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
ret
inc
vshufps
mov
lahf
jmp
push
xchg
scas
dec
xchg
mov
or
add
add
add
mov
arpl
mov
add
leave
add
or
filds
in
lea
push
movsb
into
push
cmpsb
int
clc
cmpsl
int
cli
cmpsl
sar
cld
cmpsb
sar
sti
cmpsl
into
cld
stos
iret
cld
stos
iret
test
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
cltd
cltd
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
jne
jb
mov
mov
mov
inc
mov
enter
rol
mov
test
movsl
push
test
scas
push
mov
scas
dec
test
mov
add
movsl
add
lods
add
mov
arpl
mov
add
into
add
add
loopne
jl
in
pop
cmpsl
push
sahf
lret
cld
lods
aam
cli
mov
sti
scas
aam
cli
mov
mov
cld
mov
std
mov
std
mov
pushl
sar
mulb
call
lret
mov
mov
sahf
mov
xchg
or
add
add
xor
add
dec
dec
outsb
jo
mov
aam
xlat
jmp
fdiv
rcl
sar
int3
into
int
leave
lret
leave
lret
leave
leave
lret
mov
ljmp
push
mov
lods
cmp
jmp
add
add
mov
arpl
mov
add
roll
jo
fadds
jb
filds
jne
jmp
jae
cld
lods
sar
std
mov
fcos
std
mov
fcos
mov
xlat
cld
mov
fcos
mov
xlat
clc
mov
call
leave
int
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
movb
loop
out
out
in
in
loop
loope
fsub
fsubp
fdiv
xlat
fcmovu
cli
aam
fdivr
into
iret
into
mov
push
cmp
sub
mov
add
mov
popa
mov
add
lret
add
add
faddl
jbe
jecxz
jbe
out
das
xchg
clc
mov
sti
mov
loopne
std
std
std
loopne
dec
fdivrp
dec
std
enter
leave
dec
loopne
cli
mov
leave
call
lret
sar
mov
mov
xchg
adc
add
add
incb
std
std
add
incl
hlt
div
or
in
jmp
in
out
in
sub
out
in
dec
call
jmp
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsb
cmp
movsb
adc
jmp
add
mov
arpl
mov
add
int3
add
xlat
add
fiadds
js
ljmp
sti
mov
loop
std
lret
dec
out
std
into
in
dec
in
std
int3
loope
std
int
std
shl
call
loop
call
in
shl
sti
in
mov
inc
ret
out
cmpsb
cmpsl
cmpsl
mov
cwtl
cwtl
add
add
add
incb
incl
cmc
clc
testb
repnz
hlt
icebp
push
out
lock
in
icebp
out
cmp
out
out
pop
fsubp
loop
mov
xchg
sti
mov
push
pop
jmp
add
mov
gs
add
movl
jo
fildl
je
jecxz
jnp
in
adc
negl
cld
mov
dec
out
dec
in
call
call
std
shl
call
call
std
call
fldl2e
shl
push
ret
aam
jecxz
lret
repz
test
xchg
xchg
xchg
and
cwtl
cwtl
add
std
cld
add
cld
stc
add
cli
cli
add
div
or
aad
xor
je
negb
add
add
scas
add
mov
add
lret
add
roll
jb
fldl
jbe
out
ja
out
sbb
push
je
cli
std
fsubr
std
fldl2t
fldpi
fucomi
std
fldl2e
fucomi
std
fucomi
fucomi
fsubrp
std
fsubrp
fsubrp
shl
push
aam
out
ror
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsb
jo
xchg
xchg
xchg
add
loopne
add
mov
cwtl
repnz
pop
push
jmp
add
mov
add
int
insl
call
add
loopne
jae
call
sub
cld
shl
std
fcomip
fsubr
fucomi
fucomi
call
jmp
cld
aam
cli
shl
cli
shl
push
into
clc
lret
fdivrp
test
int3
call
xlat
sti
mov
mov
fwait
cltd
lcall
lcall
mov
mov
add
leave
adc
lods
mov
lcall
add
mov
arpl
mov
add
iret
add
add
loop
jns
jmp
xor
sti
leave
cld
int3
loop
sti
idivl
sar
repz
iret
push
mov
into
ljmp
ljmp
cli
call
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
int
add
mov
cmpsb
loopne
ss
mov
add
mov
addr16
mov
add
into
pop
jb
rorl
ficoml
jns
loopne
cmp
inc
cwtl
ljmp
call
scas
leave
std
loope
cld
fidivs
neg
mov
enter
into
in
enter
rcl
shl
aad
out
loopne
in
in
test
out
out
popf
ljmp
push
stos
lods
lods
adc
cmpsb
cmpsl
test
sahf
lahf
mov
add
lahf
stos
aam
dec
cmp
sbb
test
imul
and
jns
mov
dec
xchg
ret
push
mov
lret
test
mov
out
mov
mov
enter
int
ror
int
int
mov
fcom
aam
fcmovu
gs
in
call
out
in
xor
div
mulb
icebp
lock
fstp
or
mov
int
mov
add
mov
mov
mov
les
insb
mov
test
xchg
ljmp
mov
sarb
mov
ret
cmpsl
enter
lret
ret
int
lret
jp
int3
iret
addr16
iret
push
rcl
rorl
xlat
xlat
inc
aam
aam
fcmovnu
daa
fistpl
fneni(8087
fstl
fsubp
jecxz
loope
in
call
repnz
add
sti
testl
incb
std
std
add
mov
mov
mov
stos
mov
mov
mov
mov
mov
rcll
lds
enter
int3
lret
ror
and
rcrl
rcl
rcll
rcl
rorl
rcr
aam
rcr
fadds
fstp
add
add
jecxz
add
in
jmp
lret
aam
std
std
add
mov
add
ret
ret
sub
ret
ret
mov
mov
push
rol
or
enter
leave
movl
lret
roll
rcl
aam
rcr
aam
aam
aam
xlat
aad
add
add
aam
add
loopne
add
fstp
add
out
add
icebp
icebp
add
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
mov
mov
mov
ja
test
dec
test
test
pop
add
add
add
add
add
add
scas
mov
adc
sarb
into
ror
jmp
rcl
cmc
aam
sar
ror
iret
cli
int3
int3
int3
stc
int3
int3
int3
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
into
aad
call
xlat
call
ror
dec
iret
into
dec
int3
lret
mov
mov
stos
icebp
cltd
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
je
jae
jae
gs
inc
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
aam
aam
int3
lret
mov
inc
rol
mov
mov
stos
test
sahf
lahf
sahf
xchg
xchg
cwtl
jmp
outsl
outsl
xchg
push
pop
push
dec
add
add
add
add
add
add
addl
test
imul
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
mov
ret
mov
mov
mov
jmp
fwait
pushf
call
xchg
xchg
cltd
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
popf
cwtl
lcall
addb
jge
jl
js
js
jp
jp
jns
jns
jb
jae
push
push
push
cmp
je
sahf
sahf
sahf
mov
scas
lods
repz
scas
lods
sti
scas
lods
scas
std
cmpsl
test
pushf
call
test
call
mov
scas
jmp
scas
lods
leave
movsl
movsb
movsb
cltd
jb
je
adc
adc
add
add
add
add
outsl
insl
insl
pop
nop
mov
loop
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
outsb
outsl
orl
cwtl
lcall
mov
xchg
xchg
xchg
lcall
cmpsb
test
mov
scas
std
mov
scas
mov
xlat
cmpsl
movsb
cmpsl
pop
addb
add
add
add
pusha
or
lods
mov
cmpsl
lahf
movsl
decl
mov
mov
xchg
std
sahf
sahf
sahf
sti
sahf
mov
cwtl
call
push
push
push
jo
pop
pop
outsl
imul
jg
subl
xchg
mov
ljmp
jg
pushl
pop
mov
jge
mov
scas
stos
insl
stos
stos
test
add
add
add
popa
or
mov
in
mov
nop
call
xchg
xchg
lcall
cwtl
cltd
lcall
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
jle
popf
dec
jnp
mov
ss
mov
je
scas
pop
outsb
ljmp
sbb
pop
mov
mov
jle
movsl
movsl
push
pusha
pusha
pusha
or
mov
lcall
sahf
sahf
jmp
lahf
lahf
call
mov
xchg
jns
std
xchg
jae
cld
xchg
pop
cmp
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
adc
mov
pop
ljmp
pushl
sbb
mov
and
pop
nop
mov
scas
scas
xchg
popf
sahf
lahf
adc
add
add
pop
pop
pusha
or
stos
mov
stos
mov
lahf
ljmp
stos
stos
jmp
xchg
cltd
decl
cmp
mov
decl
adc
or
mov
call
add
fwait
add
test
arpl
mov
jae
mov
jle,pn
lds
jge
das
cmp
lret
inc
stos
mov
mov
mov
test
test
add
add
add
pusha
or
movsl
test
test
cmpsb
cmpsl
pushl
mov
pushl
cwtl
lahf
decl
adc
mov
push
incl
add
decl
add
xchg
add
mov
add
mov
outsb
inc
cmp
dec
inc
mov
aam
call
inc
xchg
call
bound
stc
mov
mov
mov
std
incl
add
add
pusha
pusha
pop
or
sahf
mov
ljmp
mov
mov
mov
mov
mov
jnp
nop
push
popa
call
push
pop
decl
add
add
sahf
add
add
scas
add
mov
dec
xchg
fstps
fistpl
jmp
pop
sahf
jmp
pop
mov
fildll
lret
test
cld
mov
mov
movsl
stos
cmpsb
xor
add
add
dec
pop
jl
jl
fwait
xchg
lcall
scas
mov
mov
mov
mov
mov
mov
mov
sub
lcall
and
xchg
adc
xchg
add
lahf
add
cmpsl
add
scas
add
mov
xor
jmp
outsb
test
ljmp
in
jno
jmp
js
call
test
mov
cmpsl
test
addb
add
dec
dec
dec
pop
insl
insl
push
mov
xchg
pushl
mov
mov
mov
je
lcall
cmp
popf
sub
cwtl
or
fwait
add
mov
add
mov
fs
or
aad
xchg
jmp
js
jmp
cmpl
hlt
xchg
out
mov
mov
test
push
cltd
fwait
lcall
sub
push
push
dec
pop
imul
mov
mov
mov
mov
ret
inc
mov
popf
jmp
inc
cmp
sub
cltd
pop
pop
jmp
add
mov
fs
mov
push
ja
fbld
in
xchg
mov
push
cltd
push
cwtl
enter
leave
sti
lcall
jecxz
mov
lods
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
mov
test
cmpsb
push
mov
lods
dec
cmp
and
mov
add
mov
mov
add
fisubl
cmp
jl
push
mov
into
cli
test
sar
cld
stos
sar
cld
stos
sar
stc
cmpsb
lret
jmp
mov
inc
rol
test
pushf
sahf
or
add
add
dec
dec
dec
aaa
jae
jb
stos
stos
test
out
iret
int3
cmc
leave
lret
int3
sti
enter
enter
mov
pusha
mov
stos
inc
jle
mov
add
mov
gs
add
into
add
fiaddl
clc
xchg
std
mov
cld
mov
std
mov
xlat
cld
mov
fdivr
std
mov
lret
ret
scas
lods
scas
mov
add
add
add
add
pop
or
aam
dec
loopne
loop
loope
fstp
fadd
fcmovnu
aad
out
mov
data16
test
jae
movsl
push
pusha
ljmp
add
leave
add
aad
je
in
jnp
lock
mov
cld
std
inc
loopne
dec
dec
fdivrp
dec
loope
std
lock
leave
divb
sahf
sahf
sbb
add
add
std
incl
incb
ljmp
in
in
in
xor
loop
in
mov
mov
mov
add
mov
inc
add
int
outsb
fildl
jne
ljmp
cld
cld
shl
call
out
std
shl
call
in
call
call
aam
push
enter
int3
sar
mov
mov
add
std
incl
std
std
add
std
std
pop
aam
aam
mov
pop
xchg
sahf
or
pop
pushl
add
roll
outsl
filds
jbe
out
and
cld
shl
fucompp
fldl2t
std
fldl2t
std
xlat
out
std
fld1
std
xlat
call
push
enter
iret
sti
mov
popf
lahf
das
add
add
int3
into
int3
or
bound
stos
add
mov
add
aad
jno
loope
js
out
xor
stc
int3
loope
cli
lret
test
repnz
xlat
repz
lock
sar
out
sar
in
vpsadbw
in
fsubr
mov
test
add
add
add
aad
mov
jae
or
mov
insl
inc
sbb
int
jnp
sub
sti
ficoms
clc
in
mov
out
jecxz
leave
jmp
fdivrl
int3
leave
ffreep
sarb
jecxz
fcompl
in
call
rorl
mov
add
stos
lods
lods
add
xchg
mov
ljmp
nop
fidivrl
jg
rol
lods
mov
lahf
mov
shll
leave
jge
int
aad
int
rcl
iret
dec
fcomp
xlat
cmp
das
in
frstor
loop
icebp
adc
jmp
or
std
incb
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
aam
mov
rcl
or
loopne
or
int
add
std
add
std
add
add
add
int3
into
pinsrw
or
int3
int
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
enter
mov
mov
mov
mov
insb
lods
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
aam
rcl
sar
int
into
std
mov
mov
test
test
jle
andb
push
add
add
add
add
add
add
add
add
jb
jno
addr16
dec
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
into
call
aad
dec
int
dec
enter
mov
lcall
mov
push
add
add
add
add
jne
jne
xchg
adc
arpl
mov
push
outsl
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jb
and
add
pop
add
add
jae
jb
fwait
xchg
fwait
mov
test
clc
xchg
test
addb
dec
push
dec
inc
mov
popf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
stos
mov
mov
mov
cld
pushf
sahf
popf
cmc
cltd
cltd
cwtl
in
test
push
imul
jge
xchg
aam
lea
lcall
pushl
imul
call
stos
lods
stos
add
add
add
mov
scas
test
cld
xchg
xchg
xchg
lcall
cltd
lcall
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
fs
push
jl
lcall
ljmp
pop
jno
mov
insl
pushl
popf
lods
lock
mov
imul
int3
add
test
pop
lods
movsb
lods
test
popf
popf
popf
jmp
movsl
cmpsb
call
jge
mov
decb
das
imul
xchg
adc
xchg
or
or
scas
sbb
mov
es
ret
inc
aas
xchg
mov
scas
mov
stos
test
add
jg
jne
mov
mov
cmpsl
ljmp
mov
lcall
sub
adc
xchg
push
decl
add
add
mov
adc
ret
dec
aas
mov
rolb
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
test
mov
scas
pushl
mov
ljmp
cmp
xchg
sbb
pop
decl
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsl
call
fwait
mov
test
test
pop
add
add
popa
arpl
mov
lcall
mov
mov
lcall
jno
lcall
jmp
add
mov
dec
xor
jmp
jp
out
jge
push
jle
ficompl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
ret
mov
jmp
jge
mov
add
pop
pushl
outsb
fmull
in
lea
hlt
xchg
push
cwtl
leave
clc
xchg
enter
mov
movsl
movsb
sub
aas
inc
inc
adc
push
xchg
mov
cld
ret
inc
mov
cwtl
ljmp
sbb
movsb
add
mov
fs
add
aam
ja
jmp
scas
clc
cmpsb
int
clc
stos
sar
cld
lods
sar
cld
scas
sar
scas
sar
ljmp
fldenv
std
incl
xor
outsl
outsl
inc
scas
mov
mov
aam
aam
aad
rcl
shr
lret
enter
mov
jmp
add
add
aad
jae
out
test
stc
mov
cld
mov
fdivr
cld
rcr
std
rcr
std
rcr
lock
shl
cmpsl
cmpsl
dec
jg
addb
add
add
in
in
or
call
in
outsb
fcmovu
fldenv
mov
add
mov
add
faddl
cld
mov
cld
into
in
std
shl
shl
aam
shl
push
leave
fdivr
aam
into
in
scas
scas
lods
popa
jg
addb
add
std
std
std
add
std
incb
int
shrl
sahf
sbb
stos
add
mov
add
loope
jp
cmc
push
cmpsb
inc
loop
cld
aad
std
aad
shl
std
shl
sti
shl
push
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
insb
call
or
fistps
cmp
out
mov
shl
call
mov
shl
out
aad
call
fcmovnu
scas
push
cltd
fwait
lcall
add
add
popf
stos
xchg
inc
and
push
mov
ret
int3
int3
js
mov
fdivrs
adc
int
fmul
into
pop
fst
xlat
dec
jecxz
loope
out
call
sbb
mov
mov
cmp
mov
scas
push
mov
mov
lds
lret
sbb
fstp
bswap
into
into
or
aad
push
std
incb
jg
addl
stos
std
add
rol
incb
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
jae
pop
das
jp
mov
xchg
pop
jmp
sub
and
jb
xor
lds
pop
push
push
or
cmp
adc
and
inc
shl
loop
repz
mov
pop
dec
cmp
sahf
leave
cltd
or
pop
and
mov
ds
loope
into
shlb
mov
push
jnp
inc
or
pusha
movsb
mov
sbb
dec
add
outsb
push
jbe
mov
jge
aas
adc
add
test
aaa
dec
movl
rcrl
inc
jle
cmc
fs
addr16
lds
ljmp
out
int
lcall
or
cs
lret
sbb
push
adc
mov
in
xor
cmpsb
jns
cli
aam
imul
dec
adc
jb
roll
pop
aam
and
movsb
pop
jae
andb
shr
fadds
dec
ljmp
fdivl
sbb
xchg
test
add
es
lods
test
fwait
add
pop
loop
fiaddl
cmp
int3
xchg
mov
pop
pop
cli
ret
xchg
rclb
xlat
int
insl
in
mull
ja
mov
mov
leave
dec
insb
sbb
cmp
or
addr16
mov
cli
pop
call
mulb
fwait
dec
push
add
fidivs
ficoml
jbe
lods
stos
sub
fsubp
in
add
pop
or
xchg
sbb
adc
rcr
cld
in
sub
inc
sbb
adc
hlt
cltd
jnp
sub
pop
xchg
mov
xchg
jmp
xor
es
popa
mov
inc
int3
pop
mov
enter
push
push
fbstp
scas
mov
aad
cld
jp
and
or
mov
push
inc
cli
jl
sbb
loop
mov
call
aam
jns
fmuls
imul
mov
movsl
push
inc
inc
adc
push
jo
jmp
cmp
mov
cltd
scas
mov
xor
pop
dec
lcall
mov
cvtps2pd
push
mov
pop
cmpsl
test
mov
repnz
pusha
js
andl
fmuls
jmp
mov
popf
inc
data16
pop
pop
js
out
cmc
pop
xor
dec
push
aam
pop
inc
sbb
dec
cmp
add
and
jno
ja
sbb
dec
and
test
bound
test
mov
sbb
pop
movsl
hlt
gs
das
sbb
pop
mov
pop
push
les
mov
or
sti
push
repnz
inc
sarb
inc
dec
pop
lods
dec
int
jbe
jg
sbb
adc
ds
pop
lret
adc
push
das
inc
cmpsb
arpl
ljmp
js
sub
push
out
out
aaa
mov
mov
add
aam
pusha
mov
pushf
hlt
sbbl
cwtl
or
cli
icebp
pop
jecxz
pop
push
call
or
sahf
stc
sub
and
cmp
mov
pusha
mov
bound
mov
and
hlt
jnp
sbb
sub
gs
jmp
dec
bound
les
cmp
sbb
scas
leave
xchg
in
xchg
int
clc
sahf
add
jge
negb
inc
aam
aaa
movsl
adc
cmpsl
dec
movsl
insb
mov
mov
add
xchg
fsts
mov
jbe
shlb
xor
sarb
sub
imul
xor
fisubl
jb
stc
test
mov
mov
mov
mov
repz
dec
cmpsl
ss
bound
out
lods
mov
push
loope
adc
out
and
mov
sub
xchg
or
ds
mov
mov
cmp
cmp
dec
pop
fldl
dec
add
sub
sbb
cmp
sbb
lcall
or
jnp
pop
dec
sub
clc
jge
mov
jge
sbb
shll
pop
out
mov
jo
pop
pop
lcall
das
lods
add
and
fidivrs
in
aas
int3
in
fistpl
cmp
add
mov
outsl
insb
xchg
xor
xchg
mov
pop
push
mov
rcl
pop
cmpsl
stos
mov
xor
xor
and
inc
aaa
fdivrl
and
mov
movsb
repz
imul
xchg
inc
les
inc
mov
lods
lcall
stos
mov
jg
aam
popa
jbe
rorl
push
inc
inc
fnstcw
sahf
cld
repnz
inc
push
icebp
xor
jbe
andb
mov
sarb
cmc
or
mov
data16
push
aam
test
ljmp
dec
adc
je
test
push
outsl
ja
orb
add
xlat
xchg
es
jge
inc
mov
je
push
mov
mov
inc
scas
ljmp
test
lret
mov
push
je
add
xchg
test
jp
scas
mov
popf
mov
push
mov
add
fists
int
jbe
fsubrs
push
out
cli
outsb
sbb
jl
or
daa
pop
fwait
lds
dec
sbb
ds
das
cmp
pushf
negb
ja
or
mov
jo
iret
dec
ss
lods
daa
xchg
out
jns
sbb
mov
jnp
test
cmpsb
push
int3
sarl
daa
rolb
out
pop
data16
xor
xor
mov
push
mov
fcmovbe
outsb
or
hlt
mov
sub
adc
mov
xor
fcmovnbe
xor
add
ds
and
pop
repz
test
jp
ror
jns
sti
hlt
cwtl
xor
pop
mov
dec
mov
ret
hlt
add
lea
adc
adc
mov
lods
enter
lret
lret
sbb
cli
xchg
push
cmp
jmp
jo
jo
rclb
and
dec
or
jno
lahf
pop
sbbl
repnz
ss
scas
inc
push
push
mov
fsubrl
dec
arpl
orb
jl
sbbl
iret
hlt
lahf
idivl
std
cltd
popl
jae
push
movsl
lahf
xchg
or
icebp
out
rclb
dec
dec
push
or
iret
add
sub
dec
popa
clc
orb
andb
mov
hlt
popf
clc
and
inc
orb
cltd
push
lods
lret
xlat
and
xor
sbb
add
aas
push
xchg
jne
test
pminub
xchg
sub
cmp
lret
jg
cmp
mov
pop
out
jo
and
jbe
cs
mov
sbbl
dec
loopne
jbe
arpl
push
popf
rclb
aad
add
dec
and
fs
xlat
sahf
xchg
push
fnstenv
lds
or
push
mov
jo
int
or
mov
gs
inc
adc
std
movsl
sbb
push
push
lods
dec
idivl
shrl
jno
lret
mov
ret
push
jmp
int
jno
inc
out
xchg
sub
imul
inc
out
xchg
shlb
bswap
arpl
out
test
arpl
adcl
mov
sarl
dec
fisttps
pop
inc
fmull
arpl
fiadds
sbbl
or
test
rclb
mov
jne
stc
sar
xchg
add
jg
sbb
stos
sarl
sbb
and
cmp
mov
jmp
lcall
lods
inc
lret
mov
mov
fbstp
adc
in
jo
xchg
cs
add
dec
mov
and
push
ss
shlb
icebp
mov
push
in
mov
adc
push
or
xor
imulb
xchg
sub
adc
scas
inc
mov
insb
add
ror
andl
scas
inc
dec
mov
into
mov
testb
adcl
mov
stos
cmc
ret
int3
data16
repnz
add
cmpl
sub
push
adc
xor
push
aad
mov
stc
in
jl
push
add
test
adc
or
mov
int
or
jl
repz
inc
push
popf
xor
or
xor
ja
arpl
imul
adc
loopne
xor
in
test
push
lcall
js
jnp
jecxz
mov
mov
or
or
mov
mov
cli
or
add
cwtl
mull
mov
xchg
pop
aas
scas
dec
loope
pusha
fbstp
mov
lds
arpl
adc
aad
mov
je
pop
mov
push
sarb
cmp
cli
dec
lods
inc
cmp
shrl
xchg
jae
or
xchg
sub
mov
jne
xor
push
xchg
cmpsl
jp
cmp
icebp
scas
and
inc
cmpsl
jp
repz
dec
jge
dec
loop
daa
mov
insb
mov
int
dec
mov
ret
in
pusha
lods
test
roll
icebp
popa
jmp
or
push
testb
test
mov
icebp
inc
shlb
out
xor
cmp
pop
jmp
fwait
sbb
pop
ss
xlat
das
pop
sub
and
and
jb
stos
push
mov
lcall
dec
mov
lahf
lea
outsb
mov
movsb
cmp
dec
cmp
dec
dec
pushf
dec
in
insb
jecxz
sahf
out
ja
and
repz
inc
mov
lods
inc
xchg
mov
leave
push
or
jp
arpl
ljmp
pop
fisttps
mov
aaa
xor
pop
js
dec
dec
push
jns
push
dec
mov
jl
inc
mov
mov
rcll
sahf
xor
dec
outsb
mov
scas
lahf
insl
rclb
test
jne
das
out
push
xchg
sti
cmc
mov
adc
jmp
inc
rolb
inc
sarb
dec
loope
and
cmp
lret
lldt
mov
jns
hlt
fmul
callw
sahf
jbe
ret
xchg
jae
xor
in
test
cwtl
das
js
jle
fstpl
in
test
fbstp
in
cmp
mov
mov
push
movsl
out
cs
lret
push
and
stos
aas
push
shlb
dec
enter
xchg
imul
clc
ret
dec
ret
pop
mov
ljmp
ss
ja
out
dec
cwtl
push
call
mov
jne
xchg
push
push
popa
clc
push
jbe
adc
inc
faddl
add
dec
bound
outsb
test
insb
pop
jbe
jo
lock
xchg
ljmp
inc
jl
pop
mov
test
jnp
xor
pop
test
int3
arpl
es
ss
pop
repnz
push
into
arpl
and
addl
or
and
loopne
jb
fiaddl
out
push
sti
mov
or
sub
sub
addr16
xchg
sub
pop
fwait
xor
lret
enter
out
jp
mov
cmp
push
mov
lock
xchg
mov
std
fdivs
test
loope
mov
in
cld
xchg
mov
xor
mov
or
add
out
and
int
jne
lods
mov
jo
xor
les
xor
xchg
xor
xor
movsl
ficoms
daa
in
cmp
scas
cmp
int
out
mov
pop
sbb
shrl
cmp
xchg
addb
sar
fnstenv
fnsave
ret
pop
sets
or
mov
sbb
gs
scas
xchg
xchg
add
testb
xor
iret
data16
sub
fidivrs
ror
icebp
or
fldl
ret
pop
jb
jge
in
cwtl
sbbb
or
gs
xor
sub
test
negb
addr16
pop
fnstenv
rcl
faddp
mov
push
mov
hlt
scas
push
out
cltd
repnz
mov
inc
fcomp
out
jno
pop
out
dec
loop
test
jnp
ds
cmp
popf
daa
mov
shlb
adc
pop
mov
mov
sbb
cmpsb
cmp
pslld
inc
mov
add
xor
pop
cld
dec
lods
or
les
xor
test
mov
jno
movsl
cmp
xchg
test
mov
mov
insl
sub
pusha
mov
jns
push
stos
jg
jbe
dec
dec
enter
dec
fnsave
jge
xchg
sub
xchg
movsl
cmp
out
fs
fstl
pop
xor
inc
push
loop
cmp
adc
bound
insl
add
subl
mov
lock
mov
loopne
cltd
cli
xchg
sub
adc
adc
adc
dec
cmp
nop
imul
jge
sub
lods
xchg
in
das
into
xor
fcoms
sub
ss
mov
ja
sub
dec
or
js
insl
pusha
mull
push
jmp
in
filds
ret
or
sbb
idiv
addr16
jecxz
cmp
push
add
lds
jnp
push
xchg
adc
xor
sub
mov
imul
js
lret
inc
mov
daa
fisubs
fidivl
pop
xchg
sub
pop
cmp
lret
notb
xchg
sub
inc
pop
jbe
rclb
ss
push
sub
ret
js
jno
ljmp
add
sbb
cli
push
jecxz
dec
fnstenv
push
mov
inc
jmp
stos
inc
cmp
fbstp
cmc
dec
loop
and
sbb
and
jno
imul
jo
push
ja
push
cli
xchg
inc
clc
cli
xchg
in
pop
and
push
mov
shlb
rcrb
mov
aad
cmp
mov
fiaddl
fstpl
add
outsl
sti
push
ljmp
fbstp
push
fnsave
pop
or
int3
arpl
sub
xchg
xchg
sub
cwtl
int3
arpl
dec
lret
aas
scas
inc
jno
lods
inc
fs
push
ljmp
push
dec
sbb
xlat
mov
push
xchg
cs
add
jno
lock
cwtl
outsl
push
or
jne
jae
es
mov
clc
cmpsl
and
dec
pop
cmc
inc
mov
shlb
push
mov
fildll
arpl
lods
inc
pushf
xchg
push
lock
mov
push
movsb
jl
aas
inc
vxorps
push
fidivs
mov
cwtl
das
mov
jns
pushf
lock
cs
xor
scas
enter
cmc
mov
into
jne
xlat
mov
call
jle
dec
nop
daa
jno
xchg
jecxz,pn
aad
les
dec
cmpsb
in
daa
enter
out
in
sbb
lret
cmp
xor
mov
fwait
xor
daa
int3
arpl
mov
xor
push
jl
movsl
push
mov
movb
cmpl
sahf
inc
les
mov
rcrl
outsl
push
jp
mov
xchg
and
inc
push
push
roll
lds
and
adc
lods
inc
xchg
inc
int3
mov
adc
mov
fimuls
sbb
call
cmp
pop
scas
sbb
fnstenv
cmp
cmpsb
cmp
repnz
data16
daa
mov
loope
inc
add
outsb
cmpsb
repz
into
mov
xchg
sub
shrl
shl
leave
pusha
sub
dec
fistps
mov
in
sub
ss
dec
movsl
cmp
aaa
inc
flds
jo
enter
cmp
sti
xchg
sbb
push
jno
jnp
xchg
lds
call
push
mov
fnstenv
scas
mov
loope
testl
leave
mov
sti
call
arpl
sub
dec
jg
orb
sub
loopne
rcl
scas
fiadds
mov
movsl
sbb
pusha
xor
jno
test
rep
jle
das
mov
jp
lret
loope
es
pop
mov
cmpsb
inc
and
lods
out
dec
sbb
adc
aad
out
fnstsw
pop
arpl
sub
fbld
mov
xlat
test
loope
adcl
xchg
lahf
lods
xchg
sbb
jae
mov
push
into
sbb
push
into
into
jno
loopne
mov
inc
cltd
xor
dec
add
ss
dec
dec
jnp
filds
aad
sbb
sahf
jge
pop
aaa
ficoms
ljmp
jae
pop
xchg
mov
sub
dec
xchg
jbe
rclb
imul
outsb
xchg
es
ljmp
or
insl
jno
sbb
cmp
flds
jmp
loope
pop
sub
in
out
mov
stos
test
adc
test
das
das
xchg
enter
cmp
dec
mov
addr16
inc
orl
pusha
jp
data16
addl
mov
dec
sub
add
js
inc
stos
cmp
jo
mov
les
xor
fcoms
jle
out
rcrb
outsb
fsubrp
sbb
add
jo
out
loope
sbb
fisubs
stc
inc
fldt
mov
push
xchg
sub
outsl
jle
aaa
lcall
sbb
in
mov
pop
mov
cmpsb
subl
inc
hlt
sbb
cmp
adc
out
add
lods
and
or
push
push
outsl
es
jno
adc
or
add
xor
and
mov
cmpsb
cmp
adc
loopne
sub
rclb
lods
idivl
cwtl
mov
je
inc
dec
ss
imul
mov
xor
dec
iret
dec
insl
addr16
xchg
sbbl
jbe
fisttpll
adc
inc
mov
decb
call
insl
add
jmp
movsb
ucomiss
xor
stc
nop
lods
imul
mov
test
mov
fdivrp
inc
in
jecxz
and
dec
push
pop
xchg
dec
scas
xchg
les
fincstp
cmp
sub
sahf
mov
idivb
mov
add
cs
add
cmp
jg
cmpb
out
inc
xchg
push
inc
jae
int3
sti
stc
test
push
rclb
clc
mov
sbb
iret
cmovp
inc
lock
shll
adc
mov
shll
int
inc
ljmp
sub
ds
mov
cmc
pushf
or
xchg
add
mov
xchg
jmp
imulb
out
cmp
push
mov
inc
dec
bound
int
mov
sbb
in
fbstp
jbe
nop
movsl
test
pop
mov
xchg
fdivrs
jnp,pn
aad
in
cmpsb
cmp
mov
push
adcl
mov
mov
pop
or
ja
daa
mov
cmp
out
or
std
or
inc
mov
loope
ret
iret
inc
out
pop
xor
cmc
js
daa
xchg
jo
xor
addb
inc
xchg
xchg
sub
sub
inc
xchg
push
stc
sahf
lahf
nop
xor
testb
jp
jl
xchg
adc
mov
popf
in
scas
and
mov
and
fsubrs
inc
mov
fwait
shrl
nop
cmp
test
add
pop
cmpw
sahf
push
or
add
mov
fdivr
test
dec
lods
dec
jne
inc
cmc
push
jp
pop
lods
test
leave
ror
gs
movsl
idivb
sbb
and
or
mov
jns
mov
dec
fnsave
sub
dec
nop
outsb
push
xchg
lock
cmp
xchg
adc
cltd
xor
sbb
dec
stc
sbb
clc
and
in
inc
lds
shrl
out
mov
xlat
and
mov
sbb
mov
mov
in
mov
lods
xor
mov
xchg
filds
cmp
inc
mov
adc
cwtl
jecxz
mov
xchg
adc
mov
imul
data16
add
add
sbb
xchg
ret
jo
mov
adc
dec
in
dec
dec
les
stos
mov
jnp
jmp
cmp
jb
shl
or
int3
adc
lods
out
inc
mov
xor
mov
mov
test
stc
js
sub
and
xchg
cld
add
mov
cwtl
mov
pop
pop
cltd
ret
sub
push
test
je
adc
lea
out
push
pop
call
and
test
cli
mov
xchg
sbb
mov
cwtl
scas
aas
mov
cs
pusha
roll
add
loope
dec
mov
xchg
push
stos
repz
nop
in
xchg
cmp
lret
sub
dec
pop
mov
les
iret
pop
imul
int3
xchg
jg
les
mov
push
in
notb
js
pop
out
push
lock
popa
clc
xchg
adc
mov
negb
xchg
in
imulb
xchg
cwtl
stc
test
and
das
push
inc
rcrl
adc
dec
dec
fdivl
insl
dec
nop
lret
mov
mov
test
cmp
pop
add
cmp
movsl
cwtl
repnz
add
fs
daa
push
and
cmp
mov
adc
pop
test
lds
or
inc
lcall
popf
aaa
fs
dec
add
adc
pop
jmp
mov
aam
into
mov
dec
daa
mov
mov
push
in
shrb
cltd
xor
nop
jns
andl
repz
or
loopne
mov
jle
adcb
push
inc
sbb
jg
xchg
xor
pop
out
mov
push
aas
sarb
out
ja
dec
push
jle
shrl
pop
mov
bound
mov
fcmovb
insb
sub
dec
push
jecxz
jbe
cli
xchg
pop
xor
aas
test
xor
xchg
push
and
dec
mov
aad
or
clc
cmc
dec
xchg
add
in
into
xchg
jbe
sbb
xchg
ss
push
out
pop
push
mov
pop
xsha1
cmpsb
mov
pop
push
mov
fisubl
pop
dec
mov
mov
icebp
jnp
mov
and
sbb
mov
pop
es
cmpsl
mov
and
call
sub
repnz
sbb
mov
cmp
pop
cmpsb
es
mov
movsl
stc
outsb
xchg
inc
nop
pop
jmp
cmp
repz
popf
add
xor
fisubrs
dec
jne
sub
fstpl
jae
dec
insb
mov
jbe
mov
xor
jl
popf
arpl
inc
or
hlt
cltd
fiaddl
lcall
outsl
push
mov
mov
cs
out
xchg
xlat
out
jnp
rcrb
mov
and
and
cld
ret
xchg
jg
or
push
sbb
mov
movsb
pop
repnz
cs
push
andl
cli
xchg
jle
mov
lods
in
in
xor
xor
loop
bound
stos
je
push
cmpsb
mov
jle
and
sub
popa
fisttpll
call
mov
or
shlb
pop
cld
fimuls
cltd
cmc
or
mov
cmpsb
insl
sub
cltd
mov
xor
inc
pushf
or
adc
jb
jmp
data16
popa
mov
js
dec
pop
inc
push
fmuls
xchg
ret
lahf
pop
dec
jns
push
cmp
mov
mov
xor
in
add
addr16
lds
push
fistps
movsl
dec
adcb
or
js
cmp
pop
cmpsb
inc
jl
enter
loop
mov
sbb
popa
dec
repnz
arpl
rol
pop
cmpsb
out
inc
scas
fcmovu
push
scas
icebp
das
inc
test
and
mov
xor
ja
xor
popa
cs
adc
pop
aam
xchg
inc
cmc
jmp
or
mov
xor
addr16
pop
jge
jmp
mov
pop
outsb
inc
ret
jp
mov
frstor
lds
fsts
ja
sub
jp
pop
lds
insl
aad
sbb
rorb
rcr
clc
movsb
sub
icebp
jecxz
dec
inc
cld
xchg
jns
xor
dec
daa
pop
ret
adc
push
pop
dec
repz
pop
dec
fdivs
xchg
inc
fnsave
loop
rorb
push
dec
xchg
insl
jb
rep
xchg
popf
jecxz
mov
mov
out
jl
std
sti
sbb
xor
aad
mov
rclb
in
mov
fwait
fs
nop
mov
fstl
sti
and
psubusb
mov
pop
stc
xchg
mov
fcomi
mov
mov
pop
insl
jge
fiadds
cmc
push
fs
call
repz
add
ret
fdivr
andl
jge
jns
adc
mov
push
cmp
sbb
adc
inc
outsl
out
and
dec
mov
data16
dec
std
loopne
fbld
arpl
cmpsb
xor
dec
ds
in
out
aas
cltd
jle
push
push
pop
jnp
loop
pop
stc
push
mov
lds
or
aad
popa
inc
push
call
add
daa
jp
inc
xor
mov
arpl
xchg
xchg
mov
inc
lahf
arpl
iret
xchg
ror
and
or
loop
or
nop
pop
sub
dec
mov
add
fmull
mov
xlat
jl
scas
sub
out
or
add
push
mov
test
popf
jg
lods
lock
iret
sbb
cs
push
pop
daa
push
inc
xlat
test
ret
adc
add
sbb
pop
xor
mov
gs
fsubr
fstpt
mov
add
mov
or
insb
out
pop
lcall
pop
lcall
and
fidivrl
push
ljmp
popf
cmpsb
imul
pop
inc
sar
ret
push
jb
push
mov
jg
mov
stos
std
jl
or
fisttps
dec
js
popf
icebp
mov
rolb
fdivr
pop
mov
ljmp
mov
shlb
xchg
js
andl
pop
or
fs
inc
mov
ret
sbb
pavgb
ss
std
cmpsb
pop
mov
or
inc
xchg
call
add
mov
pop
sub
jmp
mov
cmp
fistl
ret
mov
rorl
loopne
lret
fwait
sub
aad
or
pop
xchg
pop
xchg
cltd
int
movsl
mov
call
sub
jb
mov
fwait
push
sub
pop
test
sarb
cmpsb
adc
clc
cs
jl
inc
adc
xchg
scas
xor
out
cmp
push
jg
mov
pusha
lret
inc
in
hlt
cwtl
sbbb
lds
sti
add
and
sbb
lret
sti
dec
push
sbb
jno
add
mov
cmp
push
pop
cmp
mov
and
in
dec
jmp
and
xlat
mov
fnstcw
xor
lret
out
jnp
ds
push
gs
pop
inc
test
sbb
mov
push
popf
stos
incb
es
pop
in
adc
adcl
pop
ja
and
stos
sbb
xchg
cmp
jnp
jmp
iret
jo
enterw
stc
pop
sahf
mov
lret
xor
xlat
jle
lds
jne
ljmp
test
inc
mov
xchg
cmp
andb
inc
adc
cs
lea
cmp
or
cwtl
push
leave
out
aam
ljmp
mull
jbe
scas
xor
test
jl
mov
or
and
jns
aas
pushf
dec
out
mov
adc
sbb
adc
mov
adc
inc
iret
xchg
pop
mov
in
mov
adc
je
out
aad
pop
sahf
shrl
or
call
mov
xlat
cmp
lods
aad
mov
mov
outsb
and
push
push
jg
add
daa
call
lahf
ds
jno
xchg
mov
ret
xor
in
arpl
fisttps
xchg
add
addr16
addr16
and
push
push
inc
filds
inc
movsl
cmp
movsb
popa
loopne
inc
inc
scas
aad
mov
push
add
cmpl
sub
mov
in
xor
fiaddl
push
shrl
mov
sbb
pop
shll
pop
insb
push
adc
stos
jle
aaa
sarl
cld
dec
dec
inc
fidivl
or
inc
scas
aam
scas
stos
mov
ret
jo
xchg
push
pushf
cmpsl
inc
daa
xchg
jle
push
mov
insb
das
popf
ret
pusha
jne
inc
add
divps
btc
cmp
mov
xor
das
sub
insb
xlat
adc
jne
sbb
push
ja
cltd
jle
sub
mov
int3
jle
push
data16
mov
xor
cmpsb
movsl
mov
sahf
bound
adc
jae
jno
pop
adc
fwait
inc
xorb
lods
ret
hlt
and
bsr
push
daa
outsb
mov
mov
pop
pop
and
inc
jb
xor
mov
lods
pop
sbb
les
enter
aaa
and
ja
loopne
cmp
mov
mov
scas
addr16
xor
lds
popa
adc
mov
cs
cmp
enter
lds
bound
popf
or
jle
cmp
mov
jg
dec
xor
mov
iret
movsl
outsl
cltd
rep
lahf
gs
push
mov
or
jle
and
pusha
not
xor
lock
mov
mov
sub
pop
andl
jo
pop
mov
push
ss
add
jae
or
adc
inc
fdivp
bound
pop
fisubs
mov
or
adc
in
gs
add
lods
inc
lods
cmpsl
and
push
add
mov
popf
icebp
mov
cltd
jae
mov
cli
inc
frstor
mov
aas
push
rcrl
mov
mov
and
mov
cld
xchg
std
mov
or
dec
fisttps
andb
repnz
sbb
push
push
cmp
dec
or
fs
jns
test
or
push
jae
sbb
test
ss
or
or
or
and
fwait
push
shrl
mov
les
add
jne
xchg
inc
push
inc
jecxz
jp
addr16
mov
fwait
mov
or
add
sub
repnz
mov
xchg
add
jle
out
mov
std
ja
int
lret
push
and
dec
rcl
add
inc
shll
int
arpl
ss
aas
daa
je
inc
xor
roll
mov
inc
inc
aas
in
pop
inc
xchg
js
and
fs
adc
clc
fdivr
xchg
ficompl
or
push
sub
jmp
int3
fucompp
repnz
push
inc
fldl
ret
or
mov
fucomip
test
mov
cmp
jge
lods
inc
adc
lret
icebp
ja
in
lret
bound
xor
andb
lds
ror
arpl
jl
add
in
xorl
add
loop
sahf
xor
xor
stos
inc
iret
push
aas
out
int3
lods
sbb
cmp
test
mov
ja
test
out
and
push
in
sbb
out
dec
cltd
xor
sbb
inc
popa
sbb
adcl
pop
andl
aaa
btr
data16
les
inc
lods
je
fsubs
xchg
arpl
mov
push
sti
pop
push
les
sub
rorb
int3
cmp
nop
jp
das
in
xchg
mov
push
test
xchg
mov
ja
orb
mov
pushf
sbbl
mov
push
jo
in
push
ret
fists
test
add
mov
push
les
lret
lods
stc
test
ficoml
test
mov
and
cwtl
xchg
jns
arpl
movsl
xor
ficoms
mov
testb
mov
sub
jl
ljmp
fidivs
dec
push
out
cmp
fstpl
scas
dec
fistps
xor
sub
insb
or
inc
mov
cli
mov
shlb
rolb
fdivl
bound
rolb
jne
add
mov
sub
popa
sub
push
jo
punpckldq
jns
lea
inc
fstps
daa
pop
mov
pop
cwtl
das
dec
test
and
dec
mov
lods
pop
and
xchg
cmpb
ret
testl
leave
jae
in
test
lods
loope
sti
pop
cmc
sbb
dec
lcall
dec
pop
fidivl
fisubrl
mov
mov
mov
jno
jmp
pop
sbb
ds
add
xorl
in
add
pop
mov
xorl
shr
cwtl
out
sbb
push
jae
inc
in
fldcw
cmc
fsubs
test
lods
inc
mov
jmp
pop
fsubrl
imul
add
xor
rorb
lret
fnsave
repz
xchg
mov
orb
lods
xchg
fisubrs
sbb
ror
jbe
popf
jl
iret
cmpb
cmp
jge
mov
xchg
push
mov
sub
mov
jbe
inc
sarb
sbb
ret
pop
cmp
cltd
xor
scas
mov
loope
fdivl
add
insl
xor
cli
xchg
rcll
xchg
sbb
fidivl
int
sti
xor
sub
push
jmp
dec
dec
in
fnstenv
or
aam
outsl
aaa
mov
imul
cmc
dec
outsb
popf
outsl
jnp
push
aam
sub
xlat
sbb
xor
push
inc
lahf
dec
js
jl
mov
movups
sti
push
push
lahf
testl
sbb
lods
lahf
add
into
lahf
and
push
jns
imul
sub
loope
mov
add
cmp
lea
xchg
sub
stos
xor
jno
arpl
ja
into
sub
cmpsb
out
sub
out
xor
cltd
pop
push
cmp
pusha
sti
xor
orb
xchg
adc
pop
jle
add
test
lahf
push
push
adc
outsb
iret
and
addr16
rcl
mov
notb
out
inc
hlt
xor
jbe
cli
inc
or
pop
jae
sub
jle
sbb
dec
adc
sbb
add
cmp
pop
and
repz
out
and
stc
xlat
dec
and
push
outsl
pop
mov
pop
roll
ret
and
fisttps
mov
inc
imul
jmp
sbb
inc
push
mov
add
lea
xor
popf
ja
adc
xchg
xor
call
xchg
in
js
pop
repnz
jae
lret
adc
push
push
xlat
xor
or
xor
jle
js
pop
scas
call
scas
pop
cwtl
out
test
sub
data16
xchg
add
shl
cmc
pop
outsb
mov
sarl
clc
add
dec
sbb
notb
popa
insb
fnstenv
nop
pop
mov
js
mov
sahf
icebp
mov
mov
mov
mov
dec
scas
loope
lods
inc
lock
test
xchg
push
js
shrl
dec
pop
ss
fidivrs
xor
leave
int
mov
fnsave
inc
mov
fidivl
fs
adc
xchg
and
ljmp
cmp
adc
mov
arpl
push
les
lret
icebp
testb
bound
daa
xor
lods
mov
xchg
xchg
mov
lea
clc
loope
cs
das
and
cld
repz
cmc
stos
sbb
xor
cmp
mov
push
lods
inc
add
std
jecxz
clc
adc
subb
sti
pop
subb
adc
xor
popa
in
sub
ret
in
jmp
or
mov
inc
push
testl
movsb
call
loopne
add
dec
stos
add
repz
push
cld
adc
or
stos
ss
mov
shrb
push
mov
push
mov
addb
mov
push
xchg
mov
cmp
loope
movsb
lea
in
insb
fistl
jb
xchg
mull
add
dec
xchg
pop
jg
cs
mov
loope
aam
sahf
out
clc
sub
insb
xchg
ss
cmp
divb
mov
test
xchg
pop
divb
or
pop
xchg
jns
or
xor
cmp
and
inc
data16
ljmp
add
arpl
stc
and
pop
or
lock
sub
sub
fucomip
push
or
mov
out
movd
mov
pop
shrl
addr16
xchg
loop
mov
imul
daa
xlat
mov
inc
lcall
pop
jecxz
repz
xchg
add
or
sbbl
in
mov
fwait
jae
cmpl
mov
push
mov
dec
push
jno
inc
lods
sub
fdiv
or
mov
clc
mov
push
insl
adc
movsb
sti
mov
mov
xor
sbb
mov
fwait
xchg
aam
loopne
scas
inc
push
xorb
scas
add
push
inc
mov
inc
xchg
inc
stc
repz
xchg
gs
ss
pushf
push
nop
sbb
ret
popf
in
mov
les
mov
inc
into
mov
imul
push
sbb
pop
pop
icebp
sti
jle
inc
lock
int3
lret
adc
icebp
or
and
lods
and
and
sub
xor
stos
mov
push
pop
inc
or
inc
xchg
addr16
scas
push
outsb
push
or
bound
fwait
shrl
jmp
lea
mov
adc
push
out
push
fmuls
pop
movsl
mov
add
popa
imul
pop
pusha
xor
sub
mov
jns
sub
jbe
xor
test
test
jno
shll
add
shr
lock
sbb
scas
test
xchg
push
test
ja
lahf
test
or
sub
test
dec
or
fs
adc
cmpsb
cmp
cmc
or
jmp
iret
mov
mov
or
out
jae
les
xor
cmp
lds
push
mov
pop
nop
sub
push
inc
fdiv
jecxz
sub
sbb
pushf
jp
scas
add
xlat
movsl
mov
mov
inc
inc
lcall
inc
cmpsb
js
cwtl
sub
xchg
mov
es
push
cmpsl
ret
lcall
jne
push
pop
jne
test
or
lret
sahf
iret
jb
or
pop
push
jns
mov
mov
cmp
and
add
rcrl
mov
addb
or
lds
push
push
pop
fidivl
pop
cmc
xchg
popa
in
jp
sub
scas
jb
cmp
mov
jmp
scas
fdivrs
shrl
xor
test
nop
mov
adcb
jg
loop
fisubrs
inc
dec
gs
insl
dec
or
scas
pop
js
dec
fisubrl
into
and
xchg
jmp
fcompl
popl
adc
js
xor
jns
and
ficompl
sahf
jne
xchg
push
mov
xchg
add
xchg
test
mov
jnp
arpl
push
xor
shrb
enter
jo
sub
adc
add
mov
mov
pop
dec
lods
clc
stc
shrl
enter
jecxz
jo
fnsave
into
push
cmp
xchg
test
fsubrl
dec
mov
fcmovnbe
aam
fstp
outsl
push
enter
push
shlb
and
jmp
cltd
rcl
pop
sub
aas
jo
stc
pop
or
fildll
int
sub
add
loopne
jo
cmp
int3
aas
test
mov
aad
js
inc
insl
clc
xor
int3
daa
mov
movsb
shl
in
jne
test
decb
mov
add
mov
mov
cmp
xor
xchg
xchg
adcl
lcall
push
or
and
mov
leave
std
repz
dec
ror
enter
movsl
scas
andb
sub
mov
fildll
or
int
and
cmp
pop
test
pop
inc
lods
daa
pop
or
pop
mov
scas
insb
mov
sbb
xor
imul
pushf
lods
in
jne
sti
pushf
cmp
mov
movsb
mov
lcall
cmp
daa
inc
call
xor
rclb
pop
sub
or
rol
in
mov
filds
and
scas
notl
fnstcw
adc
push
int3
push
mov
fwait
mov
mov
xlat
lods
jb
xchg
movsb
into
or
push
mov
loope
xor
nop
mov
ficoml
or
sub
pop
cmp
jmp
push
mov
jno
xor
rclb
adc
enter
sub
dec
mov
fwait
xchg
xor
mov
mov
adc
lods
mov
xchg
arpl
and
std
mov
testl
lret
mov
in
inc
in
and
fbld
dec
dec
test
adc
movsl
lods
ret
jmp
lret
inc
mov
test
pop
inc
cwtl
pusha
notl
mov
cmp
cmp
push
xor
fs
jbe
pop
xor
jmp
dec
inc
or
in
cmp
sub
mov
lods
call
or
insb
cmc
sub
lcall
cwtl
stos
jb
rol
int
jbe
shrl
setp
inc
aad
xchg
lods
lods
testb
rolb
in
clc
xchg
add
into
rcrb
mov
aaa
aad
pushf
xor
popa
inc
bound
pushf
xor
mov
push
inc
cmp
in
ljmp
or
fildll
stos
in
lds
test
dec
pop
sti
mov
push
jecxz
pop
and
mov
in
stos
aam
push
cmc
sub
scas
ja
or
mov
or
sahf
inc
sbbl
fmull
dec
rclb
mov
mov
adc
mov
xor
and
loopne
int
movsb
ror
test
mov
jl
daa
adcl
mov
ja
adc
js
pushf
flds
fsubr
inc
dec
bound
jmp
fwait
int
adc
inc
mov
mov
xor
sbb
push
mov
mov
cmp
xlat
cmp
call
lds
mov
or
push
outsl
fists
push
scas
or
sahf
jmp
mov
jbe
shll
stos
ret
jl
test
loopne
push
out
test
paddd
popl
pop
and
pop
dec
mov
xor
jl
addb
pop
add
push
pop
inc
pop
imul
jp
shr
mov
xchg
cmpsl
pushf
lea
in
ds
leave
addl
loopne
mov
dec
mov
fucomp
lret
bound
push
jmp
xor
fmuls
add
push
loop
fsubl
dec
add
in
sub
out
add
mov
cmpsl
in
pop
xchg
jecxz
sub
fldl
pop
outsl
ja
jg,pt
sarl
call
push
xlat
icebp
inc
jg
dec
pop
push
mov
out
fisubs
inc
stos
lods
imul
dec
push
cli
jbe
mov
xor
jecxz
jno
sub
jl
add
and
or
enter
clc
imul
sbb
adc
decl
mov
dec
pop
jecxz
in
mov
or
aas
mov
out
adc
mov
ljmp
sbb
insb
sti
jl
into
xchg
rorb
ret
or
mov
jae
pushf
ror
adc
sub
inc
psrad
mov
shr
mov
loope
lock
sbb
in
imul
clc
and
lret
and
xor
arpl
in
push
xchg
imul
cmp
aad
cmp
push
sahf
xor
cmc
jle
dec
scas
or
loope
pop
popa
int
jne
jmp
jnp
push
jno
mov
mov
xchg
jmp
orl
dec
lahf
jbe
and
int
es
jg
sub
mov
shll
cmpsl
pop
testl
lea
adc
sbb
inc
push
sub
out
test
packuswb
xchg
lea
push
pop
pop
ljmp
xor
add
and
iret
call
sbb
mov
mov
lods
and
jecxz
shl
shrb
add
push
sbb
pop
sti
ds
mov
jg
jo
xchg
push
pop
cmp
call
pop
inc
gs
es
sti
int
mov
or
dec
lcall
mov
pop
outsb
push
pusha
sub
xchg
icebp
or
xor
mov
shl
or
jmp
fcompl
movsl
ss
out
jl
in
nop
sahf
cli
lods
mov
mov
jno
mov
mov
push
dec
add
adc
xor
mov
mov
mov
loopne
negb
xchg
adc
iret
insl
pop
push
in
movsl
test
fwait
and
pop
fsubrl
fidivs
adc
jne
xor
mov
pop
ret
mov
push
pop
test
scas
daa
stos
pop
daa
mov
jecxz
add
or
cs
sub
mov
addb
or
into
xchg
mov
scas
in
and
fimuls
dec
sub
jmp
sbb
mov
mov
ss
shl
js
mov
shl
imul
xor
lcall
push
imul
ja
insb
roll
jae
int
sbb
push
out
notb
mov
or
adc
cmpsl
sbb
dec
rcrb
or
in
jnp
adc
bound
jns
lcall
pusha
push
ja
dec
test
scas
xchg
outsb
pop
inc
repnz
xchg
push
jecxz
dec
hlt
lcall
in
mov
notb
xchg
add
ret
js
cmp
loopne
movsb
cmp
adc
subb
lock
imul
and
rcl
jns
imull
int
out
or
xor
push
mov
movsb
cmp
add
mov
pop
daa
repz
fwait
pop
xor
roll
add
xorl
mov
cli
adc
pop
sub
test
faddl
insl
jb
mov
and
mov
push
test
xchg
les
lret
add
cld
out
out
bound
inc
icebp
mov
cmp
in
sbb
or
test
jge
xor
sahf
sbb
mov
ret
adc
vcvtps2dq
add
sub
mov
jp
sub
js
push
mov
bound
push
lcallw
xor
pusha
mov
xchg
cmp
jg
rolb
xor
int3
out
xchg
into
push
filds
jmp
adc
pop
lock
js
cmp
add
mov
std
scas
scas
mov
adc
inc
gs
and
jecxz
jmp
or
outsb
cmp
and
pop
repz
out
lea
xor
out
jnp
out
cmp
fsubl
jg
iret
fisttpl
dec
cs
sub
insb
test
and
cmp
ret
cwtl
lods
ret
out
sub
or
cmp
sti
xchg
lret
cmp
cwtl
mov
rol
xchg
montmul
cmpsb
outsl
stos
add
es
push
stos
cmp
test
xor
inc
rcll
std
mov
push
out
cmp
out
sbb
dec
xchg
dec
push
mov
xchg
mov
fsubrs
inc
pop
mov
jmp
or
and
das
cmp
icebp
add
mov
mov
loope
pop
ja
push
jae
shll
aam
xchg
nop
daa
adc
in
jmp
sbb
shlb
in
or
outsl
lock
lods
nop
scas
rcl
xlat
outsb
lret
pop
inc
add
inc
outsl
push
int3
jo
ljmp
andb
push
cli
mov
sbb
out
call
movsl
adc
pop
mov
movsb
sub
lock
mov
inc
scas
mov
xor
lret
mov
sub
push
jb
psubsb
jo
cs
mov
adc
into
xor
jmp
test
inc
mov
cmp
and
sub
out
stos
stc
xlat
hlt
lea
xor
pushf
ret
xor
push
imul
mov
or
ja
cmpsb
cmpsb
xor
inc
aam
mov
xorb
cmp
lea
mov
inc
lret
stc
mov
push
or
pop
out
lods
test
repnz
adc
xor
xchg
push
insb
pushw
push
rol
jg
loop
lahf
lahf
push
adcb
push
or
adc
mov
fsubr
adc
sub
test
iret
sahf
scas
push
mov
pop
ss
mov
imull
scas
lods
jb
dec
mov
stos
cmp
je
int3
mov
roll
loopne
jae
adc
cmp
das
das
daa
orl
negb
mov
sbb
inc
sbb
popf
cmpsb
inc
inc
sub
add
cmp
jge
mov
sarb
into
push
movsl
call
pop
in
mov
sub
ret
sbb
sahf
dec
jae
pop
shrl
popa
testb
or
xorb
xor
inc
call
sbb
xchg
outsb
shlb
push
push
aam
fiadds
mov
xchg
xchg
and
cmp
inc
mov
in
test
fistpl
mov
dec
rclb
ret
mov
jle
sbb
jae
imul
rol
jg
lods
push
mov
ret
pop
stc
sub
fwait
mov
dec
in
test
inc
not
imul
shl
cmc
inc
fsubs
jb
sub
mov
dec
dec
lods
inc
push
jo
aas
ret
scas
fnstenv
aam
addr16
and
cmp
cmp
mov
adcb
jno
cmp
out
xchg
pushf
call
pop
inc
mov
add
push
mov
pop
fisubs
jle
and
sbb
mov
push
inc
xchg
fs
aas
enter
xchg
mov
mov
cmpsb
enter
dec
xchg
mov
add
test
std
popf
push
add
pop
cmpsb
sti
adc
sub
jns
mov
xor
mov
mov
call
adc
add
push
inc
pop
test
fnstenv
lea
jle
or
ret
xchg
lret
aas
fs
addb
cmp
test
testl
push
stc
lock
and
lret
shr
inc
xchg
lods
jge
fidivs
popf
insl
in
pop
test
iret
lock
in
jae
inc
int
mov
adcl
pop
mov
test
lds
ror
cmp
stc
into
sub
into
fidivl
sbb
push
mov
xorl
fnstenv
dec
aaa
xchg
in
testl
sbb
xchg
cmpsb
mov
int3
xchg
cs
cwtl
sbb
sbb
mov
in
divl
loope
or
je
inc
pushf
pop
xchg
int
divl
aas
cmpsb
inc
aam
fisttps
fildl
dec
sub
dec
add
push
dec
mov
loop
adc
add
xor
popa
outsl
in
push
pop
xchg
call
add
xorl
test
xor
inc
pusha
sbb
jnp
inc
push
or
add
stos
push
decb
jp
ds
out
push
enter
cmp
lahf
sbb
mov
and
lret
xlat
cmp
hlt
push
sub
and
and
je
incb
mov
sbb
dec
popa
cli
shlb
repz
idivb
xor
mov
cmpl
loope
push
in
test
mov
dec
mov
lds
pop
jb
out
dec
cmp
andl
cmpsl
enter
add
cmpsl
xlat
jmp
mov
cld
inc
sub
xor
inc
sbb
adc
lcall
roll
clc
push
sub
or
cmpsl
dec
cmpsb
xchg
xchg
inc
adc
inc
pop
mov
aas
push
fs
xchg
popa
dec
adc
enter
dec
sub
pop
in
lahf
in
sbb
mov
fadds
fwait
test
imul
inc
mov
call
mov
pop
pushl
sub
pop
sahf
xchg
and
dec
into
test
test
shlb
or
mov
lret
sub
dec
pop
ljmp
push
stc
mov
icebp
add
out
sbb
xorl
cmp
push
aam
xchg
shrl
movsb
jae
jmp
jle
pop
out
rcll
or
cltd
xchg
push
mov
mov
pop
cmp
jecxz
rcrb
pop
mov
push
mov
sahf
hlt
push
adc
movsb
inc
arpl
nop
ljmp
call
cmp
int3
cmp
aas
sub
inc
addr16
repnz
inc
ficomps
mov
xchg
fistpll
test
jo
pushf
sahf
mov
mov
and
mov
lret
jb
inc
pop
arpl
add
jl
xor
pop
bound
pop
repnz
mov
jno
add
xor
stos
in
jg
push
or
xor
inc
sbb
ret
adc
xor
loopne
xor
imul
push
jae
pop
mov
stos
pop
pop
ret
repz
loopne
fistl
loope
xor
loop
sbbl
jge
dec
mov
cmp
jmp
or
rcl
lods
push
mov
xor
out
adc
dec
or
cmp
pop
cmc
add
xchg
mov
sarb
adc
lahf
cmp
push
xor
cmp
ficoml
loopne
sub
std
cmp
addr16
hlt
inc
xlat
loop
out
xor
cmp
arpl
vmulss
enter
ret
pop
or
imul
xchg
xchg
loop
mov
rolb
imul
sub
jo
aas
test
fdivrs
ret
fstl
iret
xchg
gs
inc
ficoml
fbstp
leave
shll
pop
sbb
add
aam
loop
out
stos
sbb
test
lea
inc
or
add
movsl
pop
add
adc
jns
adc
loopne
dec
xchg
ss
push
sub
cmp
nop
mov
andl
sub
out
xchg
ret
or
pop
call
in
mov
aam
push
mov
jnp
push
loope
dec
xchg
mov
decb
out
adc
das
sub
pop
cwtl
pop
dec
adcb
lahf
add
in
and
in
push
push
dec
pop
dec
cmp
aas
out
mov
cmpsb
sar
push
stc
mov
faddl
aam
call
daa
call
outsl
push
ss
gs
ljmp
test
mov
mov
pushf
push
into
daa
jo
adc
test
xchg
fsubl
jns
jns
mov
cmp
push
mov
out
js
scas
shll
icebp
mov
or
xlat
xchg
xor
and
sbb
xlat
pop
rcrb
stc
lret
jne
push
pop
inc
dec
in
mov
cmc
cmp
and
jmp
iret
pop
jo
jg
sub
mov
cmpsl
test
adc
push
mov
imul
pop
push
mov
adc
push
call
xorl
jl
lds
arpl
ja
arpl
pop
popa
push
and
test
pusha
divl
pop
call
gs
call
adc
and
jle
cmp
js
or
jne
push
sbb
dec
push
out
pop
stos
push
jp
inc
sbb
and
andb
jo
in
lods
call
pop
outsl
xchg
adc
int3
lds
adc
jno
adc
loope
out
adc
jne
je
loopne
rclb
jle
sbbb
xor
sahf
xor
in
pop
in
cwtl
aad
hlt
rcrl
jo
idivl
enter
idivl
data16
lret
and
ja
out
imul
fisttpll
into
gs
lahf
fld
inc
mov
aam
inc
push
dec
icebp
imul
mov
pop
addl
mov
cmpsl
movsl
rorl
lds
test
lahf
push
and
into
shl
ret
add
pop
inc
jl
sbb
shl
jl
hlt
dec
flds
ret
repnz
mov
cmpsl
loope
gs
into
mov
pop
mov
cli
mov
ljmp
adc
cmpsl
out
rclb
rep
mov
not
pop
roll
or
jbe
sub
sbb
xchg
movsb
pop
adc
movsb
sti
pop
mov
mov
in
sub
inc
insb
in
jb
xchg
push
mov
jno
iret
aam
push
dec
outsl
clc
mov
out
repnz
dec
xchg
icebp
mov
inc
sahf
out
add
out
div
xor
jmp
aam
into
aam
pop
movd
add
or
ss
lret
bound
fsubrs
movsl
jo,pn
cmp
fmuls
pop
sbb
adc
push
stos
test
xor
inc
inc
clc
push
shlb
andl
rcrl
leave
and
pop
or
roll
mov
fcompl
dec
or
mov
cltd
mov
sub
imul
arpl
xchg
mov
adc
cmpl
or
pop
mov
cmc
ss
sub
mov
imul
sahf
pop
cmc
iret
xchg
xchg
jge
ljmp
jb
stos
lahf
xchg
loop
dec
aam
ljmp
and
inc
sahf
mov
pop
sar
add
hlt
push
ret
cmp
pop
aad
adc
sub
arpl
pusha
mov
gs
outsb
jae
xchg
push
add
sti
jno
cltd
mov
cmpsl
pop
repz
jno
addr16
std
xchg
je
lret
fst
inc
mov
mov
scas
mov
movsl
mov
daa
icebp
jnp
cmp
cmp
shrb
pop
scas
mov
stos
xor
fdivl
fstps
lods
loopne
ja
repz
xchg
icebp
xchg
fwait
cwtl
jle
lret
push
xchg
push
pushf
popa
lret
cmp
imul
dec
shll
add
popa
repz
push
cwtl
mov
stc
daa
icebp
mov
movd
mov
rcrb
or
or
or
and
sub
dec
push
clc
fwait
insl
pusha
mov
adc
and
sti
lcall
in
pop
sub
add
test
xchg
insb
adc
shll
inc
add
dec
pop
sub
sub
orl
xchg
mov
jge
pop
pop
mov
movsl
push
add
pop
movsb
and
jl
add
mov
mov
hlt
push
push
sub
mov
jmp
imul
icebp
lods
inc
and
dec
adc
xchg
dec
cmpsb
sti
lcall
mov
dec
aad
push
pop
xor
xor
pushf
sbb
inc
inc
lahf
xor
push
add
sbb
pusha
lahf
ss
push
testb
inc
mov
lods
dec
cwtl
lcall
inc
pop
push
pop
pop
mov
enter
fwait
insl
inc
mov
mov
and
ficoml
jne
out
out
pop
mov
mov
out
pusha
fdivrs
or
cmp
dec
stos
sti
push
mov
adc
pop
xor
int3
jb
scas
aas
push
adc
ret
in
jmp
loopne
jo
push
xchg
xchg
addr16
and
pop
mov
lds
ja
jl
sub
mov
and
shl
pushf
dec
clc
out
xchg
test
dec
push
insb
out
ret
fsts
icebp
cs
enter
and
sub
inc
outsl
sub
mov
cmpsb
ljmp
and
xlat
aam
arpl
inc
jp
enter
inc
xchg
push
jae
xchg
aam
imul
sahf
rcrl
mov
inc
psrld
addr16
outsb
lret
dec
cltd
adc
inc
cwtl
js
inc
fs
lea
leave
fucomip
sahf
adc
push
leave
xchg
setge
loop
jle
lret
out
adc
leave
aad
cmpsl
xchg
stos
push
sub
adcb
mov
leave
fstps
jae
out
gs
mov
test
adc
jne
jmp
aad
mov
aad
shrl
insl
pop
xor
rcrb
pop
loop
cmp
adc
pop
cmp
pop
jmp
xorl
and
lds
scas
sub
xorb
aad
sahf
imul
and
add
pusha
call
fsubl
or
mov
inc
lret
xchg
cmpsl
int3
fbstp
in
and
push
imul
cmp
nop
jmp
fiadds
or
and
call
sbb
inc
sarb
xchg
loope
inc
cld
js
inc
fadd
imulb
daa
out
mov
add
mov
int
idivb
ret
inc
mov
or
mov
pop
fwait
xchg
xchg
or
pop
pop
adc
icebp
pushf
jg
icebp
outsb
dec
inc
insl
loop
call
push
lods
add
cmp
jb
mov
cmp
or
outsb
inc
mov
fdivl
movsl
std
iret
and
dec
sarb
pop
test
fiadds
cmova
pop
adc
sub
or
or
jg
movsl
lcall
push
cmpsb
in
rcrb
test
sub
add
loope
rcr
jmp
inc
aam
dec
jge
jle
jo
in
inc
scas
fidivs
dec
loop
xchg
loope
jnp
push
lds
mov
xchg
push
push
pop
xchg
jecxz
push
pusha
rcrl
add
fidivrs
mov
xor
test
lods
xor
or
cli
test
xchg
add
lds
or
pusha
sbbb
xchg
mov
imul
cmp
iret
push
jge
rcl
sbb
dec
sbb
lret
sarb
xchg
xchg
sub
in
ficomps
mov
mov
mov
and
add
cmp
xor
mov
or
push
pmulhw
insl
add
jle
jno
gs
arpl
cmp
push
lods
lods
data16
rcll
loopne
cmpsb
je
xchg
mov
jl
xchg
cs
jae
aas
lcall
pop
in
pusha
movsl
push
inc
fistpl
dec
iret
mov
or
out
xchg
andb
jmp
dec
mov
push
fdivrs
adc
jg
mov
jp
push
jmp
push
mov
sbb
fidivrs
xor
mov
ret
jnp
into
enter
jne
jle
fisubrl
add
nop
pop
xor
lahf
mov
push
fs
out
xchg
aam
out
jmp
out
std
cltd
in
sbb
out
je
or
jbe
testl
inc
adc
lds
mov
fistpl
adc
fbld
push
push
sarl
pop
fs
ret
pop
popf
stos
pop
clc
and
arpl
mov
pop
push
das
lahf
cmpl
cmp
aad
mov
mov
mov
pop
pop
xchg
test
aam
mov
push
dec
stc
test
pop
mov
push
and
inc
inc
dec
jno
sub
add
das
or
ljmp
sbb
es
and
pop
pop
jmp
out
lock
sub
push
addr16
lock
push
mov
scas
mov
lcall
xor
popa
aad
jno
sub
inc
xchg
xor
push
sbb
in
xchg
lret
fistl
test
nop
fisttpll
xor
xchg
add
nop
cmp
xchg
jle
pop
in
sbb
aad
xchg
sub
orb
ljmp
lods
lods
aad
or
xor
sub
xor
out
sti
cmpsb
jno
push
mov
mov
sbb
push
adc
movb
imul
repnz
pop
add
adc
in
stos
loop
fsubs
mov
bound
or
repz
adc
xchg
imul
notb
clc
lock
xlat
js
mov
cwtl
and
fstps
stos
inc
xchg
dec
push
mov
popf
orb
sub
clc
aas
mov
jl
fnstsw
push
lahf
sbb
xchg
fldl2t
lahf
xchg
subl
lock
mov
jno
mov
ja
out
insb
dec
shr
mov
mov
aad
inc
push
addr16
sti
es
xchg
jb
xor
push
xchg
jecxz
ds
aaa
adc
pop
das
aam
in
mov
ret
and
cmpsb
fnsave
dec
sub
or
fistps
in
dec
lods
dec
pop
insb
cmpsl
cmc
int3
pop
sub
lods
flds
lock
sub
jecxz
outsb
jp
call
sti
sub
dec
call
ret
pop
sbb
pop
pop
pop
sahf
scas
fs
xchg
add
sbb
aaa
mov
cmp
and
jecxz
or
sub
and
fstl
sub
rorl
in
or
stos
rcrl
stos
cwtl
je
icebp
mov
arpl
xchg
sub
xlat
pop
or
xor
in
adc
rcll
cmp
xchg
fsubr
xchg
mov
xchg
xor
cmp
push
pmaxsw
insl
pop
lods
and
out
in
push
imul
popa
mov
shlb
dec
or
pop
stos
cmp
pop
pop
pop
or
xlat
sbb
ss
mov
pop
mov
sub
icebp
sub
and
inc
mov
dec
push
sti
jge
pop
push
push
inc
jg
mov
cltd
and
leave
mov
sbb
pop
jae
add
mov
mov
fadds
push
mov
and
push
or
pop
loope
adc
cmp
xchg
aam
lds
insb
jp
addr16
insb
pop
je,pt
test
xlat
popf
shrb
out
sub
and
loopne
pop
lds
andb
imul
push
dec
and
cmp
inc
incb
push
icebp
enter
inc
repz
mov
inc
pop
jmp
or
leave
mov
ss
mov
fsts
sbb
fs
aad
outsl
addr16
adc
xchg
outsb
xor
push
outsb
in
fldcw
jno
cs
lahf
pop
xor
flds
movsb
inc
sti
adc
inc
hlt
lret
sbb
pop
in
jl
fwait
movsb
das
mov
xlat
sub
pop
and
mov
sbb
mov
pop
insl
das
outsl
jecxz
shlb
les
pop
push
in
push
rolb
fs
out
sub
push
or
sub
mov
inc
sbb
cmp
popa
mov
orb
jne
pop
int
lcall
mov
mov
ret
cmpsl
es
adc
lret
je
mov
test
loopne
pop
decb
and
cmp
and
or
adc
fsubr
nop
das
pusha
movsb
inc
inc
shll
out
call
ja
push
mov
ficoml
into
inc
adc
xchg
jns
push
hlt
push
fwait
pop
inc
shr
jl
sbb
repz
push
xchg
mov
fsubrp
mov
push
dec
movsb
jle
sub
push
xor
or
push
or
movsl
dec
xchg
mov
popa
add
stc
into
cmpsb
jae
bound
shll
pop
mov
inc
cmpsb
or
lock
sbb
loop
dec
mov
add
outsl
fdivrl
push
imul
pop
adc
sub
and
pop
bound
loopne
and
xchg
pop
dec
loope
mov
xchg
jp
cmp
jmp
mov
cs
shl
ficoms
xchg
stos
or
dec
loope
inc
jo
loope
movsl
lds
sahf
pop
lods
inc
mov
xor
lret
dec
push
lcall
and
lds
filds
sbb
mov
jbe
push
aam
inc
mov
mov
push
leave
jecxz
inc
lds
xchg
lods
ds
pop
out
xor
pop
xchg
ja
dec
jecxz
and
or
mov
hlt
dec
mov
movsl
or
pop
shlb
dec
or
xor
loope
push
jno
inc
es
jl
imul
clc
dec
enter
outsb
sbb
dec
dec
mov
add
xor
les
add
lahf
stos
dec
pop
inc
out
ds
xchg
mov
cli
mov
mov
das
inc
out
sub
push
mov
add
cmpsb
xchg
fidivrs
cmp
push
jmp
dec
or
jns
out
xor
xchg
arpl
scas
sbbl
shrb
test
imul
imul
pop
cli
jns
addr16
sarl
imul
inc
dec
in
xor
mov
sbbl
leave
ds
or
enter
dec
dec
test
push
test
push
sar
out
in
test
lret
and
pop
sub
jae
inc
mov
sbb
jp
dec
mov
push
lcall
ret
mov
xchg
pop
daa
dec
insl
fs
dec
pusha
stc
inc
push
lret
jb
daa
stos
lahf
fcoml
add
xchg
shll
pop
push
lahf
jae
rorl
aam
mov
sbb
add
popa
ss
dec
subb
clc
xchg
loopne
sbb
mov
mov
enter
mov
in
dec
jno
out
loop
fldl
push
in
mov
mov
call
mov
stos
push
les
cltd
std
jecxz
xchg
test
adc
scas
xchg
dec
jo
pushf
pop
je
and
outsl
xlat
jecxz
jb
loop
daa
leave
mov
xchg
xchg
push
jp
cli
cmpsb
cmp
sbb
jmp
add
push
fucomp
das
pushf
cmc
pop
shlb
cmp
cmp
vdivsd
cmp
test
ljmp
loopne
or
addr16
pop
sbb
add
sbbb
mov
sahf
lahf
repnz
xlat
xchg
jns
adc
shlb
jle
mov
enter
sti
aas
push
bound
fucompp
cwtl
jmp
pop
lock
cmp
orl
imul
imul
loop
mov
or
pop
cmpsb
sub
or
cmp
cmp
mov
je
or
stos
cmp
push
test
loope
enter
xchg
mov
dec
rcll
cmp
jbe
pop
xchg
test
in
jl
mov
or
pop
insl
mov
imul
sbb
lods
mov
xor
insb
iret
fisttpll
jae
into
adc
jno
test
scas
fidivrs
fs
outsl
sahf
pop
push
sti
int
xor
push
dec
pop
lret
cmpsb
adc
andb
or
mov
aad
jne
lret
xlat
mov
mov
jne
aaa
or
loope
inc
leave
cs
inc
sub
test
std
mov
scas
inc
fisubrl
adc
sub
pusha
cmp
lcall
lods
dec
out
rcr
ja
pop
fnstsw
stos
enter
stos
aad
mov
and
or
cmpsl
shlb
enter
sub
jg
cmpsl
adc
jle
mov
sbb
cmp
fimull
incb
jb
lds
lods
aam
xor
insl
xor
shr
sbb
mov
ficompl
js
iret
mov
fwait
pop
rorb
xchg
fcmovbe
ja
and
xchg
cli
jno
jb
out
inc
les
sub
roll
adc
jne
setb
fstpt
cs
das
cmp
insl
xchg
jge
lds
mov
xchg
lcall
jg
std
cmp
into
in
iret
add
bound
lods
sub
mov
adc
out
int3
lock
jge
inc
adc
test
ret
cmpl
test
icebp
sti
mov
lods
repz
add
aam
dec
mov
xchg
pushf
sbb
jge
ljmp
clc
mov
jle
test
cltd
ja
jne
xchg
push
out
aad
cmp
push
mov
jns
dec
sti
xchg
jg
daa
lcall
jne
bound
movsb
jnp
addr16
stc
or
mov
sub
pop
push
dec
push
jmp
jns
insb
mov
inc
shlb
sub
movsl
loope,pt
dec
add
jle
jp
int
push
rcl
sti
sahf
xor
addb
jecxz
add
xchg
xor
in
pop
iret
push
test
repnz
inc
mov
incb
incl
adc
mov
xor
shll
xor
fstpt
mov
and
jmp
cli
jns
test
js
es
fwait
mov
xchg
mov
dec
cwtl
add
xchg
test
jb
xchg
in
mov
lahf
dec
mov
sbb
lods
mov
lahf
add
xchg
jno
xor
push
xchg
stos
lret
jge
rcr
push
jo
and
mov
mov
sub
jp
sub
inc
out
notl
ljmp
imul
nop
mov
stos
icebp
dec
and
jp
cmc
jge
pop
add
mov
add
shll
pop
pop
mov
loop
sub
lahf
out
jmp
push
push
mov
std
test
loopne
mov
and
jg
shlb
mov
or
mov
xor
enter
imul
inc
loope
popa
mov
cwtl
add
cmp
mov
mov
or
inc
cli
mov
mov
push
or
leave
int
sub
push
lcall
fucomp
loopne
je
jmp
sti
push
and
imul
enter
andl
push
pop
fcoms
mov
dec
xor
insl
ja
mov
fwait
xor
pop
test
nop
shl
lret
or
dec
add
cltd
xor
imull
sar
sbb
pop
sbb
shrb
xor
mov
inc
arpl
mov
in
cmp
out
stc
test
aas
cwtl
ret
fnstcw
cmp
jmp
fstpt
out
push
in
mov
test
mov
out
and
mov
lea
pop
lock
ds
lahf
cmp
std
rcrl
movsb
pop
pop
jno
sarl
in
outsb
jecxz
pushw
shl
xchg
inc
subb
outsl
xchg
scas
xchg
xorb
mov
loopne
sbb
pusha
mov
testb
insb
mov
imul
icebp
decb
push
xchg
pop
dec
and
cmp
add
mov
outsb
mov
jae
int3
sub
or
jmp
or
xchg
push
mov
inc
mov
mov
cmp
mov
add
push
pop
xor
mov
push
mov
aas
pop
dec
sub
cmp
or
lods
push
in
ficomps
aas
lods
je
push
jae
outsb
testl
popa
out
shll
pop
frstor
iret
jbe
stos
jmp
push
dec
dec
jns
fwait
or
and
dec
push
popl
fnsave
jg
dec
lcall
or
scas
ljmp
xlat
mov
dec
or
and
or
imul
fs
arpl
push
pop
movsb
cmp
jne
ret
inc
imul
rcl
rorl
rcr
ja
adc
mov
mov
sbb
xor
jle
mov
add
fistps
and
cmpsl
push
push
subl
ret
xchg
or
mov
dec
loope
fdivs
mov
enter
int3
sbb
pop
aad
ds
push
in
lret
cmp
xor
in
aam
test
cltd
repz
fsubrl
iret
push
or
loop
mov
out
and
adc
and
mov
ret
lret
mov
sub
push
adc
aaa
test
fnstcw
pop
xor
nop
push
test
dec
out
in
and
sti
jg
mov
sbb
dec
dec
fistps
push
jbe,pn
loop
mov
in
push
divb
fcmovnu
sub
inc
mov
inc
push
cmp
mov
inc
movsl
mov
fsubrl
mov
cld
xchg
lods
pop
punpckhdq
iret
sbb
or
das
jbe
mov
xor
insl
cmpsl
cmp
fs
dec
sbb
ret
add
loopne
pusha
pusha
push
jnp
mov
mov
jle
in
mov
loop
sbb
out
push
cmp
xor
pop
cli
mov
and
lds
filds
fnstenv
hlt
mov
jae
xor
pop
adc
xchg
push
shrb
outsl
push
sbb
cmpsl
mov
push
pop
add
push
insb
gs
sub
lods
pop
out
jecxz
out
sub
mov
pop
aas
popf
insl
mov
dec
int3
shlb
push
orb
push
xlat
pop
repz
call
or
cmp
inc
adc
arpl
xchg
mov
les
fimuls
gs
adc
xor
mov
lods
inc
loope
popa
rcrb
imul
pop
or
dec
popl
lcall
mov
outsl
adc
movsb
iret
ss
sahf
cld
xchg
jmp
inc
test
mov
fnsave
ret
popf
sti
int3
cmpsb
loop
add
leave
xchg
sub
push
pop
and
mov
cmp
filds
shll
lods
push
imul
int
mov
movsb
or
mov
mov
xchg
xchg
scas
loop
pushf
xor
scas
cmpb
mov
mov
filds
push
mov
xor
inc
fsts
dec
test
pop
call
cmp
ljmp
inc
out
dec
jge
insb
movsb
out
leave
mov
xrelease
inc
mov
mov
lahf
jg
movsb
call
int
cmp
out
test
jo
push
loop
or
add
mov
inc
pop
and
cltd
jg
lcall
mov
pusha
jp
adc
lock
popf
cmpsb
ret
sub
adc
cmp
add
es
xor
rcl
aas
fildll
fnclex
push
pop
mov
inc
outsl
jns
sbb
and
inc
out
mov
in
stos
frstor
sbbb
cli
addl
maxps
test
mov
xor
insb
or
imul
repnz
cltd
out
ror
std
cmp
xor
lds
lock
ret
aad
mov
jno
insb
mov
inc
mulb
or
test
out
mov
xor
mov
adc
jae
inc
aas
inc
rorl
push
sarb
fwait
mov
out
outsb
lds
test
test
sbb
ljmp
mov
add
xchg
or
mov
pop
in
shrl
rol
and
hlt
and
in
push
test
mov
mov
test
fs
sub
jne
cs
xchg
xchg
fidivrl
xor
lods
xchg
icebp
add
pop
addb
lods
shrl
fisttpl
repz
sub
pop
ds
ljmp
jb
icebp
inc
cmp
fwait
xchg
pop
out
sub
lret
repnz
or
out
shrl
mov
bound
popf
sbb
insb
cmp
xorl
mov
jns
mov
or
push
jno
xor
push
lea
add
mov
call
or
adc
push
mov
js
inc
mov
mov
fsubrs
jp
cmp
idivl
fistpl
lea
imul
insl
imul
addl
out
mov
fdivl
movswl
loop
push
lods
and
push
and
dec
scas
lcall
scas
push
mov
adc
jne
mov
pop
and
out
sbb
insb
ret
cmc
inc
cmc
mov
lahf
dec
loop
push
jo
sahf
inc
js
out
jb
in
test
add
mov
testb
pushf
arpl
sahf
orb
cmpl
push
mov
jbe
sahf
lods
es
int3
mov
push
mov
xor
in
xlat
cmc
sbb
adc
xchg
adc
mov
pop
sbb
insl
cmpsb
cmp
fisubrs
lea
jle
pop
dec
data16
mov
arpl
and
push
pusha
pop
aam
inc
fldt
jns
repnz
outsl
push
loope
les
add
mov
jns
inc
cmpsl
mov
push
mov
add
int3
or
sahf
sub
dec
and
test
das
pop
lcall
je
mov
jnp
insb
movsl
mov
fidivs
imul
imul
push
pop
repnz
push
je
dec
pop
dec
fcomps
push
lods
dec
fxch
out
mov
inc
jecxz
andb
mov
aad
push
mov
cwtl
and
jb
xor
lea
xchg
jnp
inc
out
cmp
dec
bound
or
shrl
pop
adcb
pop
mov
mov
mov
stos
jmp
cwtl
sbb
out
test
pop
testl
clc
iret
pop
or
and
clc
stos
insb
sbb
cs
cmp
outsl
adc
into
stos
push
ret
jne
and
add
out
pop
neg
iret
out
mov
ljmp
shrl
and
lret
push
push
mov
sar
clc
imul
inc
mov
pop
clc
sahf
movsb
adc
call
mov
pop
adc
out
std
sbb
orl
mov
sub
lahf
lods
jb
pop
lock
inc
inc
dec
inc
push
mov
xor
inc
aas
push
inc
jmp
leave
pop
je
loop
sbb
pop
lahf
xor
mov
pushf
pop
push
fsubs
push
and
movsl
repz
mov
stos
jnp
xchg
test
push
inc
loope
push
push
jmp
dec
in
and
fdivl
add
daa
rcl
shl
inc
xchg
popf
jecxz
outsl
in
cmp
incl
and
imul
int3
fadds
push
in
mov
fucomp
mov
pop
xchg
sub
cltd
pop
jle
adc
xchg
je
cmc
pop
mov
cltd
mov
into
ss
ret
std
scas
inc
push
cmp
pop
insl
daa
xor
lods
xchg
cmp
loope
pop
cmpsb
or
jl
and
xchg
adc
pop
xchg
dec
inc
lea
lods
and
sbbb
xor
and
in
cwtl
js
or
frstor
adc
es
ret
add
add
test
nop
mov
pop
sbb
les
subb
sbb
jno
dec
cmp
rcl
je
jmp
xchg
push
movsl
mov
sbb
mov
int3
xor
in
std
loope
fstl
inc
cmp
mov
popf
out
jns
adc
sbb
out
xor
pop
js
mov
mov
incb
pop
cmp
xchg
cli
push
pop
lcall
pop
movsl
aam
sub
test
cltd
dec
dec
outsl
mov
repnz
add
pop
sub
add
adc
add
cwtl
jmp
sti
jle
dec
aaa
scas
cmp
push
popf
or
xor
popf
lods
ljmp
ds
pop
sub
loopne
es
pop
ja
cltd
pop
shlb
mov
rcrb
mov
mov
adc
call
fdivl
mov
mov
adc
push
je
fadds
lea
jb
movsb
repnz
scas
cltd
jbe
jmp
sarb
sub
and
out
cmpsl
inc
imul
insl
mov
jg
xchg
jecxz
jnp
cmp
insb
ja
aaa
pop
loop
mov
gs
bound
dec
mov
daa
paddusb
incl
dec
lods
bound
imul
paddsw
cmp
shll
dec
adc
mov
inc
imul
cltd
dec
ds
push
fucomi
lds
les
or
ja
jge
xchg
ljmp
sahf
xor
inc
ss
je
mov
mov
scas
shlb
jmp
mov
sti
pusha
subb
or
sahf
in
int3
inc
mov
xor
sub
subl
cltd
push
pop
enter
dec
ljmp
bound
push
clc
mov
jg
pop
pop
mov
enter
pop
repnz
cmp
cwtl
add
xorl
xor
add
push
jne
sti
in
xlat
sbbl
dec
jb
repnz
mov
lahf
sub
fsubr
or
es
mov
xor
pushf
push
addr16
sti
dec
into
xor
sbb
inc
cmp
into
test
enter
movsb
xor
adc
int3
arpl
and
mov
daa
cmp
cmp
notb
xchg
stos
data16
mov
mov
mov
shrl
mov
cmp
mov
or
js
jbe
lods
ljmp
pushf
outsl
push
lret
cmp
pop
in
call
int
pop
dec
xor
add
sahf
popa
enter
fdivr
movsb
rcrb
sbbb
xor
xlat
imul
xorl
outsb
iret
in
not
xor
enter
lea
outsb
fsub
sbb
pop
jg
arpl
mov
add
iret
pop
add
add
cmp
mov
inc
and
dec
test
adc
mov
mov
or
call
adc
mov
jp
ljmp
fcomps
std
cs
std
jae
pop
inc
xchg
aas
loopne
std
or
jb
push
ljmp
pusha
add
push
xchg
pop
or
pop
mov
cli
clc
dec
pop
and
fldt
in
adc
mov
mov
mov
inc
dec
cwtl
ja
inc
cmp
push
xchg
mov
mov
dec
popf
and
popa
xor
inc
adc
jb
packuswb
sub
loop
cmp
or
pop
adc
inc
cmp
dec
dec
call
movsb
push
popf
push
sub
and
xor
leave
cltd
cmpl
jmp
cli
and
imul
push
lret
pop
jg
cmp
imulb
cmp
mov
xor
in
stos
cmp
insb
dec
mul
fsubrl
xchg
and
push
ret
addr16
cmc
inc
decl
test
mov
insl
lret
sub
ljmp
lock
adc
cltd
pop
pop
shrb
add
xchg
pop
xor
movsb
repz
jmp
xchg
inc
jo
pop
fwait
xchg
in
dec
jle
sahf
lret
dec
or
and
lcall
sahf
ss
mov
ds
xor
scas
jg
xchg
insl
inc
dec
jecxz
or
mov
mov
mov
cmp
and
dec
in
jg
mov
fistpll
aaa
mov
xor
pop
aad
push
xchg
or
mov
movsl
jp
jg
xchg
cs
jo
xor
push
adc
iret
adcl
js
push
xor
fs
push
mov
je
cld
sahf
jo
rcrb
movsb
push
mov
ret
push
jns
daa
jmp
or
cmpsb
ror
mov
dec
push
mov
lret
imul
in
mov
in
clc
fstl
shrb
addr16
jp
popf
jmp
jo
fcoml
add
ror
cmp
cs
imull
push
jmp
hlt
mov
test
adc
mov
jnp
out
out
fsubs
ud2
jle
enter
push
cli
es
sbb
arpl
mov
lods
addps
adc
sbb
idivb
hlt
ja
add
stc
mov
jne
mov
fsubrp
jp
pop
xor
addr16
pusha
mov
loopne
push
cmp
jle
mov
js
or
jae
in
jmp
cmp
and
adc
out
aas
scas
mov
loopne
clc
xor
test
rcr
faddl
clc
mov
loopne
ror
cmpsl
push
dec
xchg
cs
rol
dec
sbb
jno
pop
dec
out
push
bound
stc
out
and
inc
mov
hlt
dec
loop
ret
psllq
and
lods
inc
jne
mov
rcll
inc
sbb
repnz
adc
ret
mov
mov
out
xor
pop
loopne
mov
mov
sub
cmpsl
mov
rcrl
fidivrs
add
adc
push
cmp
pop
movsb
adcl
push
dec
loopne
push
aad
test
sbb
mov
ds
and
push
or
clc
mov
xor
mov
shll
in
inc
mov
push
scas
dec
adc
cmpb
out
dec
or
out
sbb
inc
leave
xchg
sbb
xchg
xchg
pop
add
popf
loop
dec
mov
jne
push
mov
in
mov
push
lea
adc
or
pusha
or
sub
add
push
and
sbb
ds
and
mov
cmpsl
mov
out
imul
fcomps
mov
mov
out
mov
dec
out
jbe
ret
jle
iret
xchg
cmp
pop
sarl
xchg
into
push
cwtl
gs
call
hlt
mov
xchg
add
jmp
dec
add
cmpb
cmp
add
jle
mov
mov
mov
push
addr16
in
xor
cmpsb
or
sub
loopne
cmpsb
jp
push
outsb
push
mov
push
ja
stos
sbb
jns
mov
ljmp
jno
lea
push
mov
inc
sahf
sub
das
movsl
inc
mov
lcall
cmpl
test
mov
mov
shlb
add
ds
rcrb
lock
in
fildll
sub
stos
jge
pop
inc
xchg
sub
push
outsb
std
dec
jecxz
aas
sbb
sahf
je
and
xchg
pop
pop
push
mov
add
cmpsb
adc
inc
dec
xchg
sub
loope
sahf
push
aam
dec
xchg
sbb
pop
cwtl
mov
mov
jg
ljmp
push
stos
inc
fwait
sahf
jae
mov
cmc
inc
inc
ljmp
inc
push
inc
mov
jecxz
icebp
enter
push
in
add
xor
xchg
fucomip
inc
test
jbe
in
in
nop
or
int3
les
sub
xor
adc
adc
cltd
add
inc
push
and
xchg
or
sub
loopne
stos
sbb
sub
mov
inc
clc
xchg
pusha
jg
push
jecxz
sbb
pop
jge
stos
loop
jmp
or
xor
cld
insl
mov
in
and
pop
add
xchg
push
ds
xchg
xchg
dec
lcall
or
add
mov
push
mov
mov
cmp
insb
in
pop
loopne
dec
lahf
ss
outsb
inc
jno
inc
arpl
int3
cmp
add
ja
popf
pop
dec
pop
mov
add
pusha
jp
inc
mov
bnd
test
les
orl
jne
daa
das
test
add
mov
fs
inc
xchg
cmp
push
mov
test
jmp
pop
push
sbb
mov
jl
jge
cmp
std
cltd
or
insl
loopne
sbb
addr16
push
pusha
stc
mov
roll
adc
leave
pop
das
xor
outsb
jp
xor
in
in
pop
aas
or
fwait
bound
out
js
sub
push
add
push
out
add
pop
repnz
mov
mov
and
push
call
xor
outsl
mov
xor
push
js
mov
xchg
jge
push
mov
or
mov
push
or
cmp
inc
xchg
sbb
mov
inc
push
ret
and
pop
jo
vmovq
jle
movsb
mov
insl
hlt
sub
inc
sub
in
xlat
push
and
lret
leave
and
call
xchg
push
xor
push
daa
stos
sar
aad
sbb
and
inc
xchg
aaa
es
imul
test
pop
sbb
inc
movsb
lret
mov
testb
mov
inc
dec
xlat
inc
xor
clc
iret
data16
cmp
add
mov
in
sbb
mov
rorb
mov
push
fwait
testb
loop
sub
outsb
xchg
mov
rol
mov
into
adc
jbe
inc
fcoml
push
jecxz
and
xchg
xor
xor
hlt
aaa
stos
loope
pop
scas
cli
xchg
mov
lods
pop
insb
das
pop
insb
shll
cmpsl
inc
cmp
out
aaa
pop
leave
pusha
mov
imul
icebp
ljmp
cmc
std
nop
daa
xlat
sbb
les
in
stos
push
mov
adcl
sub
jp
pop
and
xor
jl
lea
aam
hlt
or
sbbb
cwtl
push
mov
pop
stos
jne
loop
dec
push
pop
or
jno
cld
sub
pop
loope
sbb
mov
je
xchg
add
xor
test
push
ss
xor
ss
in
xchg
fcomps
outsb
mov
das
cmp
cmp
add
fwait
dec
fdiv
push
loope
idivl
mov
sub
sbb
decb
mov
fsubl
ficompl
cmp
or
psubusb
aad
add
aam
pop
inc
stc
les
xor
lock
shr
push
push
in
inc
fadds
mov
addb
js
xchg
arpl
dec
mov
adc
loopne
dec
xchg
and
stc
xor
fiaddl
enter
pop
iret
sbb
fsubs
divb
scas
jb
pop
mov
cwtl
inc
fmuls
test
pop
mov
push
sbb
loop
ds
jp
shlb
loopne
and
mov
test
jmp
out
mov
push
cmc
in
sub
sub
mov
pop
inc
fs
andb
add
add
cmpsb
cmp
mov
push
mov
into
enter
xor
sub
ret
cmp
aad
sub
mov
out
notl
add
jge
add
xchg
dec
mov
jmp
inc
add
out
repz
inc
adc
sub
inc
xchg
bound
cmp
dec
je
jo
jo
adcb
nop
mov
fcmovu
and
bound
js
xor
out
cltd
xchg
daa
out
mov
inc
mov
push
fwait
push
dec
sub
mov
sub
push
cmp
jno
add
xchg
mov
inc
insb
js
roll
pop
jl
mov
xchg
cli
add
call
hlt
xchg
and
xchg
rorb
into
int
jbe
jno
add
xchg
xrelease
cmp
scas
and
add
add
jae
push
push
into
lods
ljmp
pushf
lcall
lret
cld
jg
mov
xchg
add
lret
div
pushf
xor
sbb
sub
scas
inc
xor
dec
jp
int
nop
fwait
pop
cld
cs
sub
cmp
fstps
imul
jo
inc
mov
mov
ljmp
movsb
sub
push
push
movsl
cmp
xor
xor
sbb
sahf
sub
jae
pcmpgtb
aad
xchg
stos
xor
out
and
push
int
sbbl
outsl
lods
insb
js
and
adcl
sbb
stos
lea
mov
mov
mov
add
and
xor
inc
lcall
inc
sbb
fbld
mov
push
popa
inc
push
arpl
push
mov
or
xlat
jb
mov
gs
inc
jecxz
dec
and
fcmovnb
pop
lds
jbe
xchg
popa
fcompl
std
or
sub
mov
movsl
outsb
push
sahf
fwait
add
push
jbe
sub
icebp
mov
sbb
dec
repz
ret
pop
push
mov
mov
pusha
clc
outsl
jnp
mov
add
inc
mov
pop
push
sarb
sahf
ret
dec
xor
mov
mov
xchg
fadds
leave
cmpsl
filds
pushf
jno
lock
in
xor
xchg
sahf
add
gs
sub
enter
and
cltd
punpcklbw
push
jnp
pop
ljmp
push
jp
lea
shlb
in
mov
mov
pop
jbe
xchg
les
xchg
pushf
lds
xor
adc
shrd
je
daa
stos
push
imul
repz
push
adc
and
xor
sahf
mov
inc
jmp
movsl
sub
out
add
cwtl
and
mov
shll
lcall
ficoml
mov
shll
aaa
call
test
pop
out
scas
mov
xor
loop
rclb
pop
lcall
push
out
add
outsb
roll
xlat
cmp
inc
adc
int
sub
das
push
mov
andl
mov
xchg
pop
mov
adc
addb
rcr
faddl
outsl
cmp
mov
loopne
subb
mov
jge
popf
loopne
inc
icebp
add
fimull
lea
out
cmp
xchg
inc
pop
cltd
xchg
mov
push
add
stos
mov
sbb
popa
call
jnp
and
ret
xchg
ret
mov
insb
ds
pusha
test
jo
xor
mov
sahf
cmc
mov
cmp
xchg
dec
and
fldcw
call
adc
xor
sub
sti
push
hlt
cmp
inc
push
mov
jecxz
out
sbb
mov
dec
test
push
dec
mov
sbb
aad
jmp
jl
lcall
sub
imul
xor
repz
sbb
xchg
and
mov
jle
loope
and
push
add
aaa
das
int3
mov
sub
xor
push
add
ss
adcb
inc
mov
mov
dec
and
test
rorb
shlb
sbb
pop
jl
pop
mov
xchg
leave
int
mov
movsb
rolb
pusha
mov
add
popa
add
popl
lret
lock
push
sahf
xorb
mov
add
inc
std
out
test
cmpl
sbb
mov
aam
gs
mov
sub
pop
mov
rcl
popf
push
cmpsb
cmp
stos
dec
pop
test
inc
cli
aam
or
push
pusha
insl
jge
sti
popf
mov
inc
cmp
repz
dec
jecxz
mov
insl
push
ljmp
jb
jl
jle
or
inc
test
mov
push
lcall
popa
jmp
dec
mov
jmp
test
lods
fldcw
mov
cmp
xchg
fs
dec
jb
mov
and
iret
or
pop
loop
negl
repnz
in
aad
lds
mov
push
adc
dec
push
mov
test
add
and
iret
adc
jg
xchg
adc
inc
fnstenv
in
rcll
mov
lret
inc
hlt
sub
mov
call
cmp
movsl
sbb
movsl
decl
add
repz
adc
sub
inc
xor
lods
ljmp
popf
inc
addb
ljmp
lret
mov
stos
in
sub
or
aas
xchg
mov
aam
jne
addr16
sbb
sub
dec
push
mov
mov
outsb
dec
mov
dec
bound
int
pop
scas
xchg
lods
iret
into
pop
test
push
rorb
xor
sahf
inc
mov
mov
insb
pop
or
les
imul
int3
push
xchg
add
push
or
cmp
loop
xor
sar
cli
movsl
inc
pop
imul
loope
dec
movsl
aam
fwait
enter
test
jbe
insl
cmp
xor
push
adc
sbb
mov
xchg
cs
jecxz
cmp
jle
in
popf
inc
xlat
repz
ret
out
pop
dec
inc
mov
cmp
scas
in
cmp
inc
cmp
jp
sbb
push
and
cltd
dec
push
cmp
movsb
imul
aas
mov
or
cmp
ret
pop
cmp
add
and
sub
mov
lock
adc
fcmovnb
push
loopne
mov
cli
shrb
leave
aas
cmpsb
push
mov
mov
mov
dec
aam
push
sub
mov
fnsave
push
add
inc
cmpsl
xlat
xor
inc
movsb
mov
int3
xor
and
and
lcall
jge
cmp
adc
pop
and
jle
mov
add
loopne
faddl
cmp
cmp
xchg
dec
ja
mov
inc
leave
xor
add
outsl
aad
lea
mov
loop
int3
loop
int
xchg
out
mov
rcl
or
idivl
fidivs
xchg
loope
popf
out
loopne
mov
mov
cmp
or
aaa
stos
shlb
and
add
xchg
add
cmpl
test
lods
mov
int3
mov
sbb
sti
and
xor
lret
test
stc
shr
rcll
push
cmpsb
pop
pushl
insl
ss
lahf
or
mov
shlb
push
inc
inc
stc
xor
sub
insb
pop
loope
imul
imul
xlat
jb
xchg
out
das
cmpsb
fwait
mov
mov
xchg
lock
movsb
sbb
sbb
clc
sbb
mov
pusha
push
inc
rorb
sub
jbe
sbb
mov
jnp
xchg
xor
xor
xor
jb
ret
lods
add
mov
out
repz
pop
stos
inc
xchg
xchg
inc
xlat
mov
inc
inc
out
int3
push
rcll
mov
inc
cmpsl
shll
stos
ficompl
std
outsl
out
js
jle
adc
or
fstpt
sub
outsl
int
push
push
addr16
mov
insl
push
push
push
mov
arpl
cmp
in
std
pusha
cmpsb
gs
cwtl
sbb
sbb
leave
int
in
jle
push
mov
inc
popf
xchg
cmp
inc
mov
sbb
push
stos
addr16
addl
inc
cmc
mov
mov
popa
stos
es
or
jns
data16
lret
pop
cli
loopne
mov
gs
js
xchg
pop
stos
call
lahf
xor
cmpsb
lods
stc
pop
insl
lea
test
cwtl
xor
lods
ljmp
pushf
sub
xchg
pop
mov
in
out
daa
inc
hlt
cltd
je
into
std
pop
loop
sti
and
or
mov
daa
sub
out
mov
inc
push
arpl
dec
mov
jle
sbb
or
push
or
jg
into
call
cmp
add
std
lods
sub
jno
dec
popa
mov
xchg
mov
jo
incl
mov
or
dec
and
loop
push
sbb
aas
push
out
pop
adc
cmp
push
mov
fldl
or
dec
scas
int
jmp
lret
or
jp
in
push
in
pop
arpl
std
loopne
mov
push
test
add
sar
aaa
cmp
cmpsb
ret
loop,pt
or
mov
push
jle
sbb
imul
jne
mov
ja
or
or
push
sub
imul
xor
jno
xlat
and
xor
push
orl
loope
push
rol
inc
dec
sahf
jne
inc
pop
fdivs
cld
pop
or
loop
or
push
lret
add
xor
and
fsubl
ljmp
mov
icebp
andb
sarb
gs
repz
aad
stos
jp
and
push
daa
inc
pop
lahf
mov
leave
pop
sub
arpl
dec
mov
fidivs
xor
divb
add
aad
lea
inc
scas
xchg
or
xlat
andb
in
pop
jge
mov
repz
test
jo
sub
pop
mov
add
fistl
dec
add
icebp
fsts
scas
inc
cmp
test
sbb
inc
push
sub
dec
cmp
fnstenv
dec
fs
aas
sub
outsb
ja
fdivr
mov
jle
into
popf
xchg
push
test
add
les
jle
ja
inc
lock
cmp
jne
orl
repnz
pop
test
mov
nop
lds
clc
loope
xchg
idivl
dec
jne
adc
dec
xlat
adc
mov
sub
dec
cmpsl
frstor
and
pushf
pop
fs
xchg
stos
ds
stos
fisubrs
sub
aad
sub
sbb
xchg
subb
lcall
jbe
stos
mov
cmpsb
push
xchg
pop
ret
jge
add
popf
movsl
popf
and
shr
test
push
call
out
leave
mov
mov
mov
fsub
addl
sub
fistpl
std
enter
hlt
jmp
adc
push
mov
pushf
xor
pop
repnz
push
inc
pop
xchg
je
sub
pop
das
or
mov
cltd
fistps
xlat
scas
push
push
pop
add
pop
inc
push
test
xor
jle
es
mov
inc
fistl
repz
add
mov
xchg
adc
leave
mov
push
pop
stos
ss
jns
push
outsl
cli
cltd
and
pop
mov
dec
inc
add
push
movsl
xor
call
inc
call
ret
mov
call
and
je
mov
cmpsl
cli
cmp
subb
cmp
fisubl
and
xchg
add
jno
cmpsl
pushf
jnp
xor
cmp
cmp
mov
loopne
adc
imul
mov
es
xchg
clc
push
sahf
cmpsb
mov
insb
xor
inc
xlat
push
les
adc
push
fisubs
jo
xor
ja
jnp
or
ljmp
stc
or
add
inc
sbb
out
jmp
inc
fwait
add
xchg
push
cli
repz
fdivr
pop
and
push
mov
or
scas
xor
pop
cmp
inc
sbb
mov
mov
daa
ds
fcoml
rcrb
fists
repz
dec
out
fwait
jb
lock
sar
loopne
mov
push
add
cltd
arpl
push
pusha
stc
dec
cltd
jo
pmaxsw
or
int
fcmovnbe
push
outsl
xor
mov
ret
cltd
imul
stc
pop
dec
in
xchg
xchg
push
sub
mov
cmp
sbb
xchg
push
pop
leave
outsb
sub
cvtdq2ps
mov
jo
pop
and
roll
sub
dec
add
xor
pop
mov
int
push
je
and
je
or
addr16
jno
push
add
xchg
xchg
mov
jns
xor
dec
adc
loope
int
xchg
inc
add
mov
leave
sbbl
pop
lahf
out
and
push
nop
incl
enter
and
popa
clc
sbb
cli
or
into
call
movsb
mov
sbb
dec
dec
adc
xor
fidivl
cwtl
sub
xchg
xchg
ret
pop
jnp
mov
or
lods
test
pop
repz
and
jb
jno
loopne
int
andl
mov
pop
shrb
mov
leave
cmp
xchg
cwtl
push
gs
dec
cmc
push
cmc
js
clc
sub
cld
or
jnp
iret
and
lock
jmp
mov
or
pop
mov
sub
jmp
mov
int
push
icebp
mov
out
out
xor
pop
cmpl
hlt
push
jbe
xchg
insb
cltd
dec
cmp
sbbb
mov
fcomps
or
cmp
scas
fs
lds
int
jg
mov
inc
roll
add
fcmovnb
aaa
cwtl
je
mov
push
inc
push
subl
mov
mov
adc
insl
int3
int
inc
pop
adc
into
fmull
sub
push
add
nop
sub
dec
flds
mov
mov
jno
je
or
and
jl
inc
jae
loopne
jle
xor
dec
scas
mov
je
ljmp
test
cmpsb
test
push
ss
sahf
rorb
or
aaa
dec
pop
clc
cld
mov
cmpsl
dec
push
jo
cltd
aam
cmp
faddl
cwtl
clc
mov
insl
push
cwtl
stos
rcrl
in
mov
das
mov
subl
xchg
adc
and
leave
mov
shr
popa
mov
in
into
es
and
adc
in
push
addr16
mov
xchg
fnstenv
xor
es
je
sub
xchg
sub
jo
pop
mov
daa
in
xchg
sub
subl
fisttpl
stos
and
mov
fsubrs
inc
pop
idivb
or
in
sub
dec
out
fwait
sbb
xchg
movl
into
mov
jnp
ret
movsb
dec
pushf
shlb
xlat
roll
inc
out
cli
addl
in
cmpsl
cli
repz
scas
loope
lock
les
mov
push
in
repz
inc
out
cmp
adc
xchg
fimuls
mov
lcall
sti
testb
sbb
imul
ret
pop
push
lahf
dec
pop
mov
lds
mov
push
leave
mov
push
call
adc
jb
insb
jmp
sbb
xor
and
test
mov
dec
mov
pop
out
or
jbe,pn
popa
loopne
lea
fcoml
repnz
sbbl
cli
sti
adc
cmovns
cmpsb
sahf
pushf
mov
hlt
rorl
lgs
mov
inc
insl
add
mov
inc
stos
add
pushl
jp
adc
les
dec
add
xchg
mov
and
sbbl
popa
insl
loopne
pop
es
mov
fistps
push
jge
rcrb
fwait
push
int
and
inc
sbb
mov
fisttpll
test
lock
sahf
push
xchg
mov
lahf
adc
lds
bound
adc
test
aas
hlt
dec
dec
stos
inc
pop
cmp
or
jge
jo
push
cs
xchg
pop
hlt
ret
mov
mov
add
imul
ds
loop
mov
aaa
clc
dec
or
rcl
addb
adc
nop
xchg
mov
jge
and
pop
cli
add
in
jg
test
shll
cmpsb
mov
in
addb
rcrb
addr16
fwait
adc
iret
pop
in
adc
dec
ret
pop
cmc
repz
enter
pop
mov
push
push
cwtl
arpl
in
inc
mov
lahf
push
je
es
adc
inc
fadds
ja
sbbb
pop
and
andb
sti
cmc
int3
scas
xor
mov
add
mov
icebp
xchg
xor
push
cmp
and
dec
adc
sub
pusha
xor
out
add
das
adc
mov
jge
fstps
xor
mov
jg
into
cmp
cmp
xchg
dec
rclb
and
fcompl
mov
mov
jno
mov
lock
pop
jmp
pop
and
xor
or
xor
add
sub
out
dec
and
pop
adc
xlat
sbb
xchg
scas
lahf
je
fsubs
repnz
mov
xchg
adc
in
daa
add
repnz
mov
adc
cmp
jnp
sbb
ss
ljmp
xor
mov
inc
inc
test
push
jmp
out
hlt
movsl
adc
push
fidivs
lret
subl
or
jg
cmp
lea
adc
xor
shl
jbe
out
sub
je
bnd
mov
mov
fdiv
push
das
scas
cwtl
das
loopne
leave
xor
repz
in
in
push
movsb
mov
push
ds
adc
jmp
mov
out
das
dec
repz
sub
fldl
mov
mov
out
jne
and
daa
inc
dec
jle
mov
or
cmp
rorb
in
xlat
xchg
or
fidivl
gs
xchg
mov
dec
sbb
call
mov
das
jl
inc
push
cmpsl
and
and
jmp
enter
push
sub
and
movsb
xor
fsin
inc
clc
iret
clc
sub
outsl
push
popf
inc
mov
ret
dec
mov
mov
orb
cmc
push
xchg
sub
sbb
out
jne
insb
mov
pop
out
loope
lea
std
out
imul
outsl
cmpb
jbe
sub
mov
movsb
in
ret
pop
daa
pop
mov
jnp
cmp
cmp
pop
rcrl
lahf
pop
pop
sub
xchg
sahf
cmc
aad
or
cmp
cs
xor
sbb
cmpsl
data16
lcall
lret
in
mov
push
jmp
ficomps
in
sub
das
xchg
hlt
jp
lds
add
fadds
stos
mov
pushf
mov
mov
repz
sbb
dec
pop
fcoms
xchg
imul
dec
decb
dec
sbb
cld
adc
iret
jmpw
daa
notl
pop
adc
ljmp
icebp
nop
ficoml
and
call
adcl
xchg
lods
xor
aas
lock
cmp
gs
xchg
push
lods
stos
shr
cs
adc
inc
push
xor
push
mov
popf
cltd
xor
out
lret
pushf
les
dec
out
push
ret
jnp
add
adc
stos
or
inc
push
push
aam
dec
cltd
adc
mov
jbe
js
push
mov
mov
loop
and
xchg
sub
test
push
icebp
jne
inc
test
bound
push
addr16
fisttpll
lods
fs
and
rolb
insl
xor
push
xrelease
adc
enter
pushw
popf
arpl
jbe
out
test
or
pop
jp
arpl
xor
subl
add
xor
xchg
adc
jp
push
in
push
ret
jb
sub
mov
mov
mov
dec
pop
lds
imul
jp
push
in
bound
repz
sarl
aam
xor
mov
adc
pop
sub
testl
popf
lods
imul
aad
imull
and
in
insb
jno
inc
jp
pushf
sbb
sbb
lds
hlt
xchg
add
mov
test
inc
aad
lds
xor
pop
aaa
adc
movsb
imull
jae
das
movsb
jecxz
pop
testl
pop
repnz
and
fidivl
pop
mov
jecxz
push
cwtl
loope
pusha
xchg
mov
pushf
addr16
adc
cmpl
push
xor
int
cmp
mov
int
in
push
rolb
scas
mov
or
xchg
cmp
jle
cmp
jl
enter
jl
shll
or
xor
icebp
les
outsl
push
loopne
lret
or
addr16
xchg
call
test
and
push
scas
push
test
cli
fisttpll
xor
arpl
mov
dec
mov
dec
xlat
outsl
hlt
push
ret
into
jp
and
outsb
aad
mov
adc
bound
in
mov
dec
andl
adc
mov
mov
and
test
movl
push
inc
sbb
mov
outsl
jns
jl
push
cltd
mov
in
das
sbb
inc
or
cli
xchg
xor
sbb
je
lret
testl
mov
pusha
xor
stos
push
mov
jo
xor
lahf
ljmp
xchg
dec
jecxz
jmp
xor
add
push
outsb
pusha
lea
mov
pop
pop
push
inc
imul
push
lret
mov
jg
add
xor
xor
mov
pop
pop
inc
mov
jge
adc
mov
shr
fnstsw
scas
test
jg
repnz
sub
and
or
mov
jmp
dec
dec
sbb
cmc
lea
aaa
sti
mov
mov
and
xor
adc
cmp
sbb
push
lods
in
mov
dec
push
push
cmpl
imul
cwtl
inc
cli
pushf
in
mov
ljmp
sahf
clc
rolb
daa
adc
cmp
scas
das
mov
ss
popf
sbb
mov
in
sbb
mov
scas
imul
mov
test
inc
adc
pusha
stc
xchg
fwait
inc
fidivrs
pop
pop
mov
jno
sub
rorl
sbb
sbb
push
dec
cmp
imul
add
sahf
loopne
push
fbstp
out
test
inc
pop
sub
pop
add
fsubl
mov
jnp
andb
cmp
add
inc
mov
dec
pop
push
in
xor
push
pushf
xor
or
cli
sub
lret
ja
aad
dec
push
cli
mov
cmpsl
ja
addr16
fdivs
pop
jg
or
lods
pop
stc
ret
add
clc
push
jmp
xchg
outsl
hlt
call
imul
scas
mov
lcall
sub
aas
inc
hlt
mov
push
cmp
cmpsl
xchg
negb
rcrb
sbb
mov
loope
jb
xchg
sub
loop
mov
add
mov
in
jecxz
mov
cmc
or
pop
sub
or
dec
mov
xchg
clc
inc
scas
or
test
in
lock
inc
insb
fmul
sbb
repz
cmpsl
ds
jmp
pop
mov
dec
jnp
shrb
mov
push
dec
mov
fiaddl
lcall
xor
cmp
cmpsb
sti
fmuls
mov
lret
test
scas
test
inc
jg
mov
sarl
enter
out
pushl
cmp
push
adc
movsw
mov
fs
xchg
pop
stos
push
mov
and
pop
jl
sub
sub
mov
push
in
xchg
sub
lods
xchg
cmp
nop
stos
mov
mov
scas
mov
and
dec
movsb
push
push
pop
sbbb
test
pop
out
jae
sbb
mov
lods
fistps
mov
jae
adc
jne
mov
clc
mov
out
fwait
dec
sub
imul
mov
inc
jnp
mov
mov
ret
shl
cmp
std
sbb
cwtl
jl
xor
xchg
nop
fists
ss
imul
ret
cmp
pop
push
test
out
das
out
xchg
stos
xchg
and
cmp
or
in
pop
push
les
jmp
fs
push
lds
fcomi
mov
jmp
fidivs
cmp
loopne
and
adc
fistpl
movsb
in
cmp
mov
dec
push
add
repz
lcall
push
push
test
sbbb
outsl
or
xchg
gs
cmpsl
sahf
cmp
aad
rorb
pop
jmp
jo
jbe
test
andl
mov
jecxz
test
repnz
adc
clc
cmp
xor
hlt
in
loop
ror
lcall
imul
aam
fdivl
dec
pop
inc
and
push
lods
xchg
mov
fs
insl
scas
inc
or
xchg
stos
inc
mov
lcall
pop
inc
inc
movsl
sbbl
xchg
popa
sbb
mov
lret
cmc
inc
adc
xchg
int
ret
mov
push
pop
push
mov
roll
fcmove
fildll
inc
std
sub
mov
iret
cmc
push
push
fidivrs
pop
push
rorl
lret
popf
mov
adc
cmp
xor
insb
add
cwtl
hlt
lock
push
fs
inc
mov
mov
test
jns
jecxz
movsb
mov
mov
mov
ss
adcl
idivl
or
or
push
fstp
addr16
clc
lods
pusha
pop
enter
jnp
lcall
and
mov
movsb
insl
jmp
mov
push
pop
hlt
xor
ret
push
sahf
add
mov
or
das
cmp
mov
xchg
int3
sub
mov
test
loopne
pop
sub
push
jl
pop
ret
jnp
lcall
jae
ret
jo
lods
push
dec
pop
xchg
les
clc
dec
cmpsl
xor
or
pushf
inc
cmpsl
int
xchg
add
adc
fwait
pop
scas
movb
sbb
mov
jecxz
outsb
sub
sub
rcrb
jl
inc
test
add
jge,pn
repz
mov
jle
mov
sub
fmul
jno
call
in
xchg
aas
sub
lods
or
loop
stos
stc
pop
test
xor
pop
adc
rolb
cmc
adc
inc
nop
pop
fbld
addb
fldl2t
xchg
dec
dec
loopne
cmp
xchg
inc
pop
pop
push
out
jecxz
mov
pop
cmp
inc
push
and
and
rcrl
dec
fmuls
sub
jae
adc
imul
aam
pushf
jae
sub
mov
add
hlt
and
dec
imul
dec
or
stos
aas
adc
in
mov
psrlq
mov
mov
dec
sti
fwait
inc
adc
xlat
es
push
lods
mov
stos
adc
fistl
pop
jnp
fsubs
cmpps
adc
jbe
cwtl
imul
ficoms
imul
in
bound
movsb
in
sahf
pop
and
js
adc
mov
adc
and
inc
idivl
movsl
jb
jle
add
test
in
test
js
cmp
rorb
xchg
jmp
push
out
sbb
loop
mov
icebp
dec
push
mov
xor
push
sahf
mov
in
dec
push
or
push
inc
in
cmp
das
inc
lea
push
fldenv
mov
and
adc
add
repnz
push
cli
fwait
lea
imul
insl
sbb
imul
pushf
popl
fnstsw
lahf
imul
fisttpl
dec
jb
shll
dec
pop
mov
xchg
dec
jmp
addl
popf
jge
jae
mov
orb
lcall
pop
nop
daa
nop
lea
pop
loopne
or
mov
sbb
or
das
mov
outsl
sub
imull
mov
sahf
pop
mov
aam
test
and
mov
inc
in
in
push
leave
push
in
or
jae
cmp
je
xchg
insl
jno
pop
rcrb
jbe
mov
cmpb
push
outsb
dec
outsb
in
lahf
imul
and
orb
sub
pop
xchg
xchg
dec
pop
xchg
out
sbb
movsb
cmp
xor
jge
bound
ja
jge
sub
sti
scas
andl
mov
sbb
mov
lods
jb
or
or
shlb
pop
or
pop
dec
pop
in
add
mov
fidivs
enter
mov
shrl
inc
out
adc
xchg
xor
push
fildl
mov
aam
ds
mov
pop
movsl
and
xlat
cmp
idiv
test
clc
imul
stos
cli
insl
rcrb
jge
insl
mov
jo
inc
pop
rorl
and
inc
fxch
cmp
rorl
fnstcw
and
mov
and
es
jne
lcall
cld
fs
xchg
xor
jge
into
loopne
in
call
or
or
mov
push
add
inc
shll
testl
lock
nop
leave
and
aaa
int
xchg
hlt
cmp
fidivrs
dec
jnp
sti
ds
dec
jmp
test
inc
or
outsb
dec
subl
stos
push
popf
pop
push
xor
jo
or
xor
sub
imul
lods
and
add
xchg
and
call
fs
sub
sbb
xchg
inc
add
sarl
sub
fwait
inc
shll
pop
mov
or
inc
loopne
push
testb
xchg
adc
dec
xor
frstor
mov
adc
rorb
mov
pusha
pop
inc
movl
adc
push
imul
xchg
inc
xor
push
enter
jmp
mov
sub
push
lahf
push
xchg
fisttpll
ja
aam
test
adc
popa
jmp
sarl
push
push
mull
leave
add
or
jmp
std
add
repz
insl
idivl
mov
add
lock
add
jle
insl
pop
cmp
inc
push
cmp
out
aad
push
cmp
bound
add
jns
cmp
jo
addr16
cmp
inc
adc
push
mov
xlat
stos
out
adc
push
dec
inc
dec
xlat
adc
icebp
sub
dec
ds
dec
aas
mov
adc
gs
sub
push
xor
test
sub
adc
data16
outsb
mov
jp
loop
mov
sbbb
xchg
inc
je
add
call
in
insb
imul
cmp
lret
cmp
and
fsubl
fistps
out
shlb
insb
jle
and
cmp
xor
mov
xchg
insl
or
addr16
insl
add
or
adc
jae
dec
mulb
leave
and
push
add
test
xor
shlb
aas
insb
and
popa
aad
sbb
pop
jmp
adc
imul
sahf
in
or
in
inc
sub
sahf
pusha
pusha
test
inc
shll
push
jbe
adc
mov
jle
test
ficompl
pop
adcl
push
or
sbb
mov
and
stos
mov
jns
jno
aad
push
or
orb
adc
icebp
mov
jecxz
sbb
or
js
cmp
xchg
negl
mov
fisttpll
aad
mov
sub
adc
push
icebp
cs
xchg
fwait
cltd
xor
mov
mov
push
sti
xor
jb
in
nop
imul
rcl
leave
data16
jle
add
out
adc
nop
cmpsl
clc
aad
lahf
ds
ret
movb
outsb
dec
add
inc
add
pusha
cli
and
xlat
jb
add
inc
jo
popf
mov
jle
iret
mov
pushl
lock
imul
scas
hlt
repnz
lods
rcll
mov
inc
jle
xchg
scas
std
psubq
pop
testb
and
xor
filds
sbb
sti
cmc
mov
xorb
pop
adc
pop
add
repz
ja
das
aaa
mov
push
xor
mov
dec
popa
sbb
cwtl
insb
pop
jecxz
jmp
dec
loopne
in
loope
adc
xor
inc
dec
pop
jb
icebp
sbb
jb
xlat
jge
sub
pop
inc
sbb
fisubl
and
push
daa
scas
in
lds
jmp
sbb
sbbl
incb
jl
outsl
xor
xlat
nop
inc
clc
adc
or
movhps
sbb
or
imul
push
adc
mov
push
dec
popa
clc
mov
and
push
or
out
test
cmp
push
fisttpl
addr16
cltd
xor
data16
subl
dec
fsubrs
pop
adc
inc
xor
outsl
and
ficompl
pop
pop
mov
push
jno
popf
push
stc
adc
aas
dec
sbb
jae
in
sbb
or
jno
push
push
pop
packsswb
ja
or
das
adc
jnp
and
aam
or
fcoml
scas
and
ljmp
mov
movsb
insl
loopne
mov
fists
push
cwtl
out
lret
dec
adc
cmp
and
cmp
push
sub
jle
icebp
sub
pusha
adcb
and
lods
test
push
xor
xor
or
ret
pop
fs
pop
ficompl
jmp
call
push
adc
cmp
mov
pop
push
out
inc
pop
sub
dec
sub
outsl
push
sahf
lock
sub
popa
faddl
add
popa
or
mov
mov
pop
mov
sahf
lods
fsubl
lret
lret
in
mov
inc
iret
movl
cmp
mov
ficompl
mov
cld
dec
pop
jns
mov
test
inc
loope
mov
out
inc
into
in
push
ds
mov
xchg
dec
lods
pop
inc
cmp
add
fwait
jno
xchg
dec
aaa
sbb
or
xor
jmp
hlt
jne
fucomi
mov
pop
sub
and
mov
mov
xchg
jp
push
lahf
or
inc
pop
repnz
popa
into
andb
sub
ror
jl
mov
pop
mov
mov
push
ljmp
jb
shll
xchg
aas
jnp
add
cltd
pop
cmp
popa
push
sub
shlb
sub
push
stos
jmp
pop
in
pop
out
out
or
inc
aam
xchg
jmp
stc
nop
in
jecxz
shrl
lcall
je
shrl
mov
xchg
push
jle
or
cmp
or
pop
jo
insl
xchg
sub
push
mov
xchg
hlt
and
stos
jo
mov
xchg
mov
cmp
lds
jnp
cmpsl
fidivs
jae
sahf
mov
push
push
mov
aas
jg
fnstsw
out
js
sbb
cld
dec
sub
sbb
icebp
inc
fidivl
pushf
test
xchg
popa
repz
pop
push
push
sub
pop
lods
mov
idivb
ret
inc
fwait
pop
mov
lea
leave
pop
xchg
cmp
adc
cmp
xchg
ljmp
lock
and
sub
cmpsl
sbb
inc
mov
sbb
cmc
dec
fnstcw
lea
mov
daa
out
adc
in
pop
jl
test
cwtl
dec
lret
shrl
out
sbb
add
rcr
in
jo
jg
xor
mov
aaa
into
xlat
adc
mov
sub
jg
repnz
pushf
dec
negl
daa
unpckhps
pop
jmp
and
addl
sub
mov
mov
lea
or
sub
mov
fadds
hlt
push
sub
jnp
inc
imul
mov
js
lahf
push
out
rolb
ljmp
sub
sub
xchg
mov
dec
push
fnsave
dec
movd
movsb
ja
mov
push
sbb
mov
fsubl
das
cs
xchg
into
inc
mov
xchg
imul
popf
mov
fwait
call
sbbb
ds
sub
nop
add
sbb
cltd
sub
mov
lret
sti
push
test
lret
sbb
inc
push
cmp
mov
jge
pop
rclb
loopne
notl
and
dec
mov
sbb
mov
jno
sbb
fldenv
adc
arpl
bnd
sbb
pop
xor
jecxz
cwtl
lods
mov
fidivl
leave
scas
xchg
lret
inc
xor
sahf
inc
sbb
lock
xchg
cmp
mov
pop
push
pop
cmc
aaa
std
dec
pushl
pop
jb
xor
fnstsw
fiadds
mov
arpl
pop
cltd
in
dec
stos
adcb
jo
mov
scas
int
xor
xchg
xor
cli
adc
mov
stos
xchg
push
popf
mov
jno
and
pop
push
fcoms
loope
lcall
dec
cmp
mov
push
push
leave
jnp
ret
mov
pop
bound
adc
ds
jae
out
inc
and
adc
pop
mov
fisttps
sarb
add
jnp
cmp
xor
jecxz
or
ficompl
and
sbb
cmp
subb
xchg
call
push
insb
add
mov
and
movsb
in
in
mov
push
jmp
and
dec
or
add
fidivs
sti
mov
push
xor
mov
inc
fmuls
lret
sub
rcll
xchg
leave
int3
push
mov
jmp
loop
fisttps
cmp
ret
pop
stos
popa
lcall
and
pusha
push
lahf
push
pushf
or
xchg
cmc
mov
or
mov
cmp
scas
push
ret
lret
xchg
xor
adc
push
xchg
frstor
insl
loopne
jge
mov
dec
xor
xor
push
mov
inc
jne
push
out
movsb
jecxz
loopne
mov
je
leave
and
icebp
xchg
movsb
push
lahf
pop
mov
mov
cmp
loopne
daa
dec
sbb
xor
stc
mov
inc
loopne
lahf
shrb
sbb
and
addr16
dec
das
cmp
dec
pop
aam
mov
fidivrl
mov
sub
sbb
inc
pop
lods
xchg
mov
xor
insl
lcall
and
add
jbe
jecxz
das
cwtl
stos
cmp
mov
pop
and
and
enter
test
xor
sbb
cmpsl
mov
mov
ds
repz
stos
add
pop
mov
int
jnp
shl
iret
dec
xchg
sbb
outsb
lea
idivl
xlat
fldenv
test
pushw
in
mov
loope
push
adc
sub
lock
dec
jnp
jle,pt
lret
insl
ret
jne
xchg
xchg
sbbl
pop
mov
pop
dec
out
loop
pop
push
outsb
iret
in
fwait
popa
lds
cmc
in
mov
push
pop
sbb
xchg
adc
add
js
and
ja
push
fwait
jnp
out
push
outsb
pushf
bound
fiaddl
hlt
inc
inc
jg
jmp
aaa
push
dec
xchg
test
movsb
mov
sub
pushf
shlb
xor
sub
mov
jl
mov
sbb
fisubl
dec
sub
mov
sub
push
je
arpl
inc
push
cmp
daa
scas
or
cmp
xchg
mov
rcrl
int
hlt
int
sub
dec
stos
aas
push
call
xchg
pop
hlt
data16
stos
inc
mov
cltd
clc
fcmove
push
in
mov
sbb
jmp
fists
push
xchg
jl
call
nop
jnp
leave
ss
shrb
lods
xchg
or
mov
lret
dec
loope
enter
mov
sbb
or
rcll
dec
adc
cmpsb
pop
or
je
add
inc
dec
mov
out
icebp
dec
lahf
mov
push
in
inc
lea
gs
sbb
leave
inc
pushw
cmp
dec
iret
ret
jb
jmp
mov
push
mov
jno
movsl
jp
push
jl
pushf
das
nop
dec
sbb
int3
sbb
mov
push
cmpsl
mov
data16
or
ljmp
call
or
adc
or
mov
fdivs
sub
or
adc
or
rcrl
mov
fwait
xor
test
xchg
fwait
xchg
xor
mov
int
dec
out
jge
cwtl
and
sbb
sbb
cmp
xchg
cltd
or
pop
movsl
cmp
mov
hlt
fwait
xchg
fisubrs
ljmp
jno
push
neg
mov
xor
inc
loope
in
pop
pop
cmpsl
xrelease
cmp
jecxz
adc
add
mov
and
in
ret
aaa
push
test
fmul
mov
fs
fs
mov
adc
mov
sbb
inc
mov
fs
sub
in
jp
stc
ljmp
aad
and
je
push
adc
push
xchg
stos
arpl
and
pushf
aas
icebp
or
hlt
push
push
jnp
cmpsb
sti
loope
std
outsl
xlat
sub
pop
pusha
jmp
mov
xlat
divl
and
ja
sub
dec
ja
das
js
mov
push
popf
enter
adc
mov
pop
mov
mov
dec
fs
frstor
xchg
aaa
clc
cmpsl
sti
lods
xchg
mov
and
outsl
lret
xchg
nop
adc
dec
scas
das
pop
xchg
mov
lcall
lahf
pop
dec
es
or
pop
mov
pusha
fildl
test
mov
mov
fdivrl
pusha
cmc
push
sbb
outsb
jmp
xchg
int
inc
jb
jns
pop
sbb
push
and
dec
arpl
sub
dec
dec
pop
pushf
jl
icebp
pop
ficomps
and
pop
mov
movsl
mov
push
loop
aam
movsb
sti
xchg
fs
ret
cmp
adc
int3
pop
imul
imul
dec
and
aaa
or
aas
loop
add
cmp
imul
add
push
fnsave
pop
ret
into
sbbl
mov
jmp
or
inc
jl
mov
aas
sbb
and
push
jmp
fprem
jo
ljmp
into
xchg
dec
mov
xor
mov
mov
xor
or
inc
fistpl
jnp
mov
push
ret
dec
out
clc
aaa
lahf
or
xchg
leave
loope
shll
inc
rorl
subl
adc
mov
cmpsl
xor
or
aas
aas
xchg
xchg
sbbb
sti
or
dec
jecxz
push
add
fisubs
arpl
imul
adc
cmp
pop
in
cwtl
mov
mov
cmp
jnp
andl
mov
popf
push
xor
and
in
mov
push
mov
xor
sub
sub
dec
repz
xchg
pop
montmul
cmpsb
xchg
add
mov
pop
enter
ficoms
push
in
jae
cmpsb
mov
notb
fldenv
leave
lcall
fs
std
mov
dec
stos
pop
je
mov
lea
std
xor
orb
decl
leave
push
rcll
lods
imul
add
fldcw
push
xchg
mov
or
push
out
sar
repnz
mov
adc
sub
sub
inc
mov
push
popa
inc
popf
xor
mov
inc
clc
jae
and
fs
dec
push
mov
mov
and
mov
or
filds
rorl
mov
xor
push
xchg
ds
dec
jb
enter
ss
lret
aaa
mov
sbb
or
stos
mov
out
cmpsl
mov
rorl
repz
jl
cmp
notl
inc
fildl
cli
jne
ljmp
adc
mov
aas
or
or
dec
cmp
incb
popf
xor
or
gs
jmp
sbb
out
jns
cltd
test
push
jbe
lcall
cmp
cmp
dec
fwait
aam
shll
scas
and
jbe
push
test
inc
fidivl
add
xchg
enter
clc
in
movsb
jns
sbb
icebp
pop
popf
pop
xor
inc
sbb
sbb
mov
movsb
add
fdivrs
pop
and
pop
cmp
out
dec
hlt
inc
stc
and
sti
mov
mov
shl
dec
and
mov
daa
sub
pop
outsb
or
arpl
push
pop
xor
cwtl
arpl
int3
pop
push
push
sahf
mov
sahf
subl
inc
xchg
jmp
mov
call
rol
les
mov
pop
dec
insl
pop
lods
push
flds
jmp
adc
out
fisttpll
into
fwait
inc
pop
ret
lret
xlat
sub
add
inc
sahf
add
ficoms
cmp
push
scas
shll
adc
push
mov
sub
les
xchg
sub
das
sub
dec
aam
inc
popf
cmp
cmc
add
mov
push
std
add
scas
out
hlt
hlt
mov
shrb
sub
mov
fisubl
pop
test
xchg
mov
insb
adcb
add
jb
cld
xchg
or
gs
push
ret
into
mov
cld
push
mov
add
pop
push
pop
aaa
fstl
out
inc
enter
data16
xchg
sub
dec
pop
repnz
outsb
aam
stos
nop
xor
mov
or
pop
pop
out
into
ret
cmc
xchg
xor
outsl
dec
fwait
adc
push
lods
ficompl
stc
int
xor
out
test
addr16
data16
fisttps
es
mov
push
fsubrs
mov
divb
das
sbb
ret
aas
or
sub
pop
mov
out
fbstp
icebp
in
addr16
mov
sub
dec
in
ror
and
push
scas
inc
jns
ret
insl
out
dec
int
cmp
leave
jecxz
sbb
iret
outsl
stos
fldenv
mov
ret
sub
xor
inc
mov
adc
into
faddl
or
xchg
inc
stc
out
pusha
cmp
mov
jge
add
mov
mov
sub
cmp
push
adcb
pusha
ss
subl
push
insb
or
mov
daa
in
pop
sahf
dec
loope
movsb
cmpsl
push
mov
jns
push
inc
rcrb
mov
outsl
add
sub
out
and
jbe
ret
sbb
and
cmp
push
cmp
data16
iret
dec
push
insb
push
push
shl
fcmove
pusha
idiv
cld
lock
fadds
xchg
xor
jge
xchg
xor
adc
cmp
lcall
sbb
out
and
mov
shlb
lods
dec
jp
push
leave
add
stc
push
dec
mov
aaa
xchg
push
fs
xor
xchg
xchg
pop
clc
fwait
mov
push
sub
pop
movd
imul
mov
insl
test
add
mov
mov
stc
lahf
test
or
mov
add
xor
arpl
pop
cs
sbb
and
jg
movsb
scas
daa
add
and
enter
xchg
dec
push
xor
ret
push
daa
push
popa
fmull
mov
outsl
loop
push
out
inc
pop
push
test
arpl
les
lcall
popa
stos
idivl
fsubrs
cmc
vpunpckhdq
aam
repnz
or
call
push
mov
dec
pop
int
or
dec
mov
sti
mov
pushf
arpl
out
sahf
and
ljmp
pop
inc
stc
je
lods
test
ficoml
xchg
inc
sbb
xchg
cmp
cltd
mov
mov
movsl
lock
push
mov
out
imul
ja
shl
sbb
push
ljmp
sbb
xchg
adc
mov
cltd
sbb
into
gs
repz
add
ds
dec
mov
dec
push
shll
shrl
and
cmp
fbld
ficoml
mov
add
jl
mov
stos
push
or
add
loop
lds
push
xchg
popf
mov
sbb
cmp
and
push
push
mov
or
clc
mov
xchg
rolb
sbb
mov
xor
add
pop
std
pop
popf
lcall
out
push
or
push
xor
aaa
stc
or
ds
mov
xchg
sub
stos
incb
sub
sbb
int3
mov
dec
jmp
ja
fcoms
sub
std
inc
mov
jl
or
lds
fs
decb
cmovb
push
iret
dec
fwait
jae
xchg
mov
cmpsb
in
aad
in
sub
js
xchg
jno
xchg
pop
loope
imul
movsl
add
in
adc
xchg
jae
and
test
and
cmpsb
arpl
or
cld
in
adcl
mov
mov
add
and
fistl
jle
cmp
or
aad
mov
pop
sub
inc
scas
stc
xchg
adc
pushl
pop
or
pusha
sti
xchg
add
in
orl
adc
ret
xorl
jne
xchg
or
mov
out
xchg
rcl
mov
andb
push
cs
lock
sub
outsb
mov
push
test
in
and
stos
hlt
mov
xchg
lcall
mov
mov
sub
fadd
or
ret
xor
repz
pusha
sub
dec
and
push
and
call
movsb
push
fldt
sbb
lods
mov
shlb
arpl
mov
stc
ds
in
xchg
cwtl
xor
divb
test
dec
jo
test
aad
xchg
jp
lret
and
sub
stc
lock
call
dec
lret
addr16
add
push
stos
mov
mov
jne
shrb
add
jae
andb
aam
sti
and
dec
mov
lahf
in
mov
adc
push
cmp
pop
jecxz
loope
pusha
cmp
cmp
xchg
xchg
sub
nop
mov
cmc
insb
jp
push
mov
out
test
sub
or
aas
xlat
outsb
outsl
jl
cmc
push
rcr
out
mov
dec
and
sub
mov
sub
xlat
movsb
jg
mov
fbld
add
je
aam
mov
push
out
in
inc
jno
in
scas
add
gs
outsb
les
int3
adc
shrl
repnz
shlb
imul
fidivl
fwait
add
mov
clc
or
add
xchg
dec
sbb
cmc
inc
movsl
ds
addr16
xor
xchg
clc
or
in
xchg
and
mov
mov
out
sub
jl
ret
mov
xor
fstl
popf
jecxz
xor
insl
jg
mov
xchg
and
lahf
push
js
out
test
mov
out
jmp
test
mov
jp
ja
mov
xor
pop
mov
dec
notb
pop
testl
insl
in
imul
jne
bound
insb
push
pop
fiadds
out
jp
inc
xchg
cmpsl
subb
in
scas
sbb
nop
fstpt
xchg
add
push
loopne
mov
lock
clc
popa
mov
or
push
nop
dec
fisubl
xlat
push
das
add
jp
ret
aad
outsb
push
xor
fbld
lret
je
std
dec
data16
jp
popa
loopne
pop
std
arpl
cmp
fsubs
jne
push
or
out
sahf
dec
cmp
int
ds
mov
movsl
and
call
xor
mov
dec
mov
push
dec
loop
xchg
daa
jns
imul
fidivrl
mov
jl
mov
inc
lcall
xor
mov
lods
shl
mov
cmpsl
in
mov
mov
outsl
aad
jbe
js
rorl
out
xchg
xor
pop
cmp
push
pop
leave
test
ds
adc
daa
dec
mov
jg
fisubl
lret
xlat
cmc
jl
outsb
mov
sub
mulb
lds
sub
mov
jle
dec
aad
sbb
ret
or
shrl
sbbb
scas
mov
mov
pusha
fistl
out
popf
cmp
push
inc
sti
repz
lret
jae
ret
outsb
iret
nop
cltd
xor
lock
sbb
jl
inc
mov
sub
test
dec
ffreep
pushf
cltd
test
inc
out
popa
fisubrl
movsb
jae
mov
pop
push
fucomip
mov
out
stos
shrl
icebp
in
jge
pop
xchg
mov
jmp
push
pushl
mov
jno
stc
icebp
stc
or
sbb
pop
sub
outsl
add
xor
fists
pop
icebp
inc
xor
cmp
ret
repz
adcb
push
test
bound
adc
sbb
mov
inc
in
sbb
fmull
mov
les
in
cmpl
inc
add
pop
arpl
xchg
negb
push
pop
and
out
scas
adc
stc
ret
mov
hlt
xlat
loope
out
shlb
ret
mov
sti
jbe
push
outsl
pushf
adc
push
mov
and
or
adc
cmp
js
push
orb
sti
pop
loop
adc
ja
and
inc
inc
ret
dec
loopne
cwtl
dec
repnz
mov
pop
jl
adc
jbe
shrb
push
mov
loopne
mov
cmp
lock
or
lods
xor
movsb
cmc
dec
cmpl
or
popa
xor
aad
adc
adc
add
nop
repnz
dec
lock
xchg
mov
je
jge
dec
mov
sbb
push
jp
xchg
cwtl
test
fisubs
mov
push
push
gs
inc
mov
add
xlat
add
push
cmp
inc
fcoms
shlb
rcl
mov
loope
fmuls
push
shr
cld
or
push
jb
imul
fstpt
ljmp
add
push
stos
or
fstp
sub
int
imul
mov
cmp
push
mov
sub
push
movsl
cmp
push
and
stos
data16
pop
rorb
lock
push
sub
cmp
les
push
mov
mov
roll
sahf
and
xor
xchg
sbb
mov
gs
repnz
and
fndisi(8087
sub
loopne
xchg
pcmpeqw
imul
enter
cmp
outsb
lret
mov
xor
push
icebp
or
adc
lcall
in
aas
dec
sub
iret
stos
andb
imul
shlb
push
sub
xchg
jnp
and
xchg
or
xor
shrl
sub
dec
jno
nop
stos
lret
sbb
mov
loop
pop
shrb
repz
fisubl
ret
hlt
inc
popa
clc
ja
mov
inc
inc
push
movsl
dec
pop
and
or
stos
lcall
adc
repnz
pop
mov
dec
xchg
add
push
xlat
pop
xchg
cmp
mov
mov
mov
jl
jns
push
shrl
test
cmp
sub
jge
mov
aaa
movsb
cld
mov
sbbb
into
jnp
sub
push
mov
mov
rcl
out
mov
add
pop
pop
into
add
pusha
scas
mov
or
fdivrs
inc
adc
mov
inc
mov
fcomi
jp
jne
cltd
movlps
fnstcw
mov
in
lea
nop
inc
orl
ljmp
and
test
and
jns
and
ss
inc
add
push
xor
int
push
mov
fdivrs
scas
ret
clc
loop
repnz
sub
sub
lods
push
aad
adc
push
inc
lret
dec
push
lds
int
pop
cli
or
xor
movsb
in
roll
mov
lea
adc
incl
adc
mov
cmp
inc
movsl
scas
jb
loope
xor
cmp
xchg
adc
cld
mov
sub
repz
and
dec
xor
jb,pt
and
sbbl
and
cmp
push
out
notb
pop
pop
mov
or
cmp
lock
push
mov
sub
dec
lock
mov
mov
or
lock
xchg
int
and
test
inc
inc
sahf
xorl
movsl
aaa
rolb
push
pop
pop
push
scas
mov
addb
and
sub
mov
mov
mov
fstpt
add
jp
lods
lcall
scas
push
xlat
mov
add
fstps
aad
mov
into
gs
xor
ljmp
jecxz
dec
push
cmp
jle
dec
sahf
stc
or
sub
pop
addr16
fs
push
rcrl
rolb
lods
dec
pop
mov
mov
and
pop
add
lods
mov
fiaddl
iret
lret
mov
sbb
mov
adc
addl
adc
xchg
dec
pop
fsubrl
xor
sub
mov
sarb
in
dec
lock
and
xchg
lret
shr
mov
movsl
xor
push
mov
mov
repz
lret
aam
jns
inc
xor
mov
push
mov
or
ljmp
push
pusha
testl
add
rorl
ljmp
xor
adc
lock
jnp
sub
or
sub
or
outsl
pop
notl
xor
jmp
fs
inc
pushf
jg
jno
js
or
adc
jecxz
xchg
xor
mov
scas
push
ljmp
jno
in
xchg
scas
les
out
movsl
inc
push
pusha
test
xchg
lods
out
inc
ja
aaa
test
mov
mov
and
outsl
fdivl
xlat
fs
test
sbb
mov
aaa
push
push
and
mov
ret
enter
adc
adc
icebp
pop
sub
stos
ljmp
add
push
and
sbb
aas
lea
or
push
mul
xchg
ret
mov
inc
mov
sbb
outsl
sub
mov
xchg
es
and
mov
out
xchg
aam
es
cld
test
inc
fdivs
out
lods
xor
scas
and
mov
xchg
shrb
mov
call
dec
ficompl
cltd
push
je
shll
in
jo
out
std
mov
stc
sbb
dec
popf
xor
jnp
ret
inc
jecxz
jle
mov
pop
lcall
mov
fsubrp
push
mov
popa
mov
out
mov
pop
xor
jae
jl
sbb
xor
mov
out
mov
sub
das
dec
cli
jne
vaddpd
in
popl
pop
flds
daa
mov
or
cs
shrl
js
jno
jno
jb
mov
mov
pop
push
mov
push
pop
mov
outsb
push
pop
shrl
push
jae
sub
mov
je
jecxz
dec
in
inc
sbb
gs
insb
test
mov
mov
mov
jmp
sub
mov
xlat
insb
xor
sbbb
xor
mov
and
lcall
push
cmc
xchg
push
sub
xor
aaa
push
mov
sahf
test
out
xchg
cmc
cmpsl
adc
test
mov
jnp
mov
xor
fs
lods
and
xchg
pop
test
jae
sub
or
mov
or
je
ja
fsubrl
rcrb
les
jno
add
movsl
push
sub
push
imul
jno
sbb
xor
sub
rclb
int3
mov
cmc
pop
add
sbb
adc
add
add
jmp
lcall
or
addb
movsl
mov
cmpsl
or
test
pop
jo
and
pop
les
int3
sbb
mov
cmp
add
cmp
mov
rcl
adc
sarl
in
dec
mov
mov
push
in
loop
and
mov
fcomi
mov
dec
adc
in
mov
pop
sbb
out
inc
push
into
xchg
xor
mov
lds
xchg
push
movl
fwait
xchg
push
out
or
in
jae
adc
pop
xor
outsl
adc
sub
lcall
rcl
xor
sbb
pop
mov
imul
and
orl
xchg
insl
dec
shll
jle
clc
inc
or
lahf
mov
dec
je
jle
clc
stos
xchg
lahf
xor
pop
xchg
loope
pop
push
mov
pop
mov
loopne
bswap
loop
gs
pop
jmp
lods
xchg
lret
jbe
les
jecxz
jecxz
cld
inc
ret
test
fcoml
jge
sub
add
mov
insb
vmread
add
sti
xchg
cmp
xlat
sbb
pop
pusha
test
nop
push
icebp
mov
loopne
das
ja
push
pushf
xor
and
push
into
sub
jl
popf
lods
stos
popf
add
cmpsl
loopne
xchg
cmp
xor
insb
xchg
daa
mov
cwtl
rcrb
and
decl
xlat
push
add
stos
mov
ss
pop
sbb
xchg
lea
xchg
call
or
outsb
dec
scas
push
lcall
xor
mov
push
mov
ret
shl
jne
jp
and
out
adc
mov
outsl
loop
sub
les
imull
mov
cmpsl
jb
icebp
addr16
ror
jbe
push
in
cmp
lcall
jle
loop
ret
mov
sub
dec
dec
jns
push
mov
push
repnz
fdivrs
aam
jecxz
cmp
xchg
pop
in
data16
add
and
push
imul
clc
or
pop
jp
jp
pop
add
pop
xor
gs
jl
mov
out
xchg
cltd
cld
shlb
shlb
int
pop
mov
xchg
sbb
cld
xchg
dec
loop
and
xchg
std
pop
lock
out
bound
dec
xchg
inc
fildl
mov
adc
scas
and
and
jl
stc
sub
mov
dec
cwtl
inc
jle
jp
scas
decb
pusha
lods
rol
sahf
adc
pushf
mov
in
xchg
mov
pop
xchg
cmpsb
cmp
addb
retw
cld
xor
das
movl
pop
xor
bound
shrb
imul
shll
aas
repnz
jbe
push
cltd
pop
dec
jmp
xor
insl
add
cwtl
pusha
sti
pop
mov
ret
shrl
pop
inc
vcvtss2si
mov
mov
push
lret
pusha
cltd
std
xor
pop
sti
movsl
mov
mov
mov
test
sbb
dec
mov
sbb
fs
mov
popa
in
test
mov
fstl
dec
fs
and
pusha
cltd
dec
jecxz
add
jle
je
mov
mov
pop
imul
loope
cmpsb
mov
lret
mov
shrl
or
cmpsl
mov
cmc
nop
pop
gs
dec
icebp
sbb
sub
insl
adc
dec
je
dec
push
js
sahf
fistps
lret
pop
mov
popa
fadd
pusha
xlat
add
push
or
xchg
xchg
popf
add
xchg
movsl
nop
push
popf
cmp
jle
mov
int
lds
jns
in
inc
in
sbb
jns
push
enter
hlt
aas
push
push
and
ss
mov
mov
push
das
cmp
outsb
mov
aad
imul
stos
sbb
mov
or
bound
shll
out
fs
jg
jle
pushf
adc
and
dec
xchg
pop
shr
cmp
in
jle
ljmp
mov
push
mov
add
test
sbb
mov
filds
mov
jo
in
popa
movsb
clc
or
mov
or
sbb
cld
or
pop
flds
leave
mov
neg
jb
adc
pop
decl
nop
mov
les
aam
push
scas
jb
repz
jmp
and
sbb
sbb
int3
int
mov
bound
xor
cmc
mov
xor
push
push
xchg
in
cwtl
pop
xchg
sub
fstpt
mov
and
repnz
js
xchg
pop
lcall
inc
into
fdivrl
sbbl
jnp
imul
aam
sbb
mov
jl
mov
sbb
jle
push
sub
inc
lods
inc
mov
in
push
mov
sbb
push
lahf
jl
xorl
test
loope
dec
fs
fstl
add
in
test
shl
aas
ret
popa
fistl
sbb
aaa
add
push
mov
rcll
push
bsf
jnp
clc
pop
jo
cmp
dec
rcrb
cmp
dec
mov
je
jmp
jge
ds
out
push
mov
cld
push
inc
scas
call
mov
repnz
mov
add
mov
sbb
push
jbe
imul
lretw
movsb
push
aam
stc
pop
popa
xor
push
push
mov
sub
lds
ret
je
inc
cmp
stc
fwait
jne
push
cmp
orl
fwait
or
adc
lea
imul
mov
mov
mov
addr16
mov
test
or
xchg
xchg
mov
test
mov
dec
add
loope
scas
loopne
push
adc
int
cmpsb
cmp
shll
arpl
into
aaa
into
add
stos
cld
and
and
cmc
adc
xchg
jmp
loop
jmp
xchg
scas
jp
fistl
mov
inc
out
pop
jmp
adc
fwait
in
push
in
in
stos
jecxz
dec
shll
inc
es
aaa
jle
inc
sbb
mov
push
mov
adc
mov
add
pop
sub
aad
mov
fs
out
xchg
sub
lcall
jne
cmp
sub
shll
or
xor
or
lret
xor
test
iret
loopne
push
fisubs
xchg
fidivrs
dec
jle
shll
out
cmp
int3
push
dec
pop
jb
loop
adc
icebp
and
pop
fwait
cltd
fwait
xor
or
jecxz
fadd
movsl
nop
subb
and
into
sbb
mov
sub
mov
and
imul
push
push
cmc
lds
dec
jg
clc
jg
push
notl
inc
hlt
cld
icebp
in
leave
xchg
adc
mov
stos
fwait
loope
data16
mov
aam
jo
jb
mov
xchg
mov
mov
aas
loop
lods
fsubrl
pop
dec
pop
adcb
or
or
jno
and
jg
out
mov
cld
mov
mov
or
test
xchg
mov
arpl
mov
imul
arpl
jle
bound
xor
mov
loopne
cmp
cmp
mov
mov
mov
sti
jb
hlt
push
lds
xchg
jae
jmp
sub
add
push
leave
push
lods
pop
push
sub
pop
xchg
incb
cmpb
das
stos
scas
sub
mov
das
aas
and
push
and
push
sbb
cvtdq2ps
imul
mov
scas
mov
test
pop
les
daa
pop
jmp
sbb
jne
jns
or
leave
cmp
sub
xchg
test
mov
add
xor
pmaxub
sti
cmpsb
xchg
mov
jmp
mov
mov
xor
in
pushf
adc
pop
push
pop
jge
inc
rcrb
nop
mov
mov
stos
aam
jle
xor
stos
add
push
in
jle
mov
fisttpl
cmp
scas
jo
and
movsb
jg
inc
adc
call
jecxz
or
ljmp
leave
sti
cli
in
jmp
clc
imul
jb
int3
ja
mov
sbb
push
xchg
fsubs
and
sub
sub
cmpsl
or
sub
out
sbbb
pushw
push
jge
mov
loope
push
mov
rclb
push
lock
adc
mov
popa
and
ret
cmc
out
andl
sahf
push
push
movsb
jg
js
int3
jae
loop
add
inc
mov
repz
aaa
mov
mov
xchg
sarb
push
cmp
out
cwtl
imul
pushf
lea
out
and
xchg
inc
aad
xchg
add
ficoms
mov
pusha
insb
outsb
add
jecxz
fmuls
ret
outsb
stos
and
cltd
outsb
les
mov
sti
mov
mov
cwtl
xchg
xchg
notb
mov
jno
lcall
add
mov
xchg
imul
cmp
adc
cmpsb
aam
lahf
dec
inc
outsb
fstl
and
mov
adc
and
adc
sub
iret
aam
mov
insb
icebp
cmpb
adc
arpl
repnz
enter
pushf
and
add
inc
dec
loopne
mov
xlat
jbe
fcompl
orb
nop
daa
sbb
pop
ret
mov
adc
aas
or
xchg
cmp
adc
sub
nop
and
loope
sahf
test
decl
jp
in
dec
pop
in
leave
or
jmp
xor
dec
ds
in
lret
bound
push
pop
push
push
jge
ret
outsb
inc
jmp
cmp
push
cmp
xor
mov
stc
stos
add
fisubrl
sbb
in
int
cld
std
fsubr
arpl
xchg
cmpl
jno
xchg
dec
jbe
cltd
fadd
dec
aad
std
pop
repnz
mov
xor
adc
pop
dec
cmp
mov
sbb
test
or
mov
outsl
loop
or
cmp
xchg
cmp
adc
arpl
dec
xchg
test
outsl
or
jae
daa
mov
movsb
iret
fnstsw
icebp
jl
mov
cli
jl
sub
repnz
lock
lcall
cld
jno
mov
addr16
ljmp
mov
pusha
sbb
mov
cmp
adc
push
pushf
clc
push
inc
mov
mov
shl
adc
jns
and
mov
daa
test
inc
divl
mov
ljmp
iret
lahf
mov
aam
and
pop
xchg
mov
pop
or
inc
ss
call
cmpsb
std
movsl
xchg
inc
xlat
bound
or
ljmp
call
mov
rol
addr16
and
and
inc
adc
hlt
inc
gs
imul
mov
mov
fsts
fildl
or
dec
xchg
dec
xchg
adc
mov
adc
jbe
lds
sbb
lods
leave
dec
jecxz
ljmp
scas
sub
add
xor
fcomps
icebp
dec
dec
and
sub
aad
inc
arpl
clc
arpl
xor
jnp
sbbb
jns
xor
add
insl
repnz
push
rcll
sbb
call
inc
lock
data16
mov
scas
out
data16
test
mov
jp
cs
inc
dec
ja
clc
imul
cmp
jp
in
and
adc
cmp
mov
mov
xor
lods
and
fstpl
dec
out
out
sbb
cmp
insl
add
sub
cli
inc
mov
mov
lahf
add
xor
fcom
cmp
nop
push
dec
pop
adc
add
inc
cmpsb
xchg
xchg
std
dec
lret
ss
out
pop
lahf
test
push
subb
int
popa
lods
or
or
xchg
jns
aas
into
popf
adc
and
xor
outsb
loope
jb
mov
cwtl
je
leave
addr16
out
xchg
in
sub
insl
aam
cmpb
mov
in
or
xchg
sbb
out
push
in
addl
aam
andb
lret
sarb
sbb
inc
xlat
ss
sub
xor
lds
sub
int3
adc
jg
push
pop
subb
ja
lea
adc
and
xor
aas
ret
pop
pop
int
push
pop
loope
jns
je
and
xchg
push
mov
cmp
es
mov
stc
jbe
decb
mov
loop
xchg
les
sahf
mov
in
popf
xor
or
pop
xchg
jmp
xchg
daa
pop
imul
out
jnp
in
in
sbb
out
mov
adc
sub
ljmp
imul
test
leave
mov
inc
cwtl
jb
fwait
mov
sbbl
in
negl
scas
xchg
cmc
outsl
sbb
push
shl
into
pop
sub
sbb
xor
lcall
mov
or
jae
leave
xchg
into
gs
movsl
sbb
scas
popl
cltd
push
mov
inc
data16
fisubs
cmc
sub
pop
rol
cmc
push
inc
or
sub
push
inc
jb
adc
xor
fistpll
dec
notl
arpl
cwtl
or
insl
bndstx
add
and
inc
gs
jns
aad
mov
xor
ret
mov
push
push
lcall
in
jo
sbb
sbb
sub
add
in
fsub
ja
jg
add
push
mov
jnp
jl
lods
mov
popf
inc
fmuls
mov
push
mov
lahf
xor
xchg
daa
int3
pop
xchg
hlt
dec
pop
outsb
aas
mov
movsl
out
or
inc
add
mov
mov
push
loop
test
popa
sahf
jge
movsb
push
lods
and
cli
mov
shll
pop
sbb
pop
dec
gs
loop
push
pop
rcr
sbb
shlb
test
fwait
imul
xor
jo
push
out
mov
fcompl
push
out
push
in
add
es
or
mov
cmp
rcl
aas
cmpl
shrb
mov
pop
mov
pop
mov
lods
into
popa
mov
pop
jmp
push
outsl
movsb
push
adc
dec
repnz
sub
pop
pop
pop
jne
inc
iret
push
sti
push
cmp
int
shr
pop
pop
rol
arpl
enter
fnstenv
push
ljmp
cmc
sti
cmp
pop
imul
dec
add
pop
dec
loopne
inc
mov
sbb
lock
insb
or
mov
cltd
xchg
inc
fimuls
add
add
jl
and
or
jp
mov
xchg
mov
adc
mov
fwait
pop
inc
push
shl
inc
mov
push
int
cmp
inc
loop
jae
jbe
and
ljmp
pop
pop
divb
sti
outsb
popa
das
adc
inc
nop
popf
xor
pop
cmc
pop
outsb
inc
sub
ficompl
or
lea
cmp
jl
mov
je
mov
mov
cmp
inc
xchg
jb
jo
mov
test
icebp
mov
adc
daa
ds
mov
jbe
mov
or
adc
xchg
cmpl
mov
jns
fsubs
cmp
mov
adc
xchg
enter
jl,pt
aas
or
mov
push
mov
cmp
lds
mov
ret
shr
addb
lahf
add
push
test
enter
scas
sub
pop
and
cmpsb
jno
sub
aad
dec
xlat
lods
inc
pop
das
shr
cs
lret
jnp
sub
adc
aam
add
insl
cmc
fwait
xchg
js
ljmp
adc
fnstcw
sbbb
jle
jp
repz
mov
cltd
or
mov
es
mov
das
cmp
iret
pushf
aam
sub
cmp
sbb
mov
sahf
push
scas
jp,pt
fld
xorl
mov
xchg
cld
xorl
mov
out
fs
add
fisttps
test
or
mov
or
lret
mov
roll
dec
dec
xchg
mov
or
pop
aas
or
mov
outsl
sub
mov
inc
shrl
lock
and
out
mov
outsb
addl
mov
jo
fisubs
add
xor
jl
ljmp
sub
into
int
mov
test
out
cmp
mov
mov
out
inc
jno
movaps
fidivs
testb
pushf
push
push
dec
loopne
mov
or
jbe
outsb
cwtl
pop
enter
int3
scas
pop
ja
in
test
sub
ljmp
inc
mov
in
popa
jmp
sbb
mov
dec
inc
mov
sbb
cmp
xor
icebp
mov
sti
cltd
push
inc
jmp
aas
push
add
inc
cwtl
pop
dec
leave
cmp
pop
sub
js
test
es
xchg
add
sub
lods
mov
or
xchg
mov
imul
xchg
std
mov
es
sub
into
ret
pusha
sub
push
mov
insl
lock
stos
daa
testl
push
push
lods
pop
jp
sarb
gs
insl
and
fucomi
sbb
ss
and
or
movsl
jne
fsts
add
sti
mov
sub
andb
pushf
je
test
fsubrl
aas
aad
or
ja
pop
rep
push
negb
lds
push
jae
xchg
inc
lock
out
and
xor
hlt
adc
xchg
out
cli
sub
lea
repz
sbb
inc
inc
jmp
pop
push
popf
sbb
dec
mov
xchg
sub
insb
xor
lds
dec
jne
shrl
inc
or
cwtl
aas
shl
ret
sbb
pop
pusha
fists
xchg
jle
fsubrp
ljmp
test
icebp
mov
and
push
aaa
mov
mov
fidivs
cs
lret
mov
sbb
jno
hlt
inc
pusha
push
andb
pushf
notb
aad
jg
pushf
add
mov
ror
insl
repnz
jmp
fcoml
incl
sub
cld
call
and
inc
push
sti
in
xchg
ss
push
sti
bound
mov
movsl
mov
mov
push
push
xor
ret
cmp
push
pop
or
aam
stc
xlat
mov
xchg
dec
add
je
add
ja
dec
shll
mov
testb
jp
addr16
jne
jle
mov
adc
pop
sub
repz
xchg
in
or
push
fbld
mov
mov
mov
xchg
mov
mov
lcall
mov
jno
inc
xor
js
insb
iret
out
rcll
call
stc
sarl
push
and
in
pop
dec
fisttps
and
arpl
scas
std
xchg
lcall
sub
mov
test
sbb
mov
sbb
mov
and
sahf
push
js
lahf
lea
mov
lock
push
xor
xor
dec
outsb
dec
test
repz
add
jnp
inc
mov
xchg
xor
and
cld
pop
mov
adc
inc
leave
mov
les
pop
stos
rorl
mov
cmpsb
lock
imul
test
ficomps
hlt
push
pop
pop
pop
cmp
inc
add
iret
xor
jno
jl
sub
cmc
cld
ds
int
stos
aas
nop
mov
inc
and
mov
imul
sbb
test
cmp
and
std
outsl
scas
and
pop
sub
mov
or
loope
ss
lret
lds
pop
jp
dec
and
out
aad
sahf
and
jge
inc
push
icebp
pop
test
push
sbbb
or
cmpsb
mov
shrl
pop
mov
in
mov
ljmp
inc
fnstenv
ljmp
dec
mov
iret
mov
push
pop
mov
push
cmp
sub
xor
add
lods
or
lahf
xor
xor
mov
mov
iret
pop
or
loope
push
popa
faddl
push
and
mov
gs
rolb
add
lret
mov
stos
mov
hlt
pop
lcall
mov
mov
insb
add
flds
mov
pop
je
xchg
scas
inc
ret
loope
pop
push
mov
fs
jb
je
fistpl
aad
xchg
push
ficomps
xchg
pop
push
push
mov
lahf
fwait
pop
rclb
xor
xchg
mov
les
sbb
lcall
inc
aas
movsl
adc
xchg
lods
xchg
jne
mov
aam
pop
pop
imul
faddp
stc
mov
lcall
adc
adc
fildl
ret
dec
push
mov
les
push
shrl
pop
mul
cmpxchg
aam
jp
cmp
iret
pop
clc
lds
jo
stos
mov
xchg
pushf
mov
cmp
lods
mov
sbb
xchg
es
add
test
sbb
lock
dec
add
mov
in
or
jo
leave
inc
shrb
jp
push
in
sbbb
dec
push
adc
repz
mov
push
dec
in
icebp
les
fistpll
test
jle
xchg
imul
repnz
add
arpl
inc
jae
add
outsl
pop
into
or
xor
dec
xchg
adc
cmpsl
fwait
mov
adc
jb
cli
ja
popa
xchg
es
pop
cmc
notl
sbb
and
sbb
jae
dec
imul
arpl
test
scas
jecxz
leave
stos
lods
inc
adc
mov
mov
fisubrl
xlat
paddsw
or
adc
iret
jae
or
lret
mov
lret
adc
loopne
push
push
dec
add
repz
and
cmp
jmp
lret
push
cmp
insl
jbe
xor
insl
mov
ficoms
or
xor
out
aas
scas
cld
insb
sbb
xchg
pusha
xor
xchg
mov
jg
or
loope
mov
xchg
push
xchg
push
inc
add
sbb
lret
sbb
pop
mov
mov
xor
nop
cmp
inc
rol
fisttpl
push
in
xchg
das
mov
popf
or
lea
cmp
cmp
adc
insl
and
popf
sub
mov
jecxz
arpl
ret
add
jns
sbb
repnz
jl
cmp
in
push
repz
jp
lahf
mov
xchg
cmp
dec
movsl
cmp
push
fcmove
es
pop
jb
ss
push
sub
lcall
gs
pop
stc
xchg
lahf
adc
dec
pop
inc
mov
dec
je
xor
adc
push
fdiv
cltd
jb
push
cwtl
or
cltd
push
daa
ss
and
cwtl
lcall
out
cmp
imul
je
mov
into
and
repz
mov
lea
or
cli
mov
inc
sti
popa
pusha
inc
push
sar
push
shl
fcoml
mov
pop
imul
jmp
out
add
mov
lods
ret
aam
addl
ret
loope
push
repnz
mov
sub
hlt
jmp
mov
jo
push
mov
jl
leave
outsb
pop
and
xchg
add
cmpsl
sbb
mov
pop
mov
mov
xchg
mov
jmp
mov
inc
icebp
xchg
sub
adc
in
add
pop
and
aad
xor
leave
mov
jnp
popf
cmp
cwtl
stos
cmp
enter
repz
punpckhbw
mov
jnp
cmpsb
xchg
or
xlat
and
pop
aaa
lock
in
mov
xchg
std
adc
mov
xchg
loop
pop
mov
out
cld
and
rcr
jge
jmp
push
movsb
inc
push
jno
jge
push
mov
dec
aas
cli
mul
sbb
cmp
pop
xchg
mov
ss
jb
je
mov
mov
xchg
jae
sub
xchg
lahf
das
or
jbe
lret
cs
fsubr
iret
push
push
stc
adc
jp
xor
jns
movsl
pop
push
cli
cwtl
aaa
rorb
jmp
cmp
fiaddl
nop
stos
pop
inc
jno
adc
sub
dec
push
enter
fs
clc
fsubs
xor
sub
frstor
mov
jecxz
sahf
stos
cmp
out
cmpsl
into
sbb
cmp
mov
cmp
mov
orl
sarl
adc
xor
movsl
lds
pop
call
into
or
xchg
es
ds
inc
fnstsw
cmpsl
testb
movsb
sbb
push
popf
jo
cmpsb
sbbb
add
xchg
inc
push
and
push
stos
das
pop
sahf
pop
and
roll
iret
es
cwtl
lods
cmp
test
xchg
push
in
dec
jmp
cmp
fwait
call
push
jae
call
stc
lods
addr16
sarb
mov
aaa
data16
stos
xchg
movq
lea
scas
rcrb
mov
jle
insl
sub
sub
aas
shlb
call
cmc
mov
enter
or
and
mov
and
loope
inc
jbe
hlt
scas
cld
ljmp
jno
outsb
xorl
dec
out
std
inc
mov
incb
subb
mov
pop
fiaddl
xchg
jb
adc
sub
scas
inc
cs
lret
vpcmpgtb
sub
out
mov
outsb
mov
stc
mov
leave
call
ds
xchg
and
inc
jo
hlt
adc
sbbb
cmp
in
dec
movsl
js
xor
out
push
in
shl
cwtl
stos
add
xchg
mov
les
xchg
lods
sahf
xchg
out
or
sub
cmp
push
testb
nop
adc
inc
or
sub
add
fstps
mov
insb
xor
int
lea
lock
xor
lods
jp
jo
xchg
mov
and
jl
clc
mov
inc
adc
arpl
pop
gs
shlb
jno
cmp
mov
into
repnz
or
or
les
xlat
btl
inc
mov
cmpsl
fsubl
and
daa
or
pusha
jl
outsb
popa
ss
jecxz
data16
pushw
inc
arpl
adc
dec
mov
dec
push
fsubrs
dec
add
movsl
mov
leave
mov
push
cmp
iret
jecxz
out
test
dec
push
imul
jne
jmp
daa
aad
xchg
add
nop
es
insl
cli
dec
in
cmovnp
mov
adc
push
inc
pusha
addl
pushf
sub
xchg
outsl
and
sar
xchg
add
insl
or
push
das
hlt
js
pop
xor
mov
mov
pop
cwtl
out
or
dec
and
ret
or
sub
dec
sub
pop
hlt
adc
pop
xor
outsl
sbb
incb
out
jmp
sbb
in
or
ud1
push
mov
mov
push
add
cld
in
add
xorl
push
out
or
out
sbb
cli
les
rolb
data16
aaa
imul
cld
or
popa
ret
push
sbb
outsb
rcll
pop
dec
ficomps
adcl
mov
and
xchg
inc
pop
call
out
mov
dec
nop
inc
push
les
pop
xor
jo
add
mov
ds
mov
shrb
cmpsb
test
mov
hlt
addr16
cmpsb
les
lcall
arpl
xor
and
add
ret
add
cmpsb
push
and
pop
xchg
lret
xchg
lods
sarb
outsb
mov
out
test
or
mov
push
jne
shrl
rcl
mov
andb
mov
jno
daa
inc
and
mov
int3
sbb
lods
mov
outsl
das
aas
dec
adc
dec
jo
scas
and
adc
iret
xchg
sahf
test
push
call
test
pop
mov
dec
je
into
cmp
aad
fldlg2
loope
int
ret
push
orb
jno
xor
subb
jne
pop
movsb
out
jbe
pusha
cmc
xchg
filds
push
out
xor
sti
in
gs
push
stos
inc
lock
jb
mov
orb
ss
pop
xor
rcrl
repz
sbb
lods
aaa
pusha
pusha
notl
addb
cmp
mov
lahf
add
mov
cs
adc
jecxz
jl
inc
es
inc
dec
inc
push
ret
mov
cmp
pop
push
ljmp
pusha
negl
jg
mov
mov
cmpb
push
popf
es
inc
push
lcall
push
push
and
inc
mov
sbb
push
sub
and
scas
test
jno
inc
rcrb
or
hlt
test
adc
call
cmp
movsb
mov
ja
push
add
mov
enter
popa
push
xchg
jmp
loopw
insb
or
jno
inc
outsb
into
gs
push
add
mov
jbe
xor
popf
in
xlat
pop
pop
xor
iret
imul
xor
sub
mov
mov
mov
out
ret
sbb
fsubp
cmp
cmp
sbb
push
jge
outsl
scas
jbe
push
sbb
fs
pop
mov
push
jns
cmp
xor
sub
or
jecxz
push
adcl
fcoms
sbb
cmp
into
cmc
sbb
inc
dec
shrb
xor
scas
cmpsl
int3
pop
lret
add
and
and
aam
dec
shr
inc
xchg
pop
lods
mov
insl
add
scas
jns
arpl
add
pop
pop
adc
cmp
cmpsb
cmp
jle
cmp
add
mov
mov
mov
test
les
pop
inc
or
xchg
enter
lods
into
ss
repz
lahf
adc
or
inc
outsb
xor
out
bound
mov
sbb
mov
or
lahf
pop
out
jecxz
faddl
test
orb
and
addr16
outsl
cmp
es
mov
and
pop
stos
and
les
xchg
or
inc
push
mov
daa
sub
push
into
notl
cld
xchg
and
mov
pop
out
jle
fldcw
arpl
push
mov
push
fstpt
pop
or
mov
imul
or
sub
push
sub
cmpsb
enter
pop
pop
loopne
xchg
cmp
cltd
arpl
out
and
xor
mov
andl
fdivrs
loope
xor
xor
test
andb
sub
cmpb
jge
dec
sub
negb
es
loopne
idivl
add
xchg
dec
out
call
rol
inc
push
jp
mov
mov
aaa
mov
add
xor
ret
lds
subl
inc
sarl
adc
and
sbb
sbbb
mov
loopne
xor
loopne
xor
mov
add
insl
and
cmpsb
les
fstl
lret
push
jo
into
jne
sbb
mov
jns
fisttpl
cwtl
out
xchg
inc
mov
xchg
sbb
mov
je
test
gs
add
mov
mov
in
repnz
dec
adcl
jo
icebp
popf
clc
adc
daa
fmull
or
push
jno
lret
lret
jecxz
jge
jbe
mov
jle
xchg
int3
fdivp
nop
add
mov
xor
imul
xchg
pop
ret
or
inc
dec
lds
xchg
xor
pop
aaa
call
pop
cli
call
dec
cmp
scas
aaa
js
imul
les
test
sbb
mov
xchg
dec
and
or
loopne
cmp
sub
xorb
xor
hlt
cmp
pop
mov
add
bound
js
sub
mov
inc
call
or
in
sub
mov
std
stos
loop
sub
into
xor
cmp
cld
imul
inc
cmovno
push
dec
xor
ss
mov
mov
shl
dec
repnz
and
je
or
mov
jecxz
jns
into
add
lods
mov
les
add
jmp
pop
or
cmpsb
mov
insl
xor
push
ficomps
test
jmp
jo
adcb
xchg
sub
mulb
clc
pop
movsb
je
mov
adc
mov
out
cmpsl
imul
insb
mov
push
add
push
mov
popf
outsb
setae
and
out
test
test
lret
xor
push
lahf
ss
in
out
add
mov
fs
les
pop
das
xchg
jns
adc
xorb
dec
in
pop
adc
mov
gs
arpl
inc
in
fdivs
fcoms
nop
ss
mov
push
sti
lea
xchg
sub
sbb
jne
push
and
push
lods
es
cmp
sub
jno
cltd
test
icebp
icebp
fbstp
jecxz
or
daa
lds
js
mov
outsb
pop
scas
nop
int
cs
mov
mov
es
mov
in
out
dec
loop
sbb
cmp
pop
ret
outsb
jl
add
xor
inc
test
xchg
jle
repnz
fisubs
dec
dec
mov
jnp
mov
adc
imul
dec
mov
icebp
es
addr16
pop
cld
lcall
shrl
test
ret
fisubl
adc
jecxz
dec
dec
cmpsl
movsb
mov
mov
jg
cmpsl
mov
enter
push
xchg
inc
and
mov
pop
xor
sub
test
fdivrl
push
jecxz
inc
gs
push
adc
mov
jecxz
and
outsl
sbb
push
jp
in
fwait
adc
repz
lsl
adc
arpl
pop
sub
jae
inc
inc
pop
rol
adc
or
and
sti
mov
mov
lret
sub
cmp
push
adc
mov
push
out
stc
mov
xor
stos
cld
cltd
and
cwtl
and
lret
test
stc
popf
mov
jmp
add
mov
mov
lret
inc
cltd
mov
arpl
testl
jg
inc
push
pop
ret
lcall
cmp
sub
push
mov
push
sarb
out
lcall
ja
push
inc
sbb
push
outsb
addr16
shrl
push
testb
jno
xchg
dec
inc
data16
xchg
test
sbb
adcl
push
es
cmpb
dec
lock
stos
sbb
or
mov
sbb
jae
pop
es
xchg
jo
xchg
pop
pop
shlb
outsl
adc
push
mov
loopne
enter
inc
or
loop
pop
push
lods
add
nop
jl
jne
jbe
pusha
idivl
and
cmpsl
xchg
out
enter
cmp
hlt
jno
xlat
mov
shrb
fwait
xor
cmp
fwait
scas
dec
cltd
insb
stc
jp
xor
shrb
pop
lcall
loop
ret
pop
xor
dec
jmp
std
test
movsb
mov
cmc
push
popf
test
jo
mov
mov
and
push
sbb
dec
cmp
imul
dec
das
push
insl
nop
std
xchg
ret
pop
xchg
mov
test
repz
out
mov
sbb
pushf
test
fiaddl
jmp
xor
inc
push
aaa
notl
xor
das
mov
imul
insl
add
push
stc
test
pop
mov
nop
out
inc
fcmove
nop
cs
push
lret
incb
fdivl
fsts
or
or
xchg
icebp
cmp
test
mov
sarb
mov
and
adc
and
pop
jnp
cwtl
das
lds
imul
in
adc
push
mov
addl
into
mov
aad
nop
pop
ret
cmp
out
xchg
mov
dec
dec
mov
stos
inc
push
xchg
jno
je
mov
cmp
fidivs
jns
sbb
mov
fistl
mov
fcmovu
jp
push
aam
jns
das
mov
imul
pushf
dec
notb
or
cmp
and
inc
mov
add
mov
push
jmp
mov
adc
dec
jne
jle
pop
inc
cmpsb
cmp
dec
pop
inc
cmp
jbe
clc
cmpsl
inc
xor
fsubl
jmp
xor
add
scas
inc
cs
xchg
pop
lcall
xor
popa
xchg
adc
mov
xchg
out
pop
adc
cmp
insb
rorl
bound
ds
aaa
xchg
inc
push
xchg
inc
mov
in
or
imul
or
ljmp
push
fsubrp
mov
sbb
sbb
xchg
mov
mov
adc
lea
movsl
stc
inc
scas
fidivrl
les
dec
mov
in
lret
jb
or
push
xchg
xchg
jns
xor
dec
inc
mov
xchg
movsb
stos
sahf
or
sbb
mov
inc
mov
scas
outsb
xor
into
and
outsl
sub
sub
jecxz
and
xchg
sub
dec
lock
jbe
inc
push
leave
dec
cmp
hlt
shrl
popa
subb
pop
ja
or
mov
sub
icebp
pop
sbb
jp
sar
sub
jecxz
cmp
outsl
push
add
cmp
xchg
aaa
push
clc
and
or
in
xchg
xchg
sbbb
cmpl
fsubrl
cmp
lea
in
push
pop
jg
push
sahf
addb
xor
outsb
test
add
stos
sahf
dec
decl
mov
in
sub
jmp
movsl
dec
jb
aas
bound
mov
lret
icebp
dec
add
mov
cmp
pop
sub
ret
bound
lds
les
rcll
stc
push
mov
not
sub
mov
loope
cli
mov
sub
stos
xchg
dec
enter
cmp
mov
or
shrb
jae
inc
scas
insb
xchg
sbb
in
xchg
dec
xor
pop
fldt
arpl
jp
jne
xchg
mov
pop
sub
fsubl
rcr
test
xor
sub
sub
shrb
push
in
sub
lea
push
mov
jl
lea
shll
leave
sahf
jg
adc
jl
and
mov
xchg
xor
inc
jo
pushf
jg
lds
push
repnz
jnp
xchg
and
push
loop
loop
mov
filds
andl
lcall
cltd
mov
add
lods
and
test
pushf
xor
std
pop
mov
pop
mov
mov
adc
out
pop
adc
push
xor
bound
sub
repz
add
jbe
mov
mov
pop
dec
fcomip
lds
pop
pop
fcmovnb
mov
outsl
test
iret
mov
call
inc
outsb
mov
outsl
jne
adc
jge
jo
cmpsl
sub
jnp
dec
inc
or
jne
loop
mov
daa
imul
lods
xchg
inc
adc
out
ret
xchg
adc
out
loop
jmp
inc
lods
push
imul
jecxz
es
jge
mov
xchg
and
cmp
popa
out
data16
mov
addl
add
xor
push
cmc
dec
adcl
in
or
lock
lret
fdivs
sub
sub
dec
push
mov
notl
mov
ret
into
roll
lods
xor
lods
ja
adc
adc
xlat
fidivl
pop
bnd
or
cmp
sub
and
arpl
lahf
push
shl
inc
fisubs
pop
mov
lods
mov
fbld
sbb
clc
js
jbe
mov
or
jecxz
cwtl
dec
sub
test
xchg
mov
int3
xchg
inc
add
jns
loop
mov
push
cmpsb
mov
fisubrs
aam
sbb
nop
filds
clc
into
push
out
dec
jne
adc
push
inc
leave
fs
push
jo
add
jmp
jno
dec
mov
ret
aad
ds
fs
xor
add
mov
shlb
sbbl
push
loopne
test
jne
mov
fistpl
mov
ljmp
cli
inc
movb
pusha
stos
or
fidivl
and
gs
mov
lret
xchg
loope
push
jne
add
ljmp
mov
lods
sbbb
iret
mov
xor
aaa
test
scas
sbb
cmp
in
jno
out
xor
int3
std
fidivrs
dec
cltd
push
cmpsb
rorl
outsl
lock
xor
pusha
xlat
pop
xchg
int
lahf
pop
bndldx
lds
push
cmp
mov
ja
mov
fwait
inc
or
imul
mov
lea
fnsave
xor
or
or
pop
jmp
cmc
mov
jnp
sub
jbe
mov
std
xchg
in
inc
aad
mov
fstpt
and
adc
and
pushf
or
inc
scas
out
cli
rcr
je
pop
inc
xchg
xchg
arpl
sarb
cmp
mov
or
jg
sbb
mov
pop
lea
lea
push
scas
scas
stos
inc
loopne
insl
pushf
xor
and
cmpsb
int3
out
popa
jp
or
adc
jl
inc
push
test
and
js
jo
call
inc
ret
sbb
and
jecxz
mov
test
inc
xor
jbe
aam
jne
and
mov
jo
add
xchg
rol
mov
dec
loope
add
rcl
subps
pop
mov
and
cmp
fs
or
lcall
nop
fnstenv
and
outsb
push
push
sbb
fisubl
or
cmp
mov
popf
push
aam
cmp
es
pop
inc
jge
mov
or
sbb
xchg
jns
outsb
jns
into
loope
lcall
rorb
mov
adc
ljmp
into
aaa
add
lds
bound
push
and
xchg
inc
sub
pop
in
mov
or
stc
mov
stos
aaa
adc
dec
in
pop
out
cmp
xor
out
stc
mov
data16
xchg
out
fcompl
es
dec
filds
addr16
mov
loope
pop
push
adc
fstpl
insb
add
hlt
mov
push
mov
dec
clc
in
mov
and
or
or
jg
std
pop
jno
mov
mov
or
lret
arpl
push
cmp
and
aad
sbb
aam
dec
or
hlt
ss
jg
sub
test
ss
test
insb
or
sbb
lds
add
xchg
outsl
dec
ret
shrl
mov
out
sbb
repnz
xor
or
mov
dec
ljmp
or
inc
outsb
and
int3
loopne
ja
push
mov
pop
mov
xlat
sbb
dec
ds
push
jl
sbb
loopne
popf
in
inc
cmp
into
push
andb
jmp
aaa
mov
out
pop
adc
adc
mov
pusha
pop
das
test
stc
cwtl
sbb
pop
inc
popf
mov
fisubrl
into
mov
scas
adc
out
xor
int
push
inc
aam
and
cmpsb
pop
lods
add
inc
dec
and
lock
fisubrs
icebp
cmc
das
roll
push
or
mov
popf
xor
imulb
dec
int3
and
jl
rolb
imulb
sbb
mov
bnd
sbb
add
cmpsb
mov
xorb
push
xor
add
inc
fwait
lods
cmp
les
mov
mov
test
or
or
imul
and
cmp
and
repz
repz
jb
xchg
pop
inc
dec
cmpsb
test
xchg
cmp
xchg
xor
stc
jno
movsb
hlt
sti
fcom
mov
into
and
pushf
out
arpl
push
cmp
test
and
sbb
inc
cld
jle
sub
or
sti
inc
cmc
movsb
or
es
dec
mov
into
xorl
sbb
and
les
jne
sahf
push
adc
test
aas
out
shl
pusha
pop
pop
pop
ret
or
inc
cmpsl
jp
and
ljmp
popf
enter
mov
push
mov
pop
aaa
sub
xchg
mov
dec
adc
mov
pop
cmp
ss
loopne
xchg
stc
push
or
pop
insb
sbb
outsb
inc
pop
xor
fnstsw
loopne
lea
loopne
dec
orl
test
in
or
cmp
jmp
sti
xchg
ljmp
mov
lahf
lret
jp
dec
adc
repz
mov
jae
mov
pop
test
pusha
idivl
dec
fisubl
lret
in
xor
rcl
stc
lcall
es
leave
xchg
jmp
and
push
lret
xor
insl
aaa
jne
roll
mov
pop
jo
adc
mov
push
andnps
sbb
and
push
test
jnp
icebp
xchg
and
ficoml
lds
or
adc
jnp
jb
js
add
xchg
js
push
lods
mov
in
mov
test
dec
stos
lahf
andb
push
inc
ja
xchg
outsb
xchg
je
jb
ss
pop
jp
jle
inc
push
pop
dec
lcall
test
lret
xchg
jo
cmp
xor
xchg
xor
mov
arpl
adc
std
nop
xchg
imul
xorb
das
js
jo
sub
dec
js
lea
sbb
js
sbb
xchg
inc
shll
sahf
mov
xchg
shlb
xchg
icebp
sbb
into
imul
pusha
jl
dec
std
or
sbb
fsubs
or
xchg
xchg
inc
and
sti
pop
pop
and
cmp
cmpb
shl
dec
outsb
std
or
xor
shlb
stos
xor
sub
insl
lahf
hlt
mov
sar
push
in
imul
or
out
dec
mov
mov
jle
or
fsts
pop
out
je
lods
and
push
ja
dec
push
mov
or
repnz
pop
sub
and
sbb
and
sub
sub
pop
inc
cltd
fs
jg
mov
mov
cmp
std
jo
cmpsb
fwait
push
cld
outsb
stos
es
xchg
dec
sub
add
in
push
xchg
not
xor
popf
or
dec
loop
push
lock
lret
pop
mov
add
push
fcomps
in
jne
andl
push
dec
jo
xor
in
push
or
and
cmp
mov
pop
pop
scas
adc
test
push
xchg
cli
cs
repnz
stos
xchg
push
loopne
dec
ljmp
cwtl
and
in
pop
jb
add
je
in
scas
sarl
lods
jg
mov
loop
in
mov
push
and
push
fcmovnb
add
rolb
sub
leave
addl
aas
out
scas
out
adcb
pop
or
in
inc
dec
push
in
and
imul
movsl
mov
and
pusha
pop
mov
mov
push
dec
xchg
cmp
mov
and
mov
mov
and
cld
inc
fdivs
pop
popa
call
sub
cmp
jb
inc
xchg
sysexit
test
cmp
imul
sbb
fcmovne
test
int3
xor
loope
outsl
cmp
mov
pop
jecxz
or
repz
jno
jg
xchg
fnstcw
ja
shl
mov
icebp
or
xor
int3
cmp
into
loop
sub
mov
cwtl
inc
pusha
cmpsl
lock
cli
push
fwait
repnz
daa
adc
shlb
adcl
cmp
out
rol
or
xor
mov
push
insb
sub
mov
jne
adc
pop
rorb
mov
pop
lret
jbe
or
sub
ja
xor
pop
fcmovb
push
xchg
xchg
cmp
xchg
scas
imul
imul
inc
jns
jo
jno
jbe
xor
or
xchg
mov
jge
mov
pushf
adc
add
and
insb
pop
ljmp
cmc
mov
and
cmp
xchg
lcall
inc
in
mov
sbb
lea
test
call
pop
push
arpl
daa
hlt
sahf
testl
push
aad
setno
loopne
pop
jecxz
cs
test
in
push
or
push
je
mov
and
lcall
lods
je
cmpsb
and
lods
inc
clc
leave
pop
outsb
or
mov
ljmp
xor
xchg
ljmp
add
rclb
or
lods
sbb
imul
adc
shl
cltd
aaa
cli
xchg
je
pop
and
dec
add
or
sub
outsl
sbb
aad
mov
push
push
in
xor
xchg
xor
aaa
cmp
or
add
test
sub
leave
push
aas
mov
adc
cmpsb
sahf
loope
addb
out
ljmp
sbb
mov
xor
or
mov
or
mov
sbb
sbb
mov
mov
adc
rcrl
adc
sub
bound
and
rcrb
mull
cmp
jb
pop
testb
jge
push
cmp
mov
add
xor
outsl
jns
cli
cmp
push
mov
mov
push
add
dec
jmp
nop
je
fcompl
pop
adc
pop
jbe
ss
mov
fistpl
jno
out
inc
fs
gs
inc
data16
pop
nop
rclb
mov
or
mov
insl
shll
mov
add
shrb
sti
pop
mov
clc
sahf
mov
xchg
push
hlt
dec
cltd
fnstenv
mov
ja
mov
push
mov
testl
aad
notb
out
movsl
cmp
adc
popf
xchg
adc
add
adc
lea
lahf
repz
xchg
jb
sub
ret
pop
repz
lahf
cmp
out
int3
sub
mov
daa
xor
pop
cmpsb
rorb
fildll
cmp
data16
pop
stos
clc
or
sbb
cmpsl
stos
pop
pusha
pop
in
nop
xor
rol
push
add
push
xchg
popf
sti
jbe
hlt
dec
lds
int3
xor
adc
out
push
loopne
fnstenv
stc
and
lds
js
outsb
vpmaxsw
add
outsl
test
call
test
mov
cmp
nop
inc
pop
adc
test
lret
or
mov
or
add
sbb
and
push
loopew
shlb
sbb
inc
fimuls
insl
add
pop
bnd
mov
add
jmp
xor
jnp
mov
out
and
xchg
aad
outsb
add
jecxz
subb
lcall
jnp
incb
dec
loop
out
lods
in
testl
pop
or
jg
mov
loop
jae
inc
mov
xchg
loopne
ja
dec
in
sbb
ja
cld
dec
push
dec
inc
fwait
jmp
repnz
cld
and
fidivs
adc
ds
shll
sub
push
mov
shlb
xchg
pusha
sub
ds
data16
xor
lahf
cmp
cmp
shlb
repnz
mov
sbb
inc
ja
ret
sub
dec
cmp
stc
lahf
mov
popf
xor
cmpsb
shll
int3
mov
lcall
sahf
gs
ljmp
pop
mov
in
in
cli
push
rol
je
push
adc
aas
sbb
jnp
lcall
lock
pusha
int3
ja
movsl
xchg
fisubl
int
mov
movsb
mov
mov
imul
inc
flds
stos
xor
jno
aam
dec
ljmp
aam
push
lea
ds
adcl
mov
lods
pusha
jecxz
test
subl
mov
dec
adc
mov
or
andl
lret
loope
adc
jecxz
push
push
or
dec
push
cmp
stos
movsb
mov
cmp
or
ror
je
pop
ja
dec
push
inc
xchg
mov
icebp
stc
ret
sar
shlb
sbb
mov
aam
loope
roll
pop
jns
sbbb
cmp
or
je
pop
cmpsb
ljmp
push
inc
sub
jb
dec
in
sbb
scas
orb
es
xchg
mov
pop
lods
stos
aad
iret
lret
mov
bound
xchg
clc
cli
cmp
xchg
mov
mov
inc
int
js
sub
scas
mov
cmp
std
aam
pop
mov
or
cli
clc
cmp
data16
xor
jns
sti
jle
inc
add
mov
sbb
push
xlat
shlb
cwtl
loope
push
sbb
outsl
orl
push
mov
mov
push
inc
push
mov
mov
popf
fucomi
pop
imul
mov
inc
scas
xchg
cli
call
adc
sti
push
jge
jae
pop
rcll
test
jbe
sarl
notl
in
leave
inc
lock
leave
and
and
mov
out
sub
push
adc
popa
push
popf
sub
lock
lahf
jns
sbb
ja
sub
xor
aas
mov
je
movsb
mov
mov
add
clc
and
loop
add
jnp
lock
fwait
adc
or
pop
movsb
nop
add
cmpsb
mov
popf
mov
xor
xchg
das
pmaddwd
popf
jg
pop
adc
stos
icebp
jnp
push
adc
mov
push
adc
les
jae
push
mov
mov
iret
fucomp
add
ret
pop
mov
ja
jmp
xor
inc
or
aaa
sbb
movsl
mov
idivb
sbb
divl
inc
pop
ret
sbb
push
loope
lea
movsl
ficompl
push
mov
or
sbbb
xor
pop
sbb
dec
ljmp
cmp
scas
lret
mov
jno
push
mov
vpaddw
xchg
dec
mov
fcmove
and
cmp
cld
imul
mov
inc
daa
sbbb
jno
jmp
add
lret
xchg
in
arpl
in
and
scas
std
inc
leave
fnstenv
inc
lods
push
js
jae
mov
add
push
mov
cmp
xchg
adc
or
mov
dec
in
scas
aaa
stos
adc
or
sbb
out
jbe
xchg
push
loope
xchg
pop
mov
pop
mov
int3
pop
sahf
std
out
and
lock
xchg
gs
fwait
fs
mov
sub
push
jmp
jbe
jmp
or
mov
iret
loope
mov
arpl
push
lcall
mov
pop
push
cmp
pop
shlb
repz
out
mov
cmp
mov
aad
aad
leave
mov
mov
call
and
jb
mov
ret
cmpsl
in
test
push
push
insb
add
mov
in
cmpsb
fwait
mov
psllq
sahf
test
outsb
movsb
cmp
adc
fistpll
jecxz
sub
and
lods
pop
dec
cs
int
icebp
in
movsl
jbe
movsb
jne
data16
repz
inc
and
mov
sbb
ljmp
mov
add
push
cmpsb
sub
xlat
dec
xchg
lahf
jecxz
pop
test
cmc
mov
test
adc
popa
pop
jle
nop
sub
xchg
ja
hlt
mov
push
sbb
hlt
adc
push
shrl
imul
lods
add
lret
aad
xlat
jb
mov
pop
dec
xor
aam
xchg
mov
ret
shll
push
pusha
sbb
push
stos
and
dec
fsubr
lock
mov
and
outsl
loopne
shll
xor
or
decb
mov
test
jnp
iret
pop
adc
mov
les
cmp
push
inc
ds
lods
outsl
bound
mov
add
rep
xchg
lcall
sub
movsb
inc
inc
es
int
sub
push
xchg
movq
cmp
clc
adc
ret
shr
pushf
arpl
xchg
push
cs
testl
lods
push
js
in
cli
cltd
fstpl
mov
push
push
test
lcall
lods
push
jbe
lret
pop
push
scas
xchg
or
push
jb
dec
and
jbe
dec
shll
cmp
cmp
ljmp
dec
push
pushl
inc
mov
mov
add
jge
sahf
mov
ficomps
rcll
leave
daa
jg
xor
adc
mov
xchg
jecxz
sbb
dec
add
sub
in
and
leave
test
insl
loopne
xlat
pop
test
sub
pop
jecxz
cmp
out
sbb
sub
lods
outsb
lcall
fldcw
adc
inc
ljmp
aaa
push
aas
out
mov
subl
out
scas
cmp
fnsave
shlb
mov
lret
les
das
dec
mov
mov
cmp
xchg
das
rclb
mov
add
jmp
dec
inc
dec
enter
adcb
sub
jp
idivb
cmp
xor
inc
inc
add
stc
cli
pop
push
add
and
loop
push
xor
cmpsl
in
mov
dec
adcb
scas
pop
pushf
inc
pop
scas
incb
in
jb
ss
nop
sbb
das
inc
cmp
aas
stos
lock
inc
in
inc
sahf
jno
add
fdiv
xchg
add
das
iret
push
out
push
push
lds
jge
cmc
je
pop
jmp
lcall
pop
negl
pop
inc
mov
mov
fsubrs
mov
jns
scas
mov
jnp
ficoml
fsubs
ljmp
pushf
lods
mov
add
ds
push
dec
fistl
repz
repnz
mov
sub
popf
sub
xor
jmp
into
mov
push
pop
shr
pop
addr16
mov
or
mov
scas
mov
lock
xchg
lcall
rol
fdivl
xchg
mov
pushf
xchg
addr16
jg
mov
dec
popa
negl
fsubs
mov
movsb
jle
push
in
xchg
mov
jno
call
fsubr
push
pop
jbe
std
jl
iret
movsb
and
push
xor
scas
mov
das
cli
out
and
cmp
jne
aam
or
jns
or
out
cmp
add
mov
cmpsl
nop
sub
pop
mov
sbbb
cmp
xchg
jecxz
cmp
lcall
fcomps
stos
xchg
pusha
lret
jno
cmp
adc
jbe
mov
aam
or
jbe
jno
xchg
and
mov
pop
fiaddl
xchg
xchg
add
pop
fnsave
mov
and
addr16
loope
bound
and
jb
das
pushf
insl
stos
inc
dec
insl
fwait
xchg
inc
pop
and
iret
fnstsw
inc
sub
stos
ds
or
dec
loope
mov
sub
in
pushf
data16
out
mov
mov
add
fmuls
frstor
imul
mov
xlat
insb
stc
popa
mov
sbb
mov
or
ljmp
jno
mov
xor
inc
push
mov
cmpsl
scas
call
sub
and
mov
adc
jns
push
daa
mov
sahf
mov
inc
jmp
jl
jno
lahf
rcr
add
inc
shll
sti
fildl
jnp
inc
frstor
loop
and
add
stc
jno
fisttps
orl
ljmp
mov
push
pushf
lods
push
mov
loopne
rclb
jae
cltd
imul
sbb
pop
dec
icebp
xchg
repz
call
push
mov
nop
shufps
xlat
pop
sahf
xchg
jecxz
sbb
jp
repnz
nop
inc
jbe
mov
or
jmp
push
insl
test
sbb
es
aad
adc
jl
imul
ljmp
mov
popf
push
cmp
push
jmp
or
ljmp
jg
xchg
shlb
decb
mov
adc
out
lea
push
xchg
fdivr
movsl
mov
pop
adc
imul
test
fadds
cmpl
inc
adc
mov
out
mov
sti
nop
imul
xchg
jle
out
pushl
xchg
jnp
fidivl
test
cltd
test
dec
daa
mov
imul
aas
mov
orb
mov
shl
cmp
sbbl
punpcklbw
jo
and
ja
stc
push
fisubrl
daa
sbb
inc
inc
sbb
add
in
xchg
xlat
or
es
inc
movsb
push
cmp
call
leave
jae
lret
lret
lret
xchg
push
out
cld
dec
je
mov
or
fnstcw
dec
push
enter
pusha
cmovge
mov
mov
xor
int
xor
jmp
enter
mov
cmp
cmp
and
ds
mov
ss
dec
adc
pop
ret
sub
divl
fidivrs
dec
mov
xchg
xor
loope
ja
je
push
or
push
push
mov
or
fiadds
cmp
pop
ret
call
mov
cmp
mov
aad
adc
jb
aaa
push
pop
mov
sub
fldcw
movsb
shl
jl
or
xchg
cmc
fcmove
or
jns
les
xor
js
inc
stos
jne
aam
adc
out
mov
pusha
movsb
or
sub
jle
xchg
out
xor
in
pop
inc
pushf
mov
mov
push
cltd
xchg
adc
out
popf
or
ret
hlt
enter
cwtl
sub
out
sbb
mov
mov
fdivl
sub
data16
iret
mov
lret
lret
pop
arpl
cmpsl
je
push
mov
or
stos
lods
xlat
mov
mov
jnp
stos
aam
push
xor
jle
mov
pop
xor
mov
xchg
xor
sub
clc
jae
push
scas
inc
inc
push
out
and
push
push
mov
lret
test
das
adc
push
inc
and
sti
enter
push
mov
cmpsb
cs
jle
jp
adc
cmc
push
push
add
sbb
addr16
lcall
mov
adc
arpl
mov
jge
push
aaa
rcl
inc
cmp
negb
scas
lcall
mov
cmpsb
or
dec
ss
mov
jl
push
pop
movsb
imul
push
icebp
mov
mov
mov
pop
cmp
es
ss
and
clc
pop
ljmp
push
lcall
push
inc
mov
loopne
ret
in
mov
xlat
xor
inc
push
xchg
jl
nop
test
aas
out
imul
dec
and
daa
inc
push
int3
iret
pusha
push
jl
mov
lret
jae
dec
daa
xchg
fsubrs
les
mov
sahf
pop
jne
adc
div
repz
cmp
cmp
dec
aad
in
lret
or
mov
mov
xchg
enter
mov
lahf
js
out
add
dec
cltd
mov
aam
roll
sbb
loope
call
jge
lret
ds
fimull
and
adcl
add
rcrb
subb
clc
fs
jle
inc
cmpsl
cmp
push
pop
inc
pop
sbb
data16
js
sbb
push
dec
loop
and
mov
icebp
inc
pusha
push
xchg
popa
js
es
imul
sub
dec
jno
sbb
dec
sahf
enter
ret
inc
adc
mov
dec
xchg
lret
ja
jle
inc
leave
fs
stc
xchg
aas
test
xor
xchg
jmp
addl
adc
hlt
fmull
push
push
leave
jnp
push
aaa
or
jg
push
inc
push
mov
inc
ret
xchg
lahf
repnz
dec
jmp
inc
jmp
and
pushf
xchg
es
movsb
ds
xlat
inc
lods
cmp
jne
jecxz
stos
repnz
sub
mov
xlat
int3
jbe
mov
mov
adc
or
add
add
incb
addr16
xchg
test
imul
inc
fnstenvs
jno
and
rolb
and
jp
js
jmp
jp
hlt
cmp
xchg
out
mov
insl
pop
aaa
jo
out
stos
jne
adc
mov
mov
mov
inc
mov
lret
iret
subl
jmpw
or
mov
cmpsb
mov
mov
shrb
xor
dec
adc
data16
pushf
pop
xor
lods
fsubrp
sub
les
ret
mov
or
jbe
jg
sub
sub
lods
pusha
inc
dec
popa
pop
aaa
cmpsl
int3
cmpsl
push
gs
pusha
cs
fisubl
sbb
push
jb
xor
lock
xlat
ljmp
mov
lret
jne
push
outsl
adc
jge
insb
lods
ljmp
and
popf
sub
je
sub
xchg
pop
cmp
lahf
mov
pop
icebp
adc
adc
jo
adc
fdiv
incl
movsb
in
jns
sub
lods
iret
pushf
jl
push
push
mov
sub
sahf
or
mulb
adcb
addr16
adc
aaa
mov
addr16
mov
dec
movsb
add
fwait
lahf
notl
xor
movsl
leave
rorb
cmp
icebp
aad
in
clc
cmpsl
iret
les
jns
repnz
mov
add
sbb
movsb
out
std
and
in
mov
dec
repz
and
pop
dec
leave
sub
dec
fildll
cmp
mov
fwait
jl
sub
inc
mov
out
dec
fsub
shrl
mov
fists
les
xchg
jae
ret
mov
and
pop
xchg
sbb
and
dec
loopne
in
pushf
cmp
stos
sbb
fstps
dec
cmp
cmp
jo
or
shlb
jae
push
adc
cld
stos
xor
out
scas
aaa
into
loopne
sti
jbe
mov
cld
jmp
sbb
lret
ret
push
jb
or
inc
push
rcrl
dec
mov
sub
push
shll
fistl
add
loope
call
push
mov
push
mov
out
sub
or
ds
dec
sub
outsl
arpl
jg
or
jns
jp
sub
dec
push
inc
cwtl
or
or
sub
lods
in
stc
and
sbb
fdivrl
xchg
or
je
dec
mov
mov
pop
cmp
xchg
aam
js
jg
xor
mov
xor
test
fnstenv
add
cmp
lods
pop
fst
icebp
sbb
loop
stos
sbb
loopne
std
test
dec
hlt
adc
jp
shl
push
sub
icebp
sbb
push
cmpsl
push
rclb
sub
mov
sub
nop
daa
mov
repnz
mov
jle
push
arpl
push
pop
cmp
pop
dec
or
loop
mov
aad
mov
pop
mov
add
add
mov
xor
mov
pop
addl
cmpsl
in
out
cld
inc
jns
pushf
out
xchg
sub
cltd
dec
dec
cltd
sub
sbb
cmp
jmp
aaa
ds
jle
mov
shll
add
push
insb
pushf
cli
int3
imul
mov
or
popaw
pop
mov
cmp
dec
add
out
fcmovb
pop
movsb
out
xlat
push
adc
outsl
pop
and
jge
dec
lahf
or
xchg
and
pop
cmp
out
dec
sub
mov
int3
popf
rcl
push
stos
jmp
movsb
sahf
inc
out
es
in
or
jg
adc
popf
push
pop
fsubs
and
jmp
rcll
test
outsl
add
pop
loop
xchg
lret
or
roll
xor
push
sahf
lods
mov
pop
sahf
sub
pop
std
in
dec
sti
imul
adc
sbb
repnz
shrb
fwait
xchg
daa
and
xor
push
dec
loop
jmp
imul
push
rclb
cld
inc
sub
mov
pop
dec
mov
subl
push
push
jno
sub
imull
dec
pushf
pop
push
jle
adc
addr16
jnp
sub
mov
repnz
insl
or
cs
mov
popa
mov
outsl
fdivs
mov
mov
orb
shl
or
mov
lea
cmp
and
xchg
cs
popf
iret
fcmovnb
fwait
sub
mov
push
mov
fsts
add
clc
enter
xor
sarl
mov
nop
or
jmp
ds
pushf
or
sti
aas
push
clc
dec
xor
xchg
push
push
outsl
fdiv
popa
int3
pop
dec
and
mov
shl
cmpsb
int3
xor
pop
sub
push
test
in
test
iret
jle
andb
leave
xlat
sarb
push
in
mov
add
cmpsb
lret
xor
sahf
push
jle
dec
insb
xor
adc
lods
cmp
mov
xor
hlt
aaa
cmp
push
lods
fildll
cmp
add
nopl
shrl
mov
in
mov
mov
push
push
xlat
cli
enter
pop
movsb
sbb
add
mov
pop
in
data16
int
popa
inc
cmp
push
push
hlt
and
or
rcrl
mov
enter
cwtl
aad
incb
sbb
jle
insb
shr
dec
dec
cli
fdivl
xor
sub
pop
mov
mov
fdivp
cmp
jae
adc
xor
iret
or
jp
mov
jae
mov
insl
mov
test
inc
inc
insb
sub
out
out
mov
or
lods
jl
or
dec
test
cmp
dec
mov
push
xchg
cmp
rcl
ret
shll
pop
xchg
cmp
push
test
cmp
shlb
andb
sti
repz
pop
jge
mov
add
sub
loop
add
mov
xor
push
movsb
mov
pop
rcl
dec
mov
or
in
cmp
orl
push
cwtl
xor
lcall
cmp
jnp
cmpsb
sub
daa
and
outsb
call
in
loope
shrl
jecxz
mov
mov
adc
and
test
jmp
add
or
mov
movsl
les
cmp
inc
insb
xchg
and
lds
testl
leave
pusha
jns
mov
sub
ljmp
sahf
mov
shl
push
sbb
pop
sub
fcmovne
pop
js
push
stos
pop
mov
mov
jb
jecxz
add
mov
or
stos
scas
ljmp
or
push
jo
test
push
inc
push
jnp
andb
lahf
sbb
add
inc
movsl
cmp
ja
pop
stos
flds
or
pop
insl
repnz
fdiv
out
xlat
stos
rcrl
scas
add
mov
and
in
mov
ret
pop
pop
add
cmp
add
imul
xchg
push
push
fs
in
xchg
ret
lcall
and
aas
outsb
dec
mov
loop
dec
jecxz
imul
jp
jl
inc
dec
cmp
es
pop
push
cld
imul
outsl
hlt
add
fmul
add
mov
mov
jbe,pn
into
stos
jecxz
cmp
jmp
jb
dec
or
test
cltd
and
je
call
ljmp
mov
hlt
jns
or
push
adc
into
ljmp
aaa
mov
xchg
popl
or
popf
xchg
lea
mov
mov
inc
pop
sbbl
std
aam
and
ret
adc
fwait
push
mov
xchg
xorl
jb
push
stc
mov
dec
test
je
cmp
js
cld
sti
mov
mov
xchg
in
mov
adc
xor
jo
subb
jnp
mov
out
addl
xor
add
shlb
xor
mov
js
gs
mov
add
and
imul
add
cmp
pop
jns
nop
loop
push
nop
movups
adc
sbb
or
lock
mov
sub
scas
les
fildl
push
lods
loop
jne
or
adc
movsl
das
in
mov
xchg
adc
push
repnz
cwtl
inc
into
adc
or
pushf
xor
cmc
into
sub
xor
dec
arpl
cwtl
sub
xor
aas
out
cld
lcall
loop
or
idivb
cli
stc
fisubs
cmp
shrb
ffree
push
nop
push
cmpsb
aas
push
mov
push
jg
inc
push
lret
mov
or
insl
mov
jl
das
dec
arpl
sbb
pop
in
loope
sub
cwtl
sbb
inc
sub
pop
jo
mov
add
cmp
or
insb
pop
repnz
mov
dec
outsb
mov
repz
imul
ret
je
sahf
ss
pushf
sbb
imul
adc
jo
addl
xchg
insb
add
push
mov
mov
imul
loop
inc
mov
int3
jg
fists
cltd
das
or
je
lahf
and
sti
sbb
sub
loop
in
in
enter
inc
test
repnz
add
mov
fistps
push
test
ljmp
push
mov
mov
pop
sti
jbe
push
in
popf
lret
xchg
jns
and
dec
incl
add
jno
loopne
scas
out
sbb
lahf
inc
in
outsb
in
jae
daa
es
fildl
in
lods
cltd
xor
and
jnp
js
adc
xlat
pop
jae
xlat
add
mov
insb
sbb
mov
sub
pop
movsb
lret
ret
sub
mov
ficomps
je
mov
daa
daa
add
inc
arpl
cmp
not
and
mov
jmp
js
stc
popf
push
pop
cli
cmp
shrb
test
or
push
adc
mov
out
pop
cmc
and
adc
inc
jl
jae
pop
xor
cmp
lcall
ucomiss
bound
and
dec
lahf
xlat
scas
jns
lret
imul
aas
inc
in
fsubr
nop
data16
imul
mov
mov
shl
out
jne
dec
pop
insl
subb
jnp
mov
inc
adc
pusha
xor
inc
inc
jo
jge
stc
nop
or
movsb
ds
push
addr16
xchg
lods
into
xor
imul
mov
mov
add
adc
arpl
je
std
sub
rcll
test
int
lcall
xor
jmp
sarl
lock
sub
mov
add
iret
sbb
xchg
lods
pop
mov
dec
cmp
pmaxsw
lcall
push
adc
mov
inc
adc
push
ljmp
pop
push
jb
test
inc
add
add
test
andl
pushf
xor
sub
sbb
rcrb
cmc
cld
es
jb
lret
sbb
mov
mov
je
xor
cmp
mov
pop
roll
add
mov
pushf
addr16
mov
fwait
mov
mov
sbb
or
gs
xchg
sub
push
xor
pop
inc
or
les
sub
sbb
sahf
pop
push
inc
mov
jnp
add
imul
sub
sbb
movsl
mov
mov
dec
cmc
and
adc
mov
sbb
xlat
lret
bound
mov
and
xor
ljmp
cmc
or
into
push
repnz
gs
in
popa
mov
sbb
adc
repnz
cmpsl
fs
lods
dec
add
dec
sub
sbb
xchg
insl
int3
hlt
sub
stc
rolb
mov
xchg
push
mov
and
mov
insl
sbb
add
icebp
sti
bound
lea
sub
inc
shrl
jns
shr
sub
xor
out
add
mov
xchg
in
mov
mov
cmpsb
xlat
xchg
dec
and
xchg
dec
add
dec
pop
jb
cld
rolb
and
test
xchg
int3
push
scas
cld
cmp
jbe
dec
xor
xchg
mov
repz
jne
imul
aas
lahf
jo
aas
scas
xchg
inc
into
push
sbb
rcrb
cld
jp
rclb
push
cld
xor
in
xchg
sub
cmp
pop
mov
ds
xor
sbb
repz
xor
int
xor
es
xchg
pop
lods
mov
mov
mov
out
mov
jns
mov
sbb
pop
and
out
push
fisubs
or
clc
pop
ret
test
sbb
cmp
pop
popa
mov
cmp
les
push
sbb
scas
sub
pop
fdivs
ljmp
xor
int
push
push
testl
sub
push
fnsave
dec
icebp
in
inc
lcall
and
sbb
xchg
bound
arpl
mov
clc
jg
pop
pop
icebp
lea
push
mov
jo
mov
pop
push
std
pop
insl
adc
dec
xor
pop
push
push
out
push
push
sub
andb
pop
lods
shrl
clc
sti
test
fisttpll
adc
std
je
xor
andl
dec
and
out
xor
push
push
outsl
jne
dec
lret
idivl
cli
dec
out
push
inc
jge
int
mulb
or
mov
mov
adc
cmp
mov
cmp
stc
ss
mov
int3
and
pop
stos
or
fldt
sub
out
jb
add
cmp
xor
cwtl
insb
and
inc
xchg
cmc
pop
out
adc
sbb
inc
add
cs
sub
hlt
int3
lret
dec
aad
std
jmp
les
in
adc
ss
jmp
cli
pushl
insb
popa
fidivs
or
fmul
and
hlt
fldt
nop
mov
cmp
in
dec
dec
add
rcrl
jno
dec
int3
fiaddl
mov
push
inc
ds
into
mov
ret
ljmp
ds
fnstcw
fimuls
push
add
pop
mov
jns
jb
xchg
inc
add
fcmovbe
mov
bound
fmul
xlat
add
sbb
in
ret
mov
pop
pop
inc
pop
adcl
add
mov
es
out
push
add
dec
inc
cmp
dec
aam
aas
popf
adc
and
pop
mov
cmpl
push
push
pop
jl
imul
daa
mov
mov
shrl
test
jb
enter
ss
pop
cmc
cld
lock
sub
repnz
push
xchg
mov
ret
push
shlb
mov
pop
inc
test
mov
movsb
cs
cwtl
mov
sub
addl
aaa
push
mulb
in
xlat
sahf
fistl
add
in
xor
jge
xor
decl
push
into
xchg
in
iret
cmc
leave
add
loop
dec
int
test
hlt
inc
xor
jae
mov
cmpsb
outsl
loop
xchg
inc
test
fstpl
sbb
push
outsb
xor
ret
push
scas
and
mov
repnz
orb
or
adc
push
jmp
dec
jmp
test
or
nop
pop
xchg
mov
adc
ret
insb
jmp
and
and
push
push
inc
fldenv
pop
fistl
nop
leave
sub
jno
push
sub
test
mov
inc
popa
mov
fwait
pop
call
pop
shll
jo
icebp
adc
add
xor
sub
dec
mov
testb
mov
lods
movsl
cmp
hlt
mov
jle,pt
lea
jnp
in
inc
dec
push
cs
xchg
leave
aaa
mov
cwtl
lret
ficomps
jl
call
filds
or
inc
std
cs
or
leave
arpl
sti
je
shrl
dec
pusha
jae
add
jmp
adc
xchg
js
mov
dec
leave
loope
cmp
dec
mov
and
fildl
inc
sub
jmp
push
inc
loope
not
out
xor
ret
mov
and
repnz
in
sub
andl
movsb
insb
aam
cltd
lret
lock
xchg
jmp
out
out
in
pusha
subb
nop
jbe
xchg
cld
xor
xor
test
insl
sti
sbb
addb
xor
sub
movl
cltd
mov
or
icebp
xor
sahf
movsl
cltd
mov
and
int
xchg
cli
cmp
test
sbb
ss
pop
or
cmp
pop
xchg
imulb
dec
out
mov
jmp
mov
pop
fcompl
addb
jb
nop
daa
xlat
jp
ret
inc
notl
cwtl
je
bound
mov
hlt
in
fdivs
mov
incb
das
xchg
and
adc
aas
dec
pop
pop
in
mov
imul
pop
adc
push
push
mov
inc
sub
fldl
call
imull
and
js
fsubrs
xchg
cmpsb
cmp
ds
fcomps
cmp
dec
mov
pop
cmp
jne
xchg
cmp
pop
cld
xchg
mov
daa
push
rcrb
mov
push
je
mov
mov
lcall
ljmp
jae
or
test
out
xchg
xchg
cltd
jns
mov
ror
cmp
icebp
pop
pop
cmpsl
xchg
sub
dec
outsb
lock
imul
sub
mov
ret
jae
jle
sub
out
push
cwtl
pop
pop
or
rorl
in
xor
scas
inc
testb
add
test
notl
dec
in
adc
cmc
dec
fdivs
dec
push
sbb
mov
test
xchg
lret
or
inc
in
mov
mov
or
ds
ljmp
mov
mov
or
shlb
cltd
test
aas
pushf
push
pop
faddl
and
sub
iret
mov
xlat
fistps
ret
push
fnsave
sub
pop
in
mov
xor
outsb
jbe
inc
xor
movsl
orl
shll
jg
xor
inc
mov
lock
scas
ds
add
in
inc
cmp
jge
loope
sti
sbb
or
repz
sub
jo
into
movsb
add
xlat
inc
sbb
pop
mov
imul
leave
sub
mov
sbb
sub
lods
decb
or
lcall
pushf
mulb
fcoml
fwait
mov
jg
daa
dec
faddl
jnp
push
popa
arpl
jbe
mov
push
adc
sub
add
or
decl
shrb
cmp
push
xor
push
add
aas
pushf
mov
movsb
jge
fsubr
xor
loop
pop
inc
inc
jb
adc
cltd
pop
stc
push
add
orb
mov
or
ja
jge
aaa
scas
imul
shl
dec
mov
insb
fsubrl
clc
les
negb
fsubrl
cmc
cmp
leave
insl
push
mov
daa
push
push
jmp
xchg
out
push
nop
sbb
sub
repz
int3
and
add
arpl
cs
adc
mov
sbb
pusha
fnstenv
addr16
jns
xor
cmp
add
hlt
mov
es
adc
jb
or
push
sahf
sub
mov
xlat
sti
xchg
jns
or
aas
lcall
insl
lahf
push
jbe
mov
pusha
xor
sub
push
push
jmp
inc
jne
or
les
push
aas
inc
push
hlt
cmp
xchg
dec
movsl
and
sti
push
push
out
pop
xchg
ds
dec
js
sub
xor
gs
stos
push
bound
cltd
cmp
mov
xchg
xor
add
mov
xchg
dec
loop
push
popa
xor
loop
cmpsl
inc
addl
fcomps
dec
add
mov
adc
mov
aas
imul
xchg
mov
sbb
mov
mov
cmp
xchg
mov
sub
dec
add
and
lods
inc
and
mov
lea
inc
pop
dec
lret
jg
and
and
and
stc
enter
sbb
mov
adc
outsb
push
mov
dec
int
mov
iret
adc
aas
xchg
lock
mov
pop
ss
das
inc
inc
in
dec
pop
pop
mulb
xor
les
jp
aaa
mov
push
jnp
push
loopne
fldl
add
mov
add
setbe
mov
les
fbstp
sbb
jmp
loope
loopne
jnp
das
out
adc
iret
cwtl
das
mov
cltd
xor
xor
dec
gs
xchg
out
js
pushf
jmp
dec
pop
mov
and
push
add
sbb
iret
xchg
xor
pop
repnz
fdiv
insb
xorb
loop
subb
adc
pop
sahf
data16
mov
outsl
pop
push
out
test
pop
stos
icebp
out
ficomps
in
bound
mov
push
inc
jmp
adcb
inc
mov
out
or
jns
repnz
adc
jns
gs
pop
lds
mov
xor
loope
mov
mov
pop
ret
sub
jle
ret
push
dec
pop
icebp
pop
js
push
mov
push
movsl
icebp
fnsave
mov
or
js
or
mov
cmp
push
xchg
popf
cmpsl
int3
fimull
add
mov
adc
hlt
enter
jge
cmp
in
shll
rcl
push
imul
shll
mov
and
cmp
pop
pop
cmp
jns
and
je
fcoml
and
in
mov
rcrb
hlt
xor
or
cmpsl
lahf
pop
loop
jecxz
outsb
bnd
lret
bound
outsb
push
fsubl
add
jp
into
movsb
cltd
test
filds
cli
or
mov
cmp
movsl
rol
mov
pop
xor
mov
mov
in
stos
xchg
mov
gs
jbe
xor
movsl
enter
imul
nop
sbb
adc
aaa
inc
pop
sbb
lcall
lds
js
xchg
mov
push
in
fisubl
pusha
push
and
cmp
rcl
mov
lds
add
je
data16
inc
mov
je
inc
jnp
lods
dec
pop
loope
loop
xchg
mov
dec
add
sahf
clc
lods
lea
je
mov
jmp
inc
outsl
aam
js
fiaddl
push
hlt
xor
hlt
or
or
adc
add
bnd
push
pop
adc
inc
pusha
add
sbb
xlat
xchg
aas
xchg
pushf
jae
adc
xchg
inc
in
ja
shrl
pop
enter
add
sub
add
insb
popa
out
pop
lret
cmc
adc
test
mov
mov
fs
sub
xchg
cltd
xor
addr16
jmp
cmp
cmp
out
fistl
xor
push
out
mov
adc
lret
ds
bound
push
test
mov
jne
add
cmpsb
aaa
sub
mov
mov
outsl
lahf
and
testl
push
sar
mov
ja
leave
mov
imul
mov
jns
int3
fisttps
std
imul
int3
and
xchg
call
aad
insb
add
xor
aam
xlat
xor
std
or
xchg
push
outsb
jl
shrl
cmpsb
shlb
mov
sub
pop
inc
sub
movsl
inc
and
psraw
push
imull
insb
xchg
pop
pop
add
xor
add
rcl
test
mov
test
loope
int3
jecxz
shll
inc
testb
jg
lahf
hlt
dec
jg
and
mov
mov
test
mov
and
push
mov
xor
push
int3
das
push
push
lahf
cld
cmp
mov
adc
inc
ja
jp
mov
mov
dec
inc
daa
shrl
push
scas
out
data16
jmp
test
loop
popl
mov
mov
adc
sarb
mov
xchg
xor
xchg
or
daa
popf
xor
inc
dec
loopne
stc
dec
mov
mov
mov
hlt
int3
lret
fcompl
clc
fdivl
aam
shll
jl
je
mov
cmp
dec
push
push
or
pop
xchg
int3
rol
bound
dec
fstl
rcrl
fsts
cmp
jge
xchg
shrl
imul
xchg
xor
mov
push
test
inc
xor
lock
mov
loope
fwait
jl
push
imul
xor
or
in
xor
jo
rorl
and
je
inc
sub
into
jmp
push
ror
loope,pt
dec
pop
lret
push
aaa
movsb
push
inc
mov
add
push
out
rcll
pushf
test
lret
and
pop
faddl
mov
sub
ljmp
test
pop
inc
push
or
pop
cmc
inc
fcoml
xchg
bound
pop
xchg
mov
stc
jnp
roll
mov
in
test
stos
jmp
push
inc
cld
mov
mov
sub
mov
jne
mov
mov
xlat
fimull
sbb
movsl
pop
inc
cmp
sub
mov
sub
or
lods
adc
lcall
and
and
aaa
push
mov
das
fimuls
pushf
cltd
inc
pop
cmp
test
stc
es
mov
sbb
cmpsl
bound
mov
orb
aam
push
sbb
movsb
ja
mov
dec
adc
insb
movsl
xor
inc
cmc
jne
push
movsl
mov
int3
test
bound
adc
cld
gs
aad
in
sub
pop
test
inc
loop
mov
dec
in
loopne
aam
sbb
dec
dec
mov
mov
push
shll
shl
loop
popa
or
jle
inc
sahf
rcl
mov
inc
cli
add
pop
dec
lods
rclb
dec
inc
xchg
imul
hlt
adc
mov
cld
outsl
xchg
test
jb
dec
xchg
cmp
lods
movb
and
pop
mov
cmpsl
jle
imul
data16
inc
das
or
das
cmp
xlat
stos
cmp
sahf
out
shll
cmp
and
pop
repnz
mov
mov
shlb
push
add
fwait
pop
popf
adc
cltd
les
and
imul
andb
jecxz
mov
sbb
rcl
cmp
stc
push
nop
sbb
mov
push
in
mov
or
out
sub
and
outsb
test
pop
add
sbb
les
dec
mov
andb
scas
pop
call
and
outsl
sti
pop
out
mov
pop
jl
mov
pop
divl
push
lds
jg
popf
jo
test
ds
fcmovnb
std
aaa
imul
or
test
xchg
adc
mov
repz
push
sbb
pop
mov
sub
lret
in
addb
movsb
inc
xor
jge
jnp
ret
sarb
rcrl
fbstp
pop
fbld
push
outsb
jg
jle
push
mov
push
aam
mov
repnz
popf
inc
xlat
rcll
test
mov
dec
jo
cmc
push
jg
lret
jp
dec
mov
leave
jle
or
outsb
push
mov
push
jne
cmpsl
hlt
jnp
pop
arpl
mov
push
cmp
push
mov
cmpsl
cmp
mov
push
dec
add
jbe
cmp
mov
inc
inc
je
and
xor
lea
out
adc
out
sbb
mov
mov
test
cld
mov
pop
ret
adc
xchg
sub
mov
fsubrs
adc
aad
sub
popa
add
lcall
in
fidivs
sbb
lock
push
xor
repnz
or
jmp
test
inc
inc
out
mov
jbe
or
gs
std
jl
xchg
xor
dec
test
sahf
sub
leave
shrb
inc
cs
ss
lock
dec
mov
adc
ss
dec
in
push
push
out
add
sti
xchg
cmp
cltd
mov
dec
jae
mov
sub
add
jp
sbb
aaa
sbb
lcall
push
cltd
pusha
push
mov
jg
fstpl
ds
outsb
roll
mov
sbb
imul
ret
or
cmpsl
mov
pop
shlb
dec
test
push
jne
addr16
fbstp
xchg
pop
test
sbb
sbb
sbb
fs
or
adc
sub
inc
push
arpl
mov
stc
jno
and
shl
test
fidivs
mov
xchg
insb
jb
pop
aam
daa
xchg
jg
mov
pop
movsb
scas
inc
push
inc
movsl
cmp
cmpsl
dec
xchg
xor
and
scas
cmpl
imull
mov
push
jle
xchg
fcoms
dec
mov
cmp
dec
push
jae
pop
xchg
sub
es
pop
inc
inc
fdivl
ss
dec
out
out
shr
inc
stos
out
movsb
xorb
fucomi
lods
sar
fwait
mov
aas
aad
mov
cltd
jle
pop
repz
data16
shll
scas
fadds
imul
cmp
pop
repnz
adc
in
fs
aaa
int
jg
sbb
push
sbb
inc
cmc
pop
sarl
xlat
enter
ljmp
mov
pop
iret
movsl
inc
roll
dec
and
jecxz
xchg
aam
in
out
sti
addb
lock
lds
movsb
insl
testl
in
rcl
pop
mov
add
sbb
cmp
testl
scas
push
xchg
adc
outsl
les
xor
add
les
outsl
jmp
sub
in
mov
mov
scas
fcmovnb
xchg
or
xchg
push
push
and
out
out
pop
outsb
popf
insl
dec
loopne
cmp
loop,pt
addr16
or
jns
les
pop
inc
mov
fnsave
or
cmp
add
mov
les
jno
adc
out
cmpsl
ret
mov
data16
roll
mov
test
das
rcrb
inc
dec
ja
mov
loopne
pushf
adc
adc
pop
push
jno
clc
or
pushf
in
push
push
adc
and
dec
sahf
xor
push
ss
xchg
cmp
pop
sbb
jbe
cmp
pop
xchg
test
daa
push
xor
jecxz
pop
ljmp
push
or
lods
mov
mov
fmul
in
xchg
sub
xor
js
cmp
push
add
xor
xchg
push
jle
out
push
in
jns
mov
inc
ret
ja
icebp
test
int3
daa
repnz
scas
inc
subl
addr16
pop
int
mov
stos
pop
movsl
push
adcb
mov
push
mov
xchg
xchg
cmc
mov
loop
xor
mov
xchg
cs
leave
sarl
into
gs
repz
or
mov
push
cltd
push
out
jne
add
out
xchg
sub
xchg
cmpsl
ds
mov
ljmp
mov
stos
pop
cmc
sbb
or
mov
jge
add
sbb
and
popf
lret
and
adc
xchg
stc
pushf
scas
mov
or
mov
fsubl
pop
mov
stos
clc
pop
mov
push
lds
xchg
sbb
mov
shll
fidivl
jge
test
add
sahf
enter
mov
stos
jecxz
testl
xlat
lret
scas
xchg
add
fucomip
jg
xor
es
push
popf
pop
jg
out
and
paddsb
and
pop
pop
dec
inc
arpl
xchg
shrb
sti
mov
mov
and
push
inc
les
sahf
xchg
in
cs
jno
inc
enter
jmp
sbb
jnp
scas
nop
insb
movsl
lds
adcl
sbb
cmp
out
push
jl
mov
fsubs
pop
push
lock
enter
adc
cmp
jns
push
inc
rolb
mov
subl
out
sbb
dec
sarl
pop
imul
pop
and
pop
popa
xchg
xchg
data16
pop
mov
add
imul
mov
jb
pusha
xchg
mov
iret
cli
in
out
cwtl
pop
pop
dec
add
cmp
iret
mov
les
rcrl
push
aas
xchg
nop
cmp
sub
out
movsl
fs
push
out
mov
xor
push
push
mov
in
mov
jo
xor
fwait
movsl
sub
test
loope
loop
rorl
mov
out
dec
loop
sbb
ret
in
insb
xor
dec
xor
mov
lahf
adc
in
dec
icebp
pop
incl
mov
and
jnp
pop
jbe
mov
call
adc
jae
aad
sub
cmp
inc
inc
fs
jne
popa
hlt
pushf
and
pop
fnstenv
lods
sub
cmpsb
cli
das
outsl
jo
adc
and
inc
aad
xor
stos
sub
pop
mov
popf
dec
fildl
cmpsl
sub
sbb
cs
cmp
add
and
or
lret
xchg
add
or
xchg
mov
sahf
loopne
jae
push
mov
mov
adc
mov
xor
ss
push
lret
hlt
push
mov
push
sahf
lods
test
xor
add
je
jns
lock
xor
pop
cltd
mov
repz
aad
cmp
and
into
pop
cmpsl
ss
and
push
sar
fwait
mov
cmp
lods
sub
and
and
rorl
mov
lods
add
mov
cmp
mov
pop
push
cmc
inc
dec
loop
lret
jnp
imul
fcomip
stos
icebp
inc
xlat
and
jb
fwait
decb
lahf
das
mov
cltd
test
cmp
sbbb
pop
sahf
mov
jne
fsubs
call
dec
cmp
and
add
push
ljmp
jmp
cmp
pop
pop
push
dec
test
mov
lea
sarb
xor
icebp
push
push
jp
xchg
rorb
push
in
fwait
mov
stos
xchg
sub
push
enter
sub
adc
jne
pop
cltd
dec
ds
je
and
push
push
lods
aaa
fwait
test
sub
jae
lock
push
xor
pop
sub
mov
insl
cmc
mov
mov
mov
mov
ret
outsl
and
insb
orb
cmovp
int3
arpl
pop
ljmp
dec
mov
cmpb
insb
push
iret
scas
jno
das
repz
xchg
nop
sbb
test
jo
mov
cld
outsl
int3
inc
xlat
std
adc
xchg
push
mov
jo
push
icebp
or
inc
mov
xchg
mov
sarl
mov
cmp
negl
jno
ret
leave
aas
cmp
lock
pop
xor
push
jno
sbb
adc
adc
in
mov
xchg
cmp
push
loope
popa
cmc
inc
adc
sbb
dec
adc
aaa
cmp
fldenv
shr
test
out
push
sbb
aas
imul
imul
cmp
fimull
inc
in
sub
dec
out
shlb
xor
mov
cltd
xor
pop
xchg
sub
in
sub
sbb
sbb
fwait
xor
bound
push
sbb
push
out
adc
ja
jo
and
jecxz
stc
sbb
icebp
dec
stc
pop
mov
loope
jl
fsubrs
jbe
sbb
addr16
mov
mov
mov
mov
or
and
clc
imul
test
xchg
xchg
jmp
aad
cmpsl
push
or
in
jns
pop
pop
mov
add
stos
lcall
jmp
sbb
jne
insl
push
dec
rcll
mov
inc
mov
sbb
jmp
sbbl
lock
xor
cmpsl
outsl
dec
mov
jno
hlt
aaa
es
ret
movl
xor
xchg
and
push
stc
test
jp
adc
scas
rolb
dec
jne,pn
popf
imul
add
pop
adc
cs
pop
xor
xlat
js
or
xor
popa
icebp
push
xor
cmpsb
push
pop
cmp
sub
sub
mov
fstpl
mov
and
jb
std
xchg
dec
adc
ret
shr
add
in
notb
push
loopne
cmpsb
stos
push
repnz
mov
push
sub
sbbl
aam
insb
leave
clc
fistpll
xor
cmpsl
aad
pop
clc
icebp
mov
icebp
inc
cmpsl
cmpsl
jge
xchg
jns
jmp
icebp
popf
push
push
pop
in
inc
aas
fisttpl
inc
dec
or
bound
enter
inc
imul
shlb
mov
lcall
lods
jne
test
lret
bound
sbb
daa
sub
aas
stos
inc
insl
outsb
fdivrl
shlb
int
and
int3
and
in
mov
or
add
inc
push
rorb
or
or
mov
and
or
movsb
lods
cmpsb
lock
dec
std
push
lock
mov
pop
add
xor
mov
outsb
popa
sbbb
cmc
jl
movsb
xor
push
sbb
cmp
and
fimull
mov
fstpt
push
adc
mov
xchg
fs
je
rcl
jmp
mov
xor
xchg
inc
out
mov
loop
loopne
pop
pop
push
imul
mov
leave
pusha
or
negb
enter
lods
call
or
pop
ds
aam
pop
ljmp
insl
sbb
sbb
std
and
int
cmp
push
insb
out
push
jae
push
xlat
ljmp
mov
mov
lret
out
fisubrs
lds
movsl
dec
jecxz
mov
movsb
popa
repnz
das
subl
mov
mov
sub
add
in
jecxz
hlt
hlt
inc
pop
pop
negl
fmuls
enter
jle
xor
xlat
pop
add
jle
mov
adc
lret
jge
in
mov
mov
in
test
xchg
std
xchg
mov
push
sbb
inc
mov
test
add
sub
inc
aaa
pop
cmpl
add
add
pop
mov
adcb
xor
insl
push
or
pop
into
xor
ds
ficoms
aad
sbb
cmp
or
iret
inc
ficompl
je
mov
mov
jmp
loope
es
aad
jb
int
leave
out
loope
mov
mov
gs
cs
xchg
cmpb
adc
mov
and
mov
addr16
cs
pop
inc
dec
pop
inc
sti
imul
xchg
adc
sub
push
call
adc
popa
push
ds
fwait
jo
loop
sub
inc
shrb
and
or
and
les
push
shlb
loope
sub
frstor
and
leave
movsb
inc
fidivrl
in
push
sub
lds
out
into
fcoml
imull
mov
sub
stos
insl
loopne
ja
enter
rdtsc
dec
fdivl
mov
sbb
mov
lods
inc
sar
cld
jecxz
roll
inc
push
lock
in
pop
xchg
and
repnz
mov
ja
pop
push
dec
movsl
mov
leave
or
icebp
mov
ds
add
ds
mov
filds
ret
mov
push
mov
adc
push
xor
lods
cwtl
fisubrs
xchg
jb
jg
outsb
sub
mov
arpl
or
jne
adc
jnp
leave
lock
push
cmp
push
fimuls
repz
xchg
movsl
loop
xor
loop
dec
pop
icebp
inc
fwait
xor
mov
notl
cld
add
out
mov
dec
leave
jmp
push
fcoms
mov
inc
pop
call
sbb
and
or
add
fstpt
and
cld
lret
jbe
mov
jmp
fmull
mov
cmpsb
out
adc
mov
mov
mov
and
insb
mov
into
push
inc
adc
fnstsw
add
bound
pop
test
lods
clc
nop
adc
xchg
test
pop
fwait
push
out
popa
dec
xor
ss
int3
pop
rcr
mov
and
push
icebp
or
arpl
scas
cmpsb
test
xchg
dec
jge
clc
push
je
jp
xchg
in
mov
notl
xchg
xlat
xor
inc
mov
imul
jge
lret
sahf
inc
pop
mov
ds
cmp
xchg
rorb
movb
or
imul
sbbl
aam
adc
clc
add
xor
call
mov
icebp
insb
mov
popf
sti
mov
cmp
lods
jo
loope
iret
jno
jne
dec
pop
lahf
xchg
xlat
fcompl
sub
jbe
cmp
xor
lret
repnz
je
cmc
or
mov
aas
mov
or
add
dec
das
stos
lds
lock
jg
add
negl
sub
icebp
loop
push
mov
fidivl
push
stos
mov
inc
inc
pop
sub
xchg
mov
pop
jno
jge
je
xchg
movsl
enterw
jns
jmp
je
in
mov
outsl
ja
mov
xchg
cld
ret
xor
cmpb
xchg
testb
jo
lcall
rorl
in
xchg
mov
add
mov
sbb
pop
out
jne
cmp
into
xchg
jmp
and
loope
leave
cmp
xor
inc
test
or
mov
je
push
sub
or
test
fwait
sub
and
inc
in
xchg
sbb
sbb
or
js
ja
fisubrs
lds
movsl
scas
ss
inc
movb
xchg
stc
insb
in
movsl
sub
push
popfw
xor
jno
or
mov
movsl
inc
cmp
sbb
cli
jno
orl
fmuls
les
rol
test
mov
cld
orl
inc
jmp
ljmp
pop
out
sbb
mov
dec
fs
repnz
in
mov
mov
fildl
std
push
and
mov
add
push
mov
and
mov
mov
xor
and
sbb
inc
adc
loop
rclb
mov
enter
test
into
mov
xchg
push
subb
xlat
fld
sbb
pop
repz
repnz
pop
aad
jp
sub
sub
pop
in
movsb
push
xchg
pushf
lds
mov
movsl
js
xlat
xchg
shl
cmc
rcrb
jae
loope
jbe
sbb
jbe
jl
xchg
scas
call
lods
mov
add
sub
aas
mov
lds
push
mov
rol
in
xchg
jle
fnstsw
jns
mov
adc
push
lret
es
mov
pushf
or
lods
out
clc
nop
test
or
leave
mov
shr
xchg
adc
sbb
pop
movsl
arpl
outsb
pop
cmc
bnd
and
jge
ret
jae
jecxz
cmc
or
dec
loope
dec
pop
sub
fdivl
dec
lahf
push
cmp
cli
jne
fcmove
jecxz
xchg
in
cltd
adc
lock
bound
cmpsl
xchg
imul
mov
mov
dec
mov
loope
mov
cmp
cmp
gs
fxch
popa
mov
pop
adcl
jg
sub
jl
jnp
nop
lds
jb
scas
notb
inc
mov
ret
jns
test
scas
inc
inc
xlat
ja
pop
cmc
aad
aas
jp
or
pop
fisubrs
pandn
xor
xor
out
and
dec
out
leave
pushf
loop
stos
adc
leave
cmp
push
mov
xchg
mov
push
into
sbb
mov
cs
push
mov
lcall
pop
clc
test
xor
jno
arpl
adc
test
xchg
adc
je
lods
ja
jle
loop
mov
loop
mov
lods
mov
pop
inc
je
stc
fdivl
or
ss
in
jecxz
dec
adc
jmp
add
cmp
movsb
sti
insl
scas
iret
cmpb
loope
inc
pop
out
mov
std
gs
call
test
jecxz
push
testl
or
inc
out
arpl
ljmp
or
sub
or
xor
push
ret
shlb
jne
mov
outsb
ret
out
shlb
xlat
clc
cld
mov
fcoml
lock
std
and
arpl
jno
pop
insb
in
xchg
xor
movsl
mov
mov
jmp
fidivrs
scas
sub
and
push
and
xchg
inc
dec
add
out
mov
outsl
ret
jge
iret
mov
push
mov
adc
aas
imul
jl
mov
sub
xchg
jnp
std
loop
sbb
fadd
pop
or
and
mov
mov
cmpsl
or
push
jno
adc
cmpsb
inc
push
arpl
jno
adc
dec
movsl
or
or
ja
adc
pushf
lods
inc
iret
mov
test
cmpsl
mov
lds
jno
loopne,pt
jo
jmp
pop
inc
cld
aam
or
scas
inc
mov
daa
outsl
pop
int3
cmp
arpl
jbe
jmp
cmp
push
mov
add
int
stc
es
xor
push
lods
sub
xor
clc
mov
jp
scas
mov
adc
cwtl
inc
lea
test
std
out
xor
xchg
imul
push
dec
cwtl
xor
loop
adc
ret
fnstcw
ljmp
pop
in
jo
fucomi
test
sarb
xchg
daa
or
xchg
rcr
dec
xchg
ss
xchg
add
inc
xor
loope
mov
inc
xchg
add
jo
or
rcl
test
cmpsb
icebp
jns
cs
cmp
frstor
repnz
or
cmp
jp
nop
and
fistpl
pop
mov
cmp
or
notl
in
add
xor
sbb
popa
mov
sub
xlat
iret
data16
test
mov
into
or
xchg
and
lcall
mov
mov
mov
ljmp
sahf
ret
and
pop
push
in
cli
push
cli
sti
pop
outsb
sub
sub
ret
lcall
shl
dec
and
push
push
pop
mov
xchg
outsb
jge
addr16
inc
in
int
fisubs
in
pop
loop
pop
dec
ret
outsb
fcompl
scas
xor
jmp
jecxz
je
lods
bound
shld
mov
cs
mov
sbb
call
scas
shrb
enter
jb
inc
outsl
repz
test
nop
sub
mov
pop
jge
xchg
push
jo
in
sub
imul
ds
mov
dec
push
fisttpll
mov
xchg
xor
pop
push
loope
mov
dec
lahf
cli
inc
scas
cmpsb
sti
inc
xchg
cmpsl
push
int3
out
dec
xlat
sbb
aam
int3
or
lds
add
cmp
xor
aad
push
shll
sbb
movl
cli
neg
mov
in
and
mov
call
mov
jle
xchg
xor
cmpsl
cmp
fisttpl
dec
sahf
inc
pop
out
xor
push
fs
lret
push
fucomp
xchg
es
sub
xchg
push
adc
mov
mov
mov
cmp
dec
les
jo
lock
in
cli
jl
sub
sbb
jecxz
sarb
stc
orb
stos
dec
aad
dec
xchg
add
mov
sub
cltd
sarb
ret
decl
rclb
xchg
sbb
arpl
dec
cmp
shll
imul
call
stos
in
dec
mov
loop
jae
fistpl
cmc
mov
mov
cmpsl
jmp
add
aad
leave
cmp
push
lock
xchg
xor
mov
inc
scas
out
xchg
test
push
inc
lahf
cmpsb
sbb
call
push
push
out
dec
cmp
pop
outsb
out
mov
add
cmp
dec
hlt
xchg
cmp
and
inc
push
in
call
fisttps
pushf
test
out
hlt
adc
add
aad
std
pop
sti
lods
inc
mov
mov
pushf
lock
out
inc
test
pushf
adc
jne
scas
lock
rcr
adc
jne
xor
pop
fwait
mov
sub
inc
aas
dec
ljmp
jb
mov
fisttpll
lcall
adc
je
pop
cli
sub
icebp
shrl
mov
insl
cmp
scas
mov
fcomip
mov
int3
loope
imul
inc
inc
pop
mov
xchg
lods
leave
cmp
popf
push
int3
and
push
xor
addb
inc
push
test
push
inc
cltd
sub
mov
fisubrs
jg
sti
mov
push
popf
sbb
add
hlt
xorw
xchg
push
add
call
sub
cli
cli
jae
pop
add
ss
fistpll
hlt
call
mov
push
and
jne
mov
aam
dec
fadds
imulb
push
leave
mov
cmpsb
outsb
stos
lret
fwait
or
mov
les
add
dec
xchg
pusha
movsb
xor
push
in
xchg
xor
push
in
mov
sbb
sub
dec
push
cmp
xchg
sub
addb
idivl
addl
jge
pop
rorl
jne
jo
adc
mov
and
push
mov
ss
xor
stc
je
fnstenv
or
in
out
pop
mov
dec
adc
mov
push
push
fidivl
mov
ja
call
aam
xor
js
je
sub
mov
inc
push
int3
jae
mov
pop
add
mov
sahf
jne
jge
fmull
imul
pusha
leave
mov
pop
inc
jb
jnp
fwait
xor
popf
xchg
inc
push
or
mov
jo
cmp
mov
inc
outsl
xor
repz
testb
jp
cmpsl
lds
cmpsl
outsl
sbb
mov
lret
leave
stos
out
add
mov
clc
icebp
xor
sub
mov
cmp
loopne
jmp
push
push
test
aad
in
dec
cmp
ficoms
mov
sbb
adc
jg
cs
pop
hlt
mov
push
cmpsb
decb
js
stos
popf
sbb
stos
or
adc
loope
int
incl
jmp
mov
adc
and
cmc
sbb
xlat
aas
repnz
push
das
push
mov
test
and
sarl
repz
pop
and
lea
into
stos
dec
in
lcall
icebp
adc
fists
pushf
addr16
mov
add
sub
leave
push
sarb
pop
aam
jnp
jo
popa
sbb
pop
jo
push
mov
scas
cltd
fs
and
push
dec
imul
dec
mov
cld
insl
push
pop
out
fbld
add
mov
adc
mov
cltd
inc
dec
imul
xlat
mov
add
xchg
add
enter
shl
mov
push
mov
or
pop
mov
sahf
shrl
adc
push
dec
mov
dec
cmp
jno
adc
daa
pop
adc
fdiv
xor
and
outsl
mov
cmp
xor
lea
fs
jecxz
nop
jle
mov
pop
clc
sub
add
xor
in
popf
test
sbb
fs
pop
adc
mov
icebp
in
mov
testl
jle
ljmp
lea
ss
pop
ror
xor
sbb
dec
xlat
pop
subb
mov
xchg
ja
xchg
mov
test
xchg
push
ret
mov
jno
les
mov
xor
pop
lea
push
inc
dec
jno
or
inc
loop
mov
in
insl
loope
addb
mov
dec
add
popa
pop
xchg
mov
in
fsubs
lcall
test
push
call
xchg
ret
lds
or
outsl
popa
clc
pop
mov
add
cmpsl
sub
fldt
inc
fbld
xchg
jae
mov
inc
arpl
lds
js
push
into
jno
cltd
mov
scas
mov
shll
sbb
imul
dec
push
stc
int3
fcmovbe
ror
int
call
jg
add
bound
pop
push
data16
pop
or
cld
inc
je
mov
std
xchg
fldcw
out
cmp
xchg
pop
shl
push
sbb
xor
stos
pushf
jb
push
pop
hlt
inc
int
je
ja
ret
lods
mov
sub
adc
mov
push
shrb
push
sahf
sub
dec
mov
lods
je
mov
bound
push
mov
lock
out
shlb
push
or
stos
cmp
cmp
pop
adc
out
mov
sub
or
es
cmp
push
loope
mov
icebp
xchg
pushf
loopne
sahf
dec
add
cmp
call
mov
and
out
xchg
dec
pop
call
cmp
out
inc
out
aas
std
fwait
jo
dec
roll
adc
nop
sub
sub
push
cmc
ja
mov
mov
das
lods
cs
lea
ficoms
push
xor
push
jo
popf
stc
add
stc
cmpsl
loopne
adc
push
ds
cmpsl
je
out
push
mov
or
mov
xchg
push
add
sti
xchg
lahf
sbb
leave
adc
repz
xchg
fs
movsl
cltd
xor
out
js
cld
test
mov
ds
fsubs
jp
sti
pop
pop
fwait
aaa
stos
pusha
push
ljmp
inc
fistpl
xor
aad
lods
xchg
inc
testb
sbb
inc
out
mov
ljmp
xor
xchg
jmp
stc
leave
test
mov
xor
ret
repz
aas
add
lds
iret
push
mov
popl
daa
push
mov
cwtl
mov
sbb
lret
shll
and
sub
popa
rclb
mov
lock
cli
xchg
fdivr
test
in
ss
fnstenv
xchg
scas
pop
xchg
dec
incl
jp
pop
pushf
pop
push
cmp
adc
mov
lret
inc
adc
movsl
inc
popa
push
mov
repz
test
orb
sahf
push
mov
mov
mov
fildll
int3
xor
testl
push
cmp
mov
scas
dec
xchg
sub
lods
add
push
inc
aam
clc
dec
xor
pop
aam
in
fimuls
divl
push
std
inc
sub
pop
test
push
sub
clc
out
xor
enter
in
lea
andb
repnz
mov
mov
mov
imul
js
sub
cltd
aas
cli
out
icebp
cltd
and
xorl
and
xchg
jno
adc
shl
fmulp
and
pop
repz
or
and
loopne
sbb
pop
lods
mov
pop
add
cmp
xor
in
mov
mov
xor
xlat
push
in
pop
jmp
je
loopne
mov
arpl
sahf
pop
mov
pop
rcrl
mov
rcrb
cmpsb
pop
push
mov
repnz
jecxz
xor
or
fnstenv
inc
push
std
ljmp
int3
and
insl
sahf
push
sbb
mov
sub
xchg
das
cmp
mov
out
jecxz
loope
js
jmp
xchg
fisubrl
movsb
pop
cmc
fs
call
push
mov
lea
outsl
movsb
lods
push
or
pusha
or
ljmp
push
sub
mov
cmpsl
icebp
xchg
dec
push
shrl
pop
sahf
jp
and
mov
ret
xchg
sub
and
mov
and
add
cmp
push
mov
pop
mov
xchg
out
sub
and
iret
lret
lret
popa
or
mov
sbb
mov
sub
gs
sub
xor
push
xchg
pop
repnz
jns
mov
movsl
jo
rcll
nop
sub
push
icebp
inc
div
or
jae
rep
inc
out
dec
cltd
inc
call
mov
imul
dec
fsubs
shrb
mov
icebp
insb
add
and
aaa
fs
enter
mov
insb
push
sub
mov
jb
cmc
or
lret
inc
imul
adc
pop
mov
xor
mov
push
inc
aad
mov
cmp
movsl
mov
mov
in
push
mov
jae
aad
mov
loopne
cli
aad
push
mov
mov
xor
shl
test
mov
jne
adc
arpl
pop
inc
fsubp
icebp
add
fs
pop
sub
dec
loope
inc
xchg
dec
xor
xchg
fistps
in
mov
sub
mov
and
pop
lret
add
mov
jmp
push
dec
in
push
dec
add
xor
jb
lds
xchg
pop
stc
stc
shll
int3
add
aaa
es
sub
jno
sbb
std
jl
insl
inc
pop
mov
lret
jecxz
and
adcb
push
xchg
mov
fiadds
fcmove
popa
xchg
jns
jmp
std
pop
iret
ds
aam
repz
cmpsb
mov
ficomps
lret
jg
cld
scas
jb
mov
jae
push
jmp
sbb
loop
push
adcb
adc
and
jns
imul
inc
fcmove
mov
popa
clc
test
inc
mov
xchg
das
mov
aas
push
fistpll
lods
test
add
xor
in
arpl
cmp
pop
test
or
lret
mov
sub
roll
jbe
or
add
into
xor
shll
xchg
daa
call
or
cs
gs
and
jae
or
fidivs
push
push
jmp
stc
les
adc
pop
cmp
arpl
imul
pop
int
repnz
call
or
movaps
mov
push
xor
mov
push
push
and
xor
xchg
data16
mov
outsb
popa
pop
xchg
nop
iret
fcmovnbe
cltd
movsl
xor
cmp
mov
cmp
loopne
dec
and
psrad
or
mov
fstpl
dec
cld
dec
in
lcall
bnd
or
pop
repz
test
mov
jmp
lods
jmp
pop
sahf
mov
jns
pusha
pop
call
push
mov
cwtl
lcall
cli
jne
cmp
imul
sub
in
or
sbb
adc
add
adc
mov
mov
push
adc
fdivs
cmpb
push
das
insl
push
cs
push
xlat
jb,pn
add
add
cmpsl
sahf
pop
and
je
lcall
lahf
inc
fst
je
or
test
sub
mov
orb
fmul
aaa
lret
xchg
add
pusha
sar
add
call
shll
pop
dec
repnz
js
xchg
test
pop
xor
sbb
pop
lock
xor
xchg
mov
iret
ds
add
repnz
push
jns
ja
cwtl
ret
repnz
pop
sahf
je
outsb
sub
mov
xor
inc
clc
stos
in
scas
inc
push
int3
sub
sbb
inc
push
cmp
xchg
inc
mov
lret
and
shlb
ljmp
pop
add
jne
subb
inc
outsl
out
negb
loope
mov
push
cmp
or
aam
lock
jle
xor
int
in
push
adc
xor
js
and
inc
xchg
and
pop
sub
sub
in
sbb
dec
int
in
jmp
dec
gs
push
jge
cmp
and
outsl
cmp
mov
les
rcll
pop
cmpb
mov
mov
lret
in
add
mov
clc
xchg
aam
mov
mov
xchg
aam
inc
icebp
pushf
cli
icebp
mov
rorb
cmpsb
add
jge
mov
es
push
dec
inc
mov
daa
xor
leave
gs
idivl
inc
dec
stc
nop
add
lods
in
jle
pop
pop
rclb
loope
sub
dec
ret
lock
je
cmp
jle
pop
push
fistpll
jl
movsb
hlt
mov
sti
movzbl
xchg
push
fs
adc
sbb
cmp
in
test
and
or
or
xchg
test
imul
ja
out
out
mov
outsb
push
movsl
icebp
mov
movsl
adc
mov
fucomi
fprem
andb
imul
mov
cmpsl
filds
repz
inc
ljmp
shrl
imul
push
ficomps
test
jge
lcall
jbe
iret
xchg
add
xchg
test
and
sbb
cmp
mov
rol
pop
add
cmc
fcomi
cmp
fs
add
int3
jnp
insl
and
jns
lret
clc
stc
fsubrl
fstl
les
add
inc
xchg
mov
out
cltd
stos
sbb
stos
inc
ss
mov
mov
fs
xchg
push
jo
pop
aas
inc
or
sub
cmc
jp
aas
dec
fnstcw
dec
jmp
jp
mov
cmpsb
fcomps
and
dec
fcoms
or
adc
mov
and
jmp
or
jge
jmp
test
lds
int
cmp
pusha
hlt
fsubr
push
aaa
sub
xor
rolb
xchg
xchg
dec
mov
mov
cmp
mov
push
mov
daa
xchg
lcall
mov
fmuls
outsl
push
das
mov
push
xor
jns
xchg
sbb
xlat
lods
orb
adc
mov
mov
sbb
rcll
cltd
pushf
sarl
lods
loop
imul
or
sbb
add
hlt
fstps
jg
jle
mov
lea
xor
in
or
push
mov
sub
pop
lods
jmp
shr
stos
jno
push
or
out
int
and
or
test
stc
mov
fildl
jmp
and
cld
xor
sub
mov
stos
cmp
ljmp
mov
and
scas
or
std
and
sub
inc
mov
clc
lret
and
test
int
add
cmp
shrb
repnz
fstpt
lret
filds
mov
adc
es
add
rolb
sub
mov
cmpsb
out
pusha
rol
rorb
mov
jne
sub
jg
imul
sbb
sbb
dec
pop
xor
nop
imul
and
hlt
paddd
mov
rcll
mov
ret
lcall
repz
ret
test
inc
outsl
push
in
fistpll
push
push
mov
out
xor
jbe
dec
stc
enter
cmp
pop
mov
mov
ds
stos
jae
iret
imul
mov
and
daa
sub
pop
dec
mov
sbb
addr16
das
call
cmpsl
push
arpl
jnp
pop
mov
stc
cmp
mov
pop
mov
or
ljmp
ds
xor
dec
inc
ljmp
fidivrl
add
sub
rorl
lahf
xchg
pusha
cli
mov
mov
mov
xchg
adc
push
jp
cmp
cli
xchg
and
fucomi
pushl
jno
lock
adc
iret
inc
push
inc
popf
adc
or
and
mov
stos
cmp
dec
in
sbb
dec
fisubrs
fwait
aam
mov
mov
std
inc
add
out
dec
popa
inc
jmp
pop
mov
subb
aam
sahf
pop
mov
push
loop
mov
lcall
mov
in
inc
jae
add
hlt
jmp
mov
je
pop
icebp
pop
dec
loope
mov
sub
rcrl
cld
les
lds
xlat
jmp
mov
sbb
push
rolb
jno
sbb
and
aam
and
mov
popf
and
shll
lcall
test
loopne
imul
pop
xor
out
xchg
or
mov
in
jge
loope
mov
inc
nop
lret
popa
push
test
aas
daa
call
jp
sarb
gs
shrl
int3
or
sbb
ss
xlat
imul
lods
mov
popa
xor
xchg
pop
in
jns
push
call
scas
jbe
lret
xchg
pop
insl
movsb
push
mov
push
out
sub
cmp
cs
push
repnz
jg
mov
push
sbb
mov
rcpps
mov
mov
pop
loop
inc
sti
or
push
mov
stc
imul
jo
jne
add
cmp
mov
xchg
mov
dec
and
dec
pop
xchg
sub
fs
data16
scas
jle
inc
decb
xchg
xchg
addr16
shll
lcall
mov
push
push
mov
std
jg
lret
ss
cmp
loopne
sti
jne
cmp
xchg
inc
shlb
arpl
xor
xor
sbb
arpl
movsb
and
xchg
jbe
mov
mov
arpl
jns
jecxz
jbe
dec
lods
pop
inc
mov
mov
in
push
aas
push
mov
jns
or
pop
cmp
fisubs
loopne
cld
aaa
jecxz
data16
cmpsb
add
xor
jp
inc
lods
add
fsubrs
push
ljmp
jno
jae
mov
xor
cmp
hlt
xlat
ljmp
clc
xchg
imul
push
add
mov
xor
rorl
and
cld
mov
mov
lret
imull
js
pop
pop
shll
sub
pop
jo
js
je
push
adc
xor
cli
lds
aam
mov
mov
jbe
shlb
outsl
mulb
scas
nop
les
mov
fsubl
mov
xchg
dec
xchg
dec
sti
cmp
sub
outsb
fnstcw
mov
outsb
push
cmpsl
aam
ficompl
cmp
and
xchg
mov
dec
sbb
addb
mov
pop
movsb
sti
sahf
test
mov
cwtl
and
mov
jns
xor
std
enter
pop
push
ss
shll
sbb
push
iret
fsubp
sbb
ljmp
mov
lcall
mov
cmp
pop
push
pop
sti
iret
data16
sbb
push
pop
or
int
loope
ljmp
pop
add
or
and
adc
imul
push
adc
or
lret
jg
sub
mov
sahf
fwait
rolb
cld
loope
xchg
enter
jmp
or
sahf
lahf
sbb
xchg
xchg
jne
jl
pop
pop
dec
popf
jo
shr
lods
xor
and
loop
jmp
nop
add
adc
cmp
jno
out
sbb
mov
mov
js
xchg
push
fsts
jb
and
push
addr16
dec
xor
add
push
xchg
mov
push
and
adc
cmp
or
das
sbb
sbb
push
xchg
mov
clc
loope
fldenv
xor
das
cld
cltd
sub
dec
test
xor
pop
loope
inc
mov
ret
fcompl
std
pop
ficoml
sbb
dec
push
cmp
stos
and
aam
mov
jecxz
push
mov
imulb
hlt
push
fisttpll
or
mov
mov
mov
jecxz
enter
js
xchg
addr16
ja
jnp
cmp
xor
mov
js
pop
enter
jge
mov
fdiv
add
dec
js
and
int3
jmp
scas
lods
das
sbb
iret
into
out
call
sub
fisubl
inc
pop
jle
and
sbb
fisubs
cmp
mov
fcoml
mov
stc
lods
xchg
add
add
dec
inc
or
call
or
add
push
inc
fs
add
movl
incl
or
add
out
and
cld
lret
sbb
aam
jecxz
es
pop
sub
xchg
mov
repnz
jecxz
adc
rol
sub
push
call
shl
and
and
sarl
mov
xchg
idiv
inc
add
es
jns
jge
adc
cs
or
sbb
loopne
pop
shl
mov
test
mov
pop
or
pop
mov
mov
clc
sahf
cmp
insb
sti
shl
sbb
repz
xor
add
mov
lods
and
pop
sub
movsl
sub
repz
jb
into
scas
xchg
jge
shl
scas
xorb
mov
xchg
pop
sub
mov
push
leave
pop
test
shl
adc
and
nop
ss
mov
push
push
mov
std
cli
xchg
push
loope
push
mov
or
lods
xchg
push
push
lcall
ja
fnstcw
xchg
sub
pop
jne
iret
insl
cs
sbb
sbb
ds
push
add
insb
ss
adc
negb
ss
mov
test
push
pop
mov
icebp
and
dec
call
or
stc
popa
pop
hlt
mov
dec
or
push
add
sbb
dec
inc
faddl
cmpsl
lcall
pop
mov
mov
mov
es
or
call
adc
pop
adc
push
inc
jle
stos
xchg
xchg
pusha
imul
out
xchg
gs
push
mov
mov
sti
xchg
sub
pop
fwait
icebp
test
mov
mov
pop
sbb
mov
cmp
movsl
repz
sbb
mov
xchg
fsubrl
pop
cmp
cmp
xor
mov
inc
data16
movsb
inc
or
mov
call
cli
iret
lock
pop
add
mov
and
cs
das
inc
lock
jno
ret
in
fcoms
dec
push
sysret
add
jae
sub
xchg
add
or
mov
pop
push
push
insl
mov
xor
mov
outsl
pushf
jecxz
aas
pushf
mov
mov
inc
ja
in
xorl
daa
ds
adc
adc
mov
mov
aam
imulb
aam
pop
fwait
sub
ss
xorl
shlb
jns
icebp
pop
mov
mov
ret
icebp
jo
mov
cltd
xor
or
inc
aas
mov
push
add
mov
les
sub
jnp
pop
scas
push
aam
jg
xorb
pop
sahf
out
imul
xchg
jb
stc
in
loop
and
stos
adc
lds
cmpsb
ja
sub
es
jo
aam
mov
mov
jae
shrb
shr
dec
lods
lds
xchg
mov
ret
insb
push
stc
xor
dec
int3
arpl
mov
sahf
jbe
outsl
ret
cld
xchg
adc
sbb
dec
and
js
dec
arpl
pop
cmc
rolb
jl
lods
shrl
add
adc
xchg
pop
fidivrl
adc
jl
xchg
rcrb
or
es
add
or
aaa
push
cmp
mov
cmp
add
mov
or
fwait
cmp
int3
icebp
mov
sbb
and
js
pusha
push
mov
pop
mov
je
cli
into
fldcw
mov
mov
add
clc
push
popa
insl
xor
sbbb
inc
mov
jbe
in
dec
outsb
shrl
outsl
ret
loope
adc
xchg
pop
in
xchg
lret
dec
or
push
add
test
xor
and
inc
clc
scas
adc
mov
lods
inc
std
sbb
ret
push
shrl
mov
ss
inc
mov
xlat
gs
call
dec
in
inc
pop
pop
lret
adc
jge
push
lret
loope
orl
sbb
int
xor
inc
lods
adc
jl
and
scas
xor
cmpsl
mov
adc
sub
inc
aad
adc
test
je
sub
jb
jmp
dec
jg
lods
and
out
mov
repnz
xchg
test
or
fidivl
or
xor
cld
aas
and
adc
xor
test
push
insl
inc
push
sbb
movsl
xlat
or
insl
mov
popl
out
or
mov
pusha
mov
sub
sbbl
add
inc
push
ret
fimull
iret
movsl
int
mov
imul
in
or
repz
and
xor
daa
les
mov
das
cmp
outsl
jnp
and
jbe
in
jbe
fwait
sar
xchg
pop
aas
mov
imul
xchg
cwtl
inc
adc
jp
push
add
mov
push
lods
aas
sbb
pop
jne
pop
inc
push
jecxz
out
mov
sbb
adcb
add
push
jg
push
ljmp
icebp
mov
xlat
in
jp
push
and
push
mov
or
and
push
repz
cmp
pop
xor
push
es
push
jbe
push
xor
pop
adc
adc
xchg
inc
jae
push
xlat
push
fstps
clc
in
add
sbbb
nop
mov
in
pop
mov
mov
sbb
bound
sbb
add
jle
adc
aad
movsb
fwait
mov
cltd
cwtl
aas
xchg
mov
mov
data16
lods
add
push
add
mov
cmc
lds
pop
cmc
test
push
or
movsb
js
push
pop
pop
movsl
cmp
sub
cmp
jbe
cltd
and
movsb
insl
popa
push
mov
cwtl
out
push
leave
push
por
arpl
adc
xchg
jae
mov
js
xchg
dec
cmp
xor
int3
lret
clc
sbb
je
or
out
add
sbb
rcl
mov
out
shlb
jne
jg
mov
int3
vpaddusw
jnp
jo
inc
clc
dec
mov
cwtl
mov
cwtl
xor
test
or
xchg
aad
icebp
out
xchg
mov
adc
and
mov
inc
dec
cld
fisubrs
sarb
test
inc
mov
out
aad
and
mov
push
out
rcr
xchg
daa
leave
cmc
mov
es
iret
lret
xchg
xchg
mov
mov
lods
fsubl
sbb
pushf
test
stos
mov
push
and
ret
test
mov
ret
and
inc
stos
mov
jg
add
mov
test
aad
cmp
out
test
cltd
test
mov
daa
or
es
mov
shl
push
gs
xchg
sbbl
inc
dec
add
out
daa
cmp
fsubp
add
xchg
cmp
xor
inc
mov
xor
inc
or
stos
ror
in
add
xor
mov
or
sub
cwtl
pop
cmp
dec
cmp
add
xchg
jp
mov
xchg
es
push
xor
push
dec
pusha
jp
xor
mov
or
jecxz
xchg
mov
mov
lret
js
in
inc
jbe
pop
inc
insb
daa
cmc
roll
sub
cmp
mov
call
cmpsl
mov
jmp
sbb
dec
sub
mov
arpl
mov
push
imul
rol
jns
jo
enter
pop
roll
daa
jp
stc
movsl
sbb
rcrb
outsb
es
xor
xchg
inc
test
cld
aad
es
jge
lea
jp
jo
lods
stos
gs
subb
inc
jne
xchg
stc
sub
dec
fwait
pop
fidivrs
sbb
add
adc
adc
pusha
push
add
mov
pop
push
inc
stos
cmpsb
ljmp
fldenv
lds
in
dec
push
ret
test
jp
enter
and
jne
mov
movsb
pop
ljmp
add
jmp
cmp
push
mov
imul
cli
add
sub
jne
daa
leave
aaa
push
sti
dec
jecxz
aad
cmpsl
mov
dec
xchg
call
mov
lods
int3
mov
shlb
andl
mov
cwtl
mov
jns
push
lcall
jne
mov
push
xchg
mov
les
jo
sub
mov
cmp
mov
dec
mov
rcl
dec
test
jecxz
in
jnp
sub
xchg
inc
rcll
mov
arpl
inc
pusha
scas
loopne
push
cmp
and
mov
stc
mov
jl
pop
cmpsl
jb
fwait
cmc
push
cmp
in
xorl
pop
or
jg
push
lcall
ljmp
xor
pop
aaa
dec
pushf
cli
call
aad
cltd
inc
inc
lcall
sbb
cmpsb
mov
ud1
out
int3
stc
and
jp
sbb
scas
cmpsl
sub
call
jb
mov
sti
mov
idivb
test
pop
repz
jmp
ret
ss
test
inc
jle
popf
rolb
movsb
mov
mov
addr16
mov
xor
jbe
lret
and
or
insl
dec
test
iret
icebp
mov
cld
rcrb
lods
push
push
push
or
cmpsb
jle
dec
loopne
pop
aad
fildll
movsl
cld
arpl
mov
lods
dec
push
push
jp
push
out
test
inc
push
test
ffreep
or
sbbl
clc
jge
mov
addl
fnsave
call
or
fsts
dec
adc
push
push
xchg
stos
mov
shll
pop
cld
mov
adc
sti
mov
sub
cwtl
xor
push
cs
or
or
or
js
dec
push
and
pop
lock
pop
pop
stc
xchg
frstor
dec
xlat
jo
aaa
lea
xor
out
adc
std
push
push
scas
dec
fidivs
int
imul
out
push
mov
inc
fwait
insl
fcmovb
fildl
mov
mov
inc
push
loopne
lock
and
pusha
mov
jb
cmp
and
movsl
adc
cltd
mov
pushf
jl
pop
add
rdmsr
cmp
xchg
stos
pop
cmp
cld
inc
mov
movsl
movsl
xchg
add
call
inc
dec
data16
call
addr16
cwtl
pop
or
xchg
icebp
push
pop
outsb
add
pop
xor
sub
insl
lret
insl
daa
imul
mov
lret
cld
ja
mov
shr
or
leave
xor
iret
xchg
jo
movsl
stos
call
fidivs
push
push
mov
mov
sub
push
inc
push
lock
or
adc
sub
nop
jle
cmpsb
jge
jae
or
cmp
shlb
xor
dec
sbb
add
mov
xlat
push
fwait
mov
dec
and
jne
stc
movsl
enter
xchg
or
insb
mov
ret
dec
jns
jl
sub
xchg
insb
adc
sbb
xor
rcl
xchg
push
inc
cmc
dec
mov
pop
outsl
fstl
sti
xchg
subl
sbb
dec
pop
mov
loop
mov
fidivrl
rol
lcall
xor
fs
andl
push
ljmp
add
pop
loopne
cmp
repnz
push
add
cltd
das
sbb
mov
les
loop
cmp
xor
aam
imul
adc
or
imul
cmp
or
push
pop
mov
aas
push
les
fisttps
cmovne
inc
je
jo
push
stc
or
add
idivb
fbstp
fwait
es
data16
and
mov
pushf
pop
sarl
inc
arpl
icebp
jecxz
or
imul
add
stc
xor
insl
fs
imul
popf
loope
xor
insb
push
insb
cmp
pop
inc
in
fs
xchg
pop
out
fidivs
cmp
aad
cmp
mov
call
test
dec
xchg
sbb
rorb
rcrb
insl
add
fistl
dec
outsb
push
sub
mov
jo
pop
xchg
test
add
pop
loop
sub
cmp
and
popf
ss
loopne
pop
aam
push
pop
add
fs
stc
inc
ret
pop
punpckhdq
sbb
adc
insb
adc
loop
outsb
imul
ss
add
sti
or
or
xchg
add
ret
test
or
icebp
mov
cwtl
sbb
xchg
out
clc
or
sarb
fnstsw
push
add
cmpsb
mov
movsl
stos
mov
push
jns
aaa
cmp
push
adc
add
out
test
fsts
sbb
lret
pop
add
push
mov
mov
adcb
push
imul
ret
and
inc
inc
lcall
pop
fnstcw
popa
xchg
das
lret
jg
push
mov
ret
inc
out
sub
cmp
push
xor
mov
inc
data16
mov
lret
cmpsb
leave
pop
adc
or
mov
or
jmp
out
ret
inc
ja
movsl
or
mov
cmpl
jmp
out
or
fbstp
jl
pusha
mov
mov
call
add
addl
lret
movsb
or
pushf
cmp
sbbb
sbb
add
clc
jmp
mov
sbb
add
mov
xchg
ds
push
xlat
adc
fs
add
out
cmpsb
cs
int3
sub
sbb
and
data16
arpl
je
fprem1
inc
xor
ds
inc
mov
xchg
pop
and
inc
push
dec
fdivrl
and
mov
add
jecxz
add
push
mov
subl
mov
mov
push
loop
pop
bound
mov
out
sub
dec
js
je
jns
test
mov
push
es
adc
add
sbbw
xlat
lods
mov
nop
sub
jecxz
xchg
push
push
dec
xor
loopne
les
xchg
pop
xchg
or
outsb
lods
fwait
xchg
jo
cld
dec
dec
xor
inc
dec
dec
out
call
mov
lcall
and
jbe
stos
mov
push
adcb
stc
jno
cmp
or
xor
ret
xchg
push
shufps
pop
xor
in
cmc
or
jne
fisubs
dec
gs
pop
addr16
and
addr16
test
sbb
ret
jecxz
inc
pop
sub
xchg
sub
sub
cmpsl
int
sti
pushf
jnp
mov
popa
movsl
ljmp
mov
pop
fisubrs
leave
mov
push
mov
movsb
cmp
icebp
out
xchg
leave
inc
lcall
inc
lods
lods
andl
test
enter
xchg
jmp
cld
adc
mov
arpl
sbb
out
xchg
add
jae
xor
enter
mov
push
xchg
sbb
adc
push
pop
aaa
mov
xor
pop
stos
inc
imul
push
xchg
add
repz
mov
jns
cmp
adc
pop
mov
pop
mov
xchg
mov
sbb
cs
xrelease
aaa
jnp
shrb
lcall
jmp
cmc
mov
inc
stos
pop
outsb
adc
jnp
lods
jmp
mov
pop
and
aaa
test
shrl
jl
test
pop
xor
nop
jecxz
jne
aad
add
mov
inc
lahf
mov
inc
outsb
add
test
inc
add
fwait
mov
and
jbe
push
push
aas
pushf
jb
cld
xchg
inc
and
sahf
mov
ret
and
cld
dec
std
fldt
leave
ljmp
test
mov
test
movzwl
xor
jno
dec
jecxz
xchg
mov
out
push
push
mov
ret
in
in
mov
in
mov
adc
jl
test
test
mov
mov
sbb
pusha
movl
fidivl
arpl
sub
xor
shlb
scas
aam
test
sbb
mov
xchg
xlat
mov
imul
sbb
ret
imul
pop
cwtl
mov
repnz
das
negl
and
adc
and
ss
inc
cmp
scas
std
push
mov
jecxz
test
xor
mov
jae
sub
leave
insl
jge
es
aas
pop
clc
xor
movsl
jge
push
imul
pop
mov
out
adc
insl
push
jmp
pop
data16
xchg
jb
add
rcl
in
xor
cmc
pop
dec
cmpsb
aad
fldl
in
insb
xlat
repz
lahf
divl
pop
imul
bound
cmp
push
inc
xchg
lock
and
inc
repz
cmp
lahf
insl
hlt
aad
ds
cltd
sti
ljmp
and
cltd
xor
mov
mov
add
xchg
popl
aas
adcl
enter
cmp
rcll
pop
inc
mov
call
test
xchg
mov
inc
les
daa
mov
inc
mov
adc
dec
fsubr
cmp
rclb
stos
add
jp
cs
push
push
out
out
repz
mov
fadds
mov
outsb
xchg
bound
mov
aam
jmp
ljmp
sti
cmp
cmp
fcmovne
and
fisubrs
repnz
xchg
jmp
and
pop
push
sbb
cmp
xchg
pop
jae
push
pop
mov
in
jle
fists
lret
inc
inc
cmpsl
test
popa
mov
xchg
xchg
sub
fistps
pop
les
mov
js
xchg
dec
push
cs
adc
in
pop
or
ret
sbb
sbb
jp
mov
mov
xor
jbe
lcall
out
repz
xor
out
push
and
cmp
and
cld
xchg
cmp
dec
pop
adc
mov
or
xchg
xchg
mov
cmp
cmpsl
cwtl
xchg
jl
dec
pop
lods
mov
adc
imul
shll
mov
inc
loopne
imul
repnz
lcall
in
fs
adc
mov
lret
mov
orl
cld
jp
mov
into
jns
xchg
imul
aam
push
ds
lret
and
ljmp
xor
push
icebp
test
sbb
add
sbb
fcmove
cmp
mov
sub
jb
adc
ss
in
test
iret
fwait
sbb
stc
dec
mov
pusha
mov
sub
or
imul
pusha
aaa
add
adc
mov
push
sti
cmp
cmp
push
insb
jnp
jge
add
xchg
xor
orb
rcrl
cmpb
sahf
cwtl
das
adc
mov
dec
cmp
cmp
add
loopne
testb
mov
movsb
cmp
mov
leave
mov
sub
outsb
adc
pop
imul
lds
scas
cltd
repz
dec
rep
pop
aad
or
xchg
sub
test
int3
jns
dec
and
xchg
xor
ljmp
xchg
ss
jo
lahf
div
or
xor
test
arpl
mov
ljmp
pop
or
pushf
add
arpl
or
push
cwtl
mov
leave
daa
inc
in
pmulhuw
sbb
testb
stos
inc
lahf
pop
pop
int3
enter
lods
pop
popa
les
mov
mov
push
neg
xchg
dec
dec
xchg
shlb
shrl
xchg
lods
pop
pop
sub
popa
cmpl
stos
mov
and
icebp
xor
jmp
pop
shlb
daa
cmp
test
int3
xor
test
push
pop
xor
cltd
or
ds
inc
dec
fcomps
rol
cmp
dec
scas
popf
shr
ret
sti
xchg
mov
sbb
mov
jecxz
mov
adc
jp
ss
std
inc
sbb
dec
dec
addr16
sub
lfs
sub
fidivl
mov
mov
std
push
clc
dec
subl
xor
f2xm1
inc
scas
xor
test
scas
cld
fisubs
sbbl
into
addr16
jno
pop
push
inc
mov
out
dec
adc
pop
add
cmp
xchg
mov
out
int3
jns
std
and
std
xchg
loopne
adc
fiadds
push
jg
fdivl
into
jg
pop
dec
and
jecxz
ret
dec
or
test
mov
movsl
or
push
push
mov
mov
mov
pusha
int3
and
jbe
in
into
xchg
dec
arpl
testl
mov
or
divl
or
jg
sbb
fdivrl
popa
pushl
dec
popa
or
lods
js
sbb
rcrl
jae
adc
fwait
mov
and
ret
sbb
mov
sbb
getsec
add
xor
add
fsubrs
mov
call
ja
sub
leave
mov
mov
clc
insb
jecxz
nop
aas
in
mov
ficoml
lods
jle
lock
pop
sbb
idiv
or
inc
mov
dec
nop
ja
inc
ljmp
push
lret
data16
adc
sbb
pop
in
jle
fs
or
test
aad
daa
es
add
dec
xchg
pop
insl
add
xchg
and
or
ss
mov
jno
popa
mov
test
arpl
dec
jecxz
outsb
add
add
xchg
mov
or
mov
jl
imull
push
inc
aad
lods
xchg
scas
inc
push
addr16
lret
add
push
inc
fwait
inc
sub
push
sub
je
pushf
mov
cltd
ljmp
imul
ljmp
push
fcom
shr
fnstcw
jb
dec
into
ljmp
inc
or
mov
mov
jmp
test
dec
in
jo
movsb
mov
insb
scas
mov
xor
mov
out
in
xchg
push
out
sbb
mov
arpl
xchg
enter
ret
fdivrl
rorl
out
fldt
cmpsl
std
lods
mov
sar
pop
test
lock
rcll
movsl
xor
pxor
cli
out
in
gs
arpl
jno
mov
push
jnp
push
negb
xor
ror
or
cmp
dec
hlt
xor
add
mov
or
mov
adc
aas
sbb
ja
shrl
ret
sbb
push
or
popa
cs
jge
add
push
orb
cmp
imul
lahf
mov
push
dec
adc
fimuls
xchg
xchg
test
jnp
test
and
xlat
outsl
repz
mov
loope
adc
fcompl
inc
mov
mov
add
test
rcl
fsts
cli
xchg
mov
push
cwtl
leave
pop
mov
xchg
outsb
jns
outsl
pop
leave
mov
bound
leave
clc
adc
mov
cli
jo
rol
and
mov
mov
xchg
lahf
adc
xlat
sbb
aad
push
hlt
sbb
jp
xorl
inc
jnp
inc
cmp
add
push
jmp
fisttpl
rcll
mov
xor
insl
cmp
jle
adc
mov
cmc
mov
cwtl
arpl
dec
es
mov
js
scas
flds
popf
mov
mov
mov
xchg
cmpsl
dec
das
mov
pop
pop
cld
xchg
pop
pop
gs
lods
push
out
sub
fdiv
cmpb
scas
sub
add
ds
dec
mov
dec
test
xchg
jecxz
inc
enter
sbbb
pop
push
notb
push
or
movsb
xchg
sub
xchg
sub
or
mov
mov
fsubrp
movsb
jno
pop
or
mov
push
aad
das
lret
cli
popa
lods
outsl
stos
imul
in
notb
and
nop
jmp
lds
jne
movsl
cmp
xchg
rclb
jecxz
decl
notl
call
push
stos
jo
test
inc
and
adc
sbb
icebp
push
push
cmp
push
or
or
lahf
dec
movsl
add
xor
movsl
sub
fsts
int
cli
adc
fldl
push
imul
les
xor
ja
push
xor
xchg
repz
xchg
scas
lcall
mov
or
sbb
cli
rcr
lret
testl
inc
scas
cmp
imul
dec
stos
insb
cmp
dec
sahf
cltd
push
movsl
out
add
mov
int
clc
faddl
pushf
hlt
jnp
lahf
insb
xor
mov
stc
mov
or
in
xorl
or
jnp
pop
outsl
cmp
sub
out
mov
aas
loope
push
inc
movl
mov
pop
outsb
push
insl
scas
adc
int3
stos
jns
jno
jle
xchg
cmp
lret
loop
bound
sbb
dec
mov
mull
aaa
sbb
shr
xchg
insb
adc
repnz
push
mov
mov
pop
cmc
jge
jg
fldenv
clc
xchg
lods
and
cmp
in
cs
lods
insb
mov
mov
jecxz
fbstp
adc
jae
xchg
ds
adc
fildll
mov
dec
adcl
insl
and
adc
fs
int3
test
pop
pushf
mov
mov
mov
sbb
lds
outsb
pop
cwtl
cvtps2pd
mov
es
push
je
por
xchg
push
mov
icebp
inc
or
mov
cmpsb
jns
aam
jae
daa
or
stos
in
mov
mov
xchg
mov
cmpsl
arpl
cmp
push
mov
icebp
cld
sti
adc
fsubs
xchg
out
xacquire
rorb
dec
arpl
mov
xor
xor
incb
xchg
ret
or
hlt
push
xorl
movsb
rclb
sub
fsts
jp
sbb
jo
inc
or
push
jno
imul
lahf
xchg
dec
cmpsb
ja
jmp
imul
add
push
and
inc
push
or
cmpsl
xor
fsubrs
push
insb
or
mov
add
rorl
lods
xor
outsb
fstpt
nop
push
imul
mov
xchg
fldt
arpl
mov
subl
mov
xchg
xor
fidivl
adc
and
xor
pop
jno
mov
xor
and
pop
andb
xor
int
iret
adc
rol
ljmp
jle
mov
inc
das
lret
popa
insl
adcl
jno
push
adc
addb
mov
sub
pop
adc
add
lock
movsb
jne
xchg
lea
fs
mov
test
mov
fld
rorb
mov
fidivl
dec
fldcw
clc
and
sub
xchg
sbb
cli
decb
jae
je
adc
bound
outsb
loope
adc
and
js
inc
push
jns
loopne
in
jl
aad
cld
and
jle
sub
fdivrl
pop
add
mov
push
mov
lock
jnp
fstl
cmpsl
push
mov
loopne
out
rcll
test
fwait
xlat
pusha
fld
push
cmpb
inc
add
imul
leave
in
pop
xor
push
aad
call
out
sub
lea
fsubl
jbe
sub
inc
or
movsb
inc
xchg
push
pushf
ret
ret
push
je
or
cmpsb
cmp
addr16
aam
xchg
add
testb
or
imul
push
loopne
enter
dec
out
out
jle
or
xchg
mov
push
jecxz
push
es
dec
mov
add
pop
and
inc
pusha
push
xchg
sti
and
repz
mov
int
dec
jecxz
lods
push
inc
or
or
movsl
pop
fnstenv
out
xchg
icebp
sbb
stos
into
test
add
pop
pop
je
or
jle
aaa
fldenv
cmove
in
or
imul
jge
stc
pop
pusha
sti
pop
in
xor
es
push
jmp
xorb
mov
int
mov
gs
enter
mov
jmp
sbb
les
push
scas
ret
into
cli
jno
fldcw
xchg
sbb
inc
dec
ja
mov
int
sarl
push
jo
sub
push
inc
pushf
sbb
sahf
xlat
adcb
clc
and
mov
dec
movsb
cmp
data16
sub
inc
adc
mov
jl
push
push
in
aas
inc
pop
add
inc
sbb
xchg
mov
shrl
test
lahf
mov
nop
ret
xlat
pusha
decl
int
xchg
adc
es
xchg
pop
imul
jl
dec
cli
push
repz
daa
daa
adc
mov
push
and
stos
mov
in
mov
je
arpl
dec
mov
in
clc
push
pushf
sarb
fldt
and
jmp
dec
gs
pop
lods
rcrl
xchg
add
xchg
int3
sub
sti
sahf
push
rclb
stc
call
lret
xchg
mov
fsubrl
fwait
sub
pop
and
and
in
pop
addr16
jb
xor
mov
pop
fs
adc
pushf
sahf
jmp
movsl
or
pushf
cli
dec
adc
lahf
outsl
fdivl
stc
sbb
out
adc
test
arpl
js
incl
jns
mov
das
mov
repnz
or
pop
adc
out
mov
movsb
out
andl
shlb
fists
in
ss
xor
outsb
test
shrb
mov
inc
call
mov
push
mov
jp
shl
cmp
add
fimull
mov
loop
push
in
and
test
cmp
mov
cmp
fimuls
outsl
clc
mov
hlt
mov
or
ficompl
cmp
mov
shl
mov
mov
push
jle
mov
stc
popa
dec
mov
or
aaa
sub
shrb
jp
pusha
lds
pop
sbb
in
int3
arpl
jp
out
outsb
dec
arpl
loop
cltd
out
popf
sub
push
ss
jne
out
fnstcw
adc
dec
enter
push
cmpsb
mov
in
inc
pop
push
or
int
jbe
js
das
clc
and
xor
loopne
pop
fdiv
jle
xor
call
int
sar
fdivs
loope
mov
fisubs
push
movsb
addr16
out
jl
jo
nop
mov
mov
call
adc
ret
fistpl
dec
pop
adc
fdivp
ss
fs
out
mov
dec
inc
inc
bound
pusha
lods
popf
sbb
xchg
adc
lahf
gs
xor
inc
push
fwait
repnz
or
jl
mov
xchg
sbb
stos
inc
dec
arpl
arpl
int3
xor
hlt
inc
popa
push
mov
loope
adc
or
and
mov
add
mov
push
fwait
scas
aaa
ret
cmpsb
lret
cmpsb
cwtl
dec
xlat
sbb
andl
cmp
es
mov
xor
lds
pop
or
inc
test
pushw
inc
lret
pop
cmpsb
fs
push
cwtl
push
pop
enter
cmp
dec
mov
pop
aas
or
add
dec
jo
jns
addr16
push
fwait
mov
mov
jp
aam
cli
icebp
fidivs
mov
mov
addl
adc
jecxz
jmp
icebp
insb
cwtl
fmul
and
jbe
mov
das
pop
mov
js
daa
lods
xchg
leave
jecxz
dec
repz
jg
mov
popf
fstpl
or
mov
xchg
sub
pop
jbe
lret
cmp
or
test
dec
mov
or
call
into
imul
push
aam
out
std
fdiv
inc
lret
mov
aam
push
enter
xchg
dec
aam
sbbb
pop
outsb
add
jmp
mov
dec
jne
aad
and
sbbl
in
pop
push
ret
int3
push
xor
fidivrs
test
add
mov
mov
push
das
mov
dec
cmpsl
xor
imul
push
stos
fbstp
js
out
mov
dec
call
sbb
sahf
es
mov
out
std
xchg
mov
out
sub
rolb
pushf
mov
iret
aas
popf
dec
adc
shlb
sbb
sarb
jno
jge
pop
xor
sbb
cmpsb
les
add
dec
cmp
sub
xor
xor
aad
shll
fnstsw
clc
mov
push
cmp
test
xchg
mov
xchg
mov
dec
jmp
lea
xchg
pop
or
xchg
hlt
jle
jne
mov
dec
dec
daa
enter
addb
sti
dec
fwait
inc
mov
lds
shlb
testb
lds
pop
or
dec
dec
add
or
aad
mov
mov
loopne
and
push
in
pop
test
sub
sub
setne
or
sub
outsl
sbb
mov
scas
scas
mov
dec
movsl
adc
add
loop
mov
adc
mov
jle
lods
mov
movsb
cmp
dec
in
call
mov
push
sbb
inc
aaa
jg
xor
mov
xor
addr16
cmp
push
mov
mov
sbb
mov
movsl
rcrb
mov
sbb
or
xor
fisttps
rcl
add
lock
sbbl
fsubrl
or
ja
les
pop
lds
daa
ret
mov
mov
and
popf
mov
inc
data16
adc
jno
jge
dec
nop
mov
jl
adcb
mov
je
push
xor
inc
pop
std
gs
stos
xor
adc
ljmp
sbb
and
inc
stc
cmpsb
add
in
movl
lea
leave
nop
mov
js
jae
cmp
jbe
int
cmp
or
and
daa
dec
repnz
pop
ror
fisubs
push
cs
pop
daa
fnstenv
js
mov
xor
std
dec
or
stos
add
push
in
ret
xor
lcall
xchg
clc
rcr
fadds
test
leave
out
leave
leave
loope
iret
arpl
jge
lods
push
movsb
rcrb
xchg
cwtl
sti
adc
ss
mov
in
je
fwait
sub
mov
mov
add
addr16
or
clc
inc
jns
andb
pop
fldl
mov
inc
adc
or
fistps
rolb
dec
pop
fcmove
jbe
sub
push
jae
dec
mov
xchg
pop
faddl
mov
mov
popa
test
xchg
notl
dec
pop
pop
sbb
mov
das
add
es
adc
outsb
mov
push
bound
cmc
mov
ret
in
imul
stc
pop
outsl
dec
jecxz
rolb
dec
das
out
inc
pop
pop
fs
mov
jae
stos
push
sub
cmp
int3
or
je
xlat
movsl
cmp
enter
mov
hlt
rolb
arpl
sub
cmp
xlat
iret
lods
xor
fdivrl
xor
pop
xor
orl
lcall
xchg
sti
fsubs
mov
aas
mov
or
sahf
clc
fs
pop
or
in
cltd
sbb
dec
lret
or
aad
loopne
scas
dec
cmc
repz
sub
inc
mov
cmp
bound
les
roll
mov
int
sti
js
cmp
cmp
aam
movsl
cmp
adc
test
stos
xchg
fnsave
lret
sbb
jns
mov
pop
and
xchg
jb
dec
cmc
xchg
js
xor
ficompl
dec
pop
xor
movsl
mov
mov
jo
add
push
push
jns
mov
jb
mov
lds
adc
scas
pop
call
mov
push
lret
cwtl
and
lock
add
fcmovbe
add
and
inc
lret
and
push
add
dec
pop
fcmovnbe
cli
jno
int3
sub
cmp
or
jecxz
shrl
ljmp
dec
daa
into
jl
or
sbb
cmpsl
add
pop
pop
scas
cmpsb
in
subb
daa
dec
lahf
nop
mov
js
xor
lods
inc
iret
lea
insb
add
push
fnstsw
sahf
jbe
das
push
loopne
fadd
bound
pop
fdivrl
pop
flds
sti
cltd
add
sahf
and
js
pop
mov
fcmovu
lea
pop
cwtl
sub
inc
fs
jle
andl
sbb
insb
jne
data16
push
sbb
sub
push
cmp
jae
icebp
aas
fcmovne
jge
xor
int3
sub
cmp
mov
fidivs
imul
shrl
sbb
jp
push
lods
shll
or
xchg
fistpl
push
inc
ss
sbb
pop
mov
cmpsb
adcl
add
aaa
lods
jne
sub
jl
ljmp
jno
mov
popf
jo
sarb
xchg
mov
lods
push
popf
xchg
cmp
push
pop
sub
mov
pop
pop
cmpsb
xchg
jg
xorb
jbe
and
pop
sahf
and
popf
sbb
and
lods
popa
rcrl
add
add
push
test
push
mov
leave
outsb
jg
xchg
jo
pop
and
leave
fildl
xchg
lahf
clc
jnp
icebp
adc
out
mov
add
ja
mov
push
jae
test
jne
loope
call
or
xchg
jnp
adc
fcompl
xchg
lret
xor
cmpsl
mov
scas
mov
jle
out
nop
hlt
push
ret
push
mov
subb
loopne
enter
in
fld1
cwtl
dec
mov
out
push
sbb
xlat
jnp
insb
mov
xchg
daa
gs
fiadds
fnstenv
or
cmp
push
icebp
pop
scas
and
xor
arpl
pop
popf
scas
adcb
add
adc
mov
js
out
pop
add
xchg
xor
sub
sbbl
lods
dec
dec
scas
ja
aad
dec
fldt
mov
stos
into
sbbl
or
loop
push
and
push
in
xchg
shl
mov
xor
addr16
add
or
aam
dec
jg
jo
or
sub
mov
fdivrs
xor
popl
or
sbb
mov
mov
push
jle
shll
movsb
test
inc
gs
mov
xchg
daa
and
mov
mov
sbbl
aad
push
imul
mov
cmp
ljmp
cmpb
rclb
cmp
stos
nop
and
loopne
mov
loope
xor
jb
adc
insl
or
leave
adc
mov
aam
adc
repz
jbe
mov
repz
adc
in
mov
stos
inc
outsb
and
enter
mov
add
shlb
xchg
lock
cmp
test
sbb
pop
or
mov
addr16
addr16
mov
xchg
lret
inc
fdivr
push
or
int
cli
std
in
push
fwait
rolb
outsb
fs
mov
stos
sub
push
mov
sub
mov
cmp
xchg
jp
fnsave
jecxz
pop
push
ja
mov
or
push
idivb
shlb
roll
jg
lock
xor
push
pop
push
daa
or
mov
xchg
inc
aad
jns
cs
mov
jb
add
insl
lds
cmpsl
mov
pushf
sub
int
out
pop
popf
inc
lahf
mov
adc
iret
repz
fsubs
lods
inc
sub
fsubs
dec
enter
jno
mov
xor
repnz
mov
out
or
xchg
sub
jle
mov
or
fidivs
xchg
sub
mov
fistpll
repz
push
fdiv
adc
mov
push
sar
pop
mov
fiadds
rcr
xor
mov
xchg
bound
pusha
push
sub
mov
pop
mov
adc
out
inc
and
jbe
outsl
cwtl
push
cltd
push
push
cwtl
lea
and
mov
jnp
loopne
div
push
cwtl
mov
mov
pop
or
ret
mov
stos
ds
pushf
in
add
stos
fists
aaa
bound
test
xor
aaa
inc
imul
inc
inc
inc
fstps
mov
lahf
hlt
mov
inc
js
mov
mov
xlat
inc
out
aas
xor
ret
stc
inc
pop
loopne
add
add
int
mov
cmp
mov
mov
adc
rolb
int3
xchg
insb
jae
mov
iret
mov
jge
add
in
or
shlb
cli
shr
cltd
stos
test
dec
cmp
outsb
sub
js
ds
mov
inc
mov
cmp
aad
mov
sub
aam
adc
mov
adc
lcall
in
test
scas
and
jecxz
jmp
dec
in
cmpsb
fwait
inc
mov
push
in
sub
sahf
jae
test
outsl
sbbb
lret
imul
nop
sbb
push
scas
push
cmpsl
push
js
mov
int
dec
js
mov
fnstenv
mov
dec
daa
jmp
in
dec
add
mov
xchg
lcall
xor
adc
fimuls
and
insb
dec
mov
idiv
lcall
sarb
push
or
cmp
fsubrl
pop
shrb
aas
ficompl
pop
adcb
and
popa
sub
jbe
sbb
sbb
push
lods
testb
pop
nop
imul
jno
sub
inc
jns
mov
xlat
lock
push
test
fpatan
inc
shlb
add
push
jne
cli
inc
ficoml
cltd
xchg
cmp
sbb
xchg
mov
cmp
xlat
in
orl
xor
adc
cmp
jne
sub
test
scas
sti
jbe
fldt
xchg
pop
push
cmp
shlb
cmp
adc
xor
inc
pop
cmc
jne
xchg
fists
xchg
cmpsl
sub
or
mov
ja
repz
xchg
in
je
mov
fwait
pop
inc
ficoms
aas
gs
jo
stos
push
repz
ss
pop
push
int
outsl
int
xchg
mov
imul
insl
xchg
ret
repnz
loop
mov
xchg
mov
popf
enter
jne
mov
cmp
dec
add
pop
push
sub
sub
int3
iret
cs
mov
inc
nop
lret
xchg
movsl
mov
adc
xchg
sbb
fnstenv
out
dec
ret
nop
jle
or
scas
pop
fwait
pop
and
fisubrl
mov
adc
push
push
pop
xor
imul
mov
xchg
jmp
jae
cli
add
jecxz
pop
std
or
pop
xlat
clc
jae
mov
popf
jne
shl
je
notl
inc
jno
inc
fwait
adc
or
xchg
pop
add
sub
out
pop
lds
cli
xor
mov
mov
ret
xor
add
xchg
add
push
fstpl
rorl
cmp
adc
repz
xchg
push
mov
or
orb
inc
sub
adc
jae
fistl
test
lods
and
or
inc
pop
cmpsl
sbb
add
cmc
daa
xchg
scas
inc
xor
jbe
push
int
fs
add
xorl
push
test
mov
push
fcompl
mov
mov
mov
cmp
movsl
jno
xchg
dec
fcompl
jmp
cmp
jns
das
stos
call
mov
xor
sbb
jg
ss
out
push
lock
mov
test
mov
sbb
ljmp
mov
inc
in
test
cmp
in
xor
stos
das
inc
out
dec
push
pusha
loope
stc
mulb
jno
pop
repz
or
cld
or
sub
fstp
lea
sti
and
lock
mov
mov
js
subl
daa
cmc
jb
jo
sub
minps
jmp
push
icebp
je
mov
xchg
mull
jecxz
sbb
lcall
mov
mov
jbe
mov
dec
or
in
push
sub
push
sbbb
dec
lret
mov
cld
in
cmpsl
xchg
or
rorb
les
pop
test
push
daa
lcall
adc
adc
mov
mov
loope
xchg
js
or
xor
add
jnp,pn
mov
arpl
pushf
inc
or
mov
or
int3
xor
sbb
mov
mov
lcall
push
movsb
inc
inc
ret
pusha
push
shll
mov
and
cmp
and
adc
pop
icebp
cmpsl
sbb
notl
int3
in
lea
or
std
movsb
ja
jge
add
cmp
jnp
divl
or
stos
rcll
mov
stc
cmp
mov
add
out
orl
repz
xchg
dec
in
jle
int
loop
sub
or
push
fisubrs
scas
in
and
push
rol
push
cmpsl
pop
mov
sbb
xor
mov
dec
cmp
lcall
gs
mov
das
jmp
dec
mov
sarl
jp
dec
scas
nop
push
lcall
and
sub
fwait
outsl
xor
push
mov
xchg
sbb
and
in
sbb
in
add
enter
xchg
aad
int
sub
mov
cwtl
adc
cltd
push
outsl
inc
xchg
sarl
lock
bnd
xor
sbb
cmc
mov
aaa
popa
mov
push
mov
pop
out
add
dec
and
add
cmp
ss
jae
out
ds
repnz
push
jl
inc
fsin
jno
out
lcall
jns
aam
and
daa
lcallw
imul
or
adc
clc
stos
cs
das
sub
clc
xchg
dec
ret
jns
add
out
mov
call
push
fnstenv
sbb
icebp
lock
das
add
push
xchg
int
xor
fs
jmp
lods
in
pop
adc
icebp
mov
sub
stos
sbb
sub
roll
push
call
adc
pop
jmp
ljmp
andl
pop
rcrb
movsb
imul
sbb
in
lock
loop,pt
gs
jno
insb
outsl
lcall
lret
leave
inc
dec
sub
in
nop
sti
jns
cmp
inc
int3
fistpll
inc
fistl
xor
bound
add
jmp
jbe
push
test
adc
xlat
jmp
ret
ljmp
arpl
pop
xor
in
inc
xlat
clc
jne
sbb
sbb
sbb
jbe
ret
pop
inc
inc
std
or
xlat
dec
scas
or
stc
lods
popf
xlat
mov
je
iret
or
sub
fcomps
fstl
in
adc
cli
js
clc
cmp
imul
xchg
jp
popf
sbb
or
pop
adc
movsl
xchg
mov
incb
addl
shr
js
dec
push
inc
in
jmp
repnz
call
mov
loopne
sbb
stos
ret
xlat
and
xor
cmp
push
fcompl
xor
inc
ss
pop
icebp
add
in
fsubs
sub
bts
dec
dec
out
addl
add
lock
test
leave
lea
xchg
xchg
pop
sahf
xor
sub
sbb
push
sahf
nop
das
jnp
mov
sbb
jle
mov
dec
xor
std
cltd
dec
idivl
stos
movsb
cmp
outsl
pop
cmp
loope
jmp
push
mov
and
in
sbb
add
loopne
les
cli
xchg
aaa
bound
push
je
sbb
int
cmp
pop
adc
fsts
sar
jns
je
hlt
push
stos
add
jmp
lea
mov
imul
cmp
dec
pop
xchg
cmp
cltd
push
jmp
mul
push
inc
aaa
mov
leave
mov
mov
pushf
cmc
or
js,pn
dec
insl
mov
sbb
loop
repz
add
rcll
push
add
push
and
adc
xor
mov
mov
sti
dec
decb
mov
push
dec
add
mov
mov
sub
out
sub
inc
pop
dec
dec
leave
jmp
scas
inc
out
jge
fldt
jge
dec
fdivrl
xchg
sub
jb
jp
test
adc
notb
lret
pop
pushf
fiaddl
mov
cmp
pop
jno
mov
or
and
jne
push
pop
pop
inc
cmp
mov
inc
test
mov
push
or
mov
out
xchg
clc
xchg
and
xor
mov
jle
in
cmp
adc
dec
pusha
shl
xchg
loop
bound
mov
dec
pop
iret
mov
mov
jb
in
nop
dec
jae
je
adcb
dec
xchg
sbbl
mov
nop
std
and
pop
dec
gs
js
sbb
sahf
call
cmp
jle
cmp
mov
sub
fs
bound
adc
sub
std
gs
add
scas
sbbl
mov
mov
add
shll
rorl
orb
cmp
fidivl
fcom
cwtl
mov
sti
push
cmp
xchg
loopne
sub
push
outsb
mov
sub
repz
test
pop
in
pop
sahf
push
nop
es
sub
nop
xor
or
call
mov
dec
in
jle
mov
arpl
mov
dec
shrb
sbb
lods
push
test
scas
mov
mov
jne
push
xor
loop
or
push
sub
enter
pop
aad
stos
xchg
mov
enter
imulb
or
inc
adc
out
adc
lret
mov
and
cltd
repz
adc
ss
jbe
int
sarb
mov
ret
loopne
loope
enter
lret
popa
push
addr16
jns
inc
and
cmp
inc
movsb
sbb
scas
imul
idivb
dec
ret
daa
mov
sub
inc
mov
pop
dec
pushf
outsb
xchg
mov
sbbl
lea
out
adc
and
or
rcl
mov
mov
das
or
out
popa
xchg
lock
pop
sarl
xchg
pusha
xor
ret
push
out
pop
jg
or
negl
sub
pop
sahf
and
xchg
in
icebp
adc
pop
xor
sbb
pop
adc
mov
addb
jnp
subb
int
and
inc
imul
iret
cmp
fistl
push
mov
mov
ljmp
lds
mov
clc
cmp
mov
mov
push
dec
mov
popa
ret
daa
shr
jb
mov
dec
mov
mov
sbb
ret
inc
mov
icebp
jnp
lds
dec
aad
ret
dec
xchg
or
sub
cmc
roll
outsb
fwait
mov
icebp
and
lock
mov
mov
mov
lahf
shl
gs
repnz
ds
les
mov
sti
push
adc
sub
pop
leave
sbb
stc
jp
movsb
push
or
push
sub
mov
xchg
cmp
jb
cwtl
push
outsl
repz
testb
dec
mov
gs
lcall
dec
jecxz
jae
fistpl
xor
pop
mov
dec
sahf
push
in
lock
arpl
leave
out
inc
leave
xor
stc
insb
jbe
jns
pop
mov
cwtl
pop
imul
xor
test
and
movsl
sbb
xchg
cld
adc
xchg
mov
xchg
mov
insl
xlat
loopne
inc
addr16
les
lea
xor
adc
dec
shlb
mov
cmp
and
push
inc
shr
imul
mov
rol
movsl
ret
movsb
daa
data16
loopne
imul
add
jo
and
cltd
data16
mov
shrb
pop
outsb
pop
movsb
pushf
push
bound
jmp
mov
movsb
or
jge
int3
nop
xchg
fildl
mov
xchg
sbb
sbb
insl
packuswb
adc
sarb
mov
je
cld
loopne
fmul
popf
push
stos
xchg
mov
or
enter
test
push
arpl
mov
jecxz
mov
les
call
loop
outsb
pop
pop
push
and
mov
push
cmp
jl
jbe
sarb
pop
mov
shll
mov
cmp
or
xor
cld
mov
cmpsl
jecxz
mov
pusha
xor
cmp
jle
sbb
sbb
jno
ja
aam
add
movsl
fs
movsb
adc
es
push
sub
xor
ja
mov
lahf
jmp
or
outsb
rcrl
lods
xchg
push
out
push
xor
pushf
pop
jb
pop
add
sbb
ficompl
out
adc
fwait
mov
add
fidivs
andl
jne
or
adc
hlt
out
js
call
mov
mov
adc
sub
lret
push
scas
loop
cmpsb
pop
movsl
out
and
push
cmpsl
inc
cmc
pop
ljmp
xchg
notb
fmul
loopne
bound
shlb
pop
pop
or
js
imul
stc
sbb
add
or
in
inc
scas
add
pop
in
je
push
jnp
xchg
pop
imul
icebp
enter
lods
inc
stos
inc
fcmovu
bound
mov
mov
xor
sub
sbb
dec
adc
sub
in
and
addr16
std
mov
ret
test
sarl
pop
xchg
insl
xchg
repz
pop
repz
push
mov
fwait
and
lds
pop
mov
sbb
dec
cmp
js
ljmp
mov
sahf
cmc
daa
jl
pushf
or
mov
inc
fs
xchg
test
test
pop
das
lret
dec
pop
std
push
movsl
icebp
adc
test
call
out
push
or
fidivrl
mov
ss
int3
rcll
shrl
adc
pop
fs
out
in
xchg
jmp
xorl
je
mov
nop
push
sub
enterw
test
mov
mov
pop
add
push
xor
decl
sahf
bound
loopne
xchg
dec
push
inc
push
addr16
or
cmp
jmp
shr
pusha
leave
pop
pop
ljmp
inc
inc
mov
push
xchg
push
lods
dec
aaa
movsl
or
adcl
cmpl
and
push
enter
ja
mov
test
xchg
mov
lea
ret
adc
bound
jno
imul
sarb
icebp
stos
in
movsl
lcall
cmp
shl
pop
repz
flds
mov
mov
inc
pop
mov
jb
shll
adc
xchg
add
pusha
cmpb
and
inc
jnp
xor
das
or
sub
test
adc
push
out
adc
push
popa
add
mov
jmp
aad
into
in
sbb
mov
xor
dec
fldl
sub
jnp
xchg
ljmp
cmp
xchg
adc
mov
pop
jae
push
sub
dec
shrb
bound
jecxz
xor
push
popf
xor
pand
aad
out
xor
sub
and
dec
mov
jp
lock
out
mov
notl
mov
push
aas
xchg
rolb
jo
pop
insb
es
cmpsl
clc
push
pushf
xchg
pop
int3
fisubrl
mov
in
loopne
pop
sub
aaa
mul
aad
adc
hlt
outsb
inc
test
mov
das
cmp
mov
movsl
dec
xchg
adc
sbbb
mov
sbb
or
or
sti
sub
dec
popa
in
iret
sbb
stos
shrb
fs
fs
xor
or
sub
daa
pusha
shlb
push
pop
dec
clc
jne
enter
sarl
pop
push
out
pop
cs
sub
or
fsubrl
scas
mov
mov
add
fsub
adc
sbb
das
fsub
cmp
ja
es
je
testb
movsl
ja
pusha
fsubl
sub
fwait
ja
and
nop
xor
and
and
mov
movsw
pop
mov
cld
jle
shll
fwait
loopne
xchg
mov
movl
xorb
rorb
mov
frstor
fadds
jle
jno
mov
inc
aaa
mov
shr
mov
mov
xchg
ds
mov
xchg
pop
sbb
jmp
lahf
xchg
jmp
sbb
jno
mov
rclb
add
subl
fisttpl
sub
outsl
outsl
bound
jno
sbb
pop
xchg
scas
add
in
add
in
movsl
xchg
xor
fisubl
xchg
xchg
sub
jl
adc
push
std
lock
arpl
fcmovnbe
js
outsl
fidivl
mov
dec
cwtl
bound
pop
out
arpl
jmp
xor
pop
arpl
pop
sbb
sbb
icebp
push
mov
jno
pop
cmc
mov
mov
push
daa
mov
push
lock
rcrl
daa
subb
in
sahf
mov
and
push
icebp
or
orb
mov
inc
fcompp
add
xor
arpl
cwtl
cltd
decb
insb
es
dec
jge
lods
push
dec
int3
dec
fisubl
jno
add
xor
xchg
adc
sub
or
loop
stos
and
test
or
loop
push
lea
xor
loopne
cmp
pop
leave
bound
into
mov
icebp
lods
and
or
dec
sti
lcall
mov
inc
mov
pop
or
dec
in
add
and
inc
imul
hlt
xchg
pop
sahf
dec
loope
into
and
jb
pushf
jg
cmp
repnz
cmp
insb
push
stc
push
push
imul
push
fdivl
mov
rcrb
mov
clc
in
mov
movsl
mov
xchg
or
rcl
outsl
sub
pop
mov
fisubs
scas
cmc
jne
shlb
cmp
add
stc
dec
or
ret
xchg
scas
cltd
mov
iret
lret
add
mov
push
movb
repz
dec
and
adcb
into
movsb
stc
stc
lahf
sahf
or
or
or
int3
arpl
test
subb
push
cmpsl
notb
or
push
daa
stos
xchg
cwtl
es
std
adc
jno
call
cltd
jb
enter
jmp
push
jnp
add
out
aas
std
mov
push
push
cwtl
into
loope
rcrl
repnz
jbe
out
cmp
loopne
mov
test
pop
push
sub
popf
in
mov
das
out
mov
inc
mov
fsubr
subb
mov
sub
mov
out
outsl
sub
add
lock
push
pop
adc
xchg
out
repnz
dec
jbe
cs
repnz
nop
pop
push
adc
faddl
outsb
sti
and
cwtl
mov
inc
cli
adc
xor
lods
test
jmp
loop
adc
jmp
and
push
push
scas
add
ffree
push
data16
mov
xor
adc
xchg
sub
iret
cld
call
xchg
and
and
xchg
movsl
add
push
pushf
mov
push
mov
inc
lret
and
sbb
mov
jo
loopne
sub
sub
jmp
xor
xor
fisubs
pop
sbb
jns
jae
outsl
lock
nop
pop
or
test
inc
push
xchg
out
mov
mov
adc
sbb
int3
cld
outsb
sbb
push
je
into
xlat
pushf
outsl
mov
push
movsl
in
shlb
nop
popl
aad
push
mov
push
imul
nop
dec
inc
push
inc
js
jno
nop
adc
push
cmp
leave
jb
in
shl
sahf
orb
or
mov
fcmovbe
iret
sbb
shlb
pop
xchg
jbe
das
add
xor
xchg
xor
add
xor
sbb
push
stc
add
test
jb
xor
popw
lret
out
cmc
and
xchg
cmpsb
or
loop
cli
xchg
add
lcall
insb
aam
sub
cs
dec
sahf
out
lret
bound
jns
bnd
cmpsb
arpl
add
adc
sahf
jp
in
fbld
cmc
cwtl
cltd
data16
lds
jns
xchg
mov
dec
xchg
sbb
stos
add
cld
cmp
repz
data16
lret
ret
ja
jge
or
das
jns
or
xor
jl
mov
lret
mov
pushf
inc
call
jo
int3
jl
pop
in
push
pop
fsubr
push
push
mov
adc
xor
inc
push
inc
cmpsb
clc
lret
arpl
loopne
rorb
adc
stc
cmpsb
push
jmp
inc
dec
jo
jnp
sub
arpl
into
roll
shrb
arpl
mov
dec
mov
mov
sub
pop
cmp
or
xor
mov
divl
pop
scas
sbb
add
cs
data16
add
pop
add
fbstp
lcall
cmpsb
jo
mov
pop
lcall
das
push
ret
dec
ficomps
xlat
push
js
cmp
sarl
pushf
sbb
inc
lods
mov
push
fdivl
mov
in
out
cmp
mov
inc
daa
addb
xchg
in
imul
mov
jg
leave
pop
in
aam
push
insb
stos
dec
push
mov
fistps
jno
cmpb
add
pusha
imul
xchg
mov
sbb
mov
gs
xchg
in
dec
ret
or
mov
mov
pop
test
dec
jg
adc
cld
ja
jbe
and
mov
mov
lret
jg
lock
int3
out
adc
repz
call
mov
add
push
shr
js
dec
loop
cltd
push
jnp
pop
imul
test
ficompl
mov
pop
or
fwait
daa
ljmp
sbb
dec
rcrl
dec
pop
loope
xchg
in
jle
mov
aad
adc
pusha
test
cmpsl
inc
push
in
jge
lds
outsl
add
fdivs
in
and
or
sbb
movsb
std
jo
loope
into
mov
push
or
movsl
icebp
fildll
test
shll
call
pop
imul
mov
jns
mov
in
and
add
stc
or
lahf
ret
sarl
inc
dec
je
mov
push
test
mov
cs
cmpsl
add
lret
or
push
shl
scas
jmp
cmp
ja
mov
pop
call
test
push
ficompl
iret
xchg
inc
and
mov
or
jbe
lds
pxor
fdivrl
aam
int3
mov
mov
int3
mov
pop
xchg
insl
loopne
cltd
in
xchg
pop
jae
andb
ljmp
or
sti
stos
loope
aam
and
loope
adc
popf
adc
cmp
adc
and
fwait
xor
pop
jl
out
mov
enter
icebp
pop
ss
movsl
pop
lcall
icebp
pusha
mov
push
mov
xlat
pop
clc
and
push
pop
sbb
mov
jle
dec
mov
mov
sahf
fstl
ss
mov
clc
mov
mov
xor
xor
aam
push
push
push
push
ret
in
cmc
lret
iret
ret
mov
loop
ret
hlt
jnp
in
ret
mov
mov
fcmovu
pop
push
stc
sbb
aas
dec
dec
mov
in
pusha
mov
js
xorl
or
and
dec
aam
mov
inc
loope
insl
fxam
dec
ds
add
inc
repz
frstor
enter
pop
mov
out
mov
sbb
adc
inc
clc
and
mov
ja
aam
push
dec
sbb
jl
lahf
lods
loop
and
mov
sarb
xchg
movsb
imul
pop
mov
sub
cmp
int3
rcll
outsl
jge
in
inc
sub
xchg
pop
pop
jae
jb
sbb
and
sub
cld
fstpt
sbb
popf
gs
and
inc
add
jno
leave
lock
leave
mov
subl
test
mov
out
lds
xchg
add
and
outsb
inc
dec
add
mov
xchg
arpl
outsb
into
mov
or
int
ja
add
pop
jbe
and
adc
scas
sub
mov
mov
in
call
mov
ljmp
fistpll
adcl
fidivl
test
shll
orb
orl
outsb
xchg
dec
insl
xor
ret
shll
mov
stos
xchg
inc
dec
test
cmp
stc
hlt
sub
xlat
cmp
pop
int
jae
out
and
or
cltd
mov
sarb
lret
mov
ret
cwtl
xor
fisttps
pop
loop
or
sub
cmp
mov
das
sahf
cmp
cmp
push
cmc
scas
cmp
mov
enter
xchg
test
xor
lret
in
insl
sub
pop
pop
push
daa
mov
xor
loopne
mov
xchg
imul
popf
lock
or
mov
adc
xlat
mov
lret
xchg
in
subl
out
and
jbe
pop
xor
pop
stc
jle
sbb
outsb
push
mov
cmp
rcl
pop
pop
inc
and
ja
push
call
in
outsl
mov
cmpl
fwait
add
pop
das
or
push
mov
sub
jb
inc
mov
push
mov
sbb
mov
mov
shlb
xorb
movsl
cmp
ljmp
aam
push
sub
addr16
pop
bound
mov
int
sub
orb
or
xor
cmp
shrl
pop
je
xchg
sbb
jae
mov
xchg
add
cmp
cltd
adc
and
and
and
gs
popa
roll
add
jmp
xor
jae
rcll
cmp
imul
shlb
and
loope
sbb
lods
mov
sub
dec
clc
xchg
dec
dec
mov
xchg
pop
xor
into
mov
mov
adc
inc
sbb
and
jae
mov
jg
xchg
ljmp
push
xchg
fidivs
mov
ret
aad
mov
aam
sub
jp
mov
jmp
dec
push
popf
jle
cmp
pop
popf
and
test
cmpsb
pop
adc
lods
push
ljmp
push
mov
mov
mov
adc
out
inc
dec
loop
xor
js
pusha
imul
ss
sub
pop
fdivl
pop
cmpsb
outsb
iret
and
mov
daa
es
pop
outsb
in
inc
inc
dec
or
sub
sbb
fisubrs
test
xor
loopne
in
aam
push
ljmp
or
inc
fwait
inc
std
and
popf
xorb
mov
les
mov
into
mov
sbb
repz
dec
mov
les
ror
cmp
push
test
dec
insb
jp
push
xor
cli
sub
xor
cmpl
sub
dec
adc
jae
leave
mov
hlt
cmp
mov
sar
pop
add
call
or
push
ss
test
icebp
stos
dec
cltd
in
add
pop
pop
repnz
repz
loop
xor
call
mov
cmpl
sub
pop
pop
lods
jo
das
loop
aam
fistl
mov
sbb
push
adc
cmpsb
enter
in
xor
or
jnp
lods
lods
inc
fists
inc
pop
or
ret
xor
pusha
xlat
outsl
repnz
jp
test
mov
loop
sarb
mov
lcall
lahf
testl
xor
add
rcrl
xor
lcall
ficoms
test
adc
dec
addr16
cs
jno
popa
jnp
push
mov
xchg
testb
push
push
je
adc
ja
inc
inc
lret
insb
jbe
pop
jge
xchg
jle
sahf
cmpsl
sbb
js
jne
add
lods
pop
sahf
cwtl
push
add
add
aad
movsl
pop
int
in
mov
push
push
addb
jecxz
repnz
add
pop
add
jns
and
std
pop
mov
andb
rclb
sahf
sub
in
mov
xor
push
stos
repz
push
mov
xor
cli
shlb
push
js
arpl
xchg
xor
dec
stc
out
sub
push
insl
prefetch
or
js
xchg
mov
enter
push
sub
jg
pop
sbb
in
add
or
sahf
mov
mov
mov
pop
ret
ss
sub
ss
mov
movsl
mov
adc
or
mov
mov
stc
push
ljmp
out
test
cmp
or
mov
stc
data16
sbb
xchg
lahf
mov
sub
icebp
push
daa
pusha
notl
iret
movsb
mov
jle
ss
loopne
adc
pop
xor
data16
xor
xchg
sub
jns
mov
pushf
sbbl
add
fs
push
fstps
mov
sbb
pop
and
fidivrl
pop
pop
testb
push
nop
in
out
inc
cmp
or
in
int
mov
mov
dec
leave
sbb
sub
in
aad
jo
push
pop
push
cmp
int
or
sar
or
repz
mov
fninit
sub
adc
cmp
jp
sbb
push
mov
fxch
enter
pop
pusha
clc
mov
clc
or
jne
jp
out
outsb
sarl
cmp
inc
pop
dec
fists
fbld
sub
cltd
aam
and
test
cmp
or
pop
jnp
mov
cltd
push
shll
cmpsb
icebp
cmp
cmp
mov
in
push
in
mov
mov
jl
add
sbb
testb
aad
mov
cmc
xor
test
adc
fisubrs
pop
test
or
sub
inc
das
bound
shll
cltd
cs
cmp
add
mov
cmp
xchg
and
jg
sbb
imul
or
dec
dec
xor
mov
inc
and
ds
inc
xchg
cmc
inc
push
movsl
xor
adc
outsl
mov
pop
adc
push
jmp
in
mov
outsl
sbb
sarl
enter
xorb
pop
dec
xchg
es
dec
or
inc
push
push
push
scas
xchg
je
ficomps
dec
mov
lods
pop
pushf
mov
ret
sahf
lods
inc
shll
or
sti
pop
sbbl
cwtl
xchg
mov
cmpl
push
mov
dec
loopne
fmuls
lret
std
adc
pop
in
push
leave
jmp
es
popf
daa
popf
xor
inc
or
repnz
icebp
pcmpeqw
fdiv
adc
fdivl
xor
in
clc
aas
iret
arpl
mov
pop
lock
xchg
xor
xor
cmpl
pop
repnz
inc
es
sub
add
inc
inc
push
jb
je
aad
loopne
or
inc
mov
xorb
cmp
sub
pop
rol
pop
out
icebp
cmc
jbe
add
jmp
fdiv
aaa
lods
adc
pusha
jp
adc
outsl
xor
dec
stos
js
push
stos
in
mov
sbb
das
dec
pop
sbb
mov
testl
push
mov
cli
movl
jno
ss
lahf
fs
daa
mov
xor
mov
or
cmp
popf
insl
xchg
rcr
cmp
mov
sub
addr16
sub
pop
adc
fsubs
or
cwtl
xor
fistpll
insl
xchg
mov
jmp
xlat
test
ret
test
jecxz
pushfw
sbb
leave
fs
push
repnz
ja
addr16
clc
jae
or
int
push
and
ja
xor
shrb
jo
sub
addb
mov
inc
in
outsl
sbb
test
mov
dec
mov
sbb
fdivrs
mov
test
inc
leave
into
mov
mov
xor
sub
xchg
cmp
cmp
and
inc
xchg
and
xor
lret
movl
int
jo
xor
cmc
pop
pop
jno
add
or
shrl
push
aas
jp
or
sub
mov
mov
arpl
push
popf
cmp
and
mov
xor
or
and
leave
ss
in
cmpb
sbbl
xchg
cmp
icebp
inc
aaa
je
std
xor
pushf
push
lods
adc
ja
je
movsl
cmp
fs
xor
add
cmpsl
xchg
pop
xchg
stos
pop
mov
ljmp
jp
into
movsl
cmp
jmp
jmp
es
ret
addr16
inc
inc
out
sub
int3
add
pop
outsl
lods
pop
in
lcall
lods
leave
mov
pop
pop
out
xchg
push
mov
mov
subl
mov
repz
test
or
cltd
into
andps
sub
ja
xor
outsl
adc
jns
dec
mov
sub
inc
fcoml
sbb
fildll
pop
dec
das
mov
push
clc
stos
or
addb
adc
xlat
sar
mov
addl
inc
or
mov
lcall
clc
lcall
dec
jbe
notl
pop
dec
or
push
daa
lock
jno
pop
add
cmp
cmpl
pop
out
test
pop
mov
fistpll
pop
adc
dec
fstps
imul
repnz
addb
jecxz
sbb
mov
xchg
pushf
push
inc
in
push
stos
repnz
je
jae
repnz
fbld
clc
adc
cmp
jg
jecxz
xchg
push
aad
jnp
mov
xlat
les
out
sub
mov
or
negl
push
sbb
inc
mov
ljmp
stos
stos
mov
das
and
addr16
idivb
mov
jae
pop
and
arpl
mov
cwtl
shl
jne
mov
cmp
pop
loope
dec
sbb
outsl
out
jnp
and
pop
jp
or
dec
adc
mov
dec
or
js
cwtl
stos
xchg
cltd
and
inc
loopne
xchg
mov
repz
mov
dec
lret
testb
lret
mov
lods
add
call
adcb
pop
sub
xchg
sub
out
xor
sahf
mov
dec
call
test
bound
imul
pop
xchg
cmpsl
loopne
and
iret
fwait
lcall
aad
in
stos
out
hlt
adc
jmp
and
fildl
repz
mov
sub
jne
lret
sarb
loope
push
xchg
adcb
jb
pusha
xchg
ss
add
jmp
inc
and
push
xchg
sub
lea
adc
insl
and
cmp
add
xor
imul
test
lret
popf
iret
xor
aam
bound
xor
xor
stos
mov
ret
or
fsubrs
add
test
loop
pop
xchg
xor
sub
flds
outsb
push
jo
cwtl
lods
xchg
ljmp
vmovdqu
daa
sub
negl
lock
sbb
notl
sbb
lcall
arpl
out
jg
into
mov
xchg
jge
push
mov
stc
out
scas
jno
jae
xlat
cmp
addb
mov
mov
mov
mov
pop
ret
bound
push
inc
lds
or
js
push
sub
inc
cmp
jno
lret
add
push
test
pop
lea
js
xchg
rcrb
ja
or
xchg
mov
push
test
xchg
sub
jg
fisttpll
jmp
fsubl
pop
jecxz
or
repnz
test
or
pop
mov
je
lret
mov
adc
xor
clc
add
mov
rcll
sti
inc
clc
jae
lock
add
sbb
mov
ret
sub
sbb
mov
push
movsb
xor
dec
pop
push
lcall
lahf
push
jo
dec
call
in
sub
pop
push
mov
mov
divl
rorl
sbbl
and
ja
fidivrl
mov
test
add
cli
xchg
lods
and
icebp
scas
or
jl
ss
popf
sub
mov
mov
mov
decb
loopne
add
adc
sbb
ret
imul
cmp
dec
dec
cmc
call
pop
popa
jnp
repz
adc
inc
inc
adc
addb
xlat
icebp
jl
mov
popa
sub
pop
das
das
out
cli
jns
or
mov
stos
mov
int
jo
stos
or
lret
pop
mov
or
fbld
sub
xchg
js
fnstsw
push
sbb
push
mov
insb
mov
or
rolb
hlt
test
xchg
xchg
cmpsb
add
fldenv
sub
cmp
mov
sahf
add
outsl
xlat
fldcw
pop
js
jns
hlt
pop
add
hlt
int
mov
push
pop
mov
pop
adc
out
or
or
add
insl
or
fistpll
iret
adc
data16
mov
imull
lret
jle
push
xchg
mov
xchg
pop
push
push
jmp
cmp
push
test
test
insb
inc
lcall
xchg
fld
dec
xor
cmp
iret
mov
out
fimull
inc
inc
inc
rclb
pop
idiv
hlt
test
adc
sub
in
and
data16
dec
pop
add
cmp
insl
sbb
sbb
imul
push
push
scas
push
outsl
lods
pushf
xchg
repnz
subb
mov
jecxz
mov
lea
mov
pop
push
jae
adc
fwait
outsb
pushf
ljmp
out
and
dec
mov
jo
inc
fadds
dec
mov
inc
call
daa
xchg
out
cld
pushf
mov
lret
xchg
fbld
int
cmpsb
imul
addl
int
mov
jo
scas
fisubrl
sti
adc
fisubrl
or
inc
pop
jbe
outsl
out
mov
xchg
test
jno
inc
mov
mov
mov
or
movl
or
inc
mov
push
inc
or
int
flds
movsl
cmp
lahf
ljmp
outsb
shll
cmpsl
testl
out
std
std
std
lods
cs
ja
adc
jo
mov
sbb
mov
stos
xchg
sub
imul
shrb
ret
fbld
stos
out
mov
loope
inc
pop
mov
adc
mov
insb
pushf
imul
push
xor
and
data16
aas
xchg
out
repz
nop
push
ds
add
push
loope
xchg
or
jl,pt
mov
fiaddl
push
mov
lahf
repz
or
dec
mov
cmp
fwait
mov
loop
cs
insl
pop
loop
cmp
in
icebp
xor
inc
adc
pop
and
jno
xlat
cmc
lock
mov
jns
loopne
enter
leave
cmc
mov
xchg
outsl
inc
arpl
shll
outsb
lock
xchg
mov
sbb
cltd
push
mov
mov
inc
sub
mov
cmp
push
jno
aaa
iret
or
aam
push
jbe
xor
repz
or
sub
adc
insl
sbb
push
mov
dec
imul
pop
rorb
adc
dec
stos
mov
data16
fwait
leave
fiaddl
mov
jnp
mov
iret
lods
pop
cmpsb
idiv
push
cmpsb
fcmovb
lcall
clc
int3
dec
push
cmp
jp
insb
inc
sti
out
xchg
jae
dec
inc
jns
ja
sbb
nop
addr16
pop
xchg
pushf
sti
xchg
nop
mov
sbb
mov
dec
mov
arpl
and
arpl
push
mov
mov
jmp
cmp
jp
xchg
scas
incb
insb
lahf
icebp
inc
cmpsl
shll
jns
xorb
mov
or
cmp
sbb
test
inc
mov
testb
shll
dec
test
test
xorl
nop
jno
sbb
jbe
fisttpll
add
sarb
mov
sub
sub
sub
mov
lods
pop
xor
mov
adc
inc
push
cmc
addr16
insb
aas
ret
mov
loope
inc
inc
sub
mov
enter
test
inc
lea
pushf
xor
out
cmpsb
mov
mov
push
mov
flds
pusha
and
jp
xchg
leave
or
sub
xor
in
jg
movsb
add
or
mov
call
add
rclb
xlat
sbb
sbb
mov
push
mov
mov
push
mov
cmp
mov
loopne
push
fldcw
mov
mov
mov
in
sbbl
xchg
sbb
fcomps
roll
enter
pop
negl
pop
mov
mov
lea
xor
and
lahf
inc
inc
push
fisttpll
ljmp
lods
adc
pop
mov
lahf
cld
push
sar
das
cltd
mov
adc
dec
push
mov
pop
adc
xchg
cs
cmp
push
lods
mov
leave
jl
ret
adc
sub
xor
lcall
sti
mov
xchg
or
push
imul
cmc
and
or
cmp
lods
push
and
push
arpl
nop
mov
sbb
or
cmpsl
xor
mov
aas
out
mov
iret
mov
pop
sub
jo
daa
repz
mov
jno
sub
or
inc
push
lds
xchg
rcr
xor
cld
dec
shlb
mov
rol
pusha
cld
repnz
frstor
sahf
out
sub
arpl
or
stos
fnstsw
push
adc
sub
inc
xchg
xchg
jae
test
jb
daa
cli
xchg
icebp
enter
and
pushf
orl
cwtl
out
xor
xor
aam
pushl
aam
hlt
mov
jo
fcmovbe
aaa
jae
rolb
aad
pop
cmp
dec
mov
fcoml
sbb
push
xchg
inc
and
cltd
orl
ret
jb
dec
mov
cmp
xor
ss
mov
nop
stos
sarb
neg
hlt
stc
adc
lods
mov
shlb
xchg
pop
and
inc
sbb
psllw
and
insl
and
add
ficompl
popa
sahf
aas
pop
pop
icebp
pop
pop
mov
ljmp
sbb
sbb
mov
cmp
nop
mov
jo
pop
shl
int3
shlb
adc
sub
mov
push
mov
sub
fadds
inc
push
push
test
ljmp
push
je
test
clc
xlat
jmp
push
jl
inc
pop
or
movsb
pop
push
lea
jmp
mulb
ret
and
imul
scas
inc
std
cmc
jne
es
fs
adc
and
jmp
mov
movsl
cmp
ss
xorb
mov
pop
mov
ljmp
out
test
fisttps
adc
bound
or
dec
mov
sbb
sub
jnp
movsl
cmp
xor
or
shrb
cmp
lds
setae
leave
sahf
subl
pop
scas
xor
sbb
mov
cli
call
cmp
jae
mov
mov
xor
push
inc
enter
push
xor
cld
xchg
rcr
rcll
enter
leave
cmpsl
mov
pop
out
cwtl
das
repnz
test
in
into
mov
cld
push
push
and
or
push
test
jno
jbe
mov
je
pusha
ljmp
mov
jo
and
repz
inc
and
push
push
int3
std
push
ja
ficomps
adc
les
iret
fldenv
in
fldenv
shll
cmp
mov
pop
add
pop
jb
and
lcall
cmpl
xor
scas
loop
xchg
push
shlb
test
in
push
scas
idivb
loopne
jb
jg
and
imulb
inc
lds
mov
lahf
add
dec
ds
inc
fnsave
ljmp
push
lods
pop
and
fmull
jne
lahf
cmpsb
inc
loopne
xchg
or
push
mov
pusha
fcmovnbe
ja
and
pop
outsb
cmp
push
data16
scas
mov
sbb
jecxz
fsin
lahf
lea
lock
mov
pop
ljmp
push
mov
push
jp
adc
and
adc
adc
inc
mov
hlt
xchg
xchg
fnstcw
movsb
repnz
xchg
add
test
dec
mov
sbb
lods
popa
xchg
pop
cmp
andb
push
call
rcl
lret
out
dec
rclb
test
and
and
arpl
shl
and
mov
or
out
rolb
shlb
daa
shrb
inc
aas
push
fldt
cmp
loope
aaa
mov
xor
test
mov
or
xchg
cwtl
std
or
adc
sub
push
mov
repz
imul
dec
vpsubb
and
out
stos
lods
inc
fstpl
or
out
lds
xchg
sti
dec
lods
aaa
into
pop
in
jnp
cwtl
jle
push
pushf
ljmp
xchg
movsb
cmpsb
imul
in
push
lcall
or
push
xor
leave
bound
lret
adc
pmaxsw
insb
mov
popf
and
and
mov
dec
repz
icebp
lcall
mov
repnz
push
sti
insl
cmp
cmp
hlt
rorl
mov
ret
lahf
jnp
pop
xlat
lret
jo
insb
jne
sbb
mov
jns
sub
test
xchg
cmp
clc
icebp
ds
mov
movsb
rcrl
les
jb
jnp
cmpsb
shll
xchg
imul
jp
loopne
ljmp
sahf
repz
sub
lahf
sbb
sub
je
mov
pop
push
adc
enter
iret
xchg
adc
imul
push
push
lahf
mov
loopne
mov
test
flds
sub
xor
arpl
mov
insl
pop
mov
and
sbb
repnz
mov
sbb
rorl
push
add
lds
shll
lds
shl
xchg
sbb
or
cltd
dec
dec
std
dec
in
and
dec
xchg
pusha
pop
cs
mov
xchg
jl
pop
imul
jae
mov
mov
push
jbe
sub
in
notl
or
insb
cltd
negb
and
sar
fs
ret
ss
pushf
pop
cmp
push
insb
pop
test
fs
and
xor
or
mov
sbb
or
add
leave
mov
xchg
leave
xlat
popf
paddsb
dec
ficompl
lock
fsubl
cld
lcall
sbb
adc
cmc
xor
popa
pop
rcll
out
cmp
jne
mov
hlt
xor
add
sti
xor
jg
loop
fsubrp
cmpsl
sbb
adc
push
pop
aas
or
sbb
sbb
push
cmpsl
pop
cltd
or
dec
and
jle
pusha
xlat
jle
mov
pop
push
int
lret
movsl
aaa
loope
imul
dec
pop
nop
push
adc
cltd
adc
imul
ss
dec
iret
and
sub
fcmovnbe
ret
pop
cmc
sbb
pop
insl
popl
fisttps
mov
cltd
sub
sub
mov
mov
lods
int3
into
sub
inc
adc
mov
or
xchg
cmp
xor
lods
mov
xchg
loopne
call
notb
lods
inc
cmc
push
lret
cmp
xchg
dec
xchg
adc
icebp
movsl
sub
inc
sahf
and
aaa
out
ret
out
jge
or
adc
mov
lds
inc
mov
cld
inc
mov
xor
dec
popa
sti
stos
push
stos
cmp
fcompl
jb
cmpsb
mov
dec
js
and
push
rol
push
lea
add
push
lds
nop
jne
cwtl
or
jnp
mov
or
sub
mov
adc
xor
adc
daa
push
mov
je
jp
inc
inc
inc
xlat
imul
cld
cmp
push
mov
sub
shlb
xor
push
mov
icebp
mov
jle
mov
pop
out
fst
js
mov
inc
sahf
mov
push
es
mov
dec
xlat
test
ds
aad
cmp
mov
sub
push
fcompl
shlb
mov
sbbl
sub
push
mov
sbb
dec
dec
mov
test
ficompl
daa
mov
mov
fdivr
jne
popa
stc
xchg
mov
sarl
xor
mov
js
add
cli
mov
ret
repz
aad
cld
mov
aad
push
push
jmp
and
inc
pop
in
iret
push
scas
sbb
pop
pop
daa
cli
jg
into
sub
gs
jp
dec
mov
fwait
sbbl
or
icebp
loope
ficomps
pushf
ljmp
loopne
stc
xchg
sti
and
stos
or
int3
sti
stos
dec
pop
fsub
leave
sub
aas
mov
lret
xor
sbb
cli
jno
stos
and
cmp
insb
ds
lcall
or
jle
aas
scas
pop
jecxz
cltd
lret
sti
jbe
or
xchg
push
sti
cltd
push
xchg
fisubl
ret
popa
cli
sbb
jle
cmp
push
and
fcomip
sub
cmp
cltd
insl
pop
in
iret
xchg
sub
repnz
xlat
pop
out
ds
int3
push
imulb
faddl
inc
out
shr
xorl
daa
loop
pop
dec
or
mov
pushf
mov
jbe
aam
jns
cmpsb
repnz
push
jmp
push
xchg
jo
dec
aaa
push
jecxz
mov
in
sub
cmpsb
outsb
xlat
mov
stc
in
cmp
pop
stc
test
sub
aad
xor
stos
push
sub
sti
add
outsl
xchg
pop
xchg
dec
fdivr
pop
fnsave
mov
push
inc
shrl
insl
xor
in
arpl
loopne
adc
lods
stos
cmpsb
cmp
cld
stc
les
push
mov
mov
movsl
add
and
cmp
popa
and
test
add
icebp
mov
adc
fwait
mov
push
ljmp
negb
xor
fimull
loope
xchg
ror
mov
out
rorb
inc
adcb
xchg
loop
add
sub
push
dec
aaa
ret
mov
ret
cmpsl
pop
fisubs
adc
jmp
popa
jno
subb
fidivl
push
push
rcll
outsb
sub
icebp
sar
aas
add
xor
fnstenvs
aad
out
xchg
add
jne
mov
push
insb
add
mov
xor
inc
cmp
jbe
mov
dec
shl
xchg
bound
sbb
or
outsb
cmp
jp
xor
xor
sbb
add
fs
mov
scas
mov
cmp
push
cmpsl
mov
imul
adc
fdivs
jbe
call
and
push
add
or
fidivl
dec
cmp
in
push
movsl
outsb
jl
rcl
mov
mov
jne
pop
sbb
dec
inc
push
jg
lock
lods
aas
jno
xlat
xor
jl
gs
lds
cld
inc
outsb
popf
loopne
xchg
and
sub
dec
sti
adc
call
mov
xor
jmp
incb
out
xchg
out
mov
push
xor
xor
fmul
fidivrs
push
nop
jnp
lds
cmp
sti
pushf
xchg
inc
cld
push
lret
arpl
inc
dec
sbb
pusha
ljmp
adc
mov
jmp
mov
cli
aad
fcmovne
repnz
test
int3
jle
imul
sti
outsl
std
mov
mov
test
dec
and
fldl
sahf
lods
cld
ficoms
xor
iret
mov
and
xor
jge
mov
ss
jbe
fnstcw
imul
jmp
roll
jp
sti
fwait
test
scas
insb
das
leave
and
push
hlt
ljmp
inc
jmp
lock
jno
lret
xchg
push
fstpt
fwait
mov
xchg
or
imul
lods
and
pop
cmp
add
stc
pop
out
add
sbb
cmp
iret
cmpsb
pop
dec
outsl
jns
push
les
shlb
lcall
adc
inc
lods
mov
fisubs
sahf
jb
inc
fidivrs
pop
gs
subb
cltd
mov
mov
les
shrb
and
dec
insl
sti
dec
adc
xchg
mov
push
push
add
mov
adc
add
pusha
jnp
cwtl
loope
ret
inc
inc
or
xor
inc
dec
and
jo
insl
or
data16
sbb
dec
xor
add
jg
mov
test
adc
bound
jmp
imul
lock
dec
push
xchg
push
lods
and
sub
pop
in
xor
sbb
jp
pusha
ds
fsubl
dec
es
sbb
int
xor
sarl
std
imul
in
icebp
sti
jecxz
and
testb
xchg
lea
push
lcall
movsl
xchg
imul
jnp
loopne
adc
dec
lods
lahf
addl
sti
pop
cmp
and
popa
inc
mov
jecxz
or
add
xchg
mov
xor
and
iret
and
pop
jbe
aaa
pop
xchg
cs
cmp
call
inc
sbb
arpl
arpl
subl
jle
push
mov
push
outsb
sub
cmp
dec
inc
dec
repz
jbe
push
xlat
incb
sbb
push
out
pop
adc
pop
adc
sub
xor
jne
lds
adc
repz
daa
mov
das
cmp
aas
mov
mov
and
inc
fadds
mov
dec
cwtl
scas
xor
and
xor
inc
inc
push
popf
mov
xchg
lods
jmp
cli
xchg
inc
inc
loopne
xor
lock
bound
adc
mov
jno
adc
test
addr16
stos
xchg
mov
pop
cmp
lods
mov
sahf
call
fsubl
test
adc
imul
mov
inc
pushf
iret
and
push
test
icebp
cmp
stos
test
cld
and
pusha
mov
loope
cs
cmp
mov
mov
fnstsw
cmp
leave
out
xchg
pop
xchg
add
mov
aam
ss
daa
jge
pop
mov
lods
sub
in
mov
inc
int3
sbb
out
or
enter
ljmp
mov
imul
shlb
dec
stos
cli
inc
shrb
add
repnz
out
adc
jnp
sti
pop
and
loop
sub
pusha
sub
push
dec
jge
mov
pushf
int
outsl
jb
rcrl
shl
test
mov
jl
test
cmp
push
add
es
out
es
sub
mov
push
xchg
dec
cmpsl
lahf
and
rcll
lret
es
pushf
scas
nop
pop
insl
cmp
mov
aaa
es
sahf
xchg
inc
push
adc
lcall
das
cmovns
adc
dec
in
test
cmp
push
lahf
ret
add
dec
test
push
pop
and
loopne
lret
sti
bound
jmp
into
shll
adc
adc
push
nop
daa
sub
iret
cmp
nop
jge
aaa
mov
xor
sbb
inc
hlt
dec
cld
mov
bnd
push
mov
pop
les
in
sub
xchg
sub
repz
jecxz
mov
mov
lds
cmp
pop
mov
das
mov
push
inc
push
cmp
enter
sbb
dec
js
in
sarl
nop
push
dec
xchg
xchg
popa
inc
xlat
cs
or
xchg
push
dec
mov
sahf
xchg
push
dec
fisubrs
push
fistl
push
push
loope
shlb
xor
mov
lods
mov
clc
dec
mov
int3
inc
aad
in
cli
and
fisttpll
mov
fwait
jp
js
push
mov
rolb
jae
push
icebp
dec
jns
in
in
dec
iret
data16
sbb
mov
inc
icebp
push
adc
push
das
fdivrl
decb
cmp
push
push
pop
add
test
mov
jle
test
fnstsw
shl
xor
arpl
cmp
ja
xor
xchg
in
add
sbb
adcb
mov
pop
lods
hlt
lds
push
fldl
loope
pop
pop
movsl
fs
aad
fyl2x
sub
push
mov
out
jb
mov
lret
data16
popa
dec
mov
dec
pop
mov
enterw
in
je
xor
jmp
scas
inc
scas
lret
nop
fstl
jns
push
xlat
cs
mov
loop
cmp
add
daa
cs
stos
jne
popf
in
xchg
or
jo
test
in
movl
cmp
out
aaa
popf
cld
sub
sub
mov
jae
ljmp
push
ret
outsb
mov
testb
mov
call
jmp
movsb
dec
dec
loopne
fdivrs
and
xor
leave
movsb
or
fwait
bound
divb
je
iret
sarb
rorb
cs
clc
inc
shrl
inc
shlb
jmp
push
jb
jge
jno
imul
sbb
mov
pop
pop
jb
insl
push
xchg
insb
push
mov
push
adc
repz
push
push
ds
imull
push
mov
hlt
pop
pop
aam
cmp
push
test
mov
aad
jno
in
xor
and
mov
fimull
cs
idivl
sbb
cwtl
sub
testl
jle
push
fnstsw
rcrl
or
loop
jl
sti
mov
dec
orb
or
xchg
sbb
and
idivl
push
sbb
xor
outsb
xor
movl
lcall
mov
or
nop
push
mov
cmp
imul
and
loope,pt
push
cmp
or
dec
mov
pusha
pusha
outsb
mov
adc
push
inc
je
lret
jno
popf
ss
fnstsw
dec
lret
in
pop
cmpl
fdivl
jle
dec
mov
cmp
inc
xchg
ljmp
xor
inc
xor
pop
cmp
dec
iret
sub
decb
mov
or
cmp
test
cmp
dec
fwait
movsb
lret
cld
lock
and
push
out
cld
cmpb
mov
hlt
cmpsl
popa
jo
fisubs
adc
lret
int3
jae
mov
ja
bound
jge
rorb
xchg
jmp
call
xchg
loope
imul
aas
jns
jno
jg
push
es
addr16
lods
xorb
call
popa
add
and
mov
aaa
pop
jg
divb
sbbl
scas
push
push
jne
xorb
or
iret
fstpt
lods
push
mov
push
adc
sbb
cmp
xchg
push
jo
mov
scas
jmp
pusha
or
dec
movsb
xchg
sar
dec
test
orb
adc
and
scas
call
mov
iret
push
mov
jno
sub
shrb
dec
dec
mov
shl
rclb
ljmp
sub
sahf
lods
pusha
pop
xchg
jns
push
int
cmp
cld
std
loop
enter
mul
fsts
test
mov
data16
insb
pop
cli
fnsave
cmp
sti
and
push
js
mov
loopne
les
jp
push
es
sbb
pop
daa
movsb
pop
mov
sub
sbb
jmp
mov
aad
popa
push
jbe
icebp
mov
add
scas
adcb
daa
pop
jecxz
cltd
push
dec
pop
adc
or
nop
push
cmp
addl
ret
repz
les
loopne
setge
outsb
test
mov
cmp
xchg
fwait
sti
push
xlat
into
inc
xchg
dec
ficoml
fisubs
push
lret
aas
push
and
cmp
cmp
adc
fisubl
jbe
insl
mov
aaa
jne
dec
xor
ss
push
mov
outsb
loopne
mov
jo
mov
inc
rorl
scas
shl
nop
fmuls
jle
icebp
subl
xor
repnz
pop
mov
mov
enter
fcmovnb
imul
stos
cwtl
jmp
xchg
dec
jb
lods
mull
dec
push
lcall
xchg
xchg
sub
ret
pop
cmp
push
mov
dec
inc
push
adc
xlat
jecxz
mov
xchg
inc
pop
xchg
call
pop
sahf
adc
jge
xorb
add
fwait
sbb
dec
xor
popf
lods
or
pop
cmp
test
inc
lods
les
jmp
sub
sbb
adc
xchg
and
in
push
or
xchg
and
jns
leave
and
inc
add
jnp
mov
mov
jg
adc
or
cmc
mov
fldl
cmpsl
loope
adc
hlt
or
adc
in
xor
mov
shr
mov
out
inc
mov
inc
iret
mov
sub
stos
test
push
jb
inc
or
jp
xor
leave
cmpsb
in
pop
mov
rcr
insb
xchg
jno
movsb
arpl
adc
sbb
dec
into
pop
push
insl
subb
enter
lods
inc
cld
inc
push
lcall
cmpsb
lret
jecxz
mov
xchg
adc
and
ret
shl
cs
xor
das
test
cld
cmc
and
cmp
sbb
or
cmp
aad
fistpll
mov
test
xchg
mov
fsubrs
push
xchg
fildl
lea
ljmp
and
jnp
lret
push
ljmp
mov
mov
mov
jb
rcl
loopne
push
pop
mov
mov
cmp
inc
inc
lret
xor
pushf
into
je
mov
rorb
pop
fs
add
cmp
sub
stc
nop
jle
or
arpl
stc
imul
in
add
mov
data16
mov
xchg
imul
in
lret
call
in
push
mov
jmp
and
fs
add
or
and
jns
ljmp
xchg
insb
sub
push
cmpsb
dec
jecxz
jbe
xor
cmp
popf
cltd
gs
and
addb
pop
ds
icebp
cmp
pop
mov
or
mov
cld
idivl
lods
test
jns
jae
ljmp
sub
fimuls
int3
dec
bound
and
add
pop
inc
jmp
mov
pop
shrl
cmc
loop
ficoml
pop
and
jae
imul
fucomip
cwtl
or
lcall
or
jg
aas
int3
xchg
outsb
hlt
cld
push
mov
lret
mov
pop
jecxz
lret
fisubs
or
sbb
nop
fstl
xchg
xor
sub
inc
scas
push
repnz
inc
mov
icebp
dec
mov
mov
sub
dec
call
jecxz
and
push
mov
sub
ror
out
test
repz
push
cmp
cmp
xchg
in
cld
add
in
or
adc
daa
sub
push
insb
fcomi
fwait
inc
in
xor
sarl
aas
cmc
inc
andl
shrd
inc
repz
mov
sahf
lret
cmp
cwtl
xchg
pop
aas
push
lock
insb
lea
mul
jo
out
xchg
sbb
pop
addr16
mov
mov
push
popf
repnz
jp
lock
cmp
ja
sahf
pop
dec
mov
adc
mov
data16
push
mov
xorl
jne
xchg
js
in
cmp
mov
ret
jb
pop
sub
std
fdivr
cmc
loope
mov
stos
test
pop
and
mov
stos
sub
ror
jl
loope
dec
mov
aam
scas
jge
in
adc
js
arpl
andb
fmull
stc
xchg
push
cmp
arpl
int
movsb
test
repnz
adcl
xor
push
jmp
nop
cmp
or
jb
daa
cs
mov
fwait
les
iret
bound
pop
data16
mov
pop
mulb
jmp
mov
or
in
sbb
cmc
lret
pop
push
movsl
js
xor
outsl
lret
in
push
int
xchg
sbb
cmpsl
loopne
out
sti
rcl
lea
inc
sahf
sti
or
aad
lret
loop
fs
ss
lahf
dec
jne
test
and
jmp
xchg
xchg
neg
xchg
sbb
int
adc
add
insb
sub
mov
mov
out
fdivl
push
jmp
dec
cli
nop
adc
rclb
jne
pushf
or
jno
jl
jmp
scas
sbb
cmc
lret
dec
test
nop
fcoml
imul
jecxz
inc
out
lods
aad
mov
pushf
mov
push
dec
push
mov
stos
dec
push
cld
mov
or
push
lea
sub
test
pop
enter
int3
bound
mov
jmp
lret
and
into
mov
sub
sbb
cmp
imul
lock
nop
test
push
mov
mov
inc
arpl
xchg
xchg
mov
adc
out
hlt
sbb
aam
pop
fdivs
jp
jns
jl
xchg
or
dec
push
xchg
add
je
mov
adc
data16
mov
ja
cmp
xchg
imul
stos
sub
in
mov
mov
mov
mov
jbe
sbb
mov
mov
stos
int
les
btc
lds
ja
leave
cltd
xchg
inc
lret
ljmp
pop
rorl
jb
xchg
push
fldl
dec
or
jg
mov
fs
stos
lods
pop
es
push
in
cmp
push
inc
dec
popa
andl
les
jge
jecxz
mov
sbb
and
push
mov
inc
popf
jne
inc
outsl
sahf
sub
loope
int
test
test
mov
mov
sbb
scas
outsl
mov
shrl
jmp
fdivrl
rolb
mov
xor
and
inc
addr16
test
add
lods
and
sbb
dec
insl
test
lret
or
or
leave
jge
addr16
out
pop
lods
sbb
adc
inc
add
mov
adc
ret
add
sbb
stc
sub
gs
stc
movsl
mov
pop
sbb
inc
and
sbb
pop
dec
iret
inc
pop
hlt
test
sbbl
ds
clc
aas
ja
pop
mov
push
loopne
test
cltd
ficoml
sub
adc
fidivl
popf
jo
add
sbb
fisubrl
pop
and
js
sub
rolb
rcrb
insb
out
cld
insb
lods
mov
lcall
jne
fcoms
ja
xchg
push
test
add
and
mov
pop
int
xor
das
stos
popf
mov
das
xorl
mov
xchg
jge
movsl
jecxz
mov
test
sti
test
cmp
outsl
int
push
mov
aad
aas
mov
daa
cs
jae
lret
mov
mov
ja
mov
dec
fwait
mov
aas
clc
out
insb
pop
sahf
pop
dec
nop
mov
jp
cmp
ss
jns
gs
mov
daa
lret
inc
sbb
xchg
hlt
mov
inc
ds
xchg
jbe
ret
aad
fistl
adc
decb
and
add
sub
popa
je
sti
and
mov
dec
or
fisttpl
cmp
outsl
aad
repz
fldenv
fnstenv
push
imul
popa
sbb
pop
jne
jge
imul
test
mov
and
sbb
inc
or
cmpl
ds
dec
rcrb
mov
jo
ds
xlat
insl
stos
pop
bound
das
inc
xlat
sbb
or
cltd
lods
and
xor
mov
adc
shll
xchg
outsb
jl
mov
pop
mov
fsubr
lock
call
subl
xchg
pop
loope
sbb
mov
jmp
or
push
mov
cld
jg
mov
push
loop
dec
jno
xor
out
shl
fistpl
mov
or
jae
dec
inc
lea
imul
xchg
jns
jae
aas
pop
mov
clc
es
lret
lret
or
push
nop
and
or
popa
stos
fisubrl
aaa
sarb
add
negl
jnp
popf
stos
mov
jle
xor
mov
stos
add
xor
mov
sbb
mov
lahf
ss
dec
out
bound
or
dec
mov
mov
fcomip
cmp
cmpb
fmull
mov
cmp
xchg
dec
test
rorl
dec
pushf
daa
lock
xchg
push
les
stos
or
aam
clc
push
dec
fadds
test
xchg
lods
sub
int3
push
or
outsl
mov
fildll
rcll
arpl
push
sub
mov
clc
pop
hlt
outsl
rol
pop
enter
inc
pop
and
lea
or
cmp
sbb
jns
sbb
fbstp
push
add
cs
pop
mov
mov
and
mov
lods
dec
inc
mov
or
jno
stos
mov
dec
xor
dec
stc
bound
stos
movl
push
mov
mov
icebp
std
jecxz
dec
push
sbb
jp
out
into
and
rol
add
adc
pop
lret
xchg
xor
sbb
sbb
inc
dec
xlat
stos
jmp
nop
or
xor
adc
push
insb
sub
into
subl
sbb
push
mov
dec
loope
rcrb
jp
mov
push
je
adc
dec
aas
xchg
sbb
subb
lods
in
xchg
repnz
out
pop
inc
fmul
mov
js
insl
mov
testb
movsb
sbb
test
and
sub
jo
js
sahf
jne
cmp
xchg
push
fs
aaa
dec
sbb
dec
push
das
js
xchg
sub
cltd
mov
inc
jne
ret
xchg
stc
outsb
sbb
cmp
movsl
mov
cmp
popf
bound
mov
pusha
test
xor
cltd
jb
out
scas
inc
mov
adc
pop
cmp
mov
stos
out
ficomps
int3
rcll
push
dec
and
dec
loop
fsubrl
jb
mulb
mov
out
push
subl
mov
mov
adc
fs
jno
std
inc
push
cld
mov
adc
jno
mov
lcall
movsb
int3
cs
xchg
xor
aaa
lret
mov
call
xchg
sbb
lds
jle
lock
out
cmpsl
mov
lods
push
cmpsl
ljmp
or
or
xor
imul
divl
push
repnz
sub
jo
aam
mov
cmpsb
cmp
dec
mov
call
pop
cmp
mov
mov
xor
xor
cltd
push
in
adc
cmpsb
out
test
enter
xchg
mov
xor
iret
mov
scas
lcall
hlt
outsb
push
mov
addr16
jnp
nop
gs
insb
or
pushf
cmc
aas
xchg
xchg
pushf
jns
mov
add
stos
test
repnz
testl
pop
jne
cmp
cmp
xor
sub
mov
push
pop
cmpsl
mov
push
mov
sti
and
cltd
ficompl
mov
dec
pop
daa
inc
cmp
xlat
ret
fldl
xorl
xchg
cs
mov
pop
push
ds
addb
and
repnz
pop
xchg
add
adc
xchg
sub
adc
mov
jg
add
dec
rol
xchg
inc
popf
insb
xor
bnd
bound
adc
xchg
out
in
mov
cmp
mov
xchg
outsl
dec
dec
shl
out
inc
aad
shl
mov
out
mov
loope
xchg
ret
dec
pusha
or
jle
pop
mov
iret
int
jmp
loop
and
dec
mov
sub
xor
adc
inc
movb
jo
and
lods
in
stos
orl
cmp
adcl
pop
movsb
or
lcall
in
popa
ret
sbb
pop
push
mov
lahf
mov
fwait
xor
xchg
push
shlb
pop
xor
push
frstor
into
aas
shll
rolb
adc
or
fbstp
inc
lods
roll
fdivrl
and
adc
jle
lahf
sub
push
sub
popa
outsl
or
cs
mov
adc
in
ret
cwtl
pop
mov
loop
movsb
movsl
cmp
int
fisubl
ja
add
jge
pop
sub
ljmp
std
movsl
jb
mov
dec
jl
pop
outsb
mov
fldl
cs
xchg
test
lods
je
push
xchg
cs
xchg
push
dec
mov
subb
add
mov
ret
data16
nop
pop
sbb
adc
pop
repz
push
jp
test
nop
adc
mov
out
cmpsb
mov
jb
mov
sti
mov
mov
js
dec
mov
mov
inc
dec
leave
test
mov
out
dec
cmp
movsl
lods
xor
push
mov
xchg
fwait
push
or
testl
sbb
test
sub
inc
or
imul
pop
xchg
out
aad
dec
xor
movsl
sbb
imul
jne
add
mov
rol
push
mov
pop
jp
mov
das
inc
inc
dec
test
popf
xlat
ficomps
repz
fisubl
xor
sub
jb
mov
xchg
add
loope
pop
sub
push
movsl
pop
mov
pop
xchg
pop
push
pop
xor
mov
xlat
sub
and
fcmovb
sbb
leave
fistl
pop
shlb
adc
in
cmpsb
push
push
xchg
stc
andb
dec
push
repnz
adc
ss
data16
push
mov
push
jne
into
sbb
dec
out
push
xlat
cmp
push
push
std
xchg
or
movsl
ret
cmp
add
rcrb
mov
push
iret
jo
mov
xchg
sub
in
add
sbb
or
repnz
xchg
data16
adc
inc
cld
sub
push
ljmp
loop
jae
addb
sub
js
inc
mov
pop
mov
sub
jg
sub
hlt
jl
xchg
je
shl
sbb
pop
lret
mov
fbstp
mov
jns
scas
pop
ljmp
icebp
inc
cmpsb
xchg
push
popa
ss
std
add
arpl
push
ljmp
negl
jb
jno
push
mov
arpl
lret
or
aas
ds
int
loope
movsl
cmp
add
les
sub
xlat
inc
shrl
call
jne
add
and
or
dec
mov
mov
mov
mov
or
inc
daa
xchg
mov
in
shll
lods
lcall
roll
inc
cmpsl
js
or
push
sub
icebp
scas
lret
cmp
adc
push
mov
call
mov
add
fsubr
je
inc
cltd
mov
mov
fwait
test
sbb
jo
jp
aaa
out
mov
dec
push
mov
inc
fcomps
stc
fdivrl
dec
sbb
ficomps
mov
pop
fwait
movb
rcl
mov
mov
push
cmc
scas
jmp
stos
stc
inc
pop
fnstcw
push
mov
inc
stc
mov
inc
lret
xor
push
repnz
push
jmp
int
out
dec
les
stc
dec
add
xorl
adc
popf
jle
sar
out
pop
cmc
testl
out
dec
je
cmc
pop
xchg
das
dec
lahf
push
ljmp
inc
stos
push
sub
inc
lret
mov
sahf
jo
loop
es
fwait
test
mov
loope
into
and
pushw
lods
ja
xchg
and
cmp
or
stc
stos
xchg
enterw
sbb
inc
daa
mov
cmp
jae
sub
ret
and
dec
push
push
mov
jp
nop
jo
add
push
or
cmpl
pop
imul
and
sub
outsl
lods
mov
mov
lock
xorb
pop
jbe
aaa
jnp
add
pop
push
addb
jb
push
inc
pushf
pop
cmpsb
in
inc
fs
loope
sbb
pushf
cmpsl
and
jnp
jnp
stos
shlb
push
out
mov
add
jbe
cmpsl
push
jmp
add
jae
pop
add
shl
cmp
stos
cmp
cmp
out
js
jmp
dec
dec
inc
mov
cmp
push
imul
data16
mov
adc
addr16
jae
mov
push
pop
xchg
pusha
sbbl
xchg
sti
test
in
enter
xor
dec
add
mov
and
ss
cmp
inc
push
sar
pusha
cmpsb
jl
lret
call
test
jo
loopne
js
int3
rcrb
int
lock
pushf
push
shl
test
push
gs
fnstsw
loopne
push
cltd
test
int
imul
in
mov
lods
mov
jg
cmp
out
sbb
cli
test
cmc
push
hlt
add
cmc
stos
mov
push
outsl
cmpl
xlat
sbb
sbb
das
adc
sub
jl
scas
out
xchg
sti
xrstors
sub
ret
pop
inc
fsub
add
xor
pop
imulb
dec
jge
inc
pop
jle
cmp
fsubrp
cmp
rcrb
ds
mov
incb
les
jb
mov
pop
jmp
jmp
mov
divb
leave
xchg
xlat
movsl
and
and
fs
mov
xchg
out
ret
lds
iret
sbbb
aam
push
inc
sbb
loopne
push
push
mov
jae
out
out
arpl
adc
popf
mov
cmp
cmp
idivl
cwtl
inc
mov
sti
out
adcl
pop
popa
testb
rcll
fistps
scas
cmpsl
jo
mov
sti
push
fsubl
int3
sbb
sub
testl
cmpl
nop
pop
addr16
fsubr
mov
rcrl
and
add
out
rcr
ret
fisubrl
mov
mov
iret
mov
mov
scas
jns
in
add
and
ret
xor
mov
lret
mov
or
scas
inc
sbb
daa
mov
mov
mov
mov
shll
pop
popf
jno
iret
xor
lods
fists
testb
xor
insb
leave
cwtl
stos
jne
test
push
jb
out
popa
lock
jo
sub
stc
cmp
adc
pop
jmp
pusha
lret
sbb
jg
pop
je
mov
outsl
push
sahf
mov
sub
push
shl
jle
pop
or
jg
cmp
mov
fcmovb
rorl
cmpsb
pop
imul
jne
pop
std
mov
or
jmp
fs
fildll
sub
pusha
stos
push
int
ds
cmp
dec
lock
push
fsubrl
sub
test
imul
das
ja
in
pop
test
pop
ja
jle
mov
mov
adc
lock
out
push
je
pop
nop
daa
int3
pop
inc
sbb
scas
jno
inc
repz
sti
js
dec
scas
mov
cmp
pop
cmpsb
push
mov
mov
cmp
cmpsl
pop
and
mov
clc
push
lret
fcomps
fdivrs
add
ss
ret
pop
insl
cmc
inc
mov
jne
test
ds
push
leave
jp
mov
leave
jae
out
xchg
shlb
loopne
data16
mov
test
jae
push
leave
shrl
mov
addr16
push
aad
scas
jno
jo
add
sub
loopne
repz
bound
imul
inc
fcomi
mov
sbb
insb
movsb
mov
lea
insb
scas
cmp
xor
sbb
dec
push
mov
dec
adc
test
xchg
cmpsl
and
cmpsl
out
fstpt
xor
mov
xor
jp
push
out
loopne
inc
xor
lock
xchg
shlb
sar
nop
daa
push
push
or
pop
bnd
add
jo
cs
mov
call
fldenv
jne
adc
mov
adc
jmp
scas
pop
int3
dec
lret
push
sti
stc
rcl
and
push
push
jmp
popaw
clc
lahf
int3
and
inc
cli
push
ja
add
push
and
mov
push
and
xor
sub
sbb
mov
pop
int3
mov
clc
jle
inc
inc
cmpsl
lahf
jg
rorl
sub
lret
lds
mov
insl
adc
dec
sbb
imul
lahf
data16
rol
fbstp
push
in
jp
xchg
xor
jo
add
fidivrl
xchg
pop
pusha
adc
shl
cmp
dec
push
sub
test
into
gs
mov
scas
outsl
out
push
pop
hlt
test
sbb
mov
aad
push
repnz
test
mov
sbb
mov
ja
test
xor
xor
cmp
insl
mov
cmp
dec
mov
testl
sub
dec
pop
loop
or
sbb
jns
mov
dec
mov
lret
push
in
out
int
test
mov
in
ret
inc
jae
jne
add
aad
es
inc
aaa
cwtl
mov
mov
das
jecxz
lods
jp
xchg
dec
mov
aad
daa
add
sbb
movsl
icebp
outsl
jp
sahf
lods
adc
test
or
xchg
les
bound
out
loop
mov
test
inc
aad
cltd
add
push
mov
push
pop
sub
in
cli
dec
or
xor
or
cmp
cld
fmul
cmpsb
bound
lea
xor
aad
mov
jno
icebp
loop
pop
test
cmp
daa
andb
inc
xchg
jbe
sbb
mov
cmp
xchg
insl
aaa
mov
clc
inc
test
xorb
or
mov
cwtl
test
out
lcall
xchg
inc
mov
sarb
dec
mov
xchg
lahf
les
insb
andl
cmp
mov
mov
je
lock
cld
xchg
stos
inc
jnp
jno
data16
dec
inc
and
jo
out
mov
repnz
outsb
loope
das
inc
fldenv
js
sti
or
out
sbb
fdivl
or
stos
aam
sbb
sbb
rorb
gs
lods
pop
imul
bound
jbe
pop
es
lods
push
sbb
xor
inc
fbld
fidivs
cli
xchg
dec
ffreep
push
inc
movsl
adc
data16
ljmp
xor
fistpl
fnstsw
shll
movsb
xchg
out
test
sub
xchg
jmp
shll
cmp
test
xchg
stos
outsb
xor
cmpsl
fbstp
les
sbb
insl
into
in
adc
jp
aaa
int
in
dec
out
adc
jbe
xchg
das
in
mov
xchg
sub
push
xor
jb
enter
loope
lahf
sub
mov
dec
hlt
mov
xchg
xchg
sbb
mov
adc
dec
mov
cmc
fdivrl
addr16
aam
movl
sbb
fstl
imul
xorb
in
mov
jmp
and
xchg
inc
mov
xchg
sbb
insl
mov
push
hlt
mov
test
adc
xchg
or
add
out
test
ret
int3
and
jb
out
add
xchg
pop
mov
test
mov
adc
inc
out
inc
fwait
arpl
jae
das
clc
mov
sbbl
pop
lods
jmp
pop
sahf
sbbl
dec
in
jne
ss
cltd
pop
cltd
stc
mov
add
test
xchg
lahf
add
sub
xor
xchg
std
xlat
mov
adc
les
jnp
or
dec
push
insl
icebp
insl
push
xchg
movsl
sbb
in
jl
cwtl
enter
aas
pop
mov
cld
loopne
xchg
mov
inc
adcl
lds
push
insb
lea
push
xchg
sub
les
test
sahf
mov
sbb
or
cmpsl
xchg
inc
cmc
adc
inc
jmp
sbbl
outsl
mov
mov
pop
dec
pop
add
cmp
rclb
xor
pop
popf
popa
jle
mov
rcll
jnp
mov
movsb
jecxz
mov
xchg
mov
fnstenv
dec
into
push
int
mov
mov
sub
insl
mov
jle
or
subb
sbb
fwait
scas
je
cs
rcrl
pop
int
adc
movsl
cli
jo
mul
mov
add
push
fcoml
or
outsb
push
cwtl
mov
out
bound
js
mov
dec
push
sub
push
std
sahf
xor
xor
shlb
xchg
sbb
ret
jb
sbb
out
cmpsl
in
imul
xchg
xlat
jg
sahf
out
cmp
cmp
fldenv
aad
sahf
push
push
nop
loopne
adc
fdivr
mov
int
lret
jbe
ficoml
add
mov
sbb
push
xlat
xlat
xor
insl
ja
jae
hlt
fsub
push
mov
or
mov
push
xchg
pop
inc
dec
loope
xorb
mov
mov
int
cmp
pop
and
es
insl
je
iret
and
inc
fcomi
add
mov
and
xor
aaa
xchg
sub
add
lods
inc
in
incb
js
jae
test
out
pop
fstpt
int
sarb
das
add
int3
add
and
mov
insl
cltd
jg
into
and
mov
and
rcrl
xor
pusha
test
mov
lcall
or
or
loope
mov
pop
testb
iret
cmc
scas
xorb
mov
incb
jne
sti
sub
movsl
test
jb
inc
data16
xor
mov
push
add
mov
imul
lock
das
popf
arpl
mov
mov
pop
add
push
outsl
int3
lret
into
ret
jnp
pop
aam
test
lret
push
insl
gs
mov
fnclex
movsb
ja
addl
lahf
inc
mov
popf
cli
pop
scas
xlat
inc
pop
ret
icebp
jg
cwtl
enter
adc
nop
sbb
inc
pushf
mov
xchg
xor
lods
sti
ret
push
sahf
or
popf
lods
dec
lods
mov
mov
in
pop
or
push
mov
scas
and
fdivs
flds
shll
or
cmpsl
and
add
ret
jecxz
or
pop
pop
insb
mov
push
pop
jns
xchg
jne
lods
or
mov
lds
sbb
ret
clc
fdivrl
gs
out
ja
or
add
stos
adc
xchg
xor
icebp
jnp
jge
das
push
push
jb
xchg
stc
mov
fcomps
add
andb
rolb
pushw
add
mov
xchg
dec
and
push
lods
fyl2x
xor
leave
mov
dec
fistpl
sub
je
xchg
mov
cld
ds
add
inc
xor
cmpl
fstps
fbld
repz
pop
fsubp
cmp
mull
xor
mov
xor
cmp
push
xchg
add
aaa
clc
sbb
sub
rcrl
jb
popa
movsb
imul
and
dec
xor
hlt
arpl
xchg
xor
push
mov
cmp
cmpsb
or
xchg
nop
and
sbb
add
cmp
cmpb
jo
and
clc
aaa
popf
mov
sbb
cmp
mov
pop
inc
push
mov
icebp
push
pop
cmpsl
sbb
and
movl
inc
fsubrl
xchg
sub
xchg
xor
sub
xor
mov
pop
cmp
insb
mov
pop
cmpsb
pop
lods
pusha
adcl
ds
andl
inc
shll
stos
aad
pop
nop
iret
mov
sub
xchg
jne
int
pop
inc
dec
add
out
outsl
lahf
pop
xchg
mov
call
inc
cmp
and
pop
ret
ja
push
sub
repz
rorb
sub
push
jno
pop
cld
xchg
xchg
popf
pop
or
in
inc
push
clc
hlt
addr16
jns
adc
notb
push
add
mov
inc
imul
loopne
sub
ja
popf
lods
and
out
ljmp
xchg
cmp
mov
dec
fcomps
scas
nop
movb
hlt
test
push
mov
sub
push
xor
test
ficomps
fbld
jne
xorb
xor
pop
ja
dec
add
in
sahf
ss
ljmp
stos
rorb
and
pop
enter
ret
jns
push
or
rcll
dec
jmp
xchg
and
dec
xor
xchg
sub
add
fsts
jmp
test
in
sbb
cmp
cmp
mov
cmp
fdiv
mov
adc
pusha
popf
ds
cmp
add
pop
movsl
js
mov
bound
movsb
sub
dec
fists
call
and
cwtl
notb
and
add
mov
adc
mov
insl
enter
sub
pop
outsb
jge
xor
imul
insl
mov
insl
std
sbb
and
add
mov
xor
stos
inc
pop
mov
cld
dec
mov
mov
inc
stos
lahf
adc
cltd
mov
rclb
mov
int
rol
sub
popa
loopne
ret
inc
test
not
jae
in
or
push
inc
lret
or
pand
in
repz
pop
cwtl
gs
ja
sbb
dec
xchg
sub
pop
mov
data16
jp
decl
pop
notb
xor
xchg
adc
mov
sbb
xchg
mov
adc
sti
lock
cli
push
jecxz
enter
lds
int
bsr
loop
xorb
pop
add
shrl
outsl
xor
mov
out
jnp
or
jae
push
pop
mov
sbb
sub
inc
push
add
psllw
sti
push
jl
mov
or
stc
adcb
pop
insb
popf
jp
shl
aaa
fstpt
imul
test
inc
push
in
or
in
ss
data16
push
mov
rorl
pushf
pop
mov
popf
fucomip
rclb
jno
add
or
dec
cwtl
scas
and
in
cmc
arpl
shl
imul
push
jecxz
ret
inc
stos
jmp
fistpl
dec
in
sub
popf
psubusw
sbb
ret
pop
xlat
repz
in
mov
mov
cmp
mov
in
popa
subl
xor
inc
xor
outsb
pop
adc
rol
sbb
into
mov
loopne
pop
jae
or
dec
jns
sub
inc
add
jmp
std
test
data16
adc
out
inc
inc
jnp
clc
outsl
mov
pop
or
test
xchg
nop
call
scas
lret
and
dec
cmp
fmull
dec
shrb
ljmp
inc
push
adc
pop
mov
rcll
dec
call
rcrb
xor
push
aad
addr16
lret
or
or
mov
mov
das
stc
lcall
sahf
push
or
loope
movsl
push
sub
push
add
sti
jge
and
rclb
lock
push
popa
iret
xchg
ds
cs
repz
andb
xchg
sub
inc
or
push
jecxz
lock
push
outsl
xchg
js
icebp
movsl
shrb
fstps
bound
test
or
pop
mov
mov
fbstp
dec
pop
add
mov
jl
mov
int
jmp
out
and
lcall
dec
aaa
rorb
push
scas
xchg
in
push
out
jo
hlt
xor
test
inc
adc
fiaddl
sbb
cmc
cmp
dec
icebp
gs
sub
lcall
and
push
inc
enter
jns
mov
insl
push
mov
sub
or
sbb
dec
outsb
add
fdiv
mov
sti
and
fstl
test
jne
mov
inc
pop
scas
jge
loopne
mov
cltd
and
stos
call
mov
aad
pushf
push
aad
inc
repz
jno
cmp
sahf
scas
inc
jmp
lods
sbb
aad
sarb
pop
xor
mov
jmp
pop
xchg
cwtl
xchg
sbb
lods
mov
mov
std
sub
push
or
adc
mulb
xchg
lea
sbbb
int3
lahf
fstpl
je
fmull
cwtl
pop
testl
cmc
xor
sbb
out
addr16
push
andl
sub
pop
pop
insb
dec
les
bound
jno,pt
into
test
mov
sub
sahf
nop
sti
xor
cmpb
mov
inc
mov
sbb
lea
jo
sub
sub
insl
call
fstpt
add
jmp
roll
lret
fnstcw
fs
fisttpl
jge
inc
rcrb
push
dec
pop
aaa
xchg
cs
loope
loop
pusha
jno
add
push
jle
xchg
popa
aam
lea
mov
lret
mov
ljmp
push
mov
mov
jne
jb
sbb
adc
lea
cmp
imul
add
xchg
insl
pop
inc
lahf
std
dec
pop
mov
cmpsl
dec
mov
stc
nop
mov
pushf
pushf
repz
fwait
xor
cmp
notb
or
insb
sbb
loop
pop
xchg
sub
cs
sti
fwait
daa
add
cmp
fiadds
xchg
push
mov
cs
aad
rcll
dec
stos
ljmp
and
insb
in
aas
xlat
xor
sahf
add
pop
out
dec
cwtl
jmp
sbb
jne
adc
lds
out
xor
or
repz
loope
aas
cld
les
insb
fists
or
add
popf
pushf
rorl
shrl
lahf
cwtl
fdivrs
mov
inc
loope
fnstcw
ss
sbbl
mov
rolb
add
mov
ror
pushf
mov
lahf
test
and
loop
lret
addr16
fidivrs
sldt
stc
and
cmpsb
xchg
cmp
fldt
mov
pop
pop
adc
xlat
xor
add
pop
add
cwtl
cmpsb
jb
or
mov
cwtl
pop
sahf
testl
mov
insl
out
jb
mov
repnz
or
mov
aad
push
jo
push
dec
add
test
sbb
mov
and
inc
add
adc
pop
adc
xchg
iret
fs
push
dec
and
fidivs
push
fnsave
mov
lods
test
xor
sarl
pop
add
scas
and
popa
ss
xor
push
popf
cmp
sbb
popf
or
add
js
sub
jmp
aaa
sbb
jl
push
add
xchg
stos
notl
add
lahf
stos
push
pop
mov
and
int
sbb
jo
mov
ret
shll
rcl
lods
xchg
inc
xlat
into
sbb
pop
mov
push
jmp
aaa
in
imul
jne
cwtl
dec
or
gs
jb
insb
add
push
mov
mov
inc
push
push
test
js
popf
stc
testb
add
pusha
leave
sub
mov
inc
call
mov
sbb
xchg
mov
mov
lock
sub
xor
push
xor
pop
mov
into
jge
dec
mov
sbb
jp
imul
divb
or
mov
sub
int3
arpl
xchg
shrl
ss
daa
push
inc
outsl
sbbb
xchg
inc
and
ds
push
push
shll
cmp
jne
das
repnz
cli
inc
lock
decb
mov
jmp
or
lea
sub
aas
pushf
icebp
stc
or
or
sub
cmpsl
loopne
sub
add
cmp
or
sub
mov
jmp
pop
out
and
jl
sbb
jge
mov
inc
push
pop
push
inc
aad
xlat
mov
sub
bswap
and
sbbl
inc
lcall
lods
adc
hlt
inc
or
xchg
call
push
xchg
ds
mov
sti
cmpsb
sbb
adc
dec
orb
add
jmp
pop
pop
insb
lcall
or
push
imul
xor
or
add
int
test
in
lds
mov
repnz
test
cmc
lock
push
shr
shl
fs
fwait
add
xchg
hlt
mov
push
sub
adc
mov
pop
outsb
add
sarl
xor
pop
lret
pushf
cmp
testl
ret
xor
into
push
sbb
xchg
sahf
mov
popf
and
loope
enter
jmp
sahf
lret
dec
and
popf
mov
sub
adc
and
add
in
jae
test
pop
xchg
fs
hlt
insb
fisttpll
sbb
lea
xchg
pop
ja
aas
in
cli
adc
add
mov
mov
mov
ljmp
cmp
pop
pushf
icebp
dec
inc
insl
cmp
adc
cmpsl
pushf
mov
mov
iret
aaa
sbbb
dec
test
out
add
in
xlat
jmp
iret
mov
jl
jp
mov
lds
cmp
mov
add
push
dec
or
outsl
nop
daa
xchg
rolb
adc
mov
cmp
inc
cmp
xchg
cmp
imul
outsl
jns
rol
inc
mov
ret
fildll
lret
sub
sub
xchg
fwait
and
fsubrl
adcb
mov
adc
mov
sbb
shrl
and
imul
inc
out
sub
mov
pushf
iret
sbb
cmp
jnp
jp
push
push
lret
jae
sbb
les
call
mov
pop
mov
adc
cli
ja
cli
in
cmpsb
cmp
push
mov
ret
jnp
sbb
inc
jecxz
jno
movsl
pop
xlat
mov
sub
sbbl
clc
popa
mov
xor
daa
push
pop
xchg
sub
cwtl
sub
sarb
and
inc
add
dec
mov
pop
cwtl
das
addr16
sub
or
jl
lds
decl
andl
mov
jg
int
lods
push
jge
push
mov
jp
cmp
sub
pop
leave
or
in
sbb
inc
pushw
aaa
mov
mov
scas
outsl
insb
sarb
xchg
sbb
mov
cmp
jecxz
pop
inc
push
movsl
cmp
xor
shl
js
xor
jge
in
add
dec
inc
jge
xchg
and
and
and
stos
mov
shlb
fdivrl
stos
mov
cltd
xchg
xor
repz
jo
movsb
int
cmpsb
mov
sub
push
add
xor
mov
xlat
fldt
loope
shrb
inc
pop
popa
icebp
cmpsl
addr16
scas
psrld
call
push
adc
add
inc
daa
pop
mov
pop
imul
or
aas
inc
dec
jl
shr
lret
push
dec
mov
loopne
inc
adc
loopne
mov
dec
fwait
jae
mov
aaa
into
enter
jg
sarb
fiaddl
mov
push
sub
pop
js
mov
icebp
jns
pop
aas
adc
ret
pushf
das
xchg
inc
stc
jae
fstpt
jbe
icebp
cs
mov
aaa
dec
adc
cli
dec
xor
adc
sahf
orl
lods
jmp
in
jae
dec
cmp
xor
arpl
mov
out
fisubrl
scas
inc
push
mov
cwtl
lods
mov
cltd
pusha
fnsave
rcr
btc
dec
inc
or
sub
imul
or
mov
cmpsb
subl
dec
out
dec
mov
les
mov
in
bound
dec
data16
imul
js
mov
xchg
pushf
xor
cld
xchg
add
jb
sbb
xchg
mov
dec
lods
pop
cmpsl
mov
sti
cmp
jge
sbb
js
mov
xor
sub
mov
ret
shl
pop
insl
xlat
ljmp
mov
push
xchg
sub
jl
dec
fistpll
pop
data16
fdivrs
pop
or
cmc
hlt
adc
sbb
cmp
repz
int3
flds
lahf
notb
or
jp
jbe
fdivl
inc
jae
xchg
mov
sub
imul
sbb
and
mov
orl
dec
push
xor
xchg
std
mov
ljmp
pop
pop
ret
dec
sub
lods
and
rolb
int3
and
jmp
mov
sbb
arpl
mov
mov
mov
je
sub
icebp
flds
lock
mov
xchg
mov
mov
lods
inc
xchg
xchg
dec
pop
inc
lret
xchg
jecxz
sahf
scas
sbb
push
movsb
cli
add
test
xlat
test
lods
dec
pop
test
push
add
ret
mov
test
or
pop
imul
js
add
sbb
mov
or
fdivrs
test
push
mov
xor
int3
in
std
fdivrs
pop
ss
cwtl
hlt
out
pop
roll
jae
jb
lcall
stc
or
jnp
sbb
ror
jbe
hlt
mov
dec
popf
lret
and
xor
shlb
pushf
xlat
or
loopne
jge
xchg
inc
mov
shl
pop
sub
mov
arpl
ss
jo
cmpsb
sbb
pushf
cmp
mov
xchg
sbb
in
dec
mov
xor
pop
mov
jp
add
jae
movsb
addr16
inc
lret
mov
bound
mov
pop
ret
inc
xor
xchg
xor
lret
lret
xchg
mov
mov
and
and
mov
add
fcmovne
add
pop
xchg
mov
into
dec
je
call
fstps
sbb
fnstenv
xchg
test
pop
addr16
add
sahf
or
jne
in
mov
cmp
inc
cmp
push
jle
dec
dec
data16
jge
push
loop
push
mull
lret
sub
jo
xchg
ss
mov
ficoms
stos
paddq
enter
movsl
enter
xor
xlat
scas
adc
repnz
mov
mov
cmp
call
push
mov
sbb
mov
adc
pop
insl
add
pushf
and
repz
and
jo
nop
lcall
mov
cmp
mov
imul
add
jle
andl
rolb
jecxz
adc
mov
and
shrb
and
jl
sar
rcr
testb
sbb
sub
aad
mov
das
mov
mov
movsb
daa
xchg
xor
sub
testb
xor
xchg
push
push
add
sub
xchg
cmp
add
pop
dec
cmp
jns
sti
stos
in
mov
cli
dec
std
inc
sbbl
pushf
movsl
hlt
add
and
adc
jg
pop
dec
outsl
push
addl
adc
mov
or
push
cld
lods
xor
jmp
mov
gs
mov
and
push
push
adc
pop
add
mov
arpl
clc
push
jns
test
adc
into
cmp
in
rcrl
das
mov
xchg
test
push
sti
pop
dec
cmp
lods
out
lods
shrl
sysexit
pop
push
ds
sbb
push
leave
inc
sti
cmc
adc
popa
aam
js
or
enter
subb
add
fs
push
pop
jg
shlb
lahf
fidivl
mov
insb
inc
pop
push
mov
push
leave
xor
fidivrl
push
test
mov
add
xchg
pushf
pop
insb
mov
push
push
cmp
fistpll
pop
out
in
dec
lds
enter
dec
mov
hlt
mov
cltd
nop
movsl
jb
scas
xor
adc
gs
inc
and
lods
jmp
es
jne
jno
pop
iret
aaa
cmpsl
mov
aas
data16
xchg
adc
xchg
inc
loop
aam
popf
scas
mov
das
jb
xchg
loopne
xchg
into
add
ja
dec
cmp
xchg
mov
or
jle
cli
int
xlat
cld
or
xor
and
or
pop
mov
xor
xor
loop
ja
repnz
jb
mov
jne
xchg
insb
imul
mov
xchg
jecxz
iret
lret
push
mov
cmp
lea
push
push
imul
mov
dec
inc
sub
xchg
xor
pop
sub
out
repnz
inc
sub
pop
and
or
lahf
jo
out
outsb
aam
pusha
dec
enter
jb
clc
lcall
hlt
cmp
in
mov
pusha
and
push
adc
cmp
or
enter
xor
or
jb
inc
mov
int3
stos
pop
mov
pop
pop
enter
or
lock
add
sti
xor
mov
jno
filds
push
inc
cmp
xor
out
enter
test
push
lods
int
je
addr16
and
and
imul
push
enter
jbe
shr
aas
outsb
push
jnp
or
adc
data16
xor
aas
mov
clc
popf
sbb
ljmp
mov
idivb
jl
lahf
stos
jmp
sbb
mov
push
cli
xchg
mov
or
push
jae
cmp
dec
push
xchg
mov
xor
sahf
mov
add
mov
ljmp
push
cs
fisttps
add
popl
cs
rcrl
cmp
std
ds
fs
pop
add
int
das
add
lds
pop
mov
pop
inc
test
gs
jnp
add
cmpl
shrl
jg
insb
sub
adc
add
xlat
outsb
mov
pushf
ret
pop
mov
sahf
push
sub
scas
insl
inc
aaa
lret
aaa
sbb
dec
lret
cmc
mov
cwtl
push
daa
cld
cmp
inc
jmp
addb
inc
mov
mov
enter
insb
arpl
pop
mov
iret
push
inc
jmp
push
inc
sub
dec
pop
lcall
mov
cwtl
and
gs
iret
pop
or
das
cli
mov
mov
pop
xchg
push
xlat
dec
mov
jmp
ljmp
mov
and
adc
out
sbb
into
movsl
mov
xor
pop
xchg
sub
xchg
mov
push
or
xchg
jp
repz
xchg
insl
jp
nop
xor
cmc
mov
mov
cmp
or
adc
ja
pop
push
xchg
mov
dec
dec
dec
mov
push
xchg
pop
stos
and
xchg
nop
cmc
in
sbb
dec
xchg
mov
fcmovnu
sar
jae
and
out
sbb
dec
shll
arpl
xchg
out
insl
mov
aas
mov
lcall
divb
and
dec
scas
add
jne
in
mov
fimull
ficoml
rclb
in
cmp
xchg
sub
cmp
pop
pop
xor
xlat
jo
imull
sti
pop
stos
pop
bound
out
sahf
xchg
xchg
stos
fidivrl
vmovntpd
loope
test
in
bound
mov
add
xchg
xchg
sbb
dec
push
xchg
mov
sti
xchg
insb
add
cli
orl
cmpsb
mov
lds
outsl
xorb
into
xor
ljmp
call
pop
inc
inc
dec
test
mov
test
jg
daa
mov
bsr
mov
jecxz
popf
cmp
imul
push
or
xlat
rolb
add
inc
mov
int
mov
daa
push
xor
mov
frndint
mov
jl
rorl
jge
or
outsb
ror
jp
or
and
inc
arpl
arpl
sub
lret
cld
and
mov
into
mov
movsb
sti
fwait
mov
jnp
jecxz
mov
mov
dec
dec
add
punpckhbw
xchg
addl
inc
iret
test
inc
ja
jnp
mov
dec
dec
adc
jb
loope
cmp
adc
ss
sbb
std
lea
out
jl
dec
int
pop
rorl
movsb
fisttpll
mov
inc
das
mov
repz
int3
push
add
xlat
push
and
bound
cmc
or
inc
pop
cmpb
out
test
inc
orl
mov
aad
stos
push
push
lods
ljmp
pushf
addr16
mov
jle
lret
mov
fcmovnu
mov
fdivr
or
loop,pt
test
fwait
add
lcall
cli
and
dec
sub
pusha
lahf
mov
stos
addb
mov
repz
adc
mulb
mov
jle
sbb
cld
push
stc
test
clc
push
mov
xor
adc
inc
shlb
xor
into
out
std
pop
cltd
stos
lds
sbbb
cmp
dec
pop
ret
mov
or
mov
or
imul
cmpsb
ret
add
mov
repnz
divb
shl
mov
xor
lret
out
cmc
mov
xor
push
jne
push
fwait
repz
xchg
adc
cltd
push
push
lret
mov
jbe
push
dec
dec
fst
ss
addr16
jle
sbb
test
pop
adc
and
in
sbb
lahf
ja
jns
xorl
lcall
cmpsb
stos
cmp
add
xchg
cmpsb
mov
pop
dec
or
add
insb
or
fadds
or
pop
adc
addr16
shrl
pop
aad
aam
or
lods
out
jp
outsb
dec
hlt
pop
hlt
pop
push
aaa
push
sbb
daa
sub
fbstp
shl
pop
adc
mov
mov
push
mov
lahf
jo
dec
push
sbb
cld
sub
outsl
stos
jmp
push
filds
or
cmp
pop
adcb
push
fs
movsl
or
cmp
shll
jno
pop
mov
sub
aaa
dec
outsl
leave
mov
xorb
sbb
aas
aaa
mov
ss
jle
xchg
xchg
sbb
mov
cmpsl
pushf
inc
loope
mov
test
js
aaa
lods
cmc
sub
lods
stos
sar
cmpsb
mov
test
jp
rol
xor
stos
ficoms
loope
cmp
adc
xchg
cmp
inc
stc
add
out
xchg
enter
les
pop
cli
inc
inc
sub
hlt
in
adc
test
push
test
xor
fdivs
mov
loop
jns
push
jecxz
cmc
dec
test
and
jl
pop
sbb
mov
enter
or
out
fwait
adc
jns
shll
lret
xor
in
pop
mov
add
stc
in
les
fnstcw
aaa
loop
dec
adc
addr16
mov
hlt
xor
lea
sti
shll
jp
inc
mov
mov
cs
daa
ljmp
push
lock
imul
rcrl
pusha
jmp
jo
fiaddl
stc
push
es
and
mov
idivb
fnstenv
fsubrl
pop
pop
xchg
lods
inc
ret
adc
test
dec
loope
clc
scas
inc
sub
pop
rcr
xlat
outsb
adc
mov
jmp
fwait
scas
das
dec
jg
pop
cmp
sar
enter
test
popw
mov
pop
lret
cltd
fistpl
jle
pop
rcl
mov
dec
cmp
faddl
loopne
mov
ja
xchg
dec
push
fidivl
cmp
mov
std
mov
iret
pop
sbb
and
mov
popa
repz
stos
push
imul
out
mov
out
xchg
cltd
in
loope
andl
xor
xor
inc
fcompl
incl
push
mov
xor
inc
lret
lahf
mov
mov
push
fisttpll
int3
xchg
movsb
lret
mov
add
in
ds
pop
pop
pop
cmpsb
cmpsb
dec
shrl
xor
aad
lahf
testl
jl
fwait
xchg
shrl
out
mov
push
adc
scas
xchg
jns
scas
pusha
test
and
pop
in
mov
add
fldcw
in
pusha
cli
test
inc
dec
dec
imul
inc
int3
push
push
gs
int
loope
pop
jae
aad
push
pop
popa
out
scas
lret
int3
rolb
les
and
jne
push
push
and
adc
adc
push
mov
ret
or
pop
pop
mov
ja
dec
cs
sarb
sub
outsb
pop
fsubrs
arpl
sbb
mulb
das
out
dec
xor
mov
aad
and
jg
outsb
mov
xchg
pusha
and
fdivrl
cmp
imul
pop
sbb
push
and
mov
xchg
cwtl
pop
sub
call
fdivp
mov
lock
cmp
xor
repnz
xchg
and
mov
adc
inc
mov
push
inc
mov
xchg
repnz
dec
lahf
shlb
pop
cltd
or
pop
xor
fbld
lds
jmp
movsb
pop
inc
push
mov
lret
jmp
xor
imul
cmp
sbb
adc
xor
test
out
inc
lret
mov
adc
sub
cld
enter
stos
das
adc
and
add
xor
lods
cmp
mov
dec
and
xchg
fwait
mov
rcrl
mov
scas
and
fmul
sub
enter
mov
insb
rcr
mov
mov
push
xchg
add
cli
or
int
add
mov
cltd
incb
dec
add
lea
icebp
pop
daa
lds
test
sbb
xchg
mov
lahf
test
icebp
cs
aas
push
inc
icebp
sbb
call
cld
dec
push
mov
xchg
outsl
mov
fisttps
in
sbb
mov
or
insl
sub
xor
xlat
pop
jb
lods
mov
mov
mov
cli
cwtl
or
aam
dec
add
pop
mov
push
loopne
mov
and
sahf
sub
dec
add
sbb
icebp
insl
xchg
mov
pop
daa
insb
cld
xchg
sahf
dec
out
dec
jg
or
cltd
popa
gs
mov
xchg
pop
pop
mov
xor
push
sbb
mov
lock
shr
int3
inc
out
push
out
pop
mov
push
test
xor
idivb
adc
aad
rclb
aaa
fwait
into
add
mov
rcrl
xor
fsubl
shl
cmpsl
mov
dec
sub
sub
nop
xchg
mov
xor
mov
mov
jbe
cmp
loop
inc
cld
outsl
data16
daa
jp
push
popf
dec
nop
mov
push
out
add
cld
or
outsl
movsl
loop
pop
pop
lds
or
lods
xchg
xchg
sbb
dec
out
rcrb
outsb
xchg
add
pop
jno
or
adc
adc
sarl
lahf
cs
bound
out
pop
xchg
cmp
ljmp
inc
loop
or
repnz
nop
loop
call
outsb
push
movsb
arpl
repnz
sbb
adc
xchg
jae
pop
jbe
mov
jae
ds
lods
cld
or
pop
test
push
adc
fcomip
mov
cmpsb
mov
pushw
sbbb
fcmovnb
mov
hlt
out
ja
xor
inc
popf
or
jle
add
push
xchg
add
xchg
enter
cld
or
iret
in
hlt
mov
xlat
mov
bnd
sub
clc
xchg
mov
dec
and
daa
popf
add
lret
gs
jg
xor
mov
fs
sub
and
mov
and
out
xchg
clc
jp
loope
xor
mov
adc
push
dec
ret
into
mov
jne
out
pop
or
and
movsl
or
add
push
testb
cmp
mov
or
test
sbb
jae
jmp
or
mov
ljmp
adc
pop
sbb
add
divl
pop
cmp
fdivrs
jmp
ret
pop
or
push
dec
mov
mov
movsl
mov
or
mov
inc
sar
mov
jnp
jne
dec
imul
mov
dec
cltd
jbe
jp
dec
stos
in
add
mov
and
dec
mov
or
inc
mov
jns
pusha
test
cltd
xor
push
out
std
jne
xor
gs
lcall
xchg
bound
cld
push
sub
scas
rorb
mov
or
and
xchg
mov
mov
decl
sub
hlt
dec
push
fildll
push
xchg
dec
add
inc
lcall
lods
add
jmp
add
into
adc
jge
aad
xor
xchg
xchg
dec
sub
sbb
mov
cli
scas
imul
mov
mov
arpl
test
sub
push
aad
push
nop
out
test
xor
xlat
and
sahf
xor
scas
inc
jle
das
call
lock
lahf
mulb
fildll
jmp
and
jne
sub
mov
push
shlb
xor
pusha
inc
dec
cmp
sub
int3
pusha
push
add
add
pop
xor
rolb
inc
out
lahf
inc
push
lock
add
addr16
cmp
inc
pop
movb
sub
movsb
test
scas
mov
mov
inc
movsl
hlt
popa
pop
sarb
or
aaa
lea
stos
ds
sbb
pop
cmp
mov
in
arpl
out
xchg
jecxz
cli
push
jmp
andl
jecxz
int
jb
adc
mov
aad
xchg
icebp
bound
js
cmp
sbbb
inc
je
dec
jge
jecxz
insb
shlb
dec
sahf
pusha
dec
in
mov
in
jg
enter
mov
xor
in
fdivrp
fstps
or
fwait
push
push
mov
sbb
and
div
lahf
jg
outsl
outsl
sub
adc
ss
jo
adc
sbb
mov
dec
sub
sub
pop
sub
call
dec
dec
xor
fwait
cs
es
adc
mov
stos
into
lret
iret
es
or
cmp
dec
xchg
fistpl
mov
add
out
mov
idivb
stos
sti
int
fidivrl
addr16
aam
sub
lods
fcomi
repnz
stos
lret
rclb
imul
je
push
xchg
lds
sbb
xchg
pushf
rcrb
insl
stos
hlt
fwait
push
mov
mov
mov
repnz
push
clc
call
cmpl
mov
or
aas
jle
ficoml
adc
mov
fpatan
add
aam
and
or
pop
cmp
loop
xlat
mov
rorb
sub
in
decl
inc
cmc
iret
cltd
xor
imul
sbb
push
bound
jg
xor
jl
int3
jle
sub
add
pusha
jl
xchg
stos
shl
inc
adc
cmp
fbstp
popa
popa
dec
dec
push
mov
xlat
jae
cli
mov
sbb
jle
sub
je
out
jbe
inc
iret
mov
std
faddl
pop
je
adc
jbe
fwait
sbb
int3
out
in
fisubrs
or
mov
pop
adc
adc
adc
xor
in
aas
mov
mov
nop
add
xlat
fs
fs
push
xchg
inc
add
jne
movsb
inc
test
ja
inc
shrl
xchg
jle
aam
scas
push
in
aad
cltd
jb
shrb
mov
push
outsb
pusha
sub
leave
xchg
or
faddl
jo
push
addb
iret
aaa
lods
mov
adc
ss
xor
mov
adc
das
and
lock
add
out
arpl
int
pop
iret
dec
sbb
fisttpll
xor
cmpb
bnd
fmull
inc
lods
mov
xor
jl
adc
mov
mov
ja
push
out
sub
js
pop
sub
lret
scas
pusha
adc
bound
lock
jmp
jnp
nop
daa
jge
xchg
addr16
das
out
jno
popf
incb
pop
loopne
push
testb
sahf
shll
sub
jmp
outsl
mull
cmpsb
mov
jnp
push
mov
lea
add
js
sarl
loope
test
imul
inc
mov
cmpsl
mov
mov
testl
in
fsubr
add
mov
out
stos
fisubl
test
jbe
inc
jge
jb
xchg
xchg
push
xchg
fs
das
sbb
sub
cmp
xchg
mov
pop
adc
mov
cltd
xor
repz
data16
shlb
or
xor
ds
sahf
and
push
jmp
mov
add
lcall
dec
add
stos
jmp
mov
rcl
xor
xor
divb
fcompl
nop
push
loopne
pop
iret
push
xor
lock
cmp
repnz
xor
lcall
in
call
xchg
out
mov
lret
inc
cmpsb
cmp
int
les
in
lret
cmp
pop
out
loopne
nop
imul
xchg
loopne
mov
pusha
les
pop
int3
ljmp
mov
lods
add
hlt
mov
test
jo
sub
pop
or
loope,pn
xchg
cs
dec
mov
test
cmp
mov
movsl
test
pop
xchg
or
ret
sub
sub
mov
sub
fwait
pop
movsb
outsl
jnp
insl
mov
cmpsb
out
or
dec
orb
aam
in
inc
lock
cwtl
imul
adc
push
scas
cmp
xchg
dec
test
push
mov
ret
cmp
test
das
push
stos
flds
push
sbb
sub
pop
sub
xor
jmp
and
imul
cmp
pushf
rcl
fstpt
inc
or
jo
imul
add
aaa
into
jno
icebp
push
pushf
push
xor
jo
stos
pop
lock
dec
imul
mov
fsubrs
mov
lcall
pop
fistpl
in
test
adc
inc
aas
mov
push
insl
adc
cmpl
jmp
mov
lock
addr16
dec
dec
and
aas
mov
push
ficoms
aas
lea
into
and
mov
pop
mov
rdpmc
xor
jnp
mov
mov
mov
jnp
outsb
lods
jmp
call
cli
mov
js
subl
outsb
push
xlat
bound
adc
cmp
fisubs
lds
xor
dec
lods
cmp
daa
mov
repz
iret
shrl
sahf
xor
in
fwait
pop
mov
xlat
int
xorb
xchg
aas
test
ljmp
lahf
or
rcl
cmpsb
cmp
mov
jb
sub
jecxz
dec
adc
adcl
cmp
push
ss
loopne
sbb
sub
shr
int
adc
data16
cs
mov
pop
jb
cmp
xor
xchg
mov
jne
addl
adc
int
cltd
test
jne
je
mov
push
mov
pop
mov
add
inc
add
es
mov
lcall
pop
mov
mov
pop
jle
mov
clc
std
fldcw
sti
jns
push
dec
out
movsl
pop
int3
flds
fcomps
mov
and
ret
cmc
push
mov
or
cs
inc
test
orb
orl
mov
or
addb
or
sub
add
xchg
pushf
mov
cltd
push
call
cmc
inc
call
mov
jp
fucomp
loop
aad
pusha
fildl
or
sub
mov
adc
xchg
fwait
push
pushf
stc
add
or
sahf
lods
jmp
iret
cmp
stc
fsubrl
jl
or
mov
data16
mov
inc
mov
test
lahf
repnz
popf
and
sbb
and
mov
xor
xchg
mov
dec
push
jmp
and
scas
xor
neg
jp
lea
test
in
mov
mov
shlb
xor
cmp
scas
jo
loopne
pop
sahf
add
es
or
inc
adc
sti
subb
imul
push
fwait
cmp
cltd
popf
out
scas
inc
stc
pop
cltd
das
leave
xchg
inc
ljmp
sub
dec
popf
pop
inc
insb
inc
fstpl
xor
test
mov
out
js
jg
add
inc
notl
iret
adc
imul
test
lret
sbb
mov
mov
xor
das
fdivs
push
loope
pop
lret
rolb
mov
imull
test
adc
outsb
out
cld
mov
and
fwait
bound
xchg
mov
enter
shrb
xor
sbb
or
lcall
and
sbb
enter
fimuls
repnz
dec
movsl
rcl
and
in
push
mov
sub
lds
mov
mov
icebp
pop
cmp
push
aaa
and
movsl
push
sti
fstenv
fs
cmpsb
add
push
xchg
sub
rep
mov
cwtl
mov
inc
adc
lock
push
js
ljmp
mov
pop
xchg
ljmp
in
cmp
pop
jg
bound
inc
arpl
jbe
enter
repz
pop
mov
xchg
push
mov
xor
lds
shrb
sbbb
mov
sbb
pop
roll
gs
push
sahf
mov
ja
imul
int3
test
popf
xor
lret
ret
add
das
in
lret
pop
fcompl
mov
add
adc
cmp
pop
fcmovb
xor
aam
rolb
and
pop
jl
fucomip
lock
out
cli
xor
or
cmpsb
pop
daa
mov
dec
stc
int3
lret
sub
pop
data16
inc
jp
fstpl
shll
cmpsl
jp
arpl
scas
fs
ret
lods
sti
push
fcomp
mov
sarb
icebp
cmp
arpl
and
jp
cmp
push
jae
inc
stos
inc
jne
scas
fstpl
aas
mov
popf
outsb
xrelease
mov
xchg
pusha
and
cmpsl
insb
push
inc
call
cmp
mov
jbe
mov
fistl
add
into
jmp
xchg
lcall
dec
out
and
jmp
fisubrs
aad
mov
fisubrs
in
pop
movsb
xor
lock
inc
std
dec
sahf
push
sti
jo
push
cmpsb
dec
test
lods
mov
mov
sarb
icebp
sub
cltd
or
pop
sahf
add
xor
repz
or
cld
gs
mov
sub
jno
xor
xor
fisttpll
iret
push
cs
ljmp
adc
loopne
sub
pop
sub
cmpl
jge
das
dec
loope
in
pop
or
nop
xor
sbb
stos
mov
inc
loope
pop
add
cwtl
pop
mull
or
xor
xorb
aaa
adc
dec
sti
stos
inc
clc
nop
rcrb
mov
loopne
sub
mov
pop
movsl
enter
mov
jb
adc
inc
mov
mov
loope
fidivl
inc
mov
das
arpl
movq
cmp
inc
lahf
cmp
cmp
lods
das
jl
movsb
inc
ja
subb
sbb
xor
jo
push
or
xor
mov
lods
and
push
aas
lock
mov
xor
cld
and
dec
pushf
ja
sub
inc
mov
sub
cld
aad
insb
and
cmp
sbbl
dec
cmc
dec
mov
lret
or
test
xor
jnp
lcall
outsl
inc
mov
faddp
pusha
jl
inc
cmp
popf
mov
fidivs
int3
sub
mov
sbb
or
sub
jl
add
sub
push
leave
fcompl
inc
inc
inc
js
xor
jns
inc
pop
cltd
cmpsl
adc
mov
test
stos
xor
popf
xor
xor
mov
push
xor
daa
sub
sub
add
pop
in
jae
or
iret
sub
je
scas
inc
arpl
sahf
clc
daa
xorb
or
cmp
and
xchg
das
xchg
sbb
mov
out
rep
clc
sub
ja
xor
jno
cmp
and
sahf
mov
repz
sub
mov
xor
sbb
mov
imul
pop
pop
add
xchg
push
in
daa
arpl
cmp
xchg
jp
and
mov
testb
cld
lods
ds
mov
imul
loop
xor
repz
inc
pop
repz
orb
stos
or
adc
js
fwait
cmpsl
jmp
mov
jbe
ja
cmpsl
mov
push
icebp
add
pusha
sub
aam
inc
sarl
xor
popa
cmc
insl
enter
mov
cs
rcrb
cmp
aad
xor
adc
mov
es
lods
test
in
xchg
int
shlb
push
jb
dec
jmp
jnp
xchg
prefetcht0
sbb
test
loop
xchg
sub
adcl
mov
mov
jae
cmp
push
and
fucomp
call
fucomp
in
out
sub
inc
mov
sbb
adc
pop
cmpsb
pop
pop
sub
lods
icebp
andb
mov
fsubrl
in
inc
fsubrp
xor
movsb
inc
cmp
clc
loop
sub
sub
and
push
xor
mov
rcrb
mov
adc
cld
xchg
xor
push
std
mov
xchg
lahf
daa
les
sti
fwait
stc
dec
xor
dec
fs
mov
inc
jecxz
add
je
dec
movsb
jae
aad
mov
jle
sub
popa
test
sub
xor
rcl
xchg
xor
pusha
pop
jmp
js
inc
xchg
inc
pop
int3
pop
sti
xchg
xor
jb
push
push
push
shrl
rcrl
lret
cmp
adc
ss
jae
test
scas
jmp
int
testb
dec
out
pop
push
ljmp
jno
pop
out
xlat
movsb
sti
or
test
pop
cmc
cmc
icebp
mov
stc
adc
in
lcall
xchg
sbb
test
lret
cld
repz
cs
adc
inc
add
insl
repnz
or
push
rclb
ret
mov
lds
push
movsl
popf
aaa
pop
mov
push
or
pop
mov
add
dec
pop
or
imul
dec
loope
dec
or
aas
popf
push
push
or
xor
aaa
stos
lcall
das
data16
popa
arpl
jne
pop
cwtl
inc
lods
inc
orl
push
cmc
lods
arpl
jns
add
nop
sub
das
aas
cmc
mov
rcll
xchg
mov
pop
fisttpll
mov
adc
add
fdivl
ss
sarb
lods
loop
sti
cmp
xchg
aad
adc
pop
jecxz
cli
sbb
sbbl
lds
adc
adc
mov
test
mov
shlb
pop
inc
and
mov
and
xchg
mov
push
or
sbb
push
lds
dec
in
fldcw
ja
sbbb
lret
ljmp
insb
out
popf
int
addr16
addr16
ss
xchg
test
js
mov
mov
jbe
cmp
jg
add
cmp
push
scas
cmp
aam
pop
xor
jp
sub
or
or
jne
xchg
ljmp
call
sub
mov
jecxz
adc
stos
xlat
xchg
or
stc
or
loopne
xor
fiadds
cmp
mov
ret
outsb
mov
sbbl
popa
jmp
ss
mov
pop
mov
cld
jae
jecxz
pop
aam
xchg
cmp
inc
orb
dec
jmp
push
mov
sub
enter
cmpsl
mov
inc
fucomip
std
dec
jmp
jp
repz
mov
outsl
jo
push
shrl
mov
add
out
icebp
mov
outsl
fsubr
jl
xchg
cmpsb
cmp
dec
popa
les
outsl
test
loop
or
ds
adc
mov
mov
dec
mov
int3
fimuls
xchg
xchg
bound
pushf
jnp
cmp
xchg
stos
mov
int3
sbb
mov
push
imul
pusha
adc
out
subb
test
pop
imul
jp
adc
mov
pop
lods
xchg
mov
sbb
pusha
outsb
cmp
inc
mov
out
pop
dec
sub
push
popa
test
add
leave
xor
call
pop
mov
pushf
and
adc
xchg
dec
jns
rol
adc
mov
add
ret
aaa
add
cs
or
mov
rep
ret
loopne
mov
scas
push
mov
aas
push
and
push
fs
rclb
cmp
test
ja
xchg
cmp
xlat
icebp
lret
int
mov
adc
inc
jbe
nop
test
fadd
pop
cmpsb
pop
scas
xlat
lds
adc
xchg
cmpsl
xor
adc
xchg
cmc
sbb
cmpsb
mov
mov
xchg
mov
call
and
mov
fiadds
jp
sbb
popf
sbb
aas
outsl
mov
push
out
mov
mov
or
xor
inc
rcl
xchg
sbbl
xor
int
sbb
stos
xchg
sub
lahf
ss
in
sti
bswap
fsubs
es
out
mov
insl
add
xor
subb
cmp
sub
push
sbb
pop
icebp
sbb
je
lcall
in
andl
scas
fmul
in
cmp
cmc
mov
xor
adc
bound
mov
add
sahf
subb
xchg
xchg
sub
push
ja,pt
jae
add
push
in
and
jae
test
test
and
out
cs
sub
sahf
push
lret
lahf
and
out
dec
cs
daa
bound
lods
mov
mov
dec
movsb
mov
repz
cmpl
inc
push
mov
sub
inc
sbb
dec
add
repnz
dec
addr16
iret
incb
push
cltd
sahf
iret
sahf
sub
mov
andb
jmp
mov
enter
push
fisttpll
add
les
insb
mov
es
mov
in
testb
aad
stos
test
loope
pushf
pop
int
add
jge
mov
das
adc
call
shll
arpl
and
lds
div
shlb
pop
cwtl
sbb
icebp
xor
jne
or
xchg
or
lods
adc
xorb
add
nop
das
xchg
mov
inc
sub
cli
xchg
cmp
sbb
and
sbb
sti
xor
js
test
out
push
xchg
xchg
mov
mov
adc
loopne
pop
jne
sub
popf
and
jae
adc
add
cs
loope
decb
mov
sahf
je
or
jl
pop
insl
jnp
or
ds
dec
lods
movsb
jl
es
push
in
jne
in
test
mov
hlt
pop
or
inc
ret
jmp
xor
xlat
clc
pop
or
jae
sahf
cmp
lods
or
xor
sub
bound
popf
enter
jmp
enter
pop
cld
sub
and
sar
idiv
stos
std
sarl
int3
test
lret
xchg
lock
movhps
pop
jo
js
jnp
jnp
mov
mov
mov
xor
ds
add
inc
push
ljmp
jno
test
lret
fwait
dec
add
push
or
fwait
rorb
sbb
adc
scas
inc
mov
fwait
dec
loopne
lcall
add
test
mov
aam
jmp
dec
dec
jne
insl
sub
lahf
roll
jecxz
or
and
ficomps
subl
mov
lods
pusha
cld
sub
dec
or
mov
scas
lea
pop
test
lock
mov
test
xchg
jo
imul
mov
ret
mov
adc
dec
fisttps
and
fwait
add
and
ljmp
ss
cvtps2pi
mov
testl
leave
xor
pop
fisttps
in
es
mov
out
lret
bound
ljmp
cs
mov
mov
cmpsb
loopne
out
push
lea
outsb
movsb
idivb
nop
fiaddl
sbb
addl
stos
pop
movsl
leave
fisttpl
cmp
mov
mov
insb
jle
fstl
pop
xchg
mov
insl
xchg
pop
scas
cmc
test
in
adc
mov
mov
and
arpl
jmp
mov
ss
push
inc
push
fnstenv
fisttpll
inc
sti
icebp
loop
or
jne
clc
nop
or
cmp
call
int
push
addr16
sbb
inc
sbb
and
faddl
es
cmpsb
sub
pop
sbb
ss
cli
mov
mov
cs
xor
test
mov
mov
inc
lods
jbe
insb
dec
ja
adcb
mov
jmp
inc
adcb
imul
outsl
inc
mov
jge
lods
rol
push
add
ret
popf
mov
in
and
jmp
jne
jne
test
xor
sbb
iret
adc
int3
mov
push
ret
test
push
ja
mov
scas
xchg
pop
shl
scas
cmp
inc
outsb
jle
inc
push
ret
mov
add
mov
out
sbb
pop
imul
add
aam
mov
push
xchg
jle
hlt
cli
inc
mov
sahf
roll
jo
add
shlb
aad
xchg
ucomiss
push
jmp
lret
cmp
add
inc
jbe
push
imul
add
cli
lea
or
ficoms
adcl
jno
pop
addr16
xchg
sarb
imul
shrl
xor
cld
nop
add
inc
jecxz
out
xchg
push
mov
push
jge
iret
divb
jne
push
and
or
pop
mov
addb
push
jae
push
sti
pop
ja
mov
sub
xchg
pusha
sub
popa
out
xchg
jg
or
and
pusha
xchg
sub
xchg
sbbb
jecxz
add
dec
lock
stc
mov
test
or
fstpl
and
add
push
cmp
sahf
iret
call
in
imulb
cltd
test
dec
fldl
das
daa
sbb
inc
fstpt
xlat
bound
mov
stos
js
xchg
inc
jge
mov
popf
xor
std
out
stos
inc
loopne
sub
or
pop
sbb
insb
push
dec
sub
aam
fnsave
mov
pop
adc
or
or
mov
mov
cmp
push
lods
std
adc
lods
jmp
push
adc
addr16
xchg
cwtl
sbbl
xlat
pop
xor
lock
or
test
xor
pop
dec
in
mov
das
in
sbb
and
pop
cmp
sbb
push
cmpl
scas
scas
pop
xchg
stos
rcll
sbb
aad
jle
ja
rcrl
jmp
rorb
cmpsl
pop
cmp
insl
cmp
cli
mov
pop
inc
rcrl
sbb
into
dec
dec
mov
and
xor
sahf
inc
mov
jns
fidivrl
pop
lret
pop
fwait
movsb
jecxz
xor
cmp
scas
push
aam
cmp
and
popa
movsb
sbb
and
pop
lret
stc
push
les
or
add
mov
ret
enter
mov
cltd
movl
mov
shll
lods
das
jp
popa
into
jl
fcmovbe
test
insb
or
pop
mov
push
rcl
xchg
push
cld
pop
mov
or
push
push
sub
fidivrl
shrb
dec
test
jecxz
or
mov
call
dec
dec
js
add
icebp
jno
jl
xchg
pusha
jp
pop
cli
dec
dec
jmp
inc
lcall
dec
inc
insl
loopne
pop
ljmp
mov
test
lret
enter
sub
lret
mov
push
push
test
mov
loope
fcom
inc
ret
ret
scas
shll
imul
out
xchg
nop
xchg
ret
cmovle
jno
into
and
imul
mov
ret
pop
ljmp
out
out
push
fwait
es
lods
inc
arpl
sbbl
adc
gs
sbb
push
pop
sbbl
pop
and
dec
aam
stos
es
pop
into
mov
sub
outsb
shlb
iret
loope
sub
aam
sbb
in
mov
add
sbb
jno
jne
pop
xor
or
loopne
and
jne
out
je
stos
xchg
cmp
addr16
inc
pop
sbb
mov
outsb
dec
jnp
int
fisubrl
iret
lods
fldt
jge
jl
repnz
xchg
and
imul
mov
xchg
sub
push
mov
ss
fwait
lahf
notl
stc
add
mov
xchg
add
push
inc
popa
add
mov
in
xor
pop
scas
sub
mov
jae
cld
cmp
decb
sbb
sbb
arpl
lods
js
insl
inc
loop
je
adc
and
cmpsl
add
push
mov
iret
dec
sbb
negb
xchg
cs
shlb
out
and
fst
stos
and
xchg
push
les
mov
cmp
or
into
lcall
sub
or
sub
jle
in
xchg
pop
xchg
lds
dec
test
pop
mov
pusha
fidivl
popf
aas
add
arpl
mov
inc
sbb
sub
lret
negb
jecxz
test
sub
lds
hlt
mov
in
sti
xchg
mov
pop
add
or
inc
cmp
mov
out
shrb
add
sub
loopne
cwtl
adc
test
jae
leave
push
sbb
rcrb
and
add
mov
jae
and
shll
clc
sub
push
jl
iret
out
jo
mov
jnp
lcall
mov
das
mov
cli
xchg
cmp
fcomps
das
adc
movsb
decl
jbe
mov
sub
mov
push
push
jge
addl
or
jle
adc
mov
dec
dec
xchg
inc
int3
dec
and
pop
mov
xchg
pop
mov
and
outsb
jns
cld
xchg
outsl
push
or
fstpt
adc
dec
in
jo
shll
jg
int
mov
mov
xchg
xchg
xlat
rol
or
pop
pop
imul
and
addb
negl
movsb
cmp
lea
aam
and
mov
sbb
mov
or
mov
add
pop
xor
and
adc
push
mov
repnz
mov
mov
mov
stos
popa
daa
push
and
popa
inc
pop
shr
cwtl
xor
cmp
cwtl
shlb
cmp
or
xor
mov
imul
aam
jae
add
dec
pop
sbb
pop
pop
mul
jl
lahf
lods
add
stos
stos
pop
icebp
fcomi
cld
sbb
xchg
xor
pop
inc
hlt
push
mov
xchg
mov
jecxz
push
movsl
pushf
mov
movsl
fucomp
push
inc
gs
inc
mov
movsl
cmp
aas
outsb
cmc
pop
cmp
pop
fs
xchg
loope
stos
mov
shrb
mov
push
pop
mov
loopne
fdivp
xor
data16
inc
xchg
and
add
mov
loopne
aad
add
xor
js
pop
add
mov
jg
mov
jbe
sub
fwait
lahf
iret
gs
mov
adc
inc
arpl
push
in
jns
mov
rorl
in
icebp
cmpsl
fsubr
sub
xchg
xchg
adc
pop
ret
ret
jnp
fdiv
xchg
sub
insl
dec
dec
les
dec
and
push
fucom
bts
xchg
dec
inc
popa
dec
das
mov
mov
arpl
jo
scas
movsl
cld
pop
sub
push
inc
cld
cmp
mov
scas
arpl
enter
into
orl
xor
jno
sub
pop
pop
push
jmp
jnp
mov
ds
jae
fcomps
cmp
mov
das
lcall
int3
xor
movsb
in
mov
jbe
je
sahf
jo
pop
sub
loop
enter
ret
lret
out
adc
pop
sub
push
jb
sbb
mov
shrl
fs
test
xchg
pop
sub
add
ljmp
ljmp
mov
sti
mov
jne
lds
iret
or
jae
cmpsb
outsl
xchg
inc
jae
fucom
repnz
and
clc
jp
sub
xchg
imul
add
js
dec
imul
js
out
stos
mov
cmp
push
lock
push
icebp
dec
pop
adc
or
add
stos
out
and
sbb
mov
push
dec
dec
hlt
inc
fisttpll
scas
cmp
cltd
or
loop
or
dec
out
adc
dec
test
pushf
or
pop
loopne
xchg
vmovdqu
sbb
jp
in
jo
fwait
js
push
iret
mov
pop
test
lods
pusha
cmp
mov
ljmp
sbb
aas
jns
and
dec
mov
add
xchg
arpl
aam
movsbl
std
inc
mov
adc
fsubs
sarb
sbb
mov
notb
pop
shrb
xor
dec
std
cmp
mov
mov
push
inc
or
pop
movsl
push
jle
pop
dec
cwtl
jge
lret
xorb
int
mov
lock
cli
xchg
cmpsb
dec
popf
lock
inc
mov
inc
fcmovnbe
add
ret
stos
xchg
cmp
jne
dec
cmpsl
mov
and
cmp
aas
mov
dec
add
mov
aam
lea
stos
jmp
inc
jp
test
gs
pushf
pop
in
dec
jne
in
cmpsb
imul
stc
mov
inc
test
lea
mov
je
xorb
dec
pop
push
test
ljmp
in
mov
pushf
push
test
dec
pop
ret
inc
fnstsw
dec
jo
pop
xor
mov
in
jmp
cld
ja
ret
imul
int
mov
mov
repnz
in
jns
adc
rol
fs
mov
int
cwtl
das
xor
lock
sbb
imul
sub
cmpsb
les
inc
jp
cld
inc
push
shrl
pop
repz
xchg
push
pop
lahf
cli
roll
mov
lock
push
and
sub
inc
enter
dec
inc
pop
out
aad
dec
adc
pop
push
and
arpl
lods
andb
pop
push
mov
dec
push
push
jle
and
lret
jne
mov
repz
loop
scas
adc
imul
sub
addb
xor
mov
popf
sub
rolw
out
movsl
push
pop
and
push
sbb
clc
aaa
pop
icebp
mov
dec
out
and
insl
inc
jb
add
mov
js
push
and
test
js
xchg
mov
fnstenv
orl
pop
lock
gs
imul
into
gs
sbb
cmp
xchg
iret
xor
adc
out
shlb
das
repnz
mov
xor
sub
cmp
mov
ss
in
cld
xchg
lods
pop
ret
sahf
aaa
addb
into
dec
test
mov
jge
pop
cmp
test
std
mov
mov
leave
pop
lock
xchg
mov
js
imul
pop
movsl
or
pop
es
insb
dec
out
pop
ds
sbb
sti
fdivs
add
enter
outsl
xchg
pusha
jmp
cwtl
pop
mov
pop
pop
jg
add
mov
cmc
int3
sub
mov
xor
or
popf
je
mov
mov
xchg
mov
mov
insl
add
fildl
shrl
leave
scas
lds
test
insl
or
dec
xchg
lods
js
adc
cld
pop
das
stos
mov
cmc
jecxz
daa
mov
mov
fs
rol
rorb
push
popa
pop
mov
nop
sub
rol
fisubrl
ds
mov
mov
es
mov
xchg
mov
push
and
xchg
sti
jo
inc
cmpsb
xchg
dec
xor
jg
shlb
rcll
pop
je
jmp
push
inc
fldcw
inc
inc
fscale
mov
add
push
cmp
fmuls
pop
je
pop
xchg
xchg
xchg
mov
hlt
shlb
mov
and
gs
lcall
mov
cmp
mov
add
in
add
jecxz
lds
and
or
pop
fs
push
dec
cmp
sub
call
dec
gs
movsb
mov
test
into
aas
lret
adc
cmp
inc
in
bound
xlat
cli
sub
movsb
shl
ds
int3
test
clc
test
sbb
mov
xchg
mov
mov
std
test
loope
or
mov
mov
adc
icebp
jbe
dec
fsubp
adc
daa
inc
std
loope
mov
faddl
dec
mov
and
scas
fs
cmpsl
add
adc
addl
adc
lahf
scas
jb
adc
pop
outsb
push
and
xor
push
js
sbb
jl
xchg
or
insb
addb
push
shlb
jp
sbb
fwait
and
roll
adc
inc
lods
lods
sbb
pusha
jp
cwtl
nop
mov
outsb
mov
mov
dec
dec
pusha
call
loop
lahf
sahf
les
mov
enter
out
hlt
add
ljmp
cmp
sbb
xor
adc
hlt
cmc
int3
mov
int
fsub
xchg
jl
cmc
add
cs
jmp
dec
lods
push
test
push
mov
nop
outsl
jge
test
xlat
push
shlb
pusha
es
cwtl
xchg
sub
inc
or
mov
pop
jns
dec
xor
stos
scas
xor
lret
jno
mov
pop
xchg
sub
call
xchg
mov
inc
loopne
fldcw
xchg
mov
push
sti
adc
xchg
insl
cmpsb
push
stos
add
hlt
xchg
mov
shrb
add
dec
ret
add
lcall
gs
and
xchg
out
cld
not
xchg
and
sti
jne
aad
adc
mov
shrl
add
scas
mov
sub
mov
sbb
adc
add
and
aaa
testl
out
loop
inc
mov
jne
jp
ficoml
xchg
fsubrs
lods
dec
je
mov
pop
icebp
sti
xchg
int
insl
push
gs
jg
dec
inc
pop
icebp
outsb
popf
pop
jne
xor
sahf
sbb
movsl
cmpb
mov
sti
or
xchg
add
test
and
nop
sbb
sub
sahf
lcall
mov
mov
pushf
in
lahf
popa
cwtl
and
cmp
pop
mov
jge
jnp
mov
add
rol
sub
leave
int
hlt
lds
fistps
dec
addr16
jnp
sub
test
inc
subl
cmpsb
shlb
mov
mov
adc
lret
xor
cmpsb
push
ret
fldl
mov
inc
rcrb
adc
scas
xor
xor
addr16
test
lods
and
jns
jnp
lods
loop
sbb
xchg
mov
fnstsw
fnstsw
fildll
dec
xor
xor
mov
sbb
lds
imul
push
pop
push
add
jg
mov
iret
pop
inc
pop
ret
push
xor
jno
dec
lret
fstpt
add
sub
insb
lods
mov
lahf
divl
jb
mov
stc
fs
insl
sti
push
cltd
xor
fwait
hlt
or
sbb
call
and
jo
adc
add
sbb
mov
inc
pop
push
scas
lds
push
cmp
shll
aad
xchg
mov
push
xor
cmp
or
push
xchg
fucomip
and
xor
fistps
mov
dec
out
xchg
leave
fs
cmc
adc
inc
sbb
lahf
loopne
mulb
adc
mov
imul
aad
push
push
or
push
shlb
adc
add
xchg
sahf
repz
cwtl
movsl
xchg
push
jg
lret
pop
cmpb
add
call
lods
inc
xchg
inc
sub
mov
pop
xor
dec
pop
pop
pop
pop
repz
aam
ljmp
sub
in
push
sbb
dec
stc
inc
push
or
gs
sbb
sbbb
mov
pushf
pop
cmp
mov
inc
hlt
movsb
std
jge
fstps
cli
push
hlt
cmp
rolb
add
add
dec
in
lahf
xor
rolb
out
js
dec
out
test
inc
nop
or
ljmp
pusha
cmp
cwtl
scas
outsb
mov
fistpl
mov
mov
pop
xchg
out
sub
cmp
mov
gs
aaa
sarl
and
mov
arpl
pop
inc
out
adc
ret
and
rcrl
push
shl
sbb
or
sbb
or
stos
sbbl
xchg
mov
add
leave
sbb
ss
in
mov
pop
insb
fwait
push
adc
das
mov
loopne
iret
pop
and
push
lds
aas
xchg
fisttpl
xor
xor
je
cmpsb
es
sbb
inc
mov
jae
mov
je
and
add
inc
lods
pop
movsb
ss
xor
aaa
xor
stos
js
or
loopne
add
lods
inc
jl,pn
sbb
xor
push
cmp
sub
mov
sahf
imul
lds
repnz
nop
push
add
cmp
lcall
xlat
mov
sbb
sbb
lahf
mov
mov
int
push
ljmp
cmc
pop
sbb
movsl
adc
iret
jb
mov
mov
jae
dec
cld
xchg
dec
push
mov
stos
sub
jo
in
leave
push
fst
adcb
arpl
pop
mov
iret
movsl
mov
push
lret
cmc
cld
mov
and
ja
mov
in
repnz
mov
cmc
outsb
dec
jbe
mov
fcomi
leave
or
xlat
sti
nop
adc
sbb
test
aas
mov
fistpl
pop
cmp
js
lods
shl
sub
out
stc
xor
inc
insb
jl
sub
sub
mov
inc
or
xor
nop
mov
fisttps
sbb
sbb
pop
jno
loope
nop
add
mov
sbbb
cmpsb
sub
movl
mov
jp
sub
pop
mov
xchg
int3
aam
imul
jle
enter
mov
and
push
and
fsubr
bswap
lea
or
mov
mov
daa
pop
stos
andl
sub
es
lret
sbb
mov
loop
sub
shlb
sbb
rcll
repz
or
push
mov
in
jecxz
js
pop
icebp
adc
subl
negb
test
inc
or
mov
int3
or
clc
in
addr16
push
cs
lcall
mov
imul
out
jbe
or
mov
push
pusha
jl
mov
inc
pop
fwait
pop
jae
insl
cmp
add
add
xchg
mov
push
in
xor
test
pop
ficoml
into
sub
arpl
xor
jp
sbb
inc
loop
add
and
aas
mov
or
xor
sub
repz
lds
add
std
dec
push
call
ljmp
or
scas
sbb
aad
adc
xor
shll
xchg
pusha
inc
lds
xchg
push
and
in
cmp
loope
xlat
test
lret
test
in
mov
xchg
inc
jb
insl
add
add
adc
xchg
lock
dec
jecxz
adc
pusha
mov
push
mov
sbb
push
jbe
jae
cld
stos
popf
cmp
aad
mov
outsl
jge
or
mov
shrl
test
jne
cld
icebp
jno
xchg
hlt
out
iret
fnsave
jecxz
fidivrl
sbb
sbb
and
xor
jmp
push
mov
andl
push
push
mov
imul
mov
loope
adc
sbb
mov
imul
ljmp
enter
cmp
je
add
jg
push
sahf
aad
sub
push
jns
xor
push
mov
stos
mov
mov
xchg
je
xchg
mov
xchg
xchg
inc
mov
flds
or
xchg
inc
jp
fstl
das
push
mov
rcl
ret
push
mov
push
inc
int3
loop
arpl
out
cltd
xor
pop
xchg
rolb
fsubs
dec
test
fidivrl
push
jb
adc
fstpl
ret
xorb
outsb
mov
or
vpunpckhdq
stos
mov
pop
outsb
sbb
ret
sub
frndint
jno
or
je
lea
enter
push
fwait
data16
cmp
and
rorl
cmpsb
loopne
push
popf
in
imul
mov
push
rcrb
sbb
daa
jp
popa
cmc
xchg
dec
xchg
fsubrs
mov
xor
pop
aas
mov
jne
push
mov
or
nop
daa
aad
or
pop
pop
mov
aam
jmp
test
shld
daa
dec
fnstsw
int
pop
and
sar
incl
and
push
fidivrl
std
xchg
inc
add
jge
call
push
fdivl
mov
xlat
out
test
jae
idivl
mov
cmpsl
jnp
add
mov
lods
ficoml
enter
sbbb
jecxz
xchg
adc
xchg
jmp
pop
fiadds
pop
sti
mov
push
imul
dec
fidivrs
ja
sti
xchg
jmp
sbb
pop
jae
or
dec
sub
loope
xchg
pop
ret
repz
jne
mov
adc
rclb
add
dec
pop
and
inc
mov
pop
movsl
in
jmp
mov
stos
mov
adc
inc
fidivs
leave
mov
jp
out
inc
gs
loop
andb
jle
fwait
push
xchg
orb
xlat
aaa
adc
jl
pop
hlt
scas
inc
scas
subb
pop
insb
mov
push
mov
jmp
push
lcall
test
push
push
cmp
lret
cmc
add
push
jo
and
ret
outsl
pop
sub
jle
dec
mov
stos
rol
sub
loop
ljmp
sub
mov
popa
cli
add
cmpsl
inc
fidivrs
test
xchg
cmp
xchg
sbb
addr16
test
lret
int3
pop
insb
jns
push
hlt
sub
jge
lcall
aas
inc
jb
jne
cmpsl
jge
stos
push
push
or
push
mov
std
xchg
aas
push
lea
daa
mov
faddl
adc
adc
int
test
sbb
inc
dec
jo
push
xchg
rcrl
test
xchg
pusha
dec
xchg
out
add
scas
inc
iret
push
jmp
cmpsl
lahf
data16
pop
mov
ss
adc
jno
cmp
or
pop
inc
std
dec
jg
cmp
pusha
ret
repz
inc
out
push
cli
inc
cmp
mov
xor
enter
xorl
xor
mov
push
and
popa
jp
test
cmp
sahf
push
cmp
pop
cmpsl
test
clc
sbb
loop
xchg
add
fwait
cmp
loop
inc
out
xorl
pop
filds
scas
sub
jno
leave
andb
fisubrs
sbb
ja
xorl
notl
push
adc
push
hlt
sbb
adc
test
or
loop
notl
xchg
pop
jb
jne
xlat
fwait
call
hlt
jnp
gs
xchg
xchg
divl
in
loope
mov
mov
lea
jmp
sub
orl
repz
sbb
aad
stc
cltd
inc
idivb
xchg
sbb
sub
imul
adc
dec
iret
es
push
fs
jb
jg
xchg
rorl
push
sub
inc
push
jb
push
imul
jno
fs
int
pop
pop
mov
in
lods
xor
cmp
inc
mov
jmp
sti
mov
or
jmp
stc
rcr
pusha
pop
rcrb
sub
lock
cmp
inc
xor
in
xchg
mov
addl
mov
addl
pop
aas
outsb
cmpsl
sbbl
push
mov
outsl
jne
dec
push
movl
or
mov
mov
mov
ljmp
cmp
adc
pop
call
es
mov
gs
xchg
jle
imulb
pop
push
mov
or
sub
pop
mov
stc
xchg
pminsw
loopne
fldenv
lea
sub
aad
nop
stos
lea
stos
mov
repz
clc
pop
lcall
lcall
push
mov
xor
and
mov
fadds
pop
inc
rolb
sub
sbbl
dec
add
adc
movsb
popa
aad
jns
dec
mov
movsl
and
sbb
mov
mov
movsb
cmp
das
stos
push
addl
inc
lods
cmp
pop
dec
xchg
adc
out
sti
jno
mov
sahf
adc
in
mov
out
jmp
sarl
mov
test
test
push
mov
mov
ret
addr16
sti
cmp
adc
scas
mov
cmp
dec
push
mov
xchg
sub
into
into
test
decb
mov
or
ja
aaa
dec
dec
cli
cltd
jnp
adc
mov
mov
dec
popa
xlat
gs
imul
aaa
out
xchg
dec
jmp
ss
ljmp
mov
sbb
add
pop
push
es
inc
cmp
mov
or
push
cli
xchg
adcb
jnp
mov
mov
aas
shr
xchg
cwtl
in
fidivl
push
loope
sbb
lea
aam
dec
rcrl
mov
xor
xor
je
fwait
cltd
pop
cltd
push
jp
push
ljmp
cmp
push
push
xchg
stc
aad
jb
cli
xchg
jecxz
adc
clc
jae
mov
repnz
lcall
fiaddl
sarl
cwtl
sub
jge
mov
lret
lret
movsb
mov
in
fimuls
mov
xor
jns
dec
dec
roll
ds
jmp
and
xor
push
sahf
and
push
and
sahf
inc
and
orb
mov
fistl
jmp
enter
lock
mov
into
jge
fnstsw
das
repnz
sbb
movsl
add
loope
mov
pop
mov
out
fistps
fnstenv
out
xchg
nop
clc
xchg
dec
add
xchg
pop
xor
addr16
in
jp
jg
lods
sahf
xor
mov
mov
mov
jae
dec
and
cmp
xor
pop
mov
xchg
xchg
lret
dec
dec
or
adc
mov
js
xor
mov
sti
cmp
mov
and
fdivs
inc
in
or
add
jae
in
cltd
das
aas
xchg
std
aam
pop
sub
iret
int3
adcl
out
outsl
fwait
out
imul
popa
ret
sbb
in
push
scas
jg
lahf
je
pop
xor
push
add
mov
sub
cmp
dec
lret
inc
mov
sbb
pmulhuw
xchg
imul
sbb
in
sti
inc
xchg
fildll
xchg
mov
mov
into
adcb
sub
mov
cmp
xchg
and
xchg
stos
push
ret
int
mov
adc
push
out
and
roll
xor
insl
stc
inc
lock
mov
pop
or
xchg
push
lret
jmp
or
sbb
aam
or
xchg
lea
xor
jo
push
xor
jo
jo
xor
mov
add
sbb
fs
dec
mov
pop
ja
or
mov
xor
push
aas
push
lret
jp
gs
add
jae
pop
mov
in
mov
push
pop
pop
stos
mov
shll
repz
adc
int
pushf
mov
push
movsl
or
dec
xor
mov
cmp
sbb
fwait
out
stos
das
xchg
out
push
ficomps
ss
inc
mov
stos
rcll
xlat
cmpsb
sbb
insl
add
mov
pop
inc
fmull
lods
xchg
pop
scas
loopne
mov
xchg
xchg
daa
mov
mov
lods
push
or
inc
js
mov
cwtl
mov
std
and
pop
faddl
mov
leave
fnstenv
enter
repnz
arpl
clc
nop
daa
nopl
jns
xor
sbb
mov
pop
jp
aas
arpl
and
popf
dec
lods
mov
push
cmp
popf
jmp
xchg
test
in
push
mov
or
loop
leave
lahf
stos
lret
js
rcr
out
loope
movsb
dec
aas
jns
aas
jbe
test
jo
jns
push
mov
aaa
into
adc
inc
pop
xchg
mov
in
ja
inc
pusha
andl
jmp
ljmp
sub
cmp
cwtl
mov
jge
adc
pop
dec
stos
mov
inc
mov
mov
push
out
test
bnd
movsb
stos
std
jne,pn
cmp
jne
out
lods
cmp
loopne
mov
adc
arpl
scas
outsb
add
fimuls
sub
sub
add
lods
outsb
in
fiadds
sti
les
subb
mov
fstpl
rcrb
rorb
add
cwtl
sub
push
lcall
sbb
push
add
mov
stos
mov
xchg
xchg
shrb
in
popl
loopne
push
and
shlb
stmxcsr
pop
in
jbe
int
mov
pusha
sbb
push
mov
push
sbb
fwait
lds
jb
aad
cmp
jge
mov
cmp
or
testb
fisubs
mov
pop
orb
sbb
stos
adcl
or
rcrl
push
mov
mov
loop
add
mov
imul
inc
stc
mov
ret
and
popf
pop
xor
andb
fldcw
addl
das
call
adc
das
mov
shll
and
or
in
sub
dec
lret
sti
insb
or
ret
outsb
test
cld
inc
sbb
fists
cmp
leave
add
mov
xchg
push
push
xor
sbb
add
sarl
mov
fxch
xchg
mov
outsb
jp
cmp
hlt
fists
mov
pop
nop
and
clc
and
inc
leave
out
cltd
pop
addr16
inc
adc
arpl
mov
enter
xor
imul
xor
cmp
sub
push
pusha
push
sub
jle
jecxz
mov
xchg
sbb
lret
clc
mov
arpl
scas
dec
mov
stc
scas
pop
inc
sbbb
lcall
push
xchg
xchg
test
jecxz
lock
dec
popf
xor
ss
aaa
jbe
rcrl
cmpsl
jae
push
mov
mov
xlat
rcrb
mov
pop
adc
and
cs
jns
je
bnd
cld
push
mov
aam
popf
mov
and
int3
out
popa
dec
testb
daa
aad
dec
stos
mov
xor
lahf
sarb
pop
fwait
rcrb
sahf
clc
inc
lds
add
stc
cmp
into
fs
push
fwait
cmp
mov
jo
mov
xchg
cs
shlb
mov
mov
adc
movsl
and
adc
or
stos
push
scas
pop
ja
arpl
aaa
fwait
add
mov
lahf
cs
pushf
sbb
fstl
inc
xchg
repnz
sub
push
jno
repnz
cmp
and
ret
sarl
sarl
in
adc
imul
cmp
fiaddl
jl
push
push
testb
mov
stos
add
xchg
and
pusha
or
mov
insl
jo
sahf
out
xchg
mov
rcll
mov
pop
loop
dec
fucomp
mov
xor
or
or
jp
pop
xchg
ja
push
lret
in
pop
out
mov
aam
sbb
jecxz
iret
pop
sub
lds
test
push
into
push
les
lock
int3
or
cmpl
sub
incl
shll
pop
sbb
andb
mov
aam
mov
push
test
fldt
mov
fwait
cltd
int3
data16
shlb
into
xor
repz
mov
mov
jnp
mov
mov
inc
inc
or
mov
int3
dec
mov
loop
fcmove
mov
push
push
jl
data16
fldcw
xor
ds
mov
mov
sahf
fdivs
clc
push
or
test
inc
into
fists
xlat
imul
jb
andb
out
pushl
lret
test
sbb
imul
ret
ret
xlat
rcrb
fcoms
mov
dec
sub
stos
popf
push
jmp
into
sub
jnp
pop
jmp
mov
push
sub
in
mov
sub
push
fwait
lock
fistpll
cmp
rcrb
nop
pop
in
shl
inc
xchg
sahf
lock
mov
popf
pop
outsl
jnp
sbb
int
or
and
lock
pop
fiaddl
sahf
mov
cmpsl
xchg
pop
mov
ffree
pop
lds
jecxz
test
fwait
xor
cmp
mov
test
add
or
jmp
mov
mov
sbb
int3
popa
mov
xchg
adc
pop
jge
add
sbb
mov
cmp
sti
mov
inc
out
sub
aad
xor
lods
sub
pop
xchg
push
sbb
insl
and
jbe
inc
push
cmpsb
cmp
stos
add
jp
push
aas
out
pop
sub
adc
dec
rcrb
mov
popa
movsb
or
push
imul
push
fs
out
mov
mov
add
call
sub
daa
notb
add
in
arpl
add
ficoml
inc
roll
pop
mov
dec
aaa
pop
mov
mov
cmp
xchg
pop
pop
ds
xorl
jb
mov
or
in
adc
movsb
mov
xchg
iret
mov
ficompl
out
xchg
mov
daa
xchg
les
mov
and
inc
scas
sub
enter
adc
in
xlat
add
xor
fstps
xor
scas
fnstenv
out
push
test
jp
mov
bound
cld
mov
cwtl
inc
outsb
ret
les
pop
jp
rolb
cli
xchg
rcrb
lods
fnstsw
pop
add
inc
scas
bound
ljmp
mov
jno
xor
outsl
cmp
mov
mov
nop
lock
cmp
push
xor
push
adc
mov
pop
fbld
xchg
insb
aad
mov
or
mov
ljmp
mov
and
inc
push
ret
popf
outsl
push
lret
and
sbb
mov
pop
push
mov
fnstcw
fildl
push
loope
lods
call
loopne
push
sub
sbbb
scas
mov
stos
addb
test
fdivl
movsl
rcr
mov
in
mov
and
mov
push
jl
add
ds
imul
loope
inc
daa
arpl
outsb
enter
dec
lret
xlat
jbe
adc
imul
xchg
inc
insb
xchg
js
in
add
dec
insl
cmc
jle
bound
add
add
frstor
shlb
mov
fldln2
mov
cmpsl
sub
jns
inc
and
fs
jne
movsl
add
movsl
leave
jl
cmp
mov
lea
pop
cmpsb
cmp
jns
andl
mov
mov
mov
cmp
or
cmp
rcl
push
shll
faddl
adc
xchg
std
lcall
pop
mov
arpl
and
push
rclb
mov
jg
dec
test
stos
repnz
es
mov
shrl
std
mov
pop
jmp
call
aas
mov
rcrb
pushf
jbe
rcrb
ds
and
adc
rolb
mov
push
aaa
mov
hlt
int
adc
out
icebp
imul
pop
and
adc
clc
xchg
rol
inc
lcall
adc
das
add
mov
int3
sub
outsl
mov
ljmp
push
sti
into
mov
jne
popf
pop
or
xchg
cmp
mov
pop
pop
ret
sbb
sub
pop
pop
sub
daa
scas
lds
mov
mov
and
mov
pop
xchg
test
lock
lcall
cwtl
testb
sbb
ljmp
xchg
call
test
and
fwait
cmpsb
testl
mov
out
adc
inc
dec
cmpl
loope
xor
adc
lock
xor
adc
xchg
xor
adc
mov
faddl
pop
push
xlat
fstpl
arpl
int
push
cmp
pushf
repnz
add
cmp
sbb
cwtl
jne
mov
in
add
xchg
dec
jg
jmp
inc
movsb
repnz
andl
mov
shll
jno
sbb
and
filds
ljmp
sub
add
push
push
test
xchg
adc
or
mov
int3
jecxz
cmc
inc
pop
sub
lahf
bound
jae
cmp
fisubs
pop
jbe
test
adc
dec
mov
fcomi
xor
xor
inc
mov
jb
jmp
push
fnsave
xchg
adc
testl
es
inc
dec
add
lock
rclb
adcl
adc
xchg
xchg
repz
dec
mov
mov
fsubs
sbbl
orb
jle
arpl
sub
out
pop
inc
push
or
repnz
jg
or
test
mov
and
jb
jb
mov
lcall
mov
cmp
testl
stos
sub
rcll
dec
popf
outsl
jo
push
add
lods
jbe
mov
lret
or
adc
push
imul
cmp
jno
mov
pop
add
mov
fstl
cld
add
pop
sti
inc
in
and
jmp
mov
or
mov
xor
insl
mov
lahf
jbe
pop
dec
or
pop
mov
popa
sub
faddp
pop
adc
lea
test
loop
mov
push
insb
push
mov
outsb
push
push
sbb
inc
sub
dec
in
and
jp
push
pop
sbb
or
pop
rclb
and
dec
cwtl
inc
ror
jecxz
and
inc
fnstcw
daa
imul
jne
fidivrl
inc
lret
imul
out
pop
lret
scas
push
mov
es
aaa
into
mov
push
pop
ja
mov
ret
outsl
repz
add
aad
mov
adc
xchg
sub
pop
ljmp
js
inc
mov
and
adc
pop
cltd
push
das
mov
mov
push
stos
outsl
adc
adc
or
inc
outsl
les
les
add
icebp
xchg
xchg
pop
or
cmp
sbb
icebp
out
add
push
stos
cwtl
imul
leave
fdivs
sbb
cmp
lods
sub
bound
adc
jp
adc
in
add
jl
adc
xor
pop
lds
xlat
sub
jbe
dec
mov
mov
xchg
jl
push
xchg
sbb
cmp
dec
in
ret
mov
fsubrs
mov
jno
leave
bound
xor
adc
fwait
pop
mov
lret
xor
cmp
jo
xor
popf
dec
lods
mov
fcoms
sbb
lds
push
add
mov
ror
xor
rcl
add
bound
xor
ss
jmp
or
imul
adc
or
in
dec
lods
hlt
or
lcall
mov
aad
push
sub
les
add
gs
inc
loopne
pop
lods
les
xlat
cmpsb
mov
into
sub
cmp
pop
loopne
subb
lcall
dec
mov
popf
jb
rcl
out
in
cli
mov
mov
test
sbb
orl
mov
fisubs
ja
add
sub
xor
fwait
mov
inc
lock
cwtl
jae
cmp
arpl
addr16
jecxz
mov
ror
xchg
or
dec
jmp
jns
lret
xchg
jnp
dec
jecxz
sbbb
jecxz
mov
mov
out
test
mov
xorb
cli
sbb
pop
jo
mov
jle
sub
cmp
jge
inc
xor
nop
cwtl
testb
out
xchg
jg
xchg
sub
push
pop
mov
idivb
pop
das
adc
cmp
push
das
clc
ja
mov
jno
inc
jmp
adc
jb
icebp
outsb
in
xchg
push
pushf
sbbb
push
pop
cmp
pop
xor
rcll
sbb
outsb
mov
jne
inc
cs
push
mov
int
lret
addr16
inc
sub
dec
or
int3
fwait
cli
sbb
xchg
leave
push
pop
and
xor
fdivs
xor
jecxz
adcb
cmp
stc
hlt
dec
push
jae
and
mov
in
push
adc
fwait
nop
int3
and
shll
mov
sahf
inc
fldl2t
fldt
movsl
rol
mov
cmp
jecxz
sbbb
and
daa
cs
mov
inc
jle
dec
xor
inc
lret
mov
dec
bound
rcrb
sbb
and
mov
sbb
xor
dec
hlt
pop
xchg
repnz
rcl
sub
fwait
repnz
shll
or
xchg
xor
mov
sub
mov
push
aas
cmpsb
mov
fimull
dec
jg
lss
dec
dec
add
or
sub
cmpsl
and
cmp
mov
fstl
cmp
sub
test
add
rorb
and
ror
jg
xchg
stos
or
out
mov
sbb
dec
and
sbb
mov
das
inc
ss
jo
lret
and
pop
scas
cmpsl
popf
scas
dec
or
and
rcll
es
xchg
push
xor
int3
fwait
pop
mov
dec
and
jo
jno
push
xchg
add
test
cmp
pop
aam
lcall
cltd
sub
pop
lock
mov
insb
mov
push
or
ja
scas
jae
or
repz
cs
gs
xor
push
sub
mov
aad
sbb
out
xchg
lods
mov
mov
sbbb
jb
mov
xchg
scas
cmp
loope
xchg
pushf
add
mov
fnsave
iret
dec
daa
inc
scas
fbstp
adc
pop
outsl
push
jbe
je
movsb
and
mov
in
xor
cmpb
fcomps
xor
dec
loop
push
jo
push
pop
insb
ror
bound
in
dec
and
adc
repz
and
repz
inc
mov
inc
dec
fwait
mov
leave
pop
out
sbbb
xchg
pusha
imull
push
jg
insb
sbb
mov
and
jnp
loopne
dec
cli
cli
fwait
xor
adc
add
mov
jge
mov
stc
cltd
xchg
daa
push
add
mov
nop
ljmp
pop
xchg
daa
inc
lock
sbbl
add
out
in
jns
leave
mov
lret
sti
or
fadd
sbb
mov
testb
xor
mov
cli
xor
mov
mov
cmpb
sbb
inc
push
aaa
aas
test
add
lahf
shrl
push
lods
dec
add
xor
mov
repnz
mov
and
clc
xrelease
ss
jmp
dec
arpl
dec
data16
out
mov
dec
jle
lahf
aas
mov
add
adc
or
xor
dec
sarb
adc
or
aam
ret
push
inc
fs
mov
add
insb
dec
orb
scas
push
sbb
ljmp
cmp
xchg
xchg
add
mov
adc
xchg
inc
mov
jp
dec
lods
in
rcrl
imul
out
movsb
repnz
pop
mov
sbb
push
add
incb
scas
adc
out
mov
int3
cmp
mov
fdivrl
and
sub
test
popf
jb
jne
and
test
jmp
fistps
jnp
in
call
mov
mov
in
les
push
mov
jg
fdivp
movups
and
sbb
stc
int3
outsl
fidivl
cmp
jl
and
or
in
cmpsl
sbb
in
call
inc
incl
sbb
push
notl
mov
aam
inc
xor
daa
xor
addb
movsb
sahf
push
fcomip
mov
fnstenv
fmuls
push
jae
or
pusha
lea
mov
jmp
xor
adcb
ljmp
sbb
xchg
call
and
push
sub
mov
movsb
cwtl
fistps
sbb
sub
xor
fs
int3
cmpsb
add
out
pop
or
jno
in
mov
push
lods
ja
xor
mov
frstpm(287
xchg
nop
push
mov
jmp
mov
xor
out
push
ss
xchg
xor
lods
stos
or
jae
lods
mov
sub
or
lea
mov
or
insl
stos
mov
clc
xor
pop
mov
push
imul
ja
adc
jge
aas
out
and
jbe
imul
outsl
jns
pslld
and
jns
push
jp
mov
stos
stc
enter
jns
dec
movsl
inc
test
ss
mov
add
xchg
mov
call
jp
jmp
inc
pop
sub
imul
mov
or
mov
sbb
leave
leave
mov
shll
pusha
sub
loop
cwtl
pop
push
mov
les
outsl
push
and
and
xor
or
push
popa
push
test
mov
jmp
mov
repz
imull
lret
fsubrl
imul
stos
ss
mov
insb
sti
xchg
sbb
mov
pop
lret
repnz
dec
aas
push
push
test
in
inc
push
push
mov
inc
mov
in
scas
jl
xor
xchg
xchg
sub
call
inc
push
cmpsl
cmp
psubsw
mov
pop
ja
push
lret
or
jb
bound
dec
mov
or
push
lahf
cmpsl
popf
ret
into
jmp
bound
pop
mov
enter
jmp
stc
mov
xor
imul
mov
inc
xchg
lock
mov
xchg
sbb
mov
xor
and
inc
xchg
xor
popf
or
dec
jo
flds
sahf
cmp
push
popf
sub
or
out
inc
enter
jbe
lock
ss
inc
sbb
mov
in
jecxz
xor
outsb
dec
push
mov
push
cmp
ja
dec
sarl
jge
inc
push
push
mov
push
shrl
sub
push
ret
testb
cmp
enter
nop
pop
jl
xor
scas
mov
cmp
or
cmp
test
imul
cmp
jne
dec
push
add
push
push
sub
scas
repnz
push
movsb
rcrb
sub
repnz
cs
int3
jae
iret
movsb
stc
testl
fimuls
push
cwtl
loopne
fistpl
inc
mov
hlt
rcl
repnz
popf
jg
nop
andl
clc
push
pop
mov
das
mov
loope
scas
mov
rol
mov
out
fisubrl
inc
fcoms
icebp
jle
mov
testb
jge
das
int
ret
jmp
xor
jae
adc
lcall
insb
jbe
lods
xor
scas
push
mov
inc
xlat
ret
data16
sbb
inc
fisubs
bound
mov
or
imul
std
xchg
xchg
sub
or
ret
jno
addr16
dec
dec
les
shr
sbb
jns
das
stos
leave
sub
and
test
out
test
jg
dec
sub
cmp
mull
mov
jae
pop
push
mov
lahf
loopne
pop
jo
add
mov
push
add
inc
stos
sarl
xchg
mov
shrl
fnstsw
sbb
cmp
mov
cli
sahf
jo
insb
jl,pt
and
rcrb
dec
fbstp
out
inc
call
jae
hlt
data16
add
imul
jmp
sahf
and
ret
test
decl
in
sti
push
adc
ret
insb
daa
mov
shll
shl
int
js
or
adc
sub
repz
and
in
arpl
pop
dec
or
jno
loop
fwait
push
adc
and
adc
js
cs
sbb
push
mov
xchg
hlt
and
mov
test
lea
fs
pop
jp
loop
les
cwtl
mov
enter
xchg
push
cmp
cltd
dec
shlb
in
mov
xchg
daa
add
or
das
and
cmp
je
xchg
notl
loope
mov
mov
call
sbb
andb
pop
pop
jo
dec
cli
push
ja
adc
lret
mulb
pop
push
out
loope
ret
sbb
add
lock
movsb
mov
cmp
enter
mov
mov
mov
adc
pop
xchg
xor
lods
fwait
es
scas
fimull
or
call
in
lret
jne
push
shrl
mov
xchg
mov
and
add
push
sub
or
mov
mov
jp
test
fs
mov
fidivs
movsl
mov
int
ret
push
and
and
out
mov
fisttpll
jno
icebp
sub
out
mov
cs
fsts
jns
dec
sbb
jmp
add
push
pop
sub
push
push
lret
inc
sbb
pop
in
popf
mov
pop
and
mov
pushf
add
and
mov
add
cmc
fdivrp
mov
xor
roll
cmc
negb
daa
sbb
xor
xchg
mov
popa
fidivs
jne
gs
pop
in
stos
adc
mov
inc
notw
je
ds
in
scas
mov
rcrl
outsb
fdivs
sub
jnp
dec
and
stos
cmpsb
mov
test
rorl
popf
inc
sti
imulb
jmp
add
outsl
pushf
inc
jmp
push
inc
or
xchg
add
sarb
adc
adcl
dec
sub
je
mov
mov
xchg
test
in
mov
loopne
jecxz
sbb
pop
popa
into
into
aad
ja
outsl
push
cmp
insl
dec
xlat
push
and
mov
ja
leave
mov
mov
inc
fnstenv
cmp
loopne
dec
pop
xchg
or
enter
cli
dec
inc
adc
sahf
jle
xor
xor
sbb
cmpsl
xor
push
std
mov
jp
cmp
fsubp
and
sbb
adcb
int3
pop
add
ds
jns
pusha
lods
push
in
mov
and
sahf
or
hlt
add
xchg
fmulp
cmp
xchg
push
insl
mov
cmpsl
mov
push
xor
inc
xor
sub
cs
push
pop
sub
sbb
pusha
mov
aaa
push
ja
int
cs
inc
lods
mov
pop
cmpsb
ss
lret
xorps
mov
scas
fidivs
mov
and
popf
outsl
inc
gs
or
sbbl
mov
mov
mov
jmp
xor
jmp
add
fistpl
inc
fsubs
mov
gs
sub
xchg
mov
pop
arpl
stc
mov
sub
call
cmp
xchg
fldz
sub
scas
jge
in
daa
nop
mov
inc
fmuls
jno
xchg
adc
mov
testb
in
mov
push
cmp
pop
pop
jo
out
mov
adc
or
sub
lock
repnz
int
mov
sti
addr16
push
mov
cld
xor
dec
fldcw
pand
cmp
pop
adc
jecxz
mov
push
enter
and
and
loop
scas
and
pop
enter
fnsave
push
add
mov
pushf
push
mov
mov
and
jle
pop
js
cwtl
pushf
pop
dec
popf
lea
sbb
std
push
jne
push
and
sbb
sub
popa
inc
dec
imul
xchg
xor
jno
mov
pop
pop
sub
xor
rcl
into
jle
push
andb
mov
sub
ds
mov
bound
mov
addr16
jo
or
inc
adc
scas
cmp
mov
call
mov
sub
add
mov
and
pop
pusha
cmp
mov
xorl
pushf
sbbb
cmp
mov
outsl
fs
push
xlat
fwait
test
push
mov
fists
xchg
push
mov
jb
jns
in
mov
imul
pop
repz
push
xchg
out
lods
adc
test
jmp
jmp
jmp
ror
push
hlt
mov
js
pop
push
xchg
pop
cli
xor
fnstenv
cmp
testb
adc
pop
test
mov
test
scas
int
lea
mov
scas
in
mov
mov
xor
sarb
fidivrs
pop
pop
and
fsub
mov
das
mov
inc
arpl
pop
imul
sub
mov
push
push
pop
pop
jne
dec
ja
dec
pop
add
xchg
sti
jl
mulb
adc
outsl
push
add
insb
xor
mov
inc
hlt
imul
jmp
int3
into
sbb
lcall
cmp
imul
cmpsb
out
ret
or
dec
aaa
cmp
xchg
gs
pop
jge
sbb
add
xchg
mov
shrl
pop
call
mov
icebp
imul
xor
pop
outsl
pop
sbb
hlt
push
mov
mov
push
enter
xlat
out
repz
sub
out
test
iret
or
cld
sbb
sbb
fldt
cmpsb
push
jmp
outsb
mov
imul
adc
rorb
dec
lret
idivl
clc
and
aam
fwait
jg
mov
popl
out
xor
gs
sub
shl
jbe
repnz
jecxz
iret
sbb
ret
std
jmp
fisubrs
jbe
bound
mov
sarl
xlat
jbe
push
test
fnsave
mov
loope
cmp
xchg
dec
fcmovne
jg
out
loopne
imul
test
sub
lahf
jl
dec
popf
cli
dec
push
das
mov
mov
pop
cwtl
jle
or
pusha
jge
lret
int3
mov
int3
outsl
sbb
divb
nop
jl
cs
sub
adc
mov
stos
mov
mov
cmp
or
es
dec
fisttpl
test
aas
scas
cmp
imul
test
add
add
cltd
inc
call
jmp
cmp
or
movsl
push
xchg
xlat
imul
mov
push
jl
adc
out
jns
push
dec
pop
ds
xchg
mov
sbb
lods
sbb
imul
cmp
xorb
and
cwtl
cmpsl
sub
push
mov
xlat
enter
int3
lret
bound
add
lock
dec
dec
or
call
cmp
xor
jne
int
pushf
or
xchg
and
popa
xor
push
lahf
push
lret
jecxz
or
mov
pop
rorb
sub
in
xlat
cmpl
or
in
push
movsb
jge
jle
push
sti
icebp
add
ja
popf
jbe
outsl
fs
call
inc
fisubrl
das
dec
and
and
mov
mov
stos
adc
inc
mov
outsb
ret
xor
lds
out
dec
mov
push
sub
push
fcmovnbe
dec
sbbl
bound
xchg
aas
adc
lea
jo
aas
pop
in
mov
testl
shrl
pop
lahf
dec
movsb
push
fisubrs
add
mov
pop
xor
mov
push
mov
insl
xchg
mov
hlt
and
sbb
rcrb
int3
dec
popf
push
lods
aam
test
xor
or
das
add
daa
fs
call
jmp
mov
cmp
jmp
ret
sbb
add
lahf
je
popf
add
push
sbb
push
fcomp
fs
aam
inc
popf
test
xchg
push
push
std
add
jmp
jge
data16
in
push
push
add
stos
ss
jl
cmp
mov
dec
aad
mov
stos
test
dec
outsb
in
das
fcoms
xchg
jl
fimuls
inc
call
xor
nop
test
dec
dec
lret
pop
cmp
fs
mov
xlat
jnp
or
cmp
inc
mov
pop
mov
fidivl
xor
cli
or
add
addb
mov
popaw
push
adc
adc
or
imul
fldcw
sub
adc
dec
xlat
into
fstpl
imul
sub
ss
enter
cmp
aas
loop
loop
enter
imul
enter
daa
ljmp
bound
xor
rcl
xchg
dec
inc
xchg
push
rol
inc
jo
sbb
fildll
sub
mov
jae
ss
xchg
xchg
bound
inc
jno
or
and
add
bound
xchg
xor
sahf
inc
inc
push
lret
push
jno
addl
and
xchg
test
mov
adc
js
jae,pt
sbb
or
or
mov
xorl
mov
je
mulb
jl
add
push
call
inc
pop
mov
dec
stos
cmp
pop
into
push
fucomi
das
add
aad
testl
shlb
repz
dec
lahf
ret
cmpl
or
inc
pusha
sbbl
mov
fbstp
inc
inc
scas
inc
in
fsubs
xchg
jb
into
cltd
lahf
xor
int
out
outsb
add
scas
xor
test
sbb
scas
adc
les
mov
jo
shl
add
adcl
mov
arpl
iret
xchg
mov
push
lods
pushf
dec
js
outsl
jg
mov
lahf
sbb
test
iret
jl
cmp
call
xchg
das
mov
incb
stc
repz
sub
and
push
dec
sbb
mov
jno
cmp
scas
sti
sahf
fcomi
aad
in
popl
push
xchg
push
and
fsubrs
lret
jb
sbb
xchg
inc
mov
mov
pusha
pop
test
sub
inc
fwait
xchg
dec
loope
cmp
mov
out
sarb
iret
rorb
add
xchg
cmpsl
cmc
jnp
xchg
pop
shll
popf
or
stc
leave
xlat
xlat
add
xor
fisubs
sub
loope
ds
push
outsl
out
sarl
jecxz
enter
cmp
dec
pop
imul
mov
push
in
pop
mov
iret
lock
movsb
inc
cmpsl
in
adc
sbb
mov
or
inc
or
outsl
daa
pushf
dec
ret
loope
or
in
arpl
ja
mov
adc
std
jge
jl
lds
nop
orb
cmp
xchg
push
jo
stos
arpl
lds
sbb
sbb
ret
out
insl
mov
lds
push
fildl
sub
in
sbb
sbb
pop
test
push
inc
and
stc
std
inc
fidivrl
popf
fs
imul
ja
xor
out
addr16
scas
dec
fdivl
test
cld
sub
cmp
jne
add
movsb
xor
push
lods
pop
lret
push
jbe
loope
cmp
mov
aam
out
jge
scas
popa
adc
mov
adc
stc
xor
clc
jecxz
inc
mov
mov
fnstcw
jmp
fisubrl
sub
ret
jmp
jo
sbb
cmp
sub
fstl
movsl
add
sub
icebp
in
add
aam
adc
xlat
outsl
dec
pop
call
cmp
aas
fnstsw
jl
ret
in
sbb
leave
xor
lcall
ret
repnz
mov
stos
add
aam
stc
pop
push
sub
out
arpl
pop
xchg
mov
lods
inc
pop
imul
popf
and
das
push
sbb
xchg
xor
pop
fwait
xor
fcoml
aaa
cmpsl
inc
scas
push
inc
mov
mov
in
pop
dec
sti
mov
mov
fstpt
xlat
clc
xor
jmp
hlt
push
loope
insb
rcl
pop
mov
insl
push
xchg
sahf
and
xchg
mov
lds
mov
add
xchg
popa
sbbl
fsubs
dec
or
aaa
mov
out
jecxz
addb
stos
jae
mov
das
adc
ret
mov
dec
push
cmc
out
push
out
pop
mov
xor
fldenv
sbb
cmp
pop
fwait
sub
dec
test
xchg
in
dec
mov
mov
inc
in
mov
fstpl
and
push
inc
filds
adc
fcmovb
scas
pop
cmc
sti
cmc
adc
sub
add
xor
lods
cmpsl
mov
pop
js
out
test
mov
mov
dec
sbbl
xchg
ss
push
mov
mov
fsubrs
icebp
cmp
pop
dec
adc
ds
dec
sbb
sbb
add
mov
push
inc
push
push
mov
enter
sub
or
push
mov
frstor
sub
stos
jmp
dec
pop
sub
andl
fimuls
dec
loope
jl
lods
mov
icebp
movsl
test
adc
loop
mov
xlat
dec
inc
in
shll
ljmp
mov
std
rcrb
notl
loop
and
cmp
fsubl
jnp,pn
mov
sbbl
inc
mov
sub
mov
andb
shrb
add
adc
push
mov
mov
mov
bound
xchg
dec
sahf
xor
das
in
add
pop
test
cltd
inc
mov
xchg
adc
sbbb
lahf
mov
outsl
enter
sub
sahf
arpl
outsl
dec
dec
push
lret
and
cld
push
cltd
test
xchg
dec
addb
fcoml
jae
jo
jbe
jb
ds
pop
mov
add
jmp
scas
dec
dec
arpl
mov
lock
jb
push
sub
rcrb
adc
cltd
popa
and
iret
out
or
mov
or
stos
adc
or
push
in
fcoms
sahf
inc
fs
xor
pushf
cmp
int
dec
ljmp
jmp
aad
push
ss
icebp
movsl
mov
shll
loope
and
dec
adc
dec
movsb
inc
test
cmp
xchg
cmpl
andb
adc
lcall
inc
pop
xlat
add
and
and
jp
cli
pop
divb
cwtl
addb
mov
jecxz
je
enter
xchg
fs
int
enter
sub
aad
mov
in
loop
and
cmp
xor
daa
jle
call
xchg
jnp
scas
jns
and
jno
inc
call
mov
pop
pop
jl
jno
xchg
dec
xor
mov
or
scas
jge
loopne
jns
bound
mov
push
aas
fwait
subb
cmc
dec
jno
pop
jecxz
in
push
hlt
fisttps
fisubl
inc
mov
in
into
das
xchg
mov
scas
mov
imul
in
cmp
sub
dec
scas
mov
pop
jl
push
and
movsl
sub
inc
xor
jp,pn
add
bound
xor
mov
push
or
mov
iret
or
cltd
push
mov
jb
adc
shr
xchg
xor
push
sbb
ljmp
jl
cmpsl
pop
push
test
adc
push
fisubs
inc
in
ja
mov
push
test
sub
inc
pop
and
lods
ljmp
sub
jecxz
mov
dec
add
cmp
insl
js
mov
ret
je
jge
cmp
sahf
cld
push
inc
push
xlat
mov
pop
ret
frndint
xorl
add
xchg
outsl
jle
mov
jbe
pop
sahf
stc
push
xor
sub
sahf
daa
and
nop
and
and
cmp
or
dec
xchg
dec
push
insl
cmc
dec
les
sub
sub
shrl
nop
in
pop
mov
insb
ljmp
lret
add
and
mov
jecxz
icebp
inc
cld
decb
movsl
or
mov
sbb
push
lret
jmp
mov
rcrl
pop
pop
pop
adc
cmpsb
lods
call
adc
lock
sub
ret
lock
bound
push
adc
or
cltd
in
lret
fdivl
das
imul
std
xchg
sbb
sub
mov
mov
xor
adc
cli
mov
insl
sbb
sti
mov
cmp
jno
mov
clc
mov
loope
lock
push
insl
je
jbe
mov
inc
imul
in
add
xor
push
mov
lcall
sti
pop
and
sub
xchg
sbb
sbb
or
adc
push
addl
ja
mov
inc
pop
lahf
rcr
test
fsub
or
lret
push
push
into
movsb
sbb
aas
jp
in
test
mov
mov
enter
push
imul
lcall
jb
outsl
inc
rcll
pop
aam
es
jae
lods
adc
push
fdivrl
shl
pop
enter
sbb
icebp
and
dec
sbbb
add
nop
es
fsubl
mov
out
xchg
sbb
fdivrl
push
mov
lea
xchg
inc
pop
adc
mov
js
fiadds
ja
loopne
ljmp
mov
add
jnp
jp
stos
xchg
cmp
std
pop
mov
in
fistpll
push
clc
and
dec
cwtl
push
xor
addr16
xchg
iret
sbb
cltd
and
loopne
stos
xor
lds
adc
repz
mov
add
mov
outsl
ljmp
cmp
xchg
mov
mov
push
fldenv
cs
cld
rcll
test
mov
mov
sti
stos
inc
icebp
inc
ret
mov
cmp
xchg
insl
mov
mov
dec
test
stc
jecxz
xor
fcomps
sub
movsb
aas
arpl
sub
test
xchg
jnp
movsb
insb
sbb
out
cmp
test
pop
mov
push
fistpl
enter
dec
mov
xor
dec
in
std
jle
cld
mov
dec
xchg
add
lds
sbbb
or
test
jmp
ror
cmpsl
mov
sub
mov
push
aas
adc
outsl
imul
sub
jnp
fs
jmp
ds
sub
cltd
js
movsb
jbe
cltd
xor
mov
mov
iret
push
aas
jle
int3
cs
les
pop
pop
clc
pop
adc
adc
jnp
pop
dec
xchg
jge,pn
push
aam
adcb
inc
dec
fs
jge
inc
xchg
sbb
pop
rcrl
jge
fwait
jb
sti
xchg
xor
cltd
sbbb
in
in
push
in
test
pop
xchg
in
popa
sahf
cmp
mov
mov
or
cmpsb
daa
lahf
jbe
pop
xor
dec
mov
dec
in
movsb
pop
aas
push
cmpsl
cmc
int3
vpsrlw
dec
mov
outsl
add
data16
or
xor
sbbl
push
xor
lret
mov
adc
scas
dec
cmc
sbb
aas
popf
mov
xchg
cs
mov
aad
lret
rol
lret
lods
adcb
xchg
sub
enter
loop
mov
out
mov
int3
push
outsl
gs
orb
inc
adc
pop
lcall
in
jb
enter
xchg
jb
dec
jecxz
inc
push
and
jp
mov
dec
inc
jno
push
pop
cmp
es
xor
jne
jl
aam
mov
aam
add
jl
cmp
scas
lret
push
push
repz
jns
ss
jnp
and
or
arpl
insb
cltd
popf
mov
and
or
adc
and
movsb
mov
rcrb
shll
stos
test
into
je
cmpsb
les
push
int3
sbb
sbb
lods
jle
mov
inc
xor
inc
lds
movsb
adc
movsl
pop
stos
xchg
lret
scas
jo
loope
xorl
shrb
out
xchg
jl
shrl
xchg
lahf
std
dec
imul
mov
outsl
or
dec
mov
sub
sub
iret
popf
jp
or
jns
pop
sub
subl
stos
cmc
dec
sbb
outsb
mov
mov
mov
loope
adc
push
xchg
sahf
cmpsb
dec
cli
cmp
sbb
std
pop
xchg
dec
adc
xchg
sub
in
mov
cmp
xchg
jne
es
push
iret
pop
mov
cwtl
push
xchg
arpl
clc
mov
movsl
sti
dec
fadds
jecxz
mov
push
mov
test
cmp
test
push
sub
inc
push
jae
loope
add
rol
jge
or
pop
mov
cmpl
xor
cld
lcall
je
lahf
arpl
int
fdivl
add
outsb
inc
cmpb
and
mov
pop
insl
jecxz
xchg
shlb
shll
insl
lock
inc
mov
fs
out
int3
jbe
imul
pslld
push
jle
jmp
stc
jbe
lahf
pop
out
xor
inc
bound
mov
lret
xchg
ds
jno
jbe
sbb
xlat
push
aam
les
rclb
das
add
mov
add
ret
mov
sub
fmuls
data16
imul
fdivrl
icebp
cltd
dec
lods
fwait
jns
js
repnz
or
mov
cmp
pop
xchg
sub
cmp
es
mov
sub
popa
mov
addr16
mov
imul
fcmovnbe
addr16
sub
jb
cmp
mov
aaa
bound
sbb
jnp
mov
push
lds
popf
clc
mov
inc
mov
pop
jb
xlat
xor
arpl
cld
pusha
adc
jnp
pop
inc
pop
dec
sar
std
cmp
scas
scas
popf
sti
mov
nop
mov
add
and
rcl
cld
outsl
mov
mov
pop
push
test
pop
pop
mov
lods
cmp
out
pop
fidivs
cmp
test
xchg
sub
jbe
xor
jge
jg
inc
jecxz
in
test
dec
ja
aaa
xor
jp
jns
enter
cmp
inc
testl
lahf
aad
and
or
pusha
sbb
pop
xchg
xor
out
push
mov
add
fwait
lods
daa
call
jle
pop
popf
push
dec
cmpsl
inc
sbb
pop
dec
shrb
cmpsl
mov
shlb
adc
fbld
jge
mov
jo
pop
ljmp
sub
adc
mov
pop
push
data16
insb
je
pop
jbe
shll
fdivrs
sbb
xor
push
loopne
dec
notl
jp
sub
pusha
jg
push
cmp
pop
mov
jg
and
ds
mov
fldt
adc
pop
sub
sahf
sbb
sarl
xchg
outsl
loopne
jns
ds
xchg
fsubrp
cmp
mov
loopne
or
cld
stos
inc
decb
xchg
sub
mov
inc
pop
dec
adc
and
mov
dec
jg
mov
aaa
xchg
add
mov
cwtl
cmpsl
aaa
push
xchg
ds
scas
testb
jno
push
popl
gs
cmp
adc
mov
mov
repz
cwtl
mov
jae
xlat
or
ja
jg
mov
xor
aas
adc
std
cmp
out
jp
inc
cld
cmpsl
jmp
xchg
sahf
xor
mov
mov
imul
lds
jg
mov
mov
scas
or
scas
roll
lds
adc
push
inc
and
sbb
cltd
std
aas
or
xchg
cmp
adc
syscall
xchg
mov
jb
push
insb
icebp
sbb
fcomps
pop
xchg
adc
fmuls
aaa
mov
sub
pushf
fistl
sub
jbe
pop
xor
test
pop
add
push
test
and
jb
test
into
add
jnp
jge
xchg
jb
inc
insl
dec
inc
imul
imul
cmpl
cmpsb
inc
mov
outsl
dec
push
ret
and
add
imul
mov
bound
jnp
dec
jg
jns
jg
mov
pop
outsl
or
sti
stos
add
sub
cwtl
mov
ja
loopne
in
sbb
pop
sub
xchg
add
pop
push
mov
adc
cmpsl
jp
mov
in
aaa
xchg
fsubr
mov
inc
dec
sbb
and
pop
jmp
or
mov
imul
or
push
mov
sbb
sahf
and
test
stos
xchg
andb
nop
movsl
icebp
imull
les
or
mov
jle
call
das
addr16
pop
fldenv
mov
and
cmp
sbb
dec
pop
cmp
sbb
mov
test
sahf
and
sbb
or
stos
mov
push
es
imul
mov
inc
int3
add
into
cmp
fsubl
xchg
jle
inc
xor
das
sbb
lods
cli
shl
mov
adc
insl
add
addr16
push
push
xor
pusha
mov
out
xchg
into
push
fnsave
jno
mov
les
pop
out
jmp
clc
loopne
jg
sahf
inc
mov
js
mov
mov
mov
rorl
cmpl
test
xchg
das
push
inc
cld
adcl
lea
sub
popa
ja
push
or
xchg
sub
mov
xor
pop
insl
or
ljmp
push
rorl
fucomp
pop
psubusb
addr16
pop
divb
sub
and
mov
out
jle
inc
inc
jg
arpl
inc
test
cld
cltd
ds
leave
mov
pop
es
sub
xor
scas
mov
add
aaa
xor
iret
dec
sub
popf
movsb
mov
jbe
push
cmpsl
pop
xchg
outsb
add
mov
mov
fucomip
fnstsw
jmp
xchg
push
and
jp
repnz
mov
xchg
aam
mov
movsl
and
mov
test
pop
testb
cwtl
mov
or
inc
ret
aas
sub
xchg
subb
shrb
mov
addl
outsl
cmpsb
rorl
adc
int3
mulb
int
cwtl
jge
adc
fistpl
xor
nop
stos
test
sbb
in
das
ja,pn
mov
cli
stos
inc
mov
stos
xor
in
iret
fidivrl
push
push
jns
or
mov
jge
and
mov
sar
xchg
out
mov
les
or
mov
mov
lea
adc
pusha
mov
movsl
icebp
and
adc
xchg
cmc
add
roll
or
daa
lods
mov
arpl
xchg
outsl
scas
dec
fistps
mov
push
jb
lock
push
pop
ljmp
jns
mov
dec
popa
aaa
outsl
fnstenv
pop
sub
jle
andl
cmpsb
daa
inc
aam
push
lods
push
decb
mov
push
mov
fs
xchg
add
mov
sbb
jo
iret
mov
xor
xor
and
inc
and
mov
fsubl
mov
adc
xchg
xor
mov
xor
daa
and
testl
pop
sub
sub
mov
mov
mov
in
fsub
sbb
insl
leave
fcoms
jge
push
ja
fsubrl
cmpsb
cltd
adc
cmpsl
inc
mov
mov
aas
ret
mov
mov
mov
popf
jno
jnp
jbe
ljmp
stos
xchg
notb
xchg
add
or
cltd
mov
shl
jnp
pop
jae
fs
or
jae
mov
inc
pop
stc
sbb
push
lret
sub
ljmp
rcr
mov
push
xor
xchg
add
mov
mov
mov
jbe
sub
jbe
dec
stos
loope
sahf
lods
fs
jnp
loopne
enter
xchg
aad
mov
stc
jae
outsl
es
pushf
fcoml
aam
ds
and
test
fwait
sti
std
pop
sub
xchg
mov
inc
gs
xchg
imul
xchg
push
push
jne
mov
movsb
sarl
insl
dec
mov
xor
addr16
xlat
sahf
sbb
imul
dec
or
in
dec
push
push
hlt
xorl
inc
je
jne
pop
and
push
movsb
scas
aam
das
mov
lods
mov
sub
dec
in
dec
sbb
and
shr
scas
mov
in
inc
and
inc
in
lret
push
call
or
or
js
or
xchg
cmp
sbbb
clc
in
es
mov
jo
push
xchg
in
xchg
jecxz
jbe
in
cmp
pop
add
mov
inc
ds
fisubs
lds
sbb
mov
push
jmp
cmp
das
out
xlat
xlat
fistpll
ljmp
movsl
sbb
cmp
jge
mov
mov
pop
test
imul
cmp
cmp
pop
jno
jo
pop
ss
xlat
pop
sbb
sub
cmp
les
arpl
mov
mov
pop
punpckhbw
ja
mov
pcmpgtd
xor
das
adc
clc
cmp
or
shll
mov
lahf
shrl
shll
push
adc
jmp
xor
lcall
xchg
adc
xchg
test
lds
loop
rcll
pop
enter
dec
pushf
fcomps
in
cmp
aad
repnz
std
sbb
mov
push
mov
clc
inc
loop
dec
xorl
jno
into
jnp
jle
sbb
enter
repz
mov
push
mov
pushf
movsb
test
in
test
mov
xor
fsubrs
int3
stc
mov
enter
pop
decb
mov
stc
jbe
lahf
xlat
xchg
insb
shl
mov
loopne
fwait
and
insb
lahf
das
jmp
shrb
sub
pop
mov
cmpsb
test
xor
js
test
mov
cmp
insl
das
lret
loopne
mov
sbb
or
push
rcrb
dec
loop
jle
sub
es
sub
test
movq
cmp
lea
cmpsl
lret
xchg
mov
push
ficompl
cmp
inc
push
pop
inc
push
lods
or
xor
and
jns
sub
mov
orb
leave
xor
std
add
jns
and
pusha
push
cmp
adc
fstpt
fsubr
js
mov
nop
cmpl
fisubl
cltd
fucomip
and
test
sub
pop
lahf
loop
xchg
add
jnp
daa
mov
xlat
sub
push
xlat
dec
out
inc
inc
cmp
shr
mov
movl
rcrl
int
xchg
cmp
in
clc
fistl
dec
inc
int
inc
pop
jmp
xor
lcall
stos
mov
shl
push
add
insl
dec
sbb
gs
leave
lahf
ss
pushf
cmp
int
notl
pop
mov
jecxz
pop
lcall
nop
cmpl
rcrb
mov
mov
fiaddl
fisttps
xchg
je
fwait
test
dec
cmp
and
xchg
cmp
je
mov
dec
fwait
lea
rcll
and
xchg
into
ljmp
sbb
test
movsb
push
mov
into
ss
mov
int
add
test
push
arpl
into
jnp
shll
sbb
cmp
adcb
pop
scas
pop
cmp
lret
xchg
sbb
jl
sbb
jno
pop
mov
push
inc
clc
inc
xor
sub
pop
shrb
loop
aaa
clc
sub
cltd
jp
stos
outsl
pop
sbb
adc
into
ret
jle
arpl
ss
fldcw
pop
lahf
test
cli
lds
add
movsb
das
cmpsl
in
pop
pusha
push
popa
imul
jbe
xor
pop
push
rolb
leave
jle
cmp
cmp
cmp
hlt
leave
fcmovb
lds
test
mov
stc
jbe
in
sub
outsb
sub
push
dec
cmpsb
jno
les
mov
jge
pusha
pop
gs
sub
lock
jp
jns
jns
or
or
insl
dec
adc
push
inc
outsb
iret
fldenv
sub
lea
aaa
test
shr
cltd
std
out
push
lcall
adc
call
scas
pop
pushf
es
ret
and
push
js
ss
orb
lea
adcb
enter
xchg
jbe
stc
lock
pop
pop
mov
lret
jmp
cmp
scas
lods
xchg
icebp
dec
out
das
inc
pop
popa
lock
pop
loopne
es
fmull
push
pop
mov
inc
outsb
adc
insb
xor
adc
cmc
test
inc
push
mov
jge
cmp
pop
mov
pop
lcall
shlb
ds
pop
call
sub
sarl
into
rorb
inc
ret
rclb
in
mov
test
out
xchg
inc
or
outsb
aad
dec
mov
pop
mov
les
cld
xchg
xchg
jmp
mov
pop
in
leave
mov
cli
add
stos
inc
cld
sbb
pop
dec
add
dec
inc
loop
or
loope
outsl
inc
movsb
push
dec
cld
add
mov
rol
sub
sbb
ror
repnz
adc
mov
leave
lahf
inc
and
xor
out
lea
fwait
out
lds
and
mov
fnstsw
ret
push
xchg
dec
pop
das
add
loope
out
lret
lret
adc
mov
or
lea
cmp
lret
cld
jg
add
test
pop
add
orl
in
push
stos
xchg
lds
cwtl
push
pop
mov
mov
sbb
shrl
sbb
mov
cmpsl
in
sub
in
out
iret
pop
insl
and
stc
or
es
pop
fs
data16
stos
xchg
jb
or
xor
xchg
jne
out
mov
mov
xor
icebp
cmp
cmp
or
out
shl
sbb
mov
and
ficoms
ja
sub
push
jo
xor
ror
fs
sub
aad
into
gs
or
or
push
inc
dec
popf
jle
push
ss
fbstp
dec
push
or
and
adc
or
lcall
or
push
cmp
mov
into
inc
lahf
cwtl
pop
jl
push
inc
pop
pop
aaa
stos
inc
icebp
inc
shll
out
lds
cmp
lock
jle
cltd
xor
add
fnstsw
fs
push
dec
clc
adc
sbb
arpl
ret
mov
dec
addl
mov
ss
push
inc
shrl
push
sbb
cs
int
push
stc
push
je
pop
jno
and
mov
mov
test
cld
push
insl
push
mov
inc
or
push
jmp
push
icebp
stos
mov
fiaddl
xchg
sbb
adc
and
and
loope
je
inc
jns
je
sub
xchg
roll
pop
enter
mov
into
xor
rcr
aam
and
stos
fidivs
fisubs
movsb
fsubl
xor
ljmp
lods
sbb
iret
jno
outsl
xor
pusha
xor
les
mov
fnstenv
ret
push
dec
loop
or
cmp
lcall
push
add
mov
cmp
fidivl
or
sbbl
jp
std
mov
add
bnd
mov
jne
pop
jno
jae
mov
out
inc
sbb
into
or
jne
push
cmp
rcrl
sub
fwait
xchg
fisubrl
sahf
mov
nop
jmp
in
loopne
popf
ljmp
out
sbb
andl
mov
push
aas
popa
insb
outsl
jns
cmp
je
add
xorl
lcall
cmp
fs
jecxz
mov
fdivs
jnp
sbb
lahf
negl
rcr
mov
repnz
jb
dec
xchg
add
clc
imul
mov
fcmove
das
pop
popa
push
pop
aaa
jl
pop
pop
mov
les
repnz
pop
mov
mov
adc
lcall
sbb
test
ret
push
cmp
cmp
dec
icebp
movsl
in
dec
mov
mov
mov
lret
jp
push
dec
mov
das
rclb
cmp
dec
cmp
aam
fdivs
shrl
fldt
sti
add
pusha
dec
mov
cmpb
cmpsl
es
sub
inc
aaa
xchg
dec
scas
mov
movsl
in
stos
popf
ret
mov
ss
gs
in
inc
inc
jo
imull
or
sub
jecxz
mov
std
inc
jl
and
sarl
cmp
adc
les
cmc
test
rorl
cld
outsl
dec
push
cltd
enter
dec
jmp
sbb
xchg
mov
xchg
lret
inc
inc
cwtl
jns
fsubl
outsb
fldenv
cmc
mov
push
push
pop
cmp
inc
test
push
or
mov
ds
xchg
xor
cmc
mov
jbe
cmp
inc
push
xor
push
inc
push
push
cmc
or
mov
insl
rcll
divb
mov
jle
adc
bound
mov
es
cmp
repnz
in
pushf
xor
mov
ljmp
jno
aaa
jecxz
leave
jmp
sahf
push
shrb
test
sbb
outsb
mov
into
aaa
es
mov
dec
mov
inc
mov
add
cltd
cmp
shrl
sub
clc
pop
mov
mov
sub
test
mov
xor
lret
gs
pop
icebp
inc
test
ret
in
daa
in
push
mov
orb
mov
es
setp
mov
repnz
dec
lret
cmp
and
jns
adc
sbb
iret
arpl
outsl
fdivs
or
out
aas
cmp
jl
addr16
sub
mov
cmp
or
and
xor
popa
push
fidivrl
fidivl
fwait
cwtl
mov
cmp
ffreep
xchg
pop
out
cmpsl
sarl
dec
inc
movsb
fucomip
fstl
das
xor
je
pop
sbb
leave
jp
pop
ret
inc
fidivl
adc
scas
add
in
ja
cwtl
mov
pop
jno
ljmp
xor
ljmp
ss
push
cltd
stos
nop
rclb
cmp
fidivrs
imul
cltd
pop
adc
fstps
flds
popf
stc
ss
popf
je
add
push
push
sbb
clc
int
push
jle
mov
sbb
inc
pop
clc
ret
aad
fcoms
push
jo
mov
int3
les
inc
or
lock
lcall
or
mov
fwait
jb
and
adc
shrl
push
jmp
mov
fcoml
inc
cmp
sub
sbb
sbb
in
lock
push
pop
add
xor
aad
push
rcrl
push
inc
dec
jns
lods
push
mov
inc
push
jecxz
mov
jp
lea
mov
or
pop
sbb
xchg
xchg
sub
stos
jno
repz
add
push
cmp
push
or
out
jb
mov
fs
jnp
push
test
scas
sub
adc
fs
mov
and
aam
sub
adc
jo
ja
mov
popf
xor
pusha
ss
xchg
ja
popf
jo
pop
bound
popa
adc
mov
push
push
adc
push
cs
outsb
bnd
adc
mov
pop
sub
aam
fwait
popf
loopne
dec
cwtl
aad
add
adc
scas
mov
push
jmp
sbb
and
rcl
pop
xlat
jb
sub
sub
sbb
cmp
pop
out
out
cmp
adc
inc
call
mov
push
push
mov
dec
push
dec
mov
test
jmp
sbb
jmp
push
icebp
nop
cmp
out
mov
fstps
ja
sbb
cmp
mov
sbb
fdivs
sarl
push
mov
jg
add
mov
adc
stos
xor
test
int3
mov
fcoml
mov
push
int3
scas
out
dec
adc
mov
push
xchg
sub
test
fcmovu
mov
push
sahf
fsts
push
sbb
out
jns
mov
fsubs
mov
fwait
icebp
decb
xchg
jmp
call
test
inc
and
clc
mov
or
cmp
test
lods
push
lea
stc
sub
inc
andw
fsubr
test
je
lea
imul
jg
addr16
sahf
pop
out
scas
mov
xchg
lods
push
mov
stos
pop
movsl
fld
insl
pop
adc
jns
insl
cmp
stos
fwait
mov
int
ret
insl
dec
stc
or
outsb
mov
addr16
movb
pop
adc
sub
test
xchg
adc
lock
dec
or
imul
jge
stc
adc
out
adc
out
mov
scas
mov
test
xchg
pop
jne
pop
inc
fisttpll
lods
ljmp
xchg
pushf
aad
in
mov
mov
pushf
sbb
in
dec
pop
push
xor
lods
mov
fiadds
call
sbb
mov
push
cwtl
mov
mov
shlb
push
cmp
out
xrelease
xor
shrl
pop
stos
negb
pop
loopne
mov
xchg
add
push
ljmp
xor
mov
adc
jno
inc
or
mov
in
movsl
fldenv
and
xchg
mov
enter
cli
in
xchg
sub
mov
repnz
push
mov
adc
and
jl
mov
push
cmp
sub
sbb
fdivs
cmp
dec
lcall
cmpsb
xlat
xchg
mov
pop
subl
outsl
add
and
xor
shl
sahf
inc
add
or
and
gs
fdivrl
cltd
inc
push
fwait
mov
pop
imul
sbb
push
inc
lcall
inc
sbb
imull
mov
enter
jne
sub
imul
or
xchg
xchg
jp
add
add
daa
in
or
cmp
mov
dec
pop
mov
fsubr
pop
xor
jbe
insl
jg
add
add
xchg
lock
sub
fimull
test
loopne
sarl
add
mov
icebp
or
mov
lods
and
mov
push
nop
aas
mov
imul
decb
icebp
dec
std
aam
push
push
out
out
daa
lret
aaa
subb
lcall
pop
push
aaa
sti
cmp
nop
xor
jp
pop
jmp
cmpsb
call
jb
sub
int
push
cli
pushf
add
dec
jecxz
lods
cld
mov
pushf
push
xchg
test
pop
or
and
insl
pop
xor
imul
enter
decb
xchg
cmpsl
xchg
and
sahf
cmpb
adc
rorl
aam
add
pushf
xor
pop
cwtl
or
xchg
mov
cmpsb
mov
jnp
scas
lods
xchg
mov
jb
lahf
stos
iret
pusha
or
shlb
ret
cmp
and
jge
inc
ljmp
mov
lcall
push
sbb
sbb
out
aas
sub
and
and
jge
pop
movsb
cli
sahf
or
les
shrl
add
or
icebp
and
ret
mov
push
icebp
mov
adc
pop
iret
loopne
jmp
inc
jmp
cmp
iret
cwtl
aam
fbld
mov
mov
movsb
cmp
sbb
dec
dec
push
inc
pop
or
scas
les
repz
out
sub
sbb
enter
stos
cwtl
jae
push
jge
jecxz
imull
divl
ror
xchg
andl
cmp
test
repz
dec
pop
aaa
out
bound
cmp
pop
jle
ret
sub
dec
mov
jp
or
mov
movsb
int3
jg
bound
imul
inc
cmp
addr16
pop
lret
in
aaa
dec
push
mov
cmc
inc
mov
js
std
xchg
or
push
jmp
inc
shr
in
dec
inc
into
lock
mov
mov
pop
xchg
and
leave
add
arpl
adc
outsb
int
lahf
xchg
pop
mov
pop
mov
sub
mov
add
xor
push
cs
das
pusha
jp
push
and
push
mov
add
push
lret
cmp
cmp
fisubs
or
js
dec
pop
jge
add
sbb
inc
adc
popa
add
xor
mov
xchg
jle
test
inc
cltd
xor
cwtl
add
inc
push
fsubs
xor
arpl
xchg
bound
popa
ret
xchg
jecxz
add
lcall
push
std
xchg
inc
ja
xchg
lods
and
hlt
mov
push
add
jns
xchg
stc
shll
add
fmuls
je
repnz
loope
addr16
stc
je
mov
fcomi
jp
gs
xor
mov
scas
push
xor
imul
inc
pop
in
jno
out
mov
fcoms
ja
fildll
setnp
repz
loopne
or
jle
repnz
lahf
mov
rcr
push
sbb
lods
dec
push
mov
mov
jns
fs
mov
fcom
fstpt
je
and
mov
test
lret
sub
cmc
enter
add
mov
repnz
out
and
xchg
sub
insb
ljmp
data16
lret
jns
sub
xchg
adc
mov
cmp
dec
rcr
jbe
cmp
sbb
mov
mov
cltd
ljmp
xchg
or
cs
pop
jno
dec
xchg
dec
add
adc
xchg
jle
cld
outsl
mov
push
add
inc
ret
lea
and
mov
jbe
lahf
subl
jnp
cltd
test
dec
mov
lahf
out
jnp
das
icebp
jl
and
inc
fwait
xor
cltd
and
fidivrl
enter
mov
fcmove
inc
pop
sbb
pop
mov
pop
jns
nop
dec
in
adc
push
dec
mov
and
lcall
mov
enter
or
jb
mov
inc
int
xlat
mulb
insb
sbb
pop
outsb
std
insb
sbb
cmpsb
cli
mov
mov
rorb
and
xor
xorl
sti
pop
call
mov
movsb
inc
lods
and
cmc
imul
rclb
fcmovnbe
cmp
int
fstpl
movups
loopne
rorb
pop
sahf
jmp
aas
shrb
or
aas
mov
jle
adc
add
inc
inc
add
test
mov
pop
fistpl
push
cmp
dec
xor
negb
cmpsl
ficoml
inc
pop
adc
in
jp
sub
insb
mov
cmp
inc
icebp
add
add
pop
paddusb
pop
push
mov
ror
xchg
cli
push
mov
movsl
fadds
pop
nop
xchg
dec
out
xlat
mov
dec
add
push
roll
sub
loope
lret
ret
jg
ret
dec
aaa
xor
and
add
jnp
in
pop
int3
pop
adc
xchg
mov
xor
jno
es
cmpsl
sbb
cltd
int
jmp
mov
pop
cwtl
fs
cmpsb
mov
mov
or
mov
je
std
movsl
dec
enter
xchg
mov
fsts
dec
mov
scas
sbb
sub
mov
adc
arpl
ljmp
sahf
gs
or
ret
add
sbb
addr16
loopne
xchg
adc
cmp
pop
mov
mov
dec
xchg
sub
mov
xchg
push
inc
jb
dec
jl
and
pushf
mov
ljmp
and
inc
xor
pop
inc
cmp
sub
mov
movsl
stc
leave
fldt
movl
sub
jecxz
rorl
xchg
out
test
mov
xorb
xor
push
pop
mov
and
cmp
pop
popa
out
sahf
test
mov
lods
enter
lcall
repnz
jmp
pop
pop
lods
insl
add
cmpsl
sbb
add
mov
vprotb
add
scas
push
sbb
rclb
shlb
inc
sub
lock
or
imul
lods
orb
into
adc
sbb
mov
sbb
jo
jle
add
pusha
add
int3
cmp
movsl
repnz
mov
dec
repnz
sub
ja
ss
fcompl
frstor
inc
sub
and
mov
mov
outsl
nop
jb
out
dec
pop
mov
mov
xchg
insl
or
jo
scas
test
xchg
push
daa
sbb
pop
push
dec
call
xchg
in
iret
andl
push
leave
push
xchg
push
gs
aaa
or
scas
and
and
hlt
mov
lahf
dec
dec
push
lea
fstpt
mov
push
lea
or
stos
sbb
jle
pusha
sub
hlt
and
inc
ret
mov
mov
addr16
xchg
aad
sub
sbb
sub
movsb
add
cmpsb
add
scas
inc
loopne
cs
push
lock
ficomps
xchg
jne
inc
push
les
stos
in
push
inc
repz
xorl
pop
push
hlt
pop
or
aas
ret
inc
popa
cmc
jbe
dec
daa
pop
sahf
scas
dec
outsb
aad
pop
insl
outsl
jnp
mov
mov
push
mov
or
and
inc
sub
mov
mov
lds
testl
out
mov
xchg
or
or
mov
and
scas
pop
xchg
pop
mov
and
mov
mov
test
ret
repnz
cmp
je
jbe
test
lret
sti
jl
mov
aad
aad
mov
push
jb
lock
dec
aas
dec
push
popa
jbe
arpl
jle
aaa
push
inc
inc
xchg
xchg
push
mov
es
and
add
adc
sbb
in
jle
pop
daa
lock
cli
in
fsubrs
jne
fstpl
push
jno
adc
das
push
leave
dec
adc
rorb
in
push
in
das
add
scas
loope
mov
iret
push
int3
lret
data16
pop
cs
push
insl
sbb
dec
dec
into
push
stc
inc
mov
xchg
popl
mov
aas
jg
fwait
rcll
xchg
out
push
lock
jmp
xchg
mov
adc
jecxz
mov
xor
negl
jmp
push
daa
mov
push
les
mov
lret
fsubr
push
test
das
add
inc
test
inc
aas
lahf
lods
cwtl
push
mov
jmp
lahf
xor
popa
addl
movsb
hlt
ds
push
lock
std
xchg
in
xchg
mov
sbb
jp
mov
xchg
xchg
fidivrs
push
mov
addl
stos
push
shlb
imul
jo
add
xor
je
mull
iret
cwtd
add
daa
cmp
scas
sub
iret
mov
cmp
dec
loope
jnp
arpl
pop
and
push
sbb
pushl
std
xchg
pop
xchg
movsb
cmp
inc
fwait
test
mov
pop
scas
lock
in
mov
scas
push
out
or
stc
jl
cmc
mov
popf
sbbb
pop
xchg
je
push
mov
sbb
scas
and
or
and
in
mov
lds
hlt
cmpsb
insl
lahf
push
imul
jae
int
or
jmp
test
xor
sahf
insl
push
mov
in
cmp
mov
addr16
imul
gs
pop
mov
jecxz
dec
jbe
mov
outsl
add
scas
sub
ja
inc
add
inc
lock
shll
sub
xchg
rcrb
leave
sbb
add
inc
mov
notl
mov
sbb
dec
sbb
sbb
out
arpl
and
leave
rcrb
mov
cld
inc
dec
loop
pop
enter
movsl
inc
sub
hlt
dec
mov
xor
cmp
push
rcrl
mov
iret
mov
lret
bnd
and
mov
lock
fcompl
fistpll
mov
inc
xchg
adc
push
sbb
pop
fsubs
pop
mov
sub
inc
aad
xchg
and
push
cltd
in
add
mov
icebp
add
dec
sahf
stc
jno
std
mov
sub
addr16
leave
les
sbb
mov
push
push
dec
pop
mov
shll
fldl
es
inc
mov
mov
or
xchg
pop
push
popf
cmp
pop
faddl
adc
rorl
cmp
push
fwait
cmc
sbb
movsl
jae
mov
or
and
adc
push
lds
xor
loop
xor
cwtl
add
mov
adc
pushf
add
ret
cmp
and
push
mov
cmp
cmc
jl
imull
stos
cmp
pop
test
dec
je
and
xchg
adc
xor
cltd
fcom
outsb
sub
jns
fisubl
push
push
inc
pop
mov
pop
in
fiadds
arpl
mov
jnp
mov
sbb
jo
cmp
mov
cmp
push
jne
and
pop
push
leave
pop
shll
dec
test
push
ds
les
jnp
jns
push
jb
jle
lea
push
xchg
into
jg
or
pop
pop
daa
ficoml
fsubrl
adc
ljmp
pop
stc
or
in
rdmsr
insb
jecxz
insb
pop
cltd
cltd
dec
cmp
sar
sarb
push
ja
fucomip
xchg
mov
nop
insb
mov
push
notl
mov
mov
add
movsl
push
or
sahf
dec
sbb
lcall
adc
pop
push
loopne
mov
psllw
outsb
std
jmp
sbb
pop
cmp
popf
pop
sarl
mov
lahf
mov
pushf
int
les
and
sbb
mov
mov
or
lock
mov
inc
mov
sahf
pop
shlb
testl
jge
sahf
lods
pop
out
xor
jecxz
mov
dec
adc
pop
jo
out
push
addr16
cmp
leave
xchg
add
aaa
jne
or
xor
dec
data16
int
mov
je
mov
scas
cmp
push
sbb
aad
push
movsl
pop
cmc
sub
dec
mov
mov
pusha
push
mov
mov
cmp
sub
sub
lock
sub
out
fcomps
push
sbbb
pop
scas
sbb
aas
std
mov
fiaddl
mov
jmp
sti
xchg
jl
push
popf
jg
sbb
ljmp
jns
je
rep
pop
sbbl
int
or
sbb
mov
push
xchg
or
cmp
inc
lret
daa
push
mov
cmp
mov
hlt
in
ss
ja
les
enter
jbe
inc
je
lods
in
push
mov
jecxz
mov
mov
imul
xor
rcrl
inc
mov
mov
push
pop
lock
or
ss
mov
divl
into
into
xchg
sbb
test
adc
lock
mov
inc
lea
in
fidivrs
mov
push
mov
and
test
inc
jbe
jno
cli
xchg
loope
ret
pop
adc
mov
stc
je
inc
call
pusha
lret
sbb
pop
ds
mov
xchg
mov
add
mov
mov
incb
shl
mov
inc
lcall
sbb
push
mov
push
xchg
pop
and
mov
cli
lods
sub
pop
or
add
cmp
cmp
add
ret
sar
dec
mov
jge
repnz
ja
pop
xchg
push
iretw
test
rorb
and
fwait
push
dec
in
and
jp
inc
test
cli
add
popf
aaa
fucomip
xchg
cmpsb
jmp
and
popf
cmpsl
push
mov
adc
jmp
inc
scas
xchg
jg
icebp
cmp
mov
rol
enter
cmp
xor
pop
sub
pop
mov
fs
sub
iret
scas
jp
or
adc
lret
sub
sbb
aam
lods
mov
jns
out
stos
push
aaa
divl
add
push
cmpsb
loop
nop
mov
pop
pop
adc
jb
int
stc
pushf
jns
mov
or
mov
cld
inc
inc
mov
inc
fdivs
inc
dec
ljmp
mov
rorb
je
fxch
dec
fsubr
jecxz
lods
mov
popa
jp
mov
es
pop
sti
aam
and
lds
mov
mov
mov
mov
cmp
imul
push
sahf
fldl
mov
lahf
push
xchg
pushf
repz
js
mov
movsb
arpl
ficoml
pop
loope
shl
mov
sbb
xor
test
jae,pt
in
testb
into
mov
lret
decl
popaw
mov
iret
mov
icebp
movsl
adc
cmpsb
out
loop
ret
or
repnz
xlat
jb
clc
imul
cmp
jae
out
pop
outsb
in
dec
ljmp
sbb
int
cmp
inc
ljmp
imul
bound
andb
cmp
inc
stc
fisttpll
or
frstor
push
outsl
fmull
insb
lods
ljmp
and
mov
dec
cmp
call
cmp
jle
insb
fbstp
mov
push
cmc
out
jl
fmull
rcl
int
and
bound
outsb
movsb
dec
fmulp
lea
dec
out
dec
mov
movsl
ds
movsb
or
lds
push
inc
out
divl
dec
pop
nopl
and
lea
cmpsl
out
ljmp
adc
imul
or
out
add
test
sub
aas
jl
jno
outsl
daa
mov
adc
fucomi
inc
icebp
andb
xlat
push
les
in
and
ss
test
cmpsb
xor
push
cld
mov
stc
das
pop
mov
addr16
pop
clc
out
jae
pop
cmp
imul
sub
pushf
rcpps
test
lahf
push
mov
add
js
jno
cli
test
out
fistl
xchg
loop
mov
push
ds
mov
inc
xchg
inc
mov
xor
repnz
lret
jbe
push
dec
loopne
push
inc
loop
cs
dec
mov
sub
adcl
outsl
pop
fcomip
cmp
xor
mov
mov
pushf
idivb
mov
lock
sbb
fistpll
je
imul
std
cs
mov
lea
mov
aas
and
popa
decl
push
inc
and
sti
xchg
xor
sbb
mov
out
inc
cmpsl
shrb
add
inc
mul
xor
adc
loope
imul
pop
add
xor
subl
test
xlat
push
push
lcall
jb
jae
sub
sahf
add
rcrl
sub
push
je
ss
loope
and
repz
mov
sarb
sbb
jbe
lods
pop
ret
pop
clc
push
xor
jl
mov
sbb
inc
and
stc
jg
scas
shrl
mov
fimuls
mov
je
xorl
call
add
push
js
dec
test
leave
sti
pop
dec
or
add
stos
mov
mov
sbbb
or
jo
mov
mov
add
jp
pusha
aas
loopne
mov
in
imul
out
xor
xchg
scas
cmp
inc
popa
stos
imull
sub
sbb
out
adc
jge
andl
lock
adc
mov
xor
xchg
out
jge
inc
sub
push
inc
inc
lods
stc
fstpl
adc
roll
aas
shrb
mov
in
cli
adcb
fst
jb
pop
jmp
jae
imul
stc
add
pop
aam
push
mov
mov
mov
mov
xor
jne
notl
loop
popa
lods
add
mov
jge
push
xchg
push
adcl
scas
out
jae
inc
stos
jne
mov
push
lahf
cmp
mov
insl
pmullw
fs
jge
aam
xor
cmp
sbb
dec
sbb
je
dec
mov
dec
sub
arpl
push
adc
xchg
mov
dec
mov
and
test
aam
outsl
psllw
insl
add
mov
push
push
dec
pop
pop
cmp
shll
in
mov
call
dec
mov
pop
lret
xlat
je
out
dec
cs
icebp
movsl
scas
cmp
shl
in
mov
mov
dec
stos
imul
and
mov
test
pop
jge
adc
sbb
dec
out
cli
push
mov
xchg
jo
js
mov
push
shld
xchg
decb
scas
cmpsl
mov
pusha
arpl
mov
push
add
les
popa
pop
xchg
mov
inc
sub
dec
xor
xchg
addr16
shll
out
cmp
cwtl
pop
xor
pop
je
test
into
sbb
hlt
int3
in
mov
sbb
inc
leave
jo
lret
bound
ja
dec
sbb
add
sbb
in
aas
test
rcrb
loopne
daa
mov
call
std
adc
jle
cmpxchg
mov
push
push
and
scas
dec
into
loope
gs
in
scas
rcrl
sti
push
stos
mov
fbld
xchg
adc
sub
jae
cmpsl
mov
sahf
test
insl
or
nop
aas
imul
enter
adc
inc
xor
bound
push
daa
outsl
sub
je
or
add
pop
xchg
or
pop
ja
xchg
insl
xchg
hlt
lret
inc
or
jmp
mov
pop
xor
jp
xor
pusha
mov
stc
test
outsl
xchg
sub
adc
pop
add
mov
cmp
mov
mov
push
xor
mov
xchg
jmp
in
in
mov
add
dec
pop
lret
push
pop
aas
imul
cli
cmp
orl
pop
fstpt
pop
cmpsl
jno
mov
pusha
cmp
mov
and
pop
pop
dec
dec
mov
data16
dec
loopne
cmp
pop
ljmp
mov
dec
das
popa
cs
orb
mov
loop
or
sahf
dec
xorl
cwtl
das
mov
mov
incb
add
dec
loop
out
fsubrl
mov
inc
mov
andl
mov
sub
inc
sbb
mov
insl
inc
addr16
inc
pop
lcall
cmp
or
arpl
jge
aaa
mov
mov
jmp
out
rcrl
popa
sahf
stos
das
aaa
push
sub
call
push
xchg
push
cltd
rolb
xchg
aad
xor
scas
cltd
popa
fwait
sti
xchg
mov
push
loopne
inc
sub
jb
ficoml
pop
lods
jnp
in
pushf
jae
fisubrs
mov
or
das
mov
sbb
pop
mov
mov
test
jg
aaa
jge
lret
and
es
lcall
sub
lea
push
mov
mov
ret
sbb
mov
add
lock
jmp
or
in
inc
pop
mov
popa
adc
adc
imull
repz
dec
iret
push
aam
fidivrs
fists
xchg
mov
notb
icebp
jns
dec
test
jo
mov
pop
ja
jb
pop
xchg
int3
jmp
mov
pop
stc
jl
push
mov
into
mov
cltd
dec
xor
lret
andb
in
fs
mov
sub
daa
xlat
jmp
xchg
hlt
mov
or
cmp
pushf
cmp
mov
addl
sub
and
dec
dec
bound
adc
rcrl
xchg
cmp
fnstenv
jno
cmpl
bound
or
aam
nop
imul
mov
xchg
jmp
xchg
insl
stos
enter
mov
imul
out
bound
jns
or
pop
jbe
call
push
dec
and
mov
and
imul
rolb
out
mov
push
cmp
cmp
inc
fldcw
sbb
int
scas
mov
dec
lods
fidivs
mov
xchg
daa
leave
mov
je
sbb
pop
insb
add
popf
cmp
sub
cmp
xor
mov
jns
aad
pop
imul
ja
outsb
test
repnz
jbe
xchg
push
add
rol
shlb
sahf
jne
scas
pop
lds
in
mov
push
jnp
lret
add
cmp
aas
pop
pop
pop
sbb
enter
mov
ss
call
ret
imul
cmp
imul
adc
stos
pop
push
lods
js
fdivl
std
std
fwait
insb
das
aaa
mov
dec
shufps
movl
pop
xor
clc
js
movsb
mov
and
pop
or
sub
adc
cld
stos
lods
push
xchg
inc
int
mov
dec
out
enter
daa
adc
add
cli
inc
xchg
push
xlat
pop
cmp
inc
sbb
mov
and
push
push
dec
adc
dec
and
adcl
pushf
jb
sbb
xchg
mov
xchg
xchg
sub
ret
inc
fs
xchg
sub
push
adc
push
fs
fdivr
into
enter
mov
lret
sbb
mov
mov
ds
stos
jb
pusha
mov
cmp
mov
into
nop
mov
inc
fcom
addl
aaa
fnsave
pop
aam
fcmovb
imul
in
add
mov
dec
jnp
and
in
scas
imul
mov
add
fbstp
cmpsb
ds
xlat
inc
mov
lea
jbe
inc
sbb
ljmp
sahf
add
jo
daa
ljmp
push
imull
into
gs
jnp
out
cmp
nop
dec
imul
sbb
int
xchg
pop
push
xlat
leave
mov
adc
in
push
cli
lcall
or
xor
xchg
sbb
outsb
test
cmp
test
addl
sub
xchg
or
xor
jo
cmp
lds
test
jecxz
out
jnp
repnz
outsl
pop
pushf
cli
sarb
mov
popa
jp
movntps
fidivl
lahf
repz
test
mov
or
jl
imul
mulb
outsl
cmp
mov
scas
call
mov
xchg
pusha
mov
cli
mov
dec
add
aad
aaa
xchg
cmp
rcrb
lret
out
inc
pop
bound
cmp
jne
test
and
pop
push
cmp
sub
mov
outsb
push
mov
sti
mov
and
and
mov
cmp
subb
adcl
sub
mov
jae
ret
mov
adc
in
mov
out
pop
jmp
jb
outsl
loop
ret
inc
and
mov
rorb
cltd
cmp
movsl
xor
es
mov
and
cltd
pop
mov
fsub
mov
adc
cmp
inc
xor
movsl
inc
push
and
push
enter
xlat
outsb
shll
mov
cmp
adc
adc
es
sbb
adc
add
dec
sub
cmc
ss
cmp
arpl
lock
ja
push
rorb
das
pop
xor
rorb
cld
mov
push
test
mov
stos
popa
lods
test
addl
outsl
ljmp
inc
cmp
mov
or
icebp
call
jnp
sbb
nop
sub
es
sbb
imul
pop
sti
inc
and
subl
add
repnz
out
pop
cwtl
pop
add
xorl
mov
roll
inc
jle
outsb
sbb
and
inc
xchg
cmp
jmp
rolb
xchg
out
mov
jbe
mov
sub
outsl
mov
mov
repz
xor
fnstsw
dec
out
pop
inc
arpl
sahf
lods
adc
push
jmp
lret
out
push
mov
xor
jbe
rorl
test
fnsave
cmpsl
bound
sbb
test
pop
cmp
mov
adc
ficoml
aaa
inc
test
adc
hlt
gs
add
mov
inc
push
mov
xchg
popa
mov
movsl
icebp
pop
mov
js
xchg
lds
test
xacquire
add
xor
ljmp
lds
addl
jbe
mov
adc
cmp
xor
push
jecxz
inc
aad
test
xchg
mov
adc
data16
push
cmpsl
cmp
insl
aas
rclb
mov
hlt
xchg
cltd
add
jl
daa
shl
cmp
pop
push
leave
int
sti
es
mov
mov
or
mov
mov
aaa
lea
push
push
cld
xchg
xor
adc
or
add
push
dec
icebp
popf
jg
jns
incl
ljmp
adc
xchg
lods
fs
cld
xor
fisubs
cltd
es
popf
pop
and
pop
not
dec
int3
push
jmp
jmp
xor
jl
mov
iret
adc
mov
pop
movsb
inc
xchg
pop
dec
mov
add
test
ds
test
bound
in
insb
xchg
xor
cltd
mov
lret
daa
loope
aam
in
add
les
xchg
cltd
int3
sub
ret
mov
cmp
pop
add
out
fucomp
push
cmp
mulb
push
xchg
pop
dec
daa
lahf
je
psubd
xlat
cmc
stos
jbe
lods
xor
cmp
cmp
add
fldt
cmpsb
pop
and
in
xor
adc
dec
pop
sub
negb
sub
xor
add
sbbl
mov
ret
push
jbe
imul
inc
xchg
and
push
push
mov
dec
jne
add
cli
dec
in
cs
lcall
jbe
mov
shll
add
xchg
inc
fadd
and
arpl
lahf
mov
leave
in
and
and
imul
jg
aaa
jmp
aaa
rol
jp
adc
mov
push
mov
push
mull
movl
call
sub
mov
sbb
dec
xchg
lds
lcall
insl
outsb
shll
pushf
cmp
and
imull
ja
mov
fwait
mov
jp
iret
jle
inc
popf
or
lock
cmp
xor
subl
inc
push
out
sbb
rorb
sub
psadbw
outsl
nop
dec
sbb
cmp
imul
push
inc
mov
cmpsl
jle
pop
rcl
xchg
dec
icebp
xor
outsb
shlb
call
pushl
mov
push
sub
mov
leave
std
std
lods
inc
in
repz
xchg
push
loop
inc
mov
dec
shr
jp
fnsave
cltd
int3
and
xchg
leave
inc
dec
mov
fs
rcll
jle
xchg
dec
push
shll
sub
jns
xchg
jb,pn
in
nop
rclb
adcb
icebp
jno
adc
push
mov
push
cmp
mov
arpl
cmp
movsl
push
jmp
icebp
adc
fwait
jne
pop
test
or
adc
inc
add
xchg
cmpsl
adc
mov
mov
add
xchg
sbb
pop
cltd
inc
mov
sahf
jne
or
cmp
in
mov
push
testb
das
sbb
jge
repnz
test
in
mov
cli
out
xor
push
jp
popl
ljmp
psrld
adc
mov
jae
fldt
jge
leave
decl
test
sbb
aam
mov
or
stc
pop
stos
movsl
dec
cltd
sbb
outsb
cmp
pop
aaa
imul
and
fwait
mov
pop
icebp
inc
repnz
push
fxtract
imull
jae
jp
test
mov
or
sub
sbb
ss
stc
jbe
lods
jge
add
iret
mov
jge
push
dec
pop
es
mov
adcb
jmp
pop
xchg
cmc
lea
les
cmpsb
and
ja
aaa
loope
pop
stos
mov
fwait
movsl
mov
orb
pop
xor
add
xchg
dec
cmp
es
inc
add
dec
inc
scas
inc
fcoml
mov
int3
out
add
jge
inc
or
lcall
and
lds
in
mov
cwtl
in
loop
or
test
pop
mov
in
lock
inc
scas
adc
inc
cmc
dec
fbstp
push
lahf
xchg
mov
and
mov
jb
shrl
std
lahf
lahf
cmp
aam
jnp
ja
and
int
jmp
xchg
fstpl
je
lods
fwait
test
mov
xor
daa
ds
roll
add
je
push
movsb
mov
xchg
sub
lret
cld
mov
arpl
fisttpll
push
lret
xchg
adc
repnz
imull
adc
int3
test
sub
notb
stc
mov
les
insb
push
pop
repnz
cli
test
add
out
lret
mov
xchg
pop
adc
xor
jo
fucomp
or
xor
sahf
inc
lods
xchg
insl
xor
imul
push
jecxz
je
dec
add
push
mov
xchg
cld
sub
insb
mov
mov
and
test
iret
push
push
subb
xor
popa
inc
xor
mov
add
xlat
fistps
adc
call
stc
sbbl
inc
dec
fidivs
jno
push
repz
fbstp
cmp
popa
mov
ja
sub
addl
mov
stc
add
lods
inc
push
int
adc
sti
cwtl
aad
ds
cwtl
sbb
fwait
scas
lds
mov
out
add
test
iret
mov
mov
and
mov
nop
pop
stc
and
sbb
lret
inc
push
add
inc
or
and
in
in
bound
fisubs
negl
mov
mov
pop
cli
xchg
mov
sbb
or
mov
add
push
push
addr16
adc
jg
xchg
mov
adc
sar
pop
cli
push
aam
daa
mov
sbb
pop
jp
adc
addb
sbb
shll
pop
subl
stc
sbbb
fnstcw
pop
enter
push
push
in
pop
pop
adc
push
add
ljmp
daa
and
jmp
test
xchg
push
or
leave
pop
inc
stos
aam
fsubl
dec
data16
xor
inc
stc
mov
mov
stos
mov
inc
popa
xchg
inc
out
sahf
jmp
addl
lods
push
out
movsb
mov
outsb
add
sbb
adc
mov
xchg
in
stc
nop
sbb
pop
lods
jo
lods
sarl
xor
ret
adc
and
mov
xchg
jge
push
cmp
in
je
dec
test
sbb
push
lock
lods
inc
dec
into
xor
outsl
leave
pusha
mov
dec
mov
jg
dec
mov
loope
cmpsl
sbb
lds
lret
sti
sbb
xchg
test
xor
cmpl
mov
mov
outsb
out
mov
jle
add
xor
fstpl
repnz
in
adc
inc
daa
int3
cmpsb
fnstsw
xchg
sub
test
inc
add
mov
adc
sbb
stos
scas
push
jle
stc
mov
push
xlat
leave
out
out
inc
fistpl
ret
in
mov
in
inc
fsubrs
pop
lods
mov
push
pusha
testl
or
fldenv
rcl
dec
sbb
adc
sti
lret
and
push
fdivr
dec
test
shll
in
adc
cmc
mov
lcall
pop
mov
shll
cmp
xchg
fidivs
outsl
add
mov
outsb
pop
sub
pop
ss
add
mov
scas
outsb
or
push
jmp
push
pop
icebp
pop
xchg
in
xchg
mov
js
icebp
jo
dec
mov
iret
loopne
lods
test
fists
testl
mov
cld
sbb
ja
sbb
sub
mov
and
push
mov
mov
or
ds
pop
popf
ja
pushf
cld
sbb
or
fistl
fidivrl
out
inc
cld
inc
dec
xchg
outsb
push
jne
push
std
lock
lea
clc
rol
xor
int3
leave
xchg
in
mov
jmp
inc
loopne
scas
pop
dec
pop
subb
mov
shlb
iret
inc
mov
sbb
xchg
jb
sti
pop
icebp
sub
out
lods
in
leave
js
push
or
push
mov
clc
sahf
cmp
call
mov
stc
bound
sub
fwait
push
outsb
push
mov
jmp
aaa
xchg
aad
je
xor
mov
xor
popf
out
mov
outsl
mov
fucomp
test
lea
xor
xchg
pop
and
rcrl
add
cmp
mov
loop
xor
fldt
stos
mov
mov
adc
push
imul
fdiv
cmpsb
shrl
mov
pushl
mov
shlb
cmpsb
pusha
lahf
mov
pop
inc
adc
stc
and
adc
lods
ret
mov
jge
lods
ljmp
es
sbb
inc
fdivs
faddp
fwait
mov
clc
stos
xor
push
fcom
daa
das
mov
sub
inc
movsb
sbb
cs
sahf
pop
into
xchg
mov
dec
ja
les
and
stc
popf
pop
loopne
movsb
and
invd
and
sub
cmp
ret
xchg
test
sbb
fdivs
push
cmp
inc
mov
or
and
jae
jg
pop
add
sbb
xor
bound
xlat
ljmp
rcr
mov
jecxz
mov
daa
inc
test
arpl
fstpl
push
montmul
cmpsb
inc
dec
sahf
and
in
pop
mov
aas
cmp
stos
add
out
repz
nop
pop
test
pop
cmp
cmp
les
ficomps
xchg
faddl
icebp
jns
xlat
lods
xchg
lcall
cmp
or
iret
xor
inc
out
lea
mov
mov
pop
cmp
pop
mov
cmp
mov
pop
out
dec
pop
icebp
mov
and
stos
setg
xchg
movsl
insb
sti
jle
fsubrl
into
stos
add
push
add
add
xor
out
clc
push
dec
add
jg
inc
outsb
sbb
imul
addr16
lods
cld
arpl
icebp
inc
jl
cmp
std
xlat
sbb
aam
push
jge
dec
and
mov
test
push
daa
add
repnz
mov
mov
ljmp
adc
mov
mov
jb
add
and
push
ja
and
sbb
dec
and
sub
xchg
xchg
nop
cmpsl
push
out
cmpsb
call
test
mov
jb
out
adc
and
adcb
pusha
ror
mov
insl
testl
das
and
mov
inc
lock
mov
into
cmp
and
je
rcrb
dec
sbbb
push
xchg
lds
push
pop
push
xchg
sub
stc
fcomps
sub
or
daa
sti
xchg
cltd
ds
lock
sahf
scas
fwait
push
add
out
inc
in
loop
sbb
ss
outsb
mov
ret
jecxz
mov
sub
fs
xchg
xchg
or
xchg
int3
test
jge
pushf
jecxz
mov
add
je
daa
out
add
addl
mov
and
fdivrs
popf
adcb
test
push
ja
stos
cwtl
bound
and
xor
lods
or
adc
scas
or
inc
int
mov
jo
xchg
adcb
sub
out
xchg
xchg
pop
mov
pop
inc
sbb
xor
pop
add
and
adc
jmp
adc
je
std
mov
je
sti
loope
jbe
adc
xchg
orb
sub
notl
test
test
xchg
jecxz
lahf
dec
fnsave
call
ficoml
lret
dec
aaa
inc
inc
clc
lret
data16
movsl
mov
dec
insb
loope
mov
or
push
push
inc
sahf
cli
pushf
xchg
loopne
fsts
fidivl
es
adc
fistps
sbb
ret
fldlg2
cmc
mov
or
outsb
test
sub
or
cld
xchg
data16
cwtl
mov
shlb
enter
je
insl
push
adc
js
sbb
jge
mov
addl
mov
sub
adc
mov
push
fs
mov
test
ss
stc
sbb
gs
and
xchg
das
mov
and
dec
movsl
push
nop
fistps
cmc
jl
sub
insb
jle
daa
or
push
mov
sub
insb
xor
inc
insb
mov
xchg
incb
add
xor
out
ljmp
pop
mov
add
pusha
in
js
jae
fidivrs
gs
pop
incb
js
jno
mov
ljmp
jmp
inc
inc
lds
push
fcompl
sbb
mov
into
insl
add
mov
ja
mov
in
xchg
or
xchg
jns
xchg
push
in
icebp
movsl
mov
rclb
ret
mov
cld
insb
pop
inc
inc
xlat
inc
clc
sahf
out
dec
xchg
hlt
inc
dec
pushf
pusha
jnp
mov
and
int
jecxz
aaa
fsubrs
inc
jbe
jl
sbb
nop
jno
mov
push
mov
fldt
js
jns
xor
push
outsb
into
aaa
dec
push
push
popa
mov
pop
hlt
lahf
imul
call
outsl
and
imul
mov
outsb
adc
cmp
xchg
xchg
lcall
jnp
movsb
lods
mov
adc
into
jl
or
data16
leave
jb
sbbl
sbb
in
daa
adc
aaa
ljmp
inc
xor
je
sbb
std
jns
sbbl
sbb
pop
pop
and
stos
push
sbb
std
popa
xchg
cmc
and
push
push
or
mov
mov
jl
or
and
and
arpl
inc
cwtl
push
cmc
movsb
mov
xor
adc
ret
mov
pop
std
and
scas
sub
mov
ljmp
mov
pop
int
inc
subb
ljmpw
mov
out
pop
in
add
in
xchg
shlb
scas
jnp
xorb
xchg
pop
lds
sub
mov
aaa
adc
push
divb
adc
sbb
dec
loope
lret
add
rorb
lods
mov
mov
cmpsb
mov
fisubrs
lds
dec
enter
iret
repnz
push
jp
mov
mov
xor
or
cmp
aad
xor
lods
adc
push
cmc
cmp
push
and
xor
testb
mov
in
je
add
add
cld
inc
pop
cmp
popf
movd
inc
lahf
fdivrl
xchg
or
fs
mov
mov
mov
xchg
stos
sub
xlat
shrl
mov
imull
xchg
scas
sbb
add
mov
stc
lret
pop
xchg
jmp
in
xchg
fsubrl
popf
dec
stc
lcall
or
cmp
add
xor
filds
cwtl
scas
inc
add
xchg
fidivs
pop
cltd
push
and
pop
loope
dec
push
leave
inc
lcall
mov
fs
sub
pop
scas
mov
fldl
cmc
test
adc
call
sub
stos
orb
cmp
shll
fnstcw
mov
outsl
inc
sbb
add
or
xor
call
fbld
fidivrl
dec
mov
dec
cmp
pop
adc
ljmp
lea
xchg
add
aaa
cmpsl
imul
lock
cli
push
daa
dec
dec
or
stos
sub
cmp
mov
insl
adc
test
jmp
lods
add
aad
fnstsw
dec
push
and
lcall
leave
int
ret
or
adc
inc
lcall
pusha
cs
cmpsl
pop
xchg
jmp
mov
cmpsl
cmp
outsb
ret
out
sub
mov
or
adc
sbbl
lock
data16
xchg
clc
mov
and
out
cmpsl
scas
outsl
xchg
pop
rcll
jmp
adc
loopne
fcompl
dec
pop
dec
jnp
push
inc
mov
dec
fmuls
jo
aad
es
outsb
and
push
in
pop
xchg
scas
xchg
cmp
adc
pop
lcall
push
jp
jecxz
cmpsl
loope
mov
pop
fnsave
js
add
das
adc
sub
shlb
loopne
cmpsb
mov
shll
adc
ror
fs
js
sbb
or
xchg
push
imul
inc
pop
mov
repz
mov
call
iret
mov
out
cmpsl
fisubrs
popa
fisttpl
cltd
xor
into
jne
sbbl
fisttpll
xchg
add
andb
lods
orb
iret
xchg
cmp
sub
std
cmp
cs
ja
mov
imul
es
icebp
imul
leave
push
or
xchg
push
loope
cmp
mov
fcoml
test
js
add
inc
lcall
pop
cmp
pushf
mov
or
lds
xchg
pop
test
mov
je
imul
sub
mov
adc
call
inc
out
imul
lea
test
aaa
and
mov
mov
jb
nop
mov
testl
add
push
cmp
jnp
pop
pop
lods
imul
enter
fstps
sbb
lea
push
dec
cmp
push
jmp
out
je
lea
push
addb
mov
fidivs
fiaddl
test
ja
xchg
test
jo
popf
movsl
vcvtsi2ss
adc
data16
mov
or
lret
sti
mov
lods
insl
das
addr16
addr16
inc
imul
mov
out
mov
icebp
les
out
cmp
adc
negb
out
jne
pop
inc
clc
inc
jb
ds
popf
xor
out
push
xlat
ret
js
push
subl
mov
lea
movsb
in
xor
mov
aas
or
daa
mov
mov
push
xchg
cwtl
xor
loopne
lret
fldt
push
out
popa
enter
xchg
dec
sarb
in
imul
gs
movsb
gs
push
ss
jns
in
pop
test
gs
mov
aad
insl
lods
add
pop
mov
inc
cld
out
movsl
or
mov
jl
les
push
sti
lcall
adc
cld
jge
insb
fucomip
pop
xor
adc
jne
out
mov
xor
dec
add
cli
push
inc
mov
shll
rcl
add
sub
fists
jl
mov
mov
adc
inc
call
ja
inc
pop
in
pop
inc
push
sysexit
sbb
stos
inc
jle
xchg
add
loopne
sbbl
xlat
pop
iret
jns
negb
cmp
or
xor
mov
popa
jl
cmp
stos
inc
lss
sub
jo
ds
aaa
mov
insl
test
push
mov
pop
xchg
xor
xchg
in
push
in
in
jb
xor
leave
xchg
dec
in
out
mov
idivl
push
sub
sbb
fwait
inc
add
jecxz
js
ret
pop
lcall
test
jge
test
rcr
xor
push
mov
in
adc
hlt
jb
cltd
pusha
clc
ja
gs
jb
xor
mov
or
mov
sub
xchg
jae
xchg
inc
mov
clc
cld
jecxz
push
lcall
pop
filds
sti
xchg
xor
jecxz
or
cmpsb
mov
sub
pop
lcall
es
pop
push
rclb
imul
or
pop
cmp
adc
je
and
fimull
mov
incb
sbbl
fscale
jo
ret
mov
pop
out
push
jns
jmp
mov
movsl
loope
mov
lds
cltd
cli
cltd
dec
ds
clc
jmp
aad
lds
pop
js
aas
jecxz
filds
in
push
adc
leave
mov
push
int3
and
push
add
cmpsb
or
mov
jp
shlb
pop
js
and
fisubrs
les
mov
inc
push
mov
xor
sub
push
xchg
pop
xor
cmpsb
icebp
xchg
fists
add
into
xchg
cmpsl
ljmp
out
test
in
dec
repnz
inc
in
cmp
jno
aad
or
pop
in
sub
aad
or
inc
pop
pop
and
sub
and
jnp
pop
adc
lahf
inc
push
repnz
jae
and
inc
addr16
adc
push
or
jns
pop
cmp
pusha
mov
aam
add
addr16
mov
cli
test
and
test
mov
sbb
shlb
sti
pop
mov
iret
jo
daa
leave
testl
ljmp
pushf
pop
mov
hlt
aad
outsb
xor
shrl
or
scas
lods
jbe
jmp
aas
push
movsb
int3
add
lds
pop
mov
mov
test
xchg
jo
test
loop
out
out
je
icebp
push
lret
xor
stos
lea
xchg
pop
lcall
aad
mov
pop
cmp
js
test
leave
aad
jns
fs
mov
fiaddl
mov
push
cwtl
pop
push
lret
pop
inc
outsl
daa
gs
in
fwait
sub
mov
lret
rcrb
pop
jmp
sbb
lret
stc
jb
sub
sbb
in
pop
add
mov
add
das
fmull
rcrb
mov
mov
jg
jecxz
mov
jb
out
int3
pop
clc
test
xor
pop
pop
sahf
mov
mov
imul
mov
adc
gs
outsl
lret
mov
call
rcrb
push
jb
pop
push
daa
push
add
int3
mov
or
xchg
test
insb
ret
mov
jo
jge
int3
xchg
push
jne
lock
and
cmp
fisubrs
push
pop
cmp
js
xor
cmp
and
mov
or
jge
das
pop
addr16
or
add
push
inc
leave
fidivs
sub
inc
push
inc
int3
dec
mov
int
mov
dec
or
or
xlat
add
sub
cltd
xor
fwait
mov
inc
adc
les
gs
jo
aad
stos
add
mov
loopne
das
cmp
pop
add
adc
jb
mov
push
arpl
outsb
rcll
insb
xchg
stc
add
inc
aad
jb
lods
daa
scas
sub
push
sub
mov
jle
mov
and
outsb
addr16
push
mov
xorb
out
sbb
jns
stos
mov
adc
push
inc
adc
cmp
pop
inc
sti
pop
jo
push
cs
test
std
adc
dec
dec
movsb
test
sbb
fucomip
repz
pop
das
cltd
mov
inc
jge
push
outsl
inc
sub
and
xchg
add
or
clc
fsubs
xor
dec
js
call
inc
push
push
popf
fistl
inc
add
daa
push
jb
jnp
popf
and
cmp
ja
and
inc
js
decb
dec
enter
dec
movsb
pushf
xor
cmp
mov
or
adc
imul
xchg
mov
sub
jp
imul
aad
arpl
push
mov
mov
fwait
lock
fwait
lcall
jp
sti
daa
outsl
mov
dec
andb
mov
call
mov
adc
xlat
int
inc
aas
lahf
xor
imul
jg
cmp
mov
mov
aas
mov
pop
jp
lds
inc
shlb
lret
cwtl
repz
icebp
mov
shr
sbb
pop
lea
xor
les
dec
sahf
shl
cmp
pop
in
xor
insb
lock
cmp
jge
dec
cmp
add
mul
jp
cmc
sbb
dec
enter
mov
cmpsl
addr16
hlt
frstor
and
jae
lock
sbb
xchg
lds
inc
ss
dec
pop
jle
mov
xor
adcb
xchg
orb
fwait
xor
int
dec
inc
sub
push
push
fs
xchg
add
xor
push
xor
test
js
dec
int
xlat
lret
dec
inc
push
and
sarb
pushf
fwait
pop
hlt
inc
arpl
into
les
or
mov
xlat
jle
pop
cmp
xor
pop
inc
loopne
in
jle
shrl
pop
repz
inc
add
and
or
mov
fistps
push
fisubrl
rorb
and
lds
imul
push
and
inc
pop
daa
mov
popa
xorl
scas
mov
dec
loop
fsubrs
ljmp
cmp
xchg
ja
out
xor
adc
push
jbe
aas
gs
je
mov
add
push
scas
sbb
xchg
in
iret
sub
shl
cmp
xchg
and
and
mov
ljmp
int3
inc
stc
leave
jo
push
lret
mov
movsb
pop
mov
bnd
ds
mov
iret
inc
hlt
pop
fwait
popa
jnp
sahf
mov
add
mov
xchg
cs
mov
imul
sbb
push
sbb
ja
es
test
movsb
xchg
adc
adc
pop
and
xchg
adc
testb
xor
push
cwtl
ss
daa
mov
mov
out
loopne
jnp
xchg
cmpsb
cmc
mov
pop
dec
cmp
mov
mov
clc
adc
add
xor
data16
or
fnsave
jo
xchg
sti
xchg
xchg
nop
or
cmp
pop
sbb
xchg
add
sub
in
sbb
mov
sahf
jle
or
shll
jg
test
enter
push
mov
shrl
stos
shll
push
mov
jg
fsubr
xchg
imul
inc
cmp
xor
ret
dec
and
cmp
pop
mov
pop
jle
dec
adc
jno
xchg
dec
data16
jmp
inc
sub
rcl
lods
mov
sbb
call
push
dec
pop
and
and
lds
shl
cli
das
and
shlb
xchg
or
iret
jle
jmp
fstpt
nop
xor
out
sub
repz
lods
aam
pop
and
push
push
jb
shlb
idivl
pop
dec
inc
js
fisubrs
mov
and
imul
and
jo
or
and
xchg
aam
dec
shlb
inc
test
gs
out
inc
sbb
popf
lock
dec
clc
aas
in
jne
imul
cmp
in
add
pusha
roll
loop
adc
push
nop
cmpsb
lock
in
push
xchg
mov
lods
insb
sahf
jne
xorl
adc
lret
bound
test
xchg
inc
adc
mov
sbb
and
mov
in
cld
lds
inc
sub
fdivp
adcl
andl
jle
inc
xlat
mov
ret
pop
cmc
hlt
sti
aam
cli
pop
movsl
cmp
pop
jl
cmp
in
shrl
dec
xlat
xlat
jbe
mov
mull
loope
xchg
cmp
das
cmp
ret
xchg
mov
les
jle
sub
negb
inc
std
cltd
lret
push
lret
xchg
addr16
mov
ret
sub
movsb
outsl
sub
mov
pop
lock
xlat
ds
push
jmp
xchg
jo
nop
sub
aas
repz
and
test
lods
inc
stos
push
push
push
xchg
jns
add
xchg
cmc
sbb
cmpsl
outsb
rolb
std
mov
popa
mov
in
scas
inc
fimuls
aaa
dec
cmp
cmp
sbb
mov
insb
stos
xchg
loope
sub
sahf
clc
add
fadd
sub
pop
ja
jae
or
jne
sub
ja
inc
ficoms
clc
ljmp
test
stc
jae
jbe
inc
prefetch
xchg
fbld
sub
mov
xor
stc
test
adc
iret
repnz
sbb
pop
mov
jnp
gs
push
lods
xchg
stos
xchg
inc
cmpxchg8b
testb
or
ret
push
gs
sub
or
mov
shrl
add
inc
lods
and
in
push
rcrl
push
cmc
notl
daa
sahf
mov
sahf
out
mov
gs
mov
jp
sub
loope
js
xlat
add
push
out
aam
je
fcmovbe
mov
shrl
lods
cltd
jns
sub
and
loop
xchg
sub
add
cmpsl
jecxz
pushf
fwait
popf
jl
iret
mov
mov
xor
push
push
movsl
inc
push
add
insb
fsubs
mov
sbb
movsl
sbb
outsl
push
dec
pop
les
push
jmp
movsb
iret
jae
sub
mov
aaa
or
fnsave
pop
aam
sub
shrb
fidivs
mov
sti
leave
pop
lods
mov
sbb
cwtl
dec
push
inc
mov
loope
mov
lods
out
push
inc
cmp
inc
out
mov
arpl
lret
cmc
add
imul
popf
mov
sbb
ja
lods
test
pop
cmc
shlb
mov
and
mov
iretw
xlat
lods
test
adc
in
sub
xchg
rcrl
push
pop
xor
cmp
and
fisubs
cmp
push
push
call
outsl
in
push
push
xchg
pop
pop
dec
cmp
cwtl
insb
imul
cld
adc
test
pop
daa
sahf
stos
aam
lea
pxor
cli
adc
inc
ss
arpl
imul
pusha
push
inc
mov
xchg
mov
dec
mov
dec
xor
mov
fnstenv
sub
mov
pause
in
jbe
push
mov
call
push
insb
mov
popf
das
loope
push
ficompl
pop
cmpsl
stc
push
xor
leave
cmpsb
sub
testb
lods
pop
xchg
sub
pop
mov
jl
add
into
popf
shl
getsec
xor
xor
mov
in
pop
fwait
adc
daa
inc
jmp
scas
aaa
into
addr16
inc
xchg
mov
mov
ss
aas
out
add
mov
pop
or
pusha
dec
js
data16
xor
dec
fucomi
mov
sbb
mov
add
add
push
ret
repz
enter
mov
sub
xchg
push
subb
mov
movb
xchg
cli
aam
sub
or
mov
sbbb
add
and
movsb
scas
inc
popa
loopne
ret
mov
inc
push
loopne
andl
xchg
movsb
call
fldl
xlat
ss
xchg
mov
push
lret
shrb
aam
int
in
incb
dec
cmp
lahf
push
pop
js
push
xchg
inc
cmp
leave
push
stos
sub
mov
mov
add
mov
xor
push
shll
mov
in
pop
mov
cmc
push
repz
add
dec
rolb
inc
fcom
push
pop
xor
cmp
mov
xchg
and
xlat
repz
jbe
mov
pusha
cmp
adc
sbb
gs
jmp
lock
mov
cmc
xor
sub
push
out
dec
push
jo
into
xchg
sbb
lds
xor
js
pop
sahf
jl
mov
sbb
push
add
xchg
add
cwtl
fildl
sti
test
lods
sub
inc
dec
fbstp
subl
xchg
data16
adc
fmul
daa
adc
inc
push
jp
sub
mov
test
test
push
jne
dec
loop
xchg
int3
arpl
call
and
enter
mov
bound
sbb
lea
push
movsl
das
jae
lcall
jns
xchg
repnz
stos
or
jge
in
and
test
mov
xchg
jmp
xlat
loope
sub
inc
jecxz
xor
aam
add
add
mov
cmpsl
xchg
rolb
xor
in
das
addr16
sub
pop
mov
xor
mov
inc
pop
or
fsts
mov
mov
stos
xor
pop
push
push
push
xor
xchg
fidivrl
andl
pusha
dec
movsl
mov
aaa
inc
inc
ficoml
sarl
iret
sub
popa
clc
in
iret
xchg
push
sbbb
sbb
mov
in
aas
push
add
stc
je
sub
xlat
sub
xor
pop
add
jns
mov
jp
daa
jae
aam
add
and
or
ds
sbb
out
ss
mov
ljmp
mov
pop
loope
or
cmpsb
sub
lret
inc
lcall
lds
aaa
out
pusha
push
fnstsw
mov
int
in
inc
call
les
mov
bound
jmp
add
ds
mov
push
loopne
movsl
ret
imul
lret
rorb
xchg
je
or
dec
ljmp
mov
sbb
test
js
and
jns
and
or
xchg
ret
lods
mov
add
jecxz
into
cmp
mov
jmp
dec
pop
jl
sbb
or
lcall
out
addr16
mov
in
cmc
fnstenv
pusha
out
inc
cmc
cmp
lret
inc
or
jae
mov
or
ds
cwtl
xchg
sahf
add
push
jne
mov
jmp
mov
or
mov
call
or
js
inc
mov
je
jp
and
in
xor
cs
push
cmp
push
test
jb
xor
adc
stc
lods
jmp
cltd
sbb
sahf
mov
int3
loopne
mov
lods
lods
mov
outsl
mov
push
aaa
xor
inc
hlt
cld
popf
inc
push
or
mov
lret
add
push
add
mov
stos
imul
inc
xchg
pop
dec
dec
xchg
mov
roll
clc
lock
cmp
sbb
std
cmp
mov
dec
mov
imull
jp
xchg
and
popf
push
loope
pop
call
leave
push
mov
js
lea
loope
testl
xor
lcall
inc
push
arpl
dec
xor
push
adc
in
pop
cli
dec
daa
insb
xlat
adc
push
jbe
jno
sub
ret
sbb
std
xchg
cs
in
test
repz
es
sub
ljmp
dec
in
add
jg
mov
cld
or
jmp
push
mov
test
inc
mov
inc
ss
xor
mov
insl
xchg
mov
jp
fsubr
dec
xor
push
push
or
loop
cmp
inc
jp
das
outsb
out
outsb
jp
iret
xor
jae
cwtl
insl
and
in
movsb
repnz
jb
add
or
sbb
insl
sahf
pop
or
loopne
xchg
cmp
fimuls
shrb
xlat
popf
sub
xchg
sahf
mov
sahf
mov
push
stos
dec
inc
xor
mov
imul
cmp
imul
outsb
sub
in
dec
faddl
xchg
test
icebp
mov
pop
xchg
in
push
shrl
pop
mov
ja
in
jge
mov
pop
ficomps
int
mov
loope
cmpsb
cmp
fists
xchg
mov
pop
pop
mov
out
inc
push
push
jns
aam
sub
or
or
adc
lret
aas
jo
cmp
adc
inc
daa
sbb
jo
dec
push
in
push
cmp
fldt
int3
mov
jae
pop
je
or
jg
rcrb
xorl
xor
je
jle
repz
pop
inc
adc
xlat
xor
sub
outsb
mov
pusha
lret
pop
dec
test
bound
iret
dec
lods
cmc
push
shll
stos
out
cs
push
and
dec
sti
mov
mov
mov
sbb
pushf
lods
mov
mov
jp
jno
out
fstl
sub
insl
pusha
out
xor
xchg
sub
sbb
jbe
adc
pop
add
xchg
adc
mov
pop
pushf
xchg
out
dec
cmp
cmpsb
sbb
mov
xchg
mov
pop
ficompl
jmp
dec
aad
pop
or
cmpsb
inc
les
inc
sub
add
loopne
out
mov
bswap
xchg
xor
xchg
mov
pop
cmp
cwtl
dec
mov
inc
pop
cld
sbb
adc
jmp
xor
mov
dec
push
mov
mov
mov
in
xchg
pop
xchg
add
jae
xor
inc
cmpsl
imul
enter
imul
and
loopne
loope
gs
xchg
pop
mov
inc
pop
mov
cltd
popf
loop
inc
in
scas
ds
movsl
lret
fldenv
inc
pusha
pop
inc
movsb
jecxz
mov
xchg
push
insl
mov
add
mov
mov
or
mov
ss
mov
call
cmp
mov
outsl
daa
jno
pop
lock
cmp
push
jp
xor
jle
ljmp
stos
and
push
push
popa
pop
xchg
lock
std
adc
loopne
xchg
xchg
pop
push
adc
sub
sub
xchg
nopl
dec
push
out
sub
loope
push
sub
dec
test
aad
ds
dec
bound
pusha
imul
jb
push
scas
shll
xor
test
out
jp
add
fistl
je
mov
mov
in
scas
movb
xor
xor
aaa
data16
pop
sub
pop
popa
pop
icebp
cmp
in
sbbl
add
clc
mov
pop
call
cmp
pop
mov
inc
leave
mov
add
push
mov
dec
mov
and
call
les
mov
sahf
das
pushf
jae
cmpsb
cli
mov
and
mov
imul
stos
out
jg
sbb
sub
pop
leave
pushf
ret
fisubrs
mov
jno
fsubr
stos
rcll
pushf
jo
mov
repz
push
mov
and
pop
push
push
shrb
sti
lcall
mov
cmpsb
repz
add
mov
cmp
jp
add
adcl
testb
and
lret
inc
mov
lcall
cmpsb
xchg
inc
xor
vpaddusw
xor
mov
mov
mov
fucomp
jg
outsb
cmpsb
sbb
push
xchg
aas
sbb
add
mov
rcrl
pop
scas
in
es
mov
jo
std
mov
jg
mov
mov
sbb
mov
lret
mov
push
and
and
pushf
jecxz
add
mov
adc
push
sbb
lretw
aaa
sbb
out
fwait
mov
cs
fnstcw
orb
mov
add
mov
push
in
ret
mov
mov
jl
mov
movsl
or
outsl
jp
loopne
xchg
mov
xchg
out
push
je
lock
fwait
or
sub
mov
rorl
into
push
mov
push
fs
das
aam
fs
mov
sub
out
sbb
ds
pop
dec
pop
adc
sbb
and
into
rclb
cmp
sub
dec
pop
jb
jnp
xchg
ja
daa
xor
mov
insb
push
scas
ret
fs
popa
repnz
cmp
cmpsb
lock
ds
sub
pop
cmc
mov
lods
xchg
add
dec
stos
add
ljmp
inc
ficompl
test
je
pop
aad
hlt
mov
fs
stc
imul
add
pop
ljmp
jecxz
cmp
jne
jmp
mov
push
push
jmp
dec
aaa
pop
cwtl
das
mov
sbb
sub
adc
lahf
jb
ret
add
lds
out
xchg
pop
dec
bound
bnd
jmp
cs
pop
xor
imul
push
adcl
adc
xor
ret
das
in
jo
insb
das
fists
test
popf
cmp
lods
test
mov
adc
sub
mov
or
sub
xchg
jb
enter
das
mov
shld
sbb
mov
outsl
adcb
sbb
add
jbe
ffreep
pop
adc
jb
or
cmp
adc
xchg
and
jle
inc
int3
jp
dec
in
pushf
xor
test
dec
ja
mov
enter
mov
arpl
xlat
test
sub
lods
inc
add
jne
cli
in
xchg
pop
mov
hlt
or
sbb
dec
stos
lahf
xor
roll
sub
mov
pop
xor
fidivrs
fisubs
lcall
or
aaa
and
insl
xor
lret
loopne
inc
loop
sbb
cld
out
in
and
push
adc
das
cmp
dec
xchg
shrb
jle
mov
enter
xchg
mov
add
mov
sarb
jo
imul
jecxz
int
rcll
out
and
add
int
incb
dec
iret
mov
sbb
aas
mov
push
sub
or
push
jmp
xor
popa
add
sbb
or
adc
push
sbb
mov
ret
fsts
ljmp
xor
pop
leave
push
mov
rolb
inc
push
xchg
dec
data16
jne
lret
in
stos
jg
das
fildl
mov
mov
fisubrl
popa
ror
insl
sbb
dec
push
aad
sbb
popf
andb
test
push
divl
sub
ljmp
jg
add
xor
loop
xlat
jns
add
int3
stos
in
xchg
xchg
push
add
cmp
jno
jle
aad
pop
mov
and
lcall
repz
xchg
push
ret
lock
push
imul
xor
dec
movsb
aas
jae
mov
dec
shl
push
pop
add
iret
xor
orl
jo
ljmp
mov
push
out
dec
mov
insl
jnp
pop
dec
fsubrl
inc
lea
xlat
in
inc
ja
push
test
lret
mov
push
aas
dec
xchg
out
sbb
dec
inc
jmp
jbe
dec
scas
inc
sarl
push
aaa
hlt
cmp
out
sti
rol
xor
adc
ss
iret
push
mov
adc
and
cmp
imul
in
bound
sbb
fcoml
add
mov
adc
pop
int
dec
push
jb
mov
lret
pop
rol
pop
mov
aam
in
sti
xchg
pop
adc
push
mov
jp
icebp
and
adcl
mov
or
jp
add
call
inc
scas
and
loopne
mov
add
mov
and
out
stos
ret
inc
popa
clc
jno
lret
lret
adcb
sti
cmpsb
push
sti
pop
jae
fsubrp
cwtl
shufps
imul
xor
shlb
out
int
inc
pop
mov
test
stos
int
pop
int3
sbb
mov
and
mov
jae
cli
mov
fnstenv
enter
ja
ja
mov
jmp
lds
mov
repz
cld
pop
rcrl
sbb
mov
in
popw
xor
lods
mov
mov
ss
mov
loopne
mull
mov
or
add
dec
jle
iret
cmpsl
mov
pop
es
mov
ret
daa
repnz
xchg
sub
mov
andb
fdivl
inc
in
dec
mov
shr
fstl
repz
inc
jbe
push
shlb
or
dec
and
inc
rorb
inc
cmc
pushf
jae
and
int3
mov
andb
lcall
inc
fsubrl
xchg
stos
pop
cmp
jg
outsl
mov
movsl
fisubrl
subl
adc
push
imul
xchg
sub
repz
adcl
add
cmp
sbb
adc
mov
test
mov
or
inc
xchg
pop
shll
and
hlt
scas
jnp
or
dec
jle
testb
notb
xlat
cmpl
cmp
pop
shll
and
cmp
inc
insb
and
jb
dec
push
inc
testl
lret
sbb
ficomps
add
xchg
ss
jecxz
cld
sbb
data16
mov
gs
dec
dec
aam
xchg
enter
js
xchg
or
fldcw
push
jge
stos
jle
push
cltd
xlat
lahf
xor
jmp
aaa
repnz
mov
fdivl
jne
xor
jp
and
ss
js
aam
xor
xchg
pop
loopne
cld
mov
cmp
in
scas
add
lcall
mull
addl
jns
shll
outsl
mov
mov
lea
mov
test
add
jno
adc
ja
insb
filds
subb
fs
lods
nop
mov
int3
sarb
pop
push
in
jge
pop
push
and
int
cmpsl
add
aad
data16
ljmp
xor
call
inc
fdivrs
pop
xor
adc
sub
icebp
xor
sub
mov
sarl
sbb
sbb
mov
lods
ret
and
pop
icebp
lods
shll
mov
mov
sbb
mov
mov
in
pop
push
dec
popf
sbb
and
pushf
adc
or
inc
xor
jge
sub
repz
mov
hlt
adc
imul
aam
xchg
mov
mov
or
dec
bound
fsubr
push
mov
leave
mov
shl
mov
sbb
call
or
mov
jae
test
fucomp
jg
add
inc
adcb
mov
pop
mov
std
lods
or
stc
xchg
movsl
outsb
mov
data16
sub
cmpsb
jp
xlat
xchg
rorb
ret
xor
sub
lock
jge
pop
lea
dec
sbb
jnp
lea
arpl
and
sbbl
scas
xor
hlt
sub
inc
xlat
stos
dec
dec
test
test
scas
xchg
adc
test
cmp
mov
push
rorl
test
add
pop
outsb
das
or
lea
mov
loopne
jnp
jecxz
mov
sahf
push
dec
sbb
jo
sbb
pop
cli
les
negb
cmpsb
push
pop
sarb
daa
cmp
mov
ret
and
lcall
aas
or
sahf
adc
iret
mov
and
shrb
xchg
mov
scas
lds
lahf
call
adcl
and
inc
pop
insb
pop
sbb
inc
cmp
mov
jns
push
adc
jae
sbb
lds
mov
mov
out
pop
lret
sbb
lock
addb
inc
and
lds
ret
test
sti
and
pop
jecxz
sub
push
push
in
mov
jne
push
daa
inc
out
xchg
and
shr
mov
adc
jmp
ret
sbb
add
cmpsb
inc
shll
mov
xchg
incl
xor
and
int3
in
mov
mov
jae
hlt
dec
out
push
mov
and
inc
dec
lret
mov
loopne
bound
fstpl
ret
adc
dec
jo
jle
inc
jae
addr16
or
and
jae
cmpsb
or
cmp
jns
test
test
push
push
xchg
ss
inc
jl
sub
xor
xchg
sbb
int3
dec
rol
sub
adc
mull
xchg
cmp
ret
outsb
shrl
iret
or
cmpsb
or
pop
push
jo
mov
xor
push
sbb
shll
js
mov
push
movsl
or
test
jb
sub
xchg
and
lahf
adc
xchg
out
mov
jne
pop
xchg
lds
mov
xchg
lods
aam
sub
sub
xor
test
push
or
insb
jl
dec
fidivrl
hlt
xor
lea
cli
es
fcomps
popa
gs
sub
inc
lret
xor
xchg
pop
jo
sub
cmc
mov
jge
in
addr16
mov
xchg
inc
mov
add
mov
sub
psrld
pop
pop
arpl
ret
fs
das
int
popa
add
mov
dec
and
xor
jbe
ds
add
inc
sub
icebp
int
fcmovu
repnz
inc
cmpsb
inc
negb
or
add
mov
cmp
pshufw
outsl
addl
out
shr
or
or
sub
add
insb
icebp
add
jbe
lea
sbb
and
into
imul
xor
mov
aaa
dec
mov
push
rcr
or
pop
test
shll
dec
les
fildll
inc
rorb
push
lods
subb
loop
clc
xor
sbb
xchg
nop
loopne
jmp
pop
sti
xor
ret
pop
jne
subl
test
lret
out
movsb
ficoms
sub
cltd
pop
insl
fildl
mov
mov
sbb
add
add
out
mov
shlb
mov
mov
out
rolb
jg
insb
test
loope
stc
iret
mov
xor
cmpsl
jmp
and
mov
jns
mov
fadd
aam
repnz
or
loopne
idivb
rorb
testl
in
sahf
sbb
push
or
mov
sub
imul
cmpb
aaa
sbb
mov
cwtl
inc
jmp
adc
clc
xchg
dec
sub
pushf
mov
dec
jge
sub
sbb
add
notb
xor
add
push
sub
js
cmp
movsl
stc
fldt
cmpsb
jge
dec
pop
xlat
xchg
sub
ret
lds
lret
insl
ljmp
rcrb
add
inc
mov
stos
orl
hlt
pop
pop
test
outsl
pop
mov
loopne
add
xchg
inc
xlat
mov
ret
shl
imul
dec
leave
pop
mov
pop
pop
adc
cmpsl
sbb
xchg
mov
dec
rorl
and
pop
mov
scas
jno
xor
xor
fsts
mov
mov
mov
fistps
mov
xor
rorl
push
pusha
inc
ds
or
lret
and
adc
out
in
mov
jge
stos
adc
aaa
popf
lahf
cwtl
pusha
popa
xchg
mov
jo
cmp
in
lret
out
testl
xchg
rol
in
and
xchg
jecxz
insb
out
jp
xchg
out
ret
fcomip
cmpsb
js
sub
pop
lahf
xchg
push
adc
jbe
out
mov
jmp
hlt
in
mov
or
insl
sahf
and
pop
lahf
xor
sbb
mov
rolb
jmp
or
mov
inc
cmpsl
push
push
iret
loope
addr16
pop
sbb
cltd
add
inc
fsub
jbe
cli
mov
adc
or
lret
mov
inc
mov
insl
sub
sbb
loopne
outsb
loop
les
ds
test
push
loopne
js
addr16
fadd
aas
dec
add
js
sub
xor
inc
cs
mov
popf
jecxz
out
mov
jecxz
mov
jns
fwait
inc
mov
leave
xchg
jg
xchg
arpl
sbb
or
fmull
nop
andb
push
daa
add
mov
andb
orb
test
outsb
movsb
int3
mov
loope
fwait
sti
sarb
add
call
fldcw
pop
push
sti
inc
push
ror
mov
aaa
pop
mov
pop
rorb
xor
jae
bound
imul
cli
xchg
push
xor
stos
xchg
leave
dec
mov
repnz
aas
mov
cs
adc
and
dec
out
or
inc
lods
imul
mov
fwait
xor
mov
xor
jmp
sub
xor
push
or
xchg
ffreep
sahf
test
ficoms
adc
into
jecxz
mov
pushf
cmpsl
jns
mov
jecxz
jmp
xchg
test
pop
fdivrl
in
insl
ljmp
push
aas
shrb
jae
mov
loope
cwtl
and
mov
jge
sub
cmp
or
xchg
inc
es
test
loop
mov
andl
faddl
in
push
mov
inc
iret
pop
testl
xchg
sbb
push
loopne
into
sbb
and
loope
jmp
hlt
xchg
lcall
test
imul
mov
outsb
stos
sub
test
std
jns
idivl
mov
test
inc
shlb
loop
fwait
pushf
sbb
es
test
mov
cmp
out
test
adcl
in
push
push
jg
lret
mov
mov
inc
inc
enter
mov
out
clc
mov
andl
add
addr16
push
je
and
or
jmp
cmp
sub
repnz
scas
fstpt
test
push
push
orb
pop
inc
inc
movl
xchg
jecxz
cltd
pop
in
repnz
cmp
push
out
inc
int
hlt
cmp
or
out
out
pop
fmul
lea
dec
mov
inc
movsl
in
mull
clc
or
test
stos
inc
mov
subl
push
mov
outsb
xchg
mov
aam
mov
mov
adc
dec
pop
cmp
fucom
pusha
cmp
sub
ficoms
in
or
cmp
out
hlt
jo
add
push
es
lods
cmc
push
negb
stos
mov
je
ja
pop
test
lret
pop
add
xor
jno
je
xor
dec
inc
push
mov
xor
push
data16
inc
hlt
pop
loopne
int
fidivl
push
outsl
ja
cli
xchg
and
add
cwtl
call
jnp
mov
push
jmp
xchg
or
mov
outsb
push
stos
mov
insb
mov
mov
stos
test
push
cmp
push
stc
outsb
ds
cmp
outsl
jp
push
xlat
add
mov
lahf
sbb
out
lock
bswap
movsl
jnp
mov
ljmp
xchg
or
iret
pop
icebp
decl
sarl
push
fldl
aad
jle
mov
int
mov
pusha
adcl
jo
push
mov
adc
xchg
out
cld
aaa
jae
inc
fldz
push
push
outsb
add
imul
add
rclb
xchg
scas
push
inc
ret
cs
repnz
pop
push
mov
dec
mov
push
roll
out
in
cmc
push
mov
imull
pop
mov
stc
insb
loope
mov
stos
mov
scas
push
jae
js
push
fisubrl
enter
push
inc
push
fdivrs
jo
stos
insl
fdivr
xchg
jno
imul
cmp
lret
xchg
movsb
int3
dec
jne
jp
sub
inc
or
xchg
xor
inc
test
xor
test
inc
sub
andb
imulb
loopne
leave
cmp
loop
inc
out
into
and
sti
inc
enter
psrad
fsubs
sahf
arpl
outsl
mov
mov
xchg
push
or
mov
pop
popl
pop
stos
inc
push
xor
sbb
jmp
mov
stos
insl
xor
push
testb
adcl
subl
das
movsl
adc
pop
dec
mov
shlb
sub
call
xor
mov
ss
dec
add
and
jmp
fwait
push
sub
pavgw
sbb
push
shrl
shrl
aad
ja
inc
mov
inc
sbb
xchg
sti
rclb
mov
repnz
mov
inc
dec
mov
mulb
frstor
rcr
jl
fs
cld
rcrl
nop
push
mov
mov
add
es
fisttps
das
pop
insl
add
cmp
movsb
mov
xor
push
out
cwtl
xor
xchg
xchg
out
and
mov
mov
xor
stos
inc
inc
adc
sti
mov
loop
daa
cwtl
mov
jb
mov
rcll
or
lods
dec
cs
sub
fldt
adc
mov
jmp
popf
fwait
ret
fmull
adc
push
sub
mov
adc
push
add
jo
sar
mov
push
leave
and
xchg
ljmp
outsl
lahf
fs
mov
cmp
cmp
sbb
add
push
xchg
out
test
ss
repz
mov
adc
aam
decb
jbe
arpl
scas
ds
movsl
test
inc
scas
add
lds
fidivs
std
movsb
outsl
xorl
add
loope
cmp
repz
lea
push
fwait
movsb
mov
fdivrl
push
jmp
jg
mov
jb
jmp
cmp
inc
jo
push
mov
les
jb
jb
jno
scas
xchg
mov
adc
adc
das
test
mov
cmc
jmp
add
ret
pop
push
mov
or
fucom
dec
addb
sahf
adc
call
jg
mov
push
jbe
add
fwait
xor
mov
in
and
inc
pushw
data16
xchg
outsl
pop
mov
mov
xchg
add
popf
jo
cmc
rorb
mov
push
pop
cmp
lret
test
pop
fisubrl
jmp
fldcw
dec
push
xchg
sbb
flds
cmpsb
and
mov
nop
popa
dec
mov
jg
xchg
sahf
mov
pop
sbb
push
ljmp
jno
jae
mov
sub
jge
jnp
sbb
lret
enter
pop
xchg
jbe
xchg
pushl
push
dec
dec
cmp
insb
cli
fistpll
rorb
cmp
push
out
stos
jae
in
sbb
dec
cwtl
xor
xchg
arpl
out
jne
xor
cwtl
jns
adc
adc
pop
out
mov
loopne
push
aas
cs
dec
xlat
pusha
xchg
pop
pop
add
xchg
mov
or
jl
lds
dec
adc
lock
mov
jo
stc
sbb
push
addb
test
add
shrb
pop
jg
mov
stos
pusha
rcr
adc
ss
in
iret
jl
test
jno
das
lret
clc
sub
inc
add
arpl
jns
lods
mov
xchg
and
fdiv
push
cltd
dec
loope
jns
sbb
ljmp
imul
push
in
lods
mov
push
lods
pop
test
rolb
call
cmp
out
cmpsb
into
fdivrl
or
xor
mov
movsb
pop
push
test
xchg
sbb
adc
idiv
xchg
sub
lret
in
loop
dec
fidivrl
dec
clc
mov
movsb
arpl
jb
jns
hlt
jnp
inc
xchg
push
push
out
add
scas
jae
sbbl
in
jp
sub
dec
fwait
jae
lock
or
in
sarb
pop
mov
inc
mov
or
data16
repnz
push
nop
xchg
cmc
inc
mov
subl
iret
mov
sbb
sarl
aam
mov
dec
es
xor
cmp
add
or
or
cmpsl
push
cmpsb
pop
insl
or
push
mov
cmpsl
lret
push
pop
pop
or
jp
mov
xor
or
mov
cmp
movl
es
mov
push
lcall
jmp
cmp
lods
leave
cmp
insl
xchg
sub
orl
dec
push
ss
cmp
mov
popf
pop
aam
sub
pop
orb
pop
lea
mov
or
pop
jno
inc
ficompl
mov
jne
fildll
xchg
test
fstl
cli
pushf
cwtl
imul
dec
inc
int3
fidivs
aam
xor
or
sub
pop
push
push
inc
mov
inc
fsts
cmp
and
push
dec
les
arpl
adc
mov
pop
cmc
mov
xor
sbb
testb
mov
sub
dec
mov
sub
out
test
xor
negl
push
jae
xor
pushf
xchg
xor
lock
or
xor
push
test
shrl
jo
add
mov
aaa
call
fstpl
push
sub
jge
loopne
mov
cs
adc
fdivr
xchg
cs
insl
adc
pop
xchg
sbb
jns
cld
rorb
fwait
add
sub
pop
ret
inc
testb
loope
adc
add
xchg
inc
je
mov
js
lcall
push
imul
call
cmp
icebp
sub
xor
test
mov
shrl
jae
pop
mov
daa
sub
dec
scas
ret
iret
sbb
or
mov
xor
cmp
cli
jmp
or
popf
push
rorb
leave
jbe
adc
pop
clc
lds
int
pop
fs
mov
das
aam
push
inc
mov
jbe
sub
shll
mov
jl
loope
inc
xlat
cmc
sub
leave
lahf
lahf
pop
adc
xor
xchg
mov
in
mov
add
pop
movsb
pop
dec
sub
fisubrs
gs
inc
loope
xorl
mov
adc
test
sbb
xor
in
jb
lds
sti
int
mov
test
adc
push
jno
clc
aas
jmp
flds
lea
and
add
inc
jge
cwtl
pop
in
push
ljmp
mov
cld
lods
push
outsl
jmp
sbb
add
ret
jb
xchg
push
sbb
inc
xchg
repnz
stos
or
fdiv
adc
adc
jmp
pusha
push
repz
xchg
decb
and
jle
push
mov
mov
push
aas
lahf
imul
hlt
pop
or
mov
mov
aad
push
out
add
adc
popl
push
dec
dec
mov
xor
sub
pop
mov
cmc
test
lods
xor
sbb
nop
jnp
jmp
dec
inc
fdiv
insb
ret
cld
loope
shrl
cmc
aas
mov
in
xchg
add
mov
mov
stos
cmpsl
inc
dec
and
sub
xchg
mov
add
test
adc
mov
loopne
mov
push
lcall
in
rorl
mov
lret
test
mov
or
mov
jmp
das
jae
popa
jns
xchg
dec
loopne
out
cld
cltd
inc
cmp
fisubs
inc
ror
lods
xchg
add
mov
in
add
out
out
insl
hlt
imul
add
add
mov
lds
addb
mov
lea
pop
dec
movsl
push
nop
loop
repnz
or
pusha
aas
mov
out
mov
in
test
add
movsl
cmp
xor
mov
test
and
push
addl
les
movsl
scas
cli
inc
sub
mov
in
leave
add
mov
xchg
sub
fmuls
xor
xchg
add
flds
inc
add
cmp
fildll
push
inc
in
inc
jns
cmpl
sahf
stos
mov
sahf
push
ja
test
mov
pushf
enter
mov
call
and
jmp
or
addr16
outsl
add
mov
sbb
push
xchg
pop
push
jo
sti
mov
pop
jmp
pusha
mov
pop
push
rcll
je
fbld
mov
cmpl
mov
pop
repnz
iret
test
test
js
fistps
xchg
jp
data16
fdivrs
push
in
push
lret
movsb
push
rol
shlb
je
mov
out
and
mov
test
xlat
mov
inc
fwait
xchg
shrb
outsb
int3
xor
stc
xchg
push
sbb
js
jae
pop
pop
ja
adc
mov
push
push
imul
add
enter
lods
in
cmp
push
lods
push
add
xor
fiaddl
pop
cmp
mov
xchg
xor
and
inc
stos
or
cmpsl
sub
mov
adcl
shll
sub
aam
mov
loopne
out
test
mov
enter
and
call
and
mov
hlt
inc
clc
or
xchg
pop
push
test
xor
mov
pop
xor
nop
xchg
add
sarb
adc
test
xchg
lea
lods
lahf
fnsave
sbb
and
mov
mov
rorl
repz
js
push
test
std
gs
popf
loop
inc
stos
add
jno
pop
cmp
je
inc
inc
fldenv
js
out
mov
push
or
xor
mov
mov
das
pop
dec
xchg
xor
sbb
shlb
sti
jp
xchg
pop
sbb
fwait
aas
daa
pop
ret
and
xor
shrb
lods
xor
dec
add
inc
fwait
cltd
add
pop
and
sbb
pop
repnz
sti
imulw
fistps
pop
cmp
dec
and
adc
xlat
outsl
mov
test
je
mov
and
imul
imul
lock
mov
jl
add
xorl
repnz
xor
rol
insb
pop
sbb
lahf
xchg
push
jp
push
fucomp
add
scas
cmp
loopne
xor
xchg
stos
outsb
and
lahf
adc
cmp
mov
or
fistps
lods
xor
sub
rcr
fwait
pavgw
adc
inc
mov
sbb
loop
and
and
cltd
lret
repnz
mov
push
lret
dec
test
inc
out
xchg
lds
mov
ficoms
jecxz
adc
cmp
pop
mov
or
nop
sbb
mov
testb
lds
sbb
sub
inc
test
mov
arpl
cmp
xchg
lods
mov
sbbl
loop
lahf
push
fwait
nop
jmp
pushf
test
mov
fwait
lods
inc
and
int
je
cmp
mov
rcrl
cwtl
mov
inc
cmc
fcomip
dec
jl
push
mov
xchg
outsb
push
inc
fadds
negl
mov
push
ret
cmp
jge
pusha
out
sahf
push
xchg
fistpll
arpl
jmp
jmp
cs
xor
rorb
vmptrst
pop
jge
xchg
mov
inc
sbb
lods
mov
pop
stc
std
and
out
xchg
xchg
and
clc
pop
jmp
mov
xchg
pop
xchg
ret
jns
add
enter
cmp
bound
jg
mov
inc
adc
pop
lods
jg
fistpll
adc
and
sti
inc
mov
mov
sbb
pop
cwtl
repnz
bound
lock
jecxz
inc
and
and
nop
mov
shrb
into
std
jo
pop
push
popf
mov
xchg
push
pop
ficoms
test
or
mov
push
out
xor
sbb
push
jmp
jno
jo
imul
imul
lock
cmpl
xor
mov
movsl
xor
mov
xor
mov
sbbb
shll
and
or
xchg
jecxz
or
shll
jmp
aas
mov
out
rcll
cs
push
sahf
mov
ret
gs
pop
test
out
cmpsl
cmp
imul
mov
std
inc
aaa
sahf
and
and
mov
or
insb
fstl
shll
repz
sub
xchg
cmpsb
or
ljmp
imul
cltd
jle
inc
test
sahf
jle
js
cmpb
orl
es
xchg
les
cmp
push
inc
clc
jae
sti
adcb
sbb
and
jmp
mov
or
ret
dec
into
or
adc
sub
out
dec
mov
enter
xchg
pop
sub
jle
loope
insb
xchg
sarb
pushw
out
pop
mov
mov
cpuid
or
push
mov
dec
xchg
xchg
dec
into
fdivrl
mov
inc
sub
in
dec
push
lahf
dec
out
daa
jmp
pop
loopne
iret
jb
test
test
jmp
orb
mov
imul
and
ljmp
push
pop
fisubl
lea
jns
ljmp
dec
inc
sbb
lret
cmc
ja
cmp
stos
jle
fldcw
gs
cmp
repnz
mov
xchg
mov
cmp
lret
cld
mov
stc
mov
mov
pushf
adc
cltd
xor
add
mov
fnstsw
stos
and
aam
inc
dec
dec
dec
cmpl
pop
lea
sti
fwait
pop
xor
push
mov
imulb
icebp
adc
mov
stc
sahf
sahf
lret
sbb
cmp
call
sub
xor
add
mov
mov
loopne
xchg
inc
or
xchg
sub
movsb
addr16
push
push
fdivrp
mov
movsl
inc
xor
xchg
cmpsl
dec
js
je
test
hlt
mov
orl
inc
inc
inc
fdivrl
or
sbb
jg
mov
mov
sub
and
jae
sbb
or
sub
sbb
das
cmp
jne
ficomps
or
sub
in
test
scas
adc
mov
jno
push
sbbb
int3
test
lds
or
hlt
mov
fnstcw
pop
cmp
stc
ja
out
aaa
inc
incl
fst
sbb
or
mov
mov
mov
testl
or
iret
mov
jne
xchg
sub
xchg
sub
leave
sub
add
aad
xchg
jg
sub
pop
adc
xchg
addr16
gs
out
dec
pop
or
fs
in
sub
stos
adcl
outsb
test
cmpl
ja
cmp
test
mov
das
xchg
inc
push
into
clc
test
aas
insl
sub
mov
mov
test
mov
pop
mov
subl
hlt
cmp
in
cmc
in
mulb
in
pop
imul
mov
mov
loopne
push
lock
mov
sbbl
in
push
daa
cmp
mov
les
insl
cmc
cmc
adc
lret
cmp
ss
and
test
in
ss
xchg
sub
popf
icebp
int
sub
dec
mov
in
mov
out
inc
pop
sbb
adc
jl
sbb
cmpsb
imul
stos
jmp
out
mov
sbb
sub
mov
inc
push
cmc
ret
push
add
lods
aas
mov
rcrl
xchg
mov
out
hlt
inc
loop
inc
fcmovnb
inc
mov
test
push
fmulp
inc
loopne
mov
es
int
lcall
fadds
push
sub
mov
out
jns
and
cmp
cmpb
or
sub
loope
lock
sub
mov
loope
xchg
xchg
inc
sbb
or
lcall
scas
sbb
mov
popa
xchg
sbb
popa
out
push
jecxz
jp
ja
cmpsl
push
lds
imul
jecxz
dec
pop
mov
lahf
mov
fdivrl
mov
test
push
xor
sub
test
test
push
xchg
mov
insl
add
cmp
fdivl
pop
imul
sbb
push
xchg
dec
add
fsubr
enter
mov
pop
std
js
daa
stos
fcmove
and
push
cltd
rclb
mov
adc
mov
pusha
in
shrb
or
mov
aam
dec
cmpsb
rcll
sub
and
sbb
pop
lods
js
scas
imul
hlt
push
test
inc
push
pop
addr16
sub
outsl
xor
adcb
fcompl
lock
mov
add
ja
add
in
add
das
cwtl
loop
add
xor
jb
jb
push
pusha
stos
jmp
in
ja
gs
fsubl
daa
lret
dec
movsl
push
sbb
sub
pop
xchg
in
jg
pop
mov
ret
jns
arpl
pop
fwait
xor
add
ret
and
mov
outsl
outsb
adc
mov
sbb
testb
or
jle
add
xchg
outsb
push
insb
movsl
cmp
call
and
dec
stos
push
push
imul
add
dec
std
popf
jno
iret
sbb
cmp
jo
jp
icebp
imul
test
aas
outsb
mov
or
loope
cmc
mov
push
sbb
cmp
mov
fldt
repnz
daa
ljmp
out
adc
mov
jae
jecxz
jo
jmp
jo
fidivs
mov
std
lods
lock
outsl
daa
fildll
add
cmp
and
pop
push
push
ficompl
cmc
notb
adc
out
js
sti
es
sbb
inc
dec
je
mov
outsb
sbbl
mov
cmp
xchg
gs
repz
cmpb
je
or
ss
sbbl
in
filds
ss
jle
js
lea
cmp
jnp
jmp
ss
jmp
shlb
popl
inc
outsb
cmp
je
pop
cmc
dec
addb
stos
pop
shr
out
inc
pusha
std
or
dec
jle
out
adc
cs
xor
mov
std
in
loopne
pop
adc
aas
cltd
jg
insl
add
mov
out
jo
inc
popa
push
mov
jecxz
ret
add
mov
jle
jecxz
xor
fisttps
inc
fnstenv
mov
push
sub
mov
mov
xchg
loope
jmp
jmp
icebp
arpl
mov
xchg
outsl
jmp
adc
inc
cmp
push
pop
cmp
sub
inc
popa
sub
pop
or
jne
inc
xor
std
inc
and
fisttps
out
fstpt
sub
lret
lahf
lcall
sbb
movsl
mov
pop
cmp
ss
sub
xchg
or
icebp
mov
inc
repnz
fmulp
pusha
iret
nop
fidivl
mov
test
jp
test
add
jl
jmp
cmp
mov
adc
pop
cmc
repnz
sub
ret
fidivs
add
xorb
sub
inc
xchg
mov
or
stos
xor
shll
jns
pop
pop
push
sar
mov
int3
movl
orb
inc
in
mov
fnsave
dec
push
sbb
inc
inc
adc
dec
jne
mov
adc
cmpl
sub
cmp
xchg
sub
arpl
xchg
pop
pop
mov
cmc
inc
rcll
lahf
mov
pusha
jmp
or
jno
mov
pop
fisubrs
adc
mov
jmp
mov
and
data16
imul
cmpsl
repnz
or
scas
jmp
add
xchg
lcall
inc
mov
push
and
jp,pn
mov
andl
add
je
pop
adc
cld
pop
ret
sbb
imul
jge
icebp
pop
cmc
out
sbb
shr
aaa
daa
cli
dec
push
outsl
mov
sbbl
inc
nop
dec
fimull
and
pop
sti
xchg
xchg
int
xchg
push
andb
add
daa
or
adc
pop
test
cmp
lcall
cmp
aaa
push
stos
jmp
lret
or
xchg
push
iret
es
and
int
leave
lods
inc
mov
lcall
je
addr16
push
xor
jns
adc
sub
cmp
outsb
test
xchg
notl
leave
cltd
cwtl
add
in
mov
aas
jge
in
subb
jge
and
jge
movsb
out
icebp
sahf
sbb
repz
pop
lahf
mov
sub
cmp
pop
sbb
and
fdiv
add
add
das
mov
dec
or
rolb
pushl
sbb
cltd
std
int3
knotw
push
mov
test
or
pushf
mov
dec
sarl
aaa
mov
stc
inc
fisubrl
lea
cmp
dec
mov
mov
cwtl
sbb
cmp
jmp
loop
fmull
and
xorb
dec
mov
lea
jbe
sbb
jnp
aaa
xlat
test
mov
icebp
mov
pop
lea
daa
ljmp
icebp
clc
inc
dec
cmc
dec
pusha
das
pop
push
or
sub
loopne
repnz
mov
inc
sub
ss
xor
pinsrw
pop
xchg
xchg
in
ljmp
leave
push
nop
imul
adc
xchg
cmpsl
xor
fsubrl
mov
or
and
or
cmp
push
add
push
in
adc
outsb
test
or
js
push
insb
xchg
jbe
adc
and
sbb
and
mov
sub
cli
pop
ret
sub
clc
or
push
jbe
jnp
lret
pop
xchg
mov
addb
rorb
shrl
insl
cld
or
fbstp
stos
jno
call
rorb
call
scas
inc
outsl
leave
dec
jb
xor
mov
xchg
mov
loopne
inc
or
mov
bound
adc
iret
out
ficoms
icebp
stos
subl
mov
add
in
pop
push
cmp
ret
fdivs
mov
push
mov
data16
mov
insb
xchg
or
int3
and
xchg
int
aam
add
loope
inc
arpl
mulb
cmp
cmp
iret
sbb
inc
jno
aaa
stos
sbb
xchg
mov
ss
fcomps
mov
mov
jle
ret
repz
jle
sbb
jge
arpl
lret
adc
fwait
jb
add
stc
lea
sub
pushf
fldenv
sbb
cmp
ds
sti
mov
push
xor
xchg
xor
leave
jbe
xlat
mov
xor
cmp
outsl
sahf
in
imul
rorb
sbb
stos
in
lea
mov
jno
lahf
pop
lret
shlb
leave
add
insb
scas
xchg
push
jmp
and
daa
dec
jno
xorl
andb
in
imul
jp
mov
gs
data16
sub
pop
sub
cli
add
push
xchg
inc
xchg
dec
clc
es
push
aam
out
ret
xor
sbbb
arpl
aam
jg
jb
push
adc
sahf
lods
test
cltd
cmp
jmp
shlb
inc
sahf
jb
sbb
mov
jb
dec
shll
sbb
push
rcrb
and
jl
movsl
mov
push
imul
push
scas
xchg
add
subl
cs
data16
mov
xchg
mov
shll
cmp
or
sbb
and
aad
rorl
hlt
xlat
mov
dec
pop
sbb
lret
mov
data16
lahf
xor
push
lahf
call
imul
ficoml
or
add
xchg
mov
dec
es
cli
faddl
leave
in
in
lcall
jae
ja
loope
out
test
add
cltd
je
or
outsl
shll
mov
pop
mov
dec
add
leave
pusha
daa
out
push
lahf
popf
out
inc
jge
sub
fs
dec
dec
mov
jle
arpl
in
les
icebp
aad
mov
pop
call
dec
arpl
mov
cmp
clc
and
jo
cmp
scas
sbb
dec
inc
or
mov
push
xchg
insl
sub
js
adc
cld
pop
cmp
inc
sahf
mov
into
cmp
fwait
xor
test
mov
lahf
dec
xlat
adc
pop
imul
push
lods
or
xorl
and
inc
adc
add
pop
push
jae
shrl
jge
pop
mov
xchg
daa
inc
shll
subl
dec
or
cmpb
les
or
jle
aas
fsubr
icebp
and
jg
or
cmp
ja
mull
out
subb
or
subb
fiaddl
sahf
lcall
in
mov
aas
test
lret
and
push
lahf
sti
inc
cld
dec
cmc
test
mov
std
repz
cltd
out
mov
clc
cmp
lahf
loop
gs
inc
dec
aam
sbb
rcll
pop
xor
lret
inc
push
outsb
dec
mov
xchg
mov
xor
mov
bswap
fildl
arpl
mov
cltd
scas
mov
jle
jns
xor
test
add
ficoml
mov
jle
sbb
addb
inc
scas
arpl
dec
popf
dec
loopne
and
lods
push
pop
mov
nop
pop
in
push
inc
loope
adc
pop
cwtl
repz
movsl
push
xchg
mov
mov
lret
mov
test
pop
nop
gs
jmp
jne
ja
xor
xchg
fbld
lods
ljmp
jnp
inc
push
cmp
clc
sarb
aas
pop
in
adc
cld
int3
add
inc
scas
and
fbstp
sbb
mov
mov
clc
daa
adc
sbb
insb
adc
push
aas
es
inc
mov
ja
sub
push
xchg
shrb
push
sti
and
pop
xchg
mov
repnz
stos
jbe
push
add
jle
popa
nop
mov
push
pop
int
addr16
push
jo
xchg
lret
xor
sbb
fiadds
sbbb
and
cmc
mov
lahf
imul
xchg
jg
lret
div
cmpsb
cmp
mov
loop
mov
push
sub
or
xchg
leave
cmp
data16
push
pop
icebp
pop
adc
fsts
inc
stos
cli
jp
repnz
divl
push
sbb
mov
sbb
stos
mov
fdivl
leave
jne
int3
movsb
popf
xchg
push
out
and
mov
out
add
add
sub
movsl
xor
xor
aaa
pop
aad
loop
push
inc
jne
and
pop
stos
mov
leave
xor
test
xor
cmp
adc
pop
test
mov
add
push
popf
addl
mov
mov
jmp
fsubrs
test
pop
repnz
ret
mov
add
mov
repz
sbb
inc
jno
xchg
cld
dec
push
hlt
inc
sbb
xor
movlps
imul
xchg
jge
mov
sub
inc
clc
test
lret
xor
jnp
ja
lcall
mov
pop
fisubrl
les
test
jns
test
std
int
cmpsb
inc
aad
std
cltd
xor
sbb
sub
xor
lds
dec
loop
xor
data16
subl
and
std
adc
inc
into
gs
sbb
jecxz
decl
leave
cmc
adc
stos
pop
mov
jl
mov
in
mov
outsb
lods
mov
xor
xor
movsl
mov
pusha
pop
addb
fwait
lods
in
mov
xor
push
cmpsl
mov
xchg
cmp
or
or
mov
popl
ret
dec
jae
test
loopne
cmc
mov
sbb
cmp
xor
dec
inc
test
mov
iret
repz
cmp
cmp
push
jns
test
mov
add
or
dec
and
insb
xor
push
push
jmp
and
call
sub
mov
ret
push
cmpsl
xchg
cli
jg
sub
and
or
mov
jne
mov
ds
popa
fisttpl
mov
dec
cmpsl
pop
sti
sarb
xlat
mov
or
pop
addr16
dec
or
jle
jle
cmpsb
sbb
dec
cmp
pop
pusha
lcall
lret
bound
mov
push
adc
mov
mov
test
push
sarl
xor
inc
inc
aam
sub
mov
iret
mov
add
push
mov
popa
mov
test
jge
shl
inc
ds
push
jnp
jo
cmp
pop
pop
inc
cltd
scas
mov
push
cltd
cli
push
in
cwtl
pusha
mov
mov
fnstsw
sbb
sub
leave
out
hlt
push
shlb
ja
movsl
pop
sar
dec
sbbl
je
out
cmpsl
inc
les
std
enter
xchg
loopne
shll
pop
movsl
insb
inc
pushaw
mul
inc
scas
sub
icebp
mov
dec
stos
jae
add
popl
mov
sub
jl
ret
mov
fistpll
mull
rcrb
test
cmp
mov
fnstsw
repnz
fldl
frstor
push
jb
or
jle
cwtl
addl
add
je
xor
xchg
mov
dec
or
std
mov
sub
pop
pop
xor
push
mov
scas
flds
rcll
push
call
push
inc
nop
rcrb
call
mov
sbb
cmp
jg
sbb
or
lahf
popf
rol
mov
sub
es
or
push
jmp
mov
out
inc
mov
adc
ss
or
ljmp
shlb
cwtl
dec
fsubp
lcall
dec
lea
imul
adc
insb
fnstenv
sbb
add
or
adc
inc
icebp
mov
and
pop
inc
cli
int
xor
fbld
iret
or
cmp
inc
fistl
fcomi
sub
dec
jge
addr16
jle
xchg
fimull
test
and
jno
data16
sub
and
inc
test
mov
ja
mov
outsl
pushf
xchg
lods
xchg
and
dec
pop
mov
add
add
mov
repnz
aad
mov
fsub
push
pop
fcomps
cmpl
pop
jo
idivl
xchg
adc
insl
add
out
mov
xchg
xchg
sub
fstpt
insl
adc
outsb
and
sti
cltd
xor
dec
aas
lea
mov
mov
je
xor
or
sahf
cmpb
or
mov
and
in
jmp
or
std
push
sub
adc
ficomps
mov
cmp
les
rcrb
cmp
mov
sbb
pushf
popa
add
nop
sub
out
sub
mov
dec
mov
nop
adc
shrl
sub
sbb
sbb
push
cmp
mov
cmc
inc
mov
xor
bound
lret
jnp
jae
mov
sub
cmp
ss
or
cmp
pop
xlat
or
mov
xchg
sub
xor
sbb
ret
mov
or
jns
sbb
pop
lahf
sbb
pop
in
jo
jne
or
ret
sahf
dec
jge
lea
dec
movsb
js
ret
jmp
sbb
jmp
sub
icebp
call
sti
mov
push
lds
mov
fists
insl
movsl
cmp
pushl
loopne
lahf
pop
inc
sub
shll
clc
nop
jns
or
mov
fisubs
das
mov
sub
mov
add
fs
dec
lock
fwait
ret
aas
js
repnz
mov
mov
and
dec
fwait
cmpsl
popf
das
push
cmp
dec
lea
mov
lds
jmp
pop
sbbl
mov
push
mov
ret
xlat
or
aad
xor
xchg
xchg
ljmp
insb
rcrl
mov
mov
std
out
jg
dec
mov
sbb
jae
pop
jne
dec
dec
test
cmp
fcoml
sbb
cmp
or
sahf
and
mov
mov
add
adc
lcall
cwtl
int
test
xlat
es
stos
xlat
mov
shrb
or
outsl
mov
inc
fcomps
sub
push
jmp
or
cli
out
add
aas
mov
aas
mov
push
push
push
pop
xchg
hlt
cmpsb
sub
xlat
adc
push
scas
or
ss
jl
test
mov
aaa
mov
inc
adc
stos
lahf
mov
push
iret
mov
jne
inc
shr
icebp
scas
cld
xchg
loopne
cld
fwait
inc
ja
fsubrl
push
xchg
cmp
adc
xchg
pop
push
out
ret
jns
xlat
stos
in
mov
pop
mul
or
adc
cmc
fs
add
inc
sahf
jne
mov
stos
xchg
scas
sub
jmp
pusha
lods
test
imul
mov
mov
lret
dec
push
mov
or
pop
dec
in
adc
aad
add
mov
scas
push
ja
cmp
test
test
cs
in
loop
imul
sub
cmpsb
lcall
sbb
insl
or
jae
mov
sbb
cli
adc
loopne
dec
fwait
sbb
xchg
lcall
dec
das
push
inc
lahf
push
je
cmp
fbld
jle
dec
add
aaa
ss
push
aaa
push
mov
or
mov
and
or
xor
pop
mov
push
and
cmpsb
mov
mov
jmp
inc
int
cmp
mov
scas
push
dec
cmpsb
inc
pop
xchg
aaa
mov
push
pop
insb
out
pop
je
ret
pop
xor
fs
xchg
out
jge
xchg
adcb
lea
pop
in
cs
inc
adc
sub
sbb
push
stos
mov
mov
dec
test
loop
test
xchg
pusha
pop
icebp
inc
cwtl
jnp
inc
jne
mov
pop
sti
notb
lret
es
std
xor
jmp
mov
push
cmpl
cmpsl
hlt
lcall
pop
les
inc
or
lock
fisubrl
movsb
mov
rclb
loopne
mov
dec
lock
std
xchg
outsb
mov
push
sbb
js
jae
jb
jge
cmp
ret
mov
and
aad
mov
pop
mov
out
push
out
test
loopne
add
mov
aas
ret
xlat
sub
add
and
mov
add
stos
pusha
imul
test
in
adc
lcall
sbb
adc
pop
pop
out
cmp
sbb
sarw
xchg
fldt
adc
lock
mov
and
mov
loope
jecxz
adc
icebp
js
mov
aaa
and
inc
sbb
mov
fcmovbe
aad
mov
jo
add
and
xor
mov
imul
bound
mov
hlt
sub
loop
sub
cmpsl
lods
or
iret
cmp
pushf
lret
jb
inc
pusha
pop
push
in
adcb
loop
mov
cmp
mov
jns
mov
add
sbb
push
icebp
nop
in
cltd
and
or
mov
in
jl
inc
lds
pop
int3
movsb
sbb
adc
ljmp
or
aas
pop
push
pop
add
push
nop
daa
lea
scas
rcrl
mov
jb
mov
ret
std
xchg
or
sub
push
aam
into
jne
cmp
push
fists
lret
in
jb,pn
jb
jl
mov
ret
add
lea
lods
sbb
inc
adc
pop
fisttpl
popa
mov
f2xm1
xorb
or
mov
cli
xchg
nop
lods
lret
push
and
xchg
sub
outsl
push
inc
inc
mov
ljmp
imul
pop
sbb
andl
cmc
js
js
mov
insl
jp
sbb
cmp
jb
and
inc
fsubs
movsb
sbb
je
xor
into
inc
pop
clc
pop
ret
or
mov
scas
call
mov
jp
pop
and
insl
or
in
std
xorl
sub
in
test
imul
pop
mov
nop
jne
fsubs
pop
ds
pushf
in
lret
inc
ja
inc
ficoml
mov
cli
cmpb
mov
adc
mov
xchg
dec
xor
repz
data16
xchg
fisttpl
or
lcall
and
cmpsb
xchg
stos
movsl
push
aas
jge
xlat
iret
lds
lods
dec
lea
cmp
gs
jb
pop
pop
leave
sbb
or
in
adc
cwtl
push
mov
pop
mov
ljmp
xor
push
add
jns
aad
hlt
cmp
out
mov
push
out
repnz
adc
mov
mov
stos
daa
mov
inc
in
outsl
mov
cltd
clc
fisubrl
movsl
scas
sbb
mov
pop
xor
push
aad
jb
lcall
daa
gs
hlt
and
scas
inc
mov
mov
pop
aad
pop
lahf
jl
js
shl
jp
mov
lret
pushf
icebp
adc
fisubrs
testb
stos
sub
fs
cmp
xor
cmp
mov
mov
jmp
fnstenv
mov
push
cltd
xor
jp
ds
mov
push
aad
pusha
push
xor
xchg
mov
mov
cmp
xor
sbb
xchg
add
xor
inc
cmp
outsl
pusha
neg
lods
mov
fiadds
xchg
xor
dec
mov
cmp
cs
rcrb
pop
xor
rorl
sbb
repnz
sbb
or
push
psrad
mov
ret
add
ljmp
not
jg
aad
inc
mov
and
mov
scas
sbb
flds
pop
push
inc
pop
bnd
jmp
stos
push
mov
lods
or
jne
fisttpl
push
gs
inc
mov
lret
and
mov
fsubrs
adc
mov
mov
ret
test
pop
inc
sbb
mov
xor
xchg
mov
adc
pop
cli
xchg
adc
into
push
inc
dec
sub
lcall
int
inc
xor
dec
adc
loop
sub
pop
lcall
sarb
xlat
jle
xchg
mov
adc
sub
jns
xchg
xchg
dec
and
outsl
scas
xchg
dec
or
push
pusha
scas
mov
jmp
dec
sbb
cmpsb
loope
cmpsb
enter
jno
adc
pop
lcall
hlt
push
sbb
push
push
loope
cmpsb
scas
sub
int
xchg
cmp
mov
inc
push
movsl
cmp
sub
xchg
push
jbe
adc
add
lock
mov
pop
dec
mov
sbb
cs
scas
scas
mov
jo
push
fcmovnbe
repnz
pusha
cmp
pop
cmp
aam
pop
and
loop
xchg
and
sbb
cmp
das
sbb
aas
cltd
cmpsl
scas
jp
inc
and
aad
or
ret
pop
into
and
fs
jg
sub
mov
cmp
dec
dec
repz
sarb
fwait
insl
lods
inc
pop
into
dec
cltd
cmpsl
jb
or
dec
jae
pop
movsl
cmp
js
sahf
aam
cwtl
loope
lret
mov
sub
es
nop
outsb
mov
popf
pop
inc
data16
data16
js
dec
in
das
jnp
mov
pusha
loope
and
ret
xchg
jmp
or
fwait
adc
ss
cvtpd2dq
int3
jg
mov
pop
push
or
jg
js
xchg
jl
xlat
outsb
mov
and
ss
mov
xchg
addl
icebp
fsts
xor
cmpsb
dec
and
add
inc
sar
and
or
pop
mov
scas
ffree
add
inc
ss
push
sub
out
mov
and
pop
scas
les
sbb
test
sarl
mov
mov
icebp
mov
mov
jecxz
sub
mov
add
mov
lret
fsubs
and
push
out
gs
je
mov
mov
mov
jl
push
fstl
mov
dec
in
nop
insl
inc
cmc
nop
daa
daa
push
lock
lds
xchg
in
sbb
outsl
lods
cmp
into
xchg
pop
sarb
je
and
jb
jo
inc
cmpsb
inc
js
incl
mov
enter
inc
cmp
cltd
push
add
pop
sub
mov
mov
stos
pop
movups
repnz
jno
adc
xor
add
jl
sahf
jl
iret
cs
add
jle
inc
test
in
adc
push
inc
shlb
imul
mov
mov
in
mov
outsb
mov
jle
cmpsl
in
and
nop
cs
movl
shll
repnz
aam
mov
adc
mov
mov
testl
bound
fsubrs
popa
dec
cld
xchg
add
cwtl
adc
cmpl
push
sbb
fidivrl
fbld
rorb
add
lret
test
jno
mov
into
pop
mov
cs
das
fdivs
repz
jp
mull
fwait
fisttpl
daa
inc
sbb
cmp
cld
xchg
cwtl
aam
lret
jmp
xor
cli
lret
rcl
cld
xchg
in
repnz
stc
dec
es
pop
xlat
outsb
andb
jne
mov
push
cmpsl
mov
cmpl
mov
mov
push
cltd
ljmp
scas
xchg
sbb
xchg
xor
int3
jno
mov
xlat
mov
repnz
lods
inc
cmc
pushf
inc
push
lods
pop
xor
mov
add
jmp
movsb
out
push
popf
adc
enter
and
jns
out
push
sahf
adcl
rcrb
ss
negb
sub
cmpsl
jge
sub
mov
in
int3
mov
outsb
jecxz
jae
cwtl
sbb
pop
mov
sbb
pop
jg
fs
and
pop
mov
jnp
mov
cmc
nop
dec
roll
fwait
je
add
jnp
out
mov
stos
cmpl
scas
jnp
pop
mov
nop
scas
scas
shlb
lret
pop
cli
jg
out
data16
out
adc
dec
dec
sbb
add
pop
push
xor
cmc
dec
pop
mov
in
and
arpl
movsl
mov
mov
sub
repnz
jb
andb
mov
popa
xchg
andl
xchg
test
shll
inc
pushf
or
pop
or
xor
ret
shrl
cmp
fdivp
iret
loope
add
xor
repz
fs
lahf
mull
mov
in
insl
dec
mov
inc
in
pop
mov
cmpsb
lock
addl
mov
sub
enter
fdivrs
daa
mov
lods
prefetch
imul
dec
addr16
push
sub
dec
fidivrs
pop
lret
mov
test
mov
sbb
cmp
imulb
sub
xchg
sbbl
fsubrs
fldl
daa
arpl
push
repz
enter
in
mov
roll
es
in
mov
in
xor
fsubr
ja
add
pop
xchg
xor
push
les
scas
pusha
mul
mov
rol
mov
gs
outsl
mov
mov
pushf
in
push
out
pop
mov
clc
in
movsb
lds
sti
subl
xchg
lods
add
mov
mov
subb
push
pop
push
cmpsl
or
adc
xchg
xor
xor
xchg
fdiv
sub
pop
scas
rcr
or
es
sbbl
mov
lahf
pusha
jl
movl
sbb
mov
push
jae
sub
sub
fsubr
cmp
add
mov
sbb
ss
aam
xchg
movsb
jne
cs
xchg
xchg
in
lds
mov
lds
rcrb
dec
pop
rcll
movsl
rol
fwait
mov
int3
in
lret
mov
ret
adc
jecxz
loope
adcl
adc
push
xchg
push
mov
pop
cwtl
loopne
lret
andps
pop
xchg
out
adc
mov
dec
stos
inc
fcmovu
jl
dec
sub
jecxz
dec
aad
jle
repnz
cmpsb
pop
xor
dec
add
inc
mov
add
xor
js
lret
ds
call
inc
sub
fstpl
in
ds
out
adc
ljmp
sub
jo
mov
jl
jecxz
ja
cmp
inc
stos
enter
fs
in
mov
lahf
sbb
dec
ljmp
cmp
jecxz
push
fcomip
mov
mov
fucomi
cmc
loope
jl
adc
shl
imul
dec
push
aas
jecxz
rcrb
jg
pop
inc
jne
jne
sbb
lds
mov
jbe
jbe
fsts
rol
dec
push
dec
lods
cmp
cmc
mov
mov
xchg
xchg
mov
mov
les
sti
shlb
and
lret
dec
xor
xor
ret
jge
jmp
push
mov
push
sbb
ds
pop
repz
popf
test
inc
dec
popa
inc
dec
xchg
scas
insb
push
das
or
repnz
sbb
in
ret
imul
and
add
jae
clc
jno
sbb
popf
mov
dec
in
or
aaa
jp
in
push
mov
cmpsl
into
lcall
mov
aam
xchg
jge
les
xlat
orb
cmp
movsb
cs
jo
xor
lods
push
bound
aas
inc
insb
sbb
lret
mov
outsl
out
jae
add
sbb
jmp
inc
xor
cwtl
mov
std
in
fwait
sub
dec
in
add
insb
movd
cs
cmp
sbb
fisttpll
pop
add
jbe
out
inc
fadds
imulb
mov
cs
pop
cmp
and
sub
mov
sar
push
mov
mov
scas
jmp
mov
popf
xor
xchg
lcall
aam
dec
adc
loope
push
aam
mov
leave
pop
adc
sub
scas
or
mov
mov
fdivp
aas
mov
leave
or
enter
dec
jns
mov
xchg
xchg
or
outsb
pop
cltd
stos
sbb
sahf
mov
sub
sub
pop
pop
dec
mov
mov
and
xchg
pop
adc
inc
inc
cmpsl
imul
mov
or
movsl
inc
xlat
sti
nop
jb
push
mov
jmp
stos
addl
dec
jae
ds
nop
dec
lret
mov
xor
mov
lea
nop
pop
pop
and
dec
push
cmp
mov
mov
jnp
scas
test
sub
and
out
cli
xchg
xchg
lods
ljmp
dec
repnz
test
inc
mov
pop
arpl
arpl
inc
shl
jnp
aam
adc
lret
sti
inc
or
jmp
jecxz
aad
xor
popf
not
je
aas
jno
jl
out
in
out
pop
imul
and
mov
fsubrs
aas
or
inc
sbb
or
push
out
ret
jge
fsubs
or
mov
mov
inc
adc
lret
lret
cwtl
stos
clc
shlb
popa
test
ja
repz
arpl
inc
sbb
loop
add
cmpsl
add
subl
push
or
scas
mov
call
jge
jbe
push
sbb
inc
ret
aas
and
test
xor
sahf
or
fldenv
cld
push
popf
mov
pop
and
push
add
add
sub
sbbb
arpl
jge
jl
repnz
rcrl
push
movsl
jae
fsubrs
lock
aaa
mulb
out
mov
mov
rolb
add
jns
insl
sbb
or
in
add
cmp
adcb
sahf
cmp
xorl
jnp
cmp
xchg
sub
jbe
xor
scas
jns
and
cmp
sbb
imul
mov
pop
push
jno
addb
mov
cltd
pusha
and
adc
mov
or
mov
outsl
ljmp
repz
movsl
inc
test
int3
pop
stc
ret
and
pop
jae
ret
mov
xchg
adc
sbb
adc
mov
rclb
hlt
test
sbb
mov
and
stos
inc
and
sahf
push
in
leave
flds
test
mov
or
testl
sub
mov
and
fs
pop
lret
shl
sarl
lock
out
std
negl
pop
adc
inc
scas
scas
fisttpll
mov
push
dec
or
leave
pusha
cmp
arpl
jb
add
add
inc
and
popf
cli
jge
sub
xor
bound
les
fstpl
mov
pop
loop
fptan
aad
inc
sub
push
mov
lods
jbe
dec
xchg
inc
mov
xor
push
inc
cs
mov
push
cmc
cmp
push
cltd
mov
inc
dec
mov
adc
mov
push
inc
mov
xchg
mov
mov
out
xlat
rol
les
sbb
xor
int
cli
jb
inc
addr16
pop
aas
cld
xchg
adc
sbbb
daa
jb
out
nop
xchg
divl
ret
cmpsl
or
movsl
cli
shrl
imul
cmp
lds
pop
outsl
push
push
xor
lcall
jne
movl
pop
cmpsl
cmp
iret
fidivrs
jae
mov
je
cmp
pop
hlt
icebp
jno
stos
adc
lret
subb
mov
fwait
xor
test
pop
out
xchg
jo
inc
add
xchg
mov
lret
sub
xor
jp
or
adc
dec
push
xor
adc
ret
cmp
out
ds
add
adcl
adc
xlat
leave
push
or
or
mov
push
dec
and
cltd
dec
mov
clc
cmp
out
in
mov
les
dec
push
lret
pop
fildl
inc
xor
fisubrl
add
jge
outsl
add
xchg
and
loop
push
xor
adc
sbb
in
ss
pop
lret
adc
mov
adc
sub
push
out
dec
aaa
shl
pop
add
int3
xlat
inc
pusha
pop
enter
or
inc
lea
mov
lods
xor
vpor
popa
out
xchg
lods
pushf
repz
push
dec
lahf
les
movsl
scas
in
stos
adc
xor
gs
iret
xrelease
mov
loopne
xchg
jmp
aaa
mov
aas
dec
add
adc
andb
cmpsb
imul
and
fildl
ret
xchg
ljmp
call
sbb
sbb
aaa
cli
pop
adc
and
mov
jmp
adc
call
insb
xchg
ss
sbb
iret
pop
pop
jne
insb
push
xchg
sub
push
clc
mov
adc
mov
push
sbb
pop
jno
or
imul
dec
fwait
mov
xchg
sub
jo
and
xorl
repnz
push
adc
jle
or
cmpsb
lahf
call
and
fcomip
lcall
cwtl
out
pop
test
and
mov
adc
xchg
jecxz
xchg
push
lods
pop
mov
cmp
lods
outsl
ret
imul
push
jmp
aas
jno
jno
push
mov
xchg
xchg
add
int3
xor
mov
std
mov
fs
jb
and
orl
loop
jbe
fidivrl
lret
inc
pop
clc
dec
enter
and
jne
aas
xor
pop
inc
dec
loop
aam
jl
mov
lds
mov
adc
cmpsl
push
or
pusha
push
mov
imull
jbe
daa
decl
jb
cmpsl
je
jns
dec
mov
mov
inc
loope
mov
icebp
mov
mov
push
and
fs
lods
lea
lock
jmp
sub
clc
cmpsb
arpl
pushw
pop
mov
pop
ljmp
je
rep
das
call
into
lea
in
fidivrs
mov
fldt
mov
stos
lahf
imul
in
fidivrl
loope
cmpxchg
and
shrb
jp
lods
mov
jno
push
sub
call
mov
mov
adc
rcrb
mov
leave
cmpsl
fistps
jp
adc
orl
es
and
pop
aad
jb
jle
insb
pop
es
dec
cmp
out
imul
lcall
bound
pop
cmp
fs
aam
aad
jo
push
ljmp
jno
jp
aaa
dec
or
and
into
inc
into
cmp
les
inc
popf
test
cmp
jmp
outsb
fwait
xlat
push
mov
jno
arpl
arpl
subb
mov
ret
insl
mov
arpl
pop
mov
dec
xorl
mov
das
movb
xor
cmp
xchg
hlt
lds
push
or
inc
mov
fcmovnbe
jae
int
cmp
jle
mov
shl
call
mov
mov
enter
mov
cmp
aad
xchg
push
pushf
xor
or
ret
or
lcall
or
dec
std
mov
adc
mov
pop
fbstp
push
mov
int
adc
and
lcall
xchg
fs
fildll
rcr
into
pop
aam
fistpl
xor
sub
out
pop
enter
sarb
add
dec
and
pop
testb
inc
ret
adc
xor
aad
mov
sbb
add
jae
dec
jp
rcll
stos
test
stos
scas
cmpsb
ficomps
test
lds
adcb
out
xchg
inc
push
pop
std
adc
ret
cmpsb
mov
adc
add
xor
jb
outsb
inc
out
fiaddl
xor
xchg
xchg
push
xor
icebp
aas
or
and
jmp
mov
xor
cmpsb
test
fsubrs
aas
test
adc
mov
sbb
fisubrl
jae
push
mov
stc
scas
xchg
sub
pop
cwtl
insb
add
scas
pop
mov
xor
shll
dec
loop
std
push
jns
fdivrs
add
pusha
ret
and
adc
clc
fbstp
movsb
test
inc
push
aaa
inc
rcll
das
pop
pop
jne
push
rorl
push
mov
loopne
mov
filds
fidivrl
call
mov
cltd
movsl
cmp
enter
xor
in
movsb
call
gs
jnp
setns
xor
xlat
or
add
sub
ljmp
jno
cmp
in
testb
fwait
and
lcall
dec
mov
jge
and
sbb
mov
iret
test
or
jo
leave
movsl
mov
fcomps
mov
add
mov
dec
loopne
out
mov
xor
cwtl
fwait
cli
xlat
pop
js
inc
andb
ret
insb
in
sub
mov
popf
sub
lret
push
mov
push
repnz
popa
adc
loopne
test
enter
or
sbb
movsb
mov
push
sub
addl
out
push
das
inc
sahf
add
jae
scas
pop
jge
push
imul
and
cmp
fisubrl
push
xchg
daa
inc
clc
aaa
loope
cltd
int
and
mov
lods
xchg
mov
roll
xchg
sub
mov
cmpl
test
pop
out
dec
and
add
movsb
sub
sbb
dec
add
jae
jne
pop
mov
pop
ljmp
insb
inc
add
jle
rcrl
and
test
adc
cmp
daa
js
jle
push
mov
mov
in
pop
xchg
mov
mov
aas
movl
loop
es
lret
stc
iret
cmp
outsb
ret
scas
in
add
popf
repz
mov
xchg
push
cmpsb
dec
lock
and
test
ret
dec
xchg
mov
fildll
popf
adc
xor
inc
xor
mov
arpl
clc
fwait
cli
pop
lods
in
push
xchg
insb
rcll
testl
xchg
xchg
push
aaa
fimull
int3
cwtl
int3
pop
ja
cmpsb
dec
shr
js
pop
mov
mov
inc
pop
and
fdivl
aam
aaa
push
push
mov
xchg
cs
movsb
push
push
shlb
fucomip
outsb
jp
lret
cmp
aam
sub
xor
push
cmpsl
rorl
jb
mov
fbstp
mov
xchg
shll
loop
ret
add
jbe
hlt
fs
ja
mov
push
in
bound
call
out
dec
xor
jge
sarl
rcrl
xor
jns
out
push
int3
lret
jl
dec
sub
push
call
dec
mov
inc
fdivrl
dec
or
sarb
cwtl
das
cmp
lea
adc
xchg
in
and
adc
fs
jns
xchg
out
pop
mov
aas
mov
mov
das
and
xor
loop
push
mov
bound
lock
inc
and
mov
insb
lods
stc
adc
cli
sbbl
pop
rolb
adc
pop
inc
pushf
xor
mov
dec
out
pop
mov
mov
fnsave
adc
fisttps
data16
inc
cltd
movsb
in
test
jmp
dec
fdivrs
ljmp
mov
xor
jnp
hlt
pop
mov
pushl
add
xchg
xchg
aam
in
insb
add
add
mov
ja
jl
mov
add
or
sbb
scas
iret
mov
push
loop
mov
fdivl
xchg
dec
in
bound
fwait
cmp
notl
cmpsl
cmp
pop
adc
jae
repz
bnd
stos
leave
ret
lret
lods
mov
popa
test
xchg
jp
pop
mov
xor
out
addb
lahf
pushf
clc
xchg
ss
arpl
sahf
fdivl
outsl
test
popa
notb
push
addb
inc
sub
or
jp
pop
lds
outsb
je
cwtl
jmp
cld
lods
fwait
xor
mov
mov
cmp
call
adc
lret
loop
mov
fistl
arpl
and
jbe
addr16
loope
mov
jae
add
push
push
lea
jge
push
lea
aad
fbstp
xchg
jecxz
dec
test
int3
out
pop
frstor
out
mov
pop
test
fdivrl
cli
fcomip
insb
xor
mov
test
inc
rcr
jmp
jecxz
pop
cmp
stos
cmp
xchg
pop
stos
dec
adc
fs
divb
mov
add
sbb
loopne
bound
into
pop
jae
lds
mov
dec
xor
jb
bound
lods
mov
dec
imul
dec
lock
lcall
mov
push
fstps
ds
or
push
div
xor
sub
pop
aam
dec
fistpll
sub
jb
fidivl
mov
rcrb
outsl
add
xchg
int
int
mov
out
or
aad
inc
cmpsb
sbb
fsubs
leave
mov
sub
adc
sbb
imul
mov
fisubs
push
push
cmc
push
jl
lods
xchg
jb
sbb
mov
xor
out
movsl
stc
sub
lcall
dec
mov
mov
lahf
shrl
sbb
in
daa
cmpsl
jg
adc
pusha
lds
cmpsl
std
cs
lods
xchg
xchg
das
mov
repnz
outsl
rorb
inc
or
outsl
roll
nop
pop
out
popf
mov
js
cmp
inc
lcall
lcall
or
jno
divl
out
pop
scas
xchg
or
and
pop
sub
dec
push
inc
fdiv
mov
fidivs
cld
pop
in
push
cld
push
test
add
dec
mov
dec
mov
fwait
mov
xor
mov
mov
mov
dec
mov
xchg
pop
push
pop
inc
es
leave
rcrb
xchg
ljmp
xor
aaa
outsb
insb
lahf
mov
add
out
sbb
and
lods
fmull
xor
int
mov
pop
mov
ljmp
test
in
add
adc
sub
clc
nop
test
jl
jns
pop
mov
mov
push
sub
add
pusha
mov
jo
push
lock
sbb
dec
mov
lahf
ljmp
jge
pusha
add
movsb
push
inc
xchg
lds
mov
or
push
inc
adc
dec
loop
mulb
mov
and
out
add
mov
push
xor
dec
and
lahf
jns
into
cmp
ljmp
jne
or
mov
lahf
test
xchg
pop
or
sarl
add
in
bound
nop
daa
cltd
mov
scas
loope
sub
scas
popa
jmp
in
and
jne
mov
les
movsb
cltd
push
and
outsb
insb
mov
ret
sbb
out
cmp
cmp
and
jb
loopne
lahf
mov
mov
rcrb
and
into
in
daa
cli
sbb
push
jbe
addb
out
aam
and
out
jl
xchg
scas
jecxz
in
popf
pop
cmc
mov
repz
xchg
ret
insb
or
mov
mov
mov
leave
sbb
arpl
mov
movsb
mov
add
push
scas
sbb
fwait
dec
rorb
sub
adc
imul
cmp
data16
lret
dec
pop
repnz
scas
or
push
ljmp
lds
sub
fsubr
dec
loope
sti
ret
mov
sti
push
xchg
adc
icebp
fnstenv
adc
popa
test
jecxz
inc
and
cmp
xchg
push
mov
js
out
es
lret
adc
dec
adc
jns
jb
dec
loope
cmp
fsin
nop
push
mov
loop,pn
or
mov
aam
out
add
push
xor
cmp
int
jl
addl
ja
lea
mov
sub
mov
dec
jmp
jns
cmp
nop
sub
and
fnstenv
xchg
int3
add
divb
xlat
mov
pop
xchg
push
xlat
inc
inc
les
cmpsl
jae
push
stos
fmull
ds
xor
cmp
hlt
jnp
mov
add
lods
jmp
loop
into
pop
icebp
sub
arpl
js
outsb
push
inc
lcall
xor
mov
xchg
adc
fs
xchg
fwait
adc
movsl
mov
jle
out
mov
sbb
push
inc
push
and
jmp
dec
pop
push
fidivrl
dec
mov
push
pop
jmp
push
lods
inc
shll
cmp
lret
push
sbb
xchg
bound
mov
or
cmp
outsb
sbbl
mov
dec
add
add
add
push
mov
loopne
cmp
mov
mov
and
repz
adcl
clc
inc
fisubrl
lret
inc
popa
jle
add
lret
das
xor
mov
repnz
cmp
rcl
int
adc
out
sub
rcl
pop
jecxz
inc
adc
ljmp
aam
movsb
fnstcw
aaa
adc
sbb
in
in
inc
lock
inc
pop
outsl
jne
ja
repz
mov
push
adc
add
xor
xor
and
xchg
jae
sbb
ficompl
mov
mov
add
imul
subl
scas
pop
out
inc
mov
dec
outsl
xchg
adcb
inc
rcrl
cltd
and
test
jge
daa
cmp
clc
pop
push
sub
lods
inc
fcmovu
xorb
push
in
and
dec
adc
divb
xchg
mov
imul
dec
add
lret
lods
jb
push
cmp
pop
stos
out
sbb
fiadds
out
pop
ja
jmp
dec
aad
xchg
outsl
cmp
insb
nop
sub
xchg
pop
jb
loope
dec
xbegin
adc
inc
das
mov
and
or
cmpsb
lret
mov
push
stos
rolb
js
mov
mov
sub
sub
jmp
pop
stc
or
xor
test
int
orl
mov
aad
inc
mov
addr16
sbb
add
add
sbb
jbe
and
mov
sub
adc
mov
popf
xchg
sarb
in
subl
aaa
into
cmp
sub
jle
in
rcrb
test
mov
fsubs
mov
mov
inc
add
mov
je
iret
and
xchg
push
or
stos
mull
in
pushf
xor
aam
sbb
xchg
iret
data16
mov
sub
stos
inc
mov
cmc
mov
cmp
pop
stos
jp
mov
pop
add
out
in
test
loopne
mov
lahf
mov
cld
cmp
daa
push
les
adc
imul
and
mov
mov
jns
insb
push
cli
pop
inc
mov
fdiv
negl
lods
sbb
les
sbb
or
sahf
jne
push
nop
daa
test
jo
fwait
es
mov
pop
bound
mov
in
xor
mov
sbb
dec
pop
cmp
dec
xor
pop
push
cmp
aad
add
cmp
in
jno
out
and
pop
fnstcw
aaa
fcomi
lret
icebp
adc
sub
jb
add
add
jg
add
adc
loope
pop
xchg
or
inc
int
stos
fs
sbb
and
ret
pop
popa
stos
leave
addr16
arpl
mov
dec
stos
aaa
jns
clc
orb
int
in
add
jbe
jecxz,pn
in
adc
scas
stc
mov
mov
je
in
cmp
adc
cmp
je
mov
jbe
push
jae
stos
cld
iret
pop
add
jbe
push
lahf
push
xor
xchg
out
dec
mov
inc
jmp
xchg
jp
pop
jp
xlat
cld
lcall
in
jg
xchg
notb
push
aam
dec
mov
jne
jb
fs
sbb
mov
push
push
mov
jg
inc
and
movsb
jle
imul
sbb
test
jle
pop
call
add
dec
fbld
xchg
jne
loop
dec
dec
dec
cmp
cmp
cmp
ret
aam
shl
add
dec
nop
lea
lcall
fiadds
test
mov
aas
jl
movsb
xchg
flds
into
aas
xchg
out
int3
loop
inc
jmp
sub
adc
sbb
cmp
scas
sbb
stos
and
jb
dec
add
loop
pop
cmpsb
ret
mov
push
push
mov
sub
jecxz
xchg
add
pusha
dec
and
mov
jne
int3
cmp
bound
popa
fsubrl
and
pop
imul
jae
pushf
daa
mov
aam
inc
mov
test
cld
lret
or
gs
movsl
cmp
mov
jns
or
sbb
pop
insl
cmp
dec
gs
in
ds
test
fldenv
sub
sahf
xchg
mov
or
add
fstps
xchg
pop
sub
xchg
orps
dec
dec
shll
rcrl
xchg
xor
add
pop
movsb
inc
jp
nop
mov
mov
mov
pop
cs
scas
cwtl
jmp
inc
imul
imul
push
mov
xchg
jge
dec
int3
adc
cmp
jnp
pop
scas
jno
sbb
jle
lods
adc
ds
inc
pop
js
sbb
lods
push
xchg
push
adcb
call
es
xchg
jbe
out
cmc
dec
add
jbe
push
daa
scas
xchg
xor
out
je
dec
xor
xor
insl
push
stos
push
mov
push
xchg
outsl
xchg
fdivp
enter
mul
mov
push
xchg
mov
push
mov
cmp
pop
int3
repz
cmp
outsl
push
push
insl
repz
scas
fimuls
inc
lret
shll
push
mov
inc
sbb
xchg
movsl
movsb
xlat
arpl
fistpl
and
loope
pop
out
in
cmp
pop
inc
jns
lret
sub
lcall
jb
cwtl
and
dec
out
inc
and
fisttpll
les
sbb
int
stos
xchg
sbb
push
lret
jecxz
mov
call
cmp
loop
and
push
adc
mov
ss
je
add
push
mov
je
mov
bound
sbb
xchg
inc
int
fldenv
mov
push
popf
mov
test
mov
or
out
add
in
sub
adc
jbe
xchg
mov
mov
inc
movsb
aas
fs
test
push
ja
icebp
movsl
arpl
mov
fisubrl
push
sbb
jl
std
xor
shlb
fistl
xor
xchg
mov
out
dec
adc
lock
push
cmp
fbstp
xchg
mov
jno
inc
repz
jl
push
scas
mov
sbb
mov
push
int3
cmp
movsl
lea
mov
in
jnp
aam
mov
aad
cs
bnd
xorl
and
out
adc
xor
mov
or
int
and
movsl
inc
xorb
cli
lea
lea
pop
mov
inc
stos
xor
mov
mov
loopne
pop
mov
test
pop
int3
test
hlt
mov
push
pop
sahf
dec
cmp
sbb
and
xor
out
cmp
cltd
adc
rcll
mov
enter
sbb
cltd
out
cmpsl
test
sub
push
stos
push
cmpsb
pop
xor
or
lods
inc
add
out
mov
fldl
aad
pop
out
mov
and
cwtl
das
das
xor
xor
xor
scas
dec
jns
hlt
je
jno
enter
subl
fdiv
pop
cli
pop
es
test
mov
mov
sub
int
rcll
shr
dec
lds
adc
mov
cltd
and
in
or
jmp
mov
pop
nop
xor
mov
cmp
movsb
cmpb
bound
sub
push
movsb
mov
add
test
push
neg
jb
loopne
push
push
push
mov
ror
in
cmpsl
loop
fstpl
add
shlb
pop
xchg
pop
push
insb
pop
dec
insb
daa
xchg
sub
leave
jecxz
mov
stos
mov
adc
mov
dec
pusha
stos
mov
fwait
notl
cld
loop
adc
pop
cmp
jle
adc
hlt
jae
sub
cmc
cmp
adcl
cmpb
ficompl
pop
neg
mov
jbe
mov
push
jle
es
inc
pop
ret
rcl
fstl
lods
push
lret
xlat
sar
sub
movsl
and
jb
dec
jmp
rol
jno
jge
dec
ficomps
loopne
adc
mov
outsb
sub
push
pop
jmp
mov
mulb
dec
add
bnd
imul
pusha
sbb
sbb
or
shll
sbb
hlt
es
jp
stos
addb
inc
js
insb
ss
test
mov
push
ja
adc
loop
cmp
pop
pop
xor
stos
aad
pop
shll
inc
cld
cmp
daa
adc
and
adc
pop
imul
push
das
mov
push
dec
imul
out
cmpsb
lea
fildll
or
aam
cli
xor
out
out
pop
lea
xchg
cmp
movsl
ja
scas
add
sti
fwait
pop
shll
push
fsubr
out
cmc
push
nop
fsubrl
mov
cmp
mov
xchg
pop
xor
dec
aad
in
jmp
xchg
imul
mov
std
aad
flds
stos
int
jb
lcall
cmp
xor
aaa
push
sbb
push
dec
add
jg
sbbb
cmp
adc
xor
mov
loop
lock
dec
sarl
dec
out
xchg
dec
fsubrs
mov
fwait
xchg
cmp
out
popf
outsl
dec
add
mov
inc
cltd
mov
mov
add
adc
test
inc
iret
mov
std
push
and
mov
ret
mov
cmpsl
pop
jp
add
cmc
mov
or
out
add
inc
lret
test
xchg
in
mov
in
fnstenv
adc
xchg
adc
mov
push
mov
outsb
sbb
push
shll
mov
out
or
xor
sbb
add
popf
inc
das
cmpsl
jns
pop
mov
ficomps
dec
leave
nop
cmp
movsb
cld
mov
adcb
loopne
and
inc
mov
fwait
push
into
pop
jbe
adc
lret
enter
cmp
sar
fs
jno
fmul
sub
or
or
iret
add
lahf
ja
push
in
int
dec
dec
popa
jns
roll
mov
inc
and
sbb
popa
lret
pop
xor
dec
and
fdivrl
fdivrs
pop
jb
out
bound
cmp
icebp
lea
inc
adc
xorl
sti
dec
int3
mov
xor
sbb
sbb
jns
lret
imul
or
inc
imul
fldenv
inc
jg
dec
lret
or
sub
sbb
data16
add
out
ret
pushf
pushf
repz
and
call
or
mov
jecxz
sbb
xor
mov
dec
stos
mov
in
mov
scas
sub
xor
cmpsb
stos
mov
adc
push
cmp
cwtl
ljmp
pushf
mov
pop
movsb
imul
pop
lock
jnp
push
mov
cmp
outsl
fisubrs
ljmp
imul
cmpsb
mov
shrb
jb,pn
ficomps
push
outsl
insb
data16
or
cltd
add
push
ljmp
jno
inc
test
es
and
xchg
in
ret
inc
test
dec
inc
push
cmp
cld
mov
pminub
neg
lods
bound
pop
clc
jle
sub
imul
and
add
clc
xor
test
add
test
xor
xchg
mov
pop
insl
ret
insl
shll
xchg
dec
loop
jb
in
lea
adc
fnop
push
jp
sarb
mov
sbb
jne
sub
ret
push
sbb
stos
shrb
mov
outsb
js
inc
adc
sbb
std
stc
sti
pop
pop
xchg
dec
call
push
mov
add
arpl
sbbb
jecxz
sbb
shrb
popf
push
push
cmpsl
or
dec
cmp
push
js
jnp
cmc
imul
loope
and
popa
lods
repnz
jne
fdiv
mov
mov
sahf
int
std
push
sti
push
pop
mov
and
out
xchg
dec
leave
int
cmp
out
sahf
mov
xor
push
pop
pushf
scas
sbb
pop
popf
pop
jb
pop
mov
cmp
loop
push
cmp
or
not
adc
jle
inc
pusha
scas
dec
fwait
fs
mov
adc
pop
mov
arpl
es
xchg
std
mov
adc
dec
int
notl
cmp
in
push
in
gs
push
jl,pn
and
or
rorb
push
cmp
push
arpl
es
fs
push
mov
lretw
pop
push
mov
rcrl
mov
or
loop
inc
pusha
jns
mov
mov
push
shll
and
popa
fwait
in
aas
jecxz
mov
lea
mov
xor
sbb
sub
inc
pop
cmp
repz
outsb
xor
bound
dec
nop
xchg
cmp
js
lcall
and
testl
lods
dec
ljmp
cwtl
std
stos
inc
das
ljmp
cmpb
fisttps
jno
hlt
adc
or
out
and
jge
pop
out
xor
xchg
shll
lahf
incl
shrl
or
push
jbe
mov
mov
or
pop
mov
rcl
outsl
cs
adc
jo
dec
or
sbb
js
loop
lods
enter
je
mov
cmp
fiaddl
and
or
lcall
dec
cmpsl
jnp
mov
lods
mov
loope
in
or
and
insb
add
lods
adc
xor
popf
pop
mov
mov
fsubs
pop
cmc
cmp
std
xchg
jnp
in
sub
sbb
js
cmp
mov
test
or
icebp
cld
dec
loop
mov
jecxz
xchg
mov
mov
or
xchg
xor
and
fcmovb
lods
cmp
jp
xor
pop
nop
jg
out
mov
in
jo
stos
add
adc
aas
movl
cli
mov
jno
mov
inc
int3
inc
ret
cmp
dec
lods
aaa
fdivs
ds
cmpsb
sbb
jg
cmp
jae
popf
push
cwtl
sbb
jno
mov
outsb
jl
dec
in
jno
inc
divb
popa
in
popa
call
cwtl
xor
add
mov
mov
lret
pop
pop
add
insb
aam
sub
ss
dec
and
xor
test
jg
movsb
dec
xchg
fmuls
out
vcmpss
jo
fwait
aad
xor
push
jp
out
jo
push
sub
and
push
jecxz
pop
add
mov
stos
in
nop
and
inc
push
mov
and
shrl
jle
repz
cmp
xor
repnz
lret
cmp
insb
lcall
inc
lahf
insb
not
and
aam
lds
lahf
sub
mov
inc
jb
jae
inc
push
arpl
data16
pop
das
addr16
mov
in
jb
jle
xor
cmc
xchg
fcompl
add
jnp
roll
mov
outsb
sbb
pushf
divl
insb
dec
cmp
fsubrl
fidivl
mov
and
in
shlb
test
orl
mov
sti
adc
sarb
push
aaa
mov
sbb
out
dec
les
mov
decb
adc
push
out
popf
sbb
push
mov
js
push
bound
iret
repz
adc
mov
mov
cmc
inc
les
hlt
out
push
xor
cmp
not
fisubrl
rcr
stc
or
xor
xor
sub
stos
inc
sub
xor
pusha
enter
jp
test
leave
and
ja
in
cli
cmpsb
or
sidtl
addb
sti
test
mov
orl
int3
lahf
push
lods
inc
out
sti
xor
mov
push
in
int3
jnp
sub
out
fcompl
jmp
stos
call
mov
jge
insb
pop
fwait
loopne
out
inc
xchg
mov
adc
ret
pop
jae
fstpl
cmp
cmp
mov
add
inc
adc
pop
stc
fwait
subb
mov
push
jge
mov
pop
cli
inc
xlat
sub
or
cmp
cmc
mov
pop
lcall
push
xor
mov
mov
pop
or
stos
inc
outsl
fsubrs
mov
sbb
cmp
jecxz
jne
mov
pop
imul
imul
push
push
adc
inc
dec
jecxz
scas
add
inc
sbb
dec
arpl
mov
mov
in
xchg
sub
mov
clc
cmpsb
std
mov
enter
fsubrl
inc
imul
fs
int
cmp
mov
in
arpl
loop
cmpsl
mov
je
imul
cmpsl
xor
insb
push
lds
cltd
pusha
mov
jecxz
fnstcw
shr
ss
test
stos
aad
fucomp
push
sbbl
mov
daa
data16
outsb
xchg
mov
inc
movsl
cmp
pop
loope
or
and
push
add
mov
repnz
sarb
add
lods
sbbb
adc
pop
mov
ljmp
in
iret
fisttpl
mov
std
leave
xchg
in
std
sub
jle
in
imul
scas
clc
call
lcall
push
mov
cmp
xchg
imul
mov
fs
lea
sub
jae
into
mov
or
loope
lret
sarb
inc
loope
les
pop
jge
inc
dec
pop
hlt
ss
out
add
jbe
jno
mov
inc
sahf
adcb
data16
subb
dec
sbb
ds
jo
in
icebp
sbb
mov
jmp
sub
mov
jecxz
mov
outsl
xor
xchg
xchg
add
mov
add
push
mov
es
stc
test
push
sub
pop
in
sbb
je
data16
shlb
pop
jne
push
cmp
cs
mov
movsb
nop
ret
hlt
out
jo
repnz
xchg
lds
lret
js
lock
sub
fmull
jns
mov
das
fwait
es
aam
fdivl
cmc
push
xlat
scas
movsl
lea
insl
aas
imul
pop
and
sub
imul
mov
adc
inc
inc
orb
add
cmpsl
out
enter
cmp
inc
xlat
hlt
xchg
inc
in
pushf
adc
jecxz
addr16
xchg
mov
ficompl
sub
or
sbb
push
pusha
and
jbe
out
test
sub
adc
std
and
clc
lcall
in
shll
inc
les
negl
mov
stos
repnz
push
or
daa
int3
mov
hlt
add
aad
inc
push
push
mov
aam
xor
andb
hlt
fimuls
scas
data16
notl
movsb
movsb
incb
jl
out
jmp
insl
add
push
cmp
add
and
and
outsl
daa
inc
inc
fwait
popa
in
sub
data16
and
and
test
notb
adc
lahf
mov
xchg
jl
sbb
test
or
cmpsl
jge
cwtl
lock
test
cmp
adc
dec
lods
ljmp
pushf
cli
scas
fidivrs
pop
fs
cltd
xor
or
ret
lods
push
iret
test
inc
mov
stc
sbb
mov
sub
adc
out
add
popa
pop
jae
add
xor
push
inc
movsl
lret
xor
push
jnp
push
mov
lods
add
sbb
cltd
mov
in
js
mov
mov
negb
movsl
clc
in
jb
xchg
in
adcl
mov
ficoms
and
or
out
dec
out
mov
andl
sub
clc
adc
call
pop
jo
add
sub
lcall
mov
jmp
scas
insb
clc
iret
sbb
ret
cmp
mov
out
push
icebp
jnp
mov
cmpl
icebp
insl
xchg
inc
cltd
movsl
addr16
add
inc
dec
ss
call
inc
dec
push
inc
pop
repz
imul
inc
push
outsl
dec
insl
sbb
test
mov
outsb
mov
stc
adc
add
insl
jbe
mov
mov
sbb
jecxz
cli
adc
mov
mov
push
xlat
or
adc
fcmovnbe
or
mov
and
int
sarl
sbb
adc
mov
cmp
loope
out
fidivrl
cwtl
mov
sub
xchg
imul
xlat
mov
pop
add
jnp
cld
lcall
cli
xchg
cmc
push
xchg
pushf
push
xchg
mov
js
ja
pop
mov
xchg
or
aas
outsb
sbb
hlt
mov
inc
test
cs
mov
pause
lods
test
ja
mov
imul
cmp
push
xor
cmp
mull
popa
sub
xlat
add
mov
shll
sub
xchg
add
enter
stos
adc
sub
sub
fstps
push
adc
pop
adc
scas
or
enter
xchg
or
sbb
insl
sub
adc
ret
xchg
aam
dec
loop
inc
jae
jecxz
bound
jp
ds
push
inc
cmp
mov
inc
xchg
fists
pop
movsb
mov
and
je
push
mov
push
or
mov
xchg
add
fiadds
adc
pop
mov
lahf
sbb
xchg
stos
push
push
jmp
mov
push
lods
mov
cmc
sbb
adc
iret
shlb
aas
loopne
repnz
cmpsb
sub
fdivrl
cmp
jp
icebp
loop
rcl
cltd
add
repz
cmp
fxtract
aad
inc
scas
ret
pop
cmp
lahf
xor
push
push
mov
out
add
mov
push
mov
scas
orb
clc
sub
push
add
sbb
jmp
xor
sbb
jle
shr
in
mov
js
popf
mov
std
pop
mov
jg
mov
xor
rol
fdivrl
fnsave
jbe
loop
inc
push
inc
in
pop
out
es
inc
bound
mov
mov
sbb
mov
mov
ret
pop
daa
scas
scas
repnz
lret
loope
data16
int
push
adcl
pop
jns
pop
out
std
enter
insl
mov
mov
cmp
push
inc
lcall
jb
inc
add
in
popa
nop
mov
push
mov
comiss
movsl
cld
xchg
inc
loop
cli
negl
js
xor
jl
gs
sbb
fdivrp
mov
sbbb
out
lods
sbb
fwait
pop
cmp
arpl
pusha
cli
xchg
cwtl
and
mov
pop
sub
popf
and
sbb
sub
cmp
add
inc
inc
mov
push
leave
loope
jne
xchg
cmpsl
test
ja
leave
sbb
in
test
cltd
cmpsl
push
test
push
insl
test
arpl
test
mov
pop
je
or
clc
xor
adcb
lret
insl
movsl
add
sub
jns
xchg
repnz
cwtl
lret
bound
push
mov
mov
ja
test
sti
lock
loope
je
sbb
cmp
inc
jle
jae
xorl
jmp
push
je
adc
or
test
movsl
movsl
rol
mov
ds
jo
xor
push
jno
lret
cli
outsb
ret
out
fisttpl
mov
jbe
pop
in
movsl
push
xchg
push
or
xchg
xchg
pop
sbb
into
int
fs
data16
das
jecxz
gs
mov
and
pop
test
jo
out
adc
ss
loope
and
mov
popa
or
leave
pusha
jbe
inc
mov
shrl
jge
jne
cmpsl
mov
clc
mov
or
cwtl
xor
fistpl
cwtl
das
ss
and
sbbb
or
cmpb
or
in
mov
mov
hlt
xchg
cmc
stos
inc
cs
fisubrs
push
enter
das
inc
imulb
insb
cltd
jnp
adcb
addb
nop
mov
stc
mov
scas
sti
mov
mov
push
popa
clc
xchg
jg
xor
scas
sbbl
mov
jle
mov
push
notb
cmc
ret
pop
daa
das
and
pop
loope
mov
push
jle
aas
xchg
lahf
pop
mov
mov
cmc
pusha
jns
and
in
cld
decb
aam
xor
repnz
adc
inc
pop
mov
jg
js
js
nop
push
popf
shll
ds
pop
xchg
or
je
mov
icebp
inc
shlb
adc
mov
int3
xor
icebp
lcall
and
das
cmp
pusha
adc
pop
jb
pop
mov
jecxz
sub
adc
dec
lods
inc
aas
lahf
mov
and
icebp
xor
fnstcw
arpl
je
mov
ficomps
jmp
imul
ja
and
add
stos
scas
cli
faddl
sbb
xor
daa
movb
sbb
dec
push
cmp
popa
aas
movsl
fidivrl
xlat
mov
fwait
lods
clc
mov
gs
mov
dec
cli
xchg
jle
cld
mov
shrb
ss
add
dec
and
fsubrl
push
idiv
sbb
lret
iret
shr
xchg
loop
push
mov
jne
ds
fs
add
js
mov
inc
fmul
and
negb
movsb
jmp
or
mov
pop
rorb
and
cmp
outsb
aam
rorl
aam
fsts
jne
dec
stos
mov
cmp
push
call
xchg
lock
repz
push
push
dec
mov
cmp
cmp
fstpl
mov
push
fs
mov
arpl
adc
cmp
mov
lods
dec
cld
push
rcrl
rol
mov
pop
mov
cli
jb
adc
sbb
adc
in
xchg
pop
jnp
inc
jmp
inc
adc
mov
push
xchg
pop
cmpsl
inc
pop
mov
sar
push
add
test
loop
in
test
pushf
pop
imul
test
mov
adcl
in
and
movsb
lea
int3
cmpsl
xor
decb
dec
adc
jo
cmp
adc
or
jp
loop
xchg
inc
pop
and
pop
idivb
cmovge
push
dec
cmp
imul
mov
in
push
and
outsl
dec
or
popa
es
test
inc
fwait
cmpsl
jae
lret
xlat
arpl
mov
push
js
inc
pop
clc
adc
fwait
jae
aas
mov
lcall
cmp
or
js
mov
jnp
adcb
das
ds
repz
push
clc
ja
out
cmp
sbb
cmp
aaa
lahf
ret
cwtl
aam
mov
lcall
arpl
es
or
sbb
ret
cmp
call
cmp
and
mov
mov
inc
or
xchg
jmp
sbb
pop
std
mov
xchg
jae
cmp
add
sbb
jg
sahf
xor
leave
mov
or
aas
mov
cli
push
iret
lods
int
mov
pop
es
mov
adcb
jns
mov
sahf
jmp
cmc
mov
dec
sub
imul
into
mov
adc
out
push
mov
xorl
sbb
jns
push
sub
and
mov
push
fs
mov
ss
int3
pop
sbb
lahf
or
push
call
adc
mov
and
jmp
jmp
cmp
pop
fidivrs
ret
lcall
mov
pop
lds
add
popa
clc
imul
dec
lret
lds
pop
stc
repz
data16
sbb
out
mov
sbb
xor
int3
push
mov
xchg
push
xchg
xor
adc
pop
sti
and
mov
push
test
flds
or
xchg
popf
stos
sbb
and
xorl
mov
push
or
jb
jb
andb
cmp
inc
sbb
xchg
js
cmp
cltd
or
rcrb
xadd
jge
in
in
adc
mov
mov
xchg
lea
movsl
mov
or
sbb
mov
out
nop
push
push
out
mov
call
pop
sub
push
loop
aas
and
loop
push
mov
xchg
fimull
imul
lcall
sbb
mov
and
cmpsb
les
push
mov
jecxz
cmp
mov
out
and
pop
xor
push
fiaddl
and
xor
popa
clc
push
aas
jg
call
aad
shlb
push
jle
pop
imul
jbe
shrb
lidtl
cld
cmp
scas
call
test
jmp
sub
mov
push
ret
mov
mov
arpl
clc
lret
cmp
pushf
out
adc
mov
andb
dec
je
popa
jg
pop
dec
out
push
fidivs
sti
push
pop
pop
in
add
xor
jl
fnstsw
add
mov
sbb
jno
dec
test
das
fwait
push
popa
add
sub
pop
cwtl
add
sbb
lods
int
add
xchg
mov
fimull
dec
jae
fldcw
insb
pushf
xor
lret
mov
push
fsubl
dec
push
inc
std
xchg
in
in
pushf
lods
inc
int
movsb
jge
pusha
testl
test
adcb
ja
xchg
cld
stos
pop
pop
cmc
dec
mov
jl
add
imul
adc
shll
hlt
int3
out
in
dec
pop
lds
mov
aad
jecxz
mov
xor
cmp
insb
loop
sub
mov
mov
pop
push
repnz
int3
lcall
and
sbb
stc
and
mov
mov
jl
repnz
sub
xor
cmpb
popa
inc
movsb
push
xor
lret
notb
cmp
inc
pop
xchg
inc
mov
ret
mov
and
push
out
bswap
xlat
call
dec
add
mov
pop
in
xor
dec
mov
xlat
pop
faddl
jns
imull
pop
adc
jmp
daa
scas
cs
cmpb
mov
jecxz
in
inc
sbb
mov
jmp
mov
out
out
sbb
mov
dec
das
mov
fstp
mov
fdivl
sahf
into
mov
mov
mov
ret
out
int3
jns
xor
outsb
clc
push
and
adc
scas
cmp
push
xor
add
mov
xchg
push
lods
test
mov
or
mov
div
dec
pop
loopne
push
xor
inc
and
loope
stos
jbe
js
cmp
mov
add
lret
bound
sarb
mov
mov
push
jg
subl
sub
icebp
xchg
imulb
mov
imul
popf
clc
cmpsl
hlt
cltd
cmpsl
sub
cli
andl
mov
ficompl
adc
cmp
inc
js
into
js
cltd
enter
test
mov
push
lods
jmp
mov
lret
loope
cmp
push
test
push
sbb
mov
inc
shll
add
dec
dec
push
scas
shll
push
out
test
clc
or
lcall
fidivrl
fcoms
ja
sub
sub
stos
push
xchg
data16
sti
iret
jl
jne
rorl
aaa
icebp
out
lock
arpl
xor
mov
fistps
sbb
mov
ja
xlat
lods
int
ret
fnstenv
repnz
fs
ds
add
jne
cs
pusha
sub
adc
inc
jno
jle
sbb
sub
fs
out
jl
stos
loopne
mov
xor
xchg
xchg
lods
int3
jp
shrb
sbbl
pop
nop
dec
aad
mov
stc
jl
mov
scas
pop
test
jo
ss
xchg
xchg
test
mov
int3
mov
fidivrs
outsb
out
out
mov
dec
loop
sub
add
sti
adc
and
mov
sbb
add
insl
into
pop
mov
inc
sbb
push
in
lcall
lods
mov
insl
push
es
cmpsl
sbb
xor
xor
lahf
jle
sub
pop
mov
sti
xchg
int3
out
jl
clc
and
cmp
xchg
lret
pop
pushl
push
cli
movsb
jmp
push
push
insl
scas
sahf
aas
pushf
int
mov
pop
in
push
ret
jb
mov
fdivr
dec
xchg
push
xchg
pop
scas
incb
cmp
mov
add
push
insb
add
adc
cmpsl
xor
pop
inc
ss
sub
mov
lcall
cwtl
lahf
push
dec
leave
pusha
andb
mov
aad
mov
stos
jg
rcrl
dec
sahf
test
in
jle
sub
call
pusha
or
cmpsb
fwait
mov
movsl
pop
xchg
push
add
aad
cmp
and
adc
lret
add
fdivrl
into
out
jns
out
mov
aas
aam
repz
and
fucomp
jecxz
sbb
repz
pusha
add
mov
add
xor
xchg
jmp
out
ljmp
mov
test
iret
int3
sbb
adc
aad
repnz
push
loop
mov
js
fiaddl
xchg
mov
nop
shll
push
sub
jmp
sub
add
ljmp
icebp
or
pop
lahf
and
enter
mov
push
cs
jle
xor
pushf
mov
add
xor
cld
or
jo
dec
dec
mov
jg
in
in
xor
sarl
mov
cmp
pop
inc
pop
gs
jns
mov
push
repnz
pop
sbb
icebp
test
adc
or
xor
cltd
cli
xor
call
inc
test
mov
xor
ficompl
stos
jg
out
je
xor
push
insl
sbb
lds
iret
push
sbb
mov
xor
lea
push
into
popa
mov
push
ljmp
ljmp
mov
jp
mov
int3
pop
idiv
push
cs
sbb
cmc
dec
mov
stos
cld
call
cmpsl
ds
jo
or
lock
jae
jl
andl
push
aam
ret
inc
loope
js
fcoml
dec
jp
sub
pop
push
fs
mov
and
clc
xor
add
insl
add
cmp
inc
sarb
fstl
mov
out
push
push
xchg
fdiv
enter
jecxz
mov
or
scas
inc
adc
jmp
mov
call
mov
cmp
sub
cmp
loop
fsubrs
adc
imul
fnstenv
xchg
xchg
lcall
rcll
cmp
sahf
xor
mov
fnstsw
push
add
xor
shlb
lahf
inc
sbbl
adc
lret
aad
in
mov
roll
lret
addl
mov
xchg
lahf
jno
orps
dec
sbb
jl
insb
jge
dec
mov
sub
fnsave
loop
in
lcall
sub
mov
mov
jg
mov
rolb
push
mov
mov
xchg
and
iret
sbb
stc
jp
inc
xchg
unpckhps
arpl
push
dec
in
inc
lret
or
xor
leave
mov
call
pop
mov
pop
icebp
jg
in
int3
mov
out
dec
js
pop
stc
cmp
loop
daa
fadds
push
test
inc
adc
jbe
jg
dec
mov
xchg
fwait
cmp
mov
push
pop
imul
xor
xchg
pcmpgtb
mull
push
leave
jae
pushf
xchg
adc
js
lret
sbb
push
and
xchg
xchg
fcmovnbe
mov
or
fincstp
sti
or
add
fmul
ss
clc
push
dec
in
bound
bound
test
sub
mov
rorl
sub
mov
test
or
pop
addr16
mov
pop
mov
in
fdivs
push
scas
inc
sbbl
xor
clc
mov
ljmp
jno
pop
cmpsb
mov
fdivrs
fs
mov
dec
inc
jmp
cmp
mov
dec
add
pop
movsb
or
loope
push
mov
or
cmp
xor
xchg
les
cmp
xchg
mov
pop
mov
xor
jb
cld
mov
ljmp
out
mov
jne
cmpsb
inc
adcb
pop
mov
out
xor
mov
xchg
and
add
lret
sbb
lds
int3
mov
in
cmp
xor
pop
je
inc
lret
and
and
mov
mov
push
jns
std
and
cltd
shlb
in
out
jl
sub
bnd
jl
sub
rcrl
aaa
mov
sti
jmp
sbb
mov
int
sub
shrb
inc
cmp
aas
or
loopne
push
mov
inc
ss
jb
inc
test
adc
scas
nop
mov
arpl
cmpsl
sahf
lods
in
outsl
shll
dec
or
aaa
cs
stos
flds
cmp
cmpsl
loope
jecxz
xor
cmpsl
call
jno
add
adc
sub
push
sub
pop
int3
pop
or
ds
sub
add
shll
scas
and
jg
iret
push
repz
stc
jb
outsl
int3
adc
and
ror
ja
test
pop
enter
neg
sbb
cld
xchg
push
ret
int
cli
sbb
pop
test
rcrl
mov
aas
xchg
dec
outsl
push
dec
push
andl
and
test
add
cmp
inc
dec
clc
test
sub
testb
push
cmp
jbe
shl
mov
imull
orl
mov
jg
loop
inc
cli
pushf
push
loopne
rcrb
pop
mulb
xchg
push
fisubrl
jae
mov
jg
mov
repz
dec
inc
fsubrs
sub
cmp
push
and
xchg
lret
leave
xor
iret
xor
cmp
or
cmp
or
ficoml
flds
inc
rcrb
fcoms
lcall
push
mov
adc
xor
fiadds
pop
ss
inc
mov
enter
scas
xchg
lods
adcb
cmp
cs
sbb
lods
inc
jns
cmpsl
mov
icebp
shl
and
daa
shr
push
daa
lret
dec
mov
pop
dec
pop
push
repz
stos
pushfw
and
inc
mov
xor
or
inc
jns
add
ja
pop
mov
sub
lret
dec
stos
in
mov
mov
inc
movsb
fldenv
push
add
outsb
ss
add
pop
pop
hlt
mov
in
outsb
cli
xchg
jb
adc
rclb
and
imul
mov
repz
pop
stos
jp
sbb
nop
mov
xor
inc
bound
xor
jmp
fwait
or
pop
jl
loopne
rclb
add
cmp
push
mov
sub
int3
jge
mov
inc
pop
ds
sub
outsl
cmc
adc
lahf
and
cmpsb
data16
lea
and
adc
sub
jg
mov
jno
fistl
or
xor
and
repnz
xor
xor
mov
cli
mov
cmc
mov
pop
sbb
leave
mov
cmp
sbb
out
mov
jne
push
fs
xor
dec
pop
aam
inc
jno
mov
stos
stos
xchg
cltd
push
jnp
xchg
lods
arpl
js
inc
addr16
aas
ret
pop
insl
sbb
loope
out
sub
xchg
pop
movd
lds
test
movsb
or
or
loop
sub
jns
lcall
rcrl
mov
mov
mov
jp
xchg
push
mov
movsb
xor
push
scas
mov
shrl
shrl
cmp
push
ret
pop
test
mov
fistpl
xor
cmp
xchg
sbb
add
fdivs
xchg
clc
stos
dec
xchg
jns
les
daa
lock
lods
stos
movsb
sbb
popa
dec
lds
out
adc
mov
and
ljmp
xchg
les
inc
shrl
movsl
stos
lret
add
imul
or
cmp
mov
xor
aaa
pop
fimull
sbb
mov
pop
or
xlat
insl
push
push
cmp
xlat
adc
mov
jmp
push
sahf
out
inc
jae
add
add
push
daa
push
lock
xchg
sub
mov
movsb
mov
rclb
cmp
popa
popa
mov
cmp
mov
hlt
adc
ss
imul
push
cltd
xor
in
xorl
test
js
mov
test
sub
test
shr
scas
sti
inc
add
jb
dec
xor
sahf
lods
pusha
push
xchg
sub
mov
mov
mov
popa
inc
cmp
stos
xchg
and
inc
jmp
xchg
popa
jo
scas
aas
and
pop
imul
in
and
dec
mov
or
loop
xchg
divb
sarb
fdivrl
push
or
fnstcw
les
adc
inc
push
mov
jae
jae
or
imul
lods
aam
rorl
scas
dec
es
or
clc
xchg
push
and
and
adc
mov
sub
push
add
mov
loop
push
sbb
aam
cmp
stc
mov
ljmp
adc
push
mov
cwtl
dec
cli
repz
and
leave
mov
push
cs
ss
or
sub
pop
rorb
arpl
cs
cltd
mov
xchg
adc
cltd
push
dec
xor
ret
fs
mov
leave
shl
dec
es
mov
in
aas
lahf
lret
into
mov
loopne
scas
pushf
cld
ljmp
jae
jns
in
xchg
jne
sbb
call
std
loope
jne
adc
stc
nop
push
and
adc
pop
movl
xchg
add
add
cwtl
and
jle
lods
cmpsl
inc
push
or
pop
sub
jno
sub
mov
mov
xchg
sahf
jmp
shlb
push
or
fcoms
sbb
and
out
pushf
and
nop
push
outsl
mov
leave
jo
scas
int
mov
sti
leave
test
mov
rcrl
or
pop
fdivrl
or
and
or
or
in
lds
test
sub
int
call
pop
sub
cwtl
pusha
mov
mov
inc
pop
lods
bound
popf
sbb
xchg
sbb
or
sub
fsubs
scas
push
ljmp
xchg
cmpl
nop
jg
fidivrl
mov
lret
fabs
pop
sbb
scas
cmc
mov
movsl
in
std
loop
mov
mov
dec
pop
dec
shrl
bound
in
into
inc
ret
das
dec
dec
pop
push
scas
stc
or
fildl
lahf
jecxz
shll
jbe
jl
xchg
daa
std
xchg
xor
mov
repnz
pop
repz
fcoml
or
lods
movsb
push
rcl
push
js
ss
xor
adcb
stos
cmp
push
xchg
sahf
pop
enter
shrb
lea
jg,pt
add
pop
imul
push
movsb
cmp
gs
pushf
ret
and
dec
cmc
aas
sbb
ret
cmpsb
loopne
sbb
test
jle
out
andb
or
sbbl
push
cs
pop
jp
sub
push
mov
ds
sti
mov
add
xchg
lods
or
repnz
sub
mov
pop
dec
sub
stc
mov
jne
repz
lea
adc
stos
inc
push
cmp
imul
add
mov
xor
mov
inc
and
pop
frstor
out
cmp
inc
inc
sbb
push
lret
je
or
add
clc
std
xchg
mov
jo
cltd
mov
daa
push
scas
jno
pop
mov
push
cli
sbb
aas
sbb
cmpsl
adc
mov
enter
or
dec
add
loop
jo
sti
mov
inc
lcall
je
fistpll
dec
inc
mov
cmp
aad
inc
pusha
dec
dec
hlt
push
add
addr16
iret
mov
add
bound
and
sub
stos
push
mov
ret
sti
and
es
cli
dec
ret
adc
fnstsw
sbb
jne
data16
addr16
pop
pop
xor
xchg
adcb
push
xchg
sbb
adc
cmp
mov
loopne
cmp
adc
aad
into
sbb
or
push
pop
inc
bound
xor
ja
cwtl
pusha
and
inc
fiaddl
lret
cwtd
cmp
imul
int3
mov
mov
inc
push
mov
xor
pop
ds
mov
cmp
cli
or
pop
stos
xchg
mov
fidivl
dec
fistpll
rcll
jo
add
xorb
sbb
mov
or
cs
pop
pop
int3
faddl
and
adc
lret
push
movsb
popa
pop
into
push
out
sub
scas
cmp
adc
mov
std
mov
bound
mov
push
push
int
xor
cmpsl
push
adc
xorl
cmpsb
out
mov
bound
mov
push
in
add
sub
dec
cmp
dec
loop
aaa
int3
sarb
std
xor
push
loopne
or
movb
repz
cwtl
add
pop
mov
push
movsl
push
loope
mov
add
sbb
cmpsb
stos
out
xchg
jge
cli
rcrb
jns
mov
pop
lock
push
clc
mov
ja
sarl
dec
xor
cli
and
dec
hlt
bound
jnp
stc
mov
sahf
outsl
sbb
dec
nop
shld
mov
loopne
push
pop
pop
add
loop
fsubs
cli
xchg
xor
shl
push
push
das
hlt
dec
movsl
add
fsubr
sbb
lds
fidivs
pop
mov
int3
js
push
cmp
cmp
mov
bound
aam
or
adc
xchg
xor
mov
jecxz
xchg
int3
add
lea
into
cmc
sub
clc
jnp
fcoms
jae
mov
cli
lret
xor
xor
inc
mov
or
and
test
push
jl
fsubr
mov
xchg
add
pop
aaa
dec
loopne
add
movsl
out
shl
push
lea
sub
arpl
dec
jae
je
outsl
sub
mov
pop
daa
add
ljmp
sbb
mov
xlat
sbb
or
imul
pop
loopne
xor
jo
sub
out
dec
mov
popf
xchg
stos
rcrl
and
in
pop
sti
test
rorb
lcall
cltd
sub
mov
test
pop
mov
jae
pop
cltd
mov
jb
mov
mov
and
xchg
test
shrb
movsl
pusha
mull
mov
jle
mov
loope
sub
dec
sti
mov
scas
cmp
rorb
dec
icebp
sbb
in
push
stos
cmp
mov
loopne
aaa
and
ss
mov
mov
pop
mov
loope
stos
rclb
xchg
or
add
jb
int3
xchg
mov
aas
outsl
adc
jmp
lcall
repnz
or
fidivrl
xchg
add
cmpsb
mov
pushf
pop
test
jno
aas
out
sub
ret
aas
sbb
cmpsl
aaa
mov
scas
stos
stos
xchg
fmull
fstpt
push
sub
mov
jbe
jne
aas
mov
jmp
loopne
prefetch
add
sub
imul
jp
lods
sbb
jbe
js
insl
stos
mov
cmpsb
cltd
xchg
jmp
mov
mov
lretw
push
push
cli
mov
outsl
mov
fistpl
shufps
aad
popa
shl
push
pushf
cmp
and
insl
nop
mov
scas
mov
cwtl
mov
lods
ss
stos
xchg
scas
aad
push
jmp
mull
out
cmp
sbb
fldpi
sub
push
sub
push
pop
lret
jae
mov
pop
lock
ja
popa
xchg
pop
ss
dec
or
call
or
cmp
push
and
sahf
roll
icebp
in
in
pusha
ss
cld
jns
jg
idivl
dec
sbb
data16
lock
cmc
xbegin
ljmp
daa
ja
arpl
sub
add
add
lahf
dec
rorl
test
sub
lea
ljmp
and
fldenv
jp
sub
popf
cwtl
lahf
and
mov
jo
jne
data16
ret
dec
xchg
push
cmp
inc
fbstp
sub
repz
std
add
test
imul
xor
cmp
subb
jge
sub
push
loop
sbbb
lds
in
push
sub
out
notl
cmp
dec
out
icebp
or
test
loop
stos
mov
sub
push
sbb
cli
dec
jne
push
mov
fcomp
mov
mov
mov
fwait
cmp
cmp
jb
imul
mov
notb
or
or
cli
enter
jnp
mov
pop
je
or
jbe
rcrl
fsubrs
pop
sahf
pusha
xor
mov
jp
mov
daa
cmpsl
cmp
mov
pop
lock
sbb
xlat
cmp
stc
inc
push
insl
jae
xchg
sub
mov
mov
mov
sbb
xor
dec
sahf
stc
xchg
enter
adc
jl
stos
inc
insb
filds
mov
adc
xor
dec
fbstp
dec
in
out
inc
push
out
leave
inc
test
int
add
cltd
test
dec
push
xchg
sbb
idivb
sbb
pop
mov
lret
out
arpl
pop
push
cmp
fidivl
pop
xor
es
sub
dec
nop
lea
pop
subb
and
cld
das
mov
lret
adc
mov
lea
lock
scas
insb
rorl
enter
pop
cmpsb
push
xor
sub
lret
sub
lcall
lods
in
push
dec
adc
sbb
and
aaa
test
jnp
xor
test
stc
inc
jnp
ljmp
dec
shrl
jle
pop
cli
or
mov
fisttps
xchg
jmp
pop
in
xor
cmp
lret
out
ljmp
cmp
es
xchg
pop
ds
arpl
dec
pop
adc
adc
repnz
es
sbb
aaa
outsb
dec
in
push
jmp
or
jle
pop
pop
imul
das
movb
push
popf
adc
cmp
or
xor
cld
in
pop
test
dec
push
xor
lods
stc
jae
sbb
and
mov
insl
fcomi
adc
jne
les
push
xchg
sub
cmc
hlt
outsb
add
pop
inc
stos
rclb
in
fptan
daa
or
scas
inc
inc
xchg
mov
jo
lods
mov
out
test
jb
rorb
cmp
jbe
les
xchg
sbb
add
mov
push
js
cmc
cmp
lods
orl
cmpsl
mov
loop
dec
and
sub
cmc
push
ljmp
cmpsl
xlat
test
test
mov
push
std
xlat
lods
daa
sub
dec
xor
fnstenv
sub
dec
mov
sarb
mov
nop
xchg
adc
aad
mov
sbb
es
sbb
dec
adc
mov
xor
shrl
xchg
lahf
or
push
push
dec
jb
daa
sbb
push
les
aam
in
inc
das
xor
and
xchg
cmp
fldl
shrl
push
sahf
enter
and
out
imul
or
push
mov
insl
sbb
sbb
sbbl
xchg
mov
add
stos
in
icebp
jae
pop
xchg
cmp
movsl
pop
dec
in
push
insb
ret
pop
pop
outsb
mov
das
jmp
add
dec
or
and
pop
daa
aad
daa
xor
dec
outsl
mov
and
nop
mov
sbb
call
pop
add
pop
dec
adc
jo
jmp
or
addl
or
mov
clc
popl
mov
test
out
frstor
push
int3
pop
pop
or
or
xchg
dec
pop
ja
aaa
or
push
push
dec
sub
push
das
movsb
inc
je
ficomps
aam
cmp
add
add
mov
mov
leave
mov
icebp
mov
pop
jl
add
mov
cmp
leave
jmp
xor
testl
pop
jbe
dec
sbb
repnz
adc
xor
ret
rclb
pop
cmp
cwtl
loop
or
mov
sub
jo
mov
and
rcr
loop
jmp
call
or
adc
and
xor
or
insl
frstor
in
repnz
inc
and
js
jp
sub
inc
stos
pop
dec
sub
add
lock
popf
fidivrs
into
out
mov
cmp
hlt
clc
les
call
push
popa
xchg
adc
cmp
mov
gs
sub
add
pop
jne
sub
pop
jecxz
iret
mov
jmp
jle
lods
mov
mov
adc
jecxz
sub
push
lods
pop
lcall
movsb
clc
pop
leave
in
adc
clc
fisubrs
cmp
loope
mov
lea
in
ret
pop
lods
fbstp
ja
mov
lock
push
rcr
cmpsl
push
mov
jns
stos
mov
dec
mov
mov
test
ret
pop
shlb
lds
jbe
sahf
das
inc
rol
cmpsb
add
jb,pn
sbb
movsl
cmp
es
fcmovb
mov
adc
and
call
scas
sti
bound
int3
scas
insl
cmp
jnp
mov
adc
fistps
repnz
sbb
add
jo
and
mul
mov
inc
or
sarb
xor
add
lock
lock
or
add
mov
xor
jns
subl
xchg
mov
loope
mov
stos
sub
inc
ret
mov
or
xor
pop
pop
ds
imull
fiadds
int3
iret
data16
loop
sahf
int3
cwtl
shlb
arpl
mov
test
test
sub
pop
and
push
call
insb
insb
scas
push
mov
scas
xchg
xchg
aad
xor
jb
sub
aad
jecxz
stos
dec
sbb
je
inc
mov
cmp
lds
pop
ret
xchg
mov
sti
fwait
or
lods
push
mov
add
int
add
push
test
orl
xchg
mov
jns
lods
addr16
add
pop
and
popa
push
es
cld
fwait
dec
call
stos
sub
jae
sti
lods
ljmp
mov
mov
sarb
and
pop
dec
sahf
pop
daa
jl
adc
mov
jae
mov
and
xchg
jbe
ljmp
mov
nop
cmpl
dec
pop
out
push
pop
add
mov
mov
popf
pop
lods
roll
fmuls
mov
sub
mov
mov
jge
sub
push
dec
fwait
xor
repnz
sahf
mov
lods
cmp
pop
and
rorb
lods
ss
xchg
pop
sahf
enter
das
in
call
int
xor
sahf
bound
call
int
jno
sahf
mov
jg
jg
jmp
pop
sahf
cltd
or
jg
mov
pop
popf
cmp
jmp
iret
cwtl
aad
mov
mov
inc
insb
ja
das
mov
push
add
adc
mov
stc
xchg
decb
rclb
xor
xchg
insb
xchg
pop
push
icebp
add
iret
cmp
add
xor
lcall
xchg
outsb
xor
dec
sub
jle
and
dec
loope
mov
mov
in
sbb
cld
mov
inc
xor
or
mov
lret
fsubrs
bound
aad
xor
lcall
lods
inc
popf
push
push
shlb
addl
inc
mov
and
shrl
pop
bswap
nop
dec
in
loop
pop
sbb
call
and
imul
ret
es
xlat
rcrl
dec
ss
pop
cmp
push
or
outsl
shrb
mov
pop
jle
mov
pop
xor
mov
inc
into
fdivp
mov
in
adc
adc
test
insb
outsb
adc
jg
and
jae
add
jno
imul
jo
cmp
inc
mov
mov
ja
shr
xchg
inc
push
mov
loop
es
test
push
stc
adc
sbb
aaa
mov
push
xchg
lods
inc
aad
js
sbb
mov
jb
adc
and
fcmovbe
dec
xlat
cld
jg
ret
mov
mov
mov
aaa
fisttpl
inc
cmp
outsl
push
aas
add
mov
ja
and
insl
pop
push
and
shrl
loopne
cltd
adc
dec
rolb
mov
in
xchg
decl
out
stos
push
pop
cmovg
fisttps
mov
dec
mov
in
xchg
and
push
sbb
enter
sbb
pushf
jbe
nop
pop
dec
cmp
mov
out
cmp
dec
int3
dec
in
mov
cld
iret
shrl
pop
xor
je
int
pop
mul
push
xor
jle
cwtl
mov
out
or
cmp
xchg
scas
add
hlt
shr
mov
lock
sbb
cwtl
jecxz
rcll
xchg
mov
por
stos
rclb
shrl
xor
pop
inc
push
push
imul
divb
pop
mov
daa
movsl
sti
mov
xchg
insb
or
and
lock
adc
andb
xor
add
or
shll
mov
jbe
cmpsl
negl
ret
mov
sbb
mov
or
ret
out
sub
cmp
pop
loope
aad
xor
mov
cmp
inc
xor
jb
or
sbb
dec
and
add
pop
ja
ss
mov
xchg
jb
xchg
orl
xchg
push
les
add
pop
sbbl
in
gs
aad
ror
pop
test
add
xchg
aas
stos
jno
sub
mov
in
or
sub
ja
cmp
lcall
repnz
sbb
mov
cmp
in
mov
aad
loope
rclb
dec
dec
fcmove
jmp
or
inc
pop
mov
push
cmp
mov
pop
sbbl
loope
cmc
scas
out
adcb
mov
jb
shll
mov
jecxz
inc
fistps
jmp
sub
in
mov
dec
movsl
pop
push
pop
cmpsb
cmp
test
fadds
fsubrl
insb
popa
sub
cmp
jbe
cld
sbb
sub
cli
or
lahf
and
out
cmp
xor
cmp
add
adc
cmp
cmpsb
icebp
adc
sub
sub
add
sub
into
pop
roll
lcall
lods
adc
ja
imull
enter
mov
imul
in
mov
pusha
dec
add
addr16
rcrl
xor
push
xor
dec
mov
and
inc
cmp
sti
pop
ret
sbb
cmp
int3
insb
shrb
mov
dec
pop
adc
add
inc
popf
xchg
push
call
add
pop
sarb
adc
dec
adc
push
test
sub
pop
jmp
adc
xor
xchg
jg
fbstp
rdtsc
jle
hlt
sub
andl
test
inc
orb
mov
imul
inc
push
cmp
push
or
jnp
sbb
inc
push
or
or
dec
fsubrp
mov
xchg
test
loope
in
call
sub
pop
jo
xchg
in
dec
add
xchg
or
add
mov
idivb
adc
cmc
push
xchg
in
loop
sub
testb
pop
cltd
xor
mov
sbb
or
int
ss
cltd
add
push
sub
push
xor
cltd
lods
inc
push
and
or
adc
mov
lods
pop
adc
aaa
mov
xor
js
xor
cmp
test
cmp
addr16
lods
or
cmp
cmp
jecxz
xchg
mov
cltd
add
mov
data16
or
xchg
pop
adc
dec
cmpsl
lock
or
ret
mov
push
out
clc
aam
xlat
lods
cmc
mov
jle
sub
hlt
lahf
stos
inc
rcll
xor
and
mov
add
icebp
int
and
pop
out
cld
inc
fwait
jbe
push
mov
int3
jp
sub
iret
mov
push
adc
jb
mov
cmpsb
mov
popa
aas
test
xor
ss
xor
call
push
clc
adcl
das
rcl
stos
lret
dec
pop
ljmp
jb
inc
pop
inc
sub
sbb
push
in
fsubrs
mov
into
jne
repnz
or
push
out
outsb
cmpsb
fwait
outsb
adc
sbb
sahf
push
mov
add
lods
mov
mov
xchg
sub
jbe
sub
dec
and
out
and
pop
jmp
fisubrs
mov
repnz
xchg
inc
jp
hlt
cmpsb
or
mov
mov
mov
dec
arpl
add
call
je
push
mov
mov
lods
push
inc
sbb
and
adcb
orb
aam
mov
aaa
mov
sti
icebp
push
lcall
fstpl
out
add
test
lea
adc
andl
xor
in
inc
mov
dec
loope
and
inc
or
imul
data16
lret
popa
cmpsb
push
mov
adc
xchg
dec
repnz
cmp
mov
lret
repz
lret
cmp
pop
mov
lahf
es
aad
jbe
in
push
clc
stc
nop
sub
pop
pop
or
psubd
aas
pop
sbb
loope
test
cmp
insb
dec
mov
insb
shlb
lahf
ss
iret
dec
sbb
inc
mov
in
js
loop
ret
and
add
scas
xchg
push
add
and
dec
and
scas
xor
ja
jno
lahf
jecxz
sbb
pushf
cmpsb
out
inc
cld
mov
testl
xchg
and
pop
lods
outsl
sbb
xor
xchg
lret
jnp
popf
lods
push
sub
int
aas
jg
jl
iret
pop
mov
adc
xor
cmpsb
inc
rcrb
lahf
inc
mov
fwait
sub
lods
call
int
inc
divl
cmp
in
xchg
inc
scas
fdivp
cmp
gs
sub
push
mov
testb
pusha
dec
bound
dec
pop
mov
add
repnz
and
jp
roll
push
pushf
push
or
adc
push
and
loop
aad
cmp
mov
sti
xchg
andb
addr16
cwtl
pop
fwait
adc
or
jae
xor
fstl
out
pop
mov
ja
stc
jnp
inc
inc
cltd
pushf
sbbl
cmp
notb
mov
lcall
jmp
mov
scas
jne
lods
iret
shlb
inc
cmp
pop
xor
jecxz
inc
and
add
mov
adc
out
xchg
xchg
mov
mov
mov
mov
add
scas
ss
dec
sbb
mov
pop
popa
and
cmp
lret
adc
xlat
jmp
pop
es
std
lods
cmp
push
je
lahf
lods
inc
shl
push
repz
cmp
adc
mov
mov
xchg
outsl
adc
shrl
cltd
test
sbb
jge
jb
cmpsl
mov
insb
std
aam
push
mov
or
daa
mov
push
mov
dec
movsl
js
subb
pop
out
in
cmpl
stc
fisttpll
cmp
ja
in
xchg
iret
decb
rorl
fdivs
pop
push
shr
push
pop
pop
bnd
stc
shl
mov
lcall
cmc
mov
or
test
rclb
cmp
in
and
push
jge
int3
scas
jno
scas
jnp
cmpsb
ret
leave
lock
sub
or
orl
mov
cmpsl
lods
xlat
repz
adc
test
add
out
or
push
sbb
cs
dec
in
dec
mov
mov
push
loopne
fsubr
lock
xor
pushf
ret
inc
push
inc
popa
dec
out
jge
xchg
xlat
stos
inc
mov
push
jmp
jno
not
cmp
sbb
push
nop
jae
repnz
lahf
sub
cli
sahf
xchg
test
hlt
outsl
push
rorb
sub
jo
push
fidivl
mov
dec
push
loop
xchg
notb
sbb
jb
fsubrs
cwtl
cwtl
js
stc
in
fstl
rorb
ds
push
mov
imul
testl
sub
sahf
psllw
out
cmp
in
test
stos
aad
or
insb
aaa
push
fs
sbb
andb
mov
sub
fcoms
iret
xor
and
pop
push
inc
stos
mov
mov
sbb
add
flds
pusha
xchg
sbb
mov
pushf
cmp
ljmp
cmp
push
fwait
and
and
mov
shll
aas
adc
xor
and
aam
push
mov
negb
xlat
enter
cmpsb
adc
sbb
cmp
in
cld
cwtl
dec
xor
jge
mov
negb
cltd
loop
push
fnstsw
pop
cmpsb
jae
scas
cmp
sbb
xchg
jmp
cmp
jmp
xchg
jmp
adc
out
push
imul
insb
mov
push
or
sbb
bndldx
repz
sbb
insl
pop
xor
outsl
pop
aad
push
push
inc
clc
test
add
lret
xor
arpl
ds
ficoml
fistl
in
inc
ja
cmp
mov
adc
dec
pop
push
xor
xor
fs
imul
mov
adc
inc
xchg
sub
ret
lcall
jo
inc
arpl
add
jb
xchg
hlt
js
ss
sub
shlb
fldt
mov
xor
mov
gs
dec
push
test
mov
xchg
out
xchg
dec
push
mov
mov
or
adc
add
std
mov
mov
jne
je
mov
xor
clc
or
lahf
push
ss
xor
sti
xchg
and
xchg
pushf
aas
jg
cmc
or
xchg
xchg
shrl
cmpsl
sbb
in
push
push
cmp
out
movsb
aam
flds
mov
movsl
ja
push
jmp
fdiv
xor
cmpsl
ret
pop
push
xor
hlt
mov
jmp
dec
push
out
fwait
cmpsl
and
bound
and
je
sti
nop
mov
pop
mov
int
fisubrs
and
loope
outsb
jl
aas
ret
pop
add
es
pusha
and
jmp
dec
dec
mov
sti
jns
dec
mov
xchg
mov
shlb
ja
mov
ljmp
cmp
movsb
push
rolb
push
cmp
fisttpll
fisubrl
aam
sub
out
stos
call
xchg
inc
js
mov
popa
xor
arpl
leave
ljmp
mov
test
loop
mov
loopne
mov
sti
inc
jecxz
cmp
in
push
jmp
icebp
imul
jecxz
shl
adc
out
scas
jnp
mov
cmp
jmp
test
fsub
dec
stc
mov
loopne
test
std
lds
push
inc
add
push
ja
dec
mov
dec
in
mov
lahf
andl
ret
icebp
adc
sbb
adc
cmp
loopne
icebp
mov
in
dec
or
arpl
jle
cmpsb
pop
ds
popf
jnp
std
jp
adc
movsb
fdivl
shrl
sbb
mov
pushf
inc
adc
cmpsb
in
push
cmp
push
adc
xor
mov
gs
mov
inc
mov
nop
out
bswap
jg
je
and
cmp
out
add
icebp
cmp
mov
sub
fildl
jno
data16
pop
ret
sahf
pop
jg
aad
and
cmp
clc
enter
cmpsl
adc
add
adc
mov
enter
xchg
sbb
scas
sub
les
mov
rol
in
mov
add
adc
fdivr
jp,pt
out
xor
mov
pop
mov
jle
xchg
fwait
mov
sbb
outsb
mov
cmp
fs
es
loopne
sbb
divb
in
add
and
pavgw
push
dec
hlt
jae
cmp
aad
xor
xchg
xchg
idiv
mov
or
lock
jg
or
add
mov
out
adc
lahf
jle
test
or
fdivs
fdivrl
cmovs
and
movsl
xchg
pop
es
das
mov
iret
adc
sub
xchg
sub
or
stos
jbe
mov
dec
jo
sti
mov
cmp
adcl
movsb
repnz
cmp
sub
mov
xlat
and
cmp
and
leave
pop
incb
inc
je
sbb
jo
paddq
cwtl
je
in
lahf
push
dec
add
jbe
xchg
mov
sbb
xor
ret
enter
mov
iret
into
in
pop
jp
dec
pop
adc
sbb
adc
je
mov
fdiv
inc
or
adc
call
and
ss
mov
int3
or
in
mov
insb
bound
stc
inc
add
jne
bound
mov
sub
in
shl
or
xchg
pop
arpl
inc
repnz
sub
add
dec
loope
cld
xor
bnd
or
popl
pop
jl
cmp
out
sbb
hlt
popa
movsb
sti
adc
sbb
sub
gs
ja
stos
cmp
adc
mov
out
jno
jmp
push
dec
loope
push
in
or
stc
popf
push
xlat
adc
push
pop
sub
pop
jg
in
and
sbb
pop
xor
xor
testb
jl
inc
cmpsl
lea
add
sub
adc
jge
mov
int
jns
rol
cmc
mov
ret
leave
jl
out
pusha
enter
test
xchg
and
push
and
fwait
push
ljmp
shl
adc
mov
sub
xor
mov
dec
pop
fwait
jne
mov
sbb
test
outsl
pop
loop
mov
jl
lss
gs
pop
aam
loope
lret
sub
aas
mov
and
xchg
enter
fucomip
pushf
mov
pop
cs
mov
incl
push
jno
dec
mov
les
jecxz
add
xor
icebp
dec
popf
push
outsb
int
iret
out
bound
cmpsl
aad
push
add
xlat
cmpsl
jo
lcall
sub
sub
insl
test
cmp
fdivl
cmpsb
mov
add
mov
jnp
jbe
sbb
lods
divl
mov
lods
mov
ret
das
into
cmp
arpl
lds
inc
mov
or
add
or
cmc
rcl
inc
or
jb
into
lret
lret
repz
adc
inc
add
push
insb
int
dec
xorb
cmpsl
lcall
or
mov
mov
adc
out
or
lahf
and
nop
jmp
ds
into
dec
mov
mov
ret
insl
dec
and
sbb
outsb
sbb
popf
push
fildll
into
mov
sbb
out
pop
nop
das
nop
out
mov
shlb
jp
or
mov
jnp
addb
mov
mov
inc
mov
aam
mov
fidivl
out
insl
sub
xor
mov
sub
add
mov
and
bound
loopne
jne
cmp
cwtl
fstp
add
add
call
add
lret
push
dec
jecxz
js
aaa
stos
hlt
push
test
lcall
cs
sub
inc
mov
popa
pop
xchg
push
mov
mov
jl
dec
adc
jno
or
ret
jl
xchg
arpl
mov
mov
sbb
pusha
sub
cmc
mov
dec
out
dec
adc
mulb
lds
jg
cmp
pop
sti
pop
xorl
test
and
cmp
push
rcrl
and
sbb
pop
sub
rcrl
mov
inc
filds
mov
pop
imulb
sbb
jle
pop
cmp
aaa
rcrl
imul
je
arpl
sbb
push
cmp
sub
dec
mov
insb
cmp
or
sub
xor
sub
jne
aam
pop
popf
lock
jae
cmpsb
sbb
and
pop
cmc
mov
pop
mov
add
leave
in
sarb
movsl
dec
mov
xchg
adc
adc
int3
lret
mov
lds
sub
jecxz
or
movsb
repnz
test
and
inc
mov
push
inc
and
xorb
dec
inc
fnstsw
fdivs
les
and
mov
xor
or
lret
xchg
ljmp
into
cmp
dec
daa
scas
inc
sbb
xor
scas
and
out
pop
pop
loope
mov
inc
iret
scas
call
push
loopne
dec
icebp
in
xlat
loope
push
push
std
mov
stc
rorl
std
pop
sub
mov
js
fldl2t
or
dec
sub
nop
cmp
dec
pop
aad
addr16
mov
push
push
jmp
das
mov
pop
adc
mov
jbe
mov
cmp
lock
imul
loope
xor
push
adc
andl
sti
cmpb
and
outsl
mov
test
rclb
xchg
nop
pop
jecxz
ret
jge
lds
mov
iret
int3
sub
std
lods
push
fcmovnbe
adc
adc
arpl
pop
or
dec
movsb
cmpsb
clc
xor
movhps
mov
into
out
mov
mov
insl
aam
fldt
jp
inc
mov
dec
into
mov
ret
les
in
enter
ficomps
push
lods
push
xchg
cmc
mov
cmp
into
outsb
das
shrl
dec
popa
push
jge
lock
mov
je
cltd
mov
cltd
std
push
imul
jne
adcb
xchg
jge
roll
sbb
pushf
xlat
xchg
pop
add
fisubrs
divl
stc
je
dec
sub
sub
cmp
and
and
fwait
stos
xor
mov
inc
cli
or
cltd
mov
insl
jge
mov
shrb
sbb
aam
in
dec
push
dec
mov
mov
cli
jns
shrl
lods
sub
cli
xchg
add
leave
test
push
icebp
push
mov
pop
push
xchg
push
lock
jecxz
inc
stc
int
inc
insb
inc
aaa
push
jbe
dec
pop
ss
and
filds
scas
dec
ja
pop
in
mov
xchg
adc
das
jae
mov
mov
xor
dec
cmp
jge
jmp
cltd
nop
push
cli
xchg
outsb
into
std
les
addr16
pop
sub
cmp
xchg
sub
addr16
adc
or
ja
je
cmpsl
pop
iret
gs
loop
jmp
imul
push
push
mov
push
es
sti
lods
icebp
xchg
arpl
int
cli
push
xor
push
or
ret
int
dec
xor
mov
and
pop
pop
add
addl
pop
in
inc
sbb
pop
outsb
imul
enter
pop
les
dec
int3
mov
push
inc
in
movsb
out
sbb
cmc
push
push
pop
loop
mov
fwait
and
sbb
mov
sbb
cmpsb
hlt
xor
pop
adc
in
jle
xchg
or
in
sub
mov
jb
push
inc
inc
jb
cmp
scas
pop
xor
mov
xchg
int
mov
int3
ret
loop
and
dec
jmp
adc
cmp
jecxz
les
testb
mov
lahf
jg
xchg
fmull
jmp
cld
adcl
and
popf
out
mov
ffreep
popf
and
pop
outsl
and
cmp
xor
mov
in
lock
mov
or
xor
dec
mov
sbbb
mov
mov
mov
xchg
pop
mov
test
jb
rol
jmp
rcrb
addr16
out
jge
aaa
mov
sub
nop
lcall
jno
push
faddp
xchg
clc
cmp
rorb
into
cmp
add
mov
cmp
popf
adcb
mov
ljmp
adc
or
push
adc
or
push
or
dec
repnz
pop
repz
jp
ret
sbb
xchg
shll
xchg
loop
movsl
div
fcomps
mov
pop
cmpsb
adc
idivl
mov
add
fisttpl
mov
repnz
clc
mov
cmp
sarb
pop
and
scas
stc
pop
nopl
mov
cli
add
mov
cmp
loope
dec
mov
push
sahf
or
inc
sub
push
shll
pop
add
push
jb
push
sbb
and
repnz
and
and
fisubl
dec
sbb
loope
hlt
sub
xchg
lea
lret
xchg
cli
ss
out
push
jnp
sub
xchg
sub
inc
and
inc
scas
jo
adc
out
mov
jbe
mov
push
stos
jmp
out
adc
pop
mov
rcrl
aaa
cli
push
imul
popf
pop
ljmp
ret
push
inc
cwtl
sub
pop
pop
mov
or
cltd
sub
jl
xchg
xor
or
dec
dec
or
jge
les
mov
pop
out
xor
xchg
pop
in
xchg
fists
test
test
mov
and
lret
bound
sbb
lods
imul
cmp
insb
enter
mov
adc
clc
dec
imul
sbb
sbb
or
fwait
sub
sbbb
insb
jne
add
mov
loopne
rorl
dec
arpl
pop
push
mov
pop
mul
dec
mov
daa
xor
stos
dec
push
pop
sahf
aas
insb
xor
loope
jg
cmp
stos
cs
negb
imul
rcll
popf
stc
mov
sub
cmp
call
movsb
dec
in
lret
jbe
dec
mov
lcall
adc
insb
add
es
pop
lret
inc
push
data16
xlat
outsb
mov
hlt
pop
cmc
and
sti
xchg
sub
cmp
xchg
stos
mov
push
js
dec
or
sahf
dec
outsb
add
jno
sbbl
mov
dec
loope
rolb
nop
pop
push
movsl
cmp
mov
jge
lods
jbe
filds
in
inc
jns
xor
inc
xlat
jg
lds
scas
inc
fisubrs
int3
arpl
push
jg
sbbl
xchg
and
jae
out
ficoml
cmp
mov
popf
out
ja
jb
adc
cmpsb
sti
ja
outsb
cmpsb
xor
cmc
mov
mov
jbe
push
cmp
dec
iret
std
xchg
fstl
push
and
push
das
je
pop
js
fldcw
jl
inc
scas
mov
into
gs
pop
insl
add
ud1
fcomi
mov
cs
in
imul
or
sbb
mov
pop
repz
lret
hlt
in
ss
push
ljmp
jo
mov
ja
int
repnz
lret
decl
test
xchg
inc
fcmovnb
bound
stc
sbb
sbbl
jo
or
mov
jae
repz
and
ss
inc
xchg
sub
push
jmp
lahf
mov
rcr
xor
push
inc
or
pusha
xchg
sub
les
push
sub
dec
xchg
sub
ret
clc
lods
lret
fimuls
and
jg
inc
fmuls
cmpsl
out
push
call
xorb
push
mov
pop
mov
fsubp
jl
aaa
ret
pop
imul
loope
mov
fscale
xchg
pmaxub
mov
cs
mov
fs
sub
mov
xor
stos
mov
addb
inc
ficomps
mov
pop
jle
lret
add
aam
into
add
sub
dec
and
ss
outsl
add
cmpsb
mov
inc
adc
jle
adc
inc
gs
xchg
sbb
call
or
outsl
inc
add
fidivs
bound
push
int
xchg
xchg
sub
add
repz
push
call
js
or
lret
repnz
daa
in
add
push
lea
cmp
shrb
inc
subl
mov
xchg
daa
mov
fadds
sub
xor
push
repz
cmpsb
imul
jbe
mov
lds
testb
xor
xchg
mov
mov
pushf
jns
pop
mov
mov
aad
stc
dec
sbb
xchg
pop
mov
popa
clc
clc
dec
inc
fidivrs
or
aam
add
cli
test
adc
popf
xor
int3
jbe
add
push
xchg
popf
xor
sahf
stc
nop
iret
rorb
out
xchg
cli
xchg
dec
sahf
xsha1
cmpsb
into
fcomps
dec
xchg
cmp
add
fistps
ljmp
mov
sub
push
cmpsl
mov
mov
aas
xchg
add
sbb
sbb
push
push
mov
jmp
jge
push
inc
fdivl
ljmp
lcall
repnz
arpl
rclb
mov
stos
mov
lods
inc
cwtl
add
xor
dec
loop
insb
dec
loop
cli
lds
fwait
xor
jb
inc
mov
jg
cwtl
lods
mulb
sbb
js
mov
es
xchg
jns
mov
sbb
jp,pn
sbb
repnz
and
jle
std
jno
xor
cmc
mov
outsb
xchg
lahf
add
aad
xchg
adc
shrl
add
adc
out
adc
xor
xor
cmpsl
fidivrl
or
add
mov
jle
cmp
js
inc
lods
leave
jo
cld
jnp
fisubrl
jg
and
jp
stos
stos
xor
xchg
bound
inc
scas
mov
jmp
jns
inc
lods
xor
int
jl
push
mov
test
out
lea
xor
divb
rcrw
ret
xorb
mov
pop
mov
sub
xchg
pop
adcl
add
xchg
pop
arpl
inc
test
mov
jno
and
and
lock
js
pop
lods
and
leave
push
jns
sbb
and
sbb
xchg
sub
int
xchg
jle
ja
mov
and
fidivs
or
aad
and
cltd
push
pusha
pop
jae
je
cmpsb
mov
pmulhw
scas
xabort
cmp
dec
in
pop
xchg
sub
imul
faddp
xchg
sub
sub
add
sahf
mov
aad
ljmp
jno
dec
push
call
xchg
sahf
insl
add
mov
imul
add
shlb
inc
mov
je
jg
adcl
or
in
and
in
inc
imul
jnp
dec
loopne
mov
call
and
nop
jbe
out
xchg
pop
scas
les
dec
loopne
repnz
jb
pop
mov
xchg
fnstenv
sahf
mov
int3
ljmp
sbb
xchg
ja
sub
pusha
into
mov
les
mov
add
adc
iret
data16
jns
sub
xor
cli
cmp
das
mov
pop
lock
fidivs
scas
add
nop
std
and
jmp
add
xor
jne
loop
xchg
cmpsl
cmc
mov
xor
push
adcl
pusha
dec
loope
rcrb
daa
lock
fimuls
fsubrs
arpl
xchg
xlat
fcomip
or
sbbb
jnp
mov
sbb
jl
lods
mov
fisubrl
daa
mov
and
dec
rclb
xchg
sub
xchg
dec
pop
adc
dec
inc
lock
fs
xor
mov
adc
aas
hlt
ds
es
scas
xchg
inc
leave
loopne
mov
inc
in
js
iret
push
aad
aas
lock
mov
xchg
inc
ss
je
pop
mov
xchg
ds
movb
gs
fnstenv
push
in
addl
gs
xchg
sub
aad
out
push
mov
mov
xchg
cs
movsl
shrl
lea
fwait
xor
pop
xor
nop
and
push
mov
in
ret
repz
inc
fldenv
add
test
repz
adc
cwtl
das
inc
cmp
insl
fs
xchg
mov
push
mov
fiadds
popf
or
xchg
xor
push
mov
cmpsl
push
push
pop
stos
insl
mov
push
out
xor
adc
add
add
jecxz
and
repz
sub
jbe
aam
jmp
dec
ror
fiaddl
and
ficomps
mov
test
xor
sahf
mov
enter
cmpsl
pop
lock
fidivrl
lock
jmp
in
test
int
or
xchg
enter
mov
testl
jp
inc
aas
and
sbb
ja
orb
jg
pop
rclb
pop
and
lds
mov
out
fs
push
xor
fdivrs
jg
sahf
jl
pop
mov
xor
int3
orb
pusha
adc
rcrl
inc
fiaddl
cmp
adc
or
mov
repz
sarl
fstl
or
pushf
push
or
movsl
int3
arpl
fs
xor
xchg
pop
fildl
add
cmpsb
xor
dec
cmp
jge
insl
inc
pop
testb
and
orb
jnp
inc
scas
push
inc
mov
mov
adc
and
je
push
test
out
xor
cmpsl
cmp
lcall
xchg
jo
mov
adc
inc
popa
dec
mov
push
cs
jle
or
dec
pop
and
popa
cmp
mov
orb
xor
test
dec
adc
xchg
pop
es
mov
in
inc
xlat
push
shrb
repnz
cmp
mov
or
in
sbb
movsl
jmp
scas
sbb
pop
jb
unpcklps
hlt
insl
cmp
pop
jp
daa
mov
test
bound
mov
in
hlt
das
mov
sti
add
mov
in
in
out
sub
mov
cld
sbb
lds
lock
and
in
xchg
dec
adc
stos
jne
loope
rol
mov
stos
mov
lods
xchg
and
push
in
es
sahf
push
inc
leave
aas
arpl
lods
popa
inc
fidivl
inc
dec
mov
adc
push
shrl
ja
fs
sub
add
xchg
xor
sbb
out
mov
ljmp
mov
cltd
out
hlt
cmpsl
ds
push
mov
adcl
subl
pop
mov
xchg
mov
xor
or
es
dec
bound
fnstsw
xor
inc
js
cmp
push
cmp
outsl
mov
or
imul
out
mov
hlt
adc
andb
sbb
sub
jnp
sbb
dec
divb
jo
sbb
xchg
ss
popa
lea
lods
data16
test
sub
mov
insl
sarb
cmp
cltd
sbb
dec
mov
lret
adc
stos
sarb
xor
inc
mov
repz
cwtl
aad
cmp
cwtl
mov
push
sub
dec
flds
outsb
divl
fidivs
xor
add
cmp
jb
test
cmp
cmc
sahf
rorb
cmp
add
adc
sti
sub
dec
in
sub
movsl
out
and
jecxz
cmp
xchg
mov
lock
pop
imul
xchg
fwait
mov
clc
inc
fsubrl
loopne
fwait
in
in
jno
outsl
add
lock
push
mov
lret
ljmp
jb
pushf
xor
pop
stc
xor
clc
sub
jmp
pop
int3
stc
mov
enter
push
jmp
dec
shll
cld
int3
xor
xlat
mov
pop
mov
adc
stc
jae
pop
les
std
sub
cltd
push
push
enter
clc
mov
lock
mov
cld
sub
sbb
push
jle
in
and
hlt
push
lods
xchg
inc
shlb
mov
cli
loop
enter
pop
jmp
les
aaa
les
div
xchg
js
mov
xchg
mov
mov
lds
dec
pusha
rclb
stos
call
push
mov
popf
call
xchg
sub
xlat
xchg
mov
mov
test
out
out
wbinvd
pop
shrl
cli
sbb
pop
pop
dec
fimuls
inc
mov
pusha
pop
scas
bound
test
mov
out
jl
mov
fidivrs
in
dec
in
mov
xchg
ja
addr16
cmp
mov
pusha
inc
cmpl
pop
and
xchg
test
ljmp
mov
xchg
xchg
and
shl
push
test
mov
mov
rcrb
inc
fdivl
movsl
pop
aaa
aas
and
mov
in
cmp
mov
out
pop
stos
and
inc
addr16
inc
inc
xor
push
inc
xor
inc
inc
cmp
pop
dec
in
popa
pop
or
jno
and
jnp
lahf
arpl
cmp
lea
xor
cmp
subb
xor
pop
in
jg
mov
adc
out
inc
insb
add
add
and
sub
dec
pop
iret
cmp
aas
cmp
loop
je
shll
xchg
repz
adc
jne
divl
add
and
sbb
sbb
popf
xor
ds
adc
aad
mov
dec
hlt
testb
and
sbb
jne
mov
js
pop
cld
aas
pusha
ffree
xor
jge
jecxz
cld
cmp
cmp
mov
ficoml
adc
pop
jecxz
or
xor
mov
insl
loop
mov
dec
dec
loopne
mov
in
sub
adc
lods
rolb
sbb
rorl
xor
call
in
jmp
lods
into
cmp
imul
cmp
pop
sbb
sbb
ljmp
inc
add
pop
int
out
cs
inc
mov
xor
push
mov
push
pusha
xlat
ds
jle
jg
xor
dec
jbe
mov
push
sbb
outsl
fwait
aas
sub
pop
pop
popa
loop
pop
jge
or
cmp
sbb
cmp
and
aam
popf
jae
jne
mov
sarb
loope
test
xchg
jo
out
scas
pop
mov
fcmovb
cmp
imul
xor
shrb
sub
lret
push
out
int3
inc
jo
mov
push
subb
push
clc
cli
stc
daa
out
mov
rclb
jbe
dec
test
mov
mov
fmuls
add
movsl
push
iret
das
enter
stos
pop
mulb
ret
dec
jle
mov
xchg
pop
mov
dec
movsl
cmp
hlt
sub
outsl
push
mov
xor
cmc
insl
imull
mov
adc
hlt
ficoms
xor
cmpsb
push
ljmp
mov
addl
aaa
into
mov
adc
enter
push
lret
sbb
sbbb
pop
aad
sbb
dec
push
shrb
add
sbb
les
adc
repnz
push
nop
daa
mov
or
stos
mov
mov
cli
out
and
sub
fdivl
ljmp
ja
and
mov
sbb
add
loope
lea
shr
mov
or
pop
lods
cmp
in
fs
adc
ljmp
sti
std
das
xchg
add
insb
mov
xchg
shrl
ja
fsubp
in
sbb
mov
add
sub
dec
mov
cmp
dec
dec
cmp
das
ds
stos
dec
or
clc
xchg
sub
and
or
imul
les
xchg
pusha
or
aas
add
jecxz
ja
xor
sub
pushf
ss
js
push
add
mov
nop
jle
sbb
les
lcall
shrb
xor
xchg
jl
subb
pop
mov
adc
push
fidivl
sbb
pop
jecxz
test
dec
clc
push
sarl
sbb
mov
fsubrs
sbb
lea
xor
jle
push
jmp
cmp
call
add
je
repz
cmp
insl
ljmp
jne
mov
add
xchg
popf
mov
pop
int
cwtl
subl
dec
xchg
orb
jg
sbb
sbb
arpl
sti
je
lret
cmp
pop
gs
cmp
ficoml
mov
mov
cltd
fs
shlb
imul
jbe
and
dec
lret
aad
cmc
ljmp
repz
sbb
loop
mov
add
adc
adc
mov
lahf
mov
sbb
leave
mov
cmp
mov
fisubrl
and
jb
push
mulb
xchg
ds
add
push
mov
rcr
mov
cmpsl
pop
rcll
xchg
sub
xchg
outsb
mov
sub
nop
jnp
arpl
in
out
add
mov
adc
lret
lds
inc
ret
dec
mov
add
push
mov
test
lods
inc
hlt
ds
les
push
shll
jmp
cmpsl
sub
icebp
pop
xor
xor
or
jmp
cli
mov
es
sbb
fisubl
repnz
in
adc
pop
adc
sbb
out
stos
fdivr
xor
lock
and
mov
sti
push
sub
imul
mov
inc
cltd
xchg
xlat
mov
xchg
and
xchg
xchg
ja
roll
mov
push
cmp
test
shlb
push
push
pop
inc
sub
addr16
sub
aaa
cmp
test
ljmp
sbb
dec
mov
lock
or
daa
push
mov
jb
jb
das
mov
enter
lret
cmp
out
sbb
and
dec
addl
mov
mov
andb
test
jne
movsb
xor
inc
sub
push
adc
test
fistps
aaa
lock
outsl
lret
jmp
mov
subb
add
fcmovne
push
in
mov
mov
jno
clc
std
inc
rcrl
cmpsl
imul
fisttps
das
leave
jbe
xchg
push
lret
das
push
sbb
dec
sahf
inc
fldl
hlt
lods
jne
pop
mov
inc
sarb
pop
cmp
lods
jo
insl
mov
pop
fstpl
push
imul
shrb
into
mov
das
add
cltd
lea
loope
sub
push
cmpsl
dec
mov
jno
loopne
mov
cli
mov
lock
pop
fistl
add
ljmp
cltd
mov
notb
ja
pusha
jmp
stc
shlb
inc
jne
and
loopne
loop,pn
mov
imul
ret
jecxz
in
insb
mov
stc
mov
xorb
mov
adc
popf
xor
bound
xor
jle
push
push
pop
push
xchg
gs
cmp
dec
ds
cmpb
xchg
xchg
popf
ss
push
in
and
ss
sbb
jno
dec
inc
mov
mov
leave
stos
cwtl
mov
int3
aaa
jmp
pusha
rorl
cmp
jl
movsl
ficoml
lea
std
sbb
sbb
push
in
cmp
cltd
in
pop
and
sarb
subl
xor
rcrl
mov
icebp
sti
das
ror
mov
push
sarl
frstor
or
insl
fmull
fnsave
mov
sbb
mov
pop
inc
pop
lock
jge
sub
es
or
daa
or
clc
lods
imul
stos
mov
mov
mov
lods
movsb
bound
mov
fistps
testb
add
or
bound
sub
sahf
mov
clc
pop
ret
and
aaa
shlb
sti
out
or
ss
and
outsl
mov
mov
mov
or
pop
test
dec
shl
fnstcw
in
shrb
fcmovbe
lods
push
push
adc
adc
jge
jb
insb
pop
add
pusha
es
jns
inc
lods
jne
sbbl
xchg
xor
pop
jnp
and
xor
push
outsb
inc
sub
addr16
mov
bound
clc
mov
jnp
movsb
xchg
sub
repnz
hlt
xor
mov
fstps
test
cmpsb
imul
and
cwtl
and
cwtl
add
ret
add
loop
dec
shlb
pop
mov
xor
andl
inc
fcoml
es
shlb
fucomip
mov
xor
fstpt
loop
int
sbb
and
rorl
and
mov
jbe
daa
out
fdivs
inc
lods
lret
xchg
popa
mull
aaa
fmull
sbb
in
cmp
outsl
mov
adc
push
into
add
xor
mov
jb
aaa
cmp
outsl
xor
test
pop
or
movsl
outsb
xor
icebp
inc
ja
xchg
pop
adc
jns
mov
lock
cwtl
cmpsl
mov
les
or
mov
cmp
cltd
cmc
fnstenv
add
outsb
and
or
sbb
test
pop
mov
sti
stc
je
mov
call
add
pop
int
out
lock
mov
ja
movl
dec
fistpll
cli
cmp
iret
adcb
vmovapd
popa
sbb
mov
sbb
adc
add
sub
and
sub
push
sub
mov
mov
gs
jp
shll
mov
push
add
jns
imulb
jae
pop
mov
test
push
mov
lods
icebp
pusha
not
cmc
out
inc
aad
cmp
xchg
decb
cmpsb
loope
push
std
andl
jge
sbb
jnp
mov
cld
leave
cmp
lods
sarb
ljmp
movzwl
movsl
jecxz
xlat
notb
mov
out
fistl
loopne
rolb
sub
out
scas
gs
sub
jg
cwtl
xchg
xorl
loopne
sbb
dec
jmp
fsub
imul
outsl
test
fidivrs
lods
out
inc
faddl
xor
lods
push
push
testb
and
mov
sbb
cmp
cwtl
imul
xchg
or
push
xchg
subb
adc
pusha
jno
popa
out
aad
fisubrl
pop
lret
mov
int
bound
loopne
mov
cmp
sub
sti
dec
mov
nop
cmp
xorl
fs
int
cmp
clc
jl
xor
shll
adc
push
xchg
jno
fdivrl
mov
xchg
clc
jl
fcomps
fs
sbb
mov
push
leave
lock
in
es
in
lock
imul
jb
fstl
gs
mov
adc
ljmp
iret
push
dec
cmpsb
ds
daa
push
lods
xchg
cmc
push
nop
pop
dec
fisttps
pop
adc
xchg
popa
test
xor
aaa
inc
dec
push
sti
outsl
push
loopne
push
and
scas
dec
jae
dec
xor
pop
pop
jl
sub
add
fidivs
sahf
je
sbb
nop
sub
sbb
icebp
repz
mov
push
ljmp
stc
sub
enter
mov
in
push
fistps
push
push
mov
cs
pop
aam
arpl
in
test
pop
stc
push
dec
mov
push
push
addr16
aas
push
push
in
push
pusha
fisttpl
pop
inc
mov
xchg
test
stos
dec
cmp
mov
cmpsl
mov
in
xchg
fs
je
lahf
inc
sahf
sub
insl
lahf
or
stos
data16
mov
xor
cmpsb
cmp
pop
adc
push
pop
negl
and
cld
mov
dec
lcall
xchg
xor
ljmp
push
int3
arpl
sahf
gs
out
nop
shll
pop
lock
pop
jmp
or
lock
mov
mov
popf
mov
sbb
dec
pop
cmc
scas
in
or
sub
mov
add
es
dec
sbb
mov
or
xchg
bound
cld
jge
jle
add
cltd
jb
add
rolb
inc
faddp
dec
cmp
cmp
sub
mov
inc
mov
into
inc
pop
repnz
out
jp
xlat
dec
cmp
push
les
out
pusha
and
xor
pop
add
popa
xor
js
xchg
mov
jmp
idivl
mov
jecxz
mov
daa
mov
arpl
cmp
flds
cmp
add
mov
andb
jne
cmp
pushf
sbb
xchg
mov
jo
and
and
pop
mov
sub
fsubrl
xchg
sub
push
icebp
dec
mov
movsl
js
in
dec
mov
pop
mov
dec
push
lahf
xchg
jo
xchg
insb
inc
ss
add
repz
dec
pop
enter
stos
das
inc
negb
cmp
insl
lahf
mov
in
imul
add
jecxz
add
test
jl
iret
jmp
rorb
pop
les
add
mov
adc
mov
sbb
jne
sub
sub
incl
sbb
or
jle
fdivl
push
sub
xor
push
int
lods
cwtl
mov
orw
cmp
push
or
jle
aaa
dec
out
sbb
jns
lret
loopne
outsb
pop
inc
lods
cmp
jae
sbb
dec
les
mov
push
rorb
cmp
mov
orb
adc
push
test
inc
lcall
xchg
sub
loopne
int
jge
inc
loopne
inc
mov
dec
push
repz
cs
inc
mov
push
xchg
push
sub
mov
adc
xchg
add
sub
fnstenv
dec
jmp
inc
jg
arpl
iret
inc
nop
das
lea
add
xchg
pop
negb
mov
cmc
loop
xlat
xlat
mov
inc
int
orl
shrl
add
mov
push
push
test
cmpsl
ds
mov
sahf
addl
scas
mov
out
mov
xchg
jns
mov
clc
test
adc
and
sahf
xchg
push
jp
test
adc
cmpsb
sbb
adc
lret
jmp
mov
ret
je
repz
jl
jbe
inc
pop
cli
pop
jbe
push
xor
testl
ss
xor
es
icebp
sub
or
sbb
sbb
das
das
jmp
std
adc
icebp
daa
stos
xchg
inc
fsub
lret
scas
jle
ret
lcall
xlat
xchg
sub
shl
lret
jl
jbe
sbb
mov
enter
sub
stos
leave
bound
mov
fldcw
repnz
jecxz
aam
mov
das
daa
mov
xchg
pop
pop
adc
xchg
mov
add
jnp
lahf
mov
jne
xor
je
and
sbb
push
pop
enter
jecxz
jg
hlt
push
or
stos
arpl
sub
add
in
pop
aad
pop
ret
adc
ficoms
outsl
in
outsl
mov
sti
repz
scas
pop
cmc
scas
daa
mov
xchg
lcall
test
jg
xor
jl
lds
push
shl
inc
call
mov
adc
dec
dec
mov
inc
pop
adc
insb
xor
xchg
jns
or
xor
jg
mov
mov
add
fidivl
inc
jp
mov
mov
push
aam
in
push
mov
aaa
lock
mov
rol
dec
fwait
out
shl
fidivrl
sbb
in
iret
sbb
and
lea
ret
pop
mov
jno
lock
xor
dec
and
imul
and
lahf
nop
nop
jne
mov
xor
push
outsb
mov
mov
fstps
mov
test
fwait
xchg
dec
sti
adc
shrl
add
rcrl
rcrl
adc
xor
push
pop
xchg
in
or
sbb
mov
stc
daa
lods
sbb
flds
or
lea
xor
std
daa
lret
jmp
jg
mov
popf
mov
cltd
sbb
cltd
mov
repz
stc
push
fsubrl
in
mov
mov
pusha
pop
stc
jo
push
lods
cli
cltd
and
fdivp
jge
call
movsb
push
or
jmp
ljmp
lret
aam
fadds
orb
rcll
in
mov
mov
dec
cmp
nop
pop
popf
andb
mov
and
cmp
mov
mov
insb
xchg
cli
pop
pop
and
sbbb
dec
add
call
push
mov
or
int3
nop
cltd
insl
cwtl
es
push
or
loope
lahf
fiadds
inc
push
stos
jge
stos
subl
mov
jno
jnp
nop
daa
cmp
orb
orb
jb
enter
jb
push
ror
cmp
das
mov
inc
sarl
shrl
cmp
fstl
push
push
push
in
jne
pop
inc
leave
insl
shll
sub
imulb
xor
rorb
imul
mov
inc
ficoms
cmpb
mov
out
rcll
mov
push
adc
insb
test
ret
pop
mov
loope
js
dec
imul
xor
xchg
mov
sbb
ds
rorb
dec
lds
pop
lock
fwait
jecxz
int
ja
mov
add
add
pop
mov
and
cmp
push
push
int3
out
xchg
aaa
jns
imul
xchg
cs
fnsave
loope
xor
push
push
imul
mov
xchg
fwait
montmul
cmpsb
pop
mov
sub
pop
inc
jp
loop
arpl
jns
int3
imul
out
mov
push
or
mov
jb
cmp
mov
les
lods
pop
repnz
jecxz
dec
jns
xor
popf
push
xchg
cmpl
dec
adc
aad
not
push
arpl
dec
icebp
mov
adc
popf
xsha1
cmpsb
into
or
les
pop
mov
mov
loop
scas
aad
loope
imul
xor
xchg
sbb
test
dec
xchg
pop
mov
dec
dec
in
mov
push
xchg
or
xchg
cmp
sbb
dec
out
mov
lahf
cmp
leave
push
pop
hlt
icebp
mov
mov
jnp
or
mov
xchg
and
xlat
test
or
addr16
sub
pop
pop
mov
jecxz
repz
and
leave
adc
nop
inc
ljmp
cltd
cmp
xchg
sub
fisubrl
lret
lcall
jmp
mov
jo
lahf
aad
pop
pop
rorl
and
in
test
push
jge
or
shll
sub
popa
outsb
mov
push
mov
fsubrs
add
mov
push
in
repz
xor
lock
push
shr
sbbb
cmp
add
in
lea
cli
lds
xchg
sbb
leave
and
fistl
mov
sbb
imul
repz
mov
xor
das
sti
mov
inc
cmp
push
test
push
inc
pop
imul
sbb
xor
mov
mov
xlat
xlat
stc
test
sub
fbld
or
lret
add
repz
ret
pop
sbb
mov
inc
add
js
ljmp
idivl
dec
movsl
jno
mov
ss
ss
jb
call
fldcw
lahf
xlat
lock
scas
test
icebp
jae
sub
mov
or
mov
pop
leave
add
fdivr
cmp
dec
leave
mov
mov
std
mov
negl
lock
int
mov
mov
adcl
adc
lret
mov
dec
je
fldcw
inc
test
jns
sbb
int3
xchg
fwait
icebp
fs
outsl
js
je
les
add
outsb
call
loop
cmp
mov
pop
cmpb
shrl
in
push
loopne
add
loope
test
bswap
xchg
mov
dec
mov
movsl
inc
popf
dec
dec
rcr
int
outsb
call
repnz
pop
fsts
sbb
jmp
xor
sbb
lret
mov
ficompl
sub
jno
and
sti
popa
add
xchg
and
pop
mov
pop
xchg
das
cmp
adc
sbb
push
jns
push
push
pop
sahf
adc
push
mov
pusha
sub
popa
lea
rolb
and
pop
aaa
ja
mov
cli
cmpsb
or
fisubrs
lods
cmp
imull
cld
in
mov
fistpl
adc
rorl
out
roll
js
and
xlat
jmp
lcall
lds
mov
inc
notl
out
push
loope
pop
adc
clc
and
imul
movsb
xchg
pop
sub
mov
mov
jo
inc
xor
jne
mov
dec
xchg
sbb
xchg
dec
cmc
mov
rclb
adc
fidivrl
cmpsb
insb
push
cmpsb
cmp
adc
mov
ljmp
jns
mov
in
xor
shrb
test
mov
inc
mov
cmp
sahf
xor
pop
dec
fdivl
mov
push
and
xchg
sub
rcll
les
add
inc
sub
mov
bswap
cmp
or
outsl
pop
fs
push
and
cmp
or
and
and
bound
adc
out
and
aad
adc
adc
dec
out
push
jmp
loop
jo
pop
adc
sbb
and
xchg
test
pop
xchg
es
sbb
imul
ljmp
bound
cmpsb
adc
cmp
ror
mov
adc
nop
push
ss
lds
adc
xlat
xor
loopne
sbb
out
xor
and
call
clc
rolb
xchg
adc
loopne
lcall
add
xor
lock
mov
test
lcall
mov
pmullw
and
test
push
clc
aam
or
mov
sbb
mov
xor
movsl
mov
xchg
sub
mov
and
loopne
push
lret
xchg
out
ret
mov
clc
add
sub
inc
dec
adc
mov
mov
jl
scas
cmpsl
dec
adc
mov
add
popf
ljmp
cmpsb
mov
les
jns
enter
rorb
sbb
gs
inc
dec
adc
ret
mov
lods
dec
adc
fdivrl
mov
lahf
or
ror
leave
xchg
fwait
add
arpl
leave
les
push
sub
mov
mov
mov
icebp
xlat
dec
push
std
mov
mov
add
ja
notb
jns
xorl
aas
mov
addr16
popa
jmp
nop
cmp
mov
mov
cmp
pop
mov
jecxz
mov
addr16
jae
cmp
jecxz
mov
in
popf
inc
xor
mov
mov
add
fs
lahf
arpl
xor
rcr
daa
cmp
cwtl
mov
xlat
js
pop
movsb
sub
add
adc
push
cli
lds
sub
mov
icebp
test
fiaddl
add
lods
xor
movsb
sub
pop
movl
dec
aam
sub
sub
sbb
mov
sub
mov
icebp
cmpb
movsb
xor
mov
pop
xchg
stos
cmpps
ja
mov
xchg
lea
jmp
xor
pop
rcr
out
insl
scas
or
lret
dec
pop
scas
jmp
pop
cli
test
push
mov
xchg
inc
add
fnstcw
push
cmpsb
xor
xchg
js
pop
push
sub
cli
jno
xchg
and
adc
sahf
cmp
dec
fnstcw
add
push
push
mov
mull
pop
cli
je
pop
aam
outsl
xchg
inc
xchg
mov
add
iret
fdivrs
push
scas
sub
test
das
pop
cli
je
xchg
jno
lds
inc
pop
cld
push
aaa
fdivrs
push
fistpll
sbb
push
dec
inc
adc
pop
push
add
sbb
jg
ds
lock
push
add
pop
push
lahf
mov
adc
pop
roll
jbe
loop
dec
insl
call
push
roll
add
mov
pop
xchg
inc
in
lock
sti
cmp
ss
dec
arpl
jg
xchg
test
into
ret
push
mov
sbb
xchg
jae
xchg
xor
loope
subb
cli
lea
lds
pop
and
adc
jmp
aad
popa
roll
adc
dec
inc
adc
mov
outsb
out
adcb
lret
lods
push
jg
rol
xchg
outsb
pop
and
dec
aaa
lahf
xorl
imul
dec
xlat
inc
push
in
xchg
mov
insl
stos
inc
aaa
lahf
adc
ret
xchg
imul
rcl
rclb
je
andb
addr16
cli
and
outsb
jmp
dec
stc
jg
jne,pn
add
xlat
data16
pop
insb
or
lods
xchg
jge
mov
pusha
out
and
cmp
insb
cli
popa
repnz
pop
js
pop
add
mov
jb
add
xor
and
push
cli
dec
jl
jno
push
sti
add
iret
outsl
push
ss
imul
xlat
es
movsl
sub
cmp
xchg
std
push
mov
push
gs
ficoml
loop
or
push
mov
in
jnp
flds
jbe
sub
packuswb
pop
pop
jns
xor
or
nop
inc
xchg
cmp
flds
je
lods
ss
push
jns
inc
push
or
sbb
xor
flds
push
daa
stos
lahf
jo
push
outsb
int3
jne
sarl
dec
push
inc
pop
pushf
sahf
lds
xchg
clc
arpl
mov
mov
idiv
bound
jg
cltd
sbb
into
rcll
imul
and
inc
jmp
in
jo
adc
lret
imul
lods
cmc
push
inc
sub
xchg
pop
cwtl
sbb
jne
mov
popa
test
leave
sub
mov
jmp
ds
fs
test
inc
or
jecxz
cmc
jbe
leave
sub
outsl
lock
ds
les
gs
lds
repnz
enter
jg
sub
cmp
insb
xor
callw
scas
das
lods
mov
sarb
push
enter
fildll
mov
callw
dec
sub
ret
mov
push
aad
jmp
mov
sub
and
mov
jnp
movsl
test
inc
adc
lock
lods
in
pop
mov
mov
push
add
aad
sti
push
int
divb
inc
mov
bswap
sbb
inc
jo
stos
mov
sub
mov
adc
mulb
xor
dec
movsl
hlt
data16
scas
sub
imul
add
ret
dec
or
in
movsl
xor
inc
lods
sub
sub
outsb
subb
xor
fisttpll
push
xor
cmpsl
daa
xchg
and
sub
ret
lret
push
xchg
out
xchg
orb
je
lcall
push
and
mov
test
mov
jp
mov
sbb
inc
sub
clc
add
jbe
jecxz
or
sahf
rcll
in
push
mov
cmpsb
icebp
popa
adc
movsb
divb
push
adc
inc
adc
dec
pop
mov
dec
or
fbstp
fs
mov
ffreep
mov
dec
or
hlt
xor
rcll
mov
cmove
and
fcoml
ret
cltd
cld
mov
jb
add
xor
call
push
repnz
dec
inc
push
add
xchg
push
add
or
and
cmp
jecxz
jle
popa
not
popa
lret
mov
rclb
shlb
xchg
bound
fdivrl
jge
decl
mov
mov
std
int3
arpl
js
shrl
mov
push
testl
cmpsb
pop
outsb
stc
pop
hlt
mov
fimuls
cmp
insl
testb
mov
div
mov
cmp
dec
mov
sub
es
mov
dec
mov
cmc
pop
add
mov
nop
cmp
push
sub
dec
call
std
les
jne
scas
xor
mov
rorl
movl
mov
mov
mov
cmpsb
mov
adc
pop
rcrl
adc
jne
push
dec
mov
stos
sbb
mov
jecxz
cs
aam
xchg
insb
or
cli
jno
pop
in
out
or
add
pop
incb
lcall
push
ja
das
rol
lods
sub
cmovnp
inc
pop
xor
add
lods
mov
and
cmp
push
mov
loopne
data16
add
sbb
mov
or
sbbb
movl
pop
pusha
jmp
jl
mov
cs
xor
or
sub
cmpsb
mov
ss
xchg
add
push
add
scas
pop
cld
adc
pop
rorl
jmp
and
testb
jae
dec
or
dec
repz
sahf
xchg
adcb
dec
or
out
shll
sahf
mov
scas
xor
xlat
add
in
add
push
stc
je
inc
or
popa
daa
test
cltd
shll
shl
jo
aam
test
fldcw
xor
out
lret
mov
inc
sub
or
ret
jp
fistpll
hlt
rcrw
mov
repz
jmp
adc
inc
clc
es
lcall
jge
pop
sti
jp
mov
int3
lret
hlt
arpl
cld
pop
xor
sbb
pop
jg
cmp
popa
call
sbb
dec
push
std
out
cmp
iret
dec
add
mov
int3
jnp
cltd
cmc
pop
pop
out
pop
add
jno
cmc
repnz
xchg
popf
jge
lahf
ret
push
mov
xor
ret
mov
pop
dec
enter
pushf
cmp
jmp
repnz
mov
aad
lcall
push
add
xchg
inc
scas
pop
rolb
cmpsb
xor
aaa
fs
or
sbb
popa
imulb
mov
push
in
out
test
cmp
jge
pop
lret
je
test
mov
adc
lods
dec
mov
repnz
sub
mov
movsl
mov
test
je
ret
adc
cmp
push
inc
sub
pop
cltd
jge
lret
fisubrl
or
aas
cmpsb
and
push
xchg
xor
jecxz
test
xchg
test
out
sbb
xor
inc
or
dec
adc
subb
popa
aad
pop
in
jbe
into
sub
mov
pop
inc
lods
xor
iret
xchg
aaa
cmp
push
mull
lea
ja
in
into
jmp
mov
sarl
jae
inc
dec
sub
mov
movsb
enter
mov
or
aas
pop
loopne
dec
or
std
dec
or
shrb
stos
inc
or
pop
and
cmp
jns
mov
roll
inc
clc
push
out
fcomps
mov
dec
push
std
sbb
dec
inc
or
shlb
shlb
mov
call
clc
or
imul
not
sub
jae
add
jne
pushf
cltd
inc
ja
pop
fidivrs
fwait
sub
cmovno
scas
pop
cmc
push
mov
xchg
jge
lret
mov
fs
cli
adc
add
cmc
dec
iret
addw
aaa
mov
push
shll
movsb
int
sub
cmp
repz
fbstp
mov
mov
ja
adcb
xchg
dec
mov
xchg
xchg
mov
fstps
mov
cs
insl
out
bound
pop
les
sti
jmp
jno
xlat
inc
adc
inc
dec
or
mov
cmp
sti
and
stos
fs
mov
jnp
clc
mov
pop
out
subl
jo
push
in
outsb
cli
mov
and
outsl
ja
jns
xchg
push
data16
rclb
icebp
data16
sub
lcall
or
mov
or
fsub
addr16
jle
mov
push
clc
lods
mov
pop
push
inc
push
clc
out
xchg
popa
in
push
cld
movsb
daa
xchg
and
mov
stos
stc
arpl
scas
cwtl
inc
push
jg
xchg
adc
aad
xor
insb
in
add
fidivrl
pop
sbb
jno
popf
cmp
imul
out
fistpll
out
inc
packuswb
jbe
mov
test
hlt
mov
test
or
out
sbb
pushf
adc
fcmovb
push
add
add
adc
dec
stos
inc
jge
nop
daa
clc
pop
leave
pusha
nop
sbb
jb
jns
popa
pusha
movsl
lea
jb
cmp
pop
jns
jbe
ss
cmp
dec
dec
sub
and
lods
dec
adc
decl
xchg
pop
in
pop
add
cmp
or
int
jp
icebp
packssdw
add
ret
sarb
faddl
stc
jbe
int3
and
xor
bswap
outsl
mov
jnp
jns
int3
mov
and
inc
cmpsl
outsl
in
push
sahf
jnp
mov
outsl
dec
shll
lcall
inc
pop
sarl
stos
rcrl
dec
inc
push
push
in
pop
std
sar
push
adc
imul
jg
mov
test
int
repz
xor
jg
orl
test
orb
jl
dec
loop
cli
cli
cltd
mov
fcomps
pusha
out
xor
xchg
pop
xor
popf
pusha
test
leave
fidivrl
sahf
jge
adcl
fcmovb
xchg
jnp
lods
sub
mov
repz
inc
adc
stos
sub
mov
mov
scas
jne
pop
xchg
mov
dec
adc
and
les
fildl
inc
scas
sub
cmp
repnz
add
push
adc
dec
and
sbb
inc
nop
inc
out
xchg
sub
ljmp
pop
cmc
shll
cltd
cmpsb
out
and
mov
push
inc
jo
jo
xchg
sahf
inc
xchg
pop
das
mov
enter
mov
mov
xor
sub
sbb
int3
xchg
xchg
mov
cmpsl
or
shlb
and
imul
pop
in
into
xchg
inc
mov
or
inc
std
aaa
jmp
imul
or
fwait
sub
add
test
jns
adc
incl
stos
xchg
pushf
sub
dec
punpckhwd
jo
test
mov
mov
adc
rol
mov
adc
pop
stos
outsl
jb
lds
stc
dec
repnz
inc
inc
lahf
inc
cmp
xchg
iret
ret
cs
lock
mov
mov
sbbb
repz
lods
sub
cmp
lods
lea
cmp
fisttps
into
imulb
mov
mov
dec
xchg
cmp
jmp
rcll
enter
cmp
lods
leave
roll
cmp
xor
adc
push
lock
dec
aam
ret
cmpl
pushf
and
mov
stc
fs
ja
int
loope
stos
sbb
push
fmuls
mov
push
jo
pop
aad
xchg
xor
inc
or
add
and
push
hlt
pop
ss
rorl
lea
pushf
cmp
pop
xlat
test
fisttps
cli
or
jnp
lock
sub
add
outsb
ds
adc
out
adcl
imul
lret
cld
popa
lods
out
or
in
mov
mov
popw
pop
add
and
xor
mov
and
mov
sarl
xchg
aaa
les
inc
pop
out
and
mov
cwtl
cmp
sbb
in
sub
imul
adc
es
mov
xor
add
jae
push
mov
mov
scas
or
pop
repz
or
or
gs
jns
cld
gs
fiadds
andb
faddl
int
add
jnp
and
push
jo
icebp
adc
inc
repnz
and
and
and
mov
xor
jp
ja
add
xor
mov
sbb
sbb
dec
mov
xchg
or
cmpsb
daa
jecxz
test
divb
pushf
cltd
out
pop
push
add
fiaddl
mov
dec
pop
xor
jne
in
inc
adc
inc
xchg
xor
jo
sub
test
pop
sti
jbe
fs
test
cli
push
mov
mov
out
mov
bswap
mov
mov
xchg
mov
fnstsw
cmp
int
ja
adcb
cs
fbstp
pop
sub
outsb
sbb
out
or
cmpsl
ljmp
lcall
movsb
xor
xor
in
vxorps
xchg
insb
call
lds
jge
mov
push
mov
adc
movsb
sub
inc
or
mov
lret
stos
dec
xor
nop
das
rolb
out
lret
jae
das
cmc
lea
xor
stos
pop
fstpt
push
dec
negl
mov
enter
cmp
bound
outsl
push
into
scas
jmp
adc
inc
pop
cmpsl
add
fwait
inc
sbb
sbb
pushf
jp
lret
push
testl
gs
jo
inc
push
add
movsb
xor
scas
dec
mov
test
jl
bound
cmpsb
lock
cli
xchg
das
or
test
cwtl
inc
fwait
sub
xchg
cmp
gs
clc
mov
mov
push
out
or
cmpsb
repz
or
jle
push
mov
loope
ret
sti
js
mov
adcb
add
movsl
nop
and
aam
das
test
xchg
ret
js
leave
cmp
pop
xchg
add
rcrl
fdivrl
xchg
insl
loope
adc
push
add
jbe
dec
adc
xlat
jo
or
pop
cmp
mov
cwtl
mov
lea
lret
inc
dec
addl
insl
cmc
pop
adc
ret
mov
shr
je
aam
fcomps
into
cltd
inc
add
push
out
popf
xlat
orb
mov
mov
lahf
inc
add
sub
lods
push
adc
or
rorl
and
xor
out
add
push
sbb
loop
test
mov
stos
das
scas
or
pop
mov
loopne
pop
mov
jg
sub
repz
je
fs
push
imul
addl
out
mov
inc
test
test
into
lock
sub
cmp
mov
ret
in
aaa
orl
pop
add
roll
adc
and
lds
cwtl
inc
jno
mov
cwtl
and
mov
lods
xor
movl
or
mov
sbb
fldenv
mov
sahf
jne
xchg
adc
outsb
rolb
add
rol
mov
sbb
push
pop
lds
cmpsl
out
add
pop
mov
sbb
dec
and
aad
push
jno
xor
xorl
test
filds
adc
sbb
sub
add
mov
jo
std
pop
test
fnstsw
enter
insl
out
push
stos
jp
lods
inc
faddl
je
repz
dec
arpl
aam
sahf
add
aas
jle
mov
sub
jo
push
notl
push
lock
inc
ret
out
outsl
enter
and
mov
sbb
xlat
fldl
cmpsl
sub
xchg
push
pop
stc
mov
jmp
pop
test
cs
mov
mov
lea
loopne
inc
stos
lds
xlat
jecxz
insl
or
lods
daa
cmc
enter
ljmp
add
test
hlt
ljmp
movsb
jno
push
add
ret
or
les
adc
push
mov
stos
popa
in
lock
gs
and
push
push
mov
cmpsl
addr16
cmp
adc
or
push
cmp
adc
outsl
insb
jmp
jnp
push
inc
gs
call
leave
pop
lock
imul
insb
xchg
ljmp
outsb
rep
cmc
into
xchg
sarb
mov
out
popa
jp
mov
or
add
pop
pop
add
or
and
xor
dec
push
inc
mov
cli
arpl
sub
lds
add
adc
int
sbb
adc
mov
dec
jmp
ljmp
mov
xor
js
packssdw
fsts
ret
xchg
add
cmp
xchg
push
les
mov
dec
in
shl
addr16
flds
mov
out
fldenv
out
sbb
in
or
mov
insl
and
addl
pushf
inc
mov
add
adc
fldl
into
xlat
iret
xchg
stos
add
jbe
shl
cmc
pop
and
leave
xchg
orb
scas
loope,pn
add
mov
shl
and
scas
and
and
repnz
jmp
cli
es
insb
fisubl
test
fisubrs
pop
outsl
push
cltd
inc
movsl
jge
push
lock
add
in
mov
in
cs
inc
or
or
inc
xchg
mov
movl
fnstsw
pop
mov
push
and
mov
cmp
push
inc
inc
aad
sti
cltd
xchg
inc
loop,pn
outsb
jp
mov
popf
cwtl
mov
pop
sarl
and
jecxz
test
push
or
aas
lcall
inc
push
lods
xor
adc
push
ja
mov
outsl
lods
cmpsl
ja
cmpl
adc
scas
sarb
jbe
jae
into
out
gs
dec
mul
jo
cltd
adc
lds
adc
notb
mov
decb
jecxz
jp
jecxz
shll
in
xor
adcb
adc
outsb
arpl
mov
test
mov
sti
pop
cmp
and
sub
mov
sbb
dec
negl
dec
jne
cli
jnp
xor
icebp
filds
and
sub
in
jp
or
scas
xor
test
adc
xor
mov
roll
or
push
and
fucomi
cmp
lcall
or
sbb
test
inc
push
mov
push
test
and
add
and
fiaddl
push
add
in
imul
sbb
jns
in
add
leave
mov
xor
xor
scas
or
push
movsb
xor
xchg
adc
jnp
outsb
call
cwtl
dec
movsl
cmp
sub
bound
aas
cmpsb
leave
mov
jno
sbb
loop
pop
add
loope
inc
push
cmc
mov
fadds
aas
jmp
or
cs
pop
test
cmpsl
sub
dec
adc
imul
xor
popa
aam
add
mov
dec
adc
cltd
inc
mov
scas
push
cli
jmp
add
dec
jle
or
push
adc
dec
nop
ds
fdivrl
lock
sub
cli
push
movsb
cmp
sarl
mov
dec
out
test
xchg
aad
fistpll
xor
push
jmp
cld
push
adc
movsb
cs
inc
arpl
dec
inc
push
int3
hlt
fwait
adc
pop
call
add
sub
pop
add
jae
xlat
js
cld
in
mov
mov
cmpsl
inc
push
xlat
push
sub
jp
jecxz
lret
jecxz,pn
cs
or
ljmp
ret
mov
xchg
mov
mov
lods
jge
loope
shlb
add
jg
pop
icebp
pop
repnz
add
mov
xchg
std
fs
cmc
pop
call
stc
cmp
push
mov
es
aas
pop
testl
dec
pusha
idivl
rclb
jle
or
inc
push
adc
iret
xchg
rorb
mov
pop
mov
fadds
pop
imul
je
mov
mov
mov
gs
pop
add
test
negb
scas
mov
data16
jecxz
js
lock
fs
stos
xor
inc
jae
jb
xchg
in
sbb
cltd
inc
add
xchg
push
dec
adc
jmp
or
stos
dec
aad
pop
xchg
pushf
mov
ret
jno
xor
sub
insb
lcall
es
inc
and
cs
xorl
repz
and
inc
inc
adc
into
imul
adc
imul
dec
int3
mov
inc
adc
fsubs
mov
push
add
ja
outsb
jl
sahf
daa
data16
pop
mov
addr16
xor
dec
adc
addr16
cmpsb
cs
xchg
aaa
jbe
mov
push
lea
xchg
fiadds
cli
fcomp
xchg
xchg
aaa
xor
lcall
cmpsb
adc
inc
dec
jae
push
xchg
cmp
aad
add
mov
jno
insb
lock
gs
lret
push
out
fldl
or
dec
das
pop
dec
push
shlb
imul
pushf
loop
sbb
add
jle
lgs
pop
repnz
shrl
pop
mov
mov
inc
pop
mov
lods
jae
imul
adc
fistpll
das
mov
cs
aaa
dec
pcmpgtw
arpl
adc
inc
jg
outsl
addr16
inc
or
clc
fs
pop
xor
inc
dec
fidivrs
xchg
adc
and
jb
jno
inc
or
addr16
or
pop
sbb
inc
push
push
sarb
push
fcmove
inc
outsb
jmp
adc
mov
sbb
dec
test
mov
call
fsts
push
mov
cmpsl
adcb
jo
push
add
dec
ja
xchg
imul
fiadds
dec
jnp
and
int
test
cmp
sbb
and
cmp
xor
lret
nop
scas
daa
cmp
in
insb
mov
mov
mov
gs
mov
jns
loopne
cmp
add
daa
xchg
dec
adc
xor
leave
and
sub
mov
sub
ffreep
xchg
and
insb
jmp
cmp
mov
or
stos
sub
mov
pusha
lock
loope
xor
add
js
mov
add
lock
mov
xlat
xorl
sub
lcall
and
paddd
loop
dec
adc
xchg
sub
xor
sbb
dec
mov
mov
frstor
test
adcb
mov
jnp
out
mov
lock
mov
push
lds
mov
sbb
xor
xchg
ss
jecxz
and
ss
mov
and
faddl
inc
jmp
das
mov
dec
dec
adc
mov
jg
dec
pop
enter
inc
repnz
jno
jno
call
add
aad
ljmp
mov
in
xor
ja
insb
rcll
push
add
xor
inc
js
and
cmp
push
shrb
loop
add
insb
jnp
pop
add
xchg
cmp
and
adc
add
repz
mov
or
loop
sarb
clc
ss
std
movl
and
mov
cmp
lods
mov
leave
adc
inc
nop
adc
addr16
pushf
cmp
ss
jle
sub
jg
aad
std
pop
test
sub
clc
sub
jo
in
jecxz
imul
push
push
shrl
cmp
add
add
jnp
insb
negl
or
cmp
cmp
sub
imulb
and
out
mov
notl
mov
pop
sub
test
inc
push
std
jmp
iret
xchg
mov
stos
push
jnp
and
xchg
insb
call
leave
hlt
dec
or
mov
shrl
push
adc
pop
jge
imul
insl
adc
mov
fwait
inc
xchg
movsb
sarl
movl
sbb
mov
jbe
dec
adc
movsb
sub
push
pminub
sub
stos
xchg
adc
jb
sarb
addr16
xor
sarb
hlt
fs
gs
ljmp
add
or
push
sub
jge
nop
aam
lret
bound
imul
subb
sub
push
sub
ja
es
movsl
xchg
cmp
loopne
jnp
dec
jge
in
mov
test
inc
jmp
pop
int3
pop
sti
aaa
push
dec
or
cs
adc
test
mov
lock
lret
add
addl
pop
inc
pop
sarl
xchg
inc
or
fs
push
gs
pusha
dec
rorl
test
lea
push
sub
mov
ret
adc
dec
outsl
icebp
push
jle
int
subl
test
pop
daa
xor
scas
xor
mov
mov
adc
adc
cmc
pop
sahf
sub
fimull
adc
fdivrs
outsb
jno
aaa
sbb
fistpll
lret
mov
jp
inc
adc
jo
and
adc
or
mov
dec
push
mov
inc
daa
pushf
fnsave
cmp
sbb
inc
jns
and
cmp
push
pop
fstpt
inc
cmp
mov
jge
sbb
aas
xchg
leave
fiaddl
pop
or
push
xchg
add
clc
dec
ja
into
out
adc
rcll
xor
push
and
arpl
push
inc
xchg
inc
jmp
clc
mov
adc
mov
mov
jmp
scas
sub
mov
dec
test
ret
cbtw
adc
push
jp
pop
in
popl
mov
push
out
xchg
decb
test
inc
daa
scas
nop
xor
sahf
loopne
test
and
jge
dec
stos
loopne
jns
mov
filds
sub
push
repz
lock
push
in
and
inc
or
hlt
push
cmp
or
adc
sub
xchg
ljmp
lahf
outsb
add
lds
and
int3
lret
scas
loopne
std
and
jge
mov
push
pushf
inc
add
mov
mov
xor
and
mov
inc
and
fdivl
popf
inc
and
xor
rclb
in
cmp
xchg
cmp
andb
or
pop
pop
fmul
bound
cmp
pop
pop
insl
call
jne
xor
cmp
xor
lds
cmp
fs
jecxz
loopne
insb
repz
iret
xchg
addr16
pop
pop
js
xchg
or
lea
or
das
sbb
cmpl
dec
scas
rolb
pop
out
sbb
xor
jnp
icebp
push
mov
mov
loope
pop
adc
push
loop
jo
mov
sbb
or
push
test
sub
pop
orl
in
xor
pop
adc
cmp
sub
movsb
loope
ds
xchg
inc
dec
push
aad
cs
xor
ret
mov
hlt
xorl
dec
test
mov
xchg
ja
dec
pop
loope
bound
cmpl
out
cmp
xchg
clc
cwtl
cmp
iret
cmp
xchg
and
or
jnp
mov
dec
cmpps
lock
aad
pop
pop
cltd
push
notl
loope
lea
ss
imul
push
pop
std
roll
gs
test
in
insb
loope
fdivrs
stc
repnz
lock
lock
icebp
bound
lock
je
ja
ljmp
mov
cmp
aam
movsb
xor
test
popa
es
and
add
flds
sub
mov
cld
xor
js
inc
inc
adc
in
sahf
mov
repz
or
sbb
sbb
mov
jb
mov
stos
adc
mov
stos
xor
cmpsb
out
jbe
jmp
ss
loope
mov
icebp
pop
shll
mov
jns
mov
test
jnp
cmc
adc
popa
jmp
adc
jle
inc
jge
sub
push
stc
lret
push
sbb
cld
stos
sub
push
mov
pop
mov
cmp
addr16
sub
pop
adc
jns
scas
push
xchg
add
mov
push
or
shrl
pop
push
mov
mov
sbb
dec
add
cmp
outsb
lds
rorb
loope
fcoml
imul
std
call
cwtl
push
sbb
ds
cmp
rorl
pop
ds
pop
lock
inc
ja
js
add
lret
add
mov
push
pop
aas
mov
shrl
stos
pop
hlt
fistl
jnp
cs
movsb
pop
push
cltd
xor
mov
dec
loopne
not
insb
sub
decb
mov
sbb
popf
adc
mov
das
and
rcrl
dec
in
sub
jbe
xchg
imul
jl
xchg
scas
out
and
rcrb
mov
cmp
rclb
lds
push
out
movsl
loope
jp
jne
stc
xor
cwtl
sbb
mov
mov
lahf
fdivrs
repz
pop
adc
xchg
jns
scas
addr16
add
mov
push
or
loope
jne
push
pop
push
mov
mov
sbb
dec
add
lds
mov
loope
fistl
imul
cld
call
xchg
dec
sbb
ds
pop
cmp
pop
in
xchg
inc
ja
ja
add
lret
mov
sbb
shrl
test
out
xchg
sti
jnp
sub
dec
cltd
xor
mov
dec
loopne
cmc
aad
daa
fsubl
or
test
pushf
adc
mov
das
pop
aad
pop
pop
inc
dec
in
sub
jbe
xchg
imul
jnp
xchg
lods
out
and
iret
sbb
insb
and
rclb
lds
push
out
movsb
loopne
jp
jne
clc
xor
cwtl
sbb
mov
mov
sahf
xlat
cmp
repnz
pop
adc
xchg
jns
lods
or
into
xchg
add
mov
push
or
cmp
shrl
pop
push
mov
scas
xchg
dec
add
lds
mov
loope
ficoml
imul
sti
call
xchg
dec
sbb
ds
or
pop
cmp
pop
lock
jnp
inc
ja
jbe
add
leave
add
mov
sbb
aas
xchg
pop
hlt
fsts
jnp
sub
or
xor
mov
dec
loopne
hlt
aad
or
repz
test
fwait
adc
mov
das
push
aam
pop
push
inc
dec
in
daa
fbstp
xchg
imul
jp
xchg
lods
in
and
into
sbb
push
cmp
push
mov
pop
mov
fsubp
jp
lds
divl
add
dec
sbbl
mov
mov
popf
aad
aam
mov
pop
repnz
adc
xchg
adc
int3
xchg
cs
mov
ret
call
or
cmp
imul
mov
scas
xchg
loopne
adc
xor
fwait
push
les
mov
loop
insb
add
add
xchg
dec
push
mov
mov
aas
out
cmp
iret
or
pop
cmp
pop
icebp
and
mov
pcmpeqb
xchg
sub
xor
mov
sbb
test
shrb
cmpsb
pop
cmc
xlat
mov
xchg
clc
jl
sub
push
movsl
adc
jle
sub
gs
mov
loope
repnz
insl
and
push
mov
xchg
lret
cmp
rol
pop
add
dec
in
and
insb
add
js
xchg
stos
jecxz
and
ss
push
mov
pop
mov
fsub
jnp
ret
ja
cmc
das
add
dec
andl
dec
fwait
sarl
aad
mov
pop
repz
adc
mov
jp
test
lret
cld
mov
out
mov
dec
pop
dec
jecxz
jo
insb
mov
ret
repz
lods
mov
ficoms
adc
xor
lcall
in
movsl
loop
xlat
or
add
xchg
dec
push
mov
mov
inc
out
cmp
int
enter
pop
icebp
pop
pop
out
lea
scas
add
fists
and
sbb
fadds
pop
not
mov
xchg
loopne
movsl
adc
xor
sub
arpl
dec
loope
icebp
xlat
outsb
and
push
mov
xchg
leave
jl
cmp
rol
pop
add
loopne
push
insl
add
jbe
xchg
test
mov
adc
sbb
sti
xor
cmp
dec
mov
pop
mov
frstpm(287
jl
shll
add
inc
andb
mov
mov
cltd
sarb
add
pop
hlt
push
push
icebp
mov
jnp
test
xsha256
cmpsb
xchg
leave
cltd
xor
mov
in
mov
jecxz
outsl
insl
mov
ret
hlt
stos
mov
fcoml
cmpsb
cmp
cltd
push
les
mov
loop
aad
outsb
add
daa
pusha
mov
xchg
dec
push
mov
mov
inc
in
cmp
lret
push
leave
pusha
cmp
pop
icebp
sbb
js,pt
jo
add
sub
xor
mov
pop
push
inc
fadds
movsb
pop
not
mov
xchg
fisttps
movsl
adc
xor
ret
bound
dec
loope
lock
outsb
and
push
mov
xchg
enter
lods
jmp
ret
cmp
out
and
ja
mov
shlb
cmpsl
loope
and
leave
sbb
cli
xor
inc
sbb
rorb
pop
mov
jl
shlb
sub
xchg
sub
mov
mov
cwtl
sarl
add
pop
hlt
push
or
jnp
cmpsl
pusha
xsha256
cmpsb
xchg
enter
mov
dec
dec
add
jecxz
outsb
insl
mov
shl
repz
adc
cs
cwtl
dec
les
mov
loop
aam
outsb
add
es
mov
xchg
inc
push
mov
mov
inc
in
cmp
lret
pusha
aaa
jmp
icebp
sbb
out
mov
add
sub
das
in
dec
push
push
inc
fadds
mov
lock
push
movsl
cmovns
ret
popa
pushf
mov
loope
out
xlat
outsb
and
push
mov
xchg
jp
cmp
ret
cmp
insb
and
ja
lea
mov
loopne
and
enter
xor
rorb
pop
mov
fxam
jl
mov
add
inc
jle
mov
xchg
sarb
add
pop
hlt
push
or
mov
je
adc
cltd
xor
mov
dec
dec
add
insl
insl
lahf
push
push
xchg
hlt
mov
test
pop
ficoml
adc
sub
dec
les
mov
loop
rorl
outsb
add
and
inc
push
mov
mov
inc
jecxz
cmp
leave
add
pusha
ss
mov
movd
xchg
sub
jecxz,pn
dec
adc
shrb
mov
lock
fisttpll
movsl
push
dec
fwait
xor
sub
pusha
fwait
mov
loope
out
xlat
outsb
and
push
mov
sbb
jns
cmp
int
pop
cmp
push
loope
push
mov
mov
fimuls
mov
xor
rorl
pop
mov
pop
icebp
pushf
xlat
in
or
add
inc
jl
mov
xchg
into
aas
pushl
pop
cmc
push
or
mov
jl
movsb
pop
adc
imull
mov
in
imul
popf
push
imul
mov
mov
fcoms
adc
inc
stc
cmpsl
sub
xchg
dec
lds
push
out
lahf
jecxz
rorl
outsl
push
cmp
add
mov
jne
stos
inc
loope
cmp
popa
xor
pop
repnz
jg
cmp
insb
test
xchg
cs
loope
dec
adc
fnstcw
shrl
mov
icebp
mov
fisttpl
cmpsb
or
pushf
xor
sub
push
lret
jg
loop
in
fsubrs
shrb
add
testb
xchg
adc
les
cmp
in
leave
push
int3
ret
pop
aaa
push
out
pop
loop
push
mov
mov
fmull
imulb
stos
inc
popa
pop
cmp
pop
mov
pop
repnz
adc
sub
pop
sets
inc
jp
mov
xchg
int3
inc
xlat
std
mov
imul
pop
testb
mov
jo
adc
pop
adc
cmc
lods
das
ficoms
mov
in
push
outsl
pushf
push
imul
mov
mov
adc
sub
lret
lds
push
call
iret
pop
jo
cmp
add
lea
mov
scas
lods
inc
loopne
cmp
bound
out
repnz
push
jmp
adc
pop
sahf
and
dec
adc
fidivrl
shrl
lahf
popa
clc
rolb
jg
and
xsha1
cmpsb
or
xor
sub
push
lret
loop
jmp
jo
shrb
add
testl
ret
jbe
cmp
in
lret
ret
pop
cld
ss
call
dec
mov
mov
fisttpl
mov
cs
inc
pusha
adc
leave
pusha
mov
pop
repnz
aam
jle
mov
add
das
aas
jns
mov
xchg
lret
inc
fdivr
mov
imul
pusha
testl
jle
mov
ret
hlt
stos
das
fcoml
dec
in
imul
add
mov
push
lods
inc
cmc
cmpsl
ds
bound
xchg
dec
lds
push
jmp
int
jno
cmp
add
mov
mov
lods
lods
inc
fists
int3
arpl
in
repnz
ss
push
mov
mov
cmovl
xor
push
sahf
stc
iret
xor
mov
adcb
xlat
xsha1
cmpsb
or
jbe
sub
push
leave
jnp
loop
ljmp
add
clc
jo
xchg
push
xchg
push
lods
ret
cmp
jecxz
lret
adc
ret
pop
cli
xor
loop
dec
xchg
mov
fimull
mov
sub
cmp
popa
mov
pop
repnz
shr
jg
mov
push
popf
push
or
mov
nop
lret
sti
mov
imul
popa
clc
dec
add
mov
outsb
jg
mov
rcrl
ficoml
push
inc
sti
dec
in
push
imul
mov
mov
rorb
pop
scas
aas
repz
ds
inc
lds
push
ljmp
jb
aaa
in
add
mov
pop
mov
lods
scas
inc
ficoms
int3
arpl
jecxz
repnz
ljmp
cmpsb
or
mov
fdivl
fstpt
push
popf
stc
into
xor
mov
adcb
montmul
cmpsb
pop
inc
sahf
xor
pop
xchg
mov
loop
jmp
imul
outsb
and
lods
shlb
movsl
loope
lret
adc
les
xor
fs
jp
test
mov
add
or
pop
mov
sub
inc
jle
popa
mov
pop
repz
shr
jg
mov
adc
and
popf
push
or
mov
stc
mov
insb
loop
popa
clc
dec
add
mov
push
adc
icebp
test
fsts
mov
in
data16
dec
insb
add
clc
jmp
mov
rorl
scas
cmp
pop
xor
pop
ja
push
ljmp
jb
xor
push
nop
daa
mov
scas
inc
fmull
int3
arpl
loop
repz
addl
xchg
mov
or
cs
pusha
fwait
stc
int3
xor
pop
pop
aad
cmpsl
push
inc
sahf
xor
pop
xchg
mov
jecxz
out
jno
int3
push
cmp
insb
pop
mov
push
lea
lods
mov
fbstp
adc
lds
push
jmp
dec
xorl
insb
add
or
lods
inc
pop
adc
inc
jl
popa
scas
arpl
xchg
iret
call
adc
and
popf
push
or
mov
mov
inc
fincstp
scas
insl
loope
popa
clc
dec
add
mov
jg
pushf
push
adc
out
cmpsl
xor
fcoms
mov
out
fidivl
dec
insl
add
mov
and
or
scas
cmp
test
int3
mov
jbe
push
ljmp
jb
xor
add
xchg
mov
fimull
int3
arpl
dec
ljmp
mov
cltd
xor
fidivl
fstpt
aad
pop
cltd
stc
lret
mov
aam
test
aas
sahf
xor
push
xchg
mov
in
in
jno
lret
imul
cmp
and
push
lods
mov
fnsave
push
vminss
das
push
jmp
dec
xorl
pushf
aam
and
out
daa
lods
inc
pop
adc
inc
jp
popa
lods
bound
xchg
int
jg
mov
adc
and
sahf
push
pop
fwait
xor
jb
mov
mov
inc
lods
xlat
outsb
fists
stc
inc
add
lea
push
adc
test
xor
push
mov
out
dec
outsb
add
out
mov
into
or
scas
cmp
stos
inc
and
int
inc
enter
push
jmp
xchg
out
pushl
xor
add
sbb
daa
test
and
fmuls
int3
arpl
loopne
cmc
adc
cmpl
or
mov
es
or
insl
pop
xchg
stc
enter
mov
adcb
rcll
test
outsl
and
mov
in
jecxz
jno
lret
cld
ss
and
push
lods
mov
or
pop
imulb
out
dec
jg
pop
mov
add
fwait
rorb
mov
push
cmovno
inc
js
popa
stos
popa
pop
notb
mov
adc
push
pop
sahf
dec
push
pushf
xor
jo
mov
mov
inc
lods
fsubrs
adc
stc
inc
push
lea
adcb
push
adc
cmpl
leave
aad
mov
out
popa
dec
outsb
add
out
mov
int
sbb
and
int
inc
enter
push
jmp
xchg
out
jb
xor
add
sbb
daa
test
and
xlat
mov
mov
fistps
adc
jle
jl
arpl
lcall
fdivrs
insl
pop
xchg
stc
jle
mov
rclb
test
outsb
and
push
mov
in
loop
jno
leave
insb
add
xor
mov
dec
mov
lods
mov
fidivl
or
pop
cmc
sub
jmp
dec
jle
pop
mov
add
lcall
mov
push
push
inc
fdivrs
ja
popa
test
lret
cld
mov
adc
sbb
pushf
xor
outsl
and
push
mov
inc
stos
fsubrs
adc
inc
testb
push
adc
cmpb
leave
aam
mov
out
pusha
inc
outsb
add
in
mov
int3
push
sbb
pop
pop
ss
inc
enter
push
jmp
xchg
out
or
out
fwait
sbb
daa
cmpl
mov
mov
mov
ficomps
cmovnp
cmpl
or
mov
es
or
insl
pop
xchg
stc
jge
mov
rcll
test
insl
and
push
mov
cmpsb
loope
jno
enter
xor
sbb
lods
mov
fnstenv
or
pop
hlt
sub
pop
adc
jo
scas
push
mov
in
and
jbe,pt
popa
test
pop
notb
mov
adc
sbb
sahf
dec
add
xor
outsb
and
push
mov
inc
stos
fsubrs
adc
inc
std
testb
push
adc
cmpl
mov
out
pop
inc
outsb
add
in
mov
lret
add
stos
inc
push
pop
ss
aas
enter
push
jmp
xchg
out
cld
jb
cs
fwait
pop
push
nop
daa
cmpb
mov
aad
inc
xlat
mov
fstpl
push
dec
ljmp
popf
or
mov
es
or
insl
pop
xchg
stc
lds
scas
out
pop
sbb
adc
insb
and
push
lea
movsl
loopne
jno
insb
add
xor
sbb
lods
mov
test
lret
or
pop
repz
pop
adc
jge
jl
pop
scas
addr16
cwtl
iret
mov
jmp
lods
inc
push
or
fdivrs
pop
pop
testb
jge
loop
pop
sahf
dec
add
sahf
push
mov
test
stc
inc
cld
testb
dec
adc
xorb
leave
rorb
mov
out
pop
inc
outsb
add
jecxz
mov
lret
scas
xor
push
ss
ds
push
jmp
xchg
out
ret
sti
jb
sub
dec
nop
daa
xorl
scas
inc
aam
inc
xlat
mov
fcompl
or
jl,pn
pusha
pushf
or
mov
es
pop
inc
inc
insl
pop
xchg
stc
les
mov
iret
adc
imul
push
mov
movsb
jno
insb
add
xor
sbb
lods
mov
test
lret
or
pop
repnz
pop
adc
jge
jnp
pop
lods
data16
xchg
into
mov
ljmp
fdivrs
lret
pop
pop
testb
jge
loope
pop
sahf
dec
add
popf
push
mov
test
outsl
ficoml
stc
inc
sti
testb
dec
adc
jg
sahf
xor
rorl
mov
out
pop
inc
outsb
add
loop
mov
leave
add
shrl
outsl
jnp
aam
mov
push
push
or
mov
fstps
and
adc
jp
pop
cwtl
cmp
xor
xor
sahf
test
mov
dec
cltd
or
das
rcll
pushf
push
xlat
adc
adc
pop
mov
pop
sbb
or
xor
fwait
iret
cmpsl
push
imul
lods
adc
scas
mov
int
sti
cltd
jecxz
cmp
jb
and
mov
pop
lods
adc
and
dec
sbb
insb
mov
int3
fwait
orb
push
and
push
mov
pop
mov
pop
fldt
jp
pop
ficompl
mov
lds
jmp
iret
dec
pop
mov
jg
mov
in
adc
mov
jbe
jmp
jecxz
psubq
jns
frstor
cmp
mov
and
out
lahf
xchg
in
add
mov
pop
test
push
push
cmp
aad
outsl
lds
sub
inc
adc
mov
into
inc
push
xor
or
data16
push
mov
fistl
jp
mov
pop
and
scas
int3
std
je
push
daa
push
sbb
sub
and
inc
fmulp
repnz
test
out
les
mov
jle
jae
cmpsl
mov
js
scas
inc
cmpsl
inc
jl
jmp
lea
jbe
ss
ret
xchg
mov
cmc
add
loop
push
push
repnz
andl
and
aad
cli
adc
mov
cmp
fldcw
jbe
rcrb
jnp
out
gs
push
lods
cmp
xchg
sarb
pushf
cltd
and
cld
inc
mulb
mov
push
dec
xchg
mov
popa
xchg
inc
and
push
out
push
enter
inc
add
cmp
and
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
sbb
js
loope
out
dec
in
xchg
lea
cld
pop
enter
sbb
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
add
and
adc
jp
mov
insl
and
jmp
in
pusha
sbb
inc
mov
push
pop
fnstenv
test
pop
inc
add
jl
je
daa
out
int3
fadds
pop
or
je
jmp
jb
stc
adc
push
sahf
in
lods
lret
popa
movsb
adc
repz
cs
enter
sub
and
sbb
and
cmpsl
pop
in
loope
dec
mov
xlat
add
cmp
xchg
cmpsl
xchg
stos
jecxz
xor
sub
xchg
adc
xor
pusha
sar
sbb
ret
imul
mov
aad
mov
loopne
stc
pop
jp
pop
xor
movsb
int3
cmp
mov
test
outsl
inc
leave
loope
testb
gs
daa
cld
jb
aas
xchg
or
test
add
ss
pop
mov
