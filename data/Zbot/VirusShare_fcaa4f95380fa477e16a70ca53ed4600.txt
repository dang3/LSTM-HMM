idiv
incl
push
lcall
pushf
jmp
jno
dec
inc
test
add
mov
int
sti
incl
mov
adc
and
push
and
mov
add
and
or
and
xlat
sbb
and
mov
sub
into
mov
xor
inc
mov
cmpsb
jnp
frstor
add
rolb
inc
dec
mov
and
pop
dec
ret
mov
ds
add
sbb
or
mov
mov
adc
orl
dec
shll
xor
add
add
jle
adc
or
add
inc
aas
mov
aas
fst
add
and
pop
pop
leave
ret
pop
add
jnp
enter
mov
add
pop
pop
add
or
xchg
mov
pop
add
pop
xor
cmp
ret
push
and
les
sbb
out
add
add
std
mov
jmp
add
filds
sbb
mov
jle
xor
add
add
dec
adc
adc
jg
sti
lcall
cld
aad
mov
not
xor
jecxz
add
adc
loope
or
dec
sub
loope
push
loope
xor
sbb
imul
jge
add
clc
add
inc
or
test
pop
arpl
sbb
and
div
jg
loopne
xchg
and
movsb
mov
out
in
add
sahf
out
call
fisttps
pusha
and
push
sbb
add
jg
incl
testb
xor
pop
out
ret
subl
cwtl
outsb
out
sbb
in
psraw
pusha
and
fcmovnu
lss
push
inc
cmp
push
mov
out
lret
add
mov
adc
pop
pop
stos
and
jle
mov
adc
adc
and
mov
dec
xor
loopne
xor
cmp
add
and
mov
je
cli
insb
nop
cmc
test
lock
add
lret
stos
inc
pop
mov
test
test
and
cmp
testl
fwait
adc
adc
call
mov
outsl
shrb
or
push
aas
test
in
push
mov
or
dec
neg
mov
mov
jae
in
cmp
xlat
jne
jg
mov
sbb
clc
sub
or
mov
inc
pop
mov
add
adc
mov
aas
neg
fwait
jge
adc
mov
fisubrs
addb
adc
jo
xchg
inc
adc
adc
cmpl
fistl
push
inc
sbb
lahf
negb
aam
or
testb
mov
sbb
movsb
mov
xor
inc
neg
sbb
sbb
dec
cmp
xchg
fists
sub
lret
xchg
push
adc
mov
mov
lret
sar
shr
push
sbb
cmp
shl
neg
sub
adc
std
mov
mov
adc
not
into
mov
pop
fdivl
test
mov
sub
fisubs
push
in
mov
dec
fwait
mov
dec
fcomp
jae
not
mov
out
mov
lret
jge
push
inc
ficoms
outsl
jl
test
clc
dec
mov
not
mov
dec
movsl
dec
or
insl
push
add
lds
fisttpl
fsubl
ljmp
fcompl
insb
popf
nopl
mov
fistpll
jle
jne
andl
imul
add
stos
add
divb
xor
adc
test
add
mov
popa
imul
adc
js
fcmovnbe
lock
sbb
or
jno
pop
add
inc
dec
xlat
inc
xor
xor
jbe
mov
shl
add
sbb
test
adc
pop
jno
les
mov
pop
in
sbb
insb
in
mov
sbb
dec
shl
jmp
aad
pop
adc
or
push
fstpt
adc
sbb
mov
push
fdivl
or
fimuls
dec
aad
dec
ret
aaa
ret
ret
add
sar
mov
shll
bound
lds
test
fiaddl
out
add
imul
xor
outsl
mov
add
cmp
adc
pop
rol
jge
aad
bound
pop
inc
mov
fcomip
pushl
xchg
add
movaps
leave
cmp
push
lret
popf
xor
movsl
lcall
imul
mov
jp
inc
out
ljmp
std
stc
dec
test
cmpb
test
das
mov
xchg
inc
jno
fdivrs
fcomip
mov
inc
les
add
in
rclb
pop
outsb
sbb
test
lods
lock
repz
or
xor
sbb
mov
cmp
cmp
fs
leave
inc
dec
pop
les
or
ljmp
push
jmp
xchg
mov
iret
add
xchg
outsb
jl
imul
and
push
pop
jae
sarb
fistpl
jns
cmp
mov
dec
cmpsl
mov
pushf
add
push
jo
add
outsb
add
mov
and
fmuls
incl
outsb
aam
cmpsb
shl
xchg
xor
es
mov
xchg
sub
add
pop
push
add
sbb
lcall
mov
pop
jbe
cmp
mov
gs
jg
fildll
jg
dec
adc
sbbl
sub
call
xchg
inc
das
mov
xchg
sbbl
nop
push
lret
ret
adc
lcall
nop
inc
test
dec
xchg
fdivrs
sub
push
js
sub
pop
loopne
aaa
loope
fistpll
out
xor
cli
lahf
addr16
mov
mov
clc
aaa
lock
nop
roll
icebp
cltd
jp
mov
nop
sar
call
aad
setne
push
mov
popf
lret
into
mov
cmpsb
sar
stc
fbld
jbe
repnz
dec
ret
mull
or
fsts
fscale
push
aas
jg
decl
pop
shrl
aad
xlat
xor
in
fwait
out
mov
aam
enter
or
mov
mov
fadds
xor
popa
in
push
dec
and
aaa
clc
decl
mov
and
mov
mov
inc
jp
loopne
jg
dec
sub
inc
mov
add
pop
ljmp
cmc
clc
jmp
les
adc
xor
sub
ret
jmp
fists
jmp
push
lcall
mov
lcall
cvttps2pi
or
inc
movsl
and
in
int3
jg
mov
call
mov
stos
fimull
jno
ret
xor
incl
decl
fs
xchg
jecxz
push
dec
imul
stos
cwtl
jmp
or
cmp
outsb
jbe
lret
shrl
mov
rcll
je
imul
and
jl
jmp
incl
movsb
cmp
imul
das
adc
push
adc
sbb
jae
loop
lods
ss
mov
mov
and
inc
adc
call
inc
push
mov
out
pop
js
outsb
iret
nop
lea
enter
jg
in
add
adc
xor
mov
xchg
cld
call
or
mov
test
fstpt
sub
push
test
inc
das
cld
ljmp
int
flds
add
addl
int
dec
and
inc
cltd
cmp
mov
sbbb
add
imul
dec
out
not
lea
add
fsts
push
cmp
xlat
int
mov
loopne
adc
bound
repz
dec
fiadds
jp
sub
lods
jns
cmp
je
jle
into
dec
sbb
add
mov
sbb
mov
ret
lock
or
adc
mov
push
ror
add
test
fidivrl
add
or
lahf
or
xor
jge
jp
jae
rol
stos
mov
loopne
aas
mov
cwtl
xor
inc
and
dec
shrl
adc
xchg
in
std
adc
push
outsl
lock
stc
push
xchg
or
ja
lahf
gs
hlt
adcl
in
sarb
pop
shrb
sbb
cmp
insb
push
lock
arpl
sti
filds
mov
mov
or
shrb
arpl
dec
add
bound
ret
jl
mov
cmp
push
xlat
jmp
dec
inc
mov
mov
popa
add
loop
xchg
jge
or
fiaddl
push
data16
rolb
jb
dec
adc
rorb
outsl
repnz
pop
pop
cmp
aad
pop
bound
test
push
adc
adc
aas
jns
adc
mov
dec
test
push
mov
cmp
loopne
rolb
mov
aas
mov
add
adc
xor
mull
lret
add
adc
movsb
mov
xchg
imul
push
mov
shll
add
mov
push
scas
pop
decl
lea
push
push
or
ja
push
sarb
pop
in
pop
lock
shll
mov
test
push
hlt
stc
adc
out
lock
jle
lock
inc
add
adc
lea
jb
xor
data16
or
adc
sbb
jge
sub
pop
into
or
outsl
sbb
mov
fdivrs
data16
sbb
jo
ficomps
into
outsl
rcll
in
orl
mov
push
and
sbbl
mov
cmp
jle
sar
into
pop
add
imul
xchg
adc
cld
imul
lret
ss
sbb
loopne
sub
mov
and
xor
mov
mov
inc
push
dec
and
or
and
or
jp
cmpsb
and
mov
in
aam
mov
lea
jg
mov
mov
pop
mov
pop
out
push
adc
push
iret
movb
pop
xchg
mov
decl
fildll
xor
add
mov
and
cmc
xchg
clc
fwait
lret
daa
mov
icebp
jl
adc
roll
xor
stos
les
in
jmp
icebp
sbb
dec
xchg
and
pop
push
sbb
cmc
dec
cmp
popa
sti
les
fildl
roll
lds
sbb
mov
push
cmp
adc
mov
mov
hlt
xor
jecxz
ljmp
mov
mov
adc
insb
mov
addl
adc
scas
notl
jb
add
mov
mov
lret
stc
frstor
ret
and
inc
loope
loope
mov
arpl
insl
in
sub
pop
call
daa
lcall
fcmovu
add
ror
cmp
cld
push
rol
fcoms
lcall
fstpt
push
dec
popf
pop
and
outsb
sub
add
test
sbbl
lods
jne
xchg
leave
or
sahf
sub
test
outsl
aaa
pop
fsubrl
inc
dec
or
loope
add
je
rorb
pop
decl
call
std
and
imulb
jecxz
xchg
mull
pop
dec
aam
data16
lds
pop
inc
nop
and
pop
sbb
scas
dec
leave
xlat
lcall
loopne
jo
xor
sti
das
icebp
decl
inc
pop
outsb
ds
cs
jecxz
adc
xchg
add
pop
push
xor
xchg
mov
in
lods
nop
dec
lock
adc
std
mov
cmp
loopne
scas
test
out
fidivs
pop
push
or
push
and
test
mov
call
nop
and
test
std
cmc
push
push
dec
push
add
sub
or
mov
jo
push
imul
gs
mov
sub
xchg
nop
mov
das
add
mov
mov
or
mov
filds
jg
pop
std
out
mov
out
sahf
jge
mov
call
ljmp
fistl
sub
adc
adc
pop
adc
call
shlb
add
cli
repz
pop
mov
test
test
out
cmp
jl
ljmp
sbbb
xor
or
out
sbb
ss
push
pop
sbb
pushl
xor
nop
aad
rcrl
add
mov
insl
pushl
or
rolb
cli
mov
mov
fisttps
rolb
and
add
divb
fs
jo
lea
mov
in
add
add
or
push
loopne
jns
arpl
sub
insl
inc
pusha
jbe
mov
pushl
inc
mov
jg
sub
mov
rclb
jmp
mov
aam
aaa
inc
inc
repnz
in
inc
imul
jae
jbe
clc
scas
pop
sbb
inc
into
add
cwtl
aas
xor
repz
loop
adc
mov
dec
sub
int3
mov
jl
fcomip
icebp
repz
and
push
cmp
xchg
test
xor
call
arpl
xchg
mov
mov
pop
fdivs
negl
cmp
xchg
insl
jl
das
clc
in
rorl
popf
iret
fwait
test
ds
dec
mov
or
test
les
aaa
repz
mov
call
icebp
and
adc
and
in
mov
jg
psubb
in
push
or
cmpsl
clc
sub
push
xchg
pop
cmpsb
idivl
or
ds
jge
mov
out
jns
bound
rorb
cld
sbb
ljmp
pop
mov
add
xchg
iret
sbb
imul
lods
cmp
jge
int3
int3
jp
in
push
or
add
insb
inc
jecxz
test
mov
mov
mov
sub
adc
mov
mov
add
jbe
out
adc
dec
pop
dec
or
jg
jmp
pop
icebp
mov
jecxz
cmp
mov
loope
xor
or
jp
xor
addr16
and
fisubrl
out
jl
push
xchg
push
loope
pop
push
fadd
pop
pop
mov
pop
out
dec
mov
push
pop
jle
cli
mov
xor
mov
pop
add
jne
sbb
add
sbb
mov
cmc
pop
pusha
mov
insl
xchg
sbb
popl
std
in
mov
das
sysret
mov
dec
mov
dec
jo
icebp
inc
out
ljmp
or
add
cld
sahf
mov
pop
in
js
sbb
pop
les
fbstp
inc
inc
testl
xor
sbb
lcall
jg
cmpsl
mov
lahf
lret
inc
dec
push
fiadds
jge
test
cmc
imul
pop
push
adc
jo
movsl
mov
imul
fstpt
movsl
loopne
mov
je
pop
cld
pushl
andb
ret
dec
sbb
sub
push
jg
sti
outsl
hlt
jg
cmp
test
mov
mov
fdivrl
and
cwtl
scas
mov
jg
sub
dec
ret
ret
test
jg
aaa
push
xchg
add
lock
shr
or
and
pop
icebp
lcall
or
jge
adc
cmp
pop
dec
push
fnstsw
adc
mov
xchg
bound
mov
std
dec
mov
ljmp
shll
lods
sti
pop
pusha
bswap
cli
stos
lods
add
inc
jb
jno
test
scas
pop
cltd
lahf
push
mov
stos
mov
and
andl
mov
pop
inc
jbe
or
jo
mov
add
pop
popf
jecxz
fimuls
repz
adcb
repnz
mov
movsb
mov
ficomps
push
xor
xlat
jb
push
and
xor
outsl
ja
fisttpl
test
imul
dec
and
inc
adc
decl
lcall
mov
push
xchg
xorps
add
stos
js
jg
mov
hlt
in
adc
inc
and
add
dec
into
or
cltd
add
clc
mov
je
xlat
push
push
mov
jg
addb
rcrb
fs
mov
rcll
xor
mov
push
cld
lods
xchg
les
jp
ljmp
pop
or
dec
add
dec
mov
and
mov
cs
mov
int3
lcall
sti
push
adc
mov
mov
xchg
xor
mul
sub
jp
std
jecxz
push
adc
int
loop
push
fs
or
inc
stos
fdivrs
rcrl
cmpb
sbb
mov
mov
fstp
jb
in
fdivrl
mov
add
sbb
or
and
in
pop
mov
lret
call
into
dec
sahf
std
sbb
std
mov
decl
adc
adc
out
leave
iret
testl
addl
decl
pop
stos
dec
lret
insb
xchg
pushf
xor
adc
mov
lods
xchg
jo
scas
ret
aad
xchg
and
cmpsl
push
subl
mov
imul
test
cli
dec
and
add
dec
cmpsl
mov
jl
mov
lcall
lods
xchg
cld
rcr
icebp
and
or
adc
xor
add
icebp
mov
add
insb
adc
into
push
loope
push
les
outsb
jmp
push
fistl
mov
sub
call
stos
mov
clc
call
cmp
lock
jo
mov
mov
mov
rcll
lahf
dec
push
in
xchg
add
or
add
stos
dec
mov
dec
cld
jg
sbb
sub
mov
inc
es
inc
push
repz
and
mov
inc
adc
movl
push
lret
gs
sahf
fwait
pop
mov
xchg
adc
dec
sub
push
adcl
inc
fbstp
icebp
pop
or
sub
mov
cltd
popa
xor
rcrb
int3
dec
std
push
dec
adc
cmpsb
xchg
jb
and
shlb
jmp
aas
pop
mov
test
dec
xlat
sbb
fidivrs
jge
or
push
mov
lcall
pop
es
pop
xor
notb
cmc
dec
xor
pop
pop
lods
sub
sub
dec
pop
mov
and
mov
cmp
xor
jge
jb
mov
fsubrl
je
pop
int
pop
xchg
xor
out
aaa
xor
stos
sub
inc
fwait
insl
aad
mov
daa
and
in
dec
sub
std
outsb
mov
sbb
mov
in
sbb
xchg
add
inc
lret
add
dec
xor
aad
adc
push
fsubs
ficompl
les
adc
fdiv
addb
xorb
in
sbb
xor
cmp
xchg
sub
jne
add
jae
add
mov
pop
fsubp
out
xor
push
mov
adc
xor
jp
ret
fildl
mov
xor
ret
xchg
jo
xchg
out
inc
xchg
and
test
enter
hlt
push
add
push
push
fdivs
push
dec
jo
sbb
jno
out
adc
ja
loopne
mov
stos
cli
mov
push
or
clc
add
data16
dec
in
stos
rorl
cmp
testl
pop
cmp
lret
jno
sbb
movsb
or
or
cld
cmp
lea
popa
mov
cmp
push
pop
fsubr
and
out
push
test
popa
stc
pop
mov
xor
push
notb
add
xor
sub
loope
add
xlat
jns
data16
sub
and
addr16
shl
sbb
icebp
insb
pop
push
mov
stc
imul
mov
stos
inc
add
jne
and
cmp
push
and
movsl
jecxz
std
mov
cld
mov
addl
xchg
xor
jecxz
daa
cmp
dec
xor
pushf
out
lds
fmul
test
add
call
bound
cmp
ja
dec
push
mov
roll
int
scas
xchg
rclb
jge
std
mov
ds
fs
and
loopne
popf
loopne
adc
and
test
push
adc
dec
and
dec
ljmp
int
stc
sti
or
xor
sbb
pop
insl
pusha
ja
jmp
insl
jnp
sbb
inc
pushf
ss
add
and
test
add
lock
les
push
xchg
mov
int
xor
in
mov
cmc
fdivs
push
add
inc
jmp
rcl
mov
pop
and
inc
add
jne
add
pop
or
cmp
shrl
loope
mov
add
test
push
mov
sbb
add
pop
jecxz
pop
fistps
sbb
fsubrl
and
and
push
int
bound
add
xchg
and
pop
lock
jmp
xchg
or
daa
mov
test
in
rolb
pop
packuswb
lock
and
sbb
adc
ja
or
jno
cmp
add
sub
pop
loopne
inc
bound
or
adcl
arpl
negb
outsb
hlt
xor
lock
out
jl
mov
movsb
iret
dec
inc
pop
mov
or
mov
sbb
push
cld
dec
int
lds
jbe
lods
aaa
ret
inc
or
xor
push
mov
push
lds
dec
pop
lock
push
or
add
fucomip
jno
aam
mov
and
or
lods
shll
mov
xor
sti
loope
movsb
adc
loopne
out
add
xchg
pushf
es
fldenv
xchg
in
js
mov
jl
in
xchg
pop
mov
pop
sub
pop
mov
push
daa
fcoms
pop
shlb
ret
loopne
repnz
dec
in
jne
lea
xor
cwtl
and
xorl
pop
cmp
in
out
pop
jne
loope
mov
adc
loopne
fidivrs
dec
loopne
fldcw
add
push
jmp
mov
push
dec
in
aas
mov
clc
sub
mov
adc
inc
xor
fisttps
push
sbb
and
add
or
xor
pop
fistps
imul
arpl
jns
mov
push
add
jb
mov
sub
push
scas
and
in
fisttps
push
xor
arpl
stos
pushf
popa
cmp
sub
in
es
or
or
xchg
popf
xor
adc
sbb
or
stos
sbb
add
push
jae
repz
jns
pop
jno
ror
add
ljmp
sub
dec
or
orb
sbb
mov
dec
mov
into
adc
sub
lock
ljmp
mov
mov
int3
adc
adc
add
aas
or
les
ljmp
loop
in
xor
xor
push
popf
xor
xor
sbb
push
mov
jns
adc
inc
xor
xor
inc
mov
or
dec
fisubl
fldcw
orl
out
in
xor
xorb
push
mov
sub
dec
pop
cmpsl
or
mov
lods
fdiv
hlt
in
push
scas
lea
stc
xlat
xor
jg
dec
fsubrl
fldcw
popa
leave
cmp
jmp
cwtl
push
or
ficoml
push
xorl
cltd
in
stos
popa
jae
and
in
stos
lahf
pop
dec
inc
pop
inc
sub
int
sbbl
xchg
mov
fwait
cmp
rcrb
mov
loopne
neg
sbb
pop
xor
dec
push
aam
jecxz
scas
into
sbb
nop
dec
shlb
jns
xchg
js
adc
imul
lock
inc
adc
jle
and
add
jmp
in
dec
fstpl
pop
pop
out
and
aas
mov
xor
shlb
mov
dec
jle
sub
dec
mov
call
mov
fsts
popa
or
jle
and
dec
mov
pop
jp
cmp
xchg
sbb
sbb
push
push
xchg
add
xchg
inc
cmc
add
enter
in
pusha
mov
add
xor
lods
jle
dec
add
jg
inc
or
fwait
and
or
mov
nop
out
lcall
pop
jmp
cmp
punpcklbw
adc
and
std
add
adc
pmaxsw
mov
fldenv
rcl
testl
in
add
add
aas
pop
aas
testb
in
sub
sbb
stos
mov
test
mov
sbb
xor
dec
jl
add
lret
cld
pushf
aad
scas
sbb
ret
scas
mov
rcll
push
sub
lods
sbb
test
push
lock
xor
inc
push
dec
out
or
sub
into
sub
dec
or
inc
lods
in
icebp
jp
pop
and
cmpsb
dec
test
les
inc
jne
mov
and
xor
rcr
sar
or
pop
imul
and
mov
jp
lret
dec
popf
pop
xor
add
mov
or
lock
mov
mov
sbb
popa
lock
fildll
cmpsb
lock
add
xchg
sbb
subl
sbb
add
push
push
jle
addb
inc
jp
push
lret
fs
mov
inc
jb
and
pop
lock
fcomps
lcall
ret
aas
imul
cwtl
scas
loopne
hlt
ss
sbb
mov
or
xor
int
jp
or
je
cmpsb
dec
outsb
fadds
and
push
test
addb
sbb
lret
jnp
and
dec
adc
pop
pop
rclb
xlat
adc
sbbl
pop
sbb
add
or
lret
sti
jmp
loop
sbb
insb
cld
lret
add
add
outsb
inc
insb
push
xchg
dec
sbb
add
jle
and
push
sbb
xchg
pop
lcall
adc
fdivr
adc
movsb
pop
movsl
cli
roll
add
xor
cwtl
shlb
xor
pop
push
decl
xchg
pushl
ret
or
adc
and
pushf
lds
sbb
mov
pushf
xchg
cmp
mov
and
jb
inc
mov
xorl
outsb
arpl
scas
data16
cmpsb
lea
rcrl
sub
sub
nop
xor
push
je
jne
rolb
cmp
dec
bound
aas
lret
push
add
popf
rcrl
inc
loope
push
outsb
shlb
sub
jbe
mov
sbb
xchg
cmpxchg
sbb
test
adc
jge
mov
fdiv
adc
pop
fsubl
adc
test
sub
repz
jbe
dec
gs
pop
jmp
or
sub
push
or
mov
or
mov
inc
push
or
sbb
mov
andb
test
xor
add
int
cltd
adc
leave
cmpl
sarb
and
loopne
push
ds
cmp
sub
dec
add
cwtl
mov
mov
rorb
sbb
sahf
sar
add
aam
add
mov
mov
pop
clc
aas
out
mul
es
loopne
mov
add
rcrb
es
mov
add
stos
or
lcall
lcall
andb
out
cmp
je
jge
cmp
mov
sbb
jg
jg
dec
fwait
sub
cmc
add
xorb
xchg
leave
add
sub
push
fstpt
push
in
or
sbb
dec
mov
add
jns
bound
xor
inc
dec
add
insl
dec
inc
xor
push
enter
push
sub
push
add
and
cmp
ret
sahf
push
sbb
cmpsl
daa
loope
lods
pop
xor
mov
sbb
mov
lahf
push
dec
mov
popa
lods
push
out
hlt
xor
das
std
outsl
aad
add
enter
xor
xchg
push
adc
mov
loope
dec
mov
xchg
out
sbb
adcb
js
pop
vmovmskps
pop
fisttps
movsl
pop
cltd
aam
or
loopne
fcmovu
inc
ffreep
cmp
repz
cs
test
jmp
push
cmp
add
cld
pop
dec
lahf
jbe
and
std
or
imul
call
fistpl
imul
add
xor
arpl
sub
pusha
sbb
cmp
mov
out
add
sub
pop
ja
inc
dec
das
xor
add
rdtsc
hlt
xor
inc
and
sbb
mov
jl
mov
xor
or
loope
cs
sbb
pop
sti
dec
in
into
mov
add
adc
push
mov
andl
test
clc
lds
js
flds
dec
divb
incl
icebp
int
aas
cld
hlt
adc
hlt
xor
cmpsb
mov
or
sub
mov
mov
add
sbb
adc
inc
push
and
sahf
xor
rolb
pop
pushl
ficompl
lock
decl
pop
cld
mov
shll
pop
cmpsb
cmp
push
in
inc
add
xor
inc
mov
popa
pop
aaa
aad
fbld
cmp
mov
into
je
jb
pop
orl
dec
jg
jg
stos
and
test
repnz
pop
cwtl
push
lods
or
jbe
insl
xorl
and
scas
push
mov
outsb
adc
aam
pop
cld
fcmovnb
scas
push
or
xor
mov
aas
pop
lea
xor
icebp
pop
clc
or
incb
dec
pop
or
ss
arpl
dec
repnz
inc
pusha
inc
lods
fnsave
cmp
push
fwait
jno
das
clc
call
add
jno
ds
idiv
mov
outsl
xchg
push
xchg
in
jge
insl
dec
and
and
loope
bound
insb
adc
mov
or
adc
xchg
add
and
test
xor
pop
cmc
std
or
outsl
aas
std
pushl
add
inc
pop
cmp
sbb
test
aas
and
in
and
jle
push
jg
mov
pop
jns
pop
cmp
fldl
mov
jb
mov
xchg
or
or
sbb
mov
mov
push
clc
xchg
outsb
loopne
cmp
stc
movsb
mov
xchg
outsl
fstp
adc
jmp
mov
pop
int3
push
lock
sbb
mov
sub
inc
je
pop
add
xor
test
shrd
sub
adc
out
out
loopne
push
sub
xchg
add
xchg
mov
adc
pop
inc
pushf
push
sub
rolb
mov
ret
pop
pop
cmc
clc
mov
fsts
hlt
pop
sub
add
inc
push
les
lea
out
les
adc
clc
sbb
les
adc
repz
push
sub
xchg
inc
mov
jl
mov
sbb
push
cmpsl
in
inc
pop
divb
sbb
xchg
xor
mov
or
inc
daa
es
les
sub
and
idivl
mov
lds
sbb
repnz
psubusw
lcall
cmp
es
loope
jnp
push
cmp
dec
cwtl
pop
push
orl
mov
adc
ret
out
mov
pop
adcb
out
xorb
add
addb
test
xorl
sub
outsl
inc
out
add
cmp
cmp
or
inc
push
rol
lock
push
or
hlt
fdivrs
shrb
das
mov
cmp
cli
mov
repnz
push
inc
jecxz
call
pop
testl
and
sbb
out
jle,pn
pushf
in
mov
aad
sub
mov
cld
add
pop
stos
sbb
test
push
cwtl
pop
xchg
jg
cmp
add
dec
jo
mov
mov
enter
lcall
mov
mov
leave
pop
mov
sub
fimull
mov
inc
aas
pop
ror
in
mov
or
push
ds
inc
insb
mov
add
shr
sbb
shr
xchg
or
out
lcall
std
xor
sbb
ret
shl
cmp
mov
add
add
mov
add
sub
std
int3
push
or
adc
addr16
in
cmp
les
mov
mov
mov
loopne
dec
pop
orl
add
cmp
cmp
aaa
dec
mov
dec
fistpll
adc
fdivl
add
jge
push
dec
push
dec
rolb
in
sub
mov
xchg
mov
outsb
or
mov
add
add
adc
inc
and
mov
std
and
cmp
xor
sub
mov
jae
and
ret
add
inc
jmp
les
xor
popa
loop
out
lock
mov
cli
sti
push
mulb
popa
or
incl
jb
mov
cmp
pushf
mov
sbbb
js
sbb
inc
add
sbb
scas
dec
cli
sub
mov
xor
data16
ss
cmpl
addl
pop
push
or
and
mov
je
mov
push
leave
inc
decl
leave
pop
mov
dec
es
test
pop
fistpll
repz
adc
xlat
leave
aas
jecxz
ljmp
cld
call
jg
mov
outsl
mov
add
dec
or
popf
or
pop
clc
call
mov
push
int3
scas
hlt
scas
xor
fadds
pushl
sti
jl
imul
or
and
lahf
sar
mov
out
adc
cmp
xchg
ffreep
and
in
mov
cs
mov
arpl
sahf
push
and
jmp
mov
sub
cmp
mov
aad
mov
dec
cmpb
sti
dec
xor
inc
jg
pop
add
sub
out
add
gs
decl
leave
mov
lahf
imul
shll
sub
adc
ljmp
xor
pop
mov
mov
sbbb
jmp
into
in
ret
mov
scas
stos
in
cld
sbb
aaa
cld
lcall
mov
jle
ds
cltd
gs
lods
add
loop
jg
lahf
jno
push
jmp
nop
mov
inc
call
ss
fidivs
mov
cwtl
les
jle
mov
lds
add
das
jb
rcrl
addl
adc
dec
xlat
out
add
jno
or
jl
mov
and
adc
lods
popl
in
test
pop
pop
push
add
and
jne
pop
testb
and
push
pop
sub
test
mov
pusha
call
xchg
dec
shrb
repz
movsb
pop
and
repnz
add
mov
mov
add
add
in
sub
push
out
xor
pop
cltd
stc
mov
dec
dec
pmaxub
movb
inc
inc
out
sbb
and
inc
or
arpl
jl
adc
ret
cmp
pop
inc
out
in
cmpsb
add
lods
es
mov
xchg
or
enter
sbb
pop
fsubrs
in
ret
jb
ljmp
mov
movsl
xlat
ret
movsl
rolb
pusha
cli
jecxz
mov
inc
fidivrl
test
pop
add
icebp
dec
push
adc
shll
dec
inc
add
sub
sub
js
inc
xchg
testl
es
js
mov
push
in
mov
add
xlat
fisubrs
xlat
ja
imul
pop
lods
add
pusha
xor
dec
push
adc
xor
jne
mov
les
shlb
outsl
inc
xchg
mov
test
mov
add
aaa
and
or
and
sti
ret
xor
fcom
mov
std
push
mov
nop
cmp
cmp
fbld
loope
xchg
icebp
punpcklbw
daa
repz
jno
mov
xchg
pop
rcl
in
jbe
inc
das
stc
inc
andb
and
movsb
loopne
in
aam
bound
adc
insb
or
xor
pop
fs
shrb
mov
sub
mov
orl
mov
in
and
daa
out
add
sti
add
stos
fsubs
dec
in
or
dec
call
mov
and
outsl
lods
add
sbb
jg
or
xor
stc
ss
aam
mov
and
inc
insl
in
cld
push
or
push
scas
jecxz
add
lret
inc
data16
jns
movsb
clc
fists
fucomip
incl
loopne
rorl
sbb
cmp
fiadds
movd
jbe
clc
ljmp
pshufw
jge
dec
in
jb
sbb
xchg
add
insl
stc
lcall
xor
xor
adc
xor
mov
sbb
repz
jg
ljmp
and
mov
jp
subl
push
jmp
mov
jle
inc
jb
mov
push
stos
cmp
mov
mov
fistpl
pop
push
enter
movsl
and
rolb
inc
cmpsb
imul
fcomip
insl
ljmp
sar
pop
and
cmp
inc
push
fisttpl
inc
sub
dec
out
lcall
or
scas
add
cwtl
sbb
pop
jge
call
mov
test
xchg
leave
repz
cmp
cld
popa
mov
aaa
sarb
mov
and
out
mov
mov
loop
sbb
and
imul
xchg
xor
fs
push
incl
cs
mov
call
lret
and
ret
in
mov
add
mov
inc
outsb
and
outsb
add
loop
inc
lahf
sub
pop
push
mov
xlat
sub
mov
cmp
dec
add
dec
insl
aad
pop
mov
adc
in
mov
dec
pop
and
mov
xor
mov
add
pop
decl
enter
jno
push
sbb
mov
jmp
xor
std
fucomip
xchg
inc
mov
movsb
fsubrs
cmp
int3
adc
das
xchg
xor
add
push
push
mov
add
je
mov
jo
push
lea
dec
popa
pop
add
js
push
insl
jmp
pop
and
mov
rolb
in
sub
in
outsl
pop
js
getsec
test
pusha
push
lret
mov
cmp
mov
mov
cli
mov
fcompl
sbb
mov
mov
push
decl
outsl
push
xchg
call
imul
and
arpl
pop
enter
dec
xchg
test
cmpsl
push
shll
sub
idivb
adc
sbb
jg
aam
mov
xchg
or
stos
fdivs
ret
je
add
clc
inc
insb
pop
mov
icebp
add
mov
data16
jae
daa
cltd
arpl
jle
lds
mov
add
pop
xor
xor
ret
loop
outsl
ffreep
push
int3
daa
pop
sarb
andl
leave
lds
mov
xchg
fmull
jbe
or
jmp
jae
in
mov
pop
cmp
gs
xchg
or
sbb
pop
and
outsl
call
mov
int
mov
das
rclb
loopne
movsl
add
jle
add
cmp
inc
xchg
cmp
aad
lcall
add
outsl
ret
mov
xchg
xchg
cmp
jmp
lds
aas
mov
jb
loopne
outsl
and
mov
js
mov
pushf
mov
testb
jle
push
pop
sub
incl
pop
lock
add
ds
sub
out
mov
cld
leave
xor
lcall
lret
adc
add
sbb
rolb
lret
pop
popf
sbb
scas
sarl
jbe
pop
or
xor
push
dec
incl
cmpl
cwtl
xchg
mov
rorl
and
mov
xor
subl
adc
pop
outsl
and
jg
jmp
or
jns
stos
mov
sub
add
pop
jl
arpl
ljmp
mov
inc
or
xor
outsl
pop
and
mov
mov
or
inc
xor
adc
loopne
ljmp
add
dec
rol
test
into
dec
pushf
cwtl
rclb
xorl
test
ljmp
shlb
sbb
and
test
push
mov
adc
sub
or
add
loope
call
pusha
fcomp
inc
in
std
pop
and
clc
or
outsl
std
adc
and
ljmp
insb
or
mov
bound
imull
mov
jmp
push
mov
sub
aam
stos
popf
xor
pop
jle
cmp
out
push
push
and
shrb
aaa
lret
jg
mov
xchg
sbb
push
push
xchg
lods
daa
cmp
loope
mov
leave
xchg
or
orl
fstp
idivb
push
pmaxsw
xchg
mov
and
or
sbb
iret
jecxz
fwait
decb
mov
add
mov
cltd
je
subl
sub
rclb
sti
jp
inc
lods
jno
jns
sub
idivl
notl
fstpt
adc
push
push
aad
mov
gs
out
dec
mov
ja
mov
push
out
cmp
or
sti
mov
int3
and
or
scas
xor
pop
cmc
xchg
clc
stos
xchg
call
imul
scas
dec
dec
outsl
shr
scas
fwait
pop
insl
pop
adc
cwtl
shll
mov
sbb
adc
arpl
call
push
fists
mov
sar
mov
das
jae
inc
sub
dec
xor
xor
sbb
loopne
outsl
filds
add
in
pop
inc
int
sub
or
mov
incl
mov
movsl
inc
xchg
addb
adc
cltd
arpl
in
cmp
pop
adc
sbb
andl
cli
jmp
jnp
clc
jg
add
cmp
cmp
pop
jl
sbb
jg
aaa
xchg
popl
cmp
adc
mov
mov
xchg
sar
push
mov
inc
lcall
movsb
fistl
pop
movups
dec
nop
adc
popa
into
mov
jg
shrb
loopne
jmp
bound
sarb
mov
test
lcall
and
imul
lret
xor
mov
inc
mulb
int3
fistpll
fsub
repz
jl
ljmp
fsubp
push
decl
int
popf
push
ljmp
inc
mov
mov
or
add
or
mov
mov
add
mov
jmp
leave
ja
or
dec
add
test
jns
je
std
add
pop
dec
xor
lds
jne
or
outsl
mov
jmp
dec
addr16
sbb
out
std
mov
invlpg
jg
imul
cmp
mov
jbe
dec
das
shrb
and
movsl
mov
push
scas
fucomp
mov
and
test
xor
mov
and
xor
jp
xor
pusha
sub
cmc
fisttps
scas
xchg
push
and
in
mov
cmpl
cld
xchg
xlat
cmp
mov
or
xchg
pop
add
loope
adc
clc
ljmp
addl
jbe
jge
or
adcb
pop
dec
xor
xchg
call
imulb
add
iret
xor
insl
add
out
sbb
dec
int3
jne
ss
sti
shrb
sbb
addb
mov
loope
xor
mov
inc
aaa
push
sub
add
mov
call
daa
xor
add
adc
ds
add
mov
enter
sbb
test
push
pop
ss
or
or
cmp
mov
fidivl
in
and
sbb
sbb
pop
mov
inc
add
adc
xchg
pop
outsb
inc
xchg
neg
push
sbb
or
sbb
xchg
xchg
mov
mov
fisubs
inc
cmp
push
bound
add
cmp
sbb
movsl
inc
icebp
push
mov
pop
clc
popf
adc
lea
jnp
call
jl
inc
xchg
clc
cmpsl
add
push
lea
push
and
insl
icebp
mov
mov
clc
leave
clc
lods
mov
stc
cmp
cmp
or
icebp
jecxz,pt
das
hlt
jbe
pop
cmp
ds
cli
mov
jo
adc
sarb
lea
xchg
jl
jecxz
jecxz
jb
pop
ljmp
ds
xor
jecxz
mov
pop
mov
cwtl
pop
dec
dec
mov
adcl
and
lock
push
jmp
push
outsb
push
pop
addb
inc
push
mov
sub
imul
jns
jmp
pop
test
arpl
pop
pop
rcl
pop
insl
aad
stos
adc
inc
aam
loopne
outsl
fbstp
int
add
or
ds
adcl
inc
fldcw
rorb
fs
inc
call
adc
dec
jl
xorl
test
pop
and
pop
nop
test
cld
ljmp
aaa
loop
jne
pop
or
in
ds
leave
dec
call
mov
pop
pop
mov
dec
icebp
je
and
lods
push
cmp
jno,pn
cld
push
ret
rorl
sahf
orl
mov
icebp
push
dec
movl
pop
ss
xchg
data16
mov
jl
cmp
mov
aam
cli
fwait
mov
es
mov
jmp
aam
ret
jae
stc
jno
lock
pop
arpl
pop
jecxz
inc
incl
jmp
inc
test
sub
adc
adc
pop
add
jge
roll
and
out
inc
fmull
ret
jl
pop
jmp
add
outsl
jo
sbb
jmp
xchg
in
jl
mov
mov
or
sub
and
lret
test
cld
adc
loop
jmp
and
xor
lock
add
adc
push
mov
jns
xor
popa
pop
ret
sbb
enter
std
pop
decl
sub
pushf
das
mov
roll
lcall
aaa
data16
mov
push
jae
mov
movsl
mov
push
rcl
in
adc
inc
hlt
and
mov
loopne
test
out
inc
movsl
test
xchg
cli
outsl
sarb
ret
inc
mov
pop
in
or
les
rcr
inc
arpl
pop
mov
lret
ret
xchg
jno
jne
shlb
mul
cli
push
sarl
ljmp
add
mov
fsubs
pop
int
jmp
ficoml
xchg
imul
insb
mov
cpuid
outsl
insl
std
push
xchg
stos
dec
pop
mov
pop
lret
push
outsl
mov
test
jecxz
fildll
iret
leave
test
decl
decl
shlb
xchg
int3
dec
test
leave
mov
inc
cs
dec
pusha
fimuls
lret
enter
aaa
sub
sbb
mov
fstps
stos
ljmp
push
aam
pop
pop
fistpl
sbb
xor
jle
ljmp
or
mov
out
mov
loop
rorb
push
incl
sahf
call
lahf
int3
repnz
outsl
cld
xchg
cli
test
and
sub
lcall
cs
inc
mov
adc
movsb
inc
andl
test
or
mov
dec
inc
or
pop
scas
loopne
bound
fstl
or
add
mov
leave
dec
sbb
xorl
movsb
add
js
arpl
mov
push
mov
data16
adcb
add
sub
push
aam
repnz
push
jge
lock
fcmovnb
les
sbb
xor
or
fmull
jo,pn
pop
xor
add
stc
push
fistl
shrl
and
adc
xchg
jge
icebp
dec
fcoml
xchg
and
sub
sub
jns
pop
mov
mov
dec
and
test
or
sub
inc
jl
mov
push
or
dec
mov
lock
sbb
xchg
xor
add
mov
data16
inc
lret
or
mov
dec
cmp
add
jnp
mov
test
jl
pusha
loop
mov
rorb
push
xor
data16
les
dec
imul
fcmovnu
cmpsb
pop
sbb
mov
shll
shrl
push
loope
xor
xor
bound
cmpl
adcb
test
jo
pop
mov
and
movb
mov
adc
lea
iret
cmp
ret
movsb
sub
mov
add
lds
jmp
mov
sarl
ds
fildl
push
cmp
cmp
iret
dec
movl
cmpb
sbb
lret
jecxz
addr16
push
adc
xchg
and
and
mov
rorl
andl
dec
inc
stc
mov
ret
pushw
mov
jnp
std
repz
lahf
add
xchg
add
cmpsb
sub
mov
enter
jae
insb
addr16
out
lock
xor
pop
pop
xor
lds
sub
in
aad
jbe
fdivp
scas
pop
mov
sbb
jmp
test
jae
jmp
sbb
pop
mov
clc
jmp
test
or
mov
mov
shll
pusha
and
dec
dec
sbb
in
push
xor
loopne
rcl
fldcw
inc
jecxz
adc
shrb
adc
push
xchg
mov
inc
hlt
movsl
sbb
ss
les
outsb
in
in
ljmp
dec
jno
mov
dec
test
or
arpl
dec
jb
ja
inc
sub
add
dec
lret
sub
popa
push
movsl
hlt
outsb
mov
cmp
and
gs
xchg
dec
test
push
or
jg
rorb
int3
sub
sub
arpl
sbb
jo
push
and
addb
xchg
push
hlt
mov
outsb
mov
lret
int
es
xchg
jne
inc
sbb
or
pop
test
mov
xor
lcall
and
imul
sbb
sbb
mov
das
imul
jmp
xor
adc
aam
sbb
sub
icebp
popf
adcb
sbb
push
pop
push
dec
cmp
mov
mov
xor
push
inc
adc
pusha
push
inc
cmp
push
dec
test
pop
cmp
inc
cmp
cmp
inc
add
das
mov
mov
call
pop
xorl
add
push
sub
stos
clc
mul
fnstcw
inc
sub
cmpl
adc
push
inc
and
jns
pop
adc
add
jge
sbb
fwait
sub
insb
call
cvttsd2si
add
adc
jo
inc
rclb
es
data16
mov
sbb
fadd
inc
test
or
fdiv
pop
mov
adc
enter
adc
lods
pop
mov
xchg
push
pop
dec
jne
daa
xor
fadds
lea
cs
sbb
dec
aaa
shll
insb
push
ss
fdiv
or
dec
pop
fwait
hlt
flds
and
jnp
incl
lret
dec
push
xchg
jo
add
cmp
push
aas
mov
cmp
dec
ficompl
sbb
mov
test
cwtl
sarb
sarl
mov
andl
push
jae
div
jp
mov
cmp
mov
cmp
data16
xor
jo
in
fucomi
lea
pop
add
or
pop
je
iret
dec
call
jmp
add
mov
inc
add
adc
mov
or
out
sbb
jmp
out
push
cltd
xchg
cmpl
jo
dec
out
sub
icebp
lds
sub
out
add
push
fcoms
sub
sub
xlat
jbe
xchg
lods
push
push
adc
scas
add
and
add
test
stos
push
xor
add
inc
adc
test
lock
push
jo
adc
lods
rcrb
sub
push
in
lods
push
mov
mov
in
xor
mov
inc
aaa
jmp
daa
ret
add
ret
push
jno
je
cmp
je
lods
mov
fbstp
sbb
icebp
addr16
sbb
mov
xorb
and
xchg
data16
sbb
dec
iret
loope
cld
xor
into
mov
inc
cmp
adc
stos
pop
mov
mov
sbb
subl
leave
mov
cmp
sbb
outsb
jmp
test
lret
add
sbb
loop
dec
lods
mov
in
les
ret
cltd
incb
mov
jo
rorl
mov
inc
cmpsl
pop
dec
xchg
push
adc
ss
or
lods
sbb
outsb
lock
das
adc
imul
sar
lods
jno
push
cmp
mov
inc
insb
or
mov
inc
xor
or
pop
mov
sub
pop
je
push
jnp
arpl
cli
incl
jmp
xor
push
push
or
scas
int
in
ret
dec
inc
xor
add
mov
push
sbb
pop
es
aaa
loop
lea
adc
leave
add
and
loopne
dec
je
sbb
dec
mov
mov
je
sti
adc
mov
dec
mov
sub
aaa
in
mov
adc
pop
mov
sub
dec
ret
jno
bnd
fisttpl
xchg
repz
mul
das
aam
xor
popa
in
aas
adc
lcall
aaa
out
mov
mov
orl
or
or
dec
push
stos
mov
sub
or
add
lret
add
mov
adc
add
icebp
adc
inc
push
add
sbb
sbb
lret
inc
movq
int3
fcoml
jmp
aaa
repnz
pop
mov
or
inc
pushf
mov
dec
pusha
inc
jno
adc
pop
mov
or
mov
inc
push
faddl
lcall
push
xor
adc
pusha
add
and
mov
scas
ret
sub
decl
mov
insb
sbb
aam
adc
test
xor
dec
sbb
mov
int3
sbb
gs
scas
cmpl
dec
ret
int3
xor
dec
adc
sbbl
aam
int3
out
and
fucompp
fs
cmp
testb
and
ja
push
rcll
fiaddl
test
sub
cmp
ljmp
ficomps
mov
pusha
dec
icebp
ljmp
out
jl
sub
pusha
popa
fld
jl
fcoml
xchg
loopne
loopne
mov
por
mov
dec
cmp
push
aaa
xchg
adc
es
clc
insb
loop
cmp
ret
fcmovu
and
fcmovb
mov
push
imul
sbb
fimuls
stos
xor
mov
faddl
popa
adc
rorb
or
outsb
out
push
fucom
shrb
add
and
or
mov
stos
mov
xchg
jno
in
cwtl
cmp
sarl
fbld
shl
repz
addb
or
fs
or
clc
jbe
push
xchg
inc
pop
fstpl
or
mov
sub
fcmove
out
fsubrp
lds
adc
cld
int
shll
mov
sbb
inc
xor
jl
mov
fnsaves
push
jae
xor
dec
jg
jecxz
jo
or
mov
test
sub
adc
lcall
lcall
xchg
pop
add
lds
lahf
daa
sbb
push
xor
cmp
int
xchg
mov
sub
sub
lock
sbbb
pushf
mov
andb
xchg
jg
jmp
jne
div
add
mov
add
enter
dec
cmp
xchg
stc
test
push
popa
or
insb
cmp
test
or
sbb
jge
les
rcrb
jge
cwtl
jno
xor
add
clc
lea
or
js
shrl
fwait
jo
shr
dec
pop
adc
adc
push
aad
outsl
icebp
push
nop
mov
das
icebp
lods
negb
scas
lret
pop
clc
push
cmpsl
mov
dec
cwtl
fstps
into
loopne
loop
rolb
fstpl
sbb
imul
pushf
add
and
popl
ss
mov
dec
addr16
add
add
push
jmp
push
mov
in
pusha
add
push
pop
lock
dec
jl
loope
js
aaa
push
add
popf
add
mov
mov
in
cwtl
in
rol
or
rclb
mov
orb
shlb
mov
shrl
lcall
xor
cwtl
or
mov
dec
in
xor
jge
shlb
mov
mov
add
je
sbb
sbb
leave
sbb
loopne
or
scas
inc
or
mov
leave
sahf
loop
cmpsb
call
sahf
mov
xchg
mov
in
test
xchg
jne
mov
add
pop
adc
daa
add
loopne
test
aam
jnp
mov
or
cwtl
ret
movsl
add
inc
insb
sbb
fiaddl
pop
cmpsb
or
ja
rolb
std
addb
cmpsl
rorl
jbe
popa
sar
sub
inc
xchg
and
loopne
cli
call
mov
test
loopne
in
add
or
ret
inc
test
jne
inc
call
pop
fadds
cmpsb
mov
xor
add
arpl
insb
mov
sub
pushf
adc
jbe
imul
and
jmp
add
inc
xor
cmc
aam
in
fnstenv
les
fisttps
mov
jo
sti
pop
push
test
je
xchg
adc
mov
adc
add
andl
dec
mov
xorl
filds
cmpsb
fistpll
add
pop
push
adc
lcall
sub
pop
int3
inc
ret
pop
js
je
cmpsl
sbbl
gs
mov
out
mov
call
cmp
push
insl
inc
jno
imul
add
adc
pop
jge
dec
push
addr16
call
or
in
es
in
add
jae
push
push
push
clc
pop
or
mov
scas
push
bound
inc
xchg
jo
add
dec
fsubrl
jge
add
jp
add
adc
xchg
mov
push
xchg
lea
imul
cmpsl
adc
or
adc
mov
or
loopne
inc
lcall
xchg
xchg
rorl
out
xor
fisubrs
xchg
sti
shl
xor
push
add
adc
lock
xor
popf
call
xor
aam
sbb
and
in
and
jecxz
mov
out
add
push
jmp
das
sbb
mov
into
push
push
int
inc
adc
mov
adc
cwtl
push
push
inc
rcrl
mov
cmp
mov
mov
pop
ljmp
mov
or
mov
inc
or
mov
push
mov
out
lock
or
arpl
pop
add
mov
sbb
mov
jp
cmp
fdivrl
cli
push
push
arpl
jnp
push
js
test
xor
adc
push
data16
lock
mov
adc
repz
xchg
insb
pusha
fwait
adc
mov
mov
and
ret
in
pop
sbb
xchg
dec
test
sti
lods
cs
sub
sub
cmp
fsubrs
add
sub
xlat
adc
adc
nop
pop
or
sub
fsts
fstps
jnp
loop
or
in
push
or
push
not
push
rolb
popa
sti
dec
xchg
add
push
or
inc
push
jl
xor
aaa
mov
xor
inc
js
std
test
ret
jae
pop
mov
negl
in
pop
loope
cltd
pop
dec
nop
test
mov
movsl
lahf
test
aas
je
pop
repnz
xor
xor
nop
or
sahf
pushl
fstps
fmulp
jge
push
inc
add
subb
in
lret
mov
test
add
in
inc
jne
dec
fadds
xlat
sbb
setae
fs
mov
lock
mov
inc
mov
sti
fidivrs
sbbb
cld
add
sti
scas
loop
inc
add
inc
push
outsb
dec
cmp
push
push
xor
rcl
das
mov
or
sbb
decb
rcrl
add
enter
pop
dec
inc
call
and
adcl
add
cmp
clc
sub
pop
or
lea
push
xor
daa
aaa
add
cs
dec
call
ja
add
add
jmp
dec
mov
test
and
decl
movsl
push
add
pop
les
and
mov
mov
popf
add
js
rcl
loope
add
mov
push
jnp
pushl
dec
out
xchg
pusha
es
rolb
inc
adc
push
rorb
add
adc
or
xchg
mov
addr16
movsb
or
add
pop
movsl
add
pop
mov
rcr
mov
inc
call
and
and
test
jg
incl
std
xchg
jbe
setl
out
stos
repz
pop
and
das
cld
pop
out
sub
xor
cmp
das
hlt
cmp
insb
and
mov
sub
div
dec
repnz
push
xchg
pop
shlb
dec
jmp
shll
lcall
mov
je
out
pushl
pushf
sbb
xchg
lea
hlt
add
xor
sbb
push
sub
adc
lods
bound
aam
int
mov
dec
in
hlt
xor
out
jo
fildl
es
push
pop
je
loopne
pop
push
cmp
push
mov
jecxz
das
mov
mov
ds
fstpt
ss
sbbl
int3
repz
fsubr
xchg
inc
lcall
adc
jge
sarb
insl
in
cmp
mov
mov
mov
jle
sbb
inc
jmp
mov
push
mov
out
testb
jg
and
fbld
add
dec
mov
pusha
cmc
sbb
lret
xor
mov
das
mov
les
push
cmc
iret
aad
push
pop
repnz
or
pop
pop
fadds
or
cmp
enter
outsl
call
fxtract
rcrb
mov
nop
pop
arpl
sub
push
cmp
xor
xchg
mov
cmc
loopne
or
es
decl
decl
inc
sub
mov
jo
cmpsl
lods
iret
push
dec
es
loopne
mov
subl
lret
das
dec
call
lret
lret
insl
and
jns
adc
movsb
adc
ja
je
mov
incl
mov
add
push
pop
xchg
sbb
jns
aam
sub
lods
or
les
call
pop
loopne
gs
data16
mov
dec
dec
fwait
dec
aad
xchg
push
sbb
add
pop
je
test
cmp
and
mov
or
scas
dec
icebp
and
jne
mov
sbb
pop
out
jae
repnz
hlt
cs
imul
mov
aad
jae
push
loop
and
mov
andl
xor
or
std
add
stc
arpl
jbe
jp
pop
jg
mov
sbb
adc
ret
je
icebp
jnp
and
idiv
inc
movsb
cmc
loope
cmp
cmp
jb
mov
jns
lds
add
inc
mov
addl
mov
jmp
sti
daa
or
cld
js
pop
push
insb
adc
pop
xor
jns
bnd
push
or
push
std
pusha
push
lcall
pop
call
xchg
in
shlb
dec
pop
inc
cli
xchg
outsl
jno
adc
int
add
in
mov
dec
in
adc
and
scas
bound
stos
incw
or
cs
push
dec
aaa
jo
push
pop
bound
or
and
adc
or
repz
mov
or
frstor
outsb
and
inc
gs
add
lcall
sarl
in
mov
push
add
fildll
inc
sub
rol
and
inc
mov
outsb
jp
neg
loopne
inc
fists
shll
jle
pop
mov
push
ret
sub
ss
insb
fimull
dec
and
leave
scas
call
add
xor
mov
adc
mov
or
sub
mov
adc
in
adc
aad
sbb
inc
fsubrs
insb
xchg
test
in
mov
ljmp
es
xor
xchg
sub
jle
xchg
xchg
pusha
jg
xor
inc
and
aam
add
sub
enter
mov
enter
repz
dec
pop
inc
enter
jle
sarl
push
mov
lods
push
mov
jb
stos
push
add
or
andl
mov
call
add
dec
inc
shll
push
add
and
sub
pop
push
sahf
ret
mov
gs
lock
mov
jle
adc
xor
xor
icebp
add
inc
mov
sub
andb
mov
mov
test
dec
adc
or
push
lret
or
pop
pusha
in
cmp
add
fwait
and
es
jns
add
mov
push
inc
int
aam
dec
outsl
push
pop
lret
or
fmuls
add
sub
adc
add
dec
cmp
or
je
xor
loopne
addb
jno
cmp
xor
add
loopne
mov
loopne
cmpsb
out
and
fidivl
mov
push
loopne
stc
or
rclb
popf
jg
dec
xchg
stos
rolb
subl
sbb
and
flds
cmp
sbb
dec
adc
dec
mov
xlat
in
sbb
sbb
fldcw
icebp
loope
mov
xchg
pop
faddp
sbb
inc
xlat
aas
add
jl
cmp
repz
inc
cmp
mov
inc
or
int
int
data16
incl
add
scas
mov
mov
sbb
outsl
cld
jmp
add
add
shlb
andl
mov
lds
jb
jnp
mov
push
sub
jb
cmp
test
sub
cltd
nop
bound
mov
icebp
jg
jmp
mov
and
push
ja
cwtl
xchg
outsl
out
mov
cld
fidivl
mov
jo
jle
inc
mov
mov
ss
std
adcb
inc
mov
cmp
push
in
mov
mov
imul
jbe
idivl
pop
jno
mov
cmp
fnstsw
mov
xor
cmp
insb
sub
pop
test
pop
push
jecxz
mov
insl
incl
dec
or
cmc
sub
xor
ljmp
jo
out
scas
js
mov
pop
sub
scas
inc
xor
pop
mov
inc
repnz
popa
jge
mov
movsl
add
fstpt
dec
mov
and
mov
inc
movsb
ljmp
push
int3
loop
mov
add
decl
rorl
in
pop
cmp
xchg
lds
movsb
add
pushf
mov
sbb
pop
std
and
cmp
and
lcall
js
scas
lret
lock
mov
ja
sub
sub
inc
xchg
aad
subl
psrlq
mov
shlb
insb
or
in
xchg
fxch
loop
fnsave
std
in
cld
lret
fsub
mov
call
xchg
out
cmp
jp
mov
jecxz
lea
push
aas
mov
leave
cmp
xor
add
cmp
cmp
dec
push
out
out
sar
mov
test
repz
push
mov
rolb
sti
mov
icebp
pop
mov
push
movsb
test
push
hlt
or
aaa
adc
inc
outsl
add
xor
rcll
incl
sbb
inc
and
and
sbb
insb
push
adc
lahf
inc
and
pop
mov
and
fadd
decl
loopne
and
je
shlb
insb
pop
sub
push
sub
push
mov
pop
es
mov
jg
loop
push
add
out
mov
mov
rcrl
mov
push
cwtl
insl
xor
loope
das
pop
sbb
ret
inc
lahf
aaa
push
iret
mov
sbb
aas
stc
mov
xchg
sub
inc
pop
out
out
jno
aam
mov
xor
and
lret
movsl
outsl
mov
add
cli
mov
mov
lock
xchg
cmc
repnz
ljmp
fwait
sbb
and
mov
aas
add
lahf
je
aaa
mov
mov
mov
sahf
lahf
mov
xchg
mov
add
cli
mov
int3
push
mov
stos
add
mov
xchg
and
sbb
sub
shll
sub
decl
cli
ja
dec
and
fidivrs
lret
push
imul
cmpsb
mov
xor
push
loope
jg
sub
push
jb
sar
add
lds
js
or
pusha
jne
inc
xchg
loopne
xchg
pushl
and
push
inc
in
iret
int
data16
cmp
jge
fwait
ljmp
stc
cmp
add
into
add
dec
or
push
dec
insb
xor
clc
jo
sub
jns
inc
sbb
gs
popf
daa
sbb
or
inc
mov
stos
ds
and
dec
lds
fcoms
jle
fs
popf
inc
lds
add
mov
fdivr
jmp
in
or
pop
pop
xlat
sbb
cmc
enter
and
insb
push
test
add
pop
inc
adc
idivl
push
scas
into
mov
push
add
daa
aam
inc
xor
or
adc
xor
aas
pop
fwait
xchg
push
dec
sbb
shr
fwait
mov
jle
mov
les
mov
cltd
push
scas
sbb
mov
inc
or
pop
hlt
fiadds
enter
cmp
inc
lret
sbb
insb
mov
imul
and
add
mov
push
xor
ja
mov
sub
and
sbbl
or
loop
push
push
aaa
xchg
xorl
sarb
fcom
fsubs
xchg
inc
mov
pop
adc
sbb
adc
adc
or
mov
or
test
mov
sub
mov
sub
xor
cmp
fcomps
orb
adc
and
out
sbb
cmp
rcrl
sbb
sub
inc
bound
sbb
pusha
jp
inc
inc
in
sahf
aam
sarl
outsl
adc
sbb
adc
mov
jge
push
or
and
push
lea
or
out
cwtl
mov
rolb
pop
and
sti
dec
add
inc
outsb
jl
cmp
icebp
clc
adc
xchg
sub
ss
inc
test
push
lcall
push
insl
aas
fdivs
stos
mov
push
pushl
aas
test
je
push
js
and
xchg
adc
dec
ja
sub
sbb
add
mov
lds
rcrl
aad
xor
inc
inc
cmp
xor
les
and
add
mov
ret
mov
push
mov
and
lcall
addl
movsl
or
ds
repz
push
cmc
out
and
aaa
popf
sarl
js
push
lcall
lahf
adc
cs
jecxz
sbb
mov
add
pusha
push
pop
movsb
pusha
adc
mov
mov
cmpsb
int
push
clc
push
push
lret
cmp
add
mov
dec
mov
int3
dec
shl
loop
mov
jp
leave
adc
lock
mov
not
aam
adc
loopne
push
or
aaa
hlt
adc
ret
cmp
les
inc
outsl
inc
mov
pop
push
mov
cmp
or
fsubrs
xchg
lret
and
cmp
repnz
push
mov
push
push
push
andl
sbb
imul
pop
push
push
mov
mov
pop
adc
sub
js
cmp
adc
jbe
inc
icebp
push
repz
fadd
add
cld
mov
sbb
add
jmp
aam
sbb
sub
xor
leave
loopne
lret
es
adc
add
add
pop
mov
shl
adc
shll
push
sub
testl
cmpsb
add
add
add
add
shufps
data16
inc
hlt
add
lcall
dec
test
mov
lahf
mov
mov
and
dec
icebp
xor
out
icebp
cld
loopne
lret
adc
out
lods
sti
popa
mov
sbb
cld
jp
sub
dec
mov
js
pushf
pop
rcrb
movl
jae
jnp
jae
mov
inc
maskmovq
imull
popl
lock
es
and
sub
or
loope
cld
insl
mov
adc
faddl
sbb
sub
push
push
out
incb
adc
sub
andl
lock
clc
ss
daa
movl
add
daa
aas
cmp
dec
outsb
xchg
hlt
adc
fidivrs
jb
and
xchg
or
mov
xchg
xor
sbb
mov
jmp
shr
into
sub
and
or
leave
sbb
cwtl
call
int
sbb
rcll
jbe
mov
inc
icebp
mov
and
cmc
dec
add
add
jne
in
js
sbb
bound
cmp
sahf
test
xchg
xor
cmp
es
int3
jno
fs
shl
sbb
mov
loopne
arpl
icebp
add
or
pop
outsl
cmp
js
dec
mov
jnp
push
outsl
lret
js
add
daa
insb
pop
test
push
add
inc
mov
sbb
and
ret
push
mov
add
dec
mov
mov
and
inc
add
add
push
and
mov
lcall
push
pop
call
push
je
add
add
rcrb
cmp
pop
and
shlb
movsl
adc
test
rolb
inc
test
jge
rorb
inc
lds
repnz
incl
dec
push
xchg
push
mov
cmp
js
inc
nop
pushf
clc
dec
push
cmpl
cmp
sub
cmpl
in
rcrl
lret
cs
test
fucomip
hlt
push
dec
push
cmp
mov
mov
push
mov
cmpsb
mov
insb
xor
fbld
test
pushf
lds
xchg
setle
test
addl
sahf
test
shr
mov
mov
sbb
fiaddl
sbb
pop
outsl
xor
jb
add
hlt
lods
sti
pushl
clc
add
out
mov
aam
ds
dec
add
jbe
dec
add
jg
xor
add
xchg
mov
scas
xchg
inc
pop
pop
loopne
aaa
xchg
pop
scas
dec
lret
push
push
adc
test
imul
mov
sbb
push
test
and
out
in
ss
mov
lcall
jno
rorb
mov
jl
xchg
sti
iret
sbb
mov
jns
out
hlt
aad
mov
adc
jg
shll
mov
and
shll
pop
insl
out
pop
aam
and
sarb
sti
and
mov
shll
pop
push
cmp
cmpl
mov
insl
out
inc
and
das
je
add
xor
or
jae,pn
jno
mov
mov
aaa
es
inc
cmp
push
fistps
repnz
dec
aad
adc
arpl
lcall
popf
add
stos
mov
inc
jo
sub
mov
outsl
push
push
loop
fdivr
jmp
sbb
mov
push
pushf
aad
aaa
or
daa
push
add
repnz
rorb
jl
les
repz
xchg
add
jle
mov
dec
or
fistpll
mov
repz
out
int3
std
push
push
inc
xor
jl
ret
add
xchg
mov
sbb
stos
push
mov
jg
out
sbb
mov
add
jmp
push
fcmovnu
push
idiv
adcb
movsl
je
mov
cs
pop
repnz
mov
xchg
add
xchg
push
xorl
add
std
scas
rol
pop
mov
dec
xchg
sbbb
cli
daa
sti
dec
inc
mov
jnp
or
add
mov
cmp
add
in
xchg
push
mov
pop
in
mov
lock
jb
subl
mov
mov
loope
les
call
data16
dec
nop
adc
loopne
add
lds
dec
sbb
outsl
push
popf
adc
outsb
add
adc
lcall
dec
scas
pop
aas
mov
pop
mov
mov
mov
push
sbb
bound
ret
je
push
dec
add
mov
cld
or
jnp
adc
mov
repz
and
loop
adc
push
inc
mov
les
sbb
cltd
loop
mov
adc
mov
add
push
ficoml
out
idivl
mov
sub
mov
push
xchg
in
call
ds
and
or
mov
shlb
int3
push
mov
loop
dec
orl
cmpsl
loop
push
add
mov
sub
xchg
ret
dec
sbb
cs
lock
sub
mov
inc
mul
rolb
adc
adc
pop
jo
xchg
cmp
jae
mov
sbb
inc
mov
adc
pop
ret
in
loopne
mov
xor
int3
cld
pop
loop
sti
cmpsb
dec
mov
cmp
mov
cltd
ljmp
cmc
movsb
in
pop
push
xchg
test
jno
jmp
add
or
add
in
xchg
jl
cmp
cmp
cmp
negl
xorb
mov
push
adc
lods
cwtl
std
icebp
and
inc
and
shll
sub
sbb
imul
loop
das
aad
inc
pop
sahf
arpl
push
xor
add
push
adc
inc
ret
push
inc
xor
or
jp
minps
je
aam
mov
adc
sub
or
es
cli
call
sti
cld
sub
shlb
sub
add
pop
mov
adc
std
aas
imul
or
sbb
rolb
ret
inc
xchg
mov
jno
push
dec
fisubs
notb
cmpsb
out
pop
add
push
je
les
aam
enter
ja
add
and
mov
shl
lea
dec
push
or
pusha
push
mov
xor
icebp
or
adc
shl
pop
or
aas
pop
sub
adc
sub
int
dec
adc
incb
fidivrl
in
push
xor
stc
dec
push
adc
mov
dec
lock
mov
syscall
ret
idivl
sbb
leave
mov
inc
cmpxchg
mov
inc
filds
push
movsl
jg
and
jge
xor
rcll
sbb
add
push
insl
ret
jg
jae
addr16
and
gs
xor
sub
int
movsl
bound
fidivs
xchg
add
pop
aaa
bound
js
test
push
in
mov
push
aaa
pop
push
and
repnz
xorl
outsb
adc
cs
sub
or
pop
sbb
cwtl
sbb
loop
fnstcw
dec
mov
faddp
js
mov
rcl
out
shlb
dec
cmp
pop
fdivs
sub
sahf
mov
aas
push
sub
push
sub
arpl
pop
jb
push
dec
mov
mov
cltd
roll
out
mov
cmc
jecxz
les
addr16
div
sub
rcll
mov
add
sub
push
sub
imul
push
loopne
pop
push
enter
or
jo
and
add
adc
pop
adc
and
mov
mov
jbe
lods
test
sbbl
repnz
and
ss
outsl
or
icebp
rcll
pop
fs
mov
adc
enter
aam
out
mov
push
cmpsl
popw
sbb
add
mov
clc
pusha
js
nop
cmp
add
and
inc
enter
jnp
sti
in
pop
shll
lock
and
outsl
xor
dec
ret
or
mov
adc
rolb
loopne
mov
sti
les
push
sub
pop
cld
out
clc
lcall
mov
adc
jle
push
addl
push
cmp
fisttps
je
xchg
movsb
or
test
pop
in
in
decl
in
and
adc
mov
pop
or
pop
test
inc
lret
jg
jo
pusha
inc
fldenv
lret
cmp
mov
popf
outsl
pop
push
dec
loopne
push
mov
xchg
push
and
inc
push
and
xchg
pop
mov
stos
fwait
adc
test
mov
jbe
pushf
add
ret
push
or
jb
sbb
pushl
mov
cltd
add
pusha
inc
mov
xchg
outsl
push
pushl
inc
xor
xchg
shlb
incl
cmp
shll
sub
inc
xchg
mov
repnz
ljmp
jnp
adc
gs
mov
inc
jmp
fldl
rol
cwtl
cwtl
push
out
pop
fwait
or
xor
jne
push
cs
les
aam
xchg
dec
ret
lcall
push
es
push
int3
push
lahf
add
mov
push
adc
mov
lock
push
out
inc
scas
and
xor
orb
outsl
in
mov
sbb
and
or
mov
test
jg
fucomip
jl
movsb
push
and
nop
sub
or
imul
mov
aam
xchg
movsb
cmp
push
incl
leave
mov
sub
sub
mov
xchg
loop
push
or
sbb
int3
or
adc
mov
dec
insl
push
imul
lods
xorl
push
stos
sarl
inc
call
pop
jl
ds
adc
jle
add
loopne
cmp
test
jbe
rcll
adc
or
mov
jle
mov
inc
inc
sarb
push
push
fs
sub
xchg
pop
lods
stos
repz
in
push
cmp
es
sub
cltd
mov
ret
loope
in
daa
inc
jg
addb
stos
lods
pop
lods
push
int3
unpckhps
cmp
int
call
jbe
pusha
jge
out
mov
shll
lds
and
push
push
cwtl
gs
scas
nop
push
jbe
cmp
inc
pusha
push
in
mov
mov
jl
lcall
jnp
int3
jecxz
data16
add
or
sbb
js,pt
imul
fcmovne
push
or
push
add
dec
inc
push
mov
jge
lret
or
inc
or
sub
add
mov
cmpsb
dec
pop
and
mov
in
out
fucomip
lea
dec
sub
mov
adc
jmp
addr16
adc
mov
imul
xchg
inc
add
nop
sarb
hlt
inc
or
add
push
lcall
lcall
xchg
xchg
add
pop
push
popa
add
ljmp
mov
imull
inc
cld
inc
and
add
jge
andl
mov
pop
push
cmp
out
jmp
scas
xchg
cmp
fbstp
shl
nop
sub
nop
sbb
fstpt
sbb
cmp
xor
incb
adc
fildl
inc
adc
dec
iret
lods
addb
jecxz
sub
mov
xchg
dec
ljmp
adc
iret
or
sbb
enter
jecxz
clc
shll
push
xchg
mov
jmp
adc
and
dec
das
add
sarb
in
popa
sub
inc
psubusb
adc
cmpsl
or
fsts
lret
jecxz
pusha
push
dec
mov
ja
xorl
mov
fisttpl
add
orb
fsts
xor
enter
lahf
add
repz
sbb
pop
fdivr
push
bound
addl
sbbl
movsb
pop
pop
mov
fldcw
cmp
iret
int
jnp
punpcklbw
out
call
bound
mov
repnz
in
fsubrs
fprem
inc
lcall
in
pushf
dec
fisubrs
pop
mov
xchg
and
mov
rorl
push
ljmp
jl,pn
mov
ret
outsl
test
outsl
mov
push
jne
int3
gs
push
mov
push
jl
sub
adc
inc
in
inc
test
jl
out
outsb
daa
jecxz
mov
mov
in
aas
jl
sbb
jecxz
pop
in
std
andl
inc
push
sbbl
stos
adc
mov
insb
in
enter
xchg
sahf
clc
xor
inc
pop
js
loope
clc
jmp
mov
ja
ds
loopne
bound
test
xchg
aas
idiv
clc
iret
pop
pusha
pop
dec
pop
cmp
das
inc
cmpsl
dec
pop
sbb
pop
push
mov
lock
dec
or
mov
repz
decl
or
jl
jle
pop
push
clc
adc
stos
pop
mov
cmpsb
leave
xchg
mov
lea
mov
test
sbb
push
cmp
sbb
repnz
in
jg
imul
jl
lea
add
lcall
mov
mov
or
icebp
mov
adcb
clc
negb
ljmp
loop
fcompl
decl
cs
jecxz
jo
xor
sub
icebp
sbb
pop
mov
dec
repnz
xlat
jecxz
sarb
xchg
movsb
subb
lods
incl
call
sbb
jne
icebp
ljmp
add
in
in
js
iret
sub
jae
jle
aad
mov
jno
sbb
sub
ficoml
les
fadds
idiv
or
push
ret
clc
aaa
dec
clc
loope
lods
testl
cwtl
addr16
mov
pop
mov
addr16
cmp
dec
add
lcall
insb
adc
adc
sbb
add
rcrl
stc
stos
and
cli
dec
dec
ss
test
nop
inc
mov
lret
subb
repnz
lcall
pop
dec
cwtl
and
mov
fldl
hlt
inc
and
ficomps
test
lea
jg
lret
pop
push
xchg
sbb
dec
sahf
les
ja
leave
cwtl
fnstcw
mov
cli
call
test
in
adc
imul
lahf
out
loop
jg
ds
dec
loop
outsb
in
push
pop
pop
mov
dec
jle
lds
cwtl
inc
and
in
mov
aaa
xor
subl
test
jle
dec
mov
call
jbe
inc
jae
push
movsl
adc
rolb
iret
das
movq
imul
shll
mov
cmp
mov
xchg
in
and
sahf
pop
xchg
lret
push
mov
cmp
pop
push
imul
repnz
shlb
push
ret
sahf
rolb
leave
jns
std
pop
js
out
loopne
sbb
aad
inc
jo
mov
adc
xchg
scas
adc
adc
mov
pushf
ret
add
xorb
shlb
or
push
imul
jb
dec
out
ret
sbb
inc
mov
mov
pop
je
rorl
ja
lods
xor
sbb
push
rcrl
aam
sarb
mov
repnz
clc
or
in
out
jne
mov
or
sub
jnp
bound
incb
push
adc
mov
lods
das
fstp
sbb
jo
inc
dec
enter
das
fnstsw
xchg
jle
and
cmp
mov
or
cs
outsl
add
jecxz
mov
or
ret
jno
lea
push
lret
cmpsl
mov
pop
pop
mov
add
sub
inc
lret
cwtl
cmp
js
loope
push
adc
ds
imul
xor
inc
add
dec
inc
rcrl
or
fs
sbb
bound
lcall
cli
or
shlb
outsb
xor
or
pop
ss
and
xchg
xchg
lods
sbb
mov
jne
in
sbb
cmc
lods
mov
dec
aad
nop
jns
in
stos
jae
fdivrs
mov
imul
jge
rcrb
sub
sbb
xchg
addr16
cmp
push
mov
xchg
push
adc
xor
push
adc
cltd
jbe
rcrb
jg
int3
in
xchg
cmc
dec
data16
sbb
mov
rclb
pusha
fnsave
push
inc
and
scas
das
insb
mov
sub
les
or
movsl
sub
push
pop
pop
inc
mov
mov
lock
je
jmp
fimuls
add
sbb
adc
arpl
jnp
es
loopne
xchg
incl
adc
adc
pop
jmp
cmp
xchg
aaa
fadds
sbb
subb
dec
ja
ret
std
add
sbb
cmpsb
inc
out
pop
mov
xchg
aas
add
jb
jo
lret
hlt
inc
add
xor
lret
fcmove
decb
pusha
popa
ja
add
and
sbb
jmp
or
cmp
add
or
insl
dec
sub
scas
in
das
sub
add
sbb
out
mov
gs
mov
popf
pop
inc
clc
test
mov
cmp
cmpsl
push
push
add
pop
arpl
and
pop
xchg
inc
cmpsl
in
sbb
movsl
mov
fs
das
icebp
pop
leave
sahf
xchg
repnz
and
in
pop
jbe
xor
sbb
dec
adc
das
jnp
add
insl
pop
imul
fimull
adc
adc
mov
add
les
inc
or
mov
push
in
pop
scas
data16
adc
loope
testb
or
adc
roll
adc
aam
fildl
mov
pop
push
pop
testl
pop
and
push
clc
or
and
and
fs
add
dec
jo
mov
mov
inc
rorb
std
add
or
mov
jo
push
icebp
rorb
add
inc
ja
dec
sub
fnstenv
adc
pushf
mov
push
outsl
sub
mov
out
fisubl
nop
ror
vpsubsw
push
test
dec
mov
movsl
sti
sbbb
in
fsts
std
push
mov
jne
ss
lods
add
movsl
inc
pop
sarb
mov
mov
inc
cltd
hlt
filds
mov
mov
adc
fwait
xlat
lds
sub
add
push
xor
mov
adc
mov
mov
out
adc
mov
loope
fcompl
xchg
push
pop
adc
aam
mov
jle
jno
mov
push
inc
das
fs
scas
mov
aam
cmp
or
push
pop
and
scas
or
add
jbe
pop
push
js
cmp
andb
loopne
shll
jecxz
cld
push
dec
fcoms
push
pop
xor
loop
push
inc
pop
inc
dec
pop
imul
rcrl
shll
cmp
rclb
pusha
jmp
test
je
or
fs
pop
imulb
lahf
xorb
rcll
lds
adc
sarl
add
ret
or
outsl
sub
sub
adc
sub
push
add
push
bound
inc
andb
dec
lock
decl
xchg
add
cmp
or
popf
xor
mov
ret
mov
push
cmpsb
add
test
cmp
xor
sbb
sbb
daa
add
cmp
push
pop
subl
setnp
dec
ret
jbe
inc
dec
rol
aaa
mov
fists
es
adc
cmpsl
in
jg
mov
std
ret
inc
sbb
mov
stc
scas
dec
add
outsb
push
dec
dec
sbb
xchg
imul
adc
inc
mov
cmp
adc
pop
mov
out
xor
jl
std
inc
mov
xor
xchg
inc
test
ljmp
or
leave
cmp
fsubrs
in
dec
cwtl
xchg
push
sti
xor
nop
test
ret
push
adc
aam
scas
adc
lods
xor
mov
cmp
add
cmp
add
mov
idivb
mov
adc
lods
xchg
enter
in
loop
aam
add
cmpl
sbb
push
jle
mov
push
cmpsl
pop
add
pop
inc
test
add
sbb
and
cmp
push
test
lock
lock
stos
cmp
mov
stc
lock
add
add
movsb
pop
mov
and
pop
cmp
mov
cmpsl
mov
jp
push
es
jnp
adcb
jae
dec
dec
roll
int
sub
dec
jns
loope
out
adc
fcompl
inc
lock
mov
mov
gs
mov
mov
movsb
lret
sub
sbb
mov
pop
mov
das
add
push
dec
ret
jl
jge
xchg
imul
cli
lock
ljmp
add
fsubr
add
add
out
enter
mov
loop
add
or
sbb
repz
push
sbb
fnstcw
aaa
mov
and
call
dec
inc
nop
push
lock
sub
ss
lds
and
inc
scas
mov
fcomp
push
movups
push
add
sbb
jae
int
sbb
out
roll
das
mov
cmpl
and
fisubl
es
nop
dec
pop
add
nop
mov
mov
cmc
jge
je
add
jmp
mov
rorb
sbb
sbb
aad
xchg
clc
fistpll
xor
sub
aaa
enter
adc
pop
pop
xchg
push
scas
push
scas
clc
push
shlb
call
mov
push
jb
jae
cmp
add
sub
stos
sarl
mov
cmp
sbb
mov
into
xor
sbb
lahf
push
dec
xor
xor
add
in
sahf
inc
loopne
and
mov
adc
sub
fldt
repnz
int
loopne
ljmp
call
pop
jne
clc
lods
rorb
clc
aad
leave
ss
mov
cli
dec
icebp
inc
rorl
shl
aad
es
xchg
clc
daa
push
out
aas
dec
sub
arpl
jecxz
inc
loope
ffreep
call
pop
xor
call
cmpb
jne
jg
das
cld
stc
fcoms
aam
mov
adc
jecxz
rolb
cld
shrl
test
adc
mov
faddp
stos
and
mov
lods
or
pop
lds
incl
fucomip
es
jbe
and
stos
mov
lcall
pop
fdivr
add
imul
insb
add
outsb
xchg
mov
cmc
fildl
hlt
jecxz
je
fsubrl
ljmp
and
addr16
iret
fisttpl
mov
xor
in
insl
sahf
test
std
jg
decl
mov
jno
shlb
adc
inc
mov
outsl
ljmp
outsb
leave
add
dec
xchg
decl
push
xchg
xchg
imul
aaa
sub
xchg
mov
cmp
lcall
loope
dec
movsl
inc
dec
push
mov
pop
mov
dec
jmp
ljmp
loope
jecxz
data16
decl
cld
dec
repnz
in
mov
cld
std
add
bound
xor
jg
call
or
repz
gs
hlt
cmp
mov
dec
out
je
or
jge
pop
add
jl
in
lock
decl
push
dec
adc
lahf
divb
cmpsb
movsb
and
aaa
jp
mov
shll
sti
in
loope
fnstcw
xchg
add
out
inc
adc
jbe
pop
or
dec
mov
mov
cwtl
in
jo
add
jmp
mov
adc
cwtl
jnp
xchg
fisubs
repz
ffreep
adc
sbb
nop
das
jo
xchg
jae
push
jbe
xor
pop
fstps
inc
xchg
jmp
test
push
out
orl
or
pop
mov
cs
test
pop
mov
test
cmpsl
addl
mov
incl
cwtl
movsb
outsb
test
add
pop
adc
xor
mov
in
repnz
out
bswap
dec
mov
sbb
sbb
pop
loopne
nop
test
jmp
fpatan
push
xor
and
aas
cwtl
mov
cltd
call
icebp
mov
jecxz
test
lret
inc
ljmp
sbb
inc
jmp
rolb
lret
lock
ljmp
xor
fs
mov
inc
shl
xchg
inc
fisttps
sarl
or
xor
scas
xchg
fidivrl
idivb
add
sbb
jne
addr16
enter
push
std
scas
jnp
clc
sub
shlb
add
pop
dec
std
inc
and
test
mov
shr
sbb
mov
cmp
pop
repz
mov
sarb
mov
iret
das
icebp
pop
mov
jno
es
sub
dec
icebp
mov
and
gs
popa
js
idiv
xchg
stos
or
testb
inc
std
test
or
aam
lods
ljmp
inc
popf
xchg
push
fcompl
jl
add
dec
cmpsb
mov
vmread
stos
push
mov
insb
call
adc
add
fistl
lock
int3
push
movsl
cmc
scas
fcoml
mov
lcall
inc
mov
dec
pop
cld
repnz
lcall
in
and
dec
div
outsl
scas
mov
or
and
in
jl
cli
sti
jecxz
add
push
inc
aas
cmp
clc
dec
inc
push
jmp
inc
inc
insb
fisubrl
insb
adc
pop
or
xor
xor
mov
insl
push
pop
ret
sub
inc
xchg
cs
jnp
xor
leave
hlt
outsl
fisubrl
out
fisttps
jno
sbb
lds
cli
test
dec
mov
cwtl
movsb
repnz
mov
adc
insb
push
cmc
mov
jecxz
add
pushf
xchg
pop
test
icebp
pop
mov
jno
xor
shll
lcall
in
cmp
mov
mov
adc
lcall
xcrypt-ecb
cmpsl
dec
fmull
fcoms
add
mov
outsl
out
xchg
outsl
jge
mov
mov
push
xchg
lret
cmove
decl
mov
aas
cmp
push
mov
mul
std
mov
fmuls
mov
inc
inc
aam
cmpsb
add
lock
stos
sbb
jns
jg
xor
jg
std
pop
cs
dec
add
lock
mov
push
sub
shrl
and
iret
ja
test
std
mov
xor
cmp
cld
push
jl
adc
mov
mov
faddl
mov
mov
lods
push
idiv
das
mov
loop
mov
jp
pop
dec
push
add
sub
mov
std
addr16
mov
cli
mov
stc
adc
xchg
sub
cmp
mov
adc
add
pop
clc
pop
test
push
enter
aas
push
inc
jo
inc
mov
cmp
sbb
xor
pop
sbb
call
cmp
inc
inc
clc
iret
sahf
popl
fldt
add
mov
pop
push
mov
repz
and
xchg
mov
jb
sub
lock
mov
mov
mov
movb
xor
in
clc
push
push
pop
and
jge
xorl
pop
push
clc
cmp
outsb
sub
pop
and
in
push
sub
pop
scas
lahf
lcall
jb
js
cmpsb
pop
ds
clc
pop
add
jecxz
xchg
ds
aaa
fsubp
ret
clc
in
icebp
movsb
jecxz
xchg
and
jmp
inc
jecxz
pusha
int3
jecxz
or
xchg
icebp
int
out
mov
fucomip
js
mov
icebp
ds
push
add
jecxz
cmpsb
or
divb
ds
add
adc
sub
xor
aas
dec
aaa
call
in
leave
push
movsl
outsb
mov
orl
rcrb
cmp
fbstp
mov
xchg
cmp
adc
sti
mov
xlat
es
lret
addl
cld
sahf
jecxz
mov
pop
fs
jae
jl
mov
scas
lock
repnz
in
ficoms
mov
xor
dec
das
lcall
xchg
je
movl
or
xchg
arpl
movsl
sahf
aam
and
add
clc
fisttpl
loop
push
pop
sub
and
jmp
sbb
and
imul
aam
mov
cmp
jecxz
lcall
lcall
jae
mov
and
dec
fs
movsb
fsts
ljmp
sbb
sub
cmp
out
adc
aaa
mov
jno
or
ja
iret
jns
sbb
incl
rcrb
dec
mulb
nop
xchg
sub
imul
pop
dec
ljmp
push
jns
daa
pop
jecxz
adc
sub
xchg
inc
mov
jbe
push
out
insb
add
add
lock
test
call
mov
sbb
add
mov
sub
int
test
xchg
arpl
xchg
aad
shl
inc
js
stc
mov
movsl
mov
cld
jg
scas
in
movd
mov
mov
insb
lock
or
jne
sub
sbb
mov
xor
cmp
lods
sbb
pop
inc
std
jae
add
mov
lcall
cli
mov
xor
aas
xor
stc
dec
cmp
jmp
fcoms
inc
mov
rolb
jnp
mov
in
xor
icebp
pop
mov
cs
jg
bound
xor
mov
jg
in
pushf
aas
mov
cmp
andl
add
jecxz
loope
mov
or
jg
inc
popf
inc
aad
or
sarl
push
out
pusha
push
sbb
aad
push
or
cs
push
sar
mov
mov
dec
dec
push
cmc
imull
sbb
jl
movsl
push
cld
aas
xchg
std
ja
xchg
roll
fnstsw
lcall
mov
and
jae
ja
daa
inc
push
popa
nop
stos
ja
das
cld
mov
xchg
ja
mov
cmp
das
es
das
xchg
clc
das
mov
xchg
fdivp
sub
bound
pop
jp
cmp
lds
pop
out
lret
mov
int3
in
and
xor
imul
push
loope
out
add
scas
push
popa
and
jae
push
pop
add
iret
rcrb
outsl
mov
daa
sub
test
pop
js
pop
das
in
fstpt
ret
sub
out
xorl
add
xchg
hlt
or
xchg
mov
xchg
add
mov
in
idivb
jmp
and
lock
fnsave
sbb
das
push
mov
adc
pop
lcall
sti
popa
pop
mov
cmpsb
xchg
call
daa
rorl
jp
test
into
xchg
sub
clc
or
icebp
pop
test
loope
xchg
jge
add
push
adcb
call
and
call
aad
push
or
and
xchg
pop
adc
stos
adc
jnp
sbb
subl
es
jg
add
insl
mov
pop
arpl
ret
mov
mov
jecxz
movsb
dec
xchg
push
mov
rorb
outsl
pop
sub
mov
lds
adc
incl
pop
ja
hlt
xchg
pop
adc
loop
outsb
insb
mov
cmp
out
clc
xchg
jne
push
aad
xor
stos
mov
scas
mov
jge
xor
outsb
sbb
mov
ljmp
mov
mov
outsl
dec
jge
shl
jb
inc
mov
mov
add
mov
sub
and
lock
loop
pushf
add
sbb
mov
add
shll
pop
xor
sbb
add
inc
push
sbbl
mov
aaa
stos
mov
sbb
mov
dec
mov
cmp
lds
orl
inc
sub
loopne
and
adc
dec
add
ficoml
push
int3
cli
or
mov
sub
sub
inc
adc
addb
icebp
sub
clc
outsl
addl
mov
add
push
pop
mov
lds
push
loop
mov
clc
movsl
mov
mov
mov
jae
add
aad
sub
xor
adcb
cld
sub
add
adc
scas
and
adc
mov
sub
addb
pusha
mov
out
ret
mov
adc
daa
push
inc
push
lock
cmc
test
dec
imul
aad
sarb
lock
or
xor
pop
clc
and
push
cmp
dec
gs
cmpl
cmpsl
ja
rcrl
xchg
jle
sub
push
xor
cmp
adc
push
cs
cwtl
scas
shr
xchg
or
andb
out
jle
pop
dec
sub
fcomps
enter
dec
insl
nop
xor
dec
out
mov
xor
xchg
xchg
in
or
adc
enter
or
lock
adc
sbb
fidivl
mov
insl
adc
inc
loope
dec
mov
fsubrp
cmpsl
or
mov
jge
test
add
iret
inc
xchg
les
rcrl
lds
loopne
test
or
sub
hlt
fldenv
sarl
and
std
or
int3
fbstp
push
adc
sbb
rolb
ret
sarl
jns
adc
inc
cmpl
sbbb
sub
cld
adc
jle
cmp
adc
daa
mov
mov
mov
xor
sub
scas
cmp
cmpsb
enter
add
jne
bound
mov
into
or
js
cltd
sub
rclb
jp,pn
adc
fwait
push
insb
mov
cmpb
test
mov
out
add
mov
jle
pop
inc
mov
and
inc
add
std
sbb
mov
jne
into
mov
out
and
xchg
inc
pop
jge
mov
ud1
jmp
ss
ljmp
lea
mov
call
cmp
pop
ja
je
mov
test
dec
scas
cmp
jg
ret
inc
adc
and
icebp
arpl
mov
ret
clc
mov
repnz
rolb
mov
divb
or
iret
les
pop
mov
test
lea
lea
jp
push
mov
jg
clc
dec
or
mov
and
jecxz
scas
push
loop
mov
add
int
jg
imul
xor
sbb
xchg
jne
pop
and
xchg
xor
ljmp
mov
repnz
pusha
adc
and
sbb
xchg
pushf
pop
hlt
scas
mov
adc
repnz
add
in
lds
shll
or
add
out
adc
cmp
sahf
rcr
sbb
sbb
mov
add
or
xchg
lret
test
xchg
push
mov
add
ljmp
mov
dec
sub
sbb
mov
repz
cwtl
and
dec
xchg
std
cli
or
daa
jecxz
jno
lock
jg
sbb
arpl
pop
aam
aam
and
sar
popa
sti
cmpsl
jg
ficompl
add
iret
sbb
loope
std
mov
stos
hlt
and
sbb
jmp
inc
loopne
jge
shll
add
scas
pop
cmpsb
ljmp
outsl
cmp
je
pop
movb
stos
leave
cs
pushf
push
lock
mov
xlat
inc
aad
cmp
push
cmp
pop
cmp
inc
movsl
out
out
lock
lds
push
lea
jmp
mov
aaa
outsl
jno
jae
mov
mov
cs
inc
jle
roll
jne
and
jle
cltd
test
and
push
testb
jns
inc
jecxz
sub
adc
pop
clc
or
loopne
mov
add
dec
call
outsl
out
call
mov
mov
mov
movsb
cmp
test
push
mov
pop
movsl
push
xor
push
cmpsl
les
shlb
or
fdivl
mov
xchg
mov
sbb
loopne
lods
enter
ja
leave
fs
adc
xor
loopne
in
les
pushf
mov
popa
test
mov
xchg
fsubrp
and
jge
data16
mov
pop
dec
dec
mov
in
inc
xor
call
inc
ficompl
mov
jle
into
add
dec
in
sbb
add
and
pop
jmp
xor
adc
mov
jne
xor
xchg
jge
pop
aad
mov
mov
xchg
lods
stos
adc
xchg
hlt
xchg
add
shlb
or
push
popl
nop
inc
testb
mov
sarb
jg
arpl
mov
negl
rcl
aam
mov
ss
jmp
cmp
mov
xlat
nop
mov
into
xor
movsl
pusha
xchg
sti
push
jmp
mov
call
fdivrp
cld
aaa
mov
lods
xchg
stos
pop
test
pop
lock
or
cld
fwait
dec
xchg
test
mov
adc
lea
test
mov
dec
nop
inc
xlat
cmp
cmpsl
popa
lret
sub
decl
call
mov
cwtl
aad
dec
or
sub
xchg
dec
adc
int
in
mov
clc
into
stos
pop
mov
ficomps
ret
sub
mov
push
lret
jbe
and
sti
inc
inc
xchg
adc
jg
inc
decl
adc
out
and
push
les
xchg
mov
xchg
pause
stos
mov
sub
test
adc
lods
fs
inc
ljmp
mov
daa
pop
pusha
jb
pop
push
nop
adc
faddl
adc
outsb
add
fmull
nop
mov
imul
cmp
jo
movsl
fisubs
subl
nop
and
add
cmpsl
fadd
insl
sti
jbe
and
mov
xchg
adc
ljmp
sbb
inc
insb
inc
add
in
jbe
das
and
and
sub
aaa
xchg
cli
cli
pop
jno
out
fs
mov
and
or
popf
xor
dec
outsl
in
aaa
js
push
xor
and
mov
adc
ret
sahf
xchg
push
cld
movsl
add
add
test
sbb
or
sub
xchg
je
adc
test
lods
stos
inc
inc
dec
inc
sarl
and
or
pop
mov
push
rcll
ret
sahf
pusha
inc
lcall
jl
movsb
movsb
test
add
mov
adc
lock
mov
stos
add
xorb
xchg
lods
andb
bound
and
xchg
push
cmpb
or
mov
and
test
mov
add
rcrb
pop
in
aas
push
in
out
mov
cmp
call
jecxz
sti
repz
lds
icebp
or
pop
mov
dec
mov
xchg
int3
enter
sub
push
scas
jge
ret
xchg
jmp
mov
fsqrt
adc
adc
loop
xchg
and
or
mov
loopne
sbb
fsubrl
adc
add
cs
icebp
inc
ds
sbb
cmp
mov
lcall
rorb
icebp
mov
enter
jb
push
mov
push
mov
imul
sti
cmpsb
js
pop
inc
jecxz
outsb
add
roll
mov
dec
sbb
fnstsw
add
add
mov
enter
inc
xor
fidivl
pushf
or
inc
les
decb
pop
int3
sub
push
sbb
loop
push
mov
ret
add
dec
push
jae
cmp
pop
mov
push
movsb
inc
addr16
notl
inc
xor
ret
add
neg
js
or
call
push
mov
fidivrs
push
imul
movsl
movsl
fsubs
loop
add
jo
rcl
sub
mov
push
out
cmp
mov
cmp
movsb
ret
push
shl
lea
pop
xor
lret
jmp
push
outsl
pop
jns
push
shrb
inc
xor
mov
push
jne
aas
inc
sub
mov
shrb
pop
cwtl
jno
push
adc
mov
mov
inc
jmp
xchg
or
add
pop
sbb
sub
hlt
lea
mov
adc
cltd
call
adc
and
xchg
rep
aam
xor
push
popa
inc
pop
inc
hlt
and
lcall
xor
sub
jo
push
mov
cs
and
aas
adc
mov
out
push
xor
xor
xchg
dec
mov
add
inc
sbb
mov
mov
cld
out
dec
daa
lcall
sub
push
dec
add
add
xor
jb
mov
decl
xchg
fldl
mov
mov
xlat
rolb
inc
sub
push
outsl
loope
out
pop
loopne
jge
stos
aas
cmp
loop
imul
mov
movl
jp
mov
or
inc
and
out
pushf
ljmp
push
jl
pop
gs
filds
push
ljmp
inc
mov
inc
insb
push
in
dec
test
push
mov
cmp
test
loopne
cli
push
inc
aas
jo
repz
sti
push
frstor
xor
xlat
or
iret
mov
std
sbb
mov
outsl
jae
push
adc
mov
sti
add
lahf
adc
sbb
leave
jp
inc
add
shrb
test
in
push
in
les
fstp
int
cmpsb
adc
sbb
scas
dec
fistpl
bound
stos
ss
inc
jbe
cltd
test
cmpsb
or
nop
push
addb
pop
mov
pusha
lock
scas
inc
jo
mov
in
add
ds
inc
rcrl
fnstsw
in
fistpll
xorb
jns
jne
add
jge
cmp
xchg
arpl
dec
leave
sub
lea
pop
in
pop
bound
bound
gs
lods
mov
mov
adcb
fisttps
incl
inc
jno
faddl
jmp
mov
icebp
sub
pop
mov
out
rclb
aam
pop
rorl
xchg
sbb
sbb
inc
les
fsubl
sbb
jle
add
outsl
xor
fcoml
clc
inc
mov
mov
rcll
and
or
das
mov
addr16
test
mov
add
dec
jecxz
sbbb
shl
shll
test
test
rcrb
and
sub
hlt
inc
sar
call
sti
repnz
dec
into
cs
je
add
xor
and
sbb
add
add
adc
push
ds
jno
inc
dec
or
add
adc
mov
fcomps
shll
or
outsb
add
and
sbb
adc
push
and
mov
out
and
pop
rclb
sbb
fdivrl
out
cmp
movb
jge
adc
mov
ljmp
icebp
cmp
add
enter
addb
push
shl
mov
inc
roll
dec
push
stos
push
pop
loope
adc
or
leave
jg
lret
addb
add
lods
inc
xchg
movb
and
fwait
pusha
or
enter
mov
sbb
loope
jge
xor
cmc
cmp
mov
clc
mov
das
sbbb
addr16
adc
aaa
repnz
in
push
sbb
or
idiv
lcall
stc
mov
mov
xor
or
orb
sbb
shlb
push
and
add
sbb
iret
and
lods
push
jo
jb
rolb
mov
push
movsb
add
enter
out
mov
jno
xchg
or
mov
sbb
inc
cwtl
dec
adc
inc
add
sbb
or
and
pop
inc
sti
bound
test
in
mov
jnp
cmp
insb
cmp
sbb
rorb
out
adc
adc
add
in
and
cmovp
mov
sbb
adc
inc
add
jnp
mov
or
inc
popf
fcmovnbe
incl
xchg
sbb
adc
mov
fsubrl
mov
sbb
loope
nop
iret
adc
cmpl
push
sbb
testl
inc
mov
lods
sbb
cmpsb
loop
pop
fs
or
xchg
adc
pop
pop
or
clc
cmp
sub
cmp
lea
es
sub
scas
pop
xchg
sbb
and
std
add
cltd
sar
sbb
mov
ficomps
mov
add
lods
mov
hlt
adc
shr
mov
movups
inc
dec
mov
mov
mov
and
aam
mov
stos
int3
pusha
mov
inc
sub
pusha
add
insb
push
pop
add
cmp
les
lds
add
ficoml
pop
cmp
fsub
addl
fs
and
jg
jne
and
lds
or
add
in
pusha
or
iret
xchg
pusha
add
jns
pop
call
sub
xor
xor
pop
fidivs
sbb
mov
test
adc
out
pop
adc
pusha
add
xchg
inc
adc
or
mov
ret
movsb
loopne
lea
dec
fmull
adc
adc
push
loop
hlt
mov
dec
sbb
bound
pop
mov
lds
lods
or
scas
mov
call
jl
aaa
mov
adc
ja
js
loope
or
pop
add
add
add
add
mov
testl
and
in
push
jp
pop
or
add
sub
push
xor
and
movsl
mov
out
loopne
push
and
or
notb
sub
add
push
fidivrl
or
mov
outsb
sbb
push
xlat
push
add
adc
fsubr
jge
or
push
out
xchg
shlb
cwtl
mov
and
sbb
call
cmp
add
adc
dec
xchg
faddl
cltd
loop
cmpsl
push
inc
out
and
mov
or
add
adc
mov
sbb
cmp
aas
or
or
aas
stos
out
les
lcall
incb
popf
out
push
xchg
lahf
pop
or
fmull
cmp
or
mov
push
add
mov
add
and
mov
push
out
mov
push
jecxz
jne
mov
jb
clc
movsb
ljmp
out
or
pushf
sub
cmc
xorb
ret
in
xor
sub
sub
std
and
loope
fisubl
aam
xor
enter
jo
or
je
mov
je
popf
sahf
jecxz
fst
sub
or
add
out
fisubrl
mov
sbb
jne
js
sti
pop
xor
xor
inc
mov
in
and
jne
inc
dec
insb
dec
inc
cld
fstpt
adc
shlb
jne
jg
loopne
jmp
insb
inc
pop
xchg
sahf
sub
mov
add
add
lock
sub
int3
hlt
mov
shlb
sahf
sbb
mov
and
nop
or
dec
xchg
test
pop
add
push
and
sub
shlb
in
nop
test
test
adc
sbbl
push
hlt
jecxz
adc
jne
pop
cltd
mov
push
xor
add
mov
jl
sbb
add
push
test
add
sysret
lock
or
dec
add
inc
fadds
sub
stos
cmp
push
adc
cmp
gs
subl
add
mov
xor
mov
cmp
test
sub
cmp
add
rol
inc
mov
jmp
cltd
mov
bound
ret
cmpb
dec
adc
out
add
in
dec
add
vmread
and
sbb
inc
pop
out
in
insb
push
roll
cwtl
ror
dec
pop
adc
dec
add
sub
ret
insl
pop
inc
pop
mov
cmpsb
mov
push
jp
sbb
or
aam
or
cwtl
cmpsl
lock
aad
and
hlt
add
outsl
pcmpeqw
sti
test
repnz
inc
adc
in
mov
sbb
sub
xor
cmp
adc
cwtl
inc
push
push
stos
sarb
dec
xor
dec
mov
sbb
mov
movsb
and
add
popa
sbb
and
scas
roll
add
xlat
cmpsl
pop
adc
xor
int
dec
imul
dec
push
sbb
popf
sti
loope
bound
out
aas
xchg
or
xor
lret
mov
aas
dec
push
pusha
push
loop
dec
or
and
and
stos
sub
dec
out
lret
in
sub
stos
xor
push
adc
mov
mov
push
pop
sbbl
loop
jbe
jp
or
stos
addb
or
and
aaa
xlat
xchg
add
cmp
mov
addb
pop
push
rolb
repnz
pop
dec
push
dec
xor
adc
loopne
shl
mov
fsubrs
xorl
adc
out
push
jae
dec
jge
pop
jp
sub
pop
shl
jecxz
cmpsl
shrb
inc
mov
adc
cmp
pop
vxorps
daa
sti
fsubrp
add
sub
adc
aas
and
sbb
sub
iret
mov
in
inc
jne
sbb
movsb
add
dec
ds
xor
mov
xchg
rcll
push
mov
sahf
or
or
stos
loopne
mov
xchg
sub
mov
push
add
mov
jb
inc
bound
lret
add
es
adc
mov
int
pop
in
lret
pushw
or
jnp
add
add
mov
sbb
add
in
add
pusha
sarl
inc
imul
xchg
adc
inc
out
add
mov
adc
sbb
mov
addb
add
cmp
jns
dec
adc
sti
push
mov
jne
mov
outsb
push
add
inc
adc
ljmp
push
cmc
push
and
xor
lds
pusha
test
push
mov
pop
lock
popa
dec
inc
pop
push
xchg
cmp
adc
inc
lds
add
xor
cmc
xchg
xor
repz
jl
mov
mov
add
out
js
inc
xor
cmp
adc
and
shlb
insl
adc
xchg
mov
dec
rolb
pop
mov
add
bound
test
add
mov
lds
xor
std
stos
push
add
jae
mov
inc
jge
mov
and
test
scas
outsl
ljmp
loopne
add
movsl
std
jno
jne
cli
fucomip
jmp
movsl
lock
pop
mov
js
insb
sub
incl
cld
and
and
int3
lahf
ficompl
jle
lock
cmp
jp
adc
imul
push
hlt
push
insl
into
pop
pop
cmp
movsl
decl
add
xchg
inc
add
dec
push
loop
popf
add
jge
push
push
adc
jo
adc
add
jle
mov
mov
call
fldl
mov
scas
push
add
negb
pop
fsubl
add
pop
insl
mov
sub
lods
add
xlat
imul
pop
add
outsl
out
jne
std
sahf
jecxz
call
stc
lods
push
add
inc
add
lret
mov
sbbb
iret
aam
adc
and
int
cmp
jno
mov
subb
jle
push
adc
mov
sbb
xor
pop
sti
outsl
in
testb
push
into
add
into
push
dec
add
mov
mov
mov
cmp
sbb
test
fisttpll
rol
bound
nop
inc
or
mov
push
and
adc
hlt
xlat
cmp
jl
xchg
ret
incl
cs
push
add
add
shr
mov
lds
jne
popa
arpl
loop
cli
mov
outsb
fucomip
imul
sbb
and
icebp
jg
mov
mov
dec
add
xchg
cmp
or
add
and
sarb
cmp
cli
incl
sub
nop
movsl
dec
sbb
sbb
clc
jns
aad
xchg
mov
clc
call
test
pushf
icebp
adc
mov
mov
jge
nop
es
dec
orl
mov
and
nop
shrb
cld
mov
jo
movsb
dec
push
inc
stc
lock
dec
hlt
push
mov
adc
xchg
sbb
xchg
popf
pop
sti
xor
jnp
pushl
addr16
pusha
call
pop
nop
dec
dec
sbb
test
mov
sbb
ljmp
xor
add
mov
mov
mov
clc
into
cwtl
add
pusha
negb
call
adc
das
insb
cld
push
mov
and
mov
mov
stos
sti
lcall
xchg
leave
push
and
imul
cmpb
fs
shrl
sub
ret
pop
push
mov
push
jg
pushl
rcl
in
incb
or
mov
dec
sbb
jg
jne
addr16
push
pusha
or
adc
pop
push
lret
and
lock
ljmp
cmc
negb
sarl
andl
or
jnp
ljmp
movsl
sub
lea
mov
adc
sar
or
sbb
add
mov
es
pop
lea
pushf
ret
mov
decl
cld
leave
mov
dec
jno
or
add
shrl
outsl
mov
xchg
jp
dec
jle
subl
add
dec
dec
icebp
pushfw
lret
fcmovnb
ljmp
cmpsb
ret
sbb
add
or
aaa
xor
decl
out
adc
pop
xor
into
and
mov
les
mov
mov
add
fistl
dec
cld
pop
jp
mov
shl
and
bound
incl
or
pop
ljmp
inc
int3
add
or
fsubr
stos
and
jecxz
or
andl
adc
out
inc
andl
pop
xor
adc
shl
push
fadds
popf
push
call
inc
cld
pop
xor
test
mulb
mov
adc
icebp
outsl
std
jl
or
insl
xor
adc
sub
mov
jecxz
and
fucom
dec
or
mov
mov
xor
mov
jg
or
ss
sbb
add
add
pop
adc
decl
xor
out
adc
iret
xor
test
xor
insl
pop
pop
pop
call
mov
add
lods
cmp
mov
test
pushf
mov
jb
xor
divb
xor
imul
dec
shl
in
jecxz
ror
push
loopne
jle
data16
add
fs
out
lcall
cltd
mov
xchg
fstpl
xor
jnp
popl
and
outsl
adc
xchg
add
cmp
fs
test
cmpsb
iret
xor
xlat
inc
insb
scas
stos
jecxz
add
or
dec
inc
adc
add
out
bound
jb
and
stos
clc
dec
and
jge
dec
and
mov
lret
cmp
addb
std
ficomps
pop
loop
and
dec
and
xchg
and
sbb
fbld
sub
mov
movsl
out
icebp
pop
repz
bound
mov
daa
jmp
mov
add
fucomip
call
leave
mov
sbb
pusha
dec
jg
add
inc
inc
adc
pop
in
inc
push
pop
xchg
inc
jecxz
ret
lods
lds
xchg
mov
lret
jg
jnp
daa
loopne
dec
rcr
adc
addr16
into
xor
inc
fbld
lods
or
out
push
lret
stc
in
mull
faddl
jg
jp
jno
iret
cmp
imul
incl
fistl
inc
and
lock
adc
or
dec
jg
out
mov
addb
jns
inc
inc
loopne
lock
cmpsl
rcrb
and
cmpsl
fsubs
jb
bound
adc
push
arpl
cmp
sbb
pop
add
and
mov
sbb
add
mov
hlt
jg
ret
dec
shll
sbb
aaa
inc
rorl
push
or
addr16
dec
jecxz
js
mov
ljmp
cmpb
in
dec
jns
cmpsl
dec
sbbl
lcall
push
iret
mov
outsl
mov
es
jo
adc
adc
ljmp
leave
inc
gs
mov
je
fadd
incb
xchg
pusha
bound
and
clc
pop
mov
lcall
pop
and
call
adc
ss
rolb
xor
cmpb
imul
ljmp
push
jge
mov
fs
add
js
dec
xor
ljmp
movl
push
push
mov
lods
dec
sub
xor
int
inc
jg
lcall
aaa
ljmp
jl
xorb
cmp
stc
push
ficoml
sti
and
fcmovnu
push
mov
jg
jnp
sub
or
pop
arpl
dec
xor
pushl
push
ljmp
jle
and
jno
aad
lcall
fiadds
daa
adc
mov
jbe
xor
jo
mov
xchg
icebp
fildll
movsb
adc
add
lret
dec
or
or
cld
scas
add
ret
scas
orb
andb
jge
jb
mov
pop
lret
cmc
lods
aas
sar
push
daa
mov
loopne
movsl
mov
jne
lods
adc
mov
push
push
fmuls
imul
fbld
pop
mov
or
pusha
push
push
pop
loop
in
je
mov
ds
aam
and
cmp
test
test
mov
outsb
mov
call
or
xchg
sbb
sub
jnp
call
testl
sub
mov
push
xorb
jo
ds
cmp
roll
mov
lahf
fsubs
mov
daa
sub
das
nop
adc
test
xor
push
mov
mov
loopne
orb
nop
fiaddl
aad
test
add
mov
popf
inc
mull
jecxz
test
test
jecxz
sahf
inc
or
mov
stos
and
mov
dec
adc
jmp
mov
sub
mov
hlt
dec
inc
mov
and
jb
push
shrl
outsb
add
rolb
sub
jg
outsl
mov
or
push
popa
and
mov
jge
jmp
push
fcmovne
mov
push
pop
js
inc
popa
idiv
xor
lahf
xchg
inc
mov
push
xor
mov
pushl
mov
push
fsubrs
adc
and
add
cmpsl
insl
and
xchg
jbe
faddl
popa
fbld
pop
inc
add
cld
aaa
xor
in
movb
movsl
adc
lahf
movsb
add
and
pop
inc
push
mov
notl
jge
cmp
mov
add
into
push
push
loop
std
and
xor
push
movsl
pop
shrl
push
jno
fcomps
pop
xor
push
xchg
decl
jnp
add
cmp
xor
mov
mov
jl
lds
out
sahf
repnz
mov
xchg
and
inc
inc
and
sbb
sub
sbbb
cld
push
jge
mov
scas
cmp
pusha
lret
and
aad
mov
sub
add
insl
sbb
adc
or
cs
mov
imul
push
pop
leave
aas
jb
gs
pushf
inc
stos
inc
mov
scas
bound
js
addb
cld
call
cmpsl
dec
push
cwtl
dec
inc
jne
lds
test
jnp
lods
fidivrl
stos
jno
dec
mov
fcmovne
es
dec
mov
jg
fnstenv
out
clc
or
jns
jmp
mov
mov
subl
mov
loope
push
cwtl
out
and
adc
inc
adc
inc
and
filds
dec
dec
je
pop
mov
inc
sbb
mov
adc
idivb
das
jne
inc
add
jne
mov
inc
xor
cmc
add
cmp
mov
mov
inc
and
cwtl
sbb
int
fistpl
out
dec
cs
push
outsb
push
adc
push
hlt
ljmp
mov
xchg
vpacksswb
pop
sbbl
rcll
mov
lcall
mov
jb
roll
adc
jecxz
inc
repz
fistps
jle
mov
stos
jne
push
inc
rcll
fistpl
and
push
xchg
fs
jnp
push
dec
mov
outsl
push
outsl
shlb
and
mov
dec
mov
xor
outsl
gs
sbb
mov
jmp
int3
add
xchg
imul
fsubrp
xor
fwait
das
mov
cmp
adc
or
xchg
arpl
push
inc
inc
fs
lcall
sub
mov
push
in
lret
loope
push
sub
jmp
sbb
fidivrs
xchg
mov
test
outsb
mov
push
mov
sbb
fucomip
jg
jp
fnstenv
stos
jne
cltd
nop
sbb
mov
iret
test
cmp
imul
dec
jle
repnz
jg
pop
jle
cmpb
into
outsl
hlt
int3
xchg
and
es
dec
in
test
in
jne
repz
push
or
loop
incl
mov
jp
push
call
cmc
cmp
sub
int
mov
jns
cltd
adc
lcall
dec
mov
xor
add
cmp
jae
movsl
and
jg
and
mov
imul
sbb
pop
jg
jmp
or
js
inc
dec
lods
mov
sub
cld
push
popf
and
cmp
jle
jle
cmp
xor
loope
mov
sti
add
sub
sarb
mov
lock
incl
inc
push
adc
cmc
addr16
repnz
out
mov
mov
test
adc
mov
or
sti
test
pushl
add
cmp
stos
lock
sub
xor
cwtl
outsb
mov
jg
decl
shrl
mov
or
xchg
add
add
test
ljmp
iret
push
inc
lahf
sarl
pop
pop
mov
lods
cmpsb
into
pop
jns
stos
pop
stos
inc
loope
ljmp
in
test
sbb
andb
and
inc
sbb
ficompl
sub
xor
int
gs
ljmp
loopne
push
cld
imul
xor
sarb
adc
fildll
aaa
dec
sbb
sub
mov
dec
inc
and
inc
repnz
inc
rol
mov
sbb
jle
subl
cmp
outsb
xor
mov
cld
cwtl
mov
loope
adc
loopne
and
jbe
sub
lea
jb
jg
daa
and
pop
mov
mov
mov
cmp
jg
insb
lahf
inc
cwtl
cltd
xchg
movsl
or
leave
push
xor
wbinvd
lgs
cmp
or
aad
or
cmpb
fbld
into
sbb
mov
sub
lods
push
lcall
outsl
mov
sbb
in
ss
filds
inc
add
sbb
call
lahf
pusha
je
aas
mov
mov
in
dec
rol
cmc
cmp
xchg
inc
subl
bound
adc
pop
call
add
sub
cmp
push
or
jecxz
clc
mov
ficoms
scas
push
xor
or
lcall
aam
push
maxps
js
loopne
sbb
add
mov
loop
iret
jbe
sbb
sub
mov
or
repnz
jg
and
sbb
lcall
orb
mov
and
pop
loop
cltd
sbb
inc
or
add
inc
or
rolb
stc
and
shlb
int
xchg
pop
ljmp
dec
adc
ss
loopne
daa
cmp
mov
decl
push
push
pop
subb
cmc
jg
repnz
ret
inc
xor
aaa
pop
or
enter
out
lcall
dec
movsb
je
add
mov
cmpsl
pop
or
hlt
rolb
jle
sub
lods
andl
faddl
mov
xor
cmp
nop
dec
cli
clc
mov
push
js
loopne
dec
xor
sbb
push
ret
decb
push
push
mov
inc
pop
jp
icebp
add
sbb
push
dec
xchg
sbb
test
es
jno
cmp
les
lcall
mov
fadds
push
or
into
repz
fcomip
js
dec
dec
or
push
aad
push
dec
adc
sahf
push
orb
pop
fs
push
insb
or
hlt
mov
xchg
mov
call
lock
popf
mov
adc
xor
and
pushf
jno
pop
sbb
mov
add
dec
xor
ret
enter
mov
sti
outsl
add
daa
inc
mov
bound
adc
mov
pop
aam
sub
or
mov
leave
and
or
mov
pop
and
test
clc
xchg
xor
add
xor
push
jne
fsqrt
roll
pop
sahf
or
inc
push
jo
mov
ficompl
mov
ljmp
lock
mov
cmp
test
inc
mov
test
sub
cltd
orb
rolb
adc
loope
dec
xor
push
sbb
pop
mov
push
sbb
arpl
sub
outsb
inc
cmpb
or
imul
dec
out
mov
rorl
adc
jecxz
add
jae
add
aam
mov
push
add
aas
xchg
adc
dec
sbb
and
pusha
mov
add
fisubs
mov
sub
loop
and
fisubrs
xor
sbbb
pop
pusha
sub
loop
mov
fcomps
fldl
pop
in
adc
mov
and
out
mov
fcomps
adc
cmp
inc
adc
std
out
stc
or
or
loope
or
dec
add
mov
xor
and
cli
add
sub
cmp
jnp
xchg
adc
aam
or
insl
jecxz
mov
jbe
leave
scas
add
jns
clc
push
adc
ss
sub
adc
cmpsb
jb
dec
hlt
rcrb
fdivrs
add
lret
xor
lret
adc
pop
and
lcall
lea
adc
and
dec
xchg
out
and
int
add
std
dec
mov
jg
push
xor
cmp
dec
push
and
add
test
lret
adc
xchg
jae
jmp
sbb
pcmpgtd
jl
and
das
adc
aam
inc
hlt
shll
sub
xor
xor
mov
sub
out
cld
dec
jge
xor
push
or
jnp
lds
sub
push
adc
dec
and
push
add
adc
pop
and
adc
sub
inc
push
adc
insl
callw
fcomps
jnp
lds
outsb
xor
or
std
sbb
cmp
outsl
or
negb
sbb
dec
nop
mov
orb
iret
daa
mov
sbb
repnz
aas
into
mov
icebp
or
sbb
jnp
enter
push
mov
sbb
xor
pcmpeqd
xor
adc
out
jle
jbe
cmp
mov
dec
add
sahf
andl
cld
add
jno
or
outsl
aaa
and
outsl
adc
lock
xlat
push
bound
into
ja
inc
lea
and
roll
movlps
fistps
sub
rolb
clc
push
dec
pop
xor
push
mov
xchg
orl
ljmp
pop
imul
xchg
mov
stc
test
nop
stc
loopne
inc
xor
aaa
sub
sbb
cmpsl
mov
das
cmp
ret
out
nop
movsl
pushl
nop
call
rorl
mov
andl
aaa
icebp
jg
out
mov
cltd
and
fisttpll
xchg
mov
in
decl
lea
lahf
ret
and
adc
sbb
shlb
dec
cmpsl
push
jge
adc
inc
inc
dec
adc
cmp
incl
pop
test
adc
sbb
fcmovb
add
push
call
decl
inc
jmp
pop
inc
dec
jo
addr16
int3
dec
sbb
pop
mov
jnp
lret
loop
add
ret
mov
ljmp
pop
add
enter
jno
sbb
cmp
xchg
sub
fnsave
sub
xchg
outsl
jo
fwait
ljmp
xor
xlat
add
dec
in
sbb
push
ljmp
cwtl
lahf
jnp
inc
add
cltd
jmp
cmp
sub
ret
add
adc
decl
shrl
sbb
hlt
push
xlat
mov
jo
subl
and
adc
jg
and
mov
pushl
push
imul
push
out
xchg
sti
test
inc
addl
cmp
ret
pop
inc
inc
into
mov
xchg
leave
cmp
jecxz
sub
push
dec
mov
mov
fistpll
push
mov
in
movsl
mov
push
ret
lret
incl
xchg
mov
push
mov
jns
jmp
jecxz
js
jp
xchg
dec
leave
decl
and
das
cmc
cmp
in
pop
rolb
cmpsl
notb
sub
inc
pop
inc
sahf
negl
dec
nop
in
pushw
mov
xchg
cmp
or
adc
jle
lret
push
outsl
inc
scas
daa
xor
outsb
icebp
push
out
shr
push
ret
rcrb
lahf
loope
das
sub
orl
cmp
xchg
and
xor
inc
or
inc
jl
ljmp
and
enter
cmpl
mov
sbb
sub
add
cmp
shlb
das
sub
pop
and
fbld
pop
aad
adc
test
in
pop
add
fincstp
lea
add
test
in
push
and
in
mov
add
sar
xchg
push
jnp
jb
add
jb
aaa
sub
std
out
lods
in
xchg
mov
daa
xacquire
aaa
cli
mov
mov
clc
andb
inc
mov
fsts
icebp
mov
sti
je
daa
leave
fnsave
sub
fwait
movsl
aaa
call
outsl
pop
jle
xchg
mov
mov
xchg
addr16
xchg
cld
add
cwtl
pushl
dec
xchg
jmp
jecxz
lret
cmpl
ret
insb
stos
adc
icebp
clc
ljmp
inc
scas
movsb
adc
mov
sub
push
fbstp
lret
lahf
insb
pop
jge
lcall
jg
clc
dec
cmc
lds
out
jl
xchg
adc
rolb
outsl
fdivr
or
and
ljmp
xchg
jno
push
sbb
fmul
mov
xchg
call
test
test
push
arpl
push
stos
and
push
insb
ljmp
xor
mov
and
mov
decl
ljmp
arpl
icebp
ljmp
push
jo
and
out
push
dec
jo
test
or
into
je
std
mov
outsb
cs
xlat
jl
sti
dec
push
push
dec
inc
aas
pop
stc
inc
sar
dec
test
sti
loop
scas
mov
mov
subl
cld
jp
mov
cmc
lods
and
cld
or
cmp
incl
call
dec
sbb
xchg
lods
and
mov
rcll
mov
in
mov
imul
inc
dec
lret
jbe
inc
mov
cld
dec
dec
ds
repnz
add
jne
jno
mov
jg
enter
mov
inc
add
dec
in
pop
test
mov
dec
les
cmp
sbb
add
shrb
shlb
pop
test
mov
push
mov
mov
inc
jp
into
stos
and
fisubrs
incb
int
je
mov
pop
fmull
clc
or
fistpl
xchg
jg
insb
xchg
stos
inc
sub
pop
inc
sar
jg
fildll
lea
nop
cmc
add
loope
or
mov
vcvttps2dq
or
das
lock
not
push
and
adc
stos
loope
add
pusha
jle
std
or
aaa
loope
imul
cmpsl
cmp
push
add
push
mov
xor
lock
mov
dec
aas
test
push
adc
stos
dec
or
outsb
movswl
or
shrl
jo
xor
cmp
nop
and
bound
mov
movsl
sub
nop
fildll
mov
dec
push
scas
aam
testl
jmp
mov
aas
cmpsl
sub
inc
cli
jmp
faddp
mov
push
lcall
repnz
add
xchg
dec
test
pop
clc
mulb
cwtl
fs
incb
add
xchg
add
aam
or
out
jo
pop
jp
or
xor
dec
icebp
loopne
mov
mov
int
movsb
ret
sbb
xchg
in
add
inc
cld
or
pushf
cmp
push
sub
inc
mov
mov
ljmp
gs
scas
mov
jae
outsl
addr16
aas
dec
mov
add
mov
sbb
xor
xchg
sbb
mov
push
scas
xor
xor
push
pop
fnstcw
add
jo
or
out
test
les
cwtl
mov
frstor
idivl
xlat
aas
or
rcrl
jmp
mov
cmp
popf
outsl
inc
mov
gs
xor
pushf
sbb
adc
fimuls
mov
frstor
xchg
or
mov
mov
push
add
add
sbb
mov
mov
lret
mov
add
and
xor
jbe
inc
aam
shll
add
add
xchg
add
and
into
jo
jge
sbb
sbbb
cmp
loop
cmp
and
ds
lods
test
orb
jae
sub
mov
push
call
push
loopne
mov
cmp
sbb
mov
xor
fiaddl
adc
rcr
out
push
notb
pop
xor
aaa
cmp
in
push
clc
adc
test
les
jns
movsl
lds
mov
cmpsb
stc
add
add
mov
sub
xchg
xchg
cmp
sbb
mov
shl
mov
rcll
mov
xor
pop
add
stos
push
adc
lods
add
inc
sbb
xor
mov
repz
aaa
inc
xor
repnz
and
ret
cmp
sbb
or
xchg
je
negl
push
outsl
mov
fbld
pop
in
int
shl
aam
pop
inc
sbb
fisttps
movl
arpl
pop
int3
popf
clc
sub
test
push
adc
or
in
movsb
insl
jge
sub
xor
lock
mov
inc
lahf
push
dec
push
movsl
movsl
sub
int3
in
mov
push
fdivp
push
adc
jae
lahf
mov
andl
pop
push
fiadds
aas
push
scas
or
dec
loop
sbb
add
jmp
adc
arpl
aas
icebp
jecxz
and
sbb
mov
icebp
icebp
sub
fidivs
sbb
roll
add
pop
jl
inc
pop
push
cmp
dec
add
imul
mov
lds
repz
stos
dec
outsb
stos
addb
add
nop
out
jo
add
aas
rorb
jp
jnp
dec
pop
pop
dec
movsl
ficoms
in
pop
push
fcoml
repz
cmp
jb
xor
jmp
ret
movsb
or
push
jle
scas
pusha
jo
aad
in
addl
pop
test
stos
push
js
mov
mov
rol
mov
clc
into
rolb
sub
mov
shr
push
subl
xchg
push
out
sbb
mov
arpl
mov
ret
fs
sbb
inc
les
rcrb
out
inc
sub
or
push
and
cs
jge
daa
fnstsw
mov
out
sar
lea
sub
loope
mov
inc
sbb
or
sub
mov
push
cmp
subl
mov
xabort
and
dec
mov
loope
push
xchg
add
push
add
adc
aaa
cmp
add
and
mov
mov
or
and
mov
push
xor
mov
sub
dec
mov
adc
adc
xor
scas
adc
out
repz
or
inc
jb
fs
cmp
je
pusha
iret
adc
mov
push
mov
sbbb
shl
pop
ret
fsubrp
adc
or
and
ucomiss
pop
dec
lahf
ficompl
pop
and
and
add
in
or
mov
sbb
sub
sbb
ds
jmp
lods
fwait
xor
adcl
js
sbb
inc
mov
inc
push
mov
inc
pop
fildll
adcl
jmp
test
jne
cmp
mov
addb
fbstp
int3
imul
adc
sbb
testb
cs
ret
ret
in
mov
in
into
and
repz
xor
xor
lret
pop
jg
mov
out
adcb
adc
mov
jmp
xor
xor
push
inc
stos
scas
add
sbb
dec
in
icebp
jno
bound
or
cltd
iret
mov
dec
adc
test
sbb
scas
add
push
fcoms
add
aad
dec
and
adc
mov
bound
out
hlt
adc
adc
and
sub
in
pusha
ret
leave
out
mov
fucomp
in
cmp
into
icebp
cmp
dec
xchg
push
and
test
push
ss
jge
dec
add
sbb
testl
bound
xor
dec
inc
dec
loop
les
and
arpl
ret
in
pop
out
jno
outsb
inc
and
dec
fiadds
daa
push
inc
fwait
aad
notb
fdivr
and
inc
jle
or
or
or
pop
xorl
test
fdiv
push
mov
not
ficoms
push
push
movsb
push
sar
shr
in
adc
sti
jae
pop
mov
cmp
adc
xor
fstpt
sbb
cmp
into
lcall
pop
testl
mov
das
aad
in
adc
sbb
call
je
mov
dec
movsl
loop
cmp
ja
clc
cltd
pop
and
inc
dec
adc
iret
pop
cmpsb
sub
in
fnstsw
xchg
mov
push
and
xchg
sbb
addr16
dec
add
jp
fmul
sub
jle
mov
loop
sbb
xor
pop
js
pop
sub
mov
jecxz
pop
dec
adc
sub
add
jecxz
lret
xchg
fsubr
arpl
adc
fisubrs
cmp
adc
in
sbb
fadds
jnp
mov
inc
push
jae
xchg
mov
adc
xor
or
sub
xor
lea
test
stos
mov
ret
sbb
cmp
push
ljmp
pop
addb
shrb
mov
ljmp
sti
or
in
fwait
pop
add
adc
imul
add
add
jmp
mov
mov
sbb
sub
mov
aam
aas
subl
xchg
rcll
push
sti
hlt
pushf
and
push
cli
sbb
cwtl
shr
add
test
mov
enter
clc
es
mov
popf
lock
jle
stos
pop
out
scas
or
push
scas
sarl
les
jo
pop
cld
add
clc
sbb
push
jnp
mov
xor
imul
cmp
cs
pop
adc
pop
inc
dec
lahf
dec
jge
sahf
or
xchg
pop
ljmp
pop
popf
mov
out
dec
push
mov
out
inc
repnz
cld
xor
and
cmp
add
pop
das
xchg
jle
or
lcall
inc
mov
mov
or
inc
sbbl
ret
adcb
jb
push
fdivl
test
pop
repz
notl
pop
inc
and
mov
gs
call
mov
push
sbb
repz
and
insl
pop
cmp
cmp
xor
push
push
mov
loop
loop
js
or
or
mov
pop
lret
xlat
in
pop
xchg
fcomi
in
sub
ret
mov
push
in
jp
cmp
jbe
add
and
cmp
push
fiaddl
dec
stos
adc
jno
cmpsb
call
lods
add
push
add
inc
xor
js
push
hlt
inc
mov
sbb
rclb
lods
pop
mov
mov
insl
push
ret
sub
ret
fxch
in
and
mov
cmp
sub
inc
xchg
repz
aam
and
mov
lret
das
xchg
inc
pushl
loopne
pop
mov
pusha
add
and
adc
ret
jne
adc
mov
push
or
mov
loopne
call
and
lret
out
sarb
idivb
push
pop
mov
adc
add
nop
imul
add
sbb
mov
push
push
push
xchg
hlt
adc
xchg
sbb
sahf
cmp
ja
xchg
push
ja
xor
cwtl
or
inc
shll
addb
add
sbb
std
shll
dec
mov
or
mov
mov
dec
mov
ret
xchg
xor
add
mov
dec
sbb
outsb
push
stos
das
inc
aam
rolb
in
push
fadd
sbb
or
and
pop
sbb
and
mov
mov
sbb
fistps
xor
cwtl
pop
cli
xor
es
pop
mov
xor
outsl
push
test
add
add
out
loop
dec
and
out
aas
xchg
cs
push
and
mov
or
xchg
inc
nop
rcrb
or
js
fcoml
fwait
stos
sbb
clc
mov
xchg
cwtl
add
sub
dec
pusha
out
and
movsb
xorb
mov
fildl
pushf
inc
xor
outsb
cmp
jae
call
and
call
test
push
push
xor
add
test
ja
jb
sar
dec
xchg
ljmp
and
push
mov
pop
arpl
pusha
jbe
sbb
fidivl
mov
add
jle
fsubrp
popa
sub
cli
js
mov
adc
fldl
adc
out
xlat
or
sub
mov
dec
dec
pop
cmc
jns
or
mov
out
mov
lcall
test
adc
dec
test
sub
in
xchg
jp
ficompl
ret
adc
fnstsw
xchg
push
add
aad
jp
add
mov
aaa
sub
mov
test
or
clc
cmc
dec
and
ja
jecxz
xchg
pop
fidivl
jl
add
dec
pusha
sub
shl
fs
dec
enter
movsb
ss
mov
mov
or
lock
pop
arpl
test
inc
mov
lcall
jmp
loopne
xor
fisubs
ss
shlb
lcall
xchg
inc
icebp
sbbb
mov
rol
add
mov
sub
mov
cmp
and
jae
add
and
pushf
jnp
negb
adc
mov
sbb
repnz
add
xor
or
bound
mov
data16
sbb
fdivr
repz
jb
popa
sub
sub
std
lret
or
and
outsb
sbb
push
mov
popf
decb
ret
mov
inc
dec
scas
or
loop
fmull
cli
fisubrs
pusha
sub
in
test
xlat
xor
lock
out
sub
cwtl
cwtl
outsl
pop
xchg
push
les
adc
pop
jecxz
and
fbstp
mov
repnz
fwait
aam
sub
es
stos
fisubrs
cmp
xchg
dec
cmp
pop
into
aam
cwtl
mov
cmp
popf
sbb
outsl
cli
negl
or
xor
fiadds
and
in
fiaddl
cmp
add
sbb
pop
inc
add
inc
pop
lret
xchg
sbb
and
pop
push
xor
and
inc
and
dec
scas
icebp
mov
sub
or
stos
inc
rep
dec
or
out
jle
xor
sbb
ja
rcrl
xor
rcl
or
out
lods
mov
repz
shlb
or
int3
test
jns
aaa
ret
shll
and
push
cltd
add
pop
stos
stos
sbb
add
ficompl
inc
iret
cmp
scas
int
dec
inc
rolb
shl
fimull
jmp
mov
outsl
cmpb
mov
or
aam
jle
loope
sub
sub
mov
lods
js
cmp
or
repz
mov
xlat
inc
mov
faddl
idivl
cmp
aad
cmp
nop
nop
test
mov
sub
and
outsl
mov
sbb
mov
jecxz
xor
mov
mov
or
roll
push
in
adc
icebp
adc
push
mov
sub
sub
aad
push
inc
bound
cmp
adc
sar
dec
hlt
cmpb
pusha
and
shlb
fwait
push
cltd
mov
cmp
pop
stc
push
pop
cmpsl
int3
xchg
mov
out
inc
or
repz
cmp
je
sti
nop
jle
sub
add
aaa
arpl
inc
dec
push
xor
adc
adc
lock
and
fsubs
pop
mov
push
cmp
ss
js
ja
xchg
lret
add
movsl
jecxz
cmc
sbbb
test
shrb
pop
jne
fcompl
jg
pop
subb
and
xor
adc
iretw
scas
push
sbb
les
jecxz
add
call
repnz
sarl
int3
out
push
je
add
xor
and
repnz
jne
add
mov
mov
cld
sbb
xlat
insb
pop
popf
loop
mov
hlt
ljmp
and
fsubrs
sbb
out
mov
daa
out
xchg
lahf
popf
jmp
clc
adc
xchg
loopne
or
repz
push
ss
fwait
loop
enter
xchg
pop
std
cmp
mov
ja
negl
xor
aad
and
xor
repnz
movsb
push
and
inc
insl
fadd
push
or
sahf
push
inc
sbb
and
lods
cmpsb
cmc
and
mov
xor
add
mov
add
mov
push
icebp
lods
add
leave
push
mov
test
decl
mov
inc
xlat
subb
je
loope
incb
mov
adc
add
rol
push
ds
and
push
mov
shl
adcb
push
mov
sbb
es
stos
push
lcall
sub
fcoml
adc
testb
outsl
ret
push
jo
ljmp
rcr
call
cld
icebp
ret
xchg
pop
adc
insl
adc
cmc
sub
inc
xor
idivl
sar
aad
imul
call
push
mov
incl
xchg
jge
in
mov
fiadds
adc
call
cli
mov
leave
lea
stos
or
in
inc
dec
or
insl
mov
in
test
popa
shll
int3
mov
push
nop
cwtl
xor
jo
adc
adc
jg
pusha
nop
ficoml
js
mov
pop
xchg
enter
test
cld
cmp
inc
or
ljmp
add
mov
std
cwtl
push
cmpsb
fdivrl
push
adc
push
in
shr
pushf
sbb
pusha
mov
fistps
fmuls
sahf
pop
loope
xlat
jbe
pusha
movsb
cmc
popa
stos
add
fld
mov
outsl
jmp
jne
jae
aas
testl
pushf
and
and
push
adc
dec
cmpsb
sbb
cmp
in
xchg
je
mov
add
or
sahf
dec
sbb
mov
clc
call
shlb
add
jb
data16
loop
jg
or
incl
icebp
cli
test
lods
xor
pushf
or
or
rcrl
sbb
scas
pop
out
xor
orl
pop
stos
lods
scas
jg
inc
add
fdivr
sub
dec
imull
mov
rclb
out
and
cmp
pop
add
push
adc
and
sbb
mov
ret
sub
add
in
pop
xchg
inc
rcrl
in
lds
sahf
adc
aad
mov
mov
dec
in
add
loop
lock
lret
sbbb
jmp
mov
fidivrl
clc
adc
inc
add
not
jg
sbb
or
js
mov
loop
sbb
sbb
andb
adc
int
inc
les
andl
mov
rorb
push
push
nop
rcll
sahf
sub
rclb
ss
add
aas
adc
ret
das
leave
es
pop
add
dec
push
push
add
les
data16
mov
rorb
xor
add
mov
and
add
add
xor
or
inc
xor
push
js
xor
add
rol
popf
inc
add
rolb
stc
adc
rolb
mov
pop
adc
mov
xor
mov
inc
inc
add
fnstenv
push
adc
cmp
mov
les
or
fisubl
jns
int
icebp
in
or
cmp
mov
adc
push
cmpsb
adc
call
or
and
les
adc
or
jnp
dec
push
cld
mov
repz
push
aaa
adcb
and
mov
sbb
push
testl
movsb
ret
outsl
imul
cmp
cmp
fbld
mov
dec
je
push
dec
push
test
dec
pushf
adc
sub
clc
adc
or
xchg
icebp
orl
inc
rorl
jnp
imul
mov
scas
inc
fwait
cmp
loopne
inc
mov
or
jae
ljmp
pusha
sahf
xchg
rolb
hlt
addl
call
mov
mov
push
inc
push
add
mov
clc
xchg
int
mov
aaa
fwait
mov
or
jns
dec
cmp
mov
mov
incb
mov
jnp
and
and
aam
icebp
iret
push
test
push
push
push
popa
mov
jge
sub
cmp
add
ja
adc
push
aaa
in
adc
pop
ss
outsl
xor
and
xchg
mov
xor
pop
add
mov
cltd
jg
xchg
pop
outsl
xchg
fwait
mov
sbb
adc
push
add
scas
sub
jbe
decl
cld
mov
or
imul
out
and
dec
pop
sub
loopne
or
inc
out
pushf
inc
ror
call
shlb
sub
dec
testl
lret
rolb
xor
adc
bswap
jo
fnsave
xor
pop
sar
or
loopne
popa
push
pop
in
xor
cmpsb
mov
out
inc
jnp
push
std
mov
push
jge
hlt
jle
out
sbb
pushl
mov
or
mov
int3
xor
ret
out
cld
loopne
inc
adc
mov
mov
add
scas
push
xchg
cwtl
mull
leave
mov
sbb
hlt
aam
sub
call
lea
jg
cs
sub
add
push
jg
outsl
rolb
xor
add
outsl
cld
test
xor
jl
bound
sub
leave
cwtl
jmp
xor
mov
jbe
add
sbb
and
add
das
xchg
decb
mov
test
add
mov
lcall
xchg
lds
lea
push
and
jg
sbb
adc
mov
gs
addr16
mov
adc
xor
push
addr16
pop
scas
inc
icebp
xor
mov
aam
add
mov
clc
lock
mov
mov
stos
rolb
dec
push
jns
test
mov
add
pop
sbb
scas
mov
pushl
inc
scas
sub
cmpsl
in
ljmp
loope
in
popf
push
outsl
sar
pop
jge
dec
jb
pop
xchg
dec
out
inc
lret
mov
fs
mov
mov
ret
sets
jmp
loope
jo
jb
rorb
and
and
es
inc
add
xor
pop
cmp
imul
mov
fsubl
and
test
fcmovbe
lds
pop
pop
xchg
in
ja
mov
std
cmp
into
mov
or
pop
iret
cmp
loop
sbb
pop
sbb
mov
hlt
jecxz
pop
xor
testl
mov
or
js
adc
scas
mov
or
mov
pop
push
mov
enter
and
jecxz
sub
push
or
sbb
and
inc
or
jge
fcomps
mov
sahf
add
push
dec
orb
mov
pop
adc
enter
jmp
jg
jmp
outsb
sbb
add
in
lock
xor
push
sahf
iret
lock
test
xor
hlt
add
push
sbb
lds
ficomps
add
add
jge
or
mov
loope
inc
aam
xchg
jge
push
aad
cld
out
stos
jmp
scas
addb
cmp
xlat
pop
cwtl
lock
sub
add
das
hlt
sbb
mov
add
xchg
push
lds
and
gs
fs
sub
xchg
mov
mov
jg
mov
inc
in
add
cltd
mov
mov
in
lock
jnp
insl
add
testb
test
in
add
cmp
pushl
shl
filds
rorb
pushf
mov
mov
fildl
std
jmp
pop
and
fs
rol
ljmp
adc
add
mov
adc
mov
mov
dec
test
dec
and
sti
jmp
rol
nop
push
push
std
pusha
add
fwait
pop
fldl
shr
mov
adc
add
std
pushl
xchg
xor
mov
fnsave
dec
lds
fildll
jb
mov
add
add
pop
pop
jl
fmuls
clc
fmuls
jo
cmp
dec
push
adc
je
aas
dec
call
sbb
inc
and
ljmp
adc
shrl
insb
lea
loopne
je
inc
std
or
mov
sub
cmp
lret
adc
sub
clc
stc
cwtl
jmp
mov
push
push
ret
incb
pushf
ret
popf
jg
pop
mov
mov
ret
sub
cs
jp
stc
pop
inc
ljmp
sahf
mov
movsl
mov
add
pop
dec
cmp
jge
lcall
adc
out
psubw
xlat
icebp
test
cmpsl
in
or
sub
inc
add
or
xchg
dec
aaa
ds
adc
xchg
sbb
cmp
jg
pushf
add
mov
test
and
sub
mov
hlt
inc
mov
inc
es
int
insb
lds
add
fwait
adc
sbb
fucomip
incl
xchg
icebp
mov
adc
pop
mov
mov
clc
jmp
inc
addb
repz
mov
dec
xor
pop
fiaddl
sub
outsl
mov
lahf
fs
out
add
pextrw
push
fcmovne
decl
or
and
out
enter
std
jmp
inc
xchg
add
jne
loope
leave
or
push
and
dec
insl
and
add
call
and
inc
into
ret
cmp
orb
fstpl
sbb
popf
ljmp
mov
sub
cmp
out
add
pop
add
xchg
mov
xor
add
sub
loopne
hlt
add
pushf
leave
out
inc
mov
or
iret
roll
movsb
xor
sbb
bound
lcall
lret
pop
je
out
fadds
test
inc
cmpsb
or
mov
mov
arpl
movsl
or
add
stos
xchg
pop
lock
js
sti
mov
ret
lret
jno
dec
mov
fsubrs
xor
pop
test
bound
xchg
mov
idiv
mov
ja
adc
xor
sbb
lock
jmp
push
add
movsb
stos
leave
jecxz
xchg
mov
sub
jmp
mov
jg
mov
jne
mov
rorl
mov
push
mov
mov
idivb
xchg
add
jbe
push
or
or
mov
mov
ljmp
addr16
insb
push
jl
fstp
cli
jmp
dec
sub
jo
sub
sbb
mov
outsb
pop
scas
push
sub
push
les
lods
xchg
sbbl
pop
mov
pavgw
xor
mov
inc
insl
pop
push
jns
in
lea
pop
dec
inc
pop
rorl
je
aaa
in
dec
push
je
lock
add
lcall
push
and
jge
inc
adc
mov
mov
sahf
jle
decl
xchg
jnp
push
mov
aaa
cli
call
mov
mov
in
test
clc
or
add
xchg
icebp
mov
aaa
pop
push
notb
adc
cltd
mov
xchg
fldt
jp
mov
inc
stos
lret
rorb
pop
outsl
push
inc
test
shrb
mov
mov
cli
dec
jno
loopne
or
ja
decl
ljmp
mov
pop
pop
dec
adc
mov
fsubrs
pushl
mov
jge
cwtl
or
jnp
fidivs
mov
mov
sub
jecxz
sbb
push
lods
push
mov
mov
in
pop
or
mov
adc
adc
mov
or
popf
lret
data16
sbb
pop
add
push
or
adc
aam
xchg
jmp
aam
add
xlat
gs
or
ss
pop
addr16
rdtsc
xchg
jecxz
jbe
jp
lods
cmc
call
jle
sub
fisttpl
or
inc
sub
clc
outsl
adc
pop
idivl
fnsave
scas
or
xchg
test
pushl
push
mov
and
lock
out
mov
sahf
push
sbb
std
mov
notl
cmc
cs
and
xor
sbb
sbb
outsl
fists
sub
shll
jne
xor
inc
jmp
inc
aaa
inc
faddl
ret
xor
jbe
loopne
jmp
daa
mov
push
lods
sti
sub
ret
xor
xchg
cld
fists
cmp
dec
cmpsb
pop
cmc
push
cmc
ss
adc
adc
insb
mov
jge
inc
ror
shr
movsl
stos
inc
fmul
add
jg
sub
jp
sar
jns
aaa
and
jp
mov
mov
inc
xor
push
jnp
add
pusha
mov
jb
movsl
inc
pop
aaa
or
pop
int3
dec
ljmp
int3
cmc
popa
or
mov
sub
or
jbe
xchg
fdivrl
int3
rorl
ret
aaa
and
sub
gs
test
push
imul
std
mov
xchg
pop
sub
jmp
sub
push
je
cmc
stc
ja
and
das
inc
or
call
and
and
xchg
sub
or
rcll
loop
or
call
sub
mov
xchg
lods
jg
jg
and
xor
repz
cmc
jno
mov
das
inc
lcall
push
xchg
adc
in
xor
sti
mov
adc
or
add
aad
mov
loop
xor
jb
es
loop
add
inc
add
dec
mov
or
mov
aam
inc
stos
jo
xor
ficomps
pop
les
push
jg
cmpsl
adc
ss
andb
loop
add
xchg
clc
and
std
lret
outsb
add
and
adc
or
cld
mov
add
lea
adc
loope
ds
sbb
lods
out
popf
aas
shll
insb
popa
pusha
jl
push
shll
repnz
jg
repz
and
pushf
xchg
jnp
cmpl
rolb
dec
inc
and
dec
push
cmc
sub
incl
jg
and
inc
jg
and
test
insl
sub
jl
ret
mov
xlat
lret
mov
shlb
cmp
lcall
pop
ds
sub
sub
lret
and
and
cli
fildl
jge
jbe
jp
pushf
jbe
xor
cwtl
mov
cs
adcl
and
adc
test
lret
bound
xor
add
lock
fs
loopne
mov
clc
insl
bound
imul
add
xor
xor
cmp
inc
lods
pushl
aas
xchg
clc
push
sub
pop
daa
add
sbb
stos
out
or
ss
jecxz
pop
push
sbb
mov
inc
cwtl
push
std
lcall
in
adc
into
faddl
jecxz
mov
mov
arpl
add
lcall
in
leave
adc
sub
dec
adc
push
push
ret
loop
leave
xchg
ljmp
lahf
out
cmp
and
jns
xchg
popa
test
rolb
ljmp
push
inc
sub
loop
test
rcrb
shll
xor
mov
add
addr16
ficoml
pusha
pop
and
jmp
shlb
adc
and
xchg
sbb
outsb
out
xor
cmp
jge
push
sub
sub
test
fidivl
dec
movsl
dec
test
notl
sbb
dec
and
or
test
insl
std
xchg
cmp
add
hlt
pushl
aaa
mov
mov
inc
not
inc
xor
sbb
mov
pop
sub
or
sbb
in
lcall
stos
in
das
cmp
xor
fbstp
dec
rcrb
pop
loop
dec
cmp
sub
mov
test
fldl
mov
jbe
mov
jmp
add
xchg
fdivr
inc
hlt
inc
cltd
cli
pop
cmp
cmp
les
das
lcall
into
lock
insl
test
ficoms
lods
xchg
loope
mov
ret
xor
inc
sbb
js
mov
rcrb
mov
repnz
leave
clc
xlat
or
add
adcl
push
rclb
push
divb
das
outsl
xor
mov
ficomps
je
push
xor
sti
das
icebp
div
in
into
fiadds
cli
jle
js
add
add
xor
aas
push
add
sbbb
mov
fwait
shl
pop
sub
stos
xchg
rolb
notb
push
jae
jmp
out
std
fucom
movsl
outsb
movsl
out
add
fcomi
repz
and
mov
pop
mov
ss
frstpm(287
pop
mov
repz
xor
les
xlat
insb
into
fstl
fnstsw
mov
or
xor
xlat
jne
cmpsl
das
pop
jp
mov
loope
mov
js
imul
test
fmuls
xor
push
rcrb
sub
mov
xchg
scas
add
outsl
ljmp
and
cmp
push
mov
xchg
cmp
xor
cld
rolb
ror
push
lahf
sbb
mov
rolb
outsb
xchg
adc
cmp
sbb
pop
add
sbb
dec
pop
mov
mov
mov
dec
mov
inc
xor
cmp
inc
mov
in
mov
ja
add
cli
pop
sub
adc
mov
add
fildll
fimull
cwtl
nop
and
fidivs
or
sub
and
cmp
in
mov
movsl
mov
pop
lds
mov
enter
imull
mov
jmp
mov
imul
das
add
imul
arpl
push
cmpsb
or
push
xchg
lods
stc
add
sub
in
in
or
les
sti
daa
and
push
jmp
imulb
leave
push
inc
xchg
adc
loop
fcomp
and
jb
push
aas
add
mov
sbb
sub
dec
and
sub
dec
pop
scas
popf
lock
jl
cmp
bound
xchg
inc
sub
into
pushf
xchg
js
test
aaa
fs
mov
mov
movl
xchg
pop
inc
cwtl
lret
add
pop
inc
push
insl
outsl
das
push
push
jo
repnz
in
fbld
jb
inc
mov
cmp
dec
std
mov
jno
jg
adc
mov
pop
sbb
dec
cmp
test
add
cmpsl
mov
and
or
mov
stc
jae
xchg
pop
loopne
lea
inc
imul
icebp
leave
xor
aaa
pushf
cli
movsl
test
dec
popf
outsb
bound
sub
jecxz
ja
and
fs
inc
adc
das
je
jg
fisubs
in
jp
sub
test
clc
or
jno
xchg
shll
push
sub
push
pop
mov
jg
jno
add
cmpsl
and
je
pop
jb
out
pop
testl
sub
fnsave
aad
cmp
gs
cmp
inc
js
jg
lock
dec
pusha
xor
sub
mov
jl
movsb
mov
push
std
jg
decl
adc
dec
add
xchg
add
pop
ret
adc
xlat
incb
inc
stos
ds
pop
loopne
mov
idiv
fildll
into
cmp
test
push
sbbl
jb
dec
dec
fldcw
dec
into
repnz
jb
aaa
and
dec
aad
xor
xchg
xor
xchg
das
dec
loope
decb
add
imul
test
adc
cli
jg
add
in
aas
je
sub
cmpb
iret
fcoml
mov
call
and
xor
add
andl
xchg
and
push
loope
cld
push
or
sbb
xchg
mov
jle
test
test
pushf
rorb
stos
xchg
shlb
sub
push
dec
cld
push
ljmp
mov
jb
xorl
lcall
pop
cli
cmpsl
repz
sti
negl
sbbl
icebp
pop
mov
xchg
or
cmp
or
pop
pop
pop
sub
sbb
push
pop
cmpsb
test
sbb
mov
jae
std
int3
dec
push
imul
pop
or
test
clc
or
and
and
sbb
pop
cli
inc
sbb
push
mov
loope
pop
xchg
sub
sbb
cltd
int3
decl
jbe
sub
in
adc
push
jmp
mov
xor
aaa
push
fnstenv
loope
push
ja
iret
inc
jne
xchg
dec
sbb
mov
outsl
mov
sbb
add
imul
imul
sub
outsl
ret
loope
sub
add
xor
xchg
shlb
jnp
pushf
enter
and
and
mov
sbb
fs
mov
inc
popa
loopne
cli
out
lcall
push
pusha
daa
jb
mov
lret
mov
jg
fnsave
shlb
clc
mov
sti
jmp
enter
loope
cs
pusha
jne
je
xor
push
mov
jp
decb
lahf
and
inc
into
pop
dec
lock
xchg
push
popf
sbbb
push
fcmovu
icebp
xorb
int3
leave
jns
outsl
call
aad
add
decl
aad
pop
stos
sbb
sbb
ret
jb
lds
cmc
add
mov
dec
dec
out
cmp
mov
dec
cwtl
push
pop
int3
fcomip
inc
and
hlt
ljmp
sub
fbstp
inc
sub
test
test
scas
lcall
ret
std
das
xor
loop
sbb
lret
scas
xchg
mov
outsl
in
call
dec
imul
int
stc
in
hlt
jl
lea
mov
sbb
jne
das
icebp
push
movsl
std
mov
adc
call
mov
insl
mov
popa
sub
xchg
sub
mov
jecxz
and
add
test
pushf
adc
call
fstps
stos
idivl
cld
and
cmp
decl
test
inc
sti
adc
push
inc
nop
add
xorl
stos
js
imul
int
mov
push
cmpsl
sub
pop
scas
adc
icebp
cld
lock
and
add
xor
mov
sbb
jg
sahf
pop
pop
adc
mov
add
and
and
lock
lock
adc
into
pop
push
das
sbb
cmp
mov
lock
mov
mul
shrb
cmp
or
nop
jmp
push
or
xor
call
xor
push
jg
loopne
test
mov
jne
push
in
mov
imul
pop
cmp
pop
jp
movsb
cmpb
inc
daa
mov
inc
sbb
orb
jl
mov
clc
cmp
inc
mov
nop
lret
inc
pushf
push
fmull
or
call
sub
inc
mov
cmp
inc
add
add
sarb
cmp
and
inc
pop
rcrl
pop
sar
stos
inc
das
pop
jnp
roll
std
cli
rorb
nop
and
xchg
add
sarb
mov
add
mulb
mov
add
add
mov
decl
pop
testl
gs
sbbb
fdivl
sub
sbb
pushf
mov
lock
andb
inc
nop
and
andb
inc
add
xlat
sub
push
push
sub
lock
push
or
aad
xchg
movsl
mov
add
fdivr
orl
inc
inc
inc
sub
xchg
pop
cmp
and
adc
test
dec
test
ljmp
mov
test
mov
fists
loopne
out
mov
sub
dec
lretw
nop
jg
mov
dec
shlb
mov
cmp
sbb
jge
add
xchg
xchg
sbb
or
movsb
inc
test
pop
fsubs
mov
xor
aad
fwait
in
pop
or
fdivp
in
inc
xchg
mov
outsl
xor
mov
xor
inc
test
push
aas
out
pop
adc
es
dec
push
mov
mov
daa
fnstcw
and
das
mov
xchg
dec
js
hlt
push
or
lock
add
repnz
ret
jne
or
mov
or
ljmp
popf
and
xchg
sub
jl
jnp
jmp
push
addl
int
les
mov
push
test
xchg
sbb
movsl
outsb
push
int3
pop
sahf
jne
cld
outsl
xor
mov
pop
leave
shll
test
or
in
imul
mov
sbb
inc
jne
test
popa
sbb
xor
and
pop
js
inc
pusha
ret
adc
push
add
adc
mov
mov
cmc
pop
add
or
cmp
adc
test
das
mov
add
push
mov
inc
aaa
shrb
mov
dec
mov
add
xchg
fstpl
outsl
lock
repz
lds
xchg
icebp
insb
insb
loopne
dec
cld
add
aas
mov
pop
rolb
outsb
push
ret
cmp
imul
or
sahf
ds
les
test
mov
inc
push
cwtl
pusha
adc
mov
lret
es
cld
jle
pop
add
xchg
mov
lods
sbb
xchg
jbe
dec
push
cwtl
in
clc
aad
dec
addl
push
in
call
xor
test
mov
je
ja
in
fidivrl
adc
shlb
mov
xor
add
mov
pop
add
enter
mov
mov
mov
sub
mulb
xchg
outsb
and
push
loopne
xor
and
mov
jl
ljmp
fisttpl
mov
inc
dec
jle
faddl
dec
cmp
push
aam
ret
mov
mov
jno
stos
pop
and
dec
push
das
mov
fs
pop
pop
or
pop
loopne
call
repnz
inc
add
jo
in
sbb
and
xchg
mov
cwtl
shlb
add
add
inc
add
xor
jmp
mov
sub
imul
inc
and
shrl
rcrl
push
stc
inc
add
call
and
into
cld
adc
mov
xor
xchg
es
and
dec
inc
dec
clc
negb
push
std
lock
sub
inc
mov
cmp
into
adc
add
mov
out
xorl
clc
pop
mov
dec
cld
pop
push
cwtl
call
mov
sub
pop
adc
lock
add
mov
mov
cmp
push
outsb
mov
outsl
js
ret
or
dec
mov
xchg
mov
adcb
add
loopne
jno
ret
ss
xchg
inc
push
aam
sbb
scas
fwait
xlat
js
sub
fnsave
pop
rcr
dec
add
test
push
test
test
mov
out
cmp
dec
rorl
in
adc
inc
inc
rcrl
clc
ljmp
cmp
loopne
add
arpl
or
pop
add
or
sub
push
and
jl
pop
hlt
add
lock
ss
shl
and
out
push
aam
loopne
adc
push
sub
cmpsb
add
in
sub
push
jmp
push
gs
push
imull
sub
sbb
loope
mov
adc
add
push
dec
push
add
adc
aaa
in
lea
sarl
fsubl
push
in
inc
and
insb
inc
pop
scas
pop
scas
lcall
push
hlt
xor
not
xor
jge
xchg
ret
jo
repz
push
add
and
je
xchg
lretw
and
insl
insl
iret
lods
loop
adc
jo
fincstp
addw
lret
jmp
inc
and
scas
and
loopne
cmpl
popa
push
stos
sbb
aas
in
arpl
movb
sbb
lods
sub
orb
cmp
mov
sti
adc
inc
pop
cmp
rorl
add
cwtl
mov
jg
cld
xchg
add
mov
std
lods
aas
daa
jne
pop
lcall
push
insb
scas
or
jp
repz
std
dec
or
add
xchg
jbe
or
adc
sbb
pop
cmp
push
stos
inc
xchg
cmp
stos
mov
cs
cmc
add
dec
sbb
lret
push
jmp
loopne
pop
mov
fstl
sub
pop
repz
xchg
cmpsb
dec
jl
leave
add
add
cli
arpl
add
jg
fistpll
xchg
push
out
rolb
mov
mov
and
scas
shrl
fldl
xchg
pop
xor
cmp
dec
mov
cld
aas
cmp
mov
add
push
adc
cmp
adc
clc
jb
std
and
loop
pop
out
bound
lahf
test
xchg
push
sub
inc
add
sub
int3
and
aas
stc
das
cs
cmc
std
loop
aam
mov
popa
sbb
push
xchg
jg
or
in
jg
out
movsl
xchg
pusha
add
shlb
lods
imulb
in
jns
sbbl
and
sbb
mov
mov
push
hlt
or
inc
and
mov
pop
rorb
dec
das
aam
cmpsb
sub
mov
sahf
out
je
call
inc
divl
nop
add
push
loopne
and
ss
xchg
andb
inc
loope
inc
std
movups
test
pop
mov
jg
incl
cmp
cmp
shrb
push
popl
inc
call
push
cmp
add
cmpl
test
not
pushf
add
adc
lret
sub
adc
stos
add
outsl
mov
mov
sbb
iret
xor
mov
add
bound
dec
inc
cmc
cmpb
test
sub
sbb
jp
add
mov
and
xor
ss
push
jmp
repz
sbb
or
push
mov
sub
pop
shlb
dec
fistl
mov
les
adc
pop
pop
mov
or
orl
or
fisubs
into
or
sub
jmp
sahf
loopne
cmp
aam
lcall
pop
outsl
testl
mov
jg
jg
adc
lods
lret
xchg
fidivs
add
icebp
xor
jl
movsb
add
out
adc
jge
in
cmp
jl
adc
adc
xchg
daa
xor
and
inc
or
cmp
lock
lock
adc
dec
ret
popl
ret
ret
cltd
jg
add
mov
jnp
nop
dec
das
inc
pop
fstps
inc
dec
jbe
jge
bound
add
imulb
stc
repz
cvtpi2ps
ret
cmc
sub
pop
leave
incl
inc
pop
nop
shl
add
mov
test
mov
test
daa
sbb
rcl
pop
sub
daa
outsl
sarb
push
add
dec
inc
movsb
rcll
push
add
lahf
add
cli
nop
stc
xchg
jp
jg
pop
sbb
test
sbb
js
fistps
cmp
sub
stc
jb
ljmp
stos
sub
add
pop
sub
pop
adc
das
sbb
out
xchg
pop
aas
cmp
sub
scas
lock
jns
xchg
sbb
cmpsl
add
fldl
cmpsl
dec
pop
mov
inc
inc
test
jns
jmp
and
add
idivb
push
int3
out
sbb
pop
xlat
adc
fwait
loopne
es
push
shll
xor
aas
or
cs
inc
cmp
cmpb
push
fstpt
mov
fidivrl
in
sbbb
into
aas
enter
cmpb
pop
pop
sub
shll
sub
repz
data16
push
cld
add
xor
iret
xchg
inc
push
das
jno
pop
inc
negb
lods
jb
cmp
stc
inc
dec
inc
add
test
aaa
bound
inc
and
mov
mov
js
cs
mov
aaa
pop
aas
inc
loopne
lahf
rcrl
mov
negb
add
cmp
push
pop
sbb
out
cli
lcall
in
loop
pushf
xchg
in
cwtl
xlat
fcoms
push
inc
or
sbb
loope
cmc
mov
jle
add
mov
lret
sub
inc
mov
pop
in
decl
dec
dec
outsb
pop
dec
and
aad
add
andb
sahf
inc
fisubrl
cmp
add
sub
sub
movsl
aas
std
ljmp
jl
adc
sahf
mov
xchg
or
and
pop
cwtl
in
mov
xchg
cmp
adc
loopne
fidivrs
lcall
xor
icebp
pushl
decl
mov
sub
bound
xchg
fstpl
push
imul
cmp
fldcw
lock
and
notb
cltd
mov
test
test
ljmp
lret
sahf
cmpsb
and
movsl
fcom
arpl
sbb
push
jmp
insb
cld
in
inc
in
jns
test
sbb
leave
sbb
fcomip
call
int3
add
divb
inc
cmp
sarl
adc
ret
fucomip
lods
cltd
xchg
xor
shll
hlt
mov
push
sbb
jns
sbbb
push
and
dec
sbb
pushl
insl
ffreep
je
shll
mov
faddl
mov
xor
xor
inc
cmp
jmp
mov
fs
lds
xor
adc
push
add
sbb
addb
fdivs
sbb
and
andb
mov
adc
push
pop
test
sbb
sahf
idivl
xchg
pop
cmp
push
dec
cmp
and
xchg
dec
popa
sbb
jno,pn
jp
push
rorb
inc
mov
add
in
movsl
mov
decl
sbb
mov
sub
lret
mov
cld
sub
cli
add
jae
dec
xchg
push
xchg
push
adcb
add
ljmp
or
ret
icebp
xchg
gs
mov
xor
cmp
mov
xor
iret
mov
fsubrs
push
push
inc
enter
push
mov
push
repz
push
cs
add
cmpsl
lods
repz
or
pop
and
sbb
es
sub
xor
push
cmc
sub
push
or
les
lock
sbb
xchg
out
mov
lds
add
xlat
insl
movsb
aam
or
inc
pop
lcall
add
cwtl
shlb
lods
addb
push
xor
xor
push
mov
mov
add
mov
push
sarl
outsl
adc
xor
xor
cltd
and
xchg
fildl
pop
add
pop
enter
push
add
or
cmp
fsubs
pop
les
das
adc
adcb
stos
mov
or
add
cmp
cmp
insl
xor
mov
or
rolb
mov
dec
xor
andb
pop
or
fcmovnbe
cmp
insl
add
test
test
cmp
test
sbb
xor
mov
inc
adc
cs
pusha
and
nop
loope
mov
push
and
adc
mov
cmp
stos
mov
jae
pop
add
and
inc
xor
sub
out
idivb
hlt
mov
hlt
in
push
hlt
adc
mov
sub
jno
rol
xor
adc
cmp
push
pushf
fmull
ret
arpl
gs
sti
fwait
or
fwait
cmp
loopne
or
sub
adc
pop
rorl
je
jecxz
std
test
mov
add
sub
xor
mov
cwtl
add
push
shrl
inc
xor
push
icebp
add
inc
xchg
dec
inc
add
mov
and
adc
dec
jo
mov
ficoms
add
ja
jno
mov
adc
xchg
popf
xor
jnp
les
insl
lea
xor
pop
sub
sub
mov
mov
adc
mov
mov
add
and
es
shll
movsb
dec
jg
inc
sub
sbb
cmp
sub
pop
lods
mov
jg
cli
adc
mov
inc
jp
push
aam
inc
inc
inc
push
dec
xor
sahf
mov
addb
and
insb
aaa
jmp
bound
imulb
adc
jg
test
sub
jp
ja
lds
and
and
jno
call
iret
lods
outsl
push
loop
fisubl
call
testb
sub
testb
into
inc
sarl
xchg
aam
pop
inc
stos
ret
gs
mov
lods
mov
xor
adc
add
dec
int3
int3
int3
or
jp
jnp
or
dec
aam
push
call
lds
inc
out
push
test
mov
sub
sbb
nop
fwait
adc
into
mov
cmp
mov
sub
jbe
jmp
xor
stc
testb
add
inc
out
adc
movsb
push
iret
xor
fbld
les
or
imulb
es
or
in
sbb
and
bound
inc
jmp
adc
arpl
xchg
pop
rcrb
rolb
inc
pop
push
and
pop
int3
mov
out
fldenv
dec
mov
jns
loop
mov
js
loope
xor
pop
pop
mulb
xchg
mov
jecxz
aas
mov
and
call
inc
insb
jnp
push
push
pop
push
jecxz
adc
loope
push
gs
mov
std
mov
call
pop
inc
jae
int3
dec
inc
in
mov
fadds
inc
push
inc
aad
test
sbb
ja
dec
outsl
js
xchg
outsl
xor
sub
call
aad
sti
rcrl
int3
jp
jne
aam
xchg
fcom
xor
jns
inc
xchg
jns
push
xor
push
lret
in
dec
inc
fs
mov
ss
jnp
subb
subl
cltd
and
push
push
lcall
mov
cli
gs
jp
xchg
out
and
movsl
add
add
sbb
mov
test
mov
push
jg
add
data16
and
shlb
push
test
mov
cmp
or
cltd
popa
xchg
mov
roll
mov
mov
mov
xchg
xor
rolb
inc
cli
push
add
adc
jno
inc
fmulp
jae
jmp
pop
repnz
sbb
hlt
or
mov
cmp
and
push
aaa
or
jg
lds
mov
or
mov
iret
jle
shlb
inc
subb
mov
mov
fs
cmp
sbb
cmp
cmp
jg
xchg
sub
inc
frstor
ljmp
pop
aam
pop
lds
sub
rcrl
fwait
call
sub
cli
call
sti
std
mov
xchg
mov
adc
lret
pushl
jns
push
mov
push
or
sub
fidivs
jle
jmp
pop
pop
and
pop
orl
sbb
adc
lahf
fisttps
pop
nop
adc
jg
lds
hlt
ret
and
aas
or
pop
add
test
sbb
call
mov
mov
inc
and
sub
xor
cs
ret
stos
iret
aam
bound
imul
nop
subb
pop
and
add
inc
mov
lret
jb
loop
pop
cli
lcall
adc
repnz
stc
cwtl
mov
mov
ss
movsl
fsubl
repnz
rcll
incl
cmp
scas
inc
mov
pop
or
popa
inc
in
loopne
ljmp
std
mov
mov
movsl
push
xchg
dec
push
jno
inc
xchg
pop
hlt
fists
popa
and
add
dec
add
cli
out
sbb
and
cltd
cs
pop
xlat
sti
mov
cli
in
repz
outsl
jno
js
fidivrl
notb
jg
or
sub
or
and
mov
and
jne
mov
sbb
pop
addr16
outsl
insl
mov
fstps
sub
sub
cmp
loopne
jge
nop
xlat
das
leave
add
jns
mov
ljmp
ljmp
add
pop
arpl
push
push
push
cmp
ljmp
std
xchg
in
cmp
cmpsb
inc
mov
out
lahf
mov
cmp
pusha
inc
or
or
sub
mov
or
mov
mov
pop
push
addr16
stos
sahf
icebp
lds
das
lds
jl
xchg
test
enter
aad
add
adc
mov
es
inc
push
mov
push
add
add
pusha
out
decl
rcrb
xorb
imul
arpl
outsl
inc
xchg
mov
inc
mov
xorl
pop
add
mov
and
sarl
es
call
pop
and
clc
push
sbb
add
fistpll
addr16
and
incl
cmpl
xlat
sti
xor
push
xchg
sbb
into
dec
ficompl
ljmp
mov
mov
adc
pop
loope
lods
insb
jg
inc
mov
int3
xor
or
incl
lock
rorb
scas
inc
in
mov
jns
sbb
das
pop
dec
or
xchg
mov
repz
mov
fs
or
mov
mov
xchg
ss
out
adc
cmpsb
incl
inc
xor
push
cmp
test
iret
into
push
psubd
ljmp
mov
dec
adc
out
xlat
mov
loope
pop
insl
mov
jl
enter
jno
loope
pop
push
pop
sbb
inc
jg
movsb
mov
inc
call
jnp
and
inc
decl
scas
sti
sbb
pop
xchg
rcrb
or
notb
aam
mov
iret
push
hlt
pmuludq
mov
pop
mov
xchg
pop
mov
and
scas
jle
adc
movsl
test
lock
jecxz
jg
jg
jne
xor
addl
and
mov
and
adcl
sbb
and
xlat
negb
adc
nop
lret
sbb
dec
pop
fmuls
jne
jb
jb
sbb
mov
lret
xlat
dec
cmpsl
inc
and
cld
adc
stc
mov
aas
xor
ja
sbb
adc
popa
mov
add
jg
push
sub
push
push
sbb
mov
push
or
add
ss
cli
ret
push
popf
loopne
mov
notl
stos
or
in
pop
mov
aad
dec
lds
das
sahf
push
cmc
push
sbb
cli
filds
or
xor
add
popa
js
or
test
in
cmp
test
repz
mov
fildll
add
roll
mov
shll
sub
push
ljmp
filds
push
mov
pop
ds
mov
push
inc
test
xchg
mov
sbb
mov
adc
adc
je
sti
inc
inc
es
xor
jno
push
or
adc
rolb
fistps
pop
insl
push
push
cmp
movsb
andl
aaa
mov
xchg
adc
je
xchg
add
mov
jg
in
arpl
adc
movsb
push
xor
dec
insb
rcrl
inc
xlat
mov
push
std
add
pop
mov
sub
addb
das
dec
mov
pop
mov
std
cmp
insb
cwtl
push
xor
cltd
add
rcrl
inc
sahf
mov
lea
mov
push
jge
cld
outsl
aam
iret
mov
gs
lret
push
movsb
add
mov
popa
add
or
aas
ret
movsb
pop
sub
cmc
inc
pushf
ds
cld
ffreep
sub
fldenv
sub
shlb
and
mov
push
pop
pop
das
hlt
icebp
sbb
xchg
mov
ljmp
movsl
and
adc
das
cld
or
dec
dec
cmp
add
fiadds
rcrb
xchg
inc
mov
push
cmpb
nop
mov
in
lea
jl
cmp
add
rolb
xchg
pusha
fistps
loopne
push
jb
mov
pop
push
pushl
mov
popf
out
sbb
call
push
inc
mov
mov
inc
inc
int
incl
shll
je
cmp
xorl
xchg
scas
rorb
mov
hlt
negl
ja
insl
lock
iret
xlat
ds
sbb
add
pushf
mov
sbb
jg
fidivrs
jo
aaa
sbb
dec
jg
xchg
orb
lret
jb
cmp
dec
xor
cmp
push
dec
dec
call
pusha
pop
jmp
sti
xchg
push
in
loopne
outsb
add
bound
fldl
movsb
mov
jge
aad
adc
sub
arpl
xor
ss
cmp
into
inc
out
jle
sbb
inc
adc
jp
and
sub
add
xlat
loope
pop
dec
idivl
js
lea
call
shl
fidivs
lods
pslld
lods
inc
inc
cmp
outsl
mov
jg
sub
push
test
inc
iret
lods
xlat
lretw
or
mov
stos
inc
fdivl
enter
jle
add
fistl
mov
pop
fisubl
fists
mov
sahf
push
dec
push
lcall
and
sub
sahf
rolb
in
sbb
call
add
pop
fisubs
mov
push
xor
idivb
lahf
fildll
and
les
call
decl
inc
ds
lods
xchg
stos
push
mov
mov
incl
leave
pop
imul
aad
fistl
ds
das
bound
fs
and
push
bound
popf
movsb
test
jns
xor
dec
xor
mov
arpl
testb
ret
loopne
sub
test
scas
push
mov
outsl
cmp
loopne
adc
rolb
mov
add
dec
cmp
outsl
mov
and
xlat
aam
mov
add
dec
cld
push
lret
cmpsl
sub
mov
ljmp
pop
loopne
outsl
int3
jecxz
daa
lret
cmp
jnp
mov
sbb
.byte
idiv
incl
push
lcall
pushf
jmp
jno
dec
inc
test
add
mov
int
sti
incl
mov
adc
and
push
and
mov
add
and
or
and
xlat
sbb
and
mov
sub
into
mov
xor
inc
mov
cmpsb
jnp
frstor
add
rolb
inc
dec
mov
and
pop
dec
ret
mov
ds
add
sbb
or
mov
mov
adc
orl
dec
shll
xor
add
add
jle
adc
or
add
inc
aas
mov
aas
fst
add
and
pop
pop
leave
ret
pop
add
jnp
enter
mov
add
pop
pop
add
or
xchg
mov
pop
add
pop
xor
cmp
ret
push
and
les
sbb
out
add
add
std
mov
jmp
add
filds
sbb
mov
jle
xor
add
add
dec
adc
adc
jg
sti
lcall
cld
aad
mov
not
xor
jecxz
add
adc
loope
or
dec
sub
loope
push
loope
xor
sbb
imul
jge
add
clc
add
inc
or
test
pop
arpl
sbb
and
div
jg
loopne
xchg
and
movsb
mov
out
in
add
sahf
out
call
fisttps
pusha
and
push
sbb
add
jg
incl
testb
xor
pop
out
ret
subl
cwtl
outsb
out
sbb
in
psraw
pusha
and
fcmovnu
lss
push
inc
cmp
push
mov
out
lret
add
mov
adc
pop
pop
stos
and
jle
mov
adc
adc
and
mov
dec
xor
loopne
xor
cmp
add
and
mov
je
cli
insb
nop
cmc
test
lock
add
lret
stos
inc
pop
mov
test
test
and
cmp
testl
fwait
adc
adc
call
mov
outsl
shrb
or
push
aas
test
in
push
mov
or
dec
neg
mov
mov
jae
in
cmp
xlat
jne
jg
mov
sbb
clc
sub
or
mov
inc
pop
mov
add
adc
mov
aas
neg
fwait
jge
adc
mov
fisubrs
addb
adc
jo
xchg
inc
adc
adc
cmpl
fistl
push
inc
sbb
lahf
negb
aam
or
testb
mov
sbb
movsb
mov
xor
inc
neg
sbb
sbb
dec
cmp
xchg
fists
sub
lret
xchg
push
adc
mov
mov
lret
sar
shr
push
sbb
cmp
shl
neg
sub
adc
std
mov
mov
adc
not
into
mov
pop
fdivl
test
mov
sub
fisubs
push
in
mov
dec
fwait
mov
dec
fcomp
jae
not
mov
out
mov
lret
jge
push
inc
ficoms
outsl
jl
test
clc
dec
mov
not
mov
dec
movsl
dec
or
insl
push
add
lds
fisttpl
fsubl
ljmp
fcompl
insb
popf
nopl
mov
fistpll
jle
jne
andl
imul
add
stos
add
divb
xor
adc
test
add
mov
popa
imul
adc
js
fcmovnbe
lock
sbb
or
jno
pop
add
inc
dec
xlat
inc
xor
xor
jbe
mov
shl
add
sbb
test
adc
pop
jno
les
mov
pop
in
sbb
insb
in
mov
sbb
dec
shl
jmp
aad
pop
adc
or
push
fstpt
adc
sbb
mov
push
fdivl
or
fimuls
dec
aad
dec
ret
aaa
ret
ret
add
sar
mov
shll
bound
lds
test
fiaddl
out
add
imul
xor
outsl
mov
add
cmp
adc
pop
rol
jge
aad
bound
pop
inc
mov
fcomip
pushl
xchg
add
movaps
leave
cmp
push
lret
popf
xor
movsl
lcall
imul
mov
jp
inc
out
ljmp
std
stc
dec
test
cmpb
test
das
mov
xchg
inc
jno
fdivrs
fcomip
mov
inc
les
add
in
rclb
pop
outsb
sbb
test
lods
lock
repz
or
xor
sbb
mov
cmp
cmp
fs
leave
inc
dec
pop
les
or
ljmp
push
jmp
xchg
mov
iret
add
xchg
outsb
jl
imul
and
push
pop
jae
sarb
fistpl
jns
cmp
mov
dec
cmpsl
mov
pushf
add
push
jo
add
outsb
add
mov
and
fmuls
incl
outsb
aam
cmpsb
shl
xchg
xor
es
mov
xchg
sub
add
pop
push
add
sbb
lcall
mov
pop
jbe
cmp
mov
gs
jg
fildll
jg
dec
adc
sbbl
sub
call
xchg
inc
das
mov
xchg
sbbl
nop
push
lret
ret
adc
lcall
nop
inc
test
dec
xchg
fdivrs
sub
push
js
sub
pop
loopne
aaa
loope
fistpll
out
xor
cli
lahf
addr16
mov
mov
clc
aaa
lock
nop
roll
icebp
cltd
jp
mov
nop
sar
call
aad
setne
push
mov
popf
lret
into
mov
cmpsb
sar
stc
fbld
jbe
repnz
dec
ret
mull
or
fsts
fscale
push
aas
jg
decl
pop
shrl
aad
xlat
xor
in
fwait
out
mov
aam
enter
or
mov
mov
fadds
xor
popa
in
push
dec
and
aaa
clc
decl
mov
and
mov
mov
inc
jp
loopne
jg
dec
sub
inc
mov
add
pop
ljmp
cmc
clc
jmp
les
adc
xor
sub
ret
jmp
fists
jmp
push
lcall
mov
lcall
cvttps2pi
or
inc
movsl
and
in
int3
jg
mov
call
mov
stos
fimull
jno
ret
xor
incl
decl
fs
xchg
jecxz
push
dec
imul
stos
cwtl
jmp
or
cmp
outsb
jbe
lret
shrl
mov
rcll
je
imul
and
jl
jmp
incl
movsb
cmp
imul
das
adc
push
adc
sbb
jae
loop
lods
ss
mov
mov
and
inc
adc
call
inc
push
mov
out
pop
js
outsb
iret
nop
lea
enter
jg
in
add
adc
xor
mov
xchg
cld
call
or
mov
test
fstpt
sub
push
test
inc
das
cld
ljmp
int
flds
add
addl
int
dec
and
inc
cltd
cmp
mov
sbbb
add
imul
dec
out
not
lea
add
fsts
push
cmp
xlat
int
mov
loopne
adc
bound
repz
dec
fiadds
jp
sub
lods
jns
cmp
je
jle
into
dec
sbb
add
mov
sbb
mov
ret
lock
or
adc
mov
push
ror
add
test
fidivrl
add
or
lahf
or
xor
jge
jp
jae
rol
stos
mov
loopne
aas
mov
cwtl
xor
inc
and
dec
shrl
adc
xchg
in
std
adc
push
outsl
lock
stc
push
xchg
or
ja
lahf
gs
hlt
adcl
in
sarb
pop
shrb
sbb
cmp
insb
push
lock
arpl
sti
filds
mov
mov
or
shrb
arpl
dec
add
bound
ret
jl
mov
cmp
push
xlat
jmp
dec
inc
mov
mov
popa
add
loop
xchg
jge
or
fiaddl
push
data16
rolb
jb
dec
adc
rorb
outsl
repnz
pop
pop
cmp
aad
pop
bound
test
push
adc
adc
aas
jns
adc
mov
dec
test
push
mov
cmp
loopne
rolb
mov
aas
mov
add
adc
xor
mull
lret
add
adc
movsb
mov
xchg
imul
push
mov
shll
add
mov
push
scas
pop
decl
lea
push
push
or
ja
push
sarb
pop
in
pop
lock
shll
mov
test
push
hlt
stc
adc
out
lock
jle
lock
inc
add
adc
lea
jb
xor
data16
or
adc
sbb
jge
sub
pop
into
or
outsl
sbb
mov
fdivrs
data16
sbb
jo
ficomps
into
outsl
rcll
in
orl
mov
push
and
sbbl
mov
cmp
jle
sar
into
pop
add
imul
xchg
adc
cld
imul
lret
ss
sbb
loopne
sub
mov
and
xor
mov
mov
inc
push
dec
and
or
and
or
jp
cmpsb
and
mov
in
aam
mov
lea
jg
mov
mov
pop
mov
pop
out
push
adc
push
iret
movb
pop
xchg
mov
decl
fildll
xor
add
mov
and
cmc
xchg
clc
fwait
lret
daa
mov
icebp
jl
adc
roll
xor
stos
les
in
jmp
icebp
sbb
dec
xchg
and
pop
push
sbb
cmc
dec
cmp
popa
sti
les
fildl
roll
lds
sbb
mov
push
cmp
adc
mov
mov
hlt
xor
jecxz
ljmp
mov
mov
adc
insb
mov
addl
adc
scas
notl
jb
add
mov
mov
lret
stc
frstor
ret
and
inc
loope
loope
mov
arpl
insl
in
sub
pop
call
daa
lcall
fcmovu
add
ror
cmp
cld
push
rol
fcoms
lcall
fstpt
push
dec
popf
pop
and
outsb
sub
add
test
sbbl
lods
jne
xchg
leave
or
sahf
sub
test
outsl
aaa
pop
fsubrl
inc
dec
or
loope
add
je
rorb
pop
decl
call
std
and
imulb
jecxz
xchg
mull
pop
dec
aam
data16
lds
pop
inc
nop
and
pop
sbb
scas
dec
leave
xlat
lcall
loopne
jo
xor
sti
das
icebp
decl
inc
pop
outsb
ds
cs
jecxz
adc
xchg
add
pop
push
xor
xchg
mov
in
lods
nop
dec
lock
adc
std
mov
cmp
loopne
scas
test
out
fidivs
pop
push
or
push
and
test
mov
call
nop
and
test
std
cmc
push
push
dec
push
add
sub
or
mov
jo
push
imul
gs
mov
sub
xchg
nop
mov
das
add
mov
mov
or
mov
filds
jg
pop
std
out
mov
out
sahf
jge
mov
call
ljmp
fistl
sub
adc
adc
pop
adc
call
shlb
add
cli
repz
pop
mov
test
test
out
cmp
jl
ljmp
sbbb
xor
or
out
sbb
ss
push
pop
sbb
pushl
xor
nop
aad
rcrl
add
mov
insl
pushl
or
rolb
cli
mov
mov
fisttps
rolb
and
add
divb
fs
jo
lea
mov
in
add
add
or
push
loopne
jns
arpl
sub
insl
inc
pusha
jbe
mov
pushl
inc
mov
jg
sub
mov
rclb
jmp
mov
aam
aaa
inc
inc
repnz
in
inc
imul
jae
jbe
clc
scas
pop
sbb
inc
into
add
cwtl
aas
xor
repz
loop
adc
mov
dec
sub
int3
mov
jl
fcomip
icebp
repz
and
push
cmp
xchg
test
xor
call
arpl
xchg
mov
mov
pop
fdivs
negl
cmp
xchg
insl
jl
das
clc
in
rorl
popf
iret
fwait
test
ds
dec
mov
or
test
les
aaa
repz
mov
call
icebp
and
adc
and
in
mov
jg
psubb
in
push
or
cmpsl
clc
sub
push
xchg
pop
cmpsb
idivl
or
ds
jge
mov
out
jns
bound
rorb
cld
sbb
ljmp
pop
mov
add
xchg
iret
sbb
imul
lods
cmp
jge
int3
int3
jp
in
push
or
add
insb
inc
jecxz
test
mov
mov
mov
sub
adc
mov
mov
add
jbe
out
adc
dec
pop
dec
or
jg
jmp
pop
icebp
mov
jecxz
cmp
mov
loope
xor
or
jp
xor
addr16
and
fisubrl
out
jl
push
xchg
push
loope
pop
push
fadd
pop
pop
mov
pop
out
dec
mov
push
pop
jle
cli
mov
xor
mov
pop
add
jne
sbb
add
sbb
mov
cmc
pop
pusha
mov
insl
xchg
sbb
popl
std
in
mov
das
sysret
mov
dec
mov
dec
jo
icebp
inc
out
ljmp
or
add
cld
sahf
mov
pop
in
js
sbb
pop
les
fbstp
inc
inc
testl
xor
sbb
lcall
jg
cmpsl
mov
lahf
lret
inc
dec
push
fiadds
jge
test
cmc
imul
pop
push
adc
jo
movsl
mov
imul
fstpt
movsl
loopne
mov
je
pop
cld
pushl
andb
ret
dec
sbb
sub
push
jg
sti
outsl
hlt
jg
cmp
test
mov
mov
fdivrl
and
cwtl
scas
mov
jg
sub
dec
ret
ret
test
jg
aaa
push
xchg
add
lock
shr
or
and
pop
icebp
lcall
or
jge
adc
cmp
pop
dec
push
fnstsw
adc
mov
xchg
bound
mov
std
dec
mov
ljmp
shll
lods
sti
pop
pusha
bswap
cli
stos
lods
add
inc
jb
jno
test
scas
pop
cltd
lahf
push
mov
stos
mov
and
andl
mov
pop
inc
jbe
or
jo
mov
add
pop
popf
jecxz
fimuls
repz
adcb
repnz
mov
movsb
mov
ficomps
push
xor
xlat
jb
push
and
xor
outsl
ja
fisttpl
test
imul
dec
and
inc
adc
decl
lcall
mov
push
xchg
xorps
add
stos
js
jg
mov
hlt
in
adc
inc
and
add
dec
into
or
cltd
add
clc
mov
je
xlat
push
push
mov
jg
addb
rcrb
fs
mov
rcll
xor
mov
push
cld
lods
xchg
les
jp
ljmp
pop
or
dec
add
dec
mov
and
mov
cs
mov
int3
lcall
sti
push
adc
mov
mov
xchg
xor
mul
sub
jp
std
jecxz
push
adc
int
loop
push
fs
or
inc
stos
fdivrs
rcrl
cmpb
sbb
mov
mov
fstp
jb
in
fdivrl
mov
add
sbb
or
and
in
pop
mov
lret
call
into
dec
sahf
std
sbb
std
mov
decl
adc
adc
out
leave
iret
testl
addl
decl
pop
stos
dec
lret
insb
xchg
pushf
xor
adc
mov
lods
xchg
jo
scas
ret
aad
xchg
and
cmpsl
push
subl
mov
imul
test
cli
dec
and
add
dec
cmpsl
mov
jl
mov
lcall
lods
xchg
cld
rcr
icebp
and
or
adc
xor
add
icebp
mov
add
insb
adc
into
push
loope
push
les
outsb
jmp
push
fistl
mov
sub
call
stos
mov
clc
call
cmp
lock
jo
mov
mov
mov
rcll
lahf
dec
push
in
xchg
add
or
add
stos
dec
mov
dec
cld
jg
sbb
sub
mov
inc
es
inc
push
repz
and
mov
inc
adc
movl
push
lret
gs
sahf
fwait
pop
mov
xchg
adc
dec
sub
push
adcl
inc
fbstp
icebp
pop
or
sub
mov
cltd
popa
xor
rcrb
int3
dec
std
push
dec
adc
cmpsb
xchg
jb
and
shlb
jmp
aas
pop
mov
test
dec
xlat
sbb
fidivrs
jge
or
push
mov
lcall
pop
es
pop
xor
notb
cmc
dec
xor
pop
pop
lods
sub
sub
dec
pop
mov
and
mov
cmp
xor
jge
jb
mov
fsubrl
je
pop
int
pop
xchg
xor
out
aaa
xor
stos
sub
inc
fwait
insl
aad
mov
daa
and
in
dec
sub
std
outsb
mov
sbb
mov
in
sbb
xchg
add
inc
lret
add
dec
xor
aad
adc
push
fsubs
ficompl
les
adc
fdiv
addb
xorb
in
sbb
xor
cmp
xchg
sub
jne
add
jae
add
mov
pop
fsubp
out
xor
push
mov
adc
xor
jp
ret
fildl
mov
xor
ret
xchg
jo
xchg
out
inc
xchg
and
test
enter
hlt
push
add
push
push
fdivs
push
dec
jo
sbb
jno
out
adc
ja
loopne
mov
stos
cli
mov
push
or
clc
add
data16
dec
in
stos
rorl
cmp
testl
pop
cmp
lret
jno
sbb
movsb
or
or
cld
cmp
lea
popa
mov
cmp
push
pop
fsubr
and
out
push
test
popa
stc
pop
mov
xor
push
notb
add
xor
sub
loope
add
xlat
jns
data16
sub
and
addr16
shl
sbb
icebp
insb
pop
push
mov
stc
imul
mov
stos
inc
add
jne
and
cmp
push
and
movsl
jecxz
std
mov
cld
mov
addl
xchg
xor
jecxz
daa
cmp
dec
xor
pushf
out
lds
fmul
test
add
call
bound
cmp
ja
dec
push
mov
roll
int
scas
xchg
rclb
jge
std
mov
ds
fs
and
loopne
popf
loopne
adc
and
test
push
adc
dec
and
dec
ljmp
int
stc
sti
or
xor
sbb
pop
insl
pusha
ja
jmp
insl
jnp
sbb
inc
pushf
ss
add
and
test
add
lock
les
push
xchg
mov
int
xor
in
mov
cmc
fdivs
push
add
inc
jmp
rcl
mov
pop
and
inc
add
jne
add
pop
or
cmp
shrl
loope
mov
add
test
push
mov
sbb
add
pop
jecxz
pop
fistps
sbb
fsubrl
and
and
push
int
bound
add
xchg
and
pop
lock
jmp
xchg
or
daa
mov
test
in
rolb
pop
packuswb
lock
and
sbb
adc
ja
or
jno
cmp
add
sub
pop
loopne
inc
bound
or
adcl
arpl
negb
outsb
hlt
xor
lock
out
jl
mov
movsb
iret
dec
inc
pop
mov
or
mov
sbb
push
cld
dec
int
lds
jbe
lods
aaa
ret
inc
or
xor
push
mov
push
lds
dec
pop
lock
push
or
add
fucomip
jno
aam
mov
and
or
lods
shll
mov
xor
sti
loope
movsb
adc
loopne
out
add
xchg
pushf
es
fldenv
xchg
in
js
mov
jl
in
xchg
pop
mov
pop
sub
pop
mov
push
daa
fcoms
pop
shlb
ret
loopne
repnz
dec
in
jne
lea
xor
cwtl
and
xorl
pop
cmp
in
out
pop
jne
loope
mov
adc
loopne
fidivrs
dec
loopne
fldcw
add
push
jmp
mov
push
dec
in
aas
mov
clc
sub
mov
adc
inc
xor
fisttps
push
sbb
and
add
or
xor
pop
fistps
imul
arpl
jns
mov
push
add
jb
mov
sub
push
scas
and
in
fisttps
push
xor
arpl
stos
pushf
popa
cmp
sub
in
es
or
or
xchg
popf
xor
adc
sbb
or
stos
sbb
add
push
jae
repz
jns
pop
jno
ror
add
ljmp
sub
dec
or
orb
sbb
mov
dec
mov
into
adc
sub
lock
ljmp
mov
mov
int3
adc
adc
add
aas
or
les
ljmp
loop
in
xor
xor
push
popf
xor
xor
sbb
push
mov
jns
adc
inc
xor
xor
inc
mov
or
dec
fisubl
fldcw
orl
out
in
xor
xorb
push
mov
sub
dec
pop
cmpsl
or
mov
lods
fdiv
hlt
in
push
scas
lea
stc
xlat
xor
jg
dec
fsubrl
fldcw
popa
leave
cmp
jmp
cwtl
push
or
ficoml
push
xorl
cltd
in
stos
popa
jae
and
in
stos
lahf
pop
dec
inc
pop
inc
sub
int
sbbl
xchg
mov
fwait
cmp
rcrb
mov
loopne
neg
sbb
pop
xor
dec
push
aam
jecxz
scas
into
sbb
nop
dec
shlb
jns
xchg
js
adc
imul
lock
inc
adc
jle
and
add
jmp
in
dec
fstpl
pop
pop
out
and
aas
mov
xor
shlb
mov
dec
jle
sub
dec
mov
call
mov
fsts
popa
or
jle
and
dec
mov
pop
jp
cmp
xchg
sbb
sbb
push
push
xchg
add
xchg
inc
cmc
add
enter
in
pusha
mov
add
xor
lods
jle
dec
add
jg
inc
or
fwait
and
or
mov
nop
out
lcall
pop
jmp
cmp
punpcklbw
adc
and
std
add
adc
pmaxsw
mov
fldenv
rcl
testl
in
add
add
aas
pop
aas
testb
in
sub
sbb
stos
mov
test
mov
sbb
xor
dec
jl
add
lret
cld
pushf
aad
scas
sbb
ret
scas
mov
rcll
push
sub
lods
sbb
test
push
lock
xor
inc
push
dec
out
or
sub
into
sub
dec
or
inc
lods
in
icebp
jp
pop
and
cmpsb
dec
test
les
inc
jne
mov
and
xor
rcr
sar
or
pop
imul
and
mov
jp
lret
dec
popf
pop
xor
add
mov
or
lock
mov
mov
sbb
popa
lock
fildll
cmpsb
lock
add
xchg
sbb
subl
sbb
add
push
push
jle
addb
inc
jp
push
lret
fs
mov
inc
jb
and
pop
lock
fcomps
lcall
ret
aas
imul
cwtl
scas
loopne
hlt
ss
sbb
mov
or
xor
int
jp
or
je
cmpsb
dec
outsb
fadds
and
push
test
addb
sbb
lret
jnp
and
dec
adc
pop
pop
rclb
xlat
adc
sbbl
pop
sbb
add
or
lret
sti
jmp
loop
sbb
insb
cld
lret
add
add
outsb
inc
insb
push
xchg
dec
sbb
add
jle
and
push
sbb
xchg
pop
lcall
adc
fdivr
adc
movsb
pop
movsl
cli
roll
add
xor
cwtl
shlb
xor
pop
push
decl
xchg
pushl
ret
or
adc
and
pushf
lds
sbb
mov
pushf
xchg
cmp
mov
and
jb
inc
mov
xorl
outsb
arpl
scas
data16
cmpsb
lea
rcrl
sub
sub
nop
xor
push
je
jne
rolb
cmp
dec
bound
aas
lret
push
add
popf
rcrl
inc
loope
push
outsb
shlb
sub
jbe
mov
sbb
xchg
cmpxchg
sbb
test
adc
jge
mov
fdiv
adc
pop
fsubl
adc
test
sub
repz
jbe
dec
gs
pop
jmp
or
sub
push
or
mov
or
mov
inc
push
or
sbb
mov
andb
test
xor
add
int
cltd
adc
leave
cmpl
sarb
and
loopne
push
ds
cmp
sub
dec
add
cwtl
mov
mov
rorb
sbb
sahf
sar
add
aam
add
mov
mov
pop
clc
aas
out
mul
es
loopne
mov
add
rcrb
es
mov
add
stos
or
lcall
lcall
andb
out
cmp
je
jge
cmp
mov
sbb
jg
jg
dec
fwait
sub
cmc
add
xorb
xchg
leave
add
sub
push
fstpt
push
in
or
sbb
dec
mov
add
jns
bound
xor
inc
dec
add
insl
dec
inc
xor
push
enter
push
sub
push
add
and
cmp
ret
sahf
push
sbb
cmpsl
daa
loope
lods
pop
xor
mov
sbb
mov
lahf
push
dec
mov
popa
lods
push
out
hlt
xor
das
std
outsl
aad
add
enter
xor
xchg
push
adc
mov
loope
dec
mov
xchg
out
sbb
adcb
js
pop
vmovmskps
pop
fisttps
movsl
pop
cltd
aam
or
loopne
fcmovu
inc
ffreep
cmp
repz
cs
test
jmp
push
cmp
add
cld
pop
dec
lahf
jbe
and
std
or
imul
call
fistpl
imul
add
xor
arpl
sub
pusha
sbb
cmp
mov
out
add
sub
pop
ja
inc
dec
das
xor
add
rdtsc
hlt
xor
inc
and
sbb
mov
jl
mov
xor
or
loope
cs
sbb
pop
sti
dec
in
into
mov
add
adc
push
mov
andl
test
clc
lds
js
flds
dec
divb
incl
icebp
int
aas
cld
hlt
adc
hlt
xor
cmpsb
mov
or
sub
mov
mov
add
sbb
adc
inc
push
and
sahf
xor
rolb
pop
pushl
ficompl
lock
decl
pop
cld
mov
shll
pop
cmpsb
cmp
push
in
inc
add
xor
inc
mov
popa
pop
aaa
aad
fbld
cmp
mov
into
je
jb
pop
orl
dec
jg
jg
stos
and
test
repnz
pop
cwtl
push
lods
or
jbe
insl
xorl
and
scas
push
mov
outsb
adc
aam
pop
cld
fcmovnb
scas
push
or
xor
mov
aas
pop
lea
xor
icebp
pop
clc
or
incb
dec
pop
or
ss
arpl
dec
repnz
inc
pusha
inc
lods
fnsave
cmp
push
fwait
jno
das
clc
call
add
jno
ds
idiv
mov
outsl
xchg
push
xchg
in
jge
insl
dec
and
and
loope
bound
insb
adc
mov
or
adc
xchg
add
and
test
xor
pop
cmc
std
or
outsl
aas
std
pushl
add
inc
pop
cmp
sbb
test
aas
and
in
and
jle
push
jg
mov
pop
jns
pop
cmp
fldl
mov
jb
mov
xchg
or
or
sbb
mov
mov
push
clc
xchg
outsb
loopne
cmp
stc
movsb
mov
xchg
outsl
fstp
adc
jmp
mov
pop
int3
push
lock
sbb
mov
sub
inc
je
pop
add
xor
test
shrd
sub
adc
out
out
loopne
push
sub
xchg
add
xchg
mov
adc
pop
inc
pushf
push
sub
rolb
mov
ret
pop
pop
cmc
clc
mov
fsts
hlt
pop
sub
add
inc
push
les
lea
out
les
adc
clc
sbb
les
adc
repz
push
sub
xchg
inc
mov
jl
mov
sbb
push
cmpsl
in
inc
pop
divb
sbb
xchg
xor
mov
or
inc
daa
es
les
sub
and
idivl
mov
lds
sbb
repnz
psubusw
lcall
cmp
es
loope
jnp
push
cmp
dec
cwtl
pop
push
orl
mov
adc
ret
out
mov
pop
adcb
out
xorb
add
addb
test
xorl
sub
outsl
inc
out
add
cmp
cmp
or
inc
push
rol
lock
push
or
hlt
fdivrs
shrb
das
mov
cmp
cli
mov
repnz
push
inc
jecxz
call
pop
testl
and
sbb
out
jle,pn
pushf
in
mov
aad
sub
mov
cld
add
pop
stos
sbb
test
push
cwtl
pop
xchg
jg
cmp
add
dec
jo
mov
mov
enter
lcall
mov
mov
leave
pop
mov
sub
fimull
mov
inc
aas
pop
ror
in
mov
or
push
ds
inc
insb
mov
add
shr
sbb
shr
xchg
or
out
lcall
std
xor
sbb
ret
shl
cmp
mov
add
add
mov
add
sub
std
int3
push
or
adc
addr16
in
cmp
les
mov
mov
mov
loopne
dec
pop
orl
add
cmp
cmp
aaa
dec
mov
dec
fistpll
adc
fdivl
add
jge
push
dec
push
dec
rolb
in
sub
mov
xchg
mov
outsb
or
mov
add
add
adc
inc
and
mov
std
and
cmp
xor
sub
mov
jae
and
ret
add
inc
jmp
les
xor
popa
loop
out
lock
mov
cli
sti
push
mulb
popa
or
incl
jb
mov
cmp
pushf
mov
sbbb
js
sbb
inc
add
sbb
scas
dec
cli
sub
mov
xor
data16
ss
cmpl
addl
pop
push
or
and
mov
je
mov
push
leave
inc
decl
leave
pop
mov
dec
es
test
pop
fistpll
repz
adc
xlat
leave
aas
jecxz
ljmp
cld
call
jg
mov
outsl
mov
add
dec
or
popf
or
pop
clc
call
mov
push
int3
scas
hlt
scas
xor
fadds
pushl
sti
jl
imul
or
and
lahf
sar
mov
out
adc
cmp
xchg
ffreep
and
in
mov
cs
mov
arpl
sahf
push
and
jmp
mov
sub
cmp
mov
aad
mov
dec
cmpb
sti
dec
xor
inc
jg
pop
add
sub
out
add
gs
decl
leave
mov
lahf
imul
shll
sub
adc
ljmp
xor
pop
mov
mov
sbbb
jmp
into
in
ret
mov
scas
stos
in
cld
sbb
aaa
cld
lcall
mov
jle
ds
cltd
gs
lods
add
loop
jg
lahf
jno
push
jmp
nop
mov
inc
call
ss
fidivs
mov
cwtl
les
jle
mov
lds
add
das
jb
rcrl
addl
adc
dec
xlat
out
add
jno
or
jl
mov
and
adc
lods
popl
in
test
pop
pop
push
add
and
jne
pop
testb
and
push
pop
sub
test
mov
pusha
call
xchg
dec
shrb
repz
movsb
pop
and
repnz
add
mov
mov
add
add
in
sub
push
out
xor
pop
cltd
stc
mov
dec
dec
pmaxub
movb
inc
inc
out
sbb
and
inc
or
arpl
jl
adc
ret
cmp
pop
inc
out
in
cmpsb
add
lods
es
mov
xchg
or
enter
sbb
pop
fsubrs
in
ret
jb
ljmp
mov
movsl
xlat
ret
movsl
rolb
pusha
cli
jecxz
mov
inc
fidivrl
test
pop
add
icebp
dec
push
adc
shll
dec
inc
add
sub
sub
js
inc
xchg
testl
es
js
mov
push
in
mov
add
xlat
fisubrs
xlat
ja
imul
pop
lods
add
pusha
xor
dec
push
adc
xor
jne
mov
les
shlb
outsl
inc
xchg
mov
test
mov
add
aaa
and
or
and
sti
ret
xor
fcom
mov
std
push
mov
nop
cmp
cmp
fbld
loope
xchg
icebp
punpcklbw
daa
repz
jno
mov
xchg
pop
rcl
in
jbe
inc
das
stc
inc
andb
and
movsb
loopne
in
aam
bound
adc
insb
or
xor
pop
fs
shrb
mov
sub
mov
orl
mov
in
and
daa
out
add
sti
add
stos
fsubs
dec
in
or
dec
call
mov
and
outsl
lods
add
sbb
jg
or
xor
stc
ss
aam
mov
and
inc
insl
in
cld
push
or
push
scas
jecxz
add
lret
inc
data16
jns
movsb
clc
fists
fucomip
incl
loopne
rorl
sbb
cmp
fiadds
movd
jbe
clc
ljmp
pshufw
jge
dec
in
jb
sbb
xchg
add
insl
stc
lcall
xor
xor
adc
xor
mov
sbb
repz
jg
ljmp
and
mov
jp
subl
push
jmp
mov
jle
inc
jb
mov
push
stos
cmp
mov
mov
fistpl
pop
push
enter
movsl
and
rolb
inc
cmpsb
imul
fcomip
insl
ljmp
sar
pop
and
cmp
inc
push
fisttpl
inc
sub
dec
out
lcall
or
scas
add
cwtl
sbb
pop
jge
call
mov
test
xchg
leave
repz
cmp
cld
popa
mov
aaa
sarb
mov
and
out
mov
mov
loop
sbb
and
imul
xchg
xor
fs
push
incl
cs
mov
call
lret
and
ret
in
mov
add
mov
inc
outsb
and
outsb
add
loop
inc
lahf
sub
pop
push
mov
xlat
sub
mov
cmp
dec
add
dec
insl
aad
pop
mov
adc
in
mov
dec
pop
and
mov
xor
mov
add
pop
decl
enter
jno
push
sbb
mov
jmp
xor
std
fucomip
xchg
inc
mov
movsb
fsubrs
cmp
int3
adc
das
xchg
xor
add
push
push
mov
add
je
mov
jo
push
lea
dec
popa
pop
add
js
push
insl
jmp
pop
and
mov
rolb
in
sub
in
outsl
pop
js
getsec
test
pusha
push
lret
mov
cmp
mov
mov
cli
mov
fcompl
sbb
mov
mov
push
decl
outsl
push
xchg
call
imul
and
arpl
pop
enter
dec
xchg
test
cmpsl
push
shll
sub
idivb
adc
sbb
jg
aam
mov
xchg
or
stos
fdivs
ret
je
add
clc
inc
insb
pop
mov
icebp
add
mov
data16
jae
daa
cltd
arpl
jle
lds
mov
add
pop
xor
xor
ret
loop
outsl
ffreep
push
int3
daa
pop
sarb
andl
leave
lds
mov
xchg
fmull
jbe
or
jmp
jae
in
mov
pop
cmp
gs
xchg
or
sbb
pop
and
outsl
call
mov
int
mov
das
rclb
loopne
movsl
add
jle
add
cmp
inc
xchg
cmp
aad
lcall
add
outsl
ret
mov
xchg
xchg
cmp
jmp
lds
aas
mov
jb
loopne
outsl
and
mov
js
mov
pushf
mov
testb
jle
push
pop
sub
incl
pop
lock
add
ds
sub
out
mov
cld
leave
xor
lcall
lret
adc
add
sbb
rolb
lret
pop
popf
sbb
scas
sarl
jbe
pop
or
xor
push
dec
incl
cmpl
cwtl
xchg
mov
rorl
and
mov
xor
subl
adc
pop
outsl
and
jg
jmp
or
jns
stos
mov
sub
add
pop
jl
arpl
ljmp
mov
inc
or
xor
outsl
pop
and
mov
mov
or
inc
xor
adc
loopne
ljmp
add
dec
rol
test
into
dec
pushf
cwtl
rclb
xorl
test
ljmp
shlb
sbb
and
test
push
mov
adc
sub
or
add
loope
call
pusha
fcomp
inc
in
std
pop
and
clc
or
outsl
std
adc
and
ljmp
insb
or
mov
bound
imull
mov
jmp
push
mov
sub
aam
stos
popf
xor
pop
jle
cmp
out
push
push
and
shrb
aaa
lret
jg
mov
xchg
sbb
push
push
xchg
lods
daa
cmp
loope
mov
leave
xchg
or
orl
fstp
idivb
push
pmaxsw
xchg
mov
and
or
sbb
iret
jecxz
fwait
decb
mov
add
mov
cltd
je
subl
sub
rclb
sti
jp
inc
lods
jno
jns
sub
idivl
notl
fstpt
adc
push
push
aad
mov
gs
out
dec
mov
ja
mov
push
out
cmp
or
sti
mov
int3
and
or
scas
xor
pop
cmc
xchg
clc
stos
xchg
call
imul
scas
dec
dec
outsl
shr
scas
fwait
pop
insl
pop
adc
cwtl
shll
mov
sbb
adc
arpl
call
push
fists
mov
sar
mov
das
jae
inc
sub
dec
xor
xor
sbb
loopne
outsl
filds
add
in
pop
inc
int
sub
or
mov
incl
mov
movsl
inc
xchg
addb
adc
cltd
arpl
in
cmp
pop
adc
sbb
andl
cli
jmp
jnp
clc
jg
add
cmp
cmp
pop
jl
sbb
jg
aaa
xchg
popl
cmp
adc
mov
mov
xchg
sar
push
mov
inc
lcall
movsb
fistl
pop
movups
dec
nop
adc
popa
into
mov
jg
shrb
loopne
jmp
bound
sarb
mov
test
lcall
and
imul
lret
xor
mov
inc
mulb
int3
fistpll
fsub
repz
jl
ljmp
fsubp
push
decl
int
popf
push
ljmp
inc
mov
mov
or
add
or
mov
mov
add
mov
jmp
leave
ja
or
dec
add
test
jns
je
std
add
pop
dec
xor
lds
jne
or
outsl
mov
jmp
dec
addr16
sbb
out
std
mov
invlpg
jg
imul
cmp
mov
jbe
dec
das
shrb
and
movsl
mov
push
scas
fucomp
mov
and
test
xor
mov
and
xor
jp
xor
pusha
sub
cmc
fisttps
scas
xchg
push
and
in
mov
cmpl
cld
xchg
xlat
cmp
mov
or
xchg
pop
add
loope
adc
clc
ljmp
addl
jbe
jge
or
adcb
pop
dec
xor
xchg
call
imulb
add
iret
xor
insl
add
out
sbb
dec
int3
jne
ss
sti
shrb
sbb
addb
mov
loope
xor
mov
inc
aaa
push
sub
add
mov
call
daa
xor
add
adc
ds
add
mov
enter
sbb
test
push
pop
ss
or
or
cmp
mov
fidivl
in
and
sbb
sbb
pop
mov
inc
add
adc
xchg
pop
outsb
inc
xchg
neg
push
sbb
or
sbb
xchg
xchg
mov
mov
fisubs
inc
cmp
push
bound
add
cmp
sbb
movsl
inc
icebp
push
mov
pop
clc
popf
adc
lea
jnp
call
jl
inc
xchg
clc
cmpsl
add
push
lea
push
and
insl
icebp
mov
mov
clc
leave
clc
lods
mov
stc
cmp
cmp
or
icebp
jecxz,pt
das
hlt
jbe
pop
cmp
ds
cli
mov
jo
adc
sarb
lea
xchg
jl
jecxz
jecxz
jb
pop
ljmp
ds
xor
jecxz
mov
pop
mov
cwtl
pop
dec
dec
mov
adcl
and
lock
push
jmp
push
outsb
push
pop
addb
inc
push
mov
sub
imul
jns
jmp
pop
test
arpl
pop
pop
rcl
pop
insl
aad
stos
adc
inc
aam
loopne
outsl
fbstp
int
add
or
ds
adcl
inc
fldcw
rorb
fs
inc
call
adc
dec
jl
xorl
test
pop
and
pop
nop
test
cld
ljmp
aaa
loop
jne
pop
or
in
ds
leave
dec
call
mov
pop
pop
mov
dec
icebp
je
and
lods
push
cmp
jno,pn
cld
push
ret
rorl
sahf
orl
mov
icebp
push
dec
movl
pop
ss
xchg
data16
mov
jl
cmp
mov
aam
cli
fwait
mov
es
mov
jmp
aam
ret
jae
stc
jno
lock
pop
arpl
pop
jecxz
inc
incl
jmp
inc
test
sub
adc
adc
pop
add
jge
roll
and
out
inc
fmull
ret
jl
pop
jmp
add
outsl
jo
sbb
jmp
xchg
in
jl
mov
mov
or
sub
and
lret
test
cld
adc
loop
jmp
and
xor
lock
add
adc
push
mov
jns
xor
popa
pop
ret
sbb
enter
std
pop
decl
sub
pushf
das
mov
roll
lcall
aaa
data16
mov
push
jae
mov
movsl
mov
push
rcl
in
adc
inc
hlt
and
mov
loopne
test
out
inc
movsl
test
xchg
cli
outsl
sarb
ret
inc
mov
pop
in
or
les
rcr
inc
arpl
pop
mov
lret
ret
xchg
jno
jne
shlb
mul
cli
push
sarl
ljmp
add
mov
fsubs
pop
int
jmp
ficoml
xchg
imul
insb
mov
cpuid
outsl
insl
std
push
xchg
stos
dec
pop
mov
pop
lret
push
outsl
mov
test
jecxz
fildll
iret
leave
test
decl
decl
shlb
xchg
int3
dec
test
leave
mov
inc
cs
dec
pusha
fimuls
lret
enter
aaa
sub
sbb
mov
fstps
stos
ljmp
push
aam
pop
pop
fistpl
sbb
xor
jle
ljmp
or
mov
out
mov
loop
rorb
push
incl
sahf
call
lahf
int3
repnz
outsl
cld
xchg
cli
test
and
sub
lcall
cs
inc
mov
adc
movsb
inc
andl
test
or
mov
dec
inc
or
pop
scas
loopne
bound
fstl
or
add
mov
leave
dec
sbb
xorl
movsb
add
js
arpl
mov
push
mov
data16
adcb
add
sub
push
aam
repnz
push
jge
lock
fcmovnb
les
sbb
xor
or
fmull
jo,pn
pop
xor
add
stc
push
fistl
shrl
and
adc
xchg
jge
icebp
dec
fcoml
xchg
and
sub
sub
jns
pop
mov
mov
dec
and
test
or
sub
inc
jl
mov
push
or
dec
mov
lock
sbb
xchg
xor
add
mov
data16
inc
lret
or
mov
dec
cmp
add
jnp
mov
test
jl
pusha
loop
mov
rorb
push
xor
data16
les
dec
imul
fcmovnu
cmpsb
pop
sbb
mov
shll
shrl
push
loope
xor
xor
bound
cmpl
adcb
test
jo
pop
mov
and
movb
mov
adc
lea
iret
cmp
ret
movsb
sub
mov
add
lds
jmp
mov
sarl
ds
fildl
push
cmp
cmp
iret
dec
movl
cmpb
sbb
lret
jecxz
addr16
push
adc
xchg
and
and
mov
rorl
andl
dec
inc
stc
mov
ret
pushw
mov
jnp
std
repz
lahf
add
xchg
add
cmpsb
sub
mov
enter
jae
insb
addr16
out
lock
xor
pop
pop
xor
lds
sub
in
aad
jbe
fdivp
scas
pop
mov
sbb
jmp
test
jae
jmp
sbb
pop
mov
clc
jmp
test
or
mov
mov
shll
pusha
and
dec
dec
sbb
in
push
xor
loopne
rcl
fldcw
inc
jecxz
adc
shrb
adc
push
xchg
mov
inc
hlt
movsl
sbb
ss
les
outsb
in
in
ljmp
dec
jno
mov
dec
test
or
arpl
dec
jb
ja
inc
sub
add
dec
lret
sub
popa
push
movsl
hlt
outsb
mov
cmp
and
gs
xchg
dec
test
push
or
jg
rorb
int3
sub
sub
arpl
sbb
jo
push
and
addb
xchg
push
hlt
mov
outsb
mov
lret
int
es
xchg
jne
inc
sbb
or
pop
test
mov
xor
lcall
and
imul
sbb
sbb
mov
das
imul
jmp
xor
adc
aam
sbb
sub
icebp
popf
adcb
sbb
push
pop
push
dec
cmp
mov
mov
xor
push
inc
adc
pusha
push
inc
cmp
push
dec
test
pop
cmp
inc
cmp
cmp
inc
add
das
mov
mov
call
pop
xorl
add
push
sub
stos
clc
mul
fnstcw
inc
sub
cmpl
adc
push
inc
and
jns
pop
adc
add
jge
sbb
fwait
sub
insb
call
cvttsd2si
add
adc
jo
inc
rclb
es
data16
mov
sbb
fadd
inc
test
or
fdiv
pop
mov
adc
enter
adc
lods
pop
mov
xchg
push
pop
dec
jne
daa
xor
fadds
lea
cs
sbb
dec
aaa
shll
insb
push
ss
fdiv
or
dec
pop
fwait
hlt
flds
and
jnp
incl
lret
dec
push
xchg
jo
add
cmp
push
aas
mov
cmp
dec
ficompl
sbb
mov
test
cwtl
sarb
sarl
mov
andl
push
jae
div
jp
mov
cmp
mov
cmp
data16
xor
jo
in
fucomi
lea
pop
add
or
pop
je
iret
dec
call
jmp
add
mov
inc
add
adc
mov
or
out
sbb
jmp
out
push
cltd
xchg
cmpl
jo
dec
out
sub
icebp
lds
sub
out
add
push
fcoms
sub
sub
xlat
jbe
xchg
lods
push
push
adc
scas
add
and
add
test
stos
push
xor
add
inc
adc
test
lock
push
jo
adc
lods
rcrb
sub
push
in
lods
push
mov
mov
in
xor
mov
inc
aaa
jmp
daa
ret
add
ret
push
jno
je
cmp
je
lods
mov
fbstp
sbb
icebp
addr16
sbb
mov
xorb
and
xchg
data16
sbb
dec
iret
loope
cld
xor
into
mov
inc
cmp
adc
stos
pop
mov
mov
sbb
subl
leave
mov
cmp
sbb
outsb
jmp
test
lret
add
sbb
loop
dec
lods
mov
in
les
ret
cltd
incb
mov
jo
rorl
mov
inc
cmpsl
pop
dec
xchg
push
adc
ss
or
lods
sbb
outsb
lock
das
adc
imul
sar
lods
jno
push
cmp
mov
inc
insb
or
mov
inc
xor
or
pop
mov
sub
pop
je
push
jnp
arpl
cli
incl
jmp
xor
push
push
or
scas
int
in
ret
dec
inc
xor
add
mov
push
sbb
pop
es
aaa
loop
lea
adc
leave
add
and
loopne
dec
je
sbb
dec
mov
mov
je
sti
adc
mov
dec
mov
sub
aaa
in
mov
adc
pop
mov
sub
dec
ret
jno
bnd
fisttpl
xchg
repz
mul
das
aam
xor
popa
in
aas
adc
lcall
aaa
out
mov
mov
orl
or
or
dec
push
stos
mov
sub
or
add
lret
add
mov
adc
add
icebp
adc
inc
push
add
sbb
sbb
lret
inc
movq
int3
fcoml
jmp
aaa
repnz
pop
mov
or
inc
pushf
mov
dec
pusha
inc
jno
adc
pop
mov
or
mov
inc
push
faddl
lcall
push
xor
adc
pusha
add
and
mov
scas
ret
sub
decl
mov
insb
sbb
aam
adc
test
xor
dec
sbb
mov
int3
sbb
gs
scas
cmpl
dec
ret
int3
xor
dec
adc
sbbl
aam
int3
out
and
fucompp
fs
cmp
testb
and
ja
push
rcll
fiaddl
test
sub
cmp
ljmp
ficomps
mov
pusha
dec
icebp
ljmp
out
jl
sub
pusha
popa
fld
jl
fcoml
xchg
loopne
loopne
mov
por
mov
dec
cmp
push
aaa
xchg
adc
es
clc
insb
loop
cmp
ret
fcmovu
and
fcmovb
mov
push
imul
sbb
fimuls
stos
xor
mov
faddl
popa
adc
rorb
or
outsb
out
push
fucom
shrb
add
and
or
mov
stos
mov
xchg
jno
in
cwtl
cmp
sarl
fbld
shl
repz
addb
or
fs
or
clc
jbe
push
xchg
inc
pop
fstpl
or
mov
sub
fcmove
out
fsubrp
lds
adc
cld
int
shll
mov
sbb
inc
xor
jl
mov
fnsaves
push
jae
xor
dec
jg
jecxz
jo
or
mov
test
sub
adc
lcall
lcall
xchg
pop
add
lds
lahf
daa
sbb
push
xor
cmp
int
xchg
mov
sub
sub
lock
sbbb
pushf
mov
andb
xchg
jg
jmp
jne
div
add
mov
add
enter
dec
cmp
xchg
stc
test
push
popa
or
insb
cmp
test
or
sbb
jge
les
rcrb
jge
cwtl
jno
xor
add
clc
lea
or
js
shrl
fwait
jo
shr
dec
pop
adc
adc
push
aad
outsl
icebp
push
nop
mov
das
icebp
lods
negb
scas
lret
pop
clc
push
cmpsl
mov
dec
cwtl
fstps
into
loopne
loop
rolb
fstpl
sbb
imul
pushf
add
and
popl
ss
mov
dec
addr16
add
add
push
jmp
push
mov
in
pusha
add
push
pop
lock
dec
jl
loope
js
aaa
push
add
popf
add
mov
mov
in
cwtl
in
rol
or
rclb
mov
orb
shlb
mov
shrl
lcall
xor
cwtl
or
mov
dec
in
xor
jge
shlb
mov
mov
add
je
sbb
sbb
leave
sbb
loopne
or
scas
inc
or
mov
leave
sahf
loop
cmpsb
call
sahf
mov
xchg
mov
in
test
xchg
jne
mov
add
pop
adc
daa
add
loopne
test
aam
jnp
mov
or
cwtl
ret
movsl
add
inc
insb
sbb
fiaddl
pop
cmpsb
or
ja
rolb
std
addb
cmpsl
rorl
jbe
popa
sar
sub
inc
xchg
and
loopne
cli
call
mov
test
loopne
in
add
or
ret
inc
test
jne
inc
call
pop
fadds
cmpsb
mov
xor
add
arpl
insb
mov
sub
pushf
adc
jbe
imul
and
jmp
add
inc
xor
cmc
aam
in
fnstenv
les
fisttps
mov
jo
sti
pop
push
test
je
xchg
adc
mov
adc
add
andl
dec
mov
xorl
filds
cmpsb
fistpll
add
pop
push
adc
lcall
sub
pop
int3
inc
ret
pop
js
je
cmpsl
sbbl
gs
mov
out
mov
call
cmp
push
insl
inc
jno
imul
add
adc
pop
jge
dec
push
addr16
call
or
in
es
in
add
jae
push
push
push
clc
pop
or
mov
scas
push
bound
inc
xchg
jo
add
dec
fsubrl
jge
add
jp
add
adc
xchg
mov
push
xchg
lea
imul
cmpsl
adc
or
adc
mov
or
loopne
inc
lcall
xchg
xchg
rorl
out
xor
fisubrs
xchg
sti
shl
xor
push
add
adc
lock
xor
popf
call
xor
aam
sbb
and
in
and
jecxz
mov
out
add
push
jmp
das
sbb
mov
into
push
push
int
inc
adc
mov
adc
cwtl
push
push
inc
rcrl
mov
cmp
mov
mov
pop
ljmp
mov
or
mov
inc
or
mov
push
mov
out
lock
or
arpl
pop
add
mov
sbb
mov
jp
cmp
fdivrl
cli
push
push
arpl
jnp
push
js
test
xor
adc
push
data16
lock
mov
adc
repz
xchg
insb
pusha
fwait
adc
mov
mov
and
ret
in
pop
sbb
xchg
dec
test
sti
lods
cs
sub
sub
cmp
fsubrs
add
sub
xlat
adc
adc
nop
pop
or
sub
fsts
fstps
jnp
loop
or
in
push
or
push
not
push
rolb
popa
sti
dec
xchg
add
push
or
inc
push
jl
xor
aaa
mov
xor
inc
js
std
test
ret
jae
pop
mov
negl
in
pop
loope
cltd
pop
dec
nop
test
mov
movsl
lahf
test
aas
je
pop
repnz
xor
xor
nop
or
sahf
pushl
fstps
fmulp
jge
push
inc
add
subb
in
lret
mov
test
add
in
inc
jne
dec
fadds
xlat
sbb
setae
fs
mov
lock
mov
inc
mov
sti
fidivrs
sbbb
cld
add
sti
scas
loop
inc
add
inc
push
outsb
dec
cmp
push
push
xor
rcl
das
mov
or
sbb
decb
rcrl
add
enter
pop
dec
inc
call
and
adcl
add
cmp
clc
sub
pop
or
lea
push
xor
daa
aaa
add
cs
dec
call
ja
add
add
jmp
dec
mov
test
and
decl
movsl
push
add
pop
les
and
mov
mov
popf
add
js
rcl
loope
add
mov
push
jnp
pushl
dec
out
xchg
pusha
es
rolb
inc
adc
push
rorb
add
adc
or
xchg
mov
addr16
movsb
or
add
pop
movsl
add
pop
mov
rcr
mov
inc
call
and
and
test
jg
incl
std
xchg
jbe
setl
out
stos
repz
pop
and
das
cld
pop
out
sub
xor
cmp
das
hlt
cmp
insb
and
mov
sub
div
dec
repnz
push
xchg
pop
shlb
dec
jmp
shll
lcall
mov
je
out
pushl
pushf
sbb
xchg
lea
hlt
add
xor
sbb
push
sub
adc
lods
bound
aam
int
mov
dec
in
hlt
xor
out
jo
fildl
es
push
pop
je
loopne
pop
push
cmp
push
mov
jecxz
das
mov
mov
ds
fstpt
ss
sbbl
int3
repz
fsubr
xchg
inc
lcall
adc
jge
sarb
insl
in
cmp
mov
mov
mov
jle
sbb
inc
jmp
mov
push
mov
out
testb
jg
and
fbld
add
dec
mov
pusha
cmc
sbb
lret
xor
mov
das
mov
les
push
cmc
iret
aad
push
pop
repnz
or
pop
pop
fadds
or
cmp
enter
outsl
call
fxtract
rcrb
mov
nop
pop
arpl
sub
push
cmp
xor
xchg
mov
cmc
loopne
or
es
decl
decl
inc
sub
mov
jo
cmpsl
lods
iret
push
dec
es
loopne
mov
subl
lret
das
dec
call
lret
lret
insl
and
jns
adc
movsb
adc
ja
je
mov
incl
mov
add
push
pop
xchg
sbb
jns
aam
sub
lods
or
les
call
pop
loopne
gs
data16
mov
dec
dec
fwait
dec
aad
xchg
push
sbb
add
pop
je
test
cmp
and
mov
or
scas
dec
icebp
and
jne
mov
sbb
pop
out
jae
repnz
hlt
cs
imul
mov
aad
jae
push
loop
and
mov
andl
xor
or
std
add
stc
arpl
jbe
jp
pop
jg
mov
sbb
adc
ret
je
icebp
jnp
and
idiv
inc
movsb
cmc
loope
cmp
cmp
jb
mov
jns
lds
add
inc
mov
addl
mov
jmp
sti
daa
or
cld
js
pop
push
insb
adc
pop
xor
jns
bnd
push
or
push
std
pusha
push
lcall
pop
call
xchg
in
shlb
dec
pop
inc
cli
xchg
outsl
jno
adc
int
add
in
mov
dec
in
adc
and
scas
bound
stos
incw
or
cs
push
dec
aaa
jo
push
pop
bound
or
and
adc
or
repz
mov
or
frstor
outsb
and
inc
gs
add
lcall
sarl
in
mov
push
add
fildll
inc
sub
rol
and
inc
mov
outsb
jp
neg
loopne
inc
fists
shll
jle
pop
mov
push
ret
sub
ss
insb
fimull
dec
and
leave
scas
call
add
xor
mov
adc
mov
or
sub
mov
adc
in
adc
aad
sbb
inc
fsubrs
insb
xchg
test
in
mov
ljmp
es
xor
xchg
sub
jle
xchg
xchg
pusha
jg
xor
inc
and
aam
add
sub
enter
mov
enter
repz
dec
pop
inc
enter
jle
sarl
push
mov
lods
push
mov
jb
stos
push
add
or
andl
mov
call
add
dec
inc
shll
push
add
and
sub
pop
push
sahf
ret
mov
gs
lock
mov
jle
adc
xor
xor
icebp
add
inc
mov
sub
andb
mov
mov
test
dec
adc
or
push
lret
or
pop
pusha
in
cmp
add
fwait
and
es
jns
add
mov
push
inc
int
aam
dec
outsl
push
pop
lret
or
fmuls
add
sub
adc
add
dec
cmp
or
je
xor
loopne
addb
jno
cmp
xor
add
loopne
mov
loopne
cmpsb
out
and
fidivl
mov
push
loopne
stc
or
rclb
popf
jg
dec
xchg
stos
rolb
subl
sbb
and
flds
cmp
sbb
dec
adc
dec
mov
xlat
in
sbb
sbb
fldcw
icebp
loope
mov
xchg
pop
faddp
sbb
inc
xlat
aas
add
jl
cmp
repz
inc
cmp
mov
inc
or
int
int
data16
incl
add
scas
mov
mov
sbb
outsl
cld
jmp
add
add
shlb
andl
mov
lds
jb
jnp
mov
push
sub
jb
cmp
test
sub
cltd
nop
bound
mov
icebp
jg
jmp
mov
and
push
ja
cwtl
xchg
outsl
out
mov
cld
fidivl
mov
jo
jle
inc
mov
mov
ss
std
adcb
inc
mov
cmp
push
in
mov
mov
imul
jbe
idivl
pop
jno
mov
cmp
fnstsw
mov
xor
cmp
insb
sub
pop
test
pop
push
jecxz
mov
insl
incl
dec
or
cmc
sub
xor
ljmp
jo
out
scas
js
mov
pop
sub
scas
inc
xor
pop
mov
inc
repnz
popa
jge
mov
movsl
add
fstpt
dec
mov
and
mov
inc
movsb
ljmp
push
int3
loop
mov
add
decl
rorl
in
pop
cmp
xchg
lds
movsb
add
pushf
mov
sbb
pop
std
and
cmp
and
lcall
js
scas
lret
lock
mov
ja
sub
sub
inc
xchg
aad
subl
psrlq
mov
shlb
insb
or
in
xchg
fxch
loop
fnsave
std
in
cld
lret
fsub
mov
call
xchg
out
cmp
jp
mov
jecxz
lea
push
aas
mov
leave
cmp
xor
add
cmp
cmp
dec
push
out
out
sar
mov
test
repz
push
mov
rolb
sti
mov
icebp
pop
mov
push
movsb
test
push
hlt
or
aaa
adc
inc
outsl
add
xor
rcll
incl
sbb
inc
and
and
sbb
insb
push
adc
lahf
inc
and
pop
mov
and
fadd
decl
loopne
and
je
shlb
insb
pop
sub
push
sub
push
mov
pop
es
mov
jg
loop
push
add
out
mov
mov
rcrl
mov
push
cwtl
insl
xor
loope
das
pop
sbb
ret
inc
lahf
aaa
push
iret
mov
sbb
aas
stc
mov
xchg
sub
inc
pop
out
out
jno
aam
mov
xor
and
lret
movsl
outsl
mov
add
cli
mov
mov
lock
xchg
cmc
repnz
ljmp
fwait
sbb
and
mov
aas
add
lahf
je
aaa
mov
mov
mov
sahf
lahf
mov
xchg
mov
add
cli
mov
int3
push
mov
stos
add
mov
xchg
and
sbb
sub
shll
sub
decl
cli
ja
dec
and
fidivrs
lret
push
imul
cmpsb
mov
xor
push
loope
jg
sub
push
jb
sar
add
lds
js
or
pusha
jne
inc
xchg
loopne
xchg
pushl
and
push
inc
in
iret
int
data16
cmp
jge
fwait
ljmp
stc
cmp
add
into
add
dec
or
push
dec
insb
xor
clc
jo
sub
jns
inc
sbb
gs
popf
daa
sbb
or
inc
mov
stos
ds
and
dec
lds
fcoms
jle
fs
popf
inc
lds
add
mov
fdivr
jmp
in
or
pop
pop
xlat
sbb
cmc
enter
and
insb
push
test
add
pop
inc
adc
idivl
push
scas
into
mov
push
add
daa
aam
inc
xor
or
adc
xor
aas
pop
fwait
xchg
push
dec
sbb
shr
fwait
mov
jle
mov
les
mov
cltd
push
scas
sbb
mov
inc
or
pop
hlt
fiadds
enter
cmp
inc
lret
sbb
insb
mov
imul
and
add
mov
push
xor
ja
mov
sub
and
sbbl
or
loop
push
push
aaa
xchg
xorl
sarb
fcom
fsubs
xchg
inc
mov
pop
adc
sbb
adc
adc
or
mov
or
test
mov
sub
mov
sub
xor
cmp
fcomps
orb
adc
and
out
sbb
cmp
rcrl
sbb
sub
inc
bound
sbb
pusha
jp
inc
inc
in
sahf
aam
sarl
outsl
adc
sbb
adc
mov
jge
push
or
and
push
lea
or
out
cwtl
mov
rolb
pop
and
sti
dec
add
inc
outsb
jl
cmp
icebp
clc
adc
xchg
sub
ss
inc
test
push
lcall
push
insl
aas
fdivs
stos
mov
push
pushl
aas
test
je
push
js
and
xchg
adc
dec
ja
sub
sbb
add
mov
lds
rcrl
aad
xor
inc
inc
cmp
xor
les
and
add
mov
ret
mov
push
mov
and
lcall
addl
movsl
or
ds
repz
push
cmc
out
and
aaa
popf
sarl
js
push
lcall
lahf
adc
cs
jecxz
sbb
mov
add
pusha
push
pop
movsb
pusha
adc
mov
mov
cmpsb
int
push
clc
push
push
lret
cmp
add
mov
dec
mov
int3
dec
shl
loop
mov
jp
leave
adc
lock
mov
not
aam
adc
loopne
push
or
aaa
hlt
adc
ret
cmp
les
inc
outsl
inc
mov
pop
push
mov
cmp
or
fsubrs
xchg
lret
and
cmp
repnz
push
mov
push
push
push
andl
sbb
imul
pop
push
push
mov
mov
pop
adc
sub
js
cmp
adc
jbe
inc
icebp
push
repz
fadd
add
cld
mov
sbb
add
jmp
aam
sbb
sub
xor
leave
loopne
lret
es
adc
add
add
pop
mov
shl
adc
shll
push
sub
testl
cmpsb
add
add
add
add
shufps
data16
inc
hlt
add
lcall
dec
test
mov
lahf
mov
mov
and
dec
icebp
xor
out
icebp
cld
loopne
lret
adc
out
lods
sti
popa
mov
sbb
cld
jp
sub
dec
mov
js
pushf
pop
rcrb
movl
jae
jnp
jae
mov
inc
maskmovq
imull
popl
lock
es
and
sub
or
loope
cld
insl
mov
adc
faddl
sbb
sub
push
push
out
incb
adc
sub
andl
lock
clc
ss
daa
movl
add
daa
aas
cmp
dec
outsb
xchg
hlt
adc
fidivrs
jb
and
xchg
or
mov
xchg
xor
sbb
mov
jmp
shr
into
sub
and
or
leave
sbb
cwtl
call
int
sbb
rcll
jbe
mov
inc
icebp
mov
and
cmc
dec
add
add
jne
in
js
sbb
bound
cmp
sahf
test
xchg
xor
cmp
es
int3
jno
fs
shl
sbb
mov
loopne
arpl
icebp
add
or
pop
outsl
cmp
js
dec
mov
jnp
push
outsl
lret
js
add
daa
insb
pop
test
push
add
inc
mov
sbb
and
ret
push
mov
add
dec
mov
mov
and
inc
add
add
push
and
mov
lcall
push
pop
call
push
je
add
add
rcrb
cmp
pop
and
shlb
movsl
adc
test
rolb
inc
test
jge
rorb
inc
lds
repnz
incl
dec
push
xchg
push
mov
cmp
js
inc
nop
pushf
clc
dec
push
cmpl
cmp
sub
cmpl
in
rcrl
lret
cs
test
fucomip
hlt
push
dec
push
cmp
mov
mov
push
mov
cmpsb
mov
insb
xor
fbld
test
pushf
lds
xchg
setle
test
addl
sahf
test
shr
mov
mov
sbb
fiaddl
sbb
pop
outsl
xor
jb
add
hlt
lods
sti
pushl
clc
add
out
mov
aam
ds
dec
add
jbe
dec
add
jg
xor
add
xchg
mov
scas
xchg
inc
pop
pop
loopne
aaa
xchg
pop
scas
dec
lret
push
push
adc
test
imul
mov
sbb
push
test
and
out
in
ss
mov
lcall
jno
rorb
mov
jl
xchg
sti
iret
sbb
mov
jns
out
hlt
aad
mov
adc
jg
shll
mov
and
shll
pop
insl
out
pop
aam
and
sarb
sti
and
mov
shll
pop
push
cmp
cmpl
mov
insl
out
inc
and
das
je
add
xor
or
jae,pn
jno
mov
mov
aaa
es
inc
cmp
push
fistps
repnz
dec
aad
adc
arpl
lcall
popf
add
stos
mov
inc
jo
sub
mov
outsl
push
push
loop
fdivr
jmp
sbb
mov
push
pushf
aad
aaa
or
daa
push
add
repnz
rorb
jl
les
repz
xchg
add
jle
mov
dec
or
fistpll
mov
repz
out
int3
std
push
push
inc
xor
jl
ret
add
xchg
mov
sbb
stos
push
mov
jg
out
sbb
mov
add
jmp
push
fcmovnu
push
idiv
adcb
movsl
je
mov
cs
pop
repnz
mov
xchg
add
xchg
push
xorl
add
std
scas
rol
pop
mov
dec
xchg
sbbb
cli
daa
sti
dec
inc
mov
jnp
or
add
mov
cmp
add
in
xchg
push
mov
pop
in
mov
lock
jb
subl
mov
mov
loope
les
call
data16
dec
nop
adc
loopne
add
lds
dec
sbb
outsl
push
popf
adc
outsb
add
adc
lcall
dec
scas
pop
aas
mov
pop
mov
mov
mov
push
sbb
bound
ret
je
push
dec
add
mov
cld
or
jnp
adc
mov
repz
and
loop
adc
push
inc
mov
les
sbb
cltd
loop
mov
adc
mov
add
push
ficoml
out
idivl
mov
sub
mov
push
xchg
in
call
ds
and
or
mov
shlb
int3
push
mov
loop
dec
orl
cmpsl
loop
push
add
mov
sub
xchg
ret
dec
sbb
cs
lock
sub
mov
inc
mul
rolb
adc
adc
pop
jo
xchg
cmp
jae
mov
sbb
inc
mov
adc
pop
ret
in
loopne
mov
xor
int3
cld
pop
loop
sti
cmpsb
dec
mov
cmp
mov
cltd
ljmp
cmc
movsb
in
pop
push
xchg
test
jno
jmp
add
or
add
in
xchg
jl
cmp
cmp
cmp
negl
xorb
mov
push
adc
lods
cwtl
std
icebp
and
inc
and
shll
sub
sbb
imul
loop
das
aad
inc
pop
sahf
arpl
push
xor
add
push
adc
inc
ret
push
inc
xor
or
jp
minps
je
aam
mov
adc
sub
or
es
cli
call
sti
cld
sub
shlb
sub
add
pop
mov
adc
std
aas
imul
or
sbb
rolb
ret
inc
xchg
mov
jno
push
dec
fisubs
notb
cmpsb
out
pop
add
push
je
les
aam
enter
ja
add
and
mov
shl
lea
dec
push
or
pusha
push
mov
xor
icebp
or
adc
shl
pop
or
aas
pop
sub
adc
sub
int
dec
adc
incb
fidivrl
in
push
xor
stc
dec
push
adc
mov
dec
lock
mov
syscall
ret
idivl
sbb
leave
mov
inc
cmpxchg
mov
inc
filds
push
movsl
jg
and
jge
xor
rcll
sbb
add
push
insl
ret
jg
jae
addr16
and
gs
xor
sub
int
movsl
bound
fidivs
xchg
add
pop
aaa
bound
js
test
push
in
mov
push
aaa
pop
push
and
repnz
xorl
outsb
adc
cs
sub
or
pop
sbb
cwtl
sbb
loop
fnstcw
dec
mov
faddp
js
mov
rcl
out
shlb
dec
cmp
pop
fdivs
sub
sahf
mov
aas
push
sub
push
sub
arpl
pop
jb
push
dec
mov
mov
cltd
roll
out
mov
cmc
jecxz
les
addr16
div
sub
rcll
mov
add
sub
push
sub
imul
push
loopne
pop
push
enter
or
jo
and
add
adc
pop
adc
and
mov
mov
jbe
lods
test
sbbl
repnz
and
ss
outsl
or
icebp
rcll
pop
fs
mov
adc
enter
aam
out
mov
push
cmpsl
popw
sbb
add
mov
clc
pusha
js
nop
cmp
add
and
inc
enter
jnp
sti
in
pop
shll
lock
and
outsl
xor
dec
ret
or
mov
adc
rolb
loopne
mov
sti
les
push
sub
pop
cld
out
clc
lcall
mov
adc
jle
push
addl
push
cmp
fisttps
je
xchg
movsb
or
test
pop
in
in
decl
in
and
adc
mov
pop
or
pop
test
inc
lret
jg
jo
pusha
inc
fldenv
lret
cmp
mov
popf
outsl
pop
push
dec
loopne
push
mov
xchg
push
and
inc
push
and
xchg
pop
mov
stos
fwait
adc
test
mov
jbe
pushf
add
ret
push
or
jb
sbb
pushl
mov
cltd
add
pusha
inc
mov
xchg
outsl
push
pushl
inc
xor
xchg
shlb
incl
cmp
shll
sub
inc
xchg
mov
repnz
ljmp
jnp
adc
gs
mov
inc
jmp
fldl
rol
cwtl
cwtl
push
out
pop
fwait
or
xor
jne
push
cs
les
aam
xchg
dec
ret
lcall
push
es
push
int3
push
lahf
add
mov
push
adc
mov
lock
push
out
inc
scas
and
xor
orb
outsl
in
mov
sbb
and
or
mov
test
jg
fucomip
jl
movsb
push
and
nop
sub
or
imul
mov
aam
xchg
movsb
cmp
push
incl
leave
mov
sub
sub
mov
xchg
loop
push
or
sbb
int3
or
adc
mov
dec
insl
push
imul
lods
xorl
push
stos
sarl
inc
call
pop
jl
ds
adc
jle
add
loopne
cmp
test
jbe
rcll
adc
or
mov
jle
mov
inc
inc
sarb
push
push
fs
sub
xchg
pop
lods
stos
repz
in
push
cmp
es
sub
cltd
mov
ret
loope
in
daa
inc
jg
addb
stos
lods
pop
lods
push
int3
unpckhps
cmp
int
call
jbe
pusha
jge
out
mov
shll
lds
and
push
push
cwtl
gs
scas
nop
push
jbe
cmp
inc
pusha
push
in
mov
mov
jl
lcall
jnp
int3
jecxz
data16
add
or
sbb
js,pt
imul
fcmovne
push
or
push
add
dec
inc
push
mov
jge
lret
or
inc
or
sub
add
mov
cmpsb
dec
pop
and
mov
in
out
fucomip
lea
dec
sub
mov
adc
jmp
addr16
adc
mov
imul
xchg
inc
add
nop
sarb
hlt
inc
or
add
push
lcall
lcall
xchg
xchg
add
pop
push
popa
add
ljmp
mov
imull
inc
cld
inc
and
add
jge
andl
mov
pop
push
cmp
out
jmp
scas
xchg
cmp
fbstp
shl
nop
sub
nop
sbb
fstpt
sbb
cmp
xor
incb
adc
fildl
inc
adc
dec
iret
lods
addb
jecxz
sub
mov
xchg
dec
ljmp
adc
iret
or
sbb
enter
jecxz
clc
shll
push
xchg
mov
jmp
adc
and
dec
das
add
sarb
in
popa
sub
inc
psubusb
adc
cmpsl
or
fsts
lret
jecxz
pusha
push
dec
mov
ja
xorl
mov
fisttpl
add
orb
fsts
xor
enter
lahf
add
repz
sbb
pop
fdivr
push
bound
addl
sbbl
movsb
pop
pop
mov
fldcw
cmp
iret
int
jnp
punpcklbw
out
call
bound
mov
repnz
in
fsubrs
fprem
inc
lcall
in
pushf
dec
fisubrs
pop
mov
xchg
and
mov
rorl
push
ljmp
jl,pn
mov
ret
outsl
test
outsl
mov
push
jne
int3
gs
push
mov
push
jl
sub
adc
inc
in
inc
test
jl
out
outsb
daa
jecxz
mov
mov
in
aas
jl
sbb
jecxz
pop
in
std
andl
inc
push
sbbl
stos
adc
mov
insb
in
enter
xchg
sahf
clc
xor
inc
pop
js
loope
clc
jmp
mov
ja
ds
loopne
bound
test
xchg
aas
idiv
clc
iret
pop
pusha
pop
dec
pop
cmp
das
inc
cmpsl
dec
pop
sbb
pop
push
mov
lock
dec
or
mov
repz
decl
or
jl
jle
pop
push
clc
adc
stos
pop
mov
cmpsb
leave
xchg
mov
lea
mov
test
sbb
push
cmp
sbb
repnz
in
jg
imul
jl
lea
add
lcall
mov
mov
or
icebp
mov
adcb
clc
negb
ljmp
loop
fcompl
decl
cs
jecxz
jo
xor
sub
icebp
sbb
pop
mov
dec
repnz
xlat
jecxz
sarb
xchg
movsb
subb
lods
incl
call
sbb
jne
icebp
ljmp
add
in
in
js
iret
sub
jae
jle
aad
mov
jno
sbb
sub
ficoml
les
fadds
idiv
or
push
ret
clc
aaa
dec
clc
loope
lods
testl
cwtl
addr16
mov
pop
mov
addr16
cmp
dec
add
lcall
insb
adc
adc
sbb
add
rcrl
stc
stos
and
cli
dec
dec
ss
test
nop
inc
mov
lret
subb
repnz
lcall
pop
dec
cwtl
and
mov
fldl
hlt
inc
and
ficomps
test
lea
jg
lret
pop
push
xchg
sbb
dec
sahf
les
ja
leave
cwtl
fnstcw
mov
cli
call
test
in
adc
imul
lahf
out
loop
jg
ds
dec
loop
outsb
in
push
pop
pop
mov
dec
jle
lds
cwtl
inc
and
in
mov
aaa
xor
subl
test
jle
dec
mov
call
jbe
inc
jae
push
movsl
adc
rolb
iret
das
movq
imul
shll
mov
cmp
mov
xchg
in
and
sahf
pop
xchg
lret
push
mov
cmp
pop
push
imul
repnz
shlb
push
ret
sahf
rolb
leave
jns
std
pop
js
out
loopne
sbb
aad
inc
jo
mov
adc
xchg
scas
adc
adc
mov
pushf
ret
add
xorb
shlb
or
push
imul
jb
dec
out
ret
sbb
inc
mov
mov
pop
je
rorl
ja
lods
xor
sbb
push
rcrl
aam
sarb
mov
repnz
clc
or
in
out
jne
mov
or
sub
jnp
bound
incb
push
adc
mov
lods
das
fstp
sbb
jo
inc
dec
enter
das
fnstsw
xchg
jle
and
cmp
mov
or
cs
outsl
add
jecxz
mov
or
ret
jno
lea
push
lret
cmpsl
mov
pop
pop
mov
add
sub
inc
lret
cwtl
cmp
js
loope
push
adc
ds
imul
xor
inc
add
dec
inc
rcrl
or
fs
sbb
bound
lcall
cli
or
shlb
outsb
xor
or
pop
ss
and
xchg
xchg
lods
sbb
mov
jne
in
sbb
cmc
lods
mov
dec
aad
nop
jns
in
stos
jae
fdivrs
mov
imul
jge
rcrb
sub
sbb
xchg
addr16
cmp
push
mov
xchg
push
adc
xor
push
adc
cltd
jbe
rcrb
jg
int3
in
xchg
cmc
dec
data16
sbb
mov
rclb
pusha
fnsave
push
inc
and
scas
das
insb
mov
sub
les
or
movsl
sub
push
pop
pop
inc
mov
mov
lock
je
jmp
fimuls
add
sbb
adc
arpl
jnp
es
loopne
xchg
incl
adc
adc
pop
jmp
cmp
xchg
aaa
fadds
sbb
subb
dec
ja
ret
std
add
sbb
cmpsb
inc
out
pop
mov
xchg
aas
add
jb
jo
lret
hlt
inc
add
xor
lret
fcmove
decb
pusha
popa
ja
add
and
sbb
jmp
or
cmp
add
or
insl
dec
sub
scas
in
das
sub
add
sbb
out
mov
gs
mov
popf
pop
inc
clc
test
mov
cmp
cmpsl
push
push
add
pop
arpl
and
pop
xchg
inc
cmpsl
in
sbb
movsl
mov
fs
das
icebp
pop
leave
sahf
xchg
repnz
and
in
pop
jbe
xor
sbb
dec
adc
das
jnp
add
insl
pop
imul
fimull
adc
adc
mov
add
les
inc
or
mov
push
in
pop
scas
data16
adc
loope
testb
or
adc
roll
adc
aam
fildl
mov
pop
push
pop
testl
pop
and
push
clc
or
and
and
fs
add
dec
jo
mov
mov
inc
rorb
std
add
or
mov
jo
push
icebp
rorb
add
inc
ja
dec
sub
fnstenv
adc
pushf
mov
push
outsl
sub
mov
out
fisubl
nop
ror
vpsubsw
push
test
dec
mov
movsl
sti
sbbb
in
fsts
std
push
mov
jne
ss
lods
add
movsl
inc
pop
sarb
mov
mov
inc
cltd
hlt
filds
mov
mov
adc
fwait
xlat
lds
sub
add
push
xor
mov
adc
mov
mov
out
adc
mov
loope
fcompl
xchg
push
pop
adc
aam
mov
jle
jno
mov
push
inc
das
fs
scas
mov
aam
cmp
or
push
pop
and
scas
or
add
jbe
pop
push
js
cmp
andb
loopne
shll
jecxz
cld
push
dec
fcoms
push
pop
xor
loop
push
inc
pop
inc
dec
pop
imul
rcrl
shll
cmp
rclb
pusha
jmp
test
je
or
fs
pop
imulb
lahf
xorb
rcll
lds
adc
sarl
add
ret
or
outsl
sub
sub
adc
sub
push
add
push
bound
inc
andb
dec
lock
decl
xchg
add
cmp
or
popf
xor
mov
ret
mov
push
cmpsb
add
test
cmp
xor
sbb
sbb
daa
add
cmp
push
pop
subl
setnp
dec
ret
jbe
inc
dec
rol
aaa
mov
fists
es
adc
cmpsl
in
jg
mov
std
ret
inc
sbb
mov
stc
scas
dec
add
outsb
push
dec
dec
sbb
xchg
imul
adc
inc
mov
cmp
adc
pop
mov
out
xor
jl
std
inc
mov
xor
xchg
inc
test
ljmp
or
leave
cmp
fsubrs
in
dec
cwtl
xchg
push
sti
xor
nop
test
ret
push
adc
aam
scas
adc
lods
xor
mov
cmp
add
cmp
add
mov
idivb
mov
adc
lods
xchg
enter
in
loop
aam
add
cmpl
sbb
push
jle
mov
push
cmpsl
pop
add
pop
inc
test
add
sbb
and
cmp
push
test
lock
lock
stos
cmp
mov
stc
lock
add
add
movsb
pop
mov
and
pop
cmp
mov
cmpsl
mov
jp
push
es
jnp
adcb
jae
dec
dec
roll
int
sub
dec
jns
loope
out
adc
fcompl
inc
lock
mov
mov
gs
mov
mov
movsb
lret
sub
sbb
mov
pop
mov
das
add
push
dec
ret
jl
jge
xchg
imul
cli
lock
ljmp
add
fsubr
add
add
out
enter
mov
loop
add
or
sbb
repz
push
sbb
fnstcw
aaa
mov
and
call
dec
inc
nop
push
lock
sub
ss
lds
and
inc
scas
mov
fcomp
push
movups
push
add
sbb
jae
int
sbb
out
roll
das
mov
cmpl
and
fisubl
es
nop
dec
pop
add
nop
mov
mov
cmc
jge
je
add
jmp
mov
rorb
sbb
sbb
aad
xchg
clc
fistpll
xor
sub
aaa
enter
adc
pop
pop
xchg
push
scas
push
scas
clc
push
shlb
call
mov
push
jb
jae
cmp
add
sub
stos
sarl
mov
cmp
sbb
mov
into
xor
sbb
lahf
push
dec
xor
xor
add
in
sahf
inc
loopne
and
mov
adc
sub
fldt
repnz
int
loopne
ljmp
call
pop
jne
clc
lods
rorb
clc
aad
leave
ss
mov
cli
dec
icebp
inc
rorl
shl
aad
es
xchg
clc
daa
push
out
aas
dec
sub
arpl
jecxz
inc
loope
ffreep
call
pop
xor
call
cmpb
jne
jg
das
cld
stc
fcoms
aam
mov
adc
jecxz
rolb
cld
shrl
test
adc
mov
faddp
stos
and
mov
lods
or
pop
lds
incl
fucomip
es
jbe
and
stos
mov
lcall
pop
fdivr
add
imul
insb
add
outsb
xchg
mov
cmc
fildl
hlt
jecxz
je
fsubrl
ljmp
and
addr16
iret
fisttpl
mov
xor
in
insl
sahf
test
std
jg
decl
mov
jno
shlb
adc
inc
mov
outsl
ljmp
outsb
leave
add
dec
xchg
decl
push
xchg
xchg
imul
aaa
sub
xchg
mov
cmp
lcall
loope
dec
movsl
inc
dec
push
mov
pop
mov
dec
jmp
ljmp
loope
jecxz
data16
decl
cld
dec
repnz
in
mov
cld
std
add
bound
xor
jg
call
or
repz
gs
hlt
cmp
mov
dec
out
je
or
jge
pop
add
jl
in
lock
decl
push
dec
adc
lahf
divb
cmpsb
movsb
and
aaa
jp
mov
shll
sti
in
loope
fnstcw
xchg
add
out
inc
adc
jbe
pop
or
dec
mov
mov
cwtl
in
jo
add
jmp
mov
adc
cwtl
jnp
xchg
fisubs
repz
ffreep
adc
sbb
nop
das
jo
xchg
jae
push
jbe
xor
pop
fstps
inc
xchg
jmp
test
push
out
orl
or
pop
mov
cs
test
pop
mov
test
cmpsl
addl
mov
incl
cwtl
movsb
outsb
test
add
pop
adc
xor
mov
in
repnz
out
bswap
dec
mov
sbb
sbb
pop
loopne
nop
test
jmp
fpatan
push
xor
and
aas
cwtl
mov
cltd
call
icebp
mov
jecxz
test
lret
inc
ljmp
sbb
inc
jmp
rolb
lret
lock
ljmp
xor
fs
mov
inc
shl
xchg
inc
fisttps
sarl
or
xor
scas
xchg
fidivrl
idivb
add
sbb
jne
addr16
enter
push
std
scas
jnp
clc
sub
shlb
add
pop
dec
std
inc
and
test
mov
shr
sbb
mov
cmp
pop
repz
mov
sarb
mov
iret
das
icebp
pop
mov
jno
es
sub
dec
icebp
mov
and
gs
popa
js
idiv
xchg
stos
or
testb
inc
std
test
or
aam
lods
ljmp
inc
popf
xchg
push
fcompl
jl
add
dec
cmpsb
mov
vmread
stos
push
mov
insb
call
adc
add
fistl
lock
int3
push
movsl
cmc
scas
fcoml
mov
lcall
inc
mov
dec
pop
cld
repnz
lcall
in
and
dec
div
outsl
scas
mov
or
and
in
jl
cli
sti
jecxz
add
push
inc
aas
cmp
clc
dec
inc
push
jmp
inc
inc
insb
fisubrl
insb
adc
pop
or
xor
xor
mov
insl
push
pop
ret
sub
inc
xchg
cs
jnp
xor
leave
hlt
outsl
fisubrl
out
fisttps
jno
sbb
lds
cli
test
dec
mov
cwtl
movsb
repnz
mov
adc
insb
push
cmc
mov
jecxz
add
pushf
xchg
pop
test
icebp
pop
mov
jno
xor
shll
lcall
in
cmp
mov
mov
adc
lcall
xcrypt-ecb
cmpsl
dec
fmull
fcoms
add
mov
outsl
out
xchg
outsl
jge
mov
mov
push
xchg
lret
cmove
decl
mov
aas
cmp
push
mov
mul
std
mov
fmuls
mov
inc
inc
aam
cmpsb
add
lock
stos
sbb
jns
jg
xor
jg
std
pop
cs
dec
add
lock
mov
push
sub
shrl
and
iret
ja
test
std
mov
xor
cmp
cld
push
jl
adc
mov
mov
faddl
mov
mov
lods
push
idiv
das
mov
loop
mov
jp
pop
dec
push
add
sub
mov
std
addr16
mov
cli
mov
stc
adc
xchg
sub
cmp
mov
adc
add
pop
clc
pop
test
push
enter
aas
push
inc
jo
inc
mov
cmp
sbb
xor
pop
sbb
call
cmp
inc
inc
clc
iret
sahf
popl
fldt
add
mov
pop
push
mov
repz
and
xchg
mov
jb
sub
lock
mov
mov
mov
movb
xor
in
clc
push
push
pop
and
jge
xorl
pop
push
clc
cmp
outsb
sub
pop
and
in
push
sub
pop
scas
lahf
lcall
jb
js
cmpsb
pop
ds
clc
pop
add
jecxz
xchg
ds
aaa
fsubp
ret
clc
in
icebp
movsb
jecxz
xchg
and
jmp
inc
jecxz
pusha
int3
jecxz
or
xchg
icebp
int
out
mov
fucomip
js
mov
icebp
ds
push
add
jecxz
cmpsb
or
divb
ds
add
adc
sub
xor
aas
dec
aaa
call
in
leave
push
movsl
outsb
mov
orl
rcrb
cmp
fbstp
mov
xchg
cmp
adc
sti
mov
xlat
es
lret
addl
cld
sahf
jecxz
mov
pop
fs
jae
jl
mov
scas
lock
repnz
in
ficoms
mov
xor
dec
das
lcall
xchg
je
movl
or
xchg
arpl
movsl
sahf
aam
and
add
clc
fisttpl
loop
push
pop
sub
and
jmp
sbb
and
imul
aam
mov
cmp
jecxz
lcall
lcall
jae
mov
and
dec
fs
movsb
fsts
ljmp
sbb
sub
cmp
out
adc
aaa
mov
jno
or
ja
iret
jns
sbb
incl
rcrb
dec
mulb
nop
xchg
sub
imul
pop
dec
ljmp
push
jns
daa
pop
jecxz
adc
sub
xchg
inc
mov
jbe
push
out
insb
add
add
lock
test
call
mov
sbb
add
mov
sub
int
test
xchg
arpl
xchg
aad
shl
inc
js
stc
mov
movsl
mov
cld
jg
scas
in
movd
mov
mov
insb
lock
or
jne
sub
sbb
mov
xor
cmp
lods
sbb
pop
inc
std
jae
add
mov
lcall
cli
mov
xor
aas
xor
stc
dec
cmp
jmp
fcoms
inc
mov
rolb
jnp
mov
in
xor
icebp
pop
mov
cs
jg
bound
xor
mov
jg
in
pushf
aas
mov
cmp
andl
add
jecxz
loope
mov
or
jg
inc
popf
inc
aad
or
sarl
push
out
pusha
push
sbb
aad
push
or
cs
push
sar
mov
mov
dec
dec
push
cmc
imull
sbb
jl
movsl
push
cld
aas
xchg
std
ja
xchg
roll
fnstsw
lcall
mov
and
jae
ja
daa
inc
push
popa
nop
stos
ja
das
cld
mov
xchg
ja
mov
cmp
das
es
das
xchg
clc
das
mov
xchg
fdivp
sub
bound
pop
jp
cmp
lds
pop
out
lret
mov
int3
in
and
xor
imul
push
loope
out
add
scas
push
popa
and
jae
push
pop
add
iret
rcrb
outsl
mov
daa
sub
test
pop
js
pop
das
in
fstpt
ret
sub
out
xorl
add
xchg
hlt
or
xchg
mov
xchg
add
mov
in
idivb
jmp
and
lock
fnsave
sbb
das
push
mov
adc
pop
lcall
sti
popa
pop
mov
cmpsb
xchg
call
daa
rorl
jp
test
into
xchg
sub
clc
or
icebp
pop
test
loope
xchg
jge
add
push
adcb
call
and
call
aad
push
or
and
xchg
pop
adc
stos
adc
jnp
sbb
subl
es
jg
add
insl
mov
pop
arpl
ret
mov
mov
jecxz
movsb
dec
xchg
push
mov
rorb
outsl
pop
sub
mov
lds
adc
incl
pop
ja
hlt
xchg
pop
adc
loop
outsb
insb
mov
cmp
out
clc
xchg
jne
push
aad
xor
stos
mov
scas
mov
jge
xor
outsb
sbb
mov
ljmp
mov
mov
outsl
dec
jge
shl
jb
inc
mov
mov
add
mov
sub
and
lock
loop
pushf
add
sbb
mov
add
shll
pop
xor
sbb
add
inc
push
sbbl
mov
aaa
stos
mov
sbb
mov
dec
mov
cmp
lds
orl
inc
sub
loopne
and
adc
dec
add
ficoml
push
int3
cli
or
mov
sub
sub
inc
adc
addb
icebp
sub
clc
outsl
addl
mov
add
push
pop
mov
lds
push
loop
mov
clc
movsl
mov
mov
mov
jae
add
aad
sub
xor
adcb
cld
sub
add
adc
scas
and
adc
mov
sub
addb
pusha
mov
out
ret
mov
adc
daa
push
inc
push
lock
cmc
test
dec
imul
aad
sarb
lock
or
xor
pop
clc
and
push
cmp
dec
gs
cmpl
cmpsl
ja
rcrl
xchg
jle
sub
push
xor
cmp
adc
push
cs
cwtl
scas
shr
xchg
or
andb
out
jle
pop
dec
sub
fcomps
enter
dec
insl
nop
xor
dec
out
mov
xor
xchg
xchg
in
or
adc
enter
or
lock
adc
sbb
fidivl
mov
insl
adc
inc
loope
dec
mov
fsubrp
cmpsl
or
mov
jge
test
add
iret
inc
xchg
les
rcrl
lds
loopne
test
or
sub
hlt
fldenv
sarl
and
std
or
int3
fbstp
push
adc
sbb
rolb
ret
sarl
jns
adc
inc
cmpl
sbbb
sub
cld
adc
jle
cmp
adc
daa
mov
mov
mov
xor
sub
scas
cmp
cmpsb
enter
add
jne
bound
mov
into
or
js
cltd
sub
rclb
jp,pn
adc
fwait
push
insb
mov
cmpb
test
mov
out
add
mov
jle
pop
inc
mov
and
inc
add
std
sbb
mov
jne
into
mov
out
and
xchg
inc
pop
jge
mov
ud1
jmp
ss
ljmp
lea
mov
call
cmp
pop
ja
je
mov
test
dec
scas
cmp
jg
ret
inc
adc
and
icebp
arpl
mov
ret
clc
mov
repnz
rolb
mov
divb
or
iret
les
pop
mov
test
lea
lea
jp
push
mov
jg
clc
dec
or
mov
and
jecxz
scas
push
loop
mov
add
int
jg
imul
xor
sbb
xchg
jne
pop
and
xchg
xor
ljmp
mov
repnz
pusha
adc
and
sbb
xchg
pushf
pop
hlt
scas
mov
adc
repnz
add
in
lds
shll
or
add
out
adc
cmp
sahf
rcr
sbb
sbb
mov
add
or
xchg
lret
test
xchg
push
mov
add
ljmp
mov
dec
sub
sbb
mov
repz
cwtl
and
dec
xchg
std
cli
or
daa
jecxz
jno
lock
jg
sbb
arpl
pop
aam
aam
and
sar
popa
sti
cmpsl
jg
ficompl
add
iret
sbb
loope
std
mov
stos
hlt
and
sbb
jmp
inc
loopne
jge
shll
add
scas
pop
cmpsb
ljmp
outsl
cmp
je
pop
movb
stos
leave
cs
pushf
push
lock
mov
xlat
inc
aad
cmp
push
cmp
pop
cmp
inc
movsl
out
out
lock
lds
push
lea
jmp
mov
aaa
outsl
jno
jae
mov
mov
cs
inc
jle
roll
jne
and
jle
cltd
test
and
push
testb
jns
inc
jecxz
sub
adc
pop
clc
or
loopne
mov
add
dec
call
outsl
out
call
mov
mov
mov
movsb
cmp
test
push
mov
pop
movsl
push
xor
push
cmpsl
les
shlb
or
fdivl
mov
xchg
mov
sbb
loopne
lods
enter
ja
leave
fs
adc
xor
loopne
in
les
pushf
mov
popa
test
mov
xchg
fsubrp
and
jge
data16
mov
pop
dec
dec
mov
in
inc
xor
call
inc
ficompl
mov
jle
into
add
dec
in
sbb
add
and
pop
jmp
xor
adc
mov
jne
xor
xchg
jge
pop
aad
mov
mov
xchg
lods
stos
adc
xchg
hlt
xchg
add
shlb
or
push
popl
nop
inc
testb
mov
sarb
jg
arpl
mov
negl
rcl
aam
mov
ss
jmp
cmp
mov
xlat
nop
mov
into
xor
movsl
pusha
xchg
sti
push
jmp
mov
call
fdivrp
cld
aaa
mov
lods
xchg
stos
pop
test
pop
lock
or
cld
fwait
dec
xchg
test
mov
adc
lea
test
mov
dec
nop
inc
xlat
cmp
cmpsl
popa
lret
sub
decl
call
mov
cwtl
aad
dec
or
sub
xchg
dec
adc
int
in
mov
clc
into
stos
pop
mov
ficomps
ret
sub
mov
push
lret
jbe
and
sti
inc
inc
xchg
adc
jg
inc
decl
adc
out
and
push
les
xchg
mov
xchg
pause
stos
mov
sub
test
adc
lods
fs
inc
ljmp
mov
daa
pop
pusha
jb
pop
push
nop
adc
faddl
adc
outsb
add
fmull
nop
mov
imul
cmp
jo
movsl
fisubs
subl
nop
and
add
cmpsl
fadd
insl
sti
jbe
and
mov
xchg
adc
ljmp
sbb
inc
insb
inc
add
in
jbe
das
and
and
sub
aaa
xchg
cli
cli
pop
jno
out
fs
mov
and
or
popf
xor
dec
outsl
in
aaa
js
push
xor
and
mov
adc
ret
sahf
xchg
push
cld
movsl
add
add
test
sbb
or
sub
xchg
je
adc
test
lods
stos
inc
inc
dec
inc
sarl
and
or
pop
mov
push
rcll
ret
sahf
pusha
inc
lcall
jl
movsb
movsb
test
add
mov
adc
lock
mov
stos
add
xorb
xchg
lods
andb
bound
and
xchg
push
cmpb
or
mov
and
test
mov
add
rcrb
pop
in
aas
push
in
out
mov
cmp
call
jecxz
sti
repz
lds
icebp
or
pop
mov
dec
mov
xchg
int3
enter
sub
push
scas
jge
ret
xchg
jmp
mov
fsqrt
adc
adc
loop
xchg
and
or
mov
loopne
sbb
fsubrl
adc
add
cs
icebp
inc
ds
sbb
cmp
mov
lcall
rorb
icebp
mov
enter
jb
push
mov
push
mov
imul
sti
cmpsb
js
pop
inc
jecxz
outsb
add
roll
mov
dec
sbb
fnstsw
add
add
mov
enter
inc
xor
fidivl
pushf
or
inc
les
decb
pop
int3
sub
push
sbb
loop
push
mov
ret
add
dec
push
jae
cmp
pop
mov
push
movsb
inc
addr16
notl
inc
xor
ret
add
neg
js
or
call
push
mov
fidivrs
push
imul
movsl
movsl
fsubs
loop
add
jo
rcl
sub
mov
push
out
cmp
mov
cmp
movsb
ret
push
shl
lea
pop
xor
lret
jmp
push
outsl
pop
jns
push
shrb
inc
xor
mov
push
jne
aas
inc
sub
mov
shrb
pop
cwtl
jno
push
adc
mov
mov
inc
jmp
xchg
or
add
pop
sbb
sub
hlt
lea
mov
adc
cltd
call
adc
and
xchg
rep
aam
xor
push
popa
inc
pop
inc
hlt
and
lcall
xor
sub
jo
push
mov
cs
and
aas
adc
mov
out
push
xor
xor
xchg
dec
mov
add
inc
sbb
mov
mov
cld
out
dec
daa
lcall
sub
push
dec
add
add
xor
jb
mov
decl
xchg
fldl
mov
mov
xlat
rolb
inc
sub
push
outsl
loope
out
pop
loopne
jge
stos
aas
cmp
loop
imul
mov
movl
jp
mov
or
inc
and
out
pushf
ljmp
push
jl
pop
gs
filds
push
ljmp
inc
mov
inc
insb
push
in
dec
test
push
mov
cmp
test
loopne
cli
push
inc
aas
jo
repz
sti
push
frstor
xor
xlat
or
iret
mov
std
sbb
mov
outsl
jae
push
adc
mov
sti
add
lahf
adc
sbb
leave
jp
inc
add
shrb
test
in
push
in
les
fstp
int
cmpsb
adc
sbb
scas
dec
fistpl
bound
stos
ss
inc
jbe
cltd
test
cmpsb
or
nop
push
addb
pop
mov
pusha
lock
scas
inc
jo
mov
in
add
ds
inc
rcrl
fnstsw
in
fistpll
xorb
jns
jne
add
jge
cmp
xchg
arpl
dec
leave
sub
lea
pop
in
pop
bound
bound
gs
lods
mov
mov
adcb
fisttps
incl
inc
jno
faddl
jmp
mov
icebp
sub
pop
mov
out
rclb
aam
pop
rorl
xchg
sbb
sbb
inc
les
fsubl
sbb
jle
add
outsl
xor
fcoml
clc
inc
mov
mov
rcll
and
or
das
mov
addr16
test
mov
add
dec
jecxz
sbbb
shl
shll
test
test
rcrb
and
sub
hlt
inc
sar
call
sti
repnz
dec
into
cs
je
add
xor
and
sbb
add
add
adc
push
ds
jno
inc
dec
or
add
adc
mov
fcomps
shll
or
outsb
add
and
sbb
adc
push
and
mov
out
and
pop
rclb
sbb
fdivrl
out
cmp
movb
jge
adc
mov
ljmp
icebp
cmp
add
enter
addb
push
shl
mov
inc
roll
dec
push
stos
push
pop
loope
adc
or
leave
jg
lret
addb
add
lods
inc
xchg
movb
and
fwait
pusha
or
enter
mov
sbb
loope
jge
xor
cmc
cmp
mov
clc
mov
das
sbbb
addr16
adc
aaa
repnz
in
push
sbb
or
idiv
lcall
stc
mov
mov
xor
or
orb
sbb
shlb
push
and
add
sbb
iret
and
lods
push
jo
jb
rolb
mov
push
movsb
add
enter
out
mov
jno
xchg
or
mov
sbb
inc
cwtl
dec
adc
inc
add
sbb
or
and
pop
inc
sti
bound
test
in
mov
jnp
cmp
insb
cmp
sbb
rorb
out
adc
adc
add
in
and
cmovp
mov
sbb
adc
inc
add
jnp
mov
or
inc
popf
fcmovnbe
incl
xchg
sbb
adc
mov
fsubrl
mov
sbb
loope
nop
iret
adc
cmpl
push
sbb
testl
inc
mov
lods
sbb
cmpsb
loop
pop
fs
or
xchg
adc
pop
pop
or
clc
cmp
sub
cmp
lea
es
sub
scas
pop
xchg
sbb
and
std
add
cltd
sar
sbb
mov
ficomps
mov
add
lods
mov
hlt
adc
shr
mov
movups
inc
dec
mov
mov
mov
and
aam
mov
stos
int3
pusha
mov
inc
sub
pusha
add
insb
push
pop
add
cmp
les
lds
add
ficoml
pop
cmp
fsub
addl
fs
and
jg
jne
and
lds
or
add
in
pusha
or
iret
xchg
pusha
add
jns
pop
call
sub
xor
xor
pop
fidivs
sbb
mov
test
adc
out
pop
adc
pusha
add
xchg
inc
adc
or
mov
ret
movsb
loopne
lea
dec
fmull
adc
adc
push
loop
hlt
mov
dec
sbb
bound
pop
mov
lds
lods
or
scas
mov
call
jl
aaa
mov
adc
ja
js
loope
or
pop
add
add
add
add
mov
testl
and
in
push
jp
pop
or
add
sub
push
xor
and
movsl
mov
out
loopne
push
and
or
notb
sub
add
push
fidivrl
or
mov
outsb
sbb
push
xlat
push
add
adc
fsubr
jge
or
push
out
xchg
shlb
cwtl
mov
and
sbb
call
cmp
add
adc
dec
xchg
faddl
cltd
loop
cmpsl
push
inc
out
and
mov
or
add
adc
mov
sbb
cmp
aas
or
or
aas
stos
out
les
lcall
incb
popf
out
push
xchg
lahf
pop
or
fmull
cmp
or
mov
push
add
mov
add
and
mov
push
out
mov
push
jecxz
jne
mov
jb
clc
movsb
ljmp
out
or
pushf
sub
cmc
xorb
ret
in
xor
sub
sub
std
and
loope
fisubl
aam
xor
enter
jo
or
je
mov
je
popf
sahf
jecxz
fst
sub
or
add
out
fisubrl
mov
sbb
jne
js
sti
pop
xor
xor
inc
mov
in
and
jne
inc
dec
insb
dec
inc
cld
fstpt
adc
shlb
jne
jg
loopne
jmp
insb
inc
pop
xchg
sahf
sub
mov
add
add
lock
sub
int3
hlt
mov
shlb
sahf
sbb
mov
and
nop
or
dec
xchg
test
pop
add
push
and
sub
shlb
in
nop
test
test
adc
sbbl
push
hlt
jecxz
adc
jne
pop
cltd
mov
push
xor
add
mov
jl
sbb
add
push
test
add
sysret
lock
or
dec
add
inc
fadds
sub
stos
cmp
push
adc
cmp
gs
subl
add
mov
xor
mov
cmp
test
sub
cmp
add
rol
inc
mov
jmp
cltd
mov
bound
ret
cmpb
dec
adc
out
add
in
dec
add
vmread
and
sbb
inc
pop
out
in
insb
push
roll
cwtl
ror
dec
pop
adc
dec
add
sub
ret
insl
pop
inc
pop
mov
cmpsb
mov
push
jp
sbb
or
aam
or
cwtl
cmpsl
lock
aad
and
hlt
add
outsl
pcmpeqw
sti
test
repnz
inc
adc
in
mov
sbb
sub
xor
cmp
adc
cwtl
inc
push
push
stos
sarb
dec
xor
dec
mov
sbb
mov
movsb
and
add
popa
sbb
and
scas
roll
add
xlat
cmpsl
pop
adc
xor
int
dec
imul
dec
push
sbb
popf
sti
loope
bound
out
aas
xchg
or
xor
lret
mov
aas
dec
push
pusha
push
loop
dec
or
and
and
stos
sub
dec
out
lret
in
sub
stos
xor
push
adc
mov
mov
push
pop
sbbl
loop
jbe
jp
or
stos
addb
or
and
aaa
xlat
xchg
add
cmp
mov
addb
pop
push
rolb
repnz
pop
dec
push
dec
xor
adc
loopne
shl
mov
fsubrs
xorl
adc
out
push
jae
dec
jge
pop
jp
sub
pop
shl
jecxz
cmpsl
shrb
inc
mov
adc
cmp
pop
vxorps
daa
sti
fsubrp
add
sub
adc
aas
and
sbb
sub
iret
mov
in
inc
jne
sbb
movsb
add
dec
ds
xor
mov
xchg
rcll
push
mov
sahf
or
or
stos
loopne
mov
xchg
sub
mov
push
add
mov
jb
inc
bound
lret
add
es
adc
mov
int
pop
in
lret
pushw
or
jnp
add
add
mov
sbb
add
in
add
pusha
sarl
inc
imul
xchg
adc
inc
out
add
mov
adc
sbb
mov
addb
add
cmp
jns
dec
adc
sti
push
mov
jne
mov
outsb
push
add
inc
adc
ljmp
push
cmc
push
and
xor
lds
pusha
test
push
mov
pop
lock
popa
dec
inc
pop
push
xchg
cmp
adc
inc
lds
add
xor
cmc
xchg
xor
repz
jl
mov
mov
add
out
js
inc
xor
cmp
adc
and
shlb
insl
adc
xchg
mov
dec
rolb
pop
mov
add
bound
test
add
mov
lds
xor
std
stos
push
add
jae
mov
inc
jge
mov
and
test
scas
outsl
ljmp
loopne
add
movsl
std
jno
jne
cli
fucomip
jmp
movsl
lock
pop
mov
js
insb
sub
incl
cld
and
and
int3
lahf
ficompl
jle
lock
cmp
jp
adc
imul
push
hlt
push
insl
into
pop
pop
cmp
movsl
decl
add
xchg
inc
add
dec
push
loop
popf
add
jge
push
push
adc
jo
adc
add
jle
mov
mov
call
fldl
mov
scas
push
add
negb
pop
fsubl
add
pop
insl
mov
sub
lods
add
xlat
imul
pop
add
outsl
out
jne
std
sahf
jecxz
call
stc
lods
push
add
inc
add
lret
mov
sbbb
iret
aam
adc
and
int
cmp
jno
mov
subb
jle
push
adc
mov
sbb
xor
pop
sti
outsl
in
testb
push
into
add
into
push
dec
add
mov
mov
mov
cmp
sbb
test
fisttpll
rol
bound
nop
inc
or
mov
push
and
adc
hlt
xlat
cmp
jl
xchg
ret
incl
cs
push
add
add
shr
mov
lds
jne
popa
arpl
loop
cli
mov
outsb
fucomip
imul
sbb
and
icebp
jg
mov
mov
dec
add
xchg
cmp
or
add
and
sarb
cmp
cli
incl
sub
nop
movsl
dec
sbb
sbb
clc
jns
aad
xchg
mov
clc
call
test
pushf
icebp
adc
mov
mov
jge
nop
es
dec
orl
mov
and
nop
shrb
cld
mov
jo
movsb
dec
push
inc
stc
lock
dec
hlt
push
mov
adc
xchg
sbb
xchg
popf
pop
sti
xor
jnp
pushl
addr16
pusha
call
pop
nop
dec
dec
sbb
test
mov
sbb
ljmp
xor
add
mov
mov
mov
clc
into
cwtl
add
pusha
negb
call
adc
das
insb
cld
push
mov
and
mov
mov
stos
sti
lcall
xchg
leave
push
and
imul
cmpb
fs
shrl
sub
ret
pop
push
mov
push
jg
pushl
rcl
in
incb
or
mov
dec
sbb
jg
jne
addr16
push
pusha
or
adc
pop
push
lret
and
lock
ljmp
cmc
negb
sarl
andl
or
jnp
ljmp
movsl
sub
lea
mov
adc
sar
or
sbb
add
mov
es
pop
lea
pushf
ret
mov
decl
cld
leave
mov
dec
jno
or
add
shrl
outsl
mov
xchg
jp
dec
jle
subl
add
dec
dec
icebp
pushfw
lret
fcmovnb
ljmp
cmpsb
ret
sbb
add
or
aaa
xor
decl
out
adc
pop
xor
into
and
mov
les
mov
mov
add
fistl
dec
cld
pop
jp
mov
shl
and
bound
incl
or
pop
ljmp
inc
int3
add
or
fsubr
stos
and
jecxz
or
andl
adc
out
inc
andl
pop
xor
adc
shl
push
fadds
popf
push
call
inc
cld
pop
xor
test
mulb
mov
adc
icebp
outsl
std
jl
or
insl
xor
adc
sub
mov
jecxz
and
fucom
dec
or
mov
mov
xor
mov
jg
or
ss
sbb
add
add
pop
adc
decl
xor
out
adc
iret
xor
test
xor
insl
pop
pop
pop
call
mov
add
lods
cmp
mov
test
pushf
mov
jb
xor
divb
xor
imul
dec
shl
in
jecxz
ror
push
loopne
jle
data16
add
fs
out
lcall
cltd
mov
xchg
fstpl
xor
jnp
popl
and
outsl
adc
xchg
add
cmp
fs
test
cmpsb
iret
xor
xlat
inc
insb
scas
stos
jecxz
add
or
dec
inc
adc
add
out
bound
jb
and
stos
clc
dec
and
jge
dec
and
mov
lret
cmp
addb
std
ficomps
pop
loop
and
dec
and
xchg
and
sbb
fbld
sub
mov
movsl
out
icebp
pop
repz
bound
mov
daa
jmp
mov
add
fucomip
call
leave
mov
sbb
pusha
dec
jg
add
inc
inc
adc
pop
in
inc
push
pop
xchg
inc
jecxz
ret
lods
lds
xchg
mov
lret
jg
jnp
daa
loopne
dec
rcr
adc
addr16
into
xor
inc
fbld
lods
or
out
push
lret
stc
in
mull
faddl
jg
jp
jno
iret
cmp
imul
incl
fistl
inc
and
lock
adc
or
dec
jg
out
mov
addb
jns
inc
inc
loopne
lock
cmpsl
rcrb
and
cmpsl
fsubs
jb
bound
adc
push
arpl
cmp
sbb
pop
add
and
mov
sbb
add
mov
hlt
jg
ret
dec
shll
sbb
aaa
inc
rorl
push
or
addr16
dec
jecxz
js
mov
ljmp
cmpb
in
dec
jns
cmpsl
dec
sbbl
lcall
push
iret
mov
outsl
mov
es
jo
adc
adc
ljmp
leave
inc
gs
mov
je
fadd
incb
xchg
pusha
bound
and
clc
pop
mov
lcall
pop
and
call
adc
ss
rolb
xor
cmpb
imul
ljmp
push
jge
mov
fs
add
js
dec
xor
ljmp
movl
push
push
mov
lods
dec
sub
xor
int
inc
jg
lcall
aaa
ljmp
jl
xorb
cmp
stc
push
ficoml
sti
and
fcmovnu
push
mov
jg
jnp
sub
or
pop
arpl
dec
xor
pushl
push
ljmp
jle
and
jno
aad
lcall
fiadds
daa
adc
mov
jbe
xor
jo
mov
xchg
icebp
fildll
movsb
adc
add
lret
dec
or
or
cld
scas
add
ret
scas
orb
andb
jge
jb
mov
pop
lret
cmc
lods
aas
sar
push
daa
mov
loopne
movsl
mov
jne
lods
adc
mov
push
push
fmuls
imul
fbld
pop
mov
or
pusha
push
push
pop
loop
in
je
mov
ds
aam
and
cmp
test
test
mov
outsb
mov
call
or
xchg
sbb
sub
jnp
call
testl
sub
mov
push
xorb
jo
ds
cmp
roll
mov
lahf
fsubs
mov
daa
sub
das
nop
adc
test
xor
push
mov
mov
loopne
orb
nop
fiaddl
aad
test
add
mov
popf
inc
mull
jecxz
test
test
jecxz
sahf
inc
or
mov
stos
and
mov
dec
adc
jmp
mov
sub
mov
hlt
dec
inc
mov
and
jb
push
shrl
outsb
add
rolb
sub
jg
outsl
mov
or
push
popa
and
mov
jge
jmp
push
fcmovne
mov
push
pop
js
inc
popa
idiv
xor
lahf
xchg
inc
mov
push
xor
mov
pushl
mov
push
fsubrs
adc
and
add
cmpsl
insl
and
xchg
jbe
faddl
popa
fbld
pop
inc
add
cld
aaa
xor
in
movb
movsl
adc
lahf
movsb
add
and
pop
inc
push
mov
notl
jge
cmp
mov
add
into
push
push
loop
std
and
xor
push
movsl
pop
shrl
push
jno
fcomps
pop
xor
push
xchg
decl
jnp
add
cmp
xor
mov
mov
jl
lds
out
sahf
repnz
mov
xchg
and
inc
inc
and
sbb
sub
sbbb
cld
push
jge
mov
scas
cmp
pusha
lret
and
aad
mov
sub
add
insl
sbb
adc
or
cs
mov
imul
push
pop
leave
aas
jb
gs
pushf
inc
stos
inc
mov
scas
bound
js
addb
cld
call
cmpsl
dec
push
cwtl
dec
inc
jne
lds
test
jnp
lods
fidivrl
stos
jno
dec
mov
fcmovne
es
dec
mov
jg
fnstenv
out
clc
or
jns
jmp
mov
mov
subl
mov
loope
push
cwtl
out
and
adc
inc
adc
inc
and
filds
dec
dec
je
pop
mov
inc
sbb
mov
adc
idivb
das
jne
inc
add
jne
mov
inc
xor
cmc
add
cmp
mov
mov
inc
and
cwtl
sbb
int
fistpl
out
dec
cs
push
outsb
push
adc
push
hlt
ljmp
mov
xchg
vpacksswb
pop
sbbl
rcll
mov
lcall
mov
jb
roll
adc
jecxz
inc
repz
fistps
jle
mov
stos
jne
push
inc
rcll
fistpl
and
push
xchg
fs
jnp
push
dec
mov
outsl
push
outsl
shlb
and
mov
dec
mov
xor
outsl
gs
sbb
mov
jmp
int3
add
xchg
imul
fsubrp
xor
fwait
das
mov
cmp
adc
or
xchg
arpl
push
inc
inc
fs
lcall
sub
mov
push
in
lret
loope
push
sub
jmp
sbb
fidivrs
xchg
mov
test
outsb
mov
push
mov
sbb
fucomip
jg
jp
fnstenv
stos
jne
cltd
nop
sbb
mov
iret
test
cmp
imul
dec
jle
repnz
jg
pop
jle
cmpb
into
outsl
hlt
int3
xchg
and
es
dec
in
test
in
jne
repz
push
or
loop
incl
mov
jp
push
call
cmc
cmp
sub
int
mov
jns
cltd
adc
lcall
dec
mov
xor
add
cmp
jae
movsl
and
jg
and
mov
imul
sbb
pop
jg
jmp
or
js
inc
dec
lods
mov
sub
cld
push
popf
and
cmp
jle
jle
cmp
xor
loope
mov
sti
add
sub
sarb
mov
lock
incl
inc
push
adc
cmc
addr16
repnz
out
mov
mov
test
adc
mov
or
sti
test
pushl
add
cmp
stos
lock
sub
xor
cwtl
outsb
mov
jg
decl
shrl
mov
or
xchg
add
add
test
ljmp
iret
push
inc
lahf
sarl
pop
pop
mov
lods
cmpsb
into
pop
jns
stos
pop
stos
inc
loope
ljmp
in
test
sbb
andb
and
inc
sbb
ficompl
sub
xor
int
gs
ljmp
loopne
push
cld
imul
xor
sarb
adc
fildll
aaa
dec
sbb
sub
mov
dec
inc
and
inc
repnz
inc
rol
mov
sbb
jle
subl
cmp
outsb
xor
mov
cld
cwtl
mov
loope
adc
loopne
and
jbe
sub
lea
jb
jg
daa
and
pop
mov
mov
mov
cmp
jg
insb
lahf
inc
cwtl
cltd
xchg
movsl
or
leave
push
xor
wbinvd
lgs
cmp
or
aad
or
cmpb
fbld
into
sbb
mov
sub
lods
push
lcall
outsl
mov
sbb
in
ss
filds
inc
add
sbb
call
lahf
pusha
je
aas
mov
mov
in
dec
rol
cmc
cmp
xchg
inc
subl
bound
adc
pop
call
add
sub
cmp
push
or
jecxz
clc
mov
ficoms
scas
push
xor
or
lcall
aam
push
maxps
js
loopne
sbb
add
mov
loop
iret
jbe
sbb
sub
mov
or
repnz
jg
and
sbb
lcall
orb
mov
and
pop
loop
cltd
sbb
inc
or
add
inc
or
rolb
stc
and
shlb
int
xchg
pop
ljmp
dec
adc
ss
loopne
daa
cmp
mov
decl
push
push
pop
subb
cmc
jg
repnz
ret
inc
xor
aaa
pop
or
enter
out
lcall
dec
movsb
je
add
mov
cmpsl
pop
or
hlt
rolb
jle
sub
lods
andl
faddl
mov
xor
cmp
nop
dec
cli
clc
mov
push
js
loopne
dec
xor
sbb
push
ret
decb
push
push
mov
inc
pop
jp
icebp
add
sbb
push
dec
xchg
sbb
test
es
jno
cmp
les
lcall
mov
fadds
push
or
into
repz
fcomip
js
dec
dec
or
push
aad
push
dec
adc
sahf
push
orb
pop
fs
push
insb
or
hlt
mov
xchg
mov
call
lock
popf
mov
adc
xor
and
pushf
jno
pop
sbb
mov
add
dec
xor
ret
enter
mov
sti
outsl
add
daa
inc
mov
bound
adc
mov
pop
aam
sub
or
mov
leave
and
or
mov
pop
and
test
clc
xchg
xor
add
xor
push
jne
fsqrt
roll
pop
sahf
or
inc
push
jo
mov
ficompl
mov
ljmp
lock
mov
cmp
test
inc
mov
test
sub
cltd
orb
rolb
adc
loope
dec
xor
push
sbb
pop
mov
push
sbb
arpl
sub
outsb
inc
cmpb
or
imul
dec
out
mov
rorl
adc
jecxz
add
jae
add
aam
mov
push
add
aas
xchg
adc
dec
sbb
and
pusha
mov
add
fisubs
mov
sub
loop
and
fisubrs
xor
sbbb
pop
pusha
sub
loop
mov
fcomps
fldl
pop
in
adc
mov
and
out
mov
fcomps
adc
cmp
inc
adc
std
out
stc
or
or
loope
or
dec
add
mov
xor
and
cli
add
sub
cmp
jnp
xchg
adc
aam
or
insl
jecxz
mov
jbe
leave
scas
add
jns
clc
push
adc
ss
sub
adc
cmpsb
jb
dec
hlt
rcrb
fdivrs
add
lret
xor
lret
adc
pop
and
lcall
lea
adc
and
dec
xchg
out
and
int
add
std
dec
mov
jg
push
xor
cmp
dec
push
and
add
test
lret
adc
xchg
jae
jmp
sbb
pcmpgtd
jl
and
das
adc
aam
inc
hlt
shll
sub
xor
xor
mov
sub
out
cld
dec
jge
xor
push
or
jnp
lds
sub
push
adc
dec
and
push
add
adc
pop
and
adc
sub
inc
push
adc
insl
callw
fcomps
jnp
lds
outsb
xor
or
std
sbb
cmp
outsl
or
negb
sbb
dec
nop
mov
orb
iret
daa
mov
sbb
repnz
aas
into
mov
icebp
or
sbb
jnp
enter
push
mov
sbb
xor
pcmpeqd
xor
adc
out
jle
jbe
cmp
mov
dec
add
sahf
andl
cld
add
jno
or
outsl
aaa
and
outsl
adc
lock
xlat
push
bound
into
ja
inc
lea
and
roll
movlps
fistps
sub
rolb
clc
push
dec
pop
xor
push
mov
xchg
orl
ljmp
pop
imul
xchg
mov
stc
test
nop
stc
loopne
inc
xor
aaa
sub
sbb
cmpsl
mov
das
cmp
ret
out
nop
movsl
pushl
nop
call
rorl
mov
andl
aaa
icebp
jg
out
mov
cltd
and
fisttpll
xchg
mov
in
decl
lea
lahf
ret
and
adc
sbb
shlb
dec
cmpsl
push
jge
adc
inc
inc
dec
adc
cmp
incl
pop
test
adc
sbb
fcmovb
add
push
call
decl
inc
jmp
pop
inc
dec
jo
addr16
int3
dec
sbb
pop
mov
jnp
lret
loop
add
ret
mov
ljmp
pop
add
enter
jno
sbb
cmp
xchg
sub
fnsave
sub
xchg
outsl
jo
fwait
ljmp
xor
xlat
add
dec
in
sbb
push
ljmp
cwtl
lahf
jnp
inc
add
cltd
jmp
cmp
sub
ret
add
adc
decl
shrl
sbb
hlt
push
xlat
mov
jo
subl
and
adc
jg
and
mov
pushl
push
imul
push
out
xchg
sti
test
inc
addl
cmp
ret
pop
inc
inc
into
mov
xchg
leave
cmp
jecxz
sub
push
dec
mov
mov
fistpll
push
mov
in
movsl
mov
push
ret
lret
incl
xchg
mov
push
mov
jns
jmp
jecxz
js
jp
xchg
dec
leave
decl
and
das
cmc
cmp
in
pop
rolb
cmpsl
notb
sub
inc
pop
inc
sahf
negl
dec
nop
in
pushw
mov
xchg
cmp
or
adc
jle
lret
push
outsl
inc
scas
daa
xor
outsb
icebp
push
out
shr
push
ret
rcrb
lahf
loope
das
sub
orl
cmp
xchg
and
xor
inc
or
inc
jl
ljmp
and
enter
cmpl
mov
sbb
sub
add
cmp
shlb
das
sub
pop
and
fbld
pop
aad
adc
test
in
pop
add
fincstp
lea
add
test
in
push
and
in
mov
add
sar
xchg
push
jnp
jb
add
jb
aaa
sub
std
out
lods
in
xchg
mov
daa
xacquire
aaa
cli
mov
mov
clc
andb
inc
mov
fsts
icebp
mov
sti
je
daa
leave
fnsave
sub
fwait
movsl
aaa
call
outsl
pop
jle
xchg
mov
mov
xchg
addr16
xchg
cld
add
cwtl
pushl
dec
xchg
jmp
jecxz
lret
cmpl
ret
insb
stos
adc
icebp
clc
ljmp
inc
scas
movsb
adc
mov
sub
push
fbstp
lret
lahf
insb
pop
jge
lcall
jg
clc
dec
cmc
lds
out
jl
xchg
adc
rolb
outsl
fdivr
or
and
ljmp
xchg
jno
push
sbb
fmul
mov
xchg
call
test
test
push
arpl
push
stos
and
push
insb
ljmp
xor
mov
and
mov
decl
ljmp
arpl
icebp
ljmp
push
jo
and
out
push
dec
jo
test
or
into
je
std
mov
outsb
cs
xlat
jl
sti
dec
push
push
dec
inc
aas
pop
stc
inc
sar
dec
test
sti
loop
scas
mov
mov
subl
cld
jp
mov
cmc
lods
and
cld
or
cmp
incl
call
dec
sbb
xchg
lods
and
mov
rcll
mov
in
mov
imul
inc
dec
lret
jbe
inc
mov
cld
dec
dec
ds
repnz
add
jne
jno
mov
jg
enter
mov
inc
add
dec
in
pop
test
mov
dec
les
cmp
sbb
add
shrb
shlb
pop
test
mov
push
mov
mov
inc
jp
into
stos
and
fisubrs
incb
int
je
mov
pop
fmull
clc
or
fistpl
xchg
jg
insb
xchg
stos
inc
sub
pop
inc
sar
jg
fildll
lea
nop
cmc
add
loope
or
mov
vcvttps2dq
or
das
lock
not
push
and
adc
stos
loope
add
pusha
jle
std
or
aaa
loope
imul
cmpsl
cmp
push
add
push
mov
xor
lock
mov
dec
aas
test
push
adc
stos
dec
or
outsb
movswl
or
shrl
jo
xor
cmp
nop
and
bound
mov
movsl
sub
nop
fildll
mov
dec
push
scas
aam
testl
jmp
mov
aas
cmpsl
sub
inc
cli
jmp
faddp
mov
push
lcall
repnz
add
xchg
dec
test
pop
clc
mulb
cwtl
fs
incb
add
xchg
add
aam
or
out
jo
pop
jp
or
xor
dec
icebp
loopne
mov
mov
int
movsb
ret
sbb
xchg
in
add
inc
cld
or
pushf
cmp
push
sub
inc
mov
mov
ljmp
gs
scas
mov
jae
outsl
addr16
aas
dec
mov
add
mov
sbb
xor
xchg
sbb
mov
push
scas
xor
xor
push
pop
fnstcw
add
jo
or
out
test
les
cwtl
mov
frstor
idivl
xlat
aas
or
rcrl
jmp
mov
cmp
popf
outsl
inc
mov
gs
xor
pushf
sbb
adc
fimuls
mov
frstor
xchg
or
mov
mov
push
add
add
sbb
mov
mov
lret
mov
add
and
xor
jbe
inc
aam
shll
add
add
xchg
add
and
into
jo
jge
sbb
sbbb
cmp
loop
cmp
and
ds
lods
test
orb
jae
sub
mov
push
call
push
loopne
mov
cmp
sbb
mov
xor
fiaddl
adc
rcr
out
push
notb
pop
xor
aaa
cmp
in
push
clc
adc
test
les
jns
movsl
lds
mov
cmpsb
stc
add
add
mov
sub
xchg
xchg
cmp
sbb
mov
shl
mov
rcll
mov
xor
pop
add
stos
push
adc
lods
add
inc
sbb
xor
mov
repz
aaa
inc
xor
repnz
and
ret
cmp
sbb
or
xchg
je
negl
push
outsl
mov
fbld
pop
in
int
shl
aam
pop
inc
sbb
fisttps
movl
arpl
pop
int3
popf
clc
sub
test
push
adc
or
in
movsb
insl
jge
sub
xor
lock
mov
inc
lahf
push
dec
push
movsl
movsl
sub
int3
in
mov
push
fdivp
push
adc
jae
lahf
mov
andl
pop
push
fiadds
aas
push
scas
or
dec
loop
sbb
add
jmp
adc
arpl
aas
icebp
jecxz
and
sbb
mov
icebp
icebp
sub
fidivs
sbb
roll
add
pop
jl
inc
pop
push
cmp
dec
add
imul
mov
lds
repz
stos
dec
outsb
stos
addb
add
nop
out
jo
add
aas
rorb
jp
jnp
dec
pop
pop
dec
movsl
ficoms
in
pop
push
fcoml
repz
cmp
jb
xor
jmp
ret
movsb
or
push
jle
scas
pusha
jo
aad
in
addl
pop
test
stos
push
js
mov
mov
rol
mov
clc
into
rolb
sub
mov
shr
push
subl
xchg
push
out
sbb
mov
arpl
mov
ret
fs
sbb
inc
les
rcrb
out
inc
sub
or
push
and
cs
jge
daa
fnstsw
mov
out
sar
lea
sub
loope
mov
inc
sbb
or
sub
mov
push
cmp
subl
mov
xabort
and
dec
mov
loope
push
xchg
add
push
add
adc
aaa
cmp
add
and
mov
mov
or
and
mov
push
xor
mov
sub
dec
mov
adc
adc
xor
scas
adc
out
repz
or
inc
jb
fs
cmp
je
pusha
iret
adc
mov
push
mov
sbbb
shl
pop
ret
fsubrp
adc
or
and
ucomiss
pop
dec
lahf
ficompl
pop
and
and
add
in
or
mov
sbb
sub
sbb
ds
jmp
lods
fwait
xor
adcl
js
sbb
inc
mov
inc
push
mov
inc
pop
fildll
adcl
jmp
test
jne
cmp
mov
addb
fbstp
int3
imul
adc
sbb
testb
cs
ret
ret
in
mov
in
into
and
repz
xor
xor
lret
pop
jg
mov
out
adcb
adc
mov
jmp
xor
xor
push
inc
stos
scas
add
sbb
dec
in
icebp
jno
bound
or
cltd
iret
mov
dec
adc
test
sbb
scas
add
push
fcoms
add
aad
dec
and
adc
mov
bound
out
hlt
adc
adc
and
sub
in
pusha
ret
leave
out
mov
fucomp
in
cmp
into
icebp
cmp
dec
xchg
push
and
test
push
ss
jge
dec
add
sbb
testl
bound
xor
dec
inc
dec
loop
les
and
arpl
ret
in
pop
out
jno
outsb
inc
and
dec
fiadds
daa
push
inc
fwait
aad
notb
fdivr
and
inc
jle
or
or
or
pop
xorl
test
fdiv
push
mov
not
ficoms
push
push
movsb
push
sar
shr
in
adc
sti
jae
pop
mov
cmp
adc
xor
fstpt
sbb
cmp
into
lcall
pop
testl
mov
das
aad
in
adc
sbb
call
je
mov
dec
movsl
loop
cmp
ja
clc
cltd
pop
and
inc
dec
adc
iret
pop
cmpsb
sub
in
fnstsw
xchg
mov
push
and
xchg
sbb
addr16
dec
add
jp
fmul
sub
jle
mov
loop
sbb
xor
pop
js
pop
sub
mov
jecxz
pop
dec
adc
sub
add
jecxz
lret
xchg
fsubr
arpl
adc
fisubrs
cmp
adc
in
sbb
fadds
jnp
mov
inc
push
jae
xchg
mov
adc
xor
or
sub
xor
lea
test
stos
mov
ret
sbb
cmp
push
ljmp
pop
addb
shrb
mov
ljmp
sti
or
in
fwait
pop
add
adc
imul
add
add
jmp
mov
mov
sbb
sub
mov
aam
aas
subl
xchg
rcll
push
sti
hlt
pushf
and
push
cli
sbb
cwtl
shr
add
test
mov
enter
clc
es
mov
popf
lock
jle
stos
pop
out
scas
or
push
scas
sarl
les
jo
pop
cld
add
clc
sbb
push
jnp
mov
xor
imul
cmp
cs
pop
adc
pop
inc
dec
lahf
dec
jge
sahf
or
xchg
pop
ljmp
pop
popf
mov
out
dec
push
mov
out
inc
repnz
cld
xor
and
cmp
add
pop
das
xchg
jle
or
lcall
inc
mov
mov
or
inc
sbbl
ret
adcb
jb
push
fdivl
test
pop
repz
notl
pop
inc
and
mov
gs
call
mov
push
sbb
repz
and
insl
pop
cmp
cmp
xor
push
push
mov
loop
loop
js
or
or
mov
pop
lret
xlat
in
pop
xchg
fcomi
in
sub
ret
mov
push
in
jp
cmp
jbe
add
and
cmp
push
fiaddl
dec
stos
adc
jno
cmpsb
call
lods
add
push
add
inc
xor
js
push
hlt
inc
mov
sbb
rclb
lods
pop
mov
mov
insl
push
ret
sub
ret
fxch
in
and
mov
cmp
sub
inc
xchg
repz
aam
and
mov
lret
das
xchg
inc
pushl
loopne
pop
mov
pusha
add
and
adc
ret
jne
adc
mov
push
or
mov
loopne
call
and
lret
out
sarb
idivb
push
pop
mov
adc
add
nop
imul
add
sbb
mov
push
push
push
xchg
hlt
adc
xchg
sbb
sahf
cmp
ja
xchg
push
ja
xor
cwtl
or
inc
shll
addb
add
sbb
std
shll
dec
mov
or
mov
mov
dec
mov
ret
xchg
xor
add
mov
dec
sbb
outsb
push
stos
das
inc
aam
rolb
in
push
fadd
sbb
or
and
pop
sbb
and
mov
mov
sbb
fistps
xor
cwtl
pop
cli
xor
es
pop
mov
xor
outsl
push
test
add
add
out
loop
dec
and
out
aas
xchg
cs
push
and
mov
or
xchg
inc
nop
rcrb
or
js
fcoml
fwait
stos
sbb
clc
mov
xchg
cwtl
add
sub
dec
pusha
out
and
movsb
xorb
mov
fildl
pushf
inc
xor
outsb
cmp
jae
call
and
call
test
push
push
xor
add
test
ja
jb
sar
dec
xchg
ljmp
and
push
mov
pop
arpl
pusha
jbe
sbb
fidivl
mov
add
jle
fsubrp
popa
sub
cli
js
mov
adc
fldl
adc
out
xlat
or
sub
mov
dec
dec
pop
cmc
jns
or
mov
out
mov
lcall
test
adc
dec
test
sub
in
xchg
jp
ficompl
ret
adc
fnstsw
xchg
push
add
aad
jp
add
mov
aaa
sub
mov
test
or
clc
cmc
dec
and
ja
jecxz
xchg
pop
fidivl
jl
add
dec
pusha
sub
shl
fs
dec
enter
movsb
ss
mov
mov
or
lock
pop
arpl
test
inc
mov
lcall
jmp
loopne
xor
fisubs
ss
shlb
lcall
xchg
inc
icebp
sbbb
mov
rol
add
mov
sub
mov
cmp
and
jae
add
and
pushf
jnp
negb
adc
mov
sbb
repnz
add
xor
or
bound
mov
data16
sbb
fdivr
repz
jb
popa
sub
sub
std
lret
or
and
outsb
sbb
push
mov
popf
decb
ret
mov
inc
dec
scas
or
loop
fmull
cli
fisubrs
pusha
sub
in
test
xlat
xor
lock
out
sub
cwtl
cwtl
outsl
pop
xchg
push
les
adc
pop
jecxz
and
fbstp
mov
repnz
fwait
aam
sub
es
stos
fisubrs
cmp
xchg
dec
cmp
pop
into
aam
cwtl
mov
cmp
popf
sbb
outsl
cli
negl
or
xor
fiadds
and
in
fiaddl
cmp
add
sbb
pop
inc
add
inc
pop
lret
xchg
sbb
and
pop
push
xor
and
inc
and
dec
scas
icebp
mov
sub
or
stos
inc
rep
dec
or
out
jle
xor
sbb
ja
rcrl
xor
rcl
or
out
lods
mov
repz
shlb
or
int3
test
jns
aaa
ret
shll
and
push
cltd
add
pop
stos
stos
sbb
add
ficompl
inc
iret
cmp
scas
int
dec
inc
rolb
shl
fimull
jmp
mov
outsl
cmpb
mov
or
aam
jle
loope
sub
sub
mov
lods
js
cmp
or
repz
mov
xlat
inc
mov
faddl
idivl
cmp
aad
cmp
nop
nop
test
mov
sub
and
outsl
mov
sbb
mov
jecxz
xor
mov
mov
or
roll
push
in
adc
icebp
adc
push
mov
sub
sub
aad
push
inc
bound
cmp
adc
sar
dec
hlt
cmpb
pusha
and
shlb
fwait
push
cltd
mov
cmp
pop
stc
push
pop
cmpsl
int3
xchg
mov
out
inc
or
repz
cmp
je
sti
nop
jle
sub
add
aaa
arpl
inc
dec
push
xor
adc
adc
lock
and
fsubs
pop
mov
push
cmp
ss
js
ja
xchg
lret
add
movsl
jecxz
cmc
sbbb
test
shrb
pop
jne
fcompl
jg
pop
subb
and
xor
adc
iretw
scas
push
sbb
les
jecxz
add
call
repnz
sarl
int3
out
push
je
add
xor
and
repnz
jne
add
mov
mov
cld
sbb
xlat
insb
pop
popf
loop
mov
hlt
ljmp
and
fsubrs
sbb
out
mov
daa
out
xchg
lahf
popf
jmp
clc
adc
xchg
loopne
or
repz
push
ss
fwait
loop
enter
xchg
pop
std
cmp
mov
ja
negl
xor
aad
and
xor
repnz
movsb
push
and
inc
insl
fadd
push
or
sahf
push
inc
sbb
and
lods
cmpsb
cmc
and
mov
xor
add
mov
add
mov
push
icebp
lods
add
leave
push
mov
test
decl
mov
inc
xlat
subb
je
loope
incb
mov
adc
add
rol
push
ds
and
push
mov
shl
adcb
push
mov
sbb
es
stos
push
lcall
sub
fcoml
adc
testb
outsl
ret
push
jo
ljmp
rcr
call
cld
icebp
ret
xchg
pop
adc
insl
adc
cmc
sub
inc
xor
idivl
sar
aad
imul
call
push
mov
incl
xchg
jge
in
mov
fiadds
adc
call
cli
mov
leave
lea
stos
or
in
inc
dec
or
insl
mov
in
test
popa
shll
int3
mov
push
nop
cwtl
xor
jo
adc
adc
jg
pusha
nop
ficoml
js
mov
pop
xchg
enter
test
cld
cmp
inc
or
ljmp
add
mov
std
cwtl
push
cmpsb
fdivrl
push
adc
push
in
shr
pushf
sbb
pusha
mov
fistps
fmuls
sahf
pop
loope
xlat
jbe
pusha
movsb
cmc
popa
stos
add
fld
mov
outsl
jmp
jne
jae
aas
testl
pushf
and
and
push
adc
dec
cmpsb
sbb
cmp
in
xchg
je
mov
add
or
sahf
dec
sbb
mov
clc
call
shlb
add
jb
data16
loop
jg
or
incl
icebp
cli
test
lods
xor
pushf
or
or
rcrl
sbb
scas
pop
out
xor
orl
pop
stos
lods
scas
jg
inc
add
fdivr
sub
dec
imull
mov
rclb
out
and
cmp
pop
add
push
adc
and
sbb
mov
ret
sub
add
in
pop
xchg
inc
rcrl
in
lds
sahf
adc
aad
mov
mov
dec
in
add
loop
lock
lret
sbbb
jmp
mov
fidivrl
clc
adc
inc
add
not
jg
sbb
or
js
mov
loop
sbb
sbb
andb
adc
int
inc
les
andl
mov
rorb
push
push
nop
rcll
sahf
sub
rclb
ss
add
aas
adc
ret
das
leave
es
pop
add
dec
push
push
add
les
data16
mov
rorb
xor
add
mov
and
add
add
xor
or
inc
xor
push
js
xor
add
rol
popf
inc
add
rolb
stc
adc
rolb
mov
pop
adc
mov
xor
mov
inc
inc
add
fnstenv
push
adc
cmp
mov
les
or
fisubl
jns
int
icebp
in
or
cmp
mov
adc
push
cmpsb
adc
call
or
and
les
adc
or
jnp
dec
push
cld
mov
repz
push
aaa
adcb
and
mov
sbb
push
testl
movsb
ret
outsl
imul
cmp
cmp
fbld
mov
dec
je
push
dec
push
test
dec
pushf
adc
sub
clc
adc
or
xchg
icebp
orl
inc
rorl
jnp
imul
mov
scas
inc
fwait
cmp
loopne
inc
mov
or
jae
ljmp
pusha
sahf
xchg
rolb
hlt
addl
call
mov
mov
push
inc
push
add
mov
clc
xchg
int
mov
aaa
fwait
mov
or
jns
dec
cmp
mov
mov
incb
mov
jnp
and
and
aam
icebp
iret
push
test
push
push
push
popa
mov
jge
sub
cmp
add
ja
adc
push
aaa
in
adc
pop
ss
outsl
xor
and
xchg
mov
xor
pop
add
mov
cltd
jg
xchg
pop
outsl
xchg
fwait
mov
sbb
adc
push
add
scas
sub
jbe
decl
cld
mov
or
imul
out
and
dec
pop
sub
loopne
or
inc
out
pushf
inc
ror
call
shlb
sub
dec
testl
lret
rolb
xor
adc
bswap
jo
fnsave
xor
pop
sar
or
loopne
popa
push
pop
in
xor
cmpsb
mov
out
inc
jnp
push
std
mov
push
jge
hlt
jle
out
sbb
pushl
mov
or
mov
int3
xor
ret
out
cld
loopne
inc
adc
mov
mov
add
scas
push
xchg
cwtl
mull
leave
mov
sbb
hlt
aam
sub
call
lea
jg
cs
sub
add
push
jg
outsl
rolb
xor
add
outsl
cld
test
xor
jl
bound
sub
leave
cwtl
jmp
xor
mov
jbe
add
sbb
and
add
das
xchg
decb
mov
test
add
mov
lcall
xchg
lds
lea
push
and
jg
sbb
adc
mov
gs
addr16
mov
adc
xor
push
addr16
pop
scas
inc
icebp
xor
mov
aam
add
mov
clc
lock
mov
mov
stos
rolb
dec
push
jns
test
mov
add
pop
sbb
scas
mov
pushl
inc
scas
sub
cmpsl
in
ljmp
loope
in
popf
push
outsl
sar
pop
jge
dec
jb
pop
xchg
dec
out
inc
lret
mov
fs
mov
mov
ret
sets
jmp
loope
jo
jb
rorb
and
and
es
inc
add
xor
pop
cmp
imul
mov
fsubl
and
test
fcmovbe
lds
pop
pop
xchg
in
ja
mov
std
cmp
into
mov
or
pop
iret
cmp
loop
sbb
pop
sbb
mov
hlt
jecxz
pop
xor
testl
mov
or
js
adc
scas
mov
or
mov
pop
push
mov
enter
and
jecxz
sub
push
or
sbb
and
inc
or
jge
fcomps
mov
sahf
add
push
dec
orb
mov
pop
adc
enter
jmp
jg
jmp
outsb
sbb
add
in
lock
xor
push
sahf
iret
lock
test
xor
hlt
add
push
sbb
lds
ficomps
add
add
jge
or
mov
loope
inc
aam
xchg
jge
push
aad
cld
out
stos
jmp
scas
addb
cmp
xlat
pop
cwtl
lock
sub
add
das
hlt
sbb
mov
add
xchg
push
lds
and
gs
fs
sub
xchg
mov
mov
jg
mov
inc
in
add
cltd
mov
mov
in
lock
jnp
insl
add
testb
test
in
add
cmp
pushl
shl
filds
rorb
pushf
mov
mov
fildl
std
jmp
pop
and
fs
rol
ljmp
adc
add
mov
adc
mov
mov
dec
test
dec
and
sti
jmp
rol
nop
push
push
std
pusha
add
fwait
pop
fldl
shr
mov
adc
add
std
pushl
xchg
xor
mov
fnsave
dec
lds
fildll
jb
mov
add
add
pop
pop
jl
fmuls
clc
fmuls
jo
cmp
dec
push
adc
je
aas
dec
call
sbb
inc
and
ljmp
adc
shrl
insb
lea
loopne
je
inc
std
or
mov
sub
cmp
lret
adc
sub
clc
stc
cwtl
jmp
mov
push
push
ret
incb
pushf
ret
popf
jg
pop
mov
mov
ret
sub
cs
jp
stc
pop
inc
ljmp
sahf
mov
movsl
mov
add
pop
dec
cmp
jge
lcall
adc
out
psubw
xlat
icebp
test
cmpsl
in
or
sub
inc
add
or
xchg
dec
aaa
ds
adc
xchg
sbb
cmp
jg
pushf
add
mov
test
and
sub
mov
hlt
inc
mov
inc
es
int
insb
lds
add
fwait
adc
sbb
fucomip
incl
xchg
icebp
mov
adc
pop
mov
mov
clc
jmp
inc
addb
repz
mov
dec
xor
pop
fiaddl
sub
outsl
mov
lahf
fs
out
add
pextrw
push
fcmovne
decl
or
and
out
enter
std
jmp
inc
xchg
add
jne
loope
leave
or
push
and
dec
insl
and
add
call
and
inc
into
ret
cmp
orb
fstpl
sbb
popf
ljmp
mov
sub
cmp
out
add
pop
add
xchg
mov
xor
add
sub
loopne
hlt
add
pushf
leave
out
inc
mov
or
iret
roll
movsb
xor
sbb
bound
lcall
lret
pop
je
out
fadds
test
inc
cmpsb
or
mov
mov
arpl
movsl
or
add
stos
xchg
pop
lock
js
sti
mov
ret
lret
jno
dec
mov
fsubrs
xor
pop
test
bound
xchg
mov
idiv
mov
ja
adc
xor
sbb
lock
jmp
push
add
movsb
stos
leave
jecxz
xchg
mov
sub
jmp
mov
jg
mov
jne
mov
rorl
mov
push
mov
mov
idivb
xchg
add
jbe
push
or
or
mov
mov
ljmp
addr16
insb
push
jl
fstp
cli
jmp
dec
sub
jo
sub
sbb
mov
outsb
pop
scas
push
sub
push
les
lods
xchg
sbbl
pop
mov
pavgw
xor
mov
inc
insl
pop
push
jns
in
lea
pop
dec
inc
pop
rorl
je
aaa
in
dec
push
je
lock
add
lcall
push
and
jge
inc
adc
mov
mov
sahf
jle
decl
xchg
jnp
push
mov
aaa
cli
call
mov
mov
in
test
clc
or
add
xchg
icebp
mov
aaa
pop
push
notb
adc
cltd
mov
xchg
fldt
jp
mov
inc
stos
lret
rorb
pop
outsl
push
inc
test
shrb
mov
mov
cli
dec
jno
loopne
or
ja
decl
ljmp
mov
pop
pop
dec
adc
mov
fsubrs
pushl
mov
jge
cwtl
or
jnp
fidivs
mov
mov
sub
jecxz
sbb
push
lods
push
mov
mov
in
pop
or
mov
adc
adc
mov
or
popf
lret
data16
sbb
pop
add
push
or
adc
aam
xchg
jmp
aam
add
xlat
gs
or
ss
pop
addr16
rdtsc
xchg
jecxz
jbe
jp
lods
cmc
call
jle
sub
fisttpl
or
inc
sub
clc
outsl
adc
pop
idivl
fnsave
scas
or
xchg
test
pushl
push
mov
and
lock
out
mov
sahf
push
sbb
std
mov
notl
cmc
cs
and
xor
sbb
sbb
outsl
fists
sub
shll
jne
xor
inc
jmp
inc
aaa
inc
faddl
ret
xor
jbe
loopne
jmp
daa
mov
push
lods
sti
sub
ret
xor
xchg
cld
fists
cmp
dec
cmpsb
pop
cmc
push
cmc
ss
adc
adc
insb
mov
jge
inc
ror
shr
movsl
stos
inc
fmul
add
jg
sub
jp
sar
jns
aaa
and
jp
mov
mov
inc
xor
push
jnp
add
pusha
mov
jb
movsl
inc
pop
aaa
or
pop
int3
dec
ljmp
int3
cmc
popa
or
mov
sub
or
jbe
xchg
fdivrl
int3
rorl
ret
aaa
and
sub
gs
test
push
imul
std
mov
xchg
pop
sub
jmp
sub
push
je
cmc
stc
ja
and
das
inc
or
call
and
and
xchg
sub
or
rcll
loop
or
call
sub
mov
xchg
lods
jg
jg
and
xor
repz
cmc
jno
mov
das
inc
lcall
push
xchg
adc
in
xor
sti
mov
adc
or
add
aad
mov
loop
xor
jb
es
loop
add
inc
add
dec
mov
or
mov
aam
inc
stos
jo
xor
ficomps
pop
les
push
jg
cmpsl
adc
ss
andb
loop
add
xchg
clc
and
std
lret
outsb
add
and
adc
or
cld
mov
add
lea
adc
loope
ds
sbb
lods
out
popf
aas
shll
insb
popa
pusha
jl
push
shll
repnz
jg
repz
and
pushf
xchg
jnp
cmpl
rolb
dec
inc
and
dec
push
cmc
sub
incl
jg
and
inc
jg
and
test
insl
sub
jl
ret
mov
xlat
lret
mov
shlb
cmp
lcall
pop
ds
sub
sub
lret
and
and
cli
fildl
jge
jbe
jp
pushf
jbe
xor
cwtl
mov
cs
adcl
and
adc
test
lret
bound
xor
add
lock
fs
loopne
mov
clc
insl
bound
imul
add
xor
xor
cmp
inc
lods
pushl
aas
xchg
clc
push
sub
pop
daa
add
sbb
stos
out
or
ss
jecxz
pop
push
sbb
mov
inc
cwtl
push
std
lcall
in
adc
into
faddl
jecxz
mov
mov
arpl
add
lcall
in
leave
adc
sub
dec
adc
push
push
ret
loop
leave
xchg
ljmp
lahf
out
cmp
and
jns
xchg
popa
test
rolb
ljmp
push
inc
sub
loop
test
rcrb
shll
xor
mov
add
addr16
ficoml
pusha
pop
and
jmp
shlb
adc
and
xchg
sbb
outsb
out
xor
cmp
jge
push
sub
sub
test
fidivl
dec
movsl
dec
test
notl
sbb
dec
and
or
test
insl
std
xchg
cmp
add
hlt
pushl
aaa
mov
mov
inc
not
inc
xor
sbb
mov
pop
sub
or
sbb
in
lcall
stos
in
das
cmp
xor
fbstp
dec
rcrb
pop
loop
dec
cmp
sub
mov
test
fldl
mov
jbe
mov
jmp
add
xchg
fdivr
inc
hlt
inc
cltd
cli
pop
cmp
cmp
les
das
lcall
into
lock
insl
test
ficoms
lods
xchg
loope
mov
ret
xor
inc
sbb
js
mov
rcrb
mov
repnz
leave
clc
xlat
or
add
adcl
push
rclb
push
divb
das
outsl
xor
mov
ficomps
je
push
xor
sti
das
icebp
div
in
into
fiadds
cli
jle
js
add
add
xor
aas
push
add
sbbb
mov
fwait
shl
pop
sub
stos
xchg
rolb
notb
push
jae
jmp
out
std
fucom
movsl
outsb
movsl
out
add
fcomi
repz
and
mov
pop
mov
ss
frstpm(287
pop
mov
repz
xor
les
xlat
insb
into
fstl
fnstsw
mov
or
xor
xlat
jne
cmpsl
das
pop
jp
mov
loope
mov
js
imul
test
fmuls
xor
push
rcrb
sub
mov
xchg
scas
add
outsl
ljmp
and
cmp
push
mov
xchg
cmp
xor
cld
rolb
ror
push
lahf
sbb
mov
rolb
outsb
xchg
adc
cmp
sbb
pop
add
sbb
dec
pop
mov
mov
mov
dec
mov
inc
xor
cmp
inc
mov
in
mov
ja
add
cli
pop
sub
adc
mov
add
fildll
fimull
cwtl
nop
and
fidivs
or
sub
and
cmp
in
mov
movsl
mov
pop
lds
mov
enter
imull
mov
jmp
mov
imul
das
add
imul
arpl
push
cmpsb
or
push
xchg
lods
stc
add
sub
in
in
or
les
sti
daa
and
push
jmp
imulb
leave
push
inc
xchg
adc
loop
fcomp
and
jb
push
aas
add
mov
sbb
sub
dec
and
sub
dec
pop
scas
popf
lock
jl
cmp
bound
xchg
inc
sub
into
pushf
xchg
js
test
aaa
fs
mov
mov
movl
xchg
pop
inc
cwtl
lret
add
pop
inc
push
insl
outsl
das
push
push
jo
repnz
in
fbld
jb
inc
mov
cmp
dec
std
mov
jno
jg
adc
mov
pop
sbb
dec
cmp
test
add
cmpsl
mov
and
or
mov
stc
jae
xchg
pop
loopne
lea
inc
imul
icebp
leave
xor
aaa
pushf
cli
movsl
test
dec
popf
outsb
bound
sub
jecxz
ja
and
fs
inc
adc
das
je
jg
fisubs
in
jp
sub
test
clc
or
jno
xchg
shll
push
sub
push
pop
mov
jg
jno
add
cmpsl
and
je
pop
jb
out
pop
testl
sub
fnsave
aad
cmp
gs
cmp
inc
js
jg
lock
dec
pusha
xor
sub
mov
jl
movsb
mov
push
std
jg
decl
adc
dec
add
xchg
add
pop
ret
adc
xlat
incb
inc
stos
ds
pop
loopne
mov
idiv
fildll
into
cmp
test
push
sbbl
jb
dec
dec
fldcw
dec
into
repnz
jb
aaa
and
dec
aad
xor
xchg
xor
xchg
das
dec
loope
decb
add
imul
test
adc
cli
jg
add
in
aas
je
sub
cmpb
iret
fcoml
mov
call
and
xor
add
andl
xchg
and
push
loope
cld
push
or
sbb
xchg
mov
jle
test
test
pushf
rorb
stos
xchg
shlb
sub
push
dec
cld
push
ljmp
mov
jb
xorl
lcall
pop
cli
cmpsl
repz
sti
negl
sbbl
icebp
pop
mov
xchg
or
cmp
or
pop
pop
pop
sub
sbb
push
pop
cmpsb
test
sbb
mov
jae
std
int3
dec
push
imul
pop
or
test
clc
or
and
and
sbb
pop
cli
inc
sbb
push
mov
loope
pop
xchg
sub
sbb
cltd
int3
decl
jbe
sub
in
adc
push
jmp
mov
xor
aaa
push
fnstenv
loope
push
ja
iret
inc
jne
xchg
dec
sbb
mov
outsl
mov
sbb
add
imul
imul
sub
outsl
ret
loope
sub
add
xor
xchg
shlb
jnp
pushf
enter
and
and
mov
sbb
fs
mov
inc
popa
loopne
cli
out
lcall
push
pusha
daa
jb
mov
lret
mov
jg
fnsave
shlb
clc
mov
sti
jmp
enter
loope
cs
pusha
jne
je
xor
push
mov
jp
decb
lahf
and
inc
into
pop
dec
lock
xchg
push
popf
sbbb
push
fcmovu
icebp
xorb
int3
leave
jns
outsl
call
aad
add
decl
aad
pop
stos
sbb
sbb
ret
jb
lds
cmc
add
mov
dec
dec
out
cmp
mov
dec
cwtl
push
pop
int3
fcomip
inc
and
hlt
ljmp
sub
fbstp
inc
sub
test
test
scas
lcall
ret
std
das
xor
loop
sbb
lret
scas
xchg
mov
outsl
in
call
dec
imul
int
stc
in
hlt
jl
lea
mov
sbb
jne
das
icebp
push
movsl
std
mov
adc
call
mov
insl
mov
popa
sub
xchg
sub
mov
jecxz
and
add
test
pushf
adc
call
fstps
stos
idivl
cld
and
cmp
decl
test
inc
sti
adc
push
inc
nop
add
xorl
stos
js
imul
int
mov
push
cmpsl
sub
pop
scas
adc
icebp
cld
lock
and
add
xor
mov
sbb
jg
sahf
pop
pop
adc
mov
add
and
and
lock
lock
adc
into
pop
push
das
sbb
cmp
mov
lock
mov
mul
shrb
cmp
or
nop
jmp
push
or
xor
call
xor
push
jg
loopne
test
mov
jne
push
in
mov
imul
pop
cmp
pop
jp
movsb
cmpb
inc
daa
mov
inc
sbb
orb
jl
mov
clc
cmp
inc
mov
nop
lret
inc
pushf
push
fmull
or
call
sub
inc
mov
cmp
inc
add
add
sarb
cmp
and
inc
pop
rcrl
pop
sar
stos
inc
das
pop
jnp
roll
std
cli
rorb
nop
and
xchg
add
sarb
mov
add
mulb
mov
add
add
mov
decl
pop
testl
gs
sbbb
fdivl
sub
sbb
pushf
mov
lock
andb
inc
nop
and
andb
inc
add
xlat
sub
push
push
sub
lock
push
or
aad
xchg
movsl
mov
add
fdivr
orl
inc
inc
inc
sub
xchg
pop
cmp
and
adc
test
dec
test
ljmp
mov
test
mov
fists
loopne
out
mov
sub
dec
lretw
nop
jg
mov
dec
shlb
mov
cmp
sbb
jge
add
xchg
xchg
sbb
or
movsb
inc
test
pop
fsubs
mov
xor
aad
fwait
in
pop
or
fdivp
in
inc
xchg
mov
outsl
xor
mov
xor
inc
test
push
aas
out
pop
adc
es
dec
push
mov
mov
daa
fnstcw
and
das
mov
xchg
dec
js
hlt
push
or
lock
add
repnz
ret
jne
or
mov
or
ljmp
popf
and
xchg
sub
jl
jnp
jmp
push
addl
int
les
mov
push
test
xchg
sbb
movsl
outsb
push
int3
pop
sahf
jne
cld
outsl
xor
mov
pop
leave
shll
test
or
in
imul
mov
sbb
inc
jne
test
popa
sbb
xor
and
pop
js
inc
pusha
ret
adc
push
add
adc
mov
mov
cmc
pop
add
or
cmp
adc
test
das
mov
add
push
mov
inc
aaa
shrb
mov
dec
mov
add
xchg
fstpl
outsl
lock
repz
lds
xchg
icebp
insb
insb
loopne
dec
cld
add
aas
mov
pop
rolb
outsb
push
ret
cmp
imul
or
sahf
ds
les
test
mov
inc
push
cwtl
pusha
adc
mov
lret
es
cld
jle
pop
add
xchg
mov
lods
sbb
xchg
jbe
dec
push
cwtl
in
clc
aad
dec
addl
push
in
call
xor
test
mov
je
ja
in
fidivrl
adc
shlb
mov
xor
add
mov
pop
add
enter
mov
mov
mov
sub
mulb
xchg
outsb
and
push
loopne
xor
and
mov
jl
ljmp
fisttpl
mov
inc
dec
jle
faddl
dec
cmp
push
aam
ret
mov
mov
jno
stos
pop
and
dec
push
das
mov
fs
pop
pop
or
pop
loopne
call
repnz
inc
add
jo
in
sbb
and
xchg
mov
cwtl
shlb
add
add
inc
add
xor
jmp
mov
sub
imul
inc
and
shrl
rcrl
push
stc
inc
add
call
and
into
cld
adc
mov
xor
xchg
es
and
dec
inc
dec
clc
negb
push
std
lock
sub
inc
mov
cmp
into
adc
add
mov
out
xorl
clc
pop
mov
dec
cld
pop
push
cwtl
call
mov
sub
pop
adc
lock
add
mov
mov
cmp
push
outsb
mov
outsl
js
ret
or
dec
mov
xchg
mov
adcb
add
loopne
jno
ret
ss
xchg
inc
push
aam
sbb
scas
fwait
xlat
js
sub
fnsave
pop
rcr
dec
add
test
push
test
test
mov
out
cmp
dec
rorl
in
adc
inc
inc
rcrl
clc
ljmp
cmp
loopne
add
arpl
or
pop
add
or
sub
push
and
jl
pop
hlt
add
lock
ss
shl
and
out
push
aam
loopne
adc
push
sub
cmpsb
add
in
sub
push
jmp
push
gs
push
imull
sub
sbb
loope
mov
adc
add
push
dec
push
add
adc
aaa
in
lea
sarl
fsubl
push
in
inc
and
insb
inc
pop
scas
pop
scas
lcall
push
hlt
xor
not
xor
jge
xchg
ret
jo
repz
push
add
and
je
xchg
lretw
and
insl
insl
iret
lods
loop
adc
jo
fincstp
addw
lret
jmp
inc
and
scas
and
loopne
cmpl
popa
push
stos
sbb
aas
in
arpl
movb
sbb
lods
sub
orb
cmp
mov
sti
adc
inc
pop
cmp
rorl
add
cwtl
mov
jg
cld
xchg
add
mov
std
lods
aas
daa
jne
pop
lcall
push
insb
scas
or
jp
repz
std
dec
or
add
xchg
jbe
or
adc
sbb
pop
cmp
push
stos
inc
xchg
cmp
stos
mov
cs
cmc
add
dec
sbb
lret
push
jmp
loopne
pop
mov
fstl
sub
pop
repz
xchg
cmpsb
dec
jl
leave
add
add
cli
arpl
add
jg
fistpll
xchg
push
out
rolb
mov
mov
and
scas
shrl
fldl
xchg
pop
xor
cmp
dec
mov
cld
aas
cmp
mov
add
push
adc
cmp
adc
clc
jb
std
and
loop
pop
out
bound
lahf
test
xchg
push
sub
inc
add
sub
int3
and
aas
stc
das
cs
cmc
std
loop
aam
mov
popa
sbb
push
xchg
jg
or
in
jg
out
movsl
xchg
pusha
add
shlb
lods
imulb
in
jns
sbbl
and
sbb
mov
mov
push
hlt
or
inc
and
mov
pop
rorb
dec
das
aam
cmpsb
sub
mov
sahf
out
je
call
inc
divl
nop
add
push
loopne
and
ss
xchg
andb
inc
loope
inc
std
movups
test
pop
mov
jg
incl
cmp
cmp
shrb
push
popl
inc
call
push
cmp
add
cmpl
test
not
pushf
add
adc
lret
sub
adc
stos
add
outsl
mov
mov
sbb
iret
xor
mov
add
bound
dec
inc
cmc
cmpb
test
sub
sbb
jp
add
mov
and
xor
ss
push
jmp
repz
sbb
or
push
mov
sub
pop
shlb
dec
fistl
mov
les
adc
pop
pop
mov
or
orl
or
fisubs
into
or
sub
jmp
sahf
loopne
cmp
aam
lcall
pop
outsl
testl
mov
jg
jg
adc
lods
lret
xchg
fidivs
add
icebp
xor
jl
movsb
add
out
adc
jge
in
cmp
jl
adc
adc
xchg
daa
xor
and
inc
or
cmp
lock
lock
adc
dec
ret
popl
ret
ret
cltd
jg
add
mov
jnp
nop
dec
das
inc
pop
fstps
inc
dec
jbe
jge
bound
add
imulb
stc
repz
cvtpi2ps
ret
cmc
sub
pop
leave
incl
inc
pop
nop
shl
add
mov
test
mov
test
daa
sbb
rcl
pop
sub
daa
outsl
sarb
push
add
dec
inc
movsb
rcll
push
add
lahf
add
cli
nop
stc
xchg
jp
jg
pop
sbb
test
sbb
js
fistps
cmp
sub
stc
jb
ljmp
stos
sub
add
pop
sub
pop
adc
das
sbb
out
xchg
pop
aas
cmp
sub
scas
lock
jns
xchg
sbb
cmpsl
add
fldl
cmpsl
dec
pop
mov
inc
inc
test
jns
jmp
and
add
idivb
push
int3
out
sbb
pop
xlat
adc
fwait
loopne
es
push
shll
xor
aas
or
cs
inc
cmp
cmpb
push
fstpt
mov
fidivrl
in
sbbb
into
aas
enter
cmpb
pop
pop
sub
shll
sub
repz
data16
push
cld
add
xor
iret
xchg
inc
push
das
jno
pop
inc
negb
lods
jb
cmp
stc
inc
dec
inc
add
test
aaa
bound
inc
and
mov
mov
js
cs
mov
aaa
pop
aas
inc
loopne
lahf
rcrl
mov
negb
add
cmp
push
pop
sbb
out
cli
lcall
in
loop
pushf
xchg
in
cwtl
xlat
fcoms
push
inc
or
sbb
loope
cmc
mov
jle
add
mov
lret
sub
inc
mov
pop
in
decl
dec
dec
outsb
pop
dec
and
aad
add
andb
sahf
inc
fisubrl
cmp
add
sub
sub
movsl
aas
std
ljmp
jl
adc
sahf
mov
xchg
or
and
pop
cwtl
in
mov
xchg
cmp
adc
loopne
fidivrs
lcall
xor
icebp
pushl
decl
mov
sub
bound
xchg
fstpl
push
imul
cmp
fldcw
lock
and
notb
cltd
mov
test
test
ljmp
lret
sahf
cmpsb
and
movsl
fcom
arpl
sbb
push
jmp
insb
cld
in
inc
in
jns
test
sbb
leave
sbb
fcomip
call
int3
add
divb
inc
cmp
sarl
adc
ret
fucomip
lods
cltd
xchg
xor
shll
hlt
mov
push
sbb
jns
sbbb
push
and
dec
sbb
pushl
insl
ffreep
je
shll
mov
faddl
mov
xor
xor
inc
cmp
jmp
mov
fs
lds
xor
adc
push
add
sbb
addb
fdivs
sbb
and
andb
mov
adc
push
pop
test
sbb
sahf
idivl
xchg
pop
cmp
push
dec
cmp
and
xchg
dec
popa
sbb
jno,pn
jp
push
rorb
inc
mov
add
in
movsl
mov
decl
sbb
mov
sub
lret
mov
cld
sub
cli
add
jae
dec
xchg
push
xchg
push
adcb
add
ljmp
or
ret
icebp
xchg
gs
mov
xor
cmp
mov
xor
iret
mov
fsubrs
push
push
inc
enter
push
mov
push
repz
push
cs
add
cmpsl
lods
repz
or
pop
and
sbb
es
sub
xor
push
cmc
sub
push
or
les
lock
sbb
xchg
out
mov
lds
add
xlat
insl
movsb
aam
or
inc
pop
lcall
add
cwtl
shlb
lods
addb
push
xor
xor
push
mov
mov
add
mov
push
sarl
outsl
adc
xor
xor
cltd
and
xchg
fildl
pop
add
pop
enter
push
add
or
cmp
fsubs
pop
les
das
adc
adcb
stos
mov
or
add
cmp
cmp
insl
xor
mov
or
rolb
mov
dec
xor
andb
pop
or
fcmovnbe
cmp
insl
add
test
test
cmp
test
sbb
xor
mov
inc
adc
cs
pusha
and
nop
loope
mov
push
and
adc
mov
cmp
stos
mov
jae
pop
add
and
inc
xor
sub
out
idivb
hlt
mov
hlt
in
push
hlt
adc
mov
sub
jno
rol
xor
adc
cmp
push
pushf
fmull
ret
arpl
gs
sti
fwait
or
fwait
cmp
loopne
or
sub
adc
pop
rorl
je
jecxz
std
test
mov
add
sub
xor
mov
cwtl
add
push
shrl
inc
xor
push
icebp
add
inc
xchg
dec
inc
add
mov
and
adc
dec
jo
mov
ficoms
add
ja
jno
mov
adc
xchg
popf
xor
jnp
les
insl
lea
xor
pop
sub
sub
mov
mov
adc
mov
mov
add
and
es
shll
movsb
dec
jg
inc
sub
sbb
cmp
sub
pop
lods
mov
jg
cli
adc
mov
inc
jp
push
aam
inc
inc
inc
push
dec
xor
sahf
mov
addb
and
insb
aaa
jmp
bound
imulb
adc
jg
test
sub
jp
ja
lds
and
and
jno
call
iret
lods
outsl
push
loop
fisubl
call
testb
sub
testb
into
inc
sarl
xchg
aam
pop
inc
stos
ret
gs
mov
lods
mov
xor
adc
add
dec
int3
int3
int3
or
jp
jnp
or
dec
aam
push
call
lds
inc
out
push
test
mov
sub
sbb
nop
fwait
adc
into
mov
cmp
mov
sub
jbe
jmp
xor
stc
testb
add
inc
out
adc
movsb
push
iret
xor
fbld
les
or
imulb
es
or
in
sbb
and
bound
inc
jmp
adc
arpl
xchg
pop
rcrb
rolb
inc
pop
push
and
pop
int3
mov
out
fldenv
dec
mov
jns
loop
mov
js
loope
xor
pop
pop
mulb
xchg
mov
jecxz
aas
mov
and
call
inc
insb
jnp
push
push
pop
push
jecxz
adc
loope
push
gs
mov
std
mov
call
pop
inc
jae
int3
dec
inc
in
mov
fadds
inc
push
inc
aad
test
sbb
ja
dec
outsl
js
xchg
outsl
xor
sub
call
aad
sti
rcrl
int3
jp
jne
aam
xchg
fcom
xor
jns
inc
xchg
jns
push
xor
push
lret
in
dec
inc
fs
mov
ss
jnp
subb
subl
cltd
and
push
push
lcall
mov
cli
gs
jp
xchg
out
and
movsl
add
add
sbb
mov
test
mov
push
jg
add
data16
and
shlb
push
test
mov
cmp
or
cltd
popa
xchg
mov
roll
mov
mov
mov
xchg
xor
rolb
inc
cli
push
add
adc
jno
inc
fmulp
jae
jmp
pop
repnz
sbb
hlt
or
mov
cmp
and
push
aaa
or
jg
lds
mov
or
mov
iret
jle
shlb
inc
subb
mov
mov
fs
cmp
sbb
cmp
cmp
jg
xchg
sub
inc
frstor
ljmp
pop
aam
pop
lds
sub
rcrl
fwait
call
sub
cli
call
sti
std
mov
xchg
mov
adc
lret
pushl
jns
push
mov
push
or
sub
fidivs
jle
jmp
pop
pop
and
pop
orl
sbb
adc
lahf
fisttps
pop
nop
adc
jg
lds
hlt
ret
and
aas
or
pop
add
test
sbb
call
mov
mov
inc
and
sub
xor
cs
ret
stos
iret
aam
bound
imul
nop
subb
pop
and
add
inc
mov
lret
jb
loop
pop
cli
lcall
adc
repnz
stc
cwtl
mov
mov
ss
movsl
fsubl
repnz
rcll
incl
cmp
scas
inc
mov
pop
or
popa
inc
in
loopne
ljmp
std
mov
mov
movsl
push
xchg
dec
push
jno
inc
xchg
pop
hlt
fists
popa
and
add
dec
add
cli
out
sbb
and
cltd
cs
pop
xlat
sti
mov
cli
in
repz
outsl
jno
js
fidivrl
notb
jg
or
sub
or
and
mov
and
jne
mov
sbb
pop
addr16
outsl
insl
mov
fstps
sub
sub
cmp
loopne
jge
nop
xlat
das
leave
add
jns
mov
ljmp
ljmp
add
pop
arpl
push
push
push
cmp
ljmp
std
xchg
in
cmp
cmpsb
inc
mov
out
lahf
mov
cmp
pusha
inc
or
or
sub
mov
or
mov
mov
pop
push
addr16
stos
sahf
icebp
lds
das
lds
jl
xchg
test
enter
aad
add
adc
mov
es
inc
push
mov
push
add
add
pusha
out
decl
rcrb
xorb
imul
arpl
outsl
inc
xchg
mov
inc
mov
xorl
pop
add
mov
and
sarl
es
call
pop
and
clc
push
sbb
add
fistpll
addr16
and
incl
cmpl
xlat
sti
xor
push
xchg
sbb
into
dec
ficompl
ljmp
mov
mov
adc
pop
loope
lods
insb
jg
inc
mov
int3
xor
or
incl
lock
rorb
scas
inc
in
mov
jns
sbb
das
pop
dec
or
xchg
mov
repz
mov
fs
or
mov
mov
xchg
ss
out
adc
cmpsb
incl
inc
xor
push
cmp
test
iret
into
push
psubd
ljmp
mov
dec
adc
out
xlat
mov
loope
pop
insl
mov
jl
enter
jno
loope
pop
push
pop
sbb
inc
jg
movsb
mov
inc
call
jnp
and
inc
decl
scas
sti
sbb
pop
xchg
rcrb
or
notb
aam
mov
iret
push
hlt
pmuludq
mov
pop
mov
xchg
pop
mov
and
scas
jle
adc
movsl
test
lock
jecxz
jg
jg
jne
xor
addl
and
mov
and
adcl
sbb
and
xlat
negb
adc
nop
lret
sbb
dec
pop
fmuls
jne
jb
jb
sbb
mov
lret
xlat
dec
cmpsl
inc
and
cld
adc
stc
mov
aas
xor
ja
sbb
adc
popa
mov
add
jg
push
sub
push
push
sbb
mov
push
or
add
ss
cli
ret
push
popf
loopne
mov
notl
stos
or
in
pop
mov
aad
dec
lds
das
sahf
push
cmc
push
sbb
cli
filds
or
xor
add
popa
js
or
test
in
cmp
test
repz
mov
fildll
add
roll
mov
shll
sub
push
ljmp
filds
push
mov
pop
ds
mov
push
inc
test
xchg
mov
sbb
mov
adc
adc
je
sti
inc
inc
es
xor
jno
push
or
adc
rolb
fistps
pop
insl
push
push
cmp
movsb
andl
aaa
mov
xchg
adc
je
xchg
add
mov
jg
in
arpl
adc
movsb
push
xor
dec
insb
rcrl
inc
xlat
mov
push
std
add
pop
mov
sub
addb
das
dec
mov
pop
mov
std
cmp
insb
cwtl
push
xor
cltd
add
rcrl
inc
sahf
mov
lea
mov
push
jge
cld
outsl
aam
iret
mov
gs
lret
push
movsb
add
mov
popa
add
or
aas
ret
movsb
pop
sub
cmc
inc
pushf
ds
cld
ffreep
sub
fldenv
sub
shlb
and
mov
push
pop
pop
das
hlt
icebp
sbb
xchg
mov
ljmp
movsl
and
adc
das
cld
or
dec
dec
cmp
add
fiadds
rcrb
xchg
inc
mov
push
cmpb
nop
mov
in
lea
jl
cmp
add
rolb
xchg
pusha
fistps
loopne
push
jb
mov
pop
push
pushl
mov
popf
out
sbb
call
push
inc
mov
mov
inc
inc
int
incl
shll
je
cmp
xorl
xchg
scas
rorb
mov
hlt
negl
ja
insl
lock
iret
xlat
ds
sbb
add
pushf
mov
sbb
jg
fidivrs
jo
aaa
sbb
dec
jg
xchg
orb
lret
jb
cmp
dec
xor
cmp
push
dec
dec
call
pusha
pop
jmp
sti
xchg
push
in
loopne
outsb
add
bound
fldl
movsb
mov
jge
aad
adc
sub
arpl
xor
ss
cmp
into
inc
out
jle
sbb
inc
adc
jp
and
sub
add
xlat
loope
pop
dec
idivl
js
lea
call
shl
fidivs
lods
pslld
lods
inc
inc
cmp
outsl
mov
jg
sub
push
test
inc
iret
lods
xlat
lretw
or
mov
stos
inc
fdivl
enter
jle
add
fistl
mov
pop
fisubl
fists
mov
sahf
push
dec
push
lcall
and
sub
sahf
rolb
in
sbb
call
add
pop
fisubs
mov
push
xor
idivb
lahf
fildll
and
les
call
decl
inc
ds
lods
xchg
stos
push
mov
mov
incl
leave
pop
imul
aad
fistl
ds
das
bound
fs
and
push
bound
popf
movsb
test
jns
xor
dec
xor
mov
arpl
testb
ret
loopne
sub
test
scas
push
mov
outsl
cmp
loopne
adc
rolb
mov
add
dec
cmp
outsl
mov
and
xlat
aam
mov
add
dec
cld
push
lret
cmpsl
sub
mov
ljmp
pop
loopne
outsl
int3
jecxz
daa
lret
cmp
jnp
mov
sbb
mov
in
adc
stc
int3
mov
dec
pop
xchg
jb
mov
push
loopne
push
adc
iret
popa
stos
enter
add
mov
cli
sbb
inc
jns
fnstsw
es
int3
fadd
dec
jnp
add
add
pop
cwtl
or
mov
dec
data16
daa
push
lcall
jg
ss
scas
xchg
outsl
adc
loope
mov
mov
cmp
xor
decl
out
adc
mov
scas
popa
lret
in
cmp
inc
dec
inc
jmp
fisubl
dec
shrb
outsl
std
or
or
cmp
jo
outsb
push
fdivr
outsl
std
jmp
fs
lea
and
rcr
or
cwtl
pop
xor
outsl
xor
xchg
fs
cwtl
xchg
xchg
aaa
sub
roll
jnp
dec
xor
decl
dec
not
loopne
icebp
andl
in
stos
pop
clc
outsl
mov
hlt
or
adc
dec
and
out
in
pop
xor
mov
test
push
sub
adcl
cs
xchg
scas
out
mov
and
pop
loopne
cmp
inc
mov
idiv
add
add
daa
ret
test
sbb
jle
and
loope
fistl
scas
and
jns
out
pop
outsl
je
jl
mov
cmc
insb
mov
arpl
mov
cmp
and
or
and
iret
mov
inc
xor
ret
mov
add
sbb
aaa
lods
into
pop
ret
dec
mov
push
test
or
xchg
mov
or
or
mov
insb
inc
add
popf
cli
add
incl
adc
pop
sbb
push
add
jb
mov
sbb
jp
fidivrs
lret
lods
pop
inc
dec
push
sub
jle
and
push
pop
xor
aad
mov
out
xchg
fbstp
push
stos
adc
int3
and
insl
adc
xchg
daa
decl
jg
repnz
movsl
pop
inc
sbb
jb
cmp
pusha
gs
inc
jns
outsb
dec
ds
test
mov
lods
fsubp
mov
je
mov
or
lret
cli
mov
and
sub
std
das
jno
imul
pop
mov
add
shlb
dec
sub
push
push
sbb
js
and
cmc
rorl
in
cmc
out
pop
fldl
jg
pop
out
cmp
lahf
sti
dec
sub
adc
jb
mov
lcall
jg
and
push
es
push
xchg
fsubrp
push
pop
mov
xor
push
out
mov
fisubrs
lahf
mov
xchg
pop
push
or
ss
and
lds
adc
xchg
cs
aaa
scas
add
daa
sub
add
stos
outsl
das
icebp
test
xor
mov
adcb
cld
aaa
mov
or
mov
pop
clc
scas
outsl
dec
fcomps
ljmp
push
mov
mov
mov
xor
mov
daa
and
in
add
icebp
inc
mov
cs
lods
incl
or
pop
push
mov
outsb
mov
outsl
sarb
aam
insl
js
lcall
les
jecxz
ljmp
mov
mov
outsl
cmp
or
push
scas
icebp
lret
cmc
mov
fstps
pop
pusha
push
int3
rol
popw
xor
xchg
mov
push
or
outsl
mov
and
xchg
push
stos
stos
cwtl
mov
lea
andl
mov
fstl
pop
or
dec
int3
add
test
cmc
mov
sahf
inc
adc
and
cmp
or
inc
mov
ret
dec
mov
add
push
add
pop
jnp
outsl
mov
cmp
fcmovb
ljmp
loop
sbbb
mov
push
xor
cmpsl
or
adc
or
and
out
pop
test
push
jg
jo
xchg
out
inc
mov
push
std
mov
or
ss
ss
pop
sub
or
sbb
or
std
fs
xlat
xorl
int3
inc
dec
adc
ljmp
xchg
xor
call
push
sbb
cmp
pop
and
add
int
push
addb
inc
adc
lahf
rcrl
sub
add
add
lods
outsb
jle
and
sub
psraw
jne
fwait
add
or
push
xlat
add
jg
mov
mov
ret
adc
test
lahf
pushf
sub
sbb
inc
or
fistpll
loopne
addps
pop
cmp
and
ds
xchg
inc
pop
and
enter
push
cs
jbe,pt
fidivrl
adc
rol
add
hlt
ljmp
mov
mov
xchg
push
xchg
jl
push
or
cmpsl
int3
outsb
aaa
add
inc
jl
adc
xchg
add
fisttps
movsl
insl
lods
data16
jg
or
dec
sbb
adc
call
or
push
mov
fsubl
mov
repz
shlb
imul
xor
fcmovnb
adc
psrld
jb
into
daa
jl
jg
jg
fists
add
icebp
cltd
clc
sahf
inc
mov
rcll
inc
rorb
jl
icebp
pop
cmp
pop
pusha
cmp
lret
cltd
sar
mov
je
cwtl
inc
push
mov
outsb
out
inc
jg
mov
adc
rorl
jecxz
and
stos
orb
sbb
lock
out
fwait
dec
jl
imul
cmp
ret
xor
sub
clc
add
mov
mov
mov
pushl
xchg
and
push
jecxz
jne
xor
dec
mov
jmp
hlt
pop
incl
stos
movsb
scas
insl
mov
jmp
jno
jl
aas
stc
push
pop
fimuls
and
lret
call
jno
scas
adc
xlat
push
sbb
ljmp
cld
stos
sub
cmp
gs
mov
call
inc
movsl
mov
into
test
test
das
mov
pop
shlb
mov
xor
xor
sbb
cmpb
sbb
push
mov
and
addr16
cmc
pop
clc
and
pop
fnstsw
dec
dec
cmpsl
or
add
stc
adcl
popa
fld1
mov
xor
add
hlt
incl
je
push
ss
add
add
mov
mov
pop
add
lds
icebp
std
jmp
outsl
cld
cwtl
mov
jb
jbe
inc
adc
mov
sbb
pop
ret
and
mov
clc
repz
shrb
inc
xor
mov
add
jb
loopne
jb
enter
out
mov
and
pop
mov
sub
test
popf
dec
cmp
inc
add
adc
loopne
neg
mov
pop
inc
mov
lea
inc
in
in
cltd
xor
adc
or
jle
out
xchg
adc
push
push
nop
sbb
or
notl
inc
inc
dec
mov
sub
sub
sub
and
test
out
adcb
dec
xor
pusha
jb
mov
jnp
lock
fnstenv
rorl
sub
aad
fiadds
mov
aaa
mov
fstpt
xchg
sub
jb
jp
and
shrb
push
cmp
push
jge
lock
data16
push
mov
adc
das
jbe
sbb
jmp
mov
fs
push
mov
xchg
add
push
and
sub
jmp
jecxz
jns
or
nop
mov
rclb
inc
mov
imul
pop
push
loopne
ret
xor
sbb
mov
jo
lcall
out
aas
outsl
adc
pop
xchg
and
pop
in
adc
sarl
jbe
mov
sbb
push
pop
repz
cmp
sub
push
aad
dec
adc
ficompl
aad
cs
jne
xor
mov
popa
adc
dec
adc
sub
shrb
sbb
mov
mov
sub
or
fidivs
loopne
add
dec
adc
push
jns
ljmp
sbb
cli
das
pop
push
and
pushf
jmp
push
jns
mov
repnz
dec
sub
mov
fdivrs
pop
daa
faddl
stos
ss
adc
and
loopne
jge
mov
enter
fsubl
and
jg
dec
adc
aad
es
cmp
cwtl
mov
cmp
fiadds
lret
and
mov
inc
leave
xchg
lods
adc
xchg
adcl
fcoml
daa
push
rorb
rcrl
and
inc
arpl
add
loope
mov
jle
jo
lret
and
cmp
pop
sub
push
shr
mov
mov
mov
push
inc
push
inc
push
loopne
rorl
rorl
xor
xlat
sbb
fildll
sub
fisubrs
rolb
idivb
xor
jg
das
shlb
lcall
inc
int3
gs
push
sbb
cs
or
and
dec
pop
jno
mov
popf
adc
add
mov
testl
ret
mov
mov
adc
enter
add
sbb
xor
mov
jo
cmc
xchg
fldcw
mov
pop
jne
push
lock
jno
fwait
mov
and
push
push
call
cmp
xor
or
xchg
fldl
pop
lock
add
add
cld
cmpsl
cmp
in
pop
jg
jo
push
xor
fdivs
pop
dec
in
mov
enter
or
xorb
sbb
adc
loope
adc
jbe
add
repnz
cmp
and
ret
xor
in
adc
push
lock
into
mul
xor
or
outsl
adc
daa
jns
popa
adc
test
adc
mov
xchg
stos
js
add
insl
arpl
mov
sub
fwait
mov
lret
and
movsb
cmc
ret
sbb
xor
mov
fmuls
sub
ret
xchg
sub
xchg
add
cmp
inc
insb
fcoms
mov
adc
mov
cmp
cltd
mov
or
stc
lcall
mov
clc
sbb
aas
mov
xor
mov
punpcklbw
xchg
hlt
xor
xchg
jno
jo
andb
xor
adc
sub
pop
lock
xchg
cmpl
movl
gs
inc
out
pop
es
adc
add
and
mov
fdivrs
dec
dec
dec
fmuls
sub
lods
push
call
int
arpl
push
inc
jmp
push
lret
push
mov
enter
push
push
push
rcll
in
data16
inc
sub
daa
and
push
repnz
mov
daa
stos
mov
hlt
push
pop
fstp
pop
adc
xor
lcall
cmp
pop
nop
outsl
jmp
and
pop
rorl
cmpsl
mov
push
push
cmpsl
mov
rcrl
orb
xor
sbb
push
rolb
and
out
add
shrb
pop
movsb
sarl
jnp
mov
cli
xor
adc
dec
call
movsb
xchg
mov
shl
xchg
es
inc
cmpsb
aaa
mov
out
cltd
stc
loop
insb
sbb
push
les
and
dec
pop
ss
pushl
cmp
repz
add
push
adc
sbb
call
jp
add
push
mov
cld
add
pushf
inc
inc
decl
and
loopne
adc
jae
in
xchg
xchg
sub
pop
or
jmp
clc
and
xchg
int3
shlb
mov
inc
inc
fnstsw
call
arpl
roll
xchg
mov
add
icebp
sbb
ljmp
cmpsb
push
inc
andl
dec
sbb
sahf
jno
xchg
mov
add
cli
insb
mov
or
jne
or
mov
push
pop
outsl
test
jae
sbb
stc
mov
lcall
testb
lret
dec
sbb
cmp
inc
mov
adc
loopne
mov
in
jl
arpl
or
das
test
scas
aam
jg
adc
pop
loopne
enter
xlat
add
add
stos
sub
jmp
mov
ret
pop
sbb
mov
filds
mov
call
aad
xchg
mov
cmp
adc
adc
decl
inc
cld
outsl
add
or
mov
sbb
pusha
push
into
mov
mov
cmpsl
rep
dec
sub
jno
insb
pop
testl
dec
popa
mov
or
and
lahf
addb
fisttps
js
jl
aad
cmp
sub
mov
insl
or
loopne
push
out
popa
jo
daa
mov
adc
mov
mov
cmp
andb
clc
cli
lcall
incl
les
cli
add
xchg
inc
fldcw
inc
incl
icebp
sahf
jle
pop
outsb
call
or
cmpsl
jecxz
std
adc
decl
dec
imul
add
mov
loopne
xor
sbb
push
hlt
and
sbb
jo
jecxz
mov
mov
arpl
dec
jle
inc
cmp
test
jg
xor
pop
push
or
cmpsb
xchg
inc
pushl
mov
repnz
xor
mov
push
xor
mov
pop
lock
mov
fimuls
cwtl
jecxz
jbe
cs
inc
gs
mov
lahf
test
mov
push
jp
fbld
push
or
mov
xchg
sub
dec
cltd
cli
cmc
scas
mov
lcall
xchg
or
test
movsb
es
daa
add
push
sar
out
push
inc
and
imul
pop
hlt
mov
jg
and
xchg
incb
pop
xchg
dec
adc
xchg
nop
mov
cld
ficoml
jg
mulb
ds
daa
arpl
sbbb
jle
loope
dec
fldl
popa
lcall
cld
repz
ljmp
inc
outsl
push
cmpsl
xchg
xor
jae
imul
jo
mov
or
sub
shr
fsubr
test
popa
and
stos
mov
push
shll
add
lcall
loop
xlat
fistps
jb
movsb
xchg
xchg
jns
mov
xchg
inc
loope
push
pop
jne
or
pop
push
jecxz
aam
je
test
cli
lcall
cmp
cmp
xor
nop
mov
aam
pop
aaa
or
cmp
and
push
fcom
inc
mov
incl
and
jns
negl
cmp
sti
fbld
mov
xchg
mov
xchg
ret
arpl
cwtl
push
xchg
push
and
je
imul
std
das
jnp
imul
xor
xor
mov
push
jb
mov
rol
or
loope
cmp
dec
jb
cmp
cmpsl
or
dec
outsl
pop
incl
mov
sub
ljmp
adc
jb
dec
mov
fs
xchg
sub
addl
inc
sti
adc
xchg
aaa
push
adc
int
sbb
sub
repnz
test
and
mov
in
arpl
inc
push
xor
push
mov
jle
aam
dec
lcall
xchg
incl
sub
mov
xchg
aad
xchg
dec
scas
sub
cmpl
pop
mov
push
std
mov
das
into
dec
xchg
test
xchg
add
enter
inc
inc
jmp
out
mov
mov
sub
movlps
xchg
mov
push
cmp
or
pushl
sub
inc
insl
cwtl
test
cli
test
out
adc
nop
test
sub
sti
les
mov
mov
mov
clc
hlt
movsl
or
add
insb
sbb
cmpsb
push
icebp
inc
xor
orb
mov
je
ja
sarl
cli
lcall
call
xchg
mov
add
rcll
pushl
ret
insb
shrb
inc
fisubs
loop
inc
out
xlat
adc
stos
jg
adc
adc
inc
adc
ds
rclb
loop
inc
imul
dec
sub
test
pop
or
jp
test
adc
orl
mov
and
lcall
aad
movsb
and
and
clc
outsl
icebp
pop
pop
orb
inc
addl
mov
movhps
bound
fcomip
sbb
push
dec
add
sbb
cmpsl
mov
ljmp
lea
rolb
add
aas
mov
mov
xchg
adc
and
mov
shrb
ret
inc
xor
push
mov
sbb
inc
incl
fistpl
mov
or
jnp
aaa
js
inc
inc
lea
mov
cli
fcomip
arpl
adc
pop
add
inc
jo
sbb
out
mov
dec
lea
idivb
xchg
cmp
push
and
stos
sub
sti
rcr
adc
fisttps
xchg
mov
andl
jb
mov
push
fs
mov
pop
jae
add
and
idivl
sub
or
push
mov
sahf
mov
clc
mov
mov
subb
std
inc
or
repnz
xor
mov
scas
adc
add
fildll
xchg
lea
ja
xchg
add
pop
fidivl
mov
sub
and
lock
dec
incl
pop
roll
and
push
adc
in
mov
ret
xor
fiaddl
adc
push
inc
and
mov
pusha
or
add
lea
adc
popa
add
jg
aad
xor
adc
stos
dec
inc
cltd
call
xlat
cli
jle
push
sbb
jmp
push
icebp
mov
and
loope
sbb
inc
aaa
dec
push
ljmp
in
int
andb
scas
pop
pop
adc
aam
add
clc
outsl
push
gs
iret
or
sub
adc
cli
dec
fsts
or
jno
fcoml
clc
or
sub
add
mov
sub
cmc
cld
cmp
push
imull
lret
push
or
addb
fbld
xor
xchg
fs
mov
icebp
pop
pop
shll
std
lret
das
sti
or
inc
sbb
jmp
pop
dec
lret
jecxz
mov
add
dec
cmp
mov
js
inc
mov
pop
fistps
dec
lock
add
or
pop
adc
or
addb
add
lock
lds
es
push
push
jo
pop
test
sbb
cwtl
inc
inc
xor
mov
mov
sub
mov
bound
or
clc
insl
or
mov
dec
inc
stc
sahf
add
lock
fdivrl
xchg
outsb
scas
out
sub
push
loope
ljmp
add
data16
or
sbb
mov
ret
mov
inc
ficoml
push
icebp
pop
sbb
add
xor
lock
rol
cmp
js
mov
stc
inc
jge
xor
test
dec
mov
adc
ja
inc
xor
out
xchg
cwtl
insb
mov
inc
dec
lds
call
nop
add
mov
cmpsl
cmpb
int3
adc
cmp
push
push
push
mull
xor
add
outsb
xor
and
dec
or
cli
test
mov
add
xchg
jo
fcomps
roll
or
mov
mov
sub
sub
mov
movsb
xlat
mov
ljmp
divb
mov
test
jmp
fsubrl
pop
mov
into
mov
adc
push
dec
inc
or
pop
inc
jne
sarb
filds
sbbb
es
add
lods
stos
add
fisubl
test
push
sub
pop
add
xor
add
push
incl
adc
sbb
mov
push
sub
xorl
cmpsl
mov
std
ret
subb
shll
mov
cltd
xchg
lret
fiadds
push
dec
pop
push
or
sbb
adc
xchg
cwtl
loope
clc
divb
xor
pop
add
push
sahf
mov
icebp
xchg
imul
cmp
xor
push
js
cmp
and
test
fadd
add
push
sbb
and
bound
dec
xor
or
stos
sbb
iret
jl
mov
popf
test
mov
adc
loop
lcall
data16
and
pop
jbe
mov
push
pusha
sbb
lods
dec
lock
daa
sub
imul
adc
or
rolb
pop
inc
rorb
push
pop
or
adc
nop
shrb
push
sub
add
push
rcrl
pop
test
jae
adc
movb
aam
mov
or
push
hlt
lea
push
cs
lahf
mov
and
shll
lea
jae
imul
adc
loopne
lock
lret
hlt
clc
fwait
loop
iret
addb
pop
data16
mov
jnp
leave
pop
das
or
inc
jl
inc
sarb
pushf
mov
bound
subb
mov
sahf
push
or
add
add
adc
movsb
sub
and
mov
mov
jne
mov
bound
xor
repnz
cmp
and
lds
aaa
mov
outsl
cwtl
icebp
push
inc
jecxz
or
outsl
xchg
add
ds
dec
add
xor
or
cmc
or
and
std
dec
ss
dec
shll
test
cmp
imul
jbe
add
fldl
dec
cmp
xor
popa
lods
or
hlt
inc
lock
jle
cmp
insl
sub
arpl
rclb
and
adc
aas
pop
jp
fldenv
cmp
jl
adc
loope
adc
jns
loope
je
ret
adc
movsb
sub
movsb
daa
addr16
in
enter
inc
or
jno
cmp
push
add
lcall
adc
bound
xorb
ds
daa
adc
adc
push
test
data16
or
dec
into
add
sbb
adc
pop
dec
sub
mov
out
repnz
in
mulb
rclb
cmpsl
ja
call
pop
mov
add
adc
push
pop
push
push
rcll
add
and
and
jo
rol
dec
add
and
repz
dec
hlt
push
adc
and
adc
or
out
sbb
adc
adc
roll
inc
lret
push
jecxz
les
cmpsl
adc
inc
mov
je
std
cmp
sahf
mov
inc
shll
push
arpl
xor
outsl
add
mov
xchg
aad
cmp
and
imul
add
or
hlt
dec
pop
pop
xor
and
jno
xchg
lods
icebp
inc
in
mov
fimuls
enter
xchg
and
pop
jae
fsubs
jae
and
add
les
pop
ljmp
inc
nop
movsb
js
mov
pushf
out
gs
int3
xor
test
pop
pusha
roll
add
rorl
mov
push
or
rorb
push
jg
add
dec
add
jmp
aad
adc
push
pop
inc
lds
cld
int3
and
addr16
pusha
cmpb
fcompl
mov
out
shll
pushf
arpl
xor
mov
and
ljmp
jmp
les
jmp
pop
sarb
mov
add
mov
movsl
sbb
fwait
stos
ficoms
push
mov
adc
pop
inc
sbb
fcoml
push
inc
mov
and
jae
pop
cwtl
aaa
xor
lret
add
and
ljmp
pop
icebp
push
mov
outsb
hlt
ret
cmp
add
outsb
dec
push
pop
push
inc
sbb
push
daa
test
fidivrl
cmp
fdivrl
pop
out
xlat
mulb
xchg
cs
and
jecxz
pop
add
rcll
sti
dec
das
int3
pushf
sbb
pop
insb
es
dec
les
stos
inc
gs
jmp
sbb
adc
mov
addl
sub
sbb
xchg
pop
bound
addr16
das
pop
dec
fcmovu
pop
inc
and
cmovge
inc
xorl
add
mov
lret
cwtl
addl
clc
dec
inc
mov
outsl
sub
bswap
mov
adc
pop
cmc
adc
sub
push
sub
mov
xchg
sub
push
xor
sqrtps
inc
cmpsb
adc
les
inc
pop
pop
adcb
orb
push
lcall
popa
fisttps
pop
inc
pusha
ret
je
shlb
sbb
add
pop
lock
stc
xchg
dec
test
xlat
dec
pop
jne
fnstenv
add
out
insl
inc
lret
sub
lcall
iret
cmp
jo,pt
cli
jg
jg
jo
xchg
jl
movsl
arpl
repz
mov
jle
or
stc
add
push
mov
lea
pop
push
and
psubb
sub
add
es
xor
cmp
mov
das
and
mov
pop
push
xor
add
sbb
scas
nop
int
xor
adcb
cmpsl
xchg
pop
lret
subl
or
sub
or
std
ljmp
jg
sbb
cmp
fmulp
fidivrs
fildll
daa
call
iret
mov
jo
xchg
jno
adc
insl
ror
jmp
sbb
mov
les
out
and
inc
in
add
lea
shll
mov
in
mov
lods
insb
and
sub
mov
mov
jno
ljmp
pop
lcall
or
movsb
jns
adc
and
inc
inc
shl
mov
xor
rcr
jle
dec
es
inc
mov
lods
cmp
cmc
jecxz
or
movsb
or
pop
xor
mov
pop
adc
sbb
std
lcall
push
or
mov
push
xchg
jp
test
bound
lds
jne
ror
cltd
ja
lcall
shlb
push
dec
sub
inc
adc
lds
inc
stos
fisubs
xor
popa
jmp
loopne
in
xlat
or
sbb
andb
fildl
pop
add
shlb
daa
add
rcr
daa
add
pusha
nop
lds
jne
xor
sbb
outsl
mov
inc
fwait
mov
adcb
or
add
mov
lcall
push
test
xchg
sbb
cmpsb
jne
and
imul
hlt
inc
je
decl
or
enter
fcomps
lea
pop
and
sbb
pop
stos
loopne
xchg
jecxz
cld
add
and
inc
ficomps
outsl
push
cld
dec
mov
pop
lret
add
jno
xor
inc
cmp
sub
ds
mov
ret
std
shll
in
xchg
pusha
add
les
lret
push
out
add
xchg
pop
jbe
movsb
jmp
adc
dec
add
loop
dec
repnz
hlt
push
lcall
and
into
cmp
inc
mov
es
or
sub
and
aas
push
sub
addr16
enter
and
inc
bound
and
mov
sbb
add
pushf
inc
sbb
mov
inc
sbb
aaa
dec
dec
inc
lret
cmp
and
push
les
cmp
jne
xchg
andl
shll
dec
adc
or
jnp
stos
mov
cld
hlt
rcrb
xor
fmulp
outsb
mov
aam
enter
shl
push
pusha
push
loopne
data16
mov
push
cmp
cld
clc
movsb
push
xor
les
enter
fcomip
fcomip
jbe
mov
xchg
ret
mov
inc
ds
inc
int3
rcll
in
mov
cmp
adc
add
mov
cmovge
pop
push
jl
mov
mov
push
xor
sahf
cmc
es
int
int
or
outsl
adc
dec
xchg
cmp
sub
pop
es
sar
pop
imul
push
xor
adc
xor
jns
xor
and
sub
insb
cs
sbb
sub
imul
xchg
stos
into
push
xchg
fsubrs
notb
pop
rolb
adc
cmp
or
addl
sub
inc
adc
loopne
stos
call
add
js
std
lds
mov
mov
lret
scas
jge
sbb
mov
scas
test
pushf
js
out
int3
lea
add
rclb
aad
mov
rol
inc
repz
jge
mov
push
jg
movsl
loop
inc
add
les
cltd
lcall
adc
ja
stos
sub
test
orb
shll
or
ret
add
and
mov
imul
into
je
xor
and
shl
dec
rol
rol
mov
jmp
adc
fidivs
in
xchg
cltd
subl
rcl
sub
movsb
or
in
mov
adc
and
adc
movb
es
or
inc
jle
sahf
or
fnstcw
cmp
daa
aam
js
out
add
push
sbb
dec
ljmp
rclb
add
adc
xor
lock
icebp
enter
adc
dec
sahf
scas
sbb
popf
jae
push
pop
ret
fwait
push
rcrb
rorl
push
push
je
jmp
fs
and
inc
movsl
push
jmp
mov
and
je
pop
in
insb
sub
xchg
adc
loope
sub
pop
call
add
fisubrl
mov
and
push
sub
dec
inc
fsubl
lds
xor
lahf
in
pop
push
lret
jb
xchg
xor
or
sub
nop
stc
and
pop
mov
sbb
dec
fcoml
push
je
and
jae
out
add
pusha
jns
mov
add
add
adc
pop
je
hlt
ret
mov
add
fdiv
rcll
loope
cmp
or
loope
mov
mov
and
cmp
add
lcall
leave
mov
jb
scas
ret
xchg
rcrl
inc
or
inc
mov
or
inc
incb
adc
jb
aas
sbbl
js
mov
testb
jmp
loop
sbb
push
les
das
loopne
adcl
pop
shl
sub
lea
fwait
cs
into
mov
and
cmpsb
sbb
inc
bnd
cs
push
addr16
or
push
cld
ret
xor
ficoms
insb
add
inc
jbe
push
xor
sarl
xor
popa
mov
or
or
in
fcos
and
test
hlt
enter
lock
pop
adcb
mov
jecxz
movsb
imulb
add
xor
mov
dec
or
add
jns
fisubl
div
mov
add
push
fadds
jg
outsb
sub
push
sbb
sub
push
and
jmp
incl
or
xor
push
inc
pushf
ret
sub
mov
pop
sbb
or
out
xchg
in
push
mov
cmpsb
jmp
ljmp
icebp
push
arpl
xor
sub
add
cmpsb
in
test
mov
push
test
mov
in
jne
fs
xor
jmp
lea
jae
adc
arpl
jb
pop
decl
stos
int
xchg
inc
cmp
dec
sub
mov
jg
lret
pop
sub
sahf
mov
sbb
and
sbb
lock
shll
in
sbb
incl
mov
or
and
adc
inc
aad
cli
pop
cli
push
mov
incl
mov
jl
mov
cmp
sub
fsts
decl
cmpsb
lock
inc
loop
and
pop
push
xchg
cld
daa
gs
xchg
add
js
movsb
pop
pop
xlat
mov
add
inc
pop
jg
pop
stos
enter
ret
int3
in
jp
cmc
ljmp
ljmp
dec
xchg
insl
xor
mov
inc
pop
fildll
ljmp
ljmp
popa
jae
push
loope
clc
pop
add
dec
add
and
mov
pusha
mov
test
xchg
inc
cmpsl
fldl
repz
jo
mov
test
lock
xchg
dec
xlat
pusha
daa
movsl
sbb
clc
mov
jae
pop
insb
and
rclb
das
lock
out
jge
push
jbe
xor
icebp
mov
out
mov
imul
loope
pusha
or
das
inc
in
jno
push
adc
icebp
filds
scas
fadds
fiaddl
mov
dec
mov
add
cmp
pop
add
stc
aad
sub
cltd
pop
rorl
inc
test
cmpsl
pop
fucom
aad
adc
xor
or
cmp
ret
movsl
inc
cmpb
pop
jnp
test
dec
les
xor
jb
cltd
sub
sbb
pop
xchg
and
leave
mov
nop
adc
testb
and
and
xor
stos
sub
sbb
mov
cs
nop
xchg
lcall
mov
call
and
sub
jmp
or
pushl
sub
pop
pop
mov
lret
add
pop
andb
fisubrl
add
popf
cmpb
push
jl
fadd
cmp
iret
aam
mov
int
push
jbe
push
push
sub
adc
out
mov
dec
xchg
shll
inc
int
movsl
dec
inc
mov
iret
in
or
or
sbbl
hlt
sub
and
mov
call
sub
sahf
jae
inc
popa
pop
xchg
mov
inc
insl
lcall
lahf
and
into
or
loope
aaa
mov
adc
mov
sub
add
xor
inc
std
dec
adc
daa
or
jecxz
push
sbb
sarb
nop
dec
ja
push
and
jle
pop
mov
mov
jp
popl
scas
sub
movsl
mov
sub
out
insl
xchg
scas
es
mov
out
cmp
adc
jne
add
inc
imul
cmp
mov
out
shll
clc
dec
adc
mov
jno
fnsave
sbb
loop
xchg
popf
into
xlat
jb
mov
das
loop
sbb
add
jg
outsl
outsl
shl
pop
cmp
jecxz
sbb
mov
fstl
lea
nop
std
stos
rcrl
or
xchg
push
push
mov
cmp
loope
icebp
das
add
pop
repz
or
add
lea
mov
sub
gs
imul
call
data16
orb
mov
push
imul
test
xchg
daa
mov
mov
ss
pusha
adc
shll
xor
rolb
outsl
outsl
inc
xchg
xor
outsl
aad
sub
jg
ror
punpckhbw
hlt
push
stc
adc
popa
or
std
das
mov
cmp
cmp
mov
cwtl
push
js
test
or
mov
pop
in
xchg
adc
cwtl
rclb
insb
ds
lcall
or
cld
jecxz
scas
xor
xchg
in
es
cmp
scas
jp
test
jmp
in
jl
icebp
mov
subb
jge
pop
and
vcvtsi2sdl
lock
fdivrl
cmp
js
and
pop
aas
pop
jmp
loop
or
jb
or
add
movsl
das
jo
sub
shlb
pop
jl
pmulhuw
inc
call
mov
xchg
pop
bound
push
adc
push
add
loop
or
pop
cli
faddl
loope
mov
addr16
mov
cmp
ljmp
stos
or
mov
add
fldl
adc
cltd
pop
and
jo
loop
xchg
pusha
pop
dec
inc
jl
aas
jp
dec
xchg
push
in
movsl
pop
sti
inc
sub
in
adc
mov
int3
and
je
loopne
incl
sti
mov
mov
sub
mov
nop
mov
and
testb
xor
das
cld
xchg
sbb
repz
hlt
inc
hlt
jle
jle
in
jg
or
inc
cmp
cltd
dec
jl
out
add
adc
daa
or
mov
push
sub
icebp
outsl
lds
pop
js
jg
lods
xchg
repnz
dec
rclb
xchg
cmp
inc
stos
and
shll
mov
mov
jecxz
in
push
imul
jg
outsb
cmp
lds
int
and
add
into
andb
out
xchg
lret
popf
xchg
xor
push
mov
xor
sbb
or
cltd
push
xchg
test
sbb
outsl
cmp
lock
test
sbb
or
iret
cmp
das
mov
or
adc
ret
test
adc
add
fisubs
fsubrl
std
pop
jne
adc
popf
adc
in
pop
addl
inc
lock
add
out
cmp
mov
ja
dec
aad
sbb
sbb
daa
lret
add
mov
push
lods
sub
ss
loope
cmpsl
out
xor
pop
push
es
xchg
mov
lea
jge
xor
pusha
neg
pop
fisubrl
jb
push
lahf
jl
repz
add
add
xlat
andb
push
and
push
xchg
and
aam
das
scas
fistpl
push
mov
loopne
adc
mov
or
fbstp
add
jne
push
nop
shlb
add
mov
fldl
inc
adc
jo
mov
mov
cltd
adc
push
fwait
mov
jg
scas
and
and
jmp
push
inc
out
jg
inc
inc
sbb
or
sub
sbb
jp
decl
mov
jns
jae
outsl
mov
aaa
ss
add
pop
inc
sub
leave
in
lcall
adc
push
push
xchg
mov
icebp
inc
dec
out
xor
mov
decl
pop
pop
fsubs
test
xor
popa
sti
ret
daa
cld
call
pop
push
mov
je
out
inc
lret
addb
jg
pushl
pop
dec
fmul
mov
add
jmp
stos
or
pop
test
out
mov
pop
jecxz
rorb
mov
xor
loope
fsubrp
xchg
sar
jg
test
inc
jecxz
xchg
outsl
and
test
sub
jge
sahf
and
xchg
loope
call
adc
outsb
fildl
arpl
cld
repnz
xor
mov
cli
mov
cld
int
sbb
clc
xacquire
imul
daa
pop
sarl
stos
dec
mov
adc
outsl
ds
data16
leave
sti
call
xor
mov
mov
sub
sub
cmp
cltd
add
dec
jne
add
inc
mov
sub
sti
pop
and
outsl
cld
jl
xchg
push
add
shrl
add
decl
aaa
call
xchg
cwtl
cs
sbb
clc
jo
adc
xchg
cli
xchg
jmp
adc
and
and
adc
fnsave
lahf
push
pop
mov
mov
ret
jno
jge
loop
dec
mov
data16
push
into
clc
and
jp
icebp
dec
jcxz
add
add
dec
mov
negb
loop
mov
pop
adc
jge
or
adc
orb
mov
or
cmp
jle
xor
add
and
arpl
pop
mov
jo
adc
inc
push
add
or
add
test
pop
dec
loopne
fbld
dec
add
xchg
cmp
push
cli
pop
sub
fld
pusha
mov
lods
xchg
mov
stc
mov
adc
and
pop
add
std
xchg
mov
adc
in
or
testl
loopne
or
and
dec
in
adc
ljmp
adc
mov
mov
and
xchg
pcmpeqw
add
dec
fchs
pop
pusha
subb
stos
mov
mov
int
xchg
sbb
inc
hlt
mov
cmp
divps
int3
call
sub
push
pusha
pop
jae
and
xlat
sahf
popf
popa
stos
sti
addb
mov
mov
push
xor
and
addb
pop
inc
adc
mov
fistl
inc
lret
add
nop
cmp
out
push
xor
sub
add
lea
add
das
sub
or
test
add
stos
out
es
andb
xor
orb
stos
and
int3
sbb
adc
fcmovnbe
cmp
inc
pop
fistpl
shrl
sbb
or
popa
cmp
or
push
sti
adc
stos
ds
fdiv
sub
push
fs
fsubl
and
movl
jno
jb
fists
loop
add
mov
test
mov
mov
sub
sub
pop
icebp
rolb
stos
inc
jno
dec
add
pop
ret
xor
mov
xchg
mov
hlt
xor
dec
fstpl
adc
add
add
pop
adc
das
inc
mov
scas
mov
jl
inc
cltd
and
pushf
or
insl
int3
push
dec
popf
arpl
outsl
mov
mov
bswap
js
or
out
rorb
std
adc
jle
movsb
out
jo
xchg
xchg
cmp
jg
sub
pop
movsl
nop
or
sub
add
pop
or
call
ljmp
iret
mov
ficoms
mov
dec
pop
int3
inc
lahf
push
repz
dec
or
push
fsts
call
loop
and
adc
adc
mov
jge
lds
stc
pop
sub
loope
daa
lcall
iret
adc
insb
and
add
mov
scas
mov
jg
lods
pop
test
call
or
imul
lcall
mov
lea
xor
leave
ja
push
pop
mov
enter
lcall
clc
or
inc
inc
in
les
xor
test
pop
sub
mov
or
jg
aad
jmp
or
into
bound
les
fidivrs
fildll
jp
pop
add
adcb
ret
loop
mov
icebp
mov
mov
sub
and
in
dec
filds
push
and
or
push
ljmp
sub
mov
les
or
ret
mov
jp
mov
sub
push
mov
sbb
and
mov
je
sub
popa
pop
add
jl
andb
pop
call
dec
mov
jno
int3
jecxz
push
movsl
pop
loopne
xor
dec
hlt
ret
pop
stos
mov
dec
and
inc
mov
sbb
and
test
adc
or
icebp
inc
lcall
in
jae
pop
jle
add
mov
push
push
and
mov
dec
das
lods
ljmp
inc
ds
rorl
sbbl
add
push
incl
sbb
or
cld
popf
fmull
or
int3
lretw
int
movsb
out
in
fists
push
scas
lret
add
out
lods
xchg
xchg
aaa
lea
sti
pop
pop
mov
movsb
and
inc
xchg
sbb
mov
jne
scas
lcall
mov
imulb
cltd
pop
cmp
pop
sbb
or
into
ss
dec
push
data16
adc
in
or
add
stc
and
pop
lahf
pop
dec
xor
outsl
push
jle
xchg
daa
mov
arpl
add
add
mov
mov
sbb
sbb
sahf
imul
jg
sbb
xchg
sub
pop
dec
inc
mov
fadds
movsb
pop
cs
cmp
sti
sub
sub
fstpt
loopne
roll
xlat
push
push
data16
xchg
rolb
jg
pusha
popa
xchg
sub
scas
idiv
shlb
jo
pop
jp
xor
add
sub
add
mov
ja
sub
loope
add
addb
and
inc
sbb
jg
ret
ds
or
outsl
push
or
imul
icebp
or
shl
loop
std
adc
sbb
jg
sub
popf
popa
or
psubd
mov
jb
out
fdivrs
iret
pop
mov
xchg
popa
fsubs
inc
test
mov
cmpsb
and
aad
pop
test
fucomip
outsb
fcomps
mov
add
das
stos
lar
sub
aas
mov
mov
das
lcall
stc
jno
stc
andl
clc
daa
or
cmpsl
inc
rcll
popf
aam
inc
fstps
adc
xchg
jge
dec
mov
xchg
cmp
cld
or
push
adc
mov
xor
stc
sbb
mov
inc
cmpsl
mov
or
xor
xor
ljmp
lret
rolb
ret
dec
dec
inc
sub
std
lahf
in
lret
imul
pusha
ds
arpl
adc
shrb
jo
ret
sub
in
inc
push
or
and
fidivrl
out
pop
movsl
sbb
sbb
repz
jge
xchg
lcall
cld
mov
dec
cmpps
cmpsl
orb
clc
push
leave
lahf
mov
iret
call
sbb
push
filds
push
fsts
sahf
ljmp
add
ds
mov
fldcw
and
pop
addl
dec
loop
ss
mov
out
loopne
sbb
lcall
xchg
addr16
inc
mov
adc
enter
repz
sbb
sbb
or
xchg
call
pcmpeqw
in
test
fadd
shll
mov
push
pop
es
pop
push
jbe
cltd
dec
xor
pushf
inc
das
cld
dec
in
mulb
cld
pusha
or
sbb
sbb
cmp
call
xor
je
add
nop
add
pop
jno
push
adc
mov
inc
das
lock
add
cld
out
insb
orb
fistpl
dec
out
cmpsl
dec
pop
lock
cwtl
cmpsl
jp
cmpsl
cltd
ret
cmpsb
cmc
jb
sbb
fcomip
icebp
fsub
in
push
push
xor
pop
mov
subl
in
push
and
adc
call
call
lcall
and
inc
das
popf
dec
adc
mov
adc
int
dec
mov
jmp
pop
and
adc
clc
sbb
outsl
in
call
jae
adc
sbb
mov
les
scas
inc
mov
push
pop
inc
hlt
xchg
stc
dec
mov
cs
cld
and
xchg
cmp
mov
sti
jg
sbb
push
aaa
aam
adcb
hlt
sub
stc
ffree
push
icebp
push
nop
mov
cmpsb
and
jns
jmp
cmp
std
jo
xchg
mov
push
xor
dec
mov
push
pop
scas
test
lock
pushl
push
jno
stc
ja
jp
or
pop
push
outsl
insb
add
xchg
dec
int3
cmp
sbbl
pop
ss
xchg
xor
jle
sub
ret
push
sub
in
inc
sbb
mov
jo
lcall
test
ja
in
push
sbb
cltd
insb
add
add
cld
ljmp
add
jmp
xchg
std
mov
aam
mov
jo
gs
lea
movsl
aad
inc
fxch
adc
jmp
adc
and
inc
or
jg
fmull
ret
add
or
movsb
push
pushf
mov
popf
jg
movsb
jp
cmp
jmp
push
ret
jle
aad
sbb
sbb
mov
loop
jae
mov
pusha
movsb
sbb
and
or
incl
mov
push
jge
std
mov
mov
inc
fucomi
test
push
ret
sbb
jle
inc
push
sbb
and
fbstp
imul
inc
pusha
test
pop
xchg
cmp
pushl
pop
jge
add
xchg
outsl
push
popf
arpl
mov
and
mov
out
dec
jecxz
xor
movl
lock
push
popa
out
popa
test
sub
shlb
movsb
mov
xorb
cmp
out
and
cli
out
inc
add
mov
int3
cmp
push
cmp
mov
add
and
enter
sub
push
mov
xchg
fsubrs
jo
adc
cli
popf
or
incl
and
popa
aad
or
cld
sbb
call
mov
pushw
cmp
dec
mov
push
add
shrb
mov
call
ret
mov
or
rcll
clc
push
xchg
push
out
push
add
adc
xchg
mov
add
sub
fidivrl
inc
add
std
jne
and
testb
mov
cmp
lret
sub
lahf
test
xor
sub
or
stos
cli
push
test
add
andl
jge
add
cltd
adc
mov
push
in
mov
fistps
pop
lods
ret
push
mov
imul
jle
cmp
mov
fldenv
mov
or
cmp
or
stc
in
adc
mov
fiadds
fldenv
arpl
pop
mov
shlb
inc
add
xor
lret
and
add
xchg
inc
mov
inc
dec
push
inc
or
and
pop
mov
ret
int
ret
sahf
mov
repnz
or
adc
sbb
cmp
push
sbb
mov
or
adc
mov
sbb
jo
xadd
fsubrs
and
xchg
lods
jge
pop
stos
and
ficompl
adc
sbbb
inc
mov
jnp
loopne
mov
xor
add
leave
mov
mov
xchg
inc
roll
std
int
outsb
push
insb
pop
aaa
jle
lahf
fimuls
insb
or
adcl
push
jg
mov
cmp
and
mov
subb
arpl
les
or
cmc
push
xor
or
inc
mov
push
inc
in
stos
loopne
push
mov
stos
inc
xorb
push
sbb
incb
pop
xchg
aaa
mov
push
mov
mov
out
jg
push
mov
fldt
lcall
cwtl
push
jo
cmp
and
popa
adc
cs
push
jne
mov
push
xor
jg
adc
outsl
addb
inc
push
loopne
cmp
popf
pop
in
scas
cmp
mov
xchg
stos
mov
push
insl
or
in
or
clc
mov
lods
das
out
cli
filds
mov
lock
imul
in
lcall
push
sti
test
sbb
repnz
add
sub
push
std
inc
push
pop
pop
add
sbb
insb
pop
sbb
inc
clc
in
mov
adc
or
sti
mov
fdivl
cld
dec
xchg
std
adc
pop
sbb
and
add
push
test
pop
loopne
mov
sub
pop
mov
ret
nop
testl
icebp
fidivrl
adcb
mov
nop
mov
dec
mov
push
insl
in
mov
insl
pop
out
pushl
outsl
int3
addr16
dec
rcll
xchg
xor
or
mov
mov
outsl
pop
cli
mov
mov
ja
sub
cwtl
int
and
push
xchg
out
ret
adc
repz
push
ss
inc
mov
sbb
movsb
insb
pop
call
sbb
add
sub
ja
scas
arpl
ljmp
fmulp
xor
call
mov
pusha
jo
mov
lcall
cld
sbb
xchg
cmpsl
aad
adc
pop
les
fcomps
adcl
mov
xchg
iret
sahf
add
nop
mov
ret
xchg
mov
xchg
add
and
xchg
mov
xor
movsb
push
inc
test
add
lods
inc
pop
inc
xor
adc
fsts
sub
sbb
movsb
mov
das
call
lahf
add
cwtl
xor
pop
jge
aas
mov
std
xor
xchg
test
sti
mov
fcomps
sub
stos
push
js
mov
fistpl
dec
jle
es
fdivs
mov
or
mov
adc
lds
imul
adcb
dec
push
pop
pop
or
dec
add
ret
cmp
mov
lods
xor
sub
cli
addr16
clc
inc
and
pop
add
mov
data16
out
adc
adc
jbe
enter
ret
xchg
push
mov
xor
mov
cmp
adc
xchg
and
mov
lock
dec
and
jecxz
subb
xchg
add
test
popf
or
fxch
inc
cmpb
add
out
es
filds
subb
xor
lock
outsl
sub
jmp
insb
mov
jns
pusha
int3
push
mov
or
jp
dec
or
clc
arpl
dec
repnz
jp
and
sarb
add
repz
cli
pop
mov
adc
jmp
xchg
push
sub
inc
adc
fmuls
add
push
add
sbb
sbb
pop
inc
in
loopne
mov
ja
mov
add
dec
sbb
inc
sub
idivl
jge
enter
dec
shlb
adc
inc
scas
fs
push
loop
or
xor
je
sti
dec
outsb
xchg
xor
movsb
test
inc
push
jno
adc
insl
lcall
rorl
add
notb
push
fisubl
cli
fsts
in
or
arpl
and
add
in
mov
pop
cli
dec
fstp
jle
push
or
aaa
daa
mov
add
rclb
ja
lea
test
lret
je
dec
ret
sbb
mov
sbb
lods
insl
clc
pop
mov
cmp
icebp
sbb
out
fisubrs
mov
jmp
cmp
dec
and
xchg
mov
ret
loopne
adc
xor
add
jp
movsl
pop
push
or
fstpt
jg
jae
js
push
ljmp
jge
dec
int
adc
outsl
fistpll
mov
xor
mov
outsl
cmp
mov
test
cs
inc
loop
hlt
in
fsubrl
mov
int3
mov
enter
and
fs
cmp
mov
or
and
push
mov
and
sub
and
scas
xor
adc
xchg
cmp
or
fldenv
mov
and
popf
movsl
shlb
and
sar
test
iret
dec
pop
mov
add
bound
in
pop
cmp
adc
add
ret
mulb
adc
cld
stc
popf
inc
sahf
and
pop
sbb
pop
pop
add
adc
enter
pop
sub
and
lcall
mov
mov
mov
mov
jl
xchg
or
out
sti
sub
iret
and
das
mov
adcb
push
jae
scas
leave
push
adc
mov
inc
xor
inc
cmp
inc
jl
sub
sub
mov
push
dec
and
cwtl
inc
into
mov
fwait
out
add
xor
adc
ret
and
or
lcall
push
push
dec
push
cmp
push
push
push
sub
push
and
xchg
mov
xor
stc
aaa
fmuls
popf
xor
inc
mov
add
dec
mov
mov
popa
in
mov
push
ja
pusha
push
xor
add
xor
mov
adc
sub
xor
arpl
push
dec
push
or
sar
adc
add
adc
lea
popl
call
push
rcl
adc
test
inc
sub
aam
loop
sbbb
sub
jmp
inc
dec
icebp
shl
jp
sub
cmpsb
insb
repz
stos
or
fs
and
push
xchg
cmp
adc
push
cmpsb
push
rolb
repnz
xchg
mov
sbbl
or
testl
test
add
lock
jo
inc
inc
add
dec
inc
test
jbe
lret
pop
repz
aad
sub
aam
mov
sub
sub
push
mov
cmc
pop
adcl
adc
test
inc
call
cld
xchg
adc
outsl
jmp
test
jbe
dec
add
shll
dec
in
and
jne
mov
gs
mov
fimull
pop
mov
xchg
iret
jno
in
rcrb
adc
and
clc
sub
lea
out
insb
insb
push
jo
adc
loop
dec
cld
add
jmp
dec
sbb
adc
dec
mov
push
popf
push
jbe
pop
subb
sbb
not
or
inc
adc
jb
cs
dec
pop
mov
repnz
sbb
and
mov
movsl
and
jns
clc
pop
add
or
add
sub
sbb
stc
mov
hlt
aad
jp
or
push
add
jl
mov
pushf
jge
sub
inc
int3
clc
add
add
aam
stc
push
cmp
out
int
lcall
mov
stos
lcall
out
add
and
push
lahf
aad
leave
push
mov
pop
leave
push
fbld
icebp
rclb
sub
mov
add
inc
mov
dec
adc
lcall
cmp
mov
hlt
pop
fsubl
xor
cmc
hlt
movsb
add
aaa
or
bound
and
or
push
add
dec
push
pop
cli
or
cmc
adc
xor
add
rclb
outsl
sbb
out
add
sbb
jnp
clc
and
test
cltd
add
sub
nop
add
fwait
loope
jl
lret
cld
mov
fadds
stos
test
das
lods
push
hlt
test
lock
inc
adcl
push
movb
pop
jl
pusha
add
cmp
rcrb
sub
ja
and
mov
and
ror
pop
mov
sbb
adc
stos
hlt
call
ljmp
orb
je
or
add
cmp
mov
xor
push
sbb
add
shl
popf
inc
cld
lods
and
loopne
ja
inc
data16
add
add
scas
sub
xchg
stos
inc
add
out
add
or
ss
loopne
mov
cld
cmp
pop
sub
fsubr
fcmovnbe
and
dec
push
mov
mov
inc
adc
pop
mov
mov
xor
sbb
bound
jl
sbb
fcomps
mov
lock
xor
ja
fstps
adc
mov
sarl
xor
xchg
sti
popf
pslld
add
ret
inc
lds
andb
sbb
pop
lds
jbe
sbb
or
inc
ror
pop
or
inc
nop
xor
in
jmp
cld
sub
jno
sarb
lahf
or
cmp
pop
shrl
lret
mov
inc
push
mov
mov
hlt
dec
push
inc
mov
sbb
mov
es
stc
jg
cwtl
pop
add
xlat
cmp
push
lock
sub
outsl
rolb
je
sbb
pop
stos
clc
movsl
xor
scas
push
ret
in
aas
xor
mov
cli
scas
aam
sub
test
mov
aam
fildl
inc
and
in
in
fcoml
add
call
test
push
into
and
sbb
pop
pop
pop
sbb
rcrl
ret
nop
xlat
clc
add
ret
push
pop
orb
inc
cmp
add
lcall
and
fnstcw
fsubs
sbb
jno
adc
ja
sub
das
pushl
xor
dec
imul
or
push
ficoms
sub
mov
sbb
scas
cmp
movsl
lods
mov
insb
js
xchg
aad
or
cmp
inc
mov
sbb
lock
inc
insb
mov
fists
mov
jg
std
call
mov
rolb
ja
je
clc
les
imul
out
adc
les
pop
ret
xchg
fbstp
dec
inc
ret
mov
jmp
pop
pop
jo
mov
inc
inc
test
add
cmp
std
push
adc
mov
mov
sar
push
xor
sub
inc
inc
and
out
pushf
adc
loope
add
sub
jno
ret
mov
dec
pop
cmp
lahf
jle
imul
dec
addb
ss
dec
pop
mov
int3
inc
cmp
fisubrs
push
std
jl
xchg
jmp
add
sub
cmc
push
ffreep
scas
jnp
test
xchg
jecxz
jp
sub
movsl
xchg
cmp
cltd
push
loope
add
add
or
sub
out
sbb
add
outsl
and
es
adc
dec
loop
fildl
push
in
add
in
sbb
mov
jne
push
add
xchg
cli
repnz
dec
and
repz
add
mov
sub
jmp
mov
jmp
int
xchg
xor
push
ljmpw
lods
cmp
mov
jo
test
cld
cmp
pop
std
loop
inc
adcb
test
mov
das
adc
pushl
popa
or
je
insl
sbb
mov
push
jno
sbb
xor
push
pop
sub
jg
or
std
scas
idivl
jg
mov
shrl
lods
mov
inc
leave
and
and
sbb
das
or
add
push
sbb
jne
fcmovnb
pop
mov
add
add
inc
pop
mov
mov
test
adc
pop
pop
call
mov
and
inc
outsl
and
incl
push
pushf
insb
dec
ja
stos
in
or
out
xchg
movsb
cli
sbb
call
fisttps
add
add
mov
or
outsb
popf
jbe
mov
in
push
pop
sti
lret
pusha
arpl
jle
dec
xor
fisttps
push
jmp
rclb
xchg
jge
push
add
sbb
add
rorl
aas
cmp
repz
and
ss
inc
gs
add
push
inc
and
mov
pop
push
add
subb
sti
mov
lds
sbb
pop
addl
inc
pop
shl
hlt
ret
aam
aam
arpl
std
jne
sti
or
mov
out
dec
data16
clc
mov
mov
adc
in
sbb
fists
shrb
xor
push
pushf
or
cld
jae
pusha
adc
cmp
add
mov
jno
and
cwtl
or
mov
xor
scas
lock
ja
enter
jmp
sbb
shll
ds
dec
xor
adc
outsl
or
lock
cwtl
sub
pop
fdivs
dec
sbb
or
push
pusha
sbb
test
shl
aam
fwait
add
addr16
and
sar
pop
adc
mov
addb
jno
sub
call
cmpsb
ja
inc
dec
and
fucom
scas
push
notl
lock
mov
jle
movsb
outsb
mov
andb
lahf
adc
adc
loopne
cld
in
pop
addl
outsb
fwait
out
mov
mov
and
inc
mov
inc
or
ret
movsb
pushf
mov
test
inc
mull
cli
pop
testl
insb
add
popa
push
dec
xor
pop
loopne
dec
add
bound
fcomps
mov
and
movsl
xor
cld
or
inc
mov
adc
mov
add
andb
jge
mov
adc
sbb
xor
mov
sbb
add
xor
lcall
jne
loopne
mov
mov
jo
inc
add
fidivs
add
inc
adc
ds
je
je
adc
add
dec
mov
lcall
mov
mov
inc
loopne
fwait
sub
dec
divl
stos
pop
add
mov
test
testl
jnp
sub
inc
in
sbbl
cmp
fadds
cmp
aaa
rcr
xor
test
and
dec
inc
jno
data16
shlb
push
out
add
adc
mov
insb
push
stos
loop
pop
adc
xor
out
sub
mov
add
pop
inc
and
je
rcrb
insl
adc
lcall
repz
pop
add
push
loope
push
mov
imul
or
xchg
aad
adc
inc
inc
push
inc
inc
xchg
add
movsl
add
mov
mov
pop
cmc
and
lcall
xorl
sbb
dec
das
or
call
mov
push
cmc
cmp
xchg
and
adc
jge
or
sbbb
inc
enter
cmpsl
clc
mov
movsb
adc
test
rorb
or
mov
mov
push
push
lds
cli
and
adc
adc
leave
ret
jmp
mov
sahf
add
dec
rcrb
sbb
mov
mov
dec
push
xlat
fcoms
or
push
push
ljmp
stos
sbb
cmp
and
sbb
pop
push
mulb
inc
adc
inc
mov
sbb
inc
dec
ljmp
and
add
fidivs
or
sti
add
sar
pop
dec
shlb
adc
outsl
jbe
dec
xor
fisubrs
into
mov
add
lea
add
add
adc
gs
int
pushl
jl
jbe
pop
pop
sub
cmp
or
mov
and
mov
mov
push
daa
shrl
call
in
in
fs
das
or
sub
dec
push
icebp
dec
lret
and
xlat
inc
jg
fstpt
in
mov
jae
lods
out
and
and
psubsw
call
add
js
push
mov
mov
movsb
bound
xchg
adc
cli
jg
popa
loopne
jp
mov
push
mov
fildll
out
adc
repz
imulb
adc
xor
jns
ffreep
xchg
cmp
pusha
stos
adc
mov
dec
jmp
call
mov
mov
inc
inc
popa
fucomip
in
sbb
xchg
jmp
add
hlt
scas
aad
incl
lcall
cmpsb
adc
test
mov
jb
insb
sub
call
mov
jecxz
enter
sarb
mov
decl
cmp
add
or
mov
sti
xchg
push
arpl
jnp
mov
jg
pusha
fdivrs
decl
repnz
add
and
xor
shrl
stos
sar
inc
mov
add
ja
ficoml
jmp
shll
dec
xor
xor
clc
ljmp
mov
pop
cs
or
pop
rcrl
mov
mov
rorl
xor
test
out
std
lcall
sbb
cmp
leave
push
inc
jb
fbld
jge
outsb
cmp
jg
ljmp
sbb
lock
and
mov
adc
outsb
mov
rcll
add
push
xor
addr16
fcomps
adcb
mov
add
adc
push
pop
int
pop
mov
or
rcrb
test
out
dec
and
pop
lret
sub
lcall
dec
push
das
orl
xor
addb
jbe
sti
clc
push
cmp
xchg
mov
out
xor
push
add
add
xchg
add
push
out
jl
lcall
pop
mov
push
pop
adc
jp
popa
mov
scas
cmp
stos
sub
adc
lret
gs
adc
cmp
add
and
pop
lahf
jle
mov
mov
add
mov
cmpsb
pop
or
les
stos
or
out
push
sub
pop
inc
sbb
lahf
mov
and
or
aas
sti
orb
add
push
pop
icebp
add
stos
faddp
add
or
lcall
lods
mov
cmp
in
repz
adc
sbb
clc
outsb
mov
mov
adc
ja
hlt
adc
data16
mov
add
andb
or
and
mov
repnz
cwtl
push
xor
addr16
lds
xor
mov
sub
in
outsl
pop
adc
mov
or
mov
mov
sbb
in
inc
and
test
xor
loope
dec
loop
sub
or
push
adc
int3
add
or
xor
push
mov
fstpt
xchg
jne
test
add
enter
xor
enter
inc
cmp
and
out
in
jge
sbb
rclb
inc
in
push
jp
repz
inc
push
xlat
adc
clc
imul
mov
xor
clc
enter
das
sbb
add
sbb
mov
xchg
or
or
test
out
dec
aad
add
inc
sbb
insl
in
mov
xor
mov
mov
xor
jmp
inc
in
push
sbb
sub
or
arpl
add
sub
or
mov
popa
inc
jne
out
aad
mov
ds
imul
sbb
andl
fisttpl
and
push
cmpsl
fcoml
es
adc
xor
imul
setbe
cld
lret
mov
mov
loopne
in
dec
push
jae
lret
mov
mov
sub
call
cli
je
ficomps
stos
clc
sub
mov
push
fistpl
imul
cmc
mov
push
jo
gs
cli
jp
cwtl
push
dec
call
outsl
fisubl
aam
mov
aaa
add
rcl
xorb
mov
fists
push
push
dec
adc
inc
inc
and
aam
add
mov
jmp
inc
js
mov
or
orb
push
jge
pop
or
shll
ret
push
push
stos
sbb
int3
sbb
lahf
inc
shll
das
inc
add
push
add
mov
sbb
mov
andb
mull
clc
inc
mov
push
xor
dec
jp
shll
sub
push
insb
cmp
into
movl
clc
nop
sbb
scas
dec
xchg
pop
sbbb
hlt
push
mov
loopne
addl
ja
mov
dec
jmp
or
iret
pop
push
hlt
push
hlt
inc
lods
cmc
fidivl
sbb
or
and
fimull
mov
adc
pop
ds
dec
sbb
cs
mov
mov
addr16
dec
inc
dec
push
ja
sub
push
push
adc
shlb
mov
mov
lahf
shlb
xor
and
mov
inc
mov
mov
mov
cli
mov
push
cmp
add
xchg
and
out
es
adcl
sbb
lret
push
push
cmp
inc
cmp
pop
lahf
pop
inc
or
lds
call
sub
add
stos
dec
imull
cmp
mov
inc
push
orb
loopne
in
sub
xor
mov
jns
mov
push
clc
out
test
ja
andl
xchg
loopne
or
pushf
dec
add
push
add
adc
ja
inc
and
mov
hlt
inc
xor
add
xchg
test
xorl
and
cmp
rclb
daa
push
movsb
aas
jb
cmp
test
jne
pop
cmpb
sbb
addr16
or
add
push
jmp
dec
push
sbb
jnp
sahf
test
lods
and
adc
clc
mov
or
fs
andl
push
or
das
rolb
adc
in
jle
mov
push
push
push
loopne
adc
pop
jg
add
leave
push
or
push
cmp
mov
push
in
push
xor
mov
cwtl
xor
add
loope
sub
mov
xor
inc
data16
cld
xor
adc
cmp
cmc
pushf
out
cmp
clc
incl
int3
jb
cmp
xchg
sbbl
jg
adc
mov
mov
aas
mov
xchg
pop
jl
in
sti
out
add
fs
mov
rolb
mov
inc
fdivrs
and
push
add
add
mov
add
cmp
push
fnstenv
or
scas
jmp
leave
adc
cld
jg
mov
add
jb
cmc
cwtl
or
lret
dec
push
adc
and
outsl
xor
inc
mov
dec
inc
xor
incl
andl
lahf
and
cmp
iret
push
jl
jb
into
push
loope
xchg
xor
pop
jo
mov
roll
rcll
std
sbb
bound
jnp
or
dec
pop
sti
or
pop
loop
cld
pop
movsl
pop
mov
call
adc
push
inc
inc
lods
add
add
mov
mov
cmp
jg
push
loope
stos
pop
or
stos
roll
rcr
add
sbb
sub
clc
jmp
add
inc
xchg
add
xorl
fiaddl
scas
mov
test
add
pop
mov
dec
stos
mov
jnp
mov
clc
jmp
incb
and
pop
sti
sub
mov
push
dec
add
jb
pop
cld
mov
add
mov
inc
add
popa
inc
push
dec
pop
sub
pop
mov
sub
fcomip
je
arpl
cltd
or
jg
nop
sub
jp
out
clc
or
lcall
pop
test
sub
jecxz,pn
jbe
or
mov
das
faddl
in
sub
addl
repnz
pusha
mov
xor
imul
icebp
div
jo
adc
pushl
push
sbb
mov
into
mov
sub
mov
in
jg
xor
int
bound
sahf
and
sbb
movsb
imul
mov
cltd
jp
jnp
push
mov
sub
jg
add
and
mov
icebp
sub
pop
lods
add
xlat
movsl
pushl
or
mov
mov
jb
and
int3
scas
daa
pop
add
std
add
aam
mov
mov
dec
jg
daa
jb
test
fadds
sahf
add
fcomip
push
lcall
aas
and
jbe
mov
mov
jl
jnp
jbe
orb
inc
push
xchg
shrl
xlat
add
incl
cmp
and
gs
out
das
add
or
dec
fldenv
or
shl
arpl
or
add
mov
rol
test
xor
inc
cmp
or
aaa
pop
sub
daa
adc
roll
mov
jg
repnz
mov
push
movsb
add
add
jg
jg
inc
mov
sub
les
push
fstpl
mov
or
scas
xlat
push
sub
xor
mov
dec
aad
jecxz
nop
inc
pop
popf
rolb
sbb
sahf
out
mov
scas
sbb
lcall
adc
push
add
add
sbb
insb
sub
and
dec
call
mov
cwtl
or
aaa
inc
add
aam
push
mov
and
ljmp
leave
loope
out
jno
rol
push
fsubrs
fiaddl
pop
dec
push
clc
adc
jbe
decl
mov
movsb
fimull
push
dec
andb
pushf
int
mov
cmp
aam
pop
subl
pop
mov
das
std
mov
movsl
and
data16
sti
mov
loope
jg
dec
test
xor
sub
fdivl
jg
pop
add
sbb
fisttps
jno
in
and
xor
fdivrs
fcomip
jno
xor
jecxz
jl
repnz
call
lcall
lods
rol
in
orl
jae
movsl
adc
mov
pushl
into
xchg
fdivr
aam
xchg
xchg
insb
adc
xchg
cld
ret
mov
sti
pushl
mov
enter
push
daa
mov
mov
and
cld
or
fs
das
xchg
lea
push
mov
jno
and
das
cld
jg
cwtl
scas
adc
mov
jg
or
jecxz
outsl
movsl
adc
decl
xor
mov
in
stc
pop
pusha
and
and
push
pop
inc
xchg
enter
jbe
push
mov
call
mov
int3
shrd
sbb
xchg
xor
or
cld
pop
loope
orl
jno
mov
cmp
adc
mov
cmp
add
cmc
jae
xchg
idivl
cmp
cltd
pushf
xchg
push
mov
rol
mov
js
push
jg
pop
pop
lock
cmp
xor
subb
or
movsb
sbbl
cli
or
mov
nop
and
in
decl
outsl
add
push
mov
jbe
sub
sub
gs
jmp
bswap
testb
inc
inc
and
repz
fildl
sub
mov
hlt
sbb
and
push
push
and
sbb
popa
test
pop
test
mov
jge
cltd
ret
lds
dec
xchg
mov
ret
enter
adc
jne
jmp
ljmp
xor
fldenv
adc
inc
les
xor
cltd
pop
addb
es
shrb
inc
mov
mov
mov
fistpll
loopne
xor
dec
sub
xor
fistpl
xchg
fstpt
mov
or
dec
xchg
add
test
xchg
mov
mov
mov
add
inc
lods
sbb
dec
aam
pop
jne
mov
enter
lods
jbe
lock
or
add
test
pop
loopne
cmp
add
mov
add
stos
add
push
sbb
in
decl
cmpsb
in
adc
mov
lods
cmpb
mov
cld
push
and
pop
lret
adc
cmp
jge
dec
cld
lret
inc
clc
mov
and
out
shrl
add
outsl
fimull
or
mov
push
mov
sbb
mov
push
mov
scas
jmp
xchg
adc
mov
jae
addl
popa
push
cmpsb
pop
ljmp
and
and
dec
andb
loopne
dec
out
xor
clc
or
mov
push
hlt
shrb
adc
adc
pop
mov
ljmp
add
loop
mov
mov
fiadds
mov
adc
sub
mov
cmp
rorl
mov
adc
in
adc
inc
test
adc
adc
adc
je
cwtl
cmp
pop
xchg
add
xor
inc
push
jne
in
dec
inc
test
push
cmc
jp
data16
sbb
sub
clc
dec
and
and
in
pop
inc
mov
mov
add
pop
leave
adc
add
icebp
or
cld
and
jne
js
mov
add
mov
dec
loopne
add
pop
data16
push
or
dec
push
fsubrl
sbb
or
lock
rcll
insl
add
or
add
add
lcall
mov
lds
sub
and
and
lea
adc
or
fcoml
add
xlat
mov
xor
ljmp
mov
and
sarb
jp
pushf
mov
jb
sub
inc
xor
fists
stc
push
mov
cmp
loopne
loop
pushl
jns
cmp
pop
inc
adc
jg
movsb
sub
sub
aad
fcomps
repnz
out
aad
jae
adc
into
stc
sbb
mov
mov
adc
pop
pusha
push
in
sbb
xchg
inc
orl
push
hlt
sbb
inc
sub
xchg
and
add
jmp
testb
push
call
adc
push
mov
les
pop
jmp
bound
sbb
push
data16
test
fstps
jnp
cmp
or
jbe
test
icebp
stos
nop
loopne
push
mov
add
test
leave
inc
cs
push
sbb
cmp
jae
adc
cmp
into
push
mov
or
faddl
cmpsl
mov
lret
sbb
xor
daa
or
rorb
push
jns
test
sub
bswap
es
sahf
std
push
mov
adcb
inc
cmpb
aad
push
adc
mov
fldenv
push
or
int
dec
icebp
das
shll
sbb
push
dec
mov
pop
xchg
enter
push
xor
inc
dec
and
dec
shrb
test
pop
fbstp
sub
ret
insl
daa
inc
subb
cltd
xor
mov
loopne
ret
push
cmove
add
out
xchg
cwtl
rcr
lret
or
rorb
dec
xchg
fs
sub
es
pop
ss
testb
mov
loop
add
rolb
loopne
mov
and
cs
mov
dec
push
pusha
xchg
jbe
sub
loopne
js
jb
fmull
jmp
mov
les
mov
into
pop
out
sbbb
rolb
call
pop
inc
inc
inc
pop
mov
xlat
add
loopne
inc
sub
mov
in
xor
inc
sarl
push
adc
mov
cmp
pusha
cmp
out
lds
ret
mov
daa
andl
sub
insb
xchg
jmp
pmuludq
adc
loope
add
rclb
xchg
push
xchg
cmp
les
andl
or
aam
jmp
dec
add
aad
mov
and
jge
test
inc
adc
int3
inc
into
xor
adc
xchg
jp
mov
rorb
adc
and
mov
ret
andb
add
loopne
fisttpl
push
js
mov
inc
inc
aam
mov
add
mov
pushf
mov
popf
movsl
mov
scas
test
add
insl
cmp
inc
mov
ret
in
or
xor
es
push
jle
inc
inc
cmp
hlt
mov
stc
stos
mov
int
icebp
lcall
fistl
out
test
fistl
add
fidivrs
hlt
cmpb
cs
push
shrl
jbe
jmp
adc
jo
daa
les
aas
push
sbb
inc
leave
fsubl
lock
inc
push
inc
and
adc
pusha
inc
adc
dec
test
jmp
jg
push
lahf
lret
inc
cmp
xor
mov
fdivl
andb
data16
xor
mov
jg
push
inc
in
dec
fs
jbe
in
ret
stos
in
out
or
push
adc
jle
aaa
mov
bound
adc
sub
xchg
push
pushl
fldcw
sub
cmp
push
std
pushl
add
test
dec
ret
data16
fmuls
or
lods
or
push
aad
cmpsl
and
push
jmp
dec
and
dec
test
xchg
cmovge
sub
clc
outsb
insl
pusha
jnp
and
push
pop
add
lock
pushl
test
fnstsw
test
push
adc
fisubs
xor
call
pop
jne
idivl
cli
xchg
add
sbb
insb
mov
sar
enter
jg
mov
cwtl
dec
adc
pop
pop
lock
out
push
or
in
jecxz
sar
lcall
cltd
and
adc
dec
push
faddl
push
pop
inc
and
pushl
xlat
sarb
sub
sti
ljmp
inc
xchg
loop
push
les
rcrl
ljmp
cmp
push
dec
or
cmp
add
push
jp
in
outsl
jbe
das
sbb
cmp
adc
les
mov
sbb
mov
cmp
mov
add
pop
das
arpl
fucomip
mov
inc
nop
cmc
cmp
pmaddwd
pop
jnp
and
std
mov
pop
mov
jne
xor
loopne
adc
cld
fcmovnb
jecxz
mov
idiv
lcall
sbb
sbb
dec
inc
inc
xchg
rolb
jno
cmp
orb
call
xchg
cs
mov
lret
ds
mov
out
mov
or
inc
mov
nop
jnp
stc
lahf
movsl
mov
mov
dec
lods
jns
jns
in
pop
add
sub
rcll
sbb
ficomps
mov
inc
pop
sti
xchg
arpl
aaa
sbb
adcl
stc
dec
mov
push
lods
sub
cwtl
xchg
cmp
mov
cmp
jmp
or
sub
jge
negb
popa
shlb
or
faddl
dec
pop
pop
jecxz
cltd
push
data16
xor
inc
fwait
cmc
mov
sbb
daa
aam
adc
daa
lcall
jae
sbb
divb
or
or
iret
pop
cmp
arpl
popa
mov
sub
bound
icebp
push
sub
sbb
std
fcoml
lods
daa
fs
pop
lods
lahf
sbb
add
jne
ds
inc
mov
push
icebp
nop
or
or
mov
aad
loop
outsl
dec
and
mov
incl
sbb
repnz
shrl
mov
sbbb
or
aam
adc
rcrb
mov
ret
ds
xor
mov
mov
jg
loopne
testb
in
pop
insl
fdivs
or
push
mov
dec
push
add
mov
xchg
pop
pop
sbb
ficompl
in
push
jg
cwtl
lret
cs
std
jb
mov
enter
or
xor
lock
inc
cld
lods
dec
cmp
push
mov
dec
cs
repnz
xchg
fbld
pop
js
or
pop
cld
xchg
xchg
or
or
inc
call
mov
test
adc
sbb
or
sbb
sub
call
xor
popf
or
ret
int3
jmp
xor
iret
iret
ss
xor
cmpsb
mov
aad
push
rorl
push
mov
int3
dec
adc
scas
add
imul
xchg
enter
addb
xchg
sbb
cmp
ret
ret
std
jmp
and
inc
ficomps
into
dec
cmp
jno
adc
notb
ss
incl
mov
ret
cltd
push
outsl
pop
insb
pusha
mov
andb
in
fistpll
ret
jle
fidivrl
andb
nop
push
mov
mov
pop
clc
inc
mov
dec
subb
rcrb
mov
int3
xchg
jmp
mov
sti
add
inc
fsubrs
adc
sub
pop
mov
jmp
repz
jg
dec
add
mov
scas
sub
mov
ja
test
inc
bound
aaa
testb
add
incl
fsubl
pop
and
and
xchg
das
cld
call
push
je
xor
xlat
pop
add
popa
add
mov
cmpsl
xchg
adc
push
pop
xchg
insl
jg
and
test
push
xchg
xlat
fistl
mov
add
pop
mov
push
mov
int
shrb
mov
or
xchg
inc
mov
cwtl
scas
inc
cmp
and
adc
add
pop
sahf
shl
add
adc
hlt
xorb
rolb
ret
push
push
inc
dec
jle
and
ffree
and
shlb
add
aam
and
pop
add
mov
addl
adc
mov
inc
sub
stos
and
mov
mov
andb
aad
mov
mov
mov
or
inc
nop
or
dec
or
fwait
mov
inc
pop
dec
divl
add
mov
mov
lahf
mov
inc
fcompl
sub
andb
pop
mov
xchg
pusha
inc
or
mov
sahf
inc
popl
ret
jo
test
mov
add
push
je
in
cmpsl
xchg
add
pop
stos
push
add
jbe
orb
dec
jae
mov
mov
ficoml
fists
icebp
dec
test
mov
adc
cmp
cld
xor
test
mov
lahf
arpl
push
add
adc
repz
dec
stos
push
cmp
outsl
push
in
enter
nop
add
mov
inc
xchg
popf
mov
fldl
repz
push
jne
mov
xor
mov
ja
cmc
jo
aas
inc
adc
les
stos
sbb
inc
sbb
and
mov
movsb
pusha
dec
xor
mov
aad
cmp
push
cld
hlt
inc
xchg
mov
cld
rol
add
cld
out
test
cli
ret
hlt
testb
inc
add
mov
mov
push
arpl
xchg
dec
in
adc
or
lods
add
ljmp
rolb
lock
aaa
ljmp
aam
push
movsl
orl
inc
dec
ljmp
shrl
es
imul
lock
and
cli
add
incl
pop
inc
or
pop
loopne
fstpl
ja
pusha
aaa
dec
mov
or
push
leave
hlt
test
jg
int
lcall
add
fmull
jbe
jnp
sti
push
outsl
cltd
xorb
cmp
pop
repz
add
push
cmp
fbstp
adc
mov
mov
std
mov
lret
or
in
pop
stc
out
cltd
hlt
test
push
in
and
inc
mov
cmp
les
sub
sub
push
jmp
add
mov
nop
icebp
das
jno
or
add
or
adc
out
dec
in
outsl
jmp
stos
outsl
sbb
xchg
std
rorb
pop
mov
push
xlat
and
mov
outsl
hlt
iret
icebp
push
or
pop
pop
es
fstl
mov
inc
pop
aaa
test
ljmp
add
pop
add
pop
add
lock
ds
sub
call
fmuls
or
xor
fistpll
pop
gs
rcrl
pop
sti
test
pop
imul
fildll
add
xor
repnz
je
ljmp
lret
js
adc
dec
popl
lret
add
pop
stos
aas
mov
xlat
add
add
dec
and
inc
mov
mov
inc
push
mov
mov
jle
mov
stos
sbb
mov
loope
cmp
pop
adc
jg
or
jo
pop
push
cs
in
inc
adc
mov
sbb
call
add
aam
bound
jns
icebp
xchg
add
incl
push
or
sbb
adc
push
jl
mov
iret
add
sub
outsb
push
cmp
dec
fcmovu
push
icebp
mov
dec
adc
adc
push
aad
and
jne
mov
jg
pop
mov
mov
add
mov
push
mov
in
xchg
nop
lahf
leave
pop
int
mov
xchg
sbb
dec
sarl
sub
js
xor
cmpsb
call
iret
mov
add
mov
fdivr
pop
inc
mov
sbb
jbe
cld
xor
std
in
and
popf
mov
push
daa
stos
add
fnstsw
jmp
xor
pushf
adc
mov
movsb
sbb
loopne
scas
mov
dec
or
pushl
enter
cmpsb
or
test
inc
mov
sub
scas
pushl
fbstp
scas
popa
hlt
nop
shrb
and
out
sahf
jns
push
ss
decl
add
cmp
xor
cmpsb
mov
mov
das
mov
push
dec
lds
push
pop
les
std
sbb
jp
push
loopne
add
nop
dec
or
or
or
ljmp
les
mov
add
jb
inc
loope
pushl
adc
sbb
hlt
mov
movsl
jo
fists
xchg
loop
pop
sti
mov
clc
aaa
mov
subb
scas
ret
inc
xchg
pop
ljmp
adc
or
fnstsw
ljmp
sub
and
and
andb
or
daa
lods
mov
or
or
add
or
xor
or
inc
test
sub
imul
push
and
cwtl
inc
shlb
adc
jnp
and
fsub
and
cmp
add
jns
cmc
or
pop
subb
or
push
pop
sbb
dec
test
sbb
inc
fnstenv
lock
sbb
or
int
or
jnp
mov
fsubr
les
rcll
cwtl
ret
jo
jge
xor
mov
movsb
ss
jne
enter
sbb
pop
mov
xchg
adc
sub
sbb
mov
sbb
mov
inc
add
les
push
mov
sub
mov
mov
rolb
shll
lods
lcall
or
ror
fwait
mov
pop
cmp
jecxz
lret
aam
or
inc
inc
adc
cmp
sub
das
add
sbb
push
mov
mov
fadd
inc
lock
jb
stos
push
mov
mov
or
inc
mov
les
xchg
rolb
nop
add
sar
add
hlt
adcb
loopne
sub
andb
inc
shl
inc
xor
ret
sbb
and
add
enter
mov
and
ret
mov
cld
fnstsw
addr16
and
adc
cld
ret
fdiv
ret
pop
xchg
cli
lds
jne
inc
and
add
fdivr
pusha
mov
sbb
sub
cmpsb
mov
filds
sbb
in
and
and
sti
and
dec
jecxz
nop
sti
div
pop
inc
popf
insl
inc
add
cmp
xchg
stc
adc
hlt
add
call
loope
sbb
shrl
or
dec
inc
cmp
mov
xchg
add
ja
test
inc
add
dec
sbbb
decb
cwtl
adc
popf
add
movsb
fsubr
bound
inc
add
ds
inc
rcl
ror
or
das
xchg
inc
roll
xorl
mov
cwtl
pop
addb
inc
mov
insl
pop
mov
mov
aam
sbb
adc
add
cmp
hlt
jle
cmp
mov
out
testb
addl
mov
rorl
add
inc
or
pop
daa
adc
bound
xchg
or
std
jb
sub
inc
jae
call
adc
pop
ljmp
stc
inc
call
add
push
roll
add
jbe
mov
adc
mov
add
sub
inc
jg
push
call
aam
loop
push
push
mov
inc
sbb
jb
scas
clc
cmove
lcall
xor
add
dec
mov
loopne
add
mov
add
ljmp
ret
in
push
mov
mov
add
mov
cmp
verw
xor
ja
lcall
mov
popa
pop
push
insb
push
aaa
je
mov
icebp
clc
sub
mov
pop
in
stos
test
aas
loopne
sbb
shlb
inc
vmulps
stc
inc
in
clc
xor
xchg
mov
test
or
fcomps
or
sub
inc
push
sti
testb
fsubrl
lcall
push
jno
das
adc
sbb
rorb
xchg
xor
xchg
jmp
insl
cmp
adc
push
sbb
dec
adc
sbb
rolb
nop
and
mov
dec
push
sti
push
adc
push
movsb
mov
or
adc
std
sbb
dec
mov
fldenv
mov
dec
test
sbb
or
sahf
jo
xchg
push
call
mov
or
jl
fistl
sub
mov
pushl
out
sbb
sub
fcomps
lret
sub
sti
mov
mov
int
mov
add
sbb
dec
jl
incl
mov
pop
mov
jg
and
fucomip
lcall
mov
dec
inc
popf
popfw
add
rcll
mov
cmp
push
add
jmp
cmpsl
js
shrl
lcall
lcall
cltd
dec
pusha
imul
imul
xchg
imul
decl
cmc
inc
xor
pop
ret
cmp
rorb
je
loope
pushf
aas
ret
add
dec
cld
into
mull
and
iret
outsb
rorl
mov
sub
push
jmp
jns
xor
mov
push
mov
adc
lcall
je
add
addr16
add
jecxz
subb
dec
or
xchg
xchg
ljmp
cmpsl
ds
mov
aas
inc
testb
call
push
inc
lahf
and
mov
inc
imul
jle
dec
jmp
out
pop
xor
cmp
pop
mov
int3
int
or
or
jg
and
cmpb
push
push
pop
xchg
icebp
and
dec
jle
mov
mov
loopne
roll
bound
call
xorl
or
cmp
nop
gs
out
add
and
lods
mov
cmc
jp
repnz
icebp
int3
push
ret
mov
cli
add
call
sti
mov
mov
scas
out
dec
jp
lods
icebp
ss
inc
jmp
aam
mov
stc
inc
jb
add
jl
cli
fdivrl
movsl
incl
jg
hlt
inc
xchg
cli
scas
sub
dec
jle
inc
pop
add
add
outsl
je
movsb
movsl
sbb
in
fs
jle
lea
lcall
mov
test
jne
fsubl
incl
mov
popl
enter
add
sub
fisubrs
and
or
push
stos
lea
mov
xchg
pusha
push
inc
cmp
call
pusha
ljmp
test
repz
dec
adc
inc
ret
push
mov
jmp
sti
jnp
mov
and
inc
push
or
mov
mov
aaa
sbb
ja
push
lods
leave
xchg
aad
cmp
fistpl
insb
cmp
pop
repz
add
add
test
stos
lcall
incl
pop
jmp
pop
cmc
jg
add
es
dec
repnz
std
call
js
and
jns
push
sahf
fldenv
sub
and
clc
cmp
iret
lods
outsl
fildll
sub
mov
and
iret
pop
lahf
imul
fwait
xchg
push
ljmp
inc
add
push
insl
sbb
add
mov
adc
scas
add
in
cli
incl
jle
sahf
sbb
push
push
dec
ret
mov
push
jae
fimuls
mov
lods
mov
pop
jl
sub
xor
sarb
sbb
add
inc
pop
mov
cwtl
mov
xlat
nop
in
mov
jne
jno
ja
bound
sub
pop
cmc
movsl
push
mov
imul
or
adc
xorb
xor
fisttpll
enter
xor
loope
loopne
lea
push
cld
loopne
js
add
dec
les
pop
shrl
mov
fidivrl
ja
insb
scas
subl
pusha
inc
push
fnsave
pusha
in
sbb
scas
int
mov
fildl
inc
mov
shll
jae
mov
loopne
incl
stos
out
jge
arpl
add
in
in
fistps
jmp
inc
outsb
sbb
cmpsb
mov
mov
gs
in
addl
sub
cmpsb
cmpb
xor
fcmovb
in
das
inc
add
push
and
inc
pop
lods
mov
jp
mov
cmc
push
sbb
loope
call
xlat
adc
out
cli
add
sbbb
mov
lret
jecxz
add
test
cmp
push
and
add
adc
jge
ljmp
popf
cmp
ds
repz
jns
adc
dec
mov
jg
lds
xchg
lods
je
jg
cmpl
js
ja
and
loope
fisubrs
push
push
adc
out
pop
loop
and
jb
loop
sbb
add
jl
mov
mov
mov
xor
inc
out
pusha
dec
lahf
mov
inc
arpl
idiv
or
jno
mov
call
loope
dec
mov
shrl
outsl
std
push
incl
iret
xchg
jp
inc
xor
les
jo
ja
mov
mov
sar
das
xor
stc
mov
xchg
or
adc
adc
jno
and
inc
mov
data16
xchg
pop
jp
fildl
inc
imul
in
decl
push
mov
imul
add
out
push
aaa
icebp
or
sub
mov
out
add
fistl
add
jge
push
lahf
in
mov
incl
std
push
lods
or
das
pop
mov
mov
mov
xlat
out
pause
add
xchg
mov
mov
lds
lock
cmp
mov
add
rorl
negl
imul
adc
fsts
add
movsl
xor
mov
stos
adc
stos
dec
cmpb
jmp
repz
pop
xchg
add
cmpsl
sbb
push
add
std
int3
adc
sbb
add
add
inc
xchg
and
xor
lea
mov
add
pop
push
icebp
leave
push
scas
loope
cmpsl
negb
push
ja
pop
stc
repz
xor
pop
ret
and
addr16
sbb
jl
and
test
in
daa
shlb
cltd
push
lret
inc
rcr
mov
in
jo
int3
bound
dec
pop
jecxz
xor
popf
lods
pop
push
push
jo
inc
jo
sub
pusha
ret
imul
test
in
nop
in
mov
inc
and
sarl
decl
lcall
add
insl
pop
mov
ljmp
jns
es
cmp
mov
mov
push
frstor
rcll
repz
cwtl
sbb
test
loopne
xchg
xchg
push
cmc
imul
leave
pop
push
push
sti
inc
mov
stos
push
or
cld
and
scas
add
test
xlat
xchg
es
add
dec
mov
pop
cli
or
and
je
lcall
cmpsb
xchg
dec
inc
sub
push
mov
pop
cmpsl
movsb
and
inc
push
fwait
sbbb
and
jb
ss
mov
fcoml
jle
jne
ret
orb
scas
mov
mov
ja
push
cmc
dec
sahf
xchg
subb
lea
ret
xchg
sarb
jno
xor
in
sbb
lds
leave
sub
add
mov
cmpb
jge
clc
in
test
push
es
fisttpl
cmp
in
push
sbb
dec
aam
lcall
lcall
inc
dec
xchg
syscall
iret
jl
sub
inc
xchg
outsl
lods
stos
mov
sub
scas
rolb
push
insb
js
loopne
mov
pop
mov
sub
push
jge
mov
or
cmp
jbe
add
jecxz
mov
lods
jl
dec
outsb
addl
sbb
dec
sbb
inc
or
and
cli
or
decl
adc
jo
xor
dec
ror
enter
dec
jg
or
adc
orb
rcll
cmp
pop
rcrl
stos
lcall
sbb
push
aad
cmovle
push
push
dec
addl
dec
inc
xor
cmp
push
les
fsubp
out
xor
sbb
clc
cmpsl
or
ffreep
jno
ss
sbb
jns
pop
loop
sarb
mov
xor
jmp
ret
mov
sbb
and
pop
inc
fwait
inc
out
aaa
loopne
adc
fldl
lods
or
stc
sbb
or
add
xor
loope
test
xlat
add
push
sbb
icebp
adc
adc
inc
fldl
inc
neg
jmp
rcll
or
add
adc
roll
aam
sbb
xchg
mov
cli
ja
add
stos
std
aas
sub
dec
and
xchg
pop
mov
sub
xchg
inc
xchg
jmp
shl
pop
lret
mov
mov
ud2
fs
mov
cmp
jmp
dec
dec
jg
incl
jp
loopne
mov
fadd
jns
mov
aaa
add
inc
insl
daa
fisttps
cld
ja
mov
mov
out
mov
adcl
incl
out
fwait
inc
mov
addl
mov
adc
pop
test
pop
mov
imul
sub
cmp
shll
and
psubsw
mov
dec
jb
cmc
and
aas
pop
decl
mov
xlat
aam
adc
jle
addr16
sub
ljmp
test
aad
sbb
decl
and
cmpsl
pop
jmp
loop
xor
les
sbb
add
mov
sahf
mov
das
jno
mov
jbe
daa
sbb
and
and
lahf
xchg
incb
call
xchg
pop
push
bound
jnp
shrl
outsl
or
pop
xchg
sbb
jg
movsl
pop
lret
and
aas
popa
leave
mov
int
das
add
scas
jo
mov
xchg
inc
ljmp
jg
mov
push
fbstp
inc
leave
pop
fucomip
xchg
adc
mov
js
sub
cli
sub
or
add
sub
shll
shlb
cmp
les
std
lret
shlb
je
jge
push
xchg
inc
mov
dec
inc
test
pop
jp
inc
inc
lcall
mov
in
rorl
mov
repz
fdiv
push
fsubl
mov
push
and
aas
mov
bound
shlb
fs
jg
out
add
test
xlat
and
inc
mov
mov
cltd
pop
lret
jmp
bound
insb
jmp
dec
cld
das
jo
adc
jecxz
sub
or
xchg
into
adc
fisubrs
push
mov
test
cmp
movsb
adc
lea
mov
fs
jmp
pop
or
and
sub
mov
fcmovb
mov
fwait
bound
dec
mov
inc
pop
in
and
lods
adc
jg
js
and
lods
jmp
mov
adc
mov
xor
jp
jmp
adc
mov
sub
inc
push
call
or
fcmovnb
int3
in
loop
push
or
outsl
xor
cmc
xor
pop
gs
lock
lahf
jmp
imul
lea
or
mov
pop
into
add
test
out
popa
and
test
icebp
push
rol
sar
repnz
nop
movsb
ds
nop
sbb
and
ds
fnstsw
push
add
cmp
lret
mov
outsl
sbbl
sar
stc
xor
xchg
mov
shll
ljmp
fildll
dec
xchg
aam
scas
pop
dec
xor
mov
push
loop
clc
jl
mov
cmp
xchg
pop
cld
pushl
cs
cmp
push
dec
lcall
bound
decl
pushf
dec
lds
out
and
mov
imul
bound
loopne
test
add
aad
or
popa
ret
xor
mov
xchg
and
dec
pushf
pop
fsts
adc
repz
inc
or
mov
ljmp
inc
cmp
add
sbb
sbb
out
cmp
adc
sub
xor
stos
add
push
cmp
or
aas
push
and
xor
mov
inc
cmc
scas
data16
clc
ds
push
cwtl
pop
or
and
icebp
pop
les
test
adc
adc
sbb
and
popa
stos
mov
ret
int3
mov
mov
sub
pop
sub
icebp
hlt
stc
add
mov
js
add
es
sarl
aas
adc
jns
ret
cmpb
push
incl
call
imul
sti
add
cmp
push
sub
sti
fs
daa
jb
sti
mov
xchg
adc
cmp
sub
dec
xor
aas
sub
push
push
addr16
cmp
sub
mov
out
sub
pusha
filds
hlt
test
les
hlt
jo
add
sbb
jl
clc
ffreep
pop
cmp
pop
sbb
jge
dec
call
test
xor
stos
mov
fcos
lock
aas
adc
and
push
out
lahf
lcall
inc
repnz
jb
gs
adc
rclb
adc
test
adc
xchg
pop
test
lock
jmp
xor
mov
mov
out
sahf
pop
std
add
cwtl
inc
test
subl
pop
bound
adc
jge
mov
mov
or
or
seto
out
cwtl
loope
mov
rcrb
xor
pop
mov
clc
test
pop
fs
lret
pop
sub
pop
add
dec
shlb
pop
jg
loop
xchg
cmp
or
jb
add
fdivr
out
cmp
insl
cmp
adc
dec
mov
inc
cwtl
xchg
fwait
outsl
in
mov
inc
jle
popa
mov
push
lock
mov
out
stc
adc
cli
sbb
dec
cld
aas
dec
or
fs
nop
rcrl
push
stos
inc
inc
inc
mov
rcll
testb
fadds
mov
cmp
jo
xchg
or
orb
mov
inc
adc
gs
or
xchg
bound
es
inc
add
test
inc
adc
dec
xor
xchg
das
jo
pop
fwait
push
lea
outsl
mov
in
pop
dec
xor
pop
aad
pop
mov
int
and
adc
pop
push
inc
add
js
add
sbb
xor
sub
or
inc
cmp
lret
jmp
gs
mov
fistl
adc
cld
and
add
adc
lock
outsl
add
insl
and
add
push
cmpb
and
pop
adc
and
mov
and
inc
mov
and
cmp
bound
add
sbb
adc
add
lcall
jle
inc
jg
add
mov
jp
add
add
sub
dec
fisubl
inc
mov
lret
mov
mov
test
or
adc
rorb
js
popf
mov
push
jnp
mov
pop
push
jmp
std
or
mov
mov
andl
in
ljmp
pushw
leave
xor
cmc
push
les
inc
mov
inc
sub
mov
adc
scas
cwtl
push
pop
and
inc
xchg
cltd
push
rcrl
inc
rol
rorb
pop
ret
add
out
fistps
or
mov
cmc
scas
inc
lods
in
sbb
cmp
add
push
push
lahf
xlat
or
push
not
dec
or
dec
ja
addb
icebp
in
pop
out
pop
test
jge
ret
xor
movsl
adcb
xchg
aam
dec
mov
fucomp
and
mov
dec
cmp
dec
hlt
repnz
pop
adc
sar
and
or
xchg
inc
push
outsl
das
ret
test
xchg
scas
or
xchg
mov
push
clc
add
pop
mov
xchg
pop
aaa
pushf
lds
enter
push
mov
sbb
sub
adc
js
outsl
push
adcb
sub
sbb
test
daa
pushf
cmpb
cmp
push
stos
push
das
pop
add
clc
xor
push
stos
movsl
cmp
adc
stos
push
cwtl
pop
fldl
mov
cwtl
push
adc
test
or
jmp
cld
mov
movsl
pop
test
fsubs
subl
cmpsb
pop
mulb
cltd
sbb
aas
and
stos
jg
cli
andl
or
xor
pop
cs
imul
std
jo
js
test
icebp
divb
das
adc
sub
jge
mov
mov
movsl
or
dec
mov
add
loop
jne
testb
cmp
loop
mov
imulb
std
test
sub
pop
movsb
mov
js
push
pop
push
out
and
xorb
xchg
jp
jle
mov
test
iret
stc
mov
lods
mov
addl
cs
mov
dec
movsl
mov
iret
mov
mov
mov
cmp
addr16
scas
movb
mov
icebp
jg
or
shll
mov
pop
fisttps
inc
aaa
ret
lea
ret
or
inc
jge
sbb
lcall
add
lea
push
mov
sti
dec
mov
sub
shlb
jge
or
ljmp
add
sbb
mov
push
pop
inc
jae
dec
push
adc
cli
push
repnz
popf
pop
cmc
cwtl
sti
imull
cld
out
mov
dec
pop
lods
add
aaa
mov
repz
test
pop
loopne
fbld
push
adc
inc
outsl
das
cld
adc
sub
inc
imull
mov
xchg
cmpsb
test
ret
adc
lock
dec
lock
dec
xchg
or
test
adc
mov
ds
add
xchg
in
inc
pop
inc
pop
xchg
jno
jns
int
inc
ljmp
dec
loopne
je
dec
jg
inc
push
test
mov
incl
movsl
or
pushf
add
jp
adc
and
fcoms
lahf
inc
xorb
test
inc
inc
leave
loope
fmull
sbbb
dec
jo
jmp
or
nop
sarb
push
cmpsb
pop
outsl
inc
sbb
adc
cld
mov
cmp
cmp
pop
inc
add
and
dec
add
cs
push
xchg
add
push
mov
xor
dec
add
fadds
gs
fwait
daa
mov
test
push
in
xchg
inc
cmp
das
jne
inc
pop
or
scas
xlat
jno
outsl
sbb
inc
push
push
jne
sbb
scas
call
mov
ja
dec
push
add
mov
rcrl
dec
lea
hlt
lcall
and
cld
add
roll
aad
mov
nop
add
pop
into
inc
je
push
mov
mov
xchg
loopne
mov
cli
xchg
bound
adc
int
mov
ja
cmp
and
addr16
jg
ret
xchg
jg
and
sbbl
aam
lds
xor
pushl
xor
cmp
in
or
mov
shll
mov
icebp
aaa
fnstsw
inc
xchg
or
push
call
rolb
cmc
adc
or
cmp
ja
push
push
sbb
mov
popa
call
or
cmc
fcmovnb
push
cld
cwtl
xchg
leave
push
add
pushl
xchg
cli
arpl
and
push
sarb
mov
in
jg
adc
dec
mov
lea
inc
and
push
or
pusha
hlt
bound
repnz
jg
call
push
xchg
sbb
sub
mov
lret
call
adc
mov
ret
sahf
dec
or
mov
push
imul
add
xchg
test
adc
pop
lret
ljmp
lock
push
xor
sahf
and
je
mov
js
clc
add
pop
ljmp
mov
mov
jmp
and
decb
cmp
outsb
sbb
sbb
inc
call
lods
or
sbb
rcrl
mov
mov
outsl
pop
test
fdivp
clc
sbb
sbb
sbb
cmp
mov
rcr
test
sbb
pop
fdiv
outsl
mov
loopne
mov
mov
push
je
call
decl
in
movsb
adc
xlat
jbe
jmp
cwtl
test
and
xchg
mov
cmc
hlt
adc
aaa
sti
add
inc
jnp
popa
mov
rolb
call
jg
push
or
mov
lods
enter
enter
pop
imul
cli
sbb
wbinvd
std
add
jecxz
mov
imul
test
clc
push
mov
rclb
jnp
or
dec
push
dec
insl
test
dec
mov
pop
pusha
add
mov
iret
inc
xor
imul
popf
pushw
test
movsb
lcall
jnp
mov
jge
cld
sbb
and
cld
mov
push
and
cmp
pop
adc
mov
cmpl
movsb
sub
or
mov
jle
rolb
mov
and
movsl
jmp
aas
test
jns
ljmp
lea
out
fdivl
shrb
mov
cmp
movsb
jle
lahf
fs
sahf
or
lods
adc
pop
fsts
cltd
out
pop
inc
or
iret
inc
adc
bnd
adc
and
js
push
push
data16
subb
adc
mov
lcall
out
add
or
xor
repz
lea
repnz
mov
dec
or
ljmp
repnz
push
xchg
add
repnz
decl
adc
adc
or
faddl
daa
sbb
adc
mov
clc
cmp
jp
jns
add
ret
andl
sbb
push
push
loope
movlps
cmp
xchg
jmp
sub
mov
das
insb
push
rolb
lcall
in
add
daa
stos
roll
stc
ljmp
push
ja
cmp
fmull
pop
add
fbld
mov
xchg
push
cmp
test
mov
push
or
std
mov
jle
and
es
addb
mov
adc
hlt
add
jg
push
lahf
mov
xchg
mull
pop
push
rcrl
xlat
and
in
incl
add
xchg
cli
xor
fwait
in
or
lods
movsl
std
lcall
pop
aaa
inc
push
clc
pushf
lcall
pushl
xchg
sub
les
loopne
mov
cs
clc
pusha
cmpsb
add
inc
lcall
sar
adc
shlb
sar
nop
xorl
out
sbb
jg
inc
incl
testb
push
rorb
dec
xchg
jle
add
push
jmp
movsl
xchg
xchg
repnz
pop
test
pop
push
cld
mov
out
aad
iret
sarl
sarb
lcall
mov
xchg
adc
mov
or
mov
iret
add
out
fisttps
add
bound
mov
jbe
push
imul
adc
and
mov
sbb
fists
and
push
fdivr
fisttps
enter
lock
dec
les
inc
ljmp
xchg
adc
push
aam
push
inc
pushl
mov
pushf
pop
xchg
stos
sahf
push
lea
jne
add
cli
pop
mov
mov
add
pop
mov
out
icebp
push
sbb
pop
pop
in
push
push
fldt
dec
xchg
add
dec
cmpsb
add
push
mov
ret
ret
mov
add
mov
jg
lds
addl
ret
jp
jb
xor
and
ss
pop
insb
test
mov
xor
inc
pop
sub
push
incl
icebp
pop
add
in
scas
popf
mov
jg
add
adc
andb
pop
and
jae
fsubs
xchg
mov
out
call
sub
fisttps
popf
popf
es
add
mov
adc
pop
inc
add
add
jg
sub
jp
pop
cmpb
addb
stos
fildl
rcrb
push
mov
and
aaa
dec
inc
scas
xor
int
or
aam
jnp
cwtl
enter
xchg
jo
out
sbbb
xor
pop
test
and
idivb
or
fmull
sub
mov
xor
stos
clc
dec
inc
mov
stos
mov
or
mov
fsubs
jle
jno
add
dec
incl
das
das
xor
jb
mov
adc
xchg
pop
dec
mov
sbb
xchg
aaa
xor
mov
rcrb
jmp
jmp
cmp
decl
inc
fdivrs
jmp
pushf
mov
dec
lods
inc
inc
cmpsb
mov
scas
dec
ja
jbe
ds
xchg
std
sbb
cmp
xlat
push
decl
inc
cltd
fildl
data16
punpckhbw
icebp
sbb
loopne
jp
ss
fxam
sar
decl
dec
or
test
ret
sbb
mov
ret
add
jecxz
fisttpl
inc
leave
movsb
adc
lods
mov
jp
cmp
call
loope
cs
xchg
shlb
mov
xchg
adc
rorl
jmp
orl
sbb
in
xchg
mov
pop
clts
adcl
pop
cli
test
add
ret
sub
adc
mov
push
and
mov
mov
std
stos
sbb
ljmp
jg
icebp
xor
pop
fdivs
js
loop
out
lcall
sbb
sbb
outsb
call
dec
dec
jmp
xchg
test
aad
fdivrp
inc
addr16
pop
incl
mov
and
mov
imul
mov
loope
inc
out
xchg
dec
pop
pop
xor
adc
or
pushl
and
jb
sbb
stos
jg
cli
fbld
and
sub
xchg
jo
icebp
stc
push
pop
clc
pop
adc
xor
cmp
pop
in
call
add
stc
in
cmp
mov
push
cld
je
jl
jno
shl
dec
lock
popa
cmp
or
cwtl
leave
cmp
xlat
xchg
pop
test
pusha
sti
mov
pop
mov
xchg
jns
or
and
ret
and
adc
and
sub
mov
push
inc
call
dec
add
xchg
mov
sbb
divl
xchg
push
outsl
mov
mov
mov
mov
cwtl
cs
mov
mov
inc
sub
lcall
adc
mov
jg
mov
cmp
sub
imul
add
jl
fbld
mov
ljmp
std
test
and
mov
add
imul
or
jbe
jge
test
mov
call
das
popf
fadd
inc
xchg
or
jmp
push
shlb
repnz
add
out
jae
cmp
dec
in
sbb
mov
mov
mov
cmp
mov
mov
push
mov
cmp
insl
add
call
xchg
adc
insb
incb
stos
test
sub
repnz
orb
jmp
test
push
inc
sbb
imul
shll
sub
sbb
lcall
inc
lds
mov
add
sub
and
inc
sub
add
rol
test
inc
adc
fidivrs
fbld
addr16
mov
andb
add
inc
mov
std
mov
in
jg
cmp
rolb
cld
mov
and
bound
enter
mov
push
lret
es
pop
stos
xchg
xor
shrb
ljmp
inc
addr16
cmp
movsl
imul
dec
insl
hlt
pop
aam
pop
mov
lret
push
lds
jle
xchg
cs
mov
push
int
jle
fisttps
lahf
push
push
clc
and
sub
gs
int
pop
movsb
lcall
mov
or
adc
inc
mov
and
add
xor
hlt
inc
icebp
mov
sub
pop
ljmp
ret
andb
insb
mov
mov
hlt
mov
dec
cmp
lahf
insb
cmc
or
xchg
scas
xchg
std
mov
push
xchg
cmp
addb
xchg
cs
and
pushl
ljmp
cltd
roll
inc
push
push
sbb
call
stos
cmp
mov
sbb
stos
imul
pusha
repz
push
add
or
gs
test
aam
mov
sub
cmp
mov
or
jge
and
push
push
mov
repz
pop
or
fists
add
sub
or
cli
test
cmp
or
imul
daa
in
mov
xchg
add
or
nop
push
xor
and
mov
inc
inc
or
xchg
lcall
ljmp
xor
sahf
push
mov
imul
je
mov
and
adc
scas
insb
mov
aaa
clc
dec
push
sub
add
mov
pop
fcomps
mov
add
cmp
mov
xor
pop
mov
add
and
in
in
and
nop
add
xchg
sub
ljmp
das
adc
mov
jb
popf
loope
jno
mov
inc
clc
mov
insb
call
shll
adc
xlat
in
or
call
stos
sub
mov
jo
sbbb
push
stc
inc
jle
rorb
outsl
cld
inc
data16
std
jae
adc
test
fstpl
add
fwait
rolb
sbb
mov
scas
popa
lock
push
push
fadd
stos
sub
jbe
and
inc
out
cmp
pop
in
push
adc
mov
call
xchg
bound
fstl
repz
push
pop
out
sbb
mov
push
shl
xchg
xchg
jge
jbe
and
shll
lods
cmp
ljmp
bswap
ss
cmp
clc
sub
jle
jl
outsl
adc
mov
sbb
nop
std
ret
jle
js
xor
inc
pushl
pop
lods
adc
and
test
mov
adc
lds
sbb
dec
or
lea
loopne
jmp
lods
mov
xchg
sahf
cld
into
mov
lods
lret
stc
lods
fsubr
dec
cmp
xor
sbb
and
dec
pop
or
verr
mov
clc
mov
adc
fdivs
mov
jo
or
call
aas
insb
js
andb
mov
or
out
or
ja
or
pop
push
in
out
inc
jo
shl
lahf
sbb
add
push
fsubs
jmp
adc
sbb
and
add
addl
add
gs
or
test
mov
dec
popa
rorl
sub
movsl
adc
push
cwtl
push
adc
outsl
jg
outsb
adc
add
pop
mov
out
flds
xchg
arpl
lcall
add
pop
cmp
adc
sbb
enter
in
mov
scas
add
sbb
ret
inc
cs
js
loop
incb
mov
loopne
sub
movsb
mov
lods
jns
lcall
push
orl
mov
xor
mov
mov
mov
adc
mov
xchg
cwtl
hlt
pushl
mov
jae
dec
inc
xchg
daa
xchg
lret
inc
ljmp
inc
dec
adc
jne
sbb
mov
push
xchg
adc
cld
das
cld
dec
sti
cmpb
iret
pop
in
add
adc
lcall
mov
add
xlat
mov
lock
sub
inc
gs
adc
sbb
push
sub
mov
lea
mov
iret
pushf
sti
mov
arpl
cs
lcall
dec
pop
sub
jns
inc
mov
nop
mov
jge
and
stos
push
das
sti
inc
movsl
sbb
sbbl
inc
incl
aaa
xchg
clc
jbe
insb
js
fs
push
shlb
adc
in
lcall
pusha
stos
scas
mov
xor
shrb
xchg
fidivs
bound
fstpt
or
iret
inc
inc
lret
pop
cld
or
lret
or
sbb
pop
mov
adc
jns
std
xor
roll
ljmp
xchg
jecxz
and
adc
mov
jg
in
int
sbb
push
inc
pushf
fdivrl
stos
xchg
xchg
test
call
mov
mov
imul
ffreep
sub
lcall
sub
popf
xchg
rclb
inc
jbe
fstpl
sub
push
outsl
mov
sbb
enter
xchg
test
in
sbb
mov
aam
jp
testl
enter
add
das
icebp
add
aas
addb
add
je
imul
add
das
scas
iret
aaa
xor
dec
cmp
adc
sub
xlat
mov
sub
pop
fnstenv
inc
jl
fndisi(8087
sbb
test
sti
add
or
add
adc
xchg
aaa
cmp
addr16
popa
and
cmp
pop
pop
or
sbb
push
ficoms
ret
inc
jg
mov
movsl
pop
and
nop
mov
sbb
rolb
mov
add
sti
enter
push
aad
movb
rcrb
sub
in
inc
or
xor
or
lcall
ja
push
sub
pop
shrb
push
lea
mov
cvtdq2ps
fists
fstpt
ror
das
cltd
in
jle
cmpl
adc
clc
dec
into
cwtl
stos
mov
out
mov
out
sub
movb
adc
lods
cmp
shlb
call
ds
rcrl
jl
movsl
and
clc
ret
scas
jp
nop
add
les
add
adc
cli
adc
xchg
cmp
dec
add
notb
in
in
aas
xor
scas
inc
mov
cld
jne
add
sbb
adc
vmaxsd
mov
or
pop
push
push
pop
pop
push
cmc
push
aad
adc
fldl
hlt
pop
fldt
movl
test
dec
push
in
xchg
out
sub
pop
mov
mov
mov
xchg
shll
ljmp
inc
inc
outsb
mov
mov
cmc
add
add
inc
shll
lret
push
sti
jmp
pop
cmp
xor
xchg
mov
inc
rorb
in
test
sar
push
movsl
xchg
jo
test
or
ret
std
xchg
lcall
stc
mov
add
inc
leave
add
xor
les
decl
dec
cmp
addl
add
xor
and
jl
gs
inc
add
pop
dec
aaa
mov
ret
clc
xchg
popa
jle
or
or
lcall
mov
hlt
xchg
inc
or
and
jecxz
das
shrl
mov
jb
or
test
sub
das
push
inc
inc
or
push
loopne
nop
sub
stos
mov
pop
stos
stos
and
jg
call
shlb
icebp
jo
add
imul
pop
imul
push
aad
cmpsb
cwtl
mov
repnz
sub
add
iret
iret
adc
sub
lods
cmpsl
hlt
mov
or
add
idiv
jl
fiaddl
and
aas
jg
mov
je
xchg
xor
jb
xchg
cmp
call
and
xchg
push
xchg
in
icebp
repnz
movl
mov
pop
insl
lahf
rclb
push
les
icebp
mov
inc
leave
add
cmp
sarb
push
mov
inc
cld
into
out
fildl
add
cld
incl
daa
lock
ljmp
aam
lret
in
sub
or
das
das
cmc
outsl
xchg
imul
sbb
and
mov
sub
shlb
insl
mov
push
clc
scas
aaa
int
pushl
into
sbb
fmull
dec
sar
push
dec
movups
cmp
std
sbb
aaa
clc
lds
and
lret
js
sbb
dec
call
mov
mov
sub
hlt
hlt
lea
int3
dec
inc
cwtl
pop
test
fistpl
cli
outsl
xchg
push
movsb
jae
add
push
out
mov
aam
inc
mov
jae
shr
push
push
or
inc
ret
into
fbstp
es
rcl
lcall
and
dec
outsl
mov
shr
or
sbb
inc
mov
in
pop
add
aaa
cmovl
je
cli
pop
loop
lret
and
bound
call
push
mov
pusha
call
decl
loopne
sbb
xchg
imul
mov
ficoml
dec
pushf
or
inc
es
cmp
adcb
fs
mov
mov
lds
push
pop
pusha
and
pop
cwtl
adc
pop
mov
pop
addr16
sbb
dec
cmp
pushf
jns
shl
test
pushl
lea
xor
jmp
add
es
and
push
xor
enter
bound
pushl
rorl
mov
pop
add
decl
pop
cmp
mov
jo
xor
mov
add
cmp
xchg
nop
cmp
xor
mov
scas
inc
in
stos
mov
pushl
sarb
inc
mov
lock
lock
dec
outsb
loopne
adcb
lea
add
in
dec
shrl
fs
mov
call
jno
pop
xor
cmp
add
sahf
or
pop
in
dec
ljmp
mov
mov
and
das
xor
cli
pusha
xchg
inc
pop
mov
pop
xor
jmp
loope
pop
orl
insl
push
jecxz
jb
sahf
fpatan
and
mov
repz
add
insb
inc
or
cs
sub
mov
cmp
inc
stos
mov
decl
scas
and
enter
inc
jg
or
jg
fs
cmp
xchg
and
filds
adc
and
jne
andb
fldcw
sub
xchg
fdivrs
notl
fbld
sub
out
pop
pop
ds
add
add
pop
sub
push
lret
das
jg
adc
test
sti
or
xchg
iret
or
xchg
add
ljmp
mov
sbb
sub
pusha
lahf
and
mov
lret
sbb
punpcklbw
jno
pusha
repz
adc
push
inc
inc
mov
test
enter
jp
or
pop
pop
enter
dec
push
aad
xchg
xor
xlat
bound
incb
mov
outsb
call
nop
jne
pushf
dec
lahf
mov
outsb
and
dec
or
push
xchg
xchg
mov
push
mov
lds
and
adc
jo
xchg
out
add
sbb
mov
add
add
sbb
add
xchg
xor
cmp
jle
in
mov
and
push
xor
sbb
jecxz
lahf
sub
cwtl
nop
sub
sbb
psubusw
das
jnp
add
popl
scas
bt
cmp
xchg
xchg
pop
add
mov
add
xchg
fildl
jle
pop
jmp
popa
sbb
sbb
xchg
jp
sub
xor
inc
cmp
sub
push
call
xchg
fcomps
rcll
mov
sbb
in
in
pushf
mov
daa
pop
mov
movsb
sbb
out
les
or
shll
test
inc
add
lods
or
in
jg
icebp
inc
inc
xor
xor
leave
sbb
or
add
mov
int3
sub
push
subb
xchg
push
fiaddl
leave
and
fisubrl
cld
lahf
outsl
test
add
decl
ret
pop
clc
das
iret
repz
loop
lock
jne
lahf
in
repz
adc
dec
jno
xchg
pop
sbb
mov
inc
addr16
push
xchg
push
push
ja
xchg
xchg
cmp
or
jo
adc
cmpsb
xchg
clc
das
pop
fs
mov
add
sar
fucomi
jmp
mul
xchg
test
sub
out
or
sub
add
jg
divb
add
repz
and
call
inc
add
push
aaa
int3
pop
movsb
mov
jmp
pop
push
inc
shrl
punpckhwd
cwtl
lods
arpl
adcl
pusha
inc
inc
dec
in
jl
push
ficomps
aad
in
sub
sub
add
stos
jg
xchg
mov
dec
mov
pop
jno
pushf
and
clc
lea
xchg
push
out
gs
aam
rcl
popa
jmp
jmp
pop
pop
pop
xor
rorb
inc
into
xchg
sub
inc
jmp
or
inc
dec
or
dec
hlt
mov
push
cmp
psubsw
lock
clc
or
or
pop
test
mov
mov
popa
mov
ja
pop
lcall
cld
leave
aad
adc
mov
bound
icebp
pop
clc
call
mov
test
and
sbb
push
lret
and
sbb
push
enter
incl
mov
rcl
in
pop
fnstcw
call
inc
rcrb
add
sbb
or
scas
mov
call
and
mov
adc
popa
nop
fs
fcomp
sbb
es
incl
or
mov
jno
pminub
mov
sbb
dec
xchg
outsb
fsubp
test
pop
fimuls
push
es
jo
sahf
ljmp
fmull
hlt
or
cltd
xlat
mov
xorps
fdivrl
mov
cmp
mov
push
jb
push
stos
xor
xchg
xor
jnp
xor
jge
sbb
addr16
and
xor
mov
mov
sub
lock
test
xor
es
imul
aaa
dec
arpl
stos
cmp
push
fs
aaa
jne
int3
adc
and
iret
adc
call
lock
movsl
test
jecxz
adc
stos
dec
and
aam
xchg
aas
cmc
and
out
dec
xchg
negl
jbe
push
mov
loope
jno
aas
pusha
aas
cmp
sbb
push
icebp
das
inc
lret
mov
and
adc
sbb
pop
or
jp
jmp
cmpsl
adcl
insb
aas
push
or
adc
dec
decl
sti
dec
jecxz
roll
and
les
and
push
loopne
add
pop
nop
mov
inc
cmp
cmp
xchg
shrb
sub
enter
cmpsl
and
mov
imul
std
pop
dec
sbb
cmp
int
and
pusha
int
pusha
mov
xor
and
js
cwtl
xchg
dec
test
dec
or
push
xchg
leave
adc
adc
mov
and
daa
add
mov
mov
sbb
pushf
pop
and
push
iret
inc
xchg
clc
clc
incl
push
test
mov
shlb
hlt
push
fucomip
call
and
push
inc
scas
aaa
adc
incl
inc
lods
or
or
pusha
mov
push
sub
xchg
jb
aaa
incl
jb
sbb
push
push
xchg
in
xchg
push
sbb
pop
das
pop
lea
mov
or
into
je
sbb
inc
mov
nop
out
push
inc
out
mov
inc
pop
in
cmc
out
pop
test
add
int3
dec
inc
jmp
mov
ljmp
push
ret
push
mov
imul
sub
das
cld
push
jmp
orl
sub
mov
lcall
xchg
mov
xlat
jbe
and
stos
jns
loop
stos
fwait
mov
dec
ljmp
cmp
xchg
or
cmc
mov
js
adc
gs
hlt
mov
rcll
push
add
pop
cmp
xor
xor
xor
jmp
xchg
fcmovnu
sub
cmpsb
mov
insl
scas
js
mov
sbb
cmp
pushl
data16
add
hlt
mov
push
outsl
mov
xor
xchg
ret
or
and
add
and
mov
js
pop
call
mov
std
ljmp
aaa
pop
fs
adc
cmpsl
rcrl
push
inc
add
push
subb
xchg
cmpb
in
sub
lea
push
int3
mov
loop
adc
dec
daa
pop
test
lods
lea
sbb
std
scas
push
sub
sub
sbb
mov
outsl
push
repz
sub
sbb
pop
cld
mov
addr16
stos
ljmp
js
add
sub
cmc
push
call
push
mov
add
and
dec
cmp
adc
sub
jmp
fistpll
inc
out
lods
sub
bound
inc
fcomp
out
adc
cmc
push
mov
push
cmp
aam
scas
andl
ljmp
cmp
add
cmp
aam
xor
mov
add
inc
adc
rcr
fcomps
push
and
sbbb
outsl
mov
pop
xchg
sbb
jge
mov
das
stc
inc
or
loope
cmc
lea
mov
into
dec
add
mov
gs
ss
das
adc
gs
nop
jb
inc
dec
mov
mov
aaa
jp
and
loopne
push
in
dec
inc
ret
mov
mov
and
test
ret
out
imul
xorb
test
lret
pop
rolb
decl
sbb
clc
fistpll
xchg
xor
dec
sub
pusha
dec
sub
jp
aam
int
xorl
stos
jle
stos
jge
xchg
dec
and
cli
jg
and
adc
pop
test
scas
cmpsb
dec
push
hlt
outsl
inc
and
cmpsl
popf
ror
sbb
adcl
cltd
repz
outsb
popf
push
or
mov
cmpsl
xchg
int
sbb
arpl
lcall
inc
sbb
pusha
loop
xchg
dec
mov
in
test
push
incl
stc
gs
arpl
or
pushf
enter
push
in
add
stos
divl
incl
lods
es
call
and
adc
mov
sub
insb
mov
dec
pop
sbb
pushf
mov
adc
sbb
jg
out
das
xchg
lds
pop
aas
or
push
push
pmaxsw
in
rcll
fdivrs
inc
adc
subb
decb
es
adc
xchg
xchg
popa
cmp
jns
push
shrb
inc
and
icebp
fnstsw
stc
jno
fnsave
xor
sbb
jecxz
jge
ljmp
cmpl
or
ja
mov
adc
mov
lock
push
fdivrl
jg
sar
or
xor
cmp
or
movsb
repnz
gs
adc
out
inc
pop
inc
mov
imulb
or
adc
jecxz
hlt
test
xchg
dec
das
test
jne
into
cld
call
inc
push
cwtl
jbe
imul
aaa
inc
jnp
notb
into
stc
or
sbb
sarl
outsl
aam
lods
cmp
cmp
leave
repz
add
je
jnp
in
lahf
test
xchg
xchg
daa
cli
xchg
mov
sbb
push
push
lea
das
sub
push
jb
xchg
lea
mov
jnp
cmp
in
sub
notb
pop
loop
and
lcall
adc
cltd
shrl
incb
das
hlt
and
sbb
jns
and
cwtl
shlb
and
add
or
outsb
pop
fs
sub
jno
into
fsubs
sbbb
mov
xchg
adc
push
test
fwait
push
lea
aaa
imul
int3
dec
sbb
add
mov
mov
and
inc
jo
dec
sbb
stos
outsb
aad
jg
fucomip
ds
popa
sahf
cltd
icebp
or
and
add
test
or
insl
mov
inc
push
je
and
popf
mov
sbb
adc
xor
inc
test
movsl
push
cli
mov
mov
cwtl
aad
movsl
ja
push
inc
std
mov
dec
pop
sbb
pusha
ja
sub
repz
cwtl
cmc
in
sbb
xlat
out
into
daa
xlat
bound
ret
add
add
shrb
adc
dec
inc
daa
pop
cmc
addr16
or
mov
inc
jbe
mov
jge
mov
cmp
dec
das
mov
sub
push
dec
std
aaa
outsb
mov
ds
xchg
inc
add
leave
cmp
fnstcw
jbe
dec
nop
mov
fisttps
jno
test
inc
push
shlb
cmc
negb
mov
jbe
arpl
push
sti
fistpll
int
dec
loope
fidivrs
mov
loope
fistpll
inc
std
push
inc
push
xor
or
test
mov
and
adc
loopne
out
outsb
or
or
pop
das
fst
movl
dec
push
negb
in
mov
test
bound
subb
test
pop
fdivrp
pop
pushf
mov
iret
inc
xchg
adc
mov
mov
jne
xchg
mov
sbb
outsb
in
and
je,pt
test
cmp
enter
pop
sub
and
sub
das
push
xchg
mov
in
cmpsb
mov
mov
aas
popf
jae
cld
xor
insb
das
xor
lods
fcompl
cmpsb
push
out
mov
shll
sbb
or
cmp
ret
adc
fcmovnu
lahf
cmp
or
push
jno
jns
xchg
jb
scas
add
jns
call
adc
out
pusha
push
mov
and
jbe
lods
add
fwait
adc
cli
and
adc
das
hlt
inc
push
push
xchg
sub
pop
orb
cli
pushf
punpckhbw
jp
lock
lea
jge
stc
fnstenv
push
or
cli
sbb
xlat
jp
jne
xor
shr
aaa
inc
inc
loope
outsl
rclb
fmuls
add
jno
mov
or
gs
aad
and
out
sbb
in
push
or
icebp
push
xchg
xor
jmp
xlat
std
xor
pop
add
mov
fdivl
icebp
cmpsl
ja
mov
mov
push
jg
push
outsl
bnd
or
inc
andb
inc
inc
fmul
push
add
lcall
mov
push
sub
mov
fisttps
nop
nop
mov
jge
pop
in
out
pop
repnz
pop
mov
dec
push
jno
adc
cmp
jecxz
mov
mov
lahf
mov
jno
imul
xrelease
mov
mov
push
push
stos
jmp
stc
push
add
ficomps
and
inc
and
push
js
sbb
dec
loope
and
mov
js
subb
enter
push
push
stos
mov
bound
aaa
sub
aam
sub
sub
fbld
mov
adc
sar
aas
ret
ljmp
sbb
cmpsl
mov
daa
pop
xchg
repz
das
jno
push
cmp
ror
dec
enter
outsl
clc
pop
inc
lcall
mov
scas
dec
cld
mov
hlt
jmp
cmp
mov
xor
and
cli
jecxz
sbb
outsl
std
out
adcl
sarb
mov
aad
sbb
push
insb
and
xchg
fisttpl
iret
fdivr
pop
or
push
leave
pop
inc
xchg
dec
xchg
and
mov
std
or
push
inc
xchg
xlat
xchg
sub
mov
dec
or
ret
inc
inc
lcall
pop
es
ljmp
xlat
sub
xchg
test
test
jecxz
out
loop
sti
ljmp
adc
adc
add
mov
ja
rclb
push
push
inc
inc
or
push
adc
ja
lcall
mov
sbb
adc
mov
std
imul
or
cmp
test
fucomi
pop
scas
jge
jmp
jg
xchg
repz
cld
pop
daa
daa
cmp
sbb
mov
mov
call
jg
ret
sbb
enter
and
add
mov
inc
mov
or
pop
repnz
cmp
mov
jne
lcall
jo
sub
andl
bound
add
into
xor
call
movb
mov
insb
and
add
outsb
pop
mov
mov
mov
sub
ss
pop
inc
addl
sar
decl
push
or
sbbb
cmp
fstpt
push
xchg
inc
mov
sbb
cmc
sub
push
stos
rorl
ret
sbb
ss
mov
pushf
out
xchg
or
mov
sub
call
add
xor
fbstp
xlat
shll
insb
pop
sti
test
mov
test
fwait
push
xor
jecxz
in
pop
pop
mul
das
repz
mov
add
je
shll
int
pushf
push
lcall
jo
dec
cmpsl
lret
jg
dec
pop
mov
clc
rclb
add
sbbb
push
in
cwtl
repz
add
lods
aaa
fstpt
adc
subl
out
lods
or
add
pop
mov
xchg
inc
aaa
inc
paddsb
stos
mov
test
cli
pop
stc
mov
add
mov
call
ficomps
jg
aas
enter
das
and
rcl
mov
fadd
jb,pn
mov
fcmovnb
mov
and
push
das
aas
and
das
push
or
push
cld
pop
xchg
div
pop
test
jle
mov
test
sub
and
shrl
dec
sub
out
hlt
and
decl
je
gs
mov
and
and
xchg
lahf
cmpsl
jg
mov
mov
pop
shll
dec
aas
ret
cltd
ljmp
inc
mov
mov
incl
lahf
cmp
push
mov
xor
push
mov
jno
inc
xor
and
hlt
adcl
mov
jne
jecxz
dec
pop
lods
adc
ret
mov
stos
loop
popf
adc
xchg
sub
pop
fisttpl
fmull
iret
loopne
inc
xor
mov
leave
jo
pop
jns
notl
repz
xchg
add
movsb
insl
mov
cltd
mov
cmp
clc
xor
lods
dec
dec
lret
leave
pop
test
das
mov
fs
push
call
lret
mov
int
aaa
xor
or
push
sub
xor
fmuls
je
test
jbe
test
and
sbb
stos
xchg
cmp
ret
andb
mov
inc
int3
adcl
pop
outsb
or
in
movsl
psubq
cs
daa
xor
scas
clc
and
mov
pop
sbb
xchg
jb
dec
adc
adc
ljmp
push
push
in
ret
out
or
ficompl
add
or
les
adc
das
push
cld
fcmovne
xchg
push
mov
imul
data16
jg
xchg
gs
and
lods
adc
mov
cmpsl
mov
adc
pop
loopne
push
and
add
xor
jmp
sti
add
into
aam
bound
out
inc
movsb
cmpsb
and
call
repz
push
dec
push
sub
repnz
ja
aam
mov
hlt
dec
fsubs
fistl
jg
fistpll
bound
inc
jns
inc
inc
rol
adc
sbb
fcoml
add
imul
ja
test
incl
movsl
cmpsb
mov
iret
mov
fs
mov
fstpt
fchs
movsl
and
sub
aad
inc
jo
pop
cmpsl
addr16
loop
es
adc
call
cmp
fsubl
out
test
out
mov
dec
xchg
jp
mov
xor
subb
jno
pop
std
or
cmpsb
imul
or
sub
pop
imul
idivb
jl
pop
loopne
ret
lret
adc
ss
stos
fmuls
mov
adc
sub
ud2
mov
push
sbb
lea
notb
xor
aaa
cli
lock
mov
lea
sbb
inc
mov
cli
pushl
inc
push
into
and
xchg
xor
loopne
movsl
adc
jbe
xor
dec
dec
out
mov
ljmp
cmpb
stc
cmp
xor
dec
cmpsl
in
pushf
incl
test
and
cld
adc
pop
push
pop
adc
setno
or
inc
jge
orb
cld
ret
jg
jg
cmc
jle
shlb
inc
icebp
push
mov
ret
and
sub
adc
pop
es
push
mov
mov
cs
ljmp
aaa
cmc
iret
xchg
jle
mov
jmp
jmp
pop
inc
jmp
dec
mov
pop
mov
cli
pop
rol
pop
pop
outsb
xrelease
mov
pusha
or
sbb
or
push
pusha
xchg
fstl
sub
daa
addb
dec
popf
sub
scas
jmp
orl
or
popf
push
jns
xor
lods
dec
adc
icebp
or
clc
out
rcl
fsts
mov
sbb
jmp
mov
pusha
enter
ret
adc
repnz
cwtl
add
pusha
xchg
dec
cmc
sahf
xorl
pop
fstl
stos
add
inc
dec
pop
jg
scas
dec
icebp
xor
push
xlat
mov
andl
sar
sbb
sub
adc
mov
jnp
inc
and
cmp
add
stc
mov
adc
pusha
jmp
loope
ja
pop
adc
and
jg
mov
or
adc
loopne
das
icebp
ljmp
sbb
cld
mov
jl
pop
mov
dec
addr16
ljmp
pop
mov
out
and
int
addr16
pop
sbb
fisttps
loopne
jmp
lea
ja
or
mov
pop
inc
lcall
decl
lods
mov
dec
fstp
or
lods
mov
jns
and
jg
incl
in
pop
psrlq
or
pop
int3
inc
inc
and
movsb
inc
cmp
incl
fs
mov
or
push
aas
pop
in
leave
divb
das
xchg
lods
mov
jmp
mov
push
movsb
push
subl
and
lahf
fucomp
xor
and
ljmp
sub
sub
test
out
out
nop
jl
mov
inc
mov
xchg
pop
loopne
lods
aas
dec
out
orb
fsts
mov
mov
add
hlt
ljmp
subb
fidivs
cmpb
sbb
push
sbb
in
sti
sub
les
or
mov
out
aad
sti
test
jp
pop
in
inc
leave
pop
mov
pop
jg
movsl
fs
jge
jg
or
mov
je
jp
pushl
fisubrs
xor
fcmovu
sbb
lahf
mov
mov
aaa
xchg
jnp
or
sub
or
outsl
cs
mov
jae
sbb
and
cmc
call
push
add
stc
es
push
xchg
dec
mov
dec
shrl
lock
push
mov
sub
push
icebp
xchg
int
xor
sahf
repz
stos
les
imul
leave
pop
pushf
out
jns
cmc
mov
push
add
mov
rorb
test
push
inc
jnp
aas
repnz
fadds
jae
push
xchg
mov
sbb
mov
jp
jg
inc
mov
lcall
cmp
call
sarl
mov
push
repnz
sbb
cmp
ds
outsb
fs
lcall
add
mov
inc
lods
decl
in
jb
mov
fistpll
push
cs
subl
js,pt
jne
ret
es
hlt
ljmp
lcall
stc
add
push
mov
outsb
jl
shl
dec
cli
mov
sti
call
jb
pop
int3
mov
fstp
mov
cs
iret
push
mov
dec
sti
xorl
mov
cwtl
das
push
mov
sahf
xchg
dec
stc
xchg
mov
dec
mov
call
ret
push
xor
imul
int
mov
les
cmp
ljmpw
inc
mov
jmp
pushf
andb
mov
lods
or
hlt
sbb
mov
loop
ljmp
push
sti
mov
mov
jns
mov
pop
push
ret
jg
aas
and
bound
out
cs
pop
push
iret
ret
pop
mov
ljmp
loop
or
test
xor
cmp
sub
mov
aam
cmp
dec
fisttps
lock
arpl
clc
mov
pop
pushf
push
ds
lods
ja
sbb
mov
jno
mov
ljmp
adc
aas
push
ja
shl
fimull
mov
incl
lea
repz
jnp
mov
mov
and
add
test
push
cmp
clc
sub
fildll
cld
sbb
dec
pop
daa
into
sub
sub
lods
jp
fisttpll
xor
mov
insl
out
sbb
jae
sub
add
out
and
aas
jbe
das
cld
sti
push
push
nop
inc
mov
andb
and
in
aad
pop
xor
pop
mov
mov
mov
dec
pop
lods
xlat
aas
xchg
adc
ret
push
sbb
push
mov
xor
jg
sarl
lods
dec
cli
ljmp
and
xchg
les
inc
clc
int3
in
sub
loop
pushl
insl
push
push
lock
flds
jge
enter
gs
shll
imul
jmp
jne
pop
sbb
filds
pop
js
divl
pushf
test
mov
push
scas
ljmp
cld
add
inc
cmp
or
popf
nop
mov
mov
shrb
xchg
push
mov
movsl
ja
in
scas
sub
enter
pushl
adc
ds
fcom
cmp
and
mov
mov
push
cmp
shll
jns
fmuls
cltd
lahf
dec
cld
ret
scas
inc
mov
bound
jns
sub
icebp
mov
scas
and
sbb
mov
fstpl
fs
incl
jg
ss
jno
rcr
repz
das
lods
mov
pushf
push
mov
mov
jno
dec
add
ljmp
mov
sbb
sub
cltd
das
inc
push
push
iret
out
inc
xchg
pop
in
mov
cli
mov
js
insb
mov
pop
ror
add
and
xor
std
cmp
lods
lret
outsl
push
aas
jno
mov
lods
pop
out
stc
imul
cmpl
dec
shll
push
adc
icebp
sub
ror
pushl
adc
scas
inc
xchg
sub
je
in
add
sub
xor
mov
cmc
subl
incl
cmp
int
mov
data16
xchg
xchg
lods
iret
jmp
xchg
lcall
push
mov
testb
rcrl
pushl
mov
lcall
sti
test
and
rolb
test
or
inc
lret
push
mov
pushf
cmp
lea
mov
mov
testl
inc
jge
cmp
sub
add
rcrl
dec
decl
push
fs
lahf
xor
lods
push
adc
jns
mov
sub
out
pushl
lods
and
push
inc
xor
mov
mov
scas
fistpll
jne
push
rcrl
cmp
jge
push
out
call
std
sbb
lds
inc
pop
mov
xlat
xor
adc
jno
sub
inc
push
xor
jl
dec
cmp
mov
xchg
icebp
fnstcw
dec
xor
add
mov
add
push
xchg
sbb
mov
mov
mov
xor
xor
and
setle
dec
add
add
inc
ljmp
adc
push
repz
dec
or
pop
push
pop
dec
addr16
pushl
pop
or
mov
pop
push
dec
lds
sub
gs
cmp
pop
loop
cld
ljmp
mov
or
push
mov
stos
dec
call
mov
sahf
push
es
cmp
icebp
and
lods
dec
sub
add
movsb
mov
int
jl
jbe
lsl
aas
fsubl
push
xchg
test
jnp
outsb
ljmp
fidivrl
pop
test
xchg
into
cltd
test
lods
js
dec
ljmp
iret
xchg
ljmp
in
fcoml
or
pop
mov
call
mov
sub
test
repnz
push
repz
mov
xor
idivl
out
inc
pusha
push
pop
ja
adc
dec
rcll
fcompl
xor
add
imul
xor
and
and
pop
cli
call
gs
sub
fmuls
or
or
incl
pop
mov
xor
mov
xor
sbb
in
movsl
js
fidivrl
pushl
pop
in
jle
call
add
xlat
jns
dec
xchg
jne,pt
ss
and
fsubrl
dec
jge
imul
cmp
push
sbb
lcall
jmp
out
adc
mov
subl
or
cmovns
lret
cli
fucomip
mov
aas
lea
inc
fs
leave
mov
sbb
std
inc
mov
mov
repz
or
inc
lea
call
push
inc
test
dec
lahf
lods
lods
adcl
lcall
xchg
jg
jo
and
and
mov
or
les
rcr
sbb
jg
scas
scas
aas
das
imul
jbe
shr
outsb
jle
add
std
pushl
adc
notb
fcomi
push
fs
add
mov
mov
imul
cmp
call
push
out
mov
cmc
xor
sbb
jl
push
hlt
jmp
xchg
mov
lret
or
pusha
movsb
sarl
ljmp
inc
repnz
mov
push
sbb
jle
push
loopne
movsl
add
repz
push
test
fst
sbb
or
push
cmp
sarb
cmp
out
data16
out
or
fcos
dec
adc
in
or
call
test
cli
lcall
fwait
movsl
or
pop
xor
hlt
das
cmpsb
cwtl
push
sbb
or
dec
and
test
jecxz
push
insl
into
jge
xchg
mov
popa
mov
ficompl
fbstp
inc
dec
and
fimull
xor
std
outsb
pushf
cmp
adc
leave
repnz
cmp
lock
mov
jle
loope
xlat
inc
das
call
push
clc
rcll
fidivrl
sub
add
dec
cmc
sub
imul
incl
xchg
leave
push
xchg
pop
dec
movsl
arpl
cmpsl
loopne
inc
and
push
jmp
jmp
loope
cmpsb
int
cmp
loope
pop
sub
jmp
jmp
arpl
pop
clc
cmp
rolb
clc
pop
mov
xchg
jne
sbb
fs
decl
push
xchg
mov
cmc
push
int3
sbb
bswap
mov
pusha
out
jecxz
mov
decl
std
stc
xchg
lcall
out
mov
je
insl
ret
dec
ss
lcall
ljmp
hlt
push
fldt
hlt
aam
lcall
mov
popf
cmp
imulb
lea
xorl
imul
dec
adc
and
adc
lea
js
decl
std
filds
cmp
cs
pop
push
lock
pop
and
jecxz
adc
inc
mov
inc
xchg
jne
jnp
ljmp
inc
adc
fs
enter
adc
je
mov
orb
ljmp
mov
addb
fimuls
jp
repnz
aaa
inc
loop
rolb
popa
cmp
in
fnstsw
ds
inc
jbe
lret
xchg
adc
xchg
or
xchg
outsl
scas
jmp
mov
and
pop
out
sub
aas
push
mov
aad
xor
and
xchg
iret
idivb
call
dec
jle
out
push
sub
or
dec
mov
adc
cli
loop
jne
in
shll
call
jo
scas
xchg
adc
mov
mov
pop
inc
mov
andl
sub
iret
mov
aaa
ljmp
pop
imul
xchg
mov
ret
aas
or
lcall
jbe
cli
in
adc
imul
push
inc
jnp
add
daa
ljmp
mov
bound
push
decl
addr16
lret
xchg
adcl
dec
icebp
cmp
out
lds
sarb
jg
mov
lods
in
aas
lret
call
sti
xchg
or
add
decl
icebp
rcrb
xchg
mov
shrb
test
cltd
add
out
int3
mov
sahf
xchg
and
mov
mov
in
decl
adc
mov
pushf
push
cwtl
scas
insl
sub
pushfw
add
adc
into
add
push
and
aaa
cli
decl
loope
mov
fwait
sbb
shll
scas
mov
or
call
add
roll
popf
stos
aaa
sbb
pop
pushl
cltd
and
mov
cmp
push
inc
add
sub
adc
das
je
mov
ror
cld
xor
sbb
ljmp
cmp
mov
dec
inc
sbb
push
cmp
dec
in
pop
dec
fucomp
pop
loopne
cmp
fadds
xchg
inc
clc
mov
stc
ret
ja
jl
call
fistps
mov
dec
das
pop
stos
insb
out
cwtl
mov
cli
vmaxpd
xchg
mov
data16
xor
jle
jne
adc
fs
mov
aas
das
test
incl
mov
fsubl
xor
jecxz
sbb
cmpsb
repnz
mov
lock
mov
mull
rcrb
xchg
push
mov
nop
das
add
push
lcall
xchg
sbb
das
insl
inc
pop
pop
push
test
clc
decl
sarl
test
adc
test
pusha
addr16
add
mov
mov
dec
icebp
sahf
stos
inc
adc
jp
decl
inc
fimull
hlt
mov
out
fildll
aaa
mov
mov
icebp
inc
adc
outsl
std
pop
ljmp
push
decl
aas
loopne
xor
ret
call
inc
mov
fucom
mov
aaa
fistpl
scas
lea
mov
adc
call
fisubs
add
push
lock
lock
inc
jmp
sahf
imul
decl
mov
push
cmp
xchg
test
shlb
push
pop
mov
loop
or
jecxz
decl
and
or
ret
xchg
lock
lock
mov
daa
pop
test
sbb
and
icebp
jg
pop
jae
and
and
and
mov
jb
or
pushl
imul
cmpsb
daa
xor
jg
jnp
dec
cmp
outsl
loope
stos
sbb
push
ret
imul
pop
subb
push
jg
pushf
add
outsb
adc
dec
repz
xorb
daa
insl
imul
idiv
pushl
adc
xor
lods
repnz
push
cmp
insl
cmc
rcrb
xor
ljmp
repz
push
add
pop
lea
fcompl
mov
sub
or
data16
inc
sbbl
fimull
test
call
fcomps
pop
daa
mov
loope
jle
sarb
inc
hlt
mov
cmp
decb
or
jg
add
xor
mov
jnp
nop
push
cmp
ret
jle
and
ljmp
mov
lea
scas
or
loop
lret
jg
sbb
ret
gs
in
cld
stc
push
enter
inc
and
dec
cmp
dec
mov
xchg
mov
dec
lea
sub
push
dec
sub
mov
mov
iret
mov
adc
ljmp
sub
xorb
and
pop
push
les
xchg
lock
dec
inc
imul
push
dec
insb
in
jmp
pusha
pop
fdivl
or
jp
push
cmc
ret
adc
popa
sbb
add
insb
decb
sub
outsl
sbb
push
sub
adc
mov
dec
aas
jnp
jg
pop
push
jo
push
in
ja
decb
adc
lret
push
or
movsl
sarl
pop
and
in
mov
adc
data16
rep
add
shlb
add
and
inc
add
add
adc
loop
and
sub
pop
jl
mov
xor
fsubr
call
test
ficompl
pop
xor
mov
push
mov
push
mov
pop
call
cmp
push
test
mov
ljmp
outsb
inc
mov
scas
lret
repz
jg
mov
incl
decl
pop
sbb
and
mov
mov
cmpsb
jae
push
mov
aam
cmp
cli
xchg
lret
gs
jae
inc
xchg
adc
incl
xchg
enter
or
mov
or
jg
iret
sbb
dec
clc
sbb
inc
in
test
mov
ret
das
sar
shll
rol
aad
outsl
jmp
stc
popf
xor
ror
adc
sti
das
adc
xor
xchg
and
jmp
mov
mov
aad
sbb
icebp
sti
sbb
jge
call
ljmp
ljmp
lret
test
nop
xchg
ja
jl
xchg
jmp
mov
inc
or
or
sbb
pop
jg
divl
das
lea
js
dec
lods
pop
insl
repnz
mov
ljmp
push
popl
jno
cli
test
pop
movsl
enterw
push
sub
jae
call
cli
jp
dec
fisubl
dec
and
cwtl
aad
mov
pop
test
lcall
pusha
fldcw
mov
mov
pusha
mov
pop
or
sub
mov
clc
and
push
and
xor
mov
xchg
stc
arpl
sub
cld
scas
stc
fdivrl
orl
cmp
rorl
jnp
in
pop
cmp
pushl
test
sub
das
lcall
add
sub
jne
rorl
movsb
stos
outsb
scas
push
inc
call
push
sti
call
clc
push
jecxz
push
jns
mov
jb
dec
fdivrs
jle
mov
movsl
xor
insl
jecxz
decl
fwait
jae
jo
arpl
mov
je
test
xchg
mov
fs
in
pop
lock
cmp
fstps
cmp
add
outsl
shr
xorl
fcoms
fdivs
imul
icebp
in
in
call
sub
dec
arpl
stos
sbb
imul
lcall
fsubr
loopne
xchg
cwtl
pop
xlat
out
xor
leave
adc
lcall
cld
and
shll
xlat
cld
lea
ret
jl
pop
adc
into
xchg
call
wrmsr
jge
inc
xchg
ret
mov
cmpsl
add
mov
lods
mov
or
cmp
lret
adc
nop
call
pop
push
mov
idiv
pop
cmp
insl
add
xchg
push
sbb
cmp
ret
jle
or
fucomip
push
in
rcll
sbb
js
mov
cmpb
insl
outsb
pmaddwd
in
push
loop
test
incl
cwtl
into
add
add
pop
or
pop
mov
or
adc
clc
and
mov
pop
inc
jb
bound
pushl
push
push
sbb
ror
int3
jb
cmp
mov
xchg
int
test
jmp
loope
pop
neg
and
pop
mov
lods
outsl
int
adc
sti
sub
or
mov
jnp
mov
or
test
cmp
mov
sub
sarl
mov
xchg
std
xor
filds
ljmp
add
mov
cmc
iret
inc
adc
fucomip
jmp
popf
cld
cmp
scas
and
cmp
icebp
adc
lahf
insb
add
mov
sub
push
lods
fucomip
ljmp
repz
pop
jne
push
call
leave
and
call
imul
cltd
je
lahf
fwait
xlat
push
mov
mov
jmp
mov
pop
std
adc
mov
orb
lea
xchg
mov
mov
push
pushf
and
cmp
call
pop
push
call
cli
movsb
add
mov
mov
out
and
jl
call
mov
ret
mov
lds
xorl
cld
out
pop
pop
sub
dec
xchg
hlt
call
sub
adc
enter
stos
sub
sbb
aas
pop
fbstp
ffree
inc
dec
sbb
js
ljmp
xchg
out
movsl
or
sahf
aam
pop
pop
pop
mov
push
adc
ljmp
add
sbb
call
fcmovne
je
mov
lcall
es
cmp
mov
mov
xchg
xchg
pop
loop
iret
mov
cmp
mov
mov
jg
cmpsl
sub
sub
jg
add
fnsave
jg
pushl
loopne
and
insb
xchg
adc
add
into
fsts
testb
lods
lcall
cmp
les
mov
or
push
imulb
scas
das
cmc
jg
inc
cld
jnp
jne
cli
jl
imul
mov
adc
psubsb
lret
jge
outsb
cwtl
pop
sahf
les
lret
rorl
aad
pushf
addr16
sbb
daa
mov
call
or
cmp
loope
sarb
andb
lock
push
push
lret
ds
dec
sbb
aas
pop
leave
jg
call
mov
xchg
gs
inc
xorb
cmpsb
insb
mov
jl
jbe
add
pop
ljmp
pop
sub
push
out
push
sar
jmp
cmc
mov
lds
scas
xchg
cld
and
xor
push
jae
andl
aas
loop
decl
decl
sbb
sbb
stc
cmpsb
ret
pop
sbb
movsb
pop
in
and
repnz
in
call
jl
adc
scas
mov
stos
pop
xor
clc
sbb
dec
mov
call
cli
and
lds
shrl
or
movsb
loope
addb
mov
and
cmpsl
pop
xor
mov
inc
mov
push
xor
sub
ljmp
ljmp
push
imul
pusha
imul
lcall
test
aaa
inc
jbe
jno
inc
sahf
ret
mov
sub
adc
cmpsl
call
int3
or
ljmp
outsl
jl
in
neg
xorb
add
neg
jae
inc
imul
inc
call
lcall
in
adc
jmp
lcall
pop
enter
and
sti
mov
out
outsb
ret
and
mov
inc
cmp
outsl
dec
sub
in
cld
push
sbb
cs
inc
jae
mov
sub
fcoms
sahf
mov
sbb
dec
lret
or
or
popf
cmp
or
aam
xor
mov
loope
lcall
pop
push
nop
cltd
xor
sub
mov
jg
mov
and
xor
push
call
out
mov
test
pushf
loop
fstpl
loop
shlb
pop
cli
inc
dec
jnp
pop
jnp
dec
jecxz
movsb
movsl
mov
out
pop
int3
push
sub
inc
adc
mov
xchg
jg
xchg
imul
mov
xchg
scas
imul
mov
jg
std
incl
jbe
push
lods
push
ret
mov
sti
int3
mov
out
dec
mov
ljmp
push
sbbb
sarb
push
and
adc
ds
push
fimuls
iret
stos
sub
cmp
jg
add
dec
out
sub
fistps
int
stc
fwait
xor
outsl
xor
jns
pop
push
push
clc
xorb
je
les
sbb
mov
jne
shll
or
adc
fucomp
lcall
mov
cmp
adc
test
lods
test
jae
imul
movsb
cmpsl
sub
mov
sarl
movsb
add
xchg
shr
mov
js
lock
and
fs
movsl
sub
push
cli
outsl
icebp
ljmp
xor
mov
or
mov
orb
clc
jg
pop
push
push
jmp
fcomp
mov
pop
fsubrs
and
pop
fnsave
nop
add
inc
push
mov
enter
dec
in
out
pushf
xlat
scas
pop
fbstp
pushl
loope
rolb
inc
fstpt
push
add
push
and
lods
outsl
je
inc
lret
pop
cs
rcrl
or
adc
lahf
movsl
cmp
ljmp
inc
push
add
fs
rcl
orl
out
pop
add
ss
test
cmp
jp
and
ljmp
xchg
aas
sbb
push
ja
test
test
aam
and
pop
or
movsl
adc
aaa
ljmp
icebp
decl
cwtl
orl
cld
pop
lods
es
inc
test
mov
pushf
adc
js
out
mov
pop
xchg
aas
lcall
insl
hlt
jecxz
sub
andl
arpl
cs
push
and
push
addb
pop
movsl
xor
add
lods
push
lock
jg
jmp
and
push
pop
out
lods
sub
sahf
dec
mov
daa
add
cltd
adc
popa
mul
jp
insb
pop
js
dec
pushf
fs
inc
loope
xchg
movzwl
adc
pop
loopne
rolb
ss
mov
sub
fildll
lea
lods
sub
cld
scas
xchg
mov
popl
sahf
jl
cld
fucomip
pushl
divb
inc
out
lahf
mov
push
inc
jmp
jne
add
pop
and
addr16
shlb
xor
or
cmp
hlt
mov
in
test
outsb
movsl
das
fimuls
lcall
call
pop
shr
push
mov
stos
fcoml
int3
leave
xchg
outsb
aas
and
pushf
push
jg
or
pop
mov
inc
iret
and
sbb
sahf
insl
mov
filds
arpl
sub
adc
mov
scas
dec
addr16
mov
adc
xlat
int3
sbb
xor
inc
sbb
lea
mov
std
jl
xchg
mov
pushf
and
cmp
dec
pop
fidivs
int3
jg
lock
lds
xchg
dec
mov
stos
das
adc
outsl
pop
jp
add
repnz
shl
ljmp
icebp
sbb
fnstcw
jne
scas
xor
xchg
ljmp
xchg
incl
or
mov
xchg
push
sahf
out
insl
sbb
sbb
decl
mov
int3
std
call
cmp
pusha
lods
bound
test
xchg
jl
add
or
pop
xor
jmp
repz
leave
and
sub
pop
jmp
pop
das
outsb
jo
incl
lcall
push
xor
add
inc
mov
sbb
decl
xor
lar
into
ljmp
cld
sahf
stc
mov
mov
push
adc
mov
adc
sub
clc
inc
decl
push
jb
xchg
gs
xor
shrl
addr16
outsl
hlt
call
push
xor
clc
or
adc
xchg
and
adc
adc
sbb
mov
out
adc
fcmovne
or
aaa
clc
mov
out
test
lods
xor
cmpsl
mov
fsubrl
filds
mov
adc
add
push
sub
cli
xchg
sbb
ljmp
mov
cmp
push
or
add
dec
dec
mov
jg
in
or
push
int3
ds
xchg
repnz
in
std
sbb
cmpsl
inc
ja
mov
mov
fwait
repz
mov
xchg
fiaddl
sub
jne
jg
push
cmpsl
cmp
push
lds
dec
sti
iret
loopne
out
gs
pop
cmp
call
add
das
push
loopne
aaa
aad
loope
mov
in
xor
pop
outsl
or
mov
push
lds
lcall
dec
adc
test
addr16
dec
pop
ret
and
negl
push
inc
lock
jecxz
or
sub
or
js
adc
pushl
mov
or
push
xlat
xchg
jmp
dec
mov
loope
jmp
push
pop
mov
lds
aad
int3
pop
arpl
pop
pop
lahf
loopne
jg
mov
jnp
call
sti
xchg
dec
add
dec
xchg
jge
push
mov
nop
shlb
insb
cmc
jg
test
xchg
pop
dec
push
jmp
jns
jmp
aam
roll
mov
sub
clc
insl
je
aaa
xchg
dec
lods
jmp
sub
gs
mov
mov
repnz
lock
jmp
pushf
movsb
lods
jae
xor
mov
jae
bound
fdivr
add
repz
mov
std
inc
jo
pop
adc
xchg
psrlq
das
hlt
pushl
call
jne
xchg
push
imul
ss
ret
xchg
clc
mov
pop
mov
cld
fwait
lcall
mov
enter
pop
push
xor
jno
xchg
pop
pop
popf
push
sub
jmp
adc
pop
std
mov
pop
pop
subps
outsb
dec
dec
xchg
jne
leave
into
jg
pushl
mov
cmp
notb
mov
inc
lock
pop
or
fs
inc
ret
jne
ds
out
pop
adc
inc
mov
je
xchg
jle
aaa
outsb
pop
lcall
or
repnz
mov
aaa
fucomp
in
add
inc
cmp
call
lock
jle
xor
ret
xor
lea
dec
das
cld
jg
lock
pushf
arpl
jno
scas
pop
jle
xchg
jmp
adc
js
shl
or
lock
jbe
daa
ljmp
out
call
cltd
nop
mov
push
ret
jg
insl
lahf
jne
and
mov
popf
arpl
call
ljmp
xor
aas
dec
test
shl
mov
add
sub
loop
fbstp
mov
jecxz
and
inc
pop
clc
rclb
cmpsb
or
mov
jge
xchg
lahf
jle
outsl
xchg
lcall
sbb
je
stc
daa
mov
add
jg
or
xchg
ss
or
popa
bound
fcmovu
push
inc
cli
das
std
jmp
mov
ja
ss
hlt
xor
out
arpl
cs
lods
xchg
jbe
adc
add
orl
or
or
test
jne
inc
add
mov
mov
mov
movsb
lcall
jmp
loope
aam
push
or
fwait
stos
dec
fisubl
out
mov
imul
lcall
dec
out
scas
mov
xor
and
jp
je
mov
loope
jmp
adc
les
sbb
mov
jg
dec
sbb
ret
aaa
mov
mov
iret
hlt
mov
mov
cmp
fwait
xor
pop
add
push
jmp
inc
mov
or
dec
xchg
jb
sub
cmpsb
mov
jg
outsb
shrl
lcall
mov
mov
mov
cltd
mov
popf
and
dec
ljmp
ja
push
sub
stos
xrelease
dec
inc
inc
inc
adc
cld
dec
out
jbe
ret
call
mov
lock
pop
lods
repz
pop
pop
test
insb
adc
iret
mov
or
iret
iret
and
cmp
sub
push
and
std
call
jb
xor
popf
lock
pusha
mov
das
and
dec
adc
jae
cmp
int3
sub
pop
pop
cwtl
cmpsl
mov
mov
insb
stos
popf
pop
jecxz
mov
call
pushl
inc
jecxz
insl
inc
push
adcb
pop
outsb
adc
mov
jg
fcomip
dec
mov
adc
test
push
addr16
hlt
xchg
jg
decl
cld
test
je
xor
pusha
push
mov
insl
pop
mov
jns
xchg
xchg
imul
fcoml
stc
in
out
decl
xor
add
lcall
jno
fisubrl
pop
call
std
rcrl
mov
sub
sub
xchg
fmuls
bound
xchg
sub
out
inc
dec
rcll
pushf
mov
sbb
inc
sbb
movsl
mov
aam
sub
data16
fdivl
lcall
jle
push
jo
xorl
in
adc
mov
es
push
ljmp
push
or
xor
stc
pop
mov
cmp
pop
mov
pushl
xor
ror
call
xchg
mov
add
jmp
lcall
mov
loopne
push
inc
fidivrl
mov
and
cmp
out
es
mov
dec
popa
jl
jecxz
lods
add
push
dec
push
aaa
std
mov
das
std
jmp
mov
js
roll
js
out
aad
push
outsl
std
jg
xchg
outsl
jmp
jnp
lar
cmc
or
pushf
or
call
xchg
daa
and
mov
add
jge
gs
cmpsb
loope
mov
lea
pop
mov
sbb
jp
aas
dec
nop
cld
int3
dec
push
inc
shll
mov
adc
jg
out
push
stc
and
cwtl
sub
cmpl
call
adc
sub
jno
loopne
pop
dec
dec
jb
dec
out
mov
leave
fwait
and
test
xchg
clc
incl
sbb
cmp
mov
stos
push
jno
call
push
fwait
jmp
bound
data16
xchg
adc
jne,pt
loopne
in
push
xchg
sbb
test
jp
cmp
in
arpl
inc
lret
imul
sbb
push
cli
call
push
aad
lret
nop
in
test
dec
add
xchg
xor
repnz
vpmadcswd
fildll
imul
adc
pushf
xor
push
out
mov
pop
jnp
jnp
out
sarl
xchg
in
jmp
fdivrs
test
stc
xchg
ja
pushl
inc
outsb
scas
js
xor
ja
rcl
int3
or
mov
fimull
nop
or
push
fmuls
push
je
es
mov
mov
fxch
mov
push
dec
iret
pop
mov
jae
adc
fbld
test
jge
ret
sbb
adc
call
lcall
int
stos
scas
sbb
push
xchg
inc
lahf
jnp
adc
jmp
mov
test
into
scas
cmpsb
push
and
jg
out
xor
rorl
mov
shrl
cmp
xor
fs
aas
push
test
andb
add
pop
jne
cli
sarl
lahf
scas
jl
and
lcall
sbb
into
popa
and
inc
inc
jmp
pop
mov
cmp
cmp
ljmp
mov
mull
xorl
ljmp
lods
pop
xchg
pop
adc
xorb
in
lahf
mov
xchg
insl
push
push
adc
dec
xor
packsswb
bound
fs
lcall
scas
mov
sti
bound
subl
xchg
xchg
out
inc
cmp
cmp
pushl
int
enter
cmp
jecxz
mov
lods
test
lods
cmpsl
push
or
les
jne
subl
cmp
mov
icebp
gs
jmp
or
mov
fldl
aam
adc
mov
loopne
mov
xchg
scas
jns
xchg
jp
das
pop
bound
call
add
cli
insb
jno
cli
pushl
push
xor
sub
xor
aas
pushf
cld
mov
ret
mov
lock
add
cltd
mov
daa
in
mov
pop
out
fnstenv
sub
xorb
insb
push
xor
mov
mov
pop
add
ljmp
cli
or
mov
mulb
mov
jmp
mov
sub
repnz
mov
mov
mov
mov
pop
xchg
inc
cmp
aam
sahf
xchg
xor
add
sub
push
add
xchg
ljmp
mov
push
adc
mov
or
jecxz
push
jo
lret
pushf
dec
loopne
incl
movsl
mov
add
sub
clc
aaa
cli
decl
push
xchg
popf
inc
sbb
add
lahf
fbld
in
adc
pop
mov
ja
in
pop
push
in
ficomps
sub
idivb
clc
xchg
rclb
push
lds
shlb
insb
pop
loopne
pop
push
pop
call
lcall
sub
push
lahf
fcom
psrlq
or
adc
sbb
xchg
outsb
or
or
cld
add
push
inc
leave
aam
mov
sub
pop
push
comiss
ljmp
inc
imul
inc
cmp
mov
cmpsl
incl
ljmp
jae
pop
mov
jae
aaa
xchg
cmp
scas
movsb
or
sub
pop
cli
inc
fwait
push
xorl
xor
add
mov
incl
sub
push
insb
outsb
jbe
add
repz
rclb
cmp
jp
outsl
xor
mov
cmp
imul
mov
inc
inc
push
enter
clc
ljmp
or
aas
mov
cmpsb
cwtl
xchg
lret
andl
cmp
pushl
jmp
and
dec
dec
sarl
sbb
mov
stos
mov
add
cld
push
ret
out
xor
or
mov
jp
incl
mov
and
mov
lcall
xchg
mov
mull
dec
fimuls
xchg
gs
bound
lods
dec
out
ja
xchg
incl
mov
mov
into
mov
out
test
inc
aad
sub
rcrb
mov
addr16
dec
pop
popa
shlb
stc
mov
and
mov
aam
push
mov
jne
call
iret
in
or
shrb
lock
xor
xchg
incb
sbb
inc
in
inc
das
bound
call
pop
clc
mov
pop
cmp
xchg
inc
sti
gs
movsb
int3
pusha
ds
jmp
xor
adc
add
outsb
mov
jecxz
mov
push
ds
pushf
clc
adc
shll
jbe
sbb
mov
loopne
ret
in
adc
push
int
repz
mov
xor
iret
inc
imul
addl
fbld
mov
mov
sub
call
aaa
xor
insb
jl
mov
push
inc
pusha
sbb
mov
hlt
insb
jg
or
lds
stos
sbb
jecxz
es
cli
decl
jmp
outsl
daa
sbb
loopne
call
jmp
sub
dec
gs
nop
std
lcall
cwtl
and
aas
idivl
push
les
les
inc
cs
std
das
scas
mov
and
leave
inc
push
jbe
cld
pop
or
cltd
lcall
aas
lea
call
cmp
jl
cmpsl
add
out
mov
push
aad
fcomps
ud0
or
sbb
push
test
aad
adc
out
pop
mov
lcall
call
xor
mov
insl
xchg
js
lock
out
roll
jmp
push
iret
inc
mov
pop
mov
jnp
and
mov
adc
adc
je
cmp
test
or
aaa
daa
repz
push
mov
sahf
push
mov
decl
cmp
in
test
arpl
xchg
out
push
sti
dec
pop
sbb
fidivs
add
sbb
mov
push
lea
sbbl
scas
jmp
vmovdqa
xor
pop
je
pop
add
xchg
cmp
xor
inc
mov
aam
test
mov
sti
pop
idivb
inc
or
lods
cwtl
addr16
xor
sbb
lcall
stc
jbe
sbb
sahf
enter
adc
aam
mov
push
ljmp
addb
imul
stos
subb
rorb
mov
gs
jmp
enter
jecxz
mov
pushf
sahf
loop
mov
int
xor
push
jl
into
inc
movb
sbb
fnstsw
in
outsl
jns
cld
cs
icebp
xchg
imul
ficomps
popf
lods
jg
dec
sbb
xchg
mov
idiv
xor
ljmp
hlt
cmp
sbb
add
mov
testb
add
dec
pop
push
cmp
inc
mov
insl
mov
push
mov
mov
ljmp
cmp
decl
clc
mov
stc
or
xor
cmp
jmp
jl
xchg
mov
xor
pushf
divl
and
hlt
movsb
cld
repnz
test
cwtl
sub
cmc
sbb
imul
icebp
sub
add
das
jle
in
loop
mov
arpl
jge
dec
inc
lahf
adc
push
call
movsl
jns
fucomi
aam
testb
mov
cmp
call
ljmp
mov
adcb
cmpsb
or
jge
fisttpl
es
mov
pop
and
cltd
mov
insb
rorl
inc
pop
sub
clc
inc
insl
or
xchg
mov
mov
std
loopne
lcall
das
aam
fcomip
adc
lods
sub
inc
cwtl
adc
notb
fs
inc
cld
decl
fistps
mov
xchg
mov
jmp
fs
test
test
lcall
in
mov
repz
cmp
adc
dec
mov
ss
sahf
nop
dec
shl
andl
or
jecxz
pop
cmpb
data16
ljmp
lock
xor
push
arpl
lods
scas
fistpl
jge
movsl
mov
mov
cld
mov
push
cli
test
xor
or
aas
les
das
std
mov
gs
test
jge
cmp
fildll
ljmp
ljmp
fisttpll
fdiv
std
incl
mov
pop
fiadds
push
add
pop
stos
test
jae
jp
and
xchg
cs
fcmovu
icebp
xchg
xchg
shll
outsl
cld
in
mov
cwtl
jne
jg
mov
mov
scas
or
sbb
or
and
aad
mov
rclb
mov
ljmp
int3
cwtl
ja
sub
mov
es
sahf
dec
push
mov
mov
shr
scas
rcrb
jle
adc
ds
mov
lcall
addb
syscall
pushf
mov
sbb
xor
pop
leave
clc
xor
mov
pop
repz
mov
stos
icebp
stos
pop
xchg
outsb
xor
out
pop
mov
jmp
imul
out
push
sub
shlb
aaa
pop
ljmp
or
mov
push
sub
call
outsb
bound
mov
inc
jno
loop
aad
repnz
add
adc
icebp
sbb
neg
shrb
stos
rolb
sarl
movsl
push
adc
fidivl
fidivs
loope
clc
pop
hlt
decb
lods
pusha
cmp
add
xchg
andl
pushl
push
ds
ljmp
call
push
insb
sti
push
fisubl
out
jg
es
mov
jl
int
or
fcoml
in
mov
call
sub
or
jo
out
push
pop
cmpl
mov
ljmp
lock
mov
inc
adc
pop
inc
sbb
fmuls
lret
pop
addr16
das
cmp
pushl
div
xchg
imul
mov
shll
vfrczps
testb
les
or
call
aad
push
and
sub
cmpl
mov
sbb
imull
movsb
push
sub
clc
lods
xchg
stos
call
xchg
pop
lret
in
push
in
pop
aaa
clc
cli
jg
lret
pop
lods
sub
clc
push
sar
ret
xchg
addl
inc
call
inc
dec
fistl
mov
and
jmp
daa
or
and
push
or
pop
or
leave
int3
in
shlb
pushf
dec
adc
int
mov
pop
cmc
sbb
das
jl
mov
mov
mov
xor
xchg
mov
jae
mov
call
aad
imul
xor
lret
es
cli
dec
incl
inc
arpl
test
inc
and
incl
movsb
dec
xchg
aam
subb
in
shrl
call
daa
cli
adcl
inc
mov
in
add
adc
scas
faddp
xchg
dec
mov
rcrb
cld
ljmp
shrb
pop
jnp
jecxz
or
xor
cmp
aaa
sub
pop
and
ljmp
fmuls
setp
or
fistpl
xor
mov
cmpb
jle
jmp
pop
xchg
test
sub
adc
push
and
lea
push
mov
cli
sub
insb
push
std
sub
cmpsl
jle
cld
mov
out
in
dec
or
mov
loop
call
jnp
cmpb
es
stos
xchg
fs
stc
mov
into
and
mov
shrl
je
insb
xor
movsb
lock
bound
stos
or
in
rclb
fldt
cmp
mov
inc
inc
jl
xchg
lea
add
fistpll
push
jmp
fcmovu
imul
out
addr16
push
push
cld
sti
hlt
mov
iret
lret
mov
insl
adc
xchg
repz
inc
iret
push
push
icebp
pop
lcall
sarb
and
pop
in
shl
in
inc
adc
push
addl
shl
or
jns
and
push
cld
call
out
and
pop
lock
pop
test
dec
mov
outsb
sar
ljmp
mov
xlat
inc
stos
fwait
inc
into
in
cwtl
add
ja
mov
lods
mov
xchg
sub
loop
xchg
cltd
fidivl
push
andl
in
cmpsb
sub
mov
decl
ret
sahf
imul
pushf
stc
sub
mov
outsb
and
rcl
pushf
jo
cli
lcall
adc
dec
jecxz
hlt
pushf
or
test
daa
cmp
pop
cmp
lahf
cmpsb
xor
cmpsl
push
call
push
js
mov
and
xchg
cmpsb
push
mov
lods
call
sub
cwtl
insb
adc
adc
jl
lahf
lods
xchg
lods
push
inc
stc
xchg
ljmp
cmp
sub
pop
in
rcrb
pop
xchg
cs
outsl
pusha
push
hlt
inc
and
xchg
leave
sub
push
fstpl
mov
shll
pusha
jl
xchg
push
jg
addb
pxor
add
incl
ljmp
mov
outsl
pop
je
add
and
ljmp
ljmp
mov
adc
sahf
clc
js
divl
aaa
loope
leave
dec
decl
mov
sbb
mov
cli
pop
jge
mov
sub
push
mov
cmp
loopne
call
jno
or
aad
test
push
push
aas
pop
dec
xor
cld
push
call
loopne
and
mov
imul
dec
decl
cmpsl
xchg
lcall
and
dec
je
arpl
sti
popf
adc
sbb
ljmp
mov
clc
ror
sbb
or
lods
or
jg
das
cmc
inc
lods
je
jno
fmulp
xchg
xor
aaa
jmp
push
sbb
aas
ja
rcrl
int3
push
sar
pop
ljmp
jl
adc
and
shlb
lods
xchg
xor
jmp
push
jnp
out
int
xor
test
cmpsl
fildll
mov
xchg
xor
lcall
icebp
dec
aad
lret
les
adc
xchg
jg
loop
lock
mov
xlat
and
xor
std
inc
clc
incl
call
mov
decb
push
xor
push
mov
ljmp
fistpll
or
jae
leave
mov
dec
mov
xlat
rorl
and
xor
xchg
or
cli
pushl
mov
test
pop
pop
in
in
or
mov
int3
mov
or
sub
mov
mov
sbb
fcmovnbe
sub
xchg
inc
fwait
sbb
push
aas
mov
sbb
ljmp
sbb
test
pop
inc
or
adc
je
sub
lcall
lods
mov
cmpb
gs
xchg
movsl
or
pushf
mov
jno
or
call
push
out
dec
int3
add
push
add
ret
das
jbe
add
add
incl
mov
adc
stc
mov
aad
push
jo
mov
filds
repnz
inc
fistpl
lcall
cltd
fdivl
mov
push
mov
pop
inc
mov
sarb
mov
jmp
stc
test
sub
lock
aad
adc
mov
stos
std
out
pop
sbb
dec
adc
ljmp
fiadds
xchg
sub
aaa
adc
rcll
jns
sbb
lods
movsb
cmp
aas
inc
xchg
pushf
xor
lods
ror
cmp
dec
cmp
imul
subb
decl
sub
xchg
or
pop
rcl
movsb
rcrb
and
jo
iret
mov
pushl
cli
mov
out
fwait
out
aad
push
mov
bts
fwait
adc
jle
jmp
stc
ja
dec
aaa
sbbb
fwait
rcrl
outsb
dec
out
leave
xchg
lcall
sub
add
inc
sbb
sbb
lods
ror
test
lcall
clc
inc
xor
mov
stc
daa
call
call
sub
ss
pop
push
pop
push
sbb
enter
mov
testl
jmp
cmp
je
cmp
out
mov
mov
rorl
les
outsb
or
add
arpl
into
jecxz
mov
or
or
mov
xlat
pop
pop
push
jmp
sub
xchg
ljmp
loop
aas
add
jg
lret
test
inc
jle
pop
inc
or
mov
in
or
je
shll
and
sarb
out
dec
pop
repz
sbb
cld
adc
fsubp
mov
out
decl
incl
aam
mov
mov
xchg
or
jbe
jbe
xor
sbb
inc
les
push
mov
jmp
lods
daa
mov
xlat
std
adc
outsb
sbb
imul
lea
hlt
lahf
dec
inc
js
jl
or
dec
add
push
inc
fsubrl
movsb
fbstp
out
cmp
cmpsl
lret
out
cmp
aas
stos
les
inc
dec
jg
mov
lods
scas
mov
jle
movsb
push
js
mov
int3
pushl
sbb
push
je
out
jle
sub
dec
and
das
hlt
ds
mov
sbb
insl
mov
push
dec
jae
ror
imul
shll
xor
jnp
int
cmp
in
dec
dec
adcl
cmp
fcompl
xcrypt-ecb
cmpsl
or
add
lock
stos
jp
inc
lock
mov
sbb
sub
in
lcall
xor
in
add
and
inc
scas
pop
inc
rcr
lcall
mov
shrb
sbb
cs
incl
aas
or
mov
mov
js
icebp
xor
std
in
push
xchg
sbb
inc
leave
adc
lock
test
stc
std
data16
jmp
cmc
icebp
mov
pop
fs
into
adc
lea
pushf
arpl
dec
jb
mov
mov
jmp
repz
je
push
cmp
loope
jle
xor
push
mov
or
movsl
rol
std
popa
xchg
das
in
test
shl
push
xchg
xchg
dec
fwait
ja
dec
shll
mov
push
ret
xor
into
loopne
out
in
fcmovnu
stc
stos
adc
mov
xchg
and
adc
push
push
clc
incl
mov
outsl
mov
sbb
pusha
cmp
sub
aam
sbb
dec
xchg
das
scas
push
and
in
test
mov
call
and
jmp
cmpsb
aaa
cmp
xchg
fsubl
pop
cli
scas
mov
push
or
mov
sub
and
mov
mov
pop
add
mov
push
imul
jl
or
daa
xor
decl
inc
mov
xchg
fists
sub
je
jge
xor
addr16
fisubl
addb
lea
jp
and
inc
mov
adc
mov
call
push
sub
push
or
fcoms
push
pop
xor
pop
add
mov
scas
shll
jecxz
mov
cmp
pop
out
xor
pop
les
insb
or
test
jmp
sub
cmpsb
and
dec
cmp
nop
into
mov
pop
sub
pop
loop
pushl
inc
dec
out
pop
pusha
pushf
lcall
mov
mov
decl
lods
jo
cld
jmp
cld
xor
add
sub
insb
inc
mov
fwait
lahf
fs
bound
int
mov
out
movb
lcall
popa
dec
bound
rorl
add
xor
test
icebp
call
mov
sub
jo
add
mov
jae
inc
jmp
testl
scas
mov
mov
imul
cwtl
sbb
adc
push
mov
sub
outsl
lock
incl
neg
repz
aam
jmp
pop
sbb
xor
xchg
cli
mov
divb
stc
jnp
push
sti
shlb
jg
pop
fwait
dec
repnz
and
repz
mov
adc
mov
push
xchg
adc
push
jmp
push
movsl
and
stos
jl
lcall
cmp
out
sarb
iret
faddl
cmp
sub
lods
dec
cmp
jg
nop
int
add
inc
push
es
mov
push
fwait
notb
lock
fildll
xor
mov
and
pop
sub
out
movsl
and
pop
mov
lods
mov
add
jp
adc
imul
dec
jl
inc
sub
dec
adc
fmull
lret
xor
mov
and
mov
mov
push
or
mov
mov
daa
rolb
loope
push
mov
fwait
sub
or
call
stos
rol
fldenv
scas
jno
or
popa
filds
addr16
pop
sub
push
jbe
cmp
pop
es
pop
fsubs
stos
das
in
adc
cmc
adc
fbstp
mov
outsl
pusha
inc
mov
int
push
cmp
cmp
lods
lcall
call
aas
fldcw
js
xchg
pop
das
loop
stos
sbb
incl
xchg
add
xor
test
add
leave
adc
decl
daa
mov
sti
inc
and
sbb
jne
icebp
incl
into
ret
in
movsb
cmp
bound
push
sbb
pop
ljmp
pop
xor
adc
mov
jo
or
insb
repnz
lock
sahf
cmp
mov
lods
sbb
fwait
nop
dec
xchg
mov
mov
cmpsb
stc
lret
sbb
pushl
shl
dec
cmc
rcrb
outsl
aam
adc
mov
movsl
mov
ljmp
outsl
call
xchg
jo
dec
sbbb
sbb
arpl
aad
je
jecxz
xchg
sbb
je
adc
push
lcall
jge
jno
xor
push
out
dec
fidivs
inc
and
pop
jge
mov
fsubr
daa
or
cvtps2pd
aas
push
mov
dec
xor
hlt
jmp
mov
jo
inc
fwait
push
pop
cmp
movsl
xor
sub
ljmp
fcomps
mov
int3
push
mov
pop
add
mov
adc
jle
call
es
scas
and
dec
nop
dec
mov
mov
nop
divl
decl
loop
dec
sbb
movsl
push
or
lret
sub
mov
test
shl
stos
call
lret
mov
out
mov
shr
sarb
lret
adc
and
incl
push
mov
ja
out
pusha
rcrl
cmp
mov
call
dec
dec
pop
jl
inc
shll
addr16
notb
cwtl
mov
cmp
lcall
std
testl
xor
xchg
fs
cmp
je
jo
ret
push
jg
fucomip
sbb
mov
test
push
ss
and
mov
mov
ror
into
jp
pop
mov
mov
jb
ljmp
rcrl
inc
outsl
shl
pop
in
fnstsw
lock
xor
dec
mov
cmpsl
fucom
movsl
xchg
push
mov
scas
js
je
clc
lds
insb
pop
pushf
cltd
mov
cmp
ret
cmp
jns
shlb
xchg
cmp
sub
adc
dec
cld
ja
mov
push
mov
mov
push
aas
xchg
add
lea
popf
gs
rcl
dec
leave
int
jg
jg
xor
dec
cmp
mov
xchg
sbb
fstps
je
push
pushl
movsb
push
adc
sbb
adc
testb
ljmp
lods
gs
mov
sbb
stos
inc
push
dec
sbb
imul
out
movsl
test
xchg
call
pushl
pop
addr16
xchg
cmc
lods
mov
dec
sbb
fiaddl
fisttpl
push
subb
call
cmp
push
xor
push
dec
or
cli
sub
mov
xchg
jge
pop
xchg
mov
call
and
je
sub
cmpsl
xchg
sub
inc
repz
test
jle
lret
popf
and
nop
sub
sbb
loop
and
addr16
push
push
jmp
shr
jne
cmp
out
test
pop
inc
push
mov
jnp
pushl
cli
movsl
pop
push
aaa
jge
std
movsb
mov
cwtl
shlb
cmp
sbb
cld
mov
stc
stc
flds
push
ret
sbb
or
incl
outsl
dec
fwait
jp
jae
sbb
fstl
pusha
pop
push
enter
mov
inc
je
insb
and
sbb
dec
fwait
gs
pop
adc
clc
sbb
lret
ret
ja
aaa
mov
inc
ljmp
inc
sbb
push
leave
test
xchg
cmc
and
mov
fcomip
loope
in
or
mov
fistl
xor
dec
cwtl
jge
add
mov
sbb
aam
push
stc
dec
fsub
xlat
clc
das
lock
cmp
fldl
sub
mov
scas
add
fisttps
lods
pop
pusha
mov
xchg
sbb
ds
es
je
loopne
and
inc
pop
shl
mov
ljmp
sti
or
mull
loop
pusha
scas
jbe
add
sar
jg
popf
jg
mov
sub
dec
mov
shr
test
mov
inc
xchg
mov
js
sbb
out
ret
push
out
lods
insb
mov
fsubs
lock
or
push
movsb
sub
push
inc
aam
rcll
test
lcall
and
mov
in
aad
add
scas
push
les
out
mov
cmp
push
fmull
inc
sub
divl
add
jmp
aad
call
in
rcrl
scas
aam
clc
adc
repnz
clc
bound
ljmp
mov
sbb
loopne
pusha
cmp
jmp
pop
cmpsb
loope
sbbl
xchg
jb
outsl
jge
mov
out
push
xchg
je
hlt
call
pop
push
inc
jecxz
dec
pop
scas
outsb
popf
and
adc
xchg
pop
or
ljmp
mov
test
shr
lods
add
scas
andb
mov
jno
int3
ss
sar
cmp
xor
mov
outsb
xor
shrl
mov
outsb
lock
das
mov
std
and
inc
add
pop
pop
inc
out
into
inc
test
imulb
outsl
pop
inc
data16
dec
mov
cld
ljmp
insl
xor
lods
lds
pop
pop
add
xor
push
pushl
addb
mov
inc
fiadds
ljmp
call
mov
jp
xor
fdivs
pop
pop
rcr
add
cmc
mov
decl
push
icebp
gs
jge
lcall
pushf
adc
ljmp
adc
jno
scas
insb
pop
pushl
push
push
stc
int
lret
jecxz
fs
mov
or
scas
out
mov
sub
push
push
mov
out
std
mov
pop
and
lea
std
mov
repz
mov
leave
aam
dec
xor
fistpll
packuswb
cltd
cld
jg
rcrl
push
and
fmuls
cs
push
shl
and
std
push
and
out
pop
gs
lea
jno
push
mov
inc
jg
ljmp
mov
scas
cmp
shl
dec
sbb
lahf
mov
call
mov
ret
mov
fs
adc
cli
xchg
arpl
sti
dec
xchg
loopne
sahf
incl
push
add
loope
std
js
mov
xor
sbb
sub
es
lea
and
dec
std
fwait
sbb
and
cmp
jg
mov
out
ret
dec
lds
jecxz
xor
frstor
jg
pop
popf
cmpxchg
jno
push
and
movsb
inc
test
jecxz
scas
xchg
decl
mov
into
dec
out
mov
dec
fwait
add
inc
aam
add
les
pushf
sti
cmp
ljmp
push
data16
jnp
js
dec
xchg
lret
and
add
and
sbb
test
rorl
pushl
cli
repz
pop
test
stos
and
lcall
push
xchg
dec
or
in
mov
mov
addr16
mov
ljmp
xor
cld
push
mov
icebp
in
dec
and
faddp
fld
lods
js
shll
jecxz,pt
xchg
mov
lods
jmp
daa
hlt
hlt
jl
pusha
inc
xor
mov
xchg
inc
stos
lea
fstpl
fwait
mov
sub
call
pop
in
jns
cmp
sbb
adc
ljmp
mov
repnz
addr16
fidivs
add
add
add
insl
pop
scas
fs
sbb
pop
rcl
add
jp
mov
xchg
sub
cmp
clc
fists
cmp
inc
push
push
inc
pushf
lock
add
mov
and
lahf
out
stc
inc
std
lods
mov
add
or
int
lahf
ret
dec
ljmp
add
jecxz
setp
nop
ljmp
int3
mov
daa
adc
lock
adc
fxch
mov
mov
inc
das
cmc
incl
scas
jae
add
or
dec
add
lds
std
fildl
add
je
clc
xchg
or
dec
movsb
pushf
add
lcall
mov
add
jecxz
add
and
rcll
dec
sbb
lahf
lret
mov
add
repnz
xchg
pop
into
rcll
and
dec
xor
call
es
adc
xchg
daa
pop
add
push
idiv
lods
sub
insb
test
xchg
cmpsl
sbb
cmp
mov
dec
mov
inc
mov
dec
stc
dec
push
mov
adc
jg
inc
adc
loop
mov
fdivrl
sub
mov
add
pop
loop
loopne
mov
dec
out
jno
outsb
add
xor
sbb
dec
outsl
add
push
pop
or
cs
roll
mov
add
mov
gs
ror
xchg
dec
rorl
or
sbb
mov
jg
adc
mov
mov
add
icebp
ret
mov
pop
mov
outsl
das
add
out
das
inc
rorb
mov
sahf
sbb
xchg
cmp
ret
es
pushl
js
je
mov
push
adc
bound
stc
andb
sbb
xor
mov
sbb
inc
and
cltd
push
mov
xor
inc
imul
push
adc
hlt
add
mov
cld
pop
mov
and
cltd
sub
pop
sub
insl
adc
adc
inc
test
and
ds
out
fcomp
jg
push
in
sar
dec
outsl
or
rcrl
push
or
test
and
fwait
pop
cwtl
cld
mov
push
gs
push
jp
adc
xchg
and
pushl
xor
in
cs
add
and
nop
fs
fisttps
andl
imul
pop
clc
add
mov
xchg
inc
inc
xor
or
mov
add
mov
jns
jne
lods
cmpb
cwtl
aad
add
in
adc
call
cld
xor
data16
lock
pop
aam
push
pop
xchg
jnp
dec
mov
dec
inc
mov
ds
call
out
or
or
push
stos
xchg
aaa
sbb
push
inc
inc
mov
sbb
mov
xor
scas
jle
sbb
dec
mov
and
leave
cmp
sbb
orl
xchg
outsl
push
icebp
mov
add
adc
call
movsl
pushl
mov
xchg
adc
adc
fldt
add
nop
sub
incb
jns
dec
fs
lret
hlt
outsl
and
int
xor
hlt
ljmp
jg
push
jle
shlb
xchg
and
push
addb
push
jle
mov
xchg
inc
je
fisubs
mov
icebp
add
adc
push
pop
and
sti
outsl
cld
or
leave
cs
aam
sbb
mov
sub
xchg
iret
fistl
std
inc
das
mov
pop
sbb
lahf
push
push
and
incl
outsl
fsubrp
int
jbe
sbb
mov
cmpsb
xchg
mov
or
roll
mov
movsb
adcl
jecxz
adc
or
push
dec
sbb
inc
dec
adc
jbe
xor
sub
dec
mov
pop
xor
push
lret
icebp
mov
incb
add
add
and
xchg
rclb
out
dec
inc
sti
outsl
cmc
sbb
xchg
add
sub
idivl
xchg
stos
xchg
add
jnp
and
ljmp
out
xor
fidivs
or
adc
in
mov
mov
shrb
lds
pusha
push
cli
adc
mov
lods
xchg
pop
clc
add
test
sarb
in
jle
jno
add
mov
pop
sbb
outsb
punpcklbw
loope
jno
cltd
rol
sbb
mov
bound
add
mov
fildl
es
sbb
lahf
mov
xchg
repz
mov
pop
call
jle
add
cld
push
mov
scas
lcall
imul
add
add
movsb
aad
push
iret
add
pushf
dec
ret
mov
ss
jae
inc
pop
mov
sub
jg
inc
sbb
fdiv
mov
in
add
pop
sub
mov
jno
loope
mov
inc
mov
mov
pop
mov
or
or
push
shrl
mov
add
pusha
mov
push
test
psrld
push
orl
psubb
cld
jns
cmp
and
xlat
inc
mov
rol
push
jp
mov
or
cmp
pop
and
and
sub
add
fistpl
call
lods
jbe
int
int3
sbb
movsb
push
add
add
or
mov
es
or
inc
movsb
add
sbbb
add
fcmovb
mov
cld
decl
gs
mov
adc
es
push
mov
xchg
add
test
and
out
test
in
call
dec
fwait
movsb
test
es
mov
movsl
sub
mov
lock
push
jl
sbb
adc
mov
clc
lods
sbb
xchg
dec
gs
test
push
xchg
mov
xor
mov
cmp
sub
test
jl
and
pop
or
jecxz
xchg
mov
ds
das
and
ss
and
repz
dec
incb
sti
arpl
fistpll
mov
xchg
inc
test
adc
jmp
ret
insl
adc
mov
sbb
inc
jg
jg
xchg
inc
pop
push
or
hlt
sub
inc
test
pusha
inc
add
sbb
call
pushl
shll
xchg
pusha
shlb
xchg
add
mov
mov
cmp
push
lods
insl
add
sti
in
shrl
lock
push
or
jnp
sbb
rcrb
jmp
mov
fldenv
push
or
push
insb
stos
imul
mov
add
jae
btsl
jns
mov
test
sub
popa
int
stc
push
add
fistl
fbld
adc
std
sbb
or
ljmp
add
adc
adc
nop
inc
roll
add
sbb
inc
hlt
lret
inc
jo
xor
mov
loop
arpl
test
jl
test
jne
cli
add
lcall
mov
std
pop
and
mov
add
adc
and
lea
xchg
add
mov
jge
or
push
sub
shll
jle
mov
cs
aaa
jnp
add
ja
cmp
pop
mov
leave
push
adc
cmc
mov
test
add
sub
push
jmp
cwtl
negb
lret
xchg
jl
in
cltd
cld
aaa
cld
aaa
cs
mov
jp
icebp
test
cmp
sbbl
push
xor
pop
jp
push
ret
movhps
cld
out
idiv
jg
cld
int
decl
xchg
xor
dec
inc
dec
das
incl
adc
roll
pop
lahf
movsb
pop
mov
test
popa
vpaddsw
cld
dec
sbb
cmpsl
imul
pop
push
cmp
out
jne
sbb
dec
popl
cmp
cmp
mov
jmp
mov
or
push
nop
or
mov
outsl
jg
loop
xlat
je
lods
dec
mov
sbb
popa
mov
fwait
pushf
jbe
pop
sbb
dec
push
dec
lret
out
fbld
imul
loope
xchg
das
inc
mov
and
daa
xchg
test
or
call
fsubl
ret
cmp
xchg
popa
xchg
and
mov
out
and
sub
fst
mov
arpl
adc
sub
lcall
mov
das
jo
jo
mov
testl
incl
incb
mov
lods
adc
push
push
test
and
jge
filds
loop
jbe
clc
adc
lods
mov
pop
or
dec
push
notl
xchg
inc
mull
pop
or
mov
jb
pushf
pop
jns
adc
pusha
mov
push
add
ss
jno
lret
inc
sahf
dec
xorb
jecxz
loopne
std
jg
popf
push
out
nop
test
xor
sbb
cmpsb
adc
or
push
aaa
pop
inc
adc
xor
cwtl
cmpsb
mov
test
ret
loope
push
adc
push
sbb
push
inc
ret
je
clc
xchg
or
jp
test
addb
mov
sbb
pop
decl
sub
leave
movhps
insl
shr
mov
cli
or
cli
jae
xor
ds
push
mov
jl
xor
push
mov
es
jmp
and
mov
inc
mov
pop
in
xchg
and
adc
adc
icebp
mov
jne
mov
cs
push
fdivrl
filds
jns
jae
lock
jge
pop
es
push
and
test
int3
and
mov
sbb
adc
pop
adc
into
pop
aas
dec
lock
push
pop
cltd
mov
clc
xchg
push
jne
add
push
push
pop
ss
lcall
test
lcall
sbb
or
or
lret
cmp
sub
ljmp
aas
lock
dec
subl
or
pop
or
mov
sbb
lcall
insl
jl
loopne
lcall
or
ljmp
std
repnz
jns
ds
jnp
or
add
push
les
cwtl
sbb
inc
call
lret
mov
push
sbb
xor
add
dec
leave
mov
fisttpll
clc
dec
jmp
fisttpl
fcmovne
imul
dec
std
push
add
pop
sti
push
sbb
lcall
adc
pop
sbb
loopne
sub
addb
call
dec
ljmp
pop
add
sahf
push
fs
and
push
mov
call
inc
add
xchg
jae
xchg
push
add
cmp
outsb
pushl
jge
xor
loopne
or
scas
test
cmpsl
adc
test
or
mov
xlat
pop
jne
les
pop
test
mov
popw
and
call
les
lcall
pop
cmpsb
mov
fisubrl
pop
adc
cld
pop
aaa
push
icebp
sbb
xor
ljmp
xchg
xor
add
mov
sbb
sub
out
cs
pop
cmp
adc
fildll
cmp
lds
aam
fimull
jno
jnp
lock
push
repnz
or
idiv
shlb
jno
shl
arpl
cld
mov
sub
shlb
es
and
std
outsl
inc
cmp
and
aam
xchg
jle
or
add
pop
stos
xorl
sub
mov
inc
push
loop
shrb
push
push
mov
add
mov
pop
push
mov
movsl
or
push
popf
xor
or
push
mov
cld
or
and
or
fucomip
and
or
popf
add
decl
stos
and
inc
inc
push
jo
fldl
daa
cmovbe
push
in
cltd
aam
adc
ret
push
andb
inc
push
add
out
int3
sbb
mov
dec
and
sbb
test
mov
inc
inc
sub
adc
sub
xor
aam
inc
call
nop
loope
xchg
pop
mov
pop
das
cmc
jbe
pop
xchg
dec
insl
pop
dec
mov
sar
jg
mov
or
int
push
fwait
xor
mov
pushf
gs
fcompl
inc
jae
dec
out
pushl
add
cmp
dec
adc
push
jecxz
and
shlb
pop
and
fidivrl
mov
or
add
into
xchg
add
mov
fildll
xor
and
js
mov
repz
and
fnstenv
movsl
jg
pop
sbbl
sti
loope
sbb
or
movsl
add
js
lea
jno
ds
lods
fildl
in
pop
pop
mov
dec
sbb
xchg
lcall
inc
outsl
loop
add
repz
sbb
outsl
or
sbbb
imul
mov
sbbb
call
scas
es
mov
dec
cli
outsl
cld
ljmp
and
xchg
jb
rorl
outsb
out
in
push
sbb
loop
insb
push
popa
bnd
push
pop
out
mov
mov
mov
dec
clc
fs
insb
xchg
in
repz
adc
lock
jecxz
jp
mov
movsl
inc
push
loop
shrd
call
push
jo
cmpsl
and
push
lret
dec
push
dec
dec
add
decl
pushf
mov
sbb
dec
ja
or
dec
or
inc
sbb
shlb
dec
push
xchg
mov
jp
xchg
scas
ss
or
lret
call
push
push
mov
stc
loope
sub
mov
das
jmp
add
mov
adc
pop
cmp
sub
test
es
cmp
mov
bound
dec
mov
mov
inc
incl
sbb
leave
rclb
sub
scas
inc
sub
inc
sub
sub
or
jmp
inc
push
je
pop
cltd
pop
add
pop
ds
sbb
lds
dec
and
test
or
pusha
jae
cmp
mov
fbld
shl
or
jg
or
push
imul
outsl
xor
cli
inc
or
gs
stc
cli
or
incb
repnz
mov
out
cmp
das
test
add
arpl
sub
mov
mov
pop
idiv
data16
push
adc
stos
test
sti
xchg
adc
les
popl
data16
xchg
inc
push
mov
add
popf
mov
pop
test
loop
adc
incb
and
notl
incl
cs
xor
sub
add
mov
stc
decl
dec
cmovl
fwait
mov
and
dec
js
cs
mov
inc
testl
in
fisttpl
xor
fnstcw
insb
sbb
adc
cmp
in
push
jg
rclb
mov
or
sub
imul
incl
bt
lds
xlat
dec
cs
or
jne
cld
cwtl
cmp
and
popl
jle
inc
loope
and
and
cmp
sub
daa
mov
xor
sbb
mov
loopne
mov
outsl
cld
and
sub
jl
inc
fs
mov
mov
rcrb
in
mov
movsb
dec
sbbb
aad
xchg
xlat
add
sbb
push
in
mov
adc
bound
dec
les
jp
test
jnp
push
and
sbb
inc
and
inc
test
push
mov
hlt
sbb
mov
jecxz
jge
lcall
dec
sub
das
add
mov
xor
out
scas
push
mov
dec
cmp
or
xor
inc
or
jnp
testb
push
stos
rolb
cli
ror
add
mov
jg
jbe
sbb
push
xor
rep
out
cmp
or
or
in
sbb
jne
aad
repz
push
inc
add
out
jmp
pop
pop
clc
mov
dec
sbb
aad
fdivrs
hlt
or
icebp
push
adc
or
cmp
jg
je
or
cwtl
push
mov
dec
and
into
inc
mov
push
std
jmp
jp
stc
bnd
cmc
in
pop
fsubrs
mov
stc
and
adc
ret
daa
sbb
xchg
inc
jno
fwait
imul
das
pop
or
sbbb
push
inc
lahf
sub
mov
sahf
sbb
sub
sbb
push
daa
shlb
adc
jg
sbb
mov
pop
sbb
rcl
pop
repz
test
loop
inc
sub
lret
rcrl
jge
or
in
push
pop
xor
cs
call
in
mov
add
mov
adc
mov
sub
and
add
sti
push
shrb
bound
pop
cmp
inc
lea
fneni(8087
dec
aam
cwtl
lock
xchg
test
pop
nop
jmp
or
mov
pop
cmp
jg
jg
lret
out
mov
mov
fistps
mov
div
subb
cmp
and
push
call
cmc
movsl
or
div
sub
ja
mov
push
sub
cmpsl
out
mov
sahf
xchg
fbstp
out
in
orb
clc
shrl
out
hlt
xor
dec
add
lock
sbb
outsb
test
cmp
mov
inc
inc
das
jbe
fcoms
shll
cmp
lcall
mov
push
pop
adc
rol
pop
jo
mov
ud0
mov
loop
fldenv
mov
mov
mov
pop
add
pushf
inc
icebp
lds
lock
push
mov
sbb
and
adc
pop
mov
in
dec
push
sar
mov
ret
sarb
fisubl
fbld
mov
call
cs
cmp
xchg
adc
xor
jg
sti
mov
pop
sbb
mov
loope
test
scas
mov
aaa
jge
cltd
xor
pop
inc
inc
xor
int3
fisubl
push
add
or
incl
inc
dec
sbb
popf
xlat
xchg
in
loop
jg
fldenv
adc
repnz
out
rclb
aaa
adc
xchg
xchg
jmp
inc
mov
ret
jbe
or
rcll
inc
sbb
outsl
into
sub
xchg
mov
xlat
cmc
hlt
ljmp
sub
fsubr
mov
lahf
sub
movsl
cwtl
pusha
jmp
flds
jns
outsl
cmc
outsl
sahf
jl
inc
mov
imul
popa
dec
call
test
and
push
imul
xor
dec
push
decl
fdivp
scas
jae
leave
jle
pop
sub
out
sub
loope
ljmp
dec
dec
in
rclb
dec
sub
dec
ret
adc
push
mov
cmp
add
loope
gs
xlat
std
pushf
xchg
mov
faddp
pop
add
fucomp
ffree
pusha
std
pop
mov
icebp
pop
xor
fs
cld
and
mov
sub
pop
inc
push
cmp
fiaddl
lea
dec
mov
incl
pop
dec
addr16
hlt
jge,pt
cmp
nop
fsubrl
ljmp
pushf
inc
add
mov
sub
pushf
test
mov
xor
rcr
mov
add
cmc
jg
cmp
or
push
mov
and
in
ret
inc
inc
mov
xchg
stos
mov
or
sub
pushl
inc
cmp
pop
add
lea
push
sub
shlb
cmc
jns
mov
notb
pop
shlb
filds
gs
pop
mov
fwait
mov
cmpsl
jno
enter
incl
mov
pop
scas
adc
imul
addb
clc
xchg
stos
cli
ret
popf
in
inc
pop
pushf
sbb
cs
xchg
fisubrl
dec
or
test
aaa
fcomps
in
test
scas
or
mov
lcall
scas
fsub
dec
mov
ljmp
or
dec
inc
in
nop
int3
inc
imul
stc
and
movsb
sbb
test
lahf
jno
stc
ljmp
dec
cmp
in
adc
inc
inc
aam
cwtl
and
adc
jg
popa
mov
mov
lahf
mov
cli
popf
xchg
jne
or
in
punpcklbw
int3
push
lods
sbb
je
lret
sar
in
or
ja
nop
int3
inc
je
add
adc
cld
xchg
std
scas
fsubr
sbb
adc
pusha
sbb
or
mov
adc
inc
add
pop
sbb
or
or
fldcw
pushf
test
lods
push
jo
add
cmp
in
in
lahf
adc
enter
pop
clc
xchg
lods
testb
dec
into
pusha
sahf
dec
jb
sbb
sbb
and
inc
pusha
into
jle
roll
pop
jg
dec
xlat
popf
adc
je
pop
inc
fiaddl
cmpsb
in
or
js
hlt
and
das
inc
je
leave
add
pop
lods
test
xchg
push
mov
dec
xor
test
or
and
add
mov
loope
pop
lods
shl
add
sbb
mov
sub
gs
sub
in
push
pop
test
sub
subb
xor
dec
jno
mov
sar
repz
or
mov
dec
adc
add
mov
rcrb
outsl
fstps
sbb
mov
mov
ljmp
and
lahf
mov
cs
xor
dec
cld
and
and
sbb
repnz
cld
xchg
push
ret
pop
sbb
mov
mov
mov
movsl
cmpsb
pop
adc
imul
cli
add
sub
nop
and
loopne
imul
test
psubw
xchg
mov
imul
bound
sub
aam
popa
insl
ljmp
mov
sub
repz
fisttpl
and
mov
hlt
rclb
in
push
mov
test
xor
mov
out
dec
mov
lock
inc
testb
out
and
cld
mov
or
decl
mov
cmp
mov
cmpsb
clc
mov
cmp
aam
cltd
dec
std
testb
add
mov
or
sub
out
insl
or
rolb
cwtl
fld
cld
xor
call
shll
pop
inc
sbb
repz
mov
jo
ljmp
mov
cmpb
cmc
and
adc
add
sbb
ljmp
inc
mov
lahf
shlb
adc
adc
fucomip
ljmp
add
sbb
lods
mov
lds
pop
push
inc
cld
mov
icebp
pushf
es
pusha
pusha
jae
jb
adc
pop
adcb
incl
aad
pop
out
movsb
popa
test
and
inc
ja
cmc
jle
add
mov
movsb
inc
cld
jns
pop
loope
mov
call
stos
or
nop
inc
jae
mov
dec
test
psrlw
insb
and
push
pushf
mov
adc
add
cmp
or
cmp
movsb
fwait
idiv
outsl
lock
push
rolb
sbbb
pop
xchg
mov
orl
cli
scas
jb
inc
sub
xchg
inc
xor
das
cld
call
and
pop
cmpsb
jecxz
pusha
adc
dec
mov
cmp
sub
int
adc
movsl
aam
outsl
mov
cmpsl
les
jmp
mov
sub
es
imul
lahf
aas
adc
movsb
add
decl
mov
xor
icebp
xchg
prefetch
or
ja
std
fucomip
sbb
int
mov
loope
cmp
pop
stos
cmc
jns
repz
push
or
test
add
pop
shll
fcompl
xchg
es
mov
mov
loopne
push
add
push
or
shlb
sbb
sbb
xchg
mov
aad
cmp
sub
push
pop
or
sub
adc
pop
mov
or
mov
dec
stc
add
mov
inc
lret
mov
das
std
incl
add
scas
pusha
fbstp
jb
mov
cwtl
in
mov
jno
repnz
incl
mov
sbb
jb
or
inc
inc
add
xchg
pop
mov
lahf
shrb
sbb
test
imul
pop
arpl
cld
repz
jle
out
mov
rcll
in
test
stos
push
scas
movsl
imull
mov
into
icebp
add
push
movsb
stos
mov
test
dec
mov
or
dec
fcompl
inc
push
mov
jb
mov
lea
aam
stos
dec
and
test
insb
mov
shl
lahf
dec
xchg
daa
outsl
or
cmp
sbb
add
ret
cmp
outsl
mov
call
xor
scas
dec
xchg
xor
xor
call
lret
xor
push
sub
int
daa
inc
add
test
mov
push
shlb
cli
js
roll
mov
cmp
jbe
mov
mov
pop
fisttpll
jne
orl
aas
icebp
xchg
rorl
xchg
roll
jle
cltd
aas
jb
outsl
sub
icebp
inc
movsl
pcmpeqd
pop
adc
push
scas
or
mov
xchg
movsb
add
add
pop
mov
xor
add
dec
sub
hlt
in
mov
pop
fldl
mov
sub
femms
out
cmp
scas
pop
gs
xor
ss
sbb
or
add
pop
lods
mov
sbb
xchg
cld
dec
icebp
int
jecxz
fldl
movsb
mov
sub
xor
jne
jne
jmp
dec
add
rcll
pop
xchg
aas
leave
mov
jmp
loopne
bound
and
aaa
inc
adc
clc
in
nop
and
cmp
mov
push
or
loope
aam
lret
movsb
int
lds
or
pop
push
fcoml
cmp
pop
test
das
add
jb
sbb
push
add
jecxz
cmp
dec
stc
fistpll
pop
cs
xchg
ficoml
lret
add
fs
mov
adc
add
mov
xchg
out
dec
fisubl
inc
negb
in
dec
xor
daa
add
push
imul
rcl
int
jb
inc
mov
or
jl
or
fcmovnbe
jo
sbb
mov
cmp
push
outsb
repnz
or
and
repnz
add
fwait
cmp
test
push
ds
lret
movsb
test
sub
jne
incb
bound
inc
push
dec
sub
sub
and
pop
or
ret
out
inc
ss
aas
icebp
push
incl
lcall
cld
sub
sub
ja
sar
in
mov
mov
jmp
mov
add
dec
mov
leave
sbb
sbb
cmp
mov
sub
je
ljmp
cmpsb
nop
dec
lds
pop
jns
ret
and
push
scas
pop
loop
adc
mov
pop
les
outsl
shl
lret
xchg
push
ljmp
dec
ror
in
xor
das
cld
fsubp
sub
out
or
jg
mov
push
rol
loope
add
stos
xchg
sbb
sbb
enter
xchg
lcall
mov
or
movsl
ss
daa
lahf
subl
lock
add
mov
sbb
outsl
cmpsb
adc
push
orl
inc
mov
sbb
xlat
je
jge
dec
xchg
add
rcrb
js
repnz
call
xchg
bound
aaa
not
dec
push
jne
movsl
dec
inc
add
mov
pop
inc
fs
aas
imul
outsl
std
int
adc
or
iret
mov
or
and
lret
fisubl
jmp
or
adc
lea
add
dec
jle
aad
mov
xchg
or
fistl
inc
jle
icebp
test
dec
aaa
ret
aaa
das
lock
ret
ss
imul
adc
out
inc
dec
adcl
les
pop
mov
cwtl
cli
cmp
jl
fbld
loop
dec
ds
or
notb
dec
std
call
sti
adc
and
inc
arpl
or
movsl
jne
adc
jmp
in
incl
and
inc
push
adc
cltd
pop
decl
fsubr
mov
sbb
adc
or
cmp
xlat
push
clc
jg
stc
out
fdivrp
add
rcll
pop
add
shrl
lcall
test
xchg
stos
enter
sbb
and
js
add
out
cld
jp
movb
ljmp
sar
test
push
fsts
dec
or
addl
cld
pop
clc
mov
and
pop
outsb
clc
mov
popf
pop
std
mov
mov
add
jmp
dec
cld
call
jg
aaa
ljmp
and
mov
shrb
repz
sarb
stc
and
test
fwait
adc
lods
test
in
adc
daa
into
enter
mov
mov
std
mov
push
inc
outsb
xor
pusha
adcl
mov
mov
dec
lds
mov
std
jno
xchg
add
imul
jmp
xor
push
clc
int
xor
mov
faddp
iret
jmp
adc
out
cltd
mov
pushf
xchg
mov
adc
jg
lds
sbb
lcall
and
pop
mov
loopne
pop
mov
frstor
push
sarb
outsl
jbe
repz
mov
jnp
xchg
lea
pushl
out
in
je
fdivrl
scas
aaa
jg
xor
pop
pushf
lea
iret
add
jg
jmp
cmp
roll
loopne
xchg
jo
sbb
mov
clc
outsl
movsl
clc
rcll
dec
sbbl
inc
push
pop
mov
jge
arpl
dec
jmp
nop
push
test
push
mov
inc
clc
sbb
mov
subl
jbe
and
dec
jg
sbb
lock
test
xchg
fcompl
cmp
loop
mov
jb
rorl
decl
sub
mov
inc
sub
bound
clc
mov
or
stos
das
nop
lahf
shlb
inc
nop
mov
addb
xchg
xchg
mov
add
das
dec
push
in
or
push
or
mov
dec
add
lret
push
inc
loopne
jle
cmc
cmp
or
xchg
ds
jns
mov
mov
or
and
sub
add
sbb
test
xchg
arpl
cld
add
inc
xchg
pop
adc
mov
push
jg
stos
cmc
sub
outsl
fs
das
std
push
jmp
inc
inc
repz
jnp
and
je
inc
ljmp
aaa
push
mov
ret
int3
jmp
sbb
push
dec
jl
js
add
add
xchg
mov
call
mov
lcall
mov
fidivrl
out
cmpsl
mov
xchg
xorb
loopne
mov
jne
dec
mov
outsb
and
movsl
loopne
sbb
ficomps
out
sub
ficoml
pop
xor
or
inc
aas
repnz
lcall
jo
add
rorl
xor
or
fmulp
xchg
cmpsb
mov
inc
jl
stc
scas
aam
add
iret
mov
cmp
inc
push
clc
mov
xor
and
sahf
mov
call
dec
pushf
je
mov
inc
push
in
int3
mov
mov
fldt
into
test
xor
add
lock
pop
adc
dec
jl
nop
pushf
aaa
add
pop
rorb
lods
adcl
inc
popa
cmp
in
xor
cltd
mov
mov
je
mov
sub
inc
mov
das
fstl
out
or
loope
loopne
jg
jmp
ds
xor
jmp
cmp
in
ret
sarl
int3
std
xchg
mov
lret
dec
out
cmp
push
adc
add
pop
mov
adc
dec
push
stc
es
sub
ret
jns
xchg
push
loope
add
rolb
jno
xlat
sti
sbbl
mov
mov
xor
cmp
push
sbb
mov
pushl
mov
add
in
leave
fnstsw
cli
das
mov
and
mov
push
mov
jmp
sbb
dec
push
fidivl
fistps
sub
das
cld
adc
cmp
xorl
pop
mov
xor
dec
js
and
jl
mov
mov
adc
cmp
xlat
imul
add
out
ss
rcr
xchg
pop
mov
das
imul
dec
push
cmpsb
ljmp
inc
inc
mov
jl
sub
lahf
out
mov
adc
ret
outsb
fstpt
dec
clc
mov
lock
or
movl
mov
loop
orl
cmp
xchg
cmp
mov
je
popa
push
and
rclb
call
sub
push
mov
jne
mov
mov
ljmp
mov
scas
and
pop
repnz
inc
inc
fildl
fcoms
and
imul
xor
add
pop
inc
sbb
flds
jns
ret
pop
push
pop
fiadds
lods
ja
dec
xor
and
ret
fldcw
sbb
fidivrl
push
ja
ss
mov
out
dec
mov
test
mov
dec
test
pushl
rol
pushf
out
jns
mov
cmc
lcall
lods
std
and
adc
clc
xor
popa
jg
xor
mov
clc
dec
jp
fwait
jb
vunpcklps
test
xor
xorb
adc
pop
xlat
insb
in
or
rorl
call
call
dec
std
stos
jecxz
pushf
dec
inc
in
lock
cmp
mov
call
pushf
out
pop
sahf
xchg
jmp
xor
sbb
xor
pop
sbbl
or
loop
mov
nop
jo
or
jns
cld
lods
pop
fwait
mov
clc
xchg
dec
add
ss
sbb
sbb
test
out
inc
xchg
lret
xchg
das
adc
add
push
mov
inc
xchg
jmp
jp
jbe
clc
lcall
fildl
adc
arpl
das
cld
incl
in
push
aam
ror
ja,pn
rorb
pop
decb
sbb
add
push
or
clc
or
fsubs
push
stos
pop
icebp
mov
sbb
adc
movsl
cli
mov
es
cmpsb
and
sahf
adc
mov
fwait
lcall
sub
clc
daa
popa
xor
hlt
and
scas
mov
lock
jmp
sub
inc
pop
add
pop
inc
fbld
loopne
and
ljmp
adc
fwait
cmp
ljmp
leave
cmp
ret
bound
push
add
lods
or
inc
lret
add
in
das
mov
cmp
bound
pop
aam
inc
push
add
mov
push
and
pop
outsb
pushl
adc
mov
or
add
repz
mov
and
jb
mov
loope
int3
jns
dec
push
enter
popa
xor
popf
dec
ljmp
cwtl
add
jg
push
in
cwtl
js
setne
scas
mov
push
aas
or
pop
xorl
jne
xor
inc
jae
inc
jne
adc
sbb
or
push
pop
and
mov
add
cmp
vmread
loop
add
stc
ljmp
push
ret
add
jae
imul
pop
clc
xor
inc
jl
mov
psrad
mov
fbld
pop
xchg
fsubrl
cmpsb
dec
jbe
fistpll
push
mov
sbb
icebp
lret
add
push
movsb
dec
push
outsl
imul
add
inc
loop
dec
cmp
adc
mov
mov
pop
rolb
adc
and
or
add
fmull
lahf
push
andb
add
into
mov
pop
mov
inc
cmp
test
imul
bound
pusha
test
mov
cmp
lcall
xchg
cmpsb
les
stos
jle
jp
andb
xchg
pop
sti
ja
pop
call
or
jg
std
push
xor
pop
es
pusha
shll
xchg
xchg
fstl
ljmp
incl
jae
push
stos
iret
jne
loopne
fs
mov
push
pop
lret
dec
dec
aas
ss
repz
out
cli
mov
mov
jb
and
adc
notl
inc
repz
push
arpl
sbb
push
jp
adc
cltd
xchg
mov
inc
sti
sub
push
lcall
clc
mov
adcb
jo
inc
pop
add
stc
add
inc
pop
lcall
xchg
imul
out
mov
add
clc
outsl
cli
adc
push
sahf
add
sbb
shrl
popa
push
add
fbld
and
call
cmpsl
insb
xchg
decl
adc
test
shll
xchg
cmp
push
mov
icebp
jns
add
adc
xor
shl
scas
scas
call
cli
js
push
inc
mov
psubsw
cmp
and
pop
adc
movsb
cmpsl
std
sub
divb
xor
bnd
and
adc
call
jbe
jl
sahf
clc
mov
jp
out
push
mov
inc
cmp
inc
dec
daa
jmp
jnp
fs
pop
ret
popa
sub
cld
call
mov
lahf
inc
fs
sbbb
and
pop
ds
into
test
inc
notl
mov
notb
fs
and
mov
sbb
mov
subb
in
ret
pop
shll
lea
jo
mov
cli
lcall
inc
addr16
or
jmp
mov
lea
fcomip
push
in
cwtl
outsb
cmpsl
adc
push
call
sarb
mov
jecxz,pt
sub
and
jae
xchg
and
xor
imul
mov
mov
jno
lcall
insb
idivb
xchg
and
stc
inc
imul
mov
js
in
sub
mull
nop
adc
in
mov
xor
ljmp
xchg
sub
ja
inc
and
out
adc
outsl
stos
push
push
pop
xor
lcall
lock
lea
inc
jle
adc
ja
aas
cmc
adc
shrb
addr16
pop
mov
call
dec
rcll
bound
inc
in
decl
mov
mov
cld
add
jns
pop
and
ret
mov
sbb
xchg
bound
jne
pop
mov
pusha
lock
xchg
das
std
in
add
sub
push
mov
insb
movntq
sahf
movsb
jne
rcrb
dec
les
xor
clc
mov
cltd
pusha
out
imul
sbb
or
inc
mov
dec
sub
sub
fcmovu
pop
es
dec
enter
jno
mov
jnp
lcall
xor
jle
sbb
sub
movsl
aaa
dec
test
xor
pop
stc
inc
and
mov
dec
es
dec
add
std
mov
ret
daa
cwtl
push
clc
std
fiaddl
stos
push
mov
fadds
les
sub
mov
sub
ret
fildll
mov
sbb
xchg
aas
rclb
sti
jno
adc
fwait
pop
cmp
leave
mov
addr16
jg
inc
cmp
shl
adc
cmp
leave
fists
das
cld
fwait
scas
les
sbb
push
adc
sub
aaa
or
bound
outsl
cld
pop
mov
movsl
xchg
sbb
cmp
lock
jg
push
and
or
movsb
and
outsl
lods
bound
scas
add
pop
aam
dec
sbb
mov
push
mov
mov
stos
or
jle
sbb
sti
xor
mov
popf
adc
or
sbb
mov
push
rol
sub
sub
fwait
mov
mov
jmp
sub
or
mov
repz
popf
push
insl
push
loope
shlb
dec
jns
je
push
inc
data16
nop
lret
xchg
pushf
lock
sbb
out
push
ds
ret
sub
xchg
sbbl
insb
sub
pop
popa
imul
cmp
and
or
mov
ja
dec
jae
sub
dec
lods
push
mov
outsl
cmp
add
mov
xorb
mov
fstl
add
lret
jmp
aam
fistpl
cmp
push
ja
adc
aam
rolb
inc
loope
shr
ss
movsb
mov
shl
sub
pop
cwtl
cmpsb
ja
loopne
adc
mov
add
jbe
cmp
das
jl
les
lret
adc
jg
fidivs
hlt
decl
xor
sahf
ret
ds
xor
add
adc
rolb
cmovbe
jbe
mov
cs
dec
adc
jo
push
outsl
imul
fs
push
add
int3
pusha
mov
sbb
sbb
loope
sub
xchg
push
dec
addb
adc
cmpsb
sbb
xor
outsb
xchg
and
xchg
fisttps
sbb
jp
lret
shrl
mov
inc
adc
popa
movsl
addr16
sbb
clc
bound
adc
nop
mulb
cld
or
inc
nop
jno
mov
mov
sbb
pop
and
mov
into
clc
daa
das
mov
fisubrs
std
cli
ds
shl
fcompl
inc
imul
into
jmp
lods
or
leave
call
movl
addl
add
pop
dec
xchg
inc
shr
std
mov
xchg
pop
sbb
push
dec
or
mov
dec
mov
aad
imul
stos
dec
pop
add
jg
jg
cmp
je
and
mov
cmpsb
dec
in
lods
jae
sbb
movsb
bts
xor
std
sub
or
mov
cmc
fwait
ljmp
and
sbb
cld
or
cmp
lods
cmpsb
mov
test
in
mov
and
adcb
mov
and
pop
outsl
push
xor
push
or
mov
incl
dec
and
mov
mov
fdivl
es
or
push
test
xchg
rcrb
pop
call
jbe
mov
mov
add
add
adc
call
mov
in
ss
or
push
adcl
loope
out
aaa
jmp
repnz
adc
push
add
repnz
inc
xorb
icebp
fidivrl
insb
movsl
mov
inc
mov
repz
imulb
lock
add
icebp
clc
xchg
int3
push
popf
sub
lcall
sbb
imul
rorb
pop
pop
icebp
das
add
sub
icebp
adc
push
fucomip
fcmovnu
push
sub
push
jmp
ret
mov
call
jg
jo
cmc
add
shrl
scas
test
mov
mov
std
jmp
xchg
jmp
add
xor
mov
lea
leave
lret
dec
sub
lods
insb
gs
loopne
add
sub
pop
inc
fucomip
lret
jmp
outsl
jnp
fwait
mov
and
lock
ss
adcl
sub
aas
mov
and
ret
dec
ja
dec
ss
jge
adc
add
xchg
add
mov
mov
addr16
sarb
call
mov
cltd
rolb
dec
inc
xor
add
add
out
add
jo
jmp
fadd
arpl
jg
ljmp
fwait
imul
aam
icebp
dec
addb
shlb
push
shll
mov
filds
in
push
jle
or
jge
cmp
and
or
sbb
jmp
xchg
sbb
aas
test
rorl
adc
and
fxtract
sar
shlb
mov
jnp
je
xor
sbb
sub
cmp
lods
call
xchg
cmp
out
dec
or
sub
lods
inc
inc
int3
xchg
aad
shlb
pop
test
xor
and
xchg
bound
pushl
pop
gs
jp
call
jle
mov
push
adc
xlat
adc
fadds
decl
pushf
push
js
repnz
leave
mov
movsb
cmp
add
lcall
cmp
in
stos
sub
ret
dec
shr
add
aaa
aas
lret
add
loop
int3
dec
add
xlat
hlt
lea
adc
insl
std
in
push
cmp
addb
push
icebp
sub
call
adc
or
and
push
mov
ljmp
dec
adc
cmp
mov
decl
fiaddl
subb
mov
and
sbb
mov
mov
mov
xor
in
adc
loopne
xor
std
adc
sbb
sub
rcrl
add
test
jg
mov
js
xchg
sub
cld
inc
lret
adc
inc
loopne
dec
push
mov
and
mov
inc
pop
push
lods
pop
ds
add
sbb
ret
je
leave
clc
and
push
cltd
repnz
sbb
test
push
add
pusha
imul
mov
inc
lock
fs
dec
mov
fisubs
mov
mov
jbe
mulb
sub
add
outsl
dec
adc
pop
daa
and
clc
pop
xor
push
lahf
jmp
push
mov
sbb
sti
pop
jo,pn
pop
inc
test
imul
jno
and
leave
cltd
rcrl
push
xchg
ljmp
daa
popa
adc
leave
test
or
sbb
push
inc
enter
test
mov
add
add
ja
lret
call
jle
inc
lcall
cmp
jl
and
fstpt
or
jbe
and
jbe
repnz
imul
addr16
xchg
and
loopne
mov
lea
or
loope
mov
add
popf
sbb
sub
sbb
jecxz
add
cmp
dec
mov
daa
in
sbb
mov
push
mov
sahf
scas
push
shr
or
add
jecxz
inc
test
add
fmul
ret
mov
dec
rclb
das
or
sub
lea
and
in
ljmp
add
xchg
fildl
insl
xor
pop
rcll
cmp
in
jo
jle
repz
movsl
inc
pop
insl
inc
jp
jle
cld
sub
inc
push
dec
push
daa
sbb
aas
mov
pop
andb
movsb
stos
pushf
clc
add
fsubs
shll
sbb
imul
mov
xchg
out
sub
add
mov
addr16
shrl
and
adc
dec
clc
adc
push
jbe
add
dec
jo
aas
and
inc
dec
icebp
jbe
repz
bound
cld
cmc
add
rolb
addr16
mov
push
sbb
xor
inc
pop
ret
push
add
mov
push
jle
pop
adc
scas
nop
mov
push
stos
loop
insl
push
mov
sub
clc
ret
inc
cmc
adc
inc
aam
mov
mov
test
arpl
mov
jl
das
jle
rorb
rclb
dec
xchg
sbb
sbb
add
and
or
cmpsb
jge
es
imul
xor
inc
lock
and
add
iret
or
mov
or
test
pop
loopne
lock
mov
adc
mov
jecxz
into
sub
push
push
mov
or
fimull
jecxz
into
sbb
pop
jne
mov
pushf
mov
std
fstpt
call
mov
sbb
pushl
sbb
jecxz
loopne
clc
xor
rcrb
int3
mov
icebp
push
cmp
cmp
push
repz
mov
fistps
loop
jecxz
adc
icebp
loop
aaa
push
clc
iret
les
dec
orl
pusha
cs
sub
lcall
mov
popa
cli
icebp
mov
icebp
in
test
push
cli
ds
jp,pt
cmp
inc
lret
call
ds
div
ret
cmpsb
jo
dec
nop
into
in
jl
fs
pop
clc
test
divb
mov
inc
dec
ret
gs
mov
sub
mov
mov
popa
push
lods
test
or
aaa
push
push
popl
icebp
add
jbe
daa
icebp
imul
ss
ret
cld
in
stos
xor
jge
xchg
jecxz
movsl
fistl
in
fsubr
inc
adc
jl
ja
pushl
ljmp
scas
test
pop
clc
add
xchg
pop
mov
ljmp
ljmp
inc
imull
mov
icebp
pop
icebp
mov
add
add
or
and
ffreep
pop
dec
xchg
xchg
adc
clc
jecxz
jecxz
clc
lds
cmp
xor
stos
xchg
ds
cltd
pop
lcall
mov
in
add
inc
gs
les
shrb
ss
push
and
push
dec
inc
push
mov
push
xor
add
outsl
add
xchg
pop
jge
loop
sbbl
mov
test
icebp
fsubrs
jb
inc
out
fildl
outsb
gs
clc
clc
dec
fdivs
test
cmp
pusha
lods
aaa
pop
rolb
scas
adc
push
xchg
dec
rcll
xchg
and
or
and
dec
movsl
into
sbb
mov
filds
lds
cmp
mov
in
sahf
and
cltd
sbb
popa
lods
test
xchg
icebp
shl
or
push
jge
std
cmpsl
inc
add
jne
xchg
xor
ret
outsb
pop
sub
mov
pusha
insl
adcl
stc
push
mov
or
xchg
and
mov
lahf
add
sbb
inc
inc
lds
test
jecxz
fstl
xchg
aas
filds
mov
add
add
int
inc
pop
push
cmc
ljmp
and
imull
dec
sbb
jecxz
clc
pop
cli
fnstenv
or
push
aam
imul
test
rcll
orb
enter
aam
inc
ljmp
dec
mov
inc
mov
incl
mov
mov
jg
jmp
cmp
pop
loop
cmpsl
and
and
lret
mov
scas
std
roll
shll
fcom
and
jle
cli
lcall
fucomi
push
lret
fildl
out
cmc
shr
mov
cli
xchg
inc
add
push
sar
call
lcall
mov
sub
outsl
outsl
pop
dec
push
and
mov
xchg
adc
pop
lret
hlt
xchg
jecxz
scas
mov
dec
sbb
mov
xor
push
leave
adc
jne
aaa
inc
pop
sub
call
and
push
ds
jg
cmp
clc
lcall
decl
dec
cwtl
sub
push
push
push
lahf
out
sub
decl
incl
xchg
push
js
mov
iret
ret
mov
push
rorb
sbb
std
lcall
adc
daa
dec
sub
and
ljmp
loop
scas
sub
jmp
les
popa
xor
cmp
sub
jp
fdivr
aad
sti
fbld
mov
jo
sub
shll
decl
sub
dec
and
xchg
test
and
lahf
add
add
mov
and
in
sbb
stos
daa
inc
js
test
pushl
test
or
cld
xchg
inc
push
inc
inc
or
das
int
loop
adc
add
popf
test
and
in
push
cmp
pop
dec
sbb
fwait
sub
inc
and
sub
jb
std
cmp
inc
dec
push
sbb
jmp
leave
adc
mov
bound
xor
jb
jle
lods
pushl
push
icebp
sbb
insb
cmc
add
mov
xor
xchg
push
sbb
fnstcw
mulb
jp
adc
inc
and
push
and
lcall
popl
mov
shlb
or
cmpsb
mov
dec
clc
lret
cld
mov
inc
adc
stc
fistl
dec
lods
mov
ret
nop
jg
jg
nop
icebp
std
or
xchg
xchg
dec
stc
mov
push
hlt
cmp
lret
xchg
dec
mov
jmp
wbinvd
aas
fsubs
data16
mov
and
xor
inc
leave
push
mov
jg
lcall
outsl
sbb
xchg
push
adc
rolb
push
push
hlt
mov
push
xchg
jne
ljmp
pop
adc
decb
or
dec
decl
mov
fsubs
jmp
jmp
out
cwtl
or
ret
inc
ret
pop
das
push
mov
sub
ljmp
int3
or
sub
xor
sar
jp
mov
cwtl
imul
adc
or
dec
cld
ljmp
int3
mov
iret
sub
and
mov
lock
dec
fidivrl
xchg
cwtl
mov
test
das
sub
ds
stos
sbb
dec
jno
adcb
icebp
ljmp
test
push
test
or
int3
inc
hlt
xchg
icebp
lahf
fstpt
lods
mov
pushl
jl
add
addl
mov
pop
sbb
xchg
pop
sahf
test
testb
mov
add
push
incl
sbb
or
movsl
mov
dec
inc
test
adc
stc
and
clc
dec
push
fidivs
nop
iret
jno
push
pop
mov
das
fsub
add
cmp
sub
cmp
cmpsl
pop
push
fcoms
loopne
icebp
mov
lea
pop
imul
jp
in
jno
in
aaa
stos
ljmp
xchg
in
lock
mov
pop
leave
jo
sahf
or
lea
xchg
mov
shll
aas
cmc
sbb
sub
test
loopne
mov
xchg
jbe
out
sti
and
dec
mov
push
add
pop
jne
adc
and
mov
add
add
sub
shlb
punpckhdq
add
mov
dec
jecxz
add
cmp
inc
mov
adc
lods
hlt
loop
aam
adc
movsb
sbb
push
rorl
sub
fsubrl
mov
pushf
outsl
decl
das
rcr
mov
pop
shl
add
dec
cmp
incl
aam
bnd
cmp
adc
call
ret
inc
ds
push
adc
inc
fwait
mov
jnp
in
icebp
decl
in
shrb
xchg
adc
xchg
or
and
pushl
out
mov
inc
in
popf
testl
arpl
push
nop
scas
add
xchg
inc
rorl
cmp
lcall
sub
cmp
ret
dec
cmc
filds
or
aam
push
cmpsb
mov
or
sbb
mov
mov
stos
je
fists
iret
push
pop
pop
adc
hlt
cmp
push
push
outsl
or
inc
clc
hlt
pushf
das
push
and
lahf
stos
push
push
sbb
test
nop
invd
mov
pop
add
incl
inc
fmul
xchg
inc
sti
les
orl
inc
dec
mov
ss
xlat
mov
cmp
sbb
aaa
clc
stc
mov
lock
cmc
jg
jmp
jbe
aad
insb
and
adc
jmp
pop
test
test
mov
fadd
call
mov
dec
outsb
xor
fmuls
jl
pushl
or
test
adc
cmp
push
mov
or
cmp
or
lock
pop
ja
test
sbb
lcall
cli
adcb
div
cmpsb
mov
int3
push
and
sbb
loop
inc
inc
mov
cmp
sbb
movsb
mov
xor
dec
mov
pop
cld
in
loop
pop
flds
and
adc
jmp
outsl
out
dec
pop
jge
loopne
sbb
int3
into
add
mov
ret
imul
and
repnz
inc
ljmp
les
shr
sub
cmp
mov
cmp
or
shlb
fs
sub
dec
adc
das
fisttps
andb
jmp
rolb
dec
mov
std
fisubs
mov
push
je
pop
lea
adc
xchg
negb
incb
rolb
lock
jne
rolb
jmp
jl
in
out
int3
out
roll
lds
leave
sti
mov
fcoml
jae
call
pushf
or
push
inc
sahf
mov
cmp
lea
std
xor
popa
add
fnstsw
decl
and
jmp
pusha
mov
sub
fildl
cli
je
fucomp
xchg
inc
add
inc
mov
jg
add
xchg
xor
mov
add
cmp
fildll
movsb
lds
or
add
jbe
js
out
mov
dec
mov
sbb
push
xchg
adc
xor
pop
pop
sub
outsb
repz
aas
rol
lret
arpl
adc
std
add
outsl
lcall
or
pushl
ficomps
enter
or
dec
sbb
jo
test
out
push
cs
lahf
xchg
push
ljmp
icebp
push
mov
push
dec
jnp
fisttps
mov
mov
and
pushl
adc
mov
xchg
scas
int
in
push
jg
ljmp
push
mov
insb
mov
scas
inc
xchg
inc
loop
mov
mov
jg
and
xchg
mov
ret
ja
sarl
incl
adc
mov
dec
jl
call
stos
daa
and
out
dec
push
loop
pop
jae
pop
repnz
mov
push
fldt
rcrl
xorb
ljmp
jmp
mov
add
adc
mov
inc
xor
lret
add
xchg
xchg
ret
ljmp
and
loope
in
adc
jle
cmp
mov
ljmp
loope
call
jmp
adc
loop
xlat
mov
dec
sbb
jns
jne
scas
scas
sub
decl
mov
pop
icebp
inc
repnz
lahf
adc
xchg
inc
mov
incl
and
arpl
testl
lcall
jmp
push
stc
or
sbb
cli
aaa
pop
icebp
inc
out
int
push
mov
sti
out
jae
cmp
aaa
in
daa
pusha
cmpsl
mov
cmp
inc
in
adc
jne
ds
or
out
mov
shll
test
push
push
sub
adc
call
adc
jp
pusha
mov
and
divb
adc
pop
outsl
loopne
lret
and
cld
inc
pop
mov
call
push
into
inc
push
mov
inc
jmp
jmp
lods
mov
xchg
lock
pusha
adc
sbb
test
jg
test
add
pop
inc
xor
dec
cld
ljmp
push
cmp
and
jmp
mov
push
add
mov
in
inc
sub
dec
add
mov
xor
ss
aas
andb
enter
sbb
ret
inc
loopne
cmp
mov
cs
push
mov
loop
call
cld
inc
loopne
add
dec
xchg
repz
in
or
out
sub
jmp
out
mov
inc
out
or
pop
inc
lret
inc
cld
and
push
sub
xchg
xor
ljmp
ss
cmpxchg
sbb
pop
xchg
ficoms
bound
push
faddl
stos
loope
mov
test
loope
inc
mov
jle
push
popl
add
cs
xchg
mov
dec
stos
idiv
ret
and
xchg
push
xchg
or
incl
dec
mov
add
lods
icebp
and
adc
adc
mov
incl
in
insl
adc
adc
orb
and
adc
aad
pop
or
addb
inc
aas
in
sbb
xor
decl
movl
xchg
pushf
shl
and
push
dec
inc
xchg
push
aaa
sahf
and
pop
outsl
hlt
inc
inc
andl
mov
fmul
add
inc
mov
sbb
faddl
mov
push
pop
adc
xchg
pop
clc
fcomip
or
and
out
inc
std
ss
dec
cld
das
std
pushl
popa
adc
xlat
les
push
jl
fistpl
push
movsb
mov
shrb
mov
jns
inc
add
call
clc
fs
addb
cmp
sahf
add
mov
inc
mov
out
fstl
in
sahf
clc
xlat
push
arpl
shlb
cmpsl
lds
cmp
pop
aas
cld
jmp
test
into
xlat
sbb
enter
push
dec
xchg
mov
sti
cs
aaa
cli
enter
sbb
mov
dec
dec
push
clc
cwtl
or
fwait
xor
sbb
mov
outsl
add
std
mov
adc
test
aad
push
mov
ljmp
bound
fnstcw
or
mov
dec
aas
inc
push
call
mov
incl
dec
int
adc
pop
mov
mov
lcall
xor
xlat
cmp
sub
fwait
loopne,pt
or
add
loope
out
xor
call
das
cld
lock
mov
sbb
mov
adc
sub
nop
xchg
adc
push
or
dec
sub
pop
cli
fcmovnu
inc
xchg
mov
add
adc
daa
call
jg
sti
enter
aad
sti
test
std
cmpsb
jns
push
inc
sub
das
adc
and
jmp
jnp
and
sbb
sbb
fwait
lea
lcall
lcall
and
test
mov
xor
pop
jecxz
out
adc
das
movl
cmp
ds
cmp
jmp
clc
sbb
out
mov
test
imul
fucomi
pop
xchg
or
ret
push
inc
cli
cltd
jb
stc
mulb
jecxz
mov
inc
stos
sub
dec
cmp
loop
lret
ljmp
sbb
push
mov
lret
push
das
rcr
inc
mov
decl
imul
mov
dec
dec
clc
and
jge
fisttpll
xchg
and
mov
imul
xor
mov
add
add
das
cmc
decl
leave
outsb
fs
mov
dec
xor
gs
push
jns
cs
scas
mov
pop
rol
inc
mov
sbb
jmp
sub
rol
fnstcw
mull
pop
es
pop
hlt
jmp
add
pusha
out
adc
adc
repz
lock
sub
outsl
shrb
inc
xor
fnop
or
mov
test
in
ret
icebp
pop
lcall
inc
mov
ljmp
jg
loop
mov
mov
pusha
xor
mov
dec
mov
dec
nop
ret
rorb
add
inc
std
call
add
call
fcmovu
divb
in
cs
sbb
bound
push
lea
pop
pop
xor
lcall
pushl
rorl
rolb
gs
subl
in
idivb
sbb
inc
fistl
sub
test
pop
adc
push
sub
decl
push
fdivrs
adc
or
cli
mov
and
lret
fbstp
dec
mov
test
cmc
ljmp
repnz
loop
mov
in
lcall
mov
stc
add
lret
xor
adc
sbbb
sub
addr16
stos
jg
incl
fs
call
repz
inc
cwtl
mov
jnp
jl
add
rol
es
dec
mov
cmc
sub
cs
xchg
or
lods
add
call
stos
jg
and
mov
data16
push
dec
xor
aam
mov
loopne
jne
pop
cli
push
push
lret
push
bound
xor
jl
add
outsl
pop
pop
in
insl
cwtl
out
ret
inc
nop
pushf
inc
push
js
addr16
sti
mov
push
jb
xor
sti
add
sub
jo
fnsave
xchg
aam
movsl
jg
insb
enter
jecxz
jno
cmp
inc
add
daa
mov
mov
and
int3
mov
mov
push
push
mov
cmp
adc
fcmovnu
dec
insb
imul
mov
lcall
sbb
push
push
ds
nop
shrl
pop
lcall
loop
add
shl
pop
insb
lods
cmpsl
jno
push
xlat
lea
aaa
lock
pop
shr
loopne
scas
fsubs
sahf
ret
lret
call
and
in
stos
add
enter
push
sar
icebp
cmp
and
cld
inc
pop
fisttpll
pop
inc
and
fmull
loop
icebp
pushl
cltd
fld
or
xorb
mov
es
lret
mov
and
sbb
outsb
mov
mov
and
mov
inc
imul
or
add
rolb
inc
bound
or
pop
sub
insb
or
jb
push
pop
or
jo
cld
add
sbb
cmp
push
jns
pusha
lods
sbb
or
sbb
jg
and
in
sbb
or
xchg
mov
push
stos
clc
imul
pop
sti
aas
insb
xor
and
add
movsb
mov
stos
es
js
push
xor
out
inc
sub
cld
imul
mov
xor
ficoml
std
outsl
push
fsubs
mov
add
stos
lea
mov
es
push
inc
sbb
icebp
bound
sub
lret
pop
xchg
ret
xchg
xor
push
pop
mov
jl
add
inc
das
pop
pop
bound
pop
xor
push
push
pop
xchg
mov
dec
pop
aaa
es
mov
sub
xchg
outsb
aad
sub
in
loopne
pop
and
push
in
adc
stos
xor
sbb
dec
ss
pop
xchg
dec
hlt
xchg
test
mov
insb
icebp
not
xor
nop
xchg
dec
xchg
sti
rclb
mov
mov
xchg
mov
sbb
add
bound
sbb
fmulp
mov
xchg
fadds
sub
enter
sub
fldt
mov
test
jp
sbb
mov
push
inc
sbb
sub
add
ja
das
jno
cltd
fwait
mov
pop
mov
jl
adc
je
aam
pop
sbb
sbb
sub
or
inc
test
ljmp
addl
xor
mov
fldl
call
mov
and
push
mov
shll
mov
xor
imul
out
pop
ss
movsl
divb
inc
rcrb
add
and
in
dec
das
aam
jle
xchg
repz
jnp
mov
fcmovne
cs
inc
pop
add
xchg
loopne
fdivr
jg
syscall
push
add
push
mov
cli
add
insl
nop
sbb
sahf
pop
imul
xlat
inc
into
add
pop
inc
jp
inc
jle
outsb
lcall
sub
ljmp
dec
and
cmp
stos
sbb
pop
mov
movsl
adc
loope
add
addl
inc
in
or
sub
shlb
inc
scas
adc
aam
int
xor
sbb
call
jg
dec
daa
outsb
dec
mov
pop
test
lods
iret
xchg
add
lahf
adcb
or
sub
jmp
iret
xor
or
mov
mov
ret
hlt
or
cmp
sub
pop
or
and
ds
std
pop
pop
pop
js
sti
jnp
in
and
cmp
hlt
mov
mov
out
jnp
jo
addr16
jp
call
mov
test
mov
or
insl
or
jge
loope
lahf
xor
jnp
orb
aam
fistpl
ss
aad
adc
pop
cli
pop
push
outsb
dec
subl
pusha
mov
lods
in
mov
clc
lea
or
adc
rorl
out
js
dec
cmp
inc
pop
sub
das
sbb
call
inc
int
icebp
mov
sti
outsl
jge
mov
xchg
into
sbb
in
stos
add
pop
pop
outsb
ljmp
jge
cmp
cmp
incl
mov
adc
xor
rcll
push
dec
das
adc
cmp
mov
clc
pushl
clc
xchg
cmp
jno
push
push
jne
mov
mov
fnstsw
push
jae
or
jle
gs
dec
in
cli
outsl
mov
std
lock
std
call
push
adc
inc
sbb
pushf
xchg
subl
lods
xchg
mov
mov
fnstsw
sti
mov
pop
out
jle
ds
xor
xchg
je
mov
push
popa
cmc
and
mov
imul
adc
xchg
mov
dec
sub
aaa
push
clc
lock
cmc
and
outsl
shl
adc
daa
dec
dec
gs
push
loop
rclb
jge
loopne
jae
aaa
jne
rcrl
in
or
movsl
ljmp
fs
cmp
mov
jb
add
cmp
push
or
es
inc
add
imul
inc
cmp
jge
fcom
jge
xchg
add
sbb
sub
pop
and
sbb
call
jge
repnz
fcompl
push
push
aaa
sbb
out
or
dec
insl
push
jg
add
mov
pop
mov
push
int3
imulb
xchg
jge
out
stos
mov
push
adc
cmp
sbb
lock
jg
jmp
ss
popf
or
lock
cmpsl
sbb
dec
test
adc
dec
rcr
pop
jp
xchg
xchg
and
jnp
rclb
imul
in
push
stos
popa
dec
fsubl
cmp
inc
aad
movsl
in
outsl
hlt
sub
push
ret
adc
jg
incl
nop
add
xchg
movsb
sbb
cld
std
data16
dec
shll
shlb
hlt
mov
pop
cmp
xor
std
and
mov
mov
add
stc
and
fidivrs
add
xor
xchg
cmpsb
adc
fcompl
jl
stos
inc
iret
or
mov
pop
shl
or
fistpll
loop
and
inc
mov
inc
and
mov
fdivr
cmp
add
imul
jo
dec
out
ret
sbb
lods
aam
fsin
and
loope
es
add
mov
xchg
ss
cmc
lret
xchg
roll
rorl
fisttpll
pop
test
jnp
clc
stos
mov
movsb
mov
add
sbbl
pop
enter
leave
push
std
das
fs
sti
jp
jp
ss
inc
pop
inc
jmp
rcrl
xchg
ret
xor
adc
xchg
sbb
std
xor
xlat
pushl
inc
sub
in
fistps
pusha
test
adc
mov
cmpsl
add
ret
add
xchg
pop
mov
cmpsl
cmp
loope
pop
mov
imul
cmp
sub
pop
filds
pop
xchg
bound
add
sti
sbb
xchg
inc
push
push
pop
loop
test
sbb
les
add
inc
repz
add
in
inc
push
aaa
subb
arpl
stos
cltd
push
xchg
xchg
sub
cmpb
add
sub
add
mulb
xor
lea
add
pop
jp
pop
push
cmpsb
rcrl
je
sahf
adc
sbb
sub
inc
mov
lret
and
neg
loopne
das
and
cmp
mov
mov
pop
or
clc
dec
add
bound
incl
inc
xchg
dec
and
sbb
icebp
lahf
jg
std
dec
cld
sarl
cs
or
inc
pop
int3
or
lcall
push
ss
cmp
jb
das
and
jp
jle
pop
and
fldenv
jl
in
jecxz
movsl
lret
xor
pop
sub
hlt
sbb
lahf
jnp
cltd
ret
pop
inc
pusha
sub
lahf
fcomp
pop
inc
outsl
je
in
popf
sbb
mull
in
sub
cwtl
dec
out
int
lcall
mov
mov
push
icebp
cmpsl
jne
push
loope
mov
arpl
inc
idiv
idiv
add
into
arpl
arpl
scas
adcl
mov
or
call
mov
repnz
movq
bound
fucomi
or
hlt
xchg
and
ret
sti
leave
mov
pushf
in
or
add
dec
mov
xchg
pop
sub
out
pop
sbb
fs
cmp
mov
and
pop
push
xchg
push
cmp
mulb
sub
decb
ja
add
sub
jg
js
pop
xchg
xchg
roll
movsl
outsb
lock
pop
and
aaa
sub
aas
xor
sbb
daa
aad
sbb
mov
xor
pop
push
das
das
cs
xchg
adc
inc
add
and
jne
daa
lcall
nop
and
sub
add
inc
pushf
cld
test
subb
jmp
or
loope
add
mov
pop
bound
add
xchg
jge
mov
aam
roll
mov
stos
inc
mov
je
sbb
incl
mov
push
jno
mov
jg
inc
aad
mov
push
and
call
fistpll
jmp
stos
push
mov
xor
loopne
enter
pop
mov
in
jo
mov
and
mov
xor
sub
cld
or
les
movsb
cmp
push
sbb
jnp
adc
ret
cmp
mov
cmp
inc
add
sbb
adc
or
stos
mov
in
stos
das
jge
cmpsl
push
in
push
mov
or
mov
push
mov
inc
adc
jns
inc
pushf
lcall
loope
loope
je
xchg
sbb
cmp
lea
cld
fists
and
mov
jg
ljmp
push
inc
stc
mov
fimull
test
mov
incl
jb
dec
jno
sub
hlt
jbe
decb
or
push
aam
mov
dec
xchg
outsb
lods
pop
in
in
xor
pop
ljmp
pusha
xlat
pop
adc
call
addr16
ret
stos
jbe
pop
jg
xlat
add
rolb
xchg
and
js
test
pop
push
dec
xchg
cmp
add
mov
sbb
xor
push
pop
mov
outsl
jg
push
add
push
hlt
movsl
faddl
lret
call
clc
push
add
pop
sbbb
rcll
cmc
lcall
xchg
jbe
xchg
mov
cltd
mov
mov
sub
xor
inc
out
adc
negb
push
dec
jne
sub
rcl
je
ja
arpl
and
pop
cwtl
mov
mov
rorl
faddl
ljmp
mov
mov
std
cmp
push
add
sbb
aaa
aas
and
add
js
inc
mov
ficoms
loopne
and
lahf
xor
xchg
int
xor
sub
cli
adc
testl
inc
mov
push
in
push
mov
outsb
xchg
jb
stos
lods
mov
pinsrw
pop
adc
pop
mov
xchg
xor
add
test
les
filds
add
stc
aaa
sbb
js
mov
add
dec
xchg
xchg
clc
lret
shll
inc
enter
xchg
fs
cwtl
or
jmp
roll
shlb
or
pop
dec
int
pop
nop
mov
in
inc
xlat
cmpeqps
ljmp
push
aaa
mov
sar
ljmp
mov
dec
push
xchg
xor
mov
enter
push
mov
jl
adc
push
mov
sbb
aam
add
sbb
icebp
and
test
enter
sub
push
fsubrl
push
and
add
add
jg
add
adc
or
rcll
mov
add
mov
pop
push
xorl
movsl
or
call
mov
sub
dec
inc
mov
mov
and
fisubrl
and
or
inc
xor
adc
sbb
inc
sub
mov
loop
jl
xchg
inc
sub
fiaddl
or
test
cld
jle
loope
xchg
sbb
adc
jg
adcl
xchg
pusha
pop
mov
daa
cli
ret
in
push
lcall
cmp
push
insl
fdivr
fstl
ret
ret
pop
adc
dec
sub
test
push
rorb
mov
mov
push
sti
dec
cmp
test
cmc
leave
mov
cmp
and
mov
das
inc
and
mov
js
roll
sbb
roll
pop
and
aas
jecxz
pop
xchg
outsb
pusha
leave
out
dec
jecxz
cmp
jmp
jl
lods
or
dec
pushf
cmp
cwtl
scas
into
and
push
or
inc
outsb
mov
xchg
add
inc
scas
xchg
mov
idivb
or
std
pop
pop
pop
push
lock
dec
cmp
pop
jp
mov
insl
mov
pop
xor
popa
inc
test
cltd
push
data16
xchg
cmpsl
cld
aaa
fidivrs
cmp
jl
adc
ret
fsubrl
and
sbb
mov
in
test
aad
sti
rclb
das
outsl
add
mov
cld
sub
xor
into
add
sub
or
rolb
push
sbb
mov
xlat
jp
add
lock
outsl
inc
fdivrl
mov
mov
adc
add
dec
xor
jne
jle
and
enter
ljmp
inc
cmp
daa
sahf
mov
int
sub
lock
psllw
xor
std
and
out
popa
mov
xchg
push
movsb
shl
fisttps
daa
mov
outsb
sbb
sbb
fisttps
outsb
gs
leave
mov
in
test
cld
aam
jmp
scas
adc
push
xor
cmp
scas
adc
hlt
mov
pushf
ss
xor
out
or
dec
repz
scas
dec
call
lcall
ljmp
cmp
sub
push
inc
je
push
pop
loopne
mov
inc
test
xlat
sub
inc
arpl
mov
lods
into
mov
mov
cmp
xchg
adc
cli
ljmp
adc
cmpsl
dec
add
or
or
ret
outsl
setg
mov
mov
inc
push
daa
add
sbb
mov
aam
dec
mov
dec
fisttps
xor
pop
lcall
jmp
or
into
mov
ds
divl
or
dec
mov
aaa
mov
jne
sbbl
mov
jecxz
mov
sbb
call
mov
mov
ret
add
leave
insl
mov
cli
or
push
jbe
xchg
pop
sarl
mov
or
es
das
cmp
movl
daa
push
mov
sub
and
and
incl
adc
rol
jo
cwtl
int3
dec
daa
outsb
mov
add
outsb
mov
jmp
xor
test
add
inc
add
jg
sbb
insl
popf
cltd
dec
xor
sub
sub
inc
out
jg
jecxz
push
and
mov
and
lock
stc
pop
adc
mov
shlb
inc
cmpsb
push
sahf
test
filds
inc
dec
mov
inc
mov
cmc
mov
pop
icebp
jae
stc
and
sbb
scas
clc
test
mov
in
add
add
cmp
cli
pop
add
push
xor
ljmp
inc
pop
loop
arpl
adc
mov
pop
pop
mov
ret
jmp
lds
popf
lcall
jbe
sub
cli
jmp
mov
test
call
cmp
fwait
mov
or
mov
push
filds
js
dec
ret
mov
or
imul
inc
mov
mov
icebp
xor
or
sbb
jo
pop
pop
ja
cmp
ljmp
mov
enter
dec
dec
mov
imul
or
ss
dec
mov
loopne
xor
push
call
ljmp
push
leave
data16
rolb
std
outsl
add
popf
sarb
jl
stos
add
pop
adc
movsl
adc
lods
mov
xchg
movsb
dec
das
lods
mov
cmc
les
inc
adc
cltd
movsb
ror
jp
push
xchg
dec
nop
stc
mov
push
or
mov
push
and
push
jae
mov
mov
sub
into
in
aam
push
mov
aad
xchg
jmp
add
pop
sub
cmp
push
lds
mov
dec
jae
and
icebp
adc
ljmp
ret
loopne
sub
jb
inc
sbb
dec
cmp
sbb
pusha
lcall
lcall
cmp
xchg
xchg
or
mov
bound
push
xor
popl
andl
outsl
cld
mov
fstpl
loope
or
jns
inc
fcoms
das
aam
add
push
cwtl
sbb
mov
subb
in
pop
iret
inc
xlat
cmc
rcrb
inc
pop
leave
stos
gs
in
xchg
ds
pusha
mov
ss
fnstenv
shl
sbb
xor
and
insl
or
pushf
sbb
pop
fildll
sbbl
ds
lods
in
mov
js
pop
or
test
jmp
jne
mov
rcl
sbb
mov
jb
xor
inc
push
vmread
pop
adc
scas
jge
push
mov
incl
sub
out
mov
lea
push
divb
mov
rclb
add
ljmp
into
loope
add
lods
adc
xor
push
gs
push
jle
fwait
movsl
popa
jns
cld
pushf
sub
jo
and
pop
in
mov
sbb
cmpsl
sub
push
sub
jg
mov
shll
or
shr
or
sarb
push
pop
int3
enter
cld
add
ljmp
outsl
push
dec
pop
or
mov
out
xor
mov
dec
ljmp
iret
and
or
pop
mov
jno
push
cmpsb
nop
cmc
xlat
xchg
add
xchg
mov
jg
mov
dec
pop
inc
jno
pop
cli
out
mov
push
mov
das
lock
adc
dec
or
testl
adc
mov
es
mov
jg
inc
pop
ljmp
loope
enter
push
push
jne
popa
sub
add
sub
pop
sub
sub
or
in
sub
adc
aaa
movsl
arpl
jb
dec
mov
mov
mov
cwtl
addr16
dec
daa
movsb
cs
incl
cmp
dec
imul
adc
outsl
cmpsl
sbb
mov
sub
dec
mov
inc
inc
call
ds
push
repnz
and
dec
push
fildl
mov
inc
enter
outsw
dec
sub
sbb
and
adc
sbb
xor
mov
mov
add
rcrl
xlat
xor
orb
in
inc
cmc
mov
imul
bound
pop
mov
call
stc
add
cmp
push
ret
jnp,pt
jmp
or
jno
add
nop
push
pop
pop
mov
mov
stc
mov
cmp
jg
push
xchg
loopne
pusha
xor
xchg
push
fcom
mov
or
push
add
mov
lds
pop
sub
jo
inc
cltd
pushf
add
ret
pop
inc
xlat
push
jo
js
dec
popa
and
inc
std
out
repnz
loope
test
movsl
mov
mov
fs
sbb
push
test
xchg
push
cld
sbb
aad
movl
jo
cs
jo
lcall
adcb
xor
inc
hlt
push
outsl
xor
jecxz
mov
and
adc
sbb
les
stc
in
push
sahf
mov
fstps
or
out
pop
ljmp
xchg
mov
fdivrs
xchg
sti
jmp
and
sbb
pop
cmp
mov
add
xor
push
jns,pn
aas
andb
std
cltd
add
or
mov
push
jg
ljmp
insl
hlt
cmp
movsl
add
fcompl
test
das
sbb
jecxz
add
mov
xor
popf
xor
outsl
jl
or
xor
cmp
cmc
cwtl
or
jge
pop
call
push
push
add
sbb
popa
push
or
add
sbb
leave
add
fwait
incb
jg
mov
sbb
daa
xchg
or
repz
movsl
and
rorb
xlat
xlat
mov
xorb
push
rorl
push
xchg
je
outsb
push
sbb
aas
rcll
in
and
mov
dec
shl
pop
aaa
pop
movsb
sbb
or
hlt
ret
rcr
mov
mov
xchg
aad
or
dec
cs
in
push
jnp
loope
mov
inc
mov
mov
mov
dec
fs
mov
xor
push
js
loope
call
mov
movsb
push
add
orb
outsl
inc
loopne
mov
push
pop
test
xchg
mov
add
out
cmp
fisubs
shlb
adc
mov
out
mov
xchg
push
and
xchg
xchg
mov
add
lret
mov
movsl
pop
jg
faddl
mov
push
push
sub
add
pushf
cmpb
mov
jg
mov
ss
adc
mov
xchg
clc
test
cmp
mov
stos
mov
xchg
mov
pop
add
mov
rol
cs
in
jg
fcmovne
mov
sub
and
sbb
inc
xchg
iret
jp
aaa
cmp
repnz
mov
outsb
dec
xchg
add
ret
fldl
rclb
sahf
testb
sub
and
dec
popa
insl
mov
clc
fsub
xchg
aad
push
xchg
sti
jp
pop
add
and
or
jg
and
pop
lock
lcall
xchg
scas
mov
addr16
cmpsb
std
dec
scas
push
xor
scas
popa
in
mov
std
add
xchg
or
shrb
lret
xchg
jne
add
xchg
push
dec
clc
decl
jp
mov
jbe
xor
jb
xor
push
sbb
in
pop
jmp
call
in
jmp
sub
hlt
cwtl
add
inc
ds
je
sbb
push
add
cmpb
roll
insb
push
les
pushl
pop
int3
inc
inc
out
push
xchg
scas
fst
sub
add
test
in
jmp
jp
inc
arpl
cltd
lahf
je
and
dec
clc
lcall
lods
inc
lret
xchg
lret
mov
pop
jo
psrld
jae
mov
sbb
pop
xchg
jg
pushl
shrb
xchg
aaa
or
test
rolb
adc
clc
sbb
xor
add
sub
sub
pop
jg,pt
jmp
shll
mov
in
xlat
int
cmp
sbb
fucomip
or
jle
cmp
adc
loope
sar
xchg
test
inc
insl
ljmp
xchg
inc
pop
clc
jg
or
mov
dec
mov
and
push
or
xchg
dec
fisubs
das
call
test
adc
stos
inc
and
mov
sub
adc
sub
andl
push
rorb
imul
pushl
shll
scas
sti
scas
jg
testl
and
jg
cld
cmpsl
and
scas
mov
jge
and
xchg
jnp
pop
add
jg
mov
xor
shll
das
dec
mov
insb
lret
add
mov
sub
repnz
and
enter
mov
adc
out
jns
ljmp
and
test
in
leave
stc
push
arpl
imul
push
cltd
in
lds
test
call
adcl
daa
jg
in
icebp
jne
inc
and
add
jl
nop
jecxz
dec
lcall
sbb
lods
pop
cmpsl
lea
shrb
push
fwait
push
repnz
jg
pop
inc
push
mov
sub
xlat
dec
insl
sbb
repnz
mov
ljmp
xor
rolb
sub
fs
ljmp
sub
xchg
add
andl
and
mov
jno
sub
pushl
dec
js
push
leave
outsb
adc
cmp
xor
pshufw
inc
lcall
sbb
push
std
popf
inc
adc
and
pop
andl
lock
aad
mov
mov
pop
inc
mov
jmp
loopne
add
lret
inc
in
and
sbb
loope
mov
pushl
jl
push
jmp
out
icebp
pop
popf
and
push
jl
movb
outsw
mov
mov
push
arpl
mov
and
push
int3
in
in
and
pop
sbb
sub
xor
cmp
jp
push
jno
lock
cmp
addr16
popa
aad
nop
outsl
mov
pop
fbld
movsl
and
aam
scas
aas
mov
test
jl
cmp
adc
loop
push
in
ficompl
ss
out
mov
xor
lock
aaa
push
push
leave
jnp
dec
movsb
sub
lret
test
cs
addr16
push
movsl
mov
lahf
xchg
inc
fdivr
in
push
mov
bound
test
in
lea
addl
cld
xchg
adc
mov
inc
cmp
mov
out
pop
pop
xchg
dec
mov
xchg
push
fs
xchg
pop
xlat
dec
sbb
aas
mov
leave
push
jb
nop
mov
ret
lret
pop
sbb
std
aas
andb
dec
push
cwtl
fisttpll
enter
aas
push
lock
cmp
mov
push
cli
add
ljmp
mov
add
jnp
adc
or
cld
incl
lods
cmpsl
pushf
inc
rorb
fadd
pop
cld
pop
jno
cmp
mov
cmp
in
mov
movsl
sarb
test
lock
push
mov
mov
mov
data16
or
rcrb
out
out
aad
push
scas
es
mov
push
jns
sbb
test
mov
rolb
and
stos
std
popl
in
loop
push
in
je
and
push
pop
jmp
xchg
sbb
inc
or
dec
sbb
rorb
test
sbbb
push
add
out
clc
add
fldenv
scas
pop
mov
and
cmp
add
rorb
stc
outsl
call
call
and
fs
inc
sahf
outsl
cld
pop
xlat
out
mov
mov
pop
nop
and
es
sbb
fcmovnbe
pop
inc
ret
sub
lods
testb
clc
add
das
scas
and
sbb
inc
in
jg
inc
ret
mov
sbb
scas
aam
das
insl
and
es
jg
jmp
jne
mov
mov
and
lahf
in
iret
cld
push
mov
push
fildl
fldt
lds
add
stc
cmp
dec
fdivrs
decl
mov
mov
xor
loopne
jbe
rorl
scas
and
pop
mov
mov
adc
or
das
dec
push
and
push
call
scas
int3
xor
aam
out
rorl
adc
mov
iret
out
bound
sub
mov
rcl
jno,pt
pop
aam
lods
xor
adc
insl
outsl
std
jg
in
loopne
into
pop
subl
fs
lods
bound
cltd
imul
jns
mov
rcrb
jmp
jle
hlt
mov
and
bound
loopne
mov
xchg
decl
or
push
xor
inc
loopne
jns
fs
jecxz
js
loope
je
adc
and
mov
test
pop
and
jae
cmp
das
das
decl
adc
lcall
inc
int
dec
into
jne
gs
xor
scas
xchg
and
cltd
orb
sbb
push
decl
pusha
rol
in
xchg
mov
addl
or
outsb
je
ret
ja
inc
ret
outsl
jno
mov
cmc
jmp
je
aaa
and
scas
mov
pop
mov
mov
push
or
cmpb
lcall
stos
call
and
sub
pop
jmp
jb
sbb
testl
pop
mov
dec
test
or
stc
cmp
adc
jle
jg
mov
les
mov
movsl
push
not
cmp
sbb
mov
and
or
push
call
add
movsb
or
or
pop
mov
popa
icebp
outsb
cmp
cmpsb
cmp
inc
pop
mov
or
push
dec
fcompl
dec
std
fstpt
and
fwait
xor
cmp
test
xor
ror
aas
sbb
xchg
cmp
in
inc
sti
xor
test
mov
add
add
adc
add
nop
push
bound
sub
jns
jmp
jo
push
pusha
add
cli
cmp
or
xchg
sarb
cli
test
test
add
and
and
dec
mov
and
mov
sti
jmp
popf
sbb
loope
jmp
sbb
add
mov
xchg
dec
jbe
dec
aam
inc
loop
mov
jecxz
addl
das
psubsw
out
out
jb
add
add
ret
sbb
fstps
fiaddl
mov
push
and
sub
jle
arpl
scas
sub
push
jmp
dec
pop
jno
daa
pusha
shlb
in
scas
fistpl
and
xor
fsubl
and
outsl
in
call
loop
pop
add
mov
cld
icebp
pop
xor
sbb
mov
out
sub
pushf
mov
call
xchg
mov
dec
loope
pop
clc
fildll
mov
dec
inc
jmp
inc
faddl
loopne
and
push
ja
mov
ret
or
cli
fnstsw
pop
iret
dec
mov
outsl
int
bnd
xchg
pop
movsl
pop
mov
loopne
lds
dec
xchg
add
pop
clc
ret
cmpb
aam
or
cli
sub
mov
aaa
clc
aaa
inc
xor
xor
icebp
add
mov
scas
punpckldq
inc
mov
in
dec
pushf
cmp
bnd
enter
inc
pop
cmp
ljmp
call
mov
inc
adc
mov
pop
mov
mov
pop
test
mov
cmp
fcoml
mov
popf
je
cli
loope
or
mov
les
jp
mov
inc
cmp
ret
xchg
jge
jecxz
rolb
filds
in
push
mov
push
xlat
adc
pop
in
test
dec
fldl
into
push
mov
int3
and
mov
pop
icebp
dec
addb
dec
cltd
rol
std
adc
mov
dec
cmp
xor
or
pop
xchg
xor
pop
test
out
push
imul
add
mov
test
jp
xor
pop
lret
rorb
mov
outsl
jg
scas
inc
repz
addr16
gs
scas
sahf
hlt
addl
ss
iret
xor
jg
mov
mov
lret
inc
xor
jmp
push
in
push
inc
in
dec
mov
sub
sub
incl
sbb
or
sti
out
repnz
cmp
and
xchg
in
loop
pushl
fwait
dec
cwtl
mov
outsl
cmp
arpl
xchg
pop
push
movsb
cltd
dec
jo
jns
mov
loop
pop
call
and
add
ljmp
xlat
movsb
cmp
ret
clc
fdivrl
or
movsl
jg
ret
sub
sbb
jmp
call
dec
test
xor
mov
add
pop
xchg
mov
andb
das
lds
push
sub
mov
clc
decl
dec
inc
cwtl
je
les
fsubs
loopne
fstps
pushl
shl
out
xor
je
cmpsl
lahf
clc
or
pop
je
repnz
arpl
mov
sti
scas
xor
dec
addr16
stos
sub
addr16
mov
call
add
mov
pop
jo
rcl
in
fistl
js
pop
sbb
inc
lea
lcall
cmp
pop
inc
push
push
mov
sub
cli
pop
push
scas
dec
mov
test
push
push
leave
js
jecxz
push
repz
hlt
xchg
jg
test
mov
aad
inc
mov
mov
xor
dec
cld
pop
adc
frstor
dec
cmp
mov
ljmp
arpl
andb
and
jb
or
icebp
inc
mov
push
je
dec
outsl
push
in
add
sbbb
fdivs
test
jecxz
cmp
cmpsb
enter
std
mov
jns
jae
int3
sbb
out
sar
jae
dec
inc
idiv
add
mov
add
jmp
mov
insb
add
cmp
int3
push
sti
xor
mov
inc
into
scas
dec
pop
call
and
lcall
pushl
add
push
decl
pop
mull
js
test
sahf
ret
popa
cwtl
mov
push
inc
and
cmp
mov
pop
pop
sbb
call
les
pop
call
in
int3
out
push
das
rorb
outsb
cwtl
pop
clc
sbb
daa
fcoms
jg
in
sub
call
mov
or
test
mov
mov
daa
and
cmp
or
or
repnz
decl
xchg
out
test
add
adc
xchg
sbb
ljmp
adcb
ss
iret
int3
xchg
mov
je
notl
inc
incl
or
mov
adc
and
jnp
outsl
aad
hlt
out
jbe
jmp
sub
sub
in
icebp
or
mov
cmpsb
aas
xacquire
outsb
or
vmovddup
movb
xchg
jns
or
nop
loopne
sub
pop
sbb
leave
sbb
out
xchg
call
pop
jl
push
test
mov
repnz
jmp
ds
push
xchg
insl
jg
das
push
out
inc
stos
insb
daa
cli
sbb
std
xlat
add
dec
or
jg
mov
lret
movsb
sbb
add
shlb
mov
push
and
ja
negl
sbb
fiadds
xor
es
loopne
jnp
xchg
les
call
sub
incb
ficoms
shll
jb
xchg
rorl
outsl
inc
fs
popf
scas
insb
scas
inc
lods
mov
pop
pushf
fnstenv
out
mov
xchg
pop
or
shlb
mov
inc
ja
inc
xchg
jmp
movsb
and
mov
mov
stc
or
add
pop
mov
or
mov
mov
inc
push
mov
pop
out
mov
mov
stos
mov
add
icebp
jne
push
cmp
mov
lods
pop
movsl
cmpl
pushl
ret
xchg
lret
jle
dec
adc
and
test
mov
aad
outsl
cmp
xchg
insb
ret
push
loopne
decl
inc
leave
div
outsb
and
cltd
outsl
xor
jecxz
lods
iret
or
mov
std
xor
or
ffree
or
jb
cmp
pop
ljmp
sub
mov
jae
test
nop
jg
out
sbb
cmp
decl
add
insl
ja
xchg
push
push
xchg
push
adc
arpl
decl
adc
lcall
jb
es
adc
fs
sbb
mov
faddl
mov
fcoms
inc
pop
clc
dec
scas
dec
add
icebp
xchg
or
push
mov
ljmp
add
inc
mov
lahf
inc
sub
mov
dec
data16
aaa
mov
add
pop
cmp
mov
outsb
and
xor
mov
mov
inc
mov
mov
push
adc
arpl
and
jns
call
or
xchg
insb
and
jno
jnp
xchg
mov
lcall
incl
mov
mov
outsb
sub
in
fstl
sub
sbb
ss
insl
incl
jl
mov
lods
scas
rorl
call
mov
mov
mov
lods
ss
out
loop
push
sbb
scas
enter
dec
std
adc
aas
int3
mov
in
add
sub
push
out
inc
and
rcll
add
enter
jbe
and
add
out
xor
cmc
sub
sbb
jge
arpl
push
ljmp
leave
jns
es
flds
cmp
outsl
rorb
cld
inc
push
or
test
cmc
ljmp
std
dec
push
mov
add
pusha
inc
jns
dec
and
push
add
push
add
jno
dec
sbb
loope
sbb
sbb
add
pop
adc
pop
push
pop
inc
in
inc
jb
fnstsw
les
lea
cmp
pop
xorl
jmp
add
sub
call
xor
stc
cmp
sbb
jmp
nop
adc
xor
xor
call
das
pop
insb
arpl
mov
subb
pushf
pop
cli
das
pop
xchg
mov
or
jge
fucomi
xlat
mov
sub
aas
sar
inc
stos
pop
es
mov
xchg
cld
jmp
dec
fbstp
jns
pop
inc
cmp
lods
mov
call
xchg
call
sbb
sbb
and
andl
and
sbb
xchg
or
dec
in
mov
stos
call
popa
scas
jno
cwtl
add
push
pop
jp
jmp
repnz
loop
fdivrl
jbe
bound
inc
mov
cli
mov
testl
das
mov
pop
mov
cmp
sub
jmp
mov
jae
mov
cmpsb
inc
add
in
pop
cmp
cmp
or
mov
jge
jne
sub
add
cmp
mov
arpl
arpl
push
cmp
or
sub
ja
sub
or
push
xchg
pop
ljmp
add
sahf
sub
negl
inc
loopne
outsl
jg
mov
mov
and
inc
cs
subb
out
dec
inc
sahf
mov
int
in
sti
andl
in
sbb
lds
xchg
jae
imul
mov
dec
frstor
aad
or
inc
push
es
lock
loopne
push
or
xor
pop
sub
mov
faddp
pop
sbb
mov
xchg
or
adc
into
push
and
lcall
dec
add
gs
and
mov
pop
ficoms
or
adc
mov
jle
fwait
out
push
je
add
mov
push
sbb
sbb
jae
subb
jmp
movsb
xor
cmp
cmpb
ja
add
and
fbstp
mov
or
popf
rclb
mov
lea
or
fdivl
mov
aam
shl
popa
loopne
xchg
xchg
dec
nop
outsb
cmc
pop
std
dec
lret
or
adc
mov
xchg
cs
cli
or
negl
mov
ljmp
jno
jae
add
gs
enter
in
fbstp
jecxz
adc
sbb
mov
fcomp
dec
ds
sub
add
icebp
pushl
movsb
out
loope
push
xchg
test
sbb
mov
sbb
mov
popf
popl
lock
cs
jmp
call
sbb
xlat
aas
dec
fs
xor
pop
test
repnz
adc
js
push
inc
mov
das
lret
sbb
std
in
mov
int3
cmp
clc
mov
dec
inc
imul
or
push
in
adc
mov
cwtl
test
xor
cli
jg
andb
mov
addr16
es
sub
xchg
pop
decl
insb
cld
pusha
push
push
fimull
test
in
orb
ljmp
lret
xor
aaa
push
test
popf
stos
test
dec
jmp
push
nop
les
push
sbb
shr
pusha
adc
outsb
inc
xchg
pop
mov
adc
xchg
fwait
loopne
pusha
mov
movsb
add
push
adc
les
mov
lock
icebp
pop
xchg
pushf
push
call
jae
je
push
fsubrl
idivb
cmpsb
mov
lock
xchg
add
hlt
jmp
xor
cmp
fld
scas
lock
jne
xchg
into
les
jg
test
movsl
xor
mov
mov
mov
jg
subb
shrb
or
ljmp
pop
xchg
or
and
push
clc
in
dec
or
pushf
xchg
pop
clc
ret
sub
je
outsb
jecxz
pmaxsw
inc
lods
cmpl
test
fldcw
push
insl
mov
ljmp
and
add
leave
pusha
pop
jne
movsb
jmp
mov
sahf
stos
les
mov
mov
testb
mov
push
adc
hlt
xrelease
push
call
lret
jmp
push
and
loop
loop
in
popa
add
cmc
push
adc
xchg
pushf
call
sub
into
or
xchg
icebp
and
testb
icebp
in
lea
lea
inc
pop
cmp
lock
jg
add
pop
sbb
or
shlb
push
push
cmp
fwait
cmp
les
andl
call
repnz
mov
movsb
pop
sub
pop
jge
xor
sbb
loopne
popa
mov
mov
xchg
cs
mov
inc
insb
dec
jg
pop
jg
jmp
or
dec
mov
mov
dec
imul
loopne
dec
ljmp
loope
push
fwait
pushf
fsts
dec
mov
mov
pop
ljmp
and
and
imul
xchg
lods
xchg
cli
mov
mov
out
pop
inc
push
dec
das
hlt
fbstp
js
jae
jg
in
ret
notb
lcall
mov
sub
ljmp
adc
xor
xor
or
dec
sbb
mov
stos
lds
push
cs
xor
inc
add
test
mov
cmpb
sbb
call
xlat
push
push
sbb
stos
scas
jg
outsl
jne
adc
and
in
pop
ljmp
dec
jge
push
mov
pop
sbb
add
inc
seta
dec
sar
jb
leave
push
add
andl
andb
bound
into
pop
loopne
clc
xchg
ret
shll
inc
push
loop
or
and
movsl
call
mov
add
out
sahf
inc
out
lcall
dec
ja
cwtl
jmp
sbb
sar
stos
push
das
adc
aad
rcrb
pop
icebp
and
fmuls
dec
mov
bound
lret
dec
mov
dec
aam
push
outsl
mov
and
and
jl,pn
aaa
cmp
xchg
incl
or
dec
int3
inc
imul
sub
inc
inc
pop
mov
add
fnstsw
adc
mov
adc
insb
int3
dec
sub
inc
call
js
cmpsl
mov
shrl
test
imul
das
icebp
das
cmc
add
aas
jmp
repz
mov
scas
fmuls
jle
push
mov
sti
test
stc
in
push
popf
and
out
shlb
mov
adc
repz
subb
loope
jle
aas
idiv
jl
lcall
loop
in
out
xor
add
loopne
adc
and
cld
jmp
jg
mov
mov
mov
ljmp
ja
in
cmpsb
dec
cld
loopne
and
iret
sub
inc
mov
repz
mov
loope
fucomi
push
mov
ss
mov
sbb
dec
adc
or
lock
stc
fidivrs
or
inc
fnstsw
subl
or
loope
xor
pop
repz
pop
xchg
ds
das
mov
and
clc
mov
lcall
or
ret
sub
call
push
xor
insl
cld
sbb
test
add
jno
insl
cmp
out
lock
push
jp
mov
stos
add
xor
pop
pop
and
stos
dec
push
mov
adc
test
add
lods
pushf
sbb
dec
lea
adcl
jle
clc
pop
dec
out
in
sub
sbb
pop
mov
popf
dec
jmp
dec
or
out
les
mov
pop
mov
push
sub
cmc
xchg
inc
cli
ror
out
cmovo
push
aad
mov
jge
sub
clc
push
sbb
cld
aas
fs
outsl
je
mov
out
rorl
mov
xor
mov
or
lock
icebp
pop
ret
mov
dec
xor
inc
mov
adc
incl
dec
mov
movsb
sbbb
pop
jnp
imul
hlt
test
jmp
mov
in
and
push
rolw
mov
pop
sub
mov
cmp
retw
cltd
cmp
dec
int3
movsl
pop
and
or
mov
popa
movsb
pop
xchg
orb
push
dec
aaa
adc
cltd
dec
adc
fdivs
xchg
dec
mov
jns
pop
ljmp
inc
dec
pop
aad
and
adc
shlb
and
jmp
mov
jb
test
and
mov
stos
test
add
in
aaa
call
inc
sub
in
fiadds
or
cmovp
stos
sahf
dec
filds
inc
aad
psubd
xchg
add
sub
adc
dec
mov
pop
mov
in
mov
pop
rcll
sbb
and
xchg
and
or
mov
jge
push
outsl
outsl
xor
inc
or
push
mov
fnsave
aad
rolb
pushf
mov
out
in
jle
fisttpl
loopne
mov
mov
dec
pop
clc
xchg
cmp
mov
cmp
mov
in
mov
sti
mov
add
ret
mov
sub
stos
jmp
add
ljmp
and
ficomps
sbb
les
add
ret
imul
inc
mov
add
xchg
pop
cli
push
aam
sub
pop
mov
in
jo
push
pop
inc
push
xchg
std
xorb
mov
cs
inc
mov
bound
incl
sub
push
popf
pop
mov
nop
push
out
jno
jbe
mov
mov
aad
out
add
adc
lock
jmp
dec
arpl
or
sti
das
outsl
outsl
jo
jo
adcl
movsl
shll
movsl
outsl
fistpll
add
subb
cmpsl
roll
xor
mov
mov
fistl
and
mov
push
stos
cmpsl
ja
adc
sub
add
movsb
shll
lods
test
pop
cltd
sbb
rcll
sub
clc
fcmovb
test
fcmovnb
or
inc
pusha
and
xlat
sbb
cli
fdivrp
div
mov
ret
jge
cmp
push
dec
repnz
subb
nop
inc
dec
dec
aam
lods
sbb
aas
test
test
jmp
jo
push
mov
daa
das
fdivr
mov
out
adc
lret
imul
sbb
or
sub
jae
dec
or
pop
mov
loopne
scas
sbb
mov
mov
les
test
lods
sub
and
xchg
xchg
inc
ds
mov
das
inc
shrb
in
sub
mov
and
ss
loopne
test
mov
jae
scas
lret
outsl
fucomp
aaa
xchg
inc
orl
xchg
or
push
fsubrl
pop
je
mov
jne
jne
dec
xchg
inc
imul
mov
mov
pop
sbb
inc
loop
adc
in
pushl
arpl
mov
mov
jns
loopne
popf
xchg
dec
cmp
sbb
aaa
rcll
enter
mov
push
mov
rcrb
hlt
push
lret
mov
add
pop
das
out
add
daa
xor
add
adc
shrl
out
ja
and
mov
sti
or
sbb
add
ret
add
inc
stos
fistpll
add
movsb
cmp
pop
pop
sbb
or
rcll
inc
outsb
adc
leave
mov
push
cmp
pop
outsb
rcl
cmp
mov
mov
ret
dec
adc
pop
adc
in
push
daa
pushf
pop
push
cld
out
aaa
in
push
add
mov
lret
inc
jb
or
test
xchg
fildll
pop
or
mov
xor
decl
inc
xchg
mov
lea
lret
inc
jl
fdivrs
mov
push
push
push
ret
pop
leave
repnz
mov
imul
jp
gs
leave
inc
inc
ljmp
lcall
call
test
and
and
or
int
cltd
jmp
pop
ljmp
inc
sbb
stos
jg
sbb
daa
lods
sarl
mov
call
dec
or
sub
cmpxchg
out
xchg
daa
ret
add
in
xchg
xor
or
inc
mov
mov
repnz
pop
scas
pop
lds
push
sub
std
decl
inc
jl
enter
cmp
inc
push
imul
inc
add
je
cmpsb
fcoms
push
pushf
dec
shl
inc
inc
xchg
mov
aad
pushf
test
push
mov
movsl
ja
stos
pop
nop
fwait
lret
or
in
jno
ret
sar
jg
enter
out
and
out
push
shll
jp
test
in
dec
testl
mov
xor
movsl
call
bound
push
out
pop
cmc
shr
sbb
cld
or
nop
cld
lahf
outsb
mov
inc
lock
xchg
jmp
aaa
push
push
xlat
sbb
fnstcw
aam
das
stos
das
and
mov
xor
push
add
or
xchg
pop
mov
stc
sub
loope
jmp
push
mov
push
aam
adc
nop
and
adc
xchg
call
xorb
sbb
insl
sub
or
lcall
push
adcb
cmovs
cmp
jge
xchg
jg,pn
or
test
lret
xor
mov
push
mov
push
cmpb
add
mov
mov
andb
rcl
mov
adc
in
in
sub
add
sub
mov
cmpsl
das
std
mov
orl
mov
in
test
xchg
dec
scas
xor
inc
jbe
cmp
jg
iret
xchg
ret
aad
pusha
and
xchg
jae
outsb
xchg
dec
sbb
add
rclb
mov
jbe
sub
jbe
mov
das
rcll
out
sti
mov
jo
cmp
clc
jg
push
xor
xchg
mov
sbb
in
pop
and
lret
or
mov
fdivrs
dec
add
add
mov
out
jbe
xchg
ret
xor
clc
hlt
dec
jne
push
pop
enter
pop
push
push
jecxz
test
rcrl
sub
insb
or
icebp
filds
pop
in
pop
imul
cmpsl
bound
mov
pushf
test
addl
lret
scas
cmpsl
cmp
push
call
incl
inc
push
cld
cmpsb
sbb
ret
sbb
std
call
jl
mov
popf
xchg
inc
cmp
cld
jmp
out
sub
test
pop
jnp
or
inc
fxch
iret
inc
scas
cmp
and
mov
jb
gs
sbb
fsubrs
pop
std
call
loop
cmc
bound
sarb
mov
or
adc
pushf
add
xchg
and
cmp
pop
sub
push
mov
aaa
or
call
fnstsw
mov
fcmovnu
pop
jcxz
shrb
mov
fs
popa
out
add
rorl
nop
xor
add
outsl
shrb
lods
sbb
cwtl
xchg
sub
or
decl
xor
aam
mov
cwtl
in
add
jmp
push
fnstenv
xchg
mov
inc
jmp
mov
xchg
test
lret
mov
jge
and
cmc
mov
fdivrp
data16
mov
push
cmpsl
test
adc
pop
clc
dec
push
sub
pop
sub
jl
out
loop
outsb
cld
test
shlb
scas
mov
mov
aaa
call
clc
cli
pop
xchg
mov
sub
es
stc
add
push
sbb
sahf
mov
lock
push
loopne
add
push
ljmp
ret
adcb
clc
add
rclb
dec
movsb
cli
cld
adc
insl
and
fdivrl
xchg
das
mov
mov
std
pop
jle
filds
jne,pn
shll
std
jne
and
or
iret
sbb
ret
dec
lcall
mov
push
clc
ljmp
je
sub
dec
repz
sti
sub
cmc
pop
or
in
sbb
or
decl
out
hlt
push
int3
sbb
xchg
sahf
xor
movsl
mov
incl
nop
nop
sbb
imul
cmp
dec
pop
xlat
mov
mov
lods
adc
push
add
rcll
jg
inc
cmpsl
sarl
xlat
xor
shr
bound
pop
add
inc
xchg
ret
in
fwait
lcall
call
insb
sub
addr16
movb
add
decb
mov
sbb
mov
and
test
scas
push
adc
adc
popa
fwait
std
das
icebp
lcall
sbb
and
es
out
sub
out
mov
mov
inc
lock
jno
nop
jno
jge
jg
clc
lret
cwtl
adc
outsl
in
mov
movsb
nop
orl
std
and
jmp
pop
add
mov
outsb
lock
sbb
cld
lret
cmc
cmpsb
nop
cmp
flds
jns
scas
xchg
lcall
jbe
xchg
pop
mov
cmpb
rcll
lock
jno
jg
cmp
test
arpl
dec
or
mov
subps
popw
add
pop
clc
bound
movsl
and
imul
cmc
js
mov
push
movsb
dec
fs
jle
inc
stos
or
fs
mov
dec
mov
lds
test
repz
ds
lock
dec
std
mov
es
push
pop
and
adcb
mov
stc
das
sub
sbb
add
insb
jecxz
ljmp
mov
add
and
dec
cmp
in
or
ficomps
ds
pop
inc
bound
jmp
adc
paddsw
fs
stc
daa
insl
sbb
push
in
into
hlt
jo
push
test
fwait
rcr
test
mov
jae
push
pop
dec
pop
pop
stos
call
popf
roll
push
mov
and
mov
cltd
out
das
fistpl
sarb
bound
ret
sbb
loopne
repnz
lcall
js
jg
sarl
xor
jge
xchg
and
test
pop
test
pop
push
xor
test
add
dec
inc
adc
mov
data16
mov
xchg
mov
push
dec
out
adc
addr16
nop
je
push
sahf
adc
incb
hlt
nop
xor
push
sbb
or
xchg
enter
popa
and
addl
or
sbb
mov
lock
push
addr16
out
xor
comiss
repz
inc
setle
and
pop
mov
pop
mov
ficoms
mov
jns
sub
fldcw
fisttps
fdivs
sub
jmp
incb
js
das
xchg
insl
ljmp
mov
movsl
fs
dec
ret
decl
sub
ss
mov
mov
pop
pop
repnz
lret
stc
mov
loopne
lcall
adc
mov
ss
lods
out
mov
mov
xchg
lahf
mov
or
mov
sbb
add
sar
mov
push
lods
mov
add
nop
adc
clc
fildll
loope
mov
pop
bound
push
out
fstps
pop
pop
std
lahf
cmp
adc
inc
inc
adc
dec
shlb
lret
adc
sbb
push
xor
and
lcall
bound
inc
dec
cmp
movsb
push
cld
test
add
outsl
out
fwait
icebp
test
push
dec
sbb
jg
fld1
mov
icebp
mov
rcr
sbb
fnstsw
outsl
shll
mov
sub
sbb
std
repz
outsb
dec
cmpsl
mov
cld
incl
push
movl
push
add
shrb
mov
jge
mov
jo
mov
push
sbb
and
push
add
mov
mov
or
inc
mov
pop
jg
cld
pop
enter
aad
pop
jmp
faddl
add
push
cmp
xchg
call
or
rorb
daa
push
fs
cwtl
popf
nop
cld
incl
push
xchg
mov
movsb
or
sbb
inc
jg
pop
roll
sbb
rorl
ljmp
push
lcall
add
cmpl
sbb
mov
iret
mov
jne
sbb
dec
lods
and
adc
cmp
mov
leave
sarl
adc
nop
stos
test
sub
test
jnp
cltd
mov
iret
jbe
roll
pushf
inc
cmpl
cmc
js
ljmp
inc
push
mov
hlt
icebp
jmp
out
adc
and
std
pop
and
add
add
shl
testl
xor
sbb
stc
insb
mov
cmp
pushf
popf
add
sub
loope
js
xor
movsl
cs
lcall
imul
in
daa
mov
xchg
lods
decl
sub
aas
dec
jmp
stc
pushf
fisubrs
fdivrp
push
mov
mov
shll
add
mov
in
adc
add
pop
into
mov
pop
mov
add
rolb
test
cmp
insl
jb
add
add
or
aad
daa
outsl
test
mov
test
lahf
sbb
jg
sbb
outsl
sbb
sbb
xchg
insb
mov
jmp
imul
fwait
adc
incl
xchg
pop
sub
mov
aas
sbbb
mov
sbb
lcall
cmpsb
push
xor
movsb
jg
add
pop
xchg
xchg
adc
pop
push
push
push
icebp
add
test
and
mov
push
ljmp
and
sbb
push
clc
mov
cmp
push
mov
incl
icebp
out
push
jmp
push
int3
mov
addb
in
pop
adc
hlt
sub
aaa
in
or
push
std
ficomps
cmp
inc
loope
jecxz
incb
testb
lea
dec
sub
inc
cld
lret
fidivrs
xchg
jmp
arpl
mov
pusha
loope
mov
mov
mov
and
push
scas
sub
sub
inc
stos
fwait
jg
jg
and
das
pop
xor
or
arpl
xchg
cmp
shlb
mov
pop
in
dec
xorl
das
or
sub
pusha
mov
dec
rorb
fwait
xchg
out
mov
sbb
mov
adc
push
and
mov
cmp
and
pop
mov
fadd
cmpsb
cld
stos
jo
ror
stc
ret
mov
push
rcll
or
jg
negb
in
out
loope
out
aad
lea
dec
je
or
cs
adc
test
xchg
in
loop
or
inc
xor
or
xchg
in
loope
das
rorb
inc
test
fcmovnu
clc
add
pusha
subb
loopne
inc
mov
cltd
iret
xchg
bnd
mov
sbb
mov
xchg
mov
jle
sarb
dec
push
mov
cmc
sbb
fstpt
outsl
add
ret
sub
cmpsb
xchg
xchg
add
pop
loopne
arpl
inc
sub
js
das
jmp
add
inc
enter
jb
lcall
mov
pop
sti
pushf
js
jno
enter
inc
jnp
testb
scas
xchg
xorb
add
mov
push
jo
jmp
leave
repz
sbb
pusha
dec
lcall
call
xor
mov
xchg
aas
xor
jg
outsl
outsl
and
cmp
les
sub
insb
cmpsl
or
add
scas
or
bnd
jmp
pop
xor
popf
icebp
or
xchg
cmpsb
lret
mov
push
lret
hlt
bound
lods
test
mov
adc
lds
adcl
clc
push
hlt
andb
leave
cld
pop
dec
stos
negb
in
test
out
dec
xor
or
test
xchg
inc
insl
and
xchg
mov
mov
or
repz
or
mov
fmuls
push
pop
dec
inc
pop
insl
loop
push
stc
ret
ss
xor
inc
mov
mov
addr16
jecxz
adc
push
cli
cmp
add
jnp
lock
aam
aas
iret
jp
movsl
test
gs
pop
aam
dec
adcb
xor
dec
imul
pop
jmp
out
add
movsl
push
sbb
sub
lock
in
adc
int
cmp
icebp
xchg
frstor
and
adc
mov
jle
test
lods
jg
inc
das
cwtl
add
stc
add
and
rcrl
cld
test
test
add
push
or
loop
int
add
mov
aas
test
mov
or
rorl
or
pop
sub
lods
inc
cmpsl
popf
notl
movsb
pop
js
and
sbb
repnz
lock
rolb
push
cmp
sahf
outsl
push
cmp
inc
xchg
aaa
mov
scas
or
clc
add
pop
ret
popf
adc
mov
sbb
stc
lret
or
mov
cld
sub
jmp
test
sbb
ja
mov
xorb
sub
cs
dec
cmp
ret
inc
test
add
sti
sahf
or
in
stos
push
notb
mov
xchg
jge,pn
aam
xchg
and
jmp
pop
sbb
outsb
pop
jle
cs
fdivrp
in
sbb
xchg
add
inc
jo
mov
fnsave
jne
pop
clc
movsl
aaa
push
mov
jae
rcl
test
mov
imul
mov
mov
ljmp
outsl
mov
xchg
dec
inc
xor
fsubp
adc
rcr
add
or
std
aaa
sub
xor
pop
lods
lret
jp
jl
call
jecxz
fidivrl
pop
subl
mov
or
test
lahf
jo
push
das
inc
push
jp
cmpsb
outsb
outsl
orl
sbb
mov
and
clc
incl
fildll
push
mov
in
xchg
loope
dec
ret
sub
andl
xlat
jbe
mov
mov
fstl
mov
divl
jnp
pop
and
push
fadds
out
das
hlt
fistpl
sbb
mov
dec
pushf
adc
stos
cld
cmp
jg
orl
push
leave
ljmp
cmp
cmp
sbb
aam
push
and
inc
add
push
xor
add
out
lds
jl
out
adc
push
cmp
or
aam
dec
aam
leave
rcrb
int3
add
push
inc
mov
jge
jg
jno
adc
push
xchg
dec
stc
pop
fdivl
or
lock
cld
jmp
push
inc
sbb
sti
sbb
adc
mov
inc
lcall
bound
lcall
hlt
call
pop
sub
call
xchg
jo
sub
fs
sub
into
daa
call
out
mov
cmp
mov
push
out
cmp
lret
dec
xchg
enter
stc
and
sub
insb
sbb
idiv
sbb
lods
and
enter
sbb
pop
insl
cmp
fistpll
cmpsb
jbe
cld
sub
js
mov
cwtl
push
add
cli
mov
mov
in
mov
sbb
xor
dec
or
lret
fisttpll
or
clc
decl
aaa
push
push
call
std
push
lcall
push
or
cltd
mov
pop
call
mov
add
jg
cmp
and
jg
and
dec
cmpsl
orb
and
iret
movsl
es
xchg
xor
jg
mov
inc
ret
sar
arpl
push
push
xor
in
ret
insb
sbb
and
inc
push
outsl
cld
call
pushf
jo
dec
mov
push
data16
repnz
loopne
jnp
cs
adc
xlat
mov
push
clc
push
push
in
inc
mov
mov
xor
mov
sarb
pop
stos
cmp
or
inc
and
pushl
mov
rolb
roll
repnz
test
and
aas
pop
repz
push
jnp
das
es
icebp
dec
test
push
ds
cli
test
and
stos
push
xchg
fistps
pop
ljmp
sbb
cld
xlat
inc
mov
movsb
int3
movsb
pusha
add
sbb
ret
out
cmpsb
test
les
mov
push
jecxz
xor
fnsave
daa
mov
add
cvtps2pd
adc
arpl
add
sbb
loopne
jns
and
pop
cli
xchg
inc
popa
inc
sub
cmp
dec
fcom
add
das
std
mov
cwtl
js
mov
mov
mov
test
cli
jg
dec
out
ds
inc
xlat
jns
les
pop
or
and
call
pop
loope
das
cltd
iret
loope
clc
adc
nop
adc
dec
add
cmp
or
xchg
xor
jbe
outsl
std
dec
cmp
push
test
and
mov
mov
mov
dec
jb
sbb
jns
jae
or
or
arpl
sbb
mov
mov
je
lahf
mov
mov
jne
xor
inc
pop
push
test
mov
aaa
movsb
dec
sbb
push
movsl
adc
call
scas
sub
out
out
xchg
jmp
cld
mov
fists
js
inc
mov
andb
jnp
arpl
adc
adcl
sub
repz
add
les
int
jns
outsl
inc
dec
sbb
fnstsw
mov
in
test
add
push
lock
cld
aas
add
test
in
xor
cwtl
icebp
test
inc
call
ss
add
jo
cmc
ret
imul
repnz
push
lret
jb
jle
sarl
sbb
add
xor
jmp
mov
inc
rcl
rcl
cmp
insl
xlat
and
bound
push
dec
add
dec
ss
pop
mov
xchg
inc
js
mov
pop
call
mov
bound
cltd
dec
lods
mov
add
fildll
pusha
jne
push
lock
shll
in
mov
push
adc
push
mov
cld
fimuls
xchg
fisubrl
ret
aad
push
cmpsb
stos
addr16
js
mov
lahf
and
inc
xor
popa
push
test
dec
fnstsw
jno
lahf
popa
sbb
ss
xor
adc
or
cmpb
inc
push
jp
push
sarl
aas
std
cmp
sub
jle
test
mov
inc
loope
jmp
xchg
test
add
sti
xor
mov
jae
mov
inc
mov
sbb
xor
jae
jo
loopne
xlat
mov
cmp
xorb
inc
pop
jne
in
push
mov
ds
mov
sub
mov
fistps
adc
mov
mov
rcrb
cmc
pop
mov
dec
lods
inc
adc
push
shlb
outsb
repz
in
jno
mov
mov
jecxz
jecxz
icebp
stc
jecxz
jecxz
jl
and
leave
inc
fcoml
outsl
push
imul
jnp
inc
and
add
clc
adc
lods
pop
pop
pop
pusha
cmpsl
and
out
lock
fdivrp
cld
inc
and
sbb
lret
mov
mov
ss
aaa
xchg
pop
popa
aaa
jecxz
inc
jl
jg
sub
ljmp
mov
ret
aad
in
pop
xor
inc
je
inc
adc
jno
mov
fstpt
cmpsl
xor
pop
xor
sbb
pushl
jbe
popf
clc
mov
jnp
outsb
icebp
out
ds
mov
mov
jg
fcompl
cmp
pop
mov
psubq
cmp
ds
dec
mov
push
fadd
fs
clc
and
lods
jle
insb
fcomi
push
gs
es
js
mov
mov
aad
sbb
add
mov
mov
xor
out
outsl
addl
pop
pop
js
inc
xchg
popf
popf
fstl
or
add
cli
imul
pop
xor
add
addb
inc
fcmove
mov
cmpb
loope
data16
in
fcompl
or
outsl
jnp
inc
call
and
jg
cmpb
stos
xorb
or
xchg
outsl
outsl
arpl
std
dec
xor
lds
sub
popa
dec
insl
pop
lea
add
add
lds
outsb
fistpll
pop
push
add
xchg
outsl
dec
jbe
push
add
outsl
mov
jnp,pn
or
cli
aaa
fbld
pop
mov
adc
std
dec
push
mov
out
xchg
mov
add
repnz
and
les
pushf
mov
xchg
push
rclb
mov
jp
mov
test
andb
add
in
inc
xor
icebp
stos
lea
out
ljmp
cmp
int
jge
xorb
rorl
ljmp
inc
sub
ret
add
inc
std
movsb
adc
pop
icebp
sub
sub
stos
aaa
push
push
rcr
rcrb
mov
adc
lret
lcall
loop
or
daa
xchg
and
jmp
in
add
pusha
xchg
dec
lret
movsb
inc
jecxz
pop
and
xchg
clc
test
mov
add
xchg
sub
jecxz
das
lock
in
sbb
inc
ss
mov
sub
jg
jl
aas
fadd
mov
xchg
ss
hlt
dec
test
aad
push
xchg
mov
xlat
cmp
add
inc
push
push
sbb
movsl
loope
xchg
jle
mov
jmp
out
imul
rolb
lcall
jl
cmp
cmpsb
mov
adc
loopne
int3
scas
sbb
add
mov
fbld
mov
stos
add
pop
sub
insl
mov
ljmp
add
fs
or
dec
nop
fucomp
mov
int3
push
xor
dec
adc
fcomip
inc
cld
das
les
lret
shl
aaa
sar
decl
adc
adc
jb
pop
adc
jg
jg
mov
jno
xor
adc
add
cmp
call
or
jge
into
mov
push
mov
and
das
fsubrl
in
shrl
pusha
pop
out
popf
pop
pop
mov
lcall
or
clc
sbb
adc
mov
xor
aad
mov
cmp
jg
inc
mov
lret
mov
lods
or
pop
or
imul
pop
arpl
dec
lock
mov
pushl
mov
rol
pop
xor
cmpb
icebp
push
and
rolb
call
std
rclb
mov
mov
xlat
mov
push
xchg
push
jge
inc
mov
imul
roll
and
loope
push
in
pop
dec
mov
push
jmp
mov
lock
mov
pop
roll
bound
movsl
push
mov
or
int
or
mov
test
push
xor
scas
mov
lret
pextrw
sbb
hlt
ret
movsl
arpl
mov
lock
adc
in
mov
addr16
xor
scas
repnz
sahf
pop
push
lock
test
mov
add
mov
std
movsl
inc
mov
and
add
repnz
lret
ret
xchg
lods
and
xor
mov
xchg
aam
sahf
int3
or
pushf
in
out
daa
jmp
xor
xor
inc
ljmp
lds
les
and
mov
ja
orl
fistpl
mov
sar
ljmp
cmp
lods
add
in
test
inc
xchg
dec
pop
enter
jg
lods
sbb
hlt
adc
inc
push
out
pop
loop
outsl
aam
dec
std
aad
push
jno
int
dec
vpunpckhbw
pop
xor
mov
cmp
sbb
pop
scas
xor
ljmp
rorb
shrl
jbe,pn
shll
mov
add
jmp
repnz
pop
ror
add
lahf
pushf
mov
xchg
pop
inc
das
lock
sub
xchg
out
cmc
jb
ss
jo
dec
pushl
push
das
dec
enter
add
push
js
lcall
or
adc
and
sub
pop
fsub
pushf
loope
xchg
outsl
xchg
leave
lret
stos
test
inc
push
ret
pop
mov
add
mov
or
mov
incl
mov
add
pop
call
imul
jbe
les
pop
test
hlt
out
addl
pop
sub
push
in
shll
xchg
and
cltd
or
cmc
sbb
testl
imul
mov
setle
shlb
mov
sub
js
mov
into
inc
and
adc
in
push
ficoms
mov
lahf
jno
xor
xchg
jp
test
sbb
int
pop
push
test
cmp
std
test
in
filds
rcrl
popf
ret
mull
adc
and
mov
jecxz
fstpt
fimuls
push
cmp
push
fninit
lock
or
xchg
jbe
or
bound
jg
icebp
pushl
sub
lock
loopne
test
decb
ds
mov
and
mov
fdivrp
sbb
shlb
jo
test
js
mov
add
daa
shr
sub
push
inc
js
scas
pop
jg
sbb
sbb
xchg
pop
in
inc
xor
push
mov
jno
dec
movzbl
add
jno
pop
out
pop
test
mov
stos
push
int
fcmovnb
insl
pop
add
pop
mov
and
das
jge
ret
xor
push
ljmp
push
js
xchg
xchg
loop
inc
int
cmp
cld
filds
fnstsw
sub
sahf
add
fsubr
mov
pop
and
mov
mov
fnstenv
mov
jno
test
xchg
pop
push
loope
jns
push
xor
decl
jle
pushf
daa
cli
push
mov
std
js
add
jae
pop
xchg
pop
fidivl
jl
fidivrl
fucom
add
cmc
enter
mov
mov
and
lods
sar
add
mov
xchg
psubusw
add
in
icebp
clc
fisubl
mov
pop
mov
sti
push
sub
sahf
mov
dec
dec
xchg
xor
stc
call
inc
je
jns
cmp
xchg
test
rclb
add
movsl
xorb
outsb
popa
loopne
addl
dec
out
mov
test
test
in
addr16
sbb
mov
jbe
jo
hlt
adc
mov
inc
pop
cmp
add
cltd
fwait
push
fucomp
nop
jb
mov
xor
pop
inc
sub
sbb
sbb
sbb
popa
lret
lea
push
sbb
and
shlb
je
xchg
leave
nop
psadbw
test
push
call
inc
stos
or
dec
pop
jo
mov
pop
cmpsb
addr16
lcall
push
and
inc
mov
adc
int
sbb
jge
lea
lock
xor
sbb
add
repnz
lods
and
xor
dec
dec
adcb
mov
xchg
inc
cmc
das
mov
sub
sub
cli
lahf
mov
adc
sbb
push
je
test
sbb
sub
leave
fimull
push
adc
hlt
pushf
sbbb
inc
call
mov
and
jne
xchg
adc
mov
pop
xchg
pop
lods
ljmp
dec
clc
inc
and
fnstcw
mov
cwtl
and
jge
fstpl
pop
inc
mov
cmp
call
push
ss
inc
hlt
daa
imul
xor
inc
or
inc
jp
mov
and
pop
testb
sub
sub
adc
mov
in
push
or
mov
dec
movsl
inc
out
cmp
in
sbb
cltd
jno
mov
ljmp
loop
or
push
rcrb
testb
xor
push
fldt
adc
aam
inc
add
inc
adc
movb
xor
inc
mov
loope
ss
stos
push
dec
mov
mov
fcmovnu
loop
imul
jp
cld
pop
mov
xor
lcall
outsb
pop
clc
push
dec
or
dec
in
jb
inc
shl
jge
inc
push
and
pop
sbb
mov
sub
pop
sub
sar
jge
xor
and
repnz
push
mov
mov
sbb
sub
mov
pop
roll
inc
shll
dec
incl
fwait
or
mov
xchg
mov
jg
sbb
add
imul
or
in
in
repnz
sbb
stc
inc
pop
add
sub
ja
xchg
mov
roll
push
shlb
lret
mov
je
cmp
or
or
js
aad
sbb
lds
xor
mov
and
loopne
aaa
icebp
outsl
cmp
clc
stos
inc
mov
rcrl
pop
les
xchg
mov
das
xor
out
or
icebp
insl
add
in
mov
lahf
fisubs
mov
push
lock
mov
push
push
add
je
pop
jp
call
shlb
cld
pop
mov
pop
jp
nop
lret
cmp
inc
out
fisubrs
mov
mov
xchg
not
scas
shrb
scas
inc
sbb
outsb
jb
dec
mov
imul
lods
orb
out
lea
xchg
jecxz
outsl
mov
das
rorl
or
xchg
mov
pop
xchg
addl
ss
scas
aad
mov
sbbl
mov
ret
inc
fidivrs
xchg
push
inc
rcrl
mov
or
or
cltd
fiadds
mov
and
mov
cwtl
shrb
cmp
imul
mov
in
lcall
shll
insb
hlt
inc
ja
mov
pop
mov
xor
lods
loopne
das
xchg
enter
or
xchg
pusha
stos
inc
cltd
dec
mov
xor
dec
or
push
jle
addl
enter
rcll
fsubrs
sbbl
lea
fdivrs
jle
lock
inc
sub
cmp
mov
xor
lods
dec
xchg
cld
shll
add
sub
inc
mov
mov
sbb
lods
xchg
sbb
loope
lahf
mov
cmp
push
nop
sbb
pusha
jb
pushl
sbb
out
inc
dec
xchg
and
je
inc
ljmp
xchg
sub
push
xchg
jmp
movsb
insl
ljmp
push
imul
cs
movsl
adc
arpl
or
or
lods
add
mov
xchg
push
add
inc
dec
push
jg
mov
push
pushf
js
inc
cld
add
add
pusha
push
xor
lock
xchg
icebp
and
and
push
test
push
xlat
dec
std
mov
add
in
and
cmp
jp
push
xchg
fisttps
mov
push
add
pop
adc
pushf
fistpll
pushf
mov
add
dec
int
or
or
cmpsl
push
out
sub
sarl
mov
cwtl
sub
nop
mull
dec
mov
mov
push
push
insl
mov
ficomps
xchg
sbb
cltd
mov
mov
add
mov
pop
aas
xor
pop
mov
sub
push
xchg
mov
nop
mov
and
pushl
or
push
push
push
movb
mov
adc
jo
mov
mov
jp
mov
imul
aaa
inc
sbb
out
mov
xchg
push
imul
mov
add
ret
xchg
inc
incl
lods
or
xor
rorl
jg
in
shlb
aad
je
push
sbb
dec
jg
sbb
data16
orb
cltd
push
push
movsl
push
pop
jo
pop
arpl
cmp
loop
outsl
mov
addr16
inc
sub
mov
cltd
mov
cld
out
mov
inc
out
add
mov
jp
and
clc
decl
dec
pop
inc
into
inc
mov
push
adc
lret
or
outsb
pop
test
cmp
sub
pop
lea
ljmp
icebp
insb
inc
rcl
push
jle
fildl
das
push
mov
inc
inc
mov
add
pushl
aad
outsb
dec
adc
or
dec
out
ljmp
subb
mov
mov
mov
push
clc
lock
adc
decl
insb
add
mov
cli
add
pushf
mov
inc
inc
cli
mov
xchg
ficoms
rorl
cwtl
bound
aaa
cli
movsl
lcall
clc
fwait
inc
add
call
cmp
movsb
inc
shll
add
push
lea
xchg
mov
filds
xchg
cmpsb
mov
sbb
add
cwtl
aad
cli
fwait
jg
dec
jb
cmp
mov
jns
cmp
or
mov
sbb
and
cli
sub
mov
imul
lods
andb
pop
movsb
test
adc
mov
inc
or
sbb
shlb
xchg
fisubs
pop
and
fistps
mov
adc
hlt
push
mov
shlb
push
cmp
jge
movsb
or
pop
movsl
je,pn
nop
shlb
pop
mov
mov
dec
or
stos
iret
mov
pop
outsl
std
sbb
repnz
scas
mov
repnz
xchg
jle
add
lock
mov
xchg
fnstsw
mov
fisttpll
push
loopne
inc
or
or
fisttpl
xchg
xchg
das
les
aas
rcrb
fdivs
dec
push
movsl
pop
xchg
shl
loopne
or
sub
pop
adc
ljmp
pushf
mov
sti
cmpsb
loope
daa
subl
hlt
dec
les
mov
leave
cmp
pop
add
dec
daa
jne
mov
lea
mov
push
sbb
mov
sub
push
enter
lret
dec
and
inc
loop
pop
sbb
mov
cmpsb
and
cmp
jmp
jo
icebp
pop
dec
inc
xchg
mov
adc
loopne
test
std
xchg
and
dec
push
adc
mov
shrb
sub
enter
or
pop
jne
ret
mov
push
sub
push
scas
sbb
cli
je
adc
test
imul
test
mov
or
push
cld
and
pushl
sbb
and
push
in
popf
and
inc
inc
iret
orb
rol
bnd
jmp
shrb
bound
mov
in
icebp
roll
inc
mov
or
dec
cmp
inc
jb
nop
cmpsb
std
ljmp
and
adc
cld
pop
shrb
and
cmpsb
pushf
xchg
xchg
daa
dec
xor
lcall
sbb
fsubs
sbb
cmp
inc
testl
add
ljmp
jg
mov
xchg
aaa
loop
aad
push
imul
jnp
call
jns
repz
lret
lock
mov
je
pusha
decl
inc
or
sub
mov
push
inc
nop
mov
mov
push
movb
push
xchg
mov
sub
or
xchg
add
mov
flds
dec
negb
and
xor
xchg
nop
jg
sbb
jge
pusha
rcrb
nop
ljmp
inc
jbe
xchg
push
push
sbb
jmp
xorb
leave
and
lea
push
push
cmp
mov
push
mov
cltd
and
adc
lock
fdivs
sti
xor
in
mov
popf
add
je
ss
js
inc
push
out
bound
std
and
aad
and
dec
mov
ljmp
add
push
sub
mov
pop
ficoml
add
push
std
push
ret
push
inc
xor
push
in
test
lret
jno
mov
xor
push
mov
filds
repz
aad
mov
mov
loop
push
aam
std
jg
mov
or
cmp
test
inc
sarl
mov
loopne
mov
std
fwait
mov
orb
sbb
into
inc
orl
mov
inc
cwtl
nop
xor
arpl
mov
xor
data16
dec
icebp
shlb
fisubrl
aaa
aas
pop
rcrb
push
adc
mov
arpl
and
and
and
nop
dec
or
fs
jb
push
iret
movsl
push
pop
push
xor
sub
daa
mov
shl
clc
or
jg
pop
pop
fiaddl
xor
aam
adc
pop
jle
sub
cvttps2pi
ds
popa
fistpll
les
push
hlt
in
cmp
stos
loopne
jg
adc
mov
in
xor
insl
or
dec
sub
std
popf
pop
or
mov
push
mov
jg
outsl
lret
sub
dec
mov
es
mov
lcall
dec
add
repz
jns
xchg
pop
pop
test
push
fdivs
ja
push
mov
dec
roll
sbb
pop
mov
and
add
das
outsl
outsl
add
sbb
and
test
pop
in
xor
cmpsb
and
push
add
les
lret
jo
cmp
test
mov
aas
gs
mov
jnp
js
stc
jp
sub
and
sbb
jge
testl
adc
cmp
lret
cmpsb
bound
repnz
daa
jbe
or
sbb
pop
push
pop
enter
mov
dec
add
pusha
testl
jg
outsl
sbb
aas
imul
xchg
sub
add
dec
or
std
sub
cmp
dec
repz
pop
pop
or
fistl
aas
hlt
jae
repnz
push
dec
inc
loope
inc
push
stos
das
icebp
pop
dec
cmp
mov
aaa
lods
sarb
inc
or
and
sub
movsl
adc
jmp
ret
mov
mov
mov
xor
scas
dec
call
add
mov
dec
and
push
adc
inc
bound
andb
lret
mov
adc
les
mov
dec
mov
es
adcl
mov
sub
dec
or
ja
xchg
sbb
clc
mov
lret
test
push
outsb
aad
pop
fwait
push
cwtl
cmp
add
fildll
or
xor
xchg
shr
or
inc
lahf
sub
int3
xchg
outsl
fdivr
lock
mov
cmp
mov
cmp
dec
adc
es
mov
addr16
dec
lret
or
loopne
std
cltd
test
and
and
xor
adc
xchg
pop
sub
mov
out
mov
mov
sbb
mov
int
dec
mov
jbe
fxch
pushf
and
push
icebp
adc
mov
add
stos
jg
sbb
repz
test
adc
adc
dec
adc
inc
sub
nop
fcmovnu
fstpt
stos
xor
scas
and
add
inc
loop
js
add
jl
popf
mov
adc
test
lcall
cmp
out
jg
out
add
in
dec
test
orb
stos
add
pop
push
jg
ja
shrb
fxch
and
test
or
ret
add
xchg
enter
pop
mov
xchg
movsb
aas
nop
mov
in
jno
jb
inc
inc
loopne
scas
and
insb
cld
pop
fcmove
xor
mov
popf
es
mov
mov
aad
incl
pop
and
xor
xchg
lock
mov
das
popf
mov
ret
test
fstps
shrl
pop
mov
jecxz
push
clc
pusha
std
incl
xor
lret
cmp
or
aas
bound
pop
fsub
fisttps
and
mov
fisttpl
pop
dec
ljmp
inc
pop
sub
shrl
cmc
and
stos
sub
pop
mov
aam
mov
dec
mov
daa
mov
aaa
data16
aaa
sbb
aaa
nop
in
test
inc
data16
sarb
lcall
and
mov
push
adc
les
add
xchg
ljmp
mov
test
mov
and
mov
mov
cmp
leave
mov
adc
int
lods
and
cwtl
fdivrs
mov
adcl
xchg
push
fisubrs
pop
ss
or
mov
decb
and
and
sbb
xchg
pop
mov
push
xchg
dec
push
sub
lds
pop
inc
or
lea
adc
sbb
movsb
dec
jecxz
mov
or
xchg
cmp
push
mov
pusha
cli
mov
daa
xchg
rorl
xor
pop
dec
sub
push
and
clc
ret
es
push
mov
sbb
fisubrs
xor
xor
mov
pop
pop
mov
lahf
lret
pop
cmp
sbb
loop
sar
in
sub
popf
pop
fiadds
or
cmp
xchg
lcall
cs
roll
mov
out
nop
cmp
cmc
int3
mull
data16
mov
or
lock
arpl
push
dec
sbb
add
jae
test
push
nop
aaa
call
daa
repz
dec
xor
incb
into
daa
push
mov
pop
xor
sahf
into
call
das
lcall
pop
pop
xchg
push
mov
sbb
xchg
push
movsl
inc
xchg
je
inc
movb
xchg
gs
out
ret
subl
pushf
dec
jg
mov
sub
or
mov
add
sti
cmp
out
mov
test
test
sbb
mov
jo
or
cmpsb
jmp
and
out
push
decb
adc
dec
lods
repz
movsb
adc
and
popa
lea
in
or
cmp
inc
aas
loop
outsl
cld
ret
xor
loope
scas
mov
out
jno
mov
pop
xor
outsl
or
notl
add
cltd
jmp
std
insl
mov
jmp
lret
lahf
scas
jle
ret
pop
xchg
ficomps
out
mov
js
pop
add
lods
cmp
cld
mov
dec
std
xor
cmpb
aam
sbb
cld
and
add
xchg
scas
cmc
and
mov
add
out
aam
pop
inc
add
jno
dec
in
add
lahf
xchg
add
dec
sahf
dec
mov
das
std
nop
mov
inc
cltd
mov
push
leave
lcall
in
dec
dec
lds
mov
mov
mov
mov
adc
icebp
das
in
and
xor
aam
cmpb
inc
mov
xor
push
and
lods
lds
out
rorb
idivl
jp
jecxz
adc
cmpsb
in
pop
enter
into
testl
rcrb
shlb
xor
lret
testb
mov
push
push
icebp
sub
and
decl
movb
cmp
sbb
push
xor
pop
push
imul
add
cmc
cmp
pop
xchg
arpl
icebp
rol
pusha
in
insl
sbb
xchg
fistpll
mov
leave
sub
in
or
mov
mov
fnsave
mov
mov
shll
xchg
insb
js
jle
mov
aas
or
addr16
mov
iret
pop
lods
mov
pop
xor
pop
push
or
daa
jp
aaa
sub
rolb
enter
sar
and
cld
adc
pop
xor
test
dec
hlt
punpcklbw
and
mov
mov
ljmp
popa
jg
cmp
xchg
repnz
pop
sbb
movl
iret
jg
add
push
incl
or
lock
mov
mov
subl
cmp
repz
andb
and
ret
cs
push
jl
inc
sahf
push
mov
pop
push
into
mov
cmp
lea
and
ds
addl
mov
sub
je
mov
jl
mov
mov
dec
clc
or
jmp
mov
lea
pop
aaa
sub
pop
addr16
jecxz
adcl
ljmp
or
and
aaa
sub
or
pop
jg
imul
inc
ljmp
icebp
push
jae
pushf
push
mov
sub
pop
dec
aaa
mov
imul
orl
adc
fdiv
sub
mov
out
mov
notb
fwait
ret
dec
cmp
or
xchg
icebp
decl
mov
jge
and
adc
mov
mov
sub
mov
and
mov
jg
inc
test
jno
sbb
xchg
add
icebp
pop
cwtl
incb
mov
push
inc
inc
xor
decl
cmp
daa
test
add
call
decl
push
shlb
inc
mov
dec
or
dec
roll
inc
push
mov
incl
or
lods
add
push
xchg
fistps
or
loop
bound
jno
xchg
xor
sbb
in
into
lcall
popa
cmpsb
dec
call
sub
cwtl
fwait
nop
cmp
mov
leave
mov
pop
mov
jns
or
push
jle
cli
dec
jp
mov
mov
js
and
jbe
in
fdivrl
loopne
pop
mov
push
cmp
mov
rclb
xchg
mov
mov
mov
std
repnz
sub
stos
jne
mov
in
cmpsb
insl
and
pop
imul
rcl
cmp
pushl
std
ret
mov
adc
xor
add
inc
lea
mov
inc
call
loopne
pop
add
std
movsb
clc
mov
dec
aam
xchg
sti
pushl
insl
incl
dec
pop
out
sub
inc
jae
pop
sti
popf
in
mov
jecxz
pop
outsl
hlt
jmp
mov
inc
dec
inc
mov
les
out
dec
out
stos
pop
mov
data16
imul
lock
sbb
push
arpl
test
inc
cwtl
scas
jge
dec
add
incl
push
or
pop
sti
or
pushl
xchg
xor
inc
mov
andb
and
add
adc
lcall
or
xlat
push
stos
incl
shlb
and
pop
mov
sbb
lds
jmp
jecxz
sbb
xchg
adc
cmp
inc
clc
daa
cmpsb
pop
mov
add
and
xchg
or
loopne
or
dec
dec
sub
add
inc
dec
sub
dec
mov
shlb
and
xor
mov
jg
and
pop
ljmp
rorb
mov
fists
call
and
push
adc
imul
and
shlb
mov
mov
imul
cwtl
jae
adc
cmpsb
adc
popf
ljmp
incl
pop
xlat
add
xchg
mov
dec
push
pop
in
jns
movsl
mov
sar
outsl
std
pop
and
shll
pusha
adcb
jne
and
add
lcall
inc
mov
repz
lret
adc
imulb
pop
push
mov
aas
leave
shl
push
xor
sub
movsl
popa
adc
into
mov
xor
sbb
mov
sarl
lcall
inc
add
sub
mov
js
mov
mov
cs
or
inc
jne
rorl
jg
pop
loop
sbb
mov
or
sub
rcll
sub
scas
loopne,pn
xor
or
cltd
sub
fmull
sbb
lcall
cmc
xorl
in
movsl
test
popa
add
inc
xor
sub
fdivrp
pop
call
add
pusha
mov
lods
dec
add
daa
pop
inc
inc
xor
mov
daa
push
xchg
icebp
xlat
xor
decl
ljmp
pushl
inc
jnp
cs
mov
mov
dec
mov
mov
and
adc
lods
mov
sbb
into
and
fdivr
or
lea
lahf
jne
in
aaa
dec
jle
fcom
test
adc
lock
add
sub
pop
incl
cwtl
cli
push
pop
cmp
lea
push
out
insb
dec
sahf
jno
in
aam
bound
or
clc
call
add
sti
xor
int3
jb
gs
dec
dec
repz
cbtw
add
lcall
lcall
mov
sub
sbb
shl
decl
mul
outsb
sub
jmp
mov
in
lea
leave
xlat
xchg
mov
call
hlt
pusha
andl
jmp
cli
addl
mov
add
push
jg
sbb
push
add
adc
ja
xlat
cli
mov
mov
clc
or
push
inc
fcmovnu
mov
or
in
push
aaa
cmpsb
out
push
aam
add
xor
fisttps
test
sbb
jle
add
cld
incl
out
xor
lds
add
mov
ja
push
ficoms
call
and
inc
test
lcall
xor
rolb
mov
loopne
mov
cmpsl
ret
xchg
mov
in
xchg
jo
adc
loopne
jp
mov
lcall
addr16
mov
cmp
and
sub
int
je
add
test
cmp
fdivr
in
mov
fucomip
pop
pop
les
fs
sahf
add
push
or
out
clc
incl
ja
mov
sbb
dec
pop
sbb
adc
aad
push
sbb
test
adc
add
jno
lock
es
add
mov
xchg
add
dec
iret
and
jb
mov
xchg
test
xchg
popf
xchg
pop
ret
ret
sbb
cmp
cmp
mov
and
pop
mov
and
in
and
dec
jns
jl
mov
dec
dec
lcall
adc
pushl
insl
mov
pop
inc
jmp
mov
jmp
addr16
stos
jmp
fbld
cmp
in
orb
adc
rcrl
mov
dec
push
neg
push
add
pop
mov
or
iret
pop
das
and
mov
data16
adc
cmp
dec
stos
xor
cmc
incl
mov
push
ja
loope
add
in
fwait
cmp
or
loope
dec
push
aad
mov
pop
repz
gs
jp
cmpsl
fisubs
pop
cmp
jle
fisttpll
mov
lock
and
and
lea
mov
or
cmpsb
or
ss
nop
stos
cmpsb
fstl
and
ja
ret
pusha
rcll
sbb
bound
fdivr
lea
adc
aam
test
std
xor
and
add
inc
or
decl
scas
xchg
bound
lods
aad
sbb
adc
adc
ss
xchg
shr
and
jg
xchg
or
test
ss
repz
inc
and
jg
add
mov
xchg
loop
lods
jnp
xor
negb
and
push
stos
mov
xchg
jbe
sub
and
push
std
negb
sub
jecxz
and
xchg
mov
in
inc
dec
rclb
fidivs
push
and
lea
xchg
inc
into
lret
cmc
loop
and
hlt
dec
dec
les
fisttps
push
rorl
xchg
jbe
inc
inc
icebp
jno
pop
and
xor
ds
dec
xlat
inc
in
mov
jb
lcall
jecxz
xor
aaa
cli
inc
mov
scas
int
jno
jge
xchg
xor
mov
out
sub
lods
fsubr
fwait
jne
mov
mov
mov
ljmp
loopne
and
and
test
push
dec
cmp
jnp
pop
adc
pop
fwait
mov
sti
jmp
cmp
xchg
roll
jae
mov
add
push
movsb
add
pop
lahf
xor
rcl
lea
mov
repz
adc
movsl
cld
call
decb
lock
out
loope
cltd
inc
add
ljmp
in
mov
inc
and
js
add
add
call
adc
and
inc
ret
int
or
mov
cmp
and
or
push
push
pop
insb
jge
pop
ds
incl
xorl
jb
pusha
xchg
roll
push
jo
lods
arpl
jg
ja
xchg
ds
std
mov
int3
adc
mov
or
mov
daa
and
mov
adc
stos
mov
jmp
inc
inc
mulb
mov
lcall
rcr
jl
sub
push
outsl
jmp
mov
push
cmp
pop
or
and
dec
add
push
arpl
sbb
mov
daa
and
jl
push
rcl
jb
vpsubq
outsl
or
sub
or
mov
add
pop
push
cld
test
hlt
dec
and
scas
push
leave
daa
cld
sub
or
xor
or
mov
fmulp
mov
add
in
xchg
pop
push
fisttpl
mov
and
les
in
cli
mov
aaa
cli
jg
adc
sahf
movsb
mov
enter
insl
stc
cmpsb
mov
arpl
xchg
sbb
into
and
add
iret
add
dec
cmpsl
jb
pop
inc
fildl
fwait
shlb
add
test
pop
out
mov
outsb
jo
dec
xor
sbb
push
cmp
pop
shlb
or
or
rclb
fdivr
aam
shr
xor
stc
or
ret
add
push
ja
jmp
xchg
dec
cli
das
sub
push
imul
inc
stos
lahf
dec
nop
xchg
adc
roll
fnstenv
pop
in
push
shll
out
sti
mov
fmull
jp
call
mov
add
jnp
push
push
lock
mov
jg
mov
mov
mov
pop
pop
sbbl
cld
xchg
rorb
fmuls
xchg
lea
mov
fistpl
cmp
nop
decl
andl
add
sar
xchg
xchg
movsl
fsubrp
mov
sub
sbb
lcall
lret
data16
scas
mov
movsl
incl
sbb
outsb
lods
pusha
je
xchg
int3
aas
mov
sub
sbb
push
hlt
jnp
dec
and
sub
fwait
pop
mov
fdivrp
incl
insb
jmp
rcll
dec
inc
adc
or
in
es
mov
out
loopne
xchg
lcall
test
loop
inc
ljmp
inc
movsl
lods
cmp
in
jns
cs
neg
or
shl
sub
inc
movsl
enter
add
lds
scas
movsl
dec
xchg
push
popf
mov
cmp
ljmp
imul
pop
mov
call
or
jg
decl
push
add
mov
pop
cmc
lods
pop
in
gs
push
push
jne
das
adc
sbb
jecxz,pt
ret
sbb
fsubrl
jg
dec
sub
adc
push
stos
rcr
fsub
movsl
jmp
inc
adc
decl
xor
fucomip
aaa
push
mov
mov
leave
pusha
push
push
mov
out
insl
scas
fsts
and
xor
push
pop
test
hlt
lods
pushl
stc
call
xchg
xchg
add
sbb
mov
pop
jnp
ret
movsl
stc
adc
xor
dec
out
push
adc
mov
cltd
jbe
xor
std
dec
mov
dec
lods
out
outsl
pop
enter
pusha
or
sub
mov
jne
hlt
xchg
cmp
shlb
stc
cli
call
movsl
or
mov
sbb
pop
fwait
movsb
int3
ds
push
mov
inc
adc
fcomip
incl
decl
cmp
shrl
adc
mov
std
pop
stc
mov
push
xor
mov
mov
pusha
fistpll
xor
dec
sahf
sbb
fadd
sub
aad
arpl
adc
xlat
test
add
xchg
shr
dec
sub
inc
xor
add
pusha
call
outsb
jmp
lahf
mov
sub
insl
dec
cmp
enter
pop
ret
popf
aam
jne
sbb
dec
pushf
xlat
shlb
leave
gs
cmc
pop
ljmp
adcl
daa
inc
push
sbb
jo
dec
xchg
xor
push
shrl
mov
jno
jmp
push
repz
lea
push
bound
int3
or
outsb
lret
iret
lods
xchg
sahf
add
mov
das
leave
cmpsl
inc
push
sub
je
push
cmc
pop
sbb
cmp
movsb
rorl
add
aam
in
sbb
add
xchg
sbb
xchg
cs
mov
mov
and
jmp
mov
dec
fistps
ljmp
js
cmp
mov
mov
lret
add
aad
cmc
dec
addr16
or
jg
adc
pop
invd
inc
and
loope
sahf
sldt
add
pop
fdivrp
mov
dec
jne
aas
and
sbb
cmp
push
aam
test
bound
xor
frstor
int3
test
lds
mov
xchg
adc
shrl
outsb
sti
sahf
pop
sbb
lret
add
jg
adc
cmp
add
inc
stos
dec
or
mov
mov
mulb
add
xchg
dec
sub
ret
inc
sbb
inc
xor
push
push
cmp
in
push
dec
call
jmp
fcoml
xor
add
inc
cmp
std
test
jmp
push
cld
dec
mov
sti
cltd
push
shll
or
xchg
mov
jno
fildl
xchg
push
fmuls
and
outsb
cmc
and
pop
mov
daa
inc
sbb
jno
jl
mov
js
pop
loopne
mov
int
jl
push
ficoms
out
imul
pop
sub
stos
mov
mov
push
push
inc
add
dec
clc
leave
xor
jnp
add
fwait
mov
xchg
test
or
and
imul
shll
int3
test
hlt
movsl
jmp
sbb
outsl
andl
in
sub
jecxz
lock
ljmp
mov
mov
pop
and
loop
stos
sub
mov
lea
cmc
or
xlat
mov
addb
mov
outsl
add
jbe
and
rcrl
fcmovbe
repz
imul
ljmp
out
xchg
aad
cs
das
repz
sbb
or
aas
stc
pushf
pop
mov
push
cmp
and
jae
jmp
lock
gs
ret
adc
adc
mov
or
add
std
lcall
and
pop
adc
pop
ret
call
movsl
sbb
cwtl
stos
add
mov
adc
sub
lods
mov
loop
mov
outsl
add
lods
and
mov
mov
sub
out
cmpsl
mov
dec
loopne
pop
xchg
mov
adc
aas
adcb
adc
repz
and
loop
add
jo
outsl
cmp
dec
mov
dec
cwtl
adc
add
mov
inc
and
push
cld
inc
jp
xchg
inc
stc
aas
pusha
mov
fcmovne
push
push
aas
mov
cwtl
mov
jne
out
in
mov
adc
movsl
mov
in
adc
loopne
mov
mov
jmp
pop
lds
jecxz
cmp
add
pushf
pusha
xor
sbb
push
jmp
mov
inc
dec
fucomip
sbb
jbe
inc
mov
or
popl
insb
daa
daa
in
jg
icebp
inc
addl
addb
jmp
cmpsl
mov
dec
adc
loop
loope
popa
mov
cmpl
xorb
adc
adc
add
lret
push
xor
sarl
insb
jae
jb
outsb
ljmp
fisttps
dec
outsl
popa
fs
gs
jne
arpl
inc
outsb
jne
inc
popa
je
inc
outsl
jb
std
js
adc
je
jb
jbe
push
mov
imul
outsl
imul
imul
jbe
arpl
inc
inc
js
das
sbb
jae
jnp
sarb
imul
jne
fildll
inc
adc
inc
adc
popa
jb
jne
pop
mov
jo
outsw
inc
and
popa
outsb
fs
and
pop
pop
inc
fs
cmp
sti
fsts
dec
imul
jne
jo
xlat
lcall
addr16
sub
jb
imul
dec
push
imul
mov
sub
jo
push
and
pusha
sub
ja
lods
and
insb
jne
or
push
or
mov
pop
adc
jo
dec
gs
jae
mov
push
inc
xchg
in
adc
push
ljmp
es
insl
outsl
outsb
add
cmp
data16
push
testl
mov
jnp
pop
jae
pop
popa
jo
pop
je
packsswb
scas
lock
ret
push
mov
fs
or
imul
jo
test
arpl
jmp
pushf
popa
jmp
inc
push
pop
out
add
inc
mov
push
push
pop
push
fistpl
jae
pop
xchg
outsl
xchg
lea
pcmpgtd
jae
sti
fadds
push
pop
mull
cmp
pop
pop
aaa
add
push
and
insb
inc
bound
cmpsl
fstps
ss
popa
jns
adc
adc
fs
nop
inc
mov
xor
dec
imul
or
pop
xor
sub
adc
pop
xlat
int
pop
rclb
inc
or
or
and
jno
add
mov
decb
rolb
push
xor
pop
ljmp
mov
in
std
addb
nop
sbb
fnstenv
cmpsl
les
cs
js
xlat
enter
pop
mov
xchg
jb,pn
outsb
popa
stos
sbb
add
jmp
lods
add
inc
add
cmp
push
add
push
add
sarb
add
sub
dec
push
push
add
add
adc
fwait
xchg
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
sub
add
push
add
add
add
add
or
or
addb
cwtl
add
xorb
add
add
subb
add
add
addb
add
cmp
add
pusha
add
xorb
mov
add
mov
add
fadds
add
add
add
add
add
or
add
int
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
or
add
add
pushf
int
add
add
add
add
add
int
add
add
add
add
add
add
add
add
or
add
add
add
int
add
add
add
add
add
add
add
int
add
add
add
add
inc
add
sbbb
add
push
add
add
add
add
loopne
add
or
sbbb
add
add
sbbb
add
addb
push
push
add
test
add
rolb
andb
add
add
addb
add
and
add
dec
add
add
jo
add
cwtl
add
add
rolb
add
add
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
pop
add
js
add
mov
push
add
enter
push
push
add
lock
add
sbb
add
inc
or
addb
add
or
add
add
in
int
add
add
add
add
add
into
add
or
add
add
add
add
into
add
or
add
add
add
add
add
add
into
add
adc
add
or
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
add
into
add
push
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
or
add
or
add
add
add
adc
add
or
add
add
hlt
into
add
sldt
add
add
add
add
add
iret
add
or
add
add
add
add
iret
add
or
add
or
add
add
add
sldt
add
add
add
add
add
push
add
inc
iret
add
or
add
add
add
add
push
add
push
iret
add
or
add
or
add
add
fs
add
or
add
or
add
add
je
add
or
add
or
add
iret
add
or
add
or
add
push
add
xchg
iret
add
sldt
add
add
add
add
add
push
add
test
add
or
add
or
add
pop
add
mov
add
add
add
add
add
enter
adc
add
or
add
add
loopne
add
or
add
or
add
iret
add
adc
add
or
add
rolb
add
add
add
add
add
pop
add
sbb
add
adc
add
or
add
or
add
rolb
add
add
add
add
add
or
add
add
sldt
add
add
add
add
add
add
pop
rolb
add
add
add
add
add
add
add
add
add
rolb
add
pop
add
or
sub
add
cwtl
or
cmpb
addb
add
adc
add
cmp
add
pusha
or
or
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
subb
add
js
add
mov
push
add
enter
insl
push
add
lock
subb
add
or
xorb
add
push
add
add
add
add
loopne
add
add
add
or
add
roll
add
add
add
add
add
roll
add
add
add
add
add
or
add
add
add
add
add
or
add
roll
add
add
add
add
add
or
add
roll
add
add
add
add
add
add
in
roll
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
aam
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
fs
add
add
add
add
add
add
js
add
or
add
add
add
add
aam
add
add
add
add
add
aam
add
add
add
add
add
or
add
add
add
add
add
or
add
aam
add
add
or
add
or
add
aam
add
add
add
add
add
add
clc
aam
add
add
or
add
aad
add
add
or
add
aad
add
add
or
add
or
add
aad
add
add
add
add
add
or
add
add
adc
add
out
add
and
add
or
add
or
add
push
add
add
add
nop
and
mov
xor
add
add
inc
or
xor
add
add
dec
and
adc
adcb
inc
and
add
add
mov
inc
adc
add
js
add
push
add
xor
mov
push
inc
add
test
cwtl
and
add
addl
lea
add
inc
inc
addl
add
pushf
lea
add
and
xor
add
and
push
adcb
mov
add
mov
add
adc
and
and
add
lea
add
cwtl
test
inc
inc
mov
rorb
sub
or
nop
shrb
add
add
lea
add
adc
test
inc
add
addb
add
lea
add
xorl
inc
add
inc
mov
inc
add
add
add
adc
andb
rol
xor
add
dec
add
add
inc
add
inc
mov
add
add
addb
test
adc
add
test
add
push
inc
inc
add
add
mov
add
inc
xor
inc
inc
add
subb
or
add
add
add
dec
and
mov
sub
xor
add
add
adc
or
sub
add
and
mov
add
add
inc
je
add
test
push
mov
rolb
orb
test
sub
inc
inc
add
mov
mov
add
inc
or
xor
and
movsb
mov
add
xor
and
push
shlb
add
add
and
addb
rorb
sub
and
inc
push
push
push
add
mov
add
test
add
add
add
mov
add
orb
shlb
in
mov
add
adc
and
addb
mov
add
inc
inc
mov
add
and
add
adc
add
popl
add
xor
cwtl
add
mov
popl
add
mov
nop
inc
test
inc
push
add
sub
add
or
inc
xor
inc
inc
test
mov
cmp
test
mov
dec
add
cwtl
add
add
and
dec
inc
add
and
xor
nop
xor
and
and
inc
sub
xor
and
add
inc
mov
cwtl
xor
or
add
add
adc
add
add
and
dec
sub
and
add
mov
nop
add
and
push
and
nop
and
mov
add
add
and
inc
or
addl
and
inc
and
or
add
mov
add
popl
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
je
jne
insl
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
jae
and
inc
add
add
add
add
add
and
inc
add
outsb
add
push
add
outsl
add
jns
and
push
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
insl
add
and
inc
add
add
add
add
add
add
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
add
add
and
dec
add
jb
jae
and
push
add
insl
add
outsl
add
add
insb
add
imul
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
insb
add
add
js
add
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jae
add
and
dec
add
jbe
add
and
inc
add
push
add
add
bound
insb
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
xchg
add
push
mov
shlb
adc
cwtl
and
adc
xor
loopne
add
or
and
adcb
mov
add
xor
push
inc
or
and
inc
inc
push
test
cwtl
add
dec
inc
add
add
xor
inc
mov
add
rolb
xor
inc
dec
add
add
adc
adc
mov
adc
and
add
and
inc
inc
addb
cwtl
and
and
inc
dec
add
xchg
add
or
or
dec
inc
sbbb
add
dec
xchg
add
and
shlb
add
push
inc
adc
push
mov
and
and
add
mov
addl
mov
adcb
xorb
xor
and
test
add
inc
andb
or
add
xor
dec
inc
sub
test
add
movsb
xchg
add
and
addb
andl
mov
add
adc
adc
or
add
xchg
add
push
rolb
add
or
adc
add
xchg
add
xor
xor
xor
add
dec
rolb
push
xor
xchg
add
add
or
sub
and
add
cld
xchg
add
addb
mov
or
or
or
and
sbbl
add
orb
and
inc
rolb
sbbb
add
and
dec
xor
mov
cmp
add
cwtl
and
addb
and
and
inc
adc
inc
adc
test
dec
inc
inc
and
add
inc
push
dec
and
push
add
fs
and
xor
test
and
adc
inc
addl
inc
inc
or
cwtl
add
and
and
add
or
inc
push
and
push
and
xor
mov
cwtl
xor
and
or
rclb
addb
inc
inc
xor
mov
push
sub
inc
adc
dec
adc
test
nop
inc
adcb
and
dec
add
inc
add
dec
and
and
adc
xor
mov
adc
push
and
xorb
or
add
add
inc
inc
dec
inc
or
adc
xor
xor
inc
add
add
and
orb
adc
add
dec
adc
dec
inc
and
adc
rolb
inc
and
adc
inc
add
rclb
inc
add
sub
inc
mov
or
adc
push
inc
or
and
add
addl
and
and
adc
add
andb
cwtl
inc
adc
inc
or
push
addb
test
add
or
rolb
xor
and
sub
orl
xor
sub
adcb
push
and
inc
add
and
inc
mov
adc
add
xor
or
inc
orb
push
inc
or
nop
add
and
inc
add
mov
inc
mov
mov
cwtl
nop
orb
mov
sub
addl
push
or
adc
push
nop
mov
and
inc
adc
add
inc
adc
adc
shlb
cwtl
inc
and
cwtl
dec
nop
rolb
xor
cwtl
addl
add
and
adcl
addb
test
and
inc
inc
andl
sub
test
andb
and
mov
push
xor
sub
mov
mov
add
mov
and
rclb
or
add
push
inc
add
adc
andb
inc
push
xor
push
test
push
inc
test
or
test
or
adc
addb
and
xor
and
inc
and
inc
inc
inc
and
mov
push
and
push
cwtl
xor
test
and
add
and
mov
add
and
inc
xor
orb
inc
adc
addb
or
inc
inc
inc
and
adc
and
inc
xor
add
and
mov
or
test
cwtl
adc
addl
addb
or
mov
xor
addb
add
andl
adc
adc
test
xor
and
mov
and
xor
add
subl
mov
and
xor
inc
xor
add
mov
adc
orb
and
and
test
inc
or
and
or
add
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
add
add
flds
add
flds
add
flds
add
flds
add
add
sbb
add
add
add
sub
add
add
add
cmp
add
add
add
dec
fiaddl
add
add
add
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
jbe
jb
cs
insb
add
gs
insb
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
jo
outsb
dec
gs
js
add
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
imul
insb
inc
bound
je
add
add
popa
jns
outsl
jne
fs
