idiv
inc
imul
fiaddl
hlt
stc
aad
add
jg
pop
leave
ret
pop
pop
add
nop
pop
pop
pop
ret
test
add
mov
leave
ret
mov
or
xor
pop
jnp
mov
nop
test
pop
add
pop
sbb
pop
outsl
in
pop
pop
ret
sub
adc
add
call
or
or
add
adc
nop
and
or
adc
add
mov
mov
inc
push
sub
mov
add
test
int
and
nop
nop
add
add
push
ss
add
and
mov
nop
adc
bound
inc
add
adc
mov
cmpb
iret
push
or
imul
popf
inc
adc
pop
sti
nop
adc
adc
insl
adc
adc
adc
push
push
bound
or
imul
push
scas
lods
mov
mov
cmp
mov
pop
mov
jb
mov
mov
mov
out
adc
ret
loopne
mov
cmpl
inc
mov
scas
jnp
insl
roll
or
outsb
sub
inc
add
push
and
mov
pop
jns
dec
adc
lcall
sub
imul
xor
icebp
adc
repz
in
xor
incl
dec
inc
xor
neg
neg
neg
inc
xor
incl
add
neg
jmp
add
sub
dec
sbb
fldt
icebp
add
or
push
out
and
dec
ljmp
add
sbb
add
movsl
add
add
push
add
add
arpl
outsl
lret
fildl
or
cmp
add
jmp
cmpsb
pop
jg
outsb
add
enter
xchg
add
add
sbb
std
outsl
pcmpeqw
inc
sub
add
add
dec
add
divb
fists
out
pop
adc
lret
add
ljmp
add
or
push
lock
dec
xor
into
sbb
inc
add
mov
inc
mov
add
outsb
pop
add
fwait
add
das
lcall
in
ja
daa
popf
adc
push
add
mov
add
loope
fldenv
mov
sub
in
fistpll
std
cmpsl
xor
inc
inc
pop
pusha
add
test
add
inc
icebp
test
std
mov
in
testb
xchg
mov
add
lods
or
pushl
jmp
add
outsl
shrl
lods
jne
sti
or
inc
out
add
adc
cmc
mov
and
in
div
daa
add
add
add
mov
popf
roll
add
add
dec
sahf
add
dec
add
sub
stos
mov
ror
add
push
or
or
flds
ljmp
jg
pop
add
add
jl
dec
aad
inc
jb
iret
cmp
sub
sub
add
fdivrl
leave
adc
aam
xchg
or
in
sbb
loopne
js
inc
ret
mov
add
pop
neg
or
and
lsl
fnsetpm(287
ret
add
incl
repz
add
fiaddl
add
inc
cmp
shl
jg
mov
roll
imul
rorl
shll
pusha
push
and
sar
push
sub
dec
or
test
adc
push
addb
outsb
in
jmp
pop
popa
leave
cltd
push
pop
or
jo
add
adc
push
xchg
call
sbb
jmp
in
out
aaa
ret
repz
sbb
mov
orb
test
outsl
inc
mov
or
cmpl
pop
movsl
cmp
imul
fdivr
ret
mov
add
shrb
sbb
into
sbb
pop
in
sti
in
pop
cmp
mov
add
pop
jo
jno
cld
or
test
fistps
add
sarl
negb
and
test
lcall
mov
ficoms
fildl
add
mov
add
mov
out
xchg
sbb
in
xchg
push
inc
push
dec
mov
les
nop
sbb
and
rol
jge
xor
ljmp
jnp
add
out
lret
inc
xchg
pop
sbb
xchg
outsl
jns
mov
and
xchg
sahf
popf
repnz
shrl
inc
aas
imul
cmpsb
jle
sub
ljmp
jg
and
add
add
sub
std
mov
or
add
dec
or
iret
inc
inc
in
jp
fists
mov
aad
add
jle
arpl
and
outsl
pop
pop
pop
decb
pusha
inc
or
gs
stc
insl
sarl
mov
insl
xor
cld
add
inc
dec
inc
sbb
roll
add
sub
loopne
push
mov
add
jp
pop
incl
cmp
jp
loope
pop
aam
repnz
fcompl
notl
int
pop
repnz
sbb
xor
ja
test
jmp
test
dec
int
add
sti
sub
sbb
xchg
cld
inc
mov
aas
jnp
cmpsb
mov
out
pop
pop
lds
mov
sar
nop
cmp
inc
mov
xchg
dec
and
mov
dec
add
pop
jb
jb
xchg
loope
xor
push
push
out
je
inc
scas
xor
std
fistpll
loopne
enter
fimull
mov
std
cmpsb
mov
push
mov
pop
cli
push
leave
mov
pop
imul
bswap
add
jno
xchg
mov
mov
xchg
jo
pop
inc
adc
add
or
mov
mov
ret
loop
movsb
jne
ret
fldt
stc
xlat
das
lret
add
push
ds
mov
mov
mov
ss
popa
sahf
stos
push
dec
enter
in
fistpll
sar
sbb
sbbb
jecxz
mov
and
js
xchg
push
push
lahf
adcb
js
sub
add
or
std
mov
fsubrs
fimull
sub
and
add
imul
jecxz
sbb
movsb
push
adc
push
add
cmc
in
adc
or
dec
xchg
sub
lods
pop
mov
scas
push
add
inc
mov
jg
add
add
pop
mov
ret
ljmp
xor
loopne
sbb
shll
ljmp
shrb
mov
aaa
and
push
cmp
mov
xor
cld
fwait
xchg
mov
iret
in
mov
xorl
push
ljmp
es
fstps
and
movl
pop
test
dec
cmp
or
outsb
cld
mov
lret
xor
xlat
test
enter
push
add
jp
add
pop
mov
mov
das
loope
jno
jmp
push
add
lods
dec
inc
ret
pop
bound
xchg
xor
adc
mov
cld
shll
hlt
and
jnp
push
add
ret
mov
dec
and
or
add
mov
mov
sahf
neg
add
push
test
cmp
inc
add
xchg
fimull
jmp
daa
mov
dec
jecxz
test
jne
movsl
loop
flds
dec
test
enter
fcmovnu
cmpxchg
sti
addl
jbe
pop
pop
inc
cli
add
les
sarb
or
loope
cld
or
push
xor
push
xor
into
adc
xchg
mov
cmp
sbb
ret
mov
dec
mov
pusha
mov
sub
mov
jg
xchg
and
test
dec
in
in
adc
inc
and
incl
pop
or
bound
fsubs
and
mov
xor
add
outsb
cld
pop
addb
mov
mov
add
fbstp
lock
mov
pop
mov
jmp
insl
jmp
hlt
mov
add
add
add
inc
stos
push
cmp
sub
ljmp
mov
mov
mov
je
dec
dec
test
inc
iret
sub
dec
das
lock
outsl
mov
xchg
into
push
js
jmp
rorl
cmp
es
in
data16
dec
bound
jo
jg
cmovno
inc
stc
rcl
lea
add
test
repz
dec
or
out
mov
add
nop
push
mov
in
mov
in
pop
test
inc
add
rorl
or
or
or
sbb
fisttps
div
xlat
sbb
mov
cmpl
testb
adc
addb
cld
cwtl
push
icebp
push
lret
adc
aas
push
frstor
or
sbb
jmp
adc
cmp
add
out
mov
out
test
arpl
shl
fildl
repz
pop
jbe
or
dec
adc
pop
cld
mov
idivb
and
not
stos
pushl
frstor
or
icebp
fs
jno
in
call
jecxz
cs
sbb
and
inc
push
arpl
push
cmc
pop
and
fldcw
pop
sub
aaa
or
cmp
stos
mov
aam
cltd
add
pop
pop
sbb
sub
ja
jle
push
ss
and
shrl
lods
in
cmpsb
cmpsb
push
push
daa
xchg
cs
in
es
mov
sbb
fdivl
les
outsl
and
cs
add
insb
mov
push
imul
pop
outsl
pop
mov
jle
out
adc
fs
loop
mov
and
add
mov
add
or
cmpsl
pop
xor
xor
sbb
push
enter
test
idivb
sub
cli
hlt
sub
push
inc
inc
sub
lods
and
pop
pop
fcomi
enter
xchg
mov
cmp
mov
outsb
std
sub
nop
loope
mov
dec
push
imul
add
mov
push
lea
xchg
dec
decl
mov
rcll
mov
loopne
shlb
cltd
inc
jmp
outsl
lahf
add
dec
adc
add
test
add
xchg
mov
pop
in
es
loop
push
xchg
nop
ds
or
jne
adc
xor
cmp
in
and
sarl
jg
jl
es
jo
inc
mov
out
mov
jbe
or
xor
es
test
neg
in
mov
sbb
sub
mov
cld
mov
push
test
or
ljmp
test
cld
test
mov
mov
fnstcw
sub
out
in
adc
xchg
jbe
dec
insl
sbb
mov
or
imul
mov
fsubs
or
xchg
jp
outsl
mov
mov
out
xchg
addr16
mov
cmp
les
mov
inc
mov
jp
dec
xchg
call
xor
sbb
call
or
test
push
mov
pushl
add
pusha
movsl
xchg
or
cmp
pop
andl
test
subl
pop
lahf
imul
insb
mov
fs
js
or
push
lret
mov
xor
mov
je
push
pusha
mov
add
pusha
subl
int
in
push
sub
dec
xor
jge
mov
arpl
insb
cwtl
dec
fistpll
add
xchg
fwait
ficomps
cwtl
xchg
pop
pop
inc
push
xor
fistps
push
les
xor
call
call
mov
sub
lahf
mov
and
ja
jg
aam
pop
adc
es
ret
fnstenv
add
mov
out
test
mov
mov
adc
shr
sub
adc
mov
in
cmp
cld
roll
jg
jge
loop
cltd
mov
cmp
sub
pop
inc
push
mov
mov
jae
jmp
push
shlb
imull
jmp
adc
adc
fimull
adc
mov
ljmp
jecxz
cmc
in
xor
add
sbb
pop
insl
pop
in
push
jg
sarl
add
adc
mov
add
mov
pop
outsl
aam
fnsave
or
push
mov
dec
cld
add
adc
in
jne
mov
pop
jecxz
jnp
push
sbb
imul
sbb
push
and
repz
or
fistpl
sbb
xor
add
ds
js
pop
jo
cmp
cmpb
idiv
rorb
sub
cmp
cwtl
sbb
push
add
loop
xor
sub
push
jno
mov
sub
sub
iret
pop
neg
adc
sbb
mov
lock
add
add
jle
hlt
mov
sub
ljmp
sub
ret
cld
jne
cmp
and
pop
in
pop
xlat
mov
fildll
in
sbb
xor
lods
jge
cmp
sti
adc
sub
pop
push
xor
loopne
or
movsb
push
add
push
lods
lock
adc
lods
pop
sub
push
mov
adc
adc
inc
adc
mov
xchg
or
inc
jbe
push
rorb
out
loopne
mov
mov
and
int
fnstsw
or
push
mov
dec
and
xchg
cld
fildl
xlat
jns
and
es
sahf
adc
addl
movsb
cmp
adc
les
in
sub
fbstp
and
mov
add
fsubr
and
sub
dec
fsubrs
icebp
rorb
faddp
fidivl
pop
loope
scas
enter
je
add
out
out
sti
repz
and
cmpsb
lds
pop
pop
loope
xor
les
xchg
loop
xor
insl
out
mov
jne
xor
cmp
ret
scas
rorb
xor
jmp
xchg
inc
sub
lea
pop
add
sub
mov
sub
adc
cmp
jge
adc
dec
lods
lret
int3
clc
cmp
add
cmpsb
mov
repz
inc
xchg
das
fcoms
fcoms
aas
leave
jmp
push
mov
ret
add
rorb
sbb
inc
je
rcll
ja
pop
mov
scas
out
xor
fbld
xor
ja
add
fildll
xchg
cmp
cwtl
xchg
pop
jnp
inc
push
movb
inc
sub
adc
loope
es
cs
cmp
push
fidivs
and
jbe
xchg
adc
push
call
inc
jl
jle
sub
jle,pn
jmp
and
pop
pushf
mov
cld
xor
adc
in
imul
ficomps
rorl
adc
mov
sbb
lret
das
inc
fldt
xor
lock
push
push
aas
mov
in
and
dec
iret
mov
je
fnstcw
sub
cli
push
xlat
icebp
arpl
sbbl
sbb
movsb
loope
dec
and
mov
add
xchg
cmp
iret
lock
push
inc
leave
ret
aad
inc
jl
mov
sub
jb
add
ret
out
sub
xor
cmpsb
adc
mov
xlat
inc
into
repz
cmovl
cwtl
hlt
add
add
mov
pop
in
mov
pop
mov
mov
fiaddl
add
pop
and
xchg
cmp
sbb
or
das
loop
add
pushf
or
mov
clc
cld
repnz
imul
stos
pop
pop
push
sub
jbe
xchg
fildl
pop
add
mov
and
out
ret
mov
adc
loope
aam
sti
jge
push
jmp
sahf
movsb
mov
lods
xchg
mov
mov
or
or
jne
ljmp
cmp
mov
and
mov
outsb
in
push
addr16
dec
jno
pushf
cmpsb
mov
jle
dec
fiaddl
addb
aam
mov
or
outsb
jno
push
and
je
sbb
mov
mov
mov
inc
and
scas
xor
push
push
outsl
jg
jno
xchg
push
push
stos
dec
loop
mov
outsb
std
sbbb
insb
outsb
push
mov
in
xchg
ja
push
int3
std
fucomi
sub
gs
clc
andb
cmp
mov
fistpl
lretw
mov
sbb
cmp
mov
decl
adc
inc
or
inc
test
xor
add
sub
pop
jb
movsl
mov
scas
lcall
mov
mov
cmp
mov
add
testb
mov
roll
outsl
outsl
jge
pop
icebp
pushf
add
xchg
sbb
sub
decl
insl
and
mov
or
sbb
ss
aam
dec
mov
repz
xor
xor
add
sub
cmp
sbbb
jg
dec
adc
scas
lods
call
jl
sbb
mov
in
sbb
dec
stc
test
das
icebp
push
jmp
jb
add
cmp
mov
insl
pop
insb
and
push
lahf
cmp
jns
test
call
cli
fwait
xchg
loopne
add
hlt
data16
in
pop
cmpsb
in
mov
nop
sub
or
fdiv
xchg
add
jge
les
adc
adc
scas
jb
push
or
daa
ljmp
mov
je
or
pop
pop
dec
sub
pop
fs
subl
lret
pop
hlt
sbb
add
sbb
mov
ljmp
iret
adc
rol
and
mov
cmp
cmp
mov
mov
aam
and
sahf
pop
out
add
arpl
inc
fmull
push
inc
add
cmpsb
iret
lds
and
rcll
jne
imul
push
scas
mov
dec
lcall
fcmovnu
xor
shrl
push
stc
and
lahf
xor
insl
out
ficomps
dec
loopne
jnp
enter
loopne
sub
mov
mov
add
dec
mov
xor
mov
inc
add
loope
andl
cwtl
mov
pop
sub
pusha
or
addr16
mul
xor
sbb
adc
test
add
sbb
xchg
adc
aaa
jae
lahf
ficomps
ss
adc
imul
cmp
xchg
hlt
jg
sarb
sbb
cs
xor
pop
sub
sahf
push
loopne
and
push
mov
and
and
sub
jns
fbstp
lock
sub
iret
add
and
and
out
sbb
popf
jne
sarb
jae
pop
add
or
push
out
sbb
and
cli
faddl
fmull
xor
fucomp
fisttpll
lock
aas
adc
inc
clc
push
or
adc
inc
dec
cli
push
add
jns
xor
dec
mov
cmp
mov
add
pushf
pop
addb
sbb
xor
adc
push
add
je
and
cmc
hlt
jbe
test
subl
mov
mov
mov
dec
mov
fisttpl
xchg
xor
cmp
xor
insb
ret
sbb
lds
cwtl
shlb
jo
cmp
test
inc
mov
cmp
sbb
in
pop
add
mov
aad
fadds
neg
pusha
clc
add
or
rorl
xchg
movsb
sub
lea
xor
add
stos
xlat
push
decb
mov
adc
inc
stos
adcl
ret
sbb
and
xchg
enter
mov
add
mov
pusha
mov
punpckhdq
ret
jg
add
cs
aas
mov
push
add
incl
add
add
ret
mov
dec
je
out
fsubr
ficoml
add
fistpl
add
jp
xchg
fildl
pop
push
mov
inc
mov
sahf
sbb
shlb
std
insl
sbb
jg
lods
mov
and
notb
push
dec
insl
xchg
fldt
je
add
pop
sbb
leave
sub
and
xchg
inc
ret
and
sti
fs
mov
imul
pop
push
xlat
inc
add
call
dec
push
and
pop
pop
in
std
data16
mov
add
and
jno
push
mov
pop
adc
add
jmp
pop
mov
push
xchg
add
fmulp
jl
pop
add
sarl
sbb
arpl
bound
adc
or
scas
dec
or
lahf
pop
outsl
sbb
aas
repnz
fists
mov
or
cmpsb
dec
lock
jae
clc
scas
sbb
xor
shrl
add
or
fnstcw
fcompl
enter
dec
mov
lds
loop
mov
fldl
add
int3
jge
hlt
out
sbb
pop
je
push
ficoms
or
xor
dec
insl
push
pop
sti
push
xor
or
xor
shrl
mov
adc
rolb
gs
rcll
jecxz
nop
pop
sarb
pop
mov
adc
fld
jge
and
push
mov
test
mov
adc
inc
jb
xor
push
adc
inc
adc
jb
mov
in
test
es
add
pop
pop
int3
push
lahf
push
jne
into
loope
call
xor
test
cmp
sti
shlb
sub
int
inc
stos
xlat
scas
mov
scas
jo
jg
pop
jae
xchg
ja
lock
daa
rcl
inc
loopne
xor
add
sbb
dec
push
mov
mov
sbb
out
pusha
cmc
fdivs
pop
stc
xchg
out
pop
xchg
test
insl
jmp
push
mov
shlb
mov
or
loop
adc
neg
fucomi
pop
fs
sub
jo
pop
imul
xor
and
dec
out
je
repz
ret
mov
adc
or
out
sarl
xchg
test
loopne
push
fistpl
and
fiaddl
mov
int
adc
insb
aaa
cmp
adc
push
and
test
mov
add
xor
fdiv
jne
into
popf
jge
rcrb
and
inc
and
cmpsl
add
mov
repnz
dec
or
mov
push
bound
into
cwtl
push
mov
ret
add
mov
js
addl
inc
and
xchg
jg
pop
xor
mov
pop
pusha
xor
xor
mov
xor
adc
jp
fsubs
add
jbe
hlt
dec
xor
shrl
jge
mov
or
enter
adcl
xlat
adcb
push
mov
fucomip
push
xor
data16
sarl
out
cwtl
lock
mov
push
xor
shlb
mov
ds
sbb
pop
cmpsb
or
xor
faddl
dec
push
call
rcr
inc
jo
inc
cli
movsl
adc
loope
hlt
add
add
in
jl
dec
imull
loope
fistpl
je
fldenv
push
sub
xchg
pop
push
jp
xchg
aad
pop
cmp
mov
repnz
or
jmp
sub
test
neg
mov
pop
xor
xchg
rcl
outsl
loopne
xor
ficompl
push
push
dec
mov
fsubrp
outsl
inc
mov
daa
push
test
adc
dec
or
adc
mov
push
je
adc
dec
cmp
push
mov
cmpl
fisttpl
lock
push
fildl
adc
fisubl
iret
or
sbb
outsl
lock
pop
imul
lds
xor
ljmp
ds
add
cwtl
or
sarl
out
pusha
xchg
mov
jg
inc
nop
adc
das
push
shll
xchg
push
mov
jmp
ficomps
or
mov
ss
mov
jl
das
inc
add
cmp
jae
cmc
idivb
in
ret
call
into
arpl
pop
dec
cs
lock
sub
xchg
mov
sarb
rorb
dec
ret
cltd
mov
push
jbe
sbb
jo
fdivrs
cld
jbe
dec
lock
or
adc
dec
nop
and
stc
mov
addl
lret
enter
pop
loopne
mov
lret
adc
std
arpl
dec
mov
sbb
sub
mov
pop
subl
dec
jnp
sbb
popf
sbb
outsl
lock
push
mov
daa
pop
pop
outsl
sar
ljmp
pop
sbb
rorl
or
xor
xchg
cli
xchg
js
add
sahf
fwait
or
int
test
cld
in
pop
dec
sub
lock
adc
adc
sub
mov
sbb
mov
rol
jo
push
dec
mov
pop
jp
js
jg
repz
jle
jecxz
sbb
xorb
jge
inc
add
mov
mov
cs
decl
push
xor
push
movb
gs
jns
enter
in
mov
push
add
inc
xchg
xor
dec
in
popw
sbb
incl
xor
mov
loope
fsubrp
popf
inc
aaa
out
fidivrl
push
cltd
cmp
imull
add
pushl
stos
jno
lock
mov
sub
lcall
pop
mov
hlt
inc
jno
dec
pop
cld
sahf
inc
notb
test
repz
pop
dec
pop
push
xchg
movsl
cli
call
mov
insl
cmp
inc
or
pop
clc
insl
mov
sub
sahf
mov
es
push
lret
mov
cmp
inc
addb
xchg
call
add
out
push
xor
bound
inc
adc
les
pop
fimuls
clc
popf
out
mov
mov
push
or
cmp
or
incl
rcll
cmp
testl
or
pop
loop
jns
add
pop
mov
ret
add
enter
ret
call
cs
adc
mov
sbb
outsl
fistpll
dec
inc
pushf
icebp
int3
pop
sub
subl
test
int3
sti
add
cmpsb
add
add
insb
scas
repnz
outsl
outsb
mov
addr16
mov
mov
add
xlat
inc
adc
and
call
inc
fisttps
jg
push
call
xor
rolb
leave
aaa
pusha
add
pop
fstp
or
adc
xor
scas
lds
adc
push
or
int3
push
or
sub
repnz
xchg
cmc
loop
add
inc
aas
pop
je
shlb
or
and
roll
push
jmp
inc
and
imul
out
lret
jnp
cltd
out
jle
fsub
or
repz
rcr
sub
not
or
in
js
fidivl
inc
pop
push
inc
test
lret
int
fadds
aas
cmpsl
inc
pop
int3
mov
imul
sbbl
lret
inc
adc
sbb
out
dec
add
es
cli
out
pop
push
addl
incl
push
cmc
pop
repz
dec
cli
arpl
xchg
incl
lods
fcmovu
fdivs
jl
dec
cmp
mov
jne
dec
mov
mov
lock
add
and
mov
rolb
pop
mov
inc
mov
sub
push
push
dec
mov
lcall
add
arpl
je
test
inc
pop
and
fwait
xchg
mov
mov
insl
aad
subl
and
jg
movb
test
out
xchg
push
call
mov
cmp
arpl
adc
ficompl
in
mov
jg
push
push
or
enter
push
jp
fsubl
fisubrl
ss
arpl
jbe
and
inc
fwait
nop
xor
sbbb
inc
inc
jle
and
mov
outsb
mov
adc
lds
insl
pop
xor
repnz
in
sub
aam
out
mov
or
scas
mov
or
jbe
jb
ds
aas
and
push
stos
bound
shll
leave
xor
ss
or
popa
push
outsb
jmp
sbb
inc
jo
shll
insl
jmp
fbstp
sti
jecxz
sbb
pop
test
cli
fcoms
adc
pop
test
hlt
gs
inc
push
cmp
inc
sbb
iret
or
call
fadds
outsb
clc
outsl
fcoml
mov
sbb
int3
stc
dec
cli
add
inc
ds
cmp
je
jb
fistpl
inc
add
and
xchg
adcb
xchg
cmp
add
inc
mov
leave
imul
int
stos
pop
mov
jl
jmp
push
and
mov
loopne
lret
in
inc
adc
test
dec
pushf
adc
int3
adc
aas
jle
adcl
imul
outsl
pop
or
nop
push
pop
call
sbb
or
mov
dec
sti
das
in
push
mov
push
xchg
mov
mov
inc
inc
cmp
or
lods
loopne
and
and
xchg
hlt
sub
decl
vorps
sub
test
cmp
push
pop
push
dec
movsl
push
fldcw
inc
rcl
mov
stos
cmpl
mov
movsl
push
inc
aaa
jne
icebp
int
gs
cld
fwait
jo
cmpsl
fimull
fdiv
outsl
gs
jle
jle
sar
insl
adc
pushf
mov
int3
movups
xor
fdivp
mov
jne
adcb
loopne
das
mov
int
dec
pop
xchg
pop
test
mov
xchg
mov
in
mov
xor
test
xchg
push
scas
pop
pusha
loope
adc
jmp
mov
outsl
cli
fistl
cmp
dec
cs
cmp
xorb
sar
cs
jne
cmp
fldenv
sub
dec
aaa
lods
jge
movsl
dec
das
cli
into
int3
scas
or
push
mov
stos
xor
scas
fcmovnu
xor
add
jbe
pop
call
mov
sbb
jle
jo
inc
adc
shl
aad
nop
ret
rcrl
cld
mov
mov
int3
ret
add
pop
mov
add
push
jmp
cltd
adc
cmp
inc
fmull
adc
lcall
outsl
xor
cmp
xchg
jp
jl
ljmp
xlat
fcomi
std
neg
xchg
fstl
mov
mov
incl
into
pushf
pusha
repz
out
push
sbb
aaa
loopne
lcall
inc
bound
xchg
aaa
mov
sbb
ds
jl
mov
jecxz
or
xor
pop
xor
push
pop
lcall
jg
mov
xor
fwait
inc
push
mov
test
push
sti
or
add
repz
mov
pop
inc
std
mov
inc
sbb
pop
sti
in
lods
testb
lea
adc
cld
or
mov
and
imul
sub
mov
aaa
outsb
add
lock
sarb
and
jmp
call
and
icebp
mov
pushf
sbb
add
jge
repnz
in
insl
sbb
lods
pop
mov
decl
pop
movl
fbld
out
popa
sub
jbe
inc
mov
and
ds
loopne
std
mov
ret
test
decl
mov
jmp
loope
sub
lahf
cmpsl
jbe
mov
stos
testb
xchg
dec
add
or
jmp
sar
jg
xchg
das
inc
nop
pushf
cmp
jne
jl
and
mov
loop
aaa
sbbb
jne
push
icebp
pop
sbb
and
mov
or
test
or
mov
aas
or
mov
lods
in
fbstp
mov
add
and
lcall
mov
push
outsb
test
in
add
ret
je
cmc
and
adc
lds
add
push
call
mov
xchg
pop
mov
loopne
ljmp
aam
mov
or
imul
inc
mov
cmp
jl
add
push
out
mov
and
push
ffreep
lahf
inc
cmpsb
lock
or
ja
sub
mov
loopne
jmp
add
push
jl
insl
mov
lcall
dec
inc
ljmp
in
in
xor
and
ljmp
cmpsb
enter
hlt
jae
push
bound
scas
cmp
jne
dec
mov
lcall
aaa
push
mov
mov
mov
inc
xchg
pop
ljmp
or
jno
lret
and
stos
inc
jg
popf
xor
mov
pop
sbb
arpl
pop
clc
push
cld
ret
stos
fmull
mov
mov
push
test
sub
dec
jg
or
int3
inc
xchg
jbe
pop
call
pop
lock
pop
mov
jmp
rcrl
pop
inc
sti
xor
pop
addr16
mov
clc
icebp
xor
movsl
jg
and
aam
pop
sub
mov
inc
rcrl
mov
xchg
pusha
stos
in
outsl
and
in
test
inc
adc
dec
call
mov
rcl
dec
xor
fs
in
aaa
fstl
mov
pop
mov
adc
std
aaa
shrl
aam
mov
cmp
mov
inc
test
cwtl
push
dec
xchg
push
popf
insl
xchg
sub
shl
cmc
aaa
fstpt
rorb
jg
lea
cld
mov
mov
jbe
mov
fs
mov
jnp
shr
and
imul
add
daa
sub
cs
call
fucomi
jo
sarb
cld
xor
aaa
fmull
cwtl
aaa
fldl2e
mov
idivb
mov
rolb
pop
iret
pushl
xor
adc
aam
inc
add
testb
xor
and
stc
xchg
adc
pop
sbb
dec
mov
test
dec
es
cli
xchg
les
pop
fwait
add
pop
adc
es
cmpsl
add
fstpl
push
pop
push
test
lods
jmp
adcb
adc
mov
xchg
mov
and
add
shrl
rcrb
sti
or
xchg
movsl
inc
mull
inc
push
sbb
int
mov
sub
push
sti
sbb
cli
xchg
and
mov
jge
stos
idiv
adc
je
jle
or
sub
test
roll
mov
lahf
aad
push
loopne
fsubp
mov
add
cli
jl
imul
insl
mov
and
sarl
sub
shrl
in
sub
push
or
sarb
pusha
popf
std
push
and
mov
add
mov
imul
movsb
mov
jl
mov
jle
lods
popa
cmp
jno
out
push
ret
jae
outsl
mov
cld
call
mov
outsb
loope
mov
inc
pop
and
outsb
mov
fs
mov
dec
lsl
cmp
jb
in
js
dec
add
or
jae
and
add
nop
add
addb
pop
mov
ljmp
mov
add
pop
fimull
xchg
sbb
sbb
lods
divb
inc
pop
jl
pushf
dec
xchg
or
mov
outsb
add
add
mov
das
xchg
push
and
jl
ljmp
popa
bound
inc
das
icebp
or
inc
inc
adcb
out
sbb
xchg
xor
mov
sub
inc
mov
ret
addr16
add
fwait
pop
sub
ret
bound
stos
pop
sbb
in
lret
inc
loope
add
jae
aam
scas
jle
scas
sar
leave
sbb
xchg
movsl
insl
loope
divl
inc
out
mov
imul
push
int
inc
push
xor
xlat
sub
sbb
mov
gs
xor
or
xor
int
pop
insb
or
js
cltd
or
rcll
mov
push
and
sub
movsl
mov
fwait
shl
outsl
adc
pop
ljmp
pop
pop
rolb
rolb
in
bound
inc
sbb
sbb
or
mov
into
ficomps
mov
and
add
sti
mov
jmp
scas
pop
popa
jne
leave
inc
jg
jle
add
shll
xor
stos
and
sbb
sbb
mov
mov
div
mov
pop
adc
test
dec
subb
cwtl
outsl
jno
inc
fidivrs
xor
adc
dec
dec
mov
sub
popa
push
jmp
pop
xchg
xchg
das
icebp
dec
cld
sti
lock
or
push
sub
mov
and
inc
loopne
dec
push
mov
jg
xor
push
mov
add
out
cmp
psubusb
fisubrl
adc
fdivrs
mov
ror
jge
mov
aaa
pop
lea
jl
xchg
in
stc
les
call
testl
mov
or
push
cmpsl
sub
icebp
pop
mov
jl
pop
test
sarl
push
and
lods
push
loope
aad
or
cmc
jno
fistl
ljmp
cld
lret
xchg
adc
pop
nop
incb
push
imul
mov
clc
lcall
scas
mov
xor
sub
bound
jmp
jbe
xchg
cmp
inc
aad
push
mov
push
aam
icebp
gs
insl
mov
dec
in
push
push
mov
mov
fisttpl
adc
sbb
or
push
cmp
lcall
std
lods
add
out
es
loopne
xchg
mov
clc
in
jns
fildll
std
jae
sub
popa
mov
push
xchg
test
lock
adc
dec
int3
dec
mov
sub
xchg
nop
mov
sub
gs
cmp
sti
cmpsb
dec
scas
mov
jle
decl
imul
lock
or
jg
arpl
int
cwtl
sub
lcall
add
adc
aaa
mov
mov
sbb
test
clc
in
sbb
sub
iret
scas
adc
push
cmp
cmpsb
movsl
aaa
mov
push
push
push
nop
test
jecxz
xchg
jle
pushl
sub
xchg
dec
shll
pop
sbb
js
mov
mov
ret
jle
pop
push
adc
mov
jns
enter
int
mov
or
shr
jp
fiadds
xor
jmp
sbb
in
aaa
pop
out
xor
adc
mulb
shll
fstp
mov
sbb
mov
jl
pop
push
nop
cmc
insb
mov
mov
lcall
lods
clc
fst
sub
fdivl
pop
and
popa
jl
sbb
pop
lahf
add
je
mov
ds
sub
lea
dec
lds
aaa
cs
pushl
cmc
shll
inc
mov
jmp
loope
lods
popa
sbb
dec
jecxz
pop
movsl
mov
shlb
jbe
sbb
adcl
mov
sbb
cmpsb
in
repnz
clc
test
jl
addr16
or
ret
arpl
arpl
shrb
mov
fisubs
data16
pop
pop
sbb
nop
sbb
js
inc
inc
inc
mov
inc
jle
fldl
fistpl
sbb
inc
js
je
sub
or
mov
in
test
add
xor
mov
dec
pop
popf
les
mov
popa
cwtl
xor
xor
mov
mov
and
aad
jno
and
and
daa
call
mov
mov
jp
btr
sub
sarl
cmp
mov
or
cmp
pop
xorb
mov
dec
lahf
jb
or
push
mov
outsl
jl
rolb
add
add
insb
cld
adc
rorb
subb
push
and
or
fstl
inc
sub
mov
push
lea
pop
pop
push
adc
cmp
mov
lock
xlat
adc
gs
adc
aas
xor
sbb
das
hlt
pop
mov
in
pop
mov
pop
jg
fs
sti
mov
das
cmpsb
test
mov
loope
decl
ljmp
in
xchg
ret
adc
inc
pop
and
mov
adc
adc
or
pop
cmpsl
in
and
push
sub
scas
jmp
or
pushl
mov
jb
jo
xchg
push
out
sub
jb
sub
mov
jo
cli
dec
cs
cmc
outsl
cmc
out
sbb
jp
xor
das
mov
es
cmp
mov
movsl
lods
mov
push
or
xor
addl
inc
sbb
fldl
adc
or
cmp
stc
add
xchg
decl
cmp
sar
and
adc
movsl
sub
xchg
add
int3
pop
test
mov
mov
fdivl
jmp
mov
mov
lahf
jnp
inc
inc
jg
ret
mov
pop
add
test
push
add
dec
test
ss
lcall
sti
pop
add
es
jmp
rorb
out
and
xchg
lea
inc
jmp
mov
or
mov
rcrb
ss
mov
inc
mov
dec
push
add
and
repnz
mov
fcoms
jb
das
cld
jns
jnp
es
jne
popf
sahf
xchg
sub
aam
out
mov
in
rorb
in
jecxz
idivb
push
and
dec
sub
stc
cmp
pushl
imul
in
sub
insw
imul
inc
dec
roll
sub
and
cmc
jmp
cmp
dec
jle
pop
leave
es
loopne
in
into
lcall
into
inc
mov
int3
cmpl
and
andl
mov
jecxz
fsubl
push
inc
sub
lcall
in
cmpsb
sbb
lds
xlat
mulb
push
call
pop
dec
lcall
negl
xchg
ret
rclb
fsubr
add
inc
in
daa
test
pop
das
mov
mov
inc
mov
iret
dec
fmull
fadds
imull
sbb
add
dec
out
pop
or
mov
scas
xchg
jnp
lods
les
fmull
pop
les
push
xchg
xor
enter
daa
pop
jb
je
adc
jb
cmc
and
insb
mov
das
lds
in
std
sbb
or
subb
mov
jno
or
mov
xchg
bound
xchg
mov
fistps
adc
or
cmp
cmp
mov
scas
mov
mov
imul
inc
cmp
sub
mov
lret
cmp
adc
js
insb
aaa
cmovo
dec
or
ret
push
into
sahf
aam
sbb
lods
or
or
adc
and
outsl
insl
outsl
or
mull
inc
daa
push
les
jo
pushf
jmp
es
icebp
adc
xor
push
xchg
push
in
push
stos
sub
shll
push
or
add
shr
cmp
xlat
mov
shr
movl
add
lods
or
add
lods
mov
icebp
mov
push
pop
divb
jle
dec
dec
fnstenv
test
fdivs
aam
loopne
mov
das
dec
xchg
and
push
pop
jo
imul
cltd
xchg
repz
pop
clc
xchg
pop
fisubrs
lret
iret
or
cmpsb
and
adc
xor
movsl
pushf
or
fildl
jg
pop
mov
out
adc
cmp
inc
cmc
push
cli
push
xchg
adc
std
pop
or
mov
mov
xchg
arpl
lcall
fcmovne
dec
lret
inc
jne
push
mov
adc
mov
dec
mov
xor
ja
push
jmp
popf
or
pop
push
and
fistl
xchg
rol
fidivl
insl
mov
repz
xor
fsubrs
sub
inc
ss
fisttps
decl
bound
add
fisttps
lret
sub
pusha
call
xor
jge
sbb
call
jle
and
mov
and
push
xchg
or
add
jp
stos
and
and
mov
imul
mov
and
push
xlat
iret
arpl
add
sti
fcoml
sub
mov
lods
test
inc
mov
das
pop
dec
pushf
or
adc
xchg
jno
mov
test
dec
or
push
pop
call
shrb
jns
sbb
xor
scas
mov
loopne
gs
mov
adc
add
imul
mov
loop
inc
pop
stos
jno
mov
insl
cld
add
pop
xchg
sub
scas
jmp
testb
lahf
push
or
and
sub
pop
sub
mov
pop
adcb
jnp
dec
mov
inc
rolb
cwtl
jle
rorl
dec
orl
and
push
incl
xor
and
dec
pop
xor
mov
sbb
jae
cmc
fucomip
add
dec
mov
mov
cs
ljmp
enter
push
mov
sbb
mov
movsl
mov
jle
push
pop
testb
or
lret
sub
jl
and
rcrb
sar
dec
aaa
mov
xor
adcl
rorl
ljmp
les
icebp
hlt
jmp
push
xlat
loop
dec
dec
push
push
dec
and
and
ret
std
xchg
mov
cmp
roll
clc
mov
std
lea
rol
adcb
mov
mov
movb
dec
notb
mov
loope
mov
push
loop
push
repnz
mov
or
pop
stc
rcl
loopne
sbb
mov
out
sub
je
pop
jg
outsl
jg
subb
mov
ss
sub
rcl
loopne
jnp
cmp
leave
pop
adc
stc
push
jo
sub
lods
aam
rol
outsl
std
lods
push
mov
add
ret
xchg
and
jge
lahf
add
ret
ffree
jne
mov
and
and
mov
test
mov
jg
ds
xchg
nop
or
dec
pop
sarl
js
stos
imul
and
fdivl
inc
adc
pop
movsl
rclb
ds
push
cwtl
aas
push
in
clc
pcmpeqb
add
cmp
leave
in
sbb
mov
xor
mov
or
cmpsl
aam
add
lea
add
sub
inc
lcall
shl
push
pushl
imul
scas
shrb
adc
dec
xchg
daa
out
mul
and
mov
add
movsb
and
ja
stc
ss
mov
imul
and
push
call
add
data16
lock
mov
mov
sbb
inc
dec
sub
push
xchg
pop
inc
sbb
outsb
insb
loopne
jae
insl
ljmp
adcb
arpl
outsb
hlt
cmp
push
pop
pop
mov
movsb
xchg
mov
frstor
push
xor
testb
lock
jmp
mov
cmp
mov
mov
jl
add
icebp
out
in
lahf
sbb
fistl
cmp
ror
aam
aaa
jle
pop
pop
mov
pushf
sub
call
test
ret
or
test
jecxz
jg
pop
dec
xchg
lea
imul
loop
lret
and
shlb
int3
dec
inc
orb
sub
push
out
pop
shrl
cmpb
mov
js
repz
das
cld
mov
inc
inc
pop
sub
icebp
push
adc
jne
push
cs
outsl
or
inc
mov
cmpb
loop
cmp
mov
aad
or
es
in
ret
cmp
sbb
inc
mov
enter
jle
clc
mov
add
xor
sub
adc
ret
push
arpl
or
mov
aam
xor
fnstenv
test
ss
imul
testb
xchg
iret
clc
xchg
sbb
or
ret
sti
pop
loopne
shlb
rclb
pop
pop
pop
ds
into
sbb
popa
std
lea
lret
imul
sti
pop
mov
sbb
cltd
ret
bound
mov
add
dec
cld
sbb
mov
lahf
push
cmp
les
mov
test
cli
test
subl
bound
mov
and
lahf
mov
clc
dec
rsqrtps
subb
fldt
call
dec
add
mov
fldt
pop
pop
mov
sbb
or
lods
pop
adcb
or
inc
sbb
cltd
xor
and
add
sbb
mov
cmp
sarl
pop
sub
test
dec
xorl
push
std
rolb
js
popl
inc
cmp
loopne
cmp
sbb
xor
into
imulb
int3
repz
int
bound
cli
add
fisttpl
imul
inc
lret
mov
sbb
popf
or
aam
cmp
inc
stos
add
add
or
sbb
or
add
mov
rcll
xadd
es
inc
ljmp
call
and
jmp
loop
sbb
jno
fnstenv
xor
cmp
or
add
push
inc
pop
call
sbb
das
cld
dec
not
pop
adc
mov
js
xorb
aaa
adc
xchg
push
fsubr
or
shlb
pop
jg
scas
cmpsb
xor
mov
add
mov
inc
dec
pop
push
fadds
or
sbb
xchg
pop
mov
mov
inc
pushf
cltd
in
xchg
xor
les
xchg
adcb
sub
cmp
adcb
cmp
and
out
pushf
shlb
ficoms
les
adc
mov
adc
fdivp
mov
jne
sub
and
fiaddl
xchg
add
or
push
xor
mov
sahf
sbb
aaa
xor
jecxz
inc
pusha
jg
shlb
dec
rolb
shrb
decb
sub
and
xchg
sbbb
push
sub
int3
cmp
xor
sub
out
pop
and
arpl
xor
fidivl
ret
ds
addb
inc
sub
mov
push
or
mov
cwtl
mov
mov
clc
out
lcall
jl
syscall
orl
hlt
or
sbb
push
push
pop
xor
dec
sarl
cmc
dec
clc
inc
insb
push
and
xchg
lret
add
out
xchg
ret
cmp
mov
es
adc
xchg
cmp
cmpsl
dec
sbb
loop
fiaddl
mov
cmp
and
mov
lret
mov
sbb
mov
mov
mov
mov
mov
mov
jmp
push
dec
mov
outsb
cmpsb
inc
mov
xor
push
ss
jnp
outsb
fcmovnb
sub
or
shrl
mov
xor
xor
cld
cmp
jo
test
mov
jne
fistpll
mov
call
sub
cmp
mov
std
or
lret
popf
xor
and
dec
inc
scas
pop
daa
or
in
adc
data16
and
cmp
adc
subb
inc
lahf
push
sub
aam
neg
sub
sub
add
cmp
cmc
leave
js
sub
popf
jo
rclb
mov
push
push
lea
sbb
push
out
mov
das
adc
adc
insl
pushf
cmp
pop
int3
jne
scas
dec
sub
pop
imul
jb
sbbb
sub
or
sbb
mov
lret
cmp
loop
sbb
sub
gs
cmp
cmp
stos
xor
fwait
arpl
popf
push
movsb
lret
sbb
mov
push
mov
repz
and
fsub
mov
mov
xor
into
cmp
pusha
or
pop
cmp
mov
or
inc
xlat
cmpl
rcll
pop
call
int
das
les
pop
inc
scas
jbe
add
jne
or
add
add
loopne
faddl
mov
mov
mov
cmpsb
mov
and
adc
mov
mov
ja
mov
fldt
sbb
dec
aam
imul
xchg
xor
fisttpll
aaa
pmaxsw
dec
hlt
adc
sub
add
fstl
inc
or
testl
pop
mov
push
dec
push
add
imul
negb
les
fnstsw
xchg
and
xchg
sub
and
test
popf
dec
fisttpl
push
push
bound
or
add
cs
lods
pop
nop
inc
cmp
jne
xchg
les
pop
add
inc
in
xor
fwait
push
or
dec
adc
xchg
test
push
sarb
or
imul
jo
std
mov
lds
repz
xchg
mov
rcl
sbb
fdivp
or
fcoms
filds
inc
dec
pop
sahf
pop
dec
mov
repz
pusha
imul
and
outsb
pop
jnp
loop
cmp
iret
mov
icebp
dec
mov
add
ret
xor
cmpsl
lret
insb
xorl
fsts
mov
jno
jp
mov
xchg
jp
les
dec
es
and
ret
sub
data16
add
icebp
icebp
cwtl
loope
pop
mov
or
pop
aam
aam
loop
push
dec
rclb
popa
jno
daa
sbb
or
aam
movsb
inc
jmp
pop
push
in
and
shrl
mov
fdiv
jecxz
rclb
in
loop
int3
les
pop
sti
or
bound
xor
pop
les
sbb
and
mov
movsl
fstl
iret
cld
not
pusha
push
inc
cli
rcrl
dec
add
cmp
pop
xor
scas
add
dec
dec
sub
or
dec
test
hlt
jae
shlb
adc
xchg
es
cmpps
xchg
pop
lock
lret
or
xor
dec
push
fmuls
mov
jge
mov
push
dec
outsb
sub
orl
push
rcl
addb
stc
xlat
xchg
les
mov
repnz
js
and
inc
or
ret
fwait
adc
andl
out
cmpl
xchg
popa
lcall
adc
and
ret
push
adc
sbb
int3
out
lds
pop
sub
or
pop
add
xor
mov
xlat
iret
ret
push
lret
icebp
loope
jge
jb
in
pop
int3
adc
pop
rolb
jg
push
add
js
and
mov
test
data16
dec
popf
push
leave
sub
push
sbb
adcl
adc
cmp
iret
mov
idivl
insl
sbb
iret
and
push
add
add
or
cmp
jnp
push
test
out
mov
push
or
dec
mov
sbb
sbb
stos
mov
shl
push
andl
loopne
mov
stos
sub
pop
test
sbb
fisubs
cmp
xchg
pop
push
lret
pop
mov
lock
push
dec
call
xor
sbbl
sbb
clc
xchg
daa
shll
das
inc
sbb
js
nop
lahf
push
xchg
jne
mov
addb
cmp
xor
or
fldt
dec
xor
out
inc
pop
push
push
dec
xchg
sbb
shrb
clc
popl
shll
lods
adc
rcrb
dec
mov
inc
cmp
insb
stos
pop
cmp
sub
or
mov
outsb
push
cmp
fwait
or
fbstp
cmp
cmove
pop
rcrl
ljmp
cld
dec
or
xlat
and
mov
arpl
inc
fwait
xor
sub
mov
enter
inc
mov
bound
push
into
dec
cmp
jl
mov
jns
cmc
or
or
mul
jne
sub
jne
dec
je
outsb
jmp
int3
ja
push
xor
cmp
loopne
pop
fdivl
fdivs
mov
and
xlat
push
ret
sub
fmuls
or
push
or
or
aam
sbb
and
jb
push
jmp
sub
mov
rcrl
jmp
xchg
aam
jb
adc
stos
rcll
mov
dec
stos
mov
inc
or
mov
ret
scas
fimull
dec
sub
pop
xor
out
aas
cld
fidivl
dec
aam
lret
sti
in
inc
sub
or
shr
pop
ret
xor
pop
enter
data16
jne
jbe
jne
xor
test
fdivs
mov
jae
push
dec
cmpsl
out
mov
sahf
test
cmpsb
ljmp
jge
ljmp
push
in
dec
xor
test
push
aam
into
dec
fnstsw
adc
sbb
inc
lea
cs
repnz
ds
push
xor
nop
leave
or
sub
mov
lret
xor
adc
sbb
pusha
push
aam
and
lods
pusha
mov
sub
in
outsb
push
sub
mov
cwtl
frstor
jge
fildll
cmpsl
roll
mov
mov
out
fadds
adc
add
push
sti
add
enter
data16
mov
jle
inc
adc
xchg
push
ficoms
cmp
repnz
fdivl
add
cltd
scas
ret
fs
add
mov
cltd
cmpsb
cld
imul
adc
and
or
xchg
fsub
rolb
pop
or
loopne
dec
jo
sub
sub
imul
mov
inc
push
pop
mov
loopne
xchg
or
lock
lret
js
or
lock
test
jno
js
clc
leave
arpl
pop
into
lock
mov
fs
xchg
cwtl
cmp
shlb
xor
fcoml
add
add
pop
clc
rolb
adc
sbb
push
hlt
add
int
int
pusha
or
add
aad
adc
adc
adc
xor
ljmp
fildll
rorl
js
dec
mov
add
mov
into
loop
mov
pusha
addr16
push
add
fwait
inc
add
aam
cwtl
inc
pop
mov
add
int3
inc
add
pop
jg
xchg
bound
aas
or
sub
or
mov
lods
mov
mov
adc
dec
push
sub
mov
rolb
adc
and
mov
call
or
push
xchg
arpl
out
mov
sbb
sbb
mov
xchg
fwait
lods
inc
rcrb
daa
mov
ficoml
xor
sub
das
sub
mov
or
mov
in
or
adc
jmp
cmp
cmpsl
xchg
test
dec
out
xor
or
dec
xchg
pop
daa
into
movsl
in
add
add
xlat
lea
dec
movsl
xor
inc
add
clc
lcall
mov
jne
mov
xchg
pop
push
or
mov
add
mov
xchg
or
pushf
imul
xlat
lods
sbb
lock
mov
enter
push
xchg
and
into
push
pop
aaa
imul
mov
and
mov
addr16
mov
xor
inc
inc
cwtl
test
cmp
cmc
push
rcrb
scas
and
popa
shlb
jmp
xchg
inc
addl
rol
leave
clc
fisubrl
inc
rorb
orb
repnz
je
aam
jb
adc
bound
xor
loopne
mov
add
mov
ret
pop
jbe
xchg
or
dec
lock
inc
pusha
xchg
out
inc
jb
cmpl
xor
and
hlt
or
int
xor
cmp
inc
and
jnp
pop
push
sarl
shrb
add
jle
loopne
dec
and
xor
inc
add
xchg
mov
lcall
aam
inc
loope
push
dec
outsl
data16
icebp
and
adc
test
aad
xor
jl
enter
popa
xchg
vpandn
in
test
sbb
out
cltd
dec
add
or
xchg
fistl
xor
inc
es
lret
cwtl
stos
notl
fbstp
or
inc
or
xlat
imul
in
fsubs
aaa
mov
inc
insl
pop
push
sbb
testl
push
aam
lcall
stos
stos
xchg
hlt
incl
mov
movsl
aam
or
ficomps
xchg
mov
push
cmpsl
insl
push
shl
adc
cs
pop
ja
imulb
jo
jmp
jle
int3
rorb
fcmovu
xor
and
sub
test
jae
popa
push
insb
dec
add
and
mov
pop
stos
lahf
adc
lret
cmp
fucomi
inc
pop
sar
into
sub
jb
cmc
xlat
insb
lds
out
xor
sub
js
mov
sbb
pop
inc
aas
cmp
test
loop
ja
out
add
mov
call
xlat
xchg
sbb
add
movsl
hlt
or
lea
add
in
pop
sub
mov
lea
or
loope
or
push
adc
adc
and
imul
out
xchg
mov
sub
test
jne
and
dec
cmp
lcall
cli
push
xchg
addr16
push
jnp
adc
dec
inc
pusha
jp
jp
push
ret
mov
jge
push
dec
clc
cwtl
mov
lcall
hlt
sbb
clc
jmp
and
mov
movsb
out
inc
adc
lea
mov
jo
push
mov
adc
sbb
jl
test
call
andb
dec
les
dec
inc
push
mov
jl
clc
dec
fsubp
sti
mov
cmp
push
ja
add
mov
push
pop
subb
dec
push
rcrl
inc
sar
popf
xchg
push
test
bound
mov
je
loop
fdivr
int
xor
xor
fistps
das
jp
jo
sub
lods
mov
movsl
inc
mov
add
clc
xor
pushl
in
pop
pop
cli
insl
jns
jecxz
xchg
push
ret
xor
js
cmc
sbbl
push
dec
leave
sti
fucomip
call
add
mov
add
add
lret
clc
push
aam
push
cmp
dec
adc
mov
and
push
mov
inc
push
and
je
or
shl
das
std
add
adc
in
pushl
pop
mov
pop
xor
pop
mov
and
jl
add
inc
inc
adc
dec
sub
cmp
in
push
push
std
aas
jbe
add
add
add
push
inc
mulb
nop
adc
jmp
ret
add
inc
loope
cli
repnz
add
or
xor
jnp
pop
adc
mov
hlt
jge
push
divl
add
std
filds
imul
mov
popf
adc
xor
loopne
test
push
cltd
dec
add
add
repz
pop
iret
xchg
test
push
dec
adc
rcl
stos
or
in
dec
xchg
xlat
call
and
mov
add
mov
loopne
pop
test
ljmp
ljmp
mov
add
mov
test
mov
dec
mov
js
outsl
mov
add
xor
cwtl
int3
notl
mov
fcmovnb
or
adc
pop
add
stos
mov
cmp
mov
incl
add
addb
scas
and
mov
inc
add
int
add
jl
or
lret
fnsave
insb
add
pop
dec
mov
pop
adc
clc
mov
add
in
jbe
fists
add
mov
je
mov
or
pop
cltd
pusha
add
aaa
and
mov
mov
add
push
and
push
add
out
cmc
mulb
jle
push
fisubs
cltd
je
xor
sbb
loop
out
addr16
rclb
sub
cmp
lret
lds
mov
les
pushf
cwtl
lock
sbb
pop
sub
jo
xor
out
loop
pushaw
mov
adc
int3
or
and
les
je
mov
sbb
test
shrl
scas
push
push
push
dec
jp
mov
adc
mov
test
cmp
lods
mov
mov
mov
fadds
roll
popf
cmp
into
push
pop
daa
fdivrl
popf
mov
dec
xor
push
adc
fstps
fldl
jae
fisubrs
adc
stc
cmp
pushf
cmc
fdiv
push
push
inc
mov
stc
xor
decl
sbb
adc
dec
dec
cmpsl
pop
cmpsb
out
fiaddl
pop
adc
ret
cmpsb
fcomps
cld
jecxz
movb
hlt
pop
daa
fidivs
icebp
pop
mov
mov
out
orl
shrl
aaa
mov
mov
inc
mov
dec
xor
aad
dec
mov
jp
push
icebp
mov
sub
cmp
cli
and
gs
out
dec
jno
or
cld
das
scas
movsl
notrack
sbb
cmp
je
mov
stos
repnz
subb
push
cwtl
pop
pop
stos
cmp
mov
push
xchg
addr16
out
nop
mov
or
or
popf
cmp
daa
stc
push
jae
ja
sbbb
filds
sti
mov
test
loop
pop
fists
add
lock
mov
rcll
loop
rcr
or
adc
mov
mov
int3
js
xor
cmp
cs
xor
ss
sbb
icebp
icebp
mov
add
loope
sub
in
add
mov
jmp
sbb
cmp
pop
jmp
lret
lds
mov
imul
pop
subb
push
sbb
jno
or
add
xchg
cmp
fsts
loopne
jbe
jp
int3
pop
sub
xchg
dec
cmc
clc
or
mov
sbb
pop
push
fimull
push
inc
les
call
xchg
mov
es
mov
xor
cwtl
dec
and
sub
lods
fsubr
js
and
adc
mov
sub
push
jne
xor
inc
jmp
add
fidivl
leave
ret
test
int3
insb
add
add
sbb
pop
cld
jg
inc
sbb
pusha
add
gs
mov
faddp
or
lock
call
fistpll
insb
inc
mov
mov
pusha
ret
test
rol
fildll
ret
loop
pop
int
call
inc
sbb
or
pop
cmp
incl
rol
pop
xchg
add
sub
fcoms
xchg
push
xchg
out
add
and
xchg
cmp
xchg
adc
push
inc
lock
adc
inc
mov
lods
mov
addl
push
pop
pop
pop
push
add
sub
jno
stc
mov
testl
mov
sbb
std
fsubrs
decb
add
adc
add
mov
add
pop
pop
push
nop
mov
gs
mov
mov
filds
push
cs
jnp
mov
fiaddl
idiv
sbb
push
fiadds
mov
es
cmpb
and
fsubr
fwait
xlat
pop
enter
xlat
add
xlat
iret
outsb
sub
push
dec
xor
test
fisubrs
lods
cmc
mov
insl
cmp
add
decl
aaa
add
push
iret
inc
sbb
pop
add
ja
sbb
outsl
lock
inc
sub
sub
test
xchg
ljmp
testl
mov
cmp
js
push
mov
add
fs
das
aad
test
mov
in
mov
xor
or
sti
dec
loop
pop
sahf
in
push
loope
adc
adc
xchg
cmc
xlat
icebp
fucomi
or
stos
adc
aam
popf
xchg
loop,pn
ljmp
dec
dec
mov
dec
and
sbb
add
push
or
aad
call
pop
sub
jecxz
push
mov
lret
out
loopne
call
or
or
mov
xchg
push
insb
xchg
mov
rcl
pop
sub
jne
jb
or
filds
push
jae
iret
lods
add
push
roll
popa
rol
cmp
clc
mov
or
loopne
add
sub
sarl
fwait
dec
pop
add
out
push
sub
ficompl
pop
cmc
pop
mov
pop
add
push
pop
les
push
pop
idiv
inc
loope
mov
and
mov
insl
fcmovnbe
and
shl
adc
inc
test
subb
inc
mov
cld
in
fistpll
and
je
cmp
dec
mov
das
xor
or
xchg
pusha
push
inc
fiaddl
sahf
mov
jae
add
cld
or
mov
fstpt
repnz
orl
jbe
lods
mov
je
sbb
sub
sbb
hlt
xchg
inc
arpl
aam
out
lods
idiv
cmp
popa
ljmp
or
adc
jnp
stos
adc
cwtl
xchg
leave
into
mov
push
fstpl
add
movsb
jbe
mov
xorl
mov
rcll
or
nop
add
in
fs
pop
sub
cli
mov
xchg
test
mov
inc
ss
sub
inc
in
pusha
sti
jne
and
xor
in
cmp
sub
ficomps
adc
lock
mov
dec
bound
jle
in
js
mov
adcl
and
scas
stc
scas
add
andl
push
xchg
add
ror
in
test
in
and
adcl
test
lods
pop
and
push
add
lea
push
popa
push
icebp
xchg
mov
aas
movsl
mov
sub
movsl
enter
jl
js
rorb
in
ljmp
mov
stc
mov
sbb
xchg
jnp
test
lods
test
mov
push
add
adc
mov
imul
mov
mov
arpl
jo
enter
mov
push
mov
or
je
sarb
test
jnp
mov
and
jo
mov
adc
clc
repz
scas
fsub
mov
sbb
adc
inc
pop
pop
jmp
dec
push
mov
dec
mov
aad
mov
std
lcall
sub
test
dec
outsb
cmp
jae
idiv
mov
fwait
push
push
xor
cmpsb
xchg
or
fisttpl
mov
push
xchg
outsl
jl
mov
jae
add
xchg
outsb
test
cmc
popf
push
loop
call
push
xchg
test
addr16
mov
adc
js
ljmp
jno
rcll
add
and
pop
push
fistpll
xor
movsl
repz
outsl
jne
outsb
std
cmp
fcoml
inc
push
pop
mov
sti
fwait
or
pushf
pop
movsl
divb
push
push
aam
adc
and
ljmp
mov
sbb
and
jg
inc
je
jns
mov
movsb
jg
jg
popf
ds
push
loop
jge
addps
dec
xchg
sar
mov
lods
movsl
movsl
mov
les
adc
mov
test
ret
hlt
push
add
popf
mov
cltd
adc
aaa
std
pushl
mov
cmpsl
push
lret
sub
in
dec
push
mov
pushl
mov
inc
add
and
out
pushf
dec
fcmovne
add
pop
pop
mov
out
dec
inc
les
add
fucom
loope
sbb
je
insl
loopne
mov
out
push
sub
xor
mov
xchg
push
push
mov
aaa
dec
sub
jp
mov
inc
int3
jbe
cli
dec
cmp
adc
negb
pop
fwait
add
ds
clc
ja
out
or
add
pop
xor
jo
xor
cmpsb
out
imul
inc
sub
pop
push
fisubrs
lcall
xchg
fistl
shlb
add
bound
xchg
sbbb
add
leave
dec
sarl
mov
jne
or
aaa
pop
xchg
and
call
sub
xor
or
cmp
mov
mov
push
push
scas
jb
add
dec
aaa
push
add
pop
pop
jb
push
mov
and
fildll
rclb
arpl
sbb
insb
push
mov
push
pop
std
cmp
adc
pop
hlt
test
arpl
lods
inc
mov
xlat
shlb
xor
fisttps
sar
ja
and
and
scas
push
mov
jl
push
arpl
xchg
xchg
adc
push
mov
je
mov
call
aaa
out
sub
add
mov
jbe
xlat
mov
test
dec
icebp
and
jo
es
cmp
insl
inc
adc
push
dec
shlb
mov
loope
idiv
orl
pop
loopne
test
sbb
rcrb
mov
xchg
cmc
cmp
dec
std
sbb
outsl
xchg
mov
cs
sub
aam
idivb
out
sbb
cmp
and
and
clc
movsl
push
mov
adc
imul
popa
sbbb
inc
lcall
or
mov
insb
inc
xchg
jns
cld
sub
pop
mov
cmp
mov
fiaddl
sbb
repnz
repnz
cwtl
imul
in
mov
std
pop
jge
or
mov
xor
mov
mov
imul
pop
call
adcb
pop
fadd
mov
fldt
hlt
ss
pop
sub
fistps
xchg
xchg
push
sub
cmpsl
test
dec
push
cld
dec
sub
and
pop
mov
pop
mov
jns
jae
sub
pop
or
aaa
push
in
add
dec
dec
jno
sbb
mov
sbb
mov
mov
data16
mov
push
das
dec
jns
mov
or
popf
imul
and
test
push
stc
daa
inc
and
jg
adc
jle
push
icebp
xlat
mov
mov
orb
pop
xchg
mov
push
rclb
fdivl
loope
adc
jmp
rorl
hlt
and
int3
cld
insb
cmp
push
or
jg
fwait
inc
jp
or
adc
mov
mov
mov
lret
jge
sbb
inc
fldenv
add
popf
cmpsl
clc
or
pop
pop
xor
enter
mov
adc
pop
jno
inc
leave
fucomip
add
mov
pop
in
inc
add
add
push
insb
push
rcll
and
or
pushl
mov
inc
not
dec
mov
clc
movsl
pop
loopne
loop
enter
fistl
pusha
mov
push
shrb
pop
inc
pop
cltd
daa
or
notb
mov
mov
sbb
pop
pop
mov
xor
jbe
dec
in
imul
add
lock
movsb
pop
add
pop
jp
ret
aad
sub
jnp
sbb
insl
sub
sbb
adc
loop
pop
add
mov
fisubl
ljmp
add
mov
divb
push
inc
mov
loopne
fldt
mov
inc
inc
loop
das
push
mov
outsl
outsl
js
cmpb
movsb
dec
mov
mov
mov
mov
les
incb
mov
ficompl
add
or
test
sub
lcall
mov
js
mov
or
cmpsb
dec
popf
mov
dec
nop
sti
movsl
inc
shrb
lret
jns
push
push
cmp
or
push
pusha
inc
call
xor
notb
outsl
sbb
xchg
cmp
ss
test
pop
js
pop
arpl
xlat
mov
mov
ret
xor
xor
sub
pop
scas
rcrl
and
es
mov
mov
push
icebp
adc
inc
outsl
sub
call
cmpsl
jo
outsb
fdivrs
aad
xchg
dec
movsl
call
or
and
inc
in
ret
and
push
loopne
mov
sub
pusha
push
imul
adc
mov
imul
clc
push
mov
mov
xchg
mov
out
ja
mov
outsb
adc
nop
outsb
call
add
push
or
roll
adc
or
xchg
pop
sbb
push
out
in
ljmp
inc
add
bound
mov
fxtract
mov
push
fldcw
popa
add
mov
aam
roll
inc
cmp
dec
in
adc
xor
cwtl
add
push
sub
jbe
push
call
dec
ljmp
lock
mov
lock
mov
sbb
mov
imul
sub
jg
sbb
push
mov
aad
push
iret
pushf
jno,pn
mov
add
pop
mov
adc
mov
cmpxchg
jno
ljmp
pusha
add
outsl
xlat
fsub
add
cmp
xor
fsts
or
pop
adc
aam
jge
stos
out
push
push
pop
add
and
es
adc
es
sbb
es
loopne,pt
xor
or
add
mov
mov
sbbl
in
rcr
les
push
stos
mov
ret
mov
push
inc
and
xor
inc
fwait
mov
imul
in
or
bound
fsts
xchg
loopne
enter
adc
or
das
add
pop
jg
fdiv
add
push
push
push
icebp
sbb
pop
orb
mov
into
or
and
mov
lcall
mov
add
int3
fcompl
shr
jg
xor
adc
xor
jge
mov
adc
push
decl
adc
add
dec
push
mov
add
icebp
aaa
ja
ja
adc
mov
push
popf
call
or
inc
clc
push
ljmp
out
lret
das
icebp
add
and
jbe
inc
into
clc
and
cmp
sbbb
push
ja
sbb
mov
push
add
mov
add
mov
outsb
add
mov
rcrl
sbb
lock
lret
ret
dec
or
inc
jmp
fstpl
mov
lock
roll
cwtl
shll
jmp
jl
xor
js
pop
push
testl
xor
stos
bound
cld
lea
sub
mov
fnstcw
jmp
push
mov
pop
fwait
mov
sub
movsl
cwtl
mov
outsb
int3
jge
mov
jns
or
testl
jl
mov
push
cmp
xor
adc
inc
sub
in
jmp
js
negb
nop
and
icebp
add
jge
sti
sbb
cmp
add
pop
aaa
fsubrs
icebp
or
sarl
rorl
pushf
not
aaa
sbb
enter
xor
push
sbb
out
cmp
mov
pop
test
adc
inc
mov
shll
jl
push
mov
or
movsb
adc
or
dec
daa
stos
pop
or
cmp
subl
cmc
pop
daa
out
adc
push
fdivs
cmp
xor
cli
shl
jae
in
xlat
cmpsb
cmp
and
out
jmp
dec
sub
fdivrs
outsl
mov
mov
or
push
jmp
ret
in
mov
sti
mov
push
aaa
and
cmpsl
xchg
xor
nop
ret
and
push
dec
and
sub
xchg
dec
mov
pop
dec
dec
adc
sub
sarl
xchg
pop
rcrb
dec
adc
sbb
outsl
mov
push
push
call
dec
test
inc
inc
rcl
loope
jge
rorb
pop
push
dec
dec
testb
or
aaa
adc
loope
sub
stos
decb
jne
adc
fdiv
sub
jg
scas
xchg
adc
mov
in
pop
lcall
push
aaa
out
test
mov
sbb
pop
mov
sub
clc
jg
pop
pushf
mov
insl
inc
imul
mov
les
cmp
xchg
filds
xchg
push
inc
scas
mov
add
das
adc
jl
dec
push
sub
dec
pop
sti
xchg
cli
push
fbstp
push
outsb
bnd
pop
mov
in
outsl
cld
and
mov
repz
cltd
push
insb
and
adc
mov
cmp
test
push
adc
mov
inc
xor
and
xchg
or
outsl
movsb
mov
data16
push
mov
sub
sub
insl
mov
loope
mov
ret
sub
xchg
adc
rorl
pop
fsts
dec
rclb
popa
lea
pop
imul
aaa
subb
pop
adcb
fistps
fisubl
push
cmp
pop
jp
sub
int3
push
jge
and
incb
adc
gs
jbe
pop
or
imul
test
mov
jl
jmp
subl
arpl
mov
lods
outsl
fnstsw
movsb
jo
adc
fimuls
mov
xlat
outsb
pop
fistl
push
mov
inc
or
into
sub
jl
sub
lds
out
sbb
push
push
dec
jne
pop
nop
cmp
mov
sbb
dec
sbb
incb
xor
dec
shl
xchg
icebp
cmp
jle
or
outsl
xchg
mov
fsubs
in
adc
es
pop
dec
inc
addr16
pop
outsl
dec
and
fdivs
adc
adc
aaa
fiaddl
dec
dec
adc
cmp
roll
pop
pop
xor
inc
outsb
int3
sub
nop
fisubrs
hlt
out
cmc
xchg
xor
xor
sub
fistl
repz
stc
aas
push
cli
movsl
mov
mov
stos
cmp
push
and
andl
lds
jne
add
outsb
mov
pusha
add
or
xor
iret
xor
cmp
outsl
sbb
scas
hlt
test
lret
mov
sbb
test
inc
xchg
lea
cmp
dec
mov
outsl
push
shl
movsb
in
icebp
pop
xor
out
mov
cwtl
dec
sbb
inc
es
inc
add
arpl
inc
add
mov
pusha
pop
xor
jno
mov
loope
dec
pop
adc
call
sbbl
sbb
mov
mov
or
call
push
popa
out
in
mov
pop
push
xor
or
idivl
xor
mov
sub
stos
or
sub
xchg
pop
dec
roll
testb
cmp
inc
hlt
in
sbb
es
test
sub
or
pop
sbb
or
mov
jmp
jp
into
add
and
js
in
ljmp
and
aam
fsub
mov
sarb
sub
sub
insl
sbb
in
cwtl
and
test
es
mov
jecxz
or
sub
mov
and
or
pop
mov
testb
xor
rorb
pop
ficomps
test
fsts
insb
push
movsl
dec
cmp
sbb
mov
out
jl
mov
dec
das
bound
fwait
ja
loop
dec
dec
and
aas
mov
push
nop
pop
mov
dec
cwtl
sbb
scas
mov
mov
jle
out
or
push
dec
and
and
jbe
dec
jg
push
pusha
movsb
mov
mov
cmp
dec
inc
ljmp
inc
inc
pusha
mov
fsubs
cmp
les
adc
nop
sti
add
cmp
push
or
icebp
in
mov
push
inc
cmpl
xchg
movsb
pushf
adcb
xchg
push
stos
fnstenv
lods
or
jb
mov
ficomps
cmp
sub
jg
outsb
das
mov
lods
mov
ljmp
cmp
adc
lock
xchg
lahf
add
jmp
das
lret
outsl
and
xchg
daa
xchg
dec
push
add
ret
movsl
pushf
and
in
fs
mov
in
push
adc
ret
int
mov
mov
mov
add
pop
or
in
pop
pusha
add
pop
int3
incb
inc
xchg
mov
xor
jmp
movsl
sub
aaa
cmp
aad
ret
mov
mov
jbe
mov
popa
pop
or
mov
jb
add
mov
loopne
add
jecxz
jno
lea
call
aad
pop
cmpsl
cmp
dec
imul
mov
movsl
xlat
pop
push
ds
add
stc
add
jno
adc
repnz
mov
mov
inc
sbb
out
pop
fsubrs
mov
mov
sbb
mov
lcall
cmp
ja
jl
add
xchg
add
out
mov
add
or
pop
jo
mov
jb
iret
in
sti
push
stos
bound
clc
mov
addl
imulb
and
or
add
icebp
out
add
adcl
xor
jge
mov
aad
sbb
inc
mov
add
and
pop
ja
ds
test
jge
iret
mov
aad
loop,pn
fwait
jno
push
inc
push
test
jae
cmp
pop
cltd
inc
add
push
dec
adc
inc
repnz
add
fcmovnu
adc
adc
xor
lret
test
inc
jg
push
mov
pop
pop
pop
push
sbb
dec
jge
popf
mov
sti
or
xor
imul
aam
outsb
pop
mov
cmp
push
rorb
rcll
mov
iret
sbb
push
and
cmp
push
push
adc
add
addb
int3
cmp
imul
xchg
add
test
imul
add
and
or
je
scas
ret
mov
or
add
add
inc
or
nop
xor
repnz
ljmp
ret
loopne
pop
ljmp
bound
sbb
mov
inc
adcl
jb
mov
push
scas
jmp
div
sbb
stos
and
andb
lds
lcall
add
push
or
sbb
es
or
and
xchg
mov
adc
push
out
pusha
inc
jge
dec
add
test
nopl
mov
aaa
add
scas
add
sub
mov
pop
xor
and
jns
shlb
add
rcl
add
mov
dec
mov
lea
sub
out
imul
into
xchg
mov
xchg
push
adc
xor
add
push
aas
mov
test
pop
fisttps
mov
push
xchg
enter
xorl
push
xlat
call
and
sahf
xorl
fwait
mov
in
add
xor
add
add
shr
and
xchg
es
mov
fwait
sub
scas
xchg
pop
inc
push
outsb
pop
test
xchg
cmp
or
mov
and
lock
cld
sbb
push
jg
xchg
loop
sub
mov
pushf
push
test
shll
aaa
push
jg
aaa
sahf
pushl
cltd
sbb
add
sarl
test
pop
fwait
cli
test
xchg
sbb
add
insb
cwtl
pop
or
add
pop
cld
sti
or
push
push
pop
sub
mov
fnstcw
mov
jo
pop
inc
push
inc
pusha
inc
xchg
and
dec
cs
pop
xchg
test
or
pop
push
or
dec
call
imul
and
add
xor
cmc
jg
icebp
pop
js
cwtl
lock
dec
add
in
and
ds
push
cltd
add
addb
lods
mov
dec
xchg
out
sarb
add
add
adc
push
and
addb
pop
das
pusha
popa
push
dec
out
cld
popf
mov
ret
cmp
inc
rolb
outsb
fucomp
xchg
rol
pcmpgtd
cmp
clc
not
das
loopne
adc
sar
pop
clc
incl
add
cwtl
push
stc
imul
js
cmp
aam
daa
shlb
loopne
adc
aam
insl
lock
repnz
dec
mov
push
out
mov
fildll
ror
shlb
pop
or
lea
inc
add
je
or
or
mov
or
shll
mov
ret
dec
add
adc
mov
out
mov
xchg
test
jecxz
pop
jnp
push
sub
jne,pn
in
fwait
mov
jmp
dec
aaa
shl
and
sub
daa
push
xchg
pop
cld
lods
jo
addb
or
movsb
lds
xchg
ficomps
rolb
add
sbb
sbb
vmovsldup
jne
mov
jae
pop
mov
mov
test
dec
in
pop
cmp
jecxz
inc
push
inc
add
cltd
add
cmp
les
fsubr
repnz
cld
and
add
or
jle
rolb
pop
scas
pop
sti
sub
repz
and
and
jo
mov
jno
add
mov
adc
es
out
or
mov
mov
mov
scas
mov
fs
sbb
inc
in
fwait
sbb
xchg
pop
test
pop
inc
xchg
icebp
and
shll
lea
movsb
enter
shl
out
mov
push
pushf
fadd
cmpl
mov
shl
mov
mov
rcrb
or
push
pushf
mov
fidivrs
sub
in
push
pop
mov
jl
push
pop
cmp
push
dec
and
out
lcall
loopne
stos
sbb
in
and
xor
pop
loop
pop
test
adc
imulb
xor
enter
lea
fnstsw
inc
jp
cltd
or
mov
lcall
pop
push
shrb
sbbb
sub
shlb
test
fcompl
xlat
xchg
xlat
or
lods
add
lret
mov
mov
jl
xor
pop
add
clc
outsb
add
xor
push
push
jle
mov
add
or
sub
dec
inc
add
es
jmp
clc
or
and
inc
adc
sbb
subl
cltd
mov
ljmp
xchg
lret
sub
mov
and
mov
mov
push
in
mov
mov
ret
dec
jbe
loopne
fstpl
clc
inc
cld
andb
data16
dec
push
cmp
insb
push
mov
mov
inc
adc
cmp
out
push
push
add
enter
dec
fcoms
fwait
add
sbb
aas
lcall
xor
inc
mov
jnp
bound
dec
arpl
adc
into
fldlg2
jo
pop
adc
or
lret
addr16
out
xchg
imul
adc
dec
pushf
adc
pop
inc
aaa
iret
testb
push
xchg
add
jo
mov
cmp
mov
pop
inc
inc
mov
and
pop
mov
mov
jp
sub
loop
xchg
lea
mov
filds
push
imul
in
ljmp
stos
lret
mov
inc
mov
stac
jne
adc
push
cmp
add
push
mov
or
call
ficompl
or
std
and
xor
pop
pop
insb
ret
push
rol
push
add
ficoms
insl
add
movsb
clc
mov
std
add
push
or
sub
bound
adc
aaa
ficompl
pop
mov
adc
push
test
das
mov
in
imul
shrb
popf
push
aas
les
lea
push
sbb
add
in
pop
dec
xor
pop
jo
aam
adc
lret
cltd
jp
push
sbb
fwait
lods
testb
or
inc
xlat
cld
fucomp
decl
xor
jecxz
cmp
pop
jb
push
xchg
rcrl
add
rcr
int
lea
andb
or
fimuls
outsb
fcmovne
sub
and
aas
jg
outsl
pop
mov
rol
dec
sbb
rcll
stos
ja
xor
int
mov
push
js
loopne
fistpl
mov
cmp
cmp
jecxz
ljmp
push
in
jecxz
adc
lods
jbe
enter
fisttpl
flds
pop
sub
mov
xor
pop
cli
and
adc
jmp
dec
cs
fildll
push
lods
jnp
and
push
pop
sub
jnp
arpl
jecxz
loope
sar
adc
pop
outsb
cmp
jns
hlt
lahf
mov
xor
mov
lock
cmp
out
pop
mov
cmpsl
test
ds
sub
push
sbb
es
cmp
mov
popf
push
insb
mov
leave
stos
fisttpl
push
mov
jg,pt
loop
adcb
outsl
popf
jnp
push
mov
shlb
mov
std
xor
notb
lock
fildll
push
lods
pop
or
subb
add
lret
fistps
incl
mov
pop
mov
sbb
popf
data16
xchg
mov
aad
dec
hlt
rorb
cli
fildll
mov
push
xor
inc
out
adc
out
pop
sub
pusha
popa
pop
inc
xchg
testb
push
popf
ret
inc
mov
lods
incb
inc
push
lods
pop
sub
stos
dec
mov
ljmp
sbb
loop
xchg
add
xchg
fidivrl
call
or
jg
adc
mov
stos
push
and
les
ret
daa
jbe
fcom
adc
pop
or
cmp
repnz
jne
testb
bound
sub
push
lds
rcrl
dec
jmp
or
lea
mov
rcrb
mov
adc
cmp
sbb
pop
jp
out
push
mov
sub
loopne
jae
in
addr16
fdivs
xchg
mov
jbe
push
mov
ret
sub
jge
or
lds
add
lds
test
cmp
push
adc
jg
mov
mov
mov
and
sti
sarl
fwait
out
cmp
out
mov
push
jo
call
cwtl
or
push
negb
xchg
incb
cmp
xchg
ror
fwait
jg
mov
jmp
roll
rorl
cli
flds
adc
fildl
psraw
or
fwait
sbb
pop
push
mov
pushf
mov
rorb
mov
bound
mov
jmp
or
add
add
or
mov
test
adcl
cli
fbld
lahf
mov
mov
push
fidivrs
clc
popf
dec
movsb
push
inc
hlt
jne
gs
in
sub
clc
mov
dec
sub
in
jno
add
subb
fldcw
stos
jle
rcrl
pop
add
std
sbb
xor
into
fwait
cmp
add
xchg
mov
outsl
sarl
imul
faddl
jae
dec
and
mov
test
shrb
pop
out
xor
mov
lock
in
icebp
in
in
xor
push
mov
add
cld
mov
outsl
test
fnstsw
icebp
xor
out
imul
or
mul
adc
scas
pushf
stos
pop
and
mov
mov
popa
pcmpgtb
nop
mov
push
xor
sbb
mov
addr16
fildll
jl
dec
add
je
add
imul
adc
daa
cmp
pop
vmovlps
rcr
cmc
insl
fsubrs
push
xor
cmp
adc
arpl
adc
and
mov
xor
shrl
dec
stos
adc
mov
ljmp
ja
movsb
mov
adc
adcb
xchg
and
push
sbb
push
cld
sbb
jbe
jno
stos
mov
and
into
add
or
and
push
cmc
adc
adc
in
pop
outsl
sbb
stc
inc
movsb
pop
mov
xchg
ret
loope
jnp
push
sub
mulb
clc
xchg
sub
mov
push
stc
lret
xchg
outsb
mov
daa
test
icebp
jle
xchg
jp
xchg
push
jnp
sbb
sub
dec
adc
mov
loope
sub
add
push
insb
mov
icebp
mov
add
lret
mov
jne
add
add
cmp
adc
mov
fidivs
aam
add
aaa
lods
icebp
push
loop
outsl
mov
cs
xchg
je
xchg
mov
jnp
pop
adc
push
mov
ljmp
sub
addl
dec
xor
xchg
iret
out
jle
mov
cwtl
cmc
jae
pop
out
pop
mov
loop
cltd
inc
jl
aad
mov
out
fsub
lods
movsb
fldl
or
add
mov
sti
add
je
daa
nop
inc
test
adc
or
xchg
adc
fbstp
mov
push
leave
mov
inc
loopne
js
sti
xchg
js
mov
lcall
insb
shl
outsb
mov
pop
cli
jp
add
dec
fdivs
out
iret
adc
scas
or
dec
pop
add
clc
inc
addb
loop
cmp
and
and
lea
inc
add
and
cld
inc
nop
fnstenv
mov
daa
out
jp
sbbb
add
add
notb
adc
fildl
cmp
int3
movsb
pop
sbb
cs
in
xor
fdivrl
add
jmp
mov
add
sub
dec
sbb
mov
mov
sub
xchg
push
stos
fwait
jmp
pop
or
sub
mov
xchg
and
aad
jnp
shrl
xor
mov
pop
push
mov
xchg
out
loop
dec
push
adc
ds
xchg
jg
fisubs
and
sbb
sbb
sbb
daa
and
add
cmpb
pop
les
sub
push
xchg
add
iret
das
nopl
pop
sarb
push
ja
das
or
rolb
cmp
orl
test
std
xchg
movsb
sbb
loopne
out
inc
cmp
push
shll
out
or
dec
pop
ljmp
cmpsb
or
aam
xor
xlat
dec
stos
inc
and
pop
or
call
stos
les
aad
movsl
and
mov
movsl
insl
in
ja
scas
ja
shrl
jbe
cli
insl
jmp
adc
int3
fstcw
repnz
add
cwtl
add
adc
cmpl
adc
aam
aas
out
popf
or
inc
movsw
addr16
orw
aam
cmp
ret
mov
sub
fwait
pusha
push
fnsave
fs
add
and
les
cmp
dec
and
add
mov
js
bound
les
test
sbb
sub
hlt
and
xor
out
int
pop
mov
add
in
xor
push
xchg
popf
or
loop
stos
sub
or
lret
out
data16
out
call
sub
shl
stos
loopne
add
push
and
jbe
or
push
jne
or
fcoms
sbb
cmc
dec
mov
push
outsl
jb,pt
pop
scas
push
pop
cmc
jns
add
adc
mov
jae
insl
sbb
testl
outsb
rorb
push
cmp
push
cmp
mov
sub
push
add
push
loop
mov
or
adc
sub
scas
test
and
sub
lcall
pop
add
or
pop
mov
and
cwtl
xchg
add
out
push
subb
lea
and
ljmp
xlat
mov
xor
inc
aaa
and
cmp
mulb
inc
cwtl
loopne
mov
xor
xchg
cli
movsl
pop
enterw
in
lcall
loope
repz
adc
add
mov
push
dec
xor
push
jno
ljmp
cltd
rcrl
fiaddl
cmp
or
xchg
shlb
pop
mov
movsb
inc
hlt
ss
sub
incl
add
push
inc
sbb
insl
jne
loop
cli
mov
pop
jno
mov
push
xchg
adc
xchg
push
push
pop
fimuls
add
jecxz
mov
inc
insl
fbstp
add
mov
stc
pop
pop
xor
mov
cld
jg
pop
pop
or
dec
sbb
push
and
mov
js
movsl
dec
add
push
or
xor
push
and
sahf
add
ljmp
invd
psubusb
int
out
xchg
push
push
sub
pop
aaa
aam
mov
or
shll
faddl
sbb
ret
or
dec
adc
ret
icebp
or
pop
xchg
jnp
mov
movsl
cs
dec
sub
mov
movsb
and
jne
xor
jle
neg
xchg
out
cmc
or
xor
sbb
push
sbbb
ret
xchg
adc
lds
add
adc
addr16
js
decb
testb
imulb
clc
add
push
pop
rorl
adc
outsb
sarb
pushf
cmp
pop
sbb
outsl
adc
aas
aam
mov
fistps
mov
or
push
adc
or
jl
je
xorb
adc
dec
cmc
sbb
xor
add
sub
scas
sbb
sbb
test
les
push
jl
decl
xor
sub
push
cmp
cmp
mov
xor
idivl
cli
inc
jecxz
daa
xlat
jns
and
add
cmpsb
loop
insl
mov
insl
dec
aam
dec
cli
add
cmp
jp
fildll
sub
push
movsl
shl
cmpsb
jecxz
push
insb
add
cld
adc
mov
lods
mov
jg
sbb
mov
les
dec
ljmp
or
xchg
icebp
pop
inc
mulb
lahf
loope
clc
sub
xchg
inc
ds
test
js
xlat
stc
add
jno
inc
aaa
ss
mov
orb
mov
mov
mov
mov
fwait
mov
fsubrs
mov
test
push
testl
pop
mov
sub
mov
insb
add
jl
xchg
inc
test
outsb
inc
and
mov
fildl
test
ret
push
movsb
lds
insl
xchg
sarb
mov
mov
push
push
xchg
pop
into
out
inc
rcrl
fildl
dec
xor
cmp
add
movsl
lods
loop
jecxz
std
repz
mov
std
cmp
inc
call
add
mov
push
mov
les
pop
xor
add
sbb
inc
or
sub
es
lock
bound
outsl
xchg
fdiv
jg
call
mov
xchg
pop
xor
shl
push
cmpsb
cmp
lret
mov
fcoms
push
xor
jno
push
cli
pop
shrb
push
loope
jne
xor
cwtl
rorl
or
mov
outsl
in
pop
add
jl
fsubrl
jno
sub
mov
idiv
pushl
aaa
das
cmc
push
sub
adc
or
add
je,pn
rolb
mov
movsl
loopne
ds
gs
in
pop
in
mov
in
jmp
push
fstpt
and
nop
jle
cs
inc
sti
push
add
adc
pop
pop
icebp
jns
subl
adc
pop
and
push
sub
inc
jb
rcl
das
in
adc
jb
in
dec
das
fcmovu
mov
or
or
inc
xchg
inc
mov
push
je
leave
pop
sbbb
dec
call
in
roll
adc
outsb
sub
mov
and
cs
dec
adc
xor
repnz
scas
xchg
inc
sub
xchg
push
in
jle
lea
mov
dec
mov
push
mull
add
in
inc
mov
dec
mov
mov
insb
clc
add
insb
repz
push
mov
mov
and
mov
push
xchg
roll
and
mov
insb
mov
and
cltd
dec
jle
mov
insl
movsl
or
mov
enter
inc
mov
scas
out
inc
ds
inc
fnstsw
or
push
rorb
roll
xor
push
in
ret
mov
je
inc
sub
inc
and
mov
push
out
je
hlt
pop
fcomps
insl
faddl
fimull
jmp
mov
call
sbb
push
outsl
movsl
jbe
lcall
int
xchg
mov
cli
and
pop
fisubs
ret
jnp
jmp
rcr
mov
push
jbe
fsubrp
mov
ljmp
pop
mov
or
shlb
pop
pop
lret
jns
cwtl
adc
xor
jge
adcl
es
xchg
test
pop
rcll
in
or
in
shlb
rol
mov
enter
jge
testb
sti
shrl
xchg
ret
cltd
sar
shr
insl
imul
scas
roll
xchg
mov
adcl
or
pushf
or
cwtl
mov
imul
int3
sub
cmc
xchg
mov
incl
jecxz
sub
movsb
rol
mov
shrl
outsl
and
push
sub
jnp
ret
or
adc
dec
addb
xchg
pushf
lahf
subl
xchg
outsl
cvtps2pi
adc
jg
shrl
pop
loop
mov
lahf
clc
pop
and
mov
shlb
mov
push
not
xor
out
xchg
ds
outsl
mov
fiadds
enter
sub
xor
mov
nop
sbb
out
pushf
pop
leave
dec
sbb
dec
in
jo
fwait
sbb
sti
xor
ja
sbb
push
jle
adc
popf
in
push
loope
repz
xchg
movsb
pop
sbb
sub
call
and
cmpsb
xor
rolb
scas
lods
xchg
jg
mov
adc
lods
stos
lock
and
aaa
xchg
out
jle
outsl
inc
xchg
ljmp
pop
add
fimull
jecxz
mov
sbb
mov
and
push
inc
sti
or
je
js
shl
inc
mov
icebp
pop
jo
pop
insb
jge
cmp
pop
lret
pop
imul
sub
fwait
xorb
jo
pop
and
das
dec
roll
and
pushf
adc
inc
das
sub
adc
sbb
or
mov
add
loopne
dec
pop
inc
cmp
js
xchg
adc
jo
and
sbb
mov
test
adc
inc
pop
dec
movb
mov
lods
mov
cmp
aam
sbb
adc
jns
stc
inc
popa
orl
mov
cwtl
and
ss
popa
shlb
push
orb
inc
orl
filds
nop
js
ret
stc
push
lock
cmp
nop
outsl
add
movsl
mov
mov
inc
inc
mov
or
sbb
jb
bound
mov
icebp
jno
or
mov
inc
add
sbb
loopne
adc
fimull
push
dec
push
add
and
fbstp
push
test
sbb
js
inc
cld
mov
mov
or
add
and
in
lret
in
scas
mov
hlt
dec
inc
push
mov
fdivrs
push
inc
mov
fcomps
in
mov
mov
adc
sub
cmc
add
mov
or
add
sbbb
adc
or
sub
add
or
cmpl
inc
or
add
fcompl
sub
xchg
or
loop
aam
insl
mov
mov
rolb
jb
clc
add
outsl
dec
imull
cli
mov
xor
or
push
pop
lds
imul
leave
mov
movsb
fmul
mov
ficoms
negb
inc
flds
es
shlb
adc
pop
and
push
fistpll
adc
push
push
and
dec
pusha
dec
ret
scas
sarl
mov
in
inc
lea
sub
xor
fucomp
mov
ljmp
test
xchg
mov
adc
lds
pushf
xorb
or
or
pop
or
inc
std
adc
push
adc
or
sbb
add
push
lock
cpuid
loopne
add
and
loop
mov
outsb
cwtl
or
rcr
sub
cmp
xchg
pavgb
cmp
mov
cmp
mov
test
pop
adc
xchg
ljmp
repnz
addb
mul
bound
mov
cld
and
adc
mov
mov
cld
sub
fisttpll
inc
repnz
addl
jmp
in
sbb
sbb
sbb
adc
add
adc
or
int
sahf
jo
inc
pop
loopne
xor
pop
loopne
in
cmc
hlt
addr16
xchg
jl
dec
pop
xorb
loopne
sti
mov
stos
and
or
cmp
jne
fst
rolb
sbb
mov
and
sub
mov
scas
insb
push
fstpt
mov
xchg
fildl
jnp
andb
sub
mov
es
mov
loopne
incl
out
or
popa
mov
and
sbb
and
inc
xchg
jnp
push
inc
int3
pushf
lds
add
mov
div
orb
xchg
and
mov
sub
push
mov
add
mov
sbb
or
scas
das
not
add
std
pop
lods
nop
mov
scas
roll
add
mov
dec
xor
jnp
cld
shll
loope
dec
fcoms
fdivs
xor
loopne
adc
inc
push
orb
aas
xchg
mov
push
adc
push
mov
jecxz
mov
roll
sahf
nop
sub
add
push
pop
xor
pop
xor
cld
add
inc
sub
mov
cmp
xchg
pop
adc
pop
iret
cmp
push
notl
inc
sub
sbb
or
std
movsl
stos
aas
xchg
imul
xor
sbb
mov
xor
cmp
dec
popa
xchg
lret
fildl
jl
lods
ljmp
add
xlat
lea
jns
gs
mov
inc
inc
mov
mov
mov
in
imul
lods
ljmp
sub
insl
outsl
int
xor
pop
call
add
push
or
inc
lods
fsubr
or
lahf
xchg
nop
popf
sti
mov
inc
dec
icebp
fisttpll
sbb
stos
lret
xchg
lret
sub
loopne
cs
out
mov
in
arpl
stos
lds
xchg
mov
in
ja
mov
add
and
jae
push
sbb
clc
xor
popf
sbb
stos
das
push
test
bound
and
rcrb
xlat
arpl
cmp
lret
je
inc
jmp
add
leave
in
sbb
enter
dec
std
or
rclb
jbe
mov
sub
rorb
dec
rol
pop
mov
push
mov
xor
movsl
sbb
pop
into
or
outsl
aad
sbb
jmp
add
push
xlat
push
sub
mov
loopne
jne
dec
ljmp
icebp
mov
fcomi
stos
daa
and
ds
dec
adc
sar
lea
push
pop
cmp
or
std
cltd
jo
add
jne
pop
shll
popf
in
imull
test
jp
outsb
add
outsb
push
stos
jno
xor
and
pop
xchg
jge
loopne
sub
jmp
pop
push
inc
mov
decl
mov
pop
cmp
push
cmpsl
icebp
inc
insb
push
add
aas
flds
outsl
xor
jae
mov
sub
pop
mov
imul
imul
inc
imul
imul
jmp
adc
xor
insb
popa
mov
fwait
push
scas
icebp
in
push
xlat
rolb
ret
xchg
shll
cli
mov
xchg
xlat
aad
dec
mov
or
xor
push
mov
or
mov
mov
rcrb
jne
adc
ja
out
decb
or
repz
out
test
insb
add
or
rcll
pusha
mov
je
insl
xchg
dec
mov
decb
adc
mov
or
sbb
das
sbb
and
mov
push
jge
dec
or
js
loopne
xchg
push
clc
insl
mov
sub
mov
insb
or
pop
push
inc
rolb
std
fbstp
outsl
dec
sbb
inc
unpcklps
decl
cmp
fidivs
push
pop
sub
int3
push
or
in
pusha
jbe
pop
movsl
mov
or
ds
push
loope
je
push
sub
sti
ja
or
add
pop
pop
ljmp
xchg
mov
mov
fucomip
je
cld
and
daa
or
mov
test
pusha
sub
das
jne
pusha
ret
dec
jle
sbb
mov
outsl
cld
out
xor
popf
jbe
pop
les
lods
outsb
in
nop
call
dec
cwtl
mov
mov
jns
cmp
pop
jmp
xchg
mov
xchg
jp
add
std
out
mov
mov
scas
jge
inc
xchg
mov
into
sahf
adc
sahf
aas
sarl
cmp
cli
pop
lcall
adc
xchg
imul
mov
aam
add
mov
mov
jo
cmpsl
add
cli
cmp
xchg
ljmp
adc
iret
xor
outsb
inc
test
xor
mov
jg
dec
js
mov
ja
pushf
push
call
movd
and
inc
dec
inc
add
call
jne
das
add
adc
dec
or
sti
idivb
cmc
icebp
repnz
sti
je
dec
pop
sbb
push
pop
subb
icebp
pop
jecxz
in
movsl
outsb
sti
mov
pop
loope
jg
pcmpeqd
jmp
cmpsb
inc
cli
push
add
call
jo
movsl
and
in
mov
test
sub
xor
pop
dec
les
sbb
fnstcw
call
dec
inc
push
aad
sub
cmp
ret
fbstp
out
and
mov
push
ret
dec
mov
jb
xor
xchg
fldcw
sub
sub
add
push
scas
bound
imul
mov
call
outsb
lcall
inc
fisubrs
dec
bound
add
sarb
sbb
imul
aaa
lret
inc
pop
pushf
or
int3
mov
sub
jnp
push
jo
adc
lcall
add
mov
sbb
xchg
dec
cld
mov
inc
jl
sub
vcvtps2pd
inc
insb
cmp
call
jns
pop
outsb
mov
add
ljmp
arpl
mov
rol
sbb
bnd
sbb
jbe
pop
mov
fstl
std
add
pop
add
mov
or
cmp
add
adc
hlt
mov
ret
in
inc
nop
cwtl
leave
movsb
out
jbe
lret
in
or
js
jmp
iret
cmp
cs
lcall
jno
mov
add
mov
out
lock
mov
lcall
dec
sub
xor
addr16
mov
dec
je
mov
aaa
aam
jp
xchg
pop
test
stos
movsl
xor
aas
sub
xchg
pop
push
js
push
pop
xchg
leave
sbb
jne
xchg
mov
out
pop
pop
pushl
mov
adc
cmpsb
js
add
incl
sub
pop
test
pop
hlt
mov
pop
shl
das
cmp
pushw
xor
fabs
xchg
jp
imul
pop
sbbb
xchg
sub
mov
cli
cmp
xchg
inc
jnp
push
inc
or
call
gs
insb
rcrb
adc
or
dec
std
pop
cli
testb
out
or
or
lods
je
decl
mov
fidivl
sub
rcrl
add
sub
pop
pop
push
mov
and
inc
cltd
add
pop
cli
pop
sub
dec
cmp
in
inc
cmc
sub
test
test
fistpll
push
mov
aad
loopne
or
dec
or
je
cmp
imul
sbb
incl
lcall
out
test
and
stos
jno
hlt
stos
dec
sub
fmuls
nop
cld
testb
inc
sar
push
je
das
in
daa
mov
mov
adc
out
cli
mov
imul
je
imul
pop
lods
mov
ret
push
outsl
jg
scas
fildl
add
push
lods
jg
lea
push
jmp
mov
cli
jo
cmp
nop
dec
mov
dec
hlt
inc
test
idivb
out
stos
cwtl
data16
cmp
sbb
movsb
sub
mov
cmp
adc
sub
jl
push
in
je
stos
cmp
xor
das
or
pop
ja
jg
mov
adc
lahf
push
jb
nop
ljmp
push
aas
cmp
adc
fnop
add
mov
or
outsl
adc
les
and
loopne
cwtl
add
pop
stos
rol
mov
and
mov
inc
aas
mov
and
dec
push
and
mov
stos
adc
push
dec
dec
mov
push
cld
sub
lock
lods
in
push
or
mov
scas
or
not
cmp
mov
xor
fdiv
aas
cmpsl
mov
out
adc
and
push
and
pop
scas
or
lahf
call
je
mov
in
push
sarl
enter
dec
adc
cmp
stc
lcall
mov
fildll
imul
jo
add
outsl
mov
fldcw
mov
sub
push
jns
sbb
rcrl
testl
mov
hlt
add
add
inc
lock
std
repnz
in
sbb
mov
adc
or
les
xlat
pop
rolb
mov
aaa
cld
test
shr
inc
hlt
adc
or
fsubrl
cmp
movsl
data16
lret
sbb
lods
dec
fstl
out
pop
add
rcr
push
inc
flds
orb
or
dec
mov
loopne
or
stos
mov
loop
mov
pop
push
xor
sub
lds
loopne
push
rcl
ss
jno
xor
jnp
xor
lds
pop
and
aaa
cld
inc
xor
hlt
icebp
pusha
push
mov
cmp
xor
adc
xchg
or
add
int3
mov
and
or
cwtl
mov
pop
es
movsl
es
pop
sbb
cltd
mov
add
cmp
cwtl
je
xor
xlat
jp
adc
fbld
and
mov
mov
fdivl
jne
and
add
push
ret
icebp
push
cli
aam
mov
push
and
std
or
ret
add
pop
rclb
xchg
mov
and
inc
sbb
add
add
and
ss
xlat
mov
aam
loopne
push
pop
shll
and
jae
lods
fists
inc
movsb
inc
and
mov
test
and
aam
jbe
out
push
int3
loopne
fiaddl
jecxz
loopne
int
jnp
mov
xlat
lea
inc
jl
movsb
hlt
aam
adc
dec
mov
mov
insl
add
aam
enter
imul
xchg
sub
mov
clc
shrl
data16
loopne
jbe
ja
or
add
fs
push
jo
jecxz
cli
dec
enter
sarb
sahf
dec
push
jo
sub
inc
inc
shll
adc
loop
sbb
loop
fistps
out
and
jb
xchg
mov
xor
mov
sub
stos
addb
mov
mov
aam
lea
inc
mov
add
ss
outsl
add
push
loopne
aam
pusha
add
int3
or
in
jo
les
test
je
ficoms
or
inc
sbb
daa
cmp
add
ljmp
testl
int
add
adc
xor
cmp
cwtl
mov
cmpsl
and
and
add
shll
dec
jp
or
cmp
xchg
lcall
jg
sub
add
inc
adc
jae
push
daa
shll
push
pop
repnz
pop
adc
pushl
fsubr
pop
cmp
jne
roll
sub
and
xor
icebp
cltd
loop
and
hlt
jle
pusha
shr
arpl
and
flds
push
xor
push
mov
jmp
xor
sbb
sub
mov
mov
xor
fnsave
sub
or
loopne
in
aas
jnp
mov
push
or
call
jmp
mov
jecxz
ljmp
mov
dec
xor
dec
xor
repnz
mov
lcall
mov
shl
stc
push
add
incl
push
xor
xor
sub
mov
ret
jecxz
jecxz
add
inc
loope
xchg
mov
cmp
sub
adc
pop
mov
xor
dec
int3
adc
cmpsl
cwtl
cmp
fists
lret
ret
out
xchg
jl
stos
movsl
add
addr16
test
lods
mov
sub
cmp
mov
xor
test
test
push
outsl
aad
je
mov
mov
ljmp
sahf
xchg
mov
cmp
jo
ss
jmp
decl
in
subb
dec
pop
cmp
push
pop
cmp
jne
iret
add
jg
mov
sbb
xchg
fsts
sbb
sbb
push
cmp
dec
mov
enter
into
mulb
bound
rolb
les
push
icebp
mov
scas
ljmp
inc
pushf
mov
sub
fbld
push
nop
add
cmc
clc
mov
and
lahf
sub
stos
xor
jo
mov
mov
aaa
and
dec
insl
pushl
cltd
add
sbb
stc
xchg
repnz
cmc
cmpsl
movsl
in
push
or
test
stos
sub
cmp
lea
xchg
push
imul
pop
dec
ficompl
imul
data16
push
lock
and
mov
push
jo
cmpsl
and
jno
xchg
mov
pop
inc
addb
mov
pop
loope
mov
mov
jne
cmp
hlt
sbb
add
push
sub
movsb
lods
nop
sub
and
rcll
push
jle
sub
mov
les
or
sti
decl
mov
test
push
lods
mov
mov
jp
je
xchg
movsl
into
stos
divb
or
ss
push
sub
lahf
shlb
push
jle
sub
mov
push
mov
jnp
add
loopne
add
mov
and
mov
sbb
insl
pop
and
sbb
mov
inc
sbb
fdecstp
or
mov
arpl
mov
push
loopne
push
fistl
dec
stos
stos
or
and
jbe
jns
aad
or
adc
js
pusha
stos
test
daa
filds
ljmp
pusha
mov
and
inc
test
ljmp
or
cltd
mov
mov
pop
insl
cwtl
ret
push
aad
dec
cmp
mov
inc
mov
inc
and
out
shrb
push
add
popl
add
std
std
ret
fildl
movsl
xchg
push
mov
xor
pop
mov
add
jno
imul
inc
fucomp
sub
pop
or
mov
and
xor
insl
rorb
imul
in
out
out
or
and
lock
aas
mov
add
sahf
cld
test
mov
sbb
lods
pop
pop
xchg
stos
test
cmp
popa
sub
mov
inc
scas
enter
mull
add
call
jg
mov
xchg
cltd
cltd
movntq
out
adc
cmpb
mov
pop
push
xor
push
cmc
cmp
repnz
push
xor
adc
in
jne
xchg
bswap
movsl
sbb
pop
cld
add
push
mov
adc
loopne
lods
and
inc
pushf
les
test
push
mov
sbb
or
test
push
pcmpgtb
leave
dec
and
mov
jnp
test
sub
sub
mov
das
sbb
xchg
aam
sub
decl
repnz
inc
fstps
or
andb
mov
mov
mov
push
pop
xor
aaa
mov
or
cwtl
add
out
mov
inc
aaa
imul
rolb
call
ret
sub
add
sbb
add
mov
mov
push
mov
sbb
pop
add
int
les
mov
lret
xor
adc
fidivs
adc
jns
ds
outsb
shll
sbb
rolb
or
pop
pop
sub
add
mov
out
inc
ret
out
dec
push
add
sbb
push
inc
pop
jo
out
pop
push
pushf
stos
sbb
mov
gs
push
sbb
mov
add
in
shl
jo
sbb
xchg
add
push
cmp
adc
ret
fcmovnbe
or
shl
xlat
push
cld
in
dec
jne
das
jge
fs
cld
inc
test
ret
adc
mov
mov
sbbb
dec
mov
rcl
cmp
add
cmp
xchg
jno
testl
inc
dec
lret
jecxz
js
adc
fmul
les
int3
jo
xchg
sti
push
out
jge
outsl
dec
test
dec
movsl
lcall
or
ficomps
mov
lds
scas
into
mov
fadds
out
sbb
inc
or
jle
lahf
jp
test
ja
inc
sub
jno
and
mov
bound
and
mov
push
add
in
xorb
sbb
sub
sub
movsb
mov
rol
mul
pop
cmp
ds
or
sbb
testb
cmpb
iret
fidivrs
adc
arpl
mov
movsb
jnp
call
inc
inc
ret
int3
jb
or
lock
js
cld
rcrl
mov
je
cwtl
adc
inc
pop
in
cli
in
push
add
adc
add
in
sahf
ret
dec
inc
out
or
push
aad
scas
mov
fstp
loope
jmp
jmp
mov
cli
mov
mov
test
cmp
add
and
sub
sti
rcrb
xchg
mov
push
andb
hlt
sub
push
out
add
shr
adc
adc
jg
fisttps
idivl
lret
fcompl
int3
int3
cmc
scas
ds
inc
or
pop
xor
mov
dec
shl
shlb
fcmovne
jge
lret
inc
sti
test
aad
clc
int3
xor
cmp
add
cmp
orb
adc
hlt
mov
rcr
ret
add
push
push
xlat
add
push
aam
jae
pop
add
dec
int3
adc
das
das
jb
unpcklps
and
testb
adc
dec
hlt
dec
das
sub
fmull
or
add
dec
dec
bound
pusha
ret
addb
scas
insb
and
and
xlat
andb
and
add
cmpsl
mov
dec
jb
stos
pop
mov
in
lcall
mov
add
scas
sub
and
js
pop
fdiv
pop
sub
and
dec
fdivrs
clc
and
dec
push
paddsb
sbb
mov
push
xchg
xchg
sbb
int
lcall
add
faddp
addl
mov
cmpsb
lods
pushf
mov
dec
sub
call
or
push
pop
ficompl
and
adc
jo
pop
xlat
fldcw
dec
rcrl
and
sbb
add
arpl
xchg
aam
and
push
insb
sbb
and
lret
mov
int
push
das
and
sub
into
ja
lods
xchg
and
inc
dec
addr16
jne
xlat
mov
adc
jo
push
xor
and
subl
loopne
adc
xchg
dec
daa
jl
fwait
adcb
outsb
dec
or
add
mov
dec
daa
sbb
jecxz
das
divl
sub
sbb
push
fst
mov
shrl
sub
jb
shlb
and
stos
mov
lcall
inc
nop
pop
int3
sbb
xor
hlt
cwtl
lock
sarb
pop
xlat
xchg
jp
je
ret
pop
sub
or
sbb
cli
fidivrl
faddp
hlt
jmp
sti
adc
sbb
inc
movsl
cs
aaa
pusha
jb
or
adc
mov
scas
fsubl
dec
inc
movsb
fstp
jmp
sub
adc
mov
sbb
out
or
sub
bound
mov
push
mov
and
enter
out
add
pop
inc
mov
and
lods
jp
sub
adc
fs
mov
cmc
hlt
sti
adc
pop
ficompl
scas
adc
sbb
das
lret
lret
les
sbb
push
cmpsb
mov
jp
in
test
adc
sbb
cmp
js
nop
clc
push
push
mov
xchg
dec
mov
dec
mov
add
aaa
pop
rcr
adc
fs
inc
adc
stc
pop
xlat
jne
fwait
pop
gs
cli
cwtl
clc
mov
in
push
js
insb
inc
cmp
jne
cmp
inc
pop
xchg
mov
dec
cwtl
sbb
insl
negl
mov
add
leave
mov
push
aam
int
test
pusha
icebp
push
or
repz
mov
iret
cmp
out
and
in
sub
mov
scas
dec
fstps
dec
jecxz
pop
push
xchg
imul
mov
repz
popa
add
add
dec
orb
xor
add
rol
add
xchg
lds
inc
inc
lret
jmp
sti
in
lcall
pushf
jg
pop
shlb
or
jg
sbb
pusha
cmp
out
test
cwtl
cbtw
push
jnp
test
and
loop
sbb
das
outsb
loop
sbb
jne
cmpsb
adc
xchg
push
paddd
jp
stos
ficoml
fwait
dec
and
cmp
out
pop
in
pushf
push
call
js
out
movsb
adc
icebp
fiadds
push
jmp
test
enter
addr16
mov
add
and
daa
push
aam
or
das
and
loope
add
lcall
shll
sti
fildl
cmp
pop
dec
int3
jmp
dec
xor
pop
fdivs
sbb
aas
mov
lcall
fistl
pop
push
mov
mov
xor
or
jb
test
ljmp
mov
lcall
das
hlt
rorb
push
push
movsl
loope
jno
pop
emms
sarb
xor
out
idivb
pop
pop
outsl
mov
push
push
mov
insl
test
cmc
sbb
and
mov
pop
clc
sbb
sbb
int
ret
jl
pop
das
fucomip
fucomip
jo
cltd
sahf
ljmp
orl
in
cmpsb
or
test
dec
popa
pop
aam
inc
mov
fdivp
lods
das
push
or
call
out
test
ljmp
jnp
and
jb
out
in
mov
hlt
rcr
or
add
xor
aaa
pop
std
jbe
jge
lods
sbb
lds
incl
aas
add
or
mov
and
cli
lret
jmp
sbb
mov
and
adc
xor
cli
aas
and
mov
sti
pushl
mov
mov
add
pop
sub
aad
xchg
mov
pushl
rclb
sbb
lods
mov
aam
sbb
pusha
fnsave
xchg
sbb
dec
lcall
inc
push
pop
mov
add
mov
rorb
leave
jno
push
push
stc
sbb
add
add
mov
and
into
push
xor
lods
call
mov
loope
and
and
movsl
insb
xchg
sar
loopne
ljmp
ffree
inc
adc
testb
lock
inc
mov
xadd
fstpt
std
imul
sub
push
inc
imul
fidivrl
mov
push
and
out
jecxz
xor
pop
or
hlt
jecxz
imul
jo
fstps
xchg
cwtl
fstl
lret
iret
xchg
adc
jnp
repnz
jnp
add
outsl
aad
sbb
ror
icebp
icebp
sarb
and
test
fisttps
lret
sbb
pop
push
add
jp
mov
mov
and
pusha
gs
dec
rcrb
bound
ds
fmuls
sub
dec
dec
mov
xchg
fidivs
rcl
mov
fisttpl
or
xlat
test
ss
jnp
movsb
sarl
mov
fcompl
in
bound
fildl
mov
push
xor
cmp
sub
mov
imul
xchg
std
or
lods
fbstp
addr16
mov
fwait
xchg
ret
negb
jecxz
clc
stc
sbb
les
stc
aad
xor
pop
mov
push
cmp
outsb
mov
mov
adc
popf
and
cmpl
repnz
ja
adc
push
cmpsb
out
sbb
call
push
pop
jb
outsl
sbb
jo
add
mov
js
mov
pop
or
pop
rcr
pusha
pop
adc
into
adc
or
or
push
test
add
lret
mov
add
aaa
push
push
mov
push
cmp
push
add
test
lock
sub
or
cmp
jp
add
dec
inc
mov
sbb
rol
fidivs
rorb
or
pop
add
cmp
aas
addr16
fs
cs
push
lret
or
pop
push
lock
outsl
xchg
mov
push
loop
push
dec
scas
push
add
jae
xchg
sub
push
push
mov
xor
jne
out
inc
scas
mov
outsb
ljmp
add
fcompl
lock
adc
inc
and
sbb
adc
adc
jmp
dec
dec
inc
xor
push
out
inc
cs
test
les
fimull
or
fistl
je
int
lahf
filds
call
rolb
nop
pop
xor
jno
or
mov
scas
loope
arpl
repnz
shlb
push
push
mov
xchg
push
hlt
sti
lea
das
out
adc
test
fwait
pop
mov
idivl
or
xlat
sbb
add
xor
push
xchg
adc
jnp
xorb
lahf
clc
xchg
xor
sbb
jg
dec
mov
rolb
push
jge
out
lret
incl
cmp
xchg
push
inc
in
xor
pop
or
scas
setno
add
insb
lock
jl
lret
test
fadds
stc
add
mov
mov
xchg
push
xor
cmpsl
test
repnz
cmpsl
lods
sbb
loop
clc
dec
ret
add
cmp
xor
mov
ss
std
xlat
push
stos
pop
jl
lahf
push
ljmp
mov
xchg
or
cmp
inc
jl
lods
xorl
mov
aam
pop
stos
dec
aad
and
adc
adc
mov
mov
dec
pop
add
mov
pop
sbb
push
stc
rcrb
sbb
es
mov
pop
mov
xchg
repnz
test
dec
push
sbb
fstpt
push
mov
mov
jge
sbb
pop
test
pop
sub
or
dec
push
pusha
and
orb
cmp
pop
fsubr
cmp
xchg
rcrl
or
pop
mov
out
dec
pop
jnp
dec
pusha
jl
pop
call
pop
and
add
pop
pusha
inc
aaa
and
aam
jp
add
mov
rcrb
pop
sub
sbb
mov
sbb
cs
xor
push
pop
cmp
jl
repz
in
sbbl
adc
outsl
jmp
aas
adc
push
sbb
sti
pop
push
xor
xchg
add
adc
adc
lock
sbb
rcr
jae
mov
loopne
cld
xor
add
lcall
nop
outsb
jmp
lds
test
inc
xchg
push
and
sti
jg
fnsave
jo
sbb
push
pushf
mov
divps
mov
aaa
mov
add
fmuls
push
mov
mov
cs
sbb
jecxz
dec
sub
xor
cmp
or
inc
xor
js
lock
inc
rcr
xor
gs
jo
pop
push
xchg
shlb
sbb
es
jge
test
aaa
dec
push
and
gs
pop
or
sbb
mov
or
xchg
pop
lret
rcrb
fistpl
aaa
push
dec
pop
pop
jecxz
out
adc
icebp
pop
pop
mov
inc
xchg
pop
lahf
inc
sub
mov
lsl
xchg
stc
add
push
pop
jno
sbb
jg
add
fisubrl
or
fwait
or
sub
xor
jg
adc
sub
mov
insl
pop
stos
imul
dec
add
clc
xchg
adc
xchg
adc
push
lods
xchg
jae
adc
ss
xlat
add
cs
or
fs
cld
ds
dec
inc
adc
jbe
test
data16
loop
shl
loop
inc
mov
outsb
mov
mov
aaa
pusha
stos
std
in
inc
adc
cmp
mov
out
and
mov
fistpl
lock
addr16
add
loope
pop
sub
or
orl
xchg
smsw
or
push
aad
pop
out
in
add
dec
andb
rcrb
in
stos
push
out
and
inc
and
arpl
addb
cmc
sub
xor
or
pop
xor
adc
xchg
shl
idivl
sub
sub
pop
jne
dec
imull
stos
adcb
adc
cwtl
push
lret
cmp
push
pop
mov
xor
cltd
rcrb
clc
rcl
jno
pop
and
cmp
dec
ja
clc
and
jbe
ds
js
and
mov
sbb
push
jp
insb
sub
push
adc
cmp
sbb
adc
and
mov
rorb
mov
push
jne
push
aad
adc
inc
lcall
xchg
sbb
adc
xchg
cmp
sbbb
mov
push
sbb
aas
mov
pop
push
xor
add
int
adc
lock
ss
inc
sbb
aas
fcoms
cmp
xchg
je
cmp
dec
xchg
mov
jmp
or
pusha
inc
ret
sbbl
inc
pop
sbbb
jg
jg
jns
adc
insb
pop
loopne
inc
pop
enter
call
jecxz
out
cmp
out
mov
insb
mov
mov
push
sbb
adc
fistpl
hlt
insb
out
push
icebp
and
pusha
imul
mov
in
cwtl
inc
and
and
int
cltd
pop
lods
out
outsl
test
lret
mov
or
pop
shrl
jle
xor
ret
ljmp
mov
stc
mov
add
lods
sti
xor
mov
dec
mov
and
loope
and
sub
mov
fldt
mov
push
jnp
xchg
and
stos
imul
mov
adc
pushf
jnp
shlb
mov
pop
leave
aam
in
xor
mov
in
imulb
fsubrl
sbb
movsl
out
popf
insl
xor
test
and
sti
mov
cli
add
and
lods
test
push
aad
push
mov
sub
pop
mov
lds
xchg
inc
sub
inc
fdivl
xor
orl
and
xchg
fistps
gs
adc
fcoms
inc
sub
mov
ja
fisubl
add
cld
filds
push
pop
sub
jp
push
xor
out
int
sub
push
out
mov
jb
aaa
push
pop
fidivrs
cli
xchg
push
inc
and
outsb
push
mov
dec
js
nop
inc
lods
pop
jmp
cmp
mov
add
add
dec
xor
or
lds
jns
adc
sub
mov
mov
outsl
je
imul
out
fs
adc
or
lods
xor
pop
call
dec
out
dec
mov
fdivs
pop
mov
dec
lds
push
adc
jb
test
in
lea
pop
pop
out
inc
pop
pop
add
mov
inc
or
leave
xchg
rcr
adc
inc
fldenv
in
jno
cs
testb
bound
or
insl
jno
fcoms
sbb
or
push
jmp
mov
pop
pop
mov
scas
aaa
sbb
repz
cmp
push
mov
jae
push
xor
cmp
dec
or
test
pop
mov
inc
jge
push
int3
cltd
faddl
fcmovnbe
or
enter
pop
popf
mov
or
jbe
cmpb
sbb
push
fdiv
lea
stos
ss
shlb
cwtl
xorb
lahf
add
and
jg
sbb
divb
aam
xchg
mov
add
sbb
mov
filds
jecxz
adc
loop
pushl
sbb
fdivp
leave
movsl
dec
aam
fs
dec
enter
cmp
or
ffree
lock
add
sbb
out
cmp
das
les
dec
cld
roll
inc
and
xchg
add
inc
or
xchg
xor
mov
sti
stos
add
fwait
outsb
fcoml
add
cld
pop
or
sub
mov
cmp
adc
lock
je
insl
cld
test
mov
les
cs
xchg
addr16
sub
mov
rcll
adc
icebp
enter
cmpsl
testb
es
and
stc
idivb
aas
dec
insl
aaa
pop
ss
lods
or
and
or
scas
dec
call
ss
push
mov
aaa
add
and
out
xor
mov
test
xor
mov
int3
sbb
rcrb
clc
aaa
orb
sarb
or
jle
pop
lock
xchg
call
sbb
daa
out
adc
jb
mov
imul
outsb
inc
adc
or
into
xor
aam
sbb
xchg
jmp
inc
movsl
es
fnstenv
in
jbe
or
sbb
cmp
cld
icebp
mov
shll
jl
jbe
mull
lock
loopne
push
xor
clc
out
movsl
lods
mov
lods
add
push
cmp
jae
sub
pop
adc
lcall
inc
fs
sarb
jp
xchg
pop
roll
fiaddl
pop
fistpll
jle
ljmp
cmp
sbb
jbe
ja
fsubl
mov
adc
or
js
inc
mov
add
mov
out
inc
xor
mov
lea
mov
mov
into
xor
sub
dec
lret
and
or
xor
js
mov
or
subl
lahf
lahf
push
xor
in
add
rol
sbb
add
jo
push
shrb
in
sbb
add
or
es
or
enter
mov
push
test
adc
sahf
in
push
sbb
ljmp
pusha
js
and
and
int3
and
pusha
sti
dec
push
jmp
movsb
sbb
das
aad
shlb
pop
jne
clc
adc
add
xor
pop
pop
insl
shrb
cmpsl
cli
xchg
or
pop
loopnew
or
jb
lock
pop
fldt
xor
push
es
rclb
inc
dec
xchg
or
bound
ficomps
es
mov
cmp
enter
push
leave
pop
ds
lds
xlat
or
outsl
dec
sub
in
cltd
xchg
loopne
adc
or
pop
call
push
add
or
out
insb
push
ret
or
std
or
sub
hlt
xchg
rorl
test
cwtl
arpl
add
rorb
xchg
stos
cwtl
cmp
mov
icebp
add
cmp
cmpsb
mov
rorl
mov
jge
xchg
mov
dec
dec
shl
imul
mov
cwtl
loope
or
inc
movsl
xchg
andb
sbb
dec
push
mov
or
es
bound
mov
xchg
xor
ja
sarb
js
shr
mov
test
lock
xor
or
pop
mov
je
sahf
xor
mov
insl
pop
push
fists
fsubl
pop
push
xor
xor
mov
ss
outsb
adc
add
xor
adc
inc
push
loop
ja
push
add
or
iret
loope
sbb
stos
cmp
sbb
fsubs
ret
inc
jb
pop
ret
adc
and
add
addl
stos
pop
andb
cmp
test
pop
arpl
jge
inc
sbbb
dec
imul
pusha
call
sbb
test
stos
clc
cwtl
add
addb
pusha
inc
xchg
mov
sbbb
loop
add
ss
clc
jne
lock
out
lret
inc
cwtl
xchg
lret
inc
add
adc
jmp
outsl
int
mov
lods
mov
test
into
and
loop
xchg
shr
or
mov
repnz
xchg
or
stos
filds
lcall
fwait
cmpsb
or
adc
jae
sbb
inc
adc
mov
or
pop
lea
cltd
pop
les
movb
adc
adc
orl
repnz
scas
sarl
loopne
aaa
loope
push
dec
sub
xchg
rol
arpl
push
outsb
into
aaa
push
dec
mov
inc
int3
adc
mov
mov
rclb
add
dec
add
lret
icebp
push
xchg
cld
aaa
fisubrl
adc
mov
andb
js
icebp
inc
xchg
stos
sbb
rclb
cmp
out
aad
prefetch
mov
ljmp
sahf
jmp
mov
jb
push
pop
jo
fsubl
dec
call
push
pop
bound
cwtl
push
mov
push
mov
js
or
in
and
dec
add
rol
sub
fists
pop
int3
jbe
arpl
icebp
push
lock
das
xchg
aam
dec
inc
and
decl
fadds
mov
fs
push
and
add
add
ss
mov
nop
fadds
push
cmp
cmpb
jb
mov
mov
jb
adc
sub
and
mov
mov
mov
xor
adc
pop
inc
and
push
mov
call
sbb
xchg
sub
test
outsb
rclb
loop
jp
adc
jle
or
jae
pop
ficomps
lret
js
test
adc
inc
icebp
push
stc
call
xchg
sbb
and
cmc
add
iret
and
sbb
sub
jnp
jecxz
xor
adc
push
dec
jnp
test
mov
repz
adc
pop
test
je
dec
cmp
dec
push
mov
push
cltd
repnz
mul
subb
xchg
mov
imul
movsb
mov
inc
fldt
popf
sbb
add
repnz
lcall
xor
dec
cmp
pop
push
dec
shr
loopne
call
xchg
and
lods
mov
jecxz
loopne
sub
push
in
test
jae
push
pop
shlb
add
outsb
sbb
sbb
pop
fstl
adc
and
adc
or
inc
inc
push
push
or
fidivl
push
mov
mov
adc
in
mov
jnp
inc
enter
idivl
cld
inc
mov
pop
fcmovnu
test
or
push
inc
into
and
bound
and
sahf
sbb
push
mov
pop
xchg
mov
testl
mov
adc
movsl
cmp
in
mov
sti
mov
repz
mov
dec
add
mov
loope
cmp
repz
pop
cmp
pop
ljmp
in
mov
ja
mov
mov
loopne
jb
or
lds
dec
std
push
das
outsb
or
inc
mov
mov
add
lods
push
add
add
mov
ja
xchg
push
sbbl
clc
aaa
cli
lea
pop
add
and
shrl
mov
inc
pop
mov
imul
xchg
and
and
scas
push
add
xor
in
mov
out
popa
jp
fadds
outsb
lds
jmp
cld
push
jmp
add
out
push
and
sbb
fidivrs
dec
xchg
add
add
cli
push
les
arpl
out
loop
add
cmc
in
inc
out
sbb
and
sbb
dec
clc
xor
daa
xor
lea
movsb
shr
push
aas
ss
fsubs
dec
loope
lcall
cmp
dec
lds
movsl
cmc
mov
mov
and
mov
sub
cmp
test
inc
daa
xor
mov
inc
icebp
mov
rcrb
xchg
scas
push
push
fisttpl
xor
or
int3
shll
mov
add
data16
add
and
and
pop
add
fwait
jecxz
jns
jecxz
lcall
movsl
mov
mov
jnp
or
js
iret
fwait
icebp
stc
add
fs
jecxz
and
je
shr
aam
pop
pop
dec
movb
ret
sbb
pop
xor
mov
int
ja
cmp
inc
inc
pop
rorl
cmpsl
xchg
mov
stos
push
sbb
test
pusha
dec
sub
ret
rclb
push
mov
es
mov
add
jp
cld
dec
cltd
loopne
stos
inc
es
fbstp
pop
pop
mov
shlb
cmp
movsl
pusha
jne
imul
pop
add
jno
pop
push
fbld
mov
inc
jbe
jae
xchg
inc
lret
hlt
push
fmull
fdivrs
sbb
lods
fadds
es
subb
and
add
push
mov
or
int3
jp
popa
pop
dec
push
pop
rcrb
cmp
jne
lods
or
dec
fildll
mov
fdivrl
hlt
pop
js
or
mov
dec
add
mov
xlat
loopne
sahf
aas
xor
aaa
pop
sub
mov
jp
clc
sub
mov
jecxz
jp
in
dec
xchg
or
test
add
sub
pop
movsb
mov
fsts
arpl
adc
in
push
lea
sbb
into
xchg
inc
add
mov
jl
and
jno
pop
add
mov
test
xlat
pop
ffreep
push
xor
cmpsl
add
mov
adc
aas
push
or
popa
dec
xchg
lock
das
push
mov
jno
cmp
inc
aas
es
scas
sub
outsl
rol
es
cld
subb
in
push
sub
jbe
jbe
stc
andl
sbb
outsl
mov
je
jnp
loopne
add
ja
mov
adc
xor
jge
shll
mov
cwtl
sbb
inc
scas
mov
dec
sub
cmp
jo
mov
sub
inc
mov
sub
add
and
jmp
jmp
push
push
add
insb
das
jecxz
push
push
sbb
push
test
add
lods
repz
mov
sti
sbb
outsl
add
js
aas
jg
push
lods
add
xor
mov
ds
push
orb
add
or
lock
jne,pn
xor
test
push
lahf
push
mov
push
andb
inc
loope
adc
in
mov
jmp
dec
jg
stos
xlat
inc
jge
mov
jo
in
ss
pop
xlat
pop
dec
je
or
pusha
pop
cmp
js
repz
jle
sbb
xchg
pop
pop
bound
mov
dec
cmc
outsl
push
std
testb
push
je
mov
les
cmc
or
aaa
jne
cmp
cmp
mov
or
xchg
mov
pop
mov
inc
filds
ret
js
mov
in
ljmp
iret
shlb
test
icebp
arpl
push
mull
inc
xor
mov
mov
outsl
inc
push
mov
test
pop
mov
clc
roll
pop
cmp
out
jg
mov
out
cmp
outsb
test
lock
pop
in
mov
outsl
or
gs
lods
insb
xchg
pop
fldt
adc
cmp
lods
popa
jne
jo
push
std
add
jns
negb
lret
dec
xchg
lock
or
das
rorb
adc
cltd
jl
loopne
pushf
bound
mov
xchg
mov
sbb
inc
mov
adc
idivb
dec
movq
sarb
stos
add
mov
jge
cmp
es
testl
les
lock
aaa
mov
dec
test
das
adc
outsl
fcomip
decl
call
in
iret
sub
and
mov
outsl
fidivrs
dec
decl
loope
xchg
pushfw
fbld
inc
daa
or
js
mov
icebp
aaa
jo
test
xchg
popw
shll
sbb
ss
clc
or
lahf
mov
adc
out
incl
jecxz
pop
jg,pt
out
sbb
into
sbb
lods
clc
out
fmull
xor
push
loopne
add
adcl
shrl
lods
lea
mov
add
dec
jle
hlt
pop
mov
and
mov
add
push
jge
push
icebp
addl
aaa
sub
mov
and
lock
repz
adc
xchg
add
nop
cmc
xchg
lcall
add
sub
cmp
out
inc
add
in
out
mov
add
adc
xor
add
lret
inc
pushf
lods
push
sti
rcll
mov
pop
sub
in
inc
sub
iret
and
or
hlt
rolb
sbb
xor
push
rdtsc
lods
pop
or
add
add
jl
sbb
lret
repnz
adc
inc
jne
nop
cld
jmp
mov
js
rolb
test
fdivl
pop
je
xor
push
mov
sahf
jno
cli
pop
jae
pop
sub
sti
sub
hlt
outsb
add
ret
ror
xor
dec
arpl
das
js
dec
movsb
or
pop
rcrl
and
gs
test
sub
pop
inc
fwait
pusha
mov
ret
shl
xor
lods
and
mov
shl
sub
xor
and
or
clc
into
push
shl
fucom
lock
adc
dec
movsb
lcall
sub
inc
mov
xor
ret
push
xchg
roll
xorb
sbb
jns
push
ret
sub
xor
lret
out
sub
xlat
push
out
push
out
dec
rclb
cmp
inc
in
mov
and
in
push
jnp
js
sti
add
mov
sarb
mov
sbb
je
loopne
out
loope
bnd
push
hlt
push
inc
or
in
sbb
xor
cmp
in
insb
push
daa
pop
dec
or
add
pop
xlat
or
icebp
jbe
push
call
jmp
fisubrl
or
shrl
inc
and
pop
cmc
stc
loop
iret
clc
lcall
jne
rol
in
add
cmp
je
and
in
or
aad
jae
in
push
cmc
insb
mov
adc
ja
dec
jbe
push
cmpsl
push
push
push
es
push
popf
out
mov
jns
lock
xor
push
xchg
inc
sub
inc
jg
lea
sub
enter
inc
and
fs
inc
rclb
iret
rcl
roll
test
cs
push
dec
in
mov
push
test
incl
in
xchg
jle
push
xor
int
addb
mov
pop
push
in
test
aaa
cmp
nop
es
mov
xor
jne
lods
pushf
stos
pop
push
js
outsl
push
lea
inc
pop
inc
ljmp
add
dec
xor
mov
or
xor
fld1
push
rorl
push
movb
dec
mov
xchg
out
and
xchg
inc
imul
dec
xor
or
sar
pop
push
daa
aad
mov
cltd
ret
outsb
mov
add
pop
testl
mov
das
and
mov
pop
add
mov
scas
or
push
inc
ja
adc
add
cld
mov
insl
push
pusha
sub
sub
pop
in
test
lar
dec
cmc
lock
jg
aaa
iret
sub
aas
and
cmp
dec
sub
popa
fnstcw
inc
sar
ficompl
sub
mov
aam
das
inc
cltd
lods
cs
adc
or
sub
xchg
nop
mov
fcoml
inc
clc
or
mull
and
ret
fistpl
xor
sub
xchg
sub
outsl
lock
lea
or
fisttps
cmpsl
add
ja
aaa
push
mov
pop
dec
leave
leave
movsl
ret
push
sub
mov
sbb
and
fucom
mov
jbe
lock
scas
aaa
and
fwait
mov
lds
mov
xchg
mov
jle
sub
leave
lds
mov
mov
pop
add
jge
mov
add
dec
sub
mov
lods
mov
pop
fmull
mov
pop
jge
scas
mov
lret
push
pop
inc
sbb
pop
add
dec
popa
add
add
mov
in
cmpl
test
mov
and
jne
add
ficomps
mov
mov
xor
jb
in
xor
ret
inc
data16
xchg
lods
add
mov
mov
ljmp
ja
movsl
jo
or
pop
mov
les
push
dec
xor
inc
in
sub
jle
inc
pop
xchg
scas
daa
aam
dec
mov
pusha
repz
arpl
or
sarl
cmp
ficoml
push
or
enter
insb
ss
or
aad
lea
dec
adc
aas
mov
sub
aaa
lcall
jl
sbb
add
fdivrp
pop
xchg
inc
les
fwait
out
mov
das
dec
fisttpll
inc
in
xor
xchg
adc
jmp
rcrl
insb
xlat
lret
les
xchg
mov
jbe
nop
mov
sahf
xchg
pusha
adc
xchg
dec
and
xchg
or
xchg
or
push
pushf
hlt
pusha
shrb
cmp
test
push
fs
sbb
cld
adc
xor
sub
add
jae
mov
inc
xchg
sub
jp
pusha
testw
pop
inc
push
andl
push
dec
jmp
add
popf
movsl
or
mov
add
sar
jg
mov
jg
push
pop
sub
mov
shrl
jmp
pop
dec
inc
or
cld
add
mov
mov
loop
arpl
push
or
iret
into
aaa
jle
addb
dec
fdivl
jne
lret
or
shll
inc
add
clc
cwtl
adc
xor
popf
js
sub
popf
adc
fmull
adc
add
loop
jne
mov
ss
inc
push
test
loopne
pop
adc
outsl
outsb
dec
mov
cmp
mov
xchg
fcomps
repz
addb
inc
mov
aas
das
shlb
mov
repnz
and
xchg
popl
mov
mov
stos
rcrl
and
adc
shll
popf
paddusw
add
dec
lea
mov
push
arpl
lods
fmuls
dec
dec
add
add
add
rorl
mov
ror
mov
pop
aam
punpckhdq
inc
xor
pop
test
daa
lcall
popf
test
xlat
ss
andl
xor
mov
mov
push
add
cli
mov
icebp
js
ja
fmuls
mov
test
push
mov
inc
hlt
push
popa
dec
neg
xchg
push
add
scas
daa
push
mov
xchg
cmp
shl
add
or
sbbb
lea
sbb
cmpsb
test
repz
add
mov
xchg
bnd
clc
call
fcoms
pop
rcll
das
cli
xor
push
sti
sub
mov
clc
push
rorb
xor
hlt
ss
dec
mov
aam
aam
add
sub
adc
add
inc
out
sub
shll
cmp
inc
outsl
or
sbb
clc
das
or
sbb
xor
push
dec
inc
fisubrl
push
inc
sbb
and
hlt
imul
ds
popa
sub
ror
loope
ffree
lcall
pop
xchg
loop
sti
loope
clc
sbb
push
test
nop
inc
jns
sarl
leave
adc
ficoms
inc
push
add
lods
test
or
xchg
dec
or
insl
adc
stos
xor
jae
sbb
and
daa
mov
xchg
add
add
iret
insl
shlb
or
adc
xchg
xlat
popa
int3
push
cltd
adc
mov
lock
inc
adc
mov
mov
jmp
dec
call
jmp
test
loopne
test
pop
rcll
mov
inc
or
orb
mov
sti
lock
dec
add
push
lcall
add
or
pop
mov
or
cmp
push
jo
jbe
jb
int
mov
sbb
orb
ds
sbb
and
ficompl
sub
mov
xchg
mov
idivl
ja
xor
pop
add
and
add
or
or
data16
mov
jge
add
sbb
outsl
xlat
add
xor
in
add
mov
xor
xchg
pop
sub
loop
and
aas
or
test
leave
adc
aaa
adc
ret
inc
inc
sbb
xlat
sahf
add
xor
push
sbb
pop
or
pop
jecxz
add
lock
in
add
lods
dec
loopne
lds
jo
dec
out
inc
add
push
pusha
mov
pop
jne
push
mov
mov
inc
repz
mov
ss
lea
rclb
inc
inc
ss
sub
xchg
push
dec
dec
xchg
and
inc
pop
les
loop
or
rorb
add
sbb
xchg
rcrb
insl
and
inc
dec
jb
loop
jecxz
scas
ret
rorb
adc
sbb
xor
movsl
mov
test
and
xchg
int3
rcrb
mov
popf
lock
add
mov
push
add
scas
xor
loope
dec
push
sub
fidivl
and
inc
mov
adc
sub
in
jo
hlt
inc
jl
adc
or
ljmp
and
or
adc
out
xor
dec
mov
xchg
lock
jb
clc
dec
xlat
test
inc
adc
sar
and
and
and
adc
xorb
hlt
inc
roll
ret
dec
pop
pop
imul
jp
sbb
addr16
ljmp
rcll
dec
adc
jne
dec
adc
fdivrl
mov
adc
sbb
out
imul
sbb
es
test
fcmovnb
aas
pop
lret
inc
lds
push
cmpsb
cmp
inc
out
testb
push
mov
inc
or
in
movsb
push
arpl
xor
inc
adc
rolb
dec
stc
and
lds
and
roll
jns
fdivl
pop
aad
push
push
and
clc
push
nop
test
sub
sub
adc
push
pusha
cld
inc
adc
jl
sub
and
movsb
jg
test
pop
jnp
xchg
sub
imul
add
loopne
in
jbe
jle
movsl
shrl
mov
mov
daa
loopne
loopne
rolb
popf
xchg
in
jns
adc
fmull
sub
push
mov
repnz
jp
mov
aad
cwtl
mov
dec
jo
or
push
mov
add
outsb
add
sub
insb
cmova
lret
mov
inc
in
add
out
insb
pop
xor
lock
aam
adc
das
cmp
mov
sahf
adc
sub
dec
cmp
fldz
jl
mov
daa
cli
push
sbb
mov
add
test
adc
sub
frstor
imul
push
hlt
icebp
push
addr16
gs
lods
ja
add
mov
pop
pop
jge
and
out
jne
dec
dec
xor
movsl
stos
pop
xchg
xchg
sbb
cli
cwtl
std
jle
hlt
lods
xlat
adc
and
int
sbb
add
js
pop
fisttpll
les
leave
and
and
sbb
mov
hlt
adc
mov
movsb
jo
rclb
pop
pop
cs
cmc
add
popa
mov
outsb
mov
xchg
push
mov
fidivrs
fyl2xp1
das
inc
lea
add
cltd
and
jle
push
scas
fcomps
jo
and
inc
xor
pop
lock
cmp
js
sarl
pop
pop
mov
sub
add
mov
jg
xor
add
sub
push
sbb
mov
pop
mov
arpl
notl
jne
cwtl
push
or
shll
jecxz
push
push
cs
add
outsl
aam
icebp
add
sub
shrl
xchg
pop
add
cmpsb
test
pop
push
jge
dec
pop
add
mov
or
aam
lock
push
mov
arpl
insb
rcr
xchg
mov
mov
cmpb
subb
jb
pusha
xchg
jb
mov
fldt
pop
subb
add
movsl
lods
xchg
push
sub
insb
jl
mov
dec
ds
push
or
adc
xor
sbb
lcall
dec
sub
mov
call
xorl
int3
mov
push
popf
shr
mov
sar
out
popa
sub
test
int
push
cmp
jo
sub
and
xor
and
sahf
fbld
lret
inc
bswap
jecxz
push
adc
lahf
mov
xlat
inc
hlt
adc
aam
dec
insl
test
ja
test
outsb
cmp
pusha
imul
lock
push
out
cli
pop
mov
mov
shrb
mov
fwait
movsb
rcrb
test
xchg
or
data16
arpl
jge
sub
mov
test
hlt
sub
sti
repz
sub
jo
pop
out
adc
out
cmp
add
int
outsl
sbb
xor
pop
adc
pop
jbe
aam
cli
jge
les
adc
jb
pop
add
insb
sub
push
cmp
or
dec
outsb
pusha
add
jne
bound
jle
insl
mov
push
fadds
sub
push
stos
mov
aad
outsl
fmulp
sbb
dec
in
adc
mov
jae
out
mov
push
das
data16
bound
mov
out
dec
xor
js
xor
mov
mov
cltd
push
into
push
or
pusha
pop
aaa
cmpl
xor
mov
jb
aam
hlt
inc
and
and
and
das
and
lea
push
and
inc
loopne
xor
test
jg
inc
stc
loope
add
pop
imul
aad
dec
push
cmp
sbb
jo
adc
add
jg
and
aaa
in
mov
add
iret
enter
adc
ljmp
and
mov
fistpll
cmp
sbb
lds
jl
or
enter
mov
data16
cmc
adc
enter
mov
mov
pusha
push
popf
or
lods
in
jmp
mulb
je
or
cmp
pushf
and
loopne
push
add
fbld
inc
xor
jge
movsb
xor
jo
std
fldt
aam
add
or
int
std
mov
pop
int3
and
or
mov
inc
aas
jnp
push
orb
data16
add
ss
cmp
xor
push
lea
cmp
outsb
inc
call
mov
push
andb
loope
add
ret
xorb
xor
cmpb
loopne
ljmp
dec
stos
adc
and
xchg
mov
push
cmp
and
mov
push
mov
and
dec
mov
add
scas
mov
ds
fst
in
nop
xor
mov
imul
adc
arpl
fsubs
outsb
push
pop
rolb
enter
cli
jge
and
pop
push
loop
aas
sbb
mov
adc
inc
movsb
shlb
xlat
cmpsl
nop
xor
in
sub
sbb
mov
scas
inc
imul
shr
jge
adc
lock
call
dec
movsb
fwait
inc
sub
push
sub
cmp
jns
adc
aam
and
out
or
test
loopne
xor
ss
pop
push
es
xchg
sysret
mov
mov
lds
lock
mov
jns
andb
popa
ja
dec
mov
pushf
xchg
test
call
mov
lret
int3
lock
inc
das
jge
sub
cwtl
add
pop
add
loop
add
mov
lds
mov
cmp
push
shrb
ljmp
test
lea
jmp
add
pop
int3
add
and
ss
jo
sarl
outsl
add
xchg
and
mov
mov
sahf
inc
pop
nop
push
mov
push
aad
enter
pop
push
pop
cld
notb
into
data16
testl
push
dec
mov
imul
jl
movsb
jno
jle
daa
sarb
and
jg
insl
add
add
mov
outsl
push
add
pop
jl
js
sbb
int3
cli
push
push
add
cld
jo
mov
mov
rcrb
mov
test
jbe
pop
outsb
mov
in
sbb
xor
fdivl
or
js
mov
fdivp
mov
cltd
add
ljmp
mov
mov
mov
sub
icebp
incl
fisttpl
repnz
add
pop
push
jge
fiadds
pop
inc
aad
mov
pushf
js
lock
sbbb
mov
push
test
insl
jp
dec
sarl
out
flds
leave
test
rcrl
cmpsb
or
xor
push
ss
add
pusha
sar
pop
cld
xor
xchg
subb
jns
cmp
mov
add
pusha
fisttps
add
daa
mov
inc
syscall
shrl
and
and
aaa
mulb
jns
pop
add
andb
loop
clc
mov
push
jle
mov
push
inc
dec
or
pop
popa
xor
push
inc
imul
add
cwtl
xchg
js
pop
iret
into
repnz
sahf
sbb
arpl
push
inc
and
sbb
pop
sbb
or
aas
repnz
mov
lcall
fists
add
pop
and
add
adc
pop
insb
add
jb
fcmovbe
hlt
lret
in
decl
jecxz
xor
mov
dec
and
inc
pop
or
imul
shl
nop
std
jbe
pop
mov
popf
mov
sbb
icebp
add
hlt
arpl
jne
arpl
add
inc
roll
in
push
mov
fisubl
je
fistl
adc
popf
add
std
xchg
orb
lahf
or
nopl
adc
ss
js
push
pop
cmp
loopne
fs
ljmp
mov
fisttpl
or
jp
push
insl
cmp
fstl
push
test
add
inc
loopne
or
lea
mov
xchg
loope
mov
ljmp
pop
clc
mov
out
xchg
xor
xor
push
movsb
add
cmc
adc
fmuls
int
push
pusha
sbb
and
or
cwtl
push
inc
outsl
sbb
jge
cmp
out
inc
mov
xchg
pop
fisubs
adc
and
mov
and
inc
add
and
cmp
add
sub
push
cmpb
test
mov
rcr
or
push
mov
pop
jno
pop
add
mov
sbb
or
out
mov
arpl
jno
sti
or
lret
je
sbb
filds
movsl
inc
addr16
incl
cmp
sbb
lods
cmpsb
and
pop
test
add
repnz
data16
lcall
sub
jmp
ror
xor
dec
scas
or
sub
popa
xor
lret
movsl
lcall
roll
sbbb
dec
sbb
ss
lods
push
and
hlt
sub
ret
inc
testl
sbb
or
test
add
shlb
shll
insl
shll
adc
loope
shll
pop
pop
push
mov
lcall
xchg
inc
inc
mov
push
and
xchg
fsubr
aas
cmp
mov
mov
push
mov
frstor
in
cmp
popf
cwtl
stos
push
insb
adc
cmp
es
pop
xchg
imul
rolb
ret
inc
cwtl
mov
out
dec
dec
bswap
mov
dec
jo
leave
mov
push
stc
cmp
pop
jle
inc
je
repnz
mov
movsb
mov
lods
loopne
or
jge
lahf
mov
sbb
mov
cli
xchg
push
bnd
aad
test
fisttpl
dec
out
imul
pop
aam
lods
lods
mov
add
ficoms
jb
and
popf
in
sbb
inc
cld
data16
and
stos
jg
sub
addl
xchg
int
ret
cmp
sbb
or
xor
sbb
les
and
sahf
inc
int3
jnp
add
or
decl
dec
cmp
in
cmp
dec
sti
arpl
ja
outsb
sub
cmpsl
jecxz
add
sti
mov
ljmp
mov
testl
das
xlat
mov
ss
or
jnp
jg
scas
ljmp
or
adc
mov
loopne
xlat
push
sub
push
cmp
das
dec
lods
filds
jl
mov
mov
rol
mov
lahf
mov
xchg
fisubl
test
clc
adc
loopne
outsb
cmp
push
xor
sbb
sbbl
mov
adc
loopne
sub
mov
loope
sbb
or
test
pop
mov
sbb
repz
out
loopne
aam
and
dec
mov
mov
xchg
fidivs
imul
mov
stos
imul
andb
mov
ret
xchg
and
outsl
jp
and
les
mov
jp
movb
mov
inc
insb
cmp
and
push
fstp
cmpsl
lcall
pop
add
mov
cli
pop
paddd
pop
fdivrl
lcall
add
fidivrl
adc
cmp
out
xchg
fisttpl
dec
sub
ret
mov
arpl
mov
fwait
test
push
test
jmp
mov
mov
mov
cmpb
cld
lods
testb
adc
xor
jmp
dec
lahf
das
in
data16
pop
dec
scas
jno
nop
cmp
mov
aaa
mov
cli
jl
lret
leave
jge
lods
mov
or
cmpsl
outsl
adc
ljmp
inc
mov
test
pop
test
xchg
es
lcall
and
pop
rcrb
loop
xchg
or
xor
je
das
data16
or
fisubrs
push
hlt
retw
adc
and
shr
inc
in
pop
cmpsl
lock
lret
and
push
sbb
inc
aad
dec
scas
fcmovbe
in
scas
adc
add
push
rclb
xchg
jecxz
mov
sti
sar
adc
incl
mov
mov
js
mov
adcl
int3
sbb
nop
xor
aaa
mov
or
pop
addb
or
push
adc
fdivr
das
jbe
popf
into
add
fiadds
call
in
push
in
adc
mov
sbbb
sbb
push
pop
pushf
mov
pop
pusha
jnp
mov
fstpl
mov
in
orl
cmpsl
mov
lods
fcmovnb
call
xorb
pop
daa
sub
ss
decl
mov
les
lea
or
lods
dec
fsub
fnsave
mov
mov
aad
stos
fpatan
jne
cmp
jl
mov
and
sbb
xchg
mov
xor
negl
xor
fwait
pop
mov
cmc
fcmovnu
mov
addb
inc
sub
mov
push
sti
or
pop
lds
mov
pop
cli
jg
mov
push
aam
and
dec
mov
aaa
test
sbb
jo
les
mov
enter
mov
dec
arpl
dec
sbb
sub
movsl
add
xor
xchg
push
adc
aaa
outsb
or
jae
sarb
add
jmp
imul
jle
lcall
xchg
ret
loop
mov
ret
sub
test
mov
pop
outsb
pop
mov
mov
xchg
push
xchg
dec
sbb
xlat
stos
cli
xor
push
insb
xchg
push
ja
popf
scas
ret
repnz
sub
add
pop
sbb
int3
subb
inc
roll
jp,pn
pushf
jmp
mov
mov
fs
fsub
loopne
mov
lods
push
adc
xor
push
or
sbb
adcb
hlt
scas
stc
or
jmp
outsb
pop
pop
mov
or
dec
xor
or
mov
test
push
xor
inc
push
addl
outsl
sbb
jbe
bound
cli
decl
inc
pop
pusha
jecxz
mov
je
jmp
sbb
or
push
mov
adc
sub
fsubs
or
gs
mov
xchg
adc
push
mov
mov
pop
add
ds
adc
mov
sar
lret
sbb
lea
fidivrl
mov
pop
mov
ret
lock
popf
out
push
out
sub
mov
dec
jge
enter
mov
or
aaa
mov
push
cltd
sub
mov
inc
push
pop
fildl
pop
pop
push
jg
xchg
ficomps
jno
imul
add
pop
sar
divl
aad
movb
dec
or
mov
pop
ret
mov
add
es
xor
test
push
sub
inc
push
dec
lods
cmpb
call
je
out
adc
sub
lcall
sub
cmpl
rolb
shlb
pop
cs
pop
in
int
jg
rcl
js
and
stos
add
test
push
jbe
pop
push
aad
add
add
and
stos
or
inc
push
dec
shlb
out
fidivl
sbb
enter
push
in
or
jb
test
mov
les
xchg
xor
mov
or
cmpsb
dec
xor
mov
mov
mov
adc
xchg
popa
imul
movsl
jmp
mov
cmp
in
pop
xchg
outsb
mov
fistpl
add
pushf
outsb
adc
mov
mov
mov
pop
push
pop
hlt
mov
cltd
in
outsl
push
cmp
rcrl
or
inc
pop
xor
jmp
xor
leave
push
dec
sbb
imul
ds
inc
fucomi
fwait
jge
push
push
loope
enter
imul
pop
inc
ja
dec
pop
mov
imul
testb
loope
lea
sbb
rcrb
jae
pop
jl
sub
push
pop
xorl
in
push
clc
pop
lret
mov
fsubrl
push
push
in
pop
and
mov
or
hlt
lods
shr
mov
pushf
imul
sub
jge
jecxz
add
jecxz
adc
sbbb
stc
loopne
clc
mov
inc
clc
add
adc
repnz
mov
inc
cwtl
push
add
xorb
mov
dec
aad
dec
mov
xor
cwtl
xchg
mov
aaa
inc
cmc
ds
jp
add
cmc
test
stc
sbb
ljmp
add
and
out
fildl
lret
jno
bound
push
les
rclb
add
in
sbb
and
mov
adcb
loop
mov
mov
in
mov
mov
mov
jne
xor
and
bswap
je
mov
jns
add
xchg
or
aam
and
mov
mov
add
test
loope
mov
nop
and
pop
xchg
xor
or
ja
or
jo
insl
adc
xchg
mov
inc
lock
mov
nop
jnp
rorl
addb
aas
adc
or
xchg
leave
sti
xchg
mov
fidivrl
pop
xchg
sbb
or
iret
mov
outsl
lods
icebp
pusha
add
pusha
push
shlb
sub
adc
push
addr16
sub
es
es
rclb
fnstcw
shr
jmp
push
rorb
clc
cmp
add
bound
jbe
jl
cmp
xor
repnz
fimuls
mov
daa
test
es
sub
mov
dec
pop
push
xchg
inc
adc
addb
mov
inc
inc
andb
cmp
and
stos
arpl
push
sbb
xor
jmp
push
cmp
sub
sarb
insl
pop
ja
dec
jns
add
enter
iret
and
out
mov
mov
and
in
aam
rorb
pushf
xor
pop
rcrb
mov
movsl
lds
pop
icebp
mov
lret
fsubrl
clc
inc
cmp
mov
mov
add
out
ja
mov
fstl
pop
mov
sbb
or
into
ljmp
xchg
ret
enter
lea
add
xchg
in
int
add
andb
xchg
daa
jp
sahf
inc
mov
mov
das
mov
pop
pop
pop
mov
mov
stc
or
lods
out
inc
pusha
movsb
in
push
iret
and
lret
xlat
insb
scas
frstor
jp
pop
push
pop
js
aas
sub
or
xor
sub
lret
sti
xor
mov
jb
loopne
rorb
xor
sbb
subb
add
and
mov
inc
lahf
test
iret
xor
jecxz
outsb
xchg
test
test
and
mov
jmp
add
pop
dec
ss
mov
push
sbb
cmp
push
movsl
push
dec
sbb
xchg
cmp
in
mov
enter
and
stc
mov
loop
mov
js
push
xor
push
add
fildll
aad
test
add
outsl
xchg
pop
inc
pop
mov
pop
add
lcall
mov
xchg
cmc
jecxz
mov
ret
mov
xor
xchg
mov
inc
leave
and
das
icebp
or
and
imul
push
mov
test
ljmp
fiaddl
xor
pop
mov
mov
fsub
pop
inc
fdivl
pusha
add
inc
test
cli
jg
stos
xor
mov
mov
nop
adc
fs
loope
xor
adc
sbb
fcoml
xchg
mov
add
ja
bound
push
or
aaa
mov
call
popa
dec
xchg
mov
stos
loope
mov
add
and
dec
arpl
dec
push
lret
fldenv
test
das
pop
cli
push
push
cmp
aam
loop
sbb
fdivrl
xchg
jno
inc
test
add
mov
jp
adc
sbb
and
shr
sub
aam
out
arpl
out
ficoms
scas
mov
rcll
inc
shl
sbb
dec
add
add
daa
adc
cs
imul
inc
daa
sub
rdpmc
pop
sbb
and
adc
jmp
fnclex
push
jns
xchg
dec
xchg
dec
aad
sub
test
stos
rol
pop
inc
jecxz
mov
push
sub
les
not
xor
sbb
adc
adc
dec
jecxz
aaa
jns
andl
cmp
shrb
jg
decl
ret
add
mov
pop
xlat
aaa
lock
fadd
sbb
mov
jp
sbb
addl
std
mov
xchg
in
ss
mov
sbb
lods
pop
lds
push
hlt
push
xchg
adc
dec
cmp
js
loope
xorl
mov
stos
jmp
mov
cmpb
push
gs
cmp
jmp
xchg
adc
mov
pop
std
gs
imul
pop
call
lcall
mov
xor
mov
push
sbb
orl
sub
aam
les
test
xchg
mov
cmp
adc
sbb
cld
ds
adc
gs
mov
icebp
sarb
xchg
mov
jg
outsl
inc
adc
scas
jmp
jecxz
mov
pop
mov
loope
add
push
pop
jno
stos
push
mov
mov
imul
movsl
mov
mov
add
insb
cwtl
out
xor
iret
and
and
jg
pop
jle
out
pop
ss
add
jnp
cltd
adc
popa
popa
pop
idiv
mov
jp
jecxz
pop
iret
push
adc
lods
dec
bound
mov
cld
adc
cmp
je
mov
jmp
or
das
add
inc
and
gs
pushf
cmc
mov
aas
jns
jge
jle
mov
cmpsb
push
mov
jno
cli
call
popf
xlat
xchg
stos
stc
clc
adc
icebp
inc
xor
fisttpll
or
aaa
cmp
mov
adc
pop
lods
insl
icebp
incl
jnp
add
fucomp
js
mov
nop
jle
mov
and
shr
push
les
mov
outsl
add
call
ret
and
fistpll
jl
sbb
in
lcall
in
cwtl
bound
cmpsl
mov
pop
pop
inc
movsl
sbb
xchg
or
outsb
mov
dec
cmp
or
xlat
jo
repnz
xor
sub
imul
mov
imul
fstpl
push
or
push
jno
add
and
pushf
lock
mov
ljmp
jb
cli
fcoms
lret
push
and
test
mov
shl
mov
cmpsb
xchg
pop
adc
mov
push
pop
add
lods
and
mov
fidivs
jo
pop
aam
outsb
sbb
jmp
xor
jnp
cld
push
outsl
lock
jbe
push
adc
jo
mov
push
test
mov
inc
jns
push
sbb
xchg
outsl
pusha
dec
mov
mov
call
mov
pop
adc
das
and
xor
mov
iret
xchg
out
and
rcr
sar
or
mov
outsb
std
inc
mov
jl
mov
mov
pop
clc
lods
cmp
cmpl
dec
es
cs
shlb
jge
pop
mov
and
scas
and
pop
mov
enter
sbb
insl
ljmp
sbb
xor
inc
mov
sti
cmp
das
enter
xchg
push
xchg
cltd
xor
imul
push
fists
jo
aam
pop
adc
jae
test
sub
ret
stos
xor
xchg
loopne
and
xor
sti
or
sub
pop
pop
mov
push
jp
in
in
das
xor
mov
rcr
add
xor
test
xor
test
and
push
pop
test
dec
xchg
push
sbb
mov
scas
cli
add
pop
sub
aaa
sub
or
outsl
pop
sub
xchg
in
rcrb
sub
enter
addl
jmp
xor
adc
sub
test
inc
fwait
repnz
hlt
adc
cmp
and
fmull
push
or
mov
adc
or
push
push
ds
data16
dec
imul
cli
ret
call
cwtl
and
loop
loop
mov
mov
pop
aam
dec
add
mov
push
inc
cmp
ficoms
decl
addb
cmp
mov
aam
pop
mov
sbb
cmp
inc
loopne
mov
andb
ret
and
sbb
test
aam
cwtl
adc
sub
hlt
pop
pop
aam
xchg
imul
adc
sbb
lea
sbb
sbb
add
push
hlt
es
cmc
inc
lcall
out
fiaddl
sub
pop
or
je
and
mov
xlat
xor
xchg
dec
rorb
push
and
xor
lret
and
clc
ret
ss
js
pop
inc
add
mov
sub
sbb
enter
js
call
xchg
or
sti
lods
adc
sbb
cmp
xchg
fwait
out
subb
frstor
pop
sbb
jge
sub
push
rorl
fwait
push
and
cltd
cmp
mov
loop
push
cmc
jle
xor
jp
cmp
pop
or
adc
cmp
mov
inc
add
xchg
or
or
dec
push
imul
insb
mov
and
pop
add
test
adc
mov
add
add
in
hlt
cmp
and
daa
jo
xor
pop
pop
mov
push
scas
or
movl
icebp
lods
cmp
repnz
push
xchg
loope
mov
xor
push
insb
rclb
cmpb
sysret
push
mov
adc
loope
outsl
add
xchg
dec
mov
sarb
lret
inc
xor
mul
jbe
rorl
in
or
jb
push
cmpl
adc
pop
lret
lret
add
ja
and
or
sbb
add
in
xchg
fiadds
xor
push
and
jb
xchg
hlt
jecxz
call
mov
mov
inc
xchg
lea
es
icebp
jns
push
xchg
shll
xchg
xchg
push
pop
arpl
das
and
pusha
and
xchg
ds
jmp
or
add
inc
sti
ret
popl
shrb
fisubrl
lea
pop
cmp
inc
roll
fimull
in
push
aad
sub
jecxz
inc
test
add
sub
mov
adc
call
outsb
cmc
add
adc
mov
sub
popf
dec
or
mov
ljmp
fidivrl
ror
pusha
addl
test
add
push
pop
mov
rorl
inc
mov
inc
and
out
adc
mov
adc
jb
jnp
add
inc
daa
dec
cs
mov
cmp
fidivrs
insb
push
ficoml
aas
sbb
imul
pusha
je
dec
cmp
fisubl
in
pop
or
sub
xor
in
je
mov
and
xor
push
jno
call
lea
xchg
cmp
movsl
outsl
outsl
cmc
inc
movsl
adc
mov
or
push
xchg
test
xchg
pop
sbb
adc
int
lret
inc
and
mov
stos
adc
in
sti
sbb
clc
cwtl
sub
icebp
adc
mov
fists
lcall
push
iret
cmp
mull
lock
jg
incb
mov
push
jns
mov
fimuls
inc
mov
scas
mov
jnp
inc
xchg
insb
ja
fiaddl
add
sti
dec
add
mov
mov
sbb
and
cli
test
xor
inc
cmpsl
inc
sbbb
repnz
mov
imul
cltd
xor
out
mov
fcmovne
shrb
mov
scas
dec
ds
out
add
sbb
xorl
lods
sub
xor
inc
inc
test
scas
inc
ljmp
push
inc
cld
or
rcr
enter
adc
or
scas
mov
addl
es
mov
rolb
and
fdivs
inc
jle
subb
scas
imul
into
lock
dec
outsb
mov
test
imul
xor
sbb
mov
mov
jb
sahf
je
ret
mov
testb
sbb
push
mov
mov
lock
or
mov
mov
dec
sub
and
jmp
dec
xlat
add
or
fldcw
push
fcomps
xor
fwait
push
gs
shlb
sahf
or
or
or
fnstenv
jle
fsubrp
or
shll
pop
fstpt
add
test
fisttpll
pop
int3
mov
cmp
add
data16
cmp
mov
adc
addl
push
push
mov
xchg
push
shrb
dec
adc
xor
xor
or
sbb
daa
push
xor
pusha
xchg
or
cmp
je
mov
mov
lods
pop
and
cs
cli
mov
mov
cmpl
pop
adc
pop
push
adcl
les
addr16
add
imul
add
std
jl
pop
push
daa
les
cli
adc
pop
add
popf
outsb
xchg
xchg
xor
cli
inc
jnp
in
adc
and
jo
pop
fdivr
adc
enter
rolb
dec
jne
add
test
mov
mov
popf
mov
and
sbb
mov
enter
dec
mov
add
inc
or
popf
sbb
js
rcrb
cmpsb
xchg
add
loope
push
test
dec
inc
fsubrl
lcall
popa
mov
das
scas
xor
sbb
push
xchg
andb
and
cmp
or
lock
sub
sbb
jecxz
out
sahf
add
rolb
or
pop
cli
test
pop
mov
adc
pop
shll
xchg
hlt
xchg
jmp
idivl
neg
push
push
inc
inc
sbb
in
fisubrl
mov
stos
loop
popf
adc
xor
dec
adc
pop
add
out
push
mov
push
out
int3
add
loope
mov
add
lahf
adc
aaa
add
int
cmp
scas
dec
stc
stos
dec
add
push
inc
cmpsb
pop
mov
mov
jp
mov
cwtl
rcll
push
outsb
jo
dec
call
ret
pop
dec
push
fs
test
ret
dec
inc
sub
test
xchg
or
sbb
adc
div
xor
je
add
mov
je
jmp
jnp
add
push
and
shrl
xchg
sbb
fcomps
call
cs
incb
fsubrp
push
cs
pop
fcomps
jae
test
clc
fistpll
jle
xchg
fwait
jne
and
lcall
push
push
mov
or
gs
into
fistps
aad
mov
add
jne
pushf
and
add
dec
arpl
sub
lea
pop
std
push
pop
mov
bound
in
mov
mov
xchg
or
or
fwait
in
jle
outsb
movsb
sub
jb
mov
inc
test
int3
sub
inc
mul
mov
push
pop
rorb
adc
aas
mov
push
inc
xor
dec
mov
mov
push
and
push
cld
xor
loop
xchg
out
jl
test
add
mov
sub
arpl
and
loopne
loopne
jb
dec
mov
das
push
les
xchg
ljmp
lahf
pop
or
xchg
das
mov
inc
and
divl
stos
cmp
add
cmp
pop
imul
push
lods
add
jmp
lods
nop
add
call
xchg
push
outsl
outsl
jmp
loope
cmp
stos
popf
add
inc
sbb
adc
mov
jmp
scas
dec
mulb
loop
imul
push
mov
pop
rol
lds
sub
lcall
cli
outsb
loop
cmp
out
bound
imul
nop
adc
push
rcr
addb
int
xchg
inc
push
mov
mov
push
mov
xchg
ja
and
lcall
xchg
add
out
int3
jge
dec
inc
xor
and
cli
push
lods
scas
out
sti
scas
int3
sahf
out
xchg
and
sub
leave
mov
outsl
mov
add
outsl
push
in
aas
les
inc
push
and
lds
int
pop
xor
pop
or
mov
out
pop
inc
subl
inc
inc
stc
cmc
mov
and
movsl
int3
xor
push
and
xlat
in
out
push
icebp
iret
mov
shrl
rclb
jnp
pop
or
and
add
inc
sbb
addl
inc
les
add
adc
out
rorl
loopne
inc
das
inc
cwtl
xchg
add
jo
jmp
add
loope
les
pusha
popa
jo
push
xor
push
sub
fucomip
stos
lds
add
adc
and
and
pop
adc
fs
add
xchg
and
inc
stos
into
ret
jecxz
jb
ret
movsb
call
lods
fwait
test
mov
inc
fsubrl
or
push
jmp
add
orl
adc
push
filds
subl
int3
sahf
and
dec
jecxz
mov
sbb
mov
xchg
dec
cmp
push
roll
out
adc
fiaddl
adc
or
dec
jno
pop
adc
test
and
xchg
cs
bound
cwtl
sti
add
leave
sub
dec
daa
cmp
pop
inc
pop
and
ret
sub
int
adcb
or
mov
pop
or
cmp
xor
repz
popa
pushf
adc
cmp
loope
push
cs
pop
je
inc
jno
popa
mov
lock
lods
nop
add
out
add
xor
out
mov
mov
jp
adc
lret
loop
dec
clc
fnstcw
shlb
je
aaa
int
cltd
popl
loopne
ljmp
pop
aas
clc
mov
shlb
scas
and
add
mov
fwait
sub
ja
fwait
shll
dec
add
aas
fisubs
and
or
inc
add
xor
mov
insb
mov
inc
add
mov
inc
fcmovu
jg
and
data16
cmp
mov
nop
test
fisttpl
dec
adc
add
rcr
cmp
inc
je
xchg
jno
outsb
add
in
daa
adc
decl
cmp
fsts
push
cmp
aas
rclb
fstl
aam
sbb
and
sbb
outsl
cmc
pop
adc
ficompl
subl
adc
clc
adc
sub
fisubs
jg
or
ljmp
cmp
inc
hlt
das
add
ret
mov
push
cmc
sbb
push
cwtl
test
cltd
xchg
jns
sub
jmp
in
test
adc
js
mov
call
inc
mov
jg
bound
xor
mov
adc
xor
or
cwtl
add
jb
loope
lock
sbb
pop
lret
push
jo
push
outsl
pop
and
jo
xor
sub
add
pop
xchg
cld
mov
test
ret
inc
or
shrb
xor
push
mov
add
test
fs
mov
dec
jno
cmp
inc
addr16
fmulp
in
cmp
add
les
mov
mov
mov
adc
cmpsl
insb
int
decl
pop
and
cmpsb
pop
mov
mov
adc
xchg
icebp
ret
cmp
fsubs
loop
out
in
fildl
imul
push
lcall
cld
bound
stc
xor
gs
pop
ffree
cmp
je
mov
clc
dec
cld
push
mov
stos
mov
sbb
leave
mov
xchg
and
scas
shll
pushl
push
inc
adc
fwait
add
es
divl
xchg
iret
pop
incl
or
add
je
xor
inc
ret
cld
or
popf
pop
int3
or
stos
xchg
pop
stos
test
das
cld
push
push
insb
inc
enter
push
in
dec
es
jg
les
or
sarb
inc
pop
loopne
ret
or
fildll
stos
mov
aad
aas
out
ljmp
fildll
and
pop
cmp
mov
xchg
or
dec
mov
in
add
int
push
cmc
and
lds
cltd
out
jbe
cld
lcall
je
adc
in
dec
inc
loopne
andl
mov
xchg
in
mov
call
pop
push
ret
insb
inc
cmp
clc
jmp
hlt
insb
int
in
pop
add
mov
stos
adc
lahf
push
les
stc
cmp
dec
jl
adc
mov
jle
div
or
or
mov
mov
cmp
pop
orb
loopne
fistl
shlb
xchg
test
mov
lods
rcl
std
mov
and
ret
flds
pusha
fdivrp
movb
dec
lret
cltd
dec
mov
mov
sti
pop
ss
in
lahf
cli
jo
mov
jl
add
test
push
sub
add
nop
and
lcall
mov
ficoml
sbb
arpl
xor
mov
decl
pop
sbb
inc
rcrb
jno
out
jge
insb
mov
test
or
mov
outsb
jb
mov
int
lcall
scas
ja
gs
out
popa
jg
adc
xchg
jb
cmp
pop
or
sbb
shrl
incl
sub
divps
enter
fisubrl
cld
outsl
fisubs
pop
movsb
push
or
sbb
nop
xor
mov
push
mov
popf
adc
out
je,pn
decl
add
out
xchg
sub
dec
jb
pop
scas
mov
mov
das
lcall
lea
call
sub
jecxz
push
jo
push
lock
insl
sbb
xorb
popa
or
std
mov
outsl
jp
jae
sbbb
fld
mov
mov
aam
pop
jp
mov
mov
negb
push
add
dec
shrl
and
sub
aam
cs
xor
mov
pop
out
ljmp
cmp
sub
xchg
inc
arpl
push
fdivrl
mov
pop
lret
jg
outsl
and
jae
and
mov
mov
movsb
push
adc
or
mov
inc
ljmp
stc
push
dec
pop
sahf
decl
ret
mov
mov
jmp
shll
dec
mov
and
scas
loope
movsl
xchg
fcmovu
or
mov
shr
sub
pop
mov
enter
stos
fucomip
mov
mov
and
aad
jecxz
std
in
jle
mov
xlat
or
pop
repnz
das
dec
inc
mov
ret
cmc
sbb
daa
inc
data16
call
insl
adc
mov
cld
lods
lcall
xor
lcall
ss
push
lret
adc
jge
sub
fstps
push
push
lods
add
jecxz
das
push
popa
push
fcompl
sbb
test
cmp
jecxz
jecxz
insl
aaa
cmp
dec
push
push
jecxz
adc
cmp
or
adc
fisubrl
add
divl
movsl
bound
add
mov
test
test
add
adc
shrb
mov
lock
sub
fstpt
insl
pop
mov
pop
sbb
or
inc
add
and
or
adc
adc
fwait
and
fisttpll
jge
pop
pop
sar
add
jb
sahf
jo
xor
decl
sub
dec
fmull
mov
add
scas
stos
stos
mov
push
insl
and
jmp
dec
inc
or
std
xchg
and
insl
or
packssdw
xor
mov
ret
push
mov
push
or
rcr
bound
adc
stos
sub
mov
faddl
adc
add
xchg
xor
hlt
xor
insl
dec
dec
cmpsl
cmp
sub
inc
cmc
ret
jecxz
jecxz
sbb
rcrl
add
xchg
inc
and
rorl
sarb
inc
jg
data16
das
sbb
dec
add
dec
sbb
in
mov
xor
add
cwtl
pushf
push
sbb
decl
jno
sbb
pusha
mov
test
inc
testl
add
mov
add
jmp
lret
xorl
insb
fs
enter
mov
enter
jnp
addb
cmp
pop
ljmp
xor
lock
pop
sub
sar
aaa
mov
rcrb
xor
inc
cwtl
mov
mov
dec
inc
data16
orl
xchg
jb
jbe
mov
pop
inc
cmpsl
pop
mov
push
add
mov
out
adc
mov
add
clc
mov
mov
roll
cmpl
das
mov
notl
mov
adc
adc
or
inc
jg
ret
or
dec
sub
jno
push
dec
jg
mov
add
and
test
mov
nop
mov
psubb
subb
jle
xor
call
pop
andb
add
pop
call
movsb
mov
das
fcompl
adcb
xlat
lock
dec
mov
adc
dec
xor
test
pop
je
in
jecxz
ror
test
push
aaa
cld
jecxz
mov
lock
into
cltd
xchg
idiv
sti
scas
inc
imull
sbb
mov
das
std
out
test
xor
loopne
fstl
addl
mov
push
daa
jge
or
mov
fwait
mov
imul
mov
inc
pop
subl
imul
mov
stc
stc
dec
mov
pop
rcrl
push
push
pop
ret
sub
mov
out
or
push
jl
mov
inc
aad
add
pop
aaa
inc
xor
test
mov
call
stos
cmpsb
bound
pminsw
fsubrl
insl
stos
daa
int3
push
jge
or
and
aad
aam
fs
push
adc
or
fstpl
fildl
lods
or
inc
xchg
cmp
rcll
adc
mov
je
push
add
add
hlt
push
adc
pop
int3
pushf
lcall
pop
add
fwait
lea
loopne
add
adc
xor
and
test
add
xor
jae
fnstcw
shl
mov
ret
xor
icebp
inc
rcrb
mov
mov
int3
rorb
shrb
dec
sbb
lods
shll
sbb
and
push
xor
push
outsl
inc
sti
pop
addps
add
popa
ret
sub
mov
filds
int3
sub
jbe
arpl
and
mov
or
push
ljmp
bound
xor
cmp
fsubrs
pop
fwait
xor
lret
test
les
sub
xor
jmp
bound
sub
adc
movsb
add
adc
and
in
sub
in
mov
xchg
or
push
stos
xchg
add
daa
ret
test
popa
insb
in
fdivrp
insb
push
mov
inc
cli
imul
add
mov
cld
xchg
fdivrl
icebp
data16
mov
les
fwait
push
jp
inc
aas
sub
hlt
sbb
fs
cmc
fsubr
adc
shlb
rcrl
outsb
push
punpckhdq
inc
cmp
outsb
enter
adc
test
or
pop
and
ja
cwtl
add
add
les
sub
pop
stos
sub
xorb
js
dec
xlat
ljmp
cld
lahf
mov
inc
jp
sub
fiadds
insl
cld
nop
adc
insb
bswap
xor
add
repz
mov
sbb
and
call
fisubrl
mov
imul
les
and
push
cmp
mov
xchg
fcoml
clc
pushf
insb
mov
and
mov
mov
pop
ss
and
xor
xlat
push
les
lods
xchg
jle
xchg
stos
out
inc
push
or
sub
dec
pop
mov
pushl
sahf
inc
stos
nop
aad
sbb
pop
rol
dec
nop
adc
stos
xchg
clc
pop
sub
int
lret
cmp
das
jne
enter
loop
and
std
fidivl
testl
mov
push
add
cld
sbbb
das
scas
inc
inc
jge
out
xor
xchg
mov
loop
add
pop
bound
xor
push
adc
push
adc
xchg
inc
push
jae
adc
push
stos
stos
fisubrl
adc
or
cld
test
push
xchg
pop
loopne
jne
adcl
sbb
rcrl
cld
mov
rcl
cli
pop
pop
out
mov
inc
jns
push
outsl
push
xchg
pop
sbb
rcr
outsl
adc
cmp
add
push
and
js
test
mov
ds
out
push
aaa
pusha
andl
or
outsb
jge
sbb
divb
or
mov
out
cmc
inc
adc
cwtl
adc
das
mov
mov
jg
mov
mov
out
mov
mov
cwtl
pop
sub
cmpsb
push
adc
jb
outsl
adc
jge
dec
mov
push
movsl
cmp
push
mov
clc
test
push
jecxz
into
rorb
jg
das
inc
in
dec
cmp
ficoms
xchg
inc
xor
push
jmp
clc
lret
lcall
and
sbb
or
stos
mov
add
pushl
adc
data16
aad
rolb
xor
test
ret
std
fwait
dec
sbb
jl
sbb
push
and
cmp
ljmp
xchg
mov
in
jmp
cmpb
pop
dec
xchg
scas
pop
pop
ja
call
les
les
lcall
add
sbb
sub
add
in
dec
dec
fisttpll
pop
mov
and
les
hlt
test
adc
push
sbb
je
popf
jg
push
sbbb
int3
popf
jnp
xchg
xchg
call
insl
aaa
test
push
pop
sub
data16
mov
rorl
lmsw
int
pop
mov
cmp
add
sub
dec
aas
loop
nop
and
das
adc
xchg
dec
lret
int
or
daa
jecxz
sub
ds
xchg
jo
insb
xor
and
sbbl
int3
into
lods
mov
add
or
int3
fiadds
sub
cmp
repnz
and
loopne
ss
pop
lcall
push
or
scas
imul
outsb
fbstp
leave
rcl
push
jae
sub
inc
shll
mov
aas
add
and
lods
xchg
add
xor
addr16
and
mov
adc
jl
repnz
xor
negb
cli
out
sub
cltd
inc
out
rcrb
enter
inc
cmp
cmpsb
insb
sbb
adc
roll
inc
in
push
jne
hlt
inc
rcll
jp
cmpl
push
add
and
push
sub
mov
movsl
push
aaa
mov
mov
test
iret
push
dec
cld
sbb
shr
xlat
and
dec
std
adc
and
dec
pop
sti
xor
inc
stc
or
sub
mov
inc
rcrl
test
orb
ficoml
mov
popf
outsl
fucomi
or
fsubrs
push
and
insl
adc
fdivrs
inc
out
xlat
jo
clc
push
inc
mov
mov
test
popf
adc
pop
call
sbb
fcomi
call
data16
inc
rclb
test
push
dec
leave
into
ljmp
cmpsl
or
mov
pushl
iret
mov
fimuls
xchg
lds
aaa
loopne
and
or
stos
inc
xchg
mov
and
and
inc
add
pop
leave
pop
std
mov
inc
push
mov
imul
and
mov
bound
mov
jo
ret
cmp
mov
addr16
and
adc
cs
mov
mov
stos
add
or
pushf
frstor
or
jp
dec
sbb
sbb
fisttpl
mov
push
fcompl
imull
adc
pop
sahf
mov
push
loopne
insl
jb
cmc
mov
fcmove
insl
fdiv
inc
and
sub
pop
mov
mov
sbb
in
fnstenv
or
lcall
and
icebp
xchg
inc
outsb
les
mov
jne
pop
ss
bound
stos
cmp
iret
aad
nop
mov
jbe
ss
shrb
push
pop
mov
sbb
adcl
adc
bound
sahf
shlb
cs
pop
iret
cmp
or
ss
mov
push
pusha
fs
dec
repnz
test
test
call
test
add
xchg
fwait
stos
jp
sub
stos
ljmp
iret
pop
or
xchg
fbstp
insl
lahf
stos
push
andps
cli
xor
and
pop
xorb
loopne,pn
xor
sbb
mov
dec
dec
jb
ret
inc
out
inc
movsl
les
insl
ret
cwtl
dec
sub
cmp
sub
push
cltd
jno
push
aam
imul
xor
inc
jmp
sub
fsubl
add
outsb
negb
add
cmpl
mov
jbe
js
sbb
push
pushf
xor
or
inc
dec
ret
mov
shll
sub
dec
cwtl
sbb
lods
xchg
test
test
xor
mov
jns
push
pop
add
rcll
mov
insl
xor
into
out
jmp
inc
ja
mov
dec
push
pop
push
inc
xchg
add
jnp
adc
sub
ret
outsb
cmpsl
mov
mov
cmp
sar
int3
jb
clc
pop
inc
out
jle
outsl
or
inc
inc
outsl
cmp
and
mov
clc
xchg
sarl
push
sahf
sub
clc
push
xchg
pop
push
add
mov
pop
mov
fnsave
sbbl
in
mov
enter
push
push
xor
incl
jge
push
cmp
fimuls
mov
decl
scas
sti
add
mov
jle
xor
test
das
mov
rclb
mov
push
mov
mov
jmp
outsl
das
mov
pop
icebp
outsl
add
hlt
mov
pop
insl
std
repnz
test
cmp
push
adc
add
call
mov
into
cltd
call
lret
fldl
mov
lock
mov
push
mov
jnp
xchg
mov
mov
jo
stos
popa
ret
lahf
dec
rolb
mov
and
sbb
cs
mov
stos
or
sbb
jg
cmp
or
dec
mov
xchg
adc
shlb
jg
mov
xchg
add
push
aas
cwtl
daa
enter
incb
lods
inc
cmp
repz
push
push
scas
and
aaa
andb
test
and
cmpsb
mov
jo
test
sbb
mov
mov
and
jno
rorb
xchg
je
into
fbld
je
cld
out
iret
out
loopne
mov
xor
fadds
jmp
inc
or
outsb
sub
and
or
out
daa
inc
mov
dec
sbb
jl
pop
xorl
mov
ja
xchg
adc
das
sub
xor
inc
mov
push
and
fmuls
sbb
cmpb
sbb
incb
cltd
test
and
pop
xchg
clc
sbb
dec
repz
rolb
dec
add
in
call
xchg
loop
cmp
or
xchg
jbe
fwait
insl
xchg
adc
fninit
es
push
cmp
dec
mov
adc
adc
dec
lods
pop
pop
negb
in
mov
add
dec
test
adc
cld
jns
mov
test
dec
shrb
xlat
ret
dec
daa
adcb
mov
xor
push
fcmovbe
pop
arpl
cmp
jo
insl
fcompl
or
ljmp
inc
and
push
mov
sub
jbe
outsl
sub
adcb
cmp
pop
sbb
push
cs
xchg
rcl
pop
js
mov
aas
and
cli
jne
movsl
or
pavgb
les
cmp
mov
xchg
push
ds
cld
mov
mov
fiaddl
icebp
xor
shll
fldl
or
shr
mov
cmp
fstpt
inc
out
insb
mov
dec
into
dec
int3
in
mov
fsubr
mov
mov
mov
and
cs
mov
lret
lret
outsb
andl
sbb
mov
cmp
inc
or
sbb
sti
push
push
mov
cld
pop
sbb
pop
and
jmp
jo
arpl
push
daa
mov
mov
mov
add
or
or
orb
or
fwait
add
and
sbbl
push
daa
outsb
inc
hlt
pop
jge
adc
xor
adc
bound
add
or
mov
fmuls
mov
inc
movsl
cmpb
cwtl
push
mov
jnp
jb
int3
add
outsb
ss
adc
int3
sub
adc
pop
pop
shlb
rcll
pop
cmc
or
aad
into
dec
adc
rorb
and
push
shlb
mov
jo
or
lock
sbb
add
sahf
and
ja
xchg
sub
mov
pusha
inc
int
cltd
lcall
loop
ds
adcb
cld
mulb
pop
cmp
and
js
cwtl
shrb
mov
faddl
jecxz
orl
stos
popa
push
xchg
bound
adc
add
cmp
in
out
add
loope
insb
or
inc
jnp
daa
or
scas
sbb
or
fidivl
popa
pop
fdivrs
sub
dec
or
jge
enter
push
inc
int3
push
loope
mov
cltd
pushf
xor
fstpl
pop
es
iret
mov
adc
enter
mov
and
pop
cld
es
addb
sbb
cld
inc
inc
int
adc
or
addb
jb
dec
inc
and
into
popa
sbb
and
adc
xchg
mov
sbb
xchg
mov
jne
dec
add
lock
pusha
pop
inc
movsl
push
adc
pop
addl
xchg
dec
jae
call
add
push
cmp
push
xlat
or
pop
out
mov
or
mov
add
add
sti
xchg
adc
and
fists
jnp
stos
add
mov
or
sbb
clc
rcl
jecxz
aad
daa
sahf
xchg
adcb
add
sub
inc
jns
mov
mov
inc
sub
adc
in
adc
and
es
add
dec
mov
adc
and
push
mov
sbb
fcomps
cwtl
adc
rcrb
lret
inc
push
jmp
cltd
push
repz
jp
mov
xchg
mov
les
cmp
xorb
xchg
rclb
je
and
cld
pushf
lahf
pop
jg
or
mov
mov
js
dec
test
jo
mov
mov
push
cmp
pop
and
jnp
add
adc
movsl
jmp
add
les
arpl
inc
das
mov
xchg
push
push
dec
les
sub
mov
mov
inc
lgdtl
add
shlb
faddl
push
mov
decl
dec
ret
popf
fdivr
cli
fmull
add
in
loop
ljmp
xor
mov
and
cmp
pop
fsts
add
std
insb
scas
lcall
or
pop
lock
sbb
out
add
push
xor
shlb
dec
xor
in
fdiv
pop
add
arpl
lds
fadd
aam
xor
push
sahf
mov
pop
xlat
add
adc
adc
out
lds
imul
aaa
lds
push
sti
or
add
push
das
adc
cmpsl
and
and
das
shrl
adc
movsl
fs
stos
test
pop
push
icebp
dec
mov
cmp
sbb
push
xor
loopne
test
pop
cmpsl
je
adc
xchg
mov
in
xor
aad
ja
push
mov
xor
adc
pop
lock
cli
dec
mov
sub
loope
mov
outsl
test
and
add
pop
cmpb
sbb
pop
add
pop
push
push
pop
stos
xchg
pop
into
jo
data16
jno
out
out
movsl
adc
call
mov
xchg
mov
add
lock
xchg
jno
cmp
xor
mov
inc
insb
pop
push
cmp
inc
sub
push
mov
sbb
or
mov
nop
or
pop
sub
stc
sbb
jp
push
cmp
and
lods
pop
mov
jb
cmp
loopne
cmp
dec
fwait
mov
lods
push
sub
jns
inc
jle
lds
inc
push
push
shrb
sub
push
mov
mov
jo
mov
rolb
and
jnp
cmp
or
imul
out
lock
add
or
or
add
jg
sbb
inc
into
dec
cmpsl
jnp
loop
mov
sub
mov
ljmp
and
mov
or
dec
push
cmp
inc
adc
mov
sarl
and
jle
int3
into
addr16
cwtl
dec
mov
incl
andb
dec
mov
lahf
xor
mov
das
inc
add
cld
sbb
dec
push
xchg
cwtl
add
jp
jo
lret
inc
xchg
sub
clc
push
sub
add
sub
test
adc
pop
imul
and
pushf
les
jne
nop
stos
or
ret
aaa
in
ret
sbb
mov
std
movsb
mov
xlat
shll
jl
fdivl
adcb
or
mov
jae
pop
adc
or
push
sbb
les
arpl
rcrl
insl
enter
pop
cld
sub
movsl
mov
cld
push
jno
lcall
cwtl
push
lods
mov
sbb
mov
call
shrl
adc
xor
sbb
es
das
pop
fcmovbe
lcall
lret
xchg
sbb
inc
decl
add
stc
gs
sub
sbb
notb
mov
push
pop
jle
mov
mov
sub
fdivrs
fadds
shll
fwait
stos
bound
mov
xchg
ljmp
add
push
data16
das
mov
xchg
iret
iret
xor
dec
insb
mov
fildl
xchg
sub
cmp
add
divl
loope
incb
testl
cmp
add
or
rclb
nop
push
test
data16
enter
sub
xlat
mov
outsl
adc
int3
add
inc
xor
add
push
clc
pop
inc
xlat
pusha
lock
repz
sbb
into
add
rcrb
cmpsb
repnz
test
sarl
fisubrs
add
out
mov
adc
aaa
ds
bnd
inc
or
sub
sub
lret
inc
roll
mov
mov
sar
jp
inc
stos
pop
mov
repz
cmp
mov
mov
movb
jl
fcmovnb
clc
mov
inc
cmp
shrb
adc
or
shl
add
scas
mov
jbe
push
mov
xor
sub
push
mov
sub
mov
fisttpll
subl
add
js
xlat
cmc
and
jg
imul
fisttps
fcomi
mov
mov
orl
xor
repz
jg
mov
pushf
lret
add
addb
adc
mov
fs
and
lahf
in
data16
fsubrl
les
pop
daa
in
jne
push
push
fisubs
lds
sbb
push
iret
push
dec
jno
adc
fldt
pusha
pop
scas
les
push
daa
fimuls
push
cmp
mov
lods
pop
js
mov
mov
add
and
stos
mov
push
and
inc
or
push
add
jl
sbb
pop
ds
xor
idiv
icebp
cmp
mov
add
sarl
test
outsl
in
daa
mov
pop
nop
cmc
push
jmp
jg
js
popa
jnp
add
mov
testl
lods
shrb
push
adc
jecxz
cli
sub
sub
xchg
mov
lds
jl
jnp
roll
jl
sbb
sub
mov
jle
mov
jl
ret
sti
repz
int3
and
mov
sbb
xor
lret
push
cmp
or
iret
test
mov
mov
fs
push
push
aam
aaa
fwait
dec
dec
xor
push
int
adcl
sub
insl
xor
hlt
es
outsb
or
sub
sub
js
add
cwtl
fsubrs
jecxz
push
pop
jl
push
mov
jl
xor
mov
pop
mov
pop
inc
leave
adc
hlt
mov
imul
fisttpll
dec
inc
aaa
inc
aaa
test
fisttpll
xor
fcmovne
pop
shrl
movsb
dec
xor
sbb
rclb
push
sub
cmp
or
or
mov
ficoms
adc
add
je
add
aaa
cwtl
push
pusha
or
fprem
mov
push
adc
loop
jle
cmpsl
shl
inc
fldl
lret
test
dec
xor
addr16
roll
sub
addr16
icebp
repz
es
sbbb
lea
lock
dec
sbb
scas
add
mulb
add
inc
mov
rorb
pop
inc
stos
adc
adc
cld
and
test
lahf
sbbb
and
in
roll
imul
push
xor
fs
shll
sub
sub
adc
dec
cwtl
mov
loopne
mov
jno
ficoml
ret
and
pop
inc
add
mov
cmp
add
adc
sbbb
and
loop
or
add
stc
stos
adc
ficoml
jl
inc
aam
xchg
add
jo
or
dec
rorl
call
sub
and
add
leave
nop
dec
out
sbb
add
mov
mov
mov
ret
jnp
mov
mov
adc
movsb
stos
push
outsl
rcl
pop
push
push
cmp
push
sub
fcoms
lock
push
push
adc
or
call
adc
scas
jae
out
add
or
xor
push
call
jge
mov
xchg
andb
add
cld
lock
jmp
test
loopne
add
stc
add
add
sti
pusha
push
cmp
mov
js
fisttpl
dec
or
jbe
sbb
jge
jmp
or
orb
jecxz
test
movsl
pop
adc
mov
rcr
loope,pt
adc
aas
fadds
adc
movsb
push
add
cltd
or
cmpsl
cltd
push
inc
outsl
pop
mov
bound
loopne
loopne
cli
dec
add
or
pop
popf
add
insb
hlt
sub
lock
xorb
in
adc
stos
jle
mov
call
clc
or
ret
es
lods
xchg
loope
dec
lods
dec
xor
inc
add
xchg
fcmovnbe
test
sbb
cmp
arpl
add
popa
xor
addr16
add
mov
stos
clc
add
popa
or
out
sub
and
popa
add
out
int3
sbb
cmpsl
fiaddl
fwait
add
cmc
push
movb
movsb
and
aaa
int3
mov
fimull
mov
call
or
inc
jne
inc
arpl
push
lods
enter
and
test
cmp
and
int
xorb
sub
adc
aas
push
sbb
adc
rclb
mov
xor
mov
aaa
ret
icebp
ficoms
nop
mov
adc
or
and
push
outsl
ss
mov
stos
mov
ss
pop
jl
xchg
mov
and
shrl
sbb
xchg
adc
psubd
pop
cmp
mov
mov
call
cmc
stos
cmp
mov
cwtl
lds
test
adc
movsb
mov
xchg
shll
cmpsb
push
xchg
leave
sbb
in
mov
push
fdivrs
out
xor
stc
sub
pop
pop
hlt
inc
aas
mov
fsubl
jmp
lret
ret
addb
and
push
scas
add
andnps
and
in
mov
jmp
add
push
and
fiadds
clc
pop
xor
ja
adc
xor
or
mov
loopne
or
mov
xchg
xchg
adc
add
jo
adc
addl
test
subl
adc
sub
mul
gs
inc
dec
and
scas
push
nop
test
jp
inc
xor
mov
inc
insb
and
repnz
lret
enter
cmp
mov
xchg
cmp
fwait
adc
inc
push
sub
test
add
xorb
push
call
xor
mov
dec
sti
pop
sub
sub
lcall
xchg
in
lds
pop
xor
or
and
lock
sub
xor
push
pop
and
xor
ljmp
stos
add
mov
add
add
repnz
jae
mov
sub
fisttpl
test
lret
dec
js
adc
add
loop
aas
sub
jne
es
mov
push
rorb
cmc
repnz
lods
add
sbb
sub
icebp
mov
std
mov
jmp
mov
into
rcl
add
xor
add
and
add
jmp
aam
dec
loopne
sti
jnp
mov
nop
pusha
and
adc
pop
mov
dec
jo
lahf
dec
xor
jp
mov
das
mov
adc
sbb
mov
cmp
pop
add
sarb
xchg
rcll
jge
dec
adc
test
and
cwtl
lock
imul
jmp
lock
jbe
inc
adc
andl
clc
stos
cmpl
mov
ja
ror
xchg
dec
adc
rolb
shrl
add
jp
or
push
sbb
push
nop
adc
push
scas
xor
mov
dec
inc
adc
and
in
add
jnp
mov
std
mov
cmpb
ds
adc
adcb
dec
or
mov
add
cmp
dec
jb,pt
test
ror
adcb
lret
mov
or
add
add
aas
add
jle
outsb
subl
test
mov
lcall
pop
dec
incl
aam
out
pusha
rolb
movl
xor
aas
sub
mov
mov
cmp
jae
imul
jge
orb
jge
out
imul
or
xor
mov
inc
xor
adc
pop
and
loopne
pop
cmp
fnstcw
pop
or
clc
inc
outsl
in
fisttps
inc
or
jle
add
loopne
pop
jb
mov
flds
out
and
outsl
mov
call
lods
cmp
add
es
add
add
adc
xchg
add
add
aam
int3
mov
jns
add
push
fildll
xor
ret
add
push
add
shr
dec
push
jle
mov
or
ja
cld
das
pop
jg
add
pop
push
mov
inc
add
mov
cmp
add
adc
rclb
icebp
fwait
in
add
inc
je
adc
adc
inc
sbb
adc
ss
xchg
sahf
xchg
or
pop
fldt
adc
add
loopne
in
rorl
add
xchg
adc
popa
nop
ret
and
jo
add
dec
adcb
adc
add
dec
in
mov
sub
sub
rol
arpl
pop
pushf
orb
ret
push
adcb
popf
jecxz
cmp
mov
mov
int3
enter
add
out
frstor
mov
add
mov
aam
lahf
ret
add
scas
stc
fistl
data16
mov
popf
popa
add
add
sub
add
sub
js
call
hlt
sub
int
fcoml
mov
push
add
adc
push
les
mov
inc
mov
test
cmp
das
xor
les
frstor
and
add
daa
cmp
dec
sbb
add
cpuid
adc
push
mov
icebp
call
sub
pop
aaa
inc
loope
in
mov
pushl
gs
out
ja
push
loop
xchg
fwait
pop
lcall
adc
sbb
addb
shl
xor
mov
fstpt
into
popa
mov
pop
jge
fs
mov
push
push
scas
popf
pop
or
outsl
aad
push
jno
jnp
out
xor
ja
xchg
push
loop
pop
inc
inc
shl
xor
outsl
pop
outsb
inc
stos
cmp
cs
mov
pop
clc
jmp
daa
add
lret
and
add
adc
rorl
bound
fbstp
pusha
pop
scas
sbb
movsb
mov
orb
jae
fldcw
ljmp
sti
mov
cli
add
mov
pop
push
inc
sub
sbbb
sbb
flds
sub
mov
lods
or
and
mov
and
lea
rcr
mov
arpl
movsb
jg
xchg
mov
jo
iret
add
addr16
subb
add
mov
jns
xchg
out
cmpsl
cmp
adc
clc
pop
mov
mov
das
pop
xor
lods
cmc
ljmp
adc
in
pop
cltd
xchg
aas
jo
pop
mov
or
dec
jg
push
xlat
int3
outsb
aam
xchg
test
mov
ljmp
push
push
loopne
xchg
test
push
outsb
or
pop
xor
loopne
xorb
mov
or
or
aaa
or
mov
xor
fisttps
hlt
mov
mov
or
mov
mov
movl
inc
cld
inc
push
cld
rcl
sub
sti
xchg
mov
mov
jno
or
cwtl
mov
mov
incl
in
aam
mov
and
adc
dec
or
ja
mov
add
loop
jbe
incb
xchg
push
subb
xchg
lods
mov
jno
not
repnz
add
xchg
push
leave
inc
xor
sub
or
fnstenv
mov
jg
enter
jns
push
push
lret
ds
popa
pop
cli
inc
out
jge
leave
les
pop
and
cs
fbstp
inc
adc
or
roll
rclb
or
jg
push
adc
xchg
pop
jb
mov
mov
dec
shrb
das
jge
sbb
jo
add
and
sbb
add
jns
push
rcrb
add
jge
ja
jp
xchg
into
mov
fsubrs
push
jnp
inc
mov
dec
insl
mov
and
mov
jle
and
aaa
dec
dec
jmp
mov
sahf
push
jb
xor
dec
aas
popa
sub
jnp
mov
jbe
scas
add
test
rcrb
popf
daa
iret
outsb
mov
pushf
jle
daa
xchg
ja
xor
ja
lahf
imul
sub
xor
das
mov
mov
movsl
ss
pop
iret
in
cmp
sbb
push
mov
sub
call
cmp
mov
ret
add
jb
shrb
in
fisttps
mov
mov
lret
push
mov
pop
shll
mov
outsl
sub
shrb
push
mov
lods
cmc
mov
jmp
pop
gs
lret
dec
fistpll
and
popa
inc
movsb
loop
test
mov
sbb
xchg
insb
fcmovnb
xor
bound
test
push
icebp
pop
push
outsb
inc
movsb
ret
test
mov
pop
loopne
or
or
into
cwtl
add
ret
adc
loop
and
lret
sbb
mov
add
inc
xorb
pop
cmp
push
push
cld
jmp
pop
adc
mov
jmp
adc
xor
push
jne
xchg
bound
clc
mov
popf
add
cmp
mov
ficoml
xlat
stos
mov
dec
nop
sub
shl
mov
push
sahf
icebp
movsl
and
xchg
popf
or
mov
push
hlt
push
loop
cmpsl
loopne
inc
push
aam
fmuls
push
rcrl
add
cmp
popa
cwtl
lods
lret
cwtl
bound
dec
push
jg
aam
push
lock
or
add
fisubs
in
stos
jbe
jl
xchg
or
xor
andb
add
adc
and
cmp
push
pop
mov
aad
aam
in
les
rorb
loopne
mov
add
les
sbb
call
adc
les
or
lods
outsl
cmp
add
test
inc
lret
rolb
xlat
rolb
ljmp
push
notb
aam
sub
outsl
adc
inc
sbb
push
inc
iret
lock
vmwrite
es
in
adc
mov
jl
andb
rorb
hlt
sysexit
sub
cs
push
add
xchg
sbb
addl
pusha
fucomip
sbb
mov
fwait
sub
fmuls
inc
adc
xor
xor
inc
fcoml
adc
lret
cmp
add
test
push
push
mov
and
lcall
mov
pusha
jmp
cwtl
xor
inc
int3
shlb
add
pop
pop
mov
add
adc
mov
fwait
pop
mov
lret
in
pop
pop
loopne
call
xchg
xchg
dec
cmp
daa
call
sub
test
cmp
add
inc
cmp
lods
std
test
adc
adc
pop
dec
jmp
pop
lods
mov
or
aaa
add
call
pop
add
loope
jbe
mov
cmp
push
rclb
aam
mov
push
jg
inc
inc
fwait
int
add
cmc
lcall
dec
push
mov
std
js
sub
sub
hlt
dec
out
not
aas
and
mov
ficoml
and
adc
sbb
ffree
jp
sub
mov
fcoml
ret
je
test
pushf
jmp
lahf
and
lret
orb
xor
lret
rclb
inc
rolb
clc
dec
loope
or
cld
mov
jle
jbe
test
jmp
jmp
inc
adc
pop
int
clc
dec
popf
mov
push
or
dec
cwtl
addb
rolb
jmp
pop
push
hlt
or
or
orb
faddl
push
popa
push
scas
mov
push
mov
push
leave
notb
xor
and
lock
jbe
stc
mov
ss
jnp
dec
mov
or
mov
jnp
sbb
pop
cwtl
adc
dec
or
mov
xlat
xchg
and
mov
pop
push
js
dec
daa
lock
fcoms
mov
lret
mov
adc
cmpsb
xorb
sbb
in
roll
pop
test
stc
lock
dec
popf
dec
and
repz
js
mov
add
xchg
andb
dec
arpl
les
fisubrs
fldt
jl
loop
shlb
adc
sarb
pop
jbe
sbb
mov
les
rorb
cmp
movsb
xchg
mov
sar
int3
into
mov
sub
dec
lods
dec
push
je
xchg
fstpl
sub
negb
rorl
lds
push
mov
cltd
sysenter
adc
add
add
and
loope
faddp
clc
adc
pop
gs
mov
jns
insb
shrb
imul
xor
sbb
mov
push
inc
mov
cli
ret
pop
in
add
adc
adc
or
gs
pop
mov
rolb
sti
mov
or
in
ret
loopne
jmp
test
sbb
mov
adc
mov
cwtl
in
add
aaa
mov
cmc
sbb
dec
jb
or
adc
or
addl
movsl
stos
pop
mov
xor
mov
out
push
push
pop
add
inc
mov
stc
test
in
pop
mov
adcb
loop
mov
and
pop
adc
data16
mov
rcrb
pop
sub
insb
and
ja
add
sbb
scas
test
rclb
cmp
lods
into
dec
and
sbb
data16
stos
sub
iret
insl
addr16
ret
out
inc
adc
call
sub
jg
stc
prefetcht1
pop
xchg
xchg
loope
loope,pn
or
lcall
or
sti
subl
mov
cmc
and
insb
out
frstor
sub
into
addl
mov
push
or
push
xchg
jae
clc
adc
pop
xchg
xor
ss
dec
push
add
or
mov
jmp
xor
mov
stc
mov
adc
orb
cli
nop
mov
push
jmp
xor
fsubr
mov
xlat
jmp
or
push
mov
sbb
fidivs
js
and
or
cmc
pop
adc
notl
push
inc
leave
int
sti
leave
or
fiadds
pop
lret
inc
rcll
push
adc
mov
mov
loope
int3
inc
push
test
jbe
lock
daa
dec
xor
and
mov
out
cmpsl
mov
sarl
mov
idivb
inc
shll
cmp
or
movsb
ficoms
push
mov
stc
inc
test
fnstcw
insl
shl
add
add
mov
lods
aad
orb
nop
dec
rorb
lea
out
repz
mov
sbb
sub
hlt
inc
sub
cmc
push
or
leave
jmp
sub
and
mov
sub
idivl
mov
push
scas
pmaxub
push
aam
mov
icebp
mov
mov
mov
and
shll
add
sbb
mov
ficoms
push
push
push
movsb
mov
filds
aas
fldcw
sub
and
mov
push
fucomip
sti
fucomip
sbbb
add
mov
arpl
cs
cmpsl
dec
adc
inc
push
imulb
outsb
or
int3
and
sub
std
enter
or
and
add
fidivl
adc
push
outsl
or
lret
adc
daa
push
test
inc
insl
fimull
jecxz
sub
jae
push
add
loop
icebp
or
sbb
mov
add
inc
orl
rcrl
cmp
in
mov
mov
rclb
sbb
aam
mov
imul
push
outsb
cmp
out
stc
cmpsl
je
adc
adc
inc
push
ficomps
sti
fists
mov
dec
shll
in
pop
add
cltd
test
mov
sahf
or
hlt
sbb
or
pop
lahf
or
dec
jo
cmp
ja
mov
insl
add
pop
stc
popf
loopne
xor
xor
outsl
test
jae
ja
xchg
and
sbb
mov
jg
or
pop
push
adc
cmp
sub
inc
lret
inc
dec
push
aaa
jmp
movsb
add
cli
lret
pop
movb
rcr
test
ja
loopne
jp
sub
xlat
lret
test
and
jo
mov
mov
out
mov
pop
je
mov
xchg
adc
or
inc
adc
fistps
sti
arpl
lods
push
push
test
push
das
mov
cmp
inc
lods
jp
dec
roll
or
push
cmp
ficoms
xchg
add
loopne
stos
popa
dec
pop
rcll
in
xor
fldenv
xor
sub
push
test
ja
cmp
xor
fcoms
mov
adcb
rorb
push
iret
repz
push
int3
and
cmp
pop
lcall
test
and
rcrb
and
xchg
cmc
loope
arpl
jbe
stc
les
jle
shr
or
inc
mov
mov
es
mov
adc
cmp
jb
cmp
jg
popa
inc
cmpsl
cwtl
push
sbb
adc
int
lret
mov
jle
mov
negl
pop
and
sbb
loope
outsl
cs
mov
mov
movsb
or
cmp
adc
inc
cld
pop
test
mov
stos
shlb
jo
and
loopne
movsb
dec
mov
pop
lcall
test
add
sub
cmp
ret
clc
sub
es
sub
sbb
push
push
rorb
xor
mov
fs
outsb
sbb
xor
aam
jmp
and
fildll
xchg
daa
mov
in
cltd
pushf
in
pop
push
and
sbb
sub
ffreep
bound
mov
loope
cmp
cmp
ret
dec
aas
sub
fwait
mov
rcrl
test
mov
call
inc
push
mov
cli
add
jae
mov
cmp
mov
and
ret
cmp
imull
outsl
out
jmp
xchg
je
add
out
movsb
lcall
add
loopne
out
cmc
incl
adc
out
jae
sbb
lock
xchg
xchg
fildll
loopne
stc
fildll
xor
sub
cmpsl
pop
les
loope
pop
push
xor
xchg
jo
mov
insl
push
inc
popf
sub
inc
push
add
aad
add
mov
dec
cmpsb
mov
or
cmp
and
aam
dec
stc
mov
inc
adc
lock
adc
les
std
push
flds
push
sbb
andl
movsb
mov
mov
and
cli
push
fmull
mov
cmp
popa
push
nop
jbe
int3
data16
add
add
sub
xor
or
mov
in
pop
sbb
inc
xor
sub
adc
dec
bound
data16
popf
icebp
inc
mov
or
scas
mov
cwtl
mov
scas
mov
mov
insb
fbstp
outsb
data16
dec
add
cmp
mov
imul
xchg
mov
dec
mov
add
push
pushf
or
add
and
push
pusha
rol
cli
mov
push
mov
ljmp
lock
xor
fcmovb
andl
cmc
mov
and
or
or
jbe
mov
movsl
jmp
stos
sub
push
sbb
cld
pop
aam
enter
aam
es
adc
push
test
pusha
push
out
je
mov
call
adc
inc
ret
fistpll
je
aad
ficomps
icebp
add
roll
or
or
sub
inc
jmp
shlb
xor
scas
or
or
stc
fsubl
xchg
mov
adc
fwait
inc
int3
xor
jmp
pop
aaa
out
xchg
or
sub
xorl
add
cld
pushf
push
mov
sub
cwtl
mov
cmp
jns
repz
rorb
data16
pop
lds
sbb
jle
pop
pop
adc
inc
mov
je
xor
mov
addr16
push
xchg
xchg
aam
push
xchg
add
or
lret
in
pushf
xor
jns
dec
imul
in
sub
cmp
daa
dec
inc
jno
pop
imul
or
mov
loopne
ja
push
test
pop
test
push
jns
cmpsb
mov
sbb
rorl
mov
cmp
add
ja
sahf
pop
rcr
ret
fs
jge
ret
bound
shll
push
bound
ret
push
push
fs
or
add
outsl
lods
pop
cmp
jbe
outsl
mov
add
fbld
mov
pop
lods
fsubp
shrb
rol
add
rcrb
pop
cmp
push
xchg
daa
insb
xor
imul
jecxz
ret
pop
pop
popf
pushf
mov
test
inc
add
dec
and
aam
and
cwtl
shlb
inc
jge
xchg
mov
icebp
adc
push
xchg
xor
cmp
aam
lret
sahf
fmull
rolb
js
cld
gs
cmp
bound
pop
push
pop
test
pop
loopne
shlb
mov
xchg
imul
inc
mov
in
ds
adc
add
test
push
cli
dec
inc
movsb
mov
imul
les
rolb
push
mov
shrb
adc
xor
iret
sub
cmpb
xor
loope
pop
and
inc
sub
aam
mov
in
stos
icebp
or
jns
jecxz
mov
jne
sub
scas
aam
pusha
pop
lods
xor
xor
sbbb
and
sbbb
dec
sbb
ficomps
test
adc
cmovl
pop
movsl
sbb
leave
sub
aas
push
push
sub
imull
fimuls
shrl
sbb
or
and
inc
and
pop
mov
jmp
addr16
bound
vpunpcklqdq
sub
les
aam
scas
cmpb
sbb
inc
add
dec
loopne
add
lods
pop
inc
loop
adc
jne
lcall
mov
scas
sub
repz
pop
cld
shlb
pop
movsb
arpl
lock
push
mov
xchg
mulb
mov
cmp
out
cmp
rcrl
pop
jmp
test
dec
add
cmp
popa
jno
pushf
mov
gs
dec
push
sbb
dec
adc
mov
xchg
and
mov
sti
les
dec
inc
daa
lods
adc
lret
pop
test
dec
add
or
add
int
pusha
push
and
dec
shll
xchg
loopne
das
pop
popf
fwait
jge
sub
pop
add
aam
daa
pop
cmp
stos
and
xor
dec
hlt
cmp
jbe
push
or
push
insb
cmc
xchg
fsin
aam
shrl
popa
and
and
ret
cmp
jge
pop
jmp
imul
jnp
dec
or
subl
push
mov
sbb
cwtl
cmp
sbb
add
jb
add
adc
in
divb
sbb
outsl
jg
sub
sub
loope
jo
jns
icebp
adc
neg
dec
jne
jge
add
mov
movsl
mov
out
cmp
jne
test
fiadds
bound
push
dec
jb
cmp
cmp
cmpsl
adc
pushf
mov
in
or
mov
sarl
dec
rclb
scas
dec
popf
andb
fistpll
mov
fcompl
fcomip
hlt
add
lcall
dec
fwait
popf
inc
rorb
les
mov
sub
std
pmaddwd
mov
inc
out
into
xor
sub
push
pop
lahf
mov
jg
mov
insb
pop
addb
pop
test
not
mov
jecxz
pushl
push
stos
lcall
outsb
int
das
push
mov
loope
push
stc
shlb
sub
push
xor
mov
es
xchg
lcall
or
adc
or
and
in
cld
jo
push
inc
xor
sbb
in
popf
mov
inc
dec
jge
test
ss
and
aad
mov
insb
jge
inc
mov
or
add
sbb
dec
imul
push
loopne
inc
cmp
sub
cmp
jbe
mov
mov
sbb
loopne
push
fmuls
xor
pop
shll
faddp
popa
add
hlt
std
and
andb
mov
xor
xor
xchg
or
les
aam
pushf
andnps
shrb
addr16
pop
sarb
ret
push
loope
ret
out
aam
or
or
jno
fiadds
pop
icebp
mov
sbb
roll
dec
mov
mov
pop
fnstcw
mov
fisubrs
sub
mov
sahf
lea
push
push
push
sub
xor
lea
jno
jb
push
lods
and
jmp
ret
xorb
je
shrl
dec
adcb
test
es
push
movsb
dec
lcall
pop
aad
test
pop
jg
mov
iret
and
xor
in
and
jne
jmp
or
adc
lock
cli
push
cwtl
pop
jo
ss
lock
pop
adc
mov
xor
cmp
add
inc
add
roll
lds
sti
push
test
mov
in
out
jbe
adc
adc
lds
fs
test
and
xor
push
jo
insb
pop
xor
es
pop
loop
dec
in
xor
cwtl
test
das
dec
mov
sbb
clc
mov
pop
cmpsl
dec
shrl
sbb
mov
sbb
jecxz
loope
daa
insb
lock
adc
and
adc
jne
pop
lea
icebp
and
std
inc
jnp
xchg
xchg
hlt
inc
mov
pop
shrb
aad
mov
cwtl
or
insl
jno
jns
mov
cld
neg
jle
push
push
sbb
cmp
inc
enter
in
sub
add
gs
and
sbbb
mov
add
pop
jmp
notl
in
jb
mov
lcall
cli
mov
pop
jl
add
cmp
ja
or
mov
adc
test
icebp
and
ret
mov
dec
rcrl
js
repz
test
cmpl
aas
jbe
jne
mov
pop
mov
cmp
les
and
mov
lods
sbb
add
mov
insl
mov
mov
popf
or
mov
call
enter
roll
mov
leave
test
sub
sbb
push
add
or
inc
push
icebp
jnp
push
xchg
add
pop
icebp
adc
sub
and
jne
cmp
stos
test
inc
andl
ljmp
jmp
jmp
lods
inc
cmc
andb
cmp
xchg
jbe
faddl
into
add
bound
push
mov
enter
inc
int3
call
arpl
jae
adc
sbb
jbe
add
add
repz
js
addr16
xor
mov
arpl
test
pop
hlt
xor
int3
push
data16
ror
cwtl
icebp
lahf
sbb
push
test
jae
es
sti
movsl
inc
shlb
sbb
ljmp
dec
mov
sbb
inc
das
jb
xlat
mov
add
hlt
pop
cwtl
addr16
jno
inc
fsts
mov
pop
sub
in
lods
push
inc
dec
xchg
and
shl
aam
mov
jnp
call
sub
call
sahf
pop
and
jp
fst
testb
fnstsw
sti
scas
push
cwtl
inc
ss
daa
cmpsb
cmp
test
fists
cwtl
subb
outsl
or
daa
popa
sbb
xchg
sub
lds
inc
mov
jmp
pop
xchg
dec
adc
fs
cmp
jp
or
mov
sbb
sarb
in
je
les
je
iret
and
add
xchg
mov
push
mov
xchg
add
or
or
and
jb
push
push
les
jae
int3
cmp
mov
or
add
fists
dec
adc
cld
xchg
or
test
mov
inc
xchg
out
sbb
clc
aas
sbbb
daa
jg
jp
jmp
jle
rol
pushl
mov
or
push
sbb
pop
inc
insb
adc
ffree
or
push
sarb
jo
fld
push
add
dec
push
out
sub
add
mov
xchg
div
cmp
xchg
mov
stos
jo
xchg
mov
push
enter
jg
movsl
inc
in
imul
sub
cmpb
popl
or
pusha
es
push
mov
sub
add
cmp
outsb
sbb
sbb
outsb
push
inc
call
andb
xchg
add
or
and
push
cltd
sti
xor
test
idiv
sub
dec
inc
push
add
daa
add
adc
call
or
push
repnz
jl
xor
fwait
add
add
sub
mov
add
js
arpl
and
or
iret
push
push
mov
mov
push
pop
shlb
mov
aas
loopne
sub
fldt
add
xor
call
mov
mov
ficomps
fisttpl
or
and
add
sahf
mov
add
jae
mov
add
sub
adc
dec
cmp
mov
lcall
sub
js
aaa
or
pop
ljmp
jl
popf
xor
add
mov
adc
ficomps
mov
fisubl
pusha
add
push
test
xor
and
cld
add
gs
cltd
loopne
mov
fs
dec
lret
stc
mov
sub
jmp
nop
adc
rol
cli
rcl
sbb
mov
mov
dec
sbb
sbb
push
mov
or
popa
test
add
mov
mov
jmp
sub
pop
ja
jle,pn
js
add
mov
fstpl
fstpl
or
stos
add
dec
pop
sbb
or
roll
jns
fcomp
fcmovu
sub
mov
xlat
adc
hlt
push
add
jp
test
and
add
cmp
in
stos
add
aad
mov
adc
test
shlb
ret
add
dec
mov
push
add
sbb
or
and
jge
add
fmull
ret
ljmp
aas
scas
sub
fldenvs
sbb
scas
test
mov
cmpsl
lods
and
test
decl
lea
sub
mov
sbb
jae
stos
ret
mov
mov
aaa
jle
and
decb
lods
jo
sub
and
or
test
out
fnstenv
faddl
push
xorb
in
xchg
sub
outsl
decl
jb
jo
and
and
in
pop
xchg
lret
and
mov
incl
or
cltd
cmp
sbb
roll
mov
pop
pusha
jb
icebp
test
jg
adcb
in
pop
ds
loopne
adc
mov
aaa
mov
add
mov
mov
call
mov
adc
add
pushf
js
cmp
cld
pushl
mov
test
jecxz
inc
pop
fadds
in
pop
stos
aaa
cli
sbb
call
adc
bound
adc
test
add
lahf
push
cld
cmpsb
jmp
and
cmpl
std
cmp
loop
clc
outsl
add
mov
and
dec
add
add
cmp
popf
xlat
sub
loop
cmp
push
or
into
outsl
pushf
xchg
push
xor
adc
adc
adcl
cmc
nop
shlb
pop
inc
sarb
pop
subl
mov
xchg
jp
mov
lret
add
sub
repz
test
ss
stos
loop
inc
push
sbb
orb
inc
shr
dec
les
sub
nop
xor
orl
outsb
lret
mov
das
mov
rclb
adc
sbb
add
pop
insb
enter
mov
xor
hlt
sbbl
add
cmp
leave
adc
dec
inc
aam
pop
pop
ljmp
push
js
xor
in
jl
push
mov
push
mov
mov
xor
add
nop
mov
aam
cmp
into
iret
pop
push
pop
mov
cmp
lret
int3
sub
in
xor
shlb
inc
adc
mov
ret
ficoms
aaa
sub
xchg
add
or
or
and
clc
add
add
pop
adc
adc
and
aam
mov
mov
das
mov
adc
bound
movl
xor
cmc
sub
and
mov
or
push
jge
add
dec
add
fchs
dec
mov
hlt
fldcw
and
insb
ret
add
sbb
cmp
icebp
xchg
icebp
push
aad
jmp
jb
cld
add
fwait
aam
add
adc
mov
stos
mov
rep
loopne
sub
adc
pop
push
shll
roll
xor
popa
popa
push
leave
icebp
xor
mov
inc
call
lods
mov
loopne
inc
and
xlat
and
add
mov
mov
in
in
movsl
pop
mov
fsubs
je
mov
loopne
decl
sbb
dec
les
fstps
jb
xor
lock
call
xor
subb
jne
add
fstpl
mov
enter
cmp
inc
and
jmp
or
cmpsb
xor
loope
add
aad
or
fnstsw
jmp
orb
mov
ljmp
scas
fnstsw
dec
add
stc
aad
cmp
scas
loopne
insl
outsb
dec
mov
jmp
xchg
sub
lret
add
inc
inc
outsl
mov
ljmp
sbb
mov
sub
push
rcr
mov
stc
sahf
sbb
push
mov
repnz
and
sub
jg
dec
push
add
jg
cmpsb
cld
and
jmp
rcrl
and
adc
loope
xor
dec
inc
adc
test
jge
add
mov
lods
sub
sub
pop
cmp
decl
push
call
cmpsb
movsl
mov
in
sbb
out
cmp
mov
cmpl
xor
lret
fcmovnu
jg
jnp
add
ret
into
sbb
movsb
push
fidivrl
inc
scas
enter
jns
daa
int
push
push
dec
test
or
inc
dec
dec
sahf
push
mov
xchg
mov
pop
loop
jmp
mov
popf
test
pop
in
sub
dec
or
push
stos
lea
and
div
bound
aas
ss
jge
outsl
or
add
stos
nop
cmpb
aaa
ret
jge
sbb
test
out
push
or
and
lods
xchg
mov
mov
xor
sub
mov
add
fldcw
fcomip
jns
cmpsb
ficoml
mov
cmp
mov
js
and
je
sarl
mov
inc
mov
inc
mov
icebp
pop
mov
test
mov
sarl
add
popf
dec
push
lret
sbb
sub
sbb
mov
outsb
ret
dec
sbb
push
imul
dec
mov
test
inc
mov
roll
jne
test
loop
pop
adcl
pop
push
cs
or
aam
test
outsl
inc
pop
mov
inc
lock
mov
jb
inc
lea
test
xor
clc
or
movsb
mov
sub
mov
push
cmc
mov
xor
add
cmpb
mov
insl
enter
pop
ljmp
in
aaa
pop
aam
aas
cmp
sub
ljmp
outsl
xor
mov
mov
pop
dec
outsb
lea
fidivs
pushf
mov
roll
fwait
lods
call
or
or
xchg
jbe
pop
outsb
lcall
mov
mov
cmp
lea
dec
cmp
in
fildl
inc
lcall
mov
addb
pop
add
lahf
cmpsl
dec
add
movsl
es
push
sbb
xchg
rep
add
lea
insl
sbbl
adc
je
lahf
cmpsb
sub
and
cmpsb
push
adc
lcall
je
dec
jmp
ja
sti
sbb
jecxz
adc
out
cltd
loop
aad
push
das
lea
or
hlt
dec
mov
aam
outsl
mov
and
std
aad
mov
aas
ret
or
inc
lods
jp
and
cmp
mov
dec
js
dec
pop
mov
inc
icebp
push
mov
fsub
rcrb
outsb
shrl
and
lret
sti
jae
or
popf
cwtl
shlb
jp
xlat
pop
mov
ja
mov
add
stc
xchg
test
jmp
or
push
sbb
push
test
mov
fstl
loopne
sub
jno
mov
stos
or
mov
ljmp
cmp
movsb
adc
inc
add
inc
or
je
ljmp
lock
or
push
mov
in
addr16
das
mov
sub
lret
mov
add
and
dec
ds
sub
mov
lret
out
dec
dec
xchg
dec
pop
inc
ljmp
jp
or
mov
jp
mov
mov
mov
xchg
mov
jmp
cli
loope
cltd
dec
jmp
cld
jg
lods
ror
xchg
inc
dec
push
ret
lds
jb
adc
les
mov
jge
push
ficompl
push
push
xlat
jne
jg
pop
mov
stc
cmp
adc
lret
mov
mov
les
scas
out
lahf
out
jl
mov
mov
jmp
rcrl
pushf
or
out
in
mov
mov
dec
adc
clc
icebp
nop
push
and
imul
push
sub
add
hlt
bound
sbb
mov
push
and
cwtl
cmp
test
shlb
rcl
xchg
xchg
arpl
popa
idivl
adc
in
int3
orb
aaa
mov
adc
shl
pusha
jl
push
push
adc
inc
vhsubps
daa
pop
addr16
adc
data16
shr
and
std
test
in
gs
mov
js
jge
push
fcmovbe
out
dec
sbb
int
fadds
mov
and
adc
fildl
adc
fsubrs
mov
mov
stos
xchg
add
test
push
mov
scas
cmp
or
xchg
aas
mov
sub
jge
sti
test
das
shll
jb
mov
inc
imul
adc
mov
insb
mov
add
faddl
stos
pop
stos
sti
rcrl
jno
cmp
or
lods
int
hlt
cmpsb
push
mov
xlat
pop
push
mov
pushf
xchg
or
scas
mov
mov
inc
loopne
mov
imul
add
mov
mov
iret
pop
loop
aaa
call
incl
jp
movsl
clc
jp
push
sbb
push
pop
repz
push
cs
mov
sbb
pop
mov
or
sbb
add
aam
fucom
lcall
out
jae
cmpsl
loope
fstps
cmc
int
mov
push
mov
push
pop
popf
add
mov
jbe
sub
adc
cmp
sub
sbb
xchg
cmp
es
jmp
dec
aad
out
and
stos
push
ljmp
xchg
iret
outsb
cltd
lods
push
adc
outsb
mov
adc
inc
or
imul
xor
mov
popa
sub
pop
push
and
pushf
and
rolb
test
movlps
mov
adc
jo
push
shl
dec
lods
mov
sub
push
inc
jg
pop
inc
push
cmp
xchg
test
xlat
adcb
sub
jae
mov
xor
or
stc
daa
add
data16
icebp
mov
inc
lcall
push
pop
pop
mov
sbb
inc
adc
ret
adc
shr
and
ss
xor
ficoml
inc
ljmp
mov
adc
hlt
or
enter
pop
mov
out
and
rcrl
add
les
xor
std
je
push
call
inc
cltd
mov
in
scas
cld
pop
or
movsl
and
adc
add
orl
xlat
sub
inc
add
inc
lret
push
ljmp
adc
add
imul
add
push
lcall
test
das
adc
adc
inc
sbb
mov
aaa
push
jmp
add
jle
or
jge
dec
lea
jae
xor
stos
mull
and
cli
aas
and
and
add
inc
ret
loop
add
inc
push
clc
add
or
push
mov
sbb
push
xchg
cmp
imul
mov
inc
add
push
add
ret
add
xor
test
sbb
xor
adc
mov
cltd
cmc
and
std
xchg
test
mulb
repz
mov
imul
jge
fiadds
aam
cmpsb
test
outsb
fimuls
and
jae
jle
mov
pop
out
clc
xchg
stos
adc
push
adc
int
mov
mov
fs
mov
mov
aam
stos
push
sub
add
enter
dec
xchg
lea
sub
out
icebp
stos
add
insb
and
cmp
xor
aad
adc
into
xchg
clc
adc
or
xor
mov
adc
push
movsl
into
or
shrl
pop
push
cmp
fs
and
ret
sti
and
cld
sub
cmp
or
push
sub
sub
gs
and
xchg
daa
adc
xor
or
add
lret
stos
xor
pop
add
lret
jg
mov
add
adcb
rcl
fnstcw
test
sti
push
lods
repnz
adc
mov
fimull
and
stos
add
dec
push
data16
dec
inc
in
cmp
ds
or
call
mov
or
mov
pop
sbb
mov
push
xchg
mov
xchg
cmpsl
shrl
adc
mov
or
dec
inc
stc
adc
iret
enter
addl
xchg
mov
test
inc
or
adc
fwait
pop
sub
movsb
mov
enter
push
mov
test
fbstp
or
loopne
je
js
mov
jo
cltd
adc
aam
popa
push
mov
inc
call
pushf
xor
stos
or
mov
xor
das
jecxz
adc
push
fnstenv
rcr
ljmp
mov
xor
dec
mov
pop
mov
dec
rcrl
adc
fildll
add
adcl
pop
lret
mov
clc
aam
add
andl
xchg
or
sub
popa
jbe
jge
inc
out
sbb
sbb
jge
adc
test
ret
inc
xor
lock
inc
mov
fimuls
and
flds
pop
push
insb
cmp
push
mov
sub
mov
cmp
dec
xchg
pop
inc
mov
movsb
icebp
add
fcmovu
cmp
ja
pusha
sti
cmpsb
imul
enter
or
cld
fcomp
fs
or
or
pop
cli
mov
mov
cmp
stc
outsl
add
add
les
mov
push
add
sbb
push
mov
addr16
add
xor
jne
pop
push
mov
push
lock
xor
jbe
adc
add
adc
out
int
dec
adc
dec
dec
cld
pop
adc
call
jne
add
dec
pop
inc
scas
pop
lds
sbb
push
mov
xor
mov
add
pop
adc
xor
dec
jg
in
add
in
xor
or
loop
adc
sbb
fmuls
pop
and
xor
mov
mov
and
add
and
sbb
pop
cmp
lods
xchg
fistps
pop
nop
call
jo
push
pusha
cmpsl
jbe
ffree
xor
cltd
int
jo
sub
push
adc
or
sbb
dec
push
lods
push
xor
jp
push
push
add
jne
lahf
and
test
push
int3
lret
daa
or
popf
andl
rcrb
mov
add
push
shl
pushw
sub
mov
pusha
sub
mov
orb
add
adcl
pop
arpl
test
out
das
or
movb
arpl
mov
stos
push
or
mov
aam
or
push
mov
les
cltd
inc
cli
dec
inc
outsl
lret
ret
and
lock
xor
sti
aaa
mov
popa
mov
dec
cltd
xchg
jnp
lods
mov
into
insb
xor
add
sub
test
ret
je
mov
adc
push
xor
fdivr
mov
fdivrl
flds
add
cmp
cmc
add
lods
stos
mov
sbb
inc
inc
cmpsb
mov
outsl
movsl
adc
in
add
xor
push
lock
mov
add
and
insb
and
std
testb
jno
or
sub
mov
or
int3
or
les
jle
xlat
mov
push
pop
add
adcl
sbb
sbb
fidivrs
and
repnz
lock
xchg
lcall
add
test
lds
subl
mov
inc
cmc
mov
mov
incb
rclb
dec
push
mov
lcall
mov
inc
add
dec
mov
push
cld
pop
jge
jecxz
add
add
jmp
inc
leave
cmp
adc
adc
add
push
shlb
inc
xchg
fisubrl
or
cwtl
jb
pop
stos
mov
ficompl
push
mov
sbb
ficomps
aam
add
inc
decl
cmc
in
addr16
or
xchg
bound
mov
cmpsl
fbstp
pop
jle
loop
cs
mov
jmp
jno
push
mov
test
lods
outsb
decl
and
out
add
mov
sbb
pop
cli
sub
jne
add
call
or
cmp
hlt
fs
sahf
iret
and
gs
and
lea
mov
mov
xor
push
ds
sbb
sahf
pop
jmp
mov
inc
js
aam
mov
mov
pop
and
adc
and
fisttpll
rol
fwait
aam
push
ret
pop
jle
shrl
lock
fisubs
push
add
xchg
cmpb
jl
add
mov
adc
nop
loopne
dec
xor
and
mov
daa
and
xchg
sub
int
adc
into
bound
push
js
inc
or
add
ja
inc
imul
mov
aaa
mov
mov
lock
dec
dec
push
sbb
jp
shl
xor
mov
mov
mov
jmp
aaa
jnp
ret
mov
aaa
mov
lret
push
lret
pop
ret
sbb
or
sub
outsb
dec
out
sub
or
mov
sbb
or
xor
sub
add
rclb
sahf
cmpl
out
inc
cmp
dec
pop
mov
das
ret
insb
movsb
fdiv
dec
mov
jns
ss
or
sub
or
mov
adc
dec
push
pushf
cmp
loopne
aas
xor
push
dec
std
add
xchg
idivl
bound
or
outsl
add
or
sbb
lea
jae
dec
inc
imul
call
sub
mov
fadd
push
std
arpl
outsl
mov
clc
andb
adc
and
fidivrl
fimull
jmp
sbb
scas
in
int
das
into
jmp
pushf
mov
insb
inc
mov
loop
jle
les
xchg
mov
adc
xlat
adc
sub
aaa
cmp
imul
mov
adc
test
push
out
fiadds
dec
jp
pop
push
sbb
jne
adc
das
sbb
pop
imul
mov
adc
insl
ret
adc
loope
jno
inc
repnz
inc
or
and
mov
jns
add
test
cmp
call
adc
pusha
or
mov
into
repz
fimuls
xchg
add
mov
ret
je
fwait
sbb
and
jp
aaa
add
ljmp
jmp
pop
fs
sbb
gs
xchg
add
add
mov
add
jns
in
lret
cmp
add
jl
pop
outsl
lock
enter
pusha
stc
int3
or
xor
sti
xor
inc
inc
fdivr
or
add
jp
mov
je
shlb
push
fbld
mov
or
rclb
mov
jae
imulb
sarl
jb
pop
shlb
push
cwtl
rorl
stos
inc
mov
pop
or
lock
fstps
mov
lods
inc
push
inc
sbb
mov
mov
loope
bound
xchg
clc
insl
sti
mov
enter
pop
ja
push
xchg
sub
mov
rorl
and
fstl
or
frstpm(287
xor
inc
addr16
add
mov
sub
cwtl
or
inc
cmp
mov
pop
xor
mov
aam
xor
leave
clc
in
in
ret
inc
jb
pop
cmpl
add
jmp
dec
enter
push
dec
xchg
inc
and
cmp
xchg
inc
pop
imul
call
ljmp
sbb
les
pusha
popa
inc
xchg
nop
adc
incl
sbb
lret
pop
push
and
mov
inc
add
cmpsb
add
xchg
mov
push
in
sarl
mov
sbb
cmp
fcoms
and
out
adc
test
and
fstpt
mov
pusha
daa
or
and
mov
dec
jmp
pop
out
decb
pop
or
imul
xchg
loop
mov
or
mov
lret
aaa
rclb
pop
mov
xchg
xor
xchg
loop
lds
push
enter
pushf
mov
in
addr16
and
aaa
enter
lahf
mov
call
xchg
or
mov
lcall
jmp
js
lods
adc
sub
into
mov
test
mov
mov
test
inc
add
psraw
int
fistpl
pop
mov
daa
test
and
push
test
fwait
inc
xor
mov
pop
jmp
flds
push
pop
dec
test
movsl
sbb
out
pop
test
pop
inc
mov
add
outsb
rorl
fs
push
or
shll
je
jg
inc
insl
dec
and
pop
xchg
push
pop
fnsave
add
aas
fs
fcomps
insl
adc
sbb
outsb
adc
fcoml
mov
addl
mov
rclb
sbb
xchg
stos
outsl
push
out
jle
pop
adc
fmuls
xor
lock
mov
add
outsb
inc
mov
or
pop
je
add
mov
js
or
pop
andb
mov
scas
pop
inc
shl
add
xor
dec
aad
lods
imul
outsl
cltd
push
std
mov
sub
mov
inc
mov
sub
mov
call
in
mov
insl
add
xchg
scas
lret
popf
pop
xchg
sahf
jge
lods
mov
repnz
adc
mov
incb
sarb
push
popa
neg
push
out
mov
sub
push
cmp
cli
dec
lock
dec
adc
ret
sbb
sub
sbb
stc
movsb
jp
add
movsb
imul
push
sti
jl
push
je
dec
repz
lock
jl
mov
add
add
test
mov
aam
or
sbbl
fbld
ds
cli
cmp
or
mov
dec
mov
orl
mov
dec
dec
dec
dec
push
enter
lock
call
push
jbe
pop
or
jb
jbe
push
jnp
mov
addr16
je
sti
ret
and
jae
adc
das
sub
mov
inc
add
scas
insl
adc
lods
sbb
pushf
mov
sub
mov
adc
lcall
int3
xchg
mov
mov
in
je
push
inc
dec
cmp
cltd
inc
lods
adc
jl
lret
mov
scas
adc
outsl
lea
test
jae
out
or
ret
or
dec
pop
inc
sbb
sub
fistpll
adc
mov
test
xchg
push
or
lahf
fwait
cli
imul
dec
and
or
mov
push
outsb
out
add
test
outsb
pop
shr
pusha
xchg
add
sahf
mov
mov
imull
inc
sbb
insb
icebp
incl
adc
movsb
ljmp
and
and
out
add
js
dec
add
mov
add
xchg
mov
icebp
add
or
les
bound
pop
mov
push
jg
adc
sub
adc
xchg
add
lock
adc
scas
mov
mov
add
jmp
adc
adc
out
outsb
push
dec
lcall
dec
adc
popa
add
cwtl
inc
and
dec
and
ror
add
push
sbb
push
adc
push
jp
shrb
adc
mov
jp
dec
push
cmp
js
arpl
cmp
mov
push
adc
jmp
jl
adc
cmp
ret
cltd
sub
bound
add
inc
pop
sub
add
clc
das
adc
mov
adc
loop
add
das
les
movsb
mov
leave
mov
fdivl
rcl
jae
jbe
popa
or
mov
inc
push
dec
adc
js
sub
adc
inc
adc
dec
aad
push
mov
and
adc
and
out
add
sbb
jne
jle
daa
mov
faddl
shll
mov
inc
inc
add
cmpb
daa
sub
mov
popf
sub
adc
sub
sub
add
cmp
mov
call
cmp
rcr
jecxz
mov
cltd
aas
ja
xchg
fsubl
add
xor
add
sub
fildl
mov
push
jg
push
rol
add
and
add
mov
dec
stos
cmp
sbbb
inc
adc
gs
adc
sti
add
inc
xor
or
aad
mov
mov
xchg
xchg
sbb
out
add
or
jl
into
push
and
and
repz
or
mov
jbe
mov
lock
ss
add
adc
and
cmpsl
pop
sbb
aaa
push
lcall
fldcw
mov
in
mov
cmp
iret
add
pop
push
push
adc
or
inc
loop
insb
dec
push
out
enter
push
jl
jb
in
jge
lahf
dec
subb
and
arpl
mov
cmp
and
andb
lds
pop
clc
int3
pop
add
rclb
pop
test
sbb
pop
pop
test
add
inc
mov
ret
mov
into
test
sbb
shld
jl
pop
cmpb
loop
hlt
jmp
xchg
mov
bound
sbb
stos
and
sbb
mov
out
jnp
imul
and
in
push
ds
pop
mov
jb
std
pop
xor
loope
inc
mov
dec
sub
inc
mov
subb
dec
shll
and
push
das
add
jne
shl
inc
jge
xchg
dec
push
cmp
add
sbb
or
mov
ljmp
xchg
lahf
bound
and
dec
push
adc
dec
out
cmpl
mov
mov
cmp
sbb
or
out
inc
add
push
or
adc
sbbb
mov
adc
cld
add
adc
or
or
mov
cli
sbb
mov
jo
leave
mov
fwait
loopne
insl
sbb
inc
push
jne
js
xor
cmp
les
mov
or
xor
sarb
incl
mov
jmp
mov
stos
subb
sub
hlt
dec
mov
sbb
fildll
pop
xor
xchg
es
xor
jp
out
popa
pusha
daa
xchg
pop
loop
fildll
lock
or
and
mov
cli
dec
cld
test
xor
leave
fwait
hlt
add
mov
and
aaa
movsl
shll
out
enter
mov
in
inc
jg
cld
sub
push
inc
arpl
js
out
rcll
out
mov
in
push
sub
add
mov
pop
push
pop
test
push
outsl
xchg
and
movsb
push
pop
mov
and
mov
fcmovb
sub
lret
push
icebp
mov
mov
mov
arpl
inc
xchg
adc
loop
mov
ret
jecxz
inc
sbb
xor
mov
icebp
jg
movsl
out
jb
mov
filds
cmpsl
popl
xor
xor
lea
cmc
mov
popa
dec
lahf
mov
push
fsubrs
jmp
jmp
mul
rolb
xchg
in
pop
mov
or
das
mov
mov
jle
icebp
mov
std
outsl
pop
ss
push
or
inc
popa
xchg
xchg
add
xchg
jnp
mov
cli
insl
push
ss
fsub
inc
cmp
divl
adc
push
jnp
xor
jnp
outsl
cs
test
fistps
fs
es
in
mov
ret
test
mov
std
or
mov
int3
div
pop
pop
ljmp
inc
pop
xchg
les
leave
jecxz
and
inc
std
in
adc
inc
pop
dec
fiaddl
mov
adc
or
in
push
push
pop
inc
mov
sbbl
lds
jmp
int
jp
mov
and
pop
push
clc
inc
jb
add
lods
pop
and
pop
inc
jbe
mov
clc
xchg
andb
and
inc
dec
xor
mov
inc
xor
inc
fs
fbld
pop
and
xor
fists
cs
add
jg
aas
and
fidivrs
sbb
cwtl
aam
iret
dec
shr
arpl
std
fbstp
inc
popa
push
jbe
xor
fsubrs
sbb
adc
test
in
aaa
aad
sbb
jo
inc
sbb
add
mov
dec
push
cmc
jle
push
inc
cmp
push
out
add
sbb
pop
adc
jg
das
pop
jo
push
adc
sbb
aaa
lcall
jo
loop
push
push
inc
ret
adc
adc
leave
jbe
out
stos
ja
loope
arpl
mov
cmp
push
sbb
test
sbb
dec
mov
mov
shll
pop
xor
scas
add
push
cmpsl
ja
in
mov
test
das
cmp
mov
sbb
xchg
and
mov
mov
mov
adc
mov
aam
out
mov
mov
mov
sbb
insl
mov
pop
ret
mov
xor
adc
inc
mov
mov
mov
cmp
sbb
mov
out
push
dec
popf
lret
inc
pop
mov
jge
sbb
and
jg
xlat
sbb
aaa
mov
xchg
xchg
int3
rclb
out
ljmp
rorb
verr
and
fimuls
es
cmpsl
sub
pop
popf
outsb
es
call
imul
xchg
push
cld
out
lods
xchg
mov
and
or
pop
push
sbb
adcb
mov
mov
mov
inc
pop
and
xchg
mov
ss
loopne
inc
push
pop
push
inc
decl
and
je
rclb
fyl2x
loopne
xor
dec
hlt
pop
cli
mov
sub
jl
gs
insb
fidivrs
js
mov
ss
sub
add
xor
idivb
mov
rcrb
repz
push
xor
jmp
mov
out
shll
mov
jmp
ret
ret
add
adcl
rcrl
cltd
clc
call
in
dec
ljmp
cli
in
pop
jle
ds
cs
xchg
xor
popa
pop
cmp
sti
dec
add
in
mov
test
push
test
aas
mov
adc
jp
add
jae
mov
mov
push
push
scas
inc
ljmp
sub
mov
dec
mov
ss
xchg
outsb
xor
sahf
push
jl
or
test
xorb
pop
sub
mov
mov
mov
push
push
and
pop
inc
or
jg
add
and
ljmp
xchg
push
call
jno
lret
inc
icebp
sbb
mov
mov
mov
adc
mov
push
adc
ja
or
pop
loope
imul
dec
es
jno
cltd
dec
es
xlat
mov
jp
adc
jl
mov
cwtl
lret
aaa
push
jp
lcall
add
add
and
inc
inc
adc
add
and
xor
in
fcoms
push
or
test
test
and
mov
lods
inc
pop
cwtl
ret
les
and
sahf
ljmp
push
add
adc
inc
xor
xchg
and
pop
or
cwtl
or
and
sub
mov
and
sbb
stos
aas
add
fldt
lock
add
filds
push
in
int3
cmp
sbb
mov
aad
xchg
xor
mov
mov
int3
mov
push
adc
push
jg
addr16
hlt
xchg
adc
enter
add
mov
push
jns
mov
leave
ret
mov
add
add
and
add
sub
fnstcw
mov
xor
icebp
inc
jb
sbb
aam
lock
sbb
pop
jle
int
or
or
adcb
clc
xchg
movsl
jo
add
mov
sbb
xchg
cwtl
rol
mov
aad
jl
insl
cmp
inc
xchg
imul
fists
and
or
stos
pop
push
add
or
fucompp
push
pop
iret
scas
inc
ret
fwait
adc
mov
inc
aad
and
rcr
pop
mov
pop
adc
add
adc
xchg
and
sbbl
or
sbb
or
test
xor
test
inc
das
sbb
pop
push
mov
fisubs
pop
outsb
or
repnz
or
icebp
push
sbb
int
pop
xchg
scas
imul
jne
in
dec
orl
ja
sub
push
popa
sub
aaa
xchg
and
adc
add
sub
add
inc
xchg
pop
xchg
ljmp
add
or
dec
test
pop
das
mov
push
add
ss
dec
jnp
fimuls
arpl
sub
xchg
nop
sub
add
dec
cmp
es
dec
int3
xor
aaa
push
mov
push
xor
mov
xor
mov
testl
jbe
ja
jecxz
mov
cld
pop
pop
mov
ss
inc
and
push
add
sbb
add
lret
je
cld
or
sbb
pusha
gs
add
fistpl
xor
idiv
inc
imul
fiaddl
hlt
stc
aad
add
jg
pop
leave
ret
pop
pop
add
nop
pop
pop
pop
ret
test
add
mov
leave
ret
mov
or
xor
pop
jnp
mov
nop
test
pop
add
pop
sbb
pop
outsl
in
pop
pop
ret
sub
adc
add
call
or
or
add
adc
nop
and
or
adc
add
mov
mov
inc
push
sub
mov
add
test
int
and
nop
nop
add
add
push
ss
add
and
mov
nop
adc
bound
inc
add
adc
mov
cmpb
iret
push
or
imul
popf
inc
adc
pop
sti
nop
adc
adc
insl
adc
adc
adc
push
push
bound
or
imul
push
scas
lods
mov
mov
cmp
mov
pop
mov
jb
mov
mov
mov
out
adc
ret
loopne
mov
cmpl
inc
mov
scas
jnp
insl
roll
or
outsb
sub
inc
add
push
and
mov
pop
jns
dec
adc
lcall
sub
imul
xor
icebp
adc
repz
in
xor
incl
dec
inc
xor
neg
neg
neg
inc
xor
incl
add
neg
jmp
add
sub
dec
sbb
fldt
icebp
add
or
push
out
and
dec
ljmp
add
sbb
add
movsl
add
add
push
add
add
arpl
outsl
lret
fildl
or
cmp
add
jmp
cmpsb
pop
jg
outsb
add
enter
xchg
add
add
sbb
std
outsl
pcmpeqw
inc
sub
add
add
dec
add
divb
fists
out
pop
adc
lret
add
ljmp
add
or
push
lock
dec
xor
into
sbb
inc
add
mov
inc
mov
add
outsb
pop
add
fwait
add
das
lcall
in
ja
daa
popf
adc
push
add
mov
add
loope
fldenv
mov
sub
in
fistpll
std
cmpsl
xor
inc
inc
pop
pusha
add
test
add
inc
icebp
test
std
mov
in
testb
xchg
mov
add
lods
or
pushl
jmp
add
outsl
shrl
lods
jne
sti
or
inc
out
add
adc
cmc
mov
and
in
div
daa
add
add
add
mov
popf
roll
add
add
dec
sahf
add
dec
add
sub
stos
mov
ror
add
push
or
or
flds
ljmp
jg
pop
add
add
jl
dec
aad
inc
jb
iret
cmp
sub
sub
add
fdivrl
leave
adc
aam
xchg
or
in
sbb
loopne
js
inc
ret
mov
add
pop
neg
or
and
lsl
fnsetpm(287
ret
add
incl
repz
add
fiaddl
add
inc
cmp
shl
jg
mov
roll
imul
rorl
shll
pusha
push
and
sar
push
sub
dec
or
test
adc
push
addb
outsb
in
jmp
pop
popa
leave
cltd
push
pop
or
jo
add
adc
push
xchg
call
sbb
jmp
in
out
aaa
ret
repz
sbb
mov
orb
test
outsl
inc
mov
or
cmpl
pop
movsl
cmp
imul
fdivr
ret
mov
add
shrb
sbb
into
sbb
pop
in
sti
in
pop
cmp
mov
add
pop
jo
jno
cld
or
test
fistps
add
sarl
negb
and
test
lcall
mov
ficoms
fildl
add
mov
add
mov
out
xchg
sbb
in
xchg
push
inc
push
dec
mov
les
nop
sbb
and
rol
jge
xor
ljmp
jnp
add
out
lret
inc
xchg
pop
sbb
xchg
outsl
jns
mov
and
xchg
sahf
popf
repnz
shrl
inc
aas
imul
cmpsb
jle
sub
ljmp
jg
and
add
add
sub
std
mov
or
add
dec
or
iret
inc
inc
in
jp
fists
mov
aad
add
jle
arpl
and
outsl
pop
pop
pop
decb
pusha
inc
or
gs
stc
insl
sarl
mov
insl
xor
cld
add
inc
dec
inc
sbb
roll
add
sub
loopne
push
mov
add
jp
pop
incl
cmp
jp
loope
pop
aam
repnz
fcompl
notl
int
pop
repnz
sbb
xor
ja
test
jmp
test
dec
int
add
sti
sub
sbb
xchg
cld
inc
mov
aas
jnp
cmpsb
mov
out
pop
pop
lds
mov
sar
nop
cmp
inc
mov
xchg
dec
and
mov
dec
add
pop
jb
jb
xchg
loope
xor
push
push
out
je
inc
scas
xor
std
fistpll
loopne
enter
fimull
mov
std
cmpsb
mov
push
mov
pop
cli
push
leave
mov
pop
imul
bswap
add
jno
xchg
mov
mov
xchg
jo
pop
inc
adc
add
or
mov
mov
ret
loop
movsb
jne
ret
fldt
stc
xlat
das
lret
add
push
ds
mov
mov
mov
ss
popa
sahf
stos
push
dec
enter
in
fistpll
sar
sbb
sbbb
jecxz
mov
and
js
xchg
push
push
lahf
adcb
js
sub
add
or
std
mov
fsubrs
fimull
sub
and
add
imul
jecxz
sbb
movsb
push
adc
push
add
cmc
in
adc
or
dec
xchg
sub
lods
pop
mov
scas
push
add
inc
mov
jg
add
add
pop
mov
ret
ljmp
xor
loopne
sbb
shll
ljmp
shrb
mov
aaa
and
push
cmp
mov
xor
cld
fwait
xchg
mov
iret
in
mov
xorl
push
ljmp
es
fstps
and
movl
pop
test
dec
cmp
or
outsb
cld
mov
lret
xor
xlat
test
enter
push
add
jp
add
pop
mov
mov
das
loope
jno
jmp
push
add
lods
dec
inc
ret
pop
bound
xchg
xor
adc
mov
cld
shll
hlt
and
jnp
push
add
ret
mov
dec
and
or
add
mov
mov
sahf
neg
add
push
test
cmp
inc
add
xchg
fimull
jmp
daa
mov
dec
jecxz
test
jne
movsl
loop
flds
dec
test
enter
fcmovnu
cmpxchg
sti
addl
jbe
pop
pop
inc
cli
add
les
sarb
or
loope
cld
or
push
xor
push
xor
into
adc
xchg
mov
cmp
sbb
ret
mov
dec
mov
pusha
mov
sub
mov
jg
xchg
and
test
dec
in
in
adc
inc
and
incl
pop
or
bound
fsubs
and
mov
xor
add
outsb
cld
pop
addb
mov
mov
add
fbstp
lock
mov
pop
mov
jmp
insl
jmp
hlt
mov
add
add
add
inc
stos
push
cmp
sub
ljmp
mov
mov
mov
je
dec
dec
test
inc
iret
sub
dec
das
lock
outsl
mov
xchg
into
push
js
jmp
rorl
cmp
es
in
data16
dec
bound
jo
jg
cmovno
inc
stc
rcl
lea
add
test
repz
dec
or
out
mov
add
nop
push
mov
in
mov
in
pop
test
inc
add
rorl
or
or
or
sbb
fisttps
div
xlat
sbb
mov
cmpl
testb
adc
addb
cld
cwtl
push
icebp
push
lret
adc
aas
push
frstor
or
sbb
jmp
adc
cmp
add
out
mov
out
test
arpl
shl
fildl
repz
pop
jbe
or
dec
adc
pop
cld
mov
idivb
and
not
stos
pushl
frstor
or
icebp
fs
jno
in
call
jecxz
cs
sbb
and
inc
push
arpl
push
cmc
pop
and
fldcw
pop
sub
aaa
or
cmp
stos
mov
aam
cltd
add
pop
pop
sbb
sub
ja
jle
push
ss
and
shrl
lods
in
cmpsb
cmpsb
push
push
daa
xchg
cs
in
es
mov
sbb
fdivl
les
outsl
and
cs
add
insb
mov
push
imul
pop
outsl
pop
mov
jle
out
adc
fs
loop
mov
and
add
mov
add
or
cmpsl
pop
xor
xor
sbb
push
enter
test
idivb
sub
cli
hlt
sub
push
inc
inc
sub
lods
and
pop
pop
fcomi
enter
xchg
mov
cmp
mov
outsb
std
sub
nop
loope
mov
dec
push
imul
add
mov
push
lea
xchg
dec
decl
mov
rcll
mov
loopne
shlb
cltd
inc
jmp
outsl
lahf
add
dec
adc
add
test
add
xchg
mov
pop
in
es
loop
push
xchg
nop
ds
or
jne
adc
xor
cmp
in
and
sarl
jg
jl
es
jo
inc
mov
out
mov
jbe
or
xor
es
test
neg
in
mov
sbb
sub
mov
cld
mov
push
test
or
ljmp
test
cld
test
mov
mov
fnstcw
sub
out
in
adc
xchg
jbe
dec
insl
sbb
mov
or
imul
mov
fsubs
or
xchg
jp
outsl
mov
mov
out
xchg
addr16
mov
cmp
les
mov
inc
mov
jp
dec
xchg
call
xor
sbb
call
or
test
push
mov
pushl
add
pusha
movsl
xchg
or
cmp
pop
andl
test
subl
pop
lahf
imul
insb
mov
fs
js
or
push
lret
mov
xor
mov
je
push
pusha
mov
add
pusha
subl
int
in
push
sub
dec
xor
jge
mov
arpl
insb
cwtl
dec
fistpll
add
xchg
fwait
ficomps
cwtl
xchg
pop
pop
inc
push
xor
fistps
push
les
xor
call
call
mov
sub
lahf
mov
and
ja
jg
aam
pop
adc
es
ret
fnstenv
add
mov
out
test
mov
mov
adc
shr
sub
adc
mov
in
cmp
cld
roll
jg
jge
loop
cltd
mov
cmp
sub
pop
inc
push
mov
mov
jae
jmp
push
shlb
imull
jmp
adc
adc
fimull
adc
mov
ljmp
jecxz
cmc
in
xor
add
sbb
pop
insl
pop
in
push
jg
sarl
add
adc
mov
add
mov
pop
outsl
aam
fnsave
or
push
mov
dec
cld
add
adc
in
jne
mov
pop
jecxz
jnp
push
sbb
imul
sbb
push
and
repz
or
fistpl
sbb
xor
add
ds
js
pop
jo
cmp
cmpb
idiv
rorb
sub
cmp
cwtl
sbb
push
add
loop
xor
sub
push
jno
mov
sub
sub
iret
pop
neg
adc
sbb
mov
lock
add
add
jle
hlt
mov
sub
ljmp
sub
ret
cld
jne
cmp
and
pop
in
pop
xlat
mov
fildll
in
sbb
xor
lods
jge
cmp
sti
adc
sub
pop
push
xor
loopne
or
movsb
push
add
push
lods
lock
adc
lods
pop
sub
push
mov
adc
adc
inc
adc
mov
xchg
or
inc
jbe
push
rorb
out
loopne
mov
mov
and
int
fnstsw
or
push
mov
dec
and
xchg
cld
fildl
xlat
jns
and
es
sahf
adc
addl
movsb
cmp
adc
les
in
sub
fbstp
and
mov
add
fsubr
and
sub
dec
fsubrs
icebp
rorb
faddp
fidivl
pop
loope
scas
enter
je
add
out
out
sti
repz
and
cmpsb
lds
pop
pop
loope
xor
les
xchg
loop
xor
insl
out
mov
jne
xor
cmp
ret
scas
rorb
xor
jmp
xchg
inc
sub
lea
pop
add
sub
mov
sub
adc
cmp
jge
adc
dec
lods
lret
int3
clc
cmp
add
cmpsb
mov
repz
inc
xchg
das
fcoms
fcoms
aas
leave
jmp
push
mov
ret
add
rorb
sbb
inc
je
rcll
ja
pop
mov
scas
out
xor
fbld
xor
ja
add
fildll
xchg
cmp
cwtl
xchg
pop
jnp
inc
push
movb
inc
sub
adc
loope
es
cs
cmp
push
fidivs
and
jbe
xchg
adc
push
call
inc
jl
jle
sub
jle,pn
jmp
and
pop
pushf
mov
cld
xor
adc
in
imul
ficomps
rorl
adc
mov
sbb
lret
das
inc
fldt
xor
lock
push
push
aas
mov
in
and
dec
iret
mov
je
fnstcw
sub
cli
push
xlat
icebp
arpl
sbbl
sbb
movsb
loope
dec
and
mov
add
xchg
cmp
iret
lock
push
inc
leave
ret
aad
inc
jl
mov
sub
jb
add
ret
out
sub
xor
cmpsb
adc
mov
xlat
inc
into
repz
cmovl
cwtl
hlt
add
add
mov
pop
in
mov
pop
mov
mov
fiaddl
add
pop
and
xchg
cmp
sbb
or
das
loop
add
pushf
or
mov
clc
cld
repnz
imul
stos
pop
pop
push
sub
jbe
xchg
fildl
pop
add
mov
and
out
ret
mov
adc
loope
aam
sti
jge
push
jmp
sahf
movsb
mov
lods
xchg
mov
mov
or
or
jne
ljmp
cmp
mov
and
mov
outsb
in
push
addr16
dec
jno
pushf
cmpsb
mov
jle
dec
fiaddl
addb
aam
mov
or
outsb
jno
push
and
je
sbb
mov
mov
mov
inc
and
scas
xor
push
push
outsl
jg
jno
xchg
push
push
stos
dec
loop
mov
outsb
std
sbbb
insb
outsb
push
mov
in
xchg
ja
push
int3
std
fucomi
sub
gs
clc
andb
cmp
mov
fistpl
lretw
mov
sbb
cmp
mov
decl
adc
inc
or
inc
test
xor
add
sub
pop
jb
movsl
mov
scas
lcall
mov
mov
cmp
mov
add
testb
mov
roll
outsl
outsl
jge
pop
icebp
pushf
add
xchg
sbb
sub
decl
insl
and
mov
or
sbb
ss
aam
dec
mov
repz
xor
xor
add
sub
cmp
sbbb
jg
dec
adc
scas
lods
call
jl
sbb
mov
in
sbb
dec
stc
test
das
icebp
push
jmp
jb
add
cmp
mov
insl
pop
insb
and
push
lahf
cmp
jns
test
call
cli
fwait
xchg
loopne
add
hlt
data16
in
pop
cmpsb
in
mov
nop
sub
or
fdiv
xchg
add
jge
les
adc
adc
scas
jb
push
or
daa
ljmp
mov
je
or
pop
pop
dec
sub
pop
fs
subl
lret
pop
hlt
sbb
add
sbb
mov
ljmp
iret
adc
rol
and
mov
cmp
cmp
mov
mov
aam
and
sahf
pop
out
add
arpl
inc
fmull
push
inc
add
cmpsb
iret
lds
and
rcll
jne
imul
push
scas
mov
dec
lcall
fcmovnu
xor
shrl
push
stc
and
lahf
xor
insl
out
ficomps
dec
loopne
jnp
enter
loopne
sub
mov
mov
add
dec
mov
xor
mov
inc
add
loope
andl
cwtl
mov
pop
sub
pusha
or
addr16
mul
xor
sbb
adc
test
add
sbb
xchg
adc
aaa
jae
lahf
ficomps
ss
adc
imul
cmp
xchg
hlt
jg
sarb
sbb
cs
xor
pop
sub
sahf
push
loopne
and
push
mov
and
and
sub
jns
fbstp
lock
sub
iret
add
and
and
out
sbb
popf
jne
sarb
jae
pop
add
or
push
out
sbb
and
cli
faddl
fmull
xor
fucomp
fisttpll
lock
aas
adc
inc
clc
push
or
adc
inc
dec
cli
push
add
jns
xor
dec
mov
cmp
mov
add
pushf
pop
addb
sbb
xor
adc
push
add
je
and
cmc
hlt
jbe
test
subl
mov
mov
mov
dec
mov
fisttpl
xchg
xor
cmp
xor
insb
ret
sbb
lds
cwtl
shlb
jo
cmp
test
inc
mov
cmp
sbb
in
pop
add
mov
aad
fadds
neg
pusha
clc
add
or
rorl
xchg
movsb
sub
lea
xor
add
stos
xlat
push
decb
mov
adc
inc
stos
adcl
ret
sbb
and
xchg
enter
mov
add
mov
pusha
mov
punpckhdq
ret
jg
add
cs
aas
mov
push
add
incl
add
add
ret
mov
dec
je
out
fsubr
ficoml
add
fistpl
add
jp
xchg
fildl
pop
push
mov
inc
mov
sahf
sbb
shlb
std
insl
sbb
jg
lods
mov
and
notb
push
dec
insl
xchg
fldt
je
add
pop
sbb
leave
sub
and
xchg
inc
ret
and
sti
fs
mov
imul
pop
push
xlat
inc
add
call
dec
push
and
pop
pop
in
std
data16
mov
add
and
jno
push
mov
pop
adc
add
jmp
pop
mov
push
xchg
add
fmulp
jl
pop
add
sarl
sbb
arpl
bound
adc
or
scas
dec
or
lahf
pop
outsl
sbb
aas
repnz
fists
mov
or
cmpsb
dec
lock
jae
clc
scas
sbb
xor
shrl
add
or
fnstcw
fcompl
enter
dec
mov
lds
loop
mov
fldl
add
int3
jge
hlt
out
sbb
pop
je
push
ficoms
or
xor
dec
insl
push
pop
sti
push
xor
or
xor
shrl
mov
adc
rolb
gs
rcll
jecxz
nop
pop
sarb
pop
mov
adc
fld
jge
and
push
mov
test
mov
adc
inc
jb
xor
push
adc
inc
adc
jb
mov
in
test
es
add
pop
pop
int3
push
lahf
push
jne
into
loope
call
xor
test
cmp
sti
shlb
sub
int
inc
stos
xlat
scas
mov
scas
jo
jg
pop
jae
xchg
ja
lock
daa
rcl
inc
loopne
xor
add
sbb
dec
push
mov
mov
sbb
out
pusha
cmc
fdivs
pop
stc
xchg
out
pop
xchg
test
insl
jmp
push
mov
shlb
mov
or
loop
adc
neg
fucomi
pop
fs
sub
jo
pop
imul
xor
and
dec
out
je
repz
ret
mov
adc
or
out
sarl
xchg
test
loopne
push
fistpl
and
fiaddl
mov
int
adc
insb
aaa
cmp
adc
push
and
test
mov
add
xor
fdiv
jne
into
popf
jge
rcrb
and
inc
and
cmpsl
add
mov
repnz
dec
or
mov
push
bound
into
cwtl
push
mov
ret
add
mov
js
addl
inc
and
xchg
jg
pop
xor
mov
pop
pusha
xor
xor
mov
xor
adc
jp
fsubs
add
jbe
hlt
dec
xor
shrl
jge
mov
or
enter
adcl
xlat
adcb
push
mov
fucomip
push
xor
data16
sarl
out
cwtl
lock
mov
push
xor
shlb
mov
ds
sbb
pop
cmpsb
or
xor
faddl
dec
push
call
rcr
inc
jo
inc
cli
movsl
adc
loope
hlt
add
add
in
jl
dec
imull
loope
fistpl
je
fldenv
push
sub
xchg
pop
push
jp
xchg
aad
pop
cmp
mov
repnz
or
jmp
sub
test
neg
mov
pop
xor
xchg
rcl
outsl
loopne
xor
ficompl
push
push
dec
mov
fsubrp
outsl
inc
mov
daa
push
test
adc
dec
or
adc
mov
push
je
adc
dec
cmp
push
mov
cmpl
fisttpl
lock
push
fildl
adc
fisubl
iret
or
sbb
outsl
lock
pop
imul
lds
xor
ljmp
ds
add
cwtl
or
sarl
out
pusha
xchg
mov
jg
inc
nop
adc
das
push
shll
xchg
push
mov
jmp
ficomps
or
mov
ss
mov
jl
das
inc
add
cmp
jae
cmc
idivb
in
ret
call
into
arpl
pop
dec
cs
lock
sub
xchg
mov
sarb
rorb
dec
ret
cltd
mov
push
jbe
sbb
jo
fdivrs
cld
jbe
dec
lock
or
adc
dec
nop
and
stc
mov
addl
lret
enter
pop
loopne
mov
lret
adc
std
arpl
dec
mov
sbb
sub
mov
pop
subl
dec
jnp
sbb
popf
sbb
outsl
lock
push
mov
daa
pop
pop
outsl
sar
ljmp
pop
sbb
rorl
or
xor
xchg
cli
xchg
js
add
sahf
fwait
or
int
test
cld
in
pop
dec
sub
lock
adc
adc
sub
mov
sbb
mov
rol
jo
push
dec
mov
pop
jp
js
jg
repz
jle
jecxz
sbb
xorb
jge
inc
add
mov
mov
cs
decl
push
xor
push
movb
gs
jns
enter
in
mov
push
add
inc
xchg
xor
dec
in
popw
sbb
incl
xor
mov
loope
fsubrp
popf
inc
aaa
out
fidivrl
push
cltd
cmp
imull
add
pushl
stos
jno
lock
mov
sub
lcall
pop
mov
hlt
inc
jno
dec
pop
cld
sahf
inc
notb
test
repz
pop
dec
pop
push
xchg
movsl
cli
call
mov
insl
cmp
inc
or
pop
clc
insl
mov
sub
sahf
mov
es
push
lret
mov
cmp
inc
addb
xchg
call
add
out
push
xor
bound
inc
adc
les
pop
fimuls
clc
popf
out
mov
mov
push
or
cmp
or
incl
rcll
cmp
testl
or
pop
loop
jns
add
pop
mov
ret
add
enter
ret
call
cs
adc
mov
sbb
outsl
fistpll
dec
inc
pushf
icebp
int3
pop
sub
subl
test
int3
sti
add
cmpsb
add
add
insb
scas
repnz
outsl
outsb
mov
addr16
mov
mov
add
xlat
inc
adc
and
call
inc
fisttps
jg
push
call
xor
rolb
leave
aaa
pusha
add
pop
fstp
or
adc
xor
scas
lds
adc
push
or
int3
push
or
sub
repnz
xchg
cmc
loop
add
inc
aas
pop
je
shlb
or
and
roll
push
jmp
inc
and
imul
out
lret
jnp
cltd
out
jle
fsub
or
repz
rcr
sub
not
or
in
js
fidivl
inc
pop
push
inc
test
lret
int
fadds
aas
cmpsl
inc
pop
int3
mov
imul
sbbl
lret
inc
adc
sbb
out
dec
add
es
cli
out
pop
push
addl
incl
push
cmc
pop
repz
dec
cli
arpl
xchg
incl
lods
fcmovu
fdivs
jl
dec
cmp
mov
jne
dec
mov
mov
lock
add
and
mov
rolb
pop
mov
inc
mov
sub
push
push
dec
mov
lcall
add
arpl
je
test
inc
pop
and
fwait
xchg
mov
mov
insl
aad
subl
and
jg
movb
test
out
xchg
push
call
mov
cmp
arpl
adc
ficompl
in
mov
jg
push
push
or
enter
push
jp
fsubl
fisubrl
ss
arpl
jbe
and
inc
fwait
nop
xor
sbbb
inc
inc
jle
and
mov
outsb
mov
adc
lds
insl
pop
xor
repnz
in
sub
aam
out
mov
or
scas
mov
or
jbe
jb
ds
aas
and
push
stos
bound
shll
leave
xor
ss
or
popa
push
outsb
jmp
sbb
inc
jo
shll
insl
jmp
fbstp
sti
jecxz
sbb
pop
test
cli
fcoms
adc
pop
test
hlt
gs
inc
push
cmp
inc
sbb
iret
or
call
fadds
outsb
clc
outsl
fcoml
mov
sbb
int3
stc
dec
cli
add
inc
ds
cmp
je
jb
fistpl
inc
add
and
xchg
adcb
xchg
cmp
add
inc
mov
leave
imul
int
stos
pop
mov
jl
jmp
push
and
mov
loopne
lret
in
inc
adc
test
dec
pushf
adc
int3
adc
aas
jle
adcl
imul
outsl
pop
or
nop
push
pop
call
sbb
or
mov
dec
sti
das
in
push
mov
push
xchg
mov
mov
inc
inc
cmp
or
lods
loopne
and
and
xchg
hlt
sub
decl
vorps
sub
test
cmp
push
pop
push
dec
movsl
push
fldcw
inc
rcl
mov
stos
cmpl
mov
movsl
push
inc
aaa
jne
icebp
int
gs
cld
fwait
jo
cmpsl
fimull
fdiv
outsl
gs
jle
jle
sar
insl
adc
pushf
mov
int3
movups
xor
fdivp
mov
jne
adcb
loopne
das
mov
int
dec
pop
xchg
pop
test
mov
xchg
mov
in
mov
xor
test
xchg
push
scas
pop
pusha
loope
adc
jmp
mov
outsl
cli
fistl
cmp
dec
cs
cmp
xorb
sar
cs
jne
cmp
fldenv
sub
dec
aaa
lods
jge
movsl
dec
das
cli
into
int3
scas
or
push
mov
stos
xor
scas
fcmovnu
xor
add
jbe
pop
call
mov
sbb
jle
jo
inc
adc
shl
aad
nop
ret
rcrl
cld
mov
mov
int3
ret
add
pop
mov
add
push
jmp
cltd
adc
cmp
inc
fmull
adc
lcall
outsl
xor
cmp
xchg
jp
jl
ljmp
xlat
fcomi
std
neg
xchg
fstl
mov
mov
incl
into
pushf
pusha
repz
out
push
sbb
aaa
loopne
lcall
inc
bound
xchg
aaa
mov
sbb
ds
jl
mov
jecxz
or
xor
pop
xor
push
pop
lcall
jg
mov
xor
fwait
inc
push
mov
test
push
sti
or
add
repz
mov
pop
inc
std
mov
inc
sbb
pop
sti
in
lods
testb
lea
adc
cld
or
mov
and
imul
sub
mov
aaa
outsb
add
lock
sarb
and
jmp
call
and
icebp
mov
pushf
sbb
add
jge
repnz
in
insl
sbb
lods
pop
mov
decl
pop
movl
fbld
out
popa
sub
jbe
inc
mov
and
ds
loopne
std
mov
ret
test
decl
mov
jmp
loope
sub
lahf
cmpsl
jbe
mov
stos
testb
xchg
dec
add
or
jmp
sar
jg
xchg
das
inc
nop
pushf
cmp
jne
jl
and
mov
loop
aaa
sbbb
jne
push
icebp
pop
sbb
and
mov
or
test
or
mov
aas
or
mov
lods
in
fbstp
mov
add
and
lcall
mov
push
outsb
test
in
add
ret
je
cmc
and
adc
lds
add
push
call
mov
xchg
pop
mov
loopne
ljmp
aam
mov
or
imul
inc
mov
cmp
jl
add
push
out
mov
and
push
ffreep
lahf
inc
cmpsb
lock
or
ja
sub
mov
loopne
jmp
add
push
jl
insl
mov
lcall
dec
inc
ljmp
in
in
xor
and
ljmp
cmpsb
enter
hlt
jae
push
bound
scas
cmp
jne
dec
mov
lcall
aaa
push
mov
mov
mov
inc
xchg
pop
ljmp
or
jno
lret
and
stos
inc
jg
popf
xor
mov
pop
sbb
arpl
pop
clc
push
cld
ret
stos
fmull
mov
mov
push
test
sub
dec
jg
or
int3
inc
xchg
jbe
pop
call
pop
lock
pop
mov
jmp
rcrl
pop
inc
sti
xor
pop
addr16
mov
clc
icebp
xor
movsl
jg
and
aam
pop
sub
mov
inc
rcrl
mov
xchg
pusha
stos
in
outsl
and
in
test
inc
adc
dec
call
mov
rcl
dec
xor
fs
in
aaa
fstl
mov
pop
mov
adc
std
aaa
shrl
aam
mov
cmp
mov
inc
test
cwtl
push
dec
xchg
push
popf
insl
xchg
sub
shl
cmc
aaa
fstpt
rorb
jg
lea
cld
mov
mov
jbe
mov
fs
mov
jnp
shr
and
imul
add
daa
sub
cs
call
fucomi
jo
sarb
cld
xor
aaa
fmull
cwtl
aaa
fldl2e
mov
idivb
mov
rolb
pop
iret
pushl
xor
adc
aam
inc
add
testb
xor
and
stc
xchg
adc
pop
sbb
dec
mov
test
dec
es
cli
xchg
les
pop
fwait
add
pop
adc
es
cmpsl
add
fstpl
push
pop
push
test
lods
jmp
adcb
adc
mov
xchg
mov
and
add
shrl
rcrb
sti
or
xchg
movsl
inc
mull
inc
push
sbb
int
mov
sub
push
sti
sbb
cli
xchg
and
mov
jge
stos
idiv
adc
je
jle
or
sub
test
roll
mov
lahf
aad
push
loopne
fsubp
mov
add
cli
jl
imul
insl
mov
and
sarl
sub
shrl
in
sub
push
or
sarb
pusha
popf
std
push
and
mov
add
mov
imul
movsb
mov
jl
mov
jle
lods
popa
cmp
jno
out
push
ret
jae
outsl
mov
cld
call
mov
outsb
loope
mov
inc
pop
and
outsb
mov
fs
mov
dec
lsl
cmp
jb
in
js
dec
add
or
jae
and
add
nop
add
addb
pop
mov
ljmp
mov
add
pop
fimull
xchg
sbb
sbb
lods
divb
inc
pop
jl
pushf
dec
xchg
or
mov
outsb
add
add
mov
das
xchg
push
and
jl
ljmp
popa
bound
inc
das
icebp
or
inc
inc
adcb
out
sbb
xchg
xor
mov
sub
inc
mov
ret
addr16
add
fwait
pop
sub
ret
bound
stos
pop
sbb
in
lret
inc
loope
add
jae
aam
scas
jle
scas
sar
leave
sbb
xchg
movsl
insl
loope
divl
inc
out
mov
imul
push
int
inc
push
xor
xlat
sub
sbb
mov
gs
xor
or
xor
int
pop
insb
or
js
cltd
or
rcll
mov
push
and
sub
movsl
mov
fwait
shl
outsl
adc
pop
ljmp
pop
pop
rolb
rolb
in
bound
inc
sbb
sbb
or
mov
into
ficomps
mov
and
add
sti
mov
jmp
scas
pop
popa
jne
leave
inc
jg
jle
add
shll
xor
stos
and
sbb
sbb
mov
mov
div
mov
pop
adc
test
dec
subb
cwtl
outsl
jno
inc
fidivrs
xor
adc
dec
dec
mov
sub
popa
push
jmp
pop
xchg
xchg
das
icebp
dec
cld
sti
lock
or
push
sub
mov
and
inc
loopne
dec
push
mov
jg
xor
push
mov
add
out
cmp
psubusb
fisubrl
adc
fdivrs
mov
ror
jge
mov
aaa
pop
lea
jl
xchg
in
stc
les
call
testl
mov
or
push
cmpsl
sub
icebp
pop
mov
jl
pop
test
sarl
push
and
lods
push
loope
aad
or
cmc
jno
fistl
ljmp
cld
lret
xchg
adc
pop
nop
incb
push
imul
mov
clc
lcall
scas
mov
xor
sub
bound
jmp
jbe
xchg
cmp
inc
aad
push
mov
push
aam
icebp
gs
insl
mov
dec
in
push
push
mov
mov
fisttpl
adc
sbb
or
push
cmp
lcall
std
lods
add
out
es
loopne
xchg
mov
clc
in
jns
fildll
std
jae
sub
popa
mov
push
xchg
test
lock
adc
dec
int3
dec
mov
sub
xchg
nop
mov
sub
gs
cmp
sti
cmpsb
dec
scas
mov
jle
decl
imul
lock
or
jg
arpl
int
cwtl
sub
lcall
add
adc
aaa
mov
mov
sbb
test
clc
in
sbb
sub
iret
scas
adc
push
cmp
cmpsb
movsl
aaa
mov
push
push
push
nop
test
jecxz
xchg
jle
pushl
sub
xchg
dec
shll
pop
sbb
js
mov
mov
ret
jle
pop
push
adc
mov
jns
enter
int
mov
or
shr
jp
fiadds
xor
jmp
sbb
in
aaa
pop
out
xor
adc
mulb
shll
fstp
mov
sbb
mov
jl
pop
push
nop
cmc
insb
mov
mov
lcall
lods
clc
fst
sub
fdivl
pop
and
popa
jl
sbb
pop
lahf
add
je
mov
ds
sub
lea
dec
lds
aaa
cs
pushl
cmc
shll
inc
mov
jmp
loope
lods
popa
sbb
dec
jecxz
pop
movsl
mov
shlb
jbe
sbb
adcl
mov
sbb
cmpsb
in
repnz
clc
test
jl
addr16
or
ret
arpl
arpl
shrb
mov
fisubs
data16
pop
pop
sbb
nop
sbb
js
inc
inc
inc
mov
inc
jle
fldl
fistpl
sbb
inc
js
je
sub
or
mov
in
test
add
xor
mov
dec
pop
popf
les
mov
popa
cwtl
xor
xor
mov
mov
and
aad
jno
and
and
daa
call
mov
mov
jp
btr
sub
sarl
cmp
mov
or
cmp
pop
xorb
mov
dec
lahf
jb
or
push
mov
outsl
jl
rolb
add
add
insb
cld
adc
rorb
subb
push
and
or
fstl
inc
sub
mov
push
lea
pop
pop
push
adc
cmp
mov
lock
xlat
adc
gs
adc
aas
xor
sbb
das
hlt
pop
mov
in
pop
mov
pop
jg
fs
sti
mov
das
cmpsb
test
mov
loope
decl
ljmp
in
xchg
ret
adc
inc
pop
and
mov
adc
adc
or
pop
cmpsl
in
and
push
sub
scas
jmp
or
pushl
mov
jb
jo
xchg
push
out
sub
jb
sub
mov
jo
cli
dec
cs
cmc
outsl
cmc
out
sbb
jp
xor
das
mov
es
cmp
mov
movsl
lods
mov
push
or
xor
addl
inc
sbb
fldl
adc
or
cmp
stc
add
xchg
decl
cmp
sar
and
adc
movsl
sub
xchg
add
int3
pop
test
mov
mov
fdivl
jmp
mov
mov
lahf
jnp
inc
inc
jg
ret
mov
pop
add
test
push
add
dec
test
ss
lcall
sti
pop
add
es
jmp
rorb
out
and
xchg
lea
inc
jmp
mov
or
mov
rcrb
ss
mov
inc
mov
dec
push
add
and
repnz
mov
fcoms
jb
das
cld
jns
jnp
es
jne
popf
sahf
xchg
sub
aam
out
mov
in
rorb
in
jecxz
idivb
push
and
dec
sub
stc
cmp
pushl
imul
in
sub
insw
imul
inc
dec
roll
sub
and
cmc
jmp
cmp
dec
jle
pop
leave
es
loopne
in
into
lcall
into
inc
mov
int3
cmpl
and
andl
mov
jecxz
fsubl
push
inc
sub
lcall
in
cmpsb
sbb
lds
xlat
mulb
push
call
pop
dec
lcall
negl
xchg
ret
rclb
fsubr
add
inc
in
daa
test
pop
das
mov
mov
inc
mov
iret
dec
fmull
fadds
imull
sbb
add
dec
out
pop
or
mov
scas
xchg
jnp
lods
les
fmull
pop
les
push
xchg
xor
enter
daa
pop
jb
je
adc
jb
cmc
and
insb
mov
das
lds
in
std
sbb
or
subb
mov
jno
or
mov
xchg
bound
xchg
mov
fistps
adc
or
cmp
cmp
mov
scas
mov
mov
imul
inc
cmp
sub
mov
lret
cmp
adc
js
insb
aaa
cmovo
dec
or
ret
push
into
sahf
aam
sbb
lods
or
or
adc
and
outsl
insl
outsl
or
mull
inc
daa
push
les
jo
pushf
jmp
es
icebp
adc
xor
push
xchg
push
in
push
stos
sub
shll
push
or
add
shr
cmp
xlat
mov
shr
movl
add
lods
or
add
lods
mov
icebp
mov
push
pop
divb
jle
dec
dec
fnstenv
test
fdivs
aam
loopne
mov
das
dec
xchg
and
push
pop
jo
imul
cltd
xchg
repz
pop
clc
xchg
pop
fisubrs
lret
iret
or
cmpsb
and
adc
xor
movsl
pushf
or
fildl
jg
pop
mov
out
adc
cmp
inc
cmc
push
cli
push
xchg
adc
std
pop
or
mov
mov
xchg
arpl
lcall
fcmovne
dec
lret
inc
jne
push
mov
adc
mov
dec
mov
xor
ja
push
jmp
popf
or
pop
push
and
fistl
xchg
rol
fidivl
insl
mov
repz
xor
fsubrs
sub
inc
ss
fisttps
decl
bound
add
fisttps
lret
sub
pusha
call
xor
jge
sbb
call
jle
and
mov
and
push
xchg
or
add
jp
stos
and
and
mov
imul
mov
and
push
xlat
iret
arpl
add
sti
fcoml
sub
mov
lods
test
inc
mov
das
pop
dec
pushf
or
adc
xchg
jno
mov
test
dec
or
push
pop
call
shrb
jns
sbb
xor
scas
mov
loopne
gs
mov
adc
add
imul
mov
loop
inc
pop
stos
jno
mov
insl
cld
add
pop
xchg
sub
scas
jmp
testb
lahf
push
or
and
sub
pop
sub
mov
pop
adcb
jnp
dec
mov
inc
rolb
cwtl
jle
rorl
dec
orl
and
push
incl
xor
and
dec
pop
xor
mov
sbb
jae
cmc
fucomip
add
dec
mov
mov
cs
ljmp
enter
push
mov
sbb
mov
movsl
mov
jle
push
pop
testb
or
lret
sub
jl
and
rcrb
sar
dec
aaa
mov
xor
adcl
rorl
ljmp
les
icebp
hlt
jmp
push
xlat
loop
dec
dec
push
push
dec
and
and
ret
std
xchg
mov
cmp
roll
clc
mov
std
lea
rol
adcb
mov
mov
movb
dec
notb
mov
loope
mov
push
loop
push
repnz
mov
or
pop
stc
rcl
loopne
sbb
mov
out
sub
je
pop
jg
outsl
jg
subb
mov
ss
sub
rcl
loopne
jnp
cmp
leave
pop
adc
stc
push
jo
sub
lods
aam
rol
outsl
std
lods
push
mov
add
ret
xchg
and
jge
lahf
add
ret
ffree
jne
mov
and
and
mov
test
mov
jg
ds
xchg
nop
or
dec
pop
sarl
js
stos
imul
and
fdivl
inc
adc
pop
movsl
rclb
ds
push
cwtl
aas
push
in
clc
pcmpeqb
add
cmp
leave
in
sbb
mov
xor
mov
or
cmpsl
aam
add
lea
add
sub
inc
lcall
shl
push
pushl
imul
scas
shrb
adc
dec
xchg
daa
out
mul
and
mov
add
movsb
and
ja
stc
ss
mov
imul
and
push
call
add
data16
lock
mov
mov
sbb
inc
dec
sub
push
xchg
pop
inc
sbb
outsb
insb
loopne
jae
insl
ljmp
adcb
arpl
outsb
hlt
cmp
push
pop
pop
mov
movsb
xchg
mov
frstor
push
xor
testb
lock
jmp
mov
cmp
mov
mov
jl
add
icebp
out
in
lahf
sbb
fistl
cmp
ror
aam
aaa
jle
pop
pop
mov
pushf
sub
call
test
ret
or
test
jecxz
jg
pop
dec
xchg
lea
imul
loop
lret
and
shlb
int3
dec
inc
orb
sub
push
out
pop
shrl
cmpb
mov
js
repz
das
cld
mov
inc
inc
pop
sub
icebp
push
adc
jne
push
cs
outsl
or
inc
mov
cmpb
loop
cmp
mov
aad
or
es
in
ret
cmp
sbb
inc
mov
enter
jle
clc
mov
add
xor
sub
adc
ret
push
arpl
or
mov
aam
xor
fnstenv
test
ss
imul
testb
xchg
iret
clc
xchg
sbb
or
ret
sti
pop
loopne
shlb
rclb
pop
pop
pop
ds
into
sbb
popa
std
lea
lret
imul
sti
pop
mov
sbb
cltd
ret
bound
mov
add
dec
cld
sbb
mov
lahf
push
cmp
les
mov
test
cli
test
subl
bound
mov
and
lahf
mov
clc
dec
rsqrtps
subb
fldt
call
dec
add
mov
fldt
pop
pop
mov
sbb
or
lods
pop
adcb
or
inc
sbb
cltd
xor
and
add
sbb
mov
cmp
sarl
pop
sub
test
dec
xorl
push
std
rolb
js
popl
inc
cmp
loopne
cmp
sbb
xor
into
imulb
int3
repz
int
bound
cli
add
fisttpl
imul
inc
lret
mov
sbb
popf
or
aam
cmp
inc
stos
add
add
or
sbb
or
add
mov
rcll
xadd
es
inc
ljmp
call
and
jmp
loop
sbb
jno
fnstenv
xor
cmp
or
add
push
inc
pop
call
sbb
das
cld
dec
not
pop
adc
mov
js
xorb
aaa
adc
xchg
push
fsubr
or
shlb
pop
jg
scas
cmpsb
xor
mov
add
mov
inc
dec
pop
push
fadds
or
sbb
xchg
pop
mov
mov
inc
pushf
cltd
in
xchg
xor
les
xchg
adcb
sub
cmp
adcb
cmp
and
out
pushf
shlb
ficoms
les
adc
mov
adc
fdivp
mov
jne
sub
and
fiaddl
xchg
add
or
push
xor
mov
sahf
sbb
aaa
xor
jecxz
inc
pusha
jg
shlb
dec
rolb
shrb
decb
sub
and
xchg
sbbb
push
sub
int3
cmp
xor
sub
out
pop
and
arpl
xor
fidivl
ret
ds
addb
inc
sub
mov
push
or
mov
cwtl
mov
mov
clc
out
lcall
jl
syscall
orl
hlt
or
sbb
push
push
pop
xor
dec
sarl
cmc
dec
clc
inc
insb
push
and
xchg
lret
add
out
xchg
ret
cmp
mov
es
adc
xchg
cmp
cmpsl
dec
sbb
loop
fiaddl
mov
cmp
and
mov
lret
mov
sbb
mov
mov
mov
mov
mov
mov
jmp
push
dec
mov
outsb
cmpsb
inc
mov
xor
push
ss
jnp
outsb
fcmovnb
sub
or
shrl
mov
xor
xor
cld
cmp
jo
test
mov
jne
fistpll
mov
call
sub
cmp
mov
std
or
lret
popf
xor
and
dec
inc
scas
pop
daa
or
in
adc
data16
and
cmp
adc
subb
inc
lahf
push
sub
aam
neg
sub
sub
add
cmp
cmc
leave
js
sub
popf
jo
rclb
mov
push
push
lea
sbb
push
out
mov
das
adc
adc
insl
pushf
cmp
pop
int3
jne
scas
dec
sub
pop
imul
jb
sbbb
sub
or
sbb
mov
lret
cmp
loop
sbb
sub
gs
cmp
cmp
stos
xor
fwait
arpl
popf
push
movsb
lret
sbb
mov
push
mov
repz
and
fsub
mov
mov
xor
into
cmp
pusha
or
pop
cmp
mov
or
inc
xlat
cmpl
rcll
pop
call
int
das
les
pop
inc
scas
jbe
add
jne
or
add
add
loopne
faddl
mov
mov
mov
cmpsb
mov
and
adc
mov
mov
ja
mov
fldt
sbb
dec
aam
imul
xchg
xor
fisttpll
aaa
pmaxsw
dec
hlt
adc
sub
add
fstl
inc
or
testl
pop
mov
push
dec
push
add
imul
negb
les
fnstsw
xchg
and
xchg
sub
and
test
popf
dec
fisttpl
push
push
bound
or
add
cs
lods
pop
nop
inc
cmp
jne
xchg
les
pop
add
inc
in
xor
fwait
push
or
dec
adc
xchg
test
push
sarb
or
imul
jo
std
mov
lds
repz
xchg
mov
rcl
sbb
fdivp
or
fcoms
filds
inc
dec
pop
sahf
pop
dec
mov
repz
pusha
imul
and
outsb
pop
jnp
loop
cmp
iret
mov
icebp
dec
mov
add
ret
xor
cmpsl
lret
insb
xorl
fsts
mov
jno
jp
mov
xchg
jp
les
dec
es
and
ret
sub
data16
add
icebp
icebp
cwtl
loope
pop
mov
or
pop
aam
aam
loop
push
dec
rclb
popa
jno
daa
sbb
or
aam
movsb
inc
jmp
pop
push
in
and
shrl
mov
fdiv
jecxz
rclb
in
loop
int3
les
pop
sti
or
bound
xor
pop
les
sbb
and
mov
movsl
fstl
iret
cld
not
pusha
push
inc
cli
rcrl
dec
add
cmp
pop
xor
scas
add
dec
dec
sub
or
dec
test
hlt
jae
shlb
adc
xchg
es
cmpps
xchg
pop
lock
lret
or
xor
dec
push
fmuls
mov
jge
mov
push
dec
outsb
sub
orl
push
rcl
addb
stc
xlat
xchg
les
mov
repnz
js
and
inc
or
ret
fwait
adc
andl
out
cmpl
xchg
popa
lcall
adc
and
ret
push
adc
sbb
int3
out
lds
pop
sub
or
pop
add
xor
mov
xlat
iret
ret
push
lret
icebp
loope
jge
jb
in
pop
int3
adc
pop
rolb
jg
push
add
js
and
mov
test
data16
dec
popf
push
leave
sub
push
sbb
adcl
adc
cmp
iret
mov
idivl
insl
sbb
iret
and
push
add
add
or
cmp
jnp
push
test
out
mov
push
or
dec
mov
sbb
sbb
stos
mov
shl
push
andl
loopne
mov
stos
sub
pop
test
sbb
fisubs
cmp
xchg
pop
push
lret
pop
mov
lock
push
dec
call
xor
sbbl
sbb
clc
xchg
daa
shll
das
inc
sbb
js
nop
lahf
push
xchg
jne
mov
addb
cmp
xor
or
fldt
dec
xor
out
inc
pop
push
push
dec
xchg
sbb
shrb
clc
popl
shll
lods
adc
rcrb
dec
mov
inc
cmp
insb
stos
pop
cmp
sub
or
mov
outsb
push
cmp
fwait
or
fbstp
cmp
cmove
pop
rcrl
ljmp
cld
dec
or
xlat
and
mov
arpl
inc
fwait
xor
sub
mov
enter
inc
mov
bound
push
into
dec
cmp
jl
mov
jns
cmc
or
or
mul
jne
sub
jne
dec
je
outsb
jmp
int3
ja
push
xor
cmp
loopne
pop
fdivl
fdivs
mov
and
xlat
push
ret
sub
fmuls
or
push
or
or
aam
sbb
and
jb
push
jmp
sub
mov
rcrl
jmp
xchg
aam
jb
adc
stos
rcll
mov
dec
stos
mov
inc
or
mov
ret
scas
fimull
dec
sub
pop
xor
out
aas
cld
fidivl
dec
aam
lret
sti
in
inc
sub
or
shr
pop
ret
xor
pop
enter
data16
jne
jbe
jne
xor
test
fdivs
mov
jae
push
dec
cmpsl
out
mov
sahf
test
cmpsb
ljmp
jge
ljmp
push
in
dec
xor
test
push
aam
into
dec
fnstsw
adc
sbb
inc
lea
cs
repnz
ds
push
xor
nop
leave
or
sub
mov
lret
xor
adc
sbb
pusha
push
aam
and
lods
pusha
mov
sub
in
outsb
push
sub
mov
cwtl
frstor
jge
fildll
cmpsl
roll
mov
mov
out
fadds
adc
add
push
sti
add
enter
data16
mov
jle
inc
adc
xchg
push
ficoms
cmp
repnz
fdivl
add
cltd
scas
ret
fs
add
mov
cltd
cmpsb
cld
imul
adc
and
or
xchg
fsub
rolb
pop
or
loopne
dec
jo
sub
sub
imul
mov
inc
push
pop
mov
loopne
xchg
or
lock
lret
js
or
lock
test
jno
js
clc
leave
arpl
pop
into
lock
mov
fs
xchg
cwtl
cmp
shlb
xor
fcoml
add
add
pop
clc
rolb
adc
sbb
push
hlt
add
int
int
pusha
or
add
aad
adc
adc
adc
xor
ljmp
fildll
rorl
js
dec
mov
add
mov
into
loop
mov
pusha
addr16
push
add
fwait
inc
add
aam
cwtl
inc
pop
mov
add
int3
inc
add
pop
jg
xchg
bound
aas
or
sub
or
mov
lods
mov
mov
adc
dec
push
sub
mov
rolb
adc
and
mov
call
or
push
xchg
arpl
out
mov
sbb
sbb
mov
xchg
fwait
lods
inc
rcrb
daa
mov
ficoml
xor
sub
das
sub
mov
or
mov
in
or
adc
jmp
cmp
cmpsl
xchg
test
dec
out
xor
or
dec
xchg
pop
daa
into
movsl
in
add
add
xlat
lea
dec
movsl
xor
inc
add
clc
lcall
mov
jne
mov
xchg
pop
push
or
mov
add
mov
xchg
or
pushf
imul
xlat
lods
sbb
lock
mov
enter
push
xchg
and
into
push
pop
aaa
imul
mov
and
mov
addr16
mov
xor
inc
inc
cwtl
test
cmp
cmc
push
rcrb
scas
and
popa
shlb
jmp
xchg
inc
addl
rol
leave
clc
fisubrl
inc
rorb
orb
repnz
je
aam
jb
adc
bound
xor
loopne
mov
add
mov
ret
pop
jbe
xchg
or
dec
lock
inc
pusha
xchg
out
inc
jb
cmpl
xor
and
hlt
or
int
xor
cmp
inc
and
jnp
pop
push
sarl
shrb
add
jle
loopne
dec
and
xor
inc
add
xchg
mov
lcall
aam
inc
loope
push
dec
outsl
data16
icebp
and
adc
test
aad
xor
jl
enter
popa
xchg
vpandn
in
test
sbb
out
cltd
dec
add
or
xchg
fistl
xor
inc
es
lret
cwtl
stos
notl
fbstp
or
inc
or
xlat
imul
in
fsubs
aaa
mov
inc
insl
pop
push
sbb
testl
push
aam
lcall
stos
stos
xchg
hlt
incl
mov
movsl
aam
or
ficomps
xchg
mov
push
cmpsl
insl
push
shl
adc
cs
pop
ja
imulb
jo
jmp
jle
int3
rorb
fcmovu
xor
and
sub
test
jae
popa
push
insb
dec
add
and
mov
pop
stos
lahf
adc
lret
cmp
fucomi
inc
pop
sar
into
sub
jb
cmc
xlat
insb
lds
out
xor
sub
js
mov
sbb
pop
inc
aas
cmp
test
loop
ja
out
add
mov
call
xlat
xchg
sbb
add
movsl
hlt
or
lea
add
in
pop
sub
mov
lea
or
loope
or
push
adc
adc
and
imul
out
xchg
mov
sub
test
jne
and
dec
cmp
lcall
cli
push
xchg
addr16
push
jnp
adc
dec
inc
pusha
jp
jp
push
ret
mov
jge
push
dec
clc
cwtl
mov
lcall
hlt
sbb
clc
jmp
and
mov
movsb
out
inc
adc
lea
mov
jo
push
mov
adc
sbb
jl
test
call
andb
dec
les
dec
inc
push
mov
jl
clc
dec
fsubp
sti
mov
cmp
push
ja
add
mov
push
pop
subb
dec
push
rcrl
inc
sar
popf
xchg
push
test
bound
mov
je
loop
fdivr
int
xor
xor
fistps
das
jp
jo
sub
lods
mov
movsl
inc
mov
add
clc
xor
pushl
in
pop
pop
cli
insl
jns
jecxz
xchg
push
ret
xor
js
cmc
sbbl
push
dec
leave
sti
fucomip
call
add
mov
add
add
lret
clc
push
aam
push
cmp
dec
adc
mov
and
push
mov
inc
push
and
je
or
shl
das
std
add
adc
in
pushl
pop
mov
pop
xor
pop
mov
and
jl
add
inc
inc
adc
dec
sub
cmp
in
push
push
std
aas
jbe
add
add
add
push
inc
mulb
nop
adc
jmp
ret
add
inc
loope
cli
repnz
add
or
xor
jnp
pop
adc
mov
hlt
jge
push
divl
add
std
filds
imul
mov
popf
adc
xor
loopne
test
push
cltd
dec
add
add
repz
pop
iret
xchg
test
push
dec
adc
rcl
stos
or
in
dec
xchg
xlat
call
and
mov
add
mov
loopne
pop
test
ljmp
ljmp
mov
add
mov
test
mov
dec
mov
js
outsl
mov
add
xor
cwtl
int3
notl
mov
fcmovnb
or
adc
pop
add
stos
mov
cmp
mov
incl
add
addb
scas
and
mov
inc
add
int
add
jl
or
lret
fnsave
insb
add
pop
dec
mov
pop
adc
clc
mov
add
in
jbe
fists
add
mov
je
mov
or
pop
cltd
pusha
add
aaa
and
mov
mov
add
push
and
push
add
out
cmc
mulb
jle
push
fisubs
cltd
je
xor
sbb
loop
out
addr16
rclb
sub
cmp
lret
lds
mov
les
pushf
cwtl
lock
sbb
pop
sub
jo
xor
out
loop
pushaw
mov
adc
int3
or
and
les
je
mov
sbb
test
shrl
scas
push
push
push
dec
jp
mov
adc
mov
test
cmp
lods
mov
mov
mov
fadds
roll
popf
cmp
into
push
pop
daa
fdivrl
popf
mov
dec
xor
push
adc
fstps
fldl
jae
fisubrs
adc
stc
cmp
pushf
cmc
fdiv
push
push
inc
mov
stc
xor
decl
sbb
adc
dec
dec
cmpsl
pop
cmpsb
out
fiaddl
pop
adc
ret
cmpsb
fcomps
cld
jecxz
movb
hlt
pop
daa
fidivs
icebp
pop
mov
mov
out
orl
shrl
aaa
mov
mov
inc
mov
dec
xor
aad
dec
mov
jp
push
icebp
mov
sub
cmp
cli
and
gs
out
dec
jno
or
cld
das
scas
movsl
notrack
sbb
cmp
je
mov
stos
repnz
subb
push
cwtl
pop
pop
stos
cmp
mov
push
xchg
addr16
out
nop
mov
or
or
popf
cmp
daa
stc
push
jae
ja
sbbb
filds
sti
mov
test
loop
pop
fists
add
lock
mov
rcll
loop
rcr
or
adc
mov
mov
int3
js
xor
cmp
cs
xor
ss
sbb
icebp
icebp
mov
add
loope
sub
in
add
mov
jmp
sbb
cmp
pop
jmp
lret
lds
mov
imul
pop
subb
push
sbb
jno
or
add
xchg
cmp
fsts
loopne
jbe
jp
int3
pop
sub
xchg
dec
cmc
clc
or
mov
sbb
pop
push
fimull
push
inc
les
call
xchg
mov
es
mov
xor
cwtl
dec
and
sub
lods
fsubr
js
and
adc
mov
sub
push
jne
xor
inc
jmp
add
fidivl
leave
ret
test
int3
insb
add
add
sbb
pop
cld
jg
inc
sbb
pusha
add
gs
mov
faddp
or
lock
call
fistpll
insb
inc
mov
mov
pusha
ret
test
rol
fildll
ret
loop
pop
int
call
inc
sbb
or
pop
cmp
incl
rol
pop
xchg
add
sub
fcoms
xchg
push
xchg
out
add
and
xchg
cmp
xchg
adc
push
inc
lock
adc
inc
mov
lods
mov
addl
push
pop
pop
pop
push
add
sub
jno
stc
mov
testl
mov
sbb
std
fsubrs
decb
add
adc
add
mov
add
pop
pop
push
nop
mov
gs
mov
mov
filds
push
cs
jnp
mov
fiaddl
idiv
sbb
push
fiadds
mov
es
cmpb
and
fsubr
fwait
xlat
pop
enter
xlat
add
xlat
iret
outsb
sub
push
dec
xor
test
fisubrs
lods
cmc
mov
insl
cmp
add
decl
aaa
add
push
iret
inc
sbb
pop
add
ja
sbb
outsl
lock
inc
sub
sub
test
xchg
ljmp
testl
mov
cmp
js
push
mov
add
fs
das
aad
test
mov
in
mov
xor
or
sti
dec
loop
pop
sahf
in
push
loope
adc
adc
xchg
cmc
xlat
icebp
fucomi
or
stos
adc
aam
popf
xchg
loop,pn
ljmp
dec
dec
mov
dec
and
sbb
add
push
or
aad
call
pop
sub
jecxz
push
mov
lret
out
loopne
call
or
or
mov
xchg
push
insb
xchg
mov
rcl
pop
sub
jne
jb
or
filds
push
jae
iret
lods
add
push
roll
popa
rol
cmp
clc
mov
or
loopne
add
sub
sarl
fwait
dec
pop
add
out
push
sub
ficompl
pop
cmc
pop
mov
pop
add
push
pop
les
push
pop
idiv
inc
loope
mov
and
mov
insl
fcmovnbe
and
shl
adc
inc
test
subb
inc
mov
cld
in
fistpll
and
je
cmp
dec
mov
das
xor
or
xchg
pusha
push
inc
fiaddl
sahf
mov
jae
add
cld
or
mov
fstpt
repnz
orl
jbe
lods
mov
je
sbb
sub
sbb
hlt
xchg
inc
arpl
aam
out
lods
idiv
cmp
popa
ljmp
or
adc
jnp
stos
adc
cwtl
xchg
leave
into
mov
push
fstpl
add
movsb
jbe
mov
xorl
mov
rcll
or
nop
add
in
fs
pop
sub
cli
mov
xchg
test
mov
inc
ss
sub
inc
in
pusha
sti
jne
and
xor
in
cmp
sub
ficomps
adc
lock
mov
dec
bound
jle
in
js
mov
adcl
and
scas
stc
scas
add
andl
push
xchg
add
ror
in
test
in
and
adcl
test
lods
pop
and
push
add
lea
push
popa
push
icebp
xchg
mov
aas
movsl
mov
sub
movsl
enter
jl
js
rorb
in
ljmp
mov
stc
mov
sbb
xchg
jnp
test
lods
test
mov
push
add
adc
mov
imul
mov
mov
arpl
jo
enter
mov
push
mov
or
je
sarb
test
jnp
mov
and
jo
mov
adc
clc
repz
scas
fsub
mov
sbb
adc
inc
pop
pop
jmp
dec
push
mov
dec
mov
aad
mov
std
lcall
sub
test
dec
outsb
cmp
jae
idiv
mov
fwait
push
push
xor
cmpsb
xchg
or
fisttpl
mov
push
xchg
outsl
jl
mov
jae
add
xchg
outsb
test
cmc
popf
push
loop
call
push
xchg
test
addr16
mov
adc
js
ljmp
jno
rcll
add
and
pop
push
fistpll
xor
movsl
repz
outsl
jne
outsb
std
cmp
fcoml
inc
push
pop
mov
sti
fwait
or
pushf
pop
movsl
divb
push
push
aam
adc
and
ljmp
mov
sbb
and
jg
inc
je
jns
mov
movsb
jg
jg
popf
ds
push
loop
jge
addps
dec
xchg
sar
mov
lods
movsl
movsl
mov
les
adc
mov
test
ret
hlt
push
add
popf
mov
cltd
adc
aaa
std
pushl
mov
cmpsl
push
lret
sub
in
dec
push
mov
pushl
mov
inc
add
and
out
pushf
dec
fcmovne
add
pop
pop
mov
out
dec
inc
les
add
fucom
loope
sbb
je
insl
loopne
mov
out
push
sub
xor
mov
xchg
push
push
mov
aaa
dec
sub
jp
mov
inc
int3
jbe
cli
dec
cmp
adc
negb
pop
fwait
add
ds
clc
ja
out
or
add
pop
xor
jo
xor
cmpsb
out
imul
inc
sub
pop
push
fisubrs
lcall
xchg
fistl
shlb
add
bound
xchg
sbbb
add
leave
dec
sarl
mov
jne
or
aaa
pop
xchg
and
call
sub
xor
or
cmp
mov
mov
push
push
scas
jb
add
dec
aaa
push
add
pop
pop
jb
push
mov
and
fildll
rclb
arpl
sbb
insb
push
mov
push
pop
std
cmp
adc
pop
hlt
test
arpl
lods
inc
mov
xlat
shlb
xor
fisttps
sar
ja
and
and
scas
push
mov
jl
push
arpl
xchg
xchg
adc
push
mov
je
mov
call
aaa
out
sub
add
mov
jbe
xlat
mov
test
dec
icebp
and
jo
es
cmp
insl
inc
adc
push
dec
shlb
mov
loope
idiv
orl
pop
loopne
test
sbb
rcrb
mov
xchg
cmc
cmp
dec
std
sbb
outsl
xchg
mov
cs
sub
aam
idivb
out
sbb
cmp
and
and
clc
movsl
push
mov
adc
imul
popa
sbbb
inc
lcall
or
mov
insb
inc
xchg
jns
cld
sub
pop
mov
cmp
mov
fiaddl
sbb
repnz
repnz
cwtl
imul
in
mov
std
pop
jge
or
mov
xor
mov
mov
imul
pop
call
adcb
pop
fadd
mov
fldt
hlt
ss
pop
sub
fistps
xchg
xchg
push
sub
cmpsl
test
dec
push
cld
dec
sub
and
pop
mov
pop
mov
jns
jae
sub
pop
or
aaa
push
in
add
dec
dec
jno
sbb
mov
sbb
mov
mov
data16
mov
push
das
dec
jns
mov
or
popf
imul
and
test
push
stc
daa
inc
and
jg
adc
jle
push
icebp
xlat
mov
mov
orb
pop
xchg
mov
push
rclb
fdivl
loope
adc
jmp
rorl
hlt
and
int3
cld
insb
cmp
push
or
jg
fwait
inc
jp
or
adc
mov
mov
mov
lret
jge
sbb
inc
fldenv
add
popf
cmpsl
clc
or
pop
pop
xor
enter
mov
adc
pop
jno
inc
leave
fucomip
add
mov
pop
in
inc
add
add
push
insb
push
rcll
and
or
pushl
mov
inc
not
dec
mov
clc
movsl
pop
loopne
loop
enter
fistl
pusha
mov
push
shrb
pop
inc
pop
cltd
daa
or
notb
mov
mov
sbb
pop
pop
mov
xor
jbe
dec
in
imul
add
lock
movsb
pop
add
pop
jp
ret
aad
sub
jnp
sbb
insl
sub
sbb
adc
loop
pop
add
mov
fisubl
ljmp
add
mov
divb
push
inc
mov
loopne
fldt
mov
inc
inc
loop
das
push
mov
outsl
outsl
js
cmpb
movsb
dec
mov
mov
mov
mov
les
incb
mov
ficompl
add
or
test
sub
lcall
mov
js
mov
or
cmpsb
dec
popf
mov
dec
nop
sti
movsl
inc
shrb
lret
jns
push
push
cmp
or
push
pusha
inc
call
xor
notb
outsl
sbb
xchg
cmp
ss
test
pop
js
pop
arpl
xlat
mov
mov
ret
xor
xor
sub
pop
scas
rcrl
and
es
mov
mov
push
icebp
adc
inc
outsl
sub
call
cmpsl
jo
outsb
fdivrs
aad
xchg
dec
movsl
call
or
and
inc
in
ret
and
push
loopne
mov
sub
pusha
push
imul
adc
mov
imul
clc
push
mov
mov
xchg
mov
out
ja
mov
outsb
adc
nop
outsb
call
add
push
or
roll
adc
or
xchg
pop
sbb
push
out
in
ljmp
inc
add
bound
mov
fxtract
mov
push
fldcw
popa
add
mov
aam
roll
inc
cmp
dec
in
adc
xor
cwtl
add
push
sub
jbe
push
call
dec
ljmp
lock
mov
lock
mov
sbb
mov
imul
sub
jg
sbb
push
mov
aad
push
iret
pushf
jno,pn
mov
add
pop
mov
adc
mov
cmpxchg
jno
ljmp
pusha
add
outsl
xlat
fsub
add
cmp
xor
fsts
or
pop
adc
aam
jge
stos
out
push
push
pop
add
and
es
adc
es
sbb
es
loopne,pt
xor
or
add
mov
mov
sbbl
in
rcr
les
push
stos
mov
ret
mov
push
inc
and
xor
inc
fwait
mov
imul
in
or
bound
fsts
xchg
loopne
enter
adc
or
das
add
pop
jg
fdiv
add
push
push
push
icebp
sbb
pop
orb
mov
into
or
and
mov
lcall
mov
add
int3
fcompl
shr
jg
xor
adc
xor
jge
mov
adc
push
decl
adc
add
dec
push
mov
add
icebp
aaa
ja
ja
adc
mov
push
popf
call
or
inc
clc
push
ljmp
out
lret
das
icebp
add
and
jbe
inc
into
clc
and
cmp
sbbb
push
ja
sbb
mov
push
add
mov
add
mov
outsb
add
mov
rcrl
sbb
lock
lret
ret
dec
or
inc
jmp
fstpl
mov
lock
roll
cwtl
shll
jmp
jl
xor
js
pop
push
testl
xor
stos
bound
cld
lea
sub
mov
fnstcw
jmp
push
mov
pop
fwait
mov
sub
movsl
cwtl
mov
outsb
int3
jge
mov
jns
or
testl
jl
mov
push
cmp
xor
adc
inc
sub
in
jmp
js
negb
nop
and
icebp
add
jge
sti
sbb
cmp
add
pop
aaa
fsubrs
icebp
or
sarl
rorl
pushf
not
aaa
sbb
enter
xor
push
sbb
out
cmp
mov
pop
test
adc
inc
mov
shll
jl
push
mov
or
movsb
adc
or
dec
daa
stos
pop
or
cmp
subl
cmc
pop
daa
out
adc
push
fdivs
cmp
xor
cli
shl
jae
in
xlat
cmpsb
cmp
and
out
jmp
dec
sub
fdivrs
outsl
mov
mov
or
push
jmp
ret
in
mov
sti
mov
push
aaa
and
cmpsl
xchg
xor
nop
ret
and
push
dec
and
sub
xchg
dec
mov
pop
dec
dec
adc
sub
sarl
xchg
pop
rcrb
dec
adc
sbb
outsl
mov
push
push
call
dec
test
inc
inc
rcl
loope
jge
rorb
pop
push
dec
dec
testb
or
aaa
adc
loope
sub
stos
decb
jne
adc
fdiv
sub
jg
scas
xchg
adc
mov
in
pop
lcall
push
aaa
out
test
mov
sbb
pop
mov
sub
clc
jg
pop
pushf
mov
insl
inc
imul
mov
les
cmp
xchg
filds
xchg
push
inc
scas
mov
add
das
adc
jl
dec
push
sub
dec
pop
sti
xchg
cli
push
fbstp
push
outsb
bnd
pop
mov
in
outsl
cld
and
mov
repz
cltd
push
insb
and
adc
mov
cmp
test
push
adc
mov
inc
xor
and
xchg
or
outsl
movsb
mov
data16
push
mov
sub
sub
insl
mov
loope
mov
ret
sub
xchg
adc
rorl
pop
fsts
dec
rclb
popa
lea
pop
imul
aaa
subb
pop
adcb
fistps
fisubl
push
cmp
pop
jp
sub
int3
push
jge
and
incb
adc
gs
jbe
pop
or
imul
test
mov
jl
jmp
subl
arpl
mov
lods
outsl
fnstsw
movsb
jo
adc
fimuls
mov
xlat
outsb
pop
fistl
push
mov
inc
or
into
sub
jl
sub
lds
out
sbb
push
push
dec
jne
pop
nop
cmp
mov
sbb
dec
sbb
incb
xor
dec
shl
xchg
icebp
cmp
jle
or
outsl
xchg
mov
fsubs
in
adc
es
pop
dec
inc
addr16
pop
outsl
dec
and
fdivs
adc
adc
aaa
fiaddl
dec
dec
adc
cmp
roll
pop
pop
xor
inc
outsb
int3
sub
nop
fisubrs
hlt
out
cmc
xchg
xor
xor
sub
fistl
repz
stc
aas
push
cli
movsl
mov
mov
stos
cmp
push
and
andl
lds
jne
add
outsb
mov
pusha
add
or
xor
iret
xor
cmp
outsl
sbb
scas
hlt
test
lret
mov
sbb
test
inc
xchg
lea
cmp
dec
mov
outsl
push
shl
movsb
in
icebp
pop
xor
out
mov
cwtl
dec
sbb
inc
es
inc
add
arpl
inc
add
mov
pusha
pop
xor
jno
mov
loope
dec
pop
adc
call
sbbl
sbb
mov
mov
or
call
push
popa
out
in
mov
pop
push
xor
or
idivl
xor
mov
sub
stos
or
sub
xchg
pop
dec
roll
testb
cmp
inc
hlt
in
sbb
es
test
sub
or
pop
sbb
or
mov
jmp
jp
into
add
and
js
in
ljmp
and
aam
fsub
mov
sarb
sub
sub
insl
sbb
in
cwtl
and
test
es
mov
jecxz
or
sub
mov
and
or
pop
mov
testb
xor
rorb
pop
ficomps
test
fsts
insb
push
movsl
dec
cmp
sbb
mov
out
jl
mov
dec
das
bound
fwait
ja
loop
dec
dec
and
aas
mov
push
nop
pop
mov
dec
cwtl
sbb
scas
mov
mov
jle
out
or
push
dec
and
and
jbe
dec
jg
push
pusha
movsb
mov
mov
cmp
dec
inc
ljmp
inc
inc
pusha
mov
fsubs
cmp
les
adc
nop
sti
add
cmp
push
or
icebp
in
mov
push
inc
cmpl
xchg
movsb
pushf
adcb
xchg
push
stos
fnstenv
lods
or
jb
mov
ficomps
cmp
sub
jg
outsb
das
mov
lods
mov
ljmp
cmp
adc
lock
xchg
lahf
add
jmp
das
lret
outsl
and
xchg
daa
xchg
dec
push
add
ret
movsl
pushf
and
in
fs
mov
in
push
adc
ret
int
mov
mov
mov
add
pop
or
in
pop
pusha
add
pop
int3
incb
inc
xchg
mov
xor
jmp
movsl
sub
aaa
cmp
aad
ret
mov
mov
jbe
mov
popa
pop
or
mov
jb
add
mov
loopne
add
jecxz
jno
lea
call
aad
pop
cmpsl
cmp
dec
imul
mov
movsl
xlat
pop
push
ds
add
stc
add
jno
adc
repnz
mov
mov
inc
sbb
out
pop
fsubrs
mov
mov
sbb
mov
lcall
cmp
ja
jl
add
xchg
add
out
mov
add
or
pop
jo
mov
jb
iret
in
sti
push
stos
bound
clc
mov
addl
imulb
and
or
add
icebp
out
add
adcl
xor
jge
mov
aad
sbb
inc
mov
add
and
pop
ja
ds
test
jge
iret
mov
aad
loop,pn
fwait
jno
push
inc
push
test
jae
cmp
pop
cltd
inc
add
push
dec
adc
inc
repnz
add
fcmovnu
adc
adc
xor
lret
test
inc
jg
push
mov
pop
pop
pop
push
sbb
dec
jge
popf
mov
sti
or
xor
imul
aam
outsb
pop
mov
cmp
push
rorb
rcll
mov
iret
sbb
push
and
cmp
push
push
adc
add
addb
int3
cmp
imul
xchg
add
test
imul
add
and
or
je
scas
ret
mov
or
add
add
inc
or
nop
xor
repnz
ljmp
ret
loopne
pop
ljmp
bound
sbb
mov
inc
adcl
jb
mov
push
scas
jmp
div
sbb
stos
and
andb
lds
lcall
add
push
or
sbb
es
or
and
xchg
mov
adc
push
out
pusha
inc
jge
dec
add
test
nopl
mov
aaa
add
scas
add
sub
mov
pop
xor
and
jns
shlb
add
rcl
add
mov
dec
mov
lea
sub
out
imul
into
xchg
mov
xchg
push
adc
xor
add
push
aas
mov
test
pop
fisttps
mov
push
xchg
enter
xorl
push
xlat
call
and
sahf
xorl
fwait
mov
in
add
xor
add
add
shr
and
xchg
es
mov
fwait
sub
scas
xchg
pop
inc
push
outsb
pop
test
xchg
cmp
or
mov
and
lock
cld
sbb
push
jg
xchg
loop
sub
mov
pushf
push
test
shll
aaa
push
jg
aaa
sahf
pushl
cltd
sbb
add
sarl
test
pop
fwait
cli
test
xchg
sbb
add
insb
cwtl
pop
or
add
pop
cld
sti
or
push
push
pop
sub
mov
fnstcw
mov
jo
pop
inc
push
inc
pusha
inc
xchg
and
dec
cs
pop
xchg
test
or
pop
push
or
dec
call
imul
and
add
xor
cmc
jg
icebp
pop
js
cwtl
lock
dec
add
in
and
ds
push
cltd
add
addb
lods
mov
dec
xchg
out
sarb
add
add
adc
push
and
addb
pop
das
pusha
popa
push
dec
out
cld
popf
mov
ret
cmp
inc
rolb
outsb
fucomp
xchg
rol
pcmpgtd
cmp
clc
not
das
loopne
adc
sar
pop
clc
incl
add
cwtl
push
stc
imul
js
cmp
aam
daa
shlb
loopne
adc
aam
insl
lock
repnz
dec
mov
push
out
mov
fildll
ror
shlb
pop
or
lea
inc
add
je
or
or
mov
or
shll
mov
ret
dec
add
adc
mov
out
mov
xchg
test
jecxz
pop
jnp
push
sub
jne,pn
in
fwait
mov
jmp
dec
aaa
shl
and
sub
daa
push
xchg
pop
cld
lods
jo
addb
or
movsb
lds
xchg
ficomps
rolb
add
sbb
sbb
vmovsldup
jne
mov
jae
pop
mov
mov
test
dec
in
pop
cmp
jecxz
inc
push
inc
add
cltd
add
cmp
les
fsubr
repnz
cld
and
add
or
jle
rolb
pop
scas
pop
sti
sub
repz
and
and
jo
mov
jno
add
mov
adc
es
out
or
mov
mov
mov
scas
mov
fs
sbb
inc
in
fwait
sbb
xchg
pop
test
pop
inc
xchg
icebp
and
shll
lea
movsb
enter
shl
out
mov
push
pushf
fadd
cmpl
mov
shl
mov
mov
rcrb
or
push
pushf
mov
fidivrs
sub
in
push
pop
mov
jl
push
pop
cmp
push
dec
and
out
lcall
loopne
stos
sbb
in
and
xor
pop
loop
pop
test
adc
imulb
xor
enter
lea
fnstsw
inc
jp
cltd
or
mov
lcall
pop
push
shrb
sbbb
sub
shlb
test
fcompl
xlat
xchg
xlat
or
lods
add
lret
mov
mov
jl
xor
pop
add
clc
outsb
add
xor
push
push
jle
mov
add
or
sub
dec
inc
add
es
jmp
clc
or
and
inc
adc
sbb
subl
cltd
mov
ljmp
xchg
lret
sub
mov
and
mov
mov
push
in
mov
mov
ret
dec
jbe
loopne
fstpl
clc
inc
cld
andb
data16
dec
push
cmp
insb
push
mov
mov
inc
adc
cmp
out
push
push
add
enter
dec
fcoms
fwait
add
sbb
aas
lcall
xor
inc
mov
jnp
bound
dec
arpl
adc
into
fldlg2
jo
pop
adc
or
lret
addr16
out
xchg
imul
adc
dec
pushf
adc
pop
inc
aaa
iret
testb
push
xchg
add
jo
mov
cmp
mov
pop
inc
inc
mov
and
pop
mov
mov
jp
sub
loop
xchg
lea
mov
filds
push
imul
in
ljmp
stos
lret
mov
inc
mov
stac
jne
adc
push
cmp
add
push
mov
or
call
ficompl
or
std
and
xor
pop
pop
insb
ret
push
rol
push
add
ficoms
insl
add
movsb
clc
mov
std
add
push
or
sub
bound
adc
aaa
ficompl
pop
mov
adc
push
test
das
mov
in
imul
shrb
popf
push
aas
les
lea
push
sbb
add
in
pop
dec
xor
pop
jo
aam
adc
lret
cltd
jp
push
sbb
fwait
lods
testb
or
inc
xlat
cld
fucomp
decl
xor
jecxz
cmp
pop
jb
push
xchg
rcrl
add
rcr
int
lea
andb
or
fimuls
outsb
fcmovne
sub
and
aas
jg
outsl
pop
mov
rol
dec
sbb
rcll
stos
ja
xor
int
mov
push
js
loopne
fistpl
mov
cmp
cmp
jecxz
ljmp
push
in
jecxz
adc
lods
jbe
enter
fisttpl
flds
pop
sub
mov
xor
pop
cli
and
adc
jmp
dec
cs
fildll
push
lods
jnp
and
push
pop
sub
jnp
arpl
jecxz
loope
sar
adc
pop
outsb
cmp
jns
hlt
lahf
mov
xor
mov
lock
cmp
out
pop
mov
cmpsl
test
ds
sub
push
sbb
es
cmp
mov
popf
push
insb
mov
leave
stos
fisttpl
push
mov
jg,pt
loop
adcb
outsl
popf
jnp
push
mov
shlb
mov
std
xor
notb
lock
fildll
push
lods
pop
or
subb
add
lret
fistps
incl
mov
pop
mov
sbb
popf
data16
xchg
mov
aad
dec
hlt
rorb
cli
fildll
mov
push
xor
inc
out
adc
out
pop
sub
pusha
popa
pop
inc
xchg
testb
push
popf
ret
inc
mov
lods
incb
inc
push
lods
pop
sub
stos
dec
mov
ljmp
sbb
loop
xchg
add
xchg
fidivrl
call
or
jg
adc
mov
stos
push
and
les
ret
daa
jbe
fcom
adc
pop
or
cmp
repnz
jne
testb
bound
sub
push
lds
rcrl
dec
jmp
or
lea
mov
rcrb
mov
adc
cmp
sbb
pop
jp
out
push
mov
sub
loopne
jae
in
addr16
fdivs
xchg
mov
jbe
push
mov
ret
sub
jge
or
lds
add
lds
test
cmp
push
adc
jg
mov
mov
mov
and
sti
sarl
fwait
out
cmp
out
mov
push
jo
call
cwtl
or
push
negb
xchg
incb
cmp
xchg
ror
fwait
jg
mov
jmp
roll
rorl
cli
flds
adc
fildl
psraw
or
fwait
sbb
pop
push
mov
pushf
mov
rorb
mov
bound
mov
jmp
or
add
add
or
mov
test
adcl
cli
fbld
lahf
mov
mov
push
fidivrs
clc
popf
dec
movsb
push
inc
hlt
jne
gs
in
sub
clc
mov
dec
sub
in
jno
add
subb
fldcw
stos
jle
rcrl
pop
add
std
sbb
xor
into
fwait
cmp
add
xchg
mov
outsl
sarl
imul
faddl
jae
dec
and
mov
test
shrb
pop
out
xor
mov
lock
in
icebp
in
in
xor
push
mov
add
cld
mov
outsl
test
fnstsw
icebp
xor
out
imul
or
mul
adc
scas
pushf
stos
pop
and
mov
mov
popa
pcmpgtb
nop
mov
push
xor
sbb
mov
addr16
fildll
jl
dec
add
je
add
imul
adc
daa
cmp
pop
vmovlps
rcr
cmc
insl
fsubrs
push
xor
cmp
adc
arpl
adc
and
mov
xor
shrl
dec
stos
adc
mov
ljmp
ja
movsb
mov
adc
adcb
xchg
and
push
sbb
push
cld
sbb
jbe
jno
stos
mov
and
into
add
or
and
push
cmc
adc
adc
in
pop
outsl
sbb
stc
inc
movsb
pop
mov
xchg
ret
loope
jnp
push
sub
mulb
clc
xchg
sub
mov
push
stc
lret
xchg
outsb
mov
daa
test
icebp
jle
xchg
jp
xchg
push
jnp
sbb
sub
dec
adc
mov
loope
sub
add
push
insb
mov
icebp
mov
add
lret
mov
jne
add
add
cmp
adc
mov
fidivs
aam
add
aaa
lods
icebp
push
loop
outsl
mov
cs
xchg
je
xchg
mov
jnp
pop
adc
push
mov
ljmp
sub
addl
dec
xor
xchg
iret
out
jle
mov
cwtl
cmc
jae
pop
out
pop
mov
loop
cltd
inc
jl
aad
mov
out
fsub
lods
movsb
fldl
or
add
mov
sti
add
je
daa
nop
inc
test
adc
or
xchg
adc
fbstp
mov
push
leave
mov
inc
loopne
js
sti
xchg
js
mov
lcall
insb
shl
outsb
mov
pop
cli
jp
add
dec
fdivs
out
iret
adc
scas
or
dec
pop
add
clc
inc
addb
loop
cmp
and
and
lea
inc
add
and
cld
inc
nop
fnstenv
mov
daa
out
jp
sbbb
add
add
notb
adc
fildl
cmp
int3
movsb
pop
sbb
cs
in
xor
fdivrl
add
jmp
mov
add
sub
dec
sbb
mov
mov
sub
xchg
push
stos
fwait
jmp
pop
or
sub
mov
xchg
and
aad
jnp
shrl
xor
mov
pop
push
mov
xchg
out
loop
dec
push
adc
ds
xchg
jg
fisubs
and
sbb
sbb
sbb
daa
and
add
cmpb
pop
les
sub
push
xchg
add
iret
das
nopl
pop
sarb
push
ja
das
or
rolb
cmp
orl
test
std
xchg
movsb
sbb
loopne
out
inc
cmp
push
shll
out
or
dec
pop
ljmp
cmpsb
or
aam
xor
xlat
dec
stos
inc
and
pop
or
call
stos
les
aad
movsl
and
mov
movsl
insl
in
ja
scas
ja
shrl
jbe
cli
insl
jmp
adc
int3
fstcw
repnz
add
cwtl
add
adc
cmpl
adc
aam
aas
out
popf
or
inc
movsw
addr16
orw
aam
cmp
ret
mov
sub
fwait
pusha
push
fnsave
fs
add
and
les
cmp
dec
and
add
mov
js
bound
les
test
sbb
sub
hlt
and
xor
out
int
pop
mov
add
in
xor
push
xchg
popf
or
loop
stos
sub
or
lret
out
data16
out
call
sub
shl
stos
loopne
add
push
and
jbe
or
push
jne
or
fcoms
sbb
cmc
dec
mov
push
outsl
jb,pt
pop
scas
push
pop
cmc
jns
add
adc
mov
jae
insl
sbb
testl
outsb
rorb
push
cmp
push
cmp
mov
sub
push
add
push
loop
mov
or
adc
sub
scas
test
and
sub
lcall
pop
add
or
pop
mov
and
cwtl
xchg
add
out
push
subb
lea
and
ljmp
xlat
mov
xor
inc
aaa
and
cmp
mulb
inc
cwtl
loopne
mov
xor
xchg
cli
movsl
pop
enterw
in
lcall
loope
repz
adc
add
mov
push
dec
xor
push
jno
ljmp
cltd
rcrl
fiaddl
cmp
or
xchg
shlb
pop
mov
movsb
inc
hlt
ss
sub
incl
add
push
inc
sbb
insl
jne
loop
cli
mov
pop
jno
mov
push
xchg
adc
xchg
push
push
pop
fimuls
add
jecxz
mov
inc
insl
fbstp
add
mov
stc
pop
pop
xor
mov
cld
jg
pop
pop
or
dec
sbb
push
and
mov
js
movsl
dec
add
push
or
xor
push
and
sahf
add
ljmp
invd
psubusb
int
out
xchg
push
push
sub
pop
aaa
aam
mov
or
shll
faddl
sbb
ret
or
dec
adc
ret
icebp
or
pop
xchg
jnp
mov
movsl
cs
dec
sub
mov
movsb
and
jne
xor
jle
neg
xchg
out
cmc
or
xor
sbb
push
sbbb
ret
xchg
adc
lds
add
adc
addr16
js
decb
testb
imulb
clc
add
push
pop
rorl
adc
outsb
sarb
pushf
cmp
pop
sbb
outsl
adc
aas
aam
mov
fistps
mov
or
push
adc
or
jl
je
xorb
adc
dec
cmc
sbb
xor
add
sub
scas
sbb
sbb
test
les
push
jl
decl
xor
sub
push
cmp
cmp
mov
xor
idivl
cli
inc
jecxz
daa
xlat
jns
and
add
cmpsb
loop
insl
mov
insl
dec
aam
dec
cli
add
cmp
jp
fildll
sub
push
movsl
shl
cmpsb
jecxz
push
insb
add
cld
adc
mov
lods
mov
jg
sbb
mov
les
dec
ljmp
or
xchg
icebp
pop
inc
mulb
lahf
loope
clc
sub
xchg
inc
ds
test
js
xlat
stc
add
jno
inc
aaa
ss
mov
orb
mov
mov
mov
mov
fwait
mov
fsubrs
mov
test
push
testl
pop
mov
sub
mov
insb
add
jl
xchg
inc
test
outsb
inc
and
mov
fildl
test
ret
push
movsb
lds
insl
xchg
sarb
mov
mov
push
push
xchg
pop
into
out
inc
rcrl
fildl
dec
xor
cmp
add
movsl
lods
loop
jecxz
std
repz
mov
std
cmp
inc
call
add
mov
push
mov
les
pop
xor
add
sbb
inc
or
sub
es
lock
bound
outsl
xchg
fdiv
jg
call
mov
xchg
pop
xor
shl
push
cmpsb
cmp
lret
mov
fcoms
push
xor
jno
push
cli
pop
shrb
push
loope
jne
xor
cwtl
rorl
or
mov
outsl
in
pop
add
jl
fsubrl
jno
sub
mov
idiv
pushl
aaa
das
cmc
push
sub
adc
or
add
je,pn
rolb
mov
movsl
loopne
ds
gs
in
pop
in
mov
in
jmp
push
fstpt
and
nop
jle
cs
inc
sti
push
add
adc
pop
pop
icebp
jns
subl
adc
pop
and
push
sub
inc
jb
rcl
das
in
adc
jb
in
dec
das
fcmovu
mov
or
or
inc
xchg
inc
mov
push
je
leave
pop
sbbb
dec
call
in
roll
adc
outsb
sub
mov
and
cs
dec
adc
xor
repnz
scas
xchg
inc
sub
xchg
push
in
jle
lea
mov
dec
mov
push
mull
add
in
inc
mov
dec
mov
mov
insb
clc
add
insb
repz
push
mov
mov
and
mov
push
xchg
roll
and
mov
insb
mov
and
cltd
dec
jle
mov
insl
movsl
or
mov
enter
inc
mov
scas
out
inc
ds
inc
fnstsw
or
push
rorb
roll
xor
push
in
ret
mov
je
inc
sub
inc
and
mov
push
out
je
hlt
pop
fcomps
insl
faddl
fimull
jmp
mov
call
sbb
push
outsl
movsl
jbe
lcall
int
xchg
mov
cli
and
pop
fisubs
ret
jnp
jmp
rcr
mov
push
jbe
fsubrp
mov
ljmp
pop
mov
or
shlb
pop
pop
lret
jns
cwtl
adc
xor
jge
adcl
es
xchg
test
pop
rcll
in
or
in
shlb
rol
mov
enter
jge
testb
sti
shrl
xchg
ret
cltd
sar
shr
insl
imul
scas
roll
xchg
mov
adcl
or
pushf
or
cwtl
mov
imul
int3
sub
cmc
xchg
mov
incl
jecxz
sub
movsb
rol
mov
shrl
outsl
and
push
sub
jnp
ret
or
adc
dec
addb
xchg
pushf
lahf
subl
xchg
outsl
cvtps2pi
adc
jg
shrl
pop
loop
mov
lahf
clc
pop
and
mov
shlb
mov
push
not
xor
out
xchg
ds
outsl
mov
fiadds
enter
sub
xor
mov
nop
sbb
out
pushf
pop
leave
dec
sbb
dec
in
jo
fwait
sbb
sti
xor
ja
sbb
push
jle
adc
popf
in
push
loope
repz
xchg
movsb
pop
sbb
sub
call
and
cmpsb
xor
rolb
scas
lods
xchg
jg
mov
adc
lods
stos
lock
and
aaa
xchg
out
jle
outsl
inc
xchg
ljmp
pop
add
fimull
jecxz
mov
sbb
mov
and
push
inc
sti
or
je
js
shl
inc
mov
icebp
pop
jo
pop
insb
jge
cmp
pop
lret
pop
imul
sub
fwait
xorb
jo
pop
and
das
dec
roll
and
pushf
adc
inc
das
sub
adc
sbb
or
mov
add
loopne
dec
pop
inc
cmp
js
xchg
adc
jo
and
sbb
mov
test
adc
inc
pop
dec
movb
mov
lods
mov
cmp
aam
sbb
adc
jns
stc
inc
popa
orl
mov
cwtl
and
ss
popa
shlb
push
orb
inc
orl
filds
nop
js
ret
stc
push
lock
cmp
nop
outsl
add
movsl
mov
mov
inc
inc
mov
or
sbb
jb
bound
mov
icebp
jno
or
mov
inc
add
sbb
loopne
adc
fimull
push
dec
push
add
and
fbstp
push
test
sbb
js
inc
cld
mov
mov
or
add
and
in
lret
in
scas
mov
hlt
dec
inc
push
mov
fdivrs
push
inc
mov
fcomps
in
mov
mov
adc
sub
cmc
add
mov
or
add
sbbb
adc
or
sub
add
or
cmpl
inc
or
add
fcompl
sub
xchg
or
loop
aam
insl
mov
mov
rolb
jb
clc
add
outsl
dec
imull
cli
mov
xor
or
push
pop
lds
imul
leave
mov
movsb
fmul
mov
ficoms
negb
inc
flds
es
shlb
adc
pop
and
push
fistpll
adc
push
push
and
dec
pusha
dec
ret
scas
sarl
mov
in
inc
lea
sub
xor
fucomp
mov
ljmp
test
xchg
mov
adc
lds
pushf
xorb
or
or
pop
or
inc
std
adc
push
adc
or
sbb
add
push
lock
cpuid
loopne
add
and
loop
mov
outsb
cwtl
or
rcr
sub
cmp
xchg
pavgb
cmp
mov
cmp
mov
test
pop
adc
xchg
ljmp
repnz
addb
mul
bound
mov
cld
and
adc
mov
mov
cld
sub
fisttpll
inc
repnz
addl
jmp
in
sbb
sbb
sbb
adc
add
adc
or
int
sahf
jo
inc
pop
loopne
xor
pop
loopne
in
cmc
hlt
addr16
xchg
jl
dec
pop
xorb
loopne
sti
mov
stos
and
or
cmp
jne
fst
rolb
sbb
mov
and
sub
mov
scas
insb
push
fstpt
mov
xchg
fildl
jnp
andb
sub
mov
es
mov
loopne
incl
out
or
popa
mov
and
sbb
and
inc
xchg
jnp
push
inc
int3
pushf
lds
add
mov
div
orb
xchg
and
mov
sub
push
mov
add
mov
sbb
or
scas
das
not
add
std
pop
lods
nop
mov
scas
roll
add
mov
dec
xor
jnp
cld
shll
loope
dec
fcoms
fdivs
xor
loopne
adc
inc
push
orb
aas
xchg
mov
push
adc
push
mov
jecxz
mov
roll
sahf
nop
sub
add
push
pop
xor
pop
xor
cld
add
inc
sub
mov
cmp
xchg
pop
adc
pop
iret
cmp
push
notl
inc
sub
sbb
or
std
movsl
stos
aas
xchg
imul
xor
sbb
mov
xor
cmp
dec
popa
xchg
lret
fildl
jl
lods
ljmp
add
xlat
lea
jns
gs
mov
inc
inc
mov
mov
mov
in
imul
lods
ljmp
sub
insl
outsl
int
xor
pop
call
add
push
or
inc
lods
fsubr
or
lahf
xchg
nop
popf
sti
mov
inc
dec
icebp
fisttpll
sbb
stos
lret
xchg
lret
sub
loopne
cs
out
mov
in
arpl
stos
lds
xchg
mov
in
ja
mov
add
and
jae
push
sbb
clc
xor
popf
sbb
stos
das
push
test
bound
and
rcrb
xlat
arpl
cmp
lret
je
inc
jmp
add
leave
in
sbb
enter
dec
std
or
rclb
jbe
mov
sub
rorb
dec
rol
pop
mov
push
mov
xor
movsl
sbb
pop
into
or
outsl
aad
sbb
jmp
add
push
xlat
push
sub
mov
loopne
jne
dec
ljmp
icebp
mov
fcomi
stos
daa
and
ds
dec
adc
sar
lea
push
pop
cmp
or
std
cltd
jo
add
jne
pop
shll
popf
in
imull
test
jp
outsb
add
outsb
push
stos
jno
xor
and
pop
xchg
jge
loopne
sub
jmp
pop
push
inc
mov
decl
mov
pop
cmp
push
cmpsl
icebp
inc
insb
push
add
aas
flds
outsl
xor
jae
mov
sub
pop
mov
imul
imul
inc
imul
imul
jmp
adc
xor
insb
popa
mov
fwait
push
scas
icebp
in
push
xlat
rolb
ret
xchg
shll
cli
mov
xchg
xlat
aad
dec
mov
or
xor
push
mov
or
mov
mov
rcrb
jne
adc
ja
out
decb
or
repz
out
test
insb
add
or
rcll
pusha
mov
je
insl
xchg
dec
mov
decb
adc
mov
or
sbb
das
sbb
and
mov
push
jge
dec
or
js
loopne
xchg
push
clc
insl
mov
sub
mov
insb
or
pop
push
inc
rolb
std
fbstp
outsl
dec
sbb
inc
unpcklps
decl
cmp
fidivs
push
pop
sub
int3
push
or
in
pusha
jbe
pop
movsl
mov
or
ds
push
loope
je
push
sub
sti
ja
or
add
pop
pop
ljmp
xchg
mov
mov
fucomip
je
cld
and
daa
or
mov
test
pusha
sub
das
jne
pusha
ret
dec
jle
sbb
mov
outsl
cld
out
xor
popf
jbe
pop
les
lods
outsb
in
nop
call
dec
cwtl
mov
mov
jns
cmp
pop
jmp
xchg
mov
xchg
jp
add
std
out
mov
mov
scas
jge
inc
xchg
mov
into
sahf
adc
sahf
aas
sarl
cmp
cli
pop
lcall
adc
xchg
imul
mov
aam
add
mov
mov
jo
cmpsl
add
cli
cmp
xchg
ljmp
adc
iret
xor
outsb
inc
test
xor
mov
jg
dec
js
mov
ja
pushf
push
call
movd
and
inc
dec
inc
add
call
jne
das
add
adc
dec
or
sti
idivb
cmc
icebp
repnz
sti
je
dec
pop
sbb
push
pop
subb
icebp
pop
jecxz
in
movsl
outsb
sti
mov
pop
loope
jg
pcmpeqd
jmp
cmpsb
inc
cli
push
add
call
jo
movsl
and
in
mov
test
sub
xor
pop
dec
les
sbb
fnstcw
call
dec
inc
push
aad
sub
cmp
ret
fbstp
out
and
mov
push
ret
dec
mov
jb
xor
xchg
fldcw
sub
sub
add
push
scas
bound
imul
mov
call
outsb
lcall
inc
fisubrs
dec
bound
add
sarb
sbb
imul
aaa
lret
inc
pop
pushf
or
int3
mov
sub
jnp
push
jo
adc
lcall
add
mov
sbb
xchg
dec
cld
mov
inc
jl
sub
vcvtps2pd
inc
insb
cmp
call
jns
pop
outsb
mov
add
ljmp
arpl
mov
rol
sbb
bnd
sbb
jbe
pop
mov
fstl
std
add
pop
add
mov
or
cmp
add
adc
hlt
mov
ret
in
inc
nop
cwtl
leave
movsb
out
jbe
lret
in
or
js
jmp
iret
cmp
cs
lcall
jno
mov
add
mov
out
lock
mov
lcall
dec
sub
xor
addr16
mov
dec
je
mov
aaa
aam
jp
xchg
pop
test
stos
movsl
xor
aas
sub
xchg
pop
push
js
push
pop
xchg
leave
sbb
jne
xchg
mov
out
pop
pop
pushl
mov
adc
cmpsb
js
add
incl
sub
pop
test
pop
hlt
mov
pop
shl
das
cmp
pushw
xor
fabs
xchg
jp
imul
pop
sbbb
xchg
sub
mov
cli
cmp
xchg
inc
jnp
push
inc
or
call
gs
insb
rcrb
adc
or
dec
std
pop
cli
testb
out
or
or
lods
je
decl
mov
fidivl
sub
rcrl
add
sub
pop
pop
push
mov
and
inc
cltd
add
pop
cli
pop
sub
dec
cmp
in
inc
cmc
sub
test
test
fistpll
push
mov
aad
loopne
or
dec
or
je
cmp
imul
sbb
incl
lcall
out
test
and
stos
jno
hlt
stos
dec
sub
fmuls
nop
cld
testb
inc
sar
push
je
das
in
daa
mov
mov
adc
out
cli
mov
imul
je
imul
pop
lods
mov
ret
push
outsl
jg
scas
fildl
add
push
lods
jg
lea
push
jmp
mov
cli
jo
cmp
nop
dec
mov
dec
hlt
inc
test
idivb
out
stos
cwtl
data16
cmp
sbb
movsb
sub
mov
cmp
adc
sub
jl
push
in
je
stos
cmp
xor
das
or
pop
ja
jg
mov
adc
lahf
push
jb
nop
ljmp
push
aas
cmp
adc
fnop
add
mov
or
outsl
adc
les
and
loopne
cwtl
add
pop
stos
rol
mov
and
mov
inc
aas
mov
and
dec
push
and
mov
stos
adc
push
dec
dec
mov
push
cld
sub
lock
lods
in
push
or
mov
scas
or
not
cmp
mov
xor
fdiv
aas
cmpsl
mov
out
adc
and
push
and
pop
scas
or
lahf
call
je
mov
in
push
sarl
enter
dec
adc
cmp
stc
lcall
mov
fildll
imul
jo
add
outsl
mov
fldcw
mov
sub
push
jns
sbb
rcrl
testl
mov
hlt
add
add
inc
lock
std
repnz
in
sbb
mov
adc
or
les
xlat
pop
rolb
mov
aaa
cld
test
shr
inc
hlt
adc
or
fsubrl
cmp
movsl
data16
lret
sbb
lods
dec
fstl
out
pop
add
rcr
push
inc
flds
orb
or
dec
mov
loopne
or
stos
mov
loop
mov
pop
push
xor
sub
lds
loopne
push
rcl
ss
jno
xor
jnp
xor
lds
pop
and
aaa
cld
inc
xor
hlt
icebp
pusha
push
mov
cmp
xor
adc
xchg
or
add
int3
mov
and
or
cwtl
mov
pop
es
movsl
es
pop
sbb
cltd
mov
add
cmp
cwtl
je
xor
xlat
jp
adc
fbld
and
mov
mov
fdivl
jne
and
add
push
ret
icebp
push
cli
aam
mov
push
and
std
or
ret
add
pop
rclb
xchg
mov
and
inc
sbb
add
add
and
ss
xlat
mov
aam
loopne
push
pop
shll
and
jae
lods
fists
inc
movsb
inc
and
mov
test
and
aam
jbe
out
push
int3
loopne
fiaddl
jecxz
loopne
int
jnp
mov
xlat
lea
inc
jl
movsb
hlt
aam
adc
dec
mov
mov
insl
add
aam
enter
imul
xchg
sub
mov
clc
shrl
data16
loopne
jbe
ja
or
add
fs
push
jo
jecxz
cli
dec
enter
sarb
sahf
dec
push
jo
sub
inc
inc
shll
adc
loop
sbb
loop
fistps
out
and
jb
xchg
mov
xor
mov
sub
stos
addb
mov
mov
aam
lea
inc
mov
add
ss
outsl
add
push
loopne
aam
pusha
add
int3
or
in
jo
les
test
je
ficoms
or
inc
sbb
daa
cmp
add
ljmp
testl
int
add
adc
xor
cmp
cwtl
mov
cmpsl
and
and
add
shll
dec
jp
or
cmp
xchg
lcall
jg
sub
add
inc
adc
jae
push
daa
shll
push
pop
repnz
pop
adc
pushl
fsubr
pop
cmp
jne
roll
sub
and
xor
icebp
cltd
loop
and
hlt
jle
pusha
shr
arpl
and
flds
push
xor
push
mov
jmp
xor
sbb
sub
mov
mov
xor
fnsave
sub
or
loopne
in
aas
jnp
mov
push
or
call
jmp
mov
jecxz
ljmp
mov
dec
xor
dec
xor
repnz
mov
lcall
mov
shl
stc
push
add
incl
push
xor
xor
sub
mov
ret
jecxz
jecxz
add
inc
loope
xchg
mov
cmp
sub
adc
pop
mov
xor
dec
int3
adc
cmpsl
cwtl
cmp
fists
lret
ret
out
xchg
jl
stos
movsl
add
addr16
test
lods
mov
sub
cmp
mov
xor
test
test
push
outsl
aad
je
mov
mov
ljmp
sahf
xchg
mov
cmp
jo
ss
jmp
decl
in
subb
dec
pop
cmp
push
pop
cmp
jne
iret
add
jg
mov
sbb
xchg
fsts
sbb
sbb
push
cmp
dec
mov
enter
into
mulb
bound
rolb
les
push
icebp
mov
scas
ljmp
inc
pushf
mov
sub
fbld
push
nop
add
cmc
clc
mov
and
lahf
sub
stos
xor
jo
mov
mov
aaa
and
dec
insl
pushl
cltd
add
sbb
stc
xchg
repnz
cmc
cmpsl
movsl
in
push
or
test
stos
sub
cmp
lea
xchg
push
imul
pop
dec
ficompl
imul
data16
push
lock
and
mov
push
jo
cmpsl
and
jno
xchg
mov
pop
inc
addb
mov
pop
loope
mov
mov
jne
cmp
hlt
sbb
add
push
sub
movsb
lods
nop
sub
and
rcll
push
jle
sub
mov
les
or
sti
decl
mov
test
push
lods
mov
mov
jp
je
xchg
movsl
into
stos
divb
or
ss
push
sub
lahf
shlb
push
jle
sub
mov
push
mov
jnp
add
loopne
add
mov
and
mov
sbb
insl
pop
and
sbb
mov
inc
sbb
fdecstp
or
mov
arpl
mov
push
loopne
push
fistl
dec
stos
stos
or
and
jbe
jns
aad
or
adc
js
pusha
stos
test
daa
filds
ljmp
pusha
mov
and
inc
test
ljmp
or
cltd
mov
mov
pop
insl
cwtl
ret
push
aad
dec
cmp
mov
inc
mov
inc
and
out
shrb
push
add
popl
add
std
std
ret
fildl
movsl
xchg
push
mov
xor
pop
mov
add
jno
imul
inc
fucomp
sub
pop
or
mov
and
xor
insl
rorb
imul
in
out
out
or
and
lock
aas
mov
add
sahf
cld
test
mov
sbb
lods
pop
pop
xchg
stos
test
cmp
popa
sub
mov
inc
scas
enter
mull
add
call
jg
mov
xchg
cltd
cltd
movntq
out
adc
cmpb
mov
pop
push
xor
push
cmc
cmp
repnz
push
xor
adc
in
jne
xchg
bswap
movsl
sbb
pop
cld
add
push
mov
adc
loopne
lods
and
inc
pushf
les
test
push
mov
sbb
or
test
push
pcmpgtb
leave
dec
and
mov
jnp
test
sub
sub
mov
das
sbb
xchg
aam
sub
decl
repnz
inc
fstps
or
andb
mov
mov
mov
push
pop
xor
aaa
mov
or
cwtl
add
out
mov
inc
aaa
imul
rolb
call
ret
sub
add
sbb
add
mov
mov
push
mov
sbb
pop
add
int
les
mov
lret
xor
adc
fidivs
adc
jns
ds
outsb
shll
sbb
rolb
or
pop
pop
sub
add
mov
out
inc
ret
out
dec
push
add
sbb
push
inc
pop
jo
out
pop
push
pushf
stos
sbb
mov
gs
push
sbb
mov
add
in
shl
jo
sbb
xchg
add
push
cmp
adc
ret
fcmovnbe
or
shl
xlat
push
cld
in
dec
jne
das
jge
fs
cld
inc
test
ret
adc
mov
mov
sbbb
dec
mov
rcl
cmp
add
cmp
xchg
jno
testl
inc
dec
lret
jecxz
js
adc
fmul
les
int3
jo
xchg
sti
push
out
jge
outsl
dec
test
dec
movsl
lcall
or
ficomps
mov
lds
scas
into
mov
fadds
out
sbb
inc
or
jle
lahf
jp
test
ja
inc
sub
jno
and
mov
bound
and
mov
push
add
in
xorb
sbb
sub
sub
movsb
mov
rol
mul
pop
cmp
ds
or
sbb
testb
cmpb
iret
fidivrs
adc
arpl
mov
movsb
jnp
call
inc
inc
ret
int3
jb
or
lock
js
cld
rcrl
mov
je
cwtl
adc
inc
pop
in
cli
in
push
add
adc
add
in
sahf
ret
dec
inc
out
or
push
aad
scas
mov
fstp
loope
jmp
jmp
mov
cli
mov
mov
test
cmp
add
and
sub
sti
rcrb
xchg
mov
push
andb
hlt
sub
push
out
add
shr
adc
adc
jg
fisttps
idivl
lret
fcompl
int3
int3
cmc
scas
ds
inc
or
pop
xor
mov
dec
shl
shlb
fcmovne
jge
lret
inc
sti
test
aad
clc
int3
xor
cmp
add
cmp
orb
adc
hlt
mov
rcr
ret
add
push
push
xlat
add
push
aam
jae
pop
add
dec
int3
adc
das
das
jb
unpcklps
and
testb
adc
dec
hlt
dec
das
sub
fmull
or
add
dec
dec
bound
pusha
ret
addb
scas
insb
and
and
xlat
andb
and
add
cmpsl
mov
dec
jb
stos
pop
mov
in
lcall
mov
add
scas
sub
and
js
pop
fdiv
pop
sub
and
dec
fdivrs
clc
and
dec
push
paddsb
sbb
mov
push
xchg
xchg
sbb
int
lcall
add
faddp
addl
mov
cmpsb
lods
pushf
mov
dec
sub
call
or
push
pop
ficompl
and
adc
jo
pop
xlat
fldcw
dec
rcrl
and
sbb
add
arpl
xchg
aam
and
push
insb
sbb
and
lret
mov
int
push
das
and
sub
into
ja
lods
xchg
and
inc
dec
addr16
jne
xlat
mov
adc
jo
push
xor
and
subl
loopne
adc
xchg
dec
daa
jl
fwait
adcb
outsb
dec
or
add
mov
dec
daa
sbb
jecxz
das
divl
sub
sbb
push
fst
mov
shrl
sub
jb
shlb
and
stos
mov
lcall
inc
nop
pop
int3
sbb
xor
hlt
cwtl
lock
sarb
pop
xlat
xchg
jp
je
ret
pop
sub
or
sbb
cli
fidivrl
faddp
hlt
jmp
sti
adc
sbb
inc
movsl
cs
aaa
pusha
jb
or
adc
mov
scas
fsubl
dec
inc
movsb
fstp
jmp
sub
adc
mov
sbb
out
or
sub
bound
mov
push
mov
and
enter
out
add
pop
inc
mov
and
lods
jp
sub
adc
fs
mov
cmc
hlt
sti
adc
pop
ficompl
scas
adc
sbb
das
lret
lret
les
sbb
push
cmpsb
mov
jp
in
test
adc
sbb
cmp
js
nop
clc
push
push
mov
xchg
dec
mov
dec
mov
add
aaa
pop
rcr
adc
fs
inc
adc
stc
pop
xlat
jne
fwait
pop
gs
cli
cwtl
clc
mov
in
push
js
insb
inc
cmp
jne
cmp
inc
pop
xchg
mov
dec
cwtl
sbb
insl
negl
mov
add
leave
mov
push
aam
int
test
pusha
icebp
push
or
repz
mov
iret
cmp
out
and
in
sub
mov
scas
dec
fstps
dec
jecxz
pop
push
xchg
imul
mov
repz
popa
add
add
dec
orb
xor
add
rol
add
xchg
lds
inc
inc
lret
jmp
sti
in
lcall
pushf
jg
pop
shlb
or
jg
sbb
pusha
cmp
out
test
cwtl
cbtw
push
jnp
test
and
loop
sbb
das
outsb
loop
sbb
jne
cmpsb
adc
xchg
push
paddd
jp
stos
ficoml
fwait
dec
and
cmp
out
pop
in
pushf
push
call
js
out
movsb
adc
icebp
fiadds
push
jmp
test
enter
addr16
mov
add
and
daa
push
aam
or
das
and
loope
add
lcall
shll
sti
fildl
cmp
pop
dec
int3
jmp
dec
xor
pop
fdivs
sbb
aas
mov
lcall
fistl
pop
push
mov
mov
xor
or
jb
test
ljmp
mov
lcall
das
hlt
rorb
push
push
movsl
loope
jno
pop
emms
sarb
xor
out
idivb
pop
pop
outsl
mov
push
push
mov
insl
test
cmc
sbb
and
mov
pop
clc
sbb
sbb
int
ret
jl
pop
das
fucomip
fucomip
jo
cltd
sahf
ljmp
orl
in
cmpsb
or
test
dec
popa
pop
aam
inc
mov
fdivp
lods
das
push
or
call
out
test
ljmp
jnp
and
jb
out
in
mov
hlt
rcr
or
add
xor
aaa
pop
std
jbe
jge
lods
sbb
lds
incl
aas
add
or
mov
and
cli
lret
jmp
sbb
mov
and
adc
xor
cli
aas
and
mov
sti
pushl
mov
mov
add
pop
sub
aad
xchg
mov
pushl
rclb
sbb
lods
mov
aam
sbb
pusha
fnsave
xchg
sbb
dec
lcall
inc
push
pop
mov
add
mov
rorb
leave
jno
push
push
stc
sbb
add
add
mov
and
into
push
xor
lods
call
mov
loope
and
and
movsl
insb
xchg
sar
loopne
ljmp
ffree
inc
adc
testb
lock
inc
mov
xadd
fstpt
std
imul
sub
push
inc
imul
fidivrl
mov
push
and
out
jecxz
xor
pop
or
hlt
jecxz
imul
jo
fstps
xchg
cwtl
fstl
lret
iret
xchg
adc
jnp
repnz
jnp
add
outsl
aad
sbb
ror
icebp
icebp
sarb
and
test
fisttps
lret
sbb
pop
push
add
jp
mov
mov
and
pusha
gs
dec
rcrb
bound
ds
fmuls
sub
dec
dec
mov
xchg
fidivs
rcl
mov
fisttpl
or
xlat
test
ss
jnp
movsb
sarl
mov
fcompl
in
bound
fildl
mov
push
xor
cmp
sub
mov
imul
xchg
std
or
lods
fbstp
addr16
mov
fwait
xchg
ret
negb
jecxz
clc
stc
sbb
les
stc
aad
xor
pop
mov
push
cmp
outsb
mov
mov
adc
popf
and
cmpl
repnz
ja
adc
push
cmpsb
out
sbb
call
push
pop
jb
outsl
sbb
jo
add
mov
js
mov
pop
or
pop
rcr
pusha
pop
adc
into
adc
or
or
push
test
add
lret
mov
add
aaa
push
push
mov
push
cmp
push
add
test
lock
sub
or
cmp
jp
add
dec
inc
mov
sbb
rol
fidivs
rorb
or
pop
add
cmp
aas
addr16
fs
cs
push
lret
or
pop
push
lock
outsl
xchg
mov
push
loop
push
dec
scas
push
add
jae
xchg
sub
push
push
mov
xor
jne
out
inc
scas
mov
outsb
ljmp
add
fcompl
lock
adc
inc
and
sbb
adc
adc
jmp
dec
dec
inc
xor
push
out
inc
cs
test
les
fimull
or
fistl
je
int
lahf
filds
call
rolb
nop
pop
xor
jno
or
mov
scas
loope
arpl
repnz
shlb
push
push
mov
xchg
push
hlt
sti
lea
das
out
adc
test
fwait
pop
mov
idivl
or
xlat
sbb
add
xor
push
xchg
adc
jnp
xorb
lahf
clc
xchg
xor
sbb
jg
dec
mov
rolb
push
jge
out
lret
incl
cmp
xchg
push
inc
in
xor
pop
or
scas
setno
add
insb
lock
jl
lret
test
fadds
stc
add
mov
mov
xchg
push
xor
cmpsl
test
repnz
cmpsl
lods
sbb
loop
clc
dec
ret
add
cmp
xor
mov
ss
std
xlat
push
stos
pop
jl
lahf
push
ljmp
mov
xchg
or
cmp
inc
jl
lods
xorl
mov
aam
pop
stos
dec
aad
and
adc
adc
mov
mov
dec
pop
add
mov
pop
sbb
push
stc
rcrb
sbb
es
mov
pop
mov
xchg
repnz
test
dec
push
sbb
fstpt
push
mov
mov
jge
sbb
pop
test
pop
sub
or
dec
push
pusha
and
orb
cmp
pop
fsubr
cmp
xchg
rcrl
or
pop
mov
out
dec
pop
jnp
dec
pusha
jl
pop
call
pop
and
add
pop
pusha
inc
aaa
and
aam
jp
add
mov
rcrb
pop
sub
sbb
mov
sbb
cs
xor
push
pop
cmp
jl
repz
in
sbbl
adc
outsl
jmp
aas
adc
push
sbb
sti
pop
push
xor
xchg
add
adc
adc
lock
sbb
rcr
jae
mov
loopne
cld
xor
add
lcall
nop
outsb
jmp
lds
test
inc
xchg
push
and
sti
jg
fnsave
jo
sbb
push
pushf
mov
divps
mov
aaa
mov
add
fmuls
push
mov
mov
cs
sbb
jecxz
dec
sub
xor
cmp
or
inc
xor
js
lock
inc
rcr
xor
gs
jo
pop
push
xchg
shlb
sbb
es
jge
test
aaa
dec
push
and
gs
pop
or
sbb
mov
or
xchg
pop
lret
rcrb
fistpl
aaa
push
dec
pop
pop
jecxz
out
adc
icebp
pop
pop
mov
inc
xchg
pop
lahf
inc
sub
mov
lsl
xchg
stc
add
push
pop
jno
sbb
jg
add
fisubrl
or
fwait
or
sub
xor
jg
adc
sub
mov
insl
pop
stos
imul
dec
add
clc
xchg
adc
xchg
adc
push
lods
xchg
jae
adc
ss
xlat
add
cs
or
fs
cld
ds
dec
inc
adc
jbe
test
data16
loop
shl
loop
inc
mov
outsb
mov
mov
aaa
pusha
stos
std
in
inc
adc
cmp
mov
out
and
mov
fistpl
lock
addr16
add
loope
pop
sub
or
orl
xchg
smsw
or
push
aad
pop
out
in
add
dec
andb
rcrb
in
stos
push
out
and
inc
and
arpl
addb
cmc
sub
xor
or
pop
xor
adc
xchg
shl
idivl
sub
sub
pop
jne
dec
imull
stos
adcb
adc
cwtl
push
lret
cmp
push
pop
mov
xor
cltd
rcrb
clc
rcl
jno
pop
and
cmp
dec
ja
clc
and
jbe
ds
js
and
mov
sbb
push
jp
insb
sub
push
adc
cmp
sbb
adc
and
mov
rorb
mov
push
jne
push
aad
adc
inc
lcall
xchg
sbb
adc
xchg
cmp
sbbb
mov
push
sbb
aas
mov
pop
push
xor
add
int
adc
lock
ss
inc
sbb
aas
fcoms
cmp
xchg
je
cmp
dec
xchg
mov
jmp
or
pusha
inc
ret
sbbl
inc
pop
sbbb
jg
jg
jns
adc
insb
pop
loopne
inc
pop
enter
call
jecxz
out
cmp
out
mov
insb
mov
mov
push
sbb
adc
fistpl
hlt
insb
out
push
icebp
and
pusha
imul
mov
in
cwtl
inc
and
and
int
cltd
pop
lods
out
outsl
test
lret
mov
or
pop
shrl
jle
xor
ret
ljmp
mov
stc
mov
add
lods
sti
xor
mov
dec
mov
and
loope
and
sub
mov
fldt
mov
push
jnp
xchg
and
stos
imul
mov
adc
pushf
jnp
shlb
mov
pop
leave
aam
in
xor
mov
in
imulb
fsubrl
sbb
movsl
out
popf
insl
xor
test
and
sti
mov
cli
add
and
lods
test
push
aad
push
mov
sub
pop
mov
lds
xchg
inc
sub
inc
fdivl
xor
orl
and
xchg
fistps
gs
adc
fcoms
inc
sub
mov
ja
fisubl
add
cld
filds
push
pop
sub
jp
push
xor
out
int
sub
push
out
mov
jb
aaa
push
pop
fidivrs
cli
xchg
push
inc
and
outsb
push
mov
dec
js
nop
inc
lods
pop
jmp
cmp
mov
add
add
dec
xor
or
lds
jns
adc
sub
mov
mov
outsl
je
imul
out
fs
adc
or
lods
xor
pop
call
dec
out
dec
mov
fdivs
pop
mov
dec
lds
push
adc
jb
test
in
lea
pop
pop
out
inc
pop
pop
add
mov
inc
or
leave
xchg
rcr
adc
inc
fldenv
in
jno
cs
testb
bound
or
insl
jno
fcoms
sbb
or
push
jmp
mov
pop
pop
mov
scas
aaa
sbb
repz
cmp
push
mov
jae
push
xor
cmp
dec
or
test
pop
mov
inc
jge
push
int3
cltd
faddl
fcmovnbe
or
enter
pop
popf
mov
or
jbe
cmpb
sbb
push
fdiv
lea
stos
ss
shlb
cwtl
xorb
lahf
add
and
jg
sbb
divb
aam
xchg
mov
add
sbb
mov
filds
jecxz
adc
loop
pushl
sbb
fdivp
leave
movsl
dec
aam
fs
dec
enter
cmp
or
ffree
lock
add
sbb
out
cmp
das
les
dec
cld
roll
inc
and
xchg
add
inc
or
xchg
xor
mov
sti
stos
add
fwait
outsb
fcoml
add
cld
pop
or
sub
mov
cmp
adc
lock
je
insl
cld
test
mov
les
cs
xchg
addr16
sub
mov
rcll
adc
icebp
enter
cmpsl
testb
es
and
stc
idivb
aas
dec
insl
aaa
pop
ss
lods
or
and
or
scas
dec
call
ss
push
mov
aaa
add
and
out
xor
mov
test
xor
mov
int3
sbb
rcrb
clc
aaa
orb
sarb
or
jle
pop
lock
xchg
call
sbb
daa
out
adc
jb
mov
imul
outsb
inc
adc
or
into
xor
aam
sbb
xchg
jmp
inc
movsl
es
fnstenv
in
jbe
or
sbb
cmp
cld
icebp
mov
shll
jl
jbe
mull
lock
loopne
push
xor
clc
out
movsl
lods
mov
lods
add
push
cmp
jae
sub
pop
adc
lcall
inc
fs
sarb
jp
xchg
pop
roll
fiaddl
pop
fistpll
jle
ljmp
cmp
sbb
jbe
ja
fsubl
mov
adc
or
js
inc
mov
add
mov
out
inc
xor
mov
lea
mov
mov
into
xor
sub
dec
lret
and
or
xor
js
mov
or
subl
lahf
lahf
push
xor
in
add
rol
sbb
add
jo
push
shrb
in
sbb
add
or
es
or
enter
mov
push
test
adc
sahf
in
push
sbb
ljmp
pusha
js
and
and
int3
and
pusha
sti
dec
push
jmp
movsb
sbb
das
aad
shlb
pop
jne
clc
adc
add
xor
pop
pop
insl
shrb
cmpsl
cli
xchg
or
pop
loopnew
or
jb
lock
pop
fldt
xor
push
es
rclb
inc
dec
xchg
or
bound
ficomps
es
mov
cmp
enter
push
leave
pop
ds
lds
xlat
or
outsl
dec
sub
in
cltd
xchg
loopne
adc
or
pop
call
push
add
or
out
insb
push
ret
or
std
or
sub
hlt
xchg
rorl
test
cwtl
arpl
add
rorb
xchg
stos
cwtl
cmp
mov
icebp
add
cmp
cmpsb
mov
rorl
mov
jge
xchg
mov
dec
dec
shl
imul
mov
cwtl
loope
or
inc
movsl
xchg
andb
sbb
dec
push
mov
or
es
bound
mov
xchg
xor
ja
sarb
js
shr
mov
test
lock
xor
or
pop
mov
je
sahf
xor
mov
insl
pop
push
fists
fsubl
pop
push
xor
xor
mov
ss
outsb
adc
add
xor
adc
inc
push
loop
ja
push
add
or
iret
loope
sbb
stos
cmp
sbb
fsubs
ret
inc
jb
pop
ret
adc
and
add
addl
stos
pop
andb
cmp
test
pop
arpl
jge
inc
sbbb
dec
imul
pusha
call
sbb
test
stos
clc
cwtl
add
addb
pusha
inc
xchg
mov
sbbb
loop
add
ss
clc
jne
lock
out
lret
inc
cwtl
xchg
lret
inc
add
adc
jmp
outsl
int
mov
lods
mov
test
into
and
loop
xchg
shr
or
mov
repnz
xchg
or
stos
filds
lcall
fwait
cmpsb
or
adc
jae
sbb
inc
adc
mov
or
pop
lea
cltd
pop
les
movb
adc
adc
orl
repnz
scas
sarl
loopne
aaa
loope
push
dec
sub
xchg
rol
arpl
push
outsb
into
aaa
push
dec
mov
inc
int3
adc
mov
mov
rclb
add
dec
add
lret
icebp
push
xchg
cld
aaa
fisubrl
adc
mov
andb
js
icebp
inc
xchg
stos
sbb
rclb
cmp
out
aad
prefetch
mov
ljmp
sahf
jmp
mov
jb
push
pop
jo
fsubl
dec
call
push
pop
bound
cwtl
push
mov
push
mov
js
or
in
and
dec
add
rol
sub
fists
pop
int3
jbe
arpl
icebp
push
lock
das
xchg
aam
dec
inc
and
decl
fadds
mov
fs
push
and
add
add
ss
mov
nop
fadds
push
cmp
cmpb
jb
mov
mov
jb
adc
sub
and
mov
mov
mov
xor
adc
pop
inc
and
push
mov
call
sbb
xchg
sub
test
outsb
rclb
loop
jp
adc
jle
or
jae
pop
ficomps
lret
js
test
adc
inc
icebp
push
stc
call
xchg
sbb
and
cmc
add
iret
and
sbb
sub
jnp
jecxz
xor
adc
push
dec
jnp
test
mov
repz
adc
pop
test
je
dec
cmp
dec
push
mov
push
cltd
repnz
mul
subb
xchg
mov
imul
movsb
mov
inc
fldt
popf
sbb
add
repnz
lcall
xor
dec
cmp
pop
push
dec
shr
loopne
call
xchg
and
lods
mov
jecxz
loopne
sub
push
in
test
jae
push
pop
shlb
add
outsb
sbb
sbb
pop
fstl
adc
and
adc
or
inc
inc
push
push
or
fidivl
push
mov
mov
adc
in
mov
jnp
inc
enter
idivl
cld
inc
mov
pop
fcmovnu
test
or
push
inc
into
and
bound
and
sahf
sbb
push
mov
pop
xchg
mov
testl
mov
adc
movsl
cmp
in
mov
sti
mov
repz
mov
dec
add
mov
loope
cmp
repz
pop
cmp
pop
ljmp
in
mov
ja
mov
mov
loopne
jb
or
lds
dec
std
push
das
outsb
or
inc
mov
mov
add
lods
push
add
add
mov
ja
xchg
push
sbbl
clc
aaa
cli
lea
pop
add
and
shrl
mov
inc
pop
mov
imul
xchg
and
and
scas
push
add
xor
in
mov
out
popa
jp
fadds
outsb
lds
jmp
cld
push
jmp
add
out
push
and
sbb
fidivrs
dec
xchg
add
add
cli
push
les
arpl
out
loop
add
cmc
in
inc
out
sbb
and
sbb
dec
clc
xor
daa
xor
lea
movsb
shr
push
aas
ss
fsubs
dec
loope
lcall
cmp
dec
lds
movsl
cmc
mov
mov
and
mov
sub
cmp
test
inc
daa
xor
mov
inc
icebp
mov
rcrb
xchg
scas
push
push
fisttpl
xor
or
int3
shll
mov
add
data16
add
and
and
pop
add
fwait
jecxz
jns
jecxz
lcall
movsl
mov
mov
jnp
or
js
iret
fwait
icebp
stc
add
fs
jecxz
and
je
shr
aam
pop
pop
dec
movb
ret
sbb
pop
xor
mov
int
ja
cmp
inc
inc
pop
rorl
cmpsl
xchg
mov
stos
push
sbb
test
pusha
dec
sub
ret
rclb
push
mov
es
mov
add
jp
cld
dec
cltd
loopne
stos
inc
es
fbstp
pop
pop
mov
shlb
cmp
movsl
pusha
jne
imul
pop
add
jno
pop
push
fbld
mov
inc
jbe
jae
xchg
inc
lret
hlt
push
fmull
fdivrs
sbb
lods
fadds
es
subb
and
add
push
mov
or
int3
jp
popa
pop
dec
push
pop
rcrb
cmp
jne
lods
or
dec
fildll
mov
fdivrl
hlt
pop
js
or
mov
dec
add
mov
xlat
loopne
sahf
aas
xor
aaa
pop
sub
mov
jp
clc
sub
mov
jecxz
jp
in
dec
xchg
or
test
add
sub
pop
movsb
mov
fsts
arpl
adc
in
push
lea
sbb
into
xchg
inc
add
mov
jl
and
jno
pop
add
mov
test
xlat
pop
ffreep
push
xor
cmpsl
add
mov
adc
aas
push
or
popa
dec
xchg
lock
das
push
mov
jno
cmp
inc
aas
es
scas
sub
outsl
rol
es
cld
subb
in
push
sub
jbe
jbe
stc
andl
sbb
outsl
mov
je
jnp
loopne
add
ja
mov
adc
xor
jge
shll
mov
cwtl
sbb
inc
scas
mov
dec
sub
cmp
jo
mov
sub
inc
mov
sub
add
and
jmp
jmp
push
push
add
insb
das
jecxz
push
push
sbb
push
test
add
lods
repz
mov
sti
sbb
outsl
add
js
aas
jg
push
lods
add
xor
mov
ds
push
orb
add
or
lock
jne,pn
xor
test
push
lahf
push
mov
push
andb
inc
loope
adc
in
mov
jmp
dec
jg
stos
xlat
inc
jge
mov
jo
in
ss
pop
xlat
pop
dec
je
or
pusha
pop
cmp
js
repz
jle
sbb
xchg
pop
pop
bound
mov
dec
cmc
outsl
push
std
testb
push
je
mov
les
cmc
or
aaa
jne
cmp
cmp
mov
or
xchg
mov
pop
mov
inc
filds
ret
js
mov
in
ljmp
iret
shlb
test
icebp
arpl
push
mull
inc
xor
mov
mov
outsl
inc
push
mov
test
pop
mov
clc
roll
pop
cmp
out
jg
mov
out
cmp
outsb
test
lock
pop
in
mov
outsl
or
gs
lods
insb
xchg
pop
fldt
adc
cmp
lods
popa
jne
jo
push
std
add
jns
negb
lret
dec
xchg
lock
or
das
rorb
adc
cltd
jl
loopne
pushf
bound
mov
xchg
mov
sbb
inc
mov
adc
idivb
dec
movq
sarb
stos
add
mov
jge
cmp
es
testl
les
lock
aaa
mov
dec
test
das
adc
outsl
fcomip
decl
call
in
iret
sub
and
mov
outsl
fidivrs
dec
decl
loope
xchg
pushfw
fbld
inc
daa
or
js
mov
icebp
aaa
jo
test
xchg
popw
shll
sbb
ss
clc
or
lahf
mov
adc
out
incl
jecxz
pop
jg,pt
out
sbb
into
sbb
lods
clc
out
fmull
xor
push
loopne
add
adcl
shrl
lods
lea
mov
add
dec
jle
hlt
pop
mov
and
mov
add
push
jge
push
icebp
addl
aaa
sub
mov
and
lock
repz
adc
xchg
add
nop
cmc
xchg
lcall
add
sub
cmp
out
inc
add
in
out
mov
add
adc
xor
add
lret
inc
pushf
lods
push
sti
rcll
mov
pop
sub
in
inc
sub
iret
and
or
hlt
rolb
sbb
xor
push
rdtsc
lods
pop
or
add
add
jl
sbb
lret
repnz
adc
inc
jne
nop
cld
jmp
mov
js
rolb
test
fdivl
pop
je
xor
push
mov
sahf
jno
cli
pop
jae
pop
sub
sti
sub
hlt
outsb
add
ret
ror
xor
dec
arpl
das
js
dec
movsb
or
pop
rcrl
and
gs
test
sub
pop
inc
fwait
pusha
mov
ret
shl
xor
lods
and
mov
shl
sub
xor
and
or
clc
into
push
shl
fucom
lock
adc
dec
movsb
lcall
sub
inc
mov
xor
ret
push
xchg
roll
xorb
sbb
jns
push
ret
sub
xor
lret
out
sub
xlat
push
out
push
out
dec
rclb
cmp
inc
in
mov
and
in
push
jnp
js
sti
add
mov
sarb
mov
sbb
je
loopne
out
loope
bnd
push
hlt
push
inc
or
in
sbb
xor
cmp
in
insb
push
daa
pop
dec
or
add
pop
xlat
or
icebp
jbe
push
call
jmp
fisubrl
or
shrl
inc
and
pop
cmc
stc
loop
iret
clc
lcall
jne
rol
in
add
cmp
je
and
in
or
aad
jae
in
push
cmc
insb
mov
adc
ja
dec
jbe
push
cmpsl
push
push
push
es
push
popf
out
mov
jns
lock
xor
push
xchg
inc
sub
inc
jg
lea
sub
enter
inc
and
fs
inc
rclb
iret
rcl
roll
test
cs
push
dec
in
mov
push
test
incl
in
xchg
jle
push
xor
int
addb
mov
pop
push
in
test
aaa
cmp
nop
es
mov
xor
jne
lods
pushf
stos
pop
push
js
outsl
push
lea
inc
pop
inc
ljmp
add
dec
xor
mov
or
xor
fld1
push
rorl
push
movb
dec
mov
xchg
out
and
xchg
inc
imul
dec
xor
or
sar
pop
push
daa
aad
mov
cltd
ret
outsb
mov
add
pop
testl
mov
das
and
mov
pop
add
mov
scas
or
push
inc
ja
adc
add
cld
mov
insl
push
pusha
sub
sub
pop
in
test
lar
dec
cmc
lock
jg
aaa
iret
sub
aas
and
cmp
dec
sub
popa
fnstcw
inc
sar
ficompl
sub
mov
aam
das
inc
cltd
lods
cs
adc
or
sub
xchg
nop
mov
fcoml
inc
clc
or
mull
and
ret
fistpl
xor
sub
xchg
sub
outsl
lock
lea
or
fisttps
cmpsl
add
ja
aaa
push
mov
pop
dec
leave
leave
movsl
ret
push
sub
mov
sbb
and
fucom
mov
jbe
lock
scas
aaa
and
fwait
mov
lds
mov
xchg
mov
jle
sub
leave
lds
mov
mov
pop
add
jge
mov
add
dec
sub
mov
lods
mov
pop
fmull
mov
pop
jge
scas
mov
lret
push
pop
inc
sbb
pop
add
dec
popa
add
add
mov
in
cmpl
test
mov
and
jne
add
ficomps
mov
mov
xor
jb
in
xor
ret
inc
data16
xchg
lods
add
mov
mov
ljmp
ja
movsl
jo
or
pop
mov
les
push
dec
xor
inc
in
sub
jle
inc
pop
xchg
scas
daa
aam
dec
mov
pusha
repz
arpl
or
sarl
cmp
ficoml
push
or
enter
insb
ss
or
aad
lea
dec
adc
aas
mov
sub
aaa
lcall
jl
sbb
add
fdivrp
pop
xchg
inc
les
fwait
out
mov
das
dec
fisttpll
inc
in
xor
xchg
adc
jmp
rcrl
insb
xlat
lret
les
xchg
mov
jbe
nop
mov
sahf
xchg
pusha
adc
xchg
dec
and
xchg
or
xchg
or
push
pushf
hlt
pusha
shrb
cmp
test
push
fs
sbb
cld
adc
xor
sub
add
jae
mov
inc
xchg
sub
jp
pusha
testw
pop
inc
push
andl
push
dec
jmp
add
popf
movsl
or
mov
add
sar
jg
mov
jg
push
pop
sub
mov
shrl
jmp
pop
dec
inc
or
cld
add
mov
mov
loop
arpl
push
or
iret
into
aaa
jle
addb
dec
fdivl
jne
lret
or
shll
inc
add
clc
cwtl
adc
xor
popf
js
sub
popf
adc
fmull
adc
add
loop
jne
mov
ss
inc
push
test
loopne
pop
adc
outsl
outsb
dec
mov
cmp
mov
xchg
fcomps
repz
addb
inc
mov
aas
das
shlb
mov
repnz
and
xchg
popl
mov
mov
stos
rcrl
and
adc
shll
popf
paddusw
add
dec
lea
mov
push
arpl
lods
fmuls
dec
dec
add
add
add
rorl
mov
ror
mov
pop
aam
punpckhdq
inc
xor
pop
test
daa
lcall
popf
test
xlat
ss
andl
xor
mov
mov
push
add
cli
mov
icebp
js
ja
fmuls
mov
test
push
mov
inc
hlt
push
popa
dec
neg
xchg
push
add
scas
daa
push
mov
xchg
cmp
shl
add
or
sbbb
lea
sbb
cmpsb
test
repz
add
mov
xchg
bnd
clc
call
fcoms
pop
rcll
das
cli
xor
push
sti
sub
mov
clc
push
rorb
xor
hlt
ss
dec
mov
aam
aam
add
sub
adc
add
inc
out
sub
shll
cmp
inc
outsl
or
sbb
clc
das
or
sbb
xor
push
dec
inc
fisubrl
push
inc
sbb
and
hlt
imul
ds
popa
sub
ror
loope
ffree
lcall
pop
xchg
loop
sti
loope
clc
sbb
push
test
nop
inc
jns
sarl
leave
adc
ficoms
inc
push
add
lods
test
or
xchg
dec
or
insl
adc
stos
xor
jae
sbb
and
daa
mov
xchg
add
add
iret
insl
shlb
or
adc
xchg
xlat
popa
int3
push
cltd
adc
mov
lock
inc
adc
mov
mov
jmp
dec
call
jmp
test
loopne
test
pop
rcll
mov
inc
or
orb
mov
sti
lock
dec
add
push
lcall
add
or
pop
mov
or
cmp
push
jo
jbe
jb
int
mov
sbb
orb
ds
sbb
and
ficompl
sub
mov
xchg
mov
idivl
ja
xor
pop
add
and
add
or
or
data16
mov
jge
add
sbb
outsl
xlat
add
xor
in
add
mov
xor
xchg
pop
sub
loop
and
aas
or
test
leave
adc
aaa
adc
ret
inc
inc
sbb
xlat
sahf
add
xor
push
sbb
pop
or
pop
jecxz
add
lock
in
add
lods
dec
loopne
lds
jo
dec
out
inc
add
push
pusha
mov
pop
jne
push
mov
mov
inc
repz
mov
ss
lea
rclb
inc
inc
ss
sub
xchg
push
dec
dec
xchg
and
inc
pop
les
loop
or
rorb
add
sbb
xchg
rcrb
insl
and
inc
dec
jb
loop
jecxz
scas
ret
rorb
adc
sbb
xor
movsl
mov
test
and
xchg
int3
rcrb
mov
popf
lock
add
mov
push
add
scas
xor
loope
dec
push
sub
fidivl
and
inc
mov
adc
sub
in
jo
hlt
inc
jl
adc
or
ljmp
and
or
adc
out
xor
dec
mov
xchg
lock
jb
clc
dec
xlat
test
inc
adc
sar
and
and
and
adc
xorb
hlt
inc
roll
ret
dec
pop
pop
imul
jp
sbb
addr16
ljmp
rcll
dec
adc
jne
dec
adc
fdivrl
mov
adc
sbb
out
imul
sbb
es
test
fcmovnb
aas
pop
lret
inc
lds
push
cmpsb
cmp
inc
out
testb
push
mov
inc
or
in
movsb
push
arpl
xor
inc
adc
rolb
dec
stc
and
lds
and
roll
jns
fdivl
pop
aad
push
push
and
clc
push
nop
test
sub
sub
adc
push
pusha
cld
inc
adc
jl
sub
and
movsb
jg
test
pop
jnp
xchg
sub
imul
add
loopne
in
jbe
jle
movsl
shrl
mov
mov
daa
loopne
loopne
rolb
popf
xchg
in
jns
adc
fmull
sub
push
mov
repnz
jp
mov
aad
cwtl
mov
dec
jo
or
push
mov
add
outsb
add
sub
insb
cmova
lret
mov
inc
in
add
out
insb
pop
xor
lock
aam
adc
das
cmp
mov
sahf
adc
sub
dec
cmp
fldz
jl
mov
daa
cli
push
sbb
mov
add
test
adc
sub
frstor
imul
push
hlt
icebp
push
addr16
gs
lods
ja
add
mov
pop
pop
jge
and
out
jne
dec
dec
xor
movsl
stos
pop
xchg
xchg
sbb
cli
cwtl
std
jle
hlt
lods
xlat
adc
and
int
sbb
add
js
pop
fisttpll
les
leave
and
and
sbb
mov
hlt
adc
mov
movsb
jo
rclb
pop
pop
cs
cmc
add
popa
mov
outsb
mov
xchg
push
mov
fidivrs
fyl2xp1
das
inc
lea
add
cltd
and
jle
push
scas
fcomps
jo
and
inc
xor
pop
lock
cmp
js
sarl
pop
pop
mov
sub
add
mov
jg
xor
add
sub
push
sbb
mov
pop
mov
arpl
notl
jne
cwtl
push
or
shll
jecxz
push
push
cs
add
outsl
aam
icebp
add
sub
shrl
xchg
pop
add
cmpsb
test
pop
push
jge
dec
pop
add
mov
or
aam
lock
push
mov
arpl
insb
rcr
xchg
mov
mov
cmpb
subb
jb
pusha
xchg
jb
mov
fldt
pop
subb
add
movsl
lods
xchg
push
sub
insb
jl
mov
dec
ds
push
or
adc
xor
sbb
lcall
dec
sub
mov
call
xorl
int3
mov
push
popf
shr
mov
sar
out
popa
sub
test
int
push
cmp
jo
sub
and
xor
and
sahf
fbld
lret
inc
bswap
jecxz
push
adc
lahf
mov
xlat
inc
hlt
adc
aam
dec
insl
test
ja
test
outsb
cmp
pusha
imul
lock
push
out
cli
pop
mov
mov
shrb
mov
fwait
movsb
rcrb
test
xchg
or
data16
arpl
jge
sub
mov
test
hlt
sub
sti
repz
sub
jo
pop
out
adc
out
cmp
add
int
outsl
sbb
xor
pop
adc
pop
jbe
aam
cli
jge
les
adc
jb
pop
add
insb
sub
push
cmp
or
dec
outsb
pusha
add
jne
bound
jle
insl
mov
push
fadds
sub
push
stos
mov
aad
outsl
fmulp
sbb
dec
in
adc
mov
jae
out
mov
push
das
data16
bound
mov
out
dec
xor
js
xor
mov
mov
cltd
push
into
push
or
pusha
pop
aaa
cmpl
xor
mov
jb
aam
hlt
inc
and
and
and
das
and
lea
push
and
inc
loopne
xor
test
jg
inc
stc
loope
add
pop
imul
aad
dec
push
cmp
sbb
jo
adc
add
jg
and
aaa
in
mov
add
iret
enter
adc
ljmp
and
mov
fistpll
cmp
sbb
lds
jl
or
enter
mov
data16
cmc
adc
enter
mov
mov
pusha
push
popf
or
lods
in
jmp
mulb
je
or
cmp
pushf
and
loopne
push
add
fbld
inc
xor
jge
movsb
xor
jo
std
fldt
aam
add
or
int
std
mov
pop
int3
and
or
mov
inc
aas
jnp
push
orb
data16
add
ss
cmp
xor
push
lea
cmp
outsb
inc
call
mov
push
andb
loope
add
ret
xorb
xor
cmpb
loopne
ljmp
dec
stos
adc
and
xchg
mov
push
cmp
and
mov
push
mov
and
dec
mov
add
scas
mov
ds
fst
in
nop
xor
mov
imul
adc
arpl
fsubs
outsb
push
pop
rolb
enter
cli
jge
and
pop
push
loop
aas
sbb
mov
adc
inc
movsb
shlb
xlat
cmpsl
nop
xor
in
sub
sbb
mov
scas
inc
imul
shr
jge
adc
lock
call
dec
movsb
fwait
inc
sub
push
sub
cmp
jns
adc
aam
and
out
or
test
loopne
xor
ss
pop
push
es
xchg
sysret
mov
mov
lds
lock
mov
jns
andb
popa
ja
dec
mov
pushf
xchg
test
call
mov
lret
int3
lock
inc
das
jge
sub
cwtl
add
pop
add
loop
add
mov
lds
mov
cmp
push
shrb
ljmp
test
lea
jmp
add
pop
int3
add
and
ss
jo
sarl
outsl
add
xchg
and
mov
mov
sahf
inc
pop
nop
push
mov
push
aad
enter
pop
push
pop
cld
notb
into
data16
testl
push
dec
mov
imul
jl
movsb
jno
jle
daa
sarb
and
jg
insl
add
add
mov
outsl
push
add
pop
jl
js
sbb
int3
cli
push
push
add
cld
jo
mov
mov
rcrb
mov
test
jbe
pop
outsb
mov
in
sbb
xor
fdivl
or
js
mov
fdivp
mov
cltd
add
ljmp
mov
mov
mov
sub
icebp
incl
fisttpl
repnz
add
pop
push
jge
fiadds
pop
inc
aad
mov
pushf
js
lock
sbbb
mov
push
test
insl
jp
dec
sarl
out
flds
leave
test
rcrl
cmpsb
or
xor
push
ss
add
pusha
sar
pop
cld
xor
xchg
subb
jns
cmp
mov
add
pusha
fisttps
add
daa
mov
inc
syscall
shrl
and
and
aaa
mulb
jns
pop
add
andb
loop
clc
mov
push
jle
mov
push
inc
dec
or
pop
popa
xor
push
inc
imul
add
cwtl
xchg
js
pop
iret
into
repnz
sahf
sbb
arpl
push
inc
and
sbb
pop
sbb
or
aas
repnz
mov
lcall
fists
add
pop
and
add
adc
pop
insb
add
jb
fcmovbe
hlt
lret
in
decl
jecxz
xor
mov
dec
and
inc
pop
or
imul
shl
nop
std
jbe
pop
mov
popf
mov
sbb
icebp
add
hlt
arpl
jne
arpl
add
inc
roll
in
push
mov
fisubl
je
fistl
adc
popf
add
std
xchg
orb
lahf
or
nopl
adc
ss
js
push
pop
cmp
loopne
fs
ljmp
mov
fisttpl
or
jp
push
insl
cmp
fstl
push
test
add
inc
loopne
or
lea
mov
xchg
loope
mov
ljmp
pop
clc
mov
out
xchg
xor
xor
push
movsb
add
cmc
adc
fmuls
int
push
pusha
sbb
and
or
cwtl
push
inc
outsl
sbb
jge
cmp
out
inc
mov
xchg
pop
fisubs
adc
and
mov
and
inc
add
and
cmp
add
sub
push
cmpb
test
mov
rcr
or
push
mov
pop
jno
pop
add
mov
sbb
or
out
mov
arpl
jno
sti
or
lret
je
sbb
filds
movsl
inc
addr16
incl
cmp
sbb
lods
cmpsb
and
pop
test
add
repnz
data16
lcall
sub
jmp
ror
xor
dec
scas
or
sub
popa
xor
lret
movsl
lcall
roll
sbbb
dec
sbb
ss
lods
push
and
hlt
sub
ret
inc
testl
sbb
or
test
add
shlb
shll
insl
shll
adc
loope
shll
pop
pop
push
mov
lcall
xchg
inc
inc
mov
push
and
xchg
fsubr
aas
cmp
mov
mov
push
mov
frstor
in
cmp
popf
cwtl
stos
push
insb
adc
cmp
es
pop
xchg
imul
rolb
ret
inc
cwtl
mov
out
dec
dec
bswap
mov
dec
jo
leave
mov
push
stc
cmp
pop
jle
inc
je
repnz
mov
movsb
mov
lods
loopne
or
jge
lahf
mov
sbb
mov
cli
xchg
push
bnd
aad
test
fisttpl
dec
out
imul
pop
aam
lods
lods
mov
add
ficoms
jb
and
popf
in
sbb
inc
cld
data16
and
stos
jg
sub
addl
xchg
int
ret
cmp
sbb
or
xor
sbb
les
and
sahf
inc
int3
jnp
add
or
decl
dec
cmp
in
cmp
dec
sti
arpl
ja
outsb
sub
cmpsl
jecxz
add
sti
mov
ljmp
mov
testl
das
xlat
mov
ss
or
jnp
jg
scas
ljmp
or
adc
mov
loopne
xlat
push
sub
push
cmp
das
dec
lods
filds
jl
mov
mov
rol
mov
lahf
mov
xchg
fisubl
test
clc
adc
loopne
outsb
cmp
push
xor
sbb
sbbl
mov
adc
loopne
sub
mov
loope
sbb
or
test
pop
mov
sbb
repz
out
loopne
aam
and
dec
mov
mov
xchg
fidivs
imul
mov
stos
imul
andb
mov
ret
xchg
and
outsl
jp
and
les
mov
jp
movb
mov
inc
insb
cmp
and
push
fstp
cmpsl
lcall
pop
add
mov
cli
pop
paddd
pop
fdivrl
lcall
add
fidivrl
adc
cmp
out
xchg
fisttpl
dec
sub
ret
mov
arpl
mov
fwait
test
push
test
jmp
mov
mov
mov
cmpb
cld
lods
testb
adc
xor
jmp
dec
lahf
das
in
data16
pop
dec
scas
jno
nop
cmp
mov
aaa
mov
cli
jl
lret
leave
jge
lods
mov
or
cmpsl
outsl
adc
ljmp
inc
mov
test
pop
test
xchg
es
lcall
and
pop
rcrb
loop
xchg
or
xor
je
das
data16
or
fisubrs
push
hlt
retw
adc
and
shr
inc
in
pop
cmpsl
lock
lret
and
push
sbb
inc
aad
dec
scas
fcmovbe
in
scas
adc
add
push
rclb
xchg
jecxz
mov
sti
sar
adc
incl
mov
mov
js
mov
adcl
int3
sbb
nop
xor
aaa
mov
or
pop
addb
or
push
adc
fdivr
das
jbe
popf
into
add
fiadds
call
in
push
in
adc
mov
sbbb
sbb
push
pop
pushf
mov
pop
pusha
jnp
mov
fstpl
mov
in
orl
cmpsl
mov
lods
fcmovnb
call
xorb
pop
daa
sub
ss
decl
mov
les
lea
or
lods
dec
fsub
fnsave
mov
mov
aad
stos
fpatan
jne
cmp
jl
mov
and
sbb
xchg
mov
xor
negl
xor
fwait
pop
mov
cmc
fcmovnu
mov
addb
inc
sub
mov
push
sti
or
pop
lds
mov
pop
cli
jg
mov
push
aam
and
dec
mov
aaa
test
sbb
jo
les
mov
enter
mov
dec
arpl
dec
sbb
sub
movsl
add
xor
xchg
push
adc
aaa
outsb
or
jae
sarb
add
jmp
imul
jle
lcall
xchg
ret
loop
mov
ret
sub
test
mov
pop
outsb
pop
mov
mov
xchg
push
xchg
dec
sbb
xlat
stos
cli
xor
push
insb
xchg
push
ja
popf
scas
ret
repnz
sub
add
pop
sbb
int3
subb
inc
roll
jp,pn
pushf
jmp
mov
mov
fs
fsub
loopne
mov
lods
push
adc
xor
push
or
sbb
adcb
hlt
scas
stc
or
jmp
outsb
pop
pop
mov
or
dec
xor
or
mov
test
push
xor
inc
push
addl
outsl
sbb
jbe
bound
cli
decl
inc
pop
pusha
jecxz
mov
je
jmp
sbb
or
push
mov
adc
sub
fsubs
or
gs
mov
xchg
adc
push
mov
mov
pop
add
ds
adc
mov
sar
lret
sbb
lea
fidivrl
mov
pop
mov
ret
lock
popf
out
push
out
sub
mov
dec
jge
enter
mov
or
aaa
mov
push
cltd
sub
mov
inc
push
pop
fildl
pop
pop
push
jg
xchg
ficomps
jno
imul
add
pop
sar
divl
aad
movb
dec
or
mov
pop
ret
mov
add
es
xor
test
push
sub
inc
push
dec
lods
cmpb
call
je
out
adc
sub
lcall
sub
cmpl
rolb
shlb
pop
cs
pop
in
int
jg
rcl
js
and
stos
add
test
push
jbe
pop
push
aad
add
add
and
stos
or
inc
push
dec
shlb
out
fidivl
sbb
enter
push
in
or
jb
test
mov
les
xchg
xor
mov
or
cmpsb
dec
xor
mov
mov
mov
adc
xchg
popa
imul
movsl
jmp
mov
cmp
in
pop
xchg
outsb
mov
fistpl
add
pushf
outsb
adc
mov
mov
mov
pop
push
pop
hlt
mov
cltd
in
outsl
push
cmp
rcrl
or
inc
pop
xor
jmp
xor
leave
push
dec
sbb
imul
ds
inc
fucomi
fwait
jge
push
push
loope
enter
imul
pop
inc
ja
dec
pop
mov
imul
testb
loope
lea
sbb
rcrb
jae
pop
jl
sub
push
pop
xorl
in
push
clc
pop
lret
mov
fsubrl
push
push
in
pop
and
mov
or
hlt
lods
shr
mov
pushf
imul
sub
jge
jecxz
add
jecxz
adc
sbbb
stc
loopne
clc
mov
inc
clc
add
adc
repnz
mov
inc
cwtl
push
add
xorb
mov
dec
aad
dec
mov
xor
cwtl
xchg
mov
aaa
inc
cmc
ds
jp
add
cmc
test
stc
sbb
ljmp
add
and
out
fildl
lret
jno
bound
push
les
rclb
add
in
sbb
and
mov
adcb
loop
mov
mov
in
mov
mov
mov
jne
xor
and
bswap
je
mov
jns
add
xchg
or
aam
and
mov
mov
add
test
loope
mov
nop
and
pop
xchg
xor
or
ja
or
jo
insl
adc
xchg
mov
inc
lock
mov
nop
jnp
rorl
addb
aas
adc
or
xchg
leave
sti
xchg
mov
fidivrl
pop
xchg
sbb
or
iret
mov
outsl
lods
icebp
pusha
add
pusha
push
shlb
sub
adc
push
addr16
sub
es
es
rclb
fnstcw
shr
jmp
push
rorb
clc
cmp
add
bound
jbe
jl
cmp
xor
repnz
fimuls
mov
daa
test
es
sub
mov
dec
pop
push
xchg
inc
adc
addb
mov
inc
inc
andb
cmp
and
stos
arpl
push
sbb
xor
jmp
push
cmp
sub
sarb
insl
pop
ja
dec
jns
add
enter
iret
and
out
mov
mov
and
in
aam
rorb
pushf
xor
pop
rcrb
mov
movsl
lds
pop
icebp
mov
lret
fsubrl
clc
inc
cmp
mov
mov
add
out
ja
mov
fstl
pop
mov
sbb
or
into
ljmp
xchg
ret
enter
lea
add
xchg
in
int
add
andb
xchg
daa
jp
sahf
inc
mov
mov
das
mov
pop
pop
pop
mov
mov
stc
or
lods
out
inc
pusha
movsb
in
push
iret
and
lret
xlat
insb
scas
frstor
jp
pop
push
pop
js
aas
sub
or
xor
sub
lret
sti
xor
mov
jb
loopne
rorb
xor
sbb
subb
add
and
mov
inc
lahf
test
iret
xor
jecxz
outsb
xchg
test
test
and
mov
jmp
add
pop
dec
ss
mov
push
sbb
cmp
push
movsl
push
dec
sbb
xchg
cmp
in
mov
enter
and
stc
mov
loop
mov
js
push
xor
push
add
fildll
aad
test
add
outsl
xchg
pop
inc
pop
mov
pop
add
lcall
mov
xchg
cmc
jecxz
mov
ret
mov
xor
xchg
mov
inc
leave
and
das
icebp
or
and
imul
push
mov
test
ljmp
fiaddl
xor
pop
mov
mov
fsub
pop
inc
fdivl
pusha
add
inc
test
cli
jg
stos
xor
mov
mov
nop
adc
fs
loope
xor
adc
sbb
fcoml
xchg
mov
add
ja
bound
push
or
aaa
mov
call
popa
dec
xchg
mov
stos
loope
mov
add
and
dec
arpl
dec
push
lret
fldenv
test
das
pop
cli
push
push
cmp
aam
loop
sbb
fdivrl
xchg
jno
inc
test
add
mov
jp
adc
sbb
and
shr
sub
aam
out
arpl
out
ficoms
scas
mov
rcll
inc
shl
sbb
dec
add
add
daa
adc
cs
imul
inc
daa
sub
rdpmc
pop
sbb
and
adc
jmp
fnclex
push
jns
xchg
dec
xchg
dec
aad
sub
test
stos
rol
pop
inc
jecxz
mov
push
sub
les
not
xor
sbb
adc
adc
dec
jecxz
aaa
jns
andl
cmp
shrb
jg
decl
ret
add
mov
pop
xlat
aaa
lock
fadd
sbb
mov
jp
sbb
addl
std
mov
xchg
in
ss
mov
sbb
lods
pop
lds
push
hlt
push
xchg
adc
dec
cmp
js
loope
xorl
mov
stos
jmp
mov
cmpb
push
gs
cmp
jmp
xchg
adc
mov
pop
std
gs
imul
pop
call
lcall
mov
xor
mov
push
sbb
orl
sub
aam
les
test
xchg
mov
cmp
adc
sbb
cld
ds
adc
gs
mov
icebp
sarb
xchg
mov
jg
outsl
inc
adc
scas
jmp
jecxz
mov
pop
mov
loope
add
push
pop
jno
stos
push
mov
mov
imul
movsl
mov
mov
add
insb
cwtl
out
xor
iret
and
and
jg
pop
jle
out
pop
ss
add
jnp
cltd
adc
popa
popa
pop
idiv
mov
jp
jecxz
pop
iret
push
adc
lods
dec
bound
mov
cld
adc
cmp
je
mov
jmp
or
das
add
inc
and
gs
pushf
cmc
mov
aas
jns
jge
jle
mov
cmpsb
push
mov
jno
cli
call
popf
xlat
xchg
stos
stc
clc
adc
icebp
inc
xor
fisttpll
or
aaa
cmp
mov
adc
pop
lods
insl
icebp
incl
jnp
add
fucomp
js
mov
nop
jle
mov
and
shr
push
les
mov
outsl
add
call
ret
and
fistpll
jl
sbb
in
lcall
in
cwtl
bound
cmpsl
mov
pop
pop
inc
movsl
sbb
xchg
or
outsb
mov
dec
cmp
or
xlat
jo
repnz
xor
sub
imul
mov
imul
fstpl
push
or
push
jno
add
and
pushf
lock
mov
ljmp
jb
cli
fcoms
lret
push
and
test
mov
shl
mov
cmpsb
xchg
pop
adc
mov
push
pop
add
lods
and
mov
fidivs
jo
pop
aam
outsb
sbb
jmp
xor
jnp
cld
push
outsl
lock
jbe
push
adc
jo
mov
push
test
mov
inc
jns
push
sbb
xchg
outsl
pusha
dec
mov
mov
call
mov
pop
adc
das
and
xor
mov
iret
xchg
out
and
rcr
sar
or
mov
outsb
std
inc
mov
jl
mov
mov
pop
clc
lods
cmp
cmpl
dec
es
cs
shlb
jge
pop
mov
and
scas
and
pop
mov
enter
sbb
insl
ljmp
sbb
xor
inc
mov
sti
cmp
das
enter
xchg
push
xchg
cltd
xor
imul
push
fists
jo
aam
pop
adc
jae
test
sub
ret
stos
xor
xchg
loopne
and
xor
sti
or
sub
pop
pop
mov
push
jp
in
in
das
xor
mov
rcr
add
xor
test
xor
test
and
push
pop
test
dec
xchg
push
sbb
mov
scas
cli
add
pop
sub
aaa
sub
or
outsl
pop
sub
xchg
in
rcrb
sub
enter
addl
jmp
xor
adc
sub
test
inc
fwait
repnz
hlt
adc
cmp
and
fmull
push
or
mov
adc
or
push
push
ds
data16
dec
imul
cli
ret
call
cwtl
and
loop
loop
mov
mov
pop
aam
dec
add
mov
push
inc
cmp
ficoms
decl
addb
cmp
mov
aam
pop
mov
sbb
cmp
inc
loopne
mov
andb
ret
and
sbb
test
aam
cwtl
adc
sub
hlt
pop
pop
aam
xchg
imul
adc
sbb
lea
sbb
sbb
add
push
hlt
es
cmc
inc
lcall
out
fiaddl
sub
pop
or
je
and
mov
xlat
xor
xchg
dec
rorb
push
and
xor
lret
and
clc
ret
ss
js
pop
inc
add
mov
sub
sbb
enter
js
call
xchg
or
sti
lods
adc
sbb
cmp
xchg
fwait
out
subb
frstor
pop
sbb
jge
sub
push
rorl
fwait
push
and
cltd
cmp
mov
loop
push
cmc
jle
xor
jp
cmp
pop
or
adc
cmp
mov
inc
add
xchg
or
or
dec
push
imul
insb
mov
and
pop
add
test
adc
mov
add
add
in
hlt
cmp
and
daa
jo
xor
pop
pop
mov
push
scas
or
movl
icebp
lods
cmp
repnz
push
xchg
loope
mov
xor
push
insb
rclb
cmpb
sysret
push
mov
adc
loope
outsl
add
xchg
dec
mov
sarb
lret
inc
xor
mul
jbe
rorl
in
or
jb
push
cmpl
adc
pop
lret
lret
add
ja
and
or
sbb
add
in
xchg
fiadds
xor
push
and
jb
xchg
hlt
jecxz
call
mov
mov
inc
xchg
lea
es
icebp
jns
push
xchg
shll
xchg
xchg
push
pop
arpl
das
and
pusha
and
xchg
ds
jmp
or
add
inc
sti
ret
popl
shrb
fisubrl
lea
pop
cmp
inc
roll
fimull
in
push
aad
sub
jecxz
inc
test
add
sub
mov
adc
call
outsb
cmc
add
adc
mov
sub
popf
dec
or
mov
ljmp
fidivrl
ror
pusha
addl
test
add
push
pop
mov
rorl
inc
mov
inc
and
out
adc
mov
adc
jb
jnp
add
inc
daa
dec
cs
mov
cmp
fidivrs
insb
push
ficoml
aas
sbb
imul
pusha
je
dec
cmp
fisubl
in
pop
or
sub
xor
in
je
mov
and
xor
push
jno
call
lea
xchg
cmp
movsl
outsl
outsl
cmc
inc
movsl
adc
mov
or
push
xchg
test
xchg
pop
sbb
adc
int
lret
inc
and
mov
stos
adc
in
sti
sbb
clc
cwtl
sub
icebp
adc
mov
fists
lcall
push
iret
cmp
mull
lock
jg
incb
mov
push
jns
mov
fimuls
inc
mov
scas
mov
jnp
inc
xchg
insb
ja
fiaddl
add
sti
dec
add
mov
mov
sbb
and
cli
test
xor
inc
cmpsl
inc
sbbb
repnz
mov
imul
cltd
xor
out
mov
fcmovne
shrb
mov
scas
dec
ds
out
add
sbb
xorl
lods
sub
xor
inc
inc
test
scas
inc
ljmp
push
inc
cld
or
rcr
enter
adc
or
scas
mov
addl
es
mov
rolb
and
fdivs
inc
jle
subb
scas
imul
into
lock
dec
outsb
mov
test
imul
xor
sbb
mov
mov
jb
sahf
je
ret
mov
testb
sbb
push
mov
mov
lock
or
mov
mov
dec
sub
and
jmp
dec
xlat
add
or
fldcw
push
fcomps
xor
fwait
push
gs
shlb
sahf
or
or
or
fnstenv
jle
fsubrp
or
shll
pop
fstpt
add
test
fisttpll
pop
int3
mov
cmp
add
data16
cmp
mov
adc
addl
push
push
mov
xchg
push
shrb
dec
adc
xor
xor
or
sbb
daa
push
xor
pusha
xchg
or
cmp
je
mov
mov
lods
pop
and
cs
cli
mov
mov
cmpl
pop
adc
pop
push
adcl
les
addr16
add
imul
add
std
jl
pop
push
daa
les
cli
adc
pop
add
popf
outsb
xchg
xchg
xor
cli
inc
jnp
in
adc
and
jo
pop
fdivr
adc
enter
rolb
dec
jne
add
test
mov
mov
popf
mov
and
sbb
mov
enter
dec
mov
add
inc
or
popf
sbb
js
rcrb
cmpsb
xchg
add
loope
push
test
dec
inc
fsubrl
lcall
popa
mov
das
scas
xor
sbb
push
xchg
andb
and
cmp
or
lock
sub
sbb
jecxz
out
sahf
add
rolb
or
pop
cli
test
pop
mov
adc
pop
shll
xchg
hlt
xchg
jmp
idivl
neg
push
push
inc
inc
sbb
in
fisubrl
mov
stos
loop
popf
adc
xor
dec
adc
pop
add
out
push
mov
push
out
int3
add
loope
mov
add
lahf
adc
aaa
add
int
cmp
scas
dec
stc
stos
dec
add
push
inc
cmpsb
pop
mov
mov
jp
mov
cwtl
rcll
push
outsb
jo
dec
call
ret
pop
dec
push
fs
test
ret
dec
inc
sub
test
xchg
or
sbb
adc
div
xor
je
add
mov
je
jmp
jnp
add
push
and
shrl
xchg
sbb
fcomps
call
cs
incb
fsubrp
push
cs
pop
fcomps
jae
test
clc
fistpll
jle
xchg
fwait
jne
and
lcall
push
push
mov
or
gs
into
fistps
aad
mov
add
jne
pushf
and
add
dec
arpl
sub
lea
pop
std
push
pop
mov
bound
in
mov
mov
xchg
or
or
fwait
in
jle
outsb
movsb
sub
jb
mov
inc
test
int3
sub
inc
mul
mov
push
pop
rorb
adc
aas
mov
push
inc
xor
dec
mov
mov
push
and
push
cld
xor
loop
xchg
out
jl
test
add
mov
sub
arpl
and
loopne
loopne
jb
dec
mov
das
push
les
xchg
ljmp
lahf
pop
or
xchg
das
mov
inc
and
divl
stos
cmp
add
cmp
pop
imul
push
lods
add
jmp
lods
nop
add
call
xchg
push
outsl
outsl
jmp
loope
cmp
stos
popf
add
inc
sbb
adc
mov
jmp
scas
dec
mulb
loop
imul
push
mov
pop
rol
lds
sub
lcall
cli
outsb
loop
cmp
out
bound
imul
nop
adc
push
rcr
addb
int
xchg
inc
push
mov
mov
push
mov
xchg
ja
and
lcall
xchg
add
out
int3
jge
dec
inc
xor
and
cli
push
lods
scas
out
sti
scas
int3
sahf
out
xchg
and
sub
leave
mov
outsl
mov
add
outsl
push
in
aas
les
inc
push
and
lds
int
pop
xor
pop
or
mov
out
pop
inc
subl
inc
inc
stc
cmc
mov
and
movsl
int3
xor
push
and
xlat
in
out
push
icebp
iret
mov
shrl
rclb
jnp
pop
or
and
add
inc
sbb
addl
inc
les
add
adc
out
rorl
loopne
inc
das
inc
cwtl
xchg
add
jo
jmp
add
loope
les
pusha
popa
jo
push
xor
push
sub
fucomip
stos
lds
add
adc
and
and
pop
adc
fs
add
xchg
and
inc
stos
into
ret
jecxz
jb
ret
movsb
call
lods
fwait
test
mov
inc
fsubrl
or
push
jmp
add
orl
adc
push
filds
subl
int3
sahf
and
dec
jecxz
mov
sbb
mov
xchg
dec
cmp
push
roll
out
adc
fiaddl
adc
or
dec
jno
pop
adc
test
and
xchg
cs
bound
cwtl
sti
add
leave
sub
dec
daa
cmp
pop
inc
pop
and
ret
sub
int
adcb
or
mov
pop
or
cmp
xor
repz
popa
pushf
adc
cmp
loope
push
cs
pop
je
inc
jno
popa
mov
lock
lods
nop
add
out
add
xor
out
mov
mov
jp
adc
lret
loop
dec
clc
fnstcw
shlb
je
aaa
int
cltd
popl
loopne
ljmp
pop
aas
clc
mov
shlb
scas
and
add
mov
fwait
sub
ja
fwait
shll
dec
add
aas
fisubs
and
or
inc
add
xor
mov
insb
mov
inc
add
mov
inc
fcmovu
jg
and
data16
cmp
mov
nop
test
fisttpl
dec
adc
add
rcr
cmp
inc
je
xchg
jno
outsb
add
in
daa
adc
decl
cmp
fsts
push
cmp
aas
rclb
fstl
aam
sbb
and
sbb
outsl
cmc
pop
adc
ficompl
subl
adc
clc
adc
sub
fisubs
jg
or
ljmp
cmp
inc
hlt
das
add
ret
mov
push
cmc
sbb
push
cwtl
test
cltd
xchg
jns
sub
jmp
in
test
adc
js
mov
call
inc
mov
jg
bound
xor
mov
adc
xor
or
cwtl
add
jb
loope
lock
sbb
pop
lret
push
jo
push
outsl
pop
and
jo
xor
sub
add
pop
xchg
cld
mov
test
ret
inc
or
shrb
xor
push
mov
add
test
fs
mov
dec
jno
cmp
inc
addr16
fmulp
in
cmp
add
les
mov
mov
mov
adc
cmpsl
insb
int
decl
pop
and
cmpsb
pop
mov
mov
adc
xchg
icebp
ret
cmp
fsubs
loop
out
in
fildl
imul
push
lcall
cld
bound
stc
xor
gs
pop
ffree
cmp
je
mov
clc
dec
cld
push
mov
stos
mov
sbb
leave
mov
xchg
and
scas
shll
pushl
push
inc
adc
fwait
add
es
divl
xchg
iret
pop
incl
or
add
je
xor
inc
ret
cld
or
popf
pop
int3
or
stos
xchg
pop
stos
test
das
cld
push
push
insb
inc
enter
push
in
dec
es
jg
les
or
sarb
inc
pop
loopne
ret
or
fildll
stos
mov
aad
aas
out
ljmp
fildll
and
pop
cmp
mov
xchg
or
dec
mov
in
add
int
push
cmc
and
lds
cltd
out
jbe
cld
lcall
je
adc
in
dec
inc
loopne
andl
mov
xchg
in
mov
call
pop
push
ret
insb
inc
cmp
clc
jmp
hlt
insb
int
in
pop
add
mov
stos
adc
lahf
push
les
stc
cmp
dec
jl
adc
mov
jle
div
or
or
mov
mov
cmp
pop
orb
loopne
fistl
shlb
xchg
test
mov
lods
rcl
std
mov
and
ret
flds
pusha
fdivrp
movb
dec
lret
cltd
dec
mov
mov
sti
pop
ss
in
lahf
cli
jo
mov
jl
add
test
push
sub
add
nop
and
lcall
mov
ficoml
sbb
arpl
xor
mov
decl
pop
sbb
inc
rcrb
jno
out
jge
insb
mov
test
or
mov
outsb
jb
mov
int
lcall
scas
ja
gs
out
popa
jg
adc
xchg
jb
cmp
pop
or
sbb
shrl
incl
sub
divps
enter
fisubrl
cld
outsl
fisubs
pop
movsb
push
or
sbb
nop
xor
mov
push
mov
popf
adc
out
je,pn
decl
add
out
xchg
sub
dec
jb
pop
scas
mov
mov
das
lcall
lea
call
sub
jecxz
push
jo
push
lock
insl
sbb
xorb
popa
or
std
mov
outsl
jp
jae
sbbb
fld
mov
mov
aam
pop
jp
mov
mov
negb
push
add
dec
shrl
and
sub
aam
cs
xor
mov
pop
out
ljmp
cmp
sub
xchg
inc
arpl
push
fdivrl
mov
pop
lret
jg
outsl
and
jae
and
mov
mov
movsb
push
adc
or
mov
inc
ljmp
stc
push
dec
pop
sahf
decl
ret
mov
mov
jmp
shll
dec
mov
and
scas
loope
movsl
xchg
fcmovu
or
mov
shr
sub
pop
mov
enter
stos
fucomip
mov
mov
and
aad
jecxz
std
in
jle
mov
xlat
or
pop
repnz
das
dec
inc
mov
ret
cmc
sbb
daa
inc
data16
call
insl
adc
mov
cld
lods
lcall
xor
lcall
ss
push
lret
adc
jge
sub
fstps
push
push
lods
add
jecxz
das
push
popa
push
fcompl
sbb
test
cmp
jecxz
jecxz
insl
aaa
cmp
dec
push
push
jecxz
adc
cmp
or
adc
fisubrl
add
divl
movsl
bound
add
mov
test
test
add
adc
shrb
mov
lock
sub
fstpt
insl
pop
mov
pop
sbb
or
inc
add
and
or
adc
adc
fwait
and
fisttpll
jge
pop
pop
sar
add
jb
sahf
jo
xor
decl
sub
dec
fmull
mov
add
scas
stos
stos
mov
push
insl
and
jmp
dec
inc
or
std
xchg
and
insl
or
packssdw
xor
mov
ret
push
mov
push
or
rcr
bound
adc
stos
sub
mov
faddl
adc
add
xchg
xor
hlt
xor
insl
dec
dec
cmpsl
cmp
sub
inc
cmc
ret
jecxz
jecxz
sbb
rcrl
add
xchg
inc
and
rorl
sarb
inc
jg
data16
das
sbb
dec
add
dec
sbb
in
mov
xor
add
cwtl
pushf
push
sbb
decl
jno
sbb
pusha
mov
test
inc
testl
add
mov
add
jmp
lret
xorl
insb
fs
enter
mov
enter
jnp
addb
cmp
pop
ljmp
xor
lock
pop
sub
sar
aaa
mov
rcrb
xor
inc
cwtl
mov
mov
dec
inc
data16
orl
xchg
jb
jbe
mov
pop
inc
cmpsl
pop
mov
push
add
mov
out
adc
mov
add
clc
mov
mov
roll
cmpl
das
mov
notl
mov
adc
adc
or
inc
jg
ret
or
dec
sub
jno
push
dec
jg
mov
add
and
test
mov
nop
mov
psubb
subb
jle
xor
call
pop
andb
add
pop
call
movsb
mov
das
fcompl
adcb
xlat
lock
dec
mov
adc
dec
xor
test
pop
je
in
jecxz
ror
test
push
aaa
cld
jecxz
mov
lock
into
cltd
xchg
idiv
sti
scas
inc
imull
sbb
mov
das
std
out
test
xor
loopne
fstl
addl
mov
push
daa
jge
or
mov
fwait
mov
imul
mov
inc
pop
subl
imul
mov
stc
stc
dec
mov
pop
rcrl
push
push
pop
ret
sub
mov
out
or
push
jl
mov
inc
aad
add
pop
aaa
inc
xor
test
mov
call
stos
cmpsb
bound
pminsw
fsubrl
insl
stos
daa
int3
push
jge
or
and
aad
aam
fs
push
adc
or
fstpl
fildl
lods
or
inc
xchg
cmp
rcll
adc
mov
je
push
add
add
hlt
push
adc
pop
int3
pushf
lcall
pop
add
fwait
lea
loopne
add
adc
xor
and
test
add
xor
jae
fnstcw
shl
mov
ret
xor
icebp
inc
rcrb
mov
mov
int3
rorb
shrb
dec
sbb
lods
shll
sbb
and
push
xor
push
outsl
inc
sti
pop
addps
add
popa
ret
sub
mov
filds
int3
sub
jbe
arpl
and
mov
or
push
ljmp
bound
xor
cmp
fsubrs
pop
fwait
xor
lret
test
les
sub
xor
jmp
bound
sub
adc
movsb
add
adc
and
in
sub
in
mov
xchg
or
push
stos
xchg
add
daa
ret
test
popa
insb
in
fdivrp
insb
push
mov
inc
cli
imul
add
mov
cld
xchg
fdivrl
icebp
data16
mov
les
fwait
push
jp
inc
aas
sub
hlt
sbb
fs
cmc
fsubr
adc
shlb
rcrl
outsb
push
punpckhdq
inc
cmp
outsb
enter
adc
test
or
pop
and
ja
cwtl
add
add
les
sub
pop
stos
sub
xorb
js
dec
xlat
ljmp
cld
lahf
mov
inc
jp
sub
fiadds
insl
cld
nop
adc
insb
bswap
xor
add
repz
mov
sbb
and
call
fisubrl
mov
imul
les
and
push
cmp
mov
xchg
fcoml
clc
pushf
insb
mov
and
mov
mov
pop
ss
and
xor
xlat
push
les
lods
xchg
jle
xchg
stos
out
inc
push
or
sub
dec
pop
mov
pushl
sahf
inc
stos
nop
aad
sbb
pop
rol
dec
nop
adc
stos
xchg
clc
pop
sub
int
lret
cmp
das
jne
enter
loop
and
std
fidivl
testl
mov
push
add
cld
sbbb
das
scas
inc
inc
jge
out
xor
xchg
mov
loop
add
pop
bound
xor
push
adc
push
adc
xchg
inc
push
jae
adc
push
stos
stos
fisubrl
adc
or
cld
test
push
xchg
pop
loopne
jne
adcl
sbb
rcrl
cld
mov
rcl
cli
pop
pop
out
mov
inc
jns
push
outsl
push
xchg
pop
sbb
rcr
outsl
adc
cmp
add
push
and
js
test
mov
ds
out
push
aaa
pusha
andl
or
outsb
jge
sbb
divb
or
mov
out
cmc
inc
adc
cwtl
adc
das
mov
mov
jg
mov
mov
out
mov
mov
cwtl
pop
sub
cmpsb
push
adc
jb
outsl
adc
jge
dec
mov
push
movsl
cmp
push
mov
clc
test
push
jecxz
into
rorb
jg
das
inc
in
dec
cmp
ficoms
xchg
inc
xor
push
jmp
clc
lret
lcall
and
sbb
or
stos
mov
add
pushl
adc
data16
aad
rolb
xor
test
ret
std
fwait
dec
sbb
jl
sbb
push
and
cmp
ljmp
xchg
mov
in
jmp
cmpb
pop
dec
xchg
scas
pop
pop
ja
call
les
les
lcall
add
sbb
sub
add
in
dec
dec
fisttpll
pop
mov
and
les
hlt
test
adc
push
sbb
je
popf
jg
push
sbbb
int3
popf
jnp
xchg
xchg
call
insl
aaa
test
push
pop
sub
data16
mov
rorl
lmsw
int
pop
mov
cmp
add
sub
dec
aas
loop
nop
and
das
adc
xchg
dec
lret
int
or
daa
jecxz
sub
ds
xchg
jo
insb
xor
and
sbbl
int3
into
lods
mov
add
or
int3
fiadds
sub
cmp
repnz
and
loopne
ss
pop
lcall
push
or
scas
imul
outsb
fbstp
leave
rcl
push
jae
sub
inc
shll
mov
aas
add
and
lods
xchg
add
xor
addr16
and
mov
adc
jl
repnz
xor
negb
cli
out
sub
cltd
inc
out
rcrb
enter
inc
cmp
cmpsb
insb
sbb
adc
roll
inc
in
push
jne
hlt
inc
rcll
jp
cmpl
push
add
and
push
sub
mov
movsl
push
aaa
mov
mov
test
iret
push
dec
cld
sbb
shr
xlat
and
dec
std
adc
and
dec
pop
sti
xor
inc
stc
or
sub
mov
inc
rcrl
test
orb
ficoml
mov
popf
outsl
fucomi
or
fsubrs
push
and
insl
adc
fdivrs
inc
out
xlat
jo
clc
push
inc
mov
mov
test
popf
adc
pop
call
sbb
fcomi
call
data16
inc
rclb
test
push
dec
leave
into
ljmp
cmpsl
or
mov
pushl
iret
mov
fimuls
xchg
lds
aaa
loopne
and
or
stos
inc
xchg
mov
and
and
inc
add
pop
leave
pop
std
mov
inc
push
mov
imul
and
mov
bound
mov
jo
ret
cmp
mov
addr16
and
adc
cs
mov
mov
stos
add
or
pushf
frstor
or
jp
dec
sbb
sbb
fisttpl
mov
push
fcompl
imull
adc
pop
sahf
mov
push
loopne
insl
jb
cmc
mov
fcmove
insl
fdiv
inc
and
sub
pop
mov
mov
sbb
in
fnstenv
or
lcall
and
icebp
xchg
inc
outsb
les
mov
jne
pop
ss
bound
stos
cmp
iret
aad
nop
mov
jbe
ss
shrb
push
pop
mov
sbb
adcl
adc
bound
sahf
shlb
cs
pop
iret
cmp
or
ss
mov
push
pusha
fs
dec
repnz
test
test
call
test
add
xchg
fwait
stos
jp
sub
stos
ljmp
iret
pop
or
xchg
fbstp
insl
lahf
stos
push
andps
cli
xor
and
pop
xorb
loopne,pn
xor
sbb
mov
dec
dec
jb
ret
inc
out
inc
movsl
les
insl
ret
cwtl
dec
sub
cmp
sub
push
cltd
jno
push
aam
imul
xor
inc
jmp
sub
fsubl
add
outsb
negb
add
cmpl
mov
jbe
js
sbb
push
pushf
xor
or
inc
dec
ret
mov
shll
sub
dec
cwtl
sbb
lods
xchg
test
test
xor
mov
jns
push
pop
add
rcll
mov
insl
xor
into
out
jmp
inc
ja
mov
dec
push
pop
push
inc
xchg
add
jnp
adc
sub
ret
outsb
cmpsl
mov
mov
cmp
sar
int3
jb
clc
pop
inc
out
jle
outsl
or
inc
inc
outsl
cmp
and
mov
clc
xchg
sarl
push
sahf
sub
clc
push
xchg
pop
push
add
mov
pop
mov
fnsave
sbbl
in
mov
enter
push
push
xor
incl
jge
push
cmp
fimuls
mov
decl
scas
sti
add
mov
jle
xor
test
das
mov
rclb
mov
push
mov
mov
jmp
outsl
das
mov
pop
icebp
outsl
add
hlt
mov
pop
insl
std
repnz
test
cmp
push
adc
add
call
mov
into
cltd
call
lret
fldl
mov
lock
mov
push
mov
jnp
xchg
mov
mov
jo
stos
popa
ret
lahf
dec
rolb
mov
and
sbb
cs
mov
stos
or
sbb
jg
cmp
or
dec
mov
xchg
adc
shlb
jg
mov
xchg
add
push
aas
cwtl
daa
enter
incb
lods
inc
cmp
repz
push
push
scas
and
aaa
andb
test
and
cmpsb
mov
jo
test
sbb
mov
mov
and
jno
rorb
xchg
je
into
fbld
je
cld
out
iret
out
loopne
mov
xor
fadds
jmp
inc
or
outsb
sub
and
or
out
daa
inc
mov
dec
sbb
jl
pop
xorl
mov
ja
xchg
adc
das
sub
xor
inc
mov
push
and
fmuls
sbb
cmpb
sbb
incb
cltd
test
and
pop
xchg
clc
sbb
dec
repz
rolb
dec
add
in
call
xchg
loop
cmp
or
xchg
jbe
fwait
insl
xchg
adc
fninit
es
push
cmp
dec
mov
adc
adc
dec
lods
pop
pop
negb
in
mov
add
dec
test
adc
cld
jns
mov
test
dec
shrb
xlat
ret
dec
daa
adcb
mov
xor
push
fcmovbe
pop
arpl
cmp
jo
insl
fcompl
or
ljmp
inc
and
push
mov
sub
jbe
outsl
sub
adcb
cmp
pop
sbb
push
cs
xchg
rcl
pop
js
mov
aas
and
cli
jne
movsl
or
pavgb
les
cmp
mov
xchg
push
ds
cld
mov
mov
fiaddl
icebp
xor
shll
fldl
or
shr
mov
cmp
fstpt
inc
out
insb
mov
dec
into
dec
int3
in
mov
fsubr
mov
mov
mov
and
cs
mov
lret
lret
outsb
andl
sbb
mov
cmp
inc
or
sbb
sti
push
push
mov
cld
pop
sbb
pop
and
jmp
jo
arpl
push
daa
mov
mov
mov
add
or
or
orb
or
fwait
add
and
sbbl
push
daa
outsb
inc
hlt
pop
jge
adc
xor
adc
bound
add
or
mov
fmuls
mov
inc
movsl
cmpb
cwtl
push
mov
jnp
jb
int3
add
outsb
ss
adc
int3
sub
adc
pop
pop
shlb
rcll
pop
cmc
or
aad
into
dec
adc
rorb
and
push
shlb
mov
jo
or
lock
sbb
add
sahf
and
ja
xchg
sub
mov
pusha
inc
int
cltd
lcall
loop
ds
adcb
cld
mulb
pop
cmp
and
js
cwtl
shrb
mov
faddl
jecxz
orl
stos
popa
push
xchg
bound
adc
add
cmp
in
out
add
loope
insb
or
inc
jnp
daa
or
scas
sbb
or
fidivl
popa
pop
fdivrs
sub
dec
or
jge
enter
push
inc
int3
push
loope
mov
cltd
pushf
xor
fstpl
pop
es
iret
mov
adc
enter
mov
and
pop
cld
es
addb
sbb
cld
inc
inc
int
adc
or
addb
jb
dec
inc
and
into
popa
sbb
and
adc
xchg
mov
sbb
xchg
mov
jne
dec
add
lock
pusha
pop
inc
movsl
push
adc
pop
addl
xchg
dec
jae
call
add
push
cmp
push
xlat
or
pop
out
mov
or
mov
add
add
sti
xchg
adc
and
fists
jnp
stos
add
mov
or
sbb
clc
rcl
jecxz
aad
daa
sahf
xchg
adcb
add
sub
inc
jns
mov
mov
inc
sub
adc
in
adc
and
es
add
dec
mov
adc
and
push
mov
sbb
fcomps
cwtl
adc
rcrb
lret
inc
push
jmp
cltd
push
repz
jp
mov
xchg
mov
les
cmp
xorb
xchg
rclb
je
and
cld
pushf
lahf
pop
jg
or
mov
mov
js
dec
test
jo
mov
mov
push
cmp
pop
and
jnp
add
adc
movsl
jmp
add
les
arpl
inc
das
mov
xchg
push
push
dec
les
sub
mov
mov
inc
lgdtl
add
shlb
faddl
push
mov
decl
dec
ret
popf
fdivr
cli
fmull
add
in
loop
ljmp
xor
mov
and
cmp
pop
fsts
add
std
insb
scas
lcall
or
pop
lock
sbb
out
add
push
xor
shlb
dec
xor
in
fdiv
pop
add
arpl
lds
fadd
aam
xor
push
sahf
mov
pop
xlat
add
adc
adc
out
lds
imul
aaa
lds
push
sti
or
add
push
das
adc
cmpsl
and
and
das
shrl
adc
movsl
fs
stos
test
pop
push
icebp
dec
mov
cmp
sbb
push
xor
loopne
test
pop
cmpsl
je
adc
xchg
mov
in
xor
aad
ja
push
mov
xor
adc
pop
lock
cli
dec
mov
sub
loope
mov
outsl
test
and
add
pop
cmpb
sbb
pop
add
pop
push
push
pop
stos
xchg
pop
into
jo
data16
jno
out
out
movsl
adc
call
mov
xchg
mov
add
lock
xchg
jno
cmp
xor
mov
inc
insb
pop
push
cmp
inc
sub
push
mov
sbb
or
mov
nop
or
pop
sub
stc
sbb
jp
push
cmp
and
lods
pop
mov
jb
cmp
loopne
cmp
dec
fwait
mov
lods
push
sub
jns
inc
jle
lds
inc
push
push
shrb
sub
push
mov
mov
jo
mov
rolb
and
jnp
cmp
or
imul
out
lock
add
or
or
add
jg
sbb
inc
into
dec
cmpsl
jnp
loop
mov
sub
mov
ljmp
and
mov
or
dec
push
cmp
inc
adc
mov
sarl
and
jle
int3
into
addr16
cwtl
dec
mov
incl
andb
dec
mov
lahf
xor
mov
das
inc
add
cld
sbb
dec
push
xchg
cwtl
add
jp
jo
lret
inc
xchg
sub
clc
push
sub
add
sub
test
adc
pop
imul
and
pushf
les
jne
nop
stos
or
ret
aaa
in
ret
sbb
mov
std
movsb
mov
xlat
shll
jl
fdivl
adcb
or
mov
jae
pop
adc
or
push
sbb
les
arpl
rcrl
insl
enter
pop
cld
sub
movsl
mov
cld
push
jno
lcall
cwtl
push
lods
mov
sbb
mov
call
shrl
adc
xor
sbb
es
das
pop
fcmovbe
lcall
lret
xchg
sbb
inc
decl
add
stc
gs
sub
sbb
notb
mov
push
pop
jle
mov
mov
sub
fdivrs
fadds
shll
fwait
stos
bound
mov
xchg
ljmp
add
push
data16
das
mov
xchg
iret
iret
xor
dec
insb
mov
fildl
xchg
sub
cmp
add
divl
loope
incb
testl
cmp
add
or
rclb
nop
push
test
data16
enter
sub
xlat
mov
outsl
adc
int3
add
inc
xor
add
push
clc
pop
inc
xlat
pusha
lock
repz
sbb
into
add
rcrb
cmpsb
repnz
test
sarl
fisubrs
add
out
mov
adc
aaa
ds
bnd
inc
or
sub
sub
lret
inc
roll
mov
mov
sar
jp
inc
stos
pop
mov
repz
cmp
mov
mov
movb
jl
fcmovnb
clc
mov
inc
cmp
shrb
adc
or
shl
add
scas
mov
jbe
push
mov
xor
sub
push
mov
sub
mov
fisttpll
subl
add
js
xlat
cmc
and
jg
imul
fisttps
fcomi
mov
mov
orl
xor
repz
jg
mov
pushf
lret
add
addb
adc
mov
fs
and
lahf
in
data16
fsubrl
les
pop
daa
in
jne
push
push
fisubs
lds
sbb
push
iret
push
dec
jno
adc
fldt
pusha
pop
scas
les
push
daa
fimuls
push
cmp
mov
lods
pop
js
mov
mov
add
and
stos
mov
push
and
inc
or
push
add
jl
sbb
pop
ds
xor
idiv
icebp
cmp
mov
add
sarl
test
outsl
in
daa
mov
pop
nop
cmc
push
jmp
jg
js
popa
jnp
add
mov
testl
lods
shrb
push
adc
jecxz
cli
sub
sub
xchg
mov
lds
jl
jnp
roll
jl
sbb
sub
mov
jle
mov
jl
ret
sti
repz
int3
and
mov
sbb
xor
lret
push
cmp
or
iret
test
mov
mov
fs
push
push
aam
aaa
fwait
dec
dec
xor
push
int
adcl
sub
insl
xor
hlt
es
outsb
or
sub
sub
js
add
cwtl
fsubrs
jecxz
push
pop
jl
push
mov
jl
xor
mov
pop
mov
pop
inc
leave
adc
hlt
mov
imul
fisttpll
dec
inc
aaa
inc
aaa
test
fisttpll
xor
fcmovne
pop
shrl
movsb
dec
xor
sbb
rclb
push
sub
cmp
or
or
mov
ficoms
adc
add
je
add
aaa
cwtl
push
pusha
or
fprem
mov
push
adc
loop
jle
cmpsl
shl
inc
fldl
lret
test
dec
xor
addr16
roll
sub
addr16
icebp
repz
es
sbbb
lea
lock
dec
sbb
scas
add
mulb
add
inc
mov
rorb
pop
inc
stos
adc
adc
cld
and
test
lahf
sbbb
and
in
roll
imul
push
xor
fs
shll
sub
sub
adc
dec
cwtl
mov
loopne
mov
jno
ficoml
ret
and
pop
inc
add
mov
cmp
add
adc
sbbb
and
loop
or
add
stc
stos
adc
ficoml
jl
inc
aam
xchg
add
jo
or
dec
rorl
call
sub
and
add
leave
nop
dec
out
sbb
add
mov
mov
mov
ret
jnp
mov
mov
adc
movsb
stos
push
outsl
rcl
pop
push
push
cmp
push
sub
fcoms
lock
push
push
adc
or
call
adc
scas
jae
out
add
or
xor
push
call
jge
mov
xchg
andb
add
cld
lock
jmp
test
loopne
add
stc
add
add
sti
pusha
push
cmp
mov
js
fisttpl
dec
or
jbe
sbb
jge
jmp
or
orb
jecxz
test
movsl
pop
adc
mov
rcr
loope,pt
adc
aas
fadds
adc
movsb
push
add
cltd
or
cmpsl
cltd
push
inc
outsl
pop
mov
bound
loopne
loopne
cli
dec
add
or
pop
popf
add
insb
hlt
sub
lock
xorb
in
adc
stos
jle
mov
call
clc
or
ret
es
lods
xchg
loope
dec
lods
dec
xor
inc
add
xchg
fcmovnbe
test
sbb
cmp
arpl
add
popa
xor
addr16
add
mov
stos
clc
add
popa
or
out
sub
and
popa
add
out
int3
sbb
cmpsl
fiaddl
fwait
add
cmc
push
movb
movsb
and
aaa
int3
mov
fimull
mov
call
or
inc
jne
inc
arpl
push
lods
enter
and
test
cmp
and
int
xorb
sub
adc
aas
push
sbb
adc
rclb
mov
xor
mov
aaa
ret
icebp
ficoms
nop
mov
adc
or
and
push
outsl
ss
mov
stos
mov
ss
pop
jl
xchg
mov
and
shrl
sbb
xchg
adc
psubd
pop
cmp
mov
mov
call
cmc
stos
cmp
mov
cwtl
lds
test
adc
movsb
mov
xchg
shll
cmpsb
push
xchg
leave
sbb
in
mov
push
fdivrs
out
xor
stc
sub
pop
pop
hlt
inc
aas
mov
fsubl
jmp
lret
ret
addb
and
push
scas
add
andnps
and
in
mov
jmp
add
push
and
fiadds
clc
pop
xor
ja
adc
xor
or
mov
loopne
or
mov
xchg
xchg
adc
add
jo
adc
addl
test
subl
adc
sub
mul
gs
inc
dec
and
scas
push
nop
test
jp
inc
xor
mov
inc
insb
and
repnz
lret
enter
cmp
mov
xchg
cmp
fwait
adc
inc
push
sub
test
add
xorb
push
call
xor
mov
dec
sti
pop
sub
sub
lcall
xchg
in
lds
pop
xor
or
and
lock
sub
xor
push
pop
and
xor
ljmp
stos
add
mov
add
add
repnz
jae
mov
sub
fisttpl
test
lret
dec
js
adc
add
loop
aas
sub
jne
es
mov
push
rorb
cmc
repnz
lods
add
sbb
sub
icebp
mov
std
mov
jmp
mov
into
rcl
add
xor
add
and
add
jmp
aam
dec
loopne
sti
jnp
mov
nop
pusha
and
adc
pop
mov
dec
jo
lahf
dec
xor
jp
mov
das
mov
adc
sbb
mov
cmp
pop
add
sarb
xchg
rcll
jge
dec
adc
test
and
cwtl
lock
imul
jmp
lock
jbe
inc
adc
andl
clc
stos
cmpl
mov
ja
ror
xchg
dec
adc
rolb
shrl
add
jp
or
push
sbb
push
nop
adc
push
scas
xor
mov
dec
inc
adc
and
in
add
jnp
mov
std
mov
cmpb
ds
adc
adcb
dec
or
mov
add
cmp
dec
jb,pt
test
ror
adcb
lret
mov
or
add
add
aas
add
jle
outsb
subl
test
mov
lcall
pop
dec
incl
aam
out
pusha
rolb
movl
xor
aas
sub
mov
mov
cmp
jae
imul
jge
orb
jge
out
imul
or
xor
mov
inc
xor
adc
pop
and
loopne
pop
cmp
fnstcw
pop
or
clc
inc
outsl
in
fisttps
inc
or
jle
add
loopne
pop
jb
mov
flds
out
and
outsl
mov
call
lods
cmp
add
es
add
add
adc
xchg
add
add
aam
int3
mov
jns
add
push
fildll
xor
ret
add
push
add
shr
dec
push
jle
mov
or
ja
cld
das
pop
jg
add
pop
push
mov
inc
add
mov
cmp
add
adc
rclb
icebp
fwait
in
add
inc
je
adc
adc
inc
sbb
adc
ss
xchg
sahf
xchg
or
pop
fldt
adc
add
loopne
in
rorl
add
xchg
adc
popa
nop
ret
and
jo
add
dec
adcb
adc
add
dec
in
mov
sub
sub
rol
arpl
pop
pushf
orb
ret
push
adcb
popf
jecxz
cmp
mov
mov
int3
enter
add
out
frstor
mov
add
mov
aam
lahf
ret
add
scas
stc
fistl
data16
mov
popf
popa
add
add
sub
add
sub
js
call
hlt
sub
int
fcoml
mov
push
add
adc
push
les
mov
inc
mov
test
cmp
das
xor
les
frstor
and
add
daa
cmp
dec
sbb
add
cpuid
adc
push
mov
icebp
call
sub
pop
aaa
inc
loope
in
mov
pushl
gs
out
ja
push
loop
xchg
fwait
pop
lcall
adc
sbb
addb
shl
xor
mov
fstpt
into
popa
mov
pop
jge
fs
mov
push
push
scas
popf
pop
or
outsl
aad
push
jno
jnp
out
xor
ja
xchg
push
loop
pop
inc
inc
shl
xor
outsl
pop
outsb
inc
stos
cmp
cs
mov
pop
clc
jmp
daa
add
lret
and
add
adc
rorl
bound
fbstp
pusha
pop
scas
sbb
movsb
mov
orb
jae
fldcw
ljmp
sti
mov
cli
add
mov
pop
push
inc
sub
sbbb
sbb
flds
sub
mov
lods
or
and
mov
and
lea
rcr
mov
arpl
movsb
jg
xchg
mov
jo
iret
add
addr16
subb
add
mov
jns
xchg
out
cmpsl
cmp
adc
clc
pop
mov
mov
das
pop
xor
lods
cmc
ljmp
adc
in
pop
cltd
xchg
aas
jo
pop
mov
or
dec
jg
push
xlat
int3
outsb
aam
xchg
test
mov
ljmp
push
push
loopne
xchg
test
push
outsb
or
pop
xor
loopne
xorb
mov
or
or
aaa
or
mov
xor
fisttps
hlt
mov
mov
or
mov
mov
movl
inc
cld
inc
push
cld
rcl
sub
sti
xchg
mov
mov
jno
or
cwtl
mov
mov
incl
in
aam
mov
and
adc
dec
or
ja
mov
add
loop
jbe
incb
xchg
push
subb
xchg
lods
mov
jno
not
repnz
add
xchg
push
leave
inc
xor
sub
or
fnstenv
mov
jg
enter
jns
push
push
lret
ds
popa
pop
cli
inc
out
jge
leave
les
pop
and
cs
fbstp
inc
adc
or
roll
rclb
or
jg
push
adc
xchg
pop
jb
mov
mov
dec
shrb
das
jge
sbb
jo
add
and
sbb
add
jns
push
rcrb
add
jge
ja
jp
xchg
into
mov
fsubrs
push
jnp
inc
mov
dec
insl
mov
and
mov
jle
and
aaa
dec
dec
jmp
mov
sahf
push
jb
xor
dec
aas
popa
sub
jnp
mov
jbe
scas
add
test
rcrb
popf
daa
iret
outsb
mov
pushf
jle
daa
xchg
ja
xor
ja
lahf
imul
sub
xor
das
mov
mov
movsl
ss
pop
iret
in
cmp
sbb
push
mov
sub
call
cmp
mov
ret
add
jb
shrb
in
fisttps
mov
mov
lret
push
mov
pop
shll
mov
outsl
sub
shrb
push
mov
lods
cmc
mov
jmp
pop
gs
lret
dec
fistpll
and
popa
inc
movsb
loop
test
mov
sbb
xchg
insb
fcmovnb
xor
bound
test
push
icebp
pop
push
outsb
inc
movsb
ret
test
mov
pop
loopne
or
or
into
cwtl
add
ret
adc
loop
and
lret
sbb
mov
add
inc
xorb
pop
cmp
push
push
cld
jmp
pop
adc
mov
jmp
adc
xor
push
jne
xchg
bound
clc
mov
popf
add
cmp
mov
ficoml
xlat
stos
mov
dec
nop
sub
shl
mov
push
sahf
icebp
movsl
and
xchg
popf
or
mov
push
hlt
push
loop
cmpsl
loopne
inc
push
aam
fmuls
push
rcrl
add
cmp
popa
cwtl
lods
lret
cwtl
bound
dec
push
jg
aam
push
lock
or
add
fisubs
in
stos
jbe
jl
xchg
or
xor
andb
add
adc
and
cmp
push
pop
mov
aad
aam
in
les
rorb
loopne
mov
add
les
sbb
call
adc
les
or
lods
outsl
cmp
add
test
inc
lret
rolb
xlat
rolb
ljmp
push
notb
aam
sub
outsl
adc
inc
sbb
push
inc
iret
lock
vmwrite
es
in
adc
mov
jl
andb
rorb
hlt
sysexit
sub
cs
push
add
xchg
sbb
addl
pusha
fucomip
sbb
mov
fwait
sub
fmuls
inc
adc
xor
xor
inc
fcoml
adc
lret
cmp
add
test
push
push
mov
and
lcall
mov
pusha
jmp
cwtl
xor
inc
int3
shlb
add
pop
pop
mov
add
adc
mov
fwait
pop
mov
lret
in
pop
pop
loopne
call
xchg
xchg
dec
cmp
daa
call
sub
test
cmp
add
inc
cmp
lods
std
test
adc
adc
pop
dec
jmp
pop
lods
mov
or
aaa
add
call
pop
add
loope
jbe
mov
cmp
push
rclb
aam
mov
push
jg
inc
inc
fwait
int
add
cmc
lcall
dec
push
mov
std
js
sub
sub
hlt
dec
out
not
aas
and
mov
ficoml
and
adc
sbb
ffree
jp
sub
mov
fcoml
ret
je
test
pushf
jmp
lahf
and
lret
orb
xor
lret
rclb
inc
rolb
clc
dec
loope
or
cld
mov
jle
jbe
test
jmp
jmp
inc
adc
pop
int
clc
dec
popf
mov
push
or
dec
cwtl
addb
rolb
jmp
pop
push
hlt
or
or
orb
faddl
push
popa
push
scas
mov
push
mov
push
leave
notb
xor
and
lock
jbe
stc
mov
ss
jnp
dec
mov
or
mov
jnp
sbb
pop
cwtl
adc
dec
or
mov
xlat
xchg
and
mov
pop
push
js
dec
daa
lock
fcoms
mov
lret
mov
adc
cmpsb
xorb
sbb
in
roll
pop
test
stc
lock
dec
popf
dec
and
repz
js
mov
add
xchg
andb
dec
arpl
les
fisubrs
fldt
jl
loop
shlb
adc
sarb
pop
jbe
sbb
mov
les
rorb
cmp
movsb
xchg
mov
sar
int3
into
mov
sub
dec
lods
dec
push
je
xchg
fstpl
sub
negb
rorl
lds
push
mov
cltd
sysenter
adc
add
add
and
loope
faddp
clc
adc
pop
gs
mov
jns
insb
shrb
imul
xor
sbb
mov
push
inc
mov
cli
ret
pop
in
add
adc
adc
or
gs
pop
mov
rolb
sti
mov
or
in
ret
loopne
jmp
test
sbb
mov
adc
mov
cwtl
in
add
aaa
mov
cmc
sbb
dec
jb
or
adc
or
addl
movsl
stos
pop
mov
xor
mov
out
push
push
pop
add
inc
mov
stc
test
in
pop
mov
adcb
loop
mov
and
pop
adc
data16
mov
rcrb
pop
sub
insb
and
ja
add
sbb
scas
test
rclb
cmp
lods
into
dec
and
sbb
data16
stos
sub
iret
insl
addr16
ret
out
inc
adc
call
sub
jg
stc
prefetcht1
pop
xchg
xchg
loope
loope,pn
or
lcall
or
sti
subl
mov
cmc
and
insb
out
frstor
sub
into
addl
mov
push
or
push
xchg
jae
clc
adc
pop
xchg
xor
ss
dec
push
add
or
mov
jmp
xor
mov
stc
mov
adc
orb
cli
nop
mov
push
jmp
xor
fsubr
mov
xlat
jmp
or
push
mov
sbb
fidivs
js
and
or
cmc
pop
adc
notl
push
inc
leave
int
sti
leave
or
fiadds
pop
lret
inc
rcll
push
adc
mov
mov
loope
int3
inc
push
test
jbe
lock
daa
dec
xor
and
mov
out
cmpsl
mov
sarl
mov
idivb
inc
shll
cmp
or
movsb
ficoms
push
mov
stc
inc
test
fnstcw
insl
shl
add
add
mov
lods
aad
orb
nop
dec
rorb
lea
out
repz
mov
sbb
sub
hlt
inc
sub
cmc
push
or
leave
jmp
sub
and
mov
sub
idivl
mov
push
scas
pmaxub
push
aam
mov
icebp
mov
mov
mov
and
shll
add
sbb
mov
ficoms
push
push
push
movsb
mov
filds
aas
fldcw
sub
and
mov
push
fucomip
sti
fucomip
sbbb
add
mov
arpl
cs
cmpsl
dec
adc
inc
push
imulb
outsb
or
int3
and
sub
std
enter
or
and
add
fidivl
adc
push
outsl
or
lret
adc
daa
push
test
inc
insl
fimull
jecxz
sub
jae
push
add
loop
icebp
or
sbb
mov
add
inc
orl
rcrl
cmp
in
mov
mov
rclb
sbb
aam
mov
imul
push
outsb
cmp
out
stc
cmpsl
je
adc
adc
inc
push
ficomps
sti
fists
mov
dec
shll
in
pop
add
cltd
test
mov
sahf
or
hlt
sbb
or
pop
lahf
or
dec
jo
cmp
ja
mov
insl
add
pop
stc
popf
loopne
xor
xor
outsl
test
jae
ja
xchg
and
sbb
mov
jg
or
pop
push
adc
cmp
sub
inc
lret
inc
dec
push
aaa
jmp
movsb
add
cli
lret
pop
movb
rcr
test
ja
loopne
jp
sub
xlat
lret
test
and
jo
mov
mov
out
mov
pop
je
mov
xchg
adc
or
inc
adc
fistps
sti
arpl
lods
push
push
test
push
das
mov
cmp
inc
lods
jp
dec
roll
or
push
cmp
ficoms
xchg
add
loopne
stos
popa
dec
pop
rcll
in
xor
fldenv
xor
sub
push
test
ja
cmp
xor
fcoms
mov
adcb
rorb
push
iret
repz
push
int3
and
cmp
pop
lcall
test
and
rcrb
and
xchg
cmc
loope
arpl
jbe
stc
les
jle
shr
or
inc
mov
mov
es
mov
adc
cmp
jb
cmp
jg
popa
inc
cmpsl
cwtl
push
sbb
adc
int
lret
mov
jle
mov
negl
pop
and
sbb
loope
outsl
cs
mov
mov
movsb
or
cmp
adc
inc
cld
pop
test
mov
stos
shlb
jo
and
loopne
movsb
dec
mov
pop
lcall
test
add
sub
cmp
ret
clc
sub
es
sub
sbb
push
push
rorb
xor
mov
fs
outsb
sbb
xor
aam
jmp
and
fildll
xchg
daa
mov
in
cltd
pushf
in
pop
push
and
sbb
sub
ffreep
bound
mov
loope
cmp
cmp
ret
dec
aas
sub
fwait
mov
rcrl
test
mov
call
inc
push
mov
cli
add
jae
mov
cmp
mov
and
ret
cmp
imull
outsl
out
jmp
xchg
je
add
out
movsb
lcall
add
loopne
out
cmc
incl
adc
out
jae
sbb
lock
xchg
xchg
fildll
loopne
stc
fildll
xor
sub
cmpsl
pop
les
loope
pop
push
xor
xchg
jo
mov
insl
push
inc
popf
sub
inc
push
add
aad
add
mov
dec
cmpsb
mov
or
cmp
and
aam
dec
stc
mov
inc
adc
lock
adc
les
std
push
flds
push
sbb
andl
movsb
mov
mov
and
cli
push
fmull
mov
cmp
popa
push
nop
jbe
int3
data16
add
add
sub
xor
or
mov
in
pop
sbb
inc
xor
sub
adc
dec
bound
data16
popf
icebp
inc
mov
or
scas
mov
cwtl
mov
scas
mov
mov
insb
fbstp
outsb
data16
dec
add
cmp
mov
imul
xchg
mov
dec
mov
add
push
pushf
or
add
and
push
pusha
rol
cli
mov
push
mov
ljmp
lock
xor
fcmovb
andl
cmc
mov
and
or
or
jbe
mov
movsl
jmp
stos
sub
push
sbb
cld
pop
aam
enter
aam
es
adc
push
test
pusha
push
out
je
mov
call
adc
inc
ret
fistpll
je
aad
ficomps
icebp
add
roll
or
or
sub
inc
jmp
shlb
xor
scas
or
or
stc
fsubl
xchg
mov
adc
fwait
inc
int3
xor
jmp
pop
aaa
out
xchg
or
sub
xorl
add
cld
pushf
push
mov
sub
cwtl
mov
cmp
jns
repz
rorb
data16
pop
lds
sbb
jle
pop
pop
adc
inc
mov
je
xor
mov
addr16
push
xchg
xchg
aam
push
xchg
add
or
lret
in
pushf
xor
jns
dec
imul
in
sub
cmp
daa
dec
inc
jno
pop
imul
or
mov
loopne
ja
push
test
pop
test
push
jns
cmpsb
mov
sbb
rorl
mov
cmp
add
ja
sahf
pop
rcr
ret
fs
jge
ret
bound
shll
push
bound
ret
push
push
fs
or
add
outsl
lods
pop
cmp
jbe
outsl
mov
add
fbld
mov
pop
lods
fsubp
shrb
rol
add
rcrb
pop
cmp
push
xchg
daa
insb
xor
imul
jecxz
ret
pop
pop
popf
pushf
mov
test
inc
add
dec
and
aam
and
cwtl
shlb
inc
jge
xchg
mov
icebp
adc
push
xchg
xor
cmp
aam
lret
sahf
fmull
rolb
js
cld
gs
cmp
bound
pop
push
pop
test
pop
loopne
shlb
mov
xchg
imul
inc
mov
in
ds
adc
add
test
push
cli
dec
inc
movsb
mov
imul
les
rolb
push
mov
shrb
adc
xor
iret
sub
cmpb
xor
loope
pop
and
inc
sub
aam
mov
in
stos
icebp
or
jns
jecxz
mov
jne
sub
scas
aam
pusha
pop
lods
xor
xor
sbbb
and
sbbb
dec
sbb
ficomps
test
adc
cmovl
pop
movsl
sbb
leave
sub
aas
push
push
sub
imull
fimuls
shrl
sbb
or
and
inc
and
pop
mov
jmp
addr16
bound
vpunpcklqdq
sub
les
aam
scas
cmpb
sbb
inc
add
dec
loopne
add
lods
pop
inc
loop
adc
jne
lcall
mov
scas
sub
repz
pop
cld
shlb
pop
movsb
arpl
lock
push
mov
xchg
mulb
mov
cmp
out
cmp
rcrl
pop
jmp
test
dec
add
cmp
popa
jno
pushf
mov
gs
dec
push
sbb
dec
adc
mov
xchg
and
mov
sti
les
dec
inc
daa
lods
adc
lret
pop
test
dec
add
or
add
int
pusha
push
and
dec
shll
xchg
loopne
das
pop
popf
fwait
jge
sub
pop
add
aam
daa
pop
cmp
stos
and
xor
dec
hlt
cmp
jbe
push
or
push
insb
cmc
xchg
fsin
aam
shrl
popa
and
and
ret
cmp
jge
pop
jmp
imul
jnp
dec
or
subl
push
mov
sbb
cwtl
cmp
sbb
add
jb
add
adc
in
divb
sbb
outsl
jg
sub
sub
loope
jo
jns
icebp
adc
neg
dec
jne
jge
add
mov
movsl
mov
out
cmp
jne
test
fiadds
bound
push
dec
jb
cmp
cmp
cmpsl
adc
pushf
mov
in
or
mov
sarl
dec
rclb
scas
dec
popf
andb
fistpll
mov
fcompl
fcomip
hlt
add
lcall
dec
fwait
popf
inc
rorb
les
mov
sub
std
pmaddwd
mov
inc
out
into
xor
sub
push
pop
lahf
mov
jg
mov
insb
pop
addb
pop
test
not
mov
jecxz
pushl
push
stos
lcall
outsb
int
das
push
mov
loope
push
stc
shlb
sub
push
xor
mov
es
xchg
lcall
or
adc
or
and
in
cld
jo
push
inc
xor
sbb
in
popf
mov
inc
dec
jge
test
ss
and
aad
mov
insb
jge
inc
mov
or
add
sbb
dec
imul
push
loopne
inc
cmp
sub
cmp
jbe
mov
mov
sbb
loopne
push
fmuls
xor
pop
shll
faddp
popa
add
hlt
std
and
andb
mov
xor
xor
xchg
or
les
aam
pushf
andnps
shrb
addr16
pop
sarb
ret
push
loope
ret
out
aam
or
or
jno
fiadds
pop
icebp
mov
sbb
roll
dec
mov
mov
pop
fnstcw
mov
fisubrs
sub
mov
sahf
lea
push
push
push
sub
xor
lea
jno
jb
push
lods
and
jmp
ret
xorb
je
shrl
dec
adcb
test
es
push
movsb
dec
lcall
pop
aad
test
pop
jg
mov
iret
and
xor
in
and
jne
jmp
or
adc
lock
cli
push
cwtl
pop
jo
ss
lock
pop
adc
mov
xor
cmp
add
inc
add
roll
lds
sti
push
test
mov
in
out
jbe
adc
adc
lds
fs
test
and
xor
push
jo
insb
pop
xor
es
pop
loop
dec
in
xor
cwtl
test
das
dec
mov
sbb
clc
mov
pop
cmpsl
dec
shrl
sbb
mov
sbb
jecxz
loope
daa
insb
lock
adc
and
adc
jne
pop
lea
icebp
and
std
inc
jnp
xchg
xchg
hlt
inc
mov
pop
shrb
aad
mov
cwtl
or
insl
jno
jns
mov
cld
neg
jle
push
push
sbb
cmp
inc
enter
in
sub
add
gs
and
sbbb
mov
add
pop
jmp
notl
in
jb
mov
lcall
cli
mov
pop
jl
add
cmp
ja
or
mov
adc
test
icebp
and
ret
mov
dec
rcrl
js
repz
test
cmpl
aas
jbe
jne
mov
pop
mov
cmp
les
and
mov
lods
sbb
add
mov
insl
mov
mov
popf
or
mov
call
enter
roll
mov
leave
test
sub
sbb
push
add
or
inc
push
icebp
jnp
push
xchg
add
pop
icebp
adc
sub
and
jne
cmp
stos
test
inc
andl
ljmp
jmp
jmp
lods
inc
cmc
andb
cmp
xchg
jbe
faddl
into
add
bound
push
mov
enter
inc
int3
call
arpl
jae
adc
sbb
jbe
add
add
repz
js
addr16
xor
mov
arpl
test
pop
hlt
xor
int3
push
data16
ror
cwtl
icebp
lahf
sbb
push
test
jae
es
sti
movsl
inc
shlb
sbb
ljmp
dec
mov
sbb
inc
das
jb
xlat
mov
add
hlt
pop
cwtl
addr16
jno
inc
fsts
mov
pop
sub
in
lods
push
inc
dec
xchg
and
shl
aam
mov
jnp
call
sub
call
sahf
pop
and
jp
fst
testb
fnstsw
sti
scas
push
cwtl
inc
ss
daa
cmpsb
cmp
test
fists
cwtl
subb
outsl
or
daa
popa
sbb
xchg
sub
lds
inc
mov
jmp
pop
xchg
dec
adc
fs
cmp
jp
or
mov
sbb
sarb
in
je
les
je
iret
and
add
xchg
mov
push
mov
xchg
add
or
or
and
jb
push
push
les
jae
int3
cmp
mov
or
add
fists
dec
adc
cld
xchg
or
test
mov
inc
xchg
out
sbb
clc
aas
sbbb
daa
jg
jp
jmp
jle
rol
pushl
mov
or
push
sbb
pop
inc
insb
adc
ffree
or
push
sarb
jo
fld
push
add
dec
push
out
sub
add
mov
xchg
div
cmp
xchg
mov
stos
jo
xchg
mov
push
enter
jg
movsl
inc
in
imul
sub
cmpb
popl
or
pusha
es
push
mov
sub
add
cmp
outsb
sbb
sbb
outsb
push
inc
call
andb
xchg
add
or
and
push
cltd
sti
xor
test
idiv
sub
dec
inc
push
add
daa
add
adc
call
or
push
repnz
jl
xor
fwait
add
add
sub
mov
add
js
arpl
and
or
iret
push
push
mov
mov
push
pop
shlb
mov
aas
loopne
sub
fldt
add
xor
call
mov
mov
ficomps
fisttpl
or
and
add
sahf
mov
add
jae
mov
add
sub
adc
dec
cmp
mov
lcall
sub
js
aaa
or
pop
ljmp
jl
popf
xor
add
mov
adc
ficomps
mov
fisubl
pusha
add
push
test
xor
and
cld
add
gs
cltd
loopne
mov
fs
dec
lret
stc
mov
sub
jmp
nop
adc
rol
cli
rcl
sbb
mov
mov
dec
sbb
sbb
push
mov
or
popa
test
add
mov
mov
jmp
sub
pop
ja
jle,pn
js
add
mov
fstpl
fstpl
or
stos
add
dec
pop
sbb
or
roll
jns
fcomp
fcmovu
sub
mov
xlat
adc
hlt
push
add
jp
test
and
add
cmp
in
stos
add
aad
mov
adc
test
shlb
ret
add
dec
mov
push
add
sbb
or
and
jge
add
fmull
ret
ljmp
aas
scas
sub
fldenvs
sbb
scas
test
mov
cmpsl
lods
and
test
decl
lea
sub
mov
sbb
jae
stos
ret
mov
mov
aaa
jle
and
decb
lods
jo
sub
and
or
test
out
fnstenv
faddl
push
xorb
in
xchg
sub
outsl
decl
jb
jo
and
and
in
pop
xchg
lret
and
mov
incl
or
cltd
cmp
sbb
roll
mov
pop
pusha
jb
icebp
test
jg
adcb
in
pop
ds
loopne
adc
mov
aaa
mov
add
mov
mov
call
mov
adc
add
pushf
js
cmp
cld
pushl
mov
test
jecxz
inc
pop
fadds
in
pop
stos
aaa
cli
sbb
call
adc
bound
adc
test
add
lahf
push
cld
cmpsb
jmp
and
cmpl
std
cmp
loop
clc
outsl
add
mov
and
dec
add
add
cmp
popf
xlat
sub
loop
cmp
push
or
into
outsl
pushf
xchg
push
xor
adc
adc
adcl
cmc
nop
shlb
pop
inc
sarb
pop
subl
mov
xchg
jp
mov
lret
add
sub
repz
test
ss
stos
loop
inc
push
sbb
orb
inc
shr
dec
les
sub
nop
xor
orl
outsb
lret
mov
das
mov
rclb
adc
sbb
add
pop
insb
enter
mov
xor
hlt
sbbl
add
cmp
leave
adc
dec
inc
aam
pop
pop
ljmp
push
js
xor
in
jl
push
mov
push
mov
mov
xor
add
nop
mov
aam
cmp
into
iret
pop
push
pop
mov
cmp
lret
int3
sub
in
xor
shlb
inc
adc
mov
ret
ficoms
aaa
sub
xchg
add
or
or
and
clc
add
add
pop
adc
adc
and
aam
mov
mov
das
mov
adc
bound
movl
xor
cmc
sub
and
mov
or
push
jge
add
dec
add
fchs
dec
mov
hlt
fldcw
and
insb
ret
add
sbb
cmp
icebp
xchg
icebp
push
aad
jmp
jb
cld
add
fwait
aam
add
adc
mov
stos
mov
rep
loopne
sub
adc
pop
push
shll
roll
xor
popa
popa
push
leave
icebp
xor
mov
inc
call
lods
mov
loopne
inc
and
xlat
and
add
mov
mov
in
in
movsl
pop
mov
fsubs
je
mov
loopne
decl
sbb
dec
les
fstps
jb
xor
lock
call
xor
subb
jne
add
fstpl
mov
enter
cmp
inc
and
jmp
or
cmpsb
xor
loope
add
aad
or
fnstsw
jmp
orb
mov
ljmp
scas
fnstsw
dec
add
stc
aad
cmp
scas
loopne
insl
outsb
dec
mov
jmp
xchg
sub
lret
add
inc
inc
outsl
mov
ljmp
sbb
mov
sub
push
rcr
mov
stc
sahf
sbb
push
mov
repnz
and
sub
jg
dec
push
add
jg
cmpsb
cld
and
jmp
rcrl
and
adc
loope
xor
dec
inc
adc
test
jge
add
mov
lods
sub
sub
pop
cmp
decl
push
call
cmpsb
movsl
mov
in
sbb
out
cmp
mov
cmpl
xor
lret
fcmovnu
jg
jnp
add
ret
into
sbb
movsb
push
fidivrl
inc
scas
enter
jns
daa
int
push
push
dec
test
or
inc
dec
dec
sahf
push
mov
xchg
mov
pop
loop
jmp
mov
popf
test
pop
in
sub
dec
or
push
stos
lea
and
div
bound
aas
ss
jge
outsl
or
add
stos
nop
cmpb
aaa
ret
jge
sbb
test
out
push
or
and
lods
xchg
mov
mov
xor
sub
mov
add
fldcw
fcomip
jns
cmpsb
ficoml
mov
cmp
mov
js
and
je
sarl
mov
inc
mov
inc
mov
icebp
pop
mov
test
mov
sarl
add
popf
dec
push
lret
sbb
sub
sbb
mov
outsb
ret
dec
sbb
push
imul
dec
mov
test
inc
mov
roll
jne
test
loop
pop
adcl
pop
push
cs
or
aam
test
outsl
inc
pop
mov
inc
lock
mov
jb
inc
lea
test
xor
clc
or
movsb
mov
sub
mov
push
cmc
mov
xor
add
cmpb
mov
insl
enter
pop
ljmp
in
aaa
pop
aam
aas
cmp
sub
ljmp
outsl
xor
mov
mov
pop
dec
outsb
lea
fidivs
pushf
mov
roll
fwait
lods
call
or
or
xchg
jbe
pop
outsb
lcall
mov
mov
cmp
lea
dec
cmp
in
fildl
inc
lcall
mov
addb
pop
add
lahf
cmpsl
dec
add
movsl
es
push
sbb
xchg
rep
add
lea
insl
sbbl
adc
je
lahf
cmpsb
sub
and
cmpsb
push
adc
lcall
je
dec
jmp
ja
sti
sbb
jecxz
adc
out
cltd
loop
aad
push
das
lea
or
hlt
dec
mov
aam
outsl
mov
and
std
aad
mov
aas
ret
or
inc
lods
jp
and
cmp
mov
dec
js
dec
pop
mov
inc
icebp
push
mov
fsub
rcrb
outsb
shrl
and
lret
sti
jae
or
popf
cwtl
shlb
jp
xlat
pop
mov
ja
mov
add
stc
xchg
test
jmp
or
push
sbb
push
test
mov
fstl
loopne
sub
jno
mov
stos
or
mov
ljmp
cmp
movsb
adc
inc
add
inc
or
je
ljmp
lock
or
push
mov
in
addr16
das
mov
sub
lret
mov
add
and
dec
ds
sub
mov
lret
out
dec
dec
xchg
dec
pop
inc
ljmp
jp
or
mov
jp
mov
mov
mov
xchg
mov
jmp
cli
loope
cltd
dec
jmp
cld
jg
lods
ror
xchg
inc
dec
push
ret
lds
jb
adc
les
mov
jge
push
ficompl
push
push
xlat
jne
jg
pop
mov
stc
cmp
adc
lret
mov
mov
les
scas
out
lahf
out
jl
mov
mov
jmp
rcrl
pushf
or
out
in
mov
mov
dec
adc
clc
icebp
nop
push
and
imul
push
sub
add
hlt
bound
sbb
mov
push
and
cwtl
cmp
test
shlb
rcl
xchg
xchg
arpl
popa
idivl
adc
in
int3
orb
aaa
mov
adc
shl
pusha
jl
push
push
adc
inc
vhsubps
daa
pop
addr16
adc
data16
shr
and
std
test
in
gs
mov
js
jge
push
fcmovbe
out
dec
sbb
int
fadds
mov
and
adc
fildl
adc
fsubrs
mov
mov
stos
xchg
add
test
push
mov
scas
cmp
or
xchg
aas
mov
sub
jge
sti
test
das
shll
jb
mov
inc
imul
adc
mov
insb
mov
add
faddl
stos
pop
stos
sti
rcrl
jno
cmp
or
lods
int
hlt
cmpsb
push
mov
xlat
pop
push
mov
pushf
xchg
or
scas
mov
mov
inc
loopne
mov
imul
add
mov
mov
iret
pop
loop
aaa
call
incl
jp
movsl
clc
jp
push
sbb
push
pop
repz
push
cs
mov
sbb
pop
mov
or
sbb
add
aam
fucom
lcall
out
jae
cmpsl
loope
fstps
cmc
int
mov
push
mov
push
pop
popf
add
mov
jbe
sub
adc
cmp
sub
sbb
xchg
cmp
es
jmp
dec
aad
out
and
stos
push
ljmp
xchg
iret
outsb
cltd
lods
push
adc
outsb
mov
adc
inc
or
imul
xor
mov
popa
sub
pop
push
and
pushf
and
rolb
test
movlps
mov
adc
jo
push
shl
dec
lods
mov
sub
push
inc
jg
pop
inc
push
cmp
xchg
test
xlat
adcb
sub
jae
mov
xor
or
stc
daa
add
data16
icebp
mov
inc
lcall
push
pop
pop
mov
sbb
inc
adc
ret
adc
shr
and
ss
xor
ficoml
inc
ljmp
mov
adc
hlt
or
enter
pop
mov
out
and
rcrl
add
les
xor
std
je
push
call
inc
cltd
mov
in
scas
cld
pop
or
movsl
and
adc
add
orl
xlat
sub
inc
add
inc
lret
push
ljmp
adc
add
imul
add
push
lcall
test
das
adc
adc
inc
sbb
mov
aaa
push
jmp
add
jle
or
jge
dec
lea
jae
xor
stos
mull
and
cli
aas
and
and
add
inc
ret
loop
add
inc
push
clc
add
or
push
mov
sbb
push
xchg
cmp
imul
mov
inc
add
push
add
ret
add
xor
test
sbb
xor
adc
mov
cltd
cmc
and
std
xchg
test
mulb
repz
mov
imul
jge
fiadds
aam
cmpsb
test
outsb
fimuls
and
jae
jle
mov
pop
out
clc
xchg
stos
adc
push
adc
int
mov
mov
fs
mov
mov
aam
stos
push
sub
add
enter
dec
xchg
lea
sub
out
icebp
stos
add
insb
and
cmp
xor
aad
adc
into
xchg
clc
adc
or
xor
mov
adc
push
movsl
into
or
shrl
pop
push
cmp
fs
and
ret
sti
and
cld
sub
cmp
or
push
sub
sub
gs
and
xchg
daa
adc
xor
or
add
lret
stos
xor
pop
add
lret
jg
mov
add
adcb
rcl
fnstcw
test
sti
push
lods
repnz
adc
mov
fimull
and
stos
add
dec
push
data16
dec
inc
in
cmp
ds
or
call
mov
or
mov
pop
sbb
mov
push
xchg
mov
xchg
cmpsl
shrl
adc
mov
or
dec
inc
stc
adc
iret
enter
addl
xchg
mov
test
inc
or
adc
fwait
pop
sub
movsb
mov
enter
push
mov
test
fbstp
or
loopne
je
js
mov
jo
cltd
adc
aam
popa
push
mov
inc
call
pushf
xor
stos
or
mov
xor
das
jecxz
adc
push
fnstenv
rcr
ljmp
mov
xor
dec
mov
pop
mov
dec
rcrl
adc
fildll
add
adcl
pop
lret
mov
clc
aam
add
andl
xchg
or
sub
popa
jbe
jge
inc
out
sbb
sbb
jge
adc
test
ret
inc
xor
lock
inc
mov
fimuls
and
flds
pop
push
insb
cmp
push
mov
sub
mov
cmp
dec
xchg
pop
inc
mov
movsb
icebp
add
fcmovu
cmp
ja
pusha
sti
cmpsb
imul
enter
or
cld
fcomp
fs
or
or
pop
cli
mov
mov
cmp
stc
outsl
add
add
les
mov
push
add
sbb
push
mov
addr16
add
xor
jne
pop
push
mov
push
lock
xor
jbe
adc
add
adc
out
int
dec
adc
dec
dec
cld
pop
adc
call
jne
add
dec
pop
inc
scas
pop
lds
sbb
push
mov
xor
mov
add
pop
adc
xor
dec
jg
in
add
in
xor
or
loop
adc
sbb
fmuls
pop
and
xor
mov
mov
and
add
and
sbb
pop
cmp
lods
xchg
fistps
pop
nop
call
jo
push
pusha
cmpsl
jbe
ffree
xor
cltd
int
jo
sub
push
adc
or
sbb
dec
push
lods
push
xor
jp
push
push
add
jne
lahf
and
test
push
int3
lret
daa
or
popf
andl
rcrb
mov
add
push
shl
pushw
sub
mov
pusha
sub
mov
orb
add
adcl
pop
arpl
test
out
das
or
movb
arpl
mov
stos
push
or
mov
aam
or
push
mov
les
cltd
inc
cli
dec
inc
outsl
lret
ret
and
lock
xor
sti
aaa
mov
popa
mov
dec
cltd
xchg
jnp
lods
mov
into
insb
xor
add
sub
test
ret
je
mov
adc
push
xor
fdivr
mov
fdivrl
flds
add
cmp
cmc
add
lods
stos
mov
sbb
inc
inc
cmpsb
mov
outsl
movsl
adc
in
add
xor
push
lock
mov
add
and
insb
and
std
testb
jno
or
sub
mov
or
int3
or
les
jle
xlat
mov
push
pop
add
adcl
sbb
sbb
fidivrs
and
repnz
lock
xchg
lcall
add
test
lds
subl
mov
inc
cmc
mov
mov
incb
rclb
dec
push
mov
lcall
mov
inc
add
dec
mov
push
cld
pop
jge
jecxz
add
add
jmp
inc
leave
cmp
adc
adc
add
push
shlb
inc
xchg
fisubrl
or
cwtl
jb
pop
stos
mov
ficompl
push
mov
sbb
ficomps
aam
add
inc
decl
cmc
in
addr16
or
xchg
bound
mov
cmpsl
fbstp
pop
jle
loop
cs
mov
jmp
jno
push
mov
test
lods
outsb
decl
and
out
add
mov
sbb
pop
cli
sub
jne
add
call
or
cmp
hlt
fs
sahf
iret
and
gs
and
lea
mov
mov
xor
push
ds
sbb
sahf
pop
jmp
mov
inc
js
aam
mov
mov
pop
and
adc
and
fisttpll
rol
fwait
aam
push
ret
pop
jle
shrl
lock
fisubs
push
add
xchg
cmpb
jl
add
mov
adc
nop
loopne
dec
xor
and
mov
daa
and
xchg
sub
int
adc
into
bound
push
js
inc
or
add
ja
inc
imul
mov
aaa
mov
mov
lock
dec
dec
push
sbb
jp
shl
xor
mov
mov
mov
jmp
aaa
jnp
ret
mov
aaa
mov
lret
push
lret
pop
ret
sbb
or
sub
outsb
dec
out
sub
or
mov
sbb
or
xor
sub
add
rclb
sahf
cmpl
out
inc
cmp
dec
pop
mov
das
ret
insb
movsb
fdiv
dec
mov
jns
ss
or
sub
or
mov
adc
dec
push
pushf
cmp
loopne
aas
xor
push
dec
std
add
xchg
idivl
bound
or
outsl
add
or
sbb
lea
jae
dec
inc
imul
call
sub
mov
fadd
push
std
arpl
outsl
mov
clc
andb
adc
and
fidivrl
fimull
jmp
sbb
scas
in
int
das
into
jmp
pushf
mov
insb
inc
mov
loop
jle
les
xchg
mov
adc
xlat
adc
sub
aaa
cmp
imul
mov
adc
test
push
out
fiadds
dec
jp
pop
push
sbb
jne
adc
das
sbb
pop
imul
mov
adc
insl
ret
adc
loope
jno
inc
repnz
inc
or
and
mov
jns
add
test
cmp
call
adc
pusha
or
mov
into
repz
fimuls
xchg
add
mov
ret
je
fwait
sbb
and
jp
aaa
add
ljmp
jmp
pop
fs
sbb
gs
xchg
add
add
mov
add
jns
in
lret
cmp
add
jl
pop
outsl
lock
enter
pusha
stc
int3
or
xor
sti
xor
inc
inc
fdivr
or
add
jp
mov
je
shlb
push
fbld
mov
or
rclb
mov
jae
imulb
sarl
jb
pop
shlb
push
cwtl
rorl
stos
inc
mov
pop
or
lock
fstps
mov
lods
inc
push
inc
sbb
mov
mov
loope
bound
xchg
clc
insl
sti
mov
enter
pop
ja
push
xchg
sub
mov
rorl
and
fstl
or
frstpm(287
xor
inc
addr16
add
mov
sub
cwtl
or
inc
cmp
mov
pop
xor
mov
aam
xor
leave
clc
in
in
ret
inc
jb
pop
cmpl
add
jmp
dec
enter
push
dec
xchg
inc
and
cmp
xchg
inc
pop
imul
call
ljmp
sbb
les
pusha
popa
inc
xchg
nop
adc
incl
sbb
lret
pop
push
and
mov
inc
add
cmpsb
add
xchg
mov
push
in
sarl
mov
sbb
cmp
fcoms
and
out
adc
test
and
fstpt
mov
pusha
daa
or
and
mov
dec
jmp
pop
out
decb
pop
or
imul
xchg
loop
mov
or
mov
lret
aaa
rclb
pop
mov
xchg
xor
xchg
loop
lds
push
enter
pushf
mov
in
addr16
and
aaa
enter
lahf
mov
call
xchg
or
mov
lcall
jmp
js
lods
adc
sub
into
mov
test
mov
mov
test
inc
add
psraw
int
fistpl
pop
mov
daa
test
and
push
test
fwait
inc
xor
mov
pop
jmp
flds
push
pop
dec
test
movsl
sbb
out
pop
test
pop
inc
mov
add
outsb
rorl
fs
push
or
shll
je
jg
inc
insl
dec
and
pop
xchg
push
pop
fnsave
add
aas
fs
fcomps
insl
adc
sbb
outsb
adc
fcoml
mov
addl
mov
rclb
sbb
xchg
stos
outsl
push
out
jle
pop
adc
fmuls
xor
lock
mov
add
outsb
inc
mov
or
pop
je
add
mov
js
or
pop
andb
mov
scas
pop
inc
shl
add
xor
dec
aad
lods
imul
outsl
cltd
push
std
mov
sub
mov
inc
mov
sub
mov
call
in
mov
insl
add
xchg
scas
lret
popf
pop
xchg
sahf
jge
lods
mov
repnz
adc
mov
incb
sarb
push
popa
neg
push
out
mov
sub
push
cmp
cli
dec
lock
dec
adc
ret
sbb
sub
sbb
stc
movsb
jp
add
movsb
imul
push
sti
jl
push
je
dec
repz
lock
jl
mov
add
add
test
mov
aam
or
sbbl
fbld
ds
cli
cmp
or
mov
dec
mov
orl
mov
dec
dec
dec
dec
push
enter
lock
call
push
jbe
pop
or
jb
jbe
push
jnp
mov
addr16
je
sti
ret
and
jae
adc
das
sub
mov
inc
add
scas
insl
adc
lods
sbb
pushf
mov
sub
mov
adc
lcall
int3
xchg
mov
mov
in
je
push
inc
dec
cmp
cltd
inc
lods
adc
jl
lret
mov
scas
adc
outsl
lea
test
jae
out
or
ret
or
dec
pop
inc
sbb
sub
fistpll
adc
mov
test
xchg
push
or
lahf
fwait
cli
imul
dec
and
or
mov
push
outsb
out
add
test
outsb
pop
shr
pusha
xchg
add
sahf
mov
mov
imull
inc
sbb
insb
icebp
incl
adc
movsb
ljmp
and
and
out
add
js
dec
add
mov
add
xchg
mov
icebp
add
or
les
bound
pop
mov
push
jg
adc
sub
adc
xchg
add
lock
adc
scas
mov
mov
add
jmp
adc
adc
out
outsb
push
dec
lcall
dec
adc
popa
add
cwtl
inc
and
dec
and
ror
add
push
sbb
push
adc
push
jp
shrb
adc
mov
jp
dec
push
cmp
js
arpl
cmp
mov
push
adc
jmp
jl
adc
cmp
ret
cltd
sub
bound
add
inc
pop
sub
add
clc
das
adc
mov
adc
loop
add
das
les
movsb
mov
leave
mov
fdivl
rcl
jae
jbe
popa
or
mov
inc
push
dec
adc
js
sub
adc
inc
adc
dec
aad
push
mov
and
adc
and
out
add
sbb
jne
jle
daa
mov
faddl
shll
mov
inc
inc
add
cmpb
daa
sub
mov
popf
sub
adc
sub
sub
add
cmp
mov
call
cmp
rcr
jecxz
mov
cltd
aas
ja
xchg
fsubl
add
xor
add
sub
fildl
mov
push
jg
push
rol
add
and
add
mov
dec
stos
cmp
sbbb
inc
adc
gs
adc
sti
add
inc
xor
or
aad
mov
mov
xchg
xchg
sbb
out
add
or
jl
into
push
and
and
repz
or
mov
jbe
mov
lock
ss
add
adc
and
cmpsl
pop
sbb
aaa
push
lcall
fldcw
mov
in
mov
cmp
iret
add
pop
push
push
adc
or
inc
loop
insb
dec
push
out
enter
push
jl
jb
in
jge
lahf
dec
subb
and
arpl
mov
cmp
and
andb
lds
pop
clc
int3
pop
add
rclb
pop
test
sbb
pop
pop
test
add
inc
mov
ret
mov
into
test
sbb
shld
jl
pop
cmpb
loop
hlt
jmp
xchg
mov
bound
sbb
stos
and
sbb
mov
out
jnp
imul
and
in
push
ds
pop
mov
jb
std
pop
xor
loope
inc
mov
dec
sub
inc
mov
subb
dec
shll
and
push
das
add
jne
shl
inc
jge
xchg
dec
push
cmp
add
sbb
or
mov
ljmp
xchg
lahf
bound
and
dec
push
adc
dec
out
cmpl
mov
mov
cmp
sbb
or
out
inc
add
push
or
adc
sbbb
mov
adc
cld
add
adc
or
or
mov
cli
sbb
mov
jo
leave
mov
fwait
loopne
insl
sbb
inc
push
jne
js
xor
cmp
les
mov
or
xor
sarb
incl
mov
jmp
mov
stos
subb
sub
hlt
dec
mov
sbb
fildll
pop
xor
xchg
es
xor
jp
out
popa
pusha
daa
xchg
pop
loop
fildll
lock
or
and
mov
cli
dec
cld
test
xor
leave
fwait
hlt
add
mov
and
aaa
movsl
shll
out
enter
mov
in
inc
jg
cld
sub
push
inc
arpl
js
out
rcll
out
mov
in
push
sub
add
mov
pop
push
pop
test
push
outsl
xchg
and
movsb
push
pop
mov
and
mov
fcmovb
sub
lret
push
icebp
mov
mov
mov
arpl
inc
xchg
adc
loop
mov
ret
jecxz
inc
sbb
xor
mov
icebp
jg
movsl
out
jb
mov
filds
cmpsl
popl
xor
xor
lea
cmc
mov
popa
dec
lahf
mov
push
fsubrs
jmp
jmp
mul
rolb
xchg
in
pop
mov
or
das
mov
mov
jle
icebp
mov
std
outsl
pop
ss
push
or
inc
popa
xchg
xchg
add
xchg
jnp
mov
cli
insl
push
ss
fsub
inc
cmp
divl
adc
push
jnp
xor
jnp
outsl
cs
test
fistps
fs
es
in
mov
ret
test
mov
std
or
mov
int3
div
pop
pop
ljmp
inc
pop
xchg
les
leave
jecxz
and
inc
std
in
adc
inc
pop
dec
fiaddl
mov
adc
or
in
push
push
pop
inc
mov
sbbl
lds
jmp
int
jp
mov
and
pop
push
clc
inc
jb
add
lods
pop
and
pop
inc
jbe
mov
clc
xchg
andb
and
inc
dec
xor
mov
inc
xor
inc
fs
fbld
pop
and
xor
fists
cs
add
jg
aas
and
fidivrs
sbb
cwtl
aam
iret
dec
shr
arpl
std
fbstp
inc
popa
push
jbe
xor
fsubrs
sbb
adc
test
in
aaa
aad
sbb
jo
inc
sbb
add
mov
dec
push
cmc
jle
push
inc
cmp
push
out
add
sbb
pop
adc
jg
das
pop
jo
push
adc
sbb
aaa
lcall
jo
loop
push
push
inc
ret
adc
adc
leave
jbe
out
stos
ja
loope
arpl
mov
cmp
push
sbb
test
sbb
dec
mov
mov
shll
pop
xor
scas
add
push
cmpsl
ja
in
mov
test
das
cmp
mov
sbb
xchg
and
mov
mov
mov
adc
mov
aam
out
mov
mov
mov
sbb
insl
mov
pop
ret
mov
xor
adc
inc
mov
mov
mov
cmp
sbb
mov
out
push
dec
popf
lret
inc
pop
mov
jge
sbb
and
jg
xlat
sbb
aaa
mov
xchg
xchg
int3
rclb
out
ljmp
rorb
verr
and
fimuls
es
cmpsl
sub
pop
popf
outsb
es
call
imul
xchg
push
cld
out
lods
xchg
mov
and
or
pop
push
sbb
adcb
mov
mov
mov
inc
pop
and
xchg
mov
ss
loopne
inc
push
pop
push
inc
decl
and
je
rclb
fyl2x
loopne
xor
dec
hlt
pop
cli
mov
sub
jl
gs
insb
fidivrs
js
mov
ss
sub
add
xor
idivb
mov
rcrb
repz
push
xor
jmp
mov
out
shll
mov
jmp
ret
ret
add
adcl
rcrl
cltd
clc
call
in
dec
ljmp
cli
in
pop
jle
ds
cs
xchg
xor
popa
pop
cmp
sti
dec
add
in
mov
test
push
test
aas
mov
adc
jp
add
jae
mov
mov
push
push
scas
inc
ljmp
sub
mov
dec
mov
ss
xchg
outsb
xor
sahf
push
jl
or
test
xorb
pop
sub
mov
mov
mov
push
push
and
pop
inc
or
jg
add
and
ljmp
xchg
push
call
jno
lret
inc
icebp
sbb
mov
mov
mov
adc
mov
push
adc
ja
or
pop
loope
imul
dec
es
jno
cltd
dec
es
xlat
mov
jp
adc
jl
mov
cwtl
lret
aaa
push
jp
lcall
add
add
and
inc
inc
adc
add
and
xor
in
fcoms
push
or
test
test
and
mov
lods
inc
pop
cwtl
ret
les
and
sahf
ljmp
push
add
adc
inc
xor
xchg
and
pop
or
cwtl
or
and
sub
mov
and
sbb
stos
aas
add
fldt
lock
add
filds
push
in
int3
cmp
sbb
mov
aad
xchg
xor
mov
mov
int3
mov
push
adc
push
jg
addr16
hlt
xchg
adc
enter
add
mov
push
jns
mov
leave
ret
mov
add
add
and
add
sub
fnstcw
mov
xor
icebp
inc
jb
sbb
aam
lock
sbb
pop
jle
int
or
or
adcb
clc
xchg
movsl
jo
add
mov
sbb
xchg
cwtl
rol
mov
aad
jl
insl
cmp
inc
xchg
imul
fists
and
or
stos
pop
push
add
or
fucompp
push
pop
iret
scas
inc
ret
fwait
adc
mov
inc
aad
and
rcr
pop
mov
pop
adc
add
adc
xchg
and
sbbl
or
sbb
or
test
xor
test
inc
das
sbb
pop
push
mov
fisubs
pop
outsb
or
repnz
or
icebp
push
sbb
int
pop
xchg
scas
imul
jne
in
dec
orl
ja
sub
push
popa
sub
aaa
xchg
and
adc
add
sub
add
inc
xchg
pop
xchg
ljmp
add
or
dec
test
pop
das
mov
push
add
ss
dec
jnp
fimuls
arpl
sub
xchg
nop
sub
add
dec
cmp
es
dec
int3
xor
aaa
push
mov
push
xor
mov
xor
mov
testl
jbe
ja
jecxz
mov
cld
pop
pop
mov
ss
inc
and
push
add
sbb
add
lret
je
cld
or
sbb
pusha
gs
add
fistpl
xor
stos
mov
cmp
pusha
push
mov
add
inc
les
or
push
cld
mov
mov
data16
fldt
popa
stos
test
out
mov
pop
insb
or
les
fdivrl
imul
dec
fwait
xchg
cmp
dec
push
clc
out
scas
ljmp
aam
cltd
xchg
add
daa
or
add
mov
stc
cltd
ljmp
xchg
sbb
jge
es
in
hlt
fdivrl
mov
jno
dec
stc
fidivrl
stos
call
fadds
jecxz
dec
sbb
es
pushf
lcall
lock
push
push
movsl
adc
xchg
movb
add
insl
hlt
repnz
addb
pop
adc
and
and
push
loop
sbb
ja
fbstp
imull
incl
mov
sahf
mov
loope
push
std
mov
dec
mov
push
and
lds
out
push
test
xor
lock
repz
xchg
into
cmpsl
add
push
or
jmp
inc
adc
mov
lcall
shlb
push
jp
xorb
aad
push
mov
lea
add
mov
push
clc
inc
lods
test
and
add
lods
jb
mov
adc
cmp
test
sbb
push
cmp
aad
mov
add
or
cwtl
faddp
addr16
inc
jne
loope
mov
mov
scas
jmp
add
insb
mov
sbb
and
in
outsb
pop
pop
jge
enter
mov
lods
mov
sahf
jnp
jae
je
fnclex
test
push
ret
add
scas
sub
inc
sbb
rorb
mov
mov
sub
pusha
mov
add
js
mov
dec
add
shrl
icebp
insb
push
pusha
shrb
jnp
pop
mov
or
pop
or
xchg
pop
mov
fs
or
bound
loope
mov
cmc
dec
pop
scas
inc
in
sbb
cmp
rol
lret
lods
out
mov
add
call
cli
or
cmc
dec
inc
call
add
and
and
in
jns
stc
imul
fcompl
test
sub
lods
pop
mov
cmp
mov
into
pop
in
inc
dec
pop
push
sbb
mov
call
addb
mov
nop
js
out
hlt
mov
jb
pop
sbbl
pusha
leave
mov
fstpl
cs
cmp
mov
das
adc
mov
enter
stos
subb
int3
jp
jp
popa
mov
movsl
mov
push
imul
stc
repnz
adc
shll
mov
or
ficoms
add
out
adc
xor
adc
adc
es
mov
and
les
mov
mov
push
adcb
inc
mov
lods
and
lods
sub
mov
addb
jnp
leave
xor
scas
pop
adc
add
adc
sub
mov
dec
adc
push
mov
add
cmp
ss
add
loope
and
push
les
xchg
les
xor
pop
repz
adc
push
push
adc
int
popf
xchg
roll
dec
ret
add
es
mov
jle
lock
aam
sarl
mov
add
xor
sub
add
push
lock
incb
das
or
pusha
and
push
in
dec
rcr
sbb
adc
int
mov
sub
add
adc
sbb
push
jno
mov
push
cmp
sbb
add
cmp
add
adc
mov
mov
popa
stos
stos
pop
in
imul
adc
es
shl
add
dec
adc
int3
dec
sbb
pop
inc
mov
pop
inc
outsl
push
shr
aam
xchg
mov
adc
jp
cmc
mov
xor
aas
inc
pop
out
inc
arpl
mov
inc
jns
pop
bound
cmp
pop
add
adc
stos
scas
loopne
std
or
add
imul
and
movsb
xchg
rclb
lahf
mov
or
and
add
inc
les
fcmovb
bound
add
adc
out
pop
push
testl
hlt
or
ret
es
ljmp
jno
xchg
data16
adc
adc
movsl
jmp
daa
cli
sub
int
jne
inc
arpl
mov
add
and
cmp
and
packsswb
or
sub
jge
ret
sbb
insb
lock
and
cmpl
sub
jo
shll
addl
leave
sub
mov
xor
dec
notb
loop
test
inc
les
sbb
sbb
xlat
xor
inc
xor
add
ss
inc
cmpsb
rclb
adc
add
pop
ret
add
add
xchg
jmp
aaa
loope
jb
addb
lods
notl
lods
cwtl
sub
cmp
mov
shl
sub
xor
xor
inc
mov
mov
cmp
test
or
mov
and
mov
sbb
xchg
and
dec
ljmp
push
mov
jg
xor
subl
fcmovbe
in
cwtl
jno
adc
pop
mov
ja
jbe
int3
jge
pop
or
das
push
adcl
xchg
and
les
inc
aaa
loop
xchg
lods
incl
and
xor
mov
jg
inc
mov
add
mov
ret
mov
popf
or
and
daa
pop
ds
mov
jne
test
pop
adc
or
sbb
mov
mov
daa
cltd
inc
rcrl
das
repz
pop
mov
loop
mov
notl
movsb
sub
rclb
shll
sarl
hlt
es
mov
mov
test
jae
jge
inc
mov
sbb
lret
mov
mov
clc
push
pop
jae
pop
add
mov
jnp
fisubrl
lret
ret
test
xlat
push
sub
adc
fisttps
loopne
add
nop
movl
adcb
sbb
negb
mov
sbb
xor
fldl
fprem1
push
sbb
iret
jmp
rcrl
push
out
mov
aaa
movsb
cmp
inc
xor
or
or
fmull
jo
out
sub
sbb
push
shr
xchg
adc
pop
jecxz
mov
flds
sub
inc
adc
dec
xchg
fiaddl
adc
movsb
push
and
inc
cld
push
lret
push
stos
adc
sbb
mov
cwtl
inc
stos
fs
sub
jne
pop
das
aaa
push
movsl
push
or
add
push
inc
adc
in
jmp
inc
mov
loopne
dec
push
add
inc
fadd
lret
or
and
xor
adc
mov
int
adc
add
sub
sbb
test
sub
lahf
sbb
scas
xlat
jmp
and
add
stc
aad
or
pusha
jne
inc
orb
fimull
adc
push
sbb
inc
ret
add
fs
lret
mov
sub
pop
mov
push
std
fiaddl
pop
xchg
pop
add
shrb
loope
dec
clc
xor
loop
xorb
lock
pop
inc
sbb
repz
dec
mov
adc
popl
test
mov
pop
fxch
arpl
inc
cmpsb
jge
das
pop
shrb
test
add
add
dec
push
hlt
pop
popf
inc
popa
dec
ret
ret
pop
add
cmp
xchg
jns
push
or
inc
scas
andl
mov
add
sub
in
roll
inc
sbb
into
outsb
clc
jecxz
add
inc
inc
movsb
mov
pop
adc
mov
addl
dec
push
cli
mov
call
out
add
push
adc
test
inc
xor
jo
fiaddl
mov
stos
xor
add
add
cmp
cli
push
movsb
int3
jno
push
adc
push
ret
stos
fwait
cmp
inc
ljmp
call
xchg
sub
jp
push
or
data16
fldt
or
cld
lahf
adc
mov
andl
jge
das
add
sub
pop
inc
add
fistl
ds
outsl
add
push
lea
sub
ffreep
fucom
js
jp
std
call
scas
sub
or
or
lahf
sub
insb
ret
sub
adc
inc
jmp
lock
add
push
call
imulb
loopne
movsl
in
cltd
mov
lret
or
fisttps
ljmp
push
sub
subl
std
and
sub
test
call
sub
add
psadbw
lea
sti
sub
jbe
adc
sbb
lock
add
or
adcl
idivb
and
inc
pop
sub
popa
sbb
adc
in
test
dec
and
push
lahf
sub
add
mov
add
sub
outsb
pop
aad
and
inc
cmpsb
adc
sbb
lret
popf
xchg
into
jno
add
outsl
in
xchg
or
testl
cld
ss
and
pop
ljmp
xchg
adcl
mov
cmp
xchg
jbe
mov
inc
lods
jmp
jl
mov
in
lcall
adc
sub
imul
or
push
pop
stos
pop
fisubrs
daa
sbb
in
lea
xchg
add
test
pop
jle
adc
jl
in
push
inc
push
xchg
add
mov
xchg
mov
sub
je
mov
test
insb
lock
jg
lret
in
inc
jl
lahf
jmp
pop
movb
std
push
push
mov
sbb
xlat
idivl
pop
clc
hlt
add
and
les
mov
push
test
dec
xor
sbb
inc
add
add
sti
das
fdivrl
sbb
in
mov
mov
and
pop
clc
pushl
cmp
ret
mov
fadds
dec
adc
and
das
in
pop
xor
add
lock
dec
or
insl
push
pop
fimuls
pop
iret
xor
scas
or
pop
dec
push
mov
mov
jmp
stos
sbb
pushf
or
mov
nop
dec
pop
clc
jg
add
adc
xor
inc
arpl
dec
into
nop
add
sub
mov
scas
pushf
lods
or
fists
and
xor
sahf
add
sbb
add
dec
loope
das
cld
cwtl
lods
inc
mov
mov
test
and
outsl
test
cs
inc
mov
fistps
cld
inc
inc
mov
push
popa
pop
and
mov
adc
nop
and
imul
cmp
loopne
pop
add
jo
imul
jns
fimull
sar
or
push
sub
mov
sub
mov
out
mov
jno
or
jo
pop
jle
dec
mov
mov
popl
incb
push
push
inc
add
aaa
jle
fwait
and
int
rcrl
leave
pop
icebp
jg
cmp
add
pop
sub
sub
mov
mov
movsl
pop
jo
mov
stos
js
inc
rcrl
mov
shl
add
insl
inc
push
cld
outsl
cmp
fisttps
mov
lods
adc
aas
and
bound
ja
ret
pusha
icebp
cwtl
jmp
outsb
xchg
mov
faddl
fstpt
adc
je
inc
pop
mov
gs
push
adc
mov
adc
jecxz
aam
ficoms
add
pminub
daa
sbbb
aam
pusha
add
push
add
hlt
push
cs
pusha
cmpsb
aas
icebp
xchg
add
leave
sub
jno
jle
loopne
ljmp
movsl
mov
sti
mov
call
fs
ljmp
fsubrl
pop
aad
cwtl
inc
nop
sbb
adc
inc
push
mov
push
inc
and
inc
sbb
jg
orb
xchg
pop
pop
push
pop
mov
std
rolb
addr16
insl
test
or
incl
bound
mov
or
mov
and
mov
clc
in
or
sub
xor
jmp
mov
xlat
lods
sub
dec
lods
push
jg
mov
fistl
fdivrl
outsl
ja
cmp
mov
pop
mov
rolb
inc
inc
cmc
jne
mov
data16
and
push
add
or
jg
adc
data16
lea
test
lds
fisttpl
jb
push
push
or
sub
lcall
jecxz,pn
js
loopne
pop
in
dec
in
sahf
push
rolb
mov
xor
jle
add
adc
ja
cli
loop
or
mov
in
cmp
jmp
in
fstl
pop
add
insl
pop
fsubs
sbb
jmp
cmp
pop
mov
fwait
mov
and
xchg
jmp
sub
fildll
dec
or
ret
adcl
fstpt
cwtl
mov
and
cmp
jne
orb
aad
cli
in
daa
or
stos
cmpsl
rol
push
push
xor
fldl
xchg
sub
adcb
stos
xor
test
mov
stos
mov
jb
jp
adc
jle
aad
fistps
inc
out
push
ss
sbb
pop
insl
add
jne
das
add
inc
pop
sub
xchg
cmp
jbe
sbb
xor
xchg
rorb
dec
mov
test
jo
shll
sbb
mov
jecxz
mov
add
mov
popf
jg
add
push
push
sar
mov
add
inc
lea
pop
mov
mov
fwait
xor
mov
popa
nop
aas
add
loopne
mov
jmp
sahf
xor
icebp
pop
xor
loope
movsl
dec
stos
rorl
lret
xor
lock
sbb
or
dec
aam
jl
test
cmp
mov
jbe
addb
adc
sar
adc
daa
adc
cmp
rcrl
pusha
add
mov
test
xchg
fisubl
rcr
mov
insb
lods
fsubrs
push
es
or
push
loop
aas
ret
arpl
pop
inc
rclb
in
ret
loopnew
push
or
cld
mov
outsl
loopne
scas
in
imul
xchg
mov
or
shl
pop
jnp
pop
cwtl
push
addb
cmpsb
call
outsl
mov
and
and
jg
popl
dec
std
add
sub
pushf
mov
jg
or
cli
iret
mov
pop
mov
add
xor
ljmp
sub
push
mov
testb
xchg
fiaddl
dec
addr16
dec
or
jns
loopne
inc
movl
loop
ret
xchg
mov
sub
pop
mov
add
lock
jbe
cli
sbb
fildl
adc
jg
xchg
testb
lret
mov
push
xlat
cvtpi2ps
andl
xchg
mov
pop
fwait
lock
mov
or
inc
fwait
das
cmp
pop
outsl
add
pop
lock
sub
adc
push
xchg
hlt
sub
jbe
xchg
sbbb
adc
loope
sbb
jecxz
and
mov
mov
movsb
lock
pop
lahf
inc
pop
mov
jl
adc
add
das
loop
mov
jns
mov
mov
adc
mov
je
lock
inc
push
add
pop
jno
pop
les
mov
sub
je
inc
and
rcrb
add
mov
ljmp
sub
add
add
sbb
fimull
lea
popf
test
sub
push
jae
jbe
mov
lahf
adc
mov
loop
push
cmp
out
push
stos
repnz
xchg
sahf
xchg
shll
pop
mov
cmpsb
or
sar
xchg
add
sti
jle
add
fcmovb
ja
inc
jns
lods
int
or
push
movsb
push
push
mov
cs
fiaddl
and
sahf
add
sahf
jge
pop
call
adc
imul
icebp
or
add
push
fisttps
push
test
addr16
adc
pop
xchg
adcb
mov
or
and
lock
out
clc
hlt
add
inc
or
add
add
inc
xor
adc
daa
push
xor
rolb
or
or
xor
ret
ffreep
dec
jns
mov
repz
ds
or
pop
mov
mov
jbe
mov
inc
add
inc
sub
shll
jo
movsl
mov
loop
mov
sbb
xchg
add
add
mov
lea
dec
sub
mov
addb
dec
clc
pop
test
and
decb
aam
jecxz
add
add
test
pusha
imul
addr16
inc
out
mov
dec
and
inc
mov
sti
add
inc
xor
dec
push
inc
mov
and
lods
out
and
jno
mov
xor
mov
sub
orb
insl
push
inc
shll
jns
and
jne
adc
shlb
bound
or
push
mov
inc
xchg
inc
dec
xor
test
mov
in
sti
or
add
adc
mov
rol
inc
jle
inc
xor
cmp
negb
push
mov
push
or
dec
pop
ret
adc
inc
lret
push
sarl
sub
sub
or
or
addr16
jmp
and
cmp
testl
inc
mov
pusha
mov
pop
js
pushf
loop
outsb
jmp
mov
mov
push
pop
call
mov
xchg
and
jno
mov
or
sub
sbbl
or
imul
mov
xchg
fisubs
push
push
mov
add
subl
imul
xor
add
mov
mov
mov
bound
sbb
fldcw
lds
sbb
push
lods
js
cli
xchg
daa
sub
icebp
andb
jle
addb
popf
addl
jne
leave
ret
pop
mov
xchg
xchg
or
adc
push
sbb
jge
fcoms
inc
jg
dec
adc
daa
loopne
das
cltd
jl
call
imulb
mov
sbb
pop
xchg
test
add
mov
jmp
xchg
xchg
push
mov
out
stos
iret
xor
pusha
pushf
mov
sub
jg
mov
add
adcb
sub
inc
insb
aad
or
inc
je
adc
dec
in
fisubl
aad
mov
jmp
mov
or
adc
mov
outsl
roll
push
ljmp
jo
icebp
call
lret
mov
scas
sbb
inc
inc
sub
int
loopne
loop
pop
sub
xchg
imul
repnz
shr
and
test
pop
jno
test
cmp
rcll
lds
hlt
sbb
mov
lret
or
bound
enter
aad
lods
loopne
inc
jecxz
cmp
scas
mov
push
nop
lret
sub
int3
cmpsl
decl
pop
push
nop
ror
inc
jge
adc
cmp
mov
imul
mov
sti
lods
jle
je
insb
pop
outsb
xor
in
fsubs
test
add
dec
leave
add
mov
add
ljmp
pop
in
dec
in
repz
repnz
std
das
add
jge
inc
and
adc
pushl
xor
push
add
xchg
cmp
repz
sub
fildl
lret
sbb
xchg
test
imul
push
mov
adc
mov
jp
rolb
and
dec
mov
repz
jmp
repnz
dec
mov
xor
mov
fwait
mov
stos
and
negl
push
test
fstl
outsl
lock
cmp
inc
dec
lock
adc
pop
mov
fisttpl
cmpsb
ret
scas
pop
call
popa
add
cltd
push
and
push
jmp
push
fnstsw
cli
ret
aaa
jo
pop
test
inc
jne
mov
movsl
xor
lret
inc
or
cltd
sub
inc
or
mov
and
or
mov
enter
push
and
cmp
jnp
xchg
cmc
mov
inc
mov
subb
and
jbe
jmp
dec
ss
fndisi(8087
adc
mul
inc
mov
inc
ret
test
xchg
lcall
push
outsl
ret
fnsave
or
mov
adc
adc
sbb
mov
rorl
insl
loope
outsb
and
lock
inc
aam
jo
imul
jb
xor
test
outsb
fwait
or
fstps
hlt
lods
mov
mov
cmc
inc
push
lret
jae
pop
add
mov
adc
xchg
and
aas
into
xchg
lea
inc
test
test
inc
dec
loope
or
stos
aam
cli
cmp
out
faddl
pop
aaa
imul
test
inc
loope
shl
dec
loopne
jp
inc
dec
and
cmc
adc
fildl
js
outsl
push
push
sbb
arpl
gs
mov
pop
and
and
push
sbb
out
push
sbbb
and
aas
mov
mov
jmp
into
xchg
inc
pop
out
mov
shl
loope
arpl
mov
cmp
push
or
xchg
and
ficomps
or
fsubs
jbe
mov
inc
cmpsb
or
or
adcl
scas
push
add
xorl
xchg
pop
clc
jbe
out
lods
and
dec
mov
rcll
lds
push
and
add
sbb
inc
jno
adc
cmpsl
jne
in
dec
pop
mov
fs
and
addl
xchg
push
js
lea
push
dec
arpl
dec
test
in
in
fisttps
jl
xchg
and
imul
pop
je,pn
inc
iret
cmpsb
fxch
out
enter
aad
loope
das
int
iret
rcrl
dec
clc
pop
mov
sarl
jge
aad
subb
lock
ret
notb
mov
jbe
lock
jae
test
mov
or
jp
cmp
xor
in
dec
xor
or
scas
subb
inc
jge
mul
pop
mov
out
add
in
mov
xchg
sub
stos
or
or
or
and
stos
xchg
das
jl
ljmp
push
xor
in
fcomps
aad
cmp
shll
jg
inc
mov
jmp
adc
xorb
mov
push
mov
repz
xchg
mov
xor
mov
push
and
jb
add
outsb
sarl
mov
out
ficoms
pushw
push
mov
outsb
xor
outsb
mov
xor
aam
js
mov
fldl
scas
add
jne
cmp
icebp
inc
test
popa
je
lcall
sub
push
cmp
mov
adc
and
popa
outsb
xor
fisttps
pop
dec
repz
les
rorb
femms
sub
mov
sbb
stos
mov
fsts
mov
out
and
inc
fwait
test
jae
test
inc
ror
ljmp
ja
enter
jnp
pop
aad
push
fdivl
cmc
pop
and
aas
rclb
jbe
repz
mov
or
out
sub
or
cmp
inc
test
icebp
add
xor
ja
xor
jp
movsb
enter
je
xchg
xchg
or
bound
js
or
arpl
ret
inc
or
xlat
daa
or
adc
pop
inc
repnz
lea
sub
mov
in
out
or
in
shl
adc
cld
push
mov
or
scas
adc
inc
xor
andl
mov
jmp
lock
xchg
cmp
mov
xor
outsl
ja
in
mov
add
cmpb
shrl
add
cmpb
or
inc
mov
pop
mov
cwtl
mov
push
add
add
fdivr
xchg
pop
daa
movsb
shufps
pop
in
jp
js
cs
xor
enter
adc
or
es
xchg
sbbb
aad
int
mov
push
pop
inc
mov
shrl
and
shl
lahf
inc
lods
mov
aad
pop
cltd
and
js
dec
ljmp
sbb
add
push
in
adc
and
out
sbb
add
lods
and
hlt
fisttps
ret
andb
push
or
out
clc
fsubrl
test
call
xchg
lods
add
inc
in
hlt
movsb
clc
lea
push
sub
call
xchg
and
sbb
push
jo
push
or
jmp
adc
add
cmpsb
enter
data16
jl
mov
xchg
inc
xor
in
addl
dec
inc
inc
adc
dec
sar
out
aas
push
lahf
inc
and
cwtl
dec
movsb
jp
mov
bound
test
push
nop
cmp
add
push
cltd
cli
rcl
or
add
sbb
inc
jl
sbbb
jecxz
fiadds
and
ljmp
jp
inc
cmpsl
mov
xor
clc
addr16
mov
add
stos
and
jg
sub
inc
cmpsl
stc
jg
inc
les
pop
cmc
pop
clc
pop
rorl
hlt
frstor
or
pop
mov
int
cmp
push
xchg
clc
pop
sbb
add
add
icebp
movsl
jmp
and
inc
cmpsb
jp
push
pusha
cmpsb
mov
or
clc
addl
out
test
mov
cmp
lcall
loope
or
or
jecxz
xchg
adcl
xor
xchg
add
push
push
ljmp
inc
clc
pop
push
rolb
dec
ret
cmp
into
or
xchg
push
jno
mov
sub
and
xchg
adc
add
hlt
int3
adc
and
rolb
sub
outsl
cmp
loopne
icebp
adc
adc
les
add
cmp
inc
jge
cwtl
add
das
push
inc
push
daa
mov
mov
or
loope
les
push
ror
jg
jg
and
mov
int3
xor
andb
sub
xor
sbb
mov
stos
or
xchg
int
push
lods
sbb
add
sub
in
mov
ja
and
add
cli
adc
mov
je
adc
mov
xchg
insl
adc
shl
xchg
test
jmp
pop
pop
rclb
fxch
faddl
inc
jl
xor
adc
sub
cmp
or
jns
push
add
mov
cwtl
cmc
stos
cltd
mov
inc
shlb
fs
jo
xlat
repnz
stc
push
dec
test
cmp
mov
sarb
and
add
cmp
es
aaa
mov
shr
clc
call
aam
imull
lds
aas
aaa
andb
negl
lods
fidivs
mov
mov
mov
adc
add
test
mov
cmp
cmp
enter
js
inc
add
sub
add
push
sarl
xlat
adc
push
cmp
popf
dec
mov
pusha
xor
lcall
push
mov
loopne
mov
cmp
shl
lea
fsts
dec
xor
inc
add
pop
fwait
test
fisubs
xlat
push
scas
sub
pop
xchg
lods
add
sub
fs
sub
pushf
adc
add
dec
test
or
inc
push
xorb
rcll
jne
xor
push
cmp
shrl
mov
inc
out
add
lret
daa
or
aam
js
mov
es
fistps
inc
add
nop
dec
add
push
in
lret
mov
cmc
pop
ficompl
push
outsl
xor
adc
mov
das
fdivs
mov
mov
decl
xchg
ds
sbb
scas
inc
xor
xor
push
addl
mov
lock
sub
mov
int3
adc
out
and
cmp
es
fisttps
sub
cmp
pop
adc
cmpsb
mov
movsl
lret
mov
sbb
dec
enter
sbb
push
jp
mov
mov
ljmp
mov
fsts
or
dec
sub
hlt
sbb
xlat
loope
inc
sbb
dec
outsl
adc
outsb
xchg
mov
test
push
adc
lods
push
and
xor
push
ds
in
int3
adc
sub
repz
sbb
shll
sub
add
xchg
les
inc
mov
mov
jge
dec
adcb
inc
add
sbb
push
loopne
xchg
ds
adc
mov
pop
mov
or
jmp
adc
inc
mov
popa
adc
mov
dec
add
and
movsl
mov
out
cmp
ja
not
test
fildll
jg
sbb
popa
sbb
mov
push
leave
dec
stos
cmp
ds
dec
mov
xchg
add
nop
fwait
push
fmull
push
mov
mov
and
scas
mov
sbb
jb
mov
daa
clc
jg
cli
movsl
dec
mov
aam
add
or
sarb
cmpsb
jbe
incl
movsl
xor
and
add
lret
das
push
sar
jp
add
sub
pop
jp
incb
xchg
pop
repnz
push
shrb
incb
call
incl
or
adcb
mov
shll
fimull
adc
xor
cmp
pop
incl
xor
sar
adc
mov
add
enter
shlb
sti
je
fdivs
push
call
mov
pop
xchg
decl
add
xlat
test
test
stos
imul
nop
lret
jg
outsb
rorb
rcll
lahf
jg
and
or
push
push
mov
cmp
in
ljmp
call
dec
sub
cmp
sbb
or
ret
push
sahf
decl
xchg
sub
pushl
xor
aas
imul
lcall
incl
dec
add
pop
lods
jle
mov
aad
mov
push
icebp
fnsave
fs
jmp
jne
fisubrl
or
dec
sub
sbb
enter
arpl
jbe
sub
add
scas
repnz
idivb
adc
in
fistpll
fidivrl
pop
mov
xchg
pusha
sub
outsl
out
mov
ret
mov
ljmp
aam
add
adc
cmpsl
in
mov
fmull
stos
mov
sub
or
int3
jnp
aaa
subb
retw
stos
idivl
mov
ja
inc
cmp
std
stc
in
cmp
jmp
sbb
mov
lcall
cmp
loope
cmp
jne
mov
and
jge
outsb
jmp
add
jmp
into
and
mov
mov
dec
push
jmp
mov
push
in
mov
sti
icebp
or
mov
lcall
mov
incl
cmp
sub
sahf
and
jbe
push
sbb
mov
sbb
aaa
and
ss
mov
and
sub
mov
and
pop
cmp
stos
pop
sti
incl
bound
add
popa
push
and
ljmp
aas
popa
lock
pop
shll
test
pop
lods
imul
adc
jne
add
mov
push
jns
cmovae
scas
jg
lods
test
sar
xor
das
adc
aam
pusha
inc
sub
pop
daa
aam
fmuls
and
sbb
jg
les
mov
push
leave
out
fsub
sbb
inc
sub
mov
mov
dec
xchg
cli
mov
sub
mov
sub
adc
psrld
outsb
out
ret
negl
mov
cltd
mov
pop
pop
stos
cli
clc
push
cmp
int
push
sub
std
fistl
xor
lahf
cmc
add
push
cmp
lods
push
iret
in
arpl
inc
dec
aaa
fdivrp
divb
add
mov
mov
jbe
sbb
inc
xchg
pushf
call
pop
jle
jg
pop
add
mov
jge
push
test
in
cmp
xchg
adc
scas
rol
xor
je
aaa
xor
pop
icebp
sub
add
andl
xchg
mov
mov
pop
addr16
les
popf
inc
add
add
and
mov
cmp
pop
xchg
mov
adc
push
loop
push
fnsave
sub
lret
sbb
xor
sbb
hlt
adc
xchg
xchg
flds
sub
add
mov
or
pop
aas
xchg
out
and
pop
cmpsb
sbb
int
mov
cmp
inc
xor
push
sbb
insb
jno
mov
push
enter
int
jmp
loopne
dec
jmp
idivl
test
mov
inc
mov
sahf
mov
pop
mov
mov
cmp
stc
add
ds
adc
shll
jle
push
jg
or
outsl
rorl
dec
dec
inc
data16
std
jl
shlb
push
ret
daa
jl
cmp
imul
pop
sbb
shl
jg
jecxz
ja
jl
in
mov
sbb
lds
testl
test
sub
test
ss
addl
jno
sbb
sbb
cmp
rol
xchg
out
cmp
imul
ja
mov
push
mov
mov
rorb
insb
push
xchg
push
pop
sbbl
insb
xchg
ret
adc
jne
ret
fisttps
xchg
aas
jmp
jp
cld
jb
enter
sbb
outsl
mov
fwait
mov
ljmp
movsl
lock
jmp
or
test
mov
inc
hlt
mov
jecxz
mov
cmpl
lahf
add
cmc
inc
sub
mov
movsl
cmpb
repz
mov
adc
mov
jp
mov
and
fs
mov
sub
fnstenv
call
mov
mov
mov
push
inc
add
pop
cmp
ss
fisttpll
push
outsb
mov
outsb
pop
cmp
push
and
add
mov
lods
lea
in
ja
imulb
push
xchg
dec
jno
scas
bound
subl
movsb
dec
mov
jge
enter
inc
movsl
add
inc
dec
loopne
adc
adc
jbe
push
cld
outsb
mov
or
lds
push
pop
mov
outsl
je
cmc
cmp
int3
into
test
push
mov
jg
test
insl
nop
push
inc
loopne
add
mov
pop
sub
cltd
dec
data16
mov
mov
sbb
and
fcmovnu
fstpl
push
pop
add
arpl
mov
test
xchg
xor
jbe
outsl
and
out
ret
push
das
add
stos
mov
mov
test
in
jl
or
loopne
mov
sub
xor
jmp
fdiv
js
push
add
jle
push
cmpb
loop
sbb
das
movsb
dec
subb
je
lea
es
mov
cmp
push
mov
push
lahf
and
scas
adcb
push
mov
push
pop
inc
dec
push
loop
or
rolb
pop
loop
sub
divb
out
sbbb
jle
or
add
adc
ja
mov
int
lret
test
push
and
mov
dec
outsb
add
sbb
add
fists
xchg
pop
cmp
or
push
outsb
icebp
aam
dec
aas
or
jle
sbb
xor
push
adc
mov
add
push
push
dec
flds
icebp
adcb
xchg
add
dec
xor
nop
or
sbb
jp
pop
lods
bound
in
add
loop
pushf
add
pop
adc
lock
and
push
fsubs
xchg
je
add
pop
hlt
inc
push
push
push
pop
inc
adc
test
jo
mov
mov
fs
ret
xchg
or
xchg
mov
mov
inc
or
pop
mov
add
test
loopne
addr16
lret
pushf
inc
icebp
push
les
xor
dec
mov
sub
pop
cld
xor
ljmp
loopne
fimuls
jb
add
std
rclb
les
xorb
add
or
test
xor
clc
push
xor
mov
les
sub
ror
jnp
push
add
mov
jl
sarb
xor
mov
int
mull
mov
inc
jmp
pop
and
mov
adc
add
bound
xchg
jmp
jbe
fldt
pushf
sbb
mov
or
push
pop
mov
dec
mov
std
clc
sahf
movsb
fimuls
lock
pop
pop
push
orl
inc
xor
imul
xor
outsb
pop
xchg
and
nop
fistl
lods
and
mov
incl
sbb
add
loope
loop
push
pushf
xchg
icebp
repnz
dec
xchg
sub
cmpb
xchg
fldenv
aaa
in
lods
adc
aam
testl
fsubl
clc
into
insb
mov
movsb
jecxz
sub
or
adc
rorl
or
pop
xor
push
in
lea
mov
notl
shll
sahf
loop
or
pop
in
xchg
std
adc
sbb
or
push
cli
add
ret
pop
pop
fists
inc
inc
rcll
xor
les
mov
cmc
mov
push
jge
lret
or
jle
ret
icebp
pop
fldenv
sbb
shl
call
cmpl
jp
and
pop
cwtl
inc
mov
sahf
fwait
pop
loopne
cld
mov
push
mov
int3
add
cmp
ret
shll
sub
xchg
cmp
mov
popf
xchg
mov
pop
fadds
loope
les
jb
aaa
jle
outsl
lods
mov
pop
xchg
pop
and
inc
adc
js,pn
xor
push
je
mov
fiadds
mov
ret
pushf
add
call
mov
bound
fs
jo
fcomp
push
and
jl
cmc
add
fldt
sbb
mov
mov
jbe
imul
push
cwtl
vpcmpgtd
fwait
inc
inc
lret
shlb
test
ds
scas
and
mov
or
mov
sub
scas
cld
mov
jl
sahf
pop
or
push
mov
inc
outsb
mov
lret
imul
dec
std
push
icebp
push
mov
aas
shl
loope
push
enter
lods
mov
cmp
jmp
ss
lods
mov
sbb
sti
jno
pop
call
or
push
sub
push
or
pop
jl
nop
push
cmp
xor
xor
negl
aam
test
ret
dec
pop
movsb
sbb
xor
addb
add
push
adc
ljmp
inc
dec
xchg
pop
push
mov
xchg
xchg
mov
ret
mov
cwtl
test
xor
adc
jns
rcrb
mov
mov
repz
add
pushf
stos
adc
rorl
dec
or
lods
in
lcall
mov
cs
fs
aad
cli
hlt
adc
adc
dec
and
sub
mov
mov
mov
rcrl
pop
repnz
xchg
adc
add
rorb
xor
outsb
shll
jmp
mov
pop
push
mov
mov
xchg
lret
push
inc
stos
dec
cmp
movl
adc
das
insb
insb
or
sub
xor
mov
sub
xchg
lds
scas
out
push
push
cmpsl
ja
pop
iret
push
das
sbb
lds
mov
fs
lock
js
adc
rcl
sub
loope
outsl
icebp
mov
je
test
push
or
mov
push
cli
repnz
mov
adc
jge
push
jp
aam
add
icebp
inc
pop
outsb
or
push
mov
pop
adc
add
add
inc
add
sbb
sbb
dec
xor
icebp
cmp
adc
insb
dec
inc
cltd
push
pop
dec
pop
add
xchg
jns
stos
repnz
movl
cmp
and
es
fsubr
xor
or
loop
divl
xlat
aam
imul
xchg
orb
cmp
xchg
ficoms
pop
adc
loopne
adc
jmp
lds
leave
jge
add
push
sbbl
test
inc
adc
and
cmc
mov
and
cmc
xor
push
mov
in
ret
push
mov
test
jns
cmc
subb
inc
clc
es
push
std
pop
and
and
adc
js
jmp
jecxz
pushf
or
sbb
loope
dec
adc
cmp
push
sbb
cmp
outsl
push
loop
lret
sub
sbb
fiadds
pop
xor
loopne
cmp
and
out
das
and
and
aad
mov
arpl
inc
mov
popf
sar
inc
mov
jmp
test
jae
cmpsl
das
sbb
and
outsl
js
je
out
repz
mov
pop
test
mov
les
dec
les
popa
out
add
adc
push
movsl
xlat
shrb
adc
xchg
lock
popa
dec
ljmp
out
inc
movsl
mov
mov
adc
int
xor
xchg
daa
sbb
sub
out
adc
inc
andb
adc
add
inc
scas
lods
repz
iret
gs
mov
add
lods
mov
adc
dec
ror
mov
cmp
cs
lea
fidivs
xor
push
cld
push
mov
lods
adc
and
aam
jecxz
sbb
sub
stos
fildll
inc
stc
insb
xchg
mov
push
mov
push
scas
mov
adc
sbb
sbb
inc
jg
pop
insb
adc
loope
lahf
dec
rolb
fisubrs
mov
add
mov
decl
jecxz
ret
lcall
pushf
pop
cmp
fimuls
dec
add
adc
add
lret
mov
lea
aas
add
popa
add
or
adc
and
popa
sub
and
mov
outsl
add
out
jmp
mov
loope
inc
bound
lahf
sbb
pop
aas
pop
sbb
cwtl
dec
cld
mov
cld
xchg
subb
iret
mov
roll
and
add
inc
xchg
inc
idivb
bound
js
mov
add
icebp
cld
xor
sti
sub
cmp
mov
fcmovbe
push
ja
lcall
test
push
and
popw
mov
inc
lds
sbb
xchg
add
stc
in
lds
mov
cmpsb
mov
shr
repz
sub
mov
add
and
adc
push
or
imul
push
push
inc
aad
pop
loop
pop
shlb
dec
loop
jg
adc
outsl
add
and
js
bound
loop
mov
add
pop
mov
call
mov
loop
mov
xor
js
aad
sbb
dec
mov
mov
aad
mov
and
imul
jge
and
andb
cmc
adc
jecxz
rorb
jle
loope
sahf
pusha
pop
shll
dec
mov
aaa
mov
push
iret
inc
fldt
fwait
mov
jecxz
dec
adc
push
pop
mov
adc
push
into
mov
sti
movsb
pop
xchg
add
push
aad
add
or
lret
xor
or
add
outsb
or
cmp
adc
adcl
mov
dec
out
push
movsl
lcall
add
scas
xlat
pop
push
push
repz
sbb
inc
les
loope
inc
jg
movsl
or
cmp
inc
call
mov
pushf
nop
pop
hlt
jae
icebp
inc
dec
and
mov
pop
jmp
lock
or
daa
jmp
test
les
mov
std
pop
sbb
scas
adc
enter
out
nop
inc
and
jnp
incl
call
adc
imul
mov
stos
xchg
shrl
jg
loopne
add
inc
push
mov
in
mov
shll
loope
addl
cmpsb
xchg
mov
mov
pmaxsw
push
ljmp
push
movq
adc
repz
das
aaa
insl
add
mov
xchg
int3
xlat
push
push
or
lret
aaa
mov
out
xchg
xor
sbb
jne
hlt
pop
dec
add
xor
add
les
pop
xchg
pop
xlat
push
pop
scas
sbb
addr16
and
or
and
fldl
je
sub
in
and
or
adc
test
inc
pop
dec
jg
ds
test
gs
jp
xchg
loope
push
push
cmp
sub
cmp
xlat
insl
push
adc
aam
fcompl
test
fcomps
sub
mov
adcl
xor
test
sbb
icebp
hlt
sarl
push
and
aam
aam
in
sarl
pop
test
loope
xchg
into
pop
mov
mov
mov
sbb
pop
fidivrl
mov
mov
push
sbb
orb
or
cmc
mov
cmp
and
xor
add
sub
je
adc
add
insb
repz
add
fiaddl
sub
in
push
push
or
imul
push
cld
andl
and
inc
mov
int
dec
sub
pop
pop
jo
aad
addb
sbb
sub
shrb
je
mov
mov
inc
sbb
sbb
adc
cld
mov
hlt
add
mov
pop
mov
test
xor
in
adc
push
cmc
pusha
popa
out
fs
add
push
pushf
add
adc
lahf
mov
lcall
das
add
dec
push
inc
out
stos
mov
fisttps
pop
imul
add
dec
or
dec
mov
cmp
ret
xor
movsl
orb
pop
push
int3
inc
in
sarb
mov
call
test
pop
sti
jge
outsl
je
push
nop
sbb
inc
pop
adc
xchg
lods
test
or
push
negl
cmp
shrb
and
mov
and
and
mov
mov
ja
push
insl
divl
andb
push
jecxz
or
or
mov
pop
sbb
int3
xor
pop
and
jae
and
adc
nop
mov
testb
push
je
or
iret
sbb
lock
fadds
sbb
mov
push
scas
lcall
jo
call
or
sbb
fnstenv
mov
jo
add
mov
lret
add
pop
push
scas
mov
test
pop
cs
cmp
inc
inc
mov
adc
xor
cmp
es
nop
push
push
shlb
mov
pop
in
mov
xor
mov
push
jns
in
and
pop
add
inc
pop
and
jecxz
out
cmp
jmp
es
shrl
inc
lock
xchg
xchg
mov
add
push
call
mov
mov
mov
jo
xchg
mov
ss
cmpsb
cmpsl
adc
nop
push
rcr
add
ds
or
rolb
pop
dec
inc
rcr
das
pop
sbbl
fidivrl
push
cwtl
js
cltd
lds
fs
das
icebp
mov
mov
inc
std
sti
add
and
stos
rcrb
cld
dec
jmp
leave
cmp
loope
insb
aaa
mov
adc
cmp
pop
or
out
xor
clc
push
add
push
stos
pop
jle
dec
subb
push
mov
lods
mov
enter
icebp
ljmp
or
loopne
mov
mov
sbb
bound
sti
fisttpl
sub
pusha
mov
jb
inc
xor
inc
or
repnz
cmpsl
daa
xchg
aaa
mov
imul
cli
push
xor
push
aad
ja
dec
andb
jo
add
rdpmc
repnz
cli
lods
adc
push
scas
adc
iret
push
jne
push
mov
clc
outsl
icebp
in
inc
sahf
inc
sub
gs
fstl
lock
adc
dec
sbb
ljmp
wrmsr
sbb
sub
les
mov
inc
and
ficompl
imul
sub
adc
push
add
pusha
out
jno
shl
push
decl
xchg
add
sbb
cmpsl
adcl
sub
insb
inc
dec
pop
xor
std
fucomi
scas
dec
gs
std
cli
rcrb
push
mov
push
push
bound
push
cmp
lock
jbe
mov
push
dec
and
test
pop
shlb
les
add
notb
cmpsb
add
ret
leave
adcb
idivb
clc
paddb
add
cmpsb
push
and
sbb
add
mov
dec
mov
flds
subb
add
and
xchg
pusha
jnp
iret
sbb
je
mov
cmc
daa
jmp
ss
jo
mov
rolb
pop
sbb
nop
dec
in
push
mov
mov
ja
inc
xchg
outsb
ss
dec
mov
mulps
pop
jecxz
clc
fbld
dec
pop
push
or
and
shlb
mov
mov
nop
jp
call
push
scas
adc
lret
or
jmp
and
push
add
jg
dec
dec
cs
in
mov
jg
rorb
mov
mov
adc
mov
rorb
mull
cmp
mov
adc
movsb
fmull
aam
add
and
shlb
xchg
add
inc
ds
nop
adcb
or
fsubs
loope
lock
andb
cmp
loope
cltd
or
sub
out
and
pop
icebp
dec
inc
scas
add
adc
push
push
fs
lods
mov
pop
testb
fcompl
fisubrs
xchg
and
inc
popa
mov
insb
and
orb
adc
rcrb
mov
xor
or
ja
and
mov
ret
shrl
mov
sub
fadd
pop
add
adc
lcall
pop
lea
and
cmp
aam
add
add
rcll
push
push
inc
and
inc
adc
cwtl
cmp
in
lods
xor
xor
mov
mov
mov
xchg
inc
js
jl
and
xor
jmp
popa
sarl
xor
mov
int3
shrb
or
add
push
and
aad
mov
sbb
push
push
add
mov
adc
sub
dec
and
jge
cs
ret
mov
add
mov
mov
test
les
and
sub
push
xchg
and
loop
ficoms
mov
imul
xchg
jge
cwtl
lcall
addb
inc
add
mov
and
xor
sbb
ss
loop
mov
es
bound
mov
mov
andb
mov
stos
mov
or
sarb
push
push
inc
bound
into
mov
cmp
mov
aam
sbb
mov
sarl
xchg
mov
jmp
inc
mov
mov
add
fnstsw
jle
add
popa
mov
push
jne
insb
and
sahf
pop
cs
inc
aas
fstpl
inc
jg
movsl
jle
xorps
sub
aam
aaa
loop
or
add
jo
or
les
mov
cli
mov
push
jle
inc
add
stos
or
sub
lods
dec
jbe
stos
test
das
mov
mov
jle
or
sbb
cwtl
xchg
addb
inc
out
sbb
cmp
jne
cwtl
pop
cmp
and
adc
mov
push
test
push
ror
dec
es
mov
adc
pop
fdivrl
mov
dec
add
or
decb
daa
jno
ja
shrl
sub
mov
adc
mov
pop
lret
movsl
add
stos
xchg
xchg
ja
and
pop
add
sbb
cs
fdivl
rorb
or
or
idivb
pop
pop
adc
push
push
push
dec
shll
addr16
insl
loope
inc
pop
or
out
mov
inc
jg
pop
jns
push
lret
xor
sub
add
sar
mov
fnstsw
ljmp
jbe
scas
sbb
enter
lea
add
aaa
ljmp
adc
cmp
addr16
in
sbb
xchg
xchg
das
nop
loope
dec
and
add
outsl
enter
or
arpl
cli
pop
call
outsb
fs
ret
dec
lcall
fldl
adc
sbb
cld
gs
add
popa
inc
add
mov
dec
and
incb
push
cmp
sarb
mov
sbb
sub
push
test
mov
inc
sbb
adc
neg
push
adc
cmp
out
mov
rcr
icebp
insl
stc
add
add
popa
and
xor
or
test
loope
push
push
imul
push
loopne
add
filds
inc
inc
push
stc
aaa
adc
dec
aas
inc
sbb
outsl
xchg
or
mov
rclb
inc
jle
nop
imul
icebp
in
mov
scas
or
sbb
and
push
aad
mov
leave
mov
dec
jns
and
dec
xor
sbb
mov
ret
jg
int3
inc
out
inc
in
sbb
scas
ret
mov
addb
nop
mov
mov
mov
icebp
incl
rclb
sbb
sub
insb
adc
push
lock
jl
jle
sbb
ja
cs
jno
loope
pop
cld
inc
loopne
dec
cmp
pop
call
jecxz
inc
jns
add
dec
pusha
roll
sbb
mov
das
add
enter
adc
sub
cmpsb
fcomps
push
lock
add
lock
rcll
push
add
outsl
inc
inc
mov
and
push
addb
rorb
cmp
filds
test
mov
out
sbb
inc
push
mov
ja
popf
push
daa
push
loopne
adc
jmp
sbb
jp
and
inc
fsubs
sahf
pop
movl
or
cmp
adc
or
lock
mov
pop
out
lea
xor
xchg
add
insb
loope
or
xor
adc
adcb
xlat
sub
lea
mov
sbb
ds
aas
sub
push
xchg
bound
pop
inc
fistpl
inc
popa
adc
das
je
jg
mov
sub
push
popa
call
fucompp
out
mov
sbb
mov
in
mov
popa
pop
scas
shll
fiaddl
sbbl
lods
sub
cmpsl
out
inc
mov
mov
enter
lds
add
bound
lea
jp
int3
call
push
cmpsl
sqrtps
cld
adcb
addr16
xor
fstps
mov
movsl
cs
adc
xchg
add
pop
adc
jns
mov
adc
out
cmp
shll
pushl
push
sbb
pop
dec
sbb
arpl
cli
jmp
dec
mov
and
adc
mov
mov
and
lods
cmp
sbb
icebp
add
xchg
xrelease
les
inc
add
dec
push
or
or
push
jae
daa
and
cs
sub
fimuls
bound
pop
push
add
inc
nop
or
fimuls
inc
icebp
sub
stos
fcomps
add
push
lcall
push
inc
mov
or
sbb
enter
rolb
and
cmc
out
rorb
push
movsl
cs
add
mov
add
dec
and
or
mov
cld
sub
or
bound
and
xchg
add
adc
test
mov
int3
adc
dec
stos
rolb
sbb
jp
andb
cmp
in
pushf
xchg
flds
clc
and
adc
push
cmp
or
xor
adc
fs
cld
scas
mov
adc
push
out
pop
pop
sub
mov
mov
push
xchg
test
sbb
mov
data16
mov
add
sub
add
test
lea
cmp
xchg
sbb
sub
adc
jnp
jb
je
dec
lds
loope
fldenv
icebp
sub
das
loopne
movsb
test
int3
jb
fisubs
sbb
aad
mov
addl
and
movb
shrl
lret
jmp
xchg
jle
adc
movl
call
out
or
sub
stos
insb
mov
int
subb
dec
inc
dec
mov
mov
push
ret
mov
push
ds
add
test
add
lret
push
sub
jecxz
stc
fmull
xor
test
mov
add
mov
test
rol
add
inc
pop
push
mov
push
and
je
or
notb
sub
pop
dec
movsb
adc
bswap
mov
dec
add
xor
sbb
arpl
mov
pop
cmp
les
adc
jno
lds
lock
repz
repz
mov
push
stos
add
pusha
xchg
sub
fwait
shl
mov
and
add
adc
cmp
sbb
sbb
js
sahf
in
fwait
push
mov
push
dec
les
leave
xchg
xchg
ret
outsl
in
mov
add
cmp
sub
ss
push
mov
push
movsb
cmp
add
fsubs
xchg
outsl
mov
adc
orl
mov
fcompl
xchg
je
clc
cltd
dec
sbb
pop
cli
jle
mov
adc
and
push
dec
scas
test
mov
pop
adc
fs
inc
lahf
loopne
jb
xor
sub
cld
stc
outsb
lea
icebp
mov
pop
lret
dec
sub
loop
out
lret
add
dec
pop
fisubrs
mov
push
push
mov
push
mov
decl
push
push
pop
cwtl
or
ret
mov
js
ret
lods
mov
loope
out
mov
outsl
mov
movsb
in
leave
inc
adc
jg
pop
lret
test
inc
xchg
add
or
andb
sbb
test
mov
outsb
loopne
xor
sti
je
sbb
rolb
pop
decl
negb
insl
pop
dec
stos
mov
push
daa
pop
cmc
fisttps
clc
ljmp
and
outsl
add
aaa
and
adc
lock
mov
push
dec
sbb
subl
out
dec
leave
mov
rorb
ss
hlt
and
in
push
inc
and
sbb
decl
xchg
push
xor
je
dec
mov
hlt
jne
scas
movsl
push
ret
sbb
jb
sub
inc
adc
jbe
sbb
movsl
sbb
int
inc
or
inc
sbb
add
testb
lock
or
dec
cmp
test
scas
jo
mov
dec
inc
icebp
push
and
push
add
mov
outsb
jge
rcrb
dec
aam
xor
add
cmp
xlat
mov
clc
scas
sub
or
pop
mov
sbbb
in
xchg
mov
add
adc
mov
fcmovnbe
lahf
jb
fbstp
push
jnp
outsb
sbb
mov
mov
mov
or
xchg
movsl
dec
inc
dec
scas
fcomps
ret
cld
xchg
mov
xchg
inc
push
jp
mov
cmp
andl
lods
aaa
test
or
xor
xor
mov
mov
ljmp
dec
test
add
mov
push
or
and
mov
add
sarb
sbb
mov
into
push
or
mov
pop
or
jg
js
cwtl
loope
lock
lret
inc
subb
add
jl
sub
fnstsw
sub
push
add
mov
insl
adc
inc
pushf
push
fwait
jmp
test
push
lock
out
popa
inc
adc
jmp
or
outsb
sbb
xor
imul
ret
push
or
sbb
addr16
fwait
cmpsb
clts
lock
xorb
ret
cmp
dec
rcr
jo
dec
push
sbb
inc
ja
mov
sub
add
mov
adc
pusha
or
clc
push
and
flds
sbb
icebp
mov
pop
or
rclb
mov
movsl
xchg
enter
rclb
add
mov
test
xor
das
ja
loopne
cld
add
popa
adc
jecxz
insb
inc
jmp
jg
shlb
imul
dec
adc
or
out
mov
inc
jl
test
es
adc
addr16
dec
inc
sbb
add
inc
das
lock
test
cltd
cli
stc
jmp
mov
int3
cmpsb
push
fldt
and
xor
rcpps
add
addr16
push
std
incb
lret
jb
xchg
sub
pop
mov
ljmp
stc
lods
mov
add
iret
push
add
sub
and
add
rorl
push
mov
mov
lods
cmp
ret
add
xchg
pop
or
add
ror
hlt
pop
lcall
dec
mov
cs
or
jae,pn
mov
push
cmp
lea
mov
outsl
jg
add
or
cmpsl
inc
jle
fisubrs
adc
mov
call
sahf
mov
xchg
iret
movsbl
in
jg
xor
loop
fistl
fsubp
mov
fistpll
add
xor
cmc
add
out
scas
adc
les
and
repnz
cwtl
inc
cld
das
adc
lock
cwtl
cmpb
jmp
add
arpl
jl
test
or
fucomp
push
je
or
mov
negb
or
mov
adc
inc
jge
adc
add
cld
sbb
les
xchg
inc
cmp
or
or
mov
push
inc
add
and
xchg
and
test
test
add
inc
test
push
and
and
fiadds
aaa
add
adc
and
inc
adc
in
fildll
or
xor
and
xor
or
and
cmpb
adc
add
or
fistps
and
inc
and
add
add
pop
sub
sbb
inc
inc
or
mov
adc
jae
adc
sbbb
push
call
test
lret
pop
mov
in
mov
and
adc
sub
xor
jae
es
inc
inc
and
mov
and
imul
mov
add
mov
mov
add
arpl
mov
xchg
xor
lods
insl
add
es
mov
loope
mov
inc
fildl
mov
imul
push
add
mov
scas
frstor
adc
push
rorb
sbb
fildl
cmp
inc
jb
ljmp
ss
in
in
push
insl
lods
test
adc
or
mov
mov
outsb
imul
cmpsl
adc
iret
add
shrb
mov
out
fnstenv
xlat
pop
imul
add
sbb
fidivrl
sbb
or
pop
jae
push
nop
aad
sbb
lods
rcl
insl
xchg
adc
pop
in
iret
cs
inc
mov
mov
adc
nop
mov
lods
lcall
lods
rorb
xchg
push
pop
jo
fbld
das
add
sub
test
xchg
adc
xor
fsubl
xor
das
sub
imul
sub
outsb
jnp
or
adc
adc
add
mov
push
cmp
xor
sbb
dec
pop
xchg
dec
pop
out
adc
mov
pop
pop
pushw
aam
dec
ret
iret
jl
int
mov
sub
enter
imul
push
or
mov
pop
popa
jns
frstor
or
out
int
das
jno
lods
xor
imul
faddl
out
movl
pop
in
scas
add
push
and
jb
add
cs
pop
pop
lahf
test
xor
inc
imul
fprem1
jae
sub
push
popa
sub
fwait
push
or
mov
lods
pusha
xchg
jp
inc
or
lds
cmp
outsb
test
add
cmp
or
int
push
nop
add
or
js
lods
xor
adc
cmp
adc
xor
addr16
and
lock
inc
imul
repnz
mov
push
dec
fwait
lret
test
mov
inc
xor
in
jecxz
and
xor
movsl
mov
sub
or
rcrl
imul
in
rcll
push
xlat
jl
test
add
inc
popf
push
and
dec
sbb
jne
insl
sarl
cmp
add
cld
in
jae
sbb
and
jl
test
push
mov
in
adc
aad
fbld
lret
pop
inc
cmp
ss
rcrb
lods
aam
inc
cmp
xchg
lds
cmpsb
js
ret
dec
push
and
pushl
dec
lea
loop
cmp
mov
test
and
cmp
xchg
xchg
adc
or
mov
dec
cli
adc
pop
and
cwtl
mov
add
adc
int
lcall
xchg
mov
add
pusha
xor
je
or
or
insl
ss
pop
daa
sbb
adc
lods
shlb
test
xor
adc
push
sub
mov
sbb
xchg
dec
fildll
and
imul
in
sub
or
scas
mov
mov
pusha
test
fwait
xor
pop
push
push
ljmp
lods
pop
sbb
pop
mov
cmp
mov
and
mov
imul
adc
sub
test
ds
test
scas
mov
adc
jecxz
or
lods
xor
insl
pop
fnstenv
lods
mov
push
in
test
inc
push
sarb
inc
add
fwait
add
or
rol
imul
mov
push
push
dec
insl
out
imul
jb
xchg
xor
and
and
dec
mov
mov
push
or
or
cmp
in
push
xchg
imul
or
sbb
sub
je
or
lock
mov
xor
and
and
arpl
aam
add
adc
or
push
inc
add
adc
sbb
adc
mov
mov
mov
out
sub
and
adc
add
hlt
nop
mov
repz
and
shll
pop
je
adc
popf
xor
lret
in
jmp
loopne
lcall
les
dec
lods
add
test
mov
int
pop
ss
jae
cld
add
cmpsl
sub
pop
add
test
inc
xlat
or
sub
cmp
mov
pusha
loopne
ss
pop
mov
mov
pop
xor
repnz
inc
add
adc
lcall
mov
pushf
hlt
xchg
imul
les
add
adc
int3
and
mov
add
js
inc
ret
fs
mov
jae
imul
mov
jno
cli
and
lcall
pop
pop
cmpsb
int
lock
rorl
or
data16
adc
scas
pushf
cmp
fsubrs
das
cmp
inc
and
adc
push
and
shl
jb
or
pop
pop
int
adcb
dec
push
or
lds
subb
pushw
int
xor
rolb
pop
inc
add
or
push
dec
xchg
inc
nop
cmpsb
adc
pop
adc
add
pop
add
jns
push
push
or
jno
daa
adc
lcall
xor
xorb
pusha
bound
pop
subl
or
xlat
or
call
sbb
lahf
mov
pusha
add
xchg
pop
es
add
push
xchg
cmp
push
outsb
ficoms
test
out
scas
popf
data16
aam
dec
cwtl
dec
mov
lcall
push
cmc
dec
loop
addr16
or
mov
fcomps
sbb
push
sub
mov
mov
mov
sbb
adc
ficoml
clc
or
mov
cld
adc
lods
cltd
pop
scas
jne
out
pop
sub
sbb
ret
clc
mov
lret
xor
jae
sub
pop
sbb
push
test
cmp
int
test
test
imul
sbb
adcl
xor
inc
and
lcall
mov
or
xchg
int
test
rcrb
add
popf
jo
or
dec
movsb
inc
jo
push
mov
and
sub
insl
loope
xchg
pop
mov
or
cmp
xchg
xor
mov
fcomi
nop
xor
push
jno
dec
pop
or
mov
add
test
xlat
cmp
push
xor
xchg
add
je
addr16
scas
xorb
or
cs
xchg
ljmp
push
jo
xlat
xchg
adc
icebp
test
mov
loope
adc
push
jmp
leave
xorl
fiaddl
mov
mov
adc
in
cmc
push
in
xchg
pop
cs
lahf
cmpsl
dec
int
in
test
sub
das
xchg
loope
loop
pop
imul
inc
add
in
mov
push
outsb
gs
rcl
adc
xor
mov
add
inc
add
fwait
adc
adc
sbb
push
and
push
std
fs
inc
jge
addr16
enter
or
push
xchg
inc
add
xchg
push
mov
insl
adc
inc
add
or
xor
and
dec
pop
mov
pop
mov
xor
scas
imul
cmp
fwait
xor
or
aam
add
jbe
pop
mov
xchg
cmc
adc
pushf
ret
ret
mov
call
xor
xor
push
cmp
mov
call
call
das
sbb
inc
ss
xor
mov
mov
divl
imul
dec
scas
mov
aad
aaa
xchg
sbb
pushf
stos
or
fcmovbe
inc
pop
add
mov
adc
sbb
and
mov
sarl
cmc
adc
cmp
lods
jae
mov
mov
adc
and
sbb
jo
pushf
pushl
xor
inc
std
add
lgdtl
cs
sbb
imul
xor
test
scas
dec
inc
add
jne
adc
push
sar
sub
adc
enter
icebp
sub
pushl
mov
es
inc
sbb
pushf
and
mov
add
pop
cmp
ret
inc
add
add
xchg
mov
cmp
push
lcall
in
movsb
dec
xchg
lret
adc
push
mov
push
mov
les
shrb
mov
in
call
adc
add
pop
pop
loop
add
mov
cmovs
ljmp
xchg
movsb
push
xlat
and
aaa
insb
mov
ret
int
hlt
fists
sub
push
adc
pop
dec
sbb
mov
loopne
fidivrl
pop
xchg
inc
dec
cmp
decl
sar
sbb
out
in
pop
or
das
add
xor
and
fs
scas
inc
notb
imul
lock
pop
jg
mull
and
pop
add
rorb
ljmp
dec
syscall
sbb
add
mov
xchg
into
cmpsb
adc
lret
mov
adc
adc
mov
pushl
test
push
rcrb
jae
imul
fidivrl
inc
lret
inc
sub
push
loope
std
sub
or
mov
pop
shlb
sub
cmpsb
ljmp
add
in
push
ror
mov
cmpsl
mov
movsl
outsb
or
filds
frstor
cmp
xor
loop
add
xchg
lds
cmc
clc
and
inc
loopne
imul
jg
dec
pop
and
jne
mov
dec
push
gs
sbb
sub
int3
adc
push
sbb
sub
mov
xchg
stos
jnp
push
scas
push
push
mov
adc
ficoml
mov
sti
filds
mov
popf
jle
mov
sub
lret
into
sub
push
cmp
test
out
add
gs
scas
pushf
jecxz
pop
xor
mov
gs
add
inc
cltd
xchg
jecxz
ljmp
sub
loope
xchg
add
xor
shll
or
add
pop
adcb
das
aad
movsb
cmp
push
lods
loop
pop
ja
sbb
subb
in
mov
ja
call
xchg
pop
jns
das
cld
or
repz
dec
cmp
movsb
mov
in
push
sti
xchg
int3
adc
inc
push
repz
andl
ret
in
add
adc
or
test
mov
in
in
ljmp
mov
add
pusha
add
shl
mov
ficoms
es
cmp
clc
mov
data16
or
xchg
es
fldl
mov
mov
andl
mov
dec
orl
or
insb
ret
test
pop
cmp
jg
pop
add
loope
push
sti
inc
dec
push
pop
test
ret
testb
orb
ror
pop
cmpsl
cs
outsl
mov
and
and
cli
loopne
mov
mov
arpl
jo
int3
adc
outsb
mov
or
adc
add
pop
ds
fisttpl
mov
dec
fnsave
adc
out
add
out
js
jecxz
mov
pop
and
and
dec
leave
ja
cli
fbld
in
fdivrl
lods
mov
mov
adc
or
or
mov
outsl
fldt
lcall
add
cmpl
mov
lds
pop
and
sbb
sbb
lret
cld
lods
jnp
mov
jns
mov
push
add
adc
outsb
les
jbe
adc
fisttpl
or
shlb
cwtl
roll
movsb
fisubrs
outsb
add
mov
mulb
call
outsb
sub
jbe
push
cmp
sub
cld
and
sub
sub
mov
fbstp
aad
daa
cmp
int
adc
fdivl
or
les
stos
rorb
sbb
inc
sub
or
mov
adc
sbb
xlat
cpuid
andnps
insb
mov
sbb
pop
jecxz
jno
cwtl
cmp
ss
out
pop
add
adc
and
jp
and
mov
xchg
cld
sbb
icebp
dec
mov
lock
imul
jge
outsl
frstpm(287
inc
and
jo
scas
dec
pop
in
hlt
push
pop
pop
les
push
jne
add
push
sub
fisttpl
loope
adc
xor
enter
pop
fidivrs
call
add
aam
inc
push
push
pop
jae
insb
jge
int
cmp
cld
lods
imul
and
and
not
pop
lods
pop
xchg
cmp
std
mov
sbb
outsl
jg
dec
inc
pop
or
adc
sahf
sub
enter
xchg
xchg
add
xchg
cmc
inc
jae
and
into
out
sbb
mov
stos
call
push
mov
and
or
shl
xor
std
mov
cmp
push
sbb
jae
cmp
sbb
jecxz
pop
jg
lods
sub
shlb
lea
shlb
ljmp
es
or
mov
mov
cs
movsl
fs
mov
mov
mov
sbb
lret
pop
cmc
mov
cmp
in
sub
data16
enter
adc
xor
insl
mov
jmp
xor
sbb
hlt
dec
or
lea
adc
xchg
mov
insb
mov
add
jecxz
and
lods
loope
mov
sarb
loope
mov
test
xor
ja
inc
mov
adc
addb
xor
shll
push
hlt
or
test
out
fimull
xor
popa
jmp
popa
mov
popa
int3
addl
dec
sub
jg
inc
or
insl
scas
mov
pop
adc
or
or
pop
jle
sub
mov
lock
outsl
je
or
sarb
pushf
sub
adcb
roll
ret
mov
stc
ds
icebp
sub
xor
jae
xor
sar
or
pop
insl
shll
lea
push
or
stos
clc
aaa
outsb
cmpsl
sbb
mov
test
repz
ficoms
testb
outsl
mov
decl
fbstp
xor
in
mov
or
mov
adc
add
sub
pop
sbb
clc
pop
std
add
fiadds
leave
mov
outsb
fs
adc
icebp
jo,pn
xchg
loop
repnz
or
sti
add
or
push
xchg
inc
divl
sbb
into
adc
rcrl
lods
adc
test
jne
sub
jg
push
jmp
xor
sbbl
adc
fsubrp
push
rcll
ret
test
mov
jg
icebp
sysexit
inc
sti
or
xlat
sbbb
dec
sbb
or
pop
or
fadd
mov
aas
repnz
repnz
pop
lcall
stos
aam
std
test
and
mov
fsubp
mov
xchg
stos
push
fcmovnu
jecxz
mov
and
ret
fistpll
push
sbb
mov
xor
mov
test
into
andb
inc
xor
mov
push
push
pusha
push
dec
jmp
pushf
cmpsb
scas
push
pop
test
rorb
cmp
pop
jmp
clc
or
lret
cltd
cmpsl
xor
inc
mov
xor
add
enter
mov
mov
mov
mov
push
in
mov
mov
adc
fxch
mov
mov
inc
loope
jne
shl
nop
mov
gs
or
cmp
sub
cwtl
loope
fidivrl
stos
or
fisttps
pushf
hlt
dec
pop
or
or
lods
adc
pop
fdivs
cmp
jmp
fbld
jb
jle
cld
mov
dec
mov
in
jmp
dec
cmpsb
cmp
stos
xchg
or
push
jbe
fdivs
sub
js
lret
fbld
pop
or
pusha
cld
push
popf
sub
movsl
ret
pop
roll
rol
ljmp
mov
sub
test
sti
inc
add
add
inc
leave
nop
fcoml
mov
loop
shlb
movb
pop
xchg
or
mov
stos
loopne
push
inc
pop
xor
and
or
daa
ja
xor
sub
ret
mov
into
cmc
mov
xchg
clc
out
inc
popa
clc
add
shlb
fimull
inc
leave
fildl
lock
lock
mov
out
jp
aaa
cld
mov
subb
ficompl
jg
clc
ljmp
mov
cmp
out
outsl
lock
mov
pop
dec
push
fs
push
xor
push
mov
ljmp
popf
inc
cmpb
cli
mov
mov
cmp
push
jecxz
pop
pop
jecxz
inc
adc
pop
sbb
inc
push
cwtl
jle
out
push
and
stos
dec
mov
push
inc
jge
arpl
jecxz
push
lods
hlt
decl
mov
jge
cmp
je
fdivs
mov
inc
mov
iret
sbb
xchg
mov
and
push
je
sbb
movsb
mov
adc
repnz
idivb
inc
sub
mov
aad
cltd
jg
mov
shlb
sub
dec
ljmp
in
jg
inc
aas
push
or
mov
mov
dec
icebp
nop
add
rcrb
jmp
and
popa
fcoms
rorb
xchg
orl
decl
adc
imul
add
add
lock
xor
jb
lods
pop
push
jno
xchg
mov
xchg
and
jnp
outsl
mov
mov
jle
mov
and
mov
ret
push
addl
cltd
or
xor
adc
shll
test
adc
add
lahf
xchg
cmc
mov
test
pop
jb
es
sub
clc
aad
imul
in
outsl
cmpl
xor
add
jbe
jg
pop
pushf
push
pop
xor
pop
push
pop
mov
icebp
cli
pop
cmp
and
inc
add
daa
and
test
xchg
sbb
sbb
and
andl
arpl
adc
test
es
orl
xchg
and
sbb
lds
jae
icebp
xchg
fwait
mov
and
xchg
sahf
ret
repz
or
inc
push
xchg
cs
scas
pop
mov
push
xlat
push
pop
rcrl
ja
fdivrp
dec
lahf
shlb
jne
cmp
daa
push
incb
mul
xchg
push
lds
mov
and
cmp
inc
jg
nop
sub
pop
out
jl
xorb
fldl
jmp
add
add
mov
std
test
sub
pushl
in
movsl
mov
ret
lock
sub
fisttpll
and
cmp
pop
fsts
clc
jg
xchg
jbe
xor
dec
shlb
pop
stc
mov
inc
xor
mov
cltd
clc
or
lcall
outsb
mov
aad
jmp
cmp
mov
dec
xor
sar
je
in
jae
add
push
ljmp
es
leave
insl
movsb
mov
lock
dec
std
lods
fcmovnbe
sub
cmp
add
xorl
aad
cs
xchg
add
mov
bswap
aad
dec
pop
fmull
sub
add
icebp
sbb
inc
loop
dec
jae
data16
pop
call
ret
ret
mov
bound
pop
push
cmp
lret
push
pop
mov
adc
sub
ror
mov
sub
das
nop
sahf
add
ret
mov
jnp
fisttpl
xchg
into
int
mov
int3
mov
fistpl
push
lds
ds
iret
and
cmp
andl
jne
sbbb
test
pop
outsb
lods
lods
adc
stc
sbb
imul
lcall
pusha
pusha
insl
stc
or
mov
call
in
ret
fcmovnu
jbe
jb
lea
push
push
das
testb
push
cmpsl
and
aaa
add
mov
adc
es
cmp
jo
in
filds
bound
cmpsb
mov
aaa
mov
popa
pusha
loope
clc
add
mov
mov
jno
jmp
lods
es
out
cmp
push
ret
cmp
mov
xchg
aad
xchg
dec
fadds
mov
outsl
inc
sbb
adc
imul
xor
movsb
ret
cmp
mov
mov
ss
les
mov
pop
js
sbb
mov
repnz
xor
and
pushl
sbb
lret
cmp
and
inc
adc
cmp
cmp
inc
adc
leave
dec
mov
lcall
insb
jl
fnsave
sub
stos
mov
mov
fdiv
mov
and
ss
movsb
stc
mov
rolb
movsl
mov
mov
or
dec
in
test
hlt
roll
out
cwtl
imul
mov
inc
jo
rorb
in
inc
add
inc
cmp
loope
pop
sub
xchg
fisttps
addr16
loope
std
sar
mov
fnsave
sub
std
stc
js
cwtl
data16
cwtl
mov
test
das
cld
pop
movsl
push
inc
sbb
mov
dec
xor
clc
or
outsl
mov
jne
mov
dec
ret
in
mul
push
jecxz
loope
add
mov
cmc
xor
pop
fcmovnb
lods
adcb
inc
sarl
out
negl
mov
fmull
mov
std
push
xor
test
outsl
sub
mov
stc
ljmp
add
das
add
xor
out
mov
xchg
or
aas
sub
in
and
and
data16
adc
nop
cmpsl
jns
pop
pop
incl
jne
call
mov
mov
out
lcall
mov
pop
jmp
popa
adc
lods
push
jmp
push
dec
mov
insb
or
scas
sub
or
fcmovbe
mov
ficoms
xor
and
sbb
dec
outsl
jp
aad
adc
sub
inc
popf
test
insb
sub
ret
mov
or
push
or
cmc
or
stos
das
xor
cmp
mov
lods
sti
pop
xor
mov
fdivl
es
jg
repnz
mov
push
sti
adc
and
iret
push
mov
adc
fistpll
imul
pop
adc
loopne
dec
js
push
xchg
mov
inc
sti
xor
adc
adc
ja
js
clc
adc
jbe
xchg
jge
mov
cmc
mov
out
aad
sub
mov
mov
xchg
sub
or
mov
fiaddl
jb
dec
sbb
test
xchg
shll
mov
xchg
jae
adc
loope
adc
sahf
jge
mov
mov
enter
inc
sbb
mov
cmp
lea
cmp
dec
je
mov
shl
fists
repnz
loopnew
sub
xchg
fsubrl
imul
nop
pusha
sbb
and
cmc
pushl
stos
andb
adc
popf
shll
pop
nop
sub
sarl
stc
xchg
lods
add
push
sub
jb
jbe
lods
jg
pop
rcrb
lods
out
ss
clc
jg
xchg
enter
lods
movsl
fbstp
add
xchg
or
bound
aad
js
lods
mov
lock
cmc
shr
mov
paddq
dec
cli
into
fistpl
aad
inc
jmp
inc
or
hlt
divb
stc
xchg
sub
inc
xchg
fsubl
mov
nop
icebp
outsl
mov
aas
adc
lock
inc
mov
cwtl
xchg
cs
outsb
std
xchg
mov
xor
in
fisubl
fcompl
aam
cmp
popf
lds
loope
pop
ss
mov
jnp
insb
or
adc
lock
or
mov
inc
cmpsb
add
stc
je
jnp
lea
add
push
xchg
xchg
pop
mov
and
lcall
push
pop
cli
dec
push
and
repz
dec
push
js
xchg
xchg
sbb
std
or
inc
pop
and
cs
cld
jmp
testb
lret
dec
mov
fwait
test
imul
les
xchg
xor
sarl
and
lea
inc
jmp
outsl
jno
add
push
jg
xchg
mov
icebp
dec
mov
pop
xor
dec
sbb
dec
jmp
mov
adc
jl
test
xchg
movsl
lahf
mov
pop
xchg
push
in
pop
nop
sbb
jle
add
add
imul
not
jecxz
sarl
notl
in
lods
cmpsl
es
xor
xor
mov
das
pop
clc
add
mov
call
loope
inc
lds
jg
test
pop
push
cmp
aad
outsl
sbb
call
mov
adc
sbbb
movsb
out
loop
push
cmp
or
scas
xchg
ss
out
lods
call
roll
and
mov
add
jnp
mov
stos
in
clc
pop
mov
popf
repz
add
cmp
mov
enter
xor
cs
mov
push
jp
lret
lret
arpl
lea
xor
push
test
iret
inc
cli
sar
out
popa
or
lahf
sbb
orl
cmp
jg
sarl
add
mov
lods
adc
mov
pusha
push
insl
mov
inc
and
loopne
sbb
adc
ud0
aaa
inc
pusha
adc
mov
mov
push
push
sub
ds
pop
mov
pop
mov
shlb
ja
aam
pop
and
mov
ud1
ljmp
sub
lcall
sub
orb
nop
dec
mov
daa
ret
mov
xor
fldt
mov
mov
js
inc
add
rcrl
inc
jno
lock
std
lea
or
sub
fnstcw
gs
add
cli
push
fdivrl
shr
imull
push
xchg
fimull
mov
icebp
fdivr
outsl
and
ss
xor
jecxz
sub
loopne
mov
adc
mov
mov
addb
testb
jle
fmul
rcl
pusha
mov
iret
dec
or
inc
cmp
mov
ret
or
xor
cmc
pop
mov
icebp
dec
cmp
mov
xor
nop
in
in
shlb
push
xor
and
loope
adc
jmp
test
inc
mov
mov
popa
gs
loope
push
call
in
and
xchg
jno
or
mov
cltd
hlt
jg
stos
mov
je
add
adc
jle
clc
in
test
xchg
push
test
pop
add
scas
mov
cmpsb
pop
jmp
pop
mov
daa
add
mov
push
test
mov
or
dec
cmc
fdivrs
ficoms
add
mov
add
cmp
cld
push
cmp
sub
bound
jns
xorb
mov
xchg
jno
out
jp
incl
jbe
popa
scas
pop
add
popa
xor
enter
decl
sub
enter
sub
jae
jmp
mov
push
aaa
xor
adc
pop
loop,pn
cmp
sub
sub
inc
adc
dec
js
dec
mov
mov
cmpsl
xchg
rorl
sub
push
pop
stos
dec
add
mov
out
pop
mov
aaa
add
or
mov
inc
int3
jmp
xor
mov
jnp
mov
scas
xor
out
dec
xchg
stos
mov
lods
lcall
or
add
popl
ljmp
lds
ret
je
test
add
cli
fstp
jmp
lds
sbb
mov
xor
inc
pop
mov
aaa
jns
testb
lods
dec
or
fstpt
pop
test
cwtl
into
pop
sbb
fcomps
pop
sahf
mov
xor
adc
decl
sbb
pop
orl
loope
add
adc
ja
ljmp
jmp
add
test
mov
scas
sub
int
std
ret
loopne
jo
mov
sub
xchg
int
mov
ret
insl
sub
repnz
insb
into
pop
cs
mov
cli
xchg
lahf
incb
callw
jb
ret
mov
mov
aas
pusha
jne
data16
loopne
fdivs
mov
sbb
lahf
dec
movsb
mov
int3
fscale
aaa
incl
mov
xor
adc
idivl
or
push
cmc
sub
pop
loop
das
mov
in
fstpt
jno
cmpsl
stos
stos
push
repz
mov
decl
mov
jno
test
xor
sub
jno
sub
in
negl
aam
std
int3
dec
lea
imul
jl
out
movsb
lods
mov
roll
btc
cmp
mov
cld
lods
mov
adc
push
mov
push
mov
or
dec
mov
cbtw
mov
das
mov
push
mov
push
ds
lods
out
add
inc
inc
pop
mov
test
outsb
fdivrl
stos
fmuls
das
mov
push
xchg
loopne
adc
mov
sub
ljmp
std
data16
add
add
xor
int
and
in
xchg
sub
cmp
cmpsb
cmpsl
ror
lahf
lods
adc
mov
test
lret
popa
add
xchg
sahf
sbbl
or
in
fistps
sub
mov
hlt
insb
cwtl
mov
jne
movsb
adc
in
bound
adc
ret
pop
sbbb
push
and
xor
sub
test
mov
inc
pusha
dec
mov
stc
fwait
enter
je
pop
pop
sub
arpl
scas
vxorps
push
cmp
xchg
outsb
mov
clc
push
mov
push
test
sub
sub
test
xchg
gs
mov
in
lahf
pop
test
outsb
push
outsl
loop
push
out
sub
es
ret
or
cli
jo
or
fbld
mov
mov
je
sahf
mov
mov
in
nop
mov
pop
fwait
or
adc
sub
mov
sub
add
xor
stos
les
imul
std
push
fldcw
das
mov
xchg
or
push
lahf
out
in
stos
jmp
push
inc
aaa
lret
mov
loope
mov
jp
lock
sbb
in
jge
jp
and
sub
dec
pop
out
rorl
mov
test
pop
pusha
cmp
lret
into
add
mov
inc
ret
in
incb
out
xchg
and
int
icebp
jg
mov
cwtl
inc
in
lods
sbb
or
mov
xchg
pop
sbb
movsl
iret
ds
cmp
cmp
pop
cmpb
push
or
jg
icebp
lret
int
and
lds
sub
push
jo
jecxz
cli
in
xchg
sti
xchg
loope
jg
outsb
shlb
lods
inc
out
or
xchg
clc
dec
xor
pop
orl
jg
lea
cld
test
push
nop
xchg
inc
mov
or
in
outsl
xchg
call
dec
adc
inc
xchg
add
dec
outsb
test
push
les
jne
lret
std
addb
xor
fmulp
mov
mov
jo
daa
adc
inc
add
dec
pusha
jmp
scas
adc
push
cmp
jle
add
jnp
or
je
jbe
incl
inc
dec
jb
sub
sub
incl
push
adc
dec
aam
cmp
bound
and
scas
sbb
cmp
push
imul
or
fdivrp
test
in
fwait
inc
mov
cld
or
movsl
lods
out
push
pop
clc
das
shlb
jge
xchg
aas
sbb
outsb
pop
ja
shrb
or
push
sub
jg
mov
out
jl
clc
into
and
cmpsb
gs
mov
mov
lods
and
dec
cld
cmpsl
daa
lea
pop
inc
das
or
cmpsl
mov
pop
outsb
fstpl
xchg
dec
adc
stc
and
pop
mov
test
stos
adc
xor
mov
adc
xor
mov
and
repnz
xchg
cmp
test
cmp
sbb
sbb
mov
mov
arpl
jmp
adc
sub
fisubl
adc
adc
enter
xor
add
and
cltd
aas
call
shrl
push
sub
faddl
mov
fs
mov
stos
gs
xchg
dec
aad
bound
sbb
dec
push
mov
mov
out
lea
xor
push
add
fcmovb
loope
push
xchg
ss
shrb
ds
fs
ljmp
mov
aam
int
adc
repz
adc
sarl
inc
mov
xchg
push
add
adc
jge
push
mov
add
dec
dec
aas
stc
loop
adc
movb
insb
mov
nop
xchg
lsl
stos
sti
xchg
mov
pop
inc
push
hlt
jae
out
pop
mov
pop
xchg
dec
or
in
mov
pop
mov
xor
sbb
shll
push
incb
daa
inc
add
mov
outsb
inc
fildl
stos
repnz
mov
or
xbegin
add
jecxz
pop
add
dec
mov
jo
call
popa
fcmovnb
cmpsb
xor
jge
or
mov
sbb
jmp
jb
shrl
mov
int3
add
in
push
sbb
mov
fadds
push
mov
push
jecxz
in
iret
add
fidivrl
les
sti
ja
add
ss
mov
jmp
nop
push
addl
pop
cli
lret
push
xchg
ret
mov
lret
popf
mov
sbb
loopne
in
rorb
les
adc
sub
sahf
in
jg
mov
fidivrl
and
cmpsl
pop
js
mov
add
dec
outsb
adc
and
lea
inc
sarl
insb
adc
std
cli
sbb
mov
push
fildl
inc
push
dec
sbb
xchg
repz
mov
mov
sub
repnz
cld
jb
mov
push
cmp
cmp
pop
pop
sub
pop
mov
dec
push
jg
jmp
jp
add
ret
popf
mov
pop
andl
push
mov
aas
xchg
cmp
popf
pop
xchg
lret
push
sbb
repz
fidivs
push
and
pop
lcall
and
shr
mov
shlb
pusha
subb
or
mov
insl
jmp
and
mov
rcrb
pop
jg
inc
fwait
nop
sub
insl
out
mov
cmp
neg
sbb
jmp
hlt
std
push
outsl
pop
and
loop
mov
pushl
inc
push
adc
aad
mov
jl
daa
mov
push
inc
push
dec
sub
and
insb
incl
mov
je
mov
test
pop
xlat
or
cs
sbb
push
push
inc
fwait
nop
leave
cmc
clc
jg
out
cmp
mov
les
sub
or
inc
pop
pop
mov
outsb
xchg
jnp
nop
and
pop
ret
mov
cmp
je
mov
xor
mov
call
lock
or
fsubrl
aaa
add
int3
dec
in
ret
in
or
xchg
mov
or
sarb
push
scas
dec
rolb
stos
or
xchg
movsl
and
in
loope
push
lret
cmc
gs
push
adc
cld
push
jp
mov
pop
cmp
iret
call
outsl
sub
push
mov
sub
sub
or
sbb
mov
pop
addb
leave
inc
xchg
loopne
mov
lcall
pop
out
xor
addb
push
fstpl
outsl
roll
add
mov
test
xor
inc
jp
mov
mov
inc
sarl
mov
aam
pop
movsb
in
inc
out
jmp
ret
test
cmp
test
mov
push
adc
arpl
xchg
mov
mov
out
sti
push
loopne
lock
cmp
cmc
not
pusha
sbb
stc
ljmp
loop
fs
push
fs
popf
iret
dec
pop
cmp
push
aaa
rol
inc
lea
outsl
aam
sbb
and
cmp
pop
pop
dec
inc
les
inc
icebp
outsb
test
insl
pop
sarb
sahf
addr16
js
inc
or
fucomip
mov
daa
push
adc
es
dec
ljmp
jl
xchg
adc
sub
std
mov
add
vmovupd
cmpsb
adc
jmp
je
jecxz
sbb
or
fdivr
mov
incl
mov
inc
shr
cmp
fcomip
mov
pop
xor
stc
lahf
mov
fisttpl
shl
mov
inc
mov
ja
aam
sbb
sbb
loope
lea
outsl
pop
sub
imul
lds
inc
call
out
add
and
xor
out
ret
nop
call
xor
add
cli
movb
test
xor
js
jbe
js
mov
mov
stos
cmp
lret
mov
add
outsb
int3
fbld
push
jl
outsb
dec
push
or
movsb
out
add
ljmp
sub
mov
movsb
fadd
aam
mov
inc
mov
decl
xor
or
stos
jo
shrl
sub
mov
cmp
clc
add
cs
sbb
mov
addr16
in
out
out
jl
xchg
loope
incl
push
test
and
test
and
in
pop
js
ja
cmpsb
pop
xor
je
sarb
arpl
decl
lea
ss
jnp
sbb
sub
jg
push
mov
movsb
call
mov
das
in
mov
dec
les
jnp
mov
sbb
inc
xor
pop
push
mov
jno
sub
faddp
jnp
das
aad
sub
inc
mov
xor
adc
sbb
arpl
in
aas
leave
int3
cs
int
pop
add
loop
aad
lods
popa
or
cmp
rcll
inc
dec
pop
push
sub
mov
jo
fbld
clc
decl
mov
nop
mov
inc
pushf
mov
or
push
mov
mov
push
repnz
pop
roll
dec
sbb
lea
sbb
lcall
xchg
mov
sub
and
mov
inc
imul
jp
jmp
sub
test
pop
inc
repz
sbb
mov
jg
das
xchg
mov
clc
aaa
ja
pop
clc
xchg
adcb
iret
or
aam
cltd
push
sbbb
mov
sub
filds
flds
aaa
mov
xchg
sbb
jge
and
mov
inc
add
sbb
dec
or
xchg
cmp
xchg
and
jecxz
aaa
adc
mov
enter
add
je
ljmp
fstl
aad
add
lods
rol
mov
in
sbb
ljmp
xchg
xchg
sbb
add
mov
out
inc
jp
bound
mov
int3
xchg
nop
sub
or
dec
push
push
cld
xchg
movsb
or
adc
testb
clc
fldt
jmp
and
orb
mov
inc
mov
out
and
lock
push
cwtl
jo
imul
test
lret
adc
or
aaa
push
jle
cli
dec
popa
jge
mov
jg
xchg
fildl
mov
inc
mov
scas
and
push
in
mov
mov
jo
subl
or
dec
sub
add
jb
push
stos
cmp
imul
mov
jno
or
xchg
adc
icebp
or
test
sub
pop
dec
popf
movsb
push
sub
sbb
sub
andb
push
or
orb
movsl
das
jle
pop
push
in
pushf
sub
mov
fmuls
push
inc
cmp
sbb
call
mov
add
xlat
xchg
pop
xchg
pop
xchg
imul
sahf
cltd
enter
ljmp
xchg
cwtl
adc
daa
inc
filds
clc
ficompl
or
popf
sahf
movsb
cltd
out
dec
out
inc
xchg
lcall
inc
dec
adc
add
and
sub
mov
sbb
lds
lret
mov
adcl
clc
jbe,pn
jmp
adc
xchg
mov
mov
jnp
es
push
inc
loopne
aad
mov
mov
clc
iret
mov
sbb
rcl
jmp
ds
aaa
aam
xlat
sbb
outsl
pop
icebp
push
ljmp
mov
xchg
orl
and
in
xor
ror
test
or
aas
adc
mov
loope
sbb
mov
xchg
sbb
test
in
push
sub
mov
jmp
sahf
leave
insb
mov
stc
ja
dec
sub
int
mov
fimull
fdivrs
roll
or
in
sub
or
add
stos
push
js
jle
jb
fldenv
bnd
sub
imul
ret
mov
mov
pop
sbbb
mov
and
and
jmp
fnstcw
pop
ss
stos
pop
sbb
xchg
sub
mov
xor
or
push
add
sub
adc
push
ret
mov
push
das
push
adc
adc
mov
sti
shrb
mov
xchg
or
jg
push
or
lahf
push
in
xchg
pop
sub
gs
lods
test
jo
mov
push
inc
enter
js
adc
popa
add
and
iret
jo
loope
sub
cmpb
cmp
dec
daa
daa
jle
adc
stc
sub
mov
or
shl
jge
repnz
jae
daa
hlt
sbbl
jns
push
sbb
mov
lds
add
mov
lock
ja
fdivrp
hlt
sbb
push
push
repz
mov
test
das
and
xor
sbb
adc
mov
mov
ret
aaa
leave
and
jae
pop
and
lret
test
sbb
or
ja
and
or
sub
mov
pop
ljmp
pusha
sbb
fldt
push
pusha
mov
dec
inc
das
fisubrl
fdivr
enter
adc
test
lcall
dec
sub
cmp
add
outsl
dec
js
push
xor
insb
pop
xlat
add
gs
ret
je
cmc
movb
adc
mov
sbb
lock
add
or
xchg
jmp
dec
subb
push
fidivs
test
mov
sbb
mov
std
mov
dec
cmp
pop
xlat
pop
sub
sarl
mov
mov
ret
or
js
fcom
leave
inc
cltd
mov
bound
rcll
addr16
pusha
movsb
pop
icebp
adc
sbbb
out
jns
inc
repz
adc
icebp
xchg
mov
xchg
rol
add
jecxz
push
cltd
dec
mov
or
gs
hlt
out
lret
stos
fbstp
pop
push
xor
push
iret
loope
std
inc
test
cld
and
into
data16
das
icebp
ja
xor
dec
mov
jb
fistl
xchg
xor
ret
rorb
mov
pop
cmp
outsl
std
lea
dec
pavgw
mov
aas
iret
cmp
xor
or
mov
xchg
enter
rcll
xlat
xor
jbe
pop
out
push
testl
mov
xchg
xchg
cmc
outsb
std
inc
inc
popa
mov
sub
cmp
repnz
adc
xchg
das
adc
adc
mov
sti
dec
movsl
or
ljmp
int3
scas
movsl
in
pop
jle
dec
push
mov
cmp
gs
or
aaa
clc
das
hlt
jle
or
adc
pushf
add
fcomps
mov
xchg
in
cmp
int3
loopne
imul
rcr
xor
mov
pop
sub
hlt
pop
mov
mov
push
adc
adc
fildl
sahf
iret
add
dec
rcrl
mov
rcrb
mov
mov
push
mov
addr16
inc
rep
sbbl
adc
mov
call
mov
cmc
inc
fstpt
insb
pushf
fisubrs
jae
outsb
cld
push
push
sbb
aam
sahf
add
call
sub
push
jb
sbb
push
ss
lods
je
and
hlt
dec
jae
adc
rorl
adc
sub
add
icebp
fmull
add
sbb
mov
aam
fidivrl
xchg
movb
imul
dec
or
jno
mov
ret
jp
or
mov
and
adc
push
sub
outsl
adc
call
scas
les
adc
pop
insl
pop
popl
mov
pop
xor
fcoml
pop
loop
andb
sbb
jmp
outsb
mov
jmp
sub
lret
fdiv
push
dec
or
lcall
mov
and
push
loopne
push
rep
icebp
inc
ds
loop
call
nop
lods
cmp
pop
pop
mov
stos
stos
std
rorb
mov
or
mov
add
mov
mov
dec
outsl
incb
or
dec
xchg
adc
dec
mov
notl
mov
push
ljmp
xlat
jbe
push
aad
xor
pop
test
xchg
mov
xchg
inc
xchg
decl
jl
decb
pusha
mov
pop
mov
add
xchg
loop
push
jae
pop
shll
xchg
leave
rcll
or
test
test
jge
sbb
in
stos
loopne
jg
dec
cmp
ficoms
adc
add
fcompl
and
pop
lods
test
sub
lea
cltd
lret
dec
pop
adc
aad
dec
test
dec
jo
decl
jge
lea
loope
nop
mov
outsl
cmp
mov
lcall
arpl
cli
fisttpl
push
es
push
mov
inc
outsl
shrl
outsb
xchg
fdivrs
adc
hlt
test
test
mov
and
jo
fildll
dec
or
cmp
xchg
pusha
pop
shl
in
daa
add
mov
sub
xor
js
jbe
dec
jbe
lcall
mov
int3
lods
add
addl
js
es
outsb
and
sbb
or
xchg
aad
inc
or
pop
fcmovne
inc
cmp
jp,pn
icebp
xchg
cld
sahf
lods
xchg
inc
add
adc
outsl
sub
inc
push
mov
xchg
sub
or
int
dec
sti
dec
test
mov
test
sub
push
dec
pop
jne
pop
jo
push
jl
dec
lods
cmpsb
mov
mov
orb
adc
sub
dec
cmp
or
cmc
adc
mov
sbb
rorb
and
push
pop
mov
ss
shlb
stos
rcrb
loope
dec
loope
jecxz
aaa
xlat
xchg
dec
imul
loope
push
outsl
push
cli
nop
sbb
mov
pushf
outsl
rcl
jecxz
sbb
push
xor
int3
pushf
sbb
push
push
js
in
scas
xchg
sbbb
ret
inc
pop
xor
push
and
jl
mov
std
jnp
fsubrs
rolb
push
ret
gs
mov
inc
rorb
sbb
push
xor
or
mov
mov
adc
add
lret
gs
xor
xor
add
fs
push
sbb
push
lods
cmpsb
pop
ja
dec
roll
movsbl
int3
cmp
add
xchg
fnsave
loopne
mov
pop
cld
aad
add
std
lcall
loope
mov
lcall
lock
ja
ret
aam
fcoml
jge
into
pop
cltd
test
mov
fwait
adc
pop
lahf
xchg
nop
push
enter
sub
or
mov
das
lcall
mov
scas
je
dec
fst
xlat
adc
pop
pop
jb
mov
shrb
jge,pn
outsl
loopne
sbb
je
pop
rol
mulb
pop
inc
pop
mov
push
sbb
mov
cmpsb
mov
jle
mov
not
fistl
sarb
fwait
mov
outsl
push
cld
xchg
xchg
insb
mov
xchg
aam
mov
or
cmpsl
xor
aaa
mov
stc
mov
rcrb
push
adcl
aam
or
jmp
pop
adc
imul
xchg
popa
les
or
sub
mov
add
cwtl
shr
xchg
mov
mov
pop
jecxz
adcb
push
loope
add
add
fsubs
xor
inc
push
popf
fs
xchg
dec
mov
rcrl
aaa
pop
pusha
push
add
int3
pop
jmp
mov
or
xchg
fwait
mov
mov
mov
sbb
popf
pusha
fsubl
mov
test
pop
out
adc
aas
push
insb
add
test
fistl
lret
and
xchg
stc
andb
jbe
push
call
cwtl
aad
jge
mov
andl
xor
imul
mul
mov
aad
inc
das
ret
movsl
xchg
out
adcl
outsl
push
outsb
xchg
aad
and
push
jge
fdivrp
adc
test
into
hlt
or
sbb
cmc
insl
cmp
adc
and
filds
lcall
or
outsl
jno
add
out
push
aam
mov
xchg
daa
shll
cmp
and
inc
mov
xchg
jecxz,pn
inc
xor
push
lock
sbb
inc
and
stc
xor
cmc
in
outsl
jg
test
pusha
jge
pushf
xor
lock
ss
in
and
cvtps2pi
add
push
cltd
ret
and
mov
or
mov
pop
roll
ljmp
or
sbb
dec
out
or
xchg
cmp
filds
inc
jmp
push
sub
icebp
das
hlt
dec
gs
jns
adc
adc
xchg
mov
mov
sbb
push
or
adc
jmp
decl
xor
mov
sbb
lock
pop
lcall
mov
adc
xor
repnz
test
push
in
lods
add
push
sub
push
call
aad
pop
lahf
mov
ficompl
mov
test
icebp
js
outsl
mov
mov
bound
cmp
incl
cmp
ror
pop
jae
sbb
sub
fucomip
sbbb
cmp
inc
test
mov
jmp
push
aaa
inc
or
icebp
add
jmp
mov
jg
ret
add
loopne
movsl
clc
push
push
xchg
xlat
mov
inc
aaa
or
test
imul
mov
mov
or
xchg
xchg
addb
fnsave
sub
inc
pop
adc
test
das
lret
cmp
das
cld
ljmp
inc
out
pop
js
jp
inc
lcall
loopne
ret
in
outsl
or
xor
sbb
shlb
adc
mov
xchg
pushf
jmp
ljmp
ret
das
mov
movsb
push
add
cli
sbb
jb
jle
xor
mov
lock
lds
scas
cmc
mov
fistpll
es
stos
and
dec
add
add
mov
sti
dec
filds
xor
test
adc
cli
test
mov
sbb
pop
xor
iret
and
outsl
shrl
jns
repnz
and
jge
fisttpl
mov
fcomps
dec
popf
iret
je
push
mov
mov
add
les
arpl
or
lods
jmp
outsl
xchg
pushf
mov
mov
xchg
pusha
add
pop
add
mov
movsb
mov
std
push
or
cs
out
or
inc
xorl
push
inc
push
out
gs
sbb
pop
dec
mov
xchg
jge
mov
mov
xorl
jmp
stc
and
xor
or
xor
fcomps
filds
push
fldenv
xor
mov
push
cld
rcrl
sbb
cltd
subl
dec
movsb
sbb
xor
xchg
push
dec
push
push
icebp
in
es
into
inc
add
jge
mov
test
mov
add
inc
mov
dec
mov
and
push
sti
sub
push
fcmovu
loopw
leave
cmpsl
fiaddl
mov
jp
cld
cmp
mov
iret
imul
mov
jo
mov
cmpsb
dec
data16
shlb
add
jo
rolb
nop
and
imul
lea
mov
sahf
xor
inc
std
mov
or
pop
xor
mov
xlat
das
ds
ret
push
in
ret
subl
jbe
add
mov
mov
mov
lcall
fucomi
push
inc
outsb
leave
jae
xchg
add
jae
in
mov
dec
dec
in
inc
mov
adc
mov
xchg
cmp
ds
outsb
fdivrl
mov
pop
mov
pushf
aas
mov
test
fnsave
sub
pop
stos
ds
jge
push
jnp
xchg
push
sbb
cs
mov
ret
cwtl
or
sbb
outsb
out
xchg
mov
mov
mov
outsb
pop
loopw
push
adc
in
push
bound
cmp
loop
xor
lods
cli
imul
mov
das
jg
fsts
cmpsl
iret
ret
push
inc
or
inc
mov
add
push
xor
fbstp
stos
repnz
sarl
mov
mov
pop
test
inc
push
ja
std
ret
decb
pushf
rcll
out
dec
out
mov
pushf
insb
xor
negb
jl
and
sbb
popf
scas
fs
lock
dec
jo
subb
fidivl
pop
enter
push
sbb
jb
mov
int3
mov
or
cmp
adcl
ss
div
and
mov
fsubl
test
fistpl
mov
mov
insl
adc
and
popa
popa
es
loope
add
mov
xor
jmp
out
mov
fucomip
or
mov
cmpsb
and
faddl
call
and
inc
in
add
xor
pop
xchg
xchg
or
push
inc
std
ret
mov
or
or
jne
bound
pop
mov
sbb
psubsw
lcall
aaa
mov
and
inc
sbb
enter
mov
sub
adc
xchg
inc
sub
add
or
call
out
cmp
sbb
cmp
jb
cmp
sti
aaa
rol
and
pop
aas
xor
adc
xchg
outsl
lea
repnz
and
pop
loopne
mov
lds
xor
pop
loopne
fistpll
push
shlb
ss
dec
ja
and
adc
mov
mov
adc
insl
in
or
sub
lds
sub
pushf
cmpsl
dec
cmp
mov
imul
push
pop
enter
dec
icebp
inc
movl
lea
mov
sahf
lods
fidivrl
int3
add
jg
rcl
pop
mov
push
mulb
xlat
imul
pushl
loopne
pop
mov
inc
or
ret
add
adc
mov
ss
cmpsb
mov
sbb
fisubl
add
sbb
cs
jns
insb
mov
iret
std
pushf
adc
sub
add
dec
mov
repnz
adc
outsl
xor
sar
loope
clc
inc
incl
mov
and
fcomi
or
lock
xor
mov
sbb
jecxz
push
gs
nop
mov
add
mov
cmp
fnstcw
push
js
divl
ret
push
pop
push
xlat
mov
popf
xchg
mov
test
xor
cmc
xor
cs
and
mov
fstl
sbb
pop
shl
outsl
mov
push
mov
outsl
fwait
pop
mov
lods
xchg
sbb
fdivrs
not
xor
aad
rolb
cld
orb
rcll
xchg
or
mov
mov
scas
sub
mov
cmp
jb
push
mov
test
gs
loopne
in
call
fisttpl
int
cmp
scas
into
xchg
xlat
mov
inc
mov
and
je
jae
sti
push
pop
and
mov
cs
xchg
mov
cmp
push
in
dec
dec
pop
jge
jle
lds
nop
div
pusha
xchg
std
add
inc
lahf
in
lods
movsl
sbb
test
jge
push
notb
mov
jp
pop
loopne
das
cld
xchg
pop
adc
rclb
pop
cmp
imul
or
loopne
int3
hlt
add
pop
jle
filds
and
cmp
loop
xchg
cmp
jno
cmp
incl
fsubl
xchg
add
xor
test
mov
stos
xchg
sbb
or
int
adc
jle
stos
inc
loopne
pop
cmpb
mov
xor
shl
sti
shl
add
inc
mov
js
xchg
adc
loop
adc
cwtl
sarb
jo
outsb
fcmovne
dec
dec
push
sub
dec
scas
mov
jecxz
pop
sub
iret
and
xchg
dec
lock
xor
mov
inc
jl
arpl
mov
lock
pop
push
adc
test
lret
sbb
ja
seto
dec
pop
jecxz
icebp
inc
jmp
mov
movsl
dec
das
mov
xchg
mov
add
and
mov
mov
cmpsb
cmpsb
jecxz
scas
or
nop
rorb
mov
sbb
ret
clc
mov
mov
or
push
jge
das
mov
or
xor
xor
jno
rcrb
lcall
mov
pop
inc
push
and
inc
insl
stos
fcmovnb
xchg
loopne
xor
jle
or
fdivrp
jp
in
icebp
jl
sub
mov
push
and
and
jmp
inc
jo
clc
ficoml
inc
push
sbb
pop
mov
rcll
repz
je
mov
clc
mov
jl
cmc
sbb
outsl
jg
stc
mov
rclb
mov
les
outsb
or
popf
sbb
xchg
jl
dec
imul
mov
movsl
cli
jg
mov
shlb
push
dec
xor
scas
pop
inc
mov
outsl
cmp
or
sub
clc
sbb
xchg
mov
test
bound
fwait
sub
jns
mov
je
cwtl
mov
lds
ja
das
iret
mov
mov
mov
or
test
into
lods
inc
dec
repnz
adc
icebp
loope
sub
popa
or
test
jg
std
pop
xor
ret
imull
mov
fcmovb
cmp
or
scas
pop
inc
pop
outsb
insl
ljmp
push
jg
movsl
ret
imul
cmp
sbb
movsl
jg
mov
pop
gs
leave
adc
adc
sbb
f2xm1
or
aaa
decb
aad
nop
mov
add
movsb
mov
add
rcrb
imul
cmp
shr
inc
jmp
gs
test
xchg
push
xlat
dec
ror
jmp
nop
xor
cld
push
jnp
sbb
in
inc
es
sbb
fists
adc
cmc
dec
out
lock
push
pop
xor
and
jb
inc
andb
xchg
lret
inc
jne
pop
mov
call
hlt
mov
sub
rorb
mov
mov
insl
outsl
ret
das
popa
loope
cmp
test
push
or
pop
mov
inc
cwtl
or
xor
jl
mov
sbb
mov
pop
int3
jmp
mov
add
push
in
pop
xchg
pop
das
mov
outsl
xchg
or
and
sbb
aaa
adc
mov
testb
or
daa
int3
out
ss
push
mov
mov
inc
pop
les
ljmp
jns
rorb
in
sbb
mov
pop
cli
push
jne
pop
loopne
shlb
adc
push
rorb
js
jae
pop
into
fcomps
cltd
jge
add
jbe
jbe
fisubrl
push
dec
rolb
jg
aaa
mov
clc
sub
adc
sahf
call
or
push
insl
or
cs
pop
js
cmp
push
test
inc
xchg
adc
rol
outsl
cltd
outsb
js
lahf
inc
inc
push
cmc
dec
pop
push
mov
dec
and
hlt
jg
sub
add
out
fdivrl
jmp
fisttpll
cmp
scas
jl
mov
or
outsb
aad
mov
fwait
lret
inc
inc
cmpb
add
sbb
cmp
mov
sbb
xor
insl
cmp
fildl
mov
jae
repz
test
jg
mov
rcr
jg
addr16
mov
or
push
ret
in
stc
out
mov
or
mov
jnp
lods
inc
push
sub
test
sbb
movsb
in
add
nop
or
daa
pop
sti
cmc
lcall
xchg
or
bound
mov
fisttpl
mov
pop
repz
test
mov
adc
call
and
and
lods
out
rorb
test
subb
jo
add
jle
sbb
iret
xchg
mov
sub
mov
cmp
cmc
inc
stos
adc
stos
adc
fistps
cltd
cwtl
push
adc
sbb
xlat
sarb
push
and
cs
lret
push
push
sbb
xchg
cmpsb
jno
xor
dec
jg
lcall
arpl
cmp
push
and
inc
cmpsb
push
inc
loopne
xor
decl
mov
inc
or
addr16
cwtl
pop
icebp
cmc
insl
add
push
sub
iret
jnp
clc
in
mov
rep
mov
jae,pt
test
pop
fnstenv
and
xchg
jns
mov
loope
aaa
fsubp
fcoml
sbb
imul
cld
fxch
cmc
sahf
cmp
mov
jno
icebp
mov
lods
fwait
push
adc
loop
inc
repz
jo
fwait
jnp
je
scas
ds
adc
fildll
popf
movl
mov
add
adc
out
and
popa
and
int3
out
mov
cmpsb
mov
jle
aam
gs
into
ds
pop
jl
pop
sbb
and
mov
mov
mov
ja
jbe
inc
enter
xor
add
test
mov
push
xchg
pop
dec
push
ja
icebp
jmp
sbb
jecxz
data16
inc
jl
aam
js
xor
imul
xchg
sub
js
xchg
jecxz
testb
daa
xchg
scas
jecxz
pop
pop
sbb
xchg
pusha
mov
rcrb
mov
clc
cwtl
cli
outsl
mov
dec
jge
xor
nop
jnp
cmpsb
xor
push
dec
jp
imul
fwait
pop
mov
cmp
push
or
icebp
scas
dec
and
xchg
pop
call
or
ror
ds
int
call
enter
and
test
stc
inc
shr
es
insl
jnp
loope
dec
fidivl
fsubp
subl
sti
mov
outsb
push
mov
push
and
push
mov
and
push
push
movsb
jo
sbb
ss
popa
mov
bound
xor
cmp
ss
mov
mov
jp
inc
add
mov
xchg
roll
test
arpl
xchg
xor
bound
clc
add
rorl
inc
fcomp
add
xchg
jmp
cli
nop
mov
out
push
outsl
gs
add
imul
adc
dec
popa
jo
jmp
mov
mov
or
dec
xchg
pop
push
je
pusha
jmp
repnz
jmp
orb
mov
or
lds
sbb
fiadds
adcl
fiaddl
popa
xchg
push
sbb
mov
adc
and
mov
je
ss
roll
inc
jns
pop
pop
pop
call
mov
dec
les
jp
rcll
mov
out
sbb
xchg
enter
push
mov
andl
outsl
mov
jg
sbb
fadds
and
subl
ja
imul
xchg
clc
add
das
xlat
pop
fbstp
add
mov
or
aad
adc
and
lods
ret
cld
test
jnp
cmp
loope
mov
ret
mov
ret
in
insl
loope
ja
mov
push
lcall
cmp
rcrl
jmp
das
jns
cld
fildll
and
outsb
sub
ds
xor
ret
push
pop
imul
stos
enter
icebp
pop
sub
negb
lahf
inc
xor
test
lock
mov
pop
jb
cmp
or
add
xor
adc
jns
mov
mov
sbb
fisttpl
call
cmp
mov
ja
sub
mov
test
fcomip
bound
sbb
hlt
lds
mov
mov
test
cmp
push
cmpsb
sbb
jmp
sbb
cli
shlb
data16
aaa
jge
in
jne
dec
fsubl
sbb
stc
xlat
insb
inc
call
fisttps
pop
xchg
cmc
jmp
push
push
das
xchg
int3
adc
scas
fisubrl
sbb
push
add
sub
pop
js
push
dec
movsl
sbb
mov
sub
outsl
jp
lds
sub
js
decl
push
aam
clc
stc
imul
mov
jge
icebp
outsl
call
inc
inc
push
sbb
push
jns
push
and
xchg
xor
or
pop
mov
dec
loopne
mov
test
lock
dec
adc
lds
pusha
push
aaa
cld
das
iret
mov
ds
es
imul
push
mov
sbb
jno
mov
addr16
mov
bound
push
cmp
stos
adc
fsubp
out
pop
mov
fcoms
mov
xchg
pop
loope
std
add
clc
mov
rcrb
daa
push
sbb
out
stc
repz
mov
lock
roll
pop
pop
mov
outsl
cld
sbb
ret
xor
pop
mov
push
push
mov
jno
dec
push
sub
lret
out
into
call
jno
fwait
inc
and
jns
fildl
mov
cmp
int3
test
daa
lret
sbb
xchg
xchg
fs
pop
mov
jle
ds
imul
dec
inc
add
loop
or
decl
lret
aam
stos
sbb
mov
pop
je
and
aam
lea
das
movsb
mov
mov
scas
nop
xor
dec
aam
inc
popa
or
fmul
not
outsl
dec
dec
or
mov
neg
push
push
push
lods
outsb
pop
sbb
call
loopne
add
lds
or
xlat
cs
xor
aaa
mov
or
dec
inc
or
or
jg
sbb
and
call
mov
pusha
test
fisubrl
dec
push
in
movl
in
mov
cld
pop
mov
hlt
mov
xor
int
mov
lods
insb
sbb
add
sbbb
jo
lods
jns
movsb
dec
jge
jle
ss
mov
add
inc
adc
add
pop
add
cs
push
mov
inc
daa
loope
popa
pop
dec
adc
mull
sbb
testb
mov
mov
test
scas
loopne
pop
cmp
mov
movsb
mov
popf
sbb
ret
fucomi
outsb
movsb
adc
add
es
pop
outsb
xor
cmp
mov
call
adc
push
cmp
dec
jnp
out
push
cmpsb
or
je
xchg
push
and
push
shrb
fsubl
dec
ljmp
and
rol
or
outsl
and
dec
inc
loopne
mov
lods
inc
outsl
out
out
fstpt
push
pop
mov
xchg
lcall
mov
adc
mov
xchg
dec
movsb
jbe
jne
js
shrb
sbb
sub
pop
dec
xor
cmpl
sbbl
dec
pop
and
mov
jle
xchg
lods
pop
mov
imul
jnp
sub
jno
dec
shl
add
dec
jp
fdivrs
sbb
into
mov
push
in
inc
sbb
cld
bnd
into
fidivs
pop
mov
cld
pop
scas
adc
dec
out
inc
repz
loope
mov
lock
cmp
pop
insl
les
pop
pop
cli
mov
pushf
push
js
jl
mov
jge
push
mov
lds
rolb
mov
gs
repnz
inc
adc
fidivl
subl
mov
nop
insb
fldt
or
loop
mov
pusha
sarl
pusha
es
cmp
aam
lock
and
jl
mov
mov
into
gs
inc
sbb
daa
cmp
rolb
addr16
imul
ja
psubsb
sbb
stc
das
dec
lahf
dec
das
sub
xor
mov
pop
dec
sub
jg
inc
adc
jl
mov
rcrb
push
mov
adc
mov
std
mov
xchg
es
jnp
jbe
rorb
push
adc
push
leave
and
cmpsl
ret
sbb
dec
xchg
pop
stos
popa
out
xchg
inc
sub
ret
xchg
mov
pop
std
inc
arpl
outsb
mov
xor
push
leave
jb
mov
xchg
in
cmpsl
adc
ljmp
rcrb
popa
jp
jecxz
push
or
dec
roll
test
lret
and
jle
xor
inc
icebp
aam
ficoml
int3
push
mov
jo
mov
pop
dec
test
cs
or
push
cmc
into
add
xor
add
in
out
mov
mov
mov
movsb
pop
shll
lret
jge
xchg
mov
stos
pop
inc
ret
adc
and
clc
jne
fcmovbe
add
sub
aas
push
les
jl
xor
sub
pop
dec
pop
and
cmpsb
and
in
add
or
jne
into
enter
jmp
into
pop
push
xchg
cmp
imul
push
les
fwait
or
push
add
sub
stos
cltd
jae
ljmp
sahf
push
ja
mov
cmp
sbbb
push
out
or
test
clc
aaa
push
mov
dec
in
pop
cmpsl
xor
jg
cmp
push
pop
adcb
and
aad
das
int3
fdivrs
fdivl
jno
outsb
js
inc
fists
adc
sbbl
push
popf
xchg
pop
jg
xchg
fisubs
call
push
lock
or
daa
push
xchg
push
cmp
out
aaa
adcl
or
jl
outsl
das
mov
adc
jae
je
and
push
repnz
xchg
and
loop
int
stc
in
movsl
mov
push
pusha
jb
int
xchg
incl
mov
popf
xchg
mov
jmp
mov
sbb
loopne
in
add
jnp
sti
mov
roll
out
mov
cmpsl
shll
sbb
cmpb
push
push
mov
aas
sub
jmp
xchg
imull
rcr
rorb
popa
push
add
or
inc
cmp
stos
push
mov
iret
cmp
outsl
jo
outsb
sbb
imul
dec
loopne
or
insb
push
pop
mov
rorb
daa
xchg
xchg
xchg
lea
cli
xor
repnz
pop
loope
stos
test
mov
inc
iret
xchg
loope
bound
sbb
inc
add
jp
cmc
in
add
out
pop
and
sub
in
xchg
aaa
xor
jecxz
mov
lods
arpl
shll
jg
divl
mov
adc
clc
and
inc
in
xor
jg
push
decl
movsb
jg
pusha
pop
sbb
adc
aaa
cli
mov
int3
daa
in
addb
es
ffreep
jge
inc
addr16
xchg
mov
fldenv
pop
lods
mov
ljmp
jno
mov
scas
fnstsw
dec
cmp
adc
repz
mov
clc
add
outsl
mov
xchg
aaa
xor
xor
lret
inc
sbb
sub
sbb
ja
mov
add
in
inc
cmp
les
sub
test
jecxz
mov
fcmovnb
sbb
out
lds
int
test
xchg
cltd
sbb
stos
xchg
jl
scas
mov
mov
jg
and
jbe
insb
sub
test
adc
pop
es
mov
jl
ljmp
or
pop
inc
sub
push
rcl
sub
fnstsw
outsl
cs
test
dec
jge
jb
pop
pusha
and
xor
mov
lods
and
sbb
pusha
call
nop
imul
sub
jns
movsb
adc
sahf
cmp
shll
jb
int
ja
int3
add
jl
sub
sarl
pop
cmp
iret
js
sub
lea
fiadds
or
mov
lret
clc
addr16
mov
lea
pop
jne
and
inc
cmc
rcr
xlat
xor
aad
or
fnstsw
inc
inc
adc
adc
jne
imul
adc
jp
pop
mov
mov
cmp
sti
negb
pop
jp
mov
cmc
lock
pusha
adc
inc
xchg
xor
loop,pn
mov
stos
daa
iret
pushf
dec
sub
in
out
pop
sub
xchg
xor
rcrl
scas
out
xchg
movsb
cmpsl
dec
and
mov
or
insb
push
inc
or
in
or
push
das
pop
push
mov
or
ret
mov
pop
mov
sub
das
xorb
fwait
mov
xor
repnz
inc
mov
pop
xlat
pop
mov
cmp
mov
sbb
sbb
stc
or
icebp
pop
scas
mov
in
sub
fstl
out
dec
lcall
pop
push
ficoms
sbb
and
push
insb
xor
sub
mov
inc
lret
test
in
outsb
mov
cmp
jg
rclb
insl
fldt
iret
mov
lds
inc
in
sahf
or
xor
cmp
es
mov
ret
out
icebp
push
mov
push
sti
mov
pusha
sbb
loop
lret
sbb
sub
loope
sbb
loop
cld
in
dec
popa
mov
xor
imul
mov
mov
add
sub
lea
daa
pusha
iret
test
std
ret
adc
adc
add
in
gs
sub
int3
mov
int3
loopne
in
popf
popa
lea
cmpsb
imul
idivb
cmp
add
sbb
adc
fidivrs
hlt
add
mov
cmpsb
loop
gs
rorb
push
int3
repz
push
movsl
outsb
mov
and
inc
loop
mov
lret
push
imul
adc
sub
icebp
lock
ljmp
and
gs
das
cmpsl
dec
lds
jnp
mov
cltd
test
xchg
out
inc
and
pop
popa
adc
xor
je
cwtl
sbb
push
bound
inc
inc
mov
testb
test
fldt
fmuls
xchg
popf
mov
push
in
movsl
out
cmp
push
push
pop
and
rcll
mov
test
call
jmp
inc
or
in
jp
adc
adc
push
in
pop
cli
ljmp
imul
mov
and
cmp
push
ljmp
stos
jg
dec
jge
xchg
fnsave
ret
push
pause
dec
cmp
decl
cmpsb
mov
rcl
nop
mov
fidivs
pop
sarb
clc
sbb
outsb
decl
addr16
loop
push
dec
out
test
add
and
and
mov
clc
jmp
or
jl
ljmp
idivb
push
cmpsl
outsl
cmpsb
mov
data16
inc
mov
lods
add
ror
cwtl
push
pop
loope
nop
adc
in
and
out
rcrb
dec
mov
sbbl
adc
adc
loop
and
pop
ss
mov
subl
cli
lods
or
mov
push
jns
adc
mov
in
add
mov
movsl
call
mov
add
xchg
mov
iret
xchg
arpl
addl
fs
mov
push
clc
inc
call
mov
aam
std
and
xor
in
lea
and
push
fldt
mov
idiv
cmc
sahf
inc
xor
jl
fadds
xchg
call
ljmp
mov
ror
inc
push
cmp
xchg
jns
cmp
ljmp
jmp
pop
aaa
add
cmp
mov
cld
push
cmpsl
xor
and
test
pusha
sti
movsl
push
mov
mov
dec
das
std
sbb
mov
orl
cmc
cmp
std
ffreep
cli
dec
dec
out
adc
push
or
cld
lods
rcl
push
cs
xchg
negl
data16
push
mov
mov
test
repnz
mov
pushf
xchg
cmp
lahf
ffree
dec
ljmp
pop
mov
cs
insb
movsl
test
fdivrs
or
mov
dec
jle
xlat
pop
pop
push
xor
test
divb
or
aaa
or
movsl
lods
imulb
mov
in
mov
popf
push
push
cmp
leave
push
inc
cli
in
ljmp
inc
lods
mov
push
movsb
addr16
pop
test
jbe
pop
mov
adc
push
andb
imul
jmp
or
loopne
lods
cmp
sbb
cmpsb
dec
cld
incl
xchg
push
adc
xchg
jmp
imul
pop
mov
out
and
lods
daa
and
add
xchg
sub
mov
adc
test
sub
ret
cmc
mov
stc
inc
inc
int
or
sbb
xor
outsl
jl
and
test
repnz
shlb
cmpsb
rcl
cmp
cmp
fbld
aad
mov
repnz
popa
jae
sub
mov
out
rorb
mov
cmp
adc
cmpsb
testb
jecxz
adc
pushf
dec
sub
xchg
mov
std
pop
icebp
mov
xorb
adc
xchg
pushf
movsl
sub
cmp
cmp
sbb
mov
repnz
mov
movsl
or
fisttpll
out
mov
movsl
mov
in
in
ret
mov
or
aas
lock
add
shlb
aad
pushf
cmp
xchg
int3
cmc
popl
pushf
sbb
das
jmp
inc
out
lret
dec
dec
dec
pop
or
add
adc
sbb
add
fdiv
sub
rcl
mov
aad
stc
push
push
mov
lcall
mov
xchg
xchg
lahf
dec
pop
adc
push
cmp
or
mov
std
divb
std
mov
xchg
cli
pop
push
leave
outsb
pop
mov
sub
add
cmc
inc
or
inc
insb
lds
jge
xchg
repz
xor
in
adc
inc
jge
pop
mov
inc
in
sti
aad
scas
mov
sub
stos
lcall
fistl
cmp
pop
pushf
insb
lock
jmp
fwait
add
jle
pop
and
cmpsb
sbb
das
neg
xchg
sub
rolb
call
add
xchg
mov
popf
mov
insl
fsubr
push
sub
icebp
push
cmp
sbb
and
mov
pop
xchg
or
dec
arpl
lods
fistl
lods
pop
or
jecxz
in
fidivl
mov
mov
mov
ljmp
retw
inc
push
sbb
scas
dec
pop
ja
push
or
dec
xor
movsl
jge
sbb
xor
push
mov
mov
pop
out
fdivs
lahf
pop
jecxz
pop
pop
jo
and
js
fists
jp
xchg
ret
and
jae
xor
aam
in
fmull
out
pop
aad
ljmp
dec
addr16
je
jno
lods
in
and
lahf
pop
daa
lods
and
insl
xchg
out
jle
sub
inc
ljmp
cld
shlb
add
frstor
push
in
hlt
xor
jg
or
adc
pop
adc
add
shrl
sarl
jb
icebp
jbe
sub
mov
jmp
xor
arpl
inc
xchg
cmc
ss
sbb
jmp
aaa
mov
ficoms
inc
pop
nop
push
jp
xchg
sbbb
push
ficoms
jg
sbb
push
outsb
sbb
push
jo
imul
mov
iret
jne
sbb
vpcmpgtw
mov
jmp
dec
mov
cs
rol
das
hlt
fildll
push
sub
inc
scas
push
addl
adc
mov
cmp
pop
adc
loop
mov
jmp
shrl
cld
jo
sub
out
fistl
lock
lahf
add
xacquire
lds
daa
cltd
push
dec
add
sbb
pop
ror
movsl
or
cltd
jbe
mov
ja
mov
cmp
lock
shlb
pop
add
cmpsl
orl
jo
mov
xor
incl
push
mov
add
test
int
inc
out
xchg
test
mov
loopne
outsl
cmp
push
rorb
leave
jl
popa
and
ss
ja
test
clc
insb
rorl
sub
incb
fwait
cld
mov
int3
inc
push
das
andb
sbb
push
add
xchg
sub
sub
lds
repnz
mov
add
adc
or
sti
or
mov
loope
cli
imull
imull
and
and
pop
pop
filds
rclb
xchg
pop
xchg
mov
inc
aas
test
jmp
test
popa
jno
pop
aaa
into
shlb
cmc
aaa
pop
jbe
mov
xchg
jle
pusha
pop
stc
sub
cmp
popa
jp
sahf
jns
lods
and
movsl
dec
xchg
dec
pop
jecxz
shrl
sbb
push
ret
aaa
jne
lcall
fs
add
mov
fwait
mov
fldt
xor
jecxz
scas
cltd
jne
mov
lret
cmpsb
pop
pop
pop
rolb
or
int
pop
pop
fstpl
pusha
mov
or
push
cmpsl
into
and
jo
jle
jbe
mov
outsl
mov
filds
add
cmp
jno
movsl
incb
pop
lds
jl
mov
add
or
inc
push
jg
addr16
sbb
fidivrs
aas
add
and
ss
inc
dec
push
loop
aam
lods
gs
stc
ficomps
push
adc
loop
fs
sbb
lods
mov
ja
mov
cmp
mov
test
addb
inc
and
sbb
adc
push
xorb
jo
out
faddl
ret
movsb
shlb
xlat
rolb
jg
add
cs
sbb
add
xor
andl
cld
inc
xchg
cwtl
dec
cmp
jnp
mov
mov
inc
mov
adc
mov
pop
jmp
insl
pop
pusha
add
cmpl
xor
mov
pusha
adc
xorw
shl
inc
pop
mov
je
lahf
xchg
subb
mov
fs
jg
dec
sub
or
push
sbbb
add
pop
pop
loopne
jle
adc
jp
andb
frstor
lods
or
pop
lods
loop
fnsave
int3
push
mov
jecxz
call
mov
cmpsb
jp
mov
mov
inc
or
adc
lock
fldl
mov
in
mov
shrl
aad
cmp
incb
adc
xlat
lods
push
xchg
fwait
sbb
sbb
adc
jo
ret
inc
jl
lret
rorb
and
fidivrs
cwtl
xor
fstps
pop
insb
into
ja
sub
pop
sbb
clc
mov
push
dec
push
ljmp
in
mov
fcomip
outsl
add
and
cmpsb
sbb
push
mov
orl
sub
lret
mov
or
inc
shll
xchg
cmpsl
jo
lds
push
pop
es
leave
imull
mov
call
mov
fisttpl
cmp
lds
push
push
jo
sbb
pop
sub
fdivs
or
mov
les
mov
icebp
xchg
ret
adc
xlat
pause
call
flds
andl
jl
fdivs
cmp
or
fcmovnu
add
dec
shr
and
sub
pushf
imul
add
inc
imul
or
xchg
push
outsb
test
dec
pop
jge
sbb
mov
in
mov
rcrb
es
ffree
repz
mov
and
add
adc
mov
gs
mov
das
cs
mov
dec
scas
cmpb
rcrl
mov
out
jecxz
loope
es
add
and
adc
xor
imul
imul
movsl
pusha
mov
push
jl
mov
adc
xor
arpl
jbe
icebp
fnsave
data16
xchg
push
aaa
ret
aas
sbb
in
out
lods
stos
xchg
bound
lods
sub
pop
add
push
daa
sub
add
sub
stos
fsubr
mul
fucomi
sti
xor
popa
jbe
jmp
mov
sub
js
fs
and
fiadds
jno
in
push
fistpl
fwait
mov
adc
out
xchg
or
outsb
sahf
pop
add
add
stos
inc
hlt
mov
ficoms
xchg
in
clc
mov
int
ljmp
subb
mov
and
jns
loopne
outsb
lcall
adc
stc
je
lds
sbb
inc
inc
push
jmp
inc
in
jmp
jns
push
inc
add
cmp
xchg
mov
xchg
mov
shrb
and
jo
push
fcomip
cmp
jle
out
mov
pop
insb
push
or
sub
rclb
outsl
in
xchg
arpl
cmpsb
add
sbb
addb
mov
shl
inc
mov
sti
push
fs
fists
pop
jo
add
sub
loope
sbb
adc
lcall
dec
fmuls
cmp
das
jl
mov
bound
jmp
fimull
repz
pushf
call
mov
xor
and
mov
mov
shlb
test
aad
sub
call
lock
inc
jge
mov
pushf
adc
mov
add
loop
test
test
inc
outsb
and
repnz
xchg
xchg
mov
aas
mov
fs
mov
cld
pusha
lret
pushf
mov
call
and
or
mov
psubsb
in
and
dec
pop
das
mov
push
add
and
mov
lods
push
mov
mov
push
mov
dec
sub
cmpsb
mov
jg
decb
fldt
xchg
adc
leave
jp
pop
jmp
or
out
test
fildll
xor
and
es
arpl
jb
cmp
xlat
das
jb
cltd
dec
lret
out
pop
mov
std
or
mov
pop
and
divl
jp
xchg
xor
pop
mov
pusha
jbe
imul
call
je
jge
pop
aam
xchg
daa
daa
inc
xor
push
pop
jne
mov
in
push
aas
xor
push
mov
mov
mov
sub
jg
pop
icebp
adc
outsl
mov
rcll
pop
test
dec
and
scas
out
int3
dec
aaa
les
fs
in
ret
andl
xchg
rcrb
in
addl
sti
mov
mov
dec
xchg
mov
adc
fucom
mov
dec
out
rcll
xchg
loope
ret
out
mov
cmpsl
out
and
add
and
adcb
sub
inc
loope
pop
inc
fimull
hlt
mov
gs
sbb
addl
inc
inc
jmp
jb
add
shl
jg
fcmovu
lods
sti
out
testb
xchg
aaa
sbb
js
dec
cmpsb
clc
insb
in
adc
gs
aas
push
clc
sbb
inc
scas
push
imul
jbe
in
clc
xchg
inc
sbb
pop
ror
pop
jp
mov
shrb
or
adcb
mov
in
mov
test
loope
dec
movsl
add
mov
push
rolb
cld
and
inc
mov
pop
cmc
dec
aad
push
xor
push
jecxz
lcall
mov
cmp
dec
sbb
outsl
jbe
push
push
xchg
out
pop
add
ja
add
insb
mov
les
dec
loop
loopne
std
push
loop
or
xchg
sarl
lcall
add
inc
push
jl
insb
mov
add
pop
sti
pop
or
in
sbb
into
adc
outsb
xchg
xor
jp
adc
mov
test
sbb
and
push
lea
rcrb
inc
push
leave
inc
and
popf
jg
push
leave
sbb
mov
mov
adc
in
icebp
cmpsb
call
mov
jge
jno
mov
sub
aaa
cs
push
cmp
test
aam
push
subl
inc
call
jns
mov
inc
or
mov
dec
test
jp
xor
pop
mov
cmp
adc
adc
ss
xor
mov
pushf
icebp
addl
xchg
fcmovnb
data16
sbb
add
cltd
repz
inc
xor
aaa
push
jl
xchg
push
data16
mov
lods
or
mov
sbbb
rorl
mov
insb
adc
nop
dec
lock
mov
dec
fucomp
mov
pop
daa
dec
jg
sub
add
ja
mov
mov
jbe
aaa
pop
add
aam
pop
loop
dec
insb
mov
sub
inc
es
adc
es
push
hlt
or
mov
pop
ss
xor
jp
adc
mov
dec
arpl
andl
adc
fstpt
cmpsl
adc
inc
push
push
ljmp
mov
sbb
dec
jo
je
repz
or
lods
push
lret
and
mov
pop
ljmp
std
mov
inc
jo
pop
mov
and
ret
arpl
decl
or
lcall
scas
pop
dec
mov
sub
push
shll
mov
fs
outsl
dec
fldl
and
pop
sti
push
adc
fwait
daa
and
jp
outsl
push
add
mov
outsb
cltd
push
mov
ljmp
sahf
fisubrs
lds
sti
call
inc
xor
dec
adc
cmp
popl
xchg
je
inc
ret
sub
jg
sti
mov
in
into
loope
add
and
dec
mov
cmc
aaa
mov
out
je
xorl
pop
xor
sbb
cld
mov
jbe
or
cmpsb
jg
inc
dec
mov
in
adc
inc
pop
sub
outsl
push
imul
mov
mov
add
test
fimull
inc
into
in
std
xchg
mov
xor
mov
lret
jne
icebp
and
cmp
push
or
js
cmp
pop
data16
lods
test
outsl
in
mov
stos
pop
out
add
push
inc
out
popf
stc
out
pop
adc
adc
ss
xchg
xor
gs
sti
sbb
lods
mov
test
popf
addr16
insl
pop
stos
push
fdivr
xchg
fnstenv
mov
xchg
add
cmc
ffree
test
orl
repz
rol
xchg
jne
mov
ffree
cltd
jp
xchg
repz
mov
outsl
fsubrs
or
nop
test
mov
pushl
cmc
ror
lcall
daa
les
mov
mov
jp
dec
je
lahf
outsl
bound
sbb
mov
loopne
fisttps
aas
enter
notl
cli
fsubl
or
jecxz
ret
addb
icebp
ljmp
mov
enter
adc
dec
adc
sub
inc
sub
sbb
aam
sub
cmp
bound
xor
pop
pop
outsb
or
aam
loop
in
mov
loope
fiaddl
fcomps
and
inc
add
adc
or
jno
inc
aaa
loop
push
and
push
enter
das
sub
aaa
fsts
inc
mov
add
fcomip
jbe
call
push
add
and
les
adcb
sbb
in
jp
xchg
loope,pt
rclb
sar
or
inc
jg
daa
adc
or
sub
cmp
mov
adc
add
ljmp
mov
mov
pop
lret
sbb
leave
sbb
mov
adc
inc
add
mov
push
sbb
lods
test
aam
inc
sbb
dec
int3
fnstcw
jmp
sbb
test
aas
test
xchg
mov
in
inc
or
or
jge
frstor
dec
xor
sahf
sbb
ret
jp
mov
fwait
mov
aaa
incb
push
jb
jle
rcll
pop
push
sbb
cmpsl
mov
sub
or
mov
inc
add
mov
cs
xchg
cmp
and
jle
fldl
lea
dec
gs
call
dec
cmc
xchg
fnstsw
outsl
pushf
pop
stos
sub
mov
xor
clc
test
inc
out
mov
push
mov
inc
mov
int3
iret
popa
pop
orl
fdivp
add
sbb
dec
adc
xor
xor
into
pop
xor
ljmp
and
mov
bnd
int
pusha
pop
pushl
in
into
mov
push
xchg
cmp
std
adc
add
adc
sub
das
mov
movsb
xchg
loopne
jmp
add
mov
es
jae
nop
cli
ljmp
pop
add
idivl
nop
lret
sub
add
push
into
mov
in
nop
mov
cmpsb
xor
mov
push
cwtl
fidivl
pop
inc
jl
cld
pop
cmpsb
jmp
out
out
test
scas
jne
sub
adc
cmp
jge
and
lcall
and
int
push
aad
aam
roll
orb
dec
mov
subb
pushf
mov
stos
aaa
cli
mov
arpl
sbb
inc
inc
xor
std
push
mov
pop
push
xchg
in
test
or
sbb
arpl
and
mov
mov
movsl
sbb
popa
xor
in
ror
inc
cld
ffreep
inc
int3
hlt
test
sbb
test
mov
push
insl
inc
pop
mov
cmp
pop
inc
add
pop
or
and
xchg
mov
xor
test
in
js
adc
cld
nop
sahf
mov
xchg
orb
cwtl
add
dec
test
out
lea
hlt
mov
jno
sub
push
fcmovne
in
mov
and
sbb
mov
ds
mov
icebp
leave
xchg
stos
movsb
push
in
je
inc
jno
pop
mov
add
dec
leave
nop
bound
jecxz
mov
dec
scas
xchg
xor
lea
loope
dec
xchg
jne
jb
xchg
jle
idivl
int
rcrb
push
cmpsl
and
fsts
xor
mov
adc
lcall
test
add
sbb
push
in
jo
stos
mov
ds
sbb
pop
cmp
mov
movsl
adcb
fidivrs
pop
pop
popa
loopne
sti
std
dec
pusha
fstpl
or
lret
xor
pop
jg
dec
xor
xchg
sub
mov
xor
incl
ljmp
das
sub
pop
ljmp
adc
test
pop
mov
and
mov
stos
jg
shrb
jle
cwtl
or
orb
mull
push
push
mov
inc
shrb
and
mov
mov
fs
push
or
sub
aad
inc
dec
ret
inc
imul
fstps
xor
lahf
stos
into
inc
xchg
pusha
mov
xor
outsb
pop
mov
adc
fdivl
aas
mov
pop
add
jmp
mov
scas
lcall
mov
jle
gs
sbb
xchg
xorb
addr16
mov
insl
adc
or
dec
sarb
dec
cmp
push
adc
dec
stc
int
es
xor
lods
lock
adc
into
lock
arpl
rclb
inc
rorl
inc
clc
push
push
sub
ss
cmp
jp
jns
jecxz
loopne
push
mov
push
fnsave
cmp
dec
inc
add
aaa
mov
lock
inc
pop
xchg
pusha
or
inc
fstpl
jg
add
test
and
push
push
mov
outsb
inc
inc
mov
in
das
jo
xor
enter
int
mov
outsl
inc
mov
add
cmc
xor
push
lods
popa
sarb
mov
std
mov
arpl
mov
les
mov
clc
or
aaa
loopw
mov
and
mov
iret
pop
aad
std
or
push
sub
dec
xchg
pop
imul
pop
out
test
adc
mov
fists
pop
out
push
std
pop
aam
cmpb
push
lock
cld
mov
fsub
test
and
add
rcrl
mov
sub
incb
jne
mov
and
fadd
pop
inc
cltd
mov
mov
filds
and
push
or
outsl
inc
sti
mov
cmp
mov
fbld
xchg
mov
rclb
cwtl
xchg
and
cmc
add
fnsave
shrb
jmp
inc
xor
lds
or
cs
mov
repnz
add
shr
in
lods
rcr
out
clc
inc
push
jns
push
inc
fcmovnu
xchg
mov
dec
roll
cmp
test
lret
in
incl
insl
add
pop
pop
aad
mov
nop
adc
sti
add
ret
ss
nop
push
pop
cwtl
cmp
pop
js
cld
mov
xor
mov
and
outsb
andb
js
call
inc
cmpsb
and
mov
inc
loop
sbb
sbbb
call
aam
dec
fwait
cmp
repnz
jl
rclb
test
rcrb
in
push
add
push
lahf
fcomp
ljmp
mov
je
jecxz
jo
dec
and
fisttps
push
jbe
mov
push
pop
ja
and
movsb
popa
mov
push
mov
in
test
and
mov
rol
ret
loope
test
lods
fwait
int
je
or
and
fidivs
data16
mov
mov
std
popa
adc
sub
test
ffreep
mov
sub
loope
pushl
xor
push
sti
rcll
add
scas
push
dec
int3
sub
push
in
pusha
fmull
and
aam
adc
mov
xchg
mov
mov
and
push
and
insl
sti
out
in
pop
mov
add
inc
mov
sbb
or
shl
lcall
fisubs
xchg
mov
imulb
test
cmp
mov
xchg
outsb
dec
bound
xchg
test
sarl
imulb
sbb
dec
insl
sub
xor
loop
idivl
jns
and
or
std
imulb
lret
sbbl
or
jl
in
je
push
test
in
pop
cli
lea
mov
ss
jbe
inc
test
push
xchg
loope
push
pop
add
insl
dec
adc
xchg
inc
push
clc
pop
sub
adc
lahf
inc
pusha
xchg
xchg
sub
cmp
fisttps
push
in
in
jge
fbstp
pop
es
adc
sbb
fs
iret
jmp
loopne
xor
and
jb
xor
insl
cmp
mov
jmp
cmp
sub
sub
movsl
xchg
lret
pop
clc
test
in
pop
fbstp
leave
aad
mov
icebp
or
jmp
xor
adc
shlb
movsl
movsl
aad
and
jge
sbb
pop
test
in
movsl
or
adc
ss
sti
dec
jns
cmc
and
adc
or
lds
fcomps
subl
ss
mov
or
mov
test
ljmp
or
stos
pop
push
push
jge
les
aad
test
jecxz
lods
inc
int
mov
cmc
push
jg
mov
dec
dec
and
rclb
or
or
loopne
inc
popf
fnstsw
scas
sub
xchg
aam
test
xor
sbb
adc
ja
or
inc
pop
adc
pop
sub
call
mov
sub
cmpsl
test
in
add
mov
inc
adc
mov
cltd
popf
test
cmp
fcmovnb
outsl
and
or
add
jno
and
xlat
cmpsl
adc
call
negl
aas
icebp
in
decb
pop
dec
mov
addr16
jo
dec
nop
or
ret
and
in
mov
add
ret
aaa
fs
cli
lock
cmc
ret
les
jle
mov
mov
fisubs
dec
dec
mov
push
std
ja
lea
ret
cli
xchg
cwtl
inc
xor
inc
test
insl
or
mov
insl
in
pushl
icebp
adc
or
daa
popf
leave
cmp
dec
pop
and
call
cli
orb
pusha
pop
and
dec
fdivrl
pop
mov
mov
xor
sub
insl
insb
cld
mov
cmp
pop
inc
aas
sbb
xchg
test
xor
xor
into
sbb
aas
enter
xor
fidivs
jg
jns
aas
xchg
inc
and
popa
jb
outsl
cmpsb
movsl
orl
mov
pop
dec
out
mov
inc
mov
mov
out
jb
xor
push
sbb
jmp
xchg
pop
loopne
push
subl
decl
dec
cld
sbb
lods
sbb
xchg
jg
loopne
xor
cmp
jo
std
push
repnz
dec
dec
dec
aad
push
repz
shll
mov
clc
jp
mov
hlt
or
scas
mov
aaa
clc
sti
outsb
cltd
iret
js
pop
test
xor
ja
lcall
inc
ds
adc
popf
lcall
leave
rcrb
outsb
std
xchg
repz
aam
push
and
enter
xchg
in
in
clc
or
loop
mov
jle
push
push
adc
inc
cmp
xor
adc
call
int3
sbb
jp
push
adc
mov
mov
xchg
jp
jns
call
jp
sub
ljmp
daa
dec
movsb
jo
push
jno
cld
mov
push
cmp
mov
pop
jl
mov
add
mov
dec
push
daa
stos
push
dec
popa
rcl
scas
leave
sub
adc
add
mov
mov
test
mov
imul
jmp
fbld
inc
or
inc
and
dec
sub
test
mov
shll
add
fwait
jle
add
push
sbb
std
fisttpl
and
lods
je
mov
mov
adc
stc
jbe
and
fisubrl
mov
lret
jo
imul
fiaddl
fld
jp
push
fistpl
lahf
mov
int
inc
cmp
mov
iret
sbb
jne
push
and
sub
lahf
daa
and
add
or
inc
pushf
mov
outsl
scas
lcall
mov
insb
jmp
ret
cwtl
jmp
inc
sub
xchg
test
out
and
cltd
ret
inc
and
shrl
aad
shll
in
and
test
push
add
cs
push
mov
in
inc
fdivl
cli
je
sbb
insl
xchg
jbe
dec
lret
orl
call
dec
mov
mov
adc
scas
dec
lea
inc
scas
cmc
pop
push
jbe
sub
loopne
jb
jp
mov
xor
nop
sbb
es
xor
xor
push
shrl
ret
pop
shlb
cmpsb
mov
pusha
les
mov
mov
jp
cmc
call
clc
or
and
cmp
jno
sarb
fsubrl
popf
stc
sub
add
sbb
jae
icebp
push
mov
mov
in
jl
faddp
pop
mov
mov
jo
adc
ret
jbe
pop
mov
sub
cmpsl
fildl
mov
inc
pop
jp
or
testl
jae
and
pop
orl
inc
push
in
inc
push
adc
arpl
mov
dec
bound
or
adc
jnp
sub
or
xor
fiadds
mov
cmc
fidivl
push
jmp
out
aas
decl
cli
xchg
nop
rcrb
scas
loopne
push
jg
loopne
push
decl
mov
pop
orl
test
jecxz
pop
cwtl
and
xchg
insb
call
sub
jno
mov
sbb
les
adc
add
xchg
sbb
push
dec
sbb
pop
mov
sti
mov
adc
test
push
jne
je
mov
cmp
shrl
and
add
sbb
jmp
sbb
and
and
lods
mov
lret
mov
lcall
sahf
push
aad
nop
outsb
or
sbb
xchg
js
js
push
mov
testl
and
adc
or
jmp
xchg
pminub
dec
test
lods
mov
inc
and
ret
pop
cs
fistpll
jmp
lea
xor
and
push
xchg
xchg
call
adc
ficoms
jg
pop
push
push
aaa
fs
add
xlat
les
mov
sbb
lea
leave
dec
xor
mov
mov
jg
push
ljmp
adc
pop
imul
lods
popa
pop
mov
or
sub
push
jbe
ljmp
call
cmp
stc
xchg
pop
sub
cmp
dec
cltd
jp
sti
mov
add
push
xchg
pop
jecxz
xchg
mov
inc
or
lret
outsb
adc
js
jo
aaa
subl
icebp
mov
pop
adc
add
xor
xor
aas
add
adc
std
test
fmul
sahf
mov
dec
sahf
and
adc
mov
mov
xchg
mov
pop
aaa
mov
or
pop
mov
inc
dec
sub
cmpsb
add
js
js
ljmp
jmp
xor
jbe
lock
cmpsl
pop
add
nop
enter
adc
idivb
mov
into
out
mov
insl
fmul
test
repz
shrb
insb
lds
lock
xor
and
inc
jb
mov
movsl
add
loop
cli
xchg
decb
arpl
mov
inc
sub
jle
loopne
pop
loopne
lahf
repz
cmp
outsb
jg
popf
mov
add
mov
mov
lds
cmp
lock
cmc
mov
xor
vcvtpd2dq
stos
stc
jmp
adc
pushf
loope
pop
shrb
call
add
loope
popa
cmpsb
ret
xchg
pop
push
test
aam
movsl
push
xor
sarb
mov
adcl
push
out
lods
or
or
dec
mov
and
lret
xor
cmp
mov
outsb
cwtl
mov
xor
cltd
outsb
add
in
cltd
sbb
adc
pop
pop
add
ror
cmp
call
add
mov
push
ja
jp
xchg
enter
mov
xor
js
or
sub
push
cmp
cmpsb
xchg
sub
mov
push
inc
jecxz
and
popf
inc
xchg
ljmp
repz
xchg
nop
mov
pop
fsubs
rcr
dec
adc
nop
pop
rorb
insb
add
jb
xorb
mov
pushf
adc
lret
jl
pop
cmp
mov
or
add
jb
jmp
stos
test
push
cmp
mov
rolb
mov
sbb
out
add
inc
jbe
jge
or
lahf
imul
ret
cmp
sti
out
clc
and
mov
int
aam
loope
scas
inc
cwtl
sub
arpl
and
mov
nop
mov
mov
mov
pop
add
imul
enter
lcall
add
jecxz
add
pop
outsb
jle
mov
bound
fnstcw
pushf
adc
xchg
fsubrl
js
in
mov
loop
xor
ljmp
mov
add
data16
scas
inc
mov
mov
addl
mov
daa
or
arpl
lcall
addb
je
roll
push
adc
xlat
sbb
inc
mov
mov
cli
negb
mov
mov
xchg
and
fimuls
orl
movlps
adc
dec
shll
test
mov
roll
push
dec
frstor
add
push
inc
in
or
cwtl
and
in
in
orl
and
popf
xor
repz
ret
fst
pop
xor
mov
or
aad
push
xor
je
ds
sbb
mov
loop
inc
adc
clc
shll
repz
xor
fmuls
insl
sar
adc
ret
jne
ret
int3
out
mov
aas
cmp
fdivrs
push
add
inc
fstp
or
mov
sub
add
out
push
fcomps
movsb
add
hlt
sub
out
add
sbb
xor
dec
mov
add
mov
push
jle
pop
jge
cmc
es
mov
loopne
lret
jmp
sahf
and
xchg
lock
sub
add
stc
addr16
std
or
pop
cmp
decl
imul
cmp
pop
dec
shrb
adc
jle
jle
lcall
xor
and
aam
xor
push
push
pusha
test
pop
mov
add
in
aas
push
pop
mov
mov
sub
mov
mov
idivl
jg
subl
mov
sbb
sbb
test
outsb
pusha
shrb
test
cld
enter
nop
pop
mov
ja
in
add
addl
lds
jecxz
lods
or
loop
shll
inc
inc
aas
add
pushf
gs
popa
shll
push
mov
pushf
xchg
jle
adc
mov
lret
inc
sub
jecxz
leave
aas
mov
adc
leave
pop
leave
inc
stc
icebp
or
xchg
mov
mov
mov
or
cmp
adc
push
das
pop
xchg
andb
test
fildll
addr16
xor
mov
pop
outsb
int
lock
xchg
push
add
and
fstl
and
clc
push
sbb
jne
mov
inc
mov
fistpll
fidivrs
mov
outsl
sub
jmp
xchg
or
mov
pop
sub
jbe
in
in
sbb
lea
or
or
xor
popf
dec
notl
out
inc
fstpt
dec
cmc
das
pop
test
xchg
and
xchg
ret
push
sbb
inc
mov
insl
sahf
push
mov
pop
pop
ret
aad
jno
mov
inc
cmp
cld
adcb
das
mov
pushf
addr16
popf
bound
lea
lcall
sbb
mov
fwait
mov
cmp
mov
sbb
cmc
call
roll
and
xchg
fcmovbe
mov
and
cmp
pop
inc
sbb
daa
xchg
scas
mov
call
mov
call
ja
cwtl
test
inc
lock
ret
das
ja
jbe
pop
dec
inc
jle
push
inc
dec
mov
shll
inc
mov
bound
pop
test
or
cmpsl
popa
mov
sbb
jmp
lret
cmp
push
ja
mov
mov
add
push
test
dec
aam
shrb
sbb
cwtl
fistps
sbb
mov
jg
or
out
mov
aaa
ss
sub
jmp
xor
stc
das
shl
sarb
loop
inc
cmp
lods
xor
mov
jne
xchg
inc
and
jg
ljmp
in
dec
out
push
jg
sbb
aas
xchg
insb
out
cltd
nop
xchg
sbbl
bound
pop
sahf
test
mov
cmp
loop
sti
repz
or
incl
js
sub
call
add
jno
cmpsl
jo
cltd
jo
je
bound
fidivrl
mov
xlat
mov
xchg
jb
jle
fisubrl
lret
shrb
scas
insl
ljmp
cld
fidivs
sub
xor
xchg
icebp
and
inc
aam
pop
sub
mov
mov
outsl
jne
cmp
push
shlb
fwait
mov
sbb
popa
cltd
add
nop
insl
shlb
sbb
test
dec
dec
mov
gs
fiadds
notl
ficoms
cmpsb
add
xchg
stos
imul
clc
test
or
in
xchg
test
call
or
pop
cmp
loopne
je
sbb
or
push
add
pop
dec
add
movsb
andb
test
mov
jb
mov
add
inc
mov
mov
stc
cmp
in
sub
in
sbb
xchg
sbb
mov
shll
and
cmp
xor
dec
cwtl
adc
cmc
lods
lea
xchg
jo
imul
fistl
mov
mov
mov
movsb
enter
mov
mov
sub
xchg
inc
ljmp
in
fisubs
dec
or
xchg
fcmovne
decl
rclb
nop
add
jb
hlt
xor
or
mov
insb
das
mov
or
mov
js
sti
lods
unpckhps
pop
xchg
in
mov
pop
ljmp
xchg
xor
add
nop
adc
cmc
jmp
notb
push
repz
jns
js
sti
filds
jmp
push
mov
das
pop
ds
andl
pushl
inc
sub
dec
and
or
jg
add
insb
pop
aad
xchg
les
mov
or
push
icebp
and
and
fcoms
mov
or
adc
mov
enter
jmp
sbb
fnsave
mov
aad
jbe
cli
cmpsb
dec
sub
out
xchg
or
loopne
jb
inc
lock
stos
adc
xchg
mov
lcall
test
or
xor
push
popa
dec
scas
cmp
sub
or
fs
inc
inc
outsb
aaa
jle
push
leave
leave
add
push
mov
imul
int3
ret
pop
inc
mov
subl
sub
rorl
push
add
aaa
jle
adc
add
add
cwtl
or
xor
test
stos
shlb
mov
adc
shlb
clc
xchg
cmp
ss
fldt
or
push
loopne
and
insl
std
ficoms
movsl
dec
sbb
fcmovb
das
mov
insb
add
or
hlt
xchg
and
gs
decl
scas
xchg
cli
or
inc
and
insb
in
pop
inc
add
sub
push
mov
mov
add
lods
jg
ret
outsb
out
xchg
lock
ss
inc
fisttpll
sbb
in
dec
das
mul
add
rcl
or
mov
push
jmp
cmpsl
pop
pop
rorl
addr16
popa
mov
gs
les
mov
dec
outsl
jg
fs
mov
xor
lcall
ret
pop
sbb
inc
sub
jnp
dec
push
fstpl
lea
out
and
sahf
add
lea
roll
ret
js
ljmp
aam
cmp
inc
jle
xor
jecxz
xor
push
push
push
inc
inc
push
or
cli
sbb
imulb
in
ror
push
xchg
add
cltd
aaa
sub
addl
pop
mov
fsubrp
out
lods
push
or
add
test
jmp
call
scas
data16
rcr
ljmp
ds
xor
or
fcomip
cmp
dec
jge
pop
loope
in
mov
or
ljmp
subb
ret
sub
jo
test
sbb
call
stc
mov
fsubs
pop
pop
adc
lret
jns
sbb
bound
bound
adc
sbb
mov
sbb
xchg
out
inc
pop
imul
lods
ficoms
mov
test
adc
add
sub
gs
mov
cmc
xchg
jge
mov
jg
out
ds
jmp
incb
xor
mov
add
xchg
mov
aaa
fbstp
adc
repz
jne
sub
sbb
idivb
sbb
ds
inc
push
mov
push
adc
stc
nop
mov
mov
test
push
rcrb
in
inc
mov
inc
add
push
inc
xor
loop
jae
in
inc
scas
fstpl
nop
jo
mov
mov
cmp
sub
aad
add
nop
cmp
inc
jg
testl
xchg
and
push
into
imul
push
pop
add
movsb
and
sbb
mov
inc
mov
in
sub
ljmp
xchg
fdivrs
jmp
out
mov
mov
repnz
push
push
jno
ret
xchg
and
ret
ret
add
push
mov
cmp
cmpsl
cs
cmp
jmp
pop
mov
nop
lea
add
sbb
mov
nop
jne
dec
xchg
cltd
jbe
inc
stos
test
mulb
cmp
dec
mov
push
push
sarl
dec
enter
fdivp
call
fisubrl
jmp
pop
push
das
mov
nopl
mov
jno
mov
mov
mov
fnstsw
push
cli
pop
jne
dec
repz
shrb
lea
fldl
fidivl
mov
mov
shlb
mov
lcall
aaa
lcall
pop
repnz
aad
push
fidivs
orb
je
jecxz
in
xor
iret
inc
arpl
sub
add
out
repnz
mov
mov
inc
mov
fcmovnbe
mov
incb
sbb
aam
push
rcrl
out
sub
jbe
inc
cmp
push
push
int
push
pop
xchg
in
test
xchg
cmpsb
xchg
xchg
test
dec
inc
out
push
scas
mov
pop
lds
push
bound
scas
jmp
xor
inc
data16
adc
mov
push
add
sub
or
hlt
mov
push
mov
or
int3
rol
jg
stos
mov
imul
roll
lea
add
icebp
das
cwtl
cwtl
or
pop
pop
add
cwtl
movsb
cmp
in
pop
je
leave
inc
mov
lcall
cmpb
insl
xor
pop
aaa
lret
aam
xchg
mov
pusha
xchg
les
pop
add
or
mov
mov
xchg
push
fistps
adc
xor
dec
pop
pop
and
ljmp
iret
xchg
sub
sbb
adc
jp
sbbb
and
stos
popf
jo
sbb
out
dec
outsl
jns
in
pop
adc
scas
fidivl
cmp
xchg
push
mov
in
ss
lret
mov
push
adc
cmc
ret
and
cmp
inc
mov
xchg
addb
lods
cmc
ficoms
mov
lret
pop
in
call
push
sbb
std
leave
es
mov
pop
inc
test
pop
add
xor
aaa
pusha
jecxz
push
xor
mov
pop
je
or
jo
xor
xor
jl
insb
and
and
xchg
sbb
pop
sub
dec
aaa
inc
cmc
or
xor
aad
gs
or
dec
andb
test
pushf
ret
mov
pop
fnstsw
repnz
jnp
push
cmp
adc
pop
mov
test
ss
mov
loope
pop
push
lods
fimull
mov
push
aad
jns
push
imul
pop
and
mov
outsb
fcomp
pop
jecxz
mov
lods
or
fnstsw
mov
pop
call
inc
inc
inc
cmc
subl
dec
mov
xchg
in
ss
outsl
pop
pushf
test
push
xchg
mov
ret
arpl
add
sbb
fsubr
mov
orl
out
jle
cmp
lock
dec
and
xorl
push
dec
mov
int
mov
cmp
sub
popf
and
jle
je
adc
push
lods
stos
in
push
pop
jg
sbb
shlb
shrb
push
aad
xor
jge
in
lods
or
xchg
mov
cli
fdivrl
and
ret
jle
pop
call
dec
sbb
outsb
inc
mov
das
xlat
inc
ljmp
or
cmp
ret
lea
das
and
insb
mov
movsl
lods
push
sub
jl
leave
and
mov
mov
pop
add
scas
push
ljmp
aas
movb
pop
fmull
mov
outsb
dec
js
in
jo
push
sub
push
shll
jbe
inc
add
jecxz
rcll
addb
adc
or
xchg
push
pushf
in
cltd
loopne
int3
push
xchg
faddl
lret
ret
jno
mov
out
aam
das
mov
add
inc
js
lods
ja
mov
clc
outsl
aas
std
gs
js
std
in
movsb
insw
adc
in
fcomip
cld
xor
negb
lods
xchg
andl
repz
mov
or
rclb
pop
push
aaa
sbb
cmpb
xor
das
clc
jp
inc
inc
loopne
mov
outsb
in
lret
fs
sbbl
xchg
adc
mov
push
inc
ret
inc
cmp
mov
call
and
pop
sbb
aam
and
ljmp
pusha
iret
fbld
orl
std
and
scas
lcall
push
mov
pop
mov
push
divl
rcll
cmpsb
scas
test
cmp
fsubrs
add
scas
out
imul
faddl
or
test
pop
aas
aad
out
sbb
mov
nop
es
adc
cmpsl
stos
mov
faddp
rolb
xchg
push
es
mov
mov
xchg
jo
jae
stos
jecxz
xchg
cmp
pushl
mov
hlt
push
jnp
shl
stos
ret
xlat
pop
inc
jp
cmp
cld
add
mov
outsb
jne
and
cmp
xchg
lret
cmc
leave
repnz
insb
rolb
lods
int
push
pop
dec
mov
lea
push
lcall
inc
mov
push
mov
push
push
or
daa
xorl
xor
jnp
xchg
cwtl
sbb
out
xor
lret
clc
add
push
dec
mov
not
jbe
dec
inc
mov
xlat
in
mov
cmpsb
ja
pushf
movsl
dec
addb
push
inc
or
mov
sbb
dec
pop
aad
lods
mov
shlb
test
fildl
lcall
je
in
xor
and
loopne
inc
mov
adc
mov
mov
jb
push
fs
jg
aam
xchg
or
adc
jmp
aaa
adc
mov
mov
dec
mov
add
or
in
push
sbb
sub
pop
sbb
fstp
ja
mov
cmp
aad
sbb
lods
pusha
dec
jns
jl
rorb
mov
inc
adc
pusha
cmp
stos
lret
fs
push
pop
pop
pop
or
test
call
lcall
cltd
mov
ror
add
lret
adc
rcrb
je
push
mov
mov
cmp
jge
hlt
mov
sbb
scas
ds
popa
sbbl
push
or
sub
lret
push
mov
push
sti
pop
sbbb
scas
xchg
imul
xchg
int
fcmovnbe
mov
pop
dec
mov
and
xchg
test
sahf
sar
in
sbb
sub
mov
enter
sub
notl
jo
xchg
push
cmp
xchg
adc
outsl
jmp
xor
dec
scas
cltd
mov
orb
ret
sub
sbb
mov
jnp
andb
mov
mov
pop
lret
adc
les
jb
mov
mov
mov
sub
mov
jg
cmp
aaa
xor
mov
lret
and
test
lret
out
jecxz
add
and
cmp
adc
outsb
cld
repnz
pop
xchg
jg
inc
push
std
out
pusha
mov
rorb
mov
fildll
mov
sbb
xlat
loopne
jp
pop
enter
ss
pop
mov
sub
dec
fistps
rcrl
mov
ja
xor
shlb
pop
adc
arpl
push
fcom
loopne
mov
adc
adc
inc
sbb
or
inc
mov
lds
xchg
rolb
inc
sti
pop
sub
pop
fadd
sti
add
shrl
fildll
or
pop
xor
inc
sbbb
cmpps
sub
movsl
jle
inc
mov
test
sbb
pop
mov
xor
jno
movsl
sbb
dec
jmp
cwtl
fnstsw
inc
xchg
jle
push
push
lds
xor
das
dec
out
xchg
add
mov
push
loopne
jle
mov
adc
push
lret
jb
pop
mov
mov
bnd
jg
xor
or
sbb
rcrl
push
fcomip
mov
mov
cmp
loope
pop
xchg
mov
das
sub
ds
int
ja
mov
icebp
movsb
jl
popf
icebp
out
cs
leave
lret
mov
pop
out
pop
cmp
pushf
icebp
call
jg
adcl
addr16
add
sub
jl
inc
fisttpll
inc
js
xchg
sbb
inc
xchg
jo
subl
stos
das
lods
adc
adc
pushl
jle
leave
loopne
test
js
jae
fcoml
jl
loope
cmp
in
push
mov
push
add
mov
mov
jnp
xor
out
out
jle
popa
push
dec
ja
lret
add
sbb
xor
sbb
test
test
test
sub
inc
or
inc
arpl
call
dec
aaa
push
add
and
cs
mov
test
dec
lds
lcall
and
mov
jb
pushf
sub
shr
incl
fwait
xchg
xchg
xor
jge
stos
push
adc
incb
mov
xor
or
jne
jg
cmpsb
adc
cwtl
mov
test
xor
faddp
movsl
das
adc
add
shrl
mov
ja
pop
ja,pt
jo
pop
adc
dec
arpl
inc
rcl
bound
mov
addr16
xchg
lock
fbstp
test
out
mov
push
imul
loopne
cwtl
cli
mov
sbb
cmc
fs
sub
jmp
loop
and
xor
or
std
stos
aaa
or
jg
mov
rorl
mov
push
mov
rorl
or
cmp
push
sbb
icebp
pop
xor
stos
push
iret
mov
mov
repnz
inc
test
mov
js
cmc
sbb
lods
xorb
je
or
and
lret
test
lcall
nop
hlt
loop
roll
clc
ljmp
inc
loop
push
push
push
and
dec
outsb
lcall
je
shr
push
push
das
push
scas
and
popf
push
cli
lcall
addr16
cmp
push
movsl
push
sbb
decb
shl
fildl
jge
mov
out
sbb
mov
cmpsl
ficoms
add
mov
or
test
inc
enter
insl
pusha
adc
or
pop
push
push
xchg
mov
out
pop
test
loope
test
sbb
cmc
cmp
lcall
lds
push
xchg
in
xchg
sbb
mov
mov
loopne
call
js
testl
mov
imul
aas
loope
mov
stos
hlt
fbld
cmc
inc
mov
sbb
test
mov
mov
sahf
dec
push
loope
outsb
xor
icebp
pop
pop
nop
lds
std
hlt
ss
aas
insb
test
add
inc
or
fisubs
mov
sbb
daa
addr16
mov
pusha
lret
loope
pop
inc
jb
xor
or
sbb
lret
adc
push
jb
mov
ds
outsl
inc
in
xchg
sub
rolb
xor
and
aas
jg
sbb
cmp
xchg
rorb
adc
outsb
xchg
fiaddl
xchg
cmc
mov
and
dec
sub
mov
push
loopne
add
or
mov
inc
or
das
cmpb
icebp
cmp
outsl
or
shlb
outsb
mov
xchg
pop
inc
or
xchg
push
aad
and
aam
pop
aaa
dec
adc
add
mov
dec
mov
sarb
movsb
mov
fs
movsl
scas
loop
out
sbb
adc
outsl
mov
push
and
popw
mov
test
cmp
lahf
call
mov
ficomps
rclb
in
mov
mov
adc
std
xor
jo
cmp
rsm
add
mov
inc
add
xor
mov
xor
mov
xchg
jo
inc
test
push
and
adc
jae
push
xchg
pop
xchg
mov
insl
jmp
jae
inc
push
in
push
cmp
neg
in
or
sbb
xor
adc
or
test
cld
xor
sbb
pushf
scas
or
and
cmp
sub
sub
mov
inc
cwtl
lea
pop
stos
outsb
pop
push
cmp
je
jbe
push
lock
xchg
xorl
and
in
lock
sub
xchg
push
rclb
shlb
xor
lods
sti
push
pop
out
mov
cmp
inc
adc
sbb
xchg
dec
in
push
sub
push
adc
add
or
mov
fldenv
or
push
mov
add
loopne
inc
loop
fisubrl
and
mov
add
cmpsl
int
dec
push
in
adc
mov
test
xor
in
pop
pop
cmc
jne
leave
sbb
jecxz
addr16
loop
pop
sbb
popa
shlb
scas
ja
lods
sti
fidivrs
andb
inc
sub
xchg
xor
sti
lcall
int3
gs
lcall
out
ljmp
inc
jnp
push
xchg
jns
std
test
inc
push
inc
mov
inc
push
std
sbb
push
testl
jae
call
pushf
dec
push
dec
movsb
adcl
dec
decl
fidivl
adc
mov
loopne
mov
push
pop
out
popf
xchg
pushf
nop
in
pop
fmull
icebp
fildl
out
cmpsb
inc
cmp
cld
scas
outsb
mov
inc
ret
fcomps
and
lea
jle
adc
call
vandnps
rcrl
adc
xchg
mov
notb
movsb
std
adc
jg
mov
loop
out
icebp
sbbb
mov
adc
push
jmp
mov
mov
call
push
ljmp
push
add
fsubl
add
mov
mov
popf
xchg
sti
stos
push
stos
addl
inc
mov
lea
inc
jecxz
leave
inc
imul
or
jg
icebp
inc
rcrb
scas
pop
mov
insb
dec
mov
outsl
fldt
jnp
jb
inc
push
imul
push
out
adc
mov
rorb
add
sbb
mov
rep
mov
xor
and
outsl
add
je
pop
mov
shlb
cmpsb
clc
mov
inc
in
pop
pop
xor
sarb
sub
movsb
dec
or
pop
xchg
test
mov
mov
or
inc
xor
adc
mov
test
fwait
xchg
or
push
lahf
mov
xchg
jp
jmp
faddp
xchg
sbb
lahf
or
outsb
mov
es
and
cltd
jae
pushf
inc
pusha
call
sub
aas
lds
jl
adc
xchg
loope
shl
pop
fldl
inc
cmpsb
add
mov
fdivrs
and
gs
mov
xchg
sbb
pop
xchg
adc
mov
push
test
xor
mov
xor
jae
xlat
lahf
and
push
mov
sarb
mov
lods
ret
int
xlat
in
movsl
movsb
mov
jg
mov
and
ja
adc
movsb
dec
xchg
or
icebp
aaa
inc
rolb
adc
scas
sbb
mov
mov
fimull
sub
test
sbb
xchg
cmp
out
and
xor
xchg
gs
incb
fistl
test
sbb
xor
aad
lock
test
clc
pop
in
xchg
out
and
and
add
mov
es
movsb
jp
movsl
cli
mov
pushf
mov
sub
rorl
and
lcall
arpl
inc
xchg
and
in
neg
fisubrs
push
ds
es
sub
inc
jl
mov
enter
adc
xchg
js
jmp
mov
hlt
jns
pop
mov
incl
seta
inc
fimuls
adc
ss
sbb
cmp
mov
arpl
push
and
testl
stc
inc
dec
mov
test
fistpll
outsb
outsl
imul
fstpt
or
out
push
ljmp
jb
or
adc
in
add
push
mov
mov
mov
add
mov
mov
jge
jo
jo
dec
ja
pop
jo
or
das
cld
lahf
mov
mov
inc
jnp
jbe
pop
into
enter
and
fisubl
das
movsb
or
aam
out
sbbb
add
push
xorl
push
mov
sub
stos
sub
jg
lods
push
out
mov
jge
enter
cmp
pop
pusha
loope
push
fs
imul
or
or
sub
adc
in
lea
pop
leave
ds
sbb
push
std
outsl
fstpl
rcrb
cmp
lea
and
scas
add
fisubrl
sbb
loope
xor
xchg
vpunpckhdq
jae
outsl
rorb
mov
inc
clc
jb
pop
in
dec
incl
push
rcl
and
sub
imull
imulb
push
imul
sub
imul
push
test
dec
add
popa
test
call
mov
mov
arpl
and
repnz
cmpsb
cmc
mov
stos
ljmp
enter
movsl
loopne
je
mov
shl
pmaddwd
cmp
xor
sbb
clc
sub
add
xchg
jmp
scas
popf
sbb
cs
mov
scas
cld
incb
fwait
mov
mov
xchg
shlb
in
out
scas
lcall
std
sbbb
shll
push
stos
imul
mov
cmp
sub
adcb
pop
addb
mov
mov
inc
out
rcrl
jbe
jnp
vpmacswd
out
ja
out
fisttps
rclb
rorl
jle
ffree
adc
outsl
inc
and
in
add
pop
dec
adc
push
inc
aad
nop
xor
nop
int
pop
lcall
ds
test
out
dec
add
lret
mov
mov
sarb
mov
jbe
jbe
das
je
dec
mov
add
adc
mov
pop
mov
add
iret
jnp
push
out
shlw
mov
lcall
loopne
push
fwait
ljmp
adc
rcrb
jle
pop
ss
fs
lret
loopne
pop
outsb
xchg
lcall
mov
add
push
add
push
loop
fbld
xchg
jno
icebp
mov
jmp
add
jg
aam
ja
jnp
loopne
jl
inc
dec
add
and
mov
pop
mov
cmp
loopne
pop
je
adcb
xchg
loope
arpl
mov
add
out
movsl
and
jmp
or
out
lock
test
jae
jmp
add
cmp
shll
inc
mov
test
mov
lds
cmp
mov
inc
mov
or
pop
add
or
and
cmp
ret
mov
add
push
sar
mov
mov
in
jno
mov
mov
push
je
xchg
sub
xchg
enter
in
gs
sub
sbb
mov
incl
mov
mov
add
ss
mulb
js
pop
clc
test
or
test
loope,pt
sarb
dec
js
adc
stos
aam
lods
in
in
mov
loopne
imul
sbb
xor
dec
les
shr
push
mov
mov
jnp
sub
repnz
inc
mov
test
scas
int3
sbb
popa
dec
pop
pusha
lahf
cld
inc
jne
decb
mov
adc
jecxz
add
fst
mov
inc
mov
inc
jne
lds
push
sbb
fisttpl
in
test
mov
sbb
jp
pusha
loope
jle
adcb
sbb
and
subb
pop
les
sar
cwtl
stc
mov
mov
sbb
inc
xor
dec
fdivr
pop
fidivs
mov
fildl
fidivrs
add
loope
mov
push
test
inc
mov
xchg
stos
jp
sbb
loope
cmp
or
mov
imul
lods
dec
or
cltd
daa
jg
lods
icebp
cmp
fwait
jg
and
js
jmp
call
loop
les
cmp
sub
pop
cmpsb
lea
ret
xchg
ja
rolb
aam
pop
in
or
dec
inc
pop
inc
pop
leave
jne
mov
mov
sub
mov
xor
das
aam
and
fwait
jle
jge
push
push
cmpsb
or
pop
mov
scas
sub
in
add
inc
aam
stos
ljmp
push
push
push
push
jo
ret
or
mov
mov
mov
sbbl
cmp
filds
or
dec
and
sbb
xchg
xchg
sbb
icebp
pushl
sti
scas
add
or
or
or
aad
arpl
das
xchg
mov
dec
jecxz
inc
in
xchg
leave
adc
dec
adc
sbb
pop
ljmp
lcall
mov
aad
loope
mov
das
movsl
or
xor
push
inc
in
movsl
xchg
and
and
jmp
add
xor
sahf
cli
pop
mov
roll
mov
cmc
in
mov
imul
cld
lret
jb
lods
sbb
and
lret
jo
and
js
push
dec
in
shrb
mov
mov
push
ljmp
mov
scas
adc
fimull
fistpl
and
xchg
ret
loope
push
pushf
pop
jecxz
mov
clc
jmp
test
shrb
outsb
adc
or
sub
movd
mov
jp
jae
xchg
notb
pop
sbbl
insb
jge
orl
out
mov
dec
mov
xchg
es
in
cmp
jge
adcb
xchg
inc
xchg
aam
fwait
orb
push
jno
fsubrl
ljmp
loope
dec
or
testl
mov
sbb
mov
xchg
sub
dec
pop
xchg
lods
jmp
ret
shlb
stos
roll
dec
bound
jmp
mov
adc
lret
mov
sub
or
add
out
ljmp
in
cli
sbb
or
fsubs
sbb
rorl
adc
cs
xor
mov
insl
mov
push
jae
test
rcrb
mov
or
pop
sbb
insl
mov
pusha
rcll
ret
add
add
mov
sub
push
in
js
fiaddl
dec
shlb
fisubl
hlt
mov
cmp
nop
pop
mov
lods
pop
sub
scas
mov
xchg
pop
aam
mov
outsb
inc
or
cwtl
xchg
movsb
xor
adc
sub
outsb
xor
sub
pop
xlat
jge
adc
aam
das
lock
shrl
cli
xchg
mov
std
mov
jg
loopne
rolb
ret
xchg
iret
test
test
jo
outsl
int
mov
outsb
incl
je
push
inc
movsb
adc
es
pop
sarb
pop
add
mov
mov
stc
xchg
dec
jmp
cmp
int3
scas
xchg
or
push
shll
mov
pop
xor
mov
lds
nop
pusha
test
push
pop
fdivrl
or
test
test
pop
jnp
in
cmpsb
xor
cmp
test
pop
ss
and
sub
loope
test
lods
int
shl
std
outsl
ja
addl
dec
popf
mov
icebp
pop
loop
loopne
loop
dec
lea
jg
es
inc
jp
mov
adc
and
or
push
test
ljmp
lcall
iret
mov
sub
out
jle
jo
pop
lea
jge
mov
dec
adc
stos
add
jge
fcoms
fucomip
test
mov
andl
dec
mov
push
inc
pop
xlat
rcr
bound
jns
pop
inc
arpl
push
shll
xor
jb
shlb
pop
dec
push
dec
xchg
dec
mov
mov
aad
movsl
aaa
and
aad
push
movsl
dec
cld
sti
icebp
pusha
cwtl
xor
roll
mov
lret
pop
push
dec
pusha
jmp
mov
mov
sbb
filds
repnz
scas
mov
mov
sbbl
cmp
mov
test
mov
sub
loope
jb
dec
inc
iret
call
mov
mov
aam
fiaddl
int
jg
in
inc
adc
in
adcb
or
push
jo
xchg
add
pop
stos
or
nop
insb
out
movsl
pop
movsl
xchg
aaa
xchg
sbb
sub
les
cmpl
xchg
mov
pop
fs
insl
mov
inc
ret
filds
packsswb
pop
lahf
mov
dec
aas
cli
nop
adc
imul
adcl
les
push
fdiv
mov
ret
jno
xchg
outsl
push
fcompl
orb
xchg
ret
jl
in
negb
mov
xchg
add
adc
and
scas
fidivrs
push
clc
or
mov
hlt
mov
out
cmpb
outsb
jo
xor
call
mov
jnp
adc
xlat
pop
movsb
jle
decl
icebp
adc
test
bound
insl
xchg
test
clc
inc
xchg
and
enter
daa
cltd
mov
mov
cmc
stc
hlt
out
in
adc
sarl
adc
inc
arpl
push
push
out
sub
daa
jmp
sub
xlat
sarb
pop
mov
push
sti
fs
mov
jae
lods
call
cmc
sbb
jp
pop
repz
and
inc
mov
clc
or
repnz
or
dec
pop
lods
dec
in
dec
rcrb
jnp
jl
pop
int3
cmp
out
and
gs
mov
stos
mov
pop
adcl
shll
clc
std
push
rcr
into
mov
and
daa
fwait
or
test
adc
cwtl
add
hlt
mov
mov
dec
mov
fadds
insb
jge
incb
sub
or
cmp
jae
test
dec
mov
sbb
ret
push
jmp
push
mov
add
fsubrl
pop
xchg
cltd
ds
loopne
loope
out
call
scas
push
push
sub
xor
movsb
or
mov
jp
ret
push
inc
push
xor
xor
mov
cli
cmpsb
mov
hlt
lods
lds
add
pop
sub
jmp
jmp
add
js
jmp
daa
scas
popa
inc
jl
roll
nop
lcall
pop
push
outsb
aas
aas
dec
fdivl
mov
xchg
cwtl
push
push
pusha
aam
rep
insl
mov
add
pop
fimull
mov
call
in
adc
jns
push
test
outsb
outsl
mov
inc
add
loopne
icebp
rclb
jle
inc
xorb
movsl
mov
in
lea
pop
fisttps
test
cmpsb
add
ljmp
cmp
inc
xchg
ret
push
inc
orl
sbb
out
loop
sbb
adc
mov
nop
push
xlat
jns
sub
push
aad
loope
nop
fwait
int3
and
ds
inc
adc
xchg
mov
pushf
cmp
mov
mov
adc
cli
mov
inc
jg
aam
rol
cmp
cmpsb
call
and
test
inc
nop
popa
outsb
and
sar
mov
call
sahf
mov
sub
jle
hlt
sub
pop
aam
mov
shrl
mov
popa
in
mov
rclb
sbb
inc
rclb
es
insl
loopne
out
lods
lahf
fsubl
mov
pop
mov
cmc
ljmp
arpl
dec
push
subb
jl
lock
addr16
and
push
sarl
adc
mov
movsb
outsb
aaa
mov
inc
adc
fdiv
mov
int3
loop
jecxz
sbb
sbb
sub
push
jg
cs
pop
fadd
fisttpl
ret
inc
insl
icebp
insb
lret
clc
xor
scas
repnz
add
mov
test
mov
add
in
adc
jmp
or
add
sbb
xchg
into
mov
xchg
cmc
inc
sub
add
addb
jg
xchg
shll
push
jl
ljmp
xchg
mov
xchg
dec
shl
fistpll
rcll
sub
loope
leave
pop
les
sbb
adc
out
xchg
and
add
cmp
xchg
mov
cs
mov
ret
les
jnp
pop
shll
pusha
and
sub
outsl
adc
jne
push
popa
das
insl
std
jg
mov
imul
mov
cwtl
aad
cmp
shrl
loop
push
fcompl
test
test
xchg
mov
pop
test
pop
call
mov
mov
shl
ja
jge
sbb
pop
roll
jb
cmpsl
add
in
mov
aad
xchg
push
fcoml
ret
iret
and
fistl
or
out
fistpll
das
nop
push
je
mov
pop
mov
sbb
inc
aas
inc
inc
xchg
pop
jecxz
in
push
pop
jb
lret
js
pavgw
or
sub
dec
ret
mov
mov
cli
push
jmp
add
jecxz
inc
mov
lds
add
pushf
adc
sbb
mov
rolb
add
cmp
mov
sar
dec
test
je
push
scas
dec
jae
dec
mov
mov
xor
imul
out
or
shlb
insb
mov
rcll
push
mov
cmp
jbe
mov
je
std
push
sarb
mov
call
int3
fdivrs
outsb
or
sbb
dec
jb
xchg
mov
mov
or
fisubrl
mov
jp
cld
jmp
xor
push
in
popf
repnz
insl
push
adc
add
push
in
mov
fs
add
lea
add
cld
pop
pop
pop
add
add
pop
or
cld
xchg
and
adc
scas
cmp
push
cmp
jbe
aas
push
mov
insb
outsb
xor
mov
mov
pop
mov
loop
rorl
add
stos
imul
mov
sti
pushf
xchg
or
xchg
cmp
aas
and
inc
inc
or
clc
shl
das
mov
adc
pop
jle
inc
jg
sub
iret
mov
pushf
dec
je
mov
notl
jo
fdivs
aas
push
add
ljmp
sub
ja
xlat
cmp
push
fstp
loop
test
push
kmovb
movsl
fcomps
jle
pop
dec
adcb
lret
pop
dec
pop
clc
pushl
inc
pop
xchg
xor
rcll
es
loope
jbe
xchg
xchg
data16
cmp
mov
fistps
adc
aaa
inc
add
jno
rcll
enter
push
pop
fadd
adcl
pop
push
cwtl
outsl
repnz
lods
jne
iret
clc
in
ja
popf
adc
stc
fisttpl
in
test
mov
daa
cmpsl
mov
dec
mov
add
lock
mov
inc
data16
outsl
ljmp
add
cmp
clc
stos
push
das
sub
ret
sub
addb
lret
jmp
fmulp
hlt
ficoml
and
push
mov
dec
in
mov
shlb
stc
add
push
cmc
es
subb
adc
xlat
jbe
mov
lcall
cmpsl
mov
ss
fildl
dec
adcl
inc
mov
sbb
xchg
add
inc
push
xchg
sub
mov
mov
sub
das
xor
ficompl
and
sub
pusha
repz
into
test
lock
bound
inc
xor
mov
fdivl
int
bound
jae
mov
loopne
and
mov
fisubrs
insb
negb
int
mov
dec
jns
inc
push
push
cld
notl
inc
pop
xor
and
mov
mov
push
cmpsb
into
dec
add
xor
jbe
inc
pop
inc
adc
sbb
add
pop
xchg
xchg
lcall
pop
mov
icebp
sarb
mov
mov
shl
out
lods
pop
in
pusha
pop
jno
jno
mov
jnp
ja
arpl
fists
mov
fistps
xor
xor
enter
outsb
add
mov
sbb
cmp
inc
sub
stos
push
inc
nop
add
jg
cmp
movsb
gs
xchg
pop
test
pop
dec
push
inc
movsl
mov
mul
lock
sbb
cmp
jo
frndint
outsl
insl
fstp
fwait
rcll
cmp
adc
dec
bound
dec
insb
movsb
mov
cld
aaa
aad
adc
cltd
jmp
jl
pop
jp
test
xchg
jbe
scas
pop
repnz
push
sub
into
pop
clc
mov
dec
dec
hlt
add
mov
inc
je
out
mov
stos
cld
loopne
ljmp
test
es
xchg
popa
lcall
ret
aaa
cli
push
mov
cmp
xchg
adc
mov
adc
stos
fdivs
cs
mov
mov
sub
inc
orb
inc
into
jmp
pop
jb
mov
ret
adc
dec
pop
pushl
xchg
in
les
nop
dec
lret
fs
add
imull
ret
aad
pop
mov
mov
inc
dec
adc
cli
xlat
fmuls
sbb
pushf
mov
outsb
sbb
push
add
jmp
and
cwtl
push
and
bound
cli
inc
mov
faddp
dec
mov
icebp
mov
hlt
add
in
int3
pushl
xor
btr
std
and
add
and
jmp
dec
in
in
jmp
inc
inc
and
jecxz
mov
fistpll
and
mov
stos
pop
inc
ss
lock
cli
std
jg
arpl
pop
repnz
out
aaa
rcrb
dec
cmp
stos
cld
test
data16
inc
imul
push
addl
sub
mov
add
adc
aad
pop
popa
mov
cmp
or
sbb
sbb
lock
mov
jg
inc
std
inc
jns
pop
xor
and
mov
cmp
inc
jl
imul
and
clc
add
insl
sbb
adc
cmc
xchg
xchg
sub
and
inc
mov
cmc
movsl
push
push
ret
inc
lar
cmp
stc
pop
fdivrs
xchg
not
or
pop
inc
out
mov
sub
fistpll
ret
or
fildll
cmc
aaa
ja
dec
push
sub
adc
jle
jnp
out
popa
notl
test
add
xchg
fidivrs
lods
int
jg
mov
and
cmp
dec
repz
dec
cmp
cmp
pusha
sub
mov
ja
mov
int
pop
out
lea
xchg
push
jl
cld
add
leave
and
les
test
dec
add
inc
cmpsb
dec
pushf
pop
push
push
dec
dec
or
out
mov
mov
lret
adc
sbb
in
xchg
inc
out
iret
xchg
adc
add
les
stos
xchg
in
cmp
sbb
pop
cmc
sub
stc
inc
subl
cmpsl
mov
mov
aaa
rcrb
adc
mov
jmp
add
sbb
aaa
push
outsl
xchg
enter
add
mov
vpaddw
push
mov
in
aam
cmpsl
mov
mov
or
and
test
sahf
in
push
cs
mov
pusha
addl
dec
fwait
fidivs
pop
adc
icebp
and
shll
pop
inc
js
cmp
fimull
ja
push
push
pop
sbb
das
dec
jbe
in
mov
pop
outsb
or
lret
lcall
in
shl
dec
pop
inc
jecxz
adc
mov
in
mov
xchg
inc
mov
enter
scas
pop
mov
std
fistpl
dec
gs
adc
sub
fsubs
push
and
jno
adc
lret
je
mov
jg
xchg
sub
rcrb
movq
sbb
or
or
lea
xchg
cli
std
in
subl
das
and
loop
jbe
lock
std
outsl
out
cmp
dec
push
xor
andb
push
daa
mov
test
jb
push
jnp
dec
push
test
sub
aas
outsl
mov
bound
jne
ds
xchg
mov
aad
cmpsb
cmpsl
xorb
bound
sbb
push
add
pop
fisttpl
cmp
push
sub
pusha
jns
or
mov
sbb
xor
jecxz
hlt
outsb
mov
out
fnstsw
adc
jns
cmp
scas
add
inc
jecxz
add
aad
mov
mov
mov
lcall
cld
pop
addb
test
pop
out
inc
mov
mov
pop
ljmp
lahf
filds
cltd
icebp
test
ljmp
jns
push
jle
mov
lcall
inc
stc
jl
push
cmc
pop
cli
push
scas
dec
ret
and
lock
outsl
jg
outsl
iret
or
ret
xchg
mov
mov
sub
shlb
out
mov
in
mov
adc
push
push
dec
push
sub
cltd
add
xchg
push
pop
incb
mov
mov
jp
cmp
sbbl
popa
mov
loope
repnz
add
cmpsl
mov
add
out
or
into
loopne,pt
movsl
adc
test
sti
test
outsl
mov
or
xchg
pop
mov
inc
insl
in
es
ds
mov
sbbb
xchg
adc
clc
test
sub
mov
daa
adc
test
cld
pop
aaa
into
push
loope
mov
adc
cmc
vunpckhpd
jno
pop
sbb
adc
pop
bound
imulb
and
lds
pop
lock
test
lret
aam
jg
stos
in
ljmp
lock
out
sbb
sbb
fisubrl
inc
cmp
xlat
cmp
mov
push
lods
das
icebp
pop
sbb
cmp
and
inc
scas
mov
imul
pop
sub
je
mov
call
mov
mov
sub
leave
add
fbstp
xchg
mov
mov
mov
ss
lret
push
outsl
sub
jg
sahf
cmp
mov
ljmp
sbb
subl
adc
sahf
test
or
icebp
mov
icebp
dec
xchg
push
mov
push
sub
xchg
andb
pop
lahf
daa
outsl
xchg
decl
jg
mov
push
dec
or
gs
mov
shlb
and
jle
jle
inc
cmp
jb
sbb
test
push
jne
or
push
pop
xchg
xchg
inc
jmp
xchg
icebp
adc
or
sti
mov
or
sub
add
or
test
unpckhps
test
add
or
in
add
sub
inc
sbb
inc
push
lock
pop
xchg
sbb
fsubrs
pop
pop
in
loopne
xchg
inc
mov
push
xor
in
pop
or
fmuls
clc
pop
mov
test
std
mov
adc
stos
sub
push
int
sbb
rolb
or
rcr
mov
dec
int
xchg
pop
push
lock
lea
test
jb
mov
imul
mov
jae
inc
inc
push
dec
lds
or
mov
mov
addr16
into
into
and
aam
lods
sar
push
lret
stos
xchg
popa
movsb
insb
out
das
mov
pop
aam
dec
cld
cmpsl
fs
out
sub
push
popf
jl
pop
sub
mov
out
loop
stc
or
lahf
loop
adc
outsl
cmpsl
pusha
sub
push
jle
cmc
sbb
mov
sti
inc
ss
aas
jle
ja
shll
push
bound
and
cli
pop
pop
loopne
xchg
and
mov
mov
xchg
fcmovnbe
mov
mov
and
mov
bound
sub
andb
test
adc
in
jl
ljmp
test
mov
mov
jmp
mov
inc
mov
mov
sbb
popf
xchg
mov
outsl
cmp
lods
test
and
push
pop
push
nop
mov
scas
mov
and
jae
rorl
inc
mov
inc
or
test
jnp
jbe
aas
mov
cltd
mov
mov
in
mov
jb
mov
or
dec
jp
aaa
adc
loop
mov
shll
clc
pop
jge
into
adc
lea
mov
jge
mov
sbb
movb
popa
push
pop
pop
scas
cltd
jl
mov
mov
mov
inc
mov
pop
idivl
adc
out
inc
lea
daa
add
les
mov
mov
pop
loop
mov
das
cmp
fmull
ficoms
dec
push
mov
addr16
stos
sbbl
jecxz
mov
mov
inc
cmpsb
cmp
mov
jb
dec
lahf
push
and
push
sub
xor
fbld
popa
filds
in
sub
sub
push
out
mov
xchg
pop
sahf
imul
ds
pop
adc
cli
stos
outsb
fstpl
aaa
rorl
mov
loop
adc
fsub
push
add
sbb
clc
or
xchg
mov
jp
cs
cmpsb
divb
push
mov
adc
aam
or
sahf
aas
mov
insl
fstp
xor
fadd
ret
sub
stos
jp
outsb
aam
sbbb
lea
xchg
sub
lahf
and
out
scas
dec
push
push
or
lret
clc
sbbl
push
rolb
jl
jbe
add
rcr
mov
or
pop
in
scas
rclb
sub
pop
and
push
in
test
lahf
arpl
push
data16
jo
xchg
dec
adc
dec
out
fsts
test
mov
shlb
addr16
jb
add
fimuls
mov
pop
imul
push
pop
push
outsl
and
dec
into
jge
in
push
popa
sub
outsb
dec
fidivrs
fbstp
adc
pop
pop
fcompl
or
aad
pop
es
and
and
mov
adc
in
sbb
out
adc
mov
aad
push
cmpsb
inc
sbb
xor
outsb
fstpt
shrl
inc
pop
pop
int
hlt
sahf
cmpsl
out
sub
jo
sbb
clc
mov
mov
in
ret
in
movsb
mov
insl
in
sub
ret
cmpb
bnd
jge
stos
rcr
jbe
and
push
daa
pop
ja
ljmp
test
xor
push
fdivrs
sub
push
pusha
inc
arpl
adc
mov
push
push
aad
pop
roll
jmp
xlat
in
ss
cld
cmovnp
xchg
sbb
mov
movsl
je
mov
mov
adc
insl
jle
xor
iret
or
or
pop
mov
cmp
shll
push
or
inc
cwtl
aas
mov
xor
push
cmpsl
sub
out
or
ss
add
cmp
mov
ljmp
jns
scas
xchg
lock
scas
into
cwtl
js
leave
cmovae
fildl
sub
add
xchg
mov
xchg
mov
fdivr
aaa
int
or
fists
xor
scas
ret
push
es
cli
lds
insl
pop
outsb
fwait
mov
jbe
fdivl
cs
fidivrl
lock
je
std
or
jecxz
and
push
jo
pop
les
aam
sbb
mov
aas
jb
ja
sbb
pop
inc
push
mov
inc
adc
bnd
addr16
mov
jg
sbb
cmp
iret
lahf
adc
pop
test
test
add
mov
dec
mov
dec
cli
cmpb
clc
push
fdivrs
lcall
nop
shll
scas
mov
and
std
aam
and
cmp
and
push
sub
into
jne
jmp
mov
in
in
insl
addr16
das
rorb
push
push
cmpsb
insb
jo,pn
mov
ret
adc
sub
add
call
andb
mov
ret
inc
icebp
in
pop
lea
bnd
adc
ss
mov
test
or
sub
out
mov
xorl
sub
pop
in
jle
adc
stos
add
rcrl
lcall
mov
test
sub
test
mov
decl
xchg
sub
fs
push
xchg
sbb
das
cld
das
adc
or
adc
sub
sbb
jg
cmp
lds
push
mov
adc
je
jecxz
mov
fs
fldenv
jno
test
pop
xchg
pop
cltd
cmp
jg
in
and
xchg
incl
jns
or
ds
jae
lea
data16
push
cwtl
sarb
push
test
dec
call
or
imul
push
std
mov
lods
aaa
push
ss
scas
push
adc
inc
add
cld
ljmp
pop
pop
psraw
fldenv
in
add
fs
mov
push
xlat
setae
outsb
std
arpl
or
pop
loop
sbb
mov
je
sbb
movsl
into
xchg
lcall
push
je
inc
jp
adc
sub
adc
push
clc
shl
scas
jno
xor
or
mov
hlt
in
daa
mov
adc
fadd
mov
dec
mov
or
dec
sbb
pushf
push
aaa
dec
clc
sbb
hlt
cs
test
out
pushl
cld
insl
lea
xchg
popa
jmp
cmpsl
push
pop
stos
enter
mov
lods
lcall
add
adc
pop
dec
pop
mov
pop
loopne
js
sbb
jno
rcll
imul
jo
dec
orb
std
hlt
pop
fdivp
push
add
sub
cld
mov
inc
and
or
sub
fwait
and
ret
cwtl
rcrl
sbb
add
rorl
outsl
cmc
push
add
outsl
jge
jo
sub
shll
cmp
adc
movb
subb
mov
out
fcoms
sub
in
hlt
rcr
sub
push
and
das
sub
mov
push
lds
jb
dec
dec
inc
bound
enter
daa
repnz
mov
xlat
sub
inc
push
arpl
outsl
insb
lret
add
int3
mov
inc
movsb
inc
daa
pop
jp
orl
xchg
dec
mov
dec
xor
fs
jmp
test
xchg
sub
add
pop
push
inc
aas
js
lock
push
jae
cmpsl
mov
mov
jmp
mov
push
inc
dec
dec
jb
das
inc
mov
push
jmp
ds
jmp
adc
inc
jmp
push
jge
or
stc
sub
jle
hlt
fistpl
pop
jge
mov
lahf
dec
sbb
pop
sbbb
lcall
pushf
pusha
xor
iret
ret
outsl
aam
fistpll
icebp
lds
jecxz
jle
pop
lcall
shrl
addr16
xor
push
sub
ja
mov
and
add
push
fldl
jmp
mov
addb
mov
outsb
pop
mov
stc
scas
jge
adc
nop
mov
cmpsb
fldl
pushf
outsl
lock
cmp
fcoms
jno
or
mov
xor
lods
in
sbb
jl
or
jns
outsl
pop
call
lret
lds
push
xchg
jb
mov
mov
movb
es
data16
decl
jge
xchg
fcoml
stos
and
cltd
lret
incl
call
lcall
imul
daa
sub
jl
mov
cmp
int
jp
mov
sub
and
les
cld
inc
data16
sub
mov
inc
mov
xlat
in
mov
jmp
cwtl
xchg
xchg
aam
in
jg
mov
push
fdivs
das
mov
sahf
lcall
fs
and
rcr
addl
insb
xchg
movsl
js
xor
ljmp
mov
sub
test
cmp
js
jnp
mov
mov
pop
push
sbb
aas
and
repnz
xchg
pop
inc
cmp
jbe
mov
cmp
lcall
xchg
stos
xchg
xor
jmp
inc
sbb
dec
inc
add
and
nop
dec
mov
pop
cwtl
aad
arpl
push
leave
cltd
loop
mov
pop
call
inc
pop
inc
and
add
adc
rcrl
pop
andb
fs
lcall
inc
xchg
bound
mov
push
jne
mov
dec
mov
cmpsb
push
out
scas
std
jecxz
jge
cmp
and
push
fldt
les
bound
sbb
sub
ret
cmp
push
fnstenv
pop
cld
inc
mov
push
xchg
pop
xchg
mov
and
divl
or
jmp
mov
mov
imul
in
decl
scas
cmp
jp
fwait
jle
inc
test
mov
sub
add
incl
jnp
scas
sub
jmp
xchg
sbb
mov
cmp
movsl
movsb
mov
sar
dec
data16
into
stos
adc
cld
not
test
or
orl
call
mov
adc
out
dec
sbb
subl
sarl
cs
lcall
daa
pop
cmp
lret
repz
dec
into
mov
xor
ljmp
pop
scas
dec
scas
or
push
xchg
sbb
sub
inc
je
mov
jbe
aad
loopne
lahf
movb
mov
jo
push
pop
ds
or
rol
in
sti
inc
fcomp
mov
push
fldenv
pop
jb
rcrb
cld
fwait
or
mov
cmpsb
call
jecxz
push
fdivs
cwtl
xchg
xlat
cmp
lcall
pop
add
test
ret
or
sbb
punpckldq
stos
popa
out
cmc
dec
fsubrs
inc
outsl
cmp
dec
inc
sbb
add
inc
ret
movsb
mov
fbld
stos
mov
flds
or
add
inc
nop
les
fcmovb
in
out
xchg
jmp
aad
jno
hlt
aas
call
adc
decl
fsubs
dec
pop
adc
mov
cli
mov
or
xchg
xchg
mov
pop
adc
int
mov
pop
mov
lea
ljmp
std
idivb
push
dec
nop
inc
shrl
xor
jno
add
ljmp
jns
je
cmp
clc
jmp
hlt
and
mov
or
fisubl
jmp
mov
inc
jne
je
push
loop
lods
xchg
push
dec
add
xchg
lcall
aam
dec
fcmovnb
aam
aam
xchg
mov
adc
cltd
xchg
push
mov
clc
push
or
not
loop
fisubrl
out
sti
fwait
or
inc
cld
lcall
scas
int
sub
jne
xor
fwait
sbb
xor
sub
push
xchg
mov
inc
js
dec
negl
or
rcr
jle
clc
incl
pushl
fwait
jecxz
cmpsb
or
xchg
adc
jnp
dec
outsb
outsb
push
ljmp
xor
movsb
or
adc
adc
shlb
xchg
aad
jmp
or
cld
std
mov
jge
lret
cli
mulb
sbb
jae
and
std
ljmp
xor
das
adc
pop
mov
aas
jne
enter
or
out
xchg
decl
push
dec
clc
inc
push
lods
and
jg
jmp
lahf
bound
dec
xor
adc
lcall
dec
jns
jno
push
add
les
cltd
jmp
rcrl
mov
inc
shl
or
cmp
jae
push
jg
push
lret
es
stc
add
xor
jp
jno
jmp
push
fwait
lods
add
test
mov
jle
jg
mov
adc
inc
shlb
lret
imul
decl
mov
sbb
ret
negb
jge
pop
imul
decl
mov
js
jecxz
lahf
mov
outsb
inc
fimuls
mov
and
push
into
lods
dec
jle
xchg
xor
popf
into
adc
xchg
jne
cmpsl
jns
inc
dec
sahf
fcomps
scas
loop
push
incl
add
pop
cmp
nop
dec
cmp
incl
incl
pusha
push
jno
and
lcall
jbe
nop
cs
jg
orb
lods
cli
sub
pop
xchg
cli
mov
rcrb
adcl
leave
fildll
pop
xlat
pop
pusha
lods
mov
sti
mov
jp
xchg
mov
sub
pop
lcall
das
xchg
pushf
mov
and
clc
call
in
loopne
sub
dec
test
cltd
xchg
pop
mov
fstl
pushl
mov
dec
popa
js
jge
inc
dec
or
stos
inc
sti
adc
ljmp
pusha
daa
cli
fists
sub
sbb
adc
int
popf
pop
movsb
sbb
adc
pop
lcall
out
mov
in
xchg
out
and
mov
push
lcall
mov
jecxz
adc
push
adc
xor
incl
cmp
lds
lcall
out
pop
pop
test
cmp
mov
mov
ljmp
push
mov
lea
into
aam
cmp
dec
and
insb
sub
hlt
ljmp
std
jnp
daa
inc
inc
dec
mov
ret
rcrl
cmp
or
outsb
mov
sbb
or
cmp
fldcw
mov
loopne
add
push
dec
mov
inc
dec
sub
out
mov
mov
lret
sub
rcll
add
cmp
xor
pop
outsb
test
jb
out
and
push
repz
jl,pt
jno
inc
jecxz
lret
mov
fistpll
mov
push
enter
sub
pop
je
call
pop
add
inc
mov
xor
shrb
icebp
dec
mov
cwtl
es
mov
in
xchg
test
lods
in
mov
pop
sbb
jns
pop
cmc
call
in
lcall
fildll
pop
pushf
out
pop
in
push
mov
lcall
jmp
mov
aad
sub
mov
jne
leave
push
adc
in
outsl
and
ljmp
mov
es
int3
loopne
adc
add
scas
cmp
das
mov
jecxz
pop
je
jo
jecxz
lods
iret
fsubs
bound
nop
xchg
dec
jns
mov
incl
pop
lods
dec
loopne
loopne
popf
shrl
push
cmpsl
lcall
inc
inc
sarb
cmpsb
pusha
cmpsl
aaa
ljmp
aaa
fwait
stos
mov
adc
pop
ret
ret
pop
or
rcl
pop
mov
mov
nop
inc
out
cmp
or
movsl
mov
mov
aas
jns
test
loop
fisubrs
mov
mov
jmp
std
fidivrs
inc
pop
push
or
mov
aaa
fldt
mov
cmp
mov
fimull
cld
ljmp
cwtl
aas
dec
notb
mov
outsw
xor
es
and
inc
add
incl
xchg
sahf
mov
subb
mov
mov
dec
adc
mov
in
mov
fs
in
and
jmp
mov
pop
icebp
mov
mov
lods
fidivs
push
lcall
and
outsb
inc
inc
lock
push
xor
sbb
jg
iret
pop
ljmp
popa
imul
movsl
mov
call
push
adc
push
loopne
sbb
pop
rcrl
iret
pop
adc
adcb
pushl
push
repnz
test
and
jmp
push
out
cmc
mov
or
lods
rcrb
cltd
sub
or
sub
fmull
inc
mov
imul
icebp
xor
cwtl
ljmp
xchg
pop
repz
jo
mov
sbb
dec
push
push
jae
test
sub
es
jg
rclb
pop
jb
js
jmp
pusha
ds
adc
in
lcall
push
movsl
cld
int
js
into
push
aas
jns
push
out
pop
and
insl
mov
add
and
or
insb
xor
std
je
add
and
stos
add
cmpsl
lret
mov
push
dec
lock
subb
icebp
aad
arpl
inc
adc
or
jo
dec
js
jmp
pop
leave
xor
outsl
scas
cli
and
inc
sbb
push
lods
add
int3
cs
mov
pop
sub
ret
dec
inc
dec
push
xchg
add
sub
fidivl
in
inc
xor
jge
ljmp
cmpsb
shrl
jae
jns
sub
sbb
incl
dec
daa
pop
lahf
rclb
sbbl
cld
pop
mov
push
fcos
ljmp
outsb
daa
test
test
arpl
mov
inc
add
inc
jo
pushf
pop
xor
out
mov
test
clc
call
pop
and
and
sahf
call
xchg
and
stos
subl
push
fs
scas
mov
pushl
aas
mov
and
adc
rcrl
cmpsl
cmp
leave
inc
mov
jg
jg
incl
jb
or
jns
mov
push
mov
jae
jg
lcall
inc
and
in
rcr
push
outsb
jb
scas
nop
or
out
push
inc
pop
cmpb
sarl
jns
dec
sti
loop
das
jnp
mov
mov
call
ret
mov
jb
cld
push
push
test
inc
incl
add
fcmove
xor
insl
aas
push
cltd
mov
inc
cli
sub
cld
lcall
ret
mov
xchg
in
insl
nop
jge
lea
inc
rclb
jno
adc
dec
popl
inc
dec
inc
cmpsl
push
jno
cmp
pop
xor
cmp
add
xchg
or
decl
lds
ss
dec
mov
dec
mov
dec
inc
test
shrl
inc
lcall
icebp
outsb
repnz
push
clc
mov
std
pop
push
js
and
in
sub
js
mov
call
testb
aam
out
dec
inc
data16
xchg
push
roll
decl
push
sbb
out
jno
pop
sub
push
in
pop
les
fbld
andb
sub
push
repz
sub
test
divl
sbb
mov
mov
aam
ljmp
fwait
push
jle
out
mov
enter
xor
jne
sub
mov
mov
stos
cmc
xor
outsl
cmp
mov
lret
or
std
es
pop
test
push
xchg
push
outsb
push
mov
out
sar
outsl
cmc
jg
cmp
mov
and
out
daa
pop
cmpsl
push
test
sbb
jg
jg
loopne
mov
mov
jge
out
loop
cld
xor
inc
dec
push
cmp
mull
dec
xchg
stos
sbb
or
fldcw
inc
adc
out
jns
dec
fsubs
xchg
pop
mov
xchg
adc
dec
cmpsb
insb
push
mov
lods
and
inc
cli
push
dec
shll
inc
sbb
jg
cltd
iret
pop
mov
adc
adc
xor
cmpsl
outsb
lock
jmp
scas
shll
fwait
clc
icebp
mov
jg
push
mov
fnstsw
outsl
hlt
repnz
ds
push
sub
pop
add
lcall
jb
je
mov
push
push
addb
gs
insb
add
mov
add
ljmp
test
sub
mov
jbe
pop
jp
xor
jo
cltd
lcall
pop
pop
cwtl
clts
call
cmp
mov
adc
and
std
clc
les
cwtl
incl
mov
aad
or
xchg
sub
cmp
ds
lcall
sub
mov
je
add
loopne
fisubrs
adc
xor
xchg
ret
or
jg
ljmp
je
adc
cmp
js
jmp
push
adc
xchg
mov
pushl
js
sahf
leave
push
and
mov
adc
lods
cld
jns
inc
mov
sbb
test
aas
pop
pop
and
inc
jo
jbe
cmpsl
loopne
pushf
inc
aaa
cli
call
jmp
cltd
ds
cmp
es
pushl
xor
jmp
xchg
inc
nop
push
push
xchg
xor
jge
or
xchg
jmp
out
aad
mov
add
fstpt
sub
xchg
roll
mov
xchg
out
shlb
fdivl
mov
cmp
ja
mov
lcall
dec
dec
inc
mov
push
xor
mov
xor
and
jmp
adc
mov
outsl
aas
idivl
loop
pop
jecxz
sub
or
mov
test
or
pushl
xorl
in
or
stos
mov
xchg
dec
sub
lock
jmp
jb
mov
jle
xor
inc
cmp
pop
popa
xlat
pop
pusha
lods
mov
out
sub
cmp
sub
pop
fucomip
pushl
movsb
lcall
daa
mov
or
xchg
jle
push
mov
out
mov
outsl
push
mov
pop
or
sar
jbe
pop
daa
enter
sub
push
push
pop
mov
jbe
imul
adc
jg
shr
lcall
movsb
push
fnstcw
js
mov
cwtl
imull
out
mov
cmpsl
das
jne
decl
icebp
xchg
xor
jne
in
std
xchg
cmp
inc
pop
xchg
fiaddl
inc
mov
fwait
adc
imul
dec
pushl
in
sbbb
loope
pop
jae
fnsave
test
xor
and
pop
call
cltd
pop
cld
sub
dec
push
jo
movsl
enter
fisttps
test
mov
out
cltd
sub
pop
jg
mov
shlb
push
imul
jge
hlt
mov
in
jl
cmp
imul
imul
adc
decl
les
iret
or
sbbl
push
push
movsl
call
jo
test
dec
adc
adc
leave
clc
fcompl
dec
insb
rcrb
rolb
and
insb
mov
mov
or
cmp
mov
and
idivl
lcall
fucom
fidivs
cmpb
and
les
ljmp
jae
incl
mov
das
js
sti
test
dec
add
pushl
mov
iret
jne
pop
push
push
call
aaa
out
test
rcr
pop
jl
sar
call
cmpsb
cld
mov
sbb
push
push
push
adc
inc
out
push
mov
in
ljmp
cmc
jecxz
ljmp
jbe
pop
pop
sub
pop
cmp
mov
push
cmp
jb
push
pop
aaa
xor
mov
bound
adc
xor
dec
aad
push
mov
ljmp
pusha
push
ja
cltd
sbb
pop
shlb
xchg
or
lods
pusha
push
js
jne
pop
push
pushl
dec
mov
xor
out
aad
inc
adc
shl
std
jno
adc
mov
adc
xor
sti
pushl
gs
movsb
sub
inc
outsb
sbb
test
mov
dec
fsin
adc
into
mov
lret
mov
xor
add
adc
cmpsb
jbe
movups
mov
jmp
jmp
lods
std
in
mov
idivb
push
sbb
cld
testb
in
ljmp
mov
loop
push
inc
push
mov
mov
popf
shlb
call
push
mov
mov
mov
popa
push
jnp
jno
mov
sar
sub
xlat
es
repz
movsl
ljmp
pusha
cld
jbe
popf
fs
insb
add
xchg
in
xor
and
sbb
data16
push
jae
pop
sarb
inc
cmp
xchg
xor
ljmp
ret
inc
in
lret
xor
cli
xchg
jnp
shrb
and
movsl
pop
ficoml
fwait
xchg
pop
and
xor
das
cmp
cmpb
sar
into
arpl
xor
and
ljmp
jbe
xchg
xor
lds
push
hlt
dec
cmpsb
mov
lcall
outsl
hlt
pushl
mov
cli
mov
sbb
cmpsl
call
imul
popa
mov
in
push
rcrl
push
lahf
data16
xor
sbb
cwtl
out
out
insb
lds
jg
addl
sub
mov
clc
loopne
test
fs
dec
or
pusha
pushf
int3
mov
mov
insl
aam
fmull
ficompl
call
push
testl
push
addr16
sub
xchg
daa
incl
and
cltd
and
incl
in
pop
fwait
xchg
adc
shrl
ficoms
call
mov
fcompl
mov
aam
jp
in
mov
ja
sahf
cli
sbbb
fidivrs
sub
pop
std
mov
lock
push
mov
fnsave
out
shrl
ljmp
and
pushf
ret
cwtl
or
push
fcomps
mov
push
cmp
pushl
push
sbb
push
push
fstl
xlat
shll
jne
lock
movsl
movsl
mov
test
std
insb
rcll
test
cltd
pop
sarl
call
je
mov
ds
lods
enter
fstpl
add
mov
shl
and
inc
loop
ljmp
push
sub
mov
adc
cltd
outsl
mov
call
hlt
cmovnp
jg
stc
das
inc
add
pop
sub
xor
or
cltd
test
stc
jmp
xor
insb
in
sub
and
call
call
or
sar
xlat
loop
dec
imul
mov
jbe
loope
mov
das
xorb
jle
call
add
outsl
adc
jg
xor
push
fwait
jne
mov
push
dec
pop
mov
jl
jp
adc
std
dec
add
repz
sbb
movsb
data16
sub
decl
xchg
clc
addr16
rcrb
clc
fsubl
gs
mov
lcall
movsl
mov
and
mov
jecxz
lds
cmpsl
and
pop
aaa
cli
ljmp
mov
cmp
and
dec
add
and
fcoml
arpl
incl
pop
xor
or
repnz
inc
jg
stc
xor
inc
xor
adc
out
fcoml
ret
loop
call
jae
mov
mov
jp
xor
mov
loope
lcall
sub
lret
imul
pushf
leave
inc
push
push
daa
dec
mov
mov
jecxz
jnp
jle
int
stos
stc
mov
dec
mov
cli
out
add
and
shlb
call
shlb
lret
int
jmp
es
dec
test
pop
adc
outsb
add
xor
inc
popf
inc
adc
stc
sahf
mov
cli
imul
in
test
dec
and
ljmp
jg
pop
nop
xchg
test
mov
xor
cli
das
hlt
sub
sub
arpl
in
out
mov
lcall
xchg
test
loop
lea
add
or
sub
insb
dec
dec
cmp
cmc
pop
sbbl
insb
jno
and
cmp
shll
and
xchg
enter
mov
ljmp
cmpsb
xor
inc
imul
and
or
shrb
or
rcll
dec
popa
divb
mov
or
cltd
sub
push
push
and
insb
gs
push
loop
leave
mov
dec
scas
movsb
jp
sbb
hlt
dec
stos
lds
lods
cmp
ja
ljmp
jle
into
jp
repnz
pop
lret
fs
roll
and
adc
popf
loopne
mov
mov
sbb
lea
or
aaa
pushl
adc
cmpsl
pop
mov
add
pushf
data16
shl
inc
push
movb
push
outsb
adc
loopne
incl
pop
out
adc
stos
xor
nop
xor
dec
cld
pop
dec
and
loope
in
fists
jge
cli
outsb
ljmp
dec
push
mov
jl
add
ret
notb
daa
je
fs
popa
decl
push
adc
sarl
pop
cmp
mov
xor
sub
dec
mov
je
lock
mov
add
xchg
xchg
lock
jns
pushl
mov
movsl
mov
push
cmp
out
lock
incl
std
adc
sar
inc
mov
repz
pop
sub
andb
push
mov
xor
xchg
inc
movsb
das
aam
jp
test
daa
rorl
std
jl
roll
inc
and
addl
imul
pushl
cltd
dec
lret
arpl
pop
scas
lods
adc
sti
xor
loopne
std
xchg
fisttpl
aaa
in
mov
iret
push
xor
lret
aad
add
das
adc
out
xor
push
xor
mov
bound
out
xchg
in
in
jmp
adc
int
lods
test
fists
std
push
cmp
pop
clc
ljmp
cld
jo
fdivrs
or
mov
sbb
into
sbb
cmp
dec
pop
cmc
repz
mov
das
cmp
or
test
mov
sub
jg
xor
lods
and
insl
pop
mov
in
cmp
mov
bound
jnp
cmp
pop
sbbb
and
sbb
adc
pop
or
stos
dec
xlat
xor
sub
or
fs
sub
das
cld
lcall
inc
aas
arpl
cmpsb
cmc
or
incb
rol
and
ljmp
pop
popf
jp
fdivr
jle
jbe
clc
push
mov
mov
mov
outsl
sub
iret
stos
aam
add
sbb
mov
cmp
jmp
mov
iret
dec
iret
mov
rorl
scas
mov
inc
xor
je
add
xor
inc
addr16
mov
shrl
dec
pextrw
mov
ja
incl
lods
pop
add
jecxz
pop
jne
ja
xchg
pop
out
leave
mov
sub
pop
xchg
mov
dec
aam
sbb
aam
fwait
out
cmp
xor
insb
orb
mov
es
sbb
aaa
xchg
sti
imul
inc
push
push
pushl
scas
push
jle
xchg
jp
clc
sub
test
test
xchg
jne
cltd
mov
push
pop
sar
jg
incl
mov
pop
shrl
xchg
sub
mov
popa
mov
cli
jg
jmp
add
je
data16
cmp
xchg
and
adc
repz
cmp
add
repnz
jg
aaa
inc
rcll
inc
dec
repz
xchg
adc
in
jp
sbbl
or
pop
hlt
xor
jne
cmp
dec
and
lcall
sub
mov
aas
frstor
notb
icebp
incl
call
adc
scas
dec
sbb
pop
in
sbb
fnstsw
pop
loopne
pop
ss
mov
clc
mov
adc
pop
and
icebp
jbe
xchg
repz
jmp
mov
push
adc
jbe
out
in
inc
push
mov
out
sub
sbb
incl
repz
sub
xor
push
in
sti
icebp
paddsb
scas
das
negl
test
call
cmp
or
mov
negb
mov
ret
out
xchg
inc
push
aad
sub
ret
push
ja
decl
rdpmc
das
dec
sub
pushf
out
lock
jl
arpl
sbb
out
adc
test
jg
xor
bound
jb,pt
call
jg
or
xchg
push
jbe
pop
in
xchg
lcall
sub
xlat
xchg
les
bound
mov
aam
mov
sar
pop
cmc
add
cmpsb
nop
xchg
inc
cmpsb
push
iret
push
imul
mov
mov
cltd
cld
xchg
sbb
mov
xor
inc
rcll
dec
inc
nop
pop
ljmp
les
in
sbb
xchg
cld
pop
push
sbb
push
jge
insl
and
test
pop
movaps
xor
pushf
aaa
jmp
sub
dec
in
aad
aaa
pop
pop
je
add
cmp
test
scas
out
das
cmc
jg
adc
lret
push
sbb
push
fucompp
adcl
fiadds
pop
shlb
push
sbbb
mov
jmp
fsubrp
adc
loopnew
pop
mov
shll
fiaddl
cmp
push
ljmp
inc
movsl
dec
mov
scas
faddl
pop
fistpl
mov
call
and
push
fwait
adc
fadd
pop
push
cli
sub
insb
lea
jne
push
call
mov
cmpsb
fiaddl
rcr
outsb
mov
pop
lcall
psllq
add
cmpb
push
clc
shrb
gs
inc
and
sub
ss
jg
out
mov
mov
sahf
xor
out
std
decl
dec
popf
xchg
lret
xor
sbb
aas
enter
cmp
leave
cmp
enter
push
push
jbe
pop
stos
mov
cmp
cmpsl
push
scas
xor
sub
push
mov
fmul
jno
cmp
lret
aas
fildll
out
outsl
icebp
push
fs
xor
or
leave
fnstcw
dec
push
sahf
loopne
or
aaa
add
cli
lods
mov
roll
jl
pop
jmp
iret
aaa
int3
xor
sub
stos
jns
push
sti
das
cmc
call
push
fadd
xchg
inc
shr
fucomip
ret
arpl
js
insb
call
mov
push
jl
ds
mov
and
sbb
jl
push
jg
pop
call
jp
or
mov
sub
and
lcall
push
sub
push
mov
sbb
and
iret
jbe
les
push
jg
sub
pop
lret
in
in
scas
inc
rol
push
push
sub
fnstcw
and
ljmp
and
aad
jbe
cs
cmp
mov
hlt
fbld
xchg
jae
jne
int3
lods
scas
loope
ret
hlt
add
sub
mov
mov
xchg
push
leave
lret
fstpl
or
js
fistpl
cld
jg
jb
mov
push
pop
jl
fs
sub
sbb
stos
sub
and
or
lea
sbb
lahf
lret
mov
call
clc
call
in
arpl
repnz
ljmp
movsb
jbe
ret
adc
lcall
orl
mov
mov
mov
pushf
imul
iret
movsl
push
add
jne
pop
mov
iret
pop
int3
push
adc
mov
mov
call
out
jecxz
iret
imul
adc
sbbl
js
data16
dec
lods
and
cmp
out
fcomps
xchg
mov
gs
je
das
std
mov
pop
xchg
mov
std
cmp
mov
testb
mov
mov
into
in
jl
lea
out
decl
pop
cli
push
pop
repnz
cmpsl
mov
out
stos
std
xor
mov
jmp
ljmp
mov
pop
popf
add
call
ja
fsincos
dec
icebp
lods
aam
push
pop
xchg
js
xor
adc
stc
outsl
fcomi
jae
mulb
std
push
daa
add
xchg
add
jmp
or
jl
enter
pop
jl
mov
lcall
orl
clc
sbb
popa
dec
push
dec
stos
adc
mov
sbb
sbb
movsl
decb
lds
movsb
adc
mov
push
repz
lcall
aaa
lret
mov
inc
pusha
dec
push
or
lock
push
and
and
pop
insl
sbb
jg
fidivl
outsb
std
jg
jb
or
dec
inc
push
into
pop
incl
scas
mov
clc
jge
sub
mov
in
imull
es
adc
adc
lcall
aad
xchg
pop
out
inc
jo
cmpsl
dec
push
cmp
pop
jecxz
es
pop
enter
icebp
jmp
fpatan
and
out
sbb
jbe
lock
xor
jo
cmpsl
int3
cmp
push
sbbl
into
add
imul
dec
cli
aas
mov
sti
mov
push
mov
and
mov
jne
aam
mov
test
lcall
nop
mov
rcrb
std
ret
fbstp
mov
adc
shr
and
pop
cmp
das
cld
or
dec
add
fildl
sub
add
push
call
inc
cmp
cs
xor
clc
xor
mov
arpl
aaa
jp
push
popa
lahf
std
and
mov
mov
cmp
inc
and
dec
add
lcall
pushl
in
xor
jae
loope
cmp
flds
pushf
pmullw
stc
ficompl
outsl
aad
jp
xchg
je
and
pushf
sahf
out
fsubl
sbb
or
xchg
push
pop
fsubs
orb
jnp
ss
or
xor
and
sbb
rcrb
cmpl
stos
sbb
xchg
sub
in
add
negb
cmpsb
lcallw
jmp
int3
xchg
xchg
loopne
inc
fdivl
mov
sub
fisubrs
sub
xor
jg
xchg
pop
jecxz
test
cmc
or
incl
mov
mov
mov
je
pushl
pop
sbb
fxch
aad
decl
push
push
pop
outsl
push
adc
push
repnz
cld
mov
pop
movsl
sub
test
mov
mov
lahf
xor
pop
pop
xchg
clc
lcall
in
mov
xorb
roll
dec
add
lcall
sbb
fisttpll
nop
dec
lret
push
incl
jae
decl
cltd
lock
and
stc
cmp
sub
cwtl
push
sarb
shrl
test
mov
imul
and
pop
nop
cmpb
jp
adc
leave
into
mov
incl
sub
fs
mov
jg
shr
adc
repz
push
or
adc
add
mov
aaa
clc
jg
fbstp
and
push
rcr
push
and
mov
lcall
jnp
cmp
mov
jecxz
mov
lret
adc
repnz
or
bound
decl
dec
xchg
jecxz
iret
add
in
ss
mov
ljmp
das
dec
dec
hlt
fisubl
lcall
inc
test
ret
aad
push
pop
repz
ret
push
std
jns
rcll
sbb
dec
ret
daa
push
int
adc
and
test
sub
and
pushf
and
pop
lods
xchg
iret
push
or
out
int3
aaa
jge
xor
jg
clc
pushl
loope
jb
xchg
lea
dec
aad
inc
in
subl
cmp
lds
pop
mov
or
dec
sahf
js
stos
dec
ss
ss
xor
arpl
ds
xchg
cli
decl
sub
hlt
push
push
sbb
mov
xor
aad
inc
jmp
fnstsw
in
cld
and
hlt
pop
or
addr16
das
jne
mov
fcom
pushl
clc
lcall
sahf
leave
mov
in
xchg
push
mov
dec
ss
ljmp
les
jne
in
mov
mov
shrl
js
cmc
icebp
pop
test
jo
jno
push
hlt
jns
push
fs
jg
jge
mov
jb
fisubl
push
xchg
mov
dec
and
sub
jnp
ret
xlat
jg
lcall
hlt
and
adc
sbb
mov
jne
repnz
out
sahf
popf
mov
push
mov
cmp
cmp
push
pusha
pop
adc
lea
mov
call
jl
ja
das
add
or
gs
inc
mov
mov
in
push
jmp
jmp
and
adc
loope
clc
pop
out
mov
jo
ss
lcall
xorb
pop
add
lea
jp
hlt
or
sahf
cmp
mov
in
rorl
ret
pop
push
and
test
cmpsb
arpl
jmp
popf
add
cmp
in
repz
fistl
inc
testl
ljmp
rcrl
xor
aaa
mov
pop
pop
lods
lcall
mov
sub
or
stos
loope
xchg
movsb
pop
xor
mov
addr16
jg
addb
sub
push
jp
lock
xor
int3
in
jo
mov
call
cmp
insl
add
jge
inc
inc
pop
decl
push
popf
insb
jb
inc
inc
mov
incl
adc
shl
and
leave
loope
adc
aaa
push
xchg
dec
call
hlt
pop
pop
mov
jmp
pop
jp
add
and
test
lcall
mov
stos
cmp
aam
push
fisttpll
mov
hlt
test
inc
lods
lcall
scas
mov
pop
imul
fiaddl
lret
jecxz
pop
stc
aaa
clc
call
loopne
pusha
in
dec
stos
arpl
xchg
pushl
jl
repz
jae
popa
fbstp
and
xor
jne
jmp
pop
in
inc
inc
stos
rolb
lahf
sub
fcoms
xor
pushl
pop
data16
out
jb
lcall
jae
fsubs
outsl
and
jo
js
in
stos
loope
mov
mov
adc
jmp
gs
inc
inc
testl
rolb
scas
js
stc
sub
andl
sbb
loop
gs
add
cmc
in
ljmp
fadd
fs
or
pop
xlat
insb
movsl
jno
and
pop
ja
mov
jns
fcoms
xchg
push
jl
mov
xchg
mov
xor
cmp
inc
out
pop
sahf
incl
jge
jne
or
outsb
ss
or
mov
flds
add
fistpl
sub
subl
incb
outsb
lret
xor
clc
pushl
mov
ja
fistl
push
jne
jl
mov
fistpl
mov
incl
sbbb
fstpl
inc
cmp
add
aad
scas
xchg
adc
outsl
lock
jge
mov
xor
stos
loop
push
loopne
and
jmp
fs
or
adc
pop
xlat
pop
jbe
mov
xor
add
test
jns
fnstcw
arpl
in
sub
push
mov
incl
add
sub
xor
sub
adc
lcall
mov
dec
jno
mov
mov
aas
mov
adc
mov
call
cmc
popf
sbb
pushl
inc
pop
and
xchg
sbb
mov
jle
mov
ret
mov
xor
sarl
add
pop
xor
cmp
das
decl
arpl
pop
jnp
sahf
xchg
lods
int
cmpsb
out
mov
js
sbb
jo
cli
mov
adc
adc
push
decl
mov
ud0
clc
addr16
dec
orl
fucomip
mov
std
xchg
mov
push
call
pop
or
sbb
jg
pop
subb
dec
push
out
std
fs
mov
mov
js
mov
mov
call
test
iret
js
loope
push
out
pop
outsl
cmc
fucomip
mov
pop
xchg
cmp
clc
cs
jns
or
dec
adc
inc
sar
decl
mov
pop
inc
mov
cli
xchg
push
in
pop
pop
mov
sahf
dec
xchg
cld
decl
jb
loope
pop
cmpsb
mov
mov
stos
lcall
sub
out
push
ljmp
jbe
sub
lret
test
mov
mov
int
pop
ret
call
nop
js
inc
pop
sub
jo
ds
add
sub
decb
div
decb
lahf
test
scas
loopne
dec
push
xchg
sbb
decl
adc
jmp
pop
cmp
insl
cmpsl
fsubs
cmpl
adc
jne
shll
sarb
jg
std
fmuls
cmp
sarb
jl
in
movsl
popl
push
loop
adc
test
mov
ljmp
icebp
mov
jg
push
dec
jmp
mov
leave
cmp
add
std
aas
cli
pushl
sbb
push
insl
icebp
arpl
leave
in
mov
cmpb
sbb
inc
std
pop
mov
ss
sub
andl
call
cli
lahf
call
push
jle
mov
mov
clc
outsl
lock
jnp
jne
sbb
orps
cmp
add
cmp
pop
ret
sbbb
mov
jno
xchg
mov
ret
mov
jmp
aaa
jae
and
sub
fmull
sub
xchg
orb
call
loopne
xor
mov
mov
xor
cmpsb
or
cld
out
cld
decl
rorb
xor
jae
and
push
sbbl
push
inc
ficompl
cld
loope
xor
cmp
lcall
mov
and
push
pop
sbb
aam
repnz
notl
mov
aas
insl
push
pop
xchg
inc
pop
loopne
dec
xchg
mov
lahf
repnz
daa
stos
gs
fwait
decl
outsb
sbbl
push
imul
dec
jmp
outsb
jecxz
aas
jmp
mov
js
iret
enter
jo
inc
les
jge
arpl
fdivl
outsl
repz
dec
ljmp
insb
mov
outsb
jns
pop
test
mov
aam
jmp
jg
stos
and
pop
adc
or
rcll
or
mov
cs
and
leave
mov
jmp
mov
sub
jne
movb
loope
into
fwait
rolb
jns
mov
xchg
fwait
mov
or
and
add
inc
pop
ret
jmp
ror
jl
loop
test
mov
xor
cltd
mov
adc
decl
out
add
lahf
movsb
fisttpll
cmpsl
test
push
jg
adc
loope
in
mov
daa
lods
xchg
repz
sub
in
insl
mov
xchg
out
shl
out
cli
lcall
std
adc
pop
movsl
cmp
xor
insl
push
imul
int
out
jo
imul
and
subb
call
repnz
push
pop
adc
cmp
jge
jge
xorl
or
xlat
sbb
adc
in
mov
lea
adc
add
lahf
mov
das
cld
mov
loop
fldt
mov
push
pop
sub
insb
cmc
mov
outsl
icebp
stos
jmp
xlat
xchg
push
subb
push
test
and
loop
ljmp
xorb
push
outsb
cmc
adc
sbb
xchg
test
popa
scas
nop
dec
jg
dec
push
cmp
pop
xchg
scas
rclb
fisttpl
sbb
mov
fidivrs
mov
mov
cld
nop
add
pop
clc
xchg
cli
inc
movsb
insb
leave
test
push
idivb
cmpsl
push
lods
xlat
or
insb
pop
cltd
jno
cwtl
xor
fisttps
jp
pop
adc
into
mov
je
lcall
jp
xchg
pop
aam
cmc
into
das
dec
inc
cmp
sub
cmp
ds
gs
das
inc
call
cld
xor
into
xor
push
insb
cmp
push
mov
xlat
sbb
mov
lret
movups
shll
cmc
arpl
das
icebp
pushf
inc
insl
inc
cmp
bound
inc
mov
aas
in
push
inc
incl
inc
push
sbb
xchg
mov
or
gs
test
or
call
aam
cltd
cwtl
cmp
dec
or
ljmp
push
cmp
cli
mov
add
push
mov
sbb
ret
mov
pop
stc
jno
je
xchg
ss
or
call
daa
adc
pop
pop
loopne
xor
int
jp
rorb
jge
fstpt
lcall
out
sub
movsb
xchg
rol
adc
dec
xlat
xor
sbb
ror
sbb
loop
call
insl
ljmp
loopne
pop
xor
ret
clc
or
fnstcw
xchg
jmp
pushl
clc
daa
lods
push
push
ss
dec
outsl
xorl
push
cmc
mov
push
das
inc
cmp
dec
std
jae
nop
mov
arpl
pop
movsl
das
mov
xlat
insl
pop
adc
inc
sbb
pushl
addb
sti
into
pop
adc
inc
adc
ret
fsubrl
fstl
sbb
mov
xchg
or
hlt
pop
push
jl
fucom
jg
ljmp
inc
outsb
fdivrs
mov
mov
icebp
pop
cld
fistpll
add
scas
outsb
add
lcall
ljmp
test
push
and
cmpsl
loop
mov
cmpsl
hlt
inc
dec
dec
cmp
mov
inc
mov
incl
ss
add
cmp
or
push
pushl
int
inc
sbb
out
lcall
sbb
xorl
push
leave
ljmp
cmp
pop
xchg
gs
sub
xchg
in
push
jbe
cs
inc
push
aad
mov
inc
or
cmpsb
ret
incl
sub
pop
mov
ljmp
dec
xchg
cltd
popa
insl
cmp
fdivrs
nop
mov
mov
ret
push
mov
movsl
jp
lcall
cld
fimuls
pop
xorl
bound
and
pop
xchg
mov
rcr
mov
js
xor
flds
jns
clc
jmp
outsb
push
cli
jo
and
or
jno
inc
lock
sbb
fisubs
mov
scas
pop
sub
lret
ds
lock
mov
test
pop
lahf
les
add
mov
ljmp
loop
aas
lds
push
adc
in
pop
mov
jl,pn
push
mov
stos
push
leave
pop
cmp
aaa
lods
jnp
stc
repnz
add
sbb
mov
out
call
popf
adc
mov
movsb
cmp
cli
jmp
dec
lods
mov
fistl
bswap
push
and
cmp
dec
lahf
lret
mov
aaa
cli
jmp
sub
mov
daa
xchg
sub
les
outsl
cmp
push
dec
cmp
mov
daa
and
int3
mov
inc
mov
xchg
mov
jecxz
inc
pop
push
push
std
lcall
nop
dec
cmp
adc
xor
int
mov
out
iret
out
or
ljmp
das
dec
push
fldl
mov
mov
jb
sbb
inc
sti
out
call
ds
lds
xchg
mov
std
push
fnstcw
mov
xchg
pop
push
push
xlat
aam
dec
push
incl
mov
lods
icebp
mov
mov
inc
add
pop
and
pop
xchg
inc
cmp
cld
sbbb
cmpsb
pop
stos
ss
fildll
and
adc
push
cld
les
ss
lods
lahf
add
mov
out
rcr
add
mov
and
sbb
jb
fnstsw
jmp
fldl
or
fisubrs
repz
and
stc
and
xor
lcall
pushf
shlb
push
cmc
loop
cmpsb
fnstcw
pop
push
push
pop
inc
mov
adc
pop
adc
mov
imul
stos
rol
shl
or
dec
dec
jp
sbb
shrb
and
out
sub
jno
pop
xchg
jne
es
cmpsl
subl
sahf
adc
fnsave
dec
xchg
int
cmp
pop
mov
mov
push
je
dec
repnz
pushf
outsb
aaa
repnz
call
push
outsl
jo
add
or
es
sbb
js
adc
xchg
ljmp
mov
xchg
fnstcw
push
cmp
ret
jnp
into
lods
movsl
loope
in
shll
cmc
in
test
dec
out
inc
jae
incl
movsl
xor
lea
test
mov
int
mov
jmp
aaa
fcoml
push
or
xor
cmp
sti
sbb
jg
jg
inc
adc
mov
aaa
xchg
pop
out
loopne
pop
mov
push
inc
sbb
push
push
cltd
les
sbb
jmp
lock
loopne
mov
cmp
inc
stc
push
mov
dec
shl
xchg
adc
pushl
push
push
jae
ja
lock
or
ret
fldl
test
xchg
ret
ljmp
hlt
decl
outsl
jb
jns
lret
xor
xchg
xorl
pop
call
mov
push
cwtl
enter
stc
sub
or
pushl
popa
and
fwait
push
or
je
jg
ljmp
jbe
je
aam
pmulhuw
sbb
dec
sbb
testb
je
push
jge
jnp
inc
mov
arpl
dec
decl
dec
addl
aam
aas
icebp
outsb
cmp
mov
xor
push
lods
cltd
dec
lcall
fdivrp
aaa
clc
clc
push
jns
push
pop
mov
dec
mov
pop
outsb
sar
call
or
adc
in
cmp
mov
adc
xchg
lret
shll
or
pushl
sub
jl
sub
mov
xor
insb
jno
repnz
aas
out
sub
les
mov
lock
neg
fsubrl
jle
aaa
lret
and
aaa
pop
arpl
sbb
call
adc
sub
cmp
mov
mov
push
pop
divb
jg
lcall
repz
icebp
in
xor
push
mov
jecxz
dec
jg
mov
push
xchg
aam
je
enter
mov
jmp
jecxz
lods
and
add
sbb
mov
lret
jno
test
jmp
cmp
lods
xchg
rclb
xchg
sbb
xlat
data16
push
out
repnz
mov
jae
cld
sbb
incl
adc
push
test
andb
cmpb
in
push
bound
adc
hlt
lret
cmp
or
lcall
pushl
xor
lods
mov
in
xchg
cmp
inc
data16
xchg
mov
mov
push
inc
lcall
lods
pop
gs
inc
out
mov
sbb
loopne
call
int
sub
mov
dec
int3
vpsubusb
adc
fisttpll
call
mov
xchg
das
hlt
mov
inc
xchg
lds
mov
roll
mov
mov
call
sub
dec
dec
fstps
jae
push
orl
shlb
idiv
in
std
bound
cld
cltd
ljmp
mov
ja
in
movsb
sub
unpcklps
incl
jecxz
push
jge
ret
sbb
xchg
add
sub
call
call
add
xlat
push
das
jno
xchg
nop
lods
shrl
scas
cmp
ljmp
shlb
sahf
sti
fdivrs
inc
adc
fwait
ja
dec
jns
and
imul
ja
ljmp
in
cmp
clc
rolb
fs
fnsave
imul
ja
ret
mov
mov
inc
pop
mov
xor
ss
adc
sbb
pushl
incb
test
icebp
leave
dec
ja
mov
and
inc
and
stos
cmc
insb
push
adc
call
inc
fisttps
out
inc
clc
daa
mov
pop
mov
sti
jg
orb
inc
mov
popf
int
mov
push
ss
scas
std
lcall
pop
and
in
and
sarb
jle
sbb
inc
push
push
inc
lods
jecxz
dec
fiaddl
push
push
jae
dec
cli
dec
insb
es
enter
jno
idivb
jbe
fidivs
dec
cmp
gs
pop
paddusw
decl
std
xorl
inc
pop
lcall
movb
lcall
jmp
jae
cmp
add
cltd
arpl
xchg
mov
and
push
lea
out
sub
adc
pushl
add
mov
and
loop
pop
cmp
dec
or
les
shlb
adc
ss
and
mov
aas
in
and
ret
int3
mov
test
loop
push
incl
call
scas
in
insb
pop
iret
lods
inc
loopne
ja
cmp
pop
mov
std
lcall
aaa
imul
hlt
cmpsl
leave
aas
xor
fnsave
call
jecxz
pop
repz
pushf
iret
aad
pop
aad
xchg
cwtl
pop
dec
inc
fistl
pushf
dec
orb
cmpsl
loopne
bound
push
mov
cwtl
out
xor
mov
pop
insl
jg
cmp
decl
loopne
stos
icebp
in
or
aam
std
and
clc
imul
mov
mov
cmpl
sti
sbb
xlat
inc
pop
call
cmp
leave
sbb
push
sub
pop
sub
imul
and
push
cmp
pop
fidivs
xor
mov
in
or
test
pop
loopne
mov
rorl
je
cmp
stos
jecxz
mov
jg
xchg
sub
jns
call
mov
icebp
addl
add
xchg
xor
lds
loope
mov
push
sub
ljmp
insb
jl
insb
lea
push
lock
decl
jg
repnz
nop
xchg
jecxz
scas
ss
call
add
mov
add
xor
add
sbb
jge
nop
ljmp
mov
mov
pusha
addl
mov
add
es
test
jbe
outsb
es
add
jb
andb
das
call
out
mov
add
ljmp
sub
jb
add
popa
repnz
gs
mov
mov
mov
or
xchg
lock
lds
dec
mov
dec
xchg
outsb
dec
mov
pop
repz
jecxz
xor
jae
cld
add
fstpt
int
rcll
test
sarb
fwait
push
test
pop
add
in
mov
fsubs
lret
pop
add
pushf
pushl
jbe
and
xor
aas
pop
add
pop
adcb
sub
bound
add
xor
jg
loop
aaa
jo
jno
fldt
xchg
mov
cs
cltd
movsl
add
mov
or
sbb
push
add
cltd
jbe
test
cmp
push
jne
mov
pusha
lods
nop
clc
fists
mov
mov
mov
cld
inc
in
movsl
and
nop
push
ret
push
inc
push
xchg
jbe
push
inc
cmc
repz
incl
inc
xchg
add
cmp
xor
in
incl
and
or
adc
cmpl
pop
mov
mov
js
std
ja
mov
jge
jno
aad
cld
ljmp
movsb
push
and
enter
dec
popf
jo,pn
mov
add
inc
imul
add
repz
xor
out
mov
mov
fbstp
mov
push
hlt
fidivrs
out
mov
sbb
nop
or
mov
adc
ret
std
xor
arpl
loope
push
jae
inc
xor
xrelease
and
test
cmp
scas
push
sub
adc
fstl
inc
adc
add
shll
mov
rorl
insl
pop
leave
jmp
push
or
les
mov
test
ss
add
inc
cld
inc
or
add
pop
add
ret
mov
push
mov
iret
test
mov
jp
outsb
push
rcrl
or
arpl
iret
out
mov
cs
sarl
inc
shr
mov
adc
inc
out
pop
mov
add
mov
xor
dec
sub
bound
or
pushl
mov
lods
stos
push
push
js
or
imul
and
nop
adc
xor
inc
jecxz
aas
mov
mov
outsl
cld
scas
xchg
mov
adc
scas
popa
add
iret
inc
movsl
add
outsb
or
jle
mov
xor
push
int3
aas
shrl
int3
das
leave
jle
push
or
dec
and
mov
rolb
popa
jno
iret
dec
outsl
test
sbbb
xorl
xor
lahf
pop
clc
jg
das
outsb
mov
mov
and
inc
insl
xor
fwait
and
adc
in
loope
icebp
lea
add
loop
mov
lret
filds
ja
or
pushf
xor
cs
sub
nop
mov
adc
popf
flds
out
das
pop
inc
or
test
or
das
imul
mov
jle
or
sub
add
pop
push
pusha
insl
cltd
sbb
cmpsl
and
fildl
shlb
outsb
push
add
add
push
loope
jg
xor
or
fdivl
xchg
and
dec
rcrl
xor
xor
lahf
scas
mov
inc
add
and
aad
xor
outsl
aaa
xor
popf
jp
and
mov
mov
sub
repz
cld
jmp
test
add
enter
inc
aad
pop
push
dec
add
in
adc
mov
xlat
inc
daa
test
xor
add
mov
add
filds
push
mov
cmpsb
sbb
clc
sbb
adc
in
xchg
lret
daa
add
pop
cltd
adc
bound
cmpsl
and
jno
daa
or
pop
fidivl
and
xchg
pop
push
cs
sbb
pop
pushf
ret
push
mov
xchg
adc
cmc
pop
inc
fs
hlt
mov
inc
mov
std
xor
or
add
imul
mov
outsl
mov
mov
in
mov
xchg
add
std
jl
inc
xor
push
fbstp
loope
aaa
mov
dec
fucomi
jne
clc
mov
dec
mov
add
flds
test
ss
cmp
loop
lock
fs
aam
inc
adc
popa
jnp
dec
jg
test
jbe
outsl
sarl
adc
and
xchg
or
mov
adc
imul
pop
mov
fsub
ret
rcll
dec
jl
daa
push
xchg
sbb
test
ret
xor
aas
or
add
dec
mov
cmp
scas
jne
pusha
jnp
loop
or
clc
fisttpl
andl
pop
out
fdivr
mov
mov
lcall
or
lret
push
je
ret
lcall
movsl
pop
push
loope
int3
adc
push
jmp
inc
icebp
div
xor
inc
inc
sub
inc
cs
aaa
repz
rorb
fwait
lock
adc
mov
lea
scas
mov
lods
adc
jo
stc
inc
lcall
test
inc
stc
int
and
add
push
movsl
lods
out
stos
jnp
das
daa
and
pop
xor
mov
shr
mov
enter
das
adc
xlat
add
cmc
loopne
cmp
cmp
test
mov
jp
jp
push
jg
inc
inc
pop
or
push
pop
mov
mov
lods
or
outsb
shl
dec
xchg
mov
std
sbb
mov
dec
stc
mov
lret
mov
fldt
es
cmpsl
xchg
lret
xchg
xchg
jg
sbb
ja
sarb
ss
or
or
adc
imul
dec
push
xchg
fdivrs
aam
push
stos
and
pop
les
pop
pop
push
shrl
push
push
sahf
mov
cmp
fwait
or
test
insb
dec
mov
test
cmpsl
mov
fdivl
scas
arpl
js
test
add
push
push
sbb
scas
mov
les
add
mov
repz
cld
out
gs
pop
stos
xchg
nop
fcomps
cmp
pop
sahf
stos
pop
js
lea
fs
das
ficoms
sarl
pop
xchg
js
subb
ds
cmp
aad
sub
cmp
push
mov
xlat
test
cmpsb
sub
aad
scas
loope
es
roll
std
addb
xchg
mov
cmp
call
mov
push
mov
cli
inc
jb
mov
aaa
adc
sbb
inc
adc
jno
loop
pop
fidivrs
inc
xchg
movb
cmp
cmp
movsl
xchg
cmc
adc
add
and
mov
stc
xor
mov
inc
or
out
cs
js
pop
ficoms
lods
js
pop
sbb
mov
sub
es
xor
loop
stos
popf
dec
inc
sbb
xlat
repnz
js
push
add
push
inc
push
hlt
es
dec
push
pop
fmuls
push
mov
or
stos
and
stos
and
testb
inc
and
in
push
scas
or
xchg
sbb
xor
lahf
fs
push
lcall
push
enter
cltd
jno
mov
aad
sub
test
inc
sti
sbb
inc
out
add
jmp
adc
mov
mov
and
enter
sbb
and
or
cltd
pop
sub
inc
push
ret
ljmp
test
insb
or
xor
or
dec
cmpsb
dec
xchg
in
mov
inc
into
sbb
mov
push
jno
mov
dec
test
sbb
das
enter
mov
push
dec
inc
mov
mov
jg
mov
ret
aad
and
xchg
mov
mov
dec
sti
leave
xchg
push
add
or
jbe
fstps
jp
loopne
xchg
or
pop
mov
shl
mov
adc
outsb
mov
loopne
and
pop
push
sbbb
lods
out
mov
xchg
ret
mov
mov
lock
ss
mov
ja
ja
jge
mov
popf
roll
or
sti
jbe
icebp
mov
xchg
dec
inc
js
jge
mov
jg
push
push
cmp
or
xor
xchg
lea
and
mov
add
push
mov
cmp
jecxz
rcrl
int
lods
iret
in
inc
adc
cmpsb
ds
loopne
jecxz
fstpt
sarl
push
adc
lock
je
jge
adc
mov
insb
test
adcb
loop
or
dec
jns
out
daa
jle
or
or
out
ds
dec
mov
icebp
shlb
adc
lods
xor
sbb
push
jecxz
or
add
cli
fistl
sbb
dec
movl
fcmovu
push
mov
inc
aaa
dec
mov
pop
fxch
mov
hlt
cld
loopne
inc
xchg
jg
jo
mov
fcoms
rorb
xor
inc
nop
into
out
pop
test
inc
mov
mov
rorb
test
movsb
arpl
cs
jb
imul
push
int
fidivrl
arpl
xchg
rorl
jg
je
pop
rcl
jb
or
out
test
stos
mov
fsts
pop
insb
popf
xor
push
lds
sbb
mov
out
ss
imul
xor
loopne
mov
std
in
lock
jl
add
nop
loopne
outsl
adc
jmp
mov
pop
scas
xchg
xchg
fistpl
add
out
mov
cld
add
lea
push
adcl
mov
popa
jo
inc
gs
pop
or
fidivl
sub
pop
push
mov
mov
enter
cmpsb
and
jb
push
mov
pop
dec
mov
xchg
cld
push
sub
insl
imul
jmp
shrl
cmc
inc
fistl
xchg
add
mov
imul
mov
add
je
outsl
xor
dec
adc
je
cltd
test
fs
std
lods
inc
mov
pop
inc
test
jge
mov
inc
pop
pop
gs
daa
and
and
call
jae
fisttpl
orl
jbe
mov
jg
sub
ja
xor
lret
push
mov
adc
and
pop
mov
sti
or
push
inc
lods
dec
les
cmp
mov
mov
nop
mov
sar
mov
push
jp
adc
jmp
cmp
lcall
pusha
push
js
and
or
cmp
fsubrs
mov
icebp
add
push
jne
out
test
inc
imul
push
mov
outsl
jmp
shl
enter
sbb
cmp
cmp
xchg
sub
mov
sahf
loopne
add
stos
cmc
push
jg
subl
imul
sub
mov
ret
xchg
sbb
push
lret
fsubr
insl
xchg
add
aad
aad
adc
mov
insb
cld
rorl
push
cmpsl
iret
icebp
pop
clc
fistpl
or
dec
in
nop
mov
or
test
sbb
ficomps
push
jle
arpl
sbb
loopnew
inc
inc
stos
inc
push
mov
outsl
adc
sbb
mov
xchg
loope
out
push
jecxz
xchg
xchg
lods
xchg
sti
lds
sbb
test
mov
test
rcr
jo
mov
xor
mov
clc
jbe
mov
mov
cmp
or
mov
inc
mov
pop
cmc
mov
pop
jns
loopne
cmpsb
mov
jmp
mov
mov
add
xor
sub
andb
or
je
mov
insl
jb
bound
xchg
popa
in
mov
call
mov
vaddsubpd
movsb
xor
fists
jbe
call
repz
outsl
mov
add
rorb
and
ret
movsb
push
divl
sub
fistl
or
test
xchg
push
mov
dec
rcll
jb,pt
clc
divb
shrl
add
fs
test
push
mov
inc
outsl
movsl
jno
jnp
xchg
ljmp
cmp
dec
and
inc
ljmp
cmc
sbb
inc
js
mov
in
pop
test
mov
mov
xor
mov
mov
loopne
fstpt
cmpsb
popf
out
out
sbb
mov
notl
sbb
dec
pop
mov
ret
jmp
dec
jbe
movl
pop
ficoml
push
fdivrs
ret
ja
dec
dec
or
xchg
mov
stos
sub
dec
out
mov
mov
inc
clc
stos
in
sbb
subb
repz
adc
mov
pop
hlt
fmuls
mov
lods
push
jns
mov
jg
pop
cmp
lods
rcll
adc
and
clc
ror
sub
addr16
mov
xchg
sbb
jns
push
call
push
std
rolb
xor
lock
push
in
and
std
add
sti
enter
scas
mov
add
rol
mov
pop
inc
and
mov
popa
mov
push
and
inc
sahf
jbe
hlt
push
sbb
mov
push
xchg
jo
mov
pop
fs
call
nop
mov
mov
sub
mov
imul
daa
fidivrl
mov
add
adc
orl
mov
or
mov
cltd
lock
popf
xchg
cmp
in
mov
xchg
sbb
mov
mov
or
sbb
rcll
and
xor
cli
lea
pop
mov
sti
ret
sub
add
fucomp
add
dec
andl
and
mov
push
mov
sahf
shlb
and
mov
cli
orl
adc
sbb
insl
clc
in
push
and
call
test
dec
mov
iret
aas
push
dec
lret
shl
in
jg
jae
mov
jp
adc
notb
popa
mov
push
inc
lea
xor
das
stos
test
loopne
in
jg
fistpl
and
das
insb
dec
movsb
lods
mov
js
and
mov
mov
pop
dec
xchg
pushf
sub
notb
test
sbb
or
mov
mov
cmovo
dec
cmp
xor
out
or
xchg
dec
xchg
adc
mov
mov
out
pop
call
int
jne
addr16
xchg
cli
out
mov
fdivrl
ja
orl
xor
or
outsl
ljmp
push
lea
les
dec
int3
or
sub
fdivrp
jg
setg
in
in
mov
fnstenv
lods
cmc
pop
mov
sub
int
inc
add
jecxz
jo
subb
pop
sub
fildll
je
push
movsl
lods
xor
mov
mov
pop
dec
shll
and
pop
mov
sarb
dec
out
pop
cmp
or
cmp
xchg
adc
sbb
arpl
mov
mov
std
jnp
cli
ss
mov
mov
int
push
rcr
xlat
push
repz
adc
ja
icebp
out
hlt
popf
ret
push
and
incl
rolb
jg
jb
push
jp
enter
mov
jo
popf
cld
fs
movsl
mov
insb
call
push
outsb
pop
or
xlat
movsl
adcb
dec
cld
add
frstor
sub
stos
aas
inc
lock
test
std
insl
jmp
lea
sar
es
adc
jns
notb
sub
out
push
sbb
mov
mov
xlat
lds
icebp
lret
cmpsl
nop
mov
push
dec
fistps
jmp
inc
in
clc
std
gs
xlat
and
inc
idiv
stos
sub
adc
ret
shl
sub
dec
loope
ljmp
ret
sahf
ds
add
fadds
std
test
cltd
int
nop
sub
decb
inc
pop
cmc
jno
mov
xchg
roll
jl
push
repnz
jg
jmp
add
clc
dec
push
sbb
ljmp
inc
js
mov
movsl
sub
push
lret
mov
xchg
lods
push
nop
pushf
out
or
stos
je
stc
movsb
sbb
mov
adc
pop
and
mov
inc
sbb
insb
pop
and
dec
and
rcrb
lds
dec
adc
fiadds
fucomi
incb
arpl
pop
fs
xor
pop
jns
ja
or
sbb
xchg
mov
leave
call
mov
push
add
mov
sbb
sahf
sub
popf
mov
inc
add
aas
adcl
test
sub
mov
fwait
cmc
push
dec
lea
xchg
std
ljmp
cmp
lods
es
dec
daa
cmp
ss
mov
clc
pop
xchg
cli
inc
mov
jmp
xor
aaa
inc
inc
movsl
mov
jnp
in
sub
lahf
mov
sbb
jne
insl
in
in
adc
and
mov
das
pop
loopne
mov
xorl
or
or
push
aaa
mov
lock
leave
push
xchg
add
mov
dec
testb
pop
loope
pop
jbe
cs
leave
inc
mov
popa
sbb
call
test
mov
or
rcrb
pop
cld
push
movsb
cs
mov
sti
push
ljmp
sbb
int
pop
sbb
mov
jbe
inc
jno
or
cmpb
push
das
lock
testb
xchg
xor
mov
shll
dec
inc
insl
mov
cmp
and
scas
clc
test
mov
cmp
fisttps
or
add
outsb
outsl
adc
in
inc
pusha
pop
sbb
inc
je
jns
fwait
push
icebp
lcall
fisttps
cmp
xor
in
shlb
pop
push
xor
sarb
and
xchg
fimull
sub
stc
into
cmc
sbb
jp
call
sbb
add
and
add
mov
jmp
in
stos
clc
mov
leave
addb
popa
les
ror
aaa
and
std
int3
mov
mov
mov
in
or
ljmp
repnz
mov
xchg
push
xorb
inc
xor
shrb
jo
fbld
ss
lods
shrb
dec
adc
stos
push
nop
inc
pop
incl
sbb
dec
mov
test
sub
sub
jle
jno
xor
scas
sub
mov
stos
inc
add
or
push
mov
pop
mov
shlb
mov
jmp
or
and
sti
jne
faddl
cmp
xchg
fldl
repz
mov
jl
xchg
jmp
dec
inc
adc
pop
add
cwtl
dec
lret
xchg
lods
in
or
ljmp
xchg
adc
in
or
pop
adc
mov
push
call
ret
pop
cwtl
icebp
pop
aad
inc
nop
pop
push
das
xor
arpl
xor
pop
mov
add
sbb
xchg
fwait
adc
in
aas
cmc
outsb
aas
aam
inc
addb
xor
push
sub
mov
dec
push
stc
pusha
mov
or
xchg
push
adc
push
aad
rclb
icebp
insl
cmpsb
stos
pushf
cmp
xchg
shl
push
mov
jnp
jl
mov
mov
cmpb
xchg
test
call
loopne
push
inc
jp
lret
fdivl
xchg
fstp
add
fcomi
push
mov
push
js
stc
test
dec
jmp
cmc
and
inc
push
pop
fsubs
repnz
pop
xchg
sub
mov
bound
cwtl
dec
ja
xchg
movsl
out
ss
in
sbbl
insl
inc
add
repnz
sti
mov
sti
pop
insb
adc
xchg
les
jl
cmp
les
adc
scas
sub
sbb
push
lods
xchg
movd
inc
sub
fwait
notl
inc
out
add
jecxz
pop
fwait
dec
arpl
call
cli
lods
mov
sbb
dec
inc
sbb
add
xor
mov
adc
xor
outsb
jno
sarb
push
inc
mov
outsl
movl
fnstsw
cwtl
idivl
xor
cwtl
xor
cli
pop
xchg
sti
xchg
int
push
inc
lods
push
inc
loopne
shr
int3
gs
cltd
mov
and
sub
mov
loopne
or
lods
sbb
and
lock
mov
adc
inc
xchg
test
ljmp
mov
inc
fistl
xchg
push
stos
mov
mov
or
pop
sbb
ljmp
mov
loopne
dec
loop
pop
movsl
adc
fbld
ja,pt
pushl
xchg
aas
mov
pusha
sahf
jle
dec
jns
jge
or
xchg
popf
mov
add
in
jne
fcmovnu
or
pop
inc
mov
mov
inc
and
adc
fcmovnb
jecxz
xlat
pop
loop
ficoml
pop
and
xchg
bound
add
lea
and
sub
popa
loope
int3
jne
mov
push
mov
or
shlb
andl
aaa
iret
in
jg
ds
or
inc
scas
iret
add
push
sti
jecxz
test
sub
inc
cmpsl
sbb
pop
pop
push
mov
jb
cli
outsl
or
pop
xabort
cwtl
xor
pusha
xchg
test
stos
add
cmp
push
stos
mov
outsl
fisubl
fldl
iret
cwtl
bound
inc
xchg
call
add
cld
jmp
push
add
outsl
sbb
imul
mov
imulb
or
out
fists
call
push
fcoms
je
std
aad
add
jnp
cld
add
push
adc
lock
mov
out
push
xor
sub
mov
clc
je
mov
aaa
xor
clc
sub
pop
or
pusha
ret
ret
push
dec
inc
xchg
js
out
sbb
test
jae
push
in
imul
test
sub
mov
mov
in
jg
mov
cmp
aad
jge
cld
sbb
lret
or
psrad
mov
mov
inc
adc
lods
in
push
in
repnz
dec
lock
or
push
xor
jecxz
in
sarl
into
lret
mov
mov
int3
cmp
xchg
mov
es
stos
loope
jecxz
cmp
or
jl
aaa
cs
cld
fs
dec
cmpsb
jl
mov
daa
pop
push
jl
call
aaa
xchg
int
stc
inc
mov
mov
adc
xchg
clc
movzwl
clc
pop
jo
das
out
xchg
icebp
sbb
mov
lea
add
subl
lahf
inc
fldcw
adc
pop
and
movsb
xchg
movsl
mov
lock
and
jl
sub
cltd
inc
dec
hlt
mov
jl
imul
in
dec
mov
pop
mov
and
cmpb
jmp
push
pop
dec
pop
push
mov
mov
in
jl
ljmp
les
add
pop
add
mov
or
mov
loopne
mov
mov
sahf
jae
movsl
fidivrs
sbb
xchg
sbb
sbb
insb
mov
test
jg
cmove
push
mov
add
mov
movsb
das
pop
gs
sbb
pop
shlb
sbbb
jle
popa
and
xchg
jecxz
inc
lcall
mov
sub
jbe
stos
repnz
adc
cmp
arpl
roll
or
gs
cmpsl
cvtpi2ps
cmc
shld
lods
sbb
cmc
mov
popf
fstpt
movsl
jecxz
xchg
mov
xor
xchg
clc
psllw
mov
fldcw
pop
sarb
ljmp
or
in
jmp
in
add
clc
pop
test
sub
push
sbb
std
pusha
fcmovnb
mov
mov
or
dec
inc
subb
addb
js
lcall
cmp
xorl
arpl
lods
out
or
mov
add
sub
shll
adc
shl
addl
ret
clc
in
cmp
insl
push
jne
test
mov
sbb
ss
je
sbb
fdiv
aad
divb
and
mov
jbe
dec
pop
lds
cli
aaa
ficomps
cld
popa
inc
jecxz
inc
mov
lds
cmp
sbb
sbb
jae
int3
cmp
aas
sub
icebp
testb
addl
adc
gs
lcall
orb
push
inc
and
out
push
bound
push
lods
mov
pop
fwait
ljmp
jae
jecxz
sbb
aad
adc
loope
jle
sbb
mov
movsl
or
xchg
shll
arpl
out
jns
insl
or
xor
push
insl
insl
shlb
lahf
ds
cs
jmp
fcomps
lock
mov
xor
pop
add
mov
pop
jns
sub
lods
lods
pop
inc
aaa
rolb
incl
rclb
jo
or
into
xor
mov
push
inc
rcrb
push
or
inc
cld
shrl
mov
rolb
shrb
sub
cmpsl
imul
mov
iret
leave
std
jp
fidivs
inc
mov
in
jp
mov
mov
pop
add
mov
fcmovnb
push
imul
cmpsl
cmp
push
gs
jg
ja
aas
pop
jl
jg
jle
sbb
movsb
or
jg
adc
cwtl
or
hlt
dec
stos
lret
outsb
arpl
adc
dec
popl
data16
jb
sub
aad
cld
movsl
inc
push
add
push
les
xlat
xorb
aaa
inc
add
ja
sub
adc
ljmp
mov
shlb
sbb
pop
xor
push
into
pop
and
push
lock
sbb
dec
mov
adc
pusha
sbb
lock
cs
add
jbe
jne
in
xchg
push
sbb
in
mov
cmp
lds
push
push
pop
lcallw
mov
push
fisubrs
fnstsw
lock
icebp
inc
inc
and
ja
aaa
stos
loop
cltd
leave
dec
mov
lret
in
insl
jmp
dec
jne
sub
xor
mov
cmpsl
jae
shrb
rcrb
popf
add
and
xor
jg
fcmovnu
dec
ja
sub
xchg
scas
cmp
test
xchg
call
and
and
repz
mov
mov
or
ret
into
lcall
or
add
mov
call
mov
lods
mov
in
aad
jbe
or
mov
mov
xorb
mov
fidivrs
pop
or
pusha
das
mov
sbbl
xlat
cld
and
rcll
cmp
mov
fbld
fisubs
or
sbb
clc
inc
jmp
enter
sub
mov
pop
andl
and
xchg
sbb
pop
mov
mov
add
fistpl
push
test
movsl
xor
mov
pop
mov
xchg
mov
fdivrs
arpl
push
pusha
and
incl
adc
sub
push
push
lahf
scas
xchg
shrb
xor
loop
add
push
sbb
xor
das
mov
pop
cmp
sbb
sub
test
dec
ljmp
sub
les
lret
cmp
testb
mov
popf
add
sti
or
mov
jecxz
pusha
pop
fdivrp
test
mov
int
push
inc
push
std
test
out
insb
dec
adc
mov
fs
fistpll
filds
fcompl
stos
xlat
inc
loope
lds
lock
pop
cli
in
sarb
push
sbb
das
aaa
repz
loopne
xor
jmp
pop
xchg
jmp
std
xchg
lds
js
je
push
dec
pop
fimull
jg
lea
lods
mov
das
ret
dec
mov
xor
sbb
push
jbe
push
hlt
outsl
sub
cs
sbb
ret
std
mov
lods
mov
stos
adc
mov
js
push
and
xor
mov
pop
mov
jns
push
ret
mov
movsl
mov
and
popw
pop
dec
sahf
outsl
dec
mov
dec
out
in
push
inc
pop
sub
sahf
and
add
or
roll
loope
pop
lret
mov
sub
into
shr
clc
mov
push
daa
mov
mov
into
jns
mov
pop
cltd
jp
or
out
jno
mov
cli
inc
nop
mov
cmpsb
pop
push
js
jle
add
cld
or
pushf
mov
adc
movsl
cmpsb
push
cmp
mov
jecxz
aaa
rcl
adc
insl
repz
push
pop
mov
testb
shrb
pop
sbb
lock
xchg
repz
call
xor
jp
and
cmc
sbb
out
pop
movsl
das
adc
mov
sub
es
into
scas
jae
pop
lret
pusha
dec
add
sub
lock
dec
cli
insb
mov
jp
mov
pop
incl
cmp
cmp
and
mov
fs
iret
mov
outsb
pushl
shl
test
add
ja
in
push
pop
orl
push
fsub
mov
xchg
dec
outsb
pusha
imul
repz
jle
dec
imul
ss
jle
lods
inc
repz
loop
add
insb
mov
adc
test
imul
xor
cmp
sub
or
test
push
cmpl
loope
insl
stc
mov
test
mov
dec
pop
mov
inc
sub
stos
adc
pop
inc
popa
sub
jae
mov
orb
cs
movsl
fcmovnu
adc
mov
lahf
lods
push
jle
adc
movsl
inc
xor
shl
out
jo
das
mov
xor
and
pushf
push
inc
movsl
push
pop
cwtl
ret
push
ret
test
data16
test
push
lcall
adc
fcompl
fsubrl
or
pop
pop
add
jb
xor
pop
sbb
enter
int3
inc
jg
add
pop
loop
leave
repnz
incl
rorb
pop
sti
fs
fwait
mov
insb
mov
ret
shlb
pop
outsb
lret
jb
inc
sbb
jmp
mov
cmp
add
cmp
aas
movsb
nop
push
inc
orl
jo,pn
lahf
inc
adcl
pusha
xchg
and
mov
mov
fcmovbe
xchg
testb
xchg
incb
xchg
aam
decl
mov
fcmovnbe
mov
mov
int3
mov
arpl
insl
adc
adc
es
mov
fistpll
or
mov
sbb
incb
sbb
shlb
pop
ret
hlt
mov
xor
insl
xor
jno
inc
jbe
insl
sbb
packsswb
call
sbb
jg
jmp
lods
data16
insb
xor
aaa
xchg
pop
stos
ret
fisttpll
dec
add
fstpt
dec
mov
or
push
lea
insb
pop
loop
sub
loope
popa
inc
psraw
es
adc
mov
in
ds
cld
jmp
fistpl
ds
movsl
pop
xor
out
push
int
jo
addr16
mov
add
aas
inc
add
std
incl
adc
push
inc
sbb
inc
and
sub
orb
mov
sub
mov
lock
dec
mov
pop
cmpsl
call
push
add
insl
adc
hlt
das
mov
push
mov
cmp
loop
fucomip
idivb
orl
pushf
mov
mov
repz
jg
or
lods
pop
mov
popa
and
test
outsb
std
rclb
push
ja
or
sub
push
jg
testb
dec
ret
insl
push
jmp
inc
ret
push
out
mov
rcl
das
fcomip
push
jo
outsl
and
out
add
sti
xor
mulb
jne
and
xchg
cvttps2pi
pop
sbb
pop
lock
push
push
je
cmp
add
sub
jb
sbb
jnp
inc
daa
test
and
leave
mov
push
adc
test
jg
push
pop
jp
xor
inc
cmp
lret
cmova
mov
inc
inc
dec
sub
pop
insb
sbb
fwait
out
js
push
loopne
pop
repnz
push
out
ljmp
dec
movsb
sti
mov
push
cmp
loope
fdivl
adc
cmpsl
test
inc
and
or
imul
add
loop
sbb
or
gs
adc
mov
adc
mov
xor
and
adc
ret
sbb
sbb
stos
stc
xor
adc
lock
cmpsl
inc
rol
clc
stos
mov
shrb
xchg
add
arpl
pusha
xchg
mov
mov
or
sbb
fcoms
clc
fistpll
movsb
mov
sahf
sbb
xchg
adc
or
jnp
pop
ficomps
flds
push
fcmove
in
incl
push
mov
inc
pop
inc
rorl
jle
movsl
int3
incl
out
dec
cld
sti
cmpsb
mov
rcll
imul
mov
icebp
cltd
stos
aad
sbb
jb
mov
xor
pop
lds
sub
cmp
nop
ficomps
mov
shr
ljmp
mov
add
stos
pop
push
inc
add
add
or
call
out
sahf
add
in
outsl
or
lahf
subl
dec
push
mov
mov
call
std
ljmp
movsl
dec
loopne
or
bound
or
jmp
mov
and
or
rolb
pushf
mov
aad
add
fdivrl
dec
mov
add
loope
or
out
mov
xchg
lods
mov
sub
movsb
jb
mov
sbb
mov
into
inc
jns
add
mov
std
fistl
xchg
xchg
popf
push
xlat
rcrl
test
lret
dec
inc
pop
test
orb
xor
sbb
std
popf
bnd
sub
into
jmp
inc
iret
xchg
addl
or
pop
mov
pop
xchg
xchg
call
add
popa
call
in
inc
sbb
add
mov
cmp
adc
les
pop
or
inc
jo
std
jg
shll
adc
mov
inc
aam
inc
leave
pusha
jmp
ficoms
pushf
movsb
dec
pop
lods
shrb
cmpsb
js
popf
cmp
and
popa
sbbl
sub
mov
cmp
aam
fmull
cmpsl
js
cwtl
or
xchg
fucomp
cmp
xor
mov
or
push
clc
in
fcomip
loopw
sti
inc
movsb
xor
jne
stc
jne
mov
jbe
dec
mov
sub
in
add
mov
movsb
imulb
insb
je
cmp
ja
js
inc
fs
cs
pop
sbbb
inc
xchg
movsb
or
aaa
xchg
pop
test
fisttpl
insl
lock
mov
std
push
lahf
add
jg
adc
jo
adc
ficomps
int
sub
call
out
outsb
or
lcall
xor
inc
mov
std
or
stos
pushf
nop
xor
icebp
inc
sbb
lret
jg
sarl
jle
xchg
lea
xchg
xor
movsl
pop
and
fstl
incl
incl
stos
cmp
sbb
in
and
add
xchg
loopne
dec
fsubrp
sub
and
mov
cmp
cmp
xchg
inc
mov
or
push
pop
add
in
shll
sbb
aad
mov
pushl
cs
cmp
push
pop
insb
mov
bound
xor
outsl
mov
xchg
sbb
mov
out
incl
sub
js
push
jnp
jo
pushf
or
movb
xor
cmp
shl
ret
dec
push
in
stos
xor
loopne
inc
xchg
mov
int
pop
jle
rclb
sbb
mov
bound
jo
xorb
sbb
or
sbbl
out
inc
push
mov
test
int3
xchg
or
and
push
sbb
adc
inc
pop
lea
pop
dec
pushf
mov
movsb
jae
dec
xchg
mov
rol
inc
es
daa
int3
dec
filds
xor
repz
mov
add
jge
xor
fisttps
mov
pop
and
jb
fwait
sbb
pusha
cld
inc
adc
shl
or
scas
and
je
mov
mov
int3
jmp
jo
lock
test
sbb
inc
cmpsl
mov
stc
pop
lea
cli
fst
push
push
push
cmp
push
test
xchg
pop
ret
mov
add
adc
sbb
mov
pop
sub
or
xchg
dec
inc
mov
push
mov
fdivrl
or
aam
dec
das
loopne
dec
push
jmp
xor
inc
and
rorl
adc
dec
mov
imul
movsb
and
inc
jmp
adc
xlat
inc
outsb
xor
bnd
mov
shr
mov
mov
pop
push
scas
lret
decb
sub
xor
push
ret
inc
fnstcw
mov
inc
stc
add
icebp
push
inc
movsb
shlb
lret
shld
sub
xchg
out
sbb
mov
adc
clc
dec
jo
jp
ja
sbb
je
add
push
popf
mov
jg
mov
sub
js
mov
jnp
fldcw
cwtl
xchg
mov
lcall
jns
push
mov
ret
mov
sbb
push
xchg
pop
rcrl
repz
pop
ja
xor
in
lret
adc
and
iret
loop
das
pmaddwd
in
es
in
fnstenv
or
pop
in
add
jmp
psrlw
stos
mov
loopne
fildl
cmp
mov
cltd
cmpsb
fisubs
add
jo
mov
scas
movsb
add
je
les
pop
pop
fneni(8087
insl
jmp
data16
or
insb
sbb
ds
insl
loope
aas
cmpsl
and
mov
cmp
push
or
push
mov
lret
vmovupd
test
das
ret
push
sbb
sahf
shl
xlat
fisubrs
add
fs
mov
mov
filds
mov
aaa
push
pushf
xchg
js
mov
xor
lods
adc
sub
hlt
roll
or
stos
dec
in
add
jg
push
pop
cltd
sbb
sub
dec
dec
rcrb
repz
out
push
fsubl
xlat
out
inc
test
mov
clc
pop
lods
es
add
inc
xlat
jno
int3
stos
and
jle
cmp
pop
or
mov
ja
adc
lret
xor
adc
not
push
and
int
aad
das
push
mov
sbb
stc
faddp
fistl
ljmp
and
pop
xor
dec
mov
xchg
push
ljmp
cmpsb
sbb
mov
das
adc
cmp
cmp
or
jo
mov
sub
sbb
xor
push
jg
jecxz
mov
adc
arpl
test
inc
or
adc
mov
sub
xor
jbe
incb
jmp
pop
fimuls
mov
xor
js
das
rcrb
jne
lods
outsl
sub
push
xchg
sbb
filds
jecxz
dec
push
out
inc
leave
inc
idiv
pop
dec
insb
mov
mov
cmp
insl
push
fistpll
sbb
and
dec
in
out
add
mov
mov
push
adc
sbb
loope
pop
lcall
pop
lock
nop
inc
ds
loope
sub
pop
aam
fwait
sbb
push
pop
mov
push
adc
aaa
ss
and
aaa
inc
cmp
jbe
aam
pushl
fsubs
xchg
cmpb
push
mov
push
xchg
jns
jb
inc
fisttpll
cmp
pop
mov
fildll
pushf
loop
push
mov
outsl
pop
loopne
sbb
and
pop
sub
inc
mov
adc
jne
mov
fdivr
test
mov
loopne
xchg
pushf
mov
push
inc
add
nop
push
lea
sarl
ffreep
insb
or
sub
push
mov
inc
adcb
jg
fbstp
or
mov
popa
pop
xchg
btc
pop
xor
inc
lahf
push
mov
out
pop
lods
push
in
xchg
ljmp
shll
cmp
jecxz
adc
aas
loopne
lcall
xchg
icebp
popa
xor
xchg
cmpsl
clc
icebp
imul
push
jmp
movsb
data16
mov
inc
xlat
lock
imul
xchg
cs
lret
movsl
add
nop
xor
push
sbb
or
or
add
or
mov
scas
out
push
lcall
adc
pushf
stos
repnz
sub
lock
clc
xor
add
addr16
jbe
test
mov
js
jne
sbb
mov
aaa
jecxz
pop
mov
rcrl
ds
sub
scas
or
and
cwtl
jge
mov
test
mov
cmp
std
push
test
mov
stos
sub
xchg
xlat
daa
xor
lods
or
dec
aad
cmc
pop
icebp
jge
add
add
and
lods
pop
push
xor
movsl
test
mov
shlb
mull
ret
ja
xchg
popa
mov
xchg
insb
lock
push
repz
shl
cs
pop
mov
push
sbb
fildl
sub
pop
adc
lods
adc
sub
arpl
add
push
xchg
popf
cmpsl
dec
pop
add
jno
or
ss
add
push
pusha
aam
cmp
test
mov
jae
xchg
pop
mov
sub
movsb
pop
and
ljmp
and
jl
or
and
adc
pop
mov
and
or
mov
or
mul
pop
push
imul
adc
add
add
imul
sub
add
dec
push
push
sti
xor
mov
and
sbbb
push
adc
or
loopne
into
add
mov
mov
or
insl
push
inc
mov
shl
cmpb
pop
sub
cmp
test
mov
push
ret
push
adc
jmp
fistpl
and
inc
scas
fistl
adc
xchg
xor
outsb
int
or
ret
and
and
xor
or
push
and
rcll
insb
dec
mov
inc
push
mov
sub
and
add
imul
inc
mov
out
fidivl
movsl
or
mov
aaa
cmp
adc
add
insl
testb
stos
mov
fdivs
cmp
cmpsb
add
mov
sbb
and
aaa
adc
int
push
push
push
stos
mov
sub
mov
and
or
in
and
rcrb
or
adc
aaa
add
mov
mov
pop
jmp
inc
ret
pop
test
mov
sbb
push
imul
cwtl
mov
inc
test
mov
loope
insl
int
ds
add
xchg
add
push
imul
sbbb
inc
adc
lods
adc
and
notb
push
xorl
mov
inc
mov
mov
testb
icebp
and
lods
mov
outsb
es
rcrb
adc
outsl
cmp
lods
insl
add
adc
mov
push
arpl
data16
aaa
sbbl
mov
push
pop
stos
or
sub
loopnew
or
add
mov
mov
mov
dec
fildll
inc
imul
lods
xor
inc
sbb
insb
or
fisttpl
je
adc
enter
xor
nop
repnz
rcl
rorb
pop
inc
xchg
int
sub
add
sub
and
xor
add
stos
or
push
adc
pop
imul
mov
int
mov
add
push
outsb
jae
inc
and
out
add
mov
cmpsb
inc
shll
adc
adc
lcall
mov
fstpt
inc
and
xor
or
into
xor
pop
lds
inc
imul
shll
jno
loop
adc
push
xor
adc
int
pop
inc
inc
imul
nop
push
and
add
cltd
push
sbb
mov
insl
sub
rorb
les
mov
test
leave
xor
mov
and
sbb
jae
ss
inc
lcall
mov
or
jg
adc
cli
aaa
and
push
inc
adc
mov
or
shl
ss
xlat
pop
or
nop
fiadds
adc
add
sub
in
rorb
inc
lret
and
pop
mov
jno
cmp
mov
cli
scas
adc
mov
mov
mov
pop
imul
mov
fstp
mov
dec
in
fdivs
xchg
xor
add
and
mov
cwtl
or
test
or
loop
xor
inc
sub
adc
pop
push
sub
sahf
scas
and
popa
cmpl
jb
lahf
adc
scas
iret
gs
cs
or
scas
inc
inc
jo
add
sbb
adc
mov
mov
icebp
scas
push
xor
cmpsl
imul
pop
shll
int
push
and
fs
add
push
out
jns,pn
push
mov
rolw
mov
dec
jne
out
adc
lock
adc
test
aad
int
inc
ss
push
inc
sbb
jmp
fiadds
addl
or
insb
sbb
hlt
sarl
push
scas
jge
pop
scas
inc
adc
add
fists
xor
push
mov
shrb
add
leave
mov
pop
sub
out
add
or
mov
jae
xchg
xor
add
inc
or
push
push
add
sbb
lret
pop
and
mov
and
leave
in
cltd
loope
subl
ds
lcall
je
test
in
pop
sub
lods
rcrb
adc
inc
pop
xor
add
sbb
rcll
pop
cs
cmp
sbb
fcomps
mov
inc
push
pop
cvtps2pd
adc
and
dec
cwtl
je
fisubrl
mov
sbb
pop
mov
cmpsb
int
outsb
or
aad
inc
pop
add
repz
mov
clc
add
cwtl
fwait
stc
or
inc
and
or
add
movsl
retw
add
pusha
cmp
or
pop
imul
js
xor
adc
inc
add
mov
sti
mov
and
xchg
clc
add
add
dec
cwtl
sbb
repz
mov
addr16
push
pop
mov
dec
lock
xor
and
mov
out
sub
add
pop
imul
lcall
sbb
xor
xor
mov
dec
rcll
popf
pop
adc
cmp
scas
adc
or
jo
inc
loopne
movsb
shlb
xchg
nop
aam
test
pop
shr
repz
adc
iret
xchg
rol
mov
es
or
rolb
scas
pop
inc
mov
mov
ja
cmpps
or
jne
cmp
sub
xor
sbb
mov
ret
mov
add
lds
cmpsb
mov
push
scas
xchg
sub
mov
and
mov
inc
cmc
mov
xor
inc
scas
or
inc
add
add
addl
out
stos
xor
dec
xor
add
cltd
popa
mov
test
fs
roll
fcomps
and
jo
imul
push
adc
add
lcall
mov
movsb
jne
jo
mov
shrl
inc
fistpl
adc
imul
and
mov
sub
daa
mov
in
mov
or
testb
ficoml
aad
and
add
mov
add
wbinvd
lahf
or
mov
sbb
loopne
add
and
xchg
pop
cmp
imul
push
dec
data16
mov
pop
inc
rcl
sub
dec
cmp
xchg
dec
lret
nop
adc
daa
dec
repnz
mov
inc
inc
cmp
adc
jae
add
mov
sub
inc
xchg
loope
leave
inc
stos
adc
test
out
push
nop
push
dec
mov
lcall
mov
add
mov
xchg
add
mov
notb
pop
add
adc
shlb
repnz
fcoml
je
adc
dec
movsl
aaa
inc
pop
int
cmp
lahf
and
pop
push
nop
pop
pop
ret
roll
add
jo
cmpsb
test
clc
aam
mov
das
in
scas
into
shlb
int
test
in
push
mov
mov
andl
xchg
adc
notb
push
jnp
push
in
popa
rol
rclb
stos
dec
fmull
lcall
xchg
lcall
pop
es
loop
jb
ss
add
push
aam
ja
push
rcl
sbb
stos
adc
aam
or
and
lcall
add
pop
cmp
mov
dec
xor
cltd
movsb
add
pushf
leave
out
adc
lret
push
sbb
pop
jae
jecxz
and
scas
pop
push
jne
push
or
cltd
xor
jb
mov
loopne
add
sbb
dec
or
popl
dec
xor
add
sub
rolb
subb
int
sub
or
mov
and
divb
fs
cmc
inc
add
in
test
orb
add
inc
cmp
inc
test
pop
xor
sub
movsb
cld
dec
je
dec
pop
test
or
ss
das
lock
movl
push
out
pushf
cmp
push
adc
lods
out
in
dec
lods
xor
xchg
pop
int3
lock
push
add
fsubp
ret
inc
ss
pop
lods
jl
or
or
mov
sub
mov
jo
xor
xlat
xchg
mov
imul
iret
mov
and
mov
leave
lods
or
aaa
pop
sahf
add
xchg
pop
cmpsl
popf
pop
add
pushf
sub
push
pop
push
pushf
sub
daa
je
push
enter
call
repnz
lret
out
and
mov
pushl
push
pop
flds
mov
lahf
test
cmp
andb
jae
push
sub
xor
xor
and
aam
cmp
dec
ret
subl
mulb
loope
cmp
jb
inc
push
ss
mov
dec
xor
or
push
jcxz
ds
xchg
and
dec
xchg
lods
sub
xor
xor
sub
xchg
lock
fs
repz
or
cmpsb
testb
int3
inc
je
dec
mov
jo
mov
mov
loope
into
loopne
sbbb
sbb
pop
rolb
adc
dec
xchg
mov
or
mov
xchg
leave
xor
push
repnz
xchg
or
or
ret
popa
jo
inc
outsb
add
pop
stos
or
les
dec
jno
mov
pop
xor
pop
mov
adc
out
sub
push
cmc
in
insl
inc
out
mov
hlt
and
loopne
jo
and
or
cmp
call
jae
dec
insb
mov
mov
jmp
cmp
aad
cwtl
add
sub
lcall
push
addr16
push
push
cmc
nop
scas
fsubrl
pop
lods
aaa
jae,pt
mov
mov
mov
inc
or
fs
call
mov
mov
or
cmpsb
mov
ljmp
int
ljmp
cltd
mov
add
inc
rcl
je
lahf
rcrl
mov
ficoml
es
cld
mov
lret
xchg
mov
mov
mov
test
push
mov
call
lahf
aam
pop
mov
mov
shll
cmp
rcl
mov
mov
push
insb
inc
adc
push
xor
rcll
mov
sub
cmpsl
bound
push
pusha
add
add
add
sub
push
and
insb
stc
and
dec
shlb
push
adc
add
push
adc
lods
rcl
pop
lds
ret
mov
and
inc
fstpt
adc
lret
cs
or
xchg
inc
adc
xchg
pop
nop
sub
sub
or
jo
xor
sbb
je
cmpsb
loop
mov
pop
sub
and
pop
inc
sbbl
jo
or
imul
and
xor
cwtl
imul
push
cmp
xlat
pop
mov
aas
lahf
adc
adc
inc
adc
add
pop
jnp
jns
loopne
push
sub
adc
pop
sub
xor
add
adc
pop
add
shlb
sbbb
mov
push
inc
pushf
imul
and
push
and
and
sub
adc
test
or
into
mov
push
orb
jne
adc
add
mov
sub
or
stos
lret
xchg
fs
inc
adc
stc
or
sub
mov
ja
repz
data16
ret
add
mov
sbb
push
insb
sub
adc
ja
inc
pop
sub
sahf
nop
rcll
or
or
xchg
mov
imulb
dec
pop
imul
fwait
mov
mov
pop
fnstcw
push
sub
rolb
test
push
push
mov
inc
lods
xor
mov
lods
cmp
pop
imul
lock
xor
lods
and
pop
dec
sub
faddl
cmp
or
add
mov
loopne
pop
push
jns
adc
mov
int3
sub
mov
or
mov
xchg
ljmp
shl
cmp
add
pop
pusha
and
dec
test
mov
lods
xor
pop
roll
inc
subl
inc
push
or
mov
add
jg
push
push
adc
mov
imul
mov
test
push
mov
adc
pop
and
jb
push
aaa
mov
adc
adc
jmp
not
or
xlat
sub
into
scas
pop
fsubl
js
xchg
or
and
cmp
out
pop
call
jle
push
loopne
or
jo
popa
rorb
push
cmp
and
adc
leave
sbb
fdivs
or
inc
test
out
lods
sub
mov
in
iret
pop
push
xor
mov
mov
push
cmp
jbe
xor
or
mov
add
adc
inc
fwait
sub
addr16
push
push
subl
adc
or
test
aaa
and
ret
and
mov
psubusw
ja
push
bound
mov
fcomps
outsl
test
xchg
popa
dec
cwtl
mov
xchg
shlb
dec
mov
ficomps
add
xchg
and
fnstcw
mov
andb
jmp
xchg
jbe
lods
popf
lcall
jb
push
sbbb
lcall
sub
repnz
sbbb
movsb
jnp
rclb
and
test
stos
not
xor
loope
scas
cltd
sub
push
xor
cmp
lcall
ret
aam
and
jno
and
sub
iret
jmp
mov
pop
xorl
lods
fwait
sub
lods
sbb
xchg
sub
push
fs
mov
cmc
dec
dec
add
dec
stos
stos
sub
mov
lcall
nop
add
add
insl
jo
jb
push
je
imul
jg
gs
outsl
fs
gs
popa
outsb
fs
jae
fistps
sti
gs
push
imul
or
push
gs
fcomp
mov
push
jb
arpl
jae
push
outsb
push
mulb
adc
imul
mov
fldln2
inc
jne
outsb
je
push
je
je
imul
cmp
outsl
inc
and
popa
fs
fs
xlat
jbe
cmp
inc
jae
dec
jo
or
sub
jo
xor
fldcw
push
push
clc
insl
xor
jbe
imul
andb
jae
call
xchg
addr16
popa
addr16
lret
dec
add
cld
pop
add
add
add
jne
outsb
mov
and
or
add
add
pop
adc
mov
add
or
push
add
mov
cmp
or
enter
fs
out
push
sub
pop
push
and
cld
and
add
add
fcomps
mov
or
add
mov
jae
inc
cs
js
mov
and
nop
and
and
or
cs
jb
push
pop
sub
add
cs
popa
xchg
gs
daa
js
add
add
imul
jae
movsb
adc
add
bound
daa
jb
incl
fwait
mov
lretw
dec
je
inc
dec
dec
shll
xchg
subb
enter
dec
out
popa
and
mov
clc
add
adc
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
lock
sbbb
add
xor
add
jo
add
add
sbb
add
or
add
xor
add
pop
add
orb
add
addb
orb
add
test
add
rolb
add
clc
add
addb
add
add
addb
add
dec
add
addb
add
jo
add
cwtl
add
cmp
add
rolb
cmp
add
call
add
add
add
cmp
add
cmp
add
pusha
add
xor
add
mov
add
mov
add
fadds
add
add
sub
add
sub
sub
add
push
add
sub
add
js
add
mov
add
add
add
addb
add
or
add
add
add
add
or
add
add
int3
inc
add
rolb
add
add
add
add
add
add
nop
inc
add
xor
add
or
add
inc
add
xor
add
or
add
add
add
inc
add
add
add
add
add
add
add
add
add
dec
add
adc
add
or
add
add
add
add
faddl
add
or
add
add
add
dec
add
xor
add
or
add
add
push
add
add
add
add
dec
add
push
add
add
add
add
push
add
call
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
pop
add
lret
add
add
add
add
add
add
lods
pop
add
out
add
add
add
add
add
mov
or
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
in
add
mov
add
or
add
add
jo
add
mov
add
or
add
jge
add
or
add
add
add
add
add
mov
sbb
add
or
add
add
add
mov
call
add
add
add
add
add
add
or
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
add
lock
add
mov
add
add
add
mov
add
or
add
xchg
add
mov
add
mov
add
add
add
add
and
inc
add
add
add
add
add
lds
add
add
add
add
add
add
out
add
or
sub
add
add
add
add
add
add
add
add
add
add
add
adc
imul
add
add
add
add
push
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
jns
add
or
xor
jp
add
or
xor
jnp
add
or
xor
add
add
add
add
or
aaa
add
add
or
cmp
jg
add
or
cmp
addb
add
movb
add
imul
add
add
add
insb
add
add
add
insl
add
add
add
add
add
add
add
add
movb
adc
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
call
add
add
pop
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
add
add
add
and
add
add
add
add
adc
adc
add
add
sub
add
adc
xor
add
rolb
nop
add
add
pop
add
and
loope
jecxz
add
add
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
pop
add
push
add
add
or
pop
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
lldt
add
incl
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
gs
incl
add
add
add
push
add
add
or
cmp
roll
addr16
incl
add
add
add
add
add
add
add
add
add
push
add
add
str
data16
add
incl
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
adc
add
add
ret
add
incl
add
add
add
push
add
add
or
scas
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
lret
add
adc
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
incl
add
add
add
add
adc
add
add
sub
add
adc
pop
int3
add
sub
add
adc
add
and
add
add
or
add
add
inc
add
add
in
in
add
in
add
les
lods
mov
mov
xchg
lods
lods
add
xor
test
add
movsb
add
add
add
add
add
add
add
add
je
xor
insb
add
add
add
add
addb
test
pop
add
mov
add
xchg
add
add
xchg
add
hlt
hlt
add
in
in
add
jecxz
add
fcmovnu
add
lret
cmpsl
ret
lcall
add
cwtl
cwtl
add
int3
add
mov
add
add
mov
imul
lods
add
rol
mov
lret
add
add
loopne
add
ljmp
dec
test
test
push
aas
outsl
push
push
xchg
add
incl
cmp
jns
add
inc
jp
add
add
test
jbe
test
and
cld
cld
cld
add
adc
adc
adc
adc
adc
push
pop
add
cld
adc
pop
add
add
pop
add
loop
add
lret
lret
or
adc
pop
adc
add
push
repz
incl
add
adc
pop
adc
adc
adc
jecxz
out
pop
adc
loop
add
ret
jecxz
out
pop
adc
push
int
lret
lret
rcl
adc
lret
repz
jmp
add
loope
loope
pop
add
adc
adc
adc
adc
adc
adc
stc
push
incl
add
incl
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
roll
add
add
add
add
add
add
add
or
add
add
rolb
add
or
add
or
add
add
add
add
add
add
add
adc
adc
adc
and
add
and
add
xor
add
xor
add
xor
adc
add
adc
and
adc
xor
adc
xor
adc
add
and
push
add
add
add
inc
and
add
adc
push
and
add
adc
arpl
adc
jae
adc
arpl
add
cmp
add
push
adc
mov
dec
adc
mov
adc
mov
fs
mov
dec
add
shll
add
jae
add
push
xor
lcall
add
arpl
ljmp
add
jae
add
adcl
incl
inc
add
mov
jae
mov
xchg
add
xchg
add
lods
xchg
add
lods
mov
add
mov
add
mov
add
mov
mov
sarl
add
ret
mov
rol
mov
ror
mov
aam
ret
add
int3
ret
add
rol
add
rol
add
aam
add
aam
add
fcmovnbe
add
add
add
add
jecxz
add
jecxz
add
in
add
jmp
add
jmp
add
jmp
add
in
in
repz
repz
repz
hlt
repz
hlt
repz
hlt
hlt
add
sti
hlt
add
cld
hlt
add
cld
hlt
add
cld
incl
incl
add
add
add
add
add
or
add
cmp
add
cmp
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
or
inc
sub
or
add
add
add
xor
inc
inc
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
add
add
add
xor
inc
inc
dec
dec
dec
push
push
dec
dec
dec
inc
inc
ds
add
cmp
inc
inc
dec
dec
dec
push
push
push
push
dec
dec
dec
inc
inc
ds
or
add
add
add
cmp
inc
inc
dec
dec
dec
push
push
push
push
dec
dec
dec
inc
inc
ds
or
add
add
add
or
cmp
adc
pop
adc
or
or
inc
ds
or
or
add
add
sub
cmp
sub
sub
pop
or
or
inc
cmp
ss
push
or
add
add
xor
xor
inc
inc
inc
push
push
sub
pop
or
push
dec
inc
inc
ds
ss
das
push
or
add
add
xor
xor
inc
inc
inc
dec
dec
dec
sub
sbb
inc
inc
ds
ss
das
push
or
add
add
xor
cmp
cmp
dec
dec
dec
and
add
inc
inc
ds
ss
das
push
or
add
add
xor
cmp
cmp
inc
inc
inc
inc
dec
dec
dec
and
or
dec
inc
inc
ds
ss
das
push
or
add
add
xor
ds
inc
inc
dec
dec
dec
dec
and
or
dec
inc
inc
ds
ss
das
push
or
add
add
aaa
cmp
cmp
inc
dec
dec
dec
dec
and
adc
inc
inc
ds
ss
das
push
or
add
add
cmp
cmp
inc
inc
inc
inc
dec
dec
dec
dec
push
and
push
dec
inc
inc
ds
ss
das
push
or
add
add
cmp
inc
dec
dec
dec
push
push
mov
add
push
dec
inc
inc
ds
ss
das
push
or
add
add
cmp
inc
inc
dec
dec
dec
dec
or
add
or
or
dec
inc
inc
ds
ss
das
push
or
add
add
ds
inc
inc
inc
inc
dec
dec
dec
dec
dec
add
sbb
or
or
dec
inc
inc
ds
ss
das
push
or
add
add
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
dec
dec
dec
dec
inc
ds
ss
das
push
or
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
push
and
or
or
push
dec
inc
inc
ds
ss
das
push
or
add
add
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
push
push
push
adc
or
or
inc
inc
ds
ss
das
push
or
add
add
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
adc
and
dec
inc
inc
cmp
ss
das
push
add
add
add
add
add
dec
dec
dec
push
push
push
push
push
and
sbb
inc
inc
ds
or
add
add
add
dec
dec
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
inc
inc
ds
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
inc
inc
ds
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
inc
inc
ds
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
inc
inc
ds
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
inc
inc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
push
add
adc
add
add
add
add
add
and
add
add
sbb
test
add
add
adc
adc
add
add
sub
add
add
and
adc
add
add
call
add
xor
add
add
push
add
xor
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
ss
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
nop
add
add
add
push
add
pushf
add
add
add
adc
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
or
incl
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
outsl
add
add
add
add
add
incl
add
push
add
add
outsl
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
je
jb
insb
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
je
jb
insb
add
add
add
out
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
out
adc
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
addb
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addl
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
jl
pop
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addl
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
test
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
test
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
cmp
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
xor
add
inc
add
add
or
inc
add
add
add
add
popl
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
lea
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
adc
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
sub
add
add
xor
add
add
add
imul
inc
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
sub
add
pop
add
adc
add
add
add
add
or
and
adc
add
add
call
add
and
add
add
add
add
add
in
add
add
add
adc
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
je
jb
insb
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
je
jb
insb
add
add
add
out
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
out
adc
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
addb
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addl
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
jl
pop
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addl
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
test
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
test
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
cmp
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
xor
add
inc
add
add
or
inc
add
add
add
add
popl
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
lea
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
adc
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
sub
add
add
xor
add
add
add
imul
inc
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
add
imul
add
add
add
insb
add
add
add
insl
add
add
add
add
add
add
add
add
stc
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ud0
pushl
jo
ud0
add
call
jo
cltd
cltd
xchg
pushl
testl
jo
jo
call
pop
ud0
pushl
add
pushl
testl
jo
jo
push
push
push
push
jo
pop
or
mov
jo
push
push
push
push
push
pop
testl
adc
jo
add
xor
add
pop
add
adc
adc
adc
addb
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
call
add
add
add
add
add
add
add
add
add
and
add
push
or
add
add
adc
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
clc
push
push
push
push
pop
push
cmc
push
push
push
popl
push
push
push
pop
push
pop
clc
push
push
push
push
pop
push
push
push
push
jne
push
push
push
push
pop
push
loopne
push
syscall
push
push
or
les
les
loopne
push
push
dec
inc
les
inc
lldt
push
or
les
inc
inc
loopne
push
push
push
dec
inc
les
inc
push
push
push
or
les
inc
loopne
add
push
dec
inc
les
or
inc
push
push
push
or
les
loopne
add
push
push
push
dec
inc
les
add
inc
rclb
or
out
add
mov
inc
addr16
fs
inc
inc
push
push
push
or
popl
pop
push
push
dec
inc
les
inc
inc
inc
inc
push
push
push
or
les
inc
inc
les
push
push
push
dec
inc
les
sti
jae
push
pop
push
or
les
inc
dec
inc
inc
pop
push
push
inc
inc
fs
inc
inc
inc
add
push
push
add
push
sbb
add
sub
add
sbb
add
sbb
add
add
add
add
add
and
add
arpl
add
arpl
add
adc
add
adc
add
add
add
jg
add
add
add
add
add
add
jg
add
push
add
jo
add
addb
add
add
add
xchg
nop
add
fcomp
add
incl
mov
iret
iret
add
incl
mov
add
or
stos
stos
mov
mov
in
loopne
in
in
aad
mov
sarb
mov
in
in
lret
aad
mov
int3
into
int3
int
push
mov
add
mov
into
int3
int
mov
in
loopne
in
in
lret
fcmovnu
mov
out
out
in
int
mov
inc
inc
inc
inc
dec
int
fisttpl
push
push
push
push
aam
fisttpll
inc
inc
inc
inc
inc
inc
dec
mov
xor
xor
push
mov
xor
xor
test
adc
cmp
xor
push
inc
inc
sub
sbb
cmp
xor
inc
dec
test
adc
cmp
xor
mov
push
xor
cmp
xor
lcall
aas
pushl
pop
xor
mov
repz
cmp
mov
pop
aas
pushl
cmp
push
push
push
cmp
das
pop
aas
cmp
sub
add
xor
add
and
add
add
or
add
add
rolb
add
or
add
add
add
add
add
add
add
adc
adc
add
and
and
and
and
and
xor
xor
xor
xor
xor
add
and
xor
xor
xor
xor
add
xor
add
add
push
sub
push
sub
add
add
add
add
jae
add
arpl
adc
inc
sub
add
and
inc
xor
add
adc
add
adc
xor
add
add
and
add
add
xor
sbb
dec
add
push
add
push
dec
add
inc
add
inc
add
inc
add
push
add
push
add
push
add
push
add
push
add
push
add
and
xor
inc
add
and
inc
add
and
add
sub
cmp
dec
add
sbb
add
xor
das
xor
jb
inc
xor
dec
add
arpl
inc
add
add
add
insb
add
insl
add
jb
inc
add
add
add
add
jl
dec
push
jl
push
add
add
jl
push
pop
je
push
sbb
push
adc
pop
pop
jl
arpl
add
dec
add
dec
push
add
pop
add
pop
add
inc
add
bound
or
add
outsb
add
pop
imul
pop
push
add
jae
or
inc
js
or
add
pop
imul
pop
data16
sbb
je
add
add
imul
sub
add
cmp
add
cmp
add
add
call
aam
and
aam
and
jecxz
and
pushl
xor
xor
jae
add
je
add
je
add
arpl
add
xor
add
aaa
lea
adc
mov
push
add
add
test
push
or
add
mov
pop
add
add
mov
pop
sbb
add
test
addr16
xchg
add
xchg
add
add
popf
add
mov
jno
nop
add
sahf
add
add
test
add
lods
add
scas
add
mov
jbe
cmpsb
add
dec
xchg
add
push
mov
add
mov
adc
mov
adc
mov
add
mov
js
xchg
add
ret
add
ret
add
les
adc
les
adc
les
adc
roll
adc
roll
addb
add
es
addl
test
add
xchg
add
roll
aaa
xchg
rolb
cltd
ret
adc
and
add
mov
add
mov
add
xchg
jecxz
and
in
and
jecxz
xor
repz
pushf
repz
mov
hlt
add
lret
stos
into
add
rolb
dec
stos
add
add
roll
push
mov
add
rolb
data16
add
in
add
repz
filds
jbe
fiadds
retw
jmp
push
in
add
in
add
in
jnp
in
add
in
add
lock
hlt
add
repz
mov
pushf
add
lods
mov
add
mov
add
mov
mov
cwtl
mov
lds
sahf
lret
fsubr
add
fptan
add
incl
cltd
stc
add
stc
add
loopne
add
std
add
in
add
ljmp
mov
incl
mov
incl
lods
icebp
incl
mov
incl
mov
lret
fxch
lds
loop
roll
call
out
add
repz
ret
add
cld
incb
aam
incb
incl
hlt
in
in
cld
cmc
out
add
incl
std
div
add
sti
repz
sti
testb
std
std
add
sbb
sbb
add
add
push
push
push
push
push
add
add
add
add
add
add
add
add
cld
std
xchg
xchg
nop
iret
lock
stc
aam
add
stc
std
cwtl
stos
movsl
xchg
shl
stc
std
std
stc
repnz
add
add
add
cld
std
cltd
pop
jae
shl
cld
std
stc
add
sbb
add
add
stc
cld
stc
stc
stc
stc
stc
stc
stc
cli
fwait
decl
shl
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
repnz
sbb
repz
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
pushf
cltd
xchg
xchg
shl
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
lock
roll
insb
sbb
add
add
rcl
rcl
rcl
rcl
rcl
test
cltd
xchg
ror
iret
iret
iret
iret
iret
iret
iret
iret
iret
into
int
add
jo
sbb
add
adc
pop
sbb
or
movsl
lcall
push
adc
sbb
sbb
or
pop
jb
insb
sbb
add
std
stos
test
stc
stc
aam
nopl
insb
mov
add
std
lods
mov
pushf
shl
stc
std
std
stc
repnz
nopl
nop
cltd
mov
stc
cld
std
lods
pop
jae
shl
cld
std
stc
add
nopl
push
xchg
sbb
stc
stc
cld
stc
stc
stc
stc
stc
stc
stc
cli
scas
decl
shl
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
repnz
pfsub
rcll
add
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
mov
scas
lods
shl
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
lock
roll
arpl
setp
add
add
add
add
rcl
rcl
rcl
rcl
rcl
mov
mov
ror
iret
iret
iret
iret
iret
iret
iret
iret
iret
into
int
add
push
arpl
test
push
sbb
add
add
cmp
sub
sub
sub
fstp
fstp
cmp
sub
sub
and
sub
add
imul
cltd
lods
test
add
add
add
cld
std
ljmp
cld
aam
sbb
push
pop
insl
jo
add
add
add
stc
std
cld
cld
std
std
stc
repnz
sbb
push
pop
outsl
jo
add
add
add
cld
pushl
std
stc
add
and
imul
add
add
add
add
stc
cld
stc
stc
stc
stc
stc
stc
stc
stc
pop
jno
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
repnz
cmp
sbb
test
add
add
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
repnz
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
lock
roll
inc
cmp
sbb
sldt
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
iret
iret
iret
iret
iret
iret
iret
iret
into
int
inc
xorb
ss
test
sldt
add
cmp
sub
sub
sub
or
or
or
or
or
or
or
or
dec
inc
mov
xor
popa
pusha
sldt
add
add
jbe
push
mov
lret
int3
int3
loop
in
in
in
call
lret
mov
push
fisubrs
addr16
sldt
add
add
inc
jbe
push
rol
leave
lret
int3
int3
fcmovnu
loop
in
in
in
out
in
jmp
mov
dec
jne
mov
push
pop
push
add
add
add
inc
jbe
leave
lret
lret
int3
fcmovu
fsub
loop
call
ret
dec
in
mov
mov
xor
push
add
add
add
inc
pop
lret
lret
int3
int3
fcmovu
fsub
loop
call
pop
dec
dec
dec
dec
in
mov
xchg
and
push
add
add
add
pop
lret
lret
int3
int3
fcmovnu
fsub
loop
in
in
imul
pop
push
xlat
movsb
dec
fld
mov
inc
jle
je
mov
add
sldt
add
add
add
add
int3
int3
fsub
loop
in
jmp
imul
pop
not
movsb
dec
mov
addl
lahf
jp
cmp
add
fcmovnu
loop
jecxz
call
out
pop
fsubs
dec
dec
orl
popf
xorb
or
pop
int3
fsub
loop
jecxz
in
in
in
in
idiv
hlt
pop
movsb
dec
loopne
push
xlat
movsb
dec
addl
jbe
or
pop
loop
hlt
div
div
div
div
div
clc
hlt
pop
dec
loopne
pop
not
movsb
dec
inc
inc
inc
inc
inc
inc
dec
test
mov
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
out
call
inc
inc
aas
aas
inc
inc
inc
inc
inc
dec
jbe
mov
add
add
fsub
loop
in
in
in
in
out
call
aas
aas
aas
aas
cmp
cmp
cmp
mov
add
pop
loop
hlt
div
div
div
div
div
clc
out
dec
ds
aas
cmp
cmp
cmp
cmp
cmp
inc
inc
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
or
xor
sub
sub
and
and
xor
cmp
add
add
add
add
add
add
xor
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
xor
xor
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addb
add
add
add
add
add
add
xor
add
add
add
add
xor
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
imul
outsl
add
jae
or
inc
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
movsb
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
jg
jg
jg
jg
jg
jo
add
add
div
idiv
push
div
push
add
add
movq
lcall
jg
jo
add
pop
div
lcall
push
testl
jg
lcall
jg
ja
add
pop
idiv
lcall
push
notl
add
movq
cltd
cltd
cltd
cltd
fistpll
pushl
add
pop
idiv
cltd
cltd
cltd
cltd
cltd
fcomip
push
notl
add
movq
cltd
cltd
cltd
cltd
fistpll
pushl
add
pop
idiv
lcall
push
notl
add
movq
lcall
jg
ja
add
pop
div
lcall
push
notl
add
movq
lcall
jg
ja
add
pop
div
idiv
push
div
push
notl
add
movq
jg
jg
jg
jg
ja
add
ud0
push
testl
push
div
div
div
pushl
add
add
orb
aas
orb
add
div
add
add
div
idiv
adc
add
add
inc
pusha
add
add
adc
push
push
add
add
add
add
inc
jnp
push
adc
add
inc
push
int3
movl
add
add
add
add
inc
jnp
push
jae
add
add
add
push
inc
movl
add
add
add
outsl
add
into
inc
push
pop
push
cmp
add
add
add
add
add
add
add
jg
test
test
adcl
js
js
js
push
add
add
add
jg
test
test
adcl
add
pop
js
js
js
add
add
add
add
test
test
addl
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
inc
add
jmp
sbb
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
imul
and
inc
add
add
add
add
add
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
adc
add
je
add
outsb
add
insb
add
popa
add
add
add
je
popa
add
add
add
popa
add
add
add
jne
outsb
add
and
dec
add
imul
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
jne
data16
and
push
add
jne
data16
and
push
add
insb
add
add
add
jb
jb
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
popa
add
add
popa
add
popa
add
popa
add
add
outsl
add
jo
jns
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
adc
push
dec
inc
inc
and
add
inc
push
dec
and
push
add
fs
pop
dec
adc
pop
pop
jecxz
addb
mov
and
inc
mov
jecxz
and
sbbb
mov
add
mov
inc
and
orb
test
nop
test
or
add
pusha
adc
addb
pusha
pop
andb
add
mov
pusha
nop
and
add
pusha
add
add
add
nop
add
adc
adc
and
and
and
sbb
inc
adc
or
inc
nop
mov
add
and
adc
nop
or
and
add
pop
and
mov
adc
adc
inc
and
inc
pop
test
pusha
nop
inc
adc
adc
dec
test
pusha
adc
mov
or
adc
inc
sbb
add
and
pop
add
adc
test
jecxz
and
and
adcb
add
mov
adc
sbb
and
add
subb
inc
or
adc
adc
orb
inc
inc
adc
sbb
and
mov
orb
and
adc
adcb
add
add
jecxz
andb
andb
add
pop
mov
nop
inc
sbb
add
adc
adc
jecxz
or
pusha
adc
inc
mov
pusha
dec
inc
addb
add
pop
inc
nop
add
inc
sub
inc
and
nop
or
jecxz
and
add
or
inc
and
inc
pop
adc
or
mov
mov
mov
sbb
nop
mov
dec
add
adc
dec
adc
add
test
and
or
sub
or
sbb
inc
and
add
jecxz
and
nop
and
mov
or
add
andb
mov
or
add
mov
and
adc
add
nop
inc
mov
mov
sub
and
inc
jecxz
addb
and
or
adc
inc
mov
add
pusha
and
add
add
inc
adc
adc
add
andb
jecxz
adc
and
adc
pop
and
inc
and
inc
inc
sbb
nop
dec
pop
pop
pop
inc
pop
test
jecxz
test
sbb
addb
add
mov
inc
or
adc
orb
jecxz
and
and
mov
inc
andb
sub
pusha
addb
add
add
nop
nop
or
adc
andb
inc
and
addb
or
pusha
or
and
mov
dec
adc
mov
and
jecxz
adc
and
nop
pop
test
and
dec
mov
inc
add
and
adc
dec
sbbb
and
and
and
or
jecxz
adc
inc
inc
add
inc
dec
pop
and
pop
mov
orb
and
adc
pop
sbb
test
add
jecxz
or
dec
adc
add
add
add
and
or
nop
adc
add
add
add
add
add
add
add
add
add
add
pop
jae
add
icebp
add
jae
add
jae
add
idiv
add
sti
repz
testl
sti
jnp
add
jae
add
repz
ja
add
push
add
jnp
add
sti
add
push
add
idiv
add
jnp
add
std
add
repz
sti
jnp
add
jae
add
incl
pop
push
add
testl
jmp
cmc
add
jg
add
repz
add
sti
add
jae
add
jg
add
sti
cmc
add
jnp
add
testl
pop
idiv
add
stc
add
incl
lret
repz
add
repz
sti
add
sti
incl
iret
jg
add
incl
imul
add
ja
add
testl
pop
jnp
add
cmc
add
stc
add
stc
add
repz
push
add
sti
add
incl
imul
imul
add
stc
add
icebp
add
icebp
add
jg
add
icebp
add
jae
add
sti
add
incl
dec
ja
add
jg
add
jnp
add
stc
add
ja
add
ja
add
incl
incl
iret
jnp
add
sti
icebp
add
repz
add
ja
add
push
add
repz
imul
add
cmc
add
jg
add
std
add
icebp
add
jae
add
ja
add
repz
jnp
add
std
add
jae
add
repz
push
add
sti
add
jg
add
jnp
add
sti
repz
std
add
incl
out
sti
cmc
add
cmc
add
sti
add
std
add
incl
lret
sti
sti
add
repz
cmc
add
cmc
add
sti
std
add
jnp
add
repz
jg
stc
add
repz
push
add
div
add
sti
incl
outsl
push
add
jnp
add
sti
add
incl
jg
repz
jnp
add
repz
stc
add
jg
add
std
add
sti
std
add
repz
add
push
add
cmc
add
jnp
add
icebp
add
sti
add
sti
add
ja
add
ja
add
repz
jnp
add
jnp
add
jae
add
icebp
add
ja
add
div
add
jnp
add
jg
add
repz
repz
sti
add
cmc
add
incl
jg
incl
imul
add
testl
jmp
icebp
add
div
add
testl
out
ja
add
sti
stc
add
incl
dec
sti
repz
std
add
repz
testl
push
testl
dec
jae
add
jg
add
jnp
add
incl
iret
ja
add
sti
add
jnp
add
cmc
add
jg
add
ja
add
jae
add
push
add
std
add
testl
jnp
sti
add
testl
iret
jnp
add
ja
add
jg
add
sti
add
repz
iret
ja
add
icebp
add
idiv
add
sti
incl
push
add
testl
fbstp
add
jae
add
push
add
icebp
add
ja
add
jg
add
incl
dec
div
add
std
add
cmc
add
idiv
add
cmc
add
push
add
icebp
add
push
add
jae
add
testl
jg
icebp
add
jg
add
repz
add
std
add
testl
fstpt
add
std
add
testl
pop
sti
incl
sti
add
sti
add
push
add
jae
add
div
add
incl
pop
push
add
sti
add
incl
pushl
add
jg
add
repz
icebp
add
repz
add
ja
add
cmc
add
jg
add
repz
sti
sti
add
jae
add
repz
jmp
std
add
std
add
jg
add
mov
jne
inc
adc
push
push
hlt
cmpsl
sub
pop
ljmp
ljmp
xchg
test
es
fists
gs
mov
cmp
lret
mov
call
popf
mov
xor
push
lock
pushf
push
mov
sub
pop
mov
shlb
mov
repz
and
js
hlt
adc
outsl
pop
or
pop
add
aad
call
shll
arpl
xor
test
pop
mov
mov
cs
div
sub
imul
mov
add
es
lcall
repz
lods
sbb
pop
jg
mov
scas
pop
insb
rcl
mov
stos
jne
or
push
xchg
cmp
push
push
testl
lock
cmc
cmp
hlt
xchg
lcall
inc
movntq
mov
xchg
mov
adc
into
pop
jp
les
cmp
jns
stc
xor
xor
arpl
sub
jae
sub
rcrb
adc
jle
into
call
mov
andl
mov
mov
orl
mov
test
adc
xchg
ret
add
or
fs
jecxz
fdivrl
inc
jno
gs
xchg
and
rcrb
mov
cmpsl
push
mov
js
imul
mov
adcb
mov
mov
push
pop
xlat
mov
and
mov
cmp
pop
and
and
inc
push
je
and
lret
cmpsb
jnp
push
dec
lods
movsl
mov
push
push
push
ss
and
adc
xchg
sti
and
in
dec
xlat
daa
fdiv
test
mov
adc
test
push
lcall
push
dec
mov
pop
iret
push
aaa
insb
lahf
loopne
or
mov
cmpl
ds
sarl
jge
xchg
pop
push
roll
push
mov
ret
aas
idivl
fcom
mov
out
nop
lcall
cmp
subl
mov
inc
sub
cmp
stos
int
cltd
sub
push
xchg
jae
out
mov
rcl
imul
mov
aam
sbb
inc
mov
add
hlt
in
mov
xor
data16
outsl
add
imul
pusha
stos
into
stc
sub
hlt
pop
inc
sbb
jo
popa
es
aas
hlt
and
pop
inc
bound
leave
fdivrs
xor
fisubrs
in
in
dec
test
mov
mov
or
pop
mov
mov
fdivrs
aas
xchg
and
inc
insb
rcrw
lahf
dec
ja
sbb
scas
pop
sti
pushf
insl
cmpsl
sub
inc
les
jne
outsl
inc
mov
in
inc
std
sub
pop
cld
inc
movsbl
add
and
push
icebp
adc
mov
mov
jae
sub
inc
cwtl
mov
mov
mov
call
pop
mov
test
cmp
fisttps
pop
cld
and
jg
sti
inc
push
mov
cmpsb
into
mov
inc
push
jecxz
push
sub
in
nop
mov
add
push
notl
or
mov
mov
jmp
add
xor
lret
imul
test
and
mov
jns
mov
sub
js
out
inc
mov
sarl
xchg
pop
push
adc
insl
scas
loopne
mov
insb
fdivrs
xchg
pop
out
ret
sub
int3
sub
movsl
nop
movsb
arpl
mov
xchg
xchg
pop
shrb
jle
enter
imulb
movsb
call
mov
or
sub
adc
add
push
and
mov
stos
mov
movsb
repnz
mov
ds
dec
daa
in
sarb
mov
outsb
insb
push
js
dec
jmp
aad
popf
ss
in
dec
mov
arpl
add
cmp
in
push
mov
sarb
add
add
add
inc
popf
add
jne
add
pusha
popf
add
sbbb
add
popf
add
mov
popf
add
add
add
fcomps
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
outsl
jae
dec
gs
popa
addr16
