pop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
add
sub
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
add
push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
jmp
ret
push
pop
and
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
test
movsb
and
add
and
add
and
add
add
shlb
add
andb
add
add
mov
and
add
and
add
add
test
add
loop
add
and
add
add
dec
and
add
and
add
and
add
add
add
add
push
and
add
and
add
add
mov
add
mov
and
add
add
mov
add
xchg
and
add
and
add
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
add
add
add
xor
add
shlb
add
andb
add
add
mov
and
add
and
add
add
test
add
loop
add
and
add
add
dec
and
add
and
add
and
add
add
add
add
push
and
add
and
add
add
mov
add
mov
and
add
add
mov
add
xchg
and
add
and
add
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
insb
gs
jae
dec
jne
gs
add
add
fs
imul
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
add
outsb
fs
je
insl
push
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
gs
inc
imul
jae
jb
outsb
inc
add
imul
je
imul
push
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
mov
push
insb
gs
enter
jae
gs
popa
insb
jne
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
jb
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
inc
gs
outsl
imul
jbe
jae
add
add
je
jb
jbe
push
jns
gs
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
insb
outsl
jae
dec
popa
outsb
fs
add
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
inc
jb
ja
gs
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsl
pop
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
lcall
jle
add
jl
stos
lods
stos
add
cmpsl
cmpsb
push
mov
mov
mov
lret
into
int
rcl
in
rcl
shl
rcl
shl
into
int3
int3
hlt
enter
enter
mov
mov
lods
stos
lods
lea
fwait
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
rcl
sar
xlat
xlat
fdivr
fcom
fdivr
xlat
aad
rcl
sar
into
int
aam
rcl
sar
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
iret
rcl
aad
aam
xlat
xlat
call
xlat
fdivr
aam
dec
int3
into
dec
into
into
call
aad
dec
int3
int
mov
mov
mov
std
cmpsb
test
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
push
add
inc
add
pop
add
push
or
or
sbb
push
add
add
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
enter
into
call
rcl
call
xlat
call
call
aam
dec
int3
int3
dec
lret
lret
dec
into
int3
inc
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
ds
push
sbb
movntps
push
sbb
ss
aaa
cmp
cmp
adc
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarb
leave
enter
iret
iret
call
aam
call
aad
call
rcl
dec
leave
inc
ret
mov
mov
ljmp
mov
pushf
xchg
xchg
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
outsl
xor
jle
jg
jge
jno
jo
arpl
mov
cmp
inc
mov
outsb
outsl
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
leave
leave
dec
lret
lret
lret
lret
dec
enter
ret
mov
mov
ljmp
movsb
mov
call
xchg
xchg
xchg
xchg
cwtl
lcall
lahf
ds
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
jnp
nop
lea
incb
jp
idivb
jmp
outsl
outsl
out
pushw
pushw
jae
ret
jge
jp
jp
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
incl
addl
xchg
xchg
xchg
lahf
sahf
mov
ficoms
nop
jle
jp
pop
cs
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
lcall
lea
cmp
mov
mov
jge
jg
jb
jb
jae
je
jge
jge
addb
push
cmp
ss
es
jge
jge
fwait
lcall
test
lods
stos
sti
stos
lods
lods
lods
lods
stos
test
mov
lcall
mov
js
jns
jnp
jnp
mov
xchg
movsb
movsl
movsb
mov
scas
sti
mov
mov
mov
mov
mov
scas
lods
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
lods
mov
xchg
nop
xchg
incl
test
mov
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
mov
push
pop
push
push
or
inc
dec
insl
insl
imul
test
cltd
fwait
cltd
fistps
lcall
mov
mov
mov
mov
lea
cltd
jmp
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jl
scas
cmpsl
stos
add
pop
adc
test
call
fwait
xchg
cwtl
incl
test
decb
xchg
xchg
pushf
pushf
popf
std
mov
mov
xchg
in
xchg
in
xchg
push
jne
femms
dec
add
or
inc
daa
sub
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
lea
xchg
call
sahf
sahf
jmp
test
lods
pushl
mov
stos
std
rorl
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
xchg
pushf
decl
mov
call
nop
xchg
xchg
xchg
xchg
popf
pushf
sahf
mov
test
mov
xchg
xchg
fstpt
jp
push
push
push
outsl
dec
dec
dec
pushaw
pusha
popa
jne
jae
mov
lahf
addl
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
xor
js
mov
movsb
mov
mov
mov
lods
lods
stos
mov
movsl
movsb
add
pop
pop
adc
mov
ljmp
sahf
decl
nop
call
xchg
xchg
call
cwtl
xchg
lcall
mov
mov
movsb
stc
cltd
cwtl
lcall
xchg
xchg
les
cwtl
lcall
lea
stc
xchg
test
std
xchg
je
lcall
jmp
inc
jl
mov
jnp
mov
je
mov
insl
ljmp
pcmpgtd
stos
or
lods
or
pushl
mov
mov
pushf
movsb
mov
movsb
add
pop
pusha
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
sahf
lcall
pushf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
fwait
cld
xchg
cwtl
sahf
stc
sahf
fwait
lahf
stc
lahf
xchg
popf
cld
popf
mov
xchg
insb
mov
xchg
push
jg
xchg
dec
js
lcall
popf
push
push
jmp
adc
test
ljmpw
adc
scas
adc
mov
imul
mov
insb
mov
lcall
lods
scas
lods
scas
mov
mov
movsl
add
pop
pop
adc
mov
ljmp
pushf
call
pushf
lcall
mov
movsb
jmp
xchg
cwtl
decl
mov
decl
jbe
lcall
xchg
push
jp
xchg
jb,pt
cs
pop
decl
or
call
add
lcall
jmp
sbb
mov
insl
pushl
outsb
mov
and
mov
pop
je
roll
les
mov
mov
lahf
lahf
lahf
add
add
add
add
add
pop
pop
adc
scas
mov
shll
lcall
mov
jmp
test
test
fwait
lcall
mov
decl
cmp
mov
arpl
mov
popa
decl
or
test
push
incl
add
mov
push
call
add
fwait
add
sahf
add
or
mov
jo
mov
ja
mov
sub
inc
sub
ret
inc
sub
cs
enter
enter
mov
mov
lret
mov
add
add
add
add
lods
movsb
test
adc
cmpsl
scas
ljmp
lahf
jmp
test
ljmp
lods
pushl
lods
scas
jmp
jb
decl
or
incl
or
addl
addb
incl
push
decl
add
popl
push
call
pop
lcall
add
scas
adc
mov
cmp
dec
cmp
into
cmp
call
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsb
ljmp
lahf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
add
test
pop
ljmp
jno
les
test
leave
inc
mov
int3
inc
call
inc
mov
roll
call
dec
xchg
call
dec
xchg
fisttpl
fsts
call
xchg
mov
mov
movsb
movsl
movsl
arpl
mov
add
add
add
lcall
adc
jp
movsb
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
mov
decl
sbb
nop
sbb
mov
decl
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
mov
arpl
shlb
dec
inc
call
push
xchg
call
push
lcall
push
pushf
jmp
pop
popf
ficoms
jmp
pop
mov
jmp
pop
lahf
fadds
mov
test
jne
lahf
mov
add
inc
inc
adc
jns
mov
movsb
cmpsl
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
xchg
and
xchg
and
push
call
or
xchg
add
xchg
add
lcall
jmp
add
mov
data16
mov
xor
fldenv
jmp
arpl
jmp
cmpsl
jmp
cmpsl
jmp
addr16
jmp
stos
fldl
mov
cmpsb
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
aas
adc
jb
fwait
xchg
lcall
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
push
callw
add
cltd
add
mov
add
lods
add
mov
pushl
adc
rolb
frstor
jmp
outsb
stos
jmp
jo
call
jb
in
je
jmp
mov
out
je
out
je
out
jae
jmp
mov
mov
cmpsb
cmpsb
lcall
mov
add
add
add
add
insb
insl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
lods
lcall
jo
mov
cmp
lahf
xor
lcall
lcall
add
add
add
mov
pushl
add
enter
fsts
jecxz
mov
call
jg
in
jg
out
cmpl
push
xchg
push
cmpb
mov
shl
test
cmpsl
pushf
pushf
popf
daa
mov
lahf
lahf
add
add
add
add
ss
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
rol
pushl
insb
mov
fwait
cmp
mov
inc
jg
mov
sbb
xchg
add
sahf
add
mov
add
scas
add
mov
fs
mov
add
iret
daa
cmp
jmp
mov
push
mov
push
pop
push
nop
ret
push
nop
ret
push
nop
ret
push
xchg
pop
out
nop
sar
mov
inc
ret
stos
lods
stos
mov
pushf
sahf
xor
popf
add
add
add
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
mov
inc
ret
mov
jl
lcall
cmp
dec
cmp
xor
pop
lcall
add
add
stos
add
mov
mov
add
leave
add
mov
out
mov
out
xchg
push
cltd
push
cltd
push
lcall
negl
cld
popf
into
sti
popf
int3
sti
cwtl
leave
push
xchg
ret
fidivs
cli
mov
mov
mov
nop
xchg
add
add
add
xor
or
cmp
push
dec
dec
jecxz
pop
call
mov
mov
mov
sar
inc
leave
inc
mov
mov
ljmp
dec
mov
mov
push
pop
lcall
add
lods
add
mov
mov
add
enter
rorl
fiadds
out
mov
push
movsl
int
mulb
cli
test
into
sti
cmpsl
into
stos
sar
std
stos
iret
test
jmp
mov
dec
lret
mov
mov
lahf
lahf
sahf
dec
xchg
xchg
xchg
add
lcall
xor
xor
or
bound
pop
xlat
jne
jno
mov
rol
ret
mov
ret
mov
leave
leave
inc
rol
mov
cmpsl
jmp
mov
lods
dec
test
sahf
sbb
lcall
add
add
mov
fs
mov
add
int
outsl
fadds
jb
fists
out
pop
cmpsl
push
sahf
leave
cld
scas
sar
cli
mov
cli
mov
cld
scas
sar
std
mov
cld
mov
std
mov
std
mov
std
mov
mov
push
cmpsb
mov
call
leave
int
mov
mov
lahf
mov
xchg
or
add
add
xor
add
dec
dec
ss
jo
xchg
fwait
cwtl
rol
fcom
jmp
fdiv
iret
rcl
std
lret
dec
lret
leave
leave
lret
dec
lret
leave
inc
leave
leave
mov
lods
ljmp
push
mov
lods
jle,pt
lahf
packsswb
mov
add
mov
mov
add
iret
add
fadds
jb
loopne
jae
jmp
jno
cli
lods
aad
std
mov
fcos
cld
mov
std
mov
fdivr
std
mov
fdivr
std
mov
xlat
stc
mov
call
lret
mov
mov
xchg
or
add
add
xor
add
pop
pop
pop
or
enter
in
out
out
jecxz
out
loop
loope
fsub
fcmovnu
fcomi
fcomp
fdivr
aad
xlat
std
int
iret
mov
push
test
test
add
cmpsb
add
mov
arpl
mov
add
lret
add
add
fildl
jbe
jecxz
ja
out
xor
cld
mov
loope
inc
loope
inc
loop
std
std
inc
loopne
dec
dec
fdivrp
std
leave
fdivrp
dec
cli
mov
enter
sar
mov
mov
xchg
adc
add
add
incb
std
add
std
add
div
or
in
in
pop
in
out
in
sub
in
out
dec
ljmp
xchg
out
out
in
out
fcmovu
fucomi
ret
stc
lods
jo
test
ja
movsb
adc
pop
ljmp
add
mov
add
int3
add
fadds
jae
fiadds
ja
jmp
inc
pushf
cli
mov
jecxz
std
int3
in
std
int
dec
in
dec
in
dec
loope
dec
loop
dec
loop
std
shl
shl
std
shl
cli
out
mov
fdivr
ret
out
cmpsl
cmpsb
cmpsl
mov
xchg
xchg
add
add
add
incl
std
add
stc
testb
repz
add
repnz
in
lock
pop
out
icebp
out
cmp
out
out
pop
fsubp
loopne
les
xchg
sti
lahf
and
pop
jmp
add
mov
fs
add
movl
jno
fiaddl
jne
in
jnp
in
adc
negb
cli
mov
std
iret
in
std
iret
in
call
out
shr
std
shl
std
aam
std
xlat
call
fldl2e
fld1
cld
shl
push
jmp
aam
dec
lret
lret
rep
test
xchg
and
xchg
cwtl
add
cli
add
std
clc
add
cld
stc
add
div
or
aam
xor
je
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
fildl
ja
out
jns
in
sbb
cli
xlat
ljmp
fldpi
std
fucomi
std
fucomi
fsubr
std
fucomp
fsubrp
jmp
in
fsubrp
shl
push
ret
out
rcl
sar
lods
lods
stos
lods
xchg
xchg
xchg
outsl
outsl
jo
xchg
xchg
xchg
add
loope
add
enter
mov
cwtl
repnz
and
lahf
add
test
pop
pushl
add
les
push
call
add
loopne
jae
call
sub
cld
shl
fsubrp
std
fsubr
std
fucomi
fldl2e
std
fsub
jecxz
cld
aam
cli
shl
sti
iret
loop
test
fdivr
test
out
mov
jmp
rcr
fcom
sti
mov
mov
cltd
lcall
cltd
cltd
lcall
add
add
aad
ror
adc
scas
mov
jmp
add
mov
mov
add
roll
jo
fadds
jb
loopne
jp
jmp
aaa
xchg
sti
xchg
cld
lret
sti
lret
loop
cld
idivl
aad
repz
into
push
mov
int
ljmp
call
ret
ljmp
cmc
fsubrp
mov
mov
xchg
add
add
add
into
int
mov
mov
movsl
loopne
ss
mov
add
mov
gs
mov
add
into
push
jno
rorl
jne
jns
loop
cmp
dec
xchg
jmp
scas
lret
ljmp
std
loope
ret
cld
fbstp
neg
mov
enter
int3
in
enter
iret
aad
loop
fcmovnb
out
loope
jmp
jmp
popf
ljmp
push
stos
lods
lods
adc
cmpsl
test
add
ret
mov
ret
ret
pop
mov
lods
aam
dec
cmp
cmpsb
push
push
scas
es
mov
ja
mov
inc
xchg
ret
push
stc
leave
gs
test
mov
out
mov
mov
lret
rol
lret
mov
int
mov
rcl
jg
fcmovu
jb
loopne
gs
in
out
jmp
xor
div
cmc
and
repnz
or
mov
int
mov
add
mov
rol
mov
scas
mov
test
fwait
cmc
mov
jne
ljmp
mov
sarb
test
mov
pushf
leave
rol
into
lret
iret
int
addr16
rcll
rcl
dec
fcom
inc
rcr
xor
fcmovu
daa
xlat
sbb
adc
in
push
in
out
ljmp
sti
cmc
add
std
add
std
add
incl
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
kandw
enter
int
daa
int
shlb
iret
aad
sbb
rclb
rcl
aam
rcr
aad
rcr
add
fcmovnu
add
add
in
add
in
jmp
add
std
std
add
mov
add
ret
les
mov
mov
mov
push
rol
or
mov
add
int
add
aad
add
add
fcom
add
xlat
aad
aad
add
fchs
add
fildl
fnstsw
loop
loopne
jecxz
call
add
incl
std
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
ret
mov
mov
mov
stos
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
into
shr
rcl
shl
aam
sar
ror
iret
cli
int
lret
stc
int3
int3
int3
hlt
mov
mov
iret
lods
stos
stos
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
cmpb
aas
aas
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
rol
enter
into
iret
iret
xlat
xlat
xlat
call
aad
iret
iret
iret
dec
int
dec
lret
rol
mov
mov
stos
lods
lods
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jae
jne
data16
dec
dec
dec
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
mov
ret
lret
call
rcl
call
rcl
dec
lret
int3
inc
sarb
ljmp
popf
lahf
xchg
xchg
xchg
jmp
outsl
outsl
xchg
push
push
push
dec
add
add
add
add
add
add
addl
test
push
imul
push
push
insl
outsb
insl
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
mov
ret
mov
mov
test
lcall
xchg
xchg
xchg
cltd
fwait
cltd
out
addb
movups
xor
add
and
add
adc
add
pop
lcall
pop
fwait
xchg
lcall
addl
jmp
jns
sarb
jns
jnp
jp
je
je
push
push
push
cmp
je
sahf
sahf
sahf
mov
lods
lods
repz
lods
scas
sti
lods
scas
lods
std
test
popf
pushf
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsl
cmpsb
movsl
cltd
jae
jae
adc
adc
add
add
add
add
outsl
outsb
outsl
pop
mov
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
jo
orl
cwtl
repnz
xchg
xchg
std
mov
call
sahf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsb
mov
addb
add
add
add
add
popa
or
lods
mov
cmpsl
mov
mov
mov
mov
xchg
xchg
cwtl
std
lahf
lahf
lahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jge
subl
nop
mov
lcall
mov
pushl
pop
mov
mov
jge
mov
scas
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
nop
call
xchg
xchg
lcall
lcall
fwait
lahf
popf
cli
xchg
xchg
cwtl
jmp
xchg
lea
xchg
orl
cld
xchg
pop
jg
sahf
dec
jp
movsl
inc
jp
scas
aaa
jbe
mov
je
scas
sbb
insb
pushl
pop
mov
mov
scas
scas
jle
movsb
movsl
push
pop
pusha
popa
or
mov
in
mov
cwtl
lcall
mov
mov
decl
orl
xchg
jae
cld
xchg
pop
cmp
dec
jns
nop
cmp
xchg
sub
xchg
sbb
lcall
or
imul
mov
outsb
pushl
push
jae
mov
pop
nop
mov
lods
scas
xchg
sahf
sahf
popf
adc
add
add
pop
popa
pop
or
mov
stos
mov
mov
ljmp
test
lcall
pop
jnp
mov
imul
sub
mov
pop
incl
or
mov
push
decl
add
popf
add
cmpsb
or
mov
je
mov
sub
jge
enter
lret
dec
pop
xchg
inc
stos
mov
mov
scas
movsb
test
add
add
add
add
pop
or
cmpsb
test
test
cmpsb
ljmp
mov
pushl
mov
jmp
inc
jno
mov
pop
decl
or
test
push
decl
add
lahf
add
cmpsb
add
mov
insb
inc
ss
inc
mov
into
inc
call
inc
nop
call
inc
nop
call
arpl
stc
mov
mov
mov
incl
add
add
pop
pusha
pusha
or
mov
ljmp
mov
mov
mov
ljmp
push
jl
mov
call
adc
push
call
add
lahf
add
cmpsb
add
lods
add
mov
dec
nop
fstps
fcompl
fistps
jmp
pop
mov
fildll
int
mov
ret
movsl
xor
addb
add
add
dec
pop
jle
jp
popf
xchg
cltd
jecxz
mov
mov
mov
mov
mov
mov
mov
mov
sub
lcall
and
call
add
popf
add
test
pusha
ljmp
pop
push
jmp
outsb
test
call
jo
out
jb
call
test
mov
inc
jg
jg
add
add
dec
dec
dec
pop
outsb
outsb
insb
bound
cwtl
xchg
pushl
mov
mov
mov
jne
lcall
jbe
pushf
sub
call
add
mov
add
mov
fs
or
dec
xchg
jmp
jns
jmp
test
push
xchg
push
mov
mov
cmpsb
test
cltd
lcall
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
ret
inc
mov
popf
jmp
inc
jg
mov
or
mov
add
mov
fs
mov
push
jne
loope
mov
push
xchg
cwtl
push
xchg
enter
enter
lret
push
cwtl
lods
inc
mov
lods
popa
lahf
mov
add
xor
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
pushl
push
mov
lods
dec
cmp
and
add
cmpsl
add
mov
arpl
mov
add
fsubs
cmp
jp
push
mov
into
cli
stos
iret
cld
test
sar
std
stos
sar
sti
cmpsb
int
out
inc
mov
stos
jne
pushf
sahf
or
add
add
dec
dec
push
aaa
jb
je
test
into
int3
out
int
cmc
leave
int3
lret
lret
leave
mov
bound
mov
add
mov
gs
add
int
outsl
flds
call
xchg
sti
mov
mov
fdivr
std
mov
fdivr
mov
sar
jmp
ret
scas
lods
lods
mov
add
add
add
add
or
rcl
dec
loope
jecxz
fsubp
fistps
out
shlb
test
pop
pusha
ljmp
add
lret
call
add
in
jl
lock
mov
sti
ret
loope
inc
loop
inc
inc
dec
std
lret
sti
fdivr
out
mov
lret
mov
xchg
pushf
sahf
pushf
sbb
add
add
incl
std
add
jmp
or
in
in
sbb
in
in
xor
loope
in
les
mov
mov
add
pushl
add
into
add
fildl
jne
jmp
insb
mov
sti
cld
shl
shl
call
in
shl
xlat
out
std
xlat
jmp
push
enter
lret
sar
mov
mov
mov
add
add
incl
incl
std
cld
pop
aam
push
mov
pop
mov
lahf
or
test
add
lds
push
rolb
jo
filds
ja
in
and
shl
fucompp
fsubr
cld
fsub
std
fsub
std
fsubr
cld
fld1
std
shl
push
fdivr
loope
aad
mov
lahf
popf
das
add
add
int
into
or
bound
ljmp
inc
add
aam
jno
loope
ja
out
das
nop
push
lcall
clc
lret
test
repnz
aad
repz
std
out
ret
aam
out
aam
in
jmp
aam
jecxz
fsubrp
mov
test
std
add
add
add
aam
push
mov
jae
or
mov
insb
inc
sbb
lret
and
sub
sti
fists
loop
mov
out
loop
leave
jmp
fidivrs
lret
sarb
in
fcompl
out
call
rorl
mov
add
lods
stos
lods
add
xchg
mov
ljmp
xchg
fidivrl
jg
rol
stos
mov
mov
les
rol
int
aad
int
ror
rorl
fcomp
cmp
das
in
fsubl
loop
icebp
adc
in
in
or
incl
std
incl
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
ret
leave
enter
rclb
rol
adc
rcl
or
loope
or
into
int
lods
stos
lods
add
incb
std
incb
fwait
cltd
cltd
add
mov
or
int3
into
int
stos
lods
lods
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
mov
leave
mov
ret
ret
ret
mov
scas
scas
scas
insb
stos
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
aad
rcl
sar
into
into
into
std
mov
stc
mov
mov
sarl
sbb
push
add
add
add
add
add
add
add
add
jno
jno
addr16
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aad
dec
iret
iret
inc
mov
mov
scas
lods
lcall
mov
push
add
add
add
add
je
je
test
aad
outsl
outsl
ret
bound
outsl
outsl
outsb
jb
pusha
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
xchg
cltd
lds
jno
and
add
pop
add
add
jae
je
popf
xchg
fwait
mov
test
mov
xchg
or
addl
push
push
push
inc
mov
fwait
into
movsb
mov
mov
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
lods
movsl
test
cld
mov
xchg
xchg
xchg
cld
popf
popf
sahf
cmc
lcall
mov
push
push
imul
jle
lea
xchg
testl
mov
pushl
jo
mov
mov
test
stos
lods
add
add
add
cmpsl
mov
scas
cmpsb
scas
cld
xchg
xchg
xchg
call
lcall
cwtl
lcall
xchg
mov
loope
je
out
xchg
bound
std
lcall
ljmp
and
mov
outsb
pushl
popf
lods
lock
mov
imul
int3
add
xchg
pop
lods
movsl
stos
test
lahf
pushf
sahf
jmp
movsb
call
push
ja
xchg
inc
jae
mov
imul
xchg
adc
xchg
or
mov
sbb
je
mov
sub
lds
xchg
rcrl
subl
je
push
mov
movsl
test
test
scas
scas
pushl
xchg
decl
or
xchg
push
decl
pop
jmp
adc
shlb
dec
aas
mov
rolb
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
mov
add
push
push
test
mov
lods
pushl
mov
mov
call
sbb
xchg
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
popa
movsb
jmp
movsl
call
fwait
mov
mov
test
pop
add
add
popa
bound
mov
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
or
lahf
add
add
mov
xor
call
jnp
out
jle
out
jle
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
mov
arpl
lcall
add
pop
pushl
pop
insl
fmull
in
lea
notb
push
xchg
jmp
cmpsb
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
mov
xchg
ljmp
sbb
cmpsb
add
mov
gs
add
adc
ljmp
cli
stos
sar
cli
scas
sar
sti
lods
sar
std
lods
sar
in
mov
inc
mov
movsb
ds
std
incl
xor
xor
jno
jno
scas
mov
mov
aad
mov
aad
fnop
rcl
out
leave
leave
leave
cli
mov
mov
jmp
arpl
ret
add
aam
jae
out
test
clc
mov
std
mov
fdivr
std
rcr
cld
ret
cld
ret
out
mov
ret
cmpsl
test
add
add
add
in
jmp
call
jmp
in
fcmovu
movsl
daa
insl
ljmp
add
lret
faddl
jne
lock
cld
int
std
shl
shl
std
shl
shl
push
fcos
aam
into
in
scas
scas
scas
popa
addl
add
std
add
std
push
int3
lret
shrl
lahf
sbb
stos
add
mov
add
loop
js
repz
cmpsb
inc
loop
cld
xlat
call
cld
aad
sti
aad
stc
shl
push
leave
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
arpl
mov
or
fistps
cmp
insb
lods
cld
out
mov
shl
ljmp
jmp
in
aad
call
fcmovnu
scas
ret
vsqrtsd
add
add
pushf
stos
xchg
inc
and
push
mov
shll
jbe
mov
fdivrs
adc
int3
outsl
xlat
int3
rcrb
rcl
dec
jecxz
loope
out
call
sbb
rol
add
mov
lods
arpl
mov
les
lds
rol
sbb
bswap
into
into
or
aad
push
incl
jg
addl
lods
incl
mov
incl
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
sbb
sbb
hlt
inc
mov
pop
addr16
pop
jle
arpl
xchg
popa
jmp
cwtl
fidivrs
lahf
std
add
insb
lods
adc
cltd
movsb
dec
std
mov
xor
mov
jge
fdivrl
fs
xchg
in
or
sub
push
aas
es
pop
out
pop
enter
ficoml
mov
xor
sbb
push
or
jmp
sub
clc
cmc
dec
or
stos
dec
shrb
aaa
xchg
out
sbb
sarb
into
and
push
das
imul
jp
jnp,pt
fisubrl
push
cmpsl
scas
pushf
inc
mov
rorl
test
cli
and
repz
push
push
cli
push
and
dec
pop
into
and
fadds
xor
sub
push
ret
mov
pop
arpl
mov
adc
jecxz
sbb
mov
lret
add
jmp
push
xchg
ja
test
and
xor
add
mov
push
pushf
push
iret
out
jg
aad
mov
mov
xor
addr16
nop
mov
imul
aad
mov
shll
test
outsl
cs
int
push
mov
int
xchg
sbb
or
xchg
inc
push
sti
jmp
sti
xchg
cld
data16
out
lods
cwtl
movsl
fldenv
shr
lret
repnz
push
xor
stos
das
shr
dec
js
adc
rorb
sti
pop
or
and
inc
push
leave
movl
nop
xchg
icebp
int3
sub
out
jb
imul
cmp
popf
inc
leave
cs
lock
dec
push
mov
in
test
push
dec
iret
adc
push
sbb
ljmp
stos
cmp
mov
scas
lds
imul
dec
repnz
imul
mov
pushf
add
dec
cli
arpl
ljmp
sbb
jnp
add
sbb
mov
mov
inc
pop
mov
and
dec
test
leave
jae
jns
push
data16
and
pop
sbb
lds
jp
mov
mov
jg
in
jbe
dec
dec
shll
sub
push
ret
mov
stos
sub
push
cld
pushf
push
pusha
into
or
xchg
xchg
popf
xor
add
xchg
js
mov
test
xchg
mov
movsl
jbe
inc
paddusw
jo
add
repz
xor
loop
push
adc
mulb
dec
sub
dec
fs
or
xchg
jle
push
in
sub
addr16
out
xorb
mov
pop
dec
stos
pop
mov
outsl
ret
std
ret
scas
stos
rclb
stos
fs
inc
fdivrs
out
mov
add
push
jmp
psubusw
mov
movb
jl
cmp
xchg
inc
add
pop
stc
xor
jb
sub
inc
outsl
pop
les
iret
cmp
or
or
adc
int3
mov
or
mov
mov
xor
push
into
mulb
xchg
xchg
loopne
or
jmp
mov
sbb
imul
sbb
int3
orb
adc
pop
out
pop
adc
sub
jbe
enter
adc
rcr
pop
jne
addr16
dec
inc
adc
jl
test
pop
push
loope
sub
jb
shll
jmp
add
ret
sbb
jns
xchg
dec
sbb
xlat
hlt
adcl
out
shlb
add
out
fwait
out
xor
lock
sahf
hlt
test
mov
dec
stc
mov
pop
insb
xchg
push
or
xor
fimuls
movsl
lahf
movsl
sub
int3
int
movsl
and
pop
arpl
scas
jp
add
push
mov
bound
sub
or
cmp
lods
inc
sarl
sub
lret
mov
movsl
and
sbb
mov
shrl
jle
adc
pop
das
add
xor
mov
jge
sbb
clc
cmpsb
lods
into
jge
jb
mov
sti
add
lahf
push
sbb
pop
test
inc
leave
movsb
imul
push
test
xor
inc
add
fwait
xchg
arpl
loopne
stos
int3
or
stc
mov
rcr
stc
rorl
clc
adc
scas
add
jb
pop
pop
and
push
mov
imul
sarb
fs
lret
aaa
loope
xchg
pushf
mov
out
xchg
jnp
adc
int3
aaa
mov
lods
mov
adc
divl
movsl
or
shl
cmp
inc
addr16
shll
push
cmp
mov
mov
add
stc
mov
loope
lret
xchg
imul
int3
cld
pop
sbb
lods
movsb
inc
add
psllq
and
dec
xor
xor
xlat
out
mov
pusha
mov
fdiv
repz
ficomps
lcall
jmp
lret
inc
loopne
mov
push
jno
dec
mov
fbstp
sub
mov
int3
xor
test
lods
in
push
mov
lea
dec
repnz
movsl
mov
in
jns
push
clc
stos
inc
sub
jb,pn
lret
xchg
mov
ret
lahf
call
insl
adc
add
and
repz
es
mov
fsubrl
jmp
and
negb
jp
mov
adc
xlat
nop
es
out
dec
idiv
lea
cmc
rep
adc
jbe
pop
lret
lret
cs
cmpsl
mov
mov
insl
mov
or
push
test
sub
icebp
bound
divl
mov
call
movsb
lcall
mov
ljmp
lret
inc
dec
inc
rcrl
fmuls
je
pusha
and
jecxz
imul
ja
pop
sti
inc
add
pop
je
add
jg
cwtl
adc
and
scas
aam
scas
mov
sub
dec
mov
sub
fcomps
repz
xchg
mov
mov
out
subl
shrb
loopne
add
psubsw
mov
movq
sbb
fcmove
inc
adc
das
shrl
push
cmp
mov
addr16
mov
daa
jmp
or
seta
push
ret
and
scas
lea
scas
enter
mov
cmp
les
pushf
push
outsl
xlat
push
shlb
adc
jae
mov
dec
pop
cmc
scas
push
std
mov
inc
add
mov
test
test
iret
xor
addr16
lea
lock
mov
cmp
pop
or
xchg
je
rcrb
cwtl
inc
dec
mov
out
sarl
out
jo
js
lret
sbb
mov
iret
xlat
sbb
stc
add
rcrl
jge
lock
mov
ds
push
insl
test
push
pop
loope
enter
jo
push
add
jne
xchg
enter
pop
into
mov
add
out
mov
icebp
sub
imul
out
xchg
stc
mov
add
into
mov
jb
icebp
mov
jle
aaa
mov
shr
pop
aaa
inc
dec
jns
jg
mov
das
shl
fdivl
hlt
mov
es
cli
xchg
ja
aam
jns
sbb
int3
ljmp
push
push
pusha
divl
push
out
jmp
jle
ret
or
or
push
pusha
xchg
shll
mov
dec
and
fsubrs
inc
shrl
fdivp
lea
cltd
icebp
mov
xor
in
sbb
add
ja
int
ljmp
jb
push
test
nop
daa
movsb
sti
cmp
sub
scas
inc
clc
dec
pop
mul
sub
pop
add
adc
stos
push
pushf
xor
stos
mov
mov
lcall
inc
mov
out
cmc
mov
adc
aad
fstpt
in
lret
bound
mov
scas
pop
aas
mov
pop
sahf
add
jmp
leave
xchg
pminub
mov
out
clc
xchg
or
cmp
lea
lea
fidivrl
loopne
aas
mov
ficomps
andps
sbb
pushf
lret
and
jmp
jbe
push
test
xchg
sti
xchg
movsb
cmp
sbb
xchg
dec
out
fstps
jo
mov
cmp
imul
shl
mov
mov
fistps
fwait
xor
sub
add
mov
std
or
loope
sub
dec
jl
xchg
push
stos
mov
leave
inc
jmp
cmp
andb
dec
cs
mov
inc
and
lret
adc
xor
popf
es
jmp
mov
rcl
adcb
repnz
jp
xor
ja
mov
lods
leave
and
jb
ljmp
cmpsb
cmp
call
clc
mov
rcrb
int
loope
and
insb
push
jmp
xor
inc
mov
lock
pusha
mov
jle
gs
inc
xchg
sub
int
ljmp
cmpl
or
push
mov
mov
cmpsl
add
xor
fwait
xor
push
gs
xchg
mov
or
pop
lret
bound
scas
out
test
dec
stos
inc
jg
sub
add
dec
loopne
hlt
mov
es
push
out
jns
shrl
sub
push
lods
or
adc
or
and
xor
sub
mov
mov
push
and
jne
ds
call
stc
pop
mov
jbe
clc
mov
js
jp
in
inc
mov
mov
mov
sbb
adc
and
fxch
lea
rcrl
adc
mov
xchg
and
inc
inc
xlat
cmp
es
pop
insb
out
xchg
lret
jg
pop
jno
cld
xchg
or
cwtl
inc
fld
es
fisubrs
or
in
sub
ds
dec
adcb
mov
mov
push
mov
push
mov
lods
cld
xchg
fiaddl
cmp
push
sbb
xlat
test
pusha
sbb
out
sti
cmp
mul
into
inc
fstpt
loopne
repnz
sub
jecxz
xchg
sub
add
sub
mov
out
xchg
cli
xchg
or
sahf
xor
fwait
movsb
les
mov
shrb
dec
mov
inc
mov
xchg
fsubs
push
push
lds
jne
cli
mov
dec
in
lret
shrb
sbb
push
sub
xor
pop
mov
int
cmp
mov
push
movsl
cmp
call
mov
jns
mov
cmp
pop
out
in
push
mov
nop
mov
jns
mov
pop
and
loopne
lds
push
lret
imul
pop
fmuls
sbb
fs
adc
dec
in
and
xchg
xchg
jmp
mov
mov
cmp
pusha
imull
pop
hlt
mov
push
lods
cwtl
jno
mov
inc
orl
pop
addr16
jg
test
push
sbb
daa
mov
lods
inc
jmp
jg
pop
clc
loope,pt
aad
popa
adc
in
cmp
cs
add
mov
push
in
or
in
pop
sub
popf
mov
mov
shrb
stos
inc
stos
inc
fldz
arpl
fs
mov
pop
fnstenv
or
jbe
jp
dec
jecxz
sbb
jno
into
mov
sti
scas
dec
fbld
cmpsb
mov
cmpsb
xor
push
in
inc
mov
mov
jne
jns
pop
imul
sar
jmp
inc
xlat
nop
xorl
mov
sub
call
push
lods
ss
dec
scas
push
ds
icebp
outsb
add
pop
js
iret
test
adc
push
xchg
sub
and
mov
loope
mov
sub
int
cmp
es
dec
mov
fucomi
outsl
push
jmp
mov
mov
dec
in
push
push
xchg
cmpsb
inc
ficoml
add
add
pop
int3
or
fstp
call
push
pushf
icebp
lcall
add
jb
push
mov
stos
or
pop
sbb
push
in
fwait
mov
leave
pusha
mov
cltd
in
jg
inc
xchg
push
mov
mov
aad
jne
mov
addb
popa
pop
sbb
mov
enter
in
test
lret
cmc
inc
inc
fdivs
xchg
xor
les
add
push
lods
xchg
movsw
cmp
ss
dec
imul
lret
xchg
sub
out
sbb
xchg
cmpsb
arpl
fnsave
fnsave
add
jnp
mov
inc
push
push
pop
out
lahf
adc
sub
shrb
xchg
adc
or
cmp
xchg
scas
ret
mov
imul
mov
add
xchg
pop
clc
dec
aaa
test
outsl
add
mov
xchg
sub
call
fidivl
lret
pop
sahf
std
test
adc
mov
push
ljmp
mov
mov
loopne
rcl
scas
inc
cmp
dec
in
fisubl
pop
jbe
cmp
mov
insl
or
adc
sub
shrl
adc
and
inc
pop
sub
iret
stc
divb
add
les
push
jmp
mov
mov
lods
push
mov
or
scas
dec
aas
sbb
push
rorb
xchg
in
in
std
nop
icebp
mov
or
jp
or
or
addr16
sbb
push
mov
rclb
std
rolb
mov
scas
inc
enter
les
hlt
fwait
in
lcall
fidivs
and
pop
or
mov
sub
and
mov
xlat
ret
sbb
stos
aad
dec
dec
pop
scas
jp
inc
fcmovnu
pop
out
dec
cli
pushf
xor
ljmp
cmpb
mov
jnp
out
xor
xchg
cmpsb
xor
mov
fisubl
lret
stos
repnz
in
or
cmpxchg
pop
repz
push
ss
adc
andl
loop
inc
insl
xchg
xor
sbb
jns
mov
fldt
int
xor
fsubrp
adc
sahf
add
jb
shlb
xchg
ja
add
es
cwtl
jmp
loop
sub
jg
aas
int
pop
cli
pusha
lods
inc
push
sahf
mov
jae
xchg
gs
lds
fbstp
sub
dec
mov
or
mov
and
sbbb
fnstenv
push
stc
nop
inc
cwtl
out
shll
mov
test
push
popf
imul
push
cld
adc
adc
mov
fdivl
mov
mov
int3
pop
stc
inc
cmp
xor
mov
rclb
in
inc
jns
cmpsl
addr16
sahf
pop
push
cwtl
das
ja
lds
xor
pop
mov
js
neg
je
pop
popf
xor
mov
imul
mov
test
and
gs
mov
push
inc
loope
push
imul
lahf
aas
jnp
inc
insl
xlat
sbb
jmp
dec
jecxz
jne
sbb
dec
loopne
jae
mov
aaa
sbb
pop
inc
pop
rcrl
mov
sbb
pop
mov
in
jle
stc
outsl
test
sti
add
mov
dec
in
and
push
mov
or
add
pop
cmp
mov
rolb
add
into
mov
inc
pop
hlt
pop
hlt
out
rcll
lock
push
mov
inc
sub
sbb
push
mov
test
cmp
loopne
mov
je
and
jmp
add
inc
movsl
scas
adcl
xchg
jle
scas
mov
in
imul
ret
call
stos
xchg
cld
pop
or
push
aam
ljmp
inc
mov
jae
ds
fsubrs
into
and
add
dec
dec
adc
icebp
jnp
pop
insb
loopne
cmp
sti
addl
in
adc
mov
enter
mov
xchg
leave
sub
lahf
inc
push
cli
scas
add
inc
in
ss
mov
push
lds
jp
adc
inc
mov
call
js
pushf
div
or
jp
lock
stos
les
mov
cmc
gs
dec
lock
mov
int
pop
ds
fldt
cmp
lock
add
pushf
mov
inc
push
in
bound
ljmp
data16
jl
ror
adc
mov
repnz
and
sub
insb
push
out
mov
mov
add
mov
mov
ds
dec
iret
mov
mov
pop
out
insb
push
or
mov
lods
popa
in
push
push
out
insb
fists
mov
shr
xchg
loopne
out
insb
hlt
mov
mov
lea
out
insb
push
imul
push
subl
pop
push
xchg
out
test
daa
in
pop
out
mov
lods
cmp
mov
mov
fisubl
and
xor
pop
scas
xchg
or
add
adcl
adc
xchg
add
xor
and
and
push
adc
and
inc
jbe
divl
inc
mov
pusha
sub
sub
xor
ja
xor
iret
xchg
sub
mov
mov
push
cmc
mov
daa
jbe
gs
into
gs
in
cmp
in
or
or
pop
outsl
sub
mov
roll
xchg
inc
ffree
adc
inc
in
sti
adc
sbbb
mov
mov
pop
fdivrl
jbe
das
fdivl
mov
xchg
in
cli
xchg
mov
sbb
aaa
aad
scas
push
pop
cmp
mov
ss
stos
pop
out
fdivrl
jmp
std
jbe
xor
fwait
sti
mov
mov
lret
fistl
push
push
jnp
fmul
inc
push
addr16
imul
mov
pop
cmp
test
jo
and
sets
lods
lret
das
shrb
das
addr16
jae
stos
mov
mov
pop
sbb
lret
pop
ja
or
xchg
cld
lods
jmp
and
stc
mov
orb
hlt
outsl
jge
ret
addl
repz
and
inc
into
gs
inc
fyl2x
cltd
in
or
popa
clc
inc
in
or
xchg
sub
ljmp
push
cmp
pop
fidivl
xor
sbb
clc
in
mov
scas
fidivrl
int3
mov
push
ljmp
jno
cs
scas
add
es
mov
push
jmp
test
sub
jb
std
dec
jmp
test
cmpsb
std
cltd
mov
in
test
inc
fwait
xor
or
lret
cmp
shrb
or
xchg
pop
ret
aas
mov
jno
push
push
mov
stos
inc
imul
sub
mov
fiaddl
popf
or
aas
pop
jmp
fnsave
jl
insl
aam
roll
es
pop
jecxz
xchg
adc
ss
addr16
cltd
cmp
or
push
push
fmul
out
sar
andl
cli
sub
add
fisubs
push
add
test
mov
mov
in
aas
stc
mov
mov
aas
pop
sar
into
mov
and
and
fsubrp
ret
loopne
cmp
pop
std
shrb
sbb
pop
jae
repnz
nop
sbb
sub
xor
xchg
jne
dec
into
dec
mov
in
inc
dec
push
sar
loope
ret
xor
add
mov
dec
add
aaa
add
out
lret
dec
dec
inc
lds
mov
shlb
xchg
cmp
push
subl
pop
int3
xchg
mov
insl
pop
daa
outsb
xchg
js
dec
cmpsl
sbbl
addr16
cmp
int3
and
inc
mov
dec
mov
mov
lea
adc
sub
xchg
js
cwtl
movsl
lock
dec
jmp
or
cmp
fists
mov
sti
loope
or
sbb
sub
sub
push
inc
fiaddl
test
hlt
fcomi
fnstenv
jge
sub
mov
xor
lahf
adc
dec
shr
xor
sbb
rorl
je
adc
int
xor
mov
xchg
sub
fsts
or
dec
jb
je
pop
xchg
aam
lds
hlt
mov
aad
pop
pop
cmp
mov
sub
addr16
lea
sarl
pop
hlt
adc
adc
and
int
cmc
imul
xor
movsl
fdivl
cli
arpl
sub
sti
xchg
imul
pusha
xor
push
inc
mov
jne
jnp
xchg
xchg
mov
xor
test
sbb
stos
inc
add
mov
mov
sbb
aam
or
push
pop
and
imul
pop
data16
xor
inc
mov
nop
mov
out
test
sub
cwtl
movl
cmp
outsl
push
popf
test
mov
cmp
gs
mov
xchg
sub
mov
xchg
sub
cltd
xor
sub
inc
dec
xor
cmp
sti
xchg
sbb
das
pop
mov
loope
ja
addr16
jg
lcall
dec
pop
and
aam
pop
repnz
cmc
add
lret
add
ss
lds
testb
fs
pop
arpl
data16
xor
aam
sahf
xor
add
orl
adcb
pop
cmpsl
adc
dec
xchg
mov
ret
adc
inc
cmpsl
iret
mov
push
cmp
mov
cmp
push
in
jo
push
dec
mov
rclb
xor
sub
xor
dec
dec
rolb
inc
pushf
psubb
cmpsb
jb
in
xor
movsl
push
mov
pop
adc
ficomps
xchg
dec
fldcw
vpunpcklqdq
sahf
or
call
movsl
fisttpl
ret
test
repnz
scas
inc
mov
outsl
cld
rorb
imul
sbb
rcrl
into
gs
jmp
jl
mov
loopne
mov
scas
lcall
dec
jg
inc
ljmp
pop
repnz
mov
xor
aas
mov
mov
xchg
lods
int3
arpl
lret
mov
sub
mov
xchg
ret
pop
add
dec
out
push
xor
mov
and
mov
outsb
add
or
cmp
pop
jecxz
shll
sbb
cs
call
hlt
lock
loop
daa
mov
mov
fistps
mov
inc
jne
ss
sbb
pop
fdivl
xor
gs
cltd
xor
cltd
stos
inc
cs
jecxz
fs
es
test
cwtl
inc
and
mov
adc
stos
xchg
sub
pop
out
imul
add
pop
dec
sub
ja
mov
jg
subl
dec
jns
fidivs
lcall
fidivl
repnz
mov
sbbl
in
movsl
test
push
cltd
clc
stos
inc
mov
fdivl
sbb
mov
pop
xchg
add
push
cmp
inc
push
aas
leave
pusha
mov
scas
inc
cwtl
shl
jle
mov
inc
xlat
aam
push
jp
nop
insb
xchg
pusha
testl
mov
xchg
sub
jl,pt
mov
push
in
mov
xor
jbe
jns
or
mov
push
out
mov
push
nop
jo
leave
stos
xlat
and
lret
or
mov
loopne
insl
push
loopne
gs
mov
sbb
xchg
int3
or
arpl
call
ret
cmp
shl
cmp
rorb
out
loopne
add
mov
cmp
loope
dec
pop
fwait
xor
xlat
outsb
mov
pop
stos
fdivl
jge
in
fs
stos
inc
test
shr
pop
add
inc
pop
inc
fmull
pop
nop
adc
ja
or
repz
dec
dec
or
xchg
jle
add
shlb
stos
mov
les
inc
sub
xor
mov
jp
movsb
addr16
push
enter
adc
mov
xchg
daa
mov
jb
cltd
jo
push
ljmp
lds
xor
std
mov
das
fcompl
xchg
stos
scas
leave
arpl
fsubrl
fbstp
dec
in
pop
pop
lds
std
mov
mov
fmul
push
xchg
cmc
xchg
movsl
push
mov
sub
xchg
sub
jae
in
lock
inc
insl
std
mov
lods
or
mov
pushf
dec
fs
xchg
bound
mov
outsb
add
push
call
mov
test
fcoml
roll
add
outsl
fstp
sbb
dec
jl
inc
test
add
shll
ficoms
jb
pop
movsb
xor
loope
cmp
pushf
outsl
xchg
aaa
mov
xchg
sub
xor
adc
icebp
inc
ret
xchg
and
int3
test
pop
ljmp
and
in
dec
stc
nop
jle
ja
pop
push
jno
cmp
lods
test
jno
aas
mov
and
push
xchg
xor
xchg
sub
in
push
pop
pop
cltd
and
int
popl
mull
cmc
aas
add
pushl
ds
sub
jmp
jp
xchg
sub
stc
stos
pushf
lret
push
cmp
lret
add
movsl
pusha
xor
dec
pop
push
sub
orl
arpl
push
adc
xor
test
jno
add
xor
jp
bound
lods
insb
imull
dec
dec
iret
push
inc
mov
fimull
pushf
sub
lds
lahf
das
xchg
dec
xchg
pop
test
mov
and
repnz
dec
out
xor
das
or
and
js
in
loop
adc
mov
mov
lock
rcrl
repnz
pushf
ds
xor
into
fistl
push
push
std
outsl
je
lock
je
cmpl
add
jno
push
les
jns
mov
xor
mov
pop
out
mov
jmp
or
rcr
out
or
pop
test
mov
fmull
inc
scas
pop
xchg
sub
add
arpl
aaa
js
leave
std
cmp
sti
mov
ret
aas
mov
and
dec
jne
es
push
aas
lahf
outsb
popf
aas
xor
jo
mov
xor
add
jae
pushf
xor
xchg
pop
ss
or
shl
bound
cli
add
ja
push
pushf
xor
arpl
das
dec
mov
mov
insb
xlat
aam
daa
lret
dec
ret
out
in
test
and
sbb
ss
push
push
pusha
testl
leave
pusha
or
data16
push
or
int3
pushf
xchg
sub
in
sub
push
lock
shrb
adc
imul
add
jp
xchg
das
nop
jp
adc
repnz
sbb
lea
out
mov
das
cmc
jnp
mov
lahf
dec
xchg
shlb
adc
sbb
test
xchg
mov
pop
fstpl
sahf
and
mov
bnd
into
gs
cwtl
and
sarl
inc
ja
dec
out
pop
push
addr16
push
pop
mov
cmp
scas
fsubl
shll
and
in
push
adc
out
mov
insl
mov
pop
movsl
jnp
adc
and
stc
gs
jnp
js
dec
repnz
dec
mov
popa
lock
jae
jno,pn
rcr
cmpl
sub
dec
aaa
addr16
jbe
lcall
cmp
les
dec
jecxz
mov
repz
psubsb
das
add
pop
es
inc
cmp
subl
pusha
cltd
je
jg
inc
sub
mov
inc
adc
ljmp
push
cmp
inc
xlat
lcall
cld
cmpsb
mov
cmp
xor
les
dec
cmp
cs
sbb
test
adc
xchg
pop
jnp
mov
mov
pop
pop
ds
test
mov
in
insb
mov
scas
faddl
inc
mov
hlt
adc
dec
or
jle
je
push
cmpsb
call
movsl
imul
mov
jecxz
mov
into
push
inc
sti
movsb
cltd
hlt
push
daa
nop
sub
inc
fcomps
enter
movsl
adc
enter
xor
jnp
lret
lock
in
and
dec
pop
mov
sub
rorb
cmc
repnz
cli
xchg
iret
xchg
cmpsb
add
cmp
into
out
mov
adc
or
inc
test
mov
in
push
rcr
mov
in
dec
scas
inc
jg
insb
es
lods
arpl
popa
cmp
push
orl
mov
jnp
mov
add
pop
pop
inc
mov
cmp
bnd
test
push
mov
in
pusha
xchg
shr
ss
mov
lret
fdivr
leave
inc
ds
shl
xlat
repz
stc
ss
pop
push
push
movsb
xchg
xor
xchg
sub
push
insb
cmp
cmp
inc
pop
dec
loop
mov
fs
dec
jnp
jns
in
stos
sahf
add
mov
dec
mov
nop
in
dec
dec
add
xchg
lods
mov
sub
mov
daa
loope
xchg
adc
clc
jge
inc
fsts
jge
fisttps
push
pop
icebp
nop
daa
repnz
dec
push
cmpsl
ss
popa
loope
aas
pop
cmovo
lret
andb
or
sbb
add
adc
push
mov
fcoml
js
push
mov
repnz
or
sarb
inc
mov
popa
xor
insb
mov
and
out
push
popf
loop
xchg
stos
mov
loopne
lret
mov
fldenv
add
jmp
outsl
rcrl
jb
shl
jp
mov
in
subl
mov
pop
xchg
sahf
int
cwtl
enter
icebp
hlt
add
mov
ficompl
xchg
sti
xchg
sub
mov
les
jmp
sub
cld
xchg
or
mov
push
xlat
loopne
pusha
lds
flds
je
mov
jge
scas
sti
add
and
mov
adc
imul
aaa
dec
sbb
test
dec
and
outsl
add
pop
pop
nop
jmp
xchg
mov
mov
js
faddp
dec
or
pop
ret
adc
or
mov
ss
cs
mov
ret
in
cmp
or
inc
jge
add
jge
and
sub
rclb
fbstp
pop
out
pusha
clc
pop
lods
inc
xchg
cmp
jae
ss
mov
std
popf
push
out
and
enter
je
fs
sub
jg
pop
leave
push
das
sub
push
pop
xor
das
add
bswap
leave
sub
scas
aaa
or
adc
cmp
out
cmpsl
scas
dec
pop
pop
mov
inc
repz
gs
mov
pusha
imul
sub
in
xchg
mov
cwtl
aad
das
pop
mov
push
subl
lods
mov
sahf
xchg
jns
in
jns
sub
andl
ret
test
adc
test
shrb
xor
jb
leave
aas
mov
in
lret
imul
popa
jnp
jns
sbbb
xchg
shll
xor
mov
lret
pop
xlat
mov
movsl
test
jmp
pushf
sbb
pop
fwait
dec
daa
cmc
stos
leave
call
xchg
stc
jne
xor
sub
or
sti
xchg
inc
rorl
pop
lret
push
fcomi
leave
xor
test
push
rep
jmp
mov
and
mov
cmpsb
fisttpll
jb
sub
das
mov
cmc
cmp
pop
repz
in
lcall
jmp
jecxz
icebp
mov
mov
adc
rcl
movsl
pop
mov
jmp
and
jns
sub
lds
adc
pop
mov
das
and
fldl
icebp
loop
loope
je
xchg
mov
cs
add
pop
xchg
xlat
jmp
scas
and
dec
clc
mov
ret
lcall
inc
leave
addr16
mov
sti
xchg
test
cmp
aad
xchg
cmc
fstps
test
lcall
dec
adc
cmpsb
mov
add
xchg
nop
pop
xchg
push
shll
xchg
insl
add
jg
popa
lret
outsb
out
push
and
xor
rorb
loop
or
cmpsb
lret
pop
pop
cmp
adc
sub
dec
cmpsl
cmpsl
cwtl
sbb
icebp
stc
dec
stos
lock
cs
mov
xor
mov
jo
xor
iret
popf
cmp
mov
pop
and
mov
mov
iret
pushf
dec
jmp
or
popf
loopne
imull
pop
pop
xor
dec
sub
insb
cltd
hlt
mov
call
sbb
fiadds
push
int
adc
call
add
les
pop
mov
pop
push
in
mov
lcall
pop
gs
mov
fsub
mov
lret
cmp
cld
aam
inc
fld
cmc
orl
push
xor
pop
jns
jg
inc
xlat
dec
xchg
mov
test
sbb
xchg
lods
xchg
mov
call
test
loope
xchg
sti
ss
sub
adc
xchg
jnp
push
or
and
cs
in
pop
fildll
adc
mov
clc
cmp
mov
fiaddl
mov
mov
adc
movsl
rol
iret
fucom
movsl
mov
ljmp
jno
jnp
inc
jmp
gs
mov
jbe
pmullw
pop
cmp
imul
movsl
out
add
dec
icebp
gs
rclb
mov
pop
fldl
dec
lahf
or
cmp
aam
xchg
mov
mov
xor
js
and
ljmp
push
cmc
call
popa
jecxz
testl
mov
or
stos
scas
add
dec
loop
and
sub
sbb
sbb
or
jne
testl
or
ss
inc
jnp
sti
and
popa
ror
jmp
cmp
loopne
je
in
arpl
xor
xchg
cmp
test
mov
loop
imul
add
jl
pop
sbbl
push
call
fidivrs
mov
and
inc
ljmp
dec
mov
pop
js
jae
jbe
inc
mov
out
pushl
das
add
mov
sbb
or
in
andl
call
jmp
jns
sbb
mov
addl
stc
nop
fsubrl
mov
mov
fwait
cld
sbb
push
push
movsb
aas
in
outsl
adc
cmp
imul
jo
add
das
xchg
xchg
test
jbe
gs
cmc
and
cmp
push
mov
ja
dec
bound
imul
sub
pop
loopne
adc
sbb
subl
mov
sbb
lahf
xor
ds
lods
test
mov
jns
cmp
xchg
fwait
ret
iret
lea
adc
movb
out
sbb
test
ds
and
push
shrl
add
call
adc
pop
pop
fxch
jecxz
lahf
jns
mov
loopne
cmpl
cmp
call
pop
add
pop
repz
aam
mov
repnz
push
cld
cld
pop
cmc
jecxz
jp
out
push
add
movzwl
add
sub
cmp
ret
test
mov
xor
pop
push
jno
jns
ficoms
mov
jge
cld
mov
imul
cwtl
ds
fs
push
scas
inc
addb
shrl
rorb
call
cmpsl
add
adc
negl
push
adc
ja
popa
jge
shr
mov
stc
mov
fwait
cmp
pop
out
aad
testl
aad
cmp
mov
and
incb
cmp
ror
pop
jp
ficomps
adc
ss
fwait
dec
sahf
icebp
iret
and
lret
lret
sti
mov
aam
and
xor
flds
dec
std
dec
dec
pop
jp
fcomip
adc
cmp
push
mov
push
pop
sahf
popa
jl
mov
xchg
jbe
loopne
fidivl
add
imul
sbbl
outsb
mov
ja
mov
stos
inc
cli
test
fidivl
add
xchg
jbe
insb
mov
cli
jo
fisttpl
fcoms
sub
pop
push
int
inc
outsb
pop
hlt
xchg
xchg
jle
lret
jae
or
call
push
sbb
mov
mov
push
fwait
xor
pop
push
and
andps
test
cmp
popf
insl
out
mov
in
inc
testl
sub
jp
pop
fwait
mul
aas
adc
aas
nop
daa
jno
and
jl
and
bound
loop
mov
imul
cmc
pop
stc
lea
push
mov
int
jb
das
out
xlat
out
dec
mov
cmp
mov
xchg
imul
mov
test
clc
repz
pop
mov
addr16
cwtl
sub
daa
or
pop
xchg
ds
xor
repnz
mov
repz
fwait
mov
cmpsb
ss
sahf
into
inc
or
sub
test
inc
pusha
add
aam
jmp
imul
push
out
in
cmp
loop
fistpll
into
jae
notb
nop
test
sbb
dec
in
and
mov
dec
jp
jg
cmp
add
pop
rcll
das
and
sub
ficompl
or
sbb
cmp
arpl
mov
scas
ud1
add
adc
inc
push
aaa
es
pop
dec
movsl
cmp
sbb
int
inc
cltd
sub
insb
adc
into
cmpsb
mov
mov
lds
pushf
sbbb
fisttpll
popa
mov
or
pop
push
mov
cltd
pop
add
imul
mov
pop
imull
dec
mov
or
or
test
into
pop
repnz
jecxz
adc
sbb
add
in
inc
shlb
cwtl
jp
sahf
int
push
xchg
cwtl
xchg
add
es
xor
nop
and
insl
sub
out
stos
inc
and
cwtl
mov
gs
aam
cltd
orb
jo
mull
ret
lret
loop
std
in
aad
inc
call
movsb
pop
inc
repnz
mov
mov
fwait
mov
data16
aad
mov
or
cmp
cmp
fadd
inc
fidivs
jne
fnstenvs
lret
push
adc
push
jge
cmp
arpl
mov
add
mov
jae
lret
dec
mov
or
icebp
imul
movsl
scas
xlat
sahf
xor
test
sub
add
or
and
and
mov
mov
add
add
scas
xchg
shl
ficomps
push
in
dec
std
xchg
mov
loopne
push
rclb
loopew
push
mov
loopne
push
cld
jle
fcmove
sarl
cmc
fisttps
mov
mov
loope
jmp
testl
push
mov
inc
gs
xor
pop
testb
in
push
in
lods
add
int
lret
push
inc
cmpsb
ds
push
mov
lahf
arpl
pop
out
mov
cmp
test
sbbl
fildll
into
cmpsb
es
push
mov
push
pusha
test
mov
in
cmc
mov
dec
mov
shll
mov
ret
fyl2x
rcrl
stos
inc
rolb
push
icebp
rcrl
sbb
das
insl
push
out
sahf
push
shrl
mov
nop
daa
xor
ss
push
iret
data16
cwtl
inc
xlat
daa
stos
inc
fstpl
dec
sarb
outsl
icebp
hlt
mov
faddl
lret
mov
repz
mov
sbbl
xchg
cmc
mov
test
adc
fucomi
sbbl
or
lahf
shrl
push
movsl
cmp
and
dec
mov
xor
mov
xor
or
or
and
add
shrl
mov
daa
setnp
xor
cmpsl
in
mov
push
sub
loope
push
pop
sahf
mov
ret
hlt
ficomps
cmp
or
js
fwait
loope
or
push
cmp
subl
push
jle
fs
and
dec
loope
sub
mov
test
sbb
mov
mov
cmp
daa
test
int
mov
sub
jnp
mov
shrl
imul
repnz
rclb
pop
push
add
fdivl
lret
out
cmp
fiadds
int
popa
clc
mov
jl
sub
inc
jle
out
pop
popf
sbb
in
inc
fidivrs
and
mov
fisttpl
adc
mov
into
sbb
push
loopne
into
adc
stos
stos
push
jnp
test
lds
dec
outsl
push
cmp
aad
mov
dec
push
popf
cmp
cs
pop
scas
mov
dec
push
call
or
push
mov
inc
cwtl
das
xor
stos
ds
add
pusha
push
std
insb
add
sbb
ret
pop
push
inc
loopne
xor
xchg
mov
mov
cmpsl
mov
aam
lods
out
aaa
adc
ja
inc
push
add
arpl
shrl
inc
mov
adc
iret
fldt
jmp
pop
cld
or
insl
aam
push
inc
xchg
dec
into
sbb
push
into
addr16
fs
jp
fiadds
sahf
jae
andl
push
jmp
or
inc
fldcw
jg
mov
sbb
add
clc
mov
sahf
outsl
in
lods
loope
pop
repz
xor
fmull
sbb
mov
repz
xlat
outsb
mov
fimuls
subb
cmp
pop
dec
mov
cmpb
and
fsubrp
out
test
mov
pop
repz
xchg
lahf
sub
test
sub
fnsave
leave
push
mov
fimuls
sahf
inc
cs
cs
popa
das
fdivrs
pop
pop
scas
mov
ret
push
shld
dec
loop
adcl
jl
adc
cld
aas
xchg
psubb
jge
mov
push
es
decl
lret
sub
or
cmpsl
aad
test
sbb
jecxz
leave
xor
mov
lea
test
pop
outsb
cwtl
and
shrb
pop
add
daa
ja
ficoms
cmp
sbb
std
pop
inc
out
rorl
imul
fs
push
sbbl
cltd
pop
adc
pop
pop
inc
outsl
push
mov
lcall
or
fstpt
adc
sti
in
mov
rcl
dec
mov
loopne
pop
les
mov
mov
pop
lock
scas
inc
mov
cmp
mov
movb
jbe
jno
push
gs
adc
lret
bound
rcl
mov
xchg
push
int3
sbb
mov
outsl
loopne
pop
push
mov
cmc
cmp
pop
jae
and
pop
xor
lahf
lret
xchg
pop
mov
fscale
xchg
or
inc
sub
xlat
lea
xchg
cmp
mov
jnp
bound
pop
outsb
dec
or
dec
pop
xchg
popa
cmp
daa
fmull
inc
les
aaa
fcompl
aaa
in
jo
adc
mov
add
mov
cmpsb
cmp
add
push
mov
lods
insb
sbb
test
les
popl
push
repz
mov
pusha
dec
in
mov
and
pop
push
adc
dec
jb
xor
pop
ja
inc
pop
daa
fists
and
outsb
test
les
jl
dec
cmp
lods
adc
lock
and
push
mov
jle
pusha
sub
ret
pushf
inc
dec
loopne
jp
inc
fstl
sub
mov
shlb
std
sub
jb,pn
sub
outsb
mov
ss
add
ret
in
jl
cmp
aaa
into
loope
sarb
pop
movsb
daa
mov
movsl
add
or
dec
jecxz
das
testl
cmc
jl
daa
shrl
ss
dec
out
pushf
scas
jne
push
or
push
pop
pusha
cmpsl
addr16
idivl
push
xor
jb
insl
mov
dec
jnp
mov
scas
das
inc
mov
sbb
ret
lock
cmc
or
call
cmpsb
adc
and
in
mov
sti
ret
dec
mov
ljmp
mov
out
mov
push
sub
cmc
xchg
sbb
into
jb
in
shlb
push
frstor
out
std
and
adc
je
mov
decb
rolb
jne
movsl
popa
xchg
icebp
dec
mov
adcl
xor
frstor
push
mov
push
popf
xor
sbb
mov
ret
adc
push
gs
mov
ficomps
jecxz
sub
data16
cmc
xor
sub
das
movb
fiadds
inc
or
pop
mov
in
sub
mov
dec
add
xchg
inc
sbb
imul
sbb
mov
mov
jp
push
mov
int
fs
out
sahf
xor
sbb
ds
loope
loope
and
pushf
inc
or
addr16
inc
inc
xchg
sub
add
lea
lcall
dec
jae
pop
dec
js
cmp
loop
push
jnp
addr16
jb
cmp
ds
push
pop
loope
lods
jno
icebp
mov
ret
sub
mov
pop
hlt
out
roll
mov
xchg
outsl
push
loope
jae
out
mov
data16
pop
mov
mov
adc
clc
clc
icebp
repz
scas
dec
adc
movsb
test
lret
xlat
push
pop
scas
pop
clc
xor
sub
int3
dec
dec
xor
pop
insl
sub
xor
push
xor
loopne
test
enter
mov
xchg
push
pop
hlt
test
and
jl
dec
loop
popf
push
ljmp
mov
testb
enter
sub
mov
mov
fstl
fiadds
pop
mov
decl
mov
fisubs
lock
lods
adc
movsb
ror
pusha
mul
repnz
hlt
and
push
mov
lret
loope
dec
in
add
xor
pop
scas
dec
push
lock
dec
loopne
jae
adc
lahf
xchg
lcall
jbe
push
mov
sub
jl
out
jp
push
pop
pop
sahf
xchg
jae
pop
dec
mov
add
imul
jg
push
nop
daa
pop
mov
xor
fsubs
push
xchg
lds
push
add
lcall
out
dec
js
push
inc
out
ds
ret
rcl
imul
or
mov
pop
lret
cmp
std
jg
mov
push
mov
shlb
pop
aaa
into
movsl
lds
fistpl
push
into
gs
inc
fsubrl
xchg
pop
lea
enter
inc
cmp
pop
clc
mov
ret
xlat
mov
add
stc
inc
fidivrs
filds
jmp
daa
mov
cmp
pop
sub
int3
fdivrl
lods
std
ss
scas
mov
loopne
je
addl
cwtl
das
aam
cld
xchg
xchg
mov
xchg
in
fcomp
jno
push
fs
aas
sub
pop
pusha
sbbb
jle
lods
scas
mov
aaa
in
xor
add
mov
jmp
mov
cmpsb
lods
sti
xchg
ffreep
mov
xor
lods
inc
dec
push
cmp
inc
jge
push
scas
push
movsl
cmp
mov
ret
xlat
add
ret
and
in
inc
sub
adcb
je
add
dec
xchg
xor
cmc
call
fchs
lahf
xor
mov
xor
dec
dec
mov
and
mov
insl
mov
push
rcrb
arpl
jne
sbb
inc
xor
cmp
push
movsl
pop
jne
psrlq
push
and
mov
or
or
mov
push
mov
cwtl
pop
sti
addr16
sbb
int
popf
mov
aad
mov
popa
cltd
ss
mov
ss
inc
imul
addl
mov
or
adc
imul
xchg
lods
outsl
lods
cmp
lds
push
icebp
ljmp
cs
cmp
rol
xor
stos
lret
mov
push
test
inc
movsl
cmp
sub
inc
mov
mov
pushf
inc
cmc
mov
sub
mov
sub
cwtl
fwait
dec
je
inc
das
sbbl
call
sahf
js
adc
in
out
push
lods
pop
xchg
jns
pop
movsb
jb
jns
int3
aam
push
jo
lcall
or
int3
or
js
arpl
adc
stos
mov
test
fldt
ret
mov
mov
cmp
push
push
mov
jp
aaa
xchg
xchg
pushf
xchg
in
into
inc
mov
imul
aam
popf
add
ds
jo
movsb
cmp
aaa
ret
add
mov
adc
sahf
fildll
pop
push
int
adc
add
negb
mov
xchg
dec
jb
pop
sub
add
mov
xchg
push
jmp
mov
pop
mov
mov
sub
lahf
je
mov
add
popf
adc
rolb
jns
insl
in
sub
mov
idivb
das
pop
mov
fwait
push
mov
xor
out
fisttpl
cs
push
test
adc
sub
or
mov
insb
xchg
test
stos
adc
scas
sbb
aaa
popa
clc
test
or
jl
add
xchg
dec
pop
outsb
jge
sbbl
data16
dec
add
or
adc
enter
pmovmskb
mov
mov
rolb
add
and
pop
cwtl
dec
jl
adc
lret
sbb
mov
data16
lret
push
push
and
lock
addr16
ja
or
and
sbb
out
scas
sar
test
mov
jnp
lods
jecxz
xchg
clc
adc
movsl
into
lahf
xlat
outsb
into
out
sub
xor
xchg
aam
lret
orl
mov
movsb
repz
push
or
imul
mov
bound
addl
xor
test
pop
movsb
mov
add
inc
pop
adc
sub
push
je
sbb
inc
sub
aad
popf
rol
pushf
xor
in
movsb
pop
fdivrl
jmp
sub
jne
fldlg2
add
inc
push
push
and
push
dec
pop
jmp
jne
mov
arpl
stos
or
ds
adc
in
xlat
outsl
rol
aas
or
xor
out
push
in
adc
xchg
test
cmp
fidivl
push
xchg
mov
fnstcw
cltd
mov
fsub
xor
add
xchg
push
adc
push
sbb
daa
lock
out
test
sub
jno
test
mov
xlat
sarb
test
popf
cmpsb
pop
jo
or
cmp
push
and
xor
mov
pushl
xlat
fdivrl
dec
call
fwait
in
jle
jnp
insb
repnz
cmp
and
ret
dec
loope
rclb
or
adc
mov
pop
cs
fidivrs
push
out
sti
sub
out
jle
loop
xchg
mov
sub
popf
xor
mov
mov
into
mov
push
in
push
out
lret
out
cmpsl
mov
cli
inc
or
out
sub
out
cwtl
std
test
xor
mov
lds
mov
adc
sti
cli
or
jecxz
jne
mov
das
insl
daa
cld
inc
inc
mov
xchg
call
adc
lea
cmp
add
add
mov
insl
jge
test
adc
inc
mov
rcrb
push
xor
mov
jecxz
fdivs
xchg
test
add
jp
cmc
push
scas
mov
sub
xchg
or
dec
gs
ljmp
sub
decb
lods
mov
cli
jmp
stc
fists
push
pop
jl
mov
xor
inc
scas
or
sti
mov
popf
gs
fbld
pop
scas
jge
and
xchg
sub
out
imul
rorl
push
xor
or
inc
dec
clc
rorb
lahf
sub
es
xchg
fbstp
jae
add
out
pop
leave
lahf
adc
xchg
jecxz
pop
adc
add
jecxz
scas
mov
mov
inc
mov
push
jo
xchg
dec
fistl
mov
sub
sub
push
push
add
mov
test
pushf
test
xchg
sbb
sub
push
pushf
movsl
loopne
sub
xor
jnp
jno
les
xlat
push
aaa
xchg
pop
into
jecxz
sbb
pop
lcall
and
inc
sub
sub
cmp
ret
mov
and
adc
dec
scas
js
shl
sbb
pushf
es
rol
scas
inc
xchg
in
popf
cmp
add
fucomip
movsl
or
loopne
idivb
cmpb
fimull
call
push
add
push
out
push
cmp
femms
or
pop
dec
loopne
mov
pusha
pop
push
push
shl
aaa
jne
ret
into
mov
out
icebp
or
add
push
lcall
in
cmp
mov
pushf
pusha
inc
or
test
mov
setbe
inc
and
sub
out
test
push
ret
fistpll
mov
sbb
adc
jns
call
sbbl
sbb
imul
xchg
mov
mov
or
sbb
sbb
mov
mov
fldl
faddp
popf
arpl
xor
outsl
andl
dec
popa
or
xlat
xor
push
clc
sub
push
xchg
iret
les
pop
mov
gs
adc
xlat
inc
ja
dec
in
sub
mov
hlt
ret
or
imul
or
jmp
ds
xor
outsb
fnstenv
stc
test
nop
xchg
das
ret
xor
ret
pop
mov
push
nop
sub
dec
in
xor
cs
lock
jl
xchg
push
sbb
and
jge
xlat
xorb
xchg
adc
fwait
cs
xchg
push
xchg
jne
lea
inc
sub
insl
sbb
mov
clc
push
jmp
arpl
xchg
jo
outsl
jnp
and
mov
cld
imul
fidivrl
imul
or
mov
or
ja
jg
mov
mov
dec
inc
pop
jle
scas
inc
mov
js
pusha
in
leave
ret
fsubp
inc
popa
push
push
mov
lret
aam
loope
jns
push
pop
rcrb
fsubp
notl
mov
aaa
dec
mov
mov
loopew
cmp
fld
jp
jecxz
out
sahf
gs
push
out
fisttps
flds
gs
sub
sub
clc
rolb
and
pop
lock
in
ss
xorl
cmpb
pop
add
fimull
sub
xchg
pop
lock
push
xchg
ljmp
ja
adcb
jg
rclb
dec
cmp
sub
lock
sbb
cmp
cwtl
mov
cwtl
add
addl
stos
pop
lahf
sahf
sub
or
jmp
roll
pusha
fs
lahf
es
mov
outsb
imul
sbb
lds
inc
cld
int3
or
jle
mov
data16
stc
and
xlat
lea
jno
xchg
xchg
lock
cmp
bound
je
mov
lret
or
stos
ret
push
xchg
xor
enter
sbb
lods
push
gs
or
into
mov
leave
jle
cmp
sbb
pusha
sub
mov
jp
int
lret
jl
enter
push
inc
xchg
movsl
incb
out
cld
popf
mov
and
push
lret
mov
lahf
stos
xor
ret
sbb
mov
add
sahf
fsubrs
jg
cmp
imul
pushf
or
imul
aad
fld
push
adc
ja
test
int3
and
push
xor
arpl
add
sbb
inc
dec
iret
in
mov
cmc
sub
in
nop
xor
mov
mov
and
inc
ss
out
out
xchg
xchg
ja
enter
jg
sub
sbb
test
sbb
stos
mov
cmp
sahf
scas
das
in
loopne
fnstenv
and
je
add
mov
pop
das
cwtl
ret
hlt
mov
pop
dec
mov
xor
leave
sub
fsubs
shrb
push
iret
xchg
out
xorl
pusha
data16
clc
scas
inc
sub
test
jne
decb
testl
sbb
and
xchg
inc
mov
into
pop
sub
sub
add
cmp
shll
sbb
sub
stos
xor
mov
mov
lret
scas
mov
rcr
aas
or
or
mov
xchg
mov
adc
mov
mov
cld
sbb
mov
sbb
and
xchg
pop
filds
aad
jbe
mov
dec
fsubrp
pop
aam
jmp
mov
ss
movsl
cmpb
jae
jge
sub
mov
insb
jecxz
inc
mov
pop
sbb
repnz
lods
inc
repnz
ljmp
and
push
sbb
or
mov
icebp
mov
cmpsl
orl
adc
adc
ror
pusha
enter
mov
je
arpl
pop
sub
pop
inc
cmp
sbb
ljmp
pusha
pop
cmp
dec
stos
or
adc
jae
push
push
cli
decb
xchg
icebp
or
in
test
mov
nop
mov
fldenv
sbb
inc
fcom
pop
ja
mov
pop
test
lods
test
xor
pop
sbb
movsl
pminub
addl
mov
lea
jge
dec
scas
or
push
js
shrb
dec
fisttps
lods
data16
fstpl
sbb
or
push
insl
fs
lcall
fwait
popa
rorb
repnz
int
js,pn
jae
jp
dec
add
lods
xchg
sub
es
cmp
mov
or
xchg
mov
bound
pop
ja
stos
scas
pop
mov
lds
xchg
lea
xor
shrb
cltd
imul
cmc
outsb
xchg
sub
imul
pop
fstpt
mov
and
test
pop
cmp
repnz
hlt
mov
inc
nop
cmp
mov
adc
inc
in
mov
arpl
mov
add
sub
jno
cmpsb
sub
xchg
sub
sub
lea
push
subb
jge
das
cmp
lcall
mov
movsb
pop
mov
cwtl
into
subb
cmp
jne
fsubp
out
out
es
pusha
jecxz
in
add
loop
xor
iret
popa
repz
mov
add
jle
adc
ret
insb
xor
loopne
into
pop
data16
mov
push
cmpsl
daa
fcoms
mov
ja
les
jmp
add
ljmp
outsb
bound
mov
add
scas
xor
shrl
popa
cs
in
inc
fstpl
fcos
push
test
adc
nop
daa
mov
fst
lods
push
push
je
xor
sub
cli
cmp
jecxz
int
rorl
insl
shrb
mov
jmp
push
testl
dec
jmp
cwtl
das
push
mov
cmc
pop
lret
pop
arpl
push
sub
inc
cmpl
push
out
fldenv
pop
ret
rep
cmp
fstl
dec
push
jne
lahf
cmpsb
call
in
mov
lahf
jp
add
jge
out
jg
hlt
jge
dec
out
push
jno
adc
cmp
and
cltd
sar
test
mov
pop
adc
cmpsb
add
loopne
in
daa
loopne
xor
orl
sub
shlb
mov
fistl
orl
jecxz
fsts
in
rcrb
dec
popa
jmp
lock
mov
inc
xchg
jae
and
int3
xlat
in
lret
je
and
das
jmp
fbld
jne
jmp
xchg
flds
adc
mov
xchg
push
sub
cmp
lock
mov
psadbw
mov
fdiv
pop
data16
add
mov
jmp
repnz
arpl
out
cmpl
in
cmpl
or
cli
cmp
mov
push
xlat
es
bound
rolb
sbb
arpl
cmp
into
orl
int
imul
gs
sbb
xor
cmp
fstpl
cmpsb
pushf
sub
lds
fs
mov
in
aam
push
xchg
adc
in
cmp
jne
push
insb
jl
dec
in
lods
je
fistl
sbb
movlhps
ja
mov
xchg
sub
or
jae
sub
add
push
xor
pause
cmpl
call
aas
sbb
repnz
lods
inc
mov
pop
lret
push
out
push
mov
mov
loopne
sarb
and
ret
pop
xchg
push
rcll
xchg
mov
gs
pop
repnz
adc
repz
dec
divb
scas
inc
bound
std
mov
pop
ss
sub
cwtl
xchg
sarb
jns
push
lcall
stc
jo,pt
sbb
bound
cmp
push
mov
jg
jg
mov
pop
add
sub
cmp
mov
ret
mov
aaa
dec
in
or
pop
out
mov
sub
testl
fs
xchg
mov
outsb
push
sar
jg
mov
cmpsl
mov
outsl
mov
mov
inc
ret
stos
jb
stos
push
sbb
loop
adc
mov
scas
clc
into
in
inc
xchg
sub
lahf
arpl
add
lods
fnsave
out
inc
pusha
sbb
and
xchg
in
mov
jno
push
adc
lea
cmpsb
imul
rorb
hlt
mov
insb
sub
gs
xor
jg
jp
cmc
mov
inc
mov
push
fucomi
adc
jb
sub
das
jge
pop
adc
cmp
jae
fwait
pusha
andb
pop
fsubr
jl
shll
push
sub
data16
scas
test
jbe
xchg
pop
int3
loope
add
sbb
ficoml
out
sbb
ja
xchg
pop
xchg
push
je
mov
or
pop
out
jl
pop
pop
lock
jmp
movsl
or
fildll
jp
repnz
or
sti
roll
cmp
xchg
scas
clc
jns
push
lods
jne
imul
and
nop
sbb
xor
inc
push
or
cmpb
sub
rolb
or
cmp
test
lods
js
sbb
jb
jne
mov
mov
js
push
ds
ss
loop
and
sub
fistpl
cltd
test
xchg
sbb
adc
inc
jnp
js
andl
adc
xor
in
inc
lock
test
and
faddp
pushl
mov
les
mov
shl
push
mov
add
gs
fisttpll
fwait
mov
ss
jmp
xor
je
push
inc
and
push
dec
and
adc
push
inc
fdivrp
aas
shrb
sahf
mov
loop
out
popf
loope
push
xor
jo
lret
lds
or
lock
addr16
jae
dec
rorl
insb
notb
sub
iret
sbb
mov
fidivrl
adc
bound
xor
mov
fstp
xor
mov
mov
xchg
add
fucomi
lods
xlat
cmp
mov
fdivrs
stc
call
mov
lds
push
sbb
push
fildll
popf
dec
jno
jg
out
js
pushf
call
add
sub
loopne
pop
cwtl
lods
js
sub
cli
fwait
pop
push
adcb
pop
ljmp
addr16
in
test
mov
mov
or
aas
push
xlat
scas
mov
add
cmp
fcompl
fstpl
pop
xchg
sub
dec
stos
imul
sar
pop
shrb
sbb
or
sub
xchg
mov
pop
loop
mov
push
dec
mov
dec
xchg
jp
xlat
stos
mov
or
sti
js
lret
pop
adc
test
push
dec
fldt
jno
std
sub
jae
inc
notl
jb
lds
ret
xchg
fstpl
ret
out
mov
outsb
push
mov
out
test
insl
hlt
mov
mov
pop
push
pop
pop
dec
into
ret
mov
mov
loopne
fadds
rolb
cmpsl
sub
sbb
dec
mov
add
psraw
jo
icebp
mov
add
pop
es
mov
xor
adc
dec
push
and
aas
ss
popa
insb
jne
lret
xchg
daa
outsl
hlt
adc
fstl
stc
mov
cs
repz
adc
jl
jmp
jno
outsl
lods
xchg
dec
out
ds
cmp
dec
mov
adc
cmp
adc
fnstsw
popf
cmp
outsb
push
and
push
jl
sbb
and
dec
test
mov
push
repnz
lods
inc
out
add
hlt
stos
mov
lahf
pop
outsl
add
testb
mov
add
es
mov
or
sahf
pop
push
mov
push
inc
ja
repz
jmp
aad
jns
xor
adc
mov
test
stos
inc
jnp
in
xor
test
adc
xchg
insl
je
scas
jno
adc
mov
jl
popf
lods
sub
test
lods
ds
imul
xor
sbb
or
and
test
mov
mov
push
out
or
mov
mov
inc
fdiv
xchg
cmp
add
sub
jge
jmp
jne
daa
fadds
add
in
aam
repz
in
mov
sbb
dec
je
pop
cmpsb
insl
pop
fistps
mov
mov
jbe
test
jp
mov
pop
sub
sub
stc
xchg
add
and
pop
jbe
push
sbbb
arpl
xor
decl
pop
pushf
fs
mov
das
pop
xor
mov
push
or
ja
sub
pop
hlt
jle
mov
sub
movsl
cmpb
sub
xchg
divb
jo
xchg
pop
aaa
jae
jg
pop
sbb
fisttpll
pop
repz
fistpl
enter
outsl
sbb
push
into
xor
or
xchg
faddl
sub
repz
loope
xchg
add
out
scas
mov
mov
dec
cmp
in
int
xchg
idiv
aad
mov
out
insb
enter
mov
fsts
add
push
filds
rsm
mov
clc
call
loope
push
lcall
mov
jl
jmp
loope
cmpb
mov
outsb
jl
mov
scas
add
mov
data16
imul
stc
test
aaa
jno
push
testl
das
ror
adc
dec
cmp
mov
pop
push
inc
popf
inc
or
fs
mov
mov
hlt
movsb
push
jne
push
jnp
mov
dec
scas
xchg
mov
repz
lods
aaa
add
add
insb
jnp
into
inc
mov
jle
aad
mov
test
aaa
xchg
cmp
adc
cmp
aas
push
inc
pop
rcll
sbb
adc
nop
jo
mov
outsl
dec
aam
lret
fimull
jge
jle
jmp
push
lahf
jmp
mov
push
fildll
mov
add
dec
mov
loopw
test
test
pshufw
les
sub
bound
push
jle
cmpsl
jne
outsl
mov
sbbb
aaa
sub
ja
xchg
adcl
outsb
mov
lcall
nop
pop
mov
xor
jl
mov
lcall
int
mov
aas
cmpb
mov
bound
aad
insb
pop
push
xor
iret
push
mov
cmpsl
hlt
or
ds
inc
sti
push
arpl
sbb
scas
cmp
mov
inc
rcrl
and
cs
ret
lods
mov
cmc
icebp
jo
cmpsl
sbb
out
dec
enter
mov
mov
das
xchg
jns
inc
int3
adc
movsl
stc
daa
ficoms
lcall
ss
bound
mov
jne
inc
mov
lret
and
adc
ss
jbe
inc
mov
iret
jmp
in
xchg
cmp
mov
pop
push
jp
jg
mov
js
mov
lahf
pop
push
in
jge
dec
mov
std
sti
lods
xchg
dec
sub
out
push
and
add
scas
int
out
jb
mov
enter
fsincos
outsb
inc
aam
in
sub
ficomps
adc
loope
faddl
sbb
jns
mov
dec
add
xor
inc
xlat
es
xor
jb
push
sub
and
jnp
cmpsl
movd
mov
insb
add
cmp
mov
mov
lret
cmp
add
mov
js
inc
shll
push
clc
sahf
push
inc
jle
hlt
xchg
jno
adc
adc
xor
push
aas
xchg
je
jbe
sub
xchg
int
dec
sub
and
cmpsb
dec
xchg
xor
das
es
mov
adc
shrb
outsb
xchg
xchg
mov
imul
je
jl
cwtl
or
in
mov
js
mov
andb
push
pop
notb
sub
sbb
repnz
out
sbb
insl
pop
mov
xorb
or
nop
mov
mov
cs
dec
or
andl
test
in
xor
nop
pop
and
or
ljmp
adc
cltd
data16
mov
dec
cwtl
push
xchg
add
mov
push
lret
pop
std
jo
push
and
xlat
out
mov
adc
mov
inc
sbb
cmc
outsb
jl
add
jge
stos
pop
enter
push
add
jmp
fbstp
rcll
testl
pop
cmp
js
andb
icebp
sbb
mov
adc
stos
cmp
jno
mov
fisttps
sahf
cmpsl
sahf
sub
addr16
mov
cli
popf
fistl
popa
rcrb
insl
lea
mov
or
arpl
into
mov
cmp
cmp
add
xor
addb
loop
popa
dec
fadds
popa
aaa
shl
push
push
mov
pop
cmp
stc
stc
pusha
mov
jecxz,pt
pop
arpl
insb
xchg
ds
adc
cmc
dec
add
test
cmp
iret
pop
and
lret
mov
pusha
scas
pop
mov
ret
cmp
cmp
xchg
pop
ss
je
scas
rcll
icebp
test
insb
lds
jmp
lcall
das
inc
jge
jnp
adc
or
sbb
dec
in
jns
xor
pushf
je
ljmp
into
inc
sub
mov
ret
pop
scas
xchg
lods
jae
test
fsts
movsb
repnz
cmpsl
push
mov
push
xchg
call
mov
xor
xchg
sbb
orb
mov
pop
sahf
sbb
or
sub
pop
add
push
mov
xor
jle
andl
cwtl
sub
inc
dec
xor
shll
std
aam
mov
bound
jae
lcall
mov
mov
inc
mov
pushf
insb
je
jle
or
lods
cmc
lret
imul
dec
in
rorb
ja
repz
mov
add
bswap
inc
int3
xor
repz
and
hlt
das
cs
sbb
xchg
rcrl
mov
xor
add
mov
add
cltd
cmp
pcmpgtd
iret
data16
popa
mov
lcall
stos
fidivs
inc
ss
mov
mov
pusha
or
xor
dec
sbb
dec
xchg
data16
sub
arpl
negb
dec
dec
fildll
clc
xor
xorl
insb
in
mov
pop
add
out
nop
loope
pusha
cmp
sbb
pop
mov
fs
sub
rcrl
or
subb
loope
dec
pop
loop
sub
rorl
xchg
dec
cmpl
fcoms
mov
shlb
pop
mov
inc
sbb
inc
mov
fst
outsl
fildl
mov
mov
nop
sbb
movntq
push
outsl
int3
inc
sarl
faddp
add
test
or
bnd
movsl
jp
ret
add
xchg
shrb
in
in
push
ret
xchg
jno
mov
inc
xchg
movsl
mov
addr16
mov
cs
sub
test
out
inc
ljmp
cltd
outsl
or
ds
cltd
jbe
fimuls
and
add
xor
lahf
jl
stos
xor
ljmp
mov
jl
push
jbe
dec
popa
notl
dec
scas
push
movsb
sbb
jne
pop
mov
int3
xchg
jmp
in
in
sbb
cli
test
xchg
out
fadds
push
inc
inc
leave
fs
and
in
xor
std
imul
sbb
push
xor
rorl
sbb
ljmp
cmp
mov
sti
xchg
imul
mov
or
cld
pop
inc
gs
push
outsb
in
inc
mov
dec
push
ret
adc
mov
cmpsb
mov
pusha
sub
imul
lock
or
dec
gs
je
adc
jne
sti
xor
and
xchg
scas
sub
cmp
je
pop
mov
xchg
xchg
cltd
cmp
outsl
pushf
imulb
ret
int
or
adc
dec
fistpll
mov
cmp
pop
enter
dec
add
sarb
fadds
mov
fidivs
adc
icebp
scas
popf
mov
adc
mov
sub
fldt
ret
icebp
jae
push
sub
cli
sbbb
xchg
lods
and
sbb
fisubs
lods
pop
pop
incl
dec
and
add
fldl
mull
cs
loop
or
xchg
push
jo
mov
mov
mov
xor
call
push
mov
aaa
or
scas
xchg
subl
testl
ret
pop
push
cwtl
jg
ds
mov
mov
add
into
cld
xchg
push
out
xor
lcall
mov
fcomps
bound
ret
test
dec
or
xchg
gs
add
inc
outsb
clc
in
imul
jne
popl
pop
aad
popa
clc
jne
std
lods
xor
push
bound
inc
rorb
das
repnz
inc
jl
imul
pop
fisttps
fnsave
data16
mov
aaa
and
mov
repz
clc
xchg
mov
or
mov
hlt
fdivs
leave
mov
sti
push
pop
sbb
mov
inc
pop
in
sti
fs
loop
sbb
add
xchg
inc
outsl
popa
cmp
add
push
mov
and
inc
lret
mov
lock
inc
fwait
cld
xchg
jne
sub
out
dec
lahf
xchg
inc
inc
lret
sbb
bound
imul
pop
ss
lock
pop
test
cmp
lock
pop
xor
repnz
mov
xchg
les
dec
cli
cli
arpl
fldt
roll
sub
mull
jecxz
pop
js
push
daa
test
test
sbb
inc
xchg
imul
push
sbb
in
pop
adc
pop
loope
dec
outsb
and
xchg
imul
sti
push
repz
test
lcall
cmpl
mov
pop
mov
pop
xchg
cli
jb
rcrl
loope
shll
ret
push
or
push
sub
push
lds
mov
ljmp
dec
push
andb
mov
xor
pusha
notl
ja
or
mov
add
or
clc
adc
or
repnz
mov
movsb
fmuls
test
or
and
mov
and
out
add
cmp
test
mov
cli
dec
mov
in
lds
mov
xchg
mov
jb
mov
dec
push
aaa
ror
mov
jns
push
mov
adc
lahf
loop
dec
lods
xchg
pop
test
rcl
push
adc
rolb
pop
jbe
lret
int
sbb
pop
es
mov
lahf
je
fwait
scas
inc
fsubp
mov
add
les
and
mov
sub
movb
add
loopne
xor
data16
ss
or
mov
or
loopne
mov
test
sbb
and
pop
insb
in
xchg
inc
add
add
and
and
cwtl
addl
and
jns
inc
dec
ret
jae
adc
rcrl
sbb
cmpsl
repnz
lds
je
outsb
ret
icebp
add
ror
roll
popf
fcoms
push
inc
das
push
mov
movsl
jb
dec
lcall
mov
sub
mov
enter
je
dec
mov
xchg
xchg
mov
repnz
xlat
mov
stc
repz
pusha
bound
iret
xchg
or
inc
jmp
ss
mov
mov
leave
sbb
mov
cmpsl
mov
push
ret
mov
inc
rolb
test
and
jo
test
inc
sub
imul
cs
mov
push
fiaddl
lock
stc
popf
mov
aam
cli
rol
clc
xchg
add
push
andl
mov
push
mov
inc
mov
decl
and
jle
lret
inc
call
sti
loope
and
mov
jle
xor
xor
jmp
int3
and
push
jle
les
out
pop
test
jle
sbb
mov
shrl
mov
and
xor
out
and
push
test
sbb
test
ja
xor
cmp
xchg
int3
out
push
sbb
cmp
sub
in
adc
jecxz
xor
adc
sbb
pushf
jo
push
cmp
out
jbe
popf
inc
clc
sarb
and
mov
into
popa
cmc
adc
sub
or
andb
in
xchg
inc
and
or
cmpsl
adc
mov
xchg
jmp
push
inc
fcomps
mov
pop
movsl
lea
addr16
sti
popa
cld
aad
mov
or
adc
pop
outsl
dec
sbb
shrb
es
pushf
and
mov
js
fdivrl
loope
push
pop
push
in
push
inc
mov
jmp
lcall
in
push
adc
pushf
scas
add
jmp
js
stc
mov
xor
pop
ret
lea
mov
sti
push
popf
in
loope
push
lea
mov
mov
adc
movsl
inc
aad
xlat
and
pop
or
jno
pop
fisttpl
lret
and
std
add
call
outsl
sbb
lcall
loopne
cmp
jb
add
shlb
xor
push
inc
fadds
pop
ljmp
repnz
fildl
bound
mov
aam
imul
cmp
cmc
fwait
cmpsl
es
rcr
dec
push
insl
adc
jl
jmp
mov
add
idivw
leave
xlat
dec
pop
or
pushf
and
mov
cmp
movd
fwait
cmp
push
inc
push
fs
test
add
push
adc
or
mov
sub
ret
sbb
jae
pop
addr16
mov
push
mov
rorl
lret
xchg
jno
mov
or
ljmp
test
fisubrl
in
jmp
dec
mov
sub
push
incb
xlat
jl
neg
into
xor
and
lock
lret
jno
stos
imul
or
mov
aas
rorl
jmp
and
lea
out
adc
sub
aas
sahf
inc
sti
fwait
jp
and
add
repz
daa
and
imul
mov
loope
mov
pop
sub
cmpsl
lcall
iret
lods
in
add
dec
insb
pushf
stc
jmp
jns
call
test
mov
push
leave
andb
sub
pop
ljmp
add
cld
cld
jne
subl
push
sub
test
in
xchg
ret
aam
mov
inc
adc
testb
xchg
push
or
ficomps
mov
jbe
push
iret
out
nop
and
sbb
mov
mov
or
mov
pop
divl
inc
push
lds
mov
mov
movsl
popa
rorl
or
jnp
imul
pop
jae
or
scas
in
scas
xchg
push
sbb
dec
les
mov
pusha
stos
mov
push
push
pop
mov
add
push
lods
inc
push
push
mov
push
mov
pop
lock
pop
mov
cwtl
inc
bound
mov
jecxz
inc
pop
hlt
fs
out
je
inc
xchg
out
out
xchg
pop
fnsave
add
pop
jno
test
and
and
leave
jo
je
jno
inc
cmpsb
xor
lcall
jne
adc
push
pop
push
iret
and
sarl
jmp
mov
mov
dec
insl
add
mov
dec
adc
aam
cmp
fdivl
nop
fisttps
ljmp
mov
out
in
dec
pop
fiadds
cmpsb
loope
dec
cld
xchg
repz
xacquire
add
inc
jecxz
lret
rcrl
adc
imul
mov
ljmp
mov
inc
ljmp
or
int
xchg
mov
add
mov
or
adc
lock
enter
lea
sub
jle
sahf
mov
pop
xor
pop
jge
aas
gs
jno
mov
fisubs
adc
push
fcoml
mov
cmpsl
out
xchg
adc
mov
add
int3
fisubs
mov
ret
aaa
mov
mov
fcmovne
dec
sbb
scas
pop
mov
pop
scas
mov
jle
push
stos
inc
add
sbb
xchg
or
jne
notb
mov
mov
or
jge
fidivrl
or
out
sbb
push
scas
mov
jmp
jge
mov
jbe
mov
pop
clc
pushf
mov
cli
jne
test
test
lret
jns
mov
call
or
sub
mov
call
sbb
and
pushf
scas
ljmp
inc
mov
cmc
movsb
addr16
fcomps
sarb
and
jle
in
xchg
scas
ret
xlat
push
mov
ret
cltd
imul
sbb
xlat
cmp
lods
js
popf
idivb
pop
subl
subl
pop
decl
dec
mov
add
dec
mov
mov
shrl
dec
and
mov
cmp
or
pushf
xchg
xchg
sub
jg
pop
shrb
mov
sarb
or
sub
imul
aas
shrb
hlt
scas
xchg
pop
pop
outsl
rcll
or
xchg
mov
mov
inc
pop
subb
push
in
xor
dec
gs
mov
and
add
dec
jp
andl
pop
imul
mov
cld
test
mov
add
or
cmp
ds
fsubl
int
jae
std
inc
push
or
nop
dec
add
scas
repnz
jp
xchg
sahf
and
cmpsl
or
cmp
fwait
mov
cmp
fisubrs
jmp
data16
adc
shl
inc
cmp
loop
std
pop
leave
adc
push
add
xor
loop
filds
adc
insl
ja
les
xor
out
xor
xor
jge
cmp
cltd
push
adc
pop
iret
mov
or
dec
nop
daa
jnp
push
fldl
adc
jp
add
xor
mov
xchg
dec
xor
fsts
sub
data16
sbb
fidivs
pushf
popa
outsl
int3
pop
adc
cmp
xor
incl
lods
adc
into
iret
and
adc
jmp
call
xor
ds
or
adc
or
aas
dec
jp
push
adcb
jl
sub
sub
or
cs
pop
mov
jbe
out
jne
call
inc
rclb
jbe
mov
sbb
adc
std
add
cmpsb
push
fidivl
dec
jns
das
clc
popa
push
jge
insb
push
mov
aaa
lea
mov
adc
cmp
cmpsb
jp
push
inc
fildl
cld
das
and
add
test
inc
stos
mov
inc
lret
call
add
arpl
mov
add
aad
das
and
rclb
xchg
xchg
push
notl
fisttpl
jns
push
pop
mov
sbb
and
sub
rcrl
mov
and
pop
lock
xchg
mov
loopne
sub
cmp
es
dec
pop
push
insl
xchg
pop
lahf
adc
popf
dec
cli
and
pop
lahf
cmpsl
inc
adc
pop
mov
mov
mov
cs
call
sbb
dec
addb
mov
cmp
cmc
cwtl
leave
inc
inc
sti
stc
insl
xor
into
xlat
mov
loope
ret
hlt
sbb
xor
mov
addr16
test
icebp
xor
and
push
popf
mov
mov
imul
lahf
inc
push
add
fsubrs
adc
pop
mov
mov
mov
fists
pop
out
mov
test
xor
or
xor
mov
or
mov
xor
pcmpgtw
or
mov
mov
xor
ds
cmc
aam
xor
pop
jge
dec
test
outsb
mov
jae
fdivl
push
sbb
mov
cs
pop
dec
mov
jle
cmp
adc
push
hlt
lds
jo
loopne
jae
push
clc
dec
ss
add
sbb
nop
jnp
jns
icebp
bound
jp
je
pop
arpl
andb
fwait
add
and
xor
mov
xor
int3
jnp
pushw
mov
icebp
mov
incl
in
mov
mov
incl
inc
lods
sbb
mov
bound
lahf
neg
mov
jp
mov
pop
stos
leave
inc
into
int3
fistpll
push
mov
add
sbb
mov
imul
mov
pushf
xor
xchg
push
push
les
jmp
int3
push
inc
fucomi
jb
push
fwait
dec
ja
stos
fs
in
jecxz
and
outsl
movswl
mov
stos
lds
mov
xchg
aas
arpl
mov
mov
aad
test
mov
push
jne
out
imul
xchg
subl
or
into
dec
fstpt
xchg
pop
mov
ljmp
cmp
pop
mov
orb
andb
and
andb
rolb
mov
jns
sub
dec
mov
adc
mov
stc
aad
sub
fsubrl
lock
sti
dec
mov
in
jno
icebp
add
scas
inc
pop
xchg
xchg
adc
add
shrl
insl
insl
shrb
pop
mov
push
sarb
add
ja
pop
inc
push
push
add
daa
dec
cwtl
sahf
lods
mov
mov
dec
or
clc
movsb
jp
jmp
pop
mov
sub
addr16
or
daa
inc
jns
or
sbb
leave
test
fists
cltd
push
aaa
push
out
test
sarb
jmp
and
mov
cmp
fmuls
cltd
xchg
and
mov
xor
adc
imul
out
pop
push
lods
mov
movsb
fcomp
cmp
ljmp
out
or
cs
inc
andb
mov
popa
mov
sbb
sub
sbb
jmp
pushf
sub
xchg
ja
inc
pop
test
pop
jmp
imul
pusha
mov
dec
pop
adc
and
les
and
ret
mov
jbe
cld
pop
push
xchg
sarl
outsl
mov
push
push
popa
mov
ja
xchg
xchg
outsb
pushf
jo
lcall
inc
dec
mov
mov
mov
pop
nop
and
adc
cwtl
jle
or
mov
or
sahf
pop
dec
adc
pushf
adc
dec
out
and
cltd
push
adc
push
leave
int
or
or
enter
xchg
repz
jg
jmp
xchg
pop
enter
dec
fs
sub
ja
mov
xlat
leave
jns
out
cmp
inc
cltd
dec
nop
jmp
jecxz
shl
jle
xchg
xchg
mov
mov
add
mov
popa
das
sub
jnp
inc
lods
stc
mov
andl
or
sbb
scas
adc
jmp
mov
sarl
push
add
xor
imul
and
into
mov
arpl
jnp
jbe
sub
lret
push
dec
mov
mov
addr16
rcl
or
out
mov
push
sbb
sbb
sub
jns
cmp
jae
nop
jae
pusha
mul
or
jle
xchg
in
inc
fcomps
jecxz
xor
jle
scas
insl
scas
rcrl
mov
imul
repz
je
pushf
xchg
and
and
popa
cmc
cld
push
stos
test
push
shlb
jg
mov
ret
or
scas
pop
jg
adc
test
dec
dec
jns
js
aaa
shrb
aaa
popa
popa
or
pushf
shrl
rorl
push
mov
enter
add
xor
in
hlt
sub
fbstp
jne
mov
add
xor
inc
neg
out
popa
incb
sub
mov
mov
push
std
fidivs
and
lcall
jp
sbb
adc
int
mov
adc
jp
out
add
pop
nop
or
inc
inc
in
inc
in
std
jo
out
lret
popa
pusha
inc
xlat
pushf
hlt
test
mov
in
pop
faddl
mov
or
imul
fsubr
mov
inc
into
mov
imulb
push
iret
push
xchg
inc
mov
lret
push
fwait
shl
and
dec
add
js
inc
push
jne
push
icebp
jns
lret
int3
stc
test
cs
lret
xchg
rcrb
mov
pop
aas
fists
mov
push
repnz
outsb
mov
aaa
jmp
push
inc
dec
or
xchg
and
inc
pop
repnz
lods
dec
jnp
fldenv
cmp
sbb
jl
cmpsl
inc
adc
ret
dec
push
rcrb
ds
bnd
dec
decb
push
inc
mov
je
pop
dec
sbb
mov
pusha
xor
sub
cmp
scas
jno
cmp
aaa
inc
inc
push
test
xchg
xor
jg
dec
cmp
sub
popf
xor
enter
cmp
push
sbb
pop
adc
bound
fimuls
ficoml
lahf
divl
pop
sub
daa
mov
addb
int
or
cmp
adc
adc
xchg
pop
out
lods
or
mov
cmpl
push
push
ja
xor
ficoms
dec
sti
out
test
mov
jae
int
add
cmp
loope
sbb
cmp
cmp
pop
and
roll
adc
int
mov
jo
ficoml
mov
lds
ja
or
cld
repz
jnp
sbb
cld
dec
xorb
lahf
or
scas
jbe
movsb
sub
sbbl
push
fidivl
mov
jae
fprem
mov
xor
sti
xchg
ljmp
clc
aas
je
shll
ja
fcoms
hlt
push
push
scas
mov
sbb
mov
mov
fldenv
cmpsl
loopne
negb
sbb
into
lods
xchg
jae
jecxz
xor
leave
adc
jno
inc
xor
fidivs
add
sbb
test
cmpsb
imul
aad
xchg
or
loop
adc
sub
mov
daa
jecxz
stos
pop
popf
mov
icebp
subl
pop
outsl
not
mov
and
mov
cld
aad
int3
arpl
jnp
daa
aaa
jecxz
jecxz
popa
aam
leave
mov
loopne
pop
fmuls
lods
inc
in
leave
cmp
scas
push
adcb
dec
and
mov
adc
shll
notl
push
in
imul
vpsadbw
dec
aam
mov
sub
cwtl
das
pcmpgtw
pop
lret
pop
push
dec
not
xchg
inc
cwtl
dec
mov
stos
lret
in
notb
mov
aam
xchg
mov
fstpt
ret
outsb
jno
or
xchg
std
add
dec
cli
data16
pop
cmp
xor
ret
sub
mov
movsl
adc
lahf
inc
arpl
cmp
out
ret
sub
jmp
sub
mov
movsb
movlhps
cmp
sub
inc
push
cmp
fists
jecxz
xchg
aad
mov
inc
mov
mov
mov
xchg
loopne
inc
ret
lds
inc
ret
xchg
push
popa
xor
pop
cmp
mov
cli
sub
push
fsubr
cmpsb
clc
out
test
inc
call
jns
cmp
mov
push
xchg
jecxz
jno
addr16
or
leave
int3
loop
ljmp
cmp
mov
insl
imul
and
sbb
cmp
scas
jo
fcomip
fisubs
jmp
cmpsb
lahf
int
xorb
adc
inc
add
lahf
push
lds
andb
sar
aad
pusha
xchg
adc
mov
les
jb
movsb
mov
or
and
mov
sub
pop
pop
xor
iret
dec
repz
and
arpl
inc
repz
xor
ret
sbb
dec
mov
dec
jns
xor
pop
jl
ds
dec
pop
bound
cwtl
je
xchg
sbb
repz
adc
dec
std
mov
mov
mov
inc
lret
or
mov
sub
cmc
cltd
mov
mov
dec
xchg
insl
sbb
jne
out
adc
fnstsw
mov
icebp
push
inc
pop
add
test
dec
and
push
aaa
clc
fidivrs
idivb
and
repnz
mov
dec
loopne
movsb
sbb
pop
icebp
es
pop
js
pop
push
movsb
cmp
test
lock
pushf
leave
mov
inc
lods
mov
dec
xchg
inc
popf
xor
adc
jecxz
mov
add
or
stos
faddl
mov
jne
mov
movsb
testl
jmp
rolb
in
xchg
dec
mov
dec
out
popa
jo
addr16
fs
add
add
xor
aad
mov
jle
int
cltd
or
mov
or
out
frstor
push
lods
les
lret
jecxz
mov
ljmp
and
or
aas
push
cmp
and
popf
mov
sbb
cmp
jns
out
stc
cmpsb
xor
cli
push
mov
mov
xchg
into
mov
jg
negl
rcrb
xor
loopne
inc
and
push
arpl
sbb
stc
test
xchg
rorl
cmp
std
pop
cmp
mov
jmp
aam
push
dec
mov
jb
mov
jl
imul
sub
in
cld
fnstenv
push
sub
push
sbb
pop
adc
loopne
or
out
add
xchg
push
or
push
push
enter
lods
test
mov
or
pop
insl
and
sti
lods
or
into
sub
shll
add
sbbb
xchg
inc
popa
jne
rclb
jb
inc
fs
or
mov
imul
add
cmpsb
add
test
inc
pop
sarl
dec
lock
out
test
adc
gs
mov
shl
clc
sbb
add
sbb
push
dec
aaa
inc
popf
jmp
pop
xor
test
popa
cld
ja
dec
stos
or
dec
cmpsl
ds
dec
cltd
sub
rcrl
int
outsl
in
push
mov
pop
mov
pop
leave
mov
push
jmp
dec
xor
xchg
mov
or
shrb
sbb
xchg
sbb
pop
outsl
adc
aas
in
icebp
adc
pop
push
fildll
out
lea
push
or
dec
jae
and
in
pop
xchg
popa
jp
cmc
into
mov
shll
push
sbb
xor
rol
xor
jmp
shlb
jmp
dec
push
push
loop
out
sbb
mov
xchg
jmp
adc
ret
lods
loope
pop
jbe
add
jnp
fadds
or
and
adc
gs
pop
xor
or
push
inc
cmp
inc
sbb
int
lret
cld
push
data16
xchg
sub
push
cmp
js
lods
andb
out
scas
xchg
mov
dec
mov
daa
cmp
scas
rol
cmpl
loope
ss
call
jmp
das
addr16
adc
js
shlb
xchg
pop
inc
pop
mov
jns
xchg
jle
mov
imul
lret
les
or
mov
int
push
and
lret
push
push
scas
call
sbb
sahf
or
insb
pop
jp
cmp
xchg
mov
out
xchg
punpckhdq
mov
hlt
jp
adc
inc
mull
push
adc
jno
push
jbe
bound
jmp
addl
data16
xchg
test
mov
sub
cmp
into
cmp
adc
stos
pusha
mov
inc
mov
pop
jbe
pop
int
fcmove
hlt
adc
enter
mov
outsl
mov
loopne
hlt
daa
shrb
fmuls
addb
les
pop
or
add
aas
mov
dec
inc
add
gs
push
mov
mov
xchg
mov
pop
jns
cmpsb
push
loope
mov
cmp
adc
cmpsb
lret
fwait
mov
fstpt
or
push
mov
xchg
sub
jecxz
pop
xchg
mov
dec
das
mov
and
or
jl
cwtl
stos
daa
jae
out
cbtw
out
lret
jae
pop
aam
ja
fbstp
add
popf
mov
sbb
mov
aam
in
or
ja
stc
pop
sub
lods
sahf
jg
ror
xchg
pop
sbb
inc
test
loopne
lods
mov
mov
data16
cmp
lds
lods
popl
stos
shr
adc
inc
fdivrl
int3
jnp
push
ja
movsb
xchg
jns
in
ljmp
into
popf
xor
push
ja
adc
push
push
xor
pop
out
xor
enter
sti
cmpsb
jmp
aad
mov
mov
popf
adc
ljmp
or
cmpsl
lds
or
cmpsl
lock
nop
leave
mov
enter
stc
call
inc
filds
ja
dec
test
cmp
inc
cli
fcom
rorl
movsl
movsb
push
test
test
fnstsw
jb
int
push
shrl
bswap
pop
dec
hlt
cwtl
xchg
pop
mov
xchg
xor
imul
or
sub
and
int
jb
xrelease
loopne
and
adc
cmp
inc
inc
div
fstpl
mov
adc
xchg
mov
fistps
cli
out
cmp
rorb
jmp
dec
jecxz
out
gs
je
mov
push
aad
cmp
jmp
aaa
das
adc
cmpsl
idivl
shlb
xchg
push
add
std
adc
mov
jae
out
xacquire
lea
push
leave
pop
repz
jbe
loop
lahf
call
movsb
push
xchg
add
scas
adc
mov
rorb
int3
in
lock
pop
cmp
inc
mov
xchg
out
clc
pop
loopne
adc
cmpsl
mov
lahf
jb
lods
xchg
sub
imulb
mov
sbb
and
in
daa
or
mov
gs
popa
faddl
daa
push
call
leave
stos
outsl
addl
cmpl
add
push
popf
lods
xchg
pop
jnp
sub
in
inc
inc
cmp
mov
movsb
jno
mov
gs
dec
mov
dec
and
in
mov
xchg
mov
call
int
or
jg
mov
jns
int
sbb
sbb
dec
pop
mov
pop
push
cltd
fisttpl
xchg
into
mov
push
mov
loopne
cmpl
mov
xchg
and
inc
out
inc
add
xchg
scas
bound
ret
outsb
add
movsl
aas
adc
dec
adc
mov
xchg
int3
sbb
jae
pop
test
sahf
fwait
pop
pop
repz
aaa
and
pop
inc
and
inc
ds
add
xor
cltd
mov
mov
jp
xchg
stos
or
movsb
inc
dec
push
lret
mov
push
imul
addr16
in
dec
pop
adc
mov
roll
adc
xchg
dec
and
add
sub
cs
add
xor
inc
stos
movl
xor
dec
mov
mov
jno
fstps
loope
roll
jb
dec
jecxz
scas
hlt
mov
pushf
jae
dec
jmp
stos
sbb
cmpsb
inc
mov
cmpsl
dec
push
add
test
xor
cmpsb
outsb
test
idivb
sbb
lahf
call
pushf
dec
ficoml
ljmp
sarb
lcall
ficomps
aam
lahf
push
lea
das
shlb
daa
lea
cltd
ficoml
repnz
jbe
out
ret
push
dec
repnz
dec
cli
dec
add
xchg
addr16
adc
pushl
adc
push
mov
movsb
mov
dec
sbb
xor
or
cmpsl
inc
loopne
nop
push
push
dec
mov
fwait
into
fucomi
cli
lret
lahf
pop
int
stc
mov
adc
add
jmp
cmp
stc
pop
dec
je
push
cmp
fs
out
mov
xor
xchg
popa
test
in
imul
pushf
lock
mov
into
cmovs
push
dec
dec
push
enter
loopne
push
loopne
sub
adc
adc
push
sbb
mov
fbld
fbstp
cmp
push
or
cltd
inc
shr
dec
mov
inc
jecxz
adc
fidivl
inc
pop
mov
test
loop
and
call
jmp
xchg
test
hlt
scas
sbb
call
or
cmp
mov
pop
push
outsl
mov
pop
jg
nop
fistps
sub
adc
adc
jnp
stos
pop
lds
cmpsl
ret
or
pop
xor
sub
sahf
cmp
pop
pushf
jb
adc
xchg
or
add
mov
jno
mov
into
adc
cmpsl
cmpsb
and
push
push
sub
out
sahf
dec
loop
fsubr
test
test
adc
and
int
xchg
jp
xchg
in
adc
and
sbb
imul
and
sbb
shl
out
adc
push
jmp
push
xchg
jg
or
jp
mov
jno
sbbb
inc
xchg
arpl
mov
out
adcl
xor
fcmovnu
in
int3
adc
xorl
xor
xchg
xchg
mov
cmc
adc
mov
popa
xor
add
fs
daa
imul
and
pop
xor
xchg
in
rol
dec
pop
xor
and
adc
mov
data16
mov
cltd
inc
fldl
aad
jmp
cmp
test
lods
pop
pushl
dec
hlt
mov
mov
push
sbb
mov
inc
out
jo
rolb
cwtl
or
enter
dec
mov
inc
incl
and
cbtw
pop
xchg
daa
inc
dec
lock
iret
out
insl
and
push
and
and
popf
xor
rcrb
mov
jmp
sub
cmpsl
lret
notb
mov
mov
imul
dec
cmpsl
cmp
mov
repz
dec
lahf
pop
mov
ret
pop
loop
cld
dec
les
xchg
xor
mov
adc
rcrl
scas
cmp
pop
inc
dec
xor
in
aaa
pop
inc
push
inc
pop
push
daa
outsl
fidivrl
repz
mov
cwtl
call
out
addb
or
or
and
or
add
xchg
push
and
cltd
iret
push
lret
rcr
mov
aaa
in
repz
out
adc
push
push
mov
jb
fldl
jl
inc
sbb
sbb
lea
or
mov
outsb
dec
fisttpll
xchg
fsubs
and
scas
add
fstpt
jbe
shll
cmp
dec
iret
loop
aas
inc
fdivl
jecxz
and
icebp
sbb
pop
mov
fimull
in
iret
push
mov
adc
jb
bound
jmp
mov
rcl
inc
flds
mov
enter
negl
mov
jle
jb
pop
or
popf
fidivs
add
jns
subl
adc
cmpsb
mov
popa
aaa
push
jmp
sbbb
inc
push
adc
mov
sarl
pushf
push
mov
mov
dec
adcb
insb
sbb
ret
iret
imul
jne
data16
in
ds
xchg
push
roll
repz
xorl
mov
aam
and
or
enter
push
xor
ljmp
ds
sub
clc
xor
jecxz
mov
jg
and
in
andb
jp,pt
jno
and
js
nop
dec
iret
test
dec
sahf
or
mov
cwtl
inc
pop
fndisi(8087
cli
pop
sbb
and
add
push
push
add
jecxz
ficomps
inc
and
lret
ljmp
in
inc
sub
and
and
stc
cmpb
sti
scas
hlt
mov
sbbb
mov
cmpsb
ds
xor
hlt
outsb
out
dec
xchg
or
not
cmp
push
pop
pop
sbb
jp
fcomip
mov
fists
test
inc
mov
push
repz
xchg
add
jno
mov
call
or
cmp
fwait
testb
and
outsl
add
or
mov
jnp
and
and
pop
aas
xchg
ja
shrl
mov
sub
dec
bound
mov
jmp
mov
popa
aam
sbb
in
dec
cmp
aas
movsb
cli
rorb
andb
add
pop
jns
loop
xchg
ss
pop
dec
jns
mov
push
and
xchg
scas
push
and
xchg
mov
mov
or
sbb
pop
andb
and
hlt
and
push
cmp
iret
mov
cmpsb
add
pop
mov
shlb
ret
pop
not
push
cmp
mov
ret
outsl
rcrb
xchg
sub
or
adc
fisttps
or
outsl
sbb
loopne
cwtl
xor
or
pop
push
cmpsb
cli
xchg
fldenv
adc
iret
jno
xor
popa
insb
inc
push
shrb
cmp
lock
cmp
push
aas
out
pop
leave
pop
xor
adc
xchg
mov
pop
inc
sti
lcall
jne
jnp
loope
test
mov
fsubr
mov
fstpl
jl
jge
movsb
fmull
push
add
sub
test
pop
decl
bound
add
mov
xor
fiaddl
xorb
xchg
out
fwait
pusha
test
cmp
or
mov
jnp
ret
push
lcall
mov
add
push
cmpsl
aas
aas
pushf
sbb
int
lods
cmp
lcall
aad
adc
push
sarl
jl
movsl
pop
rcr
or
out
insl
out
ss
lcall
call
jbe
add
pushf
add
shlb
imul
bound
sbb
mov
notl
pop
orl
repz
sarb
lea
inc
aam
std
inc
adc
js
out
xchg
insb
push
test
test
and
fcoms
dec
in
call
imul
pop
rol
cmp
cmp
pop
inc
mov
add
jge
in
add
xorb
push
add
or
adc
jno
stos
fiaddl
pop
cmp
in
cmp
pop
jp
adc
xor
jle
adcl
es
outsb
jg
xchg
mov
sub
and
push
inc
and
mov
xor
push
lock
pop
and
pop
lahf
add
cli
inc
cmpsb
pop
jg
imul
push
cs
and
mov
sub
fnsave
pushf
xor
xchg
out
ljmp
fimuls
mov
or
outsb
mov
push
jb
fnsave
pop
push
enter
incb
xchg
lods
pop
or
inc
cli
xor
daa
push
pop
mov
sub
and
pop
pop
stos
jnp
push
scas
jb
pop
lcall
cmc
cmpl
adc
cmp
push
in
repz
and
adc
jno
cmp
dec
jle
into
ret
mov
mov
push
adc
enter
mov
mov
test
hlt
or
sbb
mov
push
sub
add
mov
dec
adcb
jcxz
in
adc
or
xchg
add
push
pop
es
add
or
jle
mov
lret
outsb
lds
int3
rol
inc
dec
push
imull
inc
pop
pop
fsubrp
mov
stos
mov
mov
xchg
insb
add
inc
in
je
addr16
xor
add
in
pop
pop
and
sbb
xchg
stos
movsb
inc
mov
lods
dec
movsl
popf
dec
jbe
cmp
mov
pop
mov
cs
pop
mov
push
or
xor
into
jno
lahf
dec
fcoml
sbb
aaa
pop
mov
dec
rolb
stos
cmp
pop
inc
cmpsb
ret
add
std
insb
mov
pop
cmp
fldcw
mov
ret
or
jnp
jno
insb
cltd
mov
dec
test
mov
sbbl
push
mov
jo
push
sbb
insl
or
mov
cmp
div
inc
call
dec
add
mov
inc
and
mov
jecxz
mov
sbb
lea
mov
mov
mov
xchg
sbb
clc
jle
and
jae
cli
push
or
addr16
bound
mov
scas
sbb
mov
push
mov
mov
mov
roll
xor
mov
test
data16
xchg
cmpb
scas
ret
outsb
dec
sbb
inc
jbe
xorb
xchg
xchg
or
ljmp
mov
lods
out
mov
mov
cmp
add
sbbl
js
push
sub
xchg
push
lock
and
pop
sbb
std
dec
sub
rclb
cmp
add
add
pop
arpl
clc
jno
mov
dec
ss
xchg
dec
repnz
pusha
ret
jp
fiadds
and
stos
daa
enter
pop
je
or
icebp
xchg
dec
inc
loope
push
movsl
pop
icebp
jmp
push
sub
aaa
lret
idivl
mov
sub
mov
sub
loope
push
popa
dec
add
ret
int3
sbb
pop
dec
pop
mov
shll
roll
add
jl
mov
jecxz
mov
fwait
pop
mov
daa
mov
cmp
loop
test
push
cltd
push
sbb
pop
lea
mov
int
jecxz
xchg
xor
es
das
sub
mov
mov
jns
repnz
xor
ficoml
jnp
ljmp
inc
add
dec
mov
rolb
fistl
xor
xor
leave
mov
or
iret
pop
pop
insl
sbbl
cmp
mov
les
in
mov
cmp
adcb
xchg
sub
mov
pop
mov
out
mov
mov
cmc
sub
dec
add
shrl
nop
stos
or
and
pop
push
fwait
add
out
sub
adc
inc
cmpsb
cmpsl
jns
icebp
mov
adc
aad
cvtps2pd
inc
sbb
outsb
adc
js
cltd
push
lahf
cmp
iret
inc
sti
and
jb
inc
stc
mov
sbbb
xor
pushf
test
mov
sub
xchg
subb
loop
mov
pop
out
mov
ss
lcall
mov
rcr
imul
mov
pop
ret
icebp
lea
cmpsl
xchg
cs
pop
imul
daa
mov
fidivs
adc
lcall
popf
sub
into
test
imul
mov
test
jge
sahf
test
mov
out
arpl
cmp
gs
xlat
popf
xchg
test
or
mov
loopne
adc
push
xchg
icebp
adc
gs
jbe
clc
pushf
pop
mov
sbb
adcb
int
testb
gs
data16
fwait
pop
and
flds
stc
dec
fisubrs
and
data16
call
jo
lahf
mov
xchg
mov
mov
lahf
mov
mov
cmp
jb
pushl
mov
ret
push
rorl
adc
mov
cltd
popf
fnsave
mov
pop
in
cmpsl
inc
inc
mov
out
mov
outsb
add
mov
mov
pop
jnp
mov
push
movsb
inc
inc
jno
xchg
rorb
push
shlb
push
lcall
cmp
push
dec
push
inc
cld
js
lods
das
adc
fidivs
adcl
and
jne
popf
sbb
data16
cltd
sub
or
and
outsb
jmp
jle
addb
rolb
out
xchg
insb
fisttps
xor
es
push
loopne
push
cmp
mov
push
out
lds
lret
push
mov
dec
jp
shll
inc
inc
cmp
xchg
mov
das
add
lods
lods
inc
adc
inc
sbb
mov
test
fidivl
pop
fdivrs
mov
push
icebp
add
popa
into
and
int
sub
test
cmp
mov
orb
ret
insb
cmp
jae
jae
sub
aam
and
mov
iret
mov
rcll
ret
xchg
shlb
out
std
push
pop
pop
push
out
ds
lds
xchg
adc
xchg
pop
pusha
addb
je
inc
cmpsl
and
data16
dec
int3
ficoms
add
aam
test
sub
rorb
or
mov
jno
jae
lret
imul
sbb
mov
test
daa
xchg
sub
mov
fdivr
sub
xor
or
pop
add
mov
and
lock
push
xor
negl
cltd
push
imul
pop
aad
adc
dec
outsb
or
and
pop
bound
aas
hlt
or
push
andl
jle
sbb
add
and
push
jno
xor
mov
adc
decb
js
sarb
inc
sub
movsl
push
out
pop
fildll
out
imul
xor
inc
movsb
and
pop
cmp
pop
fidivs
aaa
dec
and
push
push
cmp
inc
sti
sbb
cltd
push
lds
add
in
repz
insl
out
dec
pop
fsubp
sub
dec
adcl
lret
in
mov
insb
mov
mov
stos
push
mov
das
lret
add
bound
sub
pop
lret
add
jns
mov
sti
inc
xchg
xchg
mov
aad
dec
dec
jl
aad
jl
outsl
ja
jg
nop
push
jmp
cs
mov
test
inc
sbb
jmp
out
push
add
xor
mov
push
test
cli
iret
sbb
test
cmp
mov
arpl
xchg
mov
lahf
test
pop
cltd
stos
scas
push
test
and
int3
test
mov
mov
lods
in
mov
xor
and
popa
sub
add
mov
xlat
mov
repnz
js
scas
and
dec
pop
jo
daa
arpl
jbe
jp
xor
js
push
sub
sub
es
dec
sbb
jno
shl
dec
lahf
stos
pop
pop
scas
mov
cwtl
stos
cli
cmp
and
pop
hlt
mov
sbb
adc
dec
mov
gs
test
jb
mov
lods
xchg
and
in
mov
ja
lret
mov
jno
adc
andl
xorl
dec
jae
std
int3
iret
xor
in
sbb
mov
xor
push
andb
fldcw
adc
pop
pop
dec
mov
cmpsl
rorl
add
and
cmc
popa
scas
and
scas
lea
jmp
scas
or
adc
sbb
jae
or
jl
xchg
sub
pop
jmp
mov
sarl
insb
hlt
mov
roll
add
jns
xor
mov
testl
pop
pop
mov
sub
cmp
js
jp
ret
cltd
jae
testl
xchg
pop
pop
jle
ljmp
and
inc
lds
mov
lds
jecxz
mov
push
fstpl
addr16
ja
mov
mov
test
mov
cltd
xor
popa
mov
add
xchg
push
adc
inc
insl
pop
fidivl
push
outsl
push
mov
adc
stos
fucomi
sbb
adcb
addl
or
or
fcoml
adcl
rcrb
pcmpgtd
outsl
cwtl
and
or
pop
popf
xor
xor
loope
fcmovnbe
jmp
daa
mov
stos
test
pusha
adc
sbb
pop
in
xchg
pop
mov
in
imul
clc
jb
and
xor
adc
xchg
xor
test
repz
and
xor
lahf
jmp
cmp
pop
push
popf
movsb
inc
sub
pop
stos
mull
fimuls
icebp
repz
scas
mov
adc
sub
sbb
sub
inc
cld
cs
iret
fwait
push
daa
adc
lcall
mov
iret
pop
lldt
pop
divb
jle
std
jnp
pop
shrl
mov
test
lea
out
mov
mov
add
aam
lea
iret
sbb
cmp
pop
bswap
adc
dec
gs
shlb
hlt
inc
sti
or
xlat
aad
hlt
xor
insb
xchg
icebp
add
mov
adc
insb
fistps
test
cmp
or
sbb
test
push
insl
repz
mov
ds
mov
jae
mov
rclb
aas
push
js
shll
mov
es
pop
icebp
jns
scas
ds
jp
sbb
mov
out
ja
pushf
outsl
dec
fadds
je
mov
lock
into
enter
sbb
push
ret
sbb
mov
pop
mov
sbb
xchg
insl
hlt
mov
cmp
rolb
ds
adc
or
ds
cmc
mov
lret
inc
loopne
xor
or
fisttpl
scas
and
sarb
push
lods
xor
call
cmp
lea
cmp
out
mov
sbb
lea
data16
cmp
push
ljmp
and
mov
lret
cmp
je
fidivs
arpl
lahf
mov
sub
and
inc
testl
dec
mov
jge
rorb
adc
xor
push
dec
ss
jp
cmc
or
shr
lods
pop
push
inc
stc
test
mov
repnz
adc
lods
mov
inc
fildl
pop
stc
add
sub
pop
and
dec
dec
shlb
sbb
in
arpl
jg
or
sahf
fisubrs
mov
in
ss
xor
xor
dec
xchg
aad
sub
dec
cs
mov
ret
pop
cmp
pusha
push
outsb
rcr
out
dec
or
enter
dec
dec
jp
or
aad
mov
leave
sbb
dec
jmp
jge
dec
pop
and
mov
dec
mov
pop
popf
mov
mov
mov
sbb
out
fbstp
test
lret
std
push
or
pop
pusha
rcrb
hlt
aaa
aad
loopne
fiaddl
mov
inc
dec
sub
lcall
call
call
or
mov
mov
cmp
pop
adc
into
sbb
loope
sub
es
inc
in
in
mov
cmpsb
xchg
sub
sub
and
outsl
jmp
inc
ret
xlat
andb
jnp
andl
xchg
cmpb
ja
cmp
sbb
mov
sarb
mov
cli
jne
mov
imul
push
out
int3
cmpsb
ds
mov
repnz
jecxz
stc
adc
pop
mov
cmpsb
jbe
sub
and
loop
mov
cmp
aas
push
enter
cli
pop
cwtl
repnz
fdivrp
xchg
add
inc
lcall
push
add
xchg
mov
pop
imul
add
jl
push
cwtl
push
addl
sbb
popf
dec
lods
jecxz
test
sub
sub
cld
push
and
js
jns
or
aas
imull
jae
lods
sub
shrl
jmp
or
gs
mov
hlt
dec
push
inc
mov
jl
call
inc
ljmp
xchg
sbb
insl
add
dec
dec
sbbl
sbb
ja
ja
icebp
sub
out
sbb
inc
js
es
mov
adc
sub
lahf
or
bound
sbb
lahf
sub
push
add
cmpl
adc
dec
inc
js
and
jl
aam
dec
cmpsb
js
xlat
sub
test
mov
mov
outsb
jle
sbb
mov
jb
mov
pop
fcomip
nop
dec
cmp
mov
mov
pop
jo
pop
call
iret
push
fcoml
dec
xchg
xor
push
mov
push
push
mov
mov
out
pop
lahf
cmp
clc
out
lret
xlat
in
fsubrs
cs
xor
jl
sub
mov
negl
jae
inc
lea
mov
ficoms
outsb
scas
test
cmp
scas
dec
or
aaa
dec
push
mov
pop
cmp
mov
mov
inc
les
aas
jle
out
jbe
stc
jl
mov
push
jb
cs
mov
rol
cmp
and
jb
subl
push
mov
and
jle
xor
pop
jg
add
jp
arpl
pop
idivl
rcrb
in
dec
or
jae
pop
les
fwait
pop
dec
pop
popf
push
ljmp
pop
jmp
fstpt
cli
lock
mov
cli
or
loop
ljmp
icebp
xchg
jb
add
xchg
add
adc
andb
push
mov
adc
subl
pop
sub
jl
mov
sub
repz
push
jno
mov
adc
xchg
sub
fnstsw
ret
cltd
cmp
jae
arpl
nop
decb
mov
xchg
and
add
out
and
xchg
pop
push
push
jecxz
test
xchg
add
das
mov
int
sub
and
xorb
dec
jmp
insb
fisubrl
inc
icebp
sbb
sti
inc
lods
inc
cmc
out
sub
pop
lret
bound
pop
jecxz
jo,pn
fwait
shrl
jmp
roll
das
mov
lret
pop
dec
xor
leave
fdivrl
xlat
fildl
scas
out
mull
insb
xchg
jmp
cs
sar
jp
and
jmp
out
add
or
sbb
push
sbb
cs
test
and
call
pop
aaa
repnz
mov
int3
es
mov
loopne
push
rcrl
or
cmc
repnz
mov
mov
cmp
das
adc
push
push
and
pop
push
lods
inc
pop
push
data16
jns
and
push
leave
mov
iret
push
jbe
imul
mov
mov
xchg
lcall
fadds
loop
jmp
cmp
sbb
std
int3
lret
in
std
pop
cmpsb
dec
fistps
inc
xchg
jne
add
popf
or
or
aam
imul
sbb
and
shll
inc
std
push
decb
xchg
cld
xchg
lds
adc
out
or
dec
mov
xor
testb
in
scas
stos
lcall
cltd
loopne
sub
xchg
lds
dec
jge
mov
xchg
dec
cmpsl
bound
cld
jle
hlt
fsts
orl
pop
out
divb
ljmp
call
adc
xchg
xor
cmpsl
out
cmc
sub
pop
dec
jne
sti
js
cwtl
test
ret
mov
jnp
dec
fsubr
adc
ret
xchg
int3
push
inc
adc
and
aas
fildl
stos
cld
in
cmp
ficoms
push
sti
aad
sbbl
xor
gs
inc
stos
and
pminsw
adc
push
sbb
push
out
scas
les
stos
ret
pop
fnsave
add
into
jns
outsl
mov
xor
sub
mov
jp
or
push
push
pop
outsb
jae
sahf
dec
cmp
lret
mov
jbe
aam
call
fs
jo
mov
pop
fbstp
in
clc
pop
orl
jbe
cmpsl
mov
lcall
cmp
es
pop
add
dec
xchg
adc
inc
and
sti
sbb
aad
outsb
add
add
andl
dec
jae
loop
cmp
shrl
test
dec
rcrl
imul
iret
mov
mov
call
cmc
add
mov
sbb
fwait
pop
je
or
leave
and
pop
add
dec
mov
jnp
and
nop
jo
es
test
lcall
faddl
xchg
outsb
loope
scas
jae
jbe
stos
dec
iret
xlat
test
mov
in
and
adc
aad
out
inc
inc
adc
mov
jmp
and
or
scas
cmp
or
jno
mov
mov
xor
or
in
test
lahf
movsl
call
mov
je
ss
jge
fwait
mov
jle
pop
mov
repz
in
mov
popf
aas
into
dec
and
xor
ljmp
cmp
push
icebp
lock
arpl
lds
out
std
stos
cltd
push
test
stos
cmp
hlt
inc
push
cmp
inc
adc
stos
mov
mov
adc
pop
loopne
stc
xchg
je
fnstsw
repnz
outsl
mov
jmp
mov
push
adc
push
push
sbb
fnstenv
xor
int3
lret
cmp
mov
bound
test
movsb
leave
sub
sub
leave
pop
xor
adcl
jnp
mov
sbb
bound
lret
insl
xchg
stos
and
xor
fidivrs
and
add
ja
nop
loope
lahf
les
movsb
mov
mov
xor
inc
push
push
loope
sbb
xor
rol
daa
rol
xor
cli
ret
xor
addr16
jne
mov
dec
cli
adc
mov
jb
int
adc
push
pop
adc
out
mov
jbe
mov
repz
std
jge
incl
xchg
les
mov
push
add
push
xchg
add
shrl
xchg
clc
mov
pop
repz
cmp
test
inc
jo
mov
sbb
dec
or
push
loopne
je
movsl
les
adc
push
testb
sub
cmp
loopne
ret
pop
mov
jl
inc
lods
fmul
sbbb
xlat
sahf
insl
add
lret
sbb
xchg
mov
add
shlb
dec
sbb
pop
test
or
dec
and
push
cs
adc
cmp
cli
pop
jne
and
jo
inc
sbb
hlt
test
test
sub
imul
lods
mov
push
inc
xchg
jb
js
movsb
mov
xchg
mov
stos
push
and
mov
mov
rcrb
gs
fidivs
add
loop
pop
js
flds
xchg
mov
ficompl
mov
adc
sbb
pushf
jg
cmpsb
push
nop
and
loop
aad
stos
mov
testl
aam
stc
pop
mov
adc
xchg
cli
in
insb
mov
mov
test
push
js
add
call
or
sbb
mov
stos
sub
into
mov
dec
dec
addl
mov
cmp
das
test
rol
or
jmp
mov
sbb
pop
test
in
mov
pop
dec
dec
pop
mov
mov
mov
stos
into
mov
int
stos
sbb
lret
add
or
cmpsb
outsl
xchg
mov
clc
rorb
cs
addl
dec
in
subb
jge
imul
jp
outsb
mov
mov
xor
cmpsb
std
mov
loope
ret
fcoms
cld
pop
pop
icebp
push
sbb
xor
xchg
shrb
push
out
sub
dec
scas
cmp
out
je
pop
xlat
pop
insl
jl
imul
int
adc
ror
adc
push
fdivl
xchg
jp
sub
mov
enter
popa
js
push
and
testb
punpckhdq
call
dec
xor
mov
mov
mov
ret
addr16
jge
rcrl
add
ja
cmpsb
inc
push
inc
rorb
inc
add
mov
cltd
xchg
add
xchg
sar
stos
mov
mov
icebp
movsl
and
pop
or
dec
mov
test
mov
push
les
mov
dec
pop
xor
xor
in
lock
and
test
dec
pop
stc
jle
ja
xchg
mov
ljmp
xor
test
pop
nop
jmp
cs
cmp
lahf
hlt
cld
aaa
adc
mov
inc
call
test
jp
pop
popa
xor
cwtl
mov
call
cmpsl
mov
mov
rolb
into
adc
push
sti
stos
and
xor
push
out
test
xchg
cmp
dec
pop
or
inc
je
mov
xor
nop
sub
fimuls
push
inc
scas
ret
adc
mov
xor
sbb
insl
mov
lcall
insl
outsb
mov
push
insl
add
dec
sub
and
cwtl
push
lcall
add
cmp
fcomps
jne
ja
xchg
add
scas
lock
and
mov
lahf
leave
shl
int3
jmp
test
hlt
decb
out
shlb
jg
xlat
lods
fsubp
cmp
leave
je
test
and
test
nop
addr16
ss
inc
sub
adc
push
jb
inc
fdivrl
scas
fmuls
cwtl
in
dec
or
testl
ds
jmp
jb
xchg
pop
cmp
mov
lock
pop
lahf
cmpsb
ds
pushf
cltd
les
fimull
jnp
mov
mov
inc
std
cltd
lock
pusha
ljmp
leave
jp
loope
lea
and
je
mov
test
sbb
xor
add
into
xchg
cmpl
inc
data16
movsl
test
and
push
aaa
repnz
test
sbb
sub
cmpsb
adc
push
xchg
or
and
dec
push
mov
test
mov
cmpsb
mov
mov
cmpsl
ds
inc
xlat
mov
rolb
xchg
out
mov
bound
xchg
cltd
mov
dec
mov
jns
repnz
fnstenv
enter
xchg
pop
jno
cli
pop
jae
sub
out
aas
xchg
xor
sbb
cmp
cmpsb
fs
lret
push
xor
loop
adc
cmp
jo
jb
push
mov
mov
scas
xchg
xchg
push
mul
or
insb
popa
scas
lret
mov
fstl
fdivs
lea
outsl
fs
lods
xor
dec
imul
testb
jbe
fs
negl
or
xchg
sub
add
mov
jg
mov
stos
lret
mov
test
xchg
xor
lcall
lock
sub
idiv
xchg
cltd
mov
or
xchg
jo
jns
push
es
mov
lods
insl
lahf
test
push
push
subl
jle
jo
lds
hlt
test
cmp
cmp
mov
jne
xchg
sbb
popa
dec
inc
dec
add
cmp
rcr
adc
xorl
adc
sub
sbb
sub
aas
pop
cmp
mov
ds
or
int3
icebp
cld
jp
inc
xchg
dec
stos
fnstenv
mov
push
push
and
popl
lret
mov
fdiv
arpl
in
adc
add
bound
aas
arpl
dec
sahf
loop
lahf
ljmp
repnz
aam
push
xchg
pop
fsubrs
mov
mov
lods
inc
and
mov
sub
mov
mov
xor
stos
insl
in
ret
stos
pushf
cmpsb
xor
sahf
out
sbbl
xchg
xor
int
jno
dec
pop
push
xchg
push
imul
fbstp
mov
inc
adc
addr16
fsubrs
inc
nop
dec
imulb
testb
cmc
push
xchg
pop
leave
sub
sub
mov
mov
lods
insb
mov
sahf
into
add
adc
add
popf
push
rcrl
mov
movsb
jl
sbb
push
mov
sahf
leave
scas
ret
lock
push
movzbl
add
push
push
adc
jnp
inc
mov
pushf
xor
pop
rcr
jnp
jnp
leave
mov
pop
ss
in
adc
les
sbb
push
lahf
sub
pop
insl
cld
dec
and
push
dec
dec
dec
dec
mov
xchg
movsl
xor
jne
fistpll
cmp
pushf
xlat
cmp
mov
jno
xchg
push
js
scas
pop
rcrb
push
movsl
push
mov
xor
cltd
imul
fisubl
or
add
pop
and
or
inc
push
lea
imul
into
repz
add
inc
loop
inc
sub
push
mov
lea
ja
push
popf
pop
lock
stos
cltd
lock
xchg
int
adc
aam
xchg
dec
mov
sbb
mov
inc
lea
popf
aam
or
js
or
shll
lods
push
out
add
insl
sub
jmp
and
xor
sub
sbb
dec
fildl
scas
cli
ja
in
and
push
push
dec
inc
jo
jbe
insl
stc
aaa
dec
ret
pop
jl
add
out
push
xor
dec
lidtl
xchg
fisubl
ror
mov
pop
movsl
insb
fs
loop
stc
inc
sbb
mov
notl
or
out
adc
inc
sub
mov
repz
fdivrs
pop
divl
sarb
add
inc
push
bound
mov
rorb
out
xchg
sub
mov
sbb
sbb
jp
bound
pop
xchg
imul
inc
pop
jns
sbb
aas
aad
xchg
jae
dec
pop
pop
inc
fiaddl
sub
jbe
scas
movsb
xor
movsl
vmovq
xchg
xor
loop
adcb
pop
popf
adc
mov
gs
int
in
aam
movsl
and
je
inc
sub
dec
stos
inc
sub
shrl
inc
pop
ja
fistl
lahf
mov
inc
sbb
cld
adc
std
shl
push
jo
sbb
xchg
push
mov
sbb
cmpsl
push
cmp
or
movsb
sbb
pushl
call
cmc
cmp
ja
and
jge
cmp
cmp
sub
mov
inc
mov
out
cmp
pop
clc
jae
aad
out
divb
add
mov
int
and
jb
jmp
in
mov
mov
pop
enter
add
and
inc
sahf
sub
jecxz
pop
and
mov
push
mov
lds
popf
adc
popf
mulb
dec
cmpsb
inc
cmp
adcb
lret
jae
cli
jne
sbb
pop
adc
push
cmove
xor
dec
push
neg
mov
out
sub
repz
repz
fists
test
int
pop
notl
dec
imulb
shlb
dec
out
xor
lea
jecxz
lret
aad
dec
mov
fmul
sbbb
xor
pop
or
in
testb
cmp
push
outsl
jmp
sbb
aas
pop
mov
push
insl
add
xor
popf
xor
mov
push
mov
mov
aad
adc
cltd
dec
lods
out
xchg
jb
sysenter
bound
iret
pop
mov
mov
scas
add
cltd
xor
loop
cli
and
fsubs
or
rclb
mov
pop
push
mov
xchg
in
fcomip
push
lock
repz
ss
sahf
adc
adc
xor
icebp
pop
push
ss
nop
push
mov
xor
mov
and
andb
cmp
scas
imul
into
inc
dec
mov
js
push
js
cltd
adc
aaa
out
fsubs
sub
rcrb
mov
xchg
or
scas
cmp
cmp
sbb
and
jge
inc
pop
enter
push
pop
dec
dec
aad
sub
push
or
dec
loop
jne
cwtl
push
sub
test
mov
int
xchg
addr16
pusha
mull
pop
je
sbb
mov
or
add
xor
fs
outsl
mov
gs
mov
sbb
mov
mov
cmpsl
lds
es
mov
int
sub
scas
or
cli
xchg
rolb
hlt
mov
or
out
aas
aaa
pop
mov
cmpsb
jb
fcmovnu
dec
xchg
push
cld
movsl
cmp
xor
push
mov
in
lahf
pop
sti
test
fstps
out
adc
mov
jecxz
push
inc
jmp
test
mov
mov
scas
sbbl
sahf
fdivs
mov
xchg
mov
adc
xchg
ljmp
sbb
in
imul
and
push
aas
call
ret
cmpsl
add
mov
jl
ret
stos
mov
sbb
stos
xor
fistl
push
inc
lods
call
jno
dec
inc
push
icebp
adc
cltd
xor
mov
and
inc
gs
cmp
mov
and
test
mov
rcrl
icebp
pop
fstpl
and
rclb
inc
mov
js
pop
subl
cwtl
sub
jp
cs
xor
dec
xor
mov
std
pusha
sub
pop
and
rclb
out
mov
mov
xchg
jo
aad
xchg
pop
dec
call
jae
mov
adc
xlat
mov
cmpsb
pop
sub
shlb
dec
xchg
jo
mov
mov
test
sub
mov
mov
mov
or
sahf
mov
jnp
outsb
testl
jecxz
inc
stc
adc
xor
sbb
jecxz
mov
imul
jg
lea
inc
mov
out
out
fucom
cmp
imul
push
xor
pop
repz
jge
sbb
retw
jnp
sub
push
cmp
int3
pop
repz
pop
add
push
nop
push
pop
fidivs
push
loopne
dec
cmp
cli
or
fsub
jp
rcrl
sub
jp
adc
out
xor
call
popf
dec
cmpl
testl
adc
mov
mov
aaa
or
push
in
mov
mov
mov
pusha
decl
pop
test
sub
mov
jg
fsubrp
adc
stos
dec
loope
add
add
push
bound
jmp
ja
dec
and
je
pop
push
sbb
jnp
mov
mov
dec
adc
scas
xor
xchg
push
leave
cmp
in
mov
fistl
add
pop
mov
mul
push
or
test
mov
test
xchg
mov
cmpsb
pop
out
add
scas
mov
je
or
mov
xchg
sub
cmpsb
push
xor
cli
or
push
sbb
mov
adc
adc
push
jle
pop
sti
mov
subb
ss
in
xchg
test
imul
ja
aad
aad
push
pop
cli
adc
pop
je
inc
push
jnp
mov
rcrb
xor
lret
popa
movsl
dec
xor
xor
cld
adc
and
loop
shll
adc
or
xorl
jmp
ja
jmp
lock
dec
sbb
outsl
push
les
adc
test
sbb
jg
add
xchg
adc
andb
insb
test
rcl
sub
mov
cmp
loope
testb
jns
rorl
scas
inc
popa
loopne
pop
scas
push
in
cmp
jns
mov
aaa
insl
movsl
lds
jns
in
push
mov
outsl
or
lods
or
iret
or
pop
jae
push
out
leave
inc
fdivrs
mov
stc
bound
rclb
mov
cmp
or
xchg
lret
mov
adcb
repz
sub
aas
in
lds
mov
push
push
mov
and
sbb
xchg
cmp
and
sbb
sbb
je
xlat
lea
call
ret
xchg
mov
jl
mov
or
dec
repz
sbb
jle
mov
mov
aaa
rclb
inc
fiaddl
bound
or
outsb
add
sub
imul
sti
or
aam
pop
mov
cwtl
jg
dec
loope
int
cmpl
jb
cmp
mov
nop
clc
popl
adc
fs
sbb
adc
xchg
sub
jns
imul
jno
mov
xchg
sub
adcb
mov
lods
inc
push
out
sbbb
jno
cmpsb
movsb
add
mov
test
cmp
dec
stos
bnd
jp
out
daa
repz
movsl
test
mov
lds
iret
sbb
je
scas
in
ljmp
cli
outsb
add
dec
and
mov
pop
sar
lea
or
pop
jo
add
xchg
push
addr16
mov
mov
push
scas
and
sbb
jns
inc
bound
arpl
and
in
test
out
outsb
add
fwait
cs
in
xchg
pop
lock
dec
in
add
imul
push
and
test
fsubrp
aad
ficoms
in
push
fidivs
int3
out
test
outsl
out
xchg
dec
loope
mov
frstor
fildl
int3
hlt
jecxz
out
repz
sti
dec
fucomip
test
divb
and
pop
gs
arpl
clc
mov
push
push
out
roll
mov
jno
ret
cmpsb
pop
pop
mov
dec
rcll
mov
out
test
imul
dec
dec
ret
es
xchg
leave
insl
cmp
pop
push
aaa
into
inc
enter
fcompl
dec
and
xchg
addr16
or
mov
je
js
or
cmp
sbb
mov
mov
cmovo
add
jae
sarl
push
lds
jecxz
test
rol
jle
cltd
das
mov
cmp
dec
inc
int3
fcmove
bound
imul
jne
rcr
sub
adc
inc
or
xor
into
push
aas
inc
mov
shrb
test
loop
in
jae
xor
push
xor
jg
mov
mov
sbb
movsl
mov
arpl
cmp
add
rcrl
dec
out
and
add
sub
shll
pop
inc
sbb
popf
dec
and
inc
xor
dec
mul
mov
aaa
cmc
or
pop
xchg
daa
jb
in
shl
push
push
cli
ret
mov
cmp
dec
leave
shrl
ret
hlt
xchg
pop
xor
mov
sbb
inc
loop
mov
cmpsl
lds
mov
movsl
shll
je
cmpps
push
xchg
mov
add
mov
or
fidivl
scas
test
shrl
nop
sub
xor
aas
cmp
sbb
jae
mov
sbb
cmpsl
cmpsl
inc
fwait
push
repz
lds
mov
adc
imul
shlb
mov
mov
aad
cltd
pop
loop
inc
push
gs
decb
test
sub
pop
mov
jge
mov
pop
or
sti
ret
loop
jns
clc
pop
lcall
mov
inc
outsb
or
icebp
adc
imul
push
xor
xorl
pop
cmp
fucomip
sbb
sbb
push
push
out
jbe
cwtl
loop
push
adc
xor
push
rcr
adc
loop
mov
imul
hlt
dec
gs
jge
mov
dec
cmp
sub
adc
jbe
insl
hlt
shrb
scas
mov
es
mov
add
jae
fisttps
adc
cli
or
push
xchg
sub
stos
xor
enter
cli
imul
into
mov
orl
pop
sbb
imul
sub
dec
sbbb
je
fnsave
xchg
movsb
xchg
sub
sub
movsb
cmp
jl
pop
sub
shrb
movsl
dec
mov
jle
lods
jo
jle
xor
shrl
inc
sbb
pop
cmp
sarb
int3
lahf
mov
shl
cmp
mov
pop
shlb
lret
sti
lahf
movups
inc
inc
std
xchg
gs
and
push
sbb
cmp
push
or
sarl
pop
repnz
cmc
in
xor
sub
arpl
adc
pop
mov
add
cmp
in
xlat
outsb
sub
jge
push
test
aas
sbb
imul
imul
cli
test
mov
sub
push
inc
test
xchg
repnz
inc
sbb
lods
and
sbb
adc
push
and
xor
les
xchg
cmpsl
jle
sbb
cmp
imul
jle
stos
adc
dec
or
and
push
inc
icebp
xchg
fstpt
inc
mov
leave
insl
aas
dec
imul
enter
les
cmp
gs
lock
pop
outsb
sub
pop
pop
fisubrl
or
xor
sbb
mov
lcall
test
dec
decb
adc
mov
push
pop
repz
out
call
xor
jae
and
lret
xor
push
push
jbe
mov
stc
and
dec
mov
andb
leave
adc
jg
push
cmpsl
ret
mov
push
lods
adc
push
test
pop
jo
iret
bound
movsb
cld
or
inc
cmpsl
and
jns
inc
leave
fnstcw
les
jnp
inc
popf
jno
inc
xchg
ficoml
fs
out
daa
push
stc
adc
scas
js
push
test
sbb
data16
fwait
xor
push
data16
mov
cmp
mov
test
mov
pop
aam
mov
push
xchg
ret
nop
addr16
out
scas
sbb
push
xor
cmp
out
adc
pop
and
xor
rclb
mov
jnp
dec
xor
mov
xchg
or
test
inc
mov
leave
dec
push
and
ret
cwtl
test
cltd
xchg
dec
cmpsb
dec
and
inc
or
xor
cmp
iret
xchg
pop
adc
cs
mov
push
sbb
lcall
sub
fldenv
dec
pop
sub
cmpsb
nop
xchg
negb
fwait
int3
push
lods
jnp
aad
clc
ja
sub
add
vzeroupper
mov
test
orl
fdivrs
imul
jmp
mov
insl
stc
enter
ljmp
jg
mov
lret
bound
pop
adc
add
add
mov
xchg
cmp
xchg
sub
mov
fstps
pop
cld
sub
push
pop
sbb
clc
sub
outsb
pop
sub
mov
cmc
mov
out
xchg
pmaddwd
pop
mov
scas
mov
loope
fidivrs
int
push
lcall
in
faddl
mov
stos
fwait
inc
mov
pop
dec
adc
sbbl
ret
cmp
cli
push
outsl
pop
and
xchg
mov
push
mov
fidivrl
or
lods
outsl
stos
dec
es
mov
mov
fcompl
cmp
and
popa
sti
ret
shrl
push
out
mov
fldenv
aas
sti
hlt
imul
xchg
testb
jnp
lea
fcoms
lds
movsb
cmp
pop
dec
and
inc
jmp
shll
inc
int3
sbb
xchg
push
xor
mov
push
mov
add
pop
ds
scas
pop
sub
cmp
jmp
aad
movb
in
loope
mov
push
jge
add
test
lds
aas
mov
jne
shll
adc
fs
cmp
adc
popa
inc
and
lods
lock
push
ljmp
sbb
icebp
inc
adc
js
add
inc
inc
out
data16
mov
inc
in
aas
jle
dec
out
jl
popf
xor
loop
inc
push
or
push
lock
loopne
pop
adc
mov
scas
push
push
add
jb
pop
pushf
lret
cld
xchg
pop
ficomps
xchg
mov
aas
dec
lret
test
insw
xor
adc
jnp
pop
cmpsl
mov
jne
popf
pop
outsb
out
pop
dec
fbld
fstp
call
outsb
and
lds
sbb
aaa
jnp
sbb
xchg
pushf
dec
pop
cs
xchg
lahf
sub
repnz
push
loopne
ja
cmc
and
cs
fbld
push
xchg
xor
jg
cmp
insl
push
mov
int3
add
mov
loope
outsl
push
lahf
loopne
inc
js
mov
ja
cmp
and
orl
aas
int3
mov
xor
imul
aas
aam
cmp
jmp
daa
jmp
imulb
push
xor
pop
mov
cmp
fbstp
aas
lret
sub
sbb
xlat
out
xchg
inc
and
push
sbb
rcll
dec
dec
imul
addr16
add
movsb
inc
push
imul
std
and
lret
add
push
push
fcmovnu
cmpsl
out
sbb
xchg
push
cmpsl
rcrb
js
lock
sahf
xor
clc
push
cld
leave
and
xorb
stos
inc
imul
es
mov
jae
aaa
jecxz
out
fiadds
out
cltd
std
push
insl
shrb
mov
outsl
into
or
mov
mov
arpl
sbb
aad
jnp
and
mov
ror
and
push
mov
fnstsw
shr
testl
lods
insl
cmp
in
cltd
test
xchg
sbb
xor
jg
jle
sub
add
movsl
or
xor
xchg
jl
mov
mov
mov
or
mov
cmpsb
sbb
mov
xor
xchg
rorb
mov
pop
ja
xchg
jge
sub
fldt
repz
out
out
fsub
dec
insl
adc
xor
lret
pop
jb
jmp
xor
andb
push
outsb
cmc
mov
xor
mov
ficoms
out
jns
xor
push
inc
and
aad
jmp
mov
imul
mov
hlt
adc
or
shrl
jle
cli
xchg
xchg
and
lahf
xchg
add
stc
mov
ret
mov
xor
shll
addr16
leave
adc
jg
adc
mov
data16
mov
sbb
inc
xchg
pop
mov
imul
inc
and
mov
iret
and
adc
mov
cmpl
clc
mov
ljmp
mov
imull
jae
in
aaa
inc
or
pop
rolb
and
push
xchg
adc
outsb
mov
pop
mov
sbb
arpl
sbb
vmread
push
les
sbb
fisttps
decl
daa
arpl
jg
mov
inc
cmp
fs
push
mov
pop
das
mov
das
jmp
es
adcl
popf
mov
pushf
daa
imul
cmc
outsb
push
push
insb
cltd
xchg
pop
lret
mov
mov
add
mov
out
shl
adc
dec
leave
data16
subps
push
fadds
imul
mov
stos
icebp
repz
xchg
cmpsb
xor
fwait
gs
mov
stos
mov
jp
inc
xor
sub
nop
sub
int3
aad
mov
test
addr16
jl
js
or
xchg
mov
test
jl
sub
dec
cmp
jle
and
push
fnstsw
cmp
adc
mov
scas
adc
sbb
mov
fs
mov
add
xor
sbb
rclb
xchg
jae
fwait
ss
sbb
mov
mov
cmp
in
cs
outsb
jg
add
cmpsl
gs
call
or
inc
cltd
cmp
leave
out
xchg
jmp
pop
out
sarb
jne
sub
cmp
jmp
pmulhw
dec
popa
dec
and
test
ret
fnstsw
insl
in
or
sarl
in
pushw
sti
data16
pusha
fidivrl
lret
xchg
movsl
inc
adc
rorb
mov
sbb
pop
mov
gs
adc
adc
pop
or
std
dec
enter
sub
dec
mov
sub
insb
mov
xchg
cmp
push
movsl
ret
add
ja
divb
xchg
inc
andl
or
sbb
pop
xchg
add
cli
and
add
ret
push
cltd
adc
les
mov
sub
loope
cmp
movsl
data16
movsl
sarl
aaa
stos
dec
sub
mov
shlb
mov
dec
cmc
xchg
jno
das
sbb
cld
jp
push
lods
xor
sub
xchg
icebp
dec
mov
pop
iret
es
fdivrs
repnz
jmp
sarl
or
inc
in
lds
cld
lea
fst
sub
mov
mulb
mov
push
out
ljmp
jo
mov
hlt
xor
orb
mov
popa
push
lahf
xlat
inc
dec
int
and
loop
cmpsb
paddq
std
ret
movsl
xchg
push
sti
mov
mov
incb
mov
test
cmp
pop
fcomip
orb
push
fisubs
mov
dec
adc
cs
dec
out
data16
jo
mov
bound
mov
enter
push
mov
mov
fisubrs
push
repnz
es
shrl
mov
pop
repz
sub
inc
insb
sar
rcrl
mov
mov
sbb
test
arpl
shll
dec
adc
jmp
pop
jp
mov
icebp
into
jg
dec
aas
data16
push
mov
out
inc
ss
sbb
out
aas
sub
adc
aaa
or
sub
out
rorb
je
adc
ja
cmpsb
mov
decl
cmp
fidivs
dec
and
inc
mov
scas
aad
mov
ror
xchg
mov
dec
cmp
pusha
pop
xchg
dec
clc
adc
popa
clc
movsb
xchg
dec
mov
in
add
decl
and
lahf
jl
inc
lea
push
mov
movsb
mov
xor
scas
mov
cmpsl
std
xor
jge
test
sbb
aas
mov
int3
push
test
mov
scas
loop
mov
push
mov
icebp
lahf
lcall
fsub
in
adc
test
push
push
mov
cli
fldenv
dec
shl
adc
rcrb
testl
lahf
iret
dec
out
outsb
dec
cmp
mov
sbb
cltd
jle
sbb
xchg
sub
inc
fnstenv
cmp
sti
iret
je
sbb
int
mov
aam
add
subl
and
mov
stc
mov
sub
lahf
xor
lret
and
cmc
xor
ljmp
xchg
mov
jle
fs
adc
mov
stos
fidivs
fdivl
mov
out
sub
movsl
dec
or
dec
cmpsb
sbb
pop
ret
sub
sub
decl
xor
ja
rolb
jecxz
outsl
cli
lods
jmp
out
push
jo
mov
jae
pop
out
adc
fdiv
dec
add
js
dec
and
orb
jmp
lcall
and
cmp
adc
sub
rcll
mov
mov
or
repnz
das
je
lret
andb
int3
mov
hlt
sarl
adc
in
imul
aaa
jl
enter
mov
scas
jno
push
adc
repz
fucom
mov
xchg
and
dec
fwait
add
pop
loopne
xor
lcall
and
sub
int
xchg
ficomps
pushl
cmp
jns
mov
sarb
and
dec
dec
dec
pop
lock
pusha
pop
cmp
push
xchg
es
sahf
adc
aam
addr16
lods
loope
jge
push
push
jecxz
cmpsb
add
sbb
fwait
push
mov
sbb
out
inc
push
ljmp
int3
adc
push
cmp
outsb
sub
or
imull
stos
add
es
shrl
js
hlt
push
or
pop
mov
mov
iret
in
jnp
ljmp
call
stc
pop
jns
sbb
adc
in
ja
push
daa
mov
leave
fnstcw
jno
pop
cltd
test
stc
call
sub
sub
hlt
aas
mov
popa
adc
dec
dec
stos
in
fldcw
les
andl
pop
inc
in
sbb
lods
cwtl
shlb
jns
mov
lods
dec
fwait
repnz
and
ret
xchg
mov
pop
push
xchg
xchg
push
cltd
mov
aaa
jne
lcall
test
outsl
xchg
cmc
push
addr16
hlt
mov
fst
xchg
dec
daa
stos
ret
push
push
add
shll
call
lock
sub
pusha
xchg
sbbb
add
xor
jbe
sbb
imul
sbbl
rcrl
push
pop
inc
add
loop
xlat
scas
rcl
mov
test
inc
fwait
les
inc
cltd
xchg
add
sbb
mov
pushf
inc
clc
pop
enter
dec
outsl
jmp
xchg
nop
call
iret
faddl
pop
add
popf
dec
dec
inc
lret
outsb
jg
and
stos
out
sub
xchg
xor
scas
mov
shlb
xchg
arpl
inc
pusha
push
clc
popa
xchg
adc
data16
xchg
mov
ds
in
loopne
xchg
popf
daa
imul
push
pop
movsl
loope
dec
fistpll
xchg
jo
mov
mov
mov
cs
or
inc
xlat
dec
jns
sub
imul
ds
sti
mov
mov
sub
orl
add
dec
sub
mov
ret
pop
jecxz
popf
cmp
movsl
push
mull
mov
adc
dec
jmp
int
movsl
mov
push
push
add
shl
sub
or
lcall
adc
xor
pop
add
sub
jno
or
mov
stos
mov
js
rcrb
notb
aad
sbb
cwtl
xor
or
inc
jp
mov
cmp
push
out
add
add
xchg
pushl
dec
cmpsb
fwait
outsl
jno
mov
sub
pop
stos
jl
gs
dec
mov
mull
xor
daa
mov
mov
shll
pop
call
adc
imul
xchg
pop
mov
sub
addr16
stos
les
xor
or
or
leave
ss
mov
mov
or
push
sub
in
cmpb
mov
add
jmp
ds
pushf
loope
dec
and
lret
pop
or
cmp
mov
leave
mov
add
jne
ss
icebp
loop
xchg
stc
sub
mov
outsl
inc
imul
loop
pop
sbb
or
iret
loope
insb
sub
pop
xchg
test
lds
sub
lods
out
adc
int3
xchg
gs
lea
rcrl
in
jmp
mov
movsb
mull
pop
push
fdivrs
pop
sub
inc
adc
mov
xchg
mov
inc
sbb
or
mov
sahf
push
dec
lcall
push
cmp
inc
push
cmp
or
ds
repz
adc
mov
hlt
insl
mov
mov
and
hlt
aam
pop
cmp
rclb
scas
mov
mov
dec
cmp
add
sub
sbb
sahf
out
enter
stos
inc
pop
mov
popa
divl
jno
sub
jmp
loop
bound
iret
mov
cmp
sub
or
scas
mov
add
out
xchg
add
cmp
imul
dec
fadds
cmpsl
test
add
pop
sbb
std
popf
pop
rcl
jmp
xor
insb
push
mov
ret
loope
rcll
in
sub
movzbl
inc
add
xor
mov
push
dec
mov
adc
ret
fdivl
lahf
push
and
xchg
xlat
loop
mov
mov
arpl
inc
jae
test
mov
push
and
enter
pop
les
jp
adc
sub
imul
xlat
test
or
rolb
push
out
out
mov
and
add
inc
lret
aam
and
mov
imul
in
xor
sub
xchg
stc
incl
scas
lock
cmpsb
sub
mov
pop
leave
mov
nop
daa
lret
mov
ss
xor
adc
aad
dec
pop
mov
insb
add
dec
or
push
pushf
mov
xchg
mov
dec
jmp
sbb
jp
lret
xchg
inc
adc
movsb
inc
sub
or
push
mov
pusha
scas
cmp
or
or
mov
aaa
rcr
outsb
or
or
or
cmp
lret
adc
sti
adc
or
cmpsl
ret
or
insb
ljmp
addb
and
out
das
xor
lcall
movd
outsb
add
stc
cmp
add
xchg
int3
arpl
inc
mov
mov
negl
loope
adc
orl
outsb
insb
xchg
mov
mov
ss
xchg
movsl
sub
mov
fcmove
pop
cld
xchg
add
rcr
jb
das
mov
stos
out
jp
and
in
inc
loope
dec
stos
xlat
js
jmp
js
mov
or
cltd
xchg
sbb
xchg
shl
enter
add
cmp
das
and
lahf
test
cmp
sbb
push
jno
mov
xchg
jae
into
jge
sbb
or
aad
sti
push
hlt
sbb
dec
jecxz
insl
sub
sbb
dec
adc
in
xor
hlt
js
push
add
inc
xor
dec
arpl
sbb
xchg
scas
xchg
lahf
mov
lods
pop
or
sbb
stos
and
mov
clc
repz
or
mull
cltd
test
add
ja
ds
nop
jp
es
ficomps
fidivs
dec
movsb
sub
pop
and
and
rcll
popf
pop
into
dec
fbstp
fwait
cwtl
inc
inc
push
pop
push
aad
dec
orb
imul
cmp
lds
pop
cltd
outsb
pop
pop
enter
push
scas
inc
pusha
sbb
jle
cmp
mov
mov
mov
addr16
movsb
xor
dec
cld
mov
jecxz
xor
testl
fxch
cmp
add
adc
call
mov
add
les
xchg
enter
lods
test
bound
inc
out
mov
inc
test
cmpl
xlat
outsb
lods
dec
xor
les
mov
loope
leave
xchg
push
xor
ljmp
jae
jg
test
jns
and
out
adc
jns
in
pop
dec
push
lock
ds
imul
icebp
mov
inc
int
rorb
out
add
dec
mov
lods
push
xchg
adc
push
fwait
mov
mov
les
dec
dec
sub
insl
sub
imul
out
inc
adc
or
ret
in
out
insb
sbb
je
add
fcomip
xchg
pop
jl
add
xchg
fbld
leave
xor
fsubrs
dec
dec
xor
loop,pt
inc
mov
inc
jno
jns
loop
ficoms
nop
pop
int3
loope
xchg
lcall
add
mov
data16
mov
push
std
cmp
out
mov
out
cmp
dec
int3
and
stos
gs
data16
pop
fstps
sbb
popa
push
rclb
inc
fidivl
sub
insl
loope
xlat
repz
icebp
jecxz
ret
jle
enter
loop
aad
lea
and
mov
test
adc
push
shll
pushf
aas
push
mov
dec
mov
jl
lock
psrad
fmull
mov
movsb
add
jnp
outsl
mov
xor
cltd
jno
dec
dec
add
pusha
or
push
pop
push
fnstenv
fs
int
cli
ret
xor
pop
in
ficompl
mov
push
xor
jle
cmp
filds
dec
in
cmpb
cs
mov
sub
add
or
push
sub
fsubs
sbbl
xchg
and
cltd
outsb
xor
push
inc
jns
loop
jae
cmp
std
dec
dec
dec
negl
pop
fildll
dec
hlt
leave
ja
ret
aaa
nop
xchg
inc
cmp
and
sub
inc
or
pusha
adcl
sahf
add
inc
stc
and
mov
mov
mov
xor
frstor
sarb
ds
add
imul
sbb
xchg
jo
or
xchg
mov
fs
nop
movl
stos
xchg
adc
movsl
orl
testl
enter
push
leave
pop
andl
je
fbld
inc
push
mov
sbb
pop
lret
hlt
mov
es
mov
xchg
stc
nop
ret
paddusb
lea
sub
scas
int
sub
jae
xor
xor
js
sbb
pop
lret
fs
pop
and
clc
xchg
adc
jo
cs
loop
fwait
orl
xor
jle
push
xchg
insl
gs
sahf
jg
push
icebp
sbb
adc
or
jmp
cld
xchg
or
dec
or
int
data16
inc
lcall
xor
dec
or
mov
lcall
cmpsb
lcall
clc
jbe
jge
pop
lds
and
push
push
mov
dec
or
inc
aas
fdivrl
jo
jmp
cmp
pusha
mov
sbb
je
cmp
sbb
inc
adc
jnp
mov
aad
push
pop
push
push
sbb
cltd
or
mov
aam
je
and
xor
aad
xchg
loope
mov
pop
mov
clc
fbstp
cli
or
pop
pop
sub
pushf
movsb
add
mov
adc
test
jno
xchg
addb
daa
jae
fdivl
pop
cmc
nop
jb
push
nop
sub
cli
call
cli
test
sub
repz
andl
in
arpl
scas
push
in
fisttpll
or
xor
clc
pusha
scas
inc
and
int
jne
jmp
xlat
mov
loope
cltd
rclb
lret
add
push
jbe
and
sti
pop
ret
sbb
in
testb
cli
js
jo
sub
pop
or
shlb
out
addb
adc
clc
jge
dec
push
jg
shl
dec
or
in
push
rol
add
cmp
adc
popa
or
cmpsl
pop
push
cmc
jecxz
fldt
add
xor
xor
sub
and
jp
and
inc
or
das
xchg
lds
jb
aam
xchg
aad
icebp
push
pop
hlt
ja
adc
inc
and
in
test
cmpsb
mov
and
out
mov
lea
dec
lcall
ss
popf
cwtl
pop
aad
pop
out
push
xor
xchg
sub
icebp
jmp
or
mov
jns
jg
jb
aad
sub
xchg
bound
lods
sarl
pop
imul
adc
add
orb
push
xlat
outsb
add
adc
addr16
xchg
fsts
jge
or
push
nop
iret
pop
or
xchg
popa
cwtl
bound
cmp
xchg
cmp
mov
pop
push
test
inc
daa
dec
or
leave
test
mov
sbb
sub
movsb
shl
or
push
sbb
pop
ret
call
jge
mov
push
jb
test
dec
or
in
in
shlb
rcrb
mov
hlt
gs
cmpsl
icebp
imul
xchg
push
xchg
sub
mov
push
ret
loope
data16
mov
in
clc
dec
pop
test
les
call
sbb
dec
add
sti
iret
and
mov
fs
or
and
sub
push
xorb
popa
pop
stos
mov
lcall
mov
cmpsl
or
and
inc
aam
push
shlb
shlb
jns
xor
and
loopne
xchg
fwait
push
adc
mov
lods
arpl
test
andl
jae
int3
push
mov
loope
daa
and
push
xor
xchg
aad
dec
in
lcall
and
cmp
sahf
sub
mov
aad
xor
and
dec
loopne
lods
lahf
inc
cmp
hlt
lods
pusha
add
adc
scas
pop
daa
cwtl
or
divb
and
es
stos
dec
cltd
or
and
push
test
inc
dec
mov
mov
test
cmp
xor
ljmp
aad
sub
sub
in
or
pop
pop
xchg
adc
pop
lock
pop
jo
hlt
mov
xlat
movsl
mov
adc
jle
cli
inc
adc
repz
push
imul
xchg
mov
jg
jno
or
imul
out
clc
mov
adc
mov
std
jno
addr16
push
mov
dec
insb
jmp
nop
stos
icebp
sub
das
xchg
lcall
iret
sub
out
mov
sbb
sub
xor
idivb
loope
setbe
sbb
mov
cmpsb
fsubs
lods
inc
or
jecxz
out
dec
shll
mov
mov
push
je
or
push
sub
test
and
lret
xor
in
iret
movl
push
nop
mov
cmpsb
xor
pop
push
sub
out
cmp
sub
pop
std
or
lock
push
lea
push
sti
jb
cmpb
lock
sub
lock
leave
dec
iret
fildl
lahf
adc
pop
int3
cli
lret
into
call
push
lret
fadds
cli
mov
cs
pusha
sbbb
add
ljmp
jle
pop
cld
lcall
cwtl
out
movsl
lock
lods
js
mov
pop
push
mov
aaa
mov
mov
pop
xchg
cs
mov
push
in
mov
insl
fists
shlb
cmp
aad
sub
outsb
mov
lahf
rol
sub
sbb
leave
popf
pop
loope
mov
push
mov
stos
cmp
inc
or
clc
bound
addr16
xchg
sub
stc
addr16
xchg
enter
mov
movsb
fmuls
dec
mov
shl
scas
aad
cli
das
addr16
aaa
addr16
sbb
dec
mov
xchg
movsl
adc
mov
vmovntdq
insl
pop
cmp
int
and
pop
mov
cld
ret
popf
fwait
addl
xor
mov
leave
push
scas
and
hlt
xor
aaa
sbb
testl
stc
lods
ficoms
adc
pop
mov
mov
aaa
stos
xor
mov
adc
aam
mov
push
xorl
popf
mov
nop
jnp
mov
out
adc
sbb
addr16
mov
dec
sahf
mov
aas
insl
mov
dec
cmpsl
push
dec
sub
test
add
pushf
jg
aaa
js
adc
insl
loopne
sub
mov
xor
ljmp
adc
mov
jns
sti
mov
jg
fcoml
sahf
push
sbb
scas
jg
and
pop
sbb
mov
cltd
adc
pop
mov
add
or
cmp
rcll
pinsrw
sbb
bound
sub
lods
or
rcrl
sub
push
jl
test
bound
sbb
sahf
push
push
aam
jae
mov
xchg
mov
mov
pusha
into
sbb
xchg
test
test
adc
cmp
xchg
mov
call
data16
bound
xchg
jbe
adc
mov
or
repz
stc
test
clc
mov
jbe
xchg
aad
adc
push
outsb
cmp
in
es
xor
xchg
push
xchg
mov
jno
adc
test
fisttpl
lret
or
add
xchg
add
adcb
loope
lret
inc
push
arpl
dec
or
gs
lods
and
sub
std
jo
les
lock
inc
pusha
aaa
clc
adc
mov
jno
jge
repnz
cmp
fwait
lcall
mov
fidivs
stos
in
dec
addl
add
mov
jne
lods
mov
xchg
shrd
inc
jecxz
adc
out
jg
mov
xchg
dec
pop
pop
pop
inc
sbb
fidivl
mov
call
mov
cmovne
subb
jge
jno
stos
xchg
ja
adc
mov
add
ds
stos
fidivs
xor
out
mov
mov
rcr
jecxz
in
push
jne
push
fyl2x
lahf
and
mov
or
xor
mov
or
jae
aad
aad
and
fisubrs
outsb
rorb
sub
stos
sbb
int
rcrl
std
aam
xlat
and
std
cmc
cmp
outsb
push
icebp
and
fistpl
js
dec
bound
jg
dec
push
fmull
lcall
sbb
out
movsb
pop
arpl
xchg
jp
adc
loop
lret
and
lea
and
out
add
jp
dec
and
xchg
fsts
cli
fimuls
cli
pop
cs
jl
jno
pop
mov
shlb
in
int
jae
call
or
stos
arpl
or
xchg
push
iret
cmpsl
and
mov
daa
inc
ss
add
call
ror
adc
test
or
gs
or
mov
jb
mov
mov
lods
mov
pop
fidivs
sub
lret
int
stos
call
out
stos
and
push
lcall
sbb
out
stc
push
mov
outsl
xor
loop
inc
dec
pop
push
fadds
jns
xchg
mov
into
inc
pop
hlt
enter
mov
gs
sbb
add
push
fisubrl
pop
loopne
lea
push
pop
out
scas
add
sbb
shlb
arpl
shrl
sti
in
ret
icebp
adc
sub
pop
jnp
sti
sarl
scas
adc
xchg
sbb
add
sbb
dec
mov
push
mov
rclb
pop
testb
push
mov
iret
stc
popa
or
jae
push
je
lret
and
mov
jae
sbb
cmpsl
xchg
adc
sti
jb
out
jge
ret
fstpt
out
addr16
or
out
loope
leave
lods
cltd
push
mov
adc
je
mov
mov
mov
lock
call
xchg
addl
adc
mov
in
or
and
or
push
addr16
sti
fisttpll
repnz
xor
mov
shrl
stos
inc
push
fildl
sbb
xor
cmp
xchg
or
xchg
xor
and
jns
lods
mov
xchg
xchg
int3
and
push
sbbb
xor
cmp
add
lret
lock
mov
mov
xor
dec
push
push
das
mov
shl
lea
lret
imul
xor
dec
mov
in
daa
jge
mov
push
xchg
jecxz
ja
mov
lods
xchg
push
add
rorl
loop
inc
dec
dec
cwtl
sub
aaa
loopne
sbb
stc
mov
jnp
cli
xchg
push
test
add
ja
enter
mov
stos
jae
sbb
test
push
xor
or
or
mov
movsb
cmpsb
jo
jns
inc
mov
mov
or
or
in
and
mov
lock
movsl
mov
ja
jp
rclb
sub
mov
add
mov
dec
lret
fldcw
leave
jecxz
je
pusha
mov
push
sub
stos
insl
xor
mov
xchg
xor
mov
loop
cmp
jno
mov
adc
loope
into
cmc
or
cmp
int
xchg
mov
fs
xchg
sub
fsubrp
popf
push
daa
clc
or
je
cs
out
push
leave
aaa
outsl
hlt
or
testb
mov
scas
loope
push
mov
clc
pop
mov
adc
push
mov
jg
jge
sub
push
inc
lret
push
or
idivl
js
mov
shlb
test
dec
daa
cltd
imul
cltd
inc
mov
int3
cmpsb
sub
push
fmul
inc
in
std
xchg
dec
jecxz
sub
and
outsl
sbb
pop
out
negl
adc
add
out
ret
adc
into
fiaddl
pusha
mov
xchg
sti
fdivp
sub
xchg
inc
inc
jle
int3
movsb
push
int
adc
adc
dec
jp
jne
cmpsl
pop
dec
push
or
cmpsb
imul
cmc
mov
jmp
cmpsl
xchg
mov
or
push
adc
cmp
clc
stos
loope
jo
jg
mov
aas
dec
sbb
cmc
adc
pop
push
add
xchg
lcall
insb
add
loop
cmp
pop
fcomp
int
dec
or
pusha
sbb
aas
shll
call
mov
ja
xor
cmpsb
adc
out
icebp
ljmp
mov
div
pop
mov
notl
fcomps
iret
add
mov
loopne
sarl
fs
jmp
xlat
pop
cmc
pop
inc
mov
jae
xchg
sub
cltd
pop
mov
inc
jbe
jbe
sarb
mov
inc
xlat
push
stc
xchg
lods
xor
sbb
jmp
aaa
js
sti
outsb
xchg
dec
aaa
js
or
jl
mov
mov
ds
outsl
pop
addr16
pushf
ss
rcrb
inc
les
jb
mov
mov
inc
adc
aaa
dec
push
icebp
dec
fidivs
notb
repnz
outsb
push
mov
test
mov
add
xchg
sub
movsl
or
cmp
sbbb
inc
in
sbbl
push
sub
pop
icebp
sub
inc
mov
hlt
mov
fsubl
imul
sti
loop
cwtl
lods
inc
into
push
pushf
scas
out
xchg
mov
mov
cwtl
jg
and
lret
push
ficoml
or
cmpsl
ja
into
jne
stos
call
mov
stc
mov
sysenter
push
add
sub
cmp
loop
ds
pushf
repnz
pop
lods
in
fistps
fstpl
mov
test
addr16
aas
imul
mov
add
lea
repnz
jmp
push
shrb
add
push
rcrl
js
stos
mov
xchg
repnz
pop
push
inc
lds
adc
pop
or
lods
cmp
ja
jae
imul
fimull
cmp
movsl
add
mov
fsub
popf
xchg
mov
mov
mov
mov
cld
push
leave
dec
xchg
xor
mov
scas
idivl
cmpsl
loope
es
aas
inc
cmc
dec
icebp
addb
xor
adcb
ret
les
stos
adc
test
inc
mov
test
jns
popf
pusha
cmc
stos
in
mulb
lahf
mov
dec
es
test
ret
mov
enter
fldenv
leave
push
insl
inc
xlat
pop
fs
and
add
push
mov
lcall
pop
icebp
mov
clc
push
rcrb
decb
adc
fwait
out
and
adc
sub
dec
adc
dec
dec
ret
ret
lret
imul
sbbb
or
aas
mov
cmpsb
imul
jecxz
dec
xor
ret
gs
adc
ret
jb
lds
dec
cld
xor
adc
adc
mov
arpl
xor
mov
mulb
mov
push
mov
int
popf
daa
outsl
pop
or
cmpsl
xchg
sub
lret
jnp
aas
pop
mov
jnp
xor
mov
dec
and
sbb
mov
dec
add
sub
add
test
xchg
add
addr16
inc
outsb
add
into
push
cld
in
push
repnz
ret
int3
inc
cmc
inc
adc
adc
test
stos
into
mov
dec
jp
mov
push
ljmp
int3
lock
aaa
inc
sub
push
aad
rorl
dec
dec
test
mov
lcall
in
push
subl
shl
mov
loope
int3
loope
inc
fs
sarb
push
sbb
call
outsb
cmp
xchg
cmp
xchg
mov
jl
jg
movsl
pop
sub
dec
dec
jno
jbe
jbe
int3
std
xlat
pop
imul
inc
int3
bound
orb
pop
in
loop
clc
xchg
mov
add
sub
out
ja
dec
mov
in
bound
sub
pop
inc
popa
imul
imul
jns
pop
xor
and
flds
in
nop
pop
in
ret
idivl
es
shlb
pop
push
loop
mov
sbbb
cmp
mov
popf
in
push
outsb
icebp
dec
popf
xor
adc
outsb
pop
sbb
dec
jl
mov
dec
xor
insl
test
mov
cs
mov
ss
insl
or
nop
xchg
mov
push
push
jno
mov
or
pop
out
xchg
montmul
cmpsb
lds
in
cmpsb
mov
mov
push
insb
lds
lcall
inc
jge
stos
and
into
aad
stos
mov
xchg
push
mov
push
hlt
sub
addr16
dec
sbb
stos
outsb
lahf
jne
inc
cmpsl
mov
cmpsb
cmp
xchg
movsb
cmp
push
lcall
mov
stos
arpl
sub
add
repz
loope
mov
fists
mov
callw
or
int
jnp
test
cwtl
daa
pushf
das
cltd
cmpsl
pusha
mov
push
xchg
jecxz
jl
inc
mov
jne
and
shll
mov
ss
mov
push
je
ret
pop
cmpsl
adc
mov
sti
xor
cmp
xorl
mov
xchg
mov
push
fwait
stos
or
dec
test
lea
push
add
xchg
pushf
add
push
jmp
out
mov
aam
andl
loop
or
in
scas
cmp
iret
xchg
mov
data16
inc
push
test
xlat
addr16
sbbl
mov
fcom
imul
daa
mov
popf
dec
inc
fdivrl
jmp
jg
or
pop
pop
push
enter
dec
push
rcrl
insl
or
hlt
push
orb
mov
fnstenv
cmpsl
sbb
push
hlt
repz
dec
rcrb
jno
testb
sbb
aad
mov
and
xor
xchg
cmp
fisubrs
pop
sub
or
jp
std
sub
push
jbe
jge
ficomps
js
icebp
cmpsl
push
stos
lret
mov
scas
in
adc
fyl2xp1
mov
jmp
pop
fwait
jo
int
xchg
je
imul
mov
push
cmp
xchg
mov
sub
nop
cmp
jne
rcrl
xor
and
inc
fstpt
aaa
loopne
sbbb
xchg
push
call
mov
mov
sbb
jp
mov
jg
into
push
jecxz
push
lock
pop
or
ds
xchg
pusha
lret
subb
imul
pop
dec
pop
add
jae
scas
push
std
sbb
dec
pop
push
out
movsl
jmp
pop
xlat
stc
xchg
mov
in
pop
fdiv
dec
xorb
aas
xor
inc
inc
jo
push
ret
pop
inc
into
scas
inc
mov
ror
repz
mov
ja
jnp
xor
mov
les
jbe
fists
push
mov
add
ficomps
mov
mov
ds
cmpsl
jne,pt
jb
xor
inc
adc
imulb
stos
cmp
adc
adc
jge
int
shlb
inc
sahf
in
push
test
mov
adc
adc
sahf
movhlps
mov
data16
jo
push
in
inc
icebp
mov
ljmp
stc
nop
out
push
ss
pop
bound
lds
cmp
push
cmp
or
divl
scas
test
push
sbb
in
idivl
shll
icebp
sahf
outsb
or
add
daa
out
test
pop
out
mov
aaa
into
clc
ret
rol
sbb
pushf
es
fadd
es
stc
jg
loope
push
out
cmc
xchg
cmp
aam
push
add
lock
cmp
mov
inc
pcmpgtb
fstl
rcll
jmp
pop
sbb
outsl
pop
imulb
sbb
dec
loope
dec
setg
out
push
xor
mov
lret
mov
xor
or
cmp
lcall
sub
cmpsl
pop
aas
out
shl
sub
inc
push
fucompp
aaa
push
call
movsb
xchg
outsl
adc
iret
data16
mov
je
xchg
push
std
xchg
inc
mov
inc
xchg
loopne
loop
pop
dec
outsb
enter
xchg
ljmp
aam
fbstp
testb
scas
add
sub
adc
cmp
scas
mov
inc
sbb
push
out
add
jne
xchg
test
xchg
mov
inc
sbb
jne
ds
push
ds
lret
add
pop
pop
sarl
cmp
out
xchg
xchg
sub
imul
mov
popf
sqrtps
sahf
bnd
gs
aam
addb
push
or
push
ror
arpl
push
adc
xchg
xor
push
mov
into
push
mov
sahf
ds
fcmovu
popl
and
int
clc
std
mov
sub
xchg
jg
adc
test
push
jmp
cltd
popf
and
ret
test
loopne
popf
ret
hlt
mov
jp
sbb
push
dec
cmp
mov
sahf
or
loope
sub
aaa
fmul
movsl
cmp
sti
push
sub
and
mov
sub
sbb
ds
xchg
sbb
loope
outsb
pushf
out
jb
xchg
mov
inc
into
test
mov
mov
sub
movsb
add
jp
lods
out
test
mov
xchg
repnz
icebp
mov
pop
sahf
dec
pop
nop
movsl
or
and
rclb
or
add
daa
or
or
lret
in
popf
fildll
adc
add
jae
mov
aas
dec
jno
fsts
inc
pop
inc
stc
mov
jae
and
ljmp
jb
inc
mov
jg
arpl
mov
sbb
daa
sbb
push
sti
fdivr
xchg
cli
add
xor
dec
out
inc
pop
cmpsb
cwtl
sbb
int
call
push
pushf
sti
mov
pusha
jne
push
jnp
xor
push
lea
dec
xor
pop
xchg
push
cli
inc
out
icebp
lahf
mull
dec
dec
mov
mov
daa
mov
popf
pushf
inc
fmul
ljmp
inc
repnz
repnz
sub
dec
cmp
test
stos
sub
mov
daa
xchg
dec
xchg
in
push
sbb
mov
add
sbb
mov
cmp
shrb
add
adc
aas
lcall
aam
bound
pop
sahf
add
and
adc
or
sbb
sahf
insl
outsb
leave
cmp
pop
incb
and
adc
clc
loop
imul
mov
sbb
cld
loop
mov
sub
test
mov
push
scas
dec
mov
je
out
fadd
loope
dec
jp
xchg
leave
popf
jmp
sti
and
mov
jno
aam
inc
shl
inc
mov
xchg
sbb
pop
ds
cmp
stos
xchg
mov
cmpsl
mov
mov
mov
adc
fcoml
sub
and
js
add
add
push
cmp
cltd
ficoml
inc
cld
pop
cmc
inc
into
xor
pop
loop
jecxz
cli
mov
push
or
rorl
fldl
pop
inc
push
pop
sbb
xor
shl
rorb
ja
mov
adc
in
pop
mov
pop
dec
inc
adc
out
xlat
sub
mov
movsl
data16
roll
outsl
fwait
push
fnsave
repz
dec
pop
push
test
mov
and
hlt
or
xchg
iret
insl
add
repnz
fisubs
scas
les
jb
add
out
xchg
inc
loope
mov
ja
xor
pop
std
sub
sbb
mov
into
and
cwtl
arpl
or
dec
ja
lods
sub
inc
lock
std
and
add
stos
cwtl
push
mov
lods
ds
arpl
cmp
pop
ficoms
outsl
xchg
mov
daa
icebp
mov
ret
das
push
mov
out
roll
les
dec
and
out
mulb
mov
and
in
adc
push
xlat
in
popa
clc
adc
testb
mov
shlb
xchg
push
xlat
and
dec
cmp
insl
sub
std
adc
pushf
test
popa
pusha
stos
stos
ja
shrl
inc
or
in
mov
push
jge
inc
inc
mov
xchg
pop
lods
add
sar
inc
xchg
sub
and
test
enter
or
fidivs
fwait
jle
push
data16
sbb
std
push
mov
mov
mov
lret
push
ss
push
or
xchg
enter
popf
xchg
out
stos
sub
fmull
sbb
cmp
pop
and
loope
icebp
mov
adc
int3
daa
xchg
sub
aaa
adc
icebp
jae
addr16
push
sub
in
xor
pop
cwtl
das
or
das
cmp
sbb
icebp
js
xchg
sbb
out
dec
movsb
es
adc
jne
fwait
bound
rcll
inc
pop
add
aaa
loopne
push
and
in
popa
push
repnz
dec
fildll
dec
dec
and
mov
xchg
inc
inc
inc
mov
lret
out
sbb
sub
and
sti
mov
mov
adc
fdivs
das
cli
lcall
std
or
fldt
mov
rcrl
stos
push
icebp
lea
pop
psubsb
jle
mov
mov
movsb
push
sub
inc
mov
push
add
sbbl
mov
aas
dec
stc
jbe
sub
xchg
sub
mov
outsl
push
repnz
mov
testb
insl
add
pushf
sti
pushf
movsl
jg
pop
pop
lods
xchg
clc
push
jecxz
imul
xlat
int3
pop
add
loope
adc
shlb
mov
add
test
adc
loop
mov
orb
add
sahf
ja
fwait
ljmp
push
jmp
jp
aam
daa
fsubrs
mov
add
ja
xor
xchg
daa
inc
es
jle
sbb
out
pop
rorb
mov
out
pop
outsl
mov
pop
add
out
cmp
pop
push
fimull
in
pop
mov
inc
fwait
incb
push
add
daa
adc
and
xchg
cwtl
inc
pop
scas
pop
mov
fldenv
js
aad
push
aad
shrb
mov
cmp
dec
in
movsb
jae
and
jb
adc
sti
fsubrl
inc
mov
std
inc
pop
das
loop
mov
sub
jb
fadd
add
fadds
clc
jns
and
pop
stc
nop
lea
dec
das
inc
xchg
mov
int3
dec
inc
addr16
mov
mov
inc
es
xchg
sar
pop
xor
sbb
dec
pop
adc
loop
adc
rep
jge
pop
es
sbbl
test
outsb
add
jecxz
hlt
add
shll
cmpsb
loop
rcll
mov
out
in
fcmovb
pop
or
mov
jle
rorb
dec
mov
es
in
popf
ljmp
or
jle
dec
inc
repnz
daa
jb
cmpsl
je
xor
xchg
dec
in
js
mov
cs
nop
mov
push
lods
inc
push
imul
xorb
mov
pshufw
push
jno
cwtl
xchg
add
xor
pop
lret
into
imul
mov
movsb
movsb
loop
adcb
xchg
cmc
in
and
push
cwtl
pop
mov
cmc
sub
or
sarb
lods
pop
iret
aam
pop
mov
enter
test
sub
out
sahf
xchg
add
or
or
sbb
sbb
repz
push
jne
push
jnp
xchg
mov
call
and
cld
not
mov
xor
in
outsb
mov
jecxz
ja
mov
mov
cmp
jb
negb
cmp
adc
scas
xchg
inc
push
pop
push
lea
fcompl
xchg
sahf
test
xchg
test
std
adc
sub
cmp
out
jb,pn
pusha
adc
popl
lcall
pop
adc
rcpps
xchg
mov
dec
push
repz
nop
sub
xchg
pop
xor
scas
xchg
add
leave
cmpsb
cwtl
and
and
cmpsb
adc
sbbb
mov
pusha
mull
inc
jle
jns
add
adc
push
mov
jle
mov
ret
lods
clc
sbb
jbe
jg
in
inc
out
xchg
add
cltd
mov
mov
and
xchg
mov
inc
pop
push
rcl
xchg
scas
popa
or
ss
push
popf
and
xchg
gs
cld
outsl
adc
sbb
lea
shrb
add
pop
adc
call
mov
imul
popf
clc
iret
data16
lock
loopne
push
adc
xchg
stos
in
or
bound
movsb
jo
jmp
dec
dec
cmp
push
cld
dec
pop
jae,pn
jbe
sub
cmc
loop
or
adc
fsubl
or
into
inc
addr16
outsb
adc
inc
fwait
xor
mov
sbb
out
xchg
adc
movsl
push
mov
jo
inc
sub
jno
pop
call
dec
bound
iret
fistpll
sahf
push
mov
aad
cltd
mov
cwtl
sbb
xchg
fdivrs
outsb
stc
sahf
popf
add
mov
popa
fcompl
out
jecxz
fstpl
push
loopne
adc
fidivs
mov
pop
jne
sub
mov
cld
inc
pop
adc
cmp
ja
mov
shrl
imul
inc
jnp
cmpsb
pop
cltd
cmp
pop
dec
notb
test
adc
pop
pop
fsubrl
cmp
inc
rcrl
mov
xchg
insb
out
scas
test
cmpsb
fxch
jno
sbbb
xor
mov
mov
or
cs
test
scas
aas
mov
cmc
inc
pop
stos
test
jg
repz
sub
imul
inc
dec
outsl
dec
cmp
lret
mov
pushf
and
mov
fldl
push
mov
mov
mov
sbb
xchg
adc
pop
rorb
dec
jmp
ret
push
mov
outsb
cmpsl
sub
mov
lds
or
mov
out
test
std
fisubrl
sahf
xlat
nop
cmp
mov
repnz
sbb
cmpsb
jne
imul
gs
inc
or
in
dec
jl
jle
adc
jl
xor
outsb
movsb
ja
sbb
aad
sub
push
out
enter
enter
cwtl
rolb
mov
mov
mov
scas
inc
xor
cld
mov
adc
pushf
andb
pop
jmp
jbe
movsl
outsb
js
mov
push
inc
xlat
adc
fadd
xchg
test
cli
xchg
repnz
mov
or
es
pop
mulb
sahf
push
push
repz
hlt
mov
mov
pusha
xor
test
data16
jns
rcrl
bound
inc
sti
mov
push
out
sarb
mov
jne
push
xlat
stos
add
xchg
jg
lcall
int
test
dec
or
mov
shll
ja
mov
idivb
cwtl
pusha
stos
push
aam
jmp
in
fsubr
jno
jmp
xchg
inc
lret
xchg
in
jg
pop
out
mov
push
out
xchg
xor
stos
cmpsl
adc
hlt
jne
scas
inc
outsb
sbb
push
sub
aam
mov
les
mul
cld
lcall
jne
in
pcmpgtb
mov
popf
repz
sbb
cmp
xor
lds
pop
push
mov
adc
out
pop
dec
loop
imul
add
sahf
or
sub
andl
cmp
pop
inc
pop
insl
in
fstpt
sub
fwait
or
cmpsl
cmpsb
cmp
inc
loop
in
outsb
sbb
icebp
mov
dec
adc
dec
jbe
sub
pop
test
dec
jecxz
mov
sub
push
movsb
dec
push
fmuls
fidivl
in
aas
aad
pop
xor
int3
hlt
adc
loope
dec
loope
sti
dec
es
jg
mulb
and
push
mov
lods
fsubrl
or
xchg
mov
add
arpl
loope
pop
jo
or
jg
sbb
imull
and
add
jnp
and
mov
cld
mov
mov
ljmp
sub
dec
fstps
lret
inc
sbb
cmp
mov
add
inc
test
mov
jmp
inc
inc
inc
dec
inc
loopw
outsb
enter
ljmp
aaa
jg
jbe
leave
fdivp
adc
loope
pop
sub
push
scas
push
push
incb
dec
xlat
mov
in
es
cmp
idivl
cld
lahf
lea
push
xlat
out
aaa
fstps
jbe
in
lds
inc
jmp
rcrb
dec
scas
ret
sub
pop
pop
sbb
xor
bound
mov
xor
sarl
sub
push
adc
xor
js
pop
push
cwtl
push
dec
mov
inc
pop
loope
push
adc
mov
pop
mov
lret
bound
pop
scas
push
lahf
stos
test
adc
push
in
mov
jmp
shlb
les
push
mov
femms
hlt
push
adc
push
repnz
cmp
testb
nop
daa
rolb
push
mov
xchg
jns
arpl
jle
cmc
out
adc
fsubl
call
dec
jecxz
mov
pop
mov
cmpsb
loop
xchg
sbb
cmpsl
les
adc
sar
out
mov
adc
iret
mov
pop
push
orl
les
ret
xor
push
fwait
fldt
out
fmuls
cli
push
cmp
pop
dec
mov
mov
sahf
pop
mov
sbb
nop
dec
cmpl
xor
or
pusha
push
inc
adc
xchg
push
sbb
jp
mov
inc
mov
jmp
sub
popa
cld
sahf
out
rcrb
test
mulb
cmpsb
xor
lret
adc
repnz
repz
dec
rolb
pop
test
aad
test
stos
fidivl
push
in
sahf
incl
xchg
rol
sub
dec
sbb
imull
mov
shrb
jge
out
cmc
pop
mov
and
push
call
cmp
xchg
pop
inc
repnz
xchg
enter
aas
mov
cli
and
inc
gs
arpl
mov
aam
xchg
gs
push
int3
push
fsubs
inc
inc
pop
adc
in
sub
inc
clc
jno
das
xchg
std
mov
and
fisttpll
adc
sbb
vandps
jecxz
inc
test
xchg
aad
std
idivb
mov
lock
jns
push
fwait
in
xorb
test
inc
inc
cmp
xchg
lcall
loope
adc
push
mov
ds
shl
cmp
jge
mov
sahf
clc
jg
adc
lcall
or
pop
pop
jmp
gs
lcall
rolb
dec
iret
data16
out
cld
rclb
jle
dec
mov
cltd
loope
xchg
cmpsl
pop
ds
push
dec
push
jmp
pusha
loopne
mov
cmpb
xlat
xchg
cmp
repnz
sbb
sub
scas
push
and
xchg
mov
or
popf
or
inc
scas
inc
sub
xlat
cmp
sbb
pop
mov
lahf
dec
xor
outsb
fwait
push
iret
mov
sub
daa
adc
fildll
pop
mov
inc
jbe
lds
xchg
jne
hlt
adc
jb
imul
adc
cwtl
scas
xlat
inc
sub
pop
push
push
add
add
jns
jne
lcall
lcall
fwait
push
lods
or
test
cmpsl
sarl
or
jno
dec
in
cmpl
pop
xchg
jnp
lods
mov
cwtl
and
mov
push
imulb
add
dec
add
notb
test
fnstsw
mov
fidivs
flds
add
mov
pop
xchg
rcrl
or
mov
or
mov
inc
sbb
jge
adc
ljmp
sbb
mov
mov
nop
in
inc
xchg
fstps
fldl
mov
inc
es
repnz
es
and
pop
jg
mov
jecxz
jmp
mov
stos
loop
mov
jae
push
iret
sbb
add
cmp
cmp
js
in
push
sbb
push
push
in
movb
flds
or
jg
xchg
enter
subl
fsubr
jo
cmc
into
sti
dec
mov
add
imul
adc
push
fwait
cwtl
sub
add
das
cmp
cwtl
push
enter
or
sbb
push
sub
xchg
rorb
adc
cmp
repnz
repnz
dec
pushf
cmp
in
mov
dec
pop
ret
hlt
cmp
mov
sbb
or
into
call
cmpsl
lds
rorb
sbb
inc
dec
imul
adcl
xchg
movsb
sbb
mov
and
mov
xor
jnp
and
loop
mov
adc
scas
dec
dec
leave
and
daa
mov
cvtdq2ps
mov
shufps
test
pop
fists
lea
sbb
repnz
leave
leave
xor
sbbl
add
jno
mov
mov
mov
and
fdivs
sbb
je
mov
stos
xchg
cmp
bound
inc
pop
sbbb
jne
andb
pop
sbb
int
decl
mov
pop
jg
xchg
mov
jge
pop
shll
xor
into
mov
mov
pop
cmpsb
mov
inc
and
or
and
shr
not
shlb
out
dec
iret
adc
pop
int
lahf
cmp
nop
and
aas
push
sbb
and
inc
push
sbbb
jnp
loop
stos
das
repnz
pop
js
cwtl
sub
hlt
or
mov
jae
scas
add
pop
xor
mov
popa
in
nop
sbb
add
push
and
ret
xchg
adc
add
out
inc
dec
data16
fcomps
repnz
xor
jbe
mov
sbb
push
jno
inc
push
mov
int
js
divb
pushf
pop
xlat
fimuls
addr16
and
sub
outsl
mov
pop
daa
leave
aad
iret
data16
cmp
in
rcrb
sahf
bound
inc
mov
mov
sub
fnstsw
inc
mov
js
addr16
jo
jg
lcall
xor
push
fs
in
xor
add
xchg
js
lds
out
rol
in
sbb
dec
jmp
jmp
xchg
xor
pop
scas
scas
push
push
sub
cld
adc
addr16
xchg
mov
add
rclb
stos
jge
sbb
insb
int3
cmp
insb
out
out
inc
or
nop
jmp
mov
stc
les
xchg
and
inc
fstps
jge
in
and
push
out
and
push
movntq
repnz
or
sub
scas
pop
jbe
mov
cmc
lret
sub
mov
add
inc
push
or
adc
push
add
add
insb
mov
dec
sbb
ret
add
mov
push
pop
pop
adc
adc
mov
leave
and
cmp
mov
mov
movsl
sbb
push
or
cmpsl
lret
fnstenv
mov
push
jmp
pusha
dec
test
dec
and
into
icebp
xor
push
jns
nop
lahf
out
nop
mov
ret
insb
adc
jb
sahf
push
addr16
mov
shrb
cmc
mov
xlat
push
icebp
mov
push
movd
aam
cmc
and
sbb
inc
jl
sub
dec
loop
dec
push
cli
lahf
enter
xor
xchg
daa
loopne
adc
int3
leave
pop
clc
inc
jg
mov
addr16
popf
xchg
mov
or
pop
loop
xchg
jle
dec
add
shll
xor
cld
loopne
cwtl
cmp
xor
push
pop
add
in
ja
cld
pop
stos
dec
test
xchg
sub
mov
adc
pop
dec
scas
inc
pop
pop
jecxz
clc
adc
fisttps
lds
cmp
push
lods
cmpsl
insb
out
sti
movsl
movsb
pusha
pop
pushf
dec
mov
jg
repz
dec
pop
test
mov
mov
das
les
mov
shrb
mulb
fsubs
repnz
jne
jae
sbb
movb
jle
ret
jle
dec
mov
shl
mov
fisubl
inc
stos
fcmovnb
hlt
mov
cmp
jbe
mov
repz
insl
lock
adc
adc
mov
sub
push
leave
ret
outsl
push
adc
ljmp
sub
mov
mov
je
jg
and
or
push
add
pop
xor
loope
or
ja
xor
test
pop
sub
lcall
pusha
mov
stos
mov
pop
test
loop
rorb
shll
rolb
inc
fisubs
cwtl
and
xchg
push
ss
and
mov
mov
jns
cs
scas
mov
bound
das
clc
pop
pop
das
fwait
and
jp
jbe
xchg
bnd
leave
pop
lds
jb
pop
mov
sub
push
mov
lock
push
lds
push
aaa
sub
lret
daa
inc
adc
mulb
in
pop
pop
adc
mov
insl
add
inc
xlat
xchg
mov
icebp
or
or
test
add
in
pushf
std
xchg
dec
lods
mov
jne
lock
mov
xlat
sub
test
dec
shrl
ds
mov
xor
lds
movsl
add
sbbl
das
and
and
add
fists
addr16
in
inc
sub
lret
imul
mov
jae
pop
add
cmp
shlb
xchg
daa
jl
divl
dec
fsts
xchg
imul
xchg
mov
push
lods
dec
inc
scas
leave
push
loope
mov
mov
or
mov
pop
js
mov
out
push
js
xchg
in
mov
jb
fdivrs
stos
lcall
mov
push
and
lcall
loop
lret
xor
je
divb
incl
sbb
push
sub
test
outsl
sti
fucomip
sub
loopne
stos
lds
test
adc
xchg
push
mov
dec
jo
cmp
or
push
xchg
insl
jmp
test
xor
sahf
clc
fwait
sub
cmc
fidivs
scas
pop
inc
negb
push
sub
jge
or
test
bound
dec
out
jg
mov
adc
mov
xchg
cmp
lock
clc
jb
sub
push
dec
push
mov
sti
cld
shll
cli
out
rclb
cmp
mov
mov
fsubs
add
and
fsubrs
jb
xor
les
shll
ficomps
xor
data16
loop
mov
adc
stc
je
movsl
daa
pop
cs
sbb
fs
ret
jae
loopne
pop
pop
jecxz
pmullw
cmp
adc
mov
push
mov
jae
mov
sbb
and
adc
aas
push
popf
fbld
mov
enter
mov
es
push
in
jle
xor
adc
mov
adc
div
js
data16
xor
arpl
aad
sti
and
add
xchg
sub
lret
rcll
add
sub
dec
js
test
lcall
push
call
dec
arpl
push
mov
jle
jb
movsl
ljmp
mov
je
aas
mov
inc
pusha
scas
lcall
les
into
mov
daa
add
adc
adc
fcmovu
mov
or
imul
push
and
xor
test
popa
xchg
mov
inc
sub
pop
xor
cmpsb
xlat
movsb
cmp
lds
pop
adc
add
xchg
push
lret
add
mov
inc
sbb
lds
mov
aas
mov
mov
sub
sbb
jge,pt
shl
jnp
test
dec
inc
push
out
test
dec
pop
cmp
mov
dec
loop
fistpl
xor
imull
fisubl
les
inc
shl
out
add
ljmp
int3
cmp
repnz
loop
mov
xor
add
adc
dec
in
push
pop
push
data16
push
sar
mov
push
out
pop
pushf
repnz
or
insl
sub
cmp
xchg
push
dec
dec
jmp
jle
mov
aaa
aaa
mov
fcom
pop
mov
xchg
mov
imul
mov
mov
outsl
jnp
pop
arpl
lret
pcmpgtd
and
clc
push
xor
ds
xor
ds
sbb
aaa
cmp
pop
lcall
push
mov
divb
push
in
repnz
jae
jo
mov
stc
fistpl
adc
cmpsb
lret
push
hlt
outsb
and
repnz
test
aas
push
dec
in
pop
jmp
inc
dec
into
xchg
fdivl
xor
jg
jge
mov
mov
out
stos
data16
push
daa
inc
jl
mov
popa
mov
imul
movsb
fwait
leave
fsubr
xor
mov
aam
mov
fs
xchg
dec
pop
inc
jmp
bound
int
fwait
call
in
jnp
or
dec
mov
insl
xor
ljmp
xchg
inc
ja
in
or
sub
sub
xor
stos
imul
popa
clc
adc
ret
je
out
stos
inc
mov
fcompl
fdivs
mov
dec
pop
cltd
loop
dec
in
adc
cwtl
out
cmpl
cli
in
repnz
sarb
js
xlat
ret
xor
mov
mov
sub
xor
mov
out
adc
test
mov
or
cltd
daa
sub
pop
mov
mov
mov
outsl
sti
jnp
push
jo
push
and
add
push
repnz
nop
jg
push
sub
cld
lea
xchg
jle
add
mov
jnp
push
xchg
dec
pop
lds
jns
pop
mov
add
ljmp
movsl
mov
sbbl
imul
mov
or
mov
shl
out
jecxz
mov
in
pusha
roll
cwtl
add
dec
push
nop
lods
pop
rcrb
lods
inc
outsb
jp
pop
nop
dec
push
stos
push
mov
test
loopne
dec
loope
lods
xlat
dec
cmpsb
into
incl
leave
xchg
cmp
stos
mov
xor
testb
loopne
inc
movsl
push
mov
jno
cmp
push
insl
je
dec
in
inc
or
cmp
in
mov
jnp
fwait
imulb
nop
and
scas
das
shlb
stos
bound
aad
add
test
cld
mov
jnp
jge
or
int3
fdivl
or
mov
xchg
jns
ds
or
pop
xchg
sbb
movsl
aam
les
cmpsb
dec
gs
pop
mov
xchg
and
sarl
lret
push
js
or
jb
loop
mov
add
mov
imul
add
mov
loopne
mov
insb
adc
and
cltd
clc
lret
test
iretw
push
out
xchg
cs
enter
lret
sbb
mov
xor
out
iret
push
rolb
mov
sub
jle
sub
mov
rcl
push
push
inc
addb
jecxz
ret
push
fs
in
xchg
js
jl
ja
movsl
test
mov
test
mov
subl
in
inc
in
inc
jno
loope
jns
lret
bound
sbb
push
int
lret
jecxz
add
mov
sub
or
push
insl
push
clc
js
movsb
xchg
mov
jns
xor
test
pop
sbb
dec
movsl
xchg
data16
lock
insb
je
sahf
adc
jp
incl
jg
sub
xlat
mov
or
xor
arpl
adc
mov
cltd
xor
je
aam
test
notl
or
cmpsb
xorl
and
hlt
popa
cs
mov
hlt
inc
call
and
pushf
cmc
jne
jmp
sti
adc
cmpsb
outsb
xchg
pop
jl
inc
pop
lcall
jecxz
jecxz
cltd
jecxz
mov
fucomip
pop
mov
sbb
lock
mov
int
mov
jb
pop
sbb
ljmp
sbb
dec
mov
inc
jne
dec
cld
cmp
sub
mov
fldenv
sbbb
add
cwtl
lds
lock
leave
and
out
ja
lock
cmp
sub
test
cmp
lds
mov
stos
lcall
ficompl
leave
pop
and
mov
push
icebp
subl
xlat
sbb
data16
sbb
repz
call
mov
inc
rorb
cmp
adc
testb
dec
inc
xchg
adc
fyl2x
pop
movsb
pop
ljmp
push
or
scas
cmp
test
pop
stos
inc
je
das
add
js
dec
push
notl
js
scas
push
cmpsl
out
add
int
sub
stos
repnz
ficoml
jb
xchg
ljmp
subl
adcb
pop
scas
and
push
or
xchg
mov
dec
inc
mov
jp
or
icebp
mov
stc
push
dec
loop
sbb
xchg
mov
inc
mov
pop
inc
fstl
nop
fs
nop
xor
ja
mov
mov
add
sbb
and
mov
push
pop
mov
inc
lock
jg
dec
lret
or
push
call
push
outsl
sahf
ret
fstl
and
push
int
mov
out
cltd
clc
sahf
mov
cmp
or
aad
dec
mov
lahf
mov
push
fstps
pop
lods
fbld
mov
or
jae
or
mov
push
pop
nop
xor
in
push
push
scas
out
mov
inc
pop
aaa
fidivrl
jno
xor
sbb
imul
jle
lea
push
inc
pop
pop
xor
or
ret
sbb
mov
movsl
mov
das
jb
popa
jp
xor
lret
movsl
sbb
lcall
dec
in
faddl
mov
xor
js
call
sbb
fcompl
and
mov
ret
insb
and
aad
push
hlt
push
ret
outsb
jge
fsubr
out
jmp
cmp
push
dec
fld
ret
scas
and
call
push
pushf
lret
loopne
sub
dec
push
movsb
orb
ljmp
inc
xchg
das
outsl
mov
js
xchg
push
loope
aam
dec
lea
movsb
dec
lret
pusha
mov
mov
ds
push
es
pop
lret
call
add
je
sbb
sbb
cmp
insl
shrl
lahf
mov
mov
pop
cmpsb
fwait
sarb
enter
sbb
cs
and
and
xor
jnp
in
sub
js
addb
jmp
aam
mov
rolb
dec
push
shl
cli
mov
scas
cmp
pop
je
popf
inc
arpl
dec
cmp
xchg
add
fistl
cltd
jl
jae
xchg
sub
fbstp
pop
out
cmp
mov
push
adc
xchg
push
jmp
out
cwtl
pop
push
mov
das
das
outsl
sbb
or
jne
push
pop
push
ljmp
imull
jp
add
mov
ds
lods
pop
push
aaa
jg
inc
stc
jmp
nop
jnp
je
hlt
xchg
in
adc
push
mov
test
outsl
pushf
mov
jp
jge
and
mov
lret
xchg
xchg
loopne
enter
jbe
ds
or
cs
adc
adc
ja
cmp
and
test
add
sbb
pop
negb
cmpl
inc
add
icebp
push
pop
loopne
imulb
stos
push
push
sub
mov
or
dec
jnp
jl
out
cmp
cmp
int
and
aad
sti
jbe
ret
push
jne
outsb
xor
jno
mov
sub
and
push
inc
mov
sbb
test
jae
inc
movsl
and
dec
enter
imul
insb
scas
pop
lods
or
lods
fnstsw
push
bound
mov
sbb
sbb
cld
outsl
mov
insl
shrl
inc
sbb
dec
xor
cmp
imul
adc
data16
sub
rolb
pop
movsl
xchg
dec
adc
cmp
mov
jmp
lret
lock
mov
jns
rorb
inc
inc
xchg
dec
cmp
pop
les
inc
bound
sub
fstps
xchg
or
cmp
in
sub
mov
mov
insl
scas
pusha
mul
xor
or
add
cltd
push
sbbl
jp
mov
leave
sub
push
jg
pop
pop
mov
out
aad
jne
shrb
pop
add
nop
xchg
jg
pop
test
outsb
out
or
arpl
cmpsb
inc
sub
test
xor
stos
inc
sahf
ja
cmp
jne
adc
pop
daa
icebp
push
mov
packuswb
sti
imull
mov
mov
imul
jae
xchg
push
rclw
mov
pop
nop
jno
cmpsb
push
mov
cwtl
mov
sub
in
mov
pop
lock
mov
les
push
bound
leave
jge
xchg
xorl
pushl
mov
pop
adc
jmp
push
inc
mov
rorl
push
adc
sub
negl
mov
shrb
mov
sub
in
test
loopne
lds
inc
inc
pushf
xchg
bnd
mov
and
ret
daa
dec
push
cmpsl
ds
jnp
pop
xchg
push
mov
xlat
pop
lahf
inc
push
std
test
lret
fwait
xor
and
mov
sbb
xor
call
adc
dec
cmp
std
leave
sbbl
sbb
mov
movsl
movsl
stc
outsl
xchg
leave
outsb
inc
cli
mov
int3
and
inc
adc
in
subb
insl
adc
cltd
ret
mov
jecxz
je
icebp
ret
dec
dec
jecxz
inc
dec
aad
fadd
lea
push
push
mov
xchg
sbb
mov
jb
loop
ffreep
cwtl
jge
inc
sub
mov
in
xchg
adc
cmp
inc
dec
pop
jl
pop
fisttpll
jp
xor
pop
pop
test
lds
das
mov
add
shld
aad
rcrl
dec
loop
jg
repz
add
lds
xlat
pop
popa
sbb
mov
ret
jl
inc
lods
add
repz
decl
sub
pop
mov
xchg
mov
pushf
pusha
rcrl
loop
mov
mov
test
push
sbb
and
sbb
inc
xor
xchg
ret
hlt
aaa
jl
adc
ret
adc
add
cmp
adc
mov
ret
jmp
add
std
xchg
push
inc
sbb
sub
stc
or
adc
pop
fdivrl
mov
xor
sbb
bound
cmp
xor
aas
mov
xchg
lahf
mov
push
es
and
mov
jnp
iret
notb
ljmp
in
sbb
outsw
nop
outsl
mov
icebp
sbb
and
pushf
xor
sarb
aad
ljmp
adc
mov
pusha
mov
sbb
sahf
mov
add
pop
xchg
cwtl
pop
imul
notb
lock
or
test
mov
sub
roll
jmp
or
cmp
addl
xor
cmp
xchg
mov
mov
pushf
test
dec
aad
xlat
add
dec
popf
fs
push
cld
jl
cs
push
sub
rcrl
ltr
jp
inc
push
mov
mov
into
loopne
test
xchg
cmpb
mov
cltd
jns
cmpsl
fisttpl
mov
dec
add
lock
outsb
lret
bound
out
xchg
or
outsl
mov
mov
and
rcll
ds
inc
mov
push
clc
jb
jmp
xor
inc
fs
push
cmp
ljmp
mov
or
insb
dec
in
das
sbb
mov
fisttps
js
pop
inc
push
in
cmp
xor
pop
ds
or
lcall
inc
leave
pusha
es
mov
lahf
xchg
lcall
fld
fadds
loop
cltd
adc
lcall
sbb
adc
arpl
xor
fnstenv
pusha
mov
xchg
aaa
cltd
shl
addr16
jg
dec
mov
xchg
iret
imul
sub
popl
cmp
leave
iret
in
pop
mov
pop
lret
lret
lods
pop
les
mov
adc
inc
jmp
and
movsb
xchg
nop
icebp
mov
add
gs
jnp
pop
movsl
lds
sub
ja
push
decl
inc
sub
icebp
push
hlt
push
std
xchg
dec
mov
sbb
test
fwait
mov
mov
push
iret
push
inc
pushf
out
mov
gs
addr16
mov
ret
call
push
vunpcklps
inc
pop
xor
out
test
in
push
push
pmaxsw
inc
sarl
pusha
jb
lahf
lret
iret
call
pop
repnz
aaa
pop
in
xorb
push
lea
push
adc
pop
add
push
movd
or
testb
orb
jle
icebp
insb
insl
adc
jg
or
cmp
mov
into
dec
dec
mov
out
idivl
icebp
or
jnp
pop
cmp
aaa
es
repz
cmpb
jmp
scas
shlb
xor
mov
push
test
enter
mov
aas
sbb
inc
mov
cmpsl
jge
movsw
mov
jle
scas
mov
imul
hlt
mov
sub
dec
jecxz
dec
int
jg
mov
pusha
sarl
xor
adc
cmpsb
adc
in
xchg
pop
mov
jb
or
daa
testb
add
mov
and
mov
sti
or
sub
inc
push
shrl
dec
push
sub
mov
lods
sbb
mov
pushf
xchg
scas
xchg
insl
leave
sbb
hlt
xor
scas
xchg
sub
xchg
notb
or
sbb
push
adc
imul
pop
or
rclb
movsl
mov
sahf
add
xchg
stc
sub
add
mov
in
gs
bound
sub
aam
out
xor
scas
repnz
out
popa
cli
xchg
addr16
adc
mov
in
leave
adc
sbb
fsubr
xabort
add
push
cld
adc
jle
enter
push
out
test
or
or
and
in
pop
js
xor
sti
xor
xchg
call
lea
sub
shl
daa
out
xor
xor
sub
inc
xchg
dec
pop
adc
pushf
test
loop
in
cmp
fwait
sbb
push
test
stc
pop
test
je
mov
nop
pop
pop
decl
flds
ds
outsb
add
push
or
jne
out
rclb
movsb
pushf
and
xchg
dec
int3
and
out
bound
push
jmp
pop
pop
jo
nop
xor
outsl
pop
rol
sub
rol
lods
sub
ret
inc
mov
jae
les
dec
xor
addr16
pushf
jecxz
push
inc
cs
mov
and
pop
mov
pop
adc
mov
pop
outsl
rcrl
pop
add
mov
loope
sbb
out
fs
mov
inc
push
jae
mov
inc
and
mov
popa
dec
inc
push
lods
aad
lods
movl
lret
std
je
jle
xor
mov
ds
and
or
mov
dec
and
loop
pop
icebp
int
iret
jg
in
jns
adc
cmp
pop
cmp
mov
jle
lahf
push
xchg
sahf
lock
fcoml
in
xchg
xchg
in
jb
push
sbb
sbbl
add
push
and
in
push
add
jae
xor
jo
sbb
outsl
lret
fst
and
xchg
mov
mov
cld
xchg
fstl
sub
dec
push
push
inc
and
scas
dec
and
sbb
fbstp
ds
jge
jo
mov
dec
adc
dec
stos
inc
cltd
push
jl
dec
andl
sub
push
xlat
dec
dec
pop
lds
jno
add
fistpl
outsb
enter
dec
rol
sbb
xchg
xorb
lods
mov
cs
pop
xchg
pop
insb
jl
and
sbb
inc
sbb
loope
loopne
lock
xorl
push
push
or
add
pushf
mov
xchg
sahf
lods
lcall
loop
pop
fsts
xlat
cmp
dec
out
outsb
add
jnp
mov
add
xchg
js
xlat
icebp
lcall
mov
cmp
pusha
in
sbb
mov
jo
cmpsb
xor
lock
dec
test
loop
outsb
xor
mov
fwait
xor
popf
or
mov
ja
fcmovnbe
mov
mov
inc
daa
aam
pop
and
ja
je
xor
inc
sahf
cwtl
cmc
dec
inc
aad
stos
pop
cwtl
repz
insl
int
jnp
mov
jge
mov
test
lret
sti
xchg
sbb
icebp
add
outsb
div
mov
imul
inc
push
das
scas
push
mov
sbb
call
std
mov
pop
sbb
pop
fildl
in
push
movsl
rorl
sub
jae
ret
jne
in
test
ret
push
pop
xchg
scas
dec
stc
lods
adc
repz
mov
cmp
cmp
pusha
xchg
pop
or
cmp
push
jne
adc
sbb
testb
stos
and
cmp
xor
cmp
outsl
push
mov
add
ljmp
and
or
int3
adc
or
add
xchg
cmpsb
sbb
mov
mov
push
and
sbbl
jl
gs
sub
dec
mov
pop
dec
mov
push
daa
in
pusha
les
sub
sub
inc
mov
loopne
and
popa
cltd
push
movsb
inc
adc
loope
jmp
icebp
leave
push
pop
jp
cmpsl
mov
jo
dec
notb
inc
mov
mov
pop
xchg
ds
js
aam
inc
jae
data16
cmpsb
test
xor
mov
stos
push
insb
cld
sti
roll
and
aam
cmp
xor
cld
sbb
sarl
and
test
jo
les
cmpsb
movsb
sub
or
xor
cwtl
pop
sbb
paddb
and
icebp
dec
jnp
mov
mov
stc
pop
imul
add
pop
sahf
xchg
lahf
lret
add
push
mov
icebp
sbb
popf
ror
pushf
in
mov
jno
loopne
push
pop
pop
test
cmpsb
sub
inc
fldenv
sarb
mov
jns
sbb
xor
sti
push
xchg
or
cltd
sahf
mov
cmp
xor
sti
cwtl
sbb
ret
mov
mov
fcoms
cli
xor
and
xchg
and
cmp
inc
and
xlat
xorb
jecxz
pop
incb
rclb
push
mov
dec
bound
aaa
into
shrb
fisubs
sub
mov
fscale
push
loop
mov
inc
xchg
push
mov
mov
bound
and
hlt
jg
push
pop
imul
ja
jmp
loop
mov
add
inc
dec
cmp
test
out
jne
cs
xchg
sub
mov
ret
scas
cld
cmpsb
mov
cmp
fwait
jo
dec
jno
test
insl
lea
push
jns
or
push
add
jns
xchg
mov
das
lods
pop
int
sbb
pushf
jo
or
sbb
xor
js
movsb
sbb
mov
sbb
mov
sbb
xor
add
mov
xor
mov
inc
push
add
xchg
test
mov
shlb
in
sets
int3
and
lret
out
mov
mov
dec
and
ret
sbbb
xor
and
cmpsl
dec
xor
add
xor
stc
bound
push
sub
or
jge
inc
daa
aas
testb
test
int
cmp
and
scas
cmp
sub
push
rcll
mov
lods
leave
cmp
in
test
sbb
mov
pop
add
xchg
mov
pop
mov
xchg
cld
xor
lcall
and
movsl
fistps
scas
push
mov
popa
mov
adcb
lock
dec
jae
stc
mov
loope
fistpl
out
xchg
adc
jb
pusha
insb
sbb
jmp
es
cld
xchg
and
adc
andb
repz
mov
insb
in
repnz
pop
cmp
or
insb
cmp
test
pop
pop
addr16
push
in
pop
xor
leave
push
ss
inc
clc
dec
add
leave
test
sub
fs
cmpsb
add
fsubs
les
push
loope
flds
insb
das
inc
inc
insb
jle
sub
rorl
jnp
andb
loope
cmp
arpl
ret
outsl
int3
xchg
sbb
push
dec
mov
pop
mov
jo
cmp
add
aaa
into
mov
push
xor
clc
xchg
mov
sbb
jo
jbe
into
mov
test
gs
sarb
clc
les
jg
xor
pop
lods
mov
dec
in
jns
mov
movsl
fdivs
dec
dec
push
inc
dec
cmp
mov
loope
mov
pop
aas
out
xor
into
leave
loope
ret
cmp
dec
xor
in
lret
inc
xchg
push
mov
dec
mov
bound
pop
jns
in
icebp
add
pop
cmpsl
push
push
outsl
repz
imul
stos
xchg
xchg
repz
leave
push
mov
push
leave
mov
int
jmp
arpl
cmp
es
lret
out
sbbb
fdivrl
movsb
lea
scas
xchg
push
stc
jnp
or
xchg
mov
xorb
mov
fisubs
dec
pop
es
adc
lods
inc
jbe
loopne
sub
cmpsl
pushf
int3
dec
icebp
sub
dec
cmp
or
sub
xchg
aad
inc
ds
sbb
jecxz
pusha
dec
push
aas
push
mov
leave
addl
cmp
jb
stos
sbb
flds
out
adc
in
mov
mov
les
mov
jno
adc
in
sbb
aam
cmpsb
dec
stos
lds
push
jne
sub
push
insb
arpl
into
push
std
pop
ret
out
leave
cltd
popa
adc
sub
or
or
cmp
cmp
nop
aas
jecxz
dec
cmc
stc
je
loope
cmc
mov
lret
xchg
call
cli
pushf
and
dec
stc
test
sub
lods
add
shll
sti
cmpb
mov
sti
adc
mov
dec
xor
lret
dec
mull
xor
repz
push
cld
pop
mov
mov
cmp
arpl
push
shl
add
sbb
sub
xchg
sub
ret
jp
dec
sti
sub
cmpsl
imul
xchg
lods
mov
jo
xchg
cmp
addr16
add
cmp
lret
pop
test
test
ret
xchg
jmp
sahf
jno
scas
and
cli
int
add
or
xor
imulb
das
mov
mov
ret
call
test
jne
or
loope
xor
incb
jno
popf
mov
nop
pop
stos
enter
mov
cmp
inc
loope
scas
fwait
mov
enter
fs
pop
mov
nop
adc
pop
aas
jg
leave
mov
int
push
or
ds
ljmp
outsb
xchg
jp
mov
and
mov
inc
scas
sbb
out
jo
bound
push
add
cltd
xchg
pop
addr16
adc
mov
pushf
nop
test
pop
ret
nop
and
rcl
test
leave
jnp
enter
out
mov
bound
jle
push
fistps
ds
inc
sbb
mov
scas
jp
movsb
xorb
movsb
in
imulb
jns
arpl
pop
cmpb
mov
ja
xchg
testb
rcrb
mov
jno
mov
and
out
enter
imul
jmp
iret
cmpsb
sub
repz
cmp
or
dec
fidivrs
cmc
loopne
lret
movsl
lds
pop
stos
loopne
mov
data16
mov
sbb
shr
push
test
mov
jecxz
sub
js
cmp
mov
popf
pop
mov
push
mov
or
and
inc
popa
pop
lods
xchg
mov
lods
push
cmp
repnz
adc
filds
or
testl
dec
cmp
cwtl
xchg
filds
das
or
in
fnstcw
gs
lret
nop
fidivl
mov
sub
rcll
dec
gs
aas
push
mov
and
in
jmp
xchg
decl
cmpsl
or
das
into
add
lds
loopne
cmpl
sub
jnp
aaa
jle
movsb
cltd
xor
push
lods
aam
push
aad
dec
inc
dec
fstp
imul
jmp
push
outsb
inc
xchg
addr16
repnz
xchg
add
sbb
push
sub
xor
repnz
insb
ss
rep
imul
jo
fiaddl
mov
inc
shrl
add
mov
push
lcall
movsl
insb
dec
lods
mov
test
jnp
sbb
push
shrl
lret
adc
shr
jo
and
leave
adc
xchg
xchg
je
add
mov
dec
mov
cmp
inc
imul
out
ret
imul
xchg
jmp
dec
mov
cmpsb
sub
mov
jg
cwtl
mov
push
test
cli
jecxz
lock
fucomi
or
ss
xchg
pop
movsl
sbb
fmull
iret
daa
cmp
std
inc
dec
xor
and
out
mov
mov
decb
jo
xchg
pusha
mov
pushf
or
push
mov
jle
mov
fildll
jl
jno
aam
pop
in
mov
push
aad
ret
lds
mov
pop
and
clc
das
les
push
outsb
xor
cld
xchg
out
adc
xor
xor
sbb
adc
mov
sbb
pop
int3
out
cli
scas
adcl
or
sub
jae
mov
loop
fs
sahf
pop
jns
stos
inc
sbbb
lret
fidivl
pop
sahf
ja
clc
adc
call
adcb
cmp
xor
xchg
test
lods
lret
cmp
bound
js
xchg
add
enter
imul
cmp
movsb
out
aas
cmp
int3
fisubs
and
sbb
mov
jbe
push
imulb
add
lds
xlat
cmp
push
mov
cmp
js
sub
iret
orl
ja
filds
adc
stos
xchg
call
and
xlat
stos
pop
fiaddl
or
imul
negb
hlt
sub
scas
shlb
shrb
dec
dec
lea
jne
es
adc
pop
add
pop
sbb
shl
cmp
cmp
pop
and
and
movsb
pop
mov
cs
mov
jg
push
lea
in
insl
mov
add
sar
cwtl
or
fnstcw
pushf
pop
sub
dec
pop
mov
adc
cmpl
xlat
mov
in
adc
push
pop
cmpsl
pop
xor
cli
imul
jnp
call
inc
sub
jne
mov
and
mov
pop
cli
mov
jg
push
adc
jb
idivb
add
lea
int
negl
mov
push
pop
mov
and
loope
pop
push
outsb
adc
pop
into
jecxz
jle
jbe
inc
data16
ljmp
les
imul
add
leave
ja
xor
cltd
outsb
mov
or
movsb
fcompl
sub
aas
dec
and
mov
data16
pop
jp
adc
cmp
cmp
mov
fs
mov
scas
mov
mov
mov
or
lret
mov
sahf
and
cmp
push
cmp
in
orb
dec
mov
or
cltd
imul
push
roll
xor
sub
cmpsb
mov
aad
mov
idivb
or
add
hlt
adc
sbb
lret
mov
mov
and
push
lea
inc
push
sahf
movsl
fs
lods
dec
fcompl
mov
jae
inc
movsl
scas
inc
movsl
push
jbe
and
mov
lods
mov
adc
jno
xchg
int
cs
cld
jo
insl
push
sbb
shlb
movsl
push
dec
fcompl
dec
or
imul
mov
mov
cs
sbb
push
call
addr16
adc
mov
and
or
pop
sub
cmp
addb
xlat
test
sub
lods
out
mov
pop
cmp
push
mov
or
clc
cmc
daa
mov
dec
stos
mov
scas
cmp
push
dec
pushf
dec
inc
add
xchg
cmp
pop
sbb
mov
cmp
adc
lock
lods
mov
jp
jl
inc
xor
pop
ljmp
dec
in
jecxz
dec
in
insb
sbb
jecxz
and
imulb
shl
jge
rcl
sub
fidivs
jb
fistl
sub
push
push
sub
pop
jae
add
mov
dec
mov
add
pop
ljmp
out
popf
movsb
cmc
daa
mov
enter
cwtl
in
and
ret
sahf
sub
jle
scas
sub
data16
std
jo
sbb
sti
mov
call
sbb
mov
mov
stos
popa
movl
out
push
xor
inc
jns
xchg
mov
push
mov
test
pop
mov
cmpsl
addb
outsb
xchg
negl
mov
xchg
jnp
jns
fildll
scas
js,pt
jle
cmp
cmc
xor
mov
cmpsl
sti
xor
out
je
test
xchg
scas
cmpsl
in
test
lret
pop
enter
andb
and
fiadds
xchg
pop
lahf
xchg
leave
rep
sub
push
adc
xor
scas
cmp
cs
or
xchg
push
leave
test
insb
lods
push
push
add
xchg
ja
enter
mov
pop
mov
cwtl
addr16
out
fnstsw
repz
push
inc
aam
dec
and
into
andb
das
mov
rcr
mov
mov
add
pushf
jbe
jmp
sahf
jge
mov
and
pop
outsl
and
mov
mov
lock
xor
mov
inc
jnp
popf
and
sahf
inc
sbb
int3
pop
daa
inc
adc
and
add
fwait
mov
adc
pop
bound
sbb
jno
cmp
mov
out
inc
inc
popf
daa
pop
mov
out
mov
lret
mov
or
pop
mov
xor
push
cld
sub
push
notb
push
dec
pushf
xlat
loope
enter
in
add
xchg
pusha
pop
xlat
cmp
fidivs
icebp
jno
fs
jns
mov
mov
xor
jo
test
repnz
dec
movsl
in
pop
fsub
mov
int3
sub
orb
mov
negb
fdivs
les
les
movsl
bound
inc
out
inc
test
sub
sub
enter
fidivl
jnp
std
cmp
mov
lods
add
iret
dec
and
cmp
fidivrs
loopne
std
adc
mov
loope
mov
in
mov
cmp
xor
imul
out
mov
cmc
scas
xor
cmp
cld
push
mov
rorw
sahf
mov
cmp
out
and
orl
push
adc
pusha
pop
mov
insb
inc
cmpsl
loop
mov
addr16
inc
push
mov
cmpsb
imul
js
mov
mov
insl
adc
mov
lds
fs
loop
pop
adc
fcoml
lea
jno
daa
adc
cmp
lods
subl
lods
inc
ficomps
fildll
mov
leave
or
daa
push
shrb
push
xchg
repnz
call
or
in
insb
and
sub
imul
push
lcall
cmpl
or
mov
push
push
mov
repnz
xchg
test
inc
sbb
dec
add
jecxz
sub
dec
in
testb
mov
push
lock
jno
mov
inc
inc
xor
lret
fadds
cwtl
mov
cmpsl
jp
pop
loopne
xor
xor
cmpsb
stc
popf
push
inc
inc
shlb
jl
imul
and
sub
sub
cmp
stos
mov
mov
aas
inc
mov
inc
xchg
sub
in
mov
fsubr
out
loop
jo
mov
mov
lret
jb
or
mov
stos
pop
arpl
cmp
sub
lret
into
dec
jmp
fidivs
xor
and
cltd
xor
repz
incb
stc
ss
rcll
out
movsb
out
test
dec
cli
add
lahf
lahf
or
push
insb
mov
mov
cmpsl
mov
bound
xchg
insl
push
add
rcrb
mov
fidivl
imul
rorl
lret
pop
push
push
xchg
add
adc
fdivs
xchg
lahf
shrb
addr16
inc
xchg
popf
ds
adcl
icebp
bound
dec
das
sub
pop
jl
inc
jle
ss
mov
roll
out
fbld
ja
inc
aad
data16
repnz
inc
jecxz
adc
out
jl
and
or
add
out
sbb
shll
xor
inc
hlt
test
add
push
mov
push
fwait
jno
inc
iret
rcrl
xor
mov
mov
stc
pop
shrb
pop
xchg
cmp
and
fs
sub
fcom
adc
lea
aaa
mov
push
and
jnp
xchg
mov
cmp
push
cltd
cmp
jl
pop
ret
pop
mov
lds
jp
testb
jge
mov
gs
xor
mov
enter
rorl
push
inc
inc
clc
movsl
xchg
xlat
sbb
je
lods
into
imul
out
subl
dec
or
xchg
or
sbb
mov
in
int
pusha
add
getsec
mov
push
and
inc
fcmovne
jge
add
cmpsl
push
push
out
fwait
cmpsl
sub
jmp
cmpsb
sbb
dec
enter
pop
fs
mov
mov
sub
fwait
mov
ret
iret
fildl
test
mov
push
out
daa
divb
mov
out
das
adc
xlat
cmp
adc
enter
insb
sub
mov
ja
mov
xor
insl
push
fld
dec
inc
mov
and
dec
xlat
inc
jne
jb
xlat
repz
insl
leave
push
jae
dec
ljmp
xchg
sahf
sbb
cli
loope
xchg
or
jecxz
push
jo
pushf
xchg
jbe
mov
nop
or
dec
pop
out
scas
scas
adc
push
and
scas
sbbb
test
lahf
jb
rcl
cli
femms
fidivs
add
in
or
dec
cmp
mov
mov
xor
mov
adc
add
jb
sbbb
in
dec
loope
lods
push
pusha
mov
pop
jo
sub
scas
es
imul
stos
cld
rolb
lret
dec
push
jle
cmpsl
jmp
pop
mov
ja
push
xor
dec
outsl
mov
xor
sbb
sbb
push
shrl
push
fsub
into
aad
sub
xor
popa
and
xchg
push
sahf
mov
and
call
xchg
int
push
in
xchg
sub
outsl
cmp
arpl
cmc
fiaddl
ret
adc
es
cmp
pushf
adc
push
jb
dec
mov
enter
insb
gs
hlt
mov
stc
mov
sbb
clc
test
lock
in
aaa
mov
pop
add
mov
mov
lock
cmp
or
icebp
xor
dec
mov
insl
lea
loope
sbb
call
jge
imul
outsl
ret
add
adc
and
add
adc
into
dec
leave
pop
subl
mov
and
xor
lock
jge
jbe
aas
sbb
pop
mov
out
pop
cmp
xor
pop
mov
out
adc
in
sbb
jns
cs
sub
imul
std
xchg
rclb
xchg
dec
out
inc
ret
and
mov
loop
in
mov
fidivl
js
or
or
notb
lahf
out
xchg
dec
lock
out
xor
jge
sti
xchg
adc
xchg
outsb
pop
inc
mov
aaa
repz
or
xor
adc
sbb
cmp
sbb
dec
repz
push
sbb
dec
decl
mov
jae
pop
enter
mov
pop
sarb
xor
mov
sahf
or
mov
mov
rcrl
add
adc
add
addr16
mov
cwtl
xor
mov
repnz
jmp
xor
sbb
test
pop
icebp
mov
into
jnp
add
dec
setp
lea
test
in
popa
lods
pop
fisubrs
clc
xor
aam
add
aaa
cmp
mov
add
lea
and
mov
mov
mov
pop
adc
add
cmp
flds
mov
aad
push
jnp
mov
xor
clc
or
sahf
add
mov
clc
inc
or
mov
mov
divb
lret
testb
mov
andl
mov
mov
popa
cli
sub
clc
inc
cmpsb
repz
out
dec
enter
test
fdivs
loopne
xor
dec
xor
lea
add
rorl
dec
fwait
ja
fdivs
loope
lahf
jg
add
repnz
pushf
jmp
or
andl
xchg
leave
dec
dec
jb
dec
mov
push
int3
arpl
push
test
mov
jo
out
fdivrs
cmpsl
cmp
hlt
das
repz
arpl
jecxz
mov
inc
imul
andl
inc
xor
mov
and
push
push
xor
xchg
shl
js
cmp
pop
mov
repz
pop
sbb
mov
out
inc
mov
sbb
jp
inc
xor
dec
pop
inc
rolb
leave
pop
sub
loop
fmull
sti
outsl
lret
inc
cltd
sbb
or
int
movsl
sub
outsb
repnz
jo
ja
repz
popf
pop
pop
push
pop
sbb
repz
xor
mov
test
cmp
std
inc
lods
inc
pop
ss
adc
inc
lret
or
or
mov
xchg
inc
fsts
push
pusha
testl
jnp
xchg
outsb
sbb
add
sbbb
mov
mov
fmull
push
ret
adc
xor
pop
sub
stos
sub
cmp
cli
mov
mov
push
mov
out
add
stos
lds
test
sti
cmpsb
fldenv
sub
cmpsl
dec
gs
cld
xchg
push
xchg
js
sbb
popf
jo
inc
push
imul
inc
call
inc
std
cs
jns
pushf
jae
mov
mov
jo
xlat
add
add
or
and
movsl
cli
scas
jno
sub
mov
data16
fnstenv
xsha256
cmpsb
push
dec
repnz
rcrb
mov
xchg
mov
mov
sbb
rcrb
push
adc
pop
jno
cmpsb
in
fidivs
push
out
fnstenv
xchg
sub
push
outsb
xchg
dec
sbb
jp
shrl
adc
ljmp
jo
dec
jl
shrb
das
mov
mov
fistl
test
shrb
jl
pop
mov
jmp
mov
add
inc
push
cmp
iret
loop
pop
inc
popa
push
mov
js
pop
mov
and
andl
lods
jae
ficomps
push
inc
je
leave
cmpsl
rcl
lods
xchg
push
cmpsb
and
pop
dec
mov
mov
into
ljmp
sbb
push
lret
dec
es
push
and
jg
and
cmp
loop
lret
pop
xchg
or
lods
lcall
inc
pop
dec
push
push
jg
into
or
inc
sbb
dec
xor
inc
jg
dec
mov
or
outsl
cmp
insl
nop
push
sar
pop
lret
adc
mov
jno
in
popa
cld
pusha
sbb
inc
fnstcw
sti
aad
fldcw
mov
cmpsb
xor
fdivrs
jge
add
xor
sbbl
stc
movsb
push
mov
rcrl
es
mov
pop
ret
push
stc
cmp
pop
cmp
scas
sbb
push
clc
shl
cmp
outsb
inc
mov
repz
cmpsb
ret
aam
mov
pop
divb
popf
push
jle
add
sar
iret
mov
je
mov
lods
test
nop
and
push
in
cli
insb
push
insb
mov
imul
jp
xchg
aam
adcl
jmp
push
jne
lds
out
jg
pusha
mov
pop
mov
mov
fsubrs
into
in
inc
sbb
test
jmp
cmp
pop
sbb
lock
popf
insl
nop
inc
cli
pushf
xor
cmp
jb
mov
xchg
cmpsl
push
mov
xchg
jge
jecxz
les
xor
shr
and
orl
cmp
sub
bound
xchg
and
pop
push
sahf
into
orl
add
ja
btc
inc
jmp
iret
dec
sahf
sbb
add
and
pop
movsb
jg
cld
jbe
inc
insl
loop
sahf
mov
cwtl
aam
mov
xor
adc
xor
add
out
adc
pop
scas
pop
mov
xor
gs
rclb
push
or
mov
push
dec
movsb
ret
pop
adc
push
cmp
sub
test
inc
sub
sbb
decb
jmp
and
insb
ficompl
scas
sbbb
add
sarl
or
mov
mov
or
dec
inc
movsb
repnz
cli
jns
xchg
mov
xor
aam
out
push
enter
inc
sbb
adc
dec
test
testb
sub
loop
jb
dec
cwtl
add
inc
xor
push
iret
dec
and
test
jge
xor
mov
les
pop
outsb
popa
lea
mov
pop
add
loopne
or
and
arpl
test
lret
lahf
mov
mov
movsl
jp
or
sbb
add
pop
jo
subl
mov
loopne
cmpsl
mov
aam
addr16
in
push
push
cld
insl
aas
mov
cmpsl
scas
mov
scas
and
aam
mov
mov
jb
mov
xor
inc
bound
frstor
mov
push
or
mov
shrb
sbb
jo
aaa
into
or
push
pop
adc
ss
rcrb
add
jmp
cltd
mov
mov
movsl
nop
loopne
addb
aaa
xchg
loopne
adc
ss
lds
xchg
xchg
fildll
mov
addl
or
dec
xchg
add
adc
adc
push
xchg
pop
addr16
aas
les
or
in
cmp
mov
sahf
and
insl
mov
dec
add
push
stc
sbbb
and
in
mov
les
lret
or
mov
xor
dec
pop
push
in
add
test
stos
mov
cld
and
imul
add
mov
jmp
pop
cmpsl
mov
pop
bound
or
scas
sbb
pop
adc
xor
gs
ret
jne,pn
pusha
jecxz
aam
mov
mov
arpl
lock
adc
or
mov
push
sub
adc
cld
dec
addr16
mov
ret
pop
shl
pop
call
lods
fistpll
aad
add
push
pop
hlt
xor
jnp
xor
xor
loope
enter
inc
jp
shrl
popf
add
xchg
push
adc
dec
inc
adc
cmp
pop
dec
loop
jno
dec
xchg
movsl
cmpsb
negl
not
sub
jg
stc
mov
in
dec
das
adc
add
dec
movsb
bound
enter
pop
inc
cld
xor
mov
dec
outsb
ss
push
imul
sbb
out
pop
and
mov
fisubs
mov
mov
clc
and
notl
pop
sti
insl
clc
inc
fdivrl
jne
sub
scas
icebp
or
lods
jg
mov
loop
shll
mov
fucomp
mov
adc
or
pop
jbe
cs
pop
insb
filds
jp
mov
and
cmpsl
push
lods
mov
sahf
push
andb
insl
insl
jge
jne
in
xorb
cmp
mov
add
add
fidivl
test
mov
pop
ret
popf
lds
popf
xor
daa
adc
mov
pop
lret
lret
and
fs
in
mov
add
jb
mov
xor
ja
cmp
inc
fdiv
xor
add
sub
sub
push
cmp
or
xor
clc
sahf
dec
jmp
cld
lcall
in
aaa
and
cwtl
pop
lret
push
imull
fidivs
push
call
pop
xor
cmp
and
push
sub
mov
mov
imul
outsl
loop
out
ljmp
loope
pusha
fstpt
or
dec
daa
movswl
test
add
je
fpatan
aaa
mov
or
mov
push
lods
pop
mov
push
rcr
lret
mov
fisttps
stos
data16
fs
cs
testl
dec
push
cmp
xchg
shrl
out
adc
lret
cld
testl
test
popf
scas
inc
iret
loope
sti
pop
mov
fs
sarb
adc
sbb
sub
loop
addr16
out
inc
cld
inc
or
jae
sahf
int3
cli
aaa
jbe
or
xchg
mov
fcompl
mov
add
cmpsl
loope
cmp
cmp
mov
dec
ds
add
insb
mov
xchg
outsb
push
dec
icebp
adc
mov
adc
scas
ficoms
ficomps
adc
test
data16
mov
inc
pop
stc
sbb
xchg
scas
inc
adc
inc
enter
jl
xchg
sbbb
std
out
das
sbb
mov
xchg
ja
xor
cmc
nop
pop
aaa
xlat
outsb
loope
lcall
mov
sahf
mov
push
adc
int
in
push
add
ds
stos
ljmp
insl
and
stos
sub
flds
xchg
std
push
jnp
enter
data16
mov
negl
fwait
pop
pop
out
and
scas
add
jp
sbb
ljmp
outsl
add
sbb
xchg
fildll
xchg
and
cmp
inc
pop
sbb
add
inc
cmp
fcoml
mov
cli
xchg
jnp
cmc
pop
pushf
sbb
jecxz
pop
mov
add
inc
push
inc
add
ss
jnp
mov
test
repnz
jb
pop
out
jbe
cwtl
decb
jbe
call
shlb
icebp
jno
jecxz
inc
int3
arpl
and
cmp
sbb
lds
inc
inc
or
pop
imul
dec
cwtl
iret
pusha
stos
cmp
xchg
outsl
loopw
test
xor
pop
icebp
or
ficompl
ljmp
xorb
fisubs
jecxz
leave
test
je
xor
xchg
fdivs
cmp
cmp
shlb
aad
mov
xorb
mov
and
mov
dec
add
push
jne
rclb
test
sub
push
sub
ds
shrb
inc
pop
test
add
inc
int
inc
fnstenv
inc
lods
cmp
int3
inc
pop
add
xchg
addb
ja
mov
test
push
popf
mov
cs
mov
push
lahf
ss
dec
out
mov
mov
jmp
ss
push
push
loopne
mov
outsb
popf
pop
clc
cmpsl
cmp
repnz
or
pop
mov
aad
mov
sbb
ds
mov
in
mov
lock
out
push
pop
fbstp
stos
push
outsl
cs
mov
inc
pop
je
addb
adc
jl
jl
mov
fidivs
mov
test
repnz
pop
insl
jge
push
into
xchg
lahf
sbb
pop
mov
cmc
mov
add
aam
and
xor
dec
cmpsb
inc
pop
rcl
fcoml
add
or
fwait
add
mov
outsb
dec
mov
fsubrl
dec
popa
xorl
sahf
push
ja
movsl
mov
push
xor
lea
cmp
cmpsb
mov
xchg
enter
std
jb
jns
cmp
push
nop
fs
loopne
les
inc
xor
dec
bound
aam
outsl
pop
out
dec
cmp
cmp
lcall
in
add
pop
inc
popa
inc
xchg
sahf
clc
repz
or
or
lods
mov
je
push
rcrl
bound
push
cwtl
cmp
xchg
xor
jmp
sahf
inc
cmp
mov
or
ds
movsb
pop
sub
fwait
pop
daa
lock
outsl
inc
sbb
ljmp
ret
xchg
xor
popa
mov
adc
je
mov
loopne
das
adc
sub
xor
loop
inc
in
push
mov
and
adc
mul
sub
jecxz
dec
hlt
xchg
call
adc
push
dec
inc
add
ret
push
jb
mov
jns
jmp
cli
pop
xchg
test
xchg
loop
mov
jae
ret
pop
or
and
jge
inc
arpl
mov
imull
into
movsl
xchg
lret
or
mov
add
fisttps
sahf
push
shl
mov
adc
scas
inc
mov
add
mov
ja
fdivrl
ss
xorb
xor
out
popf
and
dec
filds
insb
push
dec
mov
sub
es
scas
nop
xchg
sti
dec
xor
push
aad
movsl
xchg
into
sbb
pusha
lds
mov
xchg
mov
cwtl
mov
adc
or
loopne
or
push
hlt
cli
lods
push
sbb
pop
cmp
mov
jae
call
fsts
in
je
mov
enter
jle
pmuludq
jmp
pop
aad
ss
out
push
dec
icebp
insl
jge
sahf
push
push
sub
mov
fildll
push
xchg
icebp
movups
mov
mov
lcall
and
jg
out
mov
repnz
fs
lea
sbb
ja
push
in
sbb
inc
cmp
insb
mov
mov
out
fsubrl
adc
cs
loope
fldl
test
out
loope
pop
adc
inc
cmp
lahf
insl
mov
and
sbbl
jp
mov
push
xor
add
mov
xlat
jg
cmp
bswap
lahf
in
sub
mov
call
ret
add
mov
xchg
or
jmp
inc
dec
cwtl
das
stos
leave
insb
test
subb
sbb
test
jg
or
insb
int3
mov
or
daa
pop
fiadds
cmp
fstps
ret
mov
jo
and
mov
mov
mov
add
mov
pop
imul
fdivs
cmpsb
jecxz
sbb
lods
add
fdivl
into
enter
push
clc
jg
fcoms
mov
std
mov
ja
pushf
mov
push
xor
shrl
jo
shrl
cltd
mov
loopne
pop
push
pop
cld
xchg
mov
sbb
lds
jle
out
popa
pop
dec
and
lret
rcrb
int
ja
sbb
pusha
push
call
pop
repnz
repz
cli
rcll
mov
test
ds
outsl
hlt
dec
sbb
repnz
sbb
or
daa
pop
push
js
ret
loope
jle
notb
cmp
gs
sub
nop
pop
dec
cmp
mov
xor
dec
mov
xor
xor
jl
pusha
sub
push
cwtl
imul
lcall
lods
dec
fcoml
add
mov
and
sub
dec
enter
shrl
lea
inc
xor
mov
add
and
fbld
cwtl
pop
and
cmc
and
cs
pushf
xor
jne
dec
loopne
cmpl
jle
ss
lods
xchg
das
or
cmc
fwait
push
movsl
ret
pop
mov
popa
and
inc
push
daa
xchg
sub
faddl
mov
mov
loope
inc
pop
xchg
add
lahf
pop
and
mov
mov
xchg
sbb
test
or
dec
pop
mov
mov
adc
pushf
ljmp
test
ja
jmp
or
fisubl
adc
or
pop
ja
mov
and
ja
in
jmp
inc
imul
inc
mov
sbb
jb
fldt
xchg
aaa
daa
xchg
sub
jne
out
fstpt
int
inc
ss
pop
adc
jb
jmp
sahf
dec
lock
sub
mov
push
int3
fdivl
jno
out
inc
cli
mov
jmp
cltd
fwait
cmp
imul
pop
mov
insb
push
mov
shrb
aaa
xor
out
sub
shr
mov
sbb
dec
insl
or
insb
or
test
xor
adc
dec
xchg
add
pop
push
xlat
shl
xchg
fwait
mov
mov
xchg
dec
pop
addr16
je
div
rdtsc
fdiv
psadbw
loop
pop
repz
dec
cmp
mov
and
scas
fucomi
nop
adc
ss
aas
xchg
out
mov
rcl
sub
std
daa
ret
mov
icebp
aas
les
xor
lahf
jns
inc
les
jns
insb
pushf
sbb
ja
and
and
fimull
repnz
roll
sub
loope
dec
pop
mov
ja
repnz
aas
pop
insl
jno
cmc
mov
jbe
aas
test
push
cmp
cmc
mov
add
aam
jl
mov
subb
pop
or
mov
in
adcl
ljmp
jno
inc
mov
and
test
add
sbb
sbbl
mov
std
jo
push
adc
add
pop
jbe
je
xchg
push
iret
pop
daa
mov
mov
arpl
stos
pop
push
sub
xchg
daa
mov
mov
loopne
mov
std
enter
test
mov
scas
leave
insb
mov
movsb
cmp
xor
adc
int
mov
pop
sbb
enter
aad
jp
dec
add
inc
sbb
leave
imul
fbstp
enter
dec
push
add
mov
test
leave
mov
jbe
or
imul
pushf
repnz
cmc
and
inc
lds
lahf
add
in
mov
xor
xor
les
cmp
pop
fistpll
mov
in
mov
cmp
popf
jecxz
jmp
into
bound
sbb
inc
fiaddl
lcall
xlat
dec
pushf
mov
and
inc
fiadds
movsl
and
mov
nop
inc
inc
xor
gs
in
and
inc
push
or
incl
cs
lahf
inc
call
in
je
push
lret
rcrl
cmp
mov
add
ljmp
divl
pop
scas
ljmp
adc
pushf
ja
fs
test
push
ficompl
xchg
test
add
dec
pop
loop
xchg
mov
mov
mov
int
inc
sbb
sbb
mov
jmp
jmp
movsl
push
clc
lods
inc
mov
ja
jmp
xor
mov
sub
pop
cmpsl
push
push
stos
sub
shlb
mov
jg
push
dec
mov
faddl
mov
aas
push
push
add
popa
mov
mov
gs
les
jae
sahf
cmp
testl
mov
gs
add
dec
xchg
call
flds
xor
push
mov
lret
pop
stc
popf
xchg
loop
cli
jle
jge
lahf
mov
cmp
jl
int3
test
scas
aas
lcall
sbb
pop
loopne
jae
stos
loope
jne
out
adc
iret
mov
in
stos
and
add
push
xchg
iret
dec
cmp
nop
push
pop
outsl
lock
lock
sub
mov
fimull
sbb
and
cmc
in
icebp
sbb
mov
icebp
dec
adc
lcall
gs
sub
or
fiaddl
bound
aas
jmp
mov
sarb
inc
push
bound
out
cmpsb
adc
mov
test
sbb
imul
ret
in
nop
mov
in
out
outsb
loope
leave
popa
cld
jne
aaa
ja
inc
pop
adc
sbb
mov
mov
add
cmpb
xor
cwtl
dec
cmp
or
push
test
sub
adc
loope
sbb
lock
sub
xchg
xor
sub
mov
mov
add
fldl2t
mov
pop
xchg
push
nop
push
jmp
or
cmpsl
in
es
sbb
adc
cmpsl
push
out
inc
sbb
cld
iret
sbb
ret
decb
aaa
xorb
loopne
mov
dec
data16
adc
mov
xor
inc
mov
adc
pop
mov
negl
jns
push
add
cmc
movsl
or
jge
stos
out
daa
outsl
add
das
mov
fcmove
stos
nop
daa
in
jmp
scas
dec
mov
shlb
or
mov
adc
jns
outsl
and
mov
xchg
std
jae
das
mov
xor
cld
dec
xor
scas
push
jp
shrl
pop
in
int
out
mov
adc
adc
xor
mov
push
out
mov
adcl
cmp
je
stos
test
mov
adc
jecxz
push
fadds
pop
ds
addr16
testl
mov
int
shrl
js
jge
outsb
jle
pop
arpl
sub
mov
or
ss
mov
movsl
in
pop
xor
dec
mov
jecxz
add
adc
shrb
addr16
sti
popf
cmp
pop
popa
in
scas
mov
jecxz
push
pop
adc
adc
lcall
mov
add
out
dec
out
cmp
mov
pop
loope
idivl
jl
pop
scas
pop
add
subl
adc
xor
dec
pop
idiv
outsb
test
ret
mov
pop
outsb
xorb
pop
stos
es
jle
xchg
mov
pop
and
aad
mov
sti
jns
xchg
dec
sbb
add
aam
add
fsubr
bound
lret
pop
sbb
ds
or
int
sbb
mov
bound
inc
jl
mov
sub
adc
sti
mov
notb
mov
mov
fidivrl
dec
mov
push
lahf
cmp
adc
fisubs
cmp
inc
cmpsl
xchg
xor
mov
leave
pusha
fsubl
aaa
jbe
mov
or
pop
push
test
lret
adc
mov
or
or
addr16
loopne
pop
btc
jp
adc
add
rol
add
mov
dec
outsl
push
jge
ret
fnsave
adc
pop
and
out
mov
jo,pn
push
mov
mov
divl
xchg
adc
hlt
lret
add
and
push
xchg
inc
sahf
and
cmc
das
addr16
iret
fists
pop
mov
jne
jo
xor
inc
movsb
imull
pmullw
mov
mov
xor
xchg
mov
stos
mov
sbb
jo
popaw
push
jo
xchg
gs
push
in
aaa
or
lcall
xor
std
pop
pop
push
insl
add
jbe
mov
ret
cld
fs
gs
mov
inc
adc
jle
inc
fstl
sahf
ds
mov
mov
add
xchg
xchg
xor
cmp
jmp
sbb
xor
sub
iret
xchg
inc
cmp
dec
out
jno
xchg
mov
pop
movsl
mov
pop
pop
jl
test
dec
jg
push
mov
push
add
mov
push
jbe
mov
scas
inc
cmpsb
loope
mov
sub
xchg
fadds
xchg
lods
push
jmp
sub
shll
pop
inc
rorl
fsubp
cmp
aas
or
pushf
xor
test
mov
adc
jl
sub
orl
negl
mov
dec
in
add
xchg
xor
sbb
and
test
inc
loopne
hlt
addr16
mov
xchg
jo
sar
movsl
mov
sbb
and
cmpsb
inc
pop
fcoms
add
and
dec
das
jp
pusha
repnz
rolb
cmp
cltd
xor
testl
mov
sub
shr
jge
xchg
jb
sahf
xor
dec
les
stos
xchg
fldt
sarb
test
cs
and
aas
xlat
inc
in
icebp
pusha
in
pop
xchg
pop
xor
add
imul
jbe
adc
stos
mov
jl
out
orb
mov
push
loopne
leave
lds
xchg
lods
icebp
jl
cmp
adc
mov
sahf
stos
pop
into
cmpl
test
leave
call
add
fsubr
xchg
insb
sbb
daa
mov
mov
sbb
pop
mov
jbe
adc
mov
or
jmp
fcoms
pop
icebp
push
jb
or
sub
stos
push
out
movsl
psrlw
mov
cmpsl
ds
or
loope
lahf
lds
xchg
jp
ret
jbe
sahf
andl
inc
fmul
push
in
jg
addr16
ret
or
addr16
insb
aas
and
iret
mov
xlat
ds
jl
andb
test
xor
sub
mov
jmp
loopne
arpl
push
push
or
por
dec
push
add
mov
pop
and
ss
imul
pop
hlt
fwait
mov
insl
movsl
into
mov
notl
sub
mov
daa
pushf
movsl
gs
mov
push
push
xor
xorl
mov
mov
mov
xchg
xor
push
imul
push
and
dec
pop
and
nop
or
add
nop
sub
mov
or
push
ds
mov
movsb
adc
pop
jge
cmc
popf
mov
fiadds
sbbb
jg
jbe
out
in
in
insl
cmp
mov
dec
push
push
and
mov
dec
aam
sbb
lahf
xor
aad
adc
mov
movsl
jno
xchg
push
dec
sub
sti
mov
lods
out
adc
and
sbbl
inc
mov
and
xchg
mov
test
xchg
mov
add
fdiv
adcb
ret
ljmp
aad
fs
xchg
jp
dec
out
int
cld
sub
push
inc
ljmp
aaa
jg
push
jb
and
jne
xchg
sub
cmp
jg
inc
mov
pop
shlb
xchg
loope
inc
fnstcw
mov
popa
enter
mov
lea
mov
stos
mov
incl
nop
xor
in
lods
sti
stos
and
cmp
dec
and
dec
adc
daa
leave
popa
lret
sub
or
les
sub
sarb
pop
pop
int
icebp
movsl
sbb
and
cld
scas
mov
loopne
cmc
ss
in
test
inc
mov
mov
enter
aad
inc
cli
sbb
lea
xchg
repnz
add
jbe
mov
hlt
lock
push
int
lods
inc
push
lods
sbb
sbb
mov
adcl
inc
sub
mov
pop
adc
mov
out
push
jp
popa
aam
pop
cs
shll
in
out
mov
and
mov
test
out
sbb
and
and
in
or
stos
fidivl
test
push
mov
mov
loopne
pop
aaa
leave
sub
mov
insb
fists
adc
inc
and
ds
mov
decl
inc
and
repz
pushf
outsb
stc
or
cmp
xchg
stos
mov
sub
mov
sub
js
outsl
int3
sbb
aaa
ljmp
int
fnsave
mov
cltd
xchg
scas
push
in
jp
mov
popa
mov
into
cmc
sub
sbb
lock
enter
imul
adc
lcall
sar
jo
data16
movsl
xor
inc
fcmovnb
mov
adc
testl
xchg
daa
mov
cmpsl
out
or
inc
dec
dec
adc
inc
notb
mov
pushf
cmp
stos
xor
ljmp
push
lods
pusha
ss
and
adcb
inc
inc
sub
mov
mov
ljmp
sub
es
mov
imul
addr16
mov
mov
xchg
pushf
pop
push
xor
jmp
dec
inc
fdivl
fnstsw
aad
mov
jmp
scas
inc
mov
imull
pop
add
adc
bound
and
dec
sub
imul
repnz
outsb
sarl
add
in
lods
and
xchg
jno
xorl
jne
jo
pop
dec
bound
imul
shl
xchg
add
aaa
dec
sub
cmpsb
repnz
add
adc
xchg
mov
push
jo
xor
sahf
insb
mov
mov
jge
enter
enter
roll
andl
push
pusha
sub
pop
dec
arpl
jnp
inc
test
jo
andl
push
ss
sub
inc
leave
xchg
push
cltd
clc
ljmp
lea
inc
icebp
loope
pop
mov
add
mov
xor
pop
loopne
xor
push
push
sbb
mov
cmpl
inc
lcall
jle
mov
jle
clc
lods
adcb
dec
test
xor
mov
inc
fcmove
mov
or
mov
shrb
out
test
lret
push
push
mov
xchg
pop
mov
mov
loop
push
ret
sub
arpl
into
pushf
test
inc
cmpsb
mov
xchg
aas
shl
in
sub
insl
xchg
sub
push
mov
mov
inc
lock
ffreep
push
or
nop
shll
in
xchg
mov
add
inc
test
js
test
int
or
sbb
sbb
cmc
jg
jle
popf
addr16
lcall
mov
into
hlt
inc
decb
push
jo
aam
inc
xchg
pop
lods
jg
call
sbb
add
es
or
jae
loop
les
jbe
rorl
fsubr
mov
loopne
les
pushf
push
int3
cwtl
pop
mov
dec
out
cmp
or
je
jno
test
sub
test
sbb
roll
inc
int
lock
mov
xchg
push
inc
sbb
mov
dec
mov
jg
push
scas
shl
and
fsubs
xchg
loope
push
lods
js
push
mov
inc
icebp
add
push
sbb
and
ss
and
pop
sub
add
jne
dec
mov
rol
pop
pop
pop
out
pusha
jge
add
shrb
or
jno
inc
aam
add
pop
popa
sbb
outsl
orb
jmp
leave
mov
cmp
movsb
outsb
and
std
push
mov
aaa
xor
push
mov
add
pop
sbb
pop
ret
pop
mov
arpl
or
push
popf
incl
sarb
out
xchg
daa
int
xor
sub
mov
xor
aad
pop
scas
inc
out
mov
stc
mov
mov
push
andb
add
das
xor
pop
popa
into
pop
dec
cwtl
jge
int3
and
inc
repnz
dec
mov
mov
mov
inc
cmp
call
jle
adc
pushf
int3
and
jne
sub
adc
jg
add
pop
leave
pusha
xchg
cmp
pop
sub
jns
rcr
ret
jmp
in
movsb
push
jno
push
sub
idivl
iret
scas
stc
xchg
jae
enter
dec
xchg
jg
scas
inc
or
int
xchg
sub
adc
loop
out
mov
xchg
dec
out
das
mov
pop
enter
imulb
js
test
stos
mov
pop
cmpsb
mov
imul
test
inc
inc
cmpb
outsb
dec
es
jns
add
xchg
or
mov
cmc
mov
pop
inc
vmwrite
mov
jg
inc
adc
sub
or
push
mov
ror
int3
dec
jecxz
scas
shr
xor
adc
push
sbb
and
iret
adc
fdiv
cmp
sbb
fnstsw
mov
cmp
and
frstor
push
and
repnz
push
mov
or
xchg
fadds
xchg
sti
xchg
adc
ljmp
dec
or
cmp
pop
or
scas
test
daa
test
adc
jo
fs
xchg
or
out
insb
and
cmp
sbb
adc
pop
lret
movsb
sbb
xorl
mov
daa
push
lret
mov
dec
adc
dec
leave
das
fsubrl
push
hlt
push
add
sub
inc
inc
or
es
dec
push
dec
push
inc
stos
push
rcr
adc
push
mov
data16
inc
fwait
mov
lods
mov
hlt
cltd
fnstcw
push
adc
orb
nop
mov
sub
sub
mov
dec
sbb
pop
mov
lea
inc
addb
lock
lods
dec
mov
and
or
lret
sahf
jg
shlb
icebp
jmp
dec
sahf
inc
push
push
xor
and
jns
fwait
test
lods
and
mov
std
inc
lcall
and
ljmp
jge
cmp
outsl
pop
fwait
sti
xchg
test
adc
or
shll
and
mov
shll
pop
mov
pushf
xor
loope
cmp
clc
imul
ret
mov
aam
add
fnstsw
jo
dec
dec
sarb
movsb
dec
in
out
xor
sbb
xor
insl
inc
sub
hlt
lret
cmp
cmc
dec
out
cmpsl
lock
mov
fildll
push
jmp
les
jmp
fisubl
dec
cmp
dec
icebp
cli
imul
lret
add
jecxz
xor
push
gs
push
call
cmp
inc
test
push
mov
mulb
or
xor
out
push
xchg
add
imul
hlt
and
adc
inc
stc
fsubs
in
mov
mov
rorl
push
jmp
clc
inc
aad
lret
lock
pop
mov
addr16
mov
ret
mov
jmp
cltd
pusha
iret
cli
pushf
adc
shrl
sarb
insb
cwtl
jo
dec
jno
lods
data16
sbb
bound
sbb
out
jbe
xor
sub
dec
outsl
cmc
pop
jecxz
jge
into
outsb
dec
adc
rcrb
test
cld
or
es
adc
data16
adc
mov
lods
pusha
sub
push
fcoml
ffreep
aam
mov
dec
mov
daa
into
rcll
mov
xchg
xchg
xor
sbb
test
cmc
mov
out
push
stos
fidivrs
aaa
punpcklwd
dec
adc
sub
inc
loope
ds
jecxz
scas
fs
adc
sbb
adc
stc
jo
subl
es
jg
pop
mov
iret
loope
pop
in
pop
add
stos
xor
xor
sbb
enter
adc
cli
dec
mov
xor
mov
lock
inc
cmpsb
sahf
iret
data16
roll
xchg
in
outsl
dec
adc
push
jp
jno
stos
movsl
mov
jns
sbb
shrb
lret
les
orl
cmp
fsqrt
push
cmp
push
sbb
adc
mov
inc
ret
jg
ficompl
push
sub
xor
or
ja
jns
addl
fidivrs
mov
mov
xor
sarl
lret
pop
sub
mov
mov
pop
ljmp
sub
pop
pop
push
mov
sub
lock
jmp
mov
addr16
lret
test
sbb
aas
push
jp
sub
pop
int3
jo
das
in
mov
jg
fidivl
int3
mov
or
aam
mov
or
xchg
dec
cwtl
xchg
into
in
lahf
push
mov
popf
and
lahf
int3
cltd
mov
fnsave
pop
imul
xchg
add
and
sub
inc
repnz
pop
or
movsl
adc
scas
inc
mov
or
cmp
push
sahf
pop
aaa
lcall
cmpsb
cmp
in
jl
ljmp
push
ds
mov
pop
lahf
gs
test
mov
add
imulb
pop
lret
pop
or
and
rcll
flds
or
fists
xlat
mov
add
jns
dec
in
nop
cmpsb
push
scas
rcrb
mov
or
mov
push
push
in
dec
or
adc
push
push
cltd
push
and
movsl
cmp
in
fbstp
ja
sub
outsl
test
pop
or
xor
push
imul
rcll
repnz
mov
push
insl
cmp
sbb
cmp
adc
popf
lds
inc
lret
es
fdivs
into
mov
arpl
testl
push
or
jg
mov
repz
loop
sbb
dec
cmp
dec
hlt
mov
mov
pop
inc
fimull
mov
gs
mov
out
loop
mov
jae
pop
xchg
out
sti
fidivs
in
jb
xchg
sbb
jo
ljmp
sbb
mov
ja
and
push
shlb
cmp
std
popf
pop
das
jg
lds
mov
pushf
daa
lods
xchg
mov
add
in
xchg
gs
inc
xor
fwait
sahf
fiaddl
mov
in
aas
sbb
out
imul
push
lock
mov
cltd
cmp
pop
mov
adc
mov
popf
sbb
xchg
gs
movsb
mov
jmp
mov
pusha
fwait
lods
add
stos
add
sub
dec
push
xor
lahf
sub
stos
pop
jle
xor
or
int
js
jmp
or
pop
mov
push
aad
iret
push
jae
repz
push
adc
mov
subb
ds
pop
xchg
dec
jl
xor
fstpl
iret
lahf
repnz
mov
and
in
leave
dec
icebp
repnz
adc
push
add
xchg
sbb
or
fwait
fcmovu
push
gs
push
cmp
cwtl
pop
pop
inc
add
and
pop
mov
push
aam
pop
in
pop
lea
cs
xor
clc
das
jno
fstpl
mov
fidivrl
pinsrw
repnz
sti
push
das
sahf
dec
fcomps
and
sti
test
jg
test
scas
lds
add
in
icebp
out
sti
and
adc
xor
lcall
scas
clc
xor
push
rcll
fimull
push
or
lcall
dec
int
mov
jns
sub
mov
push
lret
negl
rolb
mov
pop
dec
adcl
dec
push
and
faddl
mov
cld
xchg
push
mov
and
xchg
push
jne
sbb
cmp
cmp
rclb
iret
push
loop
rorb
std
inc
ljmp
aam
ret
test
mov
or
xchg
lods
jg
sub
or
fmulp
add
pop
mov
pop
sahf
movsl
pop
cmp
popa
xorb
loope
lds
jns
out
push
aad
mov
test
and
push
aam
loopne
inc
jle
ljmp
enter
aas
push
xor
out
push
inc
cmp
cld
int3
xor
jbe
movsb
dec
stc
test
push
inc
cmc
inc
int3
cmp
mov
in
dec
mov
pushf
push
call
lahf
push
outsl
push
lds
push
push
mov
jo
cmp
xchg
jmp
test
test
push
stc
inc
inc
sub
cli
pop
and
mov
dec
mov
fists
jbe
test
add
push
add
xchg
cmp
xchg
leave
mov
shrl
mov
sub
xorl
sahf
sub
xor
es
popa
xchg
xchg
mov
fistpl
stos
test
add
add
leave
pusha
sahf
bound
lahf
jo
inc
enter
jle
ret
sbb
out
xor
inc
mov
js
cmp
adc
cwtl
pop
mov
jmp
inc
pop
and
fsubs
push
xchg
shrl
add
sub
xchg
in
dec
add
notb
add
inc
sub
push
fwait
mov
or
sbb
dec
xchg
ficomps
mov
push
pop
pop
add
rol
push
enter
pop
jnp
pop
aad
and
mov
outsl
push
lods
aaa
mov
mov
movsl
aam
movsb
outsb
popa
cmp
xor
pop
inc
cmp
sbbb
dec
inc
vpaddsb
and
xor
push
sub
imull
int
adc
push
xchg
inc
and
lods
jmp
stc
pop
and
lods
jmp
test
les
sbb
and
cmc
js
or
xchg
sbb
dec
inc
stc
cwtl
sub
xchg
daa
in
mov
imul
inc
mov
mov
je
mov
lods
nop
push
popa
dec
sub
fadd
fldl
xchg
pop
dec
xor
lcall
mov
mov
daa
push
ljmp
jo
pop
cmp
mov
fldl
mov
movsl
or
ja
sarb
mov
push
incb
pop
pushl
and
adc
cmpsl
jp
shrl
jmp
gs
shr
sti
sub
fistpl
sub
jno
js
xor
movsl
cmp
repz
fmuls
dec
dec
inc
stos
aad
xchg
stos
cmpsl
jp
mov
in
out
daa
in
push
test
pushl
cwtl
or
pop
adc
imul
or
scas
cmp
rcrl
adc
sbb
push
inc
in
pusha
ss
loop
aam
mov
adc
das
cmpsb
popf
mov
out
mov
pop
jae
xchg
jb
out
cmp
decl
lock
mov
xor
jns
xchg
add
mov
dec
cwtl
out
cltd
cmpsl
sbb
add
pop
cmp
iret
data16
pop
sub
inc
movsb
es
sub
sarb
mov
jg
xor
or
add
xchg
xchg
aaa
out
cltd
dec
rorl
std
dec
mov
insb
mov
lock
mov
ror
sub
sub
arpl
sti
pop
movsb
pop
mov
jns
mov
xor
es
lds
mov
mov
lock
lods
rcll
jg
rcrb
dec
cld
icebp
in
pop
mov
call
es
inc
sahf
or
push
sarb
mov
sub
ds
js
jecxz
lahf
enter
mov
cmp
fadds
inc
int
push
dec
sbb
inc
nop
push
or
das
pop
jge
push
cmp
cmp
rol
pop
shrb
pop
jecxz
and
ss
jge
std
aaa
jmp
cld
add
xor
ret
xlat
push
outsl
mov
xchg
insb
les
faddl
es
mov
test
mov
and
mov
mov
xor
mov
inc
leave
or
stc
jb
daa
data16
ja
sti
test
lret
jns
push
xlat
adc
add
int3
dec
sbb
sbb
mov
or
mov
clc
inc
iret
loope
sub
decb
mov
js
add
in
pop
cli
fildl
cli
cltd
pop
jnp
lret
pushf
cmpsb
xchg
repz
ret
mov
pusha
sub
pop
sbb
daa
sub
leave
and
ret
adcb
movsb
add
mov
jmp
icebp
inc
sarl
or
fistps
and
sbb
add
repz
lea
inc
dec
scas
push
lods
arpl
outsl
adc
mov
xchg
mov
inc
xlat
mov
ret
call
sti
jno
rorl
lret
sarb
js
dec
pop
and
cmp
sub
xchg
mov
loopne
push
add
xor
mov
mov
sbb
ret
aaa
pop
outsb
sub
adc
sub
jnp
and
loope
repnz
add
test
nop
es
and
loopne
icebp
xchg
xor
scas
xchg
jge
inc
inc
add
dec
push
movsb
sub
pusha
push
pop
push
push
or
adc
fsubrl
push
aam
jbe
loopne
or
rorl
xor
mov
rcrb
adc
xchg
pop
xor
xchg
push
hlt
fsts
outsl
ror
inc
jb
pop
outsb
or
jmp
cmp
test
addl
iret
sahf
je
push
mov
xchg
and
xchg
jno
inc
ficoml
xchg
out
fstps
jno
inc
inc
lods
pop
aaa
in
mov
hlt
cmp
add
cmp
rcll
mov
stos
rcrl
sbb
inc
outsl
ja
push
add
sub
jae
in
ds
pop
repz
sub
cmp
loop
fiaddl
dec
orb
popa
fsubrp
clc
rcrb
fsubrl
xor
rolb
xchg
xchg
jo
enter
loop
xor
xlat
add
jo
mov
mul
or
cmp
add
inc
popa
out
cmp
xchg
lcall
enter
lcall
push
or
mov
xor
pop
insb
fsts
and
mov
gs
fstl
cmp
mov
dec
or
scas
scas
and
jbe
ret
pop
push
xchg
lds
mov
mov
xchg
cli
enter
dec
decb
jne
push
mov
inc
ficompl
test
test
int3
xor
sbb
loopne
jo
fwait
jb
inc
sub
mov
stc
movsb
out
push
inc
dec
mov
sti
out
sti
ret
and
stc
push
add
xlat
mov
mov
dec
mov
pop
rcll
fldl
mov
lcall
mov
add
push
jmp
es
mov
mov
rclb
cmp
mov
push
addl
mov
test
xchg
sbb
mov
mov
jb
xchg
movsb
pop
rol
mov
pop
push
loop
lea
roll
jmp
mov
push
inc
popa
or
sub
and
push
int3
mov
mov
mov
arpl
push
mov
loop
test
adc
loopne
inc
in
xchg
das
lock
xlat
fsts
cwtl
push
mov
or
cmp
xchg
jecxz
xchg
scas
jmp
and
mov
add
xchg
sub
pop
das
mov
mov
shl
jne
push
lret
mov
fisubs
fwait
xor
imul
into
call
ficoms
and
movsb
push
jb
mov
xor
stc
xchg
add
leave
int3
and
inc
pusha
stc
cwtl
in
ffreep
mov
cmp
adc
imull
or
mov
dec
push
xor
xchg
into
push
lods
cmpsl
dec
fs
jo
pop
dec
call
in
int
or
dec
or
dec
pop
lret
stos
imul
cmp
mov
shlb
fxch
mov
cmp
fcoms
cmp
fwait
sbb
push
jne
scas
sub
pop
sub
jg
sub
pop
out
pop
dec
repnz
or
push
add
cmpsb
jg
int3
mov
fsubs
aad
aaa
jmp
repz
into
fs
out
fldcw
rcrb
and
outsl
movsb
mov
fdivrl
xlat
jg
ljmp
sysret
adc
pop
xchg
ret
cwtl
pop
in
xchg
ret
stos
pop
imul
jle
addr16
xchg
jnp
mov
hlt
lret
cmp
xor
scas
je
out
dec
xchg
fistpl
mov
pop
mov
or
dec
pop
mov
push
cwtl
stos
inc
pop
ja
adc
cmp
nop
push
push
pop
imul
lds
enter
movsb
or
dec
iret
or
inc
cmpsb
lods
and
mov
adc
mov
jo
push
leave
cld
inc
lret
daa
xchg
add
movsb
xor
add
cmp
js
imull
cmp
daa
outsl
add
lcall
fsubr
orb
leave
pop
int3
inc
fnstcw
xchg
pop
insl
sahf
pusha
ss
cltd
cmp
mov
dec
aam
mov
pop
jp
cmp
ja
lea
sub
mov
fists
inc
push
and
cmp
mov
or
mov
hlt
inc
scas
pop
test
mov
lret
aad
jno
and
push
lods
daa
dec
notb
mov
jle
pop
popf
stos
movsl
mov
movsl
icebp
add
rcl
xlat
mov
xor
sti
cs
jo
lock
imul
mov
or
aaa
push
enter
loope
outsl
mov
push
and
ret
jp
movsb
dec
inc
mov
dec
mov
test
repnz
iret
popaw
sub
test
int3
ss
andb
rcrb
out
push
fidivs
and
shrb
ss
lea
adc
dec
repnz
ja
push
inc
lret
je
and
or
cwtl
xor
xor
pop
xor
push
cmp
dec
pop
scas
dec
mov
lcall
outsl
mov
ljmp
mov
mov
scas
jns
stos
add
xchg
in
negl
pop
rolb
fimull
and
aas
jo
repnz
inc
adc
mov
hlt
ljmp
stc
mov
ret
lods
push
stos
lods
inc
add
int3
popf
jne
xor
pop
movsb
and
mov
data16
sahf
jp
psrad
mov
imul
enter
fucomp
hlt
mov
lret
cld
fisubrl
loopne
mov
mov
lds
mov
cmp
lock
jo
in
mov
jle
jle
lds
lods
xchg
aas
push
pop
inc
imul
pushf
outsb
mov
fldt
cld
push
mov
imul
int
xchg
enter
out
cmp
ds
outsl
dec
sahf
xchg
lret
sub
sub
adc
hlt
push
jl
adc
aaa
jl
test
in
xchg
lret
in
dec
adc
cs
iret
push
cmp
or
cwtl
dec
inc
mov
sar
repnz
or
roll
call
stos
lock
lcall
mov
adc
cmpsl
daa
cmp
xor
lret
scas
or
mov
sbb
push
jl
adc
ljmp
popa
mov
inc
xchg
rcl
out
test
mov
repnz
mov
scas
cmpsl
adc
push
jae
test
or
iret
or
rol
dec
push
scas
popa
sub
leave
sbb
mov
mov
push
add
xchg
and
cmp
add
pop
xor
fstl
sarl
xchg
pop
notb
fucomp
lods
cld
pop
lods
in
inc
adc
fcompp
loopne
lods
adc
xor
andb
jecxz
dec
int3
mov
fldcw
inc
gs
scas
mov
mov
andl
popa
in
addr16
mov
lds
fwait
adc
das
push
or
push
popa
xlat
xchg
pop
sbb
sub
push
imul
jnp
repnz
and
xchg
jmp
sub
js
dec
mov
subb
shl
cltd
xor
not
addr16
cmp
shlb
sarl
pop
mov
rorb
outsl
pop
pop
xor
mov
or
mov
out
xchg
mov
or
fstpt
sub
or
test
mov
xlat
test
stos
jle
inc
cmp
or
jo
and
xchg
sub
inc
lret
and
xchg
push
pop
or
jo
and
rcl
test
ret
sbb
pop
dec
in
pusha
and
stos
jge
and
rorb
mov
xor
sub
fsts
mov
aam
xchg
nop
push
mov
inc
mov
jmp
inc
fidivrl
fldenv
inc
and
scas
stc
and
fs
test
jecxz
pop
hlt
psrlw
fldl
jnp
mov
jne
pop
push
sbb
fs
movsl
inc
dec
cmpb
popa
mov
stos
shll
lret
loop
sbb
add
das
xchg
fisubrl
cmp
lock
in
stc
xchg
fwait
adcb
and
adc
xor
dec
lcall
adc
ss
in
cmpsb
out
lret
int
jb
sbb
xlat
lods
or
mov
push
mov
cmp
notl
and
flds
mov
pop
or
fcomps
dec
roll
and
sub
add
arpl
jg
subb
push
loop
imul
cmpsb
ds
fsub
insl
pop
mov
or
outsb
jo
jo
fwait
jb
icebp
mov
daa
cmp
imul
push
mov
dec
insb
fs
int
push
call
jge
outsl
jnp
xchg
cmp
cltd
push
sub
mov
sbb
cmpsb
fidivrs
pop
shrb
in
dec
xlat
clc
push
dec
mov
sbb
inc
shll
call
sub
std
or
filds
jmp
or
pop
into
jae
addr16
cmpsl
push
mov
add
in
cmp
xor
push
cmpsb
rol
pop
mov
test
push
imul
clc
aad
cld
sbb
push
jg
xchg
push
in
fldenv
clc
test
enter
inc
iretw
movl
or
push
les
dec
pop
xchg
lret
pushf
cli
mov
push
aad
stos
and
add
pop
das
test
fdivrs
mov
in
sbb
imul
ds
out
vmaxps
lea
insl
icebp
pusha
jnp
xor
jmp
mov
push
or
mov
jge
cli
inc
jmp
fstps
decl
dec
sahf
mov
mov
insb
lahf
cltd
jmp
or
mov
out
pop
jmp
and
out
mov
jmp
and
das
sbb
dec
push
dec
test
in
or
push
jp
packuswb
jns
cmp
jl
aam
xor
add
outsl
push
pushf
out
xchg
and
imul
xchg
add
xor
outsl
mov
dec
jge
test
xor
add
call
xlat
adc
add
add
xlat
sbb
ds
lds
decl
jmp
or
into
jle
pop
mov
fcom
push
jno
pop
aaa
jae
inc
xlat
jmp
dec
in
cs
pushw
sub
pop
or
xchg
cmp
sti
sahf
and
adc
mov
iret
mov
xor
jne
test
jg
xchg
jl
sbb
stos
inc
pop
cmc
mov
adc
les
fs
in
and
mov
or
scas
sub
jecxz
cmpb
push
imul
fnstenv
or
jnp
adc
pushl
xor
jg
dec
xlat
sbb
popa
addr16
push
push
outsl
subps
shrb
inc
aad
aaa
jg
jmp
dec
push
pop
out
fwait
cmp
sub
push
mov
cmp
jl
mov
adc
adc
scas
jnp
sub
pop
int
mov
pop
pushf
cmp
dec
outsb
std
in
inc
push
mov
mov
setne
mov
push
cltd
and
push
mov
dec
jmp
add
and
pop
push
sbb
and
or
fdivrs
shrb
bound
mov
repnz
mov
les
int3
jns
xchg
mov
and
fiaddl
out
cmpsl
daa
mov
ret
or
sub
and
and
popfw
mov
sub
jge
jno
fsts
or
mov
add
jnp
gs
std
stc
pop
test
das
jl
push
push
lret
bound
and
lods
push
sbb
out
cmpsl
fcos
push
cmp
test
sbb
dec
xor
loope
enter
enter
cmp
mov
cwtl
test
push
or
insl
and
cs
dec
ljmp
sub
mov
xor
cmp
cwtl
xchg
mov
or
outsb
mov
cmp
xor
repnz
clc
les
jns
pop
lods
shll
clc
cmp
addr16
cltd
xor
and
and
and
fwait
jbe
dec
out
imul
xchg
dec
inc
sub
je
push
mov
xchg
jo
popf
push
in
loopne
pusha
cld
in
test
mov
dec
insl
fidivrl
int3
cltd
aam
jo
xor
aam
mov
arpl
push
out
cwtl
xor
bound
inc
pop
xchg
add
mov
mov
daa
mov
fcom
addr16
daa
in
mov
scas
sub
test
notl
mov
icebp
popf
xor
dec
cmp
out
sbb
and
mov
test
outsb
adc
push
testl
add
pop
sub
sub
repnz
xchg
and
ret
pop
or
fs
popa
cmp
push
cltd
xchg
push
stc
or
in
in
sarb
xchg
xchg
ret
or
inc
inc
push
pop
fisubrl
out
out
lea
std
push
mov
pop
es
sbb
sub
dec
jp
mov
pop
mov
inc
cli
lods
repnz
sub
fwait
sub
aad
imul
repnz
loope
lahf
bndstx
ficoms
jmp
cmp
lock
testl
sti
cmp
in
jg
popf
ret
sub
cli
push
sub
negl
sub
or
mov
sbb
dec
mov
push
in
or
repnz
jb
aad
or
and
out
fistpl
cld
je
sub
lea
sub
and
in
lahf
sbb
popf
bound
test
jne
outsl
push
cmc
push
aad
xchg
inc
out
push
call
fldenv
fwait
jl
addr16
push
flds
pop
ja
bound
mov
push
fldenv
cmpl
xchg
xchg
pop
mov
xchg
arpl
pop
arpl
loopne
daa
xchg
pop
inc
mov
jno
or
pop
jl,pn
stos
mov
test
sbb
dec
lret
enter
js
push
cltd
stos
cmp
cwtl
gs
cmp
mov
fwait
fs
jmp
mov
movsl
mov
pop
rolb
insb
mov
or
je
test
mov
data16
fwait
sbb
cmpb
mov
outsb
test
fisttps
out
xor
pop
add
mov
iret
data16
data16
ret
cld
add
cmp
shr
sub
sbb
out
aam
push
mov
jecxz
and
cwtl
cmpl
xor
jle
roll
xchg
cmc
repnz
bound
inc
in
scas
mov
xor
cmp
jecxz
cmp
push
push
sub
jg
cld
and
push
scas
jb
cmp
add
cmp
cmpsl
sub
repz
test
testl
lret
inc
ja
push
aad
sahf
and
mov
out
inc
push
repnz
mov
mov
lret
repnz
loopne
push
aas
sub
jno
les
jno
lds
xor
pop
arpl
xor
divl
mov
sahf
mov
mov
jo
fimull
leave
imul
lods
mov
data16
push
in
rorb
lcall
inc
repnz
xchg
out
adc
inc
jmp
pop
cmp
mov
out
inc
lock
aas
xor
dec
out
insb
pop
and
hlt
in
fsub
cmp
inc
or
adc
scas
adc
mov
push
sbb
imul
rcr
mov
sub
and
sti
lahf
addb
xor
jo
adc
adc
aas
dec
es
jmp
pop
rolb
iret
shlb
push
pop
lods
push
test
cmp
or
cs
aam
dec
shl
lret
push
adc
sbb
lods
mov
pop
test
sbb
movl
push
jmp
scas
xor
xlat
push
aas
imul
ret
push
adc
stos
sub
ret
out
jge
or
or
push
fisubs
andb
push
mov
dec
in
add
aad
aaa
and
addb
pop
or
xchg
stos
jle
inc
sub
mov
clc
inc
lods
sahf
fadd
dec
bound
out
inc
mov
mov
rorb
loop
aam
mov
jecxz
pop
repz
inc
test
stos
ds
mov
cs
mov
push
call
cmp
sti
into
jne
hlt
mov
cmc
mov
je
clc
stos
pushf
cli
xchg
push
mov
cmp
rclb
ljmp
outsb
cwtl
das
pop
jecxz
push
cmp
pop
cmp
insl
cmc
dec
cmpsl
sub
xor
in
aas
ret
xor
cmp
sahf
test
shlb
cli
sarl
push
mov
mov
mov
jecxz
aam
jl
pusha
cmc
adc
add
pushf
out
lock
roll
add
mov
aad
out
loope
fdecstp
les
bound
js
cli
insl
sarb
adc
dec
push
xor
pushf
shr
scas
out
xorl
in
cmp
in
test
mov
je
push
cmpsb
jbe
dec
xor
sbb
lock
jecxz
or
add
addl
inc
test
xor
push
mov
add
popf
jg
xchg
mov
into
or
push
and
inc
lret
pop
add
mov
mov
adc
fisttpll
adc
and
dec
push
mov
test
adc
cmp
subb
movsl
mov
mov
imul
xchg
xlat
or
sbb
push
ljmp
pushf
mov
sub
popf
cmp
xlat
jmp
imul
adc
add
mov
test
xor
bound
iret
inc
cmp
sti
aad
mov
and
dec
jecxz
call
adc
xor
adc
inc
sbb
inc
inc
in
sahf
clc
push
sub
cli
aad
adc
imulb
imul
or
mov
adc
inc
roll
xchg
pop
mov
in
iret
jecxz
jne
rol
das
xchg
leave
sub
insb
mov
in
xchg
out
in
inc
mov
push
jge
stos
ds
mov
adc
mov
shrl
lahf
dec
add
mov
cld
xchg
sbb
mov
mov
cmp
sbb
pop
and
cmp
out
inc
mov
ret
mov
adc
arpl
adc
out
cmpsb
imul
lret
enter
ja
lea
add
pop
lock
adc
leave
sarl
add
or
add
lahf
jo
pop
mov
into
mov
lahf
js
mov
xchg
call
and
jae
dec
popf
stc
ja
loopne
test
push
sub
cli
mov
das
and
push
xchg
sar
jecxz
sbb
cli
sub
and
outsl
add
or
mov
inc
xchg
mov
mov
add
jo
outsl
into
push
pop
outsb
sti
or
sbb
jo
and
push
jge
test
rorb
jmp
fst
imul
pop
fadds
bnd
je
xchg
sub
add
lods
enter
add
cld
stos
in
fbstp
pop
jae
pcmpeqw
adc
repz
icebp
repz
mov
es
loopne
test
inc
fisubl
push
mov
jns
push
out
sub
stc
xchg
mov
jne
cwtl
xchg
out
xchg
lret
outsl
or
adc
cmc
mov
push
mov
outsl
cmpsl
daa
imul
nop
lods
sbb
mov
fs
movsb
jae
add
dec
mov
shll
mov
add
je
mov
lret
clc
add
and
int3
jmp
bound
mov
cli
vdivpd
adc
je
int
push
ljmp
mov
iret
imul
pop
fs
mov
lods
bound
xchg
into
mov
arpl
or
test
mov
jnp
cmp
imul
cwtl
and
cmpsb
cmpsl
ss
mov
ss
xor
jne
stc
test
addr16
cwtl
mov
add
pop
setge
adc
push
out
sub
shr
pop
or
mov
adc
and
sub
sbb
cmp
lret
rorl
test
and
lods
mov
inc
mov
push
pop
test
xchg
lods
int
jle
dec
push
fdivl
push
out
hlt
cmpsl
sbb
add
jns
lods
leave
fcmovnu
aas
out
sbb
sbb
cmp
inc
mov
mov
or
xchg
and
jmp
lods
cmp
jp
add
daa
pop
xchg
shlb
rcr
jne
mov
fists
inc
pop
into
add
xchg
inc
xchg
dec
aad
movsl
sbb
jecxz
dec
aad
push
inc
jnp
dec
test
xchg
inc
sbb
outsb
popf
test
daa
mov
mov
mov
fdivs
mov
stos
enter
sbb
sbbl
insl
sbb
adc
xchg
sbb
sub
pusha
push
js
mov
out
dec
push
sti
sub
add
and
push
mov
orl
xor
jl
or
cmp
pop
stos
inc
hlt
inc
adc
inc
sti
sbb
sbb
pop
sub
out
leave
fsubrs
fstpt
xchg
test
jmp
lock
mov
inc
dec
mov
mov
mov
sbb
div
aaa
push
cs
sbb
rorb
das
dec
pop
cmc
mov
inc
fstps
xor
push
sub
xor
cld
popa
mov
pop
mov
shl
and
in
jne
and
scas
rolb
scas
xor
daa
and
push
push
xor
insl
aas
sahf
lcall
sarl
adcb
int3
ret
pop
xlat
inc
sahf
popa
cld
clc
in
in
jae
dec
mov
dec
xor
push
push
push
push
lods
les
fmuls
sbb
int3
into
inc
shlb
out
cmpsl
and
vcmppd
adc
mull
jg
insb
jbe
push
pop
push
adc
ficompl
cwtl
mov
adc
imul
dec
push
add
rolb
dec
push
dec
mov
pop
push
sub
xchg
push
jge
jmp
call
sub
ja
dec
int
cmp
push
push
sbb
rolb
stos
das
scas
inc
popf
stos
push
or
sbbl
mov
and
mov
std
cmovns
loope
fsubs
xchg
and
std
push
outsb
dec
ret
nop
add
loope
stos
insb
fidivs
dec
or
jae
out
ds
lahf
pop
mov
sarl
fsubrs
test
xchg
ljmp
andl
int
or
xorl
push
push
adc
aam
sub
jns
jecxz
pop
add
xor
push
ss
popa
xor
cld
fstps
or
xor
jge
mov
and
mov
fsubl
fwait
cld
imul
jno
push
rcr
lds
mov
test
fmul
push
inc
or
dec
xor
shlb
xchg
jg
push
out
cmp
cmp
fstl
nop
sbbb
mov
cmp
xor
cmp
push
in
mov
fimuls
jge
mov
sub
inc
in
dec
fstpl
adc
mov
jb
push
xor
data16
cli
out
frstor
je
mov
xchg
lock
lods
push
movsl
cli
jecxz
fiaddl
setns
movsl
frstor
jne
cmc
stos
pop
imul
xor
and
repz
sub
fimuls
aaa
fldz
dec
push
or
mov
jne
rcrb
sahf
adc
repnz
xchg
int
sbb
aad
sbb
in
lahf
adc
leave
push
jp
sub
inc
mov
lods
test
mov
fwait
and
imul
pop
cmp
cmp
test
inc
mov
and
addl
les
adc
in
inc
ret
and
mov
xchg
pop
cwtl
xchg
add
jnp
sbb
insb
and
pop
imul
mov
push
jp
sbb
cltd
arpl
imul
enter
push
stc
or
push
lret
in
das
jnp
fdiv
mov
jmp
aas
cltd
jo
lret
push
pop
lret
clc
mov
jo
hlt
test
jbe
fnsave
push
addr16
les
lret
pop
dec
insl
xlat
jg
pop
call
and
lahf
push
test
sti
pop
das
inc
xor
inc
pop
lods
lea
lods
popf
jg
int
bound
and
and
testl
xor
mov
pop
add
mov
sub
jb
test
dec
fildll
data16
push
mov
imul
test
xchg
nop
add
scas
lea
imul
mov
pop
and
int
sub
ret
sub
xchg
mov
adc
in
pop
pop
lcall
adc
cmpsl
cwtl
cs
in
sub
pop
jns,pt
in
or
lahf
xor
aaa
aaa
rcr
xchg
roll
mov
cltd
sub
and
cmp
push
inc
incl
xchg
and
scas
test
jns
stos
inc
cmpsb
pushf
or
mov
xor
fcomps
repz
out
les
lret
roll
jbe
rcrl
inc
pop
pushf
rcrl
cmp
xor
push
pop
shlb
mov
sub
add
aas
jne
inc
push
push
dec
or
inc
inc
mov
mov
push
inc
stos
pop
loope
inc
jbe
push
mov
mov
les
in
mov
bound
push
fdivl
clc
mov
xchg
cli
or
outsb
add
in
cltd
and
jae
inc
insl
bound
sbb
pop
jb
adc
inc
daa
ret
cs
fcoml
test
addr16
jp
push
cmp
sbb
xchg
out
sub
bound
out
test
roll
jp
or
pop
adc
mov
pop
repnz
fs
cld
mov
cld
add
mov
shr
in
roll
scas
in
xchg
push
out
sti
ret
adc
es
into
push
cltd
movsb
or
mov
lret
andps
pop
push
xor
fisubl
test
call
cmp
cmpsl
ret
cltd
xlat
mov
mov
pop
ret
pop
dec
dec
ds
cmc
lcall
fisubl
inc
xchg
mov
and
imul
pusha
sar
xor
sbb
loop
xor
cmp
lds
xor
sbb
inc
icebp
adc
add
jb
mov
pop
pop
or
jne
mov
and
lcall
popa
push
popf
lcall
jo
rorb
ret
mov
leave
loope
lret
sub
and
and
cld
stos
in
xor
push
and
loopne
cld
roll
mov
imul
dec
and
jmp
fidivl
in
add
push
cmp
sbb
jo
mov
addl
aam
in
das
or
xorb
or
sbb
adc
mov
lea
mov
dec
xor
je
mov
into
and
mov
pop
cs
sub
push
and
sti
pop
loop
cmp
mov
out
push
sbb
add
inc
popa
push
cwtl
loop,pt
or
shlb
push
jmp
mov
push
sbb
jns
testb
enter
lods
ljmp
lcall
inc
lods
imulb
pop
rcll
jge
jp
adc
aam
in
jne
fstl
testb
iret
es
push
pop
push
inc
xor
std
fnsave
pop
subl
mov
nop
cltd
or
pushf
xchg
test
xchg
mov
or
inc
imull
sti
push
adc
test
push
fnstenv
into
push
loop
lock
fucom
sub
fistps
in
ret
mov
adc
ljmp
call
leave
jle
pop
cmc
std
out
cli
dec
xor
jl
in
cmp
xchg
cmpsl
lods
inc
adc
sbb
rorb
cmp
mov
aas
jge
pop
adc
inc
lock
pop
inc
jmp
cmp
dec
xchg
sub
mov
adc
mov
jne
imul
hlt
fs
xor
sub
arpl
into
push
sub
test
sti
push
out
into
int3
ja
xchg
mov
imul
movsl
ss
aad
fcmove
aam
ds
sbb
mov
pop
xchg
adc
add
ljmp
jnp
out
lea
adc
cbtw
or
or
mov
stc
subb
lcall
insb
rcl
out
repnz
das
mov
popf
int
xchg
push
push
popf
add
push
cmp
icebp
mov
jmp
mov
jle
stos
or
sbb
or
pop
dec
add
in
sub
xchg
jne
push
lret
pandn
ror
dec
xchg
push
mov
aas
push
outsl
push
mov
lods
inc
movsl
js
jbe
cwtl
xchg
mov
sub
cmc
adc
add
mov
jo
in
mov
leave
jae
add
jae
cwtl
mov
fistpll
adc
shlb
lods
stos
inc
fbld
ret
mov
mov
jbe
cmpsl
mov
int3
scas
les
mov
les
push
dec
mov
adc
push
psubusb
push
bound
fucom
popa
sbb
add
sub
out
sub
xchg
jle,pn
dec
divl
aam
add
bound
test
pop
inc
inc
mov
nop
pop
dec
and
jmp
popa
dec
cmpsl
jp,pt
in
dec
jp
lds
cwtl
jge
dec
sub
mov
push
inc
out
fistps
inc
dec
out
cltd
push
cmp
push
jmp
stos
and
shll
stc
sarb
jmp
or
lock
dec
xchg
int3
ficomps
aas
mull
jg
sti
lock
adc
out
jmp
mov
daa
and
outsb
test
ret
insl
add
dec
dec
in
jb
cld
jecxz
cmp
mov
and
inc
pushf
ja
mov
dec
and
dec
aaa
xchg
gs
push
push
mov
push
add
pushf
pop
repz
jbe
cmp
cmc
pushf
mov
pop
mov
sub
pop
int3
dec
xor
leave
mov
adc
aas
sub
xchg
rorl
adc
popl
mov
icebp
dec
xchg
testb
inc
ret
sti
stos
aas
out
mov
and
jne
rcrb
dec
mov
lods
mov
jmp
adc
xchg
jecxz
fidivrs
jnp
add
pop
adc
adc
cmp
addr16
jmp
xchg
inc
fwait
lea
pusha
stc
sub
inc
fidivs
repz
xchg
adcb
fistl
sti
dec
les
cmp
lahf
lahf
sarb
aad
jmp
jo
mov
xchg
cmp
cmpsb
lods
ds
xor
cmc
ja
cmp
test
in
sbb
xchg
in
adc
jle
xchg
ljmp
jp
gs
test
testb
jno
andl
and
xchg
test
jns
jl
shll
mov
lods
pop
dec
rcrl
fsubp
stos
mov
ja
fwait
test
sub
int
jmp
mov
adcb
fdivr
mov
push
stos
mov
push
stos
jne
jmp
xor
lock
adc
push
popf
ja
popa
sbbl
shrl
out
data16
dec
pop
jae
in
xchg
or
shl
dec
cmp
lahf
in
or
adc
insb
js
lahf
jg
mov
mov
fdivrl
mov
incl
cmc
and
jl
pop
xchg
arpl
divl
test
sarl
leave
add
flds
sub
pop
stc
inc
lea
aas
cwtl
sbb
push
idivl
shrb
mov
jge
inc
loopne
jns
aas
fmull
lods
mov
adc
push
lea
sbbb
cltd
ds
sub
aas
dec
jae
dec
mov
scas
sub
add
test
sub
pop
mov
dec
mov
insb
mov
mov
mov
push
inc
aaa
cmp
dec
test
mov
enter
repz
rorb
loope
inc
bound
mov
ret
into
cs
jb
out
dec
ret
and
mov
imul
imul
lock
adc
jl
sub
dec
jp
lcall
mov
inc
and
jb
cmpsl
ret
xor
jmp
dec
lcall
jmp
ficomps
or
std
xchg
pop
call
or
xor
push
inc
pop
xchg
lahf
add
sub
sub
add
push
add
lods
bound
shlb
pop
jbe
push
mov
and
mov
jnp
sub
adc
cmp
int
cmc
pop
cmpsl
out
and
sti
xor
add
hlt
loop
mov
cmp
outsl
push
mov
call
repz
xor
pop
adc
mov
adcb
push
out
pusha
fstl
sbb
imul
pop
test
cld
mov
imul
cmp
cld
push
imull
clc
pop
popf
dec
pop
stos
aaa
clc
xchg
push
gs
mov
mov
fiaddl
orl
xchg
popa
lret
mov
jecxz
sbb
cmp
xchg
sbb
into
idiv
adc
mov
subl
test
decb
pop
mov
repz
daa
inc
in
insl
andb
dec
jb
outsl
fsub
jns
sub
leave
add
and
mov
hlt
sub
dec
loop
stc
int
pop
lds
cmp
call
les
movsb
add
cmp
jo
mov
mov
jae
jne
pop
sub
xchg
fbld
dec
ret
popa
dec
fisubrl
scas
inc
xchg
js
sub
xor
add
bound
mov
sbb
cmpsb
lds
loope
xchg
sbb
mov
out
pop
shr
cmp
dec
dec
push
data16
dec
loopne
cmpsb
adc
dec
daa
iret
add
push
xchg
push
ret
jo
and
lret
mov
dec
leave
sbb
dec
inc
iret
push
mov
rcrb
leave
cmp
fidivs
dec
xchg
dec
pop
sti
xor
mov
pop
and
push
jns
xchg
ljmp
pushf
push
enter
mov
push
fdivrs
fstps
add
fcmovnbe
and
and
push
inc
insl
dec
das
add
hlt
add
push
shrl
mov
lea
imul
xchg
add
movsl
out
ret
insb
pusha
cmc
repz
push
jb
loopne
mov
inc
pop
inc
adc
in
roll
pop
cli
sarb
jbe
cld
std
orb
test
fisttpl
or
xchg
repz
sarb
ljmp
xlat
inc
jno
pop
xchg
sub
xchg
jne
sbb
push
sub
push
fwait
sub
out
sti
loop
and
std
inc
shll
fiadds
sti
mov
iret
aad
fisubrs
xor
aad
inc
dec
mov
es
pop
jo
xor
xor
and
adc
mov
jo
outsl
lcall
out
inc
lea
leave
xchg
xchg
pop
ljmp
in
aas
pusha
push
mov
pop
dec
inc
adc
shr
push
out
and
inc
xchg
notb
dec
aaa
push
out
popf
inc
fwait
dec
dec
xchg
fcmove
sbb
mov
scas
insb
pushf
push
ror
jl
ljmp
test
and
adc
inc
lods
mov
xchg
cwtl
into
popa
aad
ljmp
add
aaa
xchg
cld
stos
mov
mov
add
or
dec
sbb
cmc
mov
sbb
push
ds
jnp
cltd
pop
insb
inc
cli
pusha
sub
int3
xor
and
roll
jne
popf
mov
push
sbb
dec
incl
out
ja
dec
cltd
add
jge
mov
insb
mov
repz
imul
clc
jmp
add
sbb
cmovns
fidivs
pop
aas
push
bound
mov
add
ret
push
jno
rolb
popa
pop
sahf
adc
pop
mov
push
push
jg
dec
xor
fidivs
in
mov
outsl
lds
cmc
mov
push
and
jno
imul
orb
inc
sti
sbb
xlat
mov
add
rcrl
sbb
sub
push
cld
cmp
pop
out
inc
sub
jno
arpl
sbbl
lahf
fmulp
jp
int3
jmp
push
inc
in
out
test
jmp
addr16
enter
sbbl
movsb
scas
push
sub
lds
aaa
adc
inc
pop
mov
cmp
adcb
pop
lock
enter
sub
rcl
mov
cltd
movsl
sbb
mov
mov
push
repnz
mov
arpl
push
ljmp
adc
cmp
lahf
lods
inc
sarl
fwait
pop
addl
in
cmc
sti
loop
xor
ljmp
in
sbb
fisubrl
add
push
sub
sub
adc
pop
out
rorb
fisubs
jne
std
pop
jmp
int
inc
or
push
cmpl
pop
gs
loopne
pushf
jnp
mov
out
xor
xchg
cvttps2pi
or
call
fwait
mov
int3
data16
in
pusha
jmp
mov
push
stc
dec
in
adc
pop
jb
and
mov
pushf
arpl
fcoml
xor
mov
or
ret
jge
fsubs
stos
jne
shl
mov
leave
xor
mov
or
mov
mov
push
push
cmp
das
aad
movsl
push
popa
clc
adc
dec
or
es
push
cli
push
adc
in
arpl
clc
gs
jae
jns
sbb
dec
cli
jg
or
pop
shrb
adc
mov
dec
mov
jge
outsl
shll
dec
pop
inc
ret
or
inc
or
das
cmp
mov
test
pop
cmp
xor
pop
lea
lea
out
pop
jmp
cmp
jnp
inc
dec
ficoml
movsb
push
sarl
mov
jb
fnstenv
push
lods
ljmp
xchg
cwtl
das
sbb
inc
lods
dec
mov
jno
inc
xchg
xor
push
lock
add
push
push
add
addr16
icebp
jnp
push
gs
inc
xchg
mov
and
sub
lahf
jns
push
mov
out
std
insb
adc
ds
jmp
into
and
add
mov
popf
inc
fidivrs
mov
mov
fucom
daa
add
lret
cmpsl
mov
sti
andb
jge
mov
mov
iret
mov
iret
and
push
cltd
int
and
pop
es
mov
push
jmp
xor
loop
lods
shlb
call
cmp
repnz
or
jle
xchg
mov
lcall
out
sub
je
mov
push
movsl
dec
rcll
mov
inc
mov
fcmovb
pop
out
push
inc
int3
in
movsb
push
mov
dec
pop
cmp
cmp
lss
xor
cmp
fisubrl
cmp
stos
mov
mov
rcr
xchg
imul
int3
sub
aas
into
and
rorl
in
out
mov
xchg
cmp
imul
jle
and
and
lock
lret
cld
inc
jl
cmc
adc
cmp
dec
push
iret
jl
jbe
pop
mov
fists
mov
std
loop
dec
popf
in
iret
xchg
cmp
mov
mov
stos
cs
jge
int
push
mov
mov
into
jge
ja
mov
stc
stos
push
stos
je
push
sub
pop
js
adc
test
imul
push
lods
stos
sbb
ret
pop
xlat
adc
mov
xor
add
jb
insb
or
outsl
mov
inc
aam
inc
mov
stc
pop
inc
inc
dec
push
xchg
and
push
dec
mov
mov
outsb
add
fistl
mov
push
jle
adc
mov
mov
or
add
cwtl
adc
and
sbb
mov
xor
adc
adc
add
cmp
sub
lea
pop
fsubs
mov
mov
fwait
xchg
push
inc
adc
add
mov
mov
insl
je
adc
xor
outsl
ss
pusha
jno
or
insb
enter
inc
adc
and
in
pop
in
adc
scas
ret
ret
fs
insl
xchg
ret
lcall
pop
jo
xchg
cmp
clc
aam
imul
push
add
xchg
and
pop
and
ret
out
push
cmpsb
xor
mov
xor
inc
fcoms
loopne
stos
sahf
call
adc
cmp
sub
insl
adc
mov
je
dec
push
ret
adc
ja
cmpsb
mov
cwtl
test
lret
xchg
mov
pop
ret
hlt
cmp
jo
shrb
aas
aaa
js
inc
jnp
in
pop
or
jne
cmp
cmpsl
pop
std
cld
pop
daa
fwait
jb
dec
lock
xor
bound
ret
ja
push
jmp
cltd
cltd
inc
xlat
or
ftst
sub
cmp
dec
mov
push
mov
xchg
adc
mov
mov
test
mov
mov
imul
push
sub
clc
xor
jg
cmp
mov
or
xlat
in
in
adc
dec
mov
adc
bt
insl
lcall
daa
push
fwait
sub
dec
cmp
mov
jo
mov
lcall
and
push
adc
stos
repz
push
sub
iret
inc
sti
pop
inc
push
add
addps
in
movsl
cmpsl
dec
jmp
cmp
push
popf
xor
pop
jmp
sbb
sti
mov
jg
push
push
pop
inc
pop
mov
fsubl
in
adc
cmpl
push
repnz
call
jb
arpl
inc
addr16
xchg
push
xchg
push
nop
cmp
or
mov
outsl
sub
jl
test
pop
pop
movsb
mov
aaa
fisubl
sub
add
and
cmc
push
mov
mov
rcl
les
test
shll
jle
add
test
lret
shlb
stos
inc
daa
or
sub
xor
mov
scas
les
pop
dec
les
xchg
repz
imul
aas
pop
lds
cmc
fs
sub
add
dec
mov
add
sahf
fwait
mov
lea
stos
pop
or
loope
clc
mov
sub
xor
mov
imul
loop
subb
test
dec
jmp
call
jmp
dec
data16
pop
sbb
mov
inc
push
mov
sarb
add
adc
filds
push
out
mov
popf
movsb
pop
not
shl
push
dec
sub
lahf
push
jnp
or
ja,pn
add
push
mov
inc
cli
sub
add
add
push
subl
xlat
outsb
sub
stc
adc
push
jne
xor
jno
xor
mov
push
pop
cmc
adcl
scas
pop
lds
insb
lds
jmp
into
mov
xlat
push
lock
sbb
lods
cmc
and
into
cli
push
push
sub
fcoms
inc
xor
movsl
loop
repz
mov
rcrb
mov
out
inc
add
push
scas
sahf
mov
adc
or
push
mov
gs
dec
pop
popa
cmpsl
mov
cwtl
mov
in
inc
ss
mov
dec
pop
push
testb
mov
leave
stos
out
fstpl
jle
mov
cltd
cmp
or
fcoms
adc
mov
sbb
sti
cmpsb
cmp
fcomps
push
jge
fidivl
jp
in
jnp
pop
lds
popa
mov
ljmp
das
push
int3
pusha
mov
idivl
test
cmp
insb
fistpll
popa
and
js
and
std
ljmp
sub
ret
insb
mov
jno
insb
jmp
pop
mov
mov
into
fldpi
jno
ljmp
jno
sbb
mov
xchg
in
aam
out
mov
push
or
test
js
arpl
mov
lds
push
jae
movsl
or
movsl
outsb
ss
and
sahf
fldpi
iretw
xor
adc
rcl
fsubl
out
pop
imul
lret
sbb
jbe
adc
in
hlt
xor
sub
dec
dec
push
stos
mov
pusha
int3
cmp
jmp
nop
stos
mov
push
push
sub
lea
mov
or
sub
psubd
mov
jno
dec
gs
stc
mov
inc
inc
mov
push
xchg
push
lock
add
es
rcll
xlat
dec
sub
ss
cmp
cmp
push
adc
xchg
std
xchg
jne
lcall
mov
dec
add
xchg
mov
addr16
cwtl
lahf
or
loop
rcrb
fwait
je
inc
lret
int3
mov
ret
out
pop
popl
jmp
xchg
xor
push
cmp
sub
dec
sbb
mov
mov
popf
out
nopl
mov
cmp
push
loop
lock
jl
cwtl
std
dec
inc
ljmp
cs
mov
insl
mov
bound
mov
fnstcw
or
sub
out
int
xor
stos
cmp
shrd
push
jnp
shrl
mov
das
and
mov
mov
outsb
sub
call
sbb
adc
xor
mov
fs
pop
das
xor
jmp
push
mov
or
lods
adc
fwait
xor
into
sub
rcr
mov
inc
xchg
mov
adc
mov
xchg
loop
sbb
das
hlt
cmp
push
dec
out
xchg
popf
ds
mov
add
fidivrl
dec
mov
inc
popf
mov
cmp
cmp
pop
xor
xchg
jge
inc
test
xchg
cld
je
cwtl
rorl
mov
jo
add
out
push
dec
negb
sahf
mov
mov
and
add
mov
xor
lcall
fs
pop
aas
or
jl
add
fldl
pop
jge
cmp
rorb
popf
loop
jae
adc
jl
out
xchg
out
mov
add
js
add
pop
pop
call
jge
aaa
jg
rcr
into
psrad
enter
inc
cmpsb
cld
andb
imul
jnp
or
push
and
sub
jbe
xlat
ret
and
fcom
les
vmaxss
fcomip
mov
cmpsb
add
mov
push
outsl
sub
fnstsw
ficoml
sbb
cmpsl
pop
aam
ds
jbe
xlat
adc
cwtl
cld
pop
xchg
xor
sarb
jecxz
dec
dec
jmp
jb
sub
cmp
into
xor
test
nop
jae
call
pop
outsb
sbb
mov
and
push
inc
xor
inc
and
cmp
mov
ja
jmp
andl
fwait
arpl
ljmp
jmp
lea
mov
cmp
shrb
jns
ret
outsb
cmp
sbb
out
test
sub
pop
jo
inc
scas
xor
loope
mov
fdivs
mov
gs
aas
call
mov
push
mov
andb
aad
sbb
pop
mov
add
enter
and
xchg
adcb
test
rclb
scas
vpsrlq
fidivs
out
mov
mov
jbe
test
cmpsb
xchg
inc
add
in
xchg
and
dec
fstpt
inc
sbb
jmp
cmp
dec
sbb
js
leave
stos
add
sbb
cld
mov
or
ljmp
lds
push
cmp
inc
lcall
lret
mov
cltd
jl
fsubp
xchg
pop
mov
mov
add
loop
or
mov
cmpsl
es
jne
xor
cmpsb
cmp
fs
test
leave
div
pop
push
push
jg
cmp
in
xor
outsl
scas
sahf
fisubl
pop
cmp
nop
mov
fsubrp
mov
xor
mov
arpl
roll
jmp
pop
cwtl
mov
fwait
xor
or
cmpsl
int3
pop
add
jno
cmp
popa
or
arpl
pop
fisubs
mov
cli
and
andl
jl
push
call
loope
in
dec
mov
outsb
inc
loopne
aad
pop
cli
mov
cs
icebp
cmp
rclb
hlt
push
sbb
ficoms
xor
cs
push
jl
pop
hlt
mov
repz
lea
dec
faddl
stos
gs
jb
mov
xor
or
into
push
test
dec
in
cmp
movsl
push
cwtl
xor
mov
push
pushf
mov
sub
inc
idiv
scas
cmpb
jp
mov
pop
lahf
loopne
push
imul
mov
jmp
mov
xchg
jmp
or
pop
std
add
out
pop
lods
in
in
daa
xchg
sub
movsb
xchg
mov
lret
imul
adc
xchg
or
int3
jle
mov
pop
mov
mov
add
sbb
sbb
lahf
and
inc
inc
push
dec
sbb
bound
out
push
xor
ficomps
mov
adc
jns
mov
clc
adc
xchg
sub
push
jmp
or
mov
outsb
xchg
fsubrp
and
lds
cmp
and
pop
cmp
cwtl
repnz
add
lret
cmp
fidivl
lds
dec
divl
lea
or
sub
lods
dec
fdivl
gs
sbb
cli
xchg
pcmpgtb
test
sbb
jbe
sbb
mov
xchg
mov
lock
ds
daa
lods
repnz
rorl
les
daa
pop
push
cmp
stos
sbb
add
inc
xchg
nop
int3
jne
xor
mov
das
mov
loope
xchg
movl
aaa
sti
cmp
inc
imul
xchg
out
add
andl
movsl
repz
pop
pop
inc
cmp
int
inc
mov
xchg
jns
insl
stos
mull
xor
jbe
sbb
push
ja
add
hlt
jno
cmpps
outsb
gs
orl
lcall
mov
jg
lahf
adc
stos
sbb
lods
dec
int3
push
inc
sahf
ljmp
cwtl
xlat
mov
xchg
pop
pop
movsb
or
sub
pop
mov
sbb
arpl
pop
xchg
stos
mov
cmp
mov
ljmp
fldcw
dec
cmpsb
std
push
fdivs
xlat
pop
mov
xchg
jl
mov
fsub
fcoms
sub
pop
scas
push
jbe
testb
mov
mov
dec
xor
loop
inc
xchg
sub
addr16
dec
add
jecxz
jg
repz
jbe
dec
xchg
jg
fwait
loope
mov
sbb
jae
clc
test
sub
jge
jp
push
sub
mov
call
nop
xchg
mov
ss
xchg
cwtl
sar
stos
inc
in
adc
aaa
leave
dec
push
cli
fdivrs
mov
or
mov
dec
and
mulb
mov
and
inc
mov
xchg
ljmp
mov
cmp
movsb
push
and
fldcw
jg
mov
mov
shll
xlat
and
pop
addr16
popa
sahf
fxch
sahf
ljmp
mov
pop
es
scas
sbb
stos
mull
into
dec
push
mov
sbb
ljmp
jb
inc
test
xor
mov
mov
adc
pusha
xorb
xchg
push
xor
shll
push
xor
xor
and
pop
mov
xor
xchg
sarl
dec
sbb
mov
jno
dec
fwait
pop
or
mov
cmp
cli
scas
mov
orl
imul
xor
loope
pop
notb
cmpsl
nop
pop
xchg
cmp
je
lahf
xchg
add
adc
lods
aaa
lahf
and
fldcw
testl
cmpb
xor
shll
call
sbbb
push
orl
sbb
dec
dec
test
xor
vandnps
dec
jmp
lret
int
scas
xchg
aas
push
pop
fcoml
mov
shrb
rolb
fcomps
cs
sub
stos
fidivrs
xchg
jne
cwtl
mov
and
and
aas
or
pop
cmp
sbb
shlb
cmp
lcall
ja
jnp
jmp
ret
xchg
sbb
andb
pop
sub
push
mov
das
cmp
sbb
mov
pop
inc
in
in
push
mov
xor
int
inc
push
cmp
sub
adc
inc
call
popa
mov
int
aas
push
je
in
ret
popf
pop
or
pop
aam
test
add
mov
dec
int3
mov
mov
addr16
gs
loop
inc
clc
rcrb
sub
test
pop
cmp
or
sti
mov
cmpsb
les
add
fucom
or
int3
ficoms
mov
aad
and
es
jg
popf
add
lret
lcall
or
call
mov
int
in
xchg
jp
test
jmp
sub
jb
or
out
xchg
xorl
mov
pop
cmc
pop
xchg
sbb
pop
dec
pushf
xor
icebp
js
daa
aas
mov
jno
lock
std
xor
in
xor
sbb
mov
int3
sti
mov
clc
sbbl
cli
dec
add
sub
in
lret
xchg
mov
mov
jl
add
mov
dec
push
push
mov
sub
xor
movsl
data16
inc
push
xor
xchg
in
lea
jne
sbb
ret
add
in
jns
popf
mov
inc
shr
xor
mov
cmpb
push
gs
jbe
fwait
cmpsl
clc
push
fisubrl
jmp
into
pop
repz
jo
scas
push
sbb
or
mov
and
push
shrl
andb
xor
push
nop
popa
shlb
leave
or
push
in
push
in
testb
in
imul
les
jge
sahf
fdivrl
xchg
jns
test
mov
shlb
mov
and
and
xor
sub
test
lret
sbb
aas
adc
ja
rclb
add
in
xor
sub
repnz
and
cmp
cmpsb
addr16
mov
mov
ljmp
mov
out
xor
push
sahf
clc
xchg
push
rcrl
push
je
cmpsl
adc
fsubl
add
inc
push
sub
sub
pop
mov
mov
xor
dec
cmpsb
mov
ljmp
mov
sub
mov
xacquire
sub
cmp
adc
lods
sub
cld
pop
xchg
jge
repz
or
xchg
add
leave
out
add
stc
cmp
and
pop
scas
divb
dec
dec
pop
dec
rcrl
jo
mov
cmp
cmp
ss
and
pushl
outsl
add
ret
mov
in
add
sbb
xchg
dec
ds
mov
getsec
jle
imul
lret
in
negb
cmp
out
mov
cmc
aam
fidivs
and
sti
inc
jne
popa
aas
cmc
sub
fcom
cmp
pop
dec
lcall
call
ja
pop
lock
cmc
and
add
lea
push
popf
test
int3
cs
push
push
fsubl
dec
mov
cmp
mov
mov
into
pop
sub
addr16
jnp
mov
mov
xor
mov
mov
pop
imull
shrl
xor
aad
pop
icebp
adc
pop
ljmp
in
and
fsubr
cli
test
jge
lcall
repz
or
jno
add
mov
push
cmp
xchg
jge
mov
rol
scas
push
repz
addps
test
sub
std
xor
jo
shl
mov
mov
arpl
inc
xor
fs
mov
je
stos
paddq
and
das
jo
push
pusha
mov
sahf
mov
sbb
insb
pop
cwtl
mov
mov
notb
sbb
xor
jbe
lahf
push
cmp
mov
ja
je
shlb
pop
mov
jecxz
pushf
aam
push
insl
inc
cmp
or
xchg
add
daa
sub
add
lods
repz
imul
mov
push
push
mov
call
test
data16
and
xchg
je
std
mov
lahf
mov
mov
inc
in
add
es
or
and
daa
xor
add
sbb
push
inc
dec
inc
pop
jl
mov
into
push
sub
sbbl
lea
jb
sar
add
or
cmc
rcr
mov
mov
daa
mov
mov
or
and
divb
push
pop
in
testl
cltd
cmc
and
push
movsl
cmp
or
add
jbe
ja
je
pop
fldl2t
inc
add
repz
adc
popf
pop
out
ljmp
inc
out
jecxz
rcl
hlt
add
inc
negb
or
mov
sub
dec
scas
xchg
mov
int
lret
daa
fldenv
loope
sub
inc
scas
push
xchg
pop
jl
xchg
mov
ficomps
fcomps
test
mov
data16
xlat
add
mov
mov
rcl
pop
lcall
cmp
ficompl
ds
ret
int3
pop
movsl
lock
data16
lret
add
jmp
lcall
push
mov
mov
xchg
das
lret
cmp
mov
or
jecxz
add
xchg
mov
enter
or
inc
imul
or
and
push
mov
addr16
pop
decl
add
sbb
pop
lods
push
mov
cld
xor
mov
fmull
cltd
mov
pop
icebp
inc
pop
jmp
orb
xchg
sbb
les
jmp
ret
js
cmp
inc
dec
movsb
icebp
mov
imul
jmp
or
xor
mov
lods
jae
adc
jmp
lods
push
sar
xor
fisubs
test
or
push
lods
mov
dec
xor
xchg
out
dec
add
pop
fs
in
mov
aad
or
ret
insl
add
push
jno
sbb
stc
loopne
cwtl
out
pusha
fsubrl
loop
fcmovnb
add
sar
cmp
jge
movsl
xchg
fwait
xchg
stos
sti
out
pop
sbb
pop
dec
cmp
testl
cmp
dec
imul
ret
xor
mov
sbb
rolb
hlt
icebp
inc
stos
lods
adc
fidivs
push
jns
pop
sub
mov
mov
ds
lds
aas
pop
jbe
aaa
pop
pushf
test
in
and
pushf
inc
loopne
popf
adc
mov
paddb
lods
xor
negl
jecxz
jle
cmpsb
sbb
adc
lock
mov
jae
imul
ret
out
std
aam
frstor
leave
xchg
pop
inc
movsl
lret
mov
or
inc
mov
xchg
pop
divb
lock
inc
fistpl
jae
cmp
cltd
sbb
dec
pop
iret
jecxz
cmp
xchg
mov
aad
sub
test
xlat
jno
or
pop
mov
sub
dec
cmp
pop
and
sub
jae
loopne
sub
pop
pop
add
jg
xchg
movsl
mov
fildll
xchg
in
cmp
mov
aad
push
movsb
dec
scas
adc
jmp
adc
icebp
andl
test
shll
call
push
or
push
popf
xlat
xchg
xor
or
sti
sti
cmpb
fstpl
push
lods
inc
cmp
adc
push
mov
pop
in
movsl
out
push
sub
mov
pop
in
test
out
jp
and
flds
test
clc
movsb
subb
addl
int3
fdivrl
mov
daa
inc
xor
add
mov
mov
out
mov
ret
add
mov
mov
or
push
int3
or
push
push
cmp
insl
jge
inc
xchg
outsl
shr
ror
repnz
jo
and
jle
pop
sti
stos
add
mov
lods
mov
xchg
dec
sbbl
mov
test
cmp
adc
mov
pop
mov
mov
lret
rcrl
mov
xchg
sub
fildl
jo
pop
nop
daa
mov
xor
pop
or
push
imulb
ret
xlat
push
repz
stos
jge
scas
lods
loope
jecxz
stos
jno
push
sahf
xchg
dec
hlt
dec
popa
xorb
mov
js
cli
test
arpl
sub
addl
stos
shr
sbb
and
and
jbe
fs
sbb
pop
pop
iret
jno
sub
xlat
jae
cwtl
test
cmpsb
inc
mov
pop
xchg
dec
gs
loope
push
rorl
rcrl
inc
lods
sar
cmp
jecxz
mov
xchg
xor
jecxz
fildll
roll
mov
inc
in
fsub
rcll
xchg
sub
mull
jb
out
add
mov
lods
sbb
push
and
jg
add
aam
fwait
inc
popa
shrb
mov
mov
enter
loope
in
mov
scas
pop
inc
sbb
fsubl
push
pop
imulb
cmp
jb
into
orb
push
testl
pop
imul
imul
mov
and
lret
adc
popf
sub
in
and
hlt
sub
xor
mov
xchg
pop
in
adc
std
leave
pop
rcrl
int
shll
subl
jae
add
rcl
mov
movsl
cmc
mov
dec
cs
adc
push
sbb
lods
xchg
repz
adc
in
and
in
nop
sets
adc
and
stos
mov
mov
adc
sbb
je
or
sbb
test
gs
cmp
hlt
mov
fwait
es
fistl
movsb
lahf
sub
lds
jg
jp
bound
outsb
or
gs
ud2
out
in
in
xor
in
dec
dec
dec
aas
inc
jg
sbb
and
lods
pop
in
stos
mov
jecxz
in
cmp
jbe
mov
fs
outsl
cmpsl
cmpxchg
ds
add
sbbb
or
pop
and
dec
push
cmp
movsl
jmp
or
xor
out
mov
jnp
pop
dec
mov
dec
popa
popf
xchg
mov
sti
das
fmull
mull
cmpsl
push
xlat
mov
fwait
xor
jbe
pop
dec
repz
xchg
jp
out
add
inc
stos
lods
and
jne
cwtl
pop
fidivrs
popf
fs
stos
and
roll
xchg
fimuls
dec
xor
stc
inc
ds
xor
push
imull
cmp
lock
fsubr
aas
mov
mov
cmp
sub
dec
cmp
in
cmpl
nop
and
jo
dec
das
add
mov
lods
mov
sbb
andb
addr16
orb
push
lds
int
pop
and
mov
lret
pop
cmp
bound
loop
or
imul
or
stos
fisubl
add
jp
out
imul
ret
imul
mov
mov
scas
push
daa
jns
pop
sub
lcall
lods
pusha
int3
sub
and
xchg
jge
xchg
pop
fstl
pop
fsubr
out
test
fistl
lcall
jne
jle
sub
pop
incl
in
icebp
dec
dec
rorl
mov
int3
loopne
cmp
cmp
insb
push
jno
int
fnstenv
leave
xlat
mov
xor
cs
inc
mov
vpaddusb
add
push
es
jp
add
es
push
jmp
jmp
movsb
pop
and
jnp
inc
clc
out
sbbl
das
addr16
mov
push
jbe
stos
inc
es
ret
orl
inc
push
ja
jge
sub
adc
add
xor
into
addb
jo
or
push
sbb
fisubrl
lret
stc
popa
std
outsb
js
std
ss
out
push
in
dec
pushf
cmp
or
fldl
mov
repz
outsb
and
inc
shlb
push
add
movsl
aas
scas
or
pop
xor
mov
sbb
mov
mov
push
pop
loope
fdivrs
add
fidivl
cmp
sti
cwtl
stos
inc
or
cmp
xor
movsl
cmc
jnp
fs
push
dec
clc
xchg
jns
leave
sub
push
loopne
stos
cmp
add
mov
rorl
dec
jge
or
jp
daa
inc
cmpb
leave
cmpsl
mov
add
es
lahf
adc
jl
cmp
insb
adc
inc
cmp
cmp
push
mov
and
push
lret
je
xor
xchg
xchg
mov
mov
test
lea
sahf
inc
mov
int3
mov
imul
gs
pop
rclb
cmp
decl
jg
fs
sbb
nop
adc
xor
nop
jp
mov
std
lods
es
mov
cli
add
push
xor
and
cmp
sub
pop
cwtl
and
push
dec
pop
test
push
scas
rcrl
mov
push
int3
jg
sbb
or
repnz
ja
inc
fnstsw
insl
add
lea
xor
test
xchg
and
mov
popfw
jmp
inc
jge
pushl
sub
dec
push
inc
pop
imul
jge
stos
jne
mov
out
imul
std
jo
fisttpl
cmp
lods
lock
sub
cld
cmc
roll
push
pop
sub
sbbb
orl
mov
fsubrl
fdivs
xlat
int3
call
imul
push
outsb
mov
sub
sbb
repnz
mov
out
out
es
jle
das
xchg
clc
ret
loop
fwait
rorl
sbb
movsl
icebp
cld
lods
mov
adc
xchg
xor
push
or
out
cltd
lcall
imull
lret
iret
loopne
cmovnp
mov
scas
sti
outsb
mov
ja
out
fisttps
or
mov
adc
jg
lahf
push
fnsave
mov
and
sti
dec
inc
jmp
jge
rol
addr16
aaa
cld
fcomps
mov
sub
call
cmp
repz
pop
xchg
dec
dec
insl
mov
adc
cmpsb
inc
pop
xor
in
sbb
sbb
mulb
rcrl
out
dec
repnz
push
aam
fwait
and
cs
testb
jle
xor
out
in
mov
sarb
int
sbbl
adc
ja
lock
xor
cmp
mov
sub
insb
mov
cmpsb
dec
push
stc
rcrl
jno
push
dec
sub
rol
sbb
outsl
dec
mov
test
mov
pushf
jge
das
mov
sbb
mov
mov
adc
mov
mov
add
and
fisubl
dec
mov
cmpsb
iret
negb
inc
gs
stos
push
xchg
push
lret
scas
mov
jmp
addr16
rcrl
lock
stos
sub
js
sbb
ficoml
add
in
xor
pop
mov
in
imul
dec
outsb
xchg
add
sub
mov
ficoml
icebp
or
sar
adc
mov
inc
rcl
imul
add
bound
jne
aas
fs
mov
je
push
pop
dec
inc
test
adc
push
daa
hlt
xchg
cmp
imul
ret
mov
fdivrs
adc
hlt
lahf
pushf
and
movsb
and
movsb
orb
adc
cmp
ffreep
ds
mov
mov
inc
add
popf
mov
or
fsubs
jb
in
outsl
jge
add
dec
sahf
notb
imul
xor
icebp
adc
stos
push
push
jo
loop
das
cmp
lods
shl
je
add
sub
lods
mov
sahf
test
inc
adc
or
negb
imul
pop
fists
dec
fstpt
pushf
aad
lcall
outsb
xchg
jp
repnz
in
mov
xchg
out
adc
and
push
xlat
popa
push
dec
pop
imul
rcrb
mov
lret
xor
sbb
movb
andl
fisttpl
lcall
int3
pop
nop
adc
mov
sbb
xchg
fdivs
push
shl
stos
sahf
mov
test
fwait
ljmp
sbbl
or
jns
loope
adc
or
clc
jae
movsb
sub
xchg
popf
inc
lods
inc
mov
bndstx
movsl
out
cmp
mov
sbb
xchg
cmp
cmp
pushl
add
push
mov
mov
mov
adc
pop
shll
push
aaa
in
dec
icebp
mov
jne
push
test
inc
dec
pop
rcrl
loop
dec
lods
das
xor
lods
jl
aaa
stos
xchg
stc
int3
inc
jnp
jmp
cmp
fs
xchg
push
outsb
std
pushf
ja
cs
loop
jl
jnp
or
outsb
fdivrl
cli
xchg
fidivl
push
lods
in
inc
push
mov
inc
xor
sbb
hlt
int
jne
and
stos
and
popf
test
push
outsl
inc
inc
push
mov
insl
sbb
mov
mov
mov
xchg
sub
push
sbb
push
test
jns
fs
sub
dec
ja
mov
outsb
out
jne
leave
xchg
jg
jbe
jp
out
jle
sbb
cltd
dec
add
sub
stc
dec
sub
push
pop
hlt
lds
loopne
jno
fwait
add
movsb
cmp
or
dec
xchg
adc
cmp
add
mov
repnz
das
and
mov
push
loop
dec
leave
pop
out
pop
popf
es
dec
in
xor
fs
mov
int
and
sub
stc
push
call
push
cmp
cwtl
xor
cmpb
stos
insb
sbb
add
inc
fmull
and
insb
jnp
jbe
sbb
jge
mov
filds
loopne
xchg
dec
mov
call
sub
xor
sbb
daa
xchg
iret
mov
jb
or
sbb
inc
push
fists
xor
sbb
loope
das
lock
test
test
movsl
scas
sbb
inc
ficoms
gs
imul
sbb
enter
adc
add
xor
fisubl
cmp
dec
inc
add
mov
scas
into
pop
push
insl
in
xchg
jl
mov
fists
aaa
xchg
stos
andb
outsl
std
jecxz
fs
jns
sarl
jmp
clc
sub
lcall
push
insl
mov
cmp
jae
int
in
push
sub
xchg
sub
mov
leave
scas
mov
aas
lock
aaa
mov
pop
loope
lods
push
insb
fsts
xor
repnz
insl
cmpsb
int
mov
arpl
int
test
mov
int
movsl
xor
pop
fbstp
test
rorl
jns
sbb
xchg
mov
add
cli
jle
mov
push
dec
iret
pop
mov
sub
jnp
dec
lcall
adc
arpl
fstpl
js
add
mov
lods
xchg
mov
adc
loopne
pop
sbb
insl
scas
add
mov
lods
pop
loope
push
xchg
lret
mov
jg
test
push
fwait
and
dec
ja
inc
push
dec
inc
fnstenv
xchg
fyl2x
sbb
jo
mov
scas
std
subb
adc
adc
ja
fwait
xor
jg
fnstsw
and
fnstsw
cli
sbb
add
push
gs
xor
push
mov
ret
test
bound
das
hlt
test
fcomps
or
dec
shrl
out
test
push
push
es
in
add
fstps
mov
rep
xchg
aam
cmc
in
pushl
imul
sbb
pop
push
xchg
xor
inc
stos
lret
orl
push
cmp
int3
nop
mov
cltd
jg
xchg
pop
out
or
xor
mov
mov
enter
sbb
pop
les
aaa
mov
cli
sbb
sbb
cli
xchg
and
push
cmc
leave
fwait
jo
fwait
sub
inc
fldt
sbb
call
jno
daa
out
adcl
mov
movsb
inc
nop
inc
shrl
or
loope
shl
mov
lock
scas
inc
xor
and
insl
adc
mov
jb
mov
insl
stc
sahf
push
cltd
push
mov
jp
mov
test
gs
test
insl
das
xor
jp
out
cmp
enter
nop
bnd
jae
xor
icebp
ja
cmp
add
test
das
test
movsl
push
and
mov
ja
dec
int
mov
imul
jns
and
mov
out
cmp
loop
lea
push
sub
scas
mov
test
in
call
shlb
sahf
mov
dec
cmp
xor
xor
add
mov
mov
sbbb
mov
scas
and
and
xchg
xchg
pop
xchg
stos
test
mov
paddq
or
les
mov
inc
sub
cwtl
stos
test
dec
mov
inc
movsl
xor
pop
in
lret
xlat
std
lds
sub
pop
aaa
pop
lods
xor
or
cmp
scas
add
sahf
xor
or
inc
fisttpl
repz
jo
jmp
out
jb
sti
push
loope
adc
cwtl
inc
in
leave
mov
je
add
inc
xor
xchg
pusha
mov
in
push
cmpsb
push
jmp
fwait
shr
dec
add
cmpsb
les
addr16
sbb
mov
jnp
cld
sub
pop
dec
mov
mov
stc
jnp
fstpt
push
and
int
je
call
push
fcompl
arpl
fildll
adc
mov
xor
out
adc
push
sbbl
fwait
mov
xchg
fs
mov
lods
outsl
or
jbe
cmpsb
sub
nop
fstpt
fs
sbb
lret
or
es
mov
out
push
sahf
lock
cld
neg
cmp
mov
xchg
sbb
dec
fsubl
js
add
lods
xchg
sbb
mov
fldt
clc
adc
fidivs
add
pusha
and
cmp
hlt
cmp
outsb
inc
pop
mov
cmp
fsubrl
mov
mov
sahf
orl
mov
mov
sar
fs
inc
jmp
dec
xor
mov
or
or
push
movsl
call
and
roll
leave
pop
lret
shlb
repz
outsb
repnz
jnp
sahf
bound
sbb
or
push
mov
pop
iret
mov
js
inc
or
mov
in
stos
push
rep
jl
pusha
xchg
or
fstps
pop
mul
mov
mov
jnp
scas
jge
xor
mov
sti
insb
out
mov
lahf
test
leave
pusha
mov
aad
stos
inc
scas
ds
out
in
jo
repnz
cmc
cmp
jecxz
stc
push
mov
idivl
xorb
mov
or
and
inc
fs
jb
jle
shll
andb
into
testb
cmp
out
and
adc
xor
pop
dec
lret
cmpsb
cmpsb
mov
jne
loop
jae
jo
xchg
aaa
adc
in
aad
in
daa
push
mov
xchg
out
mov
lret
mov
cmpsb
imul
popf
xlat
insl
mov
pop
insb
out
jno
mov
cmc
in
jg
outsl
jecxz
popf
mov
shl
dec
repnz
lcall
sbb
push
ss
cmp
leave
mov
insb
add
daa
jmp
test
std
inc
pop
int3
dec
stc
ljmp
lea
jb
sbb
fistps
insb
addr16
out
inc
xchg
jg
cwtl
mov
test
push
cmp
xlat
shl
mov
cmpsb
ds
mov
sbb
leave
cmpb
sub
jmp
fstps
lret
inc
pushf
xor
push
adc
lods
mov
sbb
mov
shll
addb
cmc
pop
jecxz
xchg
dec
int3
push
cmp
lods
fbstp
pop
jge
stos
data16
inc
adcb
rcll
sub
and
gs
add
das
pop
mov
popf
fidivl
cmp
or
mov
adc
pushf
cmp
mov
mov
ret
subl
popa
std
and
test
pop
mov
hlt
mov
cpuid
adc
shrl
or
pop
les
adc
stc
fadds
pop
inc
stc
inc
push
cmp
xor
ret
push
ljmp
lahf
pop
lock
adc
into
mov
mov
xor
mov
movsl
enter
dec
in
cmpl
testl
xchg
jbe
fadd
jg
lahf
mov
cmp
adc
push
jb
pop
sar
lea
call
insb
adc
cmp
test
xchg
scas
jno
cmpsl
mov
fsqrt
cli
sub
dec
and
dec
push
lods
jle
stos
inc
cmpsb
mov
add
cmp
divl
mov
push
push
jnp
jge
dec
adc
mov
ret
int3
outsl
cmp
cmpsl
enter
push
mov
sbb
mov
xor
dec
dec
rcr
data16
scas
pushf
scas
popf
gs
jnp
fldcw
xor
jecxz
jge
push
xlat
xchg
mov
gs
mov
dec
adc
cmp
sbb
jle
mov
js
xor
xchg
scas
dec
add
sub
mov
pop
jecxz
adc
fistpll
sub
sahf
add
mov
outsb
leave
shl
cli
jo
stos
mov
pop
mov
adc
out
mov
sbb
leave
cmpl
in
rcll
xchg
decl
add
and
sbb
jo
pop
add
jmp
sbbl
or
sbb
scas
es
hlt
jb
push
movsb
aad
imul
mov
or
pop
jns
push
cltd
ret
loopne
adc
or
mov
mov
jnp
data16
scas
push
scas
in
and
xor
push
in
cmp
push
mov
call
cmpsb
movsb
xchg
stc
rorb
push
adc
icebp
mov
sbb
dec
sub
daa
rcrb
or
imul
pop
sti
aas
cmp
cmp
push
dec
push
sub
mov
mov
movsb
repnz
jns
push
mov
aad
jbe
jmp
add
push
jmp
and
bound
fs
sub
movsl
mov
or
jae
imul
je
fcomip
daa
or
shrb
das
cmp
repnz
lock
loop
fstpl
mov
bound
push
xchg
xchg
jnp
fnstcw
mov
pushl
add
pavgw
clc
fidivl
xor
imul
inc
popa
mov
loopne
xchg
ljmp
and
aas
adc
test
jge
inc
mov
sti
or
fstl
loopne
cmp
add
and
enter
push
mov
shrb
cmpsb
jo
dec
lcallw
mov
push
sbb
jb
in
push
cmp
or
xchg
xchg
imul
inc
jecxz
dec
inc
hlt
xlat
scas
fistl
add
popf
push
movsl
inc
in
mov
push
loop
mov
sub
dec
ljmp
pop
inc
inc
idivb
enter
inc
aas
lock
push
cmpsb
mov
outsb
gs
outsb
mov
mov
shl
cmp
xlat
in
shlb
aam
sbb
in
testl
add
out
fcoms
imul
icebp
pmaxub
fmulp
sub
jge
fs
mov
cmpsb
mov
outsb
lahf
test
sub
popf
setle
scas
scas
inc
mov
adc
in
ret
mov
adc
pop
pop
mov
push
fidivs
popa
fsub
lea
push
xor
jne
flds
outsl
inc
fcomp
cmp
xchg
push
int3
fwait
mov
into
mov
push
data16
rolb
jbe
xchg
inc
jmp
fbld
cs
dec
aad
popf
testl
pop
jnp
push
imul
sbb
pop
dec
mov
lret
addr16
jp
dec
push
dec
push
push
cmp
pusha
int
call
test
mov
mov
push
pop
jle
dec
push
sub
rep
xchg
dec
xchg
ja
inc
repnz
lods
popa
sbb
loope
push
stc
outsl
jnp
lea
jg
sbb
jle
or
push
mov
js
ljmp
into
jg
in
adc
out
inc
cmp
aas
xor
pop
lcall
and
cwtl
dec
ret
jno
xchg
loopne
in
xorl
fidivrs
push
jno
sbb
ret
jbe
dec
call
test
mov
adc
sub
test
sbb
jp
add
lcall
imul
jae
add
mov
sti
outsb
or
jnp
inc
and
mov
cld
fistl
inc
mov
xor
sti
daa
cmp
mov
mov
ror
sub
and
jb
xor
mov
lcall
insl
push
fwait
mov
xchg
divb
lret
mov
into
push
jl
adc
cltd
jmp
shll
inc
sub
mov
jno
or
xchg
inc
jmp
xchg
or
jb
push
sbb
sub
cmc
sub
cmc
ds
inc
or
jb
pop
hlt
popa
shl
push
mov
hlt
ret
xchg
mov
pushf
ds
in
cmp
jg
in
and
cmp
inc
je
mov
adc
iret
data16
xchg
and
imul
xchg
rcll
les
cld
mov
cwtl
decb
in
cmp
ffreep
jp
int
jmp
rclb
cltd
and
inc
sub
lret
add
shr
mov
sbb
int
jno
and
adc
popa
pop
mov
ljmp
dec
psllw
fcoml
out
lahf
test
fmull
cmp
in
in
xor
push
jge
into
cmpl
movsl
mov
mov
push
out
fidivs
fisttpl
or
dec
dec
or
sahf
jg
data16
sub
mov
xchg
aas
and
inc
dec
jne
dec
fnstsw
sarl
xchg
out
aad
mov
jle
in
push
jb
stc
pop
ffree
xchg
xchg
sub
xchg
push
jae
mov
es
mov
xor
je
push
mov
cmpsb
mov
ss
mov
sub
inc
fsubrl
jl
loope
insl
jg
jnp
icebp
je
pop
adc
pop
sbb
repz
shll
mov
fcmovbe
imul
xchg
inc
cltd
jb
mov
jae
cmpsl
aas
mov
adc
adc
xor
xchg
ret
mul
sub
pop
mov
xchg
jae
sbb
mov
push
or
xor
or
push
mov
and
bound
in
orl
ret
das
cmp
push
int3
mov
push
jecxz
pop
stc
daa
scas
sbb
pop
sbb
lea
xorb
mov
scas
inc
add
push
or
in
lods
clc
bound
inc
sti
movsb
mov
push
mov
sub
cmp
fcmovnb
xchg
jb
cmp
jno
pop
clc
inc
nop
ret
push
les
ds
pop
out
pop
roll
xor
orl
data16
cltd
std
ret
mov
jp
loopne
fucom
mov
and
mov
scas
jp
jecxz
das
mov
dec
mov
xorl
jle
mov
in
sbb
dec
aad
mov
fs
sub
mov
jae
icebp
outsb
and
addr16
call
test
pop
rolb
arpl
ds
repnz
out
adc
stos
mov
fsts
mov
inc
and
and
add
mov
lock
or
stos
jnp
aas
dec
testb
and
push
sahf
mov
insl
cld
mov
cmpb
cwtl
fs
adc
jns
pop
sbb
test
iret
fnstenv
xor
mov
inc
cmp
pop
or
shr
lock
bound
adc
icebp
cltd
sub
popf
ja
mov
push
xor
jno
add
out
loope
mov
rcll
nop
pop
arpl
scas
in
and
rcrb
test
je
cs
movsb
cmc
js
dec
sub
test
add
in
xchg
xor
mov
fimuls
push
mov
cmp
jnp
pushf
xlat
push
inc
popa
inc
test
xchg
int
jg
call
scas
mov
and
jno
ret
add
inc
or
pop
pop
int3
pusha
push
ret
loopne
insl
mov
and
cmp
sbb
lods
sbb
ja
icebp
movsl
jb
sub
test
aaa
mov
adc
jo
xchg
sbb
ds
inc
movsb
push
or
fsts
xchg
loope
push
loope
rol
pusha
enter
movb
sti
pop
pusha
add
ljmp
movsl
dec
cltd
pop
test
int
cmc
sbb
adc
or
ljmp
dec
or
cmp
jle
mov
xor
loope
dec
sbb
pop
cmp
mov
rcl
sbb
sub
stos
out
fstl
ss
loope
dec
scas
movsl
filds
cmp
add
jbe
mov
sbbb
dec
or
mov
adc
sub
cltd
orl
clc
insb
inc
stos
rcl
imul
int
std
sbb
lahf
push
dec
pop
push
in
xlat
cs
fwait
xor
leave
adc
fdivr
movsb
dec
or
jg
js
rcrl
or
inc
rol
scas
icebp
shrl
inc
fcoml
jg
add
add
out
mov
and
rcr
loopne
inc
cmpsb
and
cli
out
aas
cld
cmp
pop
add
jb
dec
je
cwtl
repz
arpl
xchg
in
mov
mov
cs
fbstp
pop
xchg
ret
jnp
fbstp
mov
pop
adc
sbb
mov
test
call
push
outsl
mov
rcrl
data16
xor
adc
cmpsl
inc
jb
jb
mov
pop
jmp
in
xor
push
push
ljmp
divl
jg
push
shrl
daa
clc
insl
lcall
push
fs
out
dec
out
jnp
out
nop
fprem1
mov
mov
sbb
pop
repnz
leave
dec
dec
pop
icebp
scas
clc
sahf
fnsave
push
aad
mov
outsl
outsb
int
fdivrl
repz
adc
or
inc
das
cmp
fsubrl
pop
ficompl
mov
je
xor
xchg
test
jmp
fucomi
enter
jmp
xchg
push
arpl
xchg
xchg
das
push
dec
lea
inc
popa
adc
or
cld
pop
je
mov
lret
push
mov
cmc
scas
dec
sti
imul
sbb
mov
dec
add
jae
shrl
mov
xchg
pop
cmpl
push
xchg
push
xor
cmp
mov
lds
sbb
outsb
mov
pop
jnp
insb
mov
sub
std
jo
adc
inc
ret
out
sub
sub
jmp
idivl
add
xor
push
movntq
out
pop
outsb
loopne
xchg
in
xor
push
jnp
push
inc
das
and
fisubl
jge
ja
loop
adc
or
outsl
mov
into
rcrb
and
fwait
aas
in
adc
inc
jge
andb
pushf
adc
mov
cmp
inc
scas
test
cltd
dec
je
jnp
cmp
pop
jmp
xchg
and
int3
xor
push
mov
dec
mov
sbb
xor
cmp
std
push
int3
push
jbe
cmp
fldt
fisttpl
xor
into
mov
pop
add
hlt
mov
mov
andb
mov
jmp
fwait
xorl
inc
insl
sub
daa
pop
add
pop
dec
dec
pop
xchg
call
xlat
movsl
repz
jmp
pop
popa
pop
push
mov
fcompl
popa
pop
push
push
cmp
rcll
and
pop
arpl
daa
pop
lcall
ds
sbb
pop
adc
mov
jo
xor
gs
xor
mov
cld
lcall
shlb
add
push
inc
out
insl
sub
dec
lods
xchg
pop
notl
add
pop
fdivrl
popf
cmp
lret
lods
xor
pop
adc
dec
mov
hlt
test
xorl
popa
shrl
pop
xlat
movsb
femms
jle
cmp
mov
mov
mov
cli
inc
xchg
negb
add
push
fnstsw
dec
add
adc
stos
es
mov
lds
outsl
mov
inc
mov
or
lea
imul
pushf
stos
or
es
xchg
into
cmp
ja
int3
in
mov
add
decb
xor
shrb
enter
xchg
out
mov
dec
lods
add
fmulp
lret
dec
cmpsb
xlat
adc
add
mov
pop
pop
aaa
cmp
jb
mov
sbb
push
mov
outsb
mov
out
xchg
fs
std
xchg
sub
addr16
pop
outsb
cs
xor
mov
sbb
push
or
je
lret
mov
sub
dec
movsb
sbb
inc
inc
sub
inc
or
stc
iret
repnz
pop
or
fldpi
mov
shl
ret
stos
pop
fimuls
sbb
bound
cmp
shl
inc
sbb
sbb
cmc
aaa
jecxz
in
subl
loop
xchg
ss
jp
or
imul
push
shll
lea
dec
cmp
jno
pop
xchg
rorl
arpl
ret
jns
and
or
test
cmp
inc
ja
lea
icebp
into
jg
dec
pop
mov
mov
push
in
loopne
push
mov
fadds
mov
pop
sahf
mov
pushf
scas
pop
cmpsl
pop
outsl
xor
call
adc
repnz
popa
mov
std
or
dec
nop
iret
jle
pop
cmp
sub
flds
pop
xchg
or
jp
fstpl
cmp
xor
test
cmp
stc
mov
xchg
inc
lock
shlb
aam
in
and
mov
add
int
popa
mov
sub
jb
jbe
xor
jmp
push
out
sub
adc
sbb
pushf
mov
add
repz
dec
pop
lods
addr16
iret
rclb
xor
fisttpll
pop
into
stc
adcl
out
cmpsb
push
int
push
movsl
mov
jp
cmpsb
iret
adc
sbb
ljmp
xchg
mov
inc
in
push
pop
adc
add
hlt
call
cmp
jmp
inc
and
cltd
ja
push
out
into
xlat
call
cwtl
ljmp
aas
in
cmc
push
mov
idivl
sbb
dec
and
mov
push
jecxz
loope
ret
sbb
test
jae
cmp
add
cmp
pusha
sub
fistpll
in
dec
mov
mov
push
pop
mov
xor
xor
aam
int
dec
gs
arpl
sarb
lds
jns
ret
sbb
out
lods
or
mov
gs
sbb
call
ret
xchg
js
mov
mov
movsl
das
popf
adc
cmpsb
add
and
lea
xorl
sub
or
sbbl
jecxz
rclb
xchg
movsl
jl
xor
push
and
push
jae
xchg
call
mov
test
cmc
mov
xlat
mov
hlt
inc
popa
je
cli
lods
popl
cbtw
test
mov
jge
inc
repnz
adc
jae
inc
sbb
or
outsl
or
sahf
lcall
fldl
int3
pop
sbb
dec
rcll
cmpsb
push
mov
inc
push
lods
cltd
iret
mov
fnsave
jbe
out
and
fs
dec
aas
test
mov
insl
mov
outsl
loopne
fmulp
aas
sti
popa
mov
scas
xchg
pop
dec
or
out
out
loop
mov
imul
mov
jge
push
in
outsb
ret
test
mov
leave
cmpsl
cmp
aas
imul
inc
sahf
pextrw
pop
gs
scas
ret
subb
push
mov
hlt
dec
repz
xchg
inc
push
pop
cwtl
pop
out
mov
cmp
push
cmpsb
xor
imul
data16
adc
out
ss
push
mov
popf
jae
addr16
cltd
shlb
add
sahf
jno
inc
int3
arpl
or
popa
ds
sub
add
xchg
sbb
xlat
cltd
xor
sarb
rol
adc
add
stos
or
pop
pop
pop
mov
jl
popf
add
jp
jnp
mov
lret
xchg
addr16
or
cmp
sub
adcl
cltd
push
out
lret
aam
jmp
out
mov
insl
add
mov
dec
sbb
xchg
ja
add
pop
mov
out
repz
adc
movsl
je
mov
jb
add
scas
enter
sahf
hlt
pop
dec
pop
lock
cld
inc
mov
setle
jg
fsubs
xchg
adc
mov
faddl
cld
dec
jl
cli
cwtl
gs
leave
sbb
lret
addr16
push
and
cltd
and
in
cmp
inc
outsb
push
cmp
pop
cltd
das
pop
dec
cmp
sub
and
imul
pop
incb
jecxz
repnz
scas
inc
popl
ljmp
sub
int
repnz
mov
in
scas
fisubrs
and
out
jnp
fdivr
or
xchg
inc
cmp
dec
aaa
add
jmp
sub
pop
xor
inc
mov
in
jns
ljmp
mov
add
or
adc
mov
adc
xchg
push
das
addr16
xchg
shll
stc
je
jns
fidivs
lock
sbbl
div
fdivl
cld
dec
ljmp
adc
mov
je
test
push
nop
mov
cmp
out
into
je
ret
sub
pop
cs
frstor
lcall
add
stc
mov
stc
popf
cwtl
sub
dec
push
mov
insl
mov
hlt
lea
rcll
add
mov
hlt
stos
sbbb
sbb
ss
push
shl
cmpsl
adcl
xor
inc
into
dec
push
inc
jmp
adc
xor
push
jo
push
push
in
mov
jg
int
je
and
add
pop
rcr
add
pop
jne
adc
rolb
iret
stos
insb
sbb
mov
xchg
mov
mov
add
sahf
xor
movsb
insb
adc
push
jge
mov
daa
sbb
xor
shll
aaa
addr16
popf
out
test
or
pop
mov
sbb
sbb
cmp
mov
pop
pop
inc
fmull
sbbb
jbe
add
ret
test
mov
sub
loope
idivb
cmp
aaa
mov
lods
jo
sti
mov
mov
lods
xchg
xor
cwtl
or
fbstp
xlat
add
nop
inc
test
mov
fimull
xchg
gs
pop
scas
aad
addl
in
gs
fucomip
lock
ja
push
stos
js
sub
adc
imul
pushf
jbe
test
cmpsb
ret
repnz
bound
pop
xchg
stc
out
sbb
or
jbe,pn
pop
push
les
sub
push
jnp
stos
in
lods
stos
inc
dec
cmp
int3
xor
std
jbe
idivb
pop
shrl
pop
and
mov
inc
sbb
int3
pusha
iret
jb
sub
enter
sbb
xchg
insb
fbstp
mov
paddsb
fwait
xor
mov
and
mov
xor
stc
xchg
pop
sub
sub
jmp
cmpsl
lock
sbb
cs
movsb
push
xor
mov
icebp
push
call
mov
outsl
cs
pop
negl
push
cld
jno
mov
and
sbb
bound
mov
lock
xchg
inc
mov
loop
arpl
pop
adc
cmc
push
mov
fstl
push
dec
mov
inc
testb
movsl
xlat
dec
jns
pop
pop
lods
adc
xchg
cltd
sbb
add
imulb
jns
sarl
xchg
xor
lahf
movsl
in
push
sub
jp
fwait
pop
xor
mov
sbbb
imul
push
jmp
adc
xchg
inc
in
adc
fisttpll
jne
movsl
cmp
popf
mov
pop
sub
mov
pop
push
orb
push
iret
lcall
and
in
mov
cltd
xchg
pop
add
sub
lcall
jno
or
mov
mov
xor
inc
fdivrs
ror
cmp
sub
or
xchg
sub
inc
pop
xchg
bound
popa
cmp
dec
les
push
sub
idivl
pop
jbe
imulb
or
jg
out
lds
inc
movsl
or
fidivrs
push
fdivrl
movsl
push
lret
jo
xchg
sub
mov
and
or
push
movsb
push
ret
xor
push
mov
insl
jb
inc
and
nop
stos
std
pop
lods
mov
jne
push
sub
pop
js
adc
fcmovnb
push
cmp
jnp
iret
jno
imul
cwtl
cmpsl
imul
dec
push
stc
hlt
xor
cmpsl
sbb
lds
xchg
repz
push
cmp
sbb
mov
mov
sti
lretw
add
xchg
xor
movsl
add
jno
mov
fadds
push
rol
faddl
push
sbb
int
sub
sbb
dec
inc
mov
sub
dec
and
fldenv
iret
sahf
xlat
or
pop
cmpsl
or
dec
popa
ret
js
jns
add
arpl
out
xchg
loopne
ljmp
loopne
je
add
push
mov
push
imul
or
jp
dec
and
sub
cs
mov
inc
lods
sbb
mov
imul
fistl
pop
mov
cmp
jno
hlt
pop
and
cmp
jl
pop
pop
in
negb
push
mov
int
pop
sahf
xchg
push
popf
or
push
icebp
mov
cwtl
pop
cwtl
inc
cmp
ljmp
sti
mov
add
cmp
fsubs
pushw
cld
push
mov
pop
mov
pop
fisubl
jns
les
push
ss
js
cmpl
mov
jnp
mov
mov
insb
js
xchg
cmp
stc
iret
aam
adc
int
sub
mov
and
xchg
sub
ret
mov
push
scas
orb
mov
cmpsb
sub
adc
ja
jecxz
push
arpl
insl
or
add
pop
hlt
loopne
int
push
imul
outsb
shlb
rcrl
shll
sahf
and
lahf
xchg
ss
adc
scas
inc
and
ror
ret
mov
fsts
test
aas
sbb
jo
fstpt
scas
adc
arpl
lret
mov
fadds
mov
mov
pop
add
fdivl
shlb
inc
pop
cli
popa
jecxz
lea
add
cmpsl
ds
and
pop
and
sbb
jecxz
mov
jecxz
mov
adc
mov
xchg
fldcw
cmp
sbb
jecxz
cmc
push
mov
test
pop
lea
pop
cmp
insb
inc
test
addl
jb
imull
popf
sbb
xchg
or
xor
mov
push
inc
dec
mov
aad
sbb
popl
notl
xor
cmova
icebp
in
adc
aas
mov
and
ret
mov
inc
push
mov
push
cltd
fstl
dec
inc
lahf
daa
mov
mov
inc
add
add
xchg
jnp
std
leave
in
sub
dec
lret
dec
or
popa
iret
iret
push
jnp
lcall
dec
in
mov
popa
das
jo
jb
pop
and
fisttpll
sahf
outsl
daa
rcll
xchg
fldcw
data16
cmp
push
pop
push
inc
push
fistpll
aas
outsb
and
xchg
push
mov
or
sub
and
scas
inc
inc
mov
sub
fidivs
out
or
je
mov
cltd
in
sti
and
cli
lods
inc
xor
js
or
popf
fs
outsl
aam
out
int
int
mov
pop
repz
and
or
adc
fdivrp
rolb
pop
jecxz
or
cs
jns
or
jb
cmp
xor
cltd
and
push
fiadds
inc
ds
inc
dec
in
fldt
or
cld
pop
mov
test
pop
loopne
jne
sbb
insw
iret
int3
inc
push
pmaxsw
and
int
jecxz
test
jae
xor
js
and
push
ss
cmp
lahf
push
mov
popf
xchg
sbb
les
cmp
loopne
clc
push
test
pop
imul
add
push
ja
mov
dec
xchg
dec
dec
push
stc
or
add
jle
testb
dec
aas
push
add
and
cmp
ret
aaa
adc
movsb
shlb
or
outsl
in
lods
and
xor
mov
les
sar
sbb
fnsave
fsubrs
and
mov
jmp
cmp
xchg
mov
sbb
jp
push
nop
out
std
lret
or
lret
and
push
mov
cmp
inc
hlt
addr16
dec
hlt
pop
mov
push
loope
leave
jg
iret
push
arpl
push
or
pusha
xchg
popa
ficoml
mov
mov
jae
xor
fmul
sbb
push
and
or
xor
cmp
mov
pop
mov
sbb
inc
xor
pop
push
lds
int3
sub
cld
xor
xchg
xchg
mov
pop
scas
mov
out
aad
arpl
repnz
push
adc
pop
loop
pop
or
pop
ss
addr16
inc
les
xchg
gs
and
push
repnz
push
test
iret
test
ljmp
in
mov
or
xor
movsl
xor
je
sarb
repz
push
lods
pop
jbe
push
dec
jae
mov
cmp
aas
or
jle
out
mov
divb
or
ds
push
sub
sub
mov
and
callw
data16
cmpsb
sarl
add
add
jns
cwtl
adc
sub
mov
mov
testb
cmc
arpl
call
mov
scas
cmp
cmp
push
sub
mov
sbb
dec
mov
pop
mov
mov
imul
es
or
lret
lock
je
or
fnstenv
add
cld
pop
adc
push
add
lret
push
leave
add
add
xchg
sub
das
inc
adc
js
iret
out
sbb
icebp
ds
les
ljmp
push
fneni(8087
in
inc
loop
aad
icebp
or
call
add
adc
dec
adc
outsl
leave
push
xor
xor
sub
push
ljmp
jno
out
popf
je
inc
mov
jae
sti
aam
js
ljmp
es
call
pop
sbb
cmp
push
xchg
mov
cmp
push
rcl
xor
push
sahf
and
jmp
or
mov
sub
rcl
loop
add
cwtl
test
cltd
mov
add
cmpsb
push
in
rolb
testl
pop
push
push
inc
loopne
jg
sub
fiadds
idivb
mov
dec
cmc
cmp
std
jp
xor
testb
and
icebp
or
fistpll
jmp
or
iret
dec
mov
jnp
ja
in
sarl
es
or
inc
adcb
push
movsl
cli
pushf
pop
cmp
inc
xor
scas
in
int
pushf
mov
lahf
mov
sarl
in
jle
out
loopne
stc
pushf
popa
rolb
scas
movsb
mov
jmp
mov
lods
outsl
inc
fidivs
push
xchg
sbb
mov
jl
rolb
lock
addr16
test
add
repnz
add
hlt
mov
sbb
mov
inc
push
and
mov
rorl
cmpb
cmp
jne
push
pop
pop
out
mov
jnp
sub
jbe
fimull
ret
jbe
jae
push
mov
js
ret
dec
push
jnp
lds
lahf
into
cmp
add
test
mov
les
and
mov
data16
sbb
push
pop
cld
lret
inc
or
cmp
push
add
mov
divb
add
push
and
in
and
jae
inc
mov
push
sbb
enter
jns
inc
mov
mov
mov
lret
push
fwait
sbb
imul
cmp
xor
lret
movsl
pushf
rcrl
jae
js
mov
mov
inc
jae
dec
es
or
cmp
call
iret
mov
sbb
inc
adc
rorb
sub
or
push
imul
outsl
inc
fisubl
dec
popa
or
mov
jp
test
fs
ljmp
lret
pusha
sub
out
outsl
sbb
ftst
out
lods
inc
pop
scas
inc
add
and
lcallw
sbb
popa
dec
ret
jp
call
pop
imul
fwait
aaa
sub
adc
or
es
jbe
xchg
test
cld
imull
pop
scas
lret
xchg
xor
xor
cmp
bound
addr16
repz
fs
outsl
out
jle
in
mov
lea
xchg
inc
pop
fwait
push
push
and
adc
inc
cmp
push
mov
dec
or
jo
push
movsl
aam
mov
sbb
mov
dec
mull
cmp
out
das
lea
cwtl
icebp
shr
das
mov
mov
out
test
cwtl
or
dec
cmpsl
hlt
mov
cld
loop
cmp
iret
mov
shr
leave
fsubrl
fisttpll
jmp
push
frstor
adc
lahf
lods
mov
test
xchg
cmp
in
xchg
cwtd
sub
outsb
leave
out
sub
pusha
rolb
and
push
dec
inc
movsl
sbb
lret
into
cmp
data16
pop
xlat
fsubrl
gs
decb
xchg
sbb
in
incb
popl
cmp
adc
xchg
add
data16
das
lods
xor
js
test
or
into
test
add
stos
mov
in
xor
pop
dec
xchg
dec
aas
push
jne
shl
or
lcall
adc
nop
daa
add
rorl
sbb
aas
inc
pushf
test
mov
stos
add
add
jmp
or
xchg
lods
jbe
loopne
xchg
psllq
clc
aad
pop
xchg
inc
push
xor
decl
jo
in
rcrb
frstor
loop
dec
xorl
adc
test
mov
daa
rcrl
pusha
pop
jae
rclb
enter
mov
clc
jae
sbb
mov
adc
imul
dec
cmp
mov
pop
hlt
xor
data16
push
std
adc
fistps
mov
jle
lea
xor
add
lds
and
mov
bound
add
xchg
aad
fmul
fnstcw
mov
xor
cmp
and
jge
scas
mov
cmp
jns
push
clc
cltd
fldl
iret
jp
je
mov
push
call
rol
cmp
adcl
push
mov
scas
mov
rcrb
and
rorl
in
jne
mov
cmp
cld
movsl
mov
fimuls
rcr
mov
cmpsl
lcall
insl
ficoms
sub
mov
inc
jecxz
and
shll
and
das
cmp
add
mov
scas
push
sub
pop
pushf
xor
mov
aad
and
mov
js
dec
add
popf
xor
push
sbb
std
adc
sarl
clc
bound
xchg
das
push
jg
xchg
and
lret
sahf
or
mov
dec
push
xchg
lret
add
bound
cmp
or
sbb
mov
jg
jge
push
sub
mov
sbb
pop
inc
aaa
fnstcw
inc
je
dec
subb
addr16
adc
jmp
or
sbb
and
testl
fs
enter
fstl
add
lret
cmp
out
jge
cmp
fwait
mov
out
mov
adc
jnp
cmp
out
or
std
mov
mov
push
out
xchg
pop
rcl
pop
adc
cmpsb
push
pushf
mov
and
sbb
or
push
popf
jnp
or
popa
sub
or
ds
cmp
imul
mov
push
xchg
sub
mov
ficoms
jb
sbb
mov
sbb
sbbb
xchg
sub
fbstp
addr16
fdivl
cmp
mov
xor
out
inc
out
inc
inc
repz
js
sbb
sub
push
mov
out
sub
lret
cld
repnz
addr16
insb
sbb
fisttps
and
xor
dec
in
push
sarb
or
inc
jno
lock
ficoml
mov
ja
fdivrl
sti
je
push
scas
xlat
pop
cmp
xor
push
sbb
dec
movsl
icebp
sbb
insl
pop
dec
dec
xchg
add
sub
jae
clc
cmpsl
aad
xchg
cs
sbb
push
lcall
orl
xchg
pop
dec
lcall
insb
mov
sarl
mov
cmpsl
xchg
inc
push
jge
push
or
adc
js
sbb
jge
js
stos
testb
lahf
adc
rcl
mov
jp
and
in
fdivrs
cmp
mov
negl
decb
and
dec
xlat
sahf
or
xor
cmp
lcall
add
mov
pop
push
movsb
lret
lret
mov
insl
call
cld
sbb
push
jp
or
test
jg
lahf
mul
repz
jnp
jecxz
in
lahf
mov
xor
dec
xor
jmp
fldz
sub
mov
in
orl
aaa
popaw
cmp
and
test
dec
xor
mov
push
xchg
lods
adc
pop
out
xchg
int3
rorl
mov
xor
pop
das
leave
sbb
jnp
subl
test
cmp
jo
stos
push
repnz
xchg
pop
scas
push
xor
and
dec
shlb
ret
lds
fsub
mov
stos
icebp
stc
mov
push
pop
sbb
mov
gs
in
inc
add
rcrl
ds
in
jns
test
mov
inc
movsb
mov
popa
ret
and
mov
je
or
cltd
test
dec
fs
out
inc
jecxz
nop
adc
jle
adc
mov
insl
sub
andb
scas
or
mov
adc
xchg
scas
add
mov
mov
inc
jle
rol
dec
int3
out
sti
into
das
fimull
xchg
pop
push
shrb
adc
lret
jmp
mov
ss
clc
cltd
stc
mov
fiadds
mov
or
pop
xchg
sub
push
out
bts
add
xchg
cli
nop
jae
jl
jmp
mov
jno
adc
cli
inc
cwtl
push
popf
mov
sub
sti
push
mov
pop
mov
mov
adc
aaa
cmp
push
xlat
clc
clc
outsl
push
ret
xor
mov
int3
push
cmc
mov
out
cmp
xchg
xchg
mov
jle
xor
movsl
add
push
leave
dec
cmc
adc
jns
fadd
and
cmp
lea
xchg
sub
ja
fnstsw
movsb
bound
xchg
sbb
jb
jmp
cmp
push
andl
js
sub
daa
jle
xchg
sar
cmpsb
cmc
add
daa
push
fsubs
lea
popa
subl
loopne
fwait
call
aam
daa
outsl
adc
das
repnz
mov
xor
insb
mov
pop
nop
daa
mov
lret
push
pop
lods
lods
jmp
mov
fbstp
add
icebp
mov
out
mov
xchg
xchg
mov
cltd
leave
mov
push
jb
rclb
cmp
inc
and
push
or
push
add
jle
cs
pop
scas
aaa
lret
mov
movsl
in
push
push
dec
dec
negl
xchg
jle
les
cmp
inc
in
je
sbb
add
shrl
adcl
push
ficompl
cld
pop
jb
test
cwtl
or
mov
iret
into
shll
gs
cmpb
adc
xchg
fsubs
jmp
popf
jecxz
dec
push
cmp
dec
lahf
mov
add
and
xchg
push
push
add
rol
jmp
scas
pop
and
inc
loopne
ds
imul
push
movsl
dec
and
hlt
jnp
orl
icebp
inc
gs
jbe
shrl
shl
int
test
add
add
lds
pop
cs
push
lret
mov
jge
call
adc
mov
mov
or
sbb
popf
into
popa
mov
in
inc
lods
mov
sub
add
xor
xor
xchg
adc
pop
in
jb
inc
cli
icebp
shll
ffreep
fsubl
std
or
pop
or
add
dec
mov
and
mov
add
xor
test
xor
push
mov
ffree
fildll
popa
or
ss
xor
xor
in
mov
sbb
je
inc
cmp
mov
rolb
jne
xor
rolb
addb
arpl
stos
notl
cmpsb
mov
sar
out
sti
or
pop
cs
lret
pop
xor
inc
cmp
aaa
push
push
add
mov
into
jo
hlt
mov
repnz
and
mov
sahf
mov
mov
fdivrs
aad
roll
scas
pop
icebp
push
xor
movsb
ljmp
aaa
sbb
gs
mov
sahf
scas
cli
aas
into
movb
xorl
int3
rcl
pop
out
stos
es
pop
mov
sub
and
mov
out
push
lahf
jae
pop
fs
mov
clc
cltd
pop
mov
sbb
mov
inc
int3
inc
mov
dec
repnz
imul
inc
sub
outsl
jp
lahf
pushf
or
mov
mov
and
inc
popa
or
or
mov
aam
stos
cltd
stos
sub
subl
stc
xchg
adc
sub
dec
sti
fwait
das
repnz
jg
jmp
lcall
or
clc
dec
ficoml
add
cmp
inc
sub
cmpb
pop
sahf
nop
insl
in
push
ds
ret
or
push
movsl
dec
add
movsl
sub
fcoms
mov
sub
daa
inc
or
or
cld
add
das
enter
cmp
mov
out
icebp
xchg
inc
mov
mov
push
sti
out
push
lahf
pop
xor
cmp
jg
movsb
mov
clc
or
jl
jbe
mov
fisubs
loope
ss
cwtl
hlt
leave
das
lock
subl
repnz
cmp
insb
pop
aad
push
sbb
xchg
adc
in
cmp
and
mov
pop
insl
scas
popa
adc
mov
das
arpl
dec
sarb
imull
inc
cmc
sub
addr16
jno
push
xlat
cmp
stc
mov
leave
mov
or
je
ret
movsl
inc
jno
inc
adc
jns
in
mov
popa
and
or
pop
clc
inc
fldt
fwait
adc
sti
xchg
and
pushf
pop
out
lret
sbb
out
dec
stos
xchg
int3
push
repnz
call
insb
inc
xor
dec
lock
daa
mov
jmp
popf
xor
push
negb
or
and
rolb
add
adc
test
je
xchg
repnz
es
add
mov
pusha
sbb
out
lods
cmp
dec
dec
jbe
mov
sbb
insl
adc
data16
pop
fidivl
inc
lock
fdivr
push
inc
mov
mov
push
lods
faddp
xor
loop
xor
or
aam
into
mov
inc
cltd
push
sbb
jbe
stos
call
add
sbb
fsts
pop
out
lods
jecxz
cmp
mov
mov
push
test
push
sti
jbe
cmpsl
jg
xchg
cmc
fnstcw
xchg
repnz
repz
ret
fnstenv
popa
xor
popf
and
scas
xchg
xor
in
loop
dec
in
pop
stos
cli
loope
mov
dec
fsubl
cmp
jge
negl
or
repz
aas
adc
lret
push
std
xchg
cmp
int3
test
test
mov
aaa
push
mov
inc
outsb
xor
adc
push
xlat
sub
push
dec
pop
das
lahf
dec
xchg
mov
pop
jge
add
stos
push
pop
pop
mov
nop
jmp
aas
mov
rcr
in
aaa
sarl
dec
pushl
xchg
adc
fmulp
fimull
pop
xor
adc
das
aam
inc
jae
sbb
jp
out
push
arpl
imul
sbb
repnz
divl
mov
push
inc
frstor
imul
je
cmp
mov
xchg
dec
icebp
into
cmp
pop
pop
push
push
sbb
adc
push
aaa
int3
mov
out
inc
and
push
sub
sub
or
out
out
pop
sbb
xor
jmp
push
mov
ret
sbb
mov
xor
in
bound
movsl
push
mov
outsl
cmp
nop
daa
in
pop
pop
xor
cmp
test
adc
inc
fstl
scas
repnz
mov
dec
or
insl
scas
pop
xor
fdivrl
test
jb
hlt
movsl
sub
mov
ret
adcb
or
pop
out
dec
dec
sti
push
call
or
cmp
nop
sub
fsubrs
mov
ja
sbb
sbbl
test
mov
xor
or
xchg
cmc
dec
movsl
adc
mov
inc
inc
sub
test
xchg
mov
int
ret
add
cmpsl
pop
scas
jb
xor
arpl
inc
jg
fs
mov
lret
sub
pop
sub
jg
jns
notl
pushf
xor
xchg
pusha
xor
xor
jg
idivb
mov
lods
inc
adc
int
in
lret
mov
insl
aaa
adc
push
fwait
xor
jecxz
push
xchg
xor
push
jge
push
outsb
adc
lcall
and
arpl
xor
pop
xchg
adc
pop
test
sub
jp
movsl
mov
or
inc
lods
aas
jae
push
loope
xchg
imull
lcall
pushf
push
popf
int
jp
movsb
gs
jae
jl
dec
scas
add
repz
std
jle
add
sub
sbb
fdiv
pop
lret
enter
sub
daa
inc
int
ja
shl
add
mov
add
mov
insb
inc
xor
xor
jl
dec
addr16
scas
loopne
daa
inc
jle
xor
mov
dec
jl
xchg
cmp
sub
mov
cmp
push
xchg
dec
sbb
add
adc
xchg
lods
inc
cld
xchg
ja
lret
test
add
stc
fdivrl
ja
mov
and
inc
mov
jl
adc
mov
adc
mov
addb
scas
push
xchg
mov
lret
pop
lcall
dec
and
mov
loopne
test
cmp
and
add
sarl
xor
das
xchg
and
je
fucomi
push
in
test
pop
or
push
mov
sub
jnp
movsb
daa
js
scas
pop
pushf
pop
out
and
cwtl
and
sbb
xchg
fmull
scas
inc
mov
ss
cmpsl
pop
data16
push
icebp
xchg
imul
push
mov
popa
dec
jecxz
into
clc
and
lret
or
xor
push
mov
roll
ret
and
mov
loopne
aam
lret
out
xchg
inc
stos
and
fcoml
xchg
dec
mov
push
mov
dec
test
pop
jmp
repnz
jns
add
pop
mov
jp
dec
dec
lcall
mov
mov
jp
rol
sub
mov
sub
in
in
in
jg
mov
or
adcl
jecxz
out
lods
and
pop
jb
test
out
sarl
dec
add
inc
loopne
fnstsw
pop
js
cmc
mov
out
mov
add
fsubrs
mov
iret
mov
add
cltd
ljmp
in
push
fists
sahf
movsb
sbb
imul
cmp
pop
mov
mov
ret
jge
imul
test
adc
test
push
dec
jns
pop
test
adc
mov
dec
pop
xor
sub
orb
jg
xchg
inc
testl
mov
cmpb
ret
or
dec
stos
cmp
popf
test
inc
in
cli
mov
dec
pusha
dec
or
ds
fbld
pop
in
dec
ret
out
sub
sbbb
dec
fsubl
mov
aad
daa
sub
movsb
movsl
jne
sub
xor
lret
add
mov
stc
xor
inc
sahf
pop
and
xchg
adc
popf
jo
adc
clc
push
icebp
cmpsb
adc
pop
mov
push
cmp
sub
or
jbe
add
push
xchg
dec
aad
dec
pop
sbb
hlt
fldt
jecxz
adc
inc
mov
int
and
push
push
cmpsb
fisttps
push
inc
out
cmc
mov
mov
mov
int
sub
in
es
push
jmp
jle
pop
xchg
jae
mov
int3
ss
icebp
xor
jmp
sbb
cli
aam
lods
inc
lcall
cmp
inc
outsb
inc
mov
xorl
mov
outsb
std
lret
sbb
add
pop
lcall
sub
mov
pop
scas
les
xchg
push
jecxz
movsb
jg
push
lea
mov
out
push
dec
add
insb
jne
sahf
push
add
js
and
xlat
push
cmp
dec
mov
sub
stc
nop
push
imul
cltd
sub
daa
and
push
int
and
inc
jg
shrb
fs
icebp
leave
mov
cmp
data16
sarb
xchg
mov
xor
inc
mov
jnp
xchg
scas
in
aad
pop
leave
sbb
jbe
mov
sub
xchg
fistl
jae
adc
adc
inc
lret
mov
mov
jmp
out
out
lret
rolb
dec
and
lods
pop
add
push
add
cmpsb
hlt
adc
fwait
mov
ljmp
push
fisubl
and
xor
mov
xchg
sbb
adc
aas
xchg
jbe
dec
pop
adc
cmp
xchg
pop
pop
jg
shrl
in
dec
aam
xor
mov
js
rorb
mov
das
mov
mov
xchg
fists
sub
out
movb
adc
pop
mov
in
repz
dec
in
push
aam
inc
insl
or
jb
mov
cmp
sbb
jge
or
mov
gs
lahf
sub
push
push
push
lret
cmp
xor
inc
outsb
xchg
mov
in
aam
xchg
fildl
mov
add
jmp
xchg
xor
push
js
ss
jae
push
rcrl
push
sub
loopne
mull
mov
loope
aam
clc
outsb
cmpsl
sub
mov
bound
mov
dec
mov
sbb
jl
jae
test
nop
ret
xor
insb
sub
adc
dec
fiaddl
pop
loope
mov
xchg
aas
xor
mov
add
sub
orl
test
enter
adc
pop
jnp
fildll
ret
test
or
inc
inc
pop
sub
cmp
fildll
adc
or
stos
mov
cltd
xor
leave
les
mov
repz
fdivrs
shlb
push
pop
scas
mov
xor
fadd
out
sbb
pop
stos
mov
jmp
jl
mov
lahf
data16
insb
cmp
imul
xor
mov
and
call
mov
pop
push
rcrl
pop
xor
ret
mov
inc
into
sbb
push
aaa
das
nop
push
pop
xchg
sbb
and
insl
cmc
and
adc
cwtl
push
xor
ret
pop
sti
test
xor
mov
bound
mov
addr16
mov
dec
push
sub
xchg
add
out
shrb
sbb
add
adc
add
adc
inc
sbb
add
int
stos
ja
mov
jl
xor
movsl
int
jecxz
decl
out
inc
mov
adc
gs
adc
inc
dec
ds
ljmp
pop
loop
fidivrl
mov
ffreep
xchg
fdivrs
cmp
enter
pop
cmp
rol
dec
imul
ja
mov
in
add
mov
sbb
orl
adc
sbb
jb
push
push
sub
jb
add
in
sahf
push
shll
pop
xlat
jns
lret
mov
mov
imul
mov
out
push
xchg
adc
out
sbb
sbb
mov
test
leave
push
das
jl
ffreep
and
adc
mov
das
ss
clc
vmovaps
sub
or
xor
sahf
mov
xorl
push
out
lods
cmp
scas
sbb
enter
outsb
and
cwtl
clc
jae
or
and
adc
rol
mov
int
pushf
divb
and
pop
push
pop
cmp
nop
push
popa
in
cli
push
sub
fsubrs
fdivrs
xor
cli
mov
jb
lcall
mov
dec
or
mov
nop
cs
mov
rcr
sub
enter
ss
xor
cmp
pushf
ja
pop
adc
xchg
repnz
adc
mov
pop
mov
jle
mov
inc
out
inc
movsb
mov
lods
pop
mov
test
jge
mov
fmul
lret
cld
jmp
in
sbb
mov
fsubrl
sbb
clc
js
imul
pusha
subw
das
pop
lock
out
test
ja
or
jmp
ljmp
inc
in
aad
lret
adc
int3
push
and
mov
cmp
or
cmp
adc
test
jne
test
sbb
xor
mov
js
sub
push
insl
dec
iret
ficoms
outsb
scas
mov
xchg
ja
push
cmp
cmp
popa
icebp
xchg
jbe
adc
cmp
mov
out
adcb
or
inc
dec
pop
mov
out
mov
pop
sti
out
cli
sbb
clc
sub
jmp
pop
adc
mov
pop
jl
lods
pop
dec
push
xlat
dec
and
idivl
mov
jnp
mov
or
pop
std
lds
ret
cmp
stos
fcoms
test
jle
scas
and
adc
xchg
push
mov
push
inc
cmp
xchg
outsb
inc
mov
rcrl
mov
adc
xchg
lea
mov
adc
inc
or
std
sbb
mov
adc
sbbb
es
enter
or
mov
bound
gs
loopne
mov
push
xlat
mov
hlt
push
or
mov
xchg
mov
cltd
mov
xchg
in
mov
mov
sbbb
ficoml
popa
sti
jmp
lods
ljmp
adc
aas
in
in
lahf
cs
mov
aad
mov
pop
fisttpl
loopne
divl
jbe
or
cld
dec
imull
mov
fisubrl
in
xor
out
insb
sub
ss
xchg
or
sahf
cmpsb
ljmp
insl
mov
xchg
out
or
cltd
mov
xchg
ds
into
add
mov
in
mov
adc
dec
dec
cmp
rcrb
aad
and
das
push
ret
insb
adc
xchg
js
fnsave
and
mov
jl
in
dec
push
cltd
jo
scas
inc
pushl
and
pushf
int3
mov
sub
adc
lock
xlat
and
repz
jb
aam
cmp
xchg
mov
push
xor
inc
gs
xchg
rcl
lahf
shrl
sbbl
xchg
rolb
dec
ja
rcll
roll
dec
or
adc
inc
call
sbb
push
call
cld
hlt
push
call
sbb
cmp
adc
xchg
loop
leave
cmp
lods
in
jno
into
test
mov
cs
imul
fcmovnb
xchg
mov
pop
pusha
popl
psubsb
mov
and
sub
aaa
xlat
push
roll
push
inc
fsubrl
js
push
fisubrs
or
xor
hlt
xchg
out
pop
loop
adc
sub
lods
dec
and
mov
xchg
jbe
repz
pusha
das
inc
mov
ffree
dec
push
ss
jb
cmc
jl
inc
daa
enter
pushf
sbb
call
mov
push
pusha
sub
mov
loope
push
loopne
xchg
fwait
or
xchg
out
lahf
pop
jnp
pop
xorb
mov
or
mov
adc
sub
rcl
clc
and
adc
cmpsl
push
xor
jge
cmp
or
inc
aam
dec
stos
popa
lret
jns
pop
fstpt
cmpl
dec
xor
test
jg
lret
iret
pop
cli
push
cmpsb
jo
jg
pop
add
add
pop
jmp
popf
mov
cli
loope
add
subb
mov
mov
jge
and
test
mov
dec
push
cmc
mov
or
dec
xor
in
sbb
test
push
int3
push
sub
in
sbb
fbstp
xchg
and
popf
shrb
test
adc
gs
ja
lods
jmp
fwait
lock
sarl
mov
jg
pushf
pop
sbb
add
pushf
xor
jne
leave
fistpll
push
inc
mov
jae
fwait
push
pop
shll
and
test
pop
loope
inc
arpl
mov
js
sub
or
mov
cmp
loopne
dec
sub
scas
test
sahf
mov
cmpsb
pop
scas
fiaddl
fistps
fnsave
fs
fcoml
jecxz
sub
cmpsb
mov
pop
ja
outsb
add
inc
cli
loope
push
int3
xor
gs
popa
shll
les
lea
pop
cmp
jecxz
in
pop
mov
sysret
dec
enter
jmp
gs
repz
pop
or
xor
and
ljmp
pop
adc
cmp
xor
xchg
cmp
xor
cmp
js
insl
xor
inc
out
and
and
and
pop
push
mov
mov
push
call
xchg
lret
cltd
jnp
pop
push
cltd
cmpsl
popa
add
xorb
sub
test
daa
in
xlat
int3
ficoms
pop
hlt
push
or
adc
mov
fwait
lods
movsl
in
and
adc
pop
and
lahf
rcll
pop
testb
scas
insl
ret
or
jo
jae
add
lods
jno
mov
mov
les
jmp
push
sbb
mov
pop
ja
sahf
adc
nop
mov
xchg
pop
popf
inc
mov
and
fs
jae
push
push
daa
pop
push
sbb
mov
or
lahf
hlt
sbb
mov
out
loopne
lds
pop
inc
shl
lret
mov
jo
jge
or
pusha
lret
pop
add
mov
adc
xor
xor
subl
push
xlat
aad
fbstp
loope
and
xchg
stos
inc
shll
mov
mov
clc
xchg
shrl
sbb
repnz
jno
loopne
outsb
and
int
xchg
push
jnp
mov
iret
lret
jbe
dec
movsb
dec
sub
inc
adc
push
outsb
mov
mov
in
push
push
std
jp
xor
ss
xor
sub
fsubrs
movsl
lds
int3
dec
sbb
xchg
mov
push
pusha
lods
add
test
jnp
fsubrs
xchg
repz
in
inc
or
xor
or
mov
ret
push
push
xchg
mov
pop
rclb
dec
pop
mov
mov
push
std
loope
xchg
xchg
cmpsl
sarb
imul
jo
inc
out
jb
fwait
repnz
sbb
cmpsl
sub
cs
aam
mov
pop
push
xchg
call
aam
mov
movsl
mov
push
test
in
adc
push
lret
in
mov
mov
push
mov
mov
fists
movsb
push
dec
es
push
cmp
arpl
and
mov
inc
or
aam
xor
fwait
jns
fadds
push
pop
repnz
int3
sub
sub
rol
mov
hlt
inc
push
and
push
inc
fld
jp
xchg
insb
dec
add
pusha
negb
cmp
pop
jp
mov
xchg
sub
jl
inc
in
jmp
jl
mov
fcomi
xor
int
xchg
cmpsb
std
rol
and
jp
push
mov
fnstsw
push
test
popf
adc
mov
xchg
insl
lock
xor
inc
pop
mov
es
shrl
idiv
mov
sbb
fisubrl
jno
pushf
ss
push
and
pushf
inc
pop
dec
sbb
mov
inc
dec
and
test
cmpsl
repz
leave
adc
mov
xchg
js
lock
sub
in
pop
mov
cs
push
jae
xor
enter
sbb
out
mov
out
into
push
call
rcrb
iret
mov
xor
mov
scas
in
out
test
push
fdivp
inc
dec
mov
xor
rol
sbb
lods
mov
lcall
hlt
sub
mov
popf
cmc
xchg
call
xchg
out
xchg
jbe
out
push
daa
lods
xor
fsubrl
or
mov
fs
shlb
pop
bound
dec
out
and
cmp
jecxz
or
xchg
inc
xchg
jge
jle
jge
lds
mov
out
inc
push
push
cwtl
push
mov
call
and
inc
or
mov
les
mov
in
popf
pop
in
lock
inc
xchg
xchg
pop
jp
jns
sub
adc
jle
popl
mov
jbe
inc
gs
mov
push
jnp
cli
inc
dec
ret
cmpsl
test
jle
aaa
add
lods
dec
mov
pop
add
in
mov
imul
clc
sub
ss
sbb
cmp
fcoml
jae
aam
adc
cmpsb
ss
adc
push
pop
fmulp
fs
call
leave
jo
or
push
stos
sbb
mov
loope
xor
fdivrs
sbb
and
test
mov
mov
pop
sarb
jecxz
dec
inc
jnp
stc
push
push
daa
push
lret
out
icebp
into
ret
bnd
adc
arpl
add
mov
lcall
roll
pop
push
pop
mov
mov
jl
push
xchg
add
push
cmpsb
sbb
or
jge
mov
sub
push
fs
imul
pop
cmp
iret
jmp
imul
inc
jno
repnz
loop
enter
sbb
cmp
xchg
insb
ficomps
mov
xchg
in
rorb
clc
sbb
sub
and
lret
inc
mov
addr16
lock
add
ljmp
ds
dec
xlat
insl
cli
cmp
scas
sub
and
mov
jmp
cmp
push
pop
adc
dec
loope
or
insl
adc
cwtl
or
shll
lret
pop
int3
sahf
sbbb
xlat
addr16
jl
mov
scas
mov
adc
movsl
inc
outsl
cmp
mov
inc
push
fstl
adc
sub
add
xlat
jecxz
lock
imul
dec
inc
repz
aas
daa
nop
jmp
repnz
pop
test
mov
pop
mov
out
test
movsl
leave
sbb
dec
jg
mov
mov
mov
and
lahf
xlat
or
out
sbbb
or
mov
leave
movsl
mov
shrb
sub
sub
outsl
jnp
or
push
sub
out
shll
inc
mov
arpl
lock
sbb
jo
adc
jp
push
mov
fwait
js
das
arpl
add
xchg
lcall
pop
ret
sub
mov
cwtl
jge
dec
gs
pop
out
mov
push
sbb
iret
cltd
dec
mov
and
call
cmpsl
pop
mov
push
sar
xchg
push
into
popa
fcompl
lea
mov
adc
shll
out
mov
stos
and
shl
jmp
adc
mov
mov
cltd
sub
or
mov
or
std
pop
in
bndstx
cmc
sti
loop
in
xlat
cs
xlat
jne
push
ja
orb
mov
stc
jno
sbb
sbb
inc
jo
jbe
jo
cld
movsl
lea
pop
mov
jbe
xchg
fnstenv
jecxz
jne
adc
daa
cmp
pop
cmp
pop
out
push
into
mov
daa
mov
loope
push
add
iret
movsl
lock
daa
mov
cmp
out
pop
pop
in
addr16
adc
xor
dec
in
mov
jp
test
mov
outsb
mov
mov
add
nop
test
andb
xor
push
pop
sar
cwtl
in
cmpsb
mov
stos
imul
seta
pop
adc
std
lods
fisttpl
mov
sbb
add
dec
mov
push
int
adc
cld
sub
sub
mov
add
push
pushfw
lcall
sbb
sahf
pop
sbb
insl
inc
pop
popa
lea
outsl
push
hlt
cmpsl
xor
popl
sti
xchg
mov
mov
cltd
or
pop
adc
cmp
lea
dec
out
sbb
test
pop
cmp
imul
jl
je
outsb
shrl
mov
out
xor
xchg
test
mov
push
and
push
jge
inc
mov
pop
les
push
ret
mov
loopne
sbb
dec
jno
jo
pop
dec
scas
xor
repz
pop
cs
mov
dec
mov
loopne
in
hlt
mov
out
sbb
lahf
inc
mov
jb
mov
das
imul
and
and
xchg
add
mov
push
movsl
in
mov
push
and
test
jae
mov
mov
xchg
adc
mov
xchg
je
fcompl
test
xchg
mov
lock
popf
shld
pop
adc
sub
lret
xchg
dec
dec
es
jnp
enter
ss
and
ficoml
sti
and
es
rclb
mov
rcll
ret
fst
jae
pop
xchg
add
rcrb
fisttpl
mov
clc
inc
pop
je
int3
sbb
pop
or
mov
xchg
sbb
add
or
into
enter
fiaddl
inc
push
cmpsl
popaw
mov
add
cmp
sbb
xchg
adcl
or
sbb
sbb
cmc
cmp
cs
and
sbb
pop
xlat
sub
mov
lea
jno
mov
add
xor
movsl
xor
scas
out
out
sbb
cmpsb
repz
cmp
aaa
ss
movsb
gs
xor
test
in
stos
mov
mov
jbe
fnstenv
add
jmp
sbb
test
mov
xor
xchg
xor
movsl
ss
dec
cli
outsb
imul
daa
roll
dec
sbb
mov
repz
mov
insl
sub
hlt
aam
scas
sub
loopne
popf
or
pop
pop
xlat
jle
xchg
daa
mov
icebp
mov
xchg
xchg
sub
scas
mov
sti
stos
fsubl
sub
jns
add
leave
insb
sub
jae
mov
pop
insl
pop
in
push
stc
sub
fnsave
or
pop
dec
sub
push
pop
leave
fisubs
mov
push
and
sbb
ss
shr
and
pop
mov
xchg
ljmp
xor
xchg
cmpsl
push
xchg
mov
mov
push
lret
jl
push
or
rcr
orb
and
lahf
xor
in
test
in
mov
adc
loopne
inc
lahf
movsb
lret
cmpsl
enter
mov
jnp
fldenv
mov
sar
mov
sbb
mov
inc
push
test
xchg
jbe
jo
or
cltd
fwait
push
lret
mov
xor
xlat
inc
push
in
insb
dec
insl
sub
sbb
divl
dec
push
inc
cli
das
rclb
inc
mov
pop
shr
addb
repnz
stos
and
xchg
or
mov
fnstcw
imul
push
xchg
add
sbb
add
and
scas
vpsrlq
adc
hlt
cld
sub
xor
push
cli
cmpsb
outsb
ds
into
int
push
mov
out
jp
inc
pop
jo
cwtl
mov
adc
mov
xor
mov
cmc
and
and
je
nop
inc
bound
sbb
sub
test
add
and
mov
xor
dec
lods
mov
mov
mov
loopne
sarl
cwtl
ret
push
push
mov
jae
aaa
aad
lret
idiv
lahf
scas
stos
in
jo
jns
jbe
or
es
std
xchg
in
push
sub
movsl
pop
mov
pop
cmp
lcall
insb
iret
cmp
pop
in
std
jg
fsub
jnp
aam
add
fs
mov
sbb
js
mov
andb
xor
lret
icebp
lret
in
sub
xchg
stos
jae
filds
nop
adc
out
push
imul
jno
pop
pop
jle
cltd
shll
stc
das
add
add
jle
add
mov
fisubs
pop
sbb
pop
mov
mov
pushf
mov
iret
jecxz
push
test
sahf
mov
jbe
andb
movl
mov
in
or
out
mov
sub
pusha
cltd
push
pop
testl
insl
mov
push
add
test
mov
jp
push
mov
je
fbld
xchg
insb
seta
dec
xor
test
cmp
mov
push
sub
jp
mov
push
out
fisubrs
cmpsb
push
push
ret
pop
pop
sub
out
add
cld
cli
sub
mov
leave
outsl
ss
cmp
add
and
stos
mov
xor
pop
jge
xchg
orb
mov
pop
bnd
sub
lods
sub
movsb
rclb
scas
push
fwait
cmp
xor
mov
mov
scas
pop
xchg
and
dec
stos
in
loope
push
mov
add
sbb
std
xchg
jo
mov
xor
fsubp
mov
rclb
mov
loope
das
movd
xchg
cs
and
jbe
arpl
aas
jnp
out
mov
sti
enter
pop
ds
out
insl
xor
cs
push
jmp
fdivrl
leave
sahf
push
cmpsl
push
mov
and
aad
adc
push
push
xor
xor
and
dec
push
sarl
std
out
and
shrl
pop
lret
and
inc
andl
in
shrl
aaa
mov
add
push
icebp
sti
inc
mov
ret
rcrb
sbb
clc
push
fs
repz
push
scas
and
dec
fisubrs
repnz
fimuls
fucomp
mov
mov
jo
loop
mov
mov
sbb
mov
jg
inc
fdivrs
push
adc
test
icebp
fwait
divl
lret
popa
in
xchg
fisttps
ja
pop
lret
push
push
push
rorb
rcrb
pusha
mov
adc
fstl
repnz
pop
in
adc
ds
pop
ja
sarl
or
push
push
adc
test
xchg
lret
pop
out
jp
lock
jno
test
jb
sub
inc
xchg
add
aaa
pop
hlt
fnstcw
test
cli
jnp
movsb
or
mov
fdivrs
or
hlt
mov
dec
pop
xlat
jne
add
add
pop
in
push
testl
xchg
stc
icebp
js
aas
cmc
into
pusha
int
mov
adcl
scas
gs
fucomip
adc
test
pop
jecxz
clc
int
mov
dec
mov
mov
sbb
cmp
data16
jmp
adc
lea
iret
iret
and
idivl
sbb
lock
or
or
mov
les
into
dec
aad
xchg
lock
ds
shlb
mov
imul
mov
inc
jg
std
in
pusha
mov
jg
jb
adc
xor
in
scas
adc
stos
test
inc
int3
push
dec
xor
orl
insb
lcall
stc
sahf
lods
in
stos
jle
arpl
movsl
decl
shl
fildl
adc
or
mov
push
call
jge
mov
push
sbb
popf
das
hlt
pop
add
enter
adc
dec
rorl
lret
push
xor
jmp
and
addl
ret
mov
test
or
test
mov
mov
mov
xor
pop
cmp
jge
int
mov
cmpxchg
loope
xchg
fwait
add
mov
inc
lea
push
subb
insl
xchg
mov
aas
in
add
add
psrlq
dec
and
lods
push
inc
push
ja
fdivrl
xchg
and
fsubrl
adc
rolb
cmpsl
jg
leave
mov
addr16
push
sub
pushf
imul
scas
les
loope
inc
pop
mov
int
cli
daa
sbb
mov
imul
ja
cli
es
cwtl
das
push
jno
aaa
jae
sbb
ljmp
jns
pop
push
inc
dec
jns
in
mov
arpl
sub
xor
imul
addr16
mov
fisubrl
outsb
sar
je
add
sbb
and
pop
xchg
cmp
movsl
jg
xchg
add
jo
xchg
and
test
push
mov
push
inc
jl
filds
xchg
mov
fcoms
or
add
xchg
lods
push
sub
dec
in
xchg
scas
iret
cmp
call
inc
aam
xor
imul
mov
adc
stc
add
sbb
adc
push
fstpl
call
cld
scas
addr16
sahf
decb
mov
in
add
aas
cltd
out
stc
js
jmp
sbb
mov
mov
fwait
clc
xchg
sbb
cmp
rclb
cs
sub
sub
mov
push
jno
xor
mov
fstl
push
and
xchg
xchg
hlt
mov
fwait
pop
fsubrl
scas
insl
mov
add
lret
into
in
xchg
scas
in
cwtl
scas
pop
mov
sbb
cmp
std
enter
daa
jne
test
ljmp
add
xor
loop
mov
out
cmp
inc
push
gs
out
mov
js
fs
cwtl
jnp
cwtl
mov
cs
mov
icebp
or
and
push
or
decb
dec
fs
bound
jl
xchg
sub
rcrl
mov
aam
push
fdivrl
popa
or
cmc
xchg
icebp
inc
cld
push
fsubs
adc
ss
out
mov
std
and
int
jo
xchg
bound
inc
mov
int
mov
xor
and
popa
jg
xor
cmpsl
ret
outsl
mov
scas
stos
push
pop
dec
add
es
cltd
mov
add
push
xchg
jl
dec
sub
jb
or
jge
test
fsubr
stos
pop
sbbb
mov
or
into
stos
repnz
push
dec
inc
dec
cmc
add
jne
pusha
inc
clc
push
gs
aaa
sub
mov
xor
nop
daa
mov
cmc
scas
push
jg
sbb
fcomps
lcall
rcrb
mov
adc
xchg
inc
fidivrl
dec
mov
push
jmp
pop
adc
push
adc
push
lods
stos
xchg
std
pushf
imul
jo
ret
add
xchg
call
sahf
lods
rcll
les
clc
sbb
sbb
cwtl
ja
and
loopne
jne
hlt
das
fs
sarb
popa
mov
push
cmp
aas
shrb
mov
mov
push
xor
lods
loopne
loopne
xchg
inc
in
gs
pop
cltd
jnp
call
sub
das
push
jo
add
dec
daa
adc
lahf
xor
lods
rol
fisttpll
cmp
mov
mov
pop
lea
ficompl
sub
clc
adc
movsl
iret
lock
pop
movsb
movsb
int3
arpl
lds
or
jl
push
cmp
ss
ret
push
adc
xor
xor
xchg
mov
jge
add
cmp
mov
mov
out
arpl
pop
push
dec
imul
imul
jno
adc
lods
inc
in
pop
cltd
or
sub
pop
or
xchg
pop
pop
xor
mov
push
je
add
push
inc
loope
jno
push
xor
fstpl
jp
jae
call
push
clc
test
loopne
ja
fisubrl
push
cmp
or
cmpsb
cmpsb
icebp
adc
mov
push
jb
xchg
push
mov
mov
jle
scas
mov
inc
fiaddl
lods
add
xchg
into
nop
xor
shll
mov
mov
fcomp
je
imul
movq
dec
push
push
sbb
in
xor
aaa
lock
andb
dec
js
mov
push
outsl
inc
add
inc
push
jb
mov
lods
aad
jb
mov
xlat
mov
leave
ret
call
xchg
popa
push
aas
arpl
icebp
divb
addr16
pop
adc
mov
fdivr
and
xor
dec
lret
daa
inc
xchg
test
in
movsb
sub
mov
pop
lock
push
mov
jmp
or
shrl
inc
shll
jnp
inc
xchg
or
inc
lcall
and
mov
adc
clc
test
adc
dec
dec
notl
push
ss
pop
insl
sub
xchg
mov
lock
shll
inc
adc
jb
mov
jo
shl
mov
test
xchg
mov
xchg
jo
std
pop
add
lahf
mov
icebp
test
add
push
sub
lcall
lods
enter
xor
dec
lret
or
jecxz
adc
out
mov
mov
call
out
sahf
mov
pop
jno
xor
and
or
lea
out
jle
pusha
and
push
fadd
inc
in
call
call
rcrl
xor
cli
outsl
fsubr
xchg
mov
push
adc
pop
sub
dec
xor
cpuid
loopne
sub
int
les
imul
cmp
mov
loope
addr16
arpl
aas
into
jl
ss
push
mov
daa
and
sti
aam
scas
fucom
mov
leave
cmp
test
arpl
or
sbb
movsl
loop
sub
fisubrl
and
inc
add
and
test
cmp
mov
pop
stos
cmp
aas
in
stos
jo
jecxz
inc
hlt
push
mov
dec
dec
mov
mov
cmpsb
xchg
pop
push
aad
pop
mov
mov
jo
xor
push
cwtl
xchg
lret
jp
mov
icebp
xor
jnp
arpl
cmp
andb
cmpsb
js
xor
js
pop
push
inc
test
mov
add
out
test
dec
addr16
mov
dec
cmp
aaa
mov
dec
mov
add
outsb
mov
sub
adc
stos
mov
scas
adc
aas
push
push
jno
inc
or
and
gs
xor
xlat
fstpl
xchg
and
dec
or
sub
inc
loopne
fs
aas
sbb
sahf
es
pop
adc
int
mov
push
mov
xchg
add
sarb
loope
fstps
dec
jmp
push
sbb
or
push
out
xchg
sub
fstps
lret
xor
stos
enter
ljmp
mov
clc
test
inc
sbb
pusha
outsl
ss
in
aad
sub
test
cltd
mov
mov
inc
and
push
and
and
dec
dec
mov
clc
stos
inc
xor
pop
mov
add
out
fidivrl
bound
mov
sahf
pop
xor
lds
xor
das
mov
push
ljmp
ljmp
pop
mov
nop
sub
adc
sub
fwait
sqrtps
jnp
adc
in
arpl
mov
lods
enter
sahf
cmp
sub
push
daa
cmp
jae
mov
shl
jg
shl
cmp
dec
test
lret
jp
cmpsl
shl
sub
xchg
jge
icebp
ret
jnp
jo
jg
push
inc
addr16
xchg
push
inc
dec
outsl
jg
jae
mov
jmp
lock
ja
push
cmpb
sbb
sahf
pop
jns
cmpsb
cmp
pop
repz
mov
inc
pop
mov
ss
sti
dec
inc
fidivrl
sbb
ja
loopne
add
out
test
jae
repnz
cmpb
xchg
mov
fistl
or
dec
sub
div
jmp
fcoms
pushf
fidivl
loope
sub
ret
jg
sbb
movsl
mov
jo
mov
ds
pop
pop
jo
or
insl
push
stos
pop
inc
cmc
dec
sti
sub
and
repz
sub
xchg
in
adc
pop
jo
push
iret
cmp
addr16
or
test
pop
cld
mov
pop
outsb
mov
ljmp
inc
lds
pop
cmc
xchg
gs
xor
sbb
or
xor
int
shl
out
pop
shlb
pop
jge
lea
lret
dec
pop
and
sbb
movsb
and
movl
mov
lahf
jl
gs
shrb
adc
inc
pop
iret
lock
sub
and
jnp
pop
shlb
and
cli
sbb
xchg
pushf
add
jae
cmp
dec
mov
ret
jp
rcr
dec
mov
stc
mov
adc
insl
cmc
mov
adc
enter
in
hlt
sti
lods
sub
repnz
ret
movsl
addl
sbb
repnz
cld
stc
sub
dec
stc
inc
jle
hlt
cmp
rcll
fistpll
test
cmc
push
fcoml
dec
sbb
mov
dec
outsl
ret
xor
xchg
clc
insl
loopne
lret
test
push
push
pop
lret
aas
rcrb
fists
movsb
xor
xor
add
iret
aam
xor
mov
inc
gs
mov
pushl
outsb
ss
lods
rcll
add
movl
adc
les
mov
rcrl
dec
scas
aad
jecxz
enter
loope
add
int3
lea
inc
rorl
mov
test
xchg
sub
pop
mov
mov
dec
fcompl
cli
push
mov
lods
push
jnp
jp
cmpsb
adc
dec
sbb
aam
cmp
fbstp
push
cmp
aad
cwtl
in
bound
cli
cmp
mov
mov
mov
dec
lcall
outsb
into
sti
arpl
add
mov
bound
faddl
test
mov
das
es
dec
mov
cli
adc
pop
xchg
outsb
push
inc
pop
mov
push
jmp
adc
iret
int3
mov
mov
lock
mov
push
cmp
in
daa
icebp
jnp
inc
mov
xor
cs
arpl
inc
test
movsl
sbbb
jecxz
jecxz
mov
je
out
sbb
push
mov
xchg
dec
cwtl
decb
test
mov
pop
out
xor
icebp
cmp
out
dec
movsl
das
cmpsb
lds
lret
sub
mov
pop
in
inc
repz
and
inc
push
cmp
lods
sub
inc
ljmp
shll
adc
jbe
aaa
pop
inc
in
pop
cmp
or
push
into
ret
push
lahf
mov
scas
add
rcrl
aaa
dec
and
xor
xchg
bound
gs
adc
cmp
ret
jg
sarb
mov
jecxz
lcall
nop
cs
push
in
mov
jl
movsb
dec
sti
dec
sub
or
pop
int3
gs
inc
roll
jmp
and
lcall
cmpsb
gs
jnp
cmpsb
lods
ljmp
les
or
rcrl
outsl
sahf
cmp
sarl
nop
xchg
je
dec
ds
lret
gs
or
xor
mov
repnz
lcall
add
test
inc
push
xchg
ds
orl
sbb
imul
xor
jns
das
sub
lret
add
xor
fdivr
push
pop
cmpsb
cmp
xorb
movsb
popf
arpl
push
xchg
mov
push
insl
push
jb
imul
adc
push
jne
dec
cmp
xchg
push
dec
inc
inc
movsl
xor
mov
popl
sbb
xchg
rcrb
sub
je
popa
dec
sbb
scas
add
sub
mov
ret
sub
pop
cmp
into
int3
dec
dec
imul
pop
cs
sbb
hlt
dec
movsb
push
adc
je
mov
insb
push
cmp
push
repnz
movsl
int3
jae
ss
push
pop
je
inc
mov
stc
andl
dec
pop
cmpsb
test
adc
adc
aaa
cmp
push
lds
repnz
enter
jne,pn
xchg
and
icebp
clc
gs
call
or
xor
xchg
jns
std
stos
lret
sub
xchg
int
jg
add
or
test
mov
sub
shl
dec
lods
add
sub
xlat
sti
push
in
fs
in
js
xchg
pop
cmpsl
clc
add
scas
xor
sub
in
xor
gs
inc
pushf
mov
into
loop
mov
mov
rol
loope
cmp
xchg
out
dec
cmp
cltd
sub
mov
pushf
les
jmp
ss
fsubrp
stos
push
fs
lcall
je
push
inc
inc
adc
dec
repnz
fists
lods
out
call
in
and
pop
pop
int3
add
clc
fs
ljmp
and
imul
addr16
push
sbb
and
es
or
mov
pop
jmp
aaa
movsl
icebp
push
test
movsl
jns
and
and
pop
mov
cmp
push
stos
or
or
daa
mov
lds
out
cltd
test
cmp
xchg
repnz
jo
insl
mov
lods
push
ficomps
shrl
pop
xchg
sub
mov
leave
in
pop
je
pusha
test
mov
outsb
in
sub
push
jl
in
jno
test
mov
out
rcll
cmpsb
lock
pop
pop
xor
mov
aaa
mov
mov
xorb
pop
imulb
hlt
cmp
pop
jge
jl
cld
popf
lcall
pop
and
pop
push
in
mov
inc
xor
xchg
testl
test
loope
mov
jo
jne
js
je
adc
aas
das
inc
not
push
and
fmul
pop
mov
sbbl
xchg
add
fcomp
sub
mov
lret
push
lea
ret
aas
outsb
inc
push
cmpsl
subb
arpl
js
fcoms
pop
call
imul
jp
imul
insl
fld1
mov
inc
jecxz
mov
cmc
push
jge
inc
xlat
aad
aad
xor
cmp
dec
loopne
hlt
ret
jbe
jns
imulb
adc
xchg
sbb
jp
xorb
push
jg
add
frstor
arpl
cmpsl
cwtl
scas
and
in
aam
mov
push
mov
mov
xchg
pop
xor
dec
push
popa
and
call
rcrb
xchg
mov
scas
push
and
cmp
mov
sbb
cmp
mov
movsb
aas
fs
pop
mov
bound
out
xchg
ljmp
pop
jmp
jg
dec
stos
xchg
jae
pop
in
jo
lods
jecxz
imull
xorl
xchg
pop
fwait
mov
add
ja
mov
clc
cwtl
push
jmp
or
jb
and
mov
popa
and
insb
popf
cli
mov
lock
dec
cmp
je
dec
xor
sub
xchg
and
push
mov
or
push
xchg
xchg
jle
cmp
jbe
mov
mov
test
sub
cmpl
inc
mov
mov
inc
int3
jnp
xor
into
int
mov
jge
or
dec
inc
lods
dec
push
jae
cmpsl
das
test
aas
out
and
lret
cmp
insl
xchg
popa
push
fcmovb
fcompl
bound
adc
les
mov
int
jmp
or
mov
imul
iret
fsubrl
repnz
push
cmpsl
icebp
les
testb
xlat
pop
and
clc
jg
loope
fisubl
sub
dec
or
xor
bound
inc
xor
jl
rcrl
mov
in
jb
mov
push
loop
outsb
sti
sbb
fcompl
idivb
jno
jno
jge
adc
ficoms
add
jae
cltd
mov
fisubl
jecxz
out
dec
rcll
idivl
add
inc
push
jae
cmp
push
repz
outsb
cmc
lds
rorl
aad
lods
xchg
ficoml
jns
mov
sub
lret
mov
push
rcr
jmp
test
ret
jb
stos
notl
iret
fisttpl
jne
rcrl
push
out
adc
xor
flds
incb
pusha
lods
int3
in
cltd
std
gs
movups
orb
aas
pop
jns
pop
ljmp
in
push
or
sbb
daa
pop
fwait
add
xor
and
mov
xor
fisubs
hlt
js
mov
jae
imul
mov
dec
add
ret
aas
pushf
pop
cmpsb
cmp
dec
in
ret
add
lahf
push
jmp
mov
and
add
stc
pop
xchg
orl
pop
and
test
xorl
xor
pusha
pop
adc
out
xchg
pop
popf
movsb
out
xchg
adc
or
or
sub
xchg
adc
insb
mov
addb
and
mov
sbb
push
arpl
pop
faddl
mov
adc
jmp
addr16
rolb
out
inc
lcall
push
cmc
loope
xchg
adc
mov
push
push
mov
cmpsl
mov
cmp
lock
outsb
jne
stos
ret
push
sub
or
sub
inc
add
jbe
dec
icebp
jo
jmp
mov
lcall
xchg
fstpl
mov
cmp
dec
add
cmp
mov
add
dec
or
mov
stc
or
out
sti
xor
movsl
nop
dec
inc
mov
pop
pop
xor
ja
popf
mov
int
sti
xchg
xchg
cli
pushf
int
mov
pop
sbb
imul
push
mov
pop
inc
inc
or
push
lret
andl
jbe
sub
adc
pop
cmc
in
fdivrl
cmc
jmp
sbb
adc
jl
addr16
lds
push
adcb
sbb
out
mov
xor
comiss
inc
push
mov
divb
aam
add
mov
insb
mov
popa
ss
aad
lret
mov
fadds
pop
mov
sbb
jge
outsb
jo
sub
add
stos
xchg
pusha
aaa
adc
gs
clc
jg
lahf
mov
fmull
loope
xlat
mov
cwtl
movsl
pusha
inc
out
lods
xchg
js
fwait
and
pop
notb
and
pop
and
into
dec
pop
stc
pop
pushf
outsl
add
inc
shlb
mov
mov
sub
dec
mov
mov
pop
jae
popf
jmp
out
push
jb
fidivrl
add
decl
icebp
inc
xchg
xor
push
leave
jl
filds
adc
je
out
out
xor
add
ret
xor
xchg
ljmp
test
push
pop
pop
stos
in
call
in
in
xchg
jle
mov
cmp
outsl
in
je
nop
or
inc
lahf
adc
std
push
sahf
out
dec
fnstenv
add
lahf
aad
lret
bound
jmp
pop
and
int
int
mov
inc
sub
add
test
cmpsb
dec
rorb
loop
sub
and
repnz
push
mov
add
mov
xor
ret
sbb
addl
push
outsl
mov
sub
jmp
arpl
push
and
popa
cmp
shl
inc
imul
adc
mov
jb
jns
inc
popl
push
mov
add
mov
adcl
xchg
xchg
adc
jne
push
sbbl
xor
sbb
dec
and
jnp
inc
mov
xor
fistpll
rorl
sahf
or
xchg
push
pop
insl
lcall
sub
bound
inc
mov
mov
mov
ret
mov
jg
jl
movsl
mov
jl
adc
mov
popf
loop
jl
cli
ss
and
jl
xchg
mov
xlat
mov
js
dec
jno
xchg
js
into
pop
pop
test
inc
mov
push
pushf
pop
mov
les
es
mov
dec
pop
adc
es
xchg
add
inc
jo
dec
pusha
lea
dec
mov
aad
sub
dec
mov
arpl
and
push
cwtl
mov
enter
ret
adc
mov
mov
es
or
into
cld
xchg
add
jmp
mov
lahf
jb
loopne
insb
fwait
icebp
fnsave
jae
adc
and
inc
inc
xchg
insb
sti
mov
addb
jae
pushf
dec
mov
test
jns
fisubs
fstpt
fisubl
repnz
cmp
mov
jae
into
subl
or
push
insl
or
xor
inc
orl
stc
rcrl
test
push
adc
popf
subb
adc
sub
add
outsl
out
and
ljmp
lret
mov
ficoms
movd
dec
outsl
shlb
and
push
xchg
cmp
scas
cwtl
push
or
cmp
lds
call
aam
lcall
dec
sbb
cmp
mov
leave
test
sub
jg
sbb
inc
mov
lret
pop
fisttps
test
lods
daa
repz
loopne
in
ljmp
xchg
jo
jge
lods
mov
fwait
cli
xlat
cmp
jmp
clc
iret
jmp
xor
loop
lods
jo
aad
lock
and
shlb
addr16
mov
dec
mov
pop
icebp
mov
push
adc
pushf
jae
push
int
enter
mov
ljmp
dec
xor
pop
fidivs
pop
leave
mov
xchg
mov
jmp
push
sahf
jno
dec
shll
mov
mov
je
arpl
jb
lret
insb
lea
mov
das
stc
pusha
cmp
pop
xchg
xor
es
fildll
repnz
lods
fidivrs
or
mov
inc
fcmove
inc
int
push
push
in
out
rorb
iret
inc
pop
cmp
mov
icebp
lret
out
pop
gs
cld
xchg
insb
sbb
mov
dec
xor
dec
add
std
dec
and
int
and
xor
sahf
mov
fsubl
cli
inc
push
mov
or
push
mov
inc
inc
inc
loope
addr16
filds
aad
xchg
aam
push
dec
les
lock
mov
jecxz
jno
inc
dec
stos
ljmp
stos
aam
flds
xchg
pop
cmc
or
cmp
pop
sub
ret
jmp
mov
fisubrl
scas
pop
dec
sbb
sbb
fs
or
in
xchg
mov
loop
xchg
push
inc
insl
sar
scas
add
or
notl
out
or
push
in
andl
daa
cmp
test
mov
xchg
lods
insl
lock
movaps
pop
mov
cmpsl
pushf
adc
iret
ss
xchg
icebp
orb
and
or
inc
and
es
jl
sbb
repnz
hlt
mov
clc
jle
fstl
xor
cmpb
fsubs
pop
loopne
or
rcr
aad
mov
pusha
aas
add
arpl
cmp
andb
repnz
mov
or
xchg
incl
mov
das
mov
mov
fldl
xor
cmpsl
dec
mov
xchg
dec
dec
leave
mov
ljmp
mov
or
mov
xchg
cld
testb
sub
aam
lcall
jnp
call
mov
int3
lret
adc
mov
jle
sbb
mov
sahf
xor
dec
xchg
lock
lcall
cltd
mov
aad
cltd
and
in
jb
xchg
push
sbbl
outsb
in
cmp
mov
jno
push
inc
pop
rcll
jnp
pop
lds
arpl
pop
cmp
stos
inc
ret
sti
and
xchg
aaa
pop
imul
shrl
fldcw
jle
push
mov
or
add
aam
call
or
jnp
push
popf
fimull
dec
inc
and
js
cmp
mov
dec
add
je
addr16
ja
dec
pop
ja
pusha
cwtl
sub
inc
jns
jae
pop
jmp
sub
not
les
test
xor
mov
mov
or
sbb
mov
nop
dec
xor
insl
ror
dec
lahf
leave
out
imul
popa
pop
fsts
jno
popa
call
mov
add
aad
in
jnp
add
inc
mov
iret
out
xor
enter
lods
jmp
pop
into
es
lret
jecxz
aaa
leave
xchg
mov
adc
mov
daa
in
jo
dec
or
mov
sub
push
mov
inc
dec
pop
dec
push
sbb
sarb
in
sub
xchg
dec
and
ret
hlt
cmpsl
jecxz
divl
xchg
xor
lcall
cli
xchg
dec
and
cmc
adc
imul
scas
xchg
xchg
xchg
inc
cmp
ja
xlat
outsb
insl
xchg
pop
sub
cmpsb
cmc
lcall
jne
std
adc
sub
mov
cld
pop
aas
xchg
mov
xchg
push
mov
pushf
adc
cmp
dec
mov
push
sub
or
out
repz
in
pop
ret
and
adc
cld
xchg
fbld
mov
xlat
dec
insb
jae
lock
insl
xor
pop
or
nop
lcall
adc
and
mov
fsubrp
xchg
mov
sbb
mov
ja
inc
mov
jb
and
lahf
adc
mov
loop
stos
xchg
or
add
mov
push
test
rcrb
arpl
dec
pop
mov
into
ds
add
fwait
cmpl
add
push
movsb
mov
test
sbb
stos
insl
mov
imul
shrb
ret
cmp
inc
xchg
dec
loope
sbb
mov
dec
sub
arpl
jbe
je
mov
les
shll
sahf
cmp
xchg
rclb
lret
fmuls
ja
call
lea
outsb
push
push
pop
lods
movsl
pop
pop
imul
popa
fs
pop
or
or
shlb
sbb
fsts
push
xlat
mov
jge
cltd
cmp
pop
movsl
adc
mov
cmc
int3
xor
jmp
sbb
daa
mov
mov
cld
xchg
push
mov
sbb
push
daa
cmp
shll
dec
repz
mov
pop
mov
xor
fwait
pushf
inc
and
ds
mov
pop
int3
in
inc
std
xlat
cmp
inc
loope
inc
lods
mov
into
in
lahf
scas
rcll
mov
aaa
add
mov
fisubs
test
mov
test
aas
cmc
data16
cmp
test
jge
xor
int
push
data16
xchg
fs
inc
inc
in
cmpsb
les
inc
mov
and
out
mov
sahf
pop
icebp
and
iret
xor
rcr
inc
sbb
popf
cmpsl
addr16
aam
jne
push
jb
sbb
add
mov
ljmp
ss
fists
cld
test
fldt
jns
sbbl
dec
mov
mov
sub
cmpsl
repnz
outsl
std
and
test
push
call
add
lds
push
xor
cmp
fs
cld
pop
ret
pusha
jbe
jbe
pop
mov
push
adc
test
shrl
or
sub
push
cmp
sti
inc
inc
cmp
and
jp
test
outsl
push
inc
jae
mov
lea
andb
mov
add
int
lea
fsubrs
mov
enter
fucomip
sbbl
add
add
dec
inc
call
lret
pop
inc
movsl
mov
test
pop
jnp
aad
sbbb
pop
cmpsl
mov
cmp
or
add
out
repnz
stos
xor
inc
test
push
cwtl
adc
adc
lods
lret
inc
nop
lods
ss
repz
mov
pop
test
mov
sub
cli
aas
pop
lds
add
outsb
mov
adc
in
inc
adc
mov
iret
or
scas
cmp
push
bnd
movsl
jp
pop
aaa
adc
xor
fucomip
pop
cmpsb
cmp
and
imul
es
xor
popa
push
idivl
test
decb
pop
mov
scas
mov
mov
sub
xor
pop
push
popf
inc
pop
xlat
xchg
call
cmp
movsl
cltd
shl
or
pop
ds
dec
pop
mov
or
in
inc
imul
les
aaa
lock
pop
mov
pop
aaa
pop
cmpsb
xchg
pop
call
fsts
fisttps
add
xor
push
inc
xlat
cmp
pop
adc
xor
jecxz
dec
stc
fisubs
cld
cmc
fidivs
fldt
subl
jns
ret
xchg
imul
lock
fwait
mov
loopne
mov
daa
xchg
ja
arpl
lea
push
dec
cli
sub
fdivrs
or
cld
dec
push
rolb
lods
dec
dec
mov
cmpsl
dec
or
jns
repnz
loop
inc
xchg
xchg
dec
ljmp
adc
mov
push
or
sbb
loope
ret
inc
out
jge
movsl
cld
dec
dec
lret
push
repz
js
stos
movsb
repnz
rorl
in
xchg
xor
cmp
icebp
pop
inc
mov
adc
jge
xchg
sti
inc
fistpl
jns
fwait
mov
call
xor
mov
fs
pop
dec
xor
xchg
mov
rcrl
loop
out
or
stos
jmp
imul
test
cmp
pusha
ss
or
xor
jl
jbe
jb
dec
inc
scas
cmc
xchg
pop
xchg
mov
out
lods
xchg
mov
jb
mov
jg
cmp
lret
cmp
pop
push
pop
sub
call
mov
cmp
dec
add
cmp
mov
adc
sbb
xchg
fldl2t
push
addr16
scas
sarl
jno
xchg
lret
sbb
pop
in
cmpsb
ljmp
lret
inc
pop
stos
bswap
cmp
jmp
addr16
adc
jbe
jle
into
imul
lods
mov
lock
cmp
mov
and
jne
scas
jge
insb
je
gs
mov
rcrl
push
push
loop
mov
lods
jp
int3
lret
sub
cmpsl
scas
mov
addb
add
add
popa
jnp
arpl
sbb
inc
rcrb
mov
jmp
xchg
sti
imul
lret
cmp
jecxz
mov
mov
out
dec
xchg
push
cltd
cmc
iret
into
pop
js
in
jns
push
rol
adc
test
icebp
pop
jl
ror
mov
cs
mov
das
push
or
ficomps
dec
in
xchg
add
mov
and
xchg
adc
lds
mov
mov
jge
lock
and
push
cwtl
rep
lds
hlt
out
push
stos
adc
adc
inc
arpl
push
scas
jg
and
mov
and
cmc
xchg
adc
pop
cwtl
adc
pushf
lods
xlat
movsb
cmp
add
in
ja
sbb
inc
push
xor
push
or
adc
js
leave
sub
aad
outsb
mov
push
mov
jmp
cmp
out
inc
add
fildll
push
xor
dec
xchg
fcmovnb
lcall
lcall
dec
xchg
imul
or
and
jb
jg
and
cmpsb
stos
inc
fcoms
negl
scas
cwtl
das
sbb
or
leave
cmp
notb
idivl
cs
loop
repz
mov
or
mov
cmp
imul
icebp
movsl
insl
loop
mov
pop
jns
shlb
out
sub
add
fs
adc
and
dec
addr16
or
or
and
arpl
cmp
xchg
stos
add
dec
jecxz
call
imul
xor
in
mov
mov
insl
mov
pop
call
dec
mov
cmpb
insl
sub
xchg
fisttpll
and
cmp
cli
test
mov
dec
in
push
pop
dec
pop
pushf
imul
lods
enter
clc
pop
or
and
pop
xchg
adc
mov
movsb
jge
es
hlt
nop
add
xchg
adc
jmp
xlat
jmp
mov
sar
add
mov
and
push
pop
in
jmp
rcrl
pop
ljmp
and
fstp
push
out
lds
aaa
cli
mov
lods
lock
lea
xchg
adc
push
jg
dec
mov
mov
cmp
int3
lock
sub
sbbl
cmp
adc
pop
dec
fistps
out
xor
fdivr
jle
pop
jge
dec
xlat
sbb
dec
das
jmp
sub
cmp
xchg
pusha
outsb
lret
sbb
test
jb
dec
adcl
xchg
or
inc
repz
loopne
rclb
add
shll
push
or
xchg
adc
loopne
in
mov
inc
xor
sbb
andl
and
lret
cld
inc
xchg
scas
sbb
stc
cld
inc
mull
scas
mov
imul
pop
cld
xchg
jns
ds
pop
mov
hlt
jo
or
xchg
aam
mov
mov
loopne
imulb
inc
push
jns
das
dec
inc
das
cmp
cmp
pop
mov
popa
xchg
add
push
jecxz
rcrl
cmp
cmp
sahf
mov
inc
in
push
inc
sbb
mov
clc
adc
add
mov
sbb
sbb
push
divb
cld
out
pop
dec
les
xlat
jae
aam
dec
lods
scas
xchg
push
pop
lcall
xchg
mov
call
out
adc
pop
scas
dec
or
sub
test
dec
fimuls
stc
test
mov
in
mov
lahf
call
xor
fadds
sbb
sbb
imul
aaa
cld
pop
sub
cmp
ret
lahf
mov
imul
xor
ret
push
xchg
xor
call
jl
mov
shl
cltd
mov
dec
adc
xor
imul
stos
pop
out
js
out
push
je
add
mov
jmp
insb
cmpsl
clc
lods
pop
int3
pop
stc
or
popa
outsl
or
pop
frstor
push
push
lcall
push
pushf
movsb
adc
sahf
pop
imul
pop
int3
dec
jbe
into
gs
stos
xchg
ret
ds
out
scas
cmp
repz
mov
test
jge
dec
leave
xchg
ljmp
and
or
push
jge
mov
jle
xorb
and
and
je
mov
into
imul
fwait
mov
or
jg
sub
sbb
pop
lcall
faddl
adcl
and
and
lcall
cmp
xor
xor
jmp
sbb
mov
push
fisubrl
aam
ds
popa
dec
cmp
add
sbb
inc
xchg
jecxz
jne
test
cmc
sti
push
and
cwtl
pop
imul
stos
push
adc
cwtl
xor
mov
add
gs
and
out
mov
mov
cmp
fmuls
adcb
stc
or
sbb
data16
xorl
inc
jg
ret
pop
mov
cmp
ja
rorl
into
fistl
int3
inc
sarb
and
test
jmp
addl
cltd
loop
sti
jle
xor
xchg
mov
test
dec
das
mov
cmc
stos
fs
jl
test
mov
add
mov
icebp
mov
jb
mov
inc
fistpl
int3
int3
push
xlat
mov
addr16
fsubrl
roll
jl
iret
jae
pop
bnd
test
mov
pop
mov
jecxz
and
loope
add
insl
sub
pop
xor
sbb
mov
orl
push
cmp
icebp
icebp
loopne
loopne
daa
adc
mov
lea
sti
dec
adc
jo
sbb
lock
xor
cmc
in
pop
repnz
insb
push
data16
test
adc
hlt
dec
mov
dec
jl
mov
clc
test
test
sub
rcll
jle
inc
mov
popf
jg
adc
pop
mov
or
adc
jb
xor
popf
jmp
xchg
rcll
ss
loop
imull
xor
call
jg
sub
or
xor
addr16
hlt
aaa
ljmp
fs
cltd
adc
stc
adc
push
clc
jb
in
test
sbb
and
cmp
cli
push
test
pop
mov
or
push
scas
stos
int3
mov
test
mov
add
sbb
add
or
cltd
adc
push
or
test
das
cmp
jae
into
or
inc
pusha
fldcw
insb
sub
push
dec
ret
xchg
dec
add
gs
data16
popf
xor
xchg
inc
aam
inc
mov
popa
mov
add
push
jne
fistpl
movsb
out
addb
jnp
insb
call
fdivl
rcrl
rcr
mov
or
mov
pop
cli
inc
mov
aam
imul
decl
imul
mov
sti
mov
adc
subl
mull
jb
push
outsl
pushf
ljmp
mov
popf
es
clc
mov
sub
sub
es
dec
inc
dec
sub
push
aaa
mov
xor
inc
add
cmpb
push
aas
loope
inc
mov
pop
inc
sbb
add
fs
int
cmp
repnz
and
icebp
dec
iret
pop
into
rclb
stos
gs
movsb
dec
xchg
mov
icebp
shll
clc
push
leave
pop
int3
sbb
dec
hlt
and
add
jp
daa
mov
mov
cli
xor
xchg
es
jl
inc
xchg
and
mov
jg
loopne
aaa
cmpsb
std
rcr
cmpsl
inc
fdivl
and
sub
lcall
dec
dec
dec
jecxz
or
jo
stos
xor
stc
pop
sub
cmc
lea
push
xor
and
loope
add
in
je
push
out
lods
cmpsl
mov
movsb
adc
fidivrl
or
ss
jns
ret
cmp
lods
andl
or
addr16
pop
and
jbe
adc
stc
orl
test
sbbl
add
sbb
std
loop
test
loope
popa
popa
or
sbb
ret
shll
adc
rolb
aad
xor
lcall
enter
aaa
cmp
jnp
xchg
mov
and
add
pop
stos
mov
dec
clc
addr16
mov
mov
call
lret
jb
xor
push
out
sbb
insb
fistpl
mov
dec
aas
push
and
outsl
mov
xor
push
inc
fildl
xchg
cld
pop
fwait
pop
aad
cli
decb
dec
loopne
xchg
push
sahf
repz
add
dec
subb
mov
mov
mov
fisttpll
notl
cmpsl
out
sbb
xchg
pop
sub
xor
cmp
fucom
add
pextrw
mov
popa
lahf
imul
pop
add
and
iret
shl
je
xchg
cmpsb
pop
dec
iret
cmp
xor
scas
fwait
jmp
xchg
outsb
jae
pop
mov
lods
icebp
jp
in
xchg
in
int
fdivs
adc
int
mov
test
mov
out
sub
jno
dec
ljmp
aas
mov
fldenv
addl
arpl
jmp
sub
in
int
mov
push
mov
push
mov
sub
notl
std
and
lods
mov
cmc
mov
pusha
mov
fiadds
lahf
lds
decb
clc
inc
and
or
adc
into
loop
and
xchg
lods
xchg
dec
fisubrs
imul
push
jg
int
jbe
gs
jg
dec
add
inc
cmpsl
mov
stc
sti
inc
loopne
fwait
iret
sbb
pop
and
xchg
push
xor
mov
cmp
fs
sub
jmp
je
jle
add
mov
xor
push
movsl
data16
addl
inc
stc
shrl
adc
push
adc
sbbl
hlt
sbb
fsubrp
lods
std
push
mov
jbe
and
push
ja
xchg
lret
out
inc
adc
xchg
jl
mov
leave
mov
loopne
mov
incb
inc
fimull
dec
out
loop
loop
cld
adc
testb
push
pop
fidivrl
push
stos
inc
arpl
out
pop
pop
adc
jae
daa
movsl
push
cli
push
cmp
mov
outsb
xchg
imul
scas
mov
xchg
rol
lret
mov
stos
roll
out
jno
or
mov
or
fisubs
pcmpgtd
cmp
outsb
xchg
in
jns
div
orb
outsl
xchg
mov
mov
loopne
stos
inc
pushf
sbb
jmp
jg
push
add
aas
sub
mov
cltd
icebp
jno
aas
sub
mov
loope
or
mov
dec
jg
push
scas
mov
push
js
mov
rcr
pop
shrl
adc
in
and
loop
out
jmp
jno
in
mov
ds
push
lea
sbb
sub
out
fisubrl
xchg
sub
mov
dec
in
sbb
mov
iret
sub
push
call
or
insb
inc
adc
dec
pop
push
ja
imul
sub
rorb
cmc
in
hlt
jnp
ds
in
in
insl
add
pop
lret
and
mov
pop
xchg
js
sbb
das
lds
stos
inc
mov
push
mov
push
enter
sbb
dec
cs
std
pop
lahf
sahf
sub
lods
inc
inc
xlat
shrb
rolb
sbbl
jno
xchg
sub
mov
sbb
lcall
cmp
aas
enter
test
aam
inc
push
jns
popa
cmp
jge
lcall
in
andl
enter
xchg
pop
jnp
out
test
dec
xchg
mov
and
xor
xor
jmp
dec
loopne
std
dec
out
or
hlt
mov
fsubs
and
in
pop
add
mov
movsb
addl
mov
sbb
push
adc
movsb
stos
xchg
aas
roll
lds
and
aam
shll
pop
icebp
mov
repz
ds
or
jmp
sbb
test
lods
fnsave
imulb
jbe
es
stc
fsubrs
cmp
mov
int
lds
into
cmpsb
mov
adc
inc
add
nop
mov
sbb
lcall
inc
and
stos
dec
inc
push
sub
dec
cmp
ss
sbb
popa
imul
add
inc
divb
adc
loopne
cmp
and
inc
xchg
sub
cmp
sbbb
test
dec
sbb
pop
cld
dec
and
push
mov
in
jb
xor
pop
push
or
sub
sub
mov
clc
rcll
mov
icebp
ja
add
xchg
stos
push
idivb
int3
fsub
ror
jnp
or
mov
dec
dec
fsubrl
popf
arpl
cmp
fst
xchg
movsb
test
and
pushf
out
xor
sahf
push
and
and
sub
popa
add
jl
lock
enter
sbb
cli
dec
jo
pusha
jbe
mov
jp
daa
ja
mov
mov
out
pcmpgtd
icebp
scas
dec
push
sbb
dec
ja
pop
xor
out
popa
cli
inc
aas
mov
arpl
jg
gs
pop
and
shlb
mov
and
xchg
daa
xor
scas
push
mov
punpckldq
sbb
out
test
jb
insl
je
xchg
push
cwtl
jg
cld
scas
inc
mov
sub
pop
lods
mov
or
lea
popf
add
push
test
push
push
out
xor
sub
loopne
dec
jo
push
mov
shl
incl
ljmp
shll
sub
test
cld
xchg
sub
mov
dec
out
dec
in
cli
pop
xchg
lods
xor
fistl
push
mov
pop
dec
lret
xlat
sbb
and
outsl
bound
jno
xchg
fdivl
adc
cmp
push
in
adc
cmp
mov
ret
fbstp
fistl
cmc
xchg
bound
lret
jmp
fnstcw
into
gs
jnp
add
or
xchg
mov
cmpb
rorl
lds
inc
fcoml
or
popa
out
dec
push
lods
shr
ja
add
cmp
out
sub
outsl
inc
fsts
lret
gs
ja
fisubrl
shlb
pop
mov
int3
bound
aas
into
negb
dec
pop
stos
inc
sub
jmp
sbb
fs
push
jp
icebp
xor
dec
pusha
cmp
test
cwtl
or
push
std
mov
fidivs
lret
into
mov
testb
cmc
push
sub
add
mov
iret
pop
mov
lock
loop
lahf
pop
pop
xchg
mov
in
in
int3
dec
lret
or
andl
leave
pop
cmp
into
sub
lret
cmp
cli
xchg
rcrb
sub
add
or
cmp
es
fs
jp
cmp
lahf
pop
xchg
cld
pop
mov
sub
mov
fstl
dec
push
adc
adc
testl
mov
movsb
mov
dec
cltd
xchg
xor
pop
sbb
mov
popf
cmp
mov
pop
mov
sbb
outsb
add
or
mulb
push
out
cmp
push
outsb
mov
xchg
mov
imul
inc
daa
cmp
jg
pop
xor
push
fistpl
pcmpeqd
sti
push
aad
dec
mov
out
clc
sahf
test
lods
cmp
pop
rorl
gs
dec
inc
sub
out
jle
xchg
inc
ljmp
xor
and
cmp
jecxz
xchg
sub
mov
dec
adc
int
mov
sub
js
jns
push
test
mov
test
inc
fcmovbe
mov
notb
adc
imul
mov
fcompl
fdivrs
jmp
adc
jecxz
ds
jle
adc
bound
ja
push
xchg
jg
cltd
xor
loope
std
fwait
das
or
in
es
fcomp
mov
loop
dec
xchg
or
stc
jecxz
loop
shrl
pop
push
fldcw
xor
cld
mov
jle
ljmp
and
lret
ja
mov
and
mov
push
push
repz
dec
out
subl
jge
xor
inc
push
pop
mov
into
imul
mov
data16
and
jne
dec
scas
aam
out
popl
and
ret
addr16
push
out
test
arpl
pop
sar
data16
sbb
inc
push
test
or
add
mov
mov
cli
xor
lahf
cs
movsb
repnz
icebp
inc
fdivs
mov
aam
cmpsb
dec
mov
push
fwait
and
test
xchg
and
orl
dec
mov
mov
incl
jns
and
sbb
pop
inc
insb
bound
adc
and
pop
sub
cmp
mov
je
mov
cld
jnp
mov
into
lea
jbe
and
in
push
mov
mov
dec
jmp
negl
std
lods
cltd
pop
or
push
nop
xor
shr
sti
iret
sbb
cmp
push
pop
mov
test
insl
add
test
and
int3
jl
jle,pt
lret
jnp
push
mov
inc
xlat
mov
std
pop
add
sbb
jmp
lock
or
cld
cs
ljmp
xlat
sbb
outsb
mov
sub
fsubrl
jg
adc
mov
add
sahf
mov
inc
sbb
adc
jg
arpl
outsl
mov
pop
fwait
pop
adc
lret
int
xchg
or
sub
push
pop
sub
pop
mov
sti
mov
add
imul
fdivs
xor
clc
dec
cmp
push
clc
xor
mov
xchg
and
div
xor
outsl
push
adc
mulb
nop
test
mov
pop
push
dec
xchg
enter
cmp
add
rcll
and
pop
push
mov
loope
and
je
sbb
addb
dec
out
adc
push
out
xor
aam
xchg
outsb
adc
or
xor
mov
pop
data16
fisubrs
xchg
cli
fwait
sub
imul
cmp
adc
push
outsb
cltd
and
cmp
mov
stos
add
pushf
sub
in
in
test
aaa
aas
ret
inc
mov
dec
loopne
aam
add
ds
xor
test
ror
pop
out
push
dec
lds
lcall
popa
sub
fdivs
mov
cs
arpl
adc
iret
fildl
push
push
nop
mov
ret
xchg
daa
mov
aad
ret
loop
adcl
orl
mov
mov
dec
push
loop
fidivrs
stc
nop
stos
jmp
lahf
sbb
sub
test
cmp
push
cmpsl
ret
pop
cs
sahf
insb
dec
loop
mov
lcall
mov
cmpsl
repnz
dec
out
xchg
loope
adc
xor
pop
cli
sti
jmp
jge
lods
mov
ficoms
inc
enter
mov
call
dec
dec
popa
jg
loop
aaa
sub
pop
loope
aad
inc
mov
ja
push
and
jbe
ret
out
in
dec
dec
pop
mov
mov
adc
insb
mov
push
inc
cmp
add
push
loopne
outsl
jns
in
mov
ret
les
jns
mov
or
call
sbb
add
imul
pop
xchg
push
repnz
fldenv
jns
mov
stos
nop
pop
shlb
imul
cmpb
fwait
dec
lock
or
test
xchg
add
pop
sbb
push
and
in
sahf
mov
jecxz
sbb
pushf
add
mov
push
stos
fxch
imul
loopne
jg
push
fdivrl
shll
push
push
adc
or
or
push
in
imul
roll
inc
scas
fnstsw
mov
inc
sahf
xor
inc
flds
push
loope
std
sbb
mov
sub
inc
mov
rol
sub
cmp
movsl
dec
scas
call
fdivrs
xchg
imul
xchg
scas
sbb
xor
insl
mov
push
add
and
xchg
mov
sub
sbb
sbb
jle
or
xchg
cli
and
push
inc
lds
ja
xchg
xor
push
inc
rorb
inc
dec
pop
mov
ficompl
test
out
cmp
pop
and
cmp
inc
inc
dec
cld
mov
push
stos
cltd
push
sub
test
leave
cs
bound
or
adcl
xor
icebp
xchg
add
inc
out
mov
cmp
mov
cmpsl
mov
push
das
sbbl
movsb
repnz
leave
iret
lock
test
jmp
mov
fucomip
xchg
or
arpl
divl
push
aas
mov
stos
add
psllq
xchg
mov
in
cmp
jecxz
add
cwtl
sub
lahf
rclb
mov
fnstsw
mov
gs
adc
mov
stos
inc
ss
je
enter
push
leave
jl
lret
movsb
repnz
in
popf
cmpsl
adc
adc
addr16
rolb
loop
pusha
movsb
ljmp
mov
lods
jl
iret
push
add
ss
mov
pop
pop
in
mov
repnz
cmpsb
ret
jp
test
addr16
ret
or
or
push
or
jne
cmpsl
and
js
ret
add
push
outsl
mov
dec
stos
lods
inc
sbb
jmp
cmp
cwtl
mov
fsubr
or
add
mov
fs
xor
fsubr
inc
loopne
jmp
fdivs
pop
iret
ss
jmp
cmp
insl
hlt
mov
adcl
dec
out
push
pop
dec
jae
cmp
pushl
mov
popf
ret
aad
mov
push
shl
xor
lods
aam
inc
test
js
adc
dec
insl
jns
dec
insl
int3
pop
mov
sub
sahf
xlat
out
mov
loope
pop
out
je
clc
mov
loop
scas
orb
mov
or
pusha
mov
pop
movsb
xor
pop
pop
sahf
and
mov
inc
and
push
cmc
xchg
sbb
icebp
and
iret
adc
push
fwait
xchg
imul
inc
test
lret
std
call
push
inc
pop
rolb
test
enter
xchg
cs
jp
push
xchg
andb
enter
fmuls
and
fldcw
xor
cmc
add
das
mov
imul
inc
dec
mov
mov
add
insl
mov
mov
dec
fdiv
or
outsl
insl
push
inc
fucom
push
adc
inc
inc
out
mov
xor
notb
mov
push
adcb
push
pusha
mov
push
fs
xchg
add
pop
cltd
push
das
sub
cld
add
xor
push
xchg
ftst
xchg
cmp
dec
mov
repnz
pop
test
nop
into
cltd
or
inc
lock
vmread
jnp
add
inc
das
mov
fdivrs
out
jb
loope
outsb
sbb
test
jo
mov
mov
stc
or
inc
mov
xor
notb
jo
pop
push
mov
fcmovu
sbb
xchg
into
mov
mov
pop
xor
dec
fcoms
or
pop
jo
sub
mov
icebp
loope
push
push
lret
sub
aad
xchg
push
cli
data16
sbb
adc
xchg
mov
sbb
pop
inc
in
inc
insl
scas
and
data16
xor
mov
sub
push
push
mov
xor
imul
mov
xchg
lret
cld
mov
scas
sub
and
xlat
cwtl
subl
sub
cwtl
cs
inc
test
aam
xchg
and
pop
mov
repz
and
sbb
jbe
std
xchg
cs
filds
fwait
dec
mov
adc
jle
sbb
cld
xchg
loope
xchg
lea
and
aad
testb
jns
loop
mov
sub
or
and
jg
fwait
mov
pop
lret
jmp
in
mov
mov
add
inc
in
jecxz
cld
repz
cs
shrb
mov
mov
xchg
add
lret
lret
std
xlat
sbb
push
xorl
les
nop
and
cmpsl
in
jo
addr16
jecxz
mov
imul
inc
mov
fwait
mov
xchg
jge
pop
scas
mov
or
cmpsb
in
mov
sbb
or
inc
rcrb
push
bndstx
pop
push
and
loopne
lods
xor
iret
cmp
cld
adc
cld
test
stc
je
insl
les
jae
or
dec
loop
pop
lret
push
pop
addr16
pop
daa
roll
sub
mov
or
cld
xor
jns
adc
cmc
pop
fs
lods
mov
mov
xchg
mov
clc
sahf
and
push
adc
cmp
jb
lds
stos
dec
xchg
adc
pop
mov
sub
xor
xchg
adc
sub
outsb
pushf
rcrl
xorb
ds
cmp
repnz
jo
ret
jp
sbbb
or
test
loope,pt
std
cld
inc
loopne
je
out
push
inc
sbb
adc
int
pushf
data16
mov
pop
lds
jne
int3
mov
sbb
pop
xor
out
cmpsb
mov
outsl
inc
add
test
fwait
es
mov
or
mov
lahf
sbb
add
xchg
push
popf
push
shrb
out
xchg
or
lods
mov
pop
mov
rolb
inc
stos
cmp
jno
fidivl
shrb
mov
cld
pop
jae
or
jg
test
push
inc
jecxz
cmp
xor
jo
xchg
dec
icebp
in
push
aad
cmp
inc
outsb
pop
inc
push
adc
lods
jnp
push
aam
adc
pushf
aad
mov
jp
push
mov
movsl
mov
xor
sarl
xor
test
inc
pop
mov
test
js
dec
mov
jns
out
cmp
dec
xchg
out
std
mov
or
lods
sbb
and
jbe
sbb
cmpsl
xchg
adc
scas
ss
or
cli
mull
push
jbe
adc
shlb
sub
cli
mov
sub
jns
sahf
jb
jmp
push
ds
in
fcomip
cli
or
and
fucomi
mov
fimuls
out
lods
cmp
or
outsb
add
push
or
mov
in
pushf
adc
push
jo
fimuls
or
mov
test
xor
add
or
xor
sahf
push
mov
push
xchg
test
mov
or
inc
push
dec
xchg
add
xchg
mov
mov
test
add
xchg
fisubrs
fiadds
aas
adc
scas
push
pop
ret
hlt
cmp
jb
icebp
or
jg
nop
scas
dec
jo
sub
scas
movsb
dec
xchg
mov
ret
js
mov
insb
mov
loopne
mov
adc
rcll
push
and
dec
stos
es
jmp
xlat
hlt
xchg
pop
pushf
repz
fstpl
test
pop
xor
push
les
lea
js
jnp
in
mov
and
add
mov
push
jle
aas
mov
jnp
scas
mov
inc
and
shrl
scas
push
xor
sbb
cmp
jb
shll
lock
pop
mov
sub
jns
jmp
int
mov
push
addr16
das
fs
icebp
mov
dec
in
jg
jle
push
test
dec
inc
fnsave
fsubs
fadds
mov
xchg
pop
notb
out
in
xchg
lock
nop
out
adc
stos
loope
or
int3
sti
jbe
or
fnsave
std
cwtl
push
mov
data16
mov
testb
cltd
arpl
mov
cmp
fcmovne
sub
in
mov
pop
xchg
loop
push
les
out
movsb
cmp
inc
idivb
cmp
mov
xor
out
into
ror
jo
push
fdivl
mov
cli
in
mov
push
jecxz
add
ljmp
xor
cmpsl
cmp
cmp
ljmp
mov
pop
push
jmp
cmpsl
mov
push
or
fcompl
dec
popa
and
cmpsl
out
sbb
into
and
add
es
lods
push
insl
jg
into
sti
movsb
clc
adc
sub
sub
in
jno
mov
les
push
in
aad
push
mov
pop
add
push
bound
stos
mov
pop
xor
aam
push
adc
jae
outsb
mov
ds
adc
into
imul
and
pop
in
pop
inc
xchg
cmpsl
movsl
push
lret
cli
mov
cmp
aaa
or
sbb
xchg
jne
add
fsubs
dec
push
stc
jo
dec
notl
dec
sti
or
nop
stos
rol
iret
icebp
add
pushf
pop
scas
mov
mov
sbb
xchg
std
pop
jmp
mov
pusha
mov
inc
mov
dec
lds
cmpsb
out
outsl
aaa
mov
xlat
sbbb
inc
and
jbe
bound
push
cmp
ds
and
fists
rcrl
jbe
inc
mov
lret
xchg
pop
data16
mov
mov
loopne
or
cmpsb
std
dec
out
xchg
jns
sbb
ljmp
inc
cmpsl
je
loopne
or
js
mov
or
movsl
inc
mov
inc
dec
jb
jns
push
inc
adc
inc
lcall
in
js
mov
push
gs
sbb
scas
cltd
icebp
inc
mov
inc
jg
push
sub
adc
dec
out
imul
or
inc
push
inc
ss
push
cmp
dec
cmp
loop
pop
cmc
pop
pop
cmpl
lahf
mov
cli
daa
repnz
imul
rcrl
jb
xchg
mov
lret
and
sub
pop
mov
xchg
fimuls
pop
outsb
dec
test
mov
sub
sti
aam
das
rolb
inc
push
adc
or
insb
or
mov
insb
push
mov
xchg
mov
out
mov
and
push
jns
xor
insb
and
mov
push
dec
pop
inc
bound
out
sbb
cmpsb
jns
and
movsb
sub
dec
insb
mov
cmp
call
in
addl
push
push
adc
idivl
and
mov
pop
dec
js
inc
lahf
arpl
sbb
enter
pop
in
sbb
mov
add
loopne
mov
adc
mov
rorb
icebp
movsl
in
inc
cmp
lock
outsl
inc
out
jo
push
mov
push
pop
in
fistl
neg
inc
mov
xchg
add
jnp
jno
pop
subl
dec
in
ja
sti
sub
or
movsl
jl
pop
aaa
jp
jno
adcl
shll
mov
bound
pop
mov
shrl
dec
xchg
divb
push
jecxz
lods
cmp
pop
ret
scas
dec
sbb
inc
xor
xchg
sbb
adc
mov
in
and
daa
leave
or
insl
cmpl
adc
fsubrs
ds
shlb
adc
ss
inc
push
lods
inc
out
test
cmp
add
scas
aas
xor
lock
dec
mov
sahf
sbb
pusha
filds
add
int
ret
sbb
mov
pop
xchg
mov
pop
fdivrp
inc
mov
cltd
fsts
push
pop
jne
push
mov
xchg
or
in
jae
lock
dec
insb
xchg
dec
push
out
repz
lock
mov
lods
mov
outsl
fwait
stos
pop
sub
xor
sub
pop
adc
xchg
mov
les
lahf
loope
mov
push
mov
fwait
xor
push
divl
loop
mov
lds
in
add
movsl
pop
andb
sti
jae
sub
out
outsb
push
test
mov
xchg
mov
fcoml
shrb
js
dec
push
xchg
in
stc
xor
cmp
mov
fildll
ret
pop
stos
jl
rcr
and
cmpl
ss
loop
push
cmp
mov
pop
in
mov
sub
inc
pop
pop
pop
jg
xlat
push
lods
out
pop
pop
cmpsl
mov
fldt
int
scas
mov
test
loopne
jmp
or
jp
jle
daa
add
push
lods
test
insl
data16
lcall
cmpsl
xchg
cs
pcmpgtd
ret
mov
pop
push
aad
jne
pusha
inc
xchg
push
or
fisubrl
cmpsb
out
jp
mov
xlat
jge
adcl
pop
icebp
mov
inc
sub
fs
jb
in
jle
dec
enter
dec
jmp
popa
cmp
push
aad
loopne
pop
cwtl
inc
loopne
adcl
add
sub
mov
enter
outsb
iret
push
ljmp
out
mov
and
mov
inc
inc
xchg
push
push
in
in
cli
fcompl
sub
mov
in
cwtl
add
or
xorb
cmp
inc
mov
int
fidivrl
pop
mov
push
mov
inc
mov
add
ret
xchg
pushf
cli
fwait
xor
push
in
pop
jno
xchg
shll
fwait
fs
jmp
mov
cmp
mov
push
iret
dec
cmpsl
jae
scas
push
or
shll
cmp
in
push
inc
data16
sbb
popl
rorb
bound
adcb
arpl
mov
int3
repnz
adc
push
add
inc
push
xchg
lods
jae
dec
loopne
xchg
sarl
sti
fisubs
xchg
jl
add
lock
imul
pushf
cmc
mov
nop
cs
sti
adc
aaa
dec
xchg
push
or
add
jmp
push
gs
inc
fbld
sub
repz
push
testb
fdiv
sbb
or
fwait
cs
shl
scas
add
and
cwtl
cld
dec
or
pusha
cltd
pop
rclb
mov
inc
fsubs
test
cmp
jo
js
addr16
cmp
add
lahf
insb
inc
js
jae,pt
out
shrl
push
ss
mov
test
or
and
or
cmp
mov
jp
ds
cmp
jle
push
lds
mov
aam
adc
out
cld
cmpsb
xchg
push
int
outsl
xchg
in
adc
sub
jl
mov
xchg
int3
out
popl
cmc
or
push
repnz
pushf
setne
sbb
dec
dec
push
rcl
ss
lea
loope
loop
push
out
outsb
add
and
cmc
xor
lret
xchg
xor
dec
test
push
sbb
fwait
mov
in
jmp
dec
dec
jo
das
pop
in
dec
jecxz
sbb
inc
xchg
push
ljmp
add
xchg
gs
jo
inc
push
leave
or
in
and
scas
add
dec
mulb
add
fsubp
sub
push
insl
mov
fdivrs
fnstcw
pop
stc
mov
jge
frstor
daa
sahf
xor
xor
js
enter
aas
add
bound
popf
lods
fs
outsl
jnp
popa
pop
pop
sahf
jge
fsubrs
rorb
faddp
and
cmp
xor
into
xor
mov
loope
cmp
sti
xchg
ret
add
cwtl
orl
cs
leave
mov
sbb
mov
mov
js
lds
in
inc
repnz
leave
and
aas
push
imul
xchg
or
cmc
or
mov
nop
flds
aam
aaa
int
push
add
mov
cli
push
inc
cmp
std
das
subl
mov
sbb
sti
aaa
outsl
xor
push
jle
sahf
jne
and
andb
pop
lcall
mov
jmp
gs
lods
icebp
out
dec
into
lcall
out
and
dec
mov
int
sahf
scas
ja
std
inc
adc
xchg
xchg
mov
mov
int3
xor
imul
jb
sbb
icebp
jnp
jecxz
outsl
push
mov
push
ljmp
sbb
pusha
mov
push
push
lods
mov
mov
mov
movsb
xor
inc
rcll
or
mov
cltd
mov
or
mov
pushf
push
fwait
int
cmp
ret
shlb
and
mov
push
inc
cld
pop
das
mov
mov
jge
xchg
pop
mov
ret
dec
dec
gs
cmp
and
jae
test
and
sbb
popf
push
imul
push
push
and
ds
jb
sub
test
jns
inc
and
frstor
out
and
jo
and
or
pop
scas
xchg
push
mov
pop
popa
cmp
ret
ret
and
adc
sub
nop
gs
xchg
pusha
mov
or
popa
movsb
fcomi
mov
imul
mov
xchg
or
lret
adc
cmp
xor
jae
call
sub
mov
jmp
mov
rclb
pusha
add
mov
popa
and
or
cmp
and
sbb
mov
mov
cld
sbb
xlat
xlat
mov
int
mov
xchg
test
iret
jl
pop
cmp
scas
dec
lock
cld
xchg
rcrl
cwtl
imul
jne
inc
pushf
scas
cmpsl
or
mov
lret
xor
aad
fstl
sbb
sub
aaa
and
mov
xlat
insl
sub
mov
loopne
lret
and
mov
xchg
mov
dec
out
cmp
cmpb
out
cmpsb
pop
push
mov
jmp
mov
dec
or
lret
pop
mov
pop
pusha
fstpt
xor
mov
push
insl
fsts
in
cmp
divb
push
ret
hlt
mov
in
jno
mov
pop
or
lcall
fwait
stos
fcmovu
sbb
jne
jl
jmp
cmp
sub
cmpsl
mov
cmp
fsqrt
xchg
pop
ljmp
in
jns
in
in
or
adcb
or
pop
fs
xor
or
in
rorb
adc
jl
cmp
xor
jne
inc
repnz
pop
divl
xor
dec
fcomps
push
lcall
adc
mov
imull
push
fistps
xlat
sbb
scas
flds
iret
xor
mov
push
sub
icebp
mov
aas
sub
rcl
imul
stos
adc
mov
xchg
push
mov
lock
adc
rcrl
mov
cld
jns
sub
push
sub
mov
mov
ret
pop
lcall
mov
popa
aam
das
push
out
inc
or
repz
cmp
xor
jae
aad
or
inc
jb
inc
aam
cmp
pop
popf
scas
sbb
jmp
iret
pop
inc
mov
mov
ficompl
mov
push
std
sub
int
orl
nop
int3
arpl
cmp
cmp
dec
lea
sahf
ret
scas
xchg
xor
push
jno
xor
outsb
push
inc
sbb
add
fsubl
add
inc
lods
lea
mov
mov
jle
fsubp
jle
adc
outsl
inc
repnz
icebp
in
leave
int
cmp
jecxz
les
ja
and
jl
push
mov
push
shlb
enter
dec
loope
sbbl
sbbb
jg
stos
inc
fs
jno
push
sub
pushf
sarb
dec
mov
stos
lods
fucomi
rol
pop
add
fsubrl
and
stos
push
aas
out
mov
orb
xor
mov
test
xor
push
cmc
push
cs
xor
out
test
das
mov
push
rorb
dec
jnp
inc
nop
pop
sbb
sbb
push
push
shll
mov
outsl
dec
cld
pop
jbe
fcomps
sub
imul
inc
mov
and
mov
punpckhwd
js
cmpsl
ret
xchg
in
pop
cmpsb
xchg
and
popa
sarb
inc
daa
cli
fwait
xor
pop
pop
sbb
jmp
aas
cmp
cmp
out
rcll
jbe
bound
jb
das
cmp
gs
cwtl
subl
and
xor
fbstp
popf
xor
xchg
fsubrp
xchg
xchg
inc
fcoms
xor
inc
fdivrs
inc
pop
xchg
adc
adc
xchg
sub
addr16
or
cmpl
xor
mov
ljmp
xchg
aaa
adc
jae
dec
mov
cmp
lods
mov
popa
ret
inc
fidivrs
sbb
mov
push
and
int
and
push
lret
mov
jmp
push
inc
jle
fwait
scas
arpl
xchg
xchg
mov
push
sti
xchg
xchg
arpl
xchg
aas
fistpl
pusha
adc
lods
je
pop
dec
jne
insb
mov
xor
dec
and
sti
or
xor
ret
aam
pop
pop
push
sbb
adc
sub
jns
push
lods
jo
fmull
xchg
xor
dec
in
popa
and
xchg
push
bound
sbb
or
iret
xchg
add
push
imul
pop
mov
xor
cld
cs
aad
cltd
xlat
pop
mov
pop
leave
and
cmpsl
les
mov
test
mov
sub
test
ret
outsl
cmp
xor
popl
sbb
je
or
adc
xlat
dec
aam
fs
mov
adc
divb
pop
jae
mov
adcb
jp
cmc
mov
jae
jno
xchg
sub
jbe
ret
jecxz
pop
cmp
idiv
add
push
arpl
jo
xor
mov
cltd
push
mov
aam
dec
adc
jle
lret
out
mov
jne
mov
pop
xchg
cmpsl
xor
xlat
pop
out
pop
ljmp
aam
leave
sub
push
maxps
add
add
test
pop
sbb
mov
push
cli
dec
in
fs
imull
push
mov
dec
fwait
int
xor
inc
out
push
xchg
adc
xchg
push
imul
cmpsb
pop
cmp
fcomps
xchg
jg
lea
push
ds
sub
les
sub
cmpsb
or
nop
add
xchg
leave
mov
cmc
jge
or
insl
out
mov
lcall
popf
add
movsl
pop
mov
push
add
mov
pop
call
test
adc
popa
hlt
mov
into
movsb
repnz
xchg
mov
or
js
lods
les
mov
push
std
xchg
loop
decl
popf
mov
pop
jns
push
push
xchg
lret
or
cmpb
xchg
sti
pushf
out
push
pop
mov
je
sub
add
lods
push
fsubrp
mov
icebp
hlt
add
dec
xchg
dec
aad
dec
faddl
pop
cmc
mov
les
loope
je
sti
add
cltd
xlat
mov
mov
enter
jnp
mov
xchg
pusha
dec
push
movsb
std
ds
pop
js
push
out
mov
movsb
mov
mov
lods
movsb
loopne
xchg
push
clc
nop
mov
cmpsb
jg
cli
adc
jb
xor
and
cli
cmp
xor
clc
xchg
leave
cltd
test
test
dec
fisubrl
ss
pushf
insb
test
popa
or
enter
sub
loopne
push
mov
mov
push
repnz
sbbl
fbld
je
push
dec
das
repnz
fwait
and
mov
popf
ss
std
mov
fmull
in
sub
loope
mov
lods
std
fcoms
imull
adc
xor
addr16
xor
inc
ss
pop
jmp
daa
inc
int3
cmp
push
inc
mov
lea
dec
out
sbb
inc
pop
xor
sub
sbb
pushf
lods
sub
out
js
inc
push
gs
add
xchg
aaa
mov
sbb
dec
sub
out
fiaddl
or
mov
out
cli
cmpsl
int3
mov
mov
pop
popf
addr16
jge
nop
test
dec
cmp
pop
jmp
dec
push
dec
repz
dec
addr16
leave
aam
dec
push
insl
test
aad
ljmp
das
push
inc
add
pop
cmp
sbb
jle
iret
mov
sbb
and
cld
push
faddl
sarb
fdivrl
popa
lods
roll
pop
addr16
out
les
bound
lahf
mov
shll
pop
mov
sub
iret
es
jg
mov
sub
int
and
pushf
pop
out
xor
addl
rol
aaa
push
ret
test
sub
xchg
loope
adc
lods
mov
fstps
pop
fdivrs
decl
mov
sub
fidivrs
add
mov
rolb
ret
das
mov
pop
aaa
imul
adc
fdivl
jmp
sti
pop
ds
xor
mov
mov
aas
mov
inc
lcall
cli
xchg
xlat
cmc
inc
inc
mov
sbb
mov
push
in
leave
fdivrs
leave
cmp
add
es
scas
mov
push
jno
jne
inc
push
push
mov
jle
sub
mov
mov
sub
shlb
add
mov
int
dec
sbbb
fcmovb
icebp
rorb
dec
push
ja
sub
pop
repz
test
jae
cmpsl
movsb
sahf
testl
pop
into
sbbl
sbb
lcall
ss
mov
movsl
mov
enter
cs
xchg
addl
nop
push
mov
pusha
sahf
lret
pop
and
lret
sub
ret
out
test
or
lahf
ss
lea
or
or
mov
enter
imul
dec
ljmp
jmp
inc
dec
mov
stos
mov
pushf
adc
mov
xchg
sbb
push
ret
mov
or
hlt
xchg
adc
pop
dec
cli
xchg
cs
pop
jg
outsb
dec
iret
fbld
loopne
dec
in
sub
add
dec
clc
jnp
in
jb
cmp
fwait
add
adc
and
lods
jns
lods
mov
dec
cli
xchg
jge
sbb
loopne
dec
xchg
sub
mov
sub
ficomps
dec
add
fsubrs
clc
xchg
push
mov
adc
cmpsl
out
dec
ja
fnstsw
sbb
ss
lahf
dec
scas
adcl
movsb
sbb
outsl
scas
aad
inc
nop
adc
aaa
push
pushf
cmpsb
dec
ljmp
test
fistl
pop
xchg
sub
ret
jle
cmp
dec
imul
jge
mov
sbbb
faddl
unpckhps
popa
cli
inc
rorl
jle
sbbl
mov
in
iret
cmpb
mov
fnstenv
jecxz
adcl
push
out
push
xchg
xor
sti
lahf
icebp
movsl
gs
lods
sti
pop
loope
into
sub
xchg
push
mov
and
cmc
sub
sub
aad
or
inc
in
sbb
shr
jns
in
xchg
sub
stc
std
popf
stos
pop
mov
xrstors
xor
xor
jno
push
call
dec
fldenv
mov
pusha
cmp
aad
les
mov
ljmp
cwtl
scas
or
inc
pop
dec
mov
jb
insb
jnp
dec
addr16
cwtl
or
dec
adc
mov
roll
adc
fbld
rcrb
adc
inc
pop
dec
ficoms
or
lahf
dec
mov
movsb
lock
fs
push
fstps
jmp
lahf
mov
jle
mov
cld
loop
push
sbb
push
push
insl
add
ja
ret
or
mov
lds
ja
sbb
sub
lods
mov
lcall
test
cli
testb
lea
clc
inc
push
xor
mov
adc
inc
add
popa
dec
jb
pushf
mov
pop
cmp
pop
xlat
out
dec
mov
pushf
jg
and
or
sub
cmp
mov
jecxz
dec
push
jnp
add
xchg
mov
sbb
lds
add
sti
xor
loop
scas
pop
push
sub
and
inc
loopne
and
lret
decb
shrb
addr16
data16
movsb
in
int3
push
insl
hlt
mov
sbb
pop
daa
jp
movsb
cwtl
outsb
sub
xchg
hlt
test
lds
lock
mov
cmpsl
fs
loope
xor
lcall
inc
movsb
aas
stc
add
lcall
cs
and
sub
int3
lds
imulb
inc
push
je
ret
arpl
pop
cmp
and
sti
and
sub
outsl
mov
and
popa
jl
lret
ljmp
pop
sub
notl
std
mov
adc
and
lods
mov
pushf
notb
mov
sub
lea
xor
mov
and
cli
aaa
leave
pusha
cmpsl
imul
pavgw
pusha
pushw
pushf
sbb
gs
int
test
loop
sbb
or
shrl
cmp
or
cmp
xchg
jg
inc
daa
repnz
insb
int
outsl
or
xchg
scas
jl
shll
jmp
and
sub
aam
movsb
imul
cmp
xchg
ret
sub
cmc
adc
mov
int
add
cs
mov
insb
icebp
sub
pop
cmpsb
cltd
cmp
and
ds
fsubl
sbb
fdiv
clc
push
sub
pop
adc
mov
in
pop
adc
imul
ja
dec
loopne
pop
mov
dec
sub
cmp
pop
xchg
scas
dec
push
data16
xchg
fnsave
das
inc
insb
add
sub
dec
or
jb
pop
out
nop
xchg
mov
int
testb
bound
pushf
push
cltd
xchg
xrelease
movsl
mov
mov
std
mov
lret
mov
jmp
xor
pop
adcb
negb
sub
mov
mov
sub
call
pop
xor
cmp
into
sbb
in
inc
lods
inc
xchg
scas
mov
lods
mov
fimull
outsl
push
xchg
jnp
inc
cld
pop
call
and
fisttpl
xchg
rcr
push
pop
testb
add
add
cmp
fmull
mov
sub
stos
jg
ret
subb
loopne
lret
jg
ljmp
or
and
enter
mov
lahf
xor
mov
xor
pop
inc
mov
jb
je
inc
push
bound
adc
dec
shll
and
push
dec
in
dec
sub
and
xlat
pop
add
mov
pop
cmp
xchg
out
mov
pop
sbb
cmp
cltd
andl
jge
orb
mov
xchg
adc
fwait
dec
stc
xor
movsb
scas
xchg
and
cs
aad
ss
sub
and
xchg
push
lds
addr16
pop
and
lods
cmpsb
cmc
and
mov
fnsave
sub
dec
lods
mov
gs
adc
jb
mov
ret
and
sbb
sbbl
add
fdivrl
push
fiaddl
insb
xlat
xor
pusha
and
inc
es
inc
xor
push
jo
add
ret
jle
in
sbb
push
aam
outsl
xchg
imul
xor
cmpsb
jge
test
xchg
out
or
push
jae
push
and
into
lock
jge
ljmp
push
xor
push
loope
repnz
inc
cmpsb
lods
lcall
push
fwait
pop
or
insl
frstor
js
adc
push
add
into
inc
ss
fs
iret
xchg
cld
adc
rol
push
add
jb
repz
push
xchg
adc
fnsave
cs
cmpsb
in
mov
jge
clc
mov
jecxz
jge
imul
dec
enter
out
lcall
sbb
jle
mov
in
mov
inc
jmp
int
xorb
ds
sub
inc
sub
xchg
bound
push
out
test
lock
in
cld
inc
sub
push
jne
pop
lods
xchg
pop
cmc
ret
ret
pop
ficomps
mov
ret
loop
or
shr
add
xchg
mov
ja
movsb
sti
mov
int3
push
mov
xchg
sbb
xor
pop
mov
lahf
fwait
pop
repnz
sbb
xchg
mov
hlt
data16
repz
arpl
mov
stos
popl
int3
adc
hlt
test
and
ja
aas
repz
push
and
fldl
test
and
push
fdivrl
mov
les
insb
cmp
scas
lret
inc
push
movsb
sbbl
xor
repz
cmp
pop
adcl
sbbl
testb
lock
cmpsl
ds
lds
and
xor
xor
out
imul
push
cmpsb
test
aas
pop
xor
adc
in
cs
mov
pop
mov
sub
repz
lods
xor
dec
xchg
xor
shl
call
inc
push
pop
mov
mov
jmp
xchg
mov
mov
stc
call
sub
shll
xchg
mov
pop
icebp
fucom
jge
push
idivb
push
daa
xchg
push
xlat
jns
int3
stos
clc
out
outsb
stos
xchg
test
in
cmp
lods
xor
daa
mov
xchg
cmp
cmp
in
pop
mov
inc
filds
jg
shl
enter
xchg
test
push
ljmp
out
cmp
sub
mov
dec
xchg
out
rcl
pop
push
es
outsb
xchg
lds
jge
ljmp
les
pop
fmul
cmp
pop
scas
pop
push
in
cmp
xor
cmpsb
mov
ljmp
popa
jnp
adc
pop
lret
movsb
outsl
jno
pusha
cmp
out
xchg
add
stc
icebp
lahf
stos
orb
sbb
divb
or
inc
sarl
in
ja
imul
imull
fwait
jb
xor
aaa
int
cs
sub
ret
repz
pop
or
lds
add
jbe
popf
jmp
push
jno
mov
pop
shlb
call
pop
scas
mov
pusha
cmp
xchg
sbb
out
sub
xor
adc
jl
and
mov
std
mov
addr16
iret
lret
lock
pop
out
cmp
mov
leave
inc
sbb
jb
xchg
xor
inc
push
inc
xchg
clc
inc
fisubl
adc
adc
mov
popa
xchg
outsb
fnstcw
add
cld
hlt
incl
mov
mov
movsl
std
xchg
fidivrl
fldcw
push
enter
jns
xor
push
cmc
pop
shrb
or
testl
xor
jo
pop
data16
xchg
sbb
adcl
popa
add
loopne
pop
popf
outsb
inc
ret
aas
test
jno
loope
xchg
jbe
add
lock
sub
xor
mov
scas
loopne
popl
and
adc
pop
adcl
xor
bound
js
std
dec
sti
int3
mov
mov
loop
js
mov
pop
movsl
cli
inc
jge
pop
test
inc
push
lret
mov
leave
jae
push
movsl
ljmp
lock
hlt
xchg
xchg
out
subb
loope
jmp
out
mov
dec
test
pop
cmpsb
shrl
jne
test
je
cltd
cwtl
mov
mov
outsl
fwait
stos
cwtl
xchg
fdivrl
mov
mov
jmp
jnp
add
xchg
mov
or
outsb
push
sub
in
add
cltd
cmp
test
sbb
out
notl
lcall
andl
sub
ds
sti
addr16
cli
ss
mov
xchg
cwtl
cs
jns
orb
jb
add
fwait
sub
push
scas
out
cmp
lahf
sti
fstps
mov
cld
mov
lahf
mov
lcall
repnz
add
out
fwait
mov
fcoms
pop
ja
push
arpl
out
in
shrl
sbb
fisubl
pop
movsl
iret
mov
and
into
icebp
movsl
xor
cld
push
loop
repnz
push
pop
xor
fldcw
cs
xor
in
call
shlb
aad
cld
mov
mov
sbb
inc
in
shlb
pop
add
xchg
mov
hlt
lea
dec
dec
jns
jmp
push
sbb
pop
cwtl
mov
cs
cmp
jecxz
jae
xlat
sahf
xchg
ss
mov
lods
insl
jns
lock
scas
pop
ljmp
test
inc
and
leave
and
push
add
sub
popf
nop
enter
cltd
movsl
push
pop
xlat
lret
sbb
dec
outsb
fbstp
bound
cmpsb
pop
cmp
sahf
call
pop
call
popa
inc
test
mov
dec
shl
aas
loope
jl
fwait
mov
mov
mov
es
movb
jne
mov
adc
std
mov
jno
aad
cmp
test
lods
pop
outsb
ret
pushf
scas
adc
popa
push
into
adc
stos
inc
inc
xchg
jmp
xchg
xchg
ss
mov
pushf
imul
fst
outsl
std
mov
pusha
mov
fldenv
inc
fucomi
cltd
mov
dec
in
shlb
rcr
jbe
and
int
pop
add
inc
fcoml
fidivrl
mov
fildll
push
adc
mov
xchg
mov
js
pop
shrb
add
add
out
add
push
cmpsb
xchg
out
dec
jmp
shrl
test
adc
push
adc
call
xor
and
rcrl
mov
adc
xor
adc
popf
sbb
xchg
sub
in
rolb
sub
nop
pop
jl
sbb
into
sub
scas
xchg
lds
out
lock
inc
fistl
out
xchg
loop
arpl
mov
popf
mov
fcomps
or
addb
ds
xchg
cmc
mov
outsb
test
and
popa
dec
add
cwtl
xchg
dec
ds
scas
je
test
xor
dec
mov
lock
push
cs
push
test
sbb
sbb
cmpsl
mov
mov
ss
aas
hlt
mov
add
xchg
das
sti
xor
popa
lret
and
adcb
xchg
add
lds
int3
xchg
cld
mov
ret
jl
std
sahf
inc
mov
mov
xchg
mov
and
lods
out
rcrb
xor
adc
leave
es
xchg
mov
or
push
out
jg
sbb
jo
mov
fs
cltd
cmp
out
sti
pop
flds
test
or
xor
pop
fmul
adc
arpl
scas
shlb
mov
ja
fstpl
push
xchg
in
xchg
jnp
shrb
sub
mov
nop
scas
lods
add
out
mov
jo
add
sbb
push
mov
outsb
push
test
push
jge
lds
sbb
nop
dec
leave
popa
jns
sbb
sub
fs
pop
mov
shl
cmpsl
nop
sub
mov
sub
mov
pop
mov
aad
sarl
and
xchg
std
movsb
lahf
dec
dec
xchg
je
test
mov
pushf
jae
testl
jns
nop
incl
btr
fstpt
push
popf
shrb
in
mov
push
mov
pushf
xor
std
lret
or
dec
mov
loopne
push
push
ret
das
in
inc
fcom
dec
out
aas
fld
outsl
inc
dec
dec
hlt
mov
pop
data16
mov
iret
adcb
pop
adc
mov
aad
leave
push
mov
fsubl
sbb
mov
pop
and
bound
push
in
add
xor
push
cwtl
fcmovnb
dec
inc
lahf
imul
in
out
dec
and
rolb
lcall
fistpl
cmp
dec
cld
pop
imul
or
jl
inc
stos
lds
in
mov
and
insb
or
xorb
in
push
mov
sahf
inc
inc
test
lret
jnp
sbb
jecxz
lods
inc
daa
pop
fnsave
cli
lret
push
fdivrs
loopnew
fsubr
pop
xchg
and
add
jae
sub
mov
sub
mov
push
jmp
lcall
sub
xlat
jo
ss
cli
pop
imul
xor
or
pop
subb
pop
ret
mov
mov
shll
popf
stc
cmp
imul
sar
adc
pop
popa
xor
outsb
mov
aaa
iret
shl
mov
inc
cmp
and
cmpsl
js
push
call
mov
out
cmpsl
fistpll
icebp
fucomip
into
xchg
dec
pusha
lret
addr16
pop
inc
in
stos
das
je
push
jb
xchg
cwtl
xchg
dec
dec
xchg
das
popf
ss
jno
arpl
xchg
ret
sbb
repnz
mov
iret
push
popa
mov
ss
xchg
mov
adc
leave
lret
movsb
pop
mov
into
mov
bound
in
subl
les
sbb
leave
call
add
ja
lcall
mov
adc
sti
ret
js
fidivl
cmp
inc
jle
xchg
fcoml
scas
sub
inc
mov
xor
sti
movsl
ret
dec
int3
scas
pop
loope
aaa
sti
jge
add
push
stos
inc
jo
mov
mov
test
icebp
js
lret
lock
xchg
nop
out
mov
push
push
sbb
pop
xor
aaa
andl
enter
xchg
into
jae
jns
push
jge
ljmp
cltd
sub
mov
jp
and
cmpsb
jo
rorb
pop
adcl
das
inc
rep
ds
in
andb
sub
icebp
xchg
repz
cmp
push
mov
inc
daa
fs
in
enter
jne
adc
inc
in
mov
lds
inc
shll
leave
and
xchg
test
xchg
or
add
adc
pop
arpl
fsqrt
pop
cmp
movzbl
dec
adc
sarl
sbb
cmp
sub
xchg
fiaddl
subl
xor
xor
add
stos
push
icebp
insb
xchg
dec
pop
inc
shlb
cmp
insb
xchg
jo
dec
pushf
shll
add
cwtl
push
and
adc
fistl
add
out
mov
lret
mov
and
cmp
adc
pop
xchg
cs
std
add
outsl
sub
push
insb
loopne
mov
xor
popa
repnz
lahf
hlt
jg
mov
mov
lahf
js
or
dec
mov
xorl
add
mov
xchg
pop
xor
test
push
dec
jb
lcall
or
or
pop
jo
mov
addl
jmp
pop
xchg
add
ss
jne
clc
or
cmc
pop
xchg
add
daa
pop
dec
push
clc
or
jecxz
sub
mov
cmp
adc
inc
pusha
jl
popa
cmp
push
mov
sub
push
call
js
outsl
daa
pop
lods
ljmp
lock
je
add
push
out
xor
xor
lock
xor
clc
pop
sub
out
cltd
imul
dec
adc
roll
dec
push
mov
xor
xor
lds
popa
add
leave
mov
inc
push
ret
cmpl
fdivs
add
mov
xor
mov
xchg
inc
xchg
sub
push
mov
xor
lret
ret
rcrl
sbb
mov
outsl
push
inc
iret
je
add
jo
fwait
out
std
cmp
mulb
lds
out
push
push
mov
xor
fs
pop
lock
pop
repnz
sarb
shl
cs
fwait
pop
inc
inc
inc
and
add
test
movntq
pop
pop
popf
inc
fmulp
dec
divb
gs
mov
lods
cmp
in
add
mov
sbb
sbb
mov
aam
test
lods
ds
adc
pop
jno
mov
shlb
dec
or
enter
mov
mov
loope
mov
js
testl
dec
xor
sahf
mov
mov
dec
xchg
sub
adc
movsl
inc
cli
xchg
mov
out
call
orl
push
les
or
pop
lret
mov
call
paddusw
push
adc
test
xor
xchg
jnp
add
add
daa
xchg
ljmp
xor
add
or
test
pop
sub
leave
fwait
dec
daa
cmp
test
inc
rcr
sahf
xor
mov
pop
sbb
addr16
lods
cmp
sbb
jp
stc
pop
popa
or
ss
je
inc
push
pop
jbe
fisttpl
stos
es
mov
jne
and
pusha
fsubrs
clc
lahf
pop
lock
ret
insb
and
imul
insl
mov
hlt
jp
pop
jbe
mov
sbb
pop
and
mov
jle
enter
pop
mov
imul
ret
pop
cmpsl
or
xor
cmpsb
xor
into
push
pop
mov
das
pop
or
xor
push
loope
mov
mov
pop
mov
mov
sahf
pop
rcl
xchg
jno
cmp
sti
mov
movsl
shl
or
pop
add
push
out
daa
push
insl
adc
jbe
xchg
loope
mov
andl
imulb
mov
cmc
add
push
xchg
inc
push
dec
imul
test
mov
jge
in
push
call
rcrl
lods
inc
negl
pop
dec
outsb
ret
pop
pop
adc
addl
mov
jno
mov
pop
das
dec
push
ja
addl
divl
outsb
dec
jmp
jne
adc
test
aam
dec
insb
leave
pusha
pusha
push
stc
test
pop
out
out
pop
iret
push
jno
jl
maxps
jle
push
jmp
loop
std
shll
int
xor
cld
sub
out
bound
rcll
insl
gs
sahf
jle
xor
ljmp
push
data16
jae
mov
insb
dec
and
xlat
xchg
sbb
push
mov
jbe
je
int
push
rol
ljmp
adc
data16
hlt
les
mov
cs
in
cmpsl
movsb
cmp
inc
in
test
clc
mov
in
pop
push
out
xchg
fwait
inc
sbb
mov
adc
div
xchg
push
lods
inc
jle
lcall
push
sub
xchg
cld
push
je
adc
incb
call
push
inc
stos
or
mov
dec
mov
ret
pop
inc
mov
mov
mov
dec
out
jecxz
adc
sub
loope
jae
xlat
outsb
sti
js
sub
adc
call
cld
cmp
xchg
pop
jge
jo
sbb
in
les
loop
clc
sbb
sbb
rol
ficomps
dec
iret
or
dec
nop
inc
and
jp
lret
fwait
inc
cwtl
sub
inc
and
mov
arpl
cmpsl
adc
xchg
cmp
adc
dec
mov
fs
xchg
adc
lock
or
inc
pop
pop
push
leave
and
cs
adc
sub
gs
cmpl
add
xchg
sbbl
pushf
xor
jbe
ds
out
xor
mov
stc
jo
test
and
jecxz
hlt
cmp
iret
std
sbb
add
enter
sbb
jmp
sub
ss
dec
icebp
xchg
cmp
subb
xchg
outsb
cmpsb
loopne
inc
xor
mov
or
dec
mov
xchg
pusha
adc
lret
xor
daa
in
mov
push
mov
and
inc
in
push
jbe
mov
and
cltd
test
dec
out
repnz
mov
inc
pop
jecxz
xlat
out
cmp
test
shlb
les
in
andl
lods
inc
cli
ja,pn
sahf
push
sbb
adc
int
sbb
mov
sub
mov
push
fdiv
pushf
and
pop
sbb
aad
push
addr16
aas
jecxz
out
lahf
pop
insb
rcll
lcall
outsl
or
xchg
xlat
lret
cmp
add
and
jge
sti
inc
pop
mov
idivb
jo
lahf
mov
xchg
hlt
mov
jbe
sbb
push
rcll
cmp
mov
fcoml
mov
pop
rcrb
std
loopne
sub
imul
lea
test
lods
out
jb
jne
mulb
outsl
mov
sub
repnz
loope,pt
mov
movsb
pop
push
or
int
jnp
sahf
xchg
pop
lret
and
sti
iret
xor
iret
sub
mov
inc
jb
dec
divb
imul
es
jg
jecxz
add
xor
sub
roll
add
inc
aas
mov
push
stc
icebp
psrld
or
inc
pop
lret
mov
mov
mov
in
xchg
shlb
rcll
dec
aam
xor
xor
movb
and
sbbl
cld
add
movsb
jecxz
add
ljmp
pop
sti
prefetch
or
rcrb
pop
sub
sub
cmp
dec
push
sub
ljmp
mov
add
or
xor
sti
pop
dec
ljmp
call
test
loopne
mov
ja
jnp
stos
je
test
or
dec
leave
and
stc
arpl
xchg
xor
icebp
xchg
mov
scas
call
and
hlt
mov
add
and
jno
push
bnd
pop
icebp
and
sti
sub
sbb
adc
push
stos
loope
dec
test
loope
jle
ret
inc
fistpl
jp
sbb
sbb
test
xchg
push
ljmp
sbb
ljmp
pop
cld
cmp
cmp
push
aam
adc
int3
or
in
mov
dec
cmpsb
mov
and
mov
ljmp
and
insb
js
inc
jo
ljmp
test
xlat
ret
xor
mov
sbb
push
enter
jno
loop
ret
pop
shlb
push
jge
rcrl
in
insl
sbb
and
push
xchg
scas
adc
enter
and
inc
cmpsl
nop
mov
data16
repz
jmp
and
ret
movsb
aam
or
lds
outsl
xchg
xchg
scas
leave
cmp
xor
fucomip
adc
lods
mov
subb
movsl
lea
cmc
xsavec
xor
scas
xor
fbstp
lahf
push
sbb
jae
inc
les
cli
shrl
sub
mov
outsb
ror
dec
pop
mov
mov
lea
test
xchg
mov
mov
push
jae
pcmpeqd
fstl
jbe
hlt
and
leave
jo
stc
inc
out
dec
daa
jne
test
push
mov
sti
cmp
loope
inc
pop
inc
jb
push
inc
adc
outsb
hlt
call
inc
xor
lcall
and
test
movsb
pop
xchg
test
sti
cltd
pop
mov
pushf
test
add
fldt
adc
push
mov
xchg
aam
fistpl
pop
xchg
mov
xor
fucomp
pusha
les
push
push
mov
push
iret
arpl
ficoml
jge
lock
xchg
inc
sti
add
dec
in
mov
insb
js
cmp
jecxz
sub
fidivs
adc
in
pop
mov
sub
sub
lods
cmp
mov
pop
fs
pushf
xor
dec
daa
inc
subl
jg
into
add
xor
test
test
inc
push
push
mov
jb
and
fstl
push
aaa
xchg
and
mov
sbb
mov
pushf
cmc
pop
call
lods
pusha
popf
stos
adcb
mov
repz
cltd
loop
das
cmp
nop
repnz
leave
rcrl
mov
movsb
or
out
sub
mov
test
lds
fdiv
pop
in
push
movsl
sbb
neg
mov
sub
stc
imul
int
fidivl
mov
stc
insb
mov
jl
ret
cmp
mov
shlb
mov
sub
add
adc
xor
cld
push
pop
push
fisubrl
jae
cs
ja
adc
mov
jl
cs
iret
data16
outsb
aam
and
js
and
fisttpll
ds
pop
pusha
lahf
test
xor
mov
jg
insl
dec
dec
mov
ret
rclb
sahf
inc
pop
xchg
mov
iret
or
or
lods
inc
and
outsb
sub
sbb
lock
fistps
ja
jbe
xorb
xlat
sti
push
pop
ja
xor
setp
leave
dec
inc
repz
ss
sbb
out
or
test
adc
push
pop
insl
dec
shll
ret
push
sub
xchg
and
fnstenv
cmc
lret
scas
add
in
mov
fnstenv
addr16
sbb
fwait
adc
int
push
mov
icebp
adc
pop
fisubrs
sbb
jle
jg
jmp
push
out
jne
xchg
enter
pop
aam
mov
ficoml
xchg
sub
ja
enter
mov
and
je
cmp
sahf
pop
cmp
cmpl
cmp
aad
mov
push
loop
imul
add
and
dec
dec
or
and
push
jnp
cli
add
push
negb
push
loop
mov
add
movsw
lds
ljmp
testl
dec
mov
aaa
fsubrp
xchg
mov
xor
jl
adc
popf
dec
in
dec
adcl
and
adc
leave
or
out
xchg
loope
mov
and
sbb
fdivs
inc
xor
or
mov
shl
sbb
mov
outsb
in
aaa
cmp
dec
out
cmp
fcom
cmpb
mov
ljmp
cmpl
jge
mov
cmp
sarl
mov
cmpsl
dec
cltd
dec
lods
nop
out
lds
je
pop
xchg
sbb
add
call
lret
mov
cmp
xchg
jge
loope
rcl
lods
mov
sarl
mov
sbb
sbb
ficomps
rcrl
mov
shlb
lock
test
hlt
or
mov
pop
pop
enter
sbb
xor
sbb
cmc
xchg
scas
data16
cltd
lock
mov
mov
add
dec
stc
sahf
dec
call
movsl
nop
out
je
icebp
notb
dec
cmp
popa
xor
inc
sub
gs
cmp
inc
or
aam
test
jmp
pop
outsl
jnp
xor
popa
xor
in
dec
sub
xor
cli
fwait
mov
jns
push
or
test
and
inc
or
scas
mov
out
push
test
push
jae
lock
inc
mov
scas
lret
mov
test
sub
scas
std
xchg
xchg
pop
sbb
pop
dec
sub
into
and
inc
pop
cmp
flds
mov
cmp
pop
sub
cmpsb
sub
ret
in
mov
jae
jmp
adc
jae
xchg
sub
sarb
cmpsb
mov
fwait
jae
jne
mov
fmull
mov
lcall
hlt
cld
jns
push
mov
les
or
in
jmp
adc
pop
jne
xchg
mov
pop
xchg
insb
pop
pop
add
add
sbb
mov
cmpsb
xchg
mov
mov
rclb
cmp
ffree
and
into
mov
dec
xchg
sub
unpcklps
mov
mov
xor
lret
pop
sar
inc
enter
lahf
cmp
mov
ds
cmpsb
pop
dec
cmc
loop
adc
push
cmc
bound
jae
lcall
push
push
cld
adc
lahf
popa
jmp
mov
and
test
mov
mov
lock
jne
push
and
lds
mov
lret
mov
inc
scas
fcoml
mov
cmp
inc
push
repnz
ret
add
popf
mulb
out
cmpl
mov
fisttps
test
sub
lods
bound
mov
or
lea
fcomps
outsb
push
je
mov
cld
outsl
out
mov
and
push
push
fs
cmc
mov
xchg
divl
xor
pop
shrl
xor
xor
add
sub
add
insl
stc
aaa
mov
adc
out
mov
sub
jmp
mov
ja
sahf
lock
or
add
adc
push
add
bnd
adc
xchg
insl
mov
add
mov
pop
lods
mov
popa
fcmovbe
sbb
bound
adc
lahf
subb
jmp
adcb
gs
out
inc
sbb
int3
cmp
or
sub
inc
loope
stc
adc
dec
mov
xchg
inc
les
cmc
movsl
fsubl
add
xlat
add
into
fimull
or
dec
mov
push
out
es
push
mov
cmpsl
cmp
jmp
push
mov
fsubrs
cli
outsb
insb
and
rolb
jae
int3
mov
js
aaa
dec
jle
std
xchg
icebp
dec
sub
mov
out
cmpsl
xchg
aad
xor
cmp
jmp
sbb
inc
mov
lods
jnp
fsts
pop
ja
add
lret
push
cmp
cmp
dec
mov
pushl
mov
sbb
jo
cwtl
push
aaa
sbb
adc
bound
fstpl
jmp
mov
or
inc
bound
stos
cmp
push
xor
xlat
ret
aad
push
and
push
sti
add
push
mov
xor
sti
movq
or
xchg
push
loope
push
rcll
stos
xor
je
fucomp
cmpsl
mov
out
jb
mov
push
xchg
fsubr
gs
cmp
adc
jg
mov
xchg
movsl
orb
mov
push
cmp
xchg
inc
fcomps
mov
stos
call
in
jbe
lcall
dec
test
and
aad
inc
pop
ds
lret
pushl
sbb
pop
mov
notb
sbb
leave
ss
pop
fisubrs
or
cli
imul
mov
in
xchg
lahf
fisttps
stos
sti
or
jae
adc
int3
sbb
jno
mov
aad
aad
enter
or
icebp
cwtl
jb
and
jg
xchg
cmp
fwait
rcrb
jmp
les
fistl
ret
pushf
cmp
pop
outsb
sbb
insl
pop
fiaddl
mov
mov
mov
in
sbb
addl
inc
hlt
mov
inc
dec
lds
rcrb
fimull
adc
mov
popf
lods
ljmp
inc
fidivrs
stc
inc
popa
adc
push
inc
adc
jae
jne
fisubrs
xor
test
pop
jae
icebp
or
inc
sub
cmp
cmp
mov
sbb
dec
dec
cmc
pop
xchg
mov
pop
lret
push
inc
shrb
bndstx
fcmove
int
scas
ja
lods
mov
push
cmp
sub
divb
xchg
mov
aam
pop
stos
pop
fldenv
sub
pop
push
or
clc
das
es
loopne
call
mov
or
xchg
inc
push
sub
enter
xchg
rclb
add
in
mov
daa
dec
and
inc
dec
mov
imul
adcb
xor
cmp
pop
icebp
movsl
or
pusha
pop
je
xchg
leave
test
inc
and
cmpsl
xchg
hlt
pop
aad
xchg
cmp
dec
jnp
sbb
iret
aaa
jne
das
mov
test
mov
and
repz
orb
add
icebp
jmp
aas
jl
sub
jmp
outsl
sub
adc
loopne
adc
jmp
jbe
ffree
push
push
mov
fidivs
in
sar
inc
add
xchg
xor
pusha
int
fstps
loop
pop
int
aad
jge
mov
cmpsb
mov
jp
adc
push
push
push
shlb
push
lods
sub
or
adc
sub
ja
cwtl
test
or
mov
pushf
mov
test
in
mov
rclb
test
repz
lcall
and
jb
aas
repz
cmp
pop
mov
jecxz
xor
cwtl
cmc
pop
lret
push
roll
jp
dec
push
sbb
lret
push
jmp
pop
xchg
gs
popf
pop
imul
and
jmp
or
dec
scas
mov
dec
jnp
ja
xor
xchg
pop
xchg
inc
jge
xor
ljmp
fists
mov
push
ficomps
or
gs
nop
cwtl
adc
jo
pop
jg
xchg
leave
and
pop
jnp
add
imul
add
jle
popf
pop
iret
sahf
push
int
jecxz
out
cld
outsl
leave
cmp
add
jmp
outsl
hlt
xchg
sbb
push
dec
push
ljmp
aad
sbb
sahf
or
call
or
lods
mov
lds
shlb
sub
lcall
sub
lea
push
hlt
dec
stc
nop
cmp
or
sub
lcall
cmp
adc
cmp
sub
rcl
jl
xchg
aam
add
cs
dec
jno
cli
and
inc
jg
mov
in
test
xor
lds
andl
inc
or
inc
jecxz
nop
jecxz
in
adc
fldl
test
add
sbb
orb
rcll
popf
push
pop
pop
out
cmp
dec
mov
mov
out
pop
add
xchg
adc
mov
pop
mov
sahf
mov
cmpsb
in
xchg
call
mov
push
outsl
jns
mov
test
adc
cli
test
jns
sub
int3
push
sbb
add
xorl
inc
lret
inc
push
setp
inc
jbe
cmp
pusha
dec
or
test
push
ficompl
mov
stos
push
jmp
pushl
stos
add
dec
xlat
test
xlat
mov
push
scas
cmp
sub
loope
mov
aas
movsl
out
pop
adc
movsl
fimuls
int
hlt
jbe
mov
imul
imul
insl
sbbl
daa
sbb
mov
lods
push
and
push
shrl
sub
jecxz
dec
adc
lret
pop
lcall
dec
mov
jae
iret
mov
mov
jmp
ds
cmp
mov
inc
adc
mov
test
jne
pop
ret
repz
pop
out
outsl
mov
mov
mov
frstor
jnp
mov
out
stos
pop
ljmp
xchg
lods
mov
push
int3
cmpsb
shll
pop
imul
stos
pusha
cmp
jne
pop
sub
jbe
mov
sub
shll
cmc
jmp
ja
sbbb
loopne
pop
sub
in
addr16
add
cmp
inc
lds
adc
or
xor
arpl
mov
incl
lret
daa
outsl
aas
and
jns
jno
insl
adc
int3
pop
popl
fmul
pop
lcall
dec
and
aas
xchg
jno
pusha
sbbb
cmp
or
scas
mov
xlat
icebp
push
cmp
adc
pop
inc
add
cmpsl
mov
out
in
inc
push
mov
adc
leave
pop
rclb
push
jp
add
outsb
mov
and
dec
std
xchg
jae
aaa
test
xchg
sbb
cmp
adc
pop
imul
mov
pusha
mov
jb
mov
data16
das
into
jl
ja
repnz
ja
into
test
xor
xchg
lret
push
std
xchg
inc
mov
inc
jno
pop
add
jmp
and
cmp
xchg
shll
mov
stc
outsl
hlt
orb
fnstenv
stc
test
fldt
iret
xor
jg
gs
pop
dec
jo
cli
je
lcall
sahf
mov
es
cmp
and
xchg
insb
mov
dec
push
dec
xchg
in
movsl
clc
nop
cmp
addr16
loop
dec
mov
sti
push
dec
leave
sti
mov
jo
jmp
not
sbbb
xchg
sbb
sub
rol
repnz
jg
sub
dec
pusha
jecxz
lds
ja
mov
and
and
xchg
in
adc
pop
xor
adc
pop
into
movsl
int3
or
xor
ja
cwtl
ret
outsl
inc
jns
jae
outsb
loope
pop
cwtl
incb
inc
jb
jmp
xchg
adc
loop
push
aam
jmp
dec
pop
inc
xor
sub
cli
scas
das
cmp
fildl
cwtl
dec
push
adc
pushf
xor
add
test
out
pop
insb
jne
push
cmpsl
lea
jmp
adc
loop
xchg
fpatan
xchg
imul
dec
pushf
cmc
cmp
push
mov
push
lds
int3
insb
mov
test
sarl
xor
repz
dec
lahf
testl
dec
scas
add
xchg
cmp
sbb
insl
push
jg
fcomi
in
pop
add
push
pop
cmp
fisttpl
shl
je
outsl
inc
pop
mov
push
icebp
and
pop
lret
or
mov
test
mov
addr16
add
inc
mov
test
stos
or
push
dec
and
jp
ret
xchg
sbb
jo
xchg
dec
adc
adcb
mov
insl
sbbb
sub
fisttpl
repnz
xlat
mov
pop
sub
xor
pushf
cli
pop
icebp
jg
mov
fldenv
jne
daa
mov
jae
or
jle
pop
lock
jle
test
int3
add
pushf
movsl
jb
outsl
push
adcb
into
out
in
push
push
mov
mov
out
out
push
cmp
insb
ss
jecxz
pop
add
add
in
lods
lods
mov
xor
adcb
in
arpl
cli
jae
lahf
mov
push
sbb
mov
fxch
pop
mov
mov
pusha
xorb
xchg
adc
xor
int
add
out
jge
cmp
mov
int3
shll
sub
mov
out
into
in
daa
cli
ljmp
int
sbbl
jge
pusha
sub
mov
fdivrl
arpl
mov
and
xor
add
push
loopne
mov
in
jp
adc
dec
hlt
xor
aad
arpl
sub
or
dec
sbb
and
and
sti
dec
fxch
subb
std
xor
pop
xor
in
and
aaa
cmpsl
out
pusha
test
sub
mov
repz
adc
jno
loopne
out
xchg
or
pop
enter
lock
jle
and
pop
or
incb
dec
rcrl
xchg
dec
filds
jmp
pushf
dec
xor
dec
cmp
into
movsb
sbb
cmc
mov
jne
pop
aam
mov
mov
loop
imul
movsb
popa
mov
jo
mov
mov
inc
mov
adc
fidivl
sub
sub
and
push
mov
xor
inc
dec
push
mov
in
popf
mov
lcall
or
cmpl
adc
mov
leave
adc
dec
loope
daa
dec
xlat
push
pop
imul
inc
and
dec
dec
jp
mov
and
fcmovnbe
rcr
jnp
bound
cld
scas
out
sahf
mov
sub
add
inc
sub
ja
arpl
icebp
push
jmp
dec
xchg
jo
pushf
fadd
scas
into
xor
and
fs
int3
inc
bound
in
pop
hlt
inc
pop
inc
inc
arpl
push
loopne
inc
das
es
roll
mov
or
daa
out
jge
fldt
or
and
jbe
cmp
inc
cltd
dec
stos
xchg
add
pop
xchg
jp
nop
sbb
mov
fwait
push
jns
cmc
mov
or
jge
mov
fistpl
sub
mov
jns
decl
add
mov
lods
sub
jecxz
push
pushf
sub
js
xor
and
jns
sub
lahf
imul
sub
js
leave
and
mov
sbb
adc
lds
adc
mov
fidivl
sarb
sbb
add
mov
pop
push
jbe
and
scas
mov
jne
aas
adc
sub
movsl
fdivp
pop
ja
dec
test
sbb
mov
pop
jb
iret
xor
mov
jno
adc
or
push
shlb
test
mov
daa
scas
inc
test
cltd
xor
cli
mov
jle
push
mov
pushf
dec
addr16
inc
out
add
fs
fbstp
out
test
js
mov
cmp
mov
hlt
mov
push
cmp
lcall
inc
push
jnp
into
pop
movsl
pop
or
dec
outsb
xlat
pop
in
movsl
loop
jp
xor
mov
clc
pop
aaa
fbld
cld
and
and
leave
inc
lods
bnd
mov
test
or
push
cmp
xor
mov
xchg
sub
cld
xor
stos
mulb
sub
mov
insb
sub
je
frstor
jne
mov
bound
ret
data16
daa
inc
adcl
shr
add
mov
das
mov
pusha
adc
dec
xor
sub
lahf
notl
rorb
shlb
testb
adc
add
dec
ds
out
sahf
clc
push
sbbl
cltd
jbe
lcall
enter
dec
mov
aas
xchg
mov
das
mov
insb
dec
in
jb
jo
mov
je
sbb
inc
lret
adc
or
cmp
push
push
mov
outsb
sub
insl
xchg
xchg
test
pop
in
test
cltd
lock
or
or
jp
aas
dec
jae
cmp
jl
sub
sbb
jnp
movsl
mov
pop
mov
push
mov
jnp
pushf
jb
or
push
aad
test
loopne
lea
nop
jno
in
xor
jmp
cmp
popa
and
cmc
addr16
bound
cmpsl
lods
cmp
push
inc
jae
fldl
xlat
les
push
test
ror
dec
stc
push
xchg
or
cmp
clc
js
pushl
test
fldl
dec
lods
or
lds
jg
add
sbb
mov
pop
push
call
mov
xchg
xor
outsb
lods
in
pop
mov
push
xchg
imul
xor
push
movsl
sub
push
xor
cltd
sub
test
sbb
jbe
lock
jb
scas
push
int3
xor
rorb
fnstenv
int3
and
aas
ljmp
xor
or
movsb
arpl
dec
loope
fcoml
jno
cltd
mov
mov
test
lcall
aad
mov
sbb
rcrl
sub
into
pop
cli
rcrb
sbbb
push
addr16
sahf
add
insl
cmp
divb
int
sahf
sub
test
push
jbe
ja
ds
mov
dec
pop
enter
jae
mov
xchg
xor
mov
std
and
add
popa
xor
and
jmp
imul
lcall
repnz
cmpsb
cmp
lds
mov
sbb
jae
push
xor
sahf
test
mov
and
jl
jp
jmp
sub
nopl
int
je
dec
jns
stc
pop
movsl
icebp
fsubrs
push
pop
xlat
mov
insb
orl
push
pop
stc
iret
fisubl
mov
clc
sbb
dec
aaa
add
cmp
sub
or
data16
aad
push
cmpsl
mov
mov
ret
dec
xor
mov
jnp
jae
sub
xchg
push
inc
test
out
inc
pop
cmp
push
sbbb
push
out
or
and
mov
andl
cwtl
pop
out
lret
lcall
inc
xor
hlt
mov
or
and
rcr
jb
inc
iret
pop
inc
xchg
stos
inc
cmp
rcrl
shl
call
or
sub
inc
push
lds
push
iret
push
dec
movsl
icebp
in
scas
frstor
xchg
add
mov
push
jnp
jo
lea
daa
fwait
push
pop
mov
push
sub
outsl
aad
or
div
call
add
jecxz
fdivrs
out
cwtl
xor
xor
mov
clc
ret
hlt
sbb
xor
jo
mov
inc
fsts
aas
pusha
push
sbb
sbb
and
mov
xchg
jae
rcrb
dec
push
shrb
inc
push
dec
mov
enter
lea
xlat
ss
subl
fs
ret
mov
xor
cmp
push
in
fldl
pop
popf
imul
outsl
and
test
ja
push
test
scas
popf
arpl
sahf
repnz
mov
push
loop
xor
cltd
and
enter
sbb
jg
scas
push
mov
mov
sbb
sub
jbe
push
mov
cmpsb
mov
adc
push
pop
aam
sbb
pop
lods
lahf
ds
fsubrl
out
mov
stos
test
inc
int
jbe
sbb
aaa
xor
sbb
sbb
and
insb
add
mov
xlat
repz
enter
jbe
mov
fcoms
jb
jo
adc
shll
sub
mov
cltd
cltd
inc
add
xchg
sub
sbb
or
xchg
xchg
popf
shrb
in
adc
mov
xor
arpl
mov
fmul
rcll
fstpl
fdivl
xchg
aaa
mov
icebp
jp
leave
pusha
cmp
loopne
jle
or
lock
pop
test
adc
shlb
pop
push
stc
dec
loopne
jle
mov
cs
decb
lds
les
rcrb
fistps
jnp
shl
cmp
add
fwait
xor
in
int
pop
sub
lahf
repz
gs
bound
xor
test
cltd
jge
cltd
mov
idivl
lea
cmp
lcall
int
sbb
scas
pop
xor
xchg
cltd
xchg
leave
dec
test
testl
test
and
push
push
clc
jp
lods
ja
sub
sbbl
cltd
lret
je
or
cmc
lea
loope
and
pop
lock
xchg
daa
adc
notl
cwtl
mov
ret
mov
movsb
and
scas
aaa
into
es
int
ds
xchg
js
insb
bound
sbb
in
test
push
es
inc
lret
subb
into
repz
mov
sbb
jns
pop
cmp
test
jl
push
cltd
test
and
imul
dec
sbb
push
xchg
decb
cld
aam
insl
push
push
out
mov
mov
sahf
fldl
bound
xor
in
lret
aas
pop
jp
popf
arpl
ja
xor
fstps
ud0
sbb
fyl2x
cmp
push
bt
cs
fidivs
icebp
dec
stos
js
fcmovbe
xchg
push
cmc
inc
mov
test
lret
nop
sub
jp
ret
popa
in
mov
addr16
test
movsl
pop
mov
cmp
loopne
mov
mov
out
xorl
dec
mov
mov
pusha
aam
addr16
mov
push
gs
or
jnp
test
sub
push
negb
aad
cwtl
test
jb
dec
movsl
faddl
mov
in
mov
push
push
mov
fwait
mov
popa
loopne
jae,pt
jo
jl
dec
popf
lret
subb
stos
sbb
enter
pop
xchg
mov
aaa
into
jmp
jg
dec
sub
jbe
mov
xor
adc
enter
cmp
test
dec
test
rcll
clc
cmpsl
sar
loope
mov
repz
int
jecxz
es
rcrb
rorl
loop
pop
xor
imul
movsb
push
dec
pop
pop
push
jecxz
sub
mov
pop
out
or
lcall
cmpsl
ds
imul
aaa
pop
in
dec
cltd
mov
cmp
cmp
js
dec
mov
int
add
xor
outsl
test
loop
leave
cmpsb
imul
aam
add
repnz
mov
out
cmp
dec
lret
mov
fdivs
or
xchg
call
pop
cmp
xor
pop
mov
imul
sbb
cs
ljmp
cmp
bound
mov
stos
add
jmp
mov
pop
lods
or
icebp
test
xor
xchg
inc
insb
inc
cmc
repnz
cmp
fiaddl
or
jne
jecxz
shll
lds
adc
vmwrite
scas
cmp
in
fldt
xor
inc
xchg
inc
dec
dec
fld
rcr
push
fdivl
lods
rorl
mov
cmp
out
daa
jb
xor
sti
fwait
bound
push
mov
inc
jbe
es
scas
in
push
or
xchg
xchg
ret
sarl
push
cmpsl
repz
or
int3
movsb
jo
jle
fs
jae
mov
cmp
jl
push
sub
add
or
pop
ficompl
daa
jmp
insl
and
out
loop
adc
lock
sbb
push
shll
and
fildl
mov
jmp
mov
ret
jge
cmpsl
hlt
sub
mov
inc
movsb
jnp
or
and
adc
aam
add
pop
loop
popa
pop
or
test
popf
iret
lods
xchg
jge
int
je
jno
mov
xlat
xchg
xchg
xchg
loope
mov
xchg
sub
jnp
add
push
pushf
and
and
inc
sub
mov
sub
mov
push
stc
xor
movsl
and
dec
adc
xchg
add
fadds
xor
ficompl
mov
movsb
movsb
push
pop
xlat
push
xor
adc
icebp
add
cmc
adc
and
adc
stos
mov
decb
lods
jmp
shr
or
dec
push
xchg
ret
loopne
dec
fwait
pop
jb
or
int
int
movlps
lods
out
lea
sbb
cld
adc
adc
icebp
xor
jbe
mull
lods
jmp
jne
andl
sbb
mov
pop
jb
adc
xchg
and
push
popf
dec
pop
mov
shrb
jnp
lret
mov
mov
jae
not
cmp
sbb
es
lcall
or
int
scas
sub
jno
negl
push
mov
daa
xor
call
pushf
std
sbb
outsb
ljmp
dec
ljmp
dec
sbb
test
jb
jae
jl
sub
ret
pop
loopne
jae
les
xchg
cmc
jno
incb
jne
jmp
mov
jo
jb
stos
and
mov
cltd
jle
push
pop
mov
fisubrl
pop
jmp
mov
adc
jae
add
sbb
jg
cmp
pop
scas
pop
adcl
mov
mov
ret
cli
mov
adc
or
xor
adc
nop
push
inc
sahf
or
xchg
push
inc
adc
aam
pop
or
dec
popf
xor
mov
cmp
repz
dec
mov
lock
shlb
lods
imulb
lock
lret
js
xchg
sub
cltd
push
push
jne
xor
cs
mov
ror
pop
repz
adc
sub
aas
mov
aam
outsb
jno
xchg
mov
push
lods
into
shrl
daa
clc
sub
mov
mov
daa
lcall
aad
jo
aas
xor
xchg
push
push
pop
xor
je
loop
movsb
ret
aaa
imul
ret
outsb
add
aad
and
clc
outsl
push
jns
inc
and
fs
jo
mov
adc
jb
and
sti
cmpsl
dec
ret
adc
cmp
mov
mov
popa
jnp
scas
xchg
pop
mov
daa
mov
mov
loopne
arpl
push
mov
fstpl
pop
xor
jp
xchg
mov
loopne
add
push
movsl
out
std
outsb
test
xchg
adc
bound
lahf
mov
xchg
fwait
mov
xor
arpl
std
mov
sbb
push
outsl
xchg
mov
pushf
ret
pop
adc
mov
mov
jns
repnz
and
call
mov
dec
mov
push
lods
rcrb
sub
jg
les
jns
out
les
mov
scas
mov
push
pop
cmc
cmp
cwtl
arpl
push
mov
xchg
je
ret
pop
aaa
push
das
nop
stc
xor
sub
pop
test
push
jb
jecxz
push
dec
jns
sbb
arpl
sbb
cltd
ljmp
cmp
dec
adc
jl
push
jo
aaa
imul
and
and
dec
inc
daa
cmp
aam
and
mov
push
xor
jnp
cwtl
das
imul
add
insb
movsw
cmp
iret
ja
push
dec
lock
push
push
icebp
push
sbb
fisubs
cmc
mov
repz
shrl
jp
adc
or
movsb
add
repz
mov
mov
sbb
ret
je
pusha
divl
leave
or
sub
das
daa
dec
mov
inc
lods
jecxz
push
xor
and
jmp
mov
xor
or
jo
mov
xor
push
adc
je
jl
notb
mov
test
mov
outsb
test
or
out
or
sub
rorl
add
cmp
lock
lds
pop
push
test
inc
sub
popa
data16
sbb
mov
jb
xor
xchg
sbb
movsb
xchg
push
xchg
pusha
out
cmpsb
les
mov
xchg
out
cltd
mov
aaa
dec
ret
jmp
pop
ss
cmp
mov
dec
pusha
xor
mov
aaa
dec
or
out
pop
jne
bound
adc
cmpl
enter
inc
shl
lret
jb
mov
in
push
data16
test
dec
test
mull
loope
out
cli
pop
outsb
loope
cwtl
lods
cmp
flds
inc
jae
xchg
adc
xchg
lret
push
or
push
jl
jnp
xor
mov
mov
icebp
and
mov
mov
notb
insl
and
mov
sti
and
pop
push
ret
ljmp
fildll
push
jns
jmp
dec
jge
dec
jb
fdivrs
adc
pop
stos
outsl
and
hlt
jo
loop
add
sub
fnstsw
push
imul
mov
dec
and
notb
loopne
sub
pop
loopne
sub
fimull
sbb
adc
xchg
dec
jne
insl
cmp
icebp
jecxz
and
mov
push
sahf
inc
test
movsb
pushf
mov
test
jo
dec
sub
push
and
les
pop
sbb
or
xchg
in
hlt
decb
sbb
adc
jno
push
pop
mov
arpl
aas
push
or
ljmp
or
mov
adc
jno
outsb
push
xor
fists
movsb
inc
outsb
cmp
cli
cmp
pop
cmpsb
xchg
sub
popw
cmp
add
mov
cwtl
push
and
mov
ret
lea
pop
mov
in
push
ret
daa
mov
sbb
inc
imul
mov
lods
insb
xor
mov
mov
fwait
cmpb
xchg
insl
sub
mov
fwait
jne
sbb
push
movsb
xor
and
add
call
inc
cs
or
add
in
incb
sti
enter
bound
mov
jp
jmp
mov
sub
cmpsl
sbb
enter
push
and
and
test
fsubrp
xor
mov
cmp
fstl
hlt
cmc
pop
sub
mov
dec
insl
mov
mov
and
push
incl
adc
or
jne
or
inc
repnz
dec
repnz
scas
dec
pop
jae
addr16
out
mov
xchg
lret
mov
aaa
push
sub
fwait
gs
xchg
push
cld
sub
sub
push
mov
out
adc
lcall
push
lcall
roll
cmp
jbe
leave
jae
xchg
inc
fimuls
inc
out
jnp
jmp
mov
out
mov
out
dec
pop
lret
jno
add
fwait
stos
pop
out
addl
repnz
push
adc
lret
mov
push
xchg
shll
push
mov
test
stc
test
repnz
je
lret
ds
leave
pusha
sarb
inc
inc
es
xor
data16
mov
xchg
xor
adc
lret
pop
ss
clc
dec
push
in
jmp
roll
rolb
insl
pop
popa
lock
iret
jns
jl
xor
cs
xchg
push
inc
push
fimull
dec
lods
push
or
and
cmp
dec
push
mov
mov
scas
dec
or
sub
dec
aam
or
cmc
dec
and
cmpb
lret
and
mov
pop
fdivs
fs
add
push
mov
mov
xor
pop
fcoms
or
sbbl
sub
sahf
push
sbb
mov
scas
shll
out
push
clc
ja
insl
gs
sub
xchg
out
subl
push
xor
aas
xchg
lahf
fsubs
int3
cmp
cmp
loopnew
pop
mov
pop
xor
nop
jae
push
mov
out
in
jb
add
mov
pop
add
mov
les
cmp
fidivrl
fstpt
sub
ds
lret
and
jecxz
xor
jb
shll
arpl
pop
add
jge
sub
sarl
push
and
and
or
pop
sahf
dec
sbbb
aad
pushf
sbb
loope
out
ljmp
mov
sbb
lcall
cmp
out
das
sub
aam
aas
add
das
mov
push
scas
adc
dec
and
jnp
lcall
stos
loope
adc
icebp
push
add
lods
sub
and
and
scas
cmp
or
fnstsw
movsb
xor
dec
mov
pushf
mov
pop
loop
xchg
dec
inc
out
enter
mov
xchg
inc
add
mov
push
and
push
lods
add
cltd
sub
fbstp
cmp
out
cmc
sub
rorb
and
sti
outsb
in
inc
fistl
aam
add
mov
les
stos
inc
arpl
shll
sbb
jb
adc
mov
clc
dec
sbb
mov
test
test
adc
add
jno
hlt
popf
push
lret
inc
and
push
push
mov
dec
push
rcrl
mov
push
mov
mov
test
inc
cmpps
or
pop
fdivrl
and
inc
pop
xchg
fdivrs
icebp
push
push
jo
div
xor
rcrb
inc
inc
adc
outsb
fbld
push
sub
imul
xor
in
adc
inc
outsb
fcompl
sub
cmp
dec
dec
out
test
cmp
stos
push
sbb
out
cmc
sbb
fnsave
mov
std
sub
bound
pop
loop
xchg
dec
or
and
or
je
in
dec
dec
in
adc
lds
add
jl
in
jo
sub
mov
adc
cs
inc
test
sub
xor
js
mov
mov
leave
movsb
mov
lods
bound
das
mov
shl
fnstsw
mov
decb
outsb
lods
mov
insl
mov
pop
sbbl
or
cmp
fs
sbb
jae
mov
mov
mov
xlat
sbb
mov
test
xchg
test
adc
testb
push
add
inc
ds
adc
daa
frstor
adc
or
gs
pop
sbb
xor
push
int
ss
xchg
sub
xchg
dec
pop
cmp
lcall
cltd
jne
jp
mov
std
push
mov
pop
inc
lods
scas
xchg
jne
out
bound
sbb
movsl
mov
xchg
scas
mov
pop
adc
pop
fnstsw
xchg
sub
pusha
lret
aam
jmp
cmpsb
out
lock
inc
fstl
jle
rcrb
jb
scas
mov
push
mov
cld
mov
daa
clc
out
cmp
xchg
shl
mov
dec
rcl
inc
dec
sbb
aad
jmp
mov
mov
lea
fistpl
shlb
fcomp
push
jne
cmp
pop
or
add
jecxz
sub
punpckldq
dec
push
pop
bound
sahf
out
mov
lahf
jno
mov
pop
insl
pop
aas
mov
mov
pop
test
or
test
and
pop
in
dec
outsl
mov
out
leave
sub
pop
std
xchg
dec
lahf
pop
hlt
mov
fnstsw
mov
or
repnz
clc
popf
jp
jns
cmp
in
sub
sbb
or
mov
jecxz
dec
sub
pop
inc
add
adc
in
add
push
stc
cmc
mov
fnstsw
cld
scas
mov
push
ds
jbe
inc
bndldx
scas
push
test
test
or
jecxz
mov
dec
pop
or
popf
xor
sbb
mov
fldcw
pop
cld
jb
fxtract
in
xor
lds
imul
mov
repnz
pop
or
outsl
inc
add
mov
xor
fnstsw
sbb
pop
imul
mov
inc
add
push
dec
jge
lcall
fldt
hlt
inc
lret
daa
dec
lret
loopne
adc
incl
add
mov
push
and
jnp
ljmp
cmp
ficomps
bound
js
lahf
les
pop
in
cli
loop
inc
sub
and
inc
test
lea
repz
imul
rcrl
mov
sbb
xchg
pop
ret
dec
pop
mov
mov
fcoms
lea
scas
clc
shr
repz
stos
xchg
adc
adc
aas
mov
sbbb
sbb
inc
sub
out
fistps
inc
dec
in
mov
imul
int
ss
jl
sahf
js
lahf
mov
sti
out
xor
push
icebp
ljmp
ret
xor
cmpsb
scas
adc
out
and
int
es
sbbl
push
xor
or
scas
std
cmp
push
lock
ror
dec
jns
xchg
dec
mov
sub
imul
mov
mov
dec
push
push
xlat
mov
mov
ret
mov
hlt
out
inc
push
jae
jge
push
sub
cmp
lret
outsb
in
add
enter
sbb
fs
cmpsb
jg
jg
jbe
cli
fisubl
fbld
and
fidivrl
cmc
cmp
clc
addr16
hlt
mov
pop
xchg
sub
inc
adc
mov
adc
and
or
cmp
inc
cmp
pusha
scas
mov
jge
addr16
sbb
out
rorl
test
fisttps
xor
or
addw
call
add
inc
shrl
jmp
add
cmc
in
ret
dec
sub
insb
and
sbb
add
pop
mov
sub
inc
mov
pusha
ja
call
or
or
push
sbb
test
dec
pop
adc
dec
cmp
mov
or
call
mov
popf
jg
mov
mov
or
popa
jnp
sub
loopne
adc
es
cld
jl
clc
nop
push
add
adc
xor
addr16
lods
loop
push
subb
in
push
and
out
dec
push
icebp
adc
test
icebp
push
nop
out
mov
mov
rolb
movsl
cld
sti
lods
pop
icebp
cwtl
sub
or
sti
push
cld
mov
dec
repz
scas
shlb
test
mov
xor
lahf
and
ds
or
mov
push
sub
xchg
inc
or
fstpl
push
mov
sub
divl
fmull
adcl
cvtdq2ps
xchg
push
int3
out
mov
cbtw
das
add
sbbb
mov
jb
loopne
in
test
dec
add
lds
mov
leave
aas
daa
jne
adc
test
enter
dec
rcrb
jl
xor
test
popa
clc
ret
cmp
add
nop
xchg
sbbb
adc
inc
data16
pop
es
mov
clc
sahf
xchg
test
shrl
nop
aas
shrb
stos
ja
testb
movsb
xchg
mov
push
stc
push
inc
loop
push
or
pop
mov
sub
jmp
out
fsubrp
adc
inc
rorl
sbb
mov
cmpsb
xor
dec
mov
dec
arpl
fisubrl
in
push
and
lods
push
aam
je
inc
and
repnz
pop
push
sbb
adc
cmp
xchg
inc
sbb
stos
les
jle
inc
lret
lahf
or
lods
fnstenv
fdivrl
imul
out
mov
fisubrl
sbb
cwtl
dec
movsb
inc
pop
jge
jnp
daa
cmp
pop
insb
add
xchg
ror
xchg
lret
adc
sahf
rcrb
cmpsl
fwait
out
xor
call
push
stos
inc
out
out
xchg
xor
movsb
ja
mov
mov
mov
faddp
jb
nop
cmp
aaa
or
sbb
push
push
aas
lods
cmp
in
repnz
adc
push
xlat
xchg
iret
and
fisttps
scas
push
rorb
and
sub
bound
inc
pop
mov
mov
lods
cltd
mov
inc
lret
int
in
std
icebp
jbe
ljmp
mov
cmp
mov
ror
shll
call
lret
notb
mov
mov
mov
setae
pop
mov
jg
and
out
mov
inc
lods
fs
clc
xor
inc
fstpt
lahf
fbld
js
xor
mov
popa
jl
pop
addl
dec
adc
cmp
int3
rcrb
je
cmp
push
cmp
notl
bound
adc
cmc
fldenv
push
dec
cs
mov
dec
shrb
xchg
mov
lea
sbb
ss
dec
in
dec
mov
jo
sub
scas
sahf
xchg
inc
sub
mov
es
xchg
push
lret
mov
add
mov
add
lods
shll
jg
adc
dec
push
mov
mov
fidivrl
jl
test
sbb
mov
aas
jmp
fsubrs
sbb
int3
pop
dec
gs
mov
bswap
xor
pop
inc
movsb
ret
or
xchg
adc
sti
lret
adc
jmp
adc
pop
push
loope
jecxz
jae
mov
mov
inc
sub
lcall
pop
push
test
in
sub
movsb
shll
adc
aad
in
enter
mov
and
jecxz
rolb
xchg
push
or
xlat
dec
cwtl
decb
jge
inc
xchg
jne
pop
fmul
pop
lcall
arpl
fistl
sbb
pop
jbe
add
add
ljmp
and
sbb
lret
pop
inc
aam
std
pop
xor
int
gs
notl
insl
jg
mov
push
shll
adc
xor
jg
ljmp
inc
cltd
or
stos
xchg
adc
out
pop
and
je
xchg
sub
mov
push
or
fisubl
jl
iret
jecxz
inc
rclb
pop
adc
cmpl
add
xor
fdivl
adc
pop
addl
lds
mov
lahf
xor
cmpsb
xchg
das
jno
jbe
mov
push
push
clc
jae
stc
hlt
js
cmp
jge
dec
xlat
pop
je
test
mov
por
sub
cmpsl
outsb
dec
je
aaa
add
lds
mov
mov
out
sahf
sub
push
addb
sbb
mov
jb
mov
lcall
xor
pop
cmp
dec
and
or
xchg
call
cld
inc
push
inc
push
inc
cmp
stos
xor
inc
pop
mov
mov
push
or
sar
xchg
jmp
out
pop
xor
add
mov
clc
inc
negl
pusha
clc
adc
mov
dec
dec
dec
outsl
mov
mov
cmp
rcl
test
inc
jmp
mov
or
nop
or
push
negb
fwait
jbe
fistpl
cltd
out
push
mov
fdivr
aaa
into
sub
aad
jnp
ret
push
add
push
cltd
insb
push
push
mov
cltd
pusha
jae
xor
fimuls
sub
pop
out
pop
loopne
and
add
mov
iret
js
fnsave
push
fsubrl
or
cwtl
cli
pop
jmp
mov
xor
sbb
xor
cmp
shrb
or
cmpsb
std
and
jae
or
shl
inc
pop
inc
es
or
adc
add
or
enter
mov
or
outsb
adc
cmp
add
shll
fs
lea
push
in
xchg
daa
scas
inc
xchg
dec
imul
mov
add
mov
hlt
cmp
int
mov
xor
mov
xor
in
cmp
dec
into
in
stc
pop
ss
dec
pop
shr
lahf
daa
dec
js
mov
xor
fnstsw
fbstp
dec
fs
mov
roll
xchg
out
pop
paddusb
pop
out
jl
mov
pop
lahf
aad
test
js
mov
test
mov
sbb
inc
or
or
mov
outsl
daa
inc
mov
or
lahf
lret
lods
mov
fimull
push
stos
lods
and
sub
pop
sarl
jnp
adc
das
icebp
popf
pop
loopne
push
lahf
add
mov
sarl
adc
pop
ljmp
pusha
mov
insb
add
pop
sqrtps
xor
fists
push
mov
decb
call
test
adc
mov
mov
es
adc
sarb
xor
cmpsl
sbb
and
icebp
adc
mov
ficomps
filds
sub
fdivl
sbb
adc
in
out
shlb
add
push
pop
andb
mov
sti
cmp
xchg
and
mov
jl
inc
pop
push
sub
mov
jmp
sub
jno
test
iret
insl
jge
aaa
out
or
das
xchg
jl
dec
add
lods
jne
xchg
dec
inc
popl
jecxz
add
test
push
lods
cld
adc
leave
mov
stos
mov
frstor
and
iret
xchg
xor
dec
loop
iret
lcall
mov
and
and
sub
jg
mov
or
cmp
adc
cmp
pop
mov
fcomip
lcall
cmpl
mov
stc
popf
or
and
leave
push
lock
psubsb
push
xor
stos
inc
pop
xchg
rcll
fwait
push
add
push
inc
push
fistpll
inc
outsl
jae
arpl
popa
fsubrp
bound
sub
ja
sub
aas
and
shlb
cmp
sub
fdivs
jne
out
sahf
inc
pop
sahf
clc
rcl
sub
aad
add
dec
ret
sbb
xchg
mov
lea
cmp
add
test
enter
ja
mov
pop
mov
lahf
jecxz
sub
push
and
add
insl
xchg
xor
ja
movl
fdivrs
adc
mov
int
xchg
pop
outsb
inc
sarl
rcrb
in
add
and
pop
call
or
pop
mov
add
cmp
pop
int
mov
cli
movsb
inc
in
mov
xor
push
mov
mov
cmp
push
mov
bound
dec
and
pop
loopne
xchg
fdivp
jmp
pusha
cld
out
ret
es
push
notl
fmull
sub
cli
enter
jecxz
imul
enter
in
sbb
xor
mov
inc
xor
sbb
inc
mov
xchg
nop
loope
out
repz
ficoml
sub
cmp
cld
xchg
dec
pop
or
adc
sahf
jbe
arpl
or
xchg
or
call
or
je
mov
jg
mov
xchg
mov
loop
adc
movsl
js
fs
push
data16
jle
scas
and
jle
xchg
lods
andl
push
stos
lret
jecxz
sti
adc
mov
cmp
xor
cmc
inc
xor
lcall
cs
jnp
shrb
ds
dec
hlt
xor
in
in
mov
jmp
loope
scas
inc
lods
cmp
in
test
lcall
and
jnp
outsl
cwtl
in
inc
mov
ret
lret
test
rol
inc
and
ljmp
test
push
jg
dec
dec
jo
mov
jno
dec
dec
outsb
data16
cmp
xlat
fmull
mov
add
icebp
inc
mov
dec
sbb
dec
xorl
ss
push
out
ret
into
sub
mov
icebp
pushf
pop
test
loopne
add
xchg
add
pop
ss
js
sbb
sbb
clc
inc
mov
idivb
mov
and
cmc
dec
xchg
xchg
mov
enter
aad
xchg
mov
pushf
jnp
push
mov
movsl
pusha
and
das
ret
sbb
mov
shlb
and
outsl
fs
push
loop
mov
imul
dec
mov
adcl
xchg
in
cld
dec
cltd
sbb
sbb
pusha
and
mov
jno
mov
jp
adc
jmp
adc
subl
sbb
push
xchg
add
xchg
pop
icebp
push
push
ljmp
mov
mov
test
int3
cmp
cmp
or
pop
sub
jmp
scas
cltd
jecxz
mov
lock
and
clc
mov
stos
in
jno
ljmp
pop
add
shl
jo
push
mov
sbb
movsl
mov
repz
fs
ficompl
xchg
jmp
nop
xchg
mov
mov
jp
mov
ja
sub
add
and
mov
in
fnsave
shrb
gs
rep
cmc
mov
in
leave
mov
jae
fcmovnb
mov
xor
not
insl
arpl
cmpsl
mov
sahf
pusha
leave
pop
lahf
clc
xchg
push
adc
jae
mov
push
lahf
pop
sub
clc
out
gs
ja
inc
idivl
jmp
cmpsb
testb
xlat
sub
ss
xchg
xchg
je
inc
test
pop
int3
and
inc
lea
xor
stos
inc
ficoms
in
add
out
adc
lcall
xchg
ficompl
add
cli
inc
pop
sub
fcmove
dec
fldz
sti
cmp
mov
iret
bound
orb
out
scas
jmp
jecxz
mov
int
imull
fldenv
push
jmp
xchg
testb
lcall
jmp
stos
out
cmpsb
daa
or
adcl
xchg
add
loopne
aas
repnz
fidivrl
sahf
loopne
movsb
sub
mov
add
outsb
jno
daa
rcrb
fwait
pusha
mov
xchg
add
or
enter
clc
sahf
js
ds
fistl
mov
hlt
ret
xor
bound
push
inc
aam
push
sub
jge
fistpll
cmc
dec
outsb
lahf
data16
sarb
je
jle
adc
xor
inc
frstor
jno
icebp
mov
sub
jp
in
pop
sti
lods
adc
ret
mov
data16
cwtl
call
stos
in
push
imul
mov
rcrl
shl
ret
ret
push
inc
outsl
cmp
mov
pop
stc
sub
aaa
jge
iret
scas
jle
daa
mov
aas
mov
cltd
fdivl
push
inc
fcoms
test
add
xchg
add
jb
cmpsb
loop
test
loope
dec
dec
or
std
or
test
dec
and
js
ret
leave
js
out
sub
jae
adc
out
inc
push
push
in
and
cmp
cli
pushf
das
add
ljmp
dec
add
jl
leave
jae
mov
gs
loopne
inc
or
dec
mov
dec
into
jge
jle
je
js
lcall
stc
mov
int3
pop
ret
stos
jl
in
int3
pop
cmp
or
mov
xchg
cld
stos
push
stos
mov
fisubl
movsb
mulb
cmp
je
jno
mov
cmp
sahf
sbb
pop
fucomip
mov
sbb
mov
sub
sarl
sbb
pop
dec
jo
clc
scas
sbb
cmp
push
and
or
or
rcll
xor
add
out
cmpsb
xor
mull
dec
mov
mov
les
andl
adcb
push
mov
popf
in
push
in
movsl
sbb
cmp
add
mov
add
pushf
imul
loope
data16
sub
jne
les
push
jge
sub
mov
mov
popf
xor
fdivrl
test
xlat
pop
call
and
movsb
dec
mov
rcl
roll
pop
add
sub
repz
repnz
push
pop
fbld
aam
fwait
jo
push
lds
shll
mov
push
mov
repnz
adc
and
sub
scas
out
dec
dec
movsbl
dec
mov
mov
push
nop
enter
iret
pop
ss
pop
lcall
js
cmpsl
clc
repnz
rcll
sub
jns
aas
mov
cli
in
int3
push
loop
inc
std
sub
inc
out
and
icebp
push
mov
dec
cltd
call
shr
push
xor
shlb
scas
push
push
mov
andl
movsl
in
inc
fisubrs
pushf
lret
push
mov
mov
imul
push
adc
es
into
xchg
cmovb
inc
sbb
and
out
adc
mov
jno
mov
in
mov
dec
fisubl
xchg
imul
js
daa
outsl
les
xchg
adc
xchg
mov
out
add
mov
xor
scas
mov
fadd
sub
and
push
pop
jnp
mov
xchg
loop
jbe
cmpsb
jle
movsl
mov
cmpb
movsl
test
lds
jmp
mov
dec
addr16
popf
cwtl
sbb
or
pop
out
gs
sbbb
lea
outsb
mov
jmp
fcompl
pop
adc
cld
xchg
jnp
add
xor
arpl
jo
test
xchg
sbb
ljmp
or
jp
cmp
jg
add
test
imulb
xchg
pop
inc
rol
ja
mov
adcl
cmc
cwtl
sbb
cltd
das
ficompl
mov
sbb
gs
dec
test
push
cmp
fisubrs
mov
add
xor
mov
js
fcompl
jg
lods
stc
push
push
push
mov
imul
add
push
adc
xchg
hlt
pop
inc
push
xlat
shrl
mov
outsl
jns
mov
pop
mov
setno
xlat
int3
mov
push
fisubrs
mov
jmp
or
xchg
mov
jge
push
and
ret
pop
sbb
adc
pop
sub
and
jnp
gs
into
sub
jo
in
sbb
sub
xchg
fdivrs
dec
fldenv
xchg
lods
ret
cltd
imul
pop
pop
aas
cmpsl
push
dec
sub
jl
lds
sbb
sbb
repnz
mov
or
insl
adc
sub
pop
rcrl
cmpsl
out
xchg
adc
push
imull
sbb
adc
cld
mov
int
push
stc
outsl
xor
adc
fs
js
cltd
mov
adc
sbbl
mov
aas
pop
out
inc
cmp
or
imul
jne
or
out
mov
std
mov
cmpsl
cmp
pushf
jmp
jge
mov
imul
add
jnp
xchg
push
js
js
addr16
pop
xchg
call
xchg
mov
push
outsb
mov
sarb
fsubl
push
add
jg
mov
sbb
adc
stos
orb
push
xchg
in
mov
jae
jns
mov
aam
dec
adc
bound
movsl
pop
addr16
cmpsl
or
jg
cwtl
sbb
adc
mov
lcall
call
test
outsl
fs
jne
dec
mov
inc
shll
stc
add
int
fbld
in
ja
enter
xchg
sbbl
mov
dec
ds
dec
out
pop
adc
fbstp
enter
pop
std
xchg
mov
add
test
lods
mov
in
sub
inc
adcb
idivl
shll
and
sbb
repnz
sub
mov
jne
es
xchg
lret
inc
xchg
test
push
xor
invd
lock
cmp
ret
pop
mov
add
xchg
jo
hlt
clc
scas
push
cmp
sahf
xor
incb
rorb
cmpsb
ds
int
xor
jbe
imull
or
sar
es
scas
jge
mov
jnp
jb
jne
ljmp
or
mov
int
adc
push
outsl
push
mov
test
and
shlb
stos
cmc
scas
rol
and
int
shrl
mov
aas
sbb
add
stc
sbb
sub
hlt
js
repz
lret
xchg
mov
lret
dec
cmp
jge
lock
mov
into
or
or
push
lds
adc
ja
and
test
fs
test
enter
push
push
sub
ret
jne
mov
sub
dec
push
std
and
push
lahf
lret
andb
ds
je
mov
adcb
or
and
mull
sub
subb
inc
in
push
jecxz
add
lock
cli
cltd
xor
fnstenv
cmp
stos
sbb
out
cmp
cmp
sarb
fmul
int3
mov
fsubrl
ja
cs
fsubl
pop
xchg
or
xchg
dec
mov
lea
push
push
fnstenv
cmp
divl
mov
mov
push
leave
xchg
sub
aam
and
jg
movsb
inc
movsl
inc
or
cmp
sbb
andb
pop
push
lods
mov
push
xor
leave
cmp
cli
pop
inc
jne
cwtl
pushf
xor
mov
pop
sub
rcrl
cld
xor
and
push
aam
mov
push
cmp
stc
push
cmp
and
movsl
mov
pop
ret
mov
pop
lock
pop
lret
adcb
cmp
cmp
nop
sub
outsb
add
clc
adc
stos
fldenv
sbb
xchg
jns
xchg
xchg
icebp
inc
sahf
lods
cmp
xchg
lcall
jae
mov
pushf
dec
test
mov
mov
pusha
sbbb
clc
fbld
cmc
lds
in
mov
pusha
rcll
fisttpll
cmpb
loop
les
adc
mov
mov
cmpb
and
push
fdiv
jle
add
js
sub
std
stos
mov
add
push
jns
or
inc
mov
dec
lret
inc
jp
lcall
pop
popf
sti
jge
sub
out
sub
aas
sarb
push
bound
xchg
push
push
test
pop
xor
inc
xlat
jmp
xor
push
hlt
jge
test
pop
fmulp
pusha
shlb
adc
in
std
movsb
in
or
jae
js
movsb
js
ret
push
add
and
cwtl
in
hlt
aam
stc
jo
push
sub
push
outsl
arpl
fstps
lea
add
test
subl
jg
jb
pop
sub
mov
enter
cmc
mov
jnp
ljmp
sub
add
xor
xchg
fwait
add
arpl
in
push
jge
or
pusha
stos
dec
arpl
or
dec
imul
into
pop
xchg
mov
inc
int3
lahf
je
stc
sti
xlat
sbb
jmp
fnstsw
repnz
xchg
sbbl
xchg
jge
lret
scas
cmp
es
into
and
stos
int3
fldl
cs
sub
test
in
out
sub
stc
and
popa
repnz
stos
sub
jne
xor
xor
pop
mov
int
sub
push
fists
cli
ret
bound
dec
stos
push
mov
add
mov
xchg
loopne
les
imul
mov
repnz
sbbb
pop
sahf
fwait
push
mov
push
lret
pushw
and
cmc
push
cmpsb
in
xchg
add
movsb
sub
in
je
cltd
loope
mov
push
movsb
inc
ficoms
push
sar
stos
fcmovu
test
cmp
mov
push
ficoms
fdivrs
lahf
jo
enter
es
dec
mov
mov
xor
sub
mov
or
inc
jae
mov
loopne
push
and
and
stos
jnp
jae
leave
mov
stc
imul
push
adc
in
jge
inc
enter
jae
mov
icebp
sbb
cmp
rol
mov
jno
xchg
adc
cld
mov
sbb
hlt
xchg
push
jb
outsl
jno
cmc
nop
scas
rolb
das
mov
jno
pop
adc
out
dec
movsl
cmp
imul
push
sub
pop
pusha
inc
adc
lea
rcll
push
data16
mov
fucomp
dec
adc
jle
add
sbb
ficompl
jnp
pushf
mov
scas
adc
insb
push
rcrb
shrb
lcall
or
mov
or
adc
sub
shll
jl
hlt
xor
xchg
scas
stos
int
mov
add
fwait
clc
lods
cmp
test
jecxz
addr16
xchg
jl
mov
fbstp
and
and
neg
or
sbb
adc
inc
mov
and
fs
jecxz,pt
xor
mov
repz
clc
xchg
add
xorl
pusha
aam
rcrl
incl
add
in
adc
xchg
lret
mov
sbb
push
lahf
cld
cmp
sbb
adcl
mov
push
ret
pop
out
les
sbb
clc
loop
imul
in
adc
lods
leave
mov
jp
adc
aam
ss
sarb
cmp
xlat
mov
aaa
add
clc
or
dec
pop
aad
dec
push
outsb
dec
daa
pop
jno
pop
mov
sahf
jne
pop
iret
jbe
popa
mov
gs
jb
mov
scas
mov
xor
xlat
mov
push
call
push
andps
outsb
jl
ja
mov
xor
xchg
sbb
push
xchg
add
mov
push
aam
testl
pop
aad
xor
iret
push
fisubl
lcall
cmpsl
das
xchg
sbb
out
aam
test
cmp
clc
roll
sub
xchg
testb
inc
lret
addr16
xchg
cmp
inc
push
and
popf
cmpsl
icebp
or
adc
jecxz
test
or
fstps
sub
in
fistps
pop
xchg
jb
pop
push
xchg
sbb
dec
rcrb
ret
sbb
sbb
mov
shl
out
xor
fistpl
xchg
pop
call
add
in
movsb
pop
scas
adc
movsb
inc
dec
jmp
and
fcomps
dec
js
xor
ljmp
shrl
pop
std
gs
or
jge
cmp
or
lcall
stc
scas
xor
jno
jg
sbb
in
sbb
and
xor
dec
lret
pop
mov
andl
xor
test
sahf
xor
movsl
push
xor
ret
inc
adc
shrb
push
ss
pop
fs
mov
xor
aaa
mov
xor
push
adc
sbb
aam
cltd
repnz
cmp
out
mov
popf
out
dec
push
in
ss
jno
push
xor
xor
jbe
gs
fwait
lods
cmp
cmp
shlb
fisubrs
sbbb
xlat
fstps
xchg
jnp
dec
mov
add
test
fwait
mov
jmp
xor
imulb
jle,pn
xorl
je
stc
xchg
insb
sbb
lods
daa
addr16
addr16
adcl
movsl
mov
fldcw
jae
pop
jg
out
bound
push
adc
push
in
mov
pop
loopne
mov
daa
cmp
push
pop
sti
stos
mov
insb
dec
outsl
add
adc
mov
orl
dec
in
sti
jp
dec
cltd
sbb
sti
jo
cltd
push
fldenv
pop
xor
and
push
jne
xor
mov
or
adc
test
cmpsl
sub
test
inc
stmxcsr
sub
and
lock
pushf
push
pushf
in
arpl
jmp
adc
add
mov
mov
pushf
and
inc
imulb
mov
or
pop
xchg
push
dec
test
ljmp
mov
xchg
lret
add
push
movsb
add
pop
scas
sub
pushf
push
xor
ds
enter
stc
movsb
into
mov
movhps
lods
and
sbb
cmpsb
mov
js
mov
lret
stos
das
loopne
adcb
adc
jno
pop
cmp
xor
ret
or
dec
loopne
inc
rclb
or
xchg
lods
rcll
test
neg
rorb
outsb
dec
fs
shll
push
or
fildll
adc
xor
pop
push
out
inc
cmp
decl
cwtl
shll
test
inc
sbb
movsl
add
shrb
dec
pop
sub
jle
aaa
dec
inc
divb
int
int3
pop
push
jns
outsb
and
sahf
sbb
mov
sbb
cltd
xor
push
adc
clc
mov
xor
call
cmp
clc
jne
inc
addr16
addr16
rorb
imul
jns
xchg
mov
mov
add
nop
repnz
aad
jl
pushf
dec
adc
push
dec
mov
lds
ficoml
andb
xor
pushf
jnp
fwait
xchg
dec
add
out
mov
aaa
xlat
inc
lret
movsl
sbb
out
cmc
sub
popa
cmp
xchg
sub
pop
xchg
and
pop
call
sbb
push
adc
mov
adc
cmp
xchg
push
negl
adc
sub
mov
dec
jmp
cmp
cmpsb
clc
pop
mov
dec
stc
fisttpll
scas
jg
pop
xchg
stos
mov
add
imul
push
mov
jl
cmp
cld
add
xchg
sub
mov
insl
mov
outsb
aam
movsl
pop
mov
mov
outsb
pusha
clc
popf
loop
jb
mov
dec
sub
pop
rorb
sub
xor
dec
pop
ljmp
testl
rclb
divl
fildl
repz
mov
rolb
mov
and
cmp
pop
lahf
jmp
lahf
mov
mov
xor
or
adc
aam
and
scas
mov
loop
imul
popa
popf
pop
jae
inc
xor
out
mov
lods
sbb
movsl
add
lahf
or
in
cld
daa
or
sarb
jg
jmp
mov
adc
insb
adc
bound
jno
lds
ret
mov
or
fbld
insb
jg
cmc
mov
stc
aam
rol
test
inc
push
xchg
shll
fadds
mov
bound
sbb
sub
das
lret
push
dec
sub
int3
test
bound
mov
enter
loopne
pop
lret
stos
inc
push
jnp
jae
mov
dec
jb
out
xchg
sub
cmp
daa
add
gs
ja
sbb
bound
add
cwtl
mov
pop
lcall
jecxz
pusha
xchg
inc
aaa
fwait
xchg
adc
inc
lret
adc
mov
mov
sbb
dec
adc
into
cmp
jecxz
lret
lods
cmpsl
inc
xchg
stos
cld
loop
mov
push
shll
aaa
stos
test
adc
scas
aad
sahf
adc
jp
fnstcw
std
sub
fwait
adc
fs
aaa
mov
pop
ret
clc
jmp
and
leave
int
mov
in
pop
lods
mov
push
ja
rcrb
xchg
ret
sbb
in
sbb
mov
and
rorb
aad
add
in
mov
inc
aad
push
sbb
fcmovbe
fstpl
adc
subl
xchg
das
mov
adc
push
insw
loope
sub
mov
pop
scas
add
mov
call
mov
es
push
lock
test
adc
lahf
cs
popa
mov
aam
xchg
or
addl
jns
decl
iret
pop
cmpsb
mov
out
dec
repnz
cmp
aaa
test
imul
fsubs
shrl
jl
outsl
sub
outsb
xorl
mov
cwtl
jbe
shl
mov
xor
and
dec
sarb
xchg
bound
outsl
xchg
sub
mov
cs
in
pop
daa
mov
shlb
loope
sub
je
push
mov
sarl
cmp
sbb
rolb
jb
cmp
jmp
jg
jecxz
or
cmp
repnz
cltd
iret
mov
jmp
aas
ss
sub
or
clc
cmp
xchg
dec
push
inc
mov
lahf
pop
dec
inc
dec
out
cltd
or
sub
push
push
jns
cmp
idivl
fidivrl
sbb
push
out
pop
jmp
jne
icebp
cltd
and
xlat
push
inc
movl
pop
mov
dec
and
mov
dec
int3
cs
out
jne
dec
in
stos
sbb
daa
imul
and
xchg
inc
pop
les
testl
sub
mov
pop
inc
ljmp
jne
fdivr
push
lret
in
iret
mov
loopne
push
fwait
sbb
bnd
push
mov
inc
push
sbb
cmp
sahf
stos
add
test
rcll
lret
pop
pusha
mov
cmpsb
out
testl
jg
push
cmp
cmp
mov
and
aam
scas
mov
out
xchg
mov
mov
stc
xchg
fisubrs
adc
test
xchg
xchg
jae
xor
cli
shrl
inc
pop
mov
movsb
pop
cmp
sbb
xchg
sahf
mov
dec
in
jo
and
mov
mov
div
push
mov
outsb
dec
sar
je
dec
pushl
sbb
popf
cmpsl
test
inc
xlat
xchg
das
add
cwtl
sub
leave
lret
adc
mov
mov
cmpsl
sub
xor
cmp
and
sub
rcr
inc
out
fucom
cmp
cmp
enter
ret
sub
subb
mov
mov
hlt
push
mov
inc
aas
and
push
nop
ljmp
xchg
cmpb
rcll
mov
loop
dec
pop
cmp
mov
lahf
aas
jo
jno
mov
push
out
loop
std
std
outsb
inc
sbb
jge
jnp
xchg
popa
cld
stos
xchg
inc
pop
inc
pusha
fcomp
test
mov
lods
mov
filds
outsl
decb
imul
and
inc
ljmp
addr16
and
push
or
arpl
and
scas
adc
sub
jecxz
pmullw
stc
xchg
rol
popf
mov
fsubl
daa
aaa
pop
das
adc
jge
outsb
lahf
popa
cmc
fs
or
sbb
dec
aad
aam
fucomip
call
mov
insb
das
loop
iret
sub
ret
mov
int3
ja
or
push
xor
fld1
aaa
pop
rcll
and
push
sub
add
shld
jl
lock
scas
daa
lret
ss
bound
nop
inc
andb
push
ret
xor
sub
sub
push
mov
lods
loope
mov
loop
or
jl
rcrl
clc
cmp
gs
push
xchg
xor
sbb
sbb
jmp
inc
in
loopne
test
inc
out
xchg
push
cltd
mov
sarb
loopne
cmc
lds
xchg
inc
enter
repz
les
test
fistps
cmpsl
jae
lcall
or
negl
shll
enter
pop
mov
adc
push
dec
inc
insb
ret
push
push
jne
bound
dec
sahf
mov
gs
ret
push
mov
ficomps
cmpsb
mov
sub
mov
loope
pop
pusha
pop
dec
lcall
aad
mov
fisttpl
das
into
xchg
and
imul
push
xchg
lds
fdiv
fnsave
icebp
outsb
ret
repnz
pop
jo
add
ss
cs
or
inc
shlb
pop
pop
cltd
lock
jp
incl
lret
sahf
xchg
xor
mov
mov
loopne
inc
pushf
fcom
xor
mov
clc
bound
adc
cli
mov
scas
inc
fucomi
rol
sub
mov
xor
mov
out
mov
ret
or
push
push
adc
cmpsl
xor
xlat
out
out
fmul
cmp
into
jnp
rol
xchg
sub
add
testl
mov
inc
mov
cmpsl
mov
aam
dec
out
mov
dec
sbb
sbb
andb
xchg
loope
in
aad
sbb
clc
int3
insl
ficompl
and
dec
sti
mov
xor
add
mov
rolb
push
test
and
repnz
cltd
xor
lret
cld
enter
mov
mov
pop
clc
xor
pop
sub
pop
pop
cmp
pusha
nop
rclb
frstor
inc
icebp
das
scas
mov
scas
xchg
sbbb
leave
test
out
push
jno
push
fldcw
or
push
push
or
decl
mov
rcrb
adc
popa
jg
jae
out
sub
mov
or
and
cltd
xchg
out
push
hlt
hlt
cltd
test
and
mov
popa
lock
outsb
jge
push
scas
xchg
pop
gs
jg
jno
shrl
xchg
mov
repz
jp
outsb
or
and
mov
sbb
dec
js
mov
sbb
mov
pop
adc
or
push
adc
pop
imul
dec
mov
in
cmp
das
repz
subl
test
pop
pop
mov
xor
das
sub
imul
pop
insl
pop
pop
rorl
and
mov
pop
push
arpl
pop
push
jno
adc
jmp
test
sbb
add
fs
popf
mov
test
cld
mov
jmp
sar
je
and
jb
sahf
lods
cwtl
xchg
inc
lods
imul
imul
movsb
cmpsl
lds
pop
cmc
vunpcklps
cmpsl
lret
cmc
test
and
cs
jmp
stc
adc
inc
pop
and
push
mov
push
out
leave
mov
out
push
jmp
and
sbb
out
inc
and
mov
cmp
dec
loop
mov
divl
inc
push
test
xor
sbb
js
pop
movsl
cmpsb
fcoml
jl
or
sti
mov
pushf
xor
int
xchg
xor
dec
in
pop
inc
pop
or
insb
decl
stos
sub
sub
jp
xor
std
cld
push
fadds
mov
push
push
mov
cmp
adc
aaa
push
outsb
test
iret
imul
fwait
xchg
mov
add
shll
cwtl
xchg
test
scas
mov
jne
stc
js
pop
test
ret
leave
pop
in
mov
push
loope
and
and
or
jg
in
pop
sub
repnz
sub
imul
xchg
cmp
push
fbld
in
repnz
adc
jnp
and
jmp
xchg
inc
add
cltd
cltd
xchg
inc
incb
xor
ja
out
cmc
sbb
mov
xchg
test
insl
int
adcb
mov
adc
sahf
inc
and
pop
scas
mov
mov
ss
lods
jo
enter
loopne
cltd
shll
inc
addr16
mov
fiadds
fxch
outsl
mov
inc
in
insl
cwtl
testl
dec
mov
inc
sbb
int
and
pusha
mov
adc
sub
imul
cmp
pop
mov
test
les
push
mov
mov
push
add
gs
mov
dec
mov
jne
frstor
lds
repnz
cli
inc
mov
int3
lahf
loop
pop
in
lret
mov
pop
test
sbb
sarl
adc
add
cmp
add
jnp
push
scas
and
xor
xchg
lahf
inc
jg
repnz
adc
cmpsb
into
jle
out
addr16
repz
shlb
jb
cwtl
xor
adc
adc
out
adc
outsb
jl
rcr
push
ret
call
js
jmp
push
cmc
in
test
push
stos
mov
push
sub
cwtl
lahf
mov
and
dec
mov
dec
adc
outsb
sbb
ds
stc
mov
jg
pop
mov
repz
xor
mov
test
cmp
loop
xor
ljmp
cltd
in
or
fbstp
lret
mov
stc
nop
and
add
pop
lret
sahf
push
in
addl
pop
in
jecxz
mov
push
mov
lret
jbe
cmc
sub
and
test
push
movsl
sub
out
dec
lods
mov
push
orb
add
push
xor
popf
push
mov
leave
imul
push
jmp
std
into
insl
shlb
mulb
movsl
push
mov
out
sub
jno
pop
mov
ret
hlt
addr16
add
mov
inc
sub
xchg
mov
stos
inc
mov
enter
adc
test
cli
jne
inc
ds
mov
push
mov
xchg
fwait
or
jns
push
dec
mov
mov
mov
push
insl
sbb
out
out
andb
mov
aas
add
cmp
and
sub
mov
ja
mov
adc
cmp
mov
and
and
jne
stos
stos
in
mov
cmp
in
inc
or
daa
inc
fildl
frstor
pop
mov
gs
push
inc
pop
subb
inc
sbb
xlat
sahf
pusha
jo
arpl
notl
insl
cmp
fisttpll
popf
or
ds
dec
mov
dec
les
xor
mov
cmpsl
out
cli
das
inc
stc
pushf
xchg
inc
scas
in
call
insb
jae
mul
adc
addr16
nop
stos
push
mov
fiaddl
xchg
mov
cmc
pusha
mov
mov
mov
dec
fnstcw
sbb
or
mov
aaa
and
jp
inc
sbb
sub
fcmovbe
pop
push
mov
inc
and
adc
sbb
pop
pop
push
sbb
mov
cmp
and
lcall
es
adc
int
mov
xor
pusha
mov
rclb
cmp
repz
dec
sub
inc
loope
adc
mov
cwtl
mov
mov
fs
mov
sub
aas
push
add
loopne
dec
xor
jl
orl
outsl
adc
pop
and
repz
jp
sbb
mov
adc
pop
inc
and
jbe
out
testl
pushf
xor
mov
pop
stos
fiadds
mov
shrb
int3
aaa
jle
jne
aam
movsb
xchg
ss
mov
mov
mov
and
fnstsw
xchg
mov
mov
inc
cld
jge
xchg
dec
pop
adc
fldl
movsb
js
pop
xchg
jmp
push
outsl
outsb
andb
adc
xor
rclb
add
pop
repnz
jle
jg
ret
jns
jge
clc
inc
mov
xchg
cs
lods
loope
pusha
fdivs
push
adc
inc
pop
repz
xchg
hlt
leave
adc
adc
xchg
pop
subb
add
test
jle
mov
jns
mov
test
mov
fildll
movl
adc
and
mov
mov
imul
insb
rorl
shl
ficoms
and
sub
cmp
mov
fucomp
jg
pop
call
lahf
imul
pushf
rorb
fisubl
in
pop
mov
push
fldenv
xor
scas
nop
ret
adc
subb
inc
fdiv
popf
xrelease
xor
mov
adc
dec
xchg
in
sbb
clc
imul
out
pop
mov
xor
sbb
loop
das
xchg
int3
mov
adc
out
mov
in
idivb
andb
movsb
frstor
pop
mov
cmp
imul
movsb
mov
inc
repnz
lea
stc
xchg
or
aas
xchg
data16
push
movsl
repnz
add
bound
shll
loop
fs
sub
pushf
sub
je
sbb
std
mov
add
cmp
ja
xor
js
sub
sub
lahf
data16
jmp
adc
shll
lret
xlat
jp
out
lcall
idivl
sub
lahf
repnz
inc
int
sahf
cmp
and
xchg
aam
push
add
lcall
fwait
sub
out
mov
mov
add
sbb
icebp
cs
push
lea
test
sub
lahf
lds
test
cmpsl
jle
pop
lock
cmp
fwait
add
jns
add
and
dec
pop
repz
cmp
cli
sbb
jae
aas
stos
les
xchg
mov
and
rcrl
jo
add
aas
adc
mov
jge
addr16
test
rorl
jmp
fisttpll
sub
je
repz
jne
mov
or
pop
dec
sarb
pop
cmp
fisubrs
in
pop
je
mov
mov
mov
repz
mov
mov
sbb
outsb
ds
test
dec
test
xor
jb
or
inc
pop
sbb
mov
int3
ss
adc
dec
loopne
outsb
hlt
and
aaa
sbb
movsb
mov
push
lds
lret
pusha
cmp
xor
mov
aaa
mov
push
cmpsb
mov
into
out
xchg
sti
ja
and
fisttps
out
popf
mov
sbb
or
adc
xchg
test
mov
out
rcrl
xor
call
adc
lret
sbb
sti
adc
inc
test
scas
mov
mov
int
xchg
jbe
mov
stc
lret
fsubs
lea
lea
sti
shll
cmpsl
ds
jp
xor
pop
dec
xchg
lahf
in
cmp
lea
iret
pop
add
or
in
xor
cmp
cltd
sbb
jae
sbb
dec
ret
rorb
inc
push
into
push
xchg
sbb
fucomp
or
jmp
ret
and
xor
dec
test
fwait
lret
out
jae
dec
and
adc
aam
inc
ret
xchg
push
push
divl
leave
popa
sahf
cld
xchg
shrb
mov
daa
inc
arpl
mov
popa
rol
jae
bnd
push
movsb
fldt
loop
jbe
dec
xchg
jbe
sbb
cmp
leave
sbb
ficoml
dec
fisttpll
andl
mov
leave
or
rcrl
xchg
mov
filds
push
mov
in
ret
int3
cmp
dec
cmp
sbb
mov
hlt
or
pop
jnp
jge
insb
inc
xchg
loope
scas
leave
mov
mov
mov
ja
push
out
sub
notb
inc
pop
outsb
test
mov
xor
lret
test
into
aas
add
insb
push
insb
mov
xlat
bound
adc
and
std
orb
jecxz
mov
cli
lds
jge
mov
xor
imul
jo
lock
fstl
jmp
push
dec
ljmp
or
arpl
xchg
leave
mov
sahf
cmpl
aam
adc
fldz
mov
nop
imul
shrb
jo
fnstenv
jne
pop
subl
jle
push
fnstsw
jne
add
pop
mov
sub
pusha
popf
xor
add
subb
push
xlat
nop
insl
nop
push
imull
cltd
testb
lea
push
push
in
and
xchg
cmp
push
mov
es
xchg
mov
into
and
pop
addr16
sbb
dec
or
std
inc
add
push
stos
xchg
inc
cltd
xchg
aas
push
in
mov
sbb
dec
add
js
sbb
cmp
xor
loope
repz
dec
fbstp
xchg
fldt
stos
and
in
nop
fsubl
mov
or
enter
int
rcll
xchg
repz
push
loopne
insb
xchg
add
ret
inc
fisttpll
add
lds
popa
outsl
int3
arpl
outsl
inc
sbb
and
iret
jp
sbb
das
or
rolb
add
xor
xor
push
mov
xchg
push
sbb
jp
jae
mov
xlat
or
push
dec
pusha
push
scas
jne
mov
adcl
add
movsb
xchg
in
enter
adc
sbb
adc
aaa
push
insl
icebp
adc
cmc
adc
push
mulb
push
popf
inc
cmpsb
inc
rorl
xchg
or
add
mov
out
ss
sbb
mov
ret
aam
je
hlt
sub
push
sub
cmc
sub
mov
push
jb
mov
lds
add
inc
mov
jg
and
loopne
jne
shrb
inc
adc
int3
sbb
clc
push
push
jg
xor
fbstp
daa
imul
xor
cmp
ret
sbbl
cmp
sbb
in
cs
negb
inc
int
mov
in
in
inc
cmpsl
rcrb
jno
adc
adc
mov
or
pop
mulb
imul
pop
fsubp
ljmp
inc
iret
int
shlb
arpl
shll
xchg
int3
in
jae
mov
inc
shrb
in
or
pop
fmul
mov
js
or
mov
mov
jno
aad
ret
sbb
xchg
outsl
inc
or
xchg
enter
xchg
or
dec
testb
movsl
jecxz
jle
in
mov
push
insl
add
in
lcall
lret
mov
fistl
pop
xchg
les
jno
shl
jae
cltd
push
leave
scas
jno
lock
xlat
fists
nop
push
sbb
mov
jo
addr16
adc
std
lock
and
fisttpl
sub
hlt
cltd
mov
dec
mov
jl
pop
scas
mov
addr16
jae
lret
cmp
cli
xchg
shlb
fildll
repnz
jns
aaa
mov
int3
sbb
movsb
in
call
pop
push
sbb
sub
stos
pop
pop
xchg
sub
mov
push
cwtl
lods
insb
add
mov
or
cwtl
and
and
push
jae
pop
xlat
xchg
movsl
aaa
inc
sti
movsb
dec
jbe
cmc
adc
je
fdivs
mov
adc
leave
dec
lea
out
mov
adc
mov
lea
out
leave
mov
movsb
call
in
addr16
iret
pop
cmp
mov
push
xchg
jmp
xchg
loope
adc
cwtl
out
xor
fiadds
xchg
push
pop
mov
fs
lret
dec
pushl
scas
mov
mov
and
pop
out
xchg
xchg
cld
mov
sub
loope
sub
loop
cmp
lds
ret
out
movsb
sbb
jno
xchg
jmp
sbb
xor
dec
out
xchg
mov
stos
repnz
add
jmp
push
faddp
mull
mov
or
adc
in
clc
cmp
sub
xchg
aas
inc
cmpsb
dec
repnz
mov
cmpsl
add
bound
cltd
mov
adc
push
mov
movsl
jns
dec
lods
mov
loope
push
vmread
inc
jbe
bound
ss
call
fwait
shrb
xchg
mov
xor
xor
repz
jo
int
lahf
stos
fistl
mov
xor
cmpsl
xchg
push
aas
sbb
mov
mov
fcompl
test
jb
add
mov
push
mov
cmpsl
and
lds
mov
add
in
in
js
mov
popa
outsl
or
adc
push
mov
mov
cld
mov
dec
xchg
sub
push
or
push
inc
iret
out
out
inc
test
lret
rcll
jb
mov
pop
xchg
int
inc
cmp
outsb
in
push
aas
add
sbb
xchg
shlb
mov
cmpsl
push
mov
sbb
lods
jle
outsb
stos
ror
mov
fs
lea
aad
adc
test
xor
lret
scas
sbb
fnstcw
cmpsl
fisubrs
and
cmp
mov
jbe
and
jle
xchg
loopne
iret
out
add
sbb
xor
aam
push
jecxz
jl
sti
dec
lods
shrl
idivb
test
mov
xor
repz
jne
sub
mov
pop
cld
dec
out
xchg
ljmp
pop
mov
aad
fs
loop
pop
shll
outsl
lret
push
bound
je
movsl
andb
or
repz
sub
adc
arpl
outsb
jecxz
in
fmuls
scas
and
jnp
sbb
or
mov
mov
loopne
jo
inc
xchg
aad
push
fsubrl
stos
push
out
or
jge
outsl
or
nop
push
pop
lds
pusha
jb
adc
sti
pop
negl
outsb
jbe
and
imul
push
int3
xchg
dec
inc
fsts
xor
lret
incl
out
push
lods
mov
inc
sbb
mov
aas
rcr
dec
add
pop
sub
add
ss
leave
ss
and
cmp
jns
pop
cmova
inc
inc
push
out
mov
inc
nop
inc
in
in
ljmp
sub
shll
push
pushf
lods
mov
jge
rolb
push
fidivrs
mov
jle
les
jns
sbb
mov
into
or
fsubrs
cmp
pop
mov
test
repnz
cmpsl
sbb
mov
mov
dec
xor
call
cmp
shlb
cmp
cltd
arpl
pop
loop
and
add
stos
jge
cmp
loopne
ret
and
pop
lahf
mov
aas
rorl
lea
jecxz
mov
mov
dec
test
push
in
cmc
ret
inc
daa
test
jp
and
ljmp
pop
movb
push
imul
clc
xchg
imulb
lds
mov
mov
cli
ljmp
cmpsb
aas
jbe
pop
daa
mov
pop
or
dec
xchg
out
dec
daa
cmp
imul
jno
rolb
mov
pop
aas
dec
mov
mov
adc
cmp
and
inc
fucomp
mov
gs
inc
test
mov
lds
and
fcomip
rorl
adc
loopne
test
lock
fisubrs
std
xchg
add
fsubrs
fidivs
daa
push
out
adc
xor
and
cmp
mov
push
stos
inc
push
pop
jmp
aas
les
lods
mov
fstpt
push
xsha256
cmpsb
push
xlat
testb
sti
or
sub
sub
out
test
sub
pop
xor
jmp
pop
or
fs
push
inc
xor
mov
add
mov
mov
xchg
mov
and
dec
lods
sub
add
lret
dec
fldl
sbb
mov
push
push
out
jp
out
fisubs
cmp
lret
mov
inc
addb
in
inc
pusha
into
loope
cltd
decb
mov
cld
fwait
sarb
stc
sbb
cmp
fsubr
divl
roll
mov
pop
out
dec
testb
fdivrl
test
push
cmp
or
ja
pop
int
addr16
mov
xchg
adc
and
jns
jp
pop
dec
repz
das
lds
loope
inc
xchg
inc
lret
mov
jg
mov
or
aaa
jbe
sbb
andb
sub
imul
and
test
pop
std
lock
orb
adcl
in
icebp
jp
add
int3
mov
rol
jbe
add
les
shll
push
cltd
mov
dec
call
inc
aam
inc
cmc
mov
sub
subl
dec
mov
cs
push
lea
lock
mov
mov
stos
jmp
movsb
push
popa
inc
mov
jno
inc
mov
xchg
add
dec
sarb
sub
jno
popa
sbbl
sub
or
cmp
fnsave
mov
push
aam
fsubs
psubsb
es
test
sbb
or
outsl
pop
push
movsl
xorb
xor
mov
sarb
sub
xlat
adc
push
pop
xor
mov
movsl
inc
xor
lods
out
push
sbb
movsb
sar
or
fdivl
push
adc
and
jne
in
adc
popa
pop
arpl
jno
mov
and
in
sub
sub
xor
test
pop
xchg
mov
add
ret
pop
out
in
push
movsl
fldl
or
mov
movsl
jg
sbb
cmpsb
cmp
and
lods
or
mov
push
int3
dec
clc
add
hlt
cmp
cmp
out
sbb
cld
inc
and
cltd
std
cmc
cltd
xlat
cmp
add
cltd
sbbl
rcll
cmp
mov
data16
cltd
ret
push
or
push
mov
jne
add
dec
or
push
inc
mov
jg
lods
icebp
ret
sarb
sub
cld
ljmp
or
and
cmp
inc
in
jns
cmp
ja
dec
jne
jle
outsb
inc
lret
fwait
je
sti
jne
ss
adc
mov
mov
arpl
xor
mov
jl
mov
scas
mov
mov
daa
adc
lods
repnz
ror
cmp
cmp
adc
mov
orl
test
pop
cltd
mov
lods
jnp
mov
add
fsubl
loop
push
in
clc
call
inc
popf
xor
int
fldenv
mov
cmp
sbb
ret
call
sbb
nopl
lock
xchg
loopne
scas
loopne
cmpb
movsb
sbb
loope
mov
sub
inc
stos
es
push
fdivr
es
clc
xchg
sub
pushf
test
and
ja
cmp
pop
shlb
pushw
mov
dec
dec
add
shr
ljmp
pop
push
jl
sbb
rclb
loop,pn
loopne
add
push
inc
fbld
in
push
or
fcoms
mov
jp
pop
mov
jg
pop
or
mov
out
mov
nop
push
push
icebp
xor
add
in
test
mov
cld
lcall
in
daa
mov
loopne
sbb
mov
mov
movsl
iret
jo
fcmovbe
pop
insl
test
cmp
repnz
sbb
decb
mov
mov
shll
test
aam
dec
jle,pt
xor
push
pop
jno
test
sub
ds
xchg
xor
xor
mov
arpl
cmpsb
mov
scas
mov
aas
push
nop
cltd
inc
into
inc
mov
gs
je
add
inc
mov
lahf
mov
jo
push
data16
mov
or
xchg
xchg
pop
insl
sub
cmpsl
ret
push
cltd
ret
sub
sbb
push
cmp
stc
mov
popa
push
mov
xchg
call
inc
addr16
test
cs
xchg
or
sbbl
mov
cmpsb
push
xor
repz
push
ds
inc
sub
dec
test
mov
rep
xchg
mov
adc
jae
xchg
ds
or
xchg
imul
push
imul
stos
mov
pop
hlt
subl
add
sarb
jns
fstps
ds
push
add
mov
adc
xor
inc
push
inc
in
sub
push
stos
lcall
mov
push
and
push
inc
aas
xor
inc
enter
dec
cld
clc
dec
dec
cmp
push
lds
dec
adc
shll
out
insl
jg
cs
pop
xlat
sub
mov
adc
hlt
jge
call
push
out
jae
xor
jge
mov
popa
xchg
sub
clc
cs
mov
popf
sahf
repz
push
sbb
jne
jg
sub
dec
mov
in
inc
in
insb
push
dec
sub
xor
jne
imul
and
or
push
jno
push
xchg
adc
mov
cmp
movsl
sbb
lods
dec
pop
adc
cmpsl
lock
cmpb
fists
cmp
push
cmpsb
insb
scas
ret
ret
mov
insl
cmpsl
into
sahf
push
orl
xchg
mov
cmp
arpl
and
cltd
cmp
fnstsw
out
int3
arpl
bound
pop
mov
jecxz
push
outsb
sub
dec
int
inc
sbb
xchg
push
push
sub
or
sbb
iret
mov
in
cmpsl
decb
ja
sahf
das
push
dec
push
js
pop
dec
pop
addl
pop
jle
addb
out
testb
cmp
movsl
jnp
dec
mov
mov
pop
ret
out
in
repz
mov
insb
scas
cld
sbb
jno
xchg
or
lods
mov
cmpsl
xor
xor
out
test
lcall
ja
cmc
xor
sbb
xchg
push
dec
jne
xlat
into
addr16
lret
in
inc
sub
xchg
inc
test
inc
cmp
ret
cmp
mov
jno
inc
jl
xchg
fcomps
jecxz
push
or
mov
jecxz
pop
outsb
sub
scas
mov
cmp
cmpsl
pop
jmp
xchg
dec
out
pop
imull
imul
clc
jae
jne
sub
lcall
or
inc
pushf
scas
ret
sub
mov
cmpsl
mov
scas
jns
stos
ret
mov
cmp
mov
pop
loope
mov
aam
fisttpll
outsb
js
fimull
pushfw
sti
xchg
fwait
add
lcall
mov
add
in
cltd
mov
add
insl
sti
sub
xor
in
mov
shrb
popa
sbbb
shlb
pop
aas
iret
and
xchg
cs
dec
cmp
sub
icebp
sbb
xchg
cs
sti
mov
icebp
mov
aam
dec
sbb
cwtl
std
bound
mov
cmp
sahf
outsl
fldt
out
adc
bound
adc
mov
push
mov
sbb
inc
pop
fcmovne
into
mov
dec
and
dec
fstp
outsl
adc
testl
and
mov
movsb
xchg
pop
mov
push
sub
add
add
stos
xor
loop
fisubrs
les
xor
mov
jecxz
jle
insl
loop
xchg
loop
mov
dec
lods
cmp
jecxz
mov
push
out
xor
pop
jg
add
insl
outsb
or
rorb
xor
push
ljmp
and
divl
enter
and
push
sub
xor
dec
pop
in
or
movsl
popf
inc
add
inc
pop
push
xor
aas
dec
bswap
inc
in
mov
cmp
les
xchg
xor
add
or
loop
add
ds
sbb
xchg
xorb
aam
or
lock
dec
pop
fwait
xchg
mov
out
pop
xlat
lock
mov
into
pop
cmp
stc
hlt
pop
mov
js
push
outsl
and
add
jle
dec
xor
stos
add
stc
sub
sbb
mov
lcall
mov
js
sarb
pop
mov
xchg
loop
scas
mov
push
push
jno
adcl
jle
add
jp
subb
pop
add
mov
ficompl
bound
ffree
stos
jne
and
roll
adc
lret
xchg
xlat
cmpsb
cmp
gs
rorl
xchg
mov
jg
push
inc
mov
jo
repnz
or
jae
pop
mov
adc
xchg
loope
pop
sub
ja
cmp
push
popf
cmpsl
leave
xor
popf
ss
xchg
int
or
add
test
cld
or
adc
or
jecxz
xchg
mov
repnz
xchg
and
cmp
xor
into
jo
daa
inc
popa
mov
fidivrs
push
push
xchg
adc
inc
sbb
arpl
add
daa
mov
nop
imulb
shl
jl
jl
sub
das
les
cld
mov
repz
sub
xor
xchg
fstpt
push
jl
mov
adc
jbe
sbb
cmp
pop
push
div
movsl
inc
repz
mov
push
cmpb
jb
jge
pusha
lret
jnp
loop
fcomps
outsl
lock
mov
loop
push
bound
cwtl
int3
inc
sbb
xor
adc
in
mov
sarb
add
jo
movsb
mov
push
jp
fbld
push
jbe
mov
cmp
jle
ljmp
les
jb
int3
subl
or
push
mov
push
lods
inc
mov
insb
push
mov
outsl
cmpl
imul
cld
sbb
cmp
lods
add
ds
ljmp
inc
cmpb
lods
mov
and
movsl
mov
mov
loop
jecxz
call
and
fildl
andb
nop
cmc
mov
mov
outsl
sbb
push
scas
test
jle
jb
mov
adcb
xor
jae
test
fimuls
adcl
push
into
fsubrp
std
push
ljmp
jno
or
in
jne
lret
lret
jae
mov
push
xchg
call
cmpsb
or
data16
sub
lods
cmp
or
cld
inc
sarb
add
jb
cld
xchg
mov
mov
frstor
xchg
sub
add
arpl
xorb
dec
scas
cmpsl
out
sub
imul
test
daa
bound
int
aam
push
clc
mov
adc
sub
imul
hlt
test
outsl
pmaxub
sbb
insb
xor
sub
mov
jno,pn
xchg
mov
push
jae
and
nop
push
push
sub
sti
pop
out
out
in
inc
movsl
flds
pop
ljmp
mov
xchg
imul
loopne
inc
mov
xchg
push
lahf
lods
and
lahf
in
mov
jns
frstor
adc
or
sbb
cmp
leave
add
das
ja
mov
push
fcompl
rol
mov
mov
fs
int
xchg
cwtl
mov
pushf
add
fadd
das
dec
imul
iret
andb
in
sbb
into
into
jnp
and
mov
pop
xchg
faddp
lret
adc
movsl
inc
fisttpll
stos
fs
mov
push
lret
push
push
add
mov
mov
inc
push
mov
jp
xlat
mov
arpl
dec
sbbb
cmp
addr16
or
add
mov
dec
movsb
sbb
mov
das
cmp
and
xchg
dec
jg
stos
mov
sub
add
es
or
stos
cmp
rcrl
push
or
push
aad
cmpsl
adc
and
pop
out
out
mov
ja
sub
push
jne
or
jmp
mov
or
jb
pop
cmp
push
popf
xchg
psadbw
gs
out
inc
dec
rclb
cmc
vprotb
jp
popa
out
sti
test
add
dec
lods
ss
ror
jae
push
dec
icebp
sbbb
sahf
loope
adc
imul
mov
test
cmp
mov
loopne
cld
ss
jo
sbbb
mov
mov
push
mov
enter
xchg
lcall
cmp
shrl
popa
jb
sbb
aaa
xchg
out
in
xchg
mulb
sub
push
cmpsl
add
mov
dec
popf
stc
dec
aad
pop
pop
out
pusha
mov
fxch
jne
lret
mov
adc
xchg
jg
inc
lea
mov
shrb
flds
loopne
jl
inc
add
mov
stc
pop
xchg
sub
jb
ficomps
push
fiaddl
lods
fbstp
sbb
jne
cmpsl
adc
mov
cmp
out
sub
ds
sbb
mov
fisubrl
sahf
arpl
sbb
adc
or
inc
jbe,pt
xchg
test
and
mov
gs
mov
jne
cs
pop
push
mov
jne
sbb
subl
mov
or
jp
jns
mov
lcall
inc
mov
xor
pop
xchg
jl
or
test
dec
pop
inc
cmpsl
fs
rorb
xchg
xor
rcr
pop
or
movsb
push
movsb
out
push
xor
and
mov
xchg
out
jnp
pushf
ficoml
andl
mov
lock
movsb
imull
adc
stc
push
lods
xchg
cmpsb
jbe
xchg
dec
rol
in
pop
mov
fcomps
cmpsb
pop
inc
ja
xor
movsb
mov
enter
sbb
sub
pop
or
das
mov
inc
ds
xchg
mov
outsb
jl
adc
int3
loop
dec
adc
mov
pop
ret
lds
std
aad
cmpsl
sbb
mov
out
pushf
sti
lods
inc
lds
lret
dec
cli
xchg
jo
iret
mov
xor
cmp
pushf
jno
int
pop
jecxz
stc
enter
sub
jge
notl
inc
xlat
sbb
add
adc
jl
push
fistpll
push
push
aad
iret
and
insb
in
ss
addr16
push
push
in
outsb
fcomps
pop
or
inc
lcall
mov
shrl
jb
jecxz
loope,pt
repz
pop
movsb
clc
data16
shlb
pusha
dec
in
jl
pop
lcall
push
rolb
xchg
sub
jle
je
or
movsb
loope
loopne
sub
aaa
sub
fcompl
aad
xor
xor
shlb
popa
into
rorl
add
test
ret
jnp
and
jecxz
call
mov
clc
cli
inc
nop
mov
ret
fstpl
adc
mov
in
aad
sbb
or
or
jge
sub
out
gs
mov
dec
jp
sub
pop
iret
jbe
inc
std
fisubl
jg
inc
insl
test
jb
int
sbb
ds
xor
push
mov
ret
fildll
xchg
jecxz
stos
lret
sti
int3
pop
mov
sbb
inc
scas
orl
push
fimull
jecxz
lret
push
pop
gs
pop
jl
in
jge
mov
mov
pop
imulb
pop
ds
aam
add
int3
dec
sub
mov
test
adc
pop
mov
test
mov
iret
or
and
cld
test
push
fstps
and
pusha
xchg
mov
outsl
mov
dec
adc
cmc
je
out
dec
inc
xchg
xchg
or
dec
mov
lods
push
ljmp
or
mov
lret
push
sbb
xor
mov
shll
aaa
ja
jecxz
rcr
mov
lret
adc
pop
mov
in
pop
dec
pop
xchg
lods
mov
ror
push
jge
or
dec
xlat
push
shrb
dec
outsl
mov
pop
jno
sub
jge
add
mov
test
xchg
in
xor
push
outsb
sub
sub
outsb
fsubs
sbb
sar
jns
ss
hlt
mov
sub
test
test
ror
incb
test
pop
sub
pop
outsl
inc
adc
push
inc
mov
inc
repnz
cmc
roll
sub
jg
adcl
add
cmpsb
out
mov
pop
xchg
out
adc
and
stos
das
call
inc
add
daa
je
pop
lcall
push
clc
aas
fsubl
inc
dec
or
lahf
mov
iret
adc
fxam
jmp
popf
inc
cmp
jg
addr16
movsb
xor
and
insl
subl
or
outsb
push
nop
ret
les
daa
sahf
lret
and
pusha
call
push
sub
mov
stc
movsb
sub
cmp
enter
xor
and
or
into
data16
dec
sbb
negb
inc
ds
pop
lods
jnp
xor
bound
bound
push
sub
ja
in
loop
jg
mov
sub
jno
xor
cmp
xor
nop
in
pop
push
mov
cmp
arpl
inc
sub
pop
daa
cwtl
das
xchg
popa
mov
mov
mov
ja
popl
adc
xchg
and
or
pop
xor
decl
mov
bound
xor
mov
sahf
hlt
mov
out
inc
lret
insl
pop
sub
orl
jo
loope
mov
inc
fsubs
enter
add
cld
cmpsl
aas
push
mov
jo
pusha
imul
add
xchg
sbb
adcb
data16
cwtl
ret
mov
mov
cmp
pop
insl
icebp
push
adc
mov
xchg
add
sub
fsubl
cmc
out
xor
jmp
adc
imul
into
ja
loopne
push
dec
lahf
jmp
imul
sub
nop
fisubs
pop
shlb
testb
sub
adc
outsl
push
push
mov
cmp
jne
mov
stos
cmp
fdivl
pop
fs
pop
outsl
pusha
stc
inc
dec
and
ss
sub
and
sub
ficompl
xor
loopne
dec
cmp
js
and
xchg
dec
or
lock
pop
push
je
mov
addr16
pop
or
cwtl
cli
mov
inc
subl
cwtl
or
inc
lea
shrl
stc
cmp
mov
add
out
pop
sbb
test
sbb
push
adc
ds
jmp
lret
aad
jg
push
jmp
jmp
jno
ficoms
outsl
jns
fnstsw
cs
les
ret
dec
shr
or
sbb
fsts
dec
movsb
xchg
jo
mov
add
mov
ret
xchg
dec
es
test
jns
cs
xchg
lea
dec
outsl
out
xchg
inc
cld
pop
sub
xor
out
test
jmp
mov
js
mov
popf
jns
out
ljmp
xchg
pop
hlt
sbb
and
cmp
xchg
xchg
dec
insl
push
jmp
jmp
inc
in
scas
mov
in
push
and
xchg
cli
aam
ljmp
cli
xor
ret
addr16
push
jne
inc
scas
or
rclb
add
mov
fstps
cmp
shll
pop
xor
inc
dec
cmpsb
xchg
cmc
vmovaps
jns
xlat
or
shrb
aad
dec
pop
xor
imul
fidivrl
jmp
inc
push
loop
mov
add
jo
pop
repz
sti
data16
leave
and
xchg
loope
rol
fs
cmc
mov
sub
mov
sub
dec
std
xchg
add
out
sbb
mov
push
test
xchg
sbb
push
add
cmp
jae
sbb
pop
xchg
push
sub
cmc
push
add
sbb
push
aam
nop
add
push
ss
pop
sbb
je
lods
adc
std
iret
jae
push
mov
push
mov
sub
call
xor
push
jae
fidivrl
sbb
cmp
into
addps
xorl
or
jmp
and
push
or
pop
push
xchg
movsb
cmp
scas
repnz
sbb
in
add
leavew
mov
adc
adc
adc
jle
mov
add
and
cmpsb
jecxz
push
outsb
mov
mov
and
cmp
loope
stos
nop
imul
ss
jnp
xchg
inc
pop
lcall
pop
push
jl
mov
and
jecxz
xor
stos
dec
rcrl
cmp
stos
push
dec
mov
ljmp
sub
insl
loopne
ret
fisttpll
stc
inc
lret
push
add
pop
cs
sar
popf
push
out
xchg
push
out
sub
enter
sbb
jecxz
or
and
aam
mov
and
or
mov
enter
mov
push
shrb
push
into
pop
jmp
aaa
addr16
out
mov
ljmp
pushf
xor
cmp
repz
and
sub
lods
inc
dec
jbe
pop
sahf
jmp
loope
mov
sbb
scas
cmp
ror
stos
inc
cli
icebp
ss
jmp
lea
insl
ljmp
adc
or
outsb
mov
jg
dec
mov
and
mov
and
hlt
pop
cmp
scas
fnop
push
pop
cmpsl
push
adc
rcrl
xchg
jp
adc
dec
add
call
xchg
add
cmc
xchg
mov
scas
mov
jl
dec
xchg
lcall
data16
push
push
aas
fistps
dec
add
or
mov
lahf
lock
aaa
push
insl
sbb
int
scas
cmc
fwait
sti
cmp
sbb
push
push
sbb
call
ja
lods
int
fldenv
cs
pop
je
mov
ret
sub
push
lock
iret
fldenv
mov
daa
sbb
or
xor
sub
pop
and
cwtl
mov
sbbl
hlt
or
add
mov
sti
lahf
loope
dec
cmp
iret
imul
xor
mov
cli
and
test
loope
cmp
or
in
mov
pop
xchg
mov
cmp
mov
mov
push
call
sar
xchg
pop
daa
mov
cltd
mov
in
push
gs
imul
mov
xchg
cmpb
xor
mov
mov
popf
imul
movb
popa
sub
adc
adc
orl
je
adc
sti
stos
inc
ret
dec
fs
dec
mov
xor
fs
js
iret
add
dec
in
mov
pushw
mov
imul
fldt
jle
push
mov
sbb
fldenv
xacquire
addr16
push
mov
stc
mov
test
sbb
jmp
push
mov
fstp
dec
arpl
ja
cmpsb
jp
xchg
or
cltd
jle
add
mov
sti
xchg
fwait
mov
shll
cmp
outsb
daa
and
sbb
jae
inc
push
mov
mov
adcl
incb
ret
orb
cmp
out
mov
and
or
jmp
stc
outsl
cs
das
mov
sbb
lods
ja
cmp
fidivl
inc
mov
mov
mov
or
mov
nop
inc
jbe
call
fidivs
adc
pusha
fistl
cmp
negl
fldt
hlt
lds
inc
rcrb
aad
out
cmpl
jge
cmp
cwtl
ret
pop
or
push
push
cmp
adc
push
outsl
mov
mov
lock
mov
test
push
pop
cld
iret
xchg
jae
jg
fwait
push
mov
adc
sub
into
mov
mov
adc
inc
in
gs
stos
pop
xchg
mov
xor
jae
mov
arpl
mov
mov
xor
lret
clc
jo
inc
mov
push
push
push
orb
insl
les
dec
inc
fnstsw
mov
movsb
pop
ljmp
notl
cli
daa
hlt
jns
push
sarb
or
mov
ret
lret
pop
pop
add
fwait
xor
mov
hlt
jecxz
push
push
push
dec
pop
in
jo
dec
shll
js
into
xor
jg
push
stc
cmp
jbe
push
dec
jb
ror
jl
movsb
pusha
lock
frstor
adc
or
inc
clc
add
cmp
lea
mov
add
fsubrp
adc
and
cmp
movsl
mulb
inc
pop
add
push
jno
add
xor
mov
or
push
mov
add
pop
loop
bound
jne
cmpsb
aas
cwtl
jp
lds
mov
rorl
iret
mov
dec
adc
lret
fldl2e
mov
aam
ficomps
ds
adc
cmp
xor
jne
add
mov
or
rcl
pop
xlat
out
std
pop
enter
lahf
inc
xlat
shrb
dec
repnz
lods
jbe
orl
pop
sbb
mov
rcl
push
cmp
add
xor
sbb
adc
popa
andl
mov
jle
inc
outsb
call
int
jbe
push
dec
mulb
enter
cli
stc
nop
cmp
enter
pop
ss
pop
lods
adc
std
sub
out
imul
xor
or
jle
scas
lret
cld
je
fdivrs
arpl
mov
out
xor
cld
hlt
insl
js
and
dec
push
fsubr
pop
int
std
cltd
sub
shr
and
je
mov
sbb
push
in
inc
cmp
push
ret
jbe
insb
sbb
lds
jp
mul
dec
repnz
sbb
fdivrl
dec
scas
out
jle
mov
jle
push
xlat
push
and
in
mov
jle
mov
dec
dec
sbb
ret
jle
xor
jmp
sbb
aad
shlb
or
clc
mov
outsb
push
mov
mov
fstpl
loope
ret
pop
and
es
pop
pop
push
ss
lret
mov
into
inc
aaa
mov
push
jp
inc
fwait
shll
shlb
and
or
xchg
jmp
addr16
xlat
jl
sub
sub
int3
dec
cmp
jl
push
cltd
cwtl
sbb
mov
cmp
mov
rol
lods
pop
xchg
test
stc
xor
mov
xchg
fdivs
cmp
cmpsl
mov
sbb
loop
ficoms
mov
mov
push
sahf
pop
mov
cmp
jl
out
jg
xchg
in
jo
ret
sub
xor
push
ja
sub
mov
stos
inc
pop
icebp
xor
call
aam
shrb
inc
sbb
push
sbb
insb
push
and
push
in
shl
hlt
jp
xlat
push
in
inc
dec
movsb
cmp
add
adc
jge
sub
push
enter
testb
inc
sbbl
lods
inc
sbb
dec
pop
loope
lret
xchg
or
xor
and
pop
dec
lock
add
pop
sub
jp
sahf
dec
jnp
xchg
cmp
repnz
pop
pop
adcl
xchg
and
les
cmp
aam
and
dec
nop
ds
pop
or
mov
test
jnp
pop
insl
stc
mov
popf
out
adc
bound
jne
stos
aaa
cmp
adc
pop
and
es
sbb
addl
or
cmp
pop
sbb
mov
sub
and
dec
mov
pop
pop
sub
xor
out
aad
js
mov
push
inc
dec
aaa
dec
lea
rcl
mov
in
and
lea
mov
mov
xchg
popa
clc
xchg
ss
loope
mov
pop
in
stc
push
sbb
test
shll
aam
icebp
pop
inc
adc
mov
xor
mov
mov
stos
xchg
repz
cmp
adc
cs
add
sbb
dec
lret
jb
stos
bound
cld
ds
pop
in
adc
pop
inc
push
out
xor
loopne
or
mov
out
mov
push
insl
mov
sbb
and
cwtl
push
and
test
jle
scas
jmp
sbb
in
add
mov
lock
sub
jo
xor
sbb
xlat
pushf
jl
push
data16
fcomps
aad
mov
ss
xchg
rcl
rcrl
je
adc
es
and
mov
lock
adc
pop
mov
das
js
sub
fildl
out
or
mov
orb
dec
xchg
dec
fwait
xor
aaa
pop
arpl
mov
adc
xorl
insb
sub
and
inc
sub
jae
cmpsl
push
xchg
and
or
adc
push
lock
loopne
sbb
inc
shlb
cmpsl
fwait
mov
cwtl
jne
into
movsl
cld
mov
fwait
fs
xor
insb
jle
ja
jg
scas
or
js
fdivrs
loop
arpl
subl
arpl
mov
xchg
fpatan
loope
in
mov
xchg
ficoms
pop
cmpsb
jne
sbb
and
xchg
jge
mov
fcomi
pop
pop
add
addb
jg
adc
jno
int3
test
clc
cwtl
adcl
sbb
fs
in
sub
testl
ficomps
xor
addb
ficoml
push
mov
sahf
fs
lret
pop
scas
and
in
sub
clc
sbb
orb
mov
fldcw
iret
sbb
ja
vpextrw
lds
loope
rolb
rol
xor
push
adc
es
js
cld
pusha
cmp
inc
sbb
loopne
cmp
push
test
or
out
or
enter
pop
pop
bound
packuswb
xchg
cmc
lods
mov
ret
jns
dec
sbb
xchg
in
push
jbe
add
mov
bound
into
pop
push
iret
lea
xchg
scas
push
or
inc
repz
xchg
mov
test
dec
mov
or
dec
lods
cmp
addr16
sti
mov
add
or
xchg
mov
push
pop
hlt
adcl
inc
sub
lret
jecxz
xor
push
jmp
cld
inc
jo
loope
inc
ficomps
mov
mov
leave
dec
jnp
cmpsl
and
mov
dec
inc
icebp
ds
xor
test
xchg
pop
stos
mov
jmp
fisubrl
dec
inc
xchg
in
cmp
test
pusha
cmp
shrb
mov
flds
jne
pushf
insb
lods
pop
mov
pusha
cli
mov
addr16
aam
xchg
iret
and
pop
or
mov
mov
imul
mov
in
or
es
outsb
outsb
mov
cs
lea
clc
es
enter
mov
cmp
loope,pt
fsubrl
adc
cs
mov
shll
add
push
in
add
sbbl
js
xor
add
add
es
or
movsl
jecxz
adc
stos
in
dec
dec
add
clc
ds
sbb
dec
xor
arpl
xor
sub
dec
shl
cmpsl
sbb
in
aaa
pusha
adc
mov
cltd
idivl
mov
scas
sbb
cld
cmp
sahf
jne
inc
lods
mov
sbb
jl
push
mov
bound
fidivrl
pop
mov
imul
jns
in
cs
xor
adcl
push
mov
mov
leave
repz
lret
call
sub
adc
mov
mov
lods
fisubs
sarb
outsl
and
inc
push
xor
data16
push
sbb
fsubp
mov
jg
repnz
dec
out
lcall
sti
jno
loop
add
int
inc
imul
sbb
mov
jno
or
pop
lret
jnp
add
call
and
cli
push
stos
sbb
inc
jp
pop
jo
aas
cmp
inc
int3
rcrl
js
ret
lret
cmp
pop
dec
les
lea
out
add
gs
pop
dec
add
xor
sbb
test
gs
adc
into
je
dec
in
xchg
sbb
mov
in
add
ss
and
mov
dec
clc
enter
mov
shrb
scas
imul
fwait
xchg
divl
leave
call
push
inc
lahf
rcl
fistpll
inc
cmp
mov
fnstcw
fisubs
ds
add
loopne
jmp
add
pop
mov
aad
xlat
push
sub
cmpsl
dec
push
mov
mov
add
xchg
jno
xor
cmp
sbb
outsl
sub
insb
adc
sub
inc
or
jb
adc
adc
pop
imul
push
call
arpl
in
out
lahf
fnstenv
popf
stos
jg
mov
call
rorb
ds
mov
sub
addb
subl
or
data16
popa
pop
in
fadd
xor
into
mov
dec
ret
js
aad
cmp
outsb
sbb
sbb
mov
out
jno
out
inc
push
add
inc
leave
sub
jle
xchg
jo
cwtl
test
in
push
fbstp
pusha
out
xor
cmp
mov
push
adc
sub
stos
std
movl
mov
incl
push
and
nop
sti
mov
sbb
loop
jmp
cmp
jnp
sbb
adc
xor
mov
xorl
in
pusha
xchg
pop
jb
push
pushf
sbb
push
leave
push
push
in
inc
and
cld
enter
or
mov
adc
jge
es
adc
pop
xchg
lods
mov
pop
insl
mov
pop
cli
mov
or
sti
or
leave
fstl
pop
dec
mov
jnp
out
cmp
pop
mov
mov
or
lret
mov
push
lret
inc
sub
sbb
xor
imul
aad
cmpsl
loopne
cltd
xor
int3
sub
notl
lsl
scas
in
push
mov
xchg
sbb
dec
jecxz
mov
xor
ljmp
inc
dec
sbb
test
mov
mov
sub
jne
imul
and
mov
les
cmpsb
cmp
push
out
sahf
xchg
sub
and
fsts
or
add
mov
aad
xchg
or
fs
in
jecxz
cmpsb
and
xor
insb
cld
jae
sub
out
pop
cmp
push
xor
jecxz
jl
cli
and
pop
pop
or
mov
lds
mov
int
negl
into
into
and
arpl
std
je
outsl
testl
andb
mov
cmp
xchg
xchg
mov
and
or
sub
inc
notl
mov
mov
push
xchg
pushf
test
adc
je
jno
pop
test
iret
lret
mov
xlat
xor
jge
dec
jnp
mov
push
cmp
mov
xchg
pop
outsb
cmp
jg
cmp
xlat
add
inc
bound
adc
xchg
push
xor
out
cld
mov
xchg
add
pop
mov
aas
cmp
cmpsl
imul
cmp
jecxz
ficoml
cmp
rcrw
mov
add
aam
frstor
sub
ljmp
cltd
rcl
dec
in
aaa
repz
mov
xchg
push
lock
adc
leave
pop
mov
inc
gs
int
cmp
sbb
jnp
jo
add
imul
adc
rcrb
xchg
pop
mov
inc
and
inc
pop
in
cltd
data16
cmp
pusha
mov
add
sub
shrb
pop
out
ds
jnp
hlt
mov
ds
pop
jecxz
ret
jecxz
popl
and
add
jns
push
sub
xchg
movsl
hlt
repz
test
daa
xor
imul
dec
add
push
sub
pop
pop
scas
in
adc
mov
fwait
push
inc
xchg
icebp
jns
daa
je
dec
arpl
enter
pop
cmp
mov
loop
or
aam
lcall
pop
inc
std
or
popf
pop
iret
popf
or
outsl
or
cmpsb
jp,pn
xlat
ret
mov
jo
dec
xlat
in
mov
fsubs
sbb
jmp
ficoml
xorl
out
or
mov
fildll
and
lret
shll
ret
pop
popa
inc
sub
xchg
addr16
scas
xor
out
lahf
ss
imul
daa
sub
hlt
add
adc
mov
add
mov
push
outsl
enter
mov
xor
cmp
push
xchg
test
pop
imul
outsl
jae
test
xor
out
mov
fbstp
orl
cltd
cld
stos
mov
push
pop
sbb
xchg
pusha
ljmp
mov
pop
push
sub
xor
cld
out
test
ja
and
in
ret
in
dec
repnz
dec
aas
push
push
movsl
pop
pusha
shr
lds
mov
ficomps
mov
sti
cmp
sub
cmp
daa
and
dec
mov
scas
jg
loopne
inc
pop
aas
dec
mov
andl
fbld
dec
loop
mov
imul
jmp
cli
xlat
das
lahf
stos
add
clc
sarl
jbe
inc
fwait
pop
cli
int3
mov
stc
ljmp
call
mov
xor
jb
repnz
sahf
lods
push
andb
outsl
out
shlb
int3
int3
cmp
repnz
pop
dec
loop
sbb
add
insl
jge
xchg
jg
jne
lret
mov
mov
vdivsd
push
push
dec
sahf
jb
int
jo
lret
add
imul
hlt
test
adc
add
lds
subb
in
lock
mov
pop
adc
scas
jno
xor
cld
in
push
xor
ljmp
lds
faddp
xchg
push
hlt
cmpl
and
out
push
sbb
xor
cmpsb
std
push
je
lret
addr16
movsl
cmp
sahf
mov
inc
fs
test
cltd
scas
test
aam
jno
jp
mov
js
js
shrl
loopne
jne
mov
dec
divb
es
daa
imul
sub
aam
sbb
adc
sbb
out
into
jecxz
pop
out
push
rol
add
sbb
movb
dec
adc
imul
dec
pop
mov
test
xor
cmp
mov
mov
lock
aam
lret
pop
punpckldq
xchg
call
push
push
in
mov
enter
add
inc
cwtl
ss
pop
ljmp
cwtl
jo
jge
cmp
or
ds
movsl
add
pop
pop
dec
push
pop
cmc
mov
dec
push
ss
push
out
pop
fsubr
call
adc
add
push
mov
sub
mov
sbb
or
dec
hlt
inc
repz
sti
sbb
mov
outsl
jns
xchg
lahf
int3
ss
out
or
ss
mov
add
loopne
imul
dec
das
xchg
jmp
dec
sahf
stos
dec
insl
popf
sbb
jo
mov
in
jmp
scas
push
leave
shrb
xlat
pop
outsl
or
lcall
idiv
sbb
or
std
mov
stos
aaa
ljmp
rolb
sarl
loope
ds
and
cmp
mov
negl
xchg
cltd
fwait
mov
nop
ja
mov
bndstx
andb
std
xor
pop
fwait
pop
rcl
inc
fnstsw
cld
push
mov
push
mov
in
adc
mov
pop
jp
in
rclb
mov
mov
sub
cmpsb
lock
mov
mov
rcl
negb
dec
pop
les
cmp
es
out
mov
cmp
mulb
dec
inc
push
inc
jl
lret
xor
aad
add
cmpsl
lcall
in
cmpsb
ljmp
sti
sahf
xor
rcr
sarb
pop
pop
imul
je
xorb
sub
int3
sbb
into
bound
loop
inc
cmp
test
std
aas
xchg
and
lcall
and
test
cltd
xor
int3
and
arpl
cmc
or
les
or
push
sbb
push
sbb
mov
xor
or
dec
sub
jns
dec
and
and
jecxz
int
cltd
pop
enter
xor
rcrb
mov
pushf
push
test
and
pop
pop
out
mov
popf
jne
xor
cmp
mov
inc
js
rol
sub
push
jb
or
mov
sbb
adc
add
and
xor
icebp
cmpsl
mov
fdivrl
dec
or
mov
out
mov
fsubl
xchg
push
jns
xor
flds
cmp
and
loopne
sub
add
jge
push
sub
pop
jns
addb
jno
sub
repnz
imull
xchg
xor
jge
rcll
dec
and
or
sub
cltd
or
mov
out
push
inc
mov
mov
and
fpatan
mov
sub
test
xor
mov
gs
popa
xchg
jnp
cmp
ds
roll
addr16
enter
out
aaa
or
cmp
pushf
mov
pop
fucomi
mov
stos
lret
in
fwait
lret
je
push
jb
mov
mov
jg
adc
or
cmp
push
xchg
sbb
leave
shll
adc
xchg
xchg
jb
dec
ret
call
cltd
hlt
or
push
pop
jecxz
xchg
dec
cmc
lea
lahf
push
xor
sbb
pop
pop
repnz
mov
lahf
imulb
mov
or
scas
add
iret
clc
push
or
insb
sub
lds
popl
lret
mov
icebp
enter
lds
mov
ret
jns
cli
enter
pusha
xorps
dec
mov
arpl
sbb
shl
cmp
pop
lods
sahf
mov
push
sbb
and
jge
jne
add
xchg
fsubrs
mov
push
fsub
out
inc
mov
in
out
mov
jb
lret
xor
pusha
in
mov
addr16
and
and
fnstcw
faddl
in
push
xchg
out
pop
inc
jmp
clc
mov
dec
sbb
les
lock
jo
mov
lods
add
test
pop
add
daa
mov
fwait
stc
inc
arpl
icebp
push
rcrb
icebp
xchg
push
push
xchg
outsb
sti
xchg
mov
push
mov
mov
aaa
dec
push
inc
fildll
cld
xchg
xchg
dec
mov
sbb
imul
icebp
or
les
mov
fcmovbe
daa
sub
mov
outsl
cmp
popa
jae
sbb
cld
ja
mov
xchg
hlt
je
inc
sub
movsl
sbb
pop
lods
mov
mov
fildl
xchg
adc
mov
or
sbb
sub
fnsave
mov
jne
stos
shrb
mov
repz
inc
add
incl
xchg
pop
insb
add
xchg
icebp
mov
movl
add
or
aas
xchg
jno
dec
push
out
xor
jb
jmp
adc
jg
or
xchg
cs
dec
or
inc
cmp
add
and
push
inc
les
sbb
je
pop
sub
jns
push
int
insl
mov
fimuls
call
fisttpll
jo
inc
in
cmp
adc
dec
out
mov
fxtract
aas
ljmp
mov
test
dec
cmpsl
in
aam
sub
out
test
sub
and
inc
jle
test
cs
and
stc
add
das
enter
jl
pop
xor
fdivrs
dec
scas
dec
insb
mov
dec
push
dec
aas
out
lds
jnp
dec
fiadds
push
pop
aad
pop
lret
aaa
das
adc
add
cmp
scas
cmp
inc
scas
call
mov
jmp
inc
enter
sbb
mov
mov
rolb
mov
aaa
jne
lods
and
fildl
aaa
std
dec
dec
popa
jnp
cmp
dec
insl
test
addr16
ret
push
mov
mov
ja
iret
lahf
push
or
cmpl
inc
aaa
xor
dec
dec
cmpb
push
les
jne
dec
or
into
inc
fs
into
cmp
jmp
cs
imul
pusha
std
movsb
ds
xchg
inc
pop
icebp
and
stos
cmc
mov
adc
xlat
leave
inc
mov
cltd
push
addr16
popa
push
icebp
in
xor
clc
lret
ret
xchg
add
mov
mov
mov
pop
sub
push
out
mov
shlb
sbb
pushf
pop
loop
test
jnp
mov
fsubr
ret
pop
lods
mov
call
mov
push
ficompl
dec
jmp
jmp
movsl
cmpl
lahf
mov
dec
call
dec
scas
aas
ret
sub
loop
pop
mov
mov
mov
je
ja
jb
cltd
push
loop
push
pop
fisttps
xor
lret
pop
imul
aas
stc
push
mov
rorl
adc
jle
and
sti
stos
inc
ret
add
or
jne
sub
sub
clc
jp
movsl
das
mov
movsl
or
stc
cmp
pop
adcb
and
xchg
sub
lock
lods
mov
jb
add
xchg
ja
or
cli
dec
sbb
ror
mov
or
push
or
xchg
jb
and
pop
jl
mov
mov
js
imul
pushf
in
push
dec
xchg
and
pop
dec
std
cli
or
sub
fisubrl
dec
inc
mov
test
mov
sbb
out
cld
cmc
ds
xor
stc
in
sbb
jae
insb
out
shll
pop
xchg
insl
stos
mov
rclb
push
push
push
or
psubq
int
ja
pop
test
sbb
scas
pop
mov
cmpb
mov
adcl
out
jnp
mov
popf
push
xor
cs
aaa
xlat
out
out
cmp
scas
mov
cmpsb
push
or
fsubrs
movsl
mov
adcl
out
scas
inc
inc
pop
pushf
inc
inc
out
int
out
cmp
mov
jae
xor
mov
es
ret
iret
into
xor
mov
int3
aas
push
gs
push
sub
sbbl
xor
stc
push
cli
push
in
fcmovnbe
or
xor
hlt
pop
frstor
int3
clc
sub
inc
and
push
push
fistps
mov
dec
sbb
sub
iret
mov
xchg
lret
fistps
mov
add
inc
add
push
adc
imul
sub
cli
in
clc
xor
pop
scas
testl
mov
add
mov
in
mov
das
rol
add
add
ret
sbb
in
cmc
mov
scas
pusha
in
mov
mov
adc
out
cmpsl
sub
dec
or
daa
jg
popa
push
sbb
add
insl
stos
std
xchg
fmull
outsl
and
je
xor
jge
xor
mov
add
int3
dec
add
call
push
loopne
xchg
dec
notl
movsb
mov
icebp
fnstcw
push
xchg
fidivl
mov
clc
and
out
fidivl
jno
out
stos
cmp
xchg
pop
ds
sub
arpl
loope
adc
aas
push
dec
xchg
and
rorl
movsb
shll
adc
icebp
out
rcll
adcl
test
xchg
xchg
mov
mov
les
test
testb
pop
or
out
bound
inc
sub
mov
mov
adcl
setle
sub
popa
test
mov
scas
inc
ret
daa
outsb
add
and
push
or
and
add
sbbl
rcr
or
clc
push
mov
sub
xchg
pop
xor
mov
jge
and
jge
loope
inc
pop
popf
mov
stos
and
int3
dec
ja
jb
gs
mov
enter
fdivrp
xchg
jo
loop
adcb
sahf
add
pushf
and
jmp
loope
add
sbb
popf
movsl
icebp
in
sbb
icebp
adc
pop
add
mov
ret
sub
sub
inc
cmp
xchg
bound
and
push
aas
adc
fisubs
das
push
jg
lock
decl
mov
das
ja
xchg
jbe
sbb
cld
ret
push
addl
inc
pop
outsl
push
or
or
and
nop
jns,pn
insb
movaps
mov
xchg
or
insb
movsb
sti
sbb
out
adc
cmp
xor
inc
pop
inc
lret
jle
lret
lds
lahf
mov
xlat
pop
or
mov
mov
push
fnstenv
sub
inc
fldcw
ja
fdivr
xchg
mov
int
cmp
test
add
mov
test
or
sbb
sahf
hlt
aaa
mov
mov
mov
sbb
imul
divl
mov
sbb
rclb
rolb
es
out
push
pop
push
inc
dec
and
ljmp
fsubl
dec
pop
xlat
mov
lahf
imul
lock
stos
cmp
fisubrl
push
pop
fisubs
pop
xor
xor
std
cmp
es
jne
pop
stos
cmc
xchg
push
adc
and
fistl
xor
sub
inc
xchg
repnz
addb
pop
out
inc
jno
or
lock
mov
or
bound
jp
push
ret
js
dec
nop
cmp
mov
jl
loop
mov
pop
fnstenv
lcall
sahf
sbb
sarl
or
pusha
je
push
je
inc
jb
add
xchg
dec
iret
lahf
mov
std
xor
push
sysret
into
cmp
sarb
ds
cmpsb
push
in
fwait
adc
mov
es
das
lea
and
outsb
push
push
jno
stos
lcall
or
cmc
pusha
scas
pop
mov
rclb
cmpsl
dec
je
inc
enter
test
pop
pushf
mov
jae
in
pushf
in
add
hlt
rolb
arpl
insl
cmp
mov
jnp
icebp
dec
dec
fisubl
outsl
daa
push
fbstp
mov
fstps
push
dec
pop
lahf
jp
pusha
test
ljmp
sbb
fdivl
std
out
test
rorb
add
pushf
cltd
jo
pop
hlt
fs
fsubrs
adc
out
push
push
out
dec
cmc
inc
jne
push
arpl
push
enter
or
xor
adc
jmp
mov
in
push
out
movups
pop
daa
adc
and
push
mov
jl
pop
outsl
jnp
aad
fsubrs
sub
push
fadd
nop
daa
div
jno
fadd
scas
cmp
dec
mov
shll
add
ds
dec
or
sahf
test
mov
jae
push
mov
out
push
dec
mov
sbb
cmp
gs
add
mov
mov
cmp
inc
repz
push
dec
mov
loop
int
popl
jmp
sub
fcmovnb
dec
popa
jmp
rcl
mov
mov
pusha
fdivl
imull
adc
or
cmp
iret
mov
adc
lret
push
call
mov
sbb
hlt
addr16
popf
cmpsl
xchg
test
jns
xchg
cli
sub
mov
sub
dec
icebp
iret
imul
lds
leave
int
lock
scas
test
hlt
into
xchg
mov
sub
jno
test
mov
jl
js
and
push
cli
test
ljmp
pushf
jge
push
outsb
or
pop
pop
sti
mov
mov
loopne
lds
loope
dec
jne
fisubl
imul
lret
lods
pop
orb
and
repnz
inc
lcall
dec
out
mov
push
in
jb
sti
icebp
icebp
adc
jae
leave
das
mov
mov
outsb
mov
jecxz
push
in
inc
mov
jg
dec
mov
push
dec
pxor
out
jecxz
imul
push
mov
and
jae
hlt
shl
jo
adc
iret
dec
push
stos
push
fnstcw
in
dec
sbb
imul
xor
in
push
js
or
popa
jg
mov
test
and
in
xor
in
loopne
aam
inc
mov
mov
test
xor
daa
pop
adc
mov
je
loop
jmp
xor
cwtl
dec
inc
and
pop
mov
mov
test
inc
jb
in
dec
shl
push
fidivs
push
jle
popa
hlt
mov
and
out
cmpsb
pop
add
fiadds
std
sub
or
sbb
cmp
push
pop
cmp
in
cmc
push
lea
sub
stos
jnp,pn
test
fcmovnb
jp
pop
dec
and
mov
popf
mov
cmp
subl
test
push
push
loopne
pop
jno
inc
test
divb
mov
pop
aaa
stos
ret
lret
addr16
fsubr
cmp
ljmp
jo
jmp
testl
xchg
push
sbbb
push
es
rcrl
jo
cmp
pop
cmpsb
in
mov
sub
rcrl
test
imul
int
jns
enter
xor
inc
add
sub
in
xor
lods
xchg
insl
jnp
lret
aas
cmpsl
cmc
or
sbb
cmpsl
dec
add
sahf
mov
adc
leave
nop
push
pop
insl
dec
pop
adc
adcl
test
mov
xchg
je
aam
arpl
mov
mov
mov
xor
sbb
and
pop
jge
or
mov
sbb
mov
add
push
sub
pop
mov
shll
icebp
jecxz
adc
mov
or
mov
jg
call
xchg
rcrl
pusha
mov
cmpsb
das
mov
xchg
aam
enter
add
or
jnp
mov
movsl
shll
outsb
vcmppd
ret
pop
imul
cmp
xor
jno
lock
xchg
adc
cmc
sbb
mov
mov
push
jae
daa
outsl
push
jge
insb
add
sub
sbb
insb
inc
mov
xchg
in
std
mov
aam
das
icebp
xchg
sub
xor
mov
popa
outsb
push
mov
push
mov
xlat
sbb
mov
mov
scas
and
rcrl
test
xor
fldenv
sbb
jmp
es
pop
xchg
test
pop
lods
mov
shl
test
jle
inc
and
out
sbb
inc
pusha
adcb
lea
out
jge
call
das
dec
mov
lods
push
xor
xchg
sub
and
int3
idiv
into
sub
pop
cs
add
imul
int3
sbb
incl
pop
lcall
fbstp
hlt
outsb
pushl
jp
or
cmp
lea
scas
pop
mov
and
daa
sbb
push
push
mov
int3
cmpsb
or
and
insb
lock
push
pushf
rorb
in
push
lcall
out
jecxz
mov
aad
or
bound
aaa
out
insb
test
dec
repnz
out
adc
ss
cmp
adc
or
sbb
cmp
gs
lret
jno
push
and
sbb
add
mov
adc
or
push
mov
fimuls
jecxz
ret
jae
mov
adc
add
jle
loop
or
sbbl
add
jmp
mov
mov
jecxz
cltd
fwait
xchg
testb
and
mov
mov
cltd
xor
jmp
and
pusha
das
mov
jbe
mov
fists
int
out
std
inc
clc
and
mov
out
mov
aam
pusha
pop
jbe
pop
cmc
sbb
sub
and
xchg
push
fdivs
call
inc
leave
outsl
push
std
arpl
mov
fldcw
inc
pushf
movsb
fsubr
add
mov
add
push
xchg
adc
call
aas
ljmp
sbb
mov
mov
ret
mov
pushf
les
push
pop
push
jbe
sbb
bound
loopne
cmovns
daa
sub
xor
inc
mov
mov
inc
fidivl
add
xor
bound
add
loope
and
test
jecxz
ljmp
add
loopne
cltd
fsubl
mov
dec
ret
scas
movsl
fimull
test
insl
and
jl,pn
pop
icebp
stos
inc
inc
or
ret
adc
push
pop
clc
and
push
adc
rcrb
or
in
aas
dec
add
ret
sub
push
mov
lret
sti
sub
sub
mov
sti
sbb
dec
mov
imul
jno
insb
sub
pop
pop
mov
sahf
andb
fidivs
add
add
loop
rcll
mov
lock
pop
inc
and
push
ret
fucomip
outsl
decb
add
leave
pusha
aas
rcrl
clc
mov
sbb
jle
movsb
ret
push
fisubrs
imul
jg
cwtl
das
out
cltd
int3
dec
movzwl
ss
jecxz
sbb
scas
dec
mov
ss
push
insl
add
mov
add
pop
dec
inc
jl
xor
cs
rcll
outsb
mov
jno
negl
icebp
outsl
or
dec
mov
nop
repz
repnz
shrb
mov
filds
add
arpl
out
lahf
mov
dec
addr16
jb
into
jae
mov
lret
aad
cmp
addr16
test
jp
xor
insl
push
jmp
stc
insb
fldpi
insl
and
adc
mov
insb
hlt
xchg
sti
lret
mov
inc
fbstp
int3
jo
push
ss
and
add
mov
mov
pop
add
bound
insl
cmp
dec
sbb
jnp
sbb
pop
sub
clc
or
inc
mov
inc
pushf
xchg
pop
xor
fidivs
out
outsb
jbe
xchg
cmp
pop
push
sbbb
add
cmpsb
xchg
push
pop
cmp
cmp
pop
inc
sbb
xchg
sahf
mov
jp
dec
xlat
jb
add
sbb
or
push
jno
jmp
inc
lods
aaa
std
repnz
mov
fwait
sub
inc
pop
ss
pop
dec
dec
adc
dec
jl
mov
fdivr
inc
mov
fs
test
dec
add
dec
inc
jo
sub
or
fucomip
mov
arpl
xchg
or
or
out
mov
adc
jno
cmp
rcrl
ds
repz
cmp
test
mov
sbb
adc
mov
push
adc
fists
jns
ja
sub
push
xchg
add
out
pop
sub
repz
xchg
dec
test
decl
lea
sbb
popa
int3
inc
sub
mov
xchg
inc
and
ljmp
mov
lret
fstps
mov
inc
js
cmp
mov
int3
sub
and
xchg
mov
sbb
inc
cmp
gs
punpckhbw
dec
cmp
mov
aas
and
fsubrl
push
pop
mov
pop
push
adc
mov
inc
mov
dec
rcl
shrb
enter
test
cmp
adc
rolb
jbe
mull
repnz
and
dec
push
fdivr
mov
sub
inc
jecxz
insl
call
mov
cli
xchg
movsl
in
imul
shlb
rcrb
push
adc
inc
xor
add
imul
dec
xor
fldenv
pop
das
pop
inc
sub
daa
js
dec
icebp
dec
xor
data16
jo
ret
mov
mov
ds
inc
inc
sahf
sbb
iret
jg
fs
fwait
lcall
and
out
daa
shlb
fnstcw
adcl
repz
inc
stos
mov
xor
mov
add
inc
mov
lahf
fbstp
cmp
mov
test
arpl
pushf
sbb
js
cwtl
adc
jmp
adc
mov
clc
cmp
sub
loop
add
mov
cmpsb
jo
arpl
scas
hlt
push
loope
mov
out
push
cmpsb
mov
cli
js
jmp
xchg
sub
lret
or
stos
popa
jg
dec
inc
sub
mov
fdivr
xchg
sbbl
sbb
fwait
mov
jge
or
pop
rcl
mov
mov
aad
out
out
aas
insl
or
lahf
pusha
sub
fwait
mov
cmp
popf
fdivs
xchg
push
push
push
popf
dec
mov
pop
pop
and
mov
arpl
inc
ljmp
mov
cmp
pop
push
rolb
mov
aaa
dec
adc
and
aas
inc
fs
add
mov
add
movsb
add
mov
and
lcall
jl
lahf
shlb
mov
ret
leave
int
call
mov
and
fcomp
xor
mull
add
push
int
dec
push
xchg
push
inc
in
imul
jne
ss
nop
pusha
psadbw
cmpsb
lea
push
add
or
stc
jl
movsb
out
int
jle
loop
shl
out
dec
jmp
mov
aas
leave
sbb
xchg
test
lret
lret
fmull
inc
hlt
jecxz
mov
xor
add
mov
push
repz
and
or
aas
into
sahf
es
cpuid
popa
fnstenv
jnp
and
sub
push
lcall
pop
xchg
fwait
cmp
mov
or
rep
jnp
into
lods
inc
sahf
ja
mov
std
es
pop
pop
jb
and
stos
pop
push
pop
outsl
lahf
stos
adc
mov
and
xchg
dec
nop
dec
cmp
xlat
loop
lret
xlat
jmp
jecxz
or
inc
cmp
pop
xchg
bound
loop
aas
daa
inc
lods
cmp
cmp
lds
out
jmp
or
test
addr16
lock
rorl
inc
add
into
gs
mov
in
subl
mov
js
mov
addl
test
lret
cmp
movsl
cmp
pop
test
adc
sub
pop
lret
xchg
xchg
jmp
pop
xlat
inc
jne
pop
mov
loopne
xor
lods
cmp
jb
cli
insl
sbbb
pop
jns
ret
popf
cmp
cmpsb
out
mov
push
jecxz
stos
cmpsl
adcb
xchg
jno
adc
int3
ss
iret
xor
add
push
adc
or
jmp
add
mov
negb
aad
mov
xor
xchg
cmpsl
and
push
outsl
xchg
push
popf
inc
pop
add
pop
xor
mov
sbb
movsl
jbe
stc
sahf
xor
xor
sub
out
jl
adc
shrl
call
test
test
inc
lret
data16
push
stos
pop
dec
push
aaa
lret
push
call
loop
js
push
sbb
shl
inc
cmp
addl
or
pop
lcall
cmp
rorb
nop
outsb
into
xor
xor
dec
jb
push
insb
pop
sub
push
mov
xor
xor
adc
inc
outsb
loope
insb
and
fdivrl
nop
and
push
pop
pusha
sub
lea
lods
dec
mov
orb
nop
mov
mov
cmp
int3
adc
sbb
add
shlb
mov
cmp
sahf
ds
dec
scas
sub
loope
or
std
and
call
inc
sub
les
sub
outsl
cmp
ret
stos
cmp
dec
dec
push
inc
push
rcrl
dec
inc
pusha
dec
fnstsw
hlt
les
out
push
mov
add
and
inc
dec
dec
jae
pop
jge
dec
cmp
dec
sbb
xor
mov
popl
icebp
aaa
inc
fldcw
call
rcrl
testl
addr16
aam
lea
fiadds
movsb
lods
push
jle
sbb
out
mov
cmc
mov
or
xor
out
fmull
sbb
hlt
dec
es
aam
xchg
inc
les
repnz
jmp
push
jb
fisubs
xchg
stos
test
mov
mov
roll
xchg
inc
sub
jns
pop
cmovg
gs
jb
pop
cs
jo
imull
mov
dec
dec
push
jmp
jmp
outsl
lods
imul
jmp
test
ss
cli
lret
loope
lret
sbb
ljmp
pop
fs
jne
push
xchg
and
fstl
lods
cmp
mov
mov
xchg
xchg
or
clc
push
mov
pop
filds
or
fwait
scas
pop
fistl
fistpll
repnz
mov
ret
out
ret
decl
mov
outsl
aam
imulb
pop
jb
mov
call
adc
xor
mov
and
test
nop
cwtl
adc
mov
shlb
sub
in
mov
lea
out
cmp
adc
repz
xor
stos
jb
into
push
inc
ja
repz
daa
or
loope
xchg
rclb
or
shll
cmp
adc
xchg
jmp
aas
outsb
cmp
or
clc
imul
nop
leave
fwait
sti
jae
jne
notb
mov
int3
test
bound
test
or
cmp
outsl
xchg
xor
or
sti
mov
lret
js
fbld
push
sub
xor
push
sbb
fldcw
js
cli
lcall
stos
fs
jbe
jns
pmaxub
adc
inc
ret
imul
cmp
andl
inc
adc
fs
lret
fs
es
jecxz
add
shll
scas
mov
rcl
addr16
popf
jne
leave
dec
ret
ja
loop
dec
adc
mov
rolb
cmp
ja
mov
hlt
ret
pop
in
negl
or
sub
mov
out
fisubrs
ret
fs
dec
jecxz
xchg
adcb
dec
cmp
jp
inc
pop
js
cmp
cld
sub
in
dec
sbbl
lahf
mov
js
xlat
mov
stos
xchg
fnsave
flds
lcall
scas
pop
ds
lea
cli
or
xor
fs
fwait
inc
add
pop
or
hlt
adc
and
push
insl
dec
add
hlt
mov
cmp
je
rcll
cli
or
cmpsb
fneni(8087
lcall
cwtl
arpl
mov
je
outsl
outsl
outsl
xchg
adc
sub
push
add
mov
or
xchg
mov
cmpsl
pop
push
imul
jb
sbb
or
inc
cmpsb
fwait
mov
pop
and
pushl
and
mov
xchg
xlat
cld
mov
cmpsb
sub
inc
ret
cs
xchg
cs
inc
repnz
fldz
mov
xchg
sub
mov
sub
jno
inc
jg
xchg
sbb
or
mov
mov
or
test
sbb
mov
ret
pushf
xor
je
push
inc
out
inc
sbb
pop
pop
pop
dec
into
add
mov
fwait
insb
sbb
out
xchg
adc
andb
push
ret
rorb
lods
adc
pop
ficompl
or
aaa
clc
xor
jnp
xchg
outsl
add
xchg
pop
push
inc
mov
sbb
call
je
push
fdivs
adc
mov
stos
aas
scas
mov
loopne
xor
or
arpl
pop
pop
and
push
mov
mov
cs
xor
cwtl
lahf
mov
mov
cwtl
push
lcall
jge
stos
or
sub
xor
adc
test
adc
push
fadd
bound
out
loope
xchg
jae
fidivl
pop
sbb
lea
xchg
pop
mov
cmp
inc
jbe
ljmp
mov
shrl
sarl
loopne
test
xorb
xor
dec
sbb
test
lret
push
mov
and
std
jns
outsb
sti
fwait
push
push
xchg
lods
push
jns
cs
je
out
cli
mov
aad
mov
cmp
sarl
add
lds
test
lcall
pop
pusha
sub
mov
and
sarb
iret
cmp
mov
je
testb
sbb
sub
out
jns
cmp
lods
jnp
or
jne
stos
or
clc
push
test
out
cpuid
mov
nop
pushf
and
xchg
jmp
pop
mov
cmpsb
pop
cmpsb
pop
xor
lahf
popa
add
mov
push
data16
pushf
xlat
orl
inc
fdivs
xchg
mov
and
addr16
adc
sbb
jns
sub
dec
mov
push
mov
lds
inc
pop
stos
pop
jecxz
pop
lret
xlat
mov
loope
push
jmp
int
daa
testb
cld
xchg
enter
nop
adc
mov
cmp
nop
enter
sbb
orl
adc
cmp
pop
cmp
mov
dec
xchg
or
mov
daa
push
cwtl
pusha
enter
es
shl
pop
out
lods
mov
bound
xchg
lret
cld
mov
xor
or
mov
jg
cmp
dec
mov
rolb
aad
mov
mov
cli
in
loopne
jle
bound
xor
mov
adc
xchg
xchg
aas
lock
cmpsb
push
jne
jnp
mov
push
xchg
aaa
ret
fisubs
sbb
stos
xchg
cwtl
aad
imul
pop
xlat
nop
mov
mov
jge
cmp
jns
xchg
sbbl
clc
sbb
out
ja
fcmovbe
xchg
daa
bound
popf
xchg
adc
or
adc
loope
movsb
jl
ja
imul
imul
movsl
sub
pop
pop
dec
mov
cmpb
aaa
out
cmp
loop
jns
xchg
shr
and
inc
dec
inc
xlat
jnp
or
push
add
call
cltd
or
movsl
data16
xchg
pop
test
fwait
and
push
insb
lods
mov
inc
mov
stos
mov
and
dec
stos
loopne
pop
cltd
movsb
hlt
jl
test
dec
mov
psubq
jl
call
icebp
inc
push
int
dec
lock
push
mov
and
jmp
mov
sbb
data16
xchg
pop
mov
aaa
inc
cmp
jg
bound
push
or
cmp
ret
xor
cli
xchg
adc
sbb
mov
push
leave
nop
xlat
repz
sub
ja
xchg
es
adc
shrl
xchg
test
adc
dec
dec
xchg
cmp
jo
adc
lock
out
push
std
or
mov
cld
push
mov
xor
jns
insl
mov
sbb
xor
adc
sub
or
sub
sub
xor
std
jnp
mov
sbb
cmp
es
or
pop
fs
xchg
add
into
pop
jp
lcall
inc
shrb
rcll
mov
aaa
push
in
sub
cmc
movsb
add
fstpl
loope
hlt
fisubrs
daa
aaa
push
pop
outsl
mov
push
push
movsb
les
cs
dec
inc
adc
in
shll
add
or
mov
inc
dec
out
push
loope
or
clc
lock
cmp
popf
xchg
test
ret
pop
mov
cmp
jae
dec
movsb
mov
xlat
jmp
pop
dec
mov
rorb
and
out
sub
inc
aad
dec
push
xor
aaa
jne
shr
push
xor
dec
xchg
pop
stos
in
sbb
nop
mov
das
push
sub
push
jb
dec
movsl
ja
arpl
mov
xor
adc
and
jbe
stos
lahf
jecxz
mov
imul
pop
aad
mov
push
push
lods
repz
arpl
ja
rcrb
pop
mov
mov
mov
repnz
mov
pop
stos
cmp
mov
adc
adc
cmp
push
mov
test
mov
pop
shr
pushf
pop
jmp
out
xor
mull
push
cmp
push
jmp
inc
les
push
mov
push
mov
ja
xor
inc
insl
clc
mov
lea
loopne
or
mov
bound
xchg
mov
enter
ljmp
mov
movsl
cmc
adc
lret
clc
xchg
push
mov
mov
cmp
adc
fprem1
push
or
sbb
cmp
sbb
and
pusha
movsl
cmp
ror
jbe
and
std
hlt
xor
arpl
xor
lea
cmp
jle
cmp
nop
sub
mov
push
jp
out
cmp
out
push
popf
lods
clc
das
insl
add
test
cmc
arpl
pop
xor
push
test
test
push
sub
lods
add
push
xchg
ds
xchg
xchg
pop
push
aam
insl
mov
mov
leave
call
scas
das
test
imull
xchg
in
bound
sub
inc
aaa
into
add
xor
pop
sub
dec
cltd
movsb
je
jbe
push
lods
in
add
sub
cmc
fistps
push
jno
inc
xchg
repnz
jo
pop
sub
push
mov
roll
pop
into
or
int
and
pop
cmp
xchg
cmc
dec
dec
cmpsb
adc
enter
or
gs
out
xor
rcr
fbstp
iret
subl
aad
mov
in
negb
fadd
xor
lds
clc
out
sahf
cmc
push
sbb
lds
xchg
jne
hlt
aad
sahf
adc
jns
ror
push
adc
lahf
out
or
adc
and
push
mov
out
cld
xchg
sub
sbb
inc
jbe
mov
mov
mov
sbb
in
aam
pop
pop
xor
lcall
and
xor
je
add
fldcw
lret
daa
cmp
mov
cwtl
pop
cmc
sbb
sub
jp
divl
sub
xor
cmp
fidivl
or
mov
lea
pop
cmp
pop
cwtl
cmp
test
movsb
icebp
adc
pop
and
jns
push
fwait
pushf
adc
hlt
dec
sbb
out
cmp
cmpsb
pop
sub
inc
and
fcompl
loop
stos
pop
ds
pop
sbb
bound
stos
inc
aam
dec
mov
ja
pop
xlat
jmp
in
enter
mov
aad
movsb
push
es
insl
aam
sbb
jae
int3
and
mov
xchg
test
mov
lret
dec
test
out
jmp
test
cmpsb
jb
mov
jae
sbb
mov
sahf
les
mov
dec
mov
dec
adc
out
das
jecxz
xchg
sub
je
shl
ds
xchg
enter
popf
stos
add
xchg
xor
ret
xor
sahf
push
push
lcall
inc
stos
lea
adc
xchg
jb
mov
adc
aad
and
sub
sub
jp
stos
pop
loopne
sarl
and
xlat
and
imul
cmp
xor
jo
nop
pop
mov
sbb
scas
fmul
adc
scas
cmp
push
jle
aaa
pop
out
scas
shlb
dec
pop
repnz
rclb
es
repz
je
nop
mov
push
pushf
pop
fwait
cmpl
addb
ret
fisttpl
xchg
push
gs
fwait
dec
fwait
sub
cmpsb
mov
frstor
cmp
in
jmp
pop
repnz
xchg
pop
jb
stos
jns
xlat
ljmp
adc
mov
jae
jge
mov
pop
pushf
cmp
or
add
gs
lock
jae
sub
nop
lods
lock
sub
adc
scas
loope
mov
xchg
test
mov
cmovb
cwtl
jno
mov
pop
dec
mov
lahf
mov
dec
adc
add
mov
leave
loopne
mov
filds
std
jb
cmp
add
std
popa
inc
fcoml
in
pop
push
js
or
mov
out
or
int3
movsl
dec
xlat
and
pop
repnz
inc
cwtl
stos
xchg
jae
jmp
or
cwtl
repz
adc
sub
xor
std
gs
loope
xchg
cmp
add
sbb
xchg
sub
mov
jg
mov
pop
push
loop
mov
and
in
std
xor
cmp
fmull
jbe
outsb
sbb
imul
out
and
movsl
hlt
or
lea
jge
std
mov
js
dec
inc
mov
insb
jle
xlat
shlb
idivl
jg
into
mov
inc
cltd
lcall
sub
ja
pop
outsb
repz
or
repnz
mov
add
aaa
adc
add
jae
or
mov
in
test
out
jns
test
data16
lock
aam
je
scas
cmpsl
cmpsl
sbbb
testb
bndstx
cmpb
mov
pushf
addb
mov
push
jmp
pop
stos
sub
pushf
add
fidivs
lret
add
xchg
sbb
data16
xchg
mov
push
je
push
lock
fsubs
and
mov
xor
xor
adc
push
jle
out
pop
push
jp
lds
pushf
sub
mov
cmc
jnp
push
adc
inc
les
and
out
jbe
cwtl
sti
sbb
out
cmpb
xorps
inc
pop
xor
mov
jno
loope
leave
push
mov
dec
or
mov
fsub
int3
and
mov
dec
leave
stos
testb
repz
mov
stc
popa
mov
addr16
sub
in
ror
data16
push
or
inc
insb
sti
xor
xchg
cs
imul
xchg
stos
cli
dec
in
ds
ret
mov
popa
inc
in
pushf
mov
cmp
dec
xchg
pop
andb
xlat
sub
or
add
xchg
or
inc
sub
pop
stc
dec
into
popa
data16
lock
stos
mov
jo
shlb
xchg
clc
inc
push
out
jbe
les
loop
js
out
int3
cmovb
mov
xlat
and
std
mull
dec
fs
inc
and
in
stos
adcl
inc
inc
data16
xor
cld
lret
loope
lock
lods
inc
fistl
loope
in
add
lret
cmp
mov
std
andl
cmpsl
aaa
pop
pop
push
push
xor
sbb
push
pop
pop
xor
shll
push
and
pop
sbb
xchg
jmp
mov
cmp
dec
mov
lret
xchg
pop
sub
out
push
xchg
mov
jno
aam
lret
shrb
xchg
jmp
fstp
outsl
movb
loop
out
or
sbb
dec
cmp
dec
pop
and
dec
cwtl
cli
mov
test
cmp
xchg
aam
pop
push
fistpl
xchg
inc
loope
jecxz,pn
aas
xchg
rorl
rclb
ss
adc
cmpsb
les
adc
int3
pop
or
stos
cltd
push
pop
sub
imul
incb
push
xchg
xor
xor
bound
xor
mov
xchg
add
mov
dec
xchg
sbb
jl
in
sub
mov
and
divl
loope
dec
pop
bswap
nop
fwait
or
cmc
lret
clc
addr16
mov
call
cmp
xchg
imul
xchg
mov
mov
out
aas
loope
adc
fwait
enter
mov
mov
repz
das
or
int3
xchg
xlat
mov
aas
xchg
dec
cs
aam
dec
pop
mov
jbe
dec
loop
bound
adc
aam
mov
in
aad
sbb
mov
mov
pop
jno
mov
xor
dec
adc
insl
push
adc
dec
pop
lcall
jg
and
inc
sahf
incb
lods
mov
xor
testl
jp
xchg
inc
lahf
sub
xchg
dec
dec
jne
mov
lahf
andb
mov
cltd
add
lock
jg
pushf
sub
repz
lahf
add
cs
out
sub
xchg
pop
leave
in
mov
and
jns
popf
iret
jb
in
inc
aas
es
lods
push
pusha
jmp
push
pop
js
icebp
movsl
jb
cmp
sbbb
sub
add
sbb
adcl
jo
shrb
sbb
sbb
les
dec
out
adc
push
fidivl
pop
mov
jbe
test
enter
lret
or
movsb
lcall
dec
test
xchg
and
call
xor
cmp
lea
mov
xchg
dec
lea
sti
mov
mov
lret
in
jmp
das
fidivrs
bound
clc
or
fdivs
sbbl
inc
js
nop
lahf
movsl
roll
je
divl
xchg
cmpsl
and
push
cmovs
scas
jns
mov
shrb
ret
mov
mov
jbe
xchg
daa
shrl
inc
sub
sbb
jmp
leave
fs
mov
cmp
cmp
lods
push
inc
pop
dec
lahf
cmpsl
push
inc
sti
loop
fisubs
sub
jle
ss
inc
ss
ljmp
fdivrs
fstps
or
mov
inc
stos
jge
stc
out
data16
fwait
aaa
dec
scas
in
add
xchg
jge
out
mov
sbb
subb
push
and
scas
inc
cmp
lcall
inc
insb
jle
mov
jne
sub
lahf
leave
movsl
scas
pusha
sub
or
insb
lcall
rorb
inc
pop
pop
ja
movsb
test
jno
rolb
mov
test
inc
and
sub
xchg
lock
pop
xor
mov
pop
addl
jns
adc
adc
rcll
int
and
jbe
mov
scas
orb
pop
ljmp
andl
pop
in
imul
mov
xor
hlt
sub
push
and
dec
adc
mov
pop
cmp
push
test
pop
notb
xchg
jge
test
pop
lret
mov
gs
sub
xor
sbb
jb
mov
xor
mov
repnz
andb
mov
addr16
push
mov
inc
test
cmp
imul
adc
mov
inc
inc
mov
je
inc
out
jmp
in
and
ret
fmuls
pop
cmp
ljmp
test
je
xor
sub
jl
mov
adc
mov
loopne
pop
ds
push
inc
or
push
in
pop
sub
in
mov
addr16
add
or
sbb
test
mov
or
sti
xor
subb
lcall
jge
adcl
out
xor
pop
jae
into
xlat
pop
jmp
fwait
iret
popf
xor
mov
mov
xchg
shll
jp
inc
repnz
out
cmp
jns
jb
ss
xor
repz
mov
xchg
xor
mov
inc
js
pop
idiv
push
rcrb
lds
jle
adc
std
dec
mov
inc
ds
test
int
xorl
cmp
adc
pop
cmpl
pop
push
sub
xorl
inc
subb
mov
not
sbb
pop
dec
mov
lcall
cwtl
sbb
int
call
je
adc
push
loopne
jecxz
ja
dec
inc
lcall
fdivrl
sbb
xor
adc
pop
mov
inc
cmpsl
test
mov
mov
jg
into
push
aas
dec
push
dec
int3
xor
sahf
mov
mov
cmpsl
xchg
push
stos
orl
push
shll
add
jg
call
jo
fs
xor
sbb
enter
jbe
or
cs
sub
adc
ret
jb
repnz
dec
mov
xchg
lret
fs
xor
xor
aas
push
testb
dec
enter
in
inc
sub
clc
add
jl
andl
sbb
cli
out
pand
mov
insl
add
ret
repz
adc
popa
lcall
xlat
scas
cmc
mov
pop
repz
xor
dec
add
mov
test
cs
stos
mov
and
jmp
fdivrl
in
int3
arpl
dec
ret
shl
outsl
mov
sub
mov
jmp
dec
movsl
cmp
int
mov
jb
push
lock
fdivrp
pushf
mov
sbb
or
sub
fldenv
jle
cltd
push
mov
jmp
inc
pop
or
inc
or
adc
and
call
mov
cmp
lcall
adc
in
aam
in
into
cmp
aas
outsb
test
pop
fld
pop
hlt
jecxz
ja
sub
or
scas
lret
or
rcll
aas
jnp
das
dec
cmpsb
add
lcall
rol
ret
cmp
roll
jbe
es
push
inc
mov
fs
dec
push
cli
jns
adc
mov
and
lock
sbb
adc
shlb
shrb
cmpsb
add
mov
pop
clc
mov
subb
sub
xchg
cmp
loop
xor
add
fbld
dec
das
jle
xchg
mov
cmp
adc
mov
push
in
imul
sbb
sbb
mov
shrb
int3
popa
sub
xchg
in
notb
dec
mov
repz
push
lahf
mov
shl
mov
cmpsb
add
jl
fucom
hlt
or
dec
mov
rorl
jl
xor
test
push
aad
js
push
shr
sti
inc
aad
jge
pop
fsubrs
cmp
out
jb
cli
pop
clc
addr16
ja
cmpb
arpl
ja
cmp
aam
out
inc
data16
or
xor
rcll
and
mov
cmpsb
iret
xor
or
sub
inc
inc
sub
daa
outsl
div
lret
push
imul
fldenv
enter
mov
inc
fcomps
rcrb
xchg
xchg
std
loop
xor
rorb
repz
mov
add
stos
ds
mov
or
cwtl
es
sub
cmpsl
add
mov
xchg
outsl
jle
push
ds
push
and
cwtl
push
jno
pop
sub
rcrb
push
push
shrb
repnz
mov
movsl
add
mov
jno
cmpsl
ret
shll
pop
cmp
push
cld
call
sar
push
sub
xchg
push
out
xchg
mov
int
in
mov
mov
repz
insl
test
enter
adc
inc
xor
test
or
xchg
test
mov
push
fcomip
xchg
dec
pmaddwd
jae
push
add
push
pop
jae
mov
pop
mov
pop
xlat
inc
fs
pop
mov
cmp
jmp
imul
aaa
xor
test
popa
jp
sbb
stc
jmp
sub
dec
lahf
inc
sub
popa
push
ss
jb
dec
sub
jmp
adc
inc
or
pop
ss
mov
sbb
inc
shl
push
adc
les
lods
lods
out
cs
int
sub
pop
stc
xor
mov
xlat
adc
adc
iret
pushw
into
sbb
icebp
gs
in
cmc
mov
test
cmc
jo
arpl
mov
sbb
sbb
dec
dec
pushf
push
rcrb
mov
inc
add
test
inc
pop
rol
icebp
or
and
jne
mov
pop
mov
scas
js
add
mov
pusha
dec
int3
adc
xchg
scas
xchg
xor
sub
fptan
enter
scas
les
pop
mov
jl
out
repz
push
inc
pxor
jnp
cmp
jbe
pop
cltd
xor
cmp
aam
aam
xchg
mov
inc
scas
ja
add
fldenv
cli
insb
jle
dec
push
and
pop
or
int3
cmp
jne
sub
ljmp
call
pusha
lea
fwait
sti
test
je
in
mov
cmp
pop
and
jae
mov
xchg
jl
call
pop
jno
add
outsl
mov
sbb
inc
call
jmp
enter
lcall
and
out
imul
sti
repnz
into
mov
inc
out
jns
xor
iret
xchg
hlt
dec
mov
mov
cmp
push
rcl
mov
cwtl
xor
mov
mov
cmp
iretw
sbb
add
mov
xchg
out
rcll
shrl
cli
in
shll
push
int3
pop
or
or
jo
cwtl
add
xchg
int
jbe
adc
jo
jne
sbb
cwtl
in
sub
insb
xchg
adc
jg
mov
loop
fildl
arpl
push
outsb
add
stos
and
xchg
inc
fs
mov
ret
out
out
and
cwtl
stos
mov
mov
loopne
sbb
test
mov
icebp
subb
fwait
xchg
js
sub
mov
iret
out
enter
xorps
jns
vdivss
pop
repz
sub
adc
fs
xor
or
mov
fiadds
push
rclb
push
cli
loopne
stos
xor
cwtl
inc
cmp
stc
popa
movsl
add
icebp
or
test
jg
or
rolb
inc
sbb
pop
icebp
rorb
arpl
mov
mov
xor
mov
sahf
add
js
xor
sbb
notb
adc
imul
pop
jno
push
mul
shll
les
insb
into
adc
xor
rcrl
push
sbb
in
mov
shlb
jge
inc
fidivrl
fisubs
ret
mov
and
insl
xchg
stos
inc
fsubr
hlt
and
and
into
jns
testl
xor
jo
add
cmp
push
push
fstpt
pop
scas
jg
add
add
jns
xchg
or
mov
fsubrs
movsl
movsb
cmpsl
decb
loope
lods
or
cmp
daa
pop
insl
push
int
clc
sbbb
jecxz
jnp
or
mov
daa
arpl
adcb
mov
repnz
push
add
test
push
mov
test
sbb
out
or
jbe
jne
sub
cs
mov
std
xchg
mov
cltd
sbb
mov
loope
stc
adc
mov
jbe
push
xor
dec
iret
push
sub
ds
push
sub
dec
scas
js
int
add
xchg
fbld
ffreep
fstpt
jbe
jl
cltd
push
jle
mov
stos
push
mov
test
xchg
mov
mov
pop
cltd
in
cmp
cmc
push
mov
pop
leave
aad
jmp
mov
mov
lcall
cwtl
outsb
jnp
mov
dec
std
xchg
nop
mov
lea
cmp
mov
jmp
or
daa
xchg
outsb
mov
jnp
mov
ret
repz
outsb
add
repnz
push
adc
inc
hlt
adc
popf
aad
rolb
mov
xchg
push
sarl
in
mov
aad
xor
sub
dec
ficoml
dec
fcomi
inc
std
push
leave
rcl
jnp
shrb
cmp
sub
rorb
mov
data16
xchg
movsb
sub
xlat
sbb
lcall
leave
arpl
jae
or
es
loope
outsl
test
les
and
jecxz
outsl
clc
mov
push
sti
rorl
sub
je
sbb
loope
dec
loopne
add
and
push
push
pop
loopne
gs
fwait
test
stc
nop
jb
add
jp
daa
jle
fwait
daa
mov
xchg
cmp
cmp
fmuls
outsl
inc
jecxz
sbb
jne
mov
xlat
lcall
xorl
nop
sub
bound
fildll
push
inc
dec
inc
ret
pop
ret
jo
stc
adcb
pop
loope
out
jne
in
adc
push
mov
dec
xor
imul
mov
fsts
in
jns
bound
je
jns
jmp
out
pushf
xor
fs
movsb
jl
pop
sahf
add
ja
mov
shl
mov
scas
lods
push
les
ja
pop
ja
dec
insb
loope
inc
ret
dec
out
stc
dec
test
pusha
lods
in
test
adc
adc
xchg
out
jne
int
scas
jb
push
notl
jmp
icebp
sarb
sbb
inc
pop
popa
mov
xchg
pop
sub
jb
dec
cwtl
inc
xchg
push
inc
clc
in
pop
xor
push
cmp
xchg
push
addr16
movsl
xchg
mov
imulb
sti
xchg
dec
cmc
mov
sbb
sbb
jmp
add
or
dec
repz
imulb
jle
aaa
lea
shlb
inc
dec
sbb
out
sbb
dec
dec
fwait
icebp
cli
mov
hlt
or
jae
ret
out
cmp
push
out
mov
aaa
pop
jae
mov
call
or
cmp
sbb
push
lods
out
xchg
jge
mov
xchg
mov
lret
call
or
inc
cmp
xchg
push
rcrl
cmc
mov
fucomip
imul
or
push
jne
js
icebp
or
out
cli
addr16
jecxz
jl
jmp
add
pop
or
inc
xor
jmp
mov
cmp
mov
movsl
dec
sbb
dec
mov
addr16
or
mov
push
xchg
pop
scas
push
daa
jnp
mov
int
sbb
lret
or
es
shrb
lods
lret
pop
add
inc
pop
out
xor
and
push
adc
pushf
xor
mov
mov
jnp
ja
fadd
enter
subl
pushf
test
and
cmpsb
cmp
push
xchg
cmp
rcll
aad
inc
or
imul
daa
inc
push
push
mov
movsb
mov
test
call
xor
je
icebp
loope
cmc
inc
inc
sbb
rcrb
cld
push
pop
add
cmpsl
add
testl
mov
pop
jbe
icebp
lods
mov
cmp
dec
mov
adc
cld
xchg
xchg
jge
nop
cmp
push
mov
add
pop
mov
inc
push
mov
mov
push
mov
add
sahf
imul
dec
dec
repnz
mov
outsl
lret
lret
cwtl
dec
int
sarb
fisttps
fnstenv
outsl
rclb
jp
push
arpl
add
orb
out
leave
popa
or
cwtl
sub
push
movsb
out
in
sub
cmp
or
push
and
cmp
push
sbb
sti
test
xor
or
fsubp
jle
push
lock
out
insl
push
dec
lods
dec
in
sbb
or
jbe
pop
xchg
rcll
mov
fisubrs
or
sti
xchg
add
xor
cmc
sbb
aad
mov
arpl
lret
or
popf
adc
or
mov
sbb
push
bndstx
or
pop
mov
shlb
add
mov
outsb
dec
sbb
pop
or
fsubrl
add
sub
push
mov
sbb
adc
push
lock
xchg
fiaddl
int
push
insl
lret
cmp
out
xor
iret
or
xorl
aad
sbb
lahf
sbb
fucomip
out
es
popf
aam
int3
add
push
fiaddl
es
lcall
ja
fcmovu
push
daa
xchg
inc
dec
sub
cmp
fisubl
xor
dec
nop
push
pop
sub
enter
out
push
or
jne
cmp
push
dec
mov
lock
pop
xor
in
sbb
or
dec
ja
jb
loopne
jno
bound
stos
out
lock
out
sub
jb
call
lret
pop
push
inc
ret
push
lods
hlt
data16
pop
ss
mull
inc
andb
jg
aas
loopne
add
adc
es
lcall
adc
cli
push
rolb
xchg
dec
cmc
loopne
rcr
sub
pop
pop
mov
lret
or
loope
aad
xchg
test
icebp
jle
add
inc
mov
in
mov
aad
mov
aaa
cltd
imul
js
cwtl
mov
pushf
mov
xchg
dec
mov
dec
mov
push
mov
mov
and
pop
jno
xor
mov
stos
sbb
fldenv
call
sbb
jb
stos
cmp
jl
sub
fwait
add
shl
cmp
scas
stos
fidivl
pop
dec
jbe
sti
sahf
add
ror
test
add
jge
ret
rorl
int3
pop
mov
xchg
dec
repz
mov
jg
inc
cmpsl
out
out
inc
or
stc
into
mov
rclb
inc
ret
fs
lret
sbb
shl
push
xlat
out
jg
push
aas
into
test
lock
lods
daa
pushf
mov
insl
call
xchg
cmp
mov
mov
daa
push
and
testl
pusha
aas
dec
dec
mov
mov
add
or
mov
loop
jp
adcl
push
jns
bound
dec
into
mov
ret
sub
nop
aaa
cmpsb
push
out
repz
jno
xor
lea
lea
mov
popl
enter
lds
std
iret
sbb
jo
mov
aam
in
mov
inc
xlat
sub
mov
shrb
mov
lock
pcmpgtw
push
push
jbe
and
pop
mov
mov
mov
clc
lods
arpl
fcomp
jno
sbb
ds
mov
cmc
mov
int3
in
mov
and
mov
fimuls
cmpsl
sub
xchg
sbb
pop
dec
mov
out
clc
jmp
ja
dec
sub
add
jecxz
sub
ja
jnp
mov
ds
pop
inc
repz
add
repz
incl
pop
cs
inc
mov
je
and
cmp
test
cmp
scas
jmp
add
fldt
cli
pop
xchg
jno
jbe
in
not
popa
in
add
in
mov
rclb
jno
ja
and
movsb
xlat
cmp
mov
inc
inc
cmp
test
icebp
xchg
sub
pop
testl
push
stc
dec
loope
cmp
sahf
enter
mov
add
dec
push
sub
fucomip
scas
test
xchg
sub
shrl
leave
xchg
adc
outsl
bnd
and
imul
mov
scas
in
adc
mov
ss
mov
fidivs
fwait
int3
jg
sarb
movsl
cld
cltd
mov
ljmp
mov
call
cld
add
pop
data16
data16
in
test
dec
xor
mov
xchg
movsb
push
sbb
xor
push
sub
hlt
mov
aam
mov
xchg
repz
lret
dec
scas
subb
mov
push
sbb
jmp
cmp
les
mov
sub
mov
jl
imul
pop
push
leave
pop
inc
clc
mov
adc
inc
lret
jne
pop
xor
sub
xorl
and
into
cmp
aaa
and
sbbb
mov
adc
xor
sub
std
jns
std
stos
push
adc
jbe
inc
fcmovnbe
shll
imul
cltd
pop
bnd
hlt
imul
push
jb,pt
or
adc
cmp
dec
sti
xchg
xchg
inc
push
lcallw
xor
out
xor
and
fldt
xor
mov
ret
setle
jge
mov
xor
movsl
pop
jbe
sub
cmp
ficoml
and
fidivs
inc
out
icebp
jns
adc
clc
in
mov
and
ret
test
mov
in
mov
sub
cs
std
stos
sub
sub
jo
jmp
sbbb
es
push
mov
sbb
add
outsb
inc
cltd
push
enter
mov
shlb
inc
jne
jmp
fidivrs
mov
jl
insb
movsl
inc
adc
fsts
nop
imul
or
and
sub
pop
adc
ja
movsl
insb
pop
dec
fisttps
xchg
aaa
push
popa
pusha
ret
popa
in
adc
aaa
jb
adc
andl
jg
jmp
xchg
mov
in
out
test
cmpsl
or
sbb
sub
pop
lahf
call
inc
imul
adc
or
mov
orl
pusha
nop
ss
call
shlb
gs
or
js
jae
cmp
out
test
xchg
jae
or
hlt
mov
test
adc
into
faddl
loope
pop
lcall
pop
cs
mov
sub
popf
lods
jae
adc
aas
adc
shrb
mov
aaa
mov
xor
sbb
mov
je
movsl
dec
pop
xlat
pop
in
sub
sbb
and
adc
adc
mov
dec
and
mov
dec
lea
mov
scas
shrl
fcmovb
lock
jp
jg
loop
lcall
push
mov
jbe
adc
out
lcall
adc
dec
addr16
das
xchg
hlt
mov
cltd
cmp
cli
cltd
mov
sbb
sbb
aad
arpl
xchg
fstpl
test
push
cmpsb
push
les
xchg
in
lahf
jl
lods
jns
pop
stos
into
mov
mov
pop
nop
cmp
mov
ret
add
fmul
insb
dec
rcrb
add
lahf
fsubrp
jbe
xor
aam
fcmovbe
and
cmp
in
int3
jl
sbb
and
ja
sbb
sub
push
xor
jae
and
pop
lcall
test
loope
sbb
xor
or
sti
mov
jge
dec
lcall
lahf
dec
sbbl
add
adc
pop
lods
inc
sbb
call
jno
movsb
js
xchg
test
lret
notl
xor
add
testl
xor
sub
pop
inc
jb
push
jbe
lahf
int3
inc
decb
pop
and
adcb
and
pop
test
mov
inc
mov
ror
out
das
mov
inc
lahf
ss
or
sub
cmp
jo
xchg
pop
cmp
das
add
int
int
adc
lret
subb
stos
mov
mov
push
movsl
sbb
aad
mov
mov
repz
adc
cwtl
ljmp
into
lret
lcall
xor
jns
or
mov
xor
dec
call
adc
enter
mov
dec
leave
add
dec
push
cwtl
stos
les
cmpsl
mov
call
in
js
push
jmp
je
sbb
and
mov
push
insl
les
cs
mov
and
testb
and
flds
fnstenv
dec
sub
sub
or
dec
int
insl
add
pop
mov
jns
or
mov
pop
and
nop
stos
dec
inc
jbe
gs
inc
pop
mov
dec
insl
cltd
add
sub
or
cmp
ficoms
stos
lods
jmp
das
lcall
add
sbb
in
addr16
nop
jg
into
divl
mov
aad
mov
cmp
bound
sbbl
lods
popa
jmp
jmp
cmpsb
clc
rorl
cmp
pusha
aas
pop
ljmp
imul
loope
popf
fimull
popf
clc
push
inc
pop
imul
ret
inc
mov
jne
cltd
hlt
jnp
mov
mov
push
xchg
cmpb
andb
loopne
cmpsl
int3
xchg
popa
xchg
xor
arpl
mov
ffreep
adc
push
mov
xchg
jmp
push
test
insb
xchg
test
cmc
in
sub
incb
jg
dec
std
insl
roll
ja
mov
test
fcoml
dec
fsubrp
push
fucomp
xor
fsubrl
imul
adc
mov
cwtl
pop
inc
pop
sbb
pop
scas
data16
push
enter
jne
xchg
dec
xchg
cmp
sbb
mov
cld
mov
push
dec
loop
movsl
cltd
cmp
mov
inc
lret
pusha
stos
stc
and
fwait
xor
mov
jl
rorb
jecxz
pop
lds
xor
jnp
mov
idivb
xor
and
jmp
mov
mov
mov
sarl
repnz
add
int3
mov
rcrl
pop
cmc
mov
and
arpl
ret
jae
mov
aaa
into
lret
xchg
movsb
mov
cli
sub
pushf
jp
xchg
clc
push
lock
in
ret
popa
into
gs
inc
aad
adc
xorl
add
pop
cmc
pop
or
and
push
inc
mov
int
push
addr16
jle
mov
push
call
mov
popa
xchg
adc
cld
fadd
sub
mov
push
out
sysenter
test
sub
test
fs
xor
jbe
call
push
pop
stos
into
sub
push
adc
mov
mov
mov
scas
scas
xchg
add
call
mov
jnp
scas
inc
fwait
pushf
pushf
pop
mov
int
ljmp
or
and
mov
jnp
test
xchg
pop
jl
icebp
aam
rcll
xor
or
cs
cltd
test
inc
jo
ret
adc
inc
leave
xor
mov
sbb
sbb
fs
insl
lret
sub
mov
je
fst
and
jno
mov
and
int3
out
lret
daa
sub
lea
pop
daa
or
fldl
mov
les
or
or
shrb
or
lds
sbb
loope
lock
mov
mov
jbe
cmpsb
jmp
add
addr16
icebp
aam
int3
sbb
push
pop
or
push
jl
push
sub
sahf
sbb
loope
push
lret
xchg
xor
sahf
jne
mov
fdivs
cli
aas
iret
es
lahf
in
push
and
sub
mov
push
ja
es
scas
rol
add
mov
xchg
loop
in
push
fnstcw
or
jmp
add
push
out
out
aaa
sbb
popf
popa
lea
lret
xchg
imul
mov
xchg
and
pop
and
xchg
sahf
mov
push
out
lods
inc
and
stc
sbb
adc
ss
out
sbb
mov
es
enter
and
lock
sbb
icebp
jae
mov
mov
lock
andl
inc
lret
xor
int
push
sub
inc
popa
in
icebp
mov
imul
push
or
cmp
mov
ret
sbb
add
or
push
dec
push
xchg
push
sarl
fistpl
das
jno
lock
cmp
mov
mov
stc
repz
jne
sub
cld
xchg
out
addr16
jbe
loopne
into
cmp
shrb
inc
pop
lock
add
xchg
xor
lret
xor
pop
mov
cmp
je
dec
nop
hlt
xchg
sub
nop
repz
adc
cmc
fnstenv
insb
sbb
lods
leave
mov
jge
jl
loopne
add
sarb
mov
lret
sub
push
dec
inc
lock
out
int
cmovne
call
sti
shrb
xchg
lahf
sub
inc
out
into
insl
add
sub
push
hlt
mov
test
ljmp
pop
inc
mov
xlat
mov
cmpsb
jge
es
sbbb
add
andl
sbb
xor
mov
aaa
mov
leave
dec
mov
fldt
and
daa
mov
mov
push
ret
dec
sub
cmp
mov
jo
or
or
push
add
xor
push
stc
fadds
jno
sbb
into
rcr
fmull
adc
repz
mov
in
pop
stos
cmpsb
ds
lods
ds
push
fsubrl
movsl
pop
mov
or
pop
sbb
jmp
cmp
shr
jl
pop
das
aam
and
in
xor
lcall
subb
sbb
pop
sbb
fbstp
inc
xchg
iret
movsl
jge
mov
sub
fmull
push
push
mov
pop
jne
add
sub
xchg
iret
bound
outsl
incl
xor
lahf
inc
push
shl
mov
aam
push
iret
push
outsb
pop
pushf
out
ret
scas
cli
inc
inc
out
ss
fwait
not
cmpsl
cmc
mov
andl
sahf
mov
or
mov
sub
jo
mov
lods
xchg
das
out
jnp
shll
mov
inc
fs
ja
fs
insl
add
sub
mov
lds
ret
fldl
xor
jno
fwait
mov
ret
sbb
push
nopl
cmp
pop
jl
push
arpl
bound
cmp
call
stc
pop
adc
mov
push
dec
movsl
fisubrl
fwait
ja
mov
mov
or
jecxz
sub
push
dec
out
jnp
add
add
mov
xor
hlt
push
in
cmp
sbb
and
mov
in
in
push
dec
cmp
lea
mov
rcrl
mov
jnp
or
add
jb
jne
call
or
testb
leave
jno
js,pn
add
subb
int3
mov
or
sbb
dec
popf
sar
inc
popa
push
popf
fwait
cmp
cmp
xor
arpl
mov
cmpl
ss
jl
xor
pusha
mov
adc
outsl
jge
mov
mov
fwait
out
imul
pop
icebp
shlb
xchg
fidivs
and
xor
mov
mov
push
idivb
or
rcr
mov
mov
insb
adc
loop
shl
pop
call
fcoml
add
mov
mov
push
xor
cwtl
cmp
mov
adc
cltd
test
mov
push
push
repz
add
cmp
sahf
push
cmp
aaa
aaa
pop
cs
dec
in
sbb
cmpl
or
mov
or
mov
sbb
xor
sbb
and
into
dec
sti
loop
test
in
test
or
shll
pop
fs
xor
adc
xlat
and
inc
popa
idivb
sub
or
push
notl
punpckhbw
lods
cs
and
or
mov
push
xchg
das
ljmp
push
imul
sbb
lds
leave
sbb
pop
sbb
les
jbe
and
cmp
jmp
xor
and
pop
cmp
fs
adc
mov
decl
repnz
subl
mov
int
es
rcll
dec
add
cld
dec
loopne
xor
gs
or
jge
pop
cmc
mov
sub
rcl
imul
addr16
push
mov
add
jnp
mov
outsb
int3
dec
push
jecxz
into
xor
add
loopne
cwtl
popa
xchg
inc
stos
addr16
fldt
jle
mov
test
push
adc
les
dec
push
mov
mov
fnstcw
pop
test
pop
in
sbb
pop
call
addr16
gs
xchg
loopne
mov
mov
dec
xchg
add
add
test
add
sbbl
stc
add
adc
das
inc
push
ja
cs
arpl
push
int3
incb
fidivrs
adc
push
xor
mov
xchg
push
jmp
or
adc
push
in
jmp
insb
pop
out
popf
mov
out
push
ljmp
ljmp
adcl
ss
mov
jb
int
mov
mov
sti
sti
inc
sbb
and
mov
mov
add
sub
xor
push
arpl
xchg
cmp
sbb
je
dec
jns
je
mov
sub
shrl
dec
fidivl
and
push
mov
jno
jmp
pop
icebp
mov
push
js
pushf
pop
stos
inc
adc
lret
ss
jmp
js
jno
sub
jecxz
test
or
ljmp
push
xchg
out
sti
push
dec
popa
in
xchg
inc
scas
repz
adc
mov
js
call
ret
ds
test
xor
jnp
adc
lret
and
lcall
cmp
pusha
xchg
mov
jbe
in
and
xchg
loope
insb
cli
sbb
aam
movl
xchg
xor
mov
dec
out
dec
xchg
sub
negl
outsb
cmp
mov
negl
fcoml
enter
sub
mov
pop
loop
aam
or
inc
pop
popa
insb
sbb
adc
cwtl
stos
cmp
mov
xchg
push
imul
sub
xchg
int3
pop
push
jbe
mov
icebp
add
popf
outsb
add
jbe
adc
pushf
inc
sti
cmp
sub
mov
xchg
mov
loopne
jecxz
in
lahf
jg
lret
pop
hlt
mov
add
pop
jnp
insl
lods
sbb
loopne
and
and
imul
jae
stos
lods
or
sub
push
dec
das
ret
xor
dec
fistps
mov
xor
lock
ljmp
jae
aas
movsl
out
test
jge
mov
inc
das
mov
cmp
push
mov
fcompl
repz
les
xchg
adc
stos
fldt
mov
aad
xor
scas
xor
mov
mov
es
cwtl
std
or
xlat
int3
arpl
mov
jb
pop
jnp
xchg
cmp
nop
mov
jp
das
stc
push
mov
fstl
mov
out
test
xor
ret
cmp
loope
jmp
int3
ds
std
mov
ret
pop
insl
insl
push
addl
sub
sub
xchg
out
in
popa
lcall
das
sahf
xor
ljmp
lret
adc
add
pop
sub
xor
pusha
out
jns
add
cmp
pop
cld
push
push
mov
dec
jne
jle
sbbb
lcall
cwtl
lahf
pop
adc
and
lods
mov
xchg
sub
dec
xchg
pop
cli
jne
popa
xchg
or
dec
scas
add
mov
les
cmp
sub
or
dec
xchg
adc
lret
test
loopne
or
arpl
inc
pop
or
in
sbbl
mov
inc
cs
xchg
push
xor
push
adc
mov
dec
add
or
fdivl
push
outsb
add
pop
adc
popf
dec
imul
scas
adc
and
mov
jle
int
jae
xchg
xchg
movsl
dec
pop
adc
dec
mov
notb
cwtl
push
mov
stc
cmp
fldcw
push
call
mov
int
lcall
xchg
xor
in
mov
rorl
int
dec
push
pop
pop
adc
dec
cwtl
cmp
xlat
pop
out
dec
cwtl
xchg
push
mov
je
pop
inc
fistps
fsubr
mov
iret
fsubrp
sysexit
aas
gs
mov
cmp
mov
inc
out
frstor
cwtl
push
movb
sbb
mov
jg
lods
mov
jb
jp
xlat
mov
les
push
mov
cmp
push
mov
sbbb
in
stos
test
test
jb
push
movsb
cwtl
pusha
or
add
xor
adc
lret
hlt
pop
loopne
sbb
gs
mov
arpl
jbe
call
ljmp
pop
sbb
nop
std
push
and
xlat
loopne
inc
sbb
push
pop
jl
fnsave
imul
mov
xchg
mov
lahf
add
xchg
jne
leave
xchg
dec
sbbl
sahf
push
sbb
mov
out
insl
jg
lahf
sbb
test
sbb
mov
sbb
inc
lcall
add
xor
cmpsb
add
jmp
mov
aas
mov
incb
jle
inc
xor
mov
scas
insl
adc
and
sar
mov
adc
in
ret
outsb
roll
cli
pushf
out
mov
xchg
push
mov
inc
idiv
or
sub
imul
fbstp
roll
fsubl
push
cli
test
inc
push
cmp
adc
or
push
mov
decb
fcompl
out
sbb
jle
mov
sub
fwait
push
stos
punpckhwd
jne
adc
sub
pop
and
mov
and
cmp
scas
push
es
cmp
leavew
pusha
mov
dec
out
ja
sub
ret
push
dec
xchg
js
adc
jae
popa
and
jno
int
adc
dec
out
imul
pop
xlat
xorl
xchg
ss
jb
cmp
adc
xchg
xor
enter
xlat
scas
xchg
adc
clc
jmp
cmp
xchg
sub
mov
xchg
dec
scas
inc
jg
stc
xlat
in
mov
fs
pop
repz
inc
testb
je
mov
je
add
rorl
fnstcw
xchg
pushf
lods
cmp
dec
or
dec
stc
dec
dec
cs
xchg
pop
repnz
and
pop
push
icebp
sarl
dec
mul
xchg
xor
sub
es
and
mov
loop
mov
pop
sbb
jb
cmp
loop
stc
mov
mov
test
mov
stc
mov
fnstenv
or
mov
push
add
out
and
cmp
insl
mov
sbb
cltd
mov
push
or
push
mov
clc
push
les
outsl
testl
mov
push
test
xchg
inc
cmp
mov
jmp
mov
jecxz
sub
sub
into
outsl
out
das
adcb
xchg
nop
sub
loope
mull
pop
fdivr
in
es
xchg
push
cmc
jnp
test
int
mov
sub
jae
movsl
dec
sahf
push
lock
rcl
push
sbb
into
cmpsb
cmpsl
clc
rolb
test
sub
or
add
jecxz
pushf
mov
inc
lahf
pusha
insb
enter
or
jle
pop
lret
fcomps
mov
push
icebp
xchg
sub
lret
pop
and
inc
jno
call
aas
push
inc
inc
mov
ja
sbbl
shr
add
fildl
sbb
shlb
xchg
cs
mov
mov
mov
loope
fisubs
cltd
xor
sti
ficomps
rolb
test
out
imul
mov
and
lods
mov
movl
mov
fs
mov
dec
test
mov
cmpb
stc
or
fistpl
mov
or
pusha
jno
xchg
sub
ljmp
scas
inc
fisubl
int
movsl
add
es
lea
stc
mov
es
hlt
push
addr16
int
lds
out
and
shrl
cwtl
adc
sbb
scas
lods
push
or
mov
jnp
jp
repnz
filds
fwait
cwtl
xchg
sbb
and
push
sub
lret
ds
mov
lea
push
arpl
aas
dec
cmpsb
cmp
push
sub
push
out
adc
pop
out
aas
jne
sarl
out
add
in
mov
es
cwtl
movsb
dec
or
leave
cltd
test
push
mov
aaa
ja
add
and
clc
cmp
outsb
sbb
sbb
dec
pop
inc
insb
dec
dec
jbe
jl
pop
jp
in
mov
in
push
fistpl
dec
pop
addr16
xchg
scas
mov
fisttpl
lret
cmp
les
lock
jo
fisttpl
jns
mov
fsubrs
mov
repnz
sub
pop
fists
in
xlat
pop
xchg
nop
test
pusha
inc
cmp
xor
addr16
and
dec
fdivs
inc
dec
inc
lock
push
jnp
add
cli
jecxz
jb
mov
dec
xchg
adc
lret
push
or
out
sbb
sub
add
outsl
lock
sub
outsl
push
pop
pop
loopne
testb
cmp
dec
push
lods
or
test
ljmp
repnz
push
adc
xor
jne
sub
sub
xor
cmp
test
les
insl
jl
scas
lods
dec
sub
es
mov
in
lods
sub
push
ret
push
hlt
jb
mov
push
sub
sub
pop
adc
add
das
shll
adc
dec
sarl
jo
xlat
loopne
or
in
mov
fldenv
and
daa
repnz
lods
xchg
scas
outsb
fbld
inc
and
sub
jne
push
dec
push
fidivrs
adc
mov
push
notb
ss
icebp
cwtl
xor
xchg
ret
jno
jecxz
ss
mov
mov
mov
loopne
pop
popw
sti
loop
fwait
pop
outsb
int
sub
addr16
ret
add
push
and
sub
gs
dec
lds
cmp
add
addr16
jnp
mov
and
aaa
les
imul
push
mov
insb
push
lea
mov
ljmp
repz
pop
fadd
inc
insl
pusha
daa
cwtl
sub
add
xor
mov
jno
cmp
mov
jmp
and
mov
outsl
and
sbb
fildl
mov
xor
jp
jl
push
mov
fwait
or
data16
lret
xchg
mov
pop
idivl
add
mov
imul
cwtl
and
push
enter
aad
popa
add
jg
inc
and
jns
inc
fldenv
inc
push
popf
sti
dec
in
xchg
adcl
sbb
add
leave
movsl
pop
sub
negb
adc
insl
vmread
sahf
jecxz
mov
jae
inc
sub
cli
xchg
pop
cmpl
dec
cmpsb
cmpb
aad
std
call
dec
xlat
xchg
popl
divb
xor
push
int
push
sbb
mov
jp
jmp
push
fdivr
adc
lret
mov
jle,pn
dec
mov
aad
clc
pop
inc
lods
push
lret
mov
roll
jl
jbe
adc
sub
das
xchg
cld
lcall
stc
push
fdivs
shlb
pop
xchg
pop
out
or
stos
mov
popa
mov
dec
and
or
push
cmpb
mov
les
int3
sub
xchg
jne
cmpsl
in
xchg
dec
dec
lcall
push
in
daa
mov
inc
xlat
loop
ds
adc
pop
jp
mov
repz
mov
or
cmc
xchg
sbb
insb
rcl
cmp
sub
fisubrl
push
and
jle
cs
iret
gs
std
mov
ret
sub
mov
orl
bound
xchg
scas
inc
ret
or
adc
cmp
xor
nop
cs
and
ds
outsl
repz
cmp
mov
xchg
into
sbb
cltd
dec
xchg
xchg
lock
ret
fbld
aaa
int
add
pop
sbb
adc
jge
xchg
lock
shrb
jge
int
insb
mov
repz
jecxz
repz
jbe
out
jnp
jge
ds
stc
push
dec
fdivl
fcmovb
insl
xchg
int3
icebp
push
jns
hlt
xchg
sbb
lret
mov
inc
std
loop
stc
adc
fidivs
sar
adc
cld
jb
outsl
jb
cltd
mov
pop
neg
outsb
sahf
sub
daa
and
and
stos
outsl
fldl
iret
sub
mov
jb
inc
es
dec
pop
or
call
or
das
cltd
inc
mov
pop
arpl
lahf
stos
dec
lods
mov
mov
ja
stos
test
mov
pop
test
std
or
cmpsb
inc
mov
fmul
jno
repnz
pusha
jo
lret
push
dec
sbb
dec
dec
imul
clc
sub
lods
lret
push
dec
bound
in
jnp
jno
mov
adc
insb
into
shll
ljmp
jmp
mov
ja
add
repnz
popf
pop
xor
xchg
repnz
jns
cld
mov
ja
test
mov
sbb
gs
shlb
in
test
jbe
leave
mov
sbb
cmc
shrb
sbb
or
jnp
aad
ret
enter
adcl
cmp
ret
not
xor
fidivrl
pop
popa
clc
jo
cmc
sarb
or
cmpsl
out
mov
mov
inc
imul
xchg
push
adc
pop
jp
jne
cmp
movsl
test
jnp
jecxz
xchg
adc
and
sbb
cmp
cmc
adc
xchg
test
addb
shll
or
mov
out
pop
outsl
mov
inc
xor
inc
aaa
push
testl
xor
cmp
ret
adc
cmp
call
cmp
and
dec
sub
decb
lcall
push
jge
and
repnz
cwtl
sti
cmp
inc
dec
faddp
pop
adc
in
xor
js
jmp
into
sbb
int3
xchg
das
lock
std
int
sbb
stos
jae
icebp
xchg
and
scas
int3
push
lahf
sub
pop
mov
or
cmp
mov
aas
xor
mov
jb
std
and
mov
xchg
sub
sbb
add
xchg
add
xchg
lock
lds
push
enter
jle
xchg
inc
out
clc
cmpsl
lods
push
xor
rclb
xlat
outsb
jbe
in
repz
dec
aad
mov
gs
push
call
idivl
pop
addb
nop
lods
test
filds
xlat
rolb
bound
enter
jecxz
jge
addr16
pop
bound
and
inc
stc
test
scas
inc
dec
subb
lcall
sbb
mov
mov
das
out
inc
jmp
sbb
jo
outsl
sti
iret
sub
sbb
insb
xchg
mov
call
xchg
inc
divb
fimull
lock
cltd
and
add
mov
rolb
pop
mov
pop
clc
pop
sbb
outsb
lds
andl
or
push
test
xchg
sbb
in
sbb
je
xchg
aas
pop
rolb
inc
xlat
push
jae
sbb
scas
inc
enter
imul
cmp
and
lds
push
mov
out
and
in
xor
push
push
and
jae
mov
into
mov
or
in
or
je
push
fnstsw
mov
mov
lcall
loopne
test
sub
imul
mov
xlat
popa
clc
or
mov
repnz
fs
inc
outsl
pushf
xor
out
mov
ljmp
jno
iret
je
nop
in
adc
mov
daa
fdivrs
aam
cld
jecxz
jns
push
sar
inc
popf
xchg
push
xor
xor
mull
in
les
decl
int3
mov
stos
inc
xchg
sbb
lods
mov
repz
mov
cmp
sub
xor
mov
push
mov
pop
or
aad
dec
sub
adc
loopne
in
jns
cwtl
repnz
lcall
clc
lods
pusha
imul
jno
add
jle
dec
dec
push
ss
or
jg
ljmp
xor
dec
jno
andl
ret
xchg
mov
pop
inc
gs
sub
dec
mov
in
jle
ss
sub
stos
roll
shrl
jbe
fcoml
ficoml
addb
ror
add
int3
shl
jg
movl
in
pop
jno
xchg
sub
cld
sbb
out
inc
mov
jl
xchg
pop
fnclex
adcl
and
xor
xchg
das
stos
add
jns
mov
cltd
movsl
add
jmp
jg
inc
inc
push
cltd
mov
xchg
adc
mov
ret
arpl
push
mov
outsl
data16
mov
call
fists
test
loopne
loopne
shll
mov
dec
mov
pop
jo
inc
xor
push
orb
shrl
scas
cltd
pop
loope
inc
pop
push
jae
clc
sub
lret
xor
xlat
or
outsl
daa
inc
scas
into
push
in
or
jnp
nop
jae
ret
pop
inc
dec
fsubr
hlt
addr16
pusha
icebp
xor
and
jecxz
mov
addl
std
leave
add
and
push
and
je
xor
sbb
or
cltd
or
dec
aas
test
loopne
push
xlat
xchg
lods
push
jg
mov
in
dec
xchg
xor
mov
sbb
clc
push
out
std
cmp
sahf
dec
push
fistpll
pop
loope
sbb
sbb
push
dec
mov
xchg
or
shrl
dec
popa
push
out
in
jp
push
cmp
push
xorb
cmp
cltd
pusha
mov
clc
out
add
bound
xchg
cmc
add
inc
mov
cmpl
mov
sbb
xchg
dec
sbb
hlt
incl
adc
xor
push
les
pop
mov
jmp
ret
push
stc
add
test
lret
jnp
testb
aam
and
pop
lock
xchg
cmc
sbb
mov
xchg
mov
and
push
out
inc
adc
out
xor
or
jb
push
sub
pop
sti
mov
clc
mov
in
jp
dec
loope
fldenv
gs
and
jnp
sbbb
push
cmc
enter
mov
sahf
test
inc
loopne
mov
out
aad
in
or
jne
sub
mov
fbld
push
jmp
jecxz
jmp
sbb
xchg
sbb
js
loop
jnp
lods
nop
repnz
iret
mov
or
stos
cmp
inc
xor
mov
jge
fstpl
daa
add
mov
mov
les
jae
fadd
popa
test
stos
push
call
enter
sarl
push
ret
int
xlat
or
xchg
pop
insb
leave
cmp
cwtl
sub
xorb
xchg
lea
mov
cmp
stos
in
in
mov
lret
sbb
inc
dec
pop
ret
in
xlat
sbb
sub
mov
cmp
cmpsl
out
enter
sbb
lret
movsb
dec
movsl
sub
hlt
rorb
dec
das
shlb
add
movsb
mov
push
cmp
fisttpll
jmp
bound
test
jnp
mov
lods
insl
repz
xor
cmp
or
lret
dec
and
xchg
fwait
jl
outsl
jnp
sbb
jge
mov
aaa
xchg
xor
pop
inc
pop
arpl
pop
jecxz
mov
xlat
ljmp
lret
imul
cmp
mov
rclb
fstp
movsl
fidivs
dec
mov
mov
adc
repz
into
iret
popf
fwait
or
mov
cmp
imul
or
mov
lea
jno
xor
sbb
test
lahf
add
dec
out
out
mov
mov
adc
cli
xchg
push
cmpsb
gs
fbstp
fiadds
sahf
add
mov
mov
lock
outsb
inc
xchg
and
xor
xchg
xchg
sub
fbld
mov
cmp
stc
xchg
and
cwtl
sbb
loop
fildl
push
sub
cmp
inc
dec
xchg
pop
sub
mov
dec
sbb
jns
pusha
cmp
sbb
nop
clc
lcall
push
subl
mov
test
adc
mov
roll
stos
mov
imul
lods
clc
xchg
loope
lods
stos
mov
loop
cmpsl
and
and
enter
fwait
adc
fistpl
add
sub
pop
shll
xor
mov
push
xor
dec
mov
dec
lret
sub
adc
addb
addb
pop
mov
sub
sbb
test
mov
in
mov
lods
inc
cmpl
ljmp
sub
test
xchg
pop
jnp
insb
xchg
sub
sbb
xchg
sub
test
add
arpl
mov
inc
test
push
lods
xchg
in
test
stos
insb
test
sub
mov
es
out
lea
dec
mov
jle
jb
les
lret
std
sbb
std
fcompl
pop
jb
sti
xor
insb
nop
or
jae
add
adc
fcmovbe
push
mov
inc
out
fistps
sub
jo
iret
lcall
mov
mov
mov
jmp
cs
inc
dec
pop
mov
push
iret
iret
push
cwtl
cmc
rorb
or
fists
scas
inc
in
jle
daa
mov
or
and
or
xchg
ror
fsubl
pop
mov
push
gs
pop
and
ja
inc
pop
mov
inc
mov
or
aad
mov
outsl
xor
lds
pusha
bnd
pop
insb
pop
sub
lcall
lcall
push
pop
imul
mov
mov
mov
rcl
lret
or
jmp
stos
out
call
adcl
gs
mov
cmp
mov
jge
pop
lock
xchg
in
inc
dec
stos
ret
and
jne
xlat
movsl
pop
lds
pop
jg
push
in
adc
ljmp
cmpsl
pop
rolb
hlt
pop
push
jns
dec
loope
cs
insb
cmp
icebp
dec
gs
mulb
sahf
fwait
loop
out
cwtl
sbb
pop
add
loope
movsb
insb
pushf
cmp
xor
rclb
pop
adc
in
jo
or
cmp
xor
mov
sti
push
fdivs
fwait
popf
adc
add
test
xchg
mov
inc
mov
lret
jbe
jbe
push
push
fstps
mov
push
jno
mov
arpl
cmpl
adc
ret
push
or
sti
or
sbb
nop
add
imul
lock
adc
push
int
lahf
je
repnz
push
pop
mov
fwait
mov
cmpsb
out
xchg
test
testl
je
fidivl
sbb
jmp
test
jae
lock
sub
sub
popf
xor
dec
sbbl
shrb
mov
sbb
sbb
shrl
dec
insb
add
sbb
scas
bound
push
lea
cld
sbb
xor
sbb
mov
out
sbb
add
sbb
aam
adc
insb
add
push
sbb
and
shlb
stos
push
xchg
adc
inc
cltd
jp
xchg
ffree
push
mov
push
push
daa
or
cld
scas
push
push
or
stos
dec
sbb
dec
gs
jb
test
push
fldenv
test
and
test
adc
pop
sbb
std
cmp
cmpsb
fs
pusha
in
mov
pushf
adc
push
test
and
mov
in
adc
push
pop
loopne
jecxz
add
popf
add
pop
or
jae
fisubrl
push
mov
inc
test
stos
add
push
in
xchg
stc
roll
xchg
dec
inc
inc
mov
jge
dec
out
out
inc
sti
insl
or
movsl
push
xor
cmpb
inc
mov
sbb
lahf
mulb
out
inc
fiaddl
mov
mov
insl
or
pop
das
pop
popf
xor
out
out
in
mov
gs
cmp
inc
das
enter
popf
inc
push
dec
adc
aas
sbb
iret
add
into
xchg
test
inc
mov
xor
pop
aam
jp
addb
jns
sarl
push
cmp
and
lret
iret
cmp
in
roll
call
loop
xchg
movsb
mov
pop
sub
push
fimull
mov
inc
outsb
fiadds
jne
mov
or
add
loop
xchg
dec
insl
mov
push
and
and
shrd
add
inc
inc
repz
pop
cmp
imul
sub
loope
pop
pop
lcall
push
cltd
sahf
xor
or
cmp
push
xchg
cmp
insl
jle
repnz
daa
cmpsb
xchg
mov
adc
rcll
dec
inc
stos
les
xor
outsl
sarb
mov
adc
add
gs
add
pop
pop
lcall
out
pop
jns
mov
into
sub
dec
add
mov
dec
xorb
xor
cmp
stc
cmpsl
push
cmp
mov
scas
scas
ja
xchg
loopne
rcrb
mov
ds
jns
fwait
loop
mov
push
outsb
enter
arpl
insl
jns
dec
gs
je
mov
test
push
add
test
xchg
flds
pop
lods
shll
or
cli
pushf
xchg
lret
mov
pop
xor
fsubl
mov
call
xorb
and
std
mov
fcmove
out
adc
ret
addr16
mov
addb
gs
jb
mov
int
and
pop
cmp
push
pop
scas
cld
mov
sahf
insl
xor
pop
mov
jno
sti
pop
dec
stos
addl
xchg
lahf
and
mov
sahf
inc
push
out
sub
stos
and
fcoml
cs
mov
cmpsb
in
dec
push
push
adc
in
mov
adc
je
shl
inc
test
loop
mov
ficomps
pop
imull
cmp
cli
jp
add
sbb
enter
andl
xchg
jecxz
push
jne
xlat
out
fwait
inc
push
cmc
test
jecxz
cmp
enter
icebp
ret
sahf
cld
push
inc
push
cwtl
rcl
cmpsb
andb
pushf
push
xor
cmp
iret
dec
sub
push
into
aaa
iret
sti
xchg
ss
xor
stos
lahf
gs
addr16
xchg
sub
out
xchg
inc
movl
jle
cmpl
sti
mov
jmp
mov
mov
mov
or
mov
sub
xchg
lret
pop
mov
adcl
mov
or
sub
std
or
fdivrs
repz
or
add
sbb
out
pop
popf
sub
outsl
push
and
les
mov
out
inc
push
clc
xchg
xchg
mov
mov
inc
dec
leave
rcl
lea
cmp
ret
or
inc
or
mov
imul
sbb
shrb
mov
rorl
cmp
push
mov
mov
mov
cltd
inc
jg
push
movsl
outsb
and
pop
xor
ja
jle
arpl
das
sbb
mov
pop
mov
mov
ss
cmp
shl
pop
mov
cmp
cs
repz
lds
in
mov
push
cltd
orl
ret
xchg
arpl
dec
jp
push
stos
decl
lret
cltd
xor
lcall
es
inc
push
std
cli
mov
adc
movsb
js
and
dec
adc
mov
adc
push
fidivrl
sbb
in
jp
imulb
insb
cld
sbb
xlat
pop
test
sub
pop
inc
push
js
cmpsb
lock
test
or
add
xorb
cmp
ret
lds
gs
dec
pop
jg
mov
xchg
xchg
push
xchg
jne
ds
cltd
daa
mov
lret
sbb
test
add
data16
outsl
mov
fstl
bound
cmpsl
orl
add
sbb
inc
add
mov
pop
xchg
divb
loopne
or
xor
mov
call
jmp
and
mov
jne
testb
adc
test
popf
adc
decb
das
icebp
lahf
loop
push
iret
or
pop
mov
lea
sub
cmp
fdivl
out
xchg
lahf
out
pop
insl
popf
call
mov
sub
inc
popa
or
push
shr
mov
mov
daa
mov
daa
jo
cmp
and
jle
mov
loop
loope
cli
pop
or
aas
mov
xchg
pop
jmp
pop
mov
imul
insl
sbb
pop
ja
negb
rcl
dec
call
jmp
jns
es
mov
movsb
and
dec
int3
jl
sbb
cltd
adc
pop
repz
mov
repz
js
dec
sub
jle
add
in
lea
test
mov
iret
pop
icebp
sbb
mov
push
xor
xchg
fldz
push
test
lcall
push
and
je
in
inc
inc
mov
ja
lds
dec
call
sub
mov
mov
dec
mov
push
lds
dec
mov
movsb
push
adc
ss
lods
xchg
test
mov
outsl
add
daa
mov
popf
ds
mov
mov
cwtl
cmp
xchg
out
mov
loope
andl
std
cli
subl
jb
add
mov
jge
lcall
pusha
push
enter
fstps
dec
sbb
pusha
negl
mov
mov
pop
pushf
mov
xchg
popf
sbb
inc
test
pop
ret
aad
push
pusha
stos
test
sub
nop
pop
lds
xchg
mov
imul
repnz
jae
popf
dec
adc
jne
push
sub
or
sahf
outsl
mov
push
cmp
imul
fwait
repnz
cmp
cmpb
push
xchg
push
outsb
clc
outsl
or
outsb
addl
jge
dec
fwait
xchg
inc
pop
push
insb
inc
and
outsb
lds
xor
int3
ja
test
ror
enter
push
push
mov
das
stc
test
push
dec
jo
sub
popa
sub
cmp
cltd
inc
xlat
or
mov
mov
ret
jnp
sbbl
int
jb
clc
inc
repz
lods
rcrb
hlt
adc
imul
ja
int
dec
push
or
es
dec
mov
decl
cmpsl
cld
push
call
stos
push
and
xchg
scas
inc
addr16
mov
push
pushf
je
in
cmp
int
sub
mov
js
fisttps
pop
xor
xor
xlat
rclb
pop
das
jae
jno
dec
out
stos
sbb
sbbl
movsb
xor
int3
sbb
jne
jecxz
and
xchg
mov
fcomp
push
cli
inc
out
inc
xchg
mov
xchg
push
push
adc
or
test
pop
and
in
jb
lcall
idiv
imull
jle
sbb
popa
cmp
jo
xchg
jae
adc
dec
int
pusha
stos
mov
cmp
mov
cmp
repz
aam
pop
push
movsb
mov
push
sti
push
ret
sub
aas
scas
out
and
mov
gs
imul
push
mov
xchg
dec
hlt
push
fcmove
pop
or
aam
xor
adc
test
jb
aaa
cmp
mov
fstl
and
xchg
lcall
in
adc
or
not
jg
in
inc
pop
xchg
cmp
movsb
mov
xor
push
jmp
sub
sbb
sub
add
les
out
clc
sub
push
mov
ret
xlat
cmc
inc
sahf
inc
cmpsl
dec
mov
movsl
jnp
push
xchg
lahf
xchg
push
out
lds
mov
imul
ja
fistps
mov
add
frstor
add
int
dec
jb
stos
mov
or
xchg
sub
xor
lock
popa
jmp
cltd
mov
rorl
jo
push
jo
pushf
xchg
sub
jno
mov
jp
mov
pop
or
pop
roll
daa
jle
lods
add
add
mov
hlt
lea
fisttpll
and
testb
xchg
add
xor
cwtl
in
cmp
outsb
sahf
cmp
outsb
xchg
out
push
mov
ret
adc
add
push
shlb
mov
jbe
shl
fsubrs
pop
xor
add
xchg
xor
inc
jmp
jp
push
xor
loope
std
aaa
pop
xor
lret
std
in
jne
outsl
mov
push
jp
fnstsw
mov
inc
aaa
aas
ret
xchg
push
inc
mov
ret
jns
mov
push
aaa
adc
imul
lods
in
push
popf
lods
or
addr16
rclb
mov
cmp
pushf
das
sub
pop
add
xor
lret
aam
mov
mov
add
imul
pop
lods
dec
loope
ja
cmp
mov
push
mov
or
xor
stos
stc
mov
lea
test
cs
xchg
mov
jecxz
cmp
fs
add
lock
or
xchg
push
adc
cmp
movsb
les
xchg
lahf
add
inc
sub
adcl
sub
jno
test
pop
iret
xor
xchg
ret
jno
inc
inc
push
test
push
add
add
mov
mov
clc
xlat
repz
out
scas
pusha
mov
xor
mov
sub
subl
in
stos
out
daa
ja
and
fwait
insl
cmp
data16
fcoml
dec
jecxz
xchg
call
aad
mov
in
mov
nop
cmp
add
sbb
ljmp
adcb
imul
lret
adc
cmp
push
test
add
sbb
cwtl
mov
lret
mov
jmp
fiadds
test
nop
mov
pop
cmp
jg
pop
cmp
sbb
out
das
dec
pop
pop
and
lock
jbe
adc
adc
mov
shrl
bound
cs
or
pop
push
pop
and
std
clc
shl
sub
ror
call
mov
inc
test
outsl
mov
add
jle
pop
sub
jp
jl
xor
jle
push
icebp
sbb
jge
out
insb
shlb
push
jns
popa
cmp
pop
push
push
jge
mul
mov
push
mov
sbbl
repnz
pop
mov
lret
mov
gs
shlb
lods
push
aam
or
insl
insb
out
xchg
lret
push
adc
pop
aas
inc
shlb
mov
loop
bound
gs
sub
cmpsb
fistps
nop
pop
cwtl
lret
sub
and
lcall
or
xchg
inc
in
add
cmp
sub
xor
mov
int
std
jbe
pop
scas
leave
shlb
leave
imul
push
leave
adc
insb
mov
inc
jnp
imul
daa
int
xor
xchg
cs
adc
negl
arpl
ja
jae
pop
aam
outsb
dec
aam
test
pop
outsb
insb
cld
jmp
clc
mov
xchg
insb
or
int3
mov
sub
mov
jo
push
js
stos
pop
mov
cmpsb
mov
out
iret
mov
loopne
add
pushf
and
repnz
test
lahf
mov
xchg
xchg
mov
cmp
add
cwtl
sbb
enterw
sub
pop
sub
pop
pop
cmp
pop
insl
and
fnstsw
jecxz
jg
adc
dec
in
insl
or
push
push
ret
and
fmul
mov
mov
je
add
je
mov
inc
or
lcall
in
stos
call
push
cmpsl
out
fmulp
push
lcall
cwtl
inc
nop
repz
stc
call
js
fcomps
fwait
sub
push
jo
addr16
pop
cmp
outsl
xchg
outsb
mov
lahf
iret
pop
ss
sbb
movsb
enter
adc
inc
sub
aas
sbb
jecxz
fidivrs
js
aas
adc
mov
mov
cli
pop
dec
sti
sar
adcb
mov
push
loop
cmpsb
outsl
movsl
lock
orb
lds
mov
fwait
jne
xchg
pop
enter
push
inc
nop
dec
pop
adc
push
dec
hlt
xchg
mov
leave
outsb
adc
ss
ret
and
pop
dec
jmp
dec
xchg
jmp
sub
imul
imul
xchg
pop
cmpl
fistl
pop
or
lds
outsl
cli
dec
lret
lock
imul
dec
mov
call
and
aaa
jp
or
and
fnclex
out
pop
icebp
pop
add
cmp
pop
aad
jae
test
pop
xor
mov
inc
addr16
leave
flds
dec
bound
dec
ds
xor
dec
in
fnstenv
or
cmp
lret
pusha
ja
push
pop
jp
mov
jo
inc
call
xchg
mov
into
adc
inc
adc
pop
pop
scas
mov
cs
push
dec
pop
insl
out
push
rorl
sbb
pop
aad
leave
out
push
out
inc
movsl
adcb
out
xor
lods
mov
adc
jp
testb
and
sbb
sub
incb
push
outsl
repnz
mull
push
xor
xchg
and
adc
lahf
or
rcl
es
mov
leave
jb
into
push
mov
in
decb
shr
mov
mov
sbb
adc
popa
xor
jbe
das
aad
dec
sbb
out
iret
fsub
push
xor
rcll
fdivl
fbstp
push
lcall
mov
push
lods
fcoms
js
or
push
ljmp
jno
inc
loop
outsb
loopne
dec
pop
sub
leave
into
cmpsl
inc
mov
scas
hlt
mov
icebp
lods
or
jns
and
inc
mov
ljmp
push
test
insb
jge
test
lea
stc
mov
call
int3
insl
push
or
repnz
inc
sub
mov
mov
mov
fwait
xor
lods
int
pop
fldcw
movsb
fdivrl
popa
mov
cwtl
mov
dec
arpl
arpl
pusha
mov
sbb
fbstp
sbb
add
mov
jmp
mov
and
int
xchg
call
jmp
fcmovnb
mov
xor
jae
in
test
in
scas
mov
subl
mov
add
aam
dec
or
js
inc
pusha
or
scas
xchg
xorl
loop
gs
push
inc
incb
stos
jmp
xor
pop
shll
jo
pop
fprem1
aad
dec
pop
pop
mov
pop
push
ljmp
push
xchg
and
int
hlt
cmp
or
ljmp
add
aam
sub
imul
mov
cmpsl
out
pop
adc
mov
jo
adc
pushf
pop
jae
lea
sub
sbb
mov
fsubr
and
jb
ds
cmp
imul
cmc
imul
cmc
imul
out
dec
push
add
lcall
mov
nop
mov
xor
int
jnp
shll
xchg
fistpll
inc
jne
or
mov
pop
push
pop
and
stos
hlt
mov
icebp
and
xchg
xor
jmp
pop
lcall
adc
or
sub
adc
shlb
sub
pop
and
inc
xor
dec
loope
and
nop
sub
cmc
pusha
push
mov
xor
xchg
adc
adc
jl
sbb
push
test
ds
fdivr
sarl
mov
adc
ret
and
or
in
gs
popa
and
xor
and
imul
dec
mov
push
cmc
inc
sbb
inc
cmp
in
inc
enter
jmp
sub
stos
out
in
stos
inc
jne
jmp
lcall
cmc
xchg
test
dec
dec
aas
push
aaa
pop
movsb
idivl
cmp
insl
dec
and
scas
imul
mov
pop
push
mov
sahf
jp
xor
shl
mov
push
mov
dec
or
jecxz
push
jle
pop
cs
fbld
mov
mov
loop
insb
pop
call
rorl
test
or
mov
iret
mov
and
mov
cvtpi2ps
dec
lds
aaa
cmp
std
arpl
mov
jbe
sti
lock
in
jmp
mov
test
jmp
push
in
mov
call
icebp
lret
mov
ja
stos
sub
ljmp
test
mov
cmpsl
push
jno
xchg
sub
xchg
cmpsl
sbb
adc
sbb
movl
dec
mov
in
test
mov
jno
pusha
popf
rclb
cmp
add
mov
pop
mov
xlat
in
jg
pop
cmp
in
arpl
ficompl
pushf
outsl
aas
out
sub
aad
enter
add
pop
in
xor
push
je
out
aas
sti
shll
mov
hlt
and
xchg
push
and
inc
imul
je
outsb
mov
fidivrs
xchg
add
inc
and
test
subl
pop
mov
js
xchg
push
ffree
xor
int3
repnz
mov
mov
aam
push
lret
lret
jbe
int3
shl
dec
pop
lock
stos
ss
mov
ss
sti
pop
fidivs
dec
adc
loope
call
inc
data16
aad
pop
jb
pand
insb
xor
repz
loope
sub
sahf
jb
sahf
lods
or
push
add
lds
adc
and
lret
orl
cmp
mov
mov
ljmp
jnp
xlat
rep
adc
or
test
mov
call
sbb
fsubs
inc
push
or
inc
and
dec
jne
jne
xor
outsl
addr16
pop
jb
andl
cltd
aam
xor
pop
fs
xor
lock
je
fnstcw
sbbl
or
dec
and
adcl
or
jmp
sub
adc
xlat
pop
sub
imul
fwait
out
push
cld
jns,pn
mov
jns
sub
fdivl
test
loop
lock
loope
push
jge
mov
fnsave
jl
mov
pop
inc
into
sbb
insb
shrb
mov
test
lock
js
inc
leave
gs
aad
test
pop
scas
and
sahf
cmpsb
fdivrl
sub
pop
mov
xchg
stc
and
jae
and
xor
push
sbb
ret
add
cwtl
psubusw
pop
xchg
out
xchg
add
cmp
dec
in
jno
and
aaa
sbb
stos
xor
push
call
jge
and
adc
test
movl
in
jl
jne
out
sbbb
lret
fsubs
ficoml
mov
jno
test
sub
mov
sahf
insl
out
xchg
xchg
cwtl
das
enter
enter
mov
clc
out
fstl
mov
fisubs
sbb
xchg
pushl
rcl
lods
mov
xchg
pusha
test
insl
mov
and
mov
sbb
add
sbb
out
adc
jl
add
les
push
cmp
xchg
adc
je
leave
push
sbb
push
gs
pop
xchg
mov
push
add
imul
fisubl
mov
pop
xor
aas
and
loope
push
pop
mov
stc
int
in
sbbl
mov
sarl
dec
pop
mov
jmp
sbb
xchg
leave
pushf
mov
nop
fldenv
mov
ss
out
scas
push
test
lock
fimuls
js
jecxz
cltd
jmp
les
ljmp
mov
mov
orl
sub
lods
hlt
push
pushf
xlat
ljmpw
inc
je
out
enter
mov
scas
mov
xorl
xchg
inc
or
inc
mov
mov
ret
cmpsb
adcl
insb
push
fstpl
mov
and
mov
jo
lods
xor
or
adc
mov
popa
ret
aaa
xchg
pop
stos
xchg
jmp
or
aad
insb
mov
out
add
sbb
lds
fsubrs
push
lods
inc
inc
xchg
fsubrs
lretw
lret
lret
scas
dec
cli
sbb
in
scas
or
cltd
xor
shrb
cwtl
lods
inc
lret
cmpsb
push
inc
fimull
pop
lock
sub
scas
add
push
sub
daa
jg
cwtl
outsl
ds
mov
mov
repz
sbb
gs
mov
mov
pop
jno
cltd
mov
jle
test
mov
xor
mov
push
jmp
xchg
out
fidivl
mov
push
lods
jb
and
sbb
inc
push
cmp
xchg
sub
cwtl
das
sbb
aas
mov
icebp
incl
adc
or
mov
lods
inc
mov
ret
lret
sti
rcrl
pop
lock
add
pop
lods
out
test
faddl
xchg
into
sbb
push
dec
out
push
js
sarb
ret
add
imul
pushf
cld
xchg
xor
or
pop
jl
fidivs
popf
loopne
xchg
mov
push
in
push
in
repnz
or
or
xchg
test
ljmp
push
outsb
call
lods
sbbb
bound
jge
xchg
repz
xor
ljmp
push
jno
mov
lock
inc
sbb
enter
or
adc
xchg
sub
xor
xor
push
out
leave
fbstp
adc
jne
sbb
aas
testl
aad
int
push
divl
and
push
cmc
mov
cmpsl
adc
inc
stos
inc
xor
add
iret
mov
add
fwait
xor
jle
push
xchg
jno
mov
jnp
out
sbb
add
jno
jge
lods
mov
fwait
xor
adc
jns
sbb
xlat
stos
fxch
pop
or
pop
cmc
sub
jge
pop
cmp
pop
sahf
enter
mov
push
jmp
dec
cmp
mov
out
or
sbb
pop
and
push
outsl
push
out
popf
movl
lock
dec
sbb
imul
fisubrl
shlb
add
mov
pop
xchg
sbb
add
daa
std
xchg
push
aas
out
test
testl
jmp
add
insb
add
test
and
aaa
xor
fs
xchg
stc
les
jne
adcb
xchg
push
leave
cmp
pop
and
add
jno
ds
xchg
inc
xlat
sarl
imul
cwtl
das
mov
fiaddl
ret
iret
push
mov
gs
fld
pop
js
out
test
sub
andb
mov
pop
repz
aad
jge
and
mov
fldenv
imul
jg
mov
sti
adc
scas
dec
fmuls
or
cs
pop
ret
clc
jge
dec
stos
sbb
addr16
repnz
mov
shrl
sbb
adc
jp
in
scas
sub
xchg
pop
shlb
push
jle
shrb
int
clc
cli
jg
out
lods
sbb
mov
add
mov
pop
mov
mov
idivb
jg
or
js
hlt
lods
or
flds
lea
fisubl
or
push
mov
jl
mov
push
lock
mov
popa
ret
pop
xchg
and
push
mov
sahf
mov
push
fdivl
mov
insb
mov
imul
pop
dec
xchg
repnz
cli
sahf
sbb
outsl
dec
test
pusha
mov
fs
cwtl
sbb
ds
lret
bound
pop
aam
inc
cmp
mov
mov
sbb
orl
jp
push
ss
or
fildl
arpl
mov
lods
inc
adc
add
rcrl
popa
clc
sbb
and
add
xor
dec
and
sbbb
out
mov
arpl
xchg
xchg
add
aam
ljmp
mov
and
cmp
fbstp
loop
in
push
imul
inc
lahf
inc
fmul
flds
or
push
adcl
inc
inc
sahf
pop
iret
fldlg2
orl
xchg
popf
pop
lock
loopne
movsb
adc
or
cmp
je
sbb
add
cltd
xsha1
cmpsb
lret
out
fnstenv
push
push
call
cmp
out
xchg
pop
dec
and
mov
fcmovnbe
aad
or
sahf
jle
sub
dec
stos
mov
fcmovnu
ljmp
push
sbbl
stos
and
or
jmp
dec
push
cmpsb
cmp
mov
inc
dec
in
and
test
fadd
clc
clc
dec
and
pop
lods
test
jmp
insl
cs
pop
mov
outsb
add
pop
sub
mov
sarl
roll
push
in
addl
push
inc
rcr
jne
aad
mov
sbb
dec
adc
lcall
jo
dec
pop
or
push
ficoml
scas
or
xor
push
clc
shll
pop
and
mov
cmpsb
jg
je
into
lret
cld
dec
loop
sbb
or
cwtl
arpl
xchg
mov
xchg
test
cmp
pop
out
nop
pop
shrl
mov
xor
mov
pop
jecxz
aad
xor
loop
xor
lods
adcb
mov
mov
mov
cli
or
das
inc
shrl
dec
jo
jp
std
xchg
into
lahf
xchg
sbb
mov
and
sbb
je
pop
sahf
lds
aas
pop
in
pop
adc
insb
add
fnstenv
test
cmpsl
mov
pop
sahf
or
lret
sub
fs
sub
pusha
jg
movsb
lods
test
mov
sub
cli
shl
jge
and
lea
outsb
add
movsl
jp
and
jo
jmp
sub
insl
pop
jl
aas
mov
pop
out
clc
outsl
sbb
dec
mov
cltd
xor
out
bound
xlat
push
mov
sub
add
jo
bound
push
out
iret
rcrl
mov
push
test
lods
ficoml
lods
bswap
pop
hlt
cli
xor
adc
inc
nop
push
jmp
outsl
js
popf
in
mov
jecxz
xor
imul
adc
mov
lahf
ss
loopne
in
adc
cmp
xor
cmp
in
out
and
fdivrl
fsubr
jo
das
xchg
imul
pop
mov
sub
cli
mov
xor
dec
out
sti
xchg
sbb
ss
fdivrl
es
mov
fucomip
add
mov
pushf
mov
hlt
test
inc
mov
pop
jbe
fdivrs
adc
xor
pop
clc
pop
imulb
dec
jl
jl
mov
xor
out
cmp
and
ret
mov
rorl
cltd
std
xchg
iret
push
insl
add
in
mov
lahf
cmp
mov
jecxz
pop
sahf
mov
clc
aas
ficompl
orps
andl
mov
jp
lock
ds
addl
pop
sub
push
lahf
inc
push
jmp
mov
mov
fsubl
or
in
adc
addr16
xor
xchg
imul
jo
loop
mov
pop
cmp
cmpsl
jl
dec
inc
jecxz
jmp
outsl
add
test
ret
pop
xchg
leave
test
push
sahf
jno
lods
xchg
sub
xlat
add
dec
xchg
mov
jnp
sbb
mov
cmpsb
into
push
dec
iret
jecxz
adc
repnz
add
jl
and
aaa
popf
sti
insb
and
mov
pop
push
jae
pop
push
sahf
push
popa
sub
loope
push
jmp
aaa
sahf
sbb
xor
xchg
push
xchg
jno
adc
xchg
dec
xchg
jl
add
add
xor
sub
mov
adc
dec
push
inc
lods
lods
dec
stc
xchg
pop
int
xlat
aad
pop
int
aad
into
sub
hlt
jae
loop,pn
inc
sbb
pop
in
or
cmp
insl
mov
aaa
ljmp
addr16
das
hlt
push
and
fmuls
mov
ficompl
nop
mov
push
and
imul
sti
js
cmp
sbb
mov
jns
sbbb
push
out
xchg
cmpsb
jo
or
ja
imul
jb
inc
mov
insl
push
popa
je
or
sub
sbb
mov
xchg
lods
stos
jbe
adc
addb
int3
dec
ret
fidivrl
fidivrl
mov
push
lods
ficomps
out
xchg
cmc
xor
add
push
xchg
mov
outsl
jmp
or
scas
mov
sbb
lods
jne
cmp
and
mov
xor
lcall
adcl
je
mov
sub
jae
jo
inc
ret
pop
ss
imul
cli
pop
adc
jns
idivl
dec
sub
pop
jae
jecxz
dec
std
das
push
or
rorb
aad
fidivl
mov
out
xor
movl
lret
std
jmp
and
adc
mov
adc
cmp
es
push
inc
rcll
lods
cmp
and
mov
test
and
andl
imul
inc
data16
jb
pusha
xor
gs
push
push
mov
mov
inc
cwtl
ja
jb
lahf
mov
ret
sbb
jmp
cmpsl
lret
push
std
jmp
call
fsubrp
loop
sub
push
fsubs
popf
ror
xlat
adc
arpl
push
lods
jne
jmp
mov
ss
mov
repnz
jecxz
das
loope
mov
cmp
or
lea
add
xchg
imul
loop
ffreep
xor
nop
xor
inc
int
jle
out
das
pop
inc
mov
jecxz
lods
int3
or
imul
mov
jne
imulb
inc
pushf
fwait
xor
loope
mov
ljmp
test
mov
push
into
push
xchg
mov
sbb
pushf
xor
les
fndisi(8087
enter
ret
xor
shll
or
std
mov
test
fisttpl
loope
xchg
jns
mov
out
mulb
inc
int3
add
jae
dec
xchg
pushl
pop
cmpsl
jecxz
add
cli
sub
push
push
iret
push
push
sahf
mov
fnstenv
dec
aaa
int
jl
jne
pop
inc
mov
aaa
add
mov
add
mov
imul
bound
mov
jge
insl
fmuls
and
inc
mov
mov
rep
xchg
shl
inc
mov
adc
lcallw
lea
jb
stos
mov
pop
iret
fisttpll
mov
sbb
popf
mov
adc
lea
cs
sbb
test
out
push
cli
push
into
xor
rcll
add
adc
sbb
call
pop
enter
inc
xchg
repz
out
rcll
test
lret
icebp
in
mov
fldz
and
ljmp
in
clc
jnp
add
mov
push
sub
addb
add
xor
push
xchg
xchg
xlat
outsb
jp
jo
dec
mov
lods
lahf
scas
pop
sar
or
mov
or
das
pop
aaa
leave
xchg
scas
or
mov
push
mov
jno
sbb
inc
mov
lea
ljmp
xor
push
in
lret
inc
mov
or
inc
add
sub
xchg
mov
push
or
pop
mov
ret
in
fs
fldt
xor
pop
jg
sbb
pusha
xchg
jns
subl
insb
ds
xchg
cmp
inc
cmpb
push
dec
int3
mov
add
insl
sahf
test
push
scas
push
inc
ja
push
push
push
mov
inc
jl
pop
jno
ja
pusha
dec
jecxz
imul
fists
lods
jbe
pop
inc
int
push
cmp
mov
cmpsl
add
cmc
addr16
cmpsl
adc
cwtl
xchg
sub
js
jae
int
sub
adc
or
cltd
add
push
xchg
pusha
into
push
adc
hlt
int3
inc
jmp
stc
pop
push
movsl
mov
testb
xor
push
rcrl
push
test
out
xor
pop
or
in
mov
testl
xor
icebp
xchg
or
mov
sbb
scas
adcb
mov
xor
enter
pop
mov
adc
pop
mov
xor
inc
jne
imull
js
enter
ds
and
jne
push
mov
movl
jl
push
scas
pop
ds
int3
in
xlat
daa
or
fwait
xchg
push
iret
lods
fsubrp
add
enter
mov
pop
shr
xchg
add
mov
sti
or
sub
bound
pop
les
rclb
xchg
pusha
testl
and
dec
lret
inc
xlat
push
mov
sti
adc
loopne
push
or
sbb
xchg
jmp
stos
fstpl
dec
mov
add
pusha
cwtl
lahf
xchg
jg
sbb
js
stos
inc
push
dec
loopne
data16
ss
in
notl
adc
scas
sbb
nop
jmp
push
mov
jmp
ds
rorl
cmpsl
pop
pop
pop
rclb
out
lock
xlat
inc
enter
mov
add
std
mov
lock
addr16
jge
jb
add
mov
mov
icebp
fbstp
push
cltd
les
mov
xchg
iret
jmp
ja
lret
aad
lcall
ret
jmp
cli
xchg
xchg
out
test
adc
mov
add
xor
aad
jns
test
adc
shll
jb
out
inc
mov
push
pop
popf
cli
inc
pop
aam
mov
lods
std
pop
and
data16
or
xchg
fisubs
dec
add
cmp
pop
dec
push
cmpsb
xchg
jne
adc
cmpsl
lea
ret
mov
testl
aad
int3
inc
icebp
sub
mov
sbb
sbb
dec
mov
pop
mov
push
fldenv
xchg
xchg
xchg
add
cmpb
mov
insb
push
rclb
popf
mov
pop
sub
add
outsl
inc
mov
inc
jne
mov
cwtl
jno
aas
imul
inc
xchg
cmp
jne
or
addr16
lahf
ds
daa
cmp
scas
xlat
mov
outsl
popf
fcomps
jns
out
outsb
mov
rcl
loope
imul
sarb
xchg
mov
lret
imul
pop
sub
ds
rorb
imul
dec
jno
inc
push
inc
in
push
push
pop
scas
pop
pop
inc
mov
push
data16
cld
dec
dec
and
xchg
mov
pop
pop
imul
xchg
js
or
enter
shrl
into
in
loope
test
pop
mov
mov
jle
xor
dec
rcrb
push
std
xchg
popa
cwtl
sub
add
add
mov
mov
pop
or
fwait
pop
ficoml
in
cli
and
pusha
repnz
sbb
or
loop
jns
loope
fnstenv
in
fdivrl
repnz
xrelease
stos
or
ret
sub
jg
mov
mov
call
sub
pop
cmp
xchg
add
and
int
fdivs
out
cmp
int3
test
jmp
out
mov
push
notl
lods
pop
xchg
mov
mov
stos
cmpl
mov
mov
cmp
push
add
jae
and
testl
stos
mov
divl
mov
jle
loope
mov
xchg
mov
cli
pop
mov
fbld
cmp
mov
jae
ficompl
xlat
or
jb
mov
in
fs
mov
stos
xor
icebp
lds
jo
nop
rorl
push
jo
inc
or
lahf
push
lret
inc
push
or
cmp
pop
sbb
insl
in
fildl
inc
jmp
jae
stos
jo
xchg
adc
daa
movsl
mov
xlat
xchg
add
pop
clc
push
aam
adc
lock
popf
pop
enter
jge
out
mov
flds
push
sbb
data16
aas
out
ss
mov
sbb
pushf
js
test
icebp
sub
out
fdivs
jg
fmulp
push
ret
lds
adc
std
std
xchg
or
or
stos
pop
aam
sti
push
add
jnp
leave
dec
fcomip
mov
daa
inc
les
adc
out
test
and
xlat
or
jg
fcoml
lock
pop
lods
test
scas
popa
repz
mov
mov
or
scas
out
lds
fisttpll
xchg
sbb
lret
push
inc
movsl
mov
arpl
addr16
dec
in
and
fistl
add
xor
lea
push
orb
test
and
pop
mov
inc
call
negl
jl
pusha
clc
aam
mov
cmpsb
fmuls
dec
mov
xchg
rolb
out
movsl
sarl
xchg
push
mov
add
in
add
push
lods
ds
inc
and
inc
ret
mov
divl
jmp
fnstcw
test
in
ret
dec
fcomip
int
xchg
rclb
rclb
stc
xlat
repz
shlb
out
loopne
test
or
lods
fnstsw
fucomip
jae
rcr
fistpll
sbb
mov
push
mov
mov
pop
shrb
stc
adc
lret
outsb
inc
xlat
pushf
in
adc
adc
movsl
or
cwtl
push
clc
sub
jp
lret
popa
rcrl
lods
pop
out
cld
inc
dec
mov
jno
dec
mov
bound
dec
mov
inc
movsl
inc
mov
push
lea
sub
mov
adcl
mov
movsl
pop
pop
rep
and
in
cmp
jecxz
out
push
les
out
leave
pusha
mov
loopne
sub
inc
movsb
out
add
mov
mov
mov
or
pop
pop
out
jbe
cmp
sub
mov
push
mov
daa
loope
push
mov
dec
pop
sahf
repnz
pusha
cwtl
popa
mov
jae
je
dec
mov
push
imul
dec
inc
fstl
ja
enter
add
pop
inc
mov
add
mov
mov
scas
push
pushf
icebp
ret
cmpl
movsb
lcall
daa
stc
and
add
and
sub
add
push
inc
stos
pop
cmp
test
push
in
jno
mov
fildll
jp
jle
push
and
pop
mov
or
push
scas
sub
xchg
test
xor
out
sbb
mov
ret
fstpl
mull
out
shlb
mov
add
ret
adc
sbb
pop
lock
add
stos
adc
mov
dec
iret
adc
xchg
sub
adc
mov
and
mov
adc
adc
jnp
hlt
sbb
sbb
sub
in
int
jge
cld
loopne
sbb
mov
in
push
out
mov
test
fisubl
leave
jbe
loope
cmp
inc
mov
repz
push
cmp
mov
das
pop
jns
pop
insl
testb
push
mov
push
mov
push
xor
subl
js
idivb
cli
and
add
pop
fcompl
lea
ficoml
daa
or
add
and
mov
mov
inc
stos
jb
add
mov
imul
xchg
sub
mov
push
rclb
rcrl
adc
xor
out
cmpsl
ror
cli
sub
add
iret
push
jecxz
sbb
sub
mov
dec
insb
popa
mov
dec
jge
nop
daa
jne
test
das
jp
mov
sti
data16
xor
cmp
inc
mov
or
scas
test
les
in
mov
fidivl
sti
lods
inc
leave
push
popa
mov
fisubrl
mov
mov
push
fwait
outsb
shrl
sub
xor
rcrb
xor
push
jle
sbb
cmp
add
or
aas
mov
jb
in
in
fists
cmpsb
je
add
scas
or
fdivl
lret
inc
push
jmp
sarl
sub
mov
push
push
hlt
gs
sub
or
in
jge
xlat
push
daa
xor
push
sbbb
rcrb
test
sbb
ds
adc
sbb
shlb
in
cmpsb
montmul
cmpsb
pop
adc
and
mov
daa
gs
scas
pop
and
xor
lret
bound
push
rcrl
fldl
popf
les
push
fisubrl
xor
or
je
push
push
or
mov
lahf
call
scas
push
addr16
test
xor
outsb
mov
push
xchg
xchg
inc
jmp
loope
sub
lods
ds
roll
pop
add
popa
addb
pop
push
stos
pop
fisubs
mov
fcompl
loop
sub
add
adc
iret
and
subb
rcr
cmp
cltd
sarb
sbb
or
hlt
stos
sbb
xchg
push
addr16
push
cmp
mov
jo
je
sbb
lcall
fwait
add
mov
or
cmp
push
xor
loop
nop
pop
ficoml
popf
das
in
and
add
xor
mov
negl
dec
dec
fnsave
or
scas
and
sub
dec
in
inc
into
inc
inc
je
inc
push
dec
mov
jo
mov
sub
std
and
stos
stos
fdivl
out
aad
lret
push
xchg
ja
push
fistps
cmp
add
push
push
hlt
fs
mov
add
inc
icebp
xchg
inc
scas
aam
repz
jnp
imul
push
lcall
int3
insl
aad
mov
fildl
shrb
fldt
bound
mov
or
add
cld
repz
push
int
test
xlat
dec
sbb
or
mov
dec
pop
jmp
addb
mov
arpl
jle
xchg
dec
in
aaa
in
lahf
mov
fcmovnu
ss
mov
sub
inc
mov
ja
lret
cwtl
rclb
sub
mov
fs
imul
test
adc
push
sarl
clc
cmp
pop
ss
inc
stos
pop
int
xor
adc
adc
out
out
inc
cwtl
lods
sbb
out
daa
fnstcw
call
mov
cmc
inc
fidivl
aam
ret
ficoms
repnz
xor
in
dec
ret
sub
mov
mov
add
test
out
jl
or
das
xchg
xchg
jo
cmp
mov
mov
imul
jp
jecxz
pop
or
xchg
test
dec
xor
testb
xor
lret
mov
push
push
or
icebp
pushf
push
mov
mov
adc
imul
sbb
inc
les
adc
cmc
lods
push
fidivs
jmp
mov
fbstp
loop
mov
daa
mov
cli
hlt
cmp
loop
scas
xchg
jmp
jmp
stc
mov
add
lcall
cmp
lock
movsl
add
or
and
sbb
mov
lret
sub
ret
inc
pusha
and
addr16
pop
fisttpl
xchg
lcall
data16
inc
movsb
cmp
pop
rorb
mov
dec
sub
push
imul
xor
in
push
js
outsl
test
pop
rorl
dec
les
mov
ficompl
bnd
repz
xchg
mov
imul
cmp
inc
subb
xor
xchg
cmpsl
cmp
xlat
ret
add
mov
fldenv
fidivrs
add
loopne
mov
push
cmpsl
lods
cltd
addr16
icebp
cmp
xor
les
ljmp
es
jl
push
jle
scas
orb
insl
mov
cmp
pop
mov
jg
mov
xor
loope
loop
out
aas
int3
pop
iret
xor
rorb
out
fcoms
xchg
mov
sbb
mov
adcb
jp
mov
or
test
bound
lds
lds
sahf
movb
dec
out
push
mov
lret
dec
mov
add
aam
mov
lcall
push
mov
jbe
mov
mov
mov
fsubl
fildl
or
orb
push
adc
js
pop
scas
mov
out
push
mov
cmpsl
shll
icebp
enter
ret
xor
loop
lds
mov
in
adc
fsts
cwtl
xchg
mov
jp
mov
andw
xor
roll
jb
aad
mov
jge
jnp
mov
repnz
mov
fidivrl
aas
add
xchg
daa
fsts
sar
adc
stos
ja
pop
iret
and
popa
inc
mov
int
pop
int
lods
fmuls
mov
mov
ret
lods
and
xor
pop
lret
or
cmp
and
add
sub
xchg
xchg
loopne
and
mov
je
inc
into
jmp
cmpsb
bound
adc
add
test
call
pop
mov
sub
cmpb
movsb
aas
or
mov
add
mov
push
push
arpl
pop
lret
cmp
jae
sub
add
sbb
cmp
cld
sub
jbe
cs
xchg
arpl
repnz
nop
call
stos
imul
sbb
pop
pop
cmp
bound
gs
es
popf
popl
orb
sahf
test
and
sub
pushl
inc
nop
rclb
out
lahf
jecxz
mov
mov
bound
aaa
ret
jae
mov
incl
in
push
pop
lahf
insb
scas
xor
pop
and
inc
xchg
xchg
sbb
jns
jle
test
gs
outsl
out
dec
mov
adc
push
lret
mov
adc
popf
stos
insl
outsl
push
mov
cmc
cmp
test
fdiv
shl
xor
aad
xlat
fmuls
fldl
es
loop
jle
fstl
fcmovbe
mov
lcall
lcallw
push
les
mov
out
jbe
mov
cli
jb
int3
sbb
pushf
fisttps
xchg
mov
aaa
fisubrl
sbb
mov
in
orl
repnz
leave
int3
xor
mov
arpl
fimuls
fadd
sub
int
or
ror
rcl
arpl
cli
mov
fadd
mov
lcall
mov
cli
rclb
rorb
cmpsb
add
xchg
adc
push
push
hlt
jnp
xchg
lea
push
pop
or
xchg
xchg
jmp
repz
sub
imul
sahf
pop
shrl
jp
mov
loope
in
es
jg
fisubrs
notb
dec
adc
xchg
nop
pop
ja
pop
push
pop
cmpsb
movsb
push
sub
push
testl
cmp
dec
rcrb
cmpsl
std
inc
cmp
fbstp
popa
xor
jp
jge
mov
cltd
xchg
inc
xlat
jo
test
push
or
es
pusha
pushf
dec
dec
lcall
jns
pop
inc
scas
in
and
xor
add
out
mov
mov
pop
mov
xchg
cs
xlat
mov
bound
test
push
cli
xor
addl
jle
and
jmp
or
xchg
enter
add
sbb
sahf
add
popf
sbb
cwtl
adc
and
jmp
mov
push
int
imul
pop
ja
or
jge
enter
lods
jmp
repz
ret
dec
aad
leave
fdivl
int
fnstenv
in
fdivs
add
shrl
mov
loopne
std
dec
into
mov
mov
inc
cld
nop
sbbb
push
test
out
ret
clc
bound
shl
push
mov
enter
enter
loope
dec
rcl
xchg
mov
into
or
fsubrs
mov
mov
mov
and
jne
push
leave
sub
push
insl
lds
mov
jg
pop
adc
inc
sub
and
mov
fnstenv
or
pop
ds
mov
in
xchg
je
lods
movsl
mov
cltd
jecxz
xor
testl
jmp
xchg
pop
pushf
test
hlt
fnstcw
jnp
sub
lods
inc
inc
dec
cltd
xor
lret
bound
mov
sub
aad
and
inc
repz
es
lret
fneni(8087
jmp
sbb
arpl
xor
sbbl
shll
and
mov
ds
mov
pop
mov
fsub
jp
cmc
pop
scas
xor
cwtl
popa
inc
xor
mov
cltd
push
ljmp
jno
push
daa
pop
repnz
aas
es
jns
stos
xchg
lods
inc
int3
xchg
cs
in
bound
and
subb
imul
repnz
frstor
test
das
inc
fisubl
das
popf
andl
out
sarl
add
es
xor
mov
xchg
jns
push
stos
mov
aas
jmp
or
pop
cmp
clc
push
pop
in
jb
lods
mov
les
cmc
add
mov
inc
push
inc
xlat
test
or
mov
jl
sub
scas
inc
inc
dec
lcall
sahf
mov
and
or
mov
jbe
daa
mov
enter
fsubrp
xor
sbb
fs
xor
dec
in
push
sbbb
lea
movsl
mov
and
stc
mov
aas
dec
fdivl
xchg
pop
mov
jnp
repz
pop
inc
ss
andb
mov
push
jmp
adc
test
jns
movsl
pop
cmc
mov
sbbl
lret
ds
jmp
inc
sbb
ds
jo
pop
gs
arpl
test
jo
xlat
flds
lcall
and
sahf
out
repnz
subl
fs
jmp
mov
fimuls
mov
mov
rolb
aas
fisubs
jmp
xor
movsb
repnz
cmp
imul
stc
mov
fmull
fldcw
sub
pop
lcall
mov
or
sbb
push
sbb
mov
sbb
imul
jl
sbb
cltd
dec
pop
add
xchg
outsb
push
call
jmp
aas
mov
fs
xchg
sub
and
mov
or
outsb
mov
push
mov
scas
cmc
roll
cmp
dec
in
dec
test
imul
in
and
in
xlat
out
jns
jl
push
mov
xor
lret
jnp
xchg
lcall
pusha
mov
mov
mov
jae
fdivl
mov
clc
cmc
clc
rcll
mov
sub
or
dec
negl
jl
pop
and
fcomps
pop
shr
aas
mov
cmp
je
mov
fbstp
lods
popf
pop
lock
cmp
adc
jg
pop
aam
packuswb
pop
mov
adc
add
test
mov
rcll
adc
xor
mov
int
push
xchg
in
pusha
sbb
mov
cmp
lahf
cwtl
jae
push
adc
fwait
add
outsl
ss
loopne
sub
addr16
jecxz
cmp
arpl
in
mov
insb
sub
add
mov
pop
push
jns
push
jl
test
mov
nop
jp
int3
cld
mov
call
jl
cmp
cmc
adc
jge
jmp
mov
and
mov
lahf
fistps
bound
inc
and
sbb
mov
lea
rcrl
sbb
popf
orl
aad
nop
cmp
dec
mov
jg
lock
dec
loop
mov
inc
mov
sbb
mov
insl
mov
pop
pop
jb
out
xor
icebp
xchg
push
and
mov
call
push
cmpsb
lret
cwtl
or
es
push
pop
mov
inc
add
loop
std
sbb
imul
jg
loop
adc
fnstenv
sub
push
test
repnz
pop
cli
rorl
lods
in
aad
dec
or
gs
fists
cmc
sub
out
dec
dec
rorl
loope
leave
jne
pop
add
stc
idivb
jns
mov
jb
push
push
pop
dec
mov
subl
lods
mov
pop
aad
in
and
enter
rolb
es
cmpsb
pop
or
mov
js
sbb
test
push
int3
xlat
mov
inc
mov
mov
fldl
or
cmp
data16
cmc
mov
rorl
push
lret
lcall
lcall
cs
lahf
mov
std
xor
lea
dec
mov
and
shll
mov
ret
jnp
jo
sbb
repnz
orl
sub
add
inc
inc
scas
js
and
add
rcll
pop
gs
movsl
es
pop
scas
mov
mov
leave
cmp
pop
stos
jp
icebp
imul
sbb
mov
aas
scas
inc
mov
dec
out
ror
fs
insl
add
ss
push
jno
cmp
negb
fiadds
jmp
mov
sbb
mov
jnp
add
loopne
and
addr16
adc
or
lret
js
sbb
insb
sysenter
dec
or
loope
pop
cld
aad
in
sub
mov
ss
inc
fdivrs
sahf
test
cmc
enter
movsb
xor
pop
stos
js
jno
mov
into
push
xor
jno
test
jno
push
xlat
dec
and
sti
das
add
jo
xor
sarl
mov
jnp
and
into
mov
int
xor
or
add
or
in
cmp
adc
dec
or
dec
lret
pop
pop
stc
and
call
and
push
popf
mov
lods
and
mov
stos
xchg
icebp
sbb
fimuls
daa
pop
comiss
aaa
mov
and
pushf
inc
mov
or
popa
cmpsl
jle
pushf
jb
inc
loopne
mov
scas
test
mov
test
cmp
adc
inc
xor
mov
mov
nop
pop
and
jae
mov
push
xchg
jne
hlt
fcmovb
dec
cvtdq2ps
inc
and
nop
pop
mov
cmp
adc
imul
inc
stos
das
pop
repz
rclb
xchg
rcrl
and
jno
push
out
or
push
decl
iret
inc
push
sahf
inc
fistl
iret
xchg
inc
pop
and
fs
movsb
fidivrl
test
xchg
dec
dec
aad
rorl
xchg
movsb
cs
sbb
and
in
imul
inc
pop
pushf
inc
rcll
lret
sbb
stos
xchg
cmp
jo
outsb
icebp
fisubl
inc
cmp
sbb
and
pop
sti
cmp
fstpl
ljmp
xchg
cmp
mov
jle
xor
mov
icebp
pop
sti
jne
popf
jp
negb
jo
in
pop
add
shll
int3
aad
jb
faddl
cmc
adc
push
jg
jle
repnz
daa
lods
or
ljmp
sti
xchg
lods
xor
out
dec
adc
data16
sarb
jb
mov
scas
mov
xor
mov
jnp
incb
adc
xchg
mov
test
sub
enter
cmpsl
gs
cli
add
adc
insb
pop
dec
or
jne
ret
inc
and
xchg
fildl
pop
pop
ficoml
mov
mov
fdivrl
enter
lods
push
mov
xchg
add
lcall
cmp
xchg
xchg
out
mov
push
push
in
scas
sbb
xchg
add
pop
lret
fidivrl
add
or
mov
je
and
lods
or
pop
mov
jle
xchg
xchg
hlt
mov
mov
lock
push
daa
mov
jno
lret
rclb
inc
xchg
insl
xor
sbb
jno
inc
pop
call
xrelease
lcall
test
mov
mov
add
cwtl
inc
pop
push
je
leave
adc
cli
dec
fdivrl
jecxz
xchg
pop
sub
xor
adc
and
add
dec
mov
lods
stos
fcom
sbbb
or
sub
xor
leave
xchg
sub
mov
push
or
mov
scas
push
dec
or
mov
ret
mov
mov
lret
mov
into
stc
pop
or
xor
cwtl
mov
cmp
leave
xchg
push
add
mov
stos
sub
gs
mov
push
mov
dec
or
xlat
inc
adc
pop
movsb
xor
mov
xor
hlt
mov
sarb
add
mov
inc
adc
and
mov
rclb
jbe
inc
test
ret
lret
xlat
push
lds
mov
sahf
ds
scas
mov
scas
arpl
cmpsb
adc
rorb
push
into
and
sub
push
es
adc
lods
cs
stos
sub
enter
jle
lods
int
push
add
aad
stos
lcall
arpl
adcl
adc
lods
push
rcll
lea
fwait
rclb
xor
sar
iret
insl
jle
xor
das
stos
xlat
rcrl
rcl
and
test
xchg
inc
adc
mov
sub
das
push
jne
gs
adcb
mov
and
add
incb
test
sub
cmpsl
inc
clc
repz
fwait
cli
pop
test
mov
movsb
jmp
dec
or
divl
mov
jno
sbb
dec
insl
loop
arpl
cltd
cmp
das
sbb
or
lcall
in
push
out
imul
mov
push
fldl
mov
push
and
addr16
popa
insl
ljmp
and
jmp
add
jae
lcall
mov
loope
negb
add
pop
sbb
mov
pusha
lcall
out
stc
xor
loopne
jle
movl
xor
mov
lock
sbb
jnp
clc
xor
fistpll
pop
leave
add
sbb
dec
jg
clc
mov
ret
mov
and
cs
push
lds
mov
cmpsl
adc
js
inc
jmp
adc
inc
aad
mov
in
enter
jae
mov
arpl
cmpsl
adc
xlat
shrl
call
jmp
scas
mov
stos
pop
add
inc
push
xchg
js
mov
mov
sbb
xchg
movsl
dec
and
mov
mov
xchg
cmp
mov
pop
pop
faddl
movsl
or
roll
sbb
popf
push
add
or
imul
es
inc
adc
jae
xor
scas
push
add
xchg
fidivrs
add
pop
mov
movsl
add
dec
mov
jl
cltd
aaa
mov
add
aam
cli
push
sbb
adc
mov
popa
dec
push
rclb
adc
jnp
loop
icebp
bound
in
fidivrs
sub
lret
add
push
pushf
fdivp
pusha
jo
mov
popa
imul
int3
jl
push
mov
les
jecxz
adc
pop
pop
cmc
je
repnz
icebp
popa
xchg
ljmp
jecxz
or
adc
push
add
test
lock
js
cltd
in
pop
cld
rol
popa
hlt
ret
push
xor
andl
lahf
jne
xchg
push
inc
cld
mov
call
push
jge
jno
jl
or
mov
sti
dec
or
dec
popf
aaa
xchg
cmp
mov
lret
and
push
lret
xchg
inc
movsb
enter
mov
jae
cmpsl
dec
movsl
das
push
mov
lret
jecxz
pop
inc
jnp
addr16
xor
add
dec
or
pop
jg
pop
adc
lahf
test
int
rcr
repz
push
jmp
adc
mov
inc
or
cmp
lock
adc
inc
mov
subb
not
repnz
cwtl
jecxz
ja
into
jno
aas
fsts
inc
sub
and
test
push
sub
pop
cmpsl
mov
fchs
xor
adc
ljmp
out
mov
std
test
into
xchg
in
xchg
mov
stc
jl
cmp
push
stc
jle
cmpsb
sub
imul
jne
pusha
xor
push
lcall
cli
cltd
ds
pop
in
push
push
subl
xor
loope
sub
push
rclb
loope
enter
ret
aaa
popa
sbb
loope
and
push
out
inc
ss
outsb
add
mov
lea
fadds
in
xchg
cmp
jbe
out
outsl
movsl
popa
popf
inc
shll
lahf
out
jne
es
or
lods
sub
push
xlat
xchg
push
int
dec
rorl
sarb
cmp
out
and
iret
push
add
add
and
xchg
outsl
adc
xchg
cmpsl
ret
add
xor
jnp
in
xor
into
cmp
mov
adc
aad
pop
dec
mov
jg
repz
mov
dec
adc
sbb
arpl
and
mov
xor
fdivrl
fisubrs
sub
jbe
and
cmp
sbb
push
shll
inc
add
add
out
jb
push
jns
imul
jb
sahf
adcl
xor
mov
repz
or
xchg
aas
out
push
mov
vmread
push
add
push
fdivrs
mov
and
mov
in
int3
jle
ret
scas
pop
sub
into
daa
adc
clc
stos
add
in
in
mov
icebp
or
loop
adc
pushf
cmp
jne
in
sub
lcall
pop
sarb
out
fidivl
stc
or
cltd
dec
inc
pop
ror
adc
icebp
adc
sbb
pop
test
xchg
cmp
mov
xchg
mov
in
push
es
in
and
cwtd
and
movl
lock
sbb
daa
cld
pop
mov
scas
sub
xchg
sub
cltd
std
mov
das
mov
ljmp
cmp
mov
adc
sub
test
cmp
sbb
repnz
pusha
and
imul
aaa
jmp
pop
inc
test
in
je
fcmovnbe
jge
or
subb
cmpb
cmp
cltd
loope
hlt
loop
int3
xchg
ret
hlt
daa
lods
lds
push
clc
lods
adc
sbb
test
inc
or
imul
int
cmp
adcb
repnz
into
xchg
add
fnstcw
imul
lcall
add
icebp
xchg
sbb
mov
lds
jle
inc
or
outsb
xlat
jl
cmp
les
xchg
cmp
pop
enter
adc
sbb
fnstcw
add
or
sub
pop
gs
and
sti
out
xor
cmp
icebp
xor
and
sbb
push
jne
and
andl
pop
or
sbb
aam
dec
adc
cld
inc
pushf
cmp
push
ret
mov
cld
in
es
loop
testl
push
inc
adc
lock
push
out
std
std
mov
pop
in
clc
call
pop
jae
push
mov
leave
mov
cli
scas
cmp
loopne
pop
add
add
xchg
test
jle
enter
mov
loope
xor
arpl
cmp
orl
decb
iret
push
sahf
mov
rcrl
in
or
aaa
cwtl
test
test
xchg
jl
cmc
fs
gs
paddb
xor
cmpsl
int3
mov
adc
dec
aad
les
sub
popa
mov
mov
std
adc
mov
mov
std
sbb
hlt
data16
stos
sub
ret
jg
and
and
outsl
and
fstpt
and
push
xchg
lock
sti
out
or
mov
mov
outsl
out
sahf
jecxz
fnstenv
cli
push
pop
aam
mov
call
sbb
xlat
dec
int
rorb
leave
pusha
cmp
adc
xchg
xchg
cmp
or
ret
sbb
lock
mov
mov
lahf
fbld
fidivrs
pop
push
imul
xchg
rolb
test
push
jg
cmp
into
bound
cwtl
cmpsb
adc
test
mov
mov
gs
adc
cmp
and
aam
cmp
push
push
xor
mov
and
shr
je
or
mov
xor
mov
outsl
push
js
je
mov
inc
push
xchg
iret
cwtl
lea
lds
stos
cmp
fnsave
sub
xchg
jb
lea
adc
lcall
push
add
and
popa
sub
mov
je
sub
mov
subl
outsb
xor
push
jb
ljmp
cltd
inc
adc
in
std
scas
sub
mov
lock
lods
scas
mov
adc
sub
or
adcb
mov
cmpsb
loop
or
mov
adc
push
pop
add
fdivs
popa
inc
jg
cmp
cwtl
mov
xchg
xor
mov
scas
xor
cmpsb
add
pop
dec
in
outsl
sub
cmp
call
jo
mov
inc
add
fcmovb
pop
cs
jle
fs
mov
mov
aam
mov
and
mov
outsb
out
icebp
jns
stos
mov
push
add
mov
xchg
cltd
dec
or
jno
imul
imul
arpl
imul
add
pop
sub
jne
es
inc
jp
aad
mov
add
cmp
mov
test
roll
mov
mov
mov
out
xor
mov
adc
sub
lret
and
push
dec
cmp
stc
xor
jne
xor
daa
jo
into
jb
inc
push
lahf
outsl
js
inc
enter
inc
push
dec
stc
jl
mov
fwait
cmp
leave
cmp
outsl
xchg
jg
inc
mov
icebp
lret
and
push
ja
mov
outsb
addr16
or
mov
push
aam
arpl
jnp
add
push
mov
daa
test
cmc
dec
adc
jae
xorb
jle
and
dec
mov
jo
out
lret
add
movsl
xor
cmp
es
subl
mov
jae
pushf
pop
test
xorl
shll
pop
ljmp
adc
pop
adc
js
sub
fsubl
and
mov
dec
adc
outsb
dec
lds
jge
sub
mov
sub
aad
inc
or
pop
cli
sbbb
jo
push
add
lea
inc
sahf
ds
mov
pop
add
ret
cmp
fistpll
dec
in
imul
lret
mov
test
xchg
aad
out
and
rolb
in
orl
dec
or
imul
cmpsb
in
or
das
mov
andl
xchg
mulb
sarl
inc
or
mov
lcall
jp
xchg
mov
aad
mov
inc
test
mov
push
rclb
fcomi
add
cli
gs
call
mov
ss
orb
mov
fs
call
fcoml
int
gs
mov
and
jle
int
inc
adcl
dec
inc
adc
fsubs
mov
and
xor
add
arpl
popf
sub
enter
ret
sbb
test
adc
adc
sar
cmpsl
mov
xor
test
jp
push
mov
popa
arpl
and
leave
xor
jge
and
lods
sub
lods
fs
into
cmc
jge
lock
out
mov
mov
int
bound
jbe
push
add
outsb
outsl
in
push
inc
ret
nop
push
mov
sub
insl
lock
jb
jmp
push
jnp
jne
andl
or
fnstcw
push
mov
popf
ret
mov
xor
mov
and
mov
sarb
aam
and
push
jge
pop
xchg
inc
fstps
mov
push
and
xor
sub
aad
add
rcl
hlt
roll
sti
outsl
xchg
shr
xchg
inc
gs
lea
jnp
lods
mov
movsb
fnsave
jnp
push
cltd
add
insl
pop
vxorpd
mov
mov
cmp
jecxz
cmp
jle
jle
push
bswap
push
xlat
adc
lret
dec
out
shlb
lcall
aam
inc
mov
clc
pop
mov
test
nop
inc
sub
bound
cmp
dec
or
mov
cmc
fistpl
arpl
test
mov
mov
mov
add
jge
mov
jo
dec
adc
test
arpl
pop
mov
out
lcall
jbe
mov
pop
lret
cltd
sub
jle
lret
cmpsl
sub
xchg
mov
aad
subb
mov
xchg
cmpsb
imul
or
push
mov
cmp
dec
jbe
in
jno
bound
mov
repnz
xor
data16
stos
sub
mov
idivl
dec
or
popa
out
into
add
push
sti
pop
and
xor
jp
lret
push
cmpsl
add
fidivrl
pop
inc
adc
incl
ret
push
fisubrl
outsb
nop
xchg
inc
iret
jno
xor
or
ja
dec
push
push
mov
mov
add
fdivr
xchg
push
gs
jp
xchg
cmp
inc
and
je
cwtl
mov
in
adc
sbb
stos
cmp
jl
cmp
mov
mov
mov
ja
jg
imull
xor
rol
in
jno
sbb
je
pop
inc
adc
sbbb
ds
xlat
inc
add
or
sahf
cmp
push
xorl
sbb
cld
call
ficoml
es
gs
pop
cld
test
mov
lahf
jl
pop
clc
repz
and
adc
pop
rcll
roll
std
sub
sti
loope
dec
dec
out
dec
out
push
inc
stc
rcll
iret
roll
dec
in
incb
mov
and
arpl
mov
in
iret
adc
mov
and
xchg
shll
jp
jp
aam
mov
jmp
fdivl
daa
std
pusha
dec
cmpsl
test
pushf
test
cmp
lods
xor
pop
mov
mov
xlat
jns
mov
in
outsl
lret
adc
and
and
pop
sti
adc
dec
pop
clc
push
sub
pop
or
mov
inc
lods
sub
cmp
jle
aas
popf
push
push
push
add
jg
negl
inc
adc
push
inc
icebp
pop
ret
push
push
rcrl
inc
adc
or
xor
std
mov
add
xchg
pop
sub
repnz
enter
xchg
inc
fnsave
nop
inc
iret
dec
pushf
sbb
gs
inc
dec
xchg
inc
inc
pushf
pop
cli
adc
cld
pop
ret
jno
jmp
pop
aas
cwtl
out
jnp
cli
test
adc
hlt
mov
mov
test
aad
ja
mov
imul
fs
imul
dec
loope
stc
pop
inc
icebp
xchg
cmp
mov
in
push
js
into
sahf
dec
adc
adc
pop
stc
pop
pushf
fsubrs
stos
mov
mov
movsb
ss
xchg
aas
or
and
bound
mov
dec
adc
out
aam
mov
push
inc
mov
xchg
mov
xchg
add
mov
mov
xor
outsl
lock
loope
jmp
cmpsl
ss
std
cmp
rcrb
cmp
cs
addr16
idivl
cmp
and
rcll
imul
add
mov
inc
push
xchg
mov
popa
out
push
lea
push
dec
adc
adc
inc
dec
adc
sbb
cmp
fdivrl
ja
push
sub
pop
sti
ret
icebp
ret
sbb
jae
sbb
xor
pop
mov
xorl
dec
pop
or
lahf
ss
int3
mov
xor
nop
sub
ss
xchg
or
push
out
imul
pop
push
inc
xlat
test
ljmp
out
mov
xchg
cmp
mov
adcl
repz
and
es
sub
sahf
inc
mov
mov
dec
lods
cmpsb
jecxz
cmp
out
or
in
negl
ret
xchg
ljmp
test
jmp
js
sub
cltd
inc
and
dec
xchg
jl
jecxz
pop
add
add
push
ret
mov
gs
ja
and
xor
xchg
test
add
dec
call
bound
and
mov
push
jae
xchg
pop
pop
clc
pop
leave
or
pop
cmc
adc
or
lock
inc
in
stc
test
mov
hlt
xchg
add
into
xor
jnp
notl
jmp
loopne
mov
imul
add
dec
lcall
xchg
dec
popf
cmp
jno
je
xchg
jno
jl
mov
jp
imul
repz
or
cmpb
inc
sub
addl
pop
jl
in
mov
mov
cmp
mov
jle
incl
filds
cmpsb
mov
aaa
movsl
lret
stos
insb
in
pop
adc
adc
mov
xchg
lds
cmpsb
jne
aam
mov
mov
inc
cvtps2pd
cmp
fiaddl
incl
jge
sbb
push
aam
dec
addr16
cmp
aas
into
inc
or
aaa
jl
lret
aam
fmulp
mov
cmp
aam
movsb
cmp
std
loope
add
cmp
xor
jnp
clc
or
adc
cli
arpl
xchg
cmp
add
mov
inc
popa
mov
cmp
out
outsb
lahf
and
loope
cmpsb
repz
add
mov
les
icebp
scas
lock
pop
stc
fisubrl
push
out
sub
sub
pushf
sbb
push
add
inc
sbb
shl
lcall
xchg
test
dec
adc
mov
push
push
clc
mov
mov
mov
cmp
inc
insl
test
xchg
loope
xchg
and
jnp
pop
dec
adc
pop
in
adc
popf
inc
add
das
push
fwait
inc
pushl
mov
in
out
mulb
cmp
movsb
ret
xchg
mov
insb
ss
leave
xchg
xor
pop
push
sbb
dec
push
clc
ja
in
jno
arpl
inc
pop
js
xchg
lock
repnz
into
mov
in
mov
jae
les
insl
and
jns
rcrl
jb
sub
cmp
sar
les
sti
dec
pop
shl
ret
xchg
sub
test
sti
cmc
jnp
sbb
pop
incb
fmulp
mov
sbb
sbb
das
xchg
pop
cli
arpl
adc
xorl
xchg
imul
mov
mov
jl
push
mov
ds
rolb
mov
pop
clc
subl
jmp
push
sbb
lret
sub
jle
xor
push
pop
and
mov
and
pop
into
loope
in
imul
cmpsl
popf
jg
adc
lret
pop
fs
in
xor
xorl
pop
int3
xchg
test
xchg
bswap
loop
sbbl
cmp
sub
int
sbb
inc
ljmp
pop
fisubs
mov
rolb
adc
xor
adc
adc
jg
rcll
mov
adc
xchg
fmull
icebp
les
mov
les
or
xlat
out
jb
or
dec
rorl
fmuls
jp
sbb
sub
and
push
jle
imul
fildl
loopne
clc
in
mov
cmpsl
lods
sar
pop
xchg
mov
and
int
adc
hlt
movsb
xor
add
out
repnz
or
or
rolb
jmp
mov
aam
in
fimull
push
add
movsb
and
push
ds
outsb
jnp
nop
mov
dec
inc
test
mov
ds
xor
or
in
pop
inc
pop
int
dec
adc
sbb
loop
int
lret
sbb
je
imul
push
stc
pop
pop
cli
inc
loop
cmp
lcall
jmp
call
out
loop
jmp
out
dec
loop
lds
insl
movsl
fwait
test
mov
add
ror
lea
push
jns
imul
cmc
pop
faddl
mov
mov
add
inc
es
test
adc
jge
xchg
push
or
bound
subb
xor
and
mov
out
movsl
sub
adc
xchg
xchg
jae
jl
dec
loop
inc
or
mulb
add
mov
jle
add
les
xor
inc
or
xchg
mov
sub
rcrl
push
clc
xchg
cmp
test
xchg
cmp
mov
inc
or
xor
stos
cltd
fildl
aam
jb
roll
mov
mov
rorl
jbe
cmp
rolb
push
les
cltd
aaa
sbbb
xor
ljmp
popl
sbb
xor
stos
dec
ss
cmpsl
mov
dec
or
xor
push
popf
gs
xchg
pusha
and
pop
cmpb
pop
inc
pop
movsb
pop
or
mov
stos
clc
bound
jno
jnp
push
jb
sub
aas
cmc
push
mov
mov
pop
cli
fidivrl
out
bswap
lret
mov
cmp
fistl
mov
or
cmp
jecxz
cld
sbb
dec
in
pop
int3
push
ret
sbb
xchg
dec
adc
mov
inc
or
in
mov
mov
stc
inc
push
out
or
cmp
cld
bound
fbld
cmp
pusha
cmc
dec
jno
jle
xchg
roll
es
push
jo
add
cmp
data16
or
ja
push
cli
fldenv
andb
cmp
aas
dec
pop
push
stc
in
inc
or
add
sahf
adc
test
mov
dec
fistps
bound
fisttps
int3
xor
cmp
sbb
add
mov
imul
cmc
xor
xor
call
les
sahf
int3
pop
add
into
and
int3
sbb
sub
outsl
scas
sub
cli
push
xchg
cmp
mov
inc
daa
sub
fisubrl
rclb
notl
rcll
mull
or
stos
aam
outsb
ljmp
sub
in
mov
push
inc
loopne
leave
dec
cwtl
aad
aad
arpl
or
mov
rcrb
scas
dec
pop
fidivrs
popf
fdivs
fwait
lds
push
mov
inc
fnstcw
imul
ja
fldenv
mov
ret
hlt
fidivl
mov
mov
jle
cmp
pop
fisttpl
xchg
ficoms
push
enter
xchg
fwait
sub
clc
enter
or
pop
arpl
adc
sarb
inc
scas
xor
or
xor
outsb
dec
jge
jp
cmpsb
outsb
movups
fs
and
bound
xchg
pop
andl
aam
mov
orl
add
sbb
dec
mov
lods
xor
lahf
out
ret
adc
fcoml
iret
xchg
lret
repz
and
mov
mov
lcall
cmc
mov
ret
xchg
pop
and
roll
imul
jb
scas
mov
aad
pop
scas
push
lods
fidivrs
push
popf
jo
cld
gs
xor
arpl
mov
pop
jbe
addr16
pop
xor
lcall
and
mov
ret
icebp
fistpl
arpl
dec
add
xor
jbe
xor
stos
add
add
adc
aaa
lock
mov
ljmp
inc
add
stos
sahf
jo
orl
cmp
xchg
push
es
lret
dec
aas
mov
cmp
mov
movsb
lret
mov
xchg
add
test
mov
fs
in
jbe
adc
into
mov
xlat
data16
push
subb
pushf
cmp
rcrb
mov
neg
ja
jp
xchg
loop
cmp
inc
jnp
pop
sbb
add
mov
js
pop
repz
ds
notl
sub
pop
or
aas
popf
pop
aad
dec
int
cmp
lahf
mov
sbb
pmullw
bswap
xchg
dec
adc
mov
or
sbb
dec
in
sub
popf
leave
xchg
lds
adc
sbbl
xor
xchg
jbe
les
ret
mov
mov
and
jne
orb
pushf
inc
out
or
cmpsb
repnz
mov
fstpl
add
push
sti
arpl
xorl
jl
mov
insb
mov
rorl
stos
sub
push
push
add
and
les
lret
icebp
ret
adc
jno
enter
adc
std
cltd
pop
sti
lcall
inc
or
jmp
push
jecxz
cwtl
leave
dec
pop
mov
test
addl
pop
jae
sub
js
les
dec
mov
inc
adc
pop
clc
call
hlt
lcall
jbe
fwait
sub
out
loop
add
xor
push
add
sub
lea
in
sti
sbb
pop
dec
inc
arpl
popa
xchg
les
mov
sbb
lds
adc
mov
or
iret
test
cmp
dec
inc
dec
or
cwtl
xchg
mov
cmpl
pop
test
and
pop
repz
inc
adc
lock
pop
jge
sub
jle
or
xlat
xor
cmp
js
scas
fnsave
leave
push
shll
cli
mov
mov
outsl
mov
orb
mov
je
nop/reserved
cmp
push
mov
mov
iret
or
pop
add
dec
ja
hlt
mov
fstps
sbb
outsb
pop
xchg
inc
jmp
mov
test
jb
daa
cmp
ret
sbb
scas
pop
dec
out
jne
pop
mov
aas
dec
rdtsc
inc
je
mov
mov
inc
lcall
cmpsl
push
push
xchg
xchg
jns
or
cmp
or
fisubrl
mov
or
call
je
jnp
xor
mov
clc
add
sbb
jo
testl
sarb
inc
pop
cmp
dec
adc
sti
push
jbe
cmpsl
lock
lar
ret
pop
push
cli
es
popa
cs
sbb
cmp
scas
insb
out
rcrl
xor
popa
imul
pop
add
jecxz
xchg
mov
xor
mov
mov
and
gs
xchg
xchg
cmp
into
and
push
cmp
testl
adc
inc
hlt
popa
bound
imul
lods
dec
test
xchg
lahf
lahf
orl
inc
pop
or
jo
mov
sti
cmp
adc
movsb
callw
faddl
shr
cld
pop
sbb
fstpt
inc
aad
movsl
xchg
fidivrl
mov
xchg
xchg
dec
dec
or
adcb
pop
jne
add
les
adc
and
jg
pop
test
pop
add
mov
shrb
mov
cltd
jmp
jo
lcall
pop
popf
out
jge
ret
aas
roll
and
inc
cli
and
loope
call
push
lds
int3
jl
mov
int3
mov
mov
inc
xlat
and
inc
cmp
test
cmpsb
outsb
aad
sub
dec
cmc
sarb
pushf
lods
ss
cmpsb
xchg
cmp
add
jl
std
popf
and
leave
js
nop
cmp
insl
in
jbe
push
adc
stc
into
push
add
negl
mov
cs
in
orb
push
stc
push
daa
sub
sub
test
imul
cs
mov
push
dec
out
test
mov
les
hlt
sub
and
inc
dec
fbstp
add
leave
mov
test
sbb
ds
cmp
pop
repz
nop
rclb
jp
out
fidivs
or
xchg
push
mov
mov
scas
aad
loope
cmp
or
hlt
mov
push
adc
mov
xor
xchg
sub
dec
in
es
pop
dec
insb
add
into
gs
mov
in
cmp
test
and
inc
pop
js
sub
mov
les
cmc
in
add
dec
and
fwait
nop
ds
mov
pop
repz
rcrl
jp
data16
jbe
xchg
xchg
call
or
cmp
cmp
lea
pop
out
adc
xor
xchg
sub
ja
jecxz
cmpsl
mov
fxch
push
sti
cli
shrl
sbb
out
xchg
cmpsl
mov
ret
lds
sub
and
in
dec
inc
dec
loopne
push
cltd
fwait
xchg
addr16
mov
test
inc
cmp
hlt
xchg
mov
pop
shlb
jbe
pop
lcall
pop
mov
mov
lods
insl
cmp
or
cmc
mov
sub
pop
push
adc
scas
cmpsb
xor
xlat
rclb
out
and
dec
push
dec
insl
add
ja
test
and
lret
cld
icebp
test
mov
jbe
sub
mov
ret
repz
inc
cmp
mov
cltd
mov
mov
loopne
hlt
adc
ret
xor
fs
loopne
xchg
test
xchg
out
mov
or
sbb
insb
pop
pop
cmp
mov
mov
rcll
test
pushl
xor
push
push
xchg
sub
jbe
in
movsl
mov
xlat
enter
clc
shrl
sbb
and
out
xchg
test
mov
ret
hlt
lock
and
in
dec
inc
dec
loopne
imul
inc
mov
test
push
inc
xlat
aas
cmp
cmc
xchg
mov
pop
mov
jbe
push
fwait
xor
xor
xchg
fs
mov
mov
lods
xlat
outsb
cmp
or
testb
push
adc
test
or
movsl
xor
into
xchg
sub
clc
push
out
and
add
cmpsl
popf
mov
iret
enter
lock
inc
and
mov
jne
sub
lahf
xchg
out
enter
icebp
jmp
incb
and
xchg
lea
mov
fistps
adc
pop
xor
pop
loopne
xchg
test
xchg
in
mov
mov
sub
insl
pop
pop
cmp
mov
mov
rclb
test
das
and
push
push
xchg
sub
jne
in
mov
insb
add
not
push
dec
dec
out
xchg
test
movsb
int
pop
repz
sub
pop
adc
dec
loopne
push
addr16
mov
test
or
mov
notb
mov
adc
fstp
jbe
add
std
xchg
bound
push
mov
fsubrs
aad
rolb
push
lea
sub
pop
push
adc
cmpl
lods
movsb
xor
aad
xchg
sub
notb
daa
and
add
cmpsb
fwait
mov
int
out
test
out
stos
inc
and
or
pop
jae
sub
sahf
xchg
out
mov
add
sbb
push
mov
xchg
mov
mov
fstpl
push
or
pop
cmp
pop
loope
nop
sbbb
jecxz
mov
mov
sub
insl
pop
push
cmp
mov
mov
into
adc
sub
dec
xchg
sub
movsb
mov
insl
add
hlt
shrb
sbb
jns
stos
inc
sahf
lcall
icebp
in
sub
sbb
ds
loope
add
nop
push
mov
adc
inc
fnstcw
pusha
testl
fneni(8087
ja
add
xchg
pusha
push
mov
mov
test
cmp
add
testl
cmpl
lret
xchg
sub
hlt
push
call
push
inc
outsl
push
js
shrl
cltd
lea
imul
stos
inc
push
sbb
movsl
dec
aas
leave
pusha
jno
sub
pushf
xchg
out
les
add
add
and
xchg
mov
mov
fistpl
or
les
sub
loop
popl
add
add
xlat
outsb
pop
push
cmp
mov
int3
adc
sub
xor
push
dec
xchg
jle,pn
push
out
lahf
mov
rol
outsb
add
and
lea
inc
icebp
mov
stos
inc
pushf
cwtl
xsha1
cmpsb
leave
mov
sub
jg
cmp
loop
fs
popf
xchg
mov
shlb
push
adc
inc
fidivrl
xor
cmp
pop
popa
clc
mov
jg
loope
or
sahf
xor
pop
push
mov
mov
cmpsl
fidivl
sarb
rolb
sti
clc
sub
dec
push
lods
jg
ja
test
lret
cld
repnz
jmp
push
inc
jo
jbe
shrb
xchg
mov
imul
lods
inc
sbb
xsha1
cmpsb
dec
cmp
sub
jg
mov
push
popf
adc
push
inc
xor
mov
xchg
xchg
mov
fldenv
or
lds
jle
pop
pop
jecxz
mov
xor
sarl
mov
and
outsl
push
push
ds
ja
lea
lret
sti
clc
jp
sub
cwtl
das
jge
push
call
rol
outsl
push
repz
aam
and
repnz
lods
inc
lcall
popa
in
jmp
jmp
jecxz
bound
sahf
xchg
lea
mov
loopne
pop
adc
inc
fstpt
xor
stc
mov
adcb
jns
lcall
xchg
pop
push
mov
mov
movsl
fidivl
sarl
add
clc
sub
icebp
push
dec
push
lods
jge
js
test
xor
iret
leave
xchg
sub
and
jo
je
shrl
xchg
mov
cmc
call
adc
insl
imul
jg
mov
push
popf
adc
imul
xor
fs
mov
xchg
test
mov
cmpsl
ds
pusha
testl
sub
pop
pop
in
lea
scas
scas
add
add
and
push
push
aas
test
lea
enter
idivl
sub
xor
dec
dec
cltd
xor
call
iret
mov
aad
and
mov
jne
lods
inc
cwtl
xchg
adc
jmp
das
sbb
dec
in
pusha
pop
sahf
xchg
mov
mov
fisttps
xor
stc
mov
adcb
fsub
jp
std
sahf
xor
pop
push
mov
mov
mov
cmp
repnz
dec
push
lods
jnp
jns
cmpsl
pushf
xor
int
xchg
cs
out
push
jmp
dec
inc
jo
jb
aam
mov
ret
hlt
out
inc
sbb
adc
imul
cltd
mov
jg
mov
push
popf
adc
and
bound
and
mov
aas
in
pusha
testl
daa
jle
pop
pop
in
mov
xor
mov
mov
push
push
aas
xorb
mov
adc
adc
sbb
dec
dec
cltd
xor
push
jmp
int
jo
lock
aad
and
es
inc
repz
lods
inc
xchg
xchg
adc
ljmp
cmpl
pop
or
mov
fisttpll
fdivl
push
arpl
xchg
sbbl
or
lahf
ss
cwtl
pop
dec
mov
mov
mov
cmp
nop
daa
and
dec
pop
scas
jns
jp
movsl
lcall
clc
in
push
ljmp
jno
jo
aad
lahf
xchg
es
shl
repnz
inc
push
adc
test
imul
cmpb
sahf
push
or
cmp
pop
mov
nop
addl
jecxz
popa
clc
add
enter
jg
push
pop
out
mov
xor
stos
add
fmul
mov
mov
push
dec
inc
xlat
xorb
movsb
mov
push
lods
div
jl
and
inc
lcall
cltd
mov
or
in
insl
push
adc
mov
scas
inc
xchg
xchg
adc
call
or
cmpb
in
pop
or
mov
fisttpl
fnsave
cs
pusha
push
fs
test
sbbb
aam
jnp
cli
mov
cltd
pop
dec
mov
mov
mov
ds
repz
xchg
and
inc
sbb
mov
les
jmp
sbb
or
insl
popf
nop
daa
sarl
inc
adc
adc
addr16
xchg
mov
cmpl
or
cmp
mov
mov
shll
add
leave
pusha
xor
push
out
mov
xor
fcmove
mov
mov
dec
dec
inc
fdivrs
stc
nop
mov
ret
pop
scas
hlt
icebp
jge
and
ss
inc
fwait
xor
push
jmp
xchg
mov
or
ljmp
inc
cmp
scas
inc
xchg
nop
adc
out
xor
adc
in
cmpl
dec
out
pop
or
mov
fidivs
sub
inc
pop
push
gs
cmpl
mov
sbbl
shl
jl
clc
mov
lcall
and
ror
aas
sti
icebp
sti
xchg
and
sbb
mov
ret
hlt
call
mov
or
outsb
fwait
lea
mov
loopne
inc
adc
adc
inc
xor
fs
leave
xchg
xchg
cmpb
or
cmp
daa
mov
mov
fsubrl
iret
arpl
add
lret
and
jg
je
cmpsb
cmpsl
push
popf
fadd
mov
mov
dec
dec
inc
fnstcw
xchg
mov
rcrl
repnz
jle
and
into
inc
inc
pushf
xor
in
xchg
xchg
mov
or
call
xchg
sub
cmp
lea
mov
xchg
mov
mov
loopne
leave
adc
in
test
xor
arpl
mov
mov
sub
mov
or
inc
fisubrs
sub
cld
cmpl
sbb
shl
jge
mulb
fwait
push
dec
mov
mov
into
leave
inc
xlat
cli
out
sti
xchg
and
testb
mov
outsb
jge
mov
rcrl
pop
adc
jae
push
fsubrs
mov
in
fisubrs
lods
inc
xor
arpl
lret
jmp
mov
push
call
or
jo
cmp
daa
mov
mov
fsubrl
arpl
dec
popa
xor
sbbb
push
call
aaa
movsl
movsl
push
popf
mov
mov
dec
dec
inc
fnstcw
sti
xchg
lahf
fwait
pusha
test
in
jle
pop
adc
iret
inc
inc
pushf
xor
push
in
xchg
xchg
mov
or
out
outsl
sbb
xchg
sub
pop
mov
nop
mov
mov
fidivs
leave
syscall
out
test
xor
popa
pop
or
mov
sub
fcmovnbe
mov
pop
std
dec
fildll
sub
std
cmpb
mov
out
add
mov
fwait
push
dec
rclb
and
int
inc
xlat
clc
out
cld
xchg
and
pop
testb
mov
insb
jge
sahf
xchg
cmp
les
push
in
push
adc
or
fsubrs
mov
jmp
mov
prefetchwt1
bound
lret
in
xorl
or
sub
mov
mov
int3
fs
std
std
lret
pop
sbbl
push
call
cmp
mov
mov
dec
inc
inc
fnstcw
cld
xchg
sahf
cltd
pusha
test
jmp
adc
inc
ds
xor
push
out
xchg
xchg
mov
or
in
outsl
push
or
imul
stos
mov
fdivl
leave
or
cs
out
push
or
add
fcmovbe
mov
add
daa
stos
inc
pop
dec
addr16
jg
enter
test
int
jge
repz
pushf
push
inc
rcrl
and
lret
lds
imul
std
xchg
push
sbb
dec
aas
sbb
pushf
xchg
cmp
ret
xor
jecxz
out
adc
mov
or
fnstenv
mov
mov
lods
cmp
iret
pushaw
pop
xor
mov
push
jmp
add
es
push
push
xchg
fisubrs
lret
sti
sti
lret
bound
dec
jmp
cmp
ret
rclb
and
jbe
inc
inc
fidivl
std
xchg
pushf
xchg
popa
clc
enter
out
jmp
cmp
inc
cmp
xor
bound
xchg
mov
or
adc
xchg
sub
xor
mov
lea
shrl
fidivl
lret
lock
push
call
xchg
push
mov
sub
fcom
lea
cli
dec
loope
and
push
pusha
stos
sahf
xchg
std
icebp
movsb
cmp
pop
push
popf
push
inc
ret
jno
mov
leave
ret
inc
fxtract
ljmp
inc
cmp
jg
lcall
xor
loope
out
adc
mov
or
xchg
xchg
out
mov
or
pop
scas
cmp
addr16
pop
xor
test
rorb
add
jb
xor
rcll
daa
test
fbld
enter
stc
int3
arpl
sbb
cmpl
or
repz
es
inc
inc
inc
xchg
lcall
mov
out
pop
sbb
cmp
aas
cmp
lock
lea
in
fidivl
push
xchg
sub
gs
mov
mov
shrb
fdivs
or
icebp
mov
sub
pop
push
montmul
cmpsb
test
scas
movsl
sub
and
sub
lods
inc
push
dec
imul
test
xchg
iret
leave
call
cmp
sbb
ret
pop
jne
and
js
roll
jmp
stc
inc
cmp
mov
data16
mov
sarb
loopne
lock
ja
fs
test
nop
in
mov
or
sbb
pop
pop
ss
jle
xchg
rorl
or
and
ret
nop
daa
xorl
cmpsl
movsb
scas
inc
enter
test
sbb
jl
movsb
cmp
rol
repz
es
inc
inc
inc
call
les
adcb
push
cmp
aas
cmp
icebp
xchg
mov
in
fidivl
push
xchg
cmp
clc
arpl
dec
mov
push
xor
pop
add
mov
sub
pop
push
adc
lods
movsl
cs
mov
sub
lods
inc
push
dec
push
jnp
lret
bound
jmp
cmp
dec
inc
les
insl
es
mov
add
inc
cmp
mov
sbbl
mov
ficomps
ud2
mov
punpckldq
jae
adcl
jecxz
mov
or
shrb
push
aaa
into
mov
scas
test
push
movsl
add
jae
and
push
dec
xchg
sub
mov
push
fs
sbb
cmpb
cmp
fwait
or
icebp
in
daa
mov
inc
aas
inc
fdivl
add
ret
mov
jecxz
sbb
ss
ss
mov
adc
jb
add
nop
popa
push
mov
mov
aam
fcmovnbe
xor
mov
daa
push
ljmp
jno
stos
mov
es
hlt
dec
jecxz
and
add
int3
arpl
ljmp
sbb
mov
jno
daa
mov
les
add
inc
aaa
push
mov
arpl
sarl
fistpl
or
mov
maxps
je
adcb
loop
mov
add
shrb
push
cmp
xchg
xchg
int3
push
movsl
std
cli
je
sub
sub
sub
dec
loop
mov
imul
and
inc
in
cmpl
cmp
lret
pop
out
jmp
mov
inc
cmp
add
shlb
sbb
or
aad
xor
aaa
pop
pop
repz
jp
fdivl
add
xchg
pop
push
mov
xchg
aad
ss
sti
repz
dec
adc
test
lret
cld
repnz
in
push
scas
inc
push
inc
imul
jno
mov
jmp
imul
cmpsl
ds
or
outsl
push
mov
ret
fucomp
jecxz
cwtl
adc
gs
inc
xor
sbbl
xchg
cmp
fstps
or
rclb
jns
pop
pop
fidivs
jle
cs
cld
xchg
loopne
mov
add
sbb
push
push
cmp
test
mov
lret
sti
clc
jne
sub
xchg
sub
dec
jecxz
sahf
mov
rol
push
repz
iret
and
in
test
cmpsl
ds
pop
in
jmp
in
inc
cmp
insb
bound
cltd
xchg
lea
mov
filds
cmp
mov
hlt
mov
jnp
fstp
fnsave
cltd
xor
sub
xchg
pop
push
mov
test
mov
movsl
aad
xlat
shll
into
add
repz
and
in
push
dec
adc
test
das
cmp
imul
insb
dec
xchg
out
das
and
fdivs
add
fcomip
xchg
and
jl
aas
rcrb
add
insb
lods
xchg
adcb
cmp
inc
in
sub
fsubrl
mov
out
test
xor
add
lret
add
add
stc
cwtl
ret
cmc
lods
sub
dec
and
add
or
sub
jnp
loopne
mov
pushf
add
das
xchg
jle
insb
xchg
sbb
outsb
fwait
or
in
mov
mov
pop
test
and
push
or
mov
add
add
pop
adcl
sbb
lret
popf
and
and
and
shl
sbb
leave
or
ljmp
fstpt
dec
pop
movsl
add
cmpsb
xchg
std
push
jno
ss
dec
push
rclb
ret
mov
sbb
fmuls
imul
rol
jne
lds
jmp
mov
jmp
xchg
and
mov
or
jge
xor
dec
aam
dec
pop
adc
push
cmp
cs
stc
cmp
mov
sbb
cmpsl
sub
pop
add
fldl
insl
push
xor
iret
int3
loopw
mov
mov
push
movsb
cmc
xor
cmpsl
or
and
xor
movsl
cmp
movsl
imul
cmp
cmpb
push
jecxz
jo
xor
sbb
or
jp
rcll
ficoml
lods
inc
fnstenv
out
das
ficomps
xchg
mov
xchg
incl
test
mov
mov
dec
sti
idivb
clc
and
jg
push
inc
lret
inc
jl
jae
stc
lret
xor
jp
subl
cwtl
mov
aaa
das
fcompl
cmp
filds
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
faddl
movsl
subb
scas
fucompp
jnp
push
jge
xlat
shr
and
sbb
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
rcr
les
inc
lahf
sbb
aam
add
add
loopne
scas
into
cmpsl
or
or
movsl
push
mov
mov
shrl
or
fwait
movsl
push
or
lds
mov
push
jge
loope
mov
out
add
outsb
pop
sarb
scas
mov
and
pop
mov
mov
stos
clc
and
icebp
lds
xor
cmp
push
mov
dec
fldenv
arpl
jae
popf
adc
mov
sbbl
push
xchg
int3
pop
popa
loop
and
xor
nop
lret
add
push
lods
fcomip
das
and
mov
leave
ret
adc
test
mov
inc
lods
out
test
pop
dec
repz
mov
mov
xor
jmp
shr
push
mov
sub
mov
int
mov
rorl
loope
stc
cmpsl
orl
out
jmp
divl
inc
fdiv
push
pusha
out
sbb
cld
cmp
outsl
jmp
fidivs
or
jecxz
jle
lea
xchg
ret
push
inc
xlat
scas
je
fnsave
cmp
xchg
subl
xchg
mov
pop
xchg
js
frstor
push
lcall
jb
mov
sbb
loop
sbb
loope
pop
lret
push
push
sub
dec
mov
fildl
jecxz
jne
inc
insb
scas
jne
aad
and
leave
xor
cmp
inc
movsl
xchg
je
loope
dec
sahf
mov
mov
test
xor
test
cmc
aad
mov
mov
cwtl
leave
rclb
cltd
lret
adc
push
inc
insb
push
in
gs
add
or
stc
jp
movsl
mov
xchg
add
cmp
mov
sbbl
stos
xchg
rolb
test
push
lds
mov
out
rcll
pushf
fcmovnb
aas
cmp
