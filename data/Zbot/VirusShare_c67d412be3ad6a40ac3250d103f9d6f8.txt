pop
int
add
add
insb
int
add
add
mov
add
lcall
add
add
fcmove
add
mov
add
lcall
add
into
add
inc
into
add
push
into
add
push
add
jle
add
lcall
add
into
add
call
into
add
or
add
sbb
add
sub
add
ds
add
push
iret
add
outsb
iret
add
test
add
sahf
iret
add
mov
add
fmul
add
out
add
dec
add
push
rolb
add
rolb
add
rolb
add
rolb
add
add
pop
rolb
add
add
jle
add
mov
add
cmpsb
rolb
add
add
in
add
rolb
add
roll
add
roll
add
roll
add
add
push
roll
add
add
jb
add
jle
add
mov
add
ret
add
add
add
int
add
lea
pop
test
inc
add
inc
add
xor
add
add
add
jno
add
inc
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
sbb
or
add
rcrb
inc
add
add
add
add
add
sbb
adc
add
rclb
inc
add
add
add
add
add
pop
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
adc
add
cmp
add
add
add
adc
and
add
loopne
inc
add
add
rclb
add
add
movsb
adc
jp
add
mov
inc
add
add
add
add
add
inc
add
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
add
and
add
inc
add
add
add
mov
add
push
enter
add
add
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
movzbl
mov
add
movsbl
xor
mov
add
mov
jmp
mov
leave
ret
push
xor
mov
mov
mov
lods
mov
pop
ret
push
mov
push
andl
cmpl
je
mov
add
movsbl
test
je
mov
inc
mov
jmp
mov
leave
ret
push
mov
push
cmpl
jne
cmpl
je
or
jmp
cmpl
je
cmpl
jne
xor
inc
jmp
cmpl
jne
cmpl
jne
xor
jmp
cmpl
jne
cmpl
jne
mov
movsbl
mov
movsbl
sub
mov
jne
mov
movsbl
test
je
mov
inc
mov
mov
inc
mov
jmp
jmp
cmpl
jne
pushl
call
mov
cmpl
jne
pushl
call
mov
mov
cmp
jne
cmpl
je
cmpl
jne
mov
sub
mov
jmp
andl
jmp
mov
inc
mov
mov
cmp
jge
mov
movsbl
mov
movsbl
sub
mov
je
jmp
mov
inc
mov
mov
inc
mov
jmp
mov
xor
cmpl
setg
lea
neg
sbb
and
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
pushl
push
lea
push
call
pushl
push
lea
push
call
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
xor
call
leave
ret
push
mov
sub
mov
mov
add
mov
mov
add
mov
mov
mov
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
mov
mov
add
mov
lea
mov
cmpl
je
push
push
mov
mov
add
push
pushl
call
test
jne
mov
mov
add
mov
lea
mov
mov
mov
add
mov
movzwl
lea
mov
mov
mov
add
mov
jmp
jmp
xor
leave
ret
push
mov
sub
mov
xor
mov
andl
andl
jmp
mov
inc
mov
cmpl
jae
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
mov
mov
add
mov
xor
divl
mov
movzbl
add
xor
mov
div
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
jmp
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
xor
mov
div
mov
mov
mov
add
mov
xor
mov
div
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
mov
add
xor
mov
div
mov
add
movzbl
xor
mov
add
mov
jmp
mov
mov
xor
call
leave
ret
push
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
xor
inc
jmp
mov
sub
mov
mov
cmpl
jne
xor
inc
jmp
mov
mov
add
mov
mov
cmpl
je
mov
mov
sub
shr
mov
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
mov
movzwl
sar
mov
mov
mov
movzwl
and
jns
dec
or
inc
mov
movzwl
test
jne
jmp
movzwl
cmp
jne
movzwl
add
mov
mov
mov
add
movzwl
add
mov
mov
mov
jmp
xor
jmp
jmp
mov
mov
add
mov
jmp
xor
inc
leave
ret
push
mov
sub
mov
mov
add
mov
mov
cmpl
jne
xor
inc
jmp
mov
mov
add
mov
mov
cmpl
je
mov
mov
add
push
call
mov
cmpl
jne
mov
mov
add
push
call
mov
cmpl
jne
xor
jmp
mov
cmpl
je
mov
mov
add
mov
jmp
mov
mov
add
mov
andl
mov
cmpl
je
mov
mov
add
mov
cmpl
jae
mov
movsbl
test
je
mov
inc
inc
push
pushl
call
mov
jmp
movzwl
push
pushl
call
mov
mov
cmpl
je
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
xor
inc
leave
ret
push
mov
sub
andl
andl
cmpl
je
mov
mov
mov
movzwl
cmp
jne
mov
mov
mov
mov
add
mov
mov
add
mov
mov
cmpl
jne
push
push
mov
pushl
push
call
mov
cmpl
je
push
pushl
pushl
call
add
push
pushl
mov
mov
add
push
call
add
mov
movzwl
imul
push
mov
add
push
mov
mov
mov
lea
push
call
add
mov
cmpl
jbe
mov
mov
sub
push
mov
add
push
mov
add
push
call
add
andl
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
add
mov
mov
mov
add
mov
mov
mov
pushl
mov
mov
mov
add
push
mov
mov
mov
add
push
call
add
jmp
pushl
call
test
jne
push
push
pushl
call
andl
jmp
pushl
call
test
jne
push
push
pushl
call
andl
jmp
mov
mov
mov
mov
mov
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
call
call
call
call
pushl
push
lea
push
call
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
call
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
push
call
mov
andl
push
push
pushl
call
mov
call
pushl
pushl
call
mov
call
pushl
call
mov
call
pushl
pushl
call
mov
pushl
push
call
mov
cmpl
jne
push
call
mov
mov
push
pushl
lea
push
pushl
call
mov
call
call
call
call
call
call
lea
push
pushl
call
mov
cmpl
je
push
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
push
push
call
mov
pushl
push
call
push
call
mov
mov
mov
add
mov
mov
cmpl
jne
push
call
push
call
xor
jmp
xor
pushl
call
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
call
mov
cmpl
je
call
push
call
call
call
call
call
call
call
mov
xor
call
leave
ret
push
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
pop
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xchg
nop
xchg
mov
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
aaa
mov
and
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
hlt
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
mov
pop
mov
mov
js
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
lock
adc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
nop
mov
cwtl
mov
mov
mov
mov
inc
add
mov
rorl
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
mov
hlt
mov
add
inc
add
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
int3
int3
int3
int3
int3
int3
incl
add
add
add
add
decl
mov
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
inc
add
incl
add
add
incl
add
add
incl
add
add
sahf
inc
add
incl
add
add
sahf
inc
add
incl
add
add
incl
add
add
incl
mov
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
lcall
stos
inc
add
stos
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
ljmp
add
add
adc
add
lock
add
add
pusha
int
add
add
add
mov
add
lcall
add
add
fcmove
add
mov
add
lcall
add
into
add
inc
into
add
push
into
add
push
add
jle
add
lcall
add
into
add
call
into
add
or
add
sbb
add
sub
add
ds
add
push
iret
add
outsb
iret
add
test
add
sahf
iret
add
mov
add
fmul
add
out
add
dec
add
push
rolb
add
rolb
add
rolb
add
rolb
add
add
pop
rolb
add
add
jle
add
mov
add
cmpsb
rolb
add
add
in
add
rolb
add
roll
add
roll
add
roll
add
add
push
roll
add
add
jb
add
jle
add
mov
add
ret
add
add
add
int
add
add
add
gs
lret
add
popa
jo
insb
insb
outsl
arpl
iret
add
popa
jo
jb
add
inc
add
je
jb
arpl
fs
jae
add
cmp
dec
outsl
popa
fs
imul
add
adc
dec
outsl
fs
gs
popa
outsb
fs
gs
add
in
add
imul
jb
gs
add
imul
insb
insb
outsl
arpl
add
add
imul
jae
xchg
add
je
imul
je
add
push
dec
inc
dec
xor
cs
insb
add
jmp
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
push
xor
cs
insb
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lret
arpl
gs
outsl
imul
add
gs
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
arpl
gs
outsl
imul
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
popa
je
add
cmpsl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
roll
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
fs
add
popa
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
add
add
add
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
add
xor
pop
pusha
push
nop
xchg
cwtl
pushf
mov
mov
mov
enter
rcl
aam
fcomp
loopne
in
call
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
pop
and
and
and
and
and
and
daa
sub
sub
sub
sub
sub
sub
das
xor
xor
xor
ss
cmp
cmp
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
dec
out
mov
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
sub
mov
inc
add
mov
inc
add
mov
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
inc
add
and
cld
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
add
add
add
inc
add
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
add
add
add
add
ljmp
shr
add
ljmp
shr
add
ljmp
add
add
add
add
xor
inc
add
and
nop
and
inc
add
ljmp
add
add
add
add
incl
add
add
add
add
add
add
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
sub
inc
add
add
add
add
add
add
add
add
in
inc
add
and
or
inc
add
add
add
add
add
add
add
add
add
add
addb
add
push
add
orb
add
add
addb
sbbb
add
cwtl
add
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
enter
add
add
add
add
mov
add
loopne
add
add
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
or
add
add
add
add
add
add
sbb
add
add
add
add
add
add
sbb
add
add
add
add
add
add
or
add
add
js
add
xor
add
in
add
add
add
lods
addb
add
add
in
add
add
add
lods
addb
in
add
add
add
rolb
add
add
add
add
add
addl
in
add
add
add
adc
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
inc
add
add
jmp
cmp
aas
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
aas
jmp
cmp
incl
je
addr16
adcb
stc
pop
stos
ret
and
pop
mov
xchg
cmpsl
insb
jmp
or
xor
mov
repnz
movsl
sahf
sbb
int3
shrb
lret
inc
mov
add
jnp
test
adc
mov
sahf
scas
aam
pop
pop
mov
in
jecxz
mov
mov
push
or
shll
ja
aaa
in
stos
lock
push
pop
scas
fiadds
xchg
rcl
insl
inc
cmp
jg
mov
cmp
popf
outsl
lret
pop
pop
mov
fisttpll
push
stc
out
mov
jae
push
nop
popa
rolb
sub
lcall
dec
fcomps
xchg
pop
xchg
ds
mov
cmp
sbb
push
sbb
mov
in
mov
add
cmpl
test
fistl
mov
cli
movsl
out
outsl
cltd
pop
ficoml
insb
loop
out
inc
pop
testl
push
cmp
adc
cmpsl
xor
mov
add
xlat
add
jno
aas
enter
and
dec
mov
push
aaa
push
adc
cltd
lds
add
mov
push
call
adc
dec
outsl
push
or
fsts
jcxz
jp
enter
jge
jmp
fld
stos
movsb
mov
sub
inc
push
out
adc
mov
jl
lods
jl
push
xchg
dec
and
fldl
daa
dec
xchg
out
adcl
add
mov
mov
jnp
xchg
xchg
jmp
insl
xor
xchg
ss
imul
arpl
pop
cmp
repz
mov
stos
push
fistpl
mov
push
dec
inc
call
rcrb
mov
in
pushf
rolb
mov
mov
outsl
pop
fwait
sbb
pop
stos
scas
sub
outsl
mov
gs
dec
sub
aas
pop
mov
outsl
sub
pushf
xchg
sbb
adc
iret
arpl
pop
ds
or
jb
loop
adc
sbb
xchg
ficoml
xor
mov
and
dec
cmpsl
sarb
in
inc
fs
fistpll
idivb
sbb
mov
mov
je
jo
pop
mov
jge
popa
xchg
mov
outsb
cmpsl
sub
jge
movsl
mov
in
cmp
andl
jl
ret
inc
enter
mov
add
jl,pn
mov
call
pop
lods
xor
mov
dec
push
out
fisubs
shll
ret
jmp
cmpsb
aam
and
cltd
push
jp
inc
pop
mov
cmp
push
aaa
imul
in
mov
stos
fistpl
jp
lcall
aad
sub
aad
roll
inc
ret
fs
jns
dec
imul
dec
mov
movsb
mov
movsl
dec
sbb
aas
push
jle
mov
cmp
xor
js
test
or
fs
insl
cld
xchg
gs
push
mov
enter
xor
add
sbb
push
mov
inc
divl
ficoml
mov
dec
mov
pushf
std
adc
xchg
push
sub
fs
add
xor
test
movsb
sti
cmpsb
rcll
dec
fcoml
repnz
movb
ljmp
xchg
les
popa
lods
push
mov
pop
pop
sbb
andb
xchg
popf
mov
shll
pusha
fadds
inc
out
mov
stos
das
out
sbb
cmpsb
push
jo
outsl
pop
out
shll
or
jmp
stc
into
inc
xor
addr16
mov
addl
lret
xor
xor
loope
or
jmp
jmp
sahf
mov
inc
fcomip
mov
inc
lcall
lcall
mov
test
ljmp
into
and
inc
sub
pop
add
outsl
outsb
jno
sbb
sahf
gs
jns
rol
mov
mov
add
rorb
pop
xchg
pop
jp
popa
pop
out
ret
fsubs
or
xchg
sbb
pop
decl
push
xchg
in
in
mov
mov
pop
pop
mov
loop
lods
mov
jecxz
leave
mov
inc
or
push
or
aas
mov
hlt
rcr
xor
adc
or
jnp
mov
inc
pop
xor
test
movsl
jae
enter
repnz
pop
pop
jnp
add
add
mov
aas
add
mov
repz
sub
pop
sub
rorl
arpl
jg
push
dec
addr16
cmp
pop
jne
rorb
sub
pop
loopne
rcl
push
repnz
adc
xchg
xchg
shr
fisttpll
dec
dec
mov
rclb
imul
adc
adc
sti
mov
arpl
in
lock
test
pop
cs
fimull
mov
into
push
cld
or
and
mov
fs
lock
fwait
ret
xor
lods
daa
loope
push
repnz
xlat
jo
addl
xchg
fisubrs
call
in
nop
xchg
jmp
xchg
popf
dec
push
adc
lds
popa
inc
insl
addr16
lret
ja
in
shrb
xor
call
sar
sti
sbb
sub
fmuls
hlt
in
jne
jne
out
sbb
enter
sbb
pop
cmc
insl
adc
fisubrl
push
sbb
jb
movsl
jle
xor
enter
rorb
dec
sbb
adc
push
mov
loopne
inc
dec
loop
filds
mull
jns
cmp
js
cs
pop
or
dec
sbb
stos
push
stos
cmp
sbb
mov
xchg
xor
fxch
cmp
shlb
dec
std
mov
filds
push
mov
inc
outsb
and
pop
dec
ljmp
adc
xor
add
inc
andb
jbe
js
lret
push
ret
and
pop
clc
int
or
cmp
lods
sbb
jle
mov
inc
jp
cltd
lock
sub
push
add
clc
cmp
dec
dec
inc
and
leave
cmp
mov
adc
test
mov
mov
lahf
mov
outsb
push
shl
outsb
aam
dec
mov
lock
mov
loope
in
inc
ss
test
lcall
mov
data16
sahf
popa
add
add
mov
xchg
gs
mov
shlb
add
divb
fstpt
aas
push
out
or
icebp
bnd
outsb
cwtl
sbb
lock
aas
and
xor
adc
pop
jbe
xor
pop
outsl
or
sbb
test
xchg
jp
adcl
jmp
lcall
popf
cmc
mov
test
repz
cmp
sbbl
xchg
xchg
pop
jbe,pt
out
dec
mov
ficoms
in
inc
sti
adc
or
adc
int
je
mov
mov
cli
add
adc
cld
insb
dec
push
cld
xlat
nop
bound
es
loopne
mov
scas
sahf
nop
pop
adc
xchg
or
rcr
scas
jnp
adc
xchg
outsl
sub
push
and
jle
mov
jnp
xchg
cmp
lods
pushfw
lahf
push
pushf
imull
xchg
lret
inc
stos
sbb
mov
sbb
ret
xor
jo
push
adc
or
js
gs
stos
call
pushf
rorb
test
daa
pushf
stc
pop
pop
sahf
fisttpll
pop
add
mov
sub
xor
cmp
repnz
jle
loop
push
or
lods
fwait
or
xor
inc
mov
imul
das
push
lods
call
jmp
or
mov
pop
out
cmp
xor
gs
xchg
jmp
lods
jge
sub
jmp
rorl
imul
js
and
out
xchg
bound
arpl
scas
movsb
movsl
rcrl
pop
xchg
xorb
scas
les
xchg
pushf
push
pop
loope
fwait
movsb
fdivrs
dec
cmp
in
mov
or
cmpsb
and
cmp
mov
into
ror
out
cmp
incb
pop
daa
cmpsl
das
lods
push
test
cmc
out
clc
pop
pop
int3
push
test
data16
shl
mov
inc
in
add
or
push
xor
dec
xor
add
xchg
outsl
ret
insl
shl
jmp
cld
jecxz
lahf
push
mov
or
adc
xchg
and
mov
subb
lock
loop
push
inc
aas
jmp
xchg
cmp
xchg
xchg
rcll
orb
mov
cltd
shll
pusha
shlb
test
and
push
lods
pop
adc
aam
nop
ljmp
and
push
and
jbe
mov
push
repz
addr16
fisttps
cmp
adc
nop
mov
daa
cmp
jns
ror
outsb
pusha
pop
xchg
aaa
pop
out
adc
mov
pop
ret
into
pop
popa
add
jb
pusha
jp
out
ds
dec
lret
xchg
rorb
int
in
subps
mov
jbe
out
inc
pop
xchg
xchg
or
sub
push
push
mov
test
les
insl
dec
mov
adc
roll
es
fidivl
xor
inc
out
cmp
mov
fimull
xorb
adc
gs
mov
jmp
pop
out
stos
data16
xchg
xor
push
dec
jg
mov
fstpt
stos
insb
mov
fimuls
or
cmp
rolb
loop
and
or
inc
push
faddp
mov
xor
adc
jne
aaa
cmp
pop
sub
jl
test
sarl
std
adc
rcll
in
test
shrl
ds
daa
popf
mov
mov
loope
inc
sub
in
jge
and
addl
nop
data16
and
imul
out
movsl
dec
sub
int
jb
out
mov
sub
add
cwtl
hlt
push
sti
int3
call
dec
and
push
jle
inc
pop
pmulhuw
popf
mov
push
xchg
jae
adc
aam
cmpsb
mov
push
sbb
cmp
pop
jmp
xor
repnz
dec
add
aad
gs
bnd
sbb
out
cli
and
das
inc
mov
lods
pop
mov
pushf
insl
fwait
lret
pop
push
pop
push
and
in
lcall
cmp
pop
out
ds
jle
test
cmp
cli
push
mov
add
mov
adc
cmp
negl
les
in
fnstenv
out
push
cmpsb
pop
mov
lahf
std
adc
dec
repnz
test
jns
js
fwait
mov
popa
jo
fiadds
push
or
xor
sbb
pop
js
aas
or
and
jp
jno
je
sbbl
jbe
inc
jb
decb
cmp
mov
out
sbb
cli
adc
test
dec
jp
outsb
lret
in
jge
mov
xor
divb
movsl
aaa
inc
mov
cltd
cwtl
popa
insl
mov
xchg
punpcklbw
int3
lds
ret
daa
repnz
lahf
xor
cltd
mov
mov
out
call
cmp
dec
xchg
push
sbb
pop
popl
push
mov
jecxz
mov
bound
pop
testb
pop
out
std
mov
fidivl
mov
arpl
cmp
cmc
scas
test
sahf
scas
pop
mov
push
sahf
rclb
push
mov
sbb
adc
fsubl
jp
in
das
and
bound
xchg
xor
xor
and
clc
in
ljmp
jnp
iret
aad
hlt
mov
fisubs
pop
repz
popf
and
xchg
inc
sub
dec
fs
stos
cmp
add
pop
in
ja
or
jnp
add
sub
push
push
je
xchg
and
cmpsl
push
mov
xor
imul
es
mov
jnp
js
inc
ret
cmp
cld
sub
mov
push
enter
and
rcrb
lock
lods
and
dec
adc
mov
cmpb
jecxz
mov
adc
cmpsb
mov
int
ds
outsb
int
gs
xorl
es
out
out
push
dec
mov
cmp
out
mov
bound
daa
lcall
in
mov
mov
mov
and
and
in
or
ds
dec
mov
adc
jnp
inc
xchg
lret
sub
xor
fcom
pop
jo
dec
fs
dec
sarl
xchg
mov
pop
sub
sarb
int
mov
push
xchg
cs
xchg
jmp
dec
pop
and
faddl
sub
cs
movsb
pop
and
mov
xor
mov
cltd
icebp
dec
insb
xchg
sbb
lret
nop
repz
xchg
and
dec
xchg
xlat
rep
or
and
or
bound
push
lahf
stos
sub
jno
iret
jno
mov
inc
mov
sbbl
std
fbstp
or
xchg
sbb
add
xchg
dec
rcrl
addl
cltd
outsb
inc
cmp
xchg
imul
pop
or
mov
dec
sub
adc
sti
popf
mov
mov
cltd
sbb
dec
in
subb
mov
jns
mov
add
push
xchg
mov
pop
jb
std
add
sub
mov
push
inc
cmp
xor
es
or
pop
fs
not
out
pop
lds
mov
js
ret
scas
in
cmp
ja
call
or
mov
xlat
int
aas
movsl
cltd
iret
in
push
sub
sar
adc
jge
int
lock
lock
jo
lea
push
xor
mov
dec
push
xor
xchg
pop
test
cmp
test
into
xor
sbb
shl
out
jo
mov
and
dec
into
sub
sar
jne
xchg
pushf
sbb
aaa
jnp
sub
sbb
lret
fiaddl
inc
arpl
out
out
lea
mov
movsl
mov
cmpsb
jg
loopne
xchg
test
mov
add
add
pop
loop
jl
rolb
xor
ja
cs
jp
test
pop
pop
mov
enter
mov
mov
or
imul
popa
test
cmp
and
pusha
inc
and
pop
icebp
jmp
cltd
sahf
mov
or
jae
jle
xchg
mov
xchg
push
fwait
and
mov
or
lcall
movsl
in
fwait
imul
add
push
jle
loop
incb
repnz
cmpsb
sbb
or
fs
jbe
rcrl
dec
ds
movsb
push
sbb
xor
push
fnstcw
sar
pusha
xlat
test
test
sbb
mov
sbb
outsb
cld
cmp
movsl
add
insb
aaa
aas
mov
frstor
add
cmp
mov
or
cmp
sbb
dec
pop
lock
cli
push
push
xor
mov
out
nop
ds
cmc
in
dec
sbb
xor
jne
jg
outsb
adc
cs
lods
or
iret
mov
jnp
jmp
rcrl
xor
mov
repz
and
adc
pop
pop
jno,pt
aam
mov
sbbl
mov
adc
sub
jmp
adcl
jmp
fcom
xor
xor
notl
mov
daa
dec
dec
push
jno
int3
std
aaa
jg
cmpsb
inc
jp
and
roll
xchg
push
stc
xor
and
fwait
pushl
xchg
sbbb
mov
or
cli
pop
repz
sti
pushf
addr16
sti
rcrl
mov
cmp
xor
xchg
mov
or
sti
decb
mov
icebp
mov
mov
inc
add
idiv
jne
insb
and
flds
cld
daa
lods
adc
pop
pop
jnp
sub
insb
adc
loope
push
in
in
cmp
daa
xchg
mov
xlat
mov
inc
xor
sti
scas
mov
imul
xchg
fidivrs
add
jl
xchg
cs
popf
testl
popa
adc
daa
sbb
xor
arpl
outsl
dec
rorl
loop
cmp
or
mov
outsl
shrl
insb
mov
lods
jne
sti
rclb
rclb
xor
ret
mov
ja
leave
dec
les
outsl
aaa
and
popa
dec
xchg
and
jl
mov
insl
jle
push
push
incl
add
insb
sbb
xchg
ljmp
mov
adc
decb
pop
mov
nop
sub
cld
mov
adc
enter
add
xor
mov
addr16
in
mov
mov
stos
notb
jmp
xchg
lds
pop
dec
inc
out
aaa
cmpsb
mov
inc
cli
jne
adc
lret
mov
dec
add
push
shrl
pop
cltd
cmp
fs
outsb
stos
cli
cmp
jp
je
std
mov
and
aas
mov
mov
pushf
shrb
inc
imul
sbb
test
jge
adc
popa
mov
and
pop
fs
ss
or
mov
or
cmp
ficoml
fdivr
add
inc
ja
lret
mov
jnp
das
xor
push
jb
lcall
pop
aam
dec
add
mov
adc
add
xchg
cltd
aad
cmp
push
and
andb
push
jnp
and
and
cmpsb
and
mov
pop
popa
aaa
jne
xchg
repz
insb
or
js
push
roll
mov
iret
aas
jne
popf
push
push
push
aad
out
into
push
fistl
pop
and
push
rolb
call
sahf
jg
hlt
dec
enter
outsb
dec
add
mov
test
sbb
lcall
iret
jmp
mov
push
xchg
sub
jmp
push
sub
push
lcall
mov
xchg
push
ret
enter
push
pop
inc
popa
inc
scas
dec
cs
jge
in
xchg
mov
call
adc
pop
jle
mov
fs
cwtl
push
ret
sub
ljmp
dec
and
or
stos
sarb
xchg
xor
xor
push
cmp
es
jo
xor
or
xchg
data16
lahf
mov
jbe
cmp
xchg
jmp
rclb
insb
in
pop
aad
push
mov
imul
loop
add
int3
dec
loopne
ret
ret
xor
dec
test
mov
jo
shlb
pop
cwtl
addr16
push
outsb
lods
sbb
out
ja
push
std
push
dec
fbld
fstpl
addr16
cmpsl
sbb
jo
mov
dec
and
test
cmp
enter
cmp
mov
or
mov
roll
cmp
test
out
pop
dec
mov
and
dec
mov
jbe
repz
push
cmc
das
add
mov
dec
or
mov
gs
push
pop
movsl
loop
test
stos
aaa
inc
add
sbb
lock
dec
ja
inc
fcoml
xor
pop
in
test
jmp
mov
dec
push
clc
neg
iret
cmp
dec
dec
out
mov
push
mov
push
jb
sub
popf
dec
mov
sbb
cmp
mov
inc
cs
idivl
inc
pop
shrb
mov
cmp
pop
aad
sbbb
ret
and
mov
test
popf
test
scas
cmc
imul
lea
dec
cli
sbb
lret
pop
cmp
loope
int
cwtl
aaa
sub
lock
sbb
add
dec
popf
mov
ljmp
repz
jae
mov
sti
xchg
daa
push
out
mov
sbb
ja
xor
fs
into
stos
xchg
and
and
adcl
xor
ja
sbb
pop
popf
movsb
jae
pusha
cmc
push
frstor
lods
add
or
mov
jmp
jp
insb
adc
insl
add
cld
in
sysexit
aad
sti
pop
clc
jo
mov
ficompl
inc
jge
imul
push
inc
pushf
pushl
imul
add
mov
dec
xor
push
and
mov
insl
stos
hlt
mov
ja
mov
or
lds
jecxz
int3
ljmp
jno
cmc
sti
sub
movsl
dec
dec
and
jb
test
add
in
insb
and
mov
cmp
fsts
dec
xchg
pusha
sub
call
rolb
or
in
pop
outsl
call
in
pop
outsl
cs
shl
insl
inc
jg
loope
xor
out
lock
and
push
ret
stos
jo
xchg
cmp
outsb
std
in
jl
push
or
int3
arpl
mov
inc
ret
imul
loopne
aad
or
jmp
jp
pop
adc
cli
mov
ljmp
sub
insb
stc
mov
add
into
cmp
sbb
test
das
into
leave
aam
push
pop
repnz
std
dec
enter
orb
test
lods
sub
jge
lea
add
mov
xchg
arpl
pop
push
ficompl
xor
pushf
cmc
push
movsl
cwtl
or
rcl
loop
sbb
sub
cmp
cltd
and
sub
stos
loope
xor
inc
js
xor
imul
clc
pop
imul
sub
xchg
push
fdivs
jmp
adcb
sbb
mov
xchg
loopne
cmp
jg
pop
add
pop
and
das
inc
js
jns
in
jg
inc
xor
sub
push
pop
lods
xor
pop
adc
clc
rolb
in
and
inc
jp
mov
or
roll
xor
inc
int
ja
push
inc
mov
ds
cld
aaa
cmpsb
xchg
test
add
int3
dec
inc
test
out
pop
xchg
ret
jle
inc
xchg
pop
cmp
movl
cmp
jnp
push
ret
sbb
and
stos
lds
sub
or
push
ds
inc
call
pop
nop
jbe
cs
ret
ja
mov
xchg
and
div
pop
jae
mov
lret
loop
jo
sub
xchg
and
mov
cmp
sub
dec
imull
ss
add
lods
mov
movsb
int
sbb
xor
sbb
fstpl
mov
sub
shlb
cltd
add
inc
mov
fsubr
inc
xor
ljmp
insl
hlt
push
add
sub
out
ds
inc
or
sub
jge
adc
clc
sub
push
ret
pop
dec
xchg
cltd
sbb
add
loope
mov
mov
les
jp
pop
push
or
add
cs
inc
adc
sub
pushf
add
dec
push
aas
sub
mov
scas
push
lahf
inc
test
jbe
push
jle
dec
leave
out
out
sbb
pop
sbb
shlb
cmc
in
pop
imul
or
jns
add
add
mov
dec
pop
cltd
aad
mov
mov
ret
dec
xchg
data16
cs
outsl
loope
pop
jp
xlat
sbb
mov
mov
adcl
mov
insb
jb
rol
gs
fisubs
or
test
and
dec
push
mov
pop
negb
add
mov
cmc
repnz
pop
pusha
inc
adc
sub
or
stc
push
out
and
scas
test
push
push
cmp
sahf
mov
adc
push
outsl
sar
jo
arpl
push
ret
mov
xchg
jae
adc
in
sub
icebp
xor
sub
decb
idivb
cmp
clc
or
mov
mov
arpl
cli
arpl
jl
sti
or
xor
rcrb
int3
cmc
dec
fcoml
or
std
inc
mov
imul
cmp
xchg
and
pop
fmuls
jbe
cwtl
xchg
xchg
inc
jb
daa
inc
sub
pop
fdivs
sbb
jns
ret
jmp
xor
shrb
mov
jl
ret
andl
mov
pusha
and
sbb
xor
stos
popf
daa
xor
add
push
setbe
arpl
iret
cmc
je
mov
pop
xchg
cmp
daa
push
push
pop
adc
cmp
das
xchg
imul
pop
cmp
jnp
sbb
push
sub
out
mov
pop
jmp
inc
stos
mov
out
fs
addr16
mov
and
push
add
add
mov
mov
lock
add
rol
mov
push
pop
push
rorl
cltd
xchg
stos
daa
cmp
and
or
fwait
sbb
mov
cmp
push
arpl
adc
or
sub
add
aas
jbe
inc
pop
pop
mov
jno
sub
popa
jae
outsb
xor
push
push
cmp
and
rolb
scas
or
in
mov
in
repz
adc
or
xchg
xor
addr16
xlat
push
xor
outsl
xor
xorl
fsubrl
push
lods
adc
out
push
leave
dec
std
mov
scas
hlt
call
xor
or
icebp
int
adc
jnp
shrb
pop
fdivrl
sbb
out
pop
push
rcl
mov
add
popa
lret
sbb
mov
imul
mov
repz
jmp
cmpsb
imul
sti
movsb
xlat
bound
cmp
stos
int
adc
fstps
jge
sbb
scas
leave
dec
cwtl
sbb
frstor
lahf
mov
mov
mov
cwtl
ret
idiv
jb
test
push
mov
cmp
xor
jnp
call
pop
and
cltd
dec
push
rorl
xchg
jb
add
rol
sbb
cwtl
stos
data16
mov
fidivs
pop
push
movsl
data16
mov
notl
fcmovnu
xlat
mov
lahf
pop
jg
orl
xchg
out
adc
pop
sti
movsb
sbb
call
mov
imul
test
stc
mov
enter
lcall
xchg
clc
jno
sub
fcomps
lods
lahf
pop
cwtl
push
fisttpll
push
lea
mov
les
push
and
sbb
jp
or
adc
sub
outsl
ret
lcall
xchg
inc
jnp
je
sbb
adc
dec
inc
fucomip
cmpsl
in
jo
jb
pop
dec
jmp
xor
jno
inc
enter
scas
dec
push
sbb
inc
jle
jle
add
inc
mov
xchg
mov
xchg
js
jmp
scas
stc
jge
adcl
pop
xchg
daa
es
cli
and
jg
jge
mov
ss
sbb
ja
add
mov
pop
ja
add
pop
sub
fucomi
xchg
sub
daa
in
sahf
lods
pop
inc
pop
xchg
sbb
popa
faddl
imul
insl
insb
sub
mov
lods
outsb
sbb
xchg
mov
adc
sbb
popw
push
test
sahf
add
les
jl
faddp
jl
push
dec
loop
ret
inc
push
stc
xchg
push
cld
mov
sbb
loop
sbb
cwtl
adc
dec
inc
scas
fisttpl
pop
or
imul
pop
imul
sahf
pop
mov
cwtl
fisubl
mov
xchg
inc
cmp
hlt
pop
xor
dec
mov
dec
mov
and
icebp
scas
adc
repz
js
inc
mov
jbe
pop
dec
enter
xchg
inc
inc
pop
cltd
xor
movsb
sub
faddl
jb
push
xlat
ret
lret
jmp
mov
lret
push
adc
mov
jecxz
add
adc
xor
and
mov
popa
icebp
loopne
inc
fsubr
sub
cmp
imul
jg
je
inc
cmpsl
mov
fildll
mov
dec
or
sahf
cmp
addr16
adc
xchg
stos
int3
rorb
or
push
ss
push
inc
sub
ficoms
test
mov
xchg
dec
lock
push
or
xor
fidivrs
mov
jo
add
sbb
insl
in
enter
or
icebp
push
xchg
popa
jp
xorl
mov
iret
shl
scas
cmp
or
lods
jbe
clc
mov
inc
sahf
adc
push
out
cld
popf
dec
es
stos
sbb
insl
mov
xchg
dec
outsl
popf
inc
pop
stos
sbb
imul
xor
and
pop
adc
sub
ljmp
shrb
shrb
and
pop
movl
jp
nop
sbb
sub
negb
pop
mov
lods
mov
pop
pushw
in
xchg
xchg
pop
aaa
fwait
sbb
sti
pop
sbb
rcll
dec
fsubr
fcoms
add
mov
cmp
enter
push
mov
and
adc
outsb
mov
hlt
cltd
mov
popf
dec
mov
nop
fcomip
fmuls
or
das
iret
cmp
or
scas
add
xchg
gs
dec
adc
jns
inc
mov
arpl
test
jl
mov
shlb
xchg
loop
sbb
daa
outsl
jno
popf
inc
mov
jno
sbb
movsl
fisttpl
dec
sahf
leave
jb
leave
cmp
fisttps
mov
mov
lret
test
mov
jae
push
inc
psrld
jg
or
pusha
mov
in
mov
dec
or
adc
dec
and
xchg
lret
or
mov
add
xor
push
leave
mov
lds
xlat
xlat
sti
push
or
sub
sub
sbb
rorl
aaa
pop
dec
mov
xchg
jnp
das
mov
cwtl
push
sti
mov
mov
hlt
shll
and
sbb
cmc
mov
sub
jp
jle
push
lods
push
push
test
mov
std
inc
or
sbb
sbb
push
mov
test
cmp
or
inc
sbbb
adc
clc
xchg
addb
push
test
mov
insl
pop
test
mov
test
jne
mov
out
in
mov
ljmp
dec
sti
xchg
vhaddpd
xor
imul
stos
mov
lret
mov
dec
insb
mov
lret
cmpsb
push
cltd
and
cmp
fstpl
bound
nopl
test
addr16
xchg
nop
test
into
rclb
jno
mov
scas
fcom
int
leave
inc
out
rcrb
jbe
mov
out
push
dec
add
mov
fcmovu
movsl
adc
sbbb
pop
push
lret
int3
mov
stc
lea
push
outsb
js
lods
out
mov
xor
pop
pop
inc
fdivl
lret
sahf
xchg
sbb
inc
rcll
iret
popa
cmpl
pop
adc
sbbb
cli
pop
mov
dec
dec
inc
outsb
fbstp
jmp
idivl
lds
jno
mov
stos
adc
xor
and
mov
dec
adc
xor
bound
pushf
imul
xchg
cmp
lods
cmp
mov
sbb
loope
mov
adc
mov
mov
mov
push
sub
aaa
cmp
sar
cmp
xchg
jns
or
xchg
mov
xor
out
sub
mov
cltd
adc
sub
mov
inc
mov
mov
cld
dec
adc
das
xchg
int3
mov
and
outsl
xor
cmpsl
xchg
push
push
cli
or
test
and
pop
loop
jp
insl
mov
cld
sub
into
cmc
cltd
insl
sub
jle
adc
push
daa
add
adc
add
fists
mov
adc
mov
xorb
add
xor
ffreep
stos
jae
mov
mov
jae
or
cmp
inc
or
aaa
mov
repz
scas
sub
xchg
rclb
sets
xor
sbb
sub
sbb
bound
cmpl
sbb
cwtl
idivb
xor
cmpsl
adc
cwtl
iret
aas
xor
dec
push
push
cmpsb
xor
std
dec
add
addr16
pop
push
cmp
xchg
adc
arpl
shlb
cli
sub
test
lret
jne
xchg
cwtl
jae
mov
adc
ficompl
loop
xchg
ds
push
mov
or
imul
jo
movsb
pop
lcall
jl
and
outsl
adc
mov
sti
nop
fdivl
xorl
mov
arpl
popa
mov
daa
popa
pop
call
pop
xor
lock
pushf
ret
add
adc
test
ret
mov
xchg
leave
add
inc
cmp
ror
dec
in
push
sti
dec
fs
mov
sbb
xchg
es
outsb
cmp
aaa
orb
or
and
fisttpll
leave
jecxz
cmpsb
fwait
mov
push
lds
cmp
ror
sbb
roll
imul
pop
out
int3
mov
movsb
aam
sti
ja
pop
loope
shrb
cwtl
mov
dec
outsl
lcall
mov
jae
mov
xchg
xor
in
add
add
lret
jmp
adc
mov
clc
xchg
xchg
jno
mov
popa
sbb
jbe
mov
out
push
push
or
jb
cmp
lods
cmp
mov
jg
jnp
or
in
and
lret
jno
pusha
pop
dec
push
jg
ficoms
xchg
inc
bound
mov
pushf
lret
repnz
fsubrs
xchg
gs
xchg
lock
cli
pusha
fiadds
in
xchg
aaa
push
sbb
sub
push
cmpsb
call
jae
sbb
test
aad
push
fstpl
xor
add
jb
aad
add
daa
xchg
or
mov
cmp
lea
daa
and
mov
leave
pop
addl
fbstp
lock
in
cld
cltd
mov
out
movsb
out
mov
scas
subl
push
lret
sbb
mov
repnz
and
inc
pop
fists
dec
adc
cmp
inc
sbb
adc
pop
lds
add
repz
aaa
add
ljmp
jecxz
sub
jne
push
and
out
les
insl
dec
rcll
inc
jne
dec
adc
lahf
inc
in
xchg
cli
dec
stc
jo
xchg
xchg
in
xor
sti
test
mov
xor
fcomip
dec
add
scas
pop
adc
arpl
cmp
test
mov
pusha
xlat
push
aaa
pop
or
stc
out
fbstp
jp
out
mov
pop
dec
lods
movsb
xorb
movsl
pop
mov
nop
aaa
rorl
fwait
pop
sahf
icebp
xchg
inc
jge
cmpsl
lret
icebp
fsts
push
inc
mov
xorl
mov
loopne
jno
popf
stc
mov
test
and
xor
inc
pushf
rolb
inc
in
push
cmpsb
stos
xchg
rol
rcll
xchg
jmp
imul
movsl
repnz
out
sbb
mov
nop
sub
pop
div
mov
dec
inc
loop
and
cli
cmpsl
push
push
aad
imul
aam
lock
ret
and
or
lcall
pop
push
out
xchg
imul
xor
jge
mov
shlb
sbb
mov
pop
mov
sarl
cmp
fildl
xor
neg
adc
rclb
mov
inc
xor
sbb
call
xchg
mov
ret
push
adc
std
inc
jnp
cmp
daa
mov
xor
les
inc
cmpsb
add
add
fwait
pop
outsl
xchg
xchg
pusha
push
cli
popa
push
mov
ss
sub
add
xchg
outsb
sbb
cmpsb
out
xchg
jecxz
push
dec
mov
cmp
push
loop
int3
in
push
dec
pop
cmp
sahf
sub
in
dec
cmc
mov
rolb
idivb
popf
out
xor
or
cmp
in
mov
lret
es
test
out
push
mov
out
dec
sti
outsl
xchg
std
cmp
dec
adc
ja
add
add
cltd
test
idivb
out
cmp
iret
repnz
data16
fst
out
cwtl
xchg
nop
xchg
mov
inc
paddusb
xlat
aam
xor
fldenv
lret
addr16
loope
adc
xchg
jnp
push
lcall
sysret
iret
or
pop
add
jo
add
iret
daa
filds
xorb
add
push
jmp
loope
jmp
data16
adc
or
cmpl
jg
mov
ret
xchg
imul
hlt
sbb
and
mov
or
push
or
pop
mov
xlat
or
sbb
dec
cmp
fstps
les
lcall
and
outsb
inc
or
sub
mov
pushf
cmp
in
adc
nop
loopne
mov
jno
sub
stos
xor
cld
dec
sbb
pop
and
or
test
dec
pop
add
iret
in
ja
push
fiadds
push
cmpsb
out
mov
jae
mov
add
cwtl
addb
cltd
jl
jmp
andb
adc
mov
fiadds
push
out
dec
mov
jmp
jmp
xchg
and
cmc
cmpsb
xorl
imul
cmp
sbb
xchg
jmp
leave
ss
imul
sub
or
dec
adc
push
lock
cmpsl
inc
das
xchg
gs
mov
cmp
daa
filds
fsubs
add
arpl
or
imul
xor
mov
dec
dec
icebp
or
xor
xchg
lods
cwtl
push
push
mov
cmp
jecxz
xadd
push
mov
mov
dec
push
or
int3
daa
xchg
lods
mov
inc
insb
lea
scas
sti
ja
mov
test
cld
std
clc
mov
ja
jle
fnstsw
sub
loop
jne
dec
xchg
in
cmp
in
xchg
pushf
add
inc
jnp
cwtl
icebp
sub
leave
stos
mov
ss
mov
decb
cmp
dec
daa
cmpsb
dec
mov
push
xchg
pop
mov
ret
jl
popa
outsl
adc
loopne
mov
mov
call
adc
push
adc
mov
lods
pushl
aam
out
jecxz
push
mov
dec
or
mov
mov
xchg
and
jnp
cld
rolb
xchg
cmp
sbb
adc
lds
testb
push
icebp
int
out
jge
mov
inc
mov
rcrl
pop
popf
test
xorl
call
ficoms
out
mov
push
dec
and
sarl
push
out
push
jecxz
rolb
rorb
inc
lcall
jge
jae
scas
sbb
fsubl
outsl
cmp
outsl
mov
or
xchg
leave
lock
mov
xor
dec
cld
aaa
mov
enter
cmp
adc
sub
pop
movsl
popf
mov
push
and
and
ret
rorb
fcomps
xor
sub
push
cmp
test
in
in
sbb
or
loopne
push
sbb
or
arpl
xor
outsb
fdivrs
mov
bsr
scas
out
fst
fimuls
gs
jae
lcall
jns
scas
mov
cmpb
call
mov
lcall
xor
repnz
nop
push
fdivl
lret
mov
dec
push
adc
adc
jnp
fnsave
in
jmp
jge
adc
addl
mov
push
std
and
fsubr
rclb
outsb
out
and
je
mov
arpl
sub
out
shrb
fimull
jns
xchg
jbe
sarl
test
daa
call
xchg
pop
jmp
fisubrs
cli
push
in
cmpsb
subl
lret
xchg
add
clc
gs
mov
aas
rolb
adc
xorl
pop
xlat
jg
ret
scas
xor
or
cwtl
mov
into
flds
mov
cmpsb
fwait
icebp
add
jo
jae
call
rcrl
pop
gs
cmpsb
jge
jecxz
push
ficompl
add
push
enter
cld
ljmp
addr16
push
cmp
pop
std
hlt
loopne
sbb
mov
mov
mov
mov
pop
dec
xor
adc
jne
push
lods
sbbl
inc
inc
add
cmpb
dec
jmp
cltd
sti
pop
ret
je
aad
dec
mov
push
pop
idiv
lock
sahf
stc
neg
lods
hlt
jle
pusha
cmpsb
movsb
and
fsubs
jne
pusha
pop
xor
ja
mov
imull
mov
pusha
cmp
dec
hlt
arpl
fiadds
push
std
mov
daa
push
add
fcom
rolb
or
and
imul
mov
jp
les
into
lods
faddp
and
mov
scas
push
loopne
jo
push
pop
sub
adc
pusha
jnp
sub
xor
jmp
faddl
fadds
push
mov
inc
cltd
xor
jp
pop
lahf
je
pop
mov
out
add
mov
incl
add
in
mov
sub
add
mov
test
adc
ss
cmp
ljmp
cmc
add
fadd
testb
jae
dec
inc
push
dec
or
jbe
mov
insb
ss
pop
shl
clc
mov
pop
cmp
or
sbb
cmp
cmp
cmp
jmp
fiadds
mov
ficoms
out
pop
shlb
gs
pop
inc
pop
mov
cmpsb
jb
jne
gs
inc
and
inc
daa
rcl
push
pop
xor
sub
add
xor
out
adc
and
jl
push
mov
clc
jl
xor
imul
and
scas
hlt
imul
insb
cmpsb
stos
cmp
or
xor
std
pop
mov
nop
push
push
mov
lcall
aad
call
insl
outsl
inc
mov
mov
mov
insl
sbb
cmp
mov
movsl
clc
cwtl
cwtl
enter
call
sub
mov
or
fisubl
sti
push
movsl
fs
aam
xor
stc
lods
sbb
push
push
add
aad
in
mov
fsubrl
loopne
bound
cmp
aad
shufps
stc
fcomp
fbstp
sahf
lcall
repz
adc
mov
das
gs
xchg
push
jmp
inc
movsb
cmp
imul
das
fimuls
shl
and
fistpll
xlat
mov
inc
mov
lret
sub
jne
stos
stos
add
dec
and
mov
add
xor
adc
jmp
fisubrs
jnp
push
mov
jmp
and
mov
cmp
loope
out
fs
add
aad
sub
hlt
jae
ret
jbe
pop
push
cmpsb
sti
fwait
icebp
jno
outsb
or
test
dec
jae
dec
ds
std
paddusw
les
rorl
ds
xor
dec
rcl
jge
push
xlat
aas
lods
pop
jg
addl
icebp
push
mov
mov
or
add
sub
enter
ss
jecxz
dec
icebp
into
repz
sbb
arpl
mov
in
in
dec
aam
dec
xchg
mov
mov
imul
mov
mov
push
inc
mov
pop
out
shr
jge
scas
out
add
dec
cmpsb
push
les
mov
incb
jo
cmp
jb
shr
dec
add
imul
lea
ret
orb
mov
testb
jne
sub
mov
aaa
xchg
cmpsb
add
sbb
lcall
mov
insl
pop
push
outsb
addr16
inc
rcl
pop
fucomi
ja
icebp
or
orb
or
add
xor
cltd
mov
or
or
inc
xorl
enter
fcomi
jno
jnp
adc
jmp
mov
pop
adc
adc
mov
adc
sub
jbe
mov
shlb
and
xor
add
scas
iret
mov
mov
pop
push
jl
arpl
pop
or
dec
pop
outsl
std
popf
dec
int
push
add
rol
mov
pop
jbe
mov
in
sbb
sbb
js
dec
sub
xchg
pop
inc
xchg
enter
sub
dec
pop
imul
fcomi
dec
fldcw
test
cmp
mov
loop
jmp
mov
adc
bnd
add
mov
icebp
clc
sbb
pop
jnp
outsl
inc
push
push
mov
sub
mov
adc
call
icebp
popa
and
inc
jl
push
mov
jnp
and
leave
bnd
pusha
push
cs
stos
cmpsl
or
push
adc
aad
std
jbe
xchg
and
or
ja
lret
sub
imul
mov
cmc
dec
mov
fnstcw
sbb
fcompl
testl
bswap
pop
fnstsw
and
sahf
imulb
dec
and
lods
les
daa
leave
mov
xor
or
std
mov
cmc
push
iret
test
dec
cmc
das
in
cmp
or
mov
xchg
fldt
lea
adc
pop
faddl
xchg
movsl
push
add
insl
jns
or
cmp
sbb
in
popf
dec
mov
cwtl
cmc
mov
repnz
inc
mov
jle
dec
pop
cmp
iret
out
repnz
and
cwtl
xorb
pop
std
aam
test
leave
and
ret
mov
inc
xchg
in
dec
mov
xchg
loope
jnp
in
daa
sbbl
addb
popf
nop
cmpsl
idivl
stos
xor
sbb
and
adc
dec
cs
add
inc
jmp
mov
inc
or
orb
xor
out
xchg
adc
sarb
sub
or
mov
sub
cmp
pushf
ret
mov
cmp
cmp
mov
sti
inc
xor
jnp
jbe
pop
mov
jbe
mov
iret
inc
stc
aaa
arpl
and
rcrb
out
xor
push
repnz
xchg
notb
shlb
lds
adc
mov
int
push
cs
and
and
sbb
stos
mov
jp
pop
insb
xor
cmc
sbb
or
lret
aam
popa
jmp
ljmp
adc
stos
add
sub
cmp
sahf
add
iret
insl
clc
pop
sbb
adc
jne
mov
jnp
jecxz
das
roll
mov
push
lds
pop
push
jo
int
jne
lock
sbb
aaa
push
cs
ja
pop
iret
and
inc
xchg
push
pop
mov
dec
ljmp
in
cmpsb
fbld
push
pushl
jns
add
sti
sub
mov
lock
jg
ret
out
cmp
and
xchg
insl
idivl
test
push
insb
cmp
xor
push
jbe
call
jmp
into
pushf
not
jle
xor
cmp
sbb
xchg
inc
push
and
in
or
icebp
jbe
cmp
mov
or
jg
xchg
cmp
pop
lods
testb
aas
movsl
sub
stos
in
push
push
cmp
cmp
add
sub
aad
inc
cld
pop
mov
xchg
xchg
in
push
fsubrs
pop
jno
sub
xor
pop
jg
loopne
xchg
push
mov
std
repnz
mull
jp
repz
imul
push
inc
fisubl
andb
jecxz
mov
xor
xchg
cwtl
adc
jp
ret
and
or
jl
lods
enter
movsl
lock
outsb
pop
jne
hlt
cwtl
xor
mov
hlt
fnstenv
pop
cmc
push
mov
cmp
test
outsb
pushf
and
inc
lret
stos
cli
jne
jb
push
insl
lret
daa
pop
mov
cmp
pop
add
inc
adc
dec
jecxz
xor
jle
mov
divps
pop
xchg
loope
stos
xchg
bound
push
xchg
cmp
mov
mov
push
mov
jbe
aas
mov
or
aaa
outsl
pop
test
sbb
lret
jl
inc
js
movsb
xchg
stc
push
mov
sub
fidivs
or
dec
roll
cltd
xchg
or
loop
dec
std
pop
arpl
imul
pusha
pop
xlat
jl
ret
inc
insl
and
dec
mov
mov
dec
dec
popa
popa
adc
adc
add
rclb
mov
rolb
cmp
and
loopne
lock
mov
xchg
aas
jle
jecxz
enter
js
movsl
mov
out
movsb
fwait
mov
stc
or
mov
cmp
filds
sbb
stos
jns
xchg
xor
adc
sahf
jecxz
faddl
push
xchg
jle
ret
xchg
dec
mov
ret
ja
ljmp
mov
shrl
dec
rcll
cmp
push
push
sub
jmp
out
out
adc
aaa
fmul
imul
xchg
and
sub
aaa
aad
mov
mov
shlb
or
sub
cmp
cmp
les
cmp
aam
mov
shl
sahf
stos
daa
inc
jmp
and
ljmp
sub
push
dec
shll
popf
sbb
xchg
mov
jnp
fwait
mov
in
sbb
loop
jle
pop
pop
inc
data16
cmp
sbb
rol
loopne
dec
scas
mov
icebp
out
ss
mov
pop
or
mov
mov
xor
les
movsb
ja
sti
mov
jg
pop
dec
xor
jg
add
mov
jae
out
icebp
arpl
loop
mov
test
adc
fnclex
fimull
out
push
scas
mov
jge
out
pusha
cmp
pop
or
push
jge
imul
jbe
cmc
mov
shrb
pop
pop
ljmp
add
loopne
cli
inc
and
xchg
repz
ss
fst
or
ds
shl
loope
gs
in
inc
mov
mov
push
adc
cmpsl
mov
js
test
adc
pop
or
inc
sub
cmp
jg
xor
adc
imul
xor
addb
mov
les
pop
push
xor
add
xchg
inc
inc
out
and
sarl
xchg
pop
movsb
sub
mov
cmp
cmc
sub
data16
mov
cmpsl
in
mov
shlb
repz
inc
push
mov
stos
push
adc
push
icebp
cs
mov
icebp
pushf
out
mov
jg
cwtl
cltd
jp
mov
mov
jmp
xlat
mov
repnz
movb
pop
repnz
aas
imull
in
jp
pop
pop
cmp
fnstsw
adc
pop
outsl
inc
push
inc
pop
dec
jae
jo,pn
cli
mov
xor
or
xor
adc
in
clc
inc
sub
fidivl
cmpsl
std
jbe
into
fldenv
out
add
out
into
and
imul
and
jl,pn
bound
cmpsl
xor
and
jge
cltd
mov
pusha
push
jnp
pop
mov
push
mov
lahf
out
in
mov
cmpl
arpl
fdivrl
int
sahf
cmc
and
nop
lahf
cmpsb
xor
nop
repz
test
subl
jmp
jg
mov
out
jbe
shlb
cmc
mov
jne
aaa
mov
daa
or
pop
repnz
rep
jl
pushf
mov
outsb
xchg
and
int
dec
jecxz
lcall
adc
xchg
cld
loopne
cmpsb
push
push
in
cmp
cld
add
mov
or
rolb
inc
mov
pop
xchg
jae
mov
subb
push
int3
push
mov
push
mov
fstl
push
lds
in
fisttpl
xchg
movsb
js
mov
arpl
or
ljmp
bound
jo
test
lods
sub
sub
jle
mov
aad
add
jns
xchg
setg
imul
xor
in
inc
inc
icebp
enter
sti
out
loope
mulb
jbe
lods
xchg
jle
loopne
and
jne
pop
inc
std
and
xchg
and
dec
inc
sub
cmp
shl
fmul
xchg
xlat
or
out
pop
je
jo
aad
mov
fs
or
adc
or
fisttps
adc
ja
mov
cmp
cmp
movsb
push
icebp
cld
lea
popf
xor
inc
andb
xchg
popa
xor
push
sbb
mov
repz
pop
push
xor
es
gs
and
sbb
jo
jnp
stc
sbb
stos
cmp
jl
adc
mov
push
inc
adc
push
adc
jl
xchg
adcl
mov
mov
pushf
add
cmp
sub
jb,pt
sub
test
bound
xor
in
fisubs
in
hlt
push
sbb
in
jns
inc
mov
jb
jbe
stc
mul
push
imul
xor
scas
mov
adc
push
inc
scas
stos
jns
sti
inc
adc
cwtl
sbb
iret
shl
cmpsl
pop
jl
dec
push
mov
push
loope
pop
jecxz
inc
pop
ds
lcall
and
pop
sbb
daa
test
or
pop
mov
in
cmp
mov
out
mov
dec
pop
sub
pop
data16
cmp
bound
mov
push
fucomi
aam
dec
pop
outsb
outsl
out
pushf
dec
scas
stc
pop
mov
mov
cmp
xchg
and
ret
decb
cld
adc
int
ds
jmp
iret
cli
lahf
sbb
inc
cmp
test
add
cltd
std
jl
ret
and
and
and
mov
rcrb
movsb
ss
mov
sub
lods
lods
out
sti
xor
xor
xor
stc
mov
push
hlt
test
imul
adc
frstpm(287
shlb
or
imul
shl
arpl
jl
pop
xchg
lret
ror
ret
test
sahf
adcb
cmpsb
add
imul
adc
or
jecxz
ja
xor
or
pop
imul
icebp
ja
xchg
pop
in
pop
sub
ret
dec
adc
pusha
jb
cmp
xchg
fcmovne
xor
add
pusha
test
lret
mov
sbb
xor
ja
xchg
xchg
xchg
dec
mov
scas
mov
iret
out
test
pusha
pop
and
inc
into
or
dec
insl
inc
div
lock
lea
pop
jmp
adc
mov
add
push
ret
push
mov
jb
sar
jg
mov
popa
add
push
mov
add
in
clc
leave
sub
cmpsl
sub
fbstp
push
and
pushf
jb
aad
rclb
fsubl
cmp
outsl
jecxz
out
shl
testl
cmpsb
stos
das
mov
push
es
xor
hlt
mov
ret
hlt
and
movsl
stos
cltd
push
fimull
outsl
xor
popl
fneni(8087
mov
stos
xor
pop
aas
fildl
popf
lock
cmp
mov
cmc
addr16
icebp
enter
in
mov
cmp
repnz
pop
sub
mov
shrb
pop
xchg
lds
lahf
inc
hlt
lret
add
bswap
pushf
jae
pop
aaa
bound
sbb
std
sarl
or
mov
mov
and
inc
shlb
adc
push
sbb
xchg
mov
mov
arpl
mov
xchg
out
lea
jecxz,pt
dec
adcl
mov
xchg
out
mov
shlb
jg
icebp
jno
sub
pop
add
gs
pop
mov
pop
imul
das
xchg
jmp
mov
sbb
cmpsb
xor
js
and
loope
inc
rcll
andb
mov
mov
mov
jge
add
adc
xor
push
movsb
cltd
push
mov
scas
jmp
jb
add
fs
push
scas
and
mov
add
add
inc
push
mov
push
gs
iret
popf
lock
fcmovnbe
nop
mov
ret
outsb
adc
rcrb
cmp
pop
fisubrs
mov
insl
cmp
hlt
ret
xor
nop
inc
jb
mov
jb
rorl
aad
xor
outsl
out
lds
xor
test
movsb
mov
std
iret
jge
loop
fisubrl
xchg
xchg
xor
in
xchg
enter
testl
and
xchg
and
ret
orb
mov
jmp
les
cmpsb
dec
or
js
jmp
fbstp
sbb
xor
int3
mov
xor
mov
lcall
or
enter
lahf
aad
scas
lds
daa
pop
jb
xor
loop
jle
xlat
lret
xchg
xchg
enter
cld
jle
out
rcrb
jns
loope
push
lock
mov
adc
pop
iret
ja
sbb
adc
mov
ljmp
inc
outsb
dec
fstpt
jb
mov
stc
lds
repz
xor
fwait
in
mov
les
pop
cmp
lods
clc
nop
mov
jbe
sub
dec
sbb
mov
mov
cmp
in
bound
imul
outsl
cmpl
aas
or
js
jle
fmull
or
ja
clc
cmp
nopl
data16
push
pop
mov
mov
inc
pop
ret
adc
repz
hlt
add
mov
sti
das
mov
jecxz
and
sbb
imul
pop
mov
jl
mov
iret
fstpl
xor
or
add
adc
aam
lret
js
int
xchg
pop
popa
or
cmp
ret
or
out
push
lret
sbb
mov
movsb
popa
cwtl
jbe
imul
clc
les
aaa
cli
pop
mov
sbb
lret
daa
es
outsb
mov
stc
push
inc
add
dec
mov
repnz
int3
in
cli
push
mov
cwtl
xor
int3
data16
mov
mov
add
nop
scas
mov
nop
bnd
push
push
test
and
mov
pop
lea
ficoms
sub
inc
fimull
cmp
mov
xchg
and
popf
mov
mov
out
out
push
pop
jmp
xor
and
or
fisttpl
push
jp
inc
add
ret
lret
push
mov
dec
pop
mov
popa
mov
jmp
mov
lcall
sub
push
outsb
pop
in
mov
cmpsl
push
fdivs
xchg
or
push
into
cmp
mull
test
pop
leave
mov
loopne
inc
insl
inc
enter
pop
scas
sbb
out
fstl
testl
adc
lds
dec
cmp
jg
pusha
push
jmp
fsubs
pop
sub
nop
lcall
or
add
add
stc
cmp
sub
in
or
cmpsb
add
sub
in
cmp
fcoml
jle
and
adc
inc
movsb
or
dec
shr
push
ljmp
jnp
ret
add
cltd
mov
in
leave
outsb
mov
sbb
lods
ss
jmp
mov
cmpsb
dec
mov
insl
dec
in
popf
out
loope
adc
xor
push
out
ja
adc
dec
movb
dec
adc
adc
jecxz
test
ljmp
mov
jbe
dec
adc
mov
and
mov
adc
fidivrl
lods
and
into
add
cmp
pop
add
jne
adc
bound
sbb
or
fistpll
cmpsl
popa
and
xchg
push
mov
lods
adc
jbe
inc
cmp
cmp
out
adcl
jno
mov
xor
cmpsl
jo
in
call
leave
pop
adc
sub
sahf
dec
in
fdivrs
cld
call
int
pop
inc
mov
jl
xor
cmp
les
jo
imul
dec
xor
inc
leave
scas
xchg
or
mov
sbb
in
pop
and
stc
adc
je
or
negb
cmp
and
cs
andl
mov
lock
pop
dec
lods
jae
add
cmp
int
lds
lret
push
les
cli
stos
shlb
or
fstpl
mov
xlat
lea
lret
add
jo
xchg
dec
rolb
fdivr
pop
repnz
xor
push
lods
sub
aam
popa
subb
mov
mov
adc
inc
andb
insl
pop
in
out
xlat
push
inc
andl
or
mov
sbb
inc
out
popa
sbb
or
sbb
es
sbbl
add
sub
rorb
bound
out
jg
push
test
lcall
and
repnz
xor
rclb
dec
inc
aas
stos
mov
insl
cmp
or
jnp
add
ljmp
shlb
dec
mov
pop
pcmpgtd
leave
inc
pop
lds
in
clc
mov
xor
xor
push
sbb
xchg
in
xchg
dec
aaa
xchg
push
loop
cmp
cmp
mov
clc
adc
out
pushf
add
mov
lock
fildl
or
jno
jno
addr16
out
in
jmp
cmc
inc
icebp
jns
pop
repz
push
jl
jns
ss
mov
ss
or
sub
dec
dec
fsubr
jne
lock
mov
nop
jp
jmp
sub
pop
cmpsl
xor
cli
push
sub
and
rcll
pop
es
jg
in
adc
insb
and
and
dec
das
push
inc
pop
pop
pop
insb
xchg
jl
movq
mov
bound
imul
mov
jns
daa
mov
push
aam
in
insb
imul
sub
data16
lcall
sub
scas
aad
xchg
scas
mov
pushw
movsl
push
sahf
mov
cs
test
and
sbbb
mov
dec
sbbl
fstps
ret
xchg
scas
cwtl
sub
push
mov
sti
or
scas
sbb
std
mov
jle
testl
iretw
xor
jmp
mov
cmc
pop
jnp
icebp
jbe
js
mov
pop
and
mov
xchg
inc
mul
cmp
inc
dec
in
pop
sbb
std
and
lahf
call
xorb
and
out
imul
push
lock
add
mov
pop
insb
mov
out
je
lock
xchg
stos
sbbl
iret
mov
test
sti
push
dec
mov
mov
sub
jb
jno
movsl
fsubrs
sbb
adc
imul
stc
sub
mov
jge
mov
fildll
mov
test
jae
leave
lcall
in
mov
adc
into
aas
adc
jl
mov
dec
and
pusha
cmc
xor
pop
into
or
sti
mov
xor
xchg
xchg
sahf
dec
inc
sarl
sub
int3
inc
add
iret
imulb
mov
pop
mov
sbb
mov
loope
int3
lret
pop
adcl
insl
sbb
mov
and
jg
xor
and
pop
and
pop
clc
mov
adc
xlat
pop
inc
jmp
orl
int
fs
push
in
js
sbb
mov
ljmp
cld
dec
pop
fdivl
roll
sarl
fwait
xchg
nop
shr
sub
pop
repnz
cli
clc
fidivrs
loopne
das
or
inc
test
jb
and
xchg
gs
fwait
dec
mov
outsl
testl
sub
test
stos
insl
pop
xor
test
lcall
mov
pop
adc
xor
cs
aas
cltd
mov
xchg
or
mov
mov
call
mov
aas
out
dec
enter
sarl
inc
fsubs
xchg
adc
lcall
aad
ficoml
mov
inc
push
mov
andb
mov
adc
push
cltd
cmp
mov
push
push
popa
sbb
dec
dec
pop
xchg
enter
out
sbb
mov
sbb
sbb
jle
sbb
inc
cld
sbb
in
testb
mov
ja
sub
push
adc
jg
ret
insl
and
and
xchg
fdivrl
adc
call
sub
aad
push
into
mov
stos
andl
mov
sub
mov
or
add
inc
and
in
xchg
xchg
nop
decl
out
xchg
daa
jb
pop
push
mov
scas
dec
add
pop
xlat
imul
fsubrl
mov
nop
cmp
fsubs
imul
mov
jmp
push
sbb
in
mov
xchg
test
cwtl
sub
pusha
and
sbb
imul
pop
int3
dec
pop
loopew
lahf
dec
or
popa
lahf
sub
movsl
dec
lahf
out
rorb
int
adc
pop
inc
lock
leave
sti
jg
mov
ret
in
jnp
add
push
xchg
sarl
ss
sbb
push
mov
mov
push
pusha
lods
mov
lea
inc
sbb
incl
notb
cmc
mov
jne
clc
and
mov
cltd
push
cmp
call
xchg
cmp
cli
cmp
stos
mov
pusha
mov
int
iret
nop
fwait
fwait
mov
inc
add
push
inc
and
mov
xchg
or
mov
int
dec
icebp
xchg
inc
xchg
mov
lcall
rolb
imul
packsswb
lcall
sub
mov
stc
inc
pop
sub
mov
je
jl
nop
cltd
les
pop
xchg
mov
or
xchg
pop
icebp
lcall
push
or
test
imul
jle
cmpsl
sbb
lea
and
adc
cmp
dec
jecxz
mov
jo
push
dec
aas
sub
aam
sub
nop
push
out
sub
clc
icebp
pusha
jae
sub
sar
mov
mov
sbb
loop
sub
jo
adc
pop
and
cmp
scas
dec
hlt
jns
cmp
sub
xor
cmp
lret
pop
xor
push
addr16
sahf
sbb
sub
in
popa
loope
inc
and
sbb
sbb
jns
sub
test
scas
dec
mov
je
add
inc
aas
out
test
push
shll
frstor
push
out
cmc
mov
xchg
jns
bound
mov
test
or
int
data16
push
xchg
push
inc
aaa
sub
mov
in
inc
sbb
filds
mov
in
idiv
pop
push
sub
jmp
mov
and
jmp
jle
xchg
sahf
push
dec
sbb
int3
pop
inc
movsb
sbb
and
int3
call
and
movsb
fs
in
pushaw
rcrl
sbb
and
sahf
rcr
sbb
xchg
inc
sub
lcall
lret
fildl
mov
pop
scas
and
adc
insb
dec
push
cli
jbe
sbb
push
insl
int3
pop
cld
cs
cmpsl
adc
or
sti
inc
lret
gs
add
xchg
or
push
rorl
or
mov
push
add
inc
lods
pop
int3
jecxz
dec
out
inc
ret
inc
popf
fdivp
out
xor
pushf
in
mov
test
test
dec
loope
sahf
insb
sub
push
aas
pop
hlt
lods
mov
xor
push
mov
lock
in
push
out
sbb
pop
adc
push
das
cmp
push
push
push
into
lods
rclb
jp
xchg
call
jbe
arpl
fdivrs
xor
and
psubusb
jbe
mov
inc
repnz
sahf
add
into
dec
push
pop
fs
leave
sbb
rcr
jne
jmp
incl
lahf
xchg
jns
inc
fs
mov
and
shr
outsl
cmp
shlb
push
cmp
jno
mov
or
ljmp
xchg
ret
pop
push
push
and
sub
fwait
enter
inc
rorb
lahf
jns
dec
iret
in
sahf
mov
rorb
sub
ss
mov
hlt
sub
and
xchg
xor
xlat
addr16
cmp
fiaddl
nop
jecxz,pt
xchg
in
cmpsb
in
insl
xchg
sbb
in
pop
adcl
ja
movsl
je
xchg
lods
adc
jle
cmp
dec
sub
and
pop
fbld
or
je
adc
arpl
aas
push
test
rcl
and
repz
jne
pop
idiv
and
pop
fdivrs
leave
push
aam
inc
mov
frstor
cmp
jae
inc
xchg
add
sbb
xchg
lods
jne
mov
cmp
sub
sub
and
and
movsb
cmpb
ja
notb
mov
cwtl
cltd
pop
cmp
dec
test
sbb
lahf
ja
jmp
int3
pop
imul
aaa
out
dec
int3
cld
ret
imul
lock
add
insb
fimuls
out
lods
leave
inc
cmpsl
pop
popa
cwtl
or
clc
and
ljmp
popa
add
add
aas
cwtl
push
xlat
mov
jns
outsl
out
popl
dec
cli
sub
or
push
fidivs
lock
and
mov
inc
std
dec
cwtl
fs
pop
aam
jp
insl
jo
scas
sub
icebp
mov
in
lock
loope
push
arpl
or
adc
and
dec
or
ficoms
shll
and
cmp
sahf
and
dec
adc
push
sti
popf
sbb
fildll
enter
movsb
mov
icebp
loop
push
xchg
add
mov
outsb
leave
stc
mov
out
jns
mov
imul
xor
adcb
sub
in
outsb
or
mov
subl
addb
jmp
and
fsts
xchg
push
sbb
fwait
jl
cmc
out
out
and
pop
mov
test
stos
imul
push
sete
cmp
inc
sbbl
lock
push
fiaddl
aam
mov
jp
inc
or
shl
xlat
ret
inc
xor
cs
sbb
mov
leave
test
cmp
rorl
mov
pop
cmp
add
sbb
inc
pop
out
mov
pop
cli
and
mov
sub
pop
mov
sub
cmp
jno
xchg
cmp
pusha
xchg
scas
sbb
fists
sbb
imul
int3
add
push
sbb
je
lret
or
call
test
add
push
out
mov
cli
push
in
cmp
dec
sbb
lcall
jecxz
mov
fistpll
and
mov
int3
cmpsb
xlat
push
fsubrl
fs
cwtl
call
cmp
inc
mov
inc
xor
cmp
sub
inc
cmpsl
mov
loope
push
es
inc
daa
inc
pop
pop
push
xlat
add
jl
mov
push
xor
inc
flds
sub
ljmp
scas
cmpsb
into
cmp
enter
loopne
lret
and
cmpsl
push
aaa
stos
or
cltd
adc
fistpll
call
mov
lods
popa
hlt
lods
stc
nop
aad
loopne
add
pmaxsw
inc
cmp
pop
cmp
lods
sub
in
jmp
xor
and
xor
xchg
mov
out
sub
bound
cvtdq2ps
outsl
ljmp
insb
cmp
imul
flds
lahf
adc
stos
repz
icebp
into
adc
test
cmp
addr16
jno
out
mov
sub
sbb
mov
adc
out
jnp
mov
sub
mov
outsb
pop
pop
cmp
outsl
std
insb
int
sbb
or
inc
jl
xor
leave
notb
add
sub
cwtl
add
add
pusha
out
inc
test
loope
pop
jne
jmp
in
in
pushf
jae
inc
pop
mov
mov
or
popf
mov
dec
fnstenv
mov
loope
mov
pop
hlt
lods
rorl
ret
or
lret
es
int3
repnz
xchg
add
mov
and
dec
call
in
jmp
adcl
pop
mov
lods
lods
add
in
out
rclb
les
cmp
add
pop
dec
aas
mov
lret
pop
cmc
cld
jecxz
out
test
adc
adc
push
push
or
jo
dec
mov
test
xlat
xchg
shlb
pop
dec
push
mov
stos
iret
or
hlt
shll
or
jns
orb
and
cmp
xchg
cmc
test
adc
adc
inc
mov
xlat
xlat
arpl
xlat
push
in
ret
popa
mov
pop
test
sub
sti
sbb
xchg
dec
int3
cmp
incl
test
cmp
cmp
push
and
xchg
jbe
mov
lret
pushf
shrl
imul
push
pop
das
icebp
add
jae
xchg
lods
int3
add
add
mov
or
mov
jb
inc
and
pop
xor
jl
add
push
repnz
xlat
dec
jle
pop
cmp
xchg
insl
call
pop
scas
or
mov
inc
pusha
or
imul
ljmp
nop
sbb
xor
add
rorl
dec
sbb
sbb
push
movsb
xor
push
push
xchg
cli
mov
fpatan
pslld
xchg
pop
test
aaa
js
add
pop
es
out
sbb
dec
cwtl
pop
arpl
lahf
sti
into
enter
pop
mov
movsb
pop
outsl
gs
mov
pop
sub
cld
adc
nop
iret
call
hlt
mov
dec
jg
inc
fmull
add
jl
mov
mov
ss
fdivs
ds
add
pop
add
xchg
out
lods
ja
cmp
fildll
mov
fcmovnu
loop
push
pop
mov
lahf
jp
cs
or
mov
pop
jno
xor
jno
es
mov
aad
movsl
inc
mov
aas
sarl
sar
inc
jmp
clc
add
pushf
repz
adc
or
cmp
lret
es
mov
mov
adc
jb
lds
jo
andl
sub
or
gs
sub
jmp
fdivrs
into
dec
mov
sbb
jp
mov
movsl
xchg
mov
push
je,pn
shll
es
and
lea
adc
mov
pushf
pop
ret
push
or
sbb
rclb
xchg
jnp
out
fsubrl
push
add
cmp
sbb
loope
stos
ljmp
btr
dec
adc
jnp
ret
push
and
pop
push
pop
mov
cwtl
test
fimull
xchg
fimuls
push
jne
in
dec
loop
jmp
mov
mov
mov
adc
cmc
scas
scas
rcll
cmp
imul
push
leave
insb
and
aas
aam
int
fcoml
mov
mov
sbb
push
push
ds
xchg
aaa
sub
in
ret
cmc
test
repz
cmp
adc
cmp
pop
mov
push
pop
push
nop
or
ja
push
mov
lcall
or
in
clc
in
dec
aaa
movsb
pop
in
push
in
sub
xor
lods
stc
dec
inc
sti
inc
loope
lahf
pop
call
xlat
cmp
repz
lahf
imul
shld
push
or
inc
out
pop
pushf
in
mov
and
imul
mov
adc
fnstenv
movsl
adc
mov
movsl
xor
or
xor
push
out
sbb
and
shl
push
cmp
inc
loop
xor
xorl
mov
adc
subl
xchg
or
fs
adc
fsts
pop
aas
leave
insb
int
push
js
scas
jge
aam
jbe
lods
pop
sahf
push
jmp
andb
adc
cmpsl
arpl
cwtl
mov
jmp
sbb
push
imul
or
xor
je
repnz
lret
mov
mov
sbb
dec
subb
mov
hlt
jnp
push
sub
cltd
mov
cwtl
loopne
sbb
xchg
jnp
push
stos
dec
dec
and
cmp
mov
pusha
inc
out
lret
xlat
mov
dec
dec
mov
addr16
lret
jo
pop
and
std
lret
and
inc
sub
int3
cmp
dec
icebp
or
mov
push
pop
jbe
pop
ds
loope
push
push
data16
int3
enter
inc
leave
mov
xlat
aad
mov
inc
in
cmp
bound
jno
mov
repz
xchg
repnz
rorb
cld
xchg
cmc
sbb
fwait
lds
adc
sbb
ja
paddusb
daa
clc
imul
or
mov
mov
xchg
add
pop
cmp
mov
rorl
call
leave
lods
aas
hlt
sbb
push
outsl
inc
repz
and
ret
sbb
fstpt
xor
in
sub
xchg
inc
mov
inc
inc
add
rol
iret
cmp
xor
jae
jp
adc
mov
jle
mov
mov
ja
jno
push
cmp
mov
add
inc
jg
jno
ss
dec
cmove
mov
movsb
pop
in
and
call
clc
pop
mov
push
std
lret
mov
in
sub
cmp
stos
sub
push
sbb
inc
push
push
and
inc
mov
cli
ljmp
dec
nop
js
jo
jl
sbb
cmp
in
rol
scas
cwtl
mov
fcomip
xchg
cmp
in
ja
arpl
rcrl
push
int
and
mov
mov
leave
dec
jnp
mov
les
and
xchg
das
add
push
dec
sub
xchg
push
mov
pop
imul
insb
or
mull
push
daa
mov
pandn
xor
movsb
outsl
xor
ds
cmp
fwait
pop
test
xor
lret
addl
jle
xor
movsl
mov
cmc
call
add
push
push
adc
out
jp
mov
inc
and
jmp
push
dec
dec
scas
iret
test
repz
ljmp
xor
mov
mov
lods
in
in
ja
rcll
push
out
lods
jno
sbb
insl
jae
stc
mov
sub
fsubl
jb
stc
inc
jbe
rorb
mov
lds
mov
sahf
bound
aad
mov
ds
mov
lock
push
loopne
pusha
and
repnz
mov
lcall
daa
sbb
jbe
push
pop
jnp
inc
loope
ret
out
loop
xor
push
ja
inc
fdivs
adc
popf
xorb
sahf
or
jecxz
fchs
jo
jge
mov
or
pop
and
sahf
lea
shll
xor
mov
mov
jg
std
dec
rolb
orb
insb
dec
mov
dec
imul
inc
mov
sbb
aaa
or
xchg
stos
subl
dec
or
addr16
test
pop
cmpsl
jne
and
popf
or
ljmp
sbb
ljmp
arpl
addr16
or
cmp
in
mov
push
ja
dec
cmp
ret
jbe
repnz
or
fisttpl
mov
rcrl
xchg
inc
int3
pop
or
jae
push
and
mov
mov
mov
inc
jno
mov
addl
dec
cmpsb
mov
insb
or
mov
data16
in
std
pusha
divb
push
roll
in
pop
stos
adc
adc
xor
stc
lds
mov
xor
mov
lock
cmp
das
adc
hlt
and
dec
out
jecxz
fimull
outsl
xor
jle
int3
xchg
or
aam
add
lret
inc
stc
mov
fsubr
pop
add
mov
fdivrl
cmpsb
jne
movsl
jmp
and
out
sbb
ds
dec
int
xchg
push
shlb
out
sahf
and
sbb
cld
rcl
xchg
jo
mov
inc
loop
decb
ret
push
repnz
lret
loopne
xchg
mov
ss
add
jmp
popa
mov
adc
push
inc
sub
movsb
js
dec
xchg
push
xchg
out
les
cs
add
gs
xchg
pop
pop
jmp
adc
insb
pop
popf
sub
jg
nop
pop
jmp
inc
dec
in
mov
pop
add
adc
jo
mov
xchg
ret
xor
push
mov
push
push
insb
inc
test
mov
ret
mov
cmp
test
dec
cwtl
sbb
adc
loope
pushf
imul
jecxz
jecxz
xor
adc
stos
mov
jl
jmp
dec
xchg
loop
cmp
out
popf
pop
lods
pop
mov
bound
jb
cltd
in
aas
jnp
in
in
or
repz
ss
mov
pop
icebp
fs
mov
jmp
out
popf
push
add
loope
or
stc
pop
jnp
mov
test
add
mov
push
inc
cmc
and
or
xchg
cmp
inc
lods
xchg
sub
mov
dec
mov
lds
xlat
xchg
pusha
xlat
in
in
xchg
jge
ret
xor
jle
mov
and
fistps
cmp
jmp
xchg
in
push
mov
xor
pop
fstp
ss
mov
mov
nop
push
gs
insl
repz
mov
daa
dec
and
cmp
cmp
pop
push
lcall
or
lods
outsb
ds
pop
addr16
loopne
out
sti
pop
scas
cli
inc
inc
lea
or
inc
mov
sbb
lcall
sub
push
inc
add
xor
jno
and
call
bound
pop
pusha
push
or
out
ds
jae
mov
sti
rcrl
sahf
dec
mov
pop
xchg
mov
dec
jmp
xor
adc
mov
xlat
les
inc
cmp
cwtl
inc
pop
mov
sub
and
ss
insb
add
test
dec
mov
pop
push
xor
mov
jmp
adc
jo
or
xor
sbb
xchg
inc
jae
rorl
adc
or
add
sbb
nop
adc
dec
test
jg
or
jmp
testl
dec
sub
icebp
fucomp
loop
mov
and
or
in
jno
push
arpl
jecxz
mov
adc
aaa
xorl
mov
inc
fstpl
fiadds
add
addr16
fldl
aam
and
inc
sbb
add
je
cltd
sbb
push
sub
sub
mov
enter
jmp
lock
loop
ret
mov
push
or
push
add
rol
in
dec
add
cmc
test
sti
and
iret
outsb
std
adc
xchg
dec
popf
sti
mov
add
inc
leave
cwtl
jo
icebp
inc
shrl
test
jns
cld
push
push
ret
inc
inc
repz
cmp
loope
cwtl
mov
xchg
push
and
sub
dec
in
jno
push
push
sub
dec
or
jns
mov
lcall
sub
xchg
add
push
imul
cmc
mov
outsb
mov
add
jp
fsubs
sbb
push
jne
cmpb
sub
cli
ficoms
js
cmp
mulb
pop
jno
dec
outsl
push
das
dec
int3
in
vcmpsd
push
pop
mov
adc
pop
stos
push
xchg
lods
or
repnz
add
hlt
mov
adc
enter
push
insl
adc
test
loope
fsubrs
pop
xlat
jnp
rclb
xchg
loopne
loopne
pop
out
movsl
xchg
mov
iret
push
and
adc
sub
inc
aad
lcall
push
mov
push
out
out
scas
push
lds
aam
out
sbb
sahf
push
icebp
lea
pop
inc
rcll
jo
pusha
push
and
es
jge
dec
and
out
push
sub
daa
xchg
jecxz
mov
xchg
mov
into
imul
mov
out
fiaddl
pop
lcall
jb
push
add
cmp
mov
pop
pop
jns
outsl
insl
shll
xor
xor
pop
out
push
inc
xor
jnp
outsl
xchg
xor
iret
xchg
and
dec
xchg
sub
or
mov
movsb
sahf
mov
stos
jns
shll
aas
es
mov
pusha
leave
les
pop
gs
stc
mov
call
xor
jecxz
mov
jb
jg
and
out
push
mov
jne
aad
sbb
lods
repnz
mov
sbb
xchg
data16
rcrb
ss
push
fs
or
pop
dec
xor
aad
icebp
add
xchg
jns
fs
inc
mov
into
aaa
xadd
enter
or
push
push
pop
pop
xor
and
mov
test
add
jbe
cmp
and
lds
jno
into
fs
dec
cs
inc
lock
hlt
negb
push
sbb
cli
or
cmpsl
push
push
xchg
mov
lods
bound
out
enter
fnstsw
dec
rcr
cwtl
or
stos
shll
sub
psubw
push
push
mov
ljmp
fimuls
jb
mov
and
xchg
cs
or
inc
jmp
popf
repnz
scas
sahf
aaa
sbb
or
cmp
xchg
daa
lcall
outsl
aas
lds
mov
mov
pop
enter
jb
sbb
add
arpl
push
mov
jecxz
cmp
lods
pusha
add
negb
stc
int3
jns
stos
adc
push
lea
dec
sti
lret
and
xchg
jne
add
and
mov
loopne
inc
out
jns
mov
or
cmpl
cmp
xchg
enter
jo
popa
mov
dec
xchg
push
pop
mov
popa
leave
std
dec
cli
cltd
jl
push
repnz
cmp
or
imul
mov
rep
xchg
pop
add
icebp
jl
js
pop
loop
shlb
stos
cmp
xor
jo
pop
cmp
inc
pop
ret
into
xor
mov
stc
mov
xor
dec
pop
and
or
push
fldcw
js
movl
les
nop
insb
enter
stos
cmp
inc
inc
inc
xchg
jmp
pop
jge
dec
sbb
sub
ljmp
ds
es
or
orb
push
or
and
in
adc
ret
cmp
lcall
xor
lods
lea
mov
jmp
gs
stc
aas
cmp
fmuls
retw
inc
jbe
jno
sbb
pop
cmp
jl
lea
icebp
popa
xchg
sbb
scas
loopne
cmp
inc
mov
adc
jae
pop
push
jne
insb
pop
pop
test
scas
add
imul
cmp
sbb
stos
jecxz
cmp
add
inc
xchg
cmp
or
sahf
mov
test
pop
sbb
repnz
adc
shlb
enter
sahf
fildl
pop
daa
dec
jo
idivb
xchg
jmp
sbb
lcall
jmp
dec
fs
push
sbb
hlt
adc
cli
cmpl
dec
dec
push
pop
je
or
xchg
mov
pop
inc
pop
jo
jg
push
sbb
push
xchg
adc
cmp
xchg
fists
pop
jl
sub
pop
cltd
lcall
pop
hlt
jmp
add
push
mov
lods
dec
imul
fwait
in
xor
repz
xor
cld
pop
int
fcom
jmp
notl
call
push
xchg
mov
mov
sbb
pop
repnz
jne
push
inc
call
mov
in
and
xchg
pusha
mov
and
dec
dec
cmp
adc
mov
loopne
mov
and
vmovdqu16
push
insb
sti
mov
sub
sahf
mov
sbbl
pusha
and
in
js
mov
jb
leave
cmpsb
in
sub
jge
lods
jb
dec
mov
xor
insl
std
sbb
pushf
xor
cmp
loop
xor
mov
daa
inc
fsubl
mov
ja
in
loop
shll
mov
jnp
push
stos
jo
fstpt
xor
or
fs
adc
orl
add
inc
xchg
cmp
jle
mov
sub
je
das
jmp
sbb
scas
jo
test
mov
popa
cli
cmp
mov
push
mov
or
call
push
jnp
pushl
testb
mov
dec
loopne
mov
std
cld
add
hlt
clc
adc
inc
mov
cmp
arpl
int
loope
xor
push
mov
xor
rep
out
or
sbb
sub
movsb
lock
sarl
in
push
pop
mov
sub
sti
stos
dec
addb
ds
lea
sti
aam
adc
lods
push
push
mov
pop
rol
jo
push
js
mov
adc
fwait
cmp
mov
ret
daa
and
mov
outsb
push
inc
jno
and
arpl
fs
xchg
fistl
out
cmp
ficoml
jae
fadds
push
fs
mov
jge
adc
out
adc
jne
ljmp
jecxz
scas
jmp
xor
mov
test
add
push
push
xchg
flds
push
call
jl
and
mov
ret
adc
lahf
insl
sub
inc
mov
fwait
xchg
cltd
add
mov
sbb
fsubp
add
xlat
lods
adc
adc
mov
je
sbb
fldl
and
add
dec
mov
hlt
jg
push
icebp
sbb
repnz
shrl
dec
js
test
mov
sbb
inc
inc
inc
fsubrl
lods
imul
xor
sti
sub
mov
in
adc
leave
and
sbb
jbe
fcmovb
mov
shll
test
test
shl
or
scas
outsb
or
xchg
cmc
icebp
sahf
gs
and
pop
adc
add
gs
hlt
lds
ret
adc
cld
mov
sti
out
fistl
cmp
and
mov
push
push
sub
cltd
pop
jl,pn
mov
insl
movsb
pop
xor
pop
divl
test
and
mov
pushl
sub
inc
mov
pop
sub
fwait
mov
xchg
jmp
dec
icebp
mov
shl
jle
shrl
scas
out
sbb
push
lret
pushf
lds
movsb
cmp
dec
subl
rcll
clc
jo
shl
jns
pop
lea
add
add
xchg
mov
repnz
pop
repz
scas
add
mov
mov
push
call
out
or
popa
call
cmpsb
in
insl
pop
jo
cltd
pop
lods
fadds
xlat
jb
sub
mov
cmp
mov
adc
clc
jae
xorl
mov
lods
rcl
clc
aas
sti
cld
enter
mov
cmp
sub
jae
pop
fs
and
fs
lret
mov
cmp
adc
xchg
pop
ret
and
pop
or
sub
push
mov
xor
popa
add
icebp
outsl
lock
movsl
pop
ret
cs
push
lock
sub
push
jb
mov
sub
lods
pop
daa
or
inc
pop
mull
pop
add
xor
mov
mov
push
fs
pop
test
add
jb
lret
sub
aam
ret
push
out
push
sbb
xlat
add
jp
xchg
sbb
jns
add
mov
push
lcall
repz
fcoms
loope
dec
ja
cmp
fs
cmp
xchg
aad
mov
adc
push
jle
fidivs
mov
mov
jge
jns
xchg
jne,pn
jge
add
pop
push
xor
dec
mov
or
mov
mov
scas
cmp
clc
testb
dec
out
push
pop
or
rcll
out
adc
cwtl
cmp
sbb
test
lock
push
or
xor
pop
mov
or
xchg
pop
dec
lods
aam
shrb
or
lds
and
cmp
dec
adc
or
dec
iret
cltd
pop
add
sub
pop
repnz
scas
mov
xlat
sti
cmp
ss
lret
fisubrl
sbb
lret
in
mov
cmp
push
xchg
insb
sub
adc
jmp
and
inc
or
mov
mov
xchg
cltd
pop
int3
mov
subl
movsb
xor
mov
test
dec
dec
dec
ds
sbb
push
xchg
test
scas
cmpsl
adc
int
jle
insb
dec
add
subl
push
fs
mov
in
dec
mov
daa
call
inc
sub
or
fnstcw
stos
jnp
jo
fsubrs
or
push
je
add
inc
loop
stc
xchg
jns
adc
inc
pop
scas
loop
or
push
bound
and
dec
pop
popa
cmp
or
dec
inc
mov
pop
jno
jbe
mov
clc
outsl
shl
fwait
mov
add
cmp
in
mov
cmp
fidivs
in
push
mov
es
xchg
pop
notb
loop
mull
addl
xchg
jg
dec
sub
icebp
push
repz
dec
push
sub
insb
fdivs
mov
xor
inc
aam
jbe
push
xor
enter
inc
es
mov
and
test
insl
inc
pop
int
sarb
nop
jge
mov
dec
mov
popa
inc
mov
xchg
call
xchg
pop
cmc
aaa
xchg
mov
sbb
inc
add
cmp
mov
sahf
orb
adc
cld
pusha
xchg
fdivr
mov
xchg
inc
notb
and
int
push
sarb
das
bound
add
cld
sub
imul
mov
sbb
push
pop
out
mov
repz
cmp
jne
dec
pusha
aaa
out
xchg
pushf
adc
lret
mov
push
xchg
pop
enter
sbb
hlt
push
push
fisttpll
inc
jl
movsl
leave
pop
mov
aad
cli
mov
leave
dec
int
lds
ja
push
sub
lods
fmul
adc
and
xor
fisubrs
outsb
cmp
sbb
push
jmp
frstor
pop
sbb
popf
insb
add
adc
xor
xor
xor
and
mov
ret
jle
mov
pop
aas
inc
test
sti
jmp
xchg
fists
cvttps2pi
test
shrb
call
and
dec
ret
incl
and
cmp
sub
pop
stos
mov
and
iret
mov
pop
jle
mov
xchg
cmp
mov
inc
je
xchg
pop
jns
add
adc
xchg
xchg
imull
les
dec
ja
cmp
sbb
cld
sbb
loope
add
fldcw
aam
jns
mov
inc
or
scas
mov
inc
xor
mov
and
mov
fidivrl
rcl
inc
sar
push
dec
pop
cmp
push
lods
push
rclb
inc
adc
stc
jno
imul
mov
add
jl
sbb
pop
sbb
out
lods
or
jne
or
hlt
pop
aam
call
lods
cld
push
stos
ljmp
in
test
fdivrl
orl
insb
pop
push
and
xor
push
repnz
mov
push
icebp
mov
mov
loope
cmpsb
inc
push
jg
mov
mov
lcall
dec
clc
lahf
mov
lcall
sti
pop
sahf
cmp
rclb
popl
mov
jmp
addr16
dec
ret
jb
aaa
fimull
mov
test
push
or
or
pop
pop
adcb
popf
jo
outsl
int3
xor
repz
lret
inc
loope
in
lock
adc
adc
sub
imul
mov
jmp
jge
inc
frstor
imul
push
and
dec
cmpsb
lret
mov
lds
in
das
cld
scas
sbb
sub
xor
pop
push
adc
sub
in
scas
xchg
nop
mov
fistpl
push
xor
adc
fimuls
inc
icebp
jmp
xor
mov
jbe
add
xchg
xor
cltd
mov
paddq
mov
adc
out
pop
fdivl
loope
mov
mov
ret
push
movsb
push
jmp
es
shll
sub
sub
lcall
mov
push
cmp
mov
push
mov
or
pop
pop
cmc
xor
das
enter
fistps
mov
inc
mov
test
adc
popf
daa
mov
push
sbb
lcall
cmp
iret
cld
scas
or
and
fsub
lret
xchg
cli
push
ljmp
inc
xchg
mov
adc
inc
mov
enter
pusha
jae
ds
hlt
and
aas
sysenter
cmc
cmc
and
mov
fstps
mov
into
add
pop
ss
pop
mov
mov
icebp
sub
cmpsb
mov
jns
in
cmc
lds
subb
xchg
add
cmp
xchg
inc
cs
inc
push
lods
mov
sbb
cli
cltd
insl
mov
or
fistps
in
mov
cli
rcrb
add
outsl
aaa
fiaddl
pop
imul
andl
rclb
add
fs
popf
push
cli
ljmp
ret
cs
mov
fsub
in
int3
inc
pop
sbb
sarb
aas
test
movsb
jnp
jmp
mov
adc
stc
sub
testl
mov
decl
shr
xchg
lock
adc
call
pop
into
xchg
insl
pop
sub
mov
xor
mov
lahf
pop
push
lods
call
scas
cli
or
mov
gs
repz
sbb
jle
hlt
test
out
mov
and
fs
add
sub
xlat
jbe
jb
jmp
xchg
push
jo
jnp
or
jp
xchg
pop
hlt
cli
xchg
dec
mov
daa
ds
mov
xlat
xchg
pop
ss
test
das
sub
pushf
jmp
imul
orb
inc
push
jbe
ficoml
jo
and
push
cmovge
add
lds
or
mov
xor
js
inc
push
adc
cmpsl
xchg
ret
shr
xor
in
cmpl
loopne
xchg
or
in
fs
repz
sbb
or
add
add
je
xor
sub
sti
imul
lods
rcrl
lret
xchg
mov
xor
arpl
adc
inc
mov
addr16
inc
push
fs
dec
andb
cltd
mov
xchg
test
icebp
fsub
pop
cltd
stos
ret
rcrl
fstl
sbb
mov
rorl
outsl
ss
dec
sub
out
sbb
data16
into
jns
in
push
jecxz
fwait
aam
xchg
xchg
pop
in
stos
jae
arpl
pop
pop
xlat
fisubl
dec
pop
data16
fisttpll
cs
jae
mov
cwtl
test
sub
inc
shll
and
xchg
sahf
or
jp
xchg
pusha
andl
dec
sbbb
xchg
cmp
xor
xor
push
inc
cld
sahf
das
jecxz
jns
dec
push
leave
xor
push
jecxz
int3
imul
mov
ret
xchg
int3
ret
rclb
pop
into
call
push
loopne
jg
dec
lods
push
xor
jp
js
rolb
jecxz
mov
sub
lret
mov
leave
sub
inc
inc
dec
add
lock
lea
mov
adc
pop
sub
xchg
pop
jae
scas
ss
push
add
aas
pusha
add
gs
mov
xor
push
jge
push
imul
frndint
lds
incl
fidivl
jp
mov
jbe
cmp
int3
in
mov
pop
out
fists
dec
arpl
or
outsl
test
inc
or
xchg
mov
sub
hlt
hlt
pop
shll
push
dec
insl
push
xlat
lcall
cmc
incl
fistl
cmp
loop,pt
lds
pop
dec
pop
mov
or
sub
rcr
lcall
sub
inc
mov
inc
iret
fistpll
jb
dec
pop
test
aam
xchg
jecxz
out
mov
pop
stos
fisttpll
dec
mov
aam
mov
mov
sbb
jne
mov
and
adc
sbb
cmp
push
in
jne
mov
les
popf
orl
fstp
pop
mov
stc
insb
mov
mov
mov
in
int3
in
cmpl
jecxz
out
xchg
ljmp
push
stos
add
cli
leave
sub
lcall
mov
pop
ror
pop
addr16
imul
out
push
jnp
adc
repnz
cmp
pop
mov
push
bound
mov
sub
xor
pop
shl
jmp
sahf
hlt
inc
xchg
xor
shlb
pop
in
aaa
and
pop
cmpsl
int
outsl
fwait
push
arpl
rorl
ror
inc
fnsave
ja
aaa
pop
jns
jne
daa
mov
pop
imull
daa
push
rcl
adc
cmc
sahf
adc
fnstcw
jg
push
dec
ficoms
xor
dec
scas
dec
xchg
pop
xchg
and
sub
aad
xchg
mov
or
inc
pop
lods
cmp
add
lods
rorb
negl
ret
fcmovu
mov
lock
or
cmp
in
push
mov
mov
cmp
cs
enter
or
xchg
test
jae
xor
adc
lret
or
xchg
icebp
cmp
cltd
or
out
das
test
pop
pop
cmp
sbb
push
shll
sbb
es
in
pop
inc
push
nop
jne
sub
shl
loop
je
sbbl
mov
mov
aaa
pop
adc
push
leave
mov
xor
dec
sbbb
lds
pop
ljmp
push
nop
idivb
lea
sti
jb
dec
test
fidivrs
or
movsb
jo
inc
or
roll
mov
or
int3
mov
pushf
pushf
shll
mov
mov
xchg
inc
cmpsb
leave
sti
movl
stc
and
ja
or
jo
or
cmp
jp
lods
sub
pop
sub
jge
loope
stos
shll
inc
pop
ljmp
inc
and
shl
mov
push
or
or
outsl
cmp
rcrb
pop
pop
sbb
cmp
push
vpshuflw
ss
jnp
call
mov
and
mov
push
mov
loope
and
int
addps
imul
sti
jo
mov
out
and
in
jns
popf
xchg
fdivrs
or
xor
std
in
hlt
insb
sti
sbb
sbb
push
mov
cwtl
xchg
sbb
mov
inc
mov
jo
out
inc
addb
shrb
popf
dec
pop
xchg
and
stos
cld
clc
pop
and
jg
mov
xlat
imulb
pop
push
rorl
jae
pop
dec
cmp
gs
fdivrp
add
jecxz
or
cmp
fiadds
pop
xchg
fs
inc
testb
jmp
insb
test
inc
xlat
inc
adc
xor
xchg
or
ljmp
gs
pop
sub
cld
repz
pop
cmp
daa
cmp
adc
pop
or
ficomps
movsb
jno
or
xor
cmp
imul
popa
mov
jnp
dec
daa
fisttps
mov
addr16
sbb
push
mov
mov
fcmovnb
scas
in
jge
adc
push
jo
cmp
adc
scas
sbb
mov
sub
sbb
mov
inc
push
pop
cmc
into
fildl
sarl
fnstenv
cmp
or
insb
jns
mov
adc
nop
mov
xor
inc
push
pop
xchg
popa
jge
lret
jp
jmp
lock
icebp
lcall
clc
mov
cmp
dec
cmp
imul
cmp
pop
sub
add
mov
add
mov
mov
add
dec
leave
add
jb
sub
sahf
xlat
into
cmpsb
sub
fbld
mov
adc
les
add
hlt
lret
push
aaa
orl
pop
push
sub
stc
xchg
sub
cltd
mov
adc
sub
pusha
out
mov
jae
add
ret
loope
push
xchg
popf
mov
or
xchg
mov
cmp
pushf
nop
lock
aam
xor
jno
dec
cmp
sbb
fnstcw
adc
les
pop
cmp
fdivs
mov
ret
jmp
ficoml
lods
outsb
test
jnp
lds
lods
push
out
in
mov
mov
cmp
sbb
sbb
sbb
mov
jns
dec
mov
stos
add
lret
jne
sub
aaa
hlt
movsl
scas
pop
fisubs
clc
subb
les
xchg
jb
neg
cmp
or
fdivl
dec
xchg
mov
sbb
cs
mov
jge
pop
rclb
adc
dec
pop
lods
repz
imul
inc
ret
jmp
cmpsl
shrb
lock
xchg
xchg
push
sbb
xchg
inc
nop
lods
push
sbb
xor
es
call
jno
rcrl
int3
out
notb
sub
fdivs
jbe
mov
insl
pop
icebp
mov
jb
rcll
push
dec
xlat
add
pop
and
mov
imul
fdivrp
xchg
cmp
xor
call
out
pop
xchg
pop
stos
cwtl
xchg
adcl
pop
ljmp
mov
ds
call
mov
imul
xchg
adc
cmp
adc
dec
cmp
adc
iret
push
push
adc
cli
cmpsb
mov
adc
sub
adc
ss
mov
dec
lret
dec
das
dec
xchg
mov
test
push
jnp
mov
jecxz
xchg
lods
pop
addr16
out
inc
dec
call
insb
xchg
mov
into
data16
mov
rcrb
xchg
jge
ret
push
mov
sbb
in
cmp
sbb
xorl
mov
xchg
sbb
loopne
ja
pop
test
or
inc
xor
aas
cwtl
inc
pop
xor
incb
sub
adc
push
jo
sbb
cmp
jecxz
sbb
sahf
lock
sub
enter
jno
aas
rorb
mov
sub
xlat
push
subl
cmp
aaa
ds
out
jmp
jb
aam
js
xor
bound
lds
rol
or
xchg
ret
push
inc
enter
pop
and
cmp
mov
leave
mov
cmp
push
leave
arpl
mov
mov
ljmp
addr16
xor
arpl
pop
rolb
in
addr16
push
mov
loope
data16
push
mov
fcoml
inc
sbb
test
xor
adc
and
js
mov
pop
add
sahf
push
add
iret
fcomps
aam
repz
jl
mov
daa
sbb
mov
scas
jecxz
pop
mov
call
lds
sbb
neg
jo
push
mov
lods
xor
xor
scas
sbb
and
cmp
or
fidivrs
or
adc
imul
mov
and
jns
mov
pop
adc
icebp
scas
stc
scas
cltd
repz
inc
mov
enter
cmp
mov
and
adc
mov
cli
push
notb
xchg
push
imul
jmp
int
test
mov
dec
sbb
and
mov
push
cmc
push
xchg
ja
das
sahf
cmpsb
imul
outsb
or
xchg
ja
xchg
lea
fstps
xchg
enter
pop
test
sbb
sbb
repnz
push
cmc
push
lcall
jp
xchg
scas
stc
ds
rclb
push
xchg
pushf
mov
std
les
lret
test
lahf
hlt
mov
jg
shlb
adcl
movsb
outsb
sbb
sti
sbb
pop
jmp
sub
sbb
xchg
push
cwtl
rcll
mov
out
jns
stos
movsb
mov
data16
pop
inc
pop
sti
or
movb
mov
sbb
out
jb
mov
inc
cmpsb
orb
shrb
lcall
shrl
fwait
pushf
scas
push
inc
push
dec
sbb
xor
jo
int3
jo
outsl
xorl
pop
mov
cmc
pop
sub
mov
sub
lock
inc
jle
fwait
int
in
aaa
pop
push
fwait
std
cmp
mov
lret
int
das
fiadds
dec
sub
lcall
xor
lock
jbe,pn
xor
dec
daa
mov
or
lahf
out
sub
dec
push
dec
or
mov
repz
inc
fmul
adc
cmp
imul
xchg
mov
test
add
cltd
popf
push
stos
loopne
aad
fistl
mov
xchg
and
cmp
push
popa
fnstenv
rcrb
xchg
fildl
pop
mov
imul
fisubl
mov
insb
inc
repnz
outsb
mull
dec
jne
int
cmp
rorb
addr16
jne
aad
inc
icebp
or
gs
idiv
xchg
push
cmpsb
lds
loop
jnp
mov
or
mov
rol
add
pop
mov
jne
push
lods
out
jg
lahf
cltd
fisttpl
jae
mov
sub
fwait
in
or
pusha
dec
xchg
mov
in
pop
sub
dec
add
mov
jne
js
push
jecxz
nop
sarl
xchg
xchg
xor
mov
ret
jle
imul
push
lods
outsl
xchg
out
add
das
xchg
jle
mov
push
daa
fisttpl
push
xor
inc
movsb
lret
sahf
jle
xchg
mov
test
pop
sub
pushf
xchg
jecxz
dec
hlt
push
jp
insb
mov
sub
add
call
das
enter
or
mov
mov
jnp
or
mov
mov
in
mov
xchg
pop
push
add
push
xchg
in
je
cli
enter
rcrl
scas
or
loopne
stc
inc
ss
cmp
lret
adc
sub
pop
int3
test
push
pushf
or
or
aas
subb
cmpsb
movl
or
addl
movsl
jno
mov
in
pop
loope
es
test
jl
inc
cmpsb
jl
sbb
cmp
sbb
movsl
jo
lods
push
mov
dec
lcall
cmp
cmp
and
xchg
mov
xchg
mov
aad
mov
iret
or
inc
call
push
leave
lods
mov
mov
cli
inc
testl
sbb
frstor
call
ror
and
and
leave
adc
int
mov
int3
aas
mov
xchg
dec
xor
pusha
dec
repnz
out
mov
jge
xchg
test
mov
push
mov
bound
pushf
dec
pop
mov
mov
shrb
sbb
push
lods
adc
xlat
lds
addr16
das
jle
sbbl
add
mov
mov
adc
test
imulb
test
cmp
sub
and
cmp
mov
pop
es
push
sahf
push
pop
pop
xor
dec
cmp
lods
pop
aam
lret
ret
imul
rcrb
push
loope
add
outsb
adc
pop
call
fimull
push
lds
mov
lea
lret
movsl
cwtl
xor
in
stos
inc
dec
fldt
test
cwtl
xchg
xor
cmpsb
mov
out
test
push
mov
pushf
dec
call
adc
dec
jnp
inc
lret
and
sub
cli
dec
out
mov
or
cld
jmp
fldl
inc
or
push
xchg
mov
popa
cmpsl
xlat
inc
cmpsb
xor
clc
jp
leave
sbb
xchg
mov
push
xchg
inc
sub
outsl
cmp
les
enter
mov
inc
or
sbb
insl
pop
ja
test
shlb
add
add
cmc
clc
flds
and
push
or
add
pusha
or
loopne
js
sub
leave
inc
sub
cmp
add
or
fidivrl
sub
fldl
push
xchg
pop
inc
mov
stos
jmp
loope
mov
cmp
sbb
ficompl
xchg
adc
stos
pop
mov
loopne
lcall
nop
sbb
mov
push
mov
imul
and
out
repnz
repz
outsl
cli
data16
out
outsb
shr
sub
jns
xchg
xor
mov
jge
xor
push
lahf
and
dec
pop
clc
lods
fmull
stos
mov
data16
js
mov
push
pushf
lods
lods
dec
pop
xor
sarl
loopne
mov
mov
jp
dec
mov
inc
xor
xchg
mov
sub
into
sub
fbld
sbb
xor
push
cmpsl
or
xchg
push
add
mov
jl
jns
sub
fs
fadd
stos
or
out
and
mov
enter
dec
in
inc
mov
or
add
and
and
dec
xor
arpl
xor
xchg
mov
loope
dec
daa
adc
jo
xor
pusha
aam
cmpsl
mov
cltd
lahf
cmp
ficoms
or
adc
divl
sub
xor
lods
jbe
fiaddl
js
aad
das
test
ss
jo
addr16
xlat
mov
repz
jo
jmp
lea
ss
loope
sti
sbb
es
test
adc
jp
mov
mov
xchg
repz
fcoms
add
cmc
jecxz
enter
mov
or
jnp
xchg
pop
lock
movsl
sub
add
xchg
leave
sbb
addb
sub
xor
out
std
lock
add
xor
jbe
xchg
es
out
add
pop
inc
and
xchg
lods
je
ficompl
lods
repz
int
push
and
adc
or
test
mov
adc
inc
test
nop
fwait
in
pop
int
es
je
pop
hlt
ficomps
cltd
and
rcr
popf
arpl
clc
shlb
movsl
cltd
jns
inc
jg
ds
inc
or
sbb
and
mov
ja
cmp
icebp
mov
xlat
ret
repz
pusha
outsb
fbstp
fiaddl
cli
pop
in
jbe
in
mov
aas
je
dec
cmp
jl
jg
mov
sbb
push
fnstenv
pop
das
aaa
std
cmp
cmp
or
jbe
and
inc
push
hlt
cli
or
neg
outsl
in
in
stos
xchg
subl
push
mov
imul
xchg
jle
cmp
push
pop
xor
cmp
pop
data16
sbb
sbbb
sub
fwait
imul
jle
rcrl
xchg
in
push
popa
lret
push
adc
inc
cltd
add
int
icebp
notl
pushl
adc
movsl
out
cmp
cmp
in
jmp
cmc
iret
in
ret
adc
mov
jmp
xor
lock
orl
sarb
cmp
push
pop
dec
xor
test
fsubrs
inc
jmp
xchg
imul
out
fiadds
jge
popf
push
inc
mov
adc
mov
pop
pushf
ret
mov
pop
mov
pop
push
sbb
jle
sbb
mov
std
psubusw
enter
insb
inc
push
inc
sbb
ret
movsb
adc
push
or
int
in
loop
shll
xchg
and
pop
add
pop
lret
outsl
les
dec
lods
out
cmp
push
addr16
pop
push
dec
mov
lahf
push
repnz
jo
icebp
inc
les
clc
or
scas
mov
and
or
add
insb
cmp
xchg
xor
stc
inc
iret
es
adc
ss
inc
fsubl
sbb
dec
rorb
jne
jne
andl
shl
inc
stc
inc
daa
push
and
mov
xchg
pop
push
cmp
pop
dec
jmp
mov
inc
push
icebp
push
add
int3
inc
or
scas
inc
cwtl
testl
jp
pop
pop
mov
jo
pop
in
outsb
testb
add
loop
xchg
mov
cli
xchg
add
nop
scas
arpl
pop
ja
es
mov
jl
sub
mov
pop
adc
jnp
in
adc
pop
aad
scas
lahf
test
xchg
in
ja
imul
addl
stos
cmpsl
lahf
pop
push
adc
int
pop
push
and
in
and
mov
imul
popf
int3
add
ficompl
dec
ds
xchg
mov
pop
addr16
push
lret
xchg
je
and
out
das
adc
xorb
icebp
dec
idivb
popf
rep
or
dec
push
push
sub
movb
mov
out
adc
mov
sub
inc
mov
xchg
dec
test
fidivs
enter
aad
add
notl
push
sbb
xchg
push
out
shlb
inc
fwait
lds
subb
add
lods
xchg
add
jo
push
cld
lock
jle
xchg
inc
in
fld
sbb
adc
std
inc
sbb
xchg
adc
sbb
outsb
mov
mov
and
pop
cmpb
push
sbb
ja
les
test
cmp
push
test
mov
mov
lcall
cmc
cmpsb
xchg
pop
jbe
lods
mov
inc
je
or
sti
jge
cwtl
xchg
mov
stc
xchg
rorl
add
xor
stc
and
shrl
or
xor
pop
fcmovnb
movsb
inc
inc
sti
shlb
adc
adc
pusha
lods
in
mov
sbb
cld
jmp
cmp
inc
movsb
push
fimuls
mov
lret
mov
jmp
inc
popf
subb
or
mov
les
xor
mov
mov
fcmovne
jo
movb
jmp
adc
clc
lret
in
dec
mov
push
xor
insb
jo
int3
int3
fisubrl
push
jp
xor
gs
jbe
sub
sub
jo
int
pop
in
in
jnp
cltd
nop
lods
adc
cwtl
arpl
push
adc
cmp
xlat
mov
cmp
add
inc
or
stos
and
mov
jbe
stos
jg
dec
jno
leave
ja
in
std
or
std
dec
cmp
jle
mov
dec
xor
outsl
sbb
push
push
and
xchg
cmp
mov
dec
insb
jo
sub
stos
mov
push
sbb
fsubs
add
inc
jne
xchg
ss
mov
inc
sarl
fwait
clc
andl
faddl
mov
test
pop
xchg
pop
push
lcall
scas
pop
sub
cltd
jmp
lods
pop
stos
das
cwtl
es
popa
pop
mov
aas
movsb
je
lods
xchg
arpl
sbb
jo
mov
fbld
jg
cld
popa
and
jns
sub
nop
mov
jmp
push
ss
mov
dec
add
fcomps
daa
nop
and
incb
pop
jno
push
cmp
adc
xor
roll
mov
push
in
mov
pop
out
xchg
pop
dec
push
sbb
jne
pop
cli
lock
add
sbb
test
sbb
adc
push
repnz
mov
stos
sub
dec
mov
das
lock
std
push
jp
dec
cmp
jae
daa
fwait
xchg
lods
push
leave
mov
lock
scas
lcall
cmpsb
pop
aaa
lahf
jb
jle
sub
in
mov
imul
roll
mov
mov
mov
arpl
push
in
loope
icebp
xor
adc
push
aad
dec
sarl
jne
mov
dec
sbb
arpl
dec
push
sbbl
pop
out
push
incl
cmp
test
dec
cmp
decl
movsl
pcmpeqw
and
mov
lahf
nop
in
adc
or
and
or
nop
nop
or
add
jp
sub
call
lret
jo
shlb
scas
cmp
mov
jl,pt
dec
into
aaa
pop
adc
aaa
sbb
cmp
aas
stc
ret
push
cmp
and
shl
ja
shll
scas
inc
pushf
mov
jle
mov
pusha
and
ret
fcmovnu
icebp
sahf
add
insb
inc
push
jl
jne
gs
inc
je
cmp
ljmp
cltd
and
pusha
jo
push
outsl
pusha
pop
in
bswap
popf
dec
lock
adc
dec
mov
out
dec
stos
push
lret
in
fs
les
ret
es
int
mov
xor
xor
fimull
mov
fisttpll
movsl
or
xchg
std
popf
push
push
mov
dec
inc
fnstenv
cmp
mov
int3
push
cmp
sub
jle
jecxz
es
flds
sub
addb
inc
push
stos
pop
xchg
jo
mov
mov
mov
xor
xchg
arpl
iret
xor
cmp
filds
lret
ret
imul
scas
inc
jnp
loopne
push
sub
dec
xchg
shll
pop
jp
mov
mov
stos
mov
push
pushf
rclb
int
shrb
jmp
jb
push
pop
dec
sub
pop
add
xchg
xchg
sahf
rol
mov
jae
pusha
mov
add
pop
jbe
pop
arpl
les
loop
lods
xchg
mov
test
mov
add
test
ds
in
pop
dec
lods
xchg
add
mov
popf
and
pop
ja
mov
pop
mov
sub
mov
imul
xchg
mov
mov
pusha
jle
popa
push
call
mov
push
test
iret
mov
sub
orl
mov
cld
lea
inc
hlt
dec
int
and
jp
xlat
dec
mov
insb
cmp
adc
cmp
icebp
mov
push
stos
sub
dec
mov
pop
lcall
call
shrl
loopne
sbb
idivb
inc
push
out
or
mov
sbb
cmp
pop
jmp
aad
sbb
in
div
jnp
sub
xchg
out
and
rcr
jnp
repz
addr16
les
jo
sub
clc
hlt
popa
push
loope,pt
and
cmp
subl
shrb
fildl
jmp
lods
loope
sbb
and
aas
rol
cmp
ficoms
ljmpw
imul
mov
int3
aas
or
jl
cmp
xchg
iret
inc
jge
fimull
cmpsb
xor
or
lods
pop
mov
jg
dec
adc
jle
cmpsb
dec
ffree
std
push
jmp
arpl
xchg
test
int3
pop
inc
xchg
pop
in
pop
dec
std
adcl
mov
dec
into
dec
popf
mov
push
jno
push
sbb
push
lret
fdivrs
repz
lret
add
daa
jp
push
xlat
popa
cmp
push
test
sbb
pusha
cs
pop
cli
movq
push
out
dec
sbb
lods
sbb
add
adc
dec
sub
jo
data16
xchg
push
add
scas
xor
popa
js
cld
test
jge
jbe
xchg
pop
push
sarb
and
cmp
jl
jle
ss
nop
fstl
bound
sahf
push
outsl
repnz
mov
sahf
rcrb
mov
dec
push
mov
cli
lea
dec
in
pop
sub
sbb
rcl
scas
mov
cmc
xchg
xor
jp
in
rsqrtps
les
mov
push
js
xor
jo
add
je
sbb
or
dec
jl
pusha
jns
lods
ret
or
popf
mov
pop
in
sbb
pop
inc
pop
orb
aaa
mov
cmp
adc
mov
push
ss
xor
sbb
and
add
xchg
push
cmp
jmp
out
mov
cmp
int
push
cltd
xor
rdpmc
fwait
cmp
loope
push
psubusw
sub
jne
lods
push
sbb
in
mov
jns
push
out
xchg
xchg
popf
dec
mov
adc
test
test
add
test
mov
inc
push
adc
mov
and
xor
pop
test
inc
pop
and
negl
stos
add
jl,pn
inc
imul
dec
sbb
sub
xor
lods
push
mov
xor
sbb
adc
aas
or
jp
scas
ss
and
sub
dec
mov
sub
shll
scas
mov
xchg
adc
clc
enter
movsb
inc
mov
adc
add
add
std
or
popa
fwait
sbb
imul
daa
inc
pop
or
cmp
xchg
int
sbb
xorl
rolb
mov
fistl
inc
subb
jecxz
or
call
sub
and
les
xchg
mov
in
stos
mov
jle
dec
mov
movsl
jmp
mov
cwtl
fnstcw
fdivl
subb
test
mov
adc
adc
dec
jl
mov
pop
xchg
pop
xchg
jo
jb
and
outsb
xchg
adcb
jecxz
fsubrl
sbb
or
movsl
std
push
pop
dec
lahf
repz
cwtl
push
cmp
faddl
add
add
in
xchg
xchg
mulb
mov
cmp
ljmp
dec
jmp
and
stos
data16
push
adc
inc
sbb
sti
andl
jle
pop
adc
push
dec
repnz
xchg
dec
cmpsl
jno
or
or
mov
mov
xchg
jge
test
cs
and
fsub
mov
or
fiadds
mov
mov
mov
fisttpll
dec
loope
cli
je
mov
sbb
xchg
push
data16
cmpsl
out
clc
sbb
orb
test
add
mov
and
jmp
mov
out
mov
cs
shlb
sub
pop
test
inc
mov
out
insb
out
xlat
clc
inc
popa
mov
popf
pop
cmp
add
xchg
popa
movsl
lret
shlb
xor
xor
cmpsb
enter
aad
xor
rcrb
test
pop
xchg
dec
aaa
cmp
push
stos
out
fisttpl
inc
mov
mov
add
or
sbb
fdivrs
sub
cwtl
iret
mov
ret
es
mov
jge
push
inc
int3
cltd
push
xchg
ret
insb
sub
subb
stc
sbb
stos
sub
pop
mov
pop
jp
sub
mov
and
xchg
movsb
addr16
jle
xchg
jnp
arpl
gs
into
and
jmp
cltd
cmc
lret
stos
ja
xchg
pop
rcrb
jl
mov
shlb
fwait
add
aam
movaps
push
sbb
xlat
outsb
jo
mov
pop
scas
dec
push
data16
push
shrl
out
out
aaa
nop
xchg
cmpsb
rcrl
test
dec
push
sahf
mov
lret
insl
cld
and
leave
mov
scas
mov
jnp
iret
ret
out
adc
dec
movsl
lds
push
sbb
xchg
dec
rol
pushf
dec
nop
mov
aad
int
dec
cld
gs
loope
push
fisttpl
pushf
pop
mov
pop
xor
xor
sahf
push
fwait
xchg
jmp
pop
popf
add
test
iret
movsb
test
sbb
mov
cvttps2pi
sbb
xor
push
dec
and
leave
test
fs
rcrb
push
mov
jle
in
lcall
sti
out
fldcw
cmp
popf
clc
dec
pusha
in
jmp
notb
mov
scas
in
push
das
sub
aad
or
leave
testb
or
pop
cwtl
fsubrs
add
ljmp
jae
xchg
cltd
jl
mov
xlat
out
imul
or
sub
add
inc
cmpsl
push
xor
mov
clc
test
adc
sub
mov
inc
jg
jl
mov
push
in
dec
int3
sahf
jge
mov
sub
push
pop
pop
xchg
adc
sub
or
std
add
aas
adc
loopne
push
lds
xchg
xor
pop
notl
cmp
adc
cmp
dec
ret
gs
jg
cmpsb
data16
cli
nop
mov
xchg
cld
cli
inc
shll
xor
mov
stos
inc
dec
hlt
and
ret
int3
scas
mov
cmp
xorb
jno
das
loopne
data16
movsl
jge
jp
xor
mov
adc
and
sub
and
jle
dec
sarb
ficoms
mov
xchg
and
mov
stos
enter
leave
shrl
roll
push
insl
test
insl
xor
inc
cmpsl
ffreep
xchg
mov
test
cmp
dec
sbb
sbb
scas
imul
pushf
xchg
in
and
xchg
push
aaa
sub
add
mov
test
push
shr
repz
rcr
mov
push
mov
mov
xor
inc
jge
xchg
and
xchg
cwtl
test
nop
ret
or
xor
push
lock
mov
ret
xchg
fdiv
fsubl
insb
test
popf
dec
mov
dec
cmpsl
jmp
hlt
mov
or
imul
push
adc
dec
nop
call
flds
pop
fwait
cli
loope
and
stc
mov
fcom
fnsave
stc
xor
pop
cmp
cwtl
mov
in
dec
ja
inc
mov
out
push
mov
cwtl
add
adc
in
mov
fcoms
sub
push
push
dec
shlb
pop
test
mov
cmp
test
pop
cld
mov
daa
popa
mov
cmp
sub
or
xchg
hlt
xor
mov
in
push
leave
rcrl
lds
add
cmp
out
and
push
gs
or
ja
out
mov
divb
loop
rolb
cmp
inc
pop
jp
js
out
ljmp
mov
cmp
jp
sarb
in
rol
ret
xorl
nop
adc
pop
cmp
sbb
or
lds
and
std
rcll
pusha
pop
mov
cmpsl
push
jle
decl
pop
mov
cwtl
mov
push
mov
xor
mov
jnp
loop
outsb
add
ret
mov
adc
cmp
jge
lock
rclb
jnp
xchg
addr16
lock
dec
push
or
pop
fsubrs
subb
es
jb
mov
push
push
div
sbb
push
xchg
inc
or
popa
dec
je
jp
scas
inc
or
pop
ret
jno
or
inc
fwait
lcall
mov
pushf
cli
jns
scas
push
mov
pushf
and
jae
enter
rorl
mov
mov
aad
mov
pop
inc
stc
cmpsl
pop
xor
insb
xlat
cmp
repz
jo
lret
enter
pop
push
inc
pop
daa
push
sub
add
xchg
shlb
mov
and
out
out
jnp
js
cmpsb
aam
mov
or
sbbl
ret
xor
cmp
mov
inc
enter
subl
in
insl
inc
add
in
cli
pusha
aam
mov
pop
lds
mov
sub
cmpsl
ds
mov
cli
fcompl
movsb
sbb
fnstcw
push
enter
lods
push
in
push
adc
mov
ljmp
mov
pop
in
and
lods
or
adc
add
xchg
mov
add
mov
sbbl
or
xor
mov
push
inc
repz
lret
pop
lahf
inc
cmp
into
notl
inc
fwait
xlat
pop
dec
sbb
mov
cmp
jmp
adc
ss
push
add
mov
movsb
ret
cmpsl
movsb
push
lock
jae
jg
adc
sub
adc
sub
lret
in
push
jge
inc
mov
ret
ja
inc
cmp
imull
pop
push
dec
insl
out
mov
ja
adc
sbbb
xchg
imul
gs
mov
sar
bound
mov
repz
popa
mov
popa
movsl
jns
fsin
fwait
je
and
sub
lahf
or
lret
loope
aas
sbb
mov
and
cli
push
and
mov
inc
mov
outsb
pop
jge
mov
dec
jo
mov
pop
pop
jp
pop
idivb
and
lods
popa
mov
adc
je
js
adcb
and
or
jne
xlat
fwait
adc
inc
hlt
testb
xchg
add
adc
imul
hlt
xchg
repnz
add
mov
adc
shl
jmp
lahf
ficoml
sub
nop
cld
je
enter
xchg
clc
pusha
inc
sar
cmp
stc
notl
xchg
jns
add
adc
inc
mov
adc
lahf
test
sub
xor
jmp
insb
call
inc
ds
fstl
call
hlt
dec
xchg
mov
adc
mov
hlt
js
jle
sti
sbb
addr16
scas
or
shr
imul
sbb
gs
xchg
xchg
add
fcoms
xlat
clc
sub
adc
add
jns
add
and
add
fs
mov
mov
pop
mov
sub
ss
imul
cmp
pop
mov
or
rclb
push
cmp
add
cmp
or
out
jle
shrb
out
cvtps2pi
push
mov
push
pop
pushf
into
xchg
cli
les
jmp
leave
ljmp
lcall
aas
ret
xchg
shrb
cmp
push
loopne
push
repnz
adc
imul
cmp
cld
and
in
fstpl
fistpll
stos
cltd
push
popf
cmpsb
mov
xor
pop
pop
pop
jns
sbb
jge
xchg
loop
cmpxchg
xor
sub
pusha
sbbl
sub
fnsave
aam
ja
bnd
cwtl
pop
orl
cmp
stc
cltd
loope
or
push
adc
sbb
mov
push
cwtl
in
and
stos
add
jmp
sub
int3
repnz
pop
lret
je
sub
fdivr
mov
mov
mov
mov
pop
sub
jecxz
fcomi
push
loop
inc
mov
cli
dec
stos
push
cmpsb
pop
test
loope
sub
ds
repnz
mov
inc
lock
loope
jb
jle
leave
loop
out
xchg
dec
dec
mov
daa
ret
xor
shlb
sbb
int
out
hlt
jno
xchg
mov
mov
sbb
push
dec
cwtl
shlb
dec
pushf
mov
pushf
js
push
cmp
cmp
fcoms
loope
data16
dec
mov
daa
or
cmp
dec
add
dec
ret
mov
inc
add
sbb
and
pushl
lock
popa
xchg
shll
iret
stos
lret
jecxz
int
adc
out
sbb
inc
jp
cmovbe
in
mov
hlt
or
scas
sbb
or
insb
xchg
pop
pop
cmpsb
cwtl
sbb
les
jl
jp
jnp
xor
out
shl
bound
test
fwait
or
mov
fildll
lahf
clc
call
xor
hlt
and
mov
cmp
xchg
test
cld
dec
fsubrs
movsl
fsts
div
fisttpl
fstpt
out
clc
lds
xlat
push
pusha
pop
sub
xchg
out
xor
fs
sbb
dec
test
jmp
jnp
ljmp
jno
daa
pop
xchg
xor
and
aas
out
arpl
and
movsb
clc
pop
lods
fldcw
add
lret
sahf
push
les
dec
rol
jmp
lods
faddl
cmpsb
inc
xchg
lahf
add
and
pop
jns
push
cmp
cs
sbb
and
push
repnz
sbbl
push
lcall
outsl
mov
ret
cmc
in
add
cli
push
xorl
jo
jmp
call
cmp
cmp
aaa
movsb
xchg
js
mov
push
ja
std
pop
leave
ret
adc
push
xchg
loopne
pop
jg
icebp
je
rcr
sbb
cmc
nopl
inc
in
add
je
jle
dec
jmp
push
cmpsb
sahf
arpl
aaa
jl
mov
stos
inc
cmc
or
in
mov
jmp
adc
lds
loop
cltd
popf
pusha
outsl
add
inc
jae
adc
mov
lahf
insl
adc
idiv
enter
inc
ja
cmp
jo
sub
sbbb
dec
sub
sub
loop
leave
or
adc
fdiv
push
je
in
mov
push
fcoms
stos
aad
por
jecxz
out
jle
push
xchg
jmp
pusha
lcall
sub
and
das
repnz
not
inc
xor
adc
mov
xchg
jge
pop
adc
add
jg
pop
lods
jmp
pop
leave
or
xchg
rcrb
xchg
data16
cmpsl
icebp
xchg
mov
stos
call
push
lret
lods
test
jge
mov
sub
pop
pushf
or
push
jecxz
outsl
rcrl
sbb
push
clc
lock
in
sbbl
in
push
cmpsl
fsubrl
sbb
adc
fisubrs
xlat
shrb
outsl
shll
das
or
mov
pop
in
adc
inc
cmpsl
test
pop
cmpl
pop
pop
pop
fwait
cld
cmp
loope
mov
cmpb
mov
push
and
xchg
outsb
pop
push
shl
mov
sub
loopne
repz
jle
pop
cmc
mov
xcrypt-cbc
cmpsl
adc
push
out
cmpsl
addr16
loop
xor
cmpb
inc
int
das
hlt
stc
inc
clc
ret
mov
gs
jg
adc
jno
xor
pop
out
js
cltd
xor
mov
sub
rclb
inc
sbb
in
and
push
out
int3
jecxz
testb
iret
add
icebp
or
dec
jmp
cld
and
fisubrs
rcrb
sti
enter
jge
pusha
inc
sbb
dec
cli
push
addr16
inc
ss
mov
push
pop
pop
or
pop
and
inc
push
iret
add
fcmovne
sti
rorl
pop
and
jno
dec
add
out
cmpb
negb
xor
mov
dec
add
ret
xor
out
ds
jge
mov
out
or
and
data16
cld
and
jae
inc
sbb
mov
or
cmpb
mov
cmp
xchg
and
std
jg
and
mov
jp
jnp
jl
mov
imul
fstps
push
dec
mov
sub
push
mov
jnp
xchg
fistpl
arpl
mov
jns
jle
imul
cmpsl
fidivl
enter
mov
pop
outsl
orl
insl
out
xchg
mov
lock
xlat
push
pop
sbb
push
mov
mov
mov
outsb
mov
and
lret
cmp
fisttpll
repnz
mov
lock
pushf
xchg
mov
add
sbb
lret
push
insb
pop
adc
mov
hlt
jo
adc
loopne
sbbb
mov
inc
cmp
rcl
loop
pushf
mov
mov
cmp
jmp
adc
mov
loope
jp
mov
push
imul
jae
scas
xchg
aam
dec
cmpsb
shlb
sbb
outsl
sahf
ror
daa
adc
sti
cmp
cmpl
test
sub
mov
sub
push
aas
inc
mov
jae
and
idivb
cmp
pop
xchg
aas
xor
pop
or
jne
daa
or
adc
int
xchg
sbb
dec
mov
dec
shl
xchg
fadd
ja
lods
lock
fdivrs
add
mov
inc
add
imul
cmc
add
sbb
pop
popf
test
cmp
xor
or
push
mov
add
sub
fstsw
cmp
test
xor
xor
add
inc
mov
add
and
dec
jle
scas
cmp
mov
hlt
xchg
or
shlb
lcall
jb
sahf
cmp
inc
xchg
fisttps
mov
leave
aam
rcr
xor
pop
addl
mov
adc
out
adc
push
sbb
mov
js
and
push
mov
mov
loopne
sar
xor
mov
xchg
xor
sub
fwait
jmp
sti
pop
out
add
mov
cmovns
repz
fcoml
aam
jmp
or
pop
bnd
notb
mov
fcompl
jne
inc
enter
lds
adc
lods
push
pop
subb
std
inc
movsb
cmpl
in
cltd
jp
icebp
add
pop
das
cmp
xorb
inc
arpl
insb
fdivrs
jg
sbbb
sub
push
and
rclb
ja
cmp
mov
push
pop
sub
popf
ds
in
ljmp
stos
adc
out
push
add
repz
hlt
gs
push
ss
mov
sub
adc
lods
subl
sti
fs
rcll
mov
imul
mov
dec
sarb
jg
dec
clc
lock
cltd
adc
pop
scas
sbb
lcall
test
test
daa
repnz
cmp
fstl
cwtl
pop
ss
lock
adc
push
movsl
cs
incl
ja
xchg
xor
and
pop
stos
jns
jp
lods
cmc
jecxz
jmp
aad
mov
push
jmp
add
xor
roll
mov
out
adc
xor
cli
mov
adc
loope
dec
pop
daa
bnd
stos
in
mov
mov
test
xor
ja
inc
mov
and
cmp
aad
fadds
push
fnstenv
mov
ret
test
insb
push
add
movsb
mov
sarl
add
sub
add
lock
lock
pop
add
data16
mov
rclb
cld
incb
ret
test
mov
push
in
fisubl
cmpsl
mov
lods
aaa
pop
push
pop
sbb
push
push
out
loopne
out
nop
inc
jbe
vpshlb
scas
and
or
inc
xchg
pop
xchg
mov
inc
loope
popa
cmp
aaa
sbb
mov
mov
pop
out
jnp
enter
popf
jg
cmp
fstps
mov
inc
lea
jmp
jo
data16
or
sub
cmc
jl
mov
cltd
scas
dec
pop
mov
sbb
pop
pop
loop
sbb
pop
mov
mov
mov
or
xchg
sbb
out
aam
push
jg
fsubr
scas
stc
rorl
mov
dec
or
cmp
dec
mov
inc
sti
mov
leave
les
pop
pop
or
dec
jae
dec
inc
mov
int
mov
jbe
out
sbb
loopne
dec
push
inc
inc
push
mov
test
xchg
mov
les
xrelease
imul
ljmp
and
xor
fst
test
jae
inc
fs
scas
popf
and
cmpsb
add
pop
aas
adc
aas
lcall
xor
mov
addl
inc
andb
inc
or
push
push
add
push
mov
pop
cmpsb
xchg
popf
int3
push
pushf
sub
xor
andl
outsb
jp
pop
mov
cwtl
ds
pop
je
loope
lcall
mov
test
sarl
xchg
ja
int
test
inc
or
iret
sti
mov
insb
cmpb
mov
xor
clc
das
cmc
xchg
push
inc
stos
hlt
xchg
jbe
sbb
dec
add
fadds
lods
mov
add
xchg
ret
fsubl
pop
inc
mov
adc
repnz
sbb
sbb
pop
lea
mov
push
mov
ror
fdivr
lods
imulb
adc
mov
mov
xorl
pop
dec
rclb
sub
test
mov
les
mov
pushf
mov
and
inc
mov
pop
mov
fisubs
test
mov
jns
cltd
pop
dec
mov
in
dec
push
test
sti
sti
adc
pop
sub
rep
rorb
aas
iret
sbb
loop
fiadds
pop
mov
cmp
sbb
movsb
cld
inc
dec
push
js
insb
incw
lahf
mov
ljmp
in
in
loopne
aam
add
sbb
inc
jno
pop
fs
xchg
je
mov
mov
and
mov
add
into
pop
add
jmp
dec
dec
adc
ljmp
imul
add
xchg
xor
ret
jg
pop
fadds
popa
add
push
pop
push
cmp
or
ror
xchg
test
mov
test
call
mov
dec
addl
mov
sbb
sub
ret
mov
ret
lock
das
loopne
inc
sti
mov
movsl
pop
loope
or
xor
add
bound
mov
pushf
outsl
sub
and
fdivrs
aas
stos
fs
jp
idiv
loope
xor
stos
or
adc
pushf
cmp
mov
shrl
sbb
movsl
pop
mov
sub
shll
xor
sarb
icebp
push
sti
incb
imul
test
sub
lea
sbb
sbb
adc
mov
ret
or
div
ljmp
push
adc
fnstenv
repnz
mov
mov
jmp
xor
out
movsb
pop
jl
cmp
out
fistpl
push
xchg
adc
mov
cmp
or
inc
xchg
stos
lods
ss
inc
scas
dec
popa
push
or
xor
fwait
mov
push
std
mov
movl
lock
arpl
movsb
mov
dec
or
fdivr
js
pop
out
imul
in
mov
dec
jle
push
lcall
movsl
xchg
mov
and
mov
stos
ljmp
or
in
pop
shlb
push
mov
fdivl
aad
sbb
xor
shl
jae
movb
adc
clc
scas
scas
push
psubsw
clc
xchg
enter
adc
dec
xor
dec
mov
loop
push
cmpsl
dec
pop
test
je,pn
dec
repz
imul
add
in
mov
push
pop
adcl
in
add
or
mov
jge
outsl
es
xchg
loop
xchg
sub
scas
repz
push
add
xor
shrb
mov
and
test
mov
push
into
iret
shr
adc
stos
not
imul
xor
aas
mov
mov
mov
stos
lea
int
int3
fs
es
mov
push
mov
mov
adc
out
mov
mov
sub
cmp
mov
clc
cld
enter
mov
shrb
fcmovbe
pop
std
dec
jg
cwtl
xchg
sbb
mov
mov
and
mov
mov
icebp
add
out
inc
pop
sti
jge
je
movsl
into
popa
ljmp
cmp
lds
stos
rcll
xor
inc
mov
cld
jae
ds
mov
jge
adc
inc
fnstsw
push
push
add
call
loope
push
aam
jno
mov
inc
imul
adcl
push
lcall
cmp
orl
pop
lcall
das
popa
xchg
xchg
lds
mov
inc
jmp
dec
cmpsb
mov
mov
test
xlat
pop
fildll
dec
pop
pop
sub
sbb
jno
cmp
or
fcmovnu
pop
scas
pop
dec
ficomps
push
cs
xchg
xchg
xchg
popa
jno
pop
ja
pop
enter
sarl
loope
or
scas
inc
std
arpl
or
mov
mov
xlat
fs
xlat
cmp
call
insb
cld
fidivrs
dec
stc
nop
cltd
mov
scas
andl
xor
shll
xchg
lahf
xchg
jne
arpl
add
mov
faddl
or
iret
cltd
das
das
dec
das
and
mov
xchg
rcr
add
aam
test
jb
rcrb
decl
xchg
add
xor
mov
mov
sbb
jmp
mov
outsb
lea
cmp
pop
test
outsb
dec
rorb
dec
sbb
sahf
test
cli
inc
rolb
scas
in
inc
push
cld
arpl
adc
call
std
sub
sub
or
adc
and
ss
jo
negb
lds
les
lcall
aam
push
adc
xor
loope
fst
dec
or
ss
dec
repnz
clc
xchg
mov
sub
out
hlt
pop
test
addb
fdivrp
cltd
jmp
pop
fistl
mov
mov
loop
ror
push
xchg
push
decb
mov
movsl
inc
out
sbb
mov
adc
jno
scas
dec
js
or
sbb
xchg
aad
push
push
pop
jp
jg
movsb
inc
shl
rcl
push
dec
int3
jecxz
push
popa
and
cld
scas
fbld
cltd
roll
sti
movsl
cld
lods
mov
out
xor
mov
aad
xchg
gs
arpl
inc
cs
insb
in
xchg
adc
pushf
mov
xchg
inc
out
ss
nop
cmpsl
ss
mov
dec
push
aaa
dec
addr16
sbbb
fnstsw
jbe
mov
insb
in
adc
or
cmp
xchg
lods
sub
call
xchg
iret
jmp
mov
fidivs
pop
sbb
fstpl
and
jge
xor
scas
repnz
push
dec
jp
xor
orl
rorl
jp
jg
lds
pop
scas
mov
scas
test
lods
cmp
mov
jle
addr16
push
mov
sbbb
mov
push
inc
idiv
xchg
pop
outsb
call
dec
push
push
enter
cmp
xchg
xchg
fnstcw
repnz
lret
pop
loop
jns
push
xchg
gs
inc
outsl
gs
or
xchg
mov
sub
or
jmp
cmp
sarb
sbb
push
mov
lea
lock
loope
pop
stc
cmp
jo
mov
loopne
out
test
js
add
icebp
push
mov
fimuls
lods
mov
add
outsb
mov
ja
mov
inc
aam
in
sub
sbb
daa
xor
bound
mov
cltd
ror
aad
sub
adc
cmp
lret
push
jno
bound
int3
push
add
push
mov
data16
repz
and
rcll
inc
fmull
xchg
adc
bound
mov
ror
dec
pop
pop
hlt
xor
in
dec
sbb
gs
ds
sbb
sbb
sub
sub
xor
test
gs
das
aas
dec
andl
sbb
inc
sub
inc
add
cmp
mov
leave
fsubrl
adc
fdivs
flds
inc
jg
add
js
inc
mov
jg
int3
rcr
gs
sub
jge
inc
out
pop
in
sub
les
cmc
repnz
cmp
pop
lock
into
xchg
lods
jp,pn
or
xchg
inc
or
shr
xchg
push
mov
mov
lock
push
data16
jl
mov
jl
cmpsb
push
mov
stos
mov
push
sub
pop
add
sbb
out
adc
js
add
push
add
insb
cld
or
out
lock
jmp
pop
add
outsb
js
pop
testl
xchg
iret
int
stos
push
and
and
add
xchg
fs
ljmp
imul
sub
mov
inc
test
data16
fildll
and
ret
loope
or
cmpsb
pop
int
stc
sbb
dec
xor
dec
jg
mov
into
cwtl
dec
xchg
jle
je
int3
cmpsb
mov
mov
xchg
push
out
ja
xchg
mov
push
stos
mov
push
and
cmp
iret
dec
popf
push
and
aad
outsl
and
inc
push
push
cmpsb
add
sbbl
lea
cld
add
inc
jl
xlat
xchg
test
mov
inc
dec
xchg
xor
jl
push
mov
lea
scas
outsl
int3
roll
cs
cmpsl
pop
lods
push
sub
dec
or
xchg
mov
fwait
add
cmp
iret
xor
xor
les
mov
jnp
mov
fdiv
icebp
cmp
xchg
xchg
cmpb
imul
rorl
es
jmp
fldcw
shl
cwtl
ss
leave
int3
data16
sub
icebp
scas
mov
xor
lcall
es
cwtl
sbb
mov
pop
fildll
je
inc
cmovne
mov
mov
ja
cld
mov
xchg
loopne
int
icebp
dec
insb
adc
add
adc
cmp
push
lcall
movsb
push
notb
mov
inc
notb
cmpb
mov
mov
jno
and
enter
enter
cltd
cwtl
cmp
dec
push
aad
pop
mov
cld
xchg
ficoms
outsl
cmp
lret
outsl
repz
mov
mov
or
mov
push
add
or
cltd
scas
mov
push
sbb
jno
insb
mov
lods
xchg
mov
cmp
add
outsb
mov
xor
fmul
xchg
add
std
push
inc
dec
cmpsb
repnz
push
ljmp
mov
bnd
mov
stos
push
rcl
cmp
pushf
clc
aas
mov
push
dec
cmpsl
mov
adc
loope
std
push
mov
out
test
in
test
pop
clc
mov
adc
sbb
clc
mov
in
xor
xchg
sbbb
push
fwait
loope
out
jo
xchg
mov
mov
sbb
cmp
in
fsub
fisubrl
outsl
inc
push
decl
jns
in
and
in
inc
or
jmp
sbb
push
xchg
sbb
sahf
in
xchg
or
rolb
xlat
adc
xchg
mov
repz
sbb
into
in
pop
fs
add
pop
stos
repz
pop
pushf
cmpsb
inc
in
hlt
icebp
push
xor
fnstcw
inc
cmp
enter
cmp
enter
cmc
xchg
int3
outsl
rcrl
sub
fstpl
fsubp
dec
adc
or
mov
shll
pop
add
push
jmp
jecxz
jg
popa
cli
pop
arpl
xlat
mov
and
jae
lock
pushf
mov
js
mov
xchg
ret
icebp
cmp
loope
out
stos
fs
rcrb
pusha
out
push
add
mov
es
mov
mov
mov
jne
mov
lods
es
insb
lea
sbb
adc
jne
pop
aas
in
mov
cmpb
inc
jge
jnp
les
lock
movsl
out
inc
aas
cmp
cmp
divb
std
sub
lea
arpl
sbb
inc
testb
push
push
loope
repnz
data16
jno
and
sub
add
outsl
xchg
xlat
dec
jb
inc
inc
cmp
mov
shlb
mov
inc
jecxz
icebp
repnz
push
sub
aas
inc
shrl
out
push
loope
stc
not
movsb
arpl
jae
js
sbb
enter
add
dec
adc
or
jle
inc
into
loop
mov
scas
jge
mov
rcrb
or
mov
sub
add
jne
jp
push
pop
movsbl
test
ret
cwtl
jo
sub
iret
or
mov
movsl
sub
call
test
repnz
fistpll
mov
jbe
jns
xorl
lret
jp
aaa
insb
jecxz
inc
gs
ret
popa
sbb
inc
mov
inc
dec
das
inc
movsl
dec
dec
dec
movsl
xlat
sbb
notb
mov
shlb
sub
adc
pop
test
imul
jae
pop
fs
addr16
andl
stos
fcmovb
xorl
popa
cmpsl
and
dec
sub
sti
mov
add
ja
mov
fsubs
rorb
hlt
ja
dec
aam
xchg
sahf
rcrl
clc
pop
sbb
sbb
cmp
fcoms
add
mov
cmpsl
mov
outsl
xor
cwtl
repz
and
notl
pop
lock
mov
xchg
shrd
sbb
jbe
movsl
aas
sti
enter
mov
pop
in
sti
popa
imul
inc
push
loope
and
sti
dec
fdivrl
xchg
in
jns
cld
cld
xchg
les
stos
cmpsb
push
inc
in
negl
mov
rol
push
iret
cld
sar
cmp
outsl
into
popf
call
into
sbb
arpl
cmp
jle
and
sbb
jnp
mov
lds
das
xchg
sahf
mov
mov
lahf
mov
and
int3
or
inc
loope
mov
pop
jp
sbb
cmc
aad
push
sbb
mov
das
push
imul
cli
jecxz
sub
xor
and
pop
sbb
xchg
pop
xchg
and
add
or
add
test
lret
test
hlt
push
call
jecxz
sub
subl
repz
xor
lret
push
shlb
iret
push
pop
xchg
arpl
mov
out
mov
popf
cmp
rorl
sbb
gs
scas
ljmp
subb
call
mov
inc
inc
push
xor
and
or
fdiv
xchg
lods
scas
add
push
lds
mov
sahf
cmp
pop
mov
cmpsb
sahf
push
sbb
iret
repz
lret
fstps
fwait
xor
adc
int3
int3
push
or
sbb
jmp
mov
es
mov
stos
outsb
push
pop
mov
push
rep
mov
outsb
inc
and
sbb
filds
or
movsl
sbb
mov
lods
jle
jg
adc
sbb
adc
fistpl
push
or
inc
jg
je
lods
and
outsl
into
mov
inc
pop
sub
cltd
sub
push
std
imul
xchg
mov
jg
inc
xor
lsl
and
sub
sub
add
aaa
pop
ret
insl
inc
out
mov
pop
sub
sti
scas
rcrb
mov
xchg
aaa
movsb
arpl
inc
out
dec
xor
push
and
and
sahf
sub
loope
dec
data16
sbb
sub
mov
cli
push
xchg
pop
cmp
sub
ljmp
orl
or
pop
iret
sbb
aad
jne
loop
inc
ret
cmp
daa
mov
or
add
fstp
das
sti
ljmp
cwtl
sbb
ret
jmp
pushf
inc
test
sub
ljmp
stos
push
outsb
xchg
xchg
insl
hlt
and
or
cmp
dec
pop
jns
pop
mov
pop
sbb
push
rol
xor
cmc
sbb
hlt
adc
cli
push
aas
sub
shll
jno
imul
clc
push
mov
out
cmp
divl
xchg
and
sbb
hlt
dec
out
xchg
mov
mov
cmp
adc
cmpsb
cmp
sbb
mov
push
pop
mov
stos
lds
and
xchg
cltd
aad
daa
xchg
imul
iret
test
mov
ja
sahf
mov
enter
dec
or
mov
sbb
adc
xchg
and
loopne
xchg
int
push
pop
jecxz
jmp
das
in
mov
mov
inc
cmc
js
add
xchg
jbe
cmp
xchg
lds
fisttpll
lahf
iret
xor
and
xchg
sub
popa
out
faddp
jmp
cmp
lods
jo
mov
jg
ret
add
mov
lcall
adc
lret
imul
xchg
adc
sahf
into
sub
adc
fwait
push
xchg
lahf
outsb
inc
push
mov
bound
mov
std
repnz
dec
or
sahf
dec
in
jne
push
jmp
fsubp
sbb
sub
or
xchg
nop
push
pop
fmuls
fs
adc
mov
pop
sahf
ret
sbb
lea
add
aad
out
jge
test
xor
adc
push
leave
add
addl
xor
adc
sub
jp
pop
mov
push
decb
mov
in
jge
test
test
cmp
shlb
xlat
xchg
icebp
stos
cli
inc
fisubrs
adc
xchg
inc
loope
daa
test
in
cmp
dec
call
cltd
fstpt
add
mov
arpl
repz
push
enter
mov
jp
cmpsl
push
iret
leave
xor
jp
mov
in
xchg
inc
dec
cmpsl
push
shll
aam
dec
icebp
mov
push
mov
adc
xchg
xor
adc
pop
push
out
cli
out
pop
push
and
daa
mov
jbe
pop
adc
sbb
lcall
fs
fmul
call
or
leave
in
ret
ja
push
sarb
pop
in
pop
push
mov
pop
mov
outsl
mov
aam
cmp
sub
shrb
fistps
add
lea
sbb
andl
jp
mov
out
sbb
lods
sub
cmc
lret
arpl
pop
and
dec
push
and
test
mov
push
call
or
inc
and
lea
testl
dec
enter
and
xlat
jnp
cwtl
sarb
jp
mov
filds
insl
arpl
popa
lahf
xor
and
mov
loopne
push
cmpsb
jne
and
addl
xor
xor
jne
je
mov
outsb
push
jns
stc
sbb
xor
adc
adc
and
pop
cmp
aaa
ds
sub
lret
cwtl
out
hlt
les
rorb
mov
mov
push
mov
adc
sub
icebp
and
loope
inc
das
pop
pop
popf
addr16
jb
test
int
and
sarb
test
push
out
mull
sub
or
int
mov
pop
mov
imul
mov
lods
fmuls
jne
add
lods
mov
in
mov
sahf
call
pop
jnp
push
xor
pop
cmp
cmp
push
repz
or
mov
test
cmc
mov
das
sub
and
das
fst
in
add
outsl
pop
mov
add
pop
icebp
mov
ret
mov
imul
lods
repz
subl
adc
lret
add
icebp
outsl
repnz
pop
xor
xchg
test
sub
sbb
jg
cmp
out
orb
push
pop
dec
xorl
dec
add
and
cmp
xor
cmpsb
and
aad
js
les
mov
jne
mov
sbb
sbbb
pop
pushl
xchg
xchg
or
insl
es
inc
imul
sbb
in
in
xchg
adcl
mov
out
sbb
xor
into
data16
je
cmp
idivb
scas
pop
pop
and
out
sbb
dec
mov
ret
lret
sbb
aaa
gs
mov
jnp
movsl
xchg
cmp
xor
repz
es
mov
jo
and
addl
pop
leave
sbb
cltd
outsb
nop
popf
pop
dec
std
daa
mov
rorl
mov
shl
aad
add
jge
out
mov
or
sbb
cmp
pop
pop
xor
xchg
fwait
and
pop
fiaddl
out
or
push
push
cmp
sti
mov
sahf
lahf
cwtl
xchg
mov
lcall
lret
pop
dec
lods
or
loope
int3
data16
das
lret
and
insb
mov
xor
pop
xchg
loop
sub
fistpll
popf
mov
adc
testl
daa
shll
sub
fdivrp
xchg
jno
mov
aam
divb
jbe
hlt
scas
mov
lods
or
outsb
mov
mov
push
lods
push
out
lods
andb
test
xlat
pop
adc
lret
nop
inc
ficoml
lret
inc
flds
subb
js
sub
sub
clc
jno
rolb
xor
dec
push
and
add
ljmp
movb
push
mov
bnd
les
sub
in
sbb
mov
es
out
cmp
mov
mov
jnp
je
les
lods
adc
xchg
xor
mov
into
rolb
pop
mov
sbb
cwtl
out
stc
lcall
sti
push
incb
je,pt
in
adc
fisubrs
cmp
push
inc
scas
in
push
filds
test
xlat
mov
pushf
mov
rolb
es
mov
aaa
xor
iret
add
sub
aas
jp
xchg
ds
aam
mov
aaa
ds
or
mov
push
jp
popa
pop
inc
xchg
sbb
mov
pushf
mov
cmp
pop
lea
xchg
pop
mov
jecxz
mov
inc
mov
lret
add
call
xor
out
mov
inc
repz
and
pop
faddl
or
mov
jne
pop
test
sbb
mov
ja
call
je
cmp
inc
roll
stos
jle
data16
shrl
out
adc
out
adc
decb
cltd
mov
adc
xchg
or
imul
fidivrs
xchg
mov
inc
mov
cltd
mov
test
inc
push
pop
inc
call
int
sarl
mov
addr16
rclb
std
subl
ret
cmp
jecxz
test
cs
or
jae
lds
int3
jo
jle
and
icebp
mov
push
dec
dec
jle
jne
jge
mov
inc
insb
leave
repz
sub
xor
xchg
mov
jno
out
inc
jmp
repnz
sbb
lods
and
aaa
push
adc
sbb
les
xchg
cmp
jnp
pop
mov
sbb
addr16
cmp
inc
ficoml
daa
xor
es
movsl
dec
xor
aam
aam
push
or
cld
dec
add
push
ljmp
lea
and
in
mov
pusha
negb
arpl
cmp
inc
imul
jg
ds
repnz
push
mov
lret
stos
inc
xchg
push
pop
stos
sub
ds
scas
push
clc
pop
mov
adc
aad
add
rolb
push
or
xor
push
adc
or
pop
fisubrs
sub
mov
in
aaa
or
stos
mov
xor
in
test
cmpsl
or
adc
push
pop
or
fadd
call
fsubl
inc
outsl
fisttpll
subl
push
addb
fldl
aad
inc
or
gs
lods
jl
cmp
or
mov
or
dec
icebp
test
clc
sbb
add
or
bound
rclb
add
add
pop
sub
dec
addr16
and
inc
cltd
orl
ficomps
jbe
dec
mov
push
sar
add
je
or
inc
test
mov
shlb
dec
cmp
mov
mov
dec
repnz
std
inc
sbb
cmp
ret
mov
jne
cwtl
push
dec
les
enter
imul
leave
int3
cs
sbb
inc
dec
mov
dec
js
push
popf
xchg
push
std
test
pop
mull
fwait
pop
push
add
je,pn
movl
cld
test
adc
push
scas
pusha
inc
xor
lock
jmp
test
in
std
ret
pop
negl
into
mov
ret
incl
push
push
push
jp
fmull
and
add
jg
nop
jbe
cmp
jg
int3
adc
dec
add
enter
xchg
fcomps
aaa
and
push
out
int3
adc
jg
repz
sub
fdivrl
xchg
in
jge
rcll
aaa
sub
adc
bound
js
xor
cwtl
jg
mov
sub
xchg
pusha
jo
pop
add
ret
sub
pop
stos
nop
jp
xchg
pop
xchg
ss
mov
das
je
lahf
subb
jp
push
adc
xchg
xlat
mov
imul
inc
jbe
jecxz
and
es
inc
ret
pushf
bound
out
jnp
jae
scas
xor
or
xor
mov
sub
movsl
pop
push
inc
lret
popf
add
sbb
add
rorl
clc
scas
mov
ljmp
jbe
test
stc
sub
mov
push
jns
dec
jno
and
sbbl
fidivs
stc
adc
mov
push
icebp
inc
sbb
push
xchg
pusha
cmpsl
shlb
push
and
sbb
lods
jp
flds
testb
xchg
or
push
add
xor
test
sbb
jnp
into
mov
clc
out
js
jns
mov
insl
ss
imul
lcall
xor
rolb
sbb
add
fidivrs
pop
inc
xor
cmp
insl
rolb
int3
sub
aaa
pop
fdivr
xchg
ret
scas
popf
movsl
lock
fwait
lock
xchg
mov
inc
jb
test
xor
inc
popa
jge
inc
and
jg
out
mov
cwtl
or
inc
scas
push
cmp
xor
lock
xchg
insb
clc
out
push
and
inc
ret
mov
inc
fwait
jnp
lods
push
fs
sub
sti
int
xchg
pop
and
gs
rclb
inc
stos
in
inc
mov
addr16
fucomip
jmp
sub
icebp
mov
xchg
daa
dec
pusha
out
push
adc
out
out
adc
sbb
adc
sahf
aaa
mov
in
sbb
lods
xor
stos
inc
sbb
dec
add
aad
sbb
xchg
mov
pop
lret
shll
loop
pop
mov
and
mov
xchg
fdivrs
pop
pop
outsl
je
gs
jl
push
les
in
sarl
data16
aad
enter
dec
mov
adc
in
inc
es
push
stos
mov
out
or
test
dec
jo
mov
adc
or
lcall
enter
sub
push
cs
dec
sahf
jo
and
push
mov
loop
aam
mov
and
dec
xor
lods
xor
imul
out
mov
jmp
or
or
ds
xor
stc
jg
mov
pop
push
mov
or
icebp
sbb
push
cmpsb
pop
jns
xor
pop
cld
sbbb
rolb
jbe
jo
sbb
out
in
cmp
ret
xchg
cli
cmc
push
ret
mov
mov
or
mov
js
cmp
add
adcl
jmp
mov
sti
fsts
clc
jae
cmpsb
pop
cmp
lods
js
pop
mov
sahf
andb
add
and
ret
out
xor
sbb
pushf
movb
mov
xchg
mov
xchg
jp
mov
gs
es
and
pop
jmp
scas
push
inc
stos
rolb
xorb
and
push
data16
xor
xor
in
pop
rolb
roll
test
lahf
cmpsb
addb
adc
jle
inc
add
cld
jl
popf
jl
pop
mov
ss
sbb
lea
rcll
les
mov
je
push
cltd
lea
dec
nop
xchg
pop
lea
and
stos
out
jnp
lret
jecxz
stos
shlb
in
add
clc
mov
and
mov
in
outsb
es
scas
add
cmpsb
xor
out
movsb
imulb
dec
ret
test
mov
cmpsl
jl
stos
inc
dec
sbb
cld
cmp
push
jge
mov
jae
inc
shlb
jns
sbb
stos
stos
inc
mov
add
or
sbb
add
sub
cmp
xchg
sahf
pusha
and
and
sbb
mov
movsb
das
leave
pop
popf
fisubrl
xchg
lcall
mov
jg
test
adc
add
or
movsl
mov
ror
inc
orb
sbb
imul
mov
or
dec
sbb
in
cld
out
mov
dec
inc
icebp
loopne
add
and
cltd
scas
lea
pop
inc
mov
or
push
test
cmp
cmp
ss
rorb
cmp
mov
dec
in
jne
shrl
testl
ss
mov
enter
sbb
setg
xchg
or
push
popf
aas
xchg
add
add
out
add
je
or
or
xor
loop
and
scas
pop
rorb
aad
js
xlat
sbb
sub
mov
out
clc
sti
dec
mov
inc
lock
aam
pop
out
ret
mov
and
or
jp
push
and
inc
add
repz
push
adc
xchg
cld
outsb
pop
mov
inc
push
mov
push
xor
sbb
pop
imulb
les
fistpll
jg
pop
jg
jmp
dec
stc
pop
mov
pop
sahf
adc
das
dec
jp
jb
sub
xor
mov
push
gs
push
or
or
addr16
adc
push
inc
lcall
popa
and
jae
cmp
cmc
jmp
fsubrs
inc
xchg
stos
pop
mov
pushf
push
aas
sub
adc
mov
jg
icebp
aaa
fnstcw
mov
sbb
mov
clc
hlt
dec
xchg
icebp
jne
cltd
cli
push
mov
shll
lods
or
push
aaa
push
add
add
xchg
rorb
mov
and
aas
mov
popa
loopne
inc
test
sti
xor
jge
cmp
neg
fcmove
jne
cmp
mov
fmull
stos
test
sub
xor
out
shlb
rclb
je
lods
ljmp
stos
icebp
fidivrl
xchg
mov
lahf
cmp
dec
xor
enter
sti
jle
rorb
or
insb
je
inc
xchg
loop
jecxz
mov
jle
or
fs
add
pop
push
push
add
les
mov
sti
int3
mov
es
mov
sbb
sbb
jno
imul
lea
xchg
and
dec
jbe
mov
cmp
push
je
lret
dec
sti
sbb
nop
mov
pop
jge
push
sub
stos
out
es
into
inc
push
adc
je
jmp
js
icebp
mov
testl
adc
jmp
sbb
jmp
push
cmp
push
sbb
sbb
push
mov
mov
cmc
in
repnz
mov
sub
inc
mov
cli
sar
shll
aad
mov
jo,pn
or
idiv
inc
mov
outsb
popa
sub
dec
rcr
mov
sub
cwtl
stos
test
aas
mov
push
jno
loop
cmc
sahf
imul
dec
cld
fildll
jle
sti
or
daa
cwtl
je
and
das
xchg
dec
sbb
xchg
mov
stos
xor
hlt
insl
mov
and
mov
movsb
jl
mov
shl
xchg
bound
sub
out
ds
fwait
cmp
xlat
fbld
pop
pop
push
int3
and
jns
rol
cmp
repz
cld
xor
rcrl
cmp
loopne
sbb
push
xor
add
xlat
dec
arpl
jg
mov
add
lods
ljmp
insl
imul
cmp
ret
xchg
mov
adc
adc
int
movsl
pusha
mov
cmpsl
sbb
mov
in
cmp
aas
popa
inc
xor
sbb
inc
das
mov
sbb
dec
pop
jno
stos
xor
cmpsb
movsl
daa
adc
adc
sbb
js
test
or
les
mov
jbe
rcr
and
dec
sbb
adc
cld
inc
insl
fstps
pop
test
leave
arpl
mov
enter
icebp
add
pop
add
call
imul
fdivl
shl
in
orb
and
or
in
jnp
mov
jg
push
or
cmp
out
aam
out
sahf
jle
enter
cmpsl
iret
sbb
mov
dec
orb
mov
mov
scas
fidivrl
inc
mov
cmp
test
pop
dec
es
lcall
scas
les
fwait
pop
lods
cmc
adc
pop
sbb
jnp
movsl
enter
mov
sbb
rorl
stos
int3
xor
xchg
lret
shll
decl
and
mov
stos
movsl
iretw
int3
sbb
sti
pop
and
mov
add
ret
sbb
aaa
es
fcom
orl
mov
jmp
lea
es
and
ljmp
mov
mov
sarb
jns
and
fadds
adc
xor
shlb
xchg
sti
xchg
or
and
mov
cmp
lods
movsl
lret
sub
inc
jo
arpl
dec
dec
sub
adc
paddq
out
xchg
mov
and
sbb
mov
lods
lcall
pop
in
outsb
jns
inc
outsb
cmpsl
push
roll
punpckhwd
imul
push
cmp
pop
test
inc
data16
mov
and
mov
int
in
inc
pusha
je
or
scas
push
pop
ja
xchg
cmpsb
cmp
jge
push
sahf
and
sub
pop
lcall
arpl
adc
rolb
jg
js
xchg
sub
inc
xor
pop
lahf
fucom
out
aas
movsl
notl
int3
std
mov
xlat
add
xor
jnp
orl
outsb
lahf
outsb
xor
xor
xor
mov
push
xor
sub
mov
push
fcmovbe
repz
call
mov
andl
and
lock
mov
pop
lods
adc
out
popf
stos
pop
out
mov
xor
mov
jle
pop
pusha
jle
mov
fwait
cmp
insl
jae
mov
sub
xor
push
add
inc
sti
jno
cli
fwait
adc
sarb
pop
in
mov
lret
xchg
inc
int3
mov
cmpsl
xchg
scas
mov
out
stc
ret
stos
fisubrs
lret
out
cmc
sti
ficoms
ficoms
cmc
mov
mov
shlb
mov
call
dec
hlt
add
mov
mov
mov
sub
pop
xor
insb
dec
add
sbb
arpl
fildl
insb
add
nop
in
hlt
push
jge
ret
inc
imul
leavew
js
ja
in
and
dec
shlb
pop
or
in
sbb
add
xlat
push
das
leave
mov
sahf
or
jb
pop
insl
sub
or
jnp
and
jg
xor
loope
add
cmp
add
scas
mov
inc
add
inc
stos
loop
push
mov
push
xor
xor
enter
inc
jbe
clc
movsl
lret
push
push
add
pop
leave
xor
mov
xchg
test
add
popf
add
xchg
fstp
out
dec
mul
movsb
enter
out
xchg
shlb
mov
jle
or
ficoms
sbb
incb
inc
into
in
ds
mov
into
rclb
ja
das
mov
jb
outsl
push
test
mov
mulps
stc
sbb
in
out
pop
fisubs
out
mov
sub
iret
ficomps
test
jne
je
mov
push
cld
cmp
cmp
mov
vmread
mov
sti
sbb
xchg
adc
int3
jg
or
jmp
fwait
lcall
fidivl
fadds
mov
mov
leave
std
clc
mov
dec
adc
stc
sub
sbb
jbe
mov
lods
iret
mov
cmp
adc
cmpsb
inc
test
mov
fdivl
leave
mov
pop
push
pusha
push
adc
adc
loope
xchg
pop
push
cmp
inc
je
jp
add
jg
mov
add
or
push
xchg
sbb
bound
add
lahf
sahf
call
ljmp
adc
xchg
xor
lods
push
pop
jae
outsl
sub
xor
inc
cmp
jmp
sub
icebp
enter
mov
mov
mulb
sub
add
push
add
push
xchg
jge
mov
scas
mov
int3
add
aad
pop
xchg
imul
pop
lcall
and
cmp
mov
cmp
mov
in
fisttpl
and
shlb
fidivrl
in
loop
push
push
out
jecxz
cmp
adcl
fisubrl
push
in
rclb
inc
into
xchg
mov
jp
aaa
push
test
adcl
mov
js
push
js
js
icebp
jne
lock
jae
inc
in
repnz
fcompl
enter
sub
out
lahf
xchg
dec
ret
xchg
and
push
jge
aam
mov
in
test
ss
outsb
or
xor
push
out
xor
lds
sbb
add
adc
es
jae
add
jle
sbb
cltd
xchg
loop
inc
scas
pop
nop
dec
sub
fs
sub
push
bound
add
jae
inc
faddp
push
xlat
loop
xor
jns
jp
sub
lcall
loopne
sub
mov
inc
push
xor
push
cld
fisttpll
xchg
ret
jmp
push
mov
fwait
pop
into
aas
inc
jg
fildll
inc
push
scas
cs
movsb
fildll
cmp
fstl
movsl
jne
das
out
outsb
mov
lahf
pusha
dec
jo
sbb
cmp
inc
push
or
xchg
mov
sbb
push
mov
push
fs
aad
jns
ja
idivb
push
fstp
cmp
mov
xor
dec
repnz
adc
hlt
push
dec
repz
pop
std
std
mov
ljmp
test
or
xlat
bound
dec
pop
test
mov
sahf
cmc
dec
pop
mov
bound
stos
das
pushf
sub
scas
lods
sub
or
cli
xchg
pop
in
into
sbb
jge
daa
aam
and
mov
inc
adc
sarl
mov
mov
mov
cmpsl
sub
mov
fs
sub
fwait
popa
sub
insl
add
add
xor
jge
xchg
mov
cmpsb
cmp
cmpsl
sub
dec
xor
fwait
std
data16
xchg
aas
rorl
and
testl
xchg
rorb
lock
test
add
cmp
push
adc
popa
push
les
in
shlb
push
aas
bound
sub
jns
sbb
mov
sbbb
pusha
jge
pushf
aad
mov
movsl
nop
fmuls
lret
sbb
loop
pop
mov
mov
mov
cmc
jo
fldenv
int3
xchg
clc
shrl
in
hlt
fldt
sub
jo
int
call
xchg
leave
mov
std
dec
push
orl
loop
inc
frstor
sbb
cmp
pop
sbb
sahf
bound
mov
pop
rcrl
leave
iret
filds
push
xchg
cmp
adcl
inc
xchg
jnp
and
data16
dec
test
jns
push
lea
out
mov
stc
ret
and
mov
fdivr
sbb
xlat
lock
sub
xchg
test
push
xchg
fistl
or
stc
push
mov
call
or
les
jne
je
xchg
or
imul
enter
out
pop
addw
rcll
in
and
sbb
xchg
sti
hlt
addr16
cli
outsb
inc
fwait
andb
mov
cmp
push
xor
clc
ror
mov
push
pop
xchg
pop
jg
pop
into
lcall
fisttpl
aas
dec
ljmp
xor
in
aad
sbb
movsl
sub
out
sub
test
dec
fldenv
cwtl
mov
jno
lret
sahf
mov
xchg
insb
out
sbb
repz
xchg
sub
mov
mov
pop
or
or
pop
jge
add
or
pop
insb
mov
stos
push
clc
lods
aam
inc
xor
popa
fbld
add
jmp
ja
cmpsl
add
sarb
mov
out
jecxz
je
ljmp
add
aad
sbb
sub
leave
mov
xor
sub
inc
stc
pop
add
pop
cwtl
mov
jno
mov
push
adc
mov
add
xor
test
sub
fsubrs
inc
adc
jae
xchg
inc
ret
and
and
sbb
pusha
int3
mov
adc
mov
ja
add
sub
push
dec
adc
push
pop
mov
sub
mov
addr16
es
popl
aaa
inc
rcl
push
je
jb
dec
add
pop
arpl
addr16
xchg
mov
pop
xlat
mov
call
sbb
rorl
stc
cltd
sbb
or
fdivl
jb
add
mov
rclb
push
push
cwtl
lock
mov
in
shll
sbb
adc
mov
sarb
adc
dec
or
jmp
sub
or
xchg
pop
sub
sbbb
push
scas
pop
dec
ss
popa
nop
pop
mov
aaa
pop
les
in
stc
cmpsb
ss
add
sti
mov
dec
mov
push
sbb
xchg
inc
jmp
push
movsb
dec
iret
adc
mov
imul
push
insb
push
jmp
shl
xchg
loope
stc
lahf
mov
lods
ret
pop
xchg
xchg
shr
jbe
call
pop
sbb
movsb
xchg
pushf
loop
inc
bound
cmp
sahf
mov
jno
les
xchg
cmc
or
mov
mov
subl
out
movsb
js
loope
jecxz
ret
stos
sub
pop
sub
ja
xchg
jno
cmp
nop
movsb
jge
pop
push
loopne
dec
sbb
jmp
insl
jecxz
es
jns
icebp
das
scas
int
sarl
inc
nop
ror
cld
les
cmp
dec
rorb
sahf
out
stc
xchg
pop
adc
mov
pop
xor
mov
xchg
push
iret
dec
xchg
add
fists
mov
out
xchg
iret
repz
lods
mov
subb
lahf
sti
mov
cmp
cmp
push
or
inc
cmc
add
test
js
push
std
sub
ja
cwtl
aad
mov
orl
stos
movsb
pause
in
dec
cmpl
lock
mov
add
mov
cwtl
pop
lods
push
push
jmp
adc
out
cmpsb
ds
adc
adc
jno
in
loop
push
and
mov
push
mov
ja
stc
ds
jae
icebp
inc
xchg
loopne
das
mov
imul
mov
or
xchg
push
in
mov
in
into
aam
outsl
out
push
or
mov
xchg
lret
pop
sub
adc
gs
push
lret
lea
dec
int
out
xlat
mov
dec
pop
and
pop
add
adc
adc
sbbl
jecxz
mov
stc
lret
xchg
filds
test
into
lret
mov
cmp
dec
aaa
jmp
pop
fldl
int3
fldcw
mov
bnd
int
xor
mov
repnz
repz
jecxz
and
inc
nop
pop
xor
aam
hlt
les
arpl
mov
jno
mov
xor
add
movsl
mov
and
rcrl
scas
mov
mov
push
pop
jns
lods
cmp
aad
dec
sub
imulb
sub
mov
scas
jns
push
xchg
je
mov
xlat
out
xchg
push
mov
sbb
mov
fcmovnu
mov
dec
out
insb
adc
lret
inc
adc
mov
jg
sbb
lcall
mov
loopne
cltd
inc
imul
arpl
outsl
shll
xchg
xorb
sbb
and
xchg
fwait
scas
loope
insl
jmp
rcl
inc
in
cmp
test
jge
ret
adc
ja
cmp
mov
lahf
scas
sub
xor
cmp
jmp
fwait
mov
fisubrs
leave
test
loopne
scas
repz
pop
adc
or
stos
in
mov
cmp
mov
and
and
lock
jae
decb
in
ret
lods
lret
xor
xchg
push
test
imul
enter
jno
jg
dec
sub
xchg
pop
leave
sub
inc
dec
push
jg
and
andb
das
dec
int3
sub
testl
cmpsl
arpl
enter
out
push
imulb
xor
pop
push
jb
imul
or
dec
mov
fimull
cmpsb
mov
jae
mov
mov
adc
mov
in
int
mov
div
dec
mov
or
pop
mov
into
aas
mov
ds
adcl
push
pop
roll
in
outsl
jmp
mov
mov
ret
push
pop
sbbl
loopne
lahf
out
sub
jl
out
out
and
jns
fwait
adc
lret
adc
cmp
sbb
rcl
sbb
addr16
daa
lods
in
nop
and
mov
mov
loop
fisubrl
pop
pop
jbe
xchg
scas
add
jae
push
and
inc
imul
push
pusha
rorl
aas
and
or
or
aad
dec
std
shlb
cmp
das
sub
push
mov
shlb
xchg
push
push
sub
mov
mov
jp
out
sub
push
sub
push
imul
repnz
fldl2e
bound
cli
das
es
cmp
mov
cmpb
or
push
add
mov
nop
jl
sub
dec
pop
fdivrs
adc
push
jb
iret
jge
mov
jb
loope
mov
rorl
inc
sub
xchg
dec
movsl
out
mov
mov
xor
mov
cmovne
aaa
aam
repz
sub
pop
outsl
adc
jl
add
mov
popf
fsubrl
jecxz
dec
mov
scas
gs
sbb
fs
int
les
loop
xor
mov
xchg
xchg
out
jns
or
xchg
inc
mov
ds
cs
cli
flds
push
es
jge
daa
add
add
les
fs
stos
ja
rcrb
out
es
sbb
lods
sub
call
adc
add
pop
mov
pop
add
sub
cli
out
sti
fwait
cmp
or
movb
subl
mov
loop
sub
inc
jbe
or
xchg
repnz
mov
lret
movsl
loope
xor
xchg
push
push
mov
jnp
jb
dec
insb
in
mov
xchg
into
mov
loop
scas
sbb
shlb
orb
filds
fbstp
xchg
xorb
push
xorb
and
jbe
cmp
or
sub
mov
mov
icebp
jmp
mov
test
dec
xchg
mov
cltd
jmp
dec
and
scas
out
cmp
pushf
inc
mov
pop
movsb
mov
jb
push
push
jae
xchg
push
mov
push
push
mov
fisttpll
pop
push
adc
imul
mov
ret
lock
int
test
aas
fs
sbb
mov
push
gs
and
xchg
fs
and
inc
and
push
sub
xorb
cli
sbb
pop
sbb
push
fcmovnu
fs
lods
lcall
in
ja
mov
sub
cltd
dec
cpuid
les
in
jmp
jmp
xlat
repnz
pop
popa
mov
pop
jmp
pop
aaa
mov
insb
push
adcl
js
sbb
push
daa
mov
popl
cs
mov
shrl
xrelease
int3
jne
icebp
push
loope
negb
cs
jecxz
scas
and
nop
xchg
jmp
cs
or
call
jae
mov
push
insl
data16
mov
mov
in
adcb
aad
bound
mov
and
adc
mov
mov
rcr
rcr
xor
cltd
rcrb
out
sub
dec
or
stos
add
pop
stos
push
mov
jg
push
dec
fmuls
out
gs
std
loop
mov
mov
out
jb
sub
adc
xor
inc
mov
mov
ss
aam
xchg
jne
stos
sbb
cmp
add
cmp
sahf
aam
loop
jp
out
mov
in
das
ret
test
sbb
mov
mov
cmp
sbb
jbe
in
sub
mov
std
cmp
hlt
jl
out
ficoml
xchg
adc
ficomps
xor
adc
jmp
call
bound
push
loope
xorl
in
and
pushf
fwait
xchg
arpl
sar
rcl
mov
dec
xor
xor
xchg
into
stos
jnp
pop
jnp
mov
xor
or
inc
dec
std
aas
pop
inc
cmpsl
inc
cwtl
lods
pop
neg
in
inc
xor
dec
jo
mov
and
and
pop
push
push
popf
arpl
mov
repz
cmp
adc
mov
jle
pop
xchg
pop
cmp
mov
jae
sbb
sub
add
push
xchg
inc
aaa
lods
jno
adc
inc
mov
adc
add
fsubrl
inc
mov
dec
sbb
jge
or
test
sub
mov
in
xor
outsl
jno
sbb
aas
outsl
push
inc
pop
cmp
mov
jo
negl
or
or
xor
adc
jge
push
pushl
and
dec
push
insl
enter
arpl
sahf
mov
insl
add
movsb
add
fnstcw
cld
cmpsl
push
lds
push
addb
push
lods
outsb
insb
jle
aad
mov
adc
mov
jbe
subb
xchg
mov
loope
fs
divl
cmp
mov
pop
sbb
dec
mov
fs
aaa
mov
andl
fdivr
outsl
out
rorb
sbb
and
les
jo
sarb
sbb
addr16
aad
inc
push
outsl
aaa
js
cwtl
push
scas
adc
cwtl
dec
test
mov
pop
jge
pop
jle
icebp
adc
lods
roll
inc
pop
aaa
sbb
mov
mov
repz
sub
outsl
les
mov
ss
lock
arpl
sbb
cmp
mov
stos
push
pop
cld
mov
dec
cmp
mov
mov
add
decb
das
cmp
xor
add
imul
in
or
jge
dec
shlb
mov
sbb
int
mov
pushf
cmpl
lock
mov
add
lds
pushf
fldl
sub
push
xor
fwait
clc
xchg
push
mov
sarl
js
sbb
das
jne
cmpsb
pop
inc
pop
gs
loop
das
pop
std
lret
jae
insb
repz
in
rcrb
rcr
pop
mov
jnp
enter
adc
pushf
cmp
fs
lahf
es
leave
lcall
in
ret
jns
mov
out
popf
dec
cltd
int
mov
in
hlt
js
lods
jne
test
dec
xor
adc
icebp
loope
push
mov
scas
jl
mov
dec
repnz
jp
jns
mov
repnz
push
push
xchg
jns
or
out
cmp
repz
pop
xchg
loop
jg
int
fisttpl
cmp
and
fsubr
mov
adc
push
imul
lds
arpl
jmp
or
fnstcw
out
mov
lret
mov
fsubrl
dec
enter
mov
sub
rcll
and
into
loope
call
lds
sbb
adc
sahf
cld
mov
mov
push
mov
das
jb
loop
mov
into
lea
jae
data16
dec
xchg
or
push
lcall
push
stos
mov
mov
lods
out
mov
dec
je
hlt
cmp
push
pop
mov
hlt
lcall
cli
push
xchg
sub
jbe
dec
push
jne
nop
cmp
push
jg
inc
push
subl
jae
addr16
int
sahf
jns
push
jo
sub
lahf
mov
pop
cmp
jmp
sbb
dec
lods
repz
push
sbb
pusha
cmp
lock
cltd
lock
xchg
sbb
jbe
test
mov
subl
xchg
pop
jnp
loope
lods
lea
arpl
jne
push
out
aad
mov
movsb
mov
mov
xor
cmpsb
daa
mov
mov
jo
in
xchg
cmp
out
pop
cwtl
sti
push
or
lret
iret
push
shr
fnstenv
sahf
mov
or
ljmp
repz
mov
movsb
pop
std
sub
pop
test
pop
ss
mov
mov
dec
dec
int
mov
movsb
mov
mov
mov
arpl
cli
jecxz
sbb
adc
cmp
fincstp
mov
ret
add
clc
out
insl
cmc
and
and
call
push
push
aaa
call
aaa
inc
movsb
or
rcrb
cmp
mov
mov
into
inc
stos
ja
dec
xchg
mov
imulb
shlb
add
inc
mov
popf
sub
mov
jb
mov
rclb
andb
in
and
lods
mov
cwtl
inc
jb
test
loopne
lods
dec
mov
cld
dec
xor
fsts
sbb
sbb
out
test
jmp
sbb
call
xor
lahf
cltd
jge
out
fisubrs
imul
fmull
imul
scas
nop
imul
stos
outsb
inc
repnz
imul
in
int
xchg
or
push
mov
pop
fwait
adc
push
ret
lret
fs
cwtl
or
test
cmp
add
add
cvtpi2pd
out
fs
xchg
aad
call
jmp
xor
scas
stc
adc
mov
loopne
push
sub
and
sub
sbbb
jnp
ret
outsb
dec
enter
adc
mov
fs
pop
shr
mov
jmp
enter
pop
jne
lcall
and
add
arpl
je
pop
xchg
push
aam
out
mov
xor
jnp
insb
aaa
cmp
frstor
pop
mov
jbe
scas
xor
das
push
mov
or
mov
shrb
jmp
stos
addr16
ljmp
or
mov
js
arpl
loope
add
and
lret
jbe
and
test
pop
je
outsl
gs
ret
in
lret
hlt
jmp
repz
pop
in
cmpsl
addr16
fsubrp
dec
loop
std
and
push
xchg
xor
clc
jge
jnp
mov
rcll
mov
lcall
aad
fnstenv
addr16
in
rcrb
inc
lahf
mov
repnz
mov
jmp
mov
sub
ret
mov
mov
out
movsl
mov
or
enter
int
adc
int3
sbb
push
jae
cmpsb
add
push
fsubrl
loop
loopne
bound
jge
sub
jge
sbbb
sarb
pop
mov
xchg
or
add
in
push
test
in
shlb
cmpsl
pop
jo
sub
jp
pop
mov
cmp
xlat
leave
aam
xor
sub
enter
xor
or
push
cmp
arpl
pop
push
pop
dec
jecxz
mov
lahf
cli
iret
stc
jmp
add
sub
dec
cmp
mov
in
jno
repnz
add
adc
adc
pop
stos
flds
cwtl
sub
mov
stos
inc
ljmp
mov
mov
mov
sahf
sbbl
push
or
mov
sub
lods
das
and
dec
rol
or
rcl
push
fs
fs
popf
dec
rolb
das
movaps
cmp
or
pop
xlat
in
das
ljmp
ret
push
inc
pop
out
xchg
add
inc
inc
mov
xchg
or
sub
adcl
pop
push
shrb
leave
std
fistpl
popf
mov
fsts
push
cwtl
or
rcl
add
scas
in
pop
xchg
hlt
sbb
and
sub
popa
mov
xchg
mov
or
imul
in
mov
adc
mov
xchg
hlt
loope
sbbb
ret
sub
add
mov
pop
out
xchg
xor
jp
lods
add
push
dec
mov
std
fstpl
pop
lock
mov
mov
rcll
negb
sub
pop
jno
fcomps
add
cmp
jecxz
ljmp
leave
inc
jo
fistps
imul
inc
call
insl
mov
ja
stc
pop
lcall
xor
leave
stc
in
pop
mov
sub
loopne
mov
sub
fwait
mov
xchg
enter
imulb
pop
insb
mov
push
fwait
inc
ja
in
push
xor
mov
sbb
push
adc
push
jns
add
pop
cli
cmp
cld
int3
loopne
mov
ds
cmp
je
sbb
iret
sahf
out
mov
sbb
andl
mov
adc
stos
pop
mov
xor
nop
mov
push
dec
pop
adc
fcoml
in
adc
nop
lea
jg
push
popf
into
cmc
jge
jbe
bound
push
mov
stc
sub
xchg
dec
pop
push
and
jle
ret
dec
inc
and
into
movsl
ds
iret
dec
cmp
push
test
sbb
mov
xchg
push
jmp
sti
repz
and
dec
xchg
xchg
sti
fiaddl
dec
or
pop
push
jo
in
sub
add
lret
jnp
jle
iret
push
js
test
lea
push
out
stc
jl
loope
dec
adc
test
bswap
mov
std
and
leave
stos
mov
push
mov
pop
pop
or
xchg
ds
push
add
rcrb
mov
cmp
addr16
and
stos
sbb
add
into
das
in
call
mov
sbb
sub
fadds
and
in
daa
mov
sub
js
outsb
xchg
stos
push
mov
ret
stos
ds
leave
in
inc
push
jecxz
adc
clc
jmp
sub
stos
pop
ror
mov
push
repnz
mov
inc
mov
sbb
push
in
inc
jnp
mov
nop
bound
clc
pop
movl
pop
pop
push
loop
jecxz
inc
jg
mov
inc
sbb
fisttps
lods
push
ret
lcall
fcomi
pop
or
popf
mov
mov
aaa
in
out
lea
dec
jp
in
ljmp
xor
sbb
pop
inc
icebp
movsb
pop
cld
cmp
inc
mov
jge
add
push
and
lea
out
bnd
add
cmp
jb
jae
test
xchg
sbb
insl
ret
icebp
je
out
mov
ret
rolb
add
shlb
ret
sti
call
pusha
popa
jl
push
stos
pop
es
in
in
jns
push
negb
xlat
add
mov
popa
sbb
loop
out
sbb
xchg
sarl
mov
sbbl
testl
pop
cltd
mov
cltd
imul
lcall
out
push
or
stos
push
test
mov
push
cmp
out
fmuls
lret
sbb
push
dec
stos
sub
lea
arpl
sti
push
arpl
mov
pop
push
hlt
in
xor
in
inc
cmp
les
sbb
cmpsl
in
hlt
test
pop
cld
iret
in
jns
in
jno
mov
pop
mov
sub
xlat
aam
subl
mov
mov
xlat
jno
xor
rcll
imul
iret
shl
add
je
nop
sbb
adc
shrl
mov
pop
test
xchg
sbb
int3
mov
fiadds
xor
mov
cld
dec
icebp
ss
aas
lea
xorl
mov
pushf
cs
pop
fidivl
cmp
inc
nop
pop
push
std
xor
mov
xchg
pushf
in
adc
repz
jns
cmp
xchg
les
mov
cli
loope
add
mov
pop
mov
mov
jne
shrl
popa
inc
xchg
add
or
pop
pop
ret
out
daa
xor
mov
mov
push
add
or
sahf
sahf
ret
out
xor
sbb
sbb
push
aad
jnp
pop
xchg
push
lods
cmpsl
dec
out
mov
sub
push
aad
fmull
xor
les
stc
mov
addl
pop
cs
inc
pop
cmp
cld
fnsave
fs
dec
imul
aam
arpl
adc
dec
inc
scas
fstpl
ret
cltd
sub
mov
add
lcall
rcll
inc
out
iret
mov
ss
push
clc
cmp
mov
mov
push
bound
rcll
dec
pop
pop
cmovs
mov
xor
cs
mov
mov
inc
inc
and
inc
sti
int
fwait
adc
and
jle
sbb
outsb
fs
fdivl
repz
imul
sarb
dec
mov
pop
pop
add
push
mov
frstor
mov
sub
pushf
xchg
arpl
sbb
dec
imull
pop
notl
and
sub
sub
int
sbb
add
cmc
pop
lods
out
lods
stos
and
jle
out
xchg
pop
rolb
es
pop
sahf
adc
push
fwait
sbb
into
mov
mov
adc
sub
aad
mov
dec
scas
mov
inc
fwait
and
push
xor
adc
lahf
iret
int
xchg
lds
push
xchg
mov
sbb
lidtl
dec
sub
insl
fistl
arpl
jge
push
mov
int
paddw
daa
xchg
push
test
push
pop
mov
fsts
in
sahf
repz
or
rorl
repz
or
jno
icebp
repz
pop
lahf
and
test
out
adcl
es
xor
cmp
sub
dec
daa
or
adc
repnz
in
stos
movsl
add
pop
dec
out
jmp
outsl
cmp
cmpsl
inc
cmc
loopne
ror
in
test
data16
or
cmpsl
dec
xchg
popa
dec
enter
outsl
inc
mov
insb
push
cmc
jg
sti
or
add
int3
lds
fdivl
lea
addb
mov
into
outsl
mov
add
ss
push
fidivrl
and
scas
shrb
mov
int3
inc
cmp
push
hlt
xchg
jl
add
jne
imul
leave
int
leave
mov
jmp
mov
and
imul
cwtl
inc
push
ret
push
mov
out
sbb
cmc
call
push
data16
ss
jmp
icebp
test
pop
or
jmp
cmc
enter
in
sub
insb
icebp
testl
xor
and
mov
pop
jl
dec
scas
mov
rcrb
mov
xchg
pop
push
inc
pop
outsb
dec
adc
fidivs
dec
cmp
aad
inc
push
dec
test
jecxz
cwtl
mov
xor
fsts
das
lret
adc
sbb
jns
loope
shl
inc
pop
out
dec
hlt
adc
in
aad
cli
test
aam
negl
rol
gs
sub
pop
scas
sarl
jg
loope
sbb
lret
hlt
movsb
cmpsl
inc
dec
cmp
aam
mov
aaa
add
xchg
rcrl
mov
mov
loopne
sbb
nop
push
adc
in
in
mov
rorl
mov
xchg
movsl
jb
jns
scas
and
mov
bswap
jmp
mov
push
stos
aam
aad
and
out
and
cmp
xlat
aad
ljmp
add
cmp
out
hlt
int
push
scas
dec
cmp
mov
fsub
push
or
adc
cmc
jge
fcoml
aas
out
icebp
jp
loop
cwtl
cmp
add
pusha
hlt
movsl
testb
movsl
lcall
adc
imul
and
mov
or
cmpsb
or
cmp
adc
cmp
jbe
push
fwait
xchg
cmpsb
dec
xor
cmpsb
pop
loop
xchg
std
pop
jle
fs
stos
adc
xchg
adc
jb
adc
dec
or
mov
cmc
lret
scas
mov
outsb
jp
test
leave
pop
jae
out
lahf
loopne
jle
adc
adcb
out
jl
push
mov
pop
jae
lea
cli
xlat
lret
flds
mov
mov
pushf
repnz
and
pop
enter
cltd
jmp
dec
in
jp
pop
inc
add
in
dec
dec
aas
cs
fbstp
fildll
xor
mov
or
jp
mov
call
xor
dec
rcrl
adc
aas
shll
jmp
outsl
popf
lcall
enter
mov
in
leave
xchg
cmc
xchg
in
cmp
sbb
cld
icebp
pushf
pop
std
movb
mov
ljmp
sub
xor
jns
dec
fistps
and
es
js
cmp
loope
adc
push
add
mov
pop
adc
sub
jb
shlb
mov
subb
js
jbe
insb
xor
mov
push
loopne
out
dec
daa
or
stos
scas
cmp
loope
test
xor
cmp
je
imul
xor
pushf
and
mov
mov
adc
test
incb
fistpll
sbb
insb
cmp
adc
inc
incl
lret
lea
test
lods
rorb
push
pushf
call
addr16
clc
xchg
cmp
mov
out
sbb
pop
fwait
mov
jne
push
sub
push
xlat
rol
fidivl
fstpt
popf
mov
aaa
and
ror
data16
or
pop
push
outsl
dec
repnz
int
lea
iret
add
pop
add
mov
insl
or
jg
or
cmp
in
pop
mov
movsb
out
sub
pop
div
push
pop
jnp
push
sub
mov
popa
xor
sbb
jnp
xchg
std
push
data16
mov
mov
sub
fs
lea
xor
xchg
outsl
xor
mov
jne
sub
dec
out
aad
addr16
jnp
scas
xor
outsb
mov
cmp
pop
mov
pop
cmc
stos
dec
mov
xchg
xor
cmp
adc
cli
pop
nop
mov
test
or
sub
dec
dec
stos
xchg
test
xor
call
jg
cld
pusha
or
push
mov
daa
ds
jl
cmp
and
xor
push
push
mov
inc
jnp
rol
test
int3
xor
sbb
cmp
test
sub
subb
add
fcomp
jns
ljmp
mov
lcall
xor
mov
sbb
xor
adc
pop
test
jb
je
outsl
inc
or
out
mov
push
push
xchg
sbb
inc
sub
loope
adc
adc
cwtl
jne
xchg
lret
xor
mov
fdivrs
rcr
jecxz
out
out
add
push
imul
popf
pop
sbb
out
into
stc
adcb
sahf
enter
fs
dec
shl
adc
les
inc
and
repz
pop
in
or
xchg
mov
push
push
addr16
and
pop
mov
movsb
jmp
lret
sahf
pop
push
xchg
dec
js
lret
sub
sbb
mov
punpckldq
out
pushf
jle
lcall
or
sbb
js
mov
add
and
ss
lods
flds
dec
push
xor
xchg
sbb
jge
int
push
leave
cmpsl
or
or
imul
nop
pop
jp
mov
ror
rcll
cmpb
outsb
dec
rorl
nop
adc
xor
cmp
dec
push
cs
xchg
stos
mov
mov
js
mov
mov
mov
mov
cmp
outsb
decl
jnp
mov
pop
pushf
lret
xlat
and
popa
sbb
call
sub
dec
ret
adc
aam
mov
lea
sub
popf
xor
sbb
mov
jge
ss
dec
add
scas
push
jp
outsb
xchg
popf
adc
adc
jnp
das
jl
cs
inc
sub
xor
imul
dec
mov
push
xor
lahf
xchg
lahf
cmp
outsb
jecxz
cmp
push
dec
mov
fwait
das
jns
lcall
jl
jl
pushf
xchg
ftst
or
insb
outsl
sub
xor
xor
mov
sti
arpl
cmp
sub
icebp
xchg
std
movsl
scas
add
jecxz
or
lods
gs
dec
ljmp
push
inc
iret
mov
rcrb
into
dec
insl
scas
scas
and
push
je
pushf
arpl
sbb
inc
aam
fildll
sub
or
aad
mov
leave
xor
jecxz
xlat
mov
test
dec
ret
xor
push
dec
push
ljmp
gs
adc
dec
out
add
pop
dec
clc
cmpsl
imul
pop
and
mov
cmp
out
enter
or
fs
dec
pop
pop
jle
jl
xchg
push
ds
cmp
sub
xchg
sub
lret
int
push
mov
or
sub
fnstcw
repz
push
mov
push
dec
pop
das
ret
mov
xor
jbe
and
add
jb
into
imul
sub
push
push
out
dec
in
fisubrs
push
je
fwait
stos
repnz
jp
mov
in
mov
es
mov
aaa
fldcw
loop
xchg
and
pop
push
mov
fildl
xor
arpl
es
jmp
xchg
jnp
xor
daa
insl
movsl
cmp
std
jmp
int
fs
push
imul
or
shl
mov
adc
push
mov
mov
popf
cmp
mov
leave
add
cwtl
adc
lret
or
cli
xchg
cli
xchg
shll
out
pushf
mov
xor
mov
push
xchg
or
mov
xchg
sbb
jne
pop
lea
imul
andb
outsb
aas
ja
mov
inc
lcall
iretw
xor
cmp
pop
cwtl
imul
lods
mov
rcll
add
inc
adc
cmp
or
lods
das
push
adc
mov
lahf
pop
jnp
int3
jae
push
xor
scas
and
cltd
dec
scas
cwtl
add
pop
xchg
and
lods
testl
clc
ror
mov
out
ds
cmp
shl
xchg
out
pop
outsb
pop
sar
cmp
jecxz
dec
mov
jg
loop
sub
addr16
ljmp
push
fldenv
shrl
movsb
bound
mov
mov
pop
mov
jp
loope
pop
das
cmp
cmpsb
dec
or
ret
mov
or
jae
sti
mov
mov
aas
mov
and
aam
mov
adc
jle
into
mov
push
ja
dec
add
add
iret
pop
aad
outsl
fstpl
inc
out
xchg
popf
or
xor
mov
or
rcl
iret
icebp
sar
movd
mov
fdivrs
outsb
sub
repnz
cmp
outsb
xchg
pop
inc
push
add
add
adc
sbb
jne
push
outsb
inc
cli
lds
lahf
mov
xchg
add
adc
icebp
lret
push
xlat
mov
inc
fnstenv
sbb
sbb
jp
jge
push
andb
popf
or
ss
js
cmp
stos
add
push
xor
jo
in
mov
test
rcr
or
pop
loopne
fisubl
leave
jmp
mov
cmc
mov
dec
and
fsts
fistpll
pushf
pop
jo
or
insb
aad
sub
cmp
dec
add
dec
popf
lods
mov
je
addb
add
out
lahf
xor
xlat
notl
pop
int3
loopne
xlat
mov
out
inc
sub
stos
push
add
clc
cmpsl
ljmp
sub
dec
jmp
movsb
jge
xchg
pushf
stc
out
cmp
push
cmpl
sarb
shl
aaa
push
inc
cmp
cmp
mov
pop
out
imulb
cmp
aaa
addr16
in
mov
adc
pushf
int3
je
orl
push
loope
mov
pop
movsl
mov
dec
shlb
outsb
std
mov
icebp
in
in
repz
fwait
jge
arpl
icebp
or
inc
cmp
jae
jmp
scas
and
mov
je
push
ds
adc
push
inc
movsl
mov
sub
inc
vpsubq
aas
test
test
pop
fwait
leave
inc
jp
lods
mov
or
es
add
stos
outsb
mov
notb
dec
orl
mov
mov
xchg
aas
fwait
movsl
xlat
mov
push
xorb
push
push
fnstcw
mov
or
ret
dec
adc
push
xor
out
mov
pusha
popf
dec
xchg
mov
xchg
rcr
sarl
pop
inc
lahf
shlb
push
lds
sub
mov
xlat
xchg
pop
dec
mov
shlb
cmp
jae
push
ljmp
mov
out
adc
lea
mov
movsb
notb
sbb
les
imul
cmpsl
mov
adc
pop
push
ret
mov
push
les
test
xor
mov
xchg
test
aad
cmp
ret
sub
fstpl
aam
ds
aaa
push
bound
adc
pop
jp
mov
sahf
adc
jno
dec
mov
xchg
in
pop
loopne
mov
cmpsb
dec
arpl
sbb
aas
inc
outsb
sbb
sbb
dec
in
outsl
mov
jmp
pop
jge
pop
xchg
jae
push
jnp
les
inc
dec
pop
test
add
fists
mov
jl
mov
lahf
das
mov
fsubrl
mov
mov
push
push
dec
mov
xor
mov
mov
lahf
fs
jp
mov
cmpsb
ret
movsb
and
jmp
cmp
inc
sbb
scas
icebp
bound
dec
jb
sarb
adc
or
imul
fcmovne
dec
mov
mov
ds
cmpsl
sub
lahf
push
test
inc
jo
mov
cmc
add
arpl
into
lahf
dec
mov
sahf
adc
jg
cltd
mov
pop
mov
lock
jp
mov
cmpsl
xchg
fldcw
adc
cmp
xor
push
cmpb
push
in
int
popl
add
scas
push
sbb
repnz
mov
inc
scas
pushf
adc
leave
push
lret
sub
dec
mov
xchg
aas
lods
aam
mov
mov
sbb
adc
push
shrb
dec
decb
test
mov
lea
cli
or
cwtl
mov
pop
outsb
test
jne
xchg
add
xor
fcompp
out
or
mulb
loope
pop
push
jmp
fnstcw
outsl
cld
xor
es
cmpl
and
dec
xchg
mov
pop
aam
nop
sbb
movsl
fimuls
mov
frstor
jbe
stos
xchg
jmp
jecxz
jno
push
fmul
add
add
cs
lea
andl
cli
cli
pop
shlb
dec
adc
stos
iret
sbb
fwait
jg
sahf
mov
push
ja
in
mov
mov
xlat
sbb
idivb
loopne
pop
aad
movsl
pop
xchg
sbb
pop
insl
dec
mov
lcall
pop
lret
lret
pop
pop
mov
cld
fimull
pop
sbb
inc
sub
xchg
into
cld
in
mov
jle
movsl
mov
repz
push
mov
mov
sbb
packuswb
outsb
std
ljmp
jnp
push
and
adc
popa
lret
sbb
sbb
xor
push
xchg
mov
inc
and
shl
lea
sti
xchg
fwait
jo
inc
test
aam
cmc
adc
and
popa
sbb
sub
stc
decl
push
roll
ret
inc
mov
cmc
push
mov
call
es
and
sbb
mov
pop
cld
flds
cmc
data16
lcall
adc
sbb
jmp
xchg
adc
push
xor
daa
cmc
adc
repz
ret
push
jge
stos
inc
pop
rcr
adc
cltd
testl
jno
test
fwait
adc
stos
mov
fldt
lcall
jge
adc
es
jo
out
in
add
push
mul
pop
outsb
stos
cmpsb
xchg
lahf
subb
out
outsl
cld
xlat
leave
mov
and
mov
mov
insb
idivb
cmp
iret
sbb
mov
fstps
cmp
pop
push
mov
aad
mov
flds
mov
jle
add
jl
negb
arpl
xor
dec
push
cli
bound
push
in
jecxz
or
imul
rcr
fdivrs
daa
mov
stos
fmull
iret
or
hlt
add
adcb
push
test
dec
cltd
ror
in
fistpl
sarb
cmc
or
ljmp
or
mov
adc
or
cmpsl
dec
lcall
adc
push
xor
sub
sub
es
out
xor
je
sub
mov
mov
lret
ja
xchg
add
mov
mov
cmpsb
mov
imul
out
mov
lock
add
adc
dec
or
mov
cmp
dec
xchg
add
stos
mov
or
test
dec
sarb
rcr
jo
rcr
ret
and
add
or
jae
xchg
xchg
mov
cmp
push
mov
les
and
adc
mov
pop
sub
lods
or
inc
repz
sbb
insb
fcomps
inc
fbstp
aas
iret
icebp
in
mov
in
sbb
data16
mov
cs
pop
adc
loope
pop
orl
std
idivb
in
stos
aam
mov
and
xchg
push
xchg
xchg
addb
mov
test
sbb
mov
test
push
mov
gs
and
test
inc
stos
dec
push
daa
sti
orb
mov
outsb
mov
sbb
int3
mov
shlb
loope
cmp
ljmp
mov
lea
pop
sbb
mov
lcall
outsb
cmp
dec
lods
jp
jns
cmp
lcall
inc
out
cmp
push
xcrypt-cbc
cmpsl
adc
inc
mov
sbb
fdivrl
lret
lock
fldcw
jo
cmp
push
xor
pop
push
js
xor
sbb
rolb
loope
jns
mov
out
lcall
jg
cmp
xor
rclb
sbb
lcall
repz
fimuls
pop
xchg
and
mov
aad
cmc
frstor
fs
sahf
push
pop
push
repz
or
jae
aas
sbb
mov
call
mov
sub
cmp
adc
pop
jge
cvtps2pi
and
xor
add
inc
mov
adc
and
add
imul
test
stos
out
pop
ljmp
push
pop
jae
cmp
or
dec
push
jo
cmovae
fld
lret
adc
pop
dec
cmpsb
mov
aas
dec
adc
adc
pushf
pop
lcall
data16
into
aas
jnp
std
cli
out
jmp
movsb
cltd
addb
dec
inc
rolb
inc
outsl
add
in
xor
bound
cmp
popf
inc
pop
pop
jbe
jg
pop
jne
jb
mov
je
gs
jo
outsl
enter
mov
inc
std
popf
in
int3
and
dec
add
sbb
psllw
imul
mov
mulb
gs
stos
cmp
mov
inc
repnz
std
cmpsb
into
sti
cld
jns
jmp
sub
leave
cltd
cltd
push
mov
aaa
cmpsl
out
insb
add
into
mov
xor
fmuls
or
stos
sub
xor
leave
mov
lcall
xchg
xor
sahf
pop
fimuls
mov
sub
mulb
xchg
and
testl
test
stos
mov
dec
es
dec
testb
iret
std
int
std
popl
mov
xor
lret
cmc
jl
jno
inc
sbb
popf
push
xchg
add
xor
or
ds
in
pop
movsb
push
cmp
jle
test
dec
ss
mov
adc
dec
jmp
dec
jo
or
popf
dec
into
jecxz
cmpsb
subl
adc
jg
inc
rclb
es
pop
test
dec
add
loope
mov
int
cmp
adc
test
inc
daa
fisttps
cmp
dec
mov
std
mov
xor
inc
cmp
xor
mov
cmc
fisttpl
loopne
les
adc
xchg
movsl
icebp
jecxz
pop
sub
cmpsl
and
jge
insb
dec
pop
int3
mulb
loopne
fcoml
mov
inc
jo
push
sbb
leave
or
rclb
outsl
movsl
pop
test
xor
mov
adc
test
xor
pop
inc
or
push
inc
aas
xlat
imul
jno
imul
sub
xchg
mov
cmp
andl
push
xor
rcrl
inc
dec
adc
cmp
sbbb
mov
test
clc
mov
subl
enter
les
or
lahf
dec
loop
insb
daa
rcll
dec
ds
xor
test
sbb
mov
adc
mov
in
sbb
push
jno
xor
sbb
sete
add
cmp
dec
sti
repnz
lahf
xchg
pop
incb
mov
mov
add
rorl
imulb
sahf
in
mov
cmp
xchg
push
cmp
adcb
xchg
xorb
mov
sbb
mov
insl
mov
mov
mov
loop
shrl
jmp
jbe
push
jne
pop
xchg
push
hlt
jge
and
and
push
or
aad
mov
pop
add
popf
push
or
mov
lods
popf
push
cmpsb
outsb
mov
sti
mov
jecxz
cmp
mov
testb
jbe
dec
sbb
dec
insb
pushf
add
in
bound
and
push
ret
rcrb
dec
mov
pop
es
jmp
fistpll
push
inc
mov
in
inc
dec
pop
lret
adc
or
push
pop
and
in
mov
cmp
jmp
cmpsl
push
outsl
jge
add
jmp
insl
lret
out
cmp
cmpl
sub
xor
or
sbb
icebp
jmp
gs
stos
fcomp
inc
push
sub
mov
jo
in
insb
jp
dec
jg
sub
mov
or
add
mov
movsb
loop
sahf
orb
dec
or
fisubrs
aaa
push
xlat
inc
jl
das
push
shll
fimull
or
outsl
sub
sbb
push
test
lds
adc
and
inc
mov
push
pop
adc
call
fwait
add
flds
data16
repnz
shrl
adc
push
sti
xor
in
lahf
test
fidivrs
or
xchg
cmp
scas
sbb
rorb
jne
mov
xorl
cmpsb
stos
push
and
and
bound
ljmp
out
mov
xor
gs
xchg
arpl
sbb
lret
test
aad
popa
cld
cmp
fcmove
push
mov
push
sub
xor
out
in
mov
and
ret
or
scas
fmull
outsl
cmp
push
mov
ficoml
bound
aas
ret
xlat
aad
pop
shll
insb
fdivl
lods
jmp
in
cmpsl
rolb
inc
subb
pushf
andb
shll
adc
mov
xor
call
insb
push
in
daa
out
hlt
sub
nop
mov
mov
lcall
movsb
and
pop
dec
into
inc
es
push
lea
adc
lods
je
and
decl
push
xchg
shll
cmpl
sbb
inc
sub
mov
inc
sub
iret
sbbb
adc
outsb
or
and
subl
test
xlat
cmpsb
loopne
sbb
loop
push
rorb
imul
sbb
fs
sbbl
loopne
popf
pop
mov
rcll
inc
jl
femms
cmp
adc
pop
add
mov
movsb
push
push
pop
or
iret
mov
in
push
sbbb
les
int3
test
mov
push
lret
adc
mov
int
shl
repnz
clc
mov
or
lods
cltd
mov
sti
insb
jg
dec
setg
leave
repnz
push
dec
pop
mov
lods
mov
push
adc
add
adc
scas
lock
sbb
mov
mov
pop
lret
ds
lods
ds
mov
popa
and
mov
hlt
jg
mov
xor
movsl
sbbb
out
push
mov
sub
push
mov
arpl
mov
out
fwait
insl
dec
xchg
push
add
std
repz
call
xchg
or
jnp
add
mov
sub
add
sub
cmp
xchg
std
shrb
dec
ficompl
mov
stos
mov
mov
mov
inc
fildll
test
movsb
daa
inc
push
lahf
sbb
imul
lods
xchg
movsl
pop
push
mov
pop
xchg
dec
hlt
hlt
fcomp
and
rcrl
xchg
cmc
push
pop
in
aam
cmpb
call
xor
hlt
es
mov
imul
mov
stos
sahf
dec
clc
pop
mov
mov
lea
insb
nop
mov
inc
loopne
pop
movb
lock
adc
sbb
ret
and
popa
in
sub
sbb
pop
cwtl
sub
mov
dec
movsl
loope
mov
cli
push
arpl
repnz
cltd
and
dec
adc
aad
insb
notl
stc
xchg
data16
outsl
mov
cmp
repz
push
pop
stos
fmulp
or
imull
cmp
daa
adc
dec
adc
adc
aad
fwait
sti
dec
fidivs
cs
sub
mov
dec
adc
out
mov
leave
mov
mov
mov
jne
inc
lcall
into
rclb
push
sarl
dec
cmpsb
pop
incb
iret
cmpsb
jo
ret
into
mov
mov
je
stc
pop
cmc
and
rcll
test
cli
pop
fdivrs
icebp
mov
adc
flds
xor
xlat
inc
pop
or
les
cmp
shll
jle
fisttpl
adc
fnstenv
pop
in
and
cwtl
es
jno
pop
mov
adc
jp
imul
dec
cmc
push
mov
dec
into
bound
cmp
mov
cmp
cmp
inc
mov
or
jge
cld
js
repz
fisubs
repz
cmc
mov
xor
and
mov
pusha
pop
repz
scas
test
les
negb
int3
dec
sbb
popl
test
mov
sar
push
cmp
lds
lods
cwtl
insb
and
gs
fcmove
xor
ja
cmp
iret
mov
subl
mov
test
imul
cmp
mov
pop
hlt
jne
pop
cmp
divl
inc
mov
insb
das
lea
xor
cmp
ret
dec
and
mov
xorb
cwtl
andb
mov
cmp
shlb
mov
pop
aad
insl
sbbb
push
sbb
ja
mov
adc
dec
push
scas
mov
mov
imul
pop
adc
ret
divl
mov
ss
jns
push
cmpsb
inc
dec
cld
repz
xchg
fmul
xchg
add
sti
ret
cmp
stos
push
mov
jp
stos
sub
cmp
clc
sbb
in
inc
xchg
pushf
cmp
inc
inc
or
out
and
stos
jp
cmp
shll
or
add
daa
push
scas
cmp
leave
stos
subl
lods
dec
mov
and
xchg
xchg
ret
inc
scas
or
push
inc
and
lret
insl
and
jp
jae
loope
pushf
add
addr16
cmp
or
fcompl
mov
mov
inc
cli
popa
aas
cltd
pop
aam
outsl
push
aam
lret
xor
fisttpll
mov
mov
and
cmp
lds
cli
pop
and
lods
mov
dec
sub
xchg
mov
nop
sub
lods
mov
scas
repnz
pop
push
jo
js
lcall
out
stos
jb
xchg
ja
sbb
cmp
aas
mov
cmp
inc
pop
ds
lret
das
clc
jo
xchg
in
mov
scas
call
cmovs
push
into
into
dec
imul
mov
rcl
mov
mov
mov
or
mov
fistpl
mov
mov
mov
cmp
mov
jo
or
repnz
mov
xchg
pop
fs
push
aas
ja,pt
add
cmp
or
adcl
pop
scas
in
or
sbb
dec
dec
filds
aas
pop
stc
push
dec
int
mov
mov
or
pop
psubb
lret
mov
dec
sbb
inc
ljmp
rolb
std
jmp
out
xor
aaa
push
pop
mov
fwait
mov
fldcw
faddl
fcmovu
or
and
jle
pop
outsl
shl
fsubrp
push
stc
and
loope,pt
mov
andb
pop
cwtl
ret
popf
push
xchg
cmp
daa
push
adc
inc
es
add
test
jl
push
into
insb
sarl
xor
rcrb
mov
mov
or
ss
pop
cli
loopne
iret
stos
mov
fdivp
pushf
sbb
jmp
sahf
out
jg
or
fs
cli
mov
les
push
enter
enter
xchg
out
lock
push
das
popa
emms
adc
lahf
adc
or
jmp
fcompl
xchg
arpl
jmp
pop
loope
fsts
inc
addr16
mov
mov
imul
int3
sub
pop
add
loope
mov
inc
ficompl
std
cwtl
popa
sbb
out
sbb
xchg
mov
mov
xor
jge
insb
adc
jecxz
repnz
test
add
call
lds
pop
movsl
js
aad
call
xor
cld
adc
subl
xchg
sahf
xchg
aam
stc
and
int
imul
cmp
sbb
jo
sbbl
in
jne
stos
dec
sbb
jbe
sbb
push
imull
into
pop
adc
aaa
xor
dec
add
scas
xchg
cwtl
enter
cli
lock
adc
cmc
mov
mov
in
mov
jbe
rolb
lock
pop
push
add
sbb
ss
mov
xlat
js
faddp
lcall
decb
in
ret
mov
jns
xchg
mov
lods
psubusb
push
xchg
push
push
push
mov
pop
pop
push
out
repz
push
xchg
or
jmp
rclb
sub
call
xchg
fidivrl
std
es
popf
loop
push
jl
ds
mov
sbb
cld
lcall
and
fsubs
adc
xchg
mov
or
shrl
mov
or
cs
add
stc
xor
les
shlb
int
lds
lret
popf
pop
jnp
imul
arpl
cli
sbb
aad
pop
mov
xor
xchg
mov
cmpsb
add
mov
loope
je
mov
sbb
lahf
imul
fnstcw
jo
push
jmp
addr16
repz
jle
xlat
fldcw
mov
test
adc
dec
xchg
sbb
aaa
scas
cmpl
bound
mov
sub
mov
movsb
mov
jbe
insl
fldlg2
dec
imul
push
sub
mov
out
fwait
popa
pop
movsl
jle
out
lock
cwtl
dec
push
js
cmp
dec
sub
aas
adc
mov
mov
lock
cmpsb
in
jne
flds
inc
out
fcomip
dec
mov
daa
aad
dec
outsl
push
test
dec
popf
scas
sub
in
enter
ja
mov
mov
push
in
xchg
aam
into
mov
add
aaa
fsubp
fidivs
insl
test
jecxz
pushf
add
jb
mov
jl
jp
in
arpl
ss
ficompl
ja
out
sub
lcall
inc
jle
fadds
mov
fwait
push
add
xlat
mov
mov
sub
in
out
orb
rol
dec
and
pop
pmaxsw
xor
int
sti
jns
cmp
dec
adc
fdivrs
push
mov
fldenv
cmp
mov
inc
pop
out
sbb
or
mov
adc
sub
xchg
xor
ljmp
sahf
adcb
jl
jle
mov
into
push
sarb
xor
sub
dec
xor
ds
xor
push
lahf
jne
pop
mov
cs
jae
push
lods
mov
xchg
mov
cld
add
inc
sahf
outsl
outsb
lea
int
jae
pop
xorl
ficompl
pop
leave
int
repz
cs
mov
lods
ret
mov
push
pop
pushf
loopne
sbb
icebp
into
xor
aam
push
int
add
inc
xchg
push
inc
cli
mov
xor
mov
lret
jnp
jnp
lea
shrb
mov
push
mov
fcmovb
in
sahf
lcall
mov
sbb
aaa
push
imul
ja
into
in
shrb
movsb
lret
xchg
push
add
cmpsl
stc
mov
jno
mov
lds
add
cmp
stc
inc
and
inc
out
test
cltd
sub
fwait
cmpsl
xchg
stos
mov
aaa
and
mov
xchg
jns
test
mov
cwtl
push
xchg
xor
mov
xor
mov
mov
jg
enter
jo
push
popf
call
lods
mov
cmp
subb
ficoml
xor
push
scas
fiadds
testl
sub
fistl
mov
push
out
mov
into
dec
mov
pop
xchg
xchg
out
cltd
cmp
sub
sbb
or
cmp
inc
add
in
pusha
adc
addb
adc
shlb
clc
ja
xchg
push
repnz
test
enter
faddl
adc
mov
or
or
cmp
mov
loope
out
test
jne
jmp
xchg
inc
and
mov
sbb
jmp
mov
aad
fwait
dec
pop
vmovntps
jnp
mov
pop
jnp
ljmp
icebp
sbb
filds
rcr
cltd
cmp
fisubl
scas
xlat
insb
lahf
pop
mov
je
adc
ja
pop
xchg
cld
cmp
adc
xor
sub
cmp
mov
jb
iret
xor
cmp
mov
inc
sbb
rcrb
push
mov
dec
xor
in
mov
or
loop
stos
test
ds
push
rcl
mov
rorb
push
xchg
add
mov
mov
gs
les
add
and
pop
movsb
stos
js
faddl
mov
repz
or
or
je
jne
cs
jae
mov
mov
fidivrs
test
push
es
imul
lea
jo
and
push
cmpsl
sarb
stos
cmp
loopne
add
xor
jmp
and
loope
loopne
popf
pusha
push
ljmp
lods
pop
or
dec
sub
and
and
insb
loop
jecxz
nop
dec
ds
mov
cli
push
fidivs
in
push
mov
test
fstp
inc
je
and
aad
xchg
sub
outsb
xor
cmp
push
test
inc
fld
int3
rolb
dec
add
gs
nop
push
fsubrs
push
ss
int
aam
aas
sub
sub
fnstenv
addr16
lds
mov
pcmpeqd
cmp
repnz
imul
scas
and
pop
inc
lock
scas
pushf
test
xchg
adc
jnp
jle
jno
rcrb
or
outsb
mov
adcl
adc
shll
popf
cs
jmp
xchg
jmp
outsl
push
add
pop
sub
in
ret
sub
push
dec
push
sbb
dec
pop
loop
add
add
sbbb
outsl
in
jnp
add
test
pop
bound
add
mov
xchg
js
clc
push
sarb
push
dec
testl
mov
test
jne
add
add
jne
jns
cmp
daa
int3
add
cmp
into
pusha
pop
imull
lcall
sub
sbb
mov
out
dec
add
and
jnp
mov
cmp
jg
in
and
xchg
jne
jmp
rcll
jl
fsubs
cmp
scas
js
nop
push
jp
ss
repz
adc
mov
test
bound
lods
sbb
js
add
mov
add
iret
add
clc
pop
icebp
adc
sbb
faddl
push
int3
xchg
fbstp
loop
mov
iret
insl
ljmp
enter
xchg
in
add
xchg
in
push
fcom
jp
pop
mov
xlat
mov
bound
scas
pop
outsl
das
aaa
pop
shll
test
sbb
mov
pop
rcll
xchg
jge
fisttps
or
mov
addl
mov
xor
nop
jb
mov
int3
adc
cli
push
and
push
icebp
push
in
cmp
mov
mov
addr16
aaa
repz
lcall
dec
not
jne
fwait
push
jle
out
into
iret
cmpsl
add
xchg
cmpsl
xor
jge
sub
cmp
xchg
push
bound
or
shrb
sahf
lahf
loope
xor
pop
sub
push
scas
rcrl
mov
lret
xchg
daa
fisubrs
es
lods
scas
mov
out
jg
pushl
ss
mov
js
testb
out
cmp
subl
or
mov
mov
mov
cmp
fsubrl
rcrl
pop
or
aad
imul
int
pushf
je
fst
cmc
or
stos
fistpl
mov
xor
jno
bound
cltd
or
and
add
cld
or
add
sub
leave
scas
xchg
stos
ljmp
cmp
mov
lret
xchg
jo
rcrb
aam
xor
leave
mov
ljmp
mov
cs
and
test
dec
xor
fsubs
jp
shl
mov
ffreep
fmulp
iret
ds
loopne
adc
push
in
cmp
xor
adc
pushf
mov
int
sbb
xchg
in
xor
in
jl
or
xchg
push
cltd
mov
add
fwait
movsb
adc
mov
js
xor
stc
js
shlb
loope
fmuls
out
add
and
frstor
outsb
add
pop
ss
ljmp
push
inc
mov
xor
mov
jmp
data16
imul
sub
inc
dec
pop
dec
test
mov
je
inc
and
pop
sub
mov
les
es
mov
repz
sub
mov
test
push
inc
fimuls
or
movsb
int3
push
adc
jl
clc
dec
js
dec
out
cmp
movsl
stos
jp
pop
adc
lods
sahf
cs
mov
push
ret
jle
and
push
pop
jp
js
fldenv
sbb
dec
xchg
add
mov
jo
sti
mov
test
mov
jae
add
push
mov
jbe
pop
leave
xor
cwtl
stos
imul
aas
jp
or
std
push
push
outsb
js
insl
lods
out
inc
or
or
xor
mov
andb
cmpsb
sahf
daa
pop
mov
or
adcl
nop
fscale
mov
pushf
fstpl
sbb
fmulp
adc
js
test
dec
jbe
mov
hlt
jb
lea
lods
mov
mov
xchg
int3
pop
dec
int
jl
sub
sub
out
xor
aad
push
movsl
in
or
mov
jo
push
lods
adc
push
out
sti
stc
fisttpl
mov
insl
xchg
pop
cmp
gs
stos
mov
xlat
sub
lods
pop
shll
iret
mov
push
ds
jp
imul
mov
dec
fs
jns
fdivrl
cmp
add
jnp
mov
inc
and
xor
xor
aam
dec
in
fimull
shlb
enter
sbb
and
stc
sbbb
ficoms
cmc
fwait
mov
insl
repnz
repz
insb
mov
or
out
xchg
ret
or
insl
test
mov
and
adc
mov
mov
xchg
push
mov
adc
cmp
pop
cmpsl
leave
push
adc
fldl
adc
pop
ds
dec
push
sub
add
add
xlat
pop
stc
cld
push
sbb
jnp
pop
jecxz
outsl
movsb
jle
xor
dec
dec
xor
pop
xchg
add
and
lahf
sbb
add
lea
stos
data16
cmp
mov
cld
mov
shlb
mov
pop
xchg
stos
sti
in
mov
xchg
cmp
das
outsb
cld
xor
add
test
dec
jmp
fcmovnb
outsl
xchg
adc
mov
cmpsb
addr16
pop
pop
adc
mov
mov
push
dec
test
jns
mov
ret
dec
bound
push
subl
rcl
pop
cmpsl
mov
inc
cmp
sub
mov
dec
shrb
loope
repnz
in
test
sbbb
xchg
push
push
in
in
xchg
je
mov
adc
jns
sbb
sbb
and
cli
es
sbb
cld
adc
repz
test
insl
dec
insb
fists
ja
mov
pop
jmp
mov
mov
sub
cwtl
xchg
mov
dec
imul
mov
and
sti
mov
mov
fcmovne
push
push
aas
aaa
xchg
bound
sbb
jno
outsl
pop
jmp
sbb
mov
rcl
and
movsl
insb
bnd
xchg
mov
sub
mov
les
and
lea
push
jno
pop
std
adc
adc
and
in
cwtl
loope
cmp
sbb
scas
fadds
rcr
sti
fbld
lcall
xchg
mov
fldcw
ljmp
pushf
adc
adc
jae
mov
and
mov
cld
add
mov
outsb
sub
xchg
pop
rcr
jnp
or
loopne
mov
jmp
ss
push
subl
cmc
out
test
bound
inc
into
cmpsb
xchg
hlt
out
std
jbe
das
push
ficoml
lcall
inc
rclb
push
xchg
fcmovne
and
pop
int3
out
cld
push
arpl
mov
sub
notl
dec
int
clc
fst
outsb
and
lods
inc
ss
sbb
fldenv
mov
stos
pop
mov
arpl
ret
int
mov
jb
repz
andl
sub
adc
xchg
std
pop
test
add
in
test
pop
mov
and
ds
lret
pop
call
lods
mov
out
jg
cltd
mov
out
or
or
dec
sub
jl
int
lock
js
int
pop
pop
imul
leave
jecxz
imull
insl
pop
bound
icebp
ljmp
mov
cmpsl
shlb
push
pusha
cwtl
xchg
fsubs
pop
subb
aad
pop
xchg
divl
test
add
imul
mov
push
popf
push
mov
adc
and
popa
xor
mov
xchg
rorb
bound
push
out
mov
sub
test
xchg
ficoml
nop
dec
mov
adc
or
lret
loope
pop
mov
xorl
dec
sub
insl
jecxz
mov
jno
adc
xchg
bound
inc
dec
jp
dec
addb
addr16
sub
or
daa
sub
jne
sbb
push
or
xchg
aaa
adc
loop
int
ret
push
jae
adc
xor
sbbl
popf
mov
ret
sahf
pop
pop
push
data16
out
inc
test
pop
cmpsb
add
hlt
mov
mov
jnp
push
push
aad
mov
dec
push
aam
dec
test
movsl
xchg
mov
and
test
enter
das
adc
push
cmp
cwtl
pop
sub
mov
sbb
pop
xchg
jecxz
xor
push
sbb
jecxz
nop
or
pop
negl
mov
cmp
pushf
mov
rcrb
xor
push
jnp
lock
les
ja
es
test
mov
sbb
fldt
aaa
shll
sub
sbb
test
push
mov
lahf
loope
mov
gs
sti
popa
in
filds
mov
jo
pushf
imulb
add
mov
sbb
lock
leave
adc
mov
xor
dec
bound
pop
pop
xchg
sbb
push
out
xchg
int3
std
inc
neg
mov
negb
add
fdivrl
stc
repz
clc
orb
push
xor
pop
add
lods
and
ret
mov
and
aas
es
sahf
jo
xchg
push
cmp
iret
lods
std
lahf
std
sub
xchg
iret
in
imul
jge
push
rorb
in
lea
push
std
pop
addl
jge
push
idivb
pushf
and
or
jne
les
fimull
fstpt
adc
subl
lahf
mov
daa
roll
mov
testl
or
and
sub
sbb
cltd
outsb
pop
xchg
mov
mov
lcall
inc
or
mov
sub
std
stc
xchg
cmpsb
pop
inc
or
xchg
jno
fisubrs
or
inc
adc
int
insl
mov
mov
out
cwtl
daa
or
jnp
xchg
cwtl
push
sbb
in
jg
jbe
mov
mov
cmp
mov
lods
ljmp
push
js
fwait
xor
add
sbb
dec
fdivrl
or
xchg
xchg
mov
xor
fs
fs
movsb
pop
aad
ret
xchg
cmp
jp
push
xlat
aam
popa
ljmp
add
test
fucomip
movsl
xor
mov
mov
fwait
jle
pusha
push
adc
in
mov
out
rcll
pop
xor
jb
mov
xchg
push
inc
rorl
ds
xchg
pop
cmc
in
sbb
imul
insl
ja
icebp
and
mov
xor
cli
pop
enter
sar
sbb
xor
sbb
aas
and
dec
mov
arpl
orl
inc
aas
xor
cli
inc
xchg
adc
inc
inc
das
pusha
stos
mov
inc
mov
lock
popf
shrl
mov
aam
add
adc
lret
or
sub
lds
xchg
push
scas
insb
mov
and
pusha
cmp
mov
xlat
dec
xor
adc
push
sbb
inc
mov
fmul
jo
ds
push
sbb
ror
xor
addl
add
test
movsb
addl
jp
repnz
jae
aaa
movb
add
sbb
in
jb
rcll
outsb
sub
out
and
fwait
sub
in
in
sub
fldl
mov
fnsave
xor
dec
sbb
cwtl
stos
jmp
xor
ret
jl
and
fiaddl
cmp
xchg
subl
rcr
movsl
dec
xor
adc
idivl
xor
jbe
mov
idiv
jo
adc
cwtl
xchg
mov
fdivrl
sbb
pusha
and
jno
sub
jns
paddb
cmpl
xchg
dec
xchg
add
inc
mov
xor
sarl
xor
add
mov
scas
pop
std
pop
aad
and
push
and
fsts
cmpsl
jb
pop
sub
jnp
popf
jl
adc
int3
arpl
push
push
push
mov
sub
xchg
jae
test
stc
sbb
leave
add
inc
les
in
inc
das
insl
stos
jg
lret
push
mov
scas
push
hlt
fcmovu
inc
cmc
push
lret
stc
jge
lock
fildl
into
lods
sub
aam
pop
mov
mov
inc
sahf
dec
or
arpl
fldenv
adc
pop
imul
stos
inc
pop
fistpll
sarb
sti
mov
inc
mov
lods
mov
aam
mov
repnz
scas
lret
les
push
mov
cmp
testb
sbb
mov
or
adc
push
xchg
sbbb
jne
or
aaa
or
jl
lods
lahf
pop
inc
mov
fimull
cmc
sti
xor
bound
loope
std
mov
jnp
dec
cmc
out
push
jp
sbb
stos
inc
adc
xor
loopne
xor
ret
arpl
imul
mov
mov
xchg
push
cmp
jle
jmp
jecxz
lea
pop
dec
bound
or
adc
xor
hlt
insb
add
dec
aaa
sbb
xchg
xor
push
xor
cmp
inc
add
sbbb
cmpps
je
mov
push
fisttpll
addb
push
insl
sub
std
cs
jge
movsb
hlt
dec
sbb
adc
dec
mov
in
mov
mov
cmp
repz
xorl
rcrl
adc
aad
xchg
sbb
mov
xchg
out
dec
ljmp
mov
push
mov
jne
jno
in
sbb
test
jns
add
loop
pop
push
sbb
cmp
mov
cmpl
jb
cli
decb
mov
pusha
call
jge
cmp
subb
push
loop
testb
push
les
imul
lds
incl
lock
cmpsl
cld
movsl
movsb
enter
fadds
lods
jae
jnp
jle
cmpb
stc
icebp
cltd
out
or
push
aaa
dec
sti
or
shl
inc
push
mov
pop
add
popf
and
enter
loop
icebp
out
fxch
jmp
stos
push
dec
sbb
fwait
lahf
sbb
lock
and
add
xchg
js
sbb
xchg
shrb
cmp
int
mov
testl
sbb
xor
fcompl
aad
and
xor
sbb
pop
into
pop
pushf
data16
mull
es
pop
push
aam
lahf
lock
mov
inc
mov
cli
leave
das
nop
arpl
xor
loopne
fisttps
adc
jp
sub
popa
cmp
shll
and
dec
cmp
and
dec
xor
fsub
addb
outsl
loope
add
movsb
cmp
dec
mov
out
push
sub
mov
or
outsb
fcoml
popa
adc
lds
xchg
subl
cmp
in
jnp
imul
xchg
sti
stos
adc
pop
out
push
jbe
fcomps
mov
mov
outsb
sbb
xchg
jne
push
mov
cltd
mov
or
add
icebp
daa
jmp
clc
or
iret
sub
mov
aas
mov
xchg
notb
pop
loopne
ret
cwtl
or
jle
and
pop
push
cmp
mov
push
or
cmpsb
or
mov
mov
push
add
and
mov
add
movsb
jmp
in
hlt
push
or
mov
cmp
cmp
adc
mov
in
mov
dec
adc
inc
into
lret
and
fisubs
ret
and
mov
bound
insl
push
xchg
nop
or
inc
mov
pop
cmp
bound
jle
jecxz
sub
jne
dec
xchg
outsl
imull
sar
stc
lea
enter
push
dec
out
mov
insb
mov
jge
cli
addr16
mov
adc
xor
lock
imul
test
cmpl
cs
sub
cmp
push
out
int3
mov
mov
push
cld
mov
movsl
iret
jg
aad
cmp
mov
inc
cmp
mov
push
cld
mov
aaa
dec
loopne
ljmp
jmp
mov
xchg
ret
rcrl
addr16
sbb
lret
xchg
mov
xchg
outsl
nop
cltd
loope
push
sub
and
xchg
jno
jp
std
stc
xor
inc
jb
insl
sub
or
lods
xor
dec
adc
sbb
push
xlat
cmp
out
add
rcr
stos
insb
jle
mov
insb
jbe
stos
neg
add
sub
test
mov
sbb
sarl
mov
hlt
pop
test
sti
jns
xchg
lods
jmp
frstor
cmp
das
mov
mov
idivl
stos
push
sahf
xchg
and
in
cmp
loop
sub
test
xor
or
data16
vzeroupper
dec
pop
or
dec
mov
imul
imul
mov
dec
mov
jmp
xchg
adc
mov
cmp
pop
repz
inc
ret
bnd
loopne
inc
jnp
xchg
imul
adc
cmc
mov
and
push
fsubr
mov
sbbl
popa
xor
test
mov
adc
jb
stc
xchg
cmpsb
xchg
imul
inc
std
and
push
or
daa
push
jecxz
lock
xor
sub
add
mov
dec
jo
es
cli
push
test
mov
in
pop
lea
pushf
dec
stc
cmp
aas
cmp
and
sbb
lea
lock
in
nop
dec
jne
or
xchg
es
aam
mov
bound
bound
jl
icebp
mov
sbb
jl
adc
push
fdivrs
adc
push
jb
mov
mov
xchg
xorb
fbstp
icebp
mov
sub
stos
xchg
add
jmp
lret
aas
adc
inc
aaa
std
and
mov
xor
loopne
jb
mov
inc
xor
insb
pop
inc
mov
out
push
or
in
dec
adc
imulb
imull
mov
inc
cmp
push
xor
adc
xchg
popf
sahf
inc
cmpsl
in
cld
scas
push
je
stc
out
push
mov
fsubrs
mov
push
inc
dec
sub
test
mov
mov
and
fwait
mov
xchg
add
int
sbb
cmp
daa
ss
add
fnstcw
in
cmp
mov
jmp
or
ret
xchg
add
out
xchg
lods
and
mov
cmp
adc
sahf
shll
or
mov
mov
cmpsl
dec
cmp
push
sub
mov
gs
imul
inc
aam
xor
out
js
push
jo
cmp
enter
lods
dec
mov
jb
add
mov
pop
orl
xor
out
aaa
leave
dec
addb
fcmovnu
rclb
dec
mov
jp
outsl
mov
shl
adc
and
in
clc
fnstcw
cs
in
out
sarl
leave
sbb
or
les
or
jl
bnd
jno
adc
cmp
mov
stos
xor
inc
stos
cmp
sub
call
ret
push
jno
jg
loop
push
sub
sbb
test
dec
pop
fisubs
in
adc
xor
cs
insl
jecxz
pop
fistps
pop
mov
loopne
xor
xchg
xchg
or
subb
and
insb
leave
mov
cli
mov
lods
mov
lds
push
xchg
add
mov
and
test
cmpsl
xchg
xor
mov
xchg
pop
loope
push
push
xor
inc
scas
xchg
imul
subl
xor
mov
cld
aam
xchg
jg
mov
mov
movsl
jo
jge
and
lahf
insl
push
cltd
inc
lahf
lds
jp
or
call
mov
lock
sbb
inc
dec
es
shll
sub
jecxz
mov
fisubrl
pop
test
rcrl
dec
testl
test
inc
or
popf
adc
jb
pop
push
imul
imul
mov
cld
aas
inc
add
and
sbb
inc
daa
mov
push
loop
dec
push
jmp
push
sub
fucomp
inc
xchg
movsl
into
cmp
inc
lret
lret
mov
add
xor
cmpsl
aas
enter
mov
sahf
in
pushf
xchg
sub
sbb
das
inc
les
mov
cltd
sub
sub
mov
fnsave
lret
sarl
jo
aaa
into
test
push
dec
mov
scas
add
js
sub
dec
outsl
psadbw
xor
ret
pop
fisubrs
add
inc
jp
jne
movsl
or
inc
dec
ja
stos
adc
lret
push
mov
jbe
and
fwait
and
mov
test
imul
push
sti
dec
push
inc
inc
ficoml
scas
jbe
std
out
push
fmul
mov
and
idivl
xchg
or
jle
pop
inc
xor
repnz
les
mov
mov
push
dec
int
cmp
mov
or
paddsw
mov
mov
mov
out
xchg
out
mov
jl
mov
mov
call
push
fisubs
pop
push
xchg
cmp
int3
jge
repz
jg
adc
adc
ret
test
cmc
lods
test
push
or
stc
cltd
stos
jae
add
jl
mov
ret
mov
xor
enter
data16
xor
fdivr
sbb
sbb
outsb
xor
pop
mov
jge
mov
in
rorb
into
or
xchg
loop
popa
jl
adc
aad
jb
mov
cmpsb
lcall
stos
insl
bound
inc
xor
or
orb
push
pop
les
and
adc
pop
lret
arpl
xlat
xchg
clc
jb
inc
push
cmp
jne
pop
adc
push
insl
inc
adc
nop
jb
push
ds
mov
jnp
in
lcall
push
push
xchg
jbe
xor
xchg
xchg
out
mov
xor
pop
push
scas
clc
adc
xchg
cli
nop
enter
xor
push
xor
sahf
iret
xchg
push
or
cld
adc
out
mov
hlt
int
bound
inc
addr16
dec
pop
push
push
dec
add
insl
sub
in
rcll
jge
or
xor
lcall
sbb
sarb
ret
insl
addr16
rcll
cmc
add
cmp
push
mov
sub
aam
and
add
mov
sti
lret
nop
cmp
out
or
adc
movsl
cmp
add
nop
popa
jae
scas
add
push
ds
scas
xchg
mov
cltd
pop
fwait
and
fwait
mov
in
jnp
push
cmpsb
or
adc
adc
in
ds
mov
mov
jecxz
push
aad
loop
outsl
stc
mov
sbbb
mov
sbb
jns
xor
movsl
pop
dec
ror
lods
arpl
mov
xlat
mov
xor
inc
and
pop
aaa
sub
dec
cs
xchg
fs
fildll
xchg
mov
cmp
aad
xchg
sbb
movsl
push
dec
cmpb
xlat
aas
mov
dec
shrl
insb
rcr
dec
in
stos
xor
call
repz
sahf
jo
fwait
dec
clc
aam
imul
inc
cltd
into
push
mov
sti
cli
push
std
mov
cs
sysret
xchg
mov
cmp
pop
inc
dec
xchg
inc
mov
push
and
mov
fs
pusha
repz
sbb
pushf
fildl
cld
xchg
aam
cwtl
sub
dec
mov
addr16
cmpsl
dec
lods
arpl
and
ret
adc
sub
xor
push
test
sub
mov
aas
leave
test
xchg
shrb
xchg
mov
or
jb
lods
nop
add
adc
in
aam
sbb
add
insb
adc
imul
push
sbb
lahf
insb
push
lock
cmp
sub
adc
xor
mov
cli
out
movsb
stc
lcall
idivl
push
push
stos
inc
jae
clc
fcmovne
fisubs
jmp
clc
inc
mov
mov
shr
call
imul
aas
insb
and
sbb
mov
scas
xchg
push
add
dec
daa
push
jbe
inc
ret
mov
push
sub
fimuls
mov
lahf
cmp
fs
pop
sbb
inc
rorb
mov
adc
dec
and
inc
hlt
lea
pusha
fidivrl
xchg
cs
and
xchg
dec
aad
mov
fisttpll
fs
jns
in
pop
and
test
sub
popa
adc
fdivrs
leave
pop
mov
mov
scas
lahf
cmp
shlb
addb
pop
lea
arpl
repz
push
sub
mov
in
lcall
call
xchg
pop
push
mov
pop
loopne
jle
dec
mov
fwait
pop
mov
gs
push
js
xchg
mov
popf
cmp
nop
out
gs
mov
sub
inc
adc
ret
xor
decb
outsb
mov
or
cmp
xor
ret
jnp
gs
loopne
pushf
test
addb
inc
sbb
enter
lock
into
aas
mov
sahf
xchg
ja
nop
fwait
inc
xor
les
popf
mov
insl
add
mov
loop
add
lds
popf
jb
bswap
push
orb
and
es
and
test
ficompl
xor
pop
mov
cld
jl
ret
push
jmp
cli
mov
rcrb
clc
inc
or
dec
sbb
rorb
push
xchg
shl
inc
xchg
bound
jge
pop
pop
fildll
xor
add
mov
outsb
dec
dec
cmp
outsl
adc
rcrb
xor
cwtl
xor
and
pop
pushf
ficompl
xlat
mov
pusha
xchg
adc
mov
lea
pop
add
inc
scas
push
xchg
mov
dec
in
daa
adc
mov
aas
rclb
push
scas
insb
aas
lret
out
push
insl
fdivr
add
cs
mov
fstpl
push
ss
aam
pushf
push
xlat
imul
sub
fmul
pop
hlt
or
push
sbb
fsubrl
dec
mull
lret
sub
mov
stc
out
out
cmp
mov
push
sub
out
push
mov
jnp
test
int
xor
adc
mov
ljmp
pop
mov
xchg
inc
sbb
fiadds
sub
mov
mov
rcrl
cmc
xchg
pop
xor
cmp
pop
outsb
adc
jbe
adc
stc
fwait
xchg
leave
mov
cmc
lahf
pop
dec
sbb
test
add
lahf
sub
add
je
xor
mov
pop
or
mov
mov
sbb
jl
adc
adc
test
hlt
jb
dec
sbbb
mov
cmc
inc
mov
add
xor
sub
sbb
xchg
rolb
adc
stos
and
hlt
outsl
mov
mov
repz
scas
fcomp
fmuls
xchg
sub
into
je
pop
jle
into
int3
sub
mov
outsb
mov
ficoml
movsb
sub
and
ljmp
push
loope
xor
hlt
or
sub
out
dec
lds
aas
fldl
xor
push
push
cwtl
sub
clc
rcll
xchg
or
inc
cs
gs
xor
hlt
leave
data16
lock
stos
cmp
push
or
in
aam
sub
not
ljmp
pop
dec
xchg
xor
dec
movsb
add
dec
dec
inc
add
push
inc
sbb
fnstsw
lahf
pop
xchg
jle
lock
lahf
mov
jo
jae
cmp
pop
lds
inc
inc
mov
idivb
push
inc
addb
jle
sub
mov
ficompl
cld
sbb
mov
lcall
push
subb
mov
mov
pop
xor
cmp
loopne
pop
push
lods
andb
pop
out
popa
loope
xlat
pop
ljmp
mov
pop
sbb
and
cmp
enter
mov
xchg
ret
mov
adc
inc
rorb
dec
insl
xchg
arpl
push
push
xchg
int
ret
push
xchg
fisttps
mov
push
bound
call
mov
pop
jnp
and
xchg
dec
jbe
jns
dec
cmp
mov
aas
bound
push
mov
in
push
andb
adc
outsl
adc
out
mov
imul
in
jecxz
add
in
mov
sbb
loop
test
or
aaa
es
scas
xchg
aaa
cmp
dec
lock
mov
aad
cmc
daa
sub
arpl
ret
fdiv
das
add
je
mov
mov
mov
add
push
into
das
popf
inc
test
inc
mov
loope
inc
outsb
push
or
xor
mov
and
loop
ret
mov
cmc
fadd
sbb
dec
daa
sbb
dec
daa
mov
jecxz
call
out
mov
outsb
cmp
icebp
push
mov
push
enter
subl
icebp
xor
aaa
adc
mov
pop
pop
mov
mov
scas
iret
clc
insl
or
pop
cli
add
insb
popa
imull
je
pop
nop/reserved
inc
aam
movsb
sub
mov
mov
jns
cmp
or
vpunpckhqdq
jp
test
pop
inc
into
out
cli
push
pop
data16
mov
js
pop
and
add
pop
test
pop
inc
into
inc
sbbl
scas
jg
cli
cmp
sti
jbe
mul
or
cmp
testb
push
xchg
in
mov
movsl
pop
aam
and
aas
and
into
dec
cmp
dec
and
sarb
jg
lahf
dec
sbb
fsts
les
lea
sub
in
inc
shrl
pop
mov
mov
ret
fistpll
scas
jmp
dec
hlt
pop
jge
ds
jbe
test
inc
out
sti
xchg
adc
mov
ds
leave
and
sub
mov
mov
ljmp
add
fadd
mov
test
aad
clc
dec
in
fwait
jno,pn
insl
and
sbb
mov
cmp
mov
xor
out
adc
loop
scas
out
dec
mov
pop
ja
pop
or
xchg
dec
stos
cmpsb
jbe
sub
cmpl
jns
cmpsl
hlt
cmp
jbe
mov
xor
fwait
cli
lret
subl
mov
cld
jmp
sbb
lret
std
jne
xor
mov
mov
frstor
sub
xchg
fmulp
fsubl
test
fldcw
aaa
imul
fcos
inc
mov
ss
in
cli
dec
shr
aam
pop
mov
push
cltd
sub
mov
enter
sub
fisttpll
xor
icebp
inc
inc
adcb
xchg
dec
gs
jecxz
pop
movl
and
cli
aad
out
aaa
inc
jecxz
mov
mov
inc
push
mov
fs
loope
push
imul
xchg
xchg
sbb
in
adc
scas
adc
lods
vunpckhps
mov
in
sbbb
mov
push
lock
daa
pop
jmp
push
mov
out
pop
push
xchg
sahf
daa
in
lahf
pushf
sub
addr16
push
sbb
inc
push
cmp
loop
push
enter
stos
xchg
xor
shlb
jns
xor
lods
mov
imul
push
dec
lock
aaa
xor
jmp
popf
jo
xor
cmpsl
xor
fcmovne
and
cmp
push
icebp
leave
push
jmp
int
rorb
pop
pusha
not
dec
xchg
jnp
repz
out
push
mov
gs
std
push
add
roll
nop
jae
cmpsl
sti
jmp
incb
test
addr16
fld
bnd
push
loopne
cltd
dec
sub
ss
sub
lea
inc
push
inc
cmp
mov
jg
insb
push
cmp
outsb
mov
jno
push
push
pxor
xor
xlat
inc
scas
add
xchg
divb
inc
or
js
push
adc
into
insb
mov
lret
int
movsb
jo
cli
int
imul
bound
ficoms
or
fs
add
lds
enter
inc
fmull
lds
outsl
mov
repz
jnp
inc
sbb
mov
dec
imul
jbe
sbbl
sar
stc
repz
gs
test
mov
inc
sub
mov
sub
pop
pusha
push
ror
mov
lahf
outsb
inc
adc
push
jl
test
pop
insl
fdivp
cmpb
jmp
test
test
and
jns
mov
xchg
mov
inc
sbb
push
add
mov
mov
aam
scas
push
mov
scas
int
sbb
and
add
idivl
das
fadds
sub
es
outsl
and
xor
jmp
add
or
mov
and
cmpsb
push
aam
cwtl
push
and
gs
and
enter
fdivs
dec
scas
jl
rcrb
clc
or
es
daa
xor
jb
or
mov
dec
xlat
aam
sbb
sub
add
scas
jae
call
dec
arpl
mov
inc
enter
lods
push
in
jnp
adc
mov
lret
addr16
in
sbb
mov
sub
jp
lea
jp
push
sarl
dec
notb
ret
cltd
lret
xchg
sarl
push
mov
addr16
or
insb
hlt
je
insl
add
xchg
mov
adc
fiaddl
rcrb
lahf
ja
inc
or
or
cmp
out
lods
aam
push
loopne
scas
loope
pop
pop
imul
xchg
jmp
mov
mov
or
nop
popa
imul
aaa
loopne
mov
negb
sti
cli
jecxz
lock
insl
in
ret
cmpsl
mov
pop
je
test
std
cmc
mov
cmpsl
inc
daa
sbb
mov
fimuls
data16
push
add
xor
xor
xor
jne
std
punpckhdq
push
pop
divb
pop
inc
jl
pop
imul
push
and
clc
call
mov
stos
xchg
xorl
outsl
outsl
scas
jbe
push
repz
xor
cwtl
cmp
jp
sub
ret
add
xchg
jmp
and
leave
lcall
mov
inc
adc
jns
loope
sub
push
in
dec
jle
in
cmp
in
inc
ss
or
push
sub
sub
push
lahf
mov
and
xor
adc
stos
inc
push
pop
inc
mov
jge
sbb
inc
rcr
icebp
rclb
add
mulb
notl
dec
push
mov
mov
cmpsb
sbb
or
in
sub
lods
mov
movsl
cmp
pushf
jmp
fcomp
std
sbb
loop
ljmp
jnp
push
dec
cs
add
popa
xchg
sti
shrl
lds
mov
sbb
sub
fsubp
ret
mov
pop
mov
push
mov
fdivrs
stc
inc
scas
aaa
push
bound
pop
jmp
push
lcall
orb
rorb
fldt
jge
dec
pop
in
mov
mov
test
int3
stc
aas
pop
aaa
sti
add
fldenv
call
jns
dec
sub
in
inc
ss
add
sbb
or
sahf
aad
xor
or
jb
inc
dec
jnp
and
daa
or
fldt
bound
push
pop
push
call
sub
pusha
arpl
loope
std
mov
sahf
dec
mov
sbb
push
imul
imul
push
xor
inc
dec
adcl
jle
shl
lock
cmpl
xor
jecxz
mov
adc
push
call
vpmuludq
stc
test
dec
sub
movsb
out
insb
dec
inc
aad
ljmp
pop
and
add
aad
test
inc
call
stos
sarb
xor
sub
gs
mov
sub
adc
sbb
adc
lds
add
in
jo
stos
imul
iret
jne
insl
sub
sub
push
lahf
or
push
push
lret
test
pop
orb
fidivs
push
lods
int
outsb
scas
imul
xor
test
xorb
xchg
jne
outsl
repnz
out
arpl
mov
dec
push
inc
ss
mov
fsubr
and
cmp
xor
push
jp
xchg
call
add
fs
pop
stos
mov
jecxz
nop
sub
dec
cmp
jg
mov
push
jg
ja
scas
pop
and
sub
xchg
inc
test
aam
push
xchg
cmpsl
arpl
push
in
push
xchg
dec
fidivrl
push
sbb
cld
rcll
fcmovu
xor
shlb
mov
int
jb
jg
sbb
aaa
jp
adc
cmpsb
sbb
imull
pop
clc
stc
sbb
xor
jo
mov
cmpsl
inc
pop
dec
push
clc
pop
out
and
outsl
sub
push
mov
push
mov
cmp
push
es
pop
lret
adc
mov
push
outsb
loop
ljmp
dec
stos
add
cwtl
inc
and
js
xor
leave
setb
push
fsubrp
iret
xor
cmp
xlat
mov
inc
xor
insb
sti
or
add
push
cs
pop
ds
test
ret
dec
cmp
cltd
lea
jmp
aad
dec
pushf
or
sbb
or
cmpsl
push
xchg
arpl
mov
outsb
and
popf
xor
outsb
jle
stc
xchg
sub
or
test
push
scas
bound
mov
cmp
inc
test
iret
cmp
push
movsb
popa
add
and
mov
fisubs
test
and
stc
cmp
frstor
shll
nop
out
cmp
mov
fwait
subl
xchg
sub
mov
pop
xchg
stos
fnstenv
mov
fistpll
icebp
hlt
sub
in
cld
lea
jmp
jle
mov
pop
dec
mov
ret
movsw
fbld
lret
inc
or
sub
jo
xchg
mov
adcb
shl
inc
rcrb
mov
mov
roll
dec
mov
adc
lahf
and
fildl
roll
ret
jp
es
sbb
repz
jbe
jbe
clc
mov
sbb
sbb
ret
call
xchg
cmp
mov
mov
jle
int
pop
xchg
inc
test
lea
shl
aaa
in
jb
imull
add
loope
dec
jl
lock
xchg
cltd
out
xchg
nop
pop
and
mov
in
mov
and
mov
lods
sti
mov
enter
lret
add
outsl
gs
push
ja
push
adc
popa
shlb
xchg
and
into
dec
adc
das
sarl
insb
jns
aad
add
jo
sti
adc
inc
jecxz
cmp
test
jle
pop
rcrb
xchg
mov
subb
enter
lock
cld
sub
cli
ljmp
mov
or
sub
cmpsb
fwait
cmp
xor
xor
or
int
cmc
adc
inc
push
cld
mov
out
in
imul
and
nop
movsl
je
inc
jno
xchg
mov
ret
jno
mov
jns
sbb
and
cmp
inc
sar
sbb
insb
inc
or
and
jle
mov
jle
inc
fisubrs
jae
pop
enter
fiadds
mov
pop
test
cmpsb
stos
mov
fldl
stos
dec
add
fstps
sub
sbb
cmp
fldt
xchg
clc
icebp
psraw
and
jle
pop
arpl
pop
arpl
adc
jnp
dec
sub
leave
pushf
xchg
cmp
add
jp
dec
jg
lcall
mov
jb
inc
cli
xor
loopne
sub
jae
imul
jmp
xchg
repnz
popf
rcrl
popa
cmp
xor
rorb
pop
fnstenv
cmp
das
nop
dec
jno
push
mov
or
sub
sbb
cld
rcll
lret
hlt
push
repnz
xrelease
add
paddsb
out
aaa
cmpsb
jecxz
movsl
in
jg
shrb
imul
dec
repz
dec
int3
pop
xchg
rcrb
jb
push
imul
mov
aad
imull
int3
stc
inc
xor
sahf
pop
stos
mov
or
addr16
mov
test
in
dec
mov
cmc
pushf
add
sbb
inc
xchg
insb
sub
std
jbe
pop
xchg
fildl
jl
arpl
repnz
loop
add
mov
mov
xor
mov
lea
jmp
enter
xor
out
les
xchg
dec
pop
ficoml
pop
shll
jb
cld
popa
dec
cmpsb
dec
push
insb
mov
pop
add
pop
ret
into
ficomps
cld
loop
mov
xchg
push
test
push
outsl
test
adc
sub
pop
movsl
dec
ret
cwtl
lret
push
je
movsl
adc
lds
nop
add
fisttps
stos
in
jae
in
testl
mov
sbb
cmpsl
imul
ss
pop
repnz
sahf
xchg
lret
mov
xchg
clc
mov
int3
sub
lcall
adc
dec
into
xchg
and
sbb
lret
sub
ficomps
fdivr
sbb
push
andb
scas
push
fs
clc
xchg
loop
dec
mov
xorl
xchg
xchg
lahf
idivl
cwtl
enter
popa
test
adc
jle
or
pop
loope
loop
sbb
in
xchg
in
cmp
pop
mov
push
jb
pop
fisttpl
sbb
pop
jne
add
in
pop
mov
test
repz
repz
jno
popa
inc
imul
fdivs
jbe
shll
test
mov
xchg
push
mov
or
rclb
iret
add
shll
push
sbb
addl
or
jl,pt
fdiv
and
ret
outsl
imul
adc
lods
iret
mov
imul
cmp
test
dec
mov
sub
ljmp
dec
xchg
out
push
fldenv
in
out
add
jnp
mov
mov
inc
pop
jmp
sub
mov
cltd
mov
mov
test
rolb
add
push
loope
xor
xchg
mov
inc
xchg
ja
push
insl
pusha
sbb
sarb
cmc
xor
pop
lret
xor
adc
jbe
pop
cwtl
adc
dec
pop
push
push
pop
or
mov
test
testl
push
xor
je
mov
das
aam
pop
cmp
jmp
int3
add
mov
mov
out
test
fcoml
call
out
imulb
inc
idivb
les
mov
mov
in
pop
sbb
pop
dec
ljmp
clc
call
repz
dec
stos
jbe
fcmovbe
aam
cwtl
push
or
sbb
insl
in
aas
and
std
std
outsl
sbb
mov
imul
loope
mov
jg
mov
das
stos
scas
lock
inc
gs
inc
or
mov
dec
lods
xlat
and
in
loopne
inc
nop
cmp
repz
push
xchg
inc
lret
fldenv
push
add
scas
xor
and
rol
adc
enter
enter
mov
mov
inc
call
and
sub
inc
sbb
push
test
and
jg
mov
adc
test
sarb
addr16
push
in
mov
cmp
in
mov
push
push
iret
test
jno
lods
mov
out
jp
das
sbb
mov
pop
push
sahf
mov
je
inc
ja
cmp
lret
xlat
pop
pop
insb
ftst
fxtract
cmp
insb
xor
cmp
cmp
fdivrs
adc
lods
inc
mov
sbb
test
pop
pop
inc
fwait
sarl
shl
fbld
lcall
ret
and
mov
push
inc
push
pop
cmp
sbb
movsl
mov
sub
dec
loop
inc
push
jae
mov
add
out
scas
aam
add
lret
jne
sbb
test
repnz
insb
mov
icebp
xchg
mov
cmp
fildl
pop
out
pop
out
sub
jg
or
mov
mov
or
dec
aad
pop
cmp
mov
pop
cld
mov
scas
mov
dec
fiaddl
call
mov
mov
cwtl
sub
xchg
into
ljmp
cmpsl
jmp
pop
sbb
test
dec
mov
adc
xchg
shl
adc
push
mov
pushf
jns
int3
mov
mov
inc
xchg
add
dec
in
mov
jecxz
fistl
mov
fimuls
pop
arpl
loope
xor
mov
jl
adc
cmp
push
push
pop
cs
cs
cmc
jne
testl
jmp
jae
stos
shrl
pop
imul
fcmovnu
aaa
push
bound
cwtl
lret
test
and
mov
or
std
mov
in
leave
imul
lret
mov
jle
in
sub
push
gs
out
push
inc
cld
pop
push
imul
xchg
pop
push
push
iret
xor
loopne
movl
popw
mov
pop
fwait
ret
jmp
mov
loope
sahf
xchg
leave
xor
or
aaa
cli
inc
push
inc
mov
out
pop
test
or
inc
movsl
sub
xor
stos
add
popf
fimull
cwtl
pop
sahf
push
add
in
mov
div
nop
cli
data16
sbbl
sub
and
or
xchg
jns
sub
xchg
push
push
jne
in
addr16
sbb
cmp
movsl
loop
repnz
sub
pushf
mov
scas
insl
mov
aaa
pusha
sti
notb
or
or
fwait
or
test
push
sbb
pop
fisubs
jne
test
loop
push
mov
dec
lret
jg
call
mov
mov
adc
xor
mov
aad
or
nop
jl
mov
xor
aas
into
mov
push
sub
inc
jmp
sti
ds
or
mov
adc
pop
and
in
mov
mov
add
dec
je
dec
sbb
jp
out
jge
in
or
stos
and
loop
ret
sbb
shrl
push
daa
fisttps
fstpt
mov
mov
mov
jle
and
movb
push
cmp
imul
std
push
loopne
add
mov
aad
mov
add
push
pop
cmp
adcb
and
xor
jl
hlt
mov
jp
pop
scas
inc
pop
xchg
insl
popf
leave
sbb
mov
insb
sub
jmp
push
mov
mov
or
aam
adc
pop
ret
lcall
mov
stos
std
mov
scas
mov
lock
cmpl
mov
cmpl
xchg
jae
dec
jp
cmp
fisubrl
clc
fs
lock
jmp
dec
sub
inc
cmp
ficompl
mov
shlb
sbb
jnp
insb
icebp
push
jmp
mov
loop
and
sarl
xlat
aas
mov
inc
ljmp
fmuls
xchg
push
test
jne
in
dec
iret
je
sub
xor
xchg
adc
int
mov
sub
push
loop
sti
xor
xchg
or
sbb
lret
int3
out
jo
insl
int
rclb
lret
pop
imul
es
fwait
pushf
add
dec
and
bnd
in
xchg
sarb
mov
insb
icebp
inc
clc
leave
sub
test
sub
xchg
add
pop
mov
jnp
addr16
in
out
rcrl
pop
fwait
dec
add
ds
xor
cmc
shlb
jbe
mov
fcoml
mov
pop
xchg
cmp
pop
cmp
xchg
ret
xchg
ret
fldln2
dec
mov
adc
dec
push
sub
xchg
das
icebp
jecxz
js
jns
aaa
xchg
and
pusha
cmp
dec
adc
fcomps
test
xchg
jge
sbb
sbb
lret
inc
pop
cmp
push
mov
das
jmp
cmp
xor
lods
in
push
and
lret
jbe
aaa
aad
or
lods
lea
jne
lret
sub
sbb
mov
inc
jae
gs
add
sbb
xchg
ret
inc
mov
test
adc
in
push
cld
pop
jle
cmp
adc
ret
lea
xchg
cmpsl
xchg
push
push
xor
xor
mov
dec
jne
stos
fwait
mov
push
lods
loop
mov
inc
mov
pop
fcmovnu
mov
lahf
xchg
mov
enter
or
sahf
sub
cmp
mov
mov
scas
jmp
bound
xchg
arpl
jo
sbb
addl
mov
in
and
or
mov
xchg
push
scas
or
cs
mov
adc
lods
push
sub
adc
lret
sbb
lds
sbb
xchg
jo
inc
lret
mov
in
aam
mov
leave
std
or
cmp
adc
push
test
mov
and
int3
popf
sbbb
cmpsb
inc
pop
xchg
push
xor
lcall
inc
or
ja
adc
dec
xor
inc
aas
mov
in
mov
cli
xchg
pop
cmc
xor
fs
xor
outsl
ja
cmp
inc
add
inc
iret
cmp
or
push
out
aam
int3
fisubs
in
stos
test
repz
aad
outsb
jb
push
bound
dec
ds
movsl
sub
loop
icebp
cwtl
pop
sub
cmp
push
in
mov
push
cli
rorl
movsb
js
fistl
xor
mov
and
data16
das
inc
add
jns
add
aas
imul
mov
ret
mov
push
mov
xor
test
cmpsb
and
dec
xchg
nop
in
dec
inc
imul
dec
ja
dec
int
inc
aas
rcll
imul
xchg
cmp
loope
push
inc
push
inc
mov
push
pop
mov
cli
imul
out
nop
or
add
mov
mov
aas
idiv
mov
xlat
inc
int3
movsl
lods
pop
pushf
cmpsl
dec
and
adc
fsts
cmc
repz
xchg
mov
jl
fucom
cltd
cmp
mov
mov
fsub
bound
movsl
loop
daa
data16
inc
shlb
push
xor
in
gs
or
loopne
xchg
test
push
pop
mov
movsl
cmp
mov
pop
or
adcl
stos
insl
or
jae
aaa
jae
std
insl
iret
clc
ret
jmp
mov
pop
lock
cld
mov
jbe
movsl
jnp
mov
out
lods
mov
stc
add
int3
rcll
jle
bnd
lret
pusha
fxam
loop
sbb
xchg
icebp
std
mov
test
cmpsl
adc
mov
jle
add
mov
or
ljmp
test
int3
xchg
xor
cmpl
iret
shr
loopne
aam
mov
dec
push
push
adc
jmp
pop
shrl
insb
pop
add
jno
cwtl
sub
xlat
push
pusha
ss
add
adc
ret
or
scas
repnz
in
and
pop
add
popf
mov
fildl
adc
xchg
push
les
dec
xchg
divb
mov
clc
pop
xchg
repnz
and
jb
test
aaa
imul
dec
movsb
push
neg
pop
sbb
popa
jo
aas
pushf
daa
xlat
mov
repz
mov
adc
or
arpl
gs
mov
out
inc
nop
dec
xor
daa
adc
push
add
dec
xchg
add
lea
adc
sbb
sbb
sbb
pop
ss
jbe
loopne
leave
jb
aad
test
pop
mov
sub
mov
inc
cmp
call
das
test
mov
mov
mov
jmp
xlat
orl
fwait
sub
mov
or
sbb
in
jne
xchg
pop
and
push
andl
xor
sub
addr16
test
movsl
clc
mov
mov
lea
dec
lret
xchg
or
mov
outsl
sysenter
out
fimull
inc
outsl
cmp
iret
push
jge
dec
movsb
cmp
std
pop
and
jecxz
lcall
jno
and
mov
testl
mov
pop
scas
lret
and
addl
dec
inc
adc
jg
enter
jbe
dec
test
adc
xor
adc
mov
xor
pop
dec
pop
push
xor
pop
and
lods
leave
jns
jo
das
add
fldt
or
out
scas
inc
lret
into
add
inc
add
decb
mov
pop
add
mov
pop
je
out
cld
std
outsb
pop
cmp
cmp
in
lret
sub
popa
jno
cli
mov
lds
inc
sbb
xor
gs
lret
sub
sub
loope
aaa
inc
mov
lcall
or
test
add
inc
push
mov
dec
imul
loope
push
cld
fcomps
jge
push
pushf
pushl
sub
xchg
mov
test
mov
mov
stos
lods
jns
fcompl
sbb
movsb
mov
paddq
jecxz
arpl
xchg
or
jmp
mov
sub
lods
mov
daa
repnz
jp
sub
mov
and
add
gs
or
imulb
pop
pop
push
lcall
shlb
push
lea
ret
xor
push
stc
fcmovu
xor
stos
aas
dec
sbb
inc
ja
mov
inc
and
adc
sahf
jnp
sub
int
push
dec
fwait
inc
or
test
push
mov
mov
pop
and
loopne
addb
pop
stos
ljmp
push
das
sbb
arpl
jg
jle
mov
push
mov
push
imul
nop
mov
rolb
cmp
mov
mov
inc
outsl
insb
test
pop
jmp
sahf
inc
movsb
rclb
adc
aaa
es
add
ret
mov
in
xchg
xchg
jecxz
nop
aam
push
in
outsb
jge
cltd
mov
cmp
clc
lock
pop
jecxz
pop
jns
jae
pop
in
xchg
lcall
cli
shr
mov
mov
mov
jge
fildll
movsl
and
es
bound
or
pusha
xor
pushf
mov
and
adc
dec
call
loopne
jbe
fs
repz
xlat
inc
sub
lds
adc
out
or
in
mov
test
add
stc
fs
sbb
movsb
movsb
sbb
push
cmp
test
loopne
pop
jle
mov
adc
inc
shrl
cmp
cltd
adc
mov
add
mov
movsb
or
mov
or
jecxz
xchg
in
cmp
rcll
or
outsl
xorb
rcrb
insb
scas
data16
insb
and
iret
xchg
push
push
aad
icebp
jb
test
inc
clc
adc
xchg
cltd
insb
add
test
or
cs
popf
xor
xchg
dec
in
mov
mov
dec
negl
push
xchg
js
xchg
cmpsl
or
rorl
nop
inc
xor
mov
cwtl
movsl
test
xor
and
daa
push
sub
add
stc
pop
jmp
lcall
dec
push
dec
mov
push
nop
mov
sub
in
ret
hlt
mov
je
lcallw
mov
divl
out
mov
ficomps
ja
jae
sar
adc
mov
sarl
sbb
lret
pop
lret
jg
or
nop
dec
inc
lods
adcb
cmp
cwtl
add
xchg
lahf
and
enter
mov
or
fbstp
xchg
push
pop
ljmp
fstpl
mov
int
or
cwtl
and
aad
loope
adc
imul
rclb
sub
inc
mov
add
mov
xchg
cmp
add
rorb
daa
and
xchg
add
clc
popa
and
mov
gs
out
adc
and
or
dec
dec
ret
add
outsl
insb
xor
ljmp
mov
test
bsf
and
inc
outsb
pop
lret
jge
sti
lock
adc
or
lcall
dec
jge
sbb
or
xchg
mov
sub
mov
adcl
mov
sbb
out
adc
pop
out
fwait
std
call
das
inc
lcall
mov
pushf
mov
mov
mov
sub
cmp
inc
or
jl
dec
or
dec
xor
pop
dec
sarl
dec
inc
outsl
pop
jmp
sub
pusha
pop
xor
add
pop
pop
adc
rorl
popf
and
cmp
jl
mov
jmp
ja
xor
lods
inc
sub
mov
imul
dec
add
push
loope
psadbw
dec
ret
and
fsts
add
add
or
pop
es
inc
pop
in
mov
fnstenv
mov
mov
enter
rcl
ror
pop
mov
andb
dec
fpatan
pop
pop
in
pop
lahf
shlb
cltd
pop
fs
jg
mov
pop
faddl
or
xchg
hlt
pop
add
push
out
push
mov
hlt
out
lcall
push
mov
xchg
rol
adc
rolb
loope
xchg
pop
cld
xor
adc
aaa
lods
mov
jl
sub
xor
mov
fdivs
xorl
jns
push
fsubs
in
inc
icebp
cmp
sti
mov
add
add
mov
xor
mov
adc
mov
mov
sub
nop
out
into
repz
js
jo
lods
or
mov
mov
adc
mov
ret
scas
pushf
push
mov
dec
orl
inc
arpl
inc
out
mov
lea
adc
inc
push
sbb
jns
hlt
rolb
add
enter
call
cmp
test
mov
fsubrs
and
mov
sub
push
lahf
mov
mov
sti
sahf
adc
outsb
daa
popf
shll
mov
inc
lcall
iret
xor
lods
leave
pop
popf
xchg
aas
push
ret
jl
repz
aad
scas
call
xchg
in
mov
jnp
cli
ja
xchg
xchg
push
bound
in
pop
lea
push
or
push
cwtl
outsl
call
fistpll
mov
cmc
shrb
pop
sbb
pop
sbb
lds
xchg
sub
push
sarb
mov
out
adc
stos
mov
sti
dec
and
cltd
or
fwait
xor
adc
adc
jecxz
enter
add
call
lret
aas
sbb
mov
or
loop
mov
les
repz
fnstcw
sbb
aad
jno
ss
pop
std
adcl
mov
loopne
xor
adc
or
dec
scas
addl
dec
sub
xchg
dec
das
dec
shl
xchg
loopne
insl
fwait
xchg
jno
insb
mov
fucomip
jg
ret
mov
sbb
add
fcoms
shll
imul
inc
arpl
or
jmp
dec
popa
aad
mov
jg
or
lahf
addr16
add
sbb
push
icebp
cmp
bound
stc
xchg
jecxz
decl
inc
jmp
xchg
cmp
xchg
mul
adc
cmpl
mov
jle
dec
or
dec
push
jge
in
jns
sahf
adc
inc
jbe
inc
jge
cmp
pop
xor
bound
fwait
push
test
pop
mov
pop
inc
shrb
pop
lret
mov
cmp
int
clc
call
dec
ficompl
imul
out
cli
imul
pop
enter
dec
jb
jge
push
jnp
lock
lret
shrb
adc
repz
fisttpl
sahf
add
test
stc
imul
mov
dec
xor
mov
sbb
popf
jnp
mov
movsl
jmp
movsl
or
jecxz
push
mov
xchg
pushf
cmpsb
mov
push
cmp
jp
fcompl
jbe
sti
mov
pop
aam
or
jae
pop
inc
roll
dec
mov
out
cld
adc
repz
lret
enter
add
mov
and
push
imul
ficoms
add
in
xor
sbb
pop
ret
dec
adc
arpl
test
mov
mov
movnti
ficompl
movsb
jl
imul
das
cmp
fcoms
pushf
stos
mov
lds
push
iret
aam
pop
dec
xchg
insb
mov
jb
dec
pop
and
fstps
clc
cwtl
inc
stc
cs
movsb
popf
pusha
jno
push
lods
insb
and
cmp
jnp
jl
mov
les
sub
lcall
decb
jnp
sbb
inc
fsts
repnz
xchg
jmp
es
lahf
pusha
out
mov
dec
mov
xorb
xchg
add
cmp
inc
sahf
pop
pop
xchg
pop
ret
inc
sti
pop
sub
negl
test
jge
ds
xchg
lock
xchg
out
adc
inc
jo
xchg
outsl
popf
iret
sub
push
or
mov
shll
nop
inc
cmc
rorb
sbb
rolb
inc
std
lea
mov
popa
imul
xor
xchg
push
cltd
sti
cld
lea
lods
stos
cmp
mov
add
rcrl
sti
pop
test
gs
lahf
lahf
push
ret
sti
pusha
in
icebp
insb
dec
ss
push
shrb
inc
sbb
test
cmp
insl
sbb
and
test
lods
in
push
push
xchg
addb
clc
push
test
fmulp
rcrb
sub
loop
clc
pop
pushf
imul
fistps
pop
and
mov
shl
push
imul
mov
or
xchg
mov
enter
popf
and
test
dec
xlat
push
or
leave
pop
inc
mov
test
bound
dec
loop
insl
aas
rcll
inc
mov
sub
sbb
fincstp
bound
jl
sub
lcall
cld
fldcw
or
stos
mov
bound
cmp
jo
lret
inc
int3
orb
fstps
mov
add
or
insl
cmp
shrl
ljmp
rorb
lea
push
pop
cmp
out
push
inc
insb
add
mov
sahf
nop
adc
xor
cmpsl
mov
hlt
cltd
cmp
mov
jmp
and
cmp
sti
mov
cli
in
xor
movsb
cmpsl
xor
scas
je
lods
subl
enter
mov
icebp
jae
punpckhdq
mov
stc
loop
xchg
add
lods
xor
ja
lret
fwait
xor
arpl
and
sbb
mov
scas
xchg
ljmp
lods
adc
pop
xlat
cltd
xchg
mov
pushf
leave
mov
push
aas
or
lock
mov
jl
push
addb
in
dec
push
lcall
in
imul
fdiv
push
xor
sub
jp
lahf
mov
mov
test
jb
adcl
shlb
xchg
xchg
adcl
inc
and
jae
inc
rorb
dec
push
jecxz
test
insl
pop
sbb
js
pop
cs
rcrl
pop
fwait
loope
bound
push
js
mov
mov
mov
in
push
and
rolb
les
pop
jmp
cld
add
push
pop
out
jns
lret
mov
jbe
movsl
fcoms
mov
mov
lock
std
sbb
push
sbb
loopne
fdivs
mov
insb
cmpsb
cmp
jae
inc
imul
mov
test
xchg
cli
ret
mov
shl
fsubrl
push
sub
adc
add
or
mov
fs
enter
cmpsl
jno
repz
inc
jp
test
lock
js
jle
popf
add
sbb
mov
out
sub
dec
insb
rol
push
jp
add
cmp
xor
sbb
insl
sbb
outsl
data16
aam
pusha
pop
or
push
adc
enter
cmp
inc
jl
fwait
rsm
pop
daa
out
fcoms
mov
inc
mov
jnp
mov
dec
lea
mov
clc
inc
adc
nop
xor
xor
sub
fs
mov
dec
mov
jp
xchg
sbb
mov
dec
js
push
movsb
or
push
jg
mov
adc
lahf
mov
jbe
jge
fwait
test
and
pusha
std
mov
ret
jae
popf
sub
loopne
test
aaa
iret
jle
cld
or
adcl
test
inc
std
aaa
addr16
cli
ret
inc
xor
hlt
cmp
nop
xor
jg
inc
outsb
sti
js
shlb
mov
scas
mov
mov
mov
test
popa
aaa
lock
mov
pop
jne
mov
ja
push
test
mov
int
cs
je
rcrl
and
sti
ds
xchg
rorl
and
xchg
sub
adc
jg
push
jo
push
inc
xchg
or
lret
repnz
push
pop
mov
mov
add
adc
faddl
ds
dec
loop
std
mov
out
in
cmp
jle
sub
mov
mov
aam
lret
dec
jns
addr16
adc
incb
aad
jnp
sahf
and
xor
enter
add
stos
mov
out
mov
out
fcmovnu
mov
adc
ret
mov
sub
repnz
dec
aad
sbb
leave
and
jp
gs
test
jbe
movsb
jb
mov
mov
pop
mov
pop
aaa
push
and
mov
adc
cli
and
lock
mov
xor
mov
jo
pop
mov
mov
push
or
mov
in
in
inc
leave
sbb
mov
sub
mov
pop
pusha
cmp
or
mov
mov
loope
mov
lcall
pop
push
dec
fs
shlb
cmp
jno
cmp
pop
pop
shlb
jne
pop
jb
sub
repz
sub
push
shll
in
sbb
sbb
and
loopne
ja
ljmp
and
xchg
jg
enter
pop
lret
jl
and
dec
cli
adc
in
test
jp
mov
and
xor
cmp
push
inc
ljmp
cmp
jge
mov
lods
add
rcl
push
mov
jp
xor
or
xchg
popa
inc
out
mov
loope
andl
add
mov
enter
dec
adc
lods
fistps
cmp
mov
iret
and
pop
fistpl
and
setb
cmpsb
movsl
xchg
push
mov
jge
xlat
imul
and
test
or
in
cmp
fimull
fdivr
inc
push
in
stc
in
outsl
in
or
mov
sub
add
pop
fidivl
mov
dec
out
lods
push
gs
push
sub
inc
rclb
inc
sub
fdivr
shlb
push
pushf
lods
sbb
or
pop
faddl
jg
lahf
test
and
sbb
jmp
add
cmp
xchg
test
rclb
into
jl
fs
inc
andl
pop
push
sub
lcall
cli
or
jp
dec
and
inc
adc
xchg
xchg
lods
push
mov
inc
cmovl
insb
bound
xor
je
in
lret
jl
sub
shlb
mov
jmp
mov
scas
mov
imul
push
add
mov
mov
or
lods
cmp
adc
jns
mov
mov
aam
ja
sbb
sbb
fstps
mov
ss
xchg
jmp
mov
cmp
pop
mov
test
test
or
mov
jns
pop
push
mov
push
push
icebp
xchg
adc
cmc
pop
push
dec
xchg
add
mov
push
xchg
mov
mov
nop
dec
ret
jae
adc
xchg
jbe
xchg
addr16
mov
jo
xchg
jo
adc
test
mov
jno
jp
adc
lcall
jl
movsb
cmc
into
xchg
hlt
xor
add
dec
ret
movsl
add
add
push
inc
fdivrs
cmp
scas
push
repnz
cmp
rcrb
xlat
lcall
push
or
xlat
xor
pusha
and
mov
shlb
add
jbe
loop
out
cld
adcl
mov
jp
or
repz
mov
jmp
and
push
mov
stos
stos
and
nop
adc
ds
int3
sarl
aam
add
mov
enter
std
pusha
and
movsl
inc
rolb
scas
pop
lret
cmp
pop
push
pop
adcb
gs
cmp
add
cs
loop
or
in
js
dec
xor
jl
jo
inc
mov
test
cmp
lds
int3
es
cmp
mov
lret
lret
movb
or
jns
mov
test
add
inc
xor
popl
adc
jmp
imul
fldl
in
mov
pop
mov
fwait
enter
loope
out
mov
sub
mov
push
or
or
iret
jns
xchg
fsubrs
push
push
scas
cltd
jno
pop
rcrl
aaa
imulb
out
lcall
inc
mov
ljmp
popa
movb
test
cmp
daa
pop
jb
jno
jg
sahf
cmp
xchg
xchg
pop
and
cmp
out
sub
xor
aaa
shll
mov
push
loope
mov
in
xchg
fstps
sub
movsl
std
ficoml
call
fildll
xor
add
lods
js
stos
test
and
inc
and
insl
pushf
lods
xchg
int3
jo
cld
sub
std
repz
xorb
inc
xor
iret
js
push
decl
xor
cs
mov
add
hlt
mov
popl
rorb
pop
jno
mov
popa
mov
sub
push
sahf
repz
lcall
cmp
sbb
jmp
idivl
sbb
cmp
fstpl
mov
mov
push
mov
lods
mov
ret
mov
mov
xor
icebp
mov
jne
jmp
and
xlat
sbb
dec
sahf
and
jne
sbb
sbb
clc
sbb
bound
cmc
rorl
aam
outsl
jle
mov
push
mov
add
or
mov
outsl
push
ja
push
ficomps
mov
jne
and
push
push
sbb
out
das
mov
adc
rcr
inc
mov
ret
and
ficomps
sti
fs
jl
ss
cmpsb
outsb
out
xchg
shll
add
sbb
mulb
test
jne
in
lret
inc
xchg
pushf
jo
mov
cmc
mov
pop
push
pop
sbb
outsb
and
sub
pop
aam
aaa
jle
loope
rolb
push
loopne
mov
test
fwait
enter
dec
insb
pop
stc
shll
fbld
imul
dec
push
inc
shr
xchg
cli
mov
loop
int3
aam
pop
jg
mov
dec
add
adc
mov
dec
dec
leave
sub
mov
push
sbb
fwait
sbb
pop
int3
mov
aas
adc
sbb
or
fs
mov
push
jge
out
out
mov
sti
in
jg
mov
jo
mov
ljmp
loope
imul
stos
mov
xorl
mov
xchg
jnp
inc
or
fldt
or
ja
xor
scas
jb
mov
pushf
xchg
pop
lahf
push
arpl
shl
cmp
jmp
add
lcall
xchg
call
pusha
pusha
push
push
inc
popa
sbb
and
jecxz
sub
mov
sbb
cmp
cli
sahf
fnstenv
test
bound
aad
or
cwtl
ja
pop
xlat
jno
inc
shlb
cli
mov
adc
testl
push
fwait
mov
xchg
jecxz
jbe
add
pop
jae
fstl
jns
int
push
mov
cli
and
rorb
ret
outsl
add
sti
sbb
vmovaps
scas
out
in
sbb
shl
stos
cmp
mov
lea
xchg
dec
push
dec
pop
out
test
jge
xchg
sub
je
or
popa
imul
dec
in
mov
dec
dec
repnz
sub
mov
or
xor
inc
dec
add
aas
inc
inc
jno
sub
push
or
dec
jae
ret
push
xor
pop
pop
fwait
and
imul
cmc
xchg
pop
inc
sbb
cmp
mov
shrb
cmp
scas
jge
xchg
andl
adcl
mov
popa
mov
mov
inc
mov
add
incl
xor
jno
add
test
js
pop
into
inc
or
lods
xlat
mov
cmp
popa
push
adc
int3
bound
arpl
and
hlt
ds
lds
and
out
or
sbb
push
mov
xor
bound
ja
je
imul
in
jmp
xchg
sub
scas
sbb
dec
xlat
cltd
jns
cmpsb
jecxz
or
inc
out
dec
pop
or
mov
push
xchg
jmp
sub
xchg
shrl
and
mov
inc
clc
gs
mov
sub
dec
neg
cld
out
daa
cld
es
inc
xchg
jns
push
mov
pushf
jmp
test
fisubs
arpl
sub
sahf
inc
insl
scas
inc
and
push
cld
and
ss
push
mov
jb
and
push
mov
mov
fbstp
test
jns
xor
pop
mov
je
lock
xor
movb
mov
push
out
dec
xor
lea
stos
clc
cmpsb
stos
popa
ret
mov
mov
xchg
icebp
mov
addr16
adc
or
inc
mov
push
scas
jnp
pop
mov
add
xchg
into
inc
pop
fistpll
mov
sub
xlat
je
iret
pcmpgtw
push
and
cvtps2pd
add
mov
fs
loopne
rorl
dec
or
iret
or
nop
fcompl
pop
fisubl
pusha
addl
testb
mov
xor
lock
mov
dec
and
les
inc
xchg
outsl
cld
in
jbe
mov
fadds
stos
mov
or
sbb
push
jle
rclb
push
adc
inc
js
pop
inc
cli
or
rclb
lods
stos
in
sti
decl
insl
pop
xchg
outsl
test
insb
fcomi
push
negb
adc
mov
outsb
push
sbb
repnz
dec
mov
rcr
scas
inc
xchg
mov
in
lea
fnsave
and
mov
icebp
sbb
xor
push
xchg
in
stos
mov
cmp
cmc
pop
pop
pop
xor
jmp
dec
jl
jmp
mov
sbb
sbb
mov
lret
std
shrb
or
leave
cmpsb
ljmp
into
pop
inc
pop
int3
pop
decl
mov
pop
push
xchg
jnp
test
jle
adc
in
xchg
call
pop
cmp
push
hlt
das
and
add
xchg
stos
cmc
fildll
inc
pop
inc
add
adc
orb
in
ret
test
stc
repz
push
vaddps
outsb
xchg
dec
push
sbb
and
ds
and
push
xor
js
dec
loopne
loope
push
hlt
out
xor
out
jl
scas
sub
out
mov
andl
test
js
icebp
pusha
mov
ds
sti
sbb
adc
jae
dec
cmpsb
xchg
jnp
out
or
pushf
incb
xor
dec
sbb
int
pushf
sbb
in
and
lea
lea
jbe
cmp
movsl
out
jmp
push
and
and
arpl
mov
pop
out
imulb
sub
clc
jl
or
bound
inc
jns
in
push
loop
push
pop
lods
stc
jne
dec
sub
mov
mov
pushf
xlat
insl
dec
inc
pop
add
mov
xor
pop
clc
flds
cmpsl
rorb
and
pop
mov
cmpb
ret
mov
mov
mov
popf
frstor
jb
iret
xlat
mov
stos
lds
jbe
xchg
or
sbbb
addr16
dec
sub
or
jno
jle
jl
mov
pop
popa
inc
cmp
gs
mov
add
scas
pop
add
push
mov
arpl
arpl
sub
out
call
sbb
mov
and
or
out
or
jo
fwait
nop
sahf
lcall
xor
test
lcall
pop
inc
pop
jl
sti
mov
ja
gs
test
test
pop
xor
cwtl
xorl
enter
and
int3
repnz
in
xlat
popa
stos
sbbl
jb
bound
rcll
aaa
add
int
popf
jnp
xchg
add
nop
jl
pop
imul
stos
push
imul
jns
repnz
dec
inc
shl
stos
jbe
test
ljmp
sbb
pop
pop
decb
push
shlb
add
stos
jmp
xchg
jns
imul
xchg
mov
cs
sahf
inc
stc
or
fwait
arpl
add
mov
imul
cmp
or
js
or
xor
aam
ret
ret
lock
rcrl
mov
imul
inc
loopne
and
das
xchg
outsb
cmpsb
pop
fwait
fwait
je
sub
in
clc
pop
inc
fs
inc
shrb
mov
rcl
push
sbb
dec
inc
push
nop
aad
inc
fisttps
enter
xor
sbb
inc
mov
sbb
imul
pop
stc
and
in
or
dec
inc
jbe
sbb
packssdw
mov
mov
shr
mov
mov
gs
clc
testl
shrl
ror
push
mov
xor
arpl
fcomps
imul
inc
stos
xchg
push
fildl
into
stos
jnp
push
pop
mov
sub
push
fwait
hlt
mov
jp
pop
fsubrl
jp
js
adc
fwait
cld
das
or
pop
sbb
fstpl
in
das
int
adcl
cmp
mov
jge
or
push
pop
sub
cmp
test
movsb
lcall
xchg
mov
data16
push
add
popf
pop
dec
lcall
int3
frstor
shrl
sbb
pushf
js
or
jno
mov
loope
jle
xor
das
fists
pop
jge
out
jns
mov
test
popa
pop
jae
mov
sti
out
repz
das
or
or
sub
imul
cmp
dec
popa
frstor
nop
lock
icebp
ret
xchg
cmc
jecxz
xor
xor
inc
insb
jecxz
shl
lods
sub
imul
fcomps
cmp
inc
rcl
mov
das
mov
icebp
gs
das
cmp
stos
add
cmp
cmp
mov
popf
pushf
xchg
pop
pop
mov
xchg
daa
push
in
int
popf
std
pop
jmp
in
sub
or
add
mov
mov
shll
mov
imul
add
or
mov
jp
jg
test
inc
pop
mov
mov
or
cmp
sarb
push
adc
and
xor
in
cltd
out
mov
out
ljmp
insl
imul
mov
dec
cmp
mov
in
jle
ret
out
bound
xchg
cmp
rcl
cmp
fmuls
fsubl
add
icebp
enter
xor
test
inc
dec
out
bound
aam
jbe
roll
inc
sbb
dec
repnz
das
sbb
jl
popf
es
push
sub
imul
test
dec
push
mov
leave
loop
mov
aad
int3
xor
je
jmp
loopne
mov
jg
xor
mov
cmp
lea
add
out
movsb
fldt
lcall
aas
pop
cmp
rcll
les
xchg
pop
repz
sahf
data16
inc
push
push
sub
stos
imul
roll
pop
xchg
cld
nop
xchg
fs
insl
dec
or
push
fimull
push
mov
andl
jne
mov
sub
loopne
adc
aad
ljmp
pusha
pop
sbb
inc
sub
stos
mov
xchg
outsl
cmp
xchg
sub
fistpl
inc
out
insl
dec
out
or
xchg
aam
inc
jge
add
xchg
cmp
out
xor
js
adc
push
test
or
cs
out
cwtl
add
mov
outsl
push
out
mov
fsts
jb
or
add
clc
sbb
popa
hlt
jb
fistpl
pop
dec
sub
xor
outsl
inc
test
dec
jb
int3
mov
shl
enter
jmp
xchg
mov
aaa
movsb
sbbl
dec
sbb
mov
clc
cmpsb
sti
scas
jle
scas
ficomps
mov
shrb
push
inc
xor
outsl
lret
mov
jno
in
xchg
push
xchg
push
jae
pusha
adc
fmulp
pop
or
es
or
in
fwait
in
test
fnstcw
pop
mov
ret
or
lcall
loopne
jg
push
mov
aaa
ja
mov
mov
pop
jge
pop
daa
movsb
jo
test
inc
ljmp
jo
dec
cltd
and
lret
adc
inc
xor
jge
mov
and
gs
jne
mov
lcall
popl
xchg
sbb
adc
and
xchg
sbb
movsl
dec
mov
out
outsl
sarl
pop
push
pop
in
pop
and
outsb
sub
xchg
inc
fcompl
into
push
pop
inc
mov
or
fwait
pop
add
xor
mov
cwtl
jne
mov
cs
xor
test
inc
sub
or
not
sub
mov
test
pop
mov
add
cmp
xchg
inc
sahf
js
enter
add
fwait
int3
mov
cwtl
shll
mov
lods
clc
mov
and
and
pop
lahf
aad
int
and
xchg
xchg
mov
xor
scas
or
and
hlt
pop
ss
lock
add
xchg
cmp
xor
lcall
in
or
lock
xchg
stos
xchg
lds
stos
xlat
into
sbb
fcmovbe
push
in
hlt
pushf
cmc
dec
test
jg
adc
inc
int
cltd
jmp
mov
stc
push
xchg
stc
sub
xchg
mov
adc
jle
enter
inc
stos
scas
mov
jl
or
or
pusha
push
sbb
jno
pop
mov
out
lods
xchg
lods
in
pop
aad
dec
adc
lret
stos
mov
mov
stos
dec
cli
repz
lret
negb
test
pop
outsb
cmp
mul
rorb
adc
add
or
sub
mul
nop
out
lods
adc
inc
push
fwait
add
dec
pop
mov
fiadds
cmp
cld
out
push
or
xchg
mov
in
push
sbb
test
loop
pusha
push
gs
or
xchg
loopne
nop
xchg
xchg
xor
dec
pop
call
sti
stc
lahf
lret
xchg
jge
sub
movsl
inc
addr16
fdivl
ret
inc
test
into
dec
sub
xor
fstpt
jle
scas
lcall
push
aas
mov
cmc
or
push
je
ljmp
scas
sub
push
add
arpl
enter
cmp
cmpsl
mov
jo
fsubl
push
sti
sti
sbb
pop
movsl
xchg
push
int
sbb
sub
enter
test
jno
cmp
push
mov
mov
lret
xor
ja
jns
subl
lret
xor
mov
dec
scas
pushf
pop
sbb
adc
nop
pop
jmp
mov
xor
jbe
ffreep
and
inc
jb
dec
loop
push
fildl
pop
clc
and
ss
test
add
hlt
push
js
dec
mov
adc
data16
test
andb
pop
mov
arpl
icebp
cld
iret
mov
lcall
and
and
pop
test
addr16
and
pop
loop
roll
mov
cmp
int3
test
or
dec
pop
test
ret
test
loopne
pop
insb
cmp
stos
out
cmp
sbb
lods
cmp
lcall
dec
out
jmp
rcll
adc
xor
add
into
ds
jmp
mov
cmp
pop
push
cwtl
lock
xchg
and
aaa
pop
dec
imul
movsb
mov
daa
pop
ret
sbbb
pop
pop
ret
enter
sub
mov
mov
rcrb
xchg
pop
pop
iret
pop
jno
mov
sub
ret
dec
icebp
jp
adc
lds
push
popf
negl
subb
stos
inc
pop
xchg
push
std
call
aam
fdivs
dec
cmpsb
mov
loop
pop
dec
std
pop
mov
ficoml
pop
push
imul
inc
sbb
xchg
pop
movsl
and
scas
adc
scas
or
repnz
add
cltd
add
adc
sbbl
movsb
and
fwait
in
call
mov
adc
adc
stos
jg
es
outsb
hlt
sbb
bndstx
shl
sub
stos
xchg
sub
mov
xor
add
loop
stc
mov
loopne
push
adc
xchg
dec
stos
xor
pusha
ljmp
mov
adc
popf
jl
cmp
imul
mov
addl
mov
add
lds
fstpl
mov
mov
cmp
mov
mov
outsl
cmp
fs
sub
das
push
cltd
and
pop
sub
aaa
mov
jne
push
mov
jge
aam
and
pop
roll
iret
adc
jno
repz
push
pop
in
mov
mov
subb
xchg
rcr
add
arpl
fstp
mov
mov
xchg
pop
mov
inc
shrb
in
push
xchg
pshufw
push
jnp
test
add
out
cs
cs
and
rcll
das
shrl
jle
sbb
and
pop
xor
jne
outsb
cmp
pop
dec
inc
mov
mov
inc
xchg
push
mov
mov
xlat
enter
add
mov
scas
adc
sub
repnz
cli
lea
mov
mul
es
cmp
aam
mov
fwait
testb
mov
fisttpll
adc
or
add
push
push
imul
xchg
pushf
jnp
pop
in
xor
rcrb
sub
sbb
stos
stos
lock
stos
ror
sbb
jne
cmc
icebp
xchg
shlb
repz
mov
int3
movsl
cmp
iret
xor
test
inc
or
add
rcrb
push
sahf
lock
ret
mov
mov
fbstp
or
sub
pop
test
and
sub
cmpsb
rorb
pop
and
test
push
fsubrl
jmp
fld
jo
and
cmp
jmp
scas
inc
cmp
xor
xor
lock
arpl
push
dec
inc
xor
xchg
jg
cmpsb
sbb
mov
or
jb
sbb
mov
scas
mov
insl
mov
cmpsb
scas
lahf
out
mov
sbb
shl
rorb
adc
cld
add
test
std
out
xor
and
or
xchg
adc
lods
jp
lods
and
popa
xchg
jg
add
inc
mov
jo
or
jo
test
adcl
inc
mov
iret
fsubrs
movsb
test
inc
andb
int3
pop
pop
ljmp
clc
xchg
sti
popa
jo
cmp
cmpsl
mov
and
mov
sbb
jl
fs
push
loopne
jp
xchg
push
mov
xchg
dec
push
ss
fstps
mov
xchg
or
or
jle
xor
jmp
mov
lahf
mov
out
addl
es
mov
std
rcrl
cli
dec
loope
adc
ffree
fsubs
leave
in
aas
mov
xchg
cli
fwait
imul
xlat
imul
mov
xchg
mov
sbb
arpl
daa
inc
repnz
dec
pop
push
push
clc
or
mov
bound
in
dec
pop
orb
sti
jne
pop
or
fcmovnu
push
inc
aas
cwtl
in
push
sbb
mov
push
jo
call
data16
add
pop
mov
xchg
and
cmp
and
sbb
inc
mov
xchg
jo
shrb
fldenv
dec
pop
popa
mov
pop
pop
adcb
cmp
clc
imul
cli
mov
mov
test
enter
adc
sub
jecxz
cmp
dec
jg
cmp
adc
sti
cmc
jne
dec
aad
jecxz
push
xchg
in
jg
bound
cmp
leave
lahf
nop
push
push
cltd
jne
into
xchg
adc
mov
enter
xchg
fadds
dec
out
xchg
pushf
and
cmpsl
cmp
subl
aaa
fidivs
and
shlb
and
das
fidivrs
sub
shlb
mov
mov
mov
mov
popf
cmpsb
popa
xor
mov
sbb
fildl
mov
call
iret
dec
ja
fcomi
or
addb
dec
orb
pmaxub
pop
pop
push
jecxz
xchg
leave
stos
dec
mov
pop
lods
dec
es
mov
mov
sub
mov
cmp
dec
jmp
xor
in
push
arpl
iret
lcall
lods
jae
movsb
cmp
sbb
icebp
push
pop
jo
pop
sub
add
aas
and
aaa
mov
movsb
push
add
sbb
in
adc
sar
sbb
jbe
pop
dec
xchg
mov
mov
dec
cmp
push
movsb
inc
popf
out
xor
add
dec
inc
xchg
xchg
gs
cwtd
dec
cmc
sbb
movsl
jnp
std
aaa
mov
imul
pop
ljmp
scas
xchg
lds
push
push
ja
sub
cmp
pop
cmp
loop
mov
orb
jp,pt
dec
lret
xor
repnz
out
adc
inc
imul
std
dec
dec
outsb
lock
fdiv
jbe
or
jmp
jge
dec
out
jle
and
adc
xchg
lret
shrl
movsb
sbb
adc
movsl
adc
and
pusha
sbb
fildll
mov
sub
ret
sub
call
mov
cmpsl
clc
push
xor
jne
xor
add
imul
in
push
sbb
mov
dec
sbb
fcmovu
lahf
stc
andb
repz
js
push
xchg
jns
call
mov
bound
xchg
fs
std
adc
pusha
and
inc
cs
or
push
mov
inc
fs
jp
test
sbb
inc
setne
xchg
or
loopne
push
addl
jnp
cmp
icebp
lar
push
lahf
mov
rorb
in
and
stos
xor
fisubrl
jns
mov
pop
nop
popa
pop
xchg
adc
xor
sti
out
in
mov
cmpsl
je
fwait
push
in
jb
mov
iret
cmpsl
cmp
outsb
lods
mov
pop
nop
enter
dec
and
lret
ja
lret
inc
push
mov
mov
inc
push
add
xchg
fwait
out
not
mov
shlb
sahf
adc
repz
pop
cli
xor
push
ljmp
test
mov
add
inc
in
xchg
jle
lcall
rclb
sti
icebp
sub
mov
cmpsl
mov
push
mov
xchg
xlat
lea
add
lods
movsl
jl
cli
mov
xchg
imul
test
mov
addr16
push
inc
aas
jb
or
or
fs
imul
push
popa
sbb
inc
ss
sahf
bound
out
lods
inc
idivb
sub
or
sti
xchg
sbb
sbb
xchg
adc
rorl
push
mov
gs
mov
adc
insb
js
lods
xchg
push
ret
repz
orl
sbb
push
int3
sbb
cmp
fs
jae
data16
inc
jbe
and
lea
xor
into
push
add
pusha
cmp
mov
mov
xchg
push
and
or
sub
outsb
inc
xchg
call
mov
dec
push
scas
repnz
push
or
sbb
push
push
sarb
jle
mov
jmp
push
xchg
mov
push
notb
or
mov
add
mov
cs
cld
inc
mov
das
inc
adc
mov
or
ret
pop
cmpsb
sub
imul
inc
pushf
js
add
cwtl
lock
inc
sub
mov
sbb
outsb
sub
mov
cmpl
jmp
xor
ret
cld
lcall
fcomip
ret
pushf
mov
mov
push
imul
adc
leave
fs
pusha
xorl
jno
and
adc
out
addr16
mov
mov
ljmp
fimull
pop
mov
mov
in
bound
icebp
push
sub
aas
xchg
sbb
je
mov
popf
and
in
outsb
loop
loopne
scas
in
loope
jno
sub
jle
imul
outsb
js
imul
insl
cmp
idivl
inc
dec
testl
arpl
mov
out
int3
mov
outsl
js
mov
fisubrl
lods
dec
les
mov
test
jbe
cld
ja
pop
mov
xlat
aad
dec
or
ss
aad
out
stos
into
jp
pop
lret
fs
hlt
imul
add
mov
cmp
mov
mov
cltd
ljmp
xor
add
scas
pop
cwtl
xor
sub
stc
jp
sbbb
or
push
lds
jle
enter
push
in
sbb
mov
cmp
je
out
es
cmp
orps
loop
xchg
mov
loop
clc
int
gs
out
scas
push
pop
loop
mov
cs
jo
test
push
dec
xor
xchg
xchg
xlat
lods
dec
sbb
addr16
mov
fldl
push
scas
subl
and
mov
in
cmc
and
dec
sbb
stos
push
lds
cli
xor
xor
fadds
lcall
xchg
sti
shl
add
mov
sbb
clc
insb
mov
movsb
sahf
out
jmp
and
pop
call
adc
pop
sub
mov
test
hlt
cwtl
cmp
mov
dec
ret
or
sbb
cmc
aaa
push
js
out
fcmove
dec
das
xlat
dec
mov
fdivp
adc
mov
call
inc
push
es
test
push
adc
pop
mov
int
stos
fsub
sub
lods
pop
adc
dec
jnp
pop
xor
sub
repnz
clc
pusha
fdivs
sub
ret
outsl
push
imul
cmp
dec
int3
into
jp
sub
addr16
or
sbb
rcl
push
xchg
adcb
nop
addr16
xor
xchg
jmp
or
sbb
adc
and
dec
push
push
negl
cltd
and
mov
into
dec
push
push
mov
cmp
inc
xor
inc
mov
jns
mov
sub
ret
aas
xchg
mov
mov
sbb
xor
push
inc
push
fnstsw
mov
aaa
bound
loop
outsb
test
ficompl
lret
push
pop
call
aam
repz
push
xchg
jle
dec
xchg
lods
xor
lock
push
out
call
sub
lcall
and
shlb
jbe
lret
push
repz
test
lods
or
sub
cmp
push
mov
push
xor
jae
test
jp
je
sahf
out
mov
fsubs
nop
out
push
sarb
push
and
out
fists
repz
popa
ficompl
fidivrs
jb
fisttpl
jb
mov
repz
sub
pop
dec
cmpl
cwtl
mov
sbb
mov
mov
sub
out
ret
cmp
data16
jo
pop
paddusb
adc
out
xor
push
test
loope
arpl
push
pop
xor
mov
test
xor
jno
loopne
ror
mov
xchg
xor
outsl
imul
lds
mov
into
mov
xchg
xchg
dec
test
clc
cmp
or
jmp
push
scas
lret
inc
leave
sub
inc
roll
out
iret
sub
std
pop
mov
mov
sbb
pushf
repz
inc
fistpl
dec
xor
inc
mov
aam
ja
hlt
jns
cltd
int3
add
lcall
out
int
adc
and
jg
mov
xchg
lahf
leave
sbb
push
pop
mov
xlat
jns
add
jp
ja
lds
inc
sti
jecxz
dec
jmp
loop
pushf
negl
xchg
fists
jmp
dec
ss
sbb
add
stos
mov
pop
xor
pusha
popf
pop
out
mov
outsb
jnp
in
sbb
hlt
adc
push
mov
dec
je
fcoml
push
clc
das
insb
pop
cs
mov
mulb
orl
pop
adc
xchg
call
stc
fwait
xchg
dec
andb
ret
cld
pushf
mov
pop
add
mov
mov
ja
push
mov
mov
mov
out
adc
or
or
sub
in
and
adc
sahf
xor
sbb
xchg
arpl
mov
popf
pop
jecxz
mov
sar
addr16
xor
jp
inc
xchg
insl
dec
mov
sahf
out
gs
pop
dec
sbb
in
and
or
movsb
mov
xor
pop
add
outsb
sahf
imul
sbb
jle
mov
je
jmp
ds
xor
aad
hlt
xchg
insl
jmp
jne
mov
pop
mov
je
into
mov
shll
lods
test
lods
test
add
jg
gs
xchg
xchg
inc
mov
sbb
xor
arpl
xor
daa
push
jae
faddp
enter
mov
lods
stos
inc
fdivrs
das
or
xor
stc
test
cld
decl
mov
mov
icebp
push
xchg
inc
and
pop
outsb
cmpsb
pop
fstl
ficoms
mov
mov
pushw
inc
mov
loop
dec
and
in
sbb
out
fmuls
lret
in
in
push
shr
and
cmp
cmc
xchg
cmp
test
or
pop
push
push
cs
xor
ret
cs
stc
ficoml
jno
sbb
stos
movsl
test
xchg
fsts
sbb
ret
rcr
dec
shll
aad
sti
inc
cwtl
scas
add
imull
pushf
cmpsb
or
clc
cmpsl
mov
pushf
sti
xlat
lret
loopne
inc
inc
cmp
sbb
incl
sahf
sub
jne
fs
push
cld
jp
push
and
lahf
mov
jbe
lret
mov
jne
lods
mov
jl
push
or
add
mov
arpl
ss
and
and
push
idivb
aaa
and
into
sub
inc
lea
xchg
cmp
lods
out
lods
dec
inc
aam
iret
rcr
jl
lahf
fistps
xor
test
xchg
xor
lods
sub
mov
mov
test
xor
cld
mov
popf
inc
mov
ljmp
push
mov
arpl
aad
ljmp
lods
pusha
subb
or
lcall
mov
or
mov
inc
mov
hlt
pop
pop
outsl
cmp
or
inc
scas
mov
ds
and
inc
lret
pusha
rolb
add
aam
imul
or
sar
movsb
out
in
adc
lahf
pusha
shll
cs
mov
aad
int
mov
push
enter
ficoml
jns
call
jbe
xchg
clc
test
cmc
mov
aaa
sub
arpl
jle
gs
mov
stos
out
jp
pop
popf
or
std
cmp
mov
or
and
pop
dec
fwait
lcall
mov
sub
daa
push
lahf
or
in
cmp
or
sub
pop
or
push
out
stc
nop
lret
lret
jle
mov
lea
adc
mov
or
and
outsl
or
or
inc
mov
shrb
sbb
ljmp
sarb
lea
mov
iret
loope
xor
sbb
and
dec
ljmp
xchg
xchg
loop
xor
and
cs
pushf
in
ficompl
hlt
aam
mov
or
sbb
push
fcmovnb
lret
fnstenv
stos
pushf
xor
sub
sbb
adc
aas
mov
mov
dec
jecxz
jmp
test
out
icebp
or
dec
mov
fwait
and
mov
fwait
pop
sub
loopne
jl
pop
pusha
jae
mov
cmpsl
cmp
lcall
or
sub
repz
mov
popf
mov
test
pop
jle
sub
fldl
stos
xchg
pop
out
shl
in
inc
jbe
daa
das
jns
mov
orl
mov
insl
cmp
sub
pusha
pop
sub
sbb
adc
cltd
cmpsl
pop
stos
push
cli
fcmovnu
sbb
cmc
adc
stc
push
pop
sub
pop
lret
jge
xor
int3
psubusb
push
movsb
rolb
cwtl
movsl
jecxz,pn
lods
add
push
stc
and
sub
cmp
scas
nopl
mov
xchg
rcll
popf
push
ja
in
lret
or
dec
mov
push
cld
or
enter
mov
divl
add
xchg
andl
inc
mov
aad
cmp
mov
hlt
add
fcmovnu
test
push
or
lods
mov
push
sahf
or
xor
mov
push
insl
inc
ret
rorl
cmp
addr16
lock
pop
xchg
inc
mov
xor
mov
add
jmp
shll
push
cmp
jnp
cmp
out
fidivrs
mov
ss
outsl
mov
dec
mov
ds
hlt
in
ds
add
adc
mov
fidivs
out
adc
cmpsb
and
and
or
xchg
xchg
sbb
sbb
xchg
mov
inc
jnp
push
jne
mov
push
adc
push
andb
adc
in
fcoms
data16
je
cld
pop
and
push
outsb
inc
mov
sub
subl
filds
mov
xchg
xchg
jne
adc
xchg
cmpsb
cmp
pop
mov
jae
adc
dec
cltd
icebp
iret
mov
ds
test
cmc
mov
inc
cld
lea
add
pushf
jns
loop
xchg
cs
dec
jecxz
icebp
jns
lea
push
sbb
imul
pop
mov
rorl
sbb
mov
cltd
dec
sub
inc
sbbl
negl
imul
xlat
push
cmc
das
enter
mov
ja
mov
add
clc
or
arpl
scas
xor
es
cli
mov
int
imul
out
pop
loop
fidivl
shlb
dec
mov
daa
test
xchg
mov
lcall
aaa
sbb
mov
xor
push
mov
mov
or
dec
je
sub
js
out
cmp
sbb
dec
or
and
inc
int
lret
jno
data16
jge
xchg
in
cmpsl
xchg
cs
lret
mov
in
or
subl
outsl
xchg
push
loop
test
stos
dec
mov
and
into
add
or
push
pop
mov
jg
xor
outsb
loop
adc
dec
mov
loopne
jae
into
push
lea
ss
jae
pop
gs
sub
hlt
cld
inc
fs
and
lahf
loopne
fsubp
add
lds
add
pushf
cli
lods
popa
ja
add
cmp
xor
adc
arpl
push
in
xor
lahf
leave
cwtl
mov
xchg
add
cs
ja
xchg
std
in
nop
add
dec
in
ljmp
and
int3
jnp
jnp
pop
outsb
jl
notb
out
xchg
mov
sub
and
mov
adcl
mov
xor
insl
mov
mov
mov
lods
andb
sbb
jo
pop
loop
sbb
rcr
cmpl
xor
out
fs
push
roll
push
shlb
add
xchg
xor
mov
bound
aas
sub
or
jbe
loop
xlat
sbb
add
or
xchg
test
mov
adc
inc
cli
out
popa
loopne
gs
and
add
add
sbb
cmp
sbb
enter
or
test
push
add
dec
in
and
in
inc
pop
rcll
int3
add
mov
in
sub
mov
xchg
lods
stc
imul
xchg
loope
mov
cwtl
mov
sahf
fcompl
faddl
lcall
pop
inc
jle
das
cli
sub
push
inc
in
xchg
loop
aad
fists
dec
mov
mov
cmp
in
add
xor
push
fmuls
sbb
hlt
cmp
mov
mov
push
shr
xorl
adc
mulb
add
add
cmc
pop
jae
cmc
push
sub
cmpsl
pop
sbb
seto
scas
mov
lds
jmp
rorl
pop
jb
test
jp
int
adc
sub
add
imul
ja
mov
mov
test
ja
fmull
rolb
mov
add
push
enter
frstor
lea
or
adc
dec
lret
pop
fldcw
aad
xchg
adc
test
hlt
mov
in
sbb
enter
iret
adc
cmp
xor
jecxz
mov
fwait
loope
mov
jmp
ljmp
xorl
ljmp
fcmovnu
shrl
sub
jecxz
outsl
les
rorb
xchg
push
pop
push
xchg
jae
push
pop
repnz
out
arpl
adcb
cmp
lcall
fisttpll
popf
loop
gs
fildl
in
out
xor
movb
mov
out
add
push
jne
mov
jl
add
addr16
sahf
adc
mov
xchg
shrl
cli
fldl
cltd
or
inc
lret
add
add
adcl
das
pop
sub
lock
fcoms
add
pop
gs
clc
mov
aas
es
lea
fcompl
push
mov
cld
inc
ljmp
lods
stos
xchg
fsub
add
lock
ficoml
adc
add
adc
adc
push
mov
sbb
cwtl
mov
xchg
dec
pop
cmp
movsl
push
push
cmp
es
leave
in
popa
cmc
pop
lret
xorb
xor
adc
sub
pop
mov
pop
enter
jbe
add
sarb
popa
add
je
or
dec
cltd
pusha
mov
push
push
adc
test
fnstcw
test
push
adc
pop
sub
repnz
jp
adc
testl
nop
inc
addb
and
jmp
iret
dec
cmp
add
and
push
daa
cs
out
sbb
loopne
sbb
mov
stos
gs
mov
mov
jge
inc
popf
lods
push
fdivl
das
add
mov
adc
lcall
sbb
or
add
jmp
cmpsl
mov
stc
lahf
inc
es
push
pusha
test
iret
lret
es
addr16
dec
repz
mov
lret
pop
adc
xor
dec
mov
dec
push
or
mov
mov
je
mov
mov
les
pop
adc
andb
cmpsb
ljmp
dec
or
insl
pushf
stos
jns
push
dec
mov
mov
sarl
lret
mov
mov
jge
sahf
movsl
ret
push
jbe
std
adc
cltd
mov
popa
pop
fbstp
outsl
fld
mov
rcll
sbb
mov
adc
addr16
sbb
div
fsubrs
push
shrb
orl
movsl
pop
aas
mov
jns
add
scas
insb
movsb
jecxz
xor
mov
cmp
xchg
scas
mov
xchg
imul
mov
or
gs
sub
addb
sub
xor
movsl
divl
popa
outsl
sbb
in
xlat
ret
call
xchg
pop
les
out
xchg
jo
movsb
xor
into
jecxz
out
push
stc
add
jae,pn
lret
cmpsb
mov
js
ljmp
mov
pushf
outsl
push
and
out
imul
mov
lds
mov
shlb
lahf
dec
punpcklbw
cs
insb
filds
mov
jmp
jmp
jo
mov
dec
push
add
daa
sub
scas
adc
xchg
icebp
sub
jno
jne
mov
adcl
pop
repnz
mov
xor
lods
or
ret
push
dec
pop
jbe
std
insl
fistpll
and
jo
andl
int
add
sarb
stos
arpl
jo
and
dec
add
pop
inc
xchg
cltd
mov
jb
clc
mov
xchg
jecxz
lods
cmpsl
jmp
repz
xor
push
inc
and
cltd
fistpl
insb
loope
cmp
inc
inc
sbb
add
mov
int3
loop
repnz
sub
mov
fnstenv
nop
enter
cmp
push
shr
cmp
sbb
dec
lahf
std
out
sbb
cmpsl
xchg
jp
hlt
ljmp
cmpsl
and
or
mov
out
mov
pop
lahf
fbld
cli
das
int3
lret
lea
and
mov
and
mov
addb
or
dec
ljmp
inc
test
dec
cmp
icebp
dec
inc
nop
ss
mov
adc
push
pop
rclb
negb
push
out
jnp
imul
sti
and
push
adc
in
and
mov
sub
outsl
xchg
xlat
cltd
push
pushf
shr
mov
xlat
mov
sub
push
fwait
test
test
push
add
fcomps
xchg
rcl
daa
mov
mov
sbb
loop
inc
icebp
jp
scas
mov
ret
setl
xor
cmp
aam
xchg
in
and
stos
jp
and
sbb
ss
sbb
sar
test
daa
outsl
pop
mov
or
lods
dec
je
imul
jecxz
cmc
fcomip
add
jmp
mov
lret
fsts
test
push
or
repz
add
fwait
xchg
pop
loop
adc
fsubrl
sub
adc
loop
repz
fisttpll
call
test
xor
sbb
pusha
mov
lret
xlat
out
stos
in
push
adc
ret
out
daa
cltd
lock
xorb
cmp
popf
arpl
nop
cmovno
xchg
aam
pop
mov
and
out
mov
lods
inc
rcl
push
les
rorb
push
pop
pushf
mov
dec
dec
sahf
and
mov
call
call
xchg
or
xlat
pop
mov
movsl
popf
testl
inc
sbb
mov
in
ja
imul
loopne
jge,pn
enter
jge
cmpsl
mov
jl
xchg
xor
in
xor
push
mov
mov
jmp
jbe
scas
add
test
pop
xor
add
fldenv
repnz
sarb
mov
mov
repz
sbb
int3
daa
test
jae
movsb
sbb
ss
scas
push
mov
test
jl
data16
pop
mov
fsubrs
or
xor
sbb
clc
push
iret
cmpsl
cmp
mov
sub
inc
enter
sub
push
and
inc
jmp
stos
xor
and
xchg
sete
mov
cld
in
jle
or
mov
pop
add
mov
mov
pop
adc
push
imul
pop
push
xchg
popf
fstl
mov
movsb
sbb
cli
scas
insb
add
and
subl
dec
sub
sbb
mov
add
jmp
dec
cld
dec
enter
bound
push
or
sbb
mov
orb
xchg
and
aad
mov
cld
mov
sahf
test
scas
push
cmp
daa
pushf
ss
mov
into
sahf
mov
and
cmp
mov
add
lcall
aam
orl
dec
mov
ret
int
jnp
or
mov
jmp
and
pop
mov
push
inc
sbb
cmc
mov
int3
insl
pop
ret
mov
clc
sbb
push
push
lcall
cmp
out
cwtl
push
cmp
cmp
cmp
sbb
addr16
hlt
popf
je
mov
mov
jge
dec
xchg
sbb
ret
xor
popf
loope
imul
adc
shlb
scas
rcr
loope
adc
insl
mov
push
loop
cwtl
icebp
out
xchg
jle
xchg
popf
stos
ss
pop
rcrl
stc
xchg
loop
loope
popa
orb
push
lock
mov
adc
lods
or
dec
xchg
divps
dec
mov
test
aad
je
into
dec
jg
and
cmp
ror
mov
jno
or
push
sbb
das
dec
or
imul
xchg
pop
mov
incb
sbb
fstps
jb
mov
pop
cmp
clc
adc
pop
and
cmp
sbb
inc
in
nop
leave
mov
pop
rcr
mov
push
adc
aam
es
daa
xchg
int
rcl
mov
lods
jl
xor
fs
jno
mov
jmp
mov
ret
sti
push
mov
pop
es
or
cmpl
ljmp
jns
fwait
outsb
xor
icebp
lock
arpl
scas
inc
rclb
push
lock
push
add
mov
sub
fdivrs
mov
inc
outsl
sub
in
shr
rcll
fistpl
pusha
or
xor
jge
fnstcw
xchg
pop
cmpsb
jmp
add
push
pop
add
cmp
mov
or
jnp
inc
jg
jle
jecxz
sub
or
clc
dec
inc
xor
sahf
mov
fcoms
ja
and
addr16
add
fs
cmpsl
fsubs
jmp
fldcw
xchg
or
ja
fneni(8087
push
sub
xor
imul
cmpsl
and
sarb
adc
sub
xor
xor
inc
and
inc
xor
push
pusha
xchg
lahf
pop
lds
push
dec
sahf
xchg
sub
mov
fwait
gs
pop
dec
xchg
outsb
dec
pop
lcall
cli
fwait
scas
out
ljmp
cwtl
push
lods
shll
cmpsl
inc
sbb
and
dec
std
add
lcall
push
neg
lret
mov
les
jnp
aam
inc
cs
and
outsb
pop
nop
mov
jl
mov
dec
xor
loop
movsl
sar
sub
addr16
mov
out
dec
out
cltd
inc
dec
sbb
ja
movsb
fbstp
inc
pusha
stos
repnz
jecxz
into
sbb
cmc
mov
scas
jge
mov
push
fs
cmp
mov
ljmp
shr
in
pop
movsl
adc
xchg
pop
lods
mov
lcall
dec
insl
or
popa
mov
dec
push
push
fwait
xchg
push
fdivl
cmp
mov
cmp
cld
sbb
pop
and
std
pusha
fistl
cltd
lock
xchg
sub
push
lods
jne
jno
test
xor
inc
sbb
movsb
rolb
jne
mov
stc
xchg
int3
mov
mov
cltd
jle
push
push
push
sbb
sbb
inc
orb
repnz
and
leave
lea
rol
in
rorb
arpl
sbb
rcll
xchg
sub
movsb
xor
xchg
adc
jmp
jl
lret
xor
ror
daa
pop
les
jbe
jae
daa
notb
mov
ds
and
sub
mov
cltd
outsb
push
pop
sbb
xor
mov
mov
in
stos
clc
pop
int
mov
mov
leave
adc
add
imul
add
add
fidivrs
sbb
jg
inc
jns
xchg
adc
xchg
adcl
shlb
mov
arpl
scas
mov
or
mov
jo,pn
test
and
xor
cmpsl
add
cld
mov
rcrl
loopne
push
jne
and
into
pop
test
push
or
insl
mov
and
dec
push
mov
into
sub
inc
sti
xchg
lods
cs
push
or
sbb
fadd
cld
inc
mov
jbe
mov
pop
lods
jmp
sub
sub
inc
mov
sbb
negb
inc
fidivrl
push
arpl
sbb
mov
cld
jbe
mov
clc
aam
xor
mov
jmp
mov
in
sti
jl
inc
push
repnz
push
xor
xchg
lds
mov
jmp
pop
addr16
pusha
cmp
fmull
add
es
sub
xor
out
call
gs
add
sahf
fcoms
mov
sbb
ss
push
xchg
sub
jle
test
ds
pop
pop
lret
mov
jbe
sbb
test
jle
ja
outsb
dec
cmp
enter
adc
jecxz
iret
imul
pop
lahf
loopne
mov
jne
hlt
push
outsb
lahf
movaps
fimuls
ret
out
rorl
je
repnz
dec
mov
and
into
imul
mov
ret
mov
cmpsl
int
adc
sti
mov
out
int
mov
lea
xor
jb
dec
sub
mov
daa
jmp
mov
int3
dec
sbb
out
mov
stos
inc
fmull
rcl
mov
ja
dec
mov
pop
mov
arpl
lods
incb
bound
pop
aaa
cltd
xor
iret
cmp
mov
inc
mov
jns
stc
adc
orb
and
inc
and
xor
data16
ja
ret
mov
mov
mov
ja
xor
loop
out
icebp
add
xchg
cltd
test
dec
mov
and
pop
push
sbb
repz
push
cmp
insb
mov
sub
push
and
mov
sbb
fdivp
xor
fidivrs
mov
rcrb
cmp
test
sub
pop
jb
pop
or
xchg
jbe
in
dec
idiv
test
push
sbb
inc
repz
jbe
pop
xor
cmc
stc
clc
pop
jbe
xorb
js
stos
imul
mov
inc
ret
push
dec
sbb
push
adc
push
inc
jo
pop
aam
adc
ljmp
popf
out
insb
mov
sbb
pusha
sbb
pushf
bound
jns
stos
inc
popa
mov
mov
fisttps
sub
nop
pop
cmc
aaa
shl
add
and
jge
fmull
dec
loope
ficoms
ret
dec
iret
add
xchg
xlat
mov
test
xchg
sahf
cld
aam
jecxz
imul
pop
pop
add
loop
push
into
clc
add
xchg
inc
repz
cmp
fistpl
mov
pop
notb
rol
or
inc
xchg
pop
std
or
popf
in
and
call
test
imul
xor
push
bound
mov
jae
cmp
mov
shrb
lods
fnsave
and
mov
mov
pop
sub
sbb
or
mov
les
dec
and
iret
movsb
add
sbb
add
int3
arpl
fcmovnu
lds
loop
shll
adc
mov
pop
lds
stc
cmpl
jmp
ret
sarl
sub
pop
addr16
lods
shlb
adc
and
xorl
cmpsb
rorb
rclb
inc
mov
and
clc
xchg
in
push
test
addr16
pop
dec
and
mov
inc
inc
hlt
adc
pop
addr16
lahf
mov
out
mov
lcall
push
arpl
jp
les
fldcw
shll
mov
push
xor
ret
shlb
mov
fwait
scas
dec
sub
or
dec
in
sub
cwtl
dec
outsb
mov
mov
or
adc
xchg
movsl
mov
inc
dec
pop
hlt
mov
repz
pop
dec
pop
push
imul
add
out
movsl
mov
push
mov
dec
lret
fwait
pushf
leave
cmpsl
subl
mov
outsl
insl
inc
loop
xorl
shlw
mov
ror
aad
push
in
jb
cld
and
sub
test
add
out
mov
rcll
fs
mov
push
jge
mov
stos
lret
hlt
jge
inc
xchg
stos
loopne
aas
pushf
add
inc
inc
scas
sub
insl
fistps
xor
cltd
ss
repnz
lret
xchg
out
es
mov
jb
mov
loop
out
jae
pusha
fidivs
into
push
mov
je
push
jp,pt
aaa
mov
cmp
mov
repnz
pop
or
inc
dec
jmp
and
paddq
sti
leave
push
and
in
std
idivb
xchg
lret
outsb
adc
iret
cmp
dec
mov
aad
out
xor
add
add
jbe
ret
inc
lret
test
mov
adc
mov
dec
xchg
sbb
mov
lock
rcr
out
jne
cmc
inc
mov
mov
inc
js
lret
sub
inc
pop
int3
out
call
inc
mov
sahf
cmp
push
scas
dec
in
pushf
cmp
hlt
adc
mov
inc
mov
imul
cmp
push
ja
outsl
add
mov
pop
clc
mov
lods
dec
ljmp
frstor
mov
xchg
mov
xor
mov
and
xor
cmpsl
into
mov
addr16
cmp
out
loope
test
clc
insb
and
add
pop
adc
jle
lock
stc
adc
pop
mov
dec
je
arpl
scas
stos
lea
shll
pop
add
push
fisttpll
scas
popa
jecxz
inc
in
out
push
fnstcw
mov
cmp
int3
and
cs
insl
leave
add
add
jae
add
xlat
sti
je
aad
push
add
insl
and
sbb
add
xchg
js
mov
adc
incl
cmp
in
scas
testl
mov
dec
stos
outsb
int3
push
mov
loope
dec
ret
inc
or
dec
fnstenv
pusha
lret
and
mov
jb
ds
out
stos
daa
jmp
jmp
mov
rorb
lods
loope
pop
insl
shlb
jns
lret
xchg
cmc
std
push
idiv
mov
inc
cltd
adc
jle
or
add
jns
inc
or
aaa
inc
xor
arpl
sahf
lret
addl
iret
mov
dec
jmp
mov
mov
dec
add
repnz
orl
iret
mov
sysenter
sbb
hlt
lods
sub
insb
orb
jns
stos
movsl
xor
test
in
push
push
xchg
outsl
pop
ljmp
sub
out
mov
push
xor
gs
mov
lret
or
scas
push
lcall
pop
stos
xchg
xchg
outsl
rorb
jbe
test
nop
sub
sbb
pop
pop
cld
out
repz
sahf
cmpsl
sub
or
loope
push
sahf
xor
or
dec
xchg
in
dec
and
pushf
pop
mov
nop
not
jb
pop
mov
in
iret
push
mov
jo
icebp
add
insl
and
cmp
testl
xlat
xchg
xchg
fstpl
mov
in
in
ss
fstps
sub
pop
pop
pop
sarb
mov
cmpsl
ljmp
xor
cltd
ja
mov
cmpsl
or
les
addr16
push
xor
and
mov
mov
insl
rcr
fstpl
pop
adc
inc
popa
push
cmp
adc
push
jecxz
icebp
fwait
cmpb
sbb
cs
nop
call
shlb
xor
cmpsb
test
insl
popa
cs
lret
mov
imulb
inc
mov
dec
rclb
pop
mov
sub
loopne
insb
adc
push
inc
adc
cmp
ret
mov
jmp
pop
sarl
mov
and
mov
test
nop
inc
cltd
lret
fs
xchg
mov
and
in
xor
xchg
adc
inc
outsl
xlat
inc
xchg
mov
lock
mov
dec
pop
xchg
scas
fs
or
ljmp
mov
lods
jmp
xchg
loope
and
pop
ja
rcr
arpl
insl
ret
pop
mov
test
pop
cmpsb
popa
out
and
pushl
xchg
dec
sub
mov
push
pop
lcall
shl
sbbl
dec
das
xchg
dec
imul
sub
jnp
je
add
pop
das
mov
or
rolb
andl
xlat
cmp
insl
orb
xlat
out
pop
jmp
and
in
xchg
and
pusha
xor
flds
lahf
inc
lods
add
cwtl
xchg
test
in
dec
xlat
repz
jo
push
cli
jecxz
int3
movsb
jae
ds
fs
push
and
in
xchg
pop
shlb
add
xchg
add
pop
aad
xchg
mov
push
fists
sbb
add
and
jae
sub
xor
pop
add
aad
jno
push
cmpsb
mov
push
rcrb
jle
aas
ret
cmpsb
push
inc
jecxz
shll
lds
inc
out
mov
bound
iret
aad
mov
test
sub
ss
mov
or
testl
gs
xor
scas
stos
push
lahf
addr16
adc
ljmp
mov
cmc
mov
and
or
insl
jo
fiadds
adcb
cli
fnsave
pop
xchg
test
mov
mov
fidivs
in
push
sbb
dec
rolb
xor
lahf
cmpsl
xchg
ret
mov
ljmp
add
dec
mov
dec
ljmp
push
mov
adc
add
add
add
out
xlat
mov
or
ret
sbb
xchg
test
mov
idivl
add
cmp
mov
dec
push
mov
mov
xlat
sub
nop
dec
pop
mov
or
jb
sbb
sub
sarl
std
call
sti
rcrl
stc
daa
sbb
pusha
inc
sub
sub
jl
repz
das
lods
push
add
in
int
out
out
adc
pop
ja
inc
sbb
adc
leave
xchg
push
out
jl
xor
sbb
push
mov
xor
push
mov
es
daa
jbe
lods
fpatan
jle
dec
mov
jmp
insl
mov
cmp
sbb
pop
jnp
lea
jmp
jmp
clc
jo
ss
mov
mov
ljmp
mov
jbe
jecxz
popa
inc
inc
add
mov
or
dec
mov
jmp
or
mov
jecxz
adc
popa
sti
movsl
push
and
sbb
mov
scas
cmp
leave
sbb
fimuls
cmp
adc
outsl
mov
cmpsb
ffreep
inc
jg
sub
sar
movsl
test
cli
and
push
into
push
mov
cwtl
sbb
jae
stc
arpl
mov
es
push
cmp
inc
push
lds
in
push
gs
sbb
aam
dec
xorl
lcall
test
cmc
sub
pop
lahf
in
cmc
pop
pop
rorb
scas
lfs
pusha
lahf
jno
xor
movsb
loopne
pop
lahf
bound
jecxz
aaa
in
push
mov
fcompl
ljmp
popf
mov
fistl
jle
mov
pusha
mov
mov
mov
bound
les
fcmovnb
inc
scas
movsl
push
sbb
roll
add
pop
push
testl
xchg
jle
subl
cwtl
in
add
lret
add
cmpsb
xor
fistpll
sub
je
adc
ja
shlb
xchg
mov
inc
adc
push
aas
imul
rorl
leave
int
xchg
cmp
mov
inc
dec
aas
push
les
sub
sbb
jge
nop
fnsave
jae
dec
pop
push
dec
or
mov
addr16
cmpsb
shrb
inc
adc
sub
repz
mov
es
sub
xchg
or
cmp
fistpl
sub
mov
scas
jle
pop
adc
jnp
daa
repnz
fiadds
inc
loop
xor
push
pushf
xchg
inc
dec
jge
stos
fistpll
fbstp
pushl
pushf
mov
pop
pop
cmpsl
jb
mov
fimuls
xor
aaa
xor
push
cmp
xchg
or
jb
xor
pop
sbb
push
mov
push
push
test
inc
test
pop
rol
adc
js
cmp
mov
test
and
out
leave
ja
dec
mov
sub
or
pop
pop
mov
loopne
mov
orb
ljmp
cmpsb
or
add
ret
xor
aas
fdivrs
rcrb
push
out
xchg
lock
lahf
mov
jle
lret
adc
push
jecxz
andb
and
pop
cmpsb
repz
mov
jbe
sarl
push
mov
pop
aas
adc
movsl
dec
push
pop
in
mov
mov
push
lods
add
jb
cmp
dec
jno
std
test
inc
xchg
stc
or
bound
test
lahf
data16
xchg
dec
sub
mov
out
cmpsl
push
arpl
fsts
pop
les
stc
arpl
add
jns
xorl
sub
ficompl
xor
shr
addr16
orb
fnsave
ljmp
add
xor
mov
call
xchg
jecxz
gs
ror
in
out
cmpsl
push
cld
mov
pop
rcl
or
add
pop
pmaxub
or
sahf
pop
outsb
inc
adc
sub
sarb
xchg
push
jle
in
cld
or
cwtl
mov
in
out
stos
sub
add
out
mov
xchg
sub
mov
adc
or
cmp
imul
xor
lock
repz
mov
and
jno
sub
data16
ss
mov
dec
jne
in
flds
jle
movsl
mov
cld
rclb
pop
scas
out
dec
push
lock
cwtl
inc
mov
scas
ficompl
dec
jo
push
mov
mov
and
sbb
jne
xchg
jne
inc
mov
xchg
or
sub
aam
add
sbb
mov
clc
mov
mov
or
ret
rcll
mov
inc
cmp
test
dec
or
mov
iret
repz
xchg
out
or
jle
lahf
pop
jnp
ficoml
mov
mov
mov
xchg
jle
pop
fabs
adc
or
add
bound
lahf
outsb
insl
mov
popf
xchg
xchg
es
add
sar
aaa
popf
loopne
sub
scas
xchg
inc
inc
imul
and
mov
or
xchg
test
adc
outsb
outsb
cld
ss
dec
add
or
xchg
dec
es
les
sub
jecxz
movsb
scas
hlt
add
in
mov
stos
fidivs
add
fimull
inc
push
ja
andb
push
inc
testb
mov
lods
pop
mov
lds
add
js
pop
push
pop
data16
pop
or
pop
cmp
inc
lods
inc
xchg
jne
pop
push
cwtl
or
cmp
mov
cs
pop
push
scas
pop
shll
sub
insl
add
dec
add
rclb
orb
testb
lea
xlat
sub
popf
gs
push
sub
pop
fwait
add
cwtl
sbb
adc
adc
jnp
xor
jbe
jmp
loope
loop
das
xlat
repz
ljmp
cwtl
and
adc
pop
stos
jnp
jle
shrl
or
cmp
adc
mov
mov
xchg
mov
stos
pop
xchg
dec
in
xchg
aam
std
xchg
cltd
dec
push
push
sbb
cli
xchg
adc
enter
test
loop
pop
subb
mov
xor
testb
mov
inc
push
cmpb
scas
jbe
xlat
ret
push
mov
in
pop
pusha
xchg
add
out
movsl
or
movsl
pop
mov
pop
test
xor
xchg
sbb
inc
enter
scas
add
or
cmp
out
xchg
sub
xchg
pop
test
cmpsl
cmp
shl
mov
or
or
mov
xchg
out
in
cli
adc
movsl
add
xchg
testb
sbb
xchg
rol
dec
jb
cmc
sbb
inc
test
jl
and
rcl
mov
xchg
fistpll
xlat
jbe
test
dec
cltd
out
pop
inc
push
mov
sbb
rolb
int3
in
call
inc
cltd
out
call
xor
mov
jnp
popa
jno
aas
xor
jmp
mov
or
cli
adc
adcb
es
or
xchg
mov
add
fldl
loope
mov
pusha
add
cmp
scas
jns
inc
dec
lea
xchg
pop
sahf
jno
xchg
xor
cmp
clc
dec
dec
shll
push
lea
pop
imul
cwtl
sub
cltd
adc
jp
fistpl
mov
push
sbb
in
in
push
pushf
sub
cltd
movsb
adc
lods
in
leave
cmp
fsubrl
and
in
pop
sub
sub
shlb
scas
repnz
in
xlat
xchg
jg
pop
aad
inc
aad
rorl
cmpsl
fiadds
out
cmc
sbb
test
mov
mov
adc
jecxz
adc
rcrb
mov
fnstcw
jmp
push
jno
push
pop
push
or
arpl
ds
int3
push
inc
ret
sub
mov
iret
cltd
add
mov
pop
int3
daa
sbbb
mov
push
pop
jns
dec
cwtl
xor
fcomps
xor
mov
mov
ret
loop
sbb
mov
fbstp
cmp
incb
jg
test
in
fidivs
sbb
add
icebp
push
test
sbb
repnz
xlat
xlat
adc
mov
test
les
pop
lret
hlt
out
mov
xchg
mov
push
jle
jge
jb
rcrb
iret
lods
sub
js
fwait
mov
add
into
inc
aad
or
xor
push
lret
mov
mov
aam
lods
add
jno
ret
push
pop
pop
cld
dec
repnz
pop
add
pop
in
sbb
cli
in
ja
and
pop
dec
xlat
cld
inc
cmp
jae
in
ds
ja
fcompl
add
lret
das
adcl
inc
jne
fcompl
cmp
cmp
inc
mov
mov
xchg
outsb
adcb
iret
push
push
iret
xor
sarl
sub
mov
jae
xor
xor
jg
dec
imul
lods
push
das
push
mov
jns
xor
aas
jmp
xchg
cmpsb
inc
scas
push
cwtl
add
mov
in
mov
lods
dec
dec
xor
mov
adc
int3
call
pop
shlb
jp
rorl
dec
xor
mov
add
out
inc
sub
push
add
xchg
arpl
push
add
in
and
cmpsl
das
sub
push
jecxz
dec
push
sbb
test
pop
mov
je
dec
lret
scas
xchg
mov
enter
lret
mov
push
mov
push
push
hlt
into
stos
js
std
adc
lds
jle
int3
pop
in
mov
inc
jae
push
cmp
scas
pusha
inc
jmp
push
adc
not
aam
std
push
pop
cltd
notb
stc
int3
out
lds
sbb
xchg
leave
jmp
mov
jmp
lock
out
mov
add
sub
jl
or
call
sbb
loop
push
and
mov
repz
mov
add
addl
test
dec
adc
or
loop
cmp
ret
out
lret
repnz
and
push
push
mov
stos
loop
jl
repnz
mov
aas
loope
push
xor
les
jge
adc
push
push
mov
inc
xchg
and
cmpsl
push
cmp
push
out
add
dec
popa
pop
test
push
mov
xor
addb
xor
dec
jnp
dec
popa
insl
lcall
leave
addr16
cs
xchg
imul
push
outsb
cld
ss
or
adc
and
add
sbb
addr16
leave
and
repz
mov
and
arpl
movsb
popf
mov
cmp
or
outsb
fistpl
dec
gs
mov
mov
test
into
test
adc
orb
dec
popa
sbb
aad
lahf
pop
shlb
jb
sub
cmc
lcall
pop
jmp
xor
or
xor
sarl
out
jp
call
mov
cwtl
cwtl
sub
mov
xchg
inc
push
addl
jmp
pop
push
js
flds
mov
je
mov
test
dec
mov
rclb
clc
sti
aaa
add
fisubrs
push
push
pop
push
and
xchg
mov
mov
movsl
ret
nop
and
mov
mov
mov
out
mov
lea
loopne
fisttps
lods
mov
jne
imul
sbb
dec
fcmovnb
cld
sbb
lea
and
rclb
mov
and
push
jno
mov
dec
in
ret
inc
sub
bound
out
fiaddl
fcomip
sti
or
xchg
pusha
sub
cmpl
mov
clc
outsb
jg
ss
jmp
fmull
sub
dec
push
sti
add
out
add
sub
ds
pop
add
dec
push
pop
and
push
pop
cmp
ret
int3
pusha
inc
adc
and
fdivr
les
sti
out
dec
xor
lahf
adc
xchg
sar
leave
insl
jecxz
iret
inc
ds
in
out
aas
imul
aam
mov
pushf
sub
fcmovnb
push
jne
jo
addr16
data16
add
repz
push
mov
aas
sbb
test
mov
push
xchg
mov
fadds
scas
sub
jg
pop
imul
jmp
adc
pop
adc
arpl
clc
imulb
mov
jge
and
cli
iret
int
sbb
gs
mov
jecxz
add
out
push
xchg
pop
and
fdiv
mov
bound
ret
push
push
cwtl
fstpt
mov
jno
xor
inc
fsubr
pop
cmp
out
rcrl
mov
rclb
fldenv
dec
mov
icebp
xabort
mov
call
jge
cmpl
xor
and
jl
int3
sbb
popa
fsubs
mov
pop
mov
daa
cld
movsl
adcb
in
xor
add
sub
dec
in
jp
nop
stc
mov
dec
test
fcomip
sbb
addr16
adc
xchg
loopne
and
add
nop
sbb
lret
dec
or
lcall
jmp
lods
sub
pushf
fucomp
mov
loopne
adc
add
notl
ret
movsb
fwait
xchg
jnp
mov
lcall
or
pop
pop
sub
xchg
std
jns
mov
jnp
cmp
mov
mov
jle
gs
pop
es
ss
inc
cmp
leave
cmc
jbe
sbb
and
xor
sbb
jb
mov
stos
mov
flds
xchg
cmp
aad
shll
ret
cli
repnz
add
scas
imul
jae
sbb
dec
push
loop
mov
jmp
loop
out
mov
imul
mov
subl
inc
lock
out
sti
rclb
repnz
sbb
je
adc
stos
movl
test
mov
hlt
adc
andnps
sub
sub
mov
xor
lods
cmp
add
xor
scas
movsl
push
mov
fbstp
xchg
loop
and
loop
xchg
adc
aam
xor
dec
js
add
pop
mov
xchg
or
stos
inc
fsubrl
sub
jns
inc
push
inc
xchg
mov
repnz
and
xor
jge
mov
push
jno
and
or
sbb
mov
movsb
xchg
push
and
dec
inc
std
sub
in
popa
ficomps
mov
scas
call
das
or
cmp
mov
sbb
xchg
mov
dec
negl
xlat
xor
mov
push
pop
outsb
ja
pop
sbb
shrb
jge
mov
je
inc
ljmp
js
add
sub
sbb
adc
cmpsb
js
dec
cmp
rcrl
rcll
test
sbb
mov
mov
or
and
pusha
mov
mov
and
stos
gs
pop
mov
lret
or
cmp
mov
add
dec
sti
lods
xchg
xchg
sbb
mov
adc
stos
mov
cmp
dec
pushf
imul
and
jb
jecxz
daa
mov
mov
into
mov
lret
loopne
mov
subl
cmpb
dec
sbb
xchg
jle
arpl
jbe
adc
lcall
add
mov
notl
xor
clc
in
cli
ds
cmp
mov
shlb
mov
aaa
pop
xor
fisubl
cmc
out
or
fsubl
push
jg
addr16
mov
bound
push
jno
mov
xchg
cld
inc
clc
push
leave
sub
ret
sti
and
sbb
inc
mov
jae
out
jl
aad
mov
gs
push
mov
adc
xchg
sub
push
adcl
sbb
pushl
aas
stos
stc
pop
mov
pop
or
shrl
jns
inc
or
shrb
push
inc
shrl
aaa
mov
inc
mov
push
lret
inc
xchg
pop
jbe
pop
fbld
push
fsubl
ljmp
nop
push
sbb
xlat
jae
mov
dec
ja
lahf
mov
or
pushf
add
dec
addl
popa
in
xchg
dec
lahf
in
inc
cmp
dec
stos
jae
cli
adc
out
cmp
popf
bound
and
ret
mov
push
and
or
insb
push
daa
bound
and
jle
int3
push
mov
add
add
xchg
mov
sub
jg
jl
lock
fwait
add
clc
inc
outsb
pushf
pop
mov
in
push
inc
arpl
popl
pop
lahf
repnz
xchg
mov
imul
or
cmc
nop
sub
jge
cmpsl
lret
sub
push
loope
stc
lret
clc
jl
mov
loopne
andb
mov
xchg
pop
add
sub
loop
ror
pushf
roll
mov
xchg
int3
fldenv
pop
into
jmp
fcomps
fstpl
mov
adc
pushf
loope
jle
jge
sbb
ljmp
cmpsl
fmull
inc
ror
jg
push
mov
xchg
nop
lods
out
mov
fwait
ja
dec
fsubs
sbb
inc
aas
call
je
std
push
adc
pusha
xchg
aam
cmc
neg
cmpsb
je
xchg
and
pop
movsl
scas
lea
cmpsb
sarb
sub
mov
sbb
ficompl
inc
xor
adc
adc
pusha
out
or
mov
dec
sbb
gs
mov
or
push
jmp
and
cmpb
jae
shll
ds
mov
dec
je
test
and
push
ds
xor
pop
pop
call
sbb
out
mov
cmp
mov
icebp
pop
shl
addb
fmul
and
cmpl
sbb
dec
adc
xchg
cld
int
shll
mov
jne
dec
push
pop
push
sti
sbb
pusha
xchg
mov
dec
hlt
mov
lea
cmp
shrb
jno
mov
sub
inc
sarl
dec
push
shrl
cmpsl
mov
mov
mov
andl
xor
pushf
jbe
push
cmpsl
inc
jle
push
fsubrs
pushl
jp
and
movsb
dec
adc
mov
xchg
cmp
mov
sub
add
out
aam
inc
lds
repnz
stc
cmp
shld
pushf
sub
mov
sti
sbb
mov
adc
add
mov
adc
or
sbb
add
sub
cmp
xor
int3
testl
lahf
sbb
fldcw
jecxz
or
inc
jb
and
jo
and
dec
fsubl
fadds
icebp
nop
mov
pop
out
sarb
or
jbe
inc
jne
iret
push
fchs
push
mov
jp
inc
mov
and
imul
dec
mov
push
mov
mov
mov
vprotb
addr16
lcall
lds
lock
mov
adc
fiaddl
fdivs
mov
repz
pop
xchg
add
dec
inc
jo
xchg
adcb
push
xor
loope
sub
cmpsl
dec
inc
clc
xchg
jb
dec
xor
jne
pop
pushf
aas
xor
out
imul
stos
stos
je
adc
inc
inc
in
pop
push
jne
jbe
mov
mov
sbb
clc
imul
adc
ljmpw
or
add
fcomp
bound
adcb
push
mov
push
adc
mov
addr16
or
inc
push
inc
inc
repnz
aad
or
mov
mov
inc
je
bound
in
and
add
push
jecxz
mov
insl
das
mov
sbb
jns
loopne
lods
repz
outsl
stc
lret
arpl
pop
sub
out
xchg
sahf
jns
insb
add
sbb
xchg
inc
push
sub
xor
adc
ds
jle
push
jns
pop
dec
lret
cltd
push
inc
inc
cmpsl
xor
mov
or
popf
mov
and
fdivl
mov
into
mulb
jne
push
iret
aad
cwtl
lea
push
push
lock
imul
jnp
jo
out
mov
or
xchg
rcr
pop
scas
dec
shrb
sti
icebp
add
cli
enter
xor
fdivr
sti
repnz
test
mov
pop
or
sti
rorb
les
xor
pop
xchg
pop
fdiv
xchg
or
sub
imul
lea
fcomip
mov
out
pop
push
ja
inc
xor
sub
mov
mov
lods
mov
adc
jae
or
test
sbb
int
xor
addb
pop
push
sbb
loop
mov
arpl
cli
loop
lods
adc
mov
movq
or
or
daa
xchg
xor
les
mov
icebp
jnp
push
xor
fdivs
pop
xchg
jns
xchg
adc
push
out
mov
dec
xor
push
test
inc
test
push
mov
data16
out
movsl
xlat
mov
daa
jg
xchg
push
jo
mov
adc
pop
sarl
leave
enter
sbb
aam
mov
ret
movsl
sub
test
jle
cmp
mov
scas
sbb
orb
jl
mov
inc
lock
or
add
stos
leave
adc
pop
cmp
fwait
pop
or
adcl
lods
outsl
xor
cmpsb
fucom
setns
dec
ror
xor
int
push
xchg
add
lods
add
les
jge
out
subl
test
cld
inc
clc
fcomp
or
sbb
cmc
push
bound
lds
in
sub
adc
jae
test
adc
pusha
cmp
icebp
pop
aad
or
jmp
sbb
mov
push
sub
clc
hlt
mov
mov
push
aaa
push
arpl
lcall
repz
pop
fcmovnu
rolb
insl
adc
or
xchg
dec
enter
adc
ja
scas
lcall
or
mov
xorl
loopne
movsb
test
pushf
mov
lods
jo
cli
jae
in
cmp
test
daa
std
mov
add
push
mov
jo
sbbl
shlb
insb
mov
pop
adc
ss
xor
jl
mov
sbb
cld
sbb
lahf
sbb
fwait
out
mov
adc
lret
fdivr
fcompl
mov
add
mov
push
add
stc
mov
int3
or
cwtl
cmp
mov
lret
cwtl
es
mov
jbe
iret
mov
or
das
nop
incb
rol
inc
mov
jns
sbb
int3
mov
lcall
jno
xchg
cmp
xchg
xor
cmp
pand
jge
insb
flds
loop
out
xlat
cmc
jo
into
gs
pop
xchg
test
aas
sub
aaa
movsl
jl
fadd
pop
sbb
lock
loope
enter
mov
push
sahf
loope
hlt
fs
jp
aaa
xchg
leave
addl
adc
and
sbb
nop
mov
xchg
fiadds
repz
xor
mov
or
push
jg
movsb
inc
mov
int3
xor
lret
adc
ss
in
insl
popa
mov
test
out
icebp
sbb
sahf
test
add
jbe
test
divl
pop
enter
loopne
or
inc
sub
ja
mov
out
loope
push
fildll
aas
jo
inc
int
dec
fs
xchg
leave
mov
sub
ss
psubsb
dec
mov
rcrb
sbb
aaa
insl
and
les
xor
sub
dec
dec
int3
fs
lods
les
xchg
sbb
or
pop
and
jo
adc
pop
jo
mov
addr16
mov
xchg
lods
push
xchg
ja
add
scas
fdivp
shll
cwtl
aas
xchg
inc
push
cmp
dec
ljmp
movsb
insb
sub
xchg
push
or
cmp
test
lahf
lods
pop
dec
xchg
lods
xor
call
call
mov
imul
icebp
dec
jmp
cli
sbb
jo
sub
test
aas
in
pop
loopne
mov
adc
call
adc
jae
mov
popf
xor
aad
mov
lods
mov
ja
inc
add
ret
sbb
cmc
in
fsubl
sub
mov
aam
and
pusha
dec
into
jge
sub
pop
add
mov
xor
add
clc
js
dec
push
scas
out
xchg
and
adc
jp
and
faddl
xor
lcall
mov
jne
or
dec
sbb
js
mov
dec
fldcw
ds
cmp
xchg
dec
iret
ret
jmp
mov
xor
mov
mov
add
test
test
cli
adc
push
or
les
gs
negl
mov
pop
mov
pop
sub
pop
cmpsb
or
push
xchg
test
hlt
cs
or
aad
xor
push
in
add
lock
cmp
xor
xchg
lret
scas
int3
test
scas
mov
lds
push
sarb
hlt
ss
inc
insb
scas
int
jae
cltd
pusha
adc
mov
test
andl
dec
xchg
cmp
dec
pop
into
lret
cmp
or
sarb
cmc
clc
xchg
mov
out
push
mov
sub
inc
mov
int3
addr16
sub
rcrb
pop
jnp
cmp
pop
and
sbb
mov
jnp
lods
push
jecxz
jo
movsb
xlat
push
dec
jecxz
and
leave
fsubs
jno
jp
mov
icebp
int3
ficomps
pop
insl
movsb
push
cwtl
push
fucomip
push
ss
jns
xchg
std
jae
dec
ljmp
addr16
inc
cld
adcb
cmp
xor
jno
sub
lods
in
cmp
xor
push
xchg
pop
push
popa
mov
inc
pop
int3
mov
push
pop
in
test
test
xchg
mov
daa
inc
pop
icebp
imul
push
and
inc
inc
les
lcall
pop
sbb
iret
sti
lea
inc
adc
mov
in
mov
sub
xchg
imul
out
mov
lods
jns
mov
lret
cmpsl
out
xchg
and
jl
nop
outsb
jge
mov
inc
popa
xor
inc
add
mov
cmpsl
cmpsl
and
xchg
jmp
ds
add
les
xchg
call
hlt
xor
pop
scas
push
mov
jo
xor
xchg
push
adc
inc
cmp
sub
adcb
cwtl
adc
sbb
sub
jmp
and
jle
add
mov
dec
push
aaa
in
test
imul
jb
bsf
lods
jbe
pop
or
xor
clc
int3
scas
xorb
push
imul
lret
aam
or
fbstp
fxch
xchg
shl
xor
cld
add
dec
pushf
mov
movsl
xchg
sub
aas
mov
mov
popa
stc
ret
mov
pop
movb
mov
xchg
rclb
insl
popa
jno
xchg
rol
nop
add
push
aam
mov
inc
mov
inc
fcoml
orl
subb
xchg
rcl
cmp
add
lds
mov
decb
lds
cmp
xor
mov
fisttpl
adc
mov
stos
out
cltd
jecxz
xchg
mov
out
decl
pop
and
outsb
in
sbb
jno
scas
mov
cmp
lods
sbb
cmp
sbb
movsl
inc
inc
mov
mov
jbe
neg
rorb
shr
clc
mov
cmpsl
aas
ljmp
or
inc
in
adc
loope
and
inc
pushf
cmp
mov
addb
push
enter
xchg
mov
daa
and
sbb
lret
add
enter
test
mov
adc
jo
sub
mov
jmp
inc
mov
mov
invd
lahf
jg
jae
jmp
mov
subl
cmpsb
enter
cmp
sbb
mov
or
pop
jle
movsl
dec
insb
xor
fidivs
mov
mov
mov
lock
xor
lods
and
aaa
inc
cmpsb
insl
into
adc
rorl
cmpsb
fstpl
sub
outsl
inc
lcall
gs
add
scas
inc
ljmp
xchg
mov
jge
aaa
fnstcw
pop
push
mov
sar
cmpsb
cmp
pop
xor
ljmp
or
movsb
or
mov
cwtl
jb
popf
push
pushf
xchg
std
mov
xchg
loopne
ret
xchg
lret
push
imul
movb
xchg
jnp
push
xor
leave
inc
dec
cmpsl
push
sti
mov
lea
cmp
pop
aad
dec
xchg
mov
aaa
add
clc
sbb
sub
repz
ret
je
and
push
mov
lcall
lret
ror
or
lret
inc
loopne
adc
outsb
push
and
jae
mov
or
xchg
popa
mov
inc
aad
pop
sarl
int3
mov
mov
sub
push
lcall
andl
fidivs
sbb
xor
fisubs
dec
xchg
sahf
stc
daa
in
add
pop
stos
sbb
fistps
ljmp
xchg
inc
movsl
stc
mov
stc
fisttpl
adc
sub
pop
mov
adc
jns
inc
arpl
jmp
bound
inc
cmp
mov
adc
test
push
movsl
iret
into
into
jb
std
mov
shl
adc
add
or
sub
jl
ja
inc
xor
cli
pop
jg
fbstp
test
inc
clc
rorl
xchg
dec
insb
jne
mov
mov
jno
add
loopne
sub
pushf
aaa
out
pop
mov
pop
test
xchg
mov
pop
cmp
popf
mov
pop
repz
inc
call
cs
and
in
out
cmpsl
repnz
imul
cmp
aas
hlt
mov
nop
pop
fcomip
push
xchg
in
cmp
aas
shrl
push
fwait
pop
fmuls
mov
push
mov
pop
xor
inc
in
ret
pop
aad
jg
jo
adc
adc
ss
rclb
mov
xchg
mov
jle
test
stos
xor
jo
ret
mov
je
aam
cmp
cltd
cmpsb
fwait
dec
dec
ljmp
add
scas
dec
jl
xchg
aam
ret
and
rcrl
adcb
push
jmp
jg
arpl
ljmp
push
add
and
adc
incb
push
inc
cmp
movsl
sub
inc
push
jbe
sub
lea
arpl
adc
mov
mov
mov
andl
call
repnz
jg
sbb
imul
inc
push
sub
and
int3
inc
loopne
subb
test
jp
mov
push
mov
insb
mov
jb
icebp
add
notl
in
ja
test
das
pop
sti
xor
pusha
hlt
sbb
cmp
xor
adc
pop
pop
push
mov
pushf
repz
movsb
pop
in
adc
nop
cmp
mov
push
xor
in
jle
mov
xchg
in
outsl
leave
inc
fldcw
mov
adc
lock
test
push
pop
repnz
lahf
jb
or
sarl
jns
xchg
stos
mov
in
inc
adcl
rorl
lods
bound
out
repnz
sti
add
jp
fsubrs
sahf
les
es
xchg
and
pop
add
jp
lods
int
dec
fwait
ljmp
stos
aad
ss
add
push
or
std
daa
sti
shrl
loope
xlat
mov
push
xor
daa
mov
addl
push
pop
mov
enter
adc
sub
pop
push
loopne
flds
mov
push
mov
sub
aaa
mov
lock
js
icebp
aad
icebp
fistps
out
sbb
mov
call
inc
jmp
jne
lods
imul
ja
xchg
push
fwait
js
out
jo
sbb
pop
in
cs
mov
clc
cmp
addl
sbb
push
cltd
inc
lock
sub
sbb
cmp
inc
addb
inc
shll
adcl
mov
popf
mov
sbb
es
fldt
flds
cmp
fnstcw
gs
std
ljmp
xor
enter
ljmp
in
in
loope
mov
jno
adc
mov
jg
sbb
stos
mov
incl
outsl
push
fbld
jno
bound
cmp
push
rcr
sub
imul
iret
clc
sbb
and
in
push
subl
addb
fs
xchg
sbb
xchg
mov
clc
and
in
jg
daa
dec
and
outsl
xlat
mov
cmp
xchg
fsts
mov
pop
pop
clc
push
xchg
add
ja
je
sub
jmp
dec
addl
mov
jne
dec
nop
jns
xchg
popa
insl
bound
push
in
aas
inc
jmp
test
mov
insb
jmp
mov
pusha
xchg
movsl
sbb
push
xor
inc
mov
add
pop
mov
in
sub
add
pop
sub
or
lea
test
loope
push
and
ffreep
sbb
pop
daa
jp
and
adc
or
cmp
dec
cmp
dec
in
addr16
cli
incl
mov
and
enter
std
int
inc
mov
lcall
inc
aam
or
into
ss
aaa
and
dec
xchg
pop
adc
lahf
cli
push
iret
loope
adc
adc
push
js
mov
inc
dec
jno
out
adc
xchg
mov
into
pop
mov
add
cmpsl
push
les
pop
clc
out
adc
test
stos
mov
aam
shrl
mov
scas
leave
mov
fsubrl
adc
cmp
les
mov
aas
mov
xchg
int
sbb
cwtl
je
add
jae
push
xor
adcl
mov
cmpsb
movsb
mov
jmp
and
sub
xlat
pop
jae
jle
mov
sbb
scas
add
scas
fisubs
les
push
dec
sbb
insb
addb
push
jb
ljmp
or
mov
jmp
jmp
mov
out
cmp
jge
insb
cmp
cmpsl
xchg
ret
inc
in
mov
mov
aaa
fadds
sub
mov
loop
push
dec
insb
cld
mov
orb
fucom
hlt
sub
and
popf
mov
dec
jg
das
sbb
sahf
outsl
cmpsl
lret
mov
xchg
ss
int
lods
jns
test
imul
aas
leave
repnz
xchg
movsl
inc
or
inc
je
add
mov
push
loopne
add
ret
fdivl
sbb
enter
push
repnz
adc
leave
lods
test
sbb
push
xchg
xlat
ds
pop
in
push
mov
pop
lock
sub
mov
pusha
add
sahf
xor
jmp
add
dec
mov
pop
test
fs
out
cmp
or
mov
cmp
sub
out
js
jbe
mov
inc
mov
cli
decb
push
jl
hlt
mov
ds
xorb
pop
jle
sbb
decb
and
or
popa
sbb
mov
test
mov
in
ret
popa
or
jge
pop
lock
push
mov
loop
adc
pop
xchg
mov
pop
in
inc
mov
lds
pop
sub
rcll
add
mov
push
lret
sbb
rcrb
cmp
in
loope
jnp
mov
mov
pushf
or
call
popf
sub
loopne
mov
popa
jno
jb
jp
in
sub
mov
repnz
mov
dec
or
xchg
shl
fildl
xor
clc
or
xchg
hlt
mov
scas
iret
push
scas
inc
xor
pop
add
aaa
aad
mov
out
sbb
add
bound
or
iret
and
movsl
mov
js
and
ds
stos
add
jp
sub
sub
or
dec
hlt
push
pop
rcrb
dec
xchg
push
cmp
lcall
xchg
popa
addr16
out
inc
xchg
test
xor
int
sbb
and
xchg
xchg
pop
cmp
lods
icebp
stos
adc
out
mov
stos
jnp
jbe
insl
mov
jge
jo
mov
add
mov
push
xchg
in
mov
gs
in
popa
and
xchg
arpl
mov
in
pop
outsl
pop
cmpsl
stos
sbb
and
leave
dec
xchg
jae
js
stos
int3
jg
or
lods
lods
xchg
cmp
pop
mov
sysenter
out
in
outsb
jo
fcompl
mov
lock
movb
jnp
xor
leave
popl
popf
decb
out
mov
xchg
lods
lret
mov
fmull
sbb
cli
test
sbb
inc
dec
pop
je
inc
xor
or
cmp
mov
outsb
and
popa
cltd
mov
stc
mov
lock
clc
lahf
shll
cmp
or
and
xchg
and
and
arpl
pop
pop
test
das
jl
rolb
test
mov
add
repz
xchg
ret
adc
inc
inc
rcll
into
cmp
jl
cmpsb
adcl
push
or
and
std
and
std
dec
push
mov
stos
daa
ret
out
pop
push
rcrb
dec
push
js
fdivs
push
mov
mov
and
pop
push
pop
testb
movsl
adc
sbb
jbe
push
aad
js
add
or
xlat
mov
mov
sahf
xor
or
xchg
decl
data16
and
ret
mulps
repnz
popa
jge
std
jle
nop
in
je
sub
jb
mov
add
adc
in
xor
aad
jb
mov
adcl
out
mov
cmc
repz
xchg
ljmp
leave
fcoml
lcall
sub
fstl
das
repz
xchg
mov
and
push
lds
movsb
xor
xor
movsb
mov
ja
jne
pop
repz
sub
test
dec
fbld
or
push
lahf
insl
stc
mov
xchg
inc
out
hlt
mov
add
pmaddwd
inc
mov
and
movsl
incb
jp
mov
mov
insb
fs
repnz
std
mov
pop
inc
aad
scas
push
push
push
lret
mov
adc
or
pop
xchg
addb
sarl
mov
pusha
fsub
cli
push
jge
or
ds
dec
pushf
cltd
xor
test
aaa
stos
jl
repz
inc
loope
fadd
jne
xchg
mov
aas
xchg
inc
add
test
inc
inc
xor
inc
fisubs
das
in
jne
popl
es
dec
push
ss
pop
iret
pop
andl
adc
and
xor
in
js
cmp
call
xchg
sub
mov
pop
xchg
into
stos
and
pushf
xor
push
mov
add
mov
sub
adc
pop
stos
sbb
inc
mov
test
jp
data16
mov
sti
fidivs
xchg
add
sbb
movsb
mov
cltd
cmp
enter
push
sub
in
pop
fsubs
mov
std
subl
imul
cmc
pop
cmp
test
call
cmpsl
lcall
sbb
fldenv
mov
cmp
jg
stc
fnstenv
popf
cld
stos
jno
rolb
sahf
andb
xchg
shr
mov
sbb
add
pushf
xorb
pop
test
jge
jg
cli
fnsetpm(287
xor
push
mov
repz
pop
mov
popf
xor
sti
cmp
add
sub
xor
sub
rcl
sahf
xchg
xlat
pop
fucomip
mov
mov
loope
xor
adc
xor
adc
cmp
bound
outsl
loope
insb
xchg
ljmp
outsb
outsl
dec
pushl
cs
dec
mov
int
lahf
push
mov
push
xchg
xlat
xor
jae
aas
cld
sbb
insl
push
stos
adc
pop
cmp
and
cmp
movsl
push
jge
sub
push
cmp
jge
mov
push
test
push
rorb
or
bound
jno
fs
sub
int3
neg
adc
mov
rcll
mov
lds
xchg
pop
leave
cmp
mov
into
mov
sbb
mov
add
ret
sub
add
xchg
cmpsl
aam
lods
or
aam
push
add
jbe
fidivl
push
push
mov
jge
ret
or
add
push
xor
push
dec
pminub
xchg
add
in
xor
inc
push
stos
mov
and
push
out
inc
push
imul
icebp
push
cmp
sub
xchg
cmpsb
bound
out
ljmp
dec
out
and
cs
sahf
mov
pop
mov
in
jl
lret
repz
xchg
jg
push
jge
sub
lret
jns
jmp
jmp
mov
dec
xchg
cmp
adc
lea
or
add
rolb
sub
cmp
sbb
fcomps
jmp
mov
jns
mov
inc
movsl
dec
push
dec
xor
outsl
xlat
jge
adc
jg
shrl
cmp
pushf
je
jl
jmp
aad
sub
mov
fcmovnb
push
mov
out
push
rcrb
gs
xchg
dec
movsl
jne
int
jecxz
push
pop
les
sub
xor
loop
repz
outsb
aad
popl
sahf
sub
les
sub
pop
and
mov
cmp
xlat
lret
jp
pop
inc
bound
loopne
pop
push
add
mov
and
fprem
add
outsl
jno
icebp
mov
dec
cmp
loop
jge
sbb
repz
leave
int3
mov
into
scas
rolb
insb
iret
dec
fwait
shrb
popf
or
add
mov
push
imul
xchg
pop
es
dec
pop
sub
je
mov
call
shl
scas
jle
pop
push
mov
xor
dec
mov
jecxz
cs
xchg
cmpsl
stc
cli
xchg
jp
or
xchg
cmp
inc
mov
add
and
xchg
dec
and
mov
sbb
sbb
xchg
lods
int3
adc
jae
scas
jge
dec
add
je
cmp
and
into
iret
ret
fucomi
ret
insb
mov
push
push
mov
inc
mov
xor
in
and
xchg
pop
jne
sbb
je
addb
aas
jbe
pop
xchg
jnp
pop
cmpsb
movsl
aad
sub
fwait
jno
stos
popf
inc
xchg
dec
adc
sbb
cmp
jno
into
pop
lret
mov
mov
pop
test
arpl
cmp
xor
adc
xchg
jge
ljmp
sub
xchg
out
outsb
outsl
and
shrb
ds
mov
cli
rcrb
pop
inc
shll
adc
js
aam
cmp
lahf
popa
push
mov
filds
cmp
inc
ljmp
stc
movsl
xchg
sub
je
xchg
popf
bound
sahf
call
mov
movsl
sub
pusha
mov
pop
into
cmp
dec
sahf
push
repnz
int3
xchg
xchg
mov
outsl
and
jno
mov
loopne
inc
mov
jnp
cmpb
jg
leave
fnstsw
xchg
punpcklwd
and
mov
pop
aaa
aas
xor
dec
adc
sbb
enter
add
cmp
fsubl
pusha
jmp
cmp
sarb
inc
outsl
adc
or
fildll
icebp
ret
sub
mov
add
sbb
sub
adc
shrl
inc
ss
test
inc
sbb
add
push
out
xor
adc
call
outsb
add
cld
jle
xor
pop
adc
repnz
jp
sbb
xchg
faddl
push
rorl
mov
sbb
ja
dec
jl
sub
push
add
aas
bound
mov
ret
fwait
daa
xchg
jl
arpl
mov
push
xchg
mov
lret
mov
scas
jp
outsb
sub
lret
xor
test
dec
xor
push
fnstsw
imul
cmp
icebp
sbb
lret
loopne
aam
std
inc
cmp
loope
cmp
dec
nop
mov
loopne
push
add
mov
daa
fldl
pushf
cmp
dec
mov
xor
fsub
adc
pushf
mov
push
ja
movsb
push
jnp
data16
fwait
dec
dec
ret
and
xchg
pop
or
push
sarb
xchg
xchg
aam
jno
loope
ja
cli
or
dec
adc
ds
cmp
dec
sbb
ret
adc
mov
sti
pop
sbb
push
jbe
jp
loopne
dec
mov
cmpl
jge
mov
add
jecxz
lock
lret
sbb
push
mov
mov
fiaddl
out
roll
int3
xchg
sbb
icebp
dec
hlt
outsl
push
jb
loope
scas
pop
bound
push
mov
lahf
loope
mov
rcrl
xor
das
inc
adc
mov
pop
mov
movsl
jnp
repz
out
xor
jp,pt
and
adcl
cmp
xchg
insl
push
in
pusha
xor
sbb
dec
mov
lahf
daa
inc
and
repnz
lret
jg
inc
push
in
sub
push
mov
cmp
shlb
rcr
in
dec
test
sbb
sub
js
roll
xchg
inc
push
pop
sbb
dec
sbb
adc
test
and
in
mov
lahf
and
imull
shlb
push
and
sbb
inc
imulb
fwait
and
jge
iret
int
cmp
xchg
and
jp
scas
out
sbb
stc
test
pop
pop
rcrl
movsl
xchg
pop
jb
ja
xchg
or
lahf
ljmp
lods
or
inc
push
pop
sbb
ror
or
call
loopne
sahf
and
or
pop
jmp
jge
push
adc
out
int3
mull
dec
in
ja
xor
sbb
jb
fsubrl
mov
outsb
pop
fs
lea
gs
inc
call
pop
call
daa
repz
fucomip
and
loopne
jle
arpl
lret
imul
fs
push
int
jg
sbb
or
sub
add
mov
push
dec
xor
pushaw
loope
pop
rcrb
mov
into
pop
pop
or
mov
push
bound
popf
lret
imul
int3
lock
in
push
sub
cmpsb
rcrb
xchg
jmp
bound
out
push
xchg
movsl
icebp
mov
and
roll
jb
jne
movsb
fsts
mov
push
mov
dec
pop
adcl
rcll
int3
gs
lcall
xor
jle
imul
lcall
andl
xchg
loope
dec
shlb
push
adc
imul
rcrl
mov
inc
cld
sahf
outsl
aad
xchg
popa
clc
and
addr16
sub
mov
mov
and
les
shrb
and
lds
incb
mov
fdivrp
mov
stos
fldenv
fs
add
inc
cli
lcall
stc
pop
dec
pop
in
sti
xchg
test
cmp
stos
pusha
or
ret
call
xor
mov
adc
push
add
in
imul
add
lahf
inc
outsb
insb
mov
lcall
aaa
loope
int3
into
adc
push
mov
cmp
mov
mov
fdivrs
cmp
rol
shlb
sbb
out
inc
push
ret
addl
mov
rolb
fs
xchg
xchg
fistl
jge
lods
cwtl
cli
dec
rorl
xchg
hlt
ds
movsb
adc
pop
imul
loopne
mov
sahf
scas
jl
outsb
scas
jmp
xchg
sub
inc
xlat
iret
jmp
jae
mov
cmpsl
pop
insb
int
jne,pn
jp
dec
fcoml
mov
jns
ss
inc
push
and
into
pop
fbld
mov
bound
jb
rcrl
mov
movsb
mov
test
xor
or
add
and
jl
stos
out
sbb
loopne
lods
inc
insb
mov
dec
xor
mov
add
imul
sub
repz
fisttpl
sub
dec
cmp
cmp
pushf
inc
cmp
sbb
frstor
orl
push
leave
std
mov
pop
rcl
push
and
or
test
lock
adc
cmp
mov
lock
les
loope
test
js
je
jl
out
xchg
hlt
sarl
adc
push
mov
sub
cmp
jmp
dec
out
push
dec
out
repnz
scas
mov
adc
ljmp
or
insl
inc
jbe
dec
cld
adc
test
mov
out
sub
or
cmp
or
ret
popf
sbb
mov
mov
sbb
sbb
or
int
imul
shll
or
aas
cmp
outsb
push
shl
inc
push
xchg
cli
loop
daa
fwait
cmp
arpl
not
fwait
sub
push
jns
pop
je
push
stos
cltd
mov
icebp
and
pop
insl
inc
or
mov
lock
mov
subb
mov
mov
aas
pop
popa
inc
rorb
jecxz
mov
xchg
test
mov
cmc
rcll
mov
jmp
bswap
xor
hlt
add
ds
enter
sbb
in
push
mov
mov
add
or
xchg
jg
andl
inc
flds
xorl
jne
jo
lcall
daa
jecxz
or
in
push
mov
cwtl
jne
rcll
repz
in
sub
jge
pop
adc
sahf
mov
lea
cld
mov
mov
xchg
repnz
pop
push
cld
sub
in
cmp
pusha
sti
outsb
pushf
dec
loop,pt
push
int
sub
shll
js
dec
pushf
lods
lea
ljmp
dec
sti
or
aad
mov
cmpsb
jbe
pop
xchg
out
xchg
mov
gs
add
out
push
leave
cmp
stos
bound
aad
push
add
in
pop
loope
cmp
rcl
ja
sub
addr16
notl
adc
push
es
rcrb
lods
clc
fcomp
pop
mov
dec
jl
stc
cmp
adc
pop
push
jnp
add
mov
outsl
cmc
sbb
rcrl
out
lahf
out
jp
or
popf
in
jmp
pop
jno
xor
dec
dec
test
pop
int3
xorl
out
aad
dec
mov
mov
mov
stc
pushl
loopne
sbb
out
add
loop
std
xchg
or
pop
notb
xchg
repnz
push
jno
sub
cld
jg
mov
jbe
xchg
xor
jge
mov
sub
dec
stos
xchg
bound
mov
lcall
out
shl
aaa
rclb
in
or
stos
cmp
adcl
or
xchg
lods
aas
out
dec
lret
movsb
cli
mov
mov
cld
fisttpll
pop
ret
pop
inc
pop
push
out
sub
inc
cmp
lahf
or
ret
mov
insl
or
cmp
add
aas
out
ret
out
mov
lods
sbb
adc
sub
nop
adcl
push
lods
cmp
inc
push
pop
nop
shlb
sub
imul
and
ljmp
aas
inc
dec
test
sbb
push
cmp
mov
movsb
call
out
dec
xor
jns
pop
push
or
mov
lods
and
cwtl
fidivrl
adc
push
mov
test
cs
sub
jmp
jg
xchg
cmpsl
push
lcall
mov
dec
mov
adc
andl
pop
pop
cmp
movsb
dec
push
dec
mov
insl
cmp
cld
icebp
movsl
cmpsl
xor
push
minps
inc
adc
push
inc
divl
add
add
leave
popa
enter
fwait
out
mov
push
ficomps
lret
sub
mov
fidivl
adc
add
cmp
rorl
mov
movb
cmp
adc
sub
cmp
sbb
pop
jnp
xor
subl
cld
cs
adc
and
jne
and
das
imul
and
mov
fiadds
nop
lods
sub
push
xor
inc
push
inc
cld
clc
cli
enter
popf
fsub
clc
mov
insl
push
insl
js
cmp
sti
es
and
out
and
int
and
add
mov
push
pop
inc
pop
dec
das
inc
mov
jns
or
sub
xor
pop
adc
add
inc
pop
cli
jno
insl
push
mov
jb,pn
xor
and
or
data16
cmp
decl
add
adc
out
pop
lock
or
or
inc
stc
lods
out
jnp
mov
negb
jmp
in
inc
addr16
out
xchg
cltd
adc
sbb
xchg
std
mov
fisubl
jecxz
testb
movsl
sahf
aam
push
mov
push
fstpl
jbe
jae
fnstsw
std
lea
push
and
lret
mov
stos
fldl
push
push
sahf
jp
in
adc
sbb
sbb
addr16
pusha
xchg
sub
jne
int
fidivs
fisubl
jmp
inc
push
jnp
in
push
imul
cwtl
dec
sub
add
push
cld
fsubrs
inc
scas
lret
ss
imul
fildll
inc
ret
cwtl
pcmpeqw
fcompl
jmp
test
mov
pushf
sahf
popf
adc
push
push
nop
pop
cmpsb
jns
mov
aaa
fs
mov
adc
mov
sti
popa
and
pop
shrb
stos
mov
adc
or
mov
jecxz
insb
test
fstl
out
scas
push
lock
iret
dec
lods
lods
rcll
push
inc
stos
dec
stos
mov
hlt
aas
lret
and
fnstsw
sub
and
mov
fs
bound
xchg
sub
dec
lahf
push
pop
push
xor
sub
sub
jge
sub
sub
add
mov
lea
leave
mov
in
cmpsb
out
into
adc
sbb
mov
movsl
gs
jns
mov
mov
inc
push
pop
jle
out
loopne
add
sar
mov
mov
cmp
cmp
popa
dec
scas
adc
je
add
jae
sahf
xor
cltd
jmp
xchg
add
adc
jae
xchg
mov
iret
test
jecxz
cmpl
sub
fs
mov
cmp
inc
es
lret
mov
and
push
jnp
sbb
add
jle
push
rcll
jns
out
push
inc
pop
call
decl
js
movsl
xchg
test
roll
jmp
jg
jns
sub
mov
subb
cmp
jae
push
pop
sub
lods
pop
and
cmc
inc
cmpsb
ret
aad
pushf
sub
aas
and
stos
rdtsc
repz
leave
jno
jbe
aaa
mov
call
mov
mov
icebp
data16
loopne
push
and
jns
addb
push
lret
dec
loope
xor
and
and
stos
jae
and
mov
push
cld
lods
sti
cli
pop
aaa
jge
jmp
arpl
aaa
fdivl
dec
rorb
add
push
icebp
aaa
in
jge
mov
enter
pop
sbb
popf
mov
sub
add
insl
ljmp
push
inc
fists
std
popa
jge
cs
adc
xor
dec
lret
leave
ja
xchg
jo
aam
cld
mov
imul
test
pop
cmp
or
loopne
mov
cmp
mov
movsl
dec
or
xchg
adc
mov
and
push
jns
add
sbb
loop
or
pop
jl
out
dec
sub
adc
or
sysenter
push
imul
cs
cmp
popa
mov
add
jecxz
xchg
mov
test
and
lods
aam
inc
ret
rolb
out
js
pop
fcoml
dec
add
lret
fisttpl
jo
in
push
call
rcrb
shlb
xor
punpckhwd
push
int
sbb
xor
or
out
lods
mov
xchg
mov
adc
or
pop
sub
mov
or
jle
dec
movsb
jo
fldln2
xchg
adc
es
push
dec
fwait
and
ror
adcl
dec
jae
pop
jns
ljmp
fwait
nop
frstor
push
dec
sbb
repz
aaa
sub
xor
sub
mov
lret
ret
std
sbb
hlt
push
sahf
or
xchg
dec
ret
mov
out
jmp
les
add
add
loopne
mov
cmp
andb
shrb
cmp
cld
or
xchg
dec
loop
adc
pop
pop
mov
addr16
or
inc
sti
ds
jmp
imul
je
insb
lods
add
sahf
fldpi
and
dec
shlb
stc
jge
jl
sub
pop
lea
and
sub
push
fs
xchg
and
inc
rcrb
out
imul
dec
push
and
rcrb
jle
pop
pop
mov
fwait
loopne
jno
pop
lods
aas
aaa
push
adc
mov
ljmp
mov
rol
repnz
sar
xor
notb
and
repz
dec
add
idivb
push
or
repnz
or
xchg
sub
testl
cmp
mov
or
and
xchg
pushf
mov
sub
fs
popf
ret
movsb
and
sub
dec
pop
icebp
enter
mov
loope
lea
imul
adc
dec
psubsw
or
xchg
out
cmp
dec
dec
jae
insl
test
jo
in
xchg
push
dec
dec
jmp
add
imul
jns
lcall
jp
or
sbb
inc
dec
adc
jbe
addl
sahf
mov
push
push
subl
push
scas
cmpsl
or
lds
mov
fidivrs
leave
or
sub
add
fstl
mov
loopne
gs
scas
lods
imul
call
pop
mov
shr
scas
dec
cmp
insl
push
rcrl
nop
cmp
sub
aas
pop
sub
mov
lea
test
push
push
mov
xor
mov
jle
inc
dec
shll
dec
adc
pop
jb
sahf
inc
or
call
sti
cmc
mov
shll
test
mov
out
popa
mov
push
or
xchg
ficoml
xor
dec
mov
loop
mov
mov
mov
dec
lds
clc
andb
pop
ljmp
sbb
cmc
or
mov
mov
mov
ja
dec
lret
push
jg
jbe
in
jb
sub
sbb
subb
fdivrl
mov
adc
lcall
fdivrs
dec
rorb
scas
pop
fwait
scas
lahf
dec
in
add
push
mov
push
jmp
jge
push
and
call
lods
leave
js
jno
cwtl
clc
or
dec
cmc
xor
pop
mov
addr16
daa
mov
sub
pop
fisttpll
jne
or
adcb
add
mov
adc
es
pop
mov
lret
dec
dec
cmp
and
imul
rcrl
fdivrs
adc
aad
pop
inc
lods
mov
mov
mov
pop
adc
stos
movsb
in
sbb
add
xchg
ljmp
or
pop
add
xchg
test
popa
jb
xchg
jmp
shlb
test
cmp
int3
pop
nop
rcll
add
or
add
dec
or
lahf
push
xor
je
repz
fst
loop
adc
mov
stos
jmp
push
rol
jp
pop
sbb
das
xor
jl
dec
je
ljmp
insl
rclb
and
and
inc
mov
push
lcall
and
fisubrs
cmp
cmp
xchg
aas
dec
aad
leave
jns
cwtl
out
jbe
mov
stos
xlat
sub
sub
stos
daa
js
pusha
xor
mov
test
imul
imul
and
je
or
add
mov
mov
jecxz
push
fxch
or
add
scas
cs
mov
sti
mov
rol
mov
push
and
cmp
sbb
mov
fdivrl
pop
inc
xor
xor
sahf
adc
inc
ljmp
sub
into
mov
in
cmp
and
pushf
iret
fldenv
stos
sub
je
xor
dec
es
xchg
jb
mov
push
inc
or
ret
jg
pop
xchg
icebp
nop
repnz
daa
lcall
dec
addb
and
jnp
sbb
mov
mov
adc
ds
jl
fcomp
xchg
mov
inc
jmp
cmpsl
mov
movsl
dec
repz
and
xchg
jb
add
std
pusha
sub
test
ja
sub
inc
jo
rcll
rorb
fistpll
ljmp
hlt
cmp
aad
nop
call
or
xchg
add
push
popf
add
pusha
insb
fs
xchg
xchg
leave
pop
push
mov
lret
enter
shrl
mov
or
mov
xorb
bound
mov
push
jmp
sbb
pop
hlt
sub
pop
add
sub
or
insl
xchg
or
jg
stos
in
jmp
push
sbb
push
dec
inc
std
pop
cmp
push
add
and
mov
cmp
inc
in
std
jnp
push
pop
test
cs
sbb
or
ret
lret
push
pop
push
stos
mov
jg
out
cmp
dec
out
insl
mov
mov
psrlw
inc
push
sti
pop
dec
ficoms
push
xor
push
repz
jno
cmp
push
xchg
pusha
mov
pop
in
mov
mov
lahf
mov
push
adc
movsb
mov
mov
xchg
push
dec
daa
dec
icebp
dec
ljmp
hlt
aaa
fildl
mov
pop
dec
add
mov
add
jbe
jecxz
rolb
pop
cmp
sbb
cmp
sbb
loop
pop
mov
jo
lods
orl
pop
xor
push
add
scas
ljmp
insb
sub
repnz
cld
and
dec
xlat
jecxz
cli
pop
sub
push
xorb
ljmpw
je
popa
dec
clc
leave
in
loopne
mov
loopne
lret
insb
leave
movsb
bound
stos
add
sub
push
jmp
insb
xor
shrb
sub
cmpb
sbb
pop
out
and
clc
pop
dec
jmp
sbb
inc
dec
push
xchg
movsl
jp
stc
mov
aad
sub
cmpl
lret
in
fwait
cmp
sbb
div
lret
add
das
cli
xchg
enter
jle
loopne
rcrb
push
add
gs
cwtl
mov
arpl
mov
sbb
jb
addr16
scas
int
lods
jnp
mov
sbb
inc
mov
adc
imul
mov
or
or
bound
sub
lods
push
push
adc
sbb
iret
aad
call
pop
dec
mov
mov
sbb
mov
xchg
shl
test
sbb
outsl
xor
mov
rcrb
or
sub
inc
aas
je
jnp
push
dec
cld
adc
test
ret
cs
mov
sbb
or
add
pop
push
cmpl
pop
inc
mov
nop
pop
mov
dec
out
inc
int3
cltd
stos
xlat
xlat
add
cltd
in
mov
mov
cmp
lcall
stos
daa
mov
dec
jmp
into
jmp
iret
and
push
inc
cmpsl
aad
pop
gs
cmp
icebp
mov
outsl
xchg
outsb
jbe
std
repnz
movsl
cli
dec
scas
adc
or
pop
xor
mov
cmp
cmp
xor
mov
jbe
inc
xor
lea
mov
cmp
cmp
sub
cli
push
ja
movsb
sbb
push
mov
repnz
adc
div
jmp
push
push
pop
xlat
popf
movsb
xchg
push
fwait
rcrl
mov
pop
pop
cmp
sti
cmp
dec
inc
cmc
xlat
popf
aad
and
adc
push
mov
inc
lods
mov
scas
xchg
xchg
orl
or
inc
leave
xor
ja
mov
aad
pop
outsl
out
mov
mov
sahf
movsb
cmpsl
or
stos
and
lea
iret
pop
incb
gs
fcoml
loopne
rcll
nop
aad
push
clc
pop
inc
push
pop
jge
clc
or
lds
movsl
test
divb
dec
loopne
lahf
lahf
fadd
lods
popa
stc
lds
ret
arpl
cmp
xchg
aam
push
push
xlat
test
xchg
inc
sbb
sub
in
lsl
or
xor
pop
pop
daa
cltd
or
aaa
add
scas
adc
mov
aam
push
mov
cmp
shlb
push
push
mov
test
mov
insb
jns
std
sti
or
xchg
call
lret
fwait
pop
dec
jb
mov
pop
movl
xchg
lods
xor
fcoml
mov
bound
jge
test
lret
mov
xchg
dec
imull
cld
fnstenv
sbb
pushf
bound
push
push
xchg
stc
das
jp
or
mov
pop
xor
xchg
pop
pop
dec
int
mov
sbb
jecxz
daa
inc
movsl
adc
lea
popl
jb
and
jo
insb
inc
fsubrp
adc
sbb
or
xor
and
adc
cmp
jge
sbbl
sub
das
movsb
pop
xor
xchg
xorl
movsb
fisttpll
popf
push
fcmovnbe
icebp
cmp
adc
sub
aad
popf
add
rcrl
jb
rol
dec
or
lahf
cmpsl
mov
jae
mov
sbbl
es
iret
daa
das
nop
bound
dec
sbb
mov
dec
mov
pusha
sbb
cmpsl
sbb
pop
in
xor
mov
dec
jge
sbb
enter
or
repz
xor
xchg
push
sbb
pusha
bound
mov
filds
stos
add
daa
clc
cwtl
jae
push
mov
int3
jmp
test
nop
cmpsb
incl
aas
fs
arpl
xor
ja
pop
dec
popfw
movsl
adc
mov
adc
or
ficomps
cmc
xchg
push
add
pop
cmp
int
arpl
jae
lds
fnsave
sub
mov
ret
push
cmp
sbb
call
clc
shl
push
cmc
xchg
mov
fadds
sarb
cmp
mov
std
addr16
sbb
push
movsb
and
and
into
cmp
repnz
sub
mov
test
nop
subb
sahf
insl
or
pusha
repnz
mov
xchg
std
add
mov
out
cmpsb
mov
dec
cmpb
pusha
lahf
dec
rcll
sbb
push
gs
lret
sarl
dec
inc
rorb
pop
mov
adc
ficoms
jb
leave
and
mov
xor
cmc
inc
jg
notl
dec
scas
repnz
subl
stos
mov
adc
pop
aam
bound
pop
in
fistpl
int3
mov
add
jecxz
mov
test
adc
imull
cmp
ficoms
icebp
ret
js
and
idiv
cwtl
shll
sbb
push
jecxz
mov
push
lock
mov
cmpsl
xlat
cmp
inc
push
push
pop
inc
int3
das
out
xor
add
inc
mov
jle
mov
inc
jmp
lods
dec
mov
mov
add
jmp
loopne
mov
sub
xchg
fcoms
pusha
out
jge
loope
jnp
pusha
cld
add
jae
or
lcall
test
jg
jno
pusha
je
fdivrs
stc
shl
pop
sbbl
pusha
enter
call
popf
mov
rep
ret
mov
sbb
adc
pop
sbb
lcall
faddl
push
rol
fsubrs
xchg
jo
jno
add
push
mov
cmp
insb
dec
lea
imul
iret
add
and
xchg
sub
mov
cmp
dec
stos
cmp
xor
mov
mov
mov
imul
push
sahf
mov
pop
mov
cmp
or
adc
and
les
cld
jbe
test
and
xor
rolb
inc
sub
jmp
out
add
fwait
and
inc
xchg
add
inc
sbb
and
imul
mov
adc
inc
test
lods
loopne
lret
add
dec
jne
loope
push
mov
rclb
xchg
inc
cwtl
adc
push
cld
add
sub
cmc
sub
stos
imul
data16
or
fnstenv
dec
dec
mov
ja
dec
push
lds
add
shrb
inc
psrlq
ss
cmpsl
stc
test
xlat
into
lods
mov
lods
clc
test
imul
jbe
pop
das
out
push
inc
jl
xchg
push
stos
mov
jecxz
inc
add
fisttps
gs
mov
mov
mov
add
xchg
cli
adc
mov
int
push
lea
test
push
and
nop
rclb
test
xchg
fisubrs
xlat
push
jecxz
xchg
cmp
fwait
inc
or
outsl
add
push
call
mov
add
jne
dec
add
dec
sbb
inc
jns
xchg
daa
fdivl
add
aam
shll
ret
sub
cmp
pop
dec
sahf
jmp
jmp
xor
cwtl
out
add
aas
lcall
out
data16
mov
inc
xchg
push
test
and
popa
dec
xlat
sbb
and
ja
cmpsb
loop
insb
mov
rcll
push
ja
mov
sbb
add
notl
in
push
cmp
push
pop
cmp
movsb
in
aam
xchg
out
xchg
xlat
pop
fcmovu
lea
stc
roll
mov
push
mov
js
xor
sub
fistpl
xchg
lods
shll
pop
lods
ret
pop
stos
sub
mov
gs
push
mov
jno
rcll
arpl
push
test
and
outsb
mov
add
or
jg
jle
lock
pinsrw
mov
add
pushw
stos
push
pop
add
push
adc
xor
xor
insl
pop
add
subb
jg
mov
fs
adc
inc
out
xchg
add
jne
shl
imul
das
cs
out
mov
mov
scas
mov
pop
and
mov
push
adc
dec
test
shll
inc
cmp
es
jecxz
nop
iret
xor
aam
jecxz
dec
outsl
xor
mov
aas
shl
loop
dec
test
sub
sti
pop
add
push
gs
sbb
pop
pop
hlt
nop
shl
imul
push
adc
sbb
inc
adc
jne
fwait
loop
add
xor
jg
pop
mov
adc
add
shll
mov
cltd
or
jno
push
lods
mov
lock
mov
jmp
adc
popa
mov
jmp
sbb
pop
jne
cmp
out
sbb
mov
and
xor
jle
mov
xor
pop
pop
pop
mov
scas
data16
ret
out
ret
dec
add
rclb
loopne
mov
stc
xor
das
xorl
mov
adc
in
or
negb
or
xor
ljmp
dec
popa
push
stos
adc
imul
sub
or
mov
jmp
push
xor
adc
les
movsb
jns
or
cmc
dec
pop
push
jne
les
insl
sub
aas
outsb
mov
repz
sbb
sar
add
push
jbe
mov
inc
stos
xlat
lds
and
sub
clc
ffreep
lcall
push
in
cmpb
jmp
inc
xor
xor
jmp
fisubrs
lods
push
mov
mov
cmp
lds
in
movlps
lods
and
fdivs
and
jnp
mov
push
clc
push
test
pop
hlt
jo
push
lods
cmp
add
fs
loope
jecxz
in
and
mov
std
je
ds
fwait
sarl
fnstsw
shll
out
mov
cmp
add
std
push
adc
jmp
icebp
les
das
call
ss
rorb
or
sub
pop
push
push
jecxz
and
dec
imul
jmp
cmpsb
jmp
push
lcall
push
and
mov
mov
shr
lock
sub
out
cmp
lds
dec
xor
xor
out
add
adc
mov
fnstcw
ret
sub
clc
in
sub
sbbl
loope
aad
pop
pop
popf
pop
dec
pop
jmp
test
pop
mov
cltd
and
or
clc
vpermd
cmpsb
test
mov
sti
fadd
gs
push
fisttps
push
mov
jge
pop
loope
testl
cmc
ret
sbb
mov
push
insb
push
ficoml
sbb
xlat
sarl
imul
add
cmp
fidivrs
xor
shrl
sahf
adc
rcrb
sub
mov
push
and
xchg
call
and
sub
xor
mov
sbb
aas
sub
add
adc
mov
or
pushf
adc
adc
jb
and
fs
jae
fstpt
add
fstl
repnz
pop
cmp
mov
imul
mov
ds
lods
push
sarb
and
or
lods
jne
mov
or
es
lods
xchg
imul
push
xchg
cmp
arpl
lret
daa
icebp
pop
shlb
mov
int3
xor
jmp
cld
mov
stos
addr16
shl
mov
out
iret
adc
dec
and
cmovs
xchg
jno
sahf
dec
cmp
mov
xor
roll
test
mov
jnp
cs
shlb
inc
aad
adc
and
push
dec
into
inc
out
sub
pushf
insl
xchg
mov
add
neg
mov
mov
inc
mov
insb
pop
aas
sbb
test
xchg
mov
push
faddl
in
dec
dec
push
or
pop
inc
iret
and
rol
test
out
in
mov
ret
sub
in
std
std
and
repz
leave
test
movsl
lcall
es
xor
das
dec
out
dec
mov
aaa
aad
fxch
aas
outsl
dec
mov
jmp
cwtl
call
adc
mov
mov
pop
adc
dec
mov
cvtdq2ps
mov
scas
mov
add
lods
lods
das
push
lods
cmp
leave
aas
js
loop
xchg
negb
in
cli
mov
fnstcw
sub
adc
gs
mov
pop
jb
cmp
mov
cmp
or
and
jnp
scas
arpl
out
xchg
mov
fbstp
cmpsb
and
mov
test
movsl
jnp
lcall
mov
mov
and
sbb
mov
jge
add
sbb
cmp
orb
xchg
mov
testb
bound
push
popa
push
mov
push
movsl
sub
xchg
add
jg
subb
xchg
pushf
sbb
repz
xor
cmp
jne
lahf
add
jecxz
dec
and
lcall
movsb
add
outsb
pop
pop
xchg
or
mov
cmp
fdivrl
rcr
sbb
mov
sarl
add
mov
mov
ja
lahf
ret
sub
sub
shll
arpl
shll
add
xor
jns
jb
out
xor
pop
mov
or
mov
in
in
shufps
mov
cli
dec
mov
jb
push
loope
mov
in
and
mov
nop
daa
push
pop
push
test
pop
inc
xor
pop
imul
push
or
adc
out
mov
lods
jnp
mov
and
inc
jne
push
cli
sbb
inc
pop
loope
pop
hlt
inc
mov
xchg
jo
push
gs
cwtl
mov
inc
in
scas
add
sub
lock
cmp
pop
and
shlb
test
adc
repnz
or
pop
cmp
pop
fidivrl
or
add
jo
sar
lods
outsl
and
fmuls
outsb
mov
in
insl
mov
nop
add
dec
pop
test
or
dec
jb
push
insb
fidivrl
stc
xor
push
aaa
es
clc
fisubrs
sbb
push
fisubs
push
mov
sbb
outsl
sub
inc
cld
jo
outsl
movsl
sarb
mov
lcall
fadds
xchg
stos
push
push
add
imul
out
std
inc
and
gs
push
inc
movsl
fidivl
aad
test
cld
ficomps
xor
pop
dec
aas
push
jl
aas
in
aas
in
jp
push
sbb
fs
push
imul
out
xor
adc
xchg
cltd
sbb
mov
clc
dec
cltd
in
sub
pop
add
clc
inc
jge
or
xchg
jnp
dec
adc
in
jo
lret
out
push
cld
out
aaa
xchg
push
cwtl
xchg
xorl
and
pop
popa
xor
inc
ljmp
jecxz
sbb
test
pop
inc
push
imul
hlt
xchg
jle
jge
add
das
xor
pop
test
adc
and
lea
push
es
aas
sub
inc
fwait
xchg
jne
push
adc
movsb
xor
shlb
pop
jle
and
cmpsb
popf
adc
or
nop
fcoml
mov
imul
test
lea
addb
filds
shlb
and
popf
fmul
cmpsb
out
sbb
pop
ja
cmp
fsubrl
jmp
mov
jmp
js
in
cmc
subl
shll
cmc
std
jb
sbb
xchg
sbb
notl
hlt
xlat
fnstenv
je
mov
cmp
in
pushf
push
lret
pop
js
sti
daa
sbb
inc
sahf
bound
push
shl
sbb
stc
jge
mov
into
adc
jno
sbb
adc
mov
push
in
cltd
int
in
and
cmp
inc
inc
notl
mov
dec
test
ds
pushf
pop
shr
pop
test
xchg
ss
sti
fsubl
lds
xchg
inc
shrl
dec
enter
mov
into
hlt
js
add
dec
xchg
hlt
mov
sub
and
aad
rcll
push
dec
ds
mov
les
movsl
mov
dec
cs
jno
popa
jne
test
push
lret
push
inc
jns
les
shl
cmp
push
mov
inc
test
lahf
test
jle
sub
lods
ret
jns
loope
xchg
and
cld
sub
mov
and
and
push
inc
pop
xchg
insb
lds
incl
out
xchg
add
lret
mov
js
movsl
sub
and
test
cmp
in
mov
xor
lods
imul
lret
lahf
mov
mov
gs
sahf
in
xor
push
mov
imul
scas
sub
jg
mov
jg
push
inc
dec
in
ja
lock
fildl
addb
daa
in
imul
cmp
clc
fs
xchg
les
loopne
jl
xchg
pushf
adc
shl
out
dec
repnz
stos
out
jnp
add
push
test
iret
sub
test
ret
push
adc
test
test
cmp
mov
dec
rcll
stos
lods
sub
loopne
dec
mov
sub
adc
loopne
mov
lock
dec
mov
rclb
cs
and
add
push
sub
jg
je
jae
lret
xor
pop
aaa
icebp
adc
mov
popa
dec
and
sahf
test
mov
push
jp
shr
push
out
out
ss
adc
mov
mov
inc
js
int
sbb
jne
fcomps
push
inc
pop
dec
into
fs
sub
in
lcall
negb
push
enter
leave
jl
pop
cli
sti
add
add
xor
inc
mov
inc
jnp
push
movsl
or
inc
mov
testl
lret
clc
loop
cld
jb
sbb
jae
fidivrs
jecxz
jbe
lahf
dec
inc
mov
addr16
int
adc
xor
in
mov
or
lret
movsb
xchg
ljmp
dec
nop
mov
jnp
pop
jae
dec
in
adc
and
mov
cs
mov
inc
jo
ss
sub
xchg
mov
and
sarb
scas
mov
test
movsb
ja
dec
fwait
mov
xchg
sbb
test
sbb
xchg
cmp
pop
push
notb
mov
inc
dec
inc
mov
pop
jl
mov
scas
in
xchg
adc
arpl
cmpsb
adc
pushf
aad
or
dec
sub
inc
cmp
xchg
daa
mov
neg
and
sub
cmp
xor
dec
push
jns
lahf
adc
dec
arpl
ss
sbb
es
aas
std
xor
pop
clc
cs
mov
loopne
adc
out
out
int
mov
jns
xor
lds
jp
push
jp
xchg
push
mov
mov
pop
or
movsb
push
out
cmpsb
out
xor
int
pop
insl
dec
mov
testb
daa
and
loopne
pop
adc
add
pop
in
mov
push
push
ss
inc
sub
inc
jge
or
stc
test
shll
addr16
cmovnp
inc
addr16
frstor
lret
movsl
xor
lock
cmp
cld
in
cmpsb
xchg
push
xor
pop
cli
psllq
lcall
stc
xor
mov
stc
add
mov
dec
jl
sahf
jecxz
mov
add
sbb
mov
ret
clc
ljmp
pop
and
das
mov
pop
repnz
xor
clc
loop
ja
aas
test
adc
fcoms
outsb
inc
sub
jno
arpl
sbb
mov
loop
in
leave
shll
mov
icebp
or
push
xor
das
shll
sub
xchg
aad
lods
sbb
cmp
imull
cld
sub
pop
add
inc
data16
jnp
cltd
aad
pushf
sub
xchg
mul
into
adc
xorl
in
cmp
cwtl
mov
arpl
pop
outsl
mov
and
aaa
insl
pop
ret
xchg
xorl
mov
cmpl
push
ret
mov
lahf
stos
lahf
lods
out
mov
adc
inc
or
push
push
mov
dec
and
adc
ja
test
movsl
jmp
out
rorb
sub
jle
insb
pop
outsb
mov
mov
frstor
div
add
sbb
gs
das
cld
roll
jp
mov
jl
add
leave
inc
mov
clc
repz
inc
lods
out
or
ja
jmp
lds
add
test
or
stos
fcompl
ret
adc
movntps
jle
inc
ja
mov
push
ja
inc
xchg
int
popa
xchg
dec
vpunpckhbw
les
int3
pop
xlat
sbb
stos
int3
cmp
ror
mov
cmp
mov
and
incb
outsb
jmp
mov
movsl
and
fs
mov
ljmp
lahf
fwait
mov
or
loope
push
add
pop
andl
loop
xor
notb
cmpsb
sbb
loop
xorl
aaa
adc
les
ds
xchg
and
lahf
mov
aad
pop
icebp
clc
iret
sbb
jecxz
adc
jge
xchg
pop
fwait
dec
jnp
imul
rorl
push
or
xchg
mov
pop
ror
mov
into
iret
enter
xchg
je
aam
sub
sub
cmc
in
xlat
loop
les
jae
sti
cmp
fsub
dec
or
pop
push
pop
jge
mov
movsl
add
jle
pop
out
mov
jae
lods
movsl
push
rcl
test
push
push
jge
mov
mov
je
bound
and
adc
sub
loope
mov
std
push
xchg
fwait
pop
mov
pop
incb
imul
sub
add
jmp
jno
add
ds
or
sbb
mov
fildll
push
sub
inc
lret
stos
jle
test
daa
mov
xlat
or
int3
movsb
mov
sbb
cmpsb
in
cli
lret
cwtl
push
sub
and
pushf
xchg
jno
fs
push
fdivrp
add
add
leave
mov
xchg
xchg
mov
dec
inc
ret
inc
cld
xlat
pop
in
inc
aas
add
in
into
aam
jns
repnz
adc
or
mov
add
mov
jmp
std
lods
lea
pop
add
lret
or
hlt
or
call
cmc
mov
das
dec
lods
pop
push
test
xchg
and
lcall
xor
jl
aas
xor
and
jne
mov
rcll
push
pushf
cmp
sbb
cmp
cmpb
pop
xor
xchg
cmp
or
pop
mov
out
jge
into
stos
push
xchg
movsl
inc
jno
pop
sbb
enter
insl
push
push
xchg
pop
jg
push
mov
fsubl
pusha
mov
rclb
and
jb
or
and
aad
push
stc
or
cmc
lods
dec
dec
or
pop
xchg
sahf
push
into
pusha
lahf
push
jnp
stos
repz
add
xchg
test
das
fdivr
or
std
dec
inc
icebp
pop
ds
pop
in
cmpsb
test
jae
arpl
dec
insb
sbbb
dec
push
or
dec
jns
mov
fidivs
jne
sub
push
push
push
xor
cmp
pop
jg
leave
outsl
ret
aam
jp
or
push
inc
out
mov
xchg
pop
adc
bswap
mov
mov
sahf
addb
outsl
sbb
ljmp
sbb
ret
add
fdivrs
data16
xor
ss
pusha
push
ret
sub
push
mov
add
dec
test
or
icebp
out
mov
ret
fistpll
in
stc
adc
jmp
mov
test
lret
icebp
cs
insl
repnz
mov
call
cmp
jns
movsl
in
push
inc
pop
inc
push
sbb
and
scas
sbb
or
ret
sbb
insb
jecxz
mov
jl
mov
sub
fmuls
mov
push
push
inc
dec
xchg
stc
hlt
lods
mov
fs
jb
imul
imul
sti
mov
push
inc
pop
cmc
sub
add
data16
in
cli
pop
sar
cmp
dec
push
mov
arpl
leave
in
popf
in
aam
popf
jae
mov
cmp
arpl
mov
mov
in
fbld
cmp
sub
popa
sbb
sbb
fiaddl
nop
std
push
lcall
pop
push
mov
sub
xchg
inc
roll
insb
dec
iret
sbb
xor
xor
ret
rorl
adc
and
sub
fsts
adc
dec
in
in
jnp
dec
fs
addl
mov
jbe
lret
js
enter
jne
pushf
sahf
je
movsb
sbb
aaa
jl
sbb
je
jae
into
mov
and
in
mov
and
inc
add
or
fcoms
xor
sahf
cmc
fcoml
shrb
jle
sti
ja
ss
inc
jmp
mov
jle
pop
ss
movsl
push
add
sarl
pop
movsl
popf
sbb
ds
imul
fwait
xchg
adc
pop
lods
in
rol
iret
and
sub
pop
ret
ret
mov
mov
or
loope
sub
xchg
inc
xchg
mov
aad
adc
jae
mov
rclb
xchg
pop
es
adc
xchg
cmc
int
lcall
enter
push
and
sub
jp
adc
inc
sbb
clc
jle
push
push
mull
leave
cmpsb
push
out
xor
sti
in
pop
jge
sbb
inc
int
mov
test
cmp
add
pop
sub
or
cmp
push
cld
arpl
call
movsl
insl
out
cmp
scas
mov
outsl
jae
insl
mov
xor
add
or
jbe
jo
repz
imul
out
scas
fcoml
xchg
ret
aas
loope
ds
xlat
mov
sub
add
mov
lods
insb
jl
mov
add
mov
icebp
popw
fs
xchg
mov
rorb
imul
push
andb
std
xchg
es
push
push
and
loopne
in
sub
mov
movsb
pop
bound
int
adc
xchg
push
mov
xor
push
add
add
mov
fimuls
outsl
fsts
repz
movb
test
mov
pop
xchg
js
sahf
jb
cld
push
ljmp
ds
insb
dec
enter
push
sti
mov
dec
in
inc
jg
repnz
movsb
les
lea
aam
xchg
insl
dec
test
aam
mov
mull
sub
push
jmp
and
shrl
test
subl
popl
out
scas
cmc
adcl
outsl
mov
test
xor
test
lret
fbstp
loope
repnz
push
xlat
test
test
loop
test
in
dec
ja
nop
and
jle
pop
insb
fsubrp
mov
push
push
stc
dec
test
and
adc
push
jl
jne
dec
push
leave
jmp
iret
mov
pop
pop
jne
rclb
cmp
out
stos
and
lret
cli
mov
sbb
ret
mov
cmc
inc
sbb
mov
bound
jle
int
cmp
lods
push
mov
adcb
insl
test
xchg
pop
enter
xlat
ficoms
mov
cmp
fisubrl
clc
inc
aad
lea
mov
cltd
adc
test
daa
xor
test
dec
ljmp
jno
cwtl
or
popf
xchg
jmp
clc
mov
xchg
out
mov
mov
jae
sbb
movsb
and
movsl
jns
jne
mov
test
mov
push
rcrb
inc
sub
push
jmp
xchg
pop
adc
add
mov
pop
push
out
adc
jne
add
inc
xchg
flds
stc
xchg
xchg
add
mov
or
dec
mov
into
clc
jg
mov
sub
inc
movsl
push
out
out
push
icebp
and
gs
mov
mov
mov
cli
addr16
movsb
in
fwait
aad
dec
xchg
lds
cwtl
push
inc
or
jae
dec
cmpsl
es
push
lods
jbe
pop
daa
add
jnp
pop
and
sbb
popf
gs
xor
push
push
out
mov
daa
ror
iret
daa
shl
inc
fidivl
dec
mov
rcl
pop
xchg
and
fcmovu
iret
mov
je
orl
fwait
push
dec
pop
cmp
lea
jb
inc
push
in
pop
or
sbb
int
xor
mov
mov
sti
cmp
mov
and
into
aam
mov
rorb
mov
cmp
ds
enter
or
sub
stc
inc
xor
icebp
ror
shrb
popa
enter
dec
dec
test
xor
mov
orb
aad
faddl
fisubs
inc
arpl
in
inc
loope
test
push
jae
ljmp
jle
and
or
mov
fwait
dec
enter
dec
loopne
xchg
popf
out
push
mov
cmpsl
cmp
adc
add
cltd
xchg
fisubrs
jl
imul
fcomps
push
cli
fbld
xchg
loopne
cmp
cmp
fs
mov
jns
pop
adc
dec
jne
or
push
aas
push
lret
fdivs
out
jne
jno
repz
dec
cs
xchg
rcr
in
repnz
jo
fcmovnu
add
imul
mov
push
xchg
push
aaa
mov
lcall
sbbb
rcl
lock
xchg
pop
and
lock
loope
and
mov
mov
ja
xorl
hlt
mov
insl
sub
cmp
mov
inc
out
mov
dec
fsubr
mov
dec
cmpsb
in
lret
push
out
loopne
push
jne
outsl
cwtl
imul
xchg
xchg
or
pop
lock
ja
xorl
xchg
cld
add
les
push
cld
xlat
jnp
xor
ret
callw
dec
int3
gs
pushf
vpcmpeqb
prefetch
or
jae
add
jp
xchg
pushf
jae
ss
mov
pushf
mov
scas
xchg
mov
inc
and
xor
xor
mov
or
sub
aam
and
mov
xor
loop
mov
aam
vsubpd
call
test
nop
lcall
adcb
push
das
xor
roll
mov
pop
jnp
popl
pushf
inc
and
aas
dec
xchg
xor
pop
inc
mov
popa
and
xor
fadds
gs
repnz
or
inc
lcall
cwtl
jae
outsl
inc
inc
cmc
arpl
or
ljmp
lock
jl
aam
sbb
or
aam
push
jmp
mov
adcl
mov
lret
movsb
mov
cmp
and
pop
out
jns
ds
pop
xor
outsl
cltd
pop
cmp
fdivrl
push
xchg
add
repnz
mov
mov
cmp
push
pop
pop
inc
daa
jl
push
outsl
loopne
ss
mov
sub
adc
jl
ret
push
imul
into
xchg
fnstcw
shrl
push
adc
pushf
imul
jmp
in
repnz
in
roll
pop
jl
jo
scas
pop
ja
aas
pop
pushf
ret
jae
ljmp
push
movsb
jno
mov
std
mul
dec
and
pop
adc
and
inc
lods
inc
cs
jp
aam
dec
mov
stos
sti
orb
imull
sbb
inc
xchg
cwtl
test
out
sbb
movsl
mov
popf
dec
jge
das
roll
lock
push
lcall
aas
mov
sbbl
mov
mov
xchg
in
xchg
pop
pop
cld
fisubs
out
imul
out
movsb
lea
pop
sbb
cmp
fstps
adc
xor
in
xchg
dec
fst
mov
lea
cmp
sub
or
cmpsl
or
bound
or
cmp
aad
icebp
fisttpl
and
cmpl
sti
cmpsl
in
xchg
aas
mov
cs
push
lret
in
xchg
and
mov
pusha
testb
sub
in
or
sub
std
inc
sbb
mov
clc
movsb
or
xchg
push
pop
sbb
scas
negl
xor
hlt
loop
dec
sub
popl
std
rcll
mov
cmp
lret
stc
push
loopne
xchg
scas
jmp
fcomp
jnp
fsubl
icebp
ja
arpl
sub
lds
sub
inc
mov
call
add
push
push
dec
gs
cmp
jo
leave
or
xor
inc
loop
push
ds
popf
xor
les
test
sbb
imul
divb
fnstenv
lahf
sbb
lret
mov
cli
js
add
mov
and
jne
push
pop
fmull
insl
outsb
ret
mov
push
out
add
and
bound
xor
lods
mov
dec
inc
sbb
pushl
and
pop
out
dec
das
and
je
mov
xchg
cmp
mov
and
movlps
sti
loop
fsubrs
stos
notb
and
insb
or
in
ss
xchg
cmp
call
cmp
stc
fistl
ss
push
addr16
aam
lret
cmp
movsl
aad
aaa
imul
and
dec
cltd
push
jl
es
mov
cmp
loop
mov
cmp
sub
mov
xchg
sub
out
mov
and
mov
pusha
fwait
dec
xor
jns
push
js
in
dec
dec
fsubrl
mov
ror
or
lcall
xchg
sub
rclb
xchg
mov
cwtl
das
lods
or
add
ror
fs
cs
mov
pushf
gs
add
jne
fildll
cwtl
cwtl
push
aad
in
sub
clc
or
push
aaa
daa
lock
in
xlat
mov
mov
fcmovnbe
push
js
sbb
hlt
fidivs
icebp
cmp
imul
pop
and
movsb
xchg
mov
fs
dec
in
mov
test
mov
cmp
hlt
adcl
inc
sbb
mov
xor
sbb
lock
adc
jmp
adc
sub
notb
xchg
mov
pop
lock
and
cmp
shll
ret
xorb
call
es
and
cmc
and
loope
mov
rcr
push
call
mov
xchg
orl
sti
cmp
cmpsb
dec
repnz
pop
fisubrs
repnz
lret
jbe
filds
jl
jmp
clc
rclb
or
lods
xchg
mov
cs
cmp
jo
push
mov
mov
int
xchg
movsb
lcall
lds
ja
sbb
daa
sub
test
fdivr
dec
xchg
jne
fidivrs
insl
dec
movl
jb
jo
test
lock
cmp
scas
fcmovb
sbb
sub
fldl
jb
shl
pop
jecxz
dec
or
cmpsl
adc
fwait
imull
stc
leave
loop
mov
sub
into
andb
test
dec
rsqrtps
jbe
ss
scas
xchg
movsl
movl
and
push
jecxz
push
bswap
push
popl
icebp
rcr
rcr
or
mov
shll
mov
jecxz
xorl
pusha
mov
pop
aad
shrd
pop
repz
cmpsb
test
pop
lods
sbb
vxorps
push
je
out
ret
xchg
fucompp
push
sub
test
mov
or
aas
fs
sti
jecxz
adc
and
or
ljmp
sub
fldt
fimull
or
mov
into
cmc
cmp
insl
push
mov
dec
popf
aam
dec
mov
leave
pop
sub
push
out
xchg
lds
and
addr16
mov
in
insl
jb
je
add
clc
mov
rclb
repz
xor
sbb
aaa
ja
xor
jb
data16
pop
xlat
sbb
pop
cmpsl
lcall
sub
test
mov
pop
xchg
inc
cmpsb
and
inc
rcl
dec
call
enter
int
mov
pop
int
out
jmp
call
push
scas
dec
add
ret
testb
aaa
jl
mov
xor
pop
stos
je
cmpsl
daa
or
fsub
scas
add
loopne
push
nop
jge
sarl
or
push
rclb
xchg
ljmp
adc
pusha
sarb
mov
and
imul
xchg
jge,pn
in
sub
push
mov
les
dec
lret
sbb
fscale
add
mov
daa
push
jnp
xchg
push
stos
lcall
mov
adc
xor
out
jecxz
or
lahf
dec
push
mov
shrl
and
enter
dec
push
packuswb
outsl
in
inc
pop
xor
ja
in
mov
mov
add
jns
std
insb
ss
mov
cltd
ret
inc
lahf
enter
negb
mov
or
add
jp
push
movsb
push
subl
sub
xchg
and
into
mov
xorl
icebp
inc
je
stc
xchg
jl
aas
je
rcrb
sbb
pop
push
push
pop
mov
push
popa
sub
xor
mov
je
jecxz
mov
jo
inc
lods
jno
bound
add
shlb
in
out
int3
stos
nop
push
fsubrl
mov
xchg
sbb
lahf
inc
sub
xor
mov
lcall
push
popa
jl
cmp
outsl
icebp
shlb
push
cmp
cmc
lods
outsb
out
ljmp
ret
loopne
out
adc
add
stos
out
jnp
adc
add
dec
push
scas
inc
test
or
pop
cmpsl
add
fisubrl
rolb
cmp
fdivrs
sub
xchg
push
mov
mov
mov
ljmp
xchg
stos
cmc
push
jl
stc
push
scas
call
and
fstps
xchg
cmp
and
dec
add
icebp
aas
ret
and
mov
aaa
enter
pop
loopne
adc
jl
push
std
xorl
or
or
adc
mov
mov
ret
jge
pop
pop
gs
xchg
sarl
cmp
and
mov
jbe
pop
xor
fcompl
aaa
xor
cmpsl
jns
fs
gs
sub
lcall
popf
inc
lea
inc
and
mov
sti
mov
push
insl
sub
movsb
cmp
fisttpll
pop
adc
adc
sub
jno
xor
bound
push
dec
outsb
sub
jo
jge
cld
xchg
ret
push
lahf
sahf
and
mov
stc
cwtl
adc
pop
pop
pop
xor
dec
push
adcb
fldl
das
and
iret
push
js
pop
stc
dec
lock
mov
push
push
dec
int3
pop
xor
out
adc
cmp
mov
and
mov
pop
mov
aad
pop
pop
sbb
or
jns
fdivrl
scas
aas
test
nop
xor
xor
pusha
rcll
test
or
pop
mov
arpl
aas
sbbb
enter
xchg
xor
and
icebp
jbe
test
jmp
pop
xor
xchg
jae
fstpt
mov
xchg
mov
lock
pop
pop
repz
mov
fdivrl
fcoml
or
mov
lret
cmp
inc
add
lods
pop
add
nop
movsb
mov
int
ret
icebp
or
das
xor
into
lret
jbe
cmp
cmp
adc
mov
adc
inc
inc
push
mov
or
mov
jno
push
push
or
cmp
aad
sbb
or
bound
fisttpll
lret
jne
xchg
or
sub
and
les
dec
xor
aas
popf
and
mov
into
test
cli
cmc
lea
fwait
dec
mov
adc
mov
ljmp
stos
gs
ja
xor
daa
in
mov
cmp
mov
cmp
ja
cs
mov
inc
jle
push
mov
aas
in
rcrl
add
shlb
ss
dec
pop
bound
inc
out
mov
icebp
hlt
lahf
sti
pop
xor
fstl
mov
orl
push
jl
pop
insb
shrb
pop
fsubrs
pop
mov
mov
ds
in
mov
mov
movb
daa
popa
mov
cs
lcall
sbb
idivl
leave
stos
xchg
pusha
js
sub
jge
inc
cwtl
ffreep
or
arpl
rolb
push
or
pop
enter
push
sbb
dec
push
mov
mov
or
enter
pop
es
icebp
test
xchg
movsl
ljmp
roll
call
mov
mov
push
or
add
sub
xchg
inc
les
jg
xchg
mulb
xor
adc
xchg
in
mov
xor
mov
pop
lcall
shll
rcll
insl
push
imul
movsl
sbb
lahf
dec
ds
push
shlb
mov
aad
bnd
rcll
in
cltd
int
add
dec
sti
or
addb
push
and
insl
xchg
sar
mov
inc
stc
loopne
push
repnz
cmpsb
mov
data16
pop
jnp
xchg
mov
ds
std
cltd
out
mov
sub
popf
fwait
sti
bound
shl
mov
shrb
sub
hlt
hlt
sarl
adc
push
insb
jbe
and
pop
xor
add
adc
lds
in
in
cmp
mov
add
lret
test
add
int
push
add
and
sbb
mov
pusha
mov
mov
lahf
pop
push
js
loopne
xchg
cmc
xchg
jnp
inc
rcrl
mov
jecxz
bound
je
lea
adc
lds
call
add
adc
das
push
movl
out
mov
loopne
mov
pavgw
xchg
cmp
cmp
jecxz
sbb
arpl
pusha
mov
mov
lcall
fiadds
adc
in
jl
mov
dec
cmp
out
data16
ss
mov
out
adc
jo
pop
xchg
test
xor
sub
xor
rol
lods
xchg
xor
mov
fs
rcr
add
shll
repnz
lret
xor
and
fwait
mov
pop
ljmp
dec
mov
jne
or
dec
xor
mov
dec
fwait
or
mov
daa
insb
mov
movsl
or
adc
aam
adc
or
cmpb
mov
and
jo
sti
test
pop
movups
dec
dec
mov
or
lret
out
movsb
jae
and
fistl
icebp
ss
cs
scas
xor
aas
gs
mov
xchg
fcomps
adc
dec
arpl
mov
jae
xchg
mov
sub
cs
call
inc
js
test
int
adc
in
cmp
sub
xchg
pop
shll
ja
inc
sbb
in
negl
mov
push
jmp
mov
mov
cmp
mov
and
cmp
xchg
sahf
out
aam
inc
push
jb
and
inc
out
dec
push
cmpsl
xchg
scas
sub
push
and
fsubrp
or
mov
sahf
cmpsb
mov
jg
movsl
dec
add
pushf
xor
loopne
outsl
push
daa
fs
fs
jo
push
aad
xor
mov
xor
jbe
movsb
adc
lds
jns
data16
and
dec
dec
in
gs
repz
test
fstpl
mov
enter
xor
inc
or
inc
scas
add
rorb
in
add
cmpsl
fimull
pusha
das
sbb
pop
and
test
loope
xchg
sbb
scas
dec
mov
aam
mov
test
sahf
cwtl
stos
mov
inc
leave
testl
outsb
nop
sub
testb
dec
pop
std
hlt
ds
movl
int3
andb
jle
ljmp
pop
jb
lea
push
mov
aas
inc
jbe
sub
ficoms
cmovne
mov
lcall
loopne
pop
into
in
adc
add
jle
out
scas
ja
stc
dec
sbb
shl
in
stc
mov
xchg
xchg
push
pop
dec
mov
sti
out
repz
cli
sub
stos
add
hlt
adc
scas
ds
xchg
adc
das
inc
ja
mov
inc
arpl
xchg
and
add
or
out
mov
fucomp
xchg
adcl
jle
lret
inc
loop
and
mov
adc
adc
mov
push
pop
and
aas
cwtl
jmp
movsb
bound
jmp
push
cmpl
popf
imul
xchg
lret
jmp
repnz
lret
sub
mov
dec
outsl
adc
out
mov
std
sbb
nop
loope
notl
clc
xor
jmp
mov
adc
pop
jnp
cmpsl
cmp
pop
xchg
add
lret
imul
and
enter
adc
hlt
mov
xor
mov
inc
adc
rorl
push
jne
xor
xchg
jnp
pop
iret
repnz
or
std
das
adc
mov
adc
sub
mov
xor
mov
test
xchg
mov
inc
add
lahf
mov
xor
or
dec
adc
psubsb
fistpl
loopne
rolb
stc
dec
push
cltd
push
imul
clc
mov
mov
sbb
sub
mov
pop
sbb
leave
cli
std
stos
mov
mov
or
adc
in
movsl
fisubrs
mov
adc
outsl
ficomps
mov
mov
scas
ss
stos
aas
sbb
sub
and
and
stc
out
imul
bound
inc
inc
or
movsl
or
test
in
icebp
mov
inc
sub
add
and
pop
and
cmp
ficoms
mov
inc
inc
test
bound
sub
or
adc
les
xor
cmp
daa
sbb
aaa
jne
push
imul
and
pusha
pop
ror
pop
fidivs
test
leave
push
movsb
sub
jg
push
aas
fsub
imul
int3
adc
fdivrl
lret
shr
ljmp
repnz
test
push
aam
popf
add
leave
sbbb
jbe
lock
mov
pop
push
mov
popf
clc
clc
jbe
inc
into
and
mov
mov
add
jo
clc
cmpsb
lods
stc
clc
xchg
iret
subl
cli
mov
and
ss
lcall
jecxz
and
ret
xor
push
push
in
scas
jecxz
push
call
xchg
mov
ret
xlat
sub
outsb
out
push
xchg
pop
cmp
or
mov
repz
push
push
ja
clc
loopne
pop
scas
push
adc
loop
adc
jb
mov
mov
xchg
pop
mov
outsl
enter
mov
jnp
mov
xor
loop
lods
sub
xchg
mov
sub
dec
pop
xchg
mov
enter
cmp
xor
out
imul
loope
daa
lahf
add
jle
fdivl
sbb
popf
sbb
pop
lods
xlat
jp
cmp
pop
sbbb
mov
out
inc
in
pop
xchg
sbb
pop
jle
dec
and
xchg
clc
pop
cmp
orb
push
shl
lahf
imul
jb
data16
mov
mov
rol
stc
cltd
mov
les
and
sub
xchg
or
aas
test
push
xorb
je
mov
test
push
divl
dec
cmp
sbb
dec
mov
into
mov
fldcw
sub
jmp
dec
xlat
sbb
outsb
sarb
inc
sub
or
adc
xchg
add
arpl
mov
pop
test
lret
jg
adc
xchg
xchg
pop
lcall
push
pop
lods
adc
adc
xor
nop
int
jne
push
xor
cmpsb
out
add
xchg
cmpsl
arpl
push
xchg
cltd
lock
mov
dec
or
or
loope
push
jge
cmp
es
js
cmp
lds
arpl
add
xchg
stos
and
std
jnp
sbb
ds
sbb
mov
nop
inc
arpl
rorb
xor
inc
cs
push
iret
cmp
lret
mov
and
pusha
jl,pn
mov
sbb
sbb
sbb
add
repnz
test
push
jb
aam
je
cmpsb
cmc
faddl
hlt
aam
pop
xchg
les
test
mov
sti
stos
loop
add
xorb
or
lods
gs
jae
dec
mov
rcrb
daa
xor
sbb
iret
mov
mov
inc
sarl
or
dec
sub
mov
in
int
nop
lahf
clc
adc
js
inc
xchg
jne
push
or
test
lods
movsb
js
xor
fwait
sub
das
cmpsb
fsub
test
icebp
pop
repz
jle
xor
mov
mov
add
fstpt
xor
push
mov
mov
jnp
outsl
sub
das
movsl
jmp
repz
xor
pop
dec
aad
es
es
lret
pop
pop
xchg
push
dec
xor
push
push
stc
movsb
imul
mov
jne
pop
pop
fwait
sub
xchg
xchg
mov
orl
or
cmp
cmpsb
jl
loope
jecxz
xor
repz
popf
clc
cmp
cmp
inc
sub
dec
aad
xchg
movsb
xor
jns
inc
cmp
inc
fs
cmp
and
orl
mov
testl
leave
pop
dec
mov
push
mov
repnz
scas
xlat
mov
movsl
mov
pop
adc
mov
in
jb
jno
in
fisttpll
inc
lds
inc
jne
lret
mov
mul
sbb
lock
mov
or
mov
sbb
jbe
inc
cmc
jo
pop
push
push
in
ret
ror
mov
in
in
aas
pop
lcall
or
add
add
ret
cltd
test
insl
std
xor
rcrl
xchg
outsl
into
xchg
inc
rcl
mov
push
test
push
mov
int
fmul
and
lret
jnp
inc
test
pop
ja
cmp
cmp
es
sbb
or
js
sbb
push
mov
sbb
faddl
insb
ror
push
xchg
idivb
and
mov
jecxz
xchg
dec
ljmp
push
adc
pop
or
sub
sbb
xchg
or
lret
int3
jl
cmpsb
xor
into
jb
out
in
fistps
jo
jb
xchg
push
daa
cwtl
loopne
aas
ret
out
xchg
loop
dec
shrb
fwait
loopne
stos
adc
pushf
punpcklbw
or
push
and
pusha
mov
pop
jp
push
ss
sub
aaa
arpl
xor
and
pop
mov
mov
push
mov
cmp
lahf
aas
sbb
addr16
fdivp
push
repz
jns
mov
cmc
push
or
xor
sarl
imul
sar
popf
pop
dec
pop
add
ljmp
jno
into
leave
pop
adc
test
rclb
std
push
sahf
adc
push
fs
lods
aaa
cmp
xor
adc
jge
jne
sbb
or
in
es
ljmp
jo
xchg
fcoms
sbb
dec
imul
dec
jp
test
add
mov
add
popa
mov
icebp
inc
loopne
pop
lahf
dec
fsubrl
cmp
ret
mov
outsl
out
jns
sbb
leave
dec
sbb
stos
mov
in
cmp
ret
pop
sbb
cmp
pop
sub
dec
pop
std
lret
xor
sub
xor
lods
sahf
popf
fwait
ja
cmp
lds
sub
pop
sbb
pushf
sarb
daa
sub
popf
rorb
pop
cs
sbb
out
mov
popf
mov
aad
scas
mov
cmpsb
mov
aad
ret
jge
cmc
ljmp
rol
not
jno
adc
dec
jge
aad
mov
cmp
jmp
sub
mov
loope
sbb
aad
lret
mov
test
aas
add
and
or
push
xlat
push
loopne
push
pop
mov
xchg
mov
or
and
ret
icebp
jbe
popf
push
xchg
jge
movsl
push
jg
dec
pop
into
jge
mov
test
lret
test
mov
ficomps
out
rorb
cli
fs
fwait
bound
xchg
xor
jg
clc
add
jmp
pusha
ret
cltd
sbb
inc
push
mov
jnp
pop
xlat
lods
jo
scas
jae
ficomps
mov
push
fbld
cmp
sbb
cwtl
jne
cmp
repnz
pushf
mov
xor
mov
fmull
std
xor
outsl
decl
cmp
pop
mov
adc
and
ret
add
out
icebp
adc
xchg
sbb
pusha
lahf
movsb
pop
jnp
gs
fwait
in
xchg
call
cmc
mov
or
popf
dec
popf
inc
inc
adc
add
mov
scas
das
push
dec
leave
into
sbb
mov
loopne
cmpsl
or
fdivs
xchg
sbb
pop
dec
jecxz
cmpsb
jp
je
pop
xor
xchg
les
lods
add
jb
icebp
call
mov
sub
into
inc
fwait
daa
clc
pop
push
movsl
fistpl
adc
and
cld
and
mov
sub
loopne
or
dec
iret
or
and
push
movsl
ljmp
out
cmp
pop
sarb
mov
imul
dec
mov
cmc
jp
or
mov
shrl
mov
insb
and
cmpb
in
and
fsub
xor
xor
dec
std
push
sbb
sti
mov
pop
sbb
cmp
xchg
xlat
loopne
je
push
pop
loope
pop
jp
enter
dec
cmp
cltd
in
lea
dec
mov
cmp
mov
shr
push
mov
push
jl
das
cmp
push
jb
cmp
mov
cltd
and
fbstp
js
nop
repz
mov
sti
dec
out
sub
mov
xchg
mov
inc
outsl
pushf
rcrb
pop
mov
jne
mov
loop
lods
xchg
cmp
out
mov
out
push
outsl
in
sbb
lea
push
scas
pop
ror
sbb
xlat
push
lcall
pop
inc
in
outsl
pusha
loop
fidivrs
adc
in
sahf
mov
xchg
and
jb
sahf
mov
xlat
stos
and
mov
pop
push
push
pop
xchg
push
aam
and
hlt
lret
fcoms
aam
jg,pt
mov
pop
loopne
lods
jmp
cmp
xchg
jae
testb
mov
mov
pusha
orl
mov
cmpsl
insb
movsl
je
and
xlat
jp
aas
or
call
mov
xchg
leave
and
xchg
push
xchg
pop
into
cwtl
fisubs
imul
inc
arpl
pop
dec
insl
leave
lea
mov
mov
sti
aam
mov
inc
pop
dec
jnp
mov
test
jns
mov
mov
dec
aam
jp
cmpsl
leave
mov
dec
imul
daa
scas
aam
cli
leave
cmpsl
sbb
mov
adc
loop
iret
jg
jp
test
lret
sti
cmp
int3
cmp
rcrb
scas
pop
jno
aam
mov
lret
cmp
mov
rcll
in
sub
roll
ljmp
pusha
fstps
mov
sbbl
ljmp
xor
ret
or
lret
mov
and
push
rolb
out
jg
int3
xchg
push
inc
cld
pop
xchg
mov
in
sti
adc
lahf
jecxz
xchg
bound
pop
into
test
mov
jns
repnz
aam
cmpsb
out
push
cld
insb
sub
add
lods
lea
jle
imul
pop
cmp
push
xor
in
adc
inc
jg,pn
xchg
inc
xor
sbbb
mov
mov
mov
mov
cli
mov
dec
lods
hlt
out
aaa
pop
cmpsl
int3
sub
add
xchg
test
lret
inc
lods
xor
xor
xorl
pop
outsl
lods
stos
mov
aad
xor
mov
mov
loop
pop
data16
mov
dec
adc
int3
or
pop
xlat
cmp
mov
mov
xchg
dec
jnp
mov
adc
cld
and
sub
fists
dec
cli
addb
xor
into
cmp
xchg
cmp
cmp
mov
lahf
call
test
sub
cmp
pop
aaa
push
notb
sbb
sbb
sub
inc
stos
aam
aaa
mov
loop
pushf
call
dec
adc
enter
in
sbb
or
pushl
add
push
divb
ja
inc
add
cltd
inc
ss
xor
shrb
and
insb
mov
dec
aas
aam
ljmp
adc
out
and
out
inc
xor
lret
stos
sahf
sbb
lret
mov
adc
je
and
es
mov
andl
mov
ja
addb
and
cmpsb
jb
jmp
pop
adc
imul
add
jnp
scas
leave
hlt
int3
sbb
rcr
fwait
push
mov
das
outsl
repz
outsb
jbe
add
daa
xchg
shll
out
nop
cmp
int
dec
or
mov
sahf
into
sbb
sbb
push
jmp
jl
addr16
rcrw
lret
out
and
stc
push
xor
mov
and
add
imul
cld
mov
lahf
fwait
and
mov
dec
mov
ficoml
cmp
fsubrs
pop
lret
cmp
movsl
dec
or
adc
jae
push
dec
push
es
mov
sbb
repz
dec
sbb
dec
test
lods
dec
out
std
addb
in
rclb
repnz
rolb
sub
sub
es
popf
scas
mov
pop
jbe
inc
mov
es
inc
and
shr
sub
int
sub
jecxz
enter
adc
lods
ficoml
add
adc
push
push
push
adc
mov
inc
mov
ds
pop
movsb
cmp
data16
shll
cmp
jecxz
inc
mov
mov
repnz
int3
push
pop
mov
out
mov
les
bnd
push
push
outsl
or
lods
or
dec
add
hlt
xor
jl
adc
push
loope
into
fsubrs
xchg
mulb
movsb
push
adc
bswap
jae
adc
mov
inc
and
shr
test
aad
lds
dec
or
or
sbbl
xchg
inc
xor
clc
cmpsl
mov
dec
xchg
fs
fs
and
stos
dec
mov
or
inc
pop
adc
add
mov
or
jge
mov
push
mov
and
jo
mov
cmp
inc
jns
stos
pop
enter
lret
fs
dec
leave
fucomp
mov
dec
test
in
adc
push
aad
mov
popf
cmpsb
ret
dec
push
inc
sbb
lock
pop
into
pop
subb
sub
insb
mov
fisttpl
int
cmp
out
insb
xchg
lods
imul
mov
lahf
out
pushf
mov
pushf
ljmp
jp
icebp
ds
scas
in
jne
mov
mov
int3
mov
mov
mov
mov
add
or
pop
rcll
pop
int
adc
mov
xor
add
push
test
xchg
test
call
jmp
aad
xor
in
fbld
mov
mov
fs
jne
sub
lcall
js
and
push
cmpl
xchg
xlat
dec
push
pop
scas
pushf
ljmp
mov
mov
adc
loope
jp
inc
flds
icebp
sahf
fstps
pop
mov
fldcw
sti
fldcw
test
mov
mov
mov
pop
aam
xchg
mov
lods
jno
inc
or
rolb
test
dec
jle
jo
cwtl
sbb
ss
or
cmpsb
nop
pushf
xchg
cmp
mov
jge
shlb
inc
stos
scas
rclb
jb
mov
xchg
mov
pop
sbb
pop
into
mov
push
dec
fxch
sahf
ds
or
add
dec
xor
fnsetpm(287
loop
cmp
mov
mov
and
loopne
jns
leave
inc
xchg
idiv
repnz
mov
dec
adc
lret
pop
outsb
jne
inc
insl
sub
xor
shrb
test
pop
sbbb
loope
decb
scas
mov
jmp
mov
nop
dec
and
rorl
mov
test
and
inc
jbe
mull
mov
sbb
pushf
in
mov
mov
lret
cmpsb
inc
mov
dec
or
shl
ss
or
notl
stc
sbbl
sub
mov
setns
cld
add
mov
push
dec
mov
mov
das
out
rolb
inc
push
notl
call
sub
inc
cmp
xchg
mov
dec
shl
lock
xchg
es
push
shrl
in
hlt
insl
adc
mov
pop
xorps
jo
outsl
nop
mov
rorl
add
lods
and
mov
mov
or
daa
add
iret
add
jo
shl
push
sbb
mov
push
push
mov
adc
push
jl
cmpl
popf
clc
orb
sub
sbb
iret
or
insb
xor
mov
mov
daa
inc
dec
adc
cmp
imull
sbbl
sub
lret
adc
pop
out
cwtl
je
pusha
push
adc
daa
sub
or
or
fstl
adc
int3
aam
fdivl
mov
movq
je
xchg
insl
sub
pushf
sub
jno
les
xchg
cli
cmp
int3
daa
lock
pop
shlb
je
xchg
sti
push
xor
mov
lcall
mov
sarb
mov
shlb
dec
mov
lret
arpl
jae
push
mov
push
cli
sbb
scas
pop
pop
scas
popf
adc
cmp
repnz
in
and
push
add
push
ss
lret
imul
ja
shl
shlb
in
mov
leave
mov
xchg
pop
mov
dec
in
out
cli
fmull
inc
iret
cs
mov
or
out
or
gs
xor
mov
aaa
out
jb
cmc
sub
cwtl
shl
mov
mov
xchg
cmp
seto
sbb
inc
and
sti
inc
jge
stc
lea
lret
sbb
dec
cld
sbb
inc
and
cli
dec
cmp
xor
sub
ret
sbb
ret
les
fwait
das
push
mov
and
mov
mov
nop
jno
and
jg
xor
cmp
std
lea
fsub
mov
jne
filds
lock
pushf
dec
dec
or
int
pop
sub
fwait
mov
in
psubd
fnsave
pop
adc
jo
dec
adc
aaa
pop
sbb
repz
xchg
sbb
dec
idiv
out
cmp
add
adc
sub
je
push
mov
hlt
xchg
imul
push
adc
dec
jge
and
leave
add
leave
add
and
sub
movsb
int
sti
outsb
xor
ret
push
jns
sbb
xchg
js
test
in
dec
into
add
jno
loopne
aam
pop
mov
mov
jmp
inc
dec
je
xchg
cs
cmpsl
xchg
mov
adcb
sub
mov
rolb
jb
push
cmpsl
lahf
push
lcall
sub
and
mov
sti
jl
mov
push
movsl
dec
cmc
push
mov
insb
sub
test
mov
add
inc
sti
adc
insb
pop
mov
inc
outsl
pop
xor
mov
jne
lcall
js
inc
test
pushf
in
pushf
sub
jae
or
cmp
ljmp
mov
dec
inc
mov
mov
cld
or
loope
adc
push
out
push
jb
push
enter
sbb
pop
lods
mov
sbb
cmp
divb
xchg
js,pn
push
push
idivb
out
jge
insb
inc
jbe
pop
fldcw
inc
push
clc
dec
xchg
rolb
add
adc
in
adc
aam
push
mov
fsubl
mov
insl
popa
test
cmp
addr16
lods
sbb
sbb
jge
imul
addl
popa
sbb
xchg
ja
mov
add
dec
cmc
sub
jle
addr16
or
pop
outsb
xlat
cli
mov
es
mov
xchg
sahf
push
cmpl
xor
movsb
jg
call
ror
sub
or
clc
jmp
into
and
adc
jne
loope
mov
jmp
jl
add
sbb
jp
clc
loope
scas
mov
jecxz
push
cmp
sub
or
aam
testl
sub
pop
outsb
adc
test
inc
sahf
popf
lock
decl
stos
mov
and
lcall
xor
shlb
ljmp
clc
jo
mov
or
data16
lods
cwtl
adc
pop
mov
add
xor
adc
cmpsl
insb
incl
push
inc
jne
inc
xchg
in
addl
inc
aaa
and
jb
stc
mov
loop
int3
mov
jmp
or
inc
jl
mov
loopne
aaa
bnd
and
fsubrs
mov
mov
and
xlat
push
test
push
or
idivb
fs
mov
lcall
mull
mov
ds
push
test
mov
iret
sahf
aam
push
fmuls
mov
pop
pop
movb
cmp
xchg
in
sahf
dec
das
lods
ds
jb
push
cmp
and
scas
repz
cwtl
lock
mov
cwtl
and
pop
loopne
dec
cli
ss
lods
inc
add
or
cmp
je
jp
jecxz
cmp
xchg
lret
or
test
ret
cmp
inc
pop
imul
add
lea
lods
iret
sbb
test
iret
sbb
aad
dec
int3
push
and
out
stc
pop
and
or
outsl
popl
shlb
add
ja
repnz
lret
addr16
xchg
jno
pop
insl
ds
push
ret
imul
sub
loop
push
add
adc
fnstenv
mov
cltd
int
inc
insl
xchg
lret
pop
dec
out
push
loope
test
jne
imul
push
test
or
or
jg
shr
push
cmp
mov
inc
das
xor
sbb
and
sbb
push
insl
rclb
xchg
and
jl
out
cld
inc
call
cli
push
daa
xor
fildll
dec
pop
pushf
ret
push
xor
push
mov
pop
cltd
mov
fildll
xlat
sub
stos
ret
daa
cmpsl
ja
gs
fstl
test
aam
mov
rcl
fcmovb
orl
cmp
lret
aas
rcrl
mov
shrl
js
daa
fidivrs
in
xlat
enter
xchg
xor
imul
lcall
pop
push
fsubrl
pop
pop
mov
jge
in
loopne
out
sub
mov
jl
and
es
adc
inc
mov
scas
xchg
stos
outsl
lcall
enter
gs
mov
sbb
icebp
xchg
xchg
pop
lahf
aad
jae
aas
fucom
sub
imulb
sbb
loope
out
sub
push
sub
subb
mov
repz
dec
out
flds
sbb
mov
adcl
mov
xor
mov
cwtl
out
or
xor
mov
adc
mov
mov
out
or
sti
loop
or
loopne
sbb
or
sbb
add
popa
cmp
ret
push
sbb
add
add
or
mov
ja
lret
mov
nop
xor
mov
and
and
mov
mov
loope
sub
call
xchg
push
ja
into
ss
sahf
insl
sbb
arpl
imul
jle
in
jl
pop
pop
std
push
aas
fstps
ja,pt
pop
sahf
dec
fcomi
and
fdivs
jno
imul
mov
rcl
lret
sub
js
pop
pop
xor
dec
mov
loop
and
cmp
lahf
jl
enter
sar
mov
push
or
or
pop
mov
mov
lods
icebp
popa
scas
je
pop
push
cld
stos
stc
push
cmc
dec
sub
xchg
jo
dec
je
xlat
jns
push
fsubl
mov
mov
sbb
sub
imul
dec
xchg
fsubl
sub
daa
xchg
and
cmp
movsl
stc
mov
xor
fs
mov
dec
rcrl
and
cltd
push
jo
dec
mov
insb
add
sbb
jp
add
pushl
push
adc
xchg
pop
add
icebp
in
roll
es
int
push
js
int3
push
leave
les
mov
sbb
pusha
dec
pop
sbb
in
jb
add
cmp
fs
das
push
pop
popa
inc
inc
lcall
mov
pusha
inc
bound
push
add
and
test
arpl
cs
jne
mov
mov
aaa
les
fidivl
movsb
sbb
cmpl
pushf
gs
push
les
add
mov
scas
jne
imul
push
adcl
in
adc
or
mov
mov
setl
out
sub
addr16
cmp
ret
jecxz
jb
lods
bound
jge
add
data16
aad
sbb
and
adc
xor
mov
xor
add
cltd
adc
repz
fxch
shlb
mov
orb
xchg
xor
ror
sub
loop
in
push
jp
add
pop
ret
jnp
pop
or
cltd
push
add
adc
xchg
movsl
out
out
jmp
xor
lods
inc
cld
jle
stos
pusha
xchg
loop
fstpt
cmp
inc
shl
test
dec
popa
xchg
int
mov
inc
fsubr
push
lret
inc
frstor
cmc
pop
ds
out
jle
pop
stos
mov
add
rorl
xchg
pop
jmp
push
loopne
push
and
cltd
xchg
aad
cmp
arpl
out
lret
dec
or
xlat
sub
ds
int3
arpl
and
stos
mov
addl
lods
dec
lds
or
pop
mov
mov
bound
out
testl
jmp
movsl
push
and
lea
sub
fidivs
add
orl
fdivrl
stos
ljmp
pop
jl
mov
hlt
aaa
outsb
jl
scas
mov
jp
mov
imul
push
and
dec
iret
fcomps
inc
adc
mov
outsl
and
in
jmp
lcall
pushl
and
pusha
lret
call
pop
ret
xor
mov
pop
daa
xchg
in
fmuls
sbb
fsubl
lret
cmp
and
scas
lret
sub
std
out
fs
xchg
mov
hlt
enter
or
scas
lock
and
andb
das
push
aam
push
sbb
inc
add
inc
aam
je
ret
cmpl
into
pop
cltd
jno
sub
int
ror
out
sub
push
enter
xor
xchg
sbbl
lret
in
lods
mov
cmp
mov
stc
or
jbe
xor
push
inc
jle
jmp
out
enter
jp
sbb
push
cmc
lcall
out
pop
inc
faddl
into
push
pushf
pop
fidivrl
adc
xchg
ljmp
test
stos
mov
adc
add
nop
inc
incb
in
dec
sahf
sub
mov
add
push
jb
lock
sbb
inc
sub
sbb
or
pop
data16
cmp
adc
sub
push
adc
xchg
leave
xchg
xlat
popa
fsts
and
inc
insl
push
das
ljmp
stc
ja
mov
into
and
test
xchg
ror
pop
mov
pop
cmp
imul
repz
pop
lea
data16
ud2
lock
cmpsl
mov
or
pushl
pop
sub
dec
fptan
fwait
sub
std
cmp
fildll
pusha
icebp
mov
mov
or
jb
push
adc
addr16
out
push
inc
cmp
mov
mov
jp
icebp
daa
arpl
xchg
cwtl
pop
movsl
pop
fistpll
arpl
sub
mov
inc
xor
pop
sub
rcr
mov
push
add
and
mov
negb
test
lret
adc
push
lods
cmpsl
push
jle
add
shrb
fs
cmp
adc
test
pop
fldcw
add
sub
imul
xchg
repnz
xor
lret
dec
or
icebp
lods
push
pop
enter
int
push
inc
popa
pop
push
adc
cmpb
fldcw
test
and
int
outsb
jbe
xor
jno
pop
inc
shrb
stc
in
jp
jnp
xor
cmp
xor
das
imul
xchg
and
push
std
shrb
jecxz
cmc
mov
dec
xchg
pop
pop
add
mov
shl
leave
push
repz
xchg
push
sub
mov
pop
mov
adc
and
mov
out
popa
pop
lea
sub
jnp
push
arpl
ficompl
loope
mov
bound
jne
xchg
lret
pop
sti
nop
pop
push
mov
jae
pop
sti
call
dec
inc
inc
jbe
lret
pop
cwtl
push
and
sbb
adc
fisubs
in
xchg
push
inc
mov
icebp
jg
adc
cld
movsb
cmpsb
js
cld
mov
jg
sbb
aaa
pop
push
ds
mov
push
mov
loope
jbe
aaa
sub
mov
outsl
jmp
jbe
jnp
jne
loopne
jno
inc
xchg
fimull
gs
repz
jns
icebp
stos
adc
fistps
cld
and
movsb
imul
loope
fsubl
xchg
mov
pop
pop
repz
dec
jecxz
pop
icebp
or
jo
cmp
dec
xor
adc
inc
sbb
adc
push
xchg
rorb
loop
movdqu
push
mov
out
scas
mov
pop
jl
hlt
js
dec
and
mov
in
movsl
inc
cmp
jae
adc
out
jg
lret
cmp
add
xchg
stos
sub
jae
testb
clc
jp
sub
icebp
xchg
add
xor
pushf
and
add
sahf
aas
lret
pop
dec
push
stos
addr16
or
dec
sbb
push
clc
adc
inc
add
outsb
push
sbb
mov
pushf
jb
mov
pop
xchg
loop
test
lret
mov
push
jns
jecxz
out
mov
repz
fwait
jp
mov
icebp
xor
aaa
rcrb
in
pusha
add
xchg
add
cltd
sub
mov
lret
add
xorb
xchg
addr16
add
std
int3
sbb
aam
das
lock
orb
faddl
adc
mov
cmpsl
mov
sti
in
arpl
add
mov
or
dec
js
pushf
and
cs
mov
pop
pop
fs
mov
std
add
mov
adc
mov
or
fldenv
test
jno
sbb
jmp
jle
fnstenv
mov
xchg
adc
cmp
lcall
cmp
sarl
leave
and
push
pop
xor
vpunpcklbw
dec
popa
xor
popa
aas
arpl
xor
mov
push
pop
mov
pop
scas
arpl
jbe
xchg
das
out
push
fildl
or
xlat
add
stos
and
cltd
pop
add
pop
decl
scas
ret
pop
inc
dec
daa
out
adc
pop
add
pop
mov
push
adc
imul
jbe
pop
jp
xor
movsl
mov
pop
xchg
test
jb
xchg
fnstcw
sbb
outsl
mov
test
jmp
data16
mov
jae
cmp
dec
outsb
gs
and
pop
lea
inc
fsubr
inc
cld
repnz
pop
mov
and
bound
push
push
insb
mov
and
arpl
orb
lock
test
push
pop
or
push
test
or
popf
cmp
clc
adc
mov
sti
or
mov
lock
lcall
lods
jecxz
xchg
xchg
roll
fwait
mov
int
cmp
fabs
call
sub
cmpsl
imul
repnz
xor
jbe
aad
jb
sbb
imull
mov
mov
pop
push
dec
ret
idivl
mov
ret
jo
mov
sti
push
addr16
xor
out
cwtl
lds
adc
cmp
roll
pushf
and
int3
int3
pop
ret
xchg
mov
push
scas
cmpsl
enter
in
shlb
rolb
comiss
sbb
repz
scas
and
push
popf
out
mov
sub
push
je
jb
out
pop
out
cs
adc
cmp
cmp
icebp
cmp
fmul
movsl
and
push
push
aas
pop
loope
cmp
es
cmp
xor
push
mov
hlt
sub
fldenv
xchg
jp
inc
das
push
or
aaa
scas
leave
xor
and
jl
or
xor
out
or
jae
insl
lret
lods
lea
mov
mov
dec
mov
and
lods
jmp
add
mov
imul
and
clts
adc
jle
popf
clc
sbb
aam
mov
xor
xor
xchg
pushf
adc
or
fisubs
fimull
inc
pushf
subb
xchg
mov
nop
movsb
movsl
cmpsb
loopne
mov
or
ds
dec
sub
xchg
repz
jb
pop
data16
push
xor
daa
xor
lds
dec
sbb
stos
shrb
popa
into
outsb
xchg
fadd
pop
scas
sbb
in
bound
mov
test
cmp
pop
movsl
jae
subl
fstpt
add
pop
sub
sub
or
lahf
xchg
pop
mov
and
mov
ss
scas
fwait
adcl
inc
mov
push
adc
adc
sahf
dec
stos
das
jno
loope
xor
sub
mov
int
ret
push
sbb
ljmp
pop
dec
pusha
xchg
push
push
aaa
cs
sbb
call
xchg
add
mov
stc
test
into
pop
sub
mov
test
push
xlat
or
test
aas
push
xchg
sbb
out
xchg
sar
repz
jge
xlat
mov
jb
pop
insb
cmpsl
mov
bound
enter
outsb
fdivrl
enter
hlt
adc
cmpsl
and
aam
mov
jg
or
jno
dec
cmp
movsb
xor
push
add
out
push
lret
add
mov
cmp
sub
out
inc
loop
jp
push
xchg
push
les
icebp
sahf
inc
outsb
pop
add
pop
mov
jp
pop
repnz
nop
xchg
xchg
iret
popa
xor
dec
jmp
mov
sarl
popa
xchg
pop
les
std
mov
cmp
pop
or
insl
fimuls
stos
mov
dec
into
jns
cmp
push
dec
mov
movsb
xorl
fwait
cmpsb
and
jbe
dec
jge
mov
fxch
arpl
int3
jl
pop
inc
retw
xor
xchg
jns
mov
notb
mov
cmc
mov
sbb
mov
shrl
push
mov
add
jg
bound
inc
adc
aam
in
jge
xor
mov
xlat
popf
or
shlb
insl
mov
std
aam
arpl
xchg
xor
shr
mov
pop
stos
inc
lods
cmpsl
dec
fmull
lret
sqrtps
push
jmp
ficompl
aad
dec
sub
adc
pop
cmpsb
cmp
xchg
push
aaa
mov
lret
xor
adc
jno
jecxz
mov
fwait
out
mov
jnp
mov
jns
das
sbb
dec
lret
int3
sbb
js
les
push
xlat
jno
out
push
into
test
aas
imulb
cltd
xchg
xor
and
jmp
sub
pop
push
nop
mov
mov
mov
mov
out
inc
repz
gs
ds
movsl
repnz
imul
insl
dec
jmp
jb
es
fwait
and
int3
sub
push
int
adc
icebp
dec
xchg
cpuid
cmpb
nop
push
xchg
test
jb
outsl
inc
divl
cmp
xchg
mov
xchg
inc
adc
arpl
mov
das
xchg
popf
push
out
sbb
das
xchg
cmpsb
gs
hlt
xchg
sarl
jmp
jle
pop
stos
jns
shrb
lahf
popf
cmpsl
push
mov
jmp
xor
aad
or
in
addr16
add
int
pop
fwait
xlat
rcl
xor
mov
jno
push
xor
mov
fnstenv
pop
mov
pop
repnz
xchg
xlat
divl
and
lea
pushf
and
cmp
out
mov
les
stos
stos
das
jg
je
cmpb
pop
out
pop
xchg
mov
icebp
aam
push
mov
je
pop
jnp
movsb
in
cld
out
std
cmp
xchg
mov
icebp
lcall
push
xchg
les
or
das
into
fisttps
pop
inc
pusha
jmp
shl
dec
shrb
scas
nop
jne
pop
xor
mov
mov
andl
fst
or
push
test
jnp
rcll
popf
sbb
xor
or
adc
jne
mov
dec
fs
mov
sub
mov
cmp
fnstcw
mov
cld
adc
mov
push
mov
repnz
mov
stos
or
mov
jmp
iret
loop
sbb
sub
int
cmpsl
mov
add
adc
scas
sbb
push
arpl
js
in
sbb
iret
cmp
sbb
sti
jo
cli
or
mov
or
lcall
in
fwait
loope
imul
subb
test
xchg
xchg
mov
pushf
test
je
adc
jmp
dec
out
ds
push
cmpsl
cmp
dec
stos
shl
mov
nop
popf
xchg
loop
add
lods
xchg
into
ja
insb
out
cmp
fisubs
rcl
inc
add
cmpsl
adc
mov
jl
cmpsl
adc
jmp
repnz
sbb
push
movsb
dec
int
imul
xor
jno
xchg
push
cli
sub
test
jns
arpl
gs
adc
or
xchg
jmp
in
mov
push
imul
sbb
xchg
cmc
or
mov
inc
jno
cmc
inc
adc
mov
sbb
ret
inc
lods
aaa
xor
pop
out
scas
daa
or
mov
into
xor
cmpsb
dec
pop
test
insb
push
test
jecxz
daa
addps
cmp
enter
lods
dec
sub
inc
clc
jne
jae
jae
decb
jge
aas
andb
mov
inc
repz
mov
push
cmp
lods
jb
loope
cltd
in
jbe
daa
lods
pop
dec
mov
xchg
adc
mov
sti
clc
enter
jmp
sub
add
int3
mov
or
aaa
in
jae
inc
push
sbb
mov
and
inc
enter
scas
imul
cmpsb
or
jl
nop
xor
nop
ja
arpl
cmp
inc
jns
movsb
inc
mov
jne
mov
movsb
rcll
std
into
add
inc
cmp
jns
mov
lret
shlb
pop
std
cli
mov
add
mov
fcoms
xchg
ds
das
call
jl
jne
xchg
mov
xchg
sbb
insl
ja
xchg
xchg
into
inc
cmp
pop
arpl
stos
push
xchg
and
push
mov
in
mov
dec
jle
dec
sbb
xchg
out
mov
mov
clc
insl
movsb
adc
fs
and
out
call
cltd
test
in
xor
and
lret
loopne
xor
cs
rcrb
pusha
push
test
cmp
insb
mov
jmp
push
insb
mov
bndstx
push
adc
push
mov
into
mov
jle
mov
xchg
in
or
jno
xchg
fadd
inc
int
in
nop
out
scas
aam
adcl
es
xchg
mov
in
jecxz
dec
lods
std
pop
imul
notl
sbb
mov
xchg
add
lahf
xor
stos
or
or
pop
inc
add
push
adcb
add
ret
pop
dec
icebp
push
cmc
jne
repz
mov
shlb
mov
pop
inc
test
enter
arpl
pop
movl
out
movsl
sbb
mov
jl
push
push
push
mov
add
inc
and
loop
adc
dec
jns
xchg
repz
outsl
xor
orb
mov
sti
mov
inc
mov
ds
xchg
or
imul
test
fs
dec
jp,pt
sub
je
mov
test
imulb
mov
insb
sub
jo
dec
pushf
cld
mov
xor
or
inc
rcrb
test
cmp
mov
jbe
cmp
adc
xlat
xchg
imul
push
sbb
or
mov
test
loopne
inc
fucomi
pushf
xchg
or
ret
mov
repnz
das
mov
xchg
cmp
aas
sbb
cmp
xor
shlb
subb
or
inc
sar
inc
enter
push
ss
adc
mov
in
test
jb
sti
jno
loopne
popa
aas
dec
or
into
shll
std
leave
pmaxub
mov
jae
xor
mov
jbe
mov
mov
fcoms
ja
pop
int
cmp
jae
mov
in
leave
mov
adc
and
xchg
cmp
fld
int
xchg
fmuls
insb
adc
xchg
clc
and
loope
mov
inc
out
rcll
cmp
orb
pop
aam
enter
stos
outsl
inc
out
in
pop
mov
jge
test
dec
movsl
iret
lods
sti
xor
je
adc
jp
aas
in
jp
and
ss
push
push
mov
popa
adc
lods
jge
and
jg
xchg
test
movsl
or
dec
repnz
push
mov
mov
jg
fisubrs
adc
sbb
scas
dec
adc
fsubs
stc
mov
int
insb
sti
scas
lock
xchg
lcall
in
cmp
xor
sub
in
scas
movsb
test
fdivr
inc
jo
lcall
push
dec
pop
push
idivl
mov
sub
repnz
sbb
sbb
push
popf
in
jb
outsl
mov
fdivs
cli
nop
fdivrs
adc
xor
test
sub
xor
sbb
mov
outsb
cmp
fwait
jmp
adc
or
mov
je
sti
add
arpl
into
sbb
sub
test
les
mov
push
repz
xor
decl
cmp
insb
pop
cmp
pusha
in
dec
cltd
xchg
neg
daa
sahf
clc
sarb
test
sti
in
subl
xchg
push
jl
push
fsubr
incl
or
outsb
cmpsl
jmp
adc
cmp
loope
sbb
sbb
pop
mov
pop
push
icebp
cltd
out
xchg
mov
mov
int3
gs
mov
ret
jg
inc
popf
inc
jle
lret
insb
insl
mov
or
push
mov
je
out
xchg
pushf
cltd
mov
push
fs
std
fdivr
aas
pop
loopne
in
cltd
mov
aaa
ret
xchg
mov
xchg
mov
adc
mov
test
push
pop
aaa
int
adc
outsl
loop
popf
cmpsb
in
jl
jo
cmpsb
pop
scas
out
ret
cmpb
jecxz
movsb
in
movsl
iret
mov
pop
test
or
cs
pop
jae
idivb
xor
cs
push
mov
or
les
jns
mov
push
mov
pop
sti
push
or
dec
xlat
subb
imul
pop
int3
inc
sub
xor
idivb
loope,pn
repz
xchg
jb
dec
test
fmul
xchg
iret
test
adc
ret
fnsave
xchg
sub
xor
call
stos
mov
fisubrl
test
add
in
mov
stos
mov
sbb
inc
add
dec
dec
outsb
test
push
out
mov
std
jge
lcall
lahf
dec
sub
mov
xchg
mov
dec
test
test
or
enter
jo
dec
inc
sub
jl
loope
dec
inc
sbb
inc
out
push
in
mov
xor
mov
mov
adc
shl
lcall
rcll
inc
notb
pusha
lcall
adc
ljmp
imul
sbb
lret
lock
add
nop
mov
add
inc
iret
sub
mov
cmp
pop
sub
sbb
shrb
xor
xor
cmp
sbb
outsb
shl
aaa
mov
out
inc
fmulp
jle
in
xor
mov
cmpsb
loopne
mov
jge
jb
jno
jge
int3
mov
pop
inc
ret
popf
xor
fcmovu
adc
icebp
bound
cltd
test
subb
notb
lds
dec
mov
mov
in
outsl
ret
xchg
or
pushf
jae
addr16
push
imul
inc
data16
adc
loope
mov
ss
aaa
lea
jp
sti
mov
pop
das
xchg
iret
scas
nop
subl
jge
arpl
mov
js
xor
icebp
scas
dec
cmp
shrb
pop
adc
icebp
sub
mov
and
cmp
and
out
outsb
out
subb
cmp
lods
cmpsb
xor
add
mov
cs
pop
sahf
sbb
out
push
xchg
mov
pop
bound
mov
cli
imul
cli
sub
stos
stc
fistpl
out
and
sti
dec
sahf
ds
add
outsl
in
mov
adc
adc
mov
roll
pop
and
in
mov
insl
mov
pop
enter
imul
pushf
xchg
xchg
in
call
push
sub
popa
mov
jae
cs
fwait
into
cmpl
inc
jl
outsl
outsb
fdiv
scas
stc
addr16
popa
je
cmpsb
pop
icebp
aas
shrb
jl
xchg
sarl
adcl
push
fcoml
lahf
in
push
out
dec
mov
pop
pop
pushf
pop
shrb
cmp
xchg
dec
loope
cmc
loop
popa
jmp
dec
jmp
jecxz
es
shrl
mov
push
mov
push
aas
xchg
jnp
xor
cli
dec
sub
dec
mov
enter
imul
cmpsl
sahf
shll
sbb
add
pop
sub
jno
leave
idiv
paddd
inc
adc
sub
push
or
jns
mov
imul
pop
pop
xor
cmc
xchg
enter
push
movsl
fbstp
mov
movsb
sbb
push
ret
lds
rolb
ja
sti
sbb
push
mov
ret
ja
push
add
adc
inc
mov
ja
mov
sbb
mov
mov
lods
inc
mov
cmp
inc
push
insb
inc
push
jae
push
xchg
lds
mov
add
jns
lods
mov
in
mov
inc
sbb
in
push
pop
iret
xor
in
test
pusha
outsl
fistl
dec
add
xor
jo
in
mov
aas
lret
fidivrl
popf
scas
sbb
pop
mov
sbb
dec
cs
in
lret
imul
in
mov
cltd
jnp
lcall
mov
mov
rolb
cmpsb
push
iret
fmull
mov
pop
fwait
sub
jle
jbe
stos
mov
adc
fdivrs
into
pop
xor
out
xor
lods
pop
test
sub
stc
pop
aam
int
scas
push
loope
xchg
lcall
jno
lea
lahf
lahf
shll
outsb
adc
ljmp
mov
cli
sub
xor
dec
sqrtps
push
les
mov
ficoms
repz
das
pop
sub
stc
xor
inc
out
stc
jle
xor
or
leave
enter
pop
inc
cmp
repz
xchg
cmpl
cmpsb
ficompl
push
jae
mov
shlb
ss
int
add
push
jnp
out
xchg
roll
pop
sbb
mov
xor
add
mov
mov
out
pop
cmp
push
jo
pop
inc
out
cmp
pop
dec
xchg
rolb
cld
mov
ds
ljmp
je
or
cmpsb
mov
dec
push
push
ret
xor
enter
jnp
inc
sbb
aaa
add
hlt
in
dec
or
add
sar
xchg
mov
subb
jge
jno
push
pop
orps
cld
lcall
mov
xlat
mov
xchg
pop
jae
inc
in
adc
mov
test
push
adc
pop
add
and
sub
cmova
ret
jbe
mov
lea
pop
aas
movsb
mov
enter
dec
inc
cmp
cltd
add
mov
adc
cmp
out
repz
sub
lcall
push
and
inc
pop
movd
out
push
cmp
add
aas
stc
add
gs
popf
inc
rcll
lods
mov
aas
jge
shlb
scas
pop
xor
adc
jmp
outsl
cmpsl
lahf
pop
push
dec
inc
mov
aam
add
mov
adc
push
cmp
add
cmp
repnz
mov
negb
repnz
dec
push
pop
sbb
aad
mov
dec
faddl
mov
dec
lret
jbe
push
loopne
and
psrad
lahf
enter
jae
push
mov
insb
rcrb
lds
in
scas
dec
cmp
jmp
jle
inc
cmp
push
inc
adc
cld
aam
push
int3
shrb
cs
je
pop
pop
int3
js
push
sbb
negl
cmp
mov
xor
dec
out
loopne
repnz
sub
movsb
shrb
mov
and
je
popf
mov
subl
or
js
adc
imul
fs
mov
fcoms
or
mov
pop
popl
out
xchg
xchg
les
dec
fwait
jne
mov
lods
or
stos
cmp
into
test
lahf
adc
cmpsl
stos
adc
adcl
sub
movsl
call
movsl
inc
cmp
add
mov
cld
fdivrs
xchg
icebp
call
dec
repz
repz
imul
push
dec
jmp
mov
lock
inc
dec
dec
xor
scas
cmp
aas
and
cmpsb
cld
and
dec
lds
add
stc
push
jbe
pop
xor
push
jl
jg
and
pop
push
test
sti
jmp
roll
jmp
insl
push
dec
test
cmpsl
dec
mov
aaa
and
sbb
push
stos
test
add
leave
or
push
pop
aad
dec
pop
insl
je
jle
rorb
dec
push
cmpsb
mov
in
divl
xchg
or
ds
das
mov
fimuls
push
cli
dec
adc
mov
das
lcall
enter
pop
out
mov
aad
enter
mov
cltd
pop
inc
pop
cmp
ja
jl
sbbb
rorb
xor
shr
cmc
inc
lret
adc
divb
mov
jg
in
icebp
lret
ljmp
dec
mov
and
insb
imul
shll
mov
popa
es
nop
push
clc
loope
xchg
jg
sub
mov
xlat
push
pusha
in
xchg
sbb
scas
push
jnp
xor
arpl
and
push
fwait
xlat
push
or
jbe
data16
aaa
inc
subb
sbb
sub
nop
push
cli
dec
lcall
inc
lahf
jl
insb
fidivs
lods
xor
outsl
movsl
or
adc
jge
sub
jbe
idivl
xchg
push
ds
jecxz
and
data16
xor
xchg
mov
pop
dec
and
mov
test
mov
test
sub
das
sahf
mov
mov
or
add
insl
and
jl
inc
push
sbb
add
xorb
fwait
cmc
mov
fst
into
adc
pop
adc
jno
push
incl
into
pop
cmp
loopne
adcb
into
xlat
call
insb
push
mov
push
add
and
fs
and
add
cmp
jecxz
sbb
stc
popa
iret
add
lea
mov
ja
fwait
cmp
push
bound
add
nop
insl
xchg
and
pop
xlat
dec
cmp
cmp
mov
lret
call
xor
mov
fwait
inc
mov
mov
sti
mov
fwait
call
iret
loopne
stos
sarb
or
jge
xchg
sahf
push
dec
in
dec
gs
test
pop
shlb
xor
movsb
ror
cmp
xor
add
les
inc
jp
or
and
xor
test
xor
jmp
mov
std
or
jbe
add
dec
add
mov
xor
push
pop
push
and
shll
ljmp
pop
rol
jo
mov
gs
rcrb
xchg
xor
pop
shrb
xchg
dec
outsl
in
add
or
icebp
mov
adc
fdivrl
add
and
daa
out
inc
shl
push
push
enter
adc
divb
add
imul
mov
push
dec
into
xchg
adcl
clc
lods
push
jns
and
fsubl
fwait
out
insl
inc
mov
push
xor
into
mov
fldl
call
adc
fs
jns
es
pop
dec
mov
les
cmp
clc
mov
mov
pop
push
xchg
aad
or
arpl
popl
inc
pop
loope
das
mov
sub
sbb
xchg
push
fwait
push
push
and
mov
rol
mov
sbb
ret
fidivrs
ljmp
adc
jp
xchg
and
sub
push
mov
jmp
into
fs
insl
pop
rcll
lret
out
std
icebp
lds
push
ja
sub
jno
dec
addr16
add
jle
mov
xor
call
pushf
sub
cmp
sub
mov
mov
stc
cmp
adc
mov
add
das
and
test
cs
sub
insb
les
iret
jb
mov
aas
sub
cmpsl
push
lahf
imul
movb
int3
cmovb
in
insb
jg
loope
ds
repz
xor
adc
inc
sub
adc
outsl
sub
xchg
aaa
and
dec
adc
lret
addb
adc
sbb
adc
cmpsl
lahf
jl
xor
lods
xorb
push
cmc
out
filds
fidivl
ds
jl
xor
sub
jae
cwtl
stos
mov
mov
aaa
arpl
dec
test
xlat
push
inc
popf
xchg
lock
leave
push
lea
imul
sahf
out
and
or
xchg
cmc
jp
inc
aad
inc
cltd
stos
push
jl
test
mov
ret
outsb
lods
jo
movl
fcmovnu
enter
mov
jae
xchg
push
dec
fsubl
icebp
adc
shlb
mov
or
mov
test
push
lcall
lahf
scas
jnp
jmp
insb
in
mov
aam
pushf
addl
out
mov
push
adc
movsl
jns
xchg
fcoml
repnz
out
adc
inc
enter
inc
out
in
mov
dec
pop
js
mov
xor
bswap
out
cmpsl
jle
sbb
fwait
imul
hlt
jle
sbb
cmp
add
popf
mov
add
rolb
mov
adc
mov
lcall
push
or
mov
adc
mov
loop
cmp
inc
sbb
cs
and
sarb
add
subl
dec
cld
jb
pop
cmp
push
pop
lcall
push
pushf
lods
xchg
mov
inc
in
out
pop
shrl
sbb
test
dec
ret
xchg
rol
sbb
hlt
mov
or
pop
jmp
ljmp
inc
xchg
je
mov
je
cs
push
popa
dec
in
repz
push
mov
cwtl
daa
mov
dec
stos
mov
or
cmpl
mov
sbb
xchg
pop
lods
mov
leave
gs
es
fistpll
dec
pop
and
push
aas
call
jmp
mov
xor
push
out
dec
mov
nop
push
mov
mov
popa
xchg
cmpsb
jns
xchg
popa
stos
dec
push
aaa
xor
nop
or
call
jo
mov
repnz
push
push
mov
in
shrb
lods
sub
or
cmp
cmp
imul
dec
int3
jbe
movsb
sub
cmc
and
mov
movsl
or
jns
xor
cmp
mov
outsw
sti
inc
add
xlat
inc
jecxz
ret
insb
in
data16
jb
mov
imul
test
dec
scas
cmpsl
push
lret
cmpsb
daa
lret
mov
jg
das
push
jmp
je
sub
mov
xchg
fwait
jnp
es
mov
dec
insl
pop
inc
or
hlt
adc
push
pushf
xor
ret
into
xlat
mov
pop
xchg
and
pop
cmp
add
shll
dec
in
subl
hlt
jmp
out
mov
mov
lock
mov
jae
pop
lret
lea
in
jo
fsubrs
mov
int3
xchg
mov
scas
int
in
in
mov
fldl2t
je
inc
repz
xor
and
lock
dec
out
enter
sbb
jp
mov
imul
std
jns
adc
adc
push
or
xchg
mov
out
xchg
dec
enter
ret
imul
and
arpl
push
nop
inc
jp
xchg
pop
pop
xchg
lods
push
popa
ljmp
ljmp
and
movl
or
mov
int3
pop
repz
sub
jg
mov
addb
cmp
mov
jne
or
stc
sti
test
adc
xor
insl
sbb
push
or
clc
mov
xchg
sbb
shll
sub
adc
sarl
fisttpl
pushf
inc
pop
divl
subl
push
test
imull
pop
subb
dec
dec
push
sbb
movsb
iret
dec
inc
sbb
fs
fisubs
iret
cmc
addr16
jl
sbb
aaa
jmp
aad
cmp
mov
scas
cmp
fs
pop
rcr
rorl
pop
pop
cwtl
imul
enter
xor
or
test
mov
pop
pop
mov
add
pop
jne
cmpl
xlat
addl
adc
push
jb
mov
xchg
jp
dec
xor
cwtl
xor
and
in
lcall
pop
ds
outsl
xor
lock
or
dec
sti
dec
loopne
insb
jg
stos
or
sub
sbb
inc
and
call
in
and
out
aas
jmp
mov
cmp
inc
lods
mov
push
cmp
sub
fildl
xor
repz
xor
cmpl
lods
push
cmp
mov
and
pop
f2xm1
adc
mov
stos
int3
dec
mov
fistps
stc
mov
outsb
call
mov
ja
scas
push
call
dec
dec
push
sub
mov
imul
insb
dec
cmpl
pop
jne
test
xor
cmpsl
in
je
jle
gs
jae
add
push
xchg
inc
icebp
push
and
or
and
and
jae
cmpsl
test
pop
jnp
jecxz
and
aad
or
mov
mov
mov
sbb
in
inc
cli
pop
incl
aas
cmpsb
mov
icebp
test
sub
int3
sub
cmp
jl
aaa
push
aad
dec
negb
sbb
inc
mov
sub
out
add
fcomps
jns
adc
icebp
push
inc
or
add
frstor
pop
push
dec
xor
sub
test
lret
pop
dec
js
ror
xchg
ret
sbb
sub
pop
xchg
sbb
pop
or
add
mov
mov
dec
cwtl
bound
or
stos
fcompl
cmp
add
idivl
iret
adcb
pop
push
pop
ss
outsb
add
push
add
rolb
xchg
adc
test
mov
inc
push
test
andl
adcl
arpl
out
jge
push
jg
fs
out
outsb
push
xchg
inc
clc
push
pop
mov
pop
sub
insl
insl
fisttpll
mov
push
rcrb
mov
xchg
int
jecxz
out
jmp
xchg
xchg
mov
cmp
andl
popf
cmc
lahf
dec
dec
inc
scas
movsl
frstor
into
inc
or
jmp
push
out
call
imul
rclb
inc
push
add
push
jle
adc
fisttpll
in
and
imul
xor
mov
std
sbb
pushf
push
popa
enter
sbb
pop
daa
xor
inc
test
xchg
lcall
in
fwait
addr16
movsb
out
pusha
mov
add
pop
or
cpuid
mov
mov
xor
mov
mov
push
jbe
fistl
inc
inc
pop
repnz
or
stos
lock
jnp
pop
pop
into
mov
in
loopne
negb
xchg
dec
add
outsl
add
stos
sub
enter
mov
and
cld
sub
mov
adc
test
cmp
cli
insl
fwait
xchg
push
and
jb
sbb
xor
mov
mov
call
jbe
xrelease
fs
mov
push
mov
push
mov
jp
lock
ljmp
fmul
pop
in
cmpsb
jno
shr
in
aaa
xchg
fisubrs
int3
data16
adc
mov
outsl
xor
dec
repz
sbb
call
adc
sub
rclb
in
dec
out
bound
xor
inc
lcall
test
std
xor
repnz
inc
mov
or
xchg
xchg
inc
pop
mov
test
sub
or
test
mov
mov
outsb
cmp
cmp
sub
jbe
xchg
jo
adc
sub
sub
push
push
add
addl
adc
pop
inc
and
mov
sub
or
fwait
decb
jb
fs
ljmp
lds
xchg
xor
cmp
loop
stos
add
xchg
cltd
adc
loop
test
test
xlat
mov
loop
add
push
xor
aas
adc
ss
and
cld
add
jns
ficoms
mov
sbb
pop
xchg
gs
cmp
mov
mov
jle
stos
dec
mov
iret
mov
jns
call
mov
sbb
xchg
push
test
sti
loopne
fcoml
lds
push
lock
jle
cmp
mov
sarb
les
mov
adc
sahf
sahf
push
mov
cmp
je
sub
loope
jecxz
jns
add
cmpsl
test
int
cmp
loopne
mov
mov
pop
frstor
inc
and
push
cmp
xchg
mov
jns
popf
enter
push
movl
cmp
cmp
jne
cli
mov
sbb
cmpsl
sbb
sub
aam
aas
aaa
mov
mov
mov
or
in
imul
hlt
inc
rcrl
les
mov
lea
clc
dec
push
mov
es
cmp
sub
icebp
lahf
or
shlb
imul
xor
stos
xchg
enter
dec
pushf
add
adc
pop
test
cmp
sbb
nop
jno
fistps
push
test
sub
and
mov
pusha
add
in
int
mov
cmpsb
cmp
jecxz
stos
dec
jno
xor
mov
mov
daa
mov
adc
cmp
mov
icebp
add
cmpsl
js
xor
ret
imul
cs
pop
cltd
adc
sti
pushf
jmp
cmc
push
mov
and
sub
jl
pop
fldcw
pusha
add
rcl
sbb
mov
sbb
mov
pop
fcmove
dec
insl
sbb
push
inc
test
stc
int
adc
std
push
in
cwtl
or
xchg
jo
into
sub
dec
push
mov
add
enter
ret
ljmp
lret
push
pop
ret
dec
ss
call
inc
push
lea
jo
std
lahf
mov
cwtl
pop
aad
movsl
dec
dec
adc
sub
mov
adc
outsl
sti
decb
push
sub
inc
sub
je
sub
scas
lods
addl
push
lret
imul
sarb
jno
mov
lret
inc
outsl
sbb
pop
mov
push
lret
mov
adc
shr
in
pop
push
jnp
stos
add
xor
inc
push
add
xchg
push
imul
fs
daa
jno
xchg
add
sbb
jbe
adc
inc
cltd
mov
mov
push
mov
xchg
dec
and
xor
dec
mov
cmpsb
int3
sub
fxch
inc
fidivs
sbb
icebp
daa
mov
xchg
sub
in
jmp
cmp
je
mov
or
xorl
xor
cmp
imul
xlat
jmp
push
cmp
jg
mov
xor
inc
mov
pop
push
mov
mov
sub
lods
inc
dec
lahf
nop
je
xorl
repnz
add
xchg
pop
push
mull
iret
rorl
out
and
into
bound
xchg
inc
loope
scas
dec
xor
in
fnsave
jo
or
int3
jb
sub
sub
xchg
je
dec
lahf
insb
or
jp
lds
sarb
inc
and
xchg
push
lods
adc
dec
and
fldt
repz
xchg
sbb
out
data16
mov
inc
imul
outsb
pop
cmpsl
call
mov
lock
mov
subb
jae
es
push
pop
push
cs
lcall
mov
cmpsl
movsb
and
mov
xorb
pusha
mov
xor
and
aas
clc
call
sub
and
inc
aaa
dec
adc
cmp
sbb
mov
mov
inc
dec
mov
rol
in
xorb
cld
push
test
sbb
inc
adc
imul
adc
jns
mov
cs
lret
fs
fs
sar
inc
pop
xor
dec
sbb
jmp
cmp
or
es
test
xchg
fisubrl
jns
and
sub
fistpl
repz
inc
sbb
mulb
shl
loop
shr
cmp
jae
adc
lahf
sbb
or
xchg
ja
add
lahf
xchg
xor
cmpsl
cwtl
jg
out
push
dec
lahf
adc
cld
mov
aaa
mov
adc
out
xchg
cmp
xor
fldl
stc
out
in
push
inc
adc
pop
testb
and
inc
rorb
inc
push
cmpl
test
data16
hlt
jnp
bound
cmp
aam
lock
cmp
insb
sub
mov
dec
add
pop
xchg
and
push
xor
fimuls
xor
and
arpl
adc
in
and
add
push
pop
xor
xchg
cmp
xchg
loopne
push
fstpt
jl
adc
je
stc
imul
or
inc
or
push
dec
push
icebp
lds
mov
popa
pop
std
mov
sti
addb
sbb
or
xchg
mov
call
and
mov
push
xchg
dec
xchg
in
jecxz
lea
out
mov
jmp
out
add
jns
inc
or
arpl
dec
jns
mov
ficomps
test
jmp
push
pusha
cmc
loop
xchg
push
in
test
sbb
stos
loop
sub
cmp
mov
addr16
aad
xor
ja
or
xchg
fidivrl
daa
setge
pop
xchg
scas
mov
lea
xor
adc
js
jae
adc
lods
js
xor
jnp
daa
jmp
cltd
or
shll
or
mov
and
leave
inc
insl
mov
cmp
or
push
sbb
stos
cli
mov
and
and
je
and
jmp
dec
test
or
inc
pop
mov
sub
pop
or
push
add
fwait
sbb
out
jno
je
into
scas
jbe
add
adc
xchg
movsb
aam
stc
mov
nop
rcl
lock
dec
sti
dec
out
jno
push
mov
ljmp
cs
out
inc
jg
xchg
mov
and
sbb
dec
pop
shl
pop
ret
inc
and
fldenv
and
inc
aad
cmp
sbb
push
jne
ret
mov
sti
dec
notb
sub
imul
inc
in
inc
or
cmpsb
jecxz
mov
xor
push
inc
jmp
cs
push
inc
lea
or
aad
xor
mov
lret
jg
xchg
das
test
or
xchg
arpl
ds
hlt
xorl
mov
add
rcr
imul
rcrb
roll
jae
dec
popa
jno
xchg
test
or
cmp
cwtl
inc
call
pusha
mov
cmp
test
in
jb
xchg
push
test
ljmp
cmpsl
mov
xorb
and
sti
push
mov
push
stc
inc
mov
push
xchg
sbb
add
mov
mov
xchg
mov
push
jg
es
pop
inc
dec
icebp
enter
bt
sbb
jecxz
popf
fdivr
adc
adc
inc
push
mov
call
xchg
repnz
xchg
test
mov
jno
inc
js
fs
imul
cmp
jb
repz
in
mov
scas
jg
add
test
je
push
push
push
aas
add
stos
mov
jg
fdivp
mov
push
out
push
inc
shlb
cld
fwait
push
faddl
fbstp
lods
mov
cmc
push
test
sub
add
ficomps
mov
jo
push
loop
imul
hlt
hlt
jae
aas
sbb
daa
mull
cltd
adc
pop
adc
mov
lret
push
xchg
pop
jmp
cmc
cmp
test
inc
cld
and
mov
dec
or
adc
xor
imul
xchg
jmp
dec
rol
add
fisttps
sti
dec
xchg
loop
cmc
sbb
push
pop
dec
cli
imul
fucomp
push
clc
xchg
inc
cmpsl
mov
and
repnz
dec
imull
popf
lods
out
int
inc
bound
mov
lock
imul
rcrb
jg
push
xor
clc
fsts
adc
lea
movsb
xchg
or
mov
call
xchg
out
dec
cwtl
pop
or
movsb
add
aad
pop
out
insl
xchg
or
aas
add
lds
cmpsl
mov
cltd
mov
and
add
mov
mov
jns
cmp
push
xorl
push
xor
icebp
insb
lahf
pop
inc
fadd
stc
mov
cmp
xor
loop
jge
cli
sub
int3
repnz
mov
std
sbb
cltd
cmc
lods
negl
lret
cwtl
orb
push
sarl
fnstsw
or
jl
popa
btr
add
into
jb
popf
add
sbb
mov
mov
dec
pop
cli
lcall
fistpl
nop
mov
insw
sub
imul
jbe
push
int3
adc
and
loop
pop
xor
ret
jo
xchg
lds
scas
and
mov
stos
lock
clc
out
cmp
gs
outsl
sbbl
pushaw
xor
mov
scas
jo
sbb
dec
inc
lea
daa
sbb
jo
out
inc
cltd
cmc
adc
fisubrs
das
daa
lock
cmc
mov
mov
popf
jb
xchg
pop
rorl
out
fisubrs
xchg
adc
subl
stos
movsb
out
sahf
pop
stc
sub
mov
adc
ja
mov
xchg
cmp
nop
insl
xchg
adc
pop
jle
lods
lods
xor
push
add
mov
sbb
xor
int
stc
mov
push
sahf
push
stos
les
jbe
add
push
pop
inc
lcall
mov
scas
add
rolb
out
xor
subb
sar
xchg
arpl
orb
repz
shlb
add
popa
adc
insl
imulb
adc
pop
mov
jne
pop
jns
sarb
pop
add
push
and
xor
ret
jbe
pop
ss
ljmp
int
fnstenv
stos
xchg
mov
idivb
dec
ret
out
cmp
out
mov
mov
movsb
push
push
xchg
push
test
dec
inc
jo
push
or
jmp
std
loop
sub
and
lods
inc
enter
dec
and
mov
nop
sub
stc
test
xchg
notl
int
add
pop
aaa
mov
pop
adc
gs
xor
aaa
xchg
pop
adc
loope
into
jbe
pop
mov
rcr
ja
inc
fbstp
popa
xlat
cltd
test
out
in
jno
push
xchg
sbb
sbb
mov
lods
dec
mov
pop
cmpsb
adc
cmp
pop
ja
pop
repnz
push
push
dec
fimull
xor
mov
repz
lret
je
xor
cwtl
pop
jb
jg
lods
xchg
cmp
xchg
adc
jge
pop
push
jp
in
xor
mov
mov
inc
mov
test
fcoms
sub
and
cmp
jnp
sbb
xlat
or
sub
out
aad
fldcw
pop
xor
or
scas
leave
mov
xchg
adc
mov
add
mov
jo
or
test
andl
mov
fdivrl
leave
cmpsb
xchg
fldl
sub
cmp
les
insl
sbb
jno
push
cld
sub
cld
popa
mov
test
mov
scas
ds
mov
and
stc
and
dec
sahf
das
mov
push
sahf
nop
sub
test
mov
or
cwtl
fisubs
cld
cwtl
aam
add
pop
push
shr
movsl
add
int3
pop
arpl
out
loopne
sbb
adc
rcr
rcl
mov
xor
push
mov
fdivr
mov
push
mov
mov
jnp
lock
and
push
stc
dec
cmpsb
xchg
mov
push
adc
out
push
imul
sbb
and
sahf
mov
fucom
sbb
fdivrl
jno,pt
loope
sub
inc
loopne
mov
sub
jb
negl
in
sbb
sub
xchg
cmc
insl
scas
jno
add
scas
sbb
jg
lods
push
ret
orl
lea
adc
mov
mov
ret
gs
or
out
mov
push
jg
mov
add
sub
es
mov
stos
push
bound
pop
clc
movsb
xor
xchg
adc
std
icebp
out
cmp
adc
pusha
cmpsl
testl
pop
fimuls
xor
sbb
sbb
fadds
push
arpl
sbb
mov
not
push
inc
xor
jo
dec
pop
jg
mov
mov
les
movsl
mov
sbb
rorl
push
insl
xchg
inc
add
cmp
pop
or
xor
jnp
dec
fnstenv
or
loope,pn
enter
fildll
rcll
push
lods
dec
inc
push
adc
ja
and
addr16
inc
mov
insl
aad
or
add
jmp
mov
ficoms
push
adc
pushf
and
mov
sbb
lods
test
fwait
jp
mov
call
popf
aad
mov
dec
mov
test
pop
clc
or
xlat
aas
jp
jecxz
mov
add
or
das
bound
pop
cmc
in
lret
sarl
lea
and
cmc
movq
test
lret
lahf
sub
jne
push
push
jns
test
xchg
rol
mov
stos
dec
shll
sub
rorl
int3
adc
push
mov
adc
fisubrs
shlb
and
xlat
adc
icebp
lods
sbb
or
js
inc
mov
int
dec
or
into
sbbb
loope
mov
jmp
jnp
cld
pop
mov
pop
test
cwtl
cmp
mov
xorl
aad
push
cmp
mov
scas
push
sub
sahf
xor
inc
mov
nop
xor
aas
xchg
cmpsl
test
cwtl
lcall
cltd
shl
or
ja
ljmp
test
lahf
push
pop
xor
mov
mov
imul
movl
jg
push
pop
mov
inc
sub
sub
add
in
and
pop
mov
xor
mov
rorl
lret
sbb
nop
mov
or
mov
ss
jp
les
or
clc
pop
loopne
ror
and
movsl
stos
adc
cmp
sbb
fs
add
pushw
mov
sbb
push
stos
mov
xchg
orb
jae
sbb
negl
sbb
push
or
aam
pop
or
mov
fisttpll
fwait
movq
inc
sub
jbe
cmp
add
pop
pop
pop
hlt
je
cmpsb
and
popa
test
movsb
xchg
mov
roll
mov
push
in
sub
into
jae
fidivrl
fdivr
jp
mov
xchg
daa
std
ja
mov
push
cmpsb
imul
mov
xor
stos
movsl
pop
movsl
cmp
cmp
je
xchg
sbb
push
lods
aam
mov
mov
cmp
ja
dec
inc
mulb
xor
dec
outsb
pop
jae
sub
fidivrs
scas
lret
push
imul
jno
push
fbstp
stos
imul
push
xchg
sbbl
and
push
outsl
lods
in
jmp
test
daa
add
lds
mov
sub
cmp
shll
out
loopne
scas
and
jmp
or
or
xchg
and
mov
xchg
add
or
andb
mov
fucomip
sahf
cmp
inc
inc
mov
popa
mov
cmp
pop
inc
test
movsl
mov
fmuls
push
bound
aas
adc
mov
popa
imul
ja
in
xor
cmp
mov
pop
daa
lret
xchg
jl
cs
xor
or
lock
push
sub
jg
call
ss
cmp
sbb
fldt
sbb
lcall
or
mov
loope
lea
xchg
inc
xor
mov
iret
cmp
test
add
and
push
inc
inc
movsl
mov
inc
push
enter
fdivl
mov
sub
cli
insb
lret
subb
jbe
xchg
cmp
mov
xor
loopne
in
mov
out
fstps
and
sub
in
push
pop
loopne
jp
add
in
and
outsl
pushf
mov
mov
jmp
xor
push
lods
jg
into
es
fistl
mov
pop
jne
jg
push
les
or
popa
ret
enter
xor
push
test
movsl
ror
xchg
rcrl
push
sbb
fwait
add
lret
inc
call
push
inc
add
cmp
leave
loope
mov
negb
inc
or
call
jle
push
lret
adc
aam
xor
repnz
jle
repnz
frstor
jecxz
or
les
xchg
xchg
mov
xchg
test
mov
roll
out
xor
outsb
out
test
xchg
fistpll
adc
fbld
rolb
repz
mov
jne
pop
movsb
jnp
xchg
mov
sub
fisttps
inc
dec
into
mov
sti
cmp
repz
inc
sub
int3
out
out
and
ss
jmp
mov
xchg
xchg
adc
rcl
mov
in
cmp
addr16
popf
mov
push
mov
test
mov
fsubr
jp
inc
jp
dec
out
xor
int
adc
lahf
ret
sub
mov
push
pop
and
jne
mov
incl
aaa
adc
test
mov
pop
xor
cmp
fnsave
mov
es
sbb
out
mov
mov
cltd
lock
cmp
enter
mov
hlt
sbb
xchg
cmc
addr16
pop
lcall
or
mov
int
sti
lcall
loopne
aaa
movsl
push
add
fidivrs
repz
clc
mov
jecxz
jmp
xchg
push
arpl
inc
leave
dec
negl
and
xchg
jns
pop
xor
decl
std
dec
or
lds
push
inc
dec
jne
dec
lea
pusha
cmpsl
inc
rcl
xchg
aad
ja
mov
mov
push
test
scas
adc
inc
imul
jmp
pop
aam
jbe
jbe
cmc
daa
or
pop
sarb
imul
in
gs
popf
enter
pushf
fdivs
lock
cwtl
mov
sub
rcll
sbb
pop
ficomps
sti
pop
mov
pop
pop
or
jl
mov
popa
xor
loope
cwtl
sub
xor
das
aam
and
jmp
sbbb
xor
ret
xlat
add
lret
cmp
xchg
das
mov
xchg
imul
in
inc
les
or
mov
mov
cmp
adc
push
int
stos
mov
push
mov
jb
jge
xchg
xor
in
scas
es
sub
jge
sbb
xchg
loopne
cwtl
inc
add
pop
hlt
mov
pop
gs
rcr
inc
out
sbbl
in
hlt
mov
clc
imul
ljmp
pusha
push
sbbl
in
mov
inc
lret
mov
js
movsb
push
sub
push
lcall
leave
setl
sahf
shrl
push
lret
mov
cwtl
dec
fmul
bound
dec
pushf
mov
xor
sbb
in
jge
mov
dec
add
dec
es
ret
push
inc
cmpb
js
jmp
pop
xor
mov
das
js
add
stc
stos
mov
nop
cld
pop
idivb
mov
int3
repz
push
cmp
pop
in
popf
jno
test
cli
mov
stos
inc
jae
mov
and
mov
rcr
add
jge
fwait
push
add
and
pop
cmc
push
and
dec
jge
es
sub
xchg
aas
cmc
mov
pusha
inc
imul
pop
mov
sbb
jae
shl
mov
call
xor
std
out
daa
addr16
stc
hlt
push
lods
rol
les
and
shrl
pop
aad
enter
push
mov
pop
lods
xchg
cmc
adc
add
mov
outsl
jbe
jbe
xor
insl
push
in
pop
in
in
outsb
mov
stos
xchg
hlt
js
icebp
fstpl
outsb
jns
jno
fs
syscall
in
sub
jne
push
xor
mov
mov
sbb
mov
push
add
mov
sahf
pop
sub
fisubs
pushf
and
pusha
cmp
lret
fcmovnbe
cmp
push
cmp
mov
sbb
in
test
test
jle
push
imul
test
iret
dec
xchg
shll
negl
nop
loop
push
ret
cs
jo
inc
pop
shll
xor
push
jae
jns
add
data16
sub
cmpl
ss
scas
push
cmpsb
je
ljmp
testb
cmp
mov
sbb
fistpl
outsb
flds
lcall
pushw
inc
mov
pop
adc
jl
sub
xchg
xor
mov
adc
lock
or
pop
mov
inc
adc
inc
cmp
sub
push
lea
fs
out
mov
fnstsw
xor
mov
cmp
aas
or
xchg
xchg
add
mov
xor
mov
mov
inc
cmp
adc
adc
push
mov
loop
jne
jbe
insl
add
movsb
sub
fdivl
jl
aad
mov
loopne
or
out
fcoms
xor
adc
push
jl
in
jo
push
sbb
imul
pop
iret
pop
push
push
jle
jns
inc
mov
xor
pop
stc
lea
fcompl
mov
sbb
scas
xchg
jae
inc
xchg
mov
fs
mov
fistps
pop
in
xchg
sub
fs
sbb
es
icebp
push
mov
sub
idiv
or
mov
jecxz
add
pop
push
daa
in
cmpsb
hlt
cmpsl
cwtl
popf
cmpl
jmp
aaa
mov
jne
popf
loopne,pt
mov
insb
rcrl
or
mov
or
std
stos
sbb
icebp
imulb
add
dec
ds
jno
adc
pop
rorl
gs
push
adc
pop
push
daa
in
sarl
les
scas
shrl
inc
dec
jg
adc
push
daa
jg
ja
pop
clc
int3
stc
in
out
pop
add
pop
das
push
jb
int3
push
fwait
lock
lock
pop
xor
mov
subb
jmp
or
xor
or
inc
cmp
nop
xchg
or
mov
stc
sbb
movsl
jle
std
dec
push
jno
mov
push
and
xchg
int
sub
pushf
jo
or
xchg
mov
sub
test
pop
jmp
mov
scas
inc
add
adc
out
inc
aad
cmp
mov
fisubrl
cmp
sbbl
sarl
lahf
mov
mov
loopne
push
xchg
int3
sti
xlat
insb
xorb
sbb
aad
mov
scas
pop
jnp
stos
icebp
roll
std
clc
jg
negl
pop
mov
frstor
or
hlt
sbb
adc
popa
push
iret
inc
inc
xchg
add
inc
idivl
in
lret
sub
push
push
xchg
sub
cmp
ret
mov
dec
das
mov
inc
mov
xor
in
cmpsb
sub
jne
sub
cltd
and
js
sbb
mov
xchg
cltd
xor
fs
cmpsl
xchg
mov
xor
and
mov
leave
testb
mov
mov
dec
pop
mov
xor
arpl
popa
jnp
out
jl
adc
fs
push
fistpll
cwtl
andb
jno
inc
in
pusha
mov
push
imulb
jb
stc
mov
xor
inc
cmpsl
cmp
sub
push
jb
adc
sar
push
addr16
dec
aam
shlb
inc
adc
pop
out
push
mulb
inc
add
cli
mov
adc
gs
fldenv
dec
add
addr16
cwtl
sub
inc
jmp
cli
mov
lcall
cld
xchg
sbb
push
in
inc
mov
xchg
or
xorl
adc
inc
mov
inc
in
push
fnstenv
sbb
inc
adc
adc
mov
fisubl
sub
jecxz
sbb
mov
loope
gs
or
js
dec
push
mov
subl
push
xchg
stos
xor
aad
loop,pt
scas
pop
mov
pusha
and
adc
daa
dec
push
movsb
jmp
mov
lock
mov
add
push
and
mov
ret
imul
jl
mov
sub
cmpb
orb
xchg
lret
popa
cltd
push
aad
pushf
jbe,pt
fcomp
add
in
out
sub
outsl
iret
inc
jmp
or
je
push
mov
mov
sub
stc
pop
jo
incb
fwait
jb
ss
add
mov
mov
fstpt
jbe
and
sub
xor
push
enter
sbb
stos
test
cmp
cmpsb
push
sarb
add
addb
std
scas
sub
xor
movsb
rorl
stc
lock
mov
xchg
lods
icebp
inc
push
fs
mull
lret
mov
loopne
pop
fs
fwait
sub
inc
adc
sbb
repnz
cmpsl
jno
bound
and
lods
xchg
inc
jp
mov
outsb
test
xor
std
ret
sub
lods
sbb
mov
mov
test
aad
cmc
inc
push
mov
xchg
or
stos
pop
mov
imul
lret
dec
mov
outsl
mov
dec
or
nop
decl
repz
aaa
and
scas
mov
pop
lods
popa
outsl
pop
jbe
mov
sbb
and
mulb
jg
xor
stc
scas
and
gs
scas
xchg
fdivs
notl
mov
mov
lahf
cmp
aas
xlat
setnp
lock
or
fidivs
pop
orb
xchg
jns
push
paddusb
por
fstpt
sbb
shlb
jmp
xor
mov
mov
adc
nop
sarb
mov
cmp
jmp
call
mov
stos
or
data16
mov
add
mov
xchg
xchg
std
push
negb
aas
mov
out
sub
push
das
add
jp
cmp
add
inc
inc
stos
jl
push
mov
int
sub
mov
push
in
pusha
adc
cmp
xchg
imul
mov
ds
out
aad
mov
lds
jecxz
int3
insl
insl
jne
add
les
adc
sbb
pusha
scas
popa
cmp
sub
adc
and
xor
xor
inc
dec
xchg
cld
arpl
shrb
cmp
dec
int3
loop
cmp
lcall
push
jne
xor
shll
subb
ja
sub
push
xchg
pop
mov
sub
or
sbb
pop
jbe
jo
xchg
gs
iret
jl
inc
sub
inc
mov
and
cmp
cmpsw
icebp
mov
jno
dec
pop
inc
xlat
mov
in
push
add
leave
shlb
and
pusha
push
and
cld
ds
sub
pop
adc
push
mov
mov
mov
sub
sbb
jg
adc
repnz
rcll
fcoms
cmpsl
pop
push
aaa
mulb
push
aad
lds
and
test
repz
icebp
cmc
les
jb
insb
aad
fcompl
xor
mov
add
insb
xchg
cmpsb
mov
inc
cmp
xchg
ret
adc
shll
loop
in
fiaddl
repz
mov
fucomip
cmp
inc
test
hlt
subb
jle
inc
lret
push
mov
call
sub
aad
dec
pop
lret
dec
pop
push
insb
xor
dec
lahf
jb
pop
dec
outsb
mov
mov
scas
xchg
mov
addb
or
and
je
test
or
xor
and
movsb
add
int
and
push
pusha
pushf
sbb
pushf
adc
cmc
into
cwtl
sub
mov
test
mov
xchg
xchg
lea
add
mov
fcom
mov
jmp
push
sarb
inc
idiv
jecxz
inc
imul
sub
mov
mov
or
lret
sbb
xchg
mov
mov
pop
push
movsb
stos
aad
mov
jno
lods
pop
xchg
lods
jle
ds
dec
pushf
inc
xor
adc
xor
fsubrp
xchg
ror
cmp
inc
iret
push
clc
sbb
data16
lret
inc
jmp
es
push
gs
lods
pop
adc
add
push
jnp
cmpsl
loopne
add
repnz
add
sub
and
mov
idivb
jo
test
dec
adc
fstl
int3
jle
push
mov
fisttpll
into
jp
push
jo
dec
push
rolb
sbb
push
pop
xor
jmp
hlt
jp
add
and
add
adc
mov
ljmp
popf
mov
notb
xchg
xor
icebp
pop
or
mov
sbb
roll
sbbb
pushf
es
vpmadcswd
rcll
pop
ja
call
sub
xor
mov
mov
jecxz
xchg
int3
push
in
test
push
ljmp
add
in
mov
sbb
fnstsw
and
inc
cs
aaa
jle
lret
shrb
stc
pushf
popf
and
lods
in
jno
leave
xor
mov
sbb
test
inc
pop
das
das
sbb
fistpl
movsb
add
loop
sub
push
mov
xlat
in
clc
cmpsl
push
in
mov
mov
leave
mov
mov
push
addl
add
sbb
sbb
popf
movsl
xor
inc
add
push
and
cmp
sbb
jecxz
xor
pop
sti
and
push
xchg
xchg
xchg
sbb
or
or
int3
xlat
xchg
adc
cmp
mov
mov
add
push
sub
mov
roll
xchg
add
jo
add
mov
into
es
push
mov
iret
or
outsb
icebp
ror
cmpsl
mov
fwait
out
sub
lret
jmp
mov
sti
cmp
les
jno
xor
sub
and
or
into
fldenv
adc
scas
pop
inc
loop
pushf
cli
fdivl
xor
jno
dec
popl
jnp
sub
cmp
and
in
mov
jg
lret
and
mov
fidivs
mov
inc
push
mov
and
xor
stos
xchg
mov
xchg
addr16
jbe
stos
test
clc
lcall
aad
sbb
sub
dec
cli
adc
mov
push
jge
pop
mov
pop
push
fisttps
inc
fbstp
outsl
add
pop
push
inc
mov
in
fmuls
mov
add
mov
lods
leave
imul
push
adc
mov
mov
jecxz
push
loop
rcrl
popf
pop
xchg
inc
inc
mov
mov
adc
cli
mov
roll
insb
or
scas
addr16
pop
lahf
je
cmp
hlt
jle
out
ja
jae
test
out
add
outsl
mov
fwait
dec
pushf
and
hlt
fs
mov
push
js
cwtl
leave
push
jno
iret
and
xchg
imul
inc
sarb
inc
pop
add
jecxz
out
mov
xor
notl
push
and
mov
pusha
mov
movsb
adc
sub
push
or
cli
in
cmp
gs
movsl
cltd
int3
in
add
adc
cmp
or
adc
andb
adc
lahf
jb
pop
cmp
stc
inc
xor
fdivrl
inc
lock
rcrb
lods
in
es
sbbb
cmpb
mov
xchg
and
sbb
fistl
xor
insl
roll
mov
mov
add
add
dec
xor
fwait
jge
sbb
aas
stos
push
fmulp
or
rcr
inc
dec
enter
mov
push
in
movsb
stc
pop
stos
jg
adc
jbe
adc
es
das
fnstcw
and
xlat
jae
inc
test
pop
aaa
insl
adc
movsl
fisttpll
mov
cmp
xor
inc
pop
popf
push
xchg
mov
cmc
xchg
pop
add
sbb
sub
les
subb
call
sbb
adc
jno
fisttpll
cli
ret
insl
aam
ds
mov
push
outsl
and
imul
xlat
push
aas
xor
repz
stos
push
mov
jbe
stos
mov
mov
push
dec
mov
add
daa
mov
xor
sbb
jecxz
pop
int
jo
icebp
sbb
or
push
shll
mov
or
sub
loop
or
aaa
pop
popf
imul
pop
fsubrl
xchg
mov
scas
sbb
adc
add
outsl
test
jp
jae
xchg
lea
lea
and
push
jle
shll
fld
mov
dec
or
idivb
xor
pop
adc
push
repz
scas
test
pop
xor
ret
clc
popf
mov
and
inc
aam
inc
incl
stos
pop
xchg
mov
mov
popa
push
addl
pop
leave
jg
mov
pop
sbb
pop
xlat
test
cmpsl
push
xor
mov
pop
mov
in
xchg
outsb
fs
cmp
popf
mov
insb
ss
ret
xchg
imul
add
popa
add
push
jnp
push
inc
push
xor
sub
pop
imul
out
inc
sub
jp
pusha
inc
mov
dec
aad
out
fdiv
loope
sub
ret
iret
or
jl
mov
xchg
xchg
es
ret
mov
jmp
dec
mov
push
ret
outsb
cpuid
shlb
xchg
ret
mov
sub
mov
mov
fnstenv
fdivr
or
jp
insl
sbb
pop
stos
lock
mov
cld
pop
pop
rorb
dec
orb
insl
sti
adc
loopne
pop
sbb
mov
pop
mov
xchg
dec
popf
or
stos
push
mov
movsl
push
jno
fwait
dec
add
imul
xor
pop
jge
pop
cmp
cwtl
insb
lea
dec
mov
xor
aaa
int
aam
fdivl
pop
mov
or
push
int
into
or
sub
dec
pop
fwait
or
mov
pop
jo
xlat
data16
xchg
sbb
mov
aaa
les
xchg
loope
dec
dec
mov
test
xchg
mov
cmc
enter
xchg
sahf
add
lcall
or
lods
xchg
push
push
je
and
xchg
inc
jmp
sub
hlt
xchg
or
push
shlb
fs
cmc
jae
fnstsw
into
ds
xor
movsb
lret
loopne
out
jne
mov
mov
or
popa
popf
cwtl
jle
mov
ds
lret
push
aad
lods
pop
lds
mov
mov
sbb
lock
jae
out
pop
in
add
jb
mov
cmc
inc
imul
pop
jge
and
lret
add
fs
xchg
lea
int3
and
jecxz
pop
mul
cwtl
adc
xor
or
stos
adc
sub
dec
push
aad
add
loope
imul
cmc
cmpsb
ja
mov
xor
push
lods
incl
pop
xchg
movsb
testb
and
sbb
fsub
cltd
vdivpd
mov
xor
push
sub
or
fwait
push
dec
adc
xchg
sub
cmp
cmp
lcall
xchg
out
shrb
js
add
call
jb
dec
imul
dec
jge
scas
cmp
cltd
mov
popf
jo
cltd
iret
pop
bound
pop
and
in
inc
aaa
push
fsubrs
shrb
lcall
add
cmp
in
fstps
cmpsl
xchg
sbb
sbb
sbb
or
cmpsb
aaa
in
int3
repnz
rcrl
pop
mov
jbe
mov
mov
orl
mov
jbe
in
xchg
mov
pop
mov
rolb
xor
pop
lods
or
es
sub
imul
leave
jge
iret
insl
sub
pop
mul
jecxz
jecxz
jp
sbb
or
push
mov
pop
pop
sbb
cli
pop
fldcw
sti
dec
add
sbb
outsl
jb
ljmp
mov
lahf
sbb
push
mov
rcrb
mov
lret
gs
inc
pop
cmp
shlb
mov
and
or
sub
pusha
das
push
repz
dec
pusha
int
out
fildl
sarl
enter
mov
clc
jo
jmp
and
aam
fwait
adc
push
call
mov
adc
bound
xchg
jmp
inc
in
fistl
aas
inc
popf
mov
sbbb
movsl
imul
cmp
cmpl
cmp
jb
std
lods
movsb
mov
and
ss
push
push
into
push
dec
pushf
mov
sbb
out
mov
cmpsb
sti
icebp
popa
jb
mov
in
mov
aam
jbe
push
pop
inc
push
push
data16
ficoml
decl
and
repnz
movsb
loopne
in
cmp
ds
and
pop
dec
dec
stos
movsb
cmp
pop
lea
mov
mov
cmc
call
xchg
xchg
cmpsb
test
xor
cld
call
lock
and
mov
popa
xchg
cmpsl
jecxz
pop
cs
int3
xchg
xchg
test
push
dec
and
call
daa
push
sbb
popl
inc
push
loope
inc
xor
push
pop
cmpsl
loop
jle
sbb
jae
xor
je
sub
int3
cmp
xchg
jmp
mov
dec
out
les
out
ja
pop
imul
mov
sbb
sub
pop
push
nop
fs
jg
leave
subl
mov
sbb
pop
call
lds
ljmp
cmpsw
mov
leave
or
movsb
cmp
xchg
in
jg
mov
das
cmp
fidivrs
in
push
repz
mov
fistpll
xchg
jg
adc
pop
mov
lahf
mov
cltd
rorl
sarl
addl
orl
inc
push
jg
test
lds
mov
std
sub
sub
popf
push
mov
inc
pop
cmp
xchg
push
clc
push
mov
inc
sarl
jl
dec
outsb
ja
cmp
jmp
popa
lret
or
xchg
fisttpll
cmpsb
mov
rclb
adc
xlat
adcl
push
out
jae
jmp
int3
xchg
outsl
js
xchg
mov
mul
inc
lods
fs
stc
adc
aam
adc
imul
or
pop
lea
push
lcall
daa
xchg
or
lret
mov
aas
clc
dec
push
or
cmp
sahf
xchg
in
xorl
decl
or
sbb
sbb
pop
pop
mov
jbe
icebp
leave
in
lret
mov
and
mov
add
jg
fcomp
cmp
test
xchg
inc
push
push
pop
push
shl
scas
ret
fisttps
repz
cmpsb
lods
test
xchg
stos
mov
out
aad
fisubs
lret
dec
push
lret
or
out
sbb
mov
out
lret
repz
loopne
or
cmp
movsb
fidivs
mov
jge
negb
out
bnd
inc
dec
scas
daa
and
in
gs
mov
bound
jge
push
repz
pop
sbb
aaa
pop
pop
movsl
lahf
call
sub
in
les
imul
xchg
add
testb
xchg
cmp
addr16
pushf
fidivrl
dec
fistl
call
sub
xchg
in
xchg
adc
pop
cmp
sub
test
or
jns
ljmp
negl
dec
inc
pop
mov
call
pop
push
adc
add
shl
mov
dec
and
jp
dec
inc
add
popf
mov
and
icebp
mov
jne
repz
push
pop
addb
xchg
das
or
scas
sbb
xchg
mov
pop
int3
inc
push
lret
adc
dec
hlt
mov
adc
xchg
mov
mov
fwait
jne
jp
ss
fdivrs
and
in
lcall
dec
jmp
mov
cmp
outsb
outsl
pop
mov
pop
push
cmp
test
mov
lahf
ficomps
xchg
scas
sbb
inc
rcrl
pop
test
add
cmp
aas
aas
jl
mov
mov
push
jb
insl
jae
pop
fcmove
xchg
ljmp
ds
data16
add
pop
cmp
dec
or
xchg
ljmp
scas
dec
mull
mov
mov
xchg
dec
aad
cmc
xor
dec
jge
add
lods
cld
or
loop
xchg
push
jbe
push
je
lret
mov
testl
js
mov
stos
daa
leave
jp
sub
pushf
lock
xor
les
mov
adc
cmp
push
pop
mov
dec
shrl
mov
cmp
xchg
lock
decb
pusha
out
adcl
je
sbb
pop
xor
cmpsb
sub
lds
loopne
out
pop
pop
iret
push
aad
into
xor
adc
jo
filds
mov
fmuls
or
mov
shlb
int
adc
adcl
lea
mov
inc
pop
roll
and
sti
icebp
and
sbb
push
imul
mov
or
mov
es
xchg
hlt
enter
jb
or
jae
icebp
inc
jnp
addr16
outsl
inc
adc
inc
sbb
movsb
pop
jle
insb
mov
mov
test
inc
in
sub
dec
lds
sub
adc
insl
gs
xchg
fldt
out
stos
mov
dec
insb
push
sbb
nop
pop
sahf
aad
std
loope
sbb
int3
shl
inc
test
xchg
or
adc
cmp
les
add
pop
addr16
add
xor
push
or
fistps
adc
inc
ljmp
sub
in
inc
mov
xor
adc
cmp
scas
outsl
dec
xorl
aaa
rcrb
mov
loope
adc
cmp
clc
or
std
mov
pop
int
xor
cmp
mov
mov
push
lds
aad
cmp
adc
pushf
inc
mov
mov
in
push
add
jb
insl
lret
cli
sub
out
out
or
lock
int
int3
leave
std
cmpl
ret
add
mov
test
stos
mov
sti
jecxz
clc
push
icebp
adc
jmp
fists
ss
and
cmpsl
and
subl
jge
ja
sbb
push
ret
mov
fs
mov
andb
seta
lods
mov
pop
push
mov
add
xchg
jp
pop
inc
push
pop
out
roll
sahf
sbb
push
sub
mov
mov
cmp
mov
and
dec
lahf
sub
movsb
scas
shll
pop
and
dec
pop
stos
and
sbb
movsl
icebp
je
lret
lahf
lahf
ret
mov
fwait
popf
aaa
push
outsb
lock
dec
rcrb
jno
stos
aam
icebp
fsubs
sahf
adc
in
cmp
xchg
lret
test
inc
add
mov
fisttps
rorb
mov
fs
push
loop
lret
xchg
pop
sub
test
push
mov
dec
sub
arpl
inc
cli
cmc
movsb
lret
rcll
dec
xchg
out
stc
fnstcw
sbb
in
mov
movsb
cmc
cmpsl
pop
push
adc
add
dec
xchg
xor
inc
dec
push
jg
rolb
aam
leave
mov
pop
ret
scas
lods
jno
and
xchg
fcmovbe
fs
jmp
lret
xor
imul
inc
std
lods
sub
mov
lret
repz
push
mov
jle
ljmp
jp
jecxz
push
or
jb
popf
fdiv
adc
fsubp
xchg
or
xchg
repz
out
inc
out
loop
add
out
xchg
add
sub
aas
js
push
dec
fwait
in
mov
fisttps
cmp
pop
ja
pop
inc
adcb
rcll
aad
sarl
fisttps
push
or
loopne
fs
sub
nop
cmp
gs
xor
movsb
jae
lret
jo
mov
and
hlt
outsl
bnd
mov
scas
aad
bound
shlb
jmp
insb
imul
fildl
int3
or
push
cmc
adc
and
insb
test
jge
shlb
jge
mov
or
movsl
and
cli
mov
jp
aas
add
sbb
out
lds
push
inc
mov
loop
fistpll
roll
lahf
repz
mov
data16
jmp
jae
lcall
pop
lods
fbstp
enter
sbb
push
lods
xchg
movsb
inc
mov
inc
xlat
pop
lds
jle
mov
out
int
add
stos
xchg
mov
jmpw
sbb
xchg
jl
ja
pop
pop
enter
inc
mov
and
sti
out
pop
xchg
insl
aas
lds
scas
shll
dec
arpl
push
sbb
add
cmpsb
cmp
popf
leave
jno
in
jns
sbb
xlat
mov
pop
pop
cmp
test
cmp
add
push
jge
inc
int
cmp
ret
ret
cld
add
dec
jb
cltd
xor
adc
outsb
mov
inc
aaa
std
lret
mov
mov
mov
dec
xchg
dec
je
imul
popf
push
dec
jb
adc
xor
in
xchg
sets
adc
cmp
xor
jae
ja
into
pop
mov
fidivrs
loop
out
roll
insl
dec
jecxz
scas
cmp
pop
push
imul
fcomp
add
pop
push
push
es
orl
push
adc
int
fildll
paddsb
push
jmp
pop
inc
leave
stos
loop
jbe
pop
xor
fimull
ret
pusha
mov
repz
add
jl
cmp
scas
inc
stc
fcomp
adc
fucomi
mov
mov
adc
into
xor
push
test
int3
sarb
mov
pop
xchg
and
test
pop
mov
xchg
dec
sbb
lds
lahf
mov
push
mov
mov
shll
push
pop
cmpsb
sti
cmc
pop
js
or
inc
lods
jp
inc
iret
lret
push
cli
inc
repnz
add
mov
sbb
fists
xor
imul
rcl
mull
mov
outsw
xchg
aas
mov
dec
xchg
xchg
fwait
stc
fnsave
xchg
push
in
int3
push
js
ret
jae
scas
or
sbb
pop
lret
ret
sbb
imul
incl
xchg
pop
push
inc
xchg
push
cld
mov
daa
mov
test
cmc
push
sbb
adcl
jnp
subb
xchg
movsl
inc
jp
and
fadds
push
std
lret
out
adcb
mov
cmpsl
testl
jle
call
imul
scas
mov
xor
cpuid
pop
loop
xchg
sarb
scas
jne
or
xlat
popf
jle
outsb
push
daa
push
mov
pop
jp
leave
ret
jo
rolb
out
xlat
popf
xchg
lea
push
and
imul
pushl
mov
pop
mov
repz
fisttpl
lret
dec
dec
jg
sarb
rcll
dec
mov
std
insl
xor
and
add
sub
jge
cli
movsb
addl
fs
addr16
mov
popf
xor
insb
adc
in
shrl
jae
mov
stc
mov
andb
add
gs
popf
mov
dec
mov
in
and
js
dec
loope
cs
xchg
dec
or
sub
inc
mov
popf
cwtl
mov
cwtl
movsl
cmpsb
cli
pop
ss
in
and
inc
pop
call
lods
in
imul
test
cmc
cli
dec
divl
outsb
out
into
test
in
lahf
mov
push
shll
sbb
mov
mov
mov
outsb
and
call
push
mov
test
jno
mov
loop
mov
cli
mov
scas
sub
sbb
outsb
roll
hlt
std
pop
add
inc
pop
xchg
push
jo
popf
jmp
mov
addr16
xor
insb
shlb
xorb
xor
into
ja
rol
pop
or
scas
lret
jae
dec
push
adc
xchg
ljmp
int3
int
add
fists
cmp
int3
adc
sbb
pop
fstl
inc
in
pop
adc
push
pop
popf
arpl
or
push
adc
daa
and
shr
adc
sub
loopne
ljmp
in
push
sbb
int
in
in
mov
add
push
fwait
mov
mov
jmp
add
or
or
out
in
pop
lret
bswap
jecxz
ljmp
scas
clc
sbb
jne
sbb
addr16
iret
push
loope
icebp
cwtl
mov
mov
push
push
push
push
inc
cwtl
pop
ds
sub
leave
mov
xor
scas
test
pop
loope
dec
pop
or
cli
mov
mov
in
testb
mov
cmp
jbe
sub
and
ret
mov
lret
pop
cmc
sbb
sbb
loopne
xchg
out
nop
movsb
sub
call
iret
rcl
outsb
arpl
push
pop
testl
mulb
xor
scas
mov
mov
mov
mov
je
mov
jbe
popf
fdivrl
test
pop
xchg
dec
outsl
pop
xchg
repnz
inc
imull
fildl
or
jecxz
es
xchg
push
mov
mov
gs
sahf
xchg
sbb
add
jl
outsl
cmp
pop
pop
add
or
mov
and
jle
std
mov
jne
sub
rorl
aam
fdivl
sub
sbbb
lds
gs
inc
aaa
pop
and
jp
pop
repz
fisttps
mov
outsl
shll
pop
xor
cmp
dec
fmull
aas
mov
push
pop
cmp
mov
pop
push
test
pavgb
out
jne
stos
mov
xor
rcll
loop
jae
in
ret
or
cmp
mov
int
loopne
mov
bound
es
add
push
pop
adc
sbb
lock
mov
mov
jo
rcl
cmovne
aaa
mov
inc
inc
mov
dec
pop
adc
push
popf
and
xor
ficomps
dec
mov
mov
jo
pop
xchg
out
mov
jb
cmp
jno
jge
into
leave
lcall
nop
dec
testl
mov
inc
sti
arpl
inc
std
rorb
jbe
push
dec
loopne
popf
in
mov
addl
mov
add
sti
cmpsl
dec
add
dec
sub
pop
movsb
jb
insb
call
fwait
aad
bound
out
lret
movsl
sbb
lcall
mov
mov
mov
imul
dec
leave
cmp
popf
in
cli
sti
cmc
fimull
mov
and
xchg
ret
inc
dec
fwait
pushf
xlat
push
pop
push
jmp
cli
jge
cmp
sub
hlt
inc
test
xor
fwait
loopne
jb
cmp
data16
jb
jo
sub
test
sub
in
sahf
mov
in
fwait
adc
loop
lods
out
loop
inc
std
gs
mov
cmp
pop
mov
and
add
inc
push
adc
adc
cmp
xor
int
xlat
es
dec
rcr
pop
std
cli
mov
ss
lea
fidivs
cmp
fcom
testl
mov
shll
xchg
rcl
mov
sahf
mov
ret
xchg
and
push
xchg
es
lahf
cmc
mov
gs
dec
add
loop
movsb
mov
mov
hlt
call
or
hlt
inc
clc
int3
cltd
and
sbb
stc
imul
jl
push
dec
adc
stos
xchg
sti
inc
mov
push
stos
ljmp
jmp
add
jmp
cmp
xor
jae
push
sarb
scas
xchg
xchg
and
test
insb
push
outsb
sbb
in
repz
mov
repz
mov
dec
test
adc
lods
mov
dec
into
lret
shr
rcll
adc
mov
jne
dec
xor
movsb
adc
and
pusha
cmp
xchg
fwait
add
in
into
xlat
imul
shll
filds
cmpsl
push
jg
mov
cmp
mov
insb
fcomp
cmp
imul
pop
sbb
dec
test
mov
jb
sub
cmp
pushf
mov
lea
aam
and
out
insl
clc
out
outsl
jp
popf
ja
xchg
xchg
mov
fldl
dec
dec
hlt
jb
insb
jle
subb
fadds
out
cmpsl
out
das
test
mov
xchg
push
rorb
mov
call
cmpb
jno
cmp
cmp
mov
fbld
ficoml
adc
icebp
ds
in
repnz
jecxz
push
inc
andl
sub
dec
cmp
pushf
popa
mov
cmp
sub
sub
in
inc
push
dec
fs
xchg
stc
or
mov
add
pop
scas
dec
dec
sti
add
loopne
dec
pop
or
pop
scas
cmc
mov
sbb
or
sbb
in
xor
or
xor
dec
and
repnz
mov
loopne
sahf
jne
into
hlt
je
ret
mov
dec
xchg
cmp
in
jne
scas
pop
sub
mov
mov
push
fdivrs
jb
pop
sub
hlt
jbe
loop
or
and
inc
popa
sub
mov
call
ss
sbb
lcall
mov
bswap
mov
rcrb
aad
in
mov
sbb
scas
jmp
jle
shrb
sahf
lea
cmpsb
cwtl
mov
inc
sti
sti
adc
pop
inc
repnz
lods
gs
inc
xchg
scas
xor
inc
sbb
mov
cli
cmp
aad
jmp
jne
jo
sub
xorb
xchg
add
or
lahf
or
in
in
mov
stc
repnz
fcmovu
test
ds
popf
stos
std
jo
test
add
dec
mov
push
ljmp
pop
adc
dec
inc
mov
and
inc
pop
test
in
adc
inc
xchg
movsb
mov
clc
ficoml
mov
popf
in
add
pop
jb
out
ss
dec
jb
mov
cmp
fdivrl
jg
dec
out
adc
test
push
sbb
add
dec
ds
adc
xchg
xchg
test
jne
sbb
into
sbb
push
arpl
test
pop
jns
faddl
fidivl
hlt
push
pop
decl
mov
rcr
call
sub
cmp
and
push
ss
ret
cmc
lods
aaa
fildl
clc
inc
adc
pusha
subl
adc
into
sub
int
cmpsl
xchg
xor
push
mov
jg
inc
shrl
fs
jle
psrlq
adc
ret
dec
mov
cwtl
sub
xorb
cmp
cld
xchg
pop
stos
cld
test
lahf
shrl
in
ss
ret
xchg
or
dec
jae
subb
rcl
int3
cmpl
mov
jno
jae
mov
inc
xor
lret
pop
cli
fldt
repz
aas
sub
stos
or
imul
ror
add
dec
test
push
js
aas
jbe
bound
stos
xor
movsw
pushf
cmp
jge
jno
js
dec
js
addb
fidivl
dec
setl
rclb
push
stos
leave
enter
mov
jb
inc
jmp
es
xchg
sbb
push
rorl
sar
mov
dec
mov
dec
pop
repnz
ss
mov
jl
jge
xchg
imul
add
lcall
imul
je
imul
inc
mov
imulb
cmp
pop
or
rcrb
fs
mov
mov
mov
faddp
cmpsb
or
and
xchg
xchg
jmp
nop
outsb
mov
lea
mov
jae
and
xchg
ret
mov
or
mov
cmc
push
fmull
repnz
icebp
imul
std
popa
mov
pop
aad
add
cmpsl
inc
sbb
shl
sub
cwtl
aam
fs
inc
data16
adc
cmc
sbb
xchg
add
inc
jle
mov
cmpsb
pop
or
jns
or
add
cmp
sahf
sbb
cmp
push
or
push
sbb
test
call
jmp
das
mov
outsl
ljmp
push
sbb
gs
in
fstpt
mov
dec
and
dec
dec
or
sub
aas
lahf
ds
std
adc
punpckhwd
and
xchg
call
mov
mov
adc
das
cmp
test
jo
testl
lret
adc
popa
inc
gs
lock
ja
xor
mov
clc
mov
in
out
push
in
add
mov
std
inc
loop
imul
xor
add
not
aad
push
emms
inc
jb
jg
fcmovne
test
pop
mov
sbb
fcoml
call
add
fidivrl
iret
inc
lret
and
add
shll
cli
dec
clc
sub
jecxz,pn
test
xor
std
repnz
mov
mov
xor
mov
xabort
sbb
cmp
xor
dec
push
inc
xchg
xchg
push
mov
or
popf
sub
in
mov
flds
dec
jle
push
out
jle
aam
out
addr16
xor
sbb
mov
add
test
xchg
fsubrp
pop
mov
mov
cmpb
pop
call
fsubs
pop
xchg
enter
ja
push
add
call
mov
mov
lahf
xor
aas
mov
lds
stos
je
push
xchg
jmp
shrl
in
jb
push
push
ds
mov
imul
insb
pop
pop
or
je
lret
push
xchg
push
cli
cld
test
sbb
mov
push
xchg
inc
jne
mov
ja
and
dec
jo
pushf
dec
mov
sub
pop
push
or
cmpsl
mov
test
xlat
pop
pop
or
add
cmpsb
aam
es
jge
and
shl
push
mov
sbb
sbb
add
nop
mov
mov
pushf
pop
or
cmp
enter
sub
adc
pop
ss
stos
popa
shl
adc
sub
mov
xchg
push
mov
xor
lcall
popa
adc
sub
adc
in
aam
jp
outsb
jmp
dec
lock
int
lods
mov
jb
dec
daa
xchg
ljmp
push
jg
cmpsb
shlb
mov
adc
les
les
pop
dec
clc
sahf
adc
inc
scas
not
push
xchg
dec
outsl
les
push
push
add
pop
xchg
or
mov
sub
loope
cs
ljmp
out
jle
mov
xor
repnz
pop
jl
jbe
pop
push
add
push
bound
sbb
push
imull
xor
pushf
out
das
push
fidivrl
les
mov
cwtl
pop
int
out
pusha
mov
and
or
and
and
jo
jbe
cld
push
cwtl
fs
sbb
cli
add
xchg
add
fidivl
rcll
inc
stos
ret
xor
jecxz
fxrstor
sub
fbld
cli
sbb
ret
push
scas
mov
mov
rcrb
fcompl
sbb
add
je
push
push
ret
mov
mov
adc
mov
out
call
fwait
mov
and
pop
aaa
paddsb
inc
test
fdiv
repnz
in
xchg
pop
or
test
push
fdivl
test
test
xchg
cmpsb
lcall
adc
outsl
mov
mov
das
test
sahf
fistl
xchg
stc
sahf
sarb
pop
cmp
xor
lret
js
dec
lds
lahf
and
movsb
xchg
push
jmp
mov
psubusb
add
jae
mov
stc
clc
adc
leave
int3
mov
add
add
pop
pop
xlat
in
cwtl
jb
sbb
cli
xchg
rorl
ret
cli
mov
push
fs
nop
loope
sbb
les
xchg
sub
add
ret
fisubl
sub
push
adc
dec
mov
dec
outsl
in
cmp
cmp
mov
notl
mov
push
fidivs
arpl
clc
dec
mov
sub
fs
inc
push
gs
ficoml
hlt
xchg
cmp
inc
hlt
jnp
jle
rcrb
rcl
in
push
imul
push
cli
cs
inc
dec
mov
das
pop
dec
leave
cmp
or
inc
aaa
add
mov
add
lea
scas
pop
int
inc
pop
xor
out
and
cmc
stc
jp
mov
cmc
test
cmp
mov
cwtl
sbb
lcall
xchg
into
push
sar
and
test
add
rol
popf
out
add
test
mov
mov
mov
mov
aas
jno
movsb
fdivr
stos
test
dec
xor
sub
xor
pop
es
ds
out
push
mov
idivb
sarl
es
in
loope
and
sub
movsb
sub
adc
add
xchg
scas
int
jne
and
mov
cmp
clc
dec
mov
adc
push
mov
and
popl
sahf
iret
sbb
push
jae
cmp
sbb
adc
xchg
xchg
push
mov
sbb
pop
pop
and
pushf
fimuls
idivb
lock
imul
popf
in
cmp
scas
test
popf
hlt
add
stos
nop
test
mov
sub
cmp
push
inc
pop
repnz
inc
les
jbe
out
inc
inc
sahf
mov
lods
iret
dec
gs
mov
outsb
xchg
or
inc
repz
sti
push
pusha
fmull
adc
imul
mov
and
ret
ret
ficompl
fildll
andb
lds
and
pop
fincstp
xchg
xchg
movsb
push
out
inc
jne
sbb
mov
iret
or
out
jg
jnp
xor
and
xchg
xor
insb
push
addr16
in
ret
stos
fsubl
arpl
in
mov
pop
inc
push
repnz
inc
mov
gs
sahf
imul
push
cmpsb
xor
cmp
data16
dec
push
mov
xor
jl
xchg
pusha
stos
scas
add
js
mov
std
jmp
dec
xor
sbb
fnstcw
call
cmc
loop
insl
jnp
xchg
sarl
jge
fwait
into
mov
repnz
pop
mov
mov
das
jb
jle
addl
pop
xor
dec
mov
xchg
lcall
ror
std
xor
paddsb
test
out
mov
pop
idivl
arpl
lret
and
or
lds
dec
sahf
das
xorb
lods
shrl
xor
test
in
ja
adc
mov
xchg
add
in
es
popf
aas
loop
push
sbb
inc
in
sbb
sub
faddl
mov
xchg
mov
into
mov
movsb
inc
sbbl
ljmp
fbstp
sahf
pop
nop
enter
xor
cmp
mov
cmp
mov
pop
pop
testb
mov
and
mov
jnp
cmp
pop
mov
lods
jp
jle
aas
scas
psllq
and
mov
bound
lods
xchg
lock
add
aam
or
mov
jg
popf
mov
inc
jg
pop
mov
mov
pop
aaa
pop
adc
or
or
out
ss
xchg
rcr
dec
cmp
mov
addr16
mov
add
mov
push
mov
das
adc
push
addr16
std
xchg
pop
mov
cs
jge
lds
xor
dec
scas
pop
cs
cmpsl
mov
or
xlat
outsl
mov
cltd
scas
or
in
mov
and
pop
fldenvs
lock
and
pop
pop
mov
pop
fiadds
insb
xchg
js
inc
inc
jmp
xor
lods
je
dec
sub
cmp
out
in
sbbb
dec
pop
jl
push
shr
push
pop
nop
fwait
test
test
fistpll
cwtl
and
add
movsb
movsl
jmp
mov
lret
loop
aas
mov
jp
inc
popa
sub
fwait
pop
pop
jns
sbb
dec
pop
mov
pushf
mov
jns
negl
cmpsb
dec
mov
in
cmpsl
pusha
push
aaa
popa
jb
or
mov
and
push
mov
jnp
sbb
pop
mov
xlat
pop
leave
fwait
ljmp
jnp
mov
ret
sarb
jecxz
orl
mov
pop
push
aas
pushf
icebp
or
add
xor
sub
outsl
sub
in
push
mov
sub
dec
nop
cmp
mov
sub
je
sahf
inc
mov
fcompl
fsts
fwait
mov
mov
arpl
xchg
jnp
popa
enter
xor
aaa
daa
out
cld
ss
sbb
and
mov
or
js
adc
and
and
mov
cmp
or
jns
ret
insl
mov
pop
add
add
call
jae
int
mov
cmpsl
int
push
ret
jmp
xorb
dec
movsb
xor
fmull
dec
and
insl
loope
fwait
daa
andb
pop
mov
mov
xchg
pop
dec
cmp
mov
jecxz
cld
fwait
mov
stos
sub
dec
sub
mov
mov
stos
xchg
ja
sahf
kmovw
fbld
aam
add
scas
pop
mov
or
push
push
xchg
pop
xchg
dec
psubsw
lret
xchg
out
mov
ds
out
pushf
adc
jge
fistpll
push
lret
stc
mov
leave
jle
ja
fs
jecxz
and
in
lods
iret
sub
xchg
pop
mov
push
sub
push
xrelease
fpatan
or
sub
test
cmp
dec
jnp
push
pop
mov
sbb
in
test
xchg
lcall
adc
mov
loope
xchg
inc
pop
scas
jo
inc
dec
cmp
push
leave
loop
dec
pcmpeqw
pop
data16
clc
icebp
les
jne
std
jp
mov
inc
mov
or
dec
dec
mov
repnz
mov
adc
loopne
pop
testl
aas
mov
dec
clc
call
and
add
cmpsl
or
repnz
push
test
mov
xchg
lds
xor
addr16
daa
inc
or
push
push
inc
test
ss
jno
shlb
add
mov
nop
iret
pop
mov
in
cli
fcoms
outsb
lds
and
push
lock
hlt
stos
mov
add
out
js
rolb
push
gs
or
ljmp
adc
mov
das
rol
rorl
sub
mov
adc
orl
popf
cld
dec
inc
xor
mov
push
adc
or
dec
sub
xlat
sbb
mov
xchg
xchg
lahf
out
mov
mov
or
dec
fs
sbb
push
dec
stc
sbb
fsubl
and
fildll
cltd
jecxz
icebp
or
les
xor
push
mov
cld
jmp
scas
aas
sbb
jmp
movsl
push
jl
shrd
jne
mov
sti
xor
sub
and
inc
add
ds
and
test
aaa
adc
fwait
jns
call
pop
push
push
in
je
inc
data16
into
subl
or
push
sub
sar
int3
lret
jmp
fbld
lods
mov
sub
jge
test
mov
add
cli
mov
add
ss
dec
sbb
mov
outsl
mov
xchg
popf
nop
xchg
inc
es
dec
int
mov
mov
cs
xchg
xor
int3
inc
xchg
lahf
lret
int
mov
mov
inc
adc
adc
in
pop
jnp
or
inc
mov
inc
adc
test
sub
push
scas
mov
jle
and
pop
cli
ret
hlt
loop
leave
dec
sub
out
rcr
repz
stos
popf
pop
xchg
rorb
sti
out
das
out
xchg
ljmp
xchg
jae
cmpsl
sub
dec
cmp
stos
sub
sahf
pop
sti
popa
pop
push
hlt
xor
pop
pop
fnstenv
pop
push
jge
pop
cmpsb
inc
movsb
mov
jo
test
add
cmpsl
pop
scas
push
pusha
adc
push
sbb
mov
ljmp
pop
std
xchg
jbe
mov
dec
in
ret
pop
in
pop
jo
test
cmpsb
xor
and
add
leave
or
iret
jae
cmp
into
movl
cli
shlb
rclb
push
inc
mov
push
sbb
xor
fisttpl
lahf
mov
hlt
mov
push
cltd
and
imul
dec
xor
and
out
push
dec
outsb
das
subl
rcrl
fists
aad
lds
call
xchg
sti
mov
insb
dec
sbb
loope
nop
xor
mov
cmp
pusha
out
mov
mov
inc
pop
cmp
mov
inc
fidivrl
add
adc
mov
pushf
out
xor
push
jg
xchg
xchg
pop
sbb
lods
call
out
fs
in
pop
movsl
clc
mov
push
fdiv
lret
lahf
nop
sbb
xchg
mov
stos
push
hlt
jno
mov
mov
pop
int
sbb
inc
pop
xchg
popf
dec
or
add
test
enter
lcall
mov
ss
or
xchg
adc
out
pop
push
andb
fsubrl
fdiv
mov
push
dec
xor
mov
mov
add
jne
mov
dec
sub
aad
dec
ja
xor
pusha
add
ja
pop
pop
aad
mov
movsb
add
xchg
int
incb
inc
scas
push
lock
mov
pop
dec
pop
xor
pusha
jns
insb
mov
arpl
push
mov
das
add
int3
lods
repnz
adc
pop
lret
cwtl
sub
push
cs
sbb
ficompl
stos
jno
in
jo
lods
sub
add
xchg
imul
push
and
bound
mov
pop
jne
pop
pop
mov
lcall
push
bound
inc
in
lahf
pop
jmp
adc
arpl
cmp
aas
ja
inc
cs
sbb
sbb
icebp
nop
jns
inc
push
jno,pt
or
aad
dec
mov
dec
inc
mov
pop
jmp
jae
es
dec
xor
push
fdivrl
ret
jo
cmp
cli
inc
jo
push
xchg
dec
pop
dec
sub
mov
rol
push
or
pop
insl
push
cmp
jle
aaa
or
add
stos
ljmp
call
jl
mov
lods
adc
scas
insb
xor
jp
mov
out
or
scas
adc
fmull
mov
mov
test
fmuls
push
or
and
push
sbb
lock
push
ret
pop
ja
rcl
xchg
ss
pop
push
xchg
push
cmp
and
out
stc
or
jns
fstl
loope
xor
cmp
add
or
hlt
ljmp
lret
push
es
jle
arpl
jecxz
scas
daa
jno
dec
jle
or
cmp
xchg
sarb
aas
add
insl
stc
enter
iret
inc
loop
je
push
pop
cwtl
int3
gs
fs
fs
mov
jo
jae
aas
push
js
ss
loop
mov
or
xchg
out
cmp
xchg
add
mov
xor
add
insb
sub
bound
les
jmp
aam
pushl
adc
cmp
pop
or
fisubl
js
iret
pop
nop
fisttpll
icebp
mov
leave
jns
and
ret
push
cmp
adc
call
jns
or
push
leave
dec
inc
inc
inc
shll
outsb
shlb
mov
lock
or
lods
jmp
pop
adc
sarl
pop
and
xchg
or
mov
sbb
scas
push
xor
jae
sub
pop
sbb
push
ds
sbb
cli
pop
mov
aas
pop
hlt
mov
inc
push
sahf
ljmp
pop
mov
sbb
sub
pushf
and
js
xchg
inc
into
inc
xor
out
push
fisubrl
sbb
xchg
or
test
ret
pop
adc
xor
and
add
dec
xchg
mov
mov
push
push
idivl
fistps
adc
add
inc
js
fistpll
xor
stc
loopne
mov
stos
cmp
inc
pop
hlt
or
jl
fisttpl
add
fmulp
cld
int
mov
divb
push
jnp
dec
daa
in
aad
clc
push
sti
loope
jbe
xchg
cmp
popf
dec
gs
int
mov
stc
inc
orl
dec
repz
adc
dec
mov
add
bound
or
addb
stos
hlt
adc
outsb
mov
popa
in
jp
hlt
jb
lods
adc
out
std
jbe
ss
mov
mov
adc
adcb
jb
loope
jb
pop
push
lds
push
lret
and
sub
test
pop
ljmp
std
jle
cmp
shrb
inc
inc
or
je
icebp
leave
xor
mov
pop
cld
add
out
sbb
fimull
nop
push
cmp
ret
push
into
jmp
aas
pop
cmp
xor
std
or
pop
sub
jl
popf
ljmp
int
test
cli
insl
add
mov
daa
mov
orl
push
stc
enter
xorb
inc
fwait
or
gs
fs
or
sbb
push
data16
pop
andl
aas
sbb
rcrb
add
or
xchg
cmp
mov
xor
lcall
loope
pmuludq
sub
lods
in
ret
push
loope
mov
jnp
push
push
cmpsl
add
sbb
mov
push
inc
imul
test
and
lahf
scas
pusha
cmp
jmp
addr16
jnp
js
inc
cld
outsb
mov
scas
add
aam
out
sub
pop
push
push
je
clc
dec
pop
and
push
lea
push
jecxz
add
jle
dec
popf
sahf
ja
insl
in
mov
add
je
sub
lds
cltd
pop
addl
and
sbb
xor
fmuls
push
jb
inc
jb
xor
or
cmp
test
xchg
hlt
ficoml
adc
mov
sbb
mov
fwait
or
adc
add
mov
dec
sbbl
jno
push
mov
lds
ds
sub
push
mov
and
cmpl
jns
test
mov
push
in
fmuls
in
repnz
push
mov
fstpl
sub
jge
add
dec
aam
inc
cwtl
mov
arpl
addr16
sahf
mov
out
js
mov
pop
inc
inc
jne
mov
lret
add
push
stos
cli
in
sub
inc
xchg
sbb
gs
xor
sub
call
sub
sahf
pop
mov
in
test
push
push
lahf
xlat
inc
cmc
inc
add
inc
mov
add
ds
stc
out
and
xchg
mov
aaa
inc
cltd
xor
inc
outsl
sub
std
jns
pop
or
mov
cmpsl
mov
add
movsb
fsubs
mov
sub
icebp
fists
push
out
xor
cmp
call
repnz
push
mov
jge
jp
mov
mov
pop
insb
cmpsb
shll
cmpsl
std
dec
out
mov
add
andl
add
nop
pop
outsb
aas
outsb
popf
add
jb
repz
enter
xorl
cmc
lea
mov
jne
insb
loope
orb
lock
ss
jg
xchg
xchg
fimuls
aam
jnp
fs
sbb
loope
daa
push
and
add
enter
xor
repnz
jecxz
ljmp
rolb
test
jp
pop
mov
xchg
ret
mov
roll
gs
pushf
sub
inc
sahf
notl
outsl
ds
push
or
push
pop
mov
mov
stos
push
mov
in
adc
repnz
mov
loop
mov
popf
lods
sbbl
or
dec
test
cltd
aaa
sahf
shl
nop
test
dec
hlt
aas
pop
imul
adc
jb
mov
adc
sarb
test
pushl
inc
icebp
loop
jmp
mov
cli
idivl
movsl
push
xchg
sarl
addr16
adc
mov
xor
xchg
daa
cmp
jmp
mov
add
or
xlat
shll
jno
xor
mov
inc
cmpsl
stc
xchg
fs
rcrb
mov
leave
jg
xchg
fisubrs
mov
testl
dec
add
int
stos
sub
dec
cltd
xchg
or
lods
bound
cmpsl
xchg
fnstsw
cmp
mov
out
add
ss
dec
push
cli
or
nop
lret
mov
clc
ja
xor
icebp
mov
ds
test
xor
xor
inc
inc
push
and
sub
rcll
repnz
pop
push
mov
lcall
push
cmpsb
mov
xchg
call
xchg
mov
fldenv
ss
lods
icebp
loopne
fdivrs
sub
xor
repz
rcrl
jno
adc
ljmp
mov
push
fwait
mov
mov
ret
push
sti
gs
icebp
shlb
inc
mov
das
push
sub
ret
cld
not
cmc
add
aam
jle
out
jne
xchg
lcall
pop
sbb
mov
push
sub
test
in
mov
movsb
sbb
jg
mov
jp
jg
outsl
iret
aad
sbbl
mov
jb
mov
push
clc
sbb
or
mov
pop
dec
in
gs
je
scas
cltd
or
and
cs
insb
mov
jbe
inc
movsl
push
aad
jae
testl
scas
nop
insb
xchg
adc
in
fidivrs
inc
in
jle
dec
jnp
out
cmpb
and
repz
or
add
aaa
rol
and
pop
adc
push
ljmp
test
mov
mov
repnz
insl
add
ds
or
adc
sbb
or
cmp
cmp
loopne
add
push
int
hlt
dec
iret
fsts
adc
mov
jg
lahf
xor
jmp
in
loope
sbb
int3
mov
inc
jb
xor
xor
test
call
sbbb
jo
movsb
out
fstps
adc
fbld
adc
pop
adc
and
ficoml
push
mov
mov
xor
pop
dec
sbb
ret
nop
aaa
rcll
in
mov
cmp
cld
push
repnz
xchg
repnz
addr16
add
hlt
jmp
popf
jmp
mov
pop
xchg
mov
mov
sub
xor
mov
jns
fisubrl
flds
mov
xchg
shlb
push
ja
mov
sbb
mov
mov
push
loopne
push
mov
pop
push
jnp
bound
push
scas
sub
aam
inc
mov
fcompl
push
push
cmpsb
jb
loope
pop
jo
aaa
jno
dec
jge
lret
shl
out
cmc
push
movsl
jnp
or
mov
cwtl
jecxz
xchg
or
rorb
fs
outsb
adc
sbb
pop
addr16
add
enter
push
arpl
es
scas
fnsave
sub
mov
xor
mov
into
frstor
ret
mov
pusha
jmp
cltd
jecxz
test
xor
jg
jle
bound
test
add
pop
mov
cwtl
adc
gs
mov
inc
and
aas
mov
out
imul
xchg
insb
xchg
test
test
mov
in
test
inc
imul
sub
data16
negl
jl
xor
ja
shrl
jns
idivb
repz
add
mov
pop
lods
or
mov
push
xchg
sbb
mov
jbe
iret
pop
data16
in
adc
pop
aad
andl
xchg
jg
ds
dec
mov
cld
cs
sbb
pop
mov
in
lock
hlt
test
rcll
fcmovnu
mov
jmp
or
mov
mov
insl
ret
adc
lods
mov
push
sbb
jle
stc
pop
subl
out
dec
iret
scas
pusha
inc
or
loopne
or
cmpl
lret
inc
push
xchg
mov
cmpsl
and
cmp
fstpt
ret
imul
inc
xlat
inc
cmp
pop
mov
das
cld
nop
jns
pop
jae
push
xchg
push
xchg
xchg
pop
sbb
sub
bound
inc
fbld
pop
pusha
data16
xor
hlt
test
mov
lldt
into
out
arpl
aam
mov
repz
push
xor
insl
pop
xchg
xchg
jno
sarl
push
push
insb
adc
pop
sub
adc
mov
or
shlb
xlat
add
mov
test
jbe
dec
jmp
loopne
loope
sahf
or
push
out
mov
sub
cmp
jge
arpl
mov
xor
loope
outsb
add
xlat
orb
pop
xlat
add
add
cmp
std
dec
dec
or
dec
cmpsl
lock
in
pop
rcll
lds
ljmp
jbe,pt
icebp
and
inc
rolb
push
pop
popa
pop
push
mov
insb
cmc
sar
fbstp
pop
cmp
mov
fs
and
xor
jo
std
inc
mov
std
inc
sbb
jge
lods
lea
pop
lcall
clc
mov
icebp
in
in
stos
testb
dec
add
loopne
jae
mov
insl
call
ja
jo
dec
push
insb
sub
or
dec
pop
pushf
out
mov
fs
add
add
xchg
add
mov
cmp
scas
jae
sbbb
fsubrs
pop
testb
imul
mov
xchg
mov
dec
test
xor
lahf
dec
jno,pn
test
aas
imul
or
or
mov
mov
nop
mov
push
test
and
icebp
jns
jl
jg
nop
pop
jnp
lods
xor
das
lock
xchg
inc
in
jmp
fnstcw
out
xchg
sbb
dec
icebp
cmp
mov
push
add
xor
pop
mov
lds
jns
adcb
xchg
mov
cmpsb
add
iret
shrb
mov
pop
sub
mov
insl
stos
cmpsb
in
outsb
movsb
adc
pop
mov
pop
out
lret
mov
sbb
fcmovb
push
add
push
mov
inc
pop
loopne
loop
cmp
mov
push
ss
sub
fstp
cmpsl
dec
jmp
mov
jp
fisubrl
ficomps
jmp
loopne
jp
out
movsl
inc
xchg
mov
add
mov
rcll
pop
imul
repz
fldl
cmp
sbb
test
mov
enter
dec
stos
sub
mov
sbb
js
jbe
imul
rcl
test
fistpl
fcmovnu
mov
test
je
jne
scas
les
dec
jo
sub
sar
pop
jp
jmp
call
jge
movsl
push
sub
xchg
mov
out
pop
jb
inc
addb
jle
jecxz
cmp
rcll
inc
out
iret
jb
call
mov
mov
adc
nop
xchg
mov
sbb
add
test
sbb
adc
lret
and
vpsraw
inc
cltd
xchg
clc
jno
jl
fbld
cmc
cmc
adc
shlb
fdivl
jne
popf
cmpb
or
call
push
daa
mov
mov
mov
lret
inc
icebp
aas
cmp
fwait
enter
lock
adc
gs
test
jmp
rolb
fwait
dec
inc
mov
jle
mov
outsb
pop
xchg
sbb
cmpb
inc
fstps
test
adc
leave
sbb
js
dec
data16
jb
fstp
sbb
jnp
shl
xchg
sbb
lea
subb
xor
xchg
xor
add
pavgw
adc
and
out
push
push
ffreep
xchg
imul
lret
mov
mov
dec
mov
popa
xchg
push
std
iret
or
cmc
push
or
lret
fdivl
sub
jle
cmp
cmp
mov
daa
pop
repz
lods
call
sbb
gs
dec
shrb
pop
sbb
outsl
pop
adc
scas
pop
dec
orb
push
clc
xchg
pop
xor
lea
jns
dec
aad
push
pop
leave
popf
fs
xor
jmp
pop
aad
and
dec
push
jno
push
jg
rcrb
pop
mov
fdivrs
jmp
jno
test
xlat
dec
cltd
ds
out
and
test
out
pop
fcoms
dec
push
add
imul
shrb
dec
psllw
movsb
or
push
cmpsb
push
ss
mov
or
adc
cmp
jl
or
cwtl
push
or
data16
mov
je
jb
in
cs
ret
xchg
sbbb
ret
out
outsb
add
cmp
jbe
inc
pop
xor
stos
es
lds
out
les
xor
push
and
mov
fs
in
ret
inc
lods
jp
push
mov
cmp
pop
jo
push
mov
jnp
xchg
push
test
or
fidivrs
inc
movsl
ss
mov
pop
inc
lea
addr16
mov
and
cltd
vmovdqa
subl
test
lahf
xchg
mov
fcmovu
sbb
sub
data16
scas
pop
cmp
xor
lds
pop
aaa
pop
jmp
inc
push
lahf
insl
test
push
out
mov
cmp
int3
aad
inc
and
outsl
adc
roll
ds
clc
test
sbb
sub
sbb
mov
cmp
and
fwait
pusha
sbb
mov
xor
mov
jo
jl
push
jns
dec
out
pusha
pop
push
pop
clc
sub
sbb
xlat
sbb
test
jecxz
nop
xchg
adc
and
mov
cmp
mov
test
push
sahf
ljmp
push
das
cld
mov
rcrb
call
adc
or
jecxz
xchg
xchg
and
xchg
test
insl
xchg
pop
xchg
pop
in
clc
xsha1
cmpsb
lret
ror
sahf
xchg
mov
clc
enter
cmp
sahf
mov
ss
pop
or
or
into
test
aaa
push
sbb
pop
and
mov
add
cmpsb
ljmp
out
mov
and
dec
add
and
mov
xor
loop
xchg
daa
jle
dec
jl
out
mov
movb
push
lea
push
jp
hlt
stos
mov
or
push
sub
push
mov
sbb
loope
dec
das
mov
jne
movsl
test
sub
sbb
inc
daa
ja
jmp
lahf
pop
fucom
jbe
out
ja
mov
jns
sub
pop
push
icebp
mov
test
pop
push
shrb
xchg
and
cmp
cld
adc
imul
push
sbb
dec
sub
dec
stos
inc
lds
mov
dec
cmc
dec
iret
mov
inc
movsb
lret
mov
inc
or
dec
inc
cwtl
and
ss
inc
in
sbb
les
ss
sub
in
call
in
ljmp
les
or
sbb
xchg
ss
aaa
fmull
mov
popf
decb
loopne
lcall
fildl
leave
pop
fcompl
out
and
fmull
xchg
std
sub
jle
xchg
das
xor
lret
lds
mov
out
shll
loop
xor
cmpsl
sbb
push
je
mov
xchg
push
lcall
outsb
es
aam
inc
shrl
aad
cmp
insb
sbb
dec
fcompl
inc
pop
jne
cmp
xor
shl
faddl
sub
adc
icebp
adc
ljmp
or
sahf
jge
int3
shll
lods
mov
sub
pop
out
mov
sbb
jo
sub
testb
mov
jbe
cmpsl
dec
cmp
push
repz
inc
cwtl
mov
adc
cmp
call
ja
out
out
ljmp
idivb
push
pop
cmp
xchg
fdivrl
lods
and
fcoms
in
sbb
imul
pop
or
rcll
out
add
movsb
std
inc
mov
jb
inc
mov
mov
xor
loop
outsl
repnz
or
push
icebp
xor
or
inc
outsl
cli
adc
ljmp
adc
dec
std
pop
orl
xor
bound
sub
stc
aad
pop
ja
in
or
loopne
pop
sub
cmp
lcall
inc
xchg
clc
sub
jbe
xor
cmp
dec
fcmovnb
dec
ror
push
scas
dec
and
xchg
sbb
ss
jno
add
push
popa
std
mov
sahf
int
loope
fisubrl
data16
outsb
fcmovbe
sbb
sbb
or
les
xor
jnp
adc
in
or
xorl
dec
ficoml
mov
cmp
lods
je
mov
xchg
fwait
dec
sub
mov
xor
pop
or
bound
fucomip
adc
add
mov
enter
mov
clc
clc
add
mov
mov
xchg
mov
push
xchg
movsb
push
pop
jecxz
daa
cwtl
out
lods
pop
arpl
insl
push
jmp
shlb
mov
decl
xchg
iret
xlat
cmc
push
aad
inc
insb
and
leave
daa
mov
push
bound
ret
xchg
adc
sbb
imul
jmp
rcl
aaa
or
fs
jae
gs
fldenv
movsl
and
mov
push
cwtl
push
imul
xor
stos
sahf
and
pusha
incl
lcall
push
cmc
push
pop
lods
cmpsl
pop
add
fwait
sbb
aad
push
ret
int3
aam
scas
push
lahf
les
daa
lret
rcrl
movl
push
sbb
xchg
in
adc
push
aam
push
mov
fildl
cli
ror
and
iret
hlt
xor
arpl
clc
outsl
mov
xor
dec
addl
xor
sbb
call
dec
call
or
test
incb
xchg
outsl
test
push
xchg
subb
iret
mov
xchg
mov
add
lret
repz
decb
dec
cmpsl
pop
pop
mov
push
stc
gs
out
adc
in
pop
push
xchg
lcall
inc
insl
test
push
and
mov
dec
sub
dec
lea
xchg
mov
inc
sbb
leave
dec
xchg
pop
push
push
xor
scas
mov
stc
push
mov
pushf
lods
aaa
popf
or
shrb
jg
xchg
fidivl
ficomps
mov
push
or
repnz
push
fidivs
rorl
or
mov
jno
sub
icebp
sbb
enter
cmpl
jp
dec
mov
call
xor
pushf
dec
cmpsb
fistps
adc
and
adc
inc
aam
dec
stc
inc
aaa
pop
sbb
inc
jne
test
js
mov
int
imul
clc
jecxz
mov
dec
shlb
ja
xchg
cmp
push
je
jmp
out
dec
inc
js
adc
fisubs
daa
mov
dec
imul
and
cmp
xchg
cltd
or
jmp
mov
xchg
xchg
fisttps
jnp
pop
push
scas
cwtl
mov
mov
cli
inc
xlat
xrelease
inc
pop
sub
orl
in
pop
xchg
scas
cli
subb
cwtl
push
inc
in
mov
and
ljmp
cmp
fwait
jecxz
lds
fdivrl
push
repnz
into
jns
mov
test
aas
adc
div
lock
xor
imulb
fisttpl
xor
xchg
cmc
cld
add
jle,pn
jle
add
orl
sub
adc
orb
std
mov
and
gs
mov
cld
mov
mov
mov
push
mov
mov
push
jne
in
cmp
sbb
pusha
xchg
lods
je
dec
cmp
pop
cmp
sbb
fisubrl
fnsave
and
js
mov
pop
ret
lds
cs
xor
jl
add
pop
xchg
push
mov
iret
add
pop
pop
mov
adc
sbb
xor
jns
jns
push
int
divl
hlt
ret
push
inc
xorl
aaa
sarb
inc
inc
popf
push
cltd
and
popa
cmp
ljmp
int3
xor
movsb
sub
nop
idivl
sbb
iret
add
cltd
fcmovu
ja
xchg
pop
push
jg
xor
out
jle
cwtl
mov
pop
loop
dec
sbb
push
xchg
xor
cli
adcb
mov
dec
sub
out
xchg
or
or
jns
xchg
add
or
and
jle
in
jnp
jno
fldt
fsub
notl
inc
scas
fmuls
add
xor
inc
cld
pop
insb
push
rolb
into
js
xchg
imul
stc
not
in
mov
fistps
adc
push
push
and
movsl
ja
xlat
imul
movq
jo
mov
stos
bound
dec
jl
pop
sub
gs
push
inc
test
les
sbb
or
adc
jo
jg
ficompl
add
sbb
jae
pop
lods
and
pop
pop
dec
and
mov
lahf
xor
orb
jecxz
bound
aas
movsb
or
lret
lds
sbb
lds
movsl
into
scas
push
test
cmpsb
test
sbb
sub
jbe
scas
fucomip
dec
mov
add
inc
and
mov
pushf
mov
mov
and
jo
fstpl
push
adc
rclb
adc
jmp
mov
push
inc
adc
cmp
out
push
outsb
sub
outsl
out
pop
jb
cli
cmc
push
push
fdivrl
je
and
fsubs
stc
jp
cwtl
jp
inc
lahf
subb
repnz
or
pop
out
sub
mov
or
adc
hlt
cmp
pusha
adc
scas
addr16
push
int
cmp
push
and
flds
enter
mov
push
lret
mov
adc
bound
cmc
lea
xchg
out
repnz
mov
mov
cmp
nop
test
sub
xor
cs
lcall
mov
pop
add
mov
mov
cmp
dec
pop
cli
movsl
or
or
add
push
mov
js
cmpsb
out
lcall
cmpsl
shll
popf
mov
jbe
ljmp
or
test
push
test
xchg
mov
shlb
sbb
fildll
test
pop
add
add
out
sti
mov
and
leave
ror
test
jge
jne
scas
cmp
movsb
pop
xor
cwtl
sub
ja
push
jno
mov
sti
xchg
mov
shlb
scas
adc
popf
arpl
xchg
stos
loop
sbb
dec
unpckhps
push
in
insl
fwait
addr16
stos
jne
loope
negl
dec
xor
add
mov
pop
outsl
push
mov
add
in
mov
test
mov
mov
sub
faddp
lret
jg
gs
in
dec
loop
in
fs
sub
sbb
out
jmp
adc
jne
mov
inc
adc
sub
or
data16
or
xchg
adc
lret
sbb
es
xchg
dec
dec
and
ds
xchg
or
mov
lcall
and
insl
test
xlat
mov
pushf
jns
inc
dec
int
js
ret
mov
cltd
test
call
icebp
test
xchg
inc
dec
inc
mov
add
push
out
sbb
ss
mov
lds
or
mov
subl
and
xchg
movsb
hlt
dec
ja
xlat
or
jae
jne
inc
inc
xor
int3
push
push
lret
mov
adc
pop
mov
aas
movsl
mov
insl
xor
add
mov
rol
sbb
xor
stos
out
outsb
pop
shlb
scas
out
cmp
pushf
or
andb
out
insl
iret
pusha
add
sbb
lods
sbb
cwtl
push
push
adcl
lret
loopne
daa
bound
mov
inc
sti
lds
jmp
and
adc
call
shlb
jmp
cli
leave
xor
hlt
and
mov
out
popa
fwait
gs
sub
inc
rcll
mov
cwtl
jo
pop
ja
mov
orb
outsb
repz
and
jns
in
jo
or
xor
inc
cwtl
add
jmp
loop
add
lods
push
or
fdivrl
shrl
cmpb
mov
add
push
lret
in
mov
mov
lds
jno
leave
cmp
mov
fsubr
cli
sbb
jp
jbe
std
lret
std
jns
cli
push
adc
loop
adc
das
lahf
mov
cli
inc
and
ficomps
movq
loope
cmp
das
mov
jl
dec
out
clc
mov
out
daa
pushf
js
je
ficoms
mov
xchg
inc
mov
sbb
and
add
push
les
adc
xchg
xchg
xchg
jbe
inc
xor
jno
cmp
into
add
faddl
cmp
dec
mov
jno
xchg
pop
dec
aas
fs
addr16
pusha
outsb
mov
inc
cmpl
jo
mov
cmp
fidivl
ss
jge
mov
mov
jg
mov
je
mov
sub
mov
icebp
or
pop
pop
pop
cmp
fimull
mov
cli
mov
jae
add
or
push
xlat
sbb
aad
lcall
int
nop
call
daa
dec
loope
fsubrl
sub
dec
mov
sbb
sahf
pop
cmp
les
jge
or
ljmp
div
inc
cli
bound
xor
sahf
mov
fdivs
push
inc
out
jge
dec
jge
cmp
xchg
adc
pop
or
jmp
sub
xchg
mov
outsl
cmp
cmp
out
jl
frstor
sbb
outsl
int
cs
out
sbb
dec
aaa
pushw
cmp
xor
and
cmp
xor
inc
lea
adc
inc
push
insl
enter
test
add
out
adc
mov
cmp
mov
mov
push
and
aam
sub
inc
jl
jmp
xchg
pop
xchg
nop
rorb
xchg
out
repz
adc
cltd
int
into
outsl
out
jl
mov
adc
mov
dec
mov
sub
inc
xchg
pop
add
shr
inc
jg
xchg
add
bound
add
mov
add
sarb
dec
and
pop
add
jnp
js
push
out
hlt
out
pop
xor
adc
xor
mov
aam
and
jl
dec
or
and
xchg
jno
repz
loop
xor
pop
add
pushf
repnz
cmp
or
mov
and
lods
adc
dec
push
mov
xchg
push
cltd
push
into
daa
xor
rcll
xchg
cmp
cli
ljmp
das
pop
sarl
pop
push
test
jge
mov
xchg
jmp
movsl
dec
push
xor
hlt
cmp
pop
push
xchg
jg
scas
shll
xchg
cltd
xor
rcr
jle
mov
cmp
push
mov
in
test
imul
xor
dec
fs
outsl
adc
xor
pushf
add
and
cmp
fadds
mov
mov
js
sbb
adc
add
lahf
jae
push
mov
das
nop
jp
pop
mov
outsb
xchg
ret
mov
ret
test
sbb
jnp
push
xor
lea
adc
pop
or
negb
push
sbb
movsb
xchg
xchg
cmp
sub
inc
xlat
mov
rclb
sti
lock
jno
jge
cmp
outsl
je
outsb
adc
ficomps
jmp
fsub
cmp
xlat
mov
cmp
pop
inc
inc
inc
addl
in
das
aam
sub
xchg
cli
mov
sub
or
mov
inc
adc
sub
adc
push
ret
lds
scas
sub
dec
push
mov
lret
sbb
mov
adcb
inc
aam
das
stos
pop
inc
push
lea
pop
xor
xchg
fimuls
cmp
add
sbb
mov
mov
and
ss
ret
out
adc
pusha
or
nop
mov
xchg
mov
fstpl
mov
lock
dec
decb
xchg
lcall
inc
cltd
mov
mov
mov
nop
add
or
call
call
mov
xor
xchg
daa
sahf
sbb
das
lds
pop
jae
out
bnd
stos
int3
les
xadd
scas
sbb
aas
pushf
subl
push
sbb
cwtl
stos
mov
mov
push
popf
and
and
fidivrs
add
mov
lahf
std
je
and
and
inc
pushf
into
inc
out
sahf
mov
lret
ja
inc
sub
int
xchg
jecxz
repz
sbb
xor
test
pop
mov
xchg
adc
ss
hlt
testb
and
sub
ds
lods
pushf
stc
pop
inc
jmp
xchg
sbb
cmp
stos
icebp
push
lcall
fmull
ret
and
fcoms
in
and
mov
push
bound
mov
add
inc
push
cs
push
fdivrs
dec
addb
das
xor
les
out
adcb
xchg
out
lea
int
lret
sbb
shrl
add
pop
outsl
add
sub
insl
sub
fwait
rcl
sahf
xchg
mov
push
push
cltd
cmp
lock
movsb
push
push
shll
repz
imul
je
or
mov
jg
adc
inc
xor
sub
fwait
sbbb
inc
idivl
fsubl
mov
pop
ret
xor
jne
in
push
ja
fisttpl
lods
push
les
push
fiaddl
sbb
xor
es
xor
cs
adc
hlt
daa
lock
xchg
pop
test
int
ror
xchg
or
jnp
pop
pop
inc
mov
cmp
loop
cwtl
les
je
repnz
mov
pop
fiadds
and
hlt
ds
or
push
adc
ret
pop
xchg
mov
sbb
dec
xor
shr
out
lret
popa
or
pop
aas
das
jne
jnp
sub
mov
sahf
jbe
loop
cmpsb
insl
icebp
out
push
mov
xchg
mov
imul
dec
test
adc
dec
add
out
jl
sti
fdivs
pop
jecxz
das
repz
popf
jo
test
push
add
mov
neg
cmc
and
jp
fidivrs
mov
xchg
mov
mov
xchg
inc
add
fidivl
xor
dec
clc
fsts
dec
cli
test
push
adc
mov
das
add
jae
jb
imul
push
jge
cmp
inc
push
mov
jnp
sbb
mov
dec
leave
sahf
jg
xor
jae
add
mov
stos
jb
or
jns
pusha
mov
rcll
fidivrs
mov
ret
sub
filds
dec
sbb
or
lret
fiadds
xchg
stc
sbb
mov
jbe
test
clc
push
xchg
lock
outsb
loopne
or
mov
loop
std
xlat
pop
inc
inc
scas
ds
mov
inc
filds
sbb
cld
adc
nop
xor
mov
pop
outsl
and
pop
mov
sub
mov
or
lret
cltd
adc
lcall
mov
cmp
add
pop
fisttps
xor
adc
fistps
adc
sub
sub
adc
test
jne
xchg
cltd
xchg
xor
xor
pop
push
jmp
pop
loop
dec
sbb
pop
push
lods
or
divl
jg
fidivs
mov
sbb
mov
cmpl
shlb
loopne
test
fld
fiadds
sahf
std
ljmp
insl
push
ja
jb
mov
pop
cwtl
and
loopne
inc
sub
mov
mov
cmp
cmp
lahf
push
sarl
nop
fdivrl
shll
mov
lock
and
lods
lock
dec
push
dec
cmp
mov
lods
icebp
and
cmc
dec
mov
xchg
mov
dec
enter
adcl
push
stos
or
inc
jb
out
insb
ret
bound
pop
ja
imulb
inc
addl
roll
stc
adc
rolb
divb
insb
cwtl
test
fstl
decb
xchg
mov
in
jecxz
inc
cmp
aas
lea
inc
pop
jnp
repnz
push
push
push
int3
mov
stc
xor
mov
mov
ja
mov
daa
push
outsb
fsubrp
pop
cmp
dec
mov
mov
mov
mov
and
aad
lret
push
fcomps
jle
or
aaa
pushf
mov
cmpsl
jb
outsb
lods
mov
push
mov
cs
jmp
insl
sub
jmp
cltd
adc
jmp
mov
or
sti
js
inc
into
ljmp
daa
and
ljmp
icebp
scas
pusha
repnz
lahf
push
loopne
cmc
adc
mov
xchg
xor
cmp
ret
add
and
jecxz
mov
cli
mov
pop
fdivr
sub
rclb
xchg
xor
cmc
xor
data16
es
stc
or
or
dec
cmp
sub
and
or
pop
and
es
sbb
push
mov
push
pop
mov
mov
dec
mov
out
cmp
add
sbb
push
xor
cmp
in
add
dec
or
push
or
mov
int3
inc
mov
pop
sub
dec
fdivr
dec
pop
add
pusha
leave
icebp
mov
mov
or
pusha
add
aam
pushf
leave
mov
or
daa
and
notl
call
lods
filds
adc
pop
lret
cmp
or
pop
pop
pop
ret
into
mov
imul
lret
int
jnp
repnz
shrl
pushf
rcll
add
dec
pop
rorl
push
out
das
rcrb
into
add
cltd
push
add
in
adc
mov
push
test
pop
push
push
fcomps
scas
push
ficompl
and
les
js
cmp
mov
je
add
cmp
lods
pop
inc
test
shll
and
xor
or
fbstp
movsb
cmp
mov
add
jbe
adc
cmp
pop
dec
ljmp
inc
dec
ficoml
sbb
cmp
push
in
jle
bound
imul
and
mov
fidivrl
jb
jnp
and
cmp
pop
out
xchg
cli
pop
inc
aas
jmp
stos
fimull
mov
adc
mov
xchg
inc
in
adc
cld
scas
push
les
test
int
and
test
loop
cld
in
mov
enter
xchg
inc
lea
cmp
add
xchg
jge
mov
fwait
mov
int3
mov
addr16
pop
sbb
jae
fcmovne
mov
scas
inc
dec
or
xor
lods
mov
sbb
inc
scas
idivb
push
add
ss
adcl
jle
push
addr16
lea
add
xend
lahf
push
insb
add
leave
out
mov
enter
decb
jle
push
sbb
loope
fs
inc
out
cmc
jecxz
sub
or
ds
xor
push
outsb
in
fwait
sbb
mov
cmp
mov
push
mov
mov
out
sarl
sub
mov
mov
es
dec
in
movsl
stos
inc
pop
iret
repz
pop
mov
in
mov
jp
xor
ror
ffreep
push
ss
insb
cltd
jecxz
jmp
lods
jecxz
stos
fcom
fbld
pop
leave
dec
xchg
hlt
mov
scas
addr16
lahf
out
shlb
test
inc
pop
add
icebp
adcb
add
xor
mov
mov
lods
aaa
mov
dec
pop
clc
mov
push
adc
shr
mov
je
xchg
mov
push
push
or
shll
mov
pusha
jne
js
xchg
out
add
sub
pop
loop
xor
leave
and
add
cmp
iret
rcrl
adc
cmp
aad
mov
aam
xchg
and
pushf
or
ljmp
into
in
call
jbe
push
into
addl
nop
je
lcall
mov
mov
std
sub
jge
fcomps
mov
xor
jo
cmp
test
sub
push
adc
push
bound
cmp
nop
shr
mov
das
cmp
dec
out
xor
mov
xor
popa
fstpl
jno
sbb
inc
or
sbb
mov
aam
gs
imul
pop
pop
lcall
fsubr
test
mov
fstp
mov
imul
or
pop
lret
into
stos
lcall
fistpl
jp
scas
jnp
fwait
push
aas
sub
hlt
loop
stos
push
lock
insl
jne
stc
in
neg
in
lock
movsb
push
ret
shrb
cld
add
push
aad
fisubrs
pop
mov
cmp
and
adc
es
popa
clc
push
push
cmp
cmp
mov
loop
mov
sbb
stc
xor
inc
sub
shll
pop
bound
imul
int
adc
scas
dec
xchg
sbb
sbb
out
call
loopne
or
mov
add
xor
or
jg
test
rorb
sub
gs
push
pop
inc
data16
pushf
mov
mov
divb
adc
outsb
xor
sysret
loopne
gs
push
test
fnstenv
iret
rclb
mov
push
lcall
adc
or
lcall
test
lods
push
rcrl
and
mov
pop
inc
sub
mov
popf
mov
xchg
xor
add
rorl
in
jns
fildl
orl
aam
and
xor
outsb
iret
inc
mov
outsl
mov
xchg
loope
movsl
and
mov
lock
push
inc
dec
xchg
dec
cli
icebp
mov
adc
mov
fnsave
fwait
mov
pop
data16
shrb
aas
mov
pushf
xor
mov
cmpsl
fucom
popf
push
ret
test
or
adc
lods
sbb
mov
cli
push
fiaddl
imul
icebp
popl
sub
js
sbbb
inc
jnp
mov
mov
lock
imul
adc
pusha
sub
inc
and
loopne
inc
imul
inc
aas
test
jne
das
dec
shrb
cli
xchg
pop
mov
dec
mov
insl
int3
das
pop
ficompl
leave
dec
fs
cwtl
data16
adc
jp
pop
mov
mov
inc
das
cmc
or
xor
fnsave
adc
pushf
test
mov
lods
push
popf
pop
jns
adc
mov
pop
dec
sahf
insl
adc
push
clc
cmp
fists
lods
imul
outsb
xor
aam
pop
push
cltd
cld
mov
popa
rcl
lods
mov
or
dec
dec
add
jo
inc
add
pop
add
fdivs
cmp
sbb
shlb
aam
sub
and
fistl
jmp
inc
sahf
sahf
push
out
xchg
sbb
insl
mov
in
jnp
scas
das
pop
adc
xchg
rcll
cs
mov
adc
cltd
cltd
jmp
fwait
sub
xchg
lock
dec
jecxz
mov
test
dec
xchg
inc
repnz
and
nop
std
repnz
scas
jne
orl
lcall
sbb
fwait
sar
mov
insb
add
jecxz
mov
out
inc
cmp
fildll
stos
add
loope
addr16
or
out
sbb
mov
lcall
cmpsb
mov
xchg
cs
in
push
xchg
xor
inc
repz
push
aam
fdivs
cmp
mov
adc
popa
in
je
test
push
jp
pop
jl
push
sbb
decb
ret
cmc
inc
or
inc
inc
test
sbb
bound
jecxz
insb
adc
dec
mov
test
je
jno
jne
setb
inc
mov
adc
frstpm(287
push
cmpsb
lock
jle
mov
sbb
scas
pop
mov
dec
dec
inc
add
pop
loope
cmpsb
cmpsl
adc
push
imul
fildl
jge
dec
loope
pushf
enter
mov
scas
adc
push
cwtd
pop
nop
xor
or
cmpsb
jns
mov
jmp
into
add
pushf
and
ret
inc
ljmp
aas
jg
out
outsb
sub
sub
insl
js
std
test
mov
sub
mov
inc
xchg
cmc
cmp
jge
leave
dec
inc
pop
fcmovne
out
dec
dec
popl
cmp
aad
scas
fmul
and
and
inc
rorl
sbb
mov
pop
aaa
mov
std
orl
adc
xchg
push
fbld
dec
maxps
int3
mov
push
mov
cli
mov
popf
enter
icebp
ss
push
stc
aam
inc
rorl
xorb
xor
sbb
sti
xchg
cmp
fisttps
sub
cmp
and
ljmp
xchg
das
pusha
add
lods
adc
in
mov
or
in
loope
in
mov
xor
xchg
adc
scas
push
push
mov
fwait
lcall
push
arpl
outsb
call
addb
inc
scas
pop
cwtl
xor
psadbw
loopne
cwtl
push
fnstenv
or
lcall
hlt
adc
push
mov
cltd
sub
add
daa
xlat
loop
push
lods
dec
xchg
push
jp
mov
cs
mov
insl
pushf
pop
jae
or
inc
aas
daa
add
add
lret
andl
out
push
andb
scas
out
jl
xchg
dec
inc
mov
mov
gs
xchg
scas
cmpl
ss
and
loop
pop
mov
into
test
sub
mov
arpl
adc
mov
xchg
jne
out
adc
testl
pushf
xchg
orl
lret
add
add
push
gs
jl
mov
out
mov
mov
push
iret
or
mov
pop
aas
in
push
inc
jecxz
lds
push
mov
xchg
sbb
mov
ss
add
push
and
sub
es
adc
loop
popf
pop
mov
test
sub
mov
out
dec
mov
fimuls
imul
arpl
lret
xor
and
fistps
adc
jg
bswap
iret
push
daa
mov
popl
lock
xchg
nop
xchg
das
jmp
lods
cmp
inc
dec
into
xchg
push
pushf
mov
pop
cmp
inc
push
notb
loopne
dec
push
repnz
mov
xchg
add
dec
xchg
ljmp
call
jge
or
aaa
cmp
push
cmc
push
push
mov
call
jmp
insb
loope
dec
push
pushf
lcall
xchg
push
mov
mov
test
mov
ficoml
fbld
mov
push
popa
loop
mov
fwait
lahf
mov
test
pushl
adc
in
pop
cmp
call
mov
adc
push
mov
ffree
lods
or
sahf
repnz
les
pop
out
js
xchg
popa
js
fidivrl
ds
js
add
lret
and
jae
mov
inc
rol
neg
pop
mov
jae
mov
or
or
mov
btr
and
in
pusha
fbld
outsb
testb
xor
ficompl
shlb
jl
cmp
in
mov
pop
int3
cs
or
fs
add
loopne
sbb
movsl
sub
popl
cmpsl
push
scas
call
cs
push
or
sub
dec
sahf
cmc
mov
inc
insb
xchg
andl
mov
sub
xor
jl
fstpl
pop
jns
test
pop
add
aaa
adc
mov
adc
xchg
into
fdivrs
sub
fidivl
mov
movsl
sub
and
and
and
or
das
xchg
push
adc
mov
rcl
cmp
fsubrs
mov
cmpb
rol
push
mov
insb
movsb
enter
cli
testb
jbe
cmp
adc
or
mov
ret
mov
mov
push
fnstsw
sub
or
rcr
jo
int
imul
xchg
fs
sbb
xchg
inc
sub
cmp
test
jl
shr
push
in
into
dec
cmpsl
cmp
and
data16
das
fimuls
outsl
lea
repz
add
pop
sbb
xor
int3
mov
sbb
shlb
inc
lcall
sub
dec
or
in
jno
pop
andb
jbe
mov
jl
das
dec
cmpsl
loope
in
jmp
dec
dec
sub
cs
and
cmc
lods
pushf
out
aad
mov
popa
jl
jp
push
sarb
aas
imul
sbb
out
jno
jns
add
enter
xchg
shll
or
iret
fucomi
fxam
shll
int3
cmp
mov
and
filds
mov
shlb
pop
fstpt
and
jne
add
fucom
and
xor
jne
add
movsl
scas
icebp
xchg
out
jl
test
xchg
mov
int
lahf
add
push
test
les
xor
dec
in
mov
pop
adc
mov
out
movsb
pop
stos
jbe
lods
xor
insl
lret
jecxz
and
lods
enter
mov
test
adc
push
js
jecxz
cld
call
adc
adc
or
mov
dec
jecxz
xor
jns
std
jp
push
pop
cmp
mov
lea
jp
mov
call
into
fbstp
test
popa
div
dec
pop
pop
push
dec
popf
pop
mov
lret
sbb
sbb
pop
repz
pop
mov
mov
pusha
xchg
push
jo
cld
fdivrs
push
fidivs
mov
sar
sub
fidivrl
cltd
hlt
push
loope
negl
push
jmp
cmp
mov
cmp
dec
pop
cltd
inc
sahf
insl
int3
sbb
jmp
add
fsubrs
repnz
insl
js
push
stc
enter
xchg
pop
mov
mov
cmp
sbb
out
cmp
shrl
repz
mov
xor
xchg
lock
aad
xchg
dec
loope
sbb
dec
pop
cmpsl
inc
leave
test
mov
sub
mov
inc
dec
push
push
inc
mov
pusha
leave
inc
test
mov
add
je
pop
sbb
push
mov
push
add
xchg
repnz
dec
inc
out
jecxz
stc
sbb
add
insb
mov
push
mov
pop
and
mov
scas
scas
mov
in
push
das
xchg
jae
in
std
aad
adc
push
or
in
jno
add
cld
xchg
adc
fdivrs
in
movhps
sbb
pop
pop
pop
push
adcb
cmp
movsl
repz
ret
mov
dec
push
xor
ja
movsb
or
cs
out
push
adc
loopne
jle
loop
cwtl
inc
out
mov
les
ret
fwait
or
jbe
sub
xchg
jl
mov
pop
adc
xor
into
out
or
xor
jp
inc
les
stc
xchg
jmp
and
push
mov
lcall
pop
add
add
add
push
jg
call
jmp
push
fdivr
mov
stos
loop
jns
inc
loope
sbb
insb
and
ss
dec
rorl
pop
aad
sub
lock
addl
lret
inc
daa
mov
push
xchg
insl
mov
dec
xchg
sbb
fadds
adc
nop
xor
out
out
or
push
enter
xor
sbb
jmp
inc
cmpsb
aam
jp
nop
scas
or
add
stc
inc
iret
mov
inc
mov
push
adc
xlat
rolb
mov
push
pop
ret
mov
ja
jnp
in
lock
xor
pop
out
jno
cmp
cmc
ljmp
jg
push
cli
adc
in
xchg
mov
cmp
rolb
negl
cmp
sbb
das
sbb
lret
je
popf
adc
cmp
xor
mov
xchg
jg
push
adcb
or
add
xor
add
jmp
popl
loop
mov
bound
mov
shr
sbb
mov
test
lea
push
add
xchg
sahf
sarl
jmp
out
mov
enter
xchg
push
xor
fcoml
mov
lret
daa
pop
mov
and
loope
hlt
jg
nop
in
adc
dec
sbb
loope
xchg
daa
mov
xchg
pop
inc
pop
or
outsb
pop
aas
push
sub
xchg
mov
adc
push
adc
bound
aad
mov
lcall
out
int
lret
repnz
pop
jp
daa
adc
mov
xlat
fadd
int
inc
inc
dec
add
int
mov
add
pop
outsl
pop
bound
mov
sub
xchg
setnp
mov
std
hlt
jb
sbb
pop
add
stos
leave
dec
pusha
testl
outsb
cwtl
push
fs
aad
push
outsb
movsl
mov
mov
mov
inc
fwait
popf
shll
loope
ljmp
jge
sbb
add
sarl
pop
stos
mov
shl
loope
add
adc
cwtl
or
lret
aam
out
sub
push
jmp
cwtl
push
mov
bound
add
mov
inc
loope
and
jbe
lods
lret
sti
mov
call
ds
out
cwtl
dec
cmp
scas
mov
adc
jmp
icebp
aaa
lahf
push
mov
nop
shl
pushf
inc
fs
repnz
mov
fistl
xor
mov
sti
movsl
cld
dec
mov
inc
cltd
xchg
push
push
xor
sub
add
push
dec
loop
pop
out
sub
repz
jmp
out
cmp
add
bound
cmp
dec
test
aam
in
push
inc
rcrl
cmc
adc
imul
lahf
xor
movb
in
sbb
and
pop
pushf
inc
dec
fistl
aad
dec
imul
clc
hlt
pop
bound
xchg
sarb
sbb
jns
decb
adc
enter
push
fildll
inc
jo
and
fcom
lea
les
outsl
ds
jns
jecxz
shr
pushf
xor
xchg
jns
mov
inc
lret
mov
repz
or
mov
loope
mov
fisttpll
cmpsb
mov
add
rolb
in
ret
add
lods
insb
mov
test
jnp
inc
imul
es
mov
xlat
jbe
inc
adc
inc
jae
jmp
sub
sub
jle
fcom
or
add
iret
inc
cs
je
sub
inc
sbb
ja
cmp
outsb
cltd
loop
aas
or
dec
sbb
jp
ret
in
pop
lods
iret
mov
mov
push
std
out
decb
imul
sub
rcl
out
lock
or
pop
addr16
fiaddl
addr16
andl
adc
pop
push
sub
cli
or
xor
gs
push
je
sub
imul
popa
push
imul
or
ret
xor
repnz
push
fisubrl
jle
dec
adcb
insb
lods
subb
aam
jne
inc
repnz
ds
rclb
mov
inc
dec
pop
jne
mov
js
ljmp
popa
sbb
xchg
push
dec
or
scas
int
sbb
pop
cmpsl
xor
jecxz
dec
mov
cs
push
and
lods
ja
fdivs
xchg
enter
jb
or
mov
sub
xor
fidivrs
rorl
add
jo
xor
test
out
cli
in
push
pop
js
aas
push
cwtl
lea
dec
test
pop
aad
add
fldt
lahf
lcall
adc
jmp
adc
mov
jbe
mov
leave
rolb
xchg
lods
nop
insl
xor
sbb
sbb
or
stos
sahf
scas
jmp
lods
xor
loop
add
adc
jns
pusha
loop
mov
mov
into
andb
sub
cmpsl
lods
in
cmp
xchg
cwtl
pop
mov
mov
orl
mov
ds
and
lcall
jmp
testb
aaa
add
lahf
jmp
xchg
sub
into
push
loop
scas
jmp
mov
or
insb
push
lret
roll
and
xchg
jns
out
sbb
lds
mov
inc
push
clc
jg
pushf
mov
leave
in
cmp
test
mov
fwait
mov
ret
jo
push
mov
call
scas
add
bound
lods
aaa
jle
es
fs
mov
sbb
imul
movsl
loopne
jl
jmp
ss
sahf
mov
sub
sbb
dec
push
dec
out
jmp
jb
inc
pop
mov
inc
out
cmp
mov
movsb
in
into
addr16
ret
out
mov
xlat
mov
int
push
mov
push
lcall
shl
cmpl
movsb
jp
push
mov
push
add
mov
mov
incb
icebp
push
xchg
shrl
adc
xor
data16
jg
push
inc
dec
lea
sub
scas
iret
inc
push
xor
push
or
loop
lds
shl
lcall
pushf
int
sub
xchg
test
mov
int3
arpl
and
push
and
shl
stos
fsts
cmpsl
shll
mov
or
insb
enter
xor
insb
sbb
or
lret
inc
cltd
ds
cmp
pop
jg
scas
icebp
add
dec
int3
fidivrs
xor
jmp
or
lods
and
popf
aad
push
or
popf
push
jge
push
pop
dec
js
jg
fidivrs
sti
mov
fcompl
xchg
das
xchg
pop
mov
xor
in
shlb
mov
mov
insb
pop
jecxz
and
push
mov
cmp
xchg
xchg
outsl
sbb
adc
ret
das
int3
dec
hlt
xor
mov
lea
mov
dec
push
inc
sub
xchg
in
inc
push
dec
jns
xchg
jnp
inc
movsl
lods
cmp
out
popf
xchg
hlt
pop
sahf
dec
mov
orl
push
pop
cmp
cmp
cltd
mov
inc
fisttpll
idivb
push
mov
fs
dec
das
inc
jmp
movsb
gs
in
add
add
sbb
cmp
sar
dec
lahf
or
adc
fldl
jo
mov
test
arpl
hlt
leave
ss
bound
leave
cmc
cmc
cmp
aad
aas
hlt
add
int3
mov
lea
push
or
xchg
jmp
xor
push
gs
jl
test
imul
into
test
mov
fnstenv
cltd
sbb
fdivrl
adc
jbe
idivb
sbb
aas
jle
insb
in
mov
pop
mov
mov
xchg
xchg
aaa
cmp
aas
in
xchg
mov
xchg
test
adc
xor
test
out
mov
les
lret
mov
test
stos
clc
lea
inc
mov
pop
orb
lret
xchg
xor
and
inc
in
mov
mov
mov
aam
lret
pop
mov
stos
sahf
dec
out
add
adc
inc
push
dec
inc
xchg
inc
push
inc
adcl
mov
jecxz
in
loope
mov
lods
pusha
jnp
xor
dec
scas
inc
mov
sahf
sub
lcall
fidivs
lea
jb
cmp
popa
lea
push
out
inc
in
add
ret
pushf
xor
jae
inc
dec
daa
inc
add
xchg
or
and
mov
jo
stos
test
pop
out
mov
imul
dec
lea
int3
jl
or
push
add
mov
std
adc
clc
rcl
push
mov
into
cmp
xorb
enter
pop
es
sahf
scas
out
cmp
sub
mov
mov
push
scas
rorb
adc
and
xchg
test
mov
mov
pop
movsl
add
roll
mov
cs
inc
aam
into
cs
ret
jge
call
pop
pop
call
mul
and
xor
dec
sub
in
adc
add
aam
orb
pop
sbb
and
dec
fistpl
pop
call
adc
inc
dec
in
aam
xchg
rolb
das
in
imul
out
aas
push
sub
inc
arpl
mov
cli
add
imulb
dec
xchg
push
testb
movsb
shrl
cli
adc
jb
xchg
pop
cwtl
jne
bound
xor
jmp
mov
jmp
jg
inc
sarl
pop
adc
xchg
inc
inc
push
out
and
cwtl
aad
pushf
inc
imul
or
adc
jns
sbb
rol
cli
cmp
addl
push
cltd
xorb
xchg
pop
mov
push
les
and
xchg
inc
jl
push
mov
add
fcoms
cmpsb
sub
jge
xlat
popa
jae
roll
inc
cmp
cmp
pop
roll
dec
cmpsb
sbb
sbb
mov
das
add
stos
rorl
lret
mov
pop
jns
and
ret
je
push
mov
inc
aaa
mov
xor
mov
add
jb
inc
fmulp
lds
jo
movb
mov
gs
inc
enter
mov
jg
shlb
xor
or
clc
mov
cld
mov
or
add
sub
xor
jno
ds
mov
gs
mov
movsb
outsb
and
pop
call
xchg
sub
call
iret
cmpsw
popa
jg
popf
loope
inc
or
ds
loope
pushf
loop
jp
mov
sub
nop
dec
test
jne
aaa
xorl
stc
jns
cli
dec
pop
push
fldcw
push
and
fiaddl
loop
adc
subb
adc
gs
sti
and
sbbl
add
movsb
dec
cmpsb
js
sub
test
add
rcr
xchg
mov
fcmovnu
cmpsb
jge
imul
imul
push
addb
mov
test
mov
idivb
xlat
lods
aas
mov
push
gs
and
inc
jl
movsl
ret
test
inc
dec
jne
inc
mov
jae
push
mov
clc
daa
mov
ret
mov
mov
ficoms
adc
fidivrs
outsl
xor
aas
sub
inc
decl
xor
pop
and
sbb
insb
insl
ljmp
sbb
insl
xlat
lret
shrl
push
rorl
push
cld
sti
std
pop
mov
test
mov
adcb
movsl
push
sbb
dec
xchg
cmp
scas
ss
fadd
dec
push
pop
in
rclb
nop
sbb
into
insb
adc
ss
ss
test
add
pop
push
lret
pop
or
dec
or
sub
jns
and
movsl
xlat
fistps
scas
insl
fwait
movsb
shll
cmpsb
ljmp
out
in
or
mov
pop
insl
or
xchg
mov
int
cmp
cwtl
mov
push
and
push
xor
push
xchg
je
push
test
insb
data16
ss
jmp
push
pushf
out
or
jg
cwtl
dec
push
mov
add
push
arpl
adc
mov
mov
shrl
xchg
dec
in
push
jmp
pop
lahf
xor
cmc
adc
mov
inc
inc
jno
push
stos
lcall
cltd
insb
lds
inc
les
loop
adc
repnz
fidivs
sub
sub
jae
mov
repnz
mov
inc
cwtl
push
subb
mov
std
mov
mov
imul
xchg
popa
push
insl
mov
dec
mov
dec
lret
ss
in
std
jno
out
pop
push
imul
push
fwait
cld
leave
xchg
xlat
test
jb
cs
lret
push
adc
bound
lret
mov
lret
pop
ret
loopne
xchg
jecxz
les
rcll
lahf
idivb
dec
pop
jecxz
mov
push
in
sub
rcll
scas
jl
pushf
in
cmp
sbb
add
pop
add
or
mov
arpl
or
push
add
push
cmp
xchg
repnz
fnstenv
push
mov
push
dec
loope
aad
mov
arpl
add
add
loopne
sbb
ret
adc
or
mov
lcall
shll
jle
cmp
insb
inc
loop
das
mov
scas
fnstsw
lahf
pop
pop
bound
ret
cmp
stc
fwait
sub
lcall
xor
in
ret
sbb
mov
mov
mov
aad
mov
cmp
add
jne
dec
pop
cmp
xchg
pop
cs
shll
loopne
pop
pop
jle
or
fstpl
dec
inc
inc
pop
leave
jge
fsubs
shl
push
cli
xchg
loop
sub
and
call
xorb
mov
add
xchg
mov
or
lods
sbb
pop
mov
iret
mov
ljmp
test
cmp
movsl
mov
mov
int
rcll
nop
cmpsb
mov
mov
inc
aad
popf
pop
stos
mov
lret
xchg
jecxz
and
and
in
ds
xchg
mov
cld
mov
inc
mov
pop
scas
push
jecxz
out
mov
scas
cmp
pop
xlat
inc
push
mov
popl
loop
sub
lods
pop
negb
cmpsb
das
adc
scas
aas
lret
out
cmpb
push
inc
ljmp
test
pop
idivb
stc
jae
and
cmpsb
movsl
clc
jge
dec
mov
sbb
dec
nop
mov
xor
push
and
push
cmpb
xor
or
ret
push
push
cld
push
mov
mov
dec
in
andb
lock
dec
stc
call
mov
inc
push
mov
inc
push
cmp
shlb
dec
movsb
movsb
mov
xchg
sbb
cli
rorl
dec
cmp
xor
mov
ss
dec
cwtl
insl
ljmp
mov
add
pop
je
in
jo
shrl
mov
inc
jo
out
test
pop
mov
and
pop
xchg
insb
push
lcall
or
or
dec
push
mov
add
mov
xor
shrb
aas
dec
push
daa
scas
aad
mov
add
dec
sbb
and
fwait
es
imul
hlt
aam
cmpb
ja
loop
xchg
imul
xorb
popf
daa
and
jb
mov
mov
imul
mov
loope
ret
in
push
test
inc
jg
sbb
rorl
int3
push
pop
jo
cmpsl
jno
push
dec
lret
cmpsl
mov
mov
sub
iret
add
data16
dec
adc
sub
test
mov
jns
adc
xor
gs
cmp
fcmovbe
pop
xchg
xchg
cwtl
les
cmp
jo
jmp
jns
mov
sar
imul
pop
push
data16
sbb
imul
addb
iret
repnz
movsl
nop
cltd
adc
addr16
mov
bound
push
xchg
sbb
ja
sub
xchg
ss
clc
fs
inc
jp
mov
pop
cmpsl
ljmp
cmp
add
jne
lret
int3
xchg
gs
icebp
and
jl
pop
adc
mov
insl
sti
xchg
mov
in
dec
pop
icebp
dec
leave
xor
das
sbb
cld
test
or
cmp
push
sarb
bound
gs
xor
filds
cmc
ss
clc
pop
mov
lea
into
xchg
push
add
and
je
mov
aas
adc
mov
cmpsb
adc
bnd
push
cmpsb
movsl
aad
test
loopne
or
ljmp
mov
mov
pop
cltd
jo
inc
int3
cmp
mov
sub
sub
jmp
mov
adc
adc
push
cmpsl
mov
adc
hlt
int3
mov
lock
or
clc
out
bound
aaa
imul
cmpsl
sbb
popf
sbb
lock
jns
cmp
test
push
lahf
cmp
sbb
es
cmp
jmp
ret
sub
pop
cmp
mov
xlat
push
jae
popa
sub
dec
and
mov
incl
repnz
pop
test
mov
cli
sbb
mov
pusha
sub
cmp
dec
jae
repnz
cs
inc
cli
outsl
leave
jne
mov
out
mov
lea
rclb
movb
addr16
fmulp
mov
ficoml
sbb
pop
add
icebp
out
push
adc
sbb
std
and
dec
stos
repnz
mov
mov
fisttpll
inc
cmp
outsl
inc
adcl
fdivrp
lods
cmp
in
xchg
fadds
push
stos
cmpsw
push
popf
mov
dec
loop
inc
xor
push
gs
cmpsl
xchg
mov
or
add
aad
jecxz
mov
mov
jp
mov
movsb
add
xchg
jl
push
mov
mov
add
dec
inc
jge
mull
mov
jp
negb
ret
xorb
orl
add
dec
jmp
sub
incl
inc
push
mov
dec
adc
or
aam
xchg
ficoml
jnp
test
inc
or
lods
cmc
push
lret
sbb
xchg
mov
add
stos
aas
fyl2xp1
stc
add
mov
test
dec
es
in
lock
cmp
fwait
jne
test
pop
rolb
jo
out
push
notl
push
jns
cmp
mov
cmpsb
je
lret
jo
and
rorb
push
scas
dec
xor
mov
mov
push
cmp
dec
cmp
mov
addr16
cld
std
lea
push
adc
lods
add
mov
xor
jnp
xchg
or
push
mov
addr16
jmp
bound
js
mov
adc
sahf
dec
dec
aam
dec
leave
mov
xor
jg
lahf
mov
fcoms
fistps
icebp
xchg
mov
add
into
pop
stos
sbb
inc
mov
test
fcoml
fisttps
lret
movsb
push
sub
sub
adc
mov
sub
xor
cmp
xor
nop
incl
testb
push
jg
push
aad
ret
add
cmp
jnp
stos
push
loopne
dec
mov
push
inc
stc
insb
test
add
aad
push
lahf
out
int
jb
mov
cmc
push
sbb
dec
lds
dec
mov
dec
and
fnstenv
pop
sbb
pop
or
lahf
scas
std
sarb
into
mov
cmpsb
dec
cs
mov
jnp
add
cmpsb
call
das
adc
mov
or
push
movsl
out
jns
add
cmc
pop
int3
daa
jecxz
push
clc
neg
mov
jecxz
ja
pop
test
mov
fidivrs
jae
adc
addr16
mov
push
cltd
addr16
test
mov
iret
mov
cmp
cld
in
cmp
adc
mov
jl
pop
or
add
popf
adcl
imul
out
jne
mov
mov
push
xchg
popa
mov
and
cld
clc
mov
cmp
inc
pop
add
xor
lods
add
les
stc
pushf
jmp
out
test
mov
and
fildl
jo
pop
inc
jg
pushf
pop
cwtl
fsubrl
fistl
inc
push
shll
leave
stc
fidivs
repz
test
jecxz
mov
cmp
sub
aas
sbb
pop
nop
stos
mov
ret
pminsw
rorl
dec
into
rcll
xchg
mov
lret
repz
jb
cltd
mov
js
pushf
int3
dec
cwtl
inc
jecxz
mov
jp
cmp
repz
iret
in
fisubrs
dec
mov
cltd
outsl
hlt
gs
shll
jge
lds
in
outsb
stc
dec
lds
pusha
ficoms
or
push
xor
mov
and
mov
jl
mov
push
in
pop
jae
or
or
pop
xchg
or
and
adc
dec
fidivrl
fwait
push
insb
push
or
lods
cmp
and
les
fiaddl
shl
addl
lods
decl
test
dec
mov
xor
dec
pop
inc
loopew
sub
jae
push
push
outsb
and
sub
sbb
sub
lcall
pop
das
dec
dec
fldt
loop
hlt
aad
jg
test
in
cmp
divl
outsl
loopne
adc
in
mov
sbb
movsl
lret
ret
xchg
in
nop
icebp
or
addr16
mov
aaa
popf
mov
cmp
fisubrl
jle
adc
and
pop
dec
out
rclb
divb
fidivl
lret
mov
imul
lea
insb
sti
sub
imul
mov
shll
out
mov
mov
push
xor
js
test
repz
adc
mov
cmp
mov
sahf
dec
call
mov
push
mov
pop
add
jecxz
in
ljmp
mov
adc
mov
pop
add
movsb
test
push
lods
fstpl
fwait
inc
pop
mov
shrb
hlt
sbb
sbb
xchg
iret
loop
jo
imul
lea
std
mov
lds
dec
ret
ret
aas
add
out
loop
divl
pop
cwtl
in
ret
xchg
jns
arpl
inc
lret
push
or
inc
dec
lock
add
scas
enter
gs
push
insb
jbe
stos
sbb
jle
cmpsl
cld
add
call
enter
mov
fs
aam
or
in
int3
pop
je
mov
scas
dec
jbe
ds
aaa
add
push
inc
insb
andl
add
fisubl
dec
jl
mov
insb
jno
mov
lds
push
or
cmp
leave
adc
dec
mov
mov
inc
mov
cmc
jg
xor
add
popf
dec
ss
mov
mov
sub
mov
pop
inc
leave
jmp
add
sub
repz
mov
cmc
ret
inc
sub
lds
imul
or
inc
pop
xor
nop
dec
or
pop
pop
dec
or
push
daa
pop
cmpsl
dec
push
xor
out
xchg
add
adc
lret
int3
or
adc
cli
sbb
dec
adc
adc
jno,pn
xchg
inc
arpl
filds
sbbl
or
ds
sub
push
cmp
inc
mov
ret
sbb
pop
dec
sub
mov
dec
bound
mov
cmp
and
cltd
xor
stc
xor
xchg
cwtl
cwtl
pop
push
cli
iret
sbb
sbb
repnz
pop
lret
lret
push
bound
pop
push
dec
ret
xor
sarl
shl
push
inc
sub
pop
adc
hlt
pusha
push
sbb
les
mov
sbb
jg
add
cmp
ds
pop
cmp
daa
and
jp
lcall
test
outsb
test
xchg
aam
sub
jne
in
cli
inc
fstp
mov
xor
push
hlt
jge
cmp
out
xchg
fists
lret
loope
fs
test
nop
aam
fadd
roll
dec
xchg
test
xlat
in
adc
jae
inc
jecxz
outsl
pop
out
pop
pusha
jp
aam
fs
rcll
and
cmc
pop
push
fstl
cmp
sub
cld
dec
cld
jle
aad
stc
clc
mulb
xor
aad
in
fstl
add
mov
test
pop
fimull
mov
sub
pop
daa
jp
jg
dec
stos
sahf
icebp
pop
rorb
fmuls
and
or
pop
mov
pop
andb
sbbb
insb
jne
push
fdivs
lds
dec
sahf
fdivrs
aas
popa
cwtl
das
ja
inc
and
aaa
jbe,pt
cmp
sbb
fbld
arpl
incb
fs
and
add
mov
lds
fadd
fs
outsl
sbb
jmp
jle
dec
punpckhwd
ds
mov
fldl
xor
cmp
mov
ret
shlb
movsl
cmp
pushf
add
dec
subb
xor
adc
mov
es
jnp
divb
iret
jl
mov
cmc
xchg
mov
pop
rorb
dec
mov
movsl
inc
mov
xchg
lods
mov
jbe
xchg
mov
pop
mov
cmp
or
nop
loope
mov
mov
cwtl
push
inc
imul
push
dec
lods
ret
jbe
sbb
lret
pop
cmp
adc
mov
mov
jmp
push
xchg
ljmp
adc
xchg
lea
cli
data16
mov
cltd
mov
aas
add
andb
xchg
or
mov
iret
push
ficomps
pop
xor
adc
clc
cmp
sar
les
cmp
dec
jno
imul
enter
and
gs
push
fidivs
popf
inc
das
add
dec
inc
mov
ja
arpl
pop
cli
bsf
mov
sbb
mov
or
mov
sbb
ds
insl
insl
les
xchg
subl
add
cmp
enter
aad
mov
inc
cmp
jae
or
mov
cltd
test
cmp
and
sbb
jo
inc
xchg
mov
ljmp
sub
or
ljmp
movsb
das
jae
push
out
mov
fldenv
inc
fimuls
daa
pop
ss
sbb
cmp
jmp
push
push
adc
lods
frstor
sub
sahf
clc
cmpsl
jns
adc
std
enter
lods
test
push
mov
push
mov
sub
adc
insl
hlt
aas
and
dec
outsl
xchg
cmpsb
sbbl
scas
lock
mov
rorb
sarl
xor
inc
push
push
scas
add
cs
int3
lods
pop
loope
call
or
or
mov
out
or
add
push
xchg
aaa
ret
sub
mov
mov
lods
lahf
mov
inc
and
sub
sahf
push
xor
ret
and
xor
cmc
fstl
jb
sahf
xchg
lods
and
adc
cmp
movsl
sti
sub
ss
add
mov
sub
push
cmp
shll
std
std
lea
ret
aad
test
cmpsb
jle
sub
fwait
mov
shrb
arpl
add
inc
mov
into
lret
cmp
outsb
nop
mov
pop
pushl
and
loope
pcmpgtd
xor
jle
cli
cmp
mov
xchg
arpl
popa
ljmp
out
jmp
int3
call
xor
jnp
outsb
and
inc
dec
jmp
pop
movsb
hlt
push
inc
out
push
pop
jl
pop
fildll
cmp
lea
cli
pop
sbb
jl
out
insl
mov
inc
leave
lret
sbb
test
mov
int3
jmp
das
mov
add
std
or
mov
repz
fadds
inc
dec
inc
cmp
mov
and
adc
jo
lret
jl
negl
movsl
cmc
xchg
icebp
pop
negl
push
fcmovb
pop
sbbl
mov
aad
pushf
outsl
mov
lret
in
movsl
add
ljmp
pop
imul
mov
mov
mov
sub
sti
adc
jb
inc
sti
cmp
in
mov
dec
xchg
cld
or
dec
push
xchg
mov
xchg
or
sub
dec
sbb
cs
xchg
jle
mov
push
lock
add
out
lret
cmp
add
mov
lcall
dec
jae
dec
out
fcomip
push
push
push
jbe
sbb
or
dec
jno
pop
push
sbb
push
mov
mov
enter
mov
aam
fwait
add
inc
fidivs
daa
pop
popf
sub
ja
dec
jne
movsl
add
imul
push
aam
loope
jecxz
inc
mov
lock
js
push
or
xorb
adc
int
and
sub
dec
lods
repnz
xor
in
test
sbb
data16
adc
addr16
mov
rcrb
add
mov
push
mov
pusha
rorb
push
mov
sbbb
pop
mov
adcl
retw
push
push
inc
sti
pop
pop
jp
mov
xchg
scas
jae
or
jl
rdpmc
adcl
jne
pop
mov
clc
jb
ljmp
insl
addb
mov
clc
dec
stc
lods
les
shlb
sbb
aas
pop
inc
lret
cwtl
daa
mov
aaa
or
xor
pushf
je
stos
pop
daa
daa
adc
idivb
test
scas
aas
out
jp
in
lods
sub
jno
mov
rolb
icebp
dec
xlat
repnz
and
adc
out
xchg
xor
negl
lds
into
add
xlat
out
jb
mov
dec
lcall
mov
iret
lret
mov
lock
enter
mov
pop
inc
inc
imul
inc
into
pop
pop
xorb
jbe
cmp
pushf
xor
aad
lret
xlat
cmp
pop
fnstcw
aam
dec
movsb
or
xchg
xor
xchg
outsl
lea
push
into
or
xchg
pusha
push
fnstsw
test
inc
lfs
mov
sbb
lea
ja
push
dec
outsl
cmc
mov
incb
out
and
stc
fdivr
daa
sub
and
dec
adc
into
push
and
jge
outsl
mov
sub
add
sub
testl
push
and
mov
fcoms
mov
and
sub
pop
sub
sub
cmc
cld
mov
mov
xor
popa
xor
push
sub
xor
push
xor
jnp
push
xor
imull
sub
push
outsl
rol
cld
and
or
cwtl
mov
loop
sbb
mov
and
push
arpl
mov
outsb
cmpsl
dec
cmp
movsl
and
mov
pop
and
mov
adc
ljmp
dec
lods
cmpsb
jo
std
int3
addr16
xor
xorl
outsb
mov
xor
loopne
sbb
and
fs
or
jno
fs
es
ljmp
test
xor
fiadds
pop
movsl
mov
xchg
jge
and
mov
cmp
jle
pop
mov
or
fsubr
mov
fstpl
fsubp
subl
mov
push
pop
filds
xor
cmp
hlt
pop
shl
repnz
outsl
les
adc
dec
fwait
lret
notb
out
add
add
icebp
xchg
idivb
loopne
in
ret
scas
pop
lret
clc
xchg
mov
ret
rolb
btsl
xorb
or
test
dec
xor
stos
jecxz
push
rolb
lods
sbb
mov
mov
and
push
sbb
rcll
dec
insl
cmpsl
iret
test
dec
test
ds
les
mov
je
adcl
jae
sub
xchg
xchg
enter
pop
adc
shrd
lgs
cs
mov
dec
aaa
push
sub
add
push
es
lock
push
mov
inc
adc
mov
mov
mov
fcoml
ljmp
push
pop
clc
inc
push
xchg
dec
mov
adc
push
mov
mov
mov
shl
imul
rcll
pop
cli
movl
or
cmp
leave
cli
rclb
pop
jge
std
inc
inc
push
cmp
negl
outsb
xor
push
stc
stos
ss
jb
icebp
xchg
lock
mov
mov
cwtl
cmp
sbb
pop
mov
insl
gs
dec
cli
add
mov
sti
push
insl
push
negl
cmp
mov
adc
call
mov
mov
cmpsl
jp
mov
jb
fistpl
push
ja
stos
cmpb
and
cmpsl
lret
and
hlt
dec
out
stos
xchg
adc
stos
cs
jb
fst
xchg
jno
pop
jnp
adc
dec
dec
hlt
mov
pop
sub
int3
lahf
inc
test
ss
aad
popa
rcll
inc
jecxz
cmc
ss
ss
sarb
xor
push
repnz
jns
sbb
dec
idivb
cmpsl
and
ja
mov
cmp
jb
addr16
pop
add
fs
rorb
daa
sti
outsb
push
out
ss
push
adc
ss
push
cmc
ret
and
cmp
xchg
push
add
pop
testl
cmpsb
shll
mov
adc
or
shlb
sti
adc
mov
or
xlat
push
xor
jmp
cld
pop
test
imul
jbe
lcall
push
in
mov
push
pop
out
inc
pop
inc
aaa
add
push
cmp
mov
push
sbb
ret
mov
shlb
pushf
in
cmp
cmp
aaa
into
decl
dec
lea
rorl
xchg
out
andl
push
mov
add
adc
cmp
sub
mov
jl
int3
add
pop
in
push
adc
push
aas
mov
rcll
cld
inc
rclb
push
pop
scas
sbb
outsb
rolb
push
std
hlt
pop
in
lods
sub
out
testb
stos
push
orb
call
aad
push
das
cltd
cmp
fsubrs
mov
shll
or
mov
lods
adc
in
repnz
mov
fimull
js
pop
mov
push
inc
rorl
call
outsl
xor
lea
int3
xor
bound
pop
aas
xor
stos
jae
mov
insb
xor
cmp
out
jp
push
in
sub
or
xor
xor
js
lahf
xchg
lods
outsb
cmp
dec
xchg
paddsb
mov
jbe
jle
lods
pop
dec
jmp
xchg
ds
cltd
pop
mov
scas
push
sub
adc
cmp
jg
shrb
js
mov
test
dec
mov
movsb
mov
in
add
andl
loopne
int3
clc
pop
imulb
sar
xchg
mov
push
and
cmp
xor
xor
lret
idivl
sti
mov
push
enter
shlb
push
mov
pop
jmp
pop
roll
scas
adc
out
scas
shl
out
add
push
popf
sub
in
pop
shl
sbb
pop
dec
xchg
cltd
mov
hlt
and
and
inc
pop
mov
inc
lock
dec
inc
nop
popa
loope
dec
jecxz
or
pop
mov
jne
cmp
sbb
out
xchg
lds
mov
mov
dec
loope
cmp
adc
aaa
daa
xor
in
sahf
adc
and
mov
aam
shl
jbe
aaa
or
into
pop
mov
cmp
pop
or
enterw
jecxz
leave
out
jo
mov
mov
das
lcall
lret
jl
xor
mov
inc
push
mov
cltd
cmpsb
mov
add
mov
sarb
jecxz
mov
jg
adc
ret
fisubrs
pop
or
and
inc
pop
stos
sbb
cmp
aas
cmpsb
lret
fistpll
xchg
std
sub
repnz
shll
push
fldt
xchg
cmp
call
movsl
aad
cs
fiaddl
lods
dec
fiaddl
cmp
imul
xchg
adc
movsb
push
shrb
push
lods
les
and
xchg
stc
jmp
sub
push
mov
sbb
shll
sbb
ret
out
fsubl
and
fnstcw
jp
inc
addb
pop
inc
int3
cmpl
mov
enter
lret
dec
in
movsl
jge
inc
icebp
jmp
jne
test
jbe
push
sbb
sub
lds
lcall
hlt
add
movsb
adc
pusha
sbb
cltd
sub
addl
or
sbb
loop
xor
cli
rcll
cmp
push
arpl
fdivrs
jge
imul
xor
add
into
fsubl
movb
ret
jne
or
lret
jnp
sbb
mov
into
add
mov
jl
shll
fstpl
push
mov
bound
pmaxub
xchg
inc
cmc
xchg
popf
enter
sub
push
pop
sub
fmulp
jg
sbb
fmul
mov
loope
xchg
sbb
mov
or
sub
inc
pushf
mov
insb
adc
xchg
sub
ljmp
mov
add
daa
adcb
fisubrl
xor
xchg
lds
aad
lds
pop
mov
lcall
out
fwait
sbb
cmp
scas
lods
inc
stos
ss
mov
cltd
enter
nop
nop
ljmp
rol
jmp
fwait
es
jns
ficoml
pop
mov
addr16
test
test
jnp
push
dec
pop
fildl
or
adc
in
add
or
addr16
gs
sub
fdivrp
xchg
xchg
ljmp
mov
dec
add
mov
leave
inc
cmpsb
call
mov
aas
xor
push
pop
fwait
adc
fdivp
pop
pop
repnz
push
sbb
aam
mov
jp
add
fsubl
dec
mov
push
mov
add
jge
cli
adc
push
scas
loope
ljmp
fsubrp
mov
sbb
xor
dec
mov
pusha
cld
xchg
imul
add
cld
sti
insl
pop
add
mov
test
jl
ja
sahf
inc
leave
addr16
lods
xchg
andl
iret
and
push
mov
cmp
xchg
mul
loopne
jg
inc
movsl
mov
and
jmp
push
cmp
mov
mov
pushf
push
cwtl
xor
push
cs
mov
inc
repnz
pop
mov
add
mov
adc
int
ljmp
add
fs
xchg
fildl
and
xchg
add
scas
add
dec
jns
jns
pusha
ljmp
das
int
sbb
xor
lahf
ja
hlt
es
pop
mov
inc
loope
xchg
pop
mov
cwtl
cmp
dec
iret
bound
cld
aaa
pop
into
inc
in
and
ds
out
pop
sub
shrl
leave
insb
std
or
jge
mov
fwait
je
shrl
insb
js
or
cwtl
in
adc
cli
pop
inc
clc
frstor
push
dec
shrb
daa
add
sub
cmp
push
fwait
xor
push
sub
std
sarb
cmp
dec
shr
jb
push
mov
stos
jge
in
and
mov
lods
inc
mov
fisubl
lds
out
loop
pop
shll
mov
xchg
mov
push
hlt
stos
jnp
mov
xor
add
fstl
outsl
mov
dec
fdivrl
test
jmp
out
je,pn
jbe
orb
or
xchg
jge
mov
aad
push
adc
and
xchg
add
fnstsw
sbb
and
xor
dec
and
stos
div
pop
mov
pop
addr16
insl
pusha
sub
mov
or
pop
dec
jno
stc
movsl
inc
dec
mov
add
pop
lahf
out
roll
mov
sbb
push
sub
xchg
inc
adc
xorb
lcall
and
push
fimuls
leave
push
and
dec
pusha
dec
push
adc
inc
fldl
mov
int3
in
add
enter
jae
sub
adc
movsl
es
mov
and
in
lds
push
loope
jg
dec
sbb
insl
stos
lahf
decl
xchg
jl
cmp
dec
sub
hlt
popa
adc
fsubrs
xorl
or
cli
sbb
rcll
hlt
adc
mov
inc
inc
shll
sbb
movsb
mov
dec
and
xor
sbb
dec
cmp
mov
mov
cmpsb
sub
mov
orb
sbb
mov
inc
fstpl
ret
fiaddl
jne
jno
jg
mov
sbb
fstl
js
xchg
outsl
mov
dec
dec
xchg
rcrl
cmc
scas
mov
loopew
cmpl
cmc
push
inc
adc
out
into
inc
cli
gs
shll
and
loop
ja
pop
add
mov
xchg
dec
jecxz
pop
loop
pmulhuw
aaa
insl
enter
test
and
into
cmc
imul
jno
xchg
je
aas
dec
xor
pop
mov
jmp
unpcklps
sub
clc
les
xchg
jp
jo
ficoms
xchg
testb
mov
repz
jo
test
xchg
test
cld
mov
mov
mov
out
mov
and
out
int
dec
test
rcll
dec
in
mov
stc
cs
sbbb
cli
movsl
sarl
cmp
mov
adc
cmp
leave
mov
or
sub
mov
out
pop
lods
ja
les
in
jecxz
fadds
aas
in
cmp
jecxz
adc
cmc
in
lock
out
jl
xor
fiaddl
test
or
sahf
fcmovb
jle
mov
mov
pop
mov
mov
popf
out
pop
add
sbb
mov
nop
pusha
xlat
and
inc
mov
add
adc
jnp
loope
imul
push
mov
push
in
xor
daa
dec
daa
in
pop
or
xor
xchg
arpl
inc
adc
mov
jno
ss
dec
fsubrs
and
sbb
jmp
mov
ret
scas
pop
sub
test
out
pop
mov
int
jge
and
dec
aad
jno
or
mov
and
outsl
mov
idivb
push
xchg
pop
es
jno
std
jns
daa
add
mov
bound
mov
mov
and
imul
cwtl
fnstenv
ja
sub
test
mov
adc
pop
xor
fistpll
cmp
sbb
pop
jne
insl
mov
jo
push
add
in
out
push
jnp
jmp
in
push
int3
test
xchg
jl
cmp
lret
mov
jg
mov
lret
popf
pop
adc
fs
movl
call
jmp
shrb
push
jno
add
jl
cmp
add
mov
stos
xchg
and
repnz
jge
pop
jo
lods
out
cmpsl
push
push
test
adc
in
and
orl
mov
in
das
fistps
aad
fisubs
lret
pop
jl
out
xlat
or
inc
sti
cmp
jnp
test
add
outsb
rcrb
dec
gs
fwait
adc
scas
in
fdivs
cmpsl
ficompl
sbb
add
adc
scas
mov
jl
sub
sbb
xor
jmp
fsts
add
jmp
jb
cmp
pushf
repnz
push
lret
sbb
jp
fiadds
aas
pop
lds
dec
roll
dec
and
cltd
addr16
andl
sub
pop
shlb
addr16
nop
outsl
pusha
xchg
mov
sbb
xchg
lcall
pusha
sbb
test
fnstsw
ljmp
adc
pushf
test
std
cmpsl
subl
dec
jmp
jg
and
sub
insb
lock
mov
cld
movsb
mov
add
sbb
or
sub
cs
jle
cmp
stos
stc
test
lret
cld
push
and
sub
dec
pop
sbb
movsl
sub
sbb
jle
pop
cld
and
push
inc
mov
push
pextrw
insb
add
mov
loopne
repnz
mov
sub
aad
add
fwait
pusha
lock
bnd
test
pop
xchg
pop
mov
mov
sahf
je
pop
gs
add
aam
mov
pushf
andl
pop
add
movsb
inc
sub
or
adc
stc
loope
mov
push
pop
add
inc
cmp
jle
adc
adc
dec
mov
leave
scas
lds
xor
cmp
repnz
imul
cli
rolb
sbb
cmc
movsb
mov
xchg
pusha
sbb
add
cli
pop
xchg
into
mov
gs
or
inc
mov
jb
fcmovnbe
fidivrs
pop
test
mov
add
ret
xchg
stos
push
mov
xchg
mov
repnz
je
jb
inc
jae
cmp
inc
inc
pop
mov
enter
and
loope
dec
ja
cmp
in
lods
rcrb
dec
aad
mov
push
incl
pop
cltd
dec
add
push
outsl
jb
lret
adcl
dec
cmp
xor
push
lods
outsb
mov
push
dec
call
xchg
cmp
fisttpl
shll
popa
dec
and
pop
xchg
in
das
lock
shr
arpl
fcomps
subl
pop
or
lods
add
aad
and
pop
enter
xor
jns
arpl
insb
lret
xor
aaa
push
stos
pop
lods
push
lods
clc
fstpt
cmp
jae
pop
lcall
xor
push
cmpsl
loope
sbb
and
mov
loopne
cmpb
das
and
int
pop
std
pop
fisubl
mov
cwtl
in
pop
and
or
loopne
mov
daa
mov
push
loope
pop
inc
xchg
push
aam
jnp
pop
mov
in
adc
cmpl
push
or
push
aam
pop
out
loop
testl
xchg
fidivrs
nop
mov
mov
pop
sub
xor
test
pop
pop
or
out
mov
ja
mov
cmp
jge
lock
or
aaa
scas
push
mov
pop
xlat
repz
dec
xchg
mov
jle
inc
jg
and
fs
or
push
mov
into
call
rclb
call
mov
rorl
push
jmp
stc
mov
scas
sbb
adc
xor
mov
pop
jno
push
and
mov
push
jne
inc
ja
xor
out
les
imul
imul
xchg
andl
add
out
sub
icebp
mov
xchg
mov
cmp
outsl
lods
jno
mov
test
clc
lock
mov
js
int3
xchg
addr16
orb
push
push
xchg
jns
popa
add
popa
sbb
faddl
out
jmp
push
sbb
or
or
sbb
xchg
fidivs
jbe
mov
or
in
add
dec
or
lods
out
mov
add
je
jno
xor
jmp
adc
imul
dec
mov
push
lds
mov
lock
pop
aad
xchg
out
cwtl
movsl
dec
sub
mov
stc
popa
fbld
jg
and
push
outsb
clc
dec
xchg
mov
and
cltd
cmp
xlat
jbe
cld
add
dec
add
int
and
or
adc
aaa
sti
insl
xchg
leave
add
pop
cmp
hlt
jg
mov
mov
clc
xor
push
sbb
stos
xchg
stos
jl
push
lcall
cmc
or
lahf
jb
push
jecxz
jp
mov
push
in
sahf
fidivl
add
pop
je
jmp
xchg
enter
mov
mov
pop
sbb
sti
or
out
sbb
push
pushf
test
lret
add
test
jne
out
in
pop
mov
pop
mov
xchg
push
stc
hlt
in
push
cmp
aaa
mov
inc
aaa
mov
rcrl
add
add
cmp
cmpsl
xor
xchg
mull
cmp
jns
xchg
repz
push
cltd
sub
xor
cmp
inc
push
imul
mov
xchg
js
hlt
lea
js
lock
sbb
cvtpi2ps
jmp
cmp
es
sub
mov
adc
daa
daa
mov
lods
pop
cmp
push
std
es
jecxz
jmp
pushf
adc
stos
repnz
out
pop
dec
sbb
cltd
mov
push
aam
xor
and
fcom
bound
lea
add
pop
push
mov
jmp
out
repz
mov
test
dec
jbe
adc
pop
add
xchg
mov
rcll
ds
cmpsl
jb
mov
mov
jbe
testl
or
call
in
fcmovne
sub
rcl
repnz
pop
scas
into
loope
leave
in
inc
lock
mov
sarl
xchg
ljmp
shlb
push
xlat
mov
jmp
mov
jle
repnz
fwait
sub
jl
push
cld
in
or
pop
jno
pushf
sarl
sub
int
push
cmp
mov
xchg
dec
insl
mov
mov
adc
or
pop
movsl
cs
imul
mov
push
in
mov
xchg
jmp
mov
mov
add
test
daa
dec
jo
roll
inc
outsl
pop
jb
pop
dec
test
jnp
jl
xor
inc
or
leave
inc
and
xor
mov
adc
or
loopne
fwait
lret
test
push
aas
pop
push
push
addr16
ret
push
ret
cmp
jecxz
sub
jmp
cmp
lcall
mov
sahf
mov
push
jbe
fs
push
pop
mov
xor
test
pop
push
sub
adc
mov
lock
cmp
add
pop
and
cmp
je
lods
mov
mov
jge
ja
les
sbb
adc
mov
mov
aad
and
jo
outsl
pop
cmpsb
out
mov
xlat
cli
out
mov
ds
dec
cmp
sub
fwait
lret
add
clc
sbbl
xchg
hlt
mov
pop
and
int3
andl
fdivl
loop
popa
push
xor
lods
test
stos
push
dec
test
ljmp
and
insl
jne
andb
decb
cmp
das
bound
dec
xor
adc
outsl
out
push
ss
fidivs
mov
adc
loope
mov
xchg
aam
aad
cmp
push
push
push
outsl
ljmp
fidivrl
and
repnz
add
and
push
fldenv
aas
push
shrb
push
in
dec
cltd
mov
adc
testb
testl
adc
sub
xlat
mov
jno
imul
pop
sbb
pusha
sub
or
xorb
xor
fldpi
push
jns
push
aaa
pop
mov
stos
jns
inc
pushf
int
es
push
jecxz
std
lods
addl
mov
push
aad
push
jl
inc
mov
mov
sarl
jbe
ljmp
and
mov
push
cltd
adc
push
mov
inc
bswap
mov
cmpsb
xchg
movsb
lods
push
adc
fs
sbb
and
aas
mov
jp
jnp
cmpsl
dec
or
arpl
adc
int3
mov
mov
and
sarb
and
xlat
xchg
es
nop
dec
push
mov
dec
test
mov
jns
cmp
pop
mov
xchg
scas
aaa
inc
movb
pop
sbb
pop
jle
addr16
xor
dec
pop
outsb
js
cmp
jmp
in
mov
je
sbb
mov
mov
jo
jp
movsl
mov
mov
fsubs
cmp
lea
mov
push
push
xchg
lds
xchg
in
shrb
cld
pushl
xor
ret
cld
mov
push
cmp
dec
pop
cmp
mov
loope
add
pop
mov
sbb
bound
rclb
pop
test
inc
idivl
and
es
fidivrl
daa
ljmp
mov
xchg
test
inc
push
test
stos
jnp
call
and
add
push
cld
mov
dec
xchg
xor
in
addr16
cmp
sbb
outsb
jecxz
addr16
adc
pop
dec
shr
repnz
iret
pop
xor
dec
pushf
fildl
adc
jns
stos
lds
rcrw
mov
mov
orb
xor
in
mov
jmp
push
imulb
mov
dec
jmp
in
dec
popa
inc
or
ss
std
pushf
ljmp
fwait
sbb
cmp
mov
jae
xchg
or
inc
in
jae
or
movsb
xlat
in
sarl
pop
ficomps
cld
push
lcall
fs
push
cmc
cmp
cmp
aaa
jmp
outsl
xchg
push
jae
add
bound
xchg
ret
nop
pop
popf
lret
cli
xor
and
loopne
in
sbb
test
xchg
icebp
push
movsl
out
xchg
je
test
push
cmc
pop
pop
mov
test
sbb
rcrb
add
mov
and
aam
pop
sbb
dec
bound
cmpsb
aaa
mov
cwtl
scas
add
scas
push
mov
aam
idivl
rcr
icebp
dec
insb
loopne
sbb
mulb
pop
xchg
mov
adc
out
push
mov
mov
and
je
popf
bound
je
icebp
fsubs
neg
jnp
mov
fstpt
mov
jb
repz
mov
insb
fsts
xchg
clc
stos
push
jb
sbb
mov
popa
cmp
sahf
xor
pop
jne
mov
int3
mov
inc
lods
inc
jbe
jp
xchg
je
cmp
inc
cmp
aam
adc
dec
jl
jg
cli
sbb
xchg
fnstcw
test
test
shl
sbbb
addb
popf
sbb
stos
push
push
jb
mov
mov
add
in
cwtl
cmp
dec
push
sbb
jge
jmp
mov
xchg
nop
jmp
ljmp
ss
insb
or
sub
lods
dec
mov
loopne
lret
ljmp
push
fwait
cltd
add
mov
insb
lahf
js
or
jb
ljmp
mov
in
lock
mov
lea
test
push
shlb
sbb
pop
adc
mov
ljmp
stos
cli
lahf
leave
andb
fdiv
xchg
inc
fistpll
xchg
cmp
xchg
das
mov
inc
iret
xchg
repz
sbb
ja
loopne
adc
xor
je
jg
data16
cmp
or
mov
mov
out
pop
popf
sbb
out
fsubrl
and
xchg
out
arpl
mov
dec
dec
and
push
fsub
sbb
mov
loopne
mov
lahf
xor
repz
pop
fisubs
stos
sub
out
cmc
clc
cmp
repnz
fsubs
xor
sub
jnp
adc
jae
push
fdivs
jnp
mov
ljmp
call
cwtl
outsl
outsl
mov
mov
jno
push
ja
mov
incl
xchg
gs
test
cmp
ret
push
jle
je
or
out
jo
push
aam
jb
sbb
xor
sbb
lret
sub
mov
aam
fsubs
popa
adc
lods
ljmp
push
dec
std
rcl
mov
adc
pushl
pop
jb
lods
aam
add
add
loope
pop
daa
out
cmpsb
xchg
mov
and
xchg
js
mov
mov
xor
mov
sub
or
xor
push
push
lock
pop
repnz
mov
cmp
mov
insl
stos
inc
dec
jbe
or
xchg
int
push
cmp
adc
and
mov
add
mov
cli
loope
aam
ljmp
stc
xchg
movb
xchg
iret
aad
mov
ret
push
lret
shrd
pop
movb
mov
sarl
test
cmp
rcrl
pusha
pop
ja
jb
cli
imul
fiadds
jbe
js
pop
mov
das
ss
andl
pop
push
lock
adcw
mov
pop
test
fimull
fs
mov
icebp
in
or
pop
sbb
aam
push
mov
imul
xchg
mov
cld
mov
popf
aam
cbtw
jle
cmc
mov
inc
movsb
lea
pop
inc
mov
in
fcmovbe
test
sbb
out
jp
sbb
scas
repz
cld
or
cmp
imul
insl
pushf
lods
loope
pop
xlat
div
addr16
roll
lea
pop
in
out
xchg
notl
jmp
popf
fs
ficoml
jp
sbb
scas
jmp
xor
lds
in
fbld
ret
paddb
xorl
lret
popf
pop
xor
outsb
or
xor
push
push
jmp
stos
and
ret
xchg
dec
notb
dec
and
mov
pop
mov
lret
loop
andl
popa
daa
mov
xor
fisubrs
pop
cmp
jg
fildl
inc
mov
push
lret
stos
mov
mov
push
mov
push
mov
test
lock
fiaddl
jae
cmp
fcomp
xchg
or
test
or
lret
and
push
sbb
inc
bnd
add
lods
xor
aam
dec
sbb
and
std
or
push
bound
add
fisubs
imul
lock
xor
push
aad
scas
cmc
lock
fisubrs
sbb
cs
out
je
aaa
add
push
repnz
push
pop
stc
inc
jnp
mov
movsb
gs
leave
sub
bound
test
in
push
cmp
cltd
or
push
xor
jg
and
inc
jmp
sub
adc
and
push
rorb
adc
shrb
mov
or
dec
mov
mov
scas
enter
sub
je
jno
mov
lret
cmp
add
jl
mov
xlat
jnp
shrl
xlat
mov
rcrl
mov
es
dec
or
sbb
sub
push
xchg
lahf
jbe
mov
jae
mov
jecxz
ljmp
dec
and
shrb
orb
cwtl
repz
aas
cmpsb
jne
xchg
mov
clc
add
cwtl
xor
sub
ja
shl
stc
mov
test
std
leave
ljmp
in
mov
insl
pop
fcom
je
sbb
xchg
dec
cmp
mov
jbe
repz
dec
sub
gs
sub
lahf
lods
mov
dec
xor
inc
add
lcall
inc
int
iret
sbb
inc
xchg
orl
add
adc
push
inc
loope
push
mov
dec
fdiv
add
cmp
arpl
std
pushf
and
sbb
addr16
in
mov
in
movsb
xchg
sbb
fimull
push
fld
insl
pop
nop
or
xor
ja
ror
adc
mov
pop
dec
jl
mov
jne
xchg
popf
xor
adc
jnp
in
gs
ret
fwait
sbbl
xor
mov
inc
in
ret
mov
adc
inc
sti
mov
lods
push
cmp
push
and
dec
loopne
mov
pop
or
ljmp
roll
test
inc
roll
fcoms
sbb
jmp
inc
lods
es
fadd
loope
mov
dec
fs
xor
mov
add
dec
mov
add
js
xor
mov
aas
add
icebp
dec
jne
imul
popf
cmc
dec
js
js
addr16
inc
xchg
jne
jmp
cld
mov
data16
stos
jp
stc
popf
aas
dec
rorb
adc
incb
les
sub
add
lea
shrb
dec
repz
cmp
clc
mov
mov
mov
dec
sub
fidivs
rclb
cmpsb
out
cmp
mov
mov
push
fimull
mov
repnz
ss
xchg
jg
popf
loopne
negb
push
addr16
jmp
je
add
popf
cs
movsb
testb
pop
sbb
mov
enter
cltd
mov
imul
fistl
push
scas
dec
mov
mov
imul
int3
xor
xchg
mov
xor
mov
popf
xor
lock
lea
mov
imul
push
and
xchg
stos
cmpsb
lcall
lods
xor
mov
mov
mov
and
test
cmp
xchg
jmp
rorb
shr
dec
inc
rorl
icebp
test
inc
inc
mov
cmp
mov
mov
outsl
jg
pop
jae
stos
cmc
and
ja
add
stos
or
adc
jg
rdtsc
xchg
adc
or
push
xchg
xor
cmp
jp
jl
jge
jle
inc
cltd
popa
pop
jne
cmp
add
es
push
bound
jp
daa
lret
mov
or
ja
inc
jns
pusha
pushf
std
in
popf
jmp
shll
xor
fdivs
mov
push
andl
jae
out
adc
nop
test
inc
fadd
inc
jecxz
push
inc
or
or
fisubs
mov
mov
leave
rcrl
adc
ret
dec
adc
mov
sahf
push
sub
idivl
ja
pop
popf
aam
or
jge
adc
mov
add
pop
in
mov
adc
push
dec
popw
aaa
popf
je
daa
xchg
xlat
mov
hlt
in
sbb
inc
shll
mov
sbb
cltd
mov
out
out
jbe
out
add
pop
movsl
sub
testb
xor
mov
dec
fistpll
cmp
enter
sub
dec
push
inc
mov
xchg
aad
ret
dec
push
nop
cmp
test
push
nop
inc
nop
sbb
cwtl
rclb
mov
or
shrb
in
in
xadd
aas
mov
arpl
pop
negl
xchg
fisubrs
into
cwtl
fistl
mov
add
scas
enter
aaa
repz
xor
fmuls
sbb
test
pop
jle
and
add
inc
lea
xor
test
lret
or
xchg
fstl
subl
add
inc
insb
sub
fwait
setl
push
xor
mov
xchg
push
and
ss
pop
jp
les
pop
fwait
jae
lret
scas
data16
data16
sbb
push
cmp
repnz
xor
nop
push
enter
cli
rorl
lods
mov
adc
lcall
sub
sbbb
and
cltd
sub
mov
mov
out
xchg
jge
xlat
jo
fcmovnb
mov
sbb
in
cwtl
jmp
es
stos
dec
addb
ret
push
stos
out
pop
push
jecxz
imul
inc
insb
or
dec
sub
aas
cmpsl
jo
mov
xchg
adc
xor
add
pop
mov
arpl
movsb
cmp
xor
mov
int3
jb
fildl
pop
sub
add
sarb
pop
mov
bound
loop
pop
add
xchg
and
addb
jp
in
cwtl
and
inc
repnz
fstpt
fs
call
in
cmp
or
aad
pop
aaa
inc
and
pop
cli
lock
fwait
mov
sub
dec
cmp
nop
dec
lock
je
std
cli
jle
fimull
mov
cmp
mov
pop
cmpsw
cmp
mov
shrb
pop
mov
cmp
and
cli
nop
jmp
xor
popf
jb
adc
mov
orl
or
mov
bound
mov
gs
lods
stc
push
jno
ds
pusha
test
addr16
jbe
cmpsl
xchg
cltd
cmpsb
cltd
and
xor
icebp
notb
fadds
sub
pushf
mov
mov
in
cwtl
add
pop
and
jecxz
pop
inc
mov
loop
loope
popa
into
aad
pop
mov
test
cltd
mov
sbb
fiaddl
repnz
les
stos
push
rorl
mov
xor
test
jnp
and
pop
pop
in
sbb
or
scas
ds
out
pop
mov
sbb
mov
cld
jecxz
xor
aaa
mov
dec
in
loope
outsl
imul
jne
jle
jp
sub
adc
mov
jns
sbb
imul
lock
push
xchg
jle
out
test
sbb
imul
push
jmp
daa
ss
hlt
into
xchg
or
adc
fdivs
pop
out
sub
inc
scas
push
das
adc
stos
bound
out
stc
outsl
sub
sub
ja
fsubs
ss
add
imulb
add
xchg
jno
xor
cmp
fisubl
or
mov
cmp
mov
outsb
mov
lock
jg
xor
fiaddl
sti
in
arpl
arpl
stos
dec
jne
push
mov
sti
popl
or
nop
pop
adc
das
out
andl
cmp
shr
sbb
inc
fsubrl
sbb
test
fstpt
cmp
cs
pop
std
sbb
or
out
mov
xchg
cwtl
iret
jb
rclb
and
pop
pushl
sub
stos
pop
enter
jb
and
cmp
xchg
in
mov
inc
inc
fcomps
int3
mov
sub
cmpb
sub
mov
std
mov
inc
lods
inc
ret
cmpsb
jb
stc
jne
mov
out
mov
dec
mov
mov
fisubrl
std
aas
dec
aam
test
ds
mov
and
inc
mov
xor
pop
fwait
mov
addl
push
cmp
xor
test
aas
mov
fsubs
mov
addr16
sar
fwait
ror
shlb
in
mov
popf
push
arpl
mov
adc
lret
in
lcall
mov
sarl
dec
ss
dec
enter
lods
mov
outsb
push
mov
scas
lret
sub
jmp
add
or
inc
lds
popf
mov
and
push
push
cli
lret
pop
mov
dec
push
fwait
add
dec
jmp
mov
out
lods
into
xor
mov
and
mov
mov
mov
sbb
in
and
push
xlat
movsl
add
mov
scas
repz
add
or
push
jo
pop
scas
mov
sub
push
mov
jns
mov
sub
xchg
cmp
pop
pop
sti
or
mov
inc
mov
or
int3
insl
inc
jmp
jmp
xchg
stc
ljmp
pop
sub
je
loop
mov
add
aas
cmp
loope
xchg
fidivl
cs
ss
fcoml
dec
stc
inc
xchg
in
mov
cs
shlb
fadd
repz
or
inc
scas
js
jge
addl
cwtl
loop
data16
or
cwtl
cmp
pop
jp
lea
adc
add
repnz
jmp
rcll
add
adc
out
push
test
adc
imul
insb
je
mov
push
sbb
adc
shrl
scas
or
xchg
pop
dec
dec
out
clc
jg
mov
jne
xchg
ss
inc
mov
pop
mov
push
stos
or
hlt
lahf
sub
cld
pop
xchg
shll
jecxz
enter
ss
mov
add
cmp
push
mov
pop
adcb
and
lock
dec
jl
mov
outsl
sbb
xor
dec
mov
fisubrl
jbe
fildll
jno
outsl
aaa
std
sbbl
and
inc
imul
pop
mull
je
adc
xor
sti
sbb
and
inc
das
stos
in
sub
out
outsl
inc
jecxz
push
and
push
pop
cli
pop
push
shll
add
rcrl
pop
mov
sub
es
rcrl
pop
adcl
xor
pusha
aad
push
sub
mov
popf
std
cltd
jle
and
out
sbb
inc
xchg
and
push
fmull
adc
add
sub
mov
cmpsl
shl
push
pop
or
insb
mov
test
out
in
adc
adc
sar
cmp
xor
pop
in
loopne
xchg
movsb
data16
or
dec
or
fldt
sahf
adc
xor
add
push
pop
dec
and
jg
inc
cs
or
xchg
cld
jecxz
addl
add
sbb
loopne
or
adc
add
popa
push
mov
mov
inc
loope
fsubrp
stc
sub
add
insl
push
adc
sub
cmpsb
mov
aas
sbb
aas
mov
loopne
in
cs
in
es
das
sbb
fsubrl
jle
mov
and
lock
shld
jle
add
imul
leave
outsb
dec
pop
and
mov
inc
mov
sub
test
ja
jecxz
push
loopne
je
push
adc
or
cmp
stos
fsubrs
adc
loope
add
hlt
mov
in
rcrb
movl
push
loop
jb
lds
sub
cmp
stc
in
add
scas
xchg
enter
ja
add
popf
lea
ret
jle
cmpsb
shl
std
repnz
jbe
outsl
pop
clc
fidivrs
pop
stos
jb
push
pop
pop
jo
mov
ja
insb
push
fcoms
nop
fnstsw
jl
mov
ja
sub
dec
popa
rorb
push
pop
lcall
cmp
cmp
pop
inc
lock
jns
jb
cmp
enter
nop
or
jecxz
mov
leave
sbb
pop
or
mov
popa
sub
imul
sub
add
das
jp
push
dec
add
or
fldcw
loopne
mov
lock
addl
or
cmp
cmp
rcl
pop
and
inc
fsubl
das
outsl
in
call
cmp
dec
cmp
jo
mov
je
xor
xchg
push
cld
or
aaa
adc
sti
cmpsl
es
cmpl
jl
loope
mov
jnp
orb
cmp
out
mov
push
xor
mov
loop
inc
jmp
in
add
cs
lock
mov
je
pop
cwtl
ds
push
fwait
rolb
mov
push
adcl
pop
gs
dec
adc
stos
adcl
xor
add
stos
dec
cmp
pop
sbb
inc
js
push
adc
test
inc
adc
lcall
pushf
aas
movsb
rcll
mov
movsb
sub
cwtl
cmp
fs
xor
les
inc
mov
mov
pop
push
mov
xchg
loopne
fwait
addps
xorl
test
sub
loope
push
xchg
adcl
jne
test
jmp
mov
xor
cmp
xor
movsl
mov
cmp
es
das
adcb
mov
scas
xchg
push
repnz
sbb
clc
stos
push
lds
jecxz
sub
inc
call
popa
jle
mov
push
mov
inc
lds
mov
push
add
and
push
outsl
in
mov
lret
insl
jns
stc
push
and
daa
adc
jbe
aaa
out
stos
add
iret
lcall
dec
and
scas
xor
cmp
fldt
call
cmpsl
mov
mov
inc
icebp
cmp
inc
out
mov
xchg
jb
mov
pop
scas
xchg
xchg
ficoml
stos
call
push
popa
clc
sub
dec
in
adc
mov
repz
jmp
cmp
insb
movsb
lock
divl
ds
xchg
sub
lret
sti
rcrl
cmp
mov
dec
cmp
sub
xchg
jbe
daa
stos
rcrb
xor
mov
cltd
es
fldenv
lods
mull
out
bswap
cmovnp
xchg
pop
mov
cmp
adc
and
pop
stos
pusha
shrb
imul
xor
adc
lea
out
pop
adc
fs
cld
out
leave
push
aas
sub
xchg
call
xchg
out
jne
xorl
xor
pop
dec
cmpsl
popf
push
inc
lds
xchg
ja
mov
out
mov
adc
imul
je
in
stos
push
les
mov
insl
cld
ret
scas
xchg
pop
and
enter
ss
xor
push
out
movsl
push
outsb
push
xor
mov
pop
aam
push
rcl
mov
ds
xchg
or
fdivs
push
pop
cmp
popa
andl
lahf
mov
xor
test
lock
sbb
push
mov
push
fildll
ds
mov
stos
es
and
adc
cwtl
jnp
test
js
adc
and
call
pop
ficomps
xor
add
imul
push
cld
fbld
shrl
mov
outsb
roll
or
dec
sahf
jnp
sbb
add
sbb
push
dec
push
pop
loop,pn
push
out
push
dec
pop
icebp
dec
mov
mov
inc
into
daa
adc
mov
mov
dec
cmp
imul
or
push
enter
pop
mov
jmp
mov
lret
sub
xchg
idiv
pusha
xchg
push
push
cmp
das
or
cmp
icebp
dec
mov
cmp
xor
xchg
leave
inc
jns
push
cmp
in
pop
push
in
sbb
mov
ljmp
jb
aas
stos
xchg
add
out
jne
cli
or
inc
bound
and
jno
xchg
lahf
jmp
gs
lret
divl
outsl
pop
lret
and
or
loop
mov
mov
aaa
roll
mov
inc
mov
mov
push
mov
push
test
dec
xchg
jbe
jnp
mov
imul
xchg
cltd
and
jle
inc
mov
cmpsl
inc
push
sbb
or
aaa
mov
xchg
int3
push
sbb
mov
movb
pop
icebp
and
mov
push
xchg
inc
es
mov
out
pop
gs
lds
mov
stc
subl
pop
pop
mov
inc
jns
repnz
mov
fists
std
dec
outsb
cmp
sub
or
rcr
ds
cmp
pusha
jle
test
mov
fldt
loope
jo
out
aam
psllw
pop
sub
mov
insl
cmp
fdivrs
dec
out
pop
in
pop
ret
push
pop
in
mov
jno
push
sub
xor
hlt
or
and
add
test
xchg
inc
xchg
xchg
int3
push
push
cmpsb
add
pop
leave
push
loopne
fdivs
xchg
mov
cmp
fnstcw
shrl
sbb
mov
pop
add
fsubs
adcb
mov
sub
push
adc
shll
xor
fadd
jmp
pop
out
cs
iret
dec
cmp
sbbb
scas
mov
iret
stos
les
pop
into
lods
ret
mov
hlt
pop
enter
ss
push
cmpsl
scas
jnp
pop
xchg
outsl
mov
mov
scas
inc
insl
xchg
xchg
adc
movsb
sahf
push
in
sbb
dec
test
movq
pop
insl
pop
test
adc
icebp
imul
out
es
push
xor
pop
cmp
fstpt
xchg
pop
jnp
pop
test
xchg
lea
jne
fldl
fisubrs
js
clc
sbb
roll
cmp
push
sub
jnp
test
ja
xor
push
lcall
stc
lcall
lods
push
push
shlb
fnstsw
lret
mov
cmp
orl
addb
idivb
mov
test
pop
loop
add
notl
out
inc
incb
xchg
out
and
jmp
lret
or
push
xor
cmp
lods
push
or
lahf
push
or
shlb
xor
lahf
sbb
aad
pop
cmpb
dec
cmp
lods
xor
test
adc
cld
in
iret
iret
adc
or
and
scas
daa
pushl
clc
sub
js
or
dec
cmc
push
rcrb
push
clc
xchg
sbb
sti
jae
loopne
enter
call
movsl
dec
adc
mov
push
sbb
and
adcb
popa
popa
call
je
test
and
adc
leave
and
push
pop
xor
sahf
pop
mov
xor
push
dec
fdiv
xchg
into
inc
and
out
adc
xor
adc
fiadds
push
xchg
jmp
cmp
repnz
ljmp
jno
lea
ja
dec
js
fistpll
rcl
cld
sbb
adc
scas
mov
fwait
adc
into
inc
inc
test
popf
or
and
sub
jp
xchg
addl
insb
inc
mov
rcl
loopne
sahf
in
sbb
mov
in
jae
push
sub
movsl
ss
lods
push
sbbl
inc
cmpsl
outsb
jo
insl
gs
cmpsl
mov
pop
rcrl
dec
lods
pop
push
daa
mov
lods
inc
sbb
xchg
add
ss
pusha
vpsrlq
arpl
faddl
jbe
arpl
cld
int3
xor
push
icebp
enter
clc
les
dec
mov
sahf
jno
repnz
jmp
daa
les
ljmp
jbe
testb
mov
out
fcompl
sub
add
shlb
into
push
stos
cltd
and
cmp
cmpsb
mov
enter
out
push
out
jo
push
and
ljmp
cmp
jecxz
leave
cmc
movsb
mov
push
xchg
enter
mov
sub
pushf
nop
into
xchg
adc
daa
int
jp
into
xor
sub
std
push
icebp
cmp
jo
inc
nop
mov
xor
cli
inc
es
or
dec
nop
lea
sbb
jp
inc
or
nop
mov
fstpt
call
xor
je
push
adc
mov
mov
jg
mov
sub
sar
gs
popf
jp
repz
sub
dec
push
out
lods
push
insl
ret
or
sbb
jle
loop
jo
cltd
inc
std
hlt
hlt
mov
mov
or
sahf
xor
dec
aad
push
sbb
dec
cmc
xchg
ret
call
gs
insl
push
mov
neg
mov
dec
fcoml
gs
lods
lret
dec
add
leave
daa
inc
add
adc
into
aad
mov
push
push
add
dec
adc
xchg
aad
insl
or
mov
cld
bound
xchg
rcrb
insl
pushf
rcr
vminsd
cmc
pop
add
pop
jns
fistl
test
cmc
jns
out
or
rcll
in
push
adc
pop
insb
jg
neg
and
loope
out
and
push
add
idiv
xor
into
repz
hlt
imul
loopne
les
in
daa
cs
fisttpll
push
jo
pop
and
jns
mov
insl
fiadds
or
dec
push
or
cmpsl
scas
and
ss
xchg
pop
add
xor
int
inc
mov
lods
mov
out
fwait
stos
fsubr
sub
xchg
mov
loopne
lods
pop
cmpsl
jp
adc
outsl
mov
inc
mov
cmp
cltd
mov
xlat
les
jmp
push
cli
mov
mov
xor
inc
mov
cmpsb
ds
adc
jmp
cli
shr
inc
sub
and
sbb
hlt
and
jmp
cwtl
divb
call
popf
sbb
sub
out
and
imul
bound
cmp
icebp
jmp
dec
push
xchg
mov
pop
mov
sub
mov
cmpsb
sqrtps
xchg
push
das
pop
push
in
jbe
inc
lcall
dec
call
mov
xor
cld
sub
scas
adc
pop
pop
icebp
jmp
xchg
and
inc
jg
add
ss
dec
cli
mov
les
xchg
outsb
or
xchg
sbb
fsubp
or
mov
hlt
xchg
cmp
imul
je
hlt
fstl
inc
jp
xor
leave
mov
hlt
mov
jp
cld
out
test
cmp
stc
adc
shlb
or
jbe
dec
rolb
in
jbe
sar
mov
mov
pop
in
push
lret
cmc
sahf
es
rcrb
jecxz
xor
out
mov
shrb
jno
imul
dec
and
pop
dec
adc
or
imul
xchg
pop
aaa
loopne
in
aas
xor
sub
sar
xor
xchg
repnz
repnz
jl
outsl
lods
xchg
les
inc
push
mov
mov
jno
shr
jge
in
push
adc
or
mov
push
ret
sbb
sub
adc
mov
jmp
dec
notl
mov
unpcklps
outsl
add
out
sbb
enter
std
rclb
sub
fldenv
ljmp
jae
dec
xrelease
mov
pop
push
add
icebp
xlat
pop
fdivp
mov
pop
ret
out
push
xchg
sbb
push
push
in
or
dec
xlat
dec
sub
jo
aam
cmpsb
mov
aaa
adc
fdivp
jnp
out
adc
dec
ret
adcl
jb
pusha
fiadds
jno
sub
and
pop
fdivs
mov
pop
jbe
sub
outsl
adc
sub
inc
sbb
dec
cwtl
mov
mov
add
sbb
addl
scas
xchg
pop
fidivs
adc
loopne
sub
ljmp
fmulp
aaa
push
push
pop
arpl
gs
gs
add
xor
aaa
mov
xor
daa
dec
dec
sub
repz
jge
popa
sarl
mov
shrb
dec
mov
mov
adc
lret
loop
mov
out
adc
andl
test
lret
popf
rorb
inc
fwait
pop
orb
sub
scas
cmp
stos
dec
aam
and
inc
inc
ja
mov
xchg
or
adc
mov
mov
xchg
and
pop
add
jecxz
jnp
dec
add
inc
and
cmp
xchg
xchg
pushf
dec
popf
cs
add
mov
out
xor
cmp
sbb
or
dec
jle
fimuls
aam
stos
push
inc
lea
pop
dec
pop
adc
fs
enter
xchg
repnz
pop
sub
std
push
or
jns
in
imul
shll
sub
add
pop
daa
sbbl
jp
cmp
sub
adc
hlt
jns
ss
clc
clc
test
lods
sub
or
fcoml
sub
mov
test
out
dec
popf
adc
xor
add
mov
mov
pop
cmp
lret
daa
push
xorl
xchg
nop
ja
arpl
aas
cmp
sub
repnz
jo
nop
add
fucomip
push
cmpsl
sbb
adc
lods
mov
mov
out
mov
xchg
push
cmp
dec
cli
mov
mov
jae
jb
movsl
ja
push
pop
and
and
cmp
insl
pshufw
in
imul
and
int3
jle
sar
sub
cmp
fisubrl
inc
sub
in
fistps
iret
int3
js
and
xor
adc
inc
loope
mov
cmp
adcl
push
aas
ljmp
fists
mov
dec
stos
sub
jbe,pt
jno
xor
xchg
push
popf
jge
hlt
cwtl
push
pop
adc
lods
adc
pop
and
pop
sbb
or
in
cld
fs
cmpsl
mov
int
fs
test
add
xchg
aad
cmp
or
mov
jb
clc
jns
pop
xchg
fisubrl
xor
xchg
in
mov
jne
jl
dec
ror
push
mov
jmp
lahf
shll
divb
sub
inc
pop
jle
popf
sti
outsb
mov
cwtl
out
mov
mov
je
inc
aad
jnp
mov
adc
imul
and
sbb
testb
mov
imul
xorl
mull
mov
mov
ljmp
mov
sbbl
xor
mov
insb
scas
jo
cmp
dec
sbb
pop
sub
mov
xor
outsl
xor
fidivs
std
add
and
add
mov
cmp
and
sbb
xor
push
call
ficompl
shl
fidivrl
cmp
les
call
jle
jmp
cs
add
rorb
outsb
xchg
aaa
adc
xor
cmp
cmpsl
arpl
repz
test
xchg
add
neg
lahf
lods
int3
stos
jae
lods
sarb
lods
adc
ljmp
push
sub
pop
testb
lret
leave
mov
jl
push
mov
cmp
inc
fisttps
outsl
iret
stos
push
xor
jmp
adc
cmpsl
pushf
pushf
mov
int
lods
xchg
or
inc
ret
lret
lret
xchg
xchg
xchg
xor
pop
mov
jg
dec
sbb
pop
ljmp
xchg
and
jecxz
jecxz
aam
iret
adc
adc
out
xchg
cmp
mov
xchg
push
push
outsb
mov
repnz
pop
jb
lods
xor
jo
andb
push
mov
daa
sub
test
test
arpl
dec
lods
aaa
xchg
jno
lock
dec
int3
push
pusha
inc
arpl
sub
repnz
push
mov
mov
ret
or
push
mov
adc
pop
ficomps
inc
jo
jne
pushl
lcall
decl
adc
mov
or
lds
mov
inc
pop
fcompl
sahf
add
out
and
push
sbb
xor
je
mov
imul
out
dec
sub
xor
or
aas
jp
int3
cld
aaa
test
adc
xchg
fcmovnbe
or
aam
inc
mov
int
sbb
stos
adc
idivb
jmp
gs
ja
lods
sbb
xchg
fsubrl
outsl
ljmp
xchg
fs
and
jbe
bound
inc
add
push
xor
sbb
call
jbe
sbb
inc
jge
mov
dec
or
into
mov
bnd
mov
pop
faddl
out
fistpll
sub
push
xor
mov
push
sub
xor
mov
jno
leave
sub
xchg
mov
inc
or
aam
push
jb
jno
sbb
setl
mov
stos
jg
cmp
sbb
xchg
cmp
jl
fisubl
push
push
insl
push
pop
scas
punpckldq
xor
gs
sbb
sub
fisubs
pop
int3
pop
rorb
push
sahf
dec
int3
aam
jb
push
mov
daa
xchg
xchg
xor
mov
xchg
flds
push
cli
ret
aas
mov
aam
inc
jne
das
test
jbe
scas
out
std
rolb
into
jmp
das
push
mov
inc
adc
jb
adc
mov
rcrl
stos
dec
fcmove
add
repz
es
cmc
std
and
or
cmpsb
xchg
push
mov
in
cs
cltd
mov
or
add
dec
mov
movb
push
xor
and
dec
stos
stos
test
xor
xchg
sti
dec
int3
or
mov
loop
out
sub
in
lcall
jecxz
cmp
ret
adc
aas
adc
jle
push
out
out
xchg
rcrl
movsb
push
ss
test
mov
out
in
mov
and
or
ror
insb
mov
adc
icebp
movsl
mov
dec
xor
mov
or
je
sub
xchg
sbb
mov
xchg
outsl
imul
lods
lahf
cld
lock
mov
add
arpl
pop
lret
dec
and
cwtl
jle
and
mov
dec
jmp
sahf
bsr
sbb
cmpsl
repz
sub
add
xor
mov
pop
outsl
sti
outsb
xchg
test
notl
add
xor
imul
gs
scas
cmp
inc
pop
push
cmp
push
xor
pop
cmp
out
jge
dec
push
cmovl
mov
and
push
icebp
xchg
lock
aam
lods
and
mov
cld
ret
jns
out
jmp
cmpsl
mov
fadds
xchg
in
cmp
sub
cli
data16
jl
hlt
mov
outsl
add
outsb
inc
ljmp
out
ja
hlt
mov
inc
adc
xor
jb
sub
mov
mov
pusha
shrb
shrb
mov
mov
adc
cwtl
fbld
vmulss
ret
pop
xlat
inc
sbb
test
push
mov
fdivrp
dec
mov
test
or
repnz
adc
fscale
fimull
lock
rclb
sbb
mov
cmpsb
out
cmp
inc
or
mov
leave
jle
mov
fxam
loop
cmc
and
adc
loop
test
lret
or
mov
and
loop
add
in
es
mov
roll
shrl
outsb
addr16
out
or
and
rorb
mov
dec
jbe
dec
movsb
je
mov
les
sub
outsb
int3
fsubrs
loop
mov
inc
pop
pusha
xor
mov
cmp
cld
lret
mov
lcall
icebp
aad
stos
fwait
push
aam
cmpl
jmp
sti
add
shrl
movsl
dec
inc
cmc
lret
insb
leave
leave
xor
shll
push
das
xchg
loopne
sub
imul
jg
xor
push
adc
adc
jmp
movsl
dec
or
mov
leave
push
and
iret
arpl
mov
xor
and
pop
dec
jp
js
dec
xchg
mov
mov
jg
dec
lods
sub
cmpb
iret
adc
outsb
sbb
xor
rcll
cmp
imul
int
mov
jo
mov
out
xchg
cltd
mov
test
stos
adc
lods
repz
pop
out
dec
inc
int
sub
pop
roll
into
fs
fwait
cmpsl
jnp
lods
and
and
push
jns
jae
mov
clc
int3
call
pop
sbb
jecxz
out
sub
aaa
cld
test
test
xchg
shlb
xchg
xor
sbb
push
ljmp
shlb
mov
rcrb
fwait
inc
inc
jge
add
sbb
leave
int
test
orl
test
xchg
fwait
sahf
sbb
cmp
add
mov
call
loopne
dec
adc
aam
jg
or
int3
xor
cltd
and
outsb
inc
inc
into
outsb
xor
cmpsb
loopne
push
and
loopne
in
lock
fldenv
into
cli
loope
data16
imul
loopne
push
test
inc
dec
adc
mov
sti
push
xor
lret
pop
sub
adc
incb
jmp
ret
mov
scas
mov
add
xchg
jns
xchg
ds
add
sbb
mov
pop
imul
mov
repz
xchg
scas
lods
leave
cmp
add
mov
jge
movsl
push
icebp
aas
shlb
inc
cmp
xlat
mov
clc
jl
fxch
lds
mov
xchg
mov
dec
lods
cltd
std
sub
fstl
sbb
outsl
fnstenv
cmp
push
in
dec
push
fcoms
fsub
mov
jae
mov
and
or
fwait
adc
xchg
or
fucomi
push
sbb
lods
xchg
xchg
xor
cmp
arpl
mov
scas
jle
dec
jo
std
mov
inc
test
idivb
stos
mov
int3
cmpsb
inc
lcall
xchg
int
xchg
in
test
pop
or
jno
xor
sub
mov
sbb
aaa
clc
add
repz
rcll
ret
jg
pusha
stos
cmpsb
stc
movsl
inc
mov
in
mov
jecxz
ja
adc
jle
mov
xchg
ret
and
adc
mov
pop
enter
xchg
rcrl
push
sarl
test
mov
mov
inc
cmpsb
jno
xchg
loope
push
pop
sbb
fdivrs
xor
jo
popf
dec
push
popa
adc
jo
push
pop
clc
xlat
push
data16
or
adc
movsl
aad
popf
sbb
inc
xorb
fisttps
sbb
dec
xchg
lcall
in
cmp
push
add
inc
int
dec
daa
jo
push
enter
pop
dec
pop
xlat
jl
test
stc
iret
or
stos
lcall
lret
leave
xchg
insb
jmp
sbb
push
das
and
adc
xchg
add
inc
mov
mov
dec
cs
icebp
adc
je
stos
sub
xor
cmp
mov
or
outsb
out
cmpsb
popa
mov
sahf
push
jle
arpl
or
rclb
repz
jl
or
xlat
iret
mov
or
push
push
data16
imul
imul
ror
sub
inc
nop
mov
inc
add
xlat
addr16
push
sbb
jmp
nop
xchg
fstps
test
sbbl
xchg
sub
push
fstpl
pop
dec
fwait
adc
shll
outsb
mov
mov
pop
adc
test
pop
cmp
pop
out
cmpsl
push
int3
rolb
pop
int3
sbb
push
ja
mov
icebp
jl
call
lods
cmp
mov
sub
xchg
test
icebp
leave
xchg
cld
pop
clc
xchg
xor
lret
inc
dec
jp
xor
imul
mov
mov
out
cmp
js
and
mov
add
lret
aas
cmovbe
pusha
addr16
mov
adc
mov
pop
mov
mov
js
mov
push
or
aaa
clc
mov
fsubrl
xchg
ret
dec
lea
or
call
movsl
andl
pop
inc
jbe
mov
aad
fldt
test
movsl
cmpsb
popa
push
adc
je
stc
adc
adc
sbb
pop
pop
xor
mov
and
pop
ss
aas
das
jae
add
out
jo
repz
xchg
stos
pop
add
jnp
sub
shrl
out
fsubl
je
cmc
insl
rcrl
aad
out
mov
loopne
enter
mov
inc
sub
cmp
divps
inc
cmpsb
enter
out
aaa
jbe
cmpsb
push
dec
lcall
mov
pop
sbb
cmpsl
fisubrs
test
es
iret
jne
out
pop
mov
arpl
aas
ljmp
cmp
int3
pop
test
or
or
mov
testb
jae
xor
jne
out
jns
xchg
cmp
sub
adc
inc
mov
idivb
adc
int3
gs
adc
pop
jbe
pop
jo
ljmp
lret
or
pop
xlat
mov
pop
test
popa
jg
fwait
notb
js
pop
xrelease
adc
out
out
mov
sub
mov
lods
push
mov
add
aas
adc
sub
insb
sub
jae
jae
lret
dec
jmp
inc
dec
decb
in
repnz
pop
xor
pop
stos
mov
ljmp
jle
movhps
andl
mov
add
lods
fcompl
sbb
icebp
test
xor
inc
fs
mov
dec
xlat
inc
in
fidivrl
imul
and
js
jl
dec
addps
push
dec
xchg
inc
pop
call
sub
mov
mov
outsl
push
rolb
mov
rcr
pop
clc
and
add
or
imul
stc
jnp
mov
mov
mov
pop
mov
lcall
jae
repnz
adc
mov
outsb
iret
xor
cltd
les
outsl
int
mov
pop
sub
sbb
out
and
push
and
adc
movsl
add
enter
lods
jl
dec
sarl
inc
adc
mov
gs
pop
push
inc
mov
lods
inc
ja
sbb
push
mov
enter
addb
or
pop
adcb
mov
shl
mov
push
setge
mov
or
je
out
push
cwtl
pop
pop
fnsave
jae
ret
in
jne
int
dec
in
andb
sub
cwtl
add
cmp
adc
test
sbb
pop
int3
sub
loop
mov
cli
mov
popf
adc
mov
pop
dec
repz
xlat
shlb
jnp
push
fldcw
stos
sub
fisttpll
in
leave
jl
sbb
in
imul
popa
sbb
cmp
popf
int
pop
sub
xlat
test
or
add
pop
jbe
lret
je
pop
push
mov
inc
mov
cmpsl
cmp
jae
xchg
test
xchg
andb
jle
xor
leave
ret
and
sub
jle
sub
pop
push
cmp
pop
movsb
into
jo
mov
adc
mov
lock
lods
sbb
cld
mov
ss
int3
jbe
test
jmp
and
out
cmp
mov
ret
mov
cmp
mov
stos
inc
adc
shrb
xchg
pop
popf
sub
adc
jns
test
repz
xchg
incl
movsb
popa
mov
repz
dec
or
mov
or
std
mov
sub
inc
hlt
rcr
xchg
fcoms
and
aaa
repz
sti
mov
les
fists
sub
outsb
mov
cli
xchg
xchg
jl
or
outsl
add
xor
js
mov
and
cli
insl
leave
lret
mov
sbb
das
inc
adc
cmp
sub
mov
push
nop
mov
sbb
fwait
lahf
mov
mov
jbe
cmp
xor
stc
jno
movsl
clc
in
dec
fucom
ss
cmp
stos
mov
xchg
xchg
mov
sbb
ret
adc
ja
push
test
adc
mov
lods
lret
out
or
pushl
mov
and
push
insb
mov
sti
adc
mov
add
psubusw
adcb
jae
xor
les
movsb
std
cmp
in
or
ret
xchg
add
xchg
lret
imul
adc
xor
test
je
adc
pop
popf
jge
clc
jecxz
inc
iret
sahf
faddl
out
sbb
sbb
and
cmpb
mov
add
iret
shl
sub
jne
push
mov
fnstcw
das
test
push
or
push
rorl
lret
push
push
sub
or
or
dec
cmc
sub
jecxz
dec
sub
mov
fidivl
icebp
cwtl
lcall
adc
jp
sti
pop
test
adc
ss
mov
lret
cltd
push
mov
cmp
sahf
cmp
xchg
imul
mov
popa
mov
stc
mov
mov
test
xchg
push
das
imul
leave
or
inc
out
sbb
adc
loopne
sub
lods
ficomps
ja
xchg
push
fcomps
and
sub
mov
xor
lods
xchg
bnd
stos
out
inc
inc
scas
inc
enter
mov
jo
inc
outsl
mov
rcrb
xor
clc
jmp
int
pop
gs
dec
imul
mov
rorb
cwtl
rcr
loop
mov
mov
sub
aaa
rcrb
cmp
inc
cld
or
jne
dec
out
mov
push
stc
dec
sub
xor
sbb
insb
xor
movsl
and
xor
in
andl
nop
xor
pop
push
lock
cli
imul
ds
pop
sub
lds
stos
inc
leave
adc
xchg
pmullw
lods
fcompl
sbb
mov
aam
int3
and
pop
out
aas
mov
fwait
orl
fsubrl
mov
inc
mov
mov
rolb
inc
repz
dec
jecxz
aas
jg
or
adc
das
lds
adcl
sbb
sub
xlat
jg
stos
mov
pushf
fstpl
aaa
mov
in
xor
inc
xor
out
ret
out
daa
fisubrl
aam
and
ret
arpl
stos
popf
lods
add
repnz
es
fdivrl
mov
pushf
into
int
sub
in
test
iret
iret
js
push
or
test
pop
mov
cld
bnd
fdivrs
pop
icebp
fwait
ss
lds
fsubrl
and
and
repz
in
sbb
push
test
scas
sbb
mov
data16
cmp
loope
ret
dec
bound
mov
jb
cmp
movsb
push
add
ljmp
clc
mov
insb
ror
jb
push
lods
fnstsw
xor
and
insb
mov
pop
jns
mov
and
cmp
push
xor
lods
mov
sub
sub
inc
cwtl
bound
hlt
outsb
add
dec
sub
mov
leave
mov
imul
je
dec
mov
cmp
scas
jbe
scas
int
mov
or
test
pushf
pop
fdivrl
and
add
out
cmp
lea
cmp
xor
aam
push
sub
mov
loop
into
mov
pop
lds
fistpl
ret
pop
enter
pop
jnp
add
gs
xor
int
push
or
jl
jb
sbbb
loopne
in
xchg
push
mov
xlat
lea
in
lret
leave
adc
scas
xrelease
aas
dec
negl
push
jnp
or
lds
fs
aas
push
pushf
fwait
and
fwait
stos
cmp
lea
insb
jmp
adc
cmp
mov
or
sbb
fsubrl
decl
jbe
fnstsw
mov
mov
mov
sbb
arpl
sar
lods
call
cmp
lret
xchg
sbb
add
mov
mov
je
lcall
leave
scas
or
or
test
pop
sarl
mov
loope
sbb
out
int3
adc
mov
stos
pop
imul
inc
mov
mov
xchg
cmp
into
sahf
in
push
and
mov
out
jno
xor
fldenv
imul
push
sar
cmp
push
inc
mov
push
sub
dec
fmul
jne
xor
adc
in
loopne
int3
push
shll
inc
cli
fsts
subb
cmp
test
mov
rolb
mov
dec
lock
cmp
sub
adc
or
insb
fcomip
fwait
xlat
xor
jmp
mov
cld
push
xor
mov
jecxz
xchg
dec
mov
add
mov
dec
test
out
mov
sbb
xchg
or
imul
cmp
xchg
mov
cmc
mov
enter
nop
or
outsl
imul
lret
xor
in
xchg
iret
mov
or
insb
mov
xchg
lods
cs
mov
sub
mov
stc
test
in
stc
inc
push
sti
mov
scas
pextrw
or
loop
lahf
scas
cwtl
icebp
les
jg
aas
xor
pusha
imul
sbb
stc
fsubs
jb
imul
sub
and
pop
test
out
in
lahf
jle
fwait
rolb
sti
lret
loop
mov
or
mov
sbb
mov
nop
cmp
cmpsb
dec
xchg
push
addr16
into
mov
and
jmp
jl,pn
icebp
or
call
je
mov
int3
xchg
fwait
mov
xchg
sub
fwait
jne
out
cmpsl
outsb
mov
idivb
and
xor
sbbb
aaa
das
cmp
or
ds
pop
adc
call
mov
sub
cmpsl
fiaddl
in
xchg
fucomi
test
sbb
inc
push
clc
mov
or
pop
pop
cmpsl
mov
or
add
inc
test
jge
inc
mov
push
xor
test
push
pusha
shlb
sbb
sub
ss
xor
js
pop
in
out
addb
call
add
clc
cmp
test
mov
dec
and
dec
adc
repnz
ljmp
sub
shlb
sbb
push
cmp
push
push
push
jns
out
dec
rolb
pushl
cmp
add
xlat
inc
inc
movaps
fildl
add
add
sbb
mov
out
sub
bound
ret
jno
jo
dec
fwait
inc
inc
ret
push
sti
stos
sub
inc
mov
and
mov
out
xor
repnz
jge
dec
les
jecxz
xor
xor
ror
dec
pop
xor
lock
sub
bswap
cmp
add
imul
filds
cs
mov
popa
pop
and
mov
jmp
ja
or
icebp
lods
inc
push
cmc
gs
sub
push
mov
pusha
cltd
ret
movsl
cmp
daa
push
pushf
icebp
ss
adc
sub
cmp
mov
or
int3
ja
fistpl
out
or
pop
or
xor
and
adc
das
mov
xor
inc
jge
or
rolb
inc
ljmp
outsb
aam
jb
sbb
mov
shlb
inc
mov
xor
push
mov
test
cmp
out
push
mov
outsl
leave
or
xor
jl
mov
insl
pusha
rclb
xor
sarb
lret
into
lods
fsubrp
sub
fsubp
xor
jo
pop
ret
daa
out
outsl
movsl
xorb
gs
scas
lahf
jne
shrb
lahf
pop
xchg
lods
push
imul
dec
pop
pop
sbb
out
js
adc
xchg
cmp
or
and
ds
push
call
xor
insb
jo
mov
cwtl
icebp
aam
rcrb
inc
movsb
jmp
lea
out
nop
scas
push
aas
cli
mov
jne
mov
mov
and
dec
inc
cmp
nop
inc
adc
adc
adc
in
imul
mov
mulb
mov
loope
jecxz
sbb
inc
push
sbb
dec
rcll
mov
mov
push
iret
jae
std
dec
and
sar
xchg
dec
xor
push
xor
es
shlb
ss
fwait
arpl
add
cltd
mov
cmp
addr16
adc
jecxz
out
dec
push
out
inc
lods
xchg
xchg
jl
scas
sub
adc
lret
pusha
aad
pop
ret
pop
pop
adc
cmp
inc
pop
cmc
jp
outsb
cmc
ret
lret
addr16
inc
aam
pop
or
fs
push
out
out
scas
fld
push
insl
pop
xchg
jge
in
test
xor
add
or
jo
add
scas
je
rolb
add
or
rolb
pop
push
push
negb
rcll
imull
enter
push
data16
sbb
xlat
xchg
jb
icebp
push
push
add
pop
fisubs
ljmp
or
insl
stos
sarl
rol
cmpsb
mov
sbb
cmpsl
data16
insb
mov
subb
jno
dec
movsb
jl
dec
jl
ds
mov
div
out
mov
outsl
into
jne
lcall
add
xlat
adc
sbb
addl
andb
pop
xor
mov
push
out
cwtl
jne
jp
cld
enter
xor
adc
adc
xchg
js
mulb
subb
stos
imul
scas
scas
sarl
push
ja
and
aam
mov
in
addl
push
arpl
scas
sub
jbe
sbb
data16
fcmove
lret
cmp
sar
pop
fsub
xlat
stos
lea
inc
jmp
sub
jge
aaa
sub
cltd
sbb
add
push
not
sbb
cmc
aaa
sbb
jmp
ljmp
inc
int
mov
pop
jle
jg
jae
jne
jo
or
negl
enter
inc
push
push
scas
push
out
mov
mull
add
and
mov
lea
pop
dec
mov
xlat
ds
daa
call
mov
add
sarl
pop
xor
mov
sbb
ret
mov
aaa
sub
out
mov
pop
cs
mov
and
dec
fdivr
imul
pop
add
mov
lahf
in
cli
repz
adc
cmp
dec
add
daa
cmp
jle
aaa
movsb
dec
rorb
mov
stos
and
push
add
sbb
dec
cwtl
lds
shlb
mov
lds
jb
in
addb
push
add
push
std
cs
add
insb
pop
in
jno
sub
mov
pushl
inc
lret
daa
fldz
movsl
push
imul
mov
ja
fdivrp
push
jg
scas
jecxz
daa
int3
mov
mov
ljmp
gs
dec
imul
outsb
scas
movsb
sti
fadds
xchg
stos
shrl
push
and
mov
mov
fwait
cmpsl
es
xchg
mov
scas
adc
mov
lcall
inc
xchg
ds
and
adc
cwtl
and
bound
push
out
mov
sbb
addr16
aas
mov
mov
xor
and
enter
push
scas
fsubrl
sbb
xchg
cmp
es
movsl
repz
sti
mov
add
pop
shlb
jb
xor
fisubrs
adc
jnp
adc
iret
movb
mov
mov
adc
sti
mov
insl
aad
jns
inc
nop
pop
repz
and
adc
ja
test
xor
dec
es
cmp
lds
add
push
cli
mov
jl
cmp
sub
jecxz,pt
adc
jbe
rclb
jp
stc
xchg
pop
pusha
jnp
movsl
loop
outsl
lcall
dec
sbb
ja
bound
pusha
test
jp
jae
insb
test
loopne
mov
push
sub
mov
ret
sti
ds
and
pop
mov
into
rorb
add
mov
xchg
es
push
imul
mov
scas
mov
push
or
sbb
pop
shll
push
aad
xor
pop
lods
out
sbb
mov
pop
or
divb
sbb
or
xchg
stc
jmp
jno
rcrl
xchg
nop
dec
mov
pop
add
pop
fstpl
add
in
stc
mov
imull
mov
mov
shl
out
pop
std
repz
jns
pop
negl
dec
rcrl
cmp
mov
sub
inc
lret
pusha
jl
cltd
lock
daa
inc
ret
hlt
jne
aas
xor
add
jnp
lock
andl
fmuls
sub
xor
pop
inc
cmpsb
mov
jle
jge
int3
sub
fsubp
es
popa
je
lahf
out
fcomp
out
ljmp
ja
pushf
test
sub
jne
gs
inc
mov
mov
cmp
xchg
lcall
shl
rorb
nop
gs
ret
xchg
cmp
popa
js
push
movsl
inc
mov
movsl
mov
les
jae
repz
add
fstps
cmc
test
xor
sub
leave
or
das
and
adcb
insb
jbe
or
sub
loopne
sub
dec
sbb
out
inc
pop
fstp
scas
aam
jle
and
outsl
int3
cmp
out
xor
cmp
insb
cld
dec
js
inc
cmp
idiv
aad
cmp
jg
imull
mov
cmp
lock
lods
es
lods
push
mov
adc
scas
mov
ret
popf
imul
hlt
or
inc
test
adc
lahf
xchg
into
fcompl
jne
push
jb
popa
leave
add
ret
cmc
ret
jg
cwtl
inc
ljmp
mov
jns
cmpsl
adc
xchg
outsl
adc
jb
push
add
add
mov
sbb
inc
dec
lds
mov
and
push
ret
adc
enter
outsb
test
daa
out
imul
pop
es
push
cmc
jne
push
call
and
mov
ljmp
pop
adc
aad
bound
lcall
mov
faddl
sub
or
sbb
jne
aaa
xchg
pushf
jmp
dec
or
mov
imul
js
sub
aaa
cmp
fidivl
fcoml
icebp
pop
ret
mov
stos
push
lahf
pop
xchg
push
movsb
mov
push
loope
scas
push
and
outsl
hlt
fidivl
inc
push
repnz
xchg
lret
les
cmpsl
jmp
ret
jns
pushf
add
sub
cmpsb
cmp
subl
push
jnp
arpl
mov
mov
pop
das
sub
xor
nop
mov
loope
popa
lock
xor
pop
int
push
pop
aaa
mov
scas
xor
nop
sbb
dec
pop
adc
stos
pop
mov
lea
xor
test
dec
mov
adc
addl
sbb
pop
lea
sahf
cmpsl
mov
arpl
fidivrs
mov
cmp
arpl
mov
ss
mov
xchg
or
sub
dec
mov
roll
loope
or
nop
nop
popf
mov
je
popf
cmpsl
mov
fmuls
stos
imul
add
shlb
pop
cmp
outsl
add
jno
mov
cli
inc
dec
iret
jae
mov
fidivs
xchg
stc
inc
int3
mov
icebp
rcr
cli
sbb
jbe
mov
jae
xchg
jl
xor
les
icebp
cmp
cmpsl
mov
jnp
cs
out
int
in
mov
dec
mov
in
cli
jecxz
jge
flds
in
ja
out
bswap
out
pop
sub
dec
popf
arpl
mov
push
push
mov
repnz
insl
mov
cltd
std
add
pop
and
fcmovb
je
dec
inc
mov
and
stc
add
aaa
xor
mov
xchg
sarl
sbb
inc
test
pop
stos
push
ja
cmc
inc
out
inc
pop
adc
sub
inc
into
mov
notb
mov
and
mov
icebp
mov
repnz
stc
clc
lea
inc
cmc
sub
dec
xlat
push
loopne
add
jae
push
inc
pushf
test
mov
lcall
cltd
xchg
push
ljmp
adc
fsubl
push
ds
push
jecxz
pop
adc
sub
adc
imul
sub
aaa
jl
jnp
shlb
test
js
push
jecxz
ss
cmpsb
imul
jno
pop
sbb
or
ss
xor
mov
adc
mov
lcall
stc
sbb
mov
push
mov
cmpsb
insl
push
sbb
fsubrs
inc
push
outsb
clc
insl
cs
jo
fs
cmp
sbb
cmp
std
mov
sahf
dec
xchg
negb
push
jo
add
push
sarb
outsl
loop
inc
fstps
int3
outsl
and
pushf
jbe
pop
bound
adc
sti
jns
movsl
ljmp
insl
out
sahf
stc
cmpsl
mov
test
fmull
mov
dec
aas
loop
mov
xorl
pop
imul
popa
push
pop
dec
out
add
imul
xor
or
test
mov
orb
pop
cld
and
sub
xor
xchg
jns
mov
jnp
addr16
out
add
cli
sbb
xor
mov
jnp
testb
sbb
push
push
or
fnstsw
je
sbb
fisubrl
xorb
in
call
iret
cmp
aad
nop
or
jmp
test
xlat
roll
mov
mov
daa
xorl
inc
pop
jnp
cmpl
jbe
adc
sbb
mov
cmpsl
icebp
or
pop
cmp
mov
cmpsl
movsl
jp
cmp
std
aas
into
xchg
insb
cltd
pop
mov
and
add
out
cmp
fcoml
push
mov
sahf
jg
leave
shlb
sub
mov
ret
cmp
sbb
mov
insl
jl
mov
mov
rcl
nop
add
mov
mov
movsl
xchg
ljmp
mov
fmuls
jmp
decb
popf
ds
xchg
mov
jae
push
clc
popa
jle
iret
out
inc
add
inc
cs
sbb
xor
int
add
fnsave
and
lret
dec
hlt
jb
mov
and
mov
loop
lahf
and
jbe
lods
int
inc
pop
arpl
lds
add
es
inc
push
loopne
mov
cmpsb
inc
lods
and
jno
addr16
pop
jg
frstor
lret
loop
or
push
test
loop
push
nop
adc
outsb
add
andb
into
les
jne
lret
stc
xchg
push
mov
cmp
sbb
jns
mov
sub
je
sbb
pop
add
mov
xlat
jbe
add
adc
pop
add
arpl
inc
clc
lea
out
insl
push
pop
inc
test
mov
test
add
pop
sahf
jl
loope
or
or
xor
hlt
or
idivl
insb
xchg
mov
int
lea
or
mov
xor
lahf
cmp
or
push
fwait
xchg
mov
shlb
pop
into
xor
xchg
ret
and
fildll
pop
aaa
pop
lea
push
sbb
sarb
sti
and
mov
insl
add
loope
mov
add
aam
pop
sub
jge
rorl
mov
push
daa
out
dec
inc
popa
xor
push
dec
xchg
jmp
es
loopne
inc
and
xor
arpl
add
sti
jl
stos
stc
mov
adc
mov
pop
dec
jecxz
lcall
jl
or
mov
aaa
mov
mov
xor
dec
call
popf
les
jnp
or
push
xor
movsb
xchg
xlat
xchg
mov
push
or
jbe
xor
into
popa
cmp
jl
push
xor
inc
xchg
mov
add
pop
aam
mov
fmuls
jne
jnp
inc
ljmp
mov
sub
add
push
mov
shrl
dec
sub
mov
rcrl
xchg
mov
ret
xchg
and
dec
mov
push
fisubs
adc
ret
inc
dec
popa
xchg
jae
lahf
xchg
in
pop
xchg
xor
push
dec
bswap
pop
int3
aad
mov
push
dec
dec
lods
pusha
iret
sti
xor
outsb
and
iret
je
push
dec
adc
andl
cltd
data16
sbb
xchg
dec
popa
and
sub
jl
cmc
adc
jecxz
inc
push
adc
dec
inc
cmp
clc
or
xor
pop
stos
cmp
insb
sti
iret
fldcw
pop
pop
dec
cmpsl
mov
hlt
cmp
or
adc
dec
frstor
dec
andl
lea
mulb
lcall
pop
arpl
xor
or
out
test
or
cmp
mov
cwtl
xor
incl
mov
sub
or
inc
sbb
jmp
mov
sbb
or
sbb
out
mov
arpl
mov
loope
xchg
and
and
sbb
je
pusha
xchg
adc
push
subb
je
mov
daa
je
pop
sub
mov
inc
cmp
les
inc
shll
or
push
mov
or
xor
negb
imul
xor
pop
inc
pusha
test
push
xchg
enter
lcall
roll
das
jb
jecxz
inc
push
inc
dec
out
inc
cmpl
mov
pop
xchg
stc
push
test
inc
xlat
pop
test
shlb
mov
arpl
popf
lock
and
jecxz
dec
pop
les
cmp
or
mov
bnd
fstpt
fwait
leave
cwtl
es
popl
int
and
adc
dec
sar
ret
leave
hlt
lret
je
je
cltd
ss
pushf
mov
stos
xchg
rcll
push
dec
je
cmc
sbb
repnz
pusha
imul
jo
insb
xchg
ret
fwait
mov
or
pusha
cwtl
loope,pn
insl
sub
mov
es
xchg
xchg
cmpsb
xchg
dec
push
in
or
sbb
inc
inc
mov
push
pop
cltd
pop
xchg
out
lods
data16
enter
xor
rcl
pop
fucomi
imul
aam
lods
inc
and
mov
xlat
xlat
outsb
pusha
insl
sub
jle
fimull
outsb
cmp
and
cmp
pushf
and
imul
and
pushf
rol
pusha
sbb
xlat
xlat
xchg
jp
leave
pop
aam
sbb
mov
jae
mov
inc
push
loopne
or
aad
sbb
in
adcl
icebp
dec
sbb
mov
shl
jg
jmp
icebp
cmp
popl
loope
jp
xchg
cmc
xchg
mov
or
jecxz
push
dec
or
rorl
and
jge
into
jae
stos
cmpsl
or
or
mov
inc
cld
mov
sbb
fnstsw
inc
push
inc
and
not
loope
loope
das
pop
pop
into
in
loop
add
out
xor
sbb
mov
xchg
add
cs
inc
adc
push
mov
cmpsl
xchg
xchg
movsb
lock
mov
jno
inc
xorl
adc
hlt
xchg
fsubl
clc
or
or
mov
jo
iret
movsl
aas
xor
dec
aas
sub
mov
ljmp
mov
std
sub
push
mov
inc
mov
ds
imul
push
data16
dec
movsb
fadds
mov
outsb
sbb
addr16
sub
loop
xor
pop
stos
out
xor
fstpt
cmc
sub
jmp
sub
or
sbb
xor
mov
adc
push
inc
adc
or
pop
xlat
in
add
mov
sar
dec
push
and
adc
and
std
cmp
data16
xchg
shll
or
xor
std
adc
jp
dec
cmc
repz
movsl
ja
loopne
das
loopne
bound
cmp
fmulp
popf
popa
pushf
fmuls
adc
jle
aad
sub
dec
mov
pop
cmpsb
xor
shll
mov
dec
lock
fdiv
inc
pop
mov
cmp
hlt
lea
jne
adc
fstl
out
cmpsl
ret
mov
add
cli
cmp
dec
jg
xlat
cld
mov
sub
mov
leave
mov
and
loop
add
inc
and
add
jge
mov
sub
mov
loop
cli
sub
and
subl
push
cmp
pop
sub
xor
je
sub
in
xchg
ljmp
mov
int
aas
dec
jmp
repnz
nop
js
mov
mov
sbb
lret
clc
sbb
aad
leave
mov
dec
sub
xor
popa
xchg
into
andb
sahf
mov
jmp
pop
roll
jns
lock
lret
popf
jecxz
jb
dec
pop
cltd
inc
ret
lahf
xor
cmp
push
loop
xchg
xor
dec
xchg
sbb
enter
xchg
fnstcw
icebp
pop
lods
jmp
xchg
jne
lods
dec
push
sub
adc
push
and
cmpsb
popa
mov
push
les
mov
jl
popf
out
cmp
test
shl
mov
adc
mov
aad
and
mov
jb
xor
xchg
mov
mov
dec
jno
pusha
xchg
xchg
sub
xchg
pop
fbstp
dec
xchg
mov
inc
iret
es
adc
or
cli
or
pushf
cs
sbb
mov
js
sbb
mov
insb
addr16
jg
int3
fs
cmova
dec
rcll
xchg
ljmp
and
rclb
xlat
fwait
mov
andnps
mov
jb
popf
clc
pslld
shrb
js
cmp
loope
sar
xor
stos
cmpsb
adc
pop
pop
dec
inc
fildl
cmc
in
xchg
pusha
addr16
jge
mov
aas
mov
int
sbb
cmp
adc
push
sub
lods
pop
push
push
aas
stos
jecxz
xchg
test
int3
fmull
mov
gs
addr16
add
sbb
and
push
dec
insl
mov
mov
test
enter
xchg
mov
push
jne
mov
in
jb
rorb
inc
or
pop
loope
pop
mov
out
xor
xchg
xor
push
sbb
push
stc
stos
pop
scas
push
cs
mov
lea
pop
repz
xlat
sub
in
jns
les
jle
mov
xor
lock
repz
ljmp
lods
out
pusha
fs
popa
shlb
js
mov
call
cmpl
scas
cmp
sbb
jns
xchg
dec
xchg
mov
addr16
fdivr
push
sub
mov
push
xor
mov
cld
xchg
shll
mov
mov
ret
adc
repz
pop
orb
fcoms
and
iret
pop
inc
pusha
lock
cmp
lcall
fwait
sar
not
aaa
aaa
and
cltd
outsl
pop
jne
sub
roll
xor
jne
imul
jno
ffree
mov
push
mov
xchg
outsl
xchg
in
outsl
xlat
aad
inc
shrb
in
aam
data16
gs
fld
jo
imul
jns
jns
cmpsb
mov
je
stos
lods
dec
clc
dec
xchg
out
and
data16
insb
shlb
sarl
jle
mov
fbld
gs
mov
sti
push
cmp
jno
imul
addr16
insb
lock
mov
lcall
mov
inc
sub
mov
rorb
je
push
push
arpl
aas
sub
xor
testl
push
repnz
xlat
fdivr
add
jne
jo
bound
mov
in
arpl
xchg
cmpsb
jo
jb
testl
adc
hlt
mov
or
inc
mov
mov
mov
out
sar
jne
roll
out
mov
lock
fdivp
es
faddl
fldt
addr16
fcmove
out
adc
subl
in
cmpl
pop
into
mov
popa
sar
hlt
sub
add
cmp
ja
stc
adc
xchg
mov
movsb
movsb
push
lahf
scas
cmp
mov
cltd
mov
repnz
and
popf
popa
mov
ja
pop
xchg
push
lds
cmpsb
test
mov
pop
add
push
inc
cmpsl
lods
ficompl
or
daa
out
jno
push
fmull
jns
dec
sub
ret
pop
dec
mov
push
mov
clc
inc
and
mov
jo
shr
pushf
test
push
je
iret
addr16
ja
pop
sub
mov
push
jmp
popf
out
or
jp
rcrb
inc
pop
test
cwtl
adc
inc
xchg
and
sbb
nop
stos
imul
mov
jle
inc
sub
mov
lods
sbb
clc
mov
fadd
xchg
cwtl
rorb
push
jecxz
movb
sub
fidivrs
das
cs
pop
pushf
mov
xor
js
adc
add
frstor
js
dec
sub
rol
xchg
pop
add
xlat
and
stos
arpl
clc
xor
pop
shrb
int
inc
mov
inc
add
cmp
repnz
cmp
jecxz
push
dec
push
jns
push
sarl
xchg
jno
into
into
fwait
out
pop
sbb
cli
ss
xchg
fs
jmp
mov
or
fdivrl
add
mov
mov
test
add
mov
or
xorl
testl
or
cmp
mov
cld
xor
adc
xchg
inc
fwait
dec
push
or
iret
lret
cmp
inc
fmull
push
jp
enter
mov
inc
stos
mov
sarl
jmp
cmp
ret
jns
jno
enter
push
ret
pop
movb
in
lock
sbb
test
push
xchg
pusha
shufps
add
fwait
outsl
push
jo
bound
imul
leave
fwait
push
fsubr
repnz
jne
jp
ror
cmpl
jae
insl
add
add
ficoml
xor
xchg
push
pminub
cli
lahf
test
xor
pop
cli
or
sub
mov
dec
inc
mov
scas
sub
daa
inc
das
addl
mov
imul
fs
inc
jne
aaa
xorl
pop
sub
mov
sbb
mov
sub
add
adc
fsubs
cmp
xchg
or
push
mov
inc
divb
scas
or
xor
add
pop
push
inc
outsl
mov
ljmp
pop
jno
scas
mov
mov
loop
mov
popa
out
cmpsl
fdivs
adc
ljmp
out
jmp
push
add
popa
pop
xchg
add
incb
sub
mov
xchg
std
hlt
adc
stos
fisubs
push
cmp
lahf
movsb
hlt
test
rol
int3
clc
shrb
pop
push
cwtl
in
test
int
stc
icebp
std
insl
inc
push
sbbl
into
dec
jmp
cmc
xchg
push
jae
inc
adc
rorl
outsl
mov
test
add
xchg
sbb
fs
push
push
push
pop
cwtl
add
outsl
push
xor
jmp
push
mov
in
add
inc
cmpl
out
in
leave
pop
hlt
sub
rolb
mov
data16
xchg
data16
pop
call
adc
xchg
xor
xchg
xor
sbb
rclb
xchg
shr
js
pop
pusha
xchg
mov
xchg
outsl
ret
arpl
iret
inc
aad
cmp
pop
mov
dec
mov
out
cmp
testl
xor
lcall
xor
push
jle
inc
adc
ljmp
daa
int3
jg
xchg
sbb
xchg
adc
cmp
adc
divb
out
jecxz
mov
pop
cmp
out
mov
mov
rclb
sahf
jb
pop
gs
mov
outsb
jmp
lcall
adc
stc
mov
and
test
sbb
aad
jns
adc
mov
ljmp
in
lds
inc
lods
out
cld
jmp
jecxz
fdivp
mov
adc
and
or
bound
push
dec
loop
sub
or
lcall
aas
dec
dec
xor
adc
add
mov
aaa
pop
adc
gs
in
cli
xlat
lahf
stos
add
dec
mov
mov
ljmp
and
jmp
pop
mov
jne
fwait
mov
jle
insb
or
sti
dec
mov
das
fwait
xlat
pop
mov
loopne
sti
adc
xchg
sbb
fcomps
and
clc
enter
fsubrs
xor
mov
fists
out
fsubs
jecxz
or
lods
mov
stos
mov
xchg
jg
scas
stos
jb
mov
add
dec
jb
jle
mov
jne
jnp
incb
inc
adc
mov
lods
test
iret
lods
mov
pop
add
rorb
inc
push
add
in
imul
loop
stc
sbb
je
dec
cmova
rolb
sub
mov
adc
repnz
xor
xchg
xchg
push
dec
insb
das
out
sub
icebp
mov
inc
jae
ficoms
xchg
int
outsb
scas
rclb
mov
dec
sbb
push
test
int3
jae
inc
xchg
pop
repz
sub
shlb
jo
mov
cli
cli
stos
jl
jnp
movsb
mov
mov
sarb
add
inc
notb
pop
mov
inc
shrb
dec
sbb
inc
dec
dec
sahf
sahf
outsl
dec
je
jbe
sub
pop
inc
inc
xchg
and
stc
hlt
jnp
arpl
pop
push
adc
jo
cmp
daa
adc
mov
popf
test
mov
int3
or
iret
mov
or
mov
out
clc
xor
adc
jecxz
sti
lods
imul
nop
jmp
mov
in
ret
lea
arpl
xchg
mov
push
jl
dec
dec
xchg
xchg
orb
test
scas
adc
inc
mov
fsubrl
cmp
icebp
lock
sbb
fwait
sub
sahf
xchg
add
xor
mov
mov
into
mov
in
es
sbb
mov
sub
out
aam
push
ret
popa
and
push
into
dec
jbe
movsl
pop
push
add
cwtl
push
pushf
push
jecxz
mov
orl
jg
sahf
pop
push
pop
repnz
xchg
mov
pop
push
mov
sarb
inc
inc
cmp
xlat
xchg
popf
cltd
sub
gs
push
shlb
dec
imul
push
jmp
pop
sti
pop
cmp
push
mov
cwtl
jl
aad
sub
aam
and
and
mov
arpl
or
push
push
sti
mov
sub
rcll
negl
test
cmp
push
movsb
xlat
or
sub
shlb
scas
or
or
test
lret
orl
rclb
std
or
clc
lods
cmpsl
inc
or
pop
adc
mov
inc
push
inc
or
negb
shrb
inc
int
stos
inc
mov
pop
scas
jp
mov
mov
xchg
call
notl
fimuls
push
add
push
scas
sub
mov
roll
sbb
outsl
jmp
mov
dec
adc
roll
jmp
cwtl
ljmp
mov
out
pop
call
jb
mov
dec
std
mov
push
cwtl
fisttpl
cli
test
cmp
push
das
or
cwtl
push
jg
cmp
dec
dec
xchg
xor
sbb
subb
ret
ds
outsb
mov
cmp
mov
scas
popa
dec
addl
xchg
rol
or
in
les
sbb
mov
lods
fdivrs
leave
lds
mov
mov
decl
movsb
jo
nop
clc
xchg
stos
fildll
xchg
xor
addr16
stc
sbb
pop
hlt
or
iret
adc
testb
dec
lods
dec
dec
inc
mov
xchg
in
and
ret
inc
outsl
mov
mov
mov
push
stos
cmp
and
mov
imul
sarl
mov
pop
add
mov
testl
xchg
dec
mov
mov
std
inc
mov
leave
sub
mov
mov
orb
hlt
xor
pop
fnstenv
pusha
outsb
inc
inc
and
pop
pop
leave
nop
push
repz
cmp
mov
pop
cmc
test
ret
jae
clc
dec
push
sti
jbe
sub
push
cwtl
int3
sbb
test
incl
xchg
and
ljmp
out
adc
imul
fbld
pop
mov
cmc
dec
pop
out
dec
cli
mov
jge
xor
sbb
mov
sahf
xchg
andl
adc
add
jae
test
mov
inc
or
jg
xchg
jecxz
outsl
stos
and
jge
into
dec
push
movsl
fsubrs
inc
mov
mov
out
bswap
mov
outsl
scas
push
popa
or
out
or
push
mov
mov
mov
mov
cwtl
int3
sub
inc
ds
push
xchg
sbb
add
in
clc
cmp
arpl
aas
adc
inc
mov
push
lret
mov
test
xor
add
test
adc
fisttpl
aad
mov
mov
daa
sub
push
adc
push
pop
add
mov
pop
lret
ds
mov
movsb
sub
add
mov
in
jle
shr
aad
pushf
out
aaa
pop
adc
sub
stos
cmp
sub
add
repz
push
test
jae
idivl
ror
cmpsb
sub
fs
dec
fistps
fs
sti
loope
pop
sbb
inc
adcb
xchg
xchg
mov
insl
xchg
pop
or
out
jl
inc
es
ret
adc
cmp
or
dec
dec
inc
jmp
mov
loope
cvtdq2ps
xor
mov
or
xor
jbe
jns
rorl
nop
cwtl
pushf
inc
jl
negb
enter
dec
cltd
in
jl
sub
stc
add
push
es
xor
pop
mov
mov
sbb
in
js
jecxz
jae
cmp
xchg
xchg
dec
out
movl
dec
inc
inc
aad
inc
dec
sbb
and
loope
jns
xchg
jmp
das
sub
cwtl
fucom
aas
push
ja
xor
xchg
mov
xlat
int3
in
mov
pop
mov
clc
lds
add
movsb
sbb
jle,pt
mov
in
sbb
xchg
push
mov
mov
aad
push
pushf
popa
or
dec
arpl
clc
sub
dec
adc
hlt
pop
fistpll
in
xchg
inc
lcall
mov
cld
mov
jns
mov
imul
adc
lret
out
adc
push
inc
pop
push
xor
pop
and
fdivrl
push
aam
adc
icebp
cmpsl
sub
cmp
pushf
push
jg
cmpsb
pop
push
int3
inc
out
inc
mov
mov
sub
xchg
inc
jg
push
cld
push
pushf
out
or
subl
cld
inc
into
sub
sub
sbb
push
sbbb
cli
loopne
jp
pop
test
shrb
addr16
and
mov
out
lods
jbe
dec
daa
jecxz
lret
test
pop
ds
add
push
xchg
push
push
pusha
xchg
outsb
xlat
std
xor
rcrb
xchg
out
mov
mov
outsl
idivl
imul
int3
aaa
adc
mov
pop
cmc
hlt
das
inc
aaa
in
es
jns
outsb
ret
sub
mov
jge
push
dec
jecxz
xchg
aas
movsl
push
sbb
pop
lahf
mov
jo
pop
test
int3
sahf
inc
faddl
dec
sub
adc
xor
test
aas
jbe
cli
inc
jg
andb
sbbb
add
push
cmpsl
mov
push
scas
push
push
rcrb
popf
lock
in
icebp
mov
es
or
in
in
jb
shrb
mov
mov
dec
out
fwait
mov
xor
adc
jae
pop
mov
mov
fistpl
lcall
push
dec
pop
or
jne
lret
test
movsb
daa
popf
mov
xchg
shlb
lret
jno
pop
or
xor
out
or
add
gs
xchg
mov
das
pop
sbb
jne
cwtl
jg
mov
std
test
popa
mov
insl
mov
insb
xchg
and
loop
je
faddp
fcompl
loope
xchg
aam
fidivrl
xchg
push
aad
jg
ja
int
iret
mov
fst
mov
es
lahf
and
and
mov
inc
out
xchg
gs
loop
jecxz
mov
les
and
xchg
daa
addr16
mov
add
cmp
jg
inc
rcll
sbb
pusha
cmp
lds
push
insb
mov
fs
out
xchg
lcall
call
mov
insb
jnp
scas
push
loop
pop
jge
les
jecxz
sbb
lods
ficoms
fildll
inc
mov
xlat
dec
loope
cmpsb
lret
adc
jno
dec
add
dec
cltd
mov
push
orb
push
mov
push
in
adcb
jl
push
movsl
push
jmp
jl
xor
bswap
lahf
leave
mov
int
jb
push
loopne
mov
packssdw
dec
jmp
js
adc
cmpsl
ja
jbe
or
movsl
adc
lods
inc
mov
aaa
jle
dec
push
or
lock
add
adc
popf
mov
rolb
fdecstp
cli
inc
push
movsw
daa
in
or
out
adc
clc
mov
xlat
sub
out
aas
imul
mov
push
pop
imul
push
sub
dec
fisttpl
cmpsl
in
or
roll
mov
jns
icebp
into
mov
int
sbb
fimull
mov
lods
adc
cli
sarb
call
push
arpl
cmp
and
push
xchg
jl
inc
add
test
sbb
cmp
inc
adc
pop
es
ret
jno
jns
xor
inc
in
sbb
inc
subl
sbb
clc
ret
xor
test
pop
pop
repz
fsubrl
out
repnz
xchg
push
shr
mov
sarb
dec
jg
into
inc
sarl
loope
mov
and
mov
sbb
inc
jmp
mov
fwait
jae
and
stos
lock
adc
or
jl
js
xchg
insl
dec
jl
loope
fcoml
loop
jno
stc
xchg
dec
int
mov
data16
mov
push
jno
hlt
jmp
arpl
stos
add
fiaddl
test
cmc
dec
in
imul
mov
into
andb
ja
mov
push
and
repnz
or
cmpsl
lods
into
nop
jae
lret
xchg
cs
lahf
dec
push
push
dec
add
push
cwtl
repnz
mov
stc
inc
xchg
bound
mov
jl
test
repnz
sbb
ss
lcall
pop
daa
and
jp
sub
jge
inc
lret
adc
dec
sub
xor
sbb
mov
pop
mov
dec
outsl
add
sbb
mov
lret
je
es
cli
xor
fstl
lods
xchg
stc
jmp
inc
adc
notl
push
fnstcw
mov
clc
int
sub
sbb
in
add
into
into
ret
adc
lahf
and
cmp
ja
or
outsl
std
sub
sti
mov
test
lea
xchg
pop
pop
mov
dec
pop
sub
in
dec
fildll
test
add
push
and
mov
cwtl
push
jo
cmp
sbb
je
xchg
push
dec
enter
lret
sar
mov
leave
lds
jbe
pop
pop
mov
mov
fcompl
mov
shrb
and
mov
gs
sbb
repnz
mov
out
push
test
push
add
addb
xor
pop
cltd
in
or
test
cmp
orl
fwait
in
dec
jo
into
loop
imul
divb
fisubs
insb
not
lock
adc
jno
xor
stos
mov
into
and
gs
out
add
mov
test
iret
pop
xchg
nop
out
leave
psubq
push
lret
and
xchg
pop
push
xor
arpl
addr16
aam
mov
ud1
loopne
fcmovne
test
pop
lahf
xchg
mov
loope
into
sahf
mov
sbb
xlat
fimull
pop
in
int
insl
nop
inc
sti
sbb
hlt
jmp
in
jne
cmpsb
mov
loopne
ret
xchg
add
std
sbb
aad
inc
test
cld
xor
jae
pusha
in
pop
sbb
popa
sbb
stos
cmc
inc
cwtl
and
cmp
lahf
ds
xor
or
sbb
es
lods
popa
imul
out
jb
sbb
xchg
fsts
les
mov
aaa
add
mov
shl
out
sahf
xor
pop
cmp
lret
pop
lods
daa
bound
xchg
cmc
xlat
sbb
lods
fmull
and
jne
popf
mov
push
out
jb
outsb
push
nop
xor
movsb
inc
fldl
data16
sbb
orl
in
jne
inc
daa
and
add
push
cmp
sahf
push
xchg
out
jecxz
cmp
aam
mov
lods
pushf
enter
sub
mov
mov
scas
out
dec
push
mov
sub
pop
and
jle
test
adc
add
fcompl
cmp
and
cmpsb
notl
mov
xchg
mov
pop
aaa
push
in
and
lods
mov
mov
clc
stc
cmc
lret
jbe
sahf
jo
hlt
push
pop
notb
xor
pop
sub
daa
jbe
vandps
nop
push
jge
mov
insl
fldcw
jne
push
mov
into
loopne
adc
xor
lea
pop
mov
mov
adc
out
xchg
and
lahf
mov
sbb
mov
xor
xor
ret
xor
stos
push
xchg
inc
lahf
xlat
loope
mov
mov
or
pushf
and
xchg
enter
pop
adc
mov
jmp
aam
pop
std
inc
loope
mov
dec
pop
lea
mov
sbb
adc
inc
aad
repz
aad
inc
cltd
mov
pusha
cmp
sbbb
bnd
xchg
and
jne
xchg
mov
xor
add
and
repz
dec
cmp
mov
push
out
outsl
push
push
and
jge
dec
inc
or
jbe
inc
fimull
add
cmpsl
ss
mov
dec
adc
adc
int3
data16
repz
pop
jle
test
in
push
addr16
mov
dec
clc
dec
pop
test
and
sub
shlb
mov
je
rorb
push
sub
pop
mov
sbb
jge
mov
push
movsb
negl
lds
sub
mov
pop
sbb
stos
cmp
rcrl
je
aas
jbe
test
sbb
sub
pop
movsb
es
int3
mov
scas
jmp
scas
jae
push
mov
scas
icebp
int
xor
and
js
lds
xchg
idivb
in
outsl
out
mov
sub
add
negb
mov
mov
sbb
imul
in
push
int3
sbb
fisubl
mov
loopne
jge
or
push
add
jmp
jno
or
outsl
divb
sub
mov
push
xor
mov
or
mov
mov
loope
ljmp
adc
cmp
push
outsl
sub
mov
jb
push
scas
sbb
fwait
stos
roll
decl
sub
sbb
enter
xor
jo
add
jle
test
js
and
repz
cmp
dec
lods
push
mov
pop
cmc
int3
popf
pop
or
out
lods
sbb
push
xor
push
sti
mov
adc
movsl
cmp
jge
ss
xor
pop
mov
xchg
mov
pushf
sub
mov
jle
sahf
hlt
shlb
sub
scas
lea
hlt
ret
cwtl
out
or
inc
out
adc
jge
push
out
cs
rclb
pop
rclb
js
call
outsl
xor
jae
cmc
repnz
bound
jmp
imul
and
mov
lds
adc
add
sub
mov
ret
fnstcw
mov
call
sub
test
fdivp
cs
ret
cmp
mov
cmc
fisubl
ljmp
xchg
popa
fs
stos
or
test
mov
xlat
out
sub
gs
sub
addr16
or
inc
xlat
hlt
xlat
adc
jge
mov
or
in
in
add
pop
sbb
lcall
sbb
dec
inc
inc
cs
mov
push
sub
sub
xor
fmull
lret
sbb
jg
mov
mov
cmpsl
fucom
ret
and
cmp
icebp
pop
mov
pop
mov
push
daa
loop
and
adc
sub
jnp
fidivrs
jo
pushf
mov
sub
and
hlt
repz
movlps
std
mov
or
movsl
ret
rcrl
daa
jl
add
call
cmpsb
mov
xchg
js
mov
xor
or
and
rep
mulb
pushf
xchg
daa
sbb
mov
push
pop
xor
jp
jmp
xor
cmp
pop
pop
jecxz
sti
xchg
pop
scas
in
mov
jge
ret
inc
cmp
adc
imul
xchg
push
adc
cmp
inc
fwait
sbb
adc
jp
jge
cmp
out
pop
xor
push
aad
jae
sbb
loopne
test
mov
sbb
inc
jnp
push
loope
rcl
testb
push
inc
insb
jbe
lock
or
enter
jg
mov
icebp
es
pusha
scas
add
mov
imul
pop
mov
repz
stos
sahf
push
je
pop
jge
add
lcall
ret
add
xchg
jg
test
test
or
adc
leave
xor
pushl
dec
push
sbb
fdivrl
das
dec
bound
inc
jmp
stc
divb
cmp
mov
cld
cmp
sbb
jp
push
xchg
pop
jno
inc
pop
lea
popf
dec
mov
int3
sub
das
insl
sub
mov
fildll
addl
scas
sbb
in
jbe
cwtl
or
add
sbb
aas
mov
aam
mov
sbb
rolb
xor
movsb
in
mov
test
shll
into
mov
jbe
in
sbb
adc
cmp
and
std
xor
ljmp
inc
sbb
add
jnp
gs
insl
cmp
mov
fstl
sub
xor
jbe
lahf
lret
cmp
pop
sar
ljmp
sbb
jmp
mov
add
xchg
pop
mov
sbb
adcl
dec
xchg
add
mov
ret
mov
jb
ficoml
xchg
and
xchg
pop
dec
out
add
repz
ds
hlt
aam
sub
push
or
jnp
inc
pop
push
jmp
movsl
push
lcall
aaa
stos
aam
mov
mov
pushf
inc
in
leave
subb
andl
pusha
or
test
pop
jge
cld
stos
jl
addr16
pop
lock
cli
in
mov
pop
insl
adc
jmp
mov
movsb
ficompl
jl
icebp
clc
sbb
sahf
cmp
push
mov
mov
sbb
out
add
mov
in
out
es
sub
mov
lock
andb
arpl
mov
mov
add
adc
jae
inc
dec
rclb
xchg
hlt
sub
rol
adc
sub
cmp
jp
sbb
cmp
dec
lds
adcl
stc
mov
aaa
cs
testb
push
je
daa
fcmovnbe
popf
jecxz
fdivrl
aaa
mov
test
mov
mov
subb
adc
fucomip
arpl
jg
jae
pop
cltd
scas
mov
sbb
fdivs
mov
rcrl
aad
imul
int3
push
imul
dec
jmp
mov
inc
out
pop
sbb
cmp
add
insl
lcall
test
pop
jb
sbb
es
mov
jae
decl
icebp
lock
fucom
sub
dec
cmp
dec
sub
mov
lahf
mov
adc
jbe
mov
xchg
and
dec
outsl
je
cmp
insl
lods
or
adc
in
jmp
push
and
cs
push
inc
out
cltd
std
sub
lret
shl
adc
sar
ljmp
inc
daa
mov
ljmp
sub
fcoml
or
mov
call
rorb
push
adc
pop
jnp
shl
xor
imul
dec
push
sbb
in
sub
sbb
insl
cwtl
push
xchg
pop
loopne
sub
ss
mov
jb
sub
pop
add
data16
repnz
cmp
add
and
xor
jns
push
jg
and
decl
pop
out
inc
shrb
rclb
jno
xorb
pop
cmp
in
das
fists
push
add
pop
test
xchg
enter
cmpl
pop
cmp
lea
insl
arpl
xchg
mov
je
jns
sti
nopl
inc
daa
shrb
pushf
lock
fidivrl
shrl
xchg
inc
dec
and
dec
mov
dec
mov
lods
cmpsl
jg
paddq
pusha
shl
imul
call
clc
int
dec
cld
in
outsl
mov
sub
psadbw
jae
cmp
mov
jo
sbbl
xchg
testb
sbbb
sbb
mov
jmp
adc
xor
and
cmp
out
mov
or
daa
cmp
mov
and
hlt
mov
sbb
mov
or
dec
bound
test
fwait
adc
int3
sbb
xchg
jns
or
lahf
pop
inc
xchg
sbb
out
jg
adc
out
cmp
sbb
aad
xor
fwait
daa
xor
jns
pop
popa
mov
std
clc
fcmovnb
in
dec
loope
ss
push
ds
push
xor
mov
mov
ljmp
inc
sub
and
arpl
pop
lret
mov
lcall
test
mov
aam
jmp
loopne
sub
mov
inc
adc
insb
xor
adc
sti
inc
test
ljmp
inc
xor
dec
add
mov
scas
jle
jle
jo
xchg
cmp
fdivl
call
pop
dec
in
outsl
ljmp
enter
xchg
test
inc
loope
jmp
ret
fwait
or
jbe
push
push
pop
cmp
or
std
mov
xchg
rol
cltd
jecxz
sbb
mov
jnp
jne
stos
sbb
or
out
mov
xor
pop
mov
bound
pop
test
cs
lret
pop
shll
leave
xchg
imul
cmpsb
outsb
jl
xchg
cmpsl
cwtl
push
jecxz
jge
cmc
out
mov
mov
andl
dec
xor
adc
mov
xlat
mov
dec
fimuls
mov
sarw
pop
cmp
inc
mov
xchg
dec
pop
cmp
in
hlt
arpl
ret
ds
sbb
aas
or
addl
repnz
and
js
addr16
clc
mov
daa
loopne
fsin
or
testl
add
cwtl
lods
int
add
test
push
cwtl
lret
sub
rcl
pop
or
addr16
dec
jmp
jns
sub
insl
cmp
cwtl
divb
insb
and
outsl
mov
dec
inc
pop
aas
pop
andb
movsl
push
mov
xchg
pop
jp
xchg
decb
lret
inc
add
push
sub
mov
rep
adc
cmp
dec
movsl
shrb
mov
ss
ss
daa
mov
inc
pop
jbe
mov
jmp
in
out
repz
call
and
mov
out
mov
in
mov
pop
inc
mov
and
lret
dec
fdivs
dec
jbe
enter
aam
dec
lret
scas
insb
pop
orb
pop
inc
mov
mov
xchg
fidivrl
pop
or
or
inc
mov
push
fstps
cmp
fisubrl
sbb
pop
push
mov
test
pop
enter
adc
sbb
push
mov
imul
and
xchg
aam
lcall
aad
add
outsl
call
mov
outsl
popf
xor
sub
mov
aad
dec
dec
pop
dec
mov
lods
add
out
cmpsl
add
and
pusha
movsl
mov
xchg
mov
mov
insl
mov
test
cmpsb
cltd
addl
lret
mov
rorl
outsb
mov
jno
and
push
push
or
cwtl
lahf
adcb
cmp
test
xchg
outsb
push
test
incb
jbe
push
or
cltd
jl
jle
leave
idiv
push
insb
test
pop
xchg
mov
xor
daa
pusha
dec
ds
pop
mov
mov
mov
mov
aam
mov
aaa
in
jp
push
adc
sahf
jle
mov
mov
je
sbb
cli
or
or
aas
js
mov
sbb
loopne
int
pushf
icebp
and
sub
xlat
mov
push
cmp
lods
pop
pop
dec
adc
pop
loop
pop
jl
push
push
in
outsb
mov
nop
mov
xchg
inc
sub
popa
mov
mov
scas
pop
dec
sbb
pusha
push
stc
mov
add
pop
mov
jbe
and
mov
fcompl
push
jb
sahf
out
mov
mov
icebp
mov
adc
loopne
pop
xchg
inc
sub
aam
mov
movsl
lret
dec
mov
cmp
popl
adc
lods
and
cmc
in
xor
jbe
imull
shl
sbb
or
icebp
fwait
cmpsl
jp
dec
sub
enter
iret
das
insb
or
push
pop
mov
sahf
sarl
addr16
add
mov
push
fmull
sahf
arpl
cld
sbb
int
int
scas
loope
mov
xor
cmp
or
xor
jae
xor
xchg
into
inc
xchg
add
xor
repz
cmp
sub
mov
jb
lret
push
jb
jmp
pop
cmp
aad
pop
fmull
lret
inc
js
ret
push
pop
in
loope
mov
fisttps
call
lret
add
shll
dec
test
or
pop
and
jge
int
mov
loope
sbb
cmpsb
push
shrb
mov
dec
decb
jmp
pushf
leave
mov
mov
sbb
clc
jb
fstl
jne
xchg
mov
iret
mov
push
mov
adc
xchg
insl
mov
lcall
shlb
fcmove
sub
jmp
out
fsubl
mov
mov
shlb
jmp
pop
mov
sub
addl
xor
push
mov
cmp
sub
mov
dec
test
mov
cmp
sar
sti
pop
jge
ror
and
call
add
mov
popl
or
das
add
pop
test
adc
lods
xor
mov
xor
xchg
xchg
xchg
aas
pop
rcrl
lahf
mov
daa
cmpsb
ljmp
inc
adc
jle
dec
push
pushl
mov
or
fildll
jbe
lcall
lods
cmc
imulb
fs
fwait
push
divl
fdiv
dec
aaa
pop
add
leave
ret
scas
cld
adc
stos
or
xchg
push
cmp
sub
bound
mov
mov
lea
mov
jo
nop
inc
push
lods
loopne
xor
nop
arpl
inc
fstpl
mov
enter
mov
push
fcmovu
insl
iret
fcmovnbe
xchg
out
dec
cmp
ja
loope
dec
pop
add
lahf
inc
push
and
dec
lea
mov
cli
jne
push
ljmp
inc
out
cmp
out
out
push
in
lock
jne
push
out
push
outsb
xor
add
std
imul
pop
pusha
testb
ret
cli
jne
push
out
in
adc
fnstsw
cmpsl
xor
jl
mov
int
inc
or
lcall
test
nop
xchg
aaa
xchg
add
mov
inc
cs
xor
mov
xor
push
pushl
fcom
or
inc
leave
push
pop
mov
fcmovnb
lret
inc
cmp
inc
pop
jns
faddl
fildll
or
mov
mov
outsb
cmpsl
les
mov
inc
addr16
push
mov
cmpsl
lahf
sub
mov
jle
les
xchg
lret
push
and
pop
sub
jb
inc
dec
cli
mov
bnd
cs
mov
test
mov
imul
mov
inc
mov
gs
cmp
jg
cwtl
inc
cltd
repnz
sub
je
jmp
hlt
popa
out
or
mov
pushf
sbb
mov
icebp
dec
cmp
cmpsl
insb
imul
cld
pop
js
shrb
lcall
dec
lret
leave
mov
xor
cmpsl
shll
cmp
cmpl
out
cltd
enter
xchg
mov
push
cmpsb
call
stos
pop
call
add
push
ljmp
mov
add
xor
jbe
xor
dec
neg
int3
sbb
xor
js
repnz
push
cmc
loopne
sub
jp
sub
push
xchg
les
mov
mov
mov
daa
aad
sbb
aaa
mov
or
inc
pop
aam
cmpl
mov
cwtl
test
mov
jp
add
shll
in
out
xor
adc
cltd
in
lock
pop
mov
fsts
mov
test
fsubs
sbb
dec
add
scas
dec
ljmp
out
mov
pushf
mov
jns
je,pn
insb
int3
pop
or
cmpsl
repnz
inc
rorl
pop
jo
push
sbb
in
je
push
iret
xchg
imul
aam
lods
in
push
repz
test
movsb
mov
bound
push
dec
sahf
test
dec
int3
mov
xlat
push
xchg
pop
in
out
movb
popf
inc
jl
test
xor
sub
pushf
push
fsub
xchg
xchg
iret
inc
fcmovnu
add
xchg
lcall
ljmp
pop
mov
and
xchg
sti
inc
pop
jmp
lret
lahf
adc
inc
ror
jmp
add
mov
add
in
inc
mov
test
insl
arpl
push
in
mov
lods
pop
cld
mov
arpl
cli
out
xor
scas
and
jl
std
rcr
jb
jle
adc
sar
push
xor
aas
loop
ds
inc
in
enter
sub
test
or
mov
test
and
inc
in
dec
dec
push
in
or
dec
xchg
mov
and
test
mov
mov
dec
shlb
pop
push
loop
or
fsubrl
jecxz
fnstsw
cltd
out
fnstcw
pop
xchg
dec
cld
inc
push
pop
imul
xchg
pop
mov
mov
sahf
in
out
out
fidivrl
add
dec
add
or
jmp
sbb
push
pop
loopne
adcl
out
or
mov
shrb
inc
dec
mov
jno
jmp
pushf
xor
in
xchg
or
test
or
xorl
out
bound
insl
push
push
jne
nop
mov
cwtl
fimuls
add
cmpsl
fimull
jge
push
test
push
ds
cmc
insl
jae
sub
mov
cli
int
aam
inc
mov
mov
shll
adc
fwait
mov
fldenv
jecxz
test
mov
inc
and
inc
sbb
and
shlb
sub
mov
jo
repnz
pushf
pop
outsb
push
rclb
xlat
push
mov
pop
xchg
sbb
or
xchg
xchg
push
adc
popa
push
sbb
push
add
xor
stc
aaa
cmpb
and
in
cmp
xchg
xor
cmp
dec
jb
out
dec
jns
imul
outsb
aad
lds
imul
andb
dec
pop
mov
orb
repz
nop
fnsave
jnp
add
test
movsb
jecxz
inc
adc
test
and
addl
lods
adc
dec
xchg
xchg
cli
in
xchg
xor
cmpsl
fildll
ljmp
xchg
mov
cmpsb
jo
mov
insb
loopne
mov
jno
xchg
insl
cs
dec
and
cwtl
and
xchg
xor
mov
mov
ljmp
jle
rcrl
push
pop
int
jb
mov
push
int3
push
push
sub
jnp
cmp
mov
mov
loopne
int3
pop
adc
dec
xlat
cltd
sbb
test
mov
add
aaa
stos
cmp
stos
push
mov
es
and
js
imul
call
mov
subl
fadds
aad
scas
mov
inc
mov
sub
dec
mov
adc
dec
outsl
loop
push
push
nop
out
je
sbb
lods
imul
pop
adcl
sarb
and
inc
jne
js
aaa
in
dec
jp
dec
gs
mov
sbb
cmpsb
sbb
lock
sbb
and
pusha
loop
cld
push
mov
sub
outsl
xchg
and
inc
stc
xor
xlat
mov
add
and
xchg
test
call
sub
inc
mov
fnstcw
incb
push
aas
xchg
push
and
cs
repnz
dec
fs
pop
cmp
lret
stos
cltd
repz
into
pop
xchg
fmul
push
call
xor
pop
push
std
jbe
and
sub
mov
dec
jne
push
rcll
out
js
clc
shrb
adc
imul
adc
jns
jns
test
sbb
in
mov
pop
dec
sbb
jl
repnz
jle
jno
dec
and
pop
cmpsb
stos
aad
std
sub
stc
and
mov
ss
mov
xor
pop
cmp
sahf
test
sbb
xor
outsl
jo
dec
outsl
cmpsb
fstpl
subl
dec
out
mov
dec
lock
add
incb
lcall
scas
jno
jb
je
xchg
sub
inc
mov
es
sub
sbb
lcall
divl
xchg
scas
imul
dec
and
ss
stc
cltd
ret
orb
sti
mov
and
fstl
mov
fcom
pop
mov
sub
and
pusha
add
adc
jl,pn
mov
lahf
xchg
sbb
mov
out
lret
add
movsb
fnstsw
push
je
filds
les
xchg
cmpsl
les
pop
fs
sti
cmp
cmpsl
xchg
adc
insl
mov
jns
in
xchg
lret
popf
jbe
xor
mov
pop
std
push
jnp
movsl
sti
sarb
push
cmp
in
xor
scas
stos
nop
mov
xchg
adc
xchg
pusha
hlt
sub
pop
iret
push
rolb
mov
pop
push
test
inc
scas
dec
dec
sbb
test
and
sbb
dec
aas
jmp
xchg
xor
scas
jnp
ds
pop
ja
ja
lahf
stc
cmp
cmpb
sbb
daa
pop
iret
mov
cmp
sbb
enter
nop
cwtl
xor
test
fwait
adc
lret
sbb
add
lcall
and
xor
test
adc
jecxz
mov
push
in
int3
inc
rcrl
mov
mov
lret
js
movntq
out
jmp
fwait
push
fisubrs
pop
fcompl
or
out
inc
jo
aad
cmp
cmp
mov
iret
ds
inc
test
and
adc
jnp
sub
sbbl
mov
sub
add
inc
cmp
addr16
lds
jne
and
fildl
sahf
out
ja
lahf
adc
shll
sub
push
mov
sbb
jo
xor
jmp
imul
sub
pop
mov
imull
movsl
div
sub
cltd
pop
test
inc
xchg
andl
sbb
mov
push
inc
cmp
inc
or
xchg
dec
push
out
or
imul
out
jecxz
iret
ds
pop
mov
imul
push
cmpsl
outsl
mov
mov
mov
sub
jmp
roll
and
mov
or
dec
mov
sbb
aas
fadds
push
adc
fidivrs
lret
repz
cld
lods
push
push
xor
movsb
es
test
pop
push
cltd
mov
sbb
xor
push
hlt
pusha
mov
mov
mov
xchg
pusha
push
adc
jecxz
jbe
sub
test
adc
mov
or
pop
mov
das
sub
outsb
lret
lahf
cltd
inc
lods
orl
sub
jne
stc
mov
cmp
movsb
jmp
mov
test
xor
push
inc
int3
add
xchg
rclb
and
mov
dec
mov
mov
dec
scas
add
and
sahf
int
aaa
clc
arpl
cmp
test
xchg
adc
inc
in
mov
xchg
xor
ret
sbb
ret
movsb
jge
aaa
inc
dec
xchg
sbbl
loope
dec
leave
and
jmp
sbbl
cld
stc
sub
sarl
imul
lcall
insl
push
mov
cmp
lcall
pop
lock
nop
movsl
popa
pop
mov
xor
and
mov
into
bound
js
adc
lcall
push
dec
mov
divb
sbb
js
nop
js
xchg
jno
dec
mov
xchg
aam
dec
sub
pop
subl
mov
dec
pop
pop
shr
add
loope
and
jb
mov
mov
fucomi
pusha
inc
mov
sbb
pop
xor
mov
addr16
loope
movsb
adc
mov
inc
mov
iret
loopne
push
test
adc
and
jmp
loopne
ljmp
out
xchg
mov
cmpsl
jb
mov
std
pop
fldl
int
dec
imul
or
sub
jno
fimuls
out
dec
sbb
pop
add
mov
out
ja
cmp
idivl
pop
pusha
repnz
es
pushf
inc
and
rcr
iret
inc
jnp
sub
cmovp
dec
pop
dec
subb
les
lods
dec
lret
jmp
lahf
pop
add
push
push
add
push
jg
inc
lahf
in
test
dec
pop
push
cmp
mov
andb
lahf
es
xchg
xchg
loopne
or
lea
sahf
sti
xchg
pop
jno
adc
mov
dec
jecxz
jae
cmp
jecxz
mov
decl
or
mov
movb
popf
pop
push
inc
sbb
sbb
imul
rclb
ret
aas
and
arpl
sbb
xchg
pop
ds
jecxz
lds
aaa
sub
push
hlt
std
fnstenv
mov
and
add
cmp
jecxz
lret
pop
enter
mov
push
pushf
adc
jno
std
dec
inc
repnz
push
stos
mov
inc
std
pop
dec
pop
jmp
pusha
xchg
test
in
push
cli
lds
mov
sti
imul
cwtl
mov
adc
enter
pop
fmull
push
stos
xchg
push
cmp
js
jl
mov
jp
xor
inc
dec
dec
clc
push
mov
rcrb
jl
mov
rorl
shlb
sub
push
mov
mov
cwtl
jmp
xchg
sbb
mov
mov
push
or
icebp
popw
inc
out
pop
stc
and
std
mov
gs
pop
cmp
jbe
orl
out
push
fst
jmp
js
out
hlt
pop
in
cmpsl
pop
adc
xor
and
adc
mov
add
mov
jle
mov
insb
lds
loope
fsubr
xchg
xor
push
inc
es
std
push
pop
jge
lods
aam
sbb
sbb
push
rcrl
xchg
xor
ffree
cmc
andl
sub
imul
cltd
mov
enter
jp
gs
sahf
hlt
test
subb
mov
jl
movsb
fucomi
call
jo
xor
loope
pop
xchg
bound
jmp
jmp
sbb
mov
cwtl
adc
push
jle
dec
je
pop
mov
mov
pop
sub
mov
and
inc
leave
dec
stc
stos
sub
inc
insb
add
inc
test
lock
call
jbe
add
int3
mov
and
cwtl
mov
andl
mov
aad
push
xlat
push
cmp
pushf
es
cmpsl
cmp
and
mov
in
jge
out
dec
out
sbb
cmpsl
subb
or
loop
cli
fabs
mov
adc
out
xlat
out
into
aad
push
jno
inc
push
mov
push
jnp
aas
shll
pushf
das
flds
push
arpl
jbe
loopne
cmp
jno
sbb
and
cmpsl
rcll
pushf
inc
aad
mov
psraw
push
stc
pop
and
inc
mov
push
adc
int3
jo
pop
nop
lahf
mov
push
rdpmc
mulb
push
pop
adc
enter
pop
sti
stos
dec
jle
pop
push
ror
ljmp
inc
xchg
in
pop
dec
add
iret
out
imul
movsb
pop
repz
idivl
cmpsb
orb
xchg
mov
rcr
cmpsl
mov
and
inc
jae
jne
or
cli
sbb
repz
jae
pop
sub
push
je
movsb
mov
fsubrs
xor
jecxz
pop
inc
pop
ljmp
mov
mov
out
jmp
stc
dec
fsubr
mov
nop
icebp
in
push
ret
adc
mov
dec
push
icebp
jmp
lea
sbb
orb
sahf
xchg
repnz
or
dec
sbb
lea
xor
mov
scas
dec
pop
and
es
mov
repz
mov
adc
arpl
cli
loopne
jl
add
adc
mulps
ds
in
xchg
lret
das
imul
out
into
mov
roll
cmp
fwait
or
aaa
in
sbb
jbe
sub
nop
inc
divb
cmpsb
stos
cmp
jmp
int
cli
out
shll
xchg
mov
jle
scas
jno
pop
imull
inc
fcmovb
inc
adc
test
push
fisubrl
mov
insl
pop
xchg
xchg
xor
xchg
sbb
xchg
xor
mov
cwtl
cltd
mov
sti
mov
std
out
inc
mov
mov
stc
mov
mov
jne
sti
or
xchg
mov
sub
into
shl
xlat
pop
js
lea
or
das
mov
test
sahf
dec
insl
dec
aaa
or
sarl
dec
loope
cmpsb
insl
daa
aas
sti
jb
loope,pt
dec
jb
adc
and
imul
xor
add
jge
inc
push
xor
movsb
sbb
pop
mov
and
cs
aaa
sahf
addr16
cmp
xchg
cltd
push
cli
inc
or
scas
xchg
aam
push
test
jmp
sub
aaa
leave
sti
inc
xchg
sbbl
loop
push
cltd
mov
mov
arpl
mov
add
cli
mov
pushf
pop
push
mov
inc
push
les
cmpl
jne
add
insl
mov
je
les
sbb
adc
or
adc
pop
cmp
int
or
xchg
push
xor
inc
stos
cli
adc
push
sub
cmpsl
inc
andl
pop
sbb
les
dec
pushf
sbb
lcall
mov
adc
rclb
in
enter
mov
push
in
adc
mov
xor
xor
dec
into
stos
jb
xor
pop
ficoms
push
adc
in
out
std
mov
and
cwtl
push
push
outsl
inc
inc
mov
add
mov
jo
xor
push
data16
jg
mov
sahf
pushf
fwait
mov
add
call
jecxz
mov
arpl
jg
add
fildl
es
outsl
es
cmp
or
mov
add
jmp
test
rcrl
fs
lods
inc
push
das
and
sti
lods
sbb
sub
daa
nop
nop
xor
popf
popf
xor
addr16
andl
cmc
cli
lea
mov
je
xor
cmp
mov
adcb
inc
xchg
aad
jae
adc
lcall
andb
stos
mov
push
inc
shlb
in
xor
mov
out
rorl
inc
mov
inc
mov
xchg
divb
ror
xor
stos
sbb
mov
neg
iret
pop
jl
sbb
test
test
pop
int
dec
mov
xchg
sbb
jb
cmc
or
jl
shrb
bound
repz
jae
inc
add
in
movsb
outsl
inc
mov
aaa
mov
jnp
ds
or
in
js
push
fisubs
ds
jge
fsubrl
jecxz
scas
cli
push
js
jl
push
leave
inc
mov
cmp
std
sub
pusha
push
sub
mov
sbb
dec
adc
nop
and
sbbl
mov
sub
fildll
fildl
aaa
push
ds
fisubs
mov
in
adcl
add
popa
push
sub
ja
jl
xor
pop
sbb
mov
jl
pop
fdivl
dec
mov
lahf
xchg
adcl
leave
sub
repz
iret
nop
xor
jmp
ret
lods
pop
ret
clc
lods
in
rolb
stos
mov
mov
stos
inc
cld
out
cmpsl
inc
cmp
shl
hlt
xchg
xor
mov
lods
cmp
add
lock
sti
add
sub
push
cltd
cmp
test
imul
jg
jns
inc
fsubr
cmc
sar
loopne
cmp
insb
out
inc
add
lahf
dec
aaa
push
movsl
xchg
lahf
mov
lcall
xchg
push
or
repnz
add
ret
in
pop
pop
xchg
and
fidivrs
inc
mov
popf
xor
lret
popa
push
and
lods
out
test
push
sti
test
jo
dec
hlt
xchg
mov
nop
add
dec
cwtl
jnp
out
xor
mov
or
ficoml
rolb
xlat
stc
push
sbb
movsb
into
push
mov
lock
test
jmpw
sbb
enter
lods
xchg
arpl
jno
mov
jg
xchg
mov
mov
and
in
lock
movsb
push
jmp
lret
addr16
jbe
pxor
test
repnz
sbb
push
jmp
jne
pusha
add
loopne
inc
repz
in
jecxz
lfs
test
mov
dec
stc
loopne
ret
icebp
cwtl
inc
test
mov
jnp
ja
push
push
out
in
das
loopne
push
icebp
push
adc
lds
cltd
add
test
out
mov
push
incb
jge
jnp
lock
xor
sub
xor
test
leavew
sbb
push
es
sub
mov
dec
stc
cmp
insb
push
test
frstor
xchg
pop
lcall
jbe
loope
jno
mov
pusha
lock
mov
test
or
movsb
int
jl
ja
std
stos
or
dec
lods
ret
push
dec
sbb
bsf
pop
mov
iret
stos
movsl
and
aas
inc
or
xor
add
mov
pop
js
ror
mov
ret
int
cli
iret
fwait
cmp
xorl
int3
repz
or
inc
gs
pop
sbb
daa
fcomp
xor
imul
pop
dec
dec
std
rorb
jle
jmp
addr16
sbbl
clc
ss
cs
jp
hlt
push
pop
push
cmp
jae
cmp
pop
aad
popa
jge
fnsave
jns
ja
or
jp
std
inc
ret
xchg
das
push
dec
cld
sar
sub
jbe
out
and
pop
jne
xor
loop
jnp
aaa
fistps
arpl
dec
add
inc
cmp
push
es
dec
fs
jg
push
jae
nop
jne
pop
daa
mov
scas
int
in
or
push
inc
mov
outsl
sbb
sbb
push
rcrb
les
incl
shrb
and
scas
inc
xchg
mov
out
je
push
aam
mov
mov
xor
adc
inc
push
push
push
push
popf
ja
shll
addr16
push
les
push
das
mov
dec
mov
jg
push
insb
sub
xchg
adc
jne
pusha
pop
scas
mov
mov
inc
cmpsb
jb
mov
add
cltd
cmc
mul
and
loop
jge
int
rcll
mov
in
imul
insl
mov
lret
fildl
in
sub
imul
push
out
xor
sub
cmp
ret
sub
fidivs
in
pop
jecxz
cmp
add
scas
adc
jg
sub
xor
insb
jns
pop
insl
leave
sbb
pop
fildll
and
fadds
sub
dec
dec
pop
call
jp
cs
lds
ljmp
cwtl
inc
pop
cmc
mov
fisttps
jae
jmp
mov
mov
push
mov
sub
adc
mov
push
or
jg
and
jnp
sbbb
jbe
shr
pop
or
shlb
outsb
mov
nop
push
aam
jns
flds
imul
icebp
les
test
sarl
sbb
jbe
jge
in
sbb
adc
hlt
mov
sbb
test
lahf
inc
ret
jmp
push
push
es
sub
or
mov
aad
lea
std
adc
aad
dec
in
pop
lods
add
cwtl
jmp
int
call
or
int3
sub
lahf
jecxz
rorb
sub
int
add
int
dec
jg
dec
rcrb
and
pop
fnstcw
nop
test
mov
sbb
jbe,pt
push
scas
rorb
into
jae
mov
fsub
push
xor
mov
loopne
jg
push
pop
repnz
cmp
pushf
repnz
std
inc
shll
xor
cmpsb
hlt
sbb
mov
fisubrl
cmp
mov
jne
cmp
mov
rcr
out
add
call
enter
adc
cmpb
push
mov
aam
adc
out
outsb
es
sbb
in
ds
lock
mulb
sahf
cmp
sub
push
mov
jge
in
fwait
int3
dec
jns
das
push
in
movb
mov
lds
iret
mov
gs
ds
rcrb
jo
or
mov
test
inc
fldt
stos
negl
jg
push
inc
lods
xchg
and
pop
cmp
pop
fsubl
cmpsl
in
pop
call
or
jge
cs
adc
or
test
call
push
sahf
cmp
aaa
fnsave
icebp
jnp
lods
in
stc
cmp
cmp
pop
mov
adc
ljmp
lcall
mov
lods
xchg
mov
cmpsl
les
pop
xchg
call
push
mov
scas
int
jns
push
cwtl
adc
fiadds
sti
shrb
inc
sti
jecxz
ret
adc
sbb
shll
push
cmpsb
mov
or
lods
jno
push
push
jbe
sbb
in
pusha
xchg
fs
js
loope
mov
loopne
pusha
in
cmp
or
cmc
cmp
xchg
in
adc
int3
xchg
sub
xchg
lds
lret
push
int
mov
mov
pushf
out
clc
rcl
xor
pop
scas
push
cmpsb
cmp
cmc
mov
mov
rcrl
fsubl
ret
and
lcall
xchg
push
mov
mov
adc
dec
imul
xchg
pop
pop
pop
cmpsl
daa
pop
xchg
mov
sub
ret
xor
loope
dec
lret
inc
pop
imul
add
sbb
mov
into
adc
mov
pusha
mov
cmpl
lcall
jo
das
imul
sar
pop
adc
int3
cmpsb
out
mov
dec
mov
clc
and
lcall
inc
inc
xchg
pushf
adc
inc
cmc
mov
inc
shll
outsl
jb
dec
mov
ss
aam
pop
cmc
xchg
sti
mov
cld
rcl
xor
sub
push
sub
fs
sbb
xor
or
sahf
sub
add
enter
mov
push
lret
adc
pusha
outsl
ret
mov
cmp
inc
leave
push
or
popf
pop
mov
inc
push
inc
push
lds
mov
inc
mov
adc
jmp
or
scas
lock
fistl
fsubs
jne
loopne
jge
nop
aam
aaa
cmpsb
int
arpl
push
loopne
xor
aaa
ret
mov
adc
push
stos
pop
cwtl
jbe
jno
mov
repnz
aam
rorb
xlat
inc
insl
xchg
enter
add
sbb
cmp
add
jp
push
sarl
sahf
test
lods
cld
out
js
sub
ja
or
cmp
push
adc
rcrl
adc
mov
ds
pop
std
test
pop
adc
add
adc
mov
stc
fmul
sti
push
aam
loopne
lock
stc
inc
lcall
add
imul
xchg
xor
cli
push
jl
enter
out
je
mov
je
add
lock
cmpsl
xchg
fcompl
pusha
int
mov
insl
inc
inc
sbb
xchg
sbb
inc
mov
push
les
out
xchg
leave
mov
in
jb
sub
dec
mov
pop
fwait
xchg
icebp
lcall
test
lea
in
push
out
dec
cld
in
stc
stc
sub
enter
cltd
xor
xchg
push
in
hlt
lahf
xchg
dec
xchg
les
lahf
inc
inc
hlt
mov
mov
pop
or
mov
mov
jne
or
push
mov
inc
ja
push
icebp
or
test
or
lods
pop
inc
jae
mov
pop
scas
sub
orl
pop
gs
call
shll
mov
inc
xchg
mov
lods
call
loopne
add
xor
xor
cmp
gs
dec
xlat
int3
int3
lods
push
bound
jp
dec
stos
rolb
xor
adc
icebp
rolb
adc
imul
addr16
add
mov
push
cmpsl
rclb
fwait
hlt
jno
pop
aam
jmp
and
mov
xchg
loope
outsb
in
mov
test
push
popa
addl
sbbb
cmpsl
adc
mov
dec
nop
fcmovnb
xor
push
add
and
dec
adc
push
pushf
ljmp
cltd
out
imul
fsubs
add
scas
cmpsb
and
cmp
imulb
imul
inc
fs
enter
stc
jo
or
loope
sbb
jnp
subl
data16
adc
inc
sub
aaa
cltd
js
sbb
call
dec
insl
js
fimuls
aad
adc
movsb
outsb
push
in
pop
cmpsb
in
cmc
jmp
mov
jmp
push
bound
imul
sarl
xchg
nop
mov
sbb
xchg
jnp
sahf
push
xor
pop
push
push
and
addr16
sarb
sbb
mov
int3
mov
push
into
in
fcoml
cmp
xchg
sbb
cmp
dec
pop
cmp
xlat
mov
mov
push
mov
arpl
pushf
in
stc
lret
cmp
mov
sub
data16
imul
or
call
and
or
sarl
rclb
in
enter
loope
cltd
inc
cltd
pop
add
stos
mov
mov
and
xchg
pop
sub
mov
lods
aam
push
dec
shr
mov
stos
lds
jmp
ret
mov
int3
fdivl
push
cmc
xchg
xchg
sub
xchg
insl
aas
jmp
js
inc
daa
nop
fldt
outsb
xor
mov
fs
add
sub
cmp
jo
push
insl
xchg
push
dec
aad
sbb
filds
mov
mov
test
out
fsts
sbb
mov
mov
cmc
mov
jp
xor
insl
jl
and
pop
shlb
mul
dec
jbe
sbb
les
mov
in
daa
shlw
hlt
pop
daa
dec
fimuls
adc
xchg
roll
jno
mov
push
rcl
xchg
mov
adc
ja
scas
cmp
popa
and
inc
mov
sub
push
ror
adc
or
inc
or
inc
push
movhps
mov
fimuls
sub
fmul
mov
filds
insb
fwait
cwtl
xchg
into
je
xchg
mov
loopne
negl
in
clc
push
sub
or
adc
or
push
adc
push
mov
mov
mov
lret
scas
pop
mov
std
fs
sub
es
mov
sub
das
out
out
cmp
mov
or
mov
movsb
cli
out
inc
pusha
in
aas
cmp
fsubrl
call
pop
iret
xor
les
mov
push
xor
pop
stos
sbb
sub
clc
xchg
fs
pop
sbb
divb
lahf
pop
mov
jl
int3
emms
in
mov
fistpl
and
pop
jecxz
fsubrl
dec
in
pop
adc
dec
xchg
sub
jecxz
lahf
mov
gs
popf
lods
mov
pop
inc
sbb
leave
fs
push
lcall
sub
lahf
sub
mov
shll
sahf
push
xlat
cmc
xor
stos
pcmpeqw
push
mov
add
lock
push
push
fisttpl
pop
lcall
icebp
mov
lahf
inc
cwtl
scas
aaa
mov
leave
mov
scas
subb
mov
lock
in
push
cltd
out
mov
mov
rorl
push
rorl
adc
or
repz
xlat
mov
mov
push
cwtl
add
test
cmp
iret
jl
aas
out
mov
ret
xchg
dec
fsubrp
dec
xchg
dec
or
cmp
mov
in
cmpsb
stos
cld
mov
jmp
aad
pop
inc
mov
mov
and
push
aad
push
outsl
cmp
mov
push
inc
xchg
and
jle
hlt
jg
movsb
repz
xor
in
mov
ret
int
shrl
ds
lods
data16
push
pop
dec
cmp
push
jns
add
outsb
test
mov
inc
pop
fmuls
dec
dec
leave
pop
add
and
add
in
popf
inc
sub
ds
hlt
and
enter
or
adc
or
inc
jo
leave
mov
test
or
inc
sbb
mov
inc
in
push
out
mov
lock
imul
dec
or
mov
imul
stc
jb
shrb
es
pop
mov
cmp
sbb
fisubs
daa
pop
dec
or
lock
aas
lret
lcall
movsb
loop
xchg
mov
pop
out
and
and
inc
cmp
sbb
mov
sub
push
jae
fdivrs
mov
test
sti
xchg
xor
cmp
test
fstpl
mov
mov
or
mov
fistl
leave
pushf
dec
les
pop
jp
test
pop
in
fisttpll
add
rol
and
sub
xchg
sti
ds
and
fcoms
dec
dec
adc
ret
icebp
cmp
ret
dec
out
ljmp
or
les
dec
dec
xchg
push
aaa
movsb
push
mov
jne
jl
aad
leave
lds
adc
dec
rorl
loopne
popf
aas
cmp
insb
sti
ret
add
cmp
and
sbb
stos
sub
das
enter
inc
movsl
orl
xchg
mov
lahf
or
xor
ja
lahf
lods
testb
mov
out
push
jae
xor
jmp
push
mov
bound
mov
xchg
mov
inc
adc
aas
mov
xor
pushf
stos
sub
lret
loop
mov
jns
xorl
fsubl
xchg
xchg
xor
popa
pop
out
aaa
pop
inc
inc
mov
mov
ja
mov
inc
mov
sub
sbb
lret
adc
cmp
shl
pop
repz
pop
das
fld
fcomps
mov
cmp
jo
and
cmp
imul
or
or
sbb
sub
out
mov
in
adc
jo
and
stos
in
jle
stos
or
or
push
es
rorb
jle
repz
in
pusha
mov
sbb
dec
ss
fs
jge
scas
js
jp
ss
dec
dec
movsl
ret
daa
test
push
ret
jmp
hlt
mov
jb
movsl
out
pop
jae
cmc
mov
push
mov
and
sar
test
push
js
sti
sahf
bts
dec
push
hlt
xor
cli
loope
cli
idivl
mov
notl
clc
inc
sbb
cmp
std
pop
push
cmpsl
and
mulb
adc
leave
outsb
pop
mov
xchg
mov
imul
jecxz
mov
popf
movsb
outsb
jae
repz
je
mov
jl
lock
add
dec
dec
enter
in
xchg
adc
in
xchg
sahf
lock
ret
lds
pushf
mov
push
xor
addr16
adc
xorb
dec
and
into
xor
int
or
andl
movsb
ja
outsb
inc
sub
das
mov
loopne
inc
pop
xor
fadd
fidivl
ja
or
jo
sbb
push
xor
xor
dec
push
les
out
jmp
cld
fisubs
lret
sub
imul
imul
fcomi
rol
insl
repnz
int
mov
jmp
leave
cmp
cmpsl
shr
sbb
push
jae
lods
fisttpl
ja
cmc
sub
mov
mov
or
cmp
mov
negb
ss
bound
sbb
lds
xor
mov
test
sub
push
jne
test
loope
inc
push
fldcw
mov
fwait
std
popf
add
ljmp
aaa
and
sbb
cmpsl
and
jmp
pop
mov
and
xchg
sahf
push
mov
adc
push
sub
fxch
pop
out
and
cmpsl
and
popa
test
packssdw
insb
cs
and
jle
notrack
leave
andl
jge
movsb
int
sub
sahf
mov
pusha
adc
add
in
arpl
or
push
daa
psllw
popa
stos
jne
cmc
fcomi
movb
inc
mov
jp
push
or
mov
cli
push
pushf
dec
dec
dec
lcall
gs
les
mov
stc
cmp
adc
mov
jecxz
cmp
push
in
fldenv
cmp
xchg
fdivrs
in
sub
imul
xchg
and
adc
ljmp
insb
sarl
idivl
jmp
shl
push
xor
mov
rorl
arpl
and
mov
push
jno
jmp
cltd
adc
and
call
jnp
outsb
inc
pushf
sbb
xchg
mov
les
xor
outsb
dec
xor
stc
je
repz
cld
mov
xchg
hlt
ret
sub
pop
push
into
and
sbb
xor
out
and
scas
mov
push
ret
dec
mov
xor
xchg
cmpsl
sbb
movsb
fiadds
fs
loop
les
dec
push
push
fs
or
mov
aas
adc
adc
sbb
imul
and
xchg
nop
call
pop
cwtl
mov
fiadds
stc
arpl
arpl
xchg
and
sub
push
mov
xor
jnp
cmp
fldl
stos
lret
inc
jge
fisubrl
adc
fs
jmp
xchg
cmp
xor
decb
jle
cs
xchg
fsubrl
pushf
addr16
outsb
cld
push
xor
fcos
lret
rcl
mov
add
push
add
cmpsl
and
fsubl
loope
xlat
cltd
test
or
inc
lock
xor
adc
test
pusha
sub
mov
sub
inc
fs
movb
mov
xchg
test
mov
push
test
aas
rcll
pop
ja
jbe
repnz
pop
mov
dec
aam
xchg
sub
pop
push
pop
xchg
pop
push
sti
jle
cmp
insl
mov
movsl
mov
xchg
and
jp
and
lods
pop
mov
pop
jnp
aad
leave
add
and
xchg
sbb
and
cld
sbb
push
xor
dec
loope
mov
filds
push
cmc
aaa
sahf
xor
nop
lret
mov
cli
ds
sub
push
ror
inc
xchg
pop
pushf
dec
adc
aas
pop
insb
loope
fistpll
rclb
divb
loopne
mov
inc
push
adc
adc
xchg
out
jns
push
test
or
sbb
xor
xchg
xorb
sub
xor
fcoml
and
out
sahf
lret
xchg
andb
mov
pop
idivl
inc
das
jle
pop
fisubs
test
lds
arpl
cmp
inc
push
or
idiv
call
call
stc
ja
leave
in
fwait
adc
jae
mov
add
lds
inc
dec
push
sti
or
or
es
scas
lods
icebp
xchg
jno
xchg
jle
cld
fstpt
dec
mov
pop
pop
neg
in
ret
int3
bound
cld
mov
jp
dec
sub
push
hlt
xor
data16
scas
xor
shll
and
aas
xor
enter
mov
insb
scas
xlat
dec
jbe
mov
or
or
pop
pop
iret
in
mov
mov
hlt
pop
hlt
xlat
mov
dec
loope
call
jno
xor
hlt
jo
or
dec
cmp
sub
daa
call
test
or
jns
outsl
or
in
stc
testb
lods
lds
xchg
cmp
cld
insl
test
xchg
jbe
jnp
daa
ret
xor
jns
dec
in
dec
aad
inc
or
out
nop
mov
xchg
cmp
out
or
stos
ret
ret
mov
movsb
fcmovbe
pop
jl
push
pop
pop
int
add
leave
push
shl
cmp
xchg
imul
shrl
fdivs
das
bound
out
mov
and
daa
push
rcrl
jmp
ss
mov
divl
cmpsl
adc
add
xchg
addr16
fs
insl
mov
pushf
in
lods
test
xchg
fs
lea
pop
pop
cwtl
shl
dec
jo
dec
push
mov
shrb
aas
inc
popa
add
insb
xorb
adc
sbb
ss
mov
push
pop
and
lcall
and
push
push
sbb
ficoms
cmp
test
push
ss
cmp
lods
rcll
and
cwtl
and
push
fsubr
jle
lret
add
jne
pop
mov
inc
lret
jo
aaa
xor
mov
dec
jmp
enter
ret
jo
inc
insb
mov
xchg
push
aaa
jnp
mov
mov
cmp
mov
shll
jp
das
pushf
pop
jo
ljmp
nop
aad
mov
nop
stos
nop
mov
cs
cmp
jecxz
pop
jecxz
stos
xchg
mov
xor
xchg
dec
cwtl
jl
adc
add
sub
addr16
cmp
sarb
xlat
pop
sub
push
add
cmpsb
pop
cli
aaa
aaa
mov
jecxz
mov
sub
push
mov
shrl
add
or
push
repz
inc
push
push
popa
shll
bound
jge
shl
mov
cld
cld
arpl
insb
daa
pop
adcb
push
push
dec
fisubs
xor
test
addr16
cmpsl
es
sarl
mov
or
es
dec
addr16
adc
xor
lcall
popa
mov
out
mov
andl
dec
rcrb
mov
pop
out
out
mov
xor
push
xchg
push
sahf
mov
lret
xchg
sbb
xchg
mov
adc
popf
jns
pop
cmp
mov
mov
adc
or
push
lret
je
shr
push
fcoml
add
sub
pop
je
cmp
cmp
mov
jno
cmpsl
fwait
adc
cmpsl
dec
out
sbb
call
mov
pop
adc
add
mov
dec
pop
inc
stc
into
jmp
add
push
pop
rcl
rorb
mov
int3
push
dec
outsl
sbb
adc
aad
jno
insb
dec
jns
or
sub
insl
xor
es
jo
push
sbb
rcl
sbb
pop
mov
xchg
adc
es
sub
fadds
shlb
lds
dec
inc
in
std
inc
dec
cmpsb
cld
cmc
jg
mov
es
push
mov
test
sbb
jbe
jns
or
int
in
mov
pushf
shrl
adc
loopne,pt
insl
stos
cmc
xchg
xchg
and
gs
push
int
into
mov
rorb
add
and
clc
test
mov
je
push
icebp
mov
sbb
inc
ret
cld
mov
insl
sbb
sub
adc
add
dec
cmp
adc
aam
pop
rolb
out
movsb
int3
xor
das
xor
pusha
subb
inc
mov
test
push
imul
mov
fadds
inc
cmp
pop
jo
lock
cs
jbe
sbb
fwait
insb
sbb
xor
ret
scas
cmp
dec
sub
jg
push
aam
cmp
cli
mov
mov
xor
movsl
cmp
mov
push
cmp
jl
mov
mov
fwait
popa
mov
cli
xor
lret
fs
pop
pusha
pushf
and
je
jge
pop
mov
lret
fisttps
jge
mov
cmc
dec
add
into
mov
push
push
jae
cwtl
std
mov
inc
fmuls
mov
outsl
dec
cmp
fistps
sub
pop
sub
mov
dec
inc
fwait
inc
jae
leave
jne
pop
enter
loopne
push
inc
xchg
push
sub
push
mov
sahf
or
sbb
jmp
cltd
sub
push
in
clc
subl
jb
in
sbbb
sub
jbe
and
xchg
mov
popa
cmpb
sub
shlb
xor
cli
xor
std
test
cmp
pusha
je
push
mov
movsl
pop
ret
adc
mov
mov
ja
rol
or
xor
es
xchg
cmc
rol
inc
push
ss
repnz
lret
push
xchg
jecxz
push
sub
jl
adc
gs
add
mov
ret
inc
cmp
aas
stos
jecxz
dec
mov
push
dec
dec
dec
dec
and
data16
cs
js
pop
mov
lods
ljmp
fs
push
or
mov
cmc
notl
in
add
mov
fwait
lods
sbb
popf
lret
sbb
sub
popf
pusha
cli
aad
das
addb
dec
aas
push
cmp
lods
fnstsw
ljmp
add
sub
lock
outsl
dec
fldenv
add
xor
mov
inc
add
in
adcb
inc
in
mov
adc
icebp
addr16
adc
cmpsl
out
test
pop
fnstenv
jge
xchg
or
dec
or
mov
rorl
aas
jnp
xlat
pop
fs
mov
cmp
jno
loope
in
jecxz
testl
pop
pushf
adc
xchg
jmp
sub
inc
imul
xchg
insb
out
jl
fwait
mov
sub
out
xchg
inc
mov
shlb
push
and
or
xchg
in
ret
insl
lea
cld
inc
or
stos
xlat
xor
or
dec
rorb
push
scas
fdiv
les
mov
or
push
int
push
mov
inc
pop
sbb
pop
or
cmp
mov
iret
faddl
faddl
dec
fwait
jl
fisubl
xor
inc
lret
lahf
push
out
fcomip
pop
shlb
mov
out
cmp
loopne
fidivrs
push
dec
fidivl
lcall
shlb
sub
sub
aas
scas
mov
out
pop
pop
inc
pop
or
jo
xchg
fstps
dec
and
add
adc
or
out
jnp
bnd
xchg
aaa
in
gs
push
cwtl
push
rcrb
pushf
and
xor
insl
stos
xchg
jl
ss
das
push
xchg
adc
or
cmp
push
addr16
lret
es
xchg
ljmpw
push
xchg
pop
call
addr16
mov
fwait
dec
cwtl
call
sahf
cmc
faddp
enter
mov
and
fucomip
decb
int3
dec
jo
enter
dec
pop
push
jne
cmp
dec
mov
jg
out
lcall
sub
or
mov
and
out
mov
fdivr
or
lret
push
push
lret
mov
add
dec
mov
gs
scas
sbb
sub
lret
push
and
jbe,pt
popa
jns
popa
outsb
and
inc
shr
push
mov
ret
jb
push
outsl
jne
cmp
push
xorl
fnstsw
in
inc
pushl
sbb
and
mov
xor
enter
mov
roll
jge
nop
push
ja
lock
adc
pushf
clc
xchg
jmp
lea
in
and
out
jmp
fwait
adc
sub
xchg
lret
imul
popf
hlt
sbb
mov
ljmp
inc
add
ret
mov
xchg
cs
pop
cli
xor
sahf
insb
xor
popf
dec
inc
fcomp
mov
mov
loop
test
popa
mov
rclb
mov
xchg
xor
nop
xor
sub
call
shrl
lea
int
dec
out
data16
test
movsb
pop
sub
mov
jg
loop
mov
testb
ret
std
xor
subb
mov
lock
add
lock
cltd
or
in
loopne
popa
jns
or
stc
call
adcb
fldt
jg
cmp
jo
int3
push
ficompl
mov
cld
mov
repz
in
adc
fmuls
pusha
ss
xchg
push
sbb
iret
or
xor
xchg
add
mov
dec
mov
es
fmul
fs
sbb
inc
sub
inc
and
adc
loopne
lock
nop
mov
jmp
pop
repnz
jmp
popf
dec
js
push
push
sbb
sub
cmpsl
mov
adcb
addr16
lock
cmp
dec
js
or
xor
mov
insb
lret
pop
mov
sub
enter
movsb
push
lock
mov
mov
in
dec
into
cli
sub
xor
mov
imul
imul
repnz
repnz
in
push
dec
iret
pop
arpl
int3
mov
cmc
call
adc
jmp
jl
sbb
xchg
xchg
jl
xlat
sub
dec
clc
inc
shrd
daa
add
add
sar
or
pop
andb
gs
cltd
hlt
xchg
subl
xor
mov
mov
and
cli
movl
mov
cli
mov
jns
xchg
cmp
add
scas
sbb
dec
out
das
inc
clc
cmpsl
notb
rcrb
or
mov
push
aaa
dec
pop
in
fwait
mov
xor
mov
shlb
cld
push
test
rolb
cmp
sti
stos
inc
movl
inc
or
sbb
xchg
imul
imul
add
push
bnd
xor
sub
pop
mov
xor
out
out
dec
xor
cli
ljmp
scas
jbe
lahf
mov
lea
jae
lods
fwait
xchg
jp
out
push
insl
add
loop
lods
pop
insl
fistpll
push
adc
push
outsb
mov
mov
cmp
inc
xor
sub
subl
lds
lret
inc
in
push
lret
test
mov
pop
pushf
sbb
rolb
push
adc
mov
mov
rcrl
loopne
mov
adc
aaa
imul
cmp
jge
sahf
and
pop
imul
pusha
ud2
fs
and
dec
in
sub
out
loope
out
ficompl
push
cwtl
mov
jne
mov
xchg
cmp
rol
pusha
and
es
jno
xlat
je
sbb
les
push
mov
pusha
dec
jbe
insl
pop
cmp
fmuls
das
jb
inc
loop
scas
mov
es
adc
sar
sbb
inc
jecxz
scas
cld
loop
mov
pop
jae
repz
fwait
iret
xchg
outsb
in
mov
lret
popf
adc
cmp
in
sub
inc
rcr
push
mov
in
out
imul
ljmp
mov
out
test
mov
lret
xlat
es
ja
loope
rorb
xor
pop
xor
repz
add
lahf
ja
repnz
es
dec
inc
push
in
fs
mov
mov
dec
and
sub
jne
mov
sub
inc
mov
jmp
ds
in
je
mov
loopne
push
bound
push
xchg
loopne
mov
mov
daa
lds
jg
arpl
lds
jae
jbe
add
pop
mov
jns
fisttpl
mov
fisubs
xor
adc
mov
pusha
push
push
mov
push
mov
sbb
or
mov
mov
jne
and
stos
pop
jb
cltd
mov
mov
and
or
dec
mov
fldt
dec
jmp
ret
je
mov
lods
loopne
out
mov
xchg
mov
mov
cmp
lret
enter
inc
mov
int3
mov
add
pop
insb
les
mov
mov
pop
xchg
sub
or
add
repz
sbb
sbb
xchg
insl
cmp
lahf
cmc
mov
sbb
int3
enter
lods
sbb
shlb
sub
mov
lods
jae
inc
add
mov
notb
adc
mov
lods
test
or
ss
mov
cmp
or
movl
loopne
repnz
stc
push
fstpt
mov
mov
jmp
mov
sbb
cltd
or
inc
inc
xchg
mov
add
lock
or
xchg
enter
mov
cmp
es
ret
add
mov
and
inc
push
sbb
push
xchg
cmpsl
test
dec
jle
adc
bound
and
and
sti
sub
imull
and
push
xor
fidivrs
aam
into
test
filds
inc
dec
outsl
xchg
jno
dec
sub
and
pop
pavgw
scas
cmp
inc
jne
mov
push
iret
loop
addr16
repnz
jmp
mov
xor
out
pop
mov
xor
dec
sbb
loope
lds
inc
loope
je
test
in
popf
test
mov
jmp
lods
testl
shlb
xor
stc
xchg
sub
xorl
test
mov
pop
mov
jo
imulb
push
mov
loop
inc
dec
loopne
icebp
jo
xor
cmp
mov
dec
mov
cli
lret
stos
xchg
data16
xor
dec
push
mov
jae
test
popf
add
pusha
add
sub
jge
clc
stos
not
scas
xchg
mov
lods
mov
cmp
sub
icebp
sub
dec
inc
fidivs
cld
or
addr16
iret
mov
out
add
orl
adc
xchg
jo
imul
scas
out
les
das
int
sub
in
bound
jb
cld
inc
mov
push
daa
jmp
iret
adc
add
jno
ja
xchg
hlt
push
je
mov
mov
outsb
pop
push
cmp
out
pop
je
add
es
test
mov
clc
cmp
xchg
fdivrs
push
fidivl
or
xor
or
and
pop
outsl
or
stc
pop
sub
pop
stc
cmpsl
shr
sbb
jae
repz
hlt
clc
jno
mov
insl
xchg
mov
xor
cmpsb
std
daa
es
fiadds
pusha
bound
inc
scas
fdivp
imul
inc
into
sbb
in
cmp
mov
out
shl
sbb
push
dec
mov
push
pushf
ror
xchg
or
out
sti
and
ss
dec
inc
fisubl
xor
mov
adc
je
loope
xchg
mov
inc
cmp
lret
push
pop
sub
cs
push
in
mov
popf
shl
lods
out
daa
pop
jnp
mov
int
loop
aaa
popa
xor
jo
and
pop
cltd
ss
int
push
cs
loopne
fsubr
ja
or
push
lcall
xchg
and
mov
addr16
mov
popa
push
xchg
push
push
stc
push
bound
in
adc
push
inc
sbb
hlt
mov
inc
les
jmp
iret
jbe
xchg
and
testb
pusha
or
orl
clts
fs
or
fildl
xor
outsb
lcall
mov
hlt
add
and
bnd
ds
mov
add
jp
xchg
sub
jne
aas
or
movsb
sbb
cltd
test
cmp
stc
sub
xchg
jb
adc
gs
adc
jl
jmp
mov
imul
decb
xor
fadd
addr16
rol
jae
stc
daa
fisttps
pop
in
mov
dec
scas
fmul
jl
xor
out
in
lahf
movsb
add
daa
dec
sbbb
pop
jno
mov
mov
popa
jo
adc
cmpsb
dec
outsb
movsl
iret
mov
ja
popf
sub
inc
push
xor
fs
xchg
insb
mov
or
pop
jo
int
inc
inc
notb
xchg
dec
outsl
inc
push
lret
xchg
test
fisubs
jp
cmp
or
sbb
xchg
mov
gs
scas
cmp
adc
fisubl
mov
and
sub
inc
push
stc
insb
push
pusha
fbld
mov
mov
stc
int3
jecxz
sbb
pop
inc
pop
nop
push
out
nop
xor
push
xchg
mov
mov
clc
arpl
dec
pop
rorl
inc
movl
test
stc
cmpsl
in
xor
call
clc
or
adc
or
xchg
das
xor
add
pop
stos
push
add
iret
rclb
data16
sub
addr16
rclb
cmc
rcrb
cmp
imul
hlt
cmp
sysexit
mov
inc
addr16
hlt
mov
mov
add
push
sbb
sub
add
add
push
mov
iret
addl
push
repz
andb
ret
and
sbb
rorl
in
lahf
hlt
stos
cwtl
in
mov
mov
shr
das
push
sbb
les
and
lea
sti
cs
mov
out
sub
imul
jge,pt
cld
imul
add
aas
lret
push
or
imul
sub
sub
ds
outsb
sbb
es
jns
dec
cltd
push
int
dec
pop
push
and
mov
aad
jmp
add
jb
xor
rcll
or
fcmovnu
jp
lock
fidivrs
cmp
nop
out
push
mov
jge
add
cs
imul
in
jae
repz
mov
data16
or
sbb
mov
xor
adcb
pushf
mov
mov
daa
lret
push
jmp
jl
pushf
pop
data16
xor
and
add
ret
cmpsb
cltd
push
jge
je
jne
xchg
insb
dec
and
xchg
out
loopne
xchg
pop
cltd
into
mov
cld
inc
dec
jae
or
pop
stc
jle
xchg
cmp
and
sbb
pushf
inc
mov
bound
inc
adc
stc
jl
adc
ss
insb
and
in
xor
mov
daa
insl
push
in
push
sti
xor
ja
andl
fldlg2
sub
push
sti
filds
add
add
and
jle
icebp
push
mov
mov
int3
mov
pop
inc
pop
lock
movsl
jmp
cli
dec
ror
and
jl
loope
mov
imul
sbb
add
cmpsl
rcrl
sbbb
jg
xorl
cwtl
or
sbb
sbb
outsb
pushl
imul
pop
jnp
scas
outsb
jmp
xor
imul
mov
dec
ficomps
jg
loop
imul
test
pop
ret
sarl
inc
dec
lahf
xchg
loope
push
nop
sub
hlt
lcall
add
dec
lods
jae
test
mov
pop
push
mov
cmp
aas
inc
push
pop
test
sub
insl
jne
cmpsl
or
test
jns
jecxz
jo
add
ret
cmp
into
pop
lret
push
dec
xor
mov
xlat
cltd
push
push
scas
mov
mov
cmp
mov
and
mov
jmp
jl
fdivrl
cltd
cltd
or
pop
sbb
lahf
mov
mov
in
or
testb
mov
daa
xchg
pop
roll
scas
int3
fsubs
jmp
cld
sub
stos
lahf
and
mov
add
cmp
jbe
jbe
pop
rcr
push
jae
js
add
lahf
xor
xchg
lret
cli
push
xor
idivb
rorl
jg
loope
pop
push
lods
pop
inc
orb
mov
push
jmp
out
loopne
push
cli
inc
sti
clc
cs
xchg
mov
std
std
int
inc
xor
insl
jo
mov
movsb
enter
hlt
mov
cmpsl
ds
cmp
ds
push
xlat
aas
xchg
clc
mov
inc
fstpt
test
movsb
out
imull
jl
push
xlat
jbe
and
loop
sbb
cmpsl
adc
pminub
or
pop
inc
into
arpl
addb
fstpl
dec
lret
into
xor
mov
and
sbb
inc
inc
cltd
pop
sub
mov
add
sbb
add
rol
loop
mov
or
adc
leave
cmpl
jne
popa
jno
lods
subb
xor
testl
push
scas
push
mov
cmp
enter
xor
jb
psubusw
jne
lret
add
push
ficoms
in
and
mov
or
add
inc
lods
in
cmpsb
push
test
mov
out
or
cmpsl
cli
and
popa
in
out
mov
gs
scas
ja
jge
loop
and
mov
gs
mov
pop
inc
sbb
sub
pop
testl
sbb
mov
stos
cs
and
dec
popf
mov
clc
shlb
aaa
sbb
pushl
movsl
pop
adc
leave
ret
mov
mov
jnp
xor
mov
out
sub
in
lods
add
xchg
repnz
fptan
int
pop
dec
mov
xchg
add
sti
aad
jns
rorb
adcb
imul
cmp
cmpl
das
sbb
sbb
pop
roll
xchg
test
insl
xor
xchg
cli
repnz
mov
lock
xor
cli
scas
stos
flds
mov
jbe
imull
jno
mov
mov
sbb
mov
lcall
stos
push
adc
std
repnz
mov
cmpb
inc
rol
out
out
mov
pop
test
lret
mov
cmp
lods
enter
pop
jns
mov
outsb
xchg
inc
cmpsb
jp
repz
push
xchg
add
lret
inc
jmp
jmp
decl
mov
fidivrs
xchg
push
pop
adc
cmp
cmc
jecxz
and
push
aam
shrl
push
jl
push
pop
clc
adc
adc
out
jns
cmp
aam
inc
inc
gs
adcl
in
and
out
cmc
insb
xor
sbb
push
adc
cs
sub
out
sub
rcrb
fcomps
push
mov
aaa
jle
push
push
xchg
xor
outsl
cltd
inc
adcb
lock
xchg
and
shrb
and
and
sbb
pop
aaa
outsb
repnz
gs
xchg
pop
cli
xor
les
cmc
loopne
jno
out
sbb
mov
mov
mov
in
ja
xor
popf
pop
outsb
push
dec
popf
and
sbb
adc
xchg
outsl
movl
adc
mov
sbb
imul
hlt
cwtl
adc
inc
mov
cmp
std
mov
mov
mov
repz
imul
cli
enter
pop
mov
push
ljmp
sbb
jae
mov
sti
mov
movsb
daa
adc
adc
in
jp
mov
loopne
scas
sub
add
pusha
push
into
in
fdivl
xor
addr16
sbb
imul
daa
inc
cmpsl
pop
jmp
out
insb
scas
and
xor
adc
cmp
xor
jns
lods
mov
flds
sub
xchg
dec
sub
mov
pop
push
mov
jmp
add
hlt
pop
mov
mov
jns
fidivl
ret
lock
orb
cmp
jg
cmp
push
xchg
rorl
jb
cmpsb
pop
and
mov
scas
mov
sbb
hlt
pop
pusha
sbb
sahf
xlat
mov
inc
fbstp
push
popa
mov
push
xlat
xlat
sarb
push
lahf
fs
and
and
jo
mov
bound
popf
sti
in
dec
xor
arpl
mov
shrb
in
imul
ds
lret
add
gs
scas
aaa
shl
or
arpl
jo
je
mov
std
lahf
jl
adc
adc
mov
and
pop
fidivs
sahf
ror
lret
lret
insl
leave
or
push
inc
xchg
and
ret
adc
mov
and
mov
cs
xor
fs
int3
ljmp
cmpsl
sbb
or
enter
mov
add
mov
stos
and
mov
shlb
nop
jge
fdivs
mov
negb
cmpsl
add
push
test
lcall
adc
push
cli
leave
inc
imul
je
es
inc
pusha
jge
push
out
daa
cmc
jnp
jbe
loope
cli
leave
decb
add
cs
dec
sub
cmp
in
sarb
fidivs
mov
jae
iret
or
adc
and
add
add
xchg
jne
stc
mov
push
fwait
sub
lds
sahf
mov
enter
int3
fwait
js
aas
repz
xchg
inc
mov
cmpsb
sub
shl
dec
mov
gs
inc
jb
xchg
rolb
add
mov
lret
mov
cmp
jg
lcall
jecxz
ljmp
mov
pop
outsb
xor
and
adc
pop
sahf
lret
stc
mov
adc
or
dec
xor
mov
jns
dec
xchg
and
pop
sub
repnz
xor
mov
cli
mov
or
test
mov
loope
data16
cmp
popf
push
in
scas
xchg
clc
insl
ljmp
xchg
xchg
push
xchg
cmc
mov
sbb
mov
jl
dec
movsl
mov
jle
scas
jno
out
ret
xor
xor
ss
xchg
pop
xor
cmpsl
imul
mov
loopne
adc
jg
mov
mov
and
sub
das
push
dec
int
xor
dec
mov
lret
lahf
add
sti
faddl
das
xor
xchg
out
rsqrtps
xor
sub
adc
stos
pop
sub
nop
xor
mov
lret
mov
std
jno
js
jp
add
cld
fcompl
in
mov
mov
out
push
xchg
std
pop
in
jge
movsl
add
adc
loop
cmp
add
out
cs
mov
or
sarb
pop
hlt
loopne
mov
hlt
or
pop
sub
scas
inc
jp
sarl
mov
and
stos
jne
ljmp
xchg
mov
ds
jge,pt
stc
cli
mov
push
pop
je
sub
pop
xlat
cmpsb
or
arpl
jo
push
sbb
les
jl
std
sub
push
mov
sbb
test
inc
pop
or
or
xor
fdivp
sbb
jge
popf
jbe
test
mov
adc
pop
clc
jecxz
add
and
ret
inc
xorb
fcompl
dec
and
negl
out
xor
push
jno
inc
mov
out
jmp
add
rcll
clc
mov
cmpsb
ret
cmp
inc
and
xor
add
jne
test
dec
pop
add
and
adc
dec
dec
repnz
repz
cs
push
add
dec
cltd
xlat
mov
and
clc
std
lret
jmp
cltd
xor
popa
lods
jnp
bound
nop
popa
call
jno
jne
dec
xor
imul
add
sub
jp
sub
lahf
dec
pop
test
sbb
sbb
jne
dec
in
scas
jnp
pop
fdivl
stos
rclb
stos
fstl
out
cmc
fwait
inc
jmp
xchg
mov
data16
pop
call
pop
imul
imul
in
sub
scas
and
in
dec
adc
imul
mov
ds
push
mov
sbb
mov
in
push
lods
pop
add
adc
sub
or
andl
nop
inc
mov
repnz
fdivs
cs
jmp
das
and
nop
idivb
mov
cmp
push
jmp
xor
movsl
ss
insb
sub
std
cld
jle
leave
pop
cmpsl
jg
inc
data16
subl
mov
popa
lret
pop
pop
sub
xchg
shlb
jb
cmp
lahf
and
push
sbb
mov
dec
cmp
enter
adc
cmp
jl
jge
inc
push
fdivl
movsl
imul
aas
xor
mov
rcl
hlt
dec
leave
aaa
aaa
dec
sub
js
clc
popa
iret
in
lret
inc
mov
xor
mov
out
out
xchg
subl
push
xchg
scas
jb
enter
jmp
push
hlt
cld
inc
stos
daa
jle
jnp
xchg
mov
mov
jno
les
xchg
jne
ss
inc
jle
loop
aaa
push
mov
jbe
pop
in
sbb
lea
dec
add
xlat
and
adc
or
jle
out
adcl
lds
loop
int
inc
ret
push
adc
jae
fisubrl
hlt
mov
cmpl
sbb
jp
fmull
mov
add
jle
rorl
test
popa
ror
jb
push
cli
out
and
divb
xchg
mov
mov
call
imulb
stos
idivl
in
jl
ss
or
loope
pop
ud0
stos
ja
mov
in
sbb
push
dec
aaa
pop
nop
and
mov
das
push
jp
shlb
lcall
pop
pop
xlat
and
mov
push
out
outsl
xor
rolb
pusha
jbe
lret
cmp
testl
stos
and
jle
dec
mov
mov
gs
push
adc
ljmp
call
mov
aaa
xchg
xchg
sbb
mov
outsl
add
cwtl
and
xchg
pop
xor
outsl
push
out
mov
dec
cmp
ret
aad
xorl
sub
dec
add
out
xchg
movsb
pop
adc
enter
test
sbb
loopne
cmpsb
arpl
lret
fcmovbe
dec
pop
dec
push
addb
adc
scas
mov
sub
in
or
push
xlat
push
scas
jmp
je
fwait
ljmp
insl
sub
mov
sub
jne
ret
mov
xchg
out
mov
inc
lods
pop
int3
enter
add
dec
or
push
cli
mov
pop
incb
iret
adc
mov
jbe
jle
inc
lds
repz
pushf
cmp
lds
or
sbb
inc
cmp
shl
fsts
aad
xchg
mov
sub
inc
pop
sub
dec
shr
pop
pop
push
cmpsb
or
adc
inc
cmp
in
add
setge
sbb
leave
std
les
fnstcw
movsl
test
inc
jae
mov
je
and
cli
in
mov
clc
out
sub
or
fs
out
xchg
xchg
push
pop
jo
es
fistl
and
mov
fildll
cwtl
push
and
push
mov
sub
cmp
mov
sbbl
inc
sti
out
repz
cmpsb
xchg
ret
xchg
jns
jmp
adc
jb
add
add
add
add
add
add
xor
add
add
sub
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
dec
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
inc
add
cmp
and
cmp
inc
add
insl
add
popa
add
jns
and
outsb
add
insl
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
inc
add
cmp
and
cmp
inc
add
insb
add
and
add
jae
arpl
jb
imul
imul
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
add
popa
add
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
inc
add
cmp
and
cmp
dec
add
imul
outsb
add
insb
add
add
imul
outsb
add
insl
add
add
add
adc
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
inc
add
cmp
and
cmp
push
add
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
add
add
inc
add
add
or
or
adc
xor
xor
in
in
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
or
add
dec
cmp
add
add
add
add
xor
ds
ds
add
add
add
xor
xor
xor
xor
add
add
add
mov
xor
int3
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
add
add
add
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
bound
stos
xor
sbb
and
daa
ss
ss
jl
xorb
mov
xchg
ss
ss
inc
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
mov
scas
aaa
int
aam
fdivs
fdivl
loopne
in
call
aaa
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
js
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fnstsw
jecxz
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
ds
ds
ds
js,pt
in
ds
or
adc
sbb
sub
xor
cmp
push
aas
pop
aas
jne
cmpb
aas
movsl
aas
lods
aas
mov
aas
add
add
or
xor
xor
nop
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
jle
fwait
xor
xor
xor
xor
xor
xor
xor
jnp
test
popa
aaa
jb
jp
xorb
aaa
mov
divl
std
aaa
sbb
inc
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
mov
cmp
inc
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jl
mov
mov
xchg
cmp
mov
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
cmp
dec
ds
ds
ds
ds
jnp,pt
cmpl
ds
ds
mov
ds
mov
ds
sarl
ds
sti
add
or
push
aas
push
aas
sbb
and
sub
das
aas
ds
inc
aas
dec
aas
push
aas
jb
js
nop
aas
mov
sarb
aas
out
aas
add
add
inc
xor
and
cmp
push
xor
xor
xor
or
adc
and
dec
xor
pop
xor
pushf
xor
xor
xor
xor
xor
xor
sub
inc
xor
pop
xor
jp
sahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
shlb
addr16
test
xchg
ss
xorl
shll
loopne
out
pop
cmp
xor
pop
cmp
cltd
cmp
sub
xor
cmp
dec
cmp
jo
jne
mov
in
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
aas
js
lea
cwtl
aas
add
add
add
lcall
xor
test
xor
xor
xor
xor
xor
dec
xor
test
mov
xor
xor
xor
xor
xor
call
sub
xor
cmp
dec
ss
ss
ss
mov
add
adc
cs
xor
inc
aaa
iret
aaa
fdivs
in
sbb
and
xor
imul
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
daa
ds
mov
and
icebp
aas
add
add
jl
add
imul
xor
xor
loopne
pop
xor
insl
xor
xor
xor
xor
cmp
aad
out
stc
or
sbb
aaa
addr16
jns
mov
popf
aaa
scas
aaa
shll
aaa
in
divl
or
sbb
cmp
mov
cmp
cmp
mov
lods
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmpb
cmp
add
cmp
add
loopne
add
add
jo
je
js
jl
xorb
xor
enter
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
inc
cmp
dec
cmp
pusha
cmp
insb
cmp
js
jl
cmpb
pusha
int3
add
ljmp
add
add
adc
add
lock
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
xor
cs
insb
add
add
push
gs
imul
popa
jae
dec
bound
arpl
add
push
imul
popa
jae
dec
bound
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
push
gs
jb
push
outsl
push
gs
data16
add
inc
outsl
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
push
je
imul
inc
push
dec
inc
xor
add
inc
outsl
dec
outsb
imul
inc
js
add
add
dec
outsb
imul
push
arpl
imul
outsl
inc
gs
popa
insb
insb
inc
outsl
outsb
je
js
add
add
inc
outsl
dec
outsb
imul
add
add
inc
outsl
push
outsb
imul
imul
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
add
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
