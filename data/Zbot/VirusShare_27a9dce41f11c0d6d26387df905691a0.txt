push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
xorl
pop
sub
or
mov
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
xor
mov
pop
pop
pusha
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
ret
sub
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
jmp
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
hlt
and
add
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
out
and
add
add
add
add
jo
add
mov
add
mov
add
fisubl
add
cli
and
add
and
add
add
and
add
add
add
and
add
add
and
add
and
add
add
add
add
add
add
adc
add
xor
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
add
movsb
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
out
and
add
add
add
add
jo
add
mov
add
mov
add
fisubl
add
cli
and
add
and
add
add
and
add
add
add
and
add
add
and
add
and
add
add
add
add
add
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
imul
bound
gs
add
push
push
je
imul
inc
add
xchg
add
je
jne
jb
outsb
je
push
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
addl
jb
popa
je
inc
imul
jns
add
repnz
imul
jb
je
arpl
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
jae
gs
popa
insb
jne
add
add
gs
outsl
jbe
inc
imul
jns
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
gs
imul
pop
add
je
outsl
arpl
gs
outsb
outsw
push
add
roll
dec
gs
jo
jb
add
aad
inc
imul
gs
add
je
imul
bound
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
imul
outsb
addr16
add
xchg
push
push
gs
jae
addr16
add
sbb
ja
jo
imul
or
je
outsl
arpl
add
jae
push
gs
jne
jae
jb
outsl
jae
add
jo
je
push
popa
addr16
add
xchg
inc
gs
imul
js
push
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
int
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
imul
mov
dec
jae
imul
jae
popa
addr16
add
jno
push
gs
jne
jae
jb
pop
or
jae
dec
gs
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
popa
outsb
arpl
add
add
dec
inc
imul
arpl
add
dec
inc
outsl
outsb
outsb
arpl
or
push
push
dec
inc
jb
outsl
jb
add
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
pusha
and
and
mov
dec
inc
push
popf
cmpsl
aam
sbb
ss
push
imulb
inc
jo
adc
insb
mov
jp
xchg
xchg
mov
xor
mov
mov
and
inc
mov
in
jmp
jmp
pop
mov
xchg
test
popa
scas
push
ss
js
xor
inc
out
int3
push
xor
and
dec
pop
jge
xchg
dec
outsb
cmp
loop
mov
pop
lock
lcall
jbe
sub
or
into
add
fcoml
mov
fldl
push
scas
sub
pushf
xchg
xor
xor
and
xchg
pop
inc
xchg
push
jle
or
cmp
clc
xor
jo
test
lock
pushf
jg
add
add
and
fsubr
mov
xchg
pushf
or
pop
outsb
adc
loope
bound
stos
adc
jecxz
repnz
xchg
push
inc
jmp
mov
xchg
cmpsb
adc
iret
add
lds
xchg
sbb
dec
je
mov
lcall
sub
adc
jbe
mov
jmp
sbb
ficoml
xor
mov
mov
mov
ret
xchg
dec
lea
cld
lock
inc
push
movsl
push
cli
mov
xchg
pushf
push
pushf
mov
xchg
mov
aas
jle
push
hlt
addb
pop
jo
inc
sub
ficoms
ds
xchg
sar
cmpsb
les
add
inc
cs
jmp
test
loop
push
mov
add
dec
or
inc
push
dec
dec
mov
cmp
sti
pushf
and
sbb
adc
or
testb
adc
stc
or
dec
insl
test
pop
cmp
xor
aam
sbb
mov
filds
add
add
add
add
xor
add
add
add
pusha
add
adcb
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jnp
jl
stos
lods
lods
add
cmpsb
cmpsb
push
mov
mov
mov
ret
leave
lret
leave
lret
into
rcl
in
rcl
shl
rcl
iret
hlt
lret
int
hlt
leave
lret
lret
out
in
mov
mov
lods
lods
lods
lea
fwait
pushf
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
popf
add
mov
mov
out
lret
rcl
sar
xlat
std
fdivr
fdivr
aam
ror
iret
dec
int
aam
aad
ror
iret
inc
rol
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
scas
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
lret
call
iret
sar
aad
fcomp
xlat
xlat
call
aam
dec
into
iret
dec
int3
int
aam
aad
into
int
inc
rol
mov
mov
scas
std
movsl
cmpsb
cmpsl
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
add
add
mov
mov
add
mov
inc
mov
mov
mov
mov
sar
mov
call
aam
call
fcomp
fcos
aad
aam
into
into
int
int3
lret
int3
int3
int3
inc
mov
mov
scas
mov
cmpsl
test
jmp
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
pusha
bound
push
imul
aas
inc
aas
inc
sbb
or
sbb
aaa
ss
aaa
cmp
and
add
push
pop
add
add
add
add
arpl
mov
or
mov
xlat
mov
mov
mov
mov
ret
enter
into
sar
aad
sar
aad
sar
ror
sar
enter
inc
ret
mov
mov
ljmp
movsl
movsl
popf
popf
fwait
cltd
cltd
xchg
lcall
addl
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
insl
xor
jp
cmpb
jno
jno
bound
push
push
push
xchg
cmp
inc
inc
mov
outsl
insl
outsl
nop
arpl
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
int3
int3
lret
dec
enter
ret
mov
mov
jmp
pushf
call
xchg
cwtl
xchg
cwtl
lcall
lahf
ds
or
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jp
xchg
fcoms
addb
jp
jl
jo
jo
data16
fdivs
ret
jle
ja
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
scas
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsb
lcall
xchg
incl
addb
xchg
xchg
xchg
sahf
mov
mov
mov
js
js
das
das
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
cmpb
popf
cltd
fwait
in
mov
mov
addb
decb
mov
loope
jb
enter
mov
addb
xchg
addr16
cmp
and
and
jle
jge
lcall
shrb
lods
lods
sti
stos
stos
stos
lods
stos
lods
test
test
std
lcall
decl
jle
jp
jns
jnp
jnp
mov
xchg
movsl
cmpsb
movsb
mov
mov
mov
mov
mov
mov
mov
mov
stos
test
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
mov
call
addl
mov
xchg
std
xchg
cltd
cwtl
stc
xchg
xchg
xchg
in
mov
or
lea
mov
pop
pop
push
push
or
xor
inc
dec
insl
imul
test
leave
fwait
fistps
lcall
mov
xchg
mov
mov
nop
xchg
lcall
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
mov
or
add
add
pop
pop
adc
test
mov
pushf
xchg
xchg
incl
test
decb
xchg
xchg
popf
pushf
popf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
nop
nop
in
test
push
jne
adc
dec
add
or
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
nop
nop
xchg
decb
xchg
xchg
lcall
cmpsb
cmpsl
ljmp
test
movsl
mov
cltd
xchg
std
rorl
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
lds
cltd
decl
mov
decl
xchg
xchg
xchg
xchg
xchg
popf
sahf
sahf
movsb
cmpsb
movsb
stos
test
movsl
cmpsb
movsb
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
bound
je
mov
sbbb
mov
in
xchg
notl
mov
lcall
lea
pushl
je
mov
pop
dec
mov
cmp
mov
cmpsl
movsb
mov
mov
stos
lods
stos
mov
movsb
movsl
add
mov
add
pop
adc
mov
ljmp
cltd
decl
xchg
nop
call
xchg
call
cwtl
xchg
cwtl
lcall
mov
movsb
mov
stc
cltd
lcall
xchg
les
xchg
fwait
in
xchg
xchg
out
xchg
mov
stc
xchg
xchg
std
xchg
jae
cltd
imul
cmpsb
push
push
ljmp
inc
aaa
pushl
cs
scas
daa
adc
ljmp
and
pushl
mov
mov
pushf
cmpsb
movsb
cmpsb
and
add
mov
pop
pop
adc
mov
ljmp
fwait
call
xchg
xchg
lcall
pushf
popf
lcall
pushf
pushf
lcall
xchg
xchg
decl
xchg
xchg
call
xchg
pushf
cld
fwait
lcall
sahf
xchg
xchg
cld
pushf
mov
xchg
insb
insb
xchg
pop
push
cltd
push
dec
cltd
inc
cmp
fwait
xor
popf
sub
jmp
adc
ljmp
adc
scas
and
ljmp
daa
adc
mov
adc
inc
lahf
cltd
mov
scas
scas
scas
cmpsb
movsb
movsl
sub
movsl
movsb
movsb
add
pop
pop
adc
mov
mov
fwait
call
popf
popf
lcall
mov
mov
call
mov
decl
cmpl
cwtl
jo
cwtl
arpl
xchg
push
dec
call
xor
decl
sbb
call
adc
call
or
push
ljmp
sub
ljmp
xor
pushl
xor
mov
xor
pop
mov
fwait
xchg
mov
scas
lods
mov
mov
movsb
movsl
add
pop
pop
adc
lods
scas
ljmp
fwait
lcall
mov
movsl
jmp
test
test
call
pop
pop
decl
aas
cmp
mov
sub
mov
sbb
incl
or
incl
or
decl
or
call
push
add
lahf
adc
ljmp
xor
pushl
cmp
mov
ds
ret
inc
sub
inc
inc
sub
dec
push
inc
inc
xchg
mov
mov
lret
cmpsb
dec
mov
mov
add
add
add
lods
movsb
movsl
add
push
adc
test
mov
sahf
lcall
stos
test
stos
ljmp
mov
ljmp
mov
jo
mov
incl
adc
pop
incl
or
incl
push
add
mov
add
mov
add
nop
or
call
push
add
mov
adc
ljmp
ds
rolb
dec
ss
dec
aaa
dec
dec
cmp
int
cmp
iret
push
cmp
rclb
call
push
cmp
rcrl
int3
xchg
mov
ret
mov
mov
movsb
cmpsb
cmpsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
lods
jmp
movsl
cmpsl
ljmp
mov
pushl
mov
mov
mov
stos
stos
stos
lcall
sub
incl
sbb
decl
adc
incl
or
decl
or
decl
or
add
mov
adc
ljmp
sbb
les
lret
push
inc
dec
pop
inc
call
pop
inc
call
pop
inc
call
pop
dec
call
pusha
dec
ficompl
fsubl
fldenv
call
nop
test
mov
mov
movsl
cmpsb
movsb
arpl
mov
add
add
add
fwait
xchg
xchg
add
dec
adc
jl
popf
popf
jmp
lahf
sahf
popf
ljmp
mov
pushl
mov
mov
mov
mov
mov
jmp
cmp
decl
and
decl
push
adc
decl
or
add
xchg
or
lcall
add
movsl
adc
ljmp
sbb
inc
cmp
dec
pop
dec
call
gs
fsubs
fsubs
fildll
jmp
insl
pop
jmp
outsl
pop
jmp
insl
pop
jmp
outsl
pop
call
xchg
xchg
int3
mov
mov
jne
lahf
mov
add
inc
inc
adc
je
lahf
lcall
mov
lods
lods
pushl
mov
pushl
mov
mov
ljmp
dec
inc
call
sub
call
push
call
adc
add
xchg
or
lcall
adc
jmp
adc
pushl
and
dec
inc
xor
imul
jb
fidivs
fbstp
jecxz
jmpw
jp
jmp
jl
jmp
jl
jmp
jl
fcoml
mov
cmpsb
cmpsb
mov
sahf
sahf
add
inc
inc
adc
jae
lcall
jmp
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
push
call
ss
lcall
xor
call
adc
add
cltd
push
add
mov
adc
ljmp
add
mov
sub
call
push
inc
fnstsw
jmp
jg
jmp
xorb
xorl
test
jmp
je
jmp
jbe
out
mov
out
mov
in
xchg
loope
xchg
sarb
mov
lcall
sahf
add
add
insl
insl
js
xchg
out
lcall
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
lcall
xor
sahf
aas
cmp
mov
cmp
lcall
adc
lcall
jmp
adc
pushl
push
add
mov
xor
fisubrl
jmp
xchg
out
jge
ljmp
out
xchg
cmp
xchg
cmp
xchg
cmp
xchg
test
hlt
xchg
test
repnz
cmp
cwtl
mov
aam
mov
imulb
popf
sahf
daa
popf
popf
sahf
add
add
add
popa
add
cmp
pop
pop
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
inc
ret
mov
mov
mov
aas
cmp
movsb
inc
inc
jmp
inc
aaa
lcall
push
add
popf
or
add
stos
adc
pushl
push
add
mov
sbb
call
aas
es
fbstp
ljmp
out
fwait
mov
out
sahf
mov
repnz
nop
push
mov
xchg
stc
movsb
xchg
clc
sahf
out
lahf
mov
fstpt
ret
lods
stos
mov
sahf
popf
xor
fwait
add
add
add
inc
add
aaa
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
nop
pushl
mov
mov
ret
ret
inc
mov
cmpb
dec
inc
jmp
push
dec
jmp
sbb
lcall
adc
jmp
adc
pushl
pop
add
rcrb
dec
and
call
dec
xor
out
jp
out
movsb
xchg
out
cmpsl
cwtl
push
test
cltd
push
stos
pushf
push
stos
pushf
cli
scas
popf
cli
scas
popf
sti
scas
lahf
std
lods
lcall
mov
cli
mov
scas
rcrb
mov
fwait
lcall
ss
xor
cmp
dec
jecxz
popa
pusha
call
mov
mov
mov
sar
mov
inc
mov
mov
mov
push
push
pushl
ss
cltd
adc
lcall
adc
ljmp
add
mov
sbb
dec
sbb
call
es
fistps
out
fwait
mov
hlt
scas
movsb
push
mov
push
mov
clc
mov
stc
mov
sti
mov
test
mov
test
push
mov
jmp
shlb
mov
mov
lahf
sahf
sahf
dec
xchg
xchg
xchg
add
fwait
cltd
add
add
add
xor
add
sub
or
inc
bound
xlat
jae
jb
mov
rol
rol
mov
rol
mov
leave
inc
xchg
xchg
jmp
pop
push
ljmp
es
pushf
adc
jmp
add
mov
add
mov
sbb
dec
sbb
call
push
add
fbstp
adc
in
jae
push
lods
sahf
cli
mov
scas
cld
mov
mov
std
shll
cld
lds
cld
mov
sti
les
jmp
ret
mov
ror
lret
mov
ficompl
xchg
xchg
or
add
add
add
dec
dec
outsb
outsl
jo
xchg
cwtl
cltd
rol
fcom
fcomp
jmp
aam
test
int3
int
int3
int3
lret
lret
lret
int3
lret
mov
mov
lahf
jmp
pop
push
ljmp
sbb
jmp
adc
pushl
add
sbb
dec
sbb
call
sbb
add
ljmp
sti
mov
mov
std
enter
lret
cld
int3
mov
std
iret
mov
std
sarb
clc
lds
call
into
lret
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
out
out
jecxz
out
loop
loop
fnstsw
fcmovu
fcomp
fdivr
aad
aad
iret
iret
sar
mov
insl
imul
test
adc
ljmp
push
add
mov
sbb
dec
sbb
add
frstor
add
in
add
out
dec
xor
negl
std
into
ret
std
iret
rol
cld
rol
std
aam
std
aam
cld
xlat
std
leave
std
fmul
cld
enter
mov
call
ror
mov
mov
xchg
adc
add
add
std
add
std
add
cld
add
cmc
cmc
or
out
out
pop
jmp
in
sub
in
in
dec
ljmp
xchg
in
ljmp
jmp
mov
jno
cmpsl
inc
cmp
mov
adc
ljmp
push
add
mov
sbb
dec
sbb
add
fisubs
add
call
bound
stc
mov
std
rol
std
aam
aad
xlat
int
std
fcmove
fxch
fcmovne
fst
cld
std
aad
out
lret
mov
inc
ret
out
cmpsb
cmpsb
cmpsb
mov
xchg
add
add
add
std
incl
std
add
stc
clc
add
cmc
repz
repz
out
lock
out
out
lock
lock
fnstsw
loope
lds
jae
mov
adc
jmp
adc
pushl
sbb
inc
sbb
call
sbb
add
loop
add
in
xor
push
jne
sti
shlb
cld
fcmovbe
cld
fcmovnbe
cld
loope
loop
std
in
std
in
in
cld
fcmovnbe
push
rol
jmp
dec
lret
leave
rep
test
xchg
and
xchg
cwtl
add
std
cld
add
sti
cld
add
sti
cld
add
div
or
aam
xor
mov
jae
fwait
es
popf
jmp
adc
mov
sbb
dec
sbb
add
add
out
add
out
cmp
jbe
cld
iret
sti
loope
loop
cld
loop
std
loop
jmp
std
in
std
in
cld
out
out
std
call
fdivrp
fst
push
rol
jmp
fcom
call
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
insl
add
add
add
fucom
add
leave
sbb
scas
cmpb
and
mov
adc
pushl
sbb
inc
sbb
dec
sbb
call
and
fisubs
add
jmp
dec
sub
cli
mov
sar
in
std
jecxz
cld
in
cld
loop
std
loope
sti
loop
std
cld
cli
fcmovne
clc
fcmovne
clc
fcmove
push
rol
out
enter
sar
aad
aam
mov
mov
lcall
add
add
add
rcl
add
adc
scas
mov
jmp
adc
pushl
sbb
inc
sbb
dec
sbb
add
loop
add
ljmp
stc
test
std
ror
sti
aam
stc
rol
cli
iret
ret
lret
mov
push
lret
mov
in
mov
jmp
leave
mov
std
jmp
ret
cli
call
loopne
cmc
fsubrp
mov
mov
xchg
add
add
add
int
mov
mov
xchg
loopne
inc
jmp
adc
pushl
pop
add
les
add
lret
and
call
sub
fsubrl
jmp
aaa
sbb
out
inc
ljmp
jmp
mov
mov
fistpll
neg
lds
ljmp
enter
iret
shl
out
fnsave
out
lock
popf
out
out
int3
lret
lret
push
lods
lods
scas
adc
test
cmpsb
add
ret
mov
mov
lahf
aam
push
dec
pushf
daa
sbb
cmpsl
sub
scas
aaa
daa
mov
xor
mov
cmp
mov
fs
stc
lret
jno
test
xchg
mov
shrb
mov
rcl
mov
rcl
mov
into
into
mov
fcom
aad
fcmovnu
fdivs
fstp
gs
loop
in
out
jmp
out
xor
cmc
div
and
icebp
icebp
sbb
fstp
or
mov
int3
add
add
add
roll
roll
scas
les
outsl
insl
lock
je
mov
and
xchg
mov
mov
xchg
sarb
stos
test
cmpsl
lret
pushf
lret
enter
int3
int
ror
rcll
rcl
dec
rcl
xlat
inc
aam
fdivs
aad
xlat
fcmovnu
sbb
fucom
adc
loopne
push
loopne
call
pop
jmp
repnz
cli
sti
add
incl
std
std
add
std
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
movb
lret
int
daa
int3
rcl
and
aam
sbb
aad
adc
aad
or
xlat
push
rcr
faddl
add
add
jecxz
add
jmp
xlat
add
std
add
mov
add
rol
sub
ret
lds
mov
mov
push
ret
mov
push
mov
int3
add
rcl
add
aam
add
xlat
fadds
aam
add
fadds
loope
fcmovbe
fiaddl
loope
fstp
loopne
jecxz
in
out
icebp
repnz
std
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
push
fs
mov
push
mov
enter
sbb
sub
dec
cmpsl
push
ficompl
fmull
xchg
mov
icebp
arpl
cmpl
push
pop
and
movsl
aad
out
arpl
cmp
lret
test
sti
push
jbe
mov
sub
lods
jge
inc
int
icebp
fidivl
arpl
loopne
mov
pop
pop
add
mov
lods
mov
cmp
mov
test
cmc
push
lcall
or
push
fdivrs
push
mov
lahf
jp,pn
add
stos
mov
jns
cmp
jns
stos
sub
mov
mov
in
outsb
shld
icebp
adc
push
pop
jno
and
jg
inc
sub
leave
dec
fnstcw
aas
adc
test
pop
xor
test
jg
jns
in
sbbl
mov
stos
outsb
out
and
xchg
mov
stc
jne
xlat
es
sub
pushf
aaa
lods
nop
int
sahf
inc
mov
push
adc
mov
mov
pop
add
dec
je
inc
mov
and
dec
xchg
mov
mov
xchg
inc
push
add
or
sub
stos
mov
lods
test
sbb
out
cwtl
dec
or
jbe
fisubl
adc
imul
adc
or
pop
das
dec
inc
mov
dec
outsb
fildll
inc
and
pop
aad
push
or
in
std
pop
jb
push
lret
jb
inc
xchg
aaa
into
add
sbb
push
pusha
cmp
xchg
push
incb
lea
push
push
cli
jo
sub
cli
addr16
and
or
mov
daa
push
cmpsl
imul
pop
add
lods
sub
outsl
xchg
inc
out
lods
pop
jbe
mov
or
daa
add
test
mov
mov
sbb
imul
xor
mov
repz
xor
sbb
push
sbb
in
insb
outsb
inc
int
jae
sbb
push
rcrb
mov
sbb
and
and
mov
lea
jecxz
sub
cmpsb
pop
cmp
xor
std
cwtl
cmp
mov
dec
adc
cld
pop
leave
dec
xchg
inc
insl
adc
adc
and
movsb
andl
xchg
popf
invd
mov
xchg
xchg
sti
and
lods
outsl
push
add
xchg
inc
adc
dec
lock
jnp
pop
xchg
fsubl
rcrb
jae
out
lret
xchg
mov
push
dec
jp
je
adc
mov
push
repz
sbb
mov
sbb
sub
mov
mov
fldcw
aad
mov
outsb
jmp
mov
xchg
mov
stc
movsl
push
in
fdiv
xchg
pop
xor
test
xchg
push
lret
mov
mov
dec
sbb
xchg
mov
mov
mov
je
iret
iret
xchg
and
add
mov
mov
lods
jl
fimull
cli
loope
aas
xchg
push
xchg
ret
in
nop
test
pop
xchg
sub
xor
loop
insl
xor
aad
xchg
mov
xor
or
xchg
les
pop
lods
leave
insl
jmp
and
pop
cli
cwtl
ds
cmp
clc
mov
adc
loope
sub
cmp
and
pop
repnz
pusha
not
out
cmp
pop
or
out
pop
cmp
pushf
adc
adc
mov
and
outsb
in
add
push
mov
jae
xor
cmpsl
jo
aas
jle
xor
aam
or
jg
ret
aam
sbb
movsl
xor
lret
push
ljmp
dec
notl
dec
adc
jns
iretw
jbe
test
pop
xchg
mov
or
mov
or
sbb
inc
fnstcw
lret
inc
aaa
dec
push
adc
or
mov
or
pop
dec
fmuls
and
aas
shll
xor
lods
xor
negl
and
rorl
notl
mov
movsb
xor
jbe
inc
sbb
bound
sarl
je
adc
int3
mov
jne
xor
insl
lcall
cmp
or
xchg
mov
test
xor
mov
mov
mov
hlt
jae
in
xchg
cmpsl
mov
sbb
fsubrl
pop
sti
aaa
or
xchg
insl
in
push
xor
je
xchg
ljmp
shr
sahf
dec
mov
fdivs
mov
cmpsl
sub
jno
add
mov
icebp
ljmp
addl
insb
jno
xlat
outsb
addb
mov
imul
dec
sahf
xor
addr16
sbb
insb
jmp
rcll
outsb
rcl
leave
mov
mov
push
int3
xor
lahf
ret
push
push
or
loopne
jnp
push
sbb
aaa
sub
cs
rol
xchg
sub
fstpl
dec
and
gs
insb
popf
imul
mov
repnz
ret
cs
push
ljmp
mov
xor
in
cmpsl
push
inc
fiaddl
aas
mov
stos
in
leave
les
xchg
addl
mov
shl
adc
pushf
mov
aas
inc
fnstenv
sbb
cmpsb
mov
int3
mov
xchg
loope
inc
fnsave
cld
insb
cmpsl
cwtl
sub
inc
xor
sub
daa
sarl
jo
xabort
mov
dec
je
testl
adc
mov
inc
stc
mov
cmp
stos
lock
andl
pop
lock
inc
or
push
xchg
daa
mov
mov
vcvtsd2ss
sub
pop
sbb
jns
jl
add
pushf
iret
mov
add
stos
and
mov
xchg
mov
ljmp
and
jns
testb
push
in
or
jae
push
mov
dec
mov
es
mov
inc
push
sahf
xchg
xor
jno
mov
cmp
faddl
adc
xchg
xor
sub
lahf
mov
dec
fcomip
repz
and
incb
dec
in
test
xchg
imul
mov
mov
sbb
ret
cmp
loopne
xchg
nop
lds
xchg
in
jecxz
adc
add
mov
pop
lock
cmp
push
das
sub
xchg
sub
jg
adc
rclb
push
pop
dec
out
xchg
push
popf
or
movsl
fs
loop
fidivrs
out
lods
rol
test
ret
pushf
rcl
and
in
adc
cmc
mov
xchg
add
outsl
xchg
sub
mov
mov
popf
stos
movsb
aas
sarb
mov
add
in
test
adc
ficomps
and
iret
mov
xor
outsl
sbb
inc
jg
mov
mov
jp
cmp
push
sbb
call
pop
insb
adc
cmpsb
cmp
cwtl
loopne
pop
adc
loop
gs
stc
cmp
pop
adcb
fcomps
mov
mov
xor
pop
add
pop
icebp
lods
pop
into
js
add
sub
xor
dec
cmpsl
push
xor
imul
sbb
mov
jno
daa
outsl
mov
shrl
int
dec
jecxz
out
lret
dec
inc
fcompl
push
int3
mov
je
stc
movsl
pop
stos
inc
push
movb
stos
sbb
xchg
mov
jb,pt
sub
sbb
cli
xchg
dec
cmp
js
pop
rorb
in
and
mov
pop
cli
xchg
orl
pushf
xor
lcall
add
nop
daa
faddp
push
mov
jb
mov
int
lds
out
mov
add
push
clc
pop
scas
jmp
or
jl
sbbb
popf
lcall
xor
sub
mov
pushf
xor
fsubrs
sbb
xchg
dec
out
es
pop
hlt
cs
and
repnz
cmp
dec
adc
ret
and
inc
les
shll
xlat
stc
enter
in
jmp
testl
xchg
push
imul
popa
mov
lcall
xlat
je
hlt
lds
or
lret
imul
pop
fisttpll
and
lock
pop
push
paddb
adc
aaa
out
xchg
lret
mov
frstor
sbb
mov
cmp
xchg
sub
or
xchg
in
or
enter
mov
lods
sub
dec
imul
daa
shrl
popa
jo
push
add
je
loop
loopne
inc
sbb
mov
pop
hlt
mov
lea
inc
add
jnp
pop
repz
out
xchg
xchg
in
test
in
clc
mov
sbb
mov
stc
nop
jnp
mov
inc
pushf
shrb
out
sub
xor
lret
popf
xor
and
mov
pop
arpl
jg
sub
ficompl
fidivs
sti
sbb
in
fnstsw
decb
mov
adc
jmp
xor
ss
lods
inc
clc
push
xchg
out
mov
jno
ficomps
fs
jno
sub
push
test
scas
inc
xor
rclb
push
stc
ljmp
or
cmp
push
mov
dec
and
je
fidivs
xchg
inc
xlat
push
or
sub
cwtl
loope
fiaddl
mov
jns
fmull
cmp
pop
sub
test
and
push
xorl
stc
lea
pop
lds
sbb
sbb
xchg
sub
cmp
addr16
mov
push
mov
and
push
or
inc
cmc
imul
push
or
outsl
jnp
adc
or
loope,pn
mov
rorl
push
sub
lds
dec
loopne
out
inc
fcomp
daa
mov
in
mov
pop
hlt
jle
lret
bound
dec
rcrl
nop
daa
movsb
push
les
lds
mov
mov
sbb
insl
add
mov
dec
jecxz
sbb
fisttpll
push
in
out
push
lock
jbe
pop
xchg
sub
popa
clc
adc
adc
mov
test
imul
in
int
arpl
mov
mov
loopne
cltd
xor
push
lods
jb
lahf
add
and
es
sarb
sub
aas
fbstp
pop
testb
jb
xor
mov
xchg
mov
out
sbb
mov
push
jns
cmp
test
push
into
inc
fstpt
loope
int3
rol
les
repz
in
fidivl
push
movsb
cmp
call
aam
inc
ljmp
adc
push
das
sbb
sbb
repnz
push
lahf
mov
je
pop
data16
sbbb
xchg
out
push
push
out
pop
fwait
xor
insl
sbb
imul
cltd
lret
sarl
inc
popa
in
and
or
sbb
add
sbb
xchg
rcrb
pop
mov
push
je
movsb
ret
mov
ds
aad
cwtl
cs
dec
fincstp
sub
and
leave
mov
iret
jg
xor
loop
or
mov
push
pop
cmc
js
dec
jecxz
pop
gs
cmp
aad
fiaddl
jmp
jb
scas
inc
fsubr
pop
cmc
out
xorb
mov
cmp
sbbl
adc
xor
sbbl
mov
fcmovb
pop
int3
fdivp
lea
out
sub
fildll
or
mov
add
cmp
jno
in
test
mov
loope
and
insb
cmp
pop
shrl
stos
in
fdivs
jae
js
and
xor
lahf
mov
jae
stos
mov
sbb
ds
mov
enter
mov
ret
pop
push
lods
pushf
in
movsl
aad
in
outsl
mulb
jle
or
insb
jnp
aad
adc
cmpsl
mov
shlb
mov
cmp
pop
out
nop
aad
aaa
and
cmpsl
fld1
sti
jg
in
scas
jns
fisttpl
cmc
mov
mov
lods
inc
push
xor
cltd
movsl
call
jle
mov
js
imul
stos
in
int3
arpl
pop
mov
jbe
movsb
cmp
or
add
cmpsb
cmp
hlt
mov
pop
mov
dec
jno
cmp
pop
jg
push
inc
out
xchg
xor
test
divb
sti
mov
xor
test
cmpsl
mov
lahf
lods
cmp
lds
loopne
dec
ror
dec
in
hlt
pop
cmc
in
adc
ret
push
lret
bound
stos
inc
inc
cltd
jle
or
js
and
add
sahf
fcomps
jne
mov
add
js
xchg
sub
xor
xchg
sub
ret
sti
or
jge
sub
mov
pop
sahf
cmovb
push
xor
adc
ret
pop
mov
sarl
aad
add
call
enter
int
in
cmp
fbstp
adc
fs
sbb
repz
mov
aam
mov
push
ljmp
pop
lock
inc
pop
cmp
cmp
and
push
cvtps2pi
cmpb
inc
adc
mov
cmpsb
je
imul
jp
mov
arpl
lret
shrl
add
inc
std
and
adc
sahf
xor
mov
dec
loope
xorl
lcall
sahf
icebp
mov
out
call
repnz
mov
aas
adc
mov
jmp
adc
cmpsb
mul
cmp
cmc
cmp
es
push
mov
fidivrl
sbb
stos
sbb
jp
int3
cli
xchg
mov
fstl
push
mov
jno
and
sbb
gs
mov
xchg
mov
sbb
jmp
or
sub
test
ds
lret
jmp
or
lea
scas
divl
inc
fimull
mov
movsb
adc
dec
loopne
inc
arpl
pop
test
adc
pusha
negl
mov
imul
fsubs
in
repnz
imul
mov
fnstenv
sub
pop
repnz
movsl
jbe
mov
jecxz
cmp
inc
add
stos
xor
push
inc
fldl
test
jmp
ds
je
sub
ret
pop
xchg
dec
xchg
sub
es
sub
xor
mov
pop
mov
mov
add
js
stc
imul
jmp
rorb
mov
xchg
jns
int
cmc
cmp
fcoml
push
inc
iret
lods
outsb
mov
imul
test
mov
pusha
pop
in
cld
mov
fists
in
lds
mov
lret
pop
jp
outsb
in
out
xchg
cli
xchg
sbb
jl
stos
cmp
mov
push
popf
fisubrl
and
iret
add
int
lock
loope
mov
push
jmp
ds
jo
inc
and
pop
sub
hlt
imul
stos
xlat
push
in
enter
pop
inc
push
dec
jnp
or
imul
int3
jge
dec
dec
adc
dec
in
push
sub
fcoms
mov
out
test
bound
lds
stos
inc
das
int3
add
mov
rcrb
andl
out
test
sbb
pop
xchg
mov
out
lret
sahf
es
int3
mov
dec
imul
sub
cmp
rcl
test
stos
and
arpl
pop
adc
into
and
call
loope
inc
mov
cld
dec
xchg
nop
fsubl
hlt
out
loop
stc
je
call
xlat
and
pop
in
lea
cli
sbb
and
and
int
and
adc
ja
xor
cs
mov
inc
mov
xor
sub
xchg
fildl
mov
adc
out
mov
out
adc
mov
add
icebp
lcall
adc
daa
jnp
scas
das
cmpsb
outsl
lcall
xchg
shrl
adc
jge
inc
lahf
ss
int
xor
and
lahf
ss
insl
sahf
xchg
mov
pop
stos
cltd
jge
add
lds
push
ljmp
pop
scas
andl
ljmp
xlat
repz
mov
push
mov
mov
jecxz
dec
movsb
cmp
ret
mov
add
daa
popa
push
out
inc
dec
xor
push
or
aaa
pop
jge
aas
pop
sbbl
xchg
stos
mov
jl
dec
pop
cmp
mov
mov
inc
xchg
xor
xor
test
sub
cld
xlat
xor
xchg
clc
daa
mov
adc
jg
ljmp
jle
mov
cltd
pop
mov
jb
jl
mov
jg
in
andl
mov
or
fnsave
fnsave
xchg
fnstsw
cmp
fnstenv
in
adc
push
popf
push
fbld
cmp
cltd
xor
repz
shr
sub
lds
or
cmp
inc
fadds
pop
lea
xchg
jb
jae
add
pop
shll
mov
scas
inc
pushf
aaa
stos
inc
test
gs
push
data16
rol
out
mov
mov
push
sub
inc
fdivrl
in
rclb
lcall
pop
mov
jo
mov
insb
je
outsl
in
mov
xchg
sub
push
ljmp
stc
nop
xchg
xchg
xor
shll
jb
and
inc
add
cmc
xchg
pop
inc
xlat
dec
push
stc
inc
icebp
outsb
add
xorb
bound
lea
mov
inc
fstpt
sub
mov
pushf
inc
push
ljmp
push
sbb
ret
mov
insl
dec
cmp
cmc
mov
mov
xor
xchg
xor
xchg
fucomp
fidivs
aaa
es
pop
hlt
movsb
cmp
hlt
sahf
movsb
cmp
adc
ret
pop
scas
addr16
dec
iret
mov
loopne
lds
pop
sahf
jns
ret
mov
pop
std
into
sbb
dec
add
stos
jb
xor
adc
mov
jb
pop
push
in
dec
cmpsb
sbb
rclb
mov
arpl
js
imul
adc
mov
push
out
or
xchg
push
xchg
cmc
aas
xor
jo
pop
mov
push
adc
dec
cwtl
and
push
mov
flds
mov
jae
mov
xchg
in
sbbb
ljmp
and
negb
mov
push
lds
call
push
pushf
push
xchg
xchg
sub
or
dec
xchg
or
or
inc
fistpl
fs
insl
pop
push
add
inc
jg,pt
scas
and
imul
out
repnz
sub
daa
mov
pop
loopne
push
aam
cld
xchg
test
and
mov
icebp
ljmp
jmp
daa
lret
insl
cmp
int3
adcl
or
adc
pop
xrelease
lret
test
mov
lock
jmp
adc
jbe
mov
or
gs
xor
and
test
jl
popf
jb
iret
popl
lcall
test
out
dec
movsb
out
xchg
lock
mov
add
cwtl
ja
pop
add
mov
sub
mov
pusha
testl
and
rclb
jg
and
jle
jne
cli
xchg
push
mov
mov
mov
test
stc
icebp
or
leave
cwtl
adc
pushf
mov
inc
flds
or
fsts
mov
enter
ret
inc
fiaddl
cmpsb
cmp
into
mov
fldenv
mov
xor
push
ljmp
and
adc
pop
out
cmpsl
xor
xchg
dec
test
int
jmp
cli
xor
lret
lods
int
xor
or
and
add
or
das
sbb
jns
aam
jle
and
xor
inc
fsts
pop
shll
aam
repnz
leave
sub
rcll
test
add
mov
fidivs
fisubs
jmp
mov
mov
loopne
or
repnz
push
fmull
sbb
sbb
popa
clc
cmp
xchg
jmp
cmpsl
mov
or
sti
mov
orb
outsb
add
enter
push
jmp
test
cmp
pop
out
push
popf
mov
pop
cmp
xchg
sub
pop
add
mov
mov
push
lods
or
mov
les
in
or
test
ret
ficomps
jne
mov
pop
into
shr
sub
mov
mov
mov
fidivs
rclb
ret
pop
mov
les
cwtl
fdiv
pop
sahf
lret
std
jne
lret
sbb
jmp
pushf
or
testb
arpl
push
push
inc
fiaddl
and
mov
jns
lea
mov
fwait
xor
fsubs
lret
xorb
push
jmp
nop
sbb
push
mov
ljmp
push
mov
inc
jle
lds
popa
clc
loope
add
xor
pop
scas
xchg
mov
mov
sbb
lahf
stos
jbe
sbb
inc
push
dec
in
cwtl
jae
lret
stos
add
ljmp
push
jns
xchg
inc
push
push
popf
aaa
popa
push
lds
push
repz
mov
shl
jns
inc
add
xor
nop
push
jbe
test
les
aad
pop
pop
xor
jns
sub
js
xchg
xchg
cmc
sbb
dec
nop
ja
out
push
jecxz
inc
loope
inc
aad
or
add
inc
fldcw
jnp
cwtl
mov
adc
nop
cmc
mov
xor
jnp
sbb
daa
lock
loop
dec
gs
pop
pop
call
pusha
jge
mov
push
add
movsb
cmp
mov
jo
or
std
mov
les
iret
cmc
sar
xchg
lds
pop
pushf
push
popf
lsl
mov
outsb
add
loope
sbb
pushf
adc
movsl
cmp
mov
popf
or
shrb
sub
xchg
std
lods
or
dec
sbb
in
jo
mov
outsb
jne
mov
roll
xchg
cmp
imul
stc
nop
xchg
add
or
mov
aad
stos
in
sbb
cmpsb
lds
push
movsl
push
lret
fsubrl
testl
mov
subb
test
inc
fisubrl
mov
mov
ret
sbb
xchg
test
or
repz
fstps
xchg
addr16
mov
xchg
popf
xor
jo
fsubl
xchg
aas
test
notl
pop
jmp
or
push
mov
mov
adc
cmp
or
or
add
pop
mov
daa
call
in
push
mov
loope
repnz
arpl
ret
and
mov
xor
test
pop
cmc
outsl
push
daa
add
push
mov
mov
dec
hlt
or
daa
stc
xchg
pop
cmpsb
neg
stc
inc
int
imul
mov
push
dec
aaa
cmpsl
ja
ds
jo
mov
and
xchg
sub
in
loopne
sarb
push
iret
iret
cmp
pop
shrl
repz
push
mov
call
jnp
ljmp
pushf
icebp
pushf
leave
ds
mov
adc
dec
loopne
popa
mov
iret
cmp
fildl
imul
cmp
testl
jae
lock
ds
je
insb
add
lea
int
sbb
xlat
test
out
pop
fcmovne
push
jnp
stos
fdivrl
shl
std
pusha
cmpsl
lds
imul
enter
lahf
cli
inc
or
xchg
xor
fdivrs
sbb
cmpsl
dec
mov
dec
pop
dec
push
call
pop
cmp
push
sbbb
push
add
xchg
and
out
and
shrb
fildll
mov
xchg
jbe
les
negb
jmp
movsl
mov
loop
insb
mov
fimull
out
cmp
in
cmc
push
sub
std
aas
pop
scas
adc
mov
shll
sti
xchg
and
ja
leave
je
imull
and
loope
xchg
xchg
sub
add
sub
jns
imul
dec
adc
jno
jge
cmc
xor
cmp
jl
lret
cmp
xor
fstl
sbb
leave
mov
lock
lret
test
lds
fidivrl
std
cmp
das
push
mov
out
aam
xchg
pusha
imul
es
add
or
mov
popf
out
jl
orb
sbb
pop
imul
or
ss
push
data16
lcall
inc
fcomps
shrl
jnp
repnz
jnp
pusha
inc
mov
mov
lea
cs
insl
fbld
cmp
push
push
push
call
lret
out
jmp
inc
sbb
mov
rcr
repnz
mov
dec
iret
cmp
sub
jo
js
inc
xor
in
inc
data16
ja
insb
shr
xor
hlt
std
syscall
add
in
cs
stc
leave
inc
lock
stc
xchg
fdivrl
sti
lods
leave
mov
out
xor
pop
adc
or
fnstcw
sti
shll
fs
es
sbbb
rcl
dec
xor
cmp
ret
jg
sbb
call
dec
pop
and
jae
les
rcll
jnp
repnz
and
jnp
arpl
adc
subl
daa
movsb
cmp
shrl
sti
adc
pop
sbb
bound
sbbl
xchg
mov
dec
pop
push
jmp
jne
xchg
push
jo
adc
adc
mov
lret
pop
loopne
roll
mov
nop
data16
jnp
shrl
adc
cmpsl
fwait
mov
ja
mov
inc
cwtl
mov
jae
jb
ljmp
lret
insl
push
jnp
pop
mov
inc
cmc
sbb
push
dec
cmpsl
pop
scas
fdivrs
xor
imul
je
mov
jne
inc
or
lds
aam
das
mov
popa
decl
insl
push
push
scas
in
and
addr16
lahf
and
lock
add
enter
cmpsb
xor
jg
cmp
or
testb
fcoml
pop
cmp
ja
xor
mov
bound
or
push
jmp
push
aad
pop
ljmp
outsl
fidivs
jge
mov
testb
mov
xchg
add
shrb
mov
shlb
or
sahf
arpl
cmpl
sti
sbb
subl
jno
pop
push
mov
cmp
cwtl
pop
dec
push
icebp
adc
jg
mov
jnp
push
sub
pop
loope
ja
push
inc
push
insb
rep
outsb
mov
add
dec
movsl
mov
pop
ljmp
cmp
jge
push
lret
les
cmp
hlt
mov
pushf
push
fwait
xor
pusha
xor
mov
add
xor
or
mov
push
jnp
imul
pushf
fidivl
xchg
lahf
ss
mov
lahf
scas
pop
adc
movsl
test
idivl
dec
add
push
pop
lahf
mov
icebp
mov
lea
fadds
inc
bound
xchg
loop
pop
xor
ss
enter
mov
loopne
sub
sti
repz
xor
push
enter
nop
mov
xor
js
das
outsb
sbb
xchg
or
movsl
outsl
push
xlat
push
and
les
test
fstps
sub
push
mov
push
pop
aaa
or
sub
sbb
push
je
test
cmp
js
lds
xor
mov
cmp
mov
ret
sub
ljmp
js
sub
cmpsb
stos
sub
sub
inc
in
repz
cmc
and
dec
jae
aad
xacquire
shrb
dec
sub
shrl
sbb
enter
stos
mov
imul
imul
fs
sub
xchg
das
cmp
addl
dec
dec
mov
cmp
or
push
lret
adc
inc
in
fstpt
popl
lea
aas
lret
int3
pop
loopne
dec
out
pop
rcll
loop
xchg
push
cwtl
das
xor
loop
cs
xlat
push
jnp
sbb
xor
test
inc
adcl
ret
and
roll
inc
adc
mov
ja
jnp
mov
push
cmc
add
pushf
jae
call
into
int3
jo
push
in
xor
cmp
insl
icebp
shlb
pusha
adc
sub
push
scas
xchg
mov
or
sbbl
ret
xor
inc
repz
fisubrs
ja
add
cld
xchg
add
push
push
push
adc
test
hlt
mov
in
inc
mov
push
mov
adc
ret
mov
cmc
in
xchg
lds
dec
filds
das
jg
sub
mov
adc
inc
sbb
dec
jne
iret
movsl
outsl
xor
mov
cmpsb
push
add
mov
lahf
dec
outsb
in
out
nop
stc
notb
neg
test
es
mov
sti
xchg
xchg
test
push
lcall
bound
stos
mov
pusha
mull
mov
fstpt
lods
popa
out
outsl
loop
mov
scas
stc
pop
rclb
mov
sti
push
xchg
inc
or
mov
mov
sbb
jns
add
sub
pop
cmp
rcrl
jnp
movsb
jo
stc
cmpsb
cmpsb
popf
xor
mov
in
push
fcoml
out
out
outsb
cwtl
imul
lock
sub
add
or
lods
cmc
icebp
jo,pn
pop
in
test
fstps
into
pop
cld
aad
adc
add
test
lcall
popf
pop
test
mov
pop
sbb
cltd
jae
sub
push
mov
repz
fcmovnb
sub
sub
rcrb
add
mov
inc
cvtdq2ps
aas
test
lret
int3
idivw
or
jmp
push
pop
adc
leave
ss
jne
jbe
ds
insb
movsl
mov
mov
pop
arpl
sub
add
lret
sbb
es
clc
and
ja
push
test
pop
push
inc
loopne
lds
cmp
dec
test
sub
lods
in
xor
repnz
inc
mov
js
cmp
cmp
inc
outsl
sbb
xor
adc
sbb
int
out
mov
jne
pop
cmpsl
cld
gs
sub
sbb
mov
xor
mov
aaa
inc
cmp
or
push
push
ret
shll
repz
scas
jp
pushf
xor
pushf
ss
loopne
stos
inc
stos
icebp
das
inc
mov
pop
dec
pop
add
mov
xor
jbe
fcmovu
xchg
push
test
jp
sub
cli
push
cld
ljmp
dec
je
pop
mov
dec
jae
inc
sbb
notl
pop
test
add
gs
dec
push
xchg
insl
popa
hlt
lds
outsl
roll
rorl
xsha256
cmpsb
push
sbb
sub
mov
xor
enter
mov
mov
jne
rclb
rcrb
adc
movsb
sub
mov
mull
popa
push
sarb
adc
pop
sahf
fs
jg
adcl
ret
movl
fstp
insb
mov
cmpsl
cld
repz
push
das
dec
mov
pop
pop
lahf
cmp
cld
dec
inc
push
jmp
inc
jae
lds
or
repz
mov
inc
ret
js
push
inc
sub
mov
xchg
pop
or
inc
shrb
mov
mov
aam
push
cli
dec
div
adc
jnp
or
mov
test
test
sti
cmp
in
mov
xor
cli
divb
mov
add
shlb
icebp
gs
push
dec
loopne
call
imul
aam
mov
jp
mov
addb
xor
push
fnstenv
or
sbb
pop
repz
cmp
je
and
popf
jb
int
fisttpll
mov
subb
pop
cmc
jecxz
mov
gs
or
sbbl
xchg
adc
push
dec
sub
mov
mov
mov
lret
cld
and
jle
or
cs
jo
arpl
inc
cmpsl
repnz
dec
push
add
mov
cs
pop
lds
ss
push
adcb
xchg
xchg
xchg
movsl
ret
pop
xlat
mov
mov
insb
adc
inc
cwtl
push
xor
lcall
idivl
xor
hlt
pop
shlb
inc
mov
idivb
mov
stc
imul
inc
jecxz
scas
pusha
add
pop
repz
jle
xchg
mov
out
inc
mov
xor
or
and
data16
xor
cmc
xor
push
subl
xor
push
testb
movsb
cmp
movsl
sahf
cmpsb
push
fs
mov
push
out
ss
shll
sahf
cmpsb
nop
aad
push
xor
jecxz
adc
aam
add
jb
add
mov
ss
dec
inc
cmc
mov
fidivl
mov
cmp
cltd
jg
lret
jo
pop
dec
push
dec
loop
pushw
insl
push
sbb
xchg
pop
ljmp
scas
dec
fdivrl
fistps
pop
mov
lcall
mov
popa
rcrb
out
jne
jo
mov
insb
mov
aad
jl
xor
mov
lods
sbb
pop
negb
movsb
add
mov
dec
lahf
mov
ret
jae
std
fs
shll
inc
mov
out
jo
cli
xor
xchg
xor
imul
das
mov
jne
movsl
int
shl
dec
in
mov
dec
loop
fiaddl
add
xchg
inc
pop
subl
andb
xchg
mov
mov
or
add
sbb
push
in
lea
stc
nop
xchg
mov
ret
cltd
out
lea
rcrl
clc
mov
xchg
mov
rorb
leave
cs
loop
cmp
cmp
sbb
les
fbld
add
cmp
dec
insb
mov
fcmovu
fiadds
cwtl
paddb
inc
pop
add
es
repz
repnz
sub
out
mov
inc
int
mov
test
sar
mov
or
push
fwait
mov
mov
andb
iret
data16
adc
rcl
push
repz
in
clc
sarl
bswap
add
fcoms
add
jecxz
adc
jmp
leave
gs
rcrb
pop
sub
paddsw
and
jmp
or
mov
dec
and
or
inc
imul
jno
mov
dec
jnp
subl
bound
rclb
jb
dec
mov
pop
out
test
pop
add
sbbl
sub
mov
repnz
sub
in
mov
xor
push
add
pop
lret
loopne
add
stc
and
sbb
cmpsb
arpl
dec
out
or
mov
or
cmp
dec
in
or
xor
in
pop
ret
sub
scas
mov
push
lret
lods
inc
std
cmc
mov
loop
lcall
push
out
xchg
sub
mov
fistpll
out
aad
cmp
fs
pop
sbb
cmp
adc
mov
jle
iret
xchg
cmp
into
push
cmpsl
data16
fdivrs
mov
dec
lret
cld
insl
dec
mov
in
push
jne
inc
mov
inc
fmull
movsl
or
cs
add
sub
push
sti
cs
xchg
cmp
xchg
fs
movsb
in
add
aas
aam
lcall
icebp
insl
jbe
push
dec
sbb
shlb
lea
arpl
adc
mov
sub
and
cmp
pop
add
sarl
mov
loope
inc
das
add
enter
dec
xchg
sub
stos
inc
pop
dec
sbb
stos
xor
push
inc
mov
pop
adc
ret
aam
lahf
fld1
jg
rcrl
dec
orb
adc
testb
sub
pop
push
nop
lods
jns
push
aaa
add
ret
and
mov
push
lcall
lea
mov
inc
push
jecxz
cmp
es
or
dec
jecxz
push
icebp
xor
gs
xor
mov
repnz
lea
add
lret
int3
push
jmp
jbe
sub
scas
lods
nop
and
ss
hlt
imul
push
add
add
mov
or
mov
sub
aaa
out
xchg
pop
add
xor
cwtl
mov
nop
idivl
add
cmp
lods
loopne
xchg
add
dec
orl
sub
mov
jge
mov
cmpsl
mov
dec
ljmp
xor
dec
or
cmp
test
jmp
mov
push
jl
hlt
ljmp
and
dec
popa
psrlw
push
xor
dec
push
push
xchg
sbb
fdivs
sbb
jle
pop
cltd
jge
push
aam
pop
movsl
aam
mov
jmp
push
push
mov
xor
dec
fcoms
pusha
inc
mov
cmc
scas
mov
test
sub
and
pop
out
into
stc
aam
sbb
nop
push
jmp
xchg
scas
call
out
mov
mov
mov
jae
das
enter
sbb
xor
pushl
imul
pop
cmp
test
mov
adc
add
pop
sbb
movsb
push
push
inc
dec
jmp
or
add
lods
outsl
xor
pushf
sub
sahf
gs
iret
test
movsb
inc
mov
lahf
fdivrl
xchg
xchg
mov
cli
or
pusha
mov
and
push
es
hlt
fsubl
cmp
sub
sub
adc
push
xchg
fiadds
out
add
arpl
sub
push
cmpsl
push
popf
fdivs
cmpl
push
in
shll
xor
test
mov
lcall
stos
or
cmp
mov
or
roll
pop
lods
pop
sub
mov
or
and
mov
test
lahf
test
into
mov
int
cmpsb
xor
mov
test
xchg
lods
stc
jmp
xor
mov
jo
mov
push
sub
or
cli
aaa
xor
push
loope
out
js
fdivl
stc
jecxz
enter
push
fdivrp
and
lahf
sub
jecxz
out
cltd
lods
jns
into
rorb
movsl
mov
adc
ret
add
adc
sbb
xchg
popf
mov
cwtl
xchg
dec
in
xchg
repz
add
fldln2
cmp
rorb
adc
add
aaa
into
mov
dec
dec
insb
jae
mov
je
loop
jp
push
jmp
ret
cld
adc
call
ds
pop
cmp
push
jmp
adc
es
fldl
cmpb
ss
lds
inc
frstor
sub
arpl
sbb
push
xor
sbbl
jae
adc
add
sub
mov
fmul
jmp
xorl
dec
pop
pop
xchg
inc
insb
inc
ret
aas
rcrl
negl
xchg
or
lea
leave
mov
and
push
ret
imul
fidivs
sub
insl
mov
push
cmpsl
jnp
inc
mov
inc
call
into
adc
cwtl
dec
mov
daa
mov
ljmp
xor
jl
insl
or
mov
mov
mov
xor
mov
inc
sahf
xor
test
inc
inc
fidivl
inc
cmpsb
adc
sbbl
sti
jle
js
mov
mov
jecxz
push
lock
call
test
out
repnz
loope
xchg
pop
outsl
mov
lock
pop
test
in
push
mov
das
jns
popa
xor
imul
scas
clc
repnz
cmp
loop
test
scas
scas
pop
mov
lret
mov
fsubrl
les
rorl
jns
pop
repz
dec
out
xchg
xor
inc
xlat
daa
mov
cmpsl
adc
rcrl
push
out
jle
lds
or
pop
add
mov
pop
call
das
lock
aad
insb
pop
lock
mov
ds
movsb
js
push
out
int3
les
cli
push
xchg
dec
jecxz
cwtl
sbb
or
in
aaa
push
sbb
repz
es
mov
lea
push
adc
xchg
xor
push
out
pusha
xor
xchg
dec
outsb
add
jecxz
mov
roll
pop
ss
inc
and
mov
xor
out
xchg
pop
cmpsb
cmp
mov
add
les
movsb
gs
std
insl
arpl
int
mov
int
in
fwait
cli
or
dec
lcall
mov
jo
jle
cmp
dec
int
jge
xchg
push
cmpsb
sub
pushf
jne
jge
inc
pop
push
outsb
jp
in
das
pop
cli
aad
cmp
and
push
fwait
mov
out
jae
push
lods
leave
add
mov
mov
adc
shlb
stc
shlb
and
fcmovu
inc
idivl
adc
push
xor
lea
shlb
cmp
jne
filds
lods
int
cmp
shlb
push
push
pop
jns
arpl
push
or
jl
arpl
adc
jb
pop
ljmp
mov
sub
test
pop
out
mov
sub
fs
xchg
jbe
les
mov
fcmovbe
jb
mov
out
xor
add
jecxz
or
adc
mov
call
cwtl
pushf
and
mov
jecxz
add
xchg
fs
push
mov
popa
jo
pop
flds
pop
jo
mov
ss
addr16
push
sbb
and
orl
out
pop
fdiv
add
mov
sub
add
inc
shrl
or
xor
pop
sbb
and
lcall
call
sub
sahf
sub
cmc
in
mov
jno
jecxz
mov
pop
xor
adc
cmovae
mov
xlat
dec
inc
dec
hlt
mov
mov
jl
je
ror
lret
add
std
lock
stos
or
or
and
jecxz
dec
fidivs
adc
test
ficompl
jecxz
push
fwait
adc
popa
cs
push
cwtl
stos
cmp
pop
lock
mov
mov
js
jmp
test
inc
sti
hlt
bound
xchg
lock
push
cmp
arpl
xlat
pop
loopne
mov
fbld
aad
xlat
jle
shll
or
pop
in
and
cli
add
inc
xchg
or
push
sub
dec
movsb
mov
pop
cltd
pop
cwtl
lret
add
loop
sbb
xor
xor
push
mov
jb
push
std
inc
cs
mov
inc
mov
pop
inc
mov
xlat
icebp
pop
pop
adc
cmp
in
cmpl
or
push
xchg
mov
dec
insb
and
ds
scas
prefetch
xchg
scas
pushf
sti
inc
cld
iret
data16
imul
lret
nop
pop
hlt
leave
xchg
ljmp
arpl
int
add
mov
popf
aad
mov
dec
lods
lcall
repnz
outsb
iret
jnp
adc
insb
adc
fwait
mov
push
mov
shlb
push
pop
mov
pusha
outsl
sub
sahf
leave
scas
xchg
sub
lret
mov
fcompl
jno
out
testb
mov
scas
mov
fcoml
andb
push
adc
lret
and
addr16
into
cli
mov
sub
inc
pop
stc
and
cmc
jge
bound
loopne
and
sub
xor
jp
frstor
push
and
cmp
dec
mov
add
adcl
lret
mov
fcoms
push
xorl
pop
jo
mov
je
popa
movsb
mov
sbb
cmpsl
pop
push
add
mov
int
cmpsb
in
push
xchg
mov
int
push
aaa
sub
pop
mov
lods
inc
xchg
lahf
call
cmp
stos
aam
dec
lock
fdivrl
xor
rcll
jnp
sbb
js
add
cmp
test
cmp
js
aad
push
pop
mov
jp
inc
cmpsl
in
andl
cmp
lcall
or
xchg
loope
in
call
sbb
stc
pop
inc
mov
fs
inc
test
cmpl
cmp
div
xchg
inc
add
fsts
dec
sahf
xchg
mov
pop
das
adc
jl
sbb
jne
and
cmpl
mov
aad
push
lahf
mov
push
loop
test
in
lods
inc
jo
xchg
pushl
lret
adc
mov
es
inc
push
and
out
mov
hlt
xchg
repz
sbb
stos
xchg
in
jo
mov
leave
jle
cli
lods
jae
mov
cwtl
pop
int
leave
pusha
cltd
out
push
les
out
xchg
in
push
in
jg
mov
data16
filds
mov
cmp
adc
int
cltd
outsl
jle
jge
xor
arpl
mov
outsl
loop
insl
popf
jo
or
loop
or
cs
xchg
fistpll
and
out
xor
or
aaa
lds
jns
nop
mov
es
push
mov
sarl
push
scas
adc
pusha
dec
jnp
and
lods
mov
pop
xorb
test
mov
jo
cli
push
cmpsl
add
or
jp
stos
rcrb
jbe
add
cmp
and
mov
mov
pop
daa
jns
push
mov
ljmp
jno
adc
movsl
sbb
imull
or
pop
scas
inc
jmp
mov
test
xchg
repnz
cmpsb
imul
aam
push
movsl
mov
fs
pop
and
out
xchg
sbb
pop
movsl
pop
cmp
imul
xrelease
es
cmpsb
push
jmp
test
lods
js
fsubp
mov
xchg
jbe
mov
mov
mov
call
or
xorl
repnz
or
rcrb
cltd
mov
push
sbb
pop
and
mov
jge
loopne
mov
in
jecxz
add
stos
dec
mov
daa
int3
inc
xor
jmp
mov
add
mov
or
cmpsb
test
cwtl
adc
aas
nop
xorl
sbbl
lret
loope
mov
aad
add
push
jno
dec
in
dec
orl
adc
out
mov
and
push
sub
jne
mov
fs
push
jmp
shll
pushf
push
lds
pop
idivl
and
dec
hlt
loop
daa
xchg
dec
repnz
cwtl
add
movl
push
imul
imul
or
ja
ficoml
push
xchg
leave
sbb
push
arpl
cmp
add
inc
push
lret
aaa
dec
push
insl
jns
lds
sbb
cmpsb
sbbl
mov
es
test
cmp
xchg
pop
mov
jl
jno
lea
les
arpl
dec
negb
cmc
or
inc
adc
and
leave
pop
scas
sub
ljmp
mov
sbb
mov
loop
jg
stc
adc
sub
dec
loope
or
xor
fisttps
inc
lahf
add
repz
inc
sub
pop
fwait
clc
sbb
ret
and
cmp
pop
adc
xlat
cmpb
arpl
sub
add
in
cmc
sub
mov
stos
jg
dec
cmp
shrl
push
movsl
inc
sbb
pop
push
stos
fcompl
jb
or
fnstcw
xchg
nop
daa
ret
add
sbb
loopne
and
mov
jnp
incl
adc
adc
pusha
repnz
data16
push
cmpsb
push
mov
js
add
in
dec
sub
jg
in
lahf
test
add
pusha
mov
rclb
out
jb
add
mov
out
test
mov
add
or
sbbb
add
jne
std
mov
imul
out
inc
and
call
mov
lds
sar
pop
dec
and
xor
fisttpl
mov
add
mov
push
pushf
test
mov
and
cmpsl
cmp
dec
push
les
jo
into
push
and
adc
jbe
mov
jp
js
lcall
xor
cmp
cmp
shll
loopne
push
jne
sub
mov
cmp
push
insl
inc
sbb
cmpsl
mov
cltd
popf
push
mov
push
lret
pop
dec
mov
mov
xchg
fwait
test
imul
das
lods
dec
and
inc
pop
mov
sti
xlat
cmpsb
ret
jne
and
repz
rorl
lods
push
movsl
adc
pop
ret
popf
movsl
cmp
jecxz
sti
cltd
jmp
lcall
push
test
dec
and
fsubr
test
push
mov
jmp
mov
push
and
mov
pop
leave
pusha
mov
mov
adc
or
pop
add
or
mov
enter
lret
std
xor
divl
fldcw
push
or
and
xlat
shl
push
and
shrl
or
lahf
and
insb
repnz
lea
inc
mov
scas
es
sub
fildll
mov
je
cmpsb
inc
incb
lods
inc
fsqrt
push
arpl
mov
xor
pop
ficomps
inc
icebp
jo
test
mov
loopne
lcall
inc
adc
push
in
pushf
mov
pushf
xor
cmp
sets
sbb
xchg
dec
adc
aaa
fiaddl
inc
push
pusha
movswl
push
or
aas
fcomi
mov
roll
jp
adc
mov
lods
lods
adc
and
mov
fcompl
fcoml
or
sbb
jne
cmp
js
add
add
std
push
js
scas
pop
cltd
cltd
lds
push
lcall
clc
sbb
insl
add
ja
or
ret
pop
sbb
jle
mov
imul
popf
push
inc
or
push
and
dec
pop
int3
inc
jb
je
fbstp
sbb
or
pusha
lods
sub
dec
inc
incl
pusha
lods
sbb
cltd
and
fwait
jae
inc
push
push
fs
roll
xor
fwait
shr
inc
loope
nop
adc
imul
outsb
mov
mulb
scas
loop
rclb
shlb
aad
dec
mov
in
xor
insl
add
sahf
rcl
pop
mov
fmull
mov
adc
test
jb
cwtl
push
add
xor
movsw
push
mov
and
mov
pusha
loopne
fsubrs
dec
pop
imul
sub
addr16
adc
xchg
or
add
adc
call
or
data16
mov
hlt
les
xchg
ret
movsb
cld
xor
sub
repz
inc
data16
add
or
cmp
mov
sbb
stos
mov
lock
repz
mov
add
lea
lahf
stc
mov
xor
xchg
xor
mov
or
jmp
xchg
push
mov
shrl
add
mov
pop
mov
push
je
add
mov
in
mov
cmp
mov
mov
rolb
xchg
notb
cmp
ljmp
jb
outsb
data16
xchg
popl
cmp
andb
fcompl
mov
ss
push
lods
pop
movl
pop
int3
or
into
loop
fsub
add
jae
inc
movsb
int
inc
repz
pop
pop
add
mov
jecxz
and
jge
das
ret
insl
push
mov
jp
dec
mov
fsub
pop
adc
and
mov
stos
push
addr16
fwait
pop
jb
xchg
arpl
mov
sti
mov
sbb
sbb
sti
push
mov
jo
jmp
popa
dec
sahf
popl
lods
in
stos
pop
sub
data16
out
xchg
mov
in
test
es
out
nop
pop
popa
xor
bound
loopne
bound
fmull
lret
addr16
dec
popa
adc
pop
orb
inc
sub
sub
out
lcall
or
test
fsubrl
dec
jne
cmc
mov
jl
sbb
dec
aam
scas
mov
rorb
cmpb
adc
aad
mov
mov
cmc
leave
inc
jl
dec
mov
mov
xor
inc
stos
jle
and
or
test
cli
mov
xchg
in
fstp
cmpl
or
popf
sub
daa
test
dec
scas
cmpl
in
js
jns
imul
jmp
xlat
cmp
in
xchg
adc
mov
push
shrl
addr16
lods
sbb
rcl
xchg
or
cmp
lods
sbb
js
iret
ljmp
orl
or
add
jne
lahf
cmpsb
jmp
sti
jbe
mov
mov
fcmovnbe
je
xchg
pusha
jp
pop
mov
add
sub
mov
stos
mov
and
jb
push
ljmp
jno
and
out
inc
data16
je
pop
rcrb
and
mov
xchg
mov
testl
xchg
jmp
adc
sub
mov
gs
xchg
sub
mov
xor
movsl
sbb
pop
push
sarl
add
jle
data16
fdecstp
mov
sub
test
push
pushf
pop
pop
mov
inc
hlt
and
sbb
mov
lods
cld
stc
shrb
sub
andb
mov
sub
push
sahf
cs
es
pop
add
jp
mov
out
loope
js
fiadds
cwtl
das
cmpsb
aaa
xchg
push
inc
sti
ss
pop
lock
imul
in
push
jns
mov
adc
or
xchg
dec
dec
repz
xchg
fwait
jecxz
int
loop
aad
mov
test
push
mov
leave
das
ja
ret
jg
es
es
sbb
inc
mov
xchg
addb
dec
sbb
mov
mov
imul
test
mov
decl
add
pop
pop
jbe
daa
pop
icebp
push
xchg
cmp
popf
js
mov
xchg
and
lahf
mov
xlat
adc
xchg
dec
xor
mov
or
push
movsl
jmp
inc
mov
js
mov
lock
mov
xchg
aaa
jg
ss
movsl
outsb
out
test
mov
inc
mov
mov
dec
mov
push
xor
arpl
inc
scas
ds
add
or
sbbb
lcall
call
int
out
hlt
lods
xchg
lods
and
inc
pop
repz
loopne
xor
jp
fistl
and
mov
loopne
jae
lds
js
mov
sbb
xchg
or
test
add
call
pop
aas
movsl
mov
mov
dec
cmp
negb
movups
pop
outsl
dec
mov
xchg
hlt
mov
cmp
in
and
stc
out
ficoml
sbb
iret
add
scas
jne
pop
cmp
jbe
push
push
sub
and
adc
addr16
ret
jecxz
cwtl
js
mov
ret
call
mulb
test
and
dec
cmp
or
popf
out
sbbl
adc
pop
add
test
loope
pushf
std
sbb
cltd
mov
ss
fs
int3
aaa
rorl
addr16
leave
push
mov
sbb
or
movsl
iret
xchg
jge
lods
inc
dec
loopne
sub
push
dec
pushf
jno
mov
xlat
xor
jo
popa
xchg
or
popf
add
cmpsb
in
push
fsubrs
pushf
mov
lods
lcall
mov
rorb
adc
dec
and
imul
sbb
cld
sti
inc
popf
in
into
sbbl
add
sbb
and
pop
push
push
stc
hlt
mov
inc
push
push
int3
add
daa
xchg
push
sub
dec
pusha
clc
popa
or
jg
dec
int3
xchg
xchg
push
loope
daa
dec
out
cmp
scas
movsl
pop
ss
mov
xor
xchg
rcrb
jmp
push
je
xor
ja
push
add
mov
int
xor
in
jbe
fidivrl
icebp
adc
pop
inc
pusha
push
out
rclb
popa
ss
aaa
adc
mov
xor
mov
cwtl
scas
sub
popa
pop
test
nop
or
iret
cmpsb
jne
shrl
enter
jle,pn
pusha
xchg
imul
inc
pop
rorb
sub
cmpsl
adc
mov
dec
lahf
sub
lcall
cwtl
pop
das
push
sbb
sub
jb
jecxz
sub
js
fsubs
rorl
roll
daa
pushl
jg
pushf
sub
or
clc
cmpsl
repz
insb
add
arpl
inc
fidivl
jge
push
into
cmp
sbb
ljmp
mov
xchg
mov
outsb
imul
inc
adc
xchg
and
pop
cld
jbe
les
sub
sub
and
xchg
jbe
dec
jecxz
outsl
mov
sbb
mov
movsl
pop
sub
mov
cmpsb
in
rcrb
cli
in
out
add
scas
push
andb
mov
adc
test
fwait
mov
iret
negl
cmpsb
outsb
inc
stos
aad
mov
inc
insb
outsb
outsl
imul
int
outsl
xchg
sub
dec
ds
stos
xor
mov
repnz
mov
adc
jne
enter
cmp
ds
dec
or
pop
mov
shrl
aam
jg
mov
xchg
popa
imul
insb
testl
hlt
mov
fs
inc
pop
enter
enter
sbb
jne
xchg
mov
cmp
mov
mov
mov
jne
in
jo
jg
push
pop
scas
xor
mov
xor
push
mov
fcmovnu
mov
adc
or
popa
xchg
jne
movb
into
adc
push
pop
mov
ja
mov
jns
mov
mov
out
ficoml
das
sub
aaa
pop
push
jae
loopne
inc
aam
xchg
cmpsl
inc
shr
xchg
jmp
lds
and
cmp
ds
in
imul
imul
outsl
loopne
cmp
xchg
in
add
jns
xchg
dec
es
pop
push
fcompl
imull
rcr
cltd
lock
add
mov
or
testl
or
sbb
cli
pop
icebp
loope
inc
push
das
daa
mov
enter
sti
sub
mov
sub
outsb
jge
sbb
mov
sbb
jp
xorl
add
cmp
and
mov
call
popf
stc
dec
xorb
push
mov
and
cs
mov
mov
push
sub
pop
hlt
addr16
xchg
mov
cltd
and
inc
aaa
idiv
xchg
cmpsb
in
xor
xchg
dec
sbb
arpl
lret
bound
cwtl
mov
fistpll
mov
sub
lret
cld
popa
jp
sbb
jl
jle
xor
or
ret
xchg
les
cmp
clc
pushf
mov
jnp
sarb
push
test
ljmpw
or
scas
lods
fists
fsubl
mov
incb
int3
dec
icebp
sbb
push
xchg
call
lock
fsubp
push
pop
aaa
loop
imul
sbbl
jp
fdivs
shll
aaa
jl
clc
dec
out
pushf
jg
xor
cmp
sub
cmp
mov
push
popa
mov
jg
xor
out
add
test
out
jnp
adc
xchg
add
push
clc
adc
pop
inc
mov
or
mov
mov
imul
into
cmp
dec
bound
mov
dec
roll
inc
cli
pop
popa
cmpl
rclb
push
insl
test
ret
repz
sub
sub
loope
enter
add
xchg
dec
test
push
jne
add
in
dec
jno,pt
divb
add
in
cmp
sbb
and
shrl
adc
adc
cli
cmc
or
xchg
popf
push
test
jno
adc
xor
repnz
and
inc
and
cmp
push
dec
cmpsb
sahf
cmp
adc
sub
xchg
popa
pop
insb
arpl
leave
sbb
jb
jne
popa
add
call
add
jbe
cltd
outsw
lcall
inc
or
xorl
lret
sahf
rclb
mov
mov
mov
int3
xchg
and
out
xchg
arpl
pop
sbb
cmp
jae
dec
mov
dec
lds
dec
in
adc
out
stos
loopne
sbb
inc
push
pop
cmp
hlt
imul
push
jo
hlt
push
xchg
cmp
sarb
pop
insl
ret
jge
in
inc
push
push
xchg
lret
in
jnp
push
lods
rcrl
jg
sbb
mov
push
lret
push
push
or
push
test
out
xchg
rorl
sahf
imul
inc
cld
dec
pop
lcall
add
sbb
inc
lret
pop
jae
and
shl
mov
pop
inc
cli
push
lret
pop
stos
ja
inc
aaa
sti
and
daa
push
sbb
jo
outsb
cmpsl
test
stos
mov
rclb
ret
mov
sub
or
add
cwtl
push
dec
jbe
imulb
cli
inc
mov
je
arpl
fwait
lods
pop
pop
jb
aas
mov
insl
lcall
push
lahf
cs
jnp
repz
mov
ds
pop
push
inc
fucomi
xchg
sub
adc
ds
add
stos
xchg
xor
inc
loop
dec
dec
mov
aam
repnz
jp
and
cmp
loope
rorl
test
pushf
push
lea
sti
push
cmp
orl
mov
add
lods
sbb
pop
adc
jae
hlt
xor
cld
inc
pusha
cltd
add
movsb
lahf
pop
add
push
xchg
xor
cmp
dec
subl
movl
pop
adc
inc
sbb
or
popa
fildll
jae
add
call
movsl
push
icebp
add
xrelease
ficoml
aas
adc
mov
mov
mov
data16
mov
cmp
aaa
jle
mov
ret
pop
outsb
repz
mov
sub
les
cmpsl
mov
jmp
shll
push
pop
push
add
ret
jle
stos
and
sbb
xchg
scas
inc
push
or
cmp
pushf
jns
mov
cs
int
mov
jne
inc
out
out
cs
ret
scas
sub
in
mov
push
movsl
ss
add
sub
add
xchg
sub
je
and
mov
mov
adc
mov
shl
push
jae
dec
int
dec
pop
es
cmpsb
push
les
hlt
frstor
addl
xor
inc
in
inc
sahf
cwtl
ja
pop
xor
inc
arpl
xlat
adc
cmpsb
sub
clc
sub
sub
jp
das
stc
nop
pop
add
mov
xor
pop
xchg
xlat
repnz
mov
lods
push
jno
mov
cwtl
lret
jo
mov
add
mov
or
push
ss
add
jmp
sbb
inc
les
lcall
hlt
push
repnz
cltd
ljmp
xor
adc
mov
xchg
jle
in
sub
jmp
xor
xor
lahf
loopne
or
mov
mov
or
out
jae
jns
fldcw
mov
js
lret
adc
and
repz
dec
cmp
and
fisubl
ja
xchg
push
out
std
xchg
mov
inc
in
repz
sbb
push
push
lock
pop
push
roll
fcomps
aad
push
ljmp
jno
or
inc
mov
pop
mov
xor
fsubr
sbb
mov
or
jne
fmulp
inc
pop
lods
inc
mov
xchg
jge
dec
pop
jne
outsb
jp
stos
mov
gs
hlt
sti
push
mov
push
stc
cli
push
xor
dec
cwtl
pop
cmp
jmp
out
mov
jne
subb
xchg
cltd
xor
push
leave
xchg
mov
sbb
push
add
insb
adc
lahf
jo
pop
lcall
sub
push
jmp
lock
xchg
and
pop
push
ficoms
mov
xor
xor
scas
inc
imul
jmp
bound
push
popf
push
jmp
fwait
cmpsl
ds
int
xlat
mov
js
or
es
std
jbe
in
into
push
movsb
jmp
sbb
dec
fnstsw
iret
pop
lret
mov
xor
xchg
roll
mov
lea
dec
scas
lock
mov
int3
add
mov
push
sub
jecxz
adc
pop
bswap
mov
lcall
xchg
add
mov
stc
adc
pop
loope
push
pop
outsb
or
test
js
mov
mov
out
mov
pop
fldenv
lret
aas
add
lret
adc
dec
es
out
xchg
jnp,pt
xor
and
fdivl
addr16
out
rolb
jl
insb
clc
and
lea
stc
adc
mov
cmc
imul
ljmp
mov
and
mov
mov
fadds
fnstenv
or
fistpl
xchg
subl
push
mov
shlb
xchg
xchg
dec
and
js
in
cs
sub
mov
mov
pusha
lods
aad
jp
movsb
cmp
inc
lcall
and
add
daa
cwtl
xor
add
dec
dec
ficomps
push
pop
jmp
mov
into
jb
ja
xor
xchg
jl
push
aam
sub
scas
lahf
fnstenv
jbe
int
sbb
outsb
loop
jp
iret
cmp
or
xor
lcall
into
sbb
push
stc
ds
ss
insl
add
xchg
sarl
sub
cltd
sbb
sub
or
sbb
xchg
fs
xchg
pop
cmp
fadd
xor
out
sub
bound
xchg
sahf
lret
daa
cmp
ror
repnz
xor
and
mov
je
xchg
jl
mov
add
pop
jmp
dec
pop
dec
xor
loope
push
mov
fsubrp
dec
mov
divb
and
add
cmp
popa
rol
cmpsl
jnp
rcrl
dec
scas
incl
fsubrs
inc
aad
xor
es
inc
icebp
sbb
jnp
mov
ja
in
add
rclb
sub
hlt
div
and
jb
adc
xor
insb
sarb
adc
arpl
sub
mov
or
sbb
inc
pop
mov
fdivl
data16
mov
mov
jns
fsubr
jmp
pop
sub
aas
in
sbb
and
adc
lds
inc
adc
push
dec
xabort
fcompl
xor
jne
subb
aas
jecxz
stos
dec
loope
sahf
adc
aad
jne
mov
nop
add
out
stos
out
mov
fsubr
bound
sub
fxtract
dec
repz
pop
lret
mov
sbb
test
inc
mov
ja
cli
enter
ljmp
jg
jp
out
mov
xchg
outsb
mov
lods
inc
xor
jge
aam
jb
jecxz
nop
lcall
jbe
out
into
push
inc
mov
jo
out
xor
loopne
dec
adc
adc
mov
bound
jecxz
repnz
repnz
mov
pop
xchg
sarl
shl
pop
aas
testl
xor
ja
bound
sbb
cld
xchg
sahf
cld
sub
mov
and
sbb
shll
and
xor
inc
iret
fucomi
cmp
cmp
lcall
insl
ficomps
scas
mov
addr16
test
push
daa
stc
cwtl
inc
dec
pop
fdivrl
fisubrl
add
fdivrs
xlat
fisubl
das
not
jbe
int3
pop
mov
lods
jns
xchg
xchg
cmp
out
fldt
xlat
outsb
pop
cld
shrl
push
jae
mov
sbb
data16
sbb
add
lahf
xchg
mov
or
push
cmp
scas
inc
sbb
sub
mov
out
out
jp
outsb
ds
sbb
mov
jecxz
leave
xchg
inc
xorl
shlb
sub
orb
xlat
outsb
jmp
loop
pop
jne
out
in
adcb
dec
mov
fmull
push
or
mov
cwtl
cmp
mov
out
sahf
xchg
sbb
incl
cmp
cmp
test
test
fdivrl
lock
fchs
mov
jbe
ljmp
jle
enter
push
insl
inc
loopne
repz
mov
enter
or
xor
or
add
inc
adc
xor
xor
arpl
pushf
or
push
mov
sahf
sub
push
inc
push
es
sbb
test
pop
xchg
cmp
ret
sub
dec
mul
ret
push
outsb
inc
popa
mov
movsl
lods
ss
cmc
mov
pop
jge
ds
xor
imul
cmp
inc
sub
rcrb
fsub
ret
sbb
add
xor
jg
jne
jmp
or
inc
mov
or
loop
in
jmp
out
jl
notl
hlt
stc
fidivs
sbb
nop
xchg
faddl
cmpb
jb
out
sub
sub
and
adc
lds
roll
lahf
mov
lods
fs
inc
clc
jmp
add
cltd
push
ja
sti
imul
rcrb
mov
ljmp
jecxz
or
add
jmp
cmpsl
loopne
mov
mov
add
jecxz
jl
int3
mov
aam
push
popf
sub
dec
mov
lods
push
inc
push
mov
or
dec
sahf
jae
fbld
cmp
icebp
cmp
cmp
add
mov
and
test
xchg
xor
lcall
adc
jo,pn
jl
and
test
outsl
push
adcb
inc
jno
std
xchg
push
mov
push
cmp
arpl
xchg
aad
adc
mov
jns
pop
cltd
push
out
jle
xor
xchg
es
or
jle
jno
faddl
lcall
pop
mov
lcall
mov
jno
cmp
and
test
mov
cmp
shrl
ret
dec
pop
arpl
add
xchg
or
adc
inc
cs
arpl
ffreep
mov
xor
rorb
lock
sbb
mov
xchg
sub
fsubl
js
jmp
enter
popa
push
movsb
inc
je
sbb
stos
shll
add
cmpsb
xor
call
xchg
test
push
popfw
mov
sub
and
push
jle
add
mov
jg
test
std
sbb
jge
ljmp
xor
xchg
jle
inc
rcrl
je
jmp
xor
das
jmp
jp
ds
mov
loopne
test
call
adc
loope
aaa
fcmovu
test
lods
add
mov
push
enter
pop
bound
int
out
loope
aam
sbb
jb
mov
jno
ja
add
mov
popl
xlat
hlt
mov
mov
out
dec
inc
xchg
pop
in
aad
push
rcrl
sbbl
xor
sbb
out
arpl
sub
or
sbb
or
sbb
sub
fcoms
cli
jno
and
xor
mov
xor
jnp
sub
fnstenv
dec
or
mov
out
add
es
pop
lcall
jp
pop
mov
popf
sbb
repz
aaa
fsubrl
stos
jecxz
xlat
cld
xchg
outsb
xor
les
push
push
or
push
mov
xchg
fstps
das
adc
icebp
adc
cmp
ror
jbe
cmp
xlat
jae
or
sbb
icebp
add
and
add
loopne
lahf
addb
movsb
xchg
dec
popa
cli
dec
cmp
aas
push
push
sbb
aaa
push
std
in
xor
xchg
push
jge
xor
in
repnz
xchg
mov
add
out
push
mov
fdivl
leave
imul
push
push
xor
sub
xor
adc
mov
push
or
stos
fsub
loope
sbb
add
test
mov
dec
mov
xor
push
sarb
mov
outsb
cmp
adc
jge
divl
fidivrs
cmp
insl
push
sbb
movsl
pop
lcall
mov
lds
xor
cmpsb
or
push
inc
jnp
pop
rclb
xchg
jl
pop
test
adc
test
pusha
mov
add
mov
jmp
mov
lret
xor
xor
xchg
into
ja
rolb
sahf
jmp
or
jecxz
es
cmp
add
dec
cmp
ja
adc
jne
add
or
pop
jle
mov
or
jno
push
inc
scas
sbb
add
jge
jbe
je
and
inc
adc
mov
pusha
clc
adc
mov
xchg
out
pop
jo
bound
jne
lods
adc
sub
xchg
fdivrs
jmp
mulb
add
sbb
test
pop
or
xchg
rorl
les
jbe
sbb
stc
dec
fwait
mov
push
push
xor
ret
test
test
mov
mov
ret
pusha
mov
dec
mov
push
jl
pop
push
hlt
mov
push
lcall
cmpsb
pop
pop
testb
add
filds
lret
scas
mov
fistps
push
mov
jb
xchg
aam
incl
mov
mov
in
cmpsb
sbb
cwtl
inc
dec
lods
push
mov
in
stos
add
loope
lods
lcall
jmp
pop
jbe
fst
dec
add
out
jns
jne
adc
pop
jl
pushf
xchg
stc
ljmp
jge
sub
repnz
add
inc
fs
lock
xchg
mov
xchg
mov
mov
outsb
pushf
push
mov
dec
lea
or
daa
add
adc
xor
inc
push
dec
mov
dec
mov
cs
cmp
movb
pop
sbb
aam
pop
fistl
scas
cmp
jge
movsb
loopne
add
mov
mov
jmp
in
and
inc
jno
ljmp
call
js
hlt
mov
sbb
imul
jae
mov
inc
scas
fcoms
ror
popa
add
data16
stc
imul
in
subb
outsl
mov
mov
fdivl
mov
mov
pop
fcmovnu
aas
dec
or
push
add
sbb
insb
and
pop
xor
pop
pushf
push
cmp
cmp
mov
fnstcw
scas
je
sub
jo
jno
cmp
xor
sar
into
push
mov
scas
sbb
xsha256
add
cmp
inc
sbbl
xor
mov
xor
pop
pop
scas
pop
jecxz
cs
mov
mov
movsl
xchg
sub
les
pop
xchg
into
in
jg
push
mov
lds
enter
jnp
mov
stos
imul
pop
push
enter
push
loop
sbb
dec
push
addr16
mov
das
mov
xchg
add
lds
mov
repnz
pushf
jae
rclb
mov
mov
cmp
repz
fisttpl
xchg
popl
push
inc
popa
xchg
mov
pop
lods
sarl
into
fbstp
xchg
and
xor
imul
or
sbb
add
mov
cmp
add
gs
mov
add
jo
lcall
push
dec
cmc
xor
push
daa
test
cltd
mov
shlb
xchg
dec
mov
orb
std
cmp
leave
jns
or
lcall
loope
aad
or
mov
fstl
push
pop
mov
jb
xchg
cld
adc
lahf
push
or
call
pop
mov
dec
lock
outsl
push
pop
mov
push
sbb
lods
xchg
push
pop
pushf
and
sub
dec
div
add
xchg
arpl
or
popa
push
sub
cmp
mov
jne
lret
and
enter
sbb
ffreep
imul
adc
inc
dec
int
jl
jo
sub
cmp
or
sbb
flds
xchg
jno
inc
cld
mov
test
in
sbb
pop
add
mulb
outsl
bnd
adc
mov
in
push
fs
fsts
movsl
in
mov
jmp
or
loope
dec
ljmp
adc
sti
fistpl
mov
add
inc
pop
fldt
push
jbe
xchg
js
or
xor
sub
mov
insb
mov
or
fsubl
nop
adc
fcmove
lret
xchg
repz
rcl
push
mov
inc
or
out
dec
test
and
test
icebp
mov
adcb
or
pop
out
xor
mov
pop
sub
mov
sbb
pop
or
and
in
out
adc
rclb
or
sub
mov
push
jns
mov
fidivs
or
lahf
adc
xchg
ljmp
cmp
sarl
sbb
lea
mov
pop
data16
andl
or
adc
jecxz
out
fwait
sub
sub
hlt
cmc
xlat
cs
sbb
add
add
mov
lea
mul
pop
cmpsb
xchg
int3
mov
fistpll
push
out
mov
adc
adc
mov
mov
rcr
repnz
mov
mov
jnp
popf
outsb
loope
mov
sbbb
ljmp
stc
xchg
xchg
adc
mov
or
lret
mov
into
inc
mov
sbb
mov
sbb
mov
mov
outsb
test
fisubl
sub
sbbl
cltd
dec
lahf
push
jg
jae
ljmp
lahf
push
movsl
and
das
es
push
sahf
cmpsl
push
lcall
inc
repz
mov
push
mov
inc
xor
ds
dec
xor
pop
jg
jg
insb
sbb
int3
adc
rcrb
ljmp
and
imul
int3
jnp
or
xchg
roll
add
testb
cld
cmc
xchg
push
mov
data16
sbb
xor
mov
mov
addr16
ds
loopne
repz
cmp
push
inc
mov
lret
xsave
popa
add
push
scas
inc
cmp
xchg
test
cmp
cmpsb
pop
inc
push
fnstcw
ss
push
jmp
jmp
inc
fs
xrelease
mov
jae
cli
out
adc
xor
ss
pop
adc
adc
sub
bound
icebp
cmc
xchg
mov
sahf
xor
xor
fistpll
call
and
jae
aaa
ljmp
sbb
push
sti
mov
fucom
sbb
and
sub
ss
dec
outsb
cmp
ljmp
sbb
jae
pop
int
dec
test
fs
mov
pop
insb
push
movsl
jne
pop
ret
sub
adc
push
aas
sub
jno
pop
shr
nop
ficomps
dec
inc
adc
pusha
int3
lods
mov
sub
xor
mov
rcrb
rcl
pusha
loopne
imul
into
lret
inc
add
ficoms
jle
imulb
movsl
xlat
shrl
es
xchg
inc
dec
jmp
mov
into
mov
xlat
jno
leave
lock
inc
jmp
ficomps
or
lret
cmp
mov
dec
aas
pushf
and
jp
insb
pushl
push
dec
mov
or
mov
jo
push
insb
mov
inc
fwait
cli
or
push
in
and
ret
sysret
or
and
jmp
test
ds
mov
aas
mov
in
sbb
repz
cmp
dec
aas
stos
sahf
pusha
pop
outsb
sahf
jnp
or
sbb
jle
jne
roll
movsl
pop
cmp
jbe
xchg
adc
bound
inc
lahf
pop
add
jb
xor
cli
jne
lock
pop
sbb
test
sbb
test
into
pop
ret
outsl
sub
lcall
in
push
jno
xor
pop
sbb
inc
sahf
jno
jnp
insb
stos
jecxz
jae
lea
and
xchg
cltd
faddl
lods
and
mov
out
xchg
ret
sbb
pop
daa
dec
bound
aad
mov
aam
add
das
adc
xchg
loope
stos
adc
pop
cmp
mov
push
das
aaa
adc
push
icebp
xchg
push
push
test
stos
in
addr16
push
cs
mov
loope
mov
fucomip
inc
ffreep
pop
adc
or
into
push
adc
inc
mov
movsl
cmp
fsub
and
inc
ds
jbe
mov
std
xchg
xchg
dec
jmp
sbb
int3
and
or
cmpsl
cmp
testl
lods
adc
jp
ss
jae
lock
std
stos
cli
push
ljmp
ljmp
lods
out
adc
cltd
cmp
xlat
outsb
add
js
es
rcll
dec
lcall
dec
or
popa
push
dec
pop
loopne
jae
pop
int
adc
jne
jns
cmpsl
stos
jns
mov
sub
push
mov
lds
xchg
jb
sub
xchg
jl
push
cmp
pop
imul
mov
pop
outsb
shlb
mov
cld
lcall
jbe
aad
pop
add
jno
or
movsb
icebp
pop
lods
sti
xor
push
mov
mov
lahf
shrb
mov
inc
std
fsubrl
test
add
and
dec
and
mov
shrl
jmp
mov
pop
repz
jbe
in
cmp
adc
scas
fstps
test
movsl
jno
dec
mov
js
sbb
in
fwait
adc
sahf
mov
and
push
dec
xlat
sub
sbb
sub
aad
sbb
pop
fsubs
cmc
sbb
mov
je
inc
mov
clc
leave
cld
mov
testl
in
shlb
or
xlat
adc
add
push
add
or
pop
je
add
mov
js
out
lcall
test
neg
add
cmpsl
cmp
outsb
push
add
scas
fiadds
pop
mulb
ret
pop
pop
lcall
jmp
and
mov
data16
sbb
jno
ja,pt
sub
xchg
xor
jg
cli
or
xor
push
inc
aas
stos
push
mov
mov
sub
shr
pop
jne
jae
lods
xchg
fsubrp
lcall
add
fs
js
cld
imul
sbb
and
inc
push
hlt
subb
fcompl
push
lods
dec
mov
in
inc
daa
into
fisttps
and
pop
aaa
mov
je
sbb
inc
mov
sbb
int
or
daa
mov
fidivl
push
jae
add
test
pushf
mov
adc
insl
xchg
and
cmpsl
push
or
xchg
push
lcall
stc
mov
jmp
pop
rorb
push
cli
jg
cmp
cwtl
cmp
vshufps
adcl
ljmp
mov
lds
mov
sbb
pushf
les
xor
test
lods
cmp
imul
in
mov
cmp
jge
mov
into
movsb
sti
stos
jnp
jbe
xchg
mov
add
in
pop
cmp
jg
mov
add
mov
xlat
xchg
adc
push
cmp
imul
outsb
outsb
mov
jle
pusha
pop
xor
les
call
fwait
adc
adc
mov
shlb
out
insb
mov
mov
negb
cmc
das
add
dec
jl
jns
push
xor
mov
mov
mov
inc
inc
mov
pop
fwait
cli
adc
and
dec
jge
sub
push
in
xchg
lret
adc
jne
sub
scas
outsl
and
sub
or
push
sbb
push
pusha
popl
jo
sarb
je
cmp
insb
fs
mov
mov
xchg
loope
xor
mov
arpl
icebp
sbb
push
hlt
xchg
filds
push
sahf
aaa
push
mov
icebp
in
les
or
and
pop
test
and
rcl
inc
jge
ds
imul
pushf
or
rorl
jge
fsubs
pop
mov
popf
sti
scas
fldcw
loop
add
sbbl
inc
popa
xor
xchg
sub
adc
pop
call
cmp
fldl
lret
mov
repz
rcl
movl
sbb
jne
jp
out
and
dec
and
jecxz
or
xor
les
xlat
dec
mov
push
mov
rcl
ficoms
leave
cmp
popa
daa
arpl
jmp
notl
or
dec
cmpsb
mov
iret
data16
push
sbb
mov
int3
imul
cwtl
pushf
inc
stos
flds
xchg
and
andl
imul
xchg
mov
cs
subb
clc
mov
jns
add
popa
pop
xchg
mov
shr
sarl
add
cs
pop
inc
inc
xlat
je
icebp
out
push
pop
dec
push
adc
inc
sub
int
xor
xchg
mov
rcrl
dec
cltd
cmp
cmp
inc
arpl
pop
sbb
mov
push
das
jo
popf
mov
add
mov
lret
jo
sar
pop
jmp
xchg
and
mov
movsl
ret
pop
stc
and
aas
pop
in
clc
pusha
cmp
xchg
sub
cmp
fwait
pop
insl
dec
pop
ret
imul
and
xchg
sbb
data16
jl
pushf
mov
shlb
inc
push
add
xchg
inc
sub
rcrb
ljmp
xchg
push
ljmp
xlat
lret
cmc
xor
fisubl
mov
hlt
sarb
pop
xor
mov
ret
jno
mov
imul
addl
xchg
test
ljmp
adc
into
rorb
and
iret
push
cmpsl
or
fisubrs
add
or
fsubrl
lret
sub
pop
mov
sub
pusha
sahf
mov
xor
test
in
add
ss
in
push
sbb
into
popa
jbe
adc
jp
js
movsl
into
imul
push
call
xlat
xchg
inc
mov
cmc
dec
in
in
dec
inc
lret
out
pushf
mov
sub
ss
mov
or
inc
cld
lret
out
mov
fstl
sub
inc
cli
cld
outsl
call
and
push
fcoml
pop
icebp
stc
clc
shrl
adc
pop
sarb
push
and
push
jae
xchg
mov
push
dec
aam
repnz
mov
out
xchg
xchg
mov
cmpsb
mov
std
in
bound
push
out
add
adc
loopne
xchg
std
and
adcl
hlt
adc
inc
imul
loope
lods
push
lcall
adc
subb
inc
jae
outsb
add
leave
je
nop
xchg
push
xchg
lods
mov
or
stos
movsl
out
fidivrl
data16
sti
adc
rcl
arpl
int
bound
imul
mov
insl
xchg
cs
les
add
push
mov
adc
push
add
adc
sbb
ret
pop
xchg
jmp
movsb
inc
cmp
dec
shlb
out
pop
add
ss
add
jg
mov
or
adc
xchg
jge
pop
icebp
jae
dec
mov
mov
add
xor
and
inc
ja
andb
std
xchg
pop
daa
cmc
nop
adc
xor
shrl
dec
or
out
dec
aam
cmpl
dec
fdivl
cltd
push
mov
sbb
pop
in
push
jecxz
cld
ja
addl
cld
dec
test
rcrl
movsl
pop
xlat
mov
mov
ffreep
pop
loop
mov
sub
mov
shr
cs
xchg
cmp
sbb
and
or
xor
sbb
mov
dec
or
test
push
in
mov
mov
push
testb
dec
push
nopl
cmp
adc
fstpt
cmp
cwtl
add
cmpb
xor
aaa
push
pop
aas
jge
out
test
xchg
loop
mov
xchg
sbb
dec
loope
popf
mov
push
push
mov
xorl
mov
jl
push
xchg
outsb
inc
shl
repz
testb
mov
shrl
xchg
icebp
inc
push
adc
shl
adc
lds
mov
jle
test
xchg
mov
std
xchg
scas
stos
sbb
mov
out
movsl
xor
scas
lock
je
sbb
enter
xchg
ret
mov
push
in
imul
add
imull
stos
cmp
dec
xchg
add
mov
cmpsb
rcrb
imul
mov
clc
mov
cmc
adcb
shr
add
sub
jo
push
cmc
or
mov
and
mov
fs
imul
cmp
cmp
dec
lock
mov
std
sahf
xchg
mov
stos
aam
jae
insb
pushl
cli
lret
les
inc
repz
int3
or
inc
rcrl
jp
dec
imul
push
mov
outsl
sbb
popf
and
into
aam
cs
push
idivl
xchg
xor
cs
dec
push
mov
lret
cli
xchg
addr16
fldt
ficoml
cmp
cld
jmp
movb
cmp
or
push
cmp
loope
xchg
nop
or
dec
pop
push
mov
mov
data16
imul
andb
dec
xorl
pop
mov
nop
daa
xchg
xor
aad
lods
cmp
dec
dec
daa
inc
mov
loopne
dec
lahf
push
xchg
dec
inc
aaa
fdivrs
scas
sbb
lahf
add
shrl
pusha
mov
hlt
shlb
mov
arpl
and
cmp
cmp
pop
rcl
add
cmp
loope
sub
rol
xchg
add
push
mov
pusha
loopne
mov
mov
lcall
sahf
pop
scas
ret
hlt
and
mov
jno
pop
push
push
xor
mov
push
mov
aaa
js
push
aad
popl
dec
mov
insb
xchg
sub
mov
pushf
pop
pop
lcall
sbb
sbb
jb
jge
cmpl
inc
and
icebp
scas
inc
or
stos
add
jp
test
call
test
mov
lods
xchg
loop
jp
sbb
in
fsts
daa
jg
loop
out
push
pop
add
push
insl
int3
xorb
aad
jge
inc
mov
jmp
pop
sbb
bound
loop
push
aad
cmp
pop
pushf
mov
inc
or
cwtl
mov
lahf
or
daa
dec
lret
into
push
std
call
popf
push
pop
dec
fisubl
repnz
xchg
scas
or
cmc
leave
xchg
and
fstpt
addl
inc
stos
cmc
dec
cwtl
mov
popa
cs
push
xor
xchg
jmp
js
and
es
aas
adc
popf
adc
push
jecxz
xlat
jno
mov
dec
mov
dec
int
addl
sbb
in
dec
dec
push
rcr
mov
out
nop
pop
mov
mov
cwtl
mov
pop
sahf
pushf
repnz
test
lcall
mov
add
jle
sub
sub
push
inc
fiaddl
mov
and
sarb
das
jle
sub
mov
jecxz
andl
popf
int
test
arpl
les
das
cmp
pop
pop
pop
inc
adc
iret
popa
loope
arpl
pop
dec
adc
cmpsl
mov
push
mov
data16
inc
pushf
fwait
mov
loop
shr
testl
cmc
seto
cmp
test
add
mov
push
mov
ja
push
mov
sbb
cwtl
insl
sbb
in
ss
imul
insl
dec
push
or
or
lcall
and
adc
sti
or
pop
stos
iret
sub
xchg
sub
cwtl
test
shlb
push
sbb
ss
ret
sub
mov
mov
stc
push
icebp
and
sti
cmp
inc
mov
cmp
repnz
push
setle
rolb
xchg
or
shll
in
mov
xchg
repnz
sub
decb
xor
cmpsl
pop
push
push
fisttpl
sahf
push
push
jo
push
ss
lret
cmpl
mov
setns
or
insb
jnp
push
sub
cmp
lret
push
test
into
inc
int3
xor
xchg
mov
sbb
xchg
adc
push
lret
sub
fbld
push
push
ss
adc
push
fwait
ja
addr16
push
popf
or
cmp
stos
imul
mov
mov
lea
push
stos
jne
test
mov
pop
fcmovbe
es
sbb
pop
mov
scas
mov
lods
notb
fistl
fs
cmc
inc
jb
inc
test
orl
iret
pop
cld
dec
xchg
inc
xor
into
push
jle
andb
jmp
cmc
je
push
ficompl
fidivl
ficoms
xchg
sbb
push
aaa
pop
rorl
mov
xor
es
dec
movsb
push
sahf
leave
subb
jno
imul
sub
xor
lret
insb
pop
and
inc
fimull
jbe
gs
adc
pop
test
addb
lahf
mov
out
popf
fstp
pop
scas
or
sbb
xor
mov
divl
sub
movsl
mov
out
sub
dec
or
int3
xlat
repz
movsb
into
xchg
mov
mov
inc
dec
lahf
dec
loop
jp
jecxz
xor
sub
mov
in
ds
imulb
iret
jge
lret
adc
mov
aad
push
pop
sbb
mov
mov
cltd
icebp
cmp
jg
jno
sbb
or
xor
stc
fmulp
dec
xchg
stos
and
add
mov
lock
lahf
xor
mov
jle
cmp
push
sbb
sub
dec
icebp
sbb
and
push
jae
push
push
xchg
dec
aad
mov
jno
pusha
mov
shlb
cs
dec
cmp
xor
hlt
xchg
dec
in
out
call
xchg
insl
or
pop
and
mov
stc
mov
popa
cwtl
xchg
aam
lds
pop
cmc
ds
add
mov
sbb
in
scas
push
movsl
fdivl
cmp
js
xor
lahf
aad
mov
push
mov
mov
xor
mov
mov
or
test
fcomp
ja
sub
sub
pop
ret
fldl
xchg
mov
in
leave
sti
shufps
in
int
jmp
pusha
lret
test
ror
sub
cmp
pusha
test
aas
std
dec
in
popa
fsubl
dec
dec
pop
out
aad
fsubp
pushf
mov
adcl
sbb
mov
mov
add
xchg
cmp
push
push
into
loop
mov
lods
lret
xchg
mov
xchg
inc
xchg
mov
jp
jnp
aaa
iret
ja
push
ljmp
jno
insl
cli
fs
push
dec
pusha
xchg
pop
sbb
sbb
push
and
or
shrb
push
cmp
mov
mov
fbstp
jmp
mov
mov
hlt
push
push
sub
outsl
aaa
push
xor
cmpsb
xor
pop
push
shl
mov
iret
lea
int
add
movsl
inc
insl
sar
adc
mov
jae
pop
and
sbb
es
add
cwtl
or
aaa
mov
sarb
loope
mov
arpl
adc
pop
enter
xchg
icebp
dec
sbb
ja
dec
cltd
rcll
sbb
mov
aam
add
test
lret
movsl
loopne
sahf
aam
roll
ss
xchg
nop
xchg
lcall
lcall
aam
cld
sub
xor
mov
push
mov
pop
mov
push
sub
push
fdiv
test
mov
test
cmp
dec
call
int3
dec
pop
or
test
mov
repz
insb
and
ret
jmp
in
mov
nop
mov
popa
lahf
nop
fwait
inc
pop
fisttps
mov
mov
mov
sub
ficomps
in
or
mov
outsb
push
int3
cld
inc
mov
sub
push
cmpsb
ds
push
icebp
pop
mov
xchg
push
pop
test
cmp
xchg
xor
push
stc
test
bound
cli
ret
sarl
loopne
stos
lock
push
and
mov
xlat
sbb
std
inc
adc
cs
mov
fsubrs
inc
sub
push
and
jg
pushf
daa
or
xchg
add
dec
cmp
push
mov
cmc
cmp
push
ds
xor
sub
xor
pushf
jns
pop
jne
cmpsl
mov
xor
jle
push
mov
popf
clc
or
leave
jnp
mov
cwtl
inc
push
add
add
fildll
cld
mov
xor
into
in
and
add
adc
mov
mov
and
jnp
or
jecxz
push
movsb
into
mov
ljmp
jno
fisubl
or
jns
inc
stos
or
jno
mov
insl
cmp
mov
clc
mov
jl
nop
or
sarb
and
add
pop
lock
loop
movsl
aas
xchg
sub
repz
cld
cmp
out
and
fnsave
and
pop
sub
testb
add
aaa
sub
bsr
adc
mov
loope
out
sbb
aaa
mov
or
test
lret
in
sbb
fdivrs
dec
mov
frstor
imul
mov
sbb
mov
popf
jg
or
mov
pop
xor
stc
jmp
orl
daa
push
jecxz
jb
pushf
repz
pop
cs
loopne
std
adc
mov
inc
push
mov
jb
fstp
xor
rep
xor
add
stc
sub
repz
adc
mov
fnsave
jbe
pusha
test
dec
lods
lds
fiadds
xchg
aas
loope
pushl
fisubrs
mov
inc
mov
push
adc
or
daa
pusha
fsubr
aaa
or
mov
cmc
adcb
sub
push
inc
fidivs
arpl
mov
pop
adc
mov
dec
in
mul
js
popa
cmp
inc
scas
push
fidivrs
jb
in
lock
cmp
stc
add
pop
nop
cli
or
push
sahf
lcall
sub
out
add
adc
lahf
push
cld
pop
mov
iret
sbb
insl
adc
mulb
insb
testl
ret
inc
xchg
jns
addr16
dec
pop
cli
cmp
out
mov
mov
mov
sar
ret
test
mov
fbstp
adc
je
mov
flds
mov
inc
arpl
fdivrs
das
mov
mov
out
or
test
and
cmp
or
mov
push
sub
xchg
leave
loopne
mov
bound
hlt
loopne
add
ficomps
add
add
adc
sub
mov
mov
lods
out
ljmp
xchg
rcrl
mov
cmp
dec
loop
adc
pop
cmp
pop
into
stc
les
or
mov
add
es
sbb
sar
cld
fdecstp
bound
dec
sub
jne
cmp
scas
xchg
adc
enter
mov
mov
jae
insb
loop
mov
mov
lds
cmpsb
arpl
ret
sbb
orl
jp
jb
loope
dec
ja
lea
or
mov
shlb
shll
push
mov
sbb
sub
adc
pop
lret
push
xlat
mov
je
fidivs
adc
inc
pop
sub
jns
cs
push
cmpb
sbbb
sbb
in
loopne
cmpsb
fisttps
mov
cli
in
sub
mov
dec
je
in
xchg
add
xor
out
dec
outsl
adc
jge
pop
es
lods
push
jnp
mov
adc
shll
rcrl
xlat
mov
jno
repnz
mov
pushf
popa
pop
cwtl
iret
xchg
cmp
dec
pop
sbb
push
sti
rorl
cmp
xor
aam
test
lock
jbe
in
arpl
lock
add
cli
xchg
es
push
int3
ss
mov
mov
sbb
imul
int3
arpl
lahf
jo
or
andb
sub
movsl
out
sahf
popf
sbb
orl
xchg
test
test
inc
ljmp
mov
sub
add
and
fnstenv
ret
adc
jp
insb
add
rep
push
and
pop
mov
mov
push
shlb
jle
mov
nop
and
mov
imul
cmc
add
mov
stos
or
push
out
push
ret
ret
rclb
scas
fsts
fnstenv
mov
fdivrl
mov
cmpsl
fcoms
mov
or
sahf
adc
cwtl
add
or
fnstcw
pop
daa
sti
hlt
incl
sub
enter
jns
test
cmpsl
inc
data16
cwtl
cld
or
push
sti
lahf
divl
pop
mov
xor
iret
push
repnz
out
mov
pop
inc
inc
aam
shrl
sub
jns
testl
pop
sub
mov
les
test
out
sub
cmp
aas
pop
loope
pop
lock
data16
lods
sub
push
addl
call
sarw
loopne
push
cmp
mov
add
out
xor
push
and
jae
mov
jmp
adc
cmpb
adc
lcall
sub
cmp
ja
inc
aas
in
je
push
cmpsb
inc
xchg
mov
adc
jnp
mov
in
ljmp
pop
pop
jno
das
in
jg
cmp
jl
push
cmp
sbb
test
mov
jg
pushl
fstpl
sbb
sub
jns
in
in
jns
lret
das
sti
pop
lea
pop
leave
imul
pop
mov
pop
mov
cmpb
mov
push
and
add
jno
aas
icebp
jnp
jecxz
out
mov
lcall
stos
ret
pop
fisttpl
adc
push
aas
es
adc
ret
mov
cltd
xor
sub
leave
pop
fsubl
shl
xor
insl
dec
cmp
sbb
in
add
add
ret
jae
xchg
push
sbb
pop
std
mov
sub
push
test
push
aas
dec
pop
add
mov
mull
mov
sub
xchg
adc
xchg
in
ja
lcall
push
shrb
pushf
call
aaa
or
jns
fisubl
popf
popa
or
stc
gs
adc
ret
push
out
clc
movsl
mov
mov
lahf
lahf
jb
dec
cwtl
lock
inc
outsb
pop
sbb
cmp
and
hlt
ret
fs
loopne
pop
push
pop
imul
bound
push
in
fcom
sbb
into
enter
aam
dec
insl
outsb
mov
out
xchg
add
mov
xor
addr16
pop
cwtl
xorl
insb
and
or
lock
adc
mov
inc
mov
ja
adc
enter
push
and
lea
xchg
test
ss
movsl
sbb
push
es
push
stos
dec
sub
jp
cmp
filds
imul
mov
inc
push
push
mov
and
sbb
mov
sbb
fwait
adc
push
insl
mov
push
jecxz
mov
push
inc
popa
mov
push
inc
dec
imul
shlb
or
loop
loope
scas
mov
movsl
jno
push
mov
inc
gs
leave
fistpll
cli
pop
and
outsl
or
inc
push
adc
sub
xchg
jmp
jmp
adc
test
mov
fildll
push
push
lret
cld
mov
dec
insl
sbb
xchg
mov
mov
outsl
or
aas
into
adc
push
aad
xchg
mov
push
or
and
add
nop
mov
and
pop
cmp
push
and
int3
lret
sbb
jle
aaa
push
aas
insl
je
xchg
cmp
cmp
adc
sarl
negb
ja
jae
or
lds
call
fbstp
or
int
fwait
arpl
push
popf
mov
push
jmp
push
jl
mov
ja
inc
add
sbb
leave
jecxz
addl
pop
dec
xor
insb
xchg
in
sbb
and
and
ds
bound
and
xor
lock
jle
add
inc
ficompl
dec
mov
xor
fidivrs
cmp
jbe
add
sti
pop
pop
and
dec
mov
add
sbb
push
xchg
mov
jnp
pop
inc
pop
or
test
pop
inc
xlat
jmp
fisubs
cmp
mov
xor
js
das
testl
pushf
pop
jp
out
das
aam
das
or
mov
int3
and
dec
int
fcoms
mov
stc
xor
andb
fbstp
popf
jle
lods
pop
push
sahf
jne
push
aas
dec
mov
mov
push
jne
mov
aas
mov
int3
gs
pop
pop
jno
cmp
clc
push
ljmp
dec
mov
scas
lock
es
repnz
push
or
insl
sub
iret
xchg
mov
fimuls
pop
cmpl
test
in
jae
lea
push
insb
fistps
mov
pop
add
mov
test
roll
inc
pop
cmpsb
movsb
arpl
in
clc
xor
in
xchg
pop
dec
dec
icebp
sub
aas
xlat
push
mov
mov
xor
sbb
rcrb
adcl
push
dec
ljmp
jecxz
pusha
out
push
sbb
in
fcmovb
popa
jnp
and
pop
dec
test
rorl
leave
addr16
pushf
add
sub
in
push
sbb
mov
addr16
and
aam
mov
in
mov
sbb
int
push
imul
jno
pop
xchg
jns
or
pop
fmull
ret
mov
sub
push
bound
add
xchg
mov
mov
loope
pushf
aaa
push
sti
adcb
cltd
aas
in
inc
cld
lock
popa
pop
shll
sub
sub
lfs
mov
aas
es
fwait
mov
addl
add
test
sti
add
cld
cmpsb
int
sub
stos
int
xchg
in
repnz
and
imul
jp
jbe
mov
dec
or
fldl
popf
pop
cmp
inc
inc
adc
cmp
into
aad
push
xchg
loope
jne
cwtl
sti
or
inc
xor
xchg
xchg
out
jecxz
sbb
mov
mov
cmc
mov
jg
adc
bound
into
sub
stc
push
xchg
out
and
mov
inc
mov
mov
addl
pop
xorb
data16
jmp
or
mov
push
scas
adc
shll
push
sbb
test
aam
cmp
jae
xor
adc
stos
jae
mov
mov
mov
sets
mov
lds
cmp
xlat
sti
scas
push
in
daa
xorl
jp
push
rorb
mov
loope
pop
xor
add
rcll
xchg
cli
fwait
sub
pop
js
jmp
mov
fisttpll
into
ss
insb
sub
xor
mov
mov
fwait
or
mov
fldenv
inc
mov
loop
stos
loop
loop
pop
sbb
mov
adcb
and
daa
je
aad
lds
mov
mov
jbe
mov
and
cmp
iret
mov
dec
jmp
std
sub
dec
adc
lret
pop
adc
jp
xor
sbb
sbb
xchg
sbb
cs
fucomp
fbstp
ds
mov
subl
adc
jnp
movsl
enter
jl
sub
xchg
dec
sbb
jmp
aas
xor
pop
add
sub
es
test
lahf
cmp
push
push
fnsave
adc
ds
and
inc
loop
cltd
adc
mov
sarl
ds
xlat
mov
dec
mov
jns
loope
xchg
cmpsl
fidivs
lods
pop
jb
jle
sub
pop
push
mov
jne
jb
test
je
inc
jns
adc
or
sbbb
jmp
aad
andl
mov
int
inc
arpl
aaa
dec
xchg
adc
cmp
sbb
cmp
add
sub
jbe
mov
adc
and
mov
ret
push
cwtl
mov
out
xchg
or
push
cmp
add
fcomi
pusha
mov
clc
sbb
sbb
cmp
test
or
imul
imul
sarl
cli
pop
or
cmp
cltd
push
movsb
sub
xchg
mov
sarb
les
testb
test
insl
in
xor
push
sbb
imul
jne
popf
or
dec
cmc
push
mov
mov
aad
or
mov
sub
insb
vpaddw
mov
dec
adc
xchg
enter
adc
insb
sub
out
test
jno
aam
mov
and
jo
adc
and
repz
sar
repz
insb
mov
xor
leave
int
mov
mov
rcrb
insl
movsl
xor
mov
pop
jg
dec
cwtl
rolb
enter
mov
mov
dec
rcll
add
fdivrs
leave
ret
mov
xor
inc
insb
gs
arpl
into
mov
shrb
pop
push
sub
pop
or
mov
pusha
int
roll
lcall
stos
imul
or
into
cmp
adc
xor
push
iret
sbb
je
xor
scas
aas
out
cwtl
cwtl
add
xor
pushf
jo
adc
int3
mov
inc
cld
andl
arpl
enter
xor
push
dec
sti
mov
cmpsl
in
insb
sbb
xchg
mov
pop
pop
add
push
les
cmpsb
lea
insl
adc
insl
pop
add
or
es
mov
fs
push
loope
cmp
or
inc
adc
cli
imul
cmp
push
cltd
inc
sub
lret
lds
dec
out
add
push
cmc
lret
idiv
or
pop
sub
add
les
aad
push
cmc
fwait
or
xchg
movsb
jae
ja
fsubrs
outsl
ret
pusha
adc
adc
pop
and
jl
add
jb
lahf
inc
xchg
cmp
add
ror
int
adc
std
jnp
jmp
add
mov
stos
xchg
cltd
aad
mov
sbb
leave
sbbl
roll
xor
gs
mov
cli
jno
inc
cmp
jbe
in
xchg
mov
int
dec
loope
add
dec
mov
sub
fwait
inc
dec
shrb
lcall
inc
insl
jg
ss
lret
xchg
sarb
lahf
add
jle
mov
loopne
int3
adc
scas
mov
inc
fistl
sub
mov
mov
test
fwait
in
pop
out
xchg
pop
ja
lds
mov
icebp
and
push
sarb
aad
outsb
lods
sub
push
add
inc
dec
movsl
dec
popf
jmp
enter
inc
push
rcll
in
add
shlb
jmp
fiaddl
mov
dec
jnp
int3
jecxz
pushf
aad
sahf
mov
sub
push
lds
fs
imul
arpl
lea
add
insl
or
jp
nop
into
addl
add
jecxz
mov
sbb
sub
lahf
push
loope
cmp
pop
pop
push
adc
xchg
out
mov
loope
push
scas
je
mov
fists
sub
dec
outsb
fstps
mov
sub
les
scas
push
jle
pusha
and
sub
cs
call
dec
sbb
sti
sub
insb
mov
and
push
fistl
and
push
in
aas
clc
dec
test
mov
sub
lret
inc
xlat
sbb
lods
xchg
loopne
pop
adc
lea
daa
add
xorl
jle
dec
mov
jg
mov
repz
icebp
sub
pusha
fcmovnb
hlt
mov
jmp
inc
fdivl
into
je
arpl
dec
adc
jle
and
sub
add
out
enter
js
cmp
in
incl
mov
xchg
test
push
cmp
mov
das
jo
cmpsl
jge
jmp
mov
popl
lret
and
clc
xlat
int3
les
testl
add
out
mov
mov
jno
cmp
or
fwait
dec
mov
inc
mov
test
shrb
and
ja
lcall
and
jg
stos
and
and
lea
je
movsb
cmpsb
inc
mov
adc
sbb
inc
clc
push
in
or
pusha
add
jo
inc
aam
mov
ficomps
into
repz
test
pop
and
adc
data16
mov
push
cmpsl
fsubrs
sbb
jle
push
adc
mov
push
cmpsb
inc
inc
call
nop
cmp
mov
lcallw
pop
test
es
js
out
cli
test
xor
xchg
int
andb
xchg
mov
inc
sbb
nop
mov
std
rcrb
int
in
add
jno
push
cmp
pop
cmpb
insb
mov
push
mov
sti
call
repnz
scas
adc
mov
mov
lret
xchg
aad
scas
repnz
cld
adc
loope
sbb
dec
ffreep
xlat
push
movsl
insl
and
mov
xchg
mov
cld
incb
ror
push
adc
or
sbbb
imul
outsb
int
mov
push
and
test
loop
jnp
out
adc
cmp
cmc
jge
fnsave
cmp
repnz
push
cmpsb
aam
sub
inc
icebp
jmp
fldcw
sti
xchg
int
mov
mov
inc
cs
xchg
insl
xchg
mov
cmp
aas
lock
mov
scas
in
les
gs
cmp
js
bound
arpl
inc
movsl
and
adc
negl
or
sbb
xchg
dec
or
shl
sub
mov
js
jp
inc
dec
add
sbb
nop
test
pop
testl
sahf
jecxz
or
or
arpl
jp
xchg
jge
test
xchg
scas
into
mov
imul
enter
pusha
add
push
data16
pop
popf
call
daa
xor
popa
sub
lea
inc
jnp
inc
out
lods
inc
and
shrl
es
fs
enter
in
jg
push
adc
xchg
ja
inc
test
mov
mov
push
aas
dec
inc
icebp
loopne
xor
sbb
test
mov
mov
faddl
out
sbb
aad
test
xchg
add
push
shll
xor
dec
mov
rorb
into
in
repz
or
push
ljmp
jno
pop
jge
mov
cmp
xchg
ret
pushf
aaa
into
mov
push
push
push
inc
sbbl
out
je
int3
mov
adc
dec
movsl
or
in
pushf
jb
dec
movsb
jle
xor
out
dec
and
or
jae
int3
push
ret
in
inc
or
icebp
divl
fcomp
jle
popa
xchg
out
icebp
push
pop
mov
dec
sub
in
push
cmp
xor
stc
movsb
insl
or
push
cmp
ficomps
fidivrl
dec
out
or
addr16
sub
jno
stos
lcall
cmp
decl
add
mov
std
pop
enter
mov
aam
jae
xrelease
loope
push
pop
adc
adc
pop
xchg
xor
fwait
xor
pop
movsb
xor
ljmp
inc
xor
jb
inc
fcmovbe
pop
cmpsl
sbb
popa
fcompl
lea
add
movswl
stos
sub
es
mov
loopne
cmp
inc
mov
stos
negl
mov
mov
stc
lds
notl
mov
mov
idivl
insl
jnp
lcall
gs
in
shr
ds
and
add
movsb
cli
out
mov
xchg
js
ret
mov
jno
adc
sbb
inc
inc
cli
int3
enter
add
in
mov
mov
fidivl
mov
mov
mov
imul
mov
in
outsb
inc
iret
jg
push
shrl
mov
mov
sar
and
in
ret
mov
sbb
jno
and
pop
adc
lret
shlb
sahf
jl
mov
mov
jge
mov
inc
cld
push
jns
lods
xchg
xchg
aas
loopne
shrl
fmuls
xchg
xchg
pop
int3
or
adc
test
loopne
pop
push
xor
repnz
adc
cmp
stc
cmp
add
sbb
lea
jno
insb
aaa
out
mov
pushf
outsb
jno
push
pusha
pop
dec
cmp
sti
push
ss
clc
and
or
mov
push
leave
fcomps
popa
je
cmp
or
sbb
shrb
xchg
sahf
cld
dec
out
or
movsb
repnz
dec
sub
jecxz
or
orb
jbe
shlb
mov
cs
xor
xor
in
imul
mov
into
mov
pop
dec
fmuls
inc
fisubrs
push
sub
inc
scas
adc
push
adc
mov
sti
out
push
clc
inc
negl
fistpll
xor
add
cld
pop
xlat
pusha
js
ja
rorb
inc
rol
pop
fistpll
inc
sarb
shlb
rcll
lods
push
cmc
andl
daa
cmp
jnp
sub
dec
and
dec
sbb
popa
or
addl
jecxz
mov
call
repnz
inc
dec
fsts
dec
pop
inc
cli
push
repz
lret
incb
inc
push
jno
cmp
inc
pushf
enter
mov
das
insb
aas
scas
xchg
stc
inc
sub
jb
dec
arpl
inc
jo
inc
enter
pop
in
pop
call
rcl
ret
repnz
inc
mov
push
push
inc
mov
push
sahf
fcomip
mov
test
add
js
imul
xchg
dec
mov
scas
adc
js
cmp
and
sbb
jecxz
ss
leave
lods
mov
pop
lock
shlb
pop
les
pop
int3
and
and
mov
pop
out
inc
jp
lea
gs
je
call
lret
fiadds
movsb
inc
dec
push
fildll
orb
test
mov
fidivs
andl
es
and
mov
ret
push
and
push
mov
aad
test
xchg
ret
inc
inc
cmp
fs
cli
popa
or
mov
jns
jmp
or
arpl
aam
sbb
or
mov
aad
mov
in
xchg
sub
mov
in
push
push
sbb
mov
cmp
iret
sbb
adc
ss
fwait
mov
and
ljmp
out
or
faddl
andb
jae
cmp
pop
inc
clc
test
jae
mov
push
rolb
test
outsb
add
bound
je
mov
js
cmp
sub
mov
adc
adc
rcll
test
cmp
nop
inc
enter
stc
fildll
fs
icebp
pushf
arpl
mov
mov
movb
xor
pop
rorl
add
or
push
xlat
test
add
test
js
repnz
addr16
pushl
shll
pop
xor
dec
imul
mov
int3
dec
sub
push
cmp
idivl
aaa
dec
mov
cmpsl
in
ror
sbb
or
cmp
daa
adc
daa
mov
fsubrl
ja
mov
add
jbe
cmp
sbb
or
cmpsl
ret
mov
or
sub
push
lods
push
into
fcmovbe
push
icebp
mov
pop
push
lcall
xchg
testl
test
jbe
movsl
cmp
xlat
sub
insl
cmp
sub
inc
or
mov
dec
dec
mov
or
into
imul
push
fwait
jg
or
jl
insb
rol
mov
aas
xchg
pop
jle
adc
pop
hlt
repz
aaa
dec
push
cmp
mov
mov
frstor
mov
push
jg
pop
adc
push
subps
jmp
pop
movsl
pop
cld
mov
stos
mov
cmpl
imul
inc
pop
ljmp
imul
mov
xchg
dec
sbb
fwait
into
test
cmp
in
or
and
aaa
jne
and
xor
sbb
or
scas
pop
inc
insl
jb
movsl
jg,pt
or
pushf
adc
ss
mov
hlt
xor
cmp
pusha
sarl
imul
and
cmp
xchg
or
cmp
leave
add
and
outsl
cmp
pop
add
push
xchg
pop
adc
mov
and
add
jge
std
jb
cmp
int3
jp
adc
sub
pop
xor
aas
inc
xor
mov
sti
pop
adc
xchg
sarl
iret
jp
dec
pusha
arpl
stos
inc
and
inc
movsb
xchg
jo
mov
mov
aam
data16
fnsave
lret
adc
gs
xor
pop
cwtl
adc
dec
test
pop
push
jns
lcall
add
stc
adc
cmp
insb
mov
dec
rcrl
repz
push
xor
adc
iret
ss
arpl
int
inc
stos
xchg
addr16
andl
shrb
call
dec
jmp
dec
ss
pop
idivb
inc
dec
push
dec
daa
add
sbb
jg
nop
sub
dec
push
sub
data16
sbb
add
xchg
cli
push
adc
pop
in
hlt
std
leave
push
mov
jle
cmp
mov
ljmp
push
in
dec
adc
fwait
mov
fldt
inc
mov
scas
cmp
fistpll
movhps
out
cmpsl
fucomip
cld
cmp
aad
fstp
lret
pop
cmp
test
call
mov
push
js
push
popf
xor
fists
ljmp
inc
test
fwait
sbb
int
or
addr16
lret
jnp
sub
insb
pushf
xchg
or
adcl
in
add
mov
out
xor
push
or
push
cmpsl
push
jge
call
jg
ja
and
je
out
jno
scas
xchg
bound
jge
scas
ret
repnz
jl
and
jmp
std
test
pushf
and
insl
aad
jnp
xor
aaa
orl
sub
repnz
dec
test
out
xchg
cmpsb
push
rcr
hlt
or
je
frstor
std
in
xor
jns
lock
aad
cmpsl
mov
addr16
jmp
jp
aad
sbb
jle
inc
std
and
mov
popa
sub
xchg
jl
shr
arpl
add
xor
xchg
in
test
push
call
sbb
adc
xchg
lahf
mov
lea
inc
jge
fnstcw
in
mov
adc
dec
mov
pop
push
out
ret
pop
mov
dec
cmp
adc
xor
or
xor
dec
mov
sahf
cmp
test
lea
gs
ficomps
dec
xor
dec
inc
sub
out
xor
loope
jns
ja
sub
mov
inc
notl
nop
sbb
sti
inc
sub
sub
scas
and
lods
mov
sbb
rcrb
enter
push
inc
mov
in
add
hlt
cltd
pop
fstl
mov
fldenv
lods
xchg
imulb
es
enter
mov
add
ret
loop
cs
je
xchg
movsl
mov
fwait
bound
jbe
cmpl
ret
arpl
nop
add
rcrl
jmp
in
lods
js
lock
mov
jecxz
icebp
imul
mov
iret
or
add
xor
or
out
js
fmull
push
push
push
sub
lret
int
add
xor
adc
cmp
sbbl
jl
lahf
stos
mov
xchg
cltd
js
inc
test
lret
jb
ficompl
xor
out
les
mov
sub
sbb
mov
add
pushf
xchg
push
and
icebp
or
sbb
or
inc
stos
pop
cs
pop
in
jmp
in
mov
mov
mul
xchg
and
sbb
xor
bound
inc
movsl
sbb
xchg
enter
rcrb
fldl
jp
fdivrs
mov
dec
push
cli
rcrb
addl
ss
lods
mov
mov
data16
xchg
pop
push
xor
mov
cmp
popa
mov
or
sahf
jecxz
jbe
cbtw
mov
sti
adc
int
pop
dec
shrl
int3
and
pop
cli
push
xchg
jbe
test
adc
cmpsb
xchg
pop
mov
test
sbb
push
test
fucomi
jne
ja
inc
test
enter
sbb
add
imul
add
xlat
repz
xor
cwtl
es
lahf
out
jns
sbb
lret
push
jne
mov
stos
mov
pop
gs
push
inc
push
pop
lock
fimull
ja
xor
aaa
insl
inc
jne
lea
xor
lret
arpl
cmp
lea
and
cli
mov
lods
popa
std
data16
or
push
mov
pop
jp
cmp
out
add
movl
je
lock
and
nop
sub
in
and
jbe
aas
into
xor
mov
and
and
scas
movsl
inc
xor
stc
sysexit
and
cmp
push
jmp
sub
dec
lahf
lcall
pop
insl
stc
fdivrs
inc
or
add
lock
adc
lods
add
xor
and
bound
sub
mov
les
notb
fdivl
pop
mov
sbb
loopne
and
adcb
js
cmp
sbb
scas
dec
dec
negl
je
out
xchg
arpl
in
into
add
sbb
shlb
jno
push
mov
insb
xchg
addr16
fwait
lods
mov
imul
arpl
mov
loop
jae
jb
lods
sub
int3
sahf
inc
cs
faddl
mov
inc
dec
cltd
xor
fdivl
iret
pop
mov
or
ja
ret
or
mov
or
aaa
or
movsb
mov
sbb
inc
adc
pop
mov
cld
call
push
sbbl
mov
and
scas
test
adcb
nop
in
mov
cmp
popf
add
xor
andl
imul
outsb
dec
mov
dec
imul
popf
push
jnp
sbb
push
and
xchg
push
sbb
and
push
mov
subl
mov
movsb
bound
push
push
test
les
data16
mov
add
adc
lcall
pop
mov
enter
movsb
loopne
ja
cmp
mov
and
rep
je
mov
push
push
mov
addl
mov
pop
divl
fcomps
dec
and
xor
xchg
mov
mov
mov
xchg
popa
cld
jae
push
addr16
sub
test
push
mov
test
push
fldcw
sub
pushf
insb
adc
out
push
mov
addr16
js
fcompl
push
lret
push
lods
fsts
xlat
dec
popf
scas
jno
aad
es
jns
out
outsb
adc
aam
xor
fidivrl
mov
mov
jae
mov
dec
dec
rcll
mov
cs
cmp
and
fistpl
xor
js
xor
lret
bound
push
push
int
insl
jo
jp
int3
loope
test
mov
nop
arpl
outsb
adc
mov
fisttps
scas
cld
dec
pop
xor
add
lret
inc
pop
mov
test
cmp
stc
jo
and
jae
adc
cmp
lret
jle
add
lret
loope
adc
adc
mov
int3
mov
mov
stos
cmc
pop
xchg
adc
push
test
pop
adc
mov
mov
sub
mov
lock
jne
mov
mov
out
daa
dec
scas
mov
insb
lods
add
leavew
pop
ds
push
mov
fdivl
cmp
xchg
pop
mov
fldl
aaa
xchg
sub
cmp
fidivrl
sub
push
or
ss
daa
jmp
jno
or
andl
sub
or
xrelease
jbe
icebp
andl
je
add
adc
std
or
cmpsl
jo
sbb
shlb
lds
adc
push
inc
scas
divb
jg
shlb
lds
out
xchg
xlat
mov
mov
lock
insb
aad
add
rol
pop
test
mov
rorl
pop
popf
cli
xchg
xchg
mov
pushf
dec
and
andb
cltd
pop
inc
ljmp
xor
sub
xchg
xlat
mov
sbb
fldenv
fsts
push
es
push
adc
inc
jb
mov
ljmp
or
jbe
nop
int3
mov
mov
xor
mov
push
leave
adcb
mov
movsb
and
inc
sbb
ds
bound
aad
sub
jo
jecxz
push
jns
mov
pop
mov
mov
xchg
les
popa
lock
negb
and
js
sbb
mov
imul
sbb
mov
outsl
std
jne
sbb
popf
and
insl
push
insl
xchg
sub
jl
jl
adc
fiadds
push
std
icebp
js
incl
mov
mov
jbe
cmpsl
push
ljmp
cmpsb
ret
inc
push
pop
or
jmp
add
add
push
fldcw
mov
push
mov
push
push
mov
cwtl
loope
add
add
fwait
inc
mov
cmp
jecxz
js
pop
in
or
cwtl
lahf
xor
jne
test
lds
xchg
shr
ss
sbb
fiaddl
adc
pop
popa
and
mov
cmpsb
or
in
jbe
mov
dec
dec
add
leave
and
xor
or
xchg
mov
and
inc
movsb
xchg
mov
insl
adc
inc
sub
inc
cmp
mov
out
js
pop
ja
jbe
jo
jmp
pushf
xor
sti
xchg
fdivl
cmc
in
xchg
push
mov
jnp
fisttps
int3
mov
sarb
ja
jne
xlat
mov
leave
ret
fwait
scas
repnz
fiadds
sbb
inc
lock
mov
mov
das
repnz
dec
out
and
pop
out
inc
lcall
js
xor
inc
pusha
int3
cmp
lds
insb
shll
aam
fwait
mov
shrl
pop
push
shl
jnp
fnstcw
in
lea
cld
inc
sbb
jnp
cli
dec
sbb
mov
pop
fwait
or
jne
mov
sub
inc
jno
lret
pop
cmp
push
jo
add
ljmp
or
adc
jbe
fwait
arpl
pushf
xor
pop
movb
pop
lcall
cmp
and
mov
xor
mov
insb
shlb
add
jne
shrb
loopne
cmp
xchg
lock
dec
push
adc
imul
sbb
or
out
fucomp
xorb
popa
clc
pop
cmpb
or
aam
test
push
or
and
cmp
sti
fcmovb
out
sbb
scas
and
lods
push
or
rcr
add
and
and
xchg
sub
or
aaa
inc
or
adc
mov
rolb
test
or
imul
xlat
jg
jne
fwait
sub
pop
and
imul
aad
out
ja
outsl
cli
add
push
jno
in
sub
jne
cmp
lret
add
sub
pusha
aas
sbbb
pushf
testb
imul
lods
and
arpl
and
pusha
aam
mov
jg
es
mov
lea
mov
sahf
mov
mov
int
rcl
ror
push
push
sbb
and
icebp
call
scas
into
add
pop
mov
jbe
ds
push
out
ja
sub
pop
test
inc
rcl
jl
jl
insl
and
pop
cwtl
lock
inc
in
addr16
xchg
fadds
sub
pop
jecxz
push
out
mov
xchg
jns
in
testl
or
in
xchg
lret
pop
imull
in
ltr
call
in
es
or
dec
jbe
ds
icebp
shrl
cs
or
sbb
fcmovnb
pop
mov
adc
leave
mov
xchg
and
xchg
pop
out
pop
sub
xchg
aad
xor
pop
inc
push
loope
sub
mov
aad
outsb
and
cmp
add
jae
mov
mov
mov
daa
inc
into
pop
mov
test
rclb
jnp
sub
iret
pop
or
mov
jmp
imul
outsb
leave
jb
out
enter
lods
add
pop
mov
movsb
lret
mull
and
std
inc
int
fisubs
xchg
push
fadds
and
jae
sub
xchg
pop
or
call
adc
pop
ljmp
push
sub
sub
jle
sub
pop
rolb
repz
mov
mov
jo
dec
sahf
mov
mov
cmp
cmp
xchg
in
jb
lods
aam
orb
xor
adc
int
test
mov
rorl
lods
and
hlt
orb
popf
sbb
jnp
xchg
xchg
jg
adcl
dec
add
mov
daa
les
fmull
sti
es
in
outsl
lcall
test
xlat
outsb
hlt
mov
xchg
jecxz
lods
push
push
and
xor
lcall
push
sub
mov
loopne
pop
aam
xor
nop
ljmp
mov
fidivrs
mov
leave
inc
pushf
sarl
push
push
pop
push
jl
outsl
jg
push
arpl
in
addr16
mov
stos
and
out
mov
loop
rolb
sub
mov
mov
push
push
in
or
mov
inc
sbb
xchg
dec
push
mov
add
sub
arpl
mov
mov
push
stc
push
lods
mov
enter
xchg
out
jle
push
push
pushf
push
aaa
sbb
jmp
aas
mov
xorl
inc
xchg
mov
mov
inc
lret
xchg
sub
cmpsb
jecxz
pop
sub
aam
pop
jl
xchg
mov
jno
out
cmp
mov
mov
dec
adc
js
shl
dec
xchg
sub
iret
pop
orb
jg
xchg
add
cmpl
scas
mov
xor
push
add
mov
into
enter
arpl
mov
ljmp
out
stos
aas
and
mov
cmp
mov
mov
hlt
mov
inc
pop
push
mov
xchg
xor
out
test
push
lock
inc
xlat
outsb
xchg
inc
cs
aas
cld
push
lcall
xchg
cmc
push
xor
push
lcall
lods
in
fwait
pop
es
push
int
pop
jb
or
adc
pop
out
rolb
cmc
xchg
ds
fs
jl
rorl
add
mov
lds
jle
rcl
mov
mov
mov
xlat
cmp
or
mov
mov
sti
cmp
jle
ds
test
in
shll
mov
jb
inc
mov
sbbb
mov
inc
stos
cmp
je
or
and
adc
cmp
das
cmp
jp
pop
cld
addr16
pop
loope
in
pop
sahf
aad
xchg
add
lahf
lods
xchg
aad
lret
data16
jne
bndldx
scas
in
jmp
or
lcall
inc
lret
cmp
sbb
inc
out
sub
mov
bound
roll
sbb
lock
loope
push
cmpsb
mov
mov
and
ljmp
icebp
test
das
add
cmp
lds
pop
lcall
mov
adc
add
jno
xchg
jns
push
mov
cwtl
and
ret
xchg
xchg
in
cmc
lods
jo
fdivrl
wbinvd
cli
adc
push
enter
andl
lea
or
inc
loope
outsb
loope
pop
add
ss
mov
cmp
xlat
scas
xchg
mov
add
mov
cmp
jns
mov
adc
push
lods
js
imul
cmpsb
cli
adc
cmp
mov
adc
push
imul
add
xchg
mov
hlt
add
pop
lahf
xchg
jl
mov
fsubs
cli
lds
mov
rcrl
adc
cld
cmp
fnsave
jp
adc
xorb
jle
push
mov
adc
pusha
psubq
int
sahf
pop
pusha
push
sub
cmp
out
and
pop
xor
pop
lret
xor
fcomps
dec
enter
cmc
iret
test
and
clc
adc
lds
pop
call
loope
aad
dec
loopne
adc
pop
enter
sub
jbe
loopne
xchg
cmp
xchg
mov
push
cmp
loope
int3
dec
pop
orl
lret
loopne
adc
dec
dec
inc
mov
lock
pop
push
adcl
in
sub
dec
pop
enter
das
out
mov
xchg
sbb
jge
rcrl
mov
in
jecxz
xor
adc
sbb
jge
addr16
jle
push
mov
sahf
faddp
lcall
fidivs
and
dec
adc
cmpsb
outsl
sbb
jno
sahf
testb
std
adc
jae
les
fsubrl
sti
mov
xlat
dec
push
insb
cmpsl
rolb
call
jo
ljmp
addr16
xchg
lcall
cmp
mov
lds
sub
and
or
jnp
ds
ret
pop
das
push
jl
dec
fnsetpm(287
and
jbe
sbb
mov
xor
sbb
xor
scas
adc
stc
add
shlb
push
cmp
adc
enter
dec
stos
mov
out
mov
xchg
sub
dec
addr16
ja
enter
xor
inc
repnz
and
inc
movsb
jnp
pop
and
mov
jno
lret
or
imul
stos
mov
or
negb
out
push
loop
fnsave
sub
mov
sbb
adc
daa
daa
mov
xchg
shld
call
push
xorb
mov
dec
int
mov
fistps
or
pusha
add
je
adc
mov
mov
or
cmp
sbb
leave
fwait
lods
leave
mov
add
sub
iret
jbe
add
jmp
mov
adc
jg
add
imul
enter
out
pop
push
xchg
test
mov
popf
cmp
lds
insb
andb
es
mov
dec
adc
ret
xchg
jne
mov
leave
fs
fsubr
inc
xor
dec
xorl
xchg
dec
mov
add
push
jb
cld
mov
lods
outsb
pop
test
inc
dec
adc
mulb
test
jecxz
cmpsl
stos
and
into
push
mov
mov
and
adc
ret
mov
in
ret
cmp
cmpsl
dec
dec
adc
jmp
push
test
jl
and
pop
jne
divl
enter
fimull
or
std
mov
adc
aam
mov
adc
inc
sbb
xor
cmp
xchg
not
addr16
adc
pop
int3
inc
lods
mov
scas
add
xor
xor
ds
stos
lcall
xor
movsb
les
pop
mov
or
jmp
cmp
out
stos
ljmp
lcall
inc
cmp
inc
ffreep
cmpsb
test
mov
sbbb
daa
or
adc
push
cltd
xor
cmpsl
mov
fldcw
pop
repnz
jg
sti
mov
push
fwait
out
ret
fwait
jg
xchg
negl
push
les
mov
outsb
jl
or
sti
outsl
pop
in
push
or
dec
imul
rclb
push
fldl2t
nop
and
je
iret
test
add
sub
rol
into
jns
jmp
mov
movsb
add
repnz
xor
neg
inc
add
gs
movsl
in
xchg
in
imul
jb
cmp
lret
push
shl
loope
pusha
and
loopne
pop
inc
nop
cmp
test
lcall
cmp
cmpsb
scas
pop
mov
dec
inc
lahf
xchg
mov
int3
rol
andb
pop
xchg
into
aas
adc
pop
repnz
push
push
jecxz
lret
int
cwtl
mov
mov
iret
cmpl
arpl
xlat
shl
in
push
stc
lds
push
int3
xlat
icebp
cmp
push
sti
push
dec
mov
jnp
daa
adc
sub
xor
add
sbb
into
fiadds
jl
cmp
push
or
data16
fdivrl
mov
loope
data16
pop
ret
jmp
sbb
jp
loop
sbb
mov
and
cmp
fwait
add
dec
jnp
out
sub
in
pop
shlb
pusha
mov
xor
jo
jne
ret
pusha
inc
cmpsl
loop
xchg
cwtl
xor
and
push
jne
fists
nop
and
mov
mov
adc
add
cltd
cmp
and
outsb
aad
push
ss
loopne
lds
dec
es
repnz
out
les
pop
enter
sub
aam
testb
leave
and
mov
inc
das
sbb
inc
mov
inc
and
mov
xchg
mov
out
out
sti
lock
dec
mov
movd
jmp
pop
inc
insb
imull
in
mov
dec
mov
sti
ljmp
das
pop
aas
popa
sub
fidivrl
ret
jmp
adc
gs
sub
adc
es
and
inc
sahf
in
inc
mov
add
mov
xor
mov
test
sbb
hlt
xchg
test
popf
pop
fisttps
dec
call
out
xlat
insl
sub
pop
jl
sub
xchg
sub
jl
lods
adc
fnstcw
xor
cltd
push
cs
sbb
xchg
or
loop
push
xor
sahf
nop
in
xlat
adcl
daa
push
mov
out
xlat
sub
in
sbbb
xor
mov
cmp
pop
jmp
jmp
xchg
xchg
mov
jnp
adc
mov
roll
adcb
call
xchg
mov
and
mov
pushf
jecxz
fsubrs
pop
mov
or
mov
cmpl
ret
pop
add
pop
cmp
adc
xor
addr16
cmp
lods
dec
xlat
or
xor
xchg
sub
pop
cltd
xor
bound
xchg
cmp
fnsave
jp
fwait
sub
mov
mov
test
jo
xchg
scas
add
scas
xor
stos
push
push
xor
cmpsb
ss
or
fiadds
xchg
arpl
daa
pop
dec
addr16
cmp
pop
pushf
xor
mov
mov
mov
fcoms
xchg
sbbb
push
sbb
cs
ja
jo
out
test
jmp
das
add
jbe
xchg
test
fstl
add
xor
jp
adc
aaa
jbe
and
ljmp
ja
push
xor
pop
mul
mov
jle
mov
or
xchg
mov
jg
outsb
rorl
mov
push
pop
lret
sub
push
rcll
andl
push
sbb
outsl
ss
stc
in
addb
and
jo
cmp
xlat
divb
or
cmpsl
push
pop
mov
push
mov
arpl
adc
mov
ret
clc
push
std
clc
fstpl
pminub
xor
in
and
sahf
fcoms
pusha
add
aaa
xor
aam
pop
jp
push
mov
push
or
sbb
lahf
push
mov
jb
inc
movsb
adc
popa
add
jle
ja
cld
mov
insl
xor
mov
dec
lret
es
popf
inc
decb
add
jmp
mov
jb
push
adc
xchg
mov
repnz
jno
cmp
out
xlat
cli
and
cltd
cmpsl
inc
xchg
in
je
push
adc
xchg
jg
add
divl
sbb
push
mov
mull
lock
jmp
inc
mov
int
inc
jo
inc
cmpsl
nop
pop
pop
cmp
cmp
adcl
int3
inc
imul
mov
inc
sub
inc
int
popf
das
cmp
dec
pop
add
mov
inc
fst
repnz
jge
fistpll
pusha
lock
ds
xchg
stos
jmp
rolb
das
adc
xor
or
aaa
lock
jp
fnstcw
pop
pop
rcrl
push
mov
cs
cmpb
mov
fistpl
jl
sbb
push
xor
push
xchg
and
and
cmpsb
sbb
scas
ret
xchg
mov
mov
aas
xor
mulb
xor
stos
sub
fwait
mov
xchg
insl
pop
fwait
cmpsl
test
cwtl
leave
movsb
mov
mov
pop
ret
data16
fimuls
push
adcb
cmp
pop
addl
xor
cmp
pop
insb
lea
mov
push
popl
shll
cmp
es
mov
adc
jl
lret
stos
popa
xor
mov
sub
fmull
jge
inc
int
sahf
cmc
adc
lods
pusha
scas
lock
push
mov
ja
adc
xchg
and
add
cmp
pusha
fldenvs
scas
fisubrs
dec
loopne
push
pop
mov
mov
mov
and
inc
xchg
dec
aaa
lahf
popl
fdiv
inc
cmpl
pop
in
ljmp
adc
sbb
mov
or
mov
adc
xchg
jnp
jecxz
cli
pop
in
mov
jmp
pop
lods
sub
icebp
jae
ret
sbb
and
ja
test
gs
dec
inc
push
loopne
mov
scas
mov
sbbb
add
xchg
pop
mov
iret
lock
fsub
fdivl
or
jns
xchg
cs
push
push
call
and
es
ja
shrb
mov
push
pusha
xor
xchg
xchg
scas
lcall
add
fisubl
sbb
adc
inc
in
in
stc
in
cmp
inc
add
inc
sbb
in
xor
movsb
ret
sub
inc
push
and
mov
cmp
inc
stos
mov
cmp
jecxz
out
xor
mov
imul
xor
rol
sbb
mov
push
loope
cwtl
stos
push
lret
add
mov
jno
test
std
cltd
ret
lea
xlat
shl
or
jl
lock
cli
and
lcall
xor
dec
pop
cmp
outsb
daa
mov
icebp
fldl
repnz
jle
aaa
movsb
mov
dec
pop
sbb
cmp
adc
mov
fcmovnb
inc
push
xbegin
mov
jb
and
inc
cmp
loop
mov
movsb
push
adc
adc
inc
xchg
mov
imulb
loop
push
cltd
dec
jge
adc
cwtl
mov
xor
neg
mov
aas
mov
sbb
dec
pop
cmc
into
enter
insb
js
fs
insb
repz
pop
mov
pop
stos
jno
ds
adcb
dec
in
test
or
fsubrp
inc
xchg
out
jmp
loope
test
shrl
xchg
mov
rol
push
and
cmp
mov
dec
jbe
mov
fstpl
aaa
push
adc
and
roll
lret
test
cmp
pop
scas
lea
cmpsb
cs
scas
jl
pushf
out
mov
aad
jnp
push
dec
dec
nop
push
xchg
adc
pop
xchg
mov
fs
jmp
outsb
pop
mov
inc
pop
shrb
stos
push
jmp
fistps
xor
xchg
mov
loop
push
xor
addr16
lret
mov
std
int3
mov
stos
cmp
inc
mov
mov
lods
popa
testl
sbb
xchg
mov
test
or
xchg
lods
mov
loop
ficompl
mov
jno
xchg
sbb
sbb
imul
xchg
mov
dec
popf
adc
add
je
insl
add
mov
jp
xor
add
push
mov
inc
push
stc
inc
and
ficoml
jmp
adc
lcall
mov
pop
push
mul
jae
add
mov
lahf
daa
clc
and
ret
shll
lds
shrl
xchg
adc
xchg
lret
ret
mov
add
jecxz
sub
scas
sahf
sbb
out
dec
dec
xor
pop
and
sbb
sbbl
or
and
shr
out
cmp
aaa
cwtl
lea
test
cmp
fs
aaa
pop
sahf
popw
mov
mov
je
sbb
mov
sub
cmp
sub
fnstenv
adc
fcomps
xor
inc
push
lahf
bound
cmp
xor
mov
fs
js
ret
mov
addr16
fsubrs
sbb
jne
stc
testb
xor
push
cltd
dec
push
mov
or
jbe
js
add
pop
adc
jl
add
fbstp
xor
cmp
hlt
pushf
rcll
int3
dec
sub
pop
lahf
mov
pop
dec
decb
sbb
jmp
pop
mov
shl
addl
adc
push
inc
gs
ret
push
loopne
mov
cs
scas
loopne
mov
fimuls
mov
lock
mov
mov
sbb
mov
data16
shlb
jb
mov
cmpl
scas
cmp
adc
xor
pusha
out
je
adc
push
fnstenv
cwtl
jg
cld
xchg
ficompl
dec
loope
pop
push
pusha
stos
inc
repz
int3
in
test
xchg
testb
mov
sub
call
xor
mov
arpl
xchg
insl
xor
mov
sti
scas
es
inc
stos
mov
scas
push
paddq
hlt
adc
ds
out
js
aam
shrl
sub
jmp
and
lods
fldt
scas
fldl
pop
cmc
pop
js
cli
lea
jle
ljmp
pop
stos
clc
push
push
lcall
fdivrs
dec
test
popa
lcall
loope
inc
lcall
test
icebp
scas
fisttps
or
or
xchg
nop
and
fcomps
idivl
pushl
loope
ret
out
jo
in
lret
xchg
cwtl
call
sbb
fdiv
fyl2xp1
xchg
mov
into
mov
pusha
push
test
or
aad
pushf
dec
out
jle
cs
pop
and
imul
push
notl
cmp
mov
cmpl
loope
mov
mov
or
sub
gs
push
clc
or
jle
ror
insl
aad
dec
fldl2t
push
lret
shll
xchg
enter
lahf
jmp
mov
cmpsb
daa
sahf
xor
mov
ret
outsl
decl
mov
xor
rcll
lea
std
adc
push
enter
negb
sub
cmp
js
cmp
pop
pop
cmc
push
lods
inc
mov
aaa
inc
add
hlt
out
xor
mov
lods
fsubrp
leave
cwtl
clc
stos
and
mov
jg
and
pop
loopne
insb
loop
test
cmpsb
out
cmpsb
and
jl
test
stos
pop
push
mov
pop
fs
and
fildll
sub
dec
ret
scas
cld
sub
lret
push
rorb
adc
sar
cmp
repz
cmp
sub
inc
cmp
jne
xlat
icebp
outsl
inc
and
xchg
jp
push
cmc
push
fwait
imul
add
ret
push
jbe
push
movsb
xor
inc
fsubrs
push
dec
loopne
cwtl
jb
in
clc
ljmp
vpunpcklqdq
addl
mov
dec
repz
mov
pushf
jg
rep
cmp
jmp
xchg
mov
cli
jp
mov
mov
or
mov
mov
popa
jmp
jnp
pop
mov
jns
mov
mov
fmull
pop
inc
notb
movsb
cs
rcl
out
inc
gs
mov
lcall
sbb
mov
mov
imul
arpl
jp
mov
jo
scas
push
pop
mov
mov
or
push
mov
cmpsb
sub
sub
dec
fs
jae
imul
jge
push
pop
adc
sbb
and
adc
xchg
pop
stos
xchg
fldl
jne
lods
cmpsb
sbb
addr16
push
cli
mov
add
dec
jg
aaa
gs
mov
push
testl
and
lock
nop
repz
cwtl
dec
ljmp
mov
fcmovnu
jb
xor
xor
lahf
cmc
mov
lcall
sbb
mov
test
stos
add
mov
cmp
or
push
push
sub
mov
mov
jp
repz
mov
xchg
pop
loopne
popf
adc
push
into
out
jns
xlat
in
jo
clc
xor
in
sbb
mov
inc
pusha
sub
gs
xchg
shll
jb
cs
pop
pusha
movsl
loopne
loop
jl
cmp
fldt
flds
pop
mov
ljmp
push
aaa
adc
jne
or
xchg
sub
fldt
fdivs
sbb
mov
icebp
and
pop
push
cwtl
push
add
and
insw
dec
fisubs
jnp
jne
mov
sbb
test
into
mov
and
cmp
xchg
push
xchg
test
xor
rorl
mov
xchg
push
ljmp
repnz
mov
data16
push
sub
in
dec
pop
jmp
aam
pop
ret
cwtl
and
repnz
inc
arpl
jno
push
cmpsb
xchg
and
cmpsb
imul
stos
pop
out
sub
jmp
xchg
insb
xor
or
lea
jns
cmp
cmp
and
mov
notb
sub
dec
adc
popa
and
testl
aam
subl
addr16
ret
insl
rorb
sub
pop
inc
cs
mov
mov
and
mov
movsl
ret
rep
mov
imul
icebp
mov
jecxz
out
out
aas
pop
jno
push
xlat
out
mov
in
sub
das
adc
xor
hlt
call
loop
dec
pop
loopne
xor
adc
xor
imul
lcall
or
or
adc
loop
mov
repz
bound
cltd
test
je
jmp
jl
fidivs
add
mov
jecxz
sbb
loope
jno
adc
and
or
push
orl
loope
fldenv
jp
inc
lods
pop
sahf
jno
loopne
add
fsubrl
xor
insb
ds
xchg
sbb
pop
mov
lods
mov
popf
sbb
pop
pop
add
xchg
scas
mov
mov
mov
and
call
aas
xlat
mov
inc
ret
mov
dec
dec
jg
push
roll
stos
sbbb
and
fld
cwtl
cli
leave
nop
dec
add
cmp
fs
and
push
outsb
lock
js
fcoms
dec
and
push
mov
xor
sbb
mov
aas
adc
mov
inc
sbb
cwtl
test
icebp
adc
arpl
mov
les
fiaddl
sbb
fcomip
pop
mov
aam
mov
rclb
jne
ret
adc
adc
fsubrl
mov
pop
inc
dec
lods
xor
pushl
sbb
lret
mov
pop
ret
pop
pop
fwait
cld
pop
and
subl
adc
stos
dec
aaa
sarb
sbb
jle
push
xchg
dec
adc
xchg
shrl
jp
out
stos
aam
je
lret
cmpps
sti
jbe
jl
in
popa
or
ljmp
xor
xchg
ja
sbb
pop
jne
fnstenv
sub
orb
xchg
test
icebp
xchg
push
sbb
test
push
jno
and
nop
clc
stos
shrb
inc
out
imul
jbe
mov
xor
jnp
fcoms
ss
aad
shlb
mov
aam
jno
or
xor
mov
jb
dec
inc
pop
cmc
adc
xlat
aam
mov
bndldx
cmp
outsl
int
jb
or
xor
pop
dec
inc
test
mov
push
call
pop
lock
sbb
cld
xor
and
jge
push
cmp
push
stos
imul
ret
cmp
lea
aas
shlb
mov
add
mov
sub
sbb
lret
nop
mov
xchg
outsb
xorb
out
in
std
lods
roll
rcrb
xchg
scas
add
fsub
daa
jo
fs
aaa
insl
inc
mov
adc
ja
mov
fsqrt
cmp
push
andb
jge
inc
lcall
inc
sub
lahf
sahf
ds
std
or
repz
out
sahf
fstps
lds
mov
sbb
mov
pop
add
sahf
inc
popa
shlb
test
cmc
scas
cmp
push
xor
inc
aaa
lret
mov
sub
push
jg
cmp
out
aaa
pop
xchg
subl
in
in
shll
vandnps
xchg
repnz
xchg
mov
mov
mov
cmp
shr
mov
ret
xchg
mov
clc
xor
sub
dec
dec
popa
or
sbb
adc
rol
adc
aaa
sti
mov
xlat
mov
mov
push
leave
out
insb
add
popa
add
push
mov
xor
dec
and
push
mov
std
add
pop
push
inc
lods
and
pushf
and
push
push
in
clc
mov
cmp
push
push
inc
xor
xor
loope
dec
pop
sub
dec
out
mov
out
movsb
dec
sub
push
ret
sub
jg
std
push
add
mov
and
jnp
lahf
rcrl
int
fisubs
das
das
cmp
xlat
add
xorb
mov
loope
pusha
aad
add
leave
jl
icebp
or
sub
mov
jecxz
testl
mov
inc
fwait
sti
mov
add
ret
inc
sbb
pop
push
cltd
inc
jnp
mov
ret
mov
mov
sbb
imul
xlat
iret
cmp
inc
out
sti
loope
rorl
and
sbb
cmc
mov
daa
mov
jns
stc
shrl
mov
pop
orl
lods
call
div
out
pop
testl
leave
add
shlb
inc
pusha
fstpt
pop
mov
mov
int3
sub
cmp
cmpsl
jbe
adcb
out
xor
ja
jp
xchg
sub
mov
xorl
sub
dec
dec
jle
push
fcoml
movsl
mov
loopne
jp
in
iret
scas
outsb
inc
mov
cltd
dec
lods
aas
jno
shll
sub
adc
in
jbe
lret
pop
loop
xchg
xor
ds
js
ds
shl
mov
inc
or
pusha
xchg
test
sub
ss
mov
xor
imul
adc
mov
pop
xorb
and
outsl
push
mov
cmpsl
out
cwtl
dec
dec
dec
pop
xchg
notl
stc
enter
fwait
xchg
pop
loope
popf
out
ja
aam
jo
inc
mov
test
fcmovu
test
insb
xorl
sub
adc
jmp
mov
mov
mov
loop
or
ret
test
and
movsl
int3
xor
jge
push
hlt
lahf
jns
and
adc
jb
stos
xchg
jecxz
pop
hlt
loopne
es
cmp
and
movsl
in
mov
jmp
cmp
cmpsb
cmp
push
sub
mov
rolb
fstpt
sub
cmp
inc
insb
mov
ret
or
ret
cwtl
ficompl
js
jg
sbb
push
imul
or
insb
js
add
mov
test
repnz
lcall
scas
scas
dec
push
cmp
push
lahf
popa
ret
inc
jg
sub
int3
mov
jle
jge
cmp
jns
aad
loope
cltd
fwait
pushf
pop
dec
xchg
xor
mov
fdivs
ret
aas
pop
mov
push
pop
aaa
adc
dec
test
lods
or
pop
ret
jp
nop
cmp
jno
mov
sbb
dec
out
mov
add
out
fwait
call
test
mov
shll
push
xor
popf
jmp
push
sbb
cs
jb
fldt
xchg
rolb
mov
sub
pop
pusha
cli
mov
adc
insl
pop
insb
cmpsl
mov
mov
dec
sub
jge
stos
mov
or
fldcw
lods
inc
xchg
cmp
xchg
cltd
pop
push
ljmp
jno
mov
cltd
fwait
std
dec
mov
nop
in
mov
or
into
push
pop
dec
testl
negb
in
lret
xchg
push
out
and
scas
int3
ds
mov
bound
lds
sub
mov
mov
aad
or
test
cmpsb
mov
iret
gs
insl
dec
mov
sbb
and
and
cltd
dec
push
bound
sbb
lods
mov
and
andl
xor
and
adc
push
loop
orb
or
lods
and
jmp
es
pop
cwtl
ret
es
pop
sbbb
jne
mov
push
pop
and
cmp
sub
sbb
insl
jbe
mov
out
xchg
mov
clc
adc
pop
cmp
jle
push
jne
popa
orl
dec
imul
cmp
dec
in
cltd
xchg
ljmp
mov
int3
jns
sbb
sbbb
lock
loop
xchg
mov
insb
dec
sub
mov
arpl
inc
cmpsl
adc
and
rcl
in
dec
cmp
and
mov
mov
cmpsl
mov
add
push
addl
push
jae
xchg
jbe
iret
cld
inc
jbe
lods
mov
xchg
push
pop
and
shlb
mov
test
dec
lea
and
dec
orb
in
lcall
and
xchg
jae
les
enter
lahf
sub
sarb
pop
fs
in
xor
mov
ror
fs
aad
sbb
sti
movsb
inc
xor
mov
aad
mov
and
cmp
scas
cvtdq2ps
testb
adc
xlat
dec
pop
lret
jge
xchg
cmp
imul
addr16
sti
xchg
in
cmp
in
and
shlb
push
cmp
mov
sbb
xchg
scas
cmpsb
xchg
je
cli
xlat
popa
and
pop
ret
aad
out
pop
xor
cmp
shl
jmp
leave
sbb
aas
movb
orl
dec
das
mov
fmuls
test
fstl
mov
inc
scas
jnp
lock
sub
imul
and
das
out
add
in
sar
ret
jns
lahf
adc
nop
sbb
cmp
repz
inc
out
and
xchg
inc
xor
and
cwtl
arpl
mov
inc
rorl
hlt
lret
xchg
sahf
scas
and
loopne
cmc
push
jb
aaa
push
enter
mov
jecxz
mov
dec
int3
dec
jne
mov
test
andb
fucompp
decl
stos
inc
in
lcall
add
xor
push
jl
xchg
dec
xor
sbb
rclb
or
icebp
sti
pop
mov
lret
test
imul
out
lahf
popf
jp
outsl
push
add
subb
sub
sub
fimull
es
or
add
and
leave
aam
adc
xchg
stc
inc
push
loop
inc
jg
daa
cmp
movsl
mov
aad
and
xor
jp
mov
sarl
jle
mov
rcrl
jbe
fcoml
test
aas
imul
inc
xchg
sub
fldl
mov
movsw
test
leave
sub
call
ljmp
rolb
add
xlat
sub
dec
pop
xor
mov
insb
pushl
or
xor
aas
mov
jbe
test
ja
sub
inc
xor
pop
into
pop
int
insl
mov
call
mov
push
test
testb
cwtl
repz
inc
outsl
pop
insb
sub
sti
arpl
lret
sub
push
jbe
ss
and
pop
jg
das
push
hlt
sbbb
pop
mov
cmp
jns
into
pop
mov
mov
vpabsw
mov
pop
inc
adc
shll
adc
repz
dec
jns
push
xorl
in
mov
mov
orb
or
bound
test
sahf
decb
stos
xchg
repnz
sub
int3
mov
nop
inc
mov
pop
xchg
or
shlb
bndstx
pusha
lock
and
lcall
dec
inc
pop
jle
xor
mov
cmpsb
jg
xor
ret
pop
pop
push
mov
imulb
popa
rorl
sub
arpl
mov
push
and
leave
jmp
adc
jne
jne
aas
fwait
sti
lahf
push
mov
lods
jmp
int
popa
push
mov
aam
jbe
scas
mov
fucomi
stc
push
mov
or
add
ss
mov
int
lods
popa
pushf
xor
push
in
adc
xchg
push
inc
xchg
jne
jo
mov
adcb
insl
sub
scas
mov
aaa
test
and
das
adc
or
inc
xor
out
or
dec
xor
decl
dec
test
imull
hlt
roll
shrb
mov
xor
pop
popa
clc
aad
lret
cmp
adc
xlat
mov
sbb
dec
es
and
mov
adc
inc
push
sbb
shl
test
jecxz
adc
nop
adcl
mov
addr16
shlb
stc
pop
lock
dec
push
inc
pop
cmp
jnp
stos
shll
cmp
adc
lret
leave
and
sub
adc
fadds
mov
xor
cmpsl
ret
repnz
sbb
push
inc
mov
jno
lock
jmp
icebp
xchg
push
or
scas
push
arpl
scas
bound
jmp
aaa
bound
call
idivl
gs
pop
in
mov
sub
dec
mov
dec
movsb
inc
sbb
jae
mov
sbb
lods
xlat
mulb
scas
mov
inc
push
dec
and
fidivrl
sbb
push
sub
lahf
xor
sarl
inc
int
fists
push
or
in
bound
call
xor
jne
cmpsl
xlat
jae
dec
dec
lret
shlb
out
or
lock
aam
imul
repnz
mov
mov
and
pop
xchg
lods
adc
jb
fsubr
mov
pop
mov
loopne
orl
push
pop
fwait
add
xor
pop
xor
stos
fsts
cmp
outsb
pop
jg
stos
pop
lret
lret
adc
mov
cs
outsl
cld
mov
push
ret
rcrl
loopne
mov
arpl
xchg
push
lcall
sahf
mov
sahf
adc
add
add
jmp
out
aad
lret
dec
jno
add
int3
xchg
pop
sbb
pop
sbb
loope
inc
das
lret
mov
fists
mov
aaa
popa
dec
and
mov
mov
pusha
sbb
test
mov
sbb
test
and
mov
in
hlt
cmpl
xchg
test
notb
ret
lcall
jbe
xchg
bound
jno
sub
jns
inc
mov
mov
dec
hlt
mov
les
js
pop
inc
dec
out
cmp
nop
push
in
sbb
cs
in
inc
call
xor
pushf
jge
and
inc
or
mov
in
daa
lcall
jmp
push
jb
dec
xor
test
mov
dec
pushl
dec
enter
cmc
push
rcrl
xchg
test
js
sub
jne
push
adc
dec
xchg
push
xor
mov
scas
mov
pushw
mov
ss
cmp
xchg
imul
sarb
mov
jbe
fsts
fucomip
push
pop
mov
aaa
std
inc
pop
ret
push
inc
testb
cmpsl
push
std
mov
dec
jmp
ljmp
mov
in
sub
pop
sub
sbb
rcll
outsb
xlat
dec
test
sbb
mov
jno
sti
pop
mov
out
mov
jnp
sub
inc
add
inc
add
sbb
in
incb
cmp
ja
push
ficomps
int3
fistl
jecxz
pop
inc
cs
aam
notb
mov
imul
jae
xchg
cmp
or
sbbl
cmp
insb
cmp
jnp
test
pop
xchg
les
push
je
xchg
loope
xorl
pop
stos
mov
ret
icebp
xor
mov
or
dec
dec
cld
cmpl
mov
lahf
mov
out
ja
outsb
sbb
pop
and
and
pop
adc
dec
test
push
mov
and
fstpt
out
or
aam
push
sbb
or
stc
test
js
xchg
leave
xchg
mov
push
sub
sbb
jnp
pop
cwtl
stos
ss
mov
repz
and
test
push
sub
cmpsl
jg
mov
push
push
pop
or
outsb
aaa
fidivrs
fdivl
push
stos
fadd
adc
add
arpl
add
mov
sbb
push
cltd
pop
jno
mov
outsb
hlt
test
sub
mov
sub
fldl
push
xchg
xor
iret
in
jl
add
sbb
js
jnp
cltd
sub
pop
lds
je
insl
dec
or
dec
out
xor
shrb
and
out
xchg
shll
or
cmpsb
mov
and
and
push
mov
cli
cmp
xchg
ds
mov
outsb
cmp
push
rcrb
std
cs
lock
bound
je
mov
jmp
fs
fmuls
enter
push
fdivrs
test
xchg
lods
mov
scas
xchg
andl
ret
stc
add
movl
mov
ss
jo
ljmp
popf
xor
mov
dec
dec
add
fcom
xor
das
in
mov
icebp
movsb
aaa
fabs
jb
or
out
out
push
jno
fisubs
or
inc
lods
subl
lods
frstor
inc
out
dec
inc
mov
dec
fisubl
nop
push
mov
mov
fbld
or
inc
movsb
aaa
arpl
mov
les
sub
or
xchg
pop
xchg
insb
add
out
js
loopne
jle
add
xor
xchg
adcb
mov
cmc
out
cmpsl
fiadds
clc
scas
push
inc
lds
sub
sub
rclb
sub
sbb
outsb
loopne
and
jno
cld
ret
cmp
jb
or
pushf
jo
jb
test
or
out
data16
insb
xor
cmpsl
add
mov
dec
fldenv
aas
sbb
pop
push
sarb
in
test
mov
xchg
leave
je
push
add
sbb
xor
ljmp
push
inc
test
js
sbb
adc
dec
xchg
inc
xchg
gs
out
mov
add
movsl
push
and
setp
xchg
lock
jns
jo
xorb
mov
xor
mov
push
cmpsb
mov
xchg
dec
in
adc
loope
xor
pushl
fcmovnbe
mov
push
cmc
push
rolb
cmpsl
push
add
out
sbb
cmp
xchg
loope
and
popa
xchg
adc
jmp
push
mov
mov
mov
filds
inc
pop
sub
xlat
pop
fdivl
lcall
jb
fsubs
int3
push
je
inc
xor
sub
mov
imul
or
cs
mov
mov
xor
add
xor
cltd
cmp
in
add
push
insb
clc
inc
inc
les
pop
in
imul
pop
xor
inc
adcb
inc
aad
jle
sbb
out
sub
les
and
aaa
dec
lods
popf
and
imul
loop
test
pop
jg
insl
inc
adcl
ljmp
out
test
push
sbb
cmc
jl
mov
or
or
testb
jne
das
fdivrs
dec
push
insl
pop
insl
insb
xor
adc
inc
addb
push
mov
sub
xor
test
cld
jp
add
mov
sbb
mov
pop
mov
push
mov
xor
inc
sub
cmp
ss
pop
es
dec
shlb
fmuls
ror
frstor
cmp
popa
pop
in
adcl
jne
fdivs
jl
cmp
pop
cwtl
sbb
inc
jb
xchg
push
arpl
xchg
fisubl
mov
cmc
outsl
sbb
addr16
jp
aas
cmp
mov
scas
add
ja
clc
es
jo
mov
fiadds
nop
jns
pop
inc
or
mov
or
xchg
pop
ja
js
adc
cld
cltd
push
pusha
and
dec
mov
movsb
hlt
outsb
dec
xlat
stos
das
stos
xor
leave
mov
fmull
mov
negb
aaa
mov
sub
ret
mov
addb
pop
mov
mov
stos
add
cmc
and
test
lds
ljmp
out
mov
sti
psubd
and
pop
push
cs
loope
addr16
lea
insl
and
pop
push
nop
jae
in
pop
push
add
es
pop
cmpsl
enterw
pushf
xor
les
adc
ds
mov
sub
fwait
lods
xchg
jno
adc
int
lods
pop
sub
xor
xlat
xchg
cld
xchg
cmp
pop
push
jg
stos
inc
movsb
push
dec
cwtl
cmp
mov
pop
jge
cmp
cmp
and
daa
test
dec
push
cmpsl
out
popa
push
mov
popa
out
subb
xchg
sbb
pop
arpl
add
dec
ljmp
and
add
push
xchg
xorl
jb
out
pop
sbb
mov
data16
xchg
push
or
or
daa
in
lret
adc
push
and
mov
xlat
mov
or
xchg
mov
pop
cmp
mov
mov
mov
adc
ds
scas
cld
pop
movsb
fnsave
rcrb
rcrb
dec
lea
xchg
add
jno
cmp
mov
ds
mov
adc
mov
fucomi
inc
iret
lahf
jb
jne
shl
cmp
adc
arpl
xchg
jo
sbb
xchg
int
lret
int
mov
outsb
sti
dec
pop
mov
inc
push
jo
adc
fstl
push
add
fidivs
imul
int3
fwait
mov
das
loop
cwtl
pushf
push
lret
xor
movhps
andb
into
int
fsts
lods
call
lds
lods
aam
pop
test
shr
dec
mov
popf
popf
and
shrl
lea
sub
jo
ljmp
or
mov
icebp
mov
cmpsb
lods
xchg
mov
pop
inc
js
jns
xchg
adc
lds
fsub
clc
sbb
cmp
loop
push
sub
cmp
enter
pop
les
jle
in
or
cmp
jp
mov
push
adc
push
pop
pusha
rcrb
addr16
jg
pop
adc
lcall
mov
mov
inc
dec
stos
iret
pusha
mov
push
loope
ret
aam
or
lods
and
sbb
dec
loop
scas
mov
push
dec
xor
or
test
xchg
out
jbe
adc
scas
fidivs
out
scas
loop
clc
mov
stos
fnsave
inc
sarb
in
fs
std
iret
jecxz
mov
rclb
mov
or
rorb
cwtl
aad
in
pop
dec
push
insl
jge
inc
pop
xchg
mov
and
push
sub
pop
xchg
rcrb
test
xlat
pop
sbb
pusha
cld
mov
inc
inc
dec
fs
or
cmp
popa
add
sbb
arpl
aaa
push
into
movsb
adcl
or
pop
dec
fs
xchg
adc
fadds
in
mov
pop
mov
inc
jmp
stc
shrb
jle
mov
jge
in
mov
imul
push
dec
ljmp
sbb
call
or
int3
sub
or
imul
jmp
aam
outsl
xchg
jle
push
mov
ljmp
push
jmp
push
or
sti
cmp
sbb
or
in
iret
and
bound
push
mov
stos
dec
inc
or
imul
arpl
sti
mov
fsubrl
pop
add
and
mov
mov
hlt
pop
popa
test
subl
mov
mov
mov
sti
ljmp
pushf
ret
cmp
imull
daa
inc
inc
aad
xchg
pop
imul
shll
or
and
in
pusha
or
out
sbb
mov
insb
sub
cld
mov
push
or
jl
clc
lahf
jge
jne
xor
add
mov
sti
and
enter
sub
aad
sub
fcomps
ja
je
out
bound
arpl
icebp
xchg
popf
pusha
jge
mov
bound
stos
inc
cltd
stc
push
imul
jnp
mov
sub
mov
addr16
jae
dec
mov
fdivs
mov
mov
jp
es
les
pop
fsub
pop
popa
sbb
inc
fiaddl
mov
rcrl
stos
mov
neg
loopne
inc
xchg
cmp
call
mov
push
jae
mov
in
out
push
lods
jg
jbe
or
nop
gs
or
fisubrs
scas
mov
add
loope
fs
mov
arpl
and
test
xchg
push
popf
jb
inc
ficomps
mov
test
shlb
in
int
cmpb
mov
or
das
cli
or
dec
sbbb
aas
aaa
loop
into
pop
add
outsl
inc
lcall
mov
cmp
vandnpd
push
jae
push
imul
mov
sbb
imul
cwtl
out
icebp
popl
fnstenv
cmp
test
fwait
and
les
sahf
call
dec
pushf
push
pop
iret
subb
push
ljmp
jno
push
or
jl
xor
push
cmpsb
push
addr16
adc
cmpsw
sahf
aam
mov
sub
sub
pop
push
aam
push
jle
loopne
add
std
jl
sbb
dec
aaa
pop
hlt
or
sub
pop
lahf
test
sbb
lods
enter
and
in
xchg
ja
push
ds
mulb
lahf
xchg
jg
call
rol
jnp
mov
mov
and
inc
xchg
montmul
cmpsb
mov
les
sarb
fmuls
or
mov
dec
dec
push
data16
cmp
out
inc
out
push
daa
imul
addl
pop
rcrl
sti
cmp
jl
xchg
cmp
lahf
jle
add
push
imul
pop
jle
pop
pushf
inc
xchg
pushf
test
jo
sbb
mov
inc
ja
test
mov
mov
fmuls
mov
out
mov
and
test
add
out
pop
popf
mov
xchg
and
jmp
repnz
shufps
inc
in
lret
test
fisubs
lahf
xor
mov
push
insb
lds
jo
jle
lcall
int
iret
adcb
and
outsb
mov
xchg
adc
jns
cmp
dec
cmp
xchg
movsb
push
push
xrelease
call
cmp
in
test
fdivs
xchg
jg
jle
das
push
mov
pushf
push
test
sub
xor
movsl
adc
cmp
loop
pop
cs
pop
and
subb
leave
sbb
jbe
es
popf
mov
jns
fdivs
idivb
and
pop
dec
lahf
in
test
imul
mov
sub
mov
test
mov
pop
jl
pop
adc
jnp
cwtl
pusha
scas
xchg
jns
jne
out
sahf
adc
push
popf
or
mov
mov
dec
add
fiaddl
punpcklbw
mov
sbb
dec
xlat
mov
or
mov
push
jns
mov
movsb
cmp
xchg
jne
inc
loope
outsb
fsubrs
inc
repz
pop
inc
sbbl
gs
andl
push
sti
shlb
pop
outsl
push
adc
in
clc
push
lret
and
fs
iret
push
fiaddl
call
mov
jno
mov
ss
scas
or
mov
xchg
add
popf
addb
and
xor
test
dec
fimuls
sarl
movsl
cmp
push
ret
mov
outsb
movb
fnstsw
filds
movsl
cmp
mov
cmp
adc
pop
hlt
push
sbb
jnp
sub
pop
sub
sub
or
cmp
into
rcrb
clc
xor
gs
sub
add
cmpb
fcoml
cld
xchg
pop
leave
arpl
jge
jnp
test
inc
pop
iret
mov
jnp
scas
ficoms
sub
iret
je
push
stos
lret
lock
sbb
setno
scas
pushf
fisttps
lret
sub
cmpl
pop
movsb
or
stos
loop
adc
inc
add
mov
sub
mov
cmpsl
push
sub
stc
xor
sub
dec
mov
mov
fucomp
clc
push
push
push
mov
ja
insb
lods
mov
mov
and
fsubp
movsb
inc
ja
aas
test
mov
aaa
sub
call
add
xor
jg
notb
std
push
xlat
stos
push
popa
repz
repnz
sbbl
nop
rcl
fldt
fwait
lret
pop
sti
js
mov
push
out
mov
rcrl
mov
sbb
jae
sbbl
cmp
pop
xchg
cld
pop
xchg
pop
iret
push
push
dec
pop
inc
pop
aaa
mov
xor
mov
push
mov
xchg
addl
push
ret
cmc
mov
stos
scas
dec
mov
add
mov
jne
mov
dec
out
adc
adc
je
jg
mov
push
sub
adc
pop
hlt
sbb
cmpb
mov
cmpsb
movsb
sub
xor
cmp
mov
pop
lds
jbe
cmpsl
inc
and
das
pop
dec
pop
cmpsl
ds
mov
xchg
dec
test
ret
push
jb
xchg
push
dec
mov
push
jmp
nop
lret
adc
push
out
mov
ss
push
push
and
xchg
adc
mov
aam
scas
add
insl
jbe
fsub
psubsw
js
aad
push
mov
or
je
lods
pushf
bound
scas
ds
outsl
jnp
or
loop
repz
xlat
push
or
add
sbb
mov
cli
repz
mov
into
shll
in
loop
in
inc
lcall
jg
sub
add
cs
add
aam
cmp
mov
inc
imul
pop
lcall
jp
jns
push
mov
popa
bound
cld
xchg
ret
push
mov
int
push
lcall
ja
fwait
jge
and
cmp
int3
addr16
icebp
mov
in
jge,pt
sbb
sbb
sbb
test
nop
mov
inc
cld
stos
mov
sbb
jae
sbb
das
push
xorl
add
mov
sub
test
aad
push
push
xchg
or
mov
mov
mov
sub
in
sbb
shrb
ds
hlt
dec
mov
rcrl
ret
hlt
jo
cltd
rclb
add
mov
fidivs
add
mov
xor
sub
jmp
les
popa
js
mov
dec
in
jnp
jmp
jmp
xchg
cmp
jecxz
pop
pop
sbb
lea
pop
imul
scas
or
sbb
mov
enter
xlat
outsb
jo
pop
orb
add
jmp
icebp
xchg
sbb
xchg
xor
test
mov
cmpb
xchg
lds
lcall
lcall
into
aas
out
iret
aaa
fnstenv
lock
dec
sub
rcrl
pop
mov
insl
push
insb
sbb
out
fs
jge
add
insl
cwtl
push
dec
data16
sub
push
cmp
popa
clc
jmp
lcall
daa
jns
pop
or
cmp
inc
xchg
add
ds
insl
xchg
es
cmp
ficoml
push
test
mull
sub
mov
int3
jg
add
shll
sbb
lahf
clc
stos
inc
cltd
mov
lret
imul
mov
push
jne
test
inc
sbb
mov
popf
ja
mov
dec
push
out
je
xchg
repz
mov
insl
test
inc
cld
iret
lret
or
dec
mov
jo
clc
or
and
pop
xor
jo
mov
mov
lds
int
bndstx
loope
iret
sub
testl
and
xor
mov
mov
and
and
movsb
cld
fdivl
mov
imul
aas
fimull
mov
sbb
shl
inc
adc
js
or
sbb
jno
sti
adc
dec
sbb
push
pushf
mov
std
sahf
data16
dec
dec
aas
mov
sbbl
lret
in
pop
jb
ja
outsb
xor
xchg
add
jmp
je
icebp
push
adc
shlb
out
pop
outsl
inc
dec
push
imul
out
mov
push
in
add
rclb
lods
add
test
lods
xchg
lock
clc
push
sub
into
inc
scas
incl
rcrl
dec
fldt
mov
ja
into
movsl
mov
addr16
pop
mov
mov
aaa
and
shrl
bound
rol
and
mov
jge
out
arpl
cmp
lds
adc
lcall
ror
mov
call
jb
xor
rcrl
bswap
xor
adc
or
push
mov
fwait
sti
xchg
mov
adc
fisttpll
cmpb
pop
idivl
ss
xor
mov
pushf
pop
mov
add
in
sbb
outsl
jns
pop
movsl
icebp
rorl
xchg
sub
cltd
ret
movsl
mov
ror
jno
xrelease
fidivrl
inc
mov
mov
inc
xor
nopl
xchg
rcrb
lock
loop
jl
ss
dec
dec
in
hlt
xor
nop
fnsave
pop
cmp
and
jo
in
add
mov
aaa
es
or
negl
pop
in
cltd
fcomps
stc
mov
fdivrs
stc
in
sahf
xor
sarl
div
or
xchg
out
adc
pushf
leave
sbb
cmp
notl
insb
fisubl
xor
xchg
push
cli
pusha
stos
rcrb
repz
jno
cmp
notl
fdivrs
push
cltd
inc
sbb
dec
out
call
imul
sub
lret
mov
scas
enter
push
mov
cs
adc
out
out
ret
leave
ja
jne
or
mov
jne
int3
imul
sub
shrl
addr16
cld
xchg
lods
test
jae
adc
jp
clc
xorl
sbb
testb
fistpl
xor
push
cmp
sub
sbb
pop
sbb
push
stc
decl
jnp
addb
in
test
push
and
sub
push
or
and
or
cwtl
and
jns
mov
arpl
rcll
cmp
push
jbe
test
mov
test
insb
sti
es
cmpb
jl
mov
loope
cltd
inc
ret
lds
ret
mov
add
arpl
icebp
lret
cmc
adc
aas
dec
jae
jl
pop
xor
inc
sahf
xor
push
imul
adc
in
jne
pop
cmp
popa
or
xchg
push
popf
jmp
lret
jae
mov
insl
dec
lds
ret
ja
push
sub
rorl
adc
add
test
mov
leave
xor
sahf
mov
cmp
cli
js
pop
movsb
dec
sub
jle
scas
xor
fldl
push
add
cmp
lds
pop
cmpsb
sbb
adc
pop
repnz
scas
and
pop
dec
std
xlat
repz
rorb
sahf
push
mov
sbb
jge
aaa
into
stos
aam
xchg
rorb
cmp
and
das
addr16
mov
pop
dec
loope
inc
add
cltd
repz
xchg
pop
inc
ret
and
insb
jmp
js
inc
mov
and
sahf
jae
scas
ror
xor
jp
aam
xchg
jl
lds
pop
repnz
jnp
lret
dec
je
xchg
jge
and
mov
std
lods
inc
mov
sbb
adc
mov
mov
and
jecxz
mov
xchg
das
fsts
or
scas
pop
fucomip
aaa
ret
jle
rcll
pop
fs
pop
cmpsb
mov
and
pop
add
jne
pop
lcall
sbb
mov
ss
pop
lahf
rcll
negl
mov
adc
outsb
and
popa
jnp
fs
sub
rcrl
aas
pop
clc
insb
fimull
inc
or
icebp
loope
sub
mov
mov
cmpsl
aas
push
sbb
xchg
inc
repz
cld
adc
ss
mov
mov
in
fcoms
adc
xor
lahf
mov
int
stc
inc
cmp
sbb
imul
out
sbb
lahf
pusha
int3
cld
daa
inc
sub
mov
dec
adc
adc
iret
jb
cmp
mov
inc
in
xor
out
lret
push
fs
dec
shrl
dec
push
push
xor
cmp
xchg
in
movsb
mov
inc
movsb
and
mov
pusha
ret
fdivp
cld
ss
arpl
and
sub
pop
loopne
js
fisubs
mov
fisubs
loope
and
or
mov
xlat
stos
loop
stc
mov
mov
push
xor
stos
push
or
or
imul
mov
or
aas
into
xchg
sub
test
faddl
xchg
mov
out
fidivrs
mov
adc
lret
sub
sti
sarb
add
shlb
sbb
jle
inc
daa
shll
mov
xor
in
dec
pop
push
nop
push
push
stos
jb
ret
mov
stc
mov
addr16
stos
enter
int
or
mov
lcall
test
leave
int
ja
lods
jge
mov
aad
push
aam
xor
adc
add
cmp
and
in
loopne
outsb
jecxz
and
xlat
les
pop
cmp
jne
jb
shrl
dec
mov
in
aam
sub
mov
jg
imul
mov
add
mov
mov
sbb
mov
jnp
cmc
pushf
mov
and
xchg
mov
cmpsb
xor
fiadds
xchg
mov
sbbb
pop
mov
sahf
push
iret
inc
int3
inc
clc
and
mov
insl
jno
popa
shlb
jmp
adc
sbb
and
lret
sub
shr
and
pop
in
add
adc
aad
jmp
xor
fldenv
ja
and
cmp
ret
add
loopne
dec
call
adc
ljmp
popf
and
leave
xchg
or
scas
and
cmp
out
ret
repz
or
mov
call
or
daa
dec
adc
in
bound
or
cltd
mov
pop
xchg
popa
lahf
sarb
out
mov
stos
sub
push
loop
aas
sbb
mov
mov
pop
ret
or
daa
imul
fisubrs
inc
jecxz
xor
es
pop
jne
pop
scas
ss
sahf
and
sub
mov
test
aam
jb
adc
push
insl
sbb
inc
leave
lea
sbbl
mov
rorl
cmc
imul
das
aam
cmp
push
pop
out
mov
je
adc
in
inc
sti
and
inc
mov
mov
std
pop
mov
mov
sub
addr16
push
or
jl
mov
add
and
fsubrp
pop
dec
je
stos
lahf
daa
in
cmpsl
rorb
xchg
sbb
out
aam
in
inc
stc
push
call
out
outsl
push
jmp
pop
fcmovb
or
or
test
adc
mov
std
inc
dec
adc
push
ret
pusha
mov
outsb
fbstp
lock
adc
sarb
stc
enter
leave
frstor
add
xor
ds
jp
mov
enter
in
gs
add
pop
popf
outsl
out
aad
xchg
pusha
out
jae
or
test
mov
ret
iret
gs
sbb
cmpl
xor
or
pop
mov
aad
lcall
xor
mov
or
push
and
pusha
push
sbb
jl
out
call
xor
and
aas
pop
shrb
outsb
adc
dec
jb
pop
jmp
sub
xchg
rcll
cmp
into
pop
jmp
sbb
push
mov
adc
xorb
dec
fistl
shlb
test
mov
fimuls
push
and
addr16
cmp
pop
pop
mov
lcall
xlat
ds
jp
stos
stos
cmp
cmp
loope
stc
inc
push
cld
sbb
mov
push
add
sbb
and
push
out
mov
add
jge
cmp
mov
lods
cmc
mov
lret
out
out
ljmp
cmp
cli
xchg
adc
fcmovu
mov
xchg
cmpsl
addr16
rorb
popa
mov
addr16
ret
in
xor
test
or
lea
jecxz
scas
pushf
ficomps
dec
add
cs
das
fimull
xchg
popa
cli
icebp
dec
shlb
xchg
mov
into
sbb
std
sbb
rclb
aaa
mov
push
loopne
push
mov
cld
xchg
ljmp
adc
push
imulb
add
sub
mov
mov
pop
outsl
sbb
arpl
pop
enterw
dec
and
xor
out
cmpsb
mov
ds
mov
jle
cmc
dec
inc
fildll
rcr
push
dec
les
add
mov
and
xchg
dec
imul
cmp
popa
loop
cmp
rolb
shll
pusha
mov
enter
mov
jge
xchg
out
repnz
adc
inc
xlat
fs
pushl
adc
int3
mov
jne
stc
pop
sub
pop
adc
nop
and
in
mov
into
sti
test
sub
dec
pushl
mov
push
or
adc
fsubrl
and
stc
mov
aad
lods
adc
and
pop
insl
sbb
add
addl
pusha
fldt
or
jne
push
inc
clc
pop
xchg
scas
jb
das
mov
bound
inc
in
inc
andl
xlat
and
insl
aaa
mov
add
and
mov
jge
negl
cli
insb
repz
mov
sub
inc
ljmp
jmp
dec
ja
mov
out
call
sahf
stc
cmp
pop
insb
sub
jp
jl
jl
std
or
pusha
jbe
mov
sbb
enter
sbb
repnz
xchg
adc
add
xchg
pop
ljmp
jo
mov
sbb
jbe
lret
add
mov
out
mov
les
cmp
popa
faddl
das
pop
push
popf
push
mov
fnstcw
adc
xor
dec
jae
xchg
cltd
nop
call
and
pusha
pop
xchg
adc
sbb
in
imul
cmpsb
dec
push
lods
pop
lods
cltd
in
lahf
ret
xlat
and
push
leave
dec
cld
jle
loopne
pop
out
push
enter
sub
mov
pop
js
or
pop
fdivrs
pop
pop
ret
repnz
and
push
or
sub
xchg
js
sbb
inc
push
and
or
hlt
dec
push
or
jmp
mul
jae
imul
imul
sbb
mov
push
cmp
in
xchg
aaa
popa
scas
lahf
pop
ljmp
push
outsl
stc
inc
or
das
inc
or
rorb
xor
jae
shll
inc
aaa
mov
or
jns
inc
rcr
cmp
repnz
mov
fcomps
test
lcall
sub
jne
out
inc
loopne
pushf
adc
xlat
movsl
repnz
nop
sub
mov
mov
pop
or
jne
les
repz
mov
pop
and
push
cmp
jns
dec
cmp
repz
or
pop
or
mov
fadds
js
push
mov
lcall
fs
in
xchg
jbe
insb
push
cmp
or
dec
repnz
scas
push
daa
js
push
lret
xor
scas
rol
or
xchg
scas
jno
sbb
rorl
test
jmp
cmp
in
pushf
es
pop
std
or
fwait
imul
shrl
repz
daa
sbb
std
and
sbb
jle
cltd
push
push
cmpsl
sti
lret
mov
push
out
scas
inc
sub
jle
jge
es
andl
or
in
mov
aas
push
clc
int
ss
jbe
inc
inc
loop
pop
aad
jbe
pushf
gs
mov
das
pop
cmp
aad
shrb
roll
lcall
jl
push
add
test
adc
add
lret
and
inc
jmp
cmp
xor
fs
fcmovb
mov
or
pop
in
mov
pop
sub
adc
adc
daa
lret
leave
dec
fistpll
movsb
and
mov
lret
or
mov
add
imul
push
daa
xchg
out
cld
mov
xchg
and
push
mov
mov
ja
xchg
movsl
mov
stos
adc
mov
lock
iret
orb
lcall
mov
es
pop
pop
sub
or
sub
dec
pop
in
mov
cs
iret
adc
cmp
cmp
push
cld
xchg
xchg
mov
add
mov
nop
popf
jns
and
xchg
lcall
repz
or
xlat
outsb
adc
inc
sbb
sbb
dec
hlt
cmp
fld1
sbbl
or
repz
call
and
sahf
imul
adc
xorl
repnz
jns
fstpl
dec
hlt
push
lods
mov
cmc
xor
cmc
stc
popf
dec
iret
dec
add
xchg
daa
aas
daa
cli
jecxz
subl
idivl
gs
cmp
cld
pop
push
stos
out
xor
shlb
mov
jno
sarl
xchg
in
sub
pop
and
cmpsl
pop
shlb
sbb
push
roll
and
and
push
or
push
sbb
in
insb
mov
mov
cmp
mov
fstl
fs
mov
adc
je
sahf
cmpb
ret
dec
in
test
fninit
insb
add
jns
mov
mov
popa
inc
sbb
mov
xor
fsubrs
shll
pop
shll
loope
xlat
pop
add
xor
xchg
rorl
inc
mov
dec
lahf
fldl
aam
jge
mov
xchg
test
mov
fsubrl
mov
xchg
inc
cs
out
popf
mov
int3
xchg
arpl
in
push
lahf
mov
push
jg
jg
clc
and
mov
out
xor
cmp
xor
push
pop
lock
add
or
push
xchg
dec
insb
jmp
mov
adcb
dec
pop
jg
xor
iret
sub
dec
pop
test
sti
jl
fistps
mov
cmp
test
shl
js
push
testl
push
repz
mov
lds
fnstenv
jbe
sbb
jecxz
call
pop
mov
dec
fcmovnbe
in
adc
xor
mov
shrl
add
xor
stos
lods
dec
in
inc
push
icebp
addr16
js
lds
cld
test
popa
mov
mov
push
pop
cli
std
mov
jl
jns
cwtl
aas
dec
addl
and
sub
nop
lret
mov
dec
pop
das
and
xor
movsl
popa
add
sub
in
sbb
inc
dec
mov
iret
fimull
mov
lock
loop
sbbb
add
jp
sbb
and
push
or
sbb
pop
test
mov
add
lds
pop
imul
pop
dec
imul
or
pop
adc
cmp
xchg
xor
and
cmp
dec
or
pop
popf
fnstcw
push
aad
jbe
mov
cld
jecxz
push
lods
daa
aad
mov
sub
or
mov
stos
inc
pushf
mov
dec
loop
pushl
in
lds
add
xor
lahf
mov
push
adc
das
pop
adc
jge
nop
scas
cmp
imul
ret
pop
dec
adcb
cmp
pop
out
mov
incb
fiadds
pop
xchg
lret
xchg
clc
and
test
push
add
movsl
sti
dec
pop
mov
sbb
sub
call
xchg
dec
sbb
mov
cmp
push
push
add
add
pop
dec
adc
xor
bound
ljmp
test
rcr
mov
fwait
repnz
mov
mov
imulb
adc
jns
add
sub
hlt
push
daa
and
xchg
insb
xchg
mov
mov
bswap
leave
insl
or
int
or
cmp
arpl
sub
fcomp
outsl
daa
pop
mov
dec
add
add
and
outsl
dec
leave
std
std
lods
jae
ja
jge
lea
pop
jo
cmpl
arpl
repnz
adc
jb
xor
sahf
in
cs
cmp
pop
rorb
in
sub
fidivs
jmp
mov
loope
ror
repnz
lock
rcll
inc
mov
xor
sbb
push
testl
mov
out
test
jbe
inc
and
movsb
popa
je
xchg
in
std
cltd
in
mov
push
popa
jge
jae
xor
cmp
mov
das
add
insl
jmp
fwait
int
and
lods
mov
xchg
repz
cmp
rcrb
mov
clc
dec
xchg
daa
test
and
mov
subb
mov
out
sti
mov
sarl
xchg
imul
pop
jo
cmp
loopne
insb
adc
sbb
dec
mov
jno
xlat
push
in
popa
adcl
imul
xchg
mov
inc
fcoml
ficoms
add
arpl
cmp
outsl
mov
mov
lret
inc
push
inc
xlat
dec
cmpsb
idivl
lret
stos
out
sub
in
mov
insb
xchg
imul
ljmp
push
sub
add
mov
adc
sub
fistpl
dec
in
mov
pop
movsl
addr16
cmp
scas
out
lods
add
ljmp
and
push
push
popf
inc
insb
pushf
scas
xchg
xor
jbe
into
insl
inc
cmp
cli
inc
lcall
je
mov
and
mov
iret
inc
add
in
test
jb
push
sub
sahf
ret
out
addr16
sbb
or
mov
ljmp
out
imul
mov
xor
rcl
adc
xchg
xor
loope
jne
mov
clc
sub
jns
jg
daa
xchg
and
mov
lock
xchg
cltd
pop
imul
test
lret
and
inc
cwtl
jno
js
test
mov
outsb
js
int
rclb
repnz
js
ret
pop
push
scas
mov
pop
icebp
out
cmpsl
ljmp
leave
jge
jle
imul
sbb
pop
xrelease
lods
dec
or
mov
xchg
ret
in
xchg
leave
lret
pop
mov
fnstcw
cmp
les
sub
add
add
flds
adc
sbb
xchg
lods
lea
inc
dec
or
dec
cli
lock
pop
lret
add
aad
push
add
jge
push
jb
loope
fcoml
push
push
call
mov
pop
scas
sbb
repz
jmp
in
inc
ljmp
fdecstp
popa
loopne
rcll
popa
xorl
fistps
std
sbb
leave
pusha
cli
lds
xchg
mov
dec
mov
lret
sti
cli
lock
push
loope
icebp
lods
cmp
push
int
mov
dec
jecxz
and
pop
cmpsb
push
mov
in
aas
mov
mulb
lahf
xchg
pop
movsb
jecxz
cmp
cmpsl
mull
sub
xor
mov
xchg
xchg
aaa
inc
mov
push
add
sub
into
mov
cs
test
xor
iret
scas
inc
add
push
and
lret
xlat
insl
fildl
inc
cli
cld
hlt
mov
inc
loopne
sub
inc
mov
pop
cmpsl
lea
sub
mov
loopne
inc
cmp
cld
lock
insl
scas
or
shl
stos
and
inc
test
mov
mov
sub
mov
push
or
inc
dec
sbb
clc
lods
push
xor
push
inc
sub
popa
fmul
roll
insl
dec
push
xor
dec
loopne
shrl
jp
fldcw
cmp
aad
sbb
push
aam
and
cmp
out
in
clc
or
sbb
jg
lcall
fwait
shrl
aaa
ret
mov
out
dec
fwait
pop
pop
xor
fs
in
imul
mov
sbb
adc
aaa
shr
les
loop
jmp
pop
adc
clc
jbe
mov
pop
fs
mov
popf
rorl
shrl
or
mov
lods
jne
sarb
imul
ljmp
sbb
dec
nop
add
pop
insl
inc
cmc
es
test
mov
sub
daa
ja
sti
out
xchg
sbb
push
inc
xor
dec
jl
xchg
lods
mov
cmpsb
stc
fdivs
or
xchg
mov
or
jnp
test
sbb
sub
push
dec
hlt
pop
cmpsb
mov
mov
test
loopne
adc
and
je
jle
sbbb
jmp
sbb
shlb
push
sbb
rorl
and
sbb
mov
fldt
addr16
adc
ret
xor
das
into
adc
inc
jge
clc
ror
fimull
mov
fs
lock
movsb
sub
cmpsb
leave
xchg
mov
add
pop
add
sbb
pop
sub
mov
adc
or
jmp
leave
mov
mov
xchg
xor
pop
xchg
clc
mov
fimuls
enter
shr
cs
xor
testb
mov
push
gs
das
lods
pop
popf
in
leave
sub
mov
mov
stos
sub
mov
pusha
gs
xchg
or
push
lahf
mov
inc
pop
lock
movsl
xrelease
pop
xor
js
aam
in
pop
in
lea
ret
and
jg
fndisi(8087
mov
test
add
mov
mov
dec
idiv
insb
add
dec
mov
cmc
test
mov
or
sbb
mov
mov
iret
pop
cmp
loope
or
ret
add
jmp
sbb
call
pusha
mov
add
ss
out
xchg
cmpsl
pop
or
and
or
out
mov
lret
mov
fimuls
push
inc
adc
fadds
mov
int3
arpl
shll
jbe
rcll
mov
push
cli
ljmp
xchg
mov
mov
test
cmp
loope
jle
mov
inc
shrb
sbb
lds
sub
mov
dec
pop
jg
inc
jge
sti
dec
jnp
mov
jne
je
xor
and
jmp
mov
ja
and
repz
pop
stos
xor
xor
jp
test
add
ja
add
lret
out
xor
outsb
dec
xor
dec
pop
inc
xor
or
vdivpd
rcrl
push
scas
sarl
clc
adc
mov
sbb
int3
dec
imul
push
scas
orl
inc
sub
xchg
cmpl
hlt
mov
push
sub
cmp
fisubrs
jp
mov
cltd
dec
dec
or
ret
lret
lret
or
lods
orl
mov
mov
movsl
es
es
push
or
adc
es
cld
push
aad
jle
mov
inc
pop
jne
dec
je
mov
hlt
cltd
addb
fwait
push
fistpll
and
shrb
rcrl
sahf
and
test
inc
pusha
add
test
xchg
insl
les
jns
jl
dec
ficoms
les
pop
mov
xchg
mov
les
add
sbb
xchg
jae
insl
push
sbbb
dec
sub
sub
outsl
add
push
push
idiv
out
jge
jnp
xor
dec
gs
pop
push
push
fildll
or
aam
jno
lock
and
cltd
arpl
addb
imul
sbb
into
rcll
sub
sti
lods
repnz
lret
add
in
aam
out
or
push
insl
in
sub
pop
pmovmskb
cmp
test
adc
lds
mov
add
popfw
insb
mov
sbb
inc
adc
int
fistl
daa
orb
xchg
enter
out
push
push
pop
fs
cmc
icebp
ljmp
nop
ja
jo
ja
adc
lahf
loopne
sbb
push
xchg
mov
shl
outsb
or
repz
and
lock
aaa
dec
ret
inc
aas
jb
xor
and
repz
rorb
add
insb
mov
jne
daa
xor
aas
es
pop
xor
mov
cmpsl
mov
fcoml
daa
cltd
lock
cmp
sbb
sbb
push
aad
xor
mov
popf
sbb
mov
sbb
popa
rcr
int3
fs
jbe
xchg
jmp
dec
sub
sub
cmp
mov
shlb
daa
stos
das
mov
push
add
and
daa
lcall
adc
in
cmp
sub
push
pushl
or
ds
shlb
mov
fwait
xor
nop
cs
pop
jno
mov
idiv
lds
iret
cmp
shl
repnz
sub
pop
lds
dec
jmp
mov
ljmp
jno
sub
or
push
cmp
and
das
adc
je
ds
flds
decl
dec
loop
popa
rclb
lock
sbb
icebp
aam
shll
movsl
rcrb
ror
inc
mov
dec
adc
cmp
fisubrs
pop
sbb
pop
scas
cmp
xor
fpatan
outsb
scas
cmp
and
dec
rorb
scas
jg
jmp
and
repnz
jge
sbb
xchg
aaa
or
cwtl
fnstcw
shr
das
push
movsl
inc
movsb
insb
mov
out
fwait
mov
lahf
lds
jne
and
mov
aam
cmp
jle
sbb
mov
pushf
pop
cmp
mov
xchg
dec
dec
popa
xorb
subb
xor
cmp
out
mov
rcll
add
gs
push
xchg
mov
out
popf
adc
pop
notb
stos
mov
xor
stos
ss
cwtl
lea
or
mov
sbb
popa
push
pop
push
or
pusha
ds
sub
js
mov
adc
mov
jl
pop
add
jb
mov
xchg
ss
mov
cmpsb
cmp
int3
pop
xchg
sub
mov
jp
jne
jge
add
sub
jmp
movsb
jmp
and
out
xchg
in
cmp
addr16
sub
jg
lcall
xor
push
stos
scas
ljmp
mov
scas
movsb
ss
cs
ret
sbb
cmp
xchg
xchg
test
cmpsb
lock
mov
jmp
sub
or
xchg
sub
cmpsb
pop
jmp
test
dec
push
sub
aad
ret
pop
fwait
sub
sahf
fs
xchg
test
imul
mov
xchg
roll
fildll
adc
cmpsl
mov
push
or
inc
cmp
dec
repnz
push
sub
jmp
inc
cwtl
mov
lret
dec
sbb
dec
mov
sti
stos
jae
push
ljmp
call
rcrb
sahf
push
jno
pop
imul
movsl
sbb
or
xchg
mov
jle
lea
mov
in
and
ja
sub
adc
decl
outsl
and
jmp
mov
xor
jno
cmp
jecxz
mov
decl
test
push
cli
insb
mov
out
arpl
mov
ja,pt
dec
push
inc
mov
dec
pop
lahf
mov
jb
cmp
cwtl
jl
mov
fdivrl
out
pop
sahf
push
fdivrs
int3
xchg
enter
jge
xorb
clc
not
jb
push
ret
fisttps
mov
inc
pushf
xor
sub
mov
test
pop
push
xor
push
jae
inc
mov
scas
jne
cmpsl
mov
push
adc
jmp
loop
cli
popa
push
mov
mov
jmp
aam
or
mov
aad
cmp
idivb
lds
arpl
imul
mov
fisubrs
jbe
xchg
mov
sub
mov
cmp
gs
bound
push
and
fdivl
push
sbb
shll
sbbl
cmp
push
xchg
insb
mov
xchg
add
ret
sbb
aam
cmp
push
scas
scas
cmc
mov
mov
subl
popa
or
cmp
out
push
jb
aaa
test
adc
lcall
dec
push
dec
gs
lea
fstp
pop
push
jp
arpl
mov
jg
inc
inc
xlat
jp
test
hlt
jne
mov
xor
push
out
jmp
mov
in
cmc
jp
push
xor
and
and
jae
insl
fs
lds
xchg
xor
xchg
cli
loop
dec
call
cld
and
popf
cwtl
jge
pop
xchg
cmp
es
imul
xor
and
mov
iret
push
jge
jne
sahf
scas
lret
rorb
lock
dec
sub
cmp
insl
inc
icebp
lahf
ss
cwtl
sub
mov
cs
xor
imul
clc
jg
insb
sbb
xchg
mov
fists
fstpt
fsubrl
push
lods
dec
and
incl
les
jge
mov
sub
sahf
xchg
repnz
mov
mov
addr16
sub
in
adc
hlt
ret
inc
es
mov
add
xlat
in
or
out
sub
or
fnstsw
test
aaa
pop
fisttps
adc
inc
popf
ss
iret
popa
pusha
incl
sub
aam
cwtl
add
push
pop
fdiv
adc
sbb
jmp
test
ret
cmp
aam
and
inc
add
mov
in
outsb
xor
mov
xor
lods
xchg
fidivs
cmpsb
ljmp
pop
fldenv
rcll
jbe
mov
jg
inc
pop
dec
cmpsl
addr16
mov
push
lods
add
pop
adc
adc
loope
mov
rolb
cmpsl
filds
pop
test
inc
jae
cltd
inc
shlb
push
enter
xor
and
mov
int
mov
dec
jno
adc
les
int
ljmp
int
leave
aas
adc
jb
fists
adc
jb
push
movsb
cmp
and
movsl
insl
mov
add
addl
in
or
jmp
psadbw
push
enter
adc
int
inc
mov
fstps
fadds
lcall
mov
jp
pop
jle
fs
aad
cs
int3
das
push
mov
ss
adc
je
ja
jns
jb
xchg
flds
mov
lcall
stos
and
xchg
scas
cltd
or
das
push
inc
mov
enter
sbb
orb
lcall
jbe
int3
lock
push
xchg
mov
adc
pop
icebp
or
cmp
pop
insl
cli
sti
xchg
sub
pusha
pop
rcl
inc
xchg
outsl
and
ficoml
mov
ss
push
add
add
jl
test
pusha
and
xchg
call
push
lcall
mov
jne
xchg
adc
stos
cmpsb
test
push
adc
mov
call
xorb
scas
das
mov
jo
dec
test
in
repnz
ret
leave
sbb
out
dec
xchg
adc
mov
stos
jmp
and
push
bound
xor
lcall
add
cmp
pop
cltd
add
xchg
mov
movsb
jp
fldt
out
test
push
pop
popf
lods
std
lods
popf
shl
jp
add
es
inc
xchg
andl
jb
inc
in
push
test
or
leave
cwtl
pusha
cmp
in
sub
lock
ja
stos
lods
lock
negb
jae
nop
movb
notb
add
orb
fldt
scas
jle
nop
and
xchg
mov
sub
notl
testb
rorl
adc
add
pop
adc
aam
and
adcl
je
fdivrl
and
aad
dec
in
dec
sti
mov
lds
ficomps
sub
sub
cli
test
cmpsb
loope
scas
mov
insb
pop
mov
push
jnp
pop
push
xchg
sbb
add
adc
cld
and
xchg
loopne
pop
xor
mov
cmp
cmp
loopne
cmpsl
mov
cmpsb
and
cmp
hlt
ja
pop
imull
aas
dec
push
add
insl
mov
push
cmc
xor
or
popf
jns
aas
shl
jmp
les
dec
out
fisttps
mov
insl
cs
fs
mov
std
pusha
loope
adc
jns
xor
imul
push
insl
push
mov
ja
pushf
cwtl
jnp
mov
and
cwtl
or
les
push
dec
scas
xchg
fistpll
test
push
rcrb
mov
xor
jecxz
and
shl
and
xchg
ficomps
mov
ljmp
cmpsb
sbb
outsb
jle
jl
push
lcall
mov
inc
ss
in
jmp
cmpsb
push
mov
cmp
mov
inc
sub
aas
pop
hlt
xchg
mov
hlt
and
add
inc
jp
daa
cmpsb
mov
push
outsb
call
in
cmp
stos
ja
faddl
lcall
xchg
out
xor
cmpsb
icebp
shrl
scas
pop
movsl
mov
xchg
pop
jmp
scas
push
jl
orb
and
outsl
pop
fisubrs
dec
gs
xor
ja
push
or
popa
mov
push
cmp
leave
pop
or
or
sub
aaa
push
push
rorl
mov
int3
xchg
add
xor
pop
dec
lret
jge
or
sbb
add
add
jg
mov
imul
sbb
or
fmull
sub
js
push
cmp
inc
fisttpll
test
jge
pusha
add
xchg
inc
adc
push
jne
int
sub
mov
inc
mov
push
xchg
push
lret
pop
or
mov
xor
scas
orb
or
sub
xor
pop
cmp
add
jno
jge
adc
arpl
xor
jge
push
and
mov
daa
lds
cmp
mov
jbe
xor
pop
sbb
mov
and
dec
cmpsl
cli
insb
test
dec
cmp
lea
test
movsl
cmp
adc
mov
pop
and
xchg
imul
test
mov
data16
push
fnstenv
jno
int3
addr16
adc
pop
jge
pop
jae
lcall
and
mov
into
pop
mov
stc
fwait
dec
movsb
ret
cmp
jae
push
in
imul
fmull
sbb
leave
lahf
ss
lds
adc
hlt
pop
xor
xchg
mov
or
cmp
mov
inc
insl
cmpsb
in
out
pop
sbb
popa
clc
sub
push
lock
es
push
pop
mov
mov
movsb
inc
xor
repz
in
mov
sbb
push
rcrb
fwait
xchg
out
dec
mul
ja
call
incb
mov
fwait
xor
lods
jmp
lahf
mov
pop
mov
pushf
jnp
fadds
gs
testb
mov
aas
push
in
jo
and
outsl
inc
xor
dec
jge
jge
mov
lds
fsubrs
pop
cwtl
das
push
stos
pop
adc
pushl
or
adc
mov
ret
or
insb
push
pop
inc
jmp
xchg
dec
inc
fidivrs
jp
sbb
dec
push
stc
popa
jbe
xrelease
cmp
sub
mov
xchg
push
cmp
in
jbe
call
cmp
lcall
sub
xchg
pop
clc
xchg
leave
sub
lock
pop
or
repz
xchg
push
scas
das
xchg
int3
add
fbld
sub
fs
xor
xor
xor
xchg
test
mov
mov
and
sbbl
adc
testl
push
mov
cmpsb
mov
mov
dec
fucomip
mov
ja
jnp
mov
fcomi
lcall
jbe
add
std
fwait
setne
dec
dec
jp
xchg
les
push
ljmp
out
shr
push
adc
or
xor
mov
scas
mov
clc
push
xchg
je
jmp
jg
sahf
enter
mov
nop
pop
outsb
add
adc
xchg
xlat
cmpb
dec
add
aas
or
push
push
aad
inc
mov
clc
xchg
es
insl
pop
push
aaa
or
ljmp
sbbb
or
add
adc
push
mov
movsb
test
scas
mov
dec
jns
iret
stos
push
es
xor
xor
jno
gs
inc
nop
pop
pop
call
orl
xlat
aas
movsb
data16
aam
loope
bound
iret
dec
jecxz
xchg
mov
shl
mov
and
aas
daa
shrb
mov
or
jno
scas
lcall
push
cmpl
lcall
adc
mov
push
shll
push
rclb
ds
insb
into
das
xchg
add
pop
lock
fnsave
popf
xorb
mov
xchg
clc
fwait
dec
stc
je
xor
jge
jmp
dec
sahf
add
or
rcl
clc
dec
repz
jl
sub
ret
jns
add
inc
dec
shr
sbb
es
popa
cmp
pushf
lods
inc
jb,pt
or
xchg
sbb
add
cmpsl
pandn
mov
and
hlt
xchg
inc
xlat
les
imul
js
movsb
sub
dec
scas
fwait
mov
mov
jge
and
push
cmpsl
in
fnstsw
lret
mov
lock
push
and
pop
cld
add
fcom
mov
imul
inc
test
out
test
xchg
test
sti
ja
inc
xor
in
gs
pop
pushf
lods
xor
cld
js
xor
dec
dec
scas
add
xor
pop
popf
cmc
stc
cs
test
add
and
cltd
test
or
scas
ret
ljmp
ret
cmp
jg
mov
pop
test
popf
cmp
xlat
cmp
push
xchg
xor
pushf
out
out
outsb
out
stos
xchg
xchg
inc
rol
mov
enter
xor
lret
push
stos
or
xor
dec
cmp
push
mov
dec
pop
stos
in
jmp
lock
stc
inc
mov
movl
insl
or
fwait
ss
jne
shll
mov
push
xor
xchg
into
enter
xor
std
fs
sbb
mov
lods
or
mov
sbb
sub
lods
cmpsb
repz
cmpsb
pop
mov
or
xor
push
mov
and
enter
mov
adcl
fisttpll
mov
test
cltd
mov
or
popf
jge
pop
sahf
cld
loopne
movsl
or
iret
push
das
or
out
arpl
les
movsb
out
push
xchg
xor
mov
mov
fsubr
nop
sub
pushf
mov
cmpsl
dec
lock
mov
ja
jg
xchg
stc
jmp
push
push
sbb
aam
rcll
mov
mov
push
mov
outsb
pop
cmovae
ret
sbb
cmc
push
faddl
in
in
pusha
push
add
adc
cmp
imul
sbb
mulb
cmp
cmpsl
incb
popf
out
adcb
xchg
inc
into
clc
sbb
xchg
mov
jge
jl
cltd
inc
les
cmp
lahf
or
inc
mov
ljmp
jb
lods
into
inc
xlat
imul
jno
int
in
push
sbb
fwait
int3
ss
repnz
cmc
inc
lcall
mov
into
pop
outsl
dec
mov
jg
sub
sbb
xchg
sub
je
outsl
into
cmc
hlt
es
add
movsl
test
add
in
mov
outsl
mov
jge
xor
notl
or
mov
or
jg
and
lcall
cmp
sbb
int3
inc
inc
sti
push
push
movsl
andb
inc
cmp
loop
jp
inc
mov
fsts
into
pop
mov
fnstenv
roll
insb
repz
ds
lock
sub
sbb
add
mov
jmp
fwait
lea
push
cmp
push
lods
pop
dec
inc
stc
cmp
xor
sub
or
mov
push
test
mov
xor
clc
jmp
mov
popf
adc
test
or
dec
lret
mov
dec
jecxz
xchg
mov
loopne
lret
adc
dec
icebp
and
roll
cmc
pop
xchg
jg
divl
fidivrl
jp
dec
in
data16
inc
in
pop
cmp
jb
aas
out
push
test
mul
out
push
adc
out
out
adc
jb
test
adc
movsb
out
xor
idivl
pusha
lods
pop
insb
testb
mov
xchg
rclb
pop
in
jl
pop
pop
jmp
xor
dec
add
cltd
sub
mov
test
inc
jno
mov
das
jb
mov
adc
std
ja
sbb
js
sti
leave
push
add
insb
jnp
sub
jbe
movsb
iret
push
mov
add
jmp
loopne
sub
xchg
push
cmpsl
mov
cmp
adc
subl
mov
mov
aam
subl
out
insb
adc
sbb
mov
xor
xlat
lods
add
lea
pop
sub
or
ds
loopne
stos
adc
or
inc
cli
shlb
popf
fwait
sti
mov
repz
adc
pop
push
add
call
addr16
cltd
or
sbb
cmpsb
je,pt
dec
repz
sub
dec
dec
sub
xor
sub
adc
sub
fldcw
inc
sbb
mov
cs
test
add
push
fisttps
sbb
sub
mov
jbe
jbe
lret
cmpsl
dec
std
xchg
add
push
aam
cmp
fnstsw
std
popf
inc
inc
dec
push
clc
adc
inc
fdivp
arpl
clc
pop
les
cmpsl
cmc
mov
cs
out
mov
stc
movsb
inc
mov
fcmovne
sbb
rolb
in
enter
cmp
mov
push
lcall
loope
imul
xchg
cmpsl
scas
in
push
or
push
out
sub
leave
popa
int3
rcrl
add
out
inc
outsb
add
and
adc
lds
sub
gs
lcall
adc
mov
cli
jecxz
sbb
int3
jno
scas
dec
test
jle
sub
jg
rol
pushf
dec
mov
push
cmp
or
mov
sbb
cmp
push
testb
add
mov
rcll
fdivrs
fsubr
jp
push
mov
sub
cltd
cmp
push
outsb
mov
sbb
mov
inc
ffree
push
ds
lret
fs
cld
adc
repnz
pop
sbbb
jg
fbstp
rcl
jae
inc
push
push
daa
push
addr16
xor
mov
int3
in
or
pop
ja
imul
ret
loopne
jnp,pt
loopne
loop
mov
cmp
add
dec
shrl
or
imul
mov
push
cld
loop
or
cmp
xchg
addb
arpl
or
or
imull
mov
lock
fwait
lret
cmc
push
sub
daa
mov
mov
inc
in
adc
sbb
vmwrite
stos
lahf
sub
pop
jle
shl
aam
push
mov
jg
xorb
lods
mov
sti
and
stos
dec
mov
test
rorb
or
shrl
adc
test
sbb
mov
mov
insl
lods
andb
jne
cmp
xor
loopne
sbb
cltd
incl
dec
fbstp
mov
cmpl
es
pop
dec
in
push
lock
movsl
mov
mov
rorb
xchg
hlt
mov
add
pop
aam
and
mov
insl
ja
mov
stos
inc
mov
leave
ss
scas
in
inc
std
sbb
test
sbb
jb
or
push
jae
dec
movsb
mov
pop
and
fincstp
xchg
xchg
ret
lods
test
push
outsl
sbb
mov
scas
loop
mov
out
xchg
pushf
jnp
push
lods
mov
in
jae
mov
mov
mov
ficoms
add
sbb
shrl
adc
push
xchg
or
inc
mov
jp
data16
jno
lea
cmpsl
xchg
push
dec
cmp
inc
popa
jl
inc
lret
bound
sub
rcrb
xchg
dec
fildl
or
adc
std
lods
gs
fimull
sbbl
ljmp
mov
mov
sbb
jne
push
cltd
enter
mov
cwtl
xor
xchg
sar
mov
sub
sahf
push
add
clc
mov
mov
dec
js
nopl
xchg
sub
popf
jno
dec
mov
dec
shlb
insl
test
pusha
jl
or
das
fdivl
aas
nop
arpl
sub
ds
mov
push
push
push
mov
jl
mov
push
sbb
push
outsl
fists
mov
adc
mov
cld
test
arpl
adc
arpl
sub
outsl
loope
rcrl
insb
outsb
jnp
nop
xor
insb
sahf
cld
js
ret
test
scas
into
xor
ljmp
cmc
adc
dec
lods
and
inc
decb
fcoms
mov
in
add
xchg
pop
adc
sub
rcll
push
sbbl
add
lea
and
xchg
xchg
pushf
xor
add
pop
ljmp
jno
pop
ret
pop
test
sub
bnd
stc
inc
or
fdivs
pop
arpl
add
dec
add
rclb
lret
testl
call
cmpsl
popf
fdivs
leave
fidivl
xchg
stos
push
es
es
call
mov
push
ret
call
xor
int3
ja
mov
data16
sahf
xor
mov
lret
addl
pop
insl
fmul
or
iret
lods
xor
push
jnp
stos
lods
and
push
adc
cs
stos
or
cmpb
xorb
sub
mov
dec
inc
fdivrs
ljmp
sub
bound
xchg
fwait
push
cs
inc
dec
cmc
push
add
mov
push
adc
jge
push
test
icebp
loopne
inc
xor
jmp
sbbl
mov
inc
ficompl
add
dec
xor
adc
jecxz
lret
aad
into
test
divl
mov
lods
add
fwait
jl
outsb
mov
mov
icebp
push
in
xor
mov
fistl
cs
mov
mov
or
leave
in
mov
pop
adc
push
pop
sub
aam
push
cltd
aad
dec
cmpsl
repz
subl
lods
popf
adc
or
mov
push
pop
mov
hlt
pop
mov
mov
test
mov
or
add
jns
gs
push
cmp
mov
dec
sub
pop
pop
insb
jl
dec
shll
in
adc
push
mov
jge
add
push
or
xor
pop
roll
iret
xor
xor
pop
push
shrl
in
add
xor
call
cld
cmp
sbb
lcall
nop
cmp
test
shll
dec
shlb
jl
mov
mov
jb
nop
mov
sbb
imul
mov
mov
pusha
inc
test
inc
sahf
mov
aas
pop
repz
mov
xlat
lret
dec
pop
repz
decl
mov
cmc
xchg
negl
pop
and
mov
out
jl
mov
push
mov
pusha
stos
mov
mov
je
or
stos
add
addl
adc
mov
cmpsl
sub
arpl
out
mov
dec
pop
aam
pop
jno
adc
push
mov
in
or
stos
jns
sbbl
popa
clc
aam
cmp
inc
xlat
ror
and
mov
fcomip
jno
hlt
inc
cli
mov
or
mov
push
xchg
sub
xchg
aas
pop
xor
sub
push
cltd
or
popl
insb
xlat
push
je
xor
mov
mov
adc
push
call
and
mov
lods
cmp
mov
push
add
sbbl
cmc
dec
arpl
das
addr16
loopne
and
lahf
mov
inc
aas
aad
fs
aad
daa
mov
jmp
ret
or
cld
call
push
add
mov
fxch
data16
jle
aas
lcall
test
lret
divl
mov
jne
insl
ret
stos
rolb
add
ret
shl
lds
divl
in
jge
xchg
pop
or
push
fnstenv
cmpsl
fisubrs
inc
mov
push
mov
jecxz
scas
lret
sbb
insb
das
mov
cli
mov
aaa
fwait
push
inc
out
sti
imul
sub
jecxz
rolb
incb
lds
jle
cmp
in
ret
dec
xchg
movsl
mov
mov
dec
pop
les
pop
arpl
lret
pushf
in
jg
addr16
insl
sahf
pop
mov
sarb
add
push
dec
enter
scas
mov
es
pop
repz
inc
xor
out
sbb
stos
iret
mov
lahf
in
pop
mov
testl
fcomps
mov
gs
lret
and
xchg
xchg
jns
jecxz
jp
pop
push
mov
bound
stos
divb
sub
adc
test
jne
bswap
leave
cs
adc
adc
xchg
push
jb
jb
ljmp
jnp
dec
xchg
add
fsubrs
int
push
mov
mov
push
push
xchg
mov
jmp
in
mov
ja
fs
fwait
test
hlt
jg
and
fidivs
loope
or
pop
add
mov
inc
push
test
pop
int3
pop
lcall
pop
mov
aaa
xor
daa
xchg
pop
bound
push
fwait
pmaddwd
inc
in
xchg
push
inc
cmpsb
lock
iret
dec
mov
imul
rcrb
test
mov
sub
fadds
ret
fsubrp
push
push
sub
stc
dec
xor
adc
mov
or
xor
mov
cmp
add
xchg
adc
adc
sahf
and
push
mov
ret
sbb
xorl
or
mov
fcoms
xchg
sbb
jmp
out
std
cltd
or
je
imul
cmp
dec
mov
sbb
insb
mov
adc
xor
mov
call
pop
inc
iret
bound
inc
xchg
mov
fnstsw
subl
dec
mov
sub
mov
out
mov
and
pop
or
lds
negl
push
and
rorb
and
dec
sbb
int
pop
cmp
jo
or
daa
lods
js
add
cmp
mov
sub
pop
in
ret
jle
xchg
loope
andl
cmc
jns
rcrl
mov
or
daa
in
cmp
int
pop
lcall
dec
test
mov
dec
push
test
mov
add
xor
mov
filds
mov
sbb
das
cltd
cmp
stc
or
movsl
lds
add
cmpsb
lret
jb
cmpxchg
and
and
add
andb
loop
sub
hlt
dec
imul
pop
dec
ss
xor
mov
cmpsl
ss
pop
push
out
dec
add
lretw
adc
jg
mov
jno
sbb
es
xor
in
insl
aaa
jp
insb
push
cmp
sbb
cmp
push
inc
nop
jge
loope
jnp
mov
sbb
xor
pop
loope
std
bound
aam
and
mov
scas
sbbb
jb
mov
xchg
inc
dec
adc
cmp
call
dec
mov
pusha
mov
vmread
fdiv
dec
ret
push
mov
int
in
lea
xorl
sarb
sub
or
in
out
ja
xor
inc
addr16
imul
lock
out
ja
cmc
pop
pushf
shlb
fnsave
sti
sarb
push
or
inc
ja
dec
cmp
jecxz
mov
xor
cmp
sub
imul
inc
xchg
incl
push
stos
add
xor
adc
sahf
call
in
xor
adc
mov
fidivs
mov
mov
push
jbe
pop
jmp
dec
xchg
in
dec
jmp
add
sub
mov
out
fsts
nop
cmpps
pop
cmp
mov
sbb
dec
jg
jmp
stos
and
dec
xlat
stc
xor
inc
cmp
leave
imul
pop
mov
pop
sub
add
mov
pop
mov
cmpsb
repnz
add
mov
mov
push
das
mov
popa
jne
inc
push
dec
mov
mov
fs
sarl
pop
mov
pop
xchg
call
xchg
pop
sbb
or
movsl
clc
jns
sar
push
and
pusha
cmpsb
ds
popa
sar
push
or
ds
fldt
fisttpll
test
lds
push
cltd
push
leave
mov
lds
inc
mov
lea
pusha
test
fidivrs
or
cmpsb
cltd
inc
xor
push
xchg
outsl
or
xchg
add
fimuls
hlt
and
in
test
imul
dec
icebp
mov
cmp
fisubrs
adc
fs
cwtl
cmp
inc
sub
pop
mov
int
dec
and
std
lahf
sbb
test
cmp
push
sahf
lret
and
cmp
insb
lret
cmp
push
ljmp
jno
in
leave
loope
add
xor
mov
push
insl
mov
adc
dec
mov
jl
push
dec
push
pop
shrb
cmp
cmp
push
ret
fwait
or
inc
lds
jp
out
dec
jecxz
inc
sbbl
xchg
clc
pop
dec
mov
xchg
mov
push
inc
fiaddl
and
push
or
adc
std
push
mov
stos
adc
test
dec
sbb
pusha
mov
xchg
es
pop
cmp
lcall
cwtl
notb
sub
xlat
or
inc
fwait
sbb
stc
push
jp
sbbl
scas
pop
addr16
xchg
push
push
lods
jo
adc
cmp
loopne
test
ds
xchg
dec
pop
out
cmpsl
fisubrs
push
sub
mov
shr
push
insb
mov
or
jle
aaa
mov
out
push
idivl
inc
leave
popf
lea
push
sahf
jge
mov
add
mov
adc
sub
jne
adc
and
push
push
js
mov
inc
xor
and
call
or
adc
mov
int3
movsb
adc
cmpps
xchg
in
pushf
cmp
subl
sahf
imul
scas
mov
pop
mov
into
sub
loop
andl
aad
pop
add
pop
stos
lods
ficompl
xor
outsl
dec
arpl
dec
sbb
repnz
nop
xor
adc
ret
lds
cmpb
sub
xchg
and
mov
push
dec
push
ja
mov
clc
fucomi
cld
pop
pop
jg
xchg
jge
mov
dec
mov
lret
push
popf
adc
mov
adc
mov
adc
mov
pop
sbb
stc
mov
jb
jl
mov
mov
jg
test
mov
cmpl
mov
out
fs
push
sub
mov
mov
std
add
mov
ret
shr
std
xchg
mov
push
repnz
int3
adcl
xchg
push
sbb
call
popa
clc
inc
lock
repnz
cld
push
mov
fnsave
or
mov
push
mov
fstl
mov
adc
into
fs
mov
inc
in
sbb
jno
push
push
inc
mov
mov
cltd
test
bound
adc
mov
inc
rcrl
pushf
js
stc
lods
cmp
xor
outsb
jne
sti
in
dec
xlat
pop
sti
shlb
push
pop
movsl
mov
push
jp
adc
ss
mov
mov
add
push
mov
mov
push
jmp
mov
pop
and
sbb
bound
adc
xchg
cmp
pop
cmc
popa
jnp
daa
jno
sub
sbb
shlb
test
jne
sbb
jge
sbbb
mov
sub
test
das
loopne
push
leave
in
add
lods
in
je
test
pop
sub
jns
mov
jns
sub
adc
pop
fcmovnbe
and
in
subl
xchg
mov
ljmp
cltd
sbb
or
pop
mov
std
jo
dec
mov
and
sbb
sbb
adc
gs
lcall
stc
mov
mov
icebp
movsl
movsb
lods
xchg
insb
out
mov
ret
sahf
cmp
adc
sbb
popa
fidivs
push
mov
push
xor
lock
jmp
sub
movsl
dec
out
pop
mov
jecxz
xchg
cmpsl
and
jno
test
push
or
loope
sbb
jge
je
cli
sbb
jnp
mov
mov
out
or
fdivrl
mulb
lods
pop
mov
sub
jb
mov
ret
mov
jnp
hlt
jl
mov
xchg
pusha
stc
or
mov
dec
incl
dec
in
adc
or
jno
and
pushf
and
jno
cli
movsl
addr16
rorb
or
mov
or
aaa
nop
sub
or
adc
lds
add
rol
ret
loop
ret
jb
enter
lahf
bound
cltd
js
dec
jge,pn
dec
pop
ret
sarb
mov
dec
or
jae
cmc
fcmovb
dec
push
jg
loope
ret
loopne
out
incl
mov
xor
daa
mov
inc
inc
pushf
hlt
push
mov
jae
xor
out
mov
mov
fnstcw
mov
sub
adc
or
js
pshufw
pop
sub
jno
inc
sub
xchg
mov
adc
xlat
test
jne
and
or
mov
ret
xor
fstpt
fisubs
leave
pop
lret
add
inc
and
int3
push
in
in
push
iret
fildl
stos
and
in
add
dec
movsl
pop
shlb
lock
xor
mov
add
mov
sbb
inc
in
sbb
pmulhw
mov
in
xchg
fmull
add
xor
pop
push
mov
pop
ljmp
jne
pop
mov
stos
nop
mov
xchg
xor
lcall
mov
mov
and
push
ffreep
xor
ljmp
jne
loopne
ror
int3
push
sub
xchg
sti
divb
sub
push
jo
and
test
rcr
leave
mov
cmp
cmc
sbb
lret
sti
adc
jg
fcomi
arpl
cmp
bound
mov
fidivrs
inc
xor
fs
out
aas
adc
sbb
mov
in
add
jnp
cwtl
jmp
int3
adc
push
ljmp
adc
int3
enter
sbb
popf
lock
xor
mov
mov
cmpsl
js
inc
outsl
leave
xor
cmp
test
cmp
cmp
fldl
or
mov
add
jecxz
or
pop
je
dec
xor
repz
pop
xchg
in
mov
sti
sbb
call
into
lock
fcmove
arpl
movsl
dec
mov
add
pop
mov
out
xor
bound
lods
pop
sub
lea
mov
jns
lea
scas
inc
cmpsl
dec
pop
mov
ljmp
popf
sbb
mov
cwtl
adc
mov
or
pop
outsl
dec
frstor
pop
jae
sub
repz
les
xor
push
dec
fcmovne
ds
or
shll
jne
pop
mov
pop
push
hlt
jecxz
in
mov
xchg
cltd
into
xor
inc
xlat
mov
sub
aaa
push
pop
imul
jbe
cmpsb
jg
fadds
jmp
lahf
cmc
fidivs
adc
outsl
fimull
mov
test
mov
mov
jge
push
scas
and
and
jae
inc
bound
jl
icebp
in
xchg
lds
ret
cltd
xlat
cs
pusha
mov
mov
dec
enter
push
or
jp
repnz
mov
cmp
leave
fcmovnb
pop
dec
push
inc
cmp
sub
mov
xchg
test
test
loope
daa
cld
outsb
cmp
ja
pop
mov
mov
std
cltd
or
fnsave
movsl
in
dec
xchg
adc
lods
inc
mov
in
sbb
fwait
xor
jecxz
pop
adc
and
push
addr16
inc
push
mov
fisubl
stos
xchg
mov
gs
xchg
push
imul
int
jne
mov
mov
mov
add
mov
pop
sbb
cmp
and
pop
fistpl
add
mov
bswap
or
push
out
movsb
js
test
inc
jmp
arpl
dec
pop
adc
and
leave
or
bound
js
push
mov
mov
xchg
imulb
xchg
ret
push
mov
sub
push
pop
push
mov
arpl
or
fidivrs
out
jo
push
stos
sti
xchg
insl
pushf
mov
loopne
inc
fadd
aam
hlt
mov
push
lea
lea
rolb
jp
mov
push
insl
mov
and
pop
imul
scas
fldt
ficomps
jp
pop
lock
sbb
jae
jbe
pop
xchg
push
inc
mov
outsl
dec
add
adc
mov
lods
add
xchg
lret
jle
cmc
jge
sub
adc
mov
loope
mov
arpl
cmc
nop
dec
jecxz
ljmp
sub
movsb
pop
inc
xlat
mov
std
mov
xor
addb
enter
push
push
push
mov
sahf
mov
add
dec
dec
push
and
test
inc
xchg
sub
jno
sahf
push
add
and
ja
xchg
mov
jae
fidivl
adc
scas
mov
xchg
xor
dec
mov
mov
rolb
xor
popf
scas
sub
or
push
ja
and
out
adc
xchg
mov
xchg
pop
mov
dec
pop
scas
xorl
lret
cld
jb
pop
mov
dec
out
clc
out
sub
cmc
fwait
add
pop
sbb
inc
add
sbb
sub
and
xchg
pop
sbb
or
add
xor
mov
mov
fstl
ss
cmpsl
out
mov
or
cs
fucomi
or
das
jb
lods
scas
xor
sahf
xor
push
and
stos
lahf
aaa
cmp
shlb
mov
push
push
push
cmovbe
xchg
movsb
sbb
jge
out
lcall
stos
addl
xor
inc
aam
sbb
pop
xchg
test
repnz
fucomp
adcl
and
add
fisubs
popa
adc
push
jns
sub
stos
aaa
xor
scas
pusha
pop
rorl
jecxz
jnp
lods
pop
jg
cmc
mov
inc
jl
arpl
in
mov
cmpl
push
es
int
and
xor
dec
ljmp
push
adc
xchg
mov
dec
test
test
sahf
cli
xor
adc
popa
aam
dec
loop
jne
dec
andl
jae
dec
icebp
xor
push
mov
icebp
sub
call
stos
rcrb
out
lret
lret
cmpb
xor
mov
fwait
mov
lret
inc
cmc
pop
hlt
ss
fmuls
outsl
sub
pop
negb
out
iret
mov
lds
sub
ljmp
xchg
pop
push
mov
add
inc
push
test
fldl2t
jmp
mov
lea
mov
stc
cwtl
add
push
sbb
add
fdivrs
decb
lods
in
xor
nop
jmp
lods
mov
pop
adc
push
push
cli
xchg
loope
std
pop
icebp
inc
outsb
stc
fsts
scas
mov
push
stc
sti
int3
mov
and
ret
add
xor
push
jae
add
imul
daa
or
cmc
out
and
pusha
dec
insb
sub
xchg
rclb
hlt
aaa
test
mov
or
push
adc
mov
push
insb
sub
out
mov
repz
fcoml
sbb
or
cmc
xchg
mov
stos
adc
sub
imul
xor
dec
xchg
cld
outsl
clc
loope
fdivl
jno
aad
sub
adc
out
sub
xlat
test
inc
and
dec
icebp
push
fbstp
popa
dec
xchg
xchg
inc
jp
dec
in
pop
in
scas
mov
xchg
pop
shl
adc
mov
out
sarb
in
fbld
jp
push
lods
sub
pop
dec
sbb
pop
sbb
shl
cmp
xchg
int
popl
call
sbb
inc
pop
jle
cli
shrl
call
pop
and
je
lcall
xor
adc
mov
repnz
rcrl
pop
test
loopne
mov
push
aas
test
popf
subb
adc
in
shrl
les
inc
movsb
mov
pushf
mov
mov
stc
aaa
das
movsb
repnz
addr16
stos
xchg
cmp
pushf
sub
fimuls
clc
aas
je
pop
in
inc
lock
sbbl
movsb
fdivs
mov
js
cmp
pop
xchg
stc
sub
pop
icebp
lret
pop
aad
mov
sub
or
xchg
in
add
add
and
xchg
test
sarl
xchg
fnstsw
dec
in
mov
loope
pushf
rcl
in
ds
mov
adc
out
mov
pushl
insb
dec
sahf
dec
dec
xchg
nop
or
fs
cmpsb
in
adc
and
je
cmp
push
fisttpll
int3
ret
inc
roll
sub
add
aaa
enter
push
mov
shrb
xchg
mov
dec
pushl
inc
sub
popa
cld
fstl
xor
adc
fcoml
or
sbb
out
mov
or
mov
adc
pop
jle
mov
mov
xor
mov
or
cmc
jge
dec
clc
jno
sub
int3
xchg
jg
out
mov
aas
dec
es
sbb
mov
or
testb
push
mov
das
jp
cmc
jg
lods
mov
daa
adc
aad
aam
stos
xchg
sub
cmpsb
in
sub
mov
mov
fimull
sbbb
xchg
mov
cmpps
popa
cmp
xor
in
hlt
mov
xor
out
fucom
lcall
imul
xchg
mov
jb
shlb
je
xchg
push
lods
cltd
out
push
or
pop
cmp
aam
imul
add
insl
mov
xchg
push
pop
outsl
ljmp
pop
cmp
add
fdivrp
lods
and
cld
xchg
fs
mov
lds
cmp
sbb
pop
sub
lock
insl
sbb
mov
cmpl
push
inc
mov
jae
cltd
insb
inc
add
push
inc
mov
dec
inc
push
dec
jnp
push
and
xor
mov
mov
lock
fcomip
pop
pusha
fs
add
or
lret
data16
loop
mov
fistpl
xchg
mov
mov
loope
sub
inc
xchg
pop
add
add
jmp
adc
inc
ds
and
rclb
call
adc
inc
sub
push
push
pop
aad
cmp
cmp
push
pop
xchg
addl
rcl
sub
jg
inc
and
sarl
push
jmp
je
movsl
shrb
mov
mov
sub
xor
pusha
ja
sbb
sbb
inc
mov
pop
add
adc
jmp
out
sbb
mov
test
mov
mov
adc
xor
xlat
mov
jmp
fisubrs
adc
jmp
or
xchg
rcrb
loope
xchg
pop
cmc
je
push
sbb
jl,pt
inc
mov
push
mov
add
xor
ffree
stos
push
or
mov
lcall
jmp
mov
out
dec
add
mov
sbbl
and
mov
xchg
lret
leave
sbb
jo
xchg
sub
fmull
lock
ret
lcall
jne
mov
data16
push
fstl
enter
sbb
sub
pushf
mov
fmuls
test
mov
inc
js
mov
jae
std
cli
jno
in
or
aaa
dec
adc
mov
fcoms
sahf
fisttpll
ret
pop
or
sub
in
fwait
add
inc
ficomps
push
mov
jg
mov
iret
add
lahf
push
in
outsb
add
xor
adc
mov
xlat
es
pop
or
leave
ret
mov
mov
jb
test
add
sub
inc
cwtl
mov
inc
adc
jp
add
cli
xchg
xor
cltd
test
sub
faddl
cmp
jne
scas
push
xor
mov
iret
pop
imul
sub
out
stc
jmp
push
inc
popf
dec
outsl
popf
sub
lock
mov
xor
push
xchg
into
mov
jns
inc
pop
mov
in
sub
inc
xchg
xchg
sti
dec
mov
dec
mull
out
aam
mov
lods
xorb
cli
mov
aam
hlt
xchg
adc
mov
movsl
icebp
sub
cmp
out
xchg
xlat
push
decb
sbb
mov
imul
mov
test
test
push
jle
adc
jp
leave
cmp
test
sub
add
rcrl
mov
adc
cmp
ror
int
in
mov
pop
cltd
mov
jle
ret
inc
out
and
pop
mov
imull
fcompl
jns
test
bound
jno
xor
sahf
lods
dec
jle
stc
sbb
add
idiv
aam
push
popf
hlt
mov
dec
cli
xchg
push
jmp
adc
ficompl
fstpl
inc
jo
lret
pop
test
fnsave
and
xchg
inc
fidivrl
ja
sub
and
sahf
ss
cmp
data16
mov
and
ret
dec
bound
aam
repz
loope
test
shrb
cld
orb
add
daa
adc
dec
inc
dec
mov
je
leave
loop
out
stos
js
jb
push
mov
cmp
dec
aam
jae
sti
mov
add
inc
mov
cmpsb
xchg
iret
leavew
pop
sarb
stc
lret
jno
sbb
iret
roll
pop
js
shr
cmpsb
xlat
sub
push
inc
out
notl
xor
into
add
lds
fs
ret
popa
push
xlat
and
pop
aas
imul
dec
loope
xor
pop
xor
jo
inc
or
sbb
add
add
sbb
test
push
push
dec
mov
inc
cmc
in
xor
xchg
xor
filds
sub
pop
pop
xchg
mov
fistl
mov
lret
xor
fwait
dec
aam
xchg
lcall
cwtl
sbb
sub
and
sbb
adc
fists
insb
jle
outsl
add
push
mov
stos
adc
mov
pop
sub
cmp
jae
pop
lret
dec
cmp
nop
stos
lret
lret
mov
inc
fcmovnb
inc
lahf
mulb
or
pop
fs
push
rcl
bound
clc
sub
outsl
mov
ss
pushf
lcall
fwait
divl
mov
jl
jp
lods
xchg
mov
daa
add
movsl
repnz
cmp
ret
imul
add
inc
outsl
push
jb
pop
rcll
stc
and
xchg
es
mov
xor
bound
push
sbb
sub
out
adc
sbb
cs
popa
xor
daa
mov
aas
and
push
dec
ljmp
cmpsl
inc
fstl
nop
lods
int
fistl
xor
dec
in
dec
in
dec
dec
int3
mov
loopne
adc
xchg
adc
jne
cs
sub
jb
or
adc
andb
and
mov
sti
xchg
push
pop
xchg
dec
imul
dec
push
movb
outsl
test
fcomi
jp
ret
ret
ret
mov
xchg
scas
outsl
inc
pop
mov
cld
adc
xor
inc
dec
mov
hlt
insl
adc
jns
in
mov
ror
mov
mov
inc
pop
pop
testb
aaa
jmp
sub
int3
pop
mov
iret
xchg
inc
flds
mov
push
test
icebp
mov
pop
mov
test
adc
sub
iret
stos
lret
push
daa
sub
inc
push
mov
push
push
lret
mov
out
jge
insb
sbb
and
cmp
nop
cmp
stc
xor
movsl
lea
dec
loopne
add
fistpll
mov
jne
adc
sti
subl
push
pop
add
xchg
shll
cmp
add
adc
sarb
push
andl
iret
push
test
lock
xor
out
test
fadds
sbb
push
mov
cmp
popa
cld
fnstenv
and
push
in
and
repz
inc
je
sbb
mov
xor
mov
stos
push
mov
dec
push
mov
lods
jg
xor
and
or
testl
add
mov
mov
les
xchg
sub
bound
pop
or
dec
out
rorb
out
or
cmpl
gs
cmpsb
lock
cwtl
lods
cmpl
or
cmpsb
cmpsl
loop
adc
jbe
daa
loop
shl
xor
stos
subl
shrl
fldenv
rcrb
fnstsw
iret
test
test
mov
aaa
dec
adc
cmp
ds
push
out
mov
sub
pop
pop
jg
or
popf
xor
out
in
mov
mov
mov
pusha
cld
or
decl
or
mov
mov
jmp
jne
movsl
cli
push
shr
dec
xchg
dec
mov
jo
arpl
out
cwtl
pushf
aad
inc
out
sahf
clc
out
js
sub
in
repz
mov
ljmp
test
adc
xor
in
dec
in
in
pop
out
xchg
xor
mov
out
mov
xlat
mov
xchg
popf
cmpsb
pop
mov
mov
jle
fisubs
rcll
cmp
push
add
mov
push
add
cld
add
xorl
mov
jmp
cmp
xchg
int3
and
xor
sbb
xchg
xchg
push
cwtd
dec
push
xor
fcoms
int3
pushf
and
jl
sub
mov
cmp
mov
bound
adc
jmp
into
mov
lock
jne
dec
orl
call
sub
rorb
sbb
push
xor
stos
jl
lock
ss
jl
testl
in
lods
nop
loopne
pop
ficompl
jecxz
enter
inc
xor
jl
cli
test
mov
sbb
jb
lret
out
stos
jmp
push
inc
mov
pop
mov
mov
or
sbbl
xchg
insb
mov
out
cld
dec
int
pop
pushl
loop
test
lock
bound
out
dec
in
lret
addr16
inc
cmpsl
cmpsl
push
push
xor
jmp
mov
push
sbb
out
fsubrs
cmp
mov
xor
sub
adc
xlat
cmp
mov
cmc
mov
mov
sbb
jp
dec
stc
push
enter
sbb
xchg
lahf
xchg
orb
ss
arpl
jb
push
xor
inc
frstpm(287
lods
andl
fxch
js
icebp
ds
xchg
sub
repz
cld
inc
mov
popf
mov
rcrl
fidivs
lea
lahf
mov
scas
inc
push
sub
pop
inc
and
mov
jne
lds
inc
pop
mov
jns
stos
inc
add
fdivrl
or
jp
xor
jnp
std
inc
popa
das
or
mov
lret
pop
sbb
icebp
js
arpl
sarl
jbe
ret
adc
in
sub
loope
pmaddwd
mov
inc
push
mov
test
mov
jg
aad
jne
sahf
dec
cmpsb
and
xchg
cld
mov
rcrb
cmpsl
sahf
arpl
add
jno
push
ftst
cld
sub
lret
jg
pop
cmp
insb
add
sbb
test
sub
mov
in
clc
jecxz
dec
leave
sub
cwtl
gs
divl
push
inc
cmp
lahf
pop
in
pop
xor
mov
ret
mov
je
and
andnps
push
sub
test
mov
or
sbb
pop
xchg
inc
std
and
sahf
sbb
inc
cli
cmpsl
stos
inc
and
push
fs
adc
inc
mov
jnp
lock
xchg
jno
dec
fucomip
xchg
lea
sbb
negl
jnp
daa
out
xor
or
xchg
shlb
or
test
pop
movsl
xor
in
fidivrl
xor
ret
pop
jl
jp
mov
mov
cwtl
mov
jmp
test
mov
stc
or
out
jns
test
loopne
lods
adc
daa
mov
mov
icebp
popa
add
pop
popf
mov
jecxz
icebp
fcomip
int3
adc
stos
sub
roll
mov
push
or
pop
ds
pusha
popf
cmp
aam
mov
sbbl
das
pop
icebp
pop
jle
add
jno
outsb
sbb
pusha
dec
push
sbb
jmp
or
das
mov
in
dec
shl
repz
mov
shl
jle
pop
dec
insl
sub
pop
or
pop
aam
test
popf
orb
or
mov
mov
in
out
leave
je
pop
add
lods
mov
adc
hlt
scas
call
cmp
es
xchg
inc
fistpl
jb
inc
call
daa
sbb
add
imul
xor
imul
lods
push
dec
pop
or
inc
cmpsl
and
shrl
adc
data16
push
jne
push
xchg
int3
xor
repz
xlat
repz
arpl
std
bound
pop
cltd
dec
out
xchg
lret
icebp
mov
sbb
jno,pn
add
addb
cmp
add
scas
idivb
mov
xchg
cli
and
jl
dec
jle
cmp
shrl
in
loope
incl
xor
or
lea
in
test
cli
inc
out
sub
inc
fsubr
movsb
mov
orl
mov
mov
subb
call
sbb
test
jmp
repz
jo
into
and
scas
pusha
neg
outsb
test
add
push
imul
or
loop
out
aas
fsts
mov
ret
lea
cmp
pop
enter
imul
movd
mov
lock
daa
dec
sub
sbb
mov
sbbb
xor
pushf
int
xorl
mov
mov
push
loop
test
inc
inc
lods
pop
fldl
jmp
push
lods
sbb
inc
roll
xor
xchg
in
sbb
mov
xor
sbb
ljmp
dec
dec
fbstp
pop
data16
pop
les
fwait
jns
rcll
adc
adc
jns
cmpl
cld
xchg
nop
sbb
xor
mov
movsb
pop
loop
xor
sub
mov
nopl
sub
or
cmp
cli
lods
test
and
inc
adc
lea
fsubrs
cmp
filds
in
lods
in
push
sub
lcall
and
sbb
and
cmp
std
mov
aas
dec
jo
stos
mov
cwtl
xchg
test
xor
inc
fldcw
jbe
into
adc
iret
enter
dec
mov
pop
movsl
push
xchg
sub
cmp
jne
mov
sti
lcall
or
mov
test
xchg
test
xchg
movsl
vmovaps
and
daa
pop
inc
sbb
pusha
stc
pushf
outsb
add
dec
mov
add
arpl
inc
in
inc
inc
movsl
add
aad
add
inc
lahf
jo
jg
push
mov
shl
xor
jle
xor
pop
mov
mov
cwtl
sub
inc
adcl
mov
sbb
mov
in
ljmp
mov
sub
shlb
gs
mov
inc
rcll
inc
xlat
mov
fisttps
popa
rcl
adc
inc
data16
add
mov
xlat
aas
fwait
mov
mov
rclb
fwait
data16
inc
inc
dec
test
pusha
mov
insb
or
adc
iret
in
ficomps
je
push
push
hlt
movl
sub
pop
arpl
pop
popa
negl
lret
mov
dec
and
cmc
add
pusha
adc
xchg
into
adc
repz
dec
movsb
adc
push
mov
fstpl
sti
loope
inc
inc
sbbb
lcall
inc
or
imul
sbb
enter
daa
dec
divl
sub
sbb
push
js
shll
push
mov
fwait
outsb
cmpb
test
and
enter
jge
ret
rcrb
push
fsubrs
cld
mov
in
cmp
mov
pop
sbbb
pop
xchg
push
int
in
dec
fldenv
addr16
xchg
jbe
push
leave
fcomps
push
mov
or
dec
outsb
jl
orb
shll
clc
inc
mov
cltd
clc
sbb
outsl
cmp
mov
jns
jecxz
adc
pop
lret
test
shr
fists
testb
scas
fsubr
rol
pop
lock
mull
and
cli
nop
pop
ret
jg
cmp
loop
fdivr
movsb
shl
add
in
orl
pop
pop
out
bound
stos
into
pop
in
lea
iret
pop
pop
jo
or
lds
adc
cwtl
and
push
xchg
mov
or
gs
lahf
cltd
mov
daa
jae
loop
fs
dec
xchg
mov
es
test
and
adc
mov
sub
mov
pop
jmp
and
jnp
add
dec
scas
in
and
cmp
push
ljmp
movsb
push
stos
pop
scas
xlat
das
pushf
push
adcb
inc
mov
mov
aaa
cmpsb
push
sub
mov
ss
jae
add
lea
test
out
sub
dec
stos
movsl
movsb
outsl
jne
scas
call
mov
jno
add
addb
xor
bound
dec
xchg
popf
into
sbb
out
aad
add
fnsave
sbb
aas
pushl
jecxz
movsl
cld
rcrb
push
imul
lds
sbb
or
les
xor
shlb
sub
loopne
mov
cmpsl
add
jl
arpl
xor
ret
loopne
adc
sbb
inc
push
and
add
jae
mov
mov
mov
in
es
pusha
xchg
mov
jns
fdivl
push
cld
ja
iret
mov
scas
inc
inc
and
ficoms
loop
pop
adc
gs
fs
popa
fdivrl
push
or
xchg
sub
xchg
mov
xorl
adc
push
jmp
daa
outsb
ret
out
std
jo
enter
sbb
adc
jns
loop
xchg
loop
ret
std
cltd
insl
roll
adc
mov
dec
or
adc
jo
in
call
icebp
movsl
mov
cmpsb
inc
push
loope
test
dec
dec
push
sub
push
xchg
push
inc
mov
mov
sub
sbb
mov
mov
mov
sub
out
rorl
add
cwtl
xor
movsl
mul
test
call
ja
call
pop
xchg
xchg
fsts
sbb
loopne
jmp
adc
push
in
xor
mov
inc
cltd
cltd
xor
stos
mov
and
mov
dec
xchg
mov
rol
pop
add
lods
in
movlps
push
in
xchg
mov
das
push
js
mov
pop
push
out
lds
jle
sbb
mov
leave
xor
insl
subb
adc
sbb
push
push
inc
lret
and
dec
mov
imul
stos
mov
pop
pop
nop
faddp
adc
in
dec
cmpsb
jbe
fs
fistpl
loopne
stc
shlb
imul
mov
lcall
dec
jne
cs
and
es
into
data16
jmp
popf
inc
inc
or
xchg
mov
push
add
adcl
or
rcrl
stos
cmp
shl
jge
mov
adc
je
mov
outsb
pop
das
inc
aam
popf
sarl
xor
or
inc
mov
push
mov
outsb
jno
sbb
xchg
movsb
mov
std
or
add
sbb
jl
mov
pop
cli
mov
xor
add
ret
sbbl
insl
pushf
push
inc
add
xchg
sub
aam
mov
ficompl
iret
and
or
jae
int3
cmpsb
sub
sbb
push
mov
insb
shlb
sub
xor
or
mov
sbb
idivl
cmc
xor
loope
dec
pushf
or
lcall
adc
fnsave
into
mov
faddl
out
lret
jns
mov
daa
inc
sub
mov
pusha
cli
mov
xor
movsl
jmp
or
ret
push
sbb
in
repnz
mov
xor
and
push
mov
fidivrl
imul
movl
and
insb
cld
and
sti
adcl
insl
jb
mov
lea
subb
imul
ljmp
ljmp
push
cld
dec
stos
jp
mov
lret
aam
or
scas
mov
fsts
adcl
mov
cmc
add
stos
fbld
xor
adc
adc
mov
js
iret
rcrb
out
mov
cld
shll
or
in
ss
cmp
jb
pop
jg
pop
dec
std
jae
fs
mov
add
sbb
shl
ds
or
popf
mov
inc
adc
mov
cmp
shlb
aam
dec
es
mulb
mov
adc
popf
ja
and
push
aas
xchg
inc
lods
mov
faddl
xchg
movsl
sub
out
out
xor
push
gs
cmc
outsl
orb
nop
fwait
xchg
pop
repz
subl
push
lds
pop
mov
loopne
sbb
in
nop
incb
movsb
lods
mov
dec
sbb
in
push
int
push
mov
and
loop
mov
insb
ss
cmp
add
mov
xchg
sub
sub
dec
xlat
sbb
mov
into
out
and
dec
push
mov
iret
movsb
jl
enter
pop
nop
pop
jecxz
push
jno
or
push
add
pop
ljmp
sbb
dec
xor
xchg
jp
js
sub
test
and
jne
xor
cmp
mov
loopne
mov
out
test
aad
inc
pop
xchg
pop
mov
pop
sti
ret
mov
out
out
inc
inc
mov
cmp
aad
pop
rol
shlb
es
test
jbe
mov
mov
or
push
shrl
pop
mov
lods
xchg
dec
ficoml
test
mov
sub
gs
inc
aad
jmp
and
idivl
addr16
out
inc
push
call
mov
fdivrs
pushl
cmpsb
loopne
adc
movsb
lret
in
add
pop
jo
jbe
fbstp
idivl
test
les
loope
mov
push
insl
or
lods
and
ffreep
push
cmp
inc
in
jae
mov
pop
sahf
mov
fidivl
addr16
pushf
xlat
pusha
mov
mov
ds
pop
mov
bound
into
shl
dec
in
sub
loop
dec
outsb
stos
pop
pop
push
insl
mov
adc
cs
dec
lods
inc
jge
int
into
cmp
lret
out
and
sub
xchg
les
das
jbe
pop
mov
fsubrs
repnz
push
imul
jg
adc
mov
adc
pop
imulb
pop
jl
lret
int
ret
and
stos
or
aad
lret
adc
out
pop
lret
divb
xorb
push
mov
push
add
arpl
xlat
push
std
pop
mov
mov
out
sbb
rcl
push
or
out
or
push
mov
add
ret
int3
and
outsb
push
mov
cmp
push
or
jmp
xchg
xchg
lret
cmp
sbb
adc
and
mov
test
pop
cmp
insl
mov
dec
fldl
cwtl
outsl
jmp
imul
push
mov
int3
mov
fisubs
lods
sub
mov
cmp
ror
push
mov
bound
lods
data16
fnstsw
shrb
rcll
jns
out
stos
adc
sbbl
add
dec
js
insb
cld
mov
aad
out
iret
push
and
fcmovne
bound
test
lret
jns
sub
outsl
call
decb
push
out
mov
repnz
fcomps
popf
xor
mov
jecxz
andb
insl
shlb
les
repnz
pop
cmp
lcall
push
test
push
mov
std
cs
sbb
xchg
mov
iret
adc
cs
or
pop
push
into
icebp
test
mov
mov
popa
cmp
xchg
cmp
dec
push
lcall
cmp
ja
lret
dec
mov
mull
daa
rcr
xchg
inc
ret
hlt
out
test
in
pop
or
aaa
ret
imul
sub
loop
shl
jle
sub
add
mov
cmp
mov
cs
push
cmp
mov
lret
cmp
cmp
xor
push
pop
jne
cmpsb
xor
push
dec
adc
dec
out
cmp
lods
mov
rcll
adc
inc
xchg
dec
aam
push
negb
in
stos
pop
jnp
imul
mov
jns
loop
lods
inc
push
pop
sub
mov
popa
aad
ret
mov
out
cwtl
mov
add
movsl
sarw
jle
shrl
mov
mov
adc
enter
adc
lahf
divl
push
imul
mov
cld
or
sbb
rorb
dec
xor
sti
dec
test
leave
inc
lods
cli
imul
inc
sahf
cmp
sbb
imul
cmp
xor
imul
xchg
jb
cmp
nop
mov
add
sbb
jns
cmp
cmpsb
hlt
fstps
add
xchg
loopne
and
jp
jne
test
mov
mul
lock
push
sbb
mov
addr16
fiaddl
xorl
cmp
xor
int
insl
rcrl
gs
es
push
cmp
fmull
cmp
cmp
push
leave
gs
aaa
in
pop
in
adc
leave
insb
sub
sub
cmp
shll
cmpl
leave
scas
jno
push
xor
aad
add
adc
aas
aam
mov
fdivs
ret
dec
xor
pop
xchg
ret
lea
mov
arpl
scas
sbb
iret
mov
pop
test
push
mul
adc
push
inc
add
lods
push
cmp
mov
ss
addr16
hlt
test
mov
sahf
and
cltd
shlb
jns
mov
adcl
and
stos
jb
andb
sub
sarl
pop
inc
out
push
out
xchg
fcoms
fsubrs
pop
movl
cmp
lcall
enter
loope
negb
sub
mov
pop
cmp
jg
or
rclb
imul
icebp
mov
xchg
and
or
dec
ds
insl
je
pop
dec
out
frndint
popl
xor
lcall
and
sbb
jl
outsl
dec
popf
adc
push
and
stos
xchg
lea
mov
cmp
cmp
cmp
adc
jbe
fwait
lret
js
into
mov
add
cmovns
and
or
xchg
hlt
mov
push
rcrl
sbb
lods
inc
sub
ja
rcrb
in
mov
adcl
out
sbb
dec
adc
rorb
test
xor
jb
lods
adc
dec
xchg
dec
iret
push
scas
and
ja
fists
pop
mov
fdiv
aaa
movb
sub
adc
cli
lret
xor
add
push
nop
add
sbb
sbb
push
mov
enter
cmpsl
daa
mov
push
imul
sub
cwtl
mov
cs
mov
jns
imul
lock
mov
cs
popf
notl
das
inc
pop
cs
xor
testb
pop
xchg
mov
and
mov
and
test
adc
out
inc
xchg
repz
or
inc
insl
cmpsb
mov
neg
xchg
fists
ss
incl
scas
or
aad
inc
mov
and
jbe
es
fsubrl
testb
fwait
mov
ja
cmpsl
int3
cld
xchg
testb
arpl
mov
mov
maskmovq
mull
rol
imul
pop
jle
mov
sbb
push
push
or
arpl
cld
outsl
imul
cli
dec
xchg
movsb
mov
gs
leave
pop
loop
mov
dec
pop
mov
shlb
pop
or
sub
jbe
inc
in
scas
adc
xor
insl
sbb
fs
out
jns
push
ds
cltd
pop
sbb
mov
arpl
inc
dec
mov
jae
or
shl
mov
notb
inc
dec
dec
mov
in
inc
dec
dec
outsb
vhaddps
sub
imul
lret
mov
sahf
insl
xor
outsl
xchg
pusha
or
hlt
int
scas
divl
push
test
push
add
or
xor
lahf
js
push
lods
jb
mov
mov
push
or
inc
cmp
mov
dec
mov
xor
fcoml
mov
adc
lahf
call
movsl
xor
fsubrl
leave
jae
pop
push
lods
dec
lret
ret
fs
mov
outsl
mov
mov
iret
push
outsl
add
inc
fwait
cli
sub
insl
dec
jns
pop
ret
loopne
xor
in
js
pop
std
lret
xchg
sub
and
ja
ret
jge
testl
loopne
cmp
mov
aam
cwtl
xchg
ja
sbb
jb
push
xchg
sub
cmc
and
jl
push
xlat
movsl
push
shll
scas
inc
or
dec
mov
jp
dec
and
push
adc
lret
cmpps
mov
icebp
fisubl
dec
stos
pop
xor
fsubs
push
call
add
jmp
inc
popf
and
jle
or
and
adc
lods
xchg
mov
sahf
mov
out
xor
cwtl
cld
xchg
cmp
scas
lods
shrb
fimull
lock
iret
sbb
add
popf
mov
cmp
cmpsb
test
pop
int
inc
fs
xlat
inc
jae
sub
and
into
enter
sti
mov
call
xorb
mov
dec
or
pop
aad
mov
lret
mov
outsb
les
cwtl
xchg
mov
lock
mov
lea
push
sbb
jle
mov
adc
add
push
xor
pop
push
insl
push
fsubrp
fdivl
sub
rclb
xchg
pop
jl
outsl
into
cmp
js
bound
sbb
dec
pop
daa
xchg
pop
mov
into
sbb
pop
mov
aad
icebp
bound
adc
push
jnp
xchg
push
or
clc
inc
scas
xchg
jmp
loop
push
lea
aaa
xchg
in
nop
fldl
xchg
or
bound
icebp
xchg
stc
cmp
sub
sbb
sub
fisttps
jnp
shlb
mov
inc
mov
push
jbe
lret
mov
dec
jecxz
movsb
mov
mov
aaa
jbe
sbb
mov
movsl
cmp
add
pop
mov
xor
inc
add
out
adc
mov
add
mov
and
mov
xor
push
mov
sbb
push
inc
int
in
or
aaa
xor
xor
inc
jg
test
faddp
pop
enter
lods
cmpsl
pop
repnz
jne
mov
sub
mov
aam
addr16
pushf
out
adcb
lcall
push
out
push
mov
mov
add
in
je
adc
and
inc
scas
xchg
add
add
push
es
push
pop
jae
cmp
std
call
mov
dec
cs
dec
jnp
in
pop
mov
inc
jmp
xor
out
les
jae
hlt
ds
dec
shll
xlat
adc
mov
jg
add
pop
mov
cmp
mov
js
mov
cmp
adc
std
cmpsl
adcb
es
lock
jmp
jecxz
movsb
xor
cmpsl
sub
out
divl
cmpsl
xchg
sub
es
sub
nop
cld
pop
xchg
dec
psubb
mov
push
in
and
adc
jle
jae
negl
or
popf
jge,pn
mov
pop
push
mov
loop
jge
xchg
js
movsb
movsb
aad
lock
mov
push
out
aam
dec
push
adc
lea
dec
movsb
aad
fs
test
lret
test
mov
sahf
and
xchg
pop
movsl
mov
cs
arpl
mov
pushf
scas
adc
imul
ljmp
sub
dec
test
insl
mov
daa
cli
pusha
xchg
pop
xor
gs
jg
dec
inc
mov
hlt
mov
sbb
adc
test
dec
out
inc
dec
add
ljmp
cmp
lcall
repnz
test
lcall
xor
jmp
dec
sub
aaa
sarl
imul
fidivrl
xchg
adc
mov
push
mov
add
mov
inc
ret
jle
cmp
push
mov
jp
fnstenv
mov
orb
jmpw
dec
mov
arpl
in
sub
jb
push
jo
in
fwait
sbb
ficoms
mov
shlb
add
loopne
mov
ljmp
cwtl
cs
pop
cmp
mov
mov
fisubrl
adc
add
add
jae
add
negl
or
or
cmp
data16
cmc
mov
andl
xchg
mov
sbb
mov
adc
les
out
roll
pop
push
jmp
and
sar
pop
sub
enter
scas
call
loope
stos
andb
jge
test
mov
push
loop
mov
mov
or
insl
lods
fcoml
or
das
jmp
push
xor
out
inc
cmp
xlat
in
decl
cmpb
xchg
pop
mov
fldenv
xchg
sub
xchg
push
pop
call
dec
or
add
cmc
pop
mov
mov
nop
cli
jp
clts
into
xchg
cmc
lcall
nopl
loope
out
mov
dec
and
sahf
xor
dec
adc
adc
sbb
mov
fstpl
aad
mov
repz
xor
inc
in
sti
xchg
aad
test
js
xor
sbbb
sahf
jo
and
inc
and
cmp
out
lea
and
pop
andb
rclb
mov
negb
ljmp
addr16
vpunpckhbw
call
pop
mov
ret
pop
out
mov
jecxz
test
lcall
out
test
or
ficoml
add
jbe
in
test
dec
movsbl
or
cwtl
mov
pop
std
cmpsb
pop
cmc
les
enter
inc
pop
and
iret
in
add
lret
mov
fdivl
xchg
fildll
lock
fists
mov
movsl
mov
jbe
test
scas
mov
inc
sub
lcall
mov
out
repz
nop
stos
dec
cmpsb
sti
lret
pop
gs
pop
jmp
mov
mov
jmp
jmp
jno
movsb
jecxz
and
cmc
je
inc
push
cmp
jecxz
popf
xor
sbb
arpl
cli
imul
cmp
insb
adc
iret
popf
cmp
mov
int3
jmp
testb
aad
sbb
xchg
xor
scas
js
xchg
cmp
fdivrs
sahf
jmp
inc
fnstcw
or
rorb
out
jbe
mov
mov
cmp
pop
subb
mov
xor
add
adc
sub
mov
enter
push
popf
push
cmp
enter
jnp
cs
sbb
std
and
jns
and
xchg
xchg
cmpsl
jmp
fadd
sub
add
xchg
push
cwtl
xchg
add
ror
icebp
stc
scas
push
movsl
push
inc
push
dec
icebp
js
aas
lods
mov
imul
jnp
ljmp
in
ss
jecxz
test
imul
or
jl
in
incb
cld
mov
and
mov
movsl
adc
jp
mov
fildll
decb
int
inc
pusha
mov
xorl
cmp
loop
push
mov
test
mov
clc
bound
out
xor
mov
sbb
xor
sbb
xor
scas
fcomps
out
xor
pop
js
lret
inc
popf
jae
call
pop
fs
mov
lea
adc
push
or
out
es
push
pop
aam
cmc
and
sub
movsb
pop
mov
dec
add
jb
mov
xor
outsl
inc
mov
or
data16
int3
xor
rcrb
gs
jmp
pushf
xor
inc
jmp
add
loopne
mov
xchg
cmc
pop
les
movsb
subl
lahf
pop
mov
test
nop
push
loopne
adc
xchg
in
adc
rcrl
icebp
inc
repz
add
jo
movsl
mov
mov
mov
mov
insb
xor
inc
scas
xchg
or
lcall
popf
xchg
in
das
pushf
jbe
jge
leave
xchg
add
dec
sbb
gs
sbbb
xchg
jmp
jge
int
xorl
push
mov
inc
inc
fidivs
lea
mov
daa
add
fldcw
xor
loope
push
lods
pusha
cmp
mov
addl
lret
cmp
jecxz
in
mov
das
sub
shrb
xor
dec
sahf
sub
insl
jge
cmpsl
pop
pop
fidivl
jg
mov
push
lods
es
dec
out
les
int
jbe
add
cmp
dec
les
fcomps
fidivrs
push
mov
xchg
and
int3
icebp
mov
add
fwait
das
mov
insl
bound
mov
fisubrs
adc
in
inc
arpl
inc
xor
xlat
into
loop
sbb
imul
insl
mov
xor
push
and
cmpsl
mov
addb
decb
repnz
xor
movsl
sub
xchg
pushf
sbb
add
push
stc
dec
movsl
fidivrs
xor
data16
js
ds
pop
mov
js
push
xchg
jl
mul
mov
bound
test
leave
movhps
jecxz
jge
insb
xlat
popa
lods
pop
imul
imul
loop
cmpsb
mov
pop
add
stos
cmpsb
jns
sub
mov
mov
negb
xchg
inc
rcl
mov
add
ljmp
stos
pusha
rclb
out
loop
push
adc
mov
sbb
hlt
pop
xchg
jmp
les
ret
and
shll
cld
add
movsb
repnz
inc
out
mov
fs
fnstsw
inc
add
xorl
pop
insl
or
or
xchg
scas
xchg
dec
rcrl
and
pop
xchg
mov
das
adc
es
pop
or
inc
sub
or
and
cld
push
lock
pop
inc
clc
mov
addr16
cmp
leave
pop
jmp
cmp
push
arpl
in
stos
shll
cmp
push
lods
mov
push
sbbb
in
adc
leave
mov
stc
inc
test
iret
adc
jb
js
addr16
xchg
push
popf
add
sbb
out
mov
popa
xor
shl
enter
int3
popa
roll
cmp
push
mov
test
push
or
cmpsl
lds
xchg
sub
cwtl
lret
aam
jge
mov
jle
dec
movsb
sbbb
loop
xor
xor
js
outsb
stos
and
aam
inc
pop
ss
or
cmp
and
push
inc
add
ss
xchg
jmp
jns
movsl
loop
mov
push
inc
dec
loope
pop
adc
add
cltd
push
push
es
call
mov
push
mov
fcompl
gs
pop
mov
rcrb
lea
imul
adc
xor
jmp
push
dec
dec
inc
dec
imulb
pop
inc
and
cmp
das
repnz
fstpt
sbb
call
mov
sahf
sub
mov
fsubr
inc
mov
gs
cmp
scas
lret
push
xchg
ret
mov
aad
sbb
jmp
icebp
cmp
nop
daa
cmc
add
push
in
test
fsubs
push
popa
inc
add
ret
and
or
xchg
popa
adc
fbld
xor
sub
mov
lods
jle
aad
es
mov
sar
int3
lret
mov
cmp
loopne
mov
pop
inc
jg
popa
fsubrs
and
cltd
sbb
shl
jge
insb
cld
sub
dec
pop
sbb
aam
lods
mov
loopne
sbb
jg
dec
push
das
das
pop
pop
cmp
mov
cld
ret
add
popa
in
add
dec
xor
sbb
sbb
inc
fst
jp
mov
mov
jb
idivb
push
sub
mov
cltd
and
clc
in
pop
push
adc
jbe
pop
notb
inc
lret
jge
xor
pop
call
mov
std
jecxz
dec
mov
lea
lods
int3
pop
aad
inc
add
jns
je
adc
push
test
test
test
gs
sbb
int3
push
insl
aas
push
les
mov
shrb
punpcklwd
push
xchg
xor
jne
push
push
cltd
mov
fnstcw
pop
pop
push
dec
andl
fists
xchg
sub
scas
push
jne
jb
pop
int3
add
mov
xchg
mov
cmpsb
js
pop
lods
iret
and
add
cmp
movsb
jl
sbb
jmp
sbb
mov
pop
dec
cmp
sarb
push
xor
sbb
mov
pushf
pop
faddl
sub
xor
ret
repz
sbb
pop
stc
inc
adc
adc
lea
mov
jp
jmp
cld
fistpl
mov
pop
pop
ja
xchg
fists
sbb
adc
in
scas
jae
lods
nop
stos
das
xchg
ja
jg
out
fs
mov
pushf
adc
gs
lcall
push
push
pop
popf
and
sbb
call
xor
pop
aam
inc
xchg
scas
ret
mov
fisttpll
dec
notb
es
xchg
jp
scas
mov
notl
aam
push
test
lret
add
jge
subl
cmp
xor
loopne
pop
dec
push
dec
jae
movsl
mov
test
cmp
cmp
imul
pop
into
mov
xchg
lods
arpl
xor
mov
sbb
in
lods
inc
mov
jb
sub
cmpsl
pusha
nop
sub
lock
mov
pusha
jecxz
adc
in
mov
cmp
jl
add
jb
sub
aam
pop
sbb
dec
cmp
iret
jecxz
pushf
fistpll
mov
push
data16
jmp
push
xor
pop
cmp
sti
hlt
or
and
stos
push
xor
xchg
bound
xlat
mov
out
repnz
and
jp
test
pop
in
dec
push
xchg
sub
out
mov
lret
sahf
pop
insl
fsubr
and
aaa
push
sub
outsb
add
jle
inc
sarl
icebp
loope
inc
aas
cmp
test
sub
out
add
cs
fpatan
sbb
fs
adc
and
mov
sti
in
xor
sar
mov
cmovle
sbb
out
ret
jnp
jg
or
in
jns
in
xlat
fnstcw
das
inc
insl
mov
push
loope
test
hlt
dec
dec
jecxz
push
cmpsl
dec
fs
icebp
ret
cld
mov
mov
jo
movsl
sub
xchg
or
movsl
adc
and
jbe
xor
call
repz
cltd
push
push
mov
add
jnp
jle
cmp
sbb
jg
mov
pop
repz
push
pop
div
cmp
fs
lds
daa
sbb
movsb
rcrl
dec
dec
xor
mov
outsb
out
cmp
mov
add
xchg
mov
imul
out
stos
mov
iret
inc
xchg
jae
dec
negb
mov
mov
adc
push
test
icebp
repnz
sub
mov
rclb
and
cld
pop
addl
push
jmp
lods
out
xor
fnstenv
enter
ja
inc
das
mov
cmc
adc
pop
bound
jle
movsl
cmp
pop
paddsb
jno
or
sahf
and
pop
icebp
xor
sbb
and
mov
mov
frstor
add
hlt
mov
xchg
out
clc
xor
inc
jp
inc
scas
inc
jg
loopne
push
cmpsl
xor
cmp
dec
jno
cwtl
and
imul
and
cld
add
mov
pop
mov
inc
and
popf
jmp
jne
dec
pop
jne
popa
fisubl
das
push
sub
jno
push
mov
scas
xor
and
std
js
pop
out
and
pop
test
aaa
fldt
bsr
in
mov
outsl
ret
mov
push
insl
mov
cwtl
push
and
iret
movsb
popa
jge
lret
mov
dec
xchg
jb
mov
xchg
or
ljmp
sub
enter
mov
stos
xor
outsb
push
sub
insl
or
movsl
imul
movsb
lret
push
sbb
cld
sbb
push
int3
push
jge
adc
mov
jecxz
mov
aad
cmp
fnstenv
fcoml
movsb
or
add
mov
cltd
cmp
rcpps
adc
aaa
jmp
xor
cmp
push
insb
pop
sbb
add
mov
pusha
cwtl
cmp
inc
push
js
mov
mov
xor
mov
pop
cmp
pop
dec
xchg
xchg
fsubrs
ss
cwtl
data16
cmp
push
dec
and
adc
pushf
pusha
scas
inc
xchg
out
vpsubsb
fwait
repz
xor
fbld
add
or
popa
pop
and
adc
aaa
adc
sub
cwtl
and
out
shr
inc
fsubrs
push
jbe
pop
ret
pop
cmp
insl
ja
inc
mov
aam
adc
popl
push
lret
dec
sbb
dec
imul
xchg
cwtl
fildll
xor
jbe
ficoml
push
add
int3
fimuls
mov
int3
test
dec
xor
jl
lea
dec
bound
lret
aad
out
inc
sbb
add
loopne
pop
xor
cmpsb
icebp
dec
fisubrs
call
mov
imul
addr16
xchg
sub
adc
push
fs
jnp
ret
arpl
aas
add
dec
test
rorb
fdivrs
ss
sub
xchg
pop
sbb
dec
iret
ljmp
imul
jb
inc
enter
sub
int3
aad
repz
imull
stos
xor
adc
push
arpl
sbb
sar
lret
stc
push
add
jle
pop
fiadds
dec
jne
lea
scas
and
std
fs
pop
xor
mov
gs
clc
aam
push
cmpsl
mov
pop
lods
xchg
fldenv
insl
dec
dec
fisttpl
sub
xlat
out
push
jmp
pusha
or
outsb
sar
xchg
xor
out
xlat
ds
out
push
stos
inc
mov
aad
orl
stos
in
mov
mov
and
xchg
movsb
call
dec
dec
loopne
sub
sub
outsl
sahf
imul
adc
push
and
jae
mov
aas
pushf
shlb
int
shrb
inc
xlat
pop
fistpll
and
pop
int3
nop
inc
sub
ss
outsb
add
jb
mov
daa
xchg
in
lock
and
mov
imul
es
pop
imul
push
inc
outsb
shrb
jbe
xchg
cs
adc
add
insl
mov
sbb
lods
dec
add
xchg
std
xchg
ret
lods
das
and
sub
lcall
xor
or
movsl
and
fs
add
pop
gs
icebp
jb
mov
icebp
inc
lds
into
xor
jo
icebp
je
in
int3
mov
leave
add
bound
iret
xor
fisttpl
adc
or
pop
arpl
inc
cmp
lods
mov
adc
xlat
insb
or
adc
pop
push
pop
jb
out
pop
enter
out
and
sbb
mov
pop
xor
dec
mov
inc
mov
cmpsl
movsb
mov
cmp
dec
xor
cli
xchg
xchg
and
sbb
shl
pop
jl
mov
push
fwait
outsb
sub
call
dec
in
inc
mov
adc
int3
arpl
push
mov
pop
sarl
xchg
int3
xchg
dec
jle
icebp
nop
fcoml
in
adc
popa
clc
shlb
lcall
cmp
lahf
push
mov
sub
cltd
insl
fsubr
add
dec
adc
loop
aad
cmpsl
nop
popf
stos
icebp
enter
or
jl
mov
ret
cs
adc
ds
mov
mov
mov
insb
mov
or
mov
int3
mov
lret
adc
aas
iret
inc
or
loop
and
js
inc
pop
arpl
call
imul
push
enter
pop
ljmp
push
xchg
inc
in
lods
je
xchg
xchg
shr
jne
pop
dec
sbb
shlb
cltd
daa
data16
inc
cld
lcall
jae
clc
std
fdivrs
pop
jp
adc
sarl
xor
sarb
cmp
xor
dec
xchg
ud1
mov
out
push
cld
push
lods
test
mov
out
add
popa
dec
pop
and
call
fisubl
dec
xchg
pusha
mov
test
cmc
mov
aas
adc
jp
inc
lcall
fsubrs
fstpl
dec
in
cmp
mov
in
aam
lcall
cmp
dec
into
enter
pop
xor
adc
outsl
jno
pusha
cmp
idivb
push
inc
or
leave
mov
push
pushf
mov
mov
push
sbb
xchg
sbb
and
sub
adc
lret
in
rorl
fdivs
xchg
lret
xchg
outsb
shl
mov
or
insl
and
cmp
bound
insb
jne
sub
enter
out
jmp
push
cmpb
rolb
stos
inc
inc
addr16
pop
sbb
mov
or
xchg
mov
mov
jne
lcall
lods
call
xor
fcomps
add
in
test
ret
or
pop
sub
push
sbb
lds
mov
sbb
test
mov
ret
pop
xchg
xchg
repz
mov
aad
adc
push
pop
hlt
test
jnp
or
xchg
pop
mov
inc
mov
sti
in
mov
mov
xor
aam
mov
pop
dec
stos
jae
xlat
mov
test
call
jo
sub
pop
mov
push
sub
pop
adc
xchg
movsl
dec
mov
ret
xchg
fs
jbe
imul
jbe
div
nop
psubusw
or
stc
jnp
ret
aas
pop
cmc
mov
mov
mov
jl
fists
les
cmpsl
call
mov
negb
sub
xchg
add
cmpsl
add
imul
pop
les
or
adc
jns
push
jp
pop
arpl
fildl
int3
outsl
sub
mov
pop
add
aam
push
mov
outsb
mov
std
mov
push
in
aad
int
jo
inc
push
adc
test
mov
push
mov
shl
push
fsubl
push
push
push
mov
mov
lods
and
pop
out
adc
add
push
pop
mov
mov
sub
pushf
loop
clc
or
pop
mov
sbb
mov
popa
xorl
lret
cmp
popa
mov
push
sahf
cmpl
xchg
xchg
fmulp
out
std
cmp
sub
lds
hlt
or
dec
scas
xor
popf
xchg
cmp
cmpb
icebp
add
mov
sub
lds
pop
sbb
bound
dec
fldt
pop
cmc
daa
rorl
daa
mov
movsl
repnz
shlb
push
loop
push
pop
daa
and
lods
mov
inc
in
jnp
rcl
test
add
jb
lret
jns
stos
loope
jl
mov
enter
negl
xchg
call
jno
xor
lcall
daa
pop
sub
pop
incb
jle
icebp
mov
loopne
rcr
pop
addr16
jae
je
pop
lcall
dec
call
adc
add
jne
mov
fidivl
jl
adc
sub
int
push
out
aam
jb
sbb
jmp
shl
out
inc
mov
add
xchg
bound
pop
call
cmpsl
cmp
push
insl
enter
aad
daa
pop
je
les
mov
xchg
sub
rorl
dec
pop
lret
aas
dec
mov
shll
lods
decb
add
or
popf
dec
dec
dec
sbbl
aam
ljmp
lret
xor
pop
adc
xor
pop
push
or
iret
bound
push
mov
pop
ss
je
ficoml
lods
pop
repnz
arpl
xchg
push
subb
lods
xchg
pop
imul
cmc
and
push
ds
sub
movsb
popf
stc
mov
adc
lea
cmp
fimuls
shl
movsl
mov
mov
fs
or
enter
adc
cmp
std
xor
mov
int3
dec
push
cmp
sub
ret
ret
fdivrl
popf
adc
fisttpl
mov
pop
jb
and
sub
cwtl
push
repz
mov
jo
inc
fsubl
popa
faddl
add
push
jne
arpl
repnz
daa
ret
mov
jp
push
xchg
in
pushf
pushf
mov
cld
or
fwait
push
addr16
cmp
mov
dec
aad
mov
daa
pusha
iret
lea
fwait
negl
aad
push
sub
jo
xor
jmp
les
fs
sbb
dec
out
movsl
fdivp
hlt
mov
movzbl
ds
dec
dec
test
lahf
jb
jo
mov
xchg
fnsave
dec
adc
cld
jb
fwait
bound
addr16
ja
adc
fistpl
subl
jp
jno
inc
inc
div
incb
das
adc
adc
jl
mov
loopne
add
testb
jp
mov
jg
sub
mov
pop
jo
leave
les
jo
push
jnp
jnp
addr16
sub
testb
or
hlt
xchg
dec
pop
dec
mov
repnz
cmpsl
movsl
sub
xchg
push
cmp
ds
or
sub
ficoms
loope
out
clc
pop
repz
add
add
repnz
loop
inc
cs
jl
test
out
xchg
pop
imul
push
sub
lret
imul
inc
jns
mov
xor
arpl
push
adc
lods
xchg
call
mov
outsb
outsl
and
mov
push
les
out
stos
mov
call
loopne
rcrl
inc
and
lcall
inc
push
jmp
out
lods
subl
or
jg
sub
test
call
jno
adc
movl
mov
lea
jp
pop
out
aaa
daa
mov
mov
add
mov
push
fidivrl
inc
push
aaa
popf
movsb
mov
lea
cmp
mov
pusha
push
aas
mov
or
xchg
cmc
insl
shlb
arpl
dec
xchg
cs
test
arpl
lret
sbb
into
data16
pushf
imul
in
jns
shll
xor
loopne
dec
leave
pusha
out
add
pop
push
adc
add
add
cmp
fcmovb
xchg
arpl
xor
test
and
daa
mov
sti
xchg
ret
mov
jp
push
call
lret
mov
cmp
fimull
mov
cmp
adc
push
sarl
jno
jb
fsubs
cmp
imul
push
jae
jns
sub
ljmp
scas
repnz
ja
adc
lods
pop
out
fiadds
fucomip
fs
inc
fidivl
jne
repnz
jns
daa
ret
iret
ss
cmp
dec
ds
jmp
sub
xor
rorl
jecxz
jp
mov
push
nop
repz
mov
xor
andb
nop
adc
pop
incb
sub
mov
xchg
dec
bound
sub
fadd
in
sahf
cmc
mov
ja
ljmp
adc
mov
and
mov
imul
or
int3
imul
push
sub
mov
adcb
ss
lods
mov
jle
push
enter
adc
pushf
dec
sarl
add
cmpsb
in
aad
and
pop
mov
cmpsb
mov
fimuls
das
add
push
jmp
outsb
xor
xor
sbb
mov
test
std
inc
popf
sbb
and
cmc
add
loop
and
push
mov
lret
es
neg
jmp
mov
xor
fsubp
sbb
gs
cmp
fnsave
in
lret
push
hlt
imul
sahf
ficoml
andb
psrlq
add
cmp
fisubl
adc
jg
fs
lock
add
loope
out
stc
dec
push
dec
jecxz
jle
mov
fmul
jno
mov
cld
or
push
inc
pop
fwait
test
cmp
je
out
xor
push
lds
addr16
xchg
xchg
sbb
out
roll
repz
repnz
addb
or
lea
pop
imul
inc
out
dec
cmp
cmpsb
adc
pop
xchg
lea
mov
test
arpl
sahf
es
and
fisubrs
pop
bound
sbb
movsl
pop
das
or
pusha
cltd
test
inc
subl
mov
inc
pusha
dec
in
jecxz
mov
rdpmc
push
dec
fisttps
xor
xor
repz
cmp
arpl
pop
mov
pop
repz
scas
jp
pop
pop
adc
lods
ljmp
jno
cltd
sbbl
fld
out
test
gs
or
sbbl
fldenv
jne
mov
js
jmp
xor
fpatan
mov
addr16
adc
sbb
out
xchg
outsl
sub
das
inc
mov
mov
lcall
test
jne
es
and
or
stos
fdivs
cmp
xor
pop
testb
fcoms
sub
adcl
testb
daa
leave
adc
cli
jl
sub
mov
es
fldcw
les
jne
testb
xchg
sub
cmpsl
sub
into
fmulp
mov
sti
call
adc
in
pusha
cmpsl
adc
test
out
negb
and
xchg
js
or
stos
sti
out
sbb
and
popf
ss
dec
pop
jbe
cmpb
andb
push
sub
out
xchg
popa
lods
push
or
lock
call
dec
mov
dec
jbe
fildl
jg
mov
ja
cwtl
test
mov
mulb
sub
int3
push
loopne
jmp
sub
fldenv
test
jno
inc
xchg
in
ja
clc
fcompl
cmp
shrl
cmp
lds
xor
cmp
das
fisttpl
sahf
pop
or
js
fidivl
jbe
inc
out
ja
ljmp
aam
leave
push
fsubl
xchg
xor
sub
sub
push
outsl
adc
add
mov
push
inc
cli
dec
inc
jmp
es
aam
xchg
sub
rcrb
in
lret
fstpl
mov
fs
in
mov
shl
push
mov
sub
stos
ljmp
jno
ret
pop
push
jne
pop
fbstp
bound
in
add
push
mov
mov
lods
stos
push
mov
sub
inc
jo
stos
out
jge
sub
xor
inc
inc
mov
jno
out
cli
xchg
or
jno
inc
sub
push
cmpsb
jae
test
mov
sti
pop
adc
mov
pop
in
mov
inc
push
xor
mov
dec
rcl
nop
xchg
jns
movsb
pop
pop
adc
outsl
xchg
rol
pop
clc
imul
cmp
add
xchg
fwait
sahf
sub
sbb
ret
mov
loopne
fstpt
xchg
or
mov
insb
or
jbe
cmp
shl
push
push
add
jmp
cmp
outsl
cmp
ficoml
dec
loop
lods
mov
or
push
imul
int
mov
adc
hlt
aaa
insb
xor
xor
loop
sbb
movsb
adc
dec
iret
add
sahf
ret
push
sbb
xchg
xor
into
aad
aam
lock
lods
ret
aad
add
imul
mov
insl
js
mov
jecxz
add
into
and
mov
imul
cmpsl
mov
pop
add
sbb
jl
sbb
movsb
adc
imul
ja
jp
mov
dec
fwait
jns
or
mov
cmp
mov
mov
int
loopne
jnp
pop
jns
sbb
push
or
les
mov
fnsave
test
cli
fwait
sti
fisttpl
or
dec
in
adc
push
out
add
xchg
jecxz
mov
fnstsw
xor
inc
xchg
and
cli
mov
popa
cwtl
xchg
xor
add
mov
mov
cltd
and
imul
push
cmp
jo
mov
sbb
cmp
out
lock
adc
dec
test
ljmp
jnp
xchg
imul
pop
push
jecxz
dec
sbb
cmc
dec
insb
push
cltd
jns
incl
fwait
pop
shlb
sahf
xor
sub
push
sub
dec
aaa
arpl
push
and
roll
fisttpl
arpl
daa
inc
adc
test
jnp
outsb
adc
pushf
ljmp
mov
lods
inc
pop
adc
sarl
lret
bound
cld
xor
jnp
es
jb
sarb
cmpsb
lea
dec
xor
adc
jae
pushf
jae
je
push
loop
cli
shll
add
das
add
mov
int
push
pop
test
shll
scas
mov
jmp
dec
xchg
cmp
clc
add
insl
mov
insb
movsb
out
loopne
cmp
ds
test
cmp
divb
stos
lock
cmp
jno
leave
test
sbb
dec
scas
das
cli
push
lods
sbb
sub
lahf
xchg
pushf
mov
ja
jg
cmp
rclb
ss
cli
xor
imul
cmpsl
out
ret
sub
repz
cmp
sbb
lcall
aas
mov
pusha
dec
loop
scas
cmp
and
fnsave
les
iret
sti
jbe
ljmp
and
jns
fmuls
fisubrs
lcall
xchg
or
mov
add
jmp
daa
xchg
pop
cmp
clc
push
push
push
jne
push
cmpsb
jp
xor
inc
aam
imul
scas
test
mov
sub
nop
add
lea
popf
push
scas
js
pop
or
inc
jnp
inc
fdivrs
fistpl
pop
fs
mov
scas
out
outsb
lret
in
xor
lods
jl
int3
loopne
bound
mov
push
je
mov
iret
mov
or
imul
scas
imul
scas
inc
push
and
push
mov
adc
push
jmp
sub
sahf
push
out
inc
pop
imul
inc
jge
inc
scas
mov
ficompl
sbb
mov
adc
push
pop
push
mov
pop
dec
pop
movsl
pop
jne
scas
mov
pusha
xlat
cwtl
outsl
add
fs
pushl
push
sti
jg
xchg
icebp
ja
sbb
fwait
and
testb
std
into
shrl
push
jb
subl
jg
xchg
ljmp
mov
add
adc
xchg
hlt
mov
cmp
sbb
jecxz
mov
sahf
adc
or
daa
je
add
pop
mov
sbb
pop
lret
fstps
or
or
fwait
or
sarl
mov
in
rorb
jno
push
out
ja
jae
pop
push
lds
sub
lret
xor
jmp
insb
loope
imul
imul
pop
mov
jo
jge
xlat
jne
rorl
cmpsb
insb
inc
or
cwtl
aam
mov
xchg
pop
into
cld
or
push
test
shrb
mov
cs
inc
xchg
call
jbe
fsubl
sub
mov
push
in
cmp
xchg
pop
insb
rep
push
in
test
mov
imul
mov
outsb
sbb
imul
and
aaa
xor
cmp
pop
sbb
dec
inc
clc
es
lock
shrl
pop
movsl
movsbl
xchg
dec
jg
cmp
pushf
cli
mul
pop
mov
adc
xchg
jnp
pop
lret
fstpl
lods
pop
pop
and
sahf
sbb
xchg
cmp
gs
shlb
push
sub
cmp
inc
sub
jl
insl
in
push
cltd
mov
frstor
imul
repz
iret
ss
pop
jo
or
jecxz
or
shr
fistl
xchg
mov
and
or
mov
jns
outsb
aad
in
outsb
outsl
outsl
add
cmp
pop
add
subl
add
std
ds
js
clc
lea
and
lods
push
inc
cmp
test
or
xchg
jp
add
pop
sbbl
je
push
addb
push
out
popa
and
xor
mov
outsl
inc
movsl
adc
sub
mov
arpl
xchg
dec
and
lods
xor
jle
or
addr16
pusha
mov
outsb
sub
subl
xchg
dec
dec
fwait
adc
push
sbb
sub
insb
xor
xor
std
jecxz
loopne
adc
mov
lcall
sbb
les
inc
divb
call
ficomps
jle
inc
scas
or
add
jns
inc
movsb
xchg
out
xchg
loope
je
adc
and
js
mov
sub
adc
daa
push
mov
movsb
shlb
out
and
nop
mov
jno
sbb
popa
mov
insl
push
mov
sysenter
subl
fcmovbe
aad
push
fiadds
lret
mov
pop
jne
rcrl
scas
pop
shl
xorb
or
je
lcall
popf
loopne
lea
mov
xorl
sbb
cmp
imul
cmp
sub
stc
sbb
loopne
xchg
sbb
pop
out
push
xor
dec
adc
pop
test
mov
push
repz
sub
cmp
rcl
rorb
shrl
push
loope
cmpl
pop
cmp
lock
mul
xchg
add
push
jp
ja
test
rolb
fldenv
mov
inc
int3
aas
dec
add
js
xchg
or
add
mov
pop
jb
cmp
xchg
jnp
andb
shl
scas
addr16
cwtl
iret
mov
ljmp
mov
in
out
fsub
dec
and
mov
mov
mov
jo
stos
mov
dec
aaa
push
pop
inc
push
aam
in
js
xor
jp
xchg
push
mov
lds
imul
das
jg
pop
push
inc
stc
nop
ja
std
or
add
or
and
fs
add
pop
outsl
inc
xor
mov
xchg
arpl
ds
roll
jg
jb
cmc
mov
out
mov
rep
cmp
mov
sub
inc
mov
aaa
daa
xorl
dec
mov
cmp
loop
jge
cmp
mov
je
outsb
sbb
push
in
ds
xchg
stos
fwait
sub
out
ss
mov
cmp
push
rclb
sbb
cmpsb
and
adc
aas
dec
inc
cmc
xor
test
in
dec
or
pop
es
aas
dec
jle
cli
fs
xchg
mov
sbbl
sub
push
sbb
xor
sub
in
std
pop
xchg
lret
push
xchg
mov
mov
cmpsb
stc
ret
in
aaa
fwait
leave
fs
cld
or
stos
repnz
iret
mov
dec
mov
dec
cwtl
test
in
sub
scas
push
xchg
sub
out
stc
mov
jo
scas
xor
jno,pt
leave
daa
icebp
jbe
adc
fsubs
xchg
sarb
adc
pop
jae
jb
pop
mov
cmp
out
add
jmp
lds
xor
add
xlat
mov
std
or
push
imul
xor
subb
leave
mov
daa
mov
orl
aam
xchg
or
push
mov
ja
call
sub
push
jns
loope
xchg
leave
fisttpl
lcall
inc
add
sbb
mov
jb
xor
sub
mov
pop
add
sarl
or
xor
push
push
out
adc
fyl2x
add
lods
inc
pop
sbbb
lahf
mov
mov
sahf
push
pop
dec
push
movsb
inc
outsb
pushf
scas
xor
xlat
mov
adc
lods
setge
sub
stos
jne
repz
or
cmp
add
mov
xor
out
or
lahf
pop
jmp
negl
mov
stc
sub
add
stos
add
jne
sub
xchg
mov
rolb
mov
dec
push
test
fadd
xchg
lds
add
mov
push
rcrl
out
xchg
fildll
and
cmc
cmp
mov
xchg
jmp
dec
pop
in
pop
dec
popf
add
xchg
jne
cmp
inc
scas
pop
cmp
popf
mov
adc
lret
stos
jne
sub
mov
cmc
dec
loope
sbb
mov
or
andb
lahf
aam
sarb
xor
mov
out
mov
sbb
inc
xor
push
fstps
mov
test
outsl
and
outsb
push
cmpsb
imul
add
fld
pop
mov
ds
lds
push
arpl
dec
movsb
popa
lret
xor
aaa
into
cmp
sub
sub
jmp
push
lock
inc
rorb
ret
and
or
sbb
push
in
orl
or
lea
sub
dec
sbb
push
cltd
call
push
pop
out
fcoms
flds
and
in
nop
das
aam
add
jg
and
sub
xlat
in
jo
push
and
mov
sbb
adcl
lea
fdivp
fisubrs
mov
cmc
push
xchg
cmp
test
je
xor
sbb
cmp
jmp
bound
mov
xchg
adc
enter
call
push
add
iret
xor
push
sub
cltd
fbstp
jge
aam
jmp
nop
cmp
inc
jecxz
mov
cmpsb
cmp
xchg
sub
scas
xor
or
push
loope
add
add
lret
sub
pop
pop
push
xlat
movsb
mov
and
mov
xchg
xchg
roll
pop
aaa
add
outsl
add
rorb
outsl
pop
push
ljmp
arpl
daa
sahf
nop
mov
pop
xor
sbb
mov
icebp
loop
cmpsl
stc
mov
xlat
adc
scas
in
pop
jno
movsl
mov
mov
push
or
push
pushf
rol
dec
mov
pop
rorl
mov
dec
fstpl
lods
mov
repnz
pusha
xlat
add
cld
jae
mov
adc
hlt
add
push
ss
movsl
mov
rclb
and
fstpl
sahf
fcomp
hlt
out
stos
repz
clc
xchg
cmpsl
and
sahf
repz
or
push
dec
and
push
into
sub
push
shr
inc
ss
and
lods
adc
mov
fcoms
push
mov
rorl
popf
in
call
addb
pop
pushf
das
mov
outsb
iret
add
push
lods
pop
in
and
notl
cmp
arpl
arpl
pop
andl
push
das
mov
lds
push
and
test
loope
dec
adc
lea
divb
push
pushf
mov
xlat
insb
push
sub
xlat
jne
mov
sbbb
jb
sub
jmp
cmp
loope
clc
cmp
rcr
pop
push
inc
jne
mov
push
inc
inc
add
push
aam
cmp
xchg
pushl
push
add
cs
jle
loop
jl
pusha
aas
aad
scas
add
testb
jecxz
mov
imul
dec
sbb
cmc
jecxz
push
cld
xchg
cmp
jmp
cli
mov
mov
adc
addr16
popf
jmp
xchg
ss
shll
fisubrl
push
pop
repz
out
repnz
daa
je
adc
xchg
pop
imul
add
xchg
mov
loopne
push
adc
push
es
jns
inc
daa
std
pop
test
scas
lret
and
push
or
rcrl
xor
repnz
add
push
jbe
and
mov
pusha
cli
ds
xchg
dec
pop
je
loopne
mov
dec
cli
push
dec
test
aas
jecxz
dec
dec
pop
sub
mov
les
jb
mov
and
and
push
inc
test
mov
imulb
and
aam
jl
add
sbb
cmpsl
mov
xor
mov
imul
lods
pop
xchg
dec
fimull
outsl
pop
idivb
pusha
mov
cmpsb
sub
pop
cmpb
mov
sbb
rcll
lcall
add
clc
inc
sbb
xchg
fdivs
lods
fcmovnb
int3
das
das
jmp
mov
in
jae
sbb
push
mov
or
add
in
pusha
sub
adc
push
fnstenvs
mov
push
jecxz
jns
cmp
add
push
xlat
dec
data16
in
mov
movsl
xchg
push
xchg
ja
sub
adc
inc
cmp
ljmp
jg
lret
or
out
ss
fwait
subl
push
sbb
pop
es
int
pop
jb
ds
push
jo
jne
pop
repnz
gs
jl
jmp
lcall
aad
jnp
out
mov
add
repnz
add
jnp
pop
mov
les
sub
pop
push
mov
push
mov
ret
xlat
outsb
inc
test
adc
enter
mov
stos
das
cmp
lock
icebp
icebp
sti
push
inc
das
sbb
lods
push
pop
mov
xor
popa
ror
and
xchg
mov
push
arpl
inc
stos
cmc
mov
push
sbb
inc
or
and
dec
or
loop
mov
iret
sbb
ret
xor
mov
add
push
cmpsl
shll
ret
jo
jno
pop
orb
adc
and
sti
cmp
mov
jo
jge
push
enter
adc
inc
clc
inc
push
dec
call
xor
jmp
jl
outsl
jnp
test
clc
fwait
sub
lds
xor
and
out
test
push
push
stos
pop
xor
mov
lea
or
jo
das
and
mov
add
movsl
outsb
icebp
cmp
add
push
inc
mov
pop
push
lret
xorb
notl
xchg
pop
out
cmovge
in
dec
hlt
jge
sbb
mov
cmpsb
shll
push
testl
jae
aad
lahf
loop
addl
nop
pop
mov
std
mov
std
cltd
lods
shrb
pop
sub
cmp
popf
cmpsb
aad
and
lcall
jecxz
mov
jae
jo
loopne
iret
push
les
enter
jno
ja
or
mov
xor
ljmp
or
stc
ljmp
aaa
cwtl
das
xchg
mov
mov
in
and
push
scas
push
loopne
mov
sbb
cmp
cmpsl
sbb
pop
aam
aam
or
cmp
rorl
adc
pop
xor
out
lahf
push
test
movsl
jg
xor
xor
in
push
ss
push
mov
xor
inc
jl
push
imul
xor
test
mov
fidivl
sub
ds
dec
movsl
or
popf
xlat
mov
jmp
call
lock
scas
mov
loop
outsl
jns
add
mov
lds
xchg
mov
fisttpl
xchg
inc
cmpsb
in
mov
push
stc
popa
testl
lods
jle
fistpll
repz
pop
jp
or
mov
mov
xchg
pop
xchg
fs
mov
jns
sub
pop
test
lret
test
lret
pop
inc
idivb
mov
mov
mov
mov
lock
cmpsl
test
dec
xchg
insl
pop
les
clc
pop
into
adc
je
sbb
push
popa
push
sub
cmpsb
or
cmp
mov
imul
push
pop
push
test
aad
loopne
mov
mov
add
add
jl
lea
inc
xor
dec
mov
pop
je
fs
mov
sbb
sub
xor
rolb
arpl
push
mov
or
mov
push
cmpsl
sbbb
call
fdivrl
dec
or
push
rcrl
sub
sbb
repz
popf
loope
pcmpeqd
xor
out
div
and
fwait
inc
fcmove
cmp
mov
inc
mov
jo
into
gs
scas
mov
mov
cwtl
daa
or
sbb
add
test
mov
or
fisubrs
scas
inc
adc
jnp
leave
xlat
ljmp
mov
imul
aas
seto
mov
inc
cs
shrb
sbb
mov
popa
loope
push
cs
test
sub
add
fwait
push
imul
incl
lods
xor
xchg
sbb
mov
xchg
mov
test
add
ja
ja
insb
and
imul
and
xlat
ds
dec
jle
mov
mov
jl
cli
sub
xor
shll
out
in
mov
scas
sbb
or
pop
imul
outsl
scas
imul
add
int
ljmp
les
cld
in
mov
fs
and
out
ljmp
hlt
sar
sti
jge
xchg
xchg
imul
pop
imul
rcrl
or
mov
iret
popa
dec
dec
rclb
sub
cmp
arpl
and
cli
push
ret
sbb
inc
out
push
mov
pop
jbe
inc
lods
mov
sbbl
push
pop
movsb
mov
cli
push
adc
push
and
jae
addl
push
xlat
xor
sub
or
push
enter
adcb
rol
mov
sub
gs
push
stos
or
sub
test
les
bound
lods
ljmp
addr16
dec
mov
mov
sub
dec
sbb
mov
jge
lahf
sbb
shr
add
mov
cmp
rcl
pop
outsb
pop
test
orb
pop
mov
sbb
add
dec
ss
sbb
movsl
or
in
rcrb
stos
testb
mov
pop
mov
sahf
dec
mov
cld
or
push
out
inc
xlat
and
pop
pop
lret
call
cld
xlat
test
cmp
xchg
or
rol
lahf
pop
xor
in
dec
mov
ja
sub
stos
and
xchg
ss
imull
xchg
movsl
sbb
mov
mov
pushf
xchg
and
out
sbb
add
mov
lcall
xor
xor
daa
les
stc
push
push
inc
add
iret
shlb
xor
jo
fcomip
inc
mov
jle
xchg
hlt
fstp
add
pop
out
and
jns
adc
inc
xor
xchg
pushf
popa
mov
enter
int
or
pushf
mov
outsl
mov
rolb
aad
adc
add
inc
mov
sbbl
mov
xor
xchg
repnz
mov
push
lret
decb
movsl
cwtl
int
nopl
cmp
mov
mov
dec
mov
dec
mov
mov
lods
test
ds
mov
in
fldl2t
sbb
cs
xor
mov
add
xchg
jle
sbb
in
imul
or
addr16
or
push
sbb
adc
and
call
movsb
sbbb
push
test
pushf
inc
jbe
xor
dec
inc
jb
fs
call
loopne
fildll
pusha
pushf
dec
pop
lds
enter
xor
pushf
pusha
stc
lods
mov
fldcw
imul
sub
fwait
test
aaa
dec
fs
cli
pop
xchg
aaa
mov
cmpl
daa
jle
jae
stos
and
jo
shl
xchg
mov
jnp
xchg
stos
jno
int
push
push
and
jb
lret
adc
inc
xchg
enter
rcll
dec
fsubrp
jo
cmp
imul
mov
decl
mov
shr
dec
push
push
pop
aam
pusha
xor
outsl
lods
pop
aam
xchg
xchg
ja
repnz
jl
xor
lock
mov
int
insb
or
and
imul
jne
call
shrl
cmc
daa
inc
xlat
loop
not
adc
xor
jb
roll
fstp
xchg
lret
sti
add
xchg
or
outsb
ss
mov
fmul
mov
jmp
ss
xor
xor
sbb
daa
call
faddl
mov
icebp
xchg
jg
or
das
daa
and
call
hlt
pop
pop
mov
mov
and
cwtl
and
adc
sbb
jmp
mov
negl
push
mov
push
sbb
and
pop
loop
push
xchg
adc
loopne
test
data16
int3
xchg
cmp
adc
sbbb
ja
int
mov
es
popf
mov
jle
pop
mov
movsb
lods
mov
into
insb
jg
add
testb
adc
fisttps
inc
push
cmp
out
aaa
orl
je
outsl
sub
mov
leave
add
inc
jmp
jns
icebp
pop
push
fildl
pop
mov
sbb
std
jnp
ljmp
mov
cmp
sub
in
test
cs
mov
fs
xchg
jle
inc
cli
xor
cmpsb
sbb
mov
arpl
jb
loope
dec
das
xor
roll
int3
data16
add
ja
push
inc
test
fsin
test
test
mov
stos
xor
inc
jno
outsb
aad
jbe
loope
sbb
push
jg
push
mov
inc
xlat
mov
mov
fdivrs
cmpsb
mov
shlb
movsb
push
ljmp
subb
jno
dec
fists
fnstenv
mov
sbb
gs
mov
cmpsb
lcall
mov
ret
mov
sub
sahf
mov
cmpsb
inc
inc
fmul
test
sti
push
xchg
sbb
loopne
mov
pop
shl
cmp
cmp
inc
cmp
iret
push
lock
mov
add
xchg
adc
sarl
out
cmpb
cwtl
pop
fs
and
push
test
push
mov
repnz
jp
inc
fisttps
adc
ret
cmp
ds
xor
inc
push
xor
cld
vandnpd
pop
out
xchg
dec
in
repz
mov
je
pop
pop
jne
cld
test
scas
xor
scas
arpl
jb
cmp
cmpl
outsl
mov
add
and
sub
je
sub
ljmp
add
jb
out
xchg
jge
aas
cld
in
push
or
inc
idivl
loopne
xchg
adc
jge
fdiv
sbb
mov
pop
jbe
xor
adc
movsl
xchg
fdivl
sub
pop
sbb
in
insl
leave
testb
mov
fsubrs
cmp
xchg
popf
movsb
add
mov
shlb
js
mov
push
add
and
fwait
inc
test
cmpsl
rolb
xchg
mov
sub
notl
repnz
sub
mov
sbb
ret
sbb
mov
lock
mov
inc
into
ret
ret
test
out
and
sbb
clc
cwtl
rcl
cmp
jg
mov
pusha
ljmp
inc
or
repz
ds
pushf
jg
cld
mov
cmp
pop
mov
dec
rcrl
xor
rorb
xlat
es
jge
fisubrl
fsubrp
ja
mov
or
pop
xor
mov
mov
xor
aaa
sbb
add
stos
orb
add
nop
dec
sti
lret
lret
lret
mov
mov
and
loop
leave
dec
sarb
mov
mov
ret
pop
mov
dec
imul
dec
push
cmp
fmuls
out
fnstenv
xchg
sbb
ret
loopne
vpmullw
xchg
add
xchg
testb
leave
fnstcw
adc
inc
dec
xchg
stc
and
lods
mov
xchg
inc
push
cmpsb
out
aas
pop
lods
jecxz
add
and
xor
testl
mov
mov
test
or
or
icebp
paddsb
jbe
movsl
xchg
in
nop
imul
jmp
mov
jbe
jbe
xlat
pop
cltd
je
mov
xchg
cmpsb
push
in
fistps
xchg
push
mov
fistps
jbe
mov
xor
jae
inc
ljmp
xor
mov
fstps
sti
mov
in
sbb
loopne
pop
dec
dec
inc
loop
clc
test
ret
mov
sbb
dec
jno
sbb
fisubrl
or
cmc
dec
dec
xlat
cmp
lods
orl
jg
test
lret
fcmovbe
sti
arpl
shl
mov
sub
sbb
jp
jg
sbb
mov
xchg
sub
sub
inc
jg
ret
pop
icebp
out
cltd
mov
rdmsr
mov
in
inc
cmp
add
cmpsl
jno
cwtl
inc
xor
jg
adc
push
mov
mov
sahf
stc
sbbl
inc
lods
mov
loope
cmp
and
bnd
jmp
mov
adc
ret
std
mov
and
adc
or
insl
dec
push
in
es
ud2
test
mov
add
and
and
adcl
pop
sub
dec
xorl
mov
sarb
rorl
lahf
jnp
les
inc
iret
in
mov
repnz
cmp
js
lret
sub
mov
mov
push
add
loop
into
inc
mov
and
mov
mov
xchg
inc
xchg
mov
loopne
mov
addr16
lock
cmc
add
jnp
call
pop
xchg
outsl
inc
loopne
xor
pop
sbb
lcall
and
or
fwait
adc
pop
mov
dec
lods
inc
fcmovnu
imul
jl
xlat
mov
push
mov
push
xacquire
je
push
rep
stos
add
pop
sahf
repz
pop
cmp
int
jns
out
insb
inc
sub
cld
pop
popa
hlt
mov
ja
xchg
scas
mov
add
jnp
bound
or
shrl
icebp
cmp
mov
xchg
leave
pusha
pop
lahf
or
iret
adc
jecxz
sub
xchg
les
mov
add
lock
and
inc
inc
push
aaa
loopne
add
mov
mov
ljmp
repz
sbb
jnp
xor
push
popf
or
lds
sti
xchg
ror
jecxz
push
repnz
aas
iret
mov
out
or
mov
test
sbbl
outsl
mov
stos
jecxz
jnp
mov
outsb
add
pop
shlb
and
lods
stc
cmp
push
imul
lret
dec
mov
movsb
std
stos
ss
dec
jecxz
pop
rclb
add
fadd
ja
or
mov
or
stc
mov
pop
cmc
mov
shrb
fistl
sub
xchg
mov
test
mov
xor
fmulp
and
sbb
jo
lods
gs
add
inc
xlat
cli
push
pop
sti
mov
pop
testb
fistl
outsb
cmc
dec
lods
adc
sub
dec
adc
ds
dec
dec
or
and
arpl
leave
pusha
shrl
adc
loope
shrb
mov
cmp
out
lds
sub
stos
insl
and
test
stos
and
popf
test
test
shlb
leave
pusha
xchg
in
jecxz
cmc
test
jb
rcll
dec
mov
out
bndstx
mov
add
mov
lods
mov
push
je
jb
stos
xchg
mov
jne
mulb
pop
ds
pop
inc
mov
xchg
fucomi
add
or
sub
nop
cli
mov
lock
cli
pop
daa
sub
cli
pop
xchg
add
sbb
dec
push
ljmp
jecxz
enter
imul
cltd
cmpsl
push
pop
jbe
pop
cmc
int3
cmp
or
fwait
mov
mov
fimuls
faddl
repnz
cli
push
iret
aam
push
push
mov
in
push
cwtl
jns
stc
scas
mov
add
pop
mov
aam
cltd
add
mov
je
ss
fnstcw
mov
das
or
cmpsl
nop
adc
push
movsb
sbb
fistpl
push
jecxz
aaa
add
and
pop
xor
cmpsl
out
mov
stos
lret
jae
xor
ret
mov
aad
xchg
dec
in
out
cmp
aaa
adc
mov
dec
sbb
jle
push
lock
inc
dec
inc
sub
jno
or
sub
fcoms
adc
jle
mov
sbb
pop
test
sbb
clc
lret
mov
dec
pop
test
movsb
mov
imul
sbb
push
or
shrl
bound
push
and
iret
or
mov
inc
fimull
xchg
loopne
sahf
push
shrl
lods
fwait
and
xchg
insl
lcall
jo
cmpb
jne
pop
call
or
mov
add
sub
stos
pop
imul
push
and
ja
js
cmp
and
je
sarl
rcr
adc
dec
adc
sbb
inc
adc
sub
xchg
aad
call
xorb
mov
stc
nop
fistpll
dec
stos
jb
sbb
inc
lock
sbbl
jle
sbbb
cmp
shrl
xchg
mov
sbb
jmp
mov
mov
mov
adc
lret
sub
inc
inc
mov
add
insl
mov
out
push
mov
adc
mov
rcll
in
inc
sti
jl
shlb
pop
aaa
adc
pop
xor
lods
mov
fadd
movsb
jl
xchg
push
mov
add
enter
push
pop
dec
add
repz
ret
mov
cli
and
cwtl
lods
add
mov
clc
or
mov
stc
push
add
jecxz
xchg
mov
cli
jecxz
adc
in
xchg
cltd
jnp
pop
sub
fidivl
push
mov
jno
push
lret
add
std
xor
xchg
mov
imul
cmp
mov
lds
push
dec
inc
jmp
in
cmp
std
cmp
adc
test
rol
rorl
aas
add
xchg
fmul
fildl
lret
push
adc
push
inc
jae
je
push
dec
push
andl
popf
bound
lds
dec
loope
shrl
enter
jmp
cmp
push
jb
jne
sti
insb
add
repz
daa
testb
xor
ss
xchg
sbb
jmp
test
mov
je
mov
xchg
xchg
sbb
add
in
test
or
inc
lret
xchg
fiaddl
cmpsb
enter
jp
loopne
push
mov
sarl
add
adc
out
in
into
mov
fs
scas
add
popa
push
frstor
pop
lds
push
xor
jne
xor
inc
sbb
dec
into
data16
bound
xor
jb
movsb
xor
push
and
int
pop
sub
hlt
and
mov
std
cmp
push
add
lret
mov
shrb
mov
lret
mov
add
int
rolb
push
ljmp
jno
cmp
adc
shrb
xor
insl
out
sahf
pop
rcl
ret
aad
cld
mov
xchg
cmp
lcall
lret
jl
push
sbbb
pop
or
mov
fsts
in
and
test
stc
pushl
push
lock
lret
pop
inc
into
push
cmp
cwtl
in
xchg
scas
gs
xchg
xchg
mov
cmp
sbb
arpl
push
mov
jnp
sbb
mov
ret
cmp
in
mov
mov
lcall
cmp
xchg
fsubs
pop
cmp
shr
orb
mul
sub
adc
cmpsb
pop
or
aam
or
jbe
imul
stos
ds
xchg
lahf
stos
enter
loop
jmp
cld
add
data16
ss
fwait
push
out
inc
pop
in
xchg
pop
popa
es
mov
scas
pop
push
pop
sahf
and
xchg
stc
sbb
insb
push
fsubl
testb
jno
cmp
inc
flds
add
out
inc
enter
inc
inc
ficomps
stos
popa
ja
push
xor
fwait
pop
xorl
sub
dec
mov
mov
roll
inc
jmp
ret
jbe
and
rcrl
mov
rorl
xor
shrb
and
push
or
xchg
aaa
pop
mov
out
sub
in
sub
pop
dec
mov
mov
xlat
repz
push
fs
pop
lods
outsl
push
out
pop
cld
out
xchg
fs
mov
jmp
inc
lea
and
push
ljmp
rep
imul
cmpsb
icebp
dec
out
das
repnz
iret
daa
rorb
mov
mov
cmc
xchg
mov
sub
testb
add
push
xchg
aam
mov
pusha
hlt
pop
mov
sub
test
movsb
mov
xchg
iret
and
push
subb
inc
cltd
xor
sbb
and
cld
mov
insb
into
cmp
test
sub
mov
dec
pop
mov
movsl
lds
sbb
inc
cmp
popa
inc
jne
scas
and
jae
adc
cltd
mov
cld
xchg
inc
cmp
dec
clc
inc
push
adc
fwait
jne
in
mov
cmc
xchg
aas
jecxz
test
loope
movsl
cltd
gs
dec
xor
hlt
in
or
sbb
sbb
inc
pop
dec
push
jae
test
outsb
adc
dec
cmp
inc
icebp
movsl
in
xchg
aam
lea
pop
jbe
lret
daa
push
inc
scas
mov
divl
or
into
mov
dec
mov
les
pop
mov
popf
jecxz
arpl
mov
nop
mov
cltd
mov
adc
inc
pop
jbe
pop
insl
mov
in
out
jmp
and
xor
jno
and
movsb
sti
jle
sbb
popf
adc
mov
inc
mov
or
mov
pop
scas
call
orl
mov
push
jbe
lods
std
daa
aas
aaa
push
pushf
dec
pop
imul
jecxz
int3
jmp
aad
push
outsl
xchg
mov
dec
pop
lods
sub
insb
sub
int3
outsl
push
leave
pop
cmp
inc
pop
stc
in
sub
hlt
das
xor
mov
and
sub
push
out
mov
xlat
pop
fistps
cmc
icebp
mov
jl
test
aaa
inc
popf
cmp
xchg
je
pop
xor
das
shlb
jbe
out
stos
clc
fldenv
insb
pusha
lock
xor
sahf
pop
pop
outsb
cmp
adc
xor
cs
sub
jge
clc
clc
bound
fcomps
inc
cmp
mov
push
adc
scas
push
ss
loope
push
inc
xor
add
es
call
ds
outsl
jns
and
add
xlat
push
add
mov
sub
lret
das
fmul
fcmovnu
dec
or
sub
mov
fisubrs
dec
scas
stos
cmpsb
push
dec
sarb
ficoml
mov
sbb
jo
adcb
mov
daa
repz
pop
scas
push
jmp
loop
jo
mov
adc
adc
cld
ds
lahf
mov
and
insb
test
adc
mov
loope
push
out
addl
or
test
sub
test
daa
test
sub
and
dec
in
subb
test
int3
cmp
fs
lods
jmp
pop
stos
pop
in
push
jl
inc
insl
jbe
lods
jle
shlb
lods
data16
xorl
push
icebp
inc
jmp
jp
xchg
insb
push
ds
loope
lahf
stos
mov
arpl
adcl
xor
adc
and
mov
ret
scas
inc
push
lds
lcall
in
or
clc
adc
dec
cmpsb
mov
sahf
pop
mov
push
call
and
sbbl
divl
cmp
daa
outsl
pusha
mov
stos
inc
testb
jns
mov
rcrb
int
inc
add
insb
mov
add
mov
cmp
mov
pushf
push
ds
fisubl
adc
aas
adc
mov
push
mov
mov
xchg
out
pusha
xchg
test
mov
push
dec
add
mov
aad
mov
jo
pop
loop
lret
sub
test
xchg
repnz
aad
mov
cs
jbe
loop
sub
cmc
add
inc
pop
icebp
enter
mov
add
testb
daa
and
insb
xor
mov
mov
lret
sbb
into
mov
inc
loop
and
shll
movsb
jns
xchg
sbb
rolb
faddl
mov
lret
lock
mov
jl
inc
cs
sti
test
inc
or
ljmp
testb
out
test
out
out
xchg
and
sub
lahf
jb
ret
inc
mov
mov
popf
int
jl
cs
fldcw
fnstcw
mov
cli
idivl
popa
xor
and
sbb
into
or
xchg
mov
cmovno
mov
pop
icebp
cmp
je
mov
ss
in
je
arpl
enter
dec
in
lds
mov
mov
jo
sarb
ffree
lret
push
es
insb
aaa
add
push
xor
pushf
cli
pop
arpl
or
push
sub
sub
es
cmp
ret
daa
icebp
aam
js
sahf
dec
mov
repz
push
fstps
lcall
fnsave
jp
mov
jg
push
push
mov
xchg
jns
lcall
inc
fnstcw
pop
push
aam
jo
int
mov
push
repz
lret
testl
xor
in
jg
xor
lock
sub
ds
js
cmp
xchg
arpl
push
cmc
insl
mov
push
movsb
cmp
jge
xlat
mov
adc
add
inc
lret
xor
xchg
in
sub
mov
mov
pop
repnz
cwtl
repz
lret
inc
int
dec
pop
sbb
fxch
sub
dec
nop
pop
popa
push
adc
fnsave
aaa
stos
inc
imul
leave
ss
popf
push
adc
and
lret
push
dec
and
jp
push
or
sbb
cs
stos
xchg
and
sti
dec
dec
or
or
in
xchg
inc
out
nop
clc
and
sub
or
int
cmp
imul
notl
cmp
fwait
add
movsl
sbb
push
dec
lea
cmp
pusha
pushf
pop
xchg
popa
jnp
jg
ss
rorb
mov
arpl
int
pop
mov
add
and
xchg
fimuls
and
pop
pop
push
or
cmpl
mov
and
cld
xchg
sarl
fmull
or
mov
mov
adc
cmp
xlat
inc
pop
pop
arpl
lret
mov
mov
fucomip
xchg
sub
dec
sbb
lret
stos
in
inc
mov
cmp
pop
insl
shrb
sbb
pop
cmp
lcall
jne
scas
jnp
and
lahf
cmpsl
inc
mov
inc
repz
rolb
ja
cmp
dec
test
add
imul
cmp
or
mov
flds
inc
imul
in
or
repz
inc
push
add
sub
gs
or
aam
fwait
push
mov
pusha
add
rcrl
je
mov
clc
andb
or
or
outsb
aad
scas
pop
jno
fsubl
js
inc
orb
push
pop
cmp
shrl
sbbb
mov
in
push
lret
jg
pop
jl
dec
dec
cld
sbb
fnstsw
repnz
fsubs
jmp
push
test
popa
daa
mov
leave
pop
jl,pt
adc
push
popf
pop
incl
dec
or
xchg
xchg
int
div
js
cmc
stc
out
mov
movsb
mov
mov
shrl
inc
out
jecxz
testl
lods
das
shl
mov
pop
es
inc
adcb
jnp
scas
fiadds
adc
test
in
movsl
and
pop
add
mov
inc
pop
sbbl
cli
xchg
push
and
je
sbb
push
mov
xchg
hlt
out
in
cmp
pusha
inc
mov
ja
pop
hlt
cmp
xchg
hlt
ja
cmp
or
ss
dec
or
dec
shll
pushf
or
scas
inc
data16
inc
add
insl
mov
sbb
push
aam
add
pop
pop
cld
mov
xor
xchg
dec
and
or
add
cmpsl
xor
push
push
int
in
test
fwait
xchg
jo
icebp
bound
popf
inc
adc
andb
adc
push
outsb
jno
cmp
push
stos
pop
popa
xor
xor
lcall
sbb
movsb
les
pop
or
into
dec
cmp
testl
popa
mov
stos
add
xor
std
xor
cli
scas
mov
data16
cltd
shlb
scas
sbb
pop
sub
repz
sub
loop
push
pusha
int3
mull
scas
scas
sti
into
pop
ror
and
popa
inc
lcall
and
lcall
test
jg
pop
jmp
add
test
pop
std
sub
dec
fstl
ds
shll
notl
jbe
sbb
sbb
push
inc
aaa
xchg
icebp
movsl
repz
push
adc
mov
iret
sbb
sbb
lds
and
push
arpl
mov
aad
mov
cmp
sahf
cmc
pop
out
addr16
mov
pop
lret
jp
insl
cmpsl
ljmp
ljmp
pop
cmc
inc
ficoml
xor
das
lock
inc
pusha
popf
fwait
cmpsl
ja
stc
not
mov
nop
fstpl
add
push
mov
jnp
jns
mov
decl
out
jbe
in
imul
addr16
mov
cmc
mov
rcll
adc
pop
sti
ljmp
sub
jb
xchg
decl
add
cmp
imul
icebp
repnz
xchg
dec
in
lcall
pop
test
int3
arpl
cmp
gs
aas
xchg
dec
movsl
aas
sarb
cltd
xor
mov
pop
adc
pusha
inc
jl
aaa
movsl
lods
pop
inc
dec
outsb
loope
in
mov
add
sub
sub
pusha
mov
dec
fadd
cmpsb
cmp
js
mov
inc
sbb
adc
sub
push
ja
outsb
data16
out
xchg
xchg
jl
imul
push
dec
and
icebp
jno
int
mov
mov
js
pop
rcrb
ss
pushf
lock
aas
aam
loop
jmp
out
int
mov
test
ret
in
lcall
pop
js
fsubs
pop
insl
dec
inc
fwait
sub
hlt
int3
sahf
pop
and
test
lods
push
out
js
mov
or
dec
js
cld
popa
or
push
mov
mov
sub
sub
inc
fsts
pop
push
fucomi
orl
or
adc
fwait
cltd
cmpl
outsb
movsb
inc
lds
xor
xor
pop
andb
add
pop
repnz
stos
jbe
push
aaa
jmp
and
dec
gs
stos
add
jge
out
pop
pop
pop
mov
or
lods
inc
pop
sub
dec
push
sub
and
pop
shrl
clc
mov
sub
lahf
out
dec
in
faddl
gs
xchg
in
mov
pop
imul
daa
mov
pop
add
push
or
mov
loopne
shrl
inc
sahf
sub
jg
mov
push
data16
xor
mov
fnsave
pusha
pop
les
mov
scas
filds
xor
inc
les
push
scas
rorl
adc
cs
and
jo
lock
in
jecxz
hlt
mov
mov
insl
adc
mov
mov
mov
cmp
ds
xchg
addr16
pop
das
cmp
xor
clc
inc
scas
sahf
pushf
dec
cld
dec
jmp
xchg
lahf
mov
ljmp
xor
jge
hlt
fldcw
pop
jmp
mov
imul
mov
mov
clc
out
jp
cmp
jg
or
insb
mov
xor
inc
or
bound
js
in
lds
fcoml
aam
and
loopne
and
decl
cmp
adc
mov
push
adc
sbb
test
enter
inc
std
push
mov
test
pop
hlt
push
adc
xchg
add
xchg
jns
sbb
mov
adc
push
push
stos
movsb
cld
lds
dec
mov
jns
xlat
ret
add
in
mov
ficomps
push
pop
mov
xor
cltd
push
jns
test
ret
loope
mov
shrw
les
lods
cld
in
pop
push
dec
stos
jbe
sub
lret
jne
jno
mov
cmp
xor
call
adc
pop
mov
int3
or
xchg
push
sbb
pusha
stos
daa
or
mov
and
push
ss
fsubrl
ds
cmp
outsb
ret
push
mov
sub
cmpsb
sbb
pop
les
jne
pop
lock
xchg
sub
movsl
add
das
lret
xchg
dec
popa
lds
inc
push
aad
sbb
hlt
movsl
adc
into
mov
sarb
lock
popl
mov
fs
mov
sub
fs
shlb
rcrl
lds
mov
clc
ds
push
subb
dec
lahf
push
mov
pop
icebp
mov
fisttpll
mov
cmpsl
push
fwait
sub
sti
test
pop
dec
adc
push
adc
and
pop
out
stc
pop
xor
mov
sbb
mov
jg
xchg
jl
sbb
out
mov
test
movsb
nop
dec
jecxz
js
jo
movsl
fwait
xor
iret
cmpsl
jle
xlat
incl
mov
jae
insb
push
test
mov
jecxz
aad
subl
push
in
ret
jecxz
repnz
repz
jp
test
cmp
add
std
das
xchg
out
or
fisubrl
test
xlat
mov
fst
pop
pushf
mov
jl
jb
scas
les
lea
adc
jo
pop
popf
cmpsl
jne
out
stos
enter
lret
mov
push
push
sbb
data16
lcall
jp
out
js
call
or
xor
cld
sub
iret
mov
fadds
jns
aas
stos
loopne
jl
loopne
mov
addr16
ret
mov
pusha
test
lret
cld
jmp
push
call
addr16
ror
fs
dec
push
cmc
inc
cmpsl
imul
jae
add
mov
inc
addr16
pop
jmp
test
push
mov
es
divb
mov
cwtl
xor
mov
mov
adc
bound
ds
jno
ret
cmpsb
notl
mov
loop
lret
lcall
jmp
test
test
sub
cmp
xchg
fdivp
or
jecxz
and
dec
insl
int3
popf
mov
push
jmp
xlat
shll
pushl
jp
test
push
adc
test
xchg
js
les
int3
scas
popa
or
jmp
mov
xchg
ret
xlat
jecxz
mov
adc
ja
mov
loopne
mov
jnp
fsubrl
jne
cli
cmpsb
in
adc
jecxz
popa
icebp
mov
fidivs
or
mov
std
push
adc
jns
iret
mov
xchg
jl
repz
and
pop
gs
inc
sub
aad
fstpt
mov
or
add
stos
test
jno
cltd
es
or
jmp
add
jge
lcall
dec
les
pop
jnp
in
xor
ljmp
cmp
test
mov
mov
pop
sub
xor
dec
imull
shl
dec
insb
mov
arpl
jg
xor
push
mov
add
repnz
imul
push
push
xorl
xchg
xchg
test
mov
dec
jmp
icebp
adc
ss
addr16
push
push
pop
pop
pop
mov
imul
stos
mov
mov
loopne
leave
rcll
push
mov
nop
test
test
mov
mov
fidivl
adc
movsl
clc
xchg
imul
mov
mov
rcl
jo
stc
testb
int
cltd
std
or
and
shll
mov
mov
lret
xchg
adc
mov
mov
push
add
mov
ficoms
imul
mov
xchg
fbstp
xor
adc
ljmp
mov
cld
popf
stos
sbb
data16
pop
jle
movsb
sub
sbb
sbb
les
mov
cltd
jecxz
testl
cwtl
dec
into
fnsave
pop
ja
add
aad
pop
das
mov
add
xor
pop
popa
xor
jo
addl
pop
mov
pop
xor
inc
ret
pop
imul
repnz
xlat
pop
cs
xchg
xchg
insb
jo
lea
push
insl
call
mov
frstpm(287
orl
mov
aaa
iret
fwait
xchg
adc
out
jge
mov
mov
mov
fistpl
adc
xor
ret
je
hlt
pushf
cli
cmp
xor
push
xchg
adc
push
or
pop
inc
dec
dec
js
add
dec
sbb
outsl
add
cld
test
pushf
mov
sub
adc
mov
xor
sbb
rclb
cmpl
sbb
pop
enter
sarb
and
leave
push
enter
out
icebp
fcoml
lock
scas
jns
xor
rolb
js
xor
stos
sub
testl
out
lret
mov
xchg
mov
push
pop
cmc
addl
mov
scas
insb
shl
sarb
loop
dec
sbbb
movsb
fucomp
es
lods
add
ret
xchg
mov
loopne
mov
jp
insl
add
and
xor
jbe
add
push
into
pop
mov
adc
inc
cmp
mov
imul
jo
sub
inc
out
out
xchg
add
dec
dec
out
pop
mov
insw
loopne
pop
arpl
push
and
cmp
ds
ss
and
pop
pop
outsl
fsts
pop
sbb
divl
jbe
jmp
or
xor
push
sub
or
frstor
hlt
enter
in
lcall
popa
mov
sbb
xor
mov
test
jmp
add
out
inc
loopne
scas
and
dec
mov
push
xor
cmp
mov
cli
fbstp
or
mov
and
cmpsl
mov
mov
enter
push
sahf
inc
dec
in
xchg
cmp
add
fisubs
adc
mov
dec
mov
nop
mov
fsubrs
mov
ret
jnp
daa
pop
in
push
insb
or
in
or
mov
cmpsl
ficoms
pop
jne
and
stos
addr16
nop
or
xchg
nop
sbb
mov
cmc
insl
xchg
mov
sbb
hlt
sbb
pop
add
in
loope
in
xchg
not
mov
mov
push
mov
iret
fwait
xchg
jmp
outsl
in
and
fcmovbe
mov
aas
daa
cwtl
mov
push
test
mov
lods
add
sbb
in
xchg
ss
mov
push
call
ret
mov
push
aam
or
cmp
dec
pop
adc
dec
in
repz
mov
add
mov
adcl
xchg
add
mov
out
xchg
mov
les
mov
cmp
icebp
add
aad
sahf
cmp
out
ret
pop
rcrb
xchg
sub
sub
pusha
inc
mov
in
test
aad
lret
scas
loopne
mov
and
inc
dec
in
std
mov
inc
insb
insb
add
jae
jmp
jecxz
scas
insb
add
pop
inc
adc
sub
mov
insl
xor
xlat
shrb
or
xchg
idivb
jl
pop
fdivl
xorb
lods
xchg
pop
out
ficoms
push
cmp
repnz
and
lods
push
mov
loopne
lea
xor
push
xchg
pop
adc
cmp
fcomip
pop
lods
jp
pop
xor
push
pop
or
dec
jp
cmp
gs
mov
mov
divl
test
add
mov
in
mov
rcl
scas
xchg
loop
fucom
scas
enter
jno
mov
push
shll
push
adc
jmp
hlt
or
xor
sahf
mov
rcl
sti
push
push
push
lds
mov
mov
inc
cmp
lahf
jno
es
movsb
mov
je
mov
mov
sbb
cmp
mov
daa
sbb
mov
rclb
fdivs
nop
cli
sub
lcall
dec
pop
stos
jae
rorl
mov
mov
ss
push
fdivp
data16
push
sti
pop
or
mov
mov
mov
jge
xchg
lcall
je
testl
popa
notl
sub
ret
mulb
mov
cmpsl
mov
sbb
dec
cmp
loop
sbb
shl
daa
xchg
fidivl
inc
cmp
and
mov
xchg
push
lds
pop
out
and
or
arpl
dec
les
push
cmp
fildl
or
mov
jmp
inc
pop
inc
cmpsb
lock
cld
femms
dec
cld
xchg
jg
hlt
mov
push
movsl
push
push
adc
mov
cmpsl
je
in
add
mov
pop
subl
sub
mov
sub
mov
fisttpll
fsubrs
mov
mov
imul
jl
sbb
xchg
pop
or
sub
jbe
or
icebp
push
mov
aaa
lcall
sbb
mov
jg
adc
adc
movsl
insl
add
inc
inc
insb
out
adcl
inc
enter
fs
push
mov
push
xchg
push
hlt
lds
lds
mov
cmpsl
in
sbb
les
cmc
mov
bound
imul
sub
ret
mov
in
jae
pop
out
sbb
mov
out
add
push
mov
roll
fldl
arpl
fistl
xchg
mov
pop
and
jmp
iret
jmp
arpl
fcompl
mov
mov
dec
fadd
pop
lret
push
shr
loop
sbb
jae
loopne
sbb
sub
fucomp
orl
hlt
jbe
imul
mov
pop
jmp
or
lret
mov
push
push
mov
leave
cli
or
jmp
mov
xor
ljmp
mov
call
inc
lods
lea
nop
scas
jmp
aad
daa
stc
test
sub
xor
lods
xor
and
push
jnp
or
sarb
stc
stos
sbb
popa
pop
adc
scas
aad
add
aad
xor
and
dec
fldl
in
inc
cmp
mov
rcrb
mov
ja
leave
xor
movsb
dec
push
sbb
lcall
pop
leave
pop
movsl
lret
addr16
out
pusha
adc
pop
imul
repnz
stos
inc
inc
pop
xor
test
push
sub
ja
jne
stos
daa
ret
adc
jae
pushf
cmp
jae
jno
sub
cli
adc
and
mov
shrl
push
sbb
xchg
aas
idivb
rcl
scas
ret
adc
outsb
sub
inc
jecxz
mov
cmpsl
js
sbb
add
outsb
test
sahf
mul
into
mov
je
data16
dec
mov
xlat
cmp
or
jae
adc
jb
fdivrl
scas
popf
stc
adc
iret
pushf
xor
cld
xor
sbb
dec
cmp
mov
fs
loop
xchg
dec
xchg
pop
mov
nop
and
cmp
push
nop
pop
pop
jmp
mov
inc
loope
imulb
std
lret
out
int3
hlt
mov
pop
jmp
mov
insl
or
xchg
orl
mov
push
mov
ret
xor
pop
sub
stc
jnp
sub
inc
push
xor
out
pop
cmp
mov
lods
pushf
dec
pop
in
arpl
or
pop
cmp
rcl
fldl
dec
out
jb
lods
shrl
popf
mov
push
ss
cli
pop
dec
xchg
push
jmp
mov
add
cmpsl
mov
fcmovne
imull
cmp
fbstp
push
pop
out
faddp
mov
into
jge
daa
xor
xlat
push
popa
mov
xchg
daa
push
call
popf
std
outsb
loopne
mov
dec
dec
sbb
in
or
jecxz,pn
pusha
test
js
jo
or
dec
add
fwait
sbbl
xor
jo
ds
push
inc
imul
mov
icebp
lds
sub
cpuid
rcr
and
mov
ja
dec
mov
sub
notb
jns
inc
and
jmp
sti
int
pop
imul
sbbb
xor
sub
fidivs
xchg
push
pop
adc
mov
xchg
mov
inc
movd
xorl
das
xchg
adc
sbb
das
test
test
mov
cmp
sbb
cwtl
in
bound
inc
cld
sub
repnz
call
add
lea
test
cwtl
and
dec
or
pop
movl
cmpsb
mov
ret
ljmp
jp
push
jmp
mov
pop
fidivrs
pop
fmul
ret
std
adc
cmp
mov
xor
lea
mov
lea
fiadds
jp
mov
ret
pop
sub
xorl
pop
xchg
pop
xor
mov
xchg
add
aad
mov
and
sub
stos
outsb
aam
jp
push
loope
push
mov
ret
mov
dec
xchg
sub
push
in
or
jae
dec
xor
call
sti
rcrb
es
mov
test
inc
jle
ds
lahf
mov
daa
clc
dec
mov
fldenv
jle
std
andb
faddl
add
daa
bound
outsl
cwtl
mov
addl
adc
lock
cmc
inc
or
pop
daa
outsl
adc
xchg
push
dec
popa
inc
or
test
fcomps
cmpsb
ja
cmp
fmull
test
and
mov
test
in
rcrl
mov
xchg
in
pop
xchg
jb
pop
bound
inc
dec
ret
sbb
mov
push
mov
cmpsb
out
mov
shll
sbbl
mov
pop
insb
cli
mov
and
rcl
je
cmp
push
push
in
cli
clc
push
sub
cmp
clc
inc
clc
in
sbb
xchg
aas
out
fimuls
inc
sbb
xchg
cmc
pop
dec
int
adc
pop
push
cmp
test
rorl
and
jns
stos
test
lcall
inc
pop
mov
push
pop
into
mov
insb
add
xor
mov
out
sub
jb
icebp
xchg
and
mov
dec
stos
jle
or
mov
push
scas
adc
sub
or
das
and
leave
lea
into
aad
cltd
rcrl
repz
fnstsw
adc
or
scas
cmp
sub
adc
in
sub
ds
ljmp
ljmp
xchg
or
sahf
fists
sub
out
stos
popf
fstpl
fimull
xchg
dec
mov
pop
sahf
pop
xor
int
sbb
dec
xchg
outsb
jo
ret
arpl
mov
inc
icebp
dec
scas
out
adc
adc
lds
mov
xor
cmpsl
es
in
xor
filds
lods
sub
mov
rcl
lods
dec
add
popf
mov
xchg
push
imul
pop
idivb
notb
out
sbbb
out
outsb
cwtl
mov
insb
in
jbe
lods
cmp
jae
fwait
dec
inc
xor
jmp
out
pop
fmul
insb
lods
fidivrs
popa
mov
dec
out
movsb
cmp
dec
ret
dec
mov
jno
sbb
cmp
mov
fsubrl
dec
fwait
mov
adc
sahf
jno
mov
das
xor
lods
cmp
pop
lock
ja
loopne
fcomip
flds
dec
dec
xor
ljmp
adc
enter
adc
outsb
icebp
pushl
fs
pop
enter
inc
fdivp
dec
add
jl
test
lcall
insb
sahf
shlb
insb
xor
adc
adc
das
subb
imul
aaa
into
insb
mov
aam
inc
mov
mov
out
cmc
push
in
std
popa
out
rolb
adc
iret
das
bound
mov
adc
outsl
push
mov
xchg
or
push
stos
hlt
or
outsb
cmp
jp
or
lock
mov
aad
mov
ret
mov
lds
jge
cwtl
mov
insb
out
bound
inc
shrl
xchg
jmp
cli
ds
jno
pop
xchg
outsl
lcall
sbb
pop
lods
and
lret
pop
xchg
dec
add
jge
lcall
sub
orb
lock
std
daa
loope
pop
push
loop
je
or
adc
fists
jg
push
js
lret
fidivs
ret
jecxz
insl
int3
cld
xchg
call
or
and
mov
cmp
and
addr16
aaa
jmp
cmp
shr
adcb
inc
sti
jns
or
out
leave
mov
pop
aad
push
outsb
ret
shr
hlt
shl
shrb
and
jg
movsl
ret
psraw
inc
or
adc
or
jno
cmp
shlb
int
sbb
inc
mov
mov
insl
outsb
les
add
sbb
sbbl
pusha
pop
cmpsb
ds
imull
out
sbb
add
pop
adc
clc
stc
popf
cmp
sbb
fists
cmp
shll
jl
xchg
or
mov
faddl
mov
pop
fwait
inc
lret
or
pop
neg
test
and
stos
fsts
fsubrs
ds
xchg
popl
fadds
outsl
inc
cmp
into
inc
xchg
ficoms
push
stos
jg
mov
mov
jno,pt
aas
xor
movsl
xlat
popa
xchg
lret
jns
pop
jae
shrl
sub
sbb
adcl
test
cmpsl
mov
mov
push
aam
pop
je
dec
lcall
jnp
push
loop
dec
outsb
or
or
xchg
insl
insb
add
rorb
inc
test
dec
aas
xchg
cmp
fmull
mov
pop
jl
ss
call
in
cltd
je
in
and
pop
sbb
daa
adc
cli
mov
mov
in
mov
gs
sbb
ficoml
pop
icebp
popf
xchg
in
inc
loopne
js
jecxz
jmp
adc
popf
dec
gs
dec
outsb
or
out
js
out
xor
ds
mov
cmp
cmp
adcb
out
mov
adc
sub
mov
stc
pop
fdivr
add
imul
dec
jl
jle
adcb
push
dec
imul
push
mov
bnd
or
rol
ljmp
js
dec
mov
jge
test
in
jge
adc
push
push
hlt
xor
es
push
call
enter
jo
mov
icebp
add
add
loope
aad
push
in
xchg
hlt
push
xchg
shr
addr16
adc
add
and
push
lret
hlt
and
jbe
jbe
idivl
push
add
mov
jo
or
pop
negl
sbb
dec
xor
fildll
push
pop
imul
push
adc
mov
cli
test
arpl
lock
call
pmaddwd
in
test
jae
mov
adc
lcall
sbb
imul
mov
mov
lahf
in
push
jp
jmp
in
gs
add
adc
into
gs
xor
jle
xor
sarb
or
fistpll
rorb
add
sub
scas
xchg
mov
add
fsubrp
popa
pushf
call
les
pop
sub
test
int3
or
xor
sub
adcl
xor
sbb
inc
xor
push
mov
xor
xor
push
jl
mov
pop
adc
test
lods
xchg
mov
xor
sub
frstor
sub
jg
jge
inc
mov
push
pop
repnz
or
mov
adc
pop
arpl
sub
add
ljmp
pop
cmp
mov
pop
pushf
sub
cmp
inc
xlat
jmp
cmp
out
sub
pusha
out
and
adc
ret
sbb
jmp
or
push
adc
jbe
aas
stos
mov
add
lock
xor
mov
aam
daa
jne
lret
pop
ja
dec
enter
adc
arpl
jne
test
adc
cmp
mov
cmpsb
inc
hlt
not
mov
or
clc
jns
shl
sti
ficoml
ds
sub
sbb
lea
mov
and
jb
xchg
xchg
ja
push
xor
sarl
dec
pop
je
iret
fxch
lea
dec
in
jb
rcl
aaa
xchg
xchg
cmpsl
stos
xlat
call
in
inc
cmp
push
xor
sti
pop
and
fmuls
movsl
dec
pop
xlat
pop
mov
andb
sbb
add
sub
fstl
popf
pop
dec
push
pop
inc
test
shll
inc
inc
in
mov
jge
popa
fsts
lea
sahf
rorb
mov
sbb
insb
inc
and
pop
fstps
jns
adc
cmp
fistps
js
xchg
mov
xchg
dec
pop
and
and
and
add
push
es
sub
das
pop
sbb
icebp
and
int
mov
loope
stos
aam
xchg
xor
adc
int3
pop
je
fldenv
adc
stos
pop
movb
jb
dec
rcl
cli
psubusb
lea
mov
movsb
scas
aad
daa
cmp
les
xchg
das
mov
out
add
loope
jo
pop
mov
loopne
xchg
testl
push
jne
mov
fdivrl
int3
loope
adcb
insb
pushf
fdivs
push
inc
mov
hlt
arpl
addr16
repz
into
and
mov
loope
adcl
push
movsb
inc
popa
push
mov
lods
jecxz
repz
and
imul
out
lahf
add
aaa
std
xchg
data16
and
loopne
aas
and
arpl
movsl
leave
sbb
push
daa
outsl
xchg
add
rorl
pop
nop
pop
cmp
lret
adc
fldt
adc
fadds
cmpsl
loope,pt
inc
aad
cmp
hlt
gs
adc
inc
pop
dec
rep
sub
jae
inc
cmp
mov
out
xchg
jg
hlt
jge
or
lret
pop
repnz
aas
jns
shrl
lahf
xchg
hlt
push
in
sbb
rorb
push
fdiv
movsl
mov
clc
xchg
dec
lods
inc
sahf
fwait
cmpsl
fnstcw
inc
loope
aaa
sbb
jmp
ss
mov
jmp
sub
mov
inc
push
xor
lock
push
leave
mov
ret
stos
fs
je
adc
xchg
cmpb
pusha
mov
xchg
push
into
pop
loopne
adc
or
insb
adc
inc
stos
add
xor
fcoms
aam
cmp
fs
bound
js
jp
push
cmpsb
aad
mov
cltd
in
pop
lcall
jge
enter
push
in
ficoms
add
xchg
aam
iret
add
lret
xchg
scas
addr16
rcrl
mov
jbe
mov
dec
add
aam
fcmovnbe
and
fcmovnbe
inc
jg
push
insl
sahf
popa
mov
cmpsb
jge
ret
lahf
adc
adc
ja
outsb
push
cld
pop
mov
mov
pop
das
mov
aaa
mov
scas
idivl
dec
aaa
mov
add
arpl
pop
pop
data16
mov
mov
jg
push
fwait
sbb
popf
mov
pop
inc
push
aam
push
or
cmpb
scas
imul
pslld
mov
fs
pop
pop
push
in
and
gs
cli
xchg
nop
add
addr16
sbb
pusha
out
cli
loope
add
cli
push
inc
mov
push
out
add
imull
cmp
jbe
jecxz
scas
push
arpl
sbb
ret
xchg
jo
mov
call
or
lock
inc
dec
add
mov
loope
mov
push
cmp
and
clc
rorb
cmpsl
cli
and
leave
cmp
sub
fwait
out
lahf
add
cmpsb
sbb
cmpsl
int3
jp
divl
lahf
adc
daa
mov
jg
jbe
inc
shr
xor
repnz
das
jns
aam
adc
add
mov
daa
andl
in
mov
sbb
iret
inc
aaa
dec
addr16
sub
test
pop
pop
jns
dec
daa
gs
push
js
cmp
jp
add
push
test
lcall
and
or
xchg
xchg
popl
imul
dec
out
sub
out
add
stos
rolb
shll
mov
mov
orb
adc
mov
or
lods
ljmp
pushf
mov
inc
cmp
imul
cwtl
sarb
mov
xlat
iret
pop
pop
fwait
sub
lret
lret
insl
movsb
ss
jno
scas
push
push
inc
or
mov
test
sti
pop
pushfw
movsb
out
arpl
push
outsb
testl
sbb
lret
adc
es
adc
xchg
sub
dec
imulb
mov
push
inc
push
fldt
arpl
mov
and
test
lcall
mov
dec
iret
call
xor
lret
add
loop
cmp
orb
adc
popl
jbe
int3
leave
adc
sti
mov
mov
dec
mov
stc
je
pop
aaa
mov
call
aaa
iret
jecxz
pop
movsb
push
popf
nop
mov
call
sbb
mov
mov
cmp
loopne
pop
inc
sahf
dec
cmpsb
add
mov
jno
mov
jns
sub
push
in
or
lcall
sbb
push
or
repz
ds
cmp
int
add
sub
mov
sti
xor
outsl
rorb
xchg
mov
movsl
mov
sub
cmpsl
out
out
pop
add
movsl
jge
xor
outsb
xor
outsl
out
mov
fistl
mov
and
pusha
mov
enter
call
ss
sub
and
xchg
add
sbb
jbe
test
pop
push
jns
dec
ret
mov
hlt
jnp
aam
loop
mov
movsb
sbb
repnz
movsl
out
insb
push
das
leave
cmp
mov
loopne
mov
sub
imul
mov
lods
lret
dec
add
sub
cmc
add
inc
add
fnsave
pushf
mov
adc
enter
and
xchg
sub
jb
lods
push
stos
repz
lcall
clc
xor
lahf
push
movsl
fwait
addr16
lret
aad
cld
jb
cwtl
pop
stc
into
sub
pop
or
arpl
jge,pn
xlat
mov
lahf
mov
in
rcl
sbb
wbinvd
in
pop
xlat
imul
jle
or
dec
es
dec
jne
adc
xchg
jmp
xchg
cwtl
mov
push
data16
lcall
cmp
and
inc
push
nop
add
cmpsl
xchg
and
icebp
movsl
sbb
mov
pop
cwtl
ret
shrl
rcrb
xchg
push
cs
xchg
cmp
add
rcrl
mov
xor
pushf
add
xor
in
mov
test
sub
mov
xlat
sbb
loope
xor
push
adc
out
in
popf
or
cmp
dec
scas
adc
jns
subb
call
jno
xor
aad
sarl
mov
push
out
xchg
mov
mov
mov
mov
pop
ja
add
icebp
pop
and
scas
pop
inc
mov
cmp
aam
imul
jne
insl
adcb
cmp
fadds
mov
shl
in
fwait
hlt
pop
lock
cmp
or
cmp
lods
scas
inc
sbb
mov
or
nop
es
dec
xor
icebp
pop
dec
scas
or
cs
aas
add
jmp
jb
jmp
adc
sbb
aam
fisubs
dec
push
pop
push
add
shrl
push
and
dec
mov
or
loopne
push
jmp
out
imul
repnz
pop
inc
dec
inc
ja
outsb
push
cmpsb
je
jae
std
imul
sbb
cmpsb
jne
lahf
aam
test
rcll
mov
filds
outsb
sub
mov
shrb
pusha
adc
cmp
insb
jns
xchg
push
or
push
xor
outsl
sub
jecxz
test
add
inc
mov
clc
shlb
push
inc
push
dec
sarb
inc
sbb
out
fsubs
mov
sub
aas
loop
push
mov
repz
add
mov
les
in
xor
cmp
inc
in
shrl
scas
insb
mov
xor
and
mov
int
dec
rorb
lret
fistl
flds
jb
adc
sub
stos
sahf
cltd
in
xor
mov
push
sbb
repnz
sub
enter
mov
shlb
adc
ss
ficoml
or
shrb
dec
jns
out
icebp
mov
mov
fisttpll
data16
cmpsl
cmc
test
adcb
sahf
ss
out
add
movsb
lods
dec
jle
xchg
test
mov
out
sti
xor
add
in
ffreep
sbb
out
cs
lds
cmovge
lods
divl
mov
fstps
jne
push
mov
stos
dec
call
add
jb
sub
sub
out
loope
out
add
shlb
test
lea
divb
outsb
roll
hlt
es
mov
cs
jl
inc
sub
push
push
das
lea
stc
sahf
xchg
out
xchg
decb
cmp
icebp
and
in
addl
mov
xchg
sub
int3
pop
mov
mov
push
sbb
push
inc
adc
mov
in
xchg
sahf
and
push
or
jecxz
or
jae
imulb
and
sti
cmpsb
ss
or
mov
lea
sbb
push
in
mov
fucomp
xchg
lods
or
lods
stos
mov
jne
jb
xchg
add
lods
pop
add
out
sub
in
test
jnp
mov
test
in
push
mov
xchg
shrb
lahf
mov
out
ljmp
mov
jmp
mul
xor
mov
clc
scas
sbbl
inc
negl
mov
add
ret
xorb
data16
pop
test
add
mov
prefetcht0
sbb
mov
jb
push
push
or
fistl
frstpm(287
sub
fisttpll
inc
mov
mov
cmp
jp
aas
or
cwtl
das
adc
xchg
pop
enter
jnp
jge
inc
jle
jle
jg
lcall
sahf
aam
dec
cmp
adc
inc
cmpsl
mov
dec
jecxz
pop
or
imul
fisubs
push
repz
jae
jecxz
enter
hlt
shrl
push
jge
popa
sahf
mov
mov
mov
adc
test
mov
shrb
sub
xor
sbb
imulb
inc
mov
dec
std
inc
fcmovnbe
mov
mov
aaa
imul
mov
mov
cmp
fdivl
lods
and
push
add
mov
ret
jle
sarl
popf
scas
ds
pop
inc
xor
ljmp
xchg
and
cmp
out
dec
sbb
mov
xchg
add
mov
cmp
aaa
inc
and
insl
sahf
lods
sahf
cli
iret
gs
scas
mov
adc
jns
and
xor
xor
push
lcall
mov
stc
mov
cwtl
stos
shlb
repnz
and
push
jmp
sub
pop
sbb
sahf
dec
test
mov
mov
data16
sub
sub
pop
xor
push
jbe
lock
js
addr16
add
leave
data16
adc
test
mov
xlat
outsl
rorb
bnd
mov
sub
mov
sbb
jl
scas
mov
sub
pop
cmp
iret
sbb
sarb
subl
call
cmp
add
pushf
scas
dec
sbb
mov
xchg
lahf
push
or
leave
imul
xor
or
pop
lock
aad
scas
sbb
xor
jmp
or
cmp
imul
lds
leave
adc
mov
cmc
loope
mov
mov
fildl
xchg
or
dec
test
icebp
sub
pop
pop
jge
js
cltd
mov
ret
movsl
arpl
outsb
or
mov
push
in
in
aam
adc
ss
xchg
dec
fisttpll
sahf
pop
icebp
int3
mov
push
sub
adc
mov
push
mov
pop
mov
mov
ficoms
push
mov
in
adcb
test
mov
inc
sub
les
adc
ficompl
jnp
add
cmpsb
cmpsb
test
lret
push
jne
xor
out
sbb
push
jo
in
movsb
inc
es
mov
sbb
pop
outsl
lcall
in
insb
sub
mov
jmp
xchg
push
call
movsl
repz
je
mov
inc
pop
cmp
dec
mov
fmuls
int
outsl
jo
dec
mov
mov
xchg
fs
out
inc
loopne
jns
outsb
add
sub
lea
or
insl
sub
xchg
stos
fldl
jnp
xor
cltd
jl
inc
nop
jnp
pop
xchg
data16
inc
in
push
inc
push
mov
push
sbb
cli
or
cmp
rcr
dec
loopne
jp
fildl
jnp
mov
sbb
sbb
rol
repnz
insb
int
rcrb
and
xchg
push
cmp
xor
pop
mov
or
or
sahf
repnz
lock
inc
js
jmp
inc
fsubrs
push
push
int
fstpl
je
add
fwait
xchg
mov
mov
mov
fldt
mov
filds
stc
nop
xor
scas
pop
gs
daa
jae
fadd
std
xchg
lods
jmp
jbe
repz
addl
icebp
aas
xchg
xchg
out
orl
push
add
test
xor
dec
cmp
aas
repz
dec
aad
mov
sub
cmpsl
pop
ret
enter
dec
mov
rcrb
sub
stos
dec
or
fwait
inc
les
mov
pop
icebp
xor
push
js
arpl
xchg
push
push
in
test
sub
cmpsl
je
sub
dec
xchg
pushfw
js
inc
stos
mov
add
les
icebp
lret
stos
sbbb
or
mov
mov
cwtl
push
out
rcrl
jb
mov
ljmp
or
shlb
imul
in
jns
pop
push
testl
and
push
jge
stos
daa
sub
lds
jne
sub
xlat
cmp
cmpb
movswl
push
push
popf
out
cmp
or
pop
push
popf
mov
shrl
subl
jg
decl
cmpsb
das
sub
or
inc
sub
jnp
test
pop
fidivrl
add
adc
loopne
out
push
xor
jne
sti
mov
sub
sbbb
mov
jl
stos
mov
stos
int3
ret
mov
xor
and
push
sbb
or
pop
xchg
mov
mov
cmp
nop
dec
ss
pop
dec
pop
sahf
pusha
mov
cltd
dec
pop
es
mov
in
rcrb
or
xchg
mov
mov
jb
nop
out
inc
push
std
cmc
sti
fwait
cmp
mov
stos
push
inc
xor
mov
xchg
scas
sub
jle
xor
pop
gs
aas
xlat
in
mov
aaa
push
xlat
outsb
les
cmc
adc
cmc
mov
push
pminsw
cmpsl
aas
mov
add
pop
cmp
stos
cs
jge
lea
popf
test
cld
test
inc
es
sub
aaa
inc
int
js
xchg
lock
stos
leave
leave
lahf
daa
cmp
mov
or
adc
daa
inc
iret
adcl
hlt
out
pop
hlt
popa
jne
xchg
adc
cs
faddl
dec
movsb
leave
cmpsb
int
inc
push
sub
mov
xor
dec
loopne
push
addr16
cmpsb
mov
into
outsb
sbb
cmp
lcall
or
aam
push
xor
std
pop
hlt
rorb
jnp
in
pop
sahf
and
bound
pop
hlt
jae
xchg
scas
mov
rolb
mov
pop
icebp
dec
pusha
xchg
add
and
inc
xchg
popa
xchg
dec
pop
in
jl
out
mov
in
lcall
aam
dec
js
test
jge
orb
or
dec
mov
mov
or
inc
or
pop
cmp
jbe
mov
jno
fs
jno
fcompl
aas
mov
sub
pop
ja
jg
lcall
pop
ss
in
sbb
cmp
add
jl
lock
popf
in
xor
push
aas
aaa
adc
repnz
inc
movsl
push
xchg
xor
or
sub
ss
or
jp
push
lods
xlat
mov
or
ret
ss
jns
xchg
stos
pusha
mov
mov
push
stos
adc
clc
or
or
cmp
xor
xchg
or
adc
jecxz
mov
lret
jnp
cmp
add
push
jno
shl
jle
mov
and
xor
imul
cmpsb
pop
xor
cli
cli
incl
test
aam
cmp
ja
sbb
cltd
test
and
sti
repnz
mov
ljmp
xchg
leave
cmpl
inc
fisubrs
adc
mov
mov
dec
test
pop
xor
xor
xor
pop
bound
stc
filds
aad
jge
add
mov
pushf
lods
pop
addb
div
sbb
nop
xor
pop
mov
in
testb
dec
cmp
mov
xchg
add
das
xchg
cs
add
int3
cmp
mov
imul
jbe
nop
cltd
data16
sub
mull
cs
imul
dec
aas
sub
push
sbbb
xchg
stos
je
sub
jecxz
psrlw
js
das
add
adc
pusha
mov
pop
dec
cltd
xor
cmpsl
pop
xchg
jecxz
repnz
enter
bound
fcoml
fst
dec
dec
pop
dec
repz
sahf
subb
pop
push
repnz
stos
jne
cmp
dec
mov
sub
or
xor
pop
aas
shrl
add
push
lods
call
into
stos
push
sbb
je
mov
add
shl
mov
mov
js
push
stos
jmp
outsb
sub
cmp
lea
in
inc
and
cli
or
inc
int
sub
dec
loope
dec
arpl
mov
nop
push
mov
push
dec
enter
and
std
std
test
popf
scas
jle
test
sub
mov
lds
jb
cmpsl
xchg
sub
cmp
daa
push
out
lret
pushf
arpl
mov
and
xchg
sbb
pop
cmp
sbb
or
fldcw
out
dec
sub
mov
sub
mov
movsl
jnp
lea
pop
mov
scas
xchg
pop
inc
iret
xchg
adc
mov
push
or
fs
xchg
sahf
xor
subb
cmp
pop
pop
das
lods
sti
dec
or
inc
inc
dec
out
movsb
sbbb
loope
cmp
loop
fsubr
shll
xchg
mov
cltd
xor
mov
aad
inc
push
sti
testb
rcrl
inc
jle
scas
bound
mov
push
add
cmp
sub
insb
pop
ret
fadds
cld
insb
sahf
jae
lods
and
dec
jbe
test
loop
sub
pushf
in
mov
daa
lds
out
push
jecxz
inc
movsl
jle
sti
push
pop
clc
add
fwait
and
stos
fldenv
idiv
popl
into
insb
jle
xchg
es
scas
or
insb
or
dec
xchg
andl
push
push
out
inc
jp
cmpsb
jnp
leave
lret
add
fmuls
cmpsl
jl
push
pusha
mov
outsb
movl
clc
es
insb
add
movsl
fwait
pushf
jne
adc
cmp
cld
push
push
mov
sbb
fdivl
jns
mov
xchg
mov
sbb
daa
fisubrl
xor
jge
dec
imul
call
add
outsl
std
jnp
imul
repz
arpl
cld
scas
aam
and
inc
sbbl
stos
orb
xor
push
or
insl
xchg
mov
rcrl
dec
mov
push
push
sub
insb
popa
dec
movsb
pushf
cwtl
mov
sbb
mov
fisttpll
cwtl
push
loope
aaa
pop
das
sbb
xchg
fs
jmp
in
fildl
or
or
push
popf
xchg
outsl
notl
in
pop
insb
add
nop
pop
data16
addr16
inc
mov
push
outsl
test
jmp
dec
mov
jg
pop
ret
stos
iret
mov
insl
cmp
pop
stos
ds
enter
cmpsl
test
jmp
and
cs
ret
adc
mov
mov
out
and
mov
test
pop
mov
sahf
jae
jg
outsl
subl
dec
and
in
daa
stc
iret
mov
pop
mov
add
push
jecxz
xor
filds
push
or
mov
inc
fwait
jae
inc
xchg
cmc
or
clc
pop
loop
repz
mov
rcll
pop
mov
rcll
repnz
or
lock
or
xchg
push
pop
aam
sub
repz
cmc
mov
ja
push
adc
outsl
int3
push
cs
jno
call
mov
mov
dec
jecxz
or
cld
adc
add
xchg
push
fsubrl
popa
sub
adc
add
inc
adc
ret
out
jle
mov
sbb
scas
fucomp
sub
add
loopne
dec
mov
loopne,pt
call
imul
xchg
testb
pop
popf
ja
in
aaa
cmp
inc
ret
and
lcall
jne
xchg
push
mov
add
movsb
shrl
mov
cli
inc
sti
cmpsl
adc
rolb
fstl
jno
xor
sbb
cmp
lea
movsl
cwtl
pop
adc
mov
loop
fwait
jbe
add
adc
add
xor
jle
cwtl
fwait
scas
test
arpl
sub
test
xchg
mov
mov
insl
xchg
xor
mov
xor
movl
std
dec
fnstenv
enter
add
pop
push
or
jle
jo
sbb
jo
sub
mov
arpl
fcompl
sub
in
pop
sti
scas
mov
test
xchg
mov
and
ja
sub
push
jmp
push
repz
pop
sbb
and
fsubrp
sub
add
fs
movsl
or
pop
dec
jne
jp
popl
adc
jmp
adc
sbb
das
jbe
into
fcompp
xchg
dec
in
push
loop
leave
je
jle
mull
xorb
enter
bound
pop
pop
sbb
in
or
lcall
testl
rolb
icebp
stos
inc
jecxz
pushf
and
and
pusha
loope
xchg
sarb
xor
mov
xor
mov
in
xchg
out
xchg
or
xor
xchg
or
push
jmp
sbb
pop
jmp
das
test
add
jns
push
popf
ficomps
popf
lods
sub
mov
add
testb
movsb
pop
outsl
pop
xorl
or
mov
mov
aad
mov
movsb
ret
inc
popa
imul
shrb
mov
nop
inc
and
push
out
shl
pop
repnz
sbb
push
sbb
adc
addr16
je
sbb
out
repnz
lret
adc
mov
fucomp
xchg
jns
xlat
add
notb
xchg
shll
mov
lahf
lret
inc
push
std
adc
inc
test
push
cs
mov
and
loope
notl
imul
xlat
orl
sub
lahf
inc
fisubrs
sysenter
es
xchg
ja
mov
xor
outsb
push
add
push
clc
shlb
popf
sbb
pop
dec
mov
in
xorl
jge
pop
push
push
sub
icebp
int
adc
adc
add
xchg
mov
dec
repnz
out
ds
mov
jmp
lods
mov
roll
push
mov
ret
dec
push
into
lcall
imulb
sub
mov
sti
popf
xor
mov
jge
sub
xchg
sub
repz
int
out
push
jnp
inc
sbb
pusha
leave
popa
inc
lods
jbe
jo
in
scas
aam
inc
jmp
jno
pop
ss
jbe
lret
stc
test
dec
lds
shl
repz
shl
mov
cmp
adc
movsb
xchg
and
enter
jnp
inc
fstps
cmp
sahf
sbb
add
aaa
dec
mov
pushf
test
jecxz
cmp
repz
fwait
repnz
loope
pusha
das
ret
adc
and
add
cltd
call
nop
mov
aam
push
or
jp
enter
vmwrite
pop
xchg
mov
jge
mov
pusha
into
push
add
and
addb
sbb
aam
pop
movsl
xor
test
repnz
xchg
push
cmc
notb
mov
addr16
lcall
inc
ja
loopne
or
inc
arpl
dec
lret
iret
sbb
clc
adc
pop
inc
sbb
push
push
sbb
adc
stc
add
in
xor
jp
sbb
mov
lea
dec
sbb
in
sbb
jae,pt
or
decb
cmp
movsl
ja
pop
sub
movsl
loope
idivl
or
hlt
hlt
mov
pop
cli
test
gs
fwait
test
xchg
cmpl
push
xchg
repnz
leave
xor
in
dec
imul
or
pop
adc
add
push
mov
fcomp
in
sub
cmp
shlb
sub
aas
jbe
xchg
fs
add
scas
sub
pusha
adc
inc
scas
out
lods
lds
addb
mov
vcvtss2si
shll
mov
call
push
int3
je
push
push
jae
push
inc
or
jp
mov
ffreep
jmp
dec
jmp
scas
sar
clc
jnp
xchg
jle
bound
rcrl
push
aas
dec
repnz
clc
fs
rclb
add
jle
sbbl
mov
inc
inc
clc
repz
int
adc
pop
bound
insb
xchg
andl
in
push
dec
data16
rcr
push
cmp
fstpt
fisubs
sub
lcall
and
ja
push
lea
pop
ss
loope
fisubs
jmp
jo
stc
cmpsb
jne
ljmp
enter
insb
bound
push
sub
or
into
pop
pop
call
or
repnz
cmp
movsl
add
mov
mov
add
shlb
mov
pop
adc
mov
pusha
mov
loopw
mov
inc
fbstp
sub
and
ss
push
in
pusha
xor
shlb
lret
insb
int3
adc
xchg
gs
cli
and
inc
repnz
xchg
rcrb
cmp
mov
mov
jb
xchg
std
pop
ficompl
xor
insl
jb
outsl
mov
enter
lcall
pop
icebp
xchg
push
in
pusha
dec
js,pt
std
out
ficoml
cmpsb
cmp
add
stc
lea
ss
jg
xor
push
push
jmp
jmp
jb
subb
add
mov
jmp
xor
push
imul
fwait
xor
aaa
mov
mov
push
out
arpl
sbb
shlb
mov
arpl
mov
lods
jg
movsl
icebp
xchg
mov
xorl
and
mov
xor
testl
sub
dec
rcrl
pop
lea
cmpsb
imul
mov
jp
lahf
mov
add
loope
pop
cmp
jp
fisubrl
sbb
add
fistpl
inc
push
cmpsl
and
imul
mov
xor
es
aam
movsb
popl
and
sub
test
out
mov
mov
jle
mov
rcll
or
cmp
jecxz
imul
hlt
icebp
mov
aaa
flds
cld
js
cmp
jmp
orb
pop
or
jl
pushf
dec
idivl
xor
insl
std
inc
push
xor
lahf
or
and
cltd
and
movsb
sub
in
inc
outsl
scas
lods
fidivs
jmp
lea
out
sub
ret
xchg
jne
inc
call
mov
pop
std
mov
pop
inc
cwtl
outsl
test
in
aam
testb
pop
xchg
sub
test
int3
push
ljmp
xlat
mov
jmp
push
outsb
repz
repz
decb
jno
mov
push
jb
sbbl
adc
lcall
add
movsl
push
lock
out
ret
sub
push
shr
xchg
dec
dec
mov
mov
in
and
subb
pop
lods
inc
cmp
adc
mov
outsl
addl
out
inc
lcall
shll
into
mov
pop
sub
bound
orb
jg
sub
xor
xchg
arpl
mov
push
rolb
movsl
cmp
mov
rep
xchg
ret
inc
movsl
jle
sub
inc
sbb
jno
ret
xchg
stos
xchg
cld
push
stos
test
movsl
inc
cli
int
ds
ret
rcll
sti
inc
xor
aam
lea
lds
inc
cltd
mov
call
push
sti
lcall
or
into
and
xchg
or
lcall
or
arpl
inc
fcompl
cmc
call
xor
sbb
loopne
push
pop
and
sar
mov
cwtl
shlb
jg
test
xchg
daa
out
cld
xchg
ljmp
cmp
ss
ljmp
cmp
pop
mov
pop
add
es
push
inc
dec
pop
jns
xlat
sbb
clc
insl
maxps
fsub
cmpsl
movsb
fdivs
test
dec
and
test
lods
inc
vmwrite
cld
ret
jno
in
push
pop
insl
cmp
xchg
or
pop
lahf
or
or
inc
mov
cmpsb
or
or
insb
xor
fsubl
lock
std
test
push
data16
push
jno
xor
rcrb
jecxz
sbb
dec
mov
call
iret
popa
mov
sub
addr16
xor
and
xchg
lret
hlt
das
add
pop
ffreep
sub
je
sub
sub
dec
cmp
aaa
cli
cmp
dec
gs
push
sbb
pop
lcall
mov
mov
push
fs
mov
push
test
and
sbb
pop
jg
mov
mov
xor
push
out
out
into
adc
aaa
outsb
lret
aad
adc
and
add
dec
push
cs
insl
dec
sub
aaa
aad
xchg
pop
cmpl
mov
and
fcmovu
shrl
stos
inc
icebp
mov
loopne
xor
mov
cmp
repnz
push
pop
jmp
lret
jle
std
jmp
rcrl
inc
dec
add
xchg
mov
flds
push
or
sub
pop
push
lcall
push
enter
faddl
ss
inc
filds
aaa
push
xchg
sub
sahf
in
add
inc
inc
push
and
mov
pop
pop
ja
or
fidivrs
std
push
cmpsl
cwtl
push
lock
loop
jg
lret
aas
loop
mov
xchg
and
sti
sub
mov
scas
pop
mulb
fwait
adc
push
pusha
xchg
sbb
call
or
adc
loope
incl
das
cmp
xor
sbb
or
rcrl
mov
inc
dec
sub
jg
mov
icebp
mov
sub
jl
sub
pop
pop
jge
mov
ljmp
ds
push
sub
push
mov
and
push
xchg
sub
ret
sahf
sub
sub
daa
inc
sbbb
or
outsl
push
pusha
pop
adc
add
test
pop
xlat
sub
lds
xor
cmp
pushf
stos
mov
shlb
dec
adcl
dec
xchg
insl
lea
sub
movsl
js
enter
push
in
sti
sub
xor
mov
jecxz
fwait
mov
xlat
nop
inc
aad
ds
mov
inc
std
aam
decb
jmp
or
inc
sbb
cmp
xchg
xchg
rcl
imul
inc
int
repz
add
insb
push
ja
ss
cld
das
leave
vpunpckhbw
add
mov
lock
inc
adc
mov
fnstenv
inc
loope
jae
shll
cwtl
nop
jnp
pop
dec
or
and
pop
iret
cwtl
or
jmp
mov
fsubr
xor
dec
pop
mov
fld
pop
cmp
in
sahf
shl
js
push
hlt
pushl
cmpb
popf
inc
cmp
popf
jo
imul
repnz
pop
xor
push
add
sub
xchg
lock
andl
mov
sbb
int3
scas
add
int3
mov
aas
dec
inc
call
cwtl
adc
mov
dec
and
shlb
mulb
repz
mov
cwtl
pop
aam
ja
call
imulb
rorb
add
in
fbld
shl
cwtl
xor
add
dec
ss
je
int
lods
pusha
fwait
out
mov
xlat
aas
sub
dec
mov
lds
leave
data16
stc
xor
xchg
test
or
rcrb
pop
nop
jae
jo
mov
call
hlt
je
addr16
mov
adc
out
push
xor
xchg
mov
jae
lea
or
dec
mov
andb
lock
les
iret
out
xor
mov
push
notl
dec
fsub
mov
mov
and
jl
psllq
dec
jmp
cmp
mov
xchg
in
in
add
popf
jge
and
sti
imul
mov
js
loope
add
shlb
cmp
movsl
xchg
loopne
out
sahf
push
orb
fildl
sub
int
stc
fcom
pop
popf
and
or
lods
aad
mov
ret
ret
in
test
pshufw
bound
cltd
xor
push
jecxz
lret
loope
leave
cltd
push
loopne
lods
adc
fiaddl
stos
fs
push
jb
or
gs
shld
jg
dec
out
aas
test
xor
popa
add
push
loope
xchg
pop
ja
rep
xchg
ds
cmp
jb
dec
xchg
mov
xchg
stos
or
out
xchg
dec
pop
scas
jb
xchg
ret
cmpb
or
xor
fwait
jb
mov
dec
call
or
ret
cmp
lcall
stos
fwait
or
add
add
rorb
xchg
mov
add
or
xchg
movsl
insl
out
bound
dec
and
fdivr
and
popa
les
mov
push
and
mov
sub
movsl
repnz
and
mov
imul
lods
jo
repz
int
sbb
inc
jp
dec
arpl
hlt
cmp
in
fnstcw
sbb
enter
movsl
arpl
stos
icebp
add
pop
arpl
jno
dec
cmpsb
cmp
incl
les
add
fsubr
inc
push
cmpsl
std
jbe
jmp
cld
jo
repz
cwtl
aad
orl
xor
addl
push
out
xor
cld
insl
cs
sbb
pop
insl
lds
fwait
lods
add
stc
or
iret
shr
hlt
fldcw
cwtl
cmpsb
out
popf
in
sbb
int
and
push
lret
jmp
or
push
mov
xchg
sub
addl
les
pop
sahf
push
dec
pop
xor
je
out
loope
idivb
push
mov
mov
icebp
mov
push
mov
jge
jmp
ljmp
insb
push
add
in
push
adc
aad
inc
cltd
mov
cmpsl
loop
in
imul
pop
pop
jb
inc
mov
sub
pusha
pusha
xor
pop
ret
orb
in
add
xchg
je
in
mov
iret
clc
clc
aaa
push
cli
inc
or
xchg
sbb
in
xor
fistps
orb
inc
test
cmpsl
add
out
outsl
inc
loopne
and
inc
add
xor
mov
lds
sub
lods
and
xor
aas
sub
adc
push
add
add
push
dec
int
lods
inc
test
mov
xchg
leave
add
arpl
cmpsl
ret
fs
negl
bound
jbe
xor
lret
and
add
push
les
or
stc
jecxz
pop
adc
in
mov
jl
and
dec
add
roll
and
add
mov
and
or
inc
clc
shrb
test
jge
out
pop
mov
loopne
cli
sub
push
cmp
mov
jne
mov
push
adc
push
popf
mov
out
fistps
icebp
aas
add
or
andb
add
push
mov
in
push
jnp
xchg
subb
int3
push
shrl
pop
hlt
fcmovne
mov
clc
int
or
mov
cmp
jge
imul
mov
sbb
in
sahf
jnp
adc
scas
pop
inc
test
icebp
cmpsl
stos
in
push
sub
pusha
pushf
jbe
mov
mov
imul
pop
cmp
rcrl
std
mov
mov
int
cmp
jmp
scas
loope
mov
shl
mov
xor
mov
push
push
add
pop
jne
jbe
outsl
mov
inc
pop
lods
lock
out
cwtl
pop
sub
mov
xchg
dec
jno
mov
pop
adc
int
fidivs
dec
dec
inc
cli
cli
call
mov
ret
jecxz
inc
adc
cs
insl
aad
sbb
out
ss
adc
lods
cmp
xor
xchg
adc
push
sub
or
dec
jp
pop
mov
scas
jl
cltd
dec
cmp
xor
pop
xchg
sub
add
lock
loopne
test
sbb
pop
push
lods
pop
push
or
sub
push
sub
sub
mov
and
lds
pusha
movsb
hlt
adc
gs
xchg
jecxz
and
jp
cltd
cld
and
rcll
sbb
pop
jae
xor
xor
jle
cwtl
add
mov
outsl
icebp
cmp
jg
pop
mov
subl
mov
inc
push
adc
in
push
call
xlat
repz
les
adc
jecxz
sbb
push
addr16
arpl
cmp
lods
aam
sahf
rolb
out
rcrl
and
rolb
and
xlat
push
push
xor
mov
cmp
ja
call
sahf
mov
test
jns
insb
jp
jnp
push
in
idivl
jmp
stc
nop
je
bnd
lods
inc
frstor
insb
sub
int3
add
lcall
xor
inc
ss
stc
jnp
std
lea
jbe
insl
les
and
lret
out
loopne
add
cmp
mov
mulb
lahf
ss
incb
mov
dec
inc
jae
andl
cmp
mov
add
movsl
lea
jmp
and
dec
test
rclb
mov
push
dec
in
jae
jecxz
jp
sbb
jno
hlt
leave
ret
hlt
ljmp
or
vcvtpd2psy
movsb
loop
jg
mov
call
lods
mov
stos
mov
push
cmc
notb
adc
leave
mov
pop
or
xchg
lea
rolb
push
lret
andb
jg
sbb
in
lods
cs
add
cmpl
jl
jecxz
dec
sbb
mov
int3
pop
xor
imul
and
sar
and
or
mov
xchg
mov
lahf
push
ja
dec
insl
stc
adc
loopne
fxch
insb
mov
add
stos
test
out
or
into
or
jg
repnz
xchg
dec
or
out
in
ja
push
adc
int3
imul
sub
xchg
inc
inc
adc
push
cwtl
pop
jle
jb
jecxz
cmp
push
mov
sub
cmp
dec
xchg
xor
mov
xor
gs
std
aad
jo
jae
lea
shrl
decb
mov
mov
xchg
push
in
cld
shl
into
ficoms
test
mov
ss
sahf
push
xchg
inc
push
cmpsl
inc
adc
or
pusha
pop
jg
sbb
leave
cmc
sub
push
sub
xor
fcomip
sub
mov
jmp
jg
addr16
mov
mov
shll
es
out
sbb
std
jae
scas
sbb
adc
pushf
inc
adc
je
sbb
and
mov
stc
sub
sub
jp
or
or
in
dec
lcall
jbe
sahf
mov
in
aad
dec
loop
jno
mov
jecxz
and
cmp
int3
dec
add
aam
sbb
push
sub
mov
add
js
test
jbe
int3
movsl
loop
cs
les
test
out
arpl
sbb
dec
xchg
repz
and
cmp
in
inc
push
sbb
mov
lods
inc
adc
insb
test
or
repnz
jg
scas
dec
fcmovnu
push
stc
rcrl
mov
es
sbb
repnz
push
or
inc
pop
sub
nop
xchg
xorb
mov
xor
das
adc
push
dec
jbe
pop
mov
ret
insl
cs
dec
mov
xor
pop
cltd
adc
mov
xchg
roll
daa
add
xor
or
mov
imul
mov
dec
push
scas
sub
dec
jecxz
or
dec
aam
dec
mov
fldt
inc
cli
sahf
push
fcmovbe
add
test
xor
xchg
jne
loop
sarb
or
pop
pushf
mov
inc
sub
sbb
mov
cld
icebp
xor
mov
push
jno
in
inc
in
mov
or
and
pop
add
xchg
and
in
icebp
xchg
aas
aad
pop
mov
adc
inc
hlt
jae
out
push
loop
fiadds
in
stos
lods
inc
sahf
std
push
inc
jmp
outsb
push
mov
hlt
mov
sbb
pop
dec
jne
inc
and
xchg
test
dec
faddp
mov
repz
lret
mov
jle
push
je
movsb
mov
fstpt
adcl
or
jo
stos
xchg
xor
or
aaa
xor
popf
stos
mov
sahf
cmpsb
dec
sbb
xchg
xor
cmpsl
ds
bound
cmp
adc
cmp
leave
mov
push
xor
aas
stos
pop
imul
lods
jmp
lret
or
mov
mov
fcmovbe
pop
fcoms
pushf
xor
mov
data16
aaa
dec
mov
mov
xchg
lret
jae
mov
pop
aam
xor
shll
dec
lahf
sar
cmp
dec
ds
sarl
outsb
inc
jmp
xor
rclb
rol
push
sbbb
jecxz
mov
adc
push
int
pop
mov
pop
loopne
sub
hlt
jbe
ret
cmpsl
jns
mov
lea
stos
test
sub
outsb
fsts
sub
dec
jne
mov
cmpsb
lret
xor
mov
adc
nop
xor
je
int
test
icebp
sti
addb
mov
xorl
sahf
in
repz
aas
sbb
xchg
popa
inc
sbb
or
std
add
sarb
es
push
mov
ja
sbb
mov
popa
clc
dec
loope
popa
xlat
out
shl
in
sbb
xlat
push
mov
jl
fdivl
pop
stos
testl
das
jle
insl
orb
mov
mov
fldcw
outsl
or
pop
dec
pop
or
jp
js
xchg
sbb
cwtl
lods
jae
mov
xchg
xchg
imul
mov
fists
aas
add
pop
icebp
add
sbb
js
sbb
leave
scas
into
jle
xor
and
roll
mov
and
sub
pop
cmp
jo
daa
mov
int
xor
dec
leave
sub
sbbl
mov
notl
mov
or
xlat
sbb
mov
xchg
pop
xchg
add
out
dec
loope
fnstcw
outsb
jl
cli
xchg
daa
or
or
rcrl
or
fsub
cmpsb
in
jae
or
subb
fcmovu
jo
inc
into
gs
idivl
adc
cmc
pop
push
jb
popf
fdivl
idivl
adc
push
popf
sub
and
jb
ret
loope
sbb
cmp
sbb
and
out
stos
sub
movl
ret
jns
mov
or
xchg
lock
xchg
pop
sub
lret
cmp
sti
rorb
iret
xchg
pop
sti
sbb
ds
add
jb,pt
sub
adc
xchg
pop
jno
jecxz
add
int
nop
out
xchg
out
lret
out
sub
xor
fstpt
inc
loope
inc
ljmp
sbb
mov
pop
lods
xchg
mov
dec
in
sbb
leave
or
mov
int
jmp
mov
movsb
leave
pushf
mov
mov
es
xchg
jnp
shlb
and
movsl
flds
add
aas
scas
adc
loop
rcrb
pusha
mov
data16
push
pop
xor
iret
outsb
jl
decb
push
dec
mov
repz
aam
inc
clc
xor
addr16
mov
xchg
sbb
xor
dec
mov
aas
jno
xlat
mov
adcb
mov
rcrb
pop
or
xchg
xor
push
and
fs
sub
jno
popa
pop
xchg
pop
loop
mov
int
mov
call
mov
cmpsl
add
arpl
jno
outsb
in
jo
pushf
push
movsl
testb
test
imul
repnz
pushf
adc
lods
mov
sti
mov
xchg
xchg
adc
push
in
sahf
lods
pop
test
cmc
adc
leave
pop
pop
loope
insb
fbld
test
jno
dec
shl
inc
fdiv
shll
subb
jb
xor
add
idivb
dec
mov
pop
ljmp
mov
add
mov
clc
xlat
outsb
mov
mov
leave
cli
and
aam
std
leave
xchg
mov
dec
test
cmp
sbb
mov
lock
xor
inc
sub
inc
lret
jl
jbe
inc
shrb
das
adc
mov
pop
mov
lcall
ret
jb
jo
ds
jae
stos
insl
insb
js
or
mov
cmpsl
sbb
outsl
xor
dec
bound
adcb
jle
lock
sahf
sahf
or
pop
add
js
and
xchg
mov
shrb
xchg
nop
push
lret
xor
mov
lods
shlb
out
push
mov
xchg
data16
pop
sub
in
dec
mov
pop
add
and
pop
call
push
pop
out
je
es
daa
jbe
jg
mov
imul
dec
enter
pop
loop
xchg
jae
inc
sub
push
xorb
xchg
nop
mov
sub
mov
andl
scas
mov
in
lods
xlat
pop
fmulp
loop
jne
enter
imul
mov
in
pop
or
inc
mov
not
cli
cmp
cmp
xchg
insb
int3
push
or
push
lcall
jecxz
sbb
les
insb
sbb
xchg
mov
xor
cld
hlt
inc
frstor
insb
xlat
mov
mov
mov
sti
sub
adc
and
add
out
xchg
jnp
cmp
imul
push
fucomi
xchg
outsl
daa
mov
fnstcw
bound
mov
cld
inc
pop
movsb
mov
data16
add
inc
pop
repz
xor
mov
jne
clc
xchg
je
std
adc
jbe
in
add
popa
dec
dec
push
adc
sub
dec
or
and
lcall
push
shl
mov
lock
loop
lret
repz
rorb
inc
in
mov
pop
add
lock
push
add
xchg
push
jecxz
divb
std
add
leave
repz
stos
jbe
push
jecxz
outsb
push
push
mov
fisubrl
les
fwait
test
sub
add
pushf
pop
dec
in
xchg
pop
cmpsb
repnz
imul
lcall
mov
or
test
and
xor
inc
icebp
fisubrs
xor
xchg
xchg
push
test
out
repnz
out
outsl
cmp
fsubrs
push
jp
aas
jo
pop
sbb
roll
loope
jbe
sbb
ja
inc
std
pop
inc
fcomp
leave
sub
mov
pop
das
cwtl
je
inc
dec
mov
cs
or
std
mov
dec
mov
ficoms
dec
jmp
dec
and
nop
lds
rcrl
iret
repnz
xchg
lahf
out
sbb
hlt
dec
cmp
ss
flds
testb
inc
push
leave
jge
aad
lret
movsl
leave
test
mov
pop
addl
sub
movsl
mov
fsts
cwtl
jecxz
out
out
stc
test
xchg
sub
cltd
inc
decb
ljmp
sarb
jl
dec
add
push
xor
or
xchg
mov
cmp
push
ja
out
loopne
lock
repnz
pop
out
or
sbb
add
jno
push
lcall
and
nopl
push
jo
daa
das
and
and
aam
jnp
test
int3
pushf
xchg
sub
or
sub
ja
dec
xor
lret
fnstsw
rcl
cmc
cmp
scas
push
mov
mov
xor
add
repnz
scas
xchg
xchg
das
mov
out
pop
mov
les
mov
adc
repnz
arpl
pop
mov
lea
imul
push
jmp
mov
fs
and
jl
pop
jns
dec
cwtl
lcall
loopne
test
roll
mov
fdivl
jge
lret
imul
dec
cmp
push
in
repnz
jae
int3
or
out
fisttpl
popa
orl
dec
test
addr16
xchg
and
xchg
sub
jnp
mov
lds
push
shl
dec
push
jmp
xor
das
outsl
mov
mov
jnp
in
xchg
loop
dec
clc
pop
adc
xchg
lods
xchg
add
cmp
test
mov
cwtl
dec
rol
fs
fwait
lea
pop
mov
hlt
sbb
ss
nop
sbb
lret
and
adc
je
push
sbb
mov
mov
lea
sti
mov
lcall
pop
andb
test
iret
inc
mov
insb
add
call
rorl
call
fisubrs
push
pop
jno
fptan
mov
movsl
pop
test
jg
insl
jecxz
movzbl
dec
and
rcrb
test
out
sub
pop
sub
adc
cmp
xchg
pop
xor
arpl
arpl
mov
push
popa
aas
mov
call
gs
lret
cld
or
int3
cmp
out
into
mov
stc
repz
mov
add
inc
cmp
arpl
andb
insb
or
jb
clc
mov
rol
push
mov
rcrl
int3
popa
push
mov
add
in
and
jo
xchg
dec
add
adc
sbb
push
or
lahf
push
sbb
imul
pop
frstor
adc
pop
adc
inc
clc
dec
cmp
mov
pop
js
aas
mov
push
cmpsl
xchg
cmc
int3
and
notl
xchg
aas
xor
or
fstl
test
adc
rorl
faddl
imul
lahf
ss
inc
test
pop
mov
ret
jecxz
or
cld
mov
jo
pop
cmc
mov
or
push
cltd
sti
jl
mov
loope
mov
insb
sbb
es
ret
insb
sub
pop
mov
in
sbb
pop
lock
xchg
sbb
pop
sub
shll
mov
into
das
leave
pop
xor
arpl
lods
xchg
mov
mov
mov
jmp
cmpsb
in
push
pop
icebp
subb
push
arpl
cmp
jns
or
insl
int3
xchg
imul
lods
or
or
test
xchg
js
addr16
in
clc
test
scas
push
or
cmpsl
mov
adc
lods
lcall
or
xchg
sub
mov
out
dec
xchg
scas
inc
mov
cmp
mov
adc
fcoml
adc
ja
lcall
int
cwtl
fists
das
add
inc
ljmp
cmp
stos
adc
test
push
mov
cltd
imul
aam
pop
jmp
enter
out
lds
cmp
pop
add
rcrl
sub
and
jnp
jl
pop
cmp
pop
dec
mov
es
das
mov
call
xor
ljmp
inc
or
es
sti
stos
jmp
jle
sub
pop
sbb
cli
fwait
repnz
outsb
mov
fisubrl
jl
cmp
cmp
cmp
xlat
into
fs
jp
clc
movsb
xchg
sub
ret
aad
and
lahf
adcl
lret
cmp
xor
mov
push
ja
fisttpll
sbb
aas
stos
daa
cmp
popa
mov
mov
clc
test
dec
pop
cmp
mov
cmp
sahf
ljmp
out
xor
inc
cli
sub
rcrl
mov
xchg
xor
mov
mov
scas
inc
int
jg
cli
addr16
sarl
scas
shl
fistps
out
lock
pop
sub
mov
jg
mov
mov
ror
jo
adc
pop
mov
ss
or
inc
push
stc
andb
xchg
jns
orb
idiv
loope
or
mov
sbb
xchg
in
push
and
xchg
push
mov
sbb
into
pop
mov
pop
scas
pop
mov
test
adc
inc
push
psrlq
pop
das
add
fwait
dec
pop
int
mov
inc
and
jmp
push
push
fisubrl
jge
pop
mov
push
mov
int
sub
repnz
sub
lods
add
xor
div
inc
arpl
mov
xchg
int3
cld
push
scas
inc
test
iret
das
sub
int
lock
lods
stos
cmp
stos
mov
or
scas
pop
repz
mov
mov
mov
inc
arpl
aas
shll
mov
sbb
inc
sbb
sub
hlt
xchg
subl
shr
lock
xorl
push
mov
push
mov
mov
and
rcr
js
aaa
lods
push
pop
nopl
bound
mov
sbb
pop
sub
pop
inc
or
jmp
out
cmc
xchg
pushf
std
ss
das
mov
scas
dec
dec
push
insb
jle
sub
lcall
sub
xor
testl
and
ss
arpl
mov
js
sub
subl
cmc
int3
cltd
daa
insl
sub
sbb
sub
mov
fwait
jmp
sub
dec
add
mov
arpl
ffree
cwtl
sti
adcb
pop
jecxz
mov
cmp
mov
sbb
sub
dec
stos
sbb
fiadds
lret
jo
mov
fisttps
cmp
mov
mov
xor
adc
or
mov
mov
adc
test
jae
aaa
lock
add
push
or
jl
in
sbb
fisttpl
push
fildll
fstpl
and
mov
sbb
fadds
outsl
push
addb
test
mov
jle
push
fmul
add
xchg
xchg
shr
inc
shlb
mov
pop
fdivrs
andb
mov
add
jns
scas
stos
es
inc
in
pop
imul
das
test
test
dec
mov
mov
dec
xchg
and
adc
xchg
push
call
xchg
outsl
push
das
pop
xchg
arpl
adc
mov
inc
in
in
cmp
mov
xor
jne
add
sub
xor
mov
mov
sbbl
insl
xor
ret
or
xchg
mov
sub
bnd
rep
test
adc
stos
je
xchg
xchg
add
xchg
push
mov
pop
jmp
pop
inc
shll
inc
dec
popf
fnstcw
or
xlat
icebp
lret
lds
pop
insb
push
mov
fwait
into
xchg
jo
jge
imul
jp
scas
mov
aam
fnstenv
add
jne
test
mov
test
mov
cmp
adc
popa
lcall
ret
test
inc
sbb
pop
and
lods
and
in
jne
inc
mov
sarl
push
or
fdivr
dec
fucomip
out
lret
jo
dec
loope
subl
test
leave
dec
jo
cmc
sub
arpl
jg
lret
pop
inc
push
enter
mov
adc
inc
repz
movsb
mov
pop
mov
xor
sti
ja
jno
icebp
or
lcall
xchg
jbe
ja
mov
jmp
pop
movsb
xor
xchg
les
mov
rcrl
add
je
xor
mov
add
mov
rcrl
or
xlat
mov
out
lods
dec
neg
adc
adc
je
mov
and
pop
repz
jae
mov
jno
and
fcom
and
jp
call
or
idivl
ror
loopne
jo
rolb
mov
stos
pop
inc
popa
fisttpll
shlb
aad
sub
ret
cld
mov
dec
sub
mov
mov
lods
push
stos
subl
iret
lahf
es
dec
xlat
rclb
in
call
and
sbb
inc
out
push
or
imul
aam
cmp
enter
jge
call
aaa
mov
mov
push
fldenv
jmp
test
mov
inc
mov
clc
ljmp
shlb
mov
xchg
adcb
lds
xor
shr
lahf
pop
pushf
std
mov
mov
cltd
and
or
add
in
jl
push
mov
add
out
mov
pop
les
ss
mov
in
xlat
jns
push
inc
fnsave
mov
aas
or
cmpb
or
mov
mov
movl
xchg
jns
sub
adc
dec
enter
push
mov
cwtl
cwtl
outsl
push
addr16
orl
lahf
cmp
adc
adc
mov
jb
bound
lock
scas
push
out
icebp
xchg
lret
mov
sub
lods
add
in
test
pop
jg
loopne
adc
mov
and
aad
inc
add
jle
xlat
outsb
pop
lahf
inc
xchg
adc
mov
sbb
cmpxchg
test
lods
xchg
enter
mov
adc
inc
cmp
jmp
icebp
loopne
dec
jecxz
mov
movsb
or
xor
ljmp
jno
popf
cmp
lret
cmpsl
sub
in
gs
frndint
shlb
mov
das
add
mov
mov
or
jmp
ret
arpl
addr16
inc
push
mov
das
imul
lret
dec
iret
scas
push
cli
mov
mov
jb
mov
aaa
sarb
dec
sub
push
fcomip
nop
sub
push
cmp
adc
pushl
mov
sbb
ret
rorl
jmp
jp
xchg
lret
les
lock
mov
shrb
sbb
sub
and
mov
movsl
sbb
xchg
and
movsl
cmp
xlat
sbb
xchg
jnp
test
xchg
scas
adc
dec
inc
in
mov
sub
stos
ror
mov
xor
scas
xchg
jmp
and
mov
push
scas
push
adc
dec
xchg
jmp
jl
cmp
sbb
aad
lret
push
mov
pop
push
imul
pop
repnz
mov
es
or
lea
out
push
and
sbb
push
test
jno
iret
js
or
in
mov
inc
out
xchg
sub
add
or
lcall
adc
out
jae
mov
enter
imul
ret
stos
es
jl
xor
fimuls
movq
pop
xchg
in
dec
jg
lods
mov
mov
cltd
pop
fnstcw
mov
pop
mov
jp
loope
movsb
sahf
pushf
xor
sbb
xor
xor
aaa
xchg
dec
sub
xor
call
cmp
add
decl
dec
push
and
inc
jo
push
lcall
inc
adc
mov
jmp
cld
xor
aas
ret
dec
std
inc
jp
xchg
ficoml
lcall
cmp
jmp
sub
int3
mov
sub
jbe
stos
dec
and
ret
sub
xor
add
xchg
mov
push
aam
mov
pop
fcmovnbe
andl
add
das
arpl
mov
fs
push
mov
js
test
dec
and
cltd
fsubrl
mov
loope
fiaddl
cmp
xor
cmp
loop
out
inc
mov
jne
jp
fwait
and
sti
adc
cmp
repz
mov
lahf
mov
sub
rcrl
outsl
mov
inc
jmp
fs
sub
loope
sti
call
or
pop
out
or
mov
jns
lods
jmp
sti
test
iret
push
cld
dec
mov
and
cmpsl
ds
jmp
mov
jo
repnz
lods
jbe
test
ret
and
jnp
push
or
pop
jp
mov
ficoms
mov
frstor
negl
scas
fsub
mov
sbb
jb
test
xchg
dec
or
jne
nop
cmpsl
add
jnp
dec
xorb
idivl
sub
cli
mov
jp
inc
inc
push
cmpsl
cmp
sbb
repz
aaa
or
rcrl
sbbl
mov
lret
movsb
dec
pop
lea
mov
orl
add
lods
iret
push
and
cmp
ret
jg
cmp
int
fistpl
jae
ss
rorb
idivl
jns
mov
add
pushf
cmp
test
cltd
mov
cmp
mulps
or
cmc
cmc
ja
jecxz
xchg
aad
or
sahf
mov
xchg
sub
pop
shrl
mov
test
aas
or
imul
mov
in
push
int3
sbb
sbb
stos
mov
inc
mov
and
jmp
add
fcompl
test
pop
lcall
fists
lea
or
scas
xchg
fwait
mov
inc
push
insl
repz
jmp
xchg
add
pushf
xor
clc
into
jbe
rclb
jne
jns
sti
xchg
mov
xor
outsb
sbb
fwait
or
and
lea
in
gs
cmp
and
lret
xor
cmpb
jbe
push
icebp
in
xchg
and
xor
jbe
inc
push
gs
xor
adc
and
je
fsubrs
mov
testb
fsubs
or
dec
test
out
loope
sbb
jl
pop
mov
cmp
loop
add
negl
mov
movsb
add
push
aam
mov
push
xchg
mov
jnp
fidivrs
shll
or
ljmp
xchg
inc
xor
jmp
subb
aam
aad
and
clc
bound
mov
xor
adc
lods
incb
dec
adc
daa
inc
mov
popa
sub
inc
jecxz
movsb
xor
popa
mov
enter
outsl
dec
push
cmpsl
imul
dec
out
scas
cmc
push
jmp
sub
hlt
mov
nop
mul
add
dec
enter
nop
mov
data16
sbb
pop
or
push
lea
or
jne
cmpsb
mov
lock
mov
orb
or
push
rclb
pop
clc
mov
idivl
jecxz
rcrl
xlat
jp
pop
xchg
int
adc
xabort
ss
div
addr16
adc
mov
dec
mov
jl
sub
jnp
orb
es
jnp
or
lds
pop
jl
push
sahf
xor
mov
mov
cmp
lods
imul
stc
adcb
test
cld
jp
jno
fldenv
ljmp
push
std
mov
pop
xor
xor
adc
push
xlat
decb
imul
and
and
jns
stos
inc
pop
sub
push
xchg
xchg
test
mov
push
cmc
aad
lea
lahf
pop
xchg
out
push
cmpb
in
jbe
push
leave
pusha
xchg
js
jecxz
sub
inc
pop
imul
pop
xchg
and
xchg
in
imul
movsl
lea
mov
sub
or
andb
jae
xchg
and
out
jl
inc
es
jmp
je
xor
fs
jmp
stc
push
add
cmc
mov
inc
push
mov
cli
mov
imul
into
popa
mov
pop
mov
int3
push
lea
clc
xchg
shlb
sarb
movsb
ss
or
jb
in
pop
or
notb
aad
cwtl
lret
sbb
and
scas
inc
sahf
dec
jmp
jle
int
enter
adc
dec
mov
sarl
mov
or
push
fdivl
mov
scas
xchg
jbe
imul
lds
push
inc
sbb
sub
xchg
mov
ljmp
xor
jbe
icebp
aaa
mov
and
into
sbb
jbe
insl
fs
test
lea
cmp
cmpsl
jmp
dec
imul
dec
pop
jo
mov
push
sbbl
movsb
ljmp
lds
jmp
mov
mov
call
push
lea
xlat
mov
or
sar
add
in
cmp
mov
fs
int
mov
xchg
cld
lods
pop
in
stos
aam
fwait
xchg
fmul
mov
mov
jno
mov
push
jbe
dec
mov
jge
cmp
inc
jp
sub
ljmp
in
mov
popa
mov
test
xchg
sub
test
mov
mov
and
out
and
je
incl
and
mov
mov
arpl
aam
and
pop
add
adcl
jno
xchg
mov
ret
cmp
adc
mov
mov
sarb
outsl
mov
fs
ss
notl
out
mov
mov
lret
sub
addl
dec
lret
dec
bound
fucomip
inc
mov
fucomp
in
fisttps
cmc
jmp
and
andb
or
cmp
add
mov
test
popf
jle
fcomps
mov
sti
jmp
mov
jbe
add
andb
test
fadds
dec
adc
cli
icebp
xchg
movsl
mov
sbb
mov
xchg
cmp
imul
xor
jo
adc
aam
sub
or
mov
fdivr
mov
pop
in
in
imul
cltd
shrl
sbb
into
push
push
jg
and
popf
les
lock
sahf
clc
nop
mov
in
mov
leave
pop
mov
pushf
mov
mov
cmp
mov
sbb
mov
inc
mov
push
sahf
xor
mov
or
or
or
test
push
mov
loope
outsb
push
push
xchg
sbb
shrl
push
and
loopne
test
sahf
iret
movsl
lds
xchg
popa
mov
sbb
xor
xor
jp
push
inc
sub
add
sbb
xchg
lret
mov
bound
cmp
shr
or
push
inc
push
jbe
mov
lret
in
jle
mov
in
jo
sub
mov
fidivrs
xchg
arpl
test
or
cmp
test
push
pop
and
cmp
jmp
xor
push
lea
popa
xor
mov
inc
repnz
jle
shl
out
xchg
sti
fidivrl
mov
mov
mov
sarb
repnz
aad
dec
sbb
in
inc
xor
cmp
sar
pop
addr16
mov
sbb
fnstcw
fdivs
mov
sub
xchg
cmp
mov
xchg
sub
mov
mov
mov
leave
ss
add
sbb
ljmp
push
sub
lock
and
gs
inc
xor
test
add
mov
jne
bound
mov
test
jo
in
adc
ss
das
test
sub
push
ror
mov
push
pop
lahf
pop
mov
cmp
and
add
cmp
jno
pop
sarb
add
mov
cmp
add
adc
sbb
imul
ss
add
mov
cwtl
sbb
add
sarl
dec
shll
dec
dec
fstpt
lret
pop
adc
fnstenvs
and
divl
pop
jle
xchg
movsl
dec
mov
cmpsl
xchg
cmpl
gs
cmp
pop
adc
insl
cmp
pop
inc
lods
fiadds
cmp
cltd
fnstcw
or
dec
inc
aaa
stos
add
pop
inc
cltd
sbb
test
add
dec
rorl
mov
out
pop
mov
sti
outsb
add
push
mov
stc
scas
jge
adc
mov
call
pop
in
jge
ret
pop
rcll
or
sbb
dec
nop
mov
roll
dec
rep
adc
imul
cmp
aam
dec
mov
in
mov
movsl
roll
arpl
cmpsl
and
adc
sbb
sbb
inc
jge
shrl
sbb
cmp
rclb
inc
mov
les
rcrl
cmp
fisttpll
mov
cmp
add
pop
and
insb
sub
popf
mov
mov
xor
mov
adc
xor
jl
mov
jmp
sub
inc
call
pop
out
jg
jbe
pop
push
jl
xchg
dec
push
or
mov
xlat
sbb
adc
jo
xchg
xlat
sbb
cmpsl
xlat
jbe
lods
xlat
mov
movsl
std
jo
les
aam
jmp
jmp
xor
ret
jb
inc
into
sbb
enter
clc
jmp
sub
xor
xlat
inc
fimuls
aad
insl
jnp
fidivs
pushf
hlt
sbbl
jp
popa
jg
dec
insl
or
xlat
clc
insb
xchg
adc
mov
mov
das
or
sbb
pushw
pop
adc
insl
jle
cmp
lahf
hlt
aaa
add
dec
mov
cwtl
cltd
or
repz
test
jp
movsl
pop
rclb
or
loop
fsubp
add
ljmp
cmpb
push
adc
daa
pusha
cmpsb
cmp
inc
mov
adc
movsb
test
and
and
xor
cmp
movsb
add
inc
call
test
das
or
das
jo
pusha
push
push
imulb
mov
or
mov
int
push
insb
mov
cmp
mov
or
mov
fcmovnu
dec
mov
pop
out
cmp
jnp
lret
pop
scas
push
jns
or
pop
movsl
les
pop
insl
scas
mov
sub
inc
test
inc
push
je
adcl
and
xor
dec
ljmp
add
ret
xchg
adc
cmpsb
xor
or
aad
and
cmpsb
das
cwtl
jecxz
ljmp
ss
fcmovnb
push
mov
or
push
cmp
out
add
nop
insb
popa
in
ret
fnsave
adc
out
add
push
and
pop
fs
popf
rcll
cmp
mov
xor
orl
mov
jmp
mov
sbb
scas
sub
inc
jne
out
daa
push
fsubrs
ret
xor
xor
jae
push
cmc
nop
push
adc
xor
aas
dec
dec
repnz
xor
fs
push
pop
std
test
scas
dec
decl
sub
sub
add
cmc
das
movsl
scas
jb
lret
mov
jmp
or
sbb
inc
enter
cmp
popf
or
fmuls
fnsave
xor
pop
adc
xchg
jle
push
movl
xlat
movl
dec
mov
imul
mov
imul
ret
jle
sahf
inc
popf
sbb
cmc
xor
push
and
jp
popa
mov
cld
mov
sub
stc
adc
aaa
out
sub
dec
pop
jbe
loopne
mov
mov
loopne
inc
js
stc
xchg
dec
out
daa
push
inc
movsb
push
lahf
jbe
rcl
jl
std
data16
ja
adc
call
addr16
push
pop
movsb
or
stos
and
push
outsb
aam
test
add
sub
call
out
pop
pop
adc
jmp
dec
add
rol
cmp
lods
ljmp
and
mov
push
aas
mov
aas
aaa
int
daa
sbb
clc
and
inc
cmpsl
ret
jmp
adcl
cmp
push
mov
push
pop
jge
sub
or
imul
rcrl
dec
out
push
jle
lcall
cmp
sub
lock
xchg
adc
lahf
scas
sbb
cmp
xchg
in
enter
inc
mov
pusha
pop
in
stc
call
mov
xchg
adc
jge
cmp
pop
popf
lods
jnp
rclb
fcoml
mov
push
cmp
xor
in
jp
cmp
mov
sbb
and
mov
insb
imul
jecxz
sarb
ja
pusha
xlat
sub
imul
push
rcrl
or
push
addr16
aad
add
lcall
xor
rolb
pop
fadd
pop
fldenv
pop
mov
aad
mov
pop
les
addr16
mov
rol
xorl
jno
lods
xchg
pop
sub
pop
cmp
add
cmp
cltd
inc
mov
gs
mov
add
xor
pushf
mov
div
movsl
cmp
test
test
lahf
add
and
popf
lods
cmp
int
xor
add
fistpll
int
add
daa
std
ret
xor
ss
adc
lods
pusha
lret
cmp
cmp
dec
pusha
dec
in
dec
sti
lahf
in
stc
jo
mov
push
lea
adc
adc
hlt
adc
rorb
mov
pusha
out
add
out
das
pusha
int
inc
aaa
or
add
push
jle
sbb
dec
out
imul
ds
sar
loope
inc
jns
fildll
sbb
icebp
mov
sti
test
aad
jbe
sub
cltd
shll
or
and
jno
mov
mov
push
loop
mov
js
shrb
dec
out
imul
mov
jle
or
pop
fsubl
rol
pop
add
push
xor
cwtl
gs
sbb
test
jne
inc
xchg
inc
mov
movsb
stos
sub
add
aad
mov
or
dec
sarl
leave
lea
adc
push
mov
mov
lea
leave
mov
mov
aad
bound
sahf
fsubs
adc
lcall
sub
xchg
mov
or
cmp
xchg
daa
pop
lcall
lcall
pop
shr
scas
cmp
cld
out
xor
jbe
jl
je
or
cmpsl
lea
loopne
jbe
mov
movsl
xor
or
aaa
dec
mov
stos
mov
push
push
ljmp
push
fcmovne
xchg
add
mov
cmpsl
inc
pop
aad
outsl
inc
sti
and
cmp
fisubl
addr16
or
mov
or
dec
popf
adc
pop
popf
inc
fimull
je
cld
adc
and
arpl
rcrb
jmp
repnz
fbstp
pop
mov
add
mov
mov
jo
sahf
push
pusha
jge
jnp
sub
fwait
cld
cmp
sub
add
mov
or
clc
cmpsb
out
add
rcll
or
and
mov
call
enter
cld
cld
xchg
cs
incl
push
cmp
mov
push
pop
pop
insl
xlat
leave
arpl
xchg
pusha
dec
loopne
mov
addl
fucompp
incl
loope
xchg
jle
shll
test
push
cmp
or
jae
lods
fidivrl
test
pop
cmc
into
dec
fsubr
push
arpl
cmpsb
in
leave
ret
fisubs
adc
mov
scas
test
mov
js
push
shrl
cld
loopne
pushf
pushf
and
xchg
out
sti
cmp
sbbb
or
in
dec
sbbb
je
ljmp
push
mov
movsb
out
test
inc
pop
xor
bound
dec
icebp
and
into
out
mov
push
mov
dec
loop
push
xor
xchg
lock
dec
pushf
xchg
jns
in
fmul
push
aas
cwtl
repnz
nop
push
je
jb
pop
outsb
jmp
and
daa
fldt
loop
fldt
inc
bound
es
sbb
jp
inc
xor
dec
sti
popl
inc
dec
repz
lret
ffreep
sub
mov
adc
mov
mov
mov
jns
inc
fisttpll
cs
inc
repz
or
adc
fsub
and
and
sahf
ja
leave
pop
pusha
adc
fisttpl
orb
sub
stc
rorl
cmp
pusha
jp
sbb
int3
arpl
loopne
xchg
push
sbb
push
xor
lahf
in
cmp
mov
fcompl
adc
popf
popa
imul
pop
les
lods
inc
xchg
fnstenv
cmp
jne
inc
mov
ret
dec
cmp
into
dec
lret
sub
cmp
mov
jecxz
sub
test
fstl
sbb
and
aas
jle
int
frstor
and
cmp
je
stos
mov
aas
mov
add
fmul
repz
notrack
jno
cmp
jno
imul
repz
sbb
mov
leave
pusha
sbb
enter
call
fcoml
cmp
insb
gs
fsts
ja
sub
pop
sti
scas
dec
adc
push
subb
repz
xor
repnz
daa
xchg
in
pusha
add
imul
jne
out
testb
jbe
rclb
xlat
ds
and
dec
inc
testl
pop
nop
mov
add
enter
repnz
sub
mov
inc
sub
add
fbld
inc
fldenv
js
push
fnop
push
xor
roll
and
dec
ja
mov
cltd
roll
dec
or
iret
fnstsw
fbld
int3
imul
fsubr
imul
cltd
lret
mov
lock
adc
outsl
ss
mov
jns
sub
aam
stos
rorb
push
cmp
hlt
nop
sbbl
in
and
outsb
xorb
push
cmp
test
pop
sbb
ds
xchg
ret
insl
mov
mov
loop
into
sub
jns
mov
loop
mov
fildll
imul
icebp
dec
in
adc
inc
icebp
lcall
movl
inc
test
dec
sarb
mov
cs
jge
lock
into
pop
xlat
pop
adcl
push
cmp
ret
pop
aaa
or
and
test
rcrb
push
dec
cli
fndisi(8087
add
push
jns
sahf
aad
jle
push
aam
dec
cs
mov
in
dec
push
push
cmp
pop
mov
and
cwtl
daa
lret
xchg
notb
ljmp
fs
enter
divb
js
ds
or
push
mov
cs
stc
fisubrs
mov
cmp
sbb
lock
cmp
pop
dec
cmp
mov
cmpb
pop
jo
es
jno
jmp
push
cmp
or
adc
add
dec
aas
jno
popf
lret
out
xchg
jmp
fildll
nop
loop
sub
test
mov
add
ret
jl
lods
pop
xchg
popa
mov
xor
or
test
popf
jp
ret
mov
int
pusha
mov
pushf
rcr
loop
xchg
jne
stc
or
in
lock
mov
push
pop
pushf
dec
cmp
pop
sarl
jno
insl
inc
imul
xorb
fdivr
mov
push
jp
mov
out
mov
rcrb
movsb
mov
movsl
js
or
push
add
adc
xor
addr16
outsb
rolb
fidivl
cmpsb
dec
mov
scas
stos
jmp
iret
inc
jne
popl
cli
jmp
sub
cmpsl
add
lock
adc
dec
and
stc
xchg
add
xor
pusha
out
jnp
iret
mov
xchg
add
stos
cmpsl
jb
pop
add
bound
fnstenv
cli
pushf
fildl
mov
in
test
xor
adc
xor
xor
adc
and
xor
imul
stos
icebp
lods
mov
sahf
divb
mov
outsb
sti
inc
outsl
iret
imul
in
lcall
cwtl
out
and
shrb
addr16
jne
repnz
cli
xchg
sbb
enter
insb
adc
popf
andb
mov
test
cmp
push
insb
je
and
je
mov
icebp
popf
cs
xor
bound
inc
jae
jae
fxtract
jae
adc
loop
aam
inc
or
cs
xchg
fdiv
out
daa
sbb
push
mov
xlat
outsb
fadds
add
mov
push
imul
pusha
mov
sub
xchg
sub
data16
lcall
cwtl
sub
push
imul
cmc
bound
sub
dec
pop
inc
sbb
hlt
push
adc
stos
jne
bound
insb
jo
movsb
jecxz
pusha
outsb
add
pop
test
adc
into
int
jns
in
cltd
js
ret
loope
test
lds
adc
stos
outsb
mov
mov
push
in
daa
adc
cli
inc
std
hlt
xchg
loop
outsl
daa
xor
cmp
xchg
dec
popa
add
and
jg
aas
rcrb
iret
xor
jmp
sbb
mov
xor
inc
ret
inc
cli
adc
mov
fildll
or
jge
pop
adc
lahf
add
mov
dec
push
pop
inc
imul
xor
and
inc
dec
in
dec
dec
subl
stos
and
es
mov
mov
dec
testb
fcoms
and
cmp
bound
cltd
sub
xlat
add
push
jae
add
ja
mov
scas
cmp
cmp
fcmovbe
push
shll
xchg
or
das
push
in
sub
and
add
push
or
out
pop
cmc
and
inc
sahf
xchg
add
pop
repnz
cmp
sub
pop
inc
jg
icebp
outsl
int
ja
es
popl
js
movsb
or
aam
jl
clc
adc
cs
add
sbb
movsb
lock
jbe
test
ror
xchg
xchg
stos
jp
push
add
push
jb
add
jno
movl
loopne
mov
sbb
mov
cmp
lods
scas
push
out
dec
pop
sarb
cmpl
sarl
xchg
push
or
jno
pushf
or
or
or
add
test
mov
inc
fbld
incb
mov
mov
pop
and
mov
xchg
rclb
xchg
adc
push
setbe
jae
fidivrl
cli
push
ss
into
in
pop
jb
shrb
push
clc
jbe
or
xchg
stos
xchg
sbb
jno
adc
mov
mov
xor
push
test
fnsave
and
cmc
xchg
jns
jg
and
inc
sarb
lahf
test
loope
cmp
cmp
pop
std
cltd
rcl
sbbb
xor
and
loop
or
sbb
cwtl
gs
pop
fistpl
or
nop
scas
hlt
addr16
ror
push
es
jecxz
inc
adc
jle
mov
call
lret
addr16
fsubrs
ret
mov
dec
sbb
or
addr16
jg
inc
and
or
das
push
jmp
mov
jb
ljmp
imul
sbb
out
andl
rcrb
inc
sbbb
repnz
xor
mov
lret
cmpsl
aas
or
mov
fdivs
fiadds
loopne
lods
fsts
jecxz
mov
ja
stc
push
mov
or
test
cld
loope
dec
pushf
push
sub
outsb
cwtl
shll
jg
mov
out
jecxz
sbb
icebp
or
scas
cli
daa
xchg
jle
sbb
xchg
sti
notl
push
adc
in
push
inc
jg
std
jg
in
lahf
push
inc
dec
iret
sbb
pop
fnstenv
xchg
cmc
lock
add
inc
mov
push
fnsave
insl
orl
nop
dec
adc
jnp
adc
out
xchg
jns
xchg
cmpsl
pusha
mov
dec
push
or
or
das
push
cmpsb
cld
adc
sub
out
repnz
data16
lahf
pusha
add
xchg
pop
cmp
out
notb
ss
imul
pop
add
mov
insb
loopne
test
or
sub
call
dec
jbe
push
test
pop
mov
andb
inc
mov
jle
pusha
int
mov
movsl
cmc
arpl
xor
mov
mov
sbb
mov
cld
sbb
pop
mov
in
or
sub
in
sti
loope
stos
adc
aas
mov
dec
and
jle
fdivp
test
orb
pop
xor
push
mov
jnp
movsb
dec
pop
lahf
mov
xchg
das
cmp
jmp
mov
add
jbe
xchg
call
mov
xor
jg
inc
xchg
add
out
incb
js
pop
out
ja
idivb
mov
mov
mov
and
lock
mov
popa
push
adc
lods
mov
sub
xor
push
out
adc
pusha
dec
sbb
lds
cmp
xchg
nop
sub
divl
sub
sub
les
std
jmp
ficoms
sbb
inc
loopne
test
imul
lods
mov
mov
lods
icebp
test
dec
iret
jbe
mov
int
in
fwait
rorl
adc
in
mov
and
aas
arpl
sbb
arpl
aam
fs
int3
cmp
and
outsl
aad
aaa
sub
ret
mov
inc
mov
adc
sahf
mov
sbb
shrb
daa
outsl
ret
aad
loope
mov
xor
push
add
fists
push
test
mov
xchg
fcmovnu
push
fdivl
sbb
lods
xor
push
nop
push
adc
mov
jg
dec
inc
inc
popa
inc
pop
mov
enter
ja
mov
jle
cmpsl
lods
repnz
inc
out
cld
mov
aad
and
ret
pusha
subb
les
lret
call
hlt
mov
cmp
sbb
mov
sub
add
jnp
inc
jmp
jno
cmp
test
or
fidivrs
rol
push
jne
icebp
loope
cmp
sub
in
insb
test
rcrl
inc
icebp
xlat
push
call
ret
pop
sarb
push
dec
add
je
andl
xchg
test
jnp
icebp
adc
shll
fildll
out
push
jne
cmc
cmpsb
xor
add
ret
roll
jno
sti
jmp
and
xchg
ja
push
pop
cs
lea
inc
dec
sub
sbb
int
adc
mov
adc
rcl
push
daa
add
push
lcall
stos
jno
lds
jmp
jle
cmp
subb
scas
jmp
mov
or
int3
jge
mov
out
jns
inc
xchg
and
aas
xchg
std
ror
push
xlat
cli
push
lret
lea
adc
jns
ja
in
lods
add
mov
xor
inc
mov
xor
mov
mov
xor
or
mov
aam
jnp
jecxz
pop
cmpsb
repnz
movsb
pop
cmp
aam
js
pop
rcrb
insl
mov
int
cmpsb
iret
cmp
mov
mov
stc
adc
popf
les
sbbl
das
data16
sub
pusha
jecxz
in
dec
rcrb
loope
out
dec
sub
dec
pop
pop
imul
les
adc
subb
imul
es
add
inc
pushl
jge
sbbl
jge
pop
sbb
sbb
jo
insb
insb
mov
sbb
cmpsl
push
adc
or
subb
mov
cmpsb
fsubrs
lea
add
push
push
int3
sbb
dec
insb
xor
pop
out
push
lods
mov
aam
sbb
mov
fcmovnb
mov
mov
and
mov
cmp
jns
cmp
jns
mov
addr16
in
add
push
out
sti
inc
mov
mov
ss
divl
scas
stos
loope
pop
cmpsb
dec
add
arpl
je
insl
imul
inc
pop
mov
dec
push
fs
test
push
mov
iret
sub
pop
shlb
repz
or
cmp
clc
into
jle
fcmovb
dec
mov
rcrb
js
jp
int3
imul
sbb
rcl
hlt
lds
arpl
add
sub
jns
divl
out
push
xchg
push
jb
loope
mov
jno
jo
pushf
test
mov
mov
mov
pop
xor
jae
scas
mov
jb
js
pop
scas
fdiv
out
push
incl
mov
mov
mov
insb
push
test
sti
mov
mov
js
lock
and
add
nop
cwtl
sub
jecxz
or
call
imul
cltd
test
fidivrs
mov
andl
lods
adc
jp
je
lds
out
shrl
cld
adc
add
fisttpll
fists
and
into
mov
mov
lcall
mov
adc
mov
and
addr16
jb
shld
sub
imulb
push
popf
movsl
adc
sahf
repnz
movsl
ret
outsb
cmp
push
cmpsb
and
test
int
xor
sbb
push
push
test
inc
jno
js
mov
cmc
push
test
into
push
test
testl
inc
mov
add
les
pop
icebp
adc
and
adc
sar
jne
out
pop
sub
pop
ret
fisubrs
xor
rcr
lds
cli
popa
stc
imul
outsb
mov
mov
adc
cmc
mov
inc
sti
mov
sub
cmpb
fiaddl
iret
xchg
push
lahf
xchg
dec
or
cmpsl
add
andl
mov
cltd
xchg
adc
mov
popf
xor
in
mov
stc
out
cmpsl
sbb
jnp
jo
mov
jle
scas
inc
and
inc
int
js
dec
in
fucomip
test
mov
test
sub
pop
mov
jmp
pop
adc
rol
push
xor
out
lock
shll
scas
add
inc
cs
mov
cmpb
sub
dec
or
inc
add
cmp
call
ret
cmp
imul
push
repz
stos
sub
push
fstps
lret
bound
test
testl
mov
std
cwtl
pop
adc
ret
sbb
pop
xchg
dec
imul
mov
push
outsl
push
xchg
imul
xchg
jns
sub
inc
fldt
ss
pop
or
arpl
pop
lret
loope
rcll
xchg
call
or
dec
pop
ds
fwait
mov
add
mov
jmp
stos
jne
mov
js
jecxz
sahf
je
mov
lock
rorl
mov
push
sbb
or
insb
fistpll
imul
xor
mov
dec
jge
xor
sbb
push
or
shlb
dec
adc
inc
rol
sbbb
xorb
xchg
add
mov
jo
sub
addl
jl
fsubrs
pop
add
xorl
push
mov
sbb
sub
mov
dec
test
test
adc
popf
dec
repnz
dec
sub
repnz
fucomp
push
sahf
xchg
mov
add
push
add
inc
cli
test
bound
jl
fdivrl
jo
jge
in
pop
push
xchg
or
ss
pop
outsb
pop
hlt
stos
popf
scas
mov
dec
fadds
fsts
add
subl
adc
add
scas
or
mov
arpl
ja
cltd
iret
div
and
xor
lcall
jo
repnz
sub
repz
les
or
lea
in
out
pop
xchg
sub
enter
mov
pop
repnz
fiadds
pop
adc
mov
add
popf
xchg
push
ds
mov
in
data16
nop
mov
push
cltd
or
jle
adc
ja
orl
add
fsubrs
ret
dec
jmp
fimuls
es
rcrb
mov
jbe
push
out
push
jle
mov
xchg
iret
jle
repnz
enter
cmp
push
add
and
outsb
stc
xor
mov
push
cmp
shrl
dec
int3
std
insl
ja
xchg
sub
jno
ret
pop
jo
pop
adcb
dec
roll
sub
stos
pop
sbbl
in
pop
je
adc
inc
push
xchg
mov
sub
mov
sbb
rol
inc
ss
jmp
in
xor
jb
stos
pusha
mov
jne
push
add
xchg
insl
mov
shll
xor
in
jg
push
outsl
push
push
cmpsl
imul
in
mov
inc
ret
andl
test
das
mov
cmpsl
lret
popf
mov
or
mov
loop
mov
orl
testb
mov
sbb
cmp
sub
lea
xor
sub
mov
jbe
xor
mov
shl
insl
out
xor
dec
lea
or
cli
xchg
ds
or
int3
xor
xlat
mov
enter
sbb
jle
pop
pushf
cmp
lds
jge
aad
inc
cmp
inc
mov
inc
push
ret
out
pusha
fucomi
sbb
int
and
mov
loopne
add
setbe
xor
stc
mov
ja
shrl
pop
pop
cmc
xchg
add
pop
sub
cmc
push
adc
data16
or
xor
sub
fs
loop
mov
daa
aad
loopne
pcmpgtd
stc
xchg
sub
pop
mov
push
sub
mov
and
fwait
arpl
dec
push
jecxz
xchg
loop
sbb
add
xchg
aam
mov
pop
rcrb
cmp
mov
lods
add
lds
lds
sbb
das
lds
xchg
inc
jge
rclb
xor
stos
btr
jle
cmp
mov
push
in
jmp
imul
clc
xchg
rcrb
mov
inc
aas
outsb
les
jno
pop
and
mov
fisubs
cmp
movsb
push
add
loop
push
imul
js
rorl
lods
pop
in
out
add
jl
retw
test
cmp
shrb
out
pop
mov
ja
and
sub
xchg
orl
and
hlt
clc
jae
aaa
or
mov
add
ja
sub
decb
push
xchg
stc
sbbl
mov
insl
xchg
adc
pop
push
mov
ds
shrb
cmp
pop
loope
andb
and
xchg
sti
mov
sahf
push
mov
pop
dec
popa
in
mov
and
pop
mov
fldcw
dec
cltd
xor
and
lods
inc
lods
sti
push
mov
dec
and
sub
test
icebp
frstor
cmpsb
inc
stc
and
movsb
cmp
xchg
push
ljmp
jno
sbb
pop
mov
or
mov
mov
aad
sbb
or
in
clc
in
fneni(8087
fnstsw
add
jecxz
outsb
xor
cmp
pushf
incb
lcall
and
aas
aad
out
sahf
imul
cmpsl
mull
xchg
ss
push
cmp
cwtl
dec
jae
out
sub
push
scas
in
push
cwtl
push
lock
xchg
jg
int3
lret
sbbb
daa
mov
dec
pop
hlt
ret
outsb
sub
push
popa
push
icebp
xchg
mov
stc
je
and
xchg
xlat
cmp
ret
ljmp
pusha
pop
lea
orb
dec
dec
cld
lcall
mov
divb
add
adcb
add
outsb
jl
push
mov
cs
or
cmp
pop
xor
aas
cmpsb
fnstsw
mov
into
orl
test
jmp
pop
push
dec
dec
dec
cmpsb
xorl
xlat
and
inc
push
cmp
inc
ret
xor
cltd
push
cmp
sbb
lea
cmp
ss
out
popf
push
std
push
mov
test
xlat
and
imul
xchg
cmp
push
jns
mov
jge
pop
icebp
adc
test
jne
jg
roll
mov
xchg
adc
mov
dec
mov
daa
lea
and
or
movsl
clc
es
fmulp
pop
testb
jne
cmp
enter
je
xor
add
adc
push
gs
push
dec
stos
fwait
xor
and
adc
xchg
xchg
js
int
xchg
cmp
mov
or
dec
mov
mov
ss
ja
pop
fwait
jnp
push
mov
lea
imul
out
dec
test
mov
cmpsb
push
jmp
add
mov
or
popa
cmp
pop
aad
sarb
mov
leave
adc
mov
push
jg
pushf
daa
int
loope
and
aam
push
jbe
scas
pop
repnz
fsubrl
xchg
mov
jne
movsb
or
out
sbb
cmovs
adc
std
into
ds
lods
pop
popa
cli
jnp
and
pushf
sbbl
mov
dec
pop
xor
cmp
jge
loopne
adc
mov
mov
aaa
repnz
mov
aad
popa
mov
mov
cltd
xor
push
popf
mov
mov
aaa
stos
mov
andl
push
mov
fwait
add
iret
shrl
jo
sub
xchg
out
dec
sti
jmp
lcall
ja
popa
arpl
mov
test
decl
add
cmp
stc
nop
mov
inc
pop
scas
jne
repnz
pop
insl
xor
repnz
test
stos
push
rorb
ja
frstor
adcb
cmp
xchg
imul
add
ficoms
test
xchg
or
in
jns
mov
or
inc
sbb
cmpsl
mov
dec
jne
xchg
and
sti
pop
movsl
sbb
and
es
push
mov
adcb
leave
sbb
xchg
scas
mov
insl
push
cmp
aam
jl
sbb
cmp
insb
popf
inc
pop
shl
js
adc
loopne
sub
ss
jb
call
jge
insl
mov
rorb
pusha
icebp
xchg
rcr
jbe
add
mov
repnz
test
xchg
into
and
mov
gs
sub
jbe
adc
popf
jae
mov
aaa
nop
dec
in
in
push
push
stos
mov
std
adc
dec
jne
pop
ss
push
mov
ret
clc
fldt
sub
pop
rolb
ficoml
mov
cld
enter
clc
jmp
adc
or
outsb
loope
test
ss
sbb
cmpsb
push
inc
pop
mov
add
es
test
fs
xchg
pushf
out
stos
xchg
add
mov
push
repnz
int
pop
dec
scas
cmp
jo
cmp
xlat
push
jge
mov
xchg
lret
push
xor
add
dec
stos
inc
data16
jae
xchg
push
lret
or
adc
ss
xor
sub
sbb
dec
enter
repz
xchg
sub
popf
jl
stc
and
push
push
mov
loop
fdivp
mov
pop
cmp
dec
fisubs
cld
and
mov
adcl
adc
xor
jb
mov
fsts
jg
stos
mov
fs
jae
inc
in
pop
lds
out
stc
in
xorl
and
mov
inc
sti
outsb
cmpsl
dec
dec
and
fsubrs
fwait
in
lret
mov
repnz
in
lods
xor
fs
push
stos
jg
mov
fstps
sub
pop
cli
iret
sub
pop
dec
dec
iret
mov
push
dec
dec
loopne
movsb
cmp
out
xchg
sub
into
and
nop
mov
dec
dec
mov
popf
xor
data16
pusha
dec
xor
jp
call
popa
mov
mov
inc
and
scas
jmp
shlb
and
das
repnz
pop
xchg
mov
test
lahf
sbb
mov
xor
popa
test
lods
aad
or
mov
xor
scas
fisttps
call
frstor
dec
jl
push
stos
pusha
popf
aam
sub
adc
xor
push
into
xchg
imul
pop
pop
push
ret
outsb
into
add
push
mov
mov
dec
jge
lret
xor
xchg
cmpsl
fisubrl
ljmp
out
nop
dec
fiaddl
cld
test
roll
cmpsb
lcall
mov
add
mov
aad
mov
or
sub
popf
dec
mov
neg
push
mov
movsb
das
divb
pushf
cld
lcall
cltd
cmpsl
xor
loope
jno
push
sbb
inc
mov
ss
iret
jae
inc
pop
popf
sub
mov
cmp
jns
inc
shll
cs
inc
ds
pop
inc
mov
xchg
xchg
pushf
int
lahf
in
test
sahf
inc
xor
xorl
repz
adc
jmp
sbb
xchg
sbb
mov
fildll
or
cmpsl
inc
jge
dec
pop
dec
mov
pop
outsb
sub
xchg
mov
mov
inc
dec
cmpsb
fs
shl
xchg
fldenv
cmpsb
cmp
or
adc
xchg
sarl
cmpsl
mov
dec
jnp
jge
mov
rolb
mov
adc
out
mov
test
sbb
loop
mov
ret
outsl
mov
aad
or
pop
dec
xchg
hlt
xchg
add
mov
adc
ljmp
inc
lock
inc
xor
call
inc
push
dec
jbe
enter
fsts
pushf
mov
nop
jl
push
jb
movsb
clc
or
sti
xchg
and
cwtl
pop
loop
fcoml
mov
or
add
cltd
insb
lcall
fst
mov
adcb
call
lods
mov
ljmp
and
or
mov
fst
idivb
jp
inc
stos
sub
jl
loop
divl
jmp
pushl
cs
movsl
cmp
sbb
call
fxch
scas
mov
jge
sbb
insl
push
icebp
push
rcrb
xlat
movsb
mov
adc
dec
test
cmp
jo
test
repnz
ret
xchg
enter
mov
in
mov
loopne
scas
mov
bts
or
mov
or
or
adc
push
lret
jne
jo
cmp
sbb
inc
jl
ja
xchg
dec
cwtl
das
cmpb
test
dec
in
call
cmp
jle
cmpb
and
and
push
push
leave
and
pop
dec
arpl
jp
andb
dec
arpl
xlat
vmovapd
mov
xchg
lcall
mov
jne
mov
in
jno
mov
inc
and
push
inc
test
add
ret
pop
test
jbe
lods
fdivr
push
adc
jle
push
mov
mov
scas
into
gs
dec
push
aas
aad
test
mov
stos
adc
fcoml
mov
push
xlat
and
je
push
push
jle
loopne
jg
int
jns
int
sub
push
in
jle
jge
mov
jae
add
xor
cmp
push
mov
add
sbb
sbbb
in
or
sbb
sbb
jmp
pop
jno
sarb
rcll
add
sub
js
xchg
xor
loopne
icebp
cmp
ljmp
stc
lcall
sbb
lock
decl
xor
xchg
mov
mov
xchg
or
lcall
dec
loop
mov
or
push
icebp
sbb
arpl
pop
xchg
xchg
xor
out
fidivl
mov
lea
out
mov
or
xchg
xchg
xchg
adc
test
sbb
mov
xchg
gs
fdivrp
xchg
test
ret
icebp
cli
pop
xlat
mov
dec
pop
lret
loop
out
int
es
mov
jge
sub
dec
popf
xor
lods
ficoms
cmp
add
movsb
ss
fidivl
jae
lods
push
mov
mov
add
rcrb
jae
jbe
sub
in
dec
push
arpl
subb
xor
ror
mov
lods
add
andb
sub
lds
mov
test
movsl
sbb
sti
pop
insl
shl
popf
mov
iret
or
lods
jno
adc
inc
inc
lods
sbb
push
inc
divl
xchg
mov
mov
shlb
mov
mov
dec
and
fdivp
les
adc
mov
icebp
insb
popf
es
lret
sti
or
xor
inc
das
cmp
mov
imul
orl
leave
cmp
push
xchg
or
lret
mov
mov
inc
fisubrl
jmp
or
jg
dec
inc
stc
pop
lock
shrl
mov
gs
and
pop
fisubs
stos
xor
aas
jg
xchg
ja
cmc
xor
idiv
outsb
scas
push
inc
xchg
mov
ss
out
add
test
xchg
inc
push
daa
mov
loope
push
imul
sbb
fisubrl
mov
dec
jl
cltd
sub
add
fdivrp
cltd
mov
enter
das
test
and
jp
push
cmp
mov
stos
fwait
jnp
push
fnstsw
addb
lea
lds
cmp
cmpsl
jp
sub
pop
repnz
in
clc
sub
clc
xlat
fsubrl
push
push
xor
orb
xchg
int
pop
jbe
dec
xor
scas
cmc
add
dec
sbb
dec
jecxz
mov
scas
loop
mov
cmpsb
lret
popa
mov
ret
push
sbb
ja
xchg
cmpsb
lahf
xor
inc
inc
sti
hlt
xor
xorb
subl
mov
mov
mov
adc
push
pop
fsubrs
mov
fdivl
roll
clc
sahf
mov
mov
mov
leave
loope
pop
mov
mov
sbb
mov
push
ret
data16
ret
inc
enter
dec
add
in
xchg
xchg
out
mov
in
test
ja
stc
pop
jnp
inc
testl
mov
jle
push
pushf
mov
cmpsb
xchg
pop
lcall
loop
test
add
lea
mov
sub
fistps
adc
mov
loopne
jns
mov
stos
addr16
lock
cli
int3
push
sbb
xor
jecxz
mov
sbb
test
pop
ret
sub
jp
inc
mov
repz
inc
add
xchg
push
or
pop
orl
mov
xchg
cmp
xor
cmpsb
nop
or
lret
mov
repz
dec
xor
add
pushf
das
inc
sar
jbe
lock
int
adc
jp
mov
adc
ss
cmp
pop
xchg
cli
xchg
push
data16
inc
addr16
sbb
lret
and
into
into
aaa
notl
cmp
negl
jge
mov
loope
pusha
push
mov
movsb
repz
shrb
into
leave
mov
push
push
inc
fsts
cmpsl
xchg
adc
dec
mov
or
sub
out
shrl
push
mov
mov
add
jecxz
adc
mov
xchg
movsl
push
aaa
fsubl
jle
sub
add
push
test
sbb
test
push
sub
out
es
xor
mov
icebp
mov
sub
std
lds
or
and
push
xor
adc
sbb
lods
stos
mov
loop
inc
jno
inc
mov
jg
pop
pop
mov
test
outsl
adc
shrb
test
pop
push
xchg
setbe
test
stc
bound
mov
xchg
in
in
lcall
inc
lret
das
cmp
jno
jmp
add
gs
out
xchg
xchg
jb
adc
jg
sahf
xor
data16
jp
or
sbb
loope
push
mov
jbe
xor
test
push
mov
fbld
lds
gs
stos
inc
cmp
mov
mov
andb
or
mov
sbb
add
aaa
or
fisttpll
sub
imul
inc
sar
mov
pop
int3
adc
cmc
inc
in
in
sub
adc
inc
mov
xchg
clc
xchg
jns
xchg
xchg
fiadds
mov
mov
sub
add
jne
mov
sbb
nop
push
out
add
flds
cwtl
xor
iret
inc
inc
fnsave
inc
stos
jecxz
fs
fstl
fsubrl
into
mov
repnz
pop
jae
into
add
shrl
test
or
aam
shlb
dec
std
dec
lds
rclb
cmp
sahf
scas
outsl
xchg
out
mov
mov
out
sub
or
push
or
ljmp
jno
shll
pop
mov
in
dec
in
add
mov
imul
sbb
jmp
mov
xor
inc
push
mov
int
jl
negb
fdivs
inc
jmp
push
push
movsl
sub
xchg
sbb
or
ficomps
sahf
ljmp
ret
add
out
popf
lahf
imull
xor
dec
lret
ds
fcmovnbe
and
mov
cmc
add
mov
sbbl
xor
push
fiaddl
lcall
inc
add
test
xchg
insl
pushf
test
out
pop
jge
dec
pop
jnp
into
incl
and
push
scas
rorl
sbbb
jae
ljmp
adc
push
fiadds
test
jb
mov
in
fwait
imul
xchg
and
jne
gs
pop
insb
or
mov
and
lret
jge
dec
popa
daa
repnz
aad
imul
and
insl
sub
adc
das
dec
ja
pop
outsl
aaa
pop
in
mov
adc
adc
mov
mov
mov
inc
mov
mov
push
mov
push
xchg
in
inc
push
adcl
in
add
sub
push
insb
setp
xchg
sbb
insl
cwtl
lods
sahf
stc
ret
inc
fimull
cs
call
xlat
pop
or
out
test
or
scas
les
or
lods
mov
add
loope
and
sahf
jb
inc
lods
jge
jne
dec
fwait
xor
and
pop
mov
xchg
lret
push
scas
out
adcb
call
popf
xor
jle
cli
push
push
pop
cmovbe
stos
mov
lock
add
push
hlt
cmpsb
pusha
cmp
sbb
inc
push
test
movsb
and
rcl
rorb
jbe
sub
sub
adc
sarb
cmc
mov
mov
push
sbb
cs
and
and
hlt
mov
pop
leave
int3
inc
lds
pop
mov
lahf
insb
mov
mov
mov
mov
ret
cltd
cld
mov
es
mov
jno
adc
pop
pop
cmp
ret
dec
fists
mov
or
pop
fdivrs
mov
insb
aad
lds
std
cwtl
aam
push
fisubl
out
rcll
push
repz
jmp
xor
xor
rclb
xchg
add
add
cli
in
mov
mov
push
pop
pop
mov
loop
ffree
dec
addr16
or
out
xor
xor
cmp
in
sbb
lret
adc
out
mov
in
lods
fisttpl
fnsave
nop
loope
mov
sarb
out
scas
out
loopne
lock
add
adc
inc
xor
lock
push
add
shrb
mov
or
cmc
leave
insb
push
push
sahf
xor
hlt
sbb
ja
hlt
sbb
xor
fwait
sub
inc
sti
add
test
push
cmc
push
pop
jmp
mov
dec
jb
xchg
jns
cli
dec
add
jmp
dec
fbstp
mov
mov
cmp
ret
ficoml
sbb
push
xlat
xchg
cmp
in
ja
inc
cmp
ja
xchg
xor
xor
inc
cmpb
add
jg
push
adc
sbb
lea
iret
cld
and
dec
sub
mov
xor
pop
popl
adc
mov
test
push
dec
cmp
pop
sbb
push
inc
pop
dec
hlt
mov
push
push
jbe
xchg
sbb
mov
lret
out
lcall
cmp
fwait
test
add
sbb
scas
jge
mov
loopne
call
adc
dec
dec
xchg
sbb
mov
pop
out
fisttps
inc
push
rcll
gs
outsl
xlat
shld
mov
in
stos
push
cmp
inc
jnp
sahf
mov
inc
lret
mov
js
and
repz
xor
xchg
pop
repnz
jge
ret
pop
jl
cmp
xlat
out
dec
dec
lock
sbb
gs
adc
xor
lcall
fisttpll
leave
cmp
ss
fildll
adc
outsb
pop
hlt
lahf
bound
mov
dec
daa
push
mov
jge
into
enter
aad
mov
sbb
sarl
arpl
stc
or
adc
pop
mov
out
sahf
mov
push
add
test
mov
not
addr16
mov
cmc
fdivs
in
cmp
arpl
lock
inc
sbb
mov
hlt
sbb
ror
push
fldcw
pop
scas
je
mov
pushl
xchg
jecxz
inc
popf
mov
pop
test
jae
loope
test
push
test
mov
movsl
std
cltd
fidivl
and
ljmp
icebp
cmc
cs
daa
sbb
sub
mov
leave
ljmp
cmpsb
stos
adc
adc
loopne
xor
jmp
nop
sbb
icebp
inc
aas
add
pop
negb
int
xchg
dec
mov
insb
inc
fldcw
or
jb
pop
mov
adc
fwait
xchg
sub
inc
and
dec
mov
test
jbe
loop
sbb
sahf
imul
and
push
push
pop
and
mov
add
gs
ljmp
popf
cwtl
das
in
int
cmp
imul
bound
xor
add
jge
push
mov
loop
ds
cmpsl
leave
jg
sbbl
ret
dec
jo
adc
rclb
mov
les
mov
loope
pop
test
sub
add
dec
add
aaa
mov
lods
mov
ss
dec
aam
aam
push
push
jge
sahf
daa
sub
movb
stc
and
inc
and
cli
andb
mov
adc
mov
jmp
movsl
fcoms
insb
fists
cmp
scas
test
stos
jne
dec
movsl
sbb
fnstenv
arpl
mov
mov
jp
ret
dec
test
stos
sub
pop
add
notrack
stos
xchg
sub
movb
in
sbb
fldln2
aam
sti
into
test
cld
stos
and
lock
stos
sbb
jecxz
sar
repnz
mov
pop
mov
jmp
lods
xor
js
ljmp
mov
jmp
enter
sub
dec
sbb
sahf
or
sbb
xchg
dec
leave
gs
jns
and
lds
add
test
leave
mov
jo
inc
ss
sbb
jge
sbb
iret
pushf
ret
ffreep
fcomi
lahf
push
pop
mov
push
sbb
std
aad
outsb
jnp
mov
fisttpl
loope
inc
subb
push
and
or
or
into
mov
in
dec
repnz
sarl
mov
sahf
stos
hlt
dec
pop
xchg
or
sbb
jbe
jmp
loope
push
cwtl
out
out
mov
mov
mov
loopne
add
enter
lret
xchg
add
xlat
call
or
stos
add
inc
ljmp
sub
fs
sarb
dec
and
xor
lret
sub
and
dec
bound
rolb
push
cltd
andl
fwait
cs
sbb
ret
pop
js
outsb
mov
pop
leave
call
xchg
mov
xor
ds
pushf
mov
xchg
lock
sub
or
xor
imul
lret
lds
add
aam
mulb
jo
hlt
ja
mov
sar
sbbb
pop
cmp
jle
fwait
sahf
pop
mov
aad
mov
inc
shlb
adcb
jb
mov
sub
ficomps
cmp
xchg
shr
ljmp
outsl
daa
lods
popa
sub
jae
or
pop
lret
lret
sub
push
lods
dec
inc
out
idiv
inc
xlat
in
add
cmc
xchg
or
repnz
mov
mov
pop
mov
push
dec
push
or
test
andl
xchg
bound
test
aam
loope
das
mov
add
cltd
push
fld
sbb
mov
push
dec
mov
jg
dec
pusha
add
mov
sub
sarl
and
mov
leave
mov
and
adc
aad
ficomps
push
cmp
rcl
cwtl
das
loopne
add
mov
popa
aaa
pop
das
test
cmp
and
jl
jp
in
push
inc
stos
inc
aad
in
dec
subl
pop
push
inc
mov
stos
xlat
aam
dec
popa
js
push
and
push
std
mov
cmpb
inc
push
inc
mov
icebp
fmull
into
pop
je
mov
pop
rclb
test
mov
js
cmp
pop
enter
divb
push
sub
cwtl
jno
dec
cwtl
fs
sub
mov
ljmp
clc
and
mov
mov
push
xorb
sarl
incl
pop
adc
in
pop
int
loope
pop
sub
pop
loopne
int
push
jp
daa
in
mov
add
negb
repnz
sbb
aad
call
rol
leave
enter
rol
shlb
out
or
into
je
sbb
shrl
mov
xchg
sub
push
mov
xlat
leave
scas
call
pop
or
stc
dec
enter
mov
int3
push
pop
cmp
jne
push
pop
sbb
sti
test
cmp
cwtl
mov
out
arpl
push
int
mov
xchg
mov
inc
sbb
xchg
sahf
ja
mov
push
ja
jae
pop
repnz
pushf
in
pop
ljmp
hlt
or
jnp
fstl
lods
je
jne
repz
xchg
outsb
iret
push
lret
and
cmp
cmp
daa
mov
add
push
lret
divb
repnz
mov
mov
ja
and
push
js
adc
pop
push
cwtl
inc
cmp
dec
mov
ja
ffree
pop
in
callw
adc
out
mov
sarl
inc
add
scas
cmp
sbb
cmp
fcomip
adc
cmp
or
pop
fsubrl
push
ja
andb
or
inc
dec
xor
cmpsb
addr16
lcall
movsb
add
es
or
push
or
cs
push
lods
aas
outsl
inc
ffree
stos
dec
adc
push
mov
sbb
or
pop
je
dec
jecxz
jg
adc
ret
pop
adc
cmp
xor
outsb
cmpsl
inc
and
push
xor
sahf
pop
xor
fcmove
movl
orl
jg
or
mov
adc
mov
lcall
xchg
sub
repz
sub
rol
imul
cltd
push
popa
pop
pop
insb
arpl
lahf
mov
xchg
sub
adc
dec
pop
out
mov
pop
jne
pop
js
imul
cmp
sarl
sbb
dec
test
lahf
mov
das
ficompl
movsl
jb
pop
push
test
jmp
aaa
stos
fsubs
ret
das
push
sub
arpl
push
mov
add
xchg
push
lea
add
dec
cmp
mov
mov
mov
lods
loope
xchg
sub
mov
jg
add
punpcklwd
movsb
dec
in
push
inc
sbb
or
dec
cmp
jg
test
mov
int3
ss
push
or
rcr
out
arpl
dec
pop
push
mov
mov
xchg
aam
jle
mov
outsl
ret
arpl
lods
lret
sbb
push
mov
pop
fwait
ss
int
cmpsl
mov
sti
orb
mov
cmp
or
lock
insb
or
cmp
add
cmp
jne
int
cltd
lods
or
test
iret
fdivl
icebp
xor
push
adc
mov
insl
fists
mov
outsb
roll
cmpsb
add
shll
xor
mov
xchg
xchg
out
rcrl
shlb
cmp
push
sarb
mov
test
lahf
iret
cmc
jl
and
cmc
jbe
popa
sub
jbe
arpl
mov
pop
or
sub
out
xchg
sub
xor
mov
push
mov
ret
clc
in
pop
movsb
cmp
cmc
cmp
add
lea
cmp
dec
in
cmp
mov
or
mov
xchg
or
lds
xor
dec
in
jb
dec
mov
int
insl
stos
or
sbb
sbb
lds
movsl
dec
jo
aad
and
rcrb
lods
aad
sahf
pushf
push
cmp
push
push
out
adcl
sub
push
out
fstpt
or
std
jbe
push
aad
push
pop
jbe
sbb
push
mov
cli
jecxz
data16
or
xchg
xchg
stos
shl
mov
adc
cmp
add
xor
nop
iret
into
sbb
add
es
sub
cmp
push
in
xor
popf
dec
jno
shrb
push
pushl
mov
sbb
cmc
in
fsubl
sti
dec
in
ret
sbb
dec
loopne
fdivrs
fisttpll
fnstsw
add
dec
fcos
mov
jge
sub
pusha
mov
mov
std
jge
adc
ret
sub
js
les
jle
sbb
sbb
fs
xor
pop
arpl
mov
out
pop
mov
call
iret
push
cmpb
mov
std
xchg
daa
ret
outsl
push
push
popf
xchg
mov
and
lret
outsl
dec
jg
ret
stos
pop
mulb
mov
xchg
pop
push
sbbl
jl
jb
lea
jmp
into
cmp
push
mov
or
pop
mov
cld
movsb
and
mov
xchg
lock
repz
lds
int
cltd
movsl
push
inc
stc
push
jnp
pusha
inc
lret
dec
fcomip
sbb
jmp
inc
idiv
cmpsb
mull
and
mov
ljmp
or
ss
insb
fbld
fildll
and
jne
out
stos
jae
mov
ljmp
pushf
ds
pop
push
or
shrb
jmp
dec
loopne
or
outsb
popa
insb
lock
xchg
sbb
jae
shll
cwtl
popf
ror
cs
iret
dec
sub
popf
jns
js
dec
scas
call
outsb
es
mov
cmc
pop
insl
push
fmull
test
jnp
in
stos
es
cmp
popf
pusha
fcomp
sarl
jno
insb
stos
or
out
xchg
or
clc
in
in
pop
in
es
int3
xor
mov
pushf
bound
mov
shlb
in
fistps
nop
cld
cmc
sbb
shll
popf
insl
movsl
loopew
lds
call
repz
shll
xchg
cmpsl
and
xchg
add
es
repz
mov
rorb
mov
scas
add
sub
push
xchg
pop
mov
pop
lret
aam
adc
bound
jp
mov
in
fucomp
pop
flds
inc
jmp
hlt
mov
or
push
int3
hlt
dec
mov
icebp
pop
jns
pop
fisubrl
mov
and
sub
pop
out
out
push
movsl
fbstp
loope
add
cltd
xor
loop
cmp
xor
cmc
sub
jns
mov
ret
outsb
cli
push
mov
lcall
lret
mov
and
shl
add
sub
mov
andl
or
dec
pop
popa
clc
js
mov
add
addb
push
in
inc
mull
jno
jle
dec
pop
pop
addl
cltd
rclb
std
aam
xor
stos
in
in
sti
pop
call
and
jnp
out
outsl
pushf
popf
xor
adc
mov
or
aas
pop
adc
sbbb
sbb
fs
sub
push
ja
bound
lret
insb
and
popa
int
xchg
aad
pop
mov
fsubp
dec
ret
sub
in
mov
cmc
icebp
int
pusha
pop
mov
notl
gs
stos
pushf
scas
roll
mov
push
xchg
add
or
out
cmpsl
mov
dec
fldl2t
cmp
dec
movsl
jp
das
outsb
inc
adc
inc
sbb
mov
mov
and
into
jno
enter
add
dec
mov
popa
mov
cmpsb
rolb
mov
or
push
fcmove
stos
xchg
pop
test
sbb
fwait
dec
shl
cmp
aam
shrl
bnd
popa
xlat
aaa
push
sub
fldenv
or
jl
push
inc
loopne
xchg
jl
dec
push
cmp
sub
int
sub
test
ret
jns
mov
stos
push
add
xor
pushf
int
pop
pop
insb
mov
mov
add
in
and
testl
ss
cwtl
push
int3
cmp
sbb
xor
out
mov
filds
cmp
in
adc
xchg
xchg
sbb
std
xchg
xor
shlb
add
adc
je
xchg
sub
sub
pop
inc
mov
ret
popl
lock
jl
or
clc
xchg
push
add
cmp
shl
popf
outsl
movsl
stc
mov
adc
sub
movsb
orl
jp
jle
inc
mov
mov
mov
cwtl
cld
into
xchg
test
inc
push
pop
jmp
mov
cmpsl
xchg
cmp
dec
fnstcw
sub
addr16
pop
mov
add
sar
int
test
lret
cltd
dec
xchg
or
jecxz
mov
pop
fadd
call
test
in
mov
cmp
mov
sti
xchg
inc
or
jnp
roll
repnz
or
sbbl
mov
mov
or
mov
pop
cld
ja
push
hlt
nop
jecxz
cmp
addl
lret
sti
xchg
jns
ret
inc
lods
insb
cs
movsl
or
cmp
les
aam
lahf
adc
call
push
push
rorl
stos
pusha
dec
jne
fsubrp
xchg
cwtl
xor
icebp
mov
cmp
cltd
pop
fs
shl
test
jns
js
cltd
mov
sbb
xor
rol
scas
shl
fstpl
push
pop
pusha
ret
add
outsb
sub
in
fcomi
shrl
int
cmp
cmc
divb
cmp
rcrl
sbb
sahf
xor
inc
pop
cmp
je
push
clc
xchg
or
inc
testl
fwait
push
pop
jp
int
ds
push
movzbl
and
je
jnp
imul
pop
andl
adc
test
loopne
pop
insl
fldt
insl
div
lods
lds
sbb
mov
jb
into
shlb
cld
cmp
sbb
mov
enter
xchg
fs
lock
movsl
jb
inc
and
mov
jbe
in
test
int3
arpl
lods
repz
sahf
mov
sahf
push
push
orb
cmp
insb
cmp
fisttpll
mov
cmp
mov
outsl
cmp
lods
inc
outsb
loope
inc
jo
pop
addb
dec
lcall
das
clc
popa
sbb
sbbl
and
iret
testb
rcr
clc
push
fisubrs
mov
scas
mov
testb
in
pop
icebp
add
stc
pop
and
push
or
mov
mov
sub
xchg
mov
xor
cli
test
sub
into
pop
or
push
pop
ds
jmp
push
ret
push
sbb
aad
jmp
mov
test
js
jo
sub
lods
sahf
mov
cmpsl
int
dec
sbb
test
push
imul
popf
daa
xchg
add
push
ret
mov
sub
mov
jae
xchg
int
pop
int
dec
dec
lahf
push
mov
xor
jge
jl
aas
enter
insb
std
adc
mov
test
sub
lds
inc
inc
dec
call
dec
out
xor
ljmp
dec
in
add
sarl
mov
xchg
cmpb
jl
pusha
xchg
mov
lods
jo
xchg
adc
shrl
popw
xchg
pop
pop
cwtl
ss
add
js
cmp
inc
fwait
les
repz
adc
adc
cltd
out
xchg
xor
nop
aas
xchg
icebp
aad
lea
xlat
inc
sub
sbb
rcrb
out
mov
add
sub
xor
mov
dec
adcl
dec
xchg
pop
adc
enter
xor
stos
push
mov
sarb
sbb
dec
jl
sbb
adc
mov
test
xchg
icebp
decl
jns
stos
xchg
sub
lods
adc
mov
sahf
jnp
add
dec
bound
jne
in
inc
imul
inc
fisubrl
jl
ss
ljmp
xor
and
mov
sub
jb
fdivrl
pop
add
daa
loopne
sub
test
popf
stos
mov
shr
cmpsl
xlat
cmc
fcomps
jno
sub
jbe
int
ds
xchg
push
mov
push
inc
ret
test
jno
scas
xchg
dec
sbb
mov
jmp
aas
int3
sub
pop
sbb
sub
mov
add
cs
imul
cmp
into
sub
add
dec
sub
dec
movsl
icebp
inc
mov
fcmove
push
cmpl
cmp
lret
mov
push
jnp
mov
rclb
movsl
adc
push
stos
adcb
xor
cmp
imul
sbb
mov
sbb
adc
in
mov
rorb
int3
push
in
insl
xor
fists
in
aam
mov
adc
dec
enter
adc
movsb
jae
popa
add
dec
sub
rclb
enter
fwait
mov
jl
push
xchg
inc
cmp
mov
push
mov
mov
mov
push
or
push
push
inc
test
fidivrl
xchg
mov
mov
insb
filds
xrelease
aad
rclb
and
mov
fmuls
cld
call
int
or
inc
inc
pusha
cltd
inc
filds
int3
sub
pop
sbb
rcrl
sbb
or
xchg
dec
sti
test
sahf
xchg
icebp
sbb
or
loopne
out
jnp
out
inc
in
or
mov
mov
and
or
xor
and
push
mov
enter
gs
leave
sti
push
clc
and
es
scas
pop
clc
adcb
dec
inc
mov
ud2
pop
roll
sarb
adc
cmpsl
aam
push
inc
pop
js
mov
and
inc
pusha
ja
pop
out
aaa
sahf
scas
inc
hlt
sub
mov
jmp
cs
jle
movsl
in
dec
push
ljmp
cmc
mov
lret
ja
leave
pusha
push
int3
mov
dec
fs
sbb
mov
sbbb
lcall
dec
adc
andl
or
sub
jecxz
cs
fs
or
aaa
lock
outsb
cmc
add
push
inc
in
pushl
out
cmp
xchg
out
push
rcll
testl
out
jb
std
xchg
mov
and
sub
inc
pop
mov
out
loop
fidivl
cmpb
jge
cmp
xor
xchg
sub
push
push
scas
out
adc
inc
setnp
int
insl
xor
test
and
cmp
mov
cmp
movsb
jmp
paddusw
fld
into
lret
or
or
test
push
pop
std
outsl
loop
int3
push
mov
or
fsts
hlt
cmp
and
xchg
addr16
xor
cli
sub
push
sbb
ds
inc
pop
divl
dec
mov
dec
fidivrs
dec
btc
sbb
xor
pop
insl
mov
xchg
dec
add
adc
int
xchg
pushw
jno
cmp
mov
lods
sbbl
inc
test
fldcw
fcompl
mov
test
in
push
jno
xor
repz
sbb
pop
into
lret
imul
mov
les
mov
aas
aad
add
in
cmpsb
inc
push
mov
push
push
xor
add
push
mov
pop
popf
outsl
add
lods
ljmp
add
xchg
jns
aas
mov
mov
pusha
push
scas
jp
andb
in
test
and
js
ljmp
scas
ficoml
cmp
inc
add
jae
xchg
jb
and
mov
pop
cmp
jmp
inc
adc
mov
push
repnz
push
push
test
fwait
sbb
iret
xchg
xor
xchg
out
leave
test
jl
jle
xchg
fs
sub
push
push
lock
jo
mov
add
movb
insl
xor
in
add
xchg
sbb
adc
or
fwait
jmp
inc
out
mov
xlat
cmp
jge
sub
fidivl
cltd
mov
and
sbb
cmp
mov
mov
adc
stos
push
inc
sub
clc
cmp
repnz
pusha
cmp
in
xchg
outsl
daa
jmp
es
cwtl
dec
cmpsl
cli
mov
sub
out
adcb
push
or
sbb
icebp
xor
dec
roll
in
arpl
fimuls
cmp
jne
andb
adc
fistps
xor
adc
into
fldenv
lock
xchg
dec
sbb
and
mov
xlat
clc
mov
mov
movsl
mov
mov
rcll
pop
aaa
push
sbb
js
adc
into
xchg
push
test
jno
js
pusha
ss
xchg
in
mov
in
jecxz
xchg
rcrb
arpl
jl
scas
xchg
pop
cmpsl
push
ret
js
sub
sarl
mov
jae
add
sub
arpl
sarb
in
int3
add
cs
jae
pushf
les
insb
test
test
stos
lds
push
test
into
mov
int3
pop
cmp
cwtl
and
cld
fstpt
or
adc
add
ret
mov
mov
add
xor
fdivl
inc
mov
dec
mov
daa
and
push
and
mov
mov
sahf
mov
es
jns
jae
loop
cmc
cwtl
popf
shrl
inc
sbb
jle
jnp
xchg
sub
lock
cltd
enter
negb
sahf
fnstsw
std
push
push
push
sub
xor
out
cli
test
pusha
adc
sbb
movhlps
xor
mov
outsl
lahf
scas
pop
orb
lret
aad
aas
adc
adcb
xchg
inc
pop
dec
loop
mov
loopne
inc
mov
loope
push
inc
mov
cltd
loop
out
inc
push
ja
jmp
das
push
outsb
add
cmpsb
push
jp
or
xlat
sbb
jg
clc
cltd
jmp
nop
jnp
shll
outsb
sub
imul
in
add
xchg
aad
idivb
push
adc
lds
sub
rolb
stos
add
or
outsl
lock
and
cmpsb
aad
or
sbb
pop
push
or
pop
mov
aaa
mov
fiaddl
inc
xor
shlb
cmp
push
jle
shll
pop
or
dec
stos
arpl
xchg
insl
aad
add
mov
sbb
insb
jmp
mov
xor
push
push
mov
push
leave
sbb
push
xchg
cmpb
mov
mov
stos
mov
and
test
frstor
xchg
popf
jg
orb
and
pop
std
sbb
imul
sbb
scas
adc
test
das
add
sarl
bound
aam
andb
xlat
sbb
dec
lahf
call
dec
repz
mov
cmp
mov
push
lods
dec
test
add
shll
lods
mov
mov
and
xor
and
or
in
sub
aam
push
lcall
and
xchg
outsl
add
sbb
filds
sub
jle
sbb
repnz
daa
stos
mov
inc
push
insb
cmp
mov
mov
xchg
filds
adc
sbb
inc
aas
bound
rorl
notb
fisttpll
in
jne
lods
mov
scas
inc
int3
fpatan
fnstcw
cmpl
cmpsl
lods
testb
pop
sbb
push
sti
xchg
dec
loop
pop
fwait
push
lcall
rolb
cmpb
or
mov
loopne
ss
shll
mov
cwtl
or
fisubrl
push
mov
mov
out
xor
mov
shl
iret
in
test
pop
outsb
push
mov
xor
mov
and
jne
icebp
enter
out
movsb
add
ficomps
loopne
jb
cmp
jge
test
popf
jmp
dec
add
out
push
call
out
sahf
addr16
xchg
jle
sbb
xor
xchg
sti
movzbl
mov
cmpl
inc
cld
mov
popl
lds
adc
mov
sub
dec
mov
pop
mov
add
pop
pop
adc
mov
xor
mov
inc
clc
lds
xor
fbstp
mov
xchg
test
cmp
cmc
mov
clc
or
lods
das
sub
adcb
je
xchg
gs
stos
es
or
rcrl
sub
adc
arpl
dec
cmpsl
out
jmp
outsb
push
cs
inc
pusha
je
repnz
jno
jecxz
hlt
adc
je,pt
inc
rcl
ljmp
fimuls
cwtl
and
cmp
cmp
shl
ja
cmpsb
jne
or
jns
sbb
jl
jnp
add
inc
test
aas
jnp
clc
mov
mov
push
sbb
iret
js
push
sbb
sub
jns
mov
ja
mov
stos
sub
jle
mov
xor
out
xor
adc
sub
add
and
stc
or
icebp
adc
loopne
ret
pushf
sbb
outsb
mov
addr16
jge
cmp
dec
mov
outsb
sahf
test
mov
sub
or
in
int
mov
out
fs
jle
inc
fstpt
bound
fstl
js
push
adc
dec
adc
jge
or
and
and
mov
jb
push
add
pusha
neg
mov
push
sub
mov
int3
dec
in
test
leavew
into
aam
dec
aad
mov
pop
xchg
sbb
and
pop
cmp
in
jle
adc
dec
and
push
lds
cmc
push
xor
adc
jns
loope
cmpsb
adc
add
mov
jno
les
xchg
hlt
add
mov
lods
mov
jmp
jge
dec
mov
dec
fdivr
jne
dec
mov
mov
fimull
ret
fwait
sti
test
sub
mov
movsl
jnp
mov
add
outsl
adcl
iret
data16
imul
fdiv
sbb
jo
sahf
movb
inc
fiadds
xor
xor
in
mov
nop
xor
pop
insb
mov
rcrl
jmp
mov
mov
in
loopne
arpl
inc
jno
xor
cmp
dec
imul
push
icebp
and
aas
shr
mov
fnstenv
aas
out
mov
push
xchg
cli
imul
pop
add
bound
test
dec
imul
mov
fwait
mov
mov
sbb
pop
repz
add
sub
addr16
faddl
rcrl
pop
mov
jl
jo
sahf
sub
les
and
xchg
push
addr16
adc
sub
fucom
ja
testl
jae
lods
jg
cwtl
lods
addb
pop
in
adc
mov
fistl
xor
or
cmp
and
cld
or
and
push
daa
cli
or
testl
jne
fiadds
sub
movsl
mov
test
sahf
push
call
adc
je
iret
fdivrs
std
inc
pop
add
or
inc
add
mov
or
imul
pusha
add
insl
inc
call
dec
fsubrl
sub
in
pop
scas
sbb
cmp
nop
popf
push
pop
adc
cmpl
mov
jnp
stos
mov
push
sbb
popf
mov
jns
cmp
out
loopne
loopne
mov
dec
data16
xchg
inc
push
or
int3
add
popa
pop
pop
lret
mov
fisubs
inc
rcrl
add
push
mov
nop
cmc
pop
pop
repz
push
pushf
xor
push
push
mov
mov
jns
push
movsl
mov
test
mov
mov
mov
push
sbb
pop
mov
call
or
cmp
cmpsl
clc
ror
stc
je
lea
add
andl
repz
cmp
cmpsb
jp
jno
push
ljmp
notb
test
push
mov
rcl
mov
push
cmc
mov
stos
ret
daa
sub
sbb
les
sbb
out
xchg
leave
or
mov
sub
and
jne
mov
lods
shlb
loop
cmc
repz
inc
jle
sbbb
or
pusha
sub
js
pusha
xchg
dec
loop
mov
je
dec
imul
add
jo
aas
test
sar
mov
lcall
add
pop
in
icebp
adcb
test
lods
cmp
or
or
mov
push
enter
test
aam
sub
cmp
frstor
push
inc
jge
fimuls
negb
push
mov
or
lds
push
lds
push
xchg
ss
ret
mov
int3
into
cmp
sub
cmp
or
sbb
pop
or
addr16
repnz
pushf
test
mov
push
lods
cmpl
xchg
add
cmpl
ds
shll
imul
add
mov
jp
arpl
or
push
mov
pop
lods
hlt
mov
daa
mov
stos
je
popl
or
and
jge
xchg
xchg
xchg
out
pop
add
scas
sbb
push
mov
daa
and
ret
mov
or
loop
xor
out
jb
lds
xor
lret
data16
jge
inc
mov
mov
ds
scas
or
push
out
je
push
mov
fsts
add
insb
outsb
cmp
jle
dec
imul
pop
push
ds
pushf
pop
iret
xchg
test
ds
xor
out
aas
dec
pop
ljmp
lods
lods
pop
aad
sbb
int3
xlat
shll
in
movsb
mov
push
jge
mov
test
lea
xor
mov
mov
inc
or
insl
adc
shrb
outsl
xchg
ja
sahf
add
and
mov
push
sub
in
mov
pop
or
xor
inc
sbb
divb
insb
pop
fbstp
add
in
adc
popf
pop
out
pop
mov
mov
mov
in
aam
push
cli
mov
and
xor
jnp
rclb
mov
xor
add
xor
and
sbb
xchg
inc
inc
dec
fnstenv
jge
inc
es
xchg
add
out
add
filds
cltd
pop
sub
jmp
cmp
push
das
ficompl
mov
add
popa
jns
adc
pop
push
cmc
fldl
sbbl
inc
add
leave
mov
pop
ljmp
in
popf
addb
mov
punpckhdq
or
add
jnp
cmpsb
inc
fs
pop
movsl
xchg
outsl
xor
lea
add
push
mov
mov
and
movl
cmpb
incb
out
mov
in
in
dec
ret
or
mov
pop
jns
cmp
fadd
scas
fcomps
pop
jae
push
mov
aaa
mov
test
or
ficoms
ljmp
inc
pusha
add
aaa
adc
cmpsb
mov
int
cld
mov
leave
scas
cmp
stos
mov
ljmp
ret
das
lret
dec
hlt
push
test
sbb
push
leave
mov
enter
clc
outsl
icebp
aam
mov
dec
or
push
push
imul
xorl
or
jl
inc
pusha
data16
movsb
xchg
arpl
pop
lahf
mov
lret
jmp
mov
outsb
ds
ss
imull
cmp
pop
mov
or
mov
sbb
inc
xchg
ss
mov
aad
fiaddl
pop
jecxz
cmp
jbe
mov
push
dec
mov
js
mov
scas
inc
cwtl
testl
fstps
mov
fstpl
out
cli
xorb
outsl
cmpl
dec
lds
aad
addr16
in
adc
mov
ds
out
shll
inc
xor
xlat
scas
loopne
pushf
inc
cs
xor
or
mov
adc
scas
or
push
add
xchg
push
add
inc
rcrl
and
dec
inc
xlat
fsubrs
xor
int3
push
aas
sti
jmp
pop
xor
lods
rolb
dec
push
xchg
lods
xchg
add
cmp
pop
mov
mov
jl
pop
pop
adc
lds
jno
dec
fcomps
push
xor
test
mov
push
sahf
push
xchg
mov
stc
pop
aaa
fnsave
and
xchg
jno
inc
sti
outsb
jne
cld
cmp
and
std
loope
and
bound
push
lret
out
andb
into
push
pop
jbe
sbb
lds
dec
mov
test
or
imul
iret
sub
imulb
lret
xor
sahf
jns
sarb
xchg
sbb
dec
popf
insb
mov
int
adc
mov
jecxz
jo
shl
outsb
and
xchg
push
ljmp
add
sub
inc
cmp
adc
inc
insb
jle
push
repnz
adc
int3
jg
iret
cmp
repnz
mov
adc
xor
dec
in
mov
mov
setl
pop
ja
push
cmpsl
mov
fcmovnu
clc
sub
mov
adc
and
scas
fldln2
jp
sbb
mov
cmp
adc
add
mov
fidivs
jo
lahf
loope
cld
xchg
and
lahf
add
mov
sti
mov
std
xchg
fisubrl
lds
xchg
dec
jg
jmp
xchg
repnz
mov
lcall
cmp
sbb
pop
into
mov
mov
push
or
mov
jmp
push
dec
adcl
pushf
lea
cmp
mov
bound
push
push
cmp
push
dec
in
les
push
mov
int3
mov
mov
cmc
adc
rclb
and
mov
stc
push
inc
push
addb
test
scas
and
int
pop
rorl
cmpsb
andl
jns
sti
push
push
add
incb
dec
add
xor
dec
icebp
or
xchg
std
xchg
popf
rorl
and
arpl
es
or
jle
jne
xchg
das
in
dec
dec
pop
inc
xor
fwait
adc
adc
push
xor
bswap
pop
dec
mov
pop
jo
mov
mov
and
lret
mov
xchg
sbb
cmp
daa
jg
xor
jmp
cmpb
inc
mov
or
inc
xchg
dec
pop
shr
xchg
and
pop
out
sbb
in
sti
inc
fists
data16
mov
stc
sub
in
jnp
pop
inc
cmp
dec
dec
cmp
roll
sub
mov
push
cmp
push
cs
test
cmc
jbe
incl
add
aas
shrl
push
js
ja
les
fnstcw
dec
sbb
pop
mov
in
inc
shr
aaa
or
cmp
mov
push
jbe
hlt
adcl
sbb
push
imul
sbb
push
mov
scas
into
jg
imul
xor
ja
shl
out
jns
loop
xor
loop
xchg
fwait
sbb
xchg
int3
aaa
cmp
and
mov
mov
jle
inc
repnz
pop
or
cmp
sub
orb
hlt
daa
dec
mov
cmc
inc
leave
sbb
sbb
xchg
sub
popa
cmp
je
mov
mov
cli
jnp
in
jns
push
dec
loope
outsl
subl
jge
test
negb
out
dec
insl
sub
and
nop
jp
jecxz
sahf
das
in
lea
repz
fsubrl
push
dec
sti
pusha
jge
xchg
dec
mov
push
jecxz
push
jp
xchg
mov
mov
cmp
cmp
scas
push
out
xlat
imul
mov
hlt
dec
push
jmp
insl
sahf
call
push
jmp
add
adc
push
or
inc
mov
pop
hlt
push
negl
mov
shrl
inc
xor
jbe
es
fisttpll
lods
sbb
ret
shll
jnp
and
movsb
mov
popa
pusha
fisubrs
clc
mov
fdivl
xchg
adc
cltd
test
lods
fbstp
int3
push
leave
repnz
test
or
sarl
cmp
push
lds
iret
scas
fucomi
fcomip
andb
rol
push
pop
subl
adc
xchg
bound
sub
cmp
dec
fisttps
fldenv
xlat
setne
orb
icebp
movsb
out
push
test
jae
push
ljmp
inc
ljmp
in
and
mov
sbb
icebp
adc
mov
mov
leave
loopne
loope
adc
call
pop
push
stos
lds
gs
punpckhbw
jg
inc
sbb
pop
imul
mov
js
mov
mov
mov
pop
and
cld
adc
testb
incl
jo
sbb
jecxz
mov
ret
xchg
pop
xor
dec
mov
cld
jge
mov
push
pop
xchg
xor
dec
dec
mov
aad
shl
xchg
add
clc
int3
fadd
dec
loop
stc
dec
pop
das
fldt
out
dec
xchg
rorl
in
push
cmpsb
sbb
outsb
std
mov
pushf
mov
add
stc
pop
hlt
addr16
mov
adc
iret
andb
ljmp
push
mov
mov
mov
lret
xchg
dec
js
and
adc
lea
jo
cmp
dec
add
mov
stos
adc
mov
dec
mov
orb
mull
xchg
test
decl
int
in
pusha
mov
push
pop
pop
fstpt
bound
ja
test
xorb
lds
adc
inc
fcompp
cld
rcrl
in
xor
loope
out
dec
xchg
push
dec
stos
ds
xchg
mov
mov
cld
pop
xchg
mov
sbb
int3
lret
inc
cwtl
daa
bound
fadd
pop
pop
aaa
adc
imul
adc
test
popf
xor
pop
cltd
inc
cmp
xlat
and
push
test
jbe
and
sbb
enter
sbb
fmull
xchg
sub
imul
mov
mov
jbe
lods
mov
rcll
mov
je
nop
adc
int
mov
icebp
cli
adc
cmpsl
popf
mov
sub
push
pop
xchg
dec
scas
idivl
test
stos
mov
cwtl
stos
mov
push
push
nop
fsubl
movb
lcall
test
not
mov
pushf
cmc
aam
loop
push
and
sbb
std
mov
fdivrl
xor
mov
adc
push
lcall
push
std
xchg
mov
dec
out
into
pop
int3
dec
mov
lods
popa
and
jbe
call
cmpsl
pop
mov
mov
dec
and
fnstenv
add
mov
adc
jle
fwait
stos
inc
int
sbbb
push
mov
dec
jmp
pop
mov
sahf
cmp
clc
add
jo
pop
push
out
dec
inc
jb
outsb
aad
xchg
leave
pop
xor
out
negb
cmpsl
rclb
add
es
sahf
stos
rolb
in
dec
mov
repnz
insb
add
test
and
mov
fsubl
mov
jns
push
pop
cmp
push
aas
int3
mov
push
or
pop
pushf
pusha
cmp
idivl
add
out
xchg
adc
inc
pop
int
or
imul
cs
sbb
enter
lods
jmp
pusha
sbb
movsl
or
cs
and
or
bswap
fisubs
xchg
jge
dec
jle
mov
jge
or
xchg
or
sub
xor
jle
fbstp
ljmp
or
xchg
out
push
imul
xor
sub
jo
xchg
test
cmpsl
loope
xor
push
popf
fcmovbe
jp
dec
dec
jno
cmp
fistpll
ljmp
ds
lahf
in
xchg
arpl
fisubrl
out
cmc
mov
add
adc
mulb
push
xchg
jns
jae
cmp
data16
push
imul
or
jo
call
aaa
pop
mov
xchg
imul
icebp
xchg
aad
mov
or
cmpsb
cmp
aad
push
fcmovnb
pop
adc
push
aas
xor
jns
fisubl
mov
or
gs
push
lret
out
clc
popf
fisubs
jo
daa
in
and
xchg
bound
adcb
andl
lcall
pop
es
fistpl
pop
fcompl
adc
clc
adcb
adc
cs
inc
popf
inc
pop
xchg
ficomps
and
and
cld
nop
jno
ret
inc
adc
loopne
notl
pushf
inc
ss
ret
lds
mov
pop
in
orl
or
andb
fwait
aas
jb
or
insl
sbb
out
mov
xchg
xchg
and
jg
int3
xchg
lods
jb
pop
sahf
iret
xchg
ret
rorb
push
push
into
shll
in
ds
repz
and
mov
sbb
sub
addr16
mov
leave
int3
cmp
lds
and
imulb
mov
jle
inc
mov
sarl
hlt
jns
inc
inc
mov
lods
xchg
sub
jge
and
stos
mov
je
mov
stos
mov
sub
jns
lahf
loop
add
test
mov
jo
lret
shr
push
mov
stos
xchg
out
lds
mov
js
outsb
mov
pusha
mov
and
push
inc
negb
mov
and
pop
fsub
cmp
int
fdivrl
sub
ss
addb
jne
insb
add
lcall
imul
fsubl
mov
mov
das
pop
xor
popf
repnz
jnp
cmp
mov
sbb
insb
and
add
inc
jmp
adc
dec
cli
ret
rcl
test
pop
push
stc
xchg
mov
fs
fistpll
in
inc
xor
cld
js
or
xor
dec
mov
in
pop
xor
jle
sarb
lahf
js
in
in
push
jns
push
in
aaa
sti
idiv
or
sbb
add
imul
add
clc
cmc
or
and
dec
loope
subb
mov
mov
or
aam
mov
cmc
icebp
dec
adc
or
lret
sbb
push
mov
sub
sub
sti
mov
in
nop
test
fldcw
or
pop
ret
repz
mov
fcmovbe
fsubr
mov
sbb
decb
stc
xchg
jnp
aad
cld
pop
aam
inc
inc
jb
jle
pop
cmp
mov
mov
fimuls
dec
jecxz
push
dec
sahf
cmp
test
fbstp
sub
jl
add
popl
cld
cmp
xchg
int3
push
ja
out
push
jne
mov
aas
jecxz,pt
test
jmp
repz
jmp
xor
add
jp
rcll
adc
notb
call
mov
adc
stos
mov
mov
sub
inc
pop
mov
sbb
loop
xor
push
or
test
sbb
xchg
mov
dec
repz
lods
xchg
std
es
fs
cmc
inc
enter
jge
mov
and
stos
cmp
pop
imulb
mov
or
add
mov
sbbb
dec
pop
lret
dec
arpl
mov
in
inc
dec
data16
test
aas
lret
inc
jecxz
rcl
loop
dec
and
inc
pop
xchg
lcall
adc
mov
mov
imul
mov
dec
cmc
cmc
dec
iret
cmp
sub
loop
je
rolb
sarb
out
pop
mov
sbbl
arpl
imul
xchg
cwtl
mov
orb
xor
imul
xsha1
cmpsb
dec
ds
sub
loopne
addb
cmp
add
dec
sub
lods
adc
xor
shll
pop
adc
cmpsb
out
fcomp
mov
dec
dec
xchg
cs
leave
in
pop
ds
inc
push
and
lods
jmp
dec
mov
addr16
xchg
xchg
or
pop
and
lcall
in
adcl
add
inc
xor
test
loopne
adc
mov
xchg
cmc
insb
mov
or
enter
in
lock
push
and
cmp
push
testb
cmc
sbb
dec
push
cwtl
psraw
xchg
cs
dec
mov
fwait
pop
and
mov
inc
inc
fwait
movsb
jecxz
movsb
das
pop
adc
imul
idivb
xchg
addr16
sub
push
gs
mov
cmc
sahf
into
push
test
js
ja
stc
stos
fildl
arpl
inc
into
rcr
imul
ds
shl
aam
dec
sbb
ret
mov
sbb
or
lds
xchg
add
lret
cmp
jne
ret
xchg
push
cmpsb
mov
jl
cmc
cmp
lcall
call
xor
mov
xor
and
pop
pop
ret
test
repnz
cmp
add
negb
loope
mov
jge
es
mov
iret
es
sub
jno
lods
shlb
push
and
mov
fdivrs
push
pop
jbe
in
outsb
rcll
clc
mov
aam
push
shlb
mov
xor
gs
push
in
jg
push
add
test
mov
test
and
xchg
into
and
imulb
cmpsb
std
popf
push
je
out
fisubs
xchg
movsl
mov
mov
es
scas
cs
inc
test
sbb
xchg
ja
sbb
mul
popa
jg
bound
gs
shl
repz
js
mov
sbb
out
jnp
int3
movsb
ret
je,pt
jae
xor
inc
push
loopne
andl
arpl
into
into
out
arpl
aam
rol
pop
shlb
push
call
and
faddl
daa
jle
pop
icebp
jl
cmc
or
mov
adc
scas
scas
mov
adc
mov
xchg
jno
cli
hlt
fnsave
inc
lret
sti
push
mov
xchg
xchg
std
out
cli
lahf
and
scas
sub
adc
test
inc
mov
mov
sbb
push
lods
mov
inc
cltd
loop
xor
and
pop
or
jbe
popa
xor
inc
daa
mov
xchg
xor
in
or
pop
out
mov
les
sub
xor
jbe
pop
jmp
pop
lret
bound
and
nop
jnp
pop
xchg
jb
and
ljmp
arpl
cmp
test
lods
push
call
iret
idivb
sbb
out
inc
sbb
fadds
in
fstps
jnp
add
nop
jnp
mov
pop
pop
arpl
rolb
mov
dec
jp
xchg
test
xor
sbb
call
shlb
inc
dec
icebp
mov
call
gs
nop
xchg
ljmp
out
cmp
mov
dec
hlt
insl
sub
xlat
pop
cmp
jns
fildll
pop
dec
and
imull
push
rclb
lret
dec
jb
cmc
jecxz
mov
pop
ds
pop
xchg
lahf
repz
out
and
popf
lods
xchg
inc
inc
xchg
insl
fidivrs
cmp
pop
loope
xchg
sbb
pop
xor
xchg
fs
inc
xlat
add
outsb
mov
shlb
cs
out
dec
gs
push
call
pushf
or
call
fs
test
xchg
nop
add
xchg
mov
and
in
aaa
test
cwtl
mul
inc
push
out
out
enter
shr
xor
pop
mov
and
loop
flds
lea
loopne
inc
pop
or
lret
jp
and
hlt
mov
and
and
lock
sub
leave
xor
and
test
push
fs
adc
adc
sahf
jne
add
push
dec
fidivrs
shl
dec
mov
mov
fisubrl
cmp
pop
test
sub
fidivrl
mov
add
adc
fcomps
fisttpll
inc
pop
in
pop
mov
scas
inc
aam
cmp
jle
pop
mov
or
add
ljmp
push
bswap
je
andb
lahf
shll
sbb
xlat
cmpsl
cmpsb
jbe
pusha
jbe
pop
leave
setns
mov
shrb
adc
push
leave
jo
jle
mov
stc
pop
push
lret
sub
loope
cmp
out
lock
out
shl
adc
xchg
or
jns
inc
stos
stos
pop
cmp
repz
push
sbb
push
xor
cmp
adc
imull
inc
jle
test
outsb
inc
inc
push
jb
fiaddl
xor
hlt
or
inc
pop
sub
fsubl
ret
push
cmpsb
lea
shll
out
decl
or
push
shrl
movsb
jg
cwtl
lods
or
cmp
xchg
cs
jnp
mov
mov
scas
lcall
in
outsl
push
jbe
ret
icebp
sub
add
jbe
cmpsb
ffreep
fldln2
dec
pop
pop
in
test
out
aas
sahf
in
mov
jo
pop
xchg
cs
push
imul
sarl
sub
jp
sub
mov
xchg
sbb
mov
push
add
lods
popa
mov
xor
imul
ljmp
out
inc
outsb
pushf
pop
mov
lahf
and
punpckldq
lcall
in
ja
inc
fimull
cs
insl
ficomps
push
cltd
inc
clc
test
clc
sahf
or
insb
dec
aas
call
mov
ret
xchg
push
or
adc
pusha
insb
lret
std
xchg
scas
inc
stos
add
dec
cmpsb
sbb
mov
mov
cmp
mov
or
repz
js
test
fistpl
sub
or
pop
or
ljmp
xor
push
and
out
scas
xor
and
jle
pop
daa
int
outsl
xor
push
cltd
imul
mov
xor
pop
xor
adc
and
imul
mov
ljmp
mov
fwait
add
in
xor
scas
sub
stc
mov
mov
or
push
cmpl
scas
lea
testb
xor
mov
sbb
ret
and
xor
insb
sbb
mov
daa
cmp
pop
xor
dec
sbbb
test
cmp
insl
mov
loop
sbb
ds
mov
flds
rcl
pushf
mov
shlb
cmp
jle
fidivs
add
cmp
adc
inc
jg
mov
dec
jno,pt
clc
inc
cmc
inc
cli
dec
push
jae
mov
mov
test
jns
inc
popa
repnz
stos
addr16
popa
adc
mov
ret
sbb
in
fiadds
or
mov
and
mov
movsl
clc
repnz
test
xchg
pusha
ss
pop
in
rorl
test
adc
and
insb
mov
call
fisttpll
and
pop
jno
mov
pop
mov
aam
lods
dec
dec
mov
pop
sub
xor
cmp
jle
call
sbb
mov
out
xchg
into
dec
std
xchg
cmp
pop
cwtl
ret
sub
xlat
outsb
dec
lret
cs
cmc
dec
cmc
push
les
xchg
shll
sub
cmc
cmp
nop
lea
sbbb
xchg
clc
ja
sbb
outsb
int3
aaa
into
std
ss
or
sub
add
pop
sbb
inc
gs
mov
mov
jg
lods
mull
negb
pop
mov
inc
sbb
div
and
xchg
xchg
lods
jg
call
fldcw
xchg
dec
gs
mov
sub
sub
addr16
pop
sub
mov
add
push
pop
daa
xchg
inc
les
add
mov
sub
or
mov
out
pop
sbb
add
mov
adc
fstpt
stos
mov
into
outsb
add
jl
aam
mov
aam
sbb
mov
cmpsl
shrb
in
mov
cli
add
aad
sbb
aad
mov
sub
mov
add
and
in
pop
adc
movsl
inc
jg
jecxz
mov
clc
or
jmp
loope
cmp
pop
in
adc
ss
fsubl
sub
sti
leave
mov
daa
outsl
cmp
fnclex
or
hlt
lock
icebp
mov
in
loope
mov
xchg
je
sbb
pop
call
in
repz
push
mov
mov
add
add
push
xchg
loopne
sub
out
cmp
jno
scas
add
outsl
xchg
jne
les
xor
pop
push
xchg
fcoml
cmp
sbb
dec
out
popa
lds
imul
or
fdivrs
mov
enter
stos
jmp
inc
mov
cmp
or
mov
orl
popa
lock
mov
pop
outsb
in
sub
xchg
mov
ja
mov
test
mov
imul
test
mov
fstpl
mov
ds
in
xchg
cmp
fwait
mov
xchg
std
adc
mov
jmp
mov
sahf
mov
xchg
aas
bound
ret
lea
inc
push
jo
in
stos
fisubl
mov
fnsave
inc
adc
xchg
sarb
push
jl
dec
dec
stos
jg
lds
in
addl
sbb
hlt
jb
add
mov
pop
cmc
lea
mov
push
xor
int
cmpsb
cmp
js
pop
cmp
outsl
shll
out
mov
jne
xlat
xor
pop
stos
or
and
in
or
push
dec
int3
mov
push
rcrb
cs
outsb
cmp
pop
cmp
pop
dec
dec
flds
sub
pusha
adc
cwtl
subl
mov
ret
xor
dec
dec
inc
in
sub
lods
or
push
ljmp
inc
push
and
das
lcall
cwtl
and
xchg
aam
adc
cmp
pop
dec
dec
add
or
dec
cmp
pop
adc
mov
xchg
xor
out
mov
cmpsb
punpcklwd
mov
mov
outsb
xchg
int3
hlt
cltd
sbb
pusha
add
xor
and
js
add
cmp
push
fsubs
sub
and
cltd
jmp
jb
loope
sub
cmp
enter
in
scas
test
mov
icebp
inc
mov
sahf
es
loopne
add
pusha
sbb
insl
xor
xchg
push
inc
xor
cwtl
pop
fbld
ja
mov
jno
adc
push
jl
pop
testl
data16
cwtl
mov
imul
ficomps
daa
jp
xlat
cmpsl
jae
mov
cli
fldt
push
ret
push
rorl
adc
in
and
cmpsb
aas
aas
incl
mov
sub
andb
call
gs
pusha
in
fmull
stos
jbe
jle
fdivr
mov
pop
jl
pop
cmp
repnz
adc
les
movsl
out
addr16
stos
mov
cmpsl
sbb
arpl
and
test
test
arpl
mov
cmpsb
pop
xchg
adcb
stc
sbb
cs
mov
aas
jmp
stos
adc
pop
cmc
out
mov
movsb
push
xlat
fdiv
pop
lea
repnz
push
cld
mov
into
notl
xchg
jge
pop
pop
jae
fucomi
inc
cmpb
addr16
daa
push
out
or
and
mov
push
outsl
cmc
shll
jg
aad
sahf
lret
pop
pop
in
pop
loope
sbb
or
pop
arpl
sub
push
mov
mov
xor
mov
mov
add
sub
out
xorb
icebp
mov
bound
sub
or
dec
or
rep
cmpsl
ds
sub
add
mov
loop
xchg
jl
mov
in
ret
hlt
or
int3
lret
loopne
stos
add
adc
inc
jecxz
sti
shr
mov
xor
push
cmpsb
lods
cmp
dec
dec
mov
iret
sbb
insl
int3
xchg
sahf
or
hlt
inc
pmaddwd
aam
int
pop
fidivrs
fcmovne
negb
leave
pop
push
push
leave
pusha
orb
mov
call
mov
ret
ficompl
adc
push
xchg
packssdw
ret
xchg
xchg
in
out
mov
pop
sub
aam
jae
cmp
push
mov
fs
add
aas
push
les
xor
sub
add
mov
pop
mov
or
jo
stos
mov
mov
push
das
loopne
cmp
xchg
ficoml
jb
xorb
sbb
test
popf
scas
sub
xchg
into
arpl
in
out
add
std
cmp
int3
hlt
sahf
movsb
testb
push
inc
pop
xor
test
xor
imul
mov
pop
jo
mov
fstl
outsb
outsl
pushf
cld
adc
incb
cmp
dec
arpl
pop
int3
loopne
sbb
mov
cmpsb
clc
sahf
mov
in
gs
lods
das
mov
sub
mov
aad
lahf
jmp
lods
mov
icebp
xor
jno
in
shll
dec
ja
cmpsl
xor
shl
data16
int3
mov
jae
stc
ror
sbb
inc
out
push
xor
decl
xchg
add
add
and
ja
jg
sub
pop
cmp
jle
xor
jno
stc
jnp
enter
imul
add
ljmp
lds
jle
or
pop
jnp
lret
or
test
inc
fprem
in
test
aas
mov
pushf
dec
imul
stos
mov
jg
sub
loopne
inc
test
clc
mov
js
sub
adc
fmulp
push
push
insl
into
push
fwait
and
adc
mov
mov
out
ds
or
insl
subb
push
inc
cwtl
insl
jg
test
lea
mov
sbbl
push
ljmp
xor
inc
xlat
not
aam
outsl
loop
mov
add
or
in
sbb
pop
inc
mov
pop
iret
std
mov
push
iret
adc
dec
lahf
sarl
cmp
aam
cwtl
pop
mov
jecxz
lret
ret
ret
loop
rcrl
sarb
xchg
push
or
push
mov
data16
mov
mov
add
call
inc
fistl
jbe
mov
add
xlat
je
sahf
mov
xchg
sbb
lret
js
push
sti
insl
pushf
scas
scas
sbb
loope
out
add
or
nop
ss
out
test
stos
cmp
mov
adc
mov
xchg
jo
cwtl
and
inc
and
mov
xlat
jbe
shr
rcrb
repz
call
daa
bound
das
out
daa
cmp
inc
add
jne
int
fs
mov
fisubs
jg
sbb
push
and
xchg
inc
je
repz
test
repnz
mov
cli
push
mov
adc
fsts
cmp
adc
fisubrl
mov
xchg
sub
incb
push
mov
mov
push
inc
mov
jmp
push
in
scas
lcall
loop
ss
jecxz
insb
push
aad
incl
xor
and
cld
mov
push
loope
xchg
arpl
inc
mov
mov
jl
rcl
js
lods
inc
cmp
mov
sbb
push
push
xchg
add
sbb
push
out
push
inc
testb
dec
or
dec
sub
dec
pusha
dec
pop
out
cmpsl
shrl
shl
aad
fstps
xchg
enter
loope
sbb
and
push
mov
mov
mov
jnp
add
sbb
push
mov
insl
xor
sbb
inc
mov
iret
dec
hlt
das
scas
stos
lret
xchg
inc
scas
cmp
sbb
push
mov
sbb
inc
jb
iret
and
lcall
cmp
and
test
lods
mov
xchg
in
xor
xchg
push
bsf
test
test
test
mov
je
addb
nop
mov
xchg
sub
aam
aaa
mov
jecxz
bound
pop
or
pop
roll
mov
int
or
ds
imul
dec
mov
sbb
in
incb
out
inc
mov
fcmovbe
sub
mov
rcr
popf
cltd
sti
pop
jl
shrl
mov
jae
insb
int
jp
xlat
shlb
cli
loope
jnp
fmull
shlb
xchg
xchg
lock
cmp
fwait
xor
clc
inc
jmp
fs
sbb
in
pop
daa
cmp
sub
je
jg
xchg
fdivs
or
mov
dec
daa
call
fbstp
push
jmp
inc
mov
subl
loopne
adc
int3
lock
dec
repz
es
sub
xchg
test
sbb
xchg
add
out
sahf
and
xchg
jnp
mov
in
aad
pop
push
sbb
add
sbb
movsl
idiv
mov
dec
push
add
sub
mov
or
jno
pop
sahf
nopl
jo
ret
loope
in
test
iret
orb
sub
out
stos
es
clc
jmp
lea
xor
jg
xlat
fcoms
arpl
mov
mov
roll
pop
add
jmp
hlt
push
shl
jnp
push
ffree
call
test
movnti
mov
dec
xor
mov
out
cmp
xchg
not
inc
and
int3
or
jp
insb
cmpsb
dec
fisttpl
jns
jns,pn
arpl
hlt
and
sub
hlt
shrb
sbb
xchg
add
mov
test
cmp
adc
sbb
dec
fdiv
sbb
cmp
test
out
mov
call
or
inc
sti
int3
shll
aam
or
out
cmc
mov
lods
popl
jge
mov
jno
subb
shl
inc
sbb
rcll
shll
gs
mov
fimull
or
repnz
jecxz
mov
stos
xor
xor
push
mov
mov
mov
sub
out
ficoms
mov
pop
cmp
inc
popf
ljmp
js
cwtl
push
ljmp
xor
xlat
popf
mov
nop
and
pop
aad
pop
insl
lds
pop
xchg
add
pop
xor
pop
push
inc
or
cld
lahf
jmp
lods
fdivrl
jmp
out
pusha
xor
adc
jne
xchg
ret
sub
xchg
or
push
cld
cld
pushf
lods
ds
sbb
xchg
mov
push
push
into
call
in
or
inc
dec
stc
nop
jnp
inc
out
ja
lcall
push
jl
jle
inc
leave
push
add
out
adc
dec
ret
mov
stos
out
lds
loop
push
in
cs
testl
hlt
jge
fdivl
mov
rol
pop
push
into
pop
enter
xor
arpl
mov
dec
mov
loop
jl
inc
andl
xchg
xchg
xchg
fadds
lea
das
test
sahf
inc
inc
pop
ja
add
imul
out
lods
gs
jo
mov
bound
add
xchg
cmc
lea
mov
fldt
mov
mov
dec
mov
je
shlb
negl
mov
cmpsb
cmp
cmpsl
test
call
cmp
adc
mov
mov
xchg
and
mov
jle
inc
sub
dec
iret
mov
in
movsl
adc
outsb
divl
std
pop
xchg
xchg
add
cli
adc
scas
push
jge
shlb
imul
xor
inc
dec
lods
call
jg
sahf
out
fldcw
out
popf
push
stc
xor
lret
cmc
lds
xchg
inc
xlat
jmp
pop
sbb
inc
lds
dec
repz
sub
jno
cmpsb
adc
xchg
push
and
sbb
mov
aas
int
mull
inc
sub
xchg
add
xor
push
jp
cmp
out
insb
cmp
xor
hlt
jcxz
xchg
mov
cmpsl
cmp
imul
mov
lock
jmp
addb
or
inc
movaps
lock
fsubrs
fwait
rcrl
pop
nop
xor
lds
push
mov
jecxz
nopl
pop
js
xchg
lock
enter
ljmp
cwtl
cmp
test
add
in
test
fimuls
mov
and
cld
lea
fdivs
movsb
inc
adc
jle
imul
pop
add
mov
int
adc
push
out
add
sub
or
add
dec
sub
into
cmp
push
xor
ss
push
ffreep
bound
cmp
push
sbbb
leave
xchg
les
push
xchg
sub
in
movsb
jns
jp
jno
jnp
mov
jae
lock
repnz
inc
fwait
sti
fwait
xchg
loop
pop
and
les
inc
xchg
xor
mov
aam
fbld
jp
mov
push
mov
push
add
xor
outsl
les
clc
push
sbb
shlb
cs
stos
out
inc
ljmp
jno
negb
xor
into
jmp
jae
aad
out
mov
inc
jmp
xchg
stos
rol
push
call
sbb
mov
icebp
sahf
sub
or
sub
scas
add
jmp
pusha
mov
sbb
xor
cmpb
daa
adc
xchg
nop
jbe
mov
push
jge
sub
push
out
pop
sub
sub
pop
fsubs
in
cmpsl
cs
cli
test
pop
push
xchg
popf
repnz
inc
outsb
adc
pop
sbb
out
cld
sbb
jmp
subb
push
lods
in
outsl
mov
lea
cmp
mov
adc
push
out
xchg
in
pop
scas
adc
jnp
shl
in
adc
and
dec
mov
sti
test
jecxz
scas
imul
fsubs
test
push
addb
jbe
pushf
and
fcomi
mov
xor
daa
xor
push
mov
push
adc
dec
pop
outsl
mov
mov
cwtl
jae
lret
jnp
imul
out
lret
mov
inc
in
add
loopne
xchg
dec
rorb
mov
testl
sub
jbe
dec
sbb
mov
ss
lock
scas
pushf
cld
push
out
xor
push
pop
test
test
leave
clc
loop
mov
dec
fwait
pop
jae
pop
xlat
push
push
cmp
gs
jns
aad
mov
sbb
insl
mov
pop
or
mov
aaa
inc
cmpsl
cmp
fcomps
test
sbb
jne
mov
lods
jmp
mov
int
movsb
popa
fmull
popa
mov
stos
add
or
mov
scas
fwait
mov
aad
fwait
aas
pop
std
jnp
cmp
roll
in
dec
mov
mov
test
mov
xchg
insb
test
loopne
mov
stc
xchg
fnsave
xchg
fxch
sub
rolb
dec
add
sahf
lods
adc
loop
scas
cmp
addl
xor
bound
lret
mov
pop
and
push
and
enter
cmc
aaa
insb
stos
push
pop
fistps
xor
aad
pop
or
sub
fldt
pop
cmp
inc
mov
dec
push
pop
jle
xchg
adc
jno
or
gs
cmp
and
fldenv
cmp
xchg
push
rorl
cmp
fsubrp
and
push
or
cwtl
xchg
sub
xchg
mov
add
xchg
add
mov
aam
dec
jbe
dec
mov
and
mov
daa
mov
pop
outsl
inc
dec
push
mov
lret
movsb
sbb
imul
pop
or
cmp
mov
mov
push
push
adc
inc
inc
test
out
dec
in
xor
mov
ljmp
mov
pop
sub
cmpsb
add
inc
jae
punpcklbw
lods
jmp
in
ljmp
xor
cli
daa
xor
sahf
outsl
cmp
add
cmp
push
mov
jnp
ret
cli
inc
adcb
jne
dec
cmp
jmp
popa
pop
mov
imul
sbb
lds
cmpb
fisubrl
jecxz
cmp
mov
push
and
imul
ret
fbstp
loopne
lahf
add
lods
repz
xor
jb
in
mov
xorb
cmpsl
push
rcrb
xor
pushf
cmpsl
aaa
aaa
into
push
dec
popl
out
and
push
mov
mov
jge
xor
in
data16
adc
or
rcll
push
inc
sub
xor
fdivl
mov
push
stos
movsb
lods
inc
fsubrs
push
das
mov
repnz
hlt
push
iret
in
popf
mov
push
pop
arpl
stos
mov
push
cwtl
xchg
sbb
and
xchg
test
mov
xchg
or
mov
pop
mov
mov
and
movsb
or
sbb
push
leave
inc
fcmovnb
mov
pop
mov
mov
cmp
lcall
hlt
adc
aad
mov
jle
xchg
das
inc
js
inc
lds
jmp
lds
add
je
out
lods
loope
mov
shll
rorb
pop
sbb
in
test
repnz
add
adc
iret
sbb
test
std
pop
adc
addr16
fdivrs
or
and
ret
std
mov
and
daa
lret
jmp
mov
adc
inc
dec
or
cld
push
out
aas
mov
pop
pusha
roll
push
call
xlat
and
jle
jb
sbb
ret
jp
xor
jle
mov
imul
push
inc
inc
movsb
ljmp
cltd
dec
or
cmp
jns
mov
sbbb
lods
cmc
mov
jg
mov
or
idiv
shrb
xchg
inc
fdivl
shl
inc
mov
mov
jp
inc
push
negb
cmp
lds
xor
and
ljmp
mov
mov
mov
jo
int
in
ljmp
jl
insb
out
insl
push
test
mov
mov
mov
jno
fwait
xor
mov
lock
jo
aas
push
and
iret
das
mov
loopne
lret
cmc
fld
sbb
mov
mov
jmp
mov
es
cmp
lcall
pop
shl
cmc
dec
pop
popa
fdivrl
dec
mov
push
cmp
aam
repnz
and
nop
push
test
lods
mov
and
jnp
dec
dec
daa
add
out
cmp
call
sbb
xchg
xor
mov
inc
addr16
ljmp
xchg
mov
loope
cld
jnp
xlat
push
push
daa
or
mov
add
adc
add
xor
sbb
mov
xchg
addb
push
pop
cmp
add
push
jne
or
orl
jae
add
mov
imull
stc
testl
lods
cld
int
sbb
je
pop
lods
jmp
ret
push
js
hlt
jl
xor
push
test
sti
loopne
dec
xchg
adc
iret
cmpsb
lods
out
stos
and
aad
jne
fnsave
loope
lret
fs
fwait
ret
and
push
jmp
rorl
mov
push
fnstsw
pusha
pop
or
aas
mov
les
mov
and
cltd
pop
dec
push
or
jne
lret
das
jnp
pop
stos
mov
in
dec
mov
mov
sahf
jp
clc
icebp
mov
mov
pop
xchg
adc
aaa
push
nop
cli
addr16
je
mov
mov
stos
inc
cld
pop
ja
push
shlb
mov
sahf
shlb
addl
inc
loopne
cmp
std
push
movb
ja
fwait
sti
push
outsb
and
fs
lock
movsb
dec
jno
jp
lea
ljmp
pop
shl
dec
add
push
xchg
addr16
out
cld
sbb
mov
mov
fwait
pop
jbe
call
jbe
adc
push
test
mov
ss
jae
adc
jecxz
icebp
jg
inc
mov
jle
test
cltd
cld
mov
ljmp
cld
mov
jo
lods
sub
fnsave
mov
aaa
push
xchg
push
xor
push
stos
jmp
mov
sahf
push
add
data16
lret
leave
les
adc
add
int3
xchg
daa
lock
add
inc
testb
mov
cli
js
mov
xor
dec
dec
cli
sub
sub
nop
dec
fcmovb
sub
ret
and
and
pop
inc
lea
jmp
mov
add
push
inc
jo
jle
cmpsb
adc
out
mov
cmp
sub
fsts
jne
jae
jo
mov
sbbb
adc
in
add
xor
xor
sbbb
incb
int3
into
xchg
inc
push
sub
pushf
push
les
test
dec
repnz
aas
ror
sbb
push
das
movb
mov
sub
setl
les
subb
shrl
sub
mov
cmpsl
dec
push
mov
ret
inc
mov
mov
and
pop
clc
sbb
cwtl
in
cmp
stc
test
loopne
stos
ret
dec
mov
pop
fsubl
repz
or
iret
push
push
jl
ja
xor
outsl
mov
sub
pop
iret
pop
cmp
test
shll
push
pop
repnz
fisttpl
lods
pop
repnz
jge
mov
loopne
movsb
seta
stos
jmp
hlt
inc
xchg
adc
cmpsb
clc
sahf
mov
mov
in
fwait
stos
push
int
jmp
and
bswap
xchg
cmpsb
sbb
pop
icebp
add
xor
mov
js
mov
test
push
cld
lcall
in
or
daa
mov
cmp
hlt
je
call
sub
mov
xchg
xchg
sub
jae
in
or
jnp
mov
push
lods
gs
and
in
test
adc
or
cld
xchg
cmpsb
sbb
mov
insl
insb
lcall
mov
je
mov
mov
or
mov
push
mov
in
cltd
dec
loopne
int
mov
and
xchg
xchg
push
mov
mov
fcomps
stos
xchg
pop
ljmp
fidivrl
lret
lahf
xchg
pop
xor
dec
xchg
ja
loop
pusha
inc
fcoml
dec
loope
fistpl
jmp
dec
fdivl
rcl
lea
dec
sbb
dec
hlt
jl
call
xor
mov
jl
mov
mov
jb
xchg
std
xchg
ljmp
repz
sub
xchg
cmp
sub
addr16
xchg
outsb
add
mov
add
cmp
mov
xchg
dec
and
push
test
dec
std
pop
aad
scas
movsb
repnz
xor
les
pop
mov
push
lret
jmp
orb
ljmp
mov
outsb
adc
cmp
mov
or
sub
in
data16
mov
ljmp
pop
mov
les
ss
cmpsb
pop
call
mov
lcall
lret
mov
outsb
adc
ret
adc
xchg
sub
fdivs
sub
aad
dec
in
add
sub
sahf
or
adc
inc
int
or
inc
sub
and
mov
cmp
lea
test
mov
adc
jo
enter
xor
pop
sbb
cmpsb
mov
push
sahf
into
push
ljmp
sarl
jno
push
ret
sahf
sub
int3
push
lods
std
iret
xor
mov
inc
fldenv
xchg
cli
iret
dec
push
or
imul
test
cmp
pop
cmp
push
fwait
xor
out
aam
xchg
push
sub
sub
repz
roll
sbb
jnp
int
sar
xlat
ror
scas
jb
inc
rclb
push
push
imul
int
cltd
jl
pop
xchg
aam
add
jecxz
stos
adc
pop
cmp
ljmp
repnz
pushf
test
out
push
arpl
in
insl
fldt
sub
sub
mov
data16
inc
jns
xor
pop
out
mov
arpl
push
push
dec
insb
add
out
int
flds
add
mulb
pop
jg
cmpsl
sub
loopne
js
mov
dec
in
std
out
data16
push
fwait
add
mov
gs
inc
xchg
cmpsl
mov
cltd
out
sbb
mov
adc
lret
jb
std
jle
cmpsl
push
pop
jmp
popl
cmp
les
and
pop
ja
outsb
lods
jno
dec
cmpsl
call
dec
les
xor
cltd
insl
xchg
ret
rdpmc
pop
mov
jmp
sbb
adc
sbb
loopne
and
lock
sbb
and
or
xchg
outsl
stos
pop
xchg
pop
jb
rolb
jno
xchg
inc
xchg
xchg
ljmp
stos
mov
xchg
add
aaa
xor
icebp
movsl
sbb
jp
mov
dec
in
cmp
repz
repnz
adc
in
std
xchg
pop
cmpsb
loop
mov
add
mov
rcrl
pop
popf
jnp
aaa
out
in
stc
and
aam
rorl
ds
xchg
add
int3
lret
mov
std
in
or
and
inc
faddl
stos
jbe
lret
sub
sbb
int3
imul
lds
subb
cmp
mov
mov
hlt
pop
cmp
jge
rcll
cmp
stc
jmp
jle
push
mov
stc
jge
mov
push
shlb
xchg
scas
dec
xchg
mov
clc
add
js
cli
mov
jne
dec
arpl
mov
pop
mov
shlb
xchg
xor
mov
clc
outsb
insl
add
cmpsb
sti
mov
jg
dec
inc
pop
adc
jl
movsb
mov
xchg
daa
add
jo
popa
aad
fs
mov
roll
xchg
pusha
test
jno
xor
aas
rorb
out
push
mov
ljmp
sub
dec
jl
xchg
data16
fdivs
fnstcw
int
mov
jo
push
pop
add
mov
dec
xchg
sti
inc
xor
aad
icebp
pop
int
push
ljmp
pop
scas
pop
adc
lret
filds
or
dec
lahf
mov
pop
and
out
and
pop
std
xchg
pop
je
pop
xor
sbb
or
mov
inc
adc
es
lea
or
cmp
pop
outsb
add
ret
push
push
loop
lods
ja
or
mov
mov
lock
movq
add
adc
dec
leave
fidivl
push
clc
xchg
popa
js
dec
mov
cwtl
dec
popa
cltd
cwtl
jle
lret
cmp
jecxz
lahf
in
pop
mov
and
cmp
dec
and
jo
push
jno
xchg
mov
or
daa
fstl
scas
mov
push
int3
in
les
cmp
outsl
insl
add
dec
fstl
les
adc
ja
pop
ds
cs
pop
mov
adc
pop
dec
push
lea
lcall
mov
outsb
ret
sub
repz
loope
les
inc
lret
into
into
xchg
sbb
or
movsl
ds
insb
mov
push
lds
mov
cmp
pop
pop
hlt
mov
xorb
test
xor
es
inc
std
cltd
cmpsl
cmp
popf
out
dec
push
in
jl
popa
clc
cmp
jg
movsl
jle
dec
sub
leave
int
jbe
into
dec
or
hlt
inc
sub
push
ljmp
push
nop
mov
dec
cmp
cmpsl
jns
sub
mov
dec
dec
add
mov
pop
in
int3
mov
push
push
and
hlt
and
push
jmp
inc
mov
shll
push
xor
xchg
push
xor
dec
add
idiv
or
sbb
push
popa
out
mov
dec
adc
or
add
enter
pop
sub
inc
dec
inc
fistps
or
pop
push
test
mov
dec
add
loop
adc
pop
inc
mov
movsl
data16
insl
loopne
mov
adcl
or
imul
nop
inc
or
jecxz
mov
cmp
pop
icebp
add
les
test
fnstcw
orb
bt
int3
dec
inc
xchg
insb
inc
std
cmp
daa
jmp
push
mov
movsb
inc
gs
repnz
fbstp
out
mov
ja
popf
lods
cltd
sbb
add
nop
movsb
stos
decl
mov
mov
xor
test
scas
xor
shr
std
pop
inc
jnp
sub
pop
jmp
enter
std
mov
fisttps
and
xor
pop
add
ja
pop
jae
std
fcomi
loopne
jmp
sti
stos
jg
push
jle
insl
cmc
aam
test
frstor
add
cmp
loopne
adc
data16
sub
mov
pop
les
test
mov
add
push
add
in
xor
dec
pop
dec
cli
adc
sub
andb
mov
dec
adc
mov
nop
addr16
repnz
call
xchg
add
dec
mov
mov
into
sbb
arpl
mov
repnz
int
or
mov
push
push
jmp
pop
inc
dec
adc
leave
mov
push
adc
xor
orb
popf
in
mov
xor
add
pop
cmc
adc
movsb
dec
or
in
call
clc
jae
lock
popf
mov
xchg
icebp
enter
xchg
repnz
xchg
jle
loop
test
lret
out
sarl
jbe
push
call
test
pop
aaa
out
rcll
out
lock
pushl
mov
cmp
icebp
popf
sbb
xchg
fnstenv
cwtl
loope
mov
jmp
push
xor
push
out
je
fidivs
adc
push
rcrl
cmp
sub
fwait
and
mov
and
scas
mov
mov
xchg
xchg
push
es
add
jbe
jp
fwait
aas
xor
mov
cmp
js
mov
fimull
jmp
repnz
cmp
lcall
lds
inc
insl
mov
pop
fimull
iret
icebp
fwait
push
out
arpl
pop
loopne
cmp
push
imul
out
dec
xor
mov
mov
sbb
cltd
cli
pop
ret
testl
pop
das
into
insb
les
test
push
movsl
scas
pop
pop
out
jp
sub
jnp
lea
sbb
mov
mov
sbb
pusha
push
pop
cld
xor
notl
xchg
xchg
sub
xor
fiadds
mov
cmp
xor
xchg
rcl
mov
movsb
pop
lock
jns
xor
mov
push
aaa
nop
mov
les
imul
jbe
mov
stc
adc
dec
jns
ja
pop
cmc
mov
mov
adc
shlb
fcomi
adc
add
nop
out
cmpsl
fimuls
cs
cmp
out
shlb
shll
and
and
cmc
mov
xor
mov
inc
adc
aaa
cmp
push
aas
xor
mov
fiadds
push
jbe
nop
and
ret
test
jnp
scas
fcomi
outsb
fsts
push
lods
add
xlat
cmp
xchg
insb
cld
push
xchg
es
mov
mov
mov
add
jl
jle
xchg
and
push
cmp
mov
sbbb
shrb
arpl
mov
xchg
subb
inc
sub
in
jne
mov
and
sub
pop
cmp
test
insl
mov
sarb
pop
rolb
sbb
out
aaa
sbb
mov
push
sub
inc
int
mov
cltd
inc
clc
push
mov
dec
or
gs
dec
jl
daa
ljmp
jg
sub
sahf
cmpsl
inc
sbb
mov
aaa
jae
ret
inc
pop
ret
dec
in
loop
loopne
mov
pop
pop
out
lcall
or
das
and
das
ret
mov
out
out
test
les
xchg
xor
ljmp
push
push
fidivs
cli
mov
cmpsl
and
cli
leave
dec
stos
push
in
inc
push
int
fcomip
cmp
subb
out
xor
mov
adcl
xchg
push
jmp
ja
push
in
push
xchg
cmp
int3
jae
ficompl
jb
cmp
and
jns
mov
cli
aas
cmp
push
jl
inc
scas
negl
out
jne
and
lods
mov
inc
pop
hlt
sub
ret
dec
jnp
in
cmpsl
rclb
mov
mov
pusha
nop
and
ljmp
push
adc
lock
jg
add
dec
mov
fldenv
dec
dec
in
insl
mov
push
ds
outsl
scas
cmpl
jbe
ja
ja
shrl
cwtl
popa
xor
scas
test
ret
test
mov
out
xchg
mov
xchg
lea
pop
or
insl
es
push
fdivrp
icebp
push
cmp
popa
enter
cltd
add
mov
addb
std
mov
xor
mov
lcall
inc
push
push
les
adc
insb
mov
aas
push
scas
pop
pushf
outsl
into
lret
inc
mov
sti
shlb
push
outsl
jbe
mov
jae
xor
or
iret
cmp
pop
in
int3
rcrl
cmp
sbb
or
or
inc
push
adc
mov
imul
mov
pop
ss
and
push
push
in
in
and
mov
cli
mov
mov
dec
loop
nop
dec
mov
sarb
sub
mov
lahf
dec
push
xchg
push
xlat
and
popf
dec
mov
je
lea
and
fwait
sbb
pop
push
or
jbe
fcomp
adc
icebp
aas
mov
mov
adc
aad
cmp
pop
or
pop
mov
out
test
cmpsl
dec
dec
mov
fcomps
mov
fimull
push
loop
xor
inc
data16
jbe
sti
xchg
movsl
jae
push
out
add
orb
sbb
mov
ja
push
aam
mov
jl
push
mov
xchg
bound
popa
sarl
cld
aad
fcmovnu
int3
mov
pop
movsl
sti
adc
int
int3
jne
lock
into
jbe
adc
cmpsl
xchg
fdivl
pop
out
xchg
jl
sub
mov
pop
mov
js
xchg
stos
sbbl
sti
jbe
data16
arpl
sbb
sbb
lret
sbb
push
aad
mov
or
out
ss
sbb
jno
add
out
mov
addr16
aam
in
cltd
popa
mov
shlb
dec
push
subl
cmp
mov
cld
outsl
in
jge
call
aas
sub
jbe
jnp
cmc
mov
mov
push
pop
xchg
dec
inc
mov
mov
inc
pusha
in
movsl
mov
stc
leave
adcb
les
jnp
xchg
push
es
mov
inc
jle
xchg
mov
jb
xchg
dec
pop
push
jmp
arpl
shrl
call
subb
jp
pushf
bound
mov
ffree
xchg
sahf
and
test
in
dec
sub
repnz
or
push
js
clc
popa
pop
mov
inc
pop
add
cmp
pop
push
in
cmp
mov
cmp
les
mov
out
lea
xchg
push
mov
cs
addr16
push
out
or
adc
inc
pop
or
mov
push
mov
stos
daa
sti
pop
cmp
cld
pop
shlb
jp
sbb
xchg
adc
push
and
sub
ljmp
mov
pop
movsl
push
pop
add
mov
mov
jo
sub
testl
inc
adc
inc
cld
push
test
xor
mov
adc
xchg
and
or
clc
adc
inc
mov
cwtl
mov
arpl
test
push
jnp
add
fdivp
pop
std
dec
shr
jg
aam
or
int
jmp
mov
sub
pop
fstps
fscale
test
sbb
and
stc
cmp
loopne
sahf
clc
jg
jae
into
sub
mov
addr16
inc
mov
into
and
fnstsw
in
jns
pop
mov
lret
and
jno
dec
jb
mov
sub
lods
insl
pop
data16
dec
inc
stos
and
icebp
in
mov
adc
jge
pop
jae
dec
inc
pop
lea
add
mov
in
dec
fcmove
faddl
aad
mov
bound
mov
les
std
jp
movsl
test
ja
in
push
leave
out
cmp
inc
mov
cmp
mov
inc
leave
ljmp
inc
dec
ja
stc
call
fsubl
popa
lret
icebp
mov
lea
fiadds
fisubs
mov
icebp
out
scas
xchg
sub
sbb
or
in
sbb
int3
sahf
mov
sub
sahf
xchg
sbb
cmp
lret
xchg
xor
lock
je
ret
push
stos
or
xor
push
xor
mov
dec
cltd
fs
outsb
aam
lret
cwtl
pop
push
dec
inc
push
inc
jle
jmp
mov
sbb
int
add
mov
push
inc
or
cwtl
and
mov
decl
xor
sub
inc
data16
xchg
and
pop
repz
jp
sahf
xchg
ss
mov
push
dec
aam
xchg
mov
mov
mov
xchg
or
lods
and
mov
cmpsb
dec
xor
lcall
cmp
aam
insb
aas
mov
pusha
cmp
ds
xchg
scas
mov
xchg
es
jo
out
dec
add
inc
lods
xor
faddl
pusha
fstpt
dec
iret
mov
pop
imul
push
imul
sbb
addr16
call
push
push
push
cld
and
xchg
js
mov
mov
pop
mov
push
xchg
pop
mov
and
jge
sub
rorl
out
jle
jae
jge
rcll
or
sti
push
or
push
test
mov
aas
xor
les
lret
lcall
mov
pop
push
int3
lahf
stos
lret
jnp
mov
adc
push
sbb
in
lret
push
inc
jmp
bound
mov
xchg
es
pop
and
mov
mov
cmp
mov
call
add
hlt
push
rol
rclb
lret
cmpsl
add
mov
or
adc
push
hlt
mov
dec
push
or
add
cltd
daa
adc
pop
mov
adc
mov
inc
bound
in
sbb
xchg
jg
daa
sahf
push
xchg
add
cmpsl
icebp
xor
arpl
stos
cmp
pop
jmp
cmp
or
mov
sub
mov
in
insb
inc
cmp
dec
dec
cmpsb
aad
sub
pop
movsb
inc
test
js
popf
test
loopne
enter
mov
push
push
and
push
mov
lea
inc
movsb
push
enter
lret
ffree
hlt
incl
pop
xchg
dec
mov
jg
cs
test
call
shrb
ret
or
lahf
sbb
test
test
pushf
ja
mov
fiaddl
fwait
pop
mov
les
ss
xorb
mov
cltd
and
mov
adc
subl
add
dec
or
adc
out
xchg
inc
int
cmp
sbb
mov
sub
aam
sub
sub
cs
les
repnz
jbe
inc
addr16
in
mov
js
filds
and
jp
adc
push
jno
shll
dec
dec
adc
out
dec
cmc
dec
pop
sbb
loopne
pop
repnz
sub
vmwrite
cli
sar
fisttpl
rcrb
jecxz
cmp
or
dec
sahf
sti
xchg
adc
sbb
aaa
add
inc
mov
ret
outsl
stc
daa
cmp
jl
cmpsl
lcall
pop
cmp
dec
dec
mov
int
fsts
ret
cmp
cmc
sbb
lret
fildll
or
sti
mov
cld
lcall
stc
pushf
xor
ret
mov
or
cmp
xchg
mov
pop
mov
mov
jmp
into
lret
movsl
fwait
repz
and
inc
sbb
scas
adc
jns
dec
or
sbb
out
add
mov
push
mov
fstpl
and
adc
ficoml
repnz
hlt
jnp
lahf
and
jnp
ds
mov
sbb
daa
scas
mov
rep
push
sarb
andb
iret
push
lahf
xchg
pop
pushf
int
iret
fstpl
aad
lock
inc
mov
repnz
mov
xor
mov
cmpsb
sbb
or
dec
mov
and
dec
lahf
xchg
stos
adc
xchg
es
insb
stc
push
insl
sub
xor
fisubs
movsb
cmp
add
or
jp
iret
jecxz
add
push
mov
stc
add
movl
test
dec
lahf
testb
das
mov
mov
or
int3
push
outsl
int3
fcoms
out
cltd
xor
fsubrl
push
mov
les
cli
cmpsb
aaa
fidivrl
sub
add
add
scas
in
and
pop
jg
out
dec
lahf
imul
ret
push
int3
mov
adc
lret
rol
je
dec
add
ss
pop
sub
xchg
lods
jmp
test
arpl
pop
pushf
mov
mov
ficompl
xor
pusha
ss
mov
mov
jl
cmc
into
call
xchg
addr16
ret
shl
mov
movsb
or
pop
loop
fcomps
mov
icebp
movsl
out
out
test
movsl
sbb
mov
and
mov
add
repnz
fadds
xlat
int
pop
jmp
push
inc
jno
xchg
imul
cs
jmp
dec
adc
push
ljmp
mov
pop
out
movsl
mov
inc
cwtl
ds
mov
fmuls
mov
repz
enter
xchg
fs
inc
mov
addb
outsl
inc
pop
push
adc
pop
jns
mov
ljmp
mov
call
push
fldt
lret
pop
and
xchg
jne,pt
sub
popf
jne
packsswb
mov
insb
or
cltd
incb
cmpsl
out
jl
add
cmp
insl
xchg
adc
pushf
jg
mov
imulb
inc
enter
mov
mov
jb
popf
pop
vxorps
cmp
scas
rolb
movsl
dec
movsb
out
xor
shl
jnp
fmull
cmp
jnp
popf
fsubrs
pop
repnz
dec
jg
mov
mov
mov
mov
jo
std
add
stos
jne
adcb
jl
or
ss
sub
mov
mov
loope
ljmp
dec
sti
fwait
jecxz
pop
into
cmpb
xor
pop
cmp
mov
push
xlat
xor
pop
loop
xor
fdivrp
les
mov
push
sbb
jae
cmpsb
jns
lods
data16
push
in
mov
mov
arpl
ljmp
inc
xor
xchg
inc
out
fimull
repnz
jge
movsb
cmp
xchg
sbb
push
sub
sub
lock
ret
js
outsl
scas
adc
das
xor
sbb
pop
dec
mov
mov
or
sbbb
push
mov
adc
mov
mov
lea
mov
mov
pop
cli
fdivs
mov
push
mov
rcr
fs
fmuls
or
rorl
mov
push
inc
scas
pop
inc
out
jb
cld
stos
dec
mov
jbe
in
sbb
fs
inc
sbb
inc
cmpsl
jg,pt
inc
aas
loope
lock
sbb
push
xchg
call
xchg
test
cs
loop
out
stos
push
int
out
inc
xor
xchg
arpl
mov
filds
leave
mov
dec
ds
movsl
push
inc
mov
mov
testl
sub
das
add
std
aas
xor
jbe
pop
or
and
mov
jno
xor
fisubl
in
cwtl
jp
daa
mov
add
bound
ficompl
imul
xor
fnsave
fxch
fdivrs
pop
mov
jnp
jb
sub
mov
dec
shlb
ja
mov
inc
inc
cld
cwtl
test
mov
dec
cmpsl
cmpsb
cmp
ret
jae
push
push
pushf
pop
in
ja
call
stos
cmp
nop
dec
xlat
push
xchg
stos
rorl
mov
add
lea
jmp
sbb
inc
pop
sub
shlb
iret
test
jl
subb
movsb
xacquire
push
mov
out
rcrl
sub
and
enter
neg
bound
mov
add
repnz
scas
shlb
inc
in
push
fistpll
mov
test
adc
dec
out
lock
jmp
mov
faddl
sbb
outsl
adc
aas
inc
sub
inc
je
xchg
mov
jmp
push
aas
mov
fistpl
dec
dec
jmp
inc
push
cs
mov
add
orl
aas
idivl
cmp
je
lahf
push
imul
push
lock
push
add
xorl
adc
dec
into
or
mov
out
lea
jecxz
adc
loopne
mov
out
dec
and
jb
jno
lret
js
and
aaa
loope
xchg
fisubrl
je
pop
lea
clc
sbb
loopne
inc
push
outsl
mov
jae
mov
fiadds
push
dec
aad
subl
clc
bound
iret
leave
adc
jne
repz
fwait
push
jmp
cmp
cmp
add
in
shlb
fdivs
sbb
cwtl
sbb
dec
inc
shll
in
xor
mov
push
cmp
sbbl
push
out
shlb
xchg
out
testb
xor
mov
lds
inc
ret
sbb
pusha
mov
les
cmpb
and
loop
ret
dec
fsubrs
mov
inc
push
aas
push
cs
int
mov
scas
loope
es
push
cmp
sti
xchg
sub
pop
stos
rorb
gs
sbb
in
cmc
adc
inc
shrl
and
repnz
insb
ss
out
add
inc
lret
cmp
scas
jp
mov
ficoms
call
test
leave
aaa
sbb
sub
mov
pop
call
rcrb
hlt
out
stos
jle
cmp
popa
repnz
xchg
insb
int
sub
mov
push
or
cmp
mov
aad
testl
inc
mov
pop
repnz
loope
xchg
insb
sub
jb
and
imul
dec
push
push
out
inc
addb
enter
or
fwait
js
loopne
inc
int
jmp
pop
and
cmpsl
sbb
xor
xor
xchg
adc
aaa
mov
leave
je
xor
call
and
clc
xchg
xorl
cltd
stos
sbb
lock
cli
bnd
ja
xor
aaa
es
cmp
dec
fs
xor
bound
outsl
push
jns
dec
movsl
jno
out
xchg
das
inc
sub
xor
popf
jo
adc
cmp
fistl
stos
lock
cmp
mov
cmc
push
dec
or
dec
lds
and
outsl
and
dec
xchg
sub
enter
jo
dec
push
cld
mov
aam
test
mov
test
orl
mov
sbb
pop
insb
repz
test
pop
jp
fsubrs
shll
rcrl
sbb
jl,pn
push
pop
cltd
test
jno
popa
xor
pop
and
loop
dec
mov
pushl
pushf
pop
cs
out
lret
mov
push
mov
test
stos
fldl2t
fstpt
or
je
lods
cld
adc
cld
xchg
stos
arpl
dec
sahf
int3
sbb
cld
xor
ret
imul
into
je
add
andb
clc
test
mov
or
inc
pop
loop
sarl
mov
sub
push
sub
mov
lea
xor
push
cmc
inc
stos
popf
push
and
addr16
xor
xchg
scas
inc
test
repnz
test
mov
add
xor
push
pop
push
push
jne
cmp
fsts
rcr
xchg
adc
ret
push
adc
test
adc
stc
aam
jp
xor
sti
inc
and
xchg
sbb
xchg
pushf
xor
jecxz
mov
ficoms
or
mov
push
in
daa
inc
adc
je
mov
jp
mov
xchg
decl
cmpsl
pushf
psubusb
sbb
js
push
inc
not
jp
in
ja
sbb
dec
mov
in
mov
add
push
xchg
cltd
lret
inc
bound
sarl
mull
outsl
sti
ljmp
fmul
lret
pop
sub
mov
outsl
ja
mov
jmp
and
out
and
rcrb
fisubrl
mov
push
dec
test
ja
rorb
pop
and
aas
lret
lret
mov
jl
mov
jle
popl
dec
fs
fwait
jl
or
jle
add
cmp
sub
in
xor
push
pusha
jg
cmpsb
add
xor
cs
bound
shlb
push
push
icebp
aas
push
push
xchg
int3
push
xorl
movsl
ret
je
pop
loop
enter
xchg
xor
adc
aaa
js
jns
dec
dec
lods
lcall
dec
xchg
add
enter
add
std
push
xor
cmpsl
loop
std
xchg
xchg
std
pop
dec
das
mov
mov
mov
lcall
gs
jl
adcb
mov
pusha
rorl
lods
xchg
jns
lea
lret
push
adc
cmp
int
cld
or
hlt
push
xor
shrl
stos
lods
int3
pop
loopne
leave
adc
mov
enter
mov
out
or
mov
loope
mov
pop
orb
ja
mov
aam
xor
and
cmp
jns
cmpb
es
inc
ficompl
outsb
jg
lcall
push
mov
jo
xchg
in
in
mov
lahf
scas
cmpsb
out
fsubp
jnp
dec
and
leave
popa
jo
ret
push
cs
and
stos
test
push
in
add
cmpsl
mov
flds
rcrb
mov
ret
cwtl
push
pop
cmp
je
int
pop
xor
out
in
pop
sahf
aaa
into
iret
xor
jne
dec
push
jmp
bound
xchg
sbb
dec
push
jo
sbbl
mov
cmpsl
jno
subl
clc
push
xor
je
xchg
mov
fwait
mov
sbb
mov
pushf
je
cmp
movsb
and
and
xor
pushf
orb
mov
pop
andb
cmp
inc
xor
ret
xlat
mov
ret
sbb
in
adc
mov
mov
fisttpl
jge
xor
jbe
push
stos
jne
mov
fdiv
push
aaa
xchg
sbb
push
popf
cmp
pop
sahf
sub
pop
test
jo
sub
adc
out
or
fs
movsb
mov
pop
and
inc
test
sbbb
stc
cwtl
sub
rcrl
add
repz
pop
inc
xchg
in
jle
jbe
mov
mov
shrl
adc
or
cmpsb
and
stos
mov
rcrb
inc
dec
loope
sbb
out
pop
les
cs
sub
cmc
push
xchg
mov
sub
iret
inc
loopne
popa
or
lds
repz
push
orb
lock
addsubpd
lcall
sub
dec
add
ja
jno
cmp
sbb
push
xchg
out
add
inc
pop
scas
jb
sub
ja
xor
mov
inc
push
fs
ret
repz
ret
cmc
inc
fsubs
in
sub
push
imul
sub
push
out
out
dec
daa
sbb
fwait
call
orb
testb
push
dec
iret
aas
inc
aas
into
ss
incb
add
pop
cmpsl
outsl
jns
mov
fimull
imul
inc
movsl
pop
inc
das
push
and
sub
pop
add
loopne
pop
popf
arpl
cmp
push
pop
dec
bound
stos
notb
xor
xchg
sub
bound
into
fbstp
jle
push
add
add
fprem
adc
std
and
hlt
dec
sbb
enter
pop
add
adc
pop
rol
add
cmpsb
cmpsb
shll
enter
xchg
rcrl
jl
jecxz,pn
push
adc
mov
mov
sbb
ret
sti
rorl
add
insb
rcr
fcmovnb
and
leave
jl
and
jl
jmp
cmp
hlt
add
stos
add
xchg
and
sti
repz
rclb
lret
push
je
fstl
das
jb
xchg
pop
push
or
in
sti
add
hlt
int3
jbe
jg
fcoml
dec
cmpsl
test
dec
adc
sbb
jge
pusha
xor
or
das
push
mov
adc
cmp
test
sar
stos
dec
push
inc
push
fistpl
ljmp
and
xor
and
push
popa
insb
scas
shrb
rol
mov
fwait
xor
fnstcw
xchg
add
dec
mov
push
inc
fcmovnbe
lahf
fistl
inc
scas
je
push
jecxz
jmp
ffree
adc
xchg
add
lcall
ja
mov
push
inc
mov
stos
add
mov
mov
mov
sub
fcomps
sub
cmp
rol
dec
inc
fsincos
mov
fs
popa
test
nop
testb
imul
enter
cmpsl
jg
push
adc
shrl
repz
mov
ret
adc
adc
in
mov
stos
jmp
push
jb
xchg
loop
add
repnz
and
into
fsts
jle
xor
inc
push
sub
out
arpl
mov
daa
jns
and
test
pop
dec
adc
fwait
fs
es
aaa
push
std
push
aam
ljmp
mov
adc
rol
xchg
ret
inc
jae
adc
mov
fsubrs
ret
out
popa
sbb
jg
or
dec
les
ds
jl
sbb
jno
push
inc
mov
clc
fwait
push
cmp
out
ss
inc
adc
pop
imul
cmp
scas
inc
pop
lods
cmp
int
mov
lods
mov
lret
mov
shl
stos
cmp
pop
add
pop
mov
rcl
mov
cmpsl
imul
das
mov
jbe
mov
addr16
cwtl
pop
mov
pop
inc
std
lods
outsl
xor
loope,pn
in
in
inc
sub
push
mov
popa
push
sti
mov
adc
sahf
sbb
jle
mov
fdiv
add
nop
adc
je
mov
push
repnz
fs
add
rorb
mov
mov
fmulp
pop
aaa
xlat
lods
jmp
xchg
call
out
xor
lods
mov
shlb
ljmpw
jne
cli
test
adc
das
xor
std
scas
ret
xor
jns
push
sub
pop
lret
jne
iret
push
lods
jns
add
sbb
xlat
cwtl
insl
shlb
lods
cmc
push
or
push
pop
mov
ja
xchg
and
xchg
shl
cmp
repnz
or
mov
shlb
cmp
jo
fstps
lret
xchg
sahf
pop
lods
rorl
pusha
into
cmp
lret
push
push
inc
sub
jne
or
xchg
jnp
stos
test
cld
push
inc
add
push
je
mov
ja
jns
inc
ds
jbe
xlat
push
ja
popa
ret
scas
loope
loope
jmp
cltd
push
lds
int
in
dec
lahf
addr16
dec
xor
xchg
xor
fiaddl
fucomip
push
pop
pop
sbb
icebp
idivl
cmp
gs
fsubs
mov
es
jnp
enter
aad
test
sbb
or
loopne
mov
sub
and
or
xchg
scas
add
in
gs
iret
into
xlat
dec
testl
testb
in
xor
ja
add
xchg
add
sbb
add
adc
aam
mov
out
cmp
jne
inc
repnz
sahf
inc
in
push
shlb
mov
out
test
imul
xor
ds
xor
popf
and
push
ds
xorb
scas
lds
xchg
mov
loope
sub
inc
inc
jmp
push
imul
jne
inc
insb
roll
sub
movsb
push
xchg
outsb
loope
scas
loop
sbb
outsb
enter
data16
and
fnstsw
ss
aad
cmp
into
sbb
imul
addr16
scas
sub
sarb
cld
push
mov
loope
sbb
testl
ret
idiv
mov
loopne
dec
dec
mul
sbb
sti
hlt
ret
sarl
sbb
adc
pushf
cwtl
and
adc
sub
lret
fabs
arpl
jnp
jl
dec
xchg
fs
mov
in
pop
push
jmp
jae
jge
jb
xchg
xchg
fnsave
mov
lock
mov
xchg
stos
add
mov
fs
subb
aam
data16
adc
xor
lret
fnstcw
adc
xchg
stc
je
adc
pop
adc
xor
fld
jmp
xchg
lods
mov
aas
add
std
je
lods
sub
add
or
and
imul
jnp
mov
add
iret
fbstp
xchg
xorb
std
rcrl
cmp
imul
push
push
mov
aaa
mov
push
out
mov
dec
int3
lcall
adc
adc
pop
jmp
inc
fdiv
and
xchg
adc
ficompl
jns
xchg
mov
sub
push
mov
xchg
mov
mov
and
adc
lods
ficoms
inc
std
inc
stc
fisubrs
push
pop
hlt
or
gs
add
sbbl
dec
hlt
jp
in
push
add
std
pop
add
adc
fs
insl
aaa
pop
jg
add
stos
mov
push
and
push
sub
rclb
xor
cwtl
dec
pop
push
fisttps
and
pop
mov
sub
add
in
sub
cltd
mov
test
pop
fsubs
ljmp
incl
sub
outsl
data16
pushf
and
push
jne
inc
cmpsl
jbe
sub
mov
add
xchg
xor
push
mov
jecxz
xor
pusha
sarl
xchg
pop
dec
fisttps
cltd
or
daa
ja
pop
test
inc
in
and
out
aas
aaa
mov
jecxz
sub
inc
je
pop
xchg
sub
cmp
lcall
xor
popf
cmpsb
sbb
push
ss
inc
push
loope
pop
loop
fdivp
lcall
imul
jne
out
adc
push
adc
push
inc
inc
push
fldt
adc
inc
in
dec
dec
mov
fwait
imul
sarb
and
lock
inc
sbbl
xor
repz
aaa
cmp
jnp
xchg
and
and
mov
adc
xchg
int
leave
jmp
leave
xchg
lea
cli
or
mov
pop
imul
lret
shr
jnp
imul
in
xor
imul
iret
data16
test
pop
xchg
push
movsl
inc
mulb
ret
xchg
shll
mul
pushf
les
push
fisubrl
mov
cs
or
mov
inc
inc
dec
ljmp
int
cmp
out
jge
ror
inc
pop
add
mov
and
sub
add
xchg
xor
out
pop
popf
scas
out
aam
push
out
repz
adc
mov
in
nop
jno
inc
mov
mov
push
cmp
sub
xchg
jge
dec
push
adc
pop
sbbl
pop
imul
pushf
inc
pusha
movsb
fdivrl
jp
mov
arpl
jne
cmp
add
sti
and
pop
addr16
leave
stos
and
and
or
pop
iret
ficoms
ret
cmpsb
cmp
xor
loope
pop
stos
add
test
sub
xor
mov
mov
push
rcrl
popf
jnp
cld
jo
sti
xchg
xor
andb
mov
jp
lcall
cmp
push
std
enter
lret
data16
addr16
arpl
push
xchg
lds
popf
lods
fisubrl
in
xchg
dec
lock
xlat
xor
dec
fwait
lahf
addb
sahf
imulb
add
and
xchg
xor
jne
mov
jg
fstp
mov
or
into
xor
dec
fwait
int3
fdivrp
sub
jecxz
push
mov
sub
cwtl
add
leave
sahf
jne
add
stos
js
jnp
rorb
pusha
lods
fdiv
cltd
cli
int3
push
xor
out
push
mov
loope
lods
push
push
fnstcw
js
mov
push
or
push
loop
jg
std
add
cs
adc
scas
jge
enter
sahf
xor
jae
add
inc
test
or
xorb
aaa
icebp
mov
inc
fimuls
push
push
rcll
sbb
push
add
add
and
fs
scas
add
or
mov
es
pusha
push
nopl
out
cmp
scas
mov
ds
pushf
imul
test
lret
cmp
xchg
jmp
movsb
pop
scas
or
adc
xlat
cld
push
fnstenv
push
or
and
stc
mov
popf
aas
shlb
nop
dec
out
xchg
mov
roll
add
adc
fdivl
jnp
mov
fs
inc
ret
and
cmc
dec
cmp
in
mov
mov
adc
bound
jle
mov
mov
lods
cmp
lret
xor
lret
shld
inc
xchg
dec
xorl
jmp
sarb
lcall
notl
outsl
inc
imul
nop
cld
fadd
lods
fldl
fs
mov
mov
aam
iret
fldt
sub
sbb
sti
pop
lods
push
push
je
stos
lret
mov
mov
out
mov
arpl
pop
out
jge
ss
and
mov
mov
sbb
jecxz
mov
mov
ss
inc
sub
pop
cwtl
cmpsb
xchg
fcomps
cmp
movsl
and
jns
ds
mov
jae
mov
aaa
push
aaa
fsts
aam
xchg
pop
clc
jmp
mov
push
cwtl
imul
push
sub
fwait
call
jbe
sub
cmp
xchg
xchg
aam
ja
ret
stos
lock
jge
inc
out
loopnew
sbb
stc
movsl
jecxz
out
sti
mov
pop
add
sbb
mov
popl
add
mov
sbb
xorb
push
and
iret
scas
cmp
mov
addr16
shlb
enter
adc
xor
xchg
test
scas
hlt
dec
repnz
fidivs
fisttpl
add
test
jmp
test
nop
mov
cmp
pop
scas
xchg
es
cli
mov
jb
idivb
stc
mov
leave
arpl
aas
mov
adc
jno
ret
xchg
into
ret
bound
jge
push
sub
pop
jl
jno
je
sbb
shrl
int3
ror
fwait
ds
call
test
jge
lret
pop
sbb
xor
and
xchg
fisubs
xor
jg
rol
jecxz
nop
push
popf
mov
jmp
out
fs
cld
push
push
mov
pmaxub
push
adc
sahf
push
fnstcw
add
pop
lret
clc
xchg
cmc
mov
xor
xor
mov
dec
filds
push
enter
mov
out
lods
popa
xor
fs
cltd
sub
clc
and
pop
mov
sub
stos
ds
adc
pop
mov
mov
xor
inc
addr16
jnp
loop
xchg
in
jne
pop
js
jmp
movb
jns
xchg
outsl
out
popf
or
iret
sub
fs
mov
dec
push
scas
cmp
bndstx
ja
insb
adc
dec
movsl
in
data16
mov
ds
add
out
loope
and
pop
jg
call
and
outsb
or
fucomp
or
int3
inc
mov
lods
sti
in
xor
inc
mov
mov
mov
pop
push
nop
fsts
or
inc
jno
iret
lret
out
leave
push
mov
popa
pop
or
mov
and
or
sbb
repnz
xor
mov
aam
jge
movsl
mov
push
sub
aad
pop
jbe
xchg
fucomp
sbb
loopne
push
pop
cli
fldl
popa
pusha
negl
jle,pt
sbb
test
shrl
adc
daa
out
test
ret
sbbl
xor
mov
sbb
adc
adc
repnz
pop
push
adc
and
xor
movsl
add
push
into
ss
hlt
in
sbb
add
aas
pop
add
out
dec
adc
fmulp
push
xchg
jge
pushf
fcomps
xchg
out
fistpll
in
adcl
cmp
mov
test
repnz
icebp
mov
mov
cld
fisubl
inc
or
int
jg
into
push
ficompl
pop
xorb
mov
xchg
int3
xchg
fwait
jg
sti
les
sbb
or
dec
dec
pop
shr
nop
sub
inc
sarl
lret
gs
mov
loop
push
add
cltd
xor
xorl
in
popa
mov
xchg
sub
cmpsl
or
pop
sub
sub
mov
pop
sub
pushf
out
test
int
sti
pop
xor
mov
jp
movsb
filds
lds
xor
mov
in
into
jge
arpl
stos
in
or
xor
push
xor
or
inc
mov
xchg
add
lods
das
inc
xchg
inc
and
cmp
adcl
add
pop
das
and
push
loope
sub
inc
or
sbb
inc
dec
pop
inc
jo
cmp
ds
stc
repz
popa
imull
dec
jle
jecxz
cmpsl
out
dec
mov
and
xor
xchg
xchg
fdivrs
sarl
add
push
ds
xor
inc
xchg
aaa
or
push
gs
insl
push
outsb
gs
xor
lods
and
jno
sbb
adc
iret
cmp
and
sbb
popa
add
imul
fmull
mov
xchg
imul
pushf
daa
sub
or
pop
jmp
push
add
sarb
inc
adc
dec
fisubs
ljmp
js
xor
fisubrs
dec
aaa
and
pop
xchg
fs
xlat
cmpsl
out
ret
jo
cmc
xchg
fmul
repnz
test
push
mov
push
xchg
and
pop
cmp
cmovbe
shrl
or
jl
dec
sub
sub
jbe
push
cmpsb
imul
fs
popf
int3
bound
and
jle
fistps
mov
jmp
mov
cwtl
jnp
inc
cld
shlb
es
add
lock
gs
and
imul
mov
jne
fbld
jnp
dec
mov
adc
mov
or
sub
sar
adc
daa
in
pop
mov
fs
mov
fistl
jg
icebp
cmp
mov
xchg
rorl
sbb
popf
repnz
jb
xchg
shrl
hlt
loope
scas
mov
lahf
ss
mov
inc
data16
sub
lret
movsb
inc
add
mov
fdivrs
dec
hlt
test
scas
jns
leave
cmp
inc
in
mov
xchg
nop
push
pop
es
inc
daa
inc
dec
jbe
rorb
sbb
in
and
fnstenv
imul
enter
cmc
xchg
dec
add
clc
mov
into
adc
sbb
sub
fs
int3
pop
hlt
rolb
lret
loope
xor
das
xor
push
arpl
add
mov
ret
inc
outsl
movb
pop
sbb
cmp
clc
pop
imul
adc
sub
jne
or
xor
loop
imul
enter
mov
mov
sahf
xor
lcall
fimull
xchg
je
enter
mov
fnstenv
dec
pop
jne
daa
mov
xchg
insb
lock
mov
pop
test
aaa
inc
inc
call
test
sub
lahf
and
mov
sbb
cmp
incb
out
shlb
int
popf
sub
in
pop
sbb
repz
ficoms
imulb
mov
imul
fisubrl
hlt
sahf
jp
ret
adc
daa
ljmp
jns
pushaw
insl
les
cwtl
and
sub
mov
push
mov
mov
xchg
mov
xor
mov
insl
push
imul
mov
adc
in
data16
pop
fimull
addb
jne
cld
cmpsl
sub
loope
testl
mov
jp
xchg
sbb
pop
jle
ret
pop
gs
rcll
mov
scas
mov
mov
lods
jmp
jmp
push
clc
dec
mov
jo
mov
add
and
xlat
mov
pop
mov
data16
shll
sub
iret
cmc
cmpsb
xor
or
push
insb
sub
adc
nop
adc
mov
push
mov
and
dec
xlat
jmp
sbb
ficoml
pop
sbb
popa
lods
mov
popa
mov
adc
mov
sarl
push
pop
add
cwtl
loope
mov
movsb
xchg
lret
into
cmovg
lods
push
sub
popa
aad
test
pop
dec
mov
sarl
je
iret
daa
into
addr16
fs
push
jp
mov
adc
mov
mov
add
pop
test
imul
sbb
push
nop
das
sub
test
int3
leave
call
test
jge
pushf
add
mov
divl
sbb
imulb
sub
or
inc
xchg
outsb
xchg
pop
jo
push
push
inc
sub
push
shlb
mov
dec
aad
call
mov
dec
mov
or
lds
push
js
cmp
push
out
or
xchg
adc
aaa
pop
xor
push
pop
pop
mov
in
lret
adc
out
mull
mov
dec
dec
scas
xorl
stos
shrb
popf
pop
add
pop
pop
lods
add
scas
xchg
mov
lods
dec
mov
or
mov
fadd
fs
pushf
fmulp
lea
fsubp
std
or
cmc
in
adc
mov
jns
cld
xor
jnp
add
sbb
fsubrs
rorl
xchg
and
sahf
call
and
push
pop
pop
rorb
cmc
aas
jne
dec
mov
sarl
adc
fsubrl
add
or
jns
dec
imul
mov
jne
dec
cmp
lods
dec
out
pop
sub
push
inc
xor
xor
adc
inc
xor
dec
xchg
imul
ret
mov
fnstcw
pop
ret
leave
loope
cmp
ret
into
aas
lea
mov
pop
xor
rclb
cmp
push
jae
mov
jne
lea
hlt
push
jno
gs
xchg
fcomps
cmpsb
aaa
mov
dec
cmpsb
dec
jmp
or
mov
cmp
sahf
ljmp
pop
or
add
cmp
add
out
cld
push
push
jo
and
push
sbb
mov
push
ror
andl
fwait
cmp
jmp
orb
mov
dec
lods
es
gs
shl
jnp
aam
inc
pop
mov
sbb
and
movsl
inc
fiadds
mov
mov
jne
shlb
push
loopne
mov
das
cmp
addb
add
mov
enter
js
jo
xor
xchg
sbb
and
xchg
bndldx
dec
ja
mov
rol
pop
orb
or
mov
jge
and
sbb
or
push
dec
dec
inc
pusha
xchg
cs
adc
test
mov
cld
das
pop
mov
inc
pusha
mov
into
and
aam
push
and
aas
cltd
fcomps
test
and
sbb
cmp
or
scas
push
and
inc
insl
je
in
inc
add
sbb
aaa
addr16
pushf
in
and
data16
sbb
pop
notl
daa
lcall
loop
mov
inc
or
sub
stc
sub
xchg
pushf
incb
mov
add
jmp
cmp
mov
push
pop
xchg
daa
lods
daa
xchg
shrb
push
mov
shl
cmpsb
scas
inc
fmul
idivb
scas
push
ljmp
jno
cmpsb
push
daa
ljmp
ljmp
mov
sub
jo
shl
mov
xor
sbb
fdivrs
sbb
scas
cli
rcrl
insl
addb
mov
hlt
addr16
pop
outsb
loope
xor
and
cmp
mov
arpl
sbbl
dec
pop
addr16
adc
ret
xchg
mov
enter
jne
mov
das
jae
mov
fnsave
std
xchg
sbb
into
mov
jns
cmpsl
insl
mov
mov
leave
stc
xor
paddd
pusha
cltd
hlt
adc
hlt
sbbl
jg
and
out
popa
or
mov
cmp
int
subl
dec
test
popa
incb
xor
pushf
outsl
mov
mov
les
ret
arpl
divps
pop
mov
in
arpl
inc
mov
push
push
scas
cmpsl
into
xlat
sub
pop
outsl
mov
cmp
pop
sbb
jne
mov
cmpsl
shlb
xor
push
push
mov
fsubrl
adc
push
sub
dec
pop
inc
jbe
mov
in
pop
adc
pop
mov
hlt
dec
in
lds
clc
lahf
fs
sbb
xchg
out
enter
mov
mov
clc
stos
call
outsb
inc
ret
mov
jne
aaa
xor
out
cld
sub
pop
jne
fmuls
push
add
xor
sbb
cli
dec
inc
data16
popl
in
test
scas
or
dec
cmp
mov
scas
les
or
lods
inc
and
mov
push
lock
mov
push
or
enter
int
outsb
mov
mov
fcmovu
xchg
shl
les
mov
mov
mov
xor
aad
lahf
pop
int3
cmpsl
jp
clc
mov
movsl
aam
data16
jp
out
inc
mov
in
fs
addr16
imul
xchg
in
sbb
sub
or
movsb
shrl
fisubl
fnsave
sub
xor
inc
ret
hlt
js
jg
flds
pop
mov
icebp
call
out
cmp
pop
and
push
loope
jae
pop
out
test
mov
inc
mov
sbb
add
cmc
or
outsb
into
int3
inc
xor
pop
imul
mov
lods
je
mov
pop
notb
push
mov
fs
arpl
cwtl
ja
fcomps
loope
push
das
adc
mov
popl
xchg
or
cltd
and
loopne
add
mov
sub
pop
and
bndstx
or
push
fidivrs
mov
mov
mov
movsb
stos
jmp
xchg
and
add
mov
fwait
add
cmp
xor
ret
in
arpl
sub
out
sbbb
jg
pop
push
nop
je
stos
jbe
test
cmp
and
subl
xchg
cld
jmp
int3
in
pop
jg
das
jecxz
lods
jmp
imul
mov
fsub
jno
pop
mov
and
hlt
dec
jae
jns
insl
push
mov
push
cmc
and
jb
jb
and
andl
cmp
adc
test
popf
jl
js
dec
lds
adc
mov
fiaddl
jl
pop
mov
pop
shr
sbb
dec
and
mov
inc
cltd
rclb
sbb
xchg
outsb
cmpsl
inc
fnstenv
fs
inc
inc
xchg
pop
cld
jbe
aaa
popa
add
nop
xor
mov
icebp
lods
xchg
cmp
into
fcompl
cmp
mov
push
sbbb
idivl
aam
dec
in
out
mov
dec
jecxz
inc
sar
xchg
xchg
xor
imul
pop
das
lcall
and
pusha
fstpt
shlb
mov
loope
ret
sub
pop
out
cmpsb
push
movsl
inc
and
in
test
dec
add
leave
or
inc
inc
cltd
xor
in
jmp
jnp
ljmp
and
ret
pop
shl
int3
fwait
loope
mov
shrb
inc
add
lock
xchg
mov
cmp
fs
out
push
dec
xor
cmp
push
sbb
push
ret
push
mov
jbe
inc
jmp
stc
popf
repz
cmp
jmp
jmp
mov
out
cli
aam
mov
movsb
lcall
jnp
int3
lea
mov
adc
mov
imul
sub
sbb
cmp
bound
mov
cmpsl
out
cs
and
mov
ljmp
inc
fs
mov
cmp
std
arpl
dec
and
pop
daa
or
addr16
or
dec
xor
clc
xchg
addr16
int
lods
negl
hlt
outsl
out
lcall
sbb
in
imul
leave
jle
sti
out
ficompl
xor
and
mov
icebp
in
sbb
das
test
fld
in
jnp
cli
mov
sub
xor
mov
shlb
into
cmp
aas
jns
repnz
or
cltd
stos
stc
stc
jo
and
and
pop
gs
je
dec
mov
dec
into
data16
int
mov
adc
and
xor
in
div
into
popf
lods
negl
imul
pop
or
or
aas
jns
mov
call
dec
xlat
in
fdivs
cmp
jo
mov
inc
xlat
lahf
nop
cmovbe
loope
int3
adc
test
bnd
lret
lock
out
pop
jno
popf
pop
push
call
mov
add
das
cmp
out
inc
iret
xchg
inc
fsts
es
inc
mov
jae
icebp
xchg
xchg
inc
lods
sahf
ret
movsl
inc
jae
aad
sbb
mov
cmp
loop
push
mov
sbb
jle
les
adc
movsb
cmp
xchg
xor
or
lock
inc
sub
sbb
mov
add
in
dec
push
pop
push
or
cmpsb
mov
jmp
out
insl
inc
jne
aas
rclb
add
rorl
xchg
jge
cmc
mov
movsl
cmp
lret
bound
les
dec
push
and
adc
nop
cmp
aas
dec
or
mov
push
xchg
lock
insb
sub
pop
sti
leave
pop
negb
popa
push
das
mov
cltd
and
dec
adc
mov
sbbl
test
adc
in
adc
clc
ljmp
lods
movsb
rol
inc
repnz
jmp
inc
mov
sti
dec
cltd
out
adc
aaa
int
sbb
and
out
push
int3
inc
iret
push
js
pop
mov
scas
inc
iret
pop
dec
es
mov
ror
cwtl
sub
inc
mov
popf
cmp
mov
out
sub
dec
mov
test
inc
movsb
jge
inc
sbb
mov
inc
fs
xchg
mov
cmp
test
shlb
sbb
pop
into
push
jno
scas
and
scas
in
sub
sub
push
adc
push
and
aam
test
in
add
les
jne
dec
mov
jle
or
push
mov
out
pop
aad
pop
ds
pop
and
addr16
sti
ljmp
and
loope
sub
mov
movsl
inc
sbb
cmovne
mov
pop
dec
xchg
scas
jns
outsb
add
mov
gs
out
out
subb
push
insl
cli
cmp
ss
dec
mov
mov
jl
sarl
inc
repnz
cmp
jae
sub
sahf
lret
sub
cwtl
cld
xchg
mov
stc
adc
pop
dec
cmp
ss
xchg
jns
cmpsl
pop
mov
and
pop
push
in
popa
stc
jno
and
cwtl
stc
mov
into
icebp
pop
mov
mov
notl
mov
push
movsl
negl
orl
push
cmp
ret
aam
les
pop
ljmp
ljmp
pop
xor
int
scas
or
or
pop
xlat
ficoml
pop
bnd
and
pop
mov
imul
inc
shlb
sub
pop
fcmovnbe
adc
push
shl
jge
dec
lret
mov
hlt
sbb
cs
push
pushf
orl
jo
std
aaa
hlt
cs
dec
gs
jnp
add
enter
mov
mov
push
les
mov
mov
popf
cmp
mov
mov
or
cmp
stos
addb
inc
xor
inc
lods
and
scas
and
xor
call
inc
adc
push
loopne
mov
push
cmpsb
jge
mov
in
sbb
inc
jmp
pop
mov
adcb
xor
inc
or
incl
inc
jl
aas
xchg
push
add
cmc
push
in
xor
push
leave
pop
movsl
inc
ret
ret
cs
sub
mov
out
jb
mov
mov
lahf
in
push
xor
insl
push
mov
ret
dec
sbb
push
xlat
push
leave
pusha
cmp
mov
mov
cmovge
sahf
cld
inc
loope
in
add
pusha
loopne
cmc
and
jb
sub
cwtl
shlb
das
sub
add
mov
shlb
push
fwait
imul
push
cmp
xor
scas
jmp
xchg
cmp
scas
mov
add
mov
lods
loop
call
mov
daa
lcall
adc
jmp
dec
mov
cmc
push
and
add
xchg
dec
arpl
icebp
ja
stc
jle
jb
sti
sbb
xor
inc
nop
clc
sahf
mov
mov
insb
pusha
sbb
into
dec
add
add
inc
push
add
mov
sbb
imul
add
dec
movsb
push
and
push
jne
call
fidivrs
jp
adc
fnsave
xor
jmp
push
inc
xor
sahf
test
sub
jmp
fucomip
inc
or
sti
mov
mov
into
push
fucomip
pop
or
popl
push
add
mov
stos
xor
mov
inc
mov
inc
jmp
fidivs
cli
cs
lods
push
int3
repnz
mov
stos
mov
call
jmp
repnz
push
mov
and
js
ja
loopne
inc
pop
push
lea
int
sub
fs
ficompl
ja
fidivl
es
add
mov
loop
cli
lcall
popf
jmp
loope
inc
cmp
js
in
incb
ret
cmp
sarl
mov
aad
fldcw
ja
bound
out
mov
cs
cmp
call
std
mov
xchg
sbb
push
xlat
sub
sbb
inc
je
dec
jmp
popa
xor
mov
xchg
cmp
add
sbb
sub
not
cmpsb
fisubrl
cmp
jns
jl
add
xor
push
lods
or
leave
add
jno
jbe
add
sahf
add
add
inc
adc
clc
or
mov
fisttpl
pop
cmc
add
mov
pusha
fiaddl
fs
js
pop
pop
add
jl
test
filds
cmpsb
sub
mov
test
cli
inc
inc
fs
jno
push
out
inc
mov
mov
shrl
adc
mov
sub
testl
shrb
cmp
jmp
sbb
fdiv
ja
dec
lods
js
sub
movsl
shl
jecxz
stos
ja
andb
pop
sbb
pop
push
inc
jbe
jg
mov
fistpll
xchg
sbb
fsubrs
sbb
enter
mov
je
rcll
xchg
orb
jecxz
mov
mov
adc
pushf
xchg
add
sbb
sbb
sahf
pop
lock
mov
and
cmp
xchg
add
sbb
push
or
xor
and
cmp
testl
add
inc
jg
fisubs
scas
xchg
test
fmull
lods
push
ljmp
mov
sbb
push
fstps
loop
hlt
jg
jae
icebp
add
iret
and
push
or
mov
pop
add
lret
inc
int3
gs
outsl
std
cld
jmp
test
mov
adc
push
cwtl
xchg
lcall
cld
lcall
jae
fildl
sahf
stos
jmp
mov
out
sub
repnz
lds
iret
and
ljmp
sti
popf
sub
mov
pop
ret
pop
lret
or
bound
aaa
xchg
sti
test
arpl
int
out
cltd
push
inc
pop
test
sbb
mov
jnp
aam
adc
pop
mov
adc
or
mov
pop
mov
adc
sbb
push
or
aad
loopne
iret
cmp
jns
pop
push
aaa
lcall
mov
mov
pop
insl
jns
sarl
rcrl
push
lahf
aad
cmpsl
xchg
adcl
ja
xchg
push
xchg
sbb
adcb
js
push
mov
pop
in
test
lods
jne
sbbl
cltd
in
ficoml
mov
adc
in
roll
hlt
and
fisubs
sbb
mov
fsubrs
faddp
jnp
cmp
pop
dec
mov
jno
xchg
aam
sub
les
mov
arpl
outsb
cld
popl
push
ja
aas
outsl
or
adc
sbbl
loopne
xor
test
adc
jnp
push
push
ret
dec
and
lcall
into
mov
jno
or
dec
pop
mov
pop
insl
sub
jp
push
loop
pop
in
dec
cmp
loopne
xchg
jnp
arpl
mov
faddl
add
daa
inc
fstp
mov
mov
mov
lea
into
push
jno
pop
adc
sarl
ja,pn
out
mov
imulb
pop
add
pop
lret
dec
push
ss
sarl
xor
sub
hlt
out
xchg
popf
sub
rcrl
jg
dec
cmp
shl
mov
cmc
hlt
adc
ds
mov
fldt
inc
movb
jns
dec
loopne
fwait
sarl
push
xor
lock
inc
enter
push
xor
lds
scas
enter
dec
aad
add
daa
xchg
es
inc
fnsave
in
mov
enter
and
mov
mov
sbb
and
addl
popa
or
cltd
fwait
xchg
in
lds
cmp
ret
dec
outsl
sub
fs
jnp
in
cmpsl
dec
push
cmp
ljmp
test
inc
and
mov
cmc
xor
dec
push
sbb
fxch
xor
arpl
lret
movsb
pop
cwtl
fstpl
test
push
push
imul
outsb
sub
xchg
pop
lds
jb
mov
lahf
push
jecxz
es
in
mov
mov
inc
out
mov
adc
inc
leave
and
mov
sti
mov
adc
sub
fdivl
adcl
adc
or
cmpsl
out
adc
xchg
push
adc
ss
cmc
mov
xlat
incb
fistpll
mov
repz
sbb
adc
insb
sub
pop
cli
cmp
aas
xchg
cs
gs
jnp
ja
adc
jb
scas
cmpsb
das
js
lea
leave
das
xchg
aas
stc
popf
hlt
pop
dec
in
push
jmp
dec
ja
mov
ljmp
fwait
mov
xor
hlt
cmp
adc
fidivrl
jg
int3
mov
dec
loopne
ret
add
das
ficoms
jbe
inc
lock
ficompl
popf
stc
sti
jg
cwtl
cmp
out
xor
xchg
add
pushf
mov
shlb
pop
outsl
and
mov
xchg
mov
dec
test
cmp
scas
sub
scas
imul
popa
add
jmp
icebp
in
xchg
mov
add
mov
lock
jmp
cmp
fwait
test
mov
sbb
mov
jl
dec
shl
loopne
addr16
cmp
dec
mov
inc
pop
pop
xchg
xor
dec
je
inc
data16
xor
leave
pop
jmp
adc
cmp
pop
mov
pop
dec
cmp
std
sbb
inc
mov
arpl
enter
mov
xchg
mov
lods
fsubrs
sbb
and
add
mov
int3
and
sti
fwait
enter
cmpsb
iret
clc
inc
xchg
idivb
cltd
sbb
mov
jge
mov
bound
cmp
sub
das
pop
out
cmc
mov
imulb
mov
sub
dec
and
mov
js
xchg
out
inc
insb
mov
cmp
inc
ficomps
xor
push
mov
test
fxch
inc
adc
fistpll
push
xchg
scas
mov
jb
mov
orb
out
repnz
push
cmpsb
arpl
out
and
push
sub
inc
xor
icebp
xlat
addr16
xchg
je
push
push
mov
lods
es
xor
push
xchg
push
sbb
pop
xchg
add
std
fsubl
andb
pop
cmpsb
repz
sub
push
push
outsb
xchg
dec
xor
nop
sub
pop
aaa
test
lret
shr
add
sub
lods
mov
out
sbb
dec
sub
inc
das
cs
or
jnp
addl
mov
or
lret
dec
movsl
test
mov
and
mov
jmp
pushf
cmpsl
test
add
push
dec
mov
cmpsb
jp
jo
pop
pop
add
or
xor
ja
xchg
xor
in
xchg
js
imul
int3
adc
pop
and
mov
pop
addr16
and
popf
test
xor
stc
xchg
sbb
loope
data16
lcall
sbb
cld
xchg
add
xor
add
out
mov
jecxz
das
inc
movsl
in
xorl
mov
sub
rcr
clc
xchg
jp
jg
adc
add
popf
cs
test
lcall
mov
push
je
push
ficompl
out
lods
call
sub
scas
push
push
mov
add
adc
pop
cmp
arpl
jl
stos
lds
mov
es
sub
adc
or
cltd
jbe
dec
in
push
das
cmp
movsb
jnp
push
mul
cmp
or
sbb
mov
stos
fmull
mov
mov
imul
mov
roll
fcmovbe
stos
push
xlat
jae
and
scas
arpl
cmpb
and
add
jne
and
cmp
cwtl
add
popa
iret
aas
js
fcoms
sbb
cmp
orb
rclb
cmc
dec
or
and
add
xchg
repnz
push
xor
mov
push
and
ss
cltd
jge
inc
test
lock
and
push
and
sbb
xchg
push
dec
pusha
call
mov
mov
add
sti
sbb
mov
or
cmp
cld
or
fsub
cmp
lds
add
adc
pop
movsl
lahf
adc
mov
and
mov
mov
xor
pusha
xchg
push
xchg
jp
ret
add
fdivs
xchg
cmp
shll
xchg
cmp
imul
add
out
xchg
mov
xchg
stc
cmp
mov
and
inc
jmp
xor
cmp
je
jecxz
movsb
cmp
mov
clc
jecxz
jp
jo
inc
inc
and
fildl
imul
sbb
dec
cmp
ljmp
jno
loopne
test
pop
add
xor
fnstenv
push
xor
dec
pop
jg
movsb
les
jbe
mov
std
adc
push
inc
je
in
sub
ficoml
jno
lret
aaa
and
adc
jmp
push
sub
das
out
adc
stos
mov
call
or
adc
jae
fdiv
xchg
mov
push
jmp
push
fsubp
mov
sub
or
jnp
adc
ljmp
adc
jb
sbb
sbb
stos
cmp
sti
sub
divb
shrb
rolb
daa
add
inc
test
cmpsl
sub
int3
jo
imul
inc
jo
shlb
inc
dec
dec
jle
push
xor
mov
cmpsl
xor
mov
dec
lea
lds
sti
icebp
sbb
mov
xor
or
cmp
xchg
out
push
les
push
cltd
fs
push
mov
test
loop
sub
sbb
push
xor
lahf
mov
gs
popa
sbb
xchg
mov
loop
shrl
lock
push
add
dec
cmp
sahf
mov
dec
or
jb
add
xchg
xchg
lret
mov
mov
popf
pop
mov
push
fwait
inc
leave
insb
and
sub
or
cli
es
cmp
rcrb
mov
and
fistps
dec
inc
mov
jmp
out
adc
sti
cmpb
into
add
cmp
adc
mov
fs
decl
cltd
add
arpl
mov
in
or
inc
xor
test
movsl
push
adc
mov
imul
arpl
xlat
mov
loop
cmpb
stc
repnz
add
ds
jmp
das
rclb
enter
ret
dec
cmp
daa
jae
movsl
mov
int3
bnd
pop
inc
push
jbe
les
push
aas
add
popa
mov
pop
mov
sbb
lcall
dec
pop
cmp
lods
je
test
jg
inc
ljmp
mov
push
add
inc
push
cmpb
lock
fimull
mov
in
xorl
adc
mov
push
daa
aad
divb
aam
push
push
hlt
cmp
dec
add
sbb
sbb
lock
cmp
and
stc
push
mov
scas
jno
cmp
push
imul
cmp
mov
jne
in
jge
aad
sub
out
mov
push
fiaddl
inc
xchg
mov
mov
pop
fwait
stc
pop
push
in
add
or
jns
mov
out
clc
inc
push
sub
add
jo
mov
mov
add
push
clc
mov
xor
ljmp
ljmp
shrb
jp
movsb
mov
cltd
iret
fidivs
out
mov
adc
adcl
jmp
inc
inc
or
hlt
pop
sahf
aad
xchg
cmpsb
mov
dec
bound
mov
or
push
sbb
lea
test
popf
mov
xlat
pop
aas
popa
movsl
xchg
insb
or
mov
fdiv
in
loope
and
xor
jb,pt
sub
inc
das
inc
rclb
dec
dec
lock
popa
mov
hlt
mov
add
icebp
dec
dec
addr16
movsb
std
add
in
int3
or
pop
xchg
push
gs
jo
sqrtps
call
addl
in
mov
or
and
cmpb
or
xor
add
jp
fsubp
xchg
cmpsb
jae
andb
pop
pop
and
loopne
mov
imul
cwtl
adc
pop
rep
push
shr
repz
sarb
out
ds
lcall
cmp
cmp
sbb
test
mov
fmull
in
mov
or
cmp
stos
xchg
lods
fdivrs
test
rcrb
lret
cmp
mov
icebp
sbb
jns
and
cmp
mov
xor
test
push
adc
pop
cltd
test
pushf
inc
repnz
out
mov
inc
lods
inc
out
mov
repz
push
dec
pusha
loopne
lcall
les
sbb
fsubr
mov
arpl
incl
or
cld
mov
xorl
adc
inc
cltd
mov
aad
int3
sbb
pushf
scas
jmp
and
mov
mov
xor
imul
data16
mov
aaa
mov
ftst
pop
pop
dec
add
imul
shll
into
pop
aad
lods
mov
sub
inc
push
jo
test
push
lods
lods
ljmp
pushf
divb
pusha
jl
pop
add
nop
xchg
inc
fcmovb
call
popa
lods
lret
out
imul
push
mov
inc
mov
imul
push
fmuls
scas
and
fisubl
jne
imul
or
rclb
or
sub
pop
in
shl
cs
loop
jp
sub
insl
jg
inc
movsl
push
popf
jl
sub
mov
sti
test
sarl
dec
scas
fidivl
push
scas
rcl
outsb
add
pop
fwait
aad
jno
dec
jns
stos
ret
jle
pop
negb
inc
pop
mov
data16
cmpsl
jge,pn
scas
enter
sbb
outsl
enter
sub
cmpsb
lods
ljmp
adc
lcall
and
dec
lds
inc
lahf
adc
dec
xchg
xor
cs
xchg
out
cli
dec
and
dec
es
ficoms
xchg
add
lods
test
arpl
mov
js
mov
int3
xor
jae
std
movsb
into
mov
out
loop
pop
lret
jne
mov
xchg
push
mov
lahf
fst
inc
dec
cmp
std
and
xor
int3
inc
lcall
and
test
mov
pop
jo
xor
add
sub
pop
lds
int3
out
jge
imul
mov
sbb
adc
jns
addr16
cmp
pop
jg
outsl
leave
popf
dec
in
push
dec
in
pop
push
es
xor
xchg
orb
lcall
jnp
dec
inc
cmp
dec
stc
loopne
jae
xchg
test
cmp
pop
and
and
data16
mov
clc
push
adc
xor
mov
cs
sub
rorb
and
mov
pop
lret
addr16
jae
xchg
pop
and
cmc
mov
cwtl
xor
xor
outsl
arpl
cmc
mov
movsl
lds
jnp
cwtl
pop
outsl
nop
das
mov
sti
aas
xor
mov
sub
inc
dec
dec
add
dec
arpl
fnsave
decl
xor
sbb
mov
std
mov
out
pop
in
out
negb
adc
mov
mov
aam
roll
in
cwtl
mov
pushf
and
mov
jo
xor
jge
lret
cmp
test
insb
jo
and
lret
xchg
hlt
mov
addr16
inc
mov
jle
mov
repz
std
repnz
movsb
call
cmp
xor
push
ficoml
inc
movsl
hlt
cmpsb
popa
orl
aas
incl
int
jecxz
push
dec
mov
hlt
xor
into
xchg
adc
imul
xchg
jno
lods
sub
test
dec
leave
and
rcpps
insl
fsub
mov
mov
ljmp
test
mov
jo
jg
mov
shrl
fisttps
lods
das
mov
or
mov
lea
push
lods
out
je
popa
mov
jl
jno
in
pop
jg
jns
adc
roll
mov
adc
int3
jmp
push
out
dec
fcmove
aad
mov
sbb
sub
push
sub
rolb
clc
fbstp
icebp
inc
inc
pop
sti
xor
int3
sub
sub
add
mov
or
aad
mov
ja
stos
out
xchg
pop
cli
inc
jl
pop
je
pop
fildl
or
pop
adc
loop
dec
push
xor
mov
add
sar
jge
mov
push
in
add
dec
cmpsb
cmp
jecxz
cmp
sarb
mov
popa
clc
pop
int3
xchg
stos
xchg
popf
xor
int
cmp
scas
inc
frstor
test
xor
pop
mov
leave
fs
pop
xchg
ljmp
arpl
into
aas
rolb
inc
imul
shr
test
xchg
psadbw
cmpsl
sbb
insl
testl
xorl
xor
xor
push
jmp
sbb
jmp
sub
or
fwait
outsb
mov
and
mov
mov
adc
jae
into
xor
cmp
cmpsl
test
clc
daa
push
out
push
aas
out
sbb
and
or
incb
xor
in
outsb
cmp
mov
js
add
in
fcompl
mov
cld
xor
inc
in
mov
xchg
jecxz
adc
or
mov
mov
clc
push
dec
cmp
pop
add
sub
out
push
inc
aam
insb
clc
loope
xchg
dec
xchg
repz
xchg
and
hlt
push
in
lds
mov
mov
dec
scas
and
inc
jmp
adc
and
fcoms
test
hlt
mov
insl
jle
dec
cwtl
push
xchg
adc
aam
aam
pop
rol
xlat
data16
popa
clc
add
in
push
loop
or
xchg
out
roll
inc
arpl
mov
cli
in
fcmovbe
xchg
sbbl
fdivrs
push
dec
push
sarb
mov
dec
dec
mov
xchg
cmc
add
xlat
sbbl
push
mov
cmp
subb
pop
inc
fs
int
data16
or
test
repnz
fwait
test
divl
cmpsb
mov
adc
fwait
lea
aaa
mov
dec
or
sub
dec
mov
push
inc
adc
mov
loope
mov
repz
cmp
push
popf
je
aaa
pop
lock
cld
pop
cwtl
xchg
daa
movb
add
out
rclb
dec
cmp
jl
xchg
das
cli
enter
loopne
cmp
xor
out
pop
fnstcw
rcll
push
iret
arpl
mov
xchg
mov
push
push
enter
test
icebp
mov
or
xchg
aam
dec
or
andb
cmpsl
or
outsb
mov
ljmp
testl
out
sti
fs
mov
inc
xchg
in
sbb
ret
mov
imul
inc
int3
mov
adc
test
and
cmp
out
and
sbb
xor
cmp
pop
in
xchg
pop
test
push
pop
xor
push
inc
fmul
xor
cmp
adc
cmp
out
shll
cmp
adc
inc
rorb
or
mov
mov
addr16
sub
adc
aad
addr16
int
adc
pop
jmp
mov
inc
push
xchg
loopne
imul
mov
arpl
push
mov
dec
adc
out
pop
aas
das
mov
hlt
popf
inc
mov
pop
mov
rol
add
insb
bound
daa
push
xorb
adc
jl
or
outsl
popf
lods
mov
ja
add
lret
and
mov
sub
ds
cli
inc
add
cs
xchg
daa
test
jg
icebp
mov
push
xchg
mov
out
iret
testb
sub
out
popf
outsb
enter
xor
negb
push
test
add
imul
mov
dec
dec
pop
xorb
dec
cmpsl
xchg
pop
mov
inc
cs
std
xchg
lods
push
in
rol
inc
fdivrl
ret
lret
or
xchg
sbb
fwait
repnz
mov
call
push
cmp
push
stos
sti
stos
add
jnp
cld
lods
inc
int
fcmovne
sbbl
rorb
xchg
xor
fidivrs
jle
jmp
mov
outsl
inc
push
insb
cmp
add
cmc
pop
inc
pop
pushf
xlat
clc
xor
jnp
mov
add
sbb
dec
jmp
inc
pop
in
fisttpl
in
xchg
scas
inc
push
sbb
or
es
popf
pop
andl
leave
push
rol
sbb
push
popa
push
iret
jl
xor
pop
in
jnp
pop
mov
jg
cmc
xor
loop
xchg
fwait
or
mov
pop
add
hlt
cli
rol
call
and
jno
mov
xchg
pop
pop
add
push
mov
inc
mov
int
sub
js,pn
mov
jg
lock
push
mov
into
inc
pushw
sbb
mov
in
and
iret
gs
je
out
notl
jle
scas
test
shlb
pop
sbb
imul
cmp
vmovntps
in
out
pop
jp
fsubp
mov
mov
mov
das
and
icebp
inc
imul
cmp
stos
inc
ds
inc
hlt
or
mov
iret
ljmp
test
ljmpw
or
or
sbb
out
daa
xor
xchg
lret
cmp
icebp
jmp
pop
push
fwait
and
add
mov
jns
loope
mov
xchg
push
pop
dec
insb
sti
stc
shrl
jmp
inc
mov
pop
jb
add
lock
cmpsb
or
adc
add
pop
sub
loopne
test
out
decl
inc
lret
inc
loop
add
stos
subl
rolb
stos
or
mov
or
push
movsb
adc
out
test
rorb
add
sub
mov
xorl
scas
inc
psllw
hlt
lods
ljmp
js
mov
je
mov
jae
jmp
loope
mov
or
adc
xchg
sarl
imul
int3
xor
jp
test
xlat
pop
dec
adc
test
mov
frstor
pop
mov
push
push
int
jge
out
xor
sbb
movsl
mov
or
hlt
mov
cwtl
dec
sub
out
out
mov
aaa
shrl
mov
out
cs
xor
xchg
addr16
mov
jle
and
je
inc
fistpl
jb
mov
pop
std
mov
xchg
add
dec
push
push
sub
xor
cmpsl
pop
mov
xor
inc
mov
clc
clc
pop
sbb
xchg
jnp
pop
adc
mov
push
jnp
fnstenv
cli
xchg
jno
mov
mov
clc
adc
in
test
fstps
or
ret
mov
xchg
xorb
pushf
mov
ret
sub
lods
aam
cwtl
add
loop
rol
xor
pop
pop
sbb
cmp
pushf
scas
popf
out
push
dec
rcrl
pop
cmp
jns
mov
inc
sbb
incl
movsl
push
in
push
lods
js
jge
icebp
dec
xor
mov
je
dec
rorl
adc
sbb
loop
jmp
sbb
movsl
push
xchg
negl
sbb
push
imul
adc
and
pusha
mov
jb
sbb
cmp
add
or
push
pop
loopne
dec
jmp
aas
aaa
and
repnz
nop
test
push
push
into
stos
or
sub
jb
inc
mov
pop
sahf
clc
sbb
sub
lods
cmp
addl
fiaddl
lods
rorb
loopne
loope
xchg
repz
stos
ljmp
stc
mov
clc
mov
fwait
cli
mov
jmp
cmp
dec
mov
sbb
mov
fidivl
fwait
cli
xchg
je
mov
clc
sub
repz
addb
or
lea
xor
sbb
push
iret
test
and
ret
jne
jns
cmpsl
xor
sub
in
loopne
imul
add
jp
mov
hlt
test
movsl
mov
mov
inc
aaa
shlb
xor
xchg
add
xchg
sti
stos
ljmp
mov
loop
adc
cld
cmpsb
xchg
adc
add
popf
icebp
jle
fisubs
loopne
cltd
xchg
inc
cwtl
das
je
and
cmp
pop
cmp
movaps
mov
xchg
pop
adc
jl
andb
xchg
out
push
sbb
jns
mov
jmp
ds
lret
iret
test
mov
cmp
imul
xor
push
add
push
mov
pop
out
pop
in
inc
and
add
push
mov
sbb
rorl
jge
adc
rcrb
jnp
arpl
hlt
pop
xchg
adc
sahf
les
inc
inc
call
das
out
daa
ret
push
add
in
iret
cld
cmp
mov
rcll
shlb
call
repz
and
cmp
in
clc
jno
jge
sahf
imul
dec
xchg
inc
ffree
and
and
sub
mov
fldcw
jne
in
loop
gs
cmp
enter
mov
enter
out
fs
add
sub
push
movsl
inc
movsl
mov
jp
sti
mov
adc
je
inc
rcl
mov
push
lret
in
lret
push
inc
data16
mov
inc
push
xor
mov
popa
cld
mov
mov
dec
imul
fistps
stc
or
push
mov
xchg
ss
testb
out
jbe
sub
sbb
mov
inc
mov
jl
sub
cli
mov
shr
cmpsl
pop
add
loopne
cmp
fdivrl
xchg
fsubl
sbb
insb
xchg
scas
cs
test
jnp
mov
pop
movsb
dec
into
scas
or
out
dec
repz
lods
shrb
or
je
movsl
push
int
into
jb
jg
xchg
les
pop
add
add
stos
pop
cmp
add
xor
fdivrl
dec
or
sbb
out
shrl
push
lret
filds
ffreep
das
dec
leave
std
or
sub
fstpt
test
mov
pop
lahf
ljmp
inc
cmpsl
sub
ja
cmc
enter
out
mov
movsl
xorl
sbb
dec
test
mov
test
pop
sub
pusha
cmp
dec
in
mov
pop
test
insb
shlb
lods
in
jl
mov
ss
fs
mov
lds
iret
pop
or
xchg
xchg
pusha
stos
sar
ljmp
pushf
cmpsl
clc
lock
xchg
jge
popf
mov
and
stos
mov
jns
push
or
pop
cmp
pop
adc
pop
dec
dec
inc
cwtl
cmc
xlat
push
out
xchg
adc
daa
data16
in
cmp
lock
mov
push
call
test
fs
mov
daa
mov
data16
gs
mov
cmp
mov
inc
pop
sarb
in
dec
xchg
xchg
aam
add
push
repz
mov
insl
sub
insl
pop
adc
add
xor
lock
pop
sub
xchg
xchg
add
adcl
sbb
negl
iret
sbb
jae
cmp
pop
push
inc
iret
or
pop
out
ret
dec
iret
jo
dec
dec
int3
adc
jo
mov
mov
adc
pop
jne
les
insl
fmull
pusha
mov
fwait
inc
and
pop
in
fwait
lea
xchg
jbe
add
loopne,pt
sbb
aas
insb
aad
inc
mov
std
xchg
inc
fnsave
adc
xchg
in
mov
fdivp
outsb
test
sub
mov
ljmp
mov
and
inc
sub
cltd
inc
push
adc
or
outsb
push
sbb
popa
sbb
push
jmp
mov
movsl
xor
cmpsb
dec
loopne
fmuls
sahf
cmc
dec
jne
sbbb
mov
sbb
out
insb
cmp
mov
and
ret
xchg
mov
int
ret
daa
leave
xorl
push
aaa
bound
mov
sti
mov
and
push
popa
xor
ja
sub
inc
lods
mov
pop
scas
les
fwait
sbb
xor
test
mov
fildl
push
into
gs
dec
lahf
insb
ss
sbb
scas
inc
lods
push
xor
adc
mov
incl
pushf
les
lods
jbe
cmc
es
mov
sub
roll
fidivrs
mov
inc
leave
sbb
mov
sarb
mov
rcrl
test
imul
inc
and
pop
inc
mov
adc
or
xchg
mov
inc
nop
ss
xchg
pusha
and
int3
adc
push
iret
lret
aaa
cmp
int
cwtl
xchg
call
ret
xlat
pop
jno
fisttpll
das
sub
out
insb
dec
jle
xchg
rep
sahf
sub
adc
cmp
outsl
cmpl
daa
hlt
es
dec
xchg
sub
pushf
xor
dec
and
mov
in
shr
incl
jnp
lods
mov
add
sub
xchg
cwtl
adc
pop
pop
out
push
test
idivb
sub
rorb
push
inc
mov
mov
pop
enter
lock
or
push
lret
in
cmp
or
std
mov
ss
in
mov
dec
or
cli
xchg
inc
pop
push
lods
lds
push
imul
aaa
push
mov
fiadds
add
lahf
mov
mov
insl
xor
aas
push
sub
cmp
subps
je
add
push
inc
aaa
std
jne
mov
iret
imul
lahf
mov
into
pop
test
jmp
jnp
mov
cmpsb
lock
addr16
pop
outsb
out
sub
jge
pop
cmp
mov
push
jle
shrb
imul
lcall
testb
lds
or
push
shrb
ret
into
loop
aas
enter
movsb
imul
enter
imul
cmp
call
clc
push
pop
sub
jl
lcall
loopne
aas
cwtl
scas
mov
push
lock
pop
and
and
push
push
xchg
lcall
mov
ficomps
mov
and
pushf
iret
lcall
push
mov
jmp
sbb
std
add
cmpsb
inc
add
ja
xchg
ss
gs
mov
or
push
xlat
jmp
mulb
add
clc
lret
cmp
out
rcll
bound
outsb
xor
adc
movb
push
push
or
xchg
mull
ret
jle
cmc
xchg
lock
out
in
pop
inc
pop
out
stc
pop
sub
pop
adc
inc
add
scas
inc
sub
mov
je
mov
test
lret
rolb
jnp
decb
sahf
dec
jno
icebp
lods
pop
adcl
xor
pop
cmp
iret
bound
outsb
jl
xchg
test
inc
pop
mov
add
sbb
vcvttpd2dq
push
mov
imul
jle
std
loop
movsb
cmp
add
in
out
mov
outsb
int
dec
mov
lds
inc
fsubs
ret
cmp
enter
ret
addr16
push
or
outsl
mov
stos
in
rol
push
aam
jl
push
ljmp
imul
nop
mov
adc
push
push
arpl
push
dec
mov
shl
and
dec
mov
and
cmp
lahf
rcrb
and
sub
inc
fidivrl
push
popa
cmp
push
jae
nop
dec
aad
inc
out
test
and
push
jle
dec
popf
lcall
jg
outsl
mov
ss
iret
xlat
xor
repnz
adc
mov
inc
cwtl
lret
lock
dec
jmp
sub
test
insl
and
test
and
mov
aad
out
addr16
sahf
pop
sub
sti
cmp
scas
fstps
and
fildll
cmpsw
ret
test
inc
int3
xor
add
mov
cmp
fbstp
jne
xor
inc
mov
stos
xor
pop
fwait
movsl
call
cmp
mov
pop
and
adc
add
arpl
das
inc
push
add
mov
aaa
icebp
inc
mov
imul
mov
ror
xchg
cmp
pop
cmpsb
lea
je
push
imul
jo
scas
rcrb
testb
or
mov
add
dec
xor
mov
jmp
adc
cmp
and
shll
test
or
imul
adcb
es
push
mov
xchg
push
aad
sbbb
xor
lea
sbb
dec
aam
faddl
cs
pop
test
insb
nop
jbe
sbb
push
in
stos
sub
jle
test
adc
cld
cmp
and
inc
and
mov
mov
jo
lcall
test
pop
sub
push
aam
cmp
cli
stos
ret
pop
mov
andl
icebp
les
lods
ret
dec
out
sarb
mov
ret
mov
mov
sbb
jp
cmp
push
negb
insb
mov
push
fidivl
pop
xor
mov
sub
cmp
incl
outsl
push
ljmp
stos
in
pop
cltd
cld
cmp
mov
cmp
jbe
pop
ficompl
xlat
out
adc
push
pop
xor
push
in
into
outsb
inc
cmc
pop
dec
test
inc
xor
ljmp
adc
push
sbb
adc
jl
push
mov
out
pop
rcrl
clc
or
loopne
aaa
pop
or
jp
decb
lret
in
jge
insb
push
shlb
xor
xchg
test
ret
cmpb
jbe
mov
fwait
das
adc
mov
cmp
pop
jnp
jne
jle
push
dec
add
jl
js
ljmp
sbb
and
jmp
or
es
jae
out
cwtl
test
mov
fisttps
insl
lods
add
xchg
in
movsb
mov
ds
outsl
sar
pop
xorl
fimull
mov
fsubrs
adc
pop
std
imul
jp
xchg
ja
dec
push
dec
push
popa
cld
cmpsl
ds
sbb
aam
lss
in
std
das
inc
arpl
jmp
emms
movsb
jae
inc
xchg
shl
lods
cmp
cmpsl
adc
loopne
sub
in
mov
cmp
frstor
lar
dec
mov
repnz
rorb
enter
push
fisubl
dec
pop
fsubl
mov
xor
testl
pop
shlb
out
pop
sbb
dec
pop
insb
push
daa
testl
adc
xor
test
les
push
orl
push
xchg
or
sub
daa
mov
aas
addr16
insb
stc
test
mov
lahf
loope
sbb
push
add
xchg
pop
imul
sbbl
pop
jmp
sbb
inc
xchg
jae
cmp
das
test
subb
cmpsl
jno
xchg
xorl
mov
xchg
add
mov
fwait
jg
push
fidivl
into
mov
iret
leave
mov
fdivr
add
inc
mov
and
divb
adc
ss
movsl
outsl
ljmp
cmp
pop
cmp
xor
xor
inc
lret
xlat
dec
and
mov
sub
sub
add
call
add
xchg
aad
sbb
fs
mov
xchg
out
cmpsl
xchg
or
fidivl
outsb
int3
arpl
pop
jg
sbb
inc
xchg
ss
fs
idivl
sub
sub
cmp
hlt
es
or
jge
ljmp
gs
lahf
lock
dec
and
jg
or
xchg
ret
adcb
mov
iret
data16
sbb
test
lea
aaa
jo
imul
mov
or
cld
push
sub
sbb
xchg
cmc
pop
cmc
jl
dec
repz
mov
jno
inc
in
movsb
cmp
jp
sub
addr16
lock
aam
adc
pop
outsl
cmc
cmpsl
test
insl
inc
adc
or
call
into
icebp
pop
sbb
mov
enter
push
or
loop
push
shl
js
inc
out
jb
mov
inc
notb
jae
out
push
outsl
imul
add
ljmp
jno
pop
sbb
ds
inc
pop
adc
pop
in
and
sub
iret
out
pop
sbb
push
arpl
je
jl
ds
aad
dec
cmp
decb
mov
mov
jp
loopne
jmp
bound
aam
jbe
sub
pop
mov
pop
pop
insb
add
and
in
sbb
jbe
push
and
and
loop
pop
mov
rorl
mov
jg
jmp
fsubrl
push
std
pushf
cli
xor
popa
jnp
sbb
sbb
pop
inc
aam
cmp
inc
sub
pusha
pmaxsw
xchg
adc
cmp
jmp
xchg
idivl
mov
stos
push
mov
pop
xor
nop
lods
jo
and
pushf
cmp
ljmp
out
add
xor
jne
hlt
shrb
add
rol
adc
jb
jo
iret
enter
mov
pop
mov
lds
into
cmp
dec
xchg
add
mov
sbb
mov
insl
decl
xchg
dec
dec
cmp
lods
adc
or
xchg
jg
xchg
mov
insb
pop
lods
jl
lret
xor
in
push
inc
dec
xchg
pop
sbb
add
insl
cs
jp
xchg
les
mov
bound
mov
ds
mov
mov
jo
mov
and
mov
jmp
xor
jl
out
fidivrl
sarl
add
mov
std
jo
cli
sub
xor
sbb
fld
sbb
add
inc
sbbb
mov
xor
out
test
rorl
mov
out
sbbb
dec
push
jne
in
je
in
ja
ljmp
shrb
and
xchg
xchg
xchg
lods
lds
sbbl
out
add
push
xor
pop
scas
out
shrb
imul
adc
dec
add
pop
cmp
sub
jmp
ds
data16
add
dec
xchg
mov
imul
int
xor
pop
imul
sub
push
mov
cmpsl
or
pusha
jp
jo
pop
sub
aas
sub
pop
cmpsl
xor
test
jge
xor
insb
sbb
cmc
sbb
daa
outsl
into
loope
mov
filds
jns
jns
or
mov
ljmp
or
push
cmp
fldenv
xchg
dec
dec
or
dec
mov
jmp
sub
and
cmc
and
std
movhlps
mov
jecxz
jmp
mov
mov
sub
sbb
sti
fwait
inc
mov
xchg
jecxz
jmp
cmpb
dec
push
into
fwait
sti
shrl
or
push
jmp
aaa
pop
jbe
adc
movsl
inc
jmp
and
sbb
push
mov
mov
lock
roll
popa
or
cmpb
mov
push
lcall
daa
ret
mov
sbb
cwtl
ljmp
loope
add
shl
fs
mov
push
xchg
in
fwait
add
das
jmp
sub
push
andb
clc
pop
cld
roll
add
cmpsl
inc
call
ficomps
ret
sbb
add
mull
adc
movsb
adc
imul
adc
mov
pop
repz
sbb
test
inc
cmp
imul
gs
adc
mov
jle
icebp
dec
add
mov
aad
push
fidivrl
pop
cmp
push
pop
jae
int3
pop
inc
loop
push
cmp
js
out
or
test
sub
inc
cwtl
inc
aad
mov
xchg
add
stos
subl
jnp
roll
add
push
jno
movsb
pop
pop
cmp
outsb
fbstp
pop
sbb
xchg
in
push
push
inc
push
jae
pop
imul
popa
cmp
xchg
or
nop
in
mov
jecxz
repz
lods
push
shr
in
dec
or
push
add
mov
fsub
pushf
mov
dec
xlat
dec
outsl
in
jl
fnstenv
jmp
jle
mov
cmp
shrb
mov
outsb
and
sbb
cltd
mov
jbe
xor
ss
and
pushf
stos
jne
das
stos
nop
cmpsb
iret
add
xor
repnz
addr16
mov
aaa
into
or
xor
sub
insl
pop
and
dec
imul
xor
repz
dec
jecxz
xchg
and
mov
jp
cmpsl
adc
loope
push
insb
push
js
mov
fdivrl
fwait
test
and
inc
sub
fsts
push
push
and
ret
aad
fsubrp
cmc
mov
cmp
leave
nop
xor
out
popa
and
mov
dec
in
mov
add
js
fisttpl
xchg
sub
pop
mov
add
fwait
xor
shl
pop
sbb
popa
insl
fsubrs
out
inc
sahf
mov
jmp
mov
xchg
xchg
jp
pop
jae
mov
ficoms
je
sub
test
lret
fstpl
dec
fbstp
in
test
pop
dec
dec
or
aaa
sub
pop
sbb
in
xor
gs
ror
xlat
repz
int
xchg
ljmp
sbb
pop
jb
rcrl
mov
lock
sub
dec
fsubr
jge
test
stos
lods
inc
pop
stc
xlat
fisubs
les
pop
push
jb
push
unpcklps
mov
lods
or
mov
lea
jge
push
dec
cmp
pop
aad
in
and
mov
hlt
test
adc
xor
in
jmp
push
xor
sub
cmp
insb
mov
sbb
push
cmp
dec
push
jge
pop
es
mov
icebp
scas
int
daa
sub
fldcw
cmp
pop
cmpsl
out
sarb
mov
push
add
clc
pop
icebp
inc
rclb
add
adcl
stos
and
mov
cmp
loopne
add
repnz
js
cli
iret
aas
test
ret
xchg
pusha
dec
sbb
jp
pop
enter
cmp
pop
cmp
pop
mov
inc
cmp
or
pusha
lods
rcrl
call
divb
dec
icebp
ss
jge
sbbb
shll
fwait
xor
fidivs
ja
push
pop
inc
cld
pop
je
daa
mov
inc
adc
inc
addr16
cmp
addr16
xor
xchg
xchg
mov
jmp
mov
idivl
pop
cmpsb
inc
movsb
push
int3
fisttpll
mov
rorb
cwtl
mov
pop
fldenv
mov
fidivrl
jo
outsl
and
pop
xor
mov
cmc
arpl
ret
imul
jl
rcrl
scas
inc
lds
xor
adc
mov
clc
pop
ret
bound
fidivrs
or
sbb
dec
adc
and
mov
shrb
jo
mov
push
xor
dec
shll
adc
sbb
pop
or
inc
and
out
fistpll
stos
clc
mov
rclb
in
mov
aas
loop
sub
push
inc
inc
out
fcmove
xor
ljmpw
push
inc
push
dec
movsl
dec
add
xor
lock
fisubrs
cld
data16
mov
push
repnz
jno
cld
xor
push
push
mov
add
xchg
and
hlt
in
fildll
mov
lock
add
je
ret
movsl
js
lcall
pop
jno
aam
call
inc
and
cli
mov
push
mov
rol
add
repz
xlat
repz
sbb
jl
or
xchg
adc
jmp
bound
pop
xchg
mov
xchg
add
xchg
jmp
mov
lahf
jg
leave
push
shrl
cli
pushf
stos
test
pop
lcall
jmp
push
test
push
stos
cs
push
lods
inc
xor
adc
repnz
or
out
mov
sub
sarb
adc
push
push
movsl
xor
add
pop
scas
ret
pop
push
arpl
pop
xorb
or
xor
es
test
or
dec
loop
nop
xchg
xchg
sbb
aam
mov
cmp
ret
or
negl
loope
imul
pop
xor
jecxz
lods
aaa
cmp
cmp
inc
std
cmp
outsb
out
pop
dec
pop
jae
push
jp
rcrb
push
movnti
cmc
insb
cli
or
daa
jnp
pop
push
jne
pop
mov
into
xadd
insb
jno
pop
xchg
iret
lcall
je
jmp
add
das
cmp
popf
lea
mov
sbb
pushf
dec
aaa
push
sarl
xor
mov
bound
lods
sbb
jne,pt
jo
pop
mov
dec
xchg
divb
mov
mov
shrb
lcall
sbb
push
xchg
in
fidivs
clc
xor
dec
out
std
mov
inc
mov
cmpsl
sub
xor
es
push
lds
push
fwait
je
into
mov
in
aad
popa
aaa
xchg
int
cmpsl
push
add
test
push
in
and
pop
outsb
inc
mov
or
sarb
adc
mov
fstl
sti
xchg
pop
cltd
ret
and
adc
dec
sbb
lock
xchg
ljmp
xor
pop
push
fcmove
or
dec
cld
xchg
andb
lods
lret
adc
in
push
imul
sub
xor
add
xchg
fldcw
mov
inc
and
repz
out
lds
push
cmp
push
mov
jae
cmpsl
bound
sub
cmp
enter
stc
stc
cs
icebp
enter
fnsave
pop
xchg
mov
push
jb
mov
cmp
cmpb
shll
or
and
sbb
pushf
repz
cvtps2pi
xchg
in
outsb
test
mov
clc
clc
mov
or
or
or
pusha
push
push
mov
xor
fxch
mov
adc
ja
pop
pop
ljmp
ss
pusha
or
adc
jp
loopne
notl
test
ja
addl
xor
lods
xchg
scas
xchg
jle
pop
movsb
ficompl
testl
mov
cmpsb
les
loope
rorl
pop
add
pop
test
jns
adc
test
inc
push
lret
pop
and
stos
dec
roll
mov
cmp
aam
test
add
fcomps
pop
pop
fnstenv
pop
scas
cli
cmp
add
inc
stos
adc
add
xchg
push
fs
daa
ret
sbb
pop
sbb
cli
iret
fldt
mov
sbb
int
xor
xor
rolb
mov
in
xorl
rcrb
out
inc
jmp
loop
sub
cmpsl
out
pop
into
gs
pop
es
cmpb
push
push
push
imul
pop
cs
notl
xchg
sub
daa
mov
dec
pusha
test
daa
and
or
popf
addb
shlb
shl
mov
sub
pop
ss
push
mov
imul
lea
mov
mov
jge
jae
stos
movsb
mov
movsb
testl
push
xchg
mov
sbb
cmpsl
add
das
shrb
push
into
xor
jbe
aas
xchg
into
cmp
repnz
out
pop
outsl
stc
lock
mov
add
and
notb
cld
add
cmp
cli
mov
int3
sbb
or
cmp
out
or
pop
das
fsubs
jnp
aad
jle
outsl
inc
push
sbb
dec
mov
inc
dec
pop
pusha
dec
jo
jmp
mull
lods
add
ja
add
addr16
repnz
xor
or
js
mov
mov
aaa
call
and
add
pop
pop
lock
nop
jge
jns
inc
cltd
test
add
pop
xor
int
jns
rol
int
rcrb
pop
stos
mov
lods
repz
cli
mov
in
int
mov
mov
int3
push
repz
mov
mov
xor
and
or
scas
jmp
inc
sarl
add
jge
shrl
xchg
pop
fists
ret
fisttps
movsl
es
outsl
pop
xor
imul
and
add
push
and
push
shr
jp
xchg
aad
ret
mov
repz
clc
and
andb
sahf
add
loope
xor
pusha
jp
loope
cmp
and
cli
inc
sbb
fcmovbe
xchg
ljmp
and
sbb
gs
sti
pop
sbb
gs
mov
mov
push
lea
insl
shll
ret
hlt
adc
out
dec
fildll
into
adc
push
aad
icebp
push
jae
shlb
push
cs
loop
or
mov
mov
test
int3
sbb
in
fwait
mov
and
xchg
mov
rolb
lods
fisubl
jb
sti
mov
sbb
push
dec
mov
pop
cmp
imul
dec
scas
xchg
sbb
dec
shr
insl
jo
add
xchg
call
push
xchg
sub
mov
cmovp
xchg
xlat
sub
test
scas
adc
xchg
fildl
dec
arpl
sub
dec
scas
fsts
and
sti
push
or
lods
xchg
xchg
xchg
xchg
adc
int
jae
pushf
lcall
add
mov
out
sti
mov
add
pop
or
test
testl
enter
lock
mov
mov
xchg
aam
outsl
jns
mov
sub
aas
jb
jecxz
popa
cmpsb
mov
jl
lcall
outsb
or
orl
iret
movsb
in
adc
sub
push
mov
sub
mov
std
test
or
in
add
sub
xchg
pop
push
sub
stos
dec
mov
cltd
pop
mov
inc
push
jp
subb
adc
repnz
adc
mov
mov
mov
add
ja
inc
pop
lcall
xchg
cmpsb
jp
in
xchg
add
adc
push
rcrb
mov
rol
aam
mov
xor
fisttpl
fdivl
cmpsl
sub
mov
in
ficomps
sbb
int
iret
cmpsb
ds
outsl
push
sub
stos
out
mov
pop
jbe
jmp
adc
test
in
test
jge
xor
xchg
sub
iret
push
inc
gs
adc
cmovb
aas
add
push
lahf
pop
aaa
into
mov
or
pop
dec
mov
int3
cmpsb
cmpsb
iret
sbb
pop
push
insl
sub
lock
in
fildll
add
cmpsl
js
jecxz
xchg
fistpll
cmp
xor
les
es
add
and
dec
inc
lahf
ss
fwait
xchg
pop
pop
pop
xor
adc
rolb
adc
sti
sbb
or
dec
aam
xchg
nop
pslld
mull
test
sbb
mov
lcall
orl
mov
add
sbb
lcall
push
jbe
aad
push
and
hlt
inc
jno
leave
cwtl
add
leave
jecxz
push
dec
pop
jbe
ret
lea
ljmp
ret
popa
aaa
ljmp
out
or
mov
push
mov
push
aas
outsl
dec
or
add
fwait
rorl
jge
dec
fcoml
in
lret
xchg
cmp
dec
loopne
adc
insl
or
push
push
mov
rcr
or
fwait
xchg
mov
stos
pop
call
xor
test
sbb
dec
mov
loope
mov
sbb
xor
imul
xor
lret
in
dec
pop
enter
int3
lods
cmp
cltd
xchg
fisttpl
cmpsl
ret
sahf
adc
clc
adc
mov
jg
or
in
sub
lock
int
scas
nop
mov
dec
sbbl
lock
das
and
jle
inc
and
rcll
mov
cmp
mov
mov
in
adc
in
cli
sub
pop
loope
sub
add
mov
push
add
adc
inc
fsubs
xor
xor
int
pop
dec
pusha
repnz
dec
loopne
adc
repnz
adc
adc
inc
dec
cmpsb
popf
negl
adc
sbb
push
in
add
cmp
pop
or
mov
pop
or
push
aas
addr16
add
out
adc
and
dec
jecxz
ljmp
cmpsl
add
cld
js
fdivrl
movl
in
dec
mov
push
xor
iret
mov
into
lret
and
lock
push
and
stos
mov
js
mov
mov
fwait
sbb
inc
std
push
dec
imul
sbb
cmp
pop
rcrl
jle
mov
stc
inc
fiadds
mov
sbb
call
xchg
mov
loopnew
imul
dec
sub
addr16
cli
xchg
out
or
cmpsb
sub
lods
push
adc
shrb
pop
icebp
es
rolb
js
jg
dec
stos
adc
lret
lret
and
mov
jbe
mov
adc
imul
js
cmp
xchg
and
in
lret
dec
fsubr
xchg
mov
push
xorb
dec
data16
es
adc
mov
int3
sbb
ret
push
cmpsb
aaa
fbld
les
push
adc
rcl
repnz
mov
push
hlt
jl
mov
testl
aaa
push
dec
push
js
arpl
inc
fcompl
jns
leave
push
mov
shlb
xchg
sbb
ret
into
cmp
aad
fsubl
sub
call
scas
push
cwtl
inc
mov
xor
mov
pop
mov
lds
push
lahf
cmp
int3
pop
scas
std
imul
push
push
lahf
mov
sahf
lds
jecxz
cmp
in
mov
mov
adc
sbb
push
scas
les
sti
sbbl
jge
inc
scas
rorl
push
mov
pop
repnz
pop
sbb
dec
ret
fsubr
movsl
lds
sbb
stos
mov
add
inc
andl
ffree
test
iret
mov
sbb
cltd
xor
leave
pusha
jecxz
xchg
mov
lock
xor
cmp
aaa
lods
scas
enter
out
mov
out
sahf
stos
pusha
push
pop
iret
sub
lcall
lcall
stos
stc
addr16
mov
xor
aaa
push
dec
push
js
jle
sti
outsl
mov
mov
lods
mov
dec
adc
adc
push
bound
sbb
std
lret
lcall
mov
mov
pop
adc
fs
xchg
sub
fst
sub
xchg
jns
data16
ret
xchg
adc
and
jno
cmp
inc
pop
scas
xor
iret
and
pop
fmull
xor
stos
add
adc
fs
loopne
scas
adc
fmuls
dec
mov
adc
int3
test
ljmp
jno
aaa
mov
dec
xchg
cmp
ss
addr16
inc
xlat
push
jnp
pop
mov
adcl
inc
pop
cmp
enter
inc
dec
imulb
pusha
fs
and
xlat
mov
jmp
rorl
push
dec
div
icebp
lret
iret
data16
or
pusha
ficoms
dec
cmc
jno
je
test
inc
cmp
xchg
outsb
ja
pop
scas
mov
push
mov
fidivrl
out
test
insl
add
push
mov
dec
popf
notl
in
stos
cli
adc
in
cmpl
jns
mov
add
mov
insb
push
test
dec
mov
mov
or
loope
stos
sub
jne
incl
subl
sbb
push
fs
xor
fmuls
sbb
xchg
xlat
sub
aam
lret
out
into
cltd
popa
sbb
xchg
mov
inc
mov
movd
clc
mov
add
leave
dec
push
push
mov
push
mov
add
push
jle
or
bound
push
imul
ret
jecxz
cmp
subl
fwait
int3
mov
pop
sub
ljmp
jbe
mov
mov
je
cs
inc
mov
popa
sbbl
out
pop
sahf
loope
les
push
inc
movsb
fwait
sub
dec
adc
cmc
cmp
or
or
call
add
adc
inc
cltd
shll
rcll
add
xchg
sbb
mov
mov
mov
sarb
in
data16
mov
mov
lcall
cmp
test
sub
mov
inc
inc
and
rclb
inc
gs
push
cmp
jecxz
out
or
outsb
outsb
std
inc
fimuls
popf
lods
jle
pop
mov
shl
into
lods
movsl
or
in
js
xor
out
xchg
mov
ret
sbb
inc
mov
mov
pop
mov
andb
mov
sbb
jmp
lahf
jmp
or
test
pop
mov
movsl
movsl
xchg
inc
push
sub
popf
es
pop
enter
jnp
inc
jl
adc
and
mulb
repnz
mov
cmp
mov
add
xor
sbbl
pop
dec
cld
cmpsb
cmp
fwait
mov
shl
bound
jnp
dec
pop
lret
xlat
fldl
addr16
xchg
and
pushf
dec
test
stos
outsl
repz
sbb
dec
lcall
stc
xchg
aad
sub
into
loopne
push
in
lret
pop
divb
jle
subb
cmc
scas
dec
adc
repnz
mov
cmp
insb
bnd
lcall
mov
push
arpl
push
xchg
jg
sub
sahf
lods
pop
dec
repz
adc
xor
pop
inc
push
out
jns
ja
call
add
sub
or
popf
xor
lahf
pop
test
lods
nop
es
repz
xor
je
pusha
adc
mov
movsl
xor
pop
lock
xchg
cmp
int3
int3
loope
xchg
mov
add
out
xchg
push
fisubl
in
mov
push
xor
jae
sbb
inc
pop
lods
ljmp
jnp
and
in
in
mov
push
add
jbe
test
jle
sbb
test
jo
iret
inc
push
sti
pop
push
int3
cmp
xchg
cs
pop
jo
mov
mov
movsl
jnp
lret
stos
add
or
adcb
cmp
popf
mov
rcll
jmp
pop
clc
lahf
faddl
cmp
loopne
mov
fmul
out
mov
loopne
xchg
pushl
mov
aaa
imul
xchg
mov
test
push
jb
xchg
adc
push
addr16
sti
mov
xchg
sbb
les
ja
mov
test
pusha
movsb
fstl
repz
or
test
mov
dec
cmp
ja
lods
mov
and
jp
fisubl
mov
imul
mov
js
jb
mov
xor
je
pusha
sub
mov
xchg
mov
sbb
and
inc
mov
scas
cmp
pop
test
sub
and
sub
inc
in
sub
fucomi
dec
jae
sub
push
pop
xor
jmp
lea
xor
popa
fnsave
xchg
and
jo
push
ret
mov
or
lret
push
push
pop
stos
lcall
dec
das
cmp
leave
call
push
pop
bound
or
mov
inc
jmp
or
push
inc
loopne
push
loopne
cmc
mov
dec
pop
mulb
imul
stc
clc
idivl
scas
mov
pusha
pop
xchg
outsb
loope
push
mov
mov
movsb
dec
bound
mov
inc
test
dec
fisubl
cwtl
pop
jb
xchg
cmp
movsb
ds
jbe
adcl
jb
push
dec
in
cmpl
sbb
sarl
inc
push
js
fidivrl
xchg
bound
out
in
push
cmpsb
cmp
gs
les
inc
mov
push
mov
sub
fldl
fnsave
sbb
push
jne
mov
mov
int
inc
inc
sar
mov
pusha
test
outsb
jle
xchg
jo
shll
or
dec
in
pop
pop
cmc
andl
push
xlat
rolb
pop
or
fsubrl
das
out
xchg
ja
cwtl
repz
aam
js
inc
test
iret
cmp
adc
dec
lahf
fs
push
mov
xrelease
cmc
cli
iret
frndint
insb
shrl
sbb
lahf
adc
push
scas
ficompl
jb
sti
xor
test
inc
insl
add
sbb
sbb
and
sbb
aas
rol
jge
rcrl
mov
fcoms
push
test
and
iret
lret
movsb
clc
sbb
sub
in
cwtl
daa
lcall
jp
jl
cld
bound
pop
ja
add
ret
xchg
hlt
hlt
mov
in
pop
pop
fcmove
cmp
cld
repz
stos
or
mov
inc
scas
inc
test
into
pop
mov
xchg
pop
xchg
in
mov
sbb
lods
mov
jl
iret
andl
sbb
lds
mov
inc
or
mov
enter
and
sahf
fsts
aad
jg
push
xor
pop
pop
cmc
into
cmp
imulb
test
ror
imul
daa
out
jmp
int
xchg
adc
out
xor
shlb
imul
inc
popa
imul
push
adc
shl
pop
imul
push
cmp
in
sbb
clc
dec
out
pop
xor
or
pop
mov
mov
push
sahf
lods
jp
fisubs
adc
ret
std
push
ljmp
cmp
int3
xor
shll
or
push
aas
mov
enter
xor
adc
mov
lret
xlat
mov
stos
cmp
push
movsl
lds
mov
jne
fnstsw
sahf
sub
pop
inc
mov
xor
addb
dec
mov
cmp
mov
shrl
les
fldl
repz
rcrl
xor
mov
sub
dec
or
pop
je
push
scas
cltd
jbe
push
push
xor
push
ja
test
imul
inc
push
cmp
and
push
xor
mov
ds
xor
push
pushf
adc
sahf
push
xor
shrl
inc
out
movsb
cmp
fs
xchg
xchg
adc
ficompl
das
sbb
and
xor
loop
adc
or
imul
xchg
sub
js
adc
and
les
jp
mov
mov
jbe
lods
in
adcl
jg
adc
int
into
and
aas
inc
push
xor
push
lret
push
lock
sbb
out
insl
arpl
fldl
add
inc
inc
cmp
std
or
mov
push
and
xor
fldcw
jle
pop
add
or
sub
iret
bound
mov
mov
ret
cwtl
data16
leave
pop
mov
xchg
push
pop
icebp
cmp
rcrl
add
lcall
sub
imul
mov
push
and
lock
out
push
sub
cs
cmc
je
mov
add
jnp
in
cwtl
push
sub
out
cmc
cmp
mov
imul
repz
out
fsubrs
shr
push
ret
loop
mov
adc
pop
inc
out
movsb
adc
adc
aaa
lea
cmp
lea
clc
std
push
mov
dec
call
sti
daa
stos
scas
inc
mov
fs
fsubs
out
add
sbb
aas
push
ja
addr16
inc
push
inc
dec
jmp
xchg
and
stos
cmpb
push
and
adc
cli
popa
cmp
pusha
add
shlb
xor
push
mov
jb
xor
data16
lret
pop
adc
xchg
int
mov
rorl
or
and
inc
mov
sbb
push
or
movb
movsb
stos
cld
cmpsb
sti
clc
loopne
mov
std
fdivrs
and
daa
aas
fdiv
inc
orl
ret
mov
push
test
inc
sbb
dec
arpl
notb
js
push
arpl
outsb
sbb
push
add
fsubrl
cltd
aas
xchg
icebp
stc
adc
add
xor
enter
xchg
lods
mov
cmpsb
mov
xchg
sbb
dec
mov
mov
push
inc
mov
icebp
push
fwait
loope
jae
loope
test
dec
testb
push
icebp
inc
xchg
into
loop
daa
xchg
adc
adc
xchg
push
jg
sti
pop
and
enter
cmpsb
out
inc
pushf
incl
xchg
inc
iret
fnstenv
mov
cmc
jmp
mov
pop
clc
gs
adcl
jle
stc
popa
mov
mov
call
popf
cli
test
jle
push
cmp
inc
inc
lea
aaa
imul
seto
mov
xor
pop
xor
mov
xchg
jmp
or
adc
mov
mov
scas
xchg
sbb
cmpb
rcrl
cmpsl
jnp,pt
decb
inc
rol
jmp
rol
mov
jbe
push
lcall
pcmpgtd
push
pusha
inc
cmpl
out
sub
scas
and
or
in
lds
pop
or
out
stos
xchg
mov
aaa
or
jecxz
sub
loop
fidivrs
subl
mov
negl
mov
mov
push
mov
bound
rorl
imul
lock
adc
daa
inc
pop
cmp
and
scas
cmp
inc
pop
je
inc
arpl
and
dec
push
in
ss
push
cmp
les
les
cmpsl
insl
call
imul
adc
mov
and
inc
and
inc
mov
mov
pushf
jg
insl
and
sub
push
jmp
fsubs
dec
mov
or
pop
outsl
xor
sub
push
push
mov
out
ret
fadd
les
scas
aaa
jae
movsb
jg
pop
inc
in
cmp
push
test
dec
mov
and
into
das
icebp
int
int3
jecxz,pt
mov
or
pop
out
mov
mov
dec
pop
inc
xlat
pop
push
ds
xchg
jne
aaa
dec
repz
pop
imul
xchg
out
or
lret
cs
mov
out
mov
outsl
test
sub
hlt
aaa
dec
push
xor
insl
adcb
push
pop
inc
sbb
or
movsl
rcrb
push
icebp
cs
xor
pop
in
pop
icebp
nop
dec
mov
rclb
push
lods
mov
lret
lods
mov
movsl
dec
mov
xlat
cmc
cmp
in
pop
adc
or
leave
xor
inc
enter
leave
es
cwtl
leave
pop
or
mov
js
xchg
cwtl
jne
mov
sbbb
gs
xor
in
push
les
mov
pop
test
sbb
jle
xchg
xor
inc
in
push
gs
pop
add
insl
stc
je
arpl
arpl
aam
insl
sub
mov
dec
sbb
xchg
lods
inc
sahf
push
outsb
mov
or
arpl
mov
jo
mov
fidivrs
dec
scas
sub
in
dec
in
jns
aaa
and
pop
pop
loope
push
je
push
cs
lea
rorl
outsb
xchg
mov
xchg
cmp
incl
bound
xchg
test
lret
popa
clc
in
cli
mov
lcall
and
cmp
loope
mov
mov
aad
sbb
adcl
scas
mov
push
mov
dec
addl
push
mov
add
lods
cmp
enter
js
mov
pop
mov
jl
jge
clc
xchg
inc
xlat
ret
sbb
insb
test
push
push
push
xor
aad
push
cmp
dec
je
add
cmpsb
xchg
shrb
inc
xchg
sub
xor
decl
nop
xlat
lock
mov
loope
mov
add
test
pop
imul
shll
add
mov
mov
fadds
jne
pop
mov
es
jecxz
lods
cltd
aam
lret
into
jne
jbe
aas
iret
mov
sbb
pop
ret
test
dec
fistpl
jecxz
clc
out
mov
push
adc
fisttpll
jg
pop
and
jb
aas
dec
ficoms
fwait
dec
mov
jp
repnz
dec
dec
ffree
sub
mov
and
mov
xchg
rol
idivl
clc
fdivrl
inc
aad
xchg
push
mov
sbb
jnp
adc
loopne
insb
xchg
mov
into
mov
call
cli
std
fdivs
nop
pop
ja
adc
pop
int3
test
inc
mov
roll
bnd
fs
pushf
and
rcrl
push
arpl
inc
push
inc
push
mov
and
iret
cli
inc
or
sub
xchg
mov
adc
and
ljmp
jge
loope
mov
ficoms
shrl
insl
dec
xlat
jp
xor
das
jnp
and
add
adc
jge
push
xchg
ss
subb
rorb
lods
mov
lods
iret
std
lods
inc
comiss
add
cmpsb
les
or
in
daa
lret
jae
cltd
xor
ror
sahf
push
call
fldl2t
cmp
mov
xchg
add
pop
jne
sbb
jnp
jmp
sub
push
push
lods
mov
stos
sub
incb
xor
inc
loop
js
mov
lret
bound
adc
scas
stos
jae
push
lret
mov
je
test
in
pcmpeqd
test
je
sub
pusha
idiv
push
rcr
jp
jo
xor
shll
dec
sbb
es
inc
adc
mov
loop
mov
sbb
jnp
push
adc
int
pop
jp
je
mov
es
test
pop
mov
xor
loope
jp
xorl
jge
nop
mov
sti
in
popf
push
jmp
sbb
out
mov
mov
add
inc
jecxz
shll
push
and
jb
lds
dec
fidivrl
fildll
leave
outsl
xchg
and
negl
inc
pop
mov
inc
lods
stos
fldl2t
lods
jae
icebp
and
sub
cmp
cmp
iret
es
int3
lret
push
fcmovbe
inc
sbb
jb
lahf
divl
scas
dec
ficompl
jb
inc
lock
dec
ds
cwtl
inc
add
pop
lds
mov
push
ds
incl
int
push
idivl
push
jo
movsb
sub
fldl
in
in
mov
rcl
cwtl
cltd
and
cmpsl
push
push
or
sbb
xor
mov
inc
imul
xchg
stos
push
lcall
lcall
mov
sub
aas
adc
push
dec
sbb
je
jae
pop
pop
outsl
sti
cmp
lock
xchg
lcall
mov
adc
data16
stc
aad
out
add
repz
cli
dec
push
sub
inc
scas
sbbl
fisttpl
lret
sub
xor
mov
enter
mov
jne
ljmp
out
fldenv
and
mov
test
push
or
subb
mov
dec
pop
pop
inc
shrl
sbb
jno
addr16
mov
mov
stc
leave
push
aaa
mov
and
test
adc
roll
call
cmp
rcr
hlt
sub
mov
mov
stos
inc
adc
clc
inc
ror
mov
and
adc
stc
inc
mov
dec
inc
stos
bnd
out
pop
adc
push
setb
inc
or
inc
mov
sbb
push
inc
push
dec
mov
outsb
mov
adc
enter
mov
ss
stos
clc
inc
push
iret
add
inc
mov
lret
call
lea
bound
sbb
out
and
mov
push
ret
or
mov
int
das
jp
das
in
cmc
add
lahf
int3
pop
dec
lock
push
and
mov
mov
jae
lods
sub
cmp
dec
inc
out
test
xchg
mov
in
xchg
ficomps
mov
add
jo
lcall
dec
popa
arpl
sbb
mov
jmp
fdivrs
or
movsl
inc
push
mov
mov
push
xor
jmp
pop
sahf
rcrb
cld
nop
mov
adc
inc
fsubrl
rclb
repnz
jp
xchg
jne
inc
dec
nop
stos
jne
ljmp
inc
adc
rcll
in
mov
out
jp
or
xchg
sub
push
lret
bound
loopne
inc
es
aad
lods
ja
or
and
cli
pop
in
jmp
or
outsb
dec
in
jnp
sbb
int
arpl
pusha
stos
cltd
xor
xchg
add
mov
imul
into
mov
in
pop
movsl
lret
cmovle
xor
and
shrl
sti
outsl
outsl
or
test
negb
sub
hlt
movsl
js
jle
cmp
push
filds
xchg
mov
jbe
icebp
bound
inc
popa
dec
stos
mov
jge
xor
mov
sub
pmovmskb
jns
jge
js
adc
fwait
rol
dec
mov
repz
loop
sub
add
mov
jl
dec
test
cltd
ljmp
cs
push
cld
popa
enter
jae
inc
movsl
adcl
subl
cltd
cmc
add
add
dec
lret
and
adc
lea
repz
mov
dec
and
sub
adc
aaa
test
and
jb
xchg
jg
xor
leave
pop
cld
lret
or
pop
testb
ret
dec
arpl
scas
das
cmp
insb
nop
pop
cmc
rcrl
and
test
jne
jo
test
repz
mov
int3
call
lock
push
and
push
pushf
xchg
pushf
jbe
jle
in
imul
mov
pop
push
in
mov
xchg
sub
cwtl
sti
mov
aad
and
cs
stos
sbb
jp
xchg
add
pop
ss
cmp
lock
imul
sub
pop
mov
ds
outsl
fwait
icebp
mov
xchg
cs
mov
push
fcoml
mov
jg
pop
sbb
push
loop
xor
popa
cmpsl
and
fnstenv
popa
mov
mov
fs
inc
dec
mov
mov
gs
inc
movsl
test
inc
loopne
icebp
or
pop
mov
loopne
fistpl
cmpsl
or
pop
icebp
repnz
mov
lock
movsl
bound
pop
mov
inc
flds
cmp
adc
pop
dec
fidivs
jno
out
cmp
subl
out
pop
xchg
in
sub
lods
arpl
cmpsb
clc
imul
mov
jbe
mov
cs
fsubp
dec
fs
mov
stos
cli
jl
int3
mov
fdivl
mov
dec
shlb
dec
xchg
lods
idivb
dec
daa
insb
hlt
dec
int
popf
xor
out
loope
and
mov
add
insl
movl
mov
cmp
mov
jo
and
xchg
fsubrs
inc
mov
adc
jge
xor
jmp
or
cmp
add
lds
flds
sahf
cmp
mov
es
stos
jbe
add
loope
push
push
jb
mov
lods
or
out
std
cmpsb
mov
aaa
leave
inc
pop
insb
jle
xor
sub
cmp
inc
adc
sbb
shlb
scas
and
xchg
push
fistps
fdivl
sub
repz
mov
aaa
pop
add
call
inc
fidivl
cmp
adc
dec
mov
cmp
inc
fdivrl
or
pop
scas
sub
xchg
xor
cmp
adc
lcall
lret
cmpl
lret
xchg
inc
sub
xor
sahf
dec
pop
imul
scas
inc
xchg
dec
mov
ds
jecxz
mov
push
fstpt
fisubl
dec
fnsave
call
push
push
adc
and
mov
push
jno
aad
cmp
pop
stos
notb
stos
aas
or
sbb
and
aam
mov
mov
lret
out
cmp
xchg
lods
inc
daa
add
adc
lret
bound
xor
gs
jmp
call
mov
ret
mov
cwtl
inc
push
mov
mov
push
and
mov
inc
dec
push
push
xor
fisubrl
movsl
insb
icebp
mov
imul
data16
popa
andb
dec
movsl
aad
mov
pop
aam
xor
adc
scas
ljmp
stos
adc
cmp
push
cmp
pop
imul
inc
cmc
cmc
lahf
loopne
xchg
lds
ljmp
ds
testb
outsb
mov
lcall
les
mov
ljmp
outsl
push
gs
pusha
jo
in
andl
xchg
popa
cmp
in
subb
mov
inc
out
test
das
jnp
add
test
arpl
out
addr16
cltd
test
add
jge
sbb
xchg
movsl
cmpsb
test
push
push
adc
xor
clc
ja
shrl
jecxz
loope
ret
pop
lods
jns
push
cmp
mov
leave
movsb
cs
pop
lds
cli
je
jo
lcall
loope
aam
popf
push
xchg
ds
jmp
clc
jecxz
sarb
idivb
loop
mov
sub
mov
cmp
pop
in
arpl
jge
adc
mov
std
lock
pop
lock
test
fidivrl
bound
aas
test
dec
mov
scas
out
les
scas
addr16
xlat
and
or
or
jns
imul
fwait
push
jb
cmp
loop
scas
xor
cmpsb
movsb
inc
into
adc
and
inc
in
jb
mov
xchg
rorl
pop
movsl
cmpsl
aaa
jbe
cltd
decl
mov
mov
mov
nop
dec
out
stc
mov
sahf
call
mov
inc
dec
mov
int
push
cmp
or
mov
aad
insl
sbb
sbb
cmp
pop
sahf
inc
jecxz
ja
pop
cmpsl
pop
xchg
sahf
xor
cli
sub
jne
test
push
cmpsl
ds
lds
sub
in
test
cmp
push
mov
sbb
lea
or
cmp
insb
add
dec
sbb
xchg
mov
into
daa
out
xchg
data16
mov
leave
movsl
adc
ret
mov
pop
pop
std
scas
mov
pop
adc
shr
add
in
jmp
pop
cmp
adc
jae
in
sbb
ss
inc
das
popa
mov
sbb
push
inc
push
out
sbb
ja
sbb
mov
lods
addr16
outsl
mov
fxch
xchg
sti
cli
sbb
cltd
pop
cmp
mov
xchg
xor
cmp
sub
adc
cmp
cmc
mov
test
ds
fidivl
push
jl
dec
movsb
clc
or
xchg
xchg
mov
les
jp
test
cmp
fs
and
cli
jp
inc
lods
sbb
popf
cltd
ret
inc
fcompl
pop
cwtl
das
adc
mov
test
sbb
mov
push
sbb
mov
dec
jnp
sbb
les
cmp
mov
lock
dec
add
fdivs
sub
jge
lret
in
movsl
icebp
or
daa
xchg
test
outsb
add
loopne
mov
mov
popf
stc
pop
lods
and
test
lea
sti
and
adc
ss
loopne
rcrb
jmp
mov
movsl
insl
in
cli
or
xlat
adc
leave
sub
sbb
cld
push
mov
test
movsb
movsb
aaa
or
loop
push
fsubrl
and
mov
jp
notb
pop
sub
mov
loop
pop
lock
add
repnz
ss
pushf
lret
in
and
sbb
imul
or
lea
mov
mov
xchg
inc
xchg
test
xor
ja
outsb
jp
cwtl
push
pushf
stc
push
les
sbb
xchg
pop
xchg
ret
stos
mov
hlt
je
mov
shr
ret
in
jmp
lods
mov
hlt
mov
xor
mov
adc
adc
jbe
dec
lcall
outsb
movsl
scas
inc
xlat
imul
sahf
jle
push
ret
pop
mov
hlt
mov
ja
aam
jg
sbb
lret
pop
cmp
out
shlb
aad
in
ret
cmpsb
mov
push
call
imul
fcomi
and
xchg
pop
call
sub
lods
and
int3
lret
or
pushf
hlt
fs
bound
lea
test
inc
inc
les
jg
imulb
cld
jge
inc
add
adc
test
in
jle
inc
jecxz
and
out
scas
sbb
stos
in
jl
xor
push
aam
inc
push
insb
addr16
xchg
mov
and
push
sub
xor
jmp
pop
sub
mov
adc
pop
in
inc
test
mov
das
mov
fdivp
fidivs
inc
xchg
mov
and
push
flds
adc
push
mov
pop
mov
mov
sub
mov
stc
aas
dec
in
movsl
adc
jne
jb
rclb
loopne
mov
jbe
imul
iret
arpl
in
in
dec
mov
cmp
dec
pop
xor
ljmp
fldt
cmpsb
add
jmp
std
push
int
lret
push
rcrl
out
xlat
pop
inc
pop
lods
out
ss
fwait
cld
ret
mov
mov
jbe
inc
ss
js
xchg
fsubp
cmp
push
int
ljmp
cli
es
xchg
sub
das
mov
scas
add
sbbb
dec
out
push
dec
int
es
or
or
xchg
mov
iret
add
adc
pop
outsb
iret
mov
push
sub
xchg
inc
push
fstl
push
popf
sbb
dec
dec
cld
sub
sub
shrb
lods
loope
push
insb
pop
add
add
enter
xchg
mov
mov
pop
gs
dec
scas
in
xor
shrl
out
or
cmpb
mov
scas
dec
pop
xorl
sbb
adc
xchg
test
lret
lret
clc
mov
lret
xchg
in
xchg
fdivrl
fcomps
fs
dec
sub
dec
sbbl
pop
sbb
pop
icebp
adc
enter
lret
bound
popa
cld
xchg
inc
stos
hlt
mov
mov
mov
mov
fcoml
xor
cmp
loop
movsl
orb
push
xchg
popa
shl
mov
pusha
int3
mov
adc
jle
dec
xchg
inc
insb
addr16
jg
xor
push
adc
loopne
fidivrl
cwtl
cmp
mov
cmpsb
xchg
pusha
aaa
adc
mov
push
add
testb
mov
int
insb
bound
xchg
mov
mov
xor
sub
jmp
and
lods
xchg
sbb
pop
pop
push
fdivrs
popa
test
mov
popf
outsb
loopne
or
movsl
aaa
daa
in
mov
adc
mov
dec
adc
dec
in
fidivs
lret
ret
mov
mov
mov
xlat
sahf
add
daa
divl
shl
mov
pop
fxch
loop
mov
addr16
add
mov
mov
add
dec
lret
outsl
and
loopne
cmp
add
repz
je
pop
mov
iret
sbb
adc
aam
xor
pushf
das
inc
test
ds
adc
xlat
aaa
lea
sbb
or
mov
les
mov
faddl
dec
jmp
arpl
mov
fscale
or
xor
fs
addb
ss
outsl
es
inc
xor
add
xchg
xchg
and
adc
pop
cmp
in
loop
mov
xor
jae
loop
adc
mov
xchg
ss
and
mov
je
inc
loope
popf
xor
jbe
inc
mov
decl
sub
jmp
mov
sbb
testb
hlt
sub
dec
ja
mov
inc
dec
enter
xchg
xor
jne
mov
enter
imul
addr16
or
adc
ss
pop
out
inc
movsl
sbb
cmp
inc
loop
lods
jo
mov
push
mov
adc
mov
xchg
or
dec
shrl
int
pop
in
cmp
cmpsb
push
hlt
mov
adc
pop
push
ja
jp
xchg
mov
mov
cmp
xchg
notl
pop
icebp
and
daa
loop
jne
dec
push
jmp
outsb
shrl
clc
shrb
movsl
jnp
pop
mov
add
daa
pop
lock
xor
fs
sub
hlt
inc
fcoml
stos
mov
ja
ss
cmp
ret
inc
popf
int3
loop
lcall
sub
cmp
les
loope
sub
insl
xchg
sbb
push
cmp
inc
ds
add
jecxz
push
xchg
mov
lods
popa
mov
xor
pushf
xor
dec
adc
loop
lods
cld
xchg
jnp
sub
push
push
insl
add
mov
shl
mov
jp
aam
call
sbbb
aaa
std
or
fwait
adc
data16
movsl
and
outsl
testl
enter
sbbl
add
sahf
mov
sbb
dec
cmpsb
xorb
scas
jns
pop
outsb
inc
inc
fidivrs
sub
or
cmp
xchg
jns
lret
fnstcw
xor
fnstenv
push
cmp
add
jno
adc
loopne
sbb
arpl
imul
and
xor
jg
lock
repz
scas
sbb
inc
adc
adc
add
bnd
ds
dec
xchg
cmp
push
fisttpll
push
movsb
add
dec
cwtl
aaa
imul
or
imul
lcall
out
lahf
daa
imul
sbb
ret
shrb
aas
sbb
repz
or
das
or
fisubrl
out
xchg
dec
popa
shr
mov
or
add
cli
dec
out
dec
adc
jge
insl
test
lahf
sub
sarb
push
dec
jno
cwtl
dec
aam
out
push
out
mov
daa
repz
pop
jbe
or
inc
pop
fildl
loope
mov
push
mov
xchg
scas
pop
orl
mov
jmp
cmpsb
xorb
movsb
inc
sbb
jl
cs
insb
mov
data16
in
mov
mov
stos
adc
inc
iret
lahf
imul
imul
xor
or
aas
adc
movsb
addb
hlt
sarl
cmpsl
cmp
pusha
les
xchg
cs
mov
add
mov
loop
mov
loop
inc
pinsrw
xor
push
icebp
mov
sub
push
loope
sbb
jg
out
inc
mov
adc
sub
and
out
shrb
movsb
pop
fcoml
cld
jno
xchg
test
sbb
sub
mov
mov
mov
cmp
xor
fidivrl
sbbb
lret
hlt
sub
and
cltd
adc
lds
jno
nop
push
ja
add
jne
cs
xchg
stc
and
stc
dec
dec
fisttpl
aad
push
fnstsw
mov
mov
shlb
push
int3
pop
jae
into
out
ljmp
repnz
jne
sub
loop
inc
pushf
pop
inc
dec
push
jnp
or
jl
cltd
jo
pop
orl
xchg
sbb
andb
adc
outsb
test
xor
sbbl
add
ljmp
and
push
mov
lods
call
jg
jle
jb
mov
out
clc
lahf
mov
adc
mov
jno
or
dec
mov
bswap
stc
std
xor
popf
leave
pushf
aam
xchg
dec
inc
push
jmp
fnstenv
mov
push
pop
imul
sub
mov
repz
in
das
cmp
add
inc
hlt
sbb
mov
adc
aas
iret
inc
cltd
sti
mov
fwait
or
add
icebp
adc
push
rclb
in
xor
sub
xchg
cs
mov
enter
push
mov
rclb
mov
pop
mov
inc
idivl
adc
sub
imull
js
iretw
aam
sbb
jmp
testb
out
data16
dec
cmp
or
data16
pop
aaa
xlat
into
jp
or
andb
sub
sub
mov
shll
xor
mov
stc
les
pop
cmc
xchg
jge
sbb
ja
xor
insb
scas
push
xchg
sub
sbb
jo
cmp
xchg
popa
dec
xlat
cmc
jmp
pop
mov
and
mov
ret
xchg
data16
call
filds
sahf
dec
adc
js
sti
mull
and
test
lea
xchg
sub
dec
loope
or
loopne
test
mov
jb
int3
bound
mov
mov
enter
or
pop
mov
dec
shlb
mov
loop
add
adc
incb
bndstx
insl
add
cmpsb
add
inc
test
push
in
je
shrl
mul
jns
xchg
pop
hlt
add
pop
lds
mov
xor
or
and
sti
xchg
sub
xor
cmp
outsb
subb
mov
sbb
popf
iret
test
imul
cli
add
cmp
pop
outsb
daa
lds
insb
sub
lret
jp
inc
outsb
mov
test
data16
cli
inc
pop
xchg
je
jns
xchg
push
les
cmp
sbb
xchg
call
fwait
mov
fisubs
addl
scas
xchg
in
std
or
call
inc
sub
test
mov
mov
cmp
out
lcall
outsl
insb
mov
inc
push
jle
imul
add
add
mov
xor
movsl
push
call
ret
or
add
mov
jge
lea
jo
fdivrl
lea
mov
adc
lods
notb
fists
xor
fcmove
fidivrl
fsubs
jo
push
inc
out
sti
pusha
daa
sbb
cmp
xor
add
and
push
les
ljmp
xchg
mov
subb
xlat
cs
adc
lds
xchg
add
out
je
sbb
xchg
cmp
aad
add
add
je
pop
mov
pop
adc
fs
dec
dec
sarb
sbb
inc
adc
inc
data16
mov
popf
sub
negl
fwait
or
xor
cmpsl
std
daa
fistpl
loopne
mov
test
adc
in
adc
jae
or
adc
dec
call
jne
add
int
idivb
add
mov
cmp
fs
pushl
jge
xchg
push
nop
in
sbb
xchg
add
mov
lock
xor
cmp
pop
pop
sbb
push
addb
lret
sti
std
add
mov
jnp
mov
fisubrl
int3
pop
bound
and
rcll
cmp
push
dec
in
insb
xchg
sub
xchg
aas
out
mov
shlb
test
and
into
and
mov
lret
mov
or
enter
xor
or
xchg
jo
push
bound
fdivl
push
pop
incl
cmp
pop
lret
sub
mov
dec
call
or
jns
adc
fistl
jne
and
test
sub
xor
int3
push
int3
std
adc
push
cmp
out
jae
clc
data16
stos
and
cltd
mov
inc
test
aad
cmp
inc
push
imul
xchg
pop
dec
mov
cmpsl
cmp
cwtl
imul
scas
jns
mov
cmpsl
inc
aas
cwtl
rol
lock
int
inc
mov
jle
out
or
dec
pop
cli
jno
sti
aam
xor
leave
mov
xchg
hlt
ret
or
nop
dec
mov
jo
inc
sbb
jno
clc
push
mov
jne
flds
mov
call
pop
out
fnstenv
inc
stos
cwtl
and
xchg
fidivrs
out
add
mov
pop
xor
rcrl
inc
jae
aas
fbstp
xor
and
xlat
outsb
mov
bound
adcl
cmp
outsb
mov
xchg
cwtl
jle
mov
mov
inc
sbb
sbb
adc
and
jecxz
jb
mov
jp
cli
xchg
aas
push
icebp
jnp
popf
aam
popf
cmp
in
std
push
fwait
sub
xchg
cld
fstpt
mov
mov
pop
imul
repnz
mov
jl
adc
scas
es
icebp
cwtl
xor
or
cmc
pop
jne
out
insb
cmp
mov
add
dec
dec
push
jbe
arpl
lret
mov
push
fs
sub
and
stos
std
iret
lock
bound
dec
imull
lahf
mov
and
lods
fsubrl
push
xchg
mov
ret
std
jg
dec
xchg
gs
aam
mov
in
mov
cmp
xchg
shlb
insb
mov
das
fcmovbe
test
mov
jmp
fs
mov
push
out
dec
js
sbb
shll
mov
dec
adc
jge
xchg
sub
cmp
rol
fwait
cmp
fbld
sbb
xor
mov
out
stos
lods
or
test
outsb
inc
fcompl
lret
sub
setl
int
imul
cmc
add
pop
mov
lcall
imul
add
pop
insb
in
and
mov
cltd
push
in
pop
mov
mov
mov
addr16
mov
into
jge
rcr
xchg
mov
sub
mov
mov
ret
cmp
push
jmp
ud0
sarb
movsb
or
pusha
outsl
hlt
xchg
push
or
scas
leave
push
jmp
in
mov
mov
add
or
ja
pop
in
mov
bound
test
mov
sub
imul
cld
dec
jmp
mov
call
loop
adc
add
mov
xchg
scas
xor
push
cmp
inc
jo
jp
mov
jg
hlt
aad
es
insb
jnp
add
xorl
mov
mov
sub
pop
scas
add
divl
mov
mov
jg
push
xlat
mov
ficompl
add
jl
repz
stos
jne
and
cmp
mov
lds
pop
push
pop
add
jp
inc
popa
push
repnz
adc
mov
sbb
xchg
cmp
jbe
sbb
add
xor
sbb
jbe
pop
mov
arpl
ja
aas
or
scas
cmp
daa
fisttps
sub
jae
ficoms
push
fisttpll
lods
cmpsl
xchg
pusha
xchg
pop
or
push
in
sub
testl
in
movsb
repnz
xor
cli
jne
inc
pop
jnp
push
popf
aad
and
adc
ss
mov
test
sub
loop
data16
xchg
push
mov
sahf
in
aas
or
cmp
repnz
je
xor
inc
push
mov
jnp
scas
ja
mov
pushf
loop
and
mov
xchg
mov
lods
int3
push
icebp
jmp
lds
mov
add
sub
or
in
daa
sbb
outsl
cmpsl
pop
clc
in
daa
cmpl
pusha
rolb
xchg
ljmp
lret
mov
pop
ja
sub
inc
roll
mov
xor
cwtl
cmp
pop
sub
testb
outsb
xchg
cmp
fistl
lds
xor
sbb
mov
nop
jl
shrb
xchg
iret
lahf
js
mov
std
mov
movsl
cmp
or
xor
push
sbb
fildll
dec
insb
adc
inc
out
mov
mov
cmc
mov
jp
jg,pt
insb
es
mov
sub
mov
mov
sbb
mov
sahf
sub
clc
mov
xchg
push
push
xchg
adc
jb
sub
shlb
dec
pusha
dec
aaa
push
out
push
lahf
mov
jle
add
les
xchg
push
inc
popa
xor
fisttps
pop
fwait
popf
mov
testl
mov
or
ljmp
lock
das
shlb
dec
and
addr16
and
stos
inc
and
adc
cmp
mov
jg
jb
push
mov
jb
push
sub
shrl
push
outsl
adcl
xchg
js
rorl
pop
push
jle
sub
subl
push
xchg
lock
and
stc
inc
dec
fucom
movsl
sub
pop
cld
icebp
punpcklwd
mov
cmpsl
add
push
aaa
dec
dec
dec
es
mov
cmp
sub
dec
in
lock
andl
xor
jb
inc
push
xchg
xchg
adc
sbbl
mov
es
jmp
mov
ficoms
stos
mov
jg
add
out
repnz
adc
cmp
sub
push
mov
hlt
rol
or
push
cmp
dec
fisubl
rorl
fdiv
pusha
mov
mov
out
testb
lcall
xchg
fisttpll
adc
pop
inc
cmp
cmp
push
out
dec
ficomps
jns
push
mov
jb
sbb
dec
into
cltd
andl
and
and
nop
jl
cmpsl
jo
adc
cwtl
jne
or
scas
cmp
out
xchg
xor
mov
or
sub
shrl
loope
stos
fs
movb
push
shll
aad
movsb
cmp
imul
dec
loopne
push
aaa
push
inc
push
out
xchg
dec
ds
sbb
push
inc
clc
aaa
fs
pop
xor
popa
mov
decb
aam
push
in
push
cmp
cmpsb
inc
addb
mov
xor
jbe
dec
test
jne
adc
mov
cmc
xor
or
mov
pusha
sbb
aam
scas
xchg
in
sbbl
rcrb
or
mov
mov
fdiv
fsubrs
test
rcll
adc
int
pop
pop
popf
and
push
in
fisubl
cltd
ja
test
xor
sbb
repnz
push
fyl2x
adc
stos
xor
push
mov
add
inc
sbb
push
adc
into
add
add
or
jns
adc
loop
mov
cmp
push
faddl
add
jmp
push
dec
push
xchg
mov
and
adc
ds
mov
inc
in
movsl
jmp
es
mov
pop
daa
enter
icebp
adcl
insb
jnp
in
dec
mov
shrl
pop
inc
test
ror
sub
loope
sbb
mov
in
out
out
pop
jge
into
sarl
in
xchg
cmpxchg
hlt
cmp
jg
call
lret
pop
xchg
xchg
ja
test
insb
add
idiv
fwait
movsl
and
scas
cld
add
lock
adc
jmp
add
call
and
test
mov
stos
pop
stc
mov
inc
inc
xchg
push
push
or
fildll
and
pop
addr16
aaa
ljmp
pop
scas
inc
fsubr
fists
cld
sbbb
lea
or
pop
push
mov
xchg
fsubs
push
setp
repz
jo
push
fdivl
shll
fwait
loopne
and
mov
jnp
dec
xchg
icebp
loopne
sti
xchg
jl
mov
mov
mov
pop
repnz
or
dec
in
test
mov
pop
fwait
decl
int
movsb
inc
sbb
insl
add
cmpsl
xchg
movd
jp
adc
and
sub
movsl
pop
lret
pop
inc
mov
and
adc
adcl
ficoms
test
insb
dec
xor
jb
cmc
mov
push
xchg
mov
fimull
pop
test
sbb
inc
or
mov
dec
iret
jne
clc
es
mov
test
cmp
jl
fs
rcrl
pop
and
push
add
push
sub
std
mov
sub
fmull
push
mov
test
cmp
out
repnz
dec
test
leave
pusha
movsb
sbb
out
sbb
es
cmp
jecxz
lret
bound
cmp
enter
lds
xchg
test
and
in
push
mov
cmp
inc
gs
push
adc
jp
imul
cld
sbb
test
into
arpl
out
pop
mov
movsl
out
xchg
das
mov
in
sarl
cmp
dec
mov
dec
dec
jmp
shl
sub
outsb
inc
shrb
cltd
sub
hlt
scas
dec
push
xchg
and
inc
push
pmovmskb
dec
lock
jecxz
xchg
ja
dec
mov
ja
outsb
sti
rorb
sar
inc
cwtl
cltd
xor
gs
xchg
iret
mov
sub
lock
push
lods
js
fwait
dec
xlat
outsb
cmpl
shll
shl
dec
push
dec
clc
xchg
sub
nop
sub
mov
and
jns
sti
dec
mov
mov
rcrl
enter
fistps
xlat
jo
dec
mov
inc
aad
push
mov
mov
jno
dec
xlat
mov
adcb
sub
push
scas
sbbb
repnz
pmaxub
xor
adc
inc
push
sbb
ret
cmc
leave
or
jo
inc
lods
test
push
or
mov
inc
ljmp
jno
inc
add
jmp
or
mov
or
xlat
add
mov
les
mov
cmp
aaa
lahf
lods
push
movsb
cmp
repz
outsl
push
adc
test
lea
xor
push
mov
inc
xchg
int
ret
data16
pop
insl
adc
je
xor
xchg
insl
inc
dec
xchg
adcl
lret
jnp
dec
mov
adc
adc
and
lret
loope
enter
int
or
mov
fmull
xchg
add
sbb
loopne
mov
fwait
jns
int
mov
andl
push
aas
push
jns
andl
loopne
mov
sbb
cli
jb
push
adc
jmp
adcb
push
lahf
stos
cmp
and
mov
insb
cli
jno
mov
or
cmp
mov
lock
imul
jle
test
repz
cmp
in
jg
insb
mov
jecxz
jecxz
jbe
mov
stos
xchg
mov
roll
divb
mov
popf
mov
lcall
popa
add
mov
testb
add
je
popf
std
jne
fldt
xor
pop
xchg
roll
hlt
test
popf
xor
andb
lret
jae
pop
hlt
pop
xchg
fidivs
push
lret
inc
pusha
jmp
lods
xor
fdivs
in
mov
in
pop
into
adc
xor
mov
dec
xor
jl
inc
mov
push
aad
pop
mov
das
ret
loopne
or
es
mov
movsl
jno
scas
rorb
pop
xor
mov
lret
sbb
ret
js
out
xor
xor
mov
popl
push
push
mov
arpl
imul
or
and
pop
xchg
sub
xor
and
jne
sarb
mov
fstp
fcmove
int3
pop
std
sti
push
cmpsl
sti
ljmp
repz
shr
lds
lods
stos
in
pop
lret
ds
pop
xchg
fistps
das
inc
sub
test
sub
mov
fs
inc
mov
sub
dec
ljmp
adc
or
into
dec
mov
dec
push
fildl
cmp
cs
cmc
jb
ficoml
daa
inc
aaa
pop
dec
fldt
xchg
sbb
mov
pop
cltd
jmp
les
or
push
mov
pusha
or
aas
cwtl
xchg
lret
inc
and
fs
cmp
push
jmp
ficompl
lahf
xchg
mov
movsb
jmp
repz
xchg
and
or
dec
sbb
pop
push
push
mov
or
sti
xor
andb
pop
in
js
ret
adc
pop
mov
push
test
mov
orb
enter
jecxz
push
int
ror
inc
mov
jnp
mov
test
dec
gs
xchg
and
mov
xor
adc
aam
adc
test
js
xor
inc
repnz
mov
add
xor
push
jae
pop
ret
lock
push
loop
in
in
mov
loope
cmpsl
fadds
pop
cli
cs
les
out
cmc
mul
mov
cld
out
arpl
fsubs
jb
out
fwait
sub
sahf
pushf
jbe
imul
es
xor
stos
mov
sbb
mov
aas
and
jmp
iret
imul
push
ljmp
call
shlb
push
fsubrs
in
loopne
push
cmp
or
jbe
test
pop
int3
std
notl
sbb
pop
mov
inc
xchg
mov
test
mov
arpl
push
repz
cld
mov
push
add
push
aam
insb
imul
mov
scas
out
add
outsl
ljmp
mov
push
jle
xorb
mov
fists
pop
jp
aaa
lret
in
scas
push
pop
andl
repz
cmp
push
or
fildl
jmp
loopne
cmpsb
inc
dec
fstpt
and
xlat
arpl
mov
and
push
jg
xchg
xor
mov
push
cmc
inc
push
sub
or
aaa
pop
mov
xor
fsubr
aaa
dec
sub
lods
sbb
movsb
repnz
add
sbb
pop
push
dec
ljmp
mov
lock
and
mov
popa
fbstp
push
ja
iret
lret
std
xchg
setne
push
mov
rcr
or
stos
ja
mov
pop
outsb
mov
imul
sbb
mov
ss
xchg
sti
bound
sub
push
mov
rol
stos
mov
stc
xor
out
jne
fnsave
arpl
sahf
or
and
jge
stos
shrl
shrb
xor
rorl
mov
test
lret
jb
inc
nop
push
sbb
inc
dec
jb
mov
push
jbe
xchg
sti
xchg
ret
nop
stos
loop
cmp
inc
push
movsl
jne
mov
adc
dec
pop
gs
arpl
lret
cmp
test
bound
insl
mov
pop
inc
adc
in
fists
mov
mov
add
fucomip
jb
fisttpl
xor
mov
pop
adc
or
xor
aad
fistpl
xor
mov
jo
push
cs
fs
lods
xchg
out
sbb
in
mov
inc
ret
dec
xor
fisubl
pop
jno
jnp
and
xchg
and
mov
push
mov
mov
cmp
dec
imul
mov
out
jg
leave
pushf
iret
popa
push
test
push
in
leave
xchg
xor
jne
push
xchg
clc
inc
and
mov
into
faddp
jge
add
out
aaa
int
xchg
scas
fstpt
outsb
add
leave
pop
adc
pop
jnp
and
push
mov
lods
int3
das
inc
mov
in
inc
and
int
xor
outsl
cmp
pop
xchg
testb
fldcw
xchg
mov
outsb
insl
repz
loop
push
jno
lahf
push
loope
mov
rol
pop
add
sub
cld
jg
pushf
mov
push
lds
ja
inc
imul
jp
sub
shlb
mov
xchg
test
int
pop
dec
dec
add
push
xchg
pop
aas
adc
mov
add
mulb
shrl
jno
cmpsl
stos
aad
jnp
repz
dec
push
aaa
pop
jbe
popa
mov
test
xchg
jbe
push
inc
sub
es
add
lret
hlt
shlb
or
out
mov
movsb
add
insl
into
aad
mov
les
fbstp
push
loopne
jmp
lret
pop
and
push
imull
jne
and
jp
cmp
jecxz
jle
movsl
add
pop
ss
adc
pop
ds
aam
mov
pop
repnz
push
bnd
sub
les
jmp
ret
and
je
dec
pop
mov
adc
adc
xor
push
je
push
ljmp
sahf
add
or
cmp
mov
xor
mov
fimuls
mov
mov
pop
cwtl
je
shll
test
mov
repnz
rcrb
push
lret
mov
sbb
push
out
lcall
into
inc
and
fstps
das
call
inc
xor
mov
xchg
iret
fcomi
push
mov
js
xor
sub
out
adc
add
sbb
ds
arpl
imul
push
xchg
mov
push
addr16
xchg
dec
dec
out
out
xchg
fcoms
jg
or
mov
mov
cli
outsb
dec
cmp
cld
leave
lea
or
fs
jg
xchg
inc
je
cmp
jg
out
inc
mov
inc
minps
popf
push
cs
inc
and
arpl
outsb
xor
gs
pop
cmp
sti
repz
cld
and
lahf
sub
call
mov
imul
cmp
push
adc
cmp
std
jbe
das
pop
fs
loope
aas
icebp
punpckhwd
push
or
int3
arpl
cmp
add
sub
or
fbstp
call
xor
push
mov
pop
daa
lcall
and
cmp
ljmp
jno
clc
xchg
in
negb
adc
xor
fdivrl
push
fmulp
out
jbe
add
popa
mov
fucomp
jg
out
outsb
mov
les
cwtl
add
xor
test
xchg
lods
dec
jb
pop
cwtl
imul
negb
stos
icebp
into
jno
andl
mull
mov
out
pop
lahf
push
mov
mov
imul
in
mov
add
jecxz
push
inc
popa
sub
aad
ja
push
dec
xor
stos
or
lret
stos
fcoms
negb
jge
into
scas
cmp
stos
inc
dec
pop
in
jbe
lock
sbb
sub
mov
shl
dec
mov
in
rcll
mov
addr16
into
adc
fisubrs
lock
mov
sbb
push
scas
aam
xchg
mov
ljmp
movl
out
add
test
xlat
adc
int
jnp
push
mov
stos
inc
sub
enter
pop
filds
lods
fucomp
push
or
jp
ss
inc
fisubrs
sar
and
ret
push
repz
ret
cli
mov
mov
sub
pop
fnstenv
dec
cmpsl
pop
inc
xchg
dec
xlat
pop
jp
push
push
mov
sbb
lods
cmp
ficoml
xor
fwait
or
stc
xchg
mov
outsl
enter
xor
xchg
in
aas
cwtl
mov
xchg
xchg
inc
add
adc
shlb
out
sub
or
fidivrl
loop
and
std
andl
imul
or
je
stos
lods
dec
xchg
sub
and
faddl
push
push
push
mov
or
ficompl
aad
dec
in
push
sub
mov
ficompl
dec
push
or
es
sbb
ret
loopne
cmc
mov
shrl
inc
push
add
sub
cmp
and
es
out
nop
pop
rcrb
jmp
inc
pop
push
jnp
sbbl
mov
jp
jge
cmp
adc
pop
or
sbb
lods
inc
mov
cmp
test
xchg
mov
arpl
push
mov
pop
or
testl
ret
popf
std
xor
in
mov
xor
inc
in
insb
popw
push
lods
fldenv
pop
daa
mov
pop
fistps
add
pusha
or
out
mov
outsb
dec
sbbl
mov
iret
pop
inc
inc
rorb
loopne
xor
cmp
push
sbb
and
test
add
inc
adc
pop
and
jmp
lcall
add
push
mov
icebp
nop
cmp
adc
jg
pop
test
fbld
insl
jge
xchg
shlb
add
pop
inc
push
or
mov
mov
ljmp
fsts
iret
push
int3
loopne
jns
cld
xor
call
jle
bnd
pop
push
jge
add
mov
mov
add
daa
frstor
push
lock
mov
inc
mov
pop
or
testb
out
add
cli
cltd
fisttps
test
pop
das
push
lea
ja
test
mov
shll
stos
and
xlat
fucomip
pop
sub
jo
add
popf
dec
out
fnsave
mov
inc
pusha
mov
inc
and
mov
adc
out
mov
cmp
pop
jo
ss
push
push
push
cmp
mov
fwait
mov
in
cmp
inc
mov
push
adc
lock
fidivs
fs
pop
popf
lret
cld
mov
outsb
stos
dec
push
mov
xor
inc
rcrb
out
daa
jl
mov
mov
mov
stos
inc
jne
in
adc
movsl
jns
xchg
fcomps
mov
aam
jo
jne
sbb
ds
ret
hlt
lock
push
jae
pop
es
faddl
xchg
push
fdivrl
fldenv
add
andb
jp
rcrb
aas
push
fdivs
pop
push
mov
mov
shr
jne
jmp
stos
fsts
lret
and
add
mov
add
rorl
cmp
ds
pop
dec
fisttps
and
dec
mov
iret
dec
daa
inc
pop
mov
sbb
jg
cwtl
and
ss
lods
inc
mov
pop
lret
pop
dec
xchg
mov
xchg
pop
push
arpl
ds
sub
dec
aad
test
pop
and
aam
fldt
out
je,pn
sbb
inc
sbb
fsubrl
dec
bnd
jnp
shrb
in
pop
popf
rcrl
mov
inc
xchg
loope
push
pop
outsb
push
js
lret
lea
cmp
mov
fisttpl
cmp
and
cmp
pop
rclb
cmc
out
jp
and
inc
bound
jno
je
jbe
loope
loop
pop
add
push
sub
call
cs
mov
add
rorl
std
mov
icebp
xchg
inc
lcall
add
out
push
jo
sbb
mov
mov
add
addb
xchg
sub
mov
loope
and
cld
xorb
push
in
xchg
adc
adc
test
xlat
and
or
test
and
fidivl
fimuls
add
sbb
stos
mov
imul
add
jecxz
ss
cmp
pop
fiaddl
out
mov
xor
mov
faddp
jg
fstpl
mov
xor
jae
adc
scas
test
aad
pop
hlt
xor
dec
jae
lds
xchg
iret
xor
push
mov
jnp
cmp
sbb
fidivs
jg
out
inc
push
popf
in
sahf
xor
or
out
filds
mov
mov
aas
add
faddp
pop
pop
cld
xchg
pop
jl
push
mov
mov
add
jnp
js
je
xor
psubq
inc
loope
or
inc
and
mov
mov
jge
in
xor
test
std
stc
lea
dec
loop
fsts
lds
daa
xchg
push
push
es
and
lods
iret
test
push
jmp
cmp
jg
scas
xchg
pop
dec
je
mov
shll
xor
aad
xchg
mov
divb
ja
inc
rclb
adc
aaa
dec
mov
push
hlt
mov
sarb
sbb
xor
std
push
ficomps
sbb
popa
mov
loopne
mov
push
in
and
lods
inc
fldt
fisttpl
notb
lods
inc
sub
jo
test
pop
cmpsl
or
inc
pop
adc
pop
int3
or
fs
outsl
loop,pt
outsb
dec
mov
xchg
insb
xchg
je
subb
pop
and
mov
mov
mov
adc
int3
ret
stc
outsl
js
xchg
pop
in
ss
xchg
cmc
push
sbb
sub
daa
cmp
jg
lret
push
stos
xor
sub
cld
outsl
dec
or
push
sub
icebp
push
fldl
cld
push
sub
xchg
insb
fbstp
sahf
mov
insb
jle
pop
shll
xchg
push
pop
xor
push
xor
xor
add
pop
popa
clc
mov
adc
int
js
and
cmpl
je
stos
mov
pop
sub
mov
ljmp
and
lsl
inc
push
pushf
lods
mov
push
imul
jo
gs
pop
adc
je
push
push
push
stos
push
lods
mov
mov
loop
lods
inc
daa
call
cmp
test
push
mov
inc
gs
insl
les
stos
insl
adc
add
mov
cmp
xchg
push
inc
inc
shll
fs
mov
addr16
stc
or
mov
xchg
push
xchg
jge
out
dec
add
sbb
push
int
aaa
in
out
mov
movsb
rclb
add
das
pop
cmc
pop
sbb
jl
add
in
lods
cmp
mov
and
fildl
mov
mov
movsb
cmp
or
push
ret
inc
xlat
and
adc
lret
push
mov
fwait
xor
mov
adc
mov
jle
sbb
or
mov
hlt
cmp
clc
sahf
mov
pop
popf
aad
call
mov
jne
pop
adc
pop
popf
and
lahf
daa
cmp
adcb
hlt
push
xor
mov
lock
addr16
push
jo
gs
stos
and
xor
jno
or
std
push
mov
or
push
insl
mov
shlb
xor
sbb
test
shrl
sub
adcl
or
mov
cs
inc
xlat
adc
aaa
dec
out
dec
pop
cmc
jg
and
rcr
iret
pushw
repz
cmc
and
and
jle
iret
xchg
bound
xchg
or
mov
mov
arpl
xchg
or
mov
call
pop
cmc
push
pop
and
gs
int
sub
lds
lods
xchg
pop
test
rcll
aad
movsl
pop
mov
sbb
das
jns
hlt
mov
shl
mov
adc
outsb
jmp
add
mov
rclb
mov
loopne
nop
sub
mov
fwait
das
pop
dec
sbb
push
sbb
stc
dec
add
out
push
scas
jmp
and
or
xor
lahf
jnp
lods
gs
push
sahf
dec
lods
std
or
aad
leave
test
mov
dec
mov
shr
push
icebp
xchg
add
sbb
push
stos
sbb
sub
add
int
mov
outsb
mov
xorb
repz
mov
out
pop
push
jl
decl
data16
mov
pop
in
ret
cltd
lea
std
rcl
xor
testb
dec
repz
mov
adc
adc
test
inc
test
dec
jne
repz
cmpl
add
mov
and
mov
dec
mov
pop
inc
push
int3
popa
push
loope
xchg
xor
xchg
les
sbb
jns
sub
dec
add
pop
clc
fdivr
es
lcall
dec
test
imul
xchg
push
arpl
es
inc
mov
popf
add
dec
cmp
fdivs
in
dec
ja
xor
push
mov
lods
mov
push
pushf
inc
inc
cmp
dec
jnp
dec
and
sahf
stc
leave
fs
dec
shlb
out
jmp
lret
adc
push
mov
shrl
adc
enter
stc
and
pop
stos
divl
push
rcrl
sbb
aas
int
xchg
cmpsl
adc
push
adc
stc
cs
inc
lods
pop
adcb
aad
jno
enter
lea
mov
insl
shl
push
pop
cld
xchg
xchg
orl
iret
loope
cltd
je
pop
clc
ds
xchg
sbb
outsl
scas
movsl
adc
out
cmp
jbe
push
out
push
mov
sbb
xchg
iret
mov
xchg
leave
aaa
inc
sub
int
incb
sti
push
pushf
xchg
lods
in
fsubrs
out
outsl
hlt
jae
xor
test
inc
mov
add
and
outsl
jle
and
rcrb
adc
imul
push
jno
pusha
stos
xor
xor
data16
jge
jnp
sti
stos
xor
inc
inc
xchg
cmp
mov
mov
cwtl
das
pop
fxch
pusha
or
push
in
stc
stc
out
sub
hlt
stos
mov
push
nop
popa
into
fcomi
repnz
mov
ss
xchg
jne
cmpsl
mov
push
in
jle
and
test
or
inc
sbb
out
sbb
jp
in
in
add
jns
bound
push
fistpl
mov
dec
cmp
and
push
adc
jp
sbb
mov
fiadds
mov
add
lret
insb
test
mov
cmc
dec
pop
adcl
and
out
or
jle
js
sti
push
push
cmp
aam
pop
leave
test
lods
jno
xchg
and
addb
test
dec
push
sbb
sub
jnp
fsubrs
push
js
lea
fists
andb
sub
xchg
fadds
out
inc
push
stc
add
jnp
sbb
cmp
xor
jno
hlt
and
in
inc
dec
ja
lahf
mov
imul
icebp
mov
cltd
cltd
decb
mov
mov
dec
mov
enter
cltd
imul
or
mov
loopne
mov
imul
inc
pop
mov
dec
in
aad
or
in
push
adc
insl
add
push
mov
cli
nop
mov
and
push
cs
jg
jnp
lret
fildll
lret
inc
or
daa
stc
sti
jb
and
dec
shlb
in
int3
inc
push
dec
stc
js
xchg
hlt
aad
xchg
stos
enter
sbb
lea
cli
cmp
and
cs
push
adc
xchg
rcr
cmp
dec
jge
imul
sub
inc
fimull
mov
hlt
pop
push
bound
add
sub
loopne
mov
inc
push
into
shll
push
inc
add
cmpsl
dec
lods
inc
int
shrl
dec
jmp
inc
dec
pop
jns
xor
adc
xchg
sti
xor
inc
stc
aad
fdivrs
pop
pop
leave
jecxz
push
les
lcall
lods
add
jnp
cmp
popf
cli
push
repz
stos
rorb
cmp
incb
push
and
imul
or
add
shll
outsl
xchg
call
sti
mov
enter
xchg
sub
mov
mov
and
cmp
call
in
shll
pop
inc
pop
outsb
adc
lret
jmp
cmp
mov
push
dec
ffreep
jle
loope
js
pop
mov
mov
push
mov
jmp
pop
jle
bndstx
mov
sub
mov
push
mov
lea
cmp
xchg
and
icebp
add
stos
lock
fistl
jmp
and
sti
insl
pop
mov
mov
push
shl
jnp
jle
pop
mov
add
cltd
adc
xlat
inc
sti
icebp
mov
pop
ljmp
jl
fildll
into
mov
stc
fistps
push
push
xchg
adc
or
xchg
mov
in
mov
fistpll
rolb
push
fstl
lcall
call
pop
fwait
shrl
cmc
xchg
sbb
aam
lock
lods
mov
jge
cmpsb
sti
je
jb
adc
xchg
xchg
inc
inc
ret
inc
xlat
mov
out
pop
mov
sub
add
xchg
push
cmpl
adc
scas
call
mov
push
hlt
jge
add
jne
lcall
and
sti
mov
xor
hlt
mov
popf
add
addr16
insb
enter
stc
mov
mov
inc
push
pop
fisubl
dec
xor
mov
cwtl
jmp
mov
or
popf
stos
fs
jge
sbb
jne
in
add
cmp
je
and
out
jp
shlb
mov
repnz
fldenv
inc
cmp
xorb
dec
pop
rorl
popf
cmp
xor
lcall
and
icebp
lods
xor
or
out
sbb
adc
fldl
movsl
stc
rclb
xchg
cltd
sub
mov
int3
dec
lcall
adc
pop
loope
sub
lcall
mov
jno
es
mov
cmp
out
mov
imul
cmp
and
mov
popa
fucompp
xorb
frstor
test
or
loop
mov
jp
add
out
cmp
pop
sub
xchg
jne
xchg
push
push
mov
insb
and
add
mov
test
idivb
xchg
ljmp
outsl
cs
shrb
dec
mov
scas
pushf
mov
sbb
fisubrl
jae
mov
adc
jge
mov
out
and
inc
pop
das
data16
mov
xor
adc
push
rcll
out
or
ja
sbb
test
mov
inc
jmp
cmp
es
xchg
sub
sbb
cmpsl
ds
lods
jae
sbb
jle
mov
jmp
andb
xchg
addr16
arpl
lcall
xchg
shl
insb
mov
push
inc
lret
ret
data16
mov
add
jecxz
aam
es
jmp
aad
subl
jnp
es
hlt
jecxz
mov
sub
dec
add
aad
push
mov
mov
adc
mov
js
cmpsb
ds
stos
sub
mov
inc
mov
std
push
sbb
ret
fmuls
lods
xlat
mov
mov
mov
jp
xchg
mov
xor
sbb
loope
sub
mov
mov
pop
ss
jle
idivl
adc
jmp
lcall
jmp
or
mov
insl
ja
xchg
test
fimull
pop
xchg
pushf
lret
out
cmpsb
icebp
mov
arpl
jp
sub
fs
or
imul
out
or
xchg
xchg
pop
ret
xorl
ret
in
pusha
jecxz
add
cmp
inc
jb
or
test
add
mov
push
or
aam
negb
cmp
pop
repz
add
push
xor
xchg
sub
in
cmp
dec
sbb
cmp
enter
repnz
pop
test
mov
xor
push
jne
xor
jmp
mov
cmpsl
repnz
xchg
popf
cld
or
xor
clc
stc
je
je
sbb
cmp
push
xchg
push
shrl
ljmp
arpl
mov
bndstx
shl
icebp
xchg
mov
adc
jmp
and
rcl
icebp
fdiv
sub
xchg
mov
lret
lock
je
stc
or
jno
addr16
in
inc
jmp
xor
mov
sub
iret
into
leave
fistpl
sub
js
loope
inc
lcall
xor
dec
cmc
sub
aam
mov
je
in
imull
dec
sbbb
adc
iret
push
shlb
clc
sti
sar
nop
xor
cmpsl
cwtl
adc
sbb
lret
sub
dec
mov
lods
inc
clc
scas
addr16
dec
in
pop
lahf
xlat
rcl
addl
cmc
out
scas
xor
je
cmp
pusha
jbe
sbb
dec
loop
adc
sbb
xchg
or
push
jae
mov
cmpsb
mov
dec
inc
mov
and
out
test
repz
outsb
sarl
ret
add
fistpll
fs
jg
les
cmc
and
mov
popf
cmp
dec
mov
mov
jg
push
pushf
and
jp
std
int
dec
mov
and
push
fadd
movnti
mov
arpl
push
pop
adc
lods
clc
cmpsb
xor
mov
mov
shlb
mov
dec
adcl
imul
sbb
test
jg
es
and
pusha
repnz
inc
fstps
loop
daa
subb
aad
jns
fsubl
mov
mov
dec
add
cld
sub
test
mov
cmp
stc
nop
loopne
out
sti
push
je
and
and
imul
imul
into
xchg
dec
fistps
xor
sub
fildl
stos
ds
cmp
lds
enter
sub
xor
cwtl
and
inc
test
fs
xchg
mov
pop
jecxz
push
movsl
lds
pop
sub
into
test
jp
push
xor
fdivrs
mov
pop
out
xchg
gs
lahf
sahf
in
inc
pop
adc
or
nop
loop
or
sbb
jbe
lahf
xchg
jmp
inc
std
xchg
ja
jb
insb
rcrb
jne
arpl
dec
jmp
cmp
jmp
mov
pop
add
out
cmp
sahf
mov
jmp
push
xchg
and
jnp
pop
push
lahf
jge
jg
inc
inc
inc
dec
imulb
aam
lea
scas
cmp
mov
pop
xor
icebp
mov
sarl
addr16
dec
ret
ja
bound
sub
stc
inc
sbb
push
fdivr
push
imul
inc
xor
jne
int3
mov
jnp
cmp
adc
pop
inc
fisubrs
mov
jae
mov
xlat
xor
into
shr
cmp
jnp
sbb
mov
inc
inc
pusha
pop
loopne
aad
xchg
pop
fnstcw
xchg
xor
xchg
xorb
ret
dec
push
push
jae
leave
in
icebp
push
iret
mov
adc
mov
jle
adc
ret
sti
pop
notb
cmp
push
sub
push
outsb
mov
pop
call
and
push
mov
outsl
into
push
mov
out
mov
adc
push
lahf
cmc
push
int3
dec
add
sub
lcall
inc
pop
and
fldlg2
idivl
xchg
stc
je
cmpb
or
flds
insb
sbbb
fcoml
push
lret
jp
push
add
xor
sbb
mov
adc
insb
in
push
xor
cmp
sub
add
mov
out
gs
aaa
shrb
pop
subb
leave
mov
cmp
mov
dec
and
mov
push
jne
adc
mov
sub
xchg
cltd
cmpsl
xchg
adc
mov
clc
sahf
lods
sbb
xor
and
jg
scas
popf
out
sbb
lods
es
fldl2t
and
sub
xor
sbb
inc
push
jns
repz
lret
adc
leave
and
dec
inc
out
xor
shlb
mov
inc
jb
jg
jns
shlb
sbb
or
jo
cld
sub
jp
xchg
les
jge
scas
xchg
imul
repnz
das
jae
or
lock
iret
in
lods
mov
test
add
fldcw
jns
in
pop
cmp
cmp
in
repz
repz
imul
cmp
mov
into
dec
or
rclb
inc
fdivl
xchg
ds
mov
xor
aad
sbb
mov
lock
add
adc
mov
mov
jle
sbb
and
test
std
jle
sub
xor
das
inc
jp
in
fwait
mov
ret
testl
fs
pushf
data16
in
sub
hlt
mov
add
or
or
loop
sub
push
mov
outsb
mov
outsb
and
inc
mov
fs
mov
icebp
cmp
cmpsb
mov
dec
adc
mov
and
cmp
hlt
inc
xchg
repz
fimull
bound
jnp
mov
cld
in
lods
xchg
adc
mov
repnz
jne
repnz
cmc
pusha
aaa
test
ds
dec
push
out
std
inc
lods
cmpsl
sub
sahf
dec
sub
jecxz
testl
adc
mov
pop
jae
sbb
pop
adc
loopne
add
ret
dec
cmp
lret
mov
bound
mov
inc
mov
mov
sub
jg
jno
test
imul
pop
jae
pop
scas
push
mov
scas
pushf
add
mov
cltd
movsl
icebp
xchg
in
xchg
stc
pop
xchg
inc
adc
mov
dec
xchg
and
cld
xlat
jbe
ss
or
lea
adc
lea
mov
push
dec
cwtl
sbb
dec
idivl
fists
push
xor
arpl
out
movups
cmp
scas
mov
sarb
fmul
sahf
inc
or
cld
mov
push
jbe
leave
das
cmp
mov
incb
fistpl
ss
mov
in
cmp
movsb
push
lahf
jb
add
pop
negl
popa
es
call
sub
aas
pop
ds
aam
pop
and
test
popf
inc
xchg
in
adc
sub
nop
loope
pop
mov
fsub
loop
enter
xchg
mov
sbb
scas
dec
popa
std
or
push
int
push
pop
xchg
and
hlt
jmp
loopne
add
int
push
sti
test
neg
sbb
jae
cli
jle
mov
lret
jl
xor
in
dec
in
mov
jbe
outsl
out
orb
mov
jb
sbb
add
or
lds
cmp
out
add
mov
insl
jge
int
inc
out
daa
fstpt
pop
jns
imul
in
jle
cltd
add
test
lahf
add
xchg
mov
xchg
push
xchg
addb
and
sbb
fists
add
jmp
or
fldl2t
cmc
bound
cmp
ja
adc
pusha
pop
mov
out
sahf
jo
or
scas
mov
aad
nop
repz
fwait
arpl
mov
mov
mov
cmp
imul
addr16
ljmp
iret
divl
xor
push
xchg
add
out
sub
pop
xchg
xchg
xor
xchg
ds
pop
stos
cwtl
push
dec
fnstenv
xor
mov
sub
adc
icebp
jg
mov
mov
adc
inc
int3
dec
pop
fdivrs
xor
mov
fmuls
push
sbb
ret
mov
repnz
and
cmp
mov
test
push
ret
xchg
popa
dec
pop
mov
mov
shrb
sarl
pusha
mov
sub
push
aas
flds
shll
in
fadds
pop
sub
pop
in
stos
xchg
adc
mov
enter
subb
cmp
or
jne
ljmp
imul
int
add
jbe
inc
push
lea
xchg
roll
stos
inc
inc
negb
mov
pop
xor
rol
cmp
push
push
iret
leave
jae
and
outsb
cltd
jae
push
lods
jle
jb
fisubl
xchg
arpl
sbb
aam
ja
mov
rclb
mov
jge
jns
inc
cmpsb
sub
sbb
rorl
clc
inc
loop
adc
dec
mov
jecxz
dec
dec
test
insl
mov
adc
xor
insl
push
inc
aam
lea
mov
nop
das
gs
iret
rclb
xchg
scas
call
fscale
sahf
xor
imul
push
xor
sbb
cmpsb
pop
addr16
iret
clc
inc
jbe
sub
mov
test
mov
mov
push
sahf
jp
es
cli
fisubs
push
xchg
jg
xor
inc
add
adc
test
cli
push
aaa
pop
pop
sbb
mov
dec
push
adc
cmc
mov
shlb
dec
xor
pop
xchg
mov
mov
js
add
repnz
in
mov
dec
fidivl
dec
clc
mov
call
out
repnz
and
sahf
cmp
int
fs
outsb
movsb
out
sbb
or
imul
adc
pop
cs
xor
std
daa
subb
jg
mulb
jnp
mov
xchg
sbb
test
jbe
dec
pop
loop
stc
xchg
or
inc
hlt
repz
sub
dec
fsubrs
push
addr16
cli
xor
xlat
sub
outsb
add
fisubrs
sub
mov
jns
test
add
ret
nop
rcrb
cmp
xor
cmpsl
pop
fwait
jbe
aam
imul
push
icebp
mov
fstpt
add
es
xchg
push
pop
mov
mov
pop
add
mov
or
fists
int3
push
lea
mov
gs
xchg
cmpsl
push
insb
xchg
add
pop
fbstp
jg
cwtl
insb
fnstcw
mov
dec
in
or
inc
inc
fists
pop
pop
es
add
jg
add
push
push
pop
jl
fiadds
cwtl
lcall
scas
int3
shrb
inc
stos
hlt
addb
aas
jp
cmpsb
out
adc
stc
sbb
shl
mov
gs
inc
data16
mov
pandn
insb
xor
test
pop
out
and
nop
xchg
xchg
mov
addl
cmp
lds
inc
push
jmp
pop
scas
push
es
and
daa
xor
mov
sbbl
sbbb
ret
sub
and
mov
test
insl
dec
int
push
into
cmp
test
or
pop
and
les
xchg
xchg
std
and
aam
int3
xchg
jb
not
es
lds
movsl
lds
and
push
jmp
cld
in
and
xchg
pusha
jg
shll
xor
jnp
gs
scas
jecxz
xorl
mov
out
mov
jae
cld
push
pusha
lods
sti
mov
or
mov
lea
or
sti
pop
repz
out
inc
lds
jb
mov
xor
int
outsb
icebp
sub
insb
mov
lea
inc
inc
inc
lret
enter
mov
pushl
sahf
fwait
sbb
int
mov
cmp
or
or
sarb
mov
test
xchg
push
iret
and
and
cmp
repz
adc
dec
dec
dec
cmp
pushf
cli
dec
out
push
lahf
mov
push
cs
mov
dec
fucomp
mov
popf
mov
or
jno
outsl
popf
cmc
mov
add
xchg
outsl
sarb
insl
sti
fdivl
push
and
sbb
inc
arpl
cmp
inc
loope
lahf
mov
xor
sub
jecxz
cwtl
sarb
iret
xlat
popa
or
imul
adc
cmp
movsb
add
or
sbb
aas
lds
add
push
je
adc
outsl
fdivl
pop
or
into
ja
ja
adc
and
bound
mov
repz
inc
subl
cli
dec
dec
sub
lds
mov
cmpxchg
pop
xlat
inc
push
ja
fsubl
inc
fistpl
cltd
xor
stc
xchg
testl
int3
rcrb
pop
int3
jae
fistpl
mov
cmp
jns
cli
mov
icebp
or
jge
mov
push
jl
jge
mov
arpl
pop
clc
adc
cmovnp
push
popa
and
push
and
cvtpi2ps
lods
out
hlt
pop
xorb
mov
or
sbb
mov
in
jp
cmpsl
and
and
or
push
mov
sub
lea
fimull
scas
push
pop
scas
out
jns
cmp
sbb
sbb
lahf
xor
in
jle
test
jl
cmc
popa
jmp
inc
xchg
xor
bound
mov
push
in
das
pop
loope
and
sti
into
cmp
adc
push
sbb
cmpb
push
rolb
xchg
pop
ljmp
call
inc
inc
mov
inc
shlb
mov
mov
mov
lods
movsl
mov
mov
arpl
xchg
mov
lods
movsb
mov
gs
add
xor
in
stos
mov
sahf
xor
ja
insb
add
cwtl
or
cltd
sbbl
sbb
orl
mov
pop
ds
stos
mov
fcompl
aas
cmp
test
lret
test
pushw
popa
clc
mov
daa
mov
pop
cwtl
inc
push
cltd
mov
hlt
mov
rcll
test
xchg
sub
or
ficompl
push
cmp
mov
xchg
into
adc
jge
fidivs
add
jae
repz
ja
popf
sar
mov
push
in
xchg
dec
int
xorb
mov
js
mov
xor
inc
dec
in
es
cltd
int
dec
mov
cmp
xchg
or
lcall
and
rcll
mov
test
mov
shrb
add
adc
mov
inc
loop
lcall
cmp
pop
jg
mov
les
push
out
std
arpl
fildll
push
repnz
loop
mov
pop
pusha
mov
xchg
inc
rol
lock
std
xor
mov
outsl
fbstp
xchg
or
mov
dec
jecxz
pop
fs
xor
push
sbbb
add
add
jge
sbbb
sahf
loope
shlb
dec
out
loope
cmc
adc
jl
data16
cmpsl
cmp
jle
in
dec
lds
js
pop
mov
xchg
sub
sbb
xchg
or
sub
mov
fisttpll
movnti
iret
hlt
cmp
push
mov
nop
cmp
rorl
cmpsl
nop
lret
cmpsb
cmp
rcrb
lds
lock
outsl
shrl
push
outsb
add
fwait
mov
lds
or
push
jmp
mov
movsb
cmp
ss
lahf
ss
aas
jo
jno
push
jmp
xchg
mov
jo
inc
fldt
mov
stc
jl
cmc
mov
out
shlb
test
inc
fisttpl
lods
stc
fstps
inc
push
jmp
ret
lock
cmp
insb
push
montmul
cmpsb
inc
nop
test
ret
mov
jle
daa
mov
int3
adc
inc
std
fidivl
roll
popf
add
popl
insb
add
insl
adc
nop
shlb
icebp
mov
push
pop
dec
adc
ljmp
jno
cwtl
mov
es
and
insl
jecxz
sub
mov
mov
rdtsc
enter
loopne
loop
mov
mov
call
xor
shrb
mov
jg
aas
xor
add
xchg
call
xor
shrb
call
mov
loop
push
xchg
cs
ds
pop
outsl
out
add
mov
add
push
sub
outsl
in
pop
sbb
pop
xor
into
je
mov
sbb
pop
lods
inc
ss
xchg
jne,pn
inc
fldenv
ja
sahf
xor
jns
mov
mov
movsl
mov
shr
jae
sbb
xchg
sub
dec
jbe
and
int
hlt
mov
out
arpl
sbb
lcall
cmp
imul
add
fcmovnu
jo
jecxz
daa
sbb
shrl
cmp
mov
mov
xchg
push
stc
test
lods
inc
int
and
jne
test
mov
sahf
aam
iret
test
pop
mov
nop
mov
stos
mov
insb
cwtl
das
mov
jae
adc
mov
add
js
das
lods
inc
movsl
cmp
jp
aaa
stos
test
xchg
fldl
sbbl
bound
xchg
mov
lods
in
cmp
mov
imul
stc
mov
outsl
jle
sahf
mov
sub
mov
test
cmpsb
cmp
out
sahf
shlb
cmp
mov
dec
fisttps
popf
mov
push
dec
fbstp
ja
lock
mov
jnp
rcll
fsubs
in
push
dec
ds
lds
imull
pop
push
cmp
test
sub
idivb
imul
aas
and
clc
mov
rcrl
lock
cmpsl
loop,pt
mov
in
ss
data16
shll
add
xor
ss
addr16
dec
fistpll
repz
mov
aaa
into
pop
dec
in
or
adcb
or
xchg
int
mov
mov
imul
add
mov
inc
push
or
adc
cmp
enter
dec
pop
and
adc
insb
add
inc
mov
xor
flds
dec
out
dec
lds
mov
pop
lods
add
loopne
jbe
cmp
out
push
lods
push
mov
jnp
rcpps
cmp
out
xor
push
mov
jbe
ds
mov
bnd
and
je
and
int
lock
jmp
mov
jns
xor
push
gs
cwtl
adc
jp
cwtl
scas
inc
int
mov
mov
insl
inc
mov
mov
cli
sub
jne
xor
push
out
cmpsl
pop
repz
repnz
or
mov
je
fcmovnbe
lds
add
add
test
cmc
mov
sarl
adc
call
jp
sbbl
mov
outsb
add
cbtw
jl
lret
mov
lea
pop
pushf
xchg
cmpsb
mov
lock
xor
nop
das
aad
pop
mov
push
hlt
fsubrs
sub
pop
mov
jo
arpl
pop
nop
dec
loope
lds
ret
fidivl
sub
test
test
enter
pop
cwtl
das
xchg
and
push
insl
ror
data16
pop
mov
and
push
ret
mul
lods
inc
sbb
sub
pop
pop
in
ss
push
ljmp
jb
dec
push
stc
ss
mov
inc
sti
push
movsl
sub
popa
clc
or
mov
jns
cld
mov
xor
sahf
xor
sbb
mov
cli
loope
ds
std
xchg
pop
or
lret
call
ljmp
push
pop
repz
sbbl
and
jno
jne
mov
cmpsl
ds
add
sub
lock
or
insl
lahf
fwait
xor
out
adc
and
mov
jbe
mov
xchg
leave
fidivrs
adc
sbb
in
ds
lock
stc
adc
shrb
pop
loop
movsb
pop
sub
popf
pop
aaa
push
ljmp
xchg
add
mov
add
cmpsl
ds
jns
sub
shlb
rorl
iret
pop
sub
push
lods
int3
push
popf
stc
int
nop
lcall
jne
dec
and
xor
es
movsb
rol
icebp
lds
push
notl
xor
inc
sbb
outsl
dec
addr16
xchg
imul
call
or
int
dec
pop
pushf
xor
stos
adc
ffreep
test
ret
dec
dec
call
loope
nop
repnz
xchg
pusha
test
out
jp
pop
mov
cwtl
das
jne
xchg
stos
outsb
add
in
inc
add
jbe
loop
imul
loopne
xor
and
mov
cs
cld
pop
pop
popa
movsb
bound
add
mov
pop
scas
nop
jae
and
mov
sbb
loop
inc
mov
testl
addr16
mov
mov
mov
inc
xchg
push
test
sbb
loopnew
xchg
pop
lock
or
cmp
sbb
pop
imul
push
fimull
sub
cmp
jae
fistl
xchg
or
and
insl
pop
std
xchg
mov
mulb
in
and
loop
pop
leave
pop
lods
or
xacquire
out
and
sbb
pusha
push
aaa
jmp
xor
hlt
les
add
pop
lock
cmp
push
out
inc
fsub
pop
out
int3
inc
xor
std
sub
popa
stos
inc
or
iret
push
mov
out
fwait
mov
push
jae
xchg
ja
stos
push
mov
scas
clc
xor
bound
sub
sub
pusha
dec
xchg
mov
push
sarl
push
in
pop
push
cs
jge
dec
insl
insl
push
adc
mov
sbb
imul
lea
pop
adc
pop
leave
sbb
jmp
fisubrs
insl
and
xor
enter
fisttps
rcll
mov
sub
pop
mov
outsl
popa
mov
xor
xchg
push
pusha
stos
data16
and
ss
xor
jb
sahf
push
pop
sub
inc
jae
xor
popf
js
sbb
sub
jmp
inc
int3
xchg
inc
mulb
lods
data16
scas
xchg
xor
jb
dec
loopne
pop
jns
push
frstor
jecxz
dec
lahf
mov
jle
cwtl
mov
mov
mov
bound
jmp
jl
mov
cld
dec
in
pop
test
cmp
dec
loop
xchg
or
pop
dec
bound
sbb
adcl
je
je
lds
mov
aaa
fsubl
lahf
andl
shll
scas
repz
mov
ljmp
xchg
pop
jg
sahf
xchg
test
mov
scas
sbb
fwait
loop
sbb
mov
jecxz
cmpsb
stos
pop
add
cmc
insb
pop
sbb
sub
mov
xor
jp
push
pop
mov
movb
mov
arpl
test
jg
ret
add
out
xchg
sub
mov
out
xor
xchg
add
jae
push
pop
pusha
push
cmp
ret
rorl
lods
in
sbb
mov
xor
jb
or
mov
pop
push
nop
jns
aad
sub
pushf
xor
push
or
mov
clc
sub
mov
cmc
in
mov
fiadds
into
data16
lcall
insl
popa
clc
inc
adc
aaa
inc
add
pop
test
cli
pop
push
std
lds
in
sbb
add
stos
popa
or
jnp
fwait
xchg
pop
xchg
xchg
pop
lea
lcall
popf
lods
pop
vorpd
push
cmp
mov
add
dec
in
loope
repnz
xor
and
fidivrl
daa
xlat
sbb
icebp
scas
scas
jns
mov
repz
cmp
pop
and
push
jle
push
add
xor
ficoml
test
sub
push
fldcw
add
mov
cmp
jnp
icebp
jl
xor
push
xor
in
sub
inc
js
jp
fildll
mov
shrl
andl
push
mov
cs
mulb
adc
iret
xor
or
frstor
fdivrl
xchg
aam
scas
lock
push
imulb
add
ja
lods
dec
xchg
leave
inc
xor
sbb
or
push
lahf
pop
jecxz
jo
rorl
mov
jne
scas
inc
and
mov
pop
add
sub
pop
or
outsb
xchg
sti
sbb
mov
push
xor
jns
push
xchg
sub
jb
shll
fists
jno
out
dec
mov
or
pop
and
out
jb
inc
inc
push
or
dec
mov
adc
mov
cli
dec
mov
pop
mov
mov
icebp
mov
push
cmc
enter
push
sbb
xchg
std
jnp
ret
je
jecxz
lahf
mov
mov
stos
ljmp
clc
in
int
pop
rorl
aad
xchg
lds
xor
xchg
mov
jb
movsb
dec
jns
jnp
pop
pop
int
xchg
nop
daa
les
loope
call
sbb
cmc
imul
add
push
mov
xor
ljmp
jmp
xchg
out
scas
cmp
sbb
pop
add
outsb
or
cmp
jmp
stos
cmpsl
or
sbb
fucom
lock
mov
out
and
sti
lods
inc
sub
dec
ja
insl
out
hlt
sub
pop
dec
fisttps
lods
orl
nop
cmpl
mov
xchg
js
xchg
mov
addb
jl
xchg
cmp
sbb
in
das
repz
and
inc
movsl
sub
sti
dec
xor
pop
mov
push
add
dec
outsb
push
cmp
and
push
inc
mov
arpl
mov
subb
fwait
pop
xchg
mov
jecxz
mov
stc
arpl
mov
in
aas
in
push
xor
lods
scas
adc
mov
hlt
sub
and
inc
pop
lret
pop
mov
inc
xor
bound
test
call
sarl
mov
cmpl
gs
repz
and
int3
data16
jle
cld
xor
test
ret
pop
adc
jecxz
mov
mov
xchg
cltd
movsl
mov
sbb
xor
or
jg
push
inc
push
shrl
pop
fwait
xchg
dec
push
lods
pop
jno
push
dec
add
mov
ret
mov
cmpsb
pop
lods
add
add
ret
mov
stc
mov
nop
daa
call
or
mov
jmp
push
lcall
jnp
mov
pop
adc
cmp
add
leave
pusha
jns
ss
stc
mov
fdivl
mul
cmp
add
out
pop
out
xchg
mov
push
mov
int3
mov
hlt
das
mov
cmp
cmp
sarb
cmpsb
jno
out
in
push
bound
outsb
cmp
pop
rorb
push
push
movsl
aaa
je
mov
push
xor
xor
ja
aam
cwtl
dec
ret
sub
test
sub
add
scas
mov
cld
ja
out
lock
mov
or
jecxz
push
or
push
js
xchg
xchg
in
xor
sbb
in
outsb
into
bound
insb
out
mov
rcrl
push
pop
push
sbb
arpl
dec
adcb
and
cltd
ja
push
mov
sbb
jge
lock
pop
jnp
pop
inc
lahf
cmp
dec
jmp
and
dec
ja
sarl
movsl
cmp
hlt
mov
fdivs
stos
jnp
adc
mov
cmc
and
popa
pop
add
xchg
mov
and
xchg
mov
les
sbbb
mov
in
xchg
pop
push
sgdtl
in
and
scas
adc
xor
pop
fists
cmp
pusha
iret
in
pop
mov
ret
dec
arpl
imul
mov
ja
jns
add
fdivl
cs
in
das
insb
loopne
cmp
ds
add
push
add
fbstp
adc
jns
add
das
sbbb
jl
or
lret
and
adc
mov
cmpsb
call
or
into
cmp
adc
cmc
test
cmp
cmp
lea
and
pop
jns
jge
sbb
jns
das
xchg
mov
and
fisubs
push
stos
pop
cmp
repz
cmp
aam
out
fists
xlat
or
enter
test
lea
mov
out
xlat
push
mov
idivb
outsl
out
les
or
or
jg
ljmp
fcomi
ss
jg
pop
fidivrs
divl
out
out
sbb
fwait
mov
jbe
xchg
or
sub
lcall
or
out
sbb
add
inc
ficoms
lret
cmp
jns
sbb
iret
inc
sti
cltd
mov
lret
mov
cmp
ljmp
dec
cmpsl
mov
dec
cmp
stc
sub
push
dec
aad
pop
push
in
and
add
sbb
ret
push
sahf
mov
sbb
hlt
inc
cmp
adc
jge
dec
jg
imul
jg
and
out
cli
inc
mov
cmc
mov
loop
and
test
out
inc
mov
pop
shll
xchg
jecxz
fisubrl
jle
sub
push
inc
pop
cwtl
push
in
add
outsb
dec
and
jnp
mov
loop
es
adc
out
sahf
enter
or
pop
aam
test
inc
adc
inc
mov
xor
pop
hlt
loope
fists
mov
mov
fs
pop
rclb
xchg
inc
fcoml
lcall
outsl
inc
rcrb
add
cmp
test
mov
add
int
xchg
sbb
xchg
jle
sub
loopne
fbld
cmp
int3
das
in
jbe
leave
inc
mov
or
inc
out
adc
ss
xchg
sub
lods
sbbb
movsb
or
xorl
daa
out
cmpsl
pop
int3
mov
lock
adc
mov
push
jle
mov
inc
sub
push
dec
lcall
xchg
xchg
int
and
xor
pop
cmc
shll
movl
and
mov
out
sbb
push
in
xchg
sbb
dec
lar
xor
int
inc
jno
insl
inc
push
mov
insl
pop
inc
lea
pop
movsl
bound
or
cs
sbb
filds
cmp
test
iret
sti
jo
outsl
mov
jmp
ds
xor
jb
pop
push
xchg
in
adc
and
mov
dec
std
aad
aad
lret
mov
les
repz
pushf
nop
fcmove
and
rcr
data16
fcmovnb
aas
out
stc
push
int3
ror
rcr
sub
mov
prefetchw
or
lods
ret
imulb
jmp
lods
loope
sbb
adc
cmp
stos
js
push
jno
imul
mov
dec
cmp
rorb
mov
es
scas
aad
sbb
push
mov
add
sub
incl
ret
add
sub
dec
sarb
push
mov
and
sbb
xor
jb
push
xor
call
test
and
loop
pop
mov
pop
dec
jne
pop
pop
pop
mov
pop
outsl
iret
push
inc
pop
repnz
andl
mov
imul
pop
xchg
gs
jbe
out
sub
pusha
jb
faddl
mov
jne
inc
ret
pop
inc
ret
pop
cmp
leave
dec
xchg
prefetch
and
lds
cmp
fidivrl
lods
imul
mov
jge
jnp
mov
mov
pusha
stc
out
js
xor
add
or
pop
repz
fidivl
push
mov
movsb
fimuls
call
fmull
cli
xchg
mov
inc
int
fmul
and
loopne
cmc
fmul
int
fsubrl
mov
push
mov
out
mov
cmp
fsubp
sub
popa
push
or
mov
call
divb
sub
cmpsl
sti
and
popf
insl
iret
pusha
les
lock
sahf
mov
mov
jp
dec
mov
push
cmpsb
xchg
pop
js
sarb
sub
pop
insb
dec
int3
cmp
sarb
in
popf
xchg
push
sbb
mov
in
lcall
jl
ljmp
bswap
cwtd
popw
cld
push
mov
or
pusha
lods
dec
jecxz
xor
adc
movsb
sbb
sub
cs
push
bound
mov
scas
pop
mov
pop
rolb
imulb
testb
outsl
mov
or
sbb
cmpsb
cmp
cmp
aas
add
scas
insb
in
inc
std
mov
lret
aas
and
inc
sbb
cmc
cmp
adc
rorb
les
mov
dec
add
cltd
mov
sbb
outsl
popf
cmpb
lea
outsb
jge
dec
push
adc
jns
inc
ds
pop
mov
imul
js
mov
pop
movsl
lea
adc
loopne
outsl
ret
sbb
pop
inc
fsubs
sbb
xbegin
mov
pop
cmc
push
jmp
dec
xor
dec
imul
push
rcrb
mov
aaa
popf
xchg
mov
js
sbb
mov
sahf
ss
das
clc
and
rcrl
add
adc
ds
fdiv
xchg
psrld
jb
pop
push
scas
cmp
jmp
mov
shrb
rcl
sbb
out
pop
out
clc
and
mov
push
ret
imul
push
push
fwait
ret
fisttps
jle
stos
int
stos
out
and
cmpsb
jno
pop
ss
push
mov
xor
pop
into
in
lods
inc
add
inc
mov
xchg
add
stos
imul
in
xchg
leave
jle
mov
scas
pop
dec
xor
mov
pop
out
jbe
and
or
inc
rolb
ds
test
inc
sbb
movl
xchg
pop
mov
push
test
stos
pop
jecxz
lea
mov
xor
mov
jecxz
ret
out
push
or
or
ja
sub
jns
sbb
mov
pop
iret
loopne
in
pop
sarb
stc
nop
adc
out
lods
xor
sub
jecxz
xor
out
mov
sahf
inc
pop
icebp
sub
or
popa
lea
mov
sub
arpl
xor
jns
loop
push
jmp
ror
pop
cld
lock
out
sbb
clc
or
cwtl
scas
dec
mov
jl
push
mov
and
jmp
clc
pop
int3
mov
std
xchg
std
sbb
jl
ds
pusha
inc
fsts
mov
rorb
pop
sub
lods
sub
in
cli
push
mul
sbb
cmpsl
xor
jle
movsl
popa
jnp
push
clc
inc
into
fdivl
dec
rolb
and
mov
lahf
xchg
jecxz
outsb
out
outsl
movsl
sbb
push
rorl
sbb
sub
mov
jnp
ja
in
push
mov
or
pop
cmc
dec
sub
testb
aas
call
mov
mov
or
mov
inc
xor
inc
mov
fs
bound
add
xchg
cmp
and
push
jmp
xchg
or
imul
test
pop
inc
enter
mov
lea
repnz
jle
push
pusha
cmp
or
jmp
das
mov
in
movsb
stc
int
fadd
rcrl
mov
xlat
push
cli
mov
cmp
jmp
jecxz
mov
rclb
sbbl
xlat
mov
les
jne
stc
bound
call
cmpsl
das
adc
jge
jmp
imulb
rolb
imulb
push
decb
and
pop
jb
cmp
pop
add
add
arpl
sub
arpl
dec
push
shlb
insl
ss
dec
and
outsl
push
dec
adc
inc
push
std
and
jp
fisttpll
fwait
jle
sbb
mov
xchg
push
pop
hlt
mov
ds
aaa
mov
mov
jae
push
insb
and
pushf
pop
pusha
divl
wrmsr
cmp
icebp
sbb
xor
add
xor
inc
shrl
pop
ret
das
fnstsw
inc
xor
jbe
fdivs
and
das
inc
sbb
pop
outsl
or
outsb
pop
stc
daa
pusha
cmp
jle
cmp
dec
stos
mov
jl
lcall
shlb
stc
xchg
shr
sbb
jecxz
psrlq
out
xlat
fdivp
mov
hlt
sub
sub
test
in
push
lods
rorl
add
lods
sbb
lcallw
sti
lret
xchg
sub
or
pop
fcoms
or
pop
leave
push
rorl
aaa
mov
je
jmp
cmp
cld
xor
lahf
add
push
lock
dec
ret
lahf
repnz
xchg
sub
sbb
sti
stos
test
inc
and
cmp
sbb
test
fs
sarb
popl
imul
mov
mov
add
push
pop
idivb
int3
inc
lcall
push
dec
mov
mov
jmp
lahf
enter
fwait
jbe
notl
aam
stc
pop
mov
dec
ret
inc
lds
in
sub
out
inc
fsts
sbb
xor
push
add
push
sbb
inc
stos
push
mov
or
jp
xchg
stos
lock
ss
test
outsl
push
xor
push
rclb
je
pop
outsb
test
sub
insl
mov
jl
insb
outsl
gs
lret
pop
ds
es
push
xor
xor
xchg
adc
dec
aad
sbb
ret
filds
mov
les
mov
pop
push
mov
xchg
adc
popa
push
scas
xor
jno
notb
in
repz
jmp
mov
stos
push
sbb
jno
test
inc
jmp
cli
xchg
test
dec
scas
jmp
leave
jne
jmp
std
and
cmpsb
push
into
stc
fstenv
sbb
decl
sbb
fwait
lea
das
push
fiadds
jp
mov
daa
and
andl
or
jns
mov
repnz
sahf
stos
js
sbb
mov
mov
dec
mov
mov
add
gs
sbb
das
inc
mov
repz
scas
flds
out
xor
test
adc
jl
xor
add
dec
mov
mov
sub
dec
repnz
jno
inc
dec
rorb
xor
bound
iret
mov
notl
std
ds
or
mov
out
cld
xchg
int3
xchg
add
imul
adc
rorl
loop
sbb
ror
push
add
fstpl
mov
mov
pop
pop
xor
decb
and
loope
jo
inc
xor
sbb
xor
rcrl
fnclex
xorb
scas
sbb
mov
aaa
add
mov
dec
hlt
dec
lock
adc
mov
jle
jae
push
cmp
mov
cwtl
dec
or
mov
adc
in
lret
mov
jmp
std
mov
cld
pop
push
dec
mov
dec
dec
pop
rcrl
and
cmp
sub
xrelease
and
mov
inc
lock
add
push
movsb
xchg
mov
fisubl
mov
aad
adc
pusha
lods
mov
out
jmp
sbb
add
fimull
push
scas
jbe
pop
mov
imull
ja
mov
push
mov
add
pop
add
mov
xchg
xor
scas
and
xchg
or
lcall
pop
out
xor
lods
test
fbstp
fldenv
xor
or
js
in
cwtl
pop
inc
mov
cld
ljmp
mov
or
and
mov
stos
sub
mov
and
sbb
fs
sub
cmp
and
call
stc
sub
mov
cs
mov
jne
lods
cltd
loop
sbb
hlt
cmp
loopne
mov
sub
andb
cmpsb
shrb
test
mov
push
jge
addr16
inc
pop
nop
jl
dec
cmp
pop
xchg
mov
mov
repnz
push
sbb
rorb
sbb
or
push
fldcw
mov
mov
push
mov
mov
jns
jmp
xchg
pop
jo
addr16
sbb
xchg
cmp
aaa
lret
mov
arpl
lds
sarb
movd
and
cwtl
jg
imul
pushl
stos
pop
aam
jbe
mov
push
sbb
sahf
pop
xchg
xchg
cmp
push
stc
mov
in
sbb
xchg
fdivr
jmp
cmpsb
mov
ljmp
jg
aas
or
lahf
jg
in
fidivs
pop
sahf
xchg
jle
add
out
insl
fsubs
ljmp
jb
lods
dec
cmp
stc
jae
iret
insb
loop
aaa
fimuls
sets
inc
sub
test
and
ss
jle
mov
fisttpl
out
fdivs
movsb
sbb
repz
rcll
cld
pop
or
cltd
xor
pushf
add
add
push
adc
sbb
inc
sti
es
push
xlat
loop
dec
mov
mov
jmp
cwtl
popf
nop
sub
shrb
sbbl
push
out
rol
cmp
loope
or
adc
xchg
sub
fidivs
xchg
xchg
in
fcmove
data16
sbb
pop
popa
cmp
xchg
orb
mov
push
out
in
sub
add
jbe
cmp
ficoms
xchg
sub
lods
mov
fmulp
sbbl
call
xor
mov
test
or
push
add
mov
stos
cwtl
dec
in
int3
pop
ljmp
int3
mov
shrb
adc
test
pop
pop
push
stos
inc
cmpl
stos
movsb
fsubrs
int3
add
sub
and
xchg
lock
movsl
subb
int3
arpl
and
xor
flds
test
xchg
sub
mov
fldt
inc
lcall
fsubr
dec
xchg
loop
in
add
xchg
mov
fidivl
or
lods
inc
fsubrl
lret
xor
mov
call
cmpsb
iret
dec
pop
jp
sub
jnp
dec
mov
jge
add
sub
ljmp
push
or
mov
lds
lods
data16
fnsave
dec
mov
jnp
sub
pushf
jle
mov
fcompl
mov
rcr
shll
int
cld
pop
sub
push
stos
inc
sbb
scas
dec
gs
fsubl
mov
loopne
mov
data16
mul
aaa
cmpsb
jle
inc
fistl
xlat
test
lea
test
inc
and
xchg
dec
andl
shrl
pop
jne
gs
mov
adc
icebp
push
pop
loope
xchg
fadd
dec
js
cmpsb
xor
or
jecxz
stos
and
jge
sbb
add
popf
arpl
mov
popf
pop
inc
jnp
ja
push
mov
cmpxchg
xor
call
loop
js
icebp
test
ljmp
and
mov
rolb
push
icebp
inc
jmp
dec
add
insb
imul
int3
mov
movsb
nop
jecxz
test
cmp
ljmp
push
rcrl
sti
add
or
push
add
mov
sbb
pushf
pop
dec
xchg
inc
jmp
idivb
mov
out
cmp
sbb
push
ljmp
push
jle
cmpsl
jmp
pop
stc
fs
inc
xchg
adc
in
imul
loope
sub
or
mov
pop
xchg
jnp
stos
je
addb
xchg
in
push
push
test
pop
icebp
test
or
scas
lret
outsb
add
bnd
mov
dec
frstor
mov
mov
sbb
jb
mov
data16
jg
push
add
dec
in
mov
and
and
mov
cmp
mov
mov
rcl
js
movsb
lahf
add
adc
push
mov
sbb
push
negl
shrd
pop
out
inc
push
scas
pop
stc
xor
pop
jle
repnz
repnz
movsb
add
in
sbb
icebp
dec
xlat
mov
inc
adc
fidivrs
cmp
push
movsl
stos
add
push
push
aas
xchg
push
fistl
jmp
sbb
add
arpl
cmpsb
and
push
xor
sbb
popa
mov
mov
xor
or
mov
sti
xor
shlb
mov
dec
push
aas
hlt
sub
mov
scas
or
dec
ss
mov
xor
fnstenv
sarb
clc
push
rclb
std
xchg
push
out
inc
fnstenv
rclb
add
jg
xchg
sub
out
test
xor
xor
inc
or
add
cmpsb
inc
ficoms
insl
add
sub
in
test
pop
mov
pusha
leave
pusha
push
and
xlat
outsb
out
add
les
xlat
outsb
cwtl
jne
xor
inc
fnstcw
jno
lods
daa
mov
cltd
rep
push
in
dec
out
mov
xchg
sub
mov
mov
gs
pop
lods
sub
mov
push
cmp
mov
jns
fcomps
scas
or
lods
sub
mov
jb
sub
push
add
iret
push
ret
mov
fld
jae
jae
sbb
cmp
sub
jmp
clc
ds
jne
jl
int3
imul
jmp
clc
push
mov
xchg
mov
mov
add
lods
ret
mov
mov
std
fs
filds
mov
lods
push
clc
bound
cmc
jae
push
out
add
push
xor
xchg
mov
data16
xchg
aaa
cli
jo
outsl
sahf
in
stos
xor
rcl
jp
in
push
fistl
mov
or
fidivrs
test
ja
loope
and
mov
xor
shl
push
pop
adc
decl
imul
clc
xchg
jb
mov
scas
jp
jmp
test
jl
test
outsl
push
clc
inc
int3
rorl
popa
movsl
ljmp
repz
stos
push
sbb
lahf
call
rorl
call
jno
out
test
jnp
test
imul
fs
add
sub
enter
lret
sbb
lods
icebp
sbb
int3
es
xchg
dec
ss
shll
out
into
aam
inc
lret
sahf
js
lcall
mov
and
dec
adc
gs
shr
pushf
aas
push
add
jb
mov
mov
sbb
sbb
aaa
decl
sbb
in
jo
mov
stos
xor
jae
enter
pop
add
cmp
mov
filds
stos
xchg
and
outsb
mov
xchg
ds
cmc
add
or
mov
dec
inc
sub
pop
cmpsb
xchg
mov
mov
sub
insl
xlat
push
xchg
ds
add
scas
xor
icebp
pop
ss
scas
shll
push
nop
insb
inc
pop
xchg
cmp
out
popa
mov
imul
or
dec
in
mov
jbe
testb
mov
imul
cmpsl
dec
je
jb
xchg
repnz
test
mov
call
repnz
or
jle
test
dec
push
jmp
sub
sub
call
repnz
adc
jp
inc
adc
fdivrl
arpl
cmpsl
cld
daa
mov
mov
rolb
push
jg
mov
push
inc
adc
fs
and
inc
push
add
add
fcomps
mov
add
adc
inc
nop
inc
jmp
and
xor
inc
roll
out
and
adc
mov
rcll
add
and
sub
ja
aad
push
add
maskmovq
mull
add
add
hlt
nop
inc
push
out
push
add
mov
ljmp
insl
call
push
add
mov
test
sub
fisttps
mull
xchg
pop
mov
std
mov
pushl
into
sbb
pop
js
mov
les
mov
jae
or
js
enter
and
add
lret
es
mov
aas
lods
jb
test
sbb
ds
mov
cs
mov
ds
repz
or
jmp
loope
addr16
ds
cmp
scas
mov
test
ds
jae
add
mov
out
jbe
jbe
dec
imul
cs
push
add
test
roll
ja
ja
les
cmp
jmp
sub
bound
mov
out
jne
jg
inc
imul
jns
das
mov
push
push
test
sub
test
or
mov
int3
mov
rolb
aam
loope
es
push
inc
adc
mov
add
mov
sub
xlat
mov
inc
jle
jnp
test
mov
clc
les
pop
cli
mov
cmp
jg
jl
test
inc
adc
dec
cmp
mov
mov
mov
inc
jg
jl
mov
repz
ss
sbb
lea
ss
hlt
cwtl
aas
jmp
push
push
mov
mov
dec
push
jecxz
jmp
hlt
sub
fdivrl
jb
or
push
inc
xor
pusha
xchg
dec
paddsw
fistpll
ret
outsl
and
shlb
sti
cmp
daa
lods
mov
scas
rorb
and
sbb
call
cli
lods
xor
or
test
imul
rorb
lret
fs
fdivrs
xor
and
in
stos
lds
jne
rorl
inc
in
fcomip
scas
xor
push
and
and
aas
jne
dec
jnp
mov
cmp
sar
fbstp
cmpl
mov
mov
mov
or
ds
ja
jp
jmp
adc
cmpsb
sub
dec
inc
or
sti
dec
adc
push
test
cs
inc
fs
test
jno
outsl
jg
cmp
into
jle
shll
lret
cmp
sbb
jns
mov
fs
xchg
mov
xor
cmp
sub
push
imul
ljmp
test
jnp
cli
into
xchg
test
xchg
mov
jne
mov
lcall
jl
mov
out
mov
scas
cli
roll
or
popa
jae
mov
xor
push
push
mov
clc
das
add
adcl
outsl
in
inc
clc
pop
adc
xchg
inc
push
jae
or
push
adc
test
mov
fnstsw
movsl
and
sbb
dec
cmp
sub
lds
aas
pushf
sahf
cltd
lock
push
lds
cmc
jae
outsl
in
das
imul
in
mov
xchg
push
jg
roll
pop
lock
cs
in
adc
lods
sub
cmp
outsb
pop
and
xchg
stos
cmpl
adc
push
xor
cmc
in
mov
sbb
cmp
push
in
dec
adc
sar
imul
and
das
push
cmp
bound
jge
cwtl
adc
or
jns
sbb
cli
lcall
cs
fdivs
push
jo
psubw
test
or
gs
or
and
imul
call
xrstors
xchg
sbb
inc
inc
verr
lahf
aaa
xchg
pusha
inc
adc
iret
adc
cmp
pop
out
aas
or
mov
pop
jno
or
mov
rolb
sbb
shrl
mov
repz
xchg
xor
lahf
enter
into
or
or
xchg
cmp
add
cmp
xor
mov
mov
ss
dec
fisubrs
mov
dec
and
pop
add
xor
push
add
push
xchg
inc
sub
jle
xor
lahf
ljmp
test
ds
out
inc
and
push
js
int3
test
lret
sbb
dec
push
sti
push
sbb
sbb
rorl
call
sti
mov
mov
orl
ja
inc
lds
xchg
jnp
or
outsb
fs
sub
leave
add
add
dec
or
jo
stc
or
push
sbb
fcmovnb
mov
sub
mov
cmc
pop
push
mov
sarl
fsubrp
imul
push
pop
push
cld
data16
dec
js
enter
cs
out
jb
xchg
xchg
cmp
add
jns
fildl
xlat
and
in
jbe
shlb
cli
arpl
ja
jecxz
pop
fs
mov
xor
and
sub
mov
mov
mov
sub
orl
flds
dec
pop
fstpt
lahf
dec
or
orl
and
and
and
cmp
push
add
cld
pcmpeqd
jae
push
and
cli
sbb
pop
push
inc
jp
pop
lahf
cmp
andl
mov
movsl
inc
push
or
jl
mov
pushf
aad
or
stos
popa
sub
je
int
sbb
push
dec
push
cltd
pushf
dec
rclb
xlat
sub
inc
push
mov
lcall
cmp
outsb
cmc
cmc
sub
push
inc
out
paddusb
out
xchg
out
xor
enter
adc
sub
mov
xchg
mov
in
outsl
jo
adc
negl
push
imull
or
or
and
ret
imul
dec
movd
or
push
push
or
ret
movsl
xor
ja
and
or
addb
jg
sbb
mov
add
cli
mov
stc
mov
push
add
nop
inc
add
inc
lods
pop
loop
xchg
mov
pop
sub
mov
inc
int
sbb
sub
fwait
mov
int
cld
fs
push
loopne
push
fptan
mov
inc
mov
and
test
mov
push
rclb
jp
adc
inc
mov
into
sbb
lods
add
add
les
fdivrl
sahf
add
xchg
rcrb
sbb
sahf
jg
stos
sbb
loop
sbb
dec
movsl
das
enter
ss
mov
add
xor
pop
xchg
inc
lret
pop
mov
jle
jge
push
jb
lea
ljmp
lock
aaa
jnp
xor
es
fsts
faddl
add
flds
dec
sub
popf
test
stos
xor
ss
push
jns
sub
es
mov
aas
pushf
popf
inc
jb
sub
mov
mov
push
add
mov
cli
jno
test
dec
cmc
sbb
mov
movsl
les
scas
mov
push
lods
loop
sti
xchg
jne
test
sub
push
cmpb
and
sarl
xor
dec
pop
adc
pop
add
pop
mov
ficompl
mov
jecxz
pop
incb
push
add
add
dec
js
xchg
jle
or
sub
inc
shrl
push
jle
jns
pop
push
in
cmp
out
adc
jg
inc
int3
push
push
popa
hlt
mov
cmp
or
xor
inc
mov
nop
loopne
mov
incl
out
xchg
inc
push
cld
iret
mov
cmpsb
xchg
inc
dec
lcall
xchg
jg
lret
push
push
negb
pop
mov
insb
les
xchg
inc
xchg
cmp
fmul
dec
or
shrl
inc
cli
mov
pop
call
clc
repz
nop
scas
daa
cmc
mov
shr
push
popf
sbb
pop
scas
inc
sub
int
mov
stos
adc
gs
add
pusha
js
mov
add
jle
add
test
sub
in
push
icebp
iret
xchg
xlat
adcb
add
sub
cwtl
filds
sub
add
repnz
orl
xchg
jp
lret
push
shrl
mov
movsl
cmp
cmp
sub
xor
jo
lcall
insl
xchg
hlt
mov
push
leave
pop
clc
push
lea
test
mov
ss
cld
clc
pop
lret
dec
mov
sti
adc
mov
lret
arpl
lret
or
lea
fidivrl
push
sub
fstpl
cltd
sbb
xchg
dec
push
add
int3
mov
pushf
cmp
add
mov
mov
and
rclb
mov
out
outsb
hlt
loopne
leave
xchg
or
pop
sub
loopne
inc
or
ret
outsl
lock
arpl
imul
loopne
inc
movsl
xor
mov
xchg
je
js
and
aas
fstpt
gs
ljmp
ret
push
xchg
xor
jnp
pop
and
mov
push
sub
je
xor
mov
int3
je
jp
xor
cs
loope
mov
jnp
aas
orb
jecxz
cmpl
cltd
sbb
add
jae
out
data16
in
out
out
fdivr
xor
cmp
movsl
movsl
sub
fisubrs
add
lods
cmp
mov
jae
addr16
mov
scas
cmp
xchg
mov
int
push
ss
xchg
inc
adc
xchg
cmp
xor
jne
dec
mov
rorl
mov
mov
scas
sub
mov
imul
pop
in
ret
mov
mov
or
push
roll
fidivs
stos
xor
imulb
mov
push
lea
int
call
aad
jecxz
adc
dec
xchg
aaa
cs
cmp
jbe
and
mov
leave
push
les
out
aam
mov
mov
push
cld
outsl
cmpsb
mov
scas
jl
and
mov
mov
repnz
aad
or
xchg
pop
sub
pop
adc
es
loope
xlat
orl
push
enter
add
lcall
daa
pop
movsl
jbe
and
lock
mov
fistpll
mov
and
sub
lods
lea
arpl
outsb
call
mov
fisubl
repz
jnp
sbb
dec
lds
dec
mov
mov
enter
addr16
xor
and
cltd
sbb
mov
lods
jne
mov
mov
sbb
pop
lret
adc
stos
scas
popa
jbe
push
mov
rep
mov
push
lahf
xchg
cmp
xchg
cmp
add
call
stc
fwait
cmp
shll
xor
cmp
addl
inc
or
push
and
dec
xchg
xor
pop
popa
stos
outsb
hlt
fdivs
push
or
jae
in
psrlw
popa
jmp
rdpmc
popf
push
in
mov
sti
cmp
fnstcw
inc
adc
sbb
in
jb
mov
movsb
mov
es
or
insl
sub
mov
orl
fdivrl
mov
out
xchg
xor
push
ret
pop
loope
aam
orb
icebp
pop
aas
mov
xlat
sub
jl
add
push
test
inc
mov
mov
enter
jle
hlt
cmp
push
pop
xor
pop
sub
sbb
repnz
fwait
and
test
insb
cmp
rorl
pop
sub
xchg
sub
or
xchg
mov
lret
into
vunpckhps
shll
ret
adc
pop
jno
popf
aas
add
pop
push
clc
sbb
mov
push
enter
sarl
test
test
fisttps
jg
push
or
dec
dec
rcrb
ficoms
pop
shll
cmp
dec
jecxz,pt
adcb
jecxz
leave
or
push
fbstp
adc
call
ret
push
call
ret
in
les
jl
jmp
or
out
mov
mov
pop
std
sub
arpl
jns
sub
out
in
imul
push
mov
cmpsb
jne
push
in
shlb
leave
orl
scas
or
inc
imul
pop
dec
fwait
movsl
xor
loopne
cwtl
adc
mov
or
and
jg
cmp
xor
sub
sarl
arpl
mov
mov
push
mov
and
fcmovnbe
js
jb
cmc
psubd
and
mov
inc
xor
xchg
add
adcb
or
mov
test
jbe
and
sbb
outsl
repnz
jb
cmpsb
push
out
or
add
lds
cmp
mov
and
jb
orl
xor
jae
pop
pushf
test
inc
inc
or
shll
mov
or
cwtl
sbb
cmp
dec
push
enter
outsl
shl
fistpll
or
test
shrb
js
or
fidivrl
push
adc
lea
pop
clc
es
aas
pushf
repnz
gs
mov
enter
sti
pop
push
rclb
mov
xchg
adc
adc
leave
dec
nop
or
iret
arpl
faddl
loopne
mov
mov
insl
lock
xchg
inc
rorl
mov
adcb
jecxz
hlt
repz
mov
adc
mov
jae
fbstp
je
bound
cmpsw
je
ja
mov
sbb
pop
add
aam
mov
imul
flds
sti
les
jp
cwtl
inc
test
rolb
insl
das
orb
daa
mov
bnd
jge
mov
data16
pop
mov
add
subl
pop
xchg
fisubrl
movsl
int
and
dec
or
addr16
adc
lcall
jg
jne
sub
les
inc
or
icebp
mov
inc
inc
or
add
and
inc
push
lret
xchg
mov
inc
scas
xor
adc
adc
inc
mov
jg
adc
xor
scas
paddq
ret
jnp
out
loope
outsl
repz
clc
dec
jle
mov
jmp
sub
in
adc
xchg
int
icebp
jp
cmpsl
sub
movsb
jbe
scas
pop
adc
js
aad
jbe
scas
xor
mov
cmp
cmpsl
mov
test
push
pop
inc
lods
xor
mov
js
jle
sub
xor
adc
sbb
push
dec
sti
data16
xor
push
sbb
sti
cmp
dec
push
imul
mov
jl
adc
fidivrl
andb
push
sti
repz
dec
fwait
jge
mov
out
mov
fs
repz
and
in
pop
lds
lret
mov
jl
adc
xor
dec
or
pop
xchg
sbb
xlat
imul
sbb
pop
lret
pop
testl
pop
sub
jno
test
and
or
stos
sub
loopne
xor
sbb
inc
ret
xchg
mov
movsl
int3
mov
scas
adc
clc
adc
ret
in
je
push
mov
fimuls
inc
mov
test
pop
decl
data16
popf
sarb
adc
cmp
inc
pop
add
call
dec
push
jl
scas
mull
and
out
and
jecxz
sbb
les
aam
adc
sub
add
sbb
pop
lahf
lea
int
dec
jns
mov
call
pop
or
push
popf
cs
mov
pop
faddl
cmc
jnp
filds
enter
popf
aas
fndisi(8087
cmpsb
sub
fadd
mov
mov
orl
daa
and
jnp
aad
inc
outsb
pop
add
xchg
push
mov
pop
adc
xor
and
mov
and
cmp
and
add
mov
push
add
dec
push
xor
stos
adcl
stc
xlat
jnp
insl
xor
adc
mov
xchg
aaa
fbld
inc
or
andb
test
mov
xorl
in
pop
add
push
lcall
xchg
arpl
xor
test
sub
mov
stc
outsl
out
mov
dec
or
stos
sbb
jno
mov
and
lahf
push
int
out
lret
mov
add
add
lcall
push
imul
data16
xchg
mov
lahf
ds
jb
or
mov
dec
fisubrs
stos
out
or
jb
repz
and
adc
and
in
cmp
cmp
jl
xor
fidivl
mov
jl
and
mov
mov
mov
mov
mov
repz
pop
or
es
push
mov
cmp
sub
popa
add
pop
sti
or
jb
push
lods
sub
fisubrl
lret
cwtl
adc
les
pop
insb
lahf
cmp
inc
inc
adc
int3
stc
lds
jnp
lock
push
loop
test
shlb
sbb
or
cmpsb
ja
mov
scas
and
lret
mov
push
and
xor
cld
mov
leave
inc
in
ficomps
enter
mov
mov
pop
push
in
dec
fnstsw
rorb
jno
hlt
xchg
pop
cmp
push
daa
lods
fwait
jns
sbb
lret
inc
repnz
or
xchg
ss
lret
cmp
adc
js
adc
cmp
fsubl
sub
jl
lods
ret
xchg
mov
imul
fdivrl
hlt
ljmp
pop
into
xchg
cmp
push
mul
dec
fildl
test
daa
adc
pop
add
int
pop
add
lret
jl
or
lret
pop
jge
test
lock
bound
sub
jle
push
lcall
mov
adc
or
fsubrs
add
add
shrb
test
dec
cs
test
add
nop
mov
dec
xchg
shl
arpl
shl
popa
jae
mov
shrl
or
fldt
mov
pop
dec
push
sbb
inc
js
jae
mov
popf
mov
stos
dec
adc
mov
in
jbe
loope
xor
dec
push
fidivrl
fstpl
out
int
cs
pop
addl
xchg
ds
stos
push
pop
fdivrl
mov
stos
mov
and
rcrb
callw
fs
leave
xchg
lods
fwait
push
add
mov
dec
pop
push
push
cmc
pusha
inc
dec
ret
xchg
dec
mov
add
test
mov
sub
imul
loopne
sub
and
out
mov
pop
stc
subb
jg
jge
inc
scas
xor
jae
mov
scas
sbb
adc
xchg
orb
inc
fadd
xchg
mov
test
movl
mov
in
dec
ss
div
mov
stos
jmp
std
push
cld
mov
xchg
ds
add
lock
imul
mov
xor
into
xchg
mov
rclb
popa
sbb
cmp
mov
ljmp
in
fadds
add
pushf
sbb
iret
int
adc
adc
test
mov
or
movsl
sub
xchg
mov
fsubs
mov
inc
fs
cmp
add
das
pop
jmp
cmp
xchg
fstl
pusha
js
in
stos
test
out
scas
cs
out
outsb
push
or
mov
and
in
or
loopne
push
je
and
movsb
test
cmp
daa
pop
cld
cmp
push
iret
aaa
es
cmp
outsb
out
sub
cmpsb
push
jns
scas
mov
fstpt
test
data16
sub
fisubs
in
test
cmp
push
push
inc
or
int
dec
adc
mov
aas
mov
jp
or
ja
pusha
out
jl
fs
cltd
cmp
mov
mov
or
test
outsb
iret
mov
push
sbb
or
lods
pop
popa
mulb
imul
jp
test
js
mov
push
mov
and
mov
adc
xor
daa
cmp
les
iret
jno
negl
data16
pop
rcrl
mov
jno
psrlw
scas
call
add
shr
jne
pop
or
outsb
aas
test
and
clc
popl
cmpsl
mov
es
cltd
aas
cmpl
movsb
int
outsl
repz
jne
aam
cmp
mov
dec
negl
jge
mov
scas
int
inc
insb
cmp
jns
notl
jo
pop
arpl
mov
stc
inc
mov
add
lds
cli
push
fidivrs
push
push
add
pop
rclb
movsl
or
adc
push
add
pop
mov
aad
pop
cmpl
xchg
movsb
popa
xchg
mov
daa
scas
jg
mov
sub
jae
dec
movsl
adc
test
xchg
lcall
or
frstor
mov
or
leave
sahf
xchg
cmp
sub
add
sahf
ds
pop
pop
lret
fadds
jle
cmp
lock
cmc
fs
nop
dec
or
inc
adc
mov
je
loop
in
push
stc
inc
mov
cmp
xchg
addr16
in
mov
push
dec
mov
xchg
cmc
adc
ret
lahf
out
jbe
pushf
jnp
repz
mov
cmp
xlat
dec
or
xor
sub
loopne
cmpsb
xor
std
adc
bound
dec
les
cmp
and
mov
sbb
fidivrl
inc
xchg
cs
rcrb
fidivrl
mov
into
dec
hlt
pop
xchg
je
push
jbe
fnstenv
push
jmp
xor
movsl
lods
jp
lods
pop
mov
xlat
pop
test
inc
ds
pop
dec
inc
adc
jo
sub
lock
xor
inc
les
aad
lahf
dec
push
loope
adcb
ret
iret
fdivl
push
push
jne
stc
je
xchg
cltd
orb
add
pushf
shll
sar
std
loope
add
lret
xchg
adc
or
inc
lods
insb
pop
add
sub
and
mov
iret
mov
dec
cli
push
sbb
fwait
cmp
inc
imul
dec
push
mulb
sub
sbb
mov
mov
mov
mov
sbbb
cltd
cmp
xor
pushf
fs
in
mov
mov
mov
lret
mov
mov
ficomps
cmpsl
push
stos
sub
mov
pop
cld
jmp
neg
ja
insb
test
inc
xchg
ja
outsl
notb
imul
push
mov
xchg
ds
mov
test
dec
jp
es
lahf
and
roll
lret
push
ja
dec
stos
xchg
clc
mov
leave
xchg
scas
dec
jae
sbb
in
jbe
mov
mov
mov
pcmpgtb
cmp
test
inc
push
jne
mov
cmp
shlb
test
cld
pusha
popf
mov
ss
lds
lcall
adc
enter
es
push
pushl
scas
cmp
scas
in
fldcw
mov
xchg
inc
ja
mov
scas
mov
popa
out
xchg
test
inc
adc
dec
into
mov
and
dec
xchg
push
add
push
les
ret
repnz
jbe
rcll
xchg
xor
mov
push
daa
sti
arpl
dec
or
insl
adcb
mov
jp
dec
or
bound
cs
inc
call
hlt
pop
std
push
mov
mov
nop
hlt
mov
mov
adc
je
dec
imul
outsl
in
mov
mov
push
xor
in
movsb
sub
js
sbb
test
repz
into
xchg
cwtl
add
lretw
sub
mov
lret
jp
sub
test
jmp
sub
jg
lds
ljmp
repz
movsb
lods
inc
push
jno
inc
mov
jmp
cli
hlt
pop
mov
xchg
cmp
jbe
push
mul
popa
outsl
out
loop
loopne
or
mov
jnp
xchg
cli
pop
jne
mov
push
outsl
jns
into
lea
repnz
shrb
mov
mov
notb
mov
mov
ds
movsl
cmp
aad
lea
sub
lret
repz
mov
mov
sub
sbb
cmp
and
mov
push
clc
lcall
pop
fimull
loope
adc
mov
push
inc
jo
sbb
push
sbb
dec
aaa
cwtl
mov
sbb
jle
jecxz
sub
fistpl
mov
ret
cs
sbb
ja
jbe
or
xor
icebp
shl
jns
adc
mov
repnz
es
mov
lods
push
js
mov
test
dec
cmp
es
imul
sbb
jae
fsubr
jae
add
cmpsl
lods
nop
mov
mov
inc
or
mov
mov
mov
mov
xchg
pop
mov
lds
sarl
js
pop
shl
fidivrl
pop
js
push
icebp
or
rcl
mov
fstl
leave
pop
or
repnz
mov
push
and
scas
mov
pop
sahf
insl
cmp
mov
jg
shr
inc
push
push
clc
adc
rorl
movsl
xchg
sub
xchg
fmul
pusha
icebp
jbe
fwait
cmp
insl
add
es
rolb
jg
mov
fsubs
push
fadds
and
add
ljmp
jns
adc
scas
jle
mov
mov
jl
pop
xchg
inc
in
daa
mov
cli
rolb
pop
aas
cltd
outsb
xchg
adcl
mov
je
or
lock
hlt
test
mov
les
pop
lods
mov
inc
lds
ss
in
jecxz
lock
stc
imul
ret
add
jae
rcrb
xchg
femms
movsl
cmp
pop
or
test
mov
and
and
cmp
xor
xchg
jae
pop
cmp
sbb
lods
xor
lds
out
push
jle
in
clc
nop
lods
sub
pop
rolb
and
mov
xchg
adc
out
inc
push
sar
mov
cmp
mov
mov
into
cmpsl
mov
outsb
and
mov
lods
xchg
cmp
lret
jnp
push
or
lcall
test
sbb
stos
mov
jb
cltd
inc
jbe
jbe
push
data16
cli
addb
out
flds
iret
xchg
push
mov
mov
imul
flds
xchg
arpl
jecxz
flds
cmpsl
pop
orb
lret
xchg
inc
and
ret
and
aam
fsubl
pop
add
pop
cmpsb
xchg
test
mov
sub
mov
mov
daa
sti
xchg
xor
sarl
and
jg
ror
fildl
sub
orb
jecxz
cs
pop
insb
ds
filds
in
jbe
fwait
jecxz
gs
push
clc
add
cmp
into
jge
push
clc
or
fiaddl
out
and
mov
xor
test
push
shrb
lret
das
cld
movsb
lock
sbb
push
movsl
sub
add
ret
mov
cmc
fwait
dec
loope
push
test
lcall
push
pop
pushf
aas
xchg
out
xchg
movsb
cmp
adc
inc
in
pop
pop
arpl
mov
push
inc
xlat
out
xchg
mov
ficomps
cvtps2pd
mov
cmp
popa
lods
fwait
xor
sbbb
add
or
xchg
xchg
sub
testb
cli
adc
sub
shlb
dec
xor
jle
out
test
push
out
je
mov
and
sub
clc
inc
mov
jbe
dec
loopne
xchg
stos
inc
leave
imul
ljmp
lock
movsb
cmp
add
shll
loop
mov
ljmp
xchg
cmp
pop
sbb
adc
mov
shl
sub
icebp
xor
mov
ja
test
hlt
mov
mov
js,pn
test
or
lock
sbb
out
cmc
push
movsl
outsl
insl
add
inc
sub
js
mov
hlt
cltd
dec
loope
adc
push
pop
fwait
cmp
out
out
nop
movsb
cmp
syscall
pushf
inc
jecxz
pop
adc
ss
push
mov
xchg
mov
fcompl
or
cs
pop
lods
pushf
xor
sbbb
mov
or
test
xchg
sub
testb
stc
adc
sub
shlb
dec
xor
jl
out
xchg
push
out
jae
movsb
movsb
out
outsb
add
testl
loope
xchg
stos
inc
push
lcall
mov
out
insl
adc
fwait
mov
loopne
mov
jmp
or
xchg
cmp
mov
jl
or
lcall
jl
dec
scas
push
jns
test
insl
add
hlt
mov
dec
sub
adc
jg
xor
stc
mov
dec
out
repz
and
insl
add
inc
sub
and
xchg
dec
loop
adc
add
addr16
xchg
outsb
mov
movsl
cmp
or
ret
pop
adc
and
addr16
fsub
mov
xchg
mov
fistpl
adc
pop
stos
pushf
xor
jg
lock
mov
push
add
fsubrs
and
testb
notl
sub
shrl
dec
xor
jp
lock
push
out
jb
movsl
mov
lds
testb
jb
dec
loop
xchg
stos
inc
lds
add
mov
out
imul
cmp
mov
fisubs
mov
jmp
or
cwtl
cmp
pop
mov
aam
adc
scas
cmp
xor
pop
repz
dec
lods
push
jp
test
insl
jmp
cmc
mov
mov
sub
movsl
dec
aam
jle
xor
negl
push
out
repnz
popf
inc
lds
mov
lock
dec
jecxz
adc
add
gs
pusha
xchg
cmp
jle
mov
popf
cmp
les
pop
and
xor
jns
mov
fabs
xchg
xchg
mov
fstps
mov
push
jg
xchg
cmp
pop
test
xor
jge
icebp
scas
sti
mov
lar
jo
and
mov
jbe
dec
test
adc
imul
sbb
push
call
mov
ret
sub
and
adc
stos
inc
ret
addr16
cltd
in
pusha
push
mov
out
imul
add
pop
xchg
fsubl
mov
out
inc
fcomps
add
mov
and
add
ds
and
pop
repz
push
stos
push
jp
or
outsb
movsb
cwtl
das
pop
testb
jae
stos
movsb
dec
aam
jl
xor
negb
push
call
and
push
pushf
inc
lds
lea
xchg
dec
jecxz
adc
sbb
xchg
cmp
jg
mov
sahf
cmp
les
pop
and
jns
scas
inc
test
xchg
mov
stc
xor
push
mov
push
adcb
sub
pop
cmpsl
sahf
xor
lods
cli
mov
str
jno
and
shll
cmpsb
hlt
push
lods
and
inc
xor
ja
icebp
mov
push
jmp
lahf
ljmp
repnz
dec
jecxz
nop
lods
inc
ret
add
mov
call
ds
popf
mov
or
jecxz
in
inc
fstps
add
mov
and
add
pushf
xor
pop
repz
push
stos
dec
jp
or
cwtl
das
aam
testl
mov
les
lret
repnz
push
push
jmp
pop
imul
jno
mov
ret
shrd
push
push
arpl
bound
mov
sub
cmpsb
cmp
cmp
les
pop
es
bound
add
xor
push
mov
push
sbbl
pop
cmpsb
lahf
fdivrs
icebp
stos
stc
mov
paddd
jle
xchg
cs
lahf
stc
nop
shll
dec
movsb
repnz
scas
and
shrl
inc
xor
mov
push
ljmp
jno
sbb
es
adc
inc
mov
add
mov
and
xor
andb
aas
cmp
pop
sahf
mov
fldenv
jnp
sub
pop
add
lcall
and
add
popf
xor
sti
pop
hlt
sub
mov
adc
fnstenv
mov
clc
dec
repz
and
inc
aad
js
xor
repz
repz
adc
ljmp
jno
cltd
ds
outsl
mov
dec
in
or
imul
popa
int3
arpl
mov
and
pop
or
or
jecxz,pn
pusha
lods
inc
addl
cli
das
aam
mov
push
sbbl
push
movsb
lahf
ss
js
repnz
lret
jns
std
dec
push
cwtl
das
push
popf
stc
nop
iret
jno
dec
mov
testl
mov
push
ljmp
jno
sbb
imul
in
mov
add
mov
call
or
sahf
mov
pop
mov
and
jl
sub
pop
add
xor
popa
clc
lods
push
and
jmp
sahf
xor
sub
cmpsb
dec
jl
jge
fidivl
sahf
lcall
icebp
mov
scas
lahf
inc
insl
jbe
xor
mov
adc
ljmp
xchg
cmp
insl
mov
dec
in
or
add
pop
int
xchg
xor
and
test
mov
fld
pop
or
mov
pop
stos
inc
fstp
jg
cltd
mov
fs
sub
dec
sbbb
and
aad
mov
pop
repz
cmc
mov
adc
dec
fdivl
sbb
xor
cli
xchg
int
mov
mov
ret
aad
cmc
inc
ss
push
hlt
mov
push
jmp
imul
or
mov
nop
daa
imul
scas
inc
mov
arpl
mov
and
xor
andl
or
mov
es
loopne
inc
fistpl
add
stc
stos
push
and
std
movsl
inc
fcom
push
lahf
ss
negl
sub
push
movsb
dec
jge
jnp
pushf
fwait
xor
sbb
xchg
dec
out
mov
scas
popf
inc
xlat
outsb
je
ss
xchg
cmc
mov
adc
inc
call
jae
xchg
cmp
enter
sub
mov
mov
fisubrs
adc
gs
xor
and
test
mov
or
rolb
inc
fcompp
jge
lcall
and
jg
aas
push
mov
pop
hlt
movsl
repz
adc
inc
fnsave
lcall
insl
mov
mov
rcl
repz
into
outsl
adc
mov
push
in
shll
cwtl
loop
or
xor
jmp
xchg
sub
push
out
mov
add
or
cs
pusha
add
or
mov
daa
mov
fisubs
add
cli
test
lret
cld
mov
mov
mulb
jno
push
mov
fdivl
lcall
dec
in
mov
mov
inc
xlat
outsb
jb
aaa
into
out
xchg
cmc
mov
orps
inc
out
stos
pop
bound
cmp
enter
sub
mov
mov
fsubrl
push
pop
iret
data16
mov
popa
scas
in
test
subb
xor
pop
pop
push
sub
xchg
in
pop
cmpsl
dec
jnp
lcall
and
jge
inc
xlat
push
sahf
mov
cmc
mov
lds
inc
fidivs
sbb
xchg
leave
imul
sbb
cmp
insl
adc
lea
in
mov
loopne
or
mov
xchg
sub
push
call
mov
fxch
or
in
sbbl
inc
xor
push
lret
shrl
mov
fsubl
inc
fstl
popf
jbe,pn
sti
cmpsl
dec
and
or
sbb
mov
mov
mull
mov
adc
hlt
cwtl
pushf
xor
adc
mov
mov
fsubrs
mov
testb
in
stos
adc
ss
addr16
sub
mov
mov
fisubrl
or
shlb
sub
out
test
subb
xor
enter
sub
test
out
pop
movsl
dec
loopne
jns
fwait
stos
mull
sub
and
jnp
inc
fmuls
mov
mulb
ret
jge
cmc
inc
fbstp
push
pushf
xor
std
xchg
imul
outsl
out
cmp
shrb
testl
xchg
fidivs
adc
xchg
sub
push
jmp
mov
jo
mov
iret
or
in
test
inc
xor
mov
xchg
sub
add
inc
ficoms
pop
sahf
sub
gs
movsl
dec
and
sbb
lahf
inc
fcmovbe
sbb
clc
and
push
lahf
inc
jg
jne
fidivs
xchg
popf
xor
adc
xchg
inc
jmp
sbb
outsb
mov
testl
adc
or
gs
sub
xchg
mov
mov
fsubrs
or
push
pop
stos
out
xchg
jle
inc
mov
or
pusha
add
sub
andb
loopne
js
pushf
test
lret
and
jns
inc
mov
mull
ret
hlt
inc
fbstp
adc
std
xchg
lds
push
lcall
jo
cmp
shrb
clc
popl
push
out
mov
fdivl
push
mov
lret
out
xchg
sub
push
ljmp
jno
mov
iret
popw
lods
fildll
in
test
scas
inc
xor
mov
test
sub
cmpsb
ljmp
stc
or
mov
les
into
pop
mov
stc
and
pop
popf
inc
adcb
mov
sahf
xor
inc
out
push
sbb
mov
cmp
jno
mov
shr
clc
mov
loopne
lods
adc
mov
xor
arpl
push
jmp
xor
jo
or
imul
jl
inc
scas
cld
push
movsl
sub
dec
sub
andb
jg
mov
push
popf
cmpsl
repz
mov
ja
inc
fimull
cmp
insl
popa
clc
sahf
jmp
pop
sbb
loopne,pt
jo
sahf
xor
ret
mov
in
mov
mov
cmp
addr16
pop
out
mov
fidivl
or
xor
sub
push
jmp
xorb
mov
shlb
stos
nop
daa
frstor
out
test
scas
inc
xor
mov
or
sar
ljmp
testl
mov
ret
test
push
movsb
cmp
stc
push
push
pop
pushf
aas
adcb
mov
sahf
xor
inc
in
push
pop
fs
jno
mov
shl
mov
mov
ficoms
lods
cvtdq2ps
lea
xor
popa
scas
xchg
sub
mov
mov
xor
jo
push
push
shrl
daa
mov
fidivrl
inc
lods
sti
sub
lret
dec
sub
jg
mov
push
popf
movsl
repnz
clc
inc
xchg
ja
inc
fimull
movsl
cmp
imul
jmp
pop
sbb
loope,pt
jo
sahf
xor
ret
fs
mov
mov
cmp
addr16
nop
cmp
pop
pop
scas
fidivl
or
xor
sub
add
xorb
xchg
shrl
test
out
xchg
scas
inc
jp,pn
movsb
stos
dec
int3
arpl
mov
dec
loope
cmc
or
mov
ret
xchg
lret
cmp
jmp
stc
sbb
ret
pop
pushf
cmp
loope
out
nop
sahf
xor
inc
jecxz
push
adc
fidivl
mov
shl
mov
mov
fcoml
lods
or
cs
pop
lods
xchg
filds
mov
xor
jo
add
aam
xchg
repnz
js
inc
stos
cli
adc
decb
jge
jmp
jecxz
jb
sahf
mov
lds
pop
jne
inc
fisttpl
cmpsb
cmp
lcall
pop
out
cmp
jns
setg
inc
popl
xchg
shlb
xchg
loope
mov
mov
jb
xor
fs
xchg
cmp
sbb
or
xchg
sub
xor
dec
scas
push
jae
test
shrb
cmpsl
xchg
sub
and
xchg
scas
inc
sub
push
movsl
test
int
jg
sub
cli
mov
dec
loop
repz
mov
roll
enter
inc
jmp
les
cmp
jns
mov
cwtl
aas
loope
push
adc
mov
xor
jb
mov
aam
xchg
nop
mov
ficoml
scas
or
adc
stos
cwtl
das
fnstsw
ljmp
jno
add
imul
mov
ja
inc
test
lret
lret
std
dec
lds
ljmp
jno
lahf
mov
les
mov
jae
inc
faddl
cmpsb
cmp
cltd
out
pop
sbb
loop
insb
push
mov
xchg
mov
fistps
mov
mov
jae
xor
bound
sti
xchg
cmp
sbb
pop
scas
aaa
into
fildll
xchg
sub
xor
dec
lods
push
je
test
shrb
cmpsb
xchg
sub
and
xchg
mov
sub
movsl
cmpsb
dec
into
gs
sub
clc
lahf
in
adc
dec
loop
repnz
sahf
inc
sub
icebp
xchg
inc
ffree
adc
sti
sbb
pop
cwtl
cmp
jns
lea
cwtl
cmp
pop
pop
mov
xor
jae
mov
aam
xchg
xchg
mov
fstps
scas
or
adc
test
push
jmp
cld
mov
shlb
add
imul
repnz
jbe
inc
test
adc
cld
dec
lds
jmp
dec
lcall
mov
ret
daa
mov
jno
inc
fldl
cmpsb
cmp
cwtl
in
pop
pop
mov
loop
push
mov
xchg
mov
fstpl
mov
mov
je
das
cmp
pusha
pop
cld
xchg
cmp
sbb
add
es
sub
xor
dec
lods
push
je
or
imul
and
mov
mov
sub
movsl
dec
into
gs
sub
or
dec
jecxz
lock
popf
inc
sub
lock
inc
ffree
adc
sti
pop
lds
sbbb
mov
mov
cltd
cmp
mov
mov
xor
jae
mov
aad
test
xchg
mov
pop
hlt
xor
sbb
xchg
ss
test
xor
jnp
jmp
sti
mov
sub
dec
aad
andl
repz
je
inc
cmpsb
cmc
adc
cli
inc
das
js
jmp
dec
cltd
dec
in
outsb
or
sbb
mov
jo
inc
fldl
ds
gs
xchg
in
pop
push
mov
jecxz
imul
add
nop
fcompl
mov
mov
je
cs
xchg
aaa
sbbb
pop
sbb
add
cmp
fsubl
push
in
jns,pn
dec
stos
dec
je
or
xchg
sub
pop
repnz
mov
daa
jae
cmpsl
movsb
dec
into
in
in
jno
mov
xchg
ja
cmp
stc
cmc
popf
scas
cmp
or
jg
jno
les
mov
popf
push
icebp
jo
lock
in
jmp
nop
xor
les
or
mov
add
sti
mov
popa
jmp
cmc
std
ret
cmp
jae
cmp
mov
ret
dec
xchg
and
ds
add
jnp
cmc
cs
cltd
inc
rcr
cmc
add
sarl
xchg
adc
in
mov
lahf
and
and
inc
cmpl
mov
mov
jmp
xchg
mov
data16
sub
dec
mov
addr16
pop
jb
or
sti
por
call
dec
lret
stos
sbb
inc
adc
repz
int
jmp
or
clc
or
mov
cmp
fcomps
sub
fimuls
jecxz
ds
inc
sahf
sbb
lods
mov
jne
fdivrs
cld
pop
dec
bound
lock
pop
inc
jecxz
push
xchg
loope
cmp
cltd
out
shrl
cmpsl
hlt
insb
fimull
cli
aam
inc
or
mov
test
rcrl
rolb
addb
or
fsts
dec
fwait
adc
repz
dec
push
lods
push
and
xor
stos
scas
xchg
adc
lds
lret
push
gs
add
fnstenv
std
shrl
mov
pop
cmpsl
out
cmc
and
adc
les
add
decl
add
roll
sbb
subl
xor
scas
xchg
add
mov
inc
jecxz
or
repz
jp
jge
ret
sahf
cli
aam
stos
sbb
jecxz
push
pop
scas
push
push
add
add
add
xor
add
add
and
test
add
add
pusha
cmpsb
in
push
jo
orl
xor
add
in
push
sub
int
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
cmp
outsl
les
jle
loope
sub
add
cmpsb
addr16
xor
js
or
lds
arpl
cmp
sub
