add
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
sub
mov
mov
pusha
call
pop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
call
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
sub
or
xor
add
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
call
add
add
add
pop
inc
mov
and
sub
lods
mov
mov
shl
lea
mov
push
popl
mov
push
pop
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
mov
jge
popf
pushl
pop
dec
push
mov
call
int3
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
call
add
add
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
push
and
add
and
add
and
add
and
add
and
add
and
add
add
fsubs
add
mov
add
xor
add
push
and
add
and
add
and
add
and
add
and
add
add
and
add
add
add
add
test
add
in
add
push
and
add
add
and
add
add
shlb
add
or
add
lods
and
add
add
and
add
add
add
and
add
and
add
add
xor
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
fsubs
add
mov
add
xor
add
push
and
add
and
add
and
add
and
add
and
add
add
and
add
add
add
add
test
add
in
add
push
and
add
add
and
add
add
shlb
add
or
add
lods
and
add
add
and
add
add
add
and
add
and
add
add
xor
add
add
add
add
outsb
fs
je
insl
inc
add
popa
je
inc
jbe
outsb
je
add
movb
gs
jne
jb
outsb
je
push
add
mov
jo
outsb
fs
push
add
inc
gs
je
imul
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
gs
insl
gs
push
add
roll
dec
gs
jo
jb
add
lcall
gs
popa
imul
add
fs
imul
add
dec
add
je
jb
arpl
jae
gs
jo
add
popa
je
inc
jbe
outsb
je
add
push
add
je
jb
arpl
jae
gs
imul
insb
jae
gs
popa
insb
jne
add
add
gs
inc
imul
jae
jb
outsb
inc
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
jb
jbe
push
jns
gs
add
add
imul
jb
je
arpl
test
inc
jb
popa
je
inc
jbe
outsb
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
add
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
insl
jo
insb
fs
jb
add
add
push
popa
insl
jo
insb
fs
jb
add
inc
xor
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
roll
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jnp
jp
lods
stos
lods
add
test
mov
mov
mov
ret
lret
lret
int3
rcl
in
rcl
shl
rcl
iret
hlt
int3
int3
into
hlt
enter
enter
mov
mov
mov
mov
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
lret
lret
rcl
sar
xlat
fcom
std
xlat
xlat
xlat
fdivr
aam
rcl
sar
int3
int3
int
aad
aad
iret
rcl
inc
vfmsub231pd
mov
iret
movsb
mov
xchg
xor
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
lods
sbb
mov
jnp
mov
sar
mov
lret
dec
ror
aad
fcomp
call
xlat
fdivr
aad
dec
into
int3
dec
into
int3
call
aam
dec
int
mov
mov
mov
std
cmpsb
cmpsb
cmpsb
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
rcl
sar
xlat
fcom
xlat
call
aad
dec
int3
int3
dec
leave
lret
int
inc
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
push
push
pop
pop
pop
fs
sbb
or
xor
cmp
aaa
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarl
enter
rcl
iret
call
aam
call
aad
call
iret
iret
dec
leave
leave
inc
ret
mov
mov
ljmp
movsb
movsb
pushf
popf
popf
xchg
xchg
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jle
jle
jge
jb
jb
popa
bound
push
push
push
xchg
cmp
cmp
inc
inc
inc
mov
jo
outsl
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
inc
enter
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
xchg
cwtl
fwait
cltd
fwait
in
addb
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jl
mov
incb
jp
jl
jnp
outsl
outsb
outsb
out
addr16
push
ret
jle
jp
js
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addl
xchg
xchg
xchg
sahf
lahf
sahf
sti
mov
xchg
xchg
mov
jp
jns
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
mov
jg
jo
jno
je
je
jg
jg
test
jp
data16
cmp
and
and
cmp
movsl
mov
test
lods
lods
lods
sti
lods
lods
lods
lods
lods
lods
stos
test
std
movsb
mov
fwait
xchg
xchg
xchg
decl
jle
js
js
jl
jns
xchg
xchg
movsl
movsl
movsb
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
lea
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
femms
push
xor
inc
dec
insb
imul
xchg
leave
fwait
lcall
cltd
fwait
fwait
stc
xchg
nop
std
mov
mov
xchg
mov
nop
nop
lcall
test
ljmp
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
scas
test
add
pop
adc
test
mov
incl
test
decb
xchg
xchg
pushf
popf
pushf
std
movsl
movsl
mov
out
xchg
xchg
xchg
in
nop
xchg
nop
in
test
push
jne
or
add
inc
sub
push
dec
dec
dec
data16
jno
xchg
xchg
rclb
xchg
xchg
std
decb
xchg
xchg
lcall
cmpsl
cmpsb
ljmp
test
pushl
sahf
scas
mov
mov
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
popf
cltd
lcall
mov
xchg
xchg
decl
xchg
xchg
popf
sahf
sahf
mov
stos
test
negl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
bound
jno
je
jl
jle
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jle
mov
ja
mov
movsb
mov
mov
mov
mov
movsl
movsl
add
mov
add
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
cwtl
lcall
sahf
lahf
sahf
movsb
mov
movsl
stc
xchg
lcall
mov
xchg
aad
xchg
cltd
in
xchg
xchg
out
xchg
cmc
nop
mov
cld
xchg
jg
std
xchg
jae
lcall
jmp
inc
jnp
mov
jp
mov
je
mov
insl
ljmp
adc
stos
or
lods
or
mov
jge
mov
mov
lods
pushf
movsb
movsl
movsb
and
add
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
pushf
jmp
pushf
pushf
call
xchg
xchg
decl
cwtl
nop
call
cwtl
lcall
fwait
sahf
stc
sahf
xchg
popf
cld
sahf
mov
xchg
imul
xchg
dec
jp
fwait
je,pt
cltd
sub
sahf
and
sahf
pop
jmp
ljmp
packuswb
lods
pcmpgtd
scas
adc
mov
imul
adc
insl
mov
cltd
scas
mov
scas
scas
scas
movsl
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
sahf
lcall
movsl
mov
jmp
xchg
cwtl
decl
mov
xchg
xchg
xchg
ja
lcall
xchg
push
jnp
xchg
jb,pt
cs
decl
pop
decl
push
pop
call
pop
lcall
adc
lods
sbb
mov
insl
pushl
jo
mov
and
mov
and
roll
ret
xchg
lods
mov
scas
scas
mov
lahf
lahf
sahf
add
add
add
add
mov
scas
add
pop
adc
lods
mov
mov
cwtl
sahf
lcall
mov
ljmp
stos
test
lcall
jle
decl
dec
jno
mov
push
mov
popa
decl
push
pop
incl
add
push
decl
add
nop
add
xchg
add
cltd
add
mov
or
mov
jo
mov
jne
mov
sub
inc
sub
sub
jle
cs
xor
dec
scas
mov
mov
lret
movsb
dec
mov
movsb
movsb
add
push
adc
test
mov
jmp
stos
test
ljmp
mov
ljmp
mov
mov
mov
pop
incl
or
addl
incl
add
add
mov
push
decl
add
xchg
add
fwait
add
lahf
add
add
scas
adc
mov
cmp
dec
cmp
int
xchg
sarl
xchg
sarb
mov
sarl
mov
rorl
dec
mov
std
mov
mov
movsb
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
popf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
mov
mov
decl
mulps
xchg
pop
incl
or
test
push
decl
add
nop
add
xchg
add
pushf
add
mov
add
lods
add
mov
jo
ret
cmp
dec
inc
call
inc
call
dec
mov
xlat
dec
xchg
fmuls
fisttpll
fistl
call
test
std
mov
mov
movsl
movsl
mov
or
add
add
add
add
inc
inc
adc
jp
mov
test
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
mov
decl
sbb
xchg
sbb
lea
pop
decl
or
add
nop
add
xchg
add
popf
add
mov
add
test
pop
arpl
shll
call
push
cltd
call
push
lcall
pop
popf
jmp
pop
pushf
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
sahf
mov
add
inc
inc
adc
jns
sahf
lcall
lahf
fwait
sahf
ljmp
mov
pushl
mov
mov
pushl
movsb
call
and
xchg
and
xchg
and
call
sbb
nop
or
popl
push
call
pop
jmp
add
lods
add
mov
data16
mov
xor
fisubl
fisubs
fbld
jmp
gs
in
cmpsb
call
imul
fildl
ret
mov
test
lahf
mov
mov
add
add
add
inc
inc
adc
jp
xchg
cltd
call
sahf
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
jo,pn
cltd
das
jo
xchg
sub
cwtl
pop
call
add
lcall
ljmp
add
mov
pushl
movd
roll
fldt
jmp
jo
jmp
jo
jmp
jb
jmp
jae
jmp
scas
out
jbe
out
jbe
in
je
jmp
mov
mov
cmpsb
cmpsl
lcall
mov
add
add
add
add
imul
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
lahf
cmp
mov
xor
lcall
lcall
add
movsl
add
stos
add
mov
pushl
add
sbb
ficoml
jecxz
mov
ljmp
in
xorb
icebp
cmpl
push
test
call
mov
inc
mov
test
pushf
sahf
pushf
daa
lahf
mov
sahf
add
add
add
pop
add
xor
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
inc
mov
lcall
cmp
mov
inc
jg
movsb
cmp
lcall
lcall
add
test
add
mov
data16
mov
add
shlb
cmp
movsl
jmp
mov
icebp
sar
xchg
ret
nop
ret
push
xchg
push
xchg
clc
xchg
stc
pop
out
mov
inc
lods
test
xor
popf
pushf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
ret
ret
inc
mov
jl
lcall
dec
cmp
dec
cmp
xor
popa
lcall
add
test
pop
ljmp
add
add
roll
inc
add
mov
out
mov
out
xchg
ret
push
lcall
hlt
lcall
negl
lret
cld
popf
int
cld
lahf
int
cld
cwtl
leave
push
xchg
ret
jmp
mov
inc
mov
mov
sahf
mov
xchg
add
add
add
cmp
or
cmp
dec
jecxz
pusha
call
mov
mov
mov
sar
ret
mov
leave
enter
sar
mov
ljmp
dec
xchg
movsl
sub
lcall
jmp
add
mov
arpl
mov
add
movl
jne
fiadds
in
lea
push
movsb
into
push
movsb
into
clc
test
cli
test
into
cli
cmpsl
iret
cld
stos
iret
cld
stos
sar
test
push
popf
jmp
mov
dec
lret
mov
mov
lahf
lahf
mov
add
lcall
xor
sub
inc
inc
inc
bound
push
xlat
je
jno
mov
rol
ret
mov
ret
ret
mov
enter
ret
ret
mov
cmpsl
jmp
push
mov
lods
dec
xchg
sahf
sbb
pop
jmp
add
mov
mov
add
int3
add
xlat
add
loopne
jnp
out
pop
test
negb
sar
sti
scas
sti
mov
sti
mov
std
mov
std
mov
std
mov
mov
std
mov
std
mov
push
movsl
jmp
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
sbb
dec
dec
dec
ss
outsb
mov
fcomp
jmp
xlat
fdiv
rcl
sar
lret
dec
lret
leave
lret
lret
inc
enter
mov
mov
scas
push
mov
lods
cmp
jmp
add
lods
add
mov
mov
add
roll
jo
add
add
call
jae
cli
scas
aam
std
mov
mov
fcos
mov
cld
mov
fdivr
mov
fcos
clc
mov
jmp
mov
call
leave
into
mov
mov
xchg
or
add
add
xor
add
add
or
mov
pop
out
call
test
jecxz
leave
fsub
fsubp
fcmovnu
fcomi
xlat
fcmovbe
cli
xlat
std
into
iret
iret
mov
imul
jmp
add
mov
arpl
mov
add
leave
add
add
fldl
ja
in
ja
out
xor
sti
mov
loope
inc
loope
std
std
loopne
std
dec
loopne
dec
fdivrp
inc
loopne
dec
dec
loope
cli
mov
enter
iret
mov
mov
xchg
adc
add
add
incl
std
incb
std
add
cmc
testb
out
in
pop
in
in
in
sub
out
in
dec
ljmp
xchg
out
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsb
cmp
movsb
adc
pop
ljmp
add
mov
add
int
outsb
call
add
add
ljmp
cli
mov
in
std
lret
dec
out
dec
in
dec
in
dec
jecxz
dec
loop
std
iret
jecxz
call
loop
shl
std
shl
cli
ret
fcos
out
mov
fdivr
ret
out
cmpsl
cmpsb
test
xchg
xchg
xchg
sbb
fwait
cltd
add
incb
incb
idiv
testb
hlt
lock
hlt
repnz
in
icebp
out
pop
out
repnz
cmp
out
in
pop
loopne
loope
lds
xchg
sti
mov
add
pop
ljmp
fs
mov
add
add
fiaddl
jne
jecxz
jns
in
push
jl
cmc
pop
test
shl
shl
std
shl
std
shr
std
shl
out
jmp
std
fucomi
cld
shl
push
ret
jecxz
lret
leave
lret
test
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
std
sti
add
std
testl
repnz
or
aad
xor
mov
xchg
negb
add
cmpsl
add
scas
add
mov
add
lret
call
add
fldl
ja
out
jns
out
sbb
cli
ret
fdivrp
std
fsubr
fucomi
fldl2t
fucomi
fucomi
std
fsubr
fsubr
fucomip
std
fsubrp
fucomip
shl
push
ret
jmp
aad
call
rcl
clc
lods
lods
stos
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
mov
loope
add
enter
mov
xchg
repnz
and
lahf
add
add
mov
mov
add
int
outsb
call
add
filds
jne
call
sub
shl
jmp
out
fucomi
fldl2e
std
xlat
jmp
std
shl
sti
shl
sti
shl
clc
into
stc
int
push
ret
aad
in
mov
jmp
rcr
call
sti
mov
mov
fwait
cltd
lcall
fwait
lcall
add
add
add
mov
subb
imul
add
stos
add
mov
mov
add
iret
add
add
add
call
aaa
xchg
cli
cwtl
cld
enter
lret
cld
clc
mov
aad
repz
iret
push
mov
int
ljmp
call
rcl
ljmp
cmc
fucomip
mov
mov
xchg
add
add
add
int
add
sarb
mov
add
ljmp
add
mov
add
dec
or
rorb
je
fistl
jns
loop
cmp
inc
xchg
jmp
scas
int3
ljmp
std
loopne
ret
cld
loopne
cli
fstpt
lock
into
in
leave
iret
fsubp
into
aad
loopne
fcmovb
out
loopne
in
in
test
in
out
popf
jmp
lret
leave
push
lods
lods
lods
adc
cmpsb
cmpsb
test
lahf
mov
rolb
ret
mov
sahf
stos
aam
dec
jg
pushf
sbb
test
insb
scas
and
jns
mov
inc
xchg
les
stc
lret
gs
mov
sarl
enter
enter
int
ror
int
aad
shlb
xlat
aam
jg
jb
gs
jecxz
call
in
in
xor
cmc
cmc
cmc
and
icebp
repnz
fcmovnu
or
mov
into
add
add
add
rol
mov
scas
mov
stos
xchg
test
xchg
ljmp
mov
sarb
test
mov
mov
cmpsl
leave
mov
mov
enter
int3
into
addr16
rclb
rcl
dec
aam
xlat
inc
aam
aad
daa
xlat
fcmovnu
sbb
adc
in
push
in
out
jmp
add
sti
testb
std
cld
add
std
std
add
std
add
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
push
ret
inc
ret
mov
daa
lret
ror
and
aad
sbb
aad
adc
aam
or
xlat
push
rcr
xlat
add
add
add
jecxz
add
in
ljmp
std
add
mov
add
ret
vmovaps
ret
ret
sub
mov
mov
push
rol
or
leave
movb
mov
add
aam
add
xlat
aam
rcl
add
aam
aam
add
fsub
add
fiaddl
loopne
loop
fiadds
jecxz
out
repnz
add
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
ja
test
dec
test
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
sarb
aam
iret
shr
rcl
aad
rcl
aam
iret
into
into
cli
int
lret
stc
int3
lret
lret
mov
mov
stos
stos
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
into
ror
xlat
call
xlat
aad
rcl
sar
int
iret
dec
lret
int3
mov
mov
stos
icebp
cwtl
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jae
je
gs
dec
inc
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
aam
lret
inc
rol
pushl
test
cwtl
xchg
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
addl
test
imul
movsb
push
push
push
stos
push
push
insb
insb
outsb
push
pop
pop
cmp
cmp
pop
jno
outsl
adc
mov
fstpt
mov
sar
mov
mov
mov
ljmp
pushf
pushf
call
xchg
xchg
fwait
lcall
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
fwait
xchg
lcall
addb
jnp
jge
js
jp
jp
jp
jns
jnp
jb
jae
push
push
push
cmp
je
popf
pushf
popf
mov
scas
lods
repz
scas
scas
sti
lods
lods
lods
std
test
sahf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsl
cmpsb
movsl
cltd
jae
jae
adc
adc
add
add
add
add
outsl
outsl
outsb
pop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
jo
orl
cwtl
cltd
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsb
test
std
mov
scas
mov
mov
mov
movsl
mov
addl
add
add
pop
pop
pusha
or
lods
mov
movsl
mov
mov
mov
call
sahf
lahf
sti
sahf
mov
lcall
push
push
jo
push
pop
outsl
insl
outsb
outsb
xchg
subl
mov
lcall
fwait
pushl
outsl
xchg
mov
mov
jnp
mov
scas
stos
insl
test
add
add
add
add
pusha
or
mov
in
movsb
test
call
xchg
xchg
lcall
cwtl
cltd
cltd
fwait
pushf
pushf
popf
sahf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orb
xchg
insb
xchg
xchg
pop
cmp
dec
jp
movsl
inc
js
lods
xor
je
scas
sbb
push
mov
insb
mov
scas
mov
mov
mov
mov
add
add
add
add
popa
or
mov
lcall
lahf
sahf
jmp
mov
cwtl
decl
addl
xchg
jno
cld
xchg
popa
cmp
dec
js
nop
cmp
nop
sub
xchg
sbb
call
punpcklbw
test
sbb
mov
outsb
pushl
pop
jae
mov
pop
xchg
mov
scas
scas
xchg
sahf
lahf
popf
adc
add
add
pusha
pusha
popa
or
lods
mov
stos
mov
lahf
jmp
test
test
lcall
decl
sub
sbb
pop
incl
push
push
call
add
popf
add
test
arpl
mov
jae
mov
sub
jge
enter
leave
xor
ret
divl
test
add
add
add
pop
pusha
popa
or
movsb
stos
in
mov
cmpsb
ljmp
mov
pushl
xchg
lahf
decl
adc
mov
push
incl
push
push
decl
add
xchg
add
lahf
add
add
mov
insl
inc
aaa
test
lret
inc
mov
into
inc
mov
aam
nop
call
inc
nop
call
popa
popf
dec
cmpsb
mov
mov
mov
incb
add
add
pusha
popa
popa
or
popf
mov
ljmp
mov
mov
mov
test
decl
sbb
mov
push
call
add
mov
add
lods
add
mov
dec
xchg
fstps
fistpl
jmp
pop
lahf
jmp
pop
mov
jmp
insb
cmpsl
dec
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jle
jl
popf
xchg
lcall
scas
mov
mov
mov
mov
mov
mov
lahf
gs
xchg
sub
lcall
and
xchg
push
pop
call
add
cmpsb
add
mov
pushl
xor
jmp
insl
stos
jmp
outsl
stos
call
jb
out
jae
jmp
jp
call
test
mov
inc
cmpl
add
dec
pop
outsb
outsb
push
mov
xchg
pushl
mov
mov
mov
jbe
lcall
cmp
popf
sub
xchg
or
lcall
add
lods
add
mov
inc
or
call
inc
xchg
jmp
js
jmp
mov
in
test
push
xchg
push
mov
mov
cmpsb
cmpsb
push
lcall
add
sub
push
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
mov
xchg
test
sub
lcall
ljmp
add
mov
adc
mov
push
xchg
push
cltd
cwtl
push
lcall
clc
xchg
lods
inc
mov
stos
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
ret
pushl
push
xchg
stos
dec
cmp
pop
push
lahf
add
ljmp
add
mov
add
fsubs
cmp
hlt
mov
iret
clc
test
cld
stos
sar
cld
stos
sar
cld
lods
sar
sti
cmpsl
int
call
rol
stos
stos
test
or
add
add
push
dec
dec
aaa
je
je
test
into
int3
out
into
int
leave
lret
lret
std
leave
leave
mov
bound
jmp
add
mov
gs
add
iret
add
fildl
jbe
ljmp
std
mov
cld
mov
fcos
std
mov
xlat
mov
sar
jmp
lret
ret
scas
scas
lods
mov
add
add
add
add
pop
or
rcl
dec
loope
loope
fsubp
fistps
fcmovnu
fcomp
out
mov
gs
test
push
popa
ljmp
add
leave
add
aad
jb
loop
jl
repnz
mov
std
inc
loopne
dec
dec
loopne
std
lret
dec
loope
sti
out
mov
leave
divb
popf
pushf
sbb
add
add
std
std
add
incl
ljmp
in
jmp
xor
loop
loop
les
mov
mov
add
mov
inc
add
iret
add
fildl
je
ljmp
std
ret
cld
shl
std
shl
std
shl
shl
xlat
out
xlat
jmp
push
fcos
fcmove
sar
mov
mov
and
add
add
std
add
std
incb
cld
cld
pop
aad
push
mov
pop
mov
popf
or
ljmp
add
ret
add
rolb
jo
loopne
ja
in
and
shl
fldl2t
std
fucompp
xlat
call
sti
fsub
fsub
std
aam
push
xlat
jmp
rcl
sti
mov
lahf
sahf
das
add
add
int
into
or
fs
mov
add
mov
add
aam
jb
loop
js
out
das
nop
stc
fwait
enter
loop
clc
leave
fdivrp
test
hlt
ret
icebp
ret
std
out
sar
out
aam
in
aam
jmp
shl
in
fsubr
mov
stos
das
std
std
add
add
add
aad
push
mov
jae
push
gs
mov
insl
inc
sbb
int
jl
xlat
sub
pushf
clc
in
mov
out
in
lret
jmp
fdivrl
lret
enter
int
scas
jecxz
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsl
les
push
xchg
mov
fidivrl
jle
rol
stos
mov
mov
ret
nop
rol
jge
int3
insl
aad
int
aam
iret
dec
fcomp
fnstcw
fnstsw
fildll
in
fsubl
loop
icebp
adc
in
jmp
faddl
std
std
add
add
add
incb
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
leave
and
aam
pop
mov
rcl
or
fnstsw
or
into
into
add
incl
incb
cltd
lcall
mov
rol
or
int
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
enter
mov
ret
mov
scas
mov
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aad
aad
rcl
sar
into
iret
into
std
mov
mov
roll
push
add
add
add
add
add
add
add
add
jb
jb
addr16
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
into
call
aam
dec
into
iret
inc
mov
ljmp
sahf
sahf
sti
mov
xor
add
xor
add
sbb
jne
jne
test
aad
outsb
outsb
ret
arpl
outsb
outsl
outsb
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
xchg
lds
jno
es
add
add
add
jb
jae
fwait
xchg
fwait
mov
xchg
mov
mov
or
addl
dec
push
push
inc
mov
popf
into
movsb
movsb
movsb
in
mov
xchg
xchg
decb
mov
pushf
pushf
fwait
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
movsl
test
cld
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
lcall
mov
push
push
imul
jg
lea
notl
mov
mov
lcall
jb
mov
mov
test
stos
stos
add
add
add
mov
mov
scas
cld
xchg
xchg
xchg
lcall
fwait
fwait
lcall
fwait
lcall
mov
loope
jbe
out
xchg
fs
push
jl
lcall
ljmp
and
mov
insb
pushl
popf
lods
lock
mov
imul
int
add
add
xchg
pop
scas
cmpsb
stos
test
lahf
sahf
lahf
jmp
movsb
call
jge
mov
decb
das
imul
nop
adc
cwtl
or
or
ljmp
and
mov
sub
les
test
mov
scas
scas
subl
jne
push
movsb
fwait
mov
cld
test
test
mov
mov
scas
mov
lcall
sub
mov
pop
decl
add
mov
push
call
add
lods
adc
ret
dec
inc
mov
roll
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
test
mov
scas
pushl
mov
movsb
call
push
decl
or
xchg
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsl
call
fwait
mov
mov
mov
cmpsl
cmpsb
cmpsb
pop
add
add
popa
arpl
mov
pushf
cld
mov
mov
mov
mov
scas
lcall
jb
lcall
jmp
add
mov
addr16
xor
out
mov
jmp
mov
lock
out
jle
fstps
mov
and
add
add
adc
addr16
mov
mov
mov
mov
ret
ret
mov
fs
movsl
inc
jge
sahf
and
lcall
add
mov
gs
pop
outsb
fmull
in
lea
push
xchg
xchg
leave
stc
xchg
enter
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
mov
cld
ret
inc
inc
mov
cwtl
ljmp
pop
imul
mov
fs
add
aam
js
in
insl
scas
push
test
cli
stos
iret
cli
lods
sar
std
scas
sar
scas
iret
ljmp
fldenv
std
incb
xor
jno
inc
scas
mov
mov
aam
mov
aam
rcl
out
leave
enter
mov
jmp
arpl
ret
call
add
call
pop
cld
mov
inc
cld
ret
fdivr
inc
icebp
mov
ret
in
test
dec
jg
jg
add
add
stos
stos
lods
add
jmp
or
jmp
out
outsb
movsb
daa
outsl
ljmp
add
lret
add
fldl
out
cmp
std
int
call
in
shl
std
shl
std
aam
push
aad
int3
in
scas
scas
scas
popa
jg
addl
add
add
incl
std
push
lret
int
sub
sahf
sbb
lods
add
mov
add
loop
js
hlt
push
cmpsl
std
enter
aad
out
std
shl
std
aam
cli
aam
push
leave
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
cmp
out
mov
shl
ljmp
jmp
out
aam
ljmp
scas
push
cltd
cltd
cltd
add
sarl
xchg
and
shll
jbe
mov
xlat
mov
lret
into
outsl
fxch
rcrb
rcl
dec
jecxz
loopne
call
in
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
cs
mov
lret
sbb
fstp
bswap
int
or
aad
push
std
std
incb
addb
add
add
add
rol
std
incb
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
fcomp
test
jb
stc
pop
imulb
fyl2xp1
nop
or
jle
pop
scas
pop
lahf
fwait
xor
jle
int3
scas
repnz
ljmp
jno
push
cltd
cmc
mov
jbe
es
adc
cld
cmp
int3
arpl
das
mov
ljmp
les
lahf
cmc
xor
gs
daa
mov
mov
fldenv
cli
in
sub
pop
pop
or
jecxz
mov
mov
cwtl
add
mov
pop
fnsave
cmp
xchg
mov
pop
repnz
lods
sbb
dec
pushl
into
xor
das
mov
shll
aad
aad
inc
notb
mov
mov
int
into
or
jmp
and
in
inc
or
in
daa
mov
aaa
out
fcoml
pop
test
cli
imul
jl
ficomps
lcall
and
mov
aas
sub
stc
nop
or
hlt
jnp
inc
fisubs
push
out
dec
push
mov
xchg
or
rolb
jl
movsl
cmp
sahf
xchg
cmpsb
add
fcmove
push
ret
pop
mov
popa
clc
sub
test
jge
add
rcll
mov
jb
pop
movsb
mov
loope
div
pop
out
adc
es
push
cltd
xchg
sub
mov
ret
adc
jno
aas
loopne
outsb
lret
cld
nop
cmpsb
cmp
dec
jecxz
pop
adc
ss
push
mov
xchg
mov
mov
and
inc
jnp
fsubrs
pop
idiv
mov
jle
push
or
cmp
in
sbbl
stc
cmp
mov
loop
sub
cmp
inc
fstpl
pop
sub
mov
fs
jo
inc
xchg
sbbb
jmp
lret
fdivrs
ficomps
sbb
cld
fsubs
mov
mov
inc
fcomps
mov
scas
sub
push
sbb
pop
popf
xor
add
push
out
cmpsl
addl
jno
movsb
lds
clc
iret
mov
mov
add
daa
cli
fwait
rcrl
scas
inc
or
sub
arpl
xchg
xchg
jg
xorl
or
cmp
std
push
pop
fwait
xor
scas
mov
cmp
add
outsl
xor
pop
dec
push
testb
cmpsl
adc
fadd
std
xchg
hlt
stc
xor
sub
sbb
inc
dec
push
out
push
outsb
add
jmp
mov
and
stos
inc
jne
xchg
sub
xchg
enter
mov
in
out
sbb
shrb
cmp
fwait
insl
pop
lock
push
movsl
fsubp
inc
xlat
adc
sub
cmc
arpl
loop
test
movsb
imul
or
xchg
sub
mov
cmp
jle
insl
mov
ret
pop
rcl
hlt
mov
repnz
and
adc
ja
xor
test
sbb
in
ljmp
dec
cmp
lock
outsl
mov
mov
ret
hlt
loope
sub
push
enter
mov
imul
xchg
push
in
xchg
and
pop
popa
inc
fcoms
mov
mul
rorl
add
jle
cmp
addr16
push
pop
pushf
xor
lods
mov
cmp
fsubrs
sbb
pop
dec
push
testb
movsl
adc
ret
hlt
divl
leave
sub
sbb
out
push
outsb
add
jmp
mov
and
stos
inc
jae
xchg
sub
mov
dec
jmp
or
dec
cmp
mov
mov
mov
stos
loope
ds
add
mov
xchg
hlt
mov
fsubrs
cs
outsl
jnp
xchg
sub
sarb
mov
pop
dec
sahf
xor
mov
loop
fcomp
rclb
mov
jg
push
hlt
mov
test
xchg
fst
shlb
fdivl
es
jmp
jnp
lock
ret
pop
out
clc
ljmp
push
xor
es
sbb
psrlq
mov
and
push
ja
out
test
pop
cmc
lods
rorb
add
and
pop
sbb
imul
outsb
push
ljmp
test
call
dec
jne
push
test
fidivs
jb
loopne
and
lret
xchg
sub
jne
dec
test
into
gs
jb
mov
jl
loopne
sbb
inc
push
push
scas
lcall
dec
mov
popa
adc
add
scas
dec
pop
std
xchg
xchg
shlb
mov
mov
and
xlat
add
push
mov
data16
xchg
rcrb
scas
add
push
call
dec
push
out
or
in
dec
addr16
xor
rol
push
add
lds
xchg
sub
rorl
add
loop
dec
data16
xchg
fcomps
mov
mov
lcall
cmp
xchg
loopne
adc
or
insl
cmp
or
xchg
sbb
xor
nop
xchg
out
mov
push
mov
mov
push
shlb
sbbl
aaa
insl
jg
mov
jg
mov
je
inc
test
jbe
mov
cmp
in
aam
jno
push
ss
dec
stos
jmp
mov
cmpsl
add
out
stos
in
adc
jbe
add
jg
jp
lret
jl
and
test
jae
cld
mov
jnp
out
cli
pop
icebp
sub
push
mov
ja
adc
stc
push
jmp
jae
clc
mov
js
js
call
mov
mov
testl
adc
int3
arpl
addr16
hlt
xchg
lock
and
hlt
lock
jno
call
xor
in
loopne
jae
push
mov
jne
subb
push
ljmp
inc
ficomps
cmpsl
ds
insl
arpl
lahf
sti
jle
sub
ret
jge
mov
jecxz
adc
nop
daa
ss
jno
mov
in
sbbl
rcrl
sbb
js
in
int
and
das
and
add
cmp
lods
sub
fnstenv
push
movsl
cli
dec
loopne
sarl
mov
mov
push
movl
gs
cmp
lcall
push
in
cmpsl
leave
jae
ljmp
lock
pop
and
scas
jae
int
lret
mov
add
push
popf
sti
es
push
and
push
js
ljmp
leave
jl
dec
mov
pop
push
sbb
lea
out
xchg
daa
mov
adc
dec
push
std
xchg
dec
insb
add
cmpsb
mov
pop
div
adc
jle
adc
pop
inc
outsb
and
xchg
mov
push
out
or
add
arpl
mov
xchg
xchg
cmp
aas
mov
call
xor
aaa
into
pop
out
fwait
xor
or
fnstenv
out
out
out
xor
push
or
cmp
ja
xor
cmpsl
ds
out
mov
pop
or
mov
add
test
nop
movsb
in
adc
pop
out
in
repz
ds
lds
imul
xchg
mov
out
loop
lahf
pop
test
and
lcall
mov
out
xchg
add
insb
ss
xor
mov
stos
mov
vcvtps2dq
out
and
cmpl
lds
lock
mov
mov
fmull
seto
mov
pop
mov
xor
jp
or
inc
lea
adc
fnstsw
dec
scas
sbb
xor
aam
add
flds
movsb
xor
jbe
mov
sub
outsb
add
adcl
cwtl
scas
xchg
cli
mov
jge
dec
inc
pop
jle
repnz
fbstp
push
and
xchg
stc
nop
adc
aas
insb
clc
js
mov
cmpsb
mov
imul
mov
std
fidivs
mov
daa
jae
rcrl
fidivs
sbb
jmp
dec
pop
icebp
jle
add
fst
push
mov
std
lds
and
push
dec
data16
jp
jle
test
nop
daa
iret
add
cld
icebp
in
daa
sbb
ss
inc
pop
je
mov
scas
dec
mov
sub
jae
inc
inc
rolb
pop
sar
popa
mov
cmpsb
das
fcoml
aad
popf
jae
je
push
mov
cli
jb
stc
test
jae
sbb
cmpsl
into
sbbl
mov
sarb
mov
stc
inc
adc
aad
out
pop
dec
subb
mov
lahf
in
pop
or
rol
xchg
mov
pop
add
mov
xchg
sahf
pop
mov
dec
cmp
loopne
aad
hlt
subb
loop
imul
mov
cmp
inc
test
push
ret
ljmp
and
cli
lahf
dec
push
fisubrs
sub
dec
aam
add
adc
push
mov
inc
stc
cmp
lret
mov
mov
jl
mov
movsl
lea
add
notb
arpl
and
or
and
inc
mov
jnp
dec
es
repnz
pop
sub
push
inc
movsb
pop
lahf
cmp
cmpsb
dec
sub
sub
daa
int
pop
aas
dec
pop
add
mov
or
dec
ret
hlt
push
mov
je
push
xor
and
or
pop
leave
jne
dec
sub
fstl
sbb
or
and
jp
lcall
mov
nop
mov
cltd
push
int3
pop
in
cltd
xor
mov
dec
cmp
mov
jmp
ss
sub
and
stos
stos
push
fucomp
or
lock
fbld
mov
dec
pop
les
xlat
push
les
out
lds
adc
inc
out
dec
movsb
mov
pusha
cmp
es
das
cs
adc
inc
sbb
jbe
jge
hlt
repz
pop
loop
stos
push
mov
xorb
xchg
insl
dec
cld
mov
ret
sbb
inc
sbb
cld
cmpsl
sub
cmpsl
sahf
jecxz
cli
cld
mov
adc
imul
sub
imul
mov
fnsave
or
jno
pop
xor
fldenv
adc
sub
andb
int
cltd
mov
adc
ret
add
scas
pusha
mov
pop
or
not
sub
pop
xor
inc
xchg
xlat
aas
or
cmp
movsl
sbb
mov
les
or
mov
pop
mov
sub
ret
cmp
cmp
xchg
rorb
mov
aad
xchg
jg
mov
shll
mov
and
stos
mul
cmp
ljmp
jno
call
mov
sub
jecxz
xchg
cmc
and
loop
xor
xor
dec
loope
xlat
icebp
mov
dec
fsubrs
out
stos
sub
shrl
xor
shlb
loope
jno
movsb
testb
icebp
hlt
mov
pop
mov
lea
sub
mov
insl
add
mov
mov
fsubrl
shl
cmp
pop
repz
inc
lret
bound
jbe
lds
orb
aaa
and
mov
dec
mov
into
aad
fdivl
repz
les
sbbl
xchg
mov
cwtl
mov
into
ret
push
mov
push
in
sbb
int
mov
xlat
jmp
jns
xchg
sub
sbb
fnstenv
ss
repnz
adc
ds
dec
mov
or
push
mov
mov
or
fdivrl
lret
bound
jmp
or
es
xchg
sub
ret
add
gs
mov
shlb
filds
test
leave
or
mov
fsubrs
roll
int
les
dec
fbld
jmp
cmpsl
data16
or
test
dec
or
add
cmp
lret
rclb
data16
pop
xor
jne
js
sbb
mov
xchg
testl
mov
cmpxchg
cmp
movsl
test
cmp
jecxz
pop
cld
xchg
pusha
aaa
push
aaa
mov
mov
pop
mov
xchg
cmpsb
cmp
pop
out
les
inc
arpl
hlt
cmp
jns
sbb
add
dec
sbb
mov
bound
aam
push
fsubrs
arpl
mov
shll
mov
pop
stc
inc
fstpt
mov
mov
stc
dec
imul
adcb
in
repnz
in
and
push
or
outsb
add
popa
xchg
mov
rorl
stos
inc
mov
enter
sub
out
inc
fidivs
push
nop
jae
add
inc
fsts
xchg
sub
jp
testl
jle
jns
cmpsl
pushf
xor
pusha
repnz
mov
cmpsl
push
je
jo
das
cs
testl
push
popa
or
outsl
mov
mov
enter
pusha
loope
sbb
mov
jns
mov
pop
xor
push
test
xor
loope
mov
xchg
jge
xchg
sbb
push
ljmp
sbb
out
movsl
ds
js
jne
sub
xchg
sub
lods
mov
mov
jge
sub
iret
sbb
xor
xor
mov
mov
lods
pop
sub
xor
in
negb
test
lock
mov
movsl
stos
push
xchg
sub
test
dec
mov
xlat
shlb
mov
out
test
mov
mov
int
sub
dec
out
js
dec
loopne
lret
jmp
add
test
dec
das
inc
fnstenv
movsb
cmp
pusha
notl
ret
cmpb
jecxz
ja
pop
pushf
xor
or
xchg
cmp
stos
inc
fsts
js
enter
sub
sub
icebp
mov
fbld
mov
sbbl
pop
aas
rorb
cmp
pop
hlt
test
ret
jnp
push
xor
je
jno
and
xchg
lret
jne
ds
xor
into
sti
xchg
iret
data16
push
in
xor
je
mov
int
sub
dec
aaa
into
notl
mov
mov
push
in
pop
cmpsl
iret
data16
test
test
in
test
mov
loop
adc
dec
xchg
pusha
imul
mov
std
xchg
rorl
cmpsb
cmp
orl
rcrb
jns
jne
out
int3
stc
add
in
push
mov
or
cmp
add
mov
int
pop
icebp
inc
out
imul
cpuid
mov
xchg
adc
xchg
sub
mov
mov
fdivrl
test
pop
icebp
test
icebp
mov
sbb
fwait
dec
ss
mov
rcr
mov
sub
push
out
testl
inc
rcll
sub
lods
mov
fdivrp
iret
data16
not
addr16
add
xchg
je
mov
push
or
rcrb
xchg
sub
loopne
dec
loope
or
bound
push
or
out
sbb
fldt
movsb
cmp
mov
scas
jl
pop
data16
shlb
nop
loopne
nop
xchg
imul
xchg
sub
inc
pop
sahf
sahf
adc
xchg
mov
mov
movsb
fiadds
add
jl
shrl
lcall
mov
dec
stos
popf
xor
nop
insl
stos
dec
mov
fwait
ret
jo
jmp
mov
rol
lret
ljmp
ljmp
jg
js
push
call
pop
test
push
jae
push
xor
mov
aad
lods
inc
int
out
shl
lret
std
add
xchg
sahf
test
sbb
adc
aaa
into
adc
popa
clc
mov
push
in
dec
movsb
jg
xor
or
rclb
push
fildll
pusha
mov
int3
out
mov
icebp
mov
sbb
mov
sub
cmp
imul
test
bound
gs
dec
mov
xor
sbb
xchg
sub
je
cmp
int3
mov
js
es
xor
dec
repnz
mov
cmpsl
jp
fnstenv
sahf
cmp
mov
inc
pop
repnz
sub
adc
jbe
lret
cwtl
das
mov
mov
pop
dec
cmc
addr16
sub
mov
fs
mov
test
popa
mov
jg
adc
neg
push
popf
or
jge
lods
and
popf
lds
mov
jo
adc
xor
testl
lods
lahf
xchg
sub
movb
or
out
pop
iret
data16
lea
pusha
in
test
mov
test
inc
loop
sub
flds
fnstenv
repnz
fistps
testl
cmp
sbb
lret
or
rclb
outsb
add
xchg
cmc
mov
scas
mov
stos
inc
insl
dec
sbb
adc
testb
mov
sub
stos
inc
inc
fnstcw
loopne
out
sub
push
fildll
cmpsb
pop
fidivs
iret
mov
jl
cld
xchg
pop
xchg
test
mov
leave
xlat
outsb
cltd
cmp
mov
cmc
mov
ret
lock
sbb
aad
aas
xchg
sub
dec
out
jae
inc
nop
lds
mov
into
gs
add
test
test
xlat
outsb
and
sub
pop
dec
cmc
mov
inc
pop
repz
call
jp
shl
fistl
cwtl
das
adc
call
push
outsl
outsl
push
cli
jns
imul
mov
rclb
cmpsl
push
pop
fidivl
das
lds
clc
decb
and
push
mov
mov
mov
lret
adc
outsl
push
into
cmp
pop
out
and
mov
jp
mov
inc
jb
add
repz
mov
sbb
dec
into
jle
das
imul
dec
dec
pushf
xor
fnstcw
out
and
outsl
cmp
outsb
add
xchg
adc
sub
inc
movb
jl
fsubrs
xchg
push
out
or
mov
shrl
loop
and
ljmpw
stos
inc
mov
xlat
leave
pusha
sub
imul
jge
xchg
xchg
add
cmp
and
mov
loope
xor
xchg
add
push
out
loop
pop
mov
or
jnp
cs
into
repz
xor
incb
pop
jne
xchg
xchg
xor
arpl
xchg
lods
inc
sbb
dec
in
aas
fidivl
mov
ret
push
jmp
sub
outsb
and
mov
das
out
scas
fnstenv
push
jle
push
stc
out
xchg
jne
dec
cmpsb
and
mov
idivl
out
adc
scas
inc
or
mov
xchg
outsl
cmp
cltd
mov
repz
pusha
div
add
sbb
xor
stos
ret
pop
fnsave
loope
sub
push
dec
daa
insb
mov
sub
cmp
dec
stc
and
int3
or
mov
dec
cmp
mov
mov
dec
dec
jno
ja
pusha
rep
loope
inc
mov
sbb
mov
cmpsb
xor
fstpt
es
mov
adc
sbb
mov
mov
push
in
xchg
mov
dec
inc
call
sub
mov
ret
mov
inc
bound
imul
dec
sub
mov
push
pop
jg
shlb
xor
or
cmp
in
push
pop
pop
adc
or
inc
xor
test
sub
mov
ret
int
mov
jmp
ds
or
fldenv
sbb
sub
in
adc
dec
and
jb
mov
push
jns
rcll
fidivrs
jne
cmp
push
pop
ljmp
and
add
adc
mov
hlt
and
int
and
icebp
push
sbb
pop
jge
cmp
fmull
jl
scas
inc
ror
push
adc
std
mov
jno
repnz
jo
pop
inc
ljmp
and
fdiv
push
stc
std
lahf
daa
in
jecxz
pop
loope
fimull
out
imul
jne
cwtl
hlt
js
dec
ret
out
sub
subb
or
dec
outsl
pop
cld
or
xchg
lret
mov
leave
movsl
mov
lods
lea
add
push
pop
xor
or
bound
inc
dec
mov
lock
into
sti
lret
fstpl
add
mov
and
jo
cmpsb
lods
cli
mov
xchg
mov
mov
adc
arpl
mov
dec
xchg
rolb
pop
pushf
out
dec
std
jmp
movsl
test
xchg
scas
mov
dec
cmp
fdivrl
idiv
das
test
jl,pt
int3
fdivrs
and
lock
int3
les
shlb
xchg
jp
pop
and
mov
xchg
out
outsb
and
dec
mov
lea
insb
cmp
xchg
lods
les
xor
jmp
lods
es
mov
mov
arpl
adcb
fnstsw
pop
dec
push
or
push
scas
insb
fs
or
jo
daa
jge
and
mov
fistps
sbb
in
stc
pop
jge
mov
and
out
xor
dec
adc
pop
out
mov
orl
sbb
rcrb
adc
mov
adc
jmp
stos
cmp
sbb
or
sub
sbb
pop
cs
sub
and
sar
sub
fdivl
insl
scas
mov
sub
bound
aam
jne
and
push
fdivs
mov
ss
mov
mov
or
hlt
mov
jbe
pop
fists
call
repz
xor
dec
and
or
stos
jnp
mov
scas
pop
pop
push
movsl
fstps
cmp
push
bound
inc
push
bound
in
and
and
lods
mov
iret
inc
idivb
xchg
cmp
xlat
xor
ss
adcl
gs
xlat
adc
pop
mov
scas
mov
pushaw
fimull
xor
sbb
aam
lea
lcall
or
inc
cmc
push
jg
hlt
rorb
subl
pop
addb
mov
call
ljmp
mov
sbb
mov
dec
pop
mov
push
push
test
xchg
mov
daa
adc
addr16
mov
cmp
mov
jl
cmp
outsb
and
dec
cs
decl
mov
xor
sti
daa
mov
in
cmpl
mov
sbb
addr16
pop
xlat
arpl
pop
rclb
pop
or
mov
aam
jl
mov
lock
add
in
bswap
jne
cmp
cli
jae
jp
mov
idiv
add
jmp
ret
cmp
or
mov
jbe
adc
push
clc
sub
pop
adc
addr16
xchg
repz
sbb
ss
leave
mov
aam
lret
dec
jg
stos
lret
or
mov
fisubs
push
fldt
popa
fstpt
jno
mov
and
mov
or
dec
test
inc
fld
imul
cmp
xor
xchg
fsubrs
in
gs
enter
call
mov
jbe
xor
mov
js
movsl
test
push
clc
push
mov
mov
test
push
sub
sbb
xorl
push
jmp
mov
mov
arpl
fwait
lret
mov
ds
mov
sbb
jmp
cmpsb
jmp
cmpsb
inc
incb
divl
mov
xlat
jmp
ja
sub
xor
cs
dec
pop
repz
adc
xorl
test
shrb
aaa
adc
dec
cmpsb
sbb
and
or
out
dec
insb
fisubl
or
jg
not
outsb
pop
inc
shll
inc
int3
and
mov
or
mov
jae
icebp
sti
dec
dec
cmp
mov
dec
pop
and
jns
not
xchg
movsl
mov
insl
bound
int
in
out
jle
mov
mov
jge
mov
cmc
ds
in
mov
lret
mov
out
xor
sbbl
inc
and
and
pop
inc
cmp
sub
dec
mov
jae
sahf
push
punpckldq
push
inc
pop
mov
subb
add
pop
ds
mov
ljmp
ret
push
add
xor
js
ret
je
ds
or
iret
pushf
jb
inc
sub
pop
mov
xor
lret
cmp
sbb
stos
insb
inc
inc
out
fidivl
xchg
jb
loopne
test
cmpsl
cs
xlat
popl
inc
int
adc
sub
stos
mov
je
pop
cs
adc
mov
jmp
xchg
cmp
cmp
ret
xor
jae
es
pop
enter
mov
movsl
push
xor
lods
add
xor
fsubr
lahf
inc
popf
jbe
cmp
inc
add
adc
jmp
jne
faddl
or
jmp
xchg
repz
sbb
jno
ret
inc
mov
mov
dec
xchg
jno
xchg
rcll
aad
lea
dec
outsl
frstor
icebp
cs
sub
out
sub
clc
sbb
addl
repz
cmpxchg
das
mov
sub
xchg
leave
daa
stos
inc
mov
imul
inc
fs
pop
repnz
das
rcrl
pop
idivl
pop
in
mov
lock
cmc
ss
test
inc
adc
sbb
lods
test
mov
iret
mov
in
outsl
pusha
push
mov
jnp
adc
cmp
jno
mov
aam
and
out
loop
add
bound
jno
das
in
rolb
jle
pop
push
xchg
lds
xor
ljmp
xchg
sub
dec
add
pusha
je
fdivs
std
inc
fsubl
and
pusha
cmp
xchg
adc
dec
fsubrl
adc
out
sub
in
and
sub
cmpsb
xchg
std
js
adc
and
loopne
movsb
sbb
nop
pop
jle
ficomps
in
jno
or
movsl
mov
mov
sub
lods
dec
push
jnp
icebp
add
sarb
sbb
cmpsl
enter
pushf
jnp
and
insl
movsb
xor
dec
ljmp
mov
scas
inc
mov
ss
js
dec
adc
iret
mov
dec
cltd
orb
inc
cli
dec
andb
in
pop
cmp
xchg
rclb
shl
xchg
push
xor
cmp
inc
add
andb
stos
out
pushf
inc
xchg
mov
xchg
jbe
fs
cmc
mov
jb
sbb
stos
inc
arpl
pop
or
mov
sbb
jge
sbb
xchg
ret
mov
aam
mov
xchg
dec
sbb
loope
mov
fmuls
xor
xlat
pop
sbb
fsubrs
pop
jo
mov
pushf
lahf
lea
add
xor
ljmp
pop
jl
outsl
test
pushf
xchg
lahf
idivb
pop
xchg
adc
add
shlb
jno
add
daa
xor
mov
dec
mov
inc
bts
mov
insb
ret
lds
push
push
mov
mov
lods
push
test
lock
or
push
sahf
or
mov
ret
sbb
out
dec
scas
push
jno
fistpl
xchg
xchg
mov
movsl
hlt
cmp
jg
or
out
pop
xchg
or
cwtl
push
mov
dec
ljmp
repnz
pop
xchg
repz
mov
aas
jae
or
out
loopne
jns
push
add
cld
add
aad
js
adc
sbb
daa
cmp
lds
popa
and
push
pop
cmp
sub
arpl
imulb
insl
aad
push
aas
inc
out
lret
stos
jmp
ret
addr16
dec
lahf
push
add
clc
mov
mov
mov
jne
out
cmpsb
out
mov
push
insl
cmp
mov
dec
ljmp
or
mov
lret
mov
out
shrl
cmp
cltd
inc
repz
and
aam
popf
in
lds
adc
leave
movsb
ret
cmp
fwait
adc
bound
xor
dec
rorl
inc
xchg
lcall
add
lahf
sbb
imul
xchg
push
lcall
sahf
dec
jo
and
mov
in
inc
aas
push
xor
and
xchg
sbb
loop
xor
xchg
push
pop
dec
std
int3
out
jle
fs
int
ss
cmc
mov
es
jae
imul
push
outsb
cli
or
aas
jmp
xchg
jecxz
test
pop
lret
cwtl
cmpsl
ds
xchg
scas
ss
lret
push
pop
cwtl
scas
js
mov
or
add
cmp
push
add
adc
enter
mov
xor
cmpsb
pushf
pop
sbb
scas
je
repnz
loope
push
fcoml
pop
cmpb
lock
mov
cmp
pop
jge
dec
andl
cmpsl
roll
jbe
or
repnz
inc
or
lcall
cwtl
jmp
or
rclb
inc
stc
aam
mov
roll
inc
int
inc
xchg
cwtl
dec
dec
mov
rolb
lret
lahf
ret
addr16
js
insb
pushl
dec
mov
mov
not
loope
std
sbb
lcall
sbb
mov
cmp
push
ficompl
mov
or
jge
and
lock
sti
sar
in
pop
or
int
sahf
adcb
cwtl
pop
pusha
sub
inc
outsl
flds
push
test
and
mov
stc
mov
push
hlt
mov
aas
push
loopne
cs
push
dec
bnd
mov
sti
cwtl
xor
adc
sub
insb
dec
xor
and
lahf
cltd
test
dec
mov
outsl
jmp
push
jmp
mov
lods
call
int3
lds
lea
loopne
pop
rcrb
cmpsb
sub
add
jns
mov
fsts
fistpll
inc
jmp
fisttpl
cmpsb
aam
movsb
mov
xchg
adc
mov
nop
push
mov
sti
fsubrl
out
fistps
xor
or
mov
fisubrl
scas
or
lock
mov
fstl
and
cmpsb
pop
inc
push
or
pop
call
or
dec
repz
push
cwtl
test
jge
gs
dec
cmc
cmp
push
shll
jmp
cmp
aad
lods
clc
lods
dec
es
xor
mov
ja
cmp
and
popa
icebp
xor
sbb
es
roll
push
jge
add
shll
cmp
lds
mov
mov
push
inc
lods
cli
mov
fimuls
xchg
insl
mov
sub
xchg
pop
and
add
or
insl
cli
mov
pop
dec
lods
in
push
mov
sbb
ret
jnp
divb
mov
imul
or
lock
inc
and
lret
cmp
addr16
cwtl
cmc
mov
add
mov
xchg
dec
rolb
cmp
adc
lock
fldl2e
mov
xchg
icebp
in
mov
sbb
jno
push
or
mov
or
enter
xchg
aad
icebp
adc
in
add
push
cli
lahf
jle
mov
fsubs
aaa
cltd
mov
inc
mov
rcrl
hlt
test
ljmp
sub
stos
mov
sub
pushf
push
jno
mov
adc
in
aam
push
aam
mov
or
xorb
jne
mov
gs
jo
mov
aad
mov
or
push
popf
sub
aaa
aas
inc
pop
inc
imul
or
sub
inc
ss
rolb
repnz
jbe
cmp
jge
je
xchg
lods
mov
out
test
rolb
das
inc
mov
mov
jo
push
and
ja
adc
mov
lret
sti
aas
or
jg
cmpsl
incb
dec
cmp
dec
out
jp
inc
jns
xor
jecxz
std
dec
popa
or
mov
mov
xchg
enter
cltd
scas
mov
mov
add
idivl
outsl
mov
addb
adc
jmp
dec
and
adc
xchg
loop
setb
lods
rclb
ljmp
push
adc
and
mov
leave
pop
push
mov
sti
clc
mov
gs
cli
cmc
mov
inc
xorb
cmp
add
test
mov
adc
pop
lea
mov
mov
cmp
enter
pop
or
in
out
lods
dec
or
inc
fwait
imul
imul
das
xor
or
add
fstl
orb
mov
fcomi
cli
sbb
cmp
mov
cltd
pop
inc
pop
sbb
lahf
cmp
repnz
or
loope
adc
mov
sub
addb
out
push
js
jne
lcall
cwtl
outsb
jne
xor
sub
dec
mull
movsb
mov
mov
jae
cmp
sub
dec
ret
mov
call
sarb
inc
out
or
das
dec
pushl
xor
fst
push
sti
push
mov
sbb
cli
lahf
leave
pop
cmp
inc
inc
mov
sub
cmpsl
jne
loope
sbb
imul
cmpsb
stc
pop
mov
cld
push
cld
xorl
jnp
cs
fldt
mov
lret
pop
int3
adc
lods
shrl
inc
loope
cmp
mov
es
movsb
and
sub
cli
scas
fimull
xchg
aas
adc
and
cmpb
xchg
cmp
arpl
test
and
clc
scas
iret
lds
shll
mov
sub
dec
sub
insb
insl
data16
mov
sbb
rcrb
pop
cmc
lret
out
push
iret
fstps
xchg
xchg
fs
dec
dec
aaa
jg
mov
mov
jae
cltd
inc
cmp
dec
push
aaa
ret
movsb
xchg
aam
and
dec
mov
scas
fidivs
lods
xchg
rcrb
addb
sbb
insb
sbb
loopne
mov
sbb
inc
push
mov
ds
or
and
sbbb
loope
mov
out
mov
cmpsb
sbb
jmp
sub
sbb
dec
ror
cmp
loope
aam
mov
int3
mov
mov
movsl
xor
jns
jl
push
jecxz
and
push
cmpsl
aam
add
in
je
lds
sub
idivl
adc
pop
dec
ja
loopne
dec
or
pop
xor
push
cmp
int
push
sbb
loopne
jge
xchg
mov
cmp
popf
sub
dec
or
fcmovb
add
loopne
test
push
mov
sti
mov
jg
xor
call
jb
fwait
into
adc
loopne
adc
jno
and
adc
push
testb
data16
ret
fidivl
mov
jae
jb
sbb
hlt
pop
shll
movsb
jmp
jmp
das
sbbl
repz
in
int3
dec
test
cmp
stos
push
shrd
adc
andb
push
lods
dec
mov
jb
scas
test
popa
jbe
pusha
icebp
jo
decl
xlat
dec
loop
push
test
push
fwait
pushf
movsl
lds
arpl
sub
cmpb
cmpsb
leave
inc
lock
rcll
xor
cltd
dec
inc
push
aaa
inc
or
int
push
decl
into
inc
mov
mov
mov
je
add
fdiv
icebp
dec
dec
sub
test
test
data16
clc
stc
scas
rcr
int3
lret
outsl
hlt
jecxz
push
mov
fidivrs
xchg
adc
cwtl
idivb
adc
xchg
adc
inc
mov
mov
xor
xchg
pop
sub
mov
xchg
or
sbb
mov
aaa
mov
cli
enter
nop
fwait
inc
inc
xchg
inc
mov
out
andb
jns,pn
mov
xchg
push
push
leave
sbb
mov
nop
mov
out
pop
pop
push
mov
fisttpll
xchg
sahf
push
ror
lahf
xorb
popf
pop
test
repnz
sub
imul
mov
and
cld
push
mov
in
cs
loopne
nop
cmp
dec
xor
ret
push
pop
loope
test
sbb
sarl
fcoms
mov
loopne
add
push
subl
lahf
jge
fsubrl
dec
mov
in
add
jecxz
jae
int
mov
out
test
mov
xchg
jg
mov
stos
mov
push
stc
mov
cmp
imul
ss
mov
mov
aaa
addr16
or
ss
iret
pop
xor
fisubrs
lock
mov
aaa
jae
adc
popa
pop
mov
ffreep
ds
int
and
aad
pusha
icebp
cltd
xchg
xchg
mov
fidivl
test
popa
sub
test
or
dec
gs
mov
lods
scas
ss
es
cli
xor
jp
pop
jp
mov
xor
jb
xchg
mov
in
inc
pushf
pop
ljmp
push
data16
xor
mov
mov
rcrb
jne
xlat
add
popa
inc
es
lods
lods
or
jnp
mov
xchg
pop
loopne
jo
fsubl
jmp
scas
cmp
inc
aam
fs
cmp
jno
movsl
mov
out
sbb
xorb
or
imul
je
lods
mov
popa
cmc
mov
shll
stc
cmp
mov
cmp
jae
xchg
leave
in
xchg
push
mov
lock
int
push
xchg
lods
push
or
and
sahf
and
and
mov
mov
inc
int3
enter
dec
sti
dec
push
jns
stos
scas
in
lea
loope
sbb
xchg
ja
imul
xor
aas
scas
mov
sub
stos
push
scas
imul
sbb
mov
mov
dec
fsubrl
arpl
jno
je
jno
aam
cmc
and
mov
loope
add
aad
inc
adc
xchg
xor
xchg
js
pop
fnstsw
cmp
xor
sub
mov
les
sub
loope
aas
das
cmp
or
xor
dec
daa
enter
add
jbe
sahf
add
jne
out
cld
out
popf
jno
and
mov
mov
subb
sub
lods
mov
sbb
mov
sahf
aad
fwait
imul
sbb
jp
sarl
mov
push
in
rcll
lahf
stc
xor
inc
add
adc
dec
ret
sub
push
jge
xchg
ja
in
add
inc
inc
lret
jmp
test
jne
push
stc
call
cmp
mov
push
pop
jb
sub
sbb
into
outsb
sub
inc
ljmp
pop
je
inc
fnsave
enter
scas
jle
fdivs
mov
sti
jecxz
popa
mov
cmp
aad
add
xor
add
or
inc
insl
ret
icebp
inc
inc
lds
lret
out
mov
in
or
iret
mov
push
cltd
movb
fcompl
xor
sub
insl
test
data16
sbb
popa
pop
jno
addl
mov
xchg
daa
add
sahf
jge
mov
jl
je
pop
cli
mov
dec
jo
jnp
scas
adc
jb
lock
out
arpl
jno
jo
inc
sbb
jge
cmc
pusha
jo
push
xchg
add
mov
dec
jmp
lods
sbb
sub
mov
add
mov
inc
dec
xchg
enter
int3
dec
shll
or
push
sbb
sub
dec
rorb
mov
sahf
adc
cmp
jle
shlb
loop
fwait
shlb
mov
rorb
jns
pop
push
jno
addr16
inc
mov
jns
xchg
inc
lahf
cmp
jl
inc
outsl
push
mov
test
mov
sbb
and
or
xchg
push
inc
outsl
push
or
dec
movsl
jg
pop
sbb
mov
es
out
adc
push
repz
fbld
test
mov
mov
fidivrl
mov
jg
sbb
decb
inc
into
mov
mov
sub
sbb
add
lret
cmp
xchg
jge
mov
repz
mov
clc
nop
dec
jle
and
pop
in
inc
mov
xchg
out
sub
lock
ss
call
leave
aad
out
or
call
push
shll
aam
jg
adc
xchg
outsb
cltd
in
lcall
insb
adc
cltd
dec
jmp
mov
orl
push
pop
lods
jg
mov
fdivs
jecxz
insl
outsb
das
ficoml
mov
in
xchg
lea
stos
jbe
push
fidivs
pop
test
movsb
aaa
out
xorl
ret
icebp
shrb
mov
call
pop
adc
jmp
loope
xchg
sbb
das
loope
adc
arpl
xchg
shrl
mov
dec
sbb
out
jp
push
mov
or
sbb
mulb
push
pop
lahf
adc
xchg
lds
daa
sbb
testl
add
mov
cwtl
pop
sti
mov
data16
jb
jecxz
inc
movsb
jg
dec
mov
mov
mov
rclb
sti
push
icebp
fstl
adc
mov
cmp
fildl
mov
out
add
sub
or
mov
mov
and
mov
pop
dec
frstor
adc
popf
scas
cmc
push
push
in
test
movsl
cmc
lahf
mov
fs
fistps
cld
es
imul
pop
lock
xor
repz
loope
in
sbb
fsubs
adcb
push
mov
and
movsl
popa
jl
scas
jl
add
cmpsb
mov
add
or
jmp
adc
inc
dec
inc
cmp
ja
lea
ds
iret
int
clc
mov
push
in
fdiv
scas
xor
ret
inc
sbb
sbb
jnp
jmp
nop
ret
mov
jb
xor
mov
imul
push
jns
lods
shlb
sbb
aam
clc
or
jmp
or
lods
xchg
push
jno
pusha
int
xchg
arpl
fisttps
jae
mov
sbb
aam
shrb
adc
int3
test
jg
insl
neg
out
ja
pop
inc
adc
mov
inc
call
bnd
push
lret
jg
ljmp
dec
ds
nop
cmp
or
gs
cmpl
push
out
outsl
push
mov
roll
pop
mov
pop
fsubl
fsubrl
sub
sub
dec
jbe
sub
arpl
jl
outsl
stos
mov
mov
inc
push
and
add
xchg
push
jno
lock
dec
mov
hlt
sahf
enter
xchg
lock
mov
pop
fmul
ret
into
pop
or
sti
or
aaa
shlb
into
call
adc
cltd
sbb
in
iret
add
or
or
shr
cmc
mov
iret
lods
sbb
xor
cltd
xor
xchg
mov
sbb
and
loop
pop
cmpsl
xchg
xor
xchg
lcall
pop
inc
in
fwait
or
arpl
cltd
movsl
sar
dec
jo
inc
fiaddl
ds
push
xchg
lret
and
out
in
dec
dec
fsubs
and
fwait
insl
jb
jnp
fldl
jbe
dec
sbb
dec
push
in
and
in
dec
pushf
insl
or
insl
es
sub
mov
bound
push
xchg
push
out
push
jo
test
in
mov
inc
pop
jae
cmp
sub
push
imul
pop
adc
mov
xchg
in
adc
hlt
xor
outsl
gs
and
xorb
aas
cmp
dec
and
xchg
iret
ja
jnp
xchg
or
movsb
add
or
push
lahf
das
push
inc
adc
sub
pop
pop
pushf
xchg
das
std
loop
lods
xor
lea
das
out
sbb
xchg
out
or
or
or
int3
sbb
ljmp
dec
mov
xor
sbb
cmp
sub
stos
add
divl
ja
aaa
or
xor
xchg
add
in
jbe
or
inc
cmpsb
and
xchg
push
leave
dec
xchg
call
inc
cmc
jnp
jbe
jne
dec
xor
jl
adc
push
notb
iret
inc
mov
or
in
pop
dec
pop
cltd
mov
sub
in
hlt
std
mov
icebp
popf
cmpsb
loope
test
loopne
pop
shld
pop
sbb
lods
std
fs
inc
dec
mov
cmp
test
ljmp
lods
cmp
js
push
aam
daa
adc
adc
ds
adc
pop
into
lahf
mov
mov
xchg
mov
lahf
dec
movsl
sbb
arpl
sbb
andl
jb
test
test
push
mov
push
push
pushf
and
or
arpl
dec
pop
xchg
test
in
mov
and
cli
pop
inc
inc
pop
subl
sbb
mov
aaa
cld
insl
out
pop
jbe
and
lret
and
or
in
mov
nop
add
xchg
cmp
outsl
fsubs
fidivs
push
cmpsb
adc
mov
in
jmp
jmp
or
or
nop
fwait
pop
pop
dec
subl
bound
push
add
mov
sbb
gs
add
sub
loop
mov
pop
orb
jnp
arpl
push
hlt
adc
jo
jo
fcmovu
loop
mov
sbb
push
insl
or
out
sbb
insb
stc
push
scas
xor
mov
jle
jmp
or
data16
mov
ljmp
movsb
jne
iret
jge
in
movsl
lea
scas
xchg
or
hlt
mov
out
rclb
mov
mov
push
fs
sbb
mov
rcll
es
das
mov
into
jne
push
lds
xchg
or
rol
je
int
xchg
dec
sarb
mov
push
dec
ret
ljmp
fadds
push
hlt
jle
outsb
movsl
out
push
pop
movsl
sbb
aad
xchg
dec
sub
lret
je
or
mov
ds
lods
jo
jne
addl
mov
adc
sbb
je
test
rorb
adc
fsub
cli
mov
mov
ljmp
int3
xor
jp
add
testl
les
mov
xchg
cmp
sbb
ds
std
cwtl
jnp
inc
mov
cli
pushf
sbb
stos
cmc
clc
cld
xor
inc
dec
xchg
mov
fimull
repz
or
mov
daa
mov
add
es
push
or
js
mov
pop
adcb
lret
sti
mov
xor
sbb
out
dec
add
or
rcll
fistl
inc
inc
cld
sub
dec
sub
jg
in
sub
dec
loop
push
or
sbb
cwtl
inc
mov
fsubp
lahf
mov
std
repnz
pop
test
mov
nop
ja
mov
scas
leave
inc
pop
xor
xor
sbb
loop
test
add
vphaddbw
and
and
lods
inc
push
mov
bound
mov
inc
mov
lahf
popa
xchg
mov
mov
call
aas
push
cmp
xchg
outsb
daa
popa
clc
pop
and
adc
int
xor
xor
and
push
mov
xlat
outsb
movsl
fcomps
mov
sub
stos
dec
jle
jo
insb
xor
popf
shl
mov
mov
adc
push
inc
jbe
int3
cmpsl
mov
xchg
enter
mov
inc
icebp
sbb
inc
adc
dec
gs
data16
insb
cmpsl
ds
rcl
cli
mov
mov
sbb
dec
data16
pop
mov
rorl
lock
inc
inc
adc
push
lds
insb
sbb
jl
mov
push
lock
push
mov
push
sahf
xor
in
mov
cmc
out
or
out
xchg
add
xchg
mov
inc
fsubrp
cld
cmp
and
inc
pop
idivb
dec
fists
mov
xor
cli
ja
and
and
jg
fnstenv
mov
jno
icebp
cli
jae
and
pop
icebp
dec
inc
mov
jg
shrb
mov
sbb
and
inc
mov
scas
xchg
es
jnp
es
inc
fisubrs
dec
iret
data16
sti
xchg
int
aaa
into
ret
ret
call
bound
out
imul
cmp
push
inc
fimuls
sub
mov
sti
xchg
lods
mov
jle
into
adc
nopl
xor
dec
sahf
mov
sahf
mov
mov
jle
or
jno
xor
dec
nop
mov
mov
testb
or
pop
mov
pop
mov
inc
mov
lock
aad
mov
cmp
and
sub
jb
push
out
mov
push
call
pmaxsw
mov
imul
mov
mov
mov
fs
mov
pop
xor
imul
ja
mov
insb
lods
xlat
and
stc
xor
pop
imul
push
inc
mov
mov
xchg
cs
ret
pop
adc
xchg
sub
xor
imul
push
mov
add
mov
sti
xor
xchg
imul
inc
mov
mov
adc
ss
xor
popa
imul
lahf
inc
mov
lret
cmp
sahf
out
test
rolb
out
xchg
dec
in
mov
popf
xlat
imul
mov
inc
cld
xchg
xor
cmpsl
ds
pop
sahf
xlat
mov
adc
pop
imulb
xchg
and
int3
arpl
adc
movsb
cmp
fs
adc
mov
ficompl
fdivl
xchg
popa
fcos
xchg
add
movsb
cmp
add
and
int3
arpl
jge
mov
enter
jb
ljmp
or
cwtl
push
cld
xchg
push
mov
lods
push
insb
add
les
popa
pop
mov
pop
mov
push
mov
dec
loop
add
out
ds
hlt
pusha
pop
repnz
addr16
xchg
cs
pop
movsb
cmp
pop
repz
inc
ficomps
pusha
imul
pop
sbb
xor
push
dec
out
repz
repnz
pop
repz
lahf
and
sbb
pop
mov
pop
bnd
mov
and
es
sbb
fidivl
insb
add
mov
mov
mov
xchg
iret
iretw
and
jb
out
pop
out
pop
jg
and
leave
pop
repnz
adc
outsb
add
and
test
jge
into
movsl
add
repnz
sti
xchg
mov
jb
jnp
mov
les
scas
push
pop
repnz
enter
je
aam
pop
movsb
cmc
sbb
decl
or
or
les
pop
mov
ret
call
jb
push
dec
fisttps
xchg
sub
pop
repnz
jns
push
mov
jl
loope
jl
movsb
mov
aad
shrl
test
and
xchg
jne,pn
das
and
gs
ja
ret
pop
push
cltd
dec
loop
aaa
test
add
test
jg,pt
int
add
mov
push
stc
add
mov
and
or
rcrl
mov
sbb
ret
sbbl
fistpl
nop
daa
dec
cld
out
sub
pop
cmpsl
dec
add
lcall
add
es
cmpsb
scas
inc
dec
loop
iret
inc
xchg
imul
sbb
jmp
in
sub
insb
jl
fwait
xor
dec
arpl
pop
mov
rcrl
loop
add
imul
std
xchg
loopne
sbb
xor
push
inc
fildl
push
out
jo
add
sub
dec
mov
jne
mov
dec
sahf
cltd
daa
leave
popa
loope
lcall
ljmp
pushf
cmp
adc
test
inc
loope
mov
mov
push
or
lret
xor
pop
dec
flds
lods
pop
out
sbb
and
shlb
dec
lahf
sub
add
lret
aad
call
pop
jmp
push
xchg
mov
push
jp
cmp
inc
loope
push
mov
mov
jbe
pop
movsl
sahf
daa
fnsave
sbb
sub
lcall
adc
mov
cmpb
sbb
leave
pop
xor
pop
out
imul
mov
xlat
js
or
stc
lea
mov
pop
outsb
or
lods
mov
test
std
push
sub
pop
cmp
andb
lahf
scas
dec
mov
pop
shl
arpl
adc
aam
sub
lcall
lcall
int
mov
paddb
cmpsb
adc
cs
hlt
insb
aad
cmpsb
mov
add
sub
push
aas
push
xor
jle
shlb
test
shll
xchg
and
jmp
shll
cs
jbe
out
mov
lea
jmp
dec
ljmp
js
data16
mov
mov
cs
adc
cwtl
sbb
push
loop
cmp
xor
int
inc
add
mov
cs
loope
push
loopne
xorl
mov
push
pop
sub
jbe
jp
jo
pop
fmul
lea
ret
in
sbb
cltd
sbb
js
jo
lea
fwait
mov
lds
cwtl
sbb
adc
addb
sub
jle
rclb
push
loop
lret
or
xchg
cmp
fcomps
mov
jb
jecxz
lods
cwtl
lret
add
xlat
jb
or
insb
jnp
lods
movsl
test
sahf
ljmp
subl
sub
lcall
btr
stos
sti
jg
hlt
daa
lret
repz
es
jl
xchg
mov
jl
add
jl
cmp
test
icebp
jle
xchg
sbb
std
lds
mov
or
scas
dec
xor
aas
mov
scas
movsl
cs
xlat
test
sbb
xor
mov
push
dec
dec
ljmp
jns
aad
shrd
out
push
mov
jp
daa
aad
test
loope
clc
mov
cld
insl
sub
push
mov
xlat
fs
fwait
sbb
roll
sub
xor
dec
insl
mov
test
gs
add
jae
adc
out
mov
fsts
scas
or
ss
or
push
in
scas
pop
aas
nop
iret
jo
add
xchg
push
add
add
cmpsl
push
nop
daa
mov
ret
pop
cli
stos
mov
insl
dec
std
aam
das
outsl
clc
mov
ret
repz
test
idivb
push
dec
mov
cmp
pushf
pop
icebp
int
and
and
jne
inc
insl
jae
cld
xchg
out
hlt
mov
pop
sbb
sbb
rorb
lods
pop
hlt
fisttpll
jg
xor
jle
adc
sub
xor
xlat
test
js
fdivrs
iret
or
jge
push
in
pop
popf
fnsave
je
stos
in
sti
xchg
pop
rcll
mov
sub
inc
pop
xorl
mov
mov
jae
pop
mov
mov
or
sarl
mov
xor
in
push
leave
pusha
xchg
mov
testb
stc
sbb
cmp
test
add
in
arpl
inc
out
aam
pop
push
adc
xor
aam
imul
cltd
lret
xchg
or
fidivrl
iret
stc
dec
cmp
mov
gs
cmp
jbe
orl
mov
sbb
repz
xchg
sub
adc
and
mov
dec
imul
push
or
sti
xchg
jl
pop
testb
xor
jle
lahf
insl
mov
daa
out
mov
pop
call
jmp
mov
xor
lret
inc
mov
ret
fsubrs
dec
and
stos
ss
mov
lods
rorb
stc
dec
icebp
cmp
sbb
mov
ret
adc
fwait
xor
sbb
out
cld
jae
mov
xor
decb
sbb
mov
icebp
push
sbb
mov
add
or
xchg
loop
insl
add
add
mov
and
pushl
pop
adcb
or
fistpll
cmp
cmp
adc
inc
jo
popf
mov
mov
shl
ss
icebp
popf
xor
jge
and
adc
sti
pop
xor
icebp
lods
or
xor
and
insl
pop
ljmp
imul
mov
ret
pop
flds
cmp
decb
cmp
icebp
lods
js
xor
cmp
dec
sbb
data16
jle
cmp
inc
mov
cmpsl
ds
dec
mov
jle
lds
out
sub
in
add
leave
aam
mov
shl
mov
cmpsb
mov
xor
or
sbbb
loope
cmp
ret
fdivr
xchg
push
add
cli
js
js
jge
test
pushf
stc
nop
push
sub
pop
dec
and
dec
push
cmp
inc
or
sahf
cmp
test
clc
jns
ljmp
cmp
mov
mov
loope
jg
and
mov
jnp
repnz
and
jmp
xor
sub
testl
push
mov
xor
inc
pop
movsl
cmp
push
addr16
cmp
jno
icebp
or
jp
jp
popa
lods
out
jmp
in
test
mov
mov
sbb
mov
xor
inc
pop
dec
loop
jne
cmc
data16
loope
jno
push
push
scas
inc
or
add
pop
sahf
xor
xor
aas
xorl
ds
and
scas
repnz
pop
cmpsl
ds
imul
adc
xchg
cmp
jno
fwait
xor
clc
jbe
sub
lahf
ss
scas
mov
cmp
push
sahf
xor
xchg
sbb
test
dec
sbb
sub
inc
fnstcw
lea
add
xor
push
jmp
mov
inc
outsb
mov
mov
daa
mov
pushf
in
and
gs
out
xor
loopne
stc
nop
inc
adc
test
arpl
inc
mov
inc
sub
cmp
cmp
add
dec
mov
mov
insb
outsl
jns
mov
sub
jns
and
push
dec
cmpsb
add
pop
add
les
stos
sbbl
lcall
rolb
inc
dec
loop
pop
jmp
adc
mov
sti
movsb
xchg
xlat
cli
sub
jmp
xchg
sub
ljmp
mov
outsb
add
gs
lret
in
xchg
pop
add
or
imul
jmp
in
popf
push
call
arpl
sarl
mov
stos
scas
loopne
dec
adc
in
or
out
xchg
xlat
scas
inc
leave
sbb
jle
sub
movsb
jge
subl
hlt
push
outsb
pop
out
pop
push
push
fimull
adc
inc
dec
adc
cmp
mov
mov
repz
pop
and
sub
andl
pushf
lret
mov
or
jnp
sub
insb
ret
xor
rep
push
movsl
pusha
jbe
sti
test
adcb
das
jbe
pusha
cwtl
shrl
call
mov
inc
adc
sub
fcomp
jae
xor
movsb
into
out
test
test
and
leave
sbb
dec
addb
mov
jmp
dec
pop
icebp
in
sbb
out
nop
daa
add
les
pop
mov
arpl
and
xchg
push
mov
or
movsl
push
cmp
cmp
dec
in
pop
test
xsha1
cmpsb
mov
push
ljmp
inc
hlt
mov
out
loopne
xor
rcrl
repz
cld
mov
out
popa
and
xchg
mov
lds
dec
pop
out
jge
shrb
cld
sbbb
mov
sub
mov
pop
iret
sub
shlb
scas
lret
ss
push
loope
pop
adc
data16
jb
cltd
cwtl
das
or
rclb
fidivl
jae
cmp
cs
popa
push
fdivl
call
xchg
sub
movsb
xor
adc
inc
shlb
pop
jo
andb
add
int
sahf
mov
lods
mov
jne
dec
inc
fstpt
fucomip
jg
sub
repnz
int3
sbbl
int
mov
push
lret
or
push
aas
into
pusha
testl
lret
or
testl
sbb
dec
xor
cmp
fsubrs
xor
arpl
mov
adc
sub
mov
test
xor
bound
pop
hlt
and
adc
out
test
mov
das
sub
mov
fcomps
aad
shll
shrb
adc
sbb
or
aad
rclb
inc
xlat
lds
push
jmp
test
mov
testl
xchg
mov
mov
mov
jb
loop
stc
sub
or
fnsave
leave
into
xor
lock
xor
adc
inc
jno
pop
icebp
add
les
jbe
js
jb
movsl
imul
rcrl
in
pusha
pop
fwait
xor
arpl
add
add
xor
adc
cmp
pusha
imull
stos
in
sbb
pusha
push
out
push
pop
jp
mov
lea
clc
push
jmp
stc
mov
sub
int3
arpl
lods
loope
ficomps
push
jmp
cltd
repz
into
loop
rorb
out
cmp
outsb
ja
jae
jmp
inc
ficomps
imul
sahf
icebp
mov
xlat
popf
xor
push
les
iret
cmpsl
add
mov
clc
sti
inc
jg
jp
push
ljmp
mov
mov
sbb
or
loopne
push
adc
cmp
lods
into
or
clc
popl
and
mov
leave
je
lret
cmpsb
or
int3
jge
data16
push
adcb
dec
icebp
jb
jecxz
movsb
cmp
push
jmp
cmp
mov
test
adc
leave
js
subb
sbb
imul
adc
pop
out
add
mov
mov
mov
xchg
sub
xor
mov
push
jecxz
addr16
aam
xchg
push
xchg
mov
rorl
cld
leave
pusha
out
jne
aad
in
ss
and
push
lock
cmp
sbb
dec
loope
or
push
das
movb
stc
addl
icebp
aaa
ret
mov
insb
add
mov
mov
xchg
sub
lea
loopne
jns
inc
mov
jbe
ss
icebp
in
and
pushf
xor
jno
sub
pop
lock
subl
mov
mov
shlb
pop
repz
out
outsb
add
mov
cwtl
das
fdivs
ret
sub
popf
xchg
aam
leave
loopne
inc
rclb
sub
cmpsl
mov
lods
inc
mov
cmp
data16
lds
loop
jecxz
and
adc
lret
pop
hlt
or
sub
les
push
cs
adc
outsb
inc
lahf
dec
in
add
cltd
ss
xchg
sub
loope
dec
in
push
es
pop
push
out
in
push
jmp
jg
es
cli
mov
sub
lods
mov
xor
enter
fmuls
cwtl
das
lea
arpl
sarl
xorb
sub
daa
jbe
mulb
daa
mov
pop
xchg
xor
ret
fwait
jo
or
push
xchg
subl
pop
repz
in
test
or
sbb
mov
test
and
scas
push
add
push
jbe
inc
flds
jo
cli
or
mov
sbb
iret
mov
inc
mov
ror
repz
je
sub
mov
lahf
cltd
addr16
cltd
mov
fnsave
inc
fdivrl
push
in
addl
sbb
jecxz
sub
and
mov
fistpll
mov
cld
int3
stos
fldcw
out
test
and
cmc
mov
inc
mov
cmpsl
adcl
fdivl
dec
fbld
std
xchg
outsl
inc
gs
js
sbb
lret
fnstcw
aaa
daa
sub
out
pop
inc
mov
or
xchg
fdivs
leave
nop
sub
loop
xchg
sbb
sbb
push
shrl
xor
mov
fsts
push
pop
adc
popa
jno
lds
ret
dec
jecxz
aad
inc
pop
push
imul
sub
arpl
mov
fwait
jnp
subl
shufps
daa
mov
xchg
jb
fsubl
mov
adc
xchg
push
sbbb
push
inc
fldl
inc
push
out
cld
rcrl
jp
sub
jecxz
loopne
mov
fcomip
push
popf
out
mov
mov
mov
cmp
pop
icebp
fwait
jmp
jg
int
push
lods
adc
movsb
cmp
ret
mov
mov
dec
loope
mov
jl
cmpsl
inc
hlt
mov
and
mov
inc
inc
xor
ss
mov
inc
xor
mov
pop
pop
mov
pushf
xor
shrb
mov
fwait
pusha
add
lods
sbb
jp
filds
adc
pop
xlat
dec
loope
jno
mov
add
rcll
and
add
jae
xor
loop
imul
hlt
mov
lods
mov
mov
cmp
dec
sti
xchg
aas
xchg
mov
adc
inc
xor
adcl
hlt
in
xor
jmp
in
or
negl
in
movsb
int
mov
push
lods
push
movsl
sbb
sub
inc
fidivs
mov
movsb
and
adc
xchg
fmuls
mov
xchg
stos
jge
mov
lahf
icebp
hlt
leave
pusha
es
cmp
out
sti
xchg
shl
sbbl
xchg
or
push
mov
add
push
out
outsb
add
pop
test
das
fistl
inc
dec
sahf
ret
mov
mov
cwtl
aam
lret
fnstenv
push
popf
mov
cmp
cmpsl
push
ret
pop
pop
out
daa
mov
pop
fidivl
enter
rcll
int3
arpl
push
outsl
push
inc
jns
or
test
pop
imull
call
inc
dec
jmp
popa
fisttpll
fnsave
in
jnp
call
arpl
mov
in
jg
or
add
cmp
bound
lahf
mov
aam
xchg
shll
add
pop
out
ljmp
lret
mov
mov
push
lods
cs
jl
pusha
jb
push
out
out
xchg
gs
push
cmpsl
sbb
pop
lahf
sub
shrb
sub
pop
hlt
enter
pop
addr16
insl
push
call
mov
inc
mov
lods
add
mov
sub
fbstp
xlat
aad
leave
push
ret
pop
jmp
sbb
lea
les
call
das
pusha
dec
jecxz
stos
sbbl
push
fwait
xchg
sub
fs
sahf
push
mov
pop
mov
cmp
imul
pop
out
stc
nop
and
mov
cmpsl
or
pop
lahf
cmp
outsb
pop
xchg
inc
fmulp
outsl
mov
call
add
testl
ljmp
ljmp
into
mov
sti
xchg
inc
ss
jns
movsb
test
xor
into
popa
sub
clc
sbb
xchg
popf
mov
lds
ret
repz
sub
mov
mov
daa
sub
xchg
ss
sbb
mov
repnz
cs
ds
xor
lock
add
pop
popf
xor
pop
and
jle,pt
pop
icebp
push
mov
sbb
lahf
pop
xchg
lcall
xor
pushf
inc
pop
js
jg
jbe
cmc
stc
mov
xchg
ljmp
add
jns
aam
sbb
xchg
mov
pop
or
add
dec
rcrl
add
nop
js
or
pop
inc
fdivrl
std
xchg
pop
ljmp
and
dec
loopne
push
clc
popl
fs
scas
cmpl
push
cmc
mov
out
pusha
imull
call
push
out
or
mov
mov
mov
pop
enter
add
xchg
sub
pop
out
xchg
lds
mov
sti
inc
iret
data16
sub
jmp
stc
nop
sub
int3
arpl
mov
mov
xchg
gs
test
xchg
test
jae
push
call
arpl
sbbl
arpl
jbe
scas
xchg
sub
cwtl
sbbl
lcall
pusha
mov
les
dec
sti
xchg
jp
pop
repnz
or
sbbb
cwtl
das
and
inc
fildl
jae
leave
jne
addr16
movsl
cmp
xchg
jns
or
or
stos
aas
fnstenv
fdivrl
sub
dec
jecxz
lods
sbb
cltd
cmc
cltd
daa
mov
ja
xor
xor
xor
push
mov
cld
push
dec
push
call
or
xchg
aas
into
cltd
xor
push
xchg
sub
stos
inc
stc
je
shlb
fstl
xor
mov
test
jle
or
inc
cli
push
addr16
pop
shll
push
sbbb
test
lods
inc
pusha
das
test
add
aaa
sub
test
in
test
lods
icebp
mov
fcoms
scas
or
aas
aas
rolb
add
mov
enter
jno
arpl
and
push
out
mov
mov
fwait
xor
popf
std
xchg
iret
repz
mov
adc
ljmp
ret
ficoms
lsl
mov
cld
ja
sub
mov
lods
insb
and
pop
sub
push
pop
mov
into
in
dec
sbb
inc
sub
mov
cmp
and
mov
stos
xchg
sbb
enter
sub
cmp
shrb
das
add
mov
mov
inc
sub
push
lods
adc
sbbl
aad
fadds
lds
cmc
inc
rclb
test
cmpsb
sub
mov
and
mov
pop
rcrl
shrl
paddq
xchg
xor
add
pop
popf
cmp
sub
adc
lahf
insb
inc
fstpl
pop
push
out
sbb
jp
jle
or
sub
repz
mov
fs
fcomps
clc
xor
jmp
sbb
pop
xchg
insl
je
pop
repz
movsl
test
mov
inc
xchg
cmp
les
dec
in
sti
fdivl
xor
gs
cmp
adc
nop
adc
or
sahf
sarb
inc
rol
inc
fdivp
adc
mov
cmpsb
call
sbb
sub
sub
xor
pop
inc
mov
aam
cmp
sti
inc
mov
mov
cmpsl
test
pop
imul
das
cmp
jno
fwait
xor
clc
mov
sbb
pop
lock
fisubs
xor
xlat
scas
inc
or
pop
idivb
fnstenv
jge
outsl
imull
out
jb
mov
mov
mov
xor
and
push
jmp
jo
adc
pop
mov
pop
daa
dec
out
pop
xchg
sub
es
pop
dec
cs
out
push
shrl
scas
sahf
xor
cmp
loop
mov
jecxz
je
data16
xchg
cwtl
fs
or
xchg
xchg
sub
jae
pop
test
enter
xchg
loopne
xchg
jae
sbbl
xorl
mov
push
ja
mov
or
test
adc
xchg
loop
jae
add
movsb
xchg
xor
movsb
push
aaa
into
test
popa
clc
jne
jge
lods
std
popa
clc
cs
fwait
xor
push
jg
pop
pop
mov
cmc
xchg
mov
scas
pop
aas
xchg
mov
in
cvtdq2ps
fcomps
les
insb
cwtl
mov
mov
fiadds
dec
fs
sti
inc
pop
adc
scas
lret
add
or
xor
stc
lock
aas
out
push
cmp
push
inc
cs
add
insb
pop
dec
or
mov
clc
pop
dec
inc
rclb
xchg
mov
dec
leave
and
adc
push
mov
xchg
imul
push
scas
pusha
lret
mov
mov
xchg
subl
xchg
jg
scas
rorl
jo
dec
push
xchg
into
mov
pop
clc
das
jp
sub
xor
mov
icebp
outsb
clc
jp
sbb
loope
ds
or
into
loope
push
cs
lods
dec
or
pusha
cli
aad
ficomps
in
fildl
dec
add
rcr
push
leave
daa
or
in
bound
mov
mov
icebp
jns
lahf
cmpsl
lods
sarb
iret
jae
pop
add
mov
pop
add
testl
jecxz
mov
cwtl
faddl
cwtl
xchg
cmp
xchg
jnp
fdiv
cmp
shl
mov
push
inc
mov
bound
mov
daa
mov
stos
pop
int3
pop
fstl
pop
mov
aaa
popa
sub
ds
cmp
lret
push
divb
std
int
mov
and
jg
lea
dec
inc
mov
enter
xchg
mov
das
jecxz
pushf
adc
in
xchg
test
mov
adc
insb
testb
xchg
inc
lret
cmpsb
inc
push
push
in
adc
sti
fbld
mov
pusha
aad
outsb
pop
push
cmp
sub
xor
ds
in
fadds
or
push
scas
lods
sbb
mulb
cmpsl
lcall
idiv
add
pop
pop
jmp
hlt
pop
repz
into
adc
push
cli
das
scas
je
popf
movsb
and
daa
lret
fidivrs
arpl
jnp
cwtl
cmp
and
xor
rclb
fiadds
data16
push
rcrl
pop
push
mov
sub
dec
pushf
push
clc
cmp
jae
jg
mov
dec
sbb
push
shlb
fs
faddl
test
jnp
loopne
adc
test
mov
cmp
sti
fs
icebp
aam
movsb
add
mov
ret
push
aaa
sub
mov
and
clc
pushf
fstpt
loope
mov
les
movsl
pop
pop
cmpb
inc
and
add
adc
mov
sub
lods
xor
jl
jbe
lea
add
xchg
orl
int3
cli
pop
dec
popa
dec
add
aam
sbb
lds
xlat
lock
movsl
into
xor
sub
push
adc
push
xchg
inc
push
popf
mov
mov
xchg
pop
jae
push
inc
rorl
aas
jo
lret
adc
mov
mov
shll
scas
sub
imul
sbb
test
fistps
pop
arpl
lock
xchg
and
lcall
add
outsb
in
dec
jmp
mov
xchg
es
push
lret
jp
je
xchg
add
push
jb
push
lret
outsl
mov
pushf
popf
and
je
ret
xchg
cmc
xor
inc
mov
sub
scas
pop
les
adc
repnz
roll
fidivs
pop
jge
cli
test
mov
pop
mov
pushf
jp
jno
mov
mov
mov
inc
test
jno
jg
cmp
sub
repnz
hlt
xchg
fisubrs
subl
mov
mov
cmp
aas
cmp
leave
aaa
sub
popl
scas
into
xor
cli
ds
scas
aad
cmp
mov
xchg
in
das
push
out
xchg
sbb
inc
inc
dec
mov
mov
mov
js
fcmovne
decb
inc
jmp
inc
cmp
adc
into
adc
neg
fwait
stos
pushl
mov
inc
inc
pusha
jecxz
push
sub
incl
mov
push
aad
loope
addr16
and
xchg
cmc
jno
mov
xor
cmpsl
xchg
pop
in
inc
jb
adc
fs
adc
and
push
jae
jge
push
aaa
jo
sbb
adc
in
jbe
and
movsl
and
test
cmpsb
cmpsb
xchg
std
jae
daa
push
pop
pop
shlb
push
cmc
sti
dec
sbb
sti
inc
pop
sbb
jb
pop
outsl
into
jo
bound
jnp
dec
idiv
test
sbb
das
mov
fsubl
add
mov
fdivr
repnz
push
inc
test
mov
jg
xorb
popa
push
out
inc
rclb
mov
lret
push
inc
loope
sbb
in
sbb
dec
test
adc
jo
cmpsb
icebp
and
in
cmpsl
negb
dec
ja
inc
cwtl
push
jle
inc
fidivl
cwtl
pop
sbb
ljmp
mov
das
mov
cmp
fbstp
loope
mov
mov
xlat
lcall
jl
jle
stos
scas
in
or
mov
jne
xor
js
aaa
fwait
or
cmp
ds
ljmp
ror
arpl
out
and
push
cmp
test
lret
sti
in
adcb
inc
fisttpll
or
mov
sarl
faddl
or
sahf
sub
and
pop
push
subb
out
repnz
adc
arpl
mov
cmc
jae
mov
ljmp
gs
mov
cmp
lock
mov
sbb
shll
add
movsl
and
cmp
insl
rorb
shl
sbb
inc
mov
popa
mov
sub
mov
sub
sbb
fstpt
xor
nop
stos
mov
inc
pop
xchg
aad
xor
icebp
mov
subb
mov
sbbl
mov
pushf
jl
mov
fwait
jno
mov
movsb
nop
lea
repz
cltd
mov
imul
sub
testb
pusha
xchg
jmp
jnp
movsb
push
scas
jecxz
bound
and
cld
jl
sub
xor
sub
sub
cmp
sbb
pop
xor
pop
fisubrl
rcrb
mov
stos
sarl
aad
push
jmp
add
cmp
xor
adc
flds
mov
ret
xor
data16
pushf
mov
loop
mov
out
loopne
mov
ret
iret
popa
mov
pop
adc
xchg
pop
push
and
fisubl
xchg
xchg
hlt
sbbl
cli
hlt
pop
imul
aam
xchg
add
rclb
mov
outsb
insl
mov
cmp
pop
adc
pop
ficompl
cmp
pop
in
movsl
add
mov
push
sbb
inc
sub
movsb
jle
cmp
lcall
in
movsl
in
jl,pn
bnd
cli
mov
popa
sub
lret
cmp
pop
adcb
dec
rclb
popf
xor
mov
mov
xchg
es
fnstenv
inc
sbb
fcomps
adc
lret
pop
lock
push
jmp
iret
pop
jo
lock
sub
mov
and
inc
mov
jne
stos
inc
rcll
leave
pusha
es
jp
or
pushf
int3
sub
mov
ret
repz
pop
sahf
fcoms
add
and
push
lcall
cmp
popf
popa
std
xchg
xor
fs
sbb
test
mov
mov
sbb
pop
rcrl
mov
shl
int
dec
push
dec
fbstp
insl
jmp
lahf
pop
data16
mov
or
xchg
in
add
insl
push
mov
shr
hlt
mov
adc
sub
mov
in
into
gs
push
dec
fbstp
insl
in
sbbl
or
fsubrl
out
pusha
std
xchg
test
cmpb
mov
or
add
es
or
pop
jg
cmpsb
cmp
sarl
pop
mov
sbbb
shl
jns
inc
mov
xchg
push
cltd
ds
js
mov
in
pop
repz
jp,pt
jo
pop
icebp
push
xchg
cwtl
das
ret
jno
bt
mov
push
lds
sub
push
xchg
jge
mov
imul
add
scas
dec
dec
idivl
inc
in
popf
movsb
cmc
jle
mov
sub
sbb
or
out
addr16
pop
adc
lock
inc
add
aam
jno
int3
xchg
jb
fs
cmpsl
gs
fdivs
sbbl
pop
mov
cmp
jle
test
mov
pop
fcomip
fnsave
in
xor
xchg
ja
add
leave
cmpsb
and
sbb
aas
sub
pop
hlt
jl
jae
rcrl
sub
cltd
xor
ss
inc
push
mov
fs
fsubr
orb
repz
adc
mov
das
mov
inc
faddl
daa
push
jmp
inc
js
je
outsl
push
stos
xchg
xchg
sub
int3
mov
stos
fcompl
testl
movsb
jnp
xchg
lods
lds
shl
sub
and
lods
inc
mov
out
stos
pop
icebp
sbb
jnp
cmp
rcrl
sbb
xor
xor
shrl
fstps
add
jae
jns
ja
cmpsl
lcall
sub
mov
mov
test
xor
cmp
or
mov
out
pop
sbb
mov
leave
mov
ja
aam
push
or
cwtl
mov
loop
push
cmp
xchg
sub
lods
adc
sbb
mov
mov
repnz
xor
or
adc
cmpsb
push
out
pop
fisttps
or
jno
stos
xchg
xor
loope
adc
in
jmp
rol
push
ljmp
icebp
mov
add
jge
lret
xchg
lcall
sub
fwait
mov
inc
xlat
sub
dec
ret
pop
inc
lds
add
jae
pushf
cltd
xor
jne
inc
fldenv
add
lahf
movsl
cmp
sbb
loope
ljmp
imul
xor
xchg
and
int3
inc
jle
push
mov
std
call
outsb
jl
enter
addb
pop
sahf
es
pusha
xchg
jnp
in
movsb
mov
nop
sub
cmp
and
fnstsw
jge
aam
pop
lds
das
sub
or
jne
insb
cltd
xor
cmc
push
adcb
push
push
lods
xchg
fldl
and
mov
mov
lods
inc
shrl
into
insl
shlb
fcompl
outsb
roll
pop
ja
xor
in
cmp
sbb
cmp
js
or
xchg
lcall
clc
xor
stos
inc
xor
mov
inc
cmc
popa
clc
push
add
int
push
lods
push
mov
cli
test
ret
mov
cmp
scas
call
or
inc
fnstenv
xchg
pop
lock
dec
out
lock
adc
mov
bound
or
xchg
sub
and
jae
repz
mov
xchg
lods
gs
jmp
mov
mov
dec
mov
add
ljmp
jmp
repnz
jl
adc
jns
ja
sarb
dec
jecxz
sub
jno
aas
lret
bound
lods
inc
mov
fbstp
inc
repnz
fninit
pusha
insl
add
add
add
hlt
mov
xchg
ss
imul
lcall
aaa
sub
dec
sbb
sub
leave
push
jbe
jbe
jae
mov
and
jecxz
fwait
sbb
enter
aad
stos
pushf
xor
ds
out
scas
or
cmp
arpl
jle
cmp
pop
jno
aad
out
fidivs
or
pusha
jp
in
adcl
push
push
mov
ret
nop
sbb
xorb
and
and
flds
stos
inc
cli
sbb
push
or
xlat
outsb
aad
cwtl
das
adc
and
inc
xor
jp
dec
in
sbb
jge
xlat
add
enter
sub
into
mov
xor
mov
out
loop
repz
mov
mov
adc
leave
mov
mov
xchg
iret
int
sbb
lock
roll
xor
jae
scas
inc
xchg
xchg
adc
add
es
cwtl
jne
mov
pusha
mul
dec
sbbl
adc
mov
adc
xorb
arpl
and
push
lods
cmc
hlt
jl
cs
xchg
sub
stos
mov
and
cs
or
ss
sbb
aad
cmpsb
add
jno
call
or
mov
lret
fwait
dec
jecxz
imul
sahf
sub
outsl
push
pop
shrb
mov
inc
fsubrl
rorl
add
push
jmp
movsb
sbbl
jmp
inc
fisubrs
dec
pop
hlt
xchg
pop
repnz
xor
test
cli
push
in
pop
les
mov
leave
jno
clc
xchg
push
mov
add
in
mov
test
iret
jae
std
mov
push
call
cmpsb
jg
mov
inc
insl
add
fidivrl
pop
pop
in
ss
incb
les
pushf
xor
xchg
dec
jecxz
jne
xor
jns
xchg
adc
nop
dec
mov
ja
ljmp
cmp
or
dec
xchg
aam
push
jne
jne
mov
ret
inc
adc
filds
cmpsl
ret
mov
inc
fsubrl
int3
jae
mov
fistps
mov
cs
pop
icebp
lret
inc
push
sub
aaa
into
jbe
ss
cwtl
xor
or
pop
out
fwait
test
into
mov
movsb
cmp
inc
mov
cltd
bound
xchg
dec
jne
xor
jb
sbb
mov
loop
mov
loope
and
in
test
out
test
push
repz
cmp
stos
push
xor
jp
xor
ret
outsl
cli
xchg
decl
lret
bound
icebp
mov
mov
andl
daa
mov
cmp
std
xchg
dec
lods
or
pop
jg
call
repnz
pop
mov
adc
test
jno
xor
push
sbb
outsl
inc
aaa
mov
lds
lret
xchg
mov
fiadds
dec
mov
dec
fdivl
add
stos
jne
fbstp
xchg
mov
or
leave
pusha
sbb
xor
fwait
mov
ds
nop
rorl
inc
push
out
bound
xchg
push
inc
or
pushw
pop
repz
test
stc
xchg
add
sub
in
lods
pop
lock
xchg
test
mov
lock
shrl
adc
push
in
adc
daa
clc
in
sub
jecxz
adc
mov
std
xchg
ficompl
stos
xor
cmpsl
mov
les
adc
imul
adc
std
xchg
fnstsw
loopne
lock
adcl
movsb
mov
push
lcall
pop
arpl
mov
mov
fstpl
into
fcoms
or
push
fwait
pushf
xor
js
and
xor
add
faddl
adc
sahf
bound
popa
clc
mov
pop
jmp
mov
das
jbe
sti
adc
dec
sbb
sbb
dec
imul
sbb
dec
fistpl
push
scas
xchg
mov
les
or
sbb
dec
sahf
add
and
ja
bnd
test
lcall
inc
push
loope
inc
fmull
stc
sbb
cltd
fidivs
icebp
pop
xchg
mov
test
or
mov
in
imul
push
inc
pop
cmc
ret
iret
int
jp
xlat
outsb
outsb
xchg
pop
sub
and
icebp
xor
stos
pop
repnz
popa
icebp
mov
adc
jbe
cmp
sbb
xchg
lret
call
jae
xchg
inc
das
or
sub
ret
sarl
pushf
pop
mov
lock
xlat
pusha
ret
or
add
mov
shlb
subb
leave
push
cld
pusha
testb
fstps
in
sub
sbb
out
xor
aas
adc
iret
mov
xchg
mov
pop
lret
cmpsb
out
jnp
lret
cmpsb
xor
mov
inc
dec
or
shll
mov
jp
jg
add
jno
mov
int
jo
outsl
add
push
mov
mov
push
repz
movsl
add
negl
ss
sbb
mov
mov
push
in
aaa
into
fwait
add
push
in
in
pop
cli
xchg
mov
je
inc
stos
sbb
faddl
jle
popa
not
push
outsb
jae
lea
insl
lahf
fldcw
or
fdivl
sub
addb
outsb
pushf
sahf
xchg
and
adc
fiaddl
pop
cmc
cmpsb
jbe
xor
jl
pop
ficoml
pop
leave
out
es
inc
jp
sub
add
or
lcall
pop
in
xchg
js
fstps
xchg
xchg
sub
push
pop
mov
mov
jg
jb
pop
cmp
cmp
stc
nop
add
pop
icebp
mov
js
fidivs
int3
test
xchg
sub
sti
push
mov
test
or
shrb
outsl
nop
daa
mov
ret
scas
inc
cmc
dec
push
movsl
jl
int
dec
popf
sub
into
imul
loope
mov
push
mov
lds
push
rcrb
sub
loope
pop
cmp
repnz
clc
cs
addb
cmp
push
pop
adc
sub
clc
sahf
and
sbb
call
pushf
jle
or
jnp
cmp
mov
or
mov
jge
lcall
in
stos
ret
mov
xchg
int3
lret
icebp
movsl
xchg
loope
xchg
test
ljmp
pushf
cli
cwtl
jns
pop
stos
mov
fbstp
or
aaa
ds
xchg
push
pop
mov
mov
mov
jae
les
shl
add
pop
lock
pop
sbb
lcall
sub
cld
push
in
sub
dec
jae
andb
xchg
mov
lock
hlt
scas
inc
or
cmpsb
cmp
fs
sub
or
dec
loop
in
or
xor
daa
mov
test
cmpsb
cmp
dec
dec
push
inc
jmp
aaa
inc
fldcw
lret
mov
mov
fdivrl
push
es
loope
sub
dec
loop
jg
sub
mov
stc
rclb
mov
pop
insl
pop
mov
jle
js
mov
in
add
sbb
inc
and
mov
jne
mulb
pop
icebp
clc
or
scas
cmp
cltd
xor
adc
pop
or
and
jle
mov
lret
andl
xor
sahf
lods
in
push
mov
mov
lods
aaa
mov
cmp
das
push
aaa
mov
adc
sbb
insb
mov
fs
test
imul
filds
scas
pop
adc
lods
mov
push
xor
into
sbb
dec
sbbl
dec
jp
push
mov
clc
inc
scas
arpl
aas
repz
insb
cmpb
pop
ss
les
or
lds
fnstcw
mov
ret
fiaddl
cwtl
imul
jae
cmp
and
movsb
and
not
pop
xor
clc
jo
hlt
cli
push
push
jge,pn
mov
daa
cld
add
sub
jne
fistps
mov
fsubs
leave
adc
fwait
jns
mov
sbb
lods
pop
aam
sbb
xchg
jg
and
inc
mov
jae
data16
push
cli
xchg
cmp
sbb
ds
sub
out
das
mov
loope
dec
je
jl
imul
lahf
mov
sub
inc
push
mov
into
popa
jno
pop
and
in
js
or
cld
sahf
add
out
out
and
lods
ds
fisubrl
and
and
sbbb
ja
popa
test
mov
xchg
sti
mov
movsb
dec
fsubp
jnp
outsl
cmp
mov
rcrl
test
lods
mov
jl
test
pop
cwtl
push
adc
inc
dec
push
in
cmp
pop
scas
mov
cmp
das
mov
push
and
lea
xchg
shrl
das
scas
mov
addb
dec
shlb
cmp
into
sahf
push
rorl
int3
testl
fisubs
test
mov
movsb
sub
in
add
popf
leave
pusha
mov
mov
rolb
cmpsb
xor
insl
add
imul
pop
ret
adc
adc
push
movsl
in
arpl
inc
xchg
montmul
cmpsb
add
adc
std
and
out
push
dec
loopne
or
jp
sbb
pop
fcmovnbe
dec
loopne
xchg
mov
test
fstl
and
dec
loop
sbb
inc
dec
jg
popf
pop
pop
nop
push
pushf
nop
jno
and
lods
inc
inc
js
testb
or
loopne
or
push
or
pusha
jne
sahf
cmpsb
orl
repz
icebp
mov
add
adc
fs
sbb
jl
sti
sub
out
iret
push
into
push
pop
jmp
push
add
aam
jge
fpatan
mov
int3
cltd
xor
add
fdivl
mov
leave
pusha
lods
in
adc
iret
xchg
xor
xchg
mov
sub
xchg
mov
rdmsr
cmpsl
pusha
pop
sbb
push
xor
std
jno
das
mov
fs
mov
adc
call
pop
call
notl
fdivrs
leave
push
int3
xchg
sub
daa
push
out
pop
lea
xchg
dec
in
xchg
mov
ret
aaa
dec
in
in
jp
stos
montmul
cmpsb
add
xchg
sub
mov
xchg
sarb
mov
aad
inc
sub
addr16
outsl
or
and
cmpsb
inc
mov
jns
leave
pusha
mov
cmpsb
jp
sbb
sbbl
arpl
mov
adc
mov
pop
out
test
xor
cmpsb
in
daa
loop
adcb
test
cmp
movsl
push
push
ljmp
xor
out
test
pop
lods
inc
js
cmc
mov
pop
push
out
cmp
shrl
cmc
mov
ficompl
pushf
jle
and
sbb
push
or
ja
push
dec
mov
xchg
sub
ds
out
pusha
int
xor
xchg
cs
dec
dec
in
mov
sbb
mov
sarb
ror
xor
stos
scas
inc
int3
or
pextrw
out
xor
inc
adc
enter
jo
push
jns
mov
aas
test
test
xor
xorb
fwait
out
insb
add
mov
cmp
into
push
aas
push
call
jge
outsl
push
add
dec
ffreep
mov
out
and
insl
mov
inc
daa
adc
sbb
cmp
in
cmp
sbb
push
sub
js
mov
xor
mov
mov
popa
mov
fwait
ret
pop
ret
fstpl
mov
pushf
fnsave
pop
scas
shlb
loope
jmp
dec
sbb
cltd
movsb
test
lds
fcomp
imul
lret
mov
std
es
iret
jbe
jp
ret
and
jne
xor
fs
pop
sahf
xchg
out
dec
push
jmp
lss
push
lds
stc
nop
sti
insb
push
mov
sbb
out
je
or
mov
pop
lock
outsb
sti
xchg
popa
push
insl
add
iret
arpl
mov
xor
mov
ret
hlt
pop
push
out
adc
ja
mov
xor
mov
cwtl
les
adc
orl
pop
inc
lret
xlat
outsb
mov
mov
int
std
shrl
or
lret
inc
sbb
outsb
jp
jmp
xchg
sub
or
out
mov
stc
call
mov
cmp
pop
add
insb
jbe
sti
cmpsl
push
pop
js
jle
dec
in
adc
adc
inc
dec
inc
xor
push
pop
mov
adc
ror
shll
icebp
cmpsb
stc
scas
cmp
gs
add
lds
inc
sub
jo
sub
mov
jno
mov
test
dec
mov
stos
jmp
pop
cmp
mov
mov
lods
test
xchg
ret
pop
ret
mov
xor
insl
insb
dec
aam
xor
inc
cmc
aad
lcall
add
pop
push
add
in
and
adcl
xchg
mov
dec
xor
in
xchg
push
loope
add
cmc
clc
stos
or
xchg
push
and
insb
nop
loopne
adc
sbb
stos
movsb
cmp
or
inc
sub
sub
iret
cli
jl
ficoml
insl
fwait
cmp
clc
jle
gs
adcl
sub
xor
daa
popa
sbb
sbb
inc
cs
xchg
add
lods
cmp
stos
insb
and
inc
dec
xchg
rcll
pop
mov
sarl
xor
loopne
enter
fisubs
add
cmp
xor
push
js
mov
push
out
mov
shrb
sbb
push
call
push
in
jbe
pop
fs
adcb
jl
lcall
or
xchg
fdivl
jae
frstor
push
in
or
push
mov
sbb
fnstcw
inc
jne
xorb
xor
push
sub
xchg
lods
pushf
push
push
int3
and
mov
mov
rorl
shl
out
jo
fdivrs
adc
dec
arpl
jge
pop
push
xchg
aaa
in
jae
sub
push
xor
mov
fcmovb
ljmp
xlat
outsb
xchg
fcoml
pmaxsw
mov
test
pop
aaa
into
sub
xor
sbb
addl
push
outsb
push
loop
pop
insb
mov
push
cli
jmp
push
sub
ja
xlat
or
push
sub
shrb
jnp
imul
mov
push
incb
jle
hlt
cmp
mov
loope
xchg
dec
sbb
add
outsb
in
mov
mov
or
mov
or
or
fcoml
mov
ds
dec
xor
ljmp
adc
and
jg
aam
push
cwtl
adc
inc
mov
xchg
pop
adc
dec
jl
jmp
add
inc
mov
sti
mov
sahf
je
sub
movsb
pop
in
jno
dec
pop
mov
fs
dec
push
inc
outsb
fwait
xlat
dec
sbb
push
call
mov
fsubrl
bound
and
jnp
adc
inc
fiaddl
mov
sub
sub
insl
sbb
and
cmpb
xchg
dec
sbb
pushf
cltd
xchg
push
insl
adc
scas
xchg
xchg
push
dec
sub
fiadds
lds
fmull
xor
xchg
push
and
outsl
push
mov
ret
imul
sbb
mov
insl
add
sbbl
dec
jnp
pop
jns
icebp
push
jno
push
pop
cmc
xchg
mov
and
fiaddl
ja
jb
cli
dec
sbb
imul
adcb
bound
or
push
out
sti
sub
leave
jl
cmp
loop
cltd
inc
sbb
inc
fmuls
dec
loopne
pop
icebp
ja
test
out
scas
dec
insb
add
das
enter
leave
dec
or
lret
push
xchg
mov
mov
int
adcl
jge
orl
or
and
lea
movsl
dec
dec
out
andl
jae
insl
sbb
dec
call
call
sub
inc
lea
jb
into
push
mov
mov
sub
inc
mov
xor
jl
fwait
dec
mov
mul
cmp
aad
pop
jns
rcrl
add
jns
fldpi
add
movsl
xor
out
aaa
ljmp
cmp
mov
pop
out
adc
repz
push
pop
cmp
pop
pop
lods
cmp
xor
push
cmp
test
test
mov
insb
shrb
subl
push
sub
mov
push
or
xlat
adc
jns
rolb
adc
aas
out
dec
lods
hlt
xchg
and
sarb
push
nop
sub
mov
rep
and
jo
xchg
mov
pop
push
sbb
cmc
or
sahf
sbb
aas
dec
xor
fistpll
lea
dec
push
in
shrl
push
add
xchg
aad
sbb
iret
dec
push
mov
mov
ss
ret
rcl
lret
fidivs
movsl
push
call
cmp
fistpll
gs
cli
jmp
xchg
adc
test
sub
insb
jge
cmp
pop
cs
int
aaa
mov
pop
or
stos
insl
mov
in
and
sub
int
addr16
movsl
adc
sar
test
dec
ficompl
pop
inc
sub
aaa
outsb
jno
cmp
mov
dec
ffreep
jp
mov
mov
mov
fildl
mov
cmp
call
fwait
cmc
inc
adc
lea
xor
dec
ret
push
sbbl
inc
sub
cmp
xchg
adc
inc
mov
js
fwait
xor
inc
pop
pop
in
xor
je
and
sahf
sbb
pop
repz
pusha
int3
call
call
aaa
fdivl
popa
jnp
movsb
or
push
enter
insb
dec
es
fwait
insl
push
sbb
add
fcomi
jge
pop
cmc
fistps
imul
cmc
mov
sub
andnps
inc
pop
outsl
sbb
into
mov
xor
gs
into
push
pop
push
in
pop
mov
xor
xor
adc
mov
call
inc
cs
dec
pop
mov
imul
pop
add
test
add
mov
jae
gs
mov
std
fisubrs
pop
push
test
jbe
sbb
pusha
sbbb
cmp
add
or
ja,pn
cmp
push
out
hlt
pop
jno
mov
mov
cmp
jbe
xor
xchg
mov
les
adc
outsb
mov
shr
test
popa
clc
aas
xchg
jnp
out
popf
mov
push
mov
jl
adc
cmp
inc
aam
ret
sub
xor
sbb
jg
xchg
cli
push
cmp
jp
lret
pop
cmp
jmp
lds
push
popa
sub
lret
inc
inc
xchg
mov
inc
push
pop
push
int3
mov
or
subb
fwait
mov
lret
imul
inc
fidivl
outsl
xchg
fiadds
add
call
jo
add
push
push
lret
ja
popa
sbb
push
sub
jle
mov
int
jo
add
ljmp
imul
test
jle
xor
xor
xor
repz
inc
subb
sbb
mov
hlt
test
push
sbb
xor
or
jmp
pop
pop
mov
jns
cmp
in
xor
enter
sub
mov
test
mov
sbb
mov
out
js
daa
mov
in
xor
cmp
inc
fisttpl
inc
jmp
clc
xacquire
and
sbb
adc
gs
push
pop
pop
andb
cmp
pop
ljmp
add
pushf
pop
pop
cli
test
sbb
lock
pop
or
or
mov
cmp
scas
pop
fsubl
cmp
lds
std
imul
sbbl
dec
jg
mov
rcr
push
out
pusha
mov
lods
mov
sti
scas
adcl
popf
jb
sbb
addb
mov
push
movsl
popa
fidivrl
shlb
and
mov
xlat
pop
jle
cs
iret
inc
adc
ret
ret
jl
fcomps
push
push
shrl
push
xchg
inc
jo
push
mov
adc
sub
mov
hlt
je
push
pop
lock
fists
inc
dec
rcrb
push
cmp
jno
add
adc
mov
mov
mov
call
pop
das
inc
ficoml
je
neg
add
xor
mov
addr16
out
sahf
cmc
js
push
inc
and
mov
pop
push
stc
mov
sub
fistps
stos
xchg
jecxz
sbb
insl
cld
dec
outsl
leave
cmpsb
cmp
mov
push
mov
popf
outsb
cmpsb
push
or
ficoml
hlt
fnstenv
push
idivb
fidivl
dec
cmp
xchg
sbb
in
insl
pop
js
add
lods
pop
xchg
push
lods
adc
data16
dec
sbb
incb
push
mov
enter
sub
out
add
jb
or
cld
jnp
les
and
loope
ja
jl
mov
or
hlt
ret
ds
out
xchg
mov
ljmp
xchg
mov
shlb
adc
xchg
jae
sbb
inc
cmp
cmp
mov
es
fs
or
je
mov
lret
aam
psubb
xor
loope
push
rorb
scas
or
jo
inc
xchg
int
or
stos
ja
mov
es
inc
enter
or
int
jge
sbb
pop
lret
cld
jnp
pop
adc
stos
stos
xor
sbb
mov
lahf
ret
into
jmp
rclb
jno
enter
mov
cmp
mov
es
cltd
popf
jge
iret
mov
enter
lcall
aam
rorl
repnz
stc
mov
mov
push
ds
adc
loop
insb
mull
sub
dec
mov
enter
sub
sub
mov
sub
jecxz
inc
xlat
inc
lret
mov
lret
add
lret
pop
divb
subb
fsubrs
popa
xchg
fwait
insb
and
nop
aaa
push
mov
mov
imul
aad
nop
test
mov
scas
inc
sbb
add
mov
mov
pop
es
fldcw
push
cmpsb
ja
imul
pusha
mov
jnp
dec
mov
inc
aam
add
mov
and
imul
xchg
jae
in
mov
fisttps
mov
jne
aas
mov
inc
or
add
mov
mov
mov
clc
popa
fildll
insl
aam
and
int
xchg
and
arpl
adc
mov
dec
inc
pop
out
xor
xchg
sub
sub
cmp
in
adc
mov
dec
pop
inc
jae
sbb
jno
lock
jle
jle
add
or
lods
lds
sahf
lret
push
mov
add
jg
movsb
cmp
mov
inc
inc
icebp
lret
xchg
sti
push
and
imul
mov
cmp
sahf
push
cmc
dec
push
push
lcall
jb
jecxz
imul
inc
sub
call
scas
aad
aam
mov
add
out
or
inc
jo
jo
push
sbb
jo
dec
pop
aas
insb
mov
mov
cmpsb
lret
push
jmp
outsl
popa
lods
push
imul
mov
cmpsb
ljmp
int
stc
roll
xor
movsl
arpl
sti
cmpsb
outsl
fiadds
inc
bound
inc
cwtl
and
jbe
jecxz
cld
dec
arpl
push
out
scas
add
push
clc
les
xor
movsb
aas
mov
xchg
sbb
jl
lea
jb
push
xchg
in
cmc
scas
ret
dec
jne
scas
repnz
jmp
and
xchg
or
mov
xchg
mov
cmp
sbb
or
popa
out
mov
and
xor
mov
push
js
lods
sbb
pop
ja
call
push
mov
out
xor
in
out
ljmp
test
ret
pop
jge
mov
mov
fadd
adcb
add
incb
sbb
out
out
mov
mov
inc
aam
lcall
test
jo
ret
ja
mov
xor
inc
mov
and
pushf
dec
in
into
sbb
loop
sarl
repnz
imul
dec
add
xor
jl
fs
leave
pusha
repnz
xor
sub
pop
test
test
and
jmp
push
jecxz
loope
mov
mov
mov
pop
adcb
xlat
xorl
jo
jmp
jl
inc
mov
inc
dec
cmc
ds
cwtl
daa
out
es
mov
out
sbb
push
outsb
clc
jns
subb
push
inc
mov
adcb
sbb
nop
rol
sbb
fsubs
imul
cmp
jg
sti
xchg
push
mov
das
rol
loope
push
adc
cmp
pop
outsb
dec
sahf
std
aam
sub
adcl
outsb
push
je
add
pop
xchg
mov
cmp
gs
bound
jecxz
fucom
scas
push
push
lcall
dec
test
mov
int
test
xchg
das
or
mov
data16
and
sub
int
mov
inc
xor
ljmp
sub
pop
jl
add
cs
mov
xor
cs
and
dec
cmp
lock
and
rol
cmc
pop
and
mov
imul
imul
test
inc
jecxz
push
nop
test
ret
sti
mov
cli
rcrb
mov
jl
int
mov
and
test
or
or
ljmp
push
sub
pop
mov
cmp
imul
adc
sub
xor
int
daa
xchg
gs
and
dec
enter
sub
subl
jne
pop
daa
jmp
rcrb
jge
dec
dec
in
rcrl
mov
adc
sbb
cld
sub
enter
push
jle
aaa
sbb
ja
mov
pop
sbb
stos
inc
out
sahf
jmp
mov
lods
shrl
inc
push
jmp
ficompl
sbbl
in
adc
sub
sbb
cwtl
sub
movsl
or
call
das
mov
sahf
rorb
pop
cwtl
mov
jmp
mov
jo
popa
cmp
dec
in
mov
jbe
cli
call
in
xor
out
aaa
mov
loopne
arpl
sarb
dec
movsl
lahf
jg
test
cmp
repz
and
inc
xchg
sub
mov
out
jle
arpl
sub
mov
push
push
ljmp
xor
es
push
jo
pop
sbbl
in
pop
sahf
jne
out
repnz
add
mov
jnp
call
adc
push
out
pop
xor
es
xor
sub
fisttpl
inc
lods
fbstp
cltd
in
orl
xor
pop
fnsave
shlb
insb
xchg
pusha
mov
xor
push
pop
fs
dec
push
dec
loope
mov
mov
xchg
cmp
and
inc
cmp
pusha
mov
sub
jmp
push
jo
sub
dec
push
popf
cmpb
scas
pop
jb
dec
movsb
shlb
outsl
nop
daa
cmp
mov
mov
lret
bound
inc
lock
sub
mov
mov
sarl
add
mov
ds
cmpsl
adc
aad
mov
fsubrs
lods
movsl
cmp
movsl
cmpsb
cmp
jns
movsl
cmp
lcall
loope
pop
cwtl
add
inc
mov
fmul
rcrb
adc
push
fs
out
or
ds
jmp
mov
push
fidivl
lock
mov
pop
mov
fdivrp
xchg
icebp
movsb
lds
insb
add
testl
leave
jb
imul
loopne
fiadds
pushf
js
xchg
xor
sbb
test
inc
fcomp
repnz
xor
test
insl
sbb
fnstenv
popa
std
xchg
push
mov
add
xor
pop
push
cmpxchg
je
fwait
cmp
pop
cmp
stos
mov
adc
int3
rclb
mov
add
cs
mov
jae
xchg
movsl
cmp
fcmove
popa
lret
inc
divb
andb
adc
mov
add
pop
push
bound
dec
loope
inc
cmp
fwait
lea
psadbw
mov
xchg
subl
in
loop
pop
sbbl
mov
loope
cmp
out
aad
mov
push
popf
mov
push
shlb
repnz
xchg
and
icebp
mov
and
or
out
push
in
xlat
xchg
adc
xchg
ss
inc
cmpsb
loopne
das
rclb
mov
test
mov
in
inc
fsts
xor
pusha
mov
fisubrs
pop
dec
out
adc
inc
mov
sti
cmp
cmp
dec
jecxz
cli
mov
ljmp
xor
xchg
repnz
movsb
in
inc
pop
movsl
dec
cmp
pop
sahf
movsb
push
out
sbb
movsb
cmp
jns
maxps
sbb
in
movsl
cs
fisubrl
fnstsw
scas
ja
shll
adc
sbb
setp
arpl
jmp
test
cld
adc
js
cmp
setp
or
or
pop
hlt
jl
xor
jmp
test
pop
mov
inc
lcall
push
in
ljmp
stc
popf
fnsave
sbbb
rclb
mov
addl
fwait
xor
sbb
aad
lods
cmpsl
mov
add
sub
mov
add
movsl
cmp
pop
pop
inc
jecxz
mov
fwait
jo
and
and
in
dec
mov
clc
cmpsl
pusha
leave
add
shlb
ljmp
cmp
dec
leave
jg
fidivs
jecxz
fidivl
repz
lret
test
inc
int3
mov
stc
xor
mov
stc
and
int
rcll
int
jecxz
mov
je
mov
sahf
in
cwtl
das
sahf
dec
cmc
mov
jb
fisubrs
and
fbstp
xchg
cmp
lea
mov
xchg
lahf
jne
pop
and
into
jbe
jle
aaa
mov
jnp
sahf
mov
xchg
sti
dec
lods
inc
aas
push
rcrl
das
jne
iret
leave
jbe
xor
mov
mov
in
or
cmp
in
out
xchg
add
es
orb
or
xchg
adcb
mov
cwtl
out
dec
push
nop
mov
jmp
or
xchg
cs
mov
hlt
sahf
pop
cmc
sti
adc
cmp
popl
test
stos
testb
push
sub
pop
lcall
popf
cli
or
data16
pop
fwait
xchg
adc
sub
jmp
sbb
gs
sub
out
dec
mov
addr16
fsubr
test
mov
or
lcall
movsb
in
rcrl
mov
sbb
dec
mov
cli
pop
out
and
je
inc
mov
xor
rorb
or
stos
cltd
inc
sbb
xchg
fwait
in
pop
mov
icebp
ss
movsb
push
lods
aad
aaa
into
pop
divb
add
popa
mov
xchg
sbb
sbb
jle
in
mov
out
pop
out
fidivrl
cs
sub
pop
movsb
or
ja
mov
mov
mov
push
lahf
repnz
or
jg
fisttpl
dec
rcrl
hlt
in
fwait
xor
pop
mov
mov
xchg
pushf
pusha
imul
movsl
jne
sbb
dec
pop
and
enter
jle
cwtl
xor
leave
inc
add
ret
or
mov
in
test
cmp
or
lds
fbstp
adc
sub
js
repnz
cmp
shrb
leave
push
pop
xor
bound
repnz
ja
fildll
rdseed
xchg
imull
mov
pop
push
pop
mov
jg
xor
push
pop
add
pop
hlt
in
and
sbb
or
fstl
cmp
jecxz
aas
jnp
jno
sbb
es
out
and
aad
jg
aam
pop
cmp
push
dec
ljmp
mov
repz
in
sub
mov
lock
mov
out
pop
aad
test
xor
loope
ret
mov
std
or
lock
dec
jecxz
mov
fstpl
stc
and
out
out
and
imul
xor
mov
pop
jmp
scas
mov
jbe
mov
xchg
dec
mov
xor
and
mov
jmp
rorb
or
jecxz
dec
jecxz
add
jmp
xchg
cmp
adc
or
test
dec
jecxz
cmpsl
cmp
adc
ss
addr16
or
add
push
mov
xor
adc
orb
and
push
xor
lea
mov
addb
mov
mov
shll
insb
add
add
in
and
inc
fstp
add
inc
xlat
mov
fdivrl
mov
dec
out
rcr
je
sbbb
sbb
ds
in
not
push
and
mov
pop
neg
jne
sub
pop
repz
push
jle
lret
cli
lahf
xchg
sub
sbb
cltd
lds
push
loopne
lahf
ss
jmp
xchg
xchg
fsubrs
mov
mov
add
dec
push
mov
lods
cwtl
and
pop
pop
div
mov
sub
mov
stos
inc
adc
add
pop
test
test
cmpsb
mov
mov
and
lods
push
loopne
inc
mov
adc
cmp
sbb
dec
xchg
insb
mov
cmpsb
popa
push
lds
sub
pop
repz
mov
clc
lods
inc
inc
sbb
leave
mov
rcll
mov
push
lods
mov
ret
aam
lds
das
into
outsb
add
push
outsl
push
test
dec
movsl
in
cmp
xor
mov
fldt
cltd
out
sub
jge
scas
stos
cmp
hlt
sar
xchg
add
inc
leave
das
shlb
cmp
pop
test
inc
leave
add
cmpsl
push
xor
push
and
mov
fcmovu
jo
or
popf
adc
sbb
xlat
outsb
xor
cld
xchg
stos
push
pop
lret
jb
std
and
and
add
push
lds
shlb
bound
ret
mov
ja
mov
mov
sub
fdivl
xchg
enter
cli
xchg
mov
fildll
and
lds
in
xorl
push
sbb
testb
bound
test
mov
hlt
repz
and
pop
mov
sti
pop
cmp
mov
scas
adc
aas
and
pusha
or
rcl
xchg
sub
and
inc
cmp
jae
cwtl
push
jmp
push
push
mov
je
or
xchg
sub
cli
mov
inc
dec
dec
rclb
into
mov
shr
repz
xchg
and
inc
sbb
cwtl
cwtl
cmp
leave
mov
push
in
fistps
and
xor
xlat
sahf
push
xchg
sub
das
push
sbb
lds
test
movsl
cmp
sbb
int3
xor
sub
fxam
jl
push
or
mov
and
test
mov
arpl
and
out
jge
leave
andl
fistpll
cmp
jb
xchg
dec
cmp
mov
loopne
sti
jg
lcall
sbb
into
pop
push
sbb
lock
rolb
mov
insl
jns
pop
sub
adc
call
fdivs
and
xchg
jmp
xor
out
arpl
cmpsb
lds
fisttpl
adc
adc
iret
outsb
fcmovb
ficomps
hlt
daa
jp
push
ret
pop
out
jp
xchg
loop
mov
adc
push
sub
dec
lahf
jb
fwait
lret
jg
fisubrs
mov
xchg
bound
push
les
shl
mov
shrb
inc
push
mov
and
imul
loop
xchg
dec
sub
cmp
mov
mov
lahf
dec
pop
lock
sub
insl
popf
testb
out
pushf
xor
xor
mov
dec
adc
repnz
cmp
icebp
dec
sbb
movsl
jnp
jg
std
xchg
aaa
sbb
loopne
pop
sbb
aam
xor
xor
rol
fidivrl
ds
jne
out
adc
inc
adc
push
fs
xchg
out
xor
mov
or
jl
loop
or
jmp
icebp
sbb
add
andb
setle
sahf
std
pop
nop
or
mov
das
jmp
or
ret
mov
or
sarl
cmp
add
dec
fbstp
pop
mov
sahf
inc
sbb
stos
adc
push
xchg
jmp
fs
jg
push
arpl
xchg
sbb
mov
pop
mov
adc
push
dec
loop
sbb
sbb
pusha
mov
out
adc
pop
sahf
add
ja
pop
lahf
mov
in
pusha
sbb
movsb
xor
popa
loop
rcrb
add
sbb
mov
inc
popf
fmuls
pop
or
adc
dec
pop
test
repnz
push
scas
out
mov
and
sub
in
jno
cmp
leave
dec
test
mov
push
mov
out
mov
popf
add
loop
add
mov
cltd
ljmp
decl
jno
inc
fsubl
clc
dec
fadd
push
test
mulb
and
mov
and
fisubrs
jno
call
aas
jecxz
xor
mov
cli
and
or
push
in
imul
imul
lock
dec
sbb
cmp
cmpsl
lahf
stos
push
and
xor
dec
sub
inc
testb
jle
out
jo
fbstp
into
xchg
add
cmp
test
xchg
push
pop
repnz
adc
sahf
cli
sbbb
cli
and
jl
add
iret
int3
out
repz
fnstsw
sbb
push
mov
jg
cli
push
mov
test
push
xchg
je
jle
test
pop
dec
xor
inc
bound
sub
mov
jb
adc
nop
rol
test
lret
sti
icebp
or
xorl
dec
shll
sub
mov
pop
sub
jl
fwait
movsb
cltd
out
xchg
test
pop
pop
lahf
mov
sarl
jo
testl
mov
push
in
pushf
in
cmpsl
cltd
cmp
xorl
cs
imul
lea
aaa
push
jno
adc
inc
add
adcl
outsl
movsb
pop
fxch
mov
mov
stc
loop
and
push
addb
pop
lods
inc
je
mov
jae
lret
xchg
enter
ljmp
adc
pop
pop
rolb
out
mov
and
adc
gs
outsl
mov
imul
sbb
jge
loopne
jp
jle
adcl
mov
pop
jmp
dec
mov
add
push
shlb
loope
fdivp
bound
xchg
fucomp
xchg
xchg
andl
fwait
stc
aaa
cmpb
dec
xchg
sub
loope
icebp
adc
out
int
xor
mov
es
into
push
sub
sub
mov
cld
inc
in
xchg
jne
out
push
mov
xchg
gs
and
into
dec
shlb
inc
dec
loop
inc
cmp
and
push
cmp
repz
and
rclb
dec
sub
pop
imul
icebp
pushf
out
loope
dec
pop
into
sahf
jb
or
scas
or
imul
in
and
in
lahf
adc
push
sti
jns
inc
jae
add
sub
dec
mov
ss
inc
fcmovu
sub
bound
clc
shr
pop
pushf
jns
sti
sub
or
and
insb
push
daa
xor
cmp
insb
and
dec
sarl
int3
sub
aaa
in
imul
add
sub
add
jo
les
negb
test
lds
mov
mov
out
leave
fucomi
mov
fimull
sub
pop
adc
jb
int
push
mov
sti
fildl
stc
push
cs
cmpsl
xor
ret
cmpsb
shlb
xor
cli
push
push
aad
popf
xor
or
in
clc
fists
leave
jge
inc
or
lret
pusha
inc
imul
jmp
jle
cmc
mov
push
dec
jbe
xchg
cmpsb
inc
js
repz
cmpsb
lock
xchg
insl
xchg
and
xor
xchg
xchg
dec
adc
cmc
clc
outsb
mov
data16
sbb
stc
popl
mov
imul
clc
push
bound
mov
pop
jmp
sar
or
mov
jnp
dec
add
or
loop
iret
adc
mov
xlat
sub
rcl
in
cmp
mov
mov
sbb
outsl
mov
adc
mov
cmp
cmp
popf
xor
push
jmp
add
jo
jnp
pop
cmp
push
sub
sub
xor
adc
xchg
lcall
sbb
or
into
cmp
gs
fbld
shld
test
imul
fs
push
sahf
das
adc
loopne
jae
adc
mov
push
jmp
loop
xchg
adc
xchg
xchg
jle
pop
and
or
cmp
pop
in
fwait
pop
jle
xor
add
adcl
xchg
mov
jg
add
sub
push
sub
xor
out
popa
cmp
imul
and
andb
test
leave
incb
test
xchg
or
scas
sbb
or
sar
mov
jb
mov
add
shrb
test
lock
jbe
add
clc
movl
pushf
aas
mov
f2xm1
push
pop
push
dec
sahf
adc
and
xor
xchg
jle
push
xchg
jb
dec
jnp
adc
lds
pop
loop
dec
sub
cmp
dec
loop
sbb
movsl
add
test
jno
test
mov
je
leave
xchg
adc
loopne
sbb
into
fdivrl
inc
jg
pusha
jl
mov
movsb
inc
mov
cmp
pop
stc
nop
xchg
inc
adc
pop
pop
pop
enter
mov
dec
xchg
cmp
add
test
jbe
fistpll
pop
fdivrl
dec
fsubrs
or
sub
movsl
push
fisttpll
sbb
sbb
cmp
cmp
cs
xchg
xor
jae
xor
dec
bound
std
aas
dec
adc
dec
imul
push
pop
movsl
scas
in
or
daa
xor
add
push
mov
mov
xor
bound
cmp
jmp
sub
pop
scas
ret
in
xchg
incb
in
lods
jp
test
dec
js
mov
push
mov
sub
sbb
dec
cld
jbe
daa
js
xor
sbbb
loopne
stc
pop
sbb
insl
xor
pop
jg
idivl
leave
lret
mov
pop
and
add
inc
stos
jmp
pop
or
sahf
pop
in
dec
sub
outsl
divl
mov
lock
dec
lret
or
mov
xchg
jecxz
insl
test
dec
stos
sbb
cmp
xor
push
mov
aas
into
cs
mov
enter
mov
push
ljmp
out
adc
mov
popf
xor
ds
or
mov
loopne
stos
push
les
out
enter
fcmovnb
aas
pusha
ret
jmp
repz
in
scas
jae
loopne
jl
xchg
fisttpll
ret
fimull
push
add
adc
leave
das
rcrb
pop
inc
sbb
repnz
pop
insb
sbb
call
mov
fistps
mov
mov
aad
sahf
and
call
aaa
sbb
cld
cwtl
mov
pop
jecxz
add
psubd
add
popf
xor
call
mov
pop
cmp
mov
outsl
fcmovnu
pop
or
or
cs
push
clc
sub
stos
fs
push
xor
addb
and
jle
sub
cmc
je
and
pop
sub
shl
adc
push
cmp
xlat
mov
js
movsl
test
push
nop
cmp
bound
fstpt
rorb
hlt
dec
outsb
sub
xor
add
mov
push
mov
xlat
outsb
fdivl
inc
es
in
sub
shrl
stos
and
scas
icebp
dec
loope
fdivl
dec
mov
cmp
jp
shl
movsl
pop
pop
dec
iret
add
mov
jnp
jb
in
sbb
or
pusha
clc
lea
or
inc
adc
sub
std
and
and
mov
bound
sub
lds
loopne
and
cmp
xor
sbb
in
dec
leave
cmp
loopne
sarl
add
jle
mov
or
inc
mov
mov
sub
sub
dec
scas
sbb
xchg
cmp
out
sub
mov
in
push
mov
push
sub
add
fidivrs
aad
add
daa
inc
in
fucomp
movsb
cltd
sahf
or
outsl
xchg
mov
sbb
inc
lods
sbb
popf
xchg
iret
test
daa
jne
addl
je
lcall
sbb
cli
mov
xchg
sbb
mov
push
popl
fstl
jg
push
cmc
mov
pop
icebp
cld
dec
pop
ss
xor
imul
push
pusha
cmp
repnz
pop
xchg
lock
cmp
pop
xchg
xor
push
sbb
or
lods
sub
roll
pop
push
fsubr
jg
jl
in
inc
sub
sub
fisubrl
test
into
gs
setne
inc
fsubrs
push
call
xchg
pop
xchg
dec
cwtl
push
ss
mov
jae
xor
cmp
inc
push
mov
nop
adc
jb
xor
xorl
xchg
mov
scas
mov
lahf
jbe
cmpsb
cs
clc
lock
in
sub
sub
and
mov
sbb
es
mov
xchg
in
das
add
mov
add
outsl
push
fwait
ret
sub
call
ror
jecxz
inc
xchg
rcll
jp
cmp
sbb
cmp
and
dec
push
mov
cmp
ret
mov
xchg
jmp
andl
in
ja
xor
mov
fdivrs
out
dec
cmpsb
jno
sub
int3
adc
dec
inc
in
dec
iret
call
push
cmpsl
nop
jnp
ds
dec
dec
repnz
inc
mul
andl
mov
aam
es
jnp
xchg
mov
and
jmp
inc
dec
jp
adc
cmpsl
mov
sbb
jnp
cltd
xor
fidivrl
mov
inc
frstor
adc
sub
jbe
scas
shrl
dec
push
jge
mov
add
repz
bound
in
std
sub
inc
cwtl
aad
test
cmovl
xchg
sahf
mov
jp
pop
fwait
hlt
and
sub
mov
pop
mov
mov
loop
pop
cmp
push
dec
loopne
dec
dec
push
cmp
or
sub
fadds
add
lods
xorl
dec
leave
and
pop
xchg
into
or
xchg
or
aad
fcoml
sbb
mov
enter
repz
mov
rcrb
mov
jge
lea
enter
data16
push
mov
push
out
cmp
pop
jg
repz
nop
lahf
jae
shll
out
xor
xchg
lods
xchg
pusha
rorl
subb
imul
jbe
sbb
test
xchg
add
pop
sbb
cwtl
das
adc
lock
cmc
ja
sbb
mov
jl
inc
inc
cwtl
cld
dec
add
dec
or
sarl
push
add
popf
hlt
out
push
mov
test
fs
sub
pop
mov
jb
push
test
mov
add
dec
out
sbb
dec
insl
lret
xorl
stos
and
mov
leave
lcall
push
mov
inc
es
dec
sbb
cmpb
adc
sub
cltd
xor
repz
add
sub
outsl
pop
and
and
testb
fwait
xor
frstor
push
push
cld
pop
pop
sub
in
stos
adcb
testl
out
mov
and
daa
xor
lods
mov
outsl
scas
fisubrs
lret
bound
pop
test
lret
repz
and
out
dec
test
out
fmul
leave
jecxz
sahf
adc
push
outsb
xchg
nop
sti
push
xchg
mov
sbb
mov
dec
addr16
out
and
jp
bound
pop
sbb
mov
in
pushf
fldt
dec
add
jmp
sahf
xchg
sub
shrl
rol
add
nop
popf
dec
dec
dec
push
xor
jg
popf
xor
scas
sar
xchg
dec
in
lods
fwait
sub
dec
and
loop
in
loope
jo
out
aas
testb
lret
movb
leave
jecxz
sti
xchg
addr16
push
push
ljmp
xor
out
scas
dec
lods
lcall
ja
jg
lcall
inc
lods
out
leave
push
jecxz
das
addr16
fnsave
xchg
adc
cmpsb
push
scas
cmc
into
mov
mov
jo
shl
adc
add
mov
adc
sub
mov
outsb
stos
mov
int
mov
nop
outsl
enter
clc
jl
xchg
push
scas
cli
ror
jno
cs
das
push
adc
addl
push
in
mov
cmp
pop
aam
jle
cs
pop
add
or
lods
add
cmp
sub
ret
sub
ja
xor
fbld
push
sub
shlb
sbb
jmp
dec
pop
ds
pop
xor
pop
daa
inc
fidivrl
loope
rcr
sbb
fidivl
jmp
xchg
push
adc
rcrb
xchg
add
test
cltd
outsb
popa
push
sub
pop
mov
sbb
inc
lahf
loopne
int3
xchg
rclb
jmp
inc
ljmp
xor
ss
cmc
movsl
push
incb
push
sub
jge
lcall
neg
jbe
popf
mov
mov
fs
xor
xchg
adc
xor
ficoml
mov
ret
xor
dec
xlat
add
sbb
adc
push
cs
out
cwtl
sahf
add
inc
xchg
loopne
popf
jmp
shll
filds
gs
mov
jbe
fprem1
mov
les
aas
push
inc
outsb
pusha
test
jb
in
and
push
leave
out
andb
push
lods
cs
jle
test
ret
test
mov
sbb
arpl
sti
pop
xchg
add
jecxz
push
rorl
or
pop
inc
insb
loopne
sbb
inc
insl
and
cmp
pop
nop
outsb
cmp
sbb
cltd
dec
test
out
adc
and
inc
dec
mov
fwait
sub
pop
mov
maxps
xchg
leave
sahf
orl
mov
cmpsl
nop
dec
shll
push
add
ret
shlb
or
popf
decb
sbb
push
enter
xor
sbb
stos
ja
fs
pop
xchg
je
les
and
leave
xchg
iret
das
mov
sub
rorl
in
push
jnp
xchg
lahf
xchg
imul
jbe
popf
jne
cwtl
mov
lret
sahf
lock
jae
pop
or
dec
pop
cmpb
loopne
xor
or
adc
fistps
sahf
inc
rcll
jbe
pusha
sbbb
fsubrl
bound
test
sub
mov
cmp
sub
dec
dec
add
daa
jno
pop
adcl
out
pusha
sbbb
push
popf
dec
mov
jl
and
out
int
test
enter
les
icebp
and
push
xchg
mov
xchg
add
ja
cmp
aaa
js
movzbl
adc
adc
mov
inc
in
xor
mov
xor
sti
popf
or
iret
sbb
inc
xchg
gs
cltd
mov
mov
mov
rcrb
jne
xor
lods
icebp
add
ret
adc
mov
pop
sbbb
sahf
sbb
iret
sar
jne
gs
mov
push
sbb
xor
cwtl
add
mov
push
mov
or
pop
or
or
push
repnz
xchg
sub
pop
jns
mov
mov
aaa
xchg
xchg
test
sahf
dec
push
aaa
push
in
call
sahf
ss
mov
push
movsl
loope
jmp
ss
xor
xor
lret
and
xor
pop
aas
lret
cmp
out
cmp
inc
mov
sub
pop
sbb
inc
cmp
arpl
dec
loop
call
into
scas
mov
fdiv
xbegin
add
aas
pop
or
cs
ds
xchg
outsb
sbb
cmp
test
imul
movsl
or
cltd
mov
adc
dec
and
subl
adc
in
pop
cmp
cmp
sub
jbe
push
fbstp
or
sti
sub
sti
shr
daa
stc
pop
cmp
lea
mov
mov
adc
pop
aaa
cmpsb
lock
movsl
lret
ret
xchg
sub
sbb
nop
jg
or
call
inc
fwait
sub
xchg
mov
nop
daa
adc
mov
push
cmp
rorl
std
pop
out
out
mov
cmp
mov
mov
adc
lcall
push
mov
xchg
jb
sti
push
dec
jae
xchg
pop
outsl
fnstsw
inc
add
fisubrl
ja
inc
add
sub
jnp
xor
int3
inc
inc
jmp
or
arpl
xchg
shl
dec
dec
sbb
pusha
outsl
rol
test
dec
out
sub
inc
enter
push
jne
fimuls
xchg
mov
scas
mov
test
aam
in
push
scas
xchg
mov
lds
nop
dec
loope
adc
js
aaa
stos
call
xchg
das
xchg
cmp
sub
dec
fcmovu
xor
cld
shr
and
inc
xlat
dec
inc
inc
sub
mov
mov
lret
cltd
sbb
outsl
sbb
mov
sub
inc
jmp
sbb
sub
sbbb
mul
jge
scas
popf
inc
dec
push
add
mov
push
xchg
jg
mov
mov
roll
cmpsb
cmc
lea
pmaxsw
cmp
fisubrs
js
inc
je
shlb
dec
sub
jp
ret
inc
jae
and
sub
imul
addb
or
addr16
lea
jo
push
dec
or
inc
mov
xchg
sub
popa
jg
add
push
mov
pop
xchg
jb
test
push
dec
dec
add
xchg
cmp
stos
iret
dec
fs
xchg
mov
xchg
sub
and
jae
jmp
idivl
addb
mov
dec
lods
dec
fildl
and
iret
subb
jns
std
xchg
sub
sub
jl
add
pop
mov
mov
lahf
jb
in
rorb
cmpsb
sub
add
scas
inc
mov
adc
lods
test
pop
int
rcrl
fistpll
fistpl
jle
mov
jnp
and
sub
adc
push
movsb
dec
lods
jo
sbb
leave
leave
pop
add
sub
push
xchg
pop
or
in
es
mov
das
add
mov
push
push
inc
in
or
dec
mov
xlat
pop
fsub
pop
dec
pop
je
jns
sarl
mov
jp
imul
pop
shll
or
cmp
ret
testl
imul
xlat
notb
jl
dec
sti
loopne
fs
lcall
shlb
in
and
add
push
pop
sub
imul
shlb
and
jnp
bts
clc
enter
mov
fwait
xor
mov
sub
mov
scas
xor
mov
jmp
subb
fdivl
inc
push
pushf
mov
mov
dec
jmp
call
or
adcl
add
jnp
outsl
shlb
nop
xchg
push
jo
mov
mov
cmc
repz
inc
cmp
xchg
and
or
lock
lret
mov
cmc
add
hlt
pop
movsl
cmp
adc
jbe
es
add
jo
cwtl
cmp
cmp
push
inc
push
pop
mov
dec
icebp
mov
aad
jo
mov
insl
aam
popa
cmp
repz
stos
cwtl
sbb
loop
xor
in
jnp
push
adc
das
jge
cmp
jne
out
inc
stc
cmp
pop
adc
sub
pop
sahf
push
nop
subb
adc
sub
sti
ret
pop
add
arpl
push
repz
aam
mov
mov
push
or
in
int3
rorl
push
pop
cmpsb
into
loope
mov
shll
add
xchg
aaa
std
lods
pop
xlat
das
addr16
ret
jmp
cmc
out
adc
and
in
push
in
xor
dec
orb
ja
pop
xor
or
jns
outsl
adc
sbb
adc
add
sbb
mov
scas
or
adc
call
add
imul
cmpsl
add
xchg
mov
aam
push
neg
xchg
mov
mov
jnp
inc
mov
cs
push
mov
popa
inc
fnstenv
inc
jl
in
inc
mov
cmp
add
lods
xchg
xchg
lret
cmp
push
mov
inc
cmpl
mov
js
mov
push
lret
sbb
in
popa
cmp
mov
mov
mov
bound
stc
mov
cwtl
aaa
push
lret
fdivrl
sahf
mov
cmp
or
xchg
sub
or
adc
adc
jl
and
test
push
jns
aam
xorb
and
jl
or
pop
xchg
xlat
inc
inc
jmp
dec
arpl
cmp
or
sarb
pop
jg
lea
scas
add
shlb
lods
stos
push
leave
pop
clc
push
shl
scas
aaa
dec
repnz
out
out
inc
cmc
inc
mov
sbb
in
rol
sbb
push
das
jmp
or
pop
mov
outsl
daa
or
cmp
adc
imulb
aas
stc
scas
push
xor
sbb
lds
cld
pusha
mov
mov
ret
data16
in
xor
push
int
shll
out
push
test
cmp
daa
dec
cmc
mov
mov
mov
adc
dec
cwtl
sub
addr16
es
push
adc
test
mov
in
aam
pop
or
stc
pop
outsl
sub
in
inc
and
xchg
test
cmp
push
jmp
dec
pop
lods
sti
or
sub
stc
nop
jge
add
adc
dec
test
lahf
not
movsl
xchg
fcompl
or
xor
outsl
gs
fs
test
fwait
push
pop
test
xchg
add
test
bound
add
arpl
aaa
push
jge
cmp
adc
push
xchg
jmp
mov
cmp
adc
mov
add
outsl
test
mov
adc
mov
ljmp
xchg
xor
mov
std
pushf
mov
sbb
mul
mov
xchg
sbb
clc
pop
in
or
dec
lea
mov
stos
push
repz
arpl
xor
sarb
mov
incl
test
cmp
leave
imul
mov
cmp
or
mov
or
stc
mov
idivb
loopne
imul
hlt
imul
xlat
pop
xor
and
into
adc
cmc
inc
arpl
inc
add
xor
addr16
aad
dec
push
xor
mov
out
jns
jmp
sub
cmp
xchg
call
mov
clc
mov
lods
cmpl
out
adc
aaa
outsb
add
fbstp
ss
fs
cld
inc
cltd
adc
jmp
add
mov
fneni(8087
popf
jge
dec
and
and
stos
lds
jg
cmp
inc
pop
inc
bound
mov
out
call
loopne
pushf
pushf
cli
in
jge
mov
dec
out
jge
lds
in
addr16
dec
scas
sti
mov
ja
add
or
lcall
and
test
inc
xchg
stc
cmp
mov
cmpsl
insb
negb
dec
cmp
or
fucomi
es
sbb
mov
mov
jne
adc
test
lret
and
add
adc
sti
or
push
fwait
mov
clc
cmp
mov
mov
push
dec
fcoml
dec
inc
fbstp
in
cwtl
cs
cltd
mov
loop
cmc
lock
fs
test
dec
mov
jno
imul
clc
lock
xor
repz
sub
cmpsb
or
cs
add
jbe
xor
xchg
mov
xor
popa
jecxz
mov
fsubl
or
mov
mov
jns
test
sub
out
cmp
jg
jecxz
shl
or
fildll
orb
push
out
jge
out
outsb
add
push
xor
or
xor
xor
data16
push
sub
adc
pusha
mov
adc
jl
out
and
xchg
sub
dec
adc
dec
push
xchg
sub
ja
xor
xor
in
inc
sarl
repnz
dec
mov
adc
cmpsb
popf
adcb
and
xor
sbb
cmc
sbb
dec
push
outsb
jb
xlat
movl
leave
adcb
subl
es
mov
jg
bnd
loope
push
cli
xchg
xchg
icebp
or
rcrb
or
nop
or
pushf
dec
dec
leave
lds
aad
test
xchg
mov
push
sbb
jl
into
sub
mov
out
sub
and
add
push
pop
sar
xchg
add
jae
jp
in
adc
popf
xchg
insb
rorl
jl
repz
out
push
subl
dec
cmc
xchg
stos
sbbl
mov
pop
imul
jge
cmp
dec
nop
add
xor
sti
aaa
cs
test
ret
cs
or
mov
cpuid
ss
fdivrs
fildll
insl
mov
xlat
call
mov
xchg
lea
add
pop
mov
ds
mov
rcrl
cmp
or
and
addr16
loope
jge
clc
push
push
movsl
and
fcoml
mov
push
mov
xor
jle
dec
aas
push
jp
xchg
les
pop
test
inc
loopne
add
push
cwtl
out
aas
sarl
sbb
aad
xchg
cmp
mov
daa
out
pop
mov
int
out
xchg
push
xchg
ret
sbb
dec
in
xlat
in
aam
push
out
cmpsb
int3
pop
fldenv
fmulp
sarb
push
add
lds
mov
into
sbb
add
sub
mov
mov
sub
cwtl
jl
push
leave
loop
outsb
aad
lods
cmp
movsl
xor
mov
mov
leave
inc
rcrl
jmp
push
movsb
push
xchg
mov
icebp
int3
test
xchg
ficomps
add
ljmp
movsb
enter
mov
xor
gs
aam
imul
testb
pop
xchg
push
aas
mov
ss
mov
outsb
sbb
mov
inc
icebp
pop
push
push
inc
cmp
jae
fnsave
cld
and
push
cli
xchg
xchg
sub
in
int
aam
dec
jns
jle
pop
dec
fmull
xchg
ja
pop
lea
mov
divl
pop
pushf
or
push
or
lea
call
mov
jg
lods
pushf
ret
testb
mov
ret
cmp
adc
push
sbb
jmp
enter
lods
stc
shufps
push
sub
push
test
out
push
xlat
mov
in
and
push
test
xchg
lea
pushf
or
jmp
flds
pop
popl
roll
jp
mov
sbb
lods
les
mov
mov
or
js
xchg
stos
or
mov
movsb
pop
mov
out
mov
ds
out
push
leave
mov
test
mov
xlat
imul
dec
hlt
psubusb
roll
sub
push
inc
mov
xor
mov
sbb
xlat
dec
or
cmpsb
push
movsb
inc
nop
stc
notb
enter
repz
and
jl
mov
popf
js
mov
jo
jge
out
ds
xchg
sbb
sbb
xor
mov
push
ds
mov
pop
shrl
jne
iret
sbb
out
xchg
outsb
inc
in
mov
sub
inc
fimull
call
jge
jmp
jle
movsl
iret
sbb
rdpmc
xchg
andl
dec
ss
bswap
imul
out
push
dec
mov
xor
jnp
xor
out
dec
outsb
int3
inc
jle
fstps
shlb
incb
fstpl
mov
adcb
push
iret
std
cltd
int
jl
jnp
jae
cmp
shrl
popl
pop
mov
int
add
cltd
mov
ret
pusha
int3
jns
xor
cmp
inc
inc
inc
ljmp
in
decb
inc
pop
push
mov
cld
roll
clc
std
in
mov
and
js
dec
mov
jne
jp
cwtl
shr
lret
insl
mov
dec
cmc
mov
movsb
test
sub
clc
jp
aad
add
test
mov
xor
sbb
sub
and
lahf
mov
movsb
xchg
dec
mov
ja
inc
mov
lds
loope
shll
add
in
cli
and
mov
sub
jb
add
mov
sub
cmp
jbe
repnz
call
mov
popf
popa
mov
in
clc
nop
sbb
js
cmp
jg
out
jl
lock
pop
call
shl
sahf
cmc
mov
mov
sub
adc
or
mov
sbb
out
in
imul
imul
js
adc
addr16
nop
popf
push
or
cltd
test
dec
adc
xor
jne
cmp
or
mov
ja
out
popf
rcrb
add
jb
in
pushf
mov
push
jo
sub
in
pop
testl
lds
shlb
es
fimull
adc
shlb
or
xor
out
mov
jecxz
dec
inc
adc
arpl
push
xchg
xor
xchg
outsl
addr16
adc
cmp
out
inc
jmp
inc
push
mov
dec
push
mov
inc
mov
adcb
or
jno
cli
mov
loop
mov
sub
test
and
loop
rorb
idiv
jle
inc
popa
rorl
sarl
scas
loop
or
stos
mov
inc
imul
sbbb
outsl
jl
adc
sub
daa
xchg
andb
sub
sbb
jmp
or
aaa
mov
and
jge
dec
daa
aad
push
pop
dec
testb
pop
push
add
push
mov
fidivl
adc
pop
insb
loope
sbb
sarb
out
dec
loop
popf
shll
mov
push
sub
lea
add
leave
fwait
icebp
adc
ljmp
adc
dec
fiadds
inc
fnsave
cld
cmp
mov
sbb
aam
mov
dec
xlat
lret
jno
ss
jmp
pop
pop
xor
nop
pop
rcll
mov
mov
mov
jae
popf
xor
out
out
andl
xchg
mov
pop
icebp
call
and
out
mov
test
adc
adc
mov
and
adc
aaa
leave
mov
mov
shll
mov
pushf
pop
fmul
loope,pt
out
fidivl
rol
loope
dec
mov
addr16
stos
movsl
dec
sub
lea
mov
pop
jmp
cmp
xor
repnz
in
into
clc
sub
test
lods
out
bound
js
jns
ret
add
add
mov
aad
xchg
dec
mov
rcll
scas
lea
and
cvtpi2ps
add
push
addl
lods
mov
dec
enter
pop
jmp
jbe
xchg
or
repnz
call
leave
int
inc
cmpsb
add
dec
pop
dec
mov
rorl
fbld
sub
scas
jp
jns
inc
mov
mov
inc
jp
xor
add
xor
addr16
xchg
gs
lret
ret
mov
cmp
pop
cwtl
sbb
adc
mov
mov
dec
jne
fldt
mov
fdivs
test
je
xor
imul
outsb
ss
push
xchg
cmpsb
fucomip
pushf
push
jp
xchg
jb
faddp
insl
lcall
xor
sbb
mov
sub
lods
aaa
mov
ljmp
sub
bound
bound
dec
mov
push
pop
repz
add
pop
and
lods
sbb
cmpsb
mov
or
mov
xchg
movsl
js
popf
movsb
cmpsl
adc
pop
fimuls
jecxz
scas
lret
and
ljmp
sub
lcall
pushf
pop
outsb
jle
std
xor
cmpsb
popf
ret
jp
mov
push
addr16
jge
xor
mov
mov
cli
js
shlb
push
jns
js
mov
jae
into
sbb
xchg
xor
sub
mov
jmp
mov
add
fisttps
sbb
lds
jb
or
cmpsb
push
mov
stos
outsl
adcb
aas
int
and
outsb
lds
out
sub
dec
and
mov
test
pop
pop
sahf
push
scas
cmpsl
jp
stos
cli
adcl
adc
in
int
push
mov
lods
pop
sub
faddl
push
dec
mov
jnp
pushf
xor
inc
push
sub
cltd
loop
dec
sar
xor
dec
mull
arpl
pop
call
fsubs
mov
lcall
nop
arpl
inc
fstpl
daa
decl
in
enter
jle
adc
negb
mov
cmc
in
cmpsl
shrl
adc
push
fsubl
push
mov
pop
lods
pop
test
repnz
rcrb
add
cmp
stos
and
mov
les
pop
xchg
cmp
jl
jp
pop
and
dec
stos
cmpl
cs
jg
fists
mov
adc
inc
xlat
adc
sbb
xor
jecxz
andb
pop
jne
sahf
testl
inc
and
jne
jl
push
or
or
push
mov
pop
sub
dec
mov
enter
pop
jmp
push
insl
jns
call
inc
aad
sahf
mov
testb
dec
stc
bound
sbb
inc
ret
or
xor
lahf
fs
ss
bound
in
int3
inc
jl
inc
and
jbe
sub
xor
inc
pop
pop
xor
push
and
testb
xchg
mov
loop
pop
or
jl
mov
push
out
add
and
repz
jnp
xor
repz
flds
push
in
xchg
lods
adc
pop
out
ja
mov
mov
loope
test
imul
xchg
negb
mov
adc
mov
adc
repnz
lret
adc
in
xlat
xor
test
gs
mov
dec
iret
or
insl
push
outsl
lahf
xor
push
faddl
dec
mov
fsubrl
in
pushf
mov
push
loop
sub
sub
jb
xchg
jle
mov
fxch
fwait
daa
mov
movsb
xor
popf
int3
mov
sete
mov
push
xor
jg
fcomi
sbb
jge
in
sahf
xchg
ss
sbb
or
rcll
mov
xor
enter
dec
in
xor
gs
insb
inc
add
movsb
jmp
loopne
xchg
xchg
xchg
lahf
add
sbb
daa
les
jne
ds
shll
psrld
ja
cs
cs
icebp
sub
push
mov
clc
xor
dec
dec
fdivrl
sub
xchg
jecxz
push
data16
sbb
test
loope
outsl
jmp
inc
imul
inc
mov
dec
sbb
pop
push
nop
inc
fcmovb
mov
or
add
pop
data16
inc
popa
pop
loopne
sub
xor
scas
ret
ss
daa
out
bound
int
js
mov
or
mov
inc
mov
xchg
sub
jmp
rclb
xchg
hlt
test
sbb
sarb
xor
ret
dec
mov
enter
jns
dec
sbb
imul
mov
mov
rcrb
lods
inc
adc
fcmovu
mov
pop
xor
push
daa
ret
mov
mov
xchg
imul
add
cmp
add
sub
mov
ret
out
mov
jp
inc
arpl
sahf
lods
and
mov
lahf
sti
outsl
sbb
lock
push
sub
jo
fwait
xchg
pop
rcrl
nop
adc
hlt
xchg
push
in
jl
adc
mov
fwait
inc
or
test
mov
fisubl
xchg
fcoms
dec
loope
sub
jle
sahf
stos
out
test
mov
sbb
add
and
cmc
int3
and
jp
or
inc
aaa
daa
cltd
xor
movsb
ja
mov
sbb
and
lods
subb
fsubrs
mov
jge
jae
call
dec
cmp
lret
pop
mov
xchg
push
js
dec
push
ret
shll
mov
pop
jne
hlt
ds
and
push
daa
hlt
lock
stos
pop
xchg
ja
push
mov
aaa
jecxz
insb
sbb
vcvtps2dq
dec
pusha
cs
and
lods
and
jno
movsb
inc
jns
adc
leave
pop
xchg
xor
cmp
aam
addr16
sub
mov
dec
push
rclb
jp
stos
in
ds
test
daa
mov
movsb
mov
pop
push
adc
out
xchg
scas
in
nop
push
add
rcrb
mov
fdivp
and
mov
pop
imul
cli
inc
sarl
fwait
xor
into
stc
gs
jb
repz
arpl
xor
jmp
or
mov
push
popa
pushf
bound
inc
push
or
xchg
pop
lret
mov
out
sbb
sub
std
loope
inc
and
push
into
std
xchg
add
ret
divl
repnz
dec
xor
aad
push
push
xor
add
fs
addr16
insb
jg
fldl
in
mov
pop
mov
jmp
lret
sbb
push
mov
sahf
sbb
mov
sub
mov
ret
fbstp
mov
fnstenv
cwtl
mov
mov
shll
int3
xchg
jmp
js
lds
xlat
inc
test
inc
pop
call
sti
pop
int
pop
push
fisttps
shll
bound
xor
negl
jbe
pop
test
xchg
adc
lods
lret
out
push
int3
leave
sbb
xchg
mov
in
sub
movsl
shl
mov
fadds
sbb
or
push
in
xchg
adc
mov
dec
in
fucomp
ret
or
dec
and
out
or
xchg
addr16
cmp
pop
xchg
add
adc
mov
and
dec
cmp
rolb
mov
cltd
ror
lahf
xchg
pop
ljmp
push
and
adc
rol
stos
inc
pcmpgtb
mov
enter
sti
push
mov
ret
mov
or
mov
stos
push
ljmp
jno
mov
nop
dec
push
push
addr16
sub
pop
cmp
vxorps
daa
cli
sub
hlt
pop
pop
gs
mov
aam
jno
ret
pop
fcoms
aaa
ret
pop
or
push
sbbb
inc
lods
jmp
scas
push
in
aas
sbb
movsl
popf
and
add
pushl
inc
fsubrp
fnstsw
cmp
sbb
bound
call
mov
enter
bound
sbb
in
pop
jmp
out
icebp
push
cmc
and
mov
dec
pop
shrl
mov
or
stos
push
vandpd
flds
lea
fs
bound
pop
adcb
mov
and
popf
cmpsl
ret
into
scas
mov
icebp
std
leave
sbbb
adc
mov
and
addb
nop
aam
lods
nop
adc
xchg
xchg
xor
or
outsl
pushf
add
into
mov
clc
xchg
inc
jmp
mov
movb
cld
popa
iret
and
mov
fs
out
mov
mov
sbb
int3
or
adc
mov
fmuls
and
xor
push
mov
enter
and
inc
push
mov
mov
sub
cmp
cmp
cltd
leave
push
mov
les
das
jmp
adc
adc
cmpsb
ret
and
xor
test
or
mov
notl
jb
mov
mov
leave
fs
add
push
xchg
insb
add
adc
and
mov
jo,pn
adc
ds
push
movsb
xchg
call
xchg
xchg
pushf
push
inc
fmuls
mov
js
ficoms
enter
jl
mov
cmc
das
icebp
or
stos
push
cmp
in
fs
pop
xchg
and
dec
ret
add
mov
out
pop
lret
mov
testl
xor
jg
lds
add
ret
loop
leave
lcall
jno
xchg
sbb
push
idivb
pusha
inc
pop
jb
adc
int3
gs
jnp
jmp
sub
fcompl
cmp
dec
aad
fnstsw
dec
xchg
std
adc
sub
pop
addr16
cs
inc
fldcw
dec
dec
jno
cli
xchg
cmp
or
jns
inc
sub
outsb
std
pushf
enter
in
std
pop
pusha
imulb
aas
shlb
outsb
sbb
fdivl
pop
mov
loop
sbb
lret
mov
sbb
inc
or
stos
in
pop
inc
enter
sub
lret
pop
inc
cmpb
or
stos
les
mov
or
cli
in
push
or
add
addb
or
movsb
mov
shrl
into
nop
sub
fcmove
pop
arpl
and
pop
sti
cmp
xchg
cmp
loop
dec
fucomi
pop
mov
or
mov
iret
mov
or
cs
inc
pop
imul
mov
push
mov
cmp
cmpsb
mov
xchg
inc
not
fiadds
xlat
les
ret
pusha
les
mov
aam
mov
pop
repnz
das
sbb
push
ja
rorl
lds
pop
mov
xor
dec
xchg
mov
push
js
push
loope
andb
xchg
mov
idivw
data16
add
popa
and
into
add
hlt
ret
mov
cld
mov
stos
arpl
pop
dec
xor
mov
in
fwait
pop
notb
pop
mov
orb
loop
leave
aad
jb
adc
cltd
sbb
and
xchg
loop
cltd
sar
push
and
int
jl
in
jb
dec
sub
xchg
add
incl
cmc
sbb
adcl
or
repz
mov
leave
or
cmp
cltd
inc
aad
mov
jle
pusha
and
push
or
sbb
jns
dec
push
mov
jo
jno
push
cmp
sbb
mov
jo
lret
mov
xor
mov
add
or
test
pop
pop
inc
into
int3
cli
mov
mov
out
insb
fcmovnbe
outsl
mov
inc
in
inc
xchg
int
cmpsb
xor
and
mov
subl
hlt
popf
fcompl
push
in
mov
jno
aaa
ss
push
cli
xchg
cmpb
mov
pop
enter
ss
into
jb
inc
pop
xor
dec
mov
inc
xchg
rorl
nop
push
mov
into
enter
push
aam
jmp
xchg
fisttpll
pop
xchg
aas
loope
pop
js
mov
push
in
or
ds
jmp
outsb
pop
test
int3
das
das
and
cmp
add
mov
movsb
shll
dec
or
shrb
notl
push
lds
pop
aam
and
or
das
lods
mov
sub
jns
jns
cmp
and
addr16
lock
scas
and
inc
sbbb
inc
pop
sub
aas
push
cmp
inc
mov
jg
mov
ljmp
fucomi
movsb
repz
sbb
lret
adc
xchg
stos
repz
les
xchg
incb
adc
pusha
cmp
out
jge
fxch
jp
dec
mov
dec
push
aam
add
mov
out
scas
es
ds
xor
iret
push
pop
mov
ja
sub
cltd
cwtl
shlb
lods
lret
cmp
in
outsb
aam
int3
popa
dec
call
ds
jmp
mov
aaa
inc
enter
cmc
shll
addl
mov
jnp
mov
jmp
push
xor
mov
dec
out
mov
insb
stc
push
adc
ss
xchg
std
mov
mov
fwait
add
adc
and
mov
insl
sub
cltd
fdivl
mov
pop
mov
cmp
sbb
ja
sub
mov
enter
jecxz
orb
mov
pop
mov
push
xorb
cmp
jns
scas
xchg
test
dec
movsl
iret
testl
and
aaa
mov
or
xchg
push
movsb
mov
shrb
notl
cwtl
mov
fcomps
jge
push
sti
push
jb
lock
fisubrl
lret
inc
fidivl
adc
lods
stos
mov
dec
jl
lret
ja
les
sti
test
xchg
lods
xchg
mov
mov
into
mov
rcl
xchg
fldenv
mov
dec
and
add
cmpsb
aas
jl
cmc
lea
sub
inc
sahf
mov
loopne
xor
sbb
mov
sti
xchg
sub
loop
iret
push
mov
jae
pop
outsb
adcl
stc
xor
inc
gs
lret
inc
push
frstor
mov
out
fs
enter
mov
scas
int3
repnz
gs
mov
cs
push
out
lock
mov
xor
stos
xchg
jecxz
stc
enter
sbb
insl
loopne
bound
xchg
lock
inc
sbb
pop
call
popf
mov
jne
int3
jecxz
clc
ret
push
sub
insl
loopne
add
push
dec
push
push
cmpsl
lock
cli
inc
xchg
call
lcall
lret
mov
in
in
pushf
jg
jecxz
sbb
xor
leave
and
ds
dec
icebp
sub
and
dec
cmp
ss
push
aad
mov
adc
sub
imul
flds
movsl
enter
xor
or
xor
scas
jp
push
jno
out
xchg
push
and
mov
or
lea
dec
clc
cltd
adc
movsb
xor
mov
and
inc
push
dec
xchg
clc
and
cmpsw
out
lods
xchg
mov
dec
jae
push
mov
lock
hlt
xchg
cmpsl
and
lcall
add
push
pop
divb
jnp
sub
jle
int
aad
js
shrl
insl
inc
fcomps
mov
mov
mov
mov
ds
test
dec
mov
inc
out
push
iret
data16
jmp
notl
aam
stc
and
mov
push
int3
fsubl
and
filds
out
push
loopne
sub
aaa
add
jmp
outsl
jns
adc
push
mov
push
ljmp
imul
jne
sahf
repnz
insb
or
aam
sahf
shlb
es
test
add
mov
pop
lock
push
jnp
shrb
sarl
mov
pmulhw
jg
mov
push
mov
jnp
cmpsl
xorl
int3
add
push
cltd
ret
mov
and
test
push
sub
ret
sbb
pop
push
mov
adc
fbstp
data16
sbbl
les
push
sbb
inc
dec
cld
das
pop
scas
push
in
clc
int
out
sahf
call
dec
loope
ss
in
add
add
mov
cli
pushf
cmp
jbe
cltd
push
popa
push
movsl
xchg
xor
lods
mov
dec
jge
in
rcrl
insl
inc
fstpt
jne
add
pop
jecxz
dec
aam
cmpl
mov
pop
ds
push
jo
add
or
aad
xchg
jo
xlat
jmp
mov
dec
mov
jecxz
jne
fstl
mov
aas
push
xor
call
sub
dec
push
out
jg
add
pop
add
es
or
xor
call
cmc
out
mov
or
idivl
lret
xor
cmpsb
aad
lcall
fmull
aas
loopne
arpl
jge
test
xchg
mov
or
imul
lret
in
mov
test
mov
aas
bound
mov
je
pop
lret
ljmp
lods
lock
mov
popa
cmp
xchg
cmp
dec
mov
pop
outsb
pop
and
or
dec
pop
mov
scas
inc
test
clc
pushf
sub
repz
pop
test
sbb
mov
js
stos
pop
es
or
rol
or
cli
sbb
aas
dec
mov
add
fimuls
inc
rcl
mov
sarb
outsl
fisttpl
ljmp
pop
repz
lods
jae
andl
lods
dec
into
jmp
push
mov
insl
lock
sbb
jb
popf
andb
or
ljmp
mov
rcl
cmpsl
mov
dec
mov
or
push
adc
test
cltd
mov
stos
mov
out
fsubrl
fidivl
add
pop
setae
negl
popf
xor
jle
loop
or
mov
shrl
neg
sbb
mov
lret
pop
push
movlps
dec
es
and
aaa
pop
xor
fiaddl
adc
push
jg
inc
mov
pop
repz
cmpsl
insl
xchg
arpl
dec
add
fwait
aas
sbb
pushf
cmp
leave
aaa
in
cmp
jnp
les
lcall
or
mov
in
xchg
inc
js
jl
xchg
pop
out
and
aaa
ret
pop
cmc
test
lret
cld
or
subl
or
adc
lea
cmpsl
je
adc
pop
mov
adc
jae
je
mov
mov
xor
push
nop
jae
jnp
adc
incl
add
cmp
pop
out
cmc
push
jnp
jl
jge
movsb
cmpsb
rcll
mov
outsl
and
fs
dec
adc
sbb
sbb
cmp
sub
jg
out
ret
pop
icebp
hlt
psubd
dec
ljmp
loope
movsl
test
dec
xor
fsubl
xor
mov
push
mov
dec
or
rol
lods
cmp
pop
fidivl
ds
mov
sub
cwtl
fisubrl
daa
in
mov
scas
inc
imul
jl
add
out
shrb
push
add
mov
add
jne
inc
cmpsb
movsl
stos
xchg
mov
xor
lods
inc
adc
int3
xor
popa
addr16
sub
mov
mov
mov
div
pop
imul
mov
stos
stos
cmp
inc
sbb
enter
int3
and
lods
adc
je
mov
cmpsb
xchg
leave
pop
add
fisubrl
in
addl
or
push
mov
paddb
stos
sbb
int
add
push
push
stos
lcall
mov
mov
mov
push
int3
push
faddl
xor
imul
dec
xor
ss
out
or
dec
and
stos
sbb
dec
repz
frstor
subl
add
add
jecxz
aas
call
ljmp
cmp
mov
sub
push
fidivs
mov
sbb
cwtl
mov
mov
push
das
movb
xlat
cmp
mov
in
cmc
scas
mov
cmp
cmp
sti
mov
sub
lcall
pop
sub
ret
push
out
sub
mov
repz
cwtl
pop
imul
dec
int3
fs
std
insl
adc
jp
testl
sahf
dec
fs
js
mov
xor
inc
or
pop
aas
push
add
xor
loope
jecxz
inc
std
jbe
mov
sbb
in
addr16
push
sub
xchg
add
call
in
imul
out
lods
sub
mov
scas
das
mov
sub
and
mov
stos
call
add
popf
scas
and
mov
add
xlat
pop
addr16
mov
push
loop
mov
sbb
push
aaa
in
into
mov
pop
imull
xchg
movsb
sbb
ficoml
adc
out
pushf
hlt
adcb
xlat
rcrl
inc
fldl2t
jbe
hlt
jae
outsb
stos
lcall
adc
aaa
sub
mov
jecxz
dec
sub
sahf
mov
sub
mov
into
xchg
lret
mov
arpl
lret
xchg
sub
inc
and
add
sub
and
repnz
sbb
jns
inc
and
shl
sub
sub
outsl
lcall
pop
in
rcrb
dec
mov
or
fisubrl
sahf
mov
ss
xor
cltd
xor
nop
sub
xchg
cld
fs
jge
push
jne
jp
add
in
pushl
inc
pushf
fcomp
mov
movb
shr
mov
jl
and
xor
sahf
xor
jo
add
hlt
xchg
or
inc
jbe
popf
ss
loopne
mov
adc
outsb
jle
inc
push
out
arpl
cwtl
sbb
mull
sbb
xchg
dec
mov
mov
roll
das
je
cmp
popf
arpl
fildl
adc
mov
push
cltd
jne
shlb
push
mov
into
fsubrp
incl
xor
rcrl
in
and
cwtl
jnp
mov
mov
push
stos
push
movsb
movsl
enter
push
bnd
inc
out
pushf
subb
lret
pop
loope
adc
rcrb
popa
mov
ss
out
and
pop
jle
mov
cmp
in
call
or
cmp
test
sub
xor
loopne
data16
gs
mov
xchg
bound
mov
pop
out
int
push
mov
push
mov
mov
sub
and
mov
cld
jbe
xor
pusha
xchg
mov
into
loop
jo
or
xor
xchg
xor
mov
mov
aas
std
mov
in
xorl
es
push
lods
jle
mov
sti
pop
jnp
mov
cmc
jne
mov
adc
or
push
jae
mov
xor
jno
mov
insb
xor
out
sbb
or
mov
fmul
arpl
shr
push
stc
lret
test
and
aas
scas
lods
pop
dec
loope
sbb
outsb
lret
enter
popf
mov
cmpsl
push
out
fidivrs
pusha
je
inc
div
adc
test
jg
sbb
add
mov
popa
stc
popf
into
mov
in
jmp
xor
test
ljmp
pop
pop
pop
retw
mov
push
dec
push
out
xchg
movsb
jl
lods
mov
scas
mov
jbe
clc
sbb
sub
fcoms
jmp
and
mov
and
sub
xchg
xchg
lds
xor
cmp
daa
shlb
dec
mov
inc
cvtpi2ps
hlt
sub
iret
aas
xor
ret
pushf
and
aaa
sub
inc
or
sbb
push
jmp
subl
cli
mov
xchg
lods
cmp
rol
aam
push
aam
cltd
in
std
out
xchg
add
inc
mov
mov
inc
inc
mov
cmp
into
gs
dec
movsl
ret
rcr
subl
mov
mov
sub
push
fisttpll
mov
test
lods
cmc
lea
mov
aam
filds
push
dec
test
inc
lret
push
jp
inc
icebp
adc
mov
add
lods
add
stos
push
jnp
mov
cmp
leave
imul
cmp
jge
rclb
loopne
cmp
jne
pop
jbe
scas
adc
ret
inc
cli
imul
sbb
enter
sbb
lods
rolb
fstpl
dec
arpl
inc
sbb
ret
sub
push
in
inc
cmpsl
or
cmp
int
imul
cmpsb
fnsave
or
dec
out
sti
xchg
and
mov
lret
dec
dec
inc
mov
sbb
push
popa
xor
dec
dec
rorl
imul
mov
push
call
mov
mov
xchg
or
pushl
jge
cmp
repnz
xchg
ret
cmpsb
mov
data16
gs
inc
bound
out
dec
aas
pusha
lcall
and
sub
js
lcall
movsb
addr16
in
adc
adc
rcrb
pop
mov
orb
scas
shrb
push
and
adc
pushf
mov
cmpsl
lahf
sub
adc
les
hlt
mulb
cmpsb
mov
test
adc
shll
pop
jg
fsubl
xchg
xor
dec
mov
sub
add
inc
and
stos
ja
jge
call
into
or
shr
push
adc
mov
das
add
cmc
mov
daa
leave
call
aaa
les
scas
mov
xor
mov
jno
fimuls
adc
imul
cmpsl
xchg
add
xor
and
mov
ret
loopne
roll
iret
push
and
pop
stos
js
shrl
test
andb
imul
mov
inc
pushf
mov
aaa
ret
pushf
shll
std
repnz
adc
or
or
pop
lods
xchg
lods
pop
adc
lahf
inc
and
adc
push
xchg
mov
mov
push
adc
cmpsb
dec
jge
jge
outsb
push
int
xor
mov
lea
or
stos
add
inc
xchg
inc
loope
sub
aas
cmp
mov
bound
jo
or
adc
out
das
cmp
aad
das
xchg
mov
mov
mov
dec
jnp
test
mov
fisubl
adc
xacquire
push
xor
add
and
sub
lods
pop
jmp
test
push
or
mov
inc
loopne
mov
mov
xchg
hlt
or
sbb
and
repnz
adc
cmp
push
daa
xchg
jp
mov
sbb
lret
repnz
scas
push
sbb
jae
mov
in
nop
int3
repnz
xor
std
pop
stos
test
xchg
sub
mov
mov
or
mov
mov
xchg
mov
inc
sbb
and
dec
jne
jns
lea
fisubl
adc
adc
imul
mov
xor
push
inc
call
iret
mov
sbb
mov
loop
popf
test
cmc
aaa
add
ss
cmp
mov
pop
mov
into
jmp
dec
mov
aad
cmp
inc
cmc
or
xchg
xor
movsb
in
mov
and
pop
mov
sbb
test
push
mov
test
mov
jbe
inc
pop
jbe
mov
ror
pop
in
cmp
jns
lds
aas
xchg
stos
insb
lret
sarb
add
loope
xchg
add
fs
inc
js
add
cmpl
stc
mov
ljmp
and
jge
scas
sub
xor
jbe
mov
jb
jnp
data16
leave
push
mov
je
out
and
xor
mov
filds
or
push
push
and
insb
pop
and
cmp
push
mov
and
outsl
pop
in
dec
xlat
pop
hlt
or
xchg
xor
stos
test
push
xlat
push
xchg
push
je
and
xchg
fcompl
mov
fs
xchg
loope
mov
into
mov
lods
shll
pop
mov
push
popf
scas
cwtl
push
mov
lods
sub
add
icebp
mov
cmp
movsb
fistps
mov
idivb
popf
stc
pop
or
fnstcw
loopne
dec
or
or
popa
or
inc
cmp
and
cmpsl
inc
ja
or
outsl
iret
icebp
bound
or
xchg
pop
mov
aad
lds
jle
xchg
leave
sbb
mov
pop
cmc
ret
xchg
sub
out
push
dec
js
fs
pop
insl
push
test
push
orb
adc
aaa
aaa
dec
jle
jmp
icebp
outsb
or
aaa
fwait
lea
xor
push
mov
shl
dec
sbb
stc
dec
mov
int3
andb
or
mov
jns
aam
fildl
fidivs
vandnpd
ja
fisubs
pusha
add
xchg
inc
inc
ret
xor
push
inc
pushf
or
lret
mov
imul
in
mov
filds
adc
pop
lea
mov
enter
rcl
mov
xchg
mov
clc
adc
test
dec
xor
repz
xchg
mov
pushf
fadd
or
lahf
push
inc
fldenv
dec
pusha
jl
sub
pop
js
nop
push
mov
divb
add
mov
mov
pop
mov
add
aas
pop
push
lods
dec
aas
lret
lret
repnz
lret
cmp
ljmp
jne
and
shrb
scas
adc
pop
loop
fdivrs
je
mov
rcrb
sbb
jne
movsl
rclb
subb
mov
jnp
cmpsb
jecxz
movsl
or
pop
lds
loopne
es
sub
stos
cmpsb
fwait
cmp
pop
lods
rcrb
pop
pop
negl
mov
xchg
out
movsl
popf
push
sub
ret
mov
mov
inc
xor
shll
adc
cmc
into
jge
mov
jb
dec
inc
popl
popa
ss
dec
cmp
adc
sub
aas
repnz
scas
dec
mov
call
or
inc
lods
pop
xor
lock
mov
shll
jo
lock
cld
dec
pop
cs
mov
sbb
out
inc
sbb
jno
pop
mov
push
dec
push
cmpsl
and
fisubrl
mov
pop
sbb
dec
bound
in
sbb
cmp
loopne
jnp
mov
mov
dec
push
movsl
cmp
jbe
jmp
push
cmp
mov
mov
xor
sbb
xchg
inc
into
movsb
pop
jmp
test
jmp
popf
cmpsl
repz
push
and
push
sbb
jne
fbld
ret
out
rorl
cmp
jb
pushf
inc
lcall
xor
int3
notl
negl
adc
add
sbb
add
jne
adc
movsl
ljmp
jne
into
arpl
mov
xchg
mov
or
test
lods
jns
rclb
ss
inc
out
jnp
cmp
cwtl
adc
int
mov
xlat
or
ss
mov
sub
mov
mov
add
add
mov
xchg
push
or
sub
mov
cmpsb
mov
bnd
mov
pop
rclb
faddl
sbb
jg
cmp
cwtl
lock
adc
adc
and
jae
insb
outsl
outsl
push
mov
iret
lea
mov
dec
out
mov
cmpsb
xchg
push
mov
js
xchg
jno
mov
decb
lahf
mov
leave
fisubrs
or
cmp
insb
cmp
inc
push
jg
mov
call
sbb
pop
sbb
lea
sbb
shlb
cltd
dec
mov
stos
call
add
sahf
in
mov
dec
pusha
add
pop
ja
push
xchg
sub
sbb
mov
mov
es
jno
push
or
xchg
pushf
xchg
sub
stos
mov
mov
shll
jns
lahf
movsb
testb
cmp
mov
cmp
lret
call
js
mov
and
xchg
jmp
ret
jnp
push
mov
push
pop
jmp
jl
imul
jecxz
mov
insl
xor
inc
outsb
mov
mov
mov
lcall
and
jle
cltd
mov
clc
mov
push
xchg
sbb
in
hlt
orb
outsb
cmp
push
ljmp
jb
sub
hlt
data16
jmp
loop
stos
push
cmp
cld
sbb
dec
jb
cmpsl
mov
lret
jp
inc
idivl
adc
xchg
test
mov
test
push
pop
pop
insl
inc
mov
add
push
xlat
pop
mov
pop
sub
fcmove
pop
les
les
cmp
mov
jo
addr16
enter
lock
push
pop
out
cwtl
cmp
stc
jg
leave
mov
in
jmp
push
sahf
pusha
mov
sbb
fldl
cmp
call
int
xchg
sbb
ss
andb
jbe
xchg
mov
js
sbbl
cmp
mov
xlat
out
mov
cmp
dec
sub
fsubr
cli
das
xchg
scas
jo
xor
jbe
xchg
fstpt
and
inc
and
adc
loopne
stc
arpl
or
push
mov
fdivrs
cmp
pop
nop
mov
jno
mov
add
and
lods
and
stos
xchg
and
add
cmp
and
cmpsb
mov
push
test
shll
pusha
mov
and
pop
mov
aam
pause
and
popf
xor
pop
inc
cli
xor
in
inc
stc
gs
ficompl
mov
push
add
mov
inc
pop
lds
pushf
sarb
aam
pop
xchg
sub
in
divl
lods
pop
das
mov
mov
mov
popf
outsl
xchg
pop
dec
mov
mov
cld
or
push
mov
scas
inc
fbld
or
inc
pop
xchg
sbb
adc
mov
loope
jge
cld
mov
cli
sti
adc
sub
or
lret
or
and
pop
adc
ds
add
scas
cmp
lods
mov
and
loop
lret
iret
loopne
pushf
pop
adc
sub
and
inc
push
jae
xchg
shrb
inc
out
xchg
mov
shr
enter
test
sub
cmp
xchg
cld
outsl
or
mov
inc
nop
decb
test
xchg
inc
stos
dec
sbb
jne
ljmp
fwait
xchg
push
push
enter
mov
jmp
and
xor
xor
loopne
cmc
adc
mov
aaa
pop
clc
mov
cmpsb
xchg
xchg
cs
push
xchg
lea
dec
loope
jecxz
addr16
inc
out
mov
cwtl
push
sbb
add
push
add
arpl
lcall
bound
flds
push
pop
enter
mov
mov
bound
mov
sbb
dec
mov
pushf
insl
fbstp
mov
fwait
xor
test
incb
sub
pushf
sbb
hlt
sahf
jae
xchg
lods
test
sbb
rcll
cld
les
scas
test
cmp
repnz
cwtl
mov
adc
pop
push
scas
in
inc
rolb
pop
sub
inc
mov
ja
xchg
pop
xor
stos
jge
inc
add
std
imul
pushf
and
mov
mov
test
push
ljmp
xchg
add
fsubs
mov
std
mov
jae
push
sti
stc
ljmp
pop
jne
sub
sbb
pop
stc
icebp
mov
pop
in
stc
je
scas
cli
sbb
mov
mov
sub
push
mov
jg
gs
and
dec
jnp
movsl
pop
mov
adc
sub
int
pop
decl
inc
test
fstp
and
movsb
adc
shll
stc
sbb
or
lods
mov
dec
xlat
jae
and
fisttpl
xor
shr
xchg
mov
sbb
lret
fsubl
pop
rolb
fdivl
addr16
push
out
mov
xor
inc
adc
and
mov
xchg
mov
jbe
test
adc
mov
mov
jmp
jmp
out
jno
rcll
pop
jp
mov
fmul
mov
leave
and
fsubr
scas
inc
push
imul
jne
leave
fildll
and
arpl
dec
fcmove
loope
and
cmp
aas
push
sarl
add
sarl
lahf
imul
and
jb
lahf
or
inc
mov
inc
shrb
fs
nop
inc
or
xor
or
adc
call
pop
lret
jae
sub
mov
mov
stos
test
clc
in
mov
pop
fwait
inc
ficomps
into
test
outsb
test
test
das
hlt
loope
adc
push
or
adc
movsl
and
xor
xor
fiaddl
inc
add
dec
movsb
lret
sti
mov
ret
pop
adc
leave
aam
pop
jno
call
xchg
stos
jns
inc
fstpt
push
xlat
xrelease
ds
imul
xor
jl
shlb
pop
mov
or
sbbl
xchg
mov
sbb
jns
sub
mov
inc
sbb
out
sub
pop
pop
mov
pop
push
pop
test
dec
fstpl
sti
nop
sbbl
add
cmpsb
adc
sbb
cmp
in
jbe
push
dec
xchg
popa
mov
aad
cmp
cmc
lods
jmp
aaa
lret
fbld
mov
insl
xchg
out
into
sbb
mov
dec
les
mov
dec
xor
pop
shlb
sbb
movsl
rcrl
and
test
jmp
mov
sbb
mov
or
popa
inc
mov
sbb
in
test
lods
lods
mov
fxch
loop
das
push
or
ss
lret
mov
inc
jg
and
in
xor
inc
xchg
cmp
pop
adc
push
or
imul
loope
lods
push
and
and
xor
pop
pop
adc
add
pop
shlb
sbb
stos
iret
pushf
xor
int
cmpb
jge
daa
imul
sbb
mov
fcmovbe
sbb
sub
add
add
cmc
aaa
jb
fucomip
sub
jae
jbe
xor
xchg
pushf
dec
sbb
jg
cmc
and
mov
add
mov
push
mov
jae
pop
sub
shll
sub
std
add
mov
push
dec
mov
pop
pop
push
xor
xchg
imul
repnz
push
jl
xchg
lret
sub
push
cltd
insb
inc
data16
or
sarb
sbb
sahf
lahf
sbbb
cs
in
inc
repz
mov
xor
xor
cmp
xchg
sub
aad
fstps
or
js
loop
ja
imul
mov
xor
xchg
sub
in
call
xor
push
fcom
xchg
imul
std
mov
stos
popa
adc
inc
andb
repz
adc
adc
jo
rcrb
stos
imul
push
imul
es
test
andl
sub
adc
cmp
inc
ret
popf
inc
sbb
lds
ret
pop
jns
ret
xor
jle
mov
inc
dec
cmp
cmp
cmp
pusha
xor
jle
mov
call
dec
sub
inc
cmp
fwait
dec
fcmove
jnp
xchg
dec
or
std
sbb
test
or
lds
mov
pop
daa
xchg
aad
scas
jl
mov
stos
add
push
mov
fdivrl
bound
pop
add
sub
fs
outsl
push
jle
mov
and
push
loop
stos
in
jecxz
mov
movsl
pop
fwait
roll
repz
jg
addb
xchg
push
iret
mov
add
sarl
arpl
adc
imull
int
outsb
dec
jle
jle
cmpl
push
popf
pop
pop
xchg
xchg
ret
adc
ret
out
and
or
pusha
jge
test
stos
lea
fwait
sub
pop
sub
or
mov
sbb
mov
xchg
orb
inc
cli
sub
popa
cmp
dec
in
lret
divb
imul
sbb
mov
mov
stos
mov
adc
aaa
inc
popa
mov
insl
xchg
mov
sbb
addr16
cmp
jg
jg
dec
aam
mov
sti
dec
cli
push
clc
fcoml
iret
repz
ljmp
jb
push
xchg
push
out
ret
pop
bound
mov
sbb
sub
dec
push
add
and
fistl
pop
mov
loopne
jb
xor
jmp
fdivrp
xor
push
inc
pop
js
mov
imul
pop
adc
in
loope
dec
push
fisttpll
inc
push
inc
in
mov
fcmovb
arpl
jbe
imul
in
cltd
add
hlt
xchg
push
rcrl
aas
mov
mov
add
sahf
mov
ret
es
in
dec
mov
push
push
or
mov
test
push
mov
inc
pop
daa
shrl
fs
pop
sub
lret
jae
fldcw
push
mov
inc
jns
nop
daa
imul
bound
add
mov
dec
sbb
testb
popa
inc
popf
jge
jmp
outsl
jp
pop
ret
jg
mov
bnd
dec
or
push
stos
xchg
mov
push
cmpsb
cmp
sbb
inc
fbld
fdiv
mov
xor
xchg
ja
mulb
xchg
push
pusha
lods
sbb
movsl
ret
repnz
lds
jl
fidivs
mov
aad
aad
std
lods
push
push
mov
pop
rcrl
mov
in
or
fwait
sub
mov
push
jne
das
ret
gs
das
mov
int
cmp
out
cmp
or
aam
mov
sti
orb
add
and
sbb
cwtl
inc
sbb
xor
scas
es
xchg
xchg
dec
dec
add
outsb
ss
jmp
mov
cmp
xchg
and
ret
pop
mov
shll
sub
add
sbb
push
fidivs
or
mov
cmp
push
and
int
data16
mov
ficoml
fiadds
jne
pop
sub
xchg
xchg
cld
mov
cwtl
das
in
mov
sub
dec
test
inc
mov
dec
lea
ljmp
xor
fldt
daa
or
lret
sarl
data16
push
aad
xchg
mov
jne
insb
lods
or
mov
sub
fistpl
sub
dec
repz
icebp
xchg
repz
js
test
xchg
mov
xor
push
rol
jle
cli
outsl
or
or
popf
jne
outsb
pushf
dec
mov
rcl
lock
loopne
inc
cmp
xchg
cmc
lock
movsl
mov
mov
pusha
cmp
std
xchg
push
pop
ss
sub
scas
int3
test
stos
sub
idivl
sub
les
pop
das
push
fnstcw
sbb
pop
push
push
cmp
cmp
or
es
in
or
mov
mov
fcmovnu
mov
popa
add
sarl
lods
push
out
popf
repz
mov
stc
rolb
aam
nop
inc
jnp
call
add
jne
loopne
jb
adcb
pop
push
xor
sahf
mov
lahf
sbb
add
jae
aam
popl
xchg
cmpb
push
jg
pop
aas
movsl
jl
lahf
push
fldlg2
cmp
dec
imul
dec
xchg
sbb
push
out
mov
outsl
bnd
xchg
mov
into
cmp
jnp
loopne
fsub
pop
lret
lock
sarl
jecxz
sbbb
or
xor
sub
push
add
mov
ss
out
in
mov
jbe
sub
lret
enter
movsl
sbb
mov
and
rorl
pop
xorl
mov
xchg
sbb
jecxz
ja
into
xchg
ss
fwait
push
in
decl
leave
pop
add
es
push
sbb
xor
jae
daa
movsl
inc
cmc
mov
mov
xchg
scas
jne
pop
out
mov
outsl
rol
jge
mov
hlt
jge
sbb
mov
cli
test
testb
data16
push
dec
mov
lahf
and
outsb
bound
fsub
or
outsb
dec
add
jg
mov
lret
shlb
mov
shrb
lea
push
jge
push
or
mov
cmc
adc
xchg
popl
sarb
cmpsl
xchg
pop
dec
lods
stos
inc
fbld
push
aam
adc
cmc
mov
scas
xchg
lods
mov
out
mov
mov
jmp
scas
fstl
pop
add
ss
cmpsb
and
inc
push
pop
std
pop
mov
ljmp
into
inc
aas
pop
insb
mov
arpl
and
jnp
mov
jb
dec
xor
mov
rol
andl
addr16
xlat
cmp
ja
jl
mull
add
mov
pop
jne
outsl
xchg
dec
dec
add
daa
mov
in
push
add
xor
pop
inc
jmp
xchg
stos
packssdw
pushf
xor
add
and
jge
sub
sub
and
jle
add
mov
dec
inc
mov
ret
xchg
inc
push
iret
xchg
cmpsl
out
lcall
sub
orl
mov
dec
pop
notl
rol
jp
mov
enter
xchg
sub
idivb
test
sar
icebp
pop
pop
arpl
mov
push
lock
or
sbb
sti
mov
enter
aaa
shr
stos
lock
std
loop
xor
xchg
add
pop
mov
lods
aad
and
dec
fdivrl
adc
rcl
xchg
jb
mov
inc
mov
inc
addr16
push
dec
or
xor
pop
bound
idivb
mov
dec
gs
sti
fisubs
push
and
cmp
popf
int
xchg
jmp
xor
sub
nop
dec
popa
fists
loopne
dec
add
lods
das
jg
dec
outsl
fld
jae
and
scas
push
bnd
aam
outsb
mov
leave
out
mov
push
pop
push
inc
sub
and
loope
imul
lret
jp
xchg
xor
cmpsb
fidivs
pop
out
or
sbb
mov
xorb
cld
mov
inc
inc
push
mov
and
rcl
dec
sub
mov
mov
ss
cmp
lods
inc
push
ret
xchg
stos
out
arpl
aam
outsl
stc
xchg
cmp
sbb
arpl
cmp
subb
lret
aas
push
shr
mov
repz
pop
and
out
arpl
addb
data16
or
repz
and
mov
inc
xor
jbe
add
mov
mov
into
xchg
insb
arpl
mov
jns
repz
imul
negl
adc
cli
jg
mov
add
xchg
mov
xchg
push
icebp
movsb
repz
fidivrs
mov
add
dec
inc
jae
insl
cmpsl
mov
int
add
das
inc
cmp
cmp
jno
imul
dec
mov
pop
out
jno
hlt
mov
test
mov
jno
mulb
nop
push
imul
insl
jb
lods
pop
push
dec
movl
push
adc
mov
push
pushl
roll
neg
clc
or
jge
sub
add
lods
inc
ffreep
sti
out
add
bound
dec
dec
add
out
jmp
mov
hlt
out
ja
gs
xchg
mov
in
test
lock
das
int3
and
jle
cs
fstps
add
cmp
sbbl
fildll
xor
scas
stc
xlat
mov
mov
ret
jmp
aad
push
jb
je
xchg
out
imul
xor
cmc
adc
inc
jl
add
hlt
xchg
pushf
mov
mul
and
sbb
insb
imul
xchg
mov
xlat
movsb
out
icebp
sbb
jnp
add
ss
cmp
outsl
aad
scas
int3
test
or
push
xlat
pusha
fwait
jns
and
fdivr
push
mov
dec
xlat
outsb
jle
movsl
inc
stos
shlb
pop
leave
adc
stc
cmp
ret
imul
fiaddl
test
and
pop
and
jbe
mov
popf
xchg
cmc
fcmove
mov
loope
jnp
inc
popa
outsb
sbbb
clc
jbe
enter
fstl
mov
push
pop
enter
dec
sbb
mov
ret
shll
mov
sbb
dec
lock
addl
sub
repz
push
rcll
fisubrl
mov
sbb
sbb
mov
mov
pop
mov
jmp
pop
es
push
mov
je
mov
sbb
add
mov
xchg
mov
and
imul
aaa
insb
jae
in
lea
adc
inc
cmc
adc
xchg
cs
inc
gs
adc
fldcw
int
shlb
in
xor
aam
push
fwait
xorb
shlb
and
cli
in
cwtl
xchg
lret
bound
push
mov
adc
inc
in
cmpsl
xchg
jmp
aad
mov
es
fcomps
add
lods
icebp
mov
in
les
jns
ret
out
pop
mov
outsl
mov
fcomip
mov
out
pop
sbb
test
mov
push
call
or
fsubp
adc
lret
outsl
lret
mov
push
shlb
fnstcw
xchg
adc
in
call
cmp
and
mov
lret
xchg
fxrstor
loope
xor
fidivs
xor
and
inc
sbb
stos
cmc
dec
push
jno
mov
or
cmp
mov
dec
push
and
ljmp
pop
lds
dec
cmpsb
in
dec
push
incl
mov
cmc
pop
aas
push
xlat
cmp
repz
add
test
scas
push
out
addr16
xchg
int
adc
inc
fwait
jne
cwtl
push
mov
fcoml
push
popf
mov
lea
dec
mov
stos
inc
bound
mov
aad
popl
int3
xlat
mov
or
test
xchg
push
fisubrl
mov
andb
jns
xchg
xchg
aaa
insl
pushf
ds
pop
and
addr16
pop
mov
lods
inc
push
xor
fisttpll
bswap
mov
and
sahf
push
jmp
jl
push
push
sbb
lods
mov
stos
out
or
cltd
scas
add
scas
shll
adc
gs
clc
cmp
cwtl
into
jo
fsts
jmp
lret
mov
and
dec
add
in
mov
sahf
ret
int3
lret
fidivs
repnz
psubq
xchg
adc
push
inc
subl
cmp
ja
sub
jmp
push
xor
jl
cmp
adc
mov
jno
scas
stos
sbbb
frstor
xchg
push
xchg
aaa
out
push
gs
dec
xchg
xchg
cmpsb
fidivl
cmpsl
mov
in
lods
cwtl
jnp
mov
mov
cwtl
in
mov
mov
mov
scas
push
inc
push
cmpsb
or
sub
lcall
in
cmp
loop
push
out
rolb
cmpsb
push
xchg
pop
mov
dec
pop
mov
popaw
dec
fbld
inc
push
shlb
sbb
les
mov
add
dec
and
ret
fdivrs
test
cmp
add
dec
push
fstps
or
xor
dec
mov
shl
mov
xchg
in
jns
jle
pop
mov
andl
pop
icebp
xor
es
jnp
and
xchg
jge
mov
add
ds
test
icebp
adc
add
call
idivb
test
dec
dec
test
cli
in
or
push
sbbb
push
jno
loopne
mov
in
pop
or
aam
lahf
xor
subl
push
sub
xchg
xchg
mov
int
push
shl
mov
jnp
int3
pop
stc
jo
test
push
sbb
lods
cltd
xor
lret
les
je
mov
mov
ret
outsb
scas
inc
mov
xchg
push
jmp
sbb
filds
gs
jb
cmpsl
out
or
in
jecxz
imul
cwtl
movb
xchg
adc
push
and
pop
inc
cltd
and
add
jae
mov
cld
push
mov
jae
mov
xor
ret
cld
pop
hlt
insb
insb
cli
jge
lahf
sub
add
push
cmc
imulb
rcrl
jge
shrl
loop
sti
xchg
cs
clc
daa
arpl
sbb
jbe
ja
mov
sar
xchg
add
das
add
and
and
popa
cmp
xchg
jmp
pop
loope
lcall
test
jno
jmp
pop
xor
sub
ljmp
mov
in
test
xor
mov
jo
cli
test
cmpb
callw
jae
aam
addr16
sbbl
xor
adc
push
jg
enter
and
ror
cld
add
xchg
aam
xchg
mov
arpl
adc
lret
and
push
dec
cld
sbb
mov
adc
rcrb
jbe
cmpsl
andb
mov
leave
and
jne
shlb
cmp
ljmp
pop
push
mov
or
sbb
fstps
or
dec
call
imul
repz
jbe
ljmp
inc
daa
addr16
in
cli
ljmp
aad
jne
repz
sbb
jno
movsb
cmp
mov
pop
mov
jns
add
lret
cld
and
setnp
in
shll
insl
xor
std
adc
das
or
cmp
cmc
mov
pop
adc
and
enter
icebp
jl
shrb
int
jae
js
mov
add
mov
adc
xchg
loop
adc
xchg
xchg
mov
push
xchg
mov
dec
mov
sbb
test
stos
inc
decl
outsb
add
int
push
and
aam
push
das
aad
scas
ret
sub
inc
rcrl
cwtl
mov
pop
loopne
push
pop
mov
mov
push
jne
dec
cmp
xchg
lods
call
jmp
mov
fdivl
nop
outsb
call
aas
loope
mov
adc
mov
les
or
sbb
rorl
cmp
cmp
sti
cmc
xchg
leave
pusha
lret
push
jo
jge
xchg
or
jg
mov
roll
insb
fsubrs
or
and
or
and
push
cmp
cmp
dec
ret
cmp
aaa
xor
enter
cmp
push
gs
out
inc
mov
add
push
test
and
cmpb
inc
rolb
and
or
lret
inc
mov
cmp
test
sbb
lcall
sbb
lods
push
pusha
cmp
mov
ret
cmc
or
mov
inc
xchg
jnp
bound
cmp
xor
das
addr16
icebp
mov
mov
xorl
testb
dec
add
sarb
sbb
ds
mov
mov
es
push
mov
into
mov
and
pop
pop
test
xor
xorb
xlat
mov
cmp
mov
pop
cmp
mov
jo
or
stos
or
push
push
lds
sti
jbe
fsts
enter
sbb
mov
imul
pop
mov
lods
test
roll
inc
xchg
js
data16
mov
lret
into
inc
pusha
add
push
out
inc
pop
mov
in
mov
fidivs
push
add
add
mov
popa
cli
jmp
jno
inc
cmc
fwait
test
mov
test
jmp
and
hlt
mov
ljmp
push
mov
add
jbe
add
ds
loopne
pop
repz
rcll
mov
mov
mov
fsubrp
pop
test
inc
ficoms
lds
out
jb
add
xchg
daa
adc
test
pop
sarb
imul
cmpsl
jo
mov
push
mov
out
xchg
and
sbb
dec
icebp
mov
js
lahf
mov
mov
call
lahf
sub
shlb
adc
scas
inc
jmp
mov
fs
fnstcw
fisubs
mov
mov
inc
fdivs
jecxz
mov
cmpsb
scas
inc
fcomps
adc
pop
mov
scas
loope
mov
int
sub
sbb
jb
in
fucomp
adc
jle
cmp
cld
lcall
in
jmp
push
arpl
adcb
lds
dec
cld
pop
xchg
rcrl
jne
dec
bound
jle
add
xor
xchg
sub
test
dec
cltd
movsl
ret
xor
cwtl
xchg
pop
negl
stos
ljmp
sbb
aam
add
mov
mov
aam
mov
scas
mov
ss
int3
hlt
aas
sbb
lds
divb
mov
dec
add
rclb
mov
pop
addb
push
mov
pop
nop
psubsb
test
xchg
repnz
pop
lds
nop
mov
or
rorl
lret
sbb
inc
dec
cmpsb
pusha
and
or
in
data16
shrl
pop
add
pusha
repnz
repnz
mov
jecxz
das
jle
shr
das
mov
push
pushf
push
std
aam
fidivs
mov
inc
mov
and
sub
aas
sub
jb
mov
cli
in
push
lods
testl
lret
jp
andb
repnz
cmp
xor
fisttpll
sub
and
pop
jmp
adc
push
dec
mov
add
xchg
sub
lret
data16
js
pop
inc
addr16
lldt
loope
out
addl
fnsave
jno
sti
sti
xchg
sub
dec
dec
push
mov
jg
push
inc
data16
mov
sbbl
cmp
xchg
test
mov
mov
leave
pop
insb
add
mov
lret
bound
jmp
je
mov
mov
add
push
test
inc
outsb
mov
jno
das
or
stc
nop
xor
pop
jg
outsl
test
loope
pop
popl
jecxz
lahf
push
leave
sbb
mov
pop
ret
push
add
shll
xchg
xor
mov
xor
cmpsl
or
fimuls
mull
loopne
pop
aad
xchg
and
pop
orl
push
dec
and
leave
fnstcw
roll
pop
mov
pop
lahf
mov
sti
xor
add
sbb
ret
les
movsb
les
hlt
adc
stc
sbb
push
or
mov
mov
movaps
jns
cmp
jg
mov
adc
std
and
dec
add
jecxz
xor
jmp
push
fs
imul
sub
loopne
fsts
lds
and
push
popa
das
add
outsl
pushf
push
inc
aad
shrb
pop
mov
fistpl
lret
add
jge
arpl
dec
sbb
int
popa
ret
pop
add
aas
ret
loope
insb
push
mov
pop
out
iret
sub
in
lea
cli
enter
cmc
mov
fdivrl
push
pushf
inc
pusha
movsbl
movsb
stc
in
jno
sbb
add
ret
addr16
push
or
xor
and
fidivs
notb
mov
ds
in
lea
xor
dec
cmpsb
mov
pusha
push
add
fdivrl
pusha
arpl
dec
and
xchg
clc
or
fcmovne
fs
xor
mov
loopne
loopne
push
aas
stos
jno
insl
sub
int3
lret
xchg
pop
adc
push
dec
outsl
push
test
add
sbb
or
cmp
adc
fisubs
or
rcl
lret
jno
pop
mov
inc
imul
and
dec
loope
sub
inc
push
push
dec
pop
adc
cmp
mov
rcl
shl
lahf
push
cld
mov
scas
rcr
push
mov
cmpsl
ds
cmp
subl
stos
cmp
sbb
popf
xor
out
insb
fcoms
mov
cwtl
mov
mov
test
insl
out
in
rcll
les
sahf
xor
ss
or
or
pop
sahf
jge
hlt
mov
lret
mov
sub
enter
sbb
push
ds
pop
fsts
fs
pop
loop
push
ret
mov
cmpsl
ds
loop
dec
pop
icebp
mov
inc
fsubrp
adc
es
cwtl
ds
cmp
jno
add
sbb
push
mov
lods
inc
shr
mov
lret
inc
fnstenv
mov
xchg
cld
sbb
lock
jnp
aad
push
jle
sbb
xchg
ljmp
jmp
test
stos
in
sbbl
loope
jns
mov
movsl
icebp
mov
and
mov
cwtl
sti
movsb
pop
repnz
or
mov
lds
orl
add
sub
push
das
cmp
push
jle
and
pop
out
xchg
mov
xor
adc
mov
bound
fstl
je
cmp
lea
cli
outsb
sbb
cmp
fsts
and
mov
xchg
mov
cmc
pop
inc
test
ljmp
notb
out
imul
stos
sub
jmp
rcr
push
hlt
dec
jp
push
and
inc
js
or
hlt
mov
js
es
xor
mov
sti
xchg
notl
stc
test
fidivs
js
mov
les
mov
sub
das
sbb
cwtl
mov
lret
pushf
out
push
dec
adc
xchg
jmp
pop
lock
dec
mov
ds
pop
scas
repnz
in
pushf
xor
stos
scas
int
mov
push
jb
and
aaa
iret
mov
and
popa
into
gs
call
lock
and
mov
addr16
cmp
ret
jge
mov
pushf
xor
mov
adc
xchg
cmc
jecxz
out
lods
inc
add
repnz
or
mov
stos
inc
pop
mov
pop
pop
xchg
fidivl
icebp
out
and
mov
nop
test
push
inc
xor
adc
sarb
push
add
mov
mov
mov
push
jmp
test
shll
stos
add
sarl
loopne
lock
inc
mov
aas
orb
subl
push
xor
xor
mov
in
scas
or
or
inc
pop
ljmp
testb
in
lea
ret
shll
or
jno
pop
adc
adc
mov
add
push
stos
add
dec
xor
js
call
and
xchg
or
dec
cmpl
or
test
jo
or
addr16
inc
pop
loope
mov
mov
sbb
repz
xor
sub
cmp
loopne
fcoml
xor
fwait
or
sub
or
cmp
push
std
xchg
push
push
test
mov
icebp
movlps
shrb
jnp
leave
test
mov
mov
mov
das
push
push
mov
aam
mov
lret
mov
adc
in
jge
pop
and
es
out
push
xchg
xor
push
movsl
cmp
gs
adc
pop
jbe
mov
ja
jns
xchg
outsl
cmp
cmpsl
cmp
and
rorb
push
sub
mov
pusha
mov
popa
dec
cmp
xrelease
loopne
ret
adc
shrl
bound
xchg
pushf
iret
push
sub
mov
mov
jo
cmp
xchg
xchg
sti
roll
mov
ffreep
pop
outsl
jnp
out
add
inc
pop
pop
test
push
pop
mov
fnstsw
mov
dec
mov
pop
imul
add
mov
push
test
mov
xlat
in
fbstp
loop
cmp
aas
add
ds
mov
push
mov
ret
in
cld
popa
clc
sub
dec
call
cli
inc
sbb
inc
into
xchg
cmp
mov
mov
jp
scas
leave
mov
jecxz
inc
je
cltd
subl
mov
mov
jnp
je
aam
mov
insb
in
outsl
pop
jle
sarl
aad
shl
js
fstpl
and
fsubr
jecxz
lock
loop
inc
adc
les
bound
mov
in
xor
mov
or
dec
shlb
leave
pusha
jne
popa
mov
mov
jo
jmp
sti
adc
and
cs
iret
sbbb
test
xor
lea
out
scas
pop
divb
adc
loop
and
cmpsl
xchg
test
cmp
push
sbbb
faddl
adcl
dec
sub
loope
adc
lret
lods
cmpsl
jns
or
xchg
cld
clc
lahf
or
jbe
sub
mov
sub
xchg
push
mov
ja
scas
sbb
cltd
mov
aaa
xor
or
adc
rolb
test
inc
cmp
xchg
push
add
jmp
mov
das
adc
orl
dec
gs
rorl
jg
imul
mov
stc
pop
xlat
fdivs
xor
pop
mov
sub
sbb
mov
movsb
mov
mov
les
xor
xchg
inc
call
pop
and
outsb
push
jp
out
cwtl
jno
enter
and
inc
nop
cmp
cmpsb
mov
ds
sub
xor
arpl
test
mov
call
sbb
repnz
nop
sub
and
shr
pushf
daa
jo
sub
sbb
call
push
aam
push
movl
mov
bound
inc
std
or
out
shl
push
adc
sub
inc
sub
js
repnz
sbb
jecxz
outsl
stos
outsl
ret
sahf
jno
cltd
insl
mov
jp
and
dec
je
jnp
cltd
sbbb
pushf
out
into
jmp
sbb
shlb
shll
movsb
dec
pop
jl
xchg
cmp
push
push
and
inc
mov
xor
lcall
fwait
test
push
movsb
test
jg
inc
daa
dec
cld
jns
push
push
add
or
add
inc
xchg
addr16
xor
fimull
clc
popl
icebp
sti
jbe
test
popf
push
and
push
call
cli
addr16
sbb
jnp
cmpsb
pop
mov
mov
imul
gs
pushf
cltd
and
xchg
enter
inc
loopne
push
jg
push
sub
or
sbb
jecxz
addr16
mov
or
dec
out
mov
pop
insl
fisubrl
push
std
pop
mov
rclb
pushf
fdivs
add
sub
loop
addb
inc
fstps
ret
es
mov
outsb
jle
xchg
adc
inc
mov
mov
sbb
inc
fldlg2
pop
popf
add
or
xchg
cld
cmp
jg
test
cmp
insl
cld
in
movsb
repnz
hlt
adc
adc
cmc
stos
push
fdivr
push
aas
xchg
mov
je
add
sbb
orl
xchg
cmp
std
adc
pop
out
movsl
or
mov
out
fwait
test
mov
and
jno
insb
aaa
mov
movsb
call
out
addr16
pop
je
aas
xor
fdivl
mov
pushf
push
mov
ljmp
cwtl
test
hlt
mov
mov
jmp
pop
jge
sub
dec
inc
pop
je
rolb
xchg
imul
cld
jae
or
outsl
push
xor
stc
popa
lea
inc
pop
aad
test
fldt
jne
or
push
js
out
or
fndisi(8087
fisubs
inc
fs
jmp
hlt
sahf
lahf
cmp
pop
roll
int3
ds
fbld
movb
enter
and
shrb
cmp
pop
test
sbb
cmp
rolb
add
xor
jbe
mov
lods
xor
xlat
in
cmp
notb
cmp
mov
lock
xchg
jg
out
add
inc
pop
lock
dec
push
lds
pop
out
mov
out
ret
pop
int
xor
shrb
mov
cmp
xor
dec
pusha
lods
addr16
test
xchg
push
push
movsl
subl
xchg
mov
push
sbb
push
ja
es
iret
dec
sarl
divb
cld
pop
movsb
sarb
nop
aad
and
testb
lods
addl
clc
jns
arpl
fwait
andb
sub
inc
lcall
call
inc
pop
jmp
loop
mov
in
subl
data16
xlat
int3
jge
pushf
daa
out
pop
add
jmp
or
arpl
incb
out
pop
pushf
fldt
mov
mov
xchg
imul
aas
in
das
jo
shrb
adc
movsb
push
ljmp
scas
cmp
jno
pushf
lret
popf
hlt
cltd
fists
sbb
jl
cld
mov
jo
cltd
pusha
sbb
xchg
mov
adc
mov
or
dec
ret
int3
nop
push
xor
in
out
mov
fbstp
push
pop
push
movsl
mov
push
pop
loope
xchg
inc
lret
bound
sub
adc
data16
lds
push
jmp
mov
jno
dec
aad
imul
or
into
sbb
lret
test
add
out
mov
popa
pop
cmc
inc
ds
mov
xor
cli
xchg
loopne
ret
movsb
jae
xlat
sub
fnstcw
sub
push
mov
fwait
xor
jno
std
inc
sbb
insl
fstpl
outsl
cmpsb
cmp
add
mov
adc
stc
ficompl
push
cmpsl
mov
mov
adc
in
movsb
mov
nop
mov
push
pop
xorb
push
mov
pop
xchg
call
in
ja
daa
xchg
shrl
in
sbb
jmp
out
xchg
push
aas
mov
xlat
adc
in
jmp
fstpt
mov
ret
mov
fstpl
repnz
stos
or
cmp
in
divl
xchg
out
in
lcall
rcl
pop
mov
lods
outsl
adc
mov
aam
jmp
and
push
cmp
pop
jnp
and
fdiv
xchg
sub
stos
cmp
pop
test
aam
rorb
inc
fucomip
mov
cltd
mov
xchg
add
and
es
rcll
xor
mov
lret
scas
mov
jns
andb
pushf
jae
push
cmp
jno
inc
clc
xchg
mov
adc
loope
or
or
mov
fidivrl
mov
mov
ficoms
mov
mov
mov
or
adc
sub
inc
mov
dec
and
in
xchg
xchg
es
lret
divb
inc
adc
pop
jle
int3
push
mov
pop
lods
or
shll
mov
jb
js
lock
jo
add
int3
jne
out
push
push
pusha
fisttpl
and
sar
sub
test
mov
mov
aaa
adc
addr16
sub
pop
lods
ljmp
and
ljmp
xor
pop
sub
mov
mov
jmp
call
fidivl
scas
mov
push
or
lret
bound
cmp
and
jmp
or
push
js
imul
stos
mov
mov
cs
cltd
test
jnp
negb
orb
or
in
rcrl
addr16
mov
xor
repz
movsl
pop
xor
sub
enter
lret
xor
cmp
lods
pop
push
push
lods
jbe
inc
fbld
xor
in
sbb
fisubrs
inc
imul
jle
sti
fwait
mov
int
idivl
push
adc
mov
and
push
push
fistps
test
xor
call
hlt
aam
pop
test
sti
cmp
aam
aam
sbb
inc
jge
and
and
loope
dec
rolb
add
xor
fisubrl
sub
inc
mov
push
mov
pop
imul
pop
or
pop
lods
daa
in
xor
fidivl
imul
push
idivb
mov
mov
sbb
test
add
push
mov
out
inc
and
sbb
ficoml
mov
lock
and
cmp
dec
loope
xor
push
cmpsb
xor
sbb
mov
push
in
scas
mov
lahf
fcomps
ss
inc
add
jle
mov
inc
fidivs
mov
fsubl
cmp
pop
mov
fwait
jle
imul
xchg
iret
cmpl
stos
cli
pushf
icebp
push
cmp
jno
push
out
inc
fldt
loop
std
mov
sti
and
add
stos
inc
shl
sub
or
xchg
inc
loop
jmp
mov
mov
or
nop
daa
cmovg
fldl
pop
fistpl
or
sbb
popa
rclb
pushf
pop
mov
in
arpl
or
js
mov
aad
in
stos
testl
mov
xchg
sub
loop
jb
pop
data16
mov
enter
xor
add
jmp
dec
loopne
enter
xor
out
inc
adc
cmc
fnsave
mov
fs
movsl
mov
add
shrl
inc
adc
push
stos
cmovge
inc
int3
cmp
lret
hlt
xor
mov
pusha
ss
fsubr
xchg
and
pop
xchg
xchg
push
and
mov
xor
bound
clc
lcall
out
in
or
jns
pop
mov
mov
rcr
jle
push
ja
sbb
cltd
test
jae
outsb
push
lahf
sbb
jl
jo
cmc
push
jmp
sub
pop
mov
mull
aas
inc
int
orb
lock
insb
push
repnz
movsb
gs
mov
dec
lahf
mov
jns
stos
fsubr
scas
inc
das
push
jmp
add
test
popa
ret
imul
subb
push
sub
lea
add
mov
pop
mov
xor
xor
mov
mov
dec
dec
push
in
std
fidivrl
push
aaa
jmp
or
pop
inc
js
lcall
dec
loope
sub
ret
xchg
push
jecxz
int
mov
insl
xchg
xor
in
cmp
mov
inc
pop
cmp
push
insb
cmp
test
mov
and
mov
les
dec
rcrl
aad
in
and
lods
inc
push
mov
push
jmp
mov
in
pushf
inc
scas
xchg
dec
inc
daa
inc
sub
inc
pop
or
rclb
or
cmpl
loope
arpl
push
out
mov
std
shll
mov
divb
and
fwait
ja
into
mov
cmpb
push
xor
stos
out
mov
popa
mov
shll
in
push
dec
and
mov
cs
mov
repz
mov
adc
inc
xor
lret
mov
and
jl
cmp
int
dec
sub
stos
dec
or
dec
loop
out
stc
inc
push
pop
sbbl
or
fwait
pop
call
sub
jecxz
mov
pop
jmp
cmp
or
xor
mov
cltd
out
enter
int
cli
movl
pop
cmp
xor
xchg
shrb
jecxz
xor
sub
dec
sub
sub
inc
mov
or
pop
loope
or
arpl
addr16
int3
mov
and
lock
aas
dec
mov
pop
addr16
dec
mov
lods
inc
loop
ljmp
sub
std
sahf
in
iret
or
adc
shrb
add
cmp
and
push
fistpl
push
stos
and
xchg
mov
xchg
mov
testl
cltd
mov
aam
dec
fbstp
ret
outsl
sti
push
out
jne
push
iret
pop
arpl
sub
or
cmp
scas
sub
shrl
rcrl
pushf
jge
or
out
iret
aad
sub
jae
or
inc
dec
jg
andb
push
mov
repz
ds
repz
aaa
sbb
pop
adc
jne
adc
push
in
in
sbb
xchg
and
and
sub
jmp
push
jl
mov
xchg
mov
xchg
mov
or
call
lret
sbb
ret
and
sub
pop
jns
js
jecxz
and
xchg
rorl
mov
push
bnd
cmp
mov
jp
dec
xchg
sarl
pop
sub
adc
jmp
ja
inc
les
and
je
mov
push
lods
xchg
mov
mov
inc
in
pushf
mov
fnstcw
adc
inc
mov
aaa
call
in
insb
fisubs
inc
mov
xor
xor
cld
ret
sub
add
sub
nop
cmp
loopne
mov
pop
mov
cmpsb
and
adc
icebp
lret
cmp
mov
roll
mov
leave
and
popf
sub
sbb
xchg
int
stos
ss
jge
ljmp
mov
out
lods
sbb
sbb
mov
les
push
push
lea
pop
aaa
push
cmpsl
popf
adc
lods
aam
outsb
es
out
subl
inc
arpl
mov
and
fs
xor
sarb
mov
sar
adc
test
pop
xchg
lock
jl
xorb
imul
ds
stc
mov
sub
insb
js
bound
insl
fists
mov
ljmp
sti
sahf
pop
imul
adc
add
fnsave
sarl
jnp
and
pop
lds
sub
cmpb
or
xchg
mov
stos
pop
inc
sbb
mov
xchg
dec
sbb
in
or
sub
sti
mov
mov
xor
repnz
xchg
aas
out
jne
push
and
repnz
xor
and
jnp
mov
out
jg
xor
fdivrl
gs
sahf
outsb
xchg
pushf
or
and
or
pop
fbstp
sub
scas
mov
xorb
call
dec
mov
call
mov
xor
pop
aad
rcrb
ds
push
test
or
sub
into
push
and
lods
imul
imul
and
xor
lods
inc
fisttpll
pop
in
into
push
subb
popa
imul
stos
jmp
sub
aas
arpl
stos
stos
test
cmpsl
or
data16
popa
cmp
sahf
or
mov
mov
faddp
rorl
test
ffreep
inc
in
inc
add
jg
sub
negb
rcrl
jg
outsl
cmp
mov
add
into
je
jge
inc
push
mov
popf
cmpsl
sub
sub
add
sub
dec
test
and
pop
repnz
and
movsl
js
in
xor
sbb
cltd
insb
movsb
das
jp
repz
stc
popf
loope
and
icebp
pop
stc
insl
mov
lahf
pop
pusha
inc
mov
insb
add
das
push
xor
je
pop
and
dec
jne
ds
std
push
jecxz
or
rolb
pop
out
mov
in
cmpl
rcr
pop
or
mov
sti
mov
jmp
add
leave
pop
lock
and
pop
lret
negl
ret
lock
jno
sub
mov
adc
xlat
ljmp
jle
pop
shlb
and
cwtl
sub
or
sbb
xchg
dec
icebp
mov
cmp
scas
cmpb
mov
arpl
xor
fisubs
test
int
and
faddl
fs
rcrb
pop
imul
insl
addr16
nop
adc
sub
fstpl
and
sub
add
sti
repnz
fisttpl
add
ret
cmp
push
mov
push
ljmp
call
mov
and
sbb
lret
add
xchg
cmpsl
lret
cmp
cwtl
mov
xlat
lds
add
stos
lahf
mov
dec
adc
das
mov
gs
stos
xchg
cmp
test
mov
loop
xchg
out
jl
adc
loop
cli
push
test
mov
fucomi
test
test
lea
test
and
iret
pop
dec
cld
lcall
xchg
into
dec
loopne
xor
inc
enter
je
mov
lahf
incl
mov
popa
lahf
pusha
inc
pop
inc
push
inc
rcr
xor
and
mov
fdivp
pop
and
jl
push
mov
stc
sbb
and
mov
lea
call
gs
cmpsb
sub
xchg
repz
pop
sahf
jp
xorb
dec
pop
xchg
xor
jg
xchg
rorl
in
jno
jns,pn
insb
imulb
adc
lods
xchg
push
loope
mov
call
pop
adc
sub
add
push
in
fcom
add
mov
gs
or
jo
fmul
loopne
ret
out
jae
or
push
jb
lahf
dec
push
dec
sub
icebp
bswap
sub
jno
std
xlat
fs
cmp
mov
outsb
inc
imul
popf
sub
xchg
or
movsb
repnz
call
add
mov
or
loope
xor
lahf
lret
jae
stos
in
push
or
jo
in
sarl
fistps
and
or
fstps
cmp
pop
aaa
shr
push
jne
in
xor
mov
mov
stos
push
or
cs
mov
xlat
outsl
or
cltd
pusha
sub
jnp
je
mov
mov
push
mov
rsqrtps
jp
inc
bound
fnstenv
cmc
pop
mov
ret
mov
sbb
inc
adc
jae
and
js
sbbb
xor
ja
mov
dec
test
ficoml
xchg
xchg
pop
test
ja
cli
test
pop
out
clc
push
imull
push
scas
movsl
cmp
aad
sbbb
inc
outsl
pop
ret
gs
lcall
xchg
push
push
out
jns
in
dec
shrb
mov
jmp
rcrl
pop
aam
mov
sub
decl
test
cld
les
and
xor
pop
mov
and
ret
push
mov
cmp
mov
test
cs
push
xchg
je
je
add
add
leave
push
insb
adc
repz
or
dec
loop
mov
mov
xor
mov
in
insb
dec
negb
icebp
cmp
andl
jae
pop
movsl
test
and
mov
mov
xchg
movsb
repnz
push
notb
adc
adcb
stos
inc
inc
mov
arpl
mov
xor
mov
jmp
andb
push
pushf
pop
dec
lret
jl
lock
push
test
test
in
xchg
sub
xlat
mov
rorl
and
sbb
xchg
sbb
lret
add
in
or
pop
iret
in
sbbl
dec
mov
mov
add
or
int3
arpl
leave
sahf
push
sti
dec
in
sbb
daa
ds
lret
pop
into
fsubrl
stos
divl
sub
in
in
dec
mov
mov
jb
insb
lret
dec
lock
lret
push
cmp
outsb
xor
and
pop
push
inc
mov
into
sbb
jno
or
push
add
repz
cmpsb
cmpsl
sub
fcompl
cs
lret
aaa
into
xor
cmp
testl
pop
cmc
in
ja
xchg
sbb
add
push
ret
xor
lds
dec
scas
icebp
sub
add
gs
loopne
call
fcmovnu
push
outsl
inc
jno
lea
out
and
or
sub
push
dec
jmp
test
xor
pop
loop
cltd
xlat
out
xor
cmp
in
inc
clc
sahf
in
xor
call
nop
push
adc
push
sbb
cmp
movsb
lds
mov
mov
inc
notl
loopne
mov
cmpsb
das
mov
add
adc
push
jno
pusha
int
or
dec
add
cmp
jne
mov
push
fs
ljmp
inc
lret
cmc
dec
dec
sub
sarb
sub
sbb
push
shll
jbe
scas
aaa
xchg
in
xor
scas
and
jecxz
nop
add
mov
mov
outsb
mov
xchg
xor
pop
lock
repnz
sbb
inc
mov
adc
ret
mov
mov
push
sbb
bound
and
jg
sub
sub
adc
sub
add
push
dec
pop
std
sub
stos
add
inc
pop
push
push
daa
or
mov
dec
cmp
jb
arpl
inc
faddl
fcoms
xchg
psubd
adc
and
xchg
hlt
mov
mov
addr16
mov
out
lret
add
push
mov
adc
lock
lods
pop
pop
or
xor
imul
mov
mov
xor
leave
jg
adc
outsb
mov
scas
add
out
movsl
loop
mov
fildl
shr
push
xchg
or
pop
mov
adc
cmp
xor
and
adc
mov
pop
jmp
or
xor
mov
sbb
cld
sub
push
pop
or
pop
mov
fisubl
inc
scas
loopne
dec
in
cld
xchg
add
xor
push
test
mov
mov
mov
pop
mov
lret
pusha
inc
stc
cmp
cmpsb
in
out
inc
jp
xchg
xchg
repz
mov
jno
xchg
icebp
ret
ss
push
mov
cmp
dec
sub
insl
push
mov
sub
test
lea
xor
push
jmp
xchg
mov
or
cmp
pop
testb
mov
imul
or
nop
movsl
sbb
out
mulb
xor
in
cmpsb
and
lcall
hlt
cmp
mov
or
dec
test
std
mov
sbb
and
adc
les
in
test
sahf
pop
inc
mov
mov
int
sub
loopne
xor
inc
xchg
je
dec
dec
loopne
mov
int3
int
clc
lods
dec
cmpsb
ror
and
mov
imul
sbb
or
sbb
sub
push
pusha
sub
cmc
and
jns
adc
rcl
add
pop
mov
fidivs
popa
or
inc
mov
push
addl
inc
add
mov
movsb
ja
fildl
xchg
adc
dec
aad
mov
and
and
push
mov
add
lods
push
mov
pushf
ficompl
test
add
adc
call
cli
test
fcomip
test
cmp
pushf
push
sub
fucom
dec
push
mov
repnz
notb
sbb
jg
pop
in
iret
mov
icebp
xchg
and
xchg
shlb
jno
mov
xchg
jecxz
mov
sbb
movsb
push
pushf
fucomip
or
mov
xlat
or
loope
in
jae
push
int
cmpsl
je
lahf
rorl
cmp
and
out
push
fcoml
fcmovb
std
mov
movl
nop
and
sbb
shr
movb
cmp
sbb
out
jbe
ror
cltd
adc
inc
mov
outsb
or
idivl
jle
inc
mov
cmp
je
pop
ret
and
adc
imul
inc
inc
inc
sbb
fisubrs
jnp
jbe
mov
insb
xor
mov
mov
xchg
leave
popl
jmp
loope
lcall
dec
in
pop
rorb
hlt
rcll
mov
xlat
sahf
mov
dec
std
in
sub
out
jle
pop
mov
in
pop
mov
or
sbb
xchg
mov
jl
cmp
nop
push
loope
shl
add
das
dec
mov
sub
mov
stos
cld
mov
leave
fwait
pop
cmp
or
test
push
push
jbe
into
add
movsl
cmpb
cli
adc
push
aam
pop
cmp
out
push
stc
pop
test
ljmp
cmp
test
js
fstpl
and
test
popa
js
add
pop
push
sarl
xchg
cmp
fwait
mov
roll
xor
sbb
testl
jbe
pop
test
jp
pop
cld
fdiv
sub
jns
mov
xchg
pop
fnsave
sar
push
nop
test
cmpl
jmp
mov
shrl
dec
jl
loope
push
imul
mov
cmp
lock
bound
mov
dec
adc
aaa
jmp
test
cmpsl
pop
xchg
mov
adc
stos
xchg
cmp
cmp
fstps
mov
xor
jo
mov
clc
nop
in
pop
mov
push
sbb
cmp
stc
sub
test
fcomps
sub
inc
iret
push
inc
int3
in
mov
outsl
inc
mov
icebp
mov
je
add
pop
cmp
mov
call
ds
or
in
adc
xchg
divb
aaa
jb
inc
mov
mov
out
jb
jge
scas
lock
ss
push
cmc
or
jae
pop
mov
pop
cld
jge
inc
jmp
and
push
adc
es
aaa
je
out
add
cmpsb
mov
mov
mov
mov
xor
mov
popa
into
add
pop
xchg
insl
push
int
sbb
out
mov
jp
add
icebp
inc
sub
sbb
test
andb
mov
fxch
pusha
clc
push
pop
out
pop
ds
fld
outsb
pop
pop
mov
dec
outsb
in
xchg
stos
push
sub
xchg
pusha
int
fwait
cmp
mov
hlt
mov
and
leave
fadd
popf
and
stos
lret
mov
xchg
cli
sarb
cmp
push
sub
dec
jbe
subb
pop
or
into
out
add
loop
push
je
fnstsw
xchg
mov
aas
push
push
pop
dec
mov
pop
aas
add
lods
faddl
test
aam
and
cmpsb
jge
dec
sub
pop
out
mov
hlt
sar
rorb
repz
fdivrl
sub
shrb
stos
jne
pop
sbb
adc
mov
jle
sbb
je
xchg
sub
leave
cwtl
jmp
or
jbe
dec
lahf
jno
sub
je
adc
push
xchg
pop
je
jae
push
test
arpl
sub
pop
lods
jne
cmp
sub
rcl
aaa
push
add
jg
out
pop
mov
dec
adc
rcrl
fistpl
inc
or
or
fisubrs
push
repnz
les
subb
mov
jbe
repnz
outsb
add
outsl
and
inc
push
jecxz
xchg
stc
adc
mov
es
addr16
inc
cmp
add
push
add
mov
les
jle
das
mov
clc
inc
xlat
fnsave
sub
pop
ret
adc
jns
fwait
cwtl
xchg
imul
fidivrl
sbb
sti
call
cmp
mov
xchg
sbb
xor
jae
jmp
mov
xor
aaa
test
jb
add
rcll
push
inc
out
sub
inc
fnsave
outsb
lahf
and
sub
stc
sub
notb
jle
push
nop
cmc
fwait
jl
iret
imul
mov
jb
dec
mov
pop
lahf
add
pop
pop
pop
das
clc
insl
int
scas
es
in
popa
inc
clc
cmpw
scas
inc
inc
out
sbb
shlb
cmc
push
lock
xchg
scas
and
imul
mov
jp
iret
xor
mov
mov
inc
data16
push
xchg
mov
add
fldln2
andb
orl
pop
pusha
adc
xlat
sbb
sub
shll
shlb
xchg
shll
cs
movsl
dec
rcrl
arpl
cld
sahf
jle
xchg
and
add
jmp
jmp
scas
cli
fmul
mov
xor
push
mov
movsb
mov
push
aas
adc
fsubrp
dec
data16
gs
in
dec
dec
cmpsl
loopne
mov
dec
stos
loop
lahf
bound
push
jmp
inc
les
xchg
xchg
scas
jg
add
ljmp
popf
popa
cmp
mov
filds
and
lock
dec
dec
in
or
in
cmp
pop
dec
mov
mov
and
popf
arpl
push
scas
xchg
jle
mov
fs
repnz
xor
fisubrl
cld
mov
pop
ljmp
imul
cli
imul
insb
xlat
test
popf
mov
sbb
or
and
inc
push
jbe
push
ret
xchg
mov
cmp
cmp
xchg
lock
data16
push
mov
or
cmpsl
out
xor
in
pop
sbb
mov
jl
inc
es
or
dec
mov
mov
fcomps
jle
sub
or
sarb
pop
adc
mov
xchg
fcmovnb
and
add
divl
sbb
sbb
sub
popa
aas
inc
push
loope
dec
fwait
fmuls
dec
pop
inc
stc
orl
mov
cmpsb
cmp
aad
daa
dec
shlb
lcall
push
loope
dec
out
out
inc
xor
out
or
mov
push
dec
pop
insb
xor
les
jmp
push
pusha
or
or
mov
add
sbb
inc
add
ljmp
divl
and
mov
xlat
push
test
add
inc
adc
dec
shrl
test
aam
push
inc
mov
sbb
jp
push
mov
mov
insb
dec
fwait
lcall
fcmovnu
in
hlt
cwtl
stc
and
or
hlt
pop
mov
mov
pop
and
lret
cmp
cmp
outsl
add
push
adc
insl
movsl
push
and
inc
jl
xchg
fcmovbe
in
mov
imul
lods
xchg
xor
mov
jb
imul
lock
ret
popa
nop
jle
sbb
shlb
mov
in
fiadds
mov
jle
jbe
les
inc
push
xchg
test
jnp
sbb
mov
mov
sub
push
sub
push
and
adc
mov
push
pop
rclb
popa
jnp
dec
and
cmp
pop
mov
jge
or
cltd
outsb
mov
out
movl
decb
xchg
fcmovbe
mov
mov
jbe
cltd
cs
ljmp
fwait
lods
dec
mov
xchg
leave
lea
movsb
pusha
pop
pushf
jo
sub
dec
pop
cmp
cmp
aam
orb
pop
bound
adc
movsl
mov
push
jmp
hlt
pop
push
sub
dec
xchg
imul
cmp
shrb
hlt
mov
dec
mov
push
and
xchg
push
push
fincstp
ss
dec
pop
loopne
or
xchg
xor
and
sbb
mov
arpl
mov
push
and
lods
pop
jno
pusha
cli
dec
out
xor
clc
add
or
pop
arpl
jmp
aaa
push
push
and
mov
push
outsl
loope
mov
dec
das
mov
jae
or
adcb
arpl
outsb
mov
je
sbb
aam
test
sbb
in
cmp
mov
mov
lret
add
or
jbe
aas
xor
cltd
std
iret
jmp
pop
push
gs
xchg
pop
xor
add
sbb
cmovle
inc
mov
pop
cli
test
push
or
pop
inc
fiaddl
cld
ror
pop
dec
mov
das
outsb
add
mov
mov
jo
add
dec
loope
fmull
jns
mov
sub
outsb
xor
jo
es
dec
sub
out
sbbb
or
pop
xor
sub
hlt
jmp
fwait
pop
inc
repnz
call
mov
xchg
stc
sbb
jo
pop
xor
mov
cli
push
out
push
addr16
sub
push
mov
call
pop
repnz
pop
or
addr16
cmp
and
cld
rcll
mov
or
pop
adc
sbb
xchg
cs
push
lods
pop
inc
cwtl
mov
jnp
in
pushf
rcl
jo
xor
jl
xchg
enter
mov
inc
das
inc
fucomi
sbb
and
rcll
mov
xor
mov
mov
stos
sub
jecxz
xchg
jmp
addr16
jnp
jns
sti
fwait
jne
inc
lds
popa
das
divb
int
mov
fs
inc
add
add
xchg
pop
aaa
add
clc
fsts
lret
mov
mov
icebp
xchg
or
mov
test
cmp
or
cli
jecxz
lahf
xchg
aaa
mov
add
bound
push
push
shrb
mov
inc
or
xor
lock
lcall
ja
orl
insb
stc
test
cmc
mov
lret
cld
cmc
inc
mov
lock
or
jecxz
push
mov
dec
bound
in
jne
mov
add
into
pop
sahf
in
data16
pop
mov
cmp
inc
cmpsb
arpl
and
loopne
cmp
add
dec
mov
xlat
test
push
sub
and
jmp
or
sar
push
xchg
into
and
das
stos
push
push
or
mov
fs
icebp
mov
aaa
rorb
or
mov
cltd
adc
rcrb
daa
test
data16
mov
jl
mov
lods
mov
pop
mov
adc
jmp
inc
cwtl
rolb
ja
pop
fldl
adc
inc
mov
jns
cltd
inc
xchg
int3
xor
or
movsl
xor
and
mov
clc
in
stc
es
aam
mov
jge
sub
lcall
mov
inc
cmp
push
shll
mov
scas
ret
push
outsl
pop
int
out
inc
testb
sarb
lea
imul
or
test
mov
add
ds
lods
or
inc
xor
into
mov
repnz
sbb
sbb
cmc
loopne
mov
push
xlat
mov
les
mov
mov
stc
jp
leave
scas
test
jbe
int3
push
movsl
jb
push
test
loope
test
movsb
cmp
mov
dec
adc
jae
out
lods
pop
inc
pop
and
fldt
call
jmp
inc
mov
sbb
mov
pushf
mov
fisubrs
gs
rclb
pushf
nop
adc
add
jge
pop
mov
orl
cmpsl
push
sub
or
lods
std
pop
ds
icebp
or
fldt
lret
rorb
mov
or
mov
cmp
out
enter
mov
stc
jl
outsl
mov
enter
dec
xor
jmp
ret
imul
cld
cmp
mov
cmpsl
cli
inc
or
cmp
and
cwtd
pushf
pop
jge
xor
mov
fs
xchg
inc
into
mov
mov
rcrb
xor
shl
in
test
jne
sub
in
mov
in
mov
mov
insl
xlat
xor
push
jge
sub
sbb
lods
ja
sbb
push
xchg
jmp
fwait
mov
sar
pmaxub
movsb
mov
mov
mov
pop
mov
inc
dec
and
std
jo
cmp
ret
xlat
repz
jno
xchg
cmp
jmp
ret
sahf
stos
xchg
aam
aam
jne
clc
inc
push
pop
mov
jl
jl
xchg
push
call
int3
xchg
sbb
out
jbe
jmp
in
adc
sub
icebp
xchg
jns
push
push
rol
fimuls
adc
sbb
mov
jno
jecxz
mov
push
iret
dec
jg
jbe
cmp
in
lods
enter
fisttpll
push
dec
mov
lcall
arpl
cmpsb
mov
pop
popf
jmp
push
and
cmp
imull
mov
lcall
and
xor
pop
jmp
xor
cmp
mov
int
mov
mov
imul
mov
jns
push
push
inc
gs
jae
mov
scas
and
decl
pop
ja
rol
pop
add
or
pop
xor
cmp
inc
fstpt
bound
mov
mov
xchg
ret
stos
mov
mov
fbld
push
mov
and
cmp
xchg
sub
test
jl
lret
cmp
sahf
inc
xor
jg
and
dec
mov
int
je
test
popl
adc
lcall
and
mov
cs
pop
std
xchg
dec
mov
cmpsb
cmp
jge
shll
bound
jbe
jg
pop
mov
jge
mov
out
mov
pop
icebp
xor
mov
mulb
out
add
push
xor
add
cmc
mov
movsl
inc
push
xor
jge
xor
jnp
jae
cmp
scas
in
stos
lea
movsl
xor
lret
ja
in
jmp
scas
imul
into
mov
ja
jbe
jne
fcoml
xor
push
adc
sbb
ljmp
fidivrs
clc
add
add
inc
lahf
popf
push
nop
xchg
inc
or
aas
int3
pop
cwtl
xlat
xchg
add
push
sar
xor
or
adc
cli
movsl
jne
mov
dec
xor
jbe
dec
in
xchg
push
insb
lds
int
aad
jnp
mov
jno
pop
cmp
inc
mov
imul
cmc
inc
fsubrs
lahf
lds
add
in
pop
jno
insb
cwtl
cltd
loopne
fcmovnu
mov
adc
and
stos
xor
xlat
test
sbb
insb
or
xor
aad
lcall
cmp
jbe
shll
insl
xchg
adc
mov
cmp
mov
psubsw
sub
inc
or
push
mov
lahf
mov
fwait
mov
add
addr16
cwtl
fisttps
insb
lods
rcrb
sbb
xchg
xor
gs
sbb
xchg
sub
or
xor
scas
mov
xorb
gs
lods
push
sahf
xor
cmpsl
icebp
test
sub
jl
push
fwait
add
pusha
idivl
fstpl
les
fs
stos
adc
or
aaa
push
outsl
jbe
mov
push
es
push
scas
inc
adc
push
jo
mov
popl
jg
cmp
leave
movsb
cltd
pop
push
popa
xchg
stos
xchg
jne
insl
mov
push
xor
sarb
sub
xchg
jge
hlt
push
into
addl
sub
adc
sbb
popa
xor
inc
ljmpw
loopne
xor
lret
out
dec
mov
or
mov
ret
push
mov
pop
je
test
cmp
and
scas
inc
lods
mov
lea
sub
shll
jno
jle
imul
mov
xchg
fsubr
imul
in
clc
popl
push
aaa
sub
xor
inc
clc
inc
lods
mov
into
gs
std
pop
test
pop
add
push
lcall
push
mov
rcrl
cmp
adc
or
lret
and
push
stc
cmpsl
sbb
pop
lock
sbb
push
jl
dec
icebp
ljmp
int3
jg
push
mov
xchg
push
test
mov
jbe
cmp
pop
test
xchg
stos
test
mov
push
jns
imul
movsl
cld
mov
js
sbb
std
mov
jae
pop
cli
pop
pushf
xor
arpl
and
orb
arpl
dec
testb
ljmp
icebp
and
iret
int
mov
fimuls
lahf
sub
imul
mov
inc
movsb
fists
sbb
xchg
out
cmpsl
imul
loopne
jp
imull
adc
lock
add
idivb
pop
jo
cmpsb
or
add
daa
lods
inc
pop
sub
dec
cmp
add
pop
push
out
nop
add
shrl
adc
mov
ret
hlt
das
sbbb
xchg
dec
dec
mulb
jbe
stos
loop
daa
sbb
jns
xchg
pop
leave
popa
inc
popa
push
outsb
movsb
dec
pop
cmpsl
enter
push
in
in
stc
push
adc
mov
push
insl
mov
xchg
in
out
inc
mov
sbb
mov
xchg
add
sub
dec
and
push
insb
cwtl
das
icebp
sbbb
lret
push
push
sahf
dec
pop
or
pop
std
add
jb
push
sub
adc
mov
test
fisttpl
rcr
and
sub
xor
in
sub
add
fcoms
add
roll
sub
sahf
and
lods
push
enter
xchg
scas
jecxz
inc
xchg
in
out
flds
pop
mov
movsl
aas
rcl
jge
adc
inc
dec
hlt
jl,pt
pop
and
mov
sub
mov
mov
ret
gs
xor
sbbb
jmp
inc
or
xor
loope
lods
daa
pop
repz
pushf
cmpsl
divb
cs
jns
data16
dec
mov
add
sbb
pop
cmpsb
sub
js
cmc
test
xlat
push
mov
icebp
inc
inc
leave
jmp
sti
gs
sahf
xor
or
mov
les
xor
fwait
aas
cmp
cmc
mov
lret
sti
push
and
dec
jnp
aad
adc
sbb
imul
add
les
cmpl
xor
popf
xor
je
dec
das
mov
mov
pop
imul
and
cmp
inc
ljmp
dec
inc
jo
call
inc
and
or
mov
sub
sub
clc
cmpsl
push
ret
hlt
scas
jne
fsub
mov
mov
ret
jle
inc
repnz
or
jge
mov
lds
xchg
sti
inc
push
imul
sbb
out
mov
pop
and
repz
sbb
ret
mov
ljmp
jb
scas
shll
dec
jle
nop
mov
lahf
iret
data16
mov
add
jnp
lods
pushw
cltd
mov
loopne
mov
push
aas
push
jmp
sub
jo
pop
dec
jo
hlt
xor
sub
cli
xchg
test
or
lret
xor
loopne
push
and
lock
rcl
cmc
stc
lcall
repz
jecxz
add
test
imul
cltd
mov
popf
insb
add
inc
stos
inc
stos
stos
adc
xor
stc
xchg
mov
dec
pop
jno
cmp
cmp
ret
lcall
int3
push
xor
imul
notl
push
sbb
push
cmpl
lcall
cmpb
adc
cmp
jge
push
sub
movsb
add
bound
shl
and
jns
push
stos
rcr
pop
sbb
mov
jl
std
xchg
pop
stc
test
inc
xchg
add
pop
mov
scas
sbb
add
xchg
in
and
xor
cmp
dec
out
mov
cmp
or
gs
cmp
aad
push
insb
sub
mov
mov
push
pop
mov
rclb
daa
inc
mov
xchg
sub
repz
and
xchg
fsubrs
cmpsl
outsb
cmp
mov
into
enter
pop
cld
xchg
rorl
leave
insl
pop
cld
adc
or
lcall
mov
loopne
mov
sub
mov
leave
xor
and
jae
sbb
sbb
jno
add
aam
addr16
xchg
xchg
adc
pop
sahf
cltd
push
sbb
cwtl
and
mov
test
xchg
in
sbb
fisubl
jnp
adc
cwtl
lods
pop
dec
scas
xorb
mov
mov
push
int
pop
xor
leave
ret
jns,pn
and
lcall
ret
shrl
mov
out
aas
lcall
mov
sub
jbe
fistpll
mov
jmp
scas
push
sbb
xor
jp
out
push
cmp
add
inc
mov
mov
dec
sub
pop
push
push
sbb
ss
cmp
push
inc
sbb
pop
sahf
push
cmp
jg
leave
mov
adc
sub
mov
pop
lock
cmc
push
and
popa
faddl
sbb
and
xor
xchg
mov
test
adcl
ret
jne
sub
ja
lods
cmp
mov
sbb
mov
in
loopne
cwtl
jmp
fidivs
xor
mov
aaa
pop
sbb
movsbl
cmp
lahf
cmp
gs
fwait
test
hlt
data16
enter
mov
sbb
and
cmp
pop
aaa
fsubrl
ss
leave
cmp
arpl
cmpsl
dec
mov
and
jno
mov
in
mov
sbb
adc
xor
mov
loop
inc
pop
popa
or
stos
inc
pop
out
test
jge
pop
stos
mov
xchg
jbe
repnz
mov
in
xchg
stos
push
lahf
sahf
cmp
enter
mov
iret
mov
mov
or
fisubrl
std
adc
mov
add
je
cmp
bound
loope
pop
testb
mov
push
jae
fstpt
pop
popa
clc
mov
leave
scas
push
jg
rclb
or
fsubs
popa
dec
movsb
sbb
insb
js
clc
mov
orb
ficoms
push
sbb
ds
das
fwait
and
sub
lahf
sbb
push
adc
es
dec
pop
xchg
or
sub
pop
insb
xor
inc
daa
cli
stc
data16
fisubs
gs
mov
out
or
mov
or
and
fimull
mov
movsl
xchg
pusha
adc
xchg
cs
mov
add
icebp
aaa
pop
mov
test
pop
sub
inc
pop
push
jecxz
sub
shlb
push
push
sbb
sbb
mov
xor
clc
icebp
mov
push
mov
mov
pop
in
adc
movsb
scas
setne
lock
das
repnz
jmp
mov
lods
inc
fistpl
sti
lret
lds
fsts
dec
mov
and
popa
aaa
in
lret
jae
mov
jb
shrl
cmp
test
mov
jg
pop
leave
cmp
pop
test
addr16
xchg
adcl
jecxz
sarb
push
xor
xor
fimuls
mov
push
imul
es
nop
test
mov
inc
rolb
sbb
decl
fidivl
push
leave
fcoms
mov
fldl
dec
mov
fs
iret
call
mov
sub
xor
xsha1
cmpsb
or
cs
loop
or
add
cmp
sub
lret
sti
add
dec
mov
cs
leave
mov
dec
out
push
mov
cmp
mov
mov
lahf
and
mov
out
data16
cmp
cmc
mov
pop
mov
xor
mov
or
xorb
pop
lahf
out
inc
dec
push
adc
jge
test
repnz
scas
add
jle
dec
daa
dec
mov
arpl
push
out
lcall
in
out
outsb
out
loopne
pop
mov
in
jno
lea
call
and
inc
inc
pop
incl
movsl
fs
cmp
and
inc
fsubr
and
mov
mov
push
cli
xchg
inc
mov
pop
adc
dec
pop
scas
js
clc
pusha
push
push
decb
jno
ret
dec
pop
pop
arpl
into
enter
fdivrl
ret
ret
repnz
bound
into
cmp
icebp
mov
pop
dec
jecxz
incb
mov
sbb
pop
jecxz
or
mov
rcl
fwait
push
test
dec
idivl
dec
mov
pop
dec
test
jnp
xchg
mov
sarl
pop
outsl
or
lahf
and
and
xor
sbb
jbe
jp
sbb
data16
sub
loope
leave
pop
inc
jae
mov
call
cwtl
dec
outsl
push
jnp
xor
cld
pop
push
stos
scas
cld
xchg
loope
or
dec
mov
jge
xorb
xor
xchg
sub
lods
jp
sub
pop
jl
mov
lock
cmpsl
sbb
sahf
or
cld
push
js
xor
pushl
pop
mov
xchg
dec
push
pop
mov
js
mov
push
pop
repnz
sbb
push
stos
inc
cltd
mov
cmp
inc
stos
loope
gs
dec
add
jns
add
push
jns
pop
xchg
mov
es
jecxz
insl
cmpsb
push
mov
nop
test
mov
inc
cltd
fwait
push
jne
outsl
inc
pop
xchg
aas
jge
inc
rcrb
push
cmp
inc
jno
rcr
sbb
dec
and
lds
mov
pop
sub
fidivrs
mov
not
push
mov
push
pop
xor
loopne
gs
mov
stc
mov
inc
and
inc
ss
jnp
test
sbb
xchg
mov
clc
testb
xor
into
pop
test
or
popa
cmpsl
ret
movsl
scas
push
push
inc
outsb
lcall
inc
and
push
xchg
les
js
xchg
inc
pop
lcall
push
andb
push
jbe
movsl
jmp
xchg
mov
xorl
insl
cmp
mov
dec
popf
mov
sub
aam
sbbl
mov
lret
icebp
in
mov
shrw
mov
sbb
cltd
sub
iret
pop
les
dec
hlt
icebp
push
in
outsb
icebp
dec
pop
rorb
sbb
repnz
jecxz
fisubrs
add
mov
std
test
mov
pop
xsha1
cmpsb
mov
pop
pop
subl
loop
push
jno
xor
adc
jle
or
pop
xor
stos
inc
pop
sahf
pop
lret
leave
pusha
and
call
cli
lock
pop
test
mov
add
or
sbb
xlat
sub
or
cli
fdivrs
shl
in
adcb
jns
jae
sahf
cmpsl
into
in
je
es
push
aaa
inc
pop
insl
and
scas
xor
sub
scas
mov
ror
mov
mulb
je
std
mov
lea
pop
inc
in
pop
xchg
cmp
mov
mov
adc
push
aas
xchg
pop
cmp
cld
sbb
pop
dec
pop
mov
and
or
movsl
and
test
cwtl
or
leave
cmpsl
cmp
insb
insl
enter
jno
loop
or
fdivrs
push
pop
jb
popf
sbb
xchg
xchg
out
or
dec
sub
jecxz
push
ja
sub
add
in
pmaddwd
sarl
ljmp
shl
push
into
add
push
mov
push
mov
sub
pop
ret
sbb
sub
lock
subl
aad
das
or
cmc
insl
sub
adc
les
arpl
repnz
jg
pop
ljmp
lret
int3
push
and
ss
test
and
scas
jns
or
push
or
test
clc
les
ret
fsubs
in
outsl
push
inc
push
lods
push
push
push
in
aas
xor
repnz
mov
mull
sub
lock
ficoms
dec
and
mov
and
xchg
lret
mov
mov
dec
cmpsl
mov
push
js
pop
xor
clc
cld
or
fldcw
in
sahf
test
sbb
shll
sbb
jecxz
sub
push
mov
mov
lods
mov
xlat
mov
sbb
fisttpl
pop
push
mov
inc
mov
cld
cld
jge
xchg
shll
sub
ljmp
scas
sub
lea
stc
push
push
mov
push
movsl
mov
pop
mov
jbe
enter
xchg
and
xor
and
std
test
and
dec
push
and
inc
fistl
push
mov
adc
aam
cs
xchg
cmp
aas
test
je
fxtract
and
iret
pop
js
jp
jo
inc
mov
jge
mov
das
jmp
fmull
pop
into
inc
mov
cld
xor
ja
push
loopne
or
bound
xorl
xchg
push
insl
adc
out
mov
jg
test
ret
inc
xchg
dec
pop
idivl
into
fs
fistps
into
gs
mov
xchg
adc
sbb
lods
out
cmp
inc
scas
mov
jno
andb
insb
les
call
mov
and
fadd
sbb
mov
push
jp
push
aam
loopne
jp
cmpsl
and
lock
mov
sub
aam
cmovbe
aad
pushf
or
outsb
xlat
out
cmc
aaa
xor
inc
cmpsl
aam
mov
into
jg
adc
pop
cmp
add
cmp
out
shlb
cmc
fs
push
or
out
jnp
push
jb
or
cmp
lret
mov
jno
fnstsw
mov
ffreep
or
cmpsl
pop
lods
cmp
mov
dec
mov
push
shrl
adc
adc
out
jae
es
mov
int3
add
xchg
cld
movsl
pop
jns
call
cmp
popa
add
hlt
pop
xor
mov
out
jle
fucomp
jge
sti
push
fs
jb
fnsave
or
into
xchg
mov
cmp
movsl
in
xchg
clc
pop
jo
daa
inc
popa
push
fldt
mov
mov
xchg
out
xchg
fdivp
jbe
mov
and
adc
test
mov
mov
imul
xor
jne
pop
mov
push
push
mov
ja
cmpsb
push
or
or
xchg
sub
into
xchg
pop
aas
xchg
mov
xchg
out
pop
jo
or
cmp
push
les
jnp
sbb
push
nop
lret
pop
imul
in
or
fistpl
dec
loope
cmp
sub
out
mov
xchg
out
repnz
leave
sub
pop
outsb
cmp
nop
mov
imul
inc
mov
mov
jmp
and
inc
dec
pop
call
bound
ficomps
jmp
mov
sub
jp
les
inc
dec
loop
mov
push
inc
icebp
movsl
mov
in
jp
pop
add
cmp
jg
loop
in
jno
fstps
in
divb
test
add
xor
mov
push
mov
inc
jo
pop
call
idivl
adc
shlb
repz
and
fbstp
or
dec
xor
nop
mov
mov
aam
sub
xor
sub
insb
rcrl
jmp
fisubl
xchg
pusha
js
imul
sbb
imul
movsb
mov
push
xchg
lock
cwtl
push
xchg
call
fildll
mov
enter
sbb
data16
xchg
push
mov
je
leave
push
and
clc
std
and
loop
push
xchg
mov
cmp
out
xchg
pop
rcrl
mov
push
mov
nop
pushf
cmp
outsl
pusha
xchg
jp
ret
mov
es
repz
cs
out
push
push
pop
sahf
mov
arpl
mov
shrl
xchg
dec
arpl
mov
push
test
or
jp
pusha
sub
jl
shrl
pop
push
mov
add
mov
ret
pop
divb
jns
stos
cmp
push
sub
fcomps
pop
cmpsb
das
xor
pop
test
cli
shrb
adc
out
push
mov
outsb
das
in
bndstx
and
fdivl
add
lret
mov
xchg
dec
push
mov
sub
aaa
pmulhw
lahf
xor
arpl
sub
aaa
loope
out
xor
fwait
sti
jmp
mov
aad
lcall
jle
repz
inc
dec
adc
ret
cmp
xlat
dec
mov
adc
pushf
or
and
rcrb
mov
cmc
and
arpl
imul
dec
sub
std
dec
fidivs
hlt
punpckhbw
nop
or
inc
fldt
outsl
xchg
adc
lds
aas
pop
scas
inc
mov
push
and
movb
shlb
pusha
sbb
cmp
dec
jmp
scas
sbb
int3
scas
jmp
aaa
jbe
xor
test
ret
sub
pop
dec
sub
cmpb
mov
shlb
fdivl
cmp
sbb
mov
enter
shld
into
sub
jmp
lods
fdivrl
cmpl
mov
rcr
pop
mov
and
xchg
dec
pop
mov
jbe
jmp
inc
pop
push
bnd
out
add
sub
inc
cmp
mov
pop
leave
mov
fisubrl
call
notb
add
mov
jae
sbb
pop
dec
movsl
add
cmp
enter
xor
lods
fcmovb
scas
loope
lods
aaa
push
out
es
cmpsl
sbb
push
test
cli
push
or
cltd
imul
adc
jle
fsubs
push
nop
ds
clc
xchg
rol
xlat
sbb
lea
rorl
add
sbb
fwait
lods
dec
lea
jo
mov
sarl
xlat
loopne
call
std
adc
pop
out
das
stos
sub
or
movsb
scas
pop
lcall
sub
scas
mov
aad
pop
sbb
dec
inc
mov
pop
lds
xorl
jnp
shrb
enter
ret
js
rcl
jne
push
lods
lods
inc
pop
cmp
subl
test
mov
pop
pusha
scas
lret
jb
mov
das
into
dec
scas
sub
sbbl
cmpsl
pop
lcall
inc
or
insl
sarb
fadd
out
push
adc
dec
push
mov
push
popl
shll
dec
sbb
cmpsb
sbb
out
arpl
jbe
xchg
in
sahf
test
out
cs
pop
pop
repz
test
jecxz
xchg
clc
sarl
addr16
bound
adc
ror
push
pop
sbb
mov
insl
lret
mov
mov
or
pop
add
test
pxor
popa
andl
les
mov
pusha
mov
fsubs
scas
xchg
ds
lret
fbld
push
fmull
fstpt
mov
dec
enter
scas
xor
or
cmp
pop
ficoms
xchg
sbb
jle
pop
sub
mov
imul
jmp
int
arpl
dec
shlb
and
imul
adcb
aad
mov
and
icebp
nop
lock
test
stos
mov
pop
repz
or
adc
ret
aam
pop
mov
push
lea
and
rorl
icebp
adc
repnz
cli
sbb
outsl
inc
and
lahf
popa
stc
insl
jae
and
jno
or
pop
insl
lds
lret
and
addr16
add
ja
out
insl
loope
push
imul
jge
and
dec
xor
shrb
inc
dec
inc
xchg
js
add
xchg
sub
insl
add
je
das
mov
movsl
jnp
mov
add
push
outsb
std
or
push
shl
pop
push
out
fwait
jnp
and
mov
iret
push
dec
cmc
and
adc
jl
out
fbld
mov
jns
pushf
inc
and
imul
or
mov
xchg
pop
insl
adcb
enter
sbb
mov
outsl
mov
pop
push
push
and
push
inc
or
lds
mov
dec
in
mov
mov
xor
gs
nop
cmpsl
out
xor
sahf
arpl
pushf
cli
loopne
pop
xor
fldenv
lods
jmp
jmp
test
sahf
cmpb
rcrb
mov
adc
lock
sbb
xlat
xor
shll
mov
fnsave
dec
mov
sub
sub
push
add
cmp
rcll
sub
notb
cmp
xchg
sub
dec
push
mov
ja
add
lock
out
cmp
call
stc
push
iret
sub
push
or
push
rcl
xchg
push
inc
add
mov
testb
cltd
repz
mov
mov
push
xlat
insb
push
adc
fldpi
fiaddl
das
dec
cld
xchg
mov
and
fldt
adc
jbe
dec
sub
push
repz
dec
xchg
jae
scas
insl
fnstsw
data16
add
add
cmp
jne
loopne
subl
sub
add
adc
dec
pop
test
cmc
xchg
inc
and
lahf
push
enter
mov
outsb
aam
jmp
ss
lods
inc
adc
cmc
lfs
loop
jo
dec
add
aad
gs
in
sti
inc
sti
outsl
push
fstl
mov
mov
cmp
fwait
icebp
insl
cmovnp
mov
cmp
mov
jne
jmp
inc
loope
jae
out
mov
add
cs
fs
jle
mov
jae
test
xchg
inc
pushf
xor
cmpsl
jb
pop
pop
ds
cmc
xor
sub
pop
repz
rcrl
shrb
pop
add
scas
adcl
subb
xchg
push
mov
int
pop
cmpsl
add
or
and
test
arpl
adc
inc
push
pop
test
shl
das
mov
mov
insl
sub
in
lret
mov
loopne
or
push
outsb
sub
push
es
je
xor
incb
and
inc
inc
fdivl
call
sti
xchg
sar
popl
data16
mov
les
pop
lret
sub
pushf
repz
mov
inc
int
fdivs
mov
imul
mov
pop
pop
in
or
shr
sub
jae
hlt
imulb
scas
add
sahf
lcall
xor
inc
fstpl
lret
cmp
jae
or
push
mov
sub
adc
or
popa
cmp
mov
aam
jg
ds
out
jns
sub
lret
xchg
mov
mov
movsb
jae
popf
es
into
push
lcall
out
sub
sub
mov
insl
add
dec
or
fs
hlt
inc
ljmp
inc
mov
outsb
cld
mov
addr16
cwtl
mov
imul
mov
scas
mov
inc
mov
lods
inc
shll
push
xor
cwtl
and
and
jecxz
inc
xchg
psrlq
inc
rol
jb
cltd
cmp
xchg
in
lds
js
addr16
fldenv
push
imul
lock
add
lahf
add
aaa
dec
push
cmp
mov
mov
and
xchg
ss
mov
arpl
setne
jne
nop
mov
mov
mov
andl
and
push
add
xchg
test
movsb
fnstenv
sbbl
push
outsl
lds
jbe
mov
push
ja
push
cmp
lock
cmpsl
insb
clc
adc
insl
or
clc
xchg
int
pop
mov
xchg
cmpsl
xchg
adc
mov
movsb
mov
dec
dec
add
cmpsl
jne
dec
xor
mov
push
adc
jb
mov
and
inc
scas
fidivs
sbb
xor
rclb
sti
jb
mov
insb
jle
call
add
mov
sbb
sub
fldt
int3
int
ljmp
std
daa
adc
arpl
subl
jb
push
xchg
daa
sbb
dec
mov
pop
xchg
imul
std
or
jb
orl
pop
adc
lahf
imul
call
fidivs
idivb
mov
xor
cmp
inc
shl
mov
int3
adc
std
daa
std
jl
xor
fs
mov
jle
adc
fwait
or
cld
nop
jb
dec
fiaddl
add
insb
test
jl
pop
sub
jae
pop
int
repnz
out
es
cmp
pop
stos
inc
or
iret
arpl
dec
jnp
les
xchg
sbb
ja
pusha
repnz
adc
add
stos
or
out
mov
lock
leave
xchg
aad
leave
stos
cmp
fldl2e
mov
push
rolb
adc
jbe
lds
cmc
mov
pop
mov
prefetch
dec
in
sub
and
les
and
ret
push
or
bound
mov
dec
mov
mov
clc
xchg
mov
jns
inc
inc
fisubs
adc
pop
xchg
adc
call
lods
stc
test
cld
aad
incb
mov
cmpsl
sub
cs
fidivs
insb
add
sti
pop
or
mov
xchg
sahf
cmp
mov
cltd
ficompl
mov
fnsave
out
mov
pushf
jae
iretw
fistl
fwait
pushf
scas
cmc
loop
bound
out
jecxz
or
push
cli
es
aaa
fs
in
push
jp
xchg
jnp
dec
add
popa
movsl
js
xchg
adc
push
fcom
sub
adcl
lds
fcom
imul
push
or
jl
cmp
jp
sub
dec
fdivl
shl
lcall
pop
and
jb
mov
fcmovne
insb
pop
addr16
nop
movsl
jmp
mov
add
movsl
imulb
jmp
scas
jp
cli
mov
adc
lret
xchg
and
in
cmpsb
and
out
mov
and
sbb
sbb
push
dec
cmc
insl
add
mov
or
pushf
imul
sti
xor
lcall
out
xor
and
pusha
arpl
mov
andl
push
push
sbb
and
test
in
outsl
jnp
loopw
sbb
cmp
xchg
outsl
pop
ret
loopne
mov
hlt
fistpl
cmp
repnz
clc
cmpsl
xor
jns
xor
lods
mov
jns
mov
imulb
iret
cwtl
out
mov
push
jnp
xlat
aam
jg
jns
mov
jecxz
daa
lcall
or
loop
mov
mov
sbb
fiaddl
std
xor
enter
pusha
cmp
inc
jbe
ljmp
call
pop
lock
cli
test
dec
clc
mov
fnsave
jmp
inc
mov
je
orb
outsl
pop
stos
rolb
daa
sti
hlt
mov
ss
mov
push
mov
push
jae
es
dec
cld
pop
pop
stos
outsb
jbe
sub
dec
xchg
push
fcoms
adc
cmp
xchg
xchg
jmp
fwait
jmp
or
xchg
push
int
lock
push
or
jg
mov
out
cld
imul
loopne
dec
test
insl
shr
fwait
mov
and
outsb
xchg
xor
pop
adc
inc
aad
movb
pusha
and
pop
repnz
mov
repnz
and
nop
pop
leave
sub
mov
cmp
push
lea
mov
sub
jl
mov
pop
dec
sub
mov
pop
call
in
je
mov
adc
xchg
xchg
fldenv
or
nop
dec
xchg
pop
divb
pop
jge
fisubrl
adc
nop
addl
test
ret
xlat
shll
lea
scas
pop
repnz
and
inc
inc
push
lea
scas
inc
sbb
loop
sar
inc
push
std
mul
ja
and
adc
mov
repz
add
push
xchg
test
inc
mov
or
mov
int
shl
adc
int3
mov
ljmp
gs
or
xchg
xchg
add
fldt
imulb
leave
stos
jbe
add
adc
pop
pop
mov
xchg
pop
and
add
sbb
and
mov
sbb
movsl
call
mov
ret
pusha
inc
les
outsl
sahf
mov
shlb
out
xchg
test
and
hlt
dec
rcll
inc
mov
jno
dec
sub
mov
sbb
mov
data16
push
mulb
xchg
mov
sti
stos
fsubr
add
mov
lock
inc
fidivrl
popa
clc
mov
cwtl
dec
sub
fucom
aas
sbb
add
cmp
cmp
cmp
pop
sahf
sub
push
dec
les
das
push
cmpsb
ret
lret
aaa
xor
push
pusha
and
loope
mov
mov
fisubs
inc
inc
mov
push
shll
cltd
data16
xor
cmpsb
xor
insl
leave
ret
jns
shrl
rcrb
add
mov
jecxz
ds
cmp
lea
sbb
es
stos
lcall
nop
cmpsl
adc
movsb
add
fcmovb
pop
pop
sbb
repnz
add
subl
negb
sub
cmp
fmull
outsl
mov
adc
fstps
dec
fs
mov
popf
sub
push
push
sub
loop
sub
lods
pop
stc
loop
lods
clc
xor
cmp
push
insb
lcall
sub
pop
mov
add
push
adc
mov
xchg
mov
std
adc
mov
faddl
adc
mov
in
jbe
shrl
xchg
jo
dec
push
loop
cmpsl
and
int
add
mov
add
inc
inc
mov
adc
sbbl
xor
das
mov
popa
in
xchg
pop
movsl
sub
fs
stc
dec
addr16
or
andb
jb
xchg
lahf
cmp
inc
ficoms
cltd
add
push
ffreep
icebp
mov
out
mov
aaa
mov
addl
sbb
xchg
and
iret
mov
add
pushf
jg
adc
enter
jp
test
cs
jo
or
xor
and
popf
pop
daa
in
and
mov
lcall
and
aas
out
stc
mov
and
cmp
mov
scas
mov
add
leave
adc
lret
fstl
mov
adcl
sti
or
das
pop
rcrl
mov
mov
jle
arpl
cwtl
imul
and
xchg
or
nop
bound
bound
push
hlt
or
sub
sbb
jmp
mov
icebp
jg
sub
imul
mov
enter
cmp
cmc
stos
dec
add
cmp
in
in
push
repnz
out
call
mov
jg
add
mov
scas
mov
cmp
imul
and
jo
mov
cld
fsubl
hlt
cmp
in
xlat
jle
fnstenv
inc
js
jmp
fimull
xchg
ljmp
or
bound
out
xchg
mov
xchg
jmp
push
fstpl
in
cld
jae
mov
cmp
mov
dec
lcall
add
stos
rcr
hlt
rolb
mov
scas
pop
out
in
and
adc
es
dec
popa
cmp
pop
leave
fistpl
rclb
dec
push
addr16
sbbl
cwtl
out
bound
dec
rolb
mov
sbbl
cmpsb
jg
fstpt
lea
mov
xchg
xchg
add
jns
mov
test
mov
in
je
and
adc
gs
outsb
lret
mov
inc
xor
jmp
iret
cmp
or
push
cmc
daa
les
dec
ffree
sti
rclb
jmp
mov
mov
fimuls
sub
dec
pop
loope
or
xchg
add
test
cmpl
fcmovu
and
mov
push
adc
ss
adc
and
xor
daa
jo
jmp
pop
mov
movsl
jl
push
enter
add
shll
imulb
dec
fdivl
fcoml
pop
sahf
fwait
repz
add
mov
icebp
add
xor
xchg
mov
bound
xchg
mov
sub
test
ja
sub
fmull
outsl
jnp
dec
daa
js
test
shll
or
fmulp
stos
jmp
sbb
in
clc
les
inc
dec
addb
mov
add
inc
dec
lahf
outsb
shr
lea
loop
cmp
fwait
scas
mov
pop
inc
sbb
fnstsw
sbb
or
cltd
out
add
in
pop
xor
popa
punpckhbw
test
lret
mov
inc
callw
sub
fcoms
cmp
aad
dec
outsl
push
pop
pop
cmp
mov
cltd
mov
sub
adcb
dec
mov
push
add
vorpd
nop
mov
enter
pop
xor
iret
cs
add
xchg
add
dec
xor
and
adc
andb
insb
add
push
rcrl
loop
pop
jg
add
add
cli
out
mov
pushf
push
imul
pop
and
bound
push
jl
and
sbb
inc
jae
inc
cwtl
fidivrl
push
or
fldpi
es
pusha
adc
cmp
adc
aad
roll
nop
mov
inc
stc
pop
pop
int
xchg
lret
or
ss
push
xchg
mov
rcrl
or
loopne
bound
mov
inc
test
cmpl
arpl
rcll
dec
dec
mulb
pop
lods
cmp
sahf
cli
and
stos
adc
mov
imul
fdecstp
dec
cld
negl
stc
sub
mov
xor
leave
push
dec
test
fildl
divl
xor
popf
loope
stos
ljmp
pushf
fists
jbe
fst
paddsw
sbb
in
mov
shlb
add
push
inc
jmp
in
xchg
addr16
inc
cmp
clc
aam
gs
stc
outsb
aad
sarb
xor
or
push
dec
fnsave
add
push
imulb
lods
sbb
jns
sbb
into
clc
ss
test
aam
bswap
xchg
pop
sarl
mov
jge
imul
sub
ds
inc
cmp
pop
mov
lods
out
stc
test
fimull
mov
dec
pop
inc
pop
xlat
mov
sub
lods
jb
and
mov
loopne
add
popa
insl
cwtl
cwtl
xorl
xor
jnp
fsubrl
add
pop
pop
sub
xor
mov
xchg
inc
es
inc
dec
xor
in
pusha
mov
nop
push
or
cmp
dec
je
shll
or
shll
lahf
sbb
cmp
mov
adc
inc
cmc
ss
fwait
or
out
jns
hlt
inc
repnz
jns
pop
pop
cmp
int3
mov
mov
repz
addl
jne
daa
pop
mov
clc
sub
fsubl
pusha
inc
xchg
stos
inc
mov
fisubl
outsl
popa
xor
pop
nop
movsl
lock
mov
pushf
jg
dec
lds
fnstenv
lea
mov
mov
test
mov
rolb
sub
push
sahf
xchg
xchg
in
call
cmpsl
mov
adcb
jge
icebp
xchg
adc
cmp
mov
enter
xchg
cmp
test
pop
sub
loop
dec
push
shrl
in
das
dec
mov
jo
in
dec
into
adc
sbb
pushf
sub
dec
loopne
out
sti
pop
adc
pop
icebp
daa
push
mov
add
cmpsb
popa
mov
xchg
and
aaa
mov
sub
dec
pop
add
fcmovnbe
push
dec
add
cmpsb
into
sbb
sub
push
enter
lock
xchg
and
out
mov
xchg
pop
test
aaa
dec
mov
push
cmp
cld
mov
shrl
xchg
dec
jmp
sbb
push
rclb
add
out
inc
sbb
lods
nop
jb
inc
inc
mov
mov
push
dec
adc
lcall
lock
fs
movsb
inc
ror
gs
xchg
lcall
push
pop
mov
cmpsb
jne
jne
icebp
dec
sbb
pop
pop
push
stos
xchg
jg
mov
hlt
cmp
jg
push
inc
cs
jnp
repnz
ds
mov
push
and
lea
sub
pop
rorl
adc
cltd
xor
and
mov
inc
arpl
lods
sbb
dec
lahf
jno
call
dec
xchg
cmc
inc
clc
es
shlb
cmc
and
or
push
rolb
add
xor
mov
add
cmp
dec
fidivrl
sbb
mov
fildll
lret
aam
or
scas
xchg
dec
pop
enter
dec
pop
outsb
inc
jo
sub
dec
pusha
ss
sbb
inc
and
hlt
aas
or
fiadds
cld
lahf
xchg
cmp
dec
clc
mov
mov
dec
pop
sub
imul
mov
mov
aad
inc
mov
out
cmpsb
scas
mov
fucomp
ljmp
mov
popa
faddl
pop
mov
pushf
dec
jne
dec
ds
stc
pop
cld
mov
daa
gs
pop
xchg
xchg
adc
hlt
sbbl
scas
jne
sti
inc
sbb
stc
rorb
xor
mov
adc
push
or
xor
inc
sub
and
fwait
or
shrl
pop
in
jmp
je
fsts
fisubrs
mov
fnstenv
les
jnp
pop
dec
lds
jl
outsl
data16
mov
mov
loope
out
xchg
lret
out
movlps
inc
xlat
lods
sub
cmp
mov
jbe
repnz
and
sub
push
push
pop
and
shr
xchg
sbb
xlat
into
cmc
mov
mov
out
sti
cmp
adc
xlat
inc
xchg
sub
pop
mov
xor
push
call
mov
push
sbb
dec
sti
lea
jne
int
fwait
addr16
push
scas
mov
mov
cmp
and
cwtl
jae
pop
mov
dec
cs
jo
mov
xchg
pop
gs
push
xor
mov
out
fimuls
cwtl
and
xor
aad
ss
pop
das
cmp
shrb
xlat
mov
call
pop
mov
loop
loop
imul
lock
lretw
dec
sahf
ja
sub
arpl
rcrl
adc
and
mov
adc
mov
call
lcall
push
pop
lahf
and
mov
adc
test
cmpsb
jp
adc
add
mov
loope
in
test
push
mov
dec
test
and
push
pop
sbb
dec
jg
insb
inc
imul
pop
jmp
in
pop
sarl
fisttpll
test
pop
dec
mov
xchg
adc
mov
sbb
xor
shll
fldcw
xor
lds
shrb
and
mov
movsb
inc
fistl
fnstsw
jbe
iret
out
pop
mov
or
clc
jb
sbb
add
cmp
xor
fs
test
and
xor
jle
adc
std
or
loope
jl
push
mov
mov
push
int
ljmp
mov
pop
adc
push
js
sub
pusha
xorb
jns
mov
incl
popf
xchg
lods
into
xor
out
fldl2t
dec
cmp
or
sbb
xorl
ret
pop
mov
pop
fucom
por
testb
incl
xor
mov
out
pop
sbb
adc
sarl
jb
jl
imul
mov
sbb
jmp
sti
stos
push
inc
pop
jmp
dec
pop
jno
push
push
sbb
ja
loop
cmp
mov
repz
sub
rolb
sbb
icebp
clc
push
mov
gs
es
push
inc
clc
movsl
ljmp
rcll
cmpsl
push
rol
dec
movsb
xchg
add
mov
cmp
daa
or
jbe
test
jge
inc
push
loope
push
push
jl
gs
mov
jnp
add
sbb
pop
mov
nop
fisubrs
adc
ss
test
fsubrs
or
roll
int
xchg
aas
addr16
movsb
inc
loope
hlt
notb
cmp
dec
nop
aaa
inc
sub
sbb
jae
jmp
inc
sbb
xorl
push
push
in
lret
pop
mov
iret
lea
push
mov
mov
out
mov
int3
add
add
or
insl
je
cltd
sub
mov
je
dec
xor
ljmp
or
outsl
sub
and
xor
xor
mov
xchg
mov
out
outsb
test
inc
cmc
dec
ja
cmp
cli
adc
push
stos
mov
shrl
mov
add
jo
xor
mov
lret
adc
jae
hlt
push
push
jo
pop
mov
fstl
ss
jecxz
movsb
pusha
fwait
pop
loop
xchg
adc
dec
mov
xchg
xor
in
add
sbb
test
lods
in
bound
pop
jg
mov
mov
ljmp
pop
adc
test
mov
xchg
sub
nop
xor
loopne
mov
js
jecxz
push
sbb
pop
pop
mov
pop
mov
xchg
insl
jmp
imul
std
jg
xlat
mov
test
outsb
aad
lahf
loop
iret
mov
popa
pop
mov
cmpsl
in
js
setno
into
nop
movsl
jb
xlat
inc
mov
mov
cmpxchg
insl
addl
push
scas
jbe
lock
cld
jo
shll
or
pop
test
icebp
aam
sbb
imul
enter
pop
lods
adc
das
xchg
add
idiv
jno
test
add
daa
fdivs
mov
xchg
out
push
movsl
mov
xlat
aam
sub
add
js,pn
xchg
xchg
xchg
mov
cmp
cmpsb
int
repz
repnz
pop
xor
loope
push
xchg
out
test
call
pop
lds
sbb
icebp
adc
adc
adc
mov
rcrb
out
and
mov
stos
mov
fcoms
ljmp
fucomi
iret
adc
pop
xchg
pushf
daa
in
test
aaa
push
stos
fisubl
and
xchg
cmp
ljmp
imul
cmc
lret
sbb
shrb
xor
mov
cltd
push
fsubl
sbb
fwait
jb
mov
ss
and
xor
pusha
ret
sti
cmp
sub
loopne
dec
ljmp
or
pop
imul
jmp
into
xor
push
push
mov
ret
pop
test
sarl
fadds
sub
push
sbb
dec
and
mov
bound
mov
jecxz
daa
mov
cmp
xchg
inc
fists
pop
repnz
loop
out
incl
and
mov
cmp
ljmp
cmc
xor
mov
cmpl
sbb
sub
cmp
push
xchg
out
dec
dec
insl
pusha
xor
cli
jns
aaa
stos
sbb
add
ss
imul
stos
cmp
in
in
enter
mov
pop
neg
lods
inc
or
push
lods
dec
mov
inc
sbb
mov
lds
pop
cmp
fdivs
jecxz
movsb
jmp
jnp
push
fcompl
ror
add
jne
push
je
mov
in
cld
xor
xor
iret
lods
and
test
push
in
pop
lods
xor
test
push
adc
inc
lea
cwtl
or
cmc
cli
xor
pushf
inc
mov
lods
sub
roll
ljmp
test
jle
xchg
and
ret
pop
jae
fs
insb
scas
push
mov
shll
mov
call
mov
sub
andb
inc
cmc
les
inc
dec
add
out
repnz
mov
push
or
lret
jmp
divl
int
fwait
jmp
add
and
add
clc
push
mov
lock
das
ret
mov
adc
fistpl
aaa
stos
mov
push
xor
sti
mov
imul
cs
jg
stos
lods
lret
das
push
shrl
jnp
and
jg
jmp
pop
cmp
dec
pop
fwait
xor
jmp
mov
xor
mov
xorb
inc
xchg
test
hlt
pop
adc
orb
lock
lcall
lahf
or
pop
and
pushf
inc
fld
mov
dec
sti
lods
mov
mov
pop
aam
or
cs
jo
or
nop
lock
add
pop
popf
ja
es
gs
push
jmp
test
sbb
int3
fldl
mov
test
fs
mov
jmp
mov
pop
mov
imul
lea
mov
sti
out
aam
ret
popf
jns
mov
icebp
pop
addb
and
mov
inc
push
adc
xchg
clc
adc
mov
cmp
lea
inc
mov
sub
mov
and
stos
jg
adc
nop
push
adc
fs
scas
out
lret
aad
fsubr
lock
mov
sti
sub
pushf
push
scas
cmpsb
cmp
mov
or
mov
mov
test
call
stos
clc
cltd
pop
iret
and
cld
lcall
insl
icebp
das
sahf
das
or
jb
leave
jnp
cwtl
push
mov
dec
xchg
call
sti
cmp
sbb
aas
mov
mov
ss
aas
dec
test
jne
insl
inc
pop
or
lock
loopne
test
in
or
aaa
push
test
jne
icebp
dec
jecxz
movsl
and
xchg
inc
push
int
jb
pop
out
mov
adc
data16
into
push
popa
inc
xlat
adc
lods
xor
dec
mov
jns
cltd
je
notl
lahf
jle
mov
push
adc
enter
jne
push
cmp
mov
and
mov
leave
cltd
shll
inc
push
dec
mov
push
movsl
push
push
mov
fsubrs
pop
pop
ret
dec
jae
cmp
pusha
pop
sbbb
sub
ret
into
sub
mov
jg
clc
fistps
xchg
and
push
call
into
push
push
leave
dec
xchg
mov
add
sub
ret
pop
jo
cli
jns
inc
insl
aaa
dec
adc
add
adc
enter
and
push
popa
clc
aas
cmp
aas
aad
and
test
pop
repz
jl
jae
call
lods
mov
sahf
jecxz
xchg
mov
mov
jg
jb
adc
out
mov
or
mov
mov
pushf
xchg
repnz
in
mov
xor
imul
jge
fidivl
ds
push
popf
jg
push
cld
jae
and
rcll
add
rcl
add
xor
aam
mov
lahf
fidivrs
mov
cmpsl
ror
outsb
xchg
cli
adc
jo
pop
jb
mov
fld
jns
push
jo
pop
pop
cmp
loope
scas
pop
jle
hlt
inc
cld
cmc
and
mov
lds
insl
scas
subb
jne
mov
outsb
arpl
push
adc
adc
jno
fnsave
xchg
aaa
jbe
std
xchg
mov
cwtl
push
push
dec
or
mov
lret
shl
rorb
mov
test
and
sbb
jns
cmp
pushf
rclb
cmp
fwait
jno
xor
push
pop
popf
or
xor
movsb
cmp
and
ret
mov
bound
xchg
mov
loope
xchg
xor
bound
sti
in
mov
loopne
es
lds
xor
cmp
sbb
test
jno
xor
icebp
cmpsl
push
push
and
or
or
add
daa
mov
test
rcl
push
sub
cmpb
fcomps
out
jne
inc
loop
pop
jns
frstor
jl
stc
sbbl
scas
pop
ds
int
dec
int
or
iret
xchg
cltd
sub
into
lret
cmpsl
jns
sbb
and
std
cli
jg
mov
popa
les
test
lock
fistps
inc
sbb
pushf
loope
jb
stc
and
cmc
sbb
subl
xchg
inc
pop
sbb
xchg
cmp
wrmsr
das
cmpsb
xor
xlat
test
aad
out
jno
mov
xchg
into
addl
cltd
jo
es
or
sub
jp
push
mov
cmpsb
fwait
xchg
mov
fnstenv
add
or
or
or
rorb
adc
lods
jg
inc
scas
mov
addl
add
jp
roll
aam
mov
fbld
loope
enter
fimuls
push
shll
xchg
mov
lret
xchg
jnp
or
sub
test
cmc
xchg
in
xor
daa
popa
mov
movsb
jnp
dec
cli
jbe
lock
adc
aaa
fnstenv
inc
jae
aas
repz
or
jnp
xchg
bound
cmc
adc
loope
xchg
lcall
test
push
xchg
sub
hlt
adc
xlat
test
shlb
push
mov
cmp
enter
bound
nop
fs
imul
mov
push
rolb
fnsave
jmp
subb
sub
dec
mov
and
ret
outsb
aas
bound
sub
push
call
sar
adcl
or
mov
xor
lret
sub
sbb
pop
popa
clc
push
cmp
ret
fbld
sub
adc
cmp
pop
mov
and
mov
cmp
push
loope
dec
jge
inc
add
loope
jg
addr16
js
inc
mov
pxor
sbbl
stos
adc
push
mov
jb
inc
leave
and
and
insb
inc
leave
jo
push
ffree
fisttpll
jo
mov
cld
xchg
jl
lock
jne
inc
repnz
cltd
inc
push
cli
cmp
mov
pop
xchg
decl
sahf
mov
or
jecxz
xchg
xor
lock
ficomps
ljmp
fdivrl
jle
jge
sub
mov
jle
pop
xor
xchg
or
popa
cmp
imulb
ror
and
dec
out
jp,pt
jbe
addr16
xlat
cmp
dec
push
sub
mov
jge
lret
cwtl
xor
xchg
sbb
pushf
adc
daa
dec
lock
pop
or
mov
ret
push
sub
pop
mov
ss
mov
packssdw
inc
push
xlat
xchg
lret
int3
push
aas
aad
or
xor
sbbb
mov
dec
sub
push
jmp
lea
lcall
and
jne
cmp
mov
gs
xlat
jno
sbb
mov
loopne
pusha
adc
lds
mov
bound
pop
jp
mov
lods
test
xchg
pop
aad
push
ja
ljmp
mov
xlat
mov
out
and
jbe
or
xchg
outsl
push
push
mov
xchg
mov
pop
fnstenv
adc
inc
fs
arpl
mov
faddl
pop
test
repnz
mov
pop
iret
outsb
xchg
sbb
and
sbbl
daa
xor
ss
gs
mov
jg
pop
push
pop
push
test
add
add
mov
jae
fwait
leave
aaa
dec
add
aad
ss
cmp
push
pop
lcall
lds
out
jno
push
rcll
sahf
frstor
scas
push
outsb
jno
adc
dec
dec
inc
pop
outsl
jns
filds
sbb
in
scas
and
xor
or
lea
inc
pop
adc
push
stos
loop
lahf
outsl
out
push
leave
int3
push
jmp
adc
into
pushf
rcll
push
subb
dec
mov
push
push
cwtd
push
adc
inc
pop
or
ret
outsl
ret
int
data16
cmp
rcrb
mov
out
jbe
push
and
pop
ss
iret
sbb
popa
mov
push
cmpsl
add
jb
sub
shl
sub
jbe
test
aas
test
and
cmp
insl
cmp
shrb
cmpsl
push
aam
in
int
xorl
loop
jmp
in
stos
sahf
bound
sbb
pushw
fidivs
adc
push
mov
repz
jmp
testl
pop
xchg
shrb
inc
push
call
add
adc
or
cmp
pop
popf
icebp
push
mov
mov
pop
scas
ds
xor
inc
adc
mov
push
mov
push
jmp
push
leave
dec
mov
dec
call
adc
adc
sub
outsb
js
lcall
jecxz
movsb
rcll
or
data16
fimuls
ret
lret
gs
push
push
orb
pop
sub
adc
lea
js
mov
mov
into
lods
or
jge
inc
es
lret
adcl
addr16
setg
pop
es
mov
xchg
xlat
int3
push
sbb
pushf
mov
xchg
inc
xor
idivl
jae
loope
sub
ds
insb
sub
outsb
mov
pop
pop
adc
daa
mov
rcrl
inc
push
xor
addr16
sub
pop
and
xchg
cmpsl
call
jp
and
mov
lods
jo
fdivrs
push
adc
mov
xchg
aam
sbb
xchg
js
mov
aas
mov
fwait
jne
lret
test
aad
push
mov
sbb
repnz
stos
mov
pop
roll
aad
rclb
adc
dec
sub
push
cmp
sbb
pop
aaa
js
jp
sbb
push
or
jmp
adc
fwait
xchg
inc
fld
fnsave
sub
outsl
notb
les
adc
nop
out
jne
jle
xchg
imul
mov
int3
fsubrp
add
jp
pushf
icebp
fstps
xor
pushf
add
pop
mov
mov
push
pop
into
jne
sbb
in
bound
jge
pushf
imul
or
mov
shll
mov
push
and
in
mov
push
xchg
cmpsl
mov
test
xchg
in
lcall
in
subl
sub
test
test
ja
push
out
test
gs
stos
ja
fldcw
out
sahf
mov
sti
push
xchg
arpl
sub
mov
jb
pop
cmc
push
xchg
inc
dec
fs
dec
dec
sub
scas
imul
sahf
mov
xchg
movl
out
and
xchg
mov
arpl
mov
sahf
std
sub
mov
xchg
popl
mov
xor
lret
test
cmpsb
jo
mov
lods
inc
cld
xchg
and
adc
pop
fnstcw
cmpsb
iret
sbb
inc
shll
ja
aas
jl
add
push
cli
xchg
push
mov
dec
add
cmp
out
out
jbe
js
and
lcall
pmaddwd
jl
es
or
inc
ljmp
xchg
and
popa
clc
or
push
mov
aam
les
pushf
ss
or
test
lods
movsb
sarb
repnz
lahf
stc
mov
sub
pop
pop
mov
mov
cmp
out
xor
mov
ds
jp
sahf
jbe
inc
mov
out
or
mov
mov
movsl
mov
and
clc
or
stc
jl
inc
insb
out
nop
js
in
cmc
push
or
jmp
jle
decl
mov
cmp
imul
sbb
rol
mov
in
test
outsl
push
or
test
int
or
mov
xor
jns
xchg
mov
scas
ja
push
or
aaa
into
dec
fs
or
and
test
stos
mov
xchg
cld
inc
sub
out
aaa
testl
subb
std
pop
insl
jg
lock
xchg
out
inc
jmp
or
inc
gs
push
mov
cmp
dec
xchg
cmpsb
push
fmull
stos
cmp
or
sbb
pop
add
xor
pusha
fildl
loope
negl
aaa
sub
xchg
sub
pushf
push
lcall
jae
cmpsb
inc
shrl
lret
dec
div
fadd
dec
repz
test
mov
aad
enter
js
inc
adc
mov
mov
fcoml
xor
xor
or
push
pushf
pop
rol
aad
jl
rcr
shll
inc
sub
push
pusha
lret
jns
xlat
jnp
xchg
pop
shlb
mov
rorl
lock
adc
insb
je
lods
or
das
in
insb
psubd
popl
xor
or
movb
insl
xor
insl
in
ljmp
or
jb
cmp
insb
out
ret
jnp
outsl
into
stos
roll
mov
stos
sahf
sbb
mov
jns
inc
fimuls
in
fldt
dec
or
dec
fs
test
or
and
or
fldenv
daa
jno
push
xchg
aam
mov
mov
add
fnstsw
loop
cmp
and
lahf
cmp
xor
push
or
fistps
add
loop
std
cmp
enter
ljmp
cmp
addr16
fisubl
sahf
lods
xor
gs
je
mov
leave
outsb
jae
push
cmpsl
mov
dec
out
popf
andl
mov
pmaddwd
sarb
stos
adcb
lods
mov
lods
fldcw
push
loop
mov
push
repnz
dec
addl
cld
push
in
pop
mov
fidivl
xlat
mov
add
clc
xor
or
fwait
push
or
or
mov
add
add
fnsave
jecxz
subl
gs
lds
imul
lahf
jae
in
insl
sbb
push
mov
mov
out
lret
xlat
in
addl
push
cmp
imul
add
dec
xchg
popf
movsb
jae
xor
sti
nop
addb
test
sbb
popa
or
sub
in
clc
mov
sub
dec
cmp
inc
pop
scas
jb
mov
sbb
loop
pop
out
mov
gs
shlb
aad
shlb
insl
jns
xchg
pop
lock
ljmp
mov
out
xchg
pop
dec
dec
inc
fnsave
out
lahf
pusha
lock
xorb
adc
xor
inc
push
xlat
subl
fwait
cmp
adc
test
sti
xabort
je
gs
test
mov
cli
jb
xchg
xchg
xchg
ds
pop
mov
lea
jp
out
adc
sub
jp
jecxz,pn
test
mov
vcomiss
jno
shr
xor
xchg
mov
xchg
jle
fadds
mov
loopne
test
popa
into
fninit
in
popl
es
push
sbb
sbb
hlt
dec
pop
jp
out
out
mov
or
jns
and
negl
mov
xchg
das
lds
test
fdivs
cmpsl
sub
or
mov
outsb
ret
add
in
outsl
push
fcompl
or
leave
sbb
sti
addl
mov
cmp
adc
mov
sbb
dec
push
jne,pt
pusha
inc
cmp
push
stos
mov
shl
sar
xor
shl
lahf
and
pop
xor
fdivrs
push
lock
mov
popa
sbbw
and
push
shll
ljmp
arpl
mov
mov
ficomps
xor
outsl
and
ret
repz
jbe
scas
call
cli
xor
push
mov
cmp
mull
gs
and
dec
dec
cwtl
inc
sbbl
popf
movsb
xor
fwait
pusha
call
mov
or
xor
pop
stos
pop
fldenv
mov
inc
arpl
int3
cmpsl
std
fisttpl
mov
hlt
movsb
subb
dec
sub
push
shrl
mov
adc
fcmove
addr16
sub
sti
jno
sub
sub
dec
mov
xor
mov
add
test
fisubrl
add
cli
out
aaa
push
daa
mov
andl
aas
icebp
popa
fs
mov
sub
nop
out
js
push
jae
scas
and
sub
movsl
aam
push
xchg
shrb
dec
adc
and
imul
std
jge
pop
repz
sahf
jg
mov
jno
mov
lods
xchg
mov
push
push
or
xchg
enter
mov
jmp
xchg
ja
pop
stos
xchg
out
mov
arpl
mov
call
cmpsb
xchg
stc
push
add
js
or
adc
xchg
xchg
pop
and
lds
sbb
fcmovnbe
or
fildll
pop
pushf
add
push
and
jae
test
mov
mov
inc
movsl
shlb
sub
jae
xchg
je
stos
in
cmp
cmpsl
imul
fldpi
inc
call
jmp
loop
jmp
fldl
sub
imul
mov
sbb
daa
add
pop
enter
dec
lahf
test
cmpsb
subl
dec
add
cli
stos
xlat
imul
inc
push
shl
and
sub
ret
adc
movl
divl
sbb
cltd
or
int3
insl
arpl
lds
sub
lods
js
fsubrl
pop
xlat
pushf
and
mov
cmp
mulb
dec
push
sahf
ds
stc
xlat
jmp
sti
jg
mov
push
jno
sarl
movups
hlt
inc
inc
stc
ret
lock
inc
jno
pop
xchg
jbe
mov
mov
test
addl
push
mov
xor
test
sub
add
mov
push
popf
mov
fildll
jg
cmp
add
mov
test
adc
mov
pop
jns
bound
jb
rorl
lret
bound
adc
push
add
xchg
xchg
xor
cmp
decb
push
xchg
mov
pop
jl
mov
movlhps
pop
dec
add
sbb
jnp
jge
mov
in
fwait
sub
jae
fcomps
in
and
leave
push
dec
movsl
xchg
ret
push
cmp
push
mov
xchg
inc
stos
push
dec
fs
hlt
lock
ljmp
or
fs
cmc
cmp
fldcw
pavgw
test
fstpt
int
fdivr
pop
das
subb
pop
cmp
mov
pop
lds
dec
dec
mov
mov
outsb
cmc
rolb
mov
mov
idivl
mov
jmp
sti
mov
mov
enter
xor
jb
test
in
fisubl
out
out
pushfw
icebp
mov
xchg
leave
pusha
out
mov
jno
mov
aad
mov
test
aaa
fimull
into
movsb
loope
mov
hlt
inc
push
in
xor
dec
fimuls
xchg
mov
enter
mov
pop
out
mov
pop
xor
xchg
mov
jg
xor
jle
xchg
mov
popa
push
ficomps
popa
jl
push
mov
mov
lods
push
mov
test
mov
inc
jecxz
sub
add
mov
jecxz
push
rcl
jne
push
xor
sbb
xchg
imul
dec
xor
mov
jg
sub
lea
jle
mov
aam
cmpsl
sarl
hlt
movsb
inc
fcmovbe
adc
push
xor
insl
pop
add
push
pop
popf
je
mov
in
aas
cld
adc
mov
fmul
xchg
insl
jl
push
and
mov
mov
pop
pop
pop
popa
into
int
mov
add
pop
cs
int
inc
loopne
data16
pop
ss
add
xor
pop
xor
sbb
sti
sbb
sbb
add
scas
xchg
adc
fcmovbe
js
sarb
and
push
mov
shlb
orl
push
pushf
xor
addr16
or
adc
sahf
sub
cmpsl
in
sbb
leave
mov
mov
jns
fpatan
add
xchg
mov
cmpsb
pop
or
test
mov
xor
leave
pusha
call
sub
and
sub
popa
xchg
mov
in
cmpsb
jmp
add
imul
adc
cmp
gs
push
testl
call
cmp
xchg
push
push
or
cmp
push
fimuls
jmp
mov
push
dec
jecxz
mov
ret
out
sti
popf
mov
push
mov
or
in
arpl
mov
pop
fldl
cmp
mov
in
js
and
mov
push
or
popa
ret
les
add
rol
sub
xor
push
and
in
mov
sub
data16
jne
sub
xlat
cwtl
daa
mov
xchg
push
fisttpll
xor
or
fstpl
and
jns
scas
and
push
imul
fwait
add
xchg
push
movsb
faddl
dec
ss
mov
popa
test
rcrb
cmpsb
call
ja
jne
adc
aaa
cmpl
fcmove
fsts
and
lea
je
jo
cmp
iret
pushf
add
inc
imul
es
fistps
mov
test
loop
mov
cli
mov
cmp
lods
mov
rcrb
loope
data16
int3
ljmp
inc
jbe
les
dec
loop
mov
insl
stc
ficoml
rol
push
inc
flds
fpatan
pushf
push
sub
mov
sub
in
cltd
aad
and
xchg
mov
pop
cmc
or
dec
cmpsb
add
ds
nop
add
loop
stc
test
fisttpl
rcrb
xor
fistl
jmp
dec
pop
xchg
xchg
sbb
mov
add
pop
imul
pushf
jp
js
cmp
lods
push
in
divl
pop
popf
ja
test
lea
pop
jmp
xchg
pop
push
in
sarl
push
in
mov
pop
icebp
nop
mov
mov
hlt
mov
adc
push
sub
arpl
dec
in
fucomip
lds
shlb
dec
call
sti
inc
pop
lock
lahf
pusha
stos
inc
push
js
jbe
test
add
fidivrs
pushf
fisubl
ljmp
mov
aam
iret
frstor
sti
xchg
aam
shl
jnp
sbb
mov
xorl
push
loop
les
test
inc
pop
pop
jne
dec
and
xchg
cmpsb
nop
loopne
fcmovne
ss
mov
cmp
xchg
or
xchg
sbbb
arpl
jb
stos
lahf
std
and
test
jno
neg
mov
inc
addb
xchg
orps
xor
pop
cmpsl
lcall
stos
add
test
outsl
sti
xor
insb
inc
pop
sbb
pop
lcall
mov
cmpsl
xchg
les
pop
test
fnstenv
sub
xor
push
fiaddl
cmpb
subb
xchg
jae
xchg
mov
push
pop
fists
sbb
sub
xchg
stc
xchg
add
xchg
sbb
lds
inc
fnsave
nop
daa
test
fstps
pop
cmp
lea
fldt
inc
push
inc
dec
lahf
loop
inc
mov
int
cmpsb
jns
inc
or
cwtl
data16
dec
loop
std
sbbb
xchg
mov
push
push
jo
pushf
xor
or
arpl
ss
pusha
xor
sbb
pop
pushf
mov
pop
jno
sbb
mov
test
insl
jl
cmp
adc
push
daa
stos
adc
mov
mov
lods
dec
lahf
xchg
xor
push
cmp
add
ja
mov
bound
xchg
in
lahf
pop
ljmp
scas
insl
pop
icebp
or
jnp
mov
jge
imul
mov
add
mov
mov
or
xchg
pusha
pop
dec
add
cmovl
inc
and
cs
xchg
xor
push
mov
add
sub
das
add
adc
xor
das
sbb
leave
leave
ret
push
out
jmp
stos
fmull
data16
jno
jb
pop
es
sbb
push
or
sbb
outsb
out
mov
jp
psubusw
mov
inc
sarl
adc
jmp
xchg
pop
dec
popa
int3
mov
push
out
int3
out
sbb
fnsave
push
xor
mov
lret
and
aad
push
call
rcr
sahf
push
mov
push
sub
enter
stc
mov
and
orl
std
and
or
push
test
ja
daa
out
dec
inc
and
das
adcb
bound
adc
imul
add
sub
sbb
icebp
pop
cmc
and
jge
mov
jl
pusha
insl
fnsave
mov
inc
rorl
outsb
fsubs
and
xor
test
xchg
cmp
popf
out
inc
mov
loopne
xor
pop
push
in
std
aas
inc
mov
cwtl
nop
push
gs
mov
bound
rorl
pop
js
jmp
jbe
es
xor
sbb
int
mov
add
mov
cmp
push
ret
rol
dec
insb
jg
daa
xchg
stc
nop
lret
jl
daa
xchg
inc
gs
mov
outsl
or
movsb
adc
aam
fiaddl
into
pusha
ret
test
sub
jb
push
mov
stc
jl
jle
pop
sub
add
negl
mov
test
mov
pop
sub
inc
cltd
mov
jecxz
and
inc
xchg
push
sbb
mov
lea
sarb
sub
pop
adc
rol
aas
rcll
js
push
inc
mov
fldl
xchg
mov
fwait
shll
dec
sti
xchg
lret
and
dec
popa
sbb
sub
dec
out
mov
ret
ss
mov
imulb
rcll
enter
gs
ja
ljmp
inc
call
sub
adc
jp
mov
lods
pushf
push
jae
cli
insl
je
jmp
arpl
pop
jecxz
cli
dec
rorl
sub
sbb
mov
sub
outsl
push
add
push
sti
int
push
sbb
icebp
xor
and
mov
push
imul
popf
jae
lods
and
scas
adcb
push
loop
jp
insl
cmp
push
popf
xchg
jp
std
lods
dec
jg
dec
mov
loopne
xchg
xchg
push
in
ret
mov
test
jo
mov
insb
xor
mov
mov
mov
cli
inc
icebp
or
pop
mov
cld
xor
xchg
dec
xchg
push
sahf
shld
push
and
cmpsb
adc
and
fsubs
inc
pop
adc
add
aas
and
jno
mov
jbe
and
mov
shrl
inc
movsl
arpl
pop
xor
mov
stos
or
divb
in
or
ds
inc
pop
fcmovnbe
in
addr16
cmc
xlat
addl
jmp
push
lds
adc
movntq
lea
cwtl
loop
push
mov
repz
mov
in
rorb
xor
adc
mov
loopne
inc
sahf
pop
pop
sbb
and
mov
sahf
fisttpl
sarl
rorl
xor
leave
pop
testl
outsb
subb
imul
push
leave
push
xor
inc
mov
movsb
frstor
repz
dec
add
pop
in
das
lods
pop
ficomps
xchg
imul
cwtl
cwtl
add
in
std
and
insl
mov
pusha
sub
in
mov
xchg
xchg
test
imul
in
push
jmp
loopne
mov
mov
cmpsl
cmp
fiaddl
and
xor
sti
pop
popf
pop
dec
test
mov
cmp
fiaddl
addr16
fwait
sub
mov
mov
adc
sbb
sarl
pop
icebp
lds
push
mov
push
mov
nop
xorb
stos
mov
test
adc
mov
pop
jle
ljmp
adc
iret
jp
dec
push
mov
clc
movsl
dec
fistps
ljmp
pop
mov
ss
ds
ret
addb
or
cmpsb
das
mov
pop
xor
jmp
xor
or
mov
mov
inc
stos
enter
fsubr
add
lea
stc
pop
insl
sub
mov
sbb
mov
mov
cmp
and
int3
jecxz
addl
adc
inc
leave
sub
scas
sbb
or
jae
sbb
shlb
sub
mov
lcall
cld
cld
mov
int3
dec
out
enter
cltd
insl
add
pop
cmp
cmp
cmpsb
xor
pop
mov
xchg
aaa
lods
mov
pop
das
ljmp
xchg
clc
and
cli
lods
push
fildll
data16
decl
jg
in
aam
dec
or
popf
jg
sub
push
jo
clc
xchg
repnz
and
lods
sub
inc
xor
xorb
cltd
repnz
fucomi
xor
mov
mov
xlat
out
test
dec
mov
jns
and
stos
shrl
scas
pop
scas
outsb
addl
hlt
pusha
mov
mov
sbb
fs
in
xor
shrl
fsubp
call
pop
push
out
ficoml
test
clc
fnstenv
hlt
xchg
mov
xor
lcall
clc
xchg
aam
inc
sbb
dec
arpl
jl
imul
rorb
or
rolb
test
out
xchg
push
lds
cmpsl
mov
clc
xor
std
sbb
xchg
test
data16
add
xchg
mov
jg
adc
mov
dec
shlb
pop
cmpsb
shrl
out
scas
sahf
sub
jo
into
push
dec
adc
xchg
nop
cld
or
rcll
movl
out
scas
pusha
sbb
mov
sar
imul
jp
jns
jmp
or
int
sbb
xchg
lcall
div
sub
call
pusha
inc
cs
les
xchg
xor
cmpsl
push
cmc
mov
popa
cmpb
lret
in
aas
addr16
repnz
or
cli
add
xor
daa
adc
push
mov
and
jae
test
dec
stos
xchg
sbb
jbe
lea
jnp
in
andb
sbb
and
xlat
xchg
jl
enter
mov
pop
out
mov
ds
insl
mov
sbb
push
cltd
pop
in
jl
adc
inc
xlat
mov
repnz
mov
adc
arpl
ret
subl
loopne
jne
jb
pop
movsl
sar
pop
or
test
mov
xor
jnp
shlb
cltd
dec
pop
jmp
pop
dec
adc
popf
xor
lret
iret
inc
in
mov
cmp
xchg
cld
xchg
lea
movaps
repnz
dec
mov
mov
add
test
mov
ljmp
dec
dec
cmp
pop
jmp
pop
and
xchg
cmpsb
into
fmul
add
mov
flds
lret
je
stos
xor
pusha
xor
or
rcrb
leave
callw
imul
cmp
or
dec
outsb
push
jne
popf
lret
xchg
push
mov
mov
jnp
pop
sbb
push
inc
jb
scas
xchg
in
fnsave
mov
out
data16
fbstp
rorl
arpl
mov
adc
or
xchg
mov
jg
jecxz
sub
fcoms
pop
push
aaa
mov
dec
movsb
mov
into
pop
and
std
cs
fistl
test
aas
inc
in
aad
and
sbb
test
hlt
shll
jno
adc
dec
cltd
and
push
mov
xor
jno
push
loopne
addb
pop
std
es
iret
xchg
mov
and
cmp
jbe
test
test
xor
jecxz
ret
fildll
xor
or
add
jle
fisubrs
mov
mov
imul
addr16
addr16
push
outsb
cmp
or
outsl
pop
stos
adc
push
push
xor
sbb
es
fs
es
add
mov
mov
les
mov
je
call
je
inc
les
xor
inc
jno
sbb
inc
addr16
js
jo
mov
sbb
stc
cmpsl
and
xlat
stc
or
test
movsl
cmp
and
mov
mov
dec
add
or
mov
mov
sub
clc
rcrb
dec
push
hlt
push
add
or
add
call
or
pop
fisubrl
pop
mov
repnz
and
imul
xchg
inc
pusha
repz
mov
mov
jg
cmp
add
pop
data16
dec
enter
push
and
loop
mov
sbb
sti
cmpsl
rcr
mov
mov
std
pop
imulb
jae
in
addl
inc
out
xlat
hlt
mull
mov
pop
sbb
fimuls
stos
mov
push
int3
push
icebp
lcall
sbb
xchg
or
popa
divl
xlat
jle
mov
jle
das
add
jns
int3
and
out
xchg
aas
push
lret
mov
jmp
pop
fstps
mov
sub
insl
subl
call
jno
mov
jns
rcr
adc
xchg
mov
mov
fsubrs
dec
iret
sub
inc
dec
sbbl
jae
pop
enter
jg
in
sub
divb
push
cli
popa
test
popf
lret
cld
mov
and
rolb
cmp
sahf
push
add
ret
sbb
dec
xchg
jp
push
pop
lea
in
bound
mov
je
mov
adc
push
gs
bound
lahf
pusha
jp
pop
insl
or
daa
mov
xchg
add
ljmp
inc
fidivrl
test
loope
insb
shll
mov
sbb
ret
cmp
xorb
push
inc
dec
leave
fistpll
xchg
mov
xchg
mov
pop
cltd
lds
xchg
sub
xor
in
gs
xchg
imul
ret
jecxz
push
cmpsl
jmp
out
jb
cwtl
and
js
jno
mov
pusha
push
jbe
and
ds
push
adcl
mov
orl
dec
enter
dec
and
push
pop
pushf
out
in
popf
pop
mov
and
xor
and
pop
jb
das
inc
sbb
nop
push
cmp
es
arpl
ljmp
xchg
ret
mov
mov
inc
sub
sti
jae
dec
and
inc
fisubs
mov
cmpsb
ds
xchg
pop
sub
ret
dec
gs
add
shrb
nop
mov
mov
stc
je
pop
orb
ss
shld
gs
test
mov
cmp
push
ficoml
fsubr
sbbl
or
pop
mov
cmpb
mov
sarl
inc
adc
lcall
repnz
mov
pop
insb
cwtl
or
lahf
lods
or
jo
dec
scas
nop
mov
cld
push
out
xchg
ss
jmp
scas
push
outsl
jl
cwtl
das
in
mov
cmc
lret
leave
fsubr
jl
sbb
outsl
lcall
ficompl
xchg
es
inc
sbb
inc
sbb
cmp
mov
cld
lcall
mov
clc
rol
lods
ficomps
jns
pop
out
mov
sbbb
stos
jle
je
scas
int
loope
ret
push
shll
ret
dec
cs
pop
adc
les
pushf
repz
inc
mov
mov
movsb
das
dec
cltd
pop
lcall
cmpsb
mov
fldlg2
mov
fidivl
or
xchg
mov
pushf
xor
xchg
adc
pop
jb
add
loope
adc
xlat
xchg
push
jecxz
movsl
leave
es
mov
gs
jmp
enter
sbb
mov
adc
aam
loope
or
mov
aaa
push
in
inc
fisttpll
ret
ret
or
dec
bound
push
mov
mov
jge
mov
cmp
push
stos
imul
and
xchg
das
jb
repnz
xor
mov
push
dec
sub
clc
addr16
fsts
sub
out
fwait
sbb
jo
cmp
jo
js
xorl
and
in
cltd
dec
inc
divl
xor
out
push
je
cmp
mov
push
inc
mov
das
pop
or
dec
divl
call
mov
sbb
pop
cltd
ja
mov
jnp
lods
mov
not
push
or
adc
sahf
insb
xor
hlt
or
scas
shl
loopne
mov
cmp
iret
or
cs
popa
mov
or
leave
flds
mov
and
xor
jmp
inc
add
xlat
sub
adc
sub
mov
mov
mov
lcall
jl
mov
mov
sub
add
cmp
add
pop
mov
mov
test
in
incl
dec
dec
mov
jle
push
adcl
push
push
jmp
cmpsl
jb
and
jb
pop
rclb
push
dec
cmpsl
sub
rcrb
stos
loopne
fsubr
pop
mov
mov
ds
cmp
cmp
stos
pop
sub
jge
ret
dec
in
sar
in
sti
negb
xchg
aas
repz
or
lea
popf
jbe
cmp
jae
testb
jle
push
and
insb
or
lds
push
mov
outsb
pop
stos
adc
lods
inc
in
xor
sbb
es
or
sub
gs
sub
arpl
mov
sub
ss
mov
popa
divl
pushl
sbb
in
je
xor
test
addr16
sti
push
popf
xor
and
repz
xchg
out
adc
call
andb
adc
nop
adcb
das
cmp
pop
adc
xchg
push
hlt
mov
sbb
and
icebp
xor
pop
dec
stc
jnp
push
add
cltd
mov
jns
push
mov
mov
ret
pop
xchg
adc
mov
mov
jl
insb
arpl
and
sub
dec
xchg
insl
stc
dec
pop
cwtl
repnz
shrl
mov
inc
pop
and
orb
cmpsb
jns
dec
sub
inc
decb
andl
enter
ljmp
das
sub
pop
sub
push
enter
mov
in
icebp
pmaxub
add
sbb
jae
pop
sub
mov
dec
scas
aaa
mov
or
mov
cwtl
xchg
mov
fwait
jge
loopne
dec
or
mov
mov
mov
dec
lret
push
lods
fwait
in
xchg
scas
and
addr16
sbbb
jecxz
in
ret
sbb
enter
arpl
mov
imul
pop
movsb
test
pop
div
cwtl
fdivl
repz
mov
xchg
movl
enter
scas
or
mov
popf
aam
iret
inc
sti
pop
icebp
sbb
repz
sarl
inc
dec
add
push
je
mov
sub
cmc
pop
insl
push
push
add
dec
xchg
test
add
lea
pop
adc
pop
add
fs
xchg
rcll
fdivl
popa
orl
pop
push
outsl
fldenv
out
fildl
mov
mov
adc
dec
cmp
bound
xchg
push
or
int3
push
lea
out
xor
jge
xchg
cmc
push
adc
in
sti
pushf
clc
sub
inc
cmp
out
add
and
push
xchg
js
cmp
dec
dec
pop
push
jle
ret
es
mov
addl
mov
loopne
xor
jmp
sbbl
push
lds
adc
push
into
xor
jecxz
icebp
fwait
pop
inc
mov
mov
xor
jno
dec
mov
dec
or
insl
popf
mov
inc
mov
stos
in
lahf
call
and
test
sub
add
mov
in
ss
dec
stos
dec
aam
ss
in
inc
cli
rorb
clc
mov
notb
mov
mov
xor
mov
aas
ret
fwait
xor
cwtl
push
inc
dec
add
adc
arpl
out
xchg
aad
outsl
push
nop
mov
inc
xor
sbb
ds
les
and
in
adc
ret
pop
adc
frstor
add
call
sub
adc
cmpsl
inc
xlat
lcall
out
lret
repz
out
test
cld
mov
sbb
mov
mov
push
shl
xchg
add
sbb
test
mov
jmp
adc
cltd
xchg
fdiv
imul
jb
xchg
scas
testb
iret
sbb
sub
arpl
mov
mov
data16
fsubrs
xchg
pop
divb
lods
jg
fistps
jp
and
lea
jmp
cmc
xchg
in
inc
roll
shl
sbb
mov
test
cmp
jbe
push
test
imul
aaa
into
iret
fbstp
add
sbb
scas
lret
inc
or
dec
jb
ss
scas
or
jl
popf
cmp
mov
aam
fisttpl
add
imul
mov
imul
adc
das
loopne
xor
clc
ja
test
sti
xlat
ja
pop
and
pop
mov
cmp
lret
lahf
xchg
mov
push
and
sbb
jge
sub
les
imul
jns
insl
push
outsl
iret
roll
incb
lret
cmpsb
loopne
pop
adc
xchg
adc
jg
stos
scas
cmp
inc
xor
pushf
push
jmp
iret
mov
pop
pop
cmp
jbe
lahf
enter
mov
jno
add
add
jl
mov
div
cli
push
pop
loopne
mov
sahf
mov
add
pop
cmc
fsubs
xor
bound
pop
imul
fldt
test
sarl
rol
push
ss
stos
push
rclb
cs
loopne
arpl
cmpsl
sub
mov
jl
outsl
lea
ret
jge
shll
push
xor
fwait
je
xchg
xchg
dec
jno
loopne
aaa
and
mov
jo
inc
mov
lods
sub
pop
int
jnp,pn
addr16
movsl
pushf
mov
dec
mov
shrl
std
fmull
xchg
shll
neg
dec
ficoms
inc
pop
int3
mov
jns
out
dec
add
mov
popf
or
jmp
je
lods
mov
mov
pushf
xor
mov
into
loop
xor
xchg
pop
push
add
pop
outsb
pushf
pop
mov
pop
fldcw
push
ja
push
imul
lods
dec
enter
insw
into
fisubrl
jge
int3
push
mov
test
insb
mov
fisubrl
push
fwait
imul
je
pop
lods
inc
jp
add
icebp
mov
daa
sbb
cmpsb
jge
inc
or
decb
fwait
jg
mov
popa
stc
test
or
xchg
push
sub
fsubl
rorl
ljmp
mov
or
mov
jecxz
in
cmpsl
mov
fcompl
rcr
outsb
shrl
incb
movsb
xor
push
push
and
sub
adc
pop
imul
repnz
inc
flds
mov
stos
and
sbb
or
lcall
inc
jno
ds
push
mov
mov
push
addr16
jl
lcall
adc
push
mov
insl
fs
push
mov
sbbl
add
xchg
inc
mov
or
mov
add
mov
push
inc
sbb
xor
cmp
addr16
nop
insl
pop
lcall
xor
test
sahf
notb
outsb
mov
ret
je
and
pop
div
jg
or
dec
adc
hlt
movsb
int3
fsubs
and
mov
movsb
aas
mov
ja
ret
in
jbe
push
or
dec
pop
jno
test
sbb
pop
or
inc
jbe
data16
lea
and
jae
cmpb
pop
adc
push
lods
jmp
movsb
notb
inc
mov
push
sub
arpl
enter
lret
sahf
xor
scas
sahf
mov
cmp
xor
or
dec
xchg
movsl
fisubs
mov
mov
mov
push
inc
and
aaa
fisubl
mov
fwait
xor
sarb
movsl
ljmp
adc
subb
stos
push
mov
xchg
mulb
mov
mov
ds
cs
push
addr16
cwtl
ja
arpl
xchg
shlb
out
aad
pop
mov
out
jnp
pop
je
dec
aaa
mov
pop
pop
adc
xlat
sbb
je
out
push
int
repz
xchg
inc
lret
mov
inc
std
in
test
scas
add
mov
adc
inc
pop
add
xchg
and
in
ljmp
mov
inc
push
and
cmc
push
cmp
jmp
inc
mov
lods
in
add
loope
xor
mov
mov
jnp
test
into
push
movl
dec
mov
nop
cmp
dec
gs
insl
nop
lods
xchg
mov
jnp
mov
mov
js
retw
jne
jecxz
sub
sarb
cmp
imul
out
jnp
ljmp
inc
aaa
jb
inc
and
sub
in
pop
lds
scas
mov
cltd
sti
lcall
cltd
test
in
pop
out
sbb
shrb
fcoml
xchg
fs
add
lods
idivb
lods
pushf
cmp
test
mov
fldl
aam
fwait
mov
ss
subl
stos
push
xchg
push
cwtl
cmpsl
sbb
jae
cmp
es
cmpsl
mov
cmpsb
cmp
mov
aam
jp
movsl
push
imul
iret
xor
loope
lret
ds
xor
rclb
outsb
push
push
insb
data16
mov
loopne
or
pop
scas
out
add
daa
pop
pop
leave
scas
fsubrl
cmp
cld
outsl
jmp
repz
mov
xor
inc
addl
imul
lds
lds
addr16
cltd
push
dec
lods
push
sub
xlat
cmp
fadds
pop
mov
repnz
lds
mov
dec
push
popa
cmp
xorb
icebp
jge
dec
xchg
add
push
std
aaa
fwait
jbe
jb
inc
out
cli
std
cltd
xor
pop
xor
dec
inc
push
cmc
xor
mov
cmpsl
cmp
push
cmp
or
je
nop
lock
aaa
pop
inc
xchg
lahf
orb
or
add
cmp
and
je
pop
xchg
je
add
or
sbb
mov
add
scas
loop
loope
xorb
shrl
push
sbb
cmp
out
cmpsl
adc
hlt
add
pop
cmc
cmp
inc
test
lahf
xchg
cmp
mov
dec
incb
push
add
into
cs
add
push
mov
adc
mov
sbb
push
xchg
and
sbb
jg
dec
lods
ja
pop
or
ss
add
xorb
and
aaa
daa
or
or
and
cwtl
bound
out
sbb
inc
sarb
aam
pusha
adc
lcall
repnz
repnz
out
stos
jbe
mov
and
gs
gs
cwtl
xchg
cmp
arpl
rol
push
sbb
inc
fmull
adc
or
movsl
cmp
bnd
and
aas
add
and
lods
inc
notb
movsb
icebp
sahf
sub
loope
xor
cmpsb
adc
and
xchg
sub
pushf
push
std
xchg
shll
mov
jbe
mov
rcll
dec
repnz
xor
outsb
ret
sub
mov
push
cli
jp
bound
ljmp
cld
sahf
xor
in
dec
mov
in
sbbb
call
adc
cmp
pushl
push
sbb
mov
cmpb
push
xor
xchg
sbb
jbe
mov
adc
add
stos
sub
cltd
inc
or
push
lock
or
cmp
pop
add
andb
xchg
mov
test
aaa
push
test
inc
push
sbb
cmp
negb
lret
lods
imul
jbe
mov
dec
lea
mov
dec
inc
inc
shlb
cmpsb
fadd
loop
add
mov
xchg
cmp
pop
stos
xchg
adc
ds
insl
mov
lcall
outsl
add
imul
jnp
push
pop
cmc
dec
jns
iret
mov
fistl
fneni(8087
jl
lock
or
jns
cmp
stos
mov
or
sbb
mov
je
xor
mov
dec
test
xchg
sub
arpl
loop
es
push
mov
mov
dec
add
add
cwtl
rclb
xor
ds
inc
out
jecxz
or
out
stc
and
test
mov
cwtl
jmp
fnstcw
or
jo
pop
inc
insl
sub
testb
pop
jb
push
inc
gs
jecxz
loope
cs
mov
test
fmul
lahf
push
push
push
jge
push
out
push
aas
sahf
data16
outsb
jne
pop
and
inc
inc
in
adc
call
sbb
mov
lcall
pop
mov
jno
test
std
jl
das
inc
and
inc
popf
mov
fbld
das
mov
fnsave
mov
pop
sbb
pop
jbe
sbb
scas
cmp
inc
lret
add
pop
fadds
pop
lahf
bound
aam
in
imul
hlt
aam
adc
dec
dec
mov
aad
scas
rcl
jno
or
push
jle
es
pop
ja
mov
jne
and
jno
sar
out
shl
mov
and
cmp
inc
pop
imul
loopne
mov
mov
ja
loope
jmp
xchg
add
jbe
shrb
push
out
dec
jecxz
jle
cmp
lahf
xor
into
inc
jge
shrb
fcmovnb
mov
inc
jne
imul
rol
adc
sub
ret
mov
clc
popa
or
xor
and
and
stos
cwtl
test
and
jge
gs
xchg
jbe
jecxz
mov
ss
icebp
jae
sbb
inc
fsts
add
mov
jns
lods
mov
sbb
pop
adc
xor
pushf
sarb
out
mov
shrb
fildl
mov
mov
inc
out
or
mov
fcoms
std
dec
cltd
rolb
int3
ret
mov
in
xchg
fisttpl
nop
imulb
pop
shl
mov
inc
leave
mov
or
fists
mov
mov
call
sbb
adcl
jg
jo
icebp
sbb
stos
or
and
inc
push
test
es
jp
xchg
test
add
roll
add
adc
sbb
xchg
adc
jge
stos
lahf
xchg
test
jecxz
inc
push
sbb
ja
jne
add
mov
cmp
outsb
and
cltd
rorl
add
mov
stos
adc
jno
sbbb
in
jbe
pop
out
dec
js
mov
lea
imul
jbe
ja
in
jnp
cltd
aas
and
mov
jp
cmpsb
lods
in
aam
cmp
lods
int3
rolb
aas
xchg
dec
pop
or
arpl
xchg
out
mov
cli
pop
data16
sbb
xchg
cld
fidivrs
mov
aam
out
test
rcr
mov
bound
mov
leave
push
push
lods
jle
stos
and
or
push
mov
cmp
dec
lahf
unpcklps
enter
movsl
add
xchg
sbb
xchg
imul
jl
repnz
jecxz
sbb
rol
push
xor
jmp
sbb
or
sti
shrb
clc
and
iret
inc
push
std
push
insb
das
sbb
mov
xor
jle
lcall
jmp
inc
outsl
pop
ret
mov
jge
subl
in
clc
sub
sbb
xchg
in
mov
shl
xchg
cwtl
stos
mov
cltd
imul
xchg
sbb
dec
add
adc
ja
pushf
dec
das
stos
in
stos
int3
icebp
out
adc
lds
pop
xor
mov
cs
add
shrb
inc
cs
dec
test
sbb
dec
sub
and
les
repnz
inc
stos
cmp
out
pavgw
insl
imul
xchg
push
test
jo
xchg
pop
mov
mov
or
cmpb
xchg
sbb
sbb
mov
xor
add
test
loop
and
pop
rorb
xchg
pusha
sub
xchg
repnz
in
cltd
jo
jno
cmp
test
repnz
mov
push
or
imul
and
jne
imul
lahf
stos
in
pop
loopew
push
push
fs
inc
and
jnp
mov
pop
scas
call
and
sahf
jp
mov
pop
xor
stc
nop
mov
add
dec
loopne
pop
lahf
cmp
and
and
std
xor
push
ljmp
shl
sub
data16
mov
sbb
int
gs
in
shl
mov
sub
scas
dec
loopne
data16
aad
enter
inc
fwait
sbb
stos
jbe
imul
push
mov
stos
jl
add
sub
cmpsb
dec
push
sti
xor
ror
fwait
int
inc
out
stc
jmp
stos
pop
das
pop
push
cmp
sub
sub
shrl
sbb
push
leave
cmp
iret
movsb
ret
insb
dec
lods
or
fimuls
dec
mov
mov
mov
inc
loop
cmp
or
ret
scas
iret
lret
test
sbb
es
or
leave
push
fs
vunpcklps
loopne
daa
fdivrl
ret
and
test
test
loop
sub
mov
push
fnstenv
sbb
ja
xor
lock
imul
mov
mulb
push
push
aaa
push
mov
push
scas
into
pushf
stc
fildll
movsl
sbb
mov
stos
xor
cld
push
cltd
sub
or
cmpsb
dec
mov
mov
repz
jmp
or
push
stos
in
mov
cmp
testl
mov
rcrl
push
cmpsb
dec
push
jecxz
sar
xor
pop
adc
or
cmp
loope
sub
mov
stos
jecxz
sbb
stos
loop
xchg
xlat
ljmp
mov
dec
mov
cmpsl
dec
hlt
out
push
das
cmp
or
fisubrl
mov
mul
mov
adc
into
in
inc
fcompp
hlt
lea
aaa
push
test
fimuls
mov
out
jns
jnp
pop
pop
xor
aam
das
mov
add
mov
pop
fldenv
into
fwait
xor
call
jmp
xchg
imul
stos
repnz
mov
jb
cmpsb
negb
test
sbb
pop
pop
jg
sahf
shrb
mov
push
mov
js
in
sub
test
inc
mov
push
popf
clc
inc
insb
ds
sbb
mov
sahf
push
push
inc
xchg
inc
add
jne
jae
dec
ss
fsubs
out
cld
or
jne
fmul
inc
fdivs
push
in
in
jg
pusha
inc
js
jbe
lret
mov
testb
mov
ret
rcl
cli
jnp
sbb
dec
rcrb
cmp
xor
xor
bound
jbe
ds
jl
out
adcb
sbb
add
jb
out
or
adc
jmp
jp
adcb
mov
fldl
push
movsb
cli
push
decl
fsubrs
loop
pop
jg
sbb
xor
shll
fnstenv
and
js
pop
movl
clc
mov
and
sbb
pop
aas
fstpl
in
xor
mov
mov
inc
out
movsb
cmp
and
adc
ret
pop
call
dec
data16
jp
cmpsl
sbb
test
pop
mov
cltd
je
and
mov
sbb
inc
jmp
cmp
dec
mov
cmp
cmp
mov
sbb
cld
imul
loop
addr16
out
aas
hlt
and
xor
fnsave
sub
imul
and
jp
mov
lcall
and
adc
or
aas
mov
ja
push
into
ds
pop
jl
adc
lea
lods
sbb
dec
jge
iret
sub
inc
lods
pusha
xor
in
aam
inc
lds
int3
mov
pop
dec
popf
inc
fnstcw
push
and
xchg
sti
push
pop
add
js
ss
fstpl
mov
and
aam
jge
sub
out
sub
sub
mov
into
pop
fldl2e
jb
sub
xchg
ja
push
inc
call
test
and
push
insl
arpl
mov
sbbw
enter
cmp
dec
popf
inc
nop
push
ficoml
fs
clc
imul
push
cmp
inc
shrl
ds
mov
dec
and
mov
xchg
sbb
in
adc
in
jl
and
jmp
or
mov
add
mov
push
fcmovbe
or
cmc
inc
out
push
inc
push
push
push
test
mov
dec
lea
sbbl
pop
sub
adc
mov
cmp
or
loope
scas
into
and
mov
test
push
notb
cmpsl
mov
mov
xorb
cld
push
mov
in
or
mov
cwtl
mov
push
lret
and
dec
out
mov
cmc
inc
inc
outsb
repz
and
cmpb
jle
ja
out
xchg
hlt
adc
pusha
fsubs
scas
add
lretw
jae
xchg
daa
inc
das
test
pop
out
sub
int3
xor
decl
repz
mov
mov
data16
stc
xor
push
and
aaa
cmp
push
xchg
out
fwait
jne
cmpsb
scas
or
adcb
js
xlat
lcall
testb
lahf
mov
ss
push
push
rcr
loopne
mov
mulb
inc
scas
movsl
enter
mov
jmp
fidivrl
or
test
mov
ret
mov
xchg
pop
mov
dec
pushl
sbb
jle
pushf
xor
mov
dec
sub
push
mov
clc
nop
sub
fcomps
xor
imul
pop
cmpsb
dec
and
mov
mov
mov
fsubrl
xlat
pop
repz
shl
or
shrb
xchg
or
shr
div
popf
stc
xor
adc
gs
xchg
inc
mov
adc
cmc
or
jecxz
enter
enter
sub
rcll
cmp
ljmp
fcompl
bnd
lret
mov
rol
movsl
xchg
in
pop
leave
jne
and
cmp
test
xchg
add
js
in
dec
cmp
pop
xor
adc
or
xchg
scas
and
outsb
pop
icebp
stos
dec
fdivp
movb
mov
mov
add
jne
in
sub
loope
lret
lock
inc
scas
add
lcall
mov
fwait
dec
mov
loop
add
and
lea
mov
inc
lock
cmc
pop
pushf
sbb
cmp
or
gs
in
xor
in
aam
adc
scas
xor
fsubrp
fdivl
jne
rorb
push
sub
subb
icebp
mov
fsubrs
lds
imull
movsb
or
jmp
cmp
mov
pop
jb
add
lret
aad
mov
aam
mov
lds
jnp
sbb
lea
sbb
add
jae
insl
jge
lods
sub
add
inc
popa
or
or
add
shrb
or
jecxz
pushf
lea
fwait
adc
movsl
xchg
jecxz
pushf
pop
iret
mov
and
shll
mov
repnz
lods
es
dec
add
push
jno
and
std
bound
mov
mov
ret
mov
mov
in
pop
pcmpeqw
mov
add
cmp
cs
push
push
and
in
lods
test
orb
mov
out
daa
push
shrl
insb
adc
clc
mov
test
push
or
xchg
loop
dec
jecxz
cmp
push
xchg
lods
sahf
ds
out
pop
adc
jo
shll
iret
data16
inc
or
cmp
out
popa
jle
jp
inc
mov
xor
repz
pushf
test
scas
aas
mov
rdtsc
pushf
pop
lret
and
ljmp
xchg
adc
xchg
mov
push
popf
cmpsl
bound
add
add
add
scas
out
test
cli
scas
out
sub
dec
cld
cmp
and
fildll
insl
xorb
fidivrl
nop
cmp
inc
data16
jp
repnz
lea
adc
stc
inc
sti
push
fiaddl
addb
and
xlat
stos
arpl
psubw
pop
mov
test
bound
mov
push
loopne
and
inc
adc
adc
or
lock
xchg
daa
mov
lcall
in
xor
inc
ret
bound
call
cmpsb
iret
rcl
pop
mov
mov
fbstp
stos
fdivs
stc
popa
sbb
jb
mov
cmpsb
sbb
lods
mov
lcall
inc
fs
icebp
inc
cld
mov
xor
mov
adc
or
gs
addr16
cltd
lcall
fcomip
pop
fadds
sbb
aam
subb
dec
jg
jecxz
sbb
lock
pop
jg
mov
divl
rorl
lea
mov
pop
pop
mov
mov
insb
xor
sbb
loopne
inc
xchg
fs
jns
dec
jbe
cld
scas
subl
in
add
jae
int3
movsb
mov
fwait
push
jns
fbstp
inc
push
dec
mov
adc
pop
sub
cmpsl
fstpt
or
clc
sbb
popf
cli
stos
adc
mov
pop
popf
xor
sbb
negl
imul
stos
ret
stc
mov
test
in
mov
mov
adc
mov
mov
out
test
sarl
ret
fisubs
repnz
ret
in
dec
shlb
push
jnp
cmpsb
sub
dec
mov
std
or
dec
subl
sub
mov
stos
pop
outsl
mov
arpl
or
cmp
push
lods
mov
sarl
pop
shrb
and
mov
cmc
cmc
mov
push
lods
xlat
mov
cli
push
in
mov
pop
sti
std
mov
ja
rcrl
inc
les
adc
into
fstpt
adc
push
xor
dec
xor
sar
dec
pop
stc
and
cmp
arpl
test
insb
adcb
jno
lahf
jnp
xchg
sub
mov
hlt
inc
pushf
cmc
lods
pop
ret
lahf
add
or
ljmp
xor
lods
or
repz
pop
inc
add
cs
mov
mov
out
mov
dec
mov
cli
xchg
dec
test
push
adc
daa
pop
inc
ds
mov
jne
sbb
lds
add
outsl
add
imul
lret
inc
or
push
mov
jmp
or
jp
mov
adc
adc
and
cwtl
xchg
shll
pushw
call
lcall
and
aas
push
inc
xlat
test
rorl
loope
add
lds
mov
fsubrp
fisubl
outsb
sbbb
aad
aam
leave
mov
stos
xchg
mov
pop
testl
lds
adc
stos
push
inc
mov
imul
or
fiadds
add
shrb
pop
adc
xor
outsb
push
imul
bound
cmpsb
ja
add
cmp
stc
js
loopne
aad
sub
pop
pop
ret
shrl
dec
sub
sti
xchg
xchg
daa
cs
cmp
or
jecxz
or
push
mov
cmp
mov
inc
gs
cwtl
stos
dec
xchg
imul
add
aam
xchg
xchg
mov
imul
sub
lcall
scas
rcll
push
mov
jmp
pop
mov
mov
stos
inc
xchg
cmpsl
incb
jno
mov
cmpsl
gs
cltd
pop
sbb
xor
rclb
jns
inc
pusha
jge
add
lret
pop
mov
adc
es
mov
cmp
mov
cmp
cmp
ror
gs
stos
outsb
inc
dec
dec
jbe
imul
push
mov
cmp
mov
popa
jl
add
ds
les
adc
loopne
ret
adc
ds
xchg
sbb
aaa
or
pop
or
repz
aaa
cmpsb
arpl
rcr
fs
js
subb
in
sbb
mov
cs
clc
ficomps
decb
int3
or
enter
stos
mov
mov
push
xor
loop
or
adc
jns
fnstenv
mov
jmp
add
pop
mov
shrb
pushf
in
mov
jmp
loopne
xor
or
dec
mov
sbb
stos
and
xchg
xor
sbb
mov
jno
add
push
int3
shll
popa
fnsave
adc
adcb
jg
andb
call
or
cmp
push
xor
jmp
dec
outsl
inc
sti
jl
sti
sbbb
cmp
outsl
testb
dec
sti
insb
jnp
scas
movsb
out
xchg
dec
pop
adc
ds
das
jo
lods
inc
lahf
shll
push
pusha
mov
push
mov
dec
test
push
fstpt
shl
jbe
std
call
or
or
sbb
sub
fildl
xchg
les
sbbl
outsb
aad
adc
cmp
pop
mov
notl
mov
nop
ror
adc
xor
jl
mov
push
cmc
scas
cmpsb
mov
gs
imul
jne
mov
dec
sbb
sbb
mov
imul
scas
or
aam
xchg
stos
in
pop
repz
inc
xor
xchg
cmpsl
and
lcall
jns
adc
jns
fcoml
mov
jbe
aas
pop
cmpsb
insb
mov
in
outsl
and
dec
push
rcrl
aas
adc
mov
in
daa
aaa
jmp
xor
dec
pop
adc
mov
xchg
xor
cmp
add
add
adc
or
push
addr16
pop
mov
mov
insl
hlt
test
fs
out
cmp
jb
loop
sub
stos
icebp
adc
icebp
jecxz
mov
stc
sub
fldenv
aad
mov
push
in
incb
and
pop
push
sub
jno
loop
xlat
sbb
mov
pusha
sub
push
inc
gs
lret
and
xlat
jle
mov
and
call
mov
fldcw
and
cmp
andl
int3
xchg
mov
mov
cmp
cli
inc
mov
xlat
xor
popa
arpl
add
outsb
loope
andl
jo
or
mov
mov
pop
call
push
xchg
inc
xor
inc
in
lock
cmp
mov
fwait
sbb
xchg
cld
mov
xor
decl
mov
pop
mov
mov
dec
loope
cmp
fidivs
lahf
inc
mov
push
or
and
push
mov
mull
loope
hlt
push
cs
mov
pop
fs
mov
sub
sub
mov
mov
std
or
jno
dec
ret
xchg
clc
jle
cmp
jp
cs
stos
dec
add
stos
dec
mov
mov
sbb
inc
pop
divb
mov
scas
cld
cmpsb
jo
fdivs
mov
sbb
cwtl
call
adc
push
mov
fsubrs
iret
push
out
xchg
faddl
mov
std
xchg
js
or
and
dec
add
and
adcl
mov
cmp
dec
iret
dec
dec
or
mov
dec
rcl
push
add
add
xor
into
sbb
cmp
add
sbb
mov
push
xchg
sbb
jae
push
mov
bound
lock
testl
or
loopne
xchg
jl,pn
clc
mov
push
negl
mov
cmp
test
test
lcall
jbe
bound
mov
test
adc
test
and
xchg
sub
cmpsl
xor
push
push
subl
rclb
rorl
stc
inc
mov
cli
sbb
mov
mov
jl
aas
scas
pop
ror
cmp
pop
out
and
aaa
mov
inc
sbb
mov
jnp
pushw
negl
jge
ja
cmp
inc
gs
std
mov
ret
jmp
push
aas
xchg
jecxz
jnp
sahf
xchg
sub
mov
imul
idivl
gs
movsl
loopne
cs
inc
mov
fidivrs
xchg
lds
mov
mov
nop
sub
or
pop
insl
mov
lods
lcall
inc
andb
stc
adc
mov
sahf
aaa
push
inc
imul
mov
shll
push
into
pop
loopne
inc
outsb
mov
inc
stc
daa
bound
movsb
test
icebp
jae
mov
dec
mov
add
push
shll
mov
out
mov
push
mov
fs
push
int3
sbb
stos
mov
lcall
les
adc
inc
js
dec
stos
addr16
cmpsb
bound
loopne
dec
lcall
or
sbbl
aaa
lret
jle
inc
mov
push
movsb
mov
and
int
imul
dec
into
insb
out
imulb
ficompl
fbld
jmp
or
mov
mov
jno
test
jmp
popa
mov
and
test
push
pop
pop
mov
loopne
xor
sub
cmp
cmc
inc
jmp
sbb
leave
popf
sbb
cmp
push
jge
jp
shrl
in
fnstcw
je
mov
or
ret
xor
bndstx
xchg
mov
mov
js
pop
out
sbb
call
push
test
ret
outsl
inc
dec
gs
xchg
mov
mov
nop
psubb
in
cmp
in
sub
in
dec
pop
pop
sub
stos
gs
and
ljmp
popf
stc
cs
aad
addr16
es
mov
out
iret
mov
orb
outsl
movsl
cmpsb
xchg
jo
bound
test
dec
popf
xor
push
xor
and
add
lret
add
mov
int3
sub
push
xchg
loop
adc
adc
mov
subb
lds
ja
or
dec
jecxz
mov
xchg
jge
cmp
dec
call
cmp
loope
pop
jnp
inc
cmpsl
icebp
mov
lods
inc
jecxz
add
out
in
sbb
fdivrl
rorl
push
push
stos
cmp
fs
mov
aas
mov
push
ljmp
jno
pop
mov
fbstp
dec
test
inc
int
jb
jnp
int
ret
push
pop
inc
daa
dec
arpl
pop
xchg
mov
dec
bound
shlb
hlt
pop
outsl
bound
out
xchg
das
add
mov
mov
daa
jbe
es
mov
dec
cmpl
mov
push
cld
inc
fdiv
jg
push
xor
shlb
dec
add
clc
scas
or
pusha
shlb
push
in
fwait
jb
adc
stc
sub
out
jae
push
jae
test
cmpb
clc
dec
fdiv
loope
lds
stos
shll
pop
imul
or
imul
test
push
mov
das
mov
jb
fwait
xor
test
ret
and
lods
or
test
mov
into
or
flds
loope
xor
pop
mov
jl
scas
xchg
jge
int
push
xor
sub
push
sarb
jb
ja
lods
in
test
mov
xorl
fdivl
rol
pop
jl
pop
or
std
outsb
push
aam
mov
fistpll
mov
ret
and
sbb
ret
sub
in
inc
sbb
adc
mov
xchg
pushf
outsl
push
xchg
inc
dec
lcall
out
jb
daa
test
lret
jp
xor
in
das
cmp
enter
in
cld
xchg
pop
aaa
mulb
lods
movsl
mov
cmpsl
sbb
dec
dec
adc
frstor
dec
pop
xor
and
gs
mov
sub
and
cmp
mov
sub
fnstcw
shrl
loope
ret
push
fistps
push
and
mov
jbe
mov
jp
inc
test
cwtl
das
test
aas
xchg
add
jg
cli
adc
cmp
shrl
mov
xchg
ja
fcoml
mov
inc
popa
lods
lock
mov
lcall
and
iret
movsb
into
lahf
repnz
out
daa
pusha
in
aaa
cs
pop
mov
ja
pop
cs
push
mov
das
mov
xor
xor
rcrl
testl
dec
daa
xor
jmp
mov
inc
leave
stos
arpl
and
inc
fmull
stos
arpl
je
pop
cmpsb
mov
pop
fdivrs
fsubl
idiv
ret
faddl
pop
js
mov
add
call
pop
mov
inc
sti
pop
lret
jne
lahf
push
jmp
and
rcrl
insb
push
fcmovb
xchg
mov
or
push
inc
pop
adc
aad
xchg
sub
lock
call
jecxz
cmpsb
sub
add
lret
xchg
sbb
gs
push
in
test
sub
inc
mov
cmc
mov
inc
adc
ficompl
je
cwtl
test
push
out
clc
or
fisubrs
sub
int
js
incb
inc
lcall
sub
dec
mov
mov
dec
mov
fisubl
sub
into
fnstenv
push
add
xor
sbbb
pushf
mov
sbb
or
mov
jbe
ss
inc
cwtl
aam
lret
ljmp
call
cmp
daa
lods
inc
sti
jge
out
or
push
adc
xor
mov
clc
fcomp
arpl
jl
dec
pop
scas
cmpsb
mov
shrl
mov
pusha
out
push
push
mov
out
mov
dec
xlat
std
pushl
add
and
push
push
jp
fs
mov
sub
push
out
xor
jle
xorl
sbb
mov
dec
lds
jnp
dec
in
pop
lods
inc
outsb
xchg
pop
test
fwait
xor
aaa
adc
outsb
or
enter
addr16
mov
out
xchg
pop
addr16
mov
or
inc
adc
test
fistpl
add
add
hlt
mov
sub
hlt
ljmp
js
test
lret
rol
data16
ljmp
pushf
mov
into
mov
pop
outsb
das
sbb
insl
dec
cwtl
das
shll
dec
aam
pop
in
outsb
jp
adc
test
loopne
sbb
jmp
cli
stos
adc
mov
pop
xor
dec
push
cld
push
loope
sti
xchg
jmp
or
mov
loop
fdivrs
cs
mov
stc
outsb
in
dec
fwait
mov
jns
outsb
mov
inc
xlat
xchg
daa
xchg
mov
inc
xchg
mov
nop
push
iret
push
add
add
cmp
xchg
je
mov
inc
call
les
sarb
and
sbb
cmpsl
fisubs
add
xlat
and
in
iret
mov
jg
and
in
jb
mov
insb
xchg
sub
pop
ss
sbb
sbb
unpckhps
xor
stos
hlt
inc
push
daa
clc
stos
aad
ljmp
mov
out
mov
orl
ds
xchg
dec
pop
into
mull
cmc
and
mov
xor
ja
mov
pop
pop
xchg
sub
sbb
push
jg
pop
dec
pusha
pop
mov
or
inc
and
cmp
mov
shr
sbb
mov
push
lods
cs
pop
or
int3
inc
jno
lcall
mov
fsub
in
int3
adc
jne
test
fdiv
lcall
lods
aaa
fwait
fwait
adc
int
scas
mov
lahf
mov
ds
cltd
jns
scas
pushf
add
lret
xchg
xor
mov
test
mov
dec
lods
stos
daa
loopne
xorb
cmpsb
in
mov
cld
das
pop
fmull
pop
and
negb
sub
int
std
jne
int3
out
stos
add
jecxz
mov
or
outsl
pop
mov
sub
sub
pop
xor
into
bound
sbb
and
fiaddl
push
arpl
pop
fisubrs
outsb
ja
xchg
adc
jecxz
dec
pop
push
jg
lods
ljmp
cmc
mov
xchg
xor
push
sahf
ljmp
fiadds
in
mov
fwait
repnz
clc
fsubrl
mov
inc
into
pop
adc
or
push
cwtl
and
adcb
scas
js
insb
outsb
xchg
rcrb
dec
incl
push
lods
popa
pushf
negb
sahf
fs
mov
imul
xor
jns
hlt
jae
loop
xor
pushf
repz
hlt
push
add
mov
rcrb
fildl
int3
dec
fstps
dec
xor
arpl
inc
popa
clc
xor
ljmp
filds
fdivrp
popa
push
movsl
and
jbe
xor
xchg
cmp
out
pop
imul
je
popa
jne
outsb
xor
je
push
ja
aam
xchg
sub
mov
pop
outsl
sbb
xchg
int3
xor
dec
imul
lock
sub
aad
pop
call
cld
aam
icebp
mov
pop
testb
add
ljmp
popf
or
mov
jno
icebp
sub
je
dec
or
dec
sbb
in
pushf
and
dec
test
mov
cmp
mov
or
sbb
imul
mov
lcall
test
fs
in
push
adc
jecxz
repnz
jge
inc
xchg
repnz
xchg
fwait
xor
inc
dec
mov
movsb
inc
push
mov
push
push
fs
or
or
add
ffree
out
push
dec
or
dec
sub
mov
adc
cwtl
pop
adc
scas
and
cmpb
or
lahf
inc
push
dec
inc
rorl
cmp
mov
outsl
cli
pop
dec
icebp
add
jns
xchg
imul
jle
mov
pop
and
mov
rol
sti
xchg
imul
mov
dec
aam
lock
loop
shrl
xchg
adc
test
scas
mov
pop
inc
xchg
jmp
shr
outsl
xchg
repnz
adc
mov
mov
or
jecxz
jp
das
outsb
cmpsl
stos
mov
jb
dec
and
cmpsl
push
std
mov
lcall
mov
aam
fs
outsb
adc
les
mov
clc
aad
je
sbb
test
push
and
aaa
lcall
sub
xchg
inc
or
out
jns
push
sahf
fsubs
lds
push
loopne
std
lods
out
cmp
cmp
pop
cmp
jo
iret
sarb
and
jb
aam
sub
cltd
sub
mov
sub
shrl
and
int
jb
mov
dec
mov
jle
jp
lcall
cmp
xchg
mov
divl
cmpsl
jo
add
adc
sbb
divl
into
sbb
xchg
jno
jmp
inc
add
cltd
movsb
ja
loop
mov
mov
and
cmp
aam
hlt
imul
mov
stos
insl
loopne
insb
xchg
jp
xchg
das
add
shrl
mov
xor
imul
pop
andb
loopne
mov
mov
cmpsb
cmp
nop
xchg
fsubrl
pause
outsb
cmp
repnz
dec
xlat
sub
shrb
movsl
pop
sbb
xor
xchg
and
rorl
jp
paddsb
jne
dec
pop
inc
stos
add
icebp
push
outsl
xor
inc
sbb
out
pop
mov
aam
mov
scas
in
xor
insl
sbb
mov
push
mov
fadds
faddp
arpl
and
xor
sbb
mov
push
test
insl
jge
inc
mov
xchg
pop
ss
pop
dec
out
xchg
pop
mov
mov
int
xor
int3
sub
or
sub
das
test
sub
loope
pop
jmp
jb
ds
aas
mov
sarb
aas
lret
xor
in
ret
cmp
inc
fucomip
lahf
ds
sbb
inc
pusha
out
add
xchg
stc
cwtl
test
loopne
sub
aad
jnp
jge
aam
sub
xchg
inc
roll
movl
mov
gs
in
and
add
into
in
jb
nop
sub
out
stc
push
pushl
enter
sahf
sti
arpl
popa
pusha
lock
sbb
scas
test
xor
in
outsb
ljmp
pushf
lret
and
nop
popa
push
or
mul
mov
adc
mov
cmp
xor
fldz
into
gs
jle
sub
ret
dec
adc
sub
xchg
cmp
scas
hlt
jp
es
jecxz
into
adc
add
jp
test
ds
dec
jecxz
in
adc
insb
adc
cmc
lock
out
add
xchg
sti
sbb
loope
mov
stos
call
cli
xchg
lods
mov
lahf
and
mov
push
add
lea
add
push
dec
mov
ret
adc
fsubrl
mov
addr16
jae
mov
jmp
jmp
sbb
ds
cltd
and
and
lret
mov
aad
xor
mov
mov
aaa
faddl
rcl
mov
or
xchg
addr16
add
mov
repnz
nop
or
lret
movl
stos
xchg
cmp
jmp
lahf
push
repz
cmp
ds
and
fldenv
adc
pop
aas
jno
loopne
lea
ja
outsb
lock
scas
cmc
lcall
sbb
movsb
lods
leave
int
movsb
or
pop
and
scas
lea
sub
bound
ss
cmpb
stos
push
xchg
mov
push
push
add
sbb
xlat
or
shrl
andb
lea
mov
or
mov
clc
jge
mov
sbb
out
aaa
int3
add
popw
lret
jge
and
sub
lea
pop
push
mov
shrb
daa
enter
mov
cmpsl
push
inc
mov
mov
jnp
push
fadds
fs
pop
fwait
ljmp
enter
push
fs
mov
insb
shrl
mov
aam
xchg
dec
stos
inc
xorl
mov
test
jo
lret
fildll
sub
movsb
xchg
nop
push
push
sti
sbb
ret
fimull
lods
push
popa
fdivl
fcomp
jb
mov
stc
nop
int3
mov
pop
scas
xchg
mov
xor
lea
ret
out
in
adcl
or
push
xor
xor
fldpi
add
imul
rclb
jmp
adc
inc
jp
outsb
pop
add
dec
push
sub
pop
adc
rclb
add
rcrb
loope
pop
cmp
mov
ficoml
loop
xor
jmp
pushf
addb
fdivr
lods
and
jbe
bound
lret
jno
jp
xor
add
mov
in
jle
add
add
enter
add
out
fdiv
lock
lds
sbb
jp
pop
jbe
mov
adcb
rcrl
sub
jp
mov
int3
push
mov
insb
int3
jp
adc
push
mov
cltd
idivl
test
mov
lods
xchg
mov
xchg
lods
add
es
jmp
mov
push
sbb
pop
mov
loop
inc
xchg
popl
shll
push
fidivl
pop
in
cmpsl
std
mov
mov
fnsave
xchg
jno
fcomps
pushf
imulb
sub
and
push
sbb
cli
jle
or
push
pop
push
or
insl
test
fucom
jle
sbb
stc
jnp
mov
out
in
imull
xchg
repz
loope
out
or
mov
sarb
mov
sbb
rorl
in
push
or
dec
add
pop
jb
dec
dec
fmul
xor
loopne
and
xchg
lods
subl
pop
or
cmp
sarb
add
xlat
outsb
pusha
and
sti
push
cmc
or
lret
mov
xchg
sub
test
scas
insb
inc
pop
and
gs
mov
ljmp
push
fnstcw
out
inc
jmp
leave
ret
pushf
lds
mov
mov
cltd
and
scas
loop
rcll
orb
scas
loopne
and
sbb
cmp
xchg
lods
orb
dec
pop
and
xchg
push
dec
lret
pop
lock
or
jno
inc
or
dec
xchg
mov
rcr
xor
add
jno
inc
jno
outsl
cmp
jle
push
inc
cmovge
sbb
pop
mov
ret
jae
adc
rol
cwtl
xor
sbb
mov
push
aam
xor
push
std
xchg
sbb
mov
sub
cli
mov
test
jp
push
inc
xor
leave
jl
js
aaa
or
mov
mov
xchg
lods
pop
cmp
dec
dec
mov
les
inc
shlb
add
sar
scas
push
rcr
sbb
jp
pop
mov
shrb
rorl
scas
or
fisubl
sti
orb
add
mov
pusha
pop
int3
lods
push
push
pop
mov
mov
mov
dec
and
mov
sti
rcl
fstp
jo
mov
mov
sti
jecxz
shl
mov
push
hlt
xchg
mov
int
or
aad
sar
stc
test
cmp
daa
lret
clc
aas
into
inc
aas
outsb
mov
bound
pop
sbb
mov
push
loop
fs
loopne
lods
pushf
jmp
into
pop
stc
flds
pusha
pop
fwait
xor
mov
adc
insb
sbb
lret
fwait
test
inc
dec
unpckhps
dec
jge
xor
stos
cld
ret
psllw
inc
jge
test
shl
and
bound
mov
cmp
insl
iret
ret
dec
pop
mov
adcl
jb
mov
pop
imul
call
jge
inc
movsb
push
movsl
adc
loope
ret
out
fwait
sti
xor
dec
cmp
push
cmp
les
jle
push
mov
mov
addr16
test
in
xchg
outsl
sub
out
xchg
sub
mov
mov
jge
aas
rcrl
mov
or
jnp
add
lahf
cmp
dec
daa
adc
mov
jge
repnz
aad
iret
fstl
jns
insb
sbb
xor
cmp
mov
mov
xor
push
push
pop
push
scas
fiaddl
fsubrs
addr16
push
leave
fsubrs
pop
test
xorb
sub
dec
fcoms
xlat
mov
and
adc
push
lods
shl
and
mov
rcll
sbb
inc
cmp
arpl
jne
mov
inc
sbb
xchg
sbb
pushf
arpl
inc
xor
and
imul
mov
data16
dec
jne
jnp
mov
add
inc
adc
and
cmp
sti
cld
mov
cwtl
mov
dec
hlt
lock
fs
adc
lods
call
loope
push
test
or
adc
or
or
popa
out
je
daa
xchg
out
cmp
test
fwait
sub
clc
inc
in
cmp
test
imul
addl
enter
shlb
or
cltd
clc
mov
sbb
xor
adc
mov
inc
pop
das
fisttpll
xor
jmp
je
shll
sbb
aas
nop
lret
push
pop
aam
fisttpl
in
test
sahf
scas
dec
push
inc
pop
aaa
mov
mov
jmp
pusha
iret
cwtl
je
orl
daa
mov
mov
mov
lret
adc
jbe
out
jg
sub
mov
cmp
ret
inc
arpl
jl
pop
sub
std
xor
lahf
mov
popf
std
push
les
mov
or
cmp
xor
dec
mov
mov
pop
aas
dec
jno
out
jno
std
jmp
test
jo
add
lods
imul
stc
fstps
push
mov
lret
push
xor
popf
sub
xor
ret
or
lds
ds
pop
aad
pop
js
movsb
pop
jne
inc
push
in
in
dec
xor
aad
mov
mov
push
mov
popa
lea
lcall
nop
mov
push
pop
out
mov
hlt
xchg
mov
jle
inc
aas
sarb
and
mov
pop
mov
dec
pop
sub
in
cmp
subl
inc
jmp
int3
and
or
out
mov
fs
xchg
int3
pop
mov
jge
push
popl
adc
and
mov
push
hlt
or
add
or
push
cmpsl
mov
leave
pop
fbld
xchg
arpl
pmulhw
nop
fsubs
inc
pop
jp
jb
sub
xchg
dec
popf
dec
jno
push
push
out
into
dec
cs
xchg
loop
sahf
cmp
stc
sarl
adc
jno
into
clc
xchg
add
outsb
lret
testb
adc
sbb
lahf
dec
sbb
cmpl
dec
dec
add
pop
dec
xlat
mov
xchg
ficompl
sbb
xor
call
mov
mov
cmc
cmp
iret
jae
mov
mov
mov
inc
sbb
pop
dec
arpl
lds
ljmp
mov
pushf
movsb
and
leave
jmp
outsl
xor
pop
xchg
add
xchg
add
push
std
pop
mov
push
andb
dec
add
jl
push
push
pushf
sbb
mov
xchg
or
adc
arpl
xor
mov
aas
add
sahf
mov
jecxz
fsts
daa
sub
fnstenv
loop
sbb
cmp
cltd
shrb
inc
fcomip
gs
adc
outsb
insl
stc
push
pop
or
add
call
xorb
adc
ja
arpl
das
push
aam
jbe
xorb
and
inc
hlt
iret
lock
adc
dec
cmpsb
jle
mov
jge
jl
pop
sub
or
jbe
daa
mov
into
loop
hlt
mov
mov
dec
jmp
pop
mov
cmpsb
cmpsb
mov
das
sar
les
sbb
mov
dec
and
sub
pusha
fidivs
sub
xchg
jge
xchg
push
push
shl
cmpl
and
rorl
push
cmp
std
in
ja
push
das
test
fistl
mov
lret
push
ss
hlt
sbb
sub
out
popf
mov
adc
pop
in
shr
xor
test
xlat
movsl
add
jle
popf
push
lret
push
push
mov
cmp
hlt
pop
testl
addr16
sbb
and
dec
fstpl
gs
xor
cwtl
clc
dec
in
icebp
push
sti
inc
imul
stos
push
push
loopne
pop
out
hlt
mov
pop
nop
mov
cmp
add
lret
and
stc
ljmp
xchg
push
cmpsl
popa
out
jle
insl
mov
or
dec
push
jle
or
or
xchg
and
js
out
inc
pusha
stos
pop
loopne
inc
lret
daa
fst
outsl
push
dec
ja
lahf
mov
add
adc
dec
aas
cmp
fstps
lea
or
mov
lahf
daa
add
mov
popf
into
out
jns
mov
pop
mov
push
xchg
stos
es
stc
stc
dec
out
or
inc
jp
add
lahf
xor
scas
pop
loop
dec
sub
mov
scas
cmp
out
popa
xlat
sbb
enter
mov
arpl
pop
mov
and
push
loopne
into
cmp
jecxz
pop
push
inc
cmp
sub
xchg
inc
dec
mov
dec
repz
jmp
btr
gs
add
cmp
xchg
mov
sbb
sub
js
xlat
jmp
inc
adc
inc
jle
fs
mull
js
push
push
push
and
push
in
cwtl
push
jno
in
ja
std
test
jns
add
ret
sub
xchg
lahf
push
leave
ficomps
and
add
or
popf
in
insl
orl
or
js
dec
sub
test
and
xchg
mov
sub
outsl
add
bound
sub
out
nop
lea
movsb
xor
mov
and
test
movsb
filds
fwait
add
int
out
sub
fistl
mov
add
enter
jle
fiadds
pop
push
inc
sbb
roll
sub
jl
mov
pop
mov
hlt
sbb
adc
jno
movsl
fwait
es
mov
xor
test
cmp
fwait
andb
test
aas
mov
push
jne
pop
dec
rcrb
fs
push
aaa
xchg
loope
test
sbb
hlt
cmc
pusha
adc
mov
lods
sti
cwtl
jbe
mov
dec
xchg
in
popf
loope
pusha
das
fstpt
dec
stc
sub
loop
lods
jmp
pushf
cmp
jns
aad
in
mov
out
jle
push
push
insb
test
cmc
adc
or
and
cld
testb
aam
mov
push
dec
and
jle
sub
xchg
fiaddl
push
sbb
push
or
test
jnp
ds
pop
fistpl
mov
sbb
or
ret
adcb
fidivl
push
or
or
push
loop
jo
iret
xor
bsf
dec
adc
xchg
leavew
rcrb
outsl
sub
pusha
data16
xchg
add
push
out
jae
cwtl
and
lds
or
add
mull
dec
iret
lods
jp
fs
jno
das
and
pusha
mov
ret
adcb
movsb
cmc
aad
dec
lea
movsb
shl
add
adc
fdivs
js
js
jb
cmp
sbb
arpl
aaa
sub
fstpl
add
mov
dec
jecxz
inc
enter
cmp
add
cmp
lret
jae
inc
and
dec
cmp
movsl
inc
sbb
repz
xor
lock
jmp
add
mov
dec
lods
lahf
les
test
insb
enter
mov
mov
in
out
sahf
sbb
scas
inc
pop
std
sahf
mov
jae
jbe
addr16
push
ror
js
jecxz
lret
adc
inc
in
incl
enter
je
pop
xor
insl
icebp
jle
xchg
in
mov
jmp
mov
push
xchg
popf
and
push
jne
mov
push
inc
sbb
sti
cld
and
es
jle
jo
mov
mov
and
out
imul
jge
jne
xor
mov
mov
nop
xchg
cmp
sub
mov
pop
add
cmp
sub
shll
insl
popa
jecxz
loope
cs
stc
and
push
movsl
push
les
mov
mov
pop
adc
gs
sbb
jecxz
sbb
repnz
mov
add
xor
mov
or
push
or
mov
in
add
push
addr16
stos
xchg
cs
imul
repnz
hlt
push
mov
dec
push
mov
test
call
loope
fbld
adc
sbbb
sbb
mov
je
jo
cli
jecxz
mov
sti
xlat
sbbl
add
sahf
xor
push
dec
mov
imul
dec
jne
test
lret
aas
insl
sbb
dec
cmp
out
imul
popf
es
sub
mov
shrl
sbbb
shlb
jp
mov
div
popf
mov
jo
jo
dec
pop
mov
insl
and
pop
pop
xor
mov
push
int
dec
dec
sub
es
push
mov
fimuls
push
cltd
ljmp
mov
pop
sbb
pop
pop
loopne
adc
mov
mov
fnsave
shll
pop
out
je
mov
jg
and
aas
outsb
movsb
orl
fisttps
pop
pop
jb
add
fdivrl
mov
fiadds
push
shll
xlat
jmp
push
sbbb
lcall
pop
cmc
sub
mov
jo
out
jnp
cld
push
xorb
xchg
sub
out
pusha
fcoml
adc
clc
into
mov
roll
inc
lcall
jae
mov
xchg
add
pop
jne
nop
sti
sbb
inc
dec
dec
clc
push
bound
js
mov
test
loope
jmp
lods
inc
lock
xor
jmp
enter
test
data16
mov
insl
dec
push
mov
add
xchg
xor
cmp
sub
xor
mov
daa
jecxz
push
cli
loope,pt
hlt
das
mov
out
fidivrs
push
mov
inc
and
sbb
xor
ret
test
inc
and
jge
call
mov
je
insl
mov
mov
fxch
mov
xor
xchg
jle
mov
sbb
jno
insb
mov
sub
arpl
adcl
sti
sbb
pusha
testl
jle
jmp
xor
outsl
bound
js
mov
js
addb
push
loopne
imul
mov
mov
pusha
popf
push
xchg
add
pop
hlt
mov
adc
inc
push
pop
jnp
iret
mov
shlb
xor
mov
xchg
lods
adc
out
or
mov
push
xchg
in
notb
stc
ss
test
pushf
lds
add
in
fs
scas
push
pop
mov
add
xor
clc
stos
cmp
jl
mov
leave
ret
arpl
repz
sbb
ljmp
push
int
mov
xchg
lds
xlat
xchg
test
inc
loope
inc
add
les
ss
or
xchg
hlt
fsubrs
xor
sbb
push
pop
dec
xchg
xor
cltd
sbb
inc
add
add
jae
jne
xor
adc
pusha
push
mov
jb
and
and
push
mov
cld
push
popa
idiv
imul
adc
dec
sbb
dec
push
rcll
push
scas
or
mov
dec
andnps
sbb
xlat
xor
adc
test
cld
outsl
movsb
cmp
adc
pushf
push
mov
cwtl
das
subl
mov
jnp
push
dec
cmp
leave
pop
pop
xchg
mov
jl
pop
scas
shrl
lcall
xor
sub
or
out
dec
mov
jne
cmp
icebp
mov
out
in
push
das
sarl
sub
ds
cmp
adc
mov
xor
aaa
and
jo
inc
shr
addb
jp
push
ja
insl
test
mov
mov
mov
jle
adc
fstpl
or
das
jl
cmp
add
pop
jne
jnp
add
xchg
dec
int
dec
call
in
lret
lods
ret
push
sub
cltd
arpl
aas
jbe
in
scas
bound
out
iret
or
loopne
fsubl
lock
es
jnp
dec
les
and
pop
push
cmp
add
ror
push
gs
dec
scas
inc
fcoms
std
jl
std
test
pop
sub
push
insl
loope
sahf
lds
ret
xchg
and
add
cwtl
inc
enter
pop
scas
fstl
pushf
ret
sub
mov
jmp
shll
push
mov
shl
pop
std
sbbl
ljmp
iret
aas
cmc
push
test
adc
mov
aas
movlhps
pop
fsubrl
push
nop
or
in
sbb
data16
add
push
insb
lock
rol
lds
xchg
dec
jne
add
test
pop
xchg
sarb
popa
mull
sub
xchg
pushf
mov
stc
mov
test
outsl
testl
pop
xor
sahf
outsb
add
loop
xor
push
mov
jl
mov
dec
aas
add
sub
pusha
shl
xchg
leave
incb
xlat
inc
xlat
pop
pop
xchg
sbb
shl
call
in
inc
fstpl
jp
and
fbstp
dec
movsl
mov
jo
pop
push
arpl
andl
dec
loopne
inc
xor
xchg
jg
cmpsb
mov
mov
dec
push
loopne
popf
sub
test
movsb
aaa
jle
rolw
pushf
add
xlat
jmp
cmc
stos
dec
mov
sbb
jle
jmp
push
push
dec
subb
xor
mov
imul
aas
fwait
shl
inc
mov
xchg
xor
fbld
pop
cmp
mov
and
shrb
ret
cmpsb
out
xchg
adc
xor
xorb
xchg
sbb
sbbl
test
in
cwtl
stos
mov
cli
adc
fsub
mov
cmpsl
out
mov
cmp
test
xorb
xchg
sub
mov
jae
sbb
add
or
cmc
ja
or
jge
xchg
imul
inc
lcall
and
mov
sahf
jno
arpl
dec
xchg
sub
das
call
in
daa
insb
inc
lods
sbb
and
inc
imul
sub
mov
inc
and
addl
push
lcall
pop
outsl
mov
aaa
jg
in
dec
pop
int
sarb
hlt
mov
add
rcrb
add
dec
inc
ret
idivb
or
and
popa
test
jae
imul
lds
push
mov
push
addl
jo
adc
mull
inc
mov
aad
aad
pusha
push
rcrl
int3
pushf
xor
imul
iret
pop
push
jbe
push
ret
hlt
mov
mov
sbb
stos
pop
sub
int3
repz
test
std
pusha
lret
stos
mov
lods
es
pop
push
jo
mov
inc
add
cwtl
push
mov
mov
pop
loope
add
mov
mov
cmp
rcr
mov
imul
stc
sub
mov
aas
and
xor
mov
fwait
xor
js
movsl
test
pop
repnz
sub
pop
pop
addr16
lret
bound
jnp
adc
dec
test
cmp
jo
cmp
mov
sbb
push
ret
push
mov
xlat
cltd
lock
jb
jecxz
pop
inc
bswap
add
clc
add
adc
push
pop
pop
imul
sbbb
out
pop
inc
into
or
sub
inc
les
push
mov
addr16
mov
add
shrl
lcall
mov
movsl
dec
stc
adc
xchg
in
pop
out
scas
mov
and
pop
or
outsl
pop
shl
neg
pusha
mov
outsl
add
and
sbb
jb
jp
cltd
aaa
xor
cmp
jp
stos
inc
sbbb
addr16
push
pushf
mov
inc
or
lahf
mov
fistpll
or
push
out
jmp
imul
jb
cmp
outsb
rcrb
adcl
pop
rclb
into
sahf
push
dec
dec
or
inc
cltd
sub
mov
ljmp
xor
pop
and
jb
notb
cmp
sahf
popa
push
out
lds
andl
cmp
sarb
cmp
add
xlat
pop
mov
fs
ret
scas
fldcw
shl
push
lods
mov
xorb
mov
adc
daa
popf
push
js
shr
aas
test
enter
dec
scas
dec
shl
dec
rcl
sbb
lea
rorb
sub
outsl
pop
or
aaa
xor
mov
jl
add
enter
xchg
push
push
cmp
fimuls
pop
addb
lods
or
mov
push
add
mov
bound
stos
fwait
push
pusha
jl
shrb
sbb
lahf
mov
jb
fisubrl
int3
test
or
cmp
xor
push
pop
subl
and
out
fcomi
sahf
mov
cmp
or
movsl
jo
daa
mov
push
subb
rcll
xchg
dec
faddl
in
pop
adc
pop
pop
jo
sub
mov
add
and
stos
ja
rcll
and
jns
or
mov
pop
scas
shrb
mov
pop
xchg
pop
adc
xchg
xchg
gs
pop
xor
jmp
jnp
sub
pop
mov
fidivl
pusha
movl
mov
push
or
adc
out
ds
or
xchg
or
cmp
in
or
sub
out
outsl
add
mov
xlat
in
add
aam
and
pop
xor
insl
and
scas
leave
adc
xor
popa
stc
subb
push
lods
movsb
sbb
push
test
mov
movsl
js
xchg
inc
loopne
outsl
jecxz
jo
repnz
add
in
add
push
clc
shlb
std
push
leave
mov
rcrb
push
mov
dec
jg
test
xlat
add
push
lods
lret
push
int3
sub
fsubs
inc
testl
loope
nop
mov
out
aad
lds
insl
ja
popl
rcrl
adc
shll
std
es
mov
pop
fldenv
call
mov
jns
shr
mov
in
lods
push
in
xor
add
or
in
push
lock
cltd
lea
rorb
push
sti
dec
insb
inc
and
shll
or
cmp
aas
xor
sbb
pop
hlt
adc
cli
shll
cmp
pop
lret
repz
cmpb
add
push
mov
iret
cld
or
push
push
xchg
adcl
inc
fs
mov
ret
cli
cmp
sub
pop
add
xor
mov
xor
js
push
push
jg
movsb
sti
or
and
sub
jnp
decl
insb
cld
mov
hlt
mov
leave
adc
out
stos
xor
jmp
push
imul
xchg
dec
es
sbb
jl
cmp
or
xchg
imul
add
cmp
jge
add
outsb
dec
movsl
adc
enter
or
xor
jns
mov
test
dec
call
mov
out
jb
mov
lgs
xlat
jl
neg
gs
popf
pop
mov
or
push
dec
cld
lcall
in
addl
nop
loop
xlat
mov
sahf
loop
stc
adc
jns
jb
cld
jl
xchg
xchg
add
push
imul
sarl
fstpl
push
icebp
hlt
adc
jns
adc
leave
inc
pushf
ds
stos
mov
insb
and
inc
decb
mov
adc
jp
mov
sarb
add
push
int3
lret
movsb
jnp
lods
scas
sahf
call
and
fdivl
lret
bound
add
fs
xlat
repnz
inc
shrb
or
pop
mov
les
adc
dec
fs
pop
orb
jbe
pop
movsl
or
shrb
pop
notb
test
andl
lahf
jnp
ror
sbb
mov
cmp
xchg
ljmp
adcl
push
int
stos
into
and
mov
inc
xlat
jb
dec
dec
push
mov
cmp
lods
adc
into
pop
out
stc
sbbb
or
outsl
jb
sub
add
lods
daa
jno
jno
lea
xchg
adc
orl
xchg
pop
pop
jle
pushf
mov
pop
insb
sbb
and
cwtl
loop
aas
push
mov
call
or
nop
sub
loopne
out
inc
pop
je
adc
std
dec
scas
xlat
mov
pop
into
aaa
stos
jmp
sub
fsubl
in
inc
xlat
andl
sbb
shll
push
out
aaa
or
mov
pusha
cld
xchg
xchg
xlat
cmp
jns,pn
test
pop
push
mov
pop
call
and
jno
push
xchg
cs
fnsave
jbe
iret
cltd
or
pop
stos
mov
pusha
or
ret
mov
xchg
popa
pushf
add
sti
push
jl
repnz
xor
ja
rcrl
inc
mov
sbb
js
outsb
out
xor
ret
loope
push
push
shr
dec
ss
pusha
pusha
lea
scas
pop
xchg
add
jbe
mov
lods
inc
cltd
mov
mov
push
in
aaa
aam
fcompl
repz
notb
or
insl
mov
pop
fldcw
fsubrl
shrl
js
mov
pop
xor
jecxz
jns
imul
bndldx
fsts
sbb
sbb
mov
pop
shl
fnstenv
repnz
mov
dec
cmp
fisubrl
int
ljmp
jo
sbb
add
mov
subb
push
fwait
add
insl
das
icebp
lock
dec
stc
adc
mov
adc
sbb
cld
pop
mull
sub
or
xor
in
fwait
pop
and
sub
insl
mov
adc
aas
sbb
mov
arpl
push
loope
adc
imul
loopne
jnp
inc
inc
movsb
pop
jae
imul
shr
lods
pusha
es
clc
add
es
hlt
and
out
lea
movsb
dec
xchg
lds
mov
mov
lds
clc
int
aas
mov
pop
icebp
inc
sti
cmc
cmp
push
dec
and
or
cmp
xlat
cmc
mov
cwtl
pop
cld
pop
int
pusha
sub
pop
andb
dec
roll
push
xlat
xlat
jmp
les
scas
cmc
xor
jmp
cli
and
outsb
push
lock
and
js
clc
sahf
bound
scas
xor
loope
sbbl
jns
mov
pop
shll
jl
push
repnz
add
or
inc
cwtl
in
pop
or
lcall
sbb
push
xor
bound
outsb
cltd
repnz
pop
jo
outsb
pop
stos
mov
fildll
mov
out
push
adc
push
ss
out
sti
test
adc
mov
jb
jo
mov
or
sbbl
push
cmp
dec
aad
jne
shlb
shlb
imul
aam
lahf
shr
xchg
cmp
out
movntq
out
aaa
sbb
add
pop
in
cmp
aaa
aad
imul
push
mov
mov
cwtl
daa
popa
icebp
mov
inc
inc
stos
jne
bound
mov
mov
fstpl
into
fucomip
sbbl
out
and
jge
mov
mov
xchg
pop
mov
mov
out
ljmp
in
dec
in
dec
mov
loopne
subb
jp
movsb
add
sbb
shrl
adc
rorb
and
repz
dec
add
inc
addr16
fld1
inc
pop
pop
or
cmp
mov
insb
ss
mov
cmp
pusha
jns
test
dec
pop
push
dec
inc
scas
inc
ja
das
jne
ror
jg
adc
inc
push
sbb
lea
scas
addb
mov
push
jno
xor
call
inc
pop
stos
aaa
cmp
adc
and
xor
enter
sub
jl
aaa
mov
insl
cmpsl
jbe
enter
ss
mov
mov
inc
push
dec
jl
push
pop
imul
enter
mov
and
mov
in
xchg
push
mov
cmpb
ret
mov
pop
push
in
jbe
fdivs
jecxz
and
or
dec
xor
imul
in
add
fidivl
test
data16
push
shlb
lods
pop
sub
gs
sbb
and
dec
lahf
mov
adc
addr16
lods
and
add
inc
pushf
push
andb
mov
pop
mov
adc
inc
fadds
cltd
add
fdivs
test
xchg
cmp
lret
fnsave
push
shr
xchg
mov
aad
clc
les
repnz
leave
cltd
loop
movsl
lret
add
and
shl
movsl
clc
lret
scas
mov
mov
cmp
cmp
int
pusha
ljmp
push
push
mov
push
xchg
and
push
jnp
test
clc
movsl
mov
inc
or
fwait
mov
mov
clc
scas
inc
in
or
call
xchg
in
push
push
scas
sbb
jo
push
mov
sub
xlat
in
orl
add
cmp
or
dec
and
fimull
repnz
bound
jnp
inc
mov
cs
mov
mov
ret
imul
jecxz
adc
fcomps
mov
xchg
cs
scas
int3
arpl
iret
cmc
mov
out
adc
push
adc
xchg
jns
ret
cmp
xchg
add
dec
gs
data16
fmuls
int3
and
loop
scas
dec
dec
sbb
loop
xchg
dec
mov
imul
adc
push
sahf
inc
sbb
es
dec
pop
or
pshufw
xor
push
lds
flds
popa
xchg
push
mov
xorl
mov
inc
andl
sbb
inc
cmp
cmpsb
add
ret
cmpsb
and
mov
loope
or
sbb
jo
pop
movsl
jl
pop
rep
pop
cli
add
jp
xchg
pop
fdivrl
ja
mov
add
add
inc
jmp
push
pop
stc
dec
jo
push
mov
dec
mov
shrb
push
cmp
ret
jg
fidivl
roll
mov
adc
ss
fs
aas
cmpb
pusha
ss
push
ss
jne
inc
js
in
mov
ljmp
sub
push
jnp
sub
cmp
popf
mov
xchg
sbb
hlt
xchg
addr16
lret
mov
out
cli
mov
push
push
insb
push
lock
test
push
jmp
stc
adc
out
fidivrs
out
fisubl
and
mov
mov
cmp
insb
fcmovbe
jge
mov
test
pop
sbbb
push
rolb
cltd
xlat
sub
int3
imul
std
pushf
adc
dec
inc
cmp
test
or
ja
jecxz
push
mov
lcall
push
xchg
loopne
lahf
jns
add
cs
mov
mov
adc
push
daa
mov
lods
adc
sub
sbb
sbb
cs
dec
dec
imul
jne
mov
jg
popf
faddl
xchg
xchg
dec
std
jns
and
adc
test
mov
nop
imul
repnz
mov
cmpsb
stos
adcl
nop
xor
inc
mov
cmpsb
sub
imul
adc
test
cmpsb
in
jae
fdivs
jle
xchg
push
jnp
enter
out
inc
aad
aaa
sbbl
xchg
scas
mov
xchg
pop
sbbl
sahf
or
loop
inc
push
bndstx
test
sahf
lret
xor
data16
jae
popf
xor
mov
mov
ret
mov
pushw
lock
xor
xchg
sarb
jno
movsb
mov
out
lahf
fadd
enter
fwait
cmpsl
cltd
test
in
xor
out
push
movsb
scas
inc
add
clc
sahf
dec
xor
xchg
xlat
mov
push
inc
push
or
jns
insb
fistps
or
mov
call
or
mov
pop
inc
cmp
push
in
and
mov
adc
sbb
push
nop
mov
or
ret
cmp
dec
dec
sti
call
inc
test
cs
sbb
data16
sbbb
lods
mov
add
test
cmp
jle
aam
mov
xor
pop
push
push
mov
sbb
call
lret
lods
js
scas
push
cmp
ljmp
mov
stc
rorl
mov
dec
lea
mov
in
mov
cmc
addr16
in
jl
mov
ljmp
sbb
jle
dec
pushf
fsubrs
sbb
int3
dec
pop
cli
sub
fidivrl
pushl
ficoms
push
pop
add
das
mov
rcrb
and
hlt
inc
push
ljmp
iret
frstor
inc
psllw
adc
lahf
scas
mov
dec
mov
jmp
mov
dec
jl
popf
mov
sub
dec
mov
mov
scas
mov
dec
mov
pop
add
or
or
shlb
mov
in
testl
sbbl
adc
adc
loopne
fs
shrb
addl
jle
mov
repnz
add
ja
enter
dec
ljmp
pushf
rorl
bound
mov
and
sti
xor
cs
mov
inc
jecxz
push
sbb
pushf
xchg
push
push
jg
mov
xchg
cltd
enter
stc
rcll
add
xchg
cs
jp
insl
into
mov
mov
fwait
das
nop
xor
xor
fwait
popa
and
mov
inc
xor
lret
pop
pop
push
jnp
dec
jp
mov
add
push
mov
or
sub
sbb
push
adcl
push
daa
adc
sbb
inc
lods
popf
or
mov
or
data16
dec
jecxz
pop
mov
or
cmp
mulb
rcr
inc
insl
mov
stos
lds
inc
pop
inc
outsl
dec
aad
fstps
jns
in
test
in
or
inc
insl
jecxz
in
mov
jbe
xchg
jg
aam
stos
vdivps
cmc
les
and
fwait
lods
sub
jmp
add
mov
int
xor
jo
call
loope
mov
stos
adc
adc
sub
cld
mov
int3
sub
push
jl
js
call
mov
out
push
jns
push
lods
mov
jp
pop
aas
mov
mov
adc
push
jb
aaa
or
cmp
push
mov
inc
xor
cmpsb
xchg
inc
pop
cmc
pop
mov
mov
mov
add
cmp
mov
mov
add
inc
loopne
xchg
push
ljmp
pop
xor
and
mov
push
arpl
cltd
mov
fimuls
xchg
shll
movl
stc
shll
mov
popa
cmp
shrl
ret
insb
jge
jle
lea
xchg
sahf
jno
mov
lret
fsubrl
adc
out
cltd
add
mov
xchg
inc
pop
mov
shl
add
inc
hlt
dec
mov
outsb
out
shrb
call
sbb
mov
movsb
ds
cwtl
insl
jg
jge
cmpsb
sbb
aam
xchg
mov
cs
cmp
push
repz
dec
orl
insl
stc
imul
hlt
push
iret
nop
mov
enter
fdivp
insb
movhps
add
mov
jge
mov
ret
xor
add
bound
push
jmp
dec
or
cwtl
repnz
mov
mov
pop
imul
mov
enter
jecxz
mov
dec
pop
pop
hlt
dec
jle
aad
scas
clc
stos
adcl
inc
scas
loop
sub
mov
ror
dec
hlt
push
in
pop
sub
js
pushf
push
pop
lds
mov
dec
ds
lods
inc
sarl
sub
dec
sar
into
loop
in
xchg
xchg
fcmovnbe
imul
pop
je
and
jnp
push
adc
rcrl
pop
dec
pop
cwtl
incl
shrb
rcl
cli
add
aaa
dec
ficoml
fisttpll
xor
int
inc
fdivl
dec
cmp
fs
dec
clc
and
and
and
int3
jp
lods
lods
mov
add
es
or
into
les
scas
imul
jno
or
push
jge
pop
adc
sub
pop
lock
xor
xor
jle
inc
cmp
xor
jmp
mov
cli
sub
rcr
clc
ds
jae
shll
out
and
cli
push
xchg
mov
repnz
sbb
jl
aas
loopne
sub
xchg
mov
fcompl
xchg
jp
mov
addr16
adc
and
mov
aaa
mov
gs
test
in
or
insb
cmp
les
mov
je
roll
push
loope
pushf
lea
mov
pushf
xor
outsl
inc
rdpmc
stc
cmc
sub
push
add
push
addr16
add
mov
xor
ds
cmpsb
xor
xlat
jo
push
jg,pt
add
add
cld
loopne
ss
push
mov
jne
out
sub
or
jl
rolb
xchg
stos
shrb
insb
pop
aaa
and
imul
add
out
test
and
fidivs
xchg
imul
mov
scas
inc
hlt
push
jbe
sbb
leave
movsb
in
cs
das
inc
cmpsl
stos
loopne
xchg
call
jecxz
mov
call
add
sbb
insl
popa
jnp
lahf
rclb
inc
mov
adc
fcomip
add
inc
sti
push
jnp
arpl
mov
sub
jl
int3
inc
and
punpckldq
push
outsb
sub
jg
jle
in
jecxz
mov
mov
subl
call
cmc
adc
sub
jp
addl
stos
dec
inc
cmp
jb
pop
cmp
sti
push
inc
mov
adc
mov
mov
aam
push
in
scas
shrb
scas
fwait
lock
fsubr
test
xchg
ja
iret
jecxz
bound
clc
ds
push
xchg
addl
mov
movsl
arpl
pop
cmp
ljmp
call
add
sub
pusha
outsl
mov
subl
xor
push
lahf
test
pop
dec
sar
out
jmp
push
aas
daa
popa
fwait
aad
test
shll
ljmp
cmp
leave
or
arpl
sbb
sub
inc
flds
push
repz
jp
movsl
insb
jns
cmp
inc
scas
stc
je
int3
movsl
and
push
mov
push
mov
mov
cli
cli
push
fcoml
rcl
and
push
daa
clc
lock
ja
cmp
lcall
sbb
fbstp
insb
adc
mov
arpl
fisubrs
or
xchg
cmp
jae
iret
mov
divb
repnz
out
pop
dec
loope
adc
testb
leave
test
mov
mov
dec
cmpsb
in
cmp
or
dec
xchg
sub
cmpsl
mov
add
sahf
jl
jne
shlb
sbb
push
and
mov
pop
rcrl
push
imul
mov
push
lahf
xchg
mov
je
out
pop
pop
enter
adc
imul
push
cmpsb
jae
dec
aam
sbb
test
rcrl
xor
mov
mov
dec
push
pop
xchg
outsl
mov
iret
shl
add
dec
cmp
inc
inc
fdivs
jns
or
fcmovbe
lea
sbb
mov
mov
cmp
mov
data16
shll
xor
inc
movsl
ss
mov
pop
test
call
lcall
jmp
outsb
cmp
and
mov
ret
call
in
into
xor
lock
aas
aad
test
pop
cmpsl
in
inc
imul
or
add
testl
jl
repz
ret
pop
adc
imul
mov
push
dec
ds
fsts
scas
mov
or
insl
rclb
cmp
loop
ficoms
or
icebp
mov
adc
pop
scas
nop
mov
add
mov
and
cmp
es
fbstp
adc
gs
pop
fisubs
arpl
popf
push
lret
enter
lret
adc
inc
sbb
cmp
loope
xor
repnz
movzbl
adc
mov
loope
and
fldpi
andl
ja
icebp
xor
int
sarb
xchg
das
xchg
repnz
popa
adc
call
int3
stc
ret
jle
and
dec
lahf
stos
push
xchg
inc
or
cwtl
mulb
mov
jmp
movd
aas
pop
nop
xchg
push
dec
pop
pop
mov
in
jne
cwtl
nop
cmp
or
mov
pop
dec
xchg
enter
ret
ss
cmpsb
js
xchg
xor
lahf
fwait
sti
stc
loope
jle
repz
imul
sbb
inc
subl
and
les
insb
jle
adc
adcb
xor
popf
insb
add
dec
mov
add
bound
jae
or
xchg
sub
out
repz
or
repz
sub
cmp
testb
mov
lcall
ret
pop
into
jp
sbb
lea
cltd
sub
test
xchg
and
iret
loope
add
xor
pop
dec
push
gs
sub
rorl
fcoms
enter
cmp
inc
ljmp
cltd
mov
push
jecxz
outsl
lcall
or
lret
insl
loopne
mov
sbb
xor
jb
jl
pop
addl
addr16
loop
jecxz
push
push
xchg
add
outsl
jbe
mov
pop
ret
push
rolb
mov
lods
jae
adc
mov
cmp
mov
inc
bound
ret
in
add
sti
scas
inc
in
mov
mov
iret
push
aaa
push
mov
clc
movsl
mov
pop
loopne
pop
push
cld
pop
pop
jnp
jb
xor
sbb
sub
repnz
fbstp
add
inc
popf
arpl
or
and
or
push
cmpsb
and
pop
lahf
dec
inc
sub
outsl
xchg
das
pop
lods
shl
cmc
std
cmp
adc
cmp
push
sarl
dec
lock
inc
hlt
pushf
add
push
push
xlat
stos
xchg
rcl
lea
fnstenv
lss
arpl
pop
xchg
cmc
adc
loop
in
inc
mov
mov
repz
or
and
xor
popf
pusha
sbb
jle
sbb
inc
sub
packsswb
cmp
cli
negb
es
insb
repz
mulb
daa
jbe
xor
imul
xchg
es
or
lcall
mov
jmp
out
hlt
cmp
test
sbb
loope
sar
push
inc
mov
and
sarb
cmp
mov
pop
out
divb
push
in
pop
add
std
or
pop
sbb
pusha
dec
pop
imul
xor
inc
push
in
or
aad
or
sub
movsb
pop
out
push
outsl
and
sub
xchg
imul
push
pop
jp
jb
cmp
cmp
fiaddl
std
sub
clc
xchg
pop
adc
daa
cs
jmp
jnp
and
dec
lret
or
in
ficompl
xchg
rorl
mov
xchg
mov
pop
cmp
iret
jns
jge
sub
and
mov
xchg
pushf
mov
into
mov
pusha
xlat
cld
cmp
aaa
inc
addr16
cmpsb
mov
out
dec
mov
sub
sub
add
es
test
mov
into
xchg
lods
sbb
aad
mov
inc
imulb
movsl
add
ss
jmp
push
sub
fs
je
out
popf
jne
xor
lods
pop
jne
xorb
idivb
fisubs
imul
lea
jecxz
push
popa
fstpt
iret
int3
sbb
xor
add
push
sbb
cmp
and
jmp
cs
mov
jl
sbbl
add
sti
sbb
ds
pop
lods
xor
fdivr
mov
ret
mov
jns
sub
xchg
or
insl
sub
hlt
sbb
es
xchg
rcrb
jl
imul
sbb
mov
cmp
mov
dec
lds
xchg
std
inc
lret
out
sbb
sub
dec
jmp
in
or
mov
loopne
ja
mov
out
shrl
mov
pop
dec
adc
jle
popa
jmp
imul
loope
cmc
lret
pop
hlt
inc
adc
xor
and
popf
push
out
xchg
cmp
and
and
hlt
mov
mov
adc
repz
xor
sarb
sub
cmc
je
jg
pop
add
repz
push
push
jo
or
orb
jmp
pop
or
scas
imul
insl
loop
test
cmp
aad
sarl
negb
dec
cmpsb
lahf
and
push
jb
pop
dec
pop
dec
int
pushf
das
imul
jg
jns
adc
cmc
push
aas
iret
add
nop
add
cmp
sbb
lea
pop
lods
loop
add
pop
adc
mov
jns
or
aam
dec
xchg
dec
add
sbb
cmp
jp
push
je
push
xchg
int
out
hlt
leave
mov
cld
sub
sti
adc
insb
push
adc
jnp
int3
shll
incb
push
push
das
sbb
pushf
xor
and
inc
fbld
jp
lods
imul
sbb
push
lods
add
sbbl
mov
and
out
push
es
jo
mov
mull
and
cld
push
bound
aam
mov
xor
dec
adc
jns
sub
outsb
add
int3
arpl
jne
add
stc
inc
mov
pop
jnp
addr16
mov
les
adc
xor
jo
mov
cmp
sbb
sub
mov
cmp
ja
nop
sti
pusha
fwait
cld
and
xor
inc
inc
pop
cli
ljmp
jns
out
ja
inc
jbe
sbb
addr16
lret
add
loopne
je
addl
sar
outsl
or
nop
rol
icebp
mov
icebp
inc
pop
adc
js
fists
nop
push
sub
xchg
mov
cmc
dec
loop
sub
imul
add
dec
dec
lock
ljmp
ss
mov
arpl
adc
jbe
mov
out
push
leave
and
cli
dec
pushf
lea
or
sub
jecxz
loopne
sub
js
mov
repz
test
test
fsubl
ret
mov
addr16
clc
je
mov
xor
pop
shlb
test
aad
pop
cltd
sbb
sti
xchg
jmp
dec
repz
sub
jg
adc
sahf
lret
test
jns
sub
cli
adc
aad
je
or
sbb
leave
lcall
and
aam
aad
cmp
cs
outsl
or
stos
mov
or
xor
or
push
call
push
pop
outsl
mov
les
gs
in
jp
lods
shl
mov
fwait
lret
aas
clc
inc
aad
sub
fbstp
ret
pop
je
cmp
mov
nop
xchg
lods
roll
jge
hlt
mov
fsubl
pop
xchg
fisubrs
dec
movl
out
pusha
fldcw
cmp
and
in
pop
rolb
inc
xor
pop
lcall
mov
rcl
jg
lahf
js
aad
cmp
cmc
loopne
cli
roll
shlb
imul
sbb
pop
inc
aad
in
inc
and
and
loope
imul
mov
outsb
stos
or
call
adc
adc
inc
lods
sbb
sub
cltd
xor
mov
lock
adc
inc
mov
pop
mul
mov
hlt
pop
std
xchg
mov
lret
jb
in
lock
push
sbb
scas
ja
sub
mov
in
repnz
lods
aaa
mov
xchg
add
pop
xchg
xchg
in
pusha
or
cltd
and
lods
lods
aad
add
adc
xor
mov
xchg
mov
or
sub
insl
outsl
movb
arpl
dec
cmp
xor
xor
push
or
mov
push
mov
jp
fsubrp
aam
mov
push
xchg
test
lods
mov
jecxz
add
mov
jmp
je
push
inc
out
mov
lods
jp
imul
pop
sarb
push
fisubs
mov
lret
movsl
arpl
mov
leave
paddd
sbb
movsb
mov
fsubrs
movsl
aad
push
outsl
ficoms
xchg
push
mov
jne
xor
dec
sbb
cwtl
scas
stos
daa
mov
sub
in
popa
xchg
pushf
das
xchg
cli
pop
cmc
mov
sub
cmp
mov
sub
jno
dec
sbb
jbe
lods
lret
cmp
clc
test
jno
sub
sbb
and
mov
shlb
mov
fildl
sbb
and
test
mov
lea
ss
iret
mov
ucomiss
dec
fldl
lcall
xchg
lret
xor
je
inc
loopne
ljmp
push
lcall
and
repnz
pop
mov
mov
add
pop
aam
rclb
fdivl
cmpsl
ret
jnp
xor
pop
add
fisubrs
pop
movsb
jl
cmc
sti
pop
out
mov
xchg
mov
sub
xchg
bnd
sub
push
xor
bound
test
dec
and
out
out
test
out
push
mov
pop
out
popf
aad
lds
idivb
cmp
xchg
cs
das
sbb
adc
ret
mov
out
mov
addl
pop
dec
and
jl
dec
orb
add
mov
add
cld
bound
in
adcb
pop
mov
cmp
mov
dec
and
fistl
ds
mov
into
in
xor
inc
adcl
sub
xchg
add
loopne
push
xchg
fwait
and
mov
dec
stc
hlt
imul
out
xchg
xor
jnp
mov
lret
xor
mov
xor
fisubrl
ret
mov
cmp
push
dec
loop
ljmp
inc
shll
leave
out
das
mov
sbb
sub
mov
repnz
loope
aaa
or
je
xchg
out
or
popa
mov
inc
mov
mov
sub
inc
into
scas
pop
data16
dec
push
leave
inc
and
dec
nop
insb
lret
in
mov
adc
and
das
add
aaa
out
sbb
xchg
dec
mov
push
add
je
mov
mov
loopne
lahf
cmp
scas
jl
mov
decb
add
push
cwtl
xchg
hlt
dec
and
adc
fiadds
popa
loop
xchg
mov
test
fmull
loope
adc
sbb
int3
inc
das
pop
cmpsb
jbe
xchg
and
movsl
inc
mov
mov
aad
pop
inc
ret
subb
fadds
outsb
clc
cli
push
outsl
addl
add
js
jo
fmuls
shlb
pop
cmp
mov
xor
into
or
jo
xchg
fldcw
mov
jns
je
sarl
xchg
std
xor
mov
jecxz
outsl
inc
leave
arpl
push
jb
je
pop
jmp
or
jmp
add
adc
jg
jmp
rcrl
mov
or
add
inc
cmpsb
mov
scas
addr16
ss
push
dec
xchg
mov
jb
add
mov
imulb
jmp
or
imulb
in
and
push
fsts
jmp
lret
mov
or
out
int
sub
pop
mov
sbb
testl
mov
inc
xchg
into
and
sbb
xor
out
popf
jl
cli
adc
jo
loopne
loope
out
mov
andl
pop
mov
adc
loope
pop
into
gs
rorb
jge
mov
enter
daa
test
xchg
scas
add
xchg
and
push
cmp
fmul
jbe
jnp
mov
ja
cmc
int3
prefetch
xchg
xchg
adc
add
mov
mov
push
jne
idivb
shll
lds
enter
repnz
test
arpl
fldl
into
js
es
pop
cmp
xchg
call
push
mov
pop
int
popa
aas
cs
or
add
cwtl
aam
fxtract
cmc
cmc
lcall
mov
sti
mov
push
xchg
dec
jne
ja
lods
cmpsb
jl
je
inc
push
push
xor
add
sub
xor
lock
mov
dec
mov
add
push
shlb
push
incl
cmpsl
test
cmp
or
js
nop
cmp
arpl
sub
sbb
mov
scas
pop
js
mov
jg
or
mov
jle
aas
xor
adc
cli
pop
int
xchg
lds
or
addr16
sbb
loope
adc
push
jo
sbb
sub
and
add
and
sub
lret
lret
adc
jo
mov
inc
cmp
out
push
mov
push
and
inc
xor
gs
xchg
mov
or
adc
out
ret
sbb
and
dec
nop
out
ret
jle
jecxz
lahf
clc
push
jg
mov
aam
jg
or
dec
stos
inc
shr
mov
ds
movsb
outsl
pop
lahf
adc
loop
outsl
icebp
cmc
mov
aad
popa
popa
mov
ljmp
mov
mov
inc
sbbl
fwait
ds
adc
dec
adc
xor
dec
cmp
ficoms
int3
sbb
adc
outsb
fucomi
insb
sbb
sub
mov
mov
xchg
test
shll
adc
loop
out
xchg
cmp
inc
ja
loopne
mov
sbb
jbe
inc
inc
popf
add
addl
ja
add
test
mov
push
das
cmp
addr16
movsb
mov
vmwrite
push
lock
lds
jb
ljmp
jle
dec
gs
pushf
xor
adc
lahf
mov
cld
xchg
in
loop
les
fbstp
cmpsb
test
faddp
xchg
cmc
nop
or
sub
shrb
shr
adcl
je
cmp
int3
rclb
cmp
testl
mov
roll
test
rcrb
jge
fcomp
mov
data16
mov
sub
sbb
mov
jle
negb
repz
mov
add
inc
imul
dec
cmp
jle
and
add
sbbb
push
sbbl
xor
in
shlb
xor
andb
or
adc
pop
xor
test
into
xor
jl
adc
jb
jmp
sbb
or
mov
mov
mov
in
adc
adc
sbb
or
xchg
jbe
scas
mov
xor
jp
fdivs
lods
fmuls
lds
mov
ss
jae
dec
mov
xchg
sub
adc
lret
lea
fs
sub
addl
aam
xor
jno
loop
push
int3
sbb
lods
inc
stos
pop
add
jne
push
or
add
scas
lahf
pop
dec
mov
sti
stos
xchg
sub
les
pop
cmc
enter
cmp
loope
push
orl
imul
aam
pop
cmc
rep
mov
push
pop
fsubl
or
cmpsl
dec
jmp
dec
fistpll
test
cli
mov
jecxz
popf
jecxz
stos
icebp
jno
and
xor
je
out
xor
fldenv
xchg
popf
cli
dec
out
push
insl
popf
rorb
shrb
lea
movsl
lds
in
add
xchg
sbbb
outsl
mov
cmpsb
cs
rcl
into
sub
jle
lds
xchg
push
out
push
push
fdivs
out
scas
mov
jmp
xchg
xor
mov
xchg
or
xchg
hlt
out
lds
fsubl
daa
mov
cli
lret
xlat
bound
pop
icebp
mov
int
or
pop
icebp
test
popf
loopne
ds
hlt
pop
inc
idiv
and
and
fidivrs
iret
xchg
push
pop
inc
xlat
shl
pop
loopne
pop
mov
insb
cltd
or
leave
inc
int3
mov
loop
addr16
add
enter
lods
and
jg
lret
or
cmpsb
cmc
pop
rcl
jns
push
sbb
js
adc
jle
adc
push
cmp
jecxz
xchg
leave
inc
inc
or
lcall
ret
mov
int
push
enter
inc
icebp
cmp
rcrl
lahf
nop
and
dec
jbe
enter
leave
test
arpl
or
insb
mov
sbb
mov
push
inc
test
imul
bound
lods
in
das
lret
into
push
ljmp
repnz
adc
imul
jmp
push
mov
mov
stc
out
xchg
inc
or
cmp
push
pusha
subps
or
sahf
and
jns
jmp
sbb
cmp
jbe
into
sbb
inc
inc
sbb
lods
or
jne
mov
movsb
push
inc
popa
push
jb
add
push
pushf
push
xchg
gs
jge
ljmp
cld
andb
inc
lds
scas
mov
shll
pusha
push
jmp
aas
mov
and
dec
fnsave
xchg
jb
jno
je
repz
cld
mov
pop
test
into
jmp
and
jns
mov
mov
leave
loope
jnp
xchg
adc
add
mov
cld
push
dec
mov
pop
stos
pop
popa
xor
push
hlt
cmpsl
shll
push
mov
leave
mov
popa
mov
gs
fs
xor
jne
out
xor
add
add
test
mov
bound
inc
jns
orl
filds
pop
aam
cltd
jecxz
add
and
pop
xchg
sub
data16
cmp
push
orb
pusha
lahf
out
fisubl
ljmp
lock
data16
arpl
arpl
mov
ret
sub
pop
fnstenv
andl
mov
shrl
js
hlt
pop
lcall
xor
pop
adc
mov
mov
xchg
xor
jmp
or
mov
movsb
push
stos
shlb
and
adc
es
les
cmp
out
stc
adc
out
push
icebp
fs
out
ss
push
or
fs
pop
mov
shll
cmp
push
push
push
aas
add
mov
ret
adc
fldl
call
push
inc
pop
xchg
dec
lret
mov
dec
scas
dec
shll
inc
mov
adc
addl
fldenv
sarb
scas
insl
repz
mov
fcoml
add
fwait
pop
into
mov
mov
lahf
add
scas
jb
add
jle
push
mov
adc
inc
in
pop
adc
ja
call
xchg
int3
mov
cmpl
sub
ret
fmull
nop
imul
pop
adc
or
test
push
lock
scas
inc
std
pushf
repz
jle
xlat
dec
call
push
cli
pushf
lret
shll
and
movsl
push
in
push
subl
mov
scas
cmp
mov
mov
arpl
add
push
lahf
fbstp
orb
jle
lret
lret
xchg
mov
mov
push
lret
sub
in
clc
jmp
pop
jl
inc
dec
les
sarb
cmp
push
sbb
jb
push
mov
xchg
pop
movsb
out
xorb
dec
cld
xlat
mov
shll
lahf
nop
push
pop
cmp
aaa
mov
adc
dec
xor
rorl
push
push
test
and
push
faddl
or
in
ss
loopne
sub
cli
inc
shll
lock
adc
ss
pop
cli
rorl
mov
xchg
add
aaa
push
push
lret
nop
lods
outsl
subb
pop
sub
adc
jno
xchg
jns
scas
mov
sti
cmp
arpl
in
jnp
sub
adc
xor
dec
scas
cs
xorl
repnz
cmp
push
insb
push
lock
jne
stos
jecxz
mov
xor
ljmp
sbb
lret
xchg
loop
mov
push
mov
pop
adc
test
imul
jmp
clc
xchg
addl
out
pop
dec
in
imul
enter
push
push
push
xchg
sub
and
aas
mov
jno
pminub
push
jecxz
mov
mov
mov
mov
mov
cmp
inc
cmp
lods
adc
xor
push
lret
pop
inc
stc
mov
cmp
test
dec
fisubs
mov
iret
daa
xchg
add
sub
add
dec
ljmp
in
rclb
or
push
xor
jle
push
jmp
xchg
lock
dec
xchg
sub
rcrb
add
dec
mov
sub
aad
jle
mov
or
aas
int3
push
inc
fildl
sub
cltd
mov
lret
icebp
push
sarb
sbb
cmp
sub
inc
mov
fidivrs
cmpsb
movsl
and
mov
jmp
push
shll
std
cltd
xchg
jge
fidivl
stc
and
push
ja
or
jge
mov
xor
aam
xchg
pop
imul
push
lods
faddl
addb
test
fisubl
negb
out
mov
and
inc
lret
faddl
lods
pop
push
xchg
test
mov
mov
imul
je
sahf
mov
mov
push
lea
aas
stos
outsl
in
sahf
roll
adc
lret
fistpll
pop
cmpsb
or
ja
cmp
inc
arpl
sub
pop
mov
mov
cmp
cltd
push
push
lods
inc
in
mov
jp
dec
lret
bound
jmp
jl
mov
xchg
out
xchg
or
add
pop
mov
lods
jno
dec
add
movsl
ret
jmp
push
cltd
cmp
popf
xor
lock
jb
aas
xor
imul
roll
scas
js
loope
push
outsl
xor
xor
cmpsl
push
andb
xchg
inc
and
dec
inc
leave
cmpsb
add
sub
lock
or
lea
jno
mov
inc
jmp
sarl
xchg
xchg
fbld
xchg
daa
xchg
push
jnp
sub
cmpsb
xor
jb
xchg
jl
pop
dec
sar
in
cmpsb
jnp
out
imul
mov
inc
adc
cmp
loop
sahf
pushf
sub
add
inc
ffreep
adc
jle
fldt
add
inc
or
jbe
test
mov
subl
push
js
testb
sbb
cltd
mov
clc
shll
dec
xor
push
bound
out
xorl
nop
repz
jmp
subl
adc
out
clc
sbb
aas
dec
mov
sbb
loope
mov
iret
test
pmaxsw
fdivs
inc
sarb
in
iret
inc
aad
cmpsb
imul
dec
dec
ljmp
fmull
mov
shrl
add
sub
and
jo
mov
pop
cltd
xor
adc
xchg
les
jp
pop
mov
sbb
dec
add
orb
stos
jbe
mov
in
sbb
sbb
data16
and
insb
ror
or
mov
movsl
icebp
stc
lea
cmp
test
jl
icebp
iret
cs
lods
iret
inc
lahf
lret
out
mov
xor
cmp
dec
dec
dec
xchg
jecxz
test
cmp
cli
xchg
mov
pop
sbb
cmp
xchg
adc
cmp
int3
or
and
aam
jo
mov
jbe
sub
push
jno
inc
dec
jo
jnp
fstps
xchg
stc
sahf
out
insl
lock
stos
jp
lret
fdiv
pop
stc
mov
out
xor
enter
mov
loopne
ficoms
test
notl
push
mov
andl
bswap
adcb
sbb
xchg
test
mov
lcall
sahf
clc
roll
fwait
inc
add
adc
loop
cltd
not
and
mov
push
les
push
and
push
aad
ja
pop
out
rcrb
pop
dec
jne
stc
cmpb
int3
out
mov
xor
cmp
inc
rol
outsl
lods
adc
push
pop
addb
mov
lahf
sti
pop
insb
and
mov
out
sbb
cmp
jns
loop
inc
dec
iret
add
mov
rorl
aam
aam
leave
das
imul
mov
arpl
leave
scas
repnz
stos
jno
push
cmp
into
mov
popa
clc
leave
push
add
jecxz
std
xlat
movsl
xchg
out
pop
idiv
aas
data16
fisubrl
icebp
adc
sahf
test
stos
pop
adc
aad
iret
scas
enter
das
sub
mov
pop
inc
push
push
cmc
js
jmp
lret
dec
mov
push
adc
pop
out
or
and
popf
je
pop
popa
jg
rorl
je
or
cmpl
pop
or
cmp
dec
adc
shrl
cld
mov
mov
mov
loope
sub
mov
mov
xchg
pop
jne
nop
pop
add
mov
push
loop
push
xchg
lods
out
aaa
sbb
negb
jl
jl
orb
xchg
cmpsb
mov
stos
or
int3
fs
jnp
sarl
pop
push
aam
sub
sahf
scas
xor
stos
inc
add
ss
sbb
mov
sbb
fsubs
and
xor
subl
aas
xchg
fwait
out
push
jle
and
xor
addl
out
icebp
int
xor
mov
pop
stos
ljmp
orl
cmp
test
pop
mov
pop
in
xchg
int
cmc
jl
stc
insb
ret
ret
mov
and
inc
fcomi
add
vxorps
or
mov
stos
cmp
ljmp
xor
pop
subl
and
out
xchg
jecxz
cmp
nop
bswap
int3
cmpsb
adc
pop
fcoml
repz
lret
sub
stos
inc
data16
xlat
lahf
or
bound
xor
addr16
fnstsw
hlt
scas
in
push
aam
sarl
dec
mov
mov
sbbl
sub
test
mov
xor
xor
jnp
add
mov
and
ja
outsl
adc
pop
ror
xor
xor
adc
test
and
cltd
sub
mov
icebp
and
insl
fcoms
outsb
mov
mov
xchg
jge
sbb
fnstcw
lods
mov
jg
sbb
xor
mov
mov
mov
pusha
inc
in
jne
jle
sbb
in
inc
arpl
fstps
mov
push
mov
mov
adc
shrb
inc
out
dec
out
cmp
mov
imul
pop
inc
dec
shlb
push
mov
cmpsl
notl
sbb
mov
inc
fdivs
imul
test
js
lea
push
xor
or
insl
lret
data16
fimuls
push
xor
cmc
xor
jmp
pop
add
daa
into
out
xchg
push
jb
pushf
dec
lods
repz
cmp
or
testb
out
xchg
mov
jle
lret
and
mov
js
mov
fstpt
push
pop
sti
jbe
stc
adc
and
aam
jge
pop
jmp
cmpl
fdivr
test
add
into
jae
or
inc
aad
test
add
pusha
shufps
dec
stos
jmp
ljmp
inc
mov
mov
mov
dec
push
mov
fincstp
ss
cmp
sub
cmp
sub
push
cmp
lea
xor
loope
ficoms
sbb
int3
xchg
adc
test
repz
cwtl
fsubrl
lcall
fcmovnbe
push
rclb
pusha
fldl2t
xchg
push
push
mov
ja,pn
shrl
inc
pop
add
cmp
inc
xchg
mov
adc
testl
mov
adcl
test
movsb
mov
adc
cli
add
leave
int
in
mov
or
fcompl
lods
pop
lahf
repz
ret
mov
test
call
outsl
mov
cmpsb
sub
movsb
pop
outsl
push
mov
cmpsb
icebp
xor
add
and
xor
arpl
nop
sbb
inc
mov
les
adc
xlat
popa
outsb
rorb
repnz
mov
adc
inc
lret
gs
jmp
test
data16
dec
mov
clc
aad
xor
mov
leave
sbb
fcmove
mov
mov
mov
sub
cwtl
fdivs
stos
repnz
int3
mov
addr16
pusha
xorb
aam
jae
push
mov
ret
add
sbb
test
mov
pusha
mov
push
fnsave
mov
arpl
out
pop
shll
pop
scas
and
jge
lahf
scas
sub
mov
ljmp
pop
sbb
inc
push
data16
mov
pop
xchg
sub
and
inc
adc
mov
repz
in
in
xchg
into
mov
cmp
pop
adc
aam
mov
xchg
jne
dec
sbb
dec
mov
repz
jg
lahf
enter
add
xor
mov
inc
aaa
stos
outsb
xchg
cwtl
and
pop
inc
fmuls
pop
mov
cwtl
xchg
or
jne
in
cmc
lahf
and
inc
andb
sbb
mov
roll
test
xor
inc
lret
xor
test
adc
psrad
int
dec
pop
stc
pop
lods
movsl
xor
pushf
or
adc
push
pop
call
xor
bound
scas
mov
mov
jne
adc
leave
pop
stos
mov
ljmp
test
adc
push
push
ss
test
xchg
das
adc
xchg
add
test
mov
sbb
inc
scas
sub
sub
int
or
lods
sub
mov
repnz
mov
fcompl
rcll
hlt
outsl
inc
stc
sub
xor
lods
aam
adc
push
test
push
add
sbb
add
jb
ficompl
jle
cld
and
ds
or
sub
lcall
fs
cmp
lods
in
add
fs
dec
int
xchg
out
cmc
mov
fucomi
stos
push
jo
mov
xchg
cli
pusha
mov
popa
push
mov
sarl
shlb
pop
imul
in
outsl
loope
stos
push
or
icebp
cli
sub
sub
cmp
lea
das
push
mov
dec
scas
adcb
scas
fs
cmpsb
jne
push
xlat
pop
push
cmp
mov
test
stos
mov
mov
pop
movsb
mov
outsb
fwait
push
add
movsl
iret
and
dec
jo
cmp
xor
cmc
jp
mov
and
or
mov
add
movsl
pop
or
pop
aaa
push
test
jp
and
xor
flds
inc
inc
sti
inc
test
in
rol
push
fbld
lret
push
xlat
jne
or
inc
pop
js
inc
in
and
lret
aaa
xchg
das
lods
jmp
mov
loopne
test
int
xchg
imul
push
fs
cmp
lcall
or
adc
sbb
call
or
ror
dec
notl
mov
cmpsb
test
lods
dec
push
dec
fnstenv
push
in
pop
scas
out
rolb
or
cwtl
loope
lret
push
jge
test
jae
cmp
leave
and
jg
mov
mov
push
inc
fisubrs
pop
mov
fwait
bound
mov
je
gs
xchg
or
cld
iret
inc
fildl
test
mov
test
xor
loopne
cmp
sub
lret
bound
bound
jmp
aas
and
pop
mov
push
jmp
out
iret
ja
cmp
mov
cmp
mov
add
lcall
jbe
js
sub
jbe
sti
jns
mov
adc
jae
push
sti
test
dec
fildll
dec
or
pop
sub
arpl
stos
jmp
fdivl
lds
nop
mov
push
aad
pop
repz
mov
adc
in
mov
pop
dec
dec
testb
cs
es
lods
xor
imul
cld
cmp
pusha
pop
sbb
dec
and
push
aad
xchg
push
in
test
xor
jbe
aad
jl
xchg
mov
scas
dec
pop
cwtl
ss
pop
popf
ret
repz
jno
jno
sub
cmp
int3
loopne
dec
adc
out
mov
movsb
push
adc
fwait
xor
fbstp
testb
push
mov
mov
inc
mov
stc
cmp
or
dec
iret
ja
add
push
aaa
adc
sbb
js
out
add
mov
cli
sbb
jns
or
pop
test
pop
dec
popa
ficomps
xchg
imul
cmp
push
repz
mov
mov
insl
push
xchg
je
mov
stos
and
push
jnp
aaa
pop
test
bound
push
gs
sbbl
push
in
enter
sub
out
stc
jbe
ret
je
pop
sub
rorl
xchg
lods
dec
data16
sbb
add
sub
test
mov
movsb
bnd
dec
push
pop
xchg
xchg
testb
dec
in
sarb
or
clc
pop
insb
pop
pop
push
dec
or
cs
sub
andb
lcall
dec
xlat
mov
mov
cli
xchg
out
lods
sahf
or
into
add
les
rcrb
xchg
adc
push
js
mov
xor
loope
outsl
iret
xchg
mov
fadd
cli
dec
mov
pop
lock
movsb
in
jp
and
sub
in
shlb
add
adc
xorb
push
mov
mov
cmp
xchg
sub
pop
sbb
jbe
js
sub
ja
dec
jl
dec
push
jle
out
push
out
insb
or
adc
add
call
or
addr16
out
mov
sbb
or
lock
js
jle
mov
roll
mov
fisubrl
cmpsl
mov
jns
nop
adc
rorl
jecxz
std
lods
jo
or
mov
in
mov
or
das
mov
or
push
pop
sub
xlat
xchg
sub
xor
and
std
inc
inc
out
sti
inc
mov
push
xchg
inc
or
xor
sahf
subl
inc
aas
fsubl
aam
mov
in
aad
push
sub
mov
leave
push
mov
jb
or
ret
cmp
lea
add
mov
sti
inc
out
dec
and
sub
in
and
mov
xor
adc
xchg
in
mov
leave
arpl
cmp
pushf
adc
fldenv
fs
imul
jae
sti
mov
fidivrl
xor
push
push
push
cmpsl
push
lock
repz
stos
mov
shl
leave
scas
mov
cmp
push
cmc
or
loope
ds
in
out
xchg
sub
dec
test
mov
mov
movsl
outsl
movsl
pop
mov
lods
sbb
cmpsb
cmp
push
pop
lahf
sbbb
or
xor
popa
icebp
jbe
ret
jns
adc
mov
repz
mov
mov
enter
in
lds
xchg
pop
and
mov
outsl
cmp
out
push
add
idivl
mov
sbb
push
add
jecxz
enter
sub
cmc
aam
es
repnz
daa
mov
jo
pop
fsubs
out
decl
xor
inc
fsqrt
xor
jle
popa
mov
and
mov
fnstenv
push
mov
jge
out
sahf
mov
and
xor
bound
mov
and
rcr
ds
pop
inc
mov
in
fnstsw
xchg
leave
push
popf
xchg
fldcw
test
jge
ja
cmpsb
out
add
xor
repnz
jl
pop
sub
pop
dec
clc
or
push
jp
in
das
xchg
xor
dec
fidivrl
insb
pop
cmpb
pop
jl
pusha
pop
sahf
xchg
hlt
sbb
aad
push
loopne
mov
popl
faddl
fldl
jecxz
ljmp
shll
loopne
mov
jmp
das
mov
or
bound
in
jg
jecxz
lods
mov
jae
ret
cmp
mov
lds
mov
xchg
and
ja
aam
jp
cld
mov
cmpsb
ret
ljmp
jno
push
sahf
adc
repnz
push
icebp
push
aas
dec
cmp
mov
mov
cmp
xchg
pop
mov
lea
xor
icebp
dec
dec
scas
dec
dec
lods
xchg
dec
orb
bnd
cmpsl
xor
sbb
push
cli
leave
stc
shlb
dec
dec
pop
cmp
cmp
orb
add
ds
sub
stc
jo
mov
jns
and
inc
in
outsb
push
outsl
repz
je
daa
repnz
rorb
pusha
int3
test
push
inc
in
out
outsb
stc
adc
stc
pop
fistpl
xchg
jg
pop
mov
fwait
popa
jp
xchg
cld
mov
and
fiadds
dec
add
arpl
dec
cmp
in
dec
pop
sub
insl
popa
mov
outsl
sbb
nop
gs
orl
push
mov
and
lea
adc
jbe
and
ds
jmp
iret
lahf
or
or
lock
sbb
lds
sub
pop
xor
lock
cmp
fiadds
xchg
dec
cmp
xor
mov
jb
and
jae
clc
push
pop
mov
mov
insl
sbb
sbb
sbb
out
jnp
cmp
mov
xor
lcall
sbb
cli
imul
testb
pop
data16
adc
sti
or
xchg
jbe
ds
loopne
cmp
iret
and
dec
xchg
mov
or
fwait
cld
bound
pop
cwtl
and
cltd
jle
adc
lret
mov
popl
pop
ss
hlt
mov
mov
pop
movsb
rolb
out
add
add
mov
adc
push
stos
mov
mov
xor
pop
mov
lock
fisubs
test
leave
fnstenv
jno
ss
decl
loop
mov
cmpsl
jg
xor
and
pop
jbe
pop
and
pop
add
dec
arpl
or
jo
inc
jmp
popf
repz
pop
push
icebp
lds
pop
int3
xchg
sub
pop
push
fs
insb
jo
scas
cltd
cmp
imulb
test
sbb
mov
jge
dec
dec
jo
cmpsb
fsubr
fwait
test
mov
repnz
and
or
inc
pop
das
cmp
xor
jle
or
xchg
in
push
lahf
xchg
cmp
mov
or
popa
clc
stos
xor
add
clc
mov
and
insb
inc
sub
insb
test
mov
xchg
adc
mov
lcall
mov
stos
cli
inc
fsubl
mov
dec
dec
out
jle
mov
pop
sbb
call
jbe
out
imul
push
jmp
js
mov
jecxz
popf
movl
dec
mov
fs
lods
and
xor
ljmp
push
or
xor
mov
xor
rcrb
inc
mov
insl
jno
mov
out
hlt
mov
jbe
stc
mov
mov
sbb
mov
mov
inc
stc
mov
repnz
adc
pop
imul
mov
insl
in
jnp
push
cmc
dec
pop
inc
es
icebp
mov
jp
jne
cmp
lret
cld
aaa
sahf
loopne
pop
dec
rorl
jnp
pop
insb
int
adcb
pop
imul
call
xor
add
push
ss
sahf
cmp
xlat
dec
data16
push
rcr
arpl
gs
testb
pop
adc
fsubrs
jp
jmp
push
sbb
mov
mov
bound
sub
lret
sbb
outsb
sub
adc
stc
mov
testl
sbb
push
and
adc
lea
sbb
pop
xchg
rcr
mov
push
test
inc
jns
fs
jne
dec
xor
jmp
lahf
dec
movsl
lock
enter
xchg
in
ljmp
cmp
push
push
jbe
xor
shlb
rcrb
add
add
mov
jo
and
int3
mov
and
es
clc
jge
xor
mov
cmp
jno
push
adc
cltd
xor
ret
pop
lahf
in
push
xchg
cmp
lcall
pop
aaa
sub
incb
xor
insb
sub
dec
mov
push
int3
sub
fs
xchg
dec
adc
aaa
lahf
pop
call
rorl
ret
out
aaa
les
arpl
cmp
fs
idivb
fisttps
mov
out
pop
sbb
mov
js
jne
rclb
inc
out
inc
pop
stos
add
push
fwait
jmp
push
insb
mov
inc
data16
shl
mov
in
mov
push
push
and
mov
or
cmpsb
inc
rol
pop
cmp
adc
gs
or
inc
lret
fstps
out
cld
fsubr
into
xchg
jbe
repz
jge
xchg
jle
fwait
xchg
orb
mov
mov
xlat
inc
dec
pop
sahf
mov
fsubl
sbb
pop
sbb
mov
mov
test
xchg
inc
mov
sahf
mov
jne
jecxz
cmp
xchg
mov
xchg
push
mov
add
outsb
mov
sarl
lods
and
adc
mov
aad
inc
mov
xor
andl
xlat
sti
ret
mov
and
adcb
inc
sub
push
in
push
sub
inc
vhaddps
call
push
mov
push
jle
fs
sub
xor
jmp
cmp
imul
jp
sub
fdivrs
xchg
cmc
lcall
and
dec
sahf
fwait
jle
in
adc
mov
repz
and
bound
outsb
or
sub
std
int3
filds
mov
inc
inc
ljmp
cmp
sub
stos
inc
inc
add
idivl
mov
outsl
cmp
andl
enter
sti
out
cmp
or
xchg
notl
mov
imul
jbe
adc
dec
sti
sub
aad
outsl
mov
in
adc
inc
cs
orl
mov
xor
push
popa
or
mov
int
xchg
cmp
shrb
push
es
leave
popf
mov
pop
xchg
lcall
sub
lahf
mov
push
xchg
mov
repz
test
mov
xor
dec
addb
je
inc
mov
shrl
pushf
out
dec
in
xchg
mov
pcmpeqb
pop
ds
mov
inc
cwtl
test
stos
enter
in
mov
jecxz
mov
call
xor
sub
call
mov
and
lods
iret
mov
pop
loopne
push
not
movsb
xor
push
negl
cmp
cmp
or
ret
sbb
add
xor
xor
outsb
stc
push
movsl
add
or
push
add
jo
pop
addr16
adc
fsubrs
ljmp
mov
xor
xor
cli
push
dec
cltd
stos
jp
sbb
jg
shlb
bound
js
sub
fildll
jne
xchg
fistps
sub
or
push
mov
lods
xchg
jno
and
in
idivl
stos
pop
sahf
sbb
in
mov
movsb
repnz
xchg
test
and
mov
jl
pop
and
xchg
mov
xlat
push
lahf
xchg
scas
jne
bound
push
jb
dec
xor
out
mov
iret
jb
sbb
repz
xchg
xchg
sub
jge
in
mov
jge
lods
sbbb
xchg
cmpsb
mov
xchg
or
data16
les
pop
popf
pop
cwtl
mov
subl
scas
cmp
fwait
call
dec
das
addr16
push
and
push
nop
scas
mov
mov
xchg
mov
pop
xor
pop
scas
jmp
jb
popf
jl
push
cs
dec
daa
mov
dec
jbe
add
daa
lods
add
adc
pop
ret
mov
or
lret
push
cli
ret
enter
loop
inc
ljmp
push
movsl
ds
mov
icebp
dec
jo
pop
loopne
inc
lahf
ss
lret
cmp
dec
lret
into
jno
es
fmul
cmpsl
ds
mov
lea
xchg
adc
fisubrs
mov
shll
mov
insb
imul
inc
not
and
xor
into
dec
loopne
push
idivb
sbb
mov
cld
outsl
fidivs
inc
pop
loope
mov
aad
mov
pop
mov
cmp
or
cs
std
leave
jae
test
xor
mov
cmp
xchg
mov
scas
inc
aad
push
lret
cmp
xorb
sti
push
jecxz
ss
sub
fnstenv
sub
cmc
imul
fnstenv
ficoms
xchg
hlt
mov
fdivrs
jecxz
imul
sbb
daa
mov
push
or
jns
mov
movsl
push
lds
fstpl
outsl
push
dec
ss
mov
test
out
or
jnp
sahf
cwtl
jae
addr16
pop
xor
sarb
add
loop
mov
mov
imul
mov
dec
rcr
hlt
je
lret
jg
push
in
notb
inc
std
daa
std
sbb
cs
sbb
es
cs
or
negb
and
aas
push
mov
dec
jmp
lret
jnp
pop
sub
pushf
insb
sub
dec
aam
jmp
xchg
mov
loopne
cmp
jb
out
dec
and
and
scas
movsl
stos
cmp
jae
cmpsb
mov
test
jno
jecxz
inc
test
aam
fistps
out
jmp
cmp
inc
ds
lods
ret
jae
aas
imul
ret
fstp
adc
pop
iret
movsb
addr16
aas
ljmp
stos
mov
sbb
xor
test
rcrb
pop
outsb
mov
cmpsl
dec
cmp
cs
mov
pop
sub
lret
fisubs
cmpl
sub
mov
dec
inc
pop
rcll
mov
pop
out
xchg
cmp
mov
dec
nop
mov
jecxz
and
or
test
push
lahf
and
jbe
in
add
in
dec
mov
adc
jae
dec
jne
xor
xchg
call
sti
loop
add
loopne
cmp
xchg
mov
cmpsb
pop
repz
mov
dec
aaa
push
jb
outsb
daa
mov
js
inc
sbb
test
fwait
cltd
lcall
popa
pop
sahf
xchg
shll
xchg
and
and
mov
xchg
out
mov
clc
cmp
fdiv
cld
pop
outsb
rolb
mov
stc
xlat
add
cmp
mov
sbb
xchg
icebp
sbb
stos
lret
dec
mov
mov
jns
fisubl
je
sahf
test
int3
adc
dec
push
pop
ss
aam
inc
mov
mov
push
sub
push
into
je
xchg
jnp
jne
mov
popa
jecxz
addr16
fucom
sbb
jp
data16
pop
mov
mov
les
adc
add
and
or
fmul
mov
dec
jge
jo
adc
lds
testl
push
jecxz
push
test
mov
sub
jmp
add
add
iret
push
in
jge
sbb
fwait
cwtl
jb
fildl
das
fdivrl
push
shl
pop
stc
dec
or
loopne
shll
jge
cmpsb
ret
gs
sbb
fucomp
add
sbbl
xor
push
mov
or
ds
jle
adc
xchg
stos
inc
into
daa
in
pop
leave
hlt
jnp
add
ret
jo
fs
xchg
sub
xor
push
add
pushf
sub
mov
or
pop
xor
mov
push
lods
cmc
es
inc
test
xor
mov
sbb
ja
sahf
xor
ret
bsr
mov
mov
xchg
fs
sbb
shrl
inc
cmp
icebp
mov
sbb
mov
mov
sub
mov
dec
loop
test
int3
and
push
inc
out
push
inc
pop
dec
dec
inc
popa
jns
and
jl
je
enter
xchg
push
push
lods
test
out
es
mov
add
mov
mov
ret
repnz
mov
add
pop
or
bound
jecxz
bound
cltd
test
insb
jns
outsb
stos
into
sti
mov
sbb
jl
push
push
test
aas
popa
addr16
and
push
mov
sbb
pop
xchg
jg
mov
push
mov
jmp
cltd
nop
imul
or
dec
sbb
jb
pop
xlat
jp
push
inc
cwtl
test
test
or
test
xchg
pop
jle
add
in
gs
fs
call
popa
lock
clc
xchg
popa
mov
or
or
jo
or
cltd
mov
fsubrl
jmp
sbb
rorl
cmp
cwtl
jnp
dec
jge
inc
mov
in
and
xlat
outsb
push
xor
test
mov
cmp
mov
out
mov
jecxz
xchg
je
sbbl
cmp
iret
loop
out
xlat
pop
mull
mov
call
xchg
mov
or
mov
mov
enter
cmp
mov
das
jl
repz
adc
fildl
jp
sbb
roll
cmp
fbstp
pop
mov
mov
adc
popf
call
mov
sub
test
sub
mov
mov
and
repnz
dec
sbb
call
xchg
mov
jb
rcll
out
mov
iret
and
cmc
sbbb
jecxz
jns
sub
sub
pushf
psrld
push
nop
jl
daa
jno
and
inc
popa
clc
js
test
pushw
cmpb
scas
push
into
iret
push
pop
push
sub
xor
arpl
push
or
jae
mov
test
int3
repz
or
divb
in
dec
cmp
rcrl
in
cmpsb
jp
idivb
xor
data16
rcll
xchg
cmp
mov
sub
mov
push
or
int3
arpl
ja
and
test
cmc
and
ffree
jne
dec
push
fidivs
mov
pushf
sti
cld
inc
mov
out
cmp
aam
cmp
jne
jb
es
cmp
icebp
cmp
push
sbb
pusha
dec
cmp
cmp
add
ds
out
ret
cmp
fstps
jl
pop
inc
push
aam
push
dec
mov
pop
jno
mov
push
push
stc
and
add
inc
xchg
das
repz
popa
mov
push
jb
pop
cmp
pop
sahf
xor
shll
aad
pusha
dec
aad
je
sahf
pop
and
fisubrs
inc
stos
cmp
test
psrld
mov
aam
mov
inc
adc
adc
adc
mov
int
jae
sub
push
mov
push
in
es
mov
out
jae
xchg
cld
cmp
mov
mov
iret
stc
pop
jmp
out
mov
push
mov
or
mov
fimuls
add
mov
cmpsl
xchg
and
dec
filds
xchg
mov
jne
int
inc
jge
jle
aad
test
inc
divb
stos
mov
sub
adc
bound
fldl
pop
loope
frstor
lret
je
jae
ljmp
add
inc
and
push
dec
sti
test
jbe
fwait
sti
add
xor
xor
xor
out
fidivl
mov
mov
into
add
jo
or
inc
std
lret
jb
movsb
cmp
sarb
sub
mov
out
jno
mov
pop
ds
sbb
pop
lahf
mov
jmp
movsl
xchg
mov
into
cmc
mov
imul
push
mov
sbb
cmp
scas
add
mov
movl
stos
push
sub
scas
push
sarl
repnz
adcb
punpckhdq
adc
int
imul
pop
arpl
cmp
rcl
repz
scas
mov
or
testb
cmp
jg
ds
movsl
in
or
lret
cld
xchg
inc
mov
xchg
cltd
xor
call
add
sahf
jge
and
addl
aaa
jae
dec
jns
cmp
add
inc
add
xchg
cld
in
test
lret
shll
inc
inc
fdivl
push
and
imul
negl
arpl
sahf
cmp
add
mov
shrl
sub
cmpsl
out
lds
or
repnz
pop
or
lret
sbb
push
dec
test
sbb
scas
jl
add
dec
lahf
sbb
or
xchg
mov
add
stos
dec
add
xor
pop
inc
imul
in
imull
pop
mov
xor
scas
fsubp
addr16
cwtl
mov
mov
cmp
fwait
xor
and
pop
fistpl
pushf
inc
sbb
xor
sbb
push
lahf
insb
mov
cmpsb
bound
mov
fbstp
sub
fisubrl
das
std
push
icebp
mov
shlb
cwtl
int3
mov
fcoml
mov
int3
mov
push
js
fstp
int3
inc
pop
rcl
adc
mov
lock
icebp
dec
sbb
aas
dec
ds
sbb
testl
lahf
sub
mov
movsb
ret
or
pop
loope
shll
push
pop
cmpsb
mov
pop
push
and
inc
mov
ljmp
pusha
inc
jg
jle
scas
inc
add
daa
int
sti
dec
cmp
popf
add
and
mov
xor
xchg
addr16
inc
out
mov
test
out
pop
sbb
cmp
mov
jbe
out
gs
jbe
inc
sbb
adc
jle
or
push
sub
lret
fsubs
mov
push
lods
fstpl
xor
mov
data16
test
lods
sti
scas
test
pop
arpl
add
sub
pop
js
inc
and
jmp
push
dec
sbb
lods
inc
inc
push
das
cmp
sbb
lret
mov
addr16
jp
push
cwtl
shll
in
sub
ds
add
sbb
jno
mov
cwtl
les
mov
jnp
jecxz
lahf
ds
sub
cmp
xchg
sub
rol
loop
sub
jbe
sub
xchg
imul
cmpsb
xor
cwtl
movsb
dec
and
ds
dec
add
repz
xchg
subl
sbb
add
orl
jno
ljmp
jmp
pop
sub
mov
jb
xchg
dec
aas
lea
lret
in
das
cmp
cld
leave
aaa
les
pop
movsl
lcall
js
xchg
sbb
jbe
lock
insl
mov
jb
xlat
mov
mov
jmp
fmulp
jo
xchg
push
add
aaa
mov
and
out
xchg
popf
xor
pop
sarb
dec
inc
pavgb
cmp
add
mov
push
sub
lods
test
int3
cld
xchg
push
or
std
das
sbb
stos
int3
xchg
pop
addr16
xchg
sub
ds
push
stc
mov
sub
dec
jbe
std
dec
jp
push
repnz
stos
cmpsl
dec
adc
andl
or
xor
push
dec
ljmp
cli
scas
popa
divl
jmp
push
mov
mov
scas
das
jne
ffree
cmp
dec
mov
inc
nop
ss
shlb
loop
lret
lock
out
xor
add
cmp
aad
pop
loopne
cltd
sbb
xor
sbb
push
je
cmpsl
int
inc
stos
cmp
incl
mov
mov
mov
jae
out
xchg
pop
hlt
push
outsl
jns
ret
iret
insl
push
sbb
inc
mov
adc
cmpsb
push
push
in
add
xchg
sub
dec
sbb
lods
sbb
jns
push
addl
imul
out
dec
mov
sub
mov
in
pop
out
cmc
dec
in
inc
jmp
pop
sar
mov
xlat
scas
and
mov
fxtract
js
xor
inc
cltd
push
mov
fcom
sbbb
negl
sub
jge
std
mov
and
pop
lret
cli
pushf
test
jge
or
sti
jecxz
pop
cmp
xchg
pop
adc
popa
test
jns
jo
inc
add
mov
jne
fst
imul
rcrl
mov
sub
std
cmp
shll
dec
push
sahf
clc
inc
mov
iret
xchg
xchg
sub
adc
xor
sahf
cmp
flds
mov
rorl
xor
movsl
cmp
notb
lret
mov
fidivs
xchg
sahf
jno
mov
faddl
dec
push
push
xor
arpl
xchg
pop
popf
sub
add
ja
sbbb
xchg
cmp
mov
xchg
push
mov
sub
fs
cld
dec
mov
mov
push
roll
iret
fldt
stos
es
sbb
lds
data16
bound
push
sub
push
outsl
enter
xor
jbe
jne
push
mov
fwait
cli
cmc
cmpsb
mov
rorb
and
pop
mov
std
in
mov
or
aad
push
lret
xchg
in
pop
inc
shlb
jecxz
das
add
mov
inc
inc
push
mov
adc
ljmp
fs
xchg
jge
adc
imul
repz
mov
fiadds
in
fidivs
pop
gs
cmp
addb
cmp
scas
pop
test
fsave
inc
lods
lret
sbbb
inc
leave
and
bnd
mov
dec
pop
cmp
jge
jae
loopne
push
in
pop
add
mov
and
lock
ljmp
shll
iret
sbb
scas
cmpsl
je
pusha
sbb
cmpsb
and
sti
cwtl
fbstp
shlb
iret
push
outsb
push
enter
into
jmp
jle
mov
out
or
cld
and
adc
jg
icebp
mov
add
imull
fildll
dec
or
mov
xchg
movsl
push
mov
cmpsl
in
cmp
les
pop
cltd
mov
jns
dec
mov
jns
add
xor
cltd
xor
push
and
pop
loop
cmp
pop
sub
jns
mov
inc
mov
popa
jge
hlt
and
lea
notb
loope
loop
mov
add
pushl
jmp
and
aaa
cmpb
mov
scas
inc
jne
aas
sahf
addr16
addr16
aas
cltd
sbb
pusha
xchg
sub
fcomip
sub
mov
inc
es
scas
and
stos
test
call
sub
mov
push
mov
xchg
inc
push
popa
imul
xor
dec
jmp
in
aam
not
cld
call
pushf
das
or
lea
dec
loop
mov
into
in
push
push
dec
in
xchg
sahf
outsl
insb
scas
shll
test
bound
sbb
sbb
xor
push
ss
sub
in
pop
and
in
popa
mov
out
sub
int3
test
dec
xchg
filds
mov
jl
push
push
xchg
add
stos
inc
sub
push
cmp
mov
iret
push
or
xchg
pop
or
fs
scas
mov
add
idivl
push
xor
xor
shl
cli
lea
pop
add
outsb
xor
xchg
sbb
adc
sub
push
ret
jo
jnp
inc
push
mov
adc
xor
pop
outsb
mov
push
sti
or
stos
xchg
jno
mov
mov
enter
into
inc
pop
dec
loope
in
sarb
jns
pop
inc
imul
cmp
addr16
fidivrs
jbe
dec
lret
mov
fsubrl
imul
ja
lods
mov
xor
mov
xchg
mov
pop
push
std
das
push
sbb
lea
out
jp
xchg
stos
stos
sub
push
jns
cmpsl
cld
int3
jg
dec
das
movb
push
hlt
mov
clc
jns
test
sub
dec
in
leave
movsb
repnz
ret
hlt
add
daa
mov
xor
cmp
stc
pop
shl
cmp
imull
notl
ds
cmpsb
ds
inc
faddl
mov
ja
popa
ss
xchg
adc
push
xor
pop
inc
popa
mov
inc
pop
push
add
mov
das
scas
into
loop
sbb
sub
lcall
and
fcomi
dec
out
jae
lods
xchg
xor
arpl
aas
out
lea
jns
mov
mov
cmpsb
stc
xor
cmc
daa
pushf
inc
jno
mov
icebp
jae
lods
shlb
lods
daa
cmp
xchg
dec
push
dec
icebp
andb
mov
scas
and
mov
sub
andb
in
add
mov
or
mov
mov
inc
xchg
jbe
movsl
adc
pop
jne
mov
pop
cmp
lret
mov
fsubrp
out
mov
mov
lret
or
mov
mov
add
xor
jb
sub
cmp
sub
jbe
push
in
adc
and
test
outsl
push
loope
adc
das
mov
push
loop
icebp
or
pop
stc
repz
mov
fistps
jecxz
inc
mov
clc
int
js
jmp
dec
roll
ret
jle
vmaxpd
sbb
xchg
add
ret
cmp
pop
adc
and
pop
push
mov
mov
jae
add
cltd
xchg
leave
xchg
jmp
add
fsubp
jle
lret
icebp
dec
js
add
inc
outsb
je
jecxz
or
js
xchg
xchg
xchg
lret
arpl
sbb
xor
cmc
aas
mov
lea
sub
or
outsb
aad
insb
dec
enter
xchg
push
fistps
mov
outsb
sub
sbb
jg
ljmp
sbb
or
pop
sub
das
pop
inc
xor
mov
xchg
arpl
push
xchg
in
lds
aad
repnz
lcall
mov
sub
inc
cmpsl
cmp
mov
inc
adc
les
push
dec
and
out
pop
mov
add
insl
das
sahf
fidivl
pop
insb
fistpl
jnp
stos
stos
fsubrs
jmp
test
mov
cs
cmp
push
dec
iret
push
mov
sub
iret
outsb
loope
mov
lcall
fnstenv
pusha
pusha
notl
jp
push
mov
aad
sbb
test
inc
pusha
mov
push
xchg
sahf
mov
pop
sti
mov
sub
cmpsl
push
mov
pushf
les
adc
or
add
test
dec
shl
daa
daa
das
add
fstp
mov
loop
sti
arpl
sbb
mov
repz
xchg
xor
jmp
adcl
test
clc
aaa
movsb
aam
or
dec
out
xchg
rorb
mov
mov
sub
and
push
js
mov
popf
cmp
hlt
inc
int
fsubrp
push
pop
push
jmp
push
icebp
jo
aas
pop
out
xchg
aam
inc
fstl
cli
fnstsw
stos
in
jecxz
or
hlt
inc
mov
ret
mov
int
lret
int
inc
movl
push
xor
xchg
ja
cs
popa
imul
popf
and
dec
cmp
push
insl
fs
xchg
jmp
or
aad
dec
shrl
or
mov
push
add
jecxz
and
loopne
dec
xor
sahf
cltd
stc
mov
and
push
push
les
call
push
addr16
lea
push
mov
es
and
xor
loop
adc
add
pop
mov
popa
out
inc
ja
jbe
cmp
jb
ret
lea
pop
push
icebp
and
scas
out
push
lahf
push
cwtl
in
mov
ljmp
scas
mov
lods
mov
xor
mov
in
push
sub
mov
loopne
inc
and
push
insb
aas
push
push
and
xchg
enter
loop
xor
into
jb
xlat
adc
mov
jle
pushf
mov
out
mov
sbb
push
jo
mulb
mov
cmp
pop
xchg
cmp
jnp
fdivrs
cmpsb
inc
cli
mov
pop
wbinvd
xchg
mov
enter
stos
and
adc
mov
ja
mov
jno
xchg
outsl
loopne
mov
fidivrs
addl
jae
cmpsb
sub
repz
stc
lock
adc
call
lds
fldcw
mov
popf
jp
pusha
and
dec
mov
cmc
inc
mov
ret
lret
gs
jp
jge
pushf
fistpl
and
mov
gs
add
dec
testb
jno
dec
out
adc
ss
addr16
jb
ljmp
sbb
or
loop
lock
xor
mov
pop
cmpsl
scas
dec
pop
xor
xchg
stc
or
dec
and
sti
push
stos
cmpsl
cmp
data16
loopne
icebp
sahf
mov
rorb
or
arpl
sub
mov
mulb
pop
sbb
and
xor
push
mov
jb
xchg
sub
dec
shrb
negb
inc
mov
mov
adc
cmpsb
sub
mov
gs
jp
pop
movsl
icebp
imul
lcall
and
mov
add
and
in
std
ret
test
nop
pop
pop
mov
inc
int
rorb
in
stc
pop
divb
sahf
insl
adc
popf
xchg
cld
aaa
jl
adc
lock
jno
dec
xchg
aam
out
stos
jge
mov
lret
dec
sbb
add
cmp
and
fldl
and
add
mov
sbbb
inc
fucomip
inc
rorb
mov
fsub
jle
adc
and
lret
xchg
inc
popf
clc
cmp
shll
mov
test
dec
gs
std
pop
arpl
jne
out
popf
sub
cmp
imul
out
pusha
pop
jbe
jae
scas
lea
inc
orb
add
ret
stos
in
mov
push
in
fildl
inc
fisubrs
dec
out
std
cwtl
push
push
mov
shlb
sahf
xor
dec
lds
cmp
add
pop
fistps
int
insb
mov
cmp
out
xor
cmpsb
cltd
jl
jl
es
jo
xchg
outsb
inc
mov
adc
push
adc
sarb
mov
pusha
js
adc
inc
cmpsb
pop
cmpsl
ds
dec
xchg
or
xlat
push
stos
ret
lcall
mov
mov
out
fwait
icebp
add
ja
add
cwtl
sbb
ret
xchg
mov
ret
repnz
lods
icebp
outsl
lahf
adc
dec
or
cwtl
mov
andl
imul
and
icebp
cmp
sarl
and
pop
nop
dec
lea
pop
xchg
xchg
add
shrl
fmul
lds
inc
mov
mov
sbb
push
mov
jne
adc
cs
mov
mov
xchg
ret
or
mov
xchg
and
xchg
out
mov
cltd
adc
js
aaa
cli
xchg
and
xchg
xchg
adc
mov
inc
and
mov
or
jl
sub
mov
lods
xchg
insl
int
push
xchg
dec
push
jno
push
jle
rolb
shll
pop
das
fs
pop
mov
dec
add
pop
addr16
lcall
jb
and
mov
dec
stos
lret
mov
xor
mov
push
addb
in
je
inc
jo
inc
jge
xor
mov
mov
xchg
addl
cmc
test
cmp
nop
inc
in
xchg
and
cld
jbe
out
xor
imul
in
std
dec
pop
clc
or
xlat
push
je
aas
or
inc
cli
mov
shll
mov
ds
loop
pop
push
cmp
and
push
mov
int3
mov
mov
insl
loopne
and
stos
adcb
pop
iret
lret
je
mov
jbe
daa
rorb
or
das
push
mov
xchg
xor
mov
push
lods
lea
push
or
leave
lea
jnp,pn
push
ds
xchg
rcr
push
addr16
lock
sar
mov
mov
shll
in
pop
push
push
jl
ljmp
stc
popf
loopne
cld
dec
ja
xchg
ffree
mov
arpl
mov
arpl
sub
push
add
jo
cmpsl
sahf
int
sub
sti
or
or
dec
mov
xchg
daa
outsl
push
loopne
orb
push
pop
sbb
jo
fwait
aam
rclb
adc
sub
aad
add
pop
test
dec
add
mov
dec
xor
jne
outsl
cmpsb
popa
inc
mov
cmc
notb
aad
adc
cli
ljmp
xor
testl
test
jl
jae
mov
push
adc
push
pop
lods
adc
jmp
bnd
dec
push
jmp
mov
sbb
push
out
clc
mov
aaa
xchg
jno
xchg
add
imul
outsl
add
addr16
inc
mov
jp
repz
sahf
rclb
ret
xor
cwtl
ficomps
lret
lcall
and
cmp
dec
push
repnz
push
lock
repnz
pop
sbb
lahf
lds
push
and
add
inc
xchg
lea
in
popa
lods
sub
lret
test
in
jnp
mov
mov
sbb
mov
lahf
lret
call
in
inc
xor
outsb
sub
aas
ja
cmc
test
test
lods
add
cmpsb
das
ret
dec
into
mov
ljmp
int3
ret
and
lods
sub
nop
mov
iret
adc
popa
stos
mov
mov
pop
xor
stos
mov
push
push
jecxz
mov
aaa
fwait
pop
push
jmp
imul
dec
mov
sbb
jp
ret
lahf
out
sbb
mov
and
xchg
ficoml
test
push
mov
leave
bound
push
jae
popf
call
rcr
mov
rcr
mov
js
imulb
shl
lret
xchg
dec
jns
jnp
int
or
fdivl
in
out
je
xchg
fidivl
stc
sti
fwait
xor
imul
sub
mov
repnz
lea
sbb
cmpsl
stc
inc
sub
xor
push
xchg
stos
int
sbb
mov
cwtl
or
adc
jb
inc
sub
gs
xchg
movsl
xchg
push
mov
cmp
cmc
add
cld
and
sub
jo
mov
movsb
je
stc
aas
xchg
sub
cmc
push
jge
sti
mov
sbb
scas
dec
test
idiv
push
scas
andl
fdiv
loopne
bound
xchg
inc
and
jge
sahf
clc
jge
nop
mov
jp
sbbl
jle
xchg
sub
jg
xor
adc
outsl
inc
xchg
mov
cmp
mov
fsubrl
jl
push
out
in
loop
add
and
pop
push
xlat
aas
loopne
ja
addb
sbb
sbb
mov
xchg
call
fidivrl
lret
sbb
cwtl
adc
ljmp
lret
push
or
dec
inc
push
cld
inc
xchg
xor
negl
pushf
outsl
lock
rcrl
xor
jmp
icebp
sub
xor
mov
mov
popf
mov
mov
pop
ljmp
cmp
pop
jae
subl
add
push
pop
push
jecxz
xor
push
add
xchg
ja
movhps
pop
outsb
jp
insb
inc
push
pop
pop
in
jns
push
ret
rcll
add
push
ljmp
icebp
jl
sbb
fwait
jbe
data16
in
xlat
outsb
aas
pop
daa
adc
push
int
mov
jb
add
stc
adc
add
das
add
pop
mov
pop
mov
test
jns
sahf
mov
xor
rorb
sti
mov
cmp
iret
pop
pop
dec
adc
pop
roll
cmp
mov
insl
dec
bnd
sbb
testl
sahf
cmp
jg
les
fdivrs
pop
sbb
cmp
ds
dec
mov
jb
adc
mov
loope
jg
push
scas
or
decb
push
jbe
lret
xor
test
jnp
add
cmp
into
xchg
dec
pop
fsin
sbb
pop
jns
es
cmp
aas
aam
std
stc
cmp
inc
and
fstpl
imul
rol
shlb
scas
xlat
adc
sbbl
sbb
add
mov
aam
jns
and
jnp
shr
and
inc
mov
loope
mov
ficompl
subb
sbb
sbb
outsb
xor
fwait
call
push
ja
xchg
or
sbb
mov
addb
or
add
popf
lods
xchg
push
mov
insb
addr16
insl
imul
inc
add
cmp
insl
pop
lret
sbb
std
in
push
das
mov
cmpsl
jp
lea
cmp
lret
cmp
or
xchg
fdivs
fwait
outsb
ret
jae
xchg
cmp
lock
push
stos
js
and
push
shr
pop
add
pushf
loope
rclb
adc
dec
dec
cmp
cmpsb
xor
ret
pop
icebp
push
mov
push
cmc
mov
addr16
ret
lcall
movsb
mov
add
add
fdivs
mov
shld
sahf
sub
mov
adc
add
sarl
jb
or
cmp
add
xor
fldcw
pop
ss
andl
xchg
inc
cwtl
dec
std
testb
aaa
jmp
into
pop
mul
sti
xchg
outsl
xchg
std
add
or
mov
mov
push
sbb
or
rclb
fdivs
push
scas
fildl
jnp
add
addb
jbe
push
adc
pop
out
xchg
fadd
loop
test
jge
cwtl
xchg
nop
outsl
andl
mov
xchg
test
inc
dec
loopne
xor
mov
test
popa
andb
xchg
lods
fcoms
orb
or
mov
dec
and
cmc
fstps
dec
imul
jns
scas
sub
test
jnp
add
inc
into
scas
les
jmp
mov
repnz
and
lcall
cmp
ljmp
pushf
mul
dec
hlt
push
inc
cli
fstpt
cmc
mov
or
jo
imul
lret
push
push
xor
aas
cmp
bound
mov
xchg
pop
insl
sub
and
jle
lcall
cmpsb
push
lret
orb
stos
cmpsl
jmp
sub
js
add
fisttpl
cmc
fdivrs
push
cmp
pop
lock
out
cltd
jae
fnstcw
xchg
sbb
add
aaa
adc
or
adc
dec
out
mov
loop,pt
int
mov
ja
dec
out
imul
lahf
sti
or
addl
xor
xor
cmp
pushf
mov
push
inc
jg
and
pop
andb
mov
jmp
pop
jl
mov
cmp
js
push
xor
filds
jo
sbb
into
add
arpl
mov
xchg
in
js
and
lret
test
or
lea
adc
cmp
and
push
mov
sbb
stc
sub
stc
cmp
cli
inc
jae
repz
sbb
adc
adc
adc
cmc
and
jmp
xchg
test
enter
pop
ffreep
xchg
sbb
xor
mov
xor
sbb
in
aam
les
aam
cltd
mov
push
outsl
scas
sbb
ss
or
push
imul
xchg
inc
mov
outsl
mov
push
testb
xor
adc
adc
jns
popf
jns
sbb
sub
test
imul
xor
lods
jmp
fisubrs
popf
stc
add
fwait
lea
add
xor
or
cld
mov
mov
lock
pop
ret
add
push
loopne
or
sub
xchg
xor
aam
sbb
hlt
inc
jge
mov
and
aas
xor
test
insl
jg
mov
and
les
nop
fstps
std
imul
cld
ljmp
negb
arpl
lds
add
add
xor
bound
mov
shll
daa
aam
cs
pop
insb
mov
rcrb
das
sbb
push
inc
dec
adc
xchg
pop
push
sti
sbb
ja
mov
jmp
or
mov
xchg
es
jbe
loope
fcomps
mov
pop
add
add
ret
es
cld
mov
inc
shrb
pop
aas
int
aam
cmp
aas
mov
insb
nop
cs
mov
push
sbb
xor
jmp
fimull
jmp
ljmp
add
orl
xchg
cmp
shrl
fldenv
pop
rorb
mov
push
mov
lret
das
push
shlb
test
push
push
pusha
jo
imul
and
sbbl
loopne
andl
cltd
cwtl
inc
in
out
mov
std
insb
scas
les
mov
lods
sbb
sub
dec
daa
lcall
sbb
mov
aaa
push
outsb
dec
rclb
mov
scas
xchg
cmp
testb
test
repnz
aaa
rorl
and
sbb
nop
jno
aam
xor
sbb
xchg
adc
scas
adc
das
popf
and
mov
adc
xor
std
daa
outsl
push
dec
push
daa
call
sbb
sbb
call
sbb
clc
push
insb
sbb
add
inc
fisubrs
lret
cmp
jne
icebp
notl
hlt
packsswb
sub
ret
sub
lea
jo
das
mov
inc
mov
lret
cmc
stos
mov
mov
pop
repnz
fcmovnb
pop
or
imul
push
push
push
dec
lahf
psraw
hlt
pusha
outsl
out
cmp
test
ret
pushf
xor
mov
cmp
in
mov
push
loopne
aaa
call
xchg
mov
ljmp
jnp
aas
out
xor
cmpsl
dec
loop
mov
std
lcall
in
decb
add
nop
das
inc
fsubl
loope
adc
jb
cli
adcb
mov
sahf
xchg
jb
mov
js
loop
addr16
movsb
stos
and
adc
mov
jne
les
pop
fs
aam
fs
pusha
cld
cltd
pop
aam
mov
xchg
stc
and
adc
or
pop
mov
jp
mov
cmpsb
push
and
push
and
stos
cmpsb
jae
add
pop
outsb
mov
and
sbb
cmp
xchg
jle
dec
adc
mov
jp
and
cmpsb
in
es
bound
add
xor
push
jae
inc
jmp
sbbb
mov
sub
sahf
sbbl
adc
cmp
sub
mov
test
stos
fwait
inc
xchg
hlt
jnp
mov
sbb
ret
mov
sub
fmuls
xchg
mov
shl
jle
inc
rorb
inc
dec
int3
inc
adc
test
loope
and
mov
iret
idivl
add
cmp
pop
sub
fcoms
push
xchg
cli
adc
fs
into
xor
int
jmp
aam
dec
dec
xchg
cmc
or
push
loop
jo
or
mov
jne
or
ja
pop
dec
aaa
mov
in
in
paddd
aam
imul
andl
rcl
or
xorb
mov
mov
aam
or
dec
dec
sbb
mov
cli
cs
pop
xlat
sbb
cmpsl
and
pop
nop
aam
pop
push
cmpsb
and
mov
test
xchg
icebp
or
pop
sti
and
inc
mov
xor
push
fisttps
mov
xor
xor
insl
arpl
cmc
mov
test
in
mov
pop
outsb
mov
jmp
dec
stos
jbe
cmp
mov
pop
test
mov
pop
dec
repnz
or
icebp
je
pop
push
add
and
cmp
mov
aad
add
mov
push
popa
cmp
xor
or
sub
cmp
je
ljmp
loop
and
mov
les
mov
adc
xlat
push
pop
cli
mov
std
xchg
sub
cltd
cmc
mov
stos
movsl
dec
sbb
adc
outsl
ficoms
mov
xor
imul
loope
adc
cs
inc
push
add
and
xor
and
push
sbb
outsl
jno
push
arpl
or
pop
icebp
mov
push
push
enter
fidivrs
push
and
fldcw
aas
sahf
ljmp
mov
rcll
mov
out
popf
jb
out
jne
cmovne
pop
dec
cmp
pop
or
loopne
xor
xchg
mov
mulb
mov
push
movsb
js
push
das
xchg
addl
sub
call
inc
xchg
add
sti
cmp
subl
dec
call
add
sub
shl
inc
sbb
push
pop
sub
mov
js
mov
sbb
loop
icebp
mov
shr
aad
jg
cmp
sub
inc
push
insl
mov
jle
ss
cmp
pop
out
inc
cmp
jge
mov
xor
loop
adcl
sbb
jno
lret
mov
stc
xchg
das
inc
mov
cwtl
xchg
fcmove
hlt
pop
sub
test
inc
cmp
daa
stc
pop
inc
pop
inc
sub
test
leave
ss
mov
sub
test
cmpsl
cli
jmp
lcall
adc
cmp
out
dec
pop
fsubrs
add
jnp
pop
mov
jo
mov
mov
mov
stos
js
mov
xor
fnsave
xor
adc
call
inc
rcrl
mov
cmp
push
xchg
adc
xor
cltd
dec
pushf
add
mov
idivl
pop
icebp
dec
test
icebp
push
je
nop
test
mov
fidivl
add
mov
mov
fwait
dec
xor
or
arpl
xchg
xor
xchg
loop
jl
loop
cmp
in
je
scas
pop
out
stos
mov
out
ret
popl
mov
inc
repz
mov
shrb
arpl
lret
das
xchg
or
lret
movb
add
adc
sbb
out
jo
pop
mov
adcl
outsl
aam
xchg
xchg
nop
loop
add
add
test
xchg
sub
cmpsb
pop
in
pop
sub
je
mov
stos
jmp
or
xor
cmpsb
push
push
mov
add
lods
fstpt
loopne
cmp
adc
cmp
xlat
nop
lock
sub
and
mov
call
cmc
das
jle
and
pop
xor
mov
xor
push
fwait
das
fisubrl
xchg
pop
sti
mov
aas
iret
pop
sar
xor
mov
bound
push
xchg
daa
mov
cmp
mov
dec
pop
mov
mov
adc
or
fldenv
dec
stos
xchg
scas
movb
mov
icebp
adc
ret
pushf
sti
inc
xor
outsb
bound
nop
xchg
sbb
aam
add
je
andb
lea
lods
push
fbld
mov
mov
xchg
cmp
push
movsl
push
pop
jo
test
add
stos
dec
or
mov
jno
inc
cwtl
sarl
pop
xchg
hlt
ficoms
dec
dec
mov
into
dec
or
add
sbb
stos
fistl
aad
lods
sub
loop
jmp
stos
loop
adc
jno
out
inc
pop
pusha
fsubrs
dec
ss
dec
in
jp
jle
xlat
jle
rcr
cmpsl
frstpm(287
and
cmpsl
lods
add
in
or
adc
leave
enter
ficomps
test
jbe
sub
sbb
mov
scas
mov
test
jno
lods
inc
lcall
dec
sub
pop
lcall
mov
data16
hlt
mov
push
lea
outsl
jns
ret
mov
es
rol
test
ds
and
testl
stos
xchg
int3
fdiv
lret
lea
sub
lahf
pushf
xchg
outsb
adc
jle
shrb
cmp
lds
dec
ret
dec
fdivp
jbe
bound
mov
pop
repnz
or
push
xchg
sbb
je
repz
out
movsl
pop
xchg
jbe
in
inc
lods
arpl
or
js
mov
cmpsl
adc
and
dec
iret
bound
push
jmp
fs
aad
orl
adc
scas
inc
test
cli
ret
gs
xchg
adc
mov
or
fstl
push
jmp
movsb
dec
push
lcall
in
inc
lea
adc
imull
rorb
push
push
mov
sbb
push
imul
mov
daa
outsl
imul
mov
mov
inc
std
mov
cld
pop
pop
cli
inc
xchg
cmp
push
icebp
orl
add
test
into
enter
cmp
inc
fsubl
dec
dec
mov
out
jae
push
mov
mov
sbb
mov
pop
mov
je
cmp
das
mov
and
fcmove
data16
and
imul
rclb
inc
outsl
adc
test
inc
mov
les
cmpsb
pop
jecxz
imul
stos
pop
ss
inc
inc
sahf
loop
lret
jecxz
pop
popa
enter
mov
outsl
mov
test
mov
imul
mov
jle
les
fldl
arpl
pop
stos
arpl
jbe
or
and
lods
xor
ljmp
cld
jae
dec
cmp
bound
gs
xchg
nop
jne
add
cmpsb
mov
divb
div
or
adc
mov
pop
leave
lods
dec
push
movsl
fnsave
cltd
decb
out
lds
push
xchg
call
xchg
popa
xchg
mov
mov
inc
cmc
or
repnz
popf
cmpsb
push
mov
ret
repz
add
pop
sbb
add
hlt
sub
fdivrs
sub
cmpsb
std
dec
hlt
lahf
cmp
in
inc
adc
fcompl
push
adc
cmp
pop
cmp
sbb
xchg
insb
mov
fs
dec
push
xor
shll
mov
push
or
cli
adc
test
jo
enter
adc
in
enter
push
dec
mov
sub
es
pop
adc
inc
inc
xor
sub
sub
lea
jl
mov
mov
pushf
xchg
xchg
aad
adc
adc
dec
pushf
push
pop
enter
lret
pop
xor
lods
fs
mov
sbb
and
psllw
fldt
inc
enter
nop
aad
mov
aas
lret
je
loope
insl
dec
enter
cmp
mov
bnd
add
mov
push
nop
in
and
addr16
inc
into
cmpl
sbb
mov
inc
dec
fs
jge
mov
cmp
test
or
push
jl
lods
daa
adc
mov
ret
cld
leave
xorb
mov
adc
add
sbb
scas
inc
rol
jmp
nop
insl
cmp
lcall
mov
add
sahf
imul
call
fstpt
cwtl
xchg
loopne
inc
sub
inc
sarb
les
mov
das
xchg
jp
jo
aas
addb
mov
out
std
dec
or
insb
jle
js
adc
in
adc
push
sub
push
lea
bound
out
adc
mov
cmpsl
cld
lods
fistps
js
je
cwtl
inc
jg
mov
in
cmp
arpl
aaa
fldl
das
repz
fisttpl
inc
adcl
push
push
pushf
ss
cmc
add
add
repnz
fsubl
pop
sti
stos
mov
imul
xchg
pop
icebp
adc
cmp
mov
mov
jle
lock
mov
int3
insl
sub
out
xor
enter
andb
push
sub
mov
int
out
outsb
inc
popf
test
dec
int
fidivl
scas
cli
push
jmp
clc
jg
aas
out
ja
push
loopne
andb
mov
add
ja
mov
pusha
shlb
inc
fisubl
fmull
call
test
push
lcall
sbb
dec
fdivs
pop
addr16
fisubl
add
inc
sub
jo
fistpl
mov
cmpsb
inc
mov
cmp
jbe
imul
mov
es
stos
pop
push
sub
push
adc
add
adc
loope
pusha
cmp
sbb
sub
xor
aad
xor
fisubs
dec
arpl
push
lahf
test
mov
sysret
sahf
adcb
aam
negl
add
inc
ret
insl
out
fdivl
sbb
add
cmp
sub
fnstcw
mov
lahf
mov
or
mov
mov
subb
pop
mov
filds
xor
popa
push
xor
andl
lret
frstor
mov
scas
sub
imulb
sahf
ds
lret
pop
movsl
pop
jns
pop
cmpsb
mov
call
sbb
popa
pop
mov
insb
leave
jle
dec
and
inc
sbb
cmp
fsubr
sub
into
push
loop
mov
into
in
rcl
mov
jnp
outsl
je
adcb
push
out
ja
ret
idivl
xchg
inc
out
lret
fsubl
lret
xor
push
adc
fstpt
rolb
push
inc
push
cmc
xchg
lret
data16
jnp
imul
nop
fildl
test
mov
cmpsb
dec
fcoms
mov
je
sbb
imul
xor
jo
dec
jg
sbb
jns
or
push
xchg
mov
cwtl
and
mov
in
or
push
bound
push
les
add
adc
stos
xor
mov
shlb
push
mov
repz
imul
dec
in
fcomp
pop
push
idiv
and
jle
mov
test
pop
aaa
sub
ja
test
pushf
lret
rclb
in
les
mov
insb
ds
inc
pop
popf
mov
sbb
add
inc
inc
mov
iret
int3
cld
inc
and
ficoms
add
into
js
jns
xor
push
fisttps
imul
jg
int
fmul
mov
fdivr
das
jecxz
mov
xlat
mov
pop
mov
rol
or
pop
bound
in
imul
mov
frstor
cmovp
mov
in
fnstcw
enter
cmp
adc
mov
mov
repnz
inc
inc
clc
push
cli
test
push
jecxz
adc
int
mov
mov
lds
sarb
dec
push
clc
sub
lea
aam
loop
test
sbb
mov
sbb
mov
push
add
dec
clc
push
inc
stos
insl
inc
fcomps
sti
pop
les
in
push
fiadds
mov
call
mov
sbb
aas
repnz
sbb
lods
mov
test
pushf
stos
xchg
xchg
push
sbb
push
test
andb
shl
lds
add
xor
adc
cmp
ret
sbb
xchg
mov
mov
jns
or
in
inc
xor
scas
xchg
out
test
push
or
push
mov
dec
jp
sub
mov
test
cltd
loop
fsubl
inc
cmpsb
dec
popa
mov
inc
sahf
cli
inc
add
and
fisubl
xchg
jbe
outsl
rcl
xchg
mov
jge
inc
call
xor
push
mov
test
sti
jb
sub
and
mov
es
in
ljmp
sub
rcr
aam
add
repnz
stos
jb
jnp
out
xlat
xchg
jl
mov
mov
inc
andb
sbb
and
cld
ja
jl
push
leave
pusha
mov
dec
out
mov
dec
mov
xchg
shrb
ss
cmp
sbb
jne
sub
cwtl
xchg
aas
inc
cltd
pop
mov
jle
and
aad
and
mov
or
lahf
repz
sarb
sub
lock
scas
movsb
ja
popa
shr
xchg
es
inc
mov
sub
inc
pop
mov
jp
and
data16
ret
mov
in
add
jne
jns
ljmp
mov
fistpll
lret
cmp
cltd
mov
flds
mov
or
mov
jbe
jge
jmp
xlat
shrl
cmp
and
lahf
js
sar
pop
cmpsl
dec
ja
jne
pop
mov
xchg
pop
cmc
add
push
scas
xchg
sub
fwait
dec
xchg
movsl
popa
cmp
call
xchg
inc
in
aaa
xchg
sbb
sub
mov
and
inc
stos
and
iret
test
jecxz
lret
dec
daa
mov
cmp
adc
push
dec
jns
mov
lods
pop
and
cli
ds
loopne
mul
ret
jp
daa
mov
addr16
dec
push
push
popf
add
xlat
rcrl
pop
idiv
mov
mov
mov
scas
mov
cmpsl
xor
leave
fs
jl
mov
fnsave
push
les
ljmp
imul
pop
sbb
mov
es
pusha
adc
rorb
jl
stos
movsl
inc
adc
push
mov
mov
pop
push
imul
movsl
fimull
dec
mov
fmul
subb
cmpb
jl
sub
je
sbb
mov
xlat
add
or
daa
mov
mov
or
inc
mov
cmp
call
idiv
mov
cmp
ror
insl
jnp
pop
mov
imul
out
cmp
scas
movsl
js
ja
out
push
test
pop
or
inc
rcrb
add
inc
jl
lock
addr16
out
xor
fldl
push
jbe
or
xor
pop
add
xchg
cltd
hlt
leave
test
xor
sbb
push
out
fwait
jb
jg
mov
push
push
out
andb
mov
cltd
cmc
cmp
std
mov
pusha
notl
or
jmp
mov
mov
lret
rclb
test
sub
loopne
cmp
add
ja
inc
and
jb
inc
test
bound
or
lret
mov
mov
imul
ss
mov
dec
add
pop
cmp
jecxz
push
out
in
sarl
mov
xor
mov
les
repnz
fwait
push
or
aad
mov
jle
jnp
push
rclb
iret
data16
fbstp
add
popf
push
xor
cwtl
stos
sahf
push
cmpsb
add
sbb
shr
enter
or
mov
cmp
aad
fwait
jecxz
icebp
lcall
add
popf
test
clc
jae
js
iret
sahf
mov
fs
xor
clc
sub
daa
push
stc
fldl
adcl
popf
or
xchg
scas
ja
hlt
lea
adc
repz
ficoml
push
inc
push
movsl
xchg
and
inc
sub
jb
pop
hlt
je
int
adc
aam
xchg
sbb
sbb
add
dec
push
sub
in
sbb
clc
cmpsl
push
inc
pusha
inc
out
xor
pop
dec
and
adcb
shrb
cmp
mov
push
pop
fidivs
add
gs
sbb
jmp
xor
lret
pop
int3
jmp
enter
add
jae
cwtl
pop
sub
xchg
xchg
test
aam
in
icebp
mov
sbb
ds
into
outsb
xchg
push
xchg
sub
inc
inc
icebp
jnp
shlb
mov
cmp
in
stos
inc
push
aam
filds
or
dec
and
dec
and
mov
mov
mov
mov
out
je
test
int3
xor
mov
push
inc
xchg
mov
fadds
jl
std
dec
dec
cmp
jmp
or
xchg
arpl
les
adc
push
les
addl
jbe
jg
lds
shll
xor
xchg
mov
push
lret
mov
ret
cmp
cs
push
xlat
and
mov
ss
int
pmaddwd
mov
jle
cmp
mov
int3
fsubr
inc
add
dec
push
cmp
inc
fwait
pop
fnsave
jmp
xchg
sub
push
cmp
fistpl
and
scas
aaa
sub
xchg
fmull
lods
mov
jne
call
pslld
movsl
sti
hlt
lahf
mov
into
loope
add
incl
jg
loop
rol
adc
sbb
les
jp
dec
jb
shll
dec
lahf
mov
dec
es
cmp
imul
inc
sub
cmp
jl
mov
add
movsl
lcall
mov
jecxz
mov
pop
lock
shll
repnz
xchg
lods
incl
inc
dec
movsb
xchg
pop
out
or
jbe
cmpsb
cli
push
mov
and
sub
adc
jno
aas
mov
or
cmp
adc
mov
xchg
push
sbb
inc
lret
or
push
and
loopne
sarl
ficompl
sub
into
rol
fs
sarb
es
push
sub
xchg
mov
and
xchg
stos
and
mov
sub
xchg
xor
xorl
or
cwtl
jo
mov
pusha
dec
inc
adc
mov
outsl
das
fld
out
sti
push
mov
imul
xor
cmpsl
jo
sbb
clc
xchg
sub
stos
sub
movups
test
jge
je
aam
stc
nop
push
mov
pop
pop
sub
push
xchg
jns
cmpsb
or
popf
call
push
and
sub
sbb
fucomp
imul
mov
iret
in
ficoml
aam
add
pop
es
int3
arpl
pop
mov
or
cmp
mov
jae
push
sub
dec
pop
or
jg
fistpl
or
adc
je
out
stos
adc
cmp
hlt
sub
in
adc
call
loope
sbb
push
adc
leave
fxtract
xchg
out
out
ret
inc
cmp
mov
movsl
clc
push
icebp
pop
xor
pushf
fcmovb
dec
movsl
mov
je
push
inc
loope
test
lahf
sbb
aas
stc
xor
incb
fucomi
push
or
fsubl
add
imul
imul
jp
stc
push
mov
rcrl
add
push
rorb
loope
mov
fsub
ficoms
int3
xchg
sti
js
sub
inc
repnz
mov
rorl
xor
push
mov
cwtl
daa
or
fsubs
dec
pop
jbe
bound
dec
mov
pop
ret
movsb
cmp
xchg
push
sub
data16
add
loope
ja
nop
and
adc
testl
mov
push
outsb
test
pop
rorb
or
push
in
into
mov
mov
outsb
sub
jge
dec
pop
inc
rcrb
movsb
add
out
rol
inc
test
repz
fistpl
subb
mov
mov
je
js
fisubl
test
iret
out
jnp
popf
xor
bound
in
popf
sbbl
out
mov
ljmp
dec
push
jmp
cs
jo
popa
dec
add
lea
loop
and
cmp
imul
and
and
fldl
jmp
add
aas
push
sub
mov
inc
mov
pop
mov
fisubrl
nop
push
ss
xor
test
dec
das
jp
out
arpl
leave
je
push
push
popf
cmpsb
xchg
adcb
push
lahf
pop
imul
adc
mov
scas
push
sbb
bndldx
inc
pop
rcrl
fs
je
inc
addr16
cltd
push
das
cmp
add
xor
je
fldl
jns
ja
or
fsubp
dec
clc
or
push
jmp
push
sub
cwtl
les
xlat
gs
pop
shl
cmp
mov
pop
imul
dec
mov
add
pop
sub
mov
sbb
sbb
subb
lock
inc
or
and
jg
inc
fbstp
cmp
dec
dec
fnstsw
sbb
sbb
cs
test
pop
xor
jl
fnstenv
stc
dec
dec
cmp
int
popa
pop
test
fwait
jae,pn
dec
mov
daa
pop
or
in
adc
dec
inc
mov
xor
add
mov
out
int
adc
cmp
lea
psllw
xchg
and
pop
sub
pop
mov
mov
aaa
ret
pop
pop
inc
inc
adc
arpl
jp
ret
push
adc
stos
cltd
mov
sbb
rclb
xor
adcl
pop
fnstenv
mov
mov
cmp
pushl
push
out
leave
sub
repnz
movsl
lds
loopne
pop
test
cmp
cmp
inc
lods
movsb
mov
fists
stos
dec
loop
push
and
imul
daa
push
mov
inc
out
jns
in
push
mov
enter
hlt
stos
andl
mov
aam
and
lock
or
mov
jge
lods
test
into
cmpsb
sbb
lods
cmpb
mov
pop
nop
shrl
cltd
ss
cli
xor
mov
push
cltd
push
jl
adc
in
cltd
test
add
cli
int3
test
ficoml
inc
mov
xor
or
jge
shll
sbb
push
sarl
add
adc
fmull
jbe
sub
int3
inc
jo
ljmp
xchg
iret
sub
adc
mov
mov
jbe
orb
orl
sbb
mov
push
dec
adc
xor
push
push
xor
add
call
or
adc
enter
cli
inc
mov
mov
xchg
xchg
mov
mov
cwtl
dec
mov
push
cltd
in
adc
ja
cltd
pushf
call
pop
jmp
and
adc
push
lret
ret
scas
jb
fwait
insl
clc
pop
out
jmp
pop
repz
push
fs
lret
fmul
or
adc
mov
out
dec
sti
in
mov
ret
mov
js
les
xor
loop
pop
sbb
or
loope
and
push
adc
rcr
repz
fisttpl
fdivr
sbbl
lret
xor
inc
adc
fnstcw
adcl
rcrb
cs
imul
scas
clc
adcb
jg
add
dec
dec
jae
test
add
cmp
lock
movsl
or
xor
rorb
adc
sub
or
out
sbb
or
mov
hlt
dec
outsl
je
repz
shrb
dec
xchg
nop
push
mov
fcmovnb
ja
jp
cmp
fwait
dec
rorb
dec
dec
mov
push
dec
fisubs
test
sub
out
popf
mov
add
adc
out
stc
push
lock
bound
lahf
ljmp
jle
mov
mov
in
dec
pop
pop
in
test
xchg
mov
mov
mov
stos
gs
and
ss
jge
repnz
cmp
add
add
ds
xor
imul
lock
push
scas
mov
into
mov
pop
movsb
mov
cmpl
sub
push
lods
add
fidivs
cs
sbb
insb
cwtl
loope
lret
inc
movsl
pop
sbb
icebp
push
and
std
xchg
add
or
dec
dec
sahf
or
sbb
or
lahf
lods
mov
xor
scas
inc
sbb
mov
mov
add
std
rol
js
cmp
jb
mov
mov
sub
in
sub
sbb
test
sbb
xchg
pusha
mull
fdivrs
mov
sbb
jp
xlat
jno
or
add
dec
or
shrl
shl
jp
loope
xchg
xchg
hlt
xor
adc
push
popf
xor
inc
lcall
inc
fcomps
cli
movl
daa
inc
xor
lods
incl
imul
cmpsb
les
in
jae
and
stos
out
jge
sbb
insl
xor
mov
mov
cmp
mov
cmp
pushf
loope
sbb
mov
stos
push
jae
pop
icebp
into
test
mov
jae
xchg
lahf
stos
mov
xchg
mov
lods
push
outsb
adc
pop
cmpsl
scas
inc
outsl
sbb
int
cmp
hlt
movsb
mov
jnp
loopne
dec
movsl
dec
stos
ja
and
sub
inc
jmp
ja
nop
fists
shrb
shll
mov
adc
pop
ja
pusha
cmp
sub
add
pop
daa
cs
xchg
inc
xor
das
ljmp
xor
push
or
scas
data16
outsl
movsb
inc
mov
jne
adc
push
cmp
or
cs
shrl
push
fsubrs
push
push
jns
inc
jp
push
push
cmp
jmp
int3
xor
mov
das
inc
inc
adc
jl
inc
xor
pop
mov
pop
into
sbb
push
repnz
jl
add
out
pminsw
cmpsl
push
sub
cmp
mov
mov
lods
rcrb
dec
sub
test
pop
mov
adc
cmpl
and
push
addl
xor
xorl
add
add
jae
pop
mov
mov
pop
sti
fwait
jg
out
add
or
cmc
push
cwtl
jg
and
out
popa
loop
lods
mov
adc
fwait
jb
hlt
idivl
or
cmp
arpl
inc
clc
and
mov
leave
mov
jg
add
movsb
dec
arpl
mov
and
out
ret
cmp
inc
adc
dec
pop
ja
and
jbe
inc
xorb
sbb
mov
test
inc
pop
inc
sahf
add
sub
xor
mov
adc
pop
out
xchg
jbe
into
cwtl
or
in
push
cld
push
mov
mov
bound
lret
inc
xchg
xor
push
gs
imul
popa
aas
subl
or
data16
lods
out
push
nop
add
imul
mov
out
and
and
ficoml
mov
and
push
or
aaa
mov
ret
clc
loop
loop
mov
outsb
rclb
pop
jg
aaa
clc
cmp
push
or
fisttpll
in
lods
lcall
xor
xchg
sub
ds
mov
push
xor
mov
push
in
cmp
cmpsb
fsts
xor
xor
cmpb
mov
pop
mov
jl
inc
cs
add
cmp
mov
push
icebp
sub
jp
mov
insb
and
incl
pop
cmpsb
cmp
mov
sarb
shrl
icebp
jg
fldlg2
xchg
mov
jmp
mov
or
mov
sahf
lods
cmp
pop
cmc
cmp
fwait
add
scas
scas
fimull
xor
xlat
mov
rol
imulb
jb
cmc
or
ret
addr16
das
lret
out
xchg
sub
into
xchg
pop
xor
mov
pop
fcmovb
sub
mov
outsb
pushl
or
add
in
out
inc
cmp
je
stos
jne
mov
hlt
sbb
dec
outsl
push
insb
pop
xchg
add
scas
std
lcall
in
stos
mov
xor
xlat
cmpsl
dec
aam
sti
fwait
ret
ret
outsb
lock
mov
outsl
daa
jle
xchg
pop
or
jp
xchg
xchg
cmp
add
mov
lcall
jmp
push
aas
aaa
add
sub
push
test
xchg
cmp
inc
mov
pop
clc
fnstcw
add
lock
int
cmp
subb
jmp
fidivrs
add
imul
sbb
fucomip
xor
ja
push
push
movsl
inc
js
je
notl
sub
push
push
add
incl
fucomi
and
lods
jge
inc
cwtl
shl
mov
int
test
test
mov
fisubrs
push
jg
mov
inc
fadds
rcrl
icebp
or
iret
nop
std
xchg
les
mov
sar
ret
and
or
rorb
mov
lds
mov
cs
adc
inc
outsl
imul
cmp
jae
daa
and
clc
movsl
js
sti
jg
fnstsw
stc
in
inc
aam
es
push
popa
mov
scas
add
js
pop
mov
cmp
mov
jnp
stos
xor
sar
xor
cmpsl
sub
fcomp
out
popa
mov
jle
xchg
jg
lahf
sub
jb
lea
pop
into
cmp
cs
jle
mov
push
lock
dec
out
rcrb
loope
xor
push
ljmp
mov
mov
dec
adc
ja
xchg
pusha
rcrb
sub
lea
imulb
add
call
stc
inc
lods
pushf
idivl
xchg
das
cmp
sbb
sbb
fildll
sti
stos
cwtl
add
lods
xor
loop
ret
jmp
outsb
dec
and
jae
pop
jecxz
cwtl
mov
loope
add
fs
mov
fcmovnb
cmp
stos
test
movb
cmp
notb
jns
lods
les
jnp
cmp
cmp
int
sub
mov
rol
inc
enter
fs
sahf
fstpl
mov
jne
sbb
rol
jnp
frstor
fmul
fmuls
loopne
scas
fbld
int
arpl
inc
fiaddl
mov
mov
fcomps
insb
xor
clc
add
sarl
lret
es
xchg
inc
push
xlat
fs
add
sub
retw
sbb
leave
sahf
or
and
mov
mov
or
mov
clc
add
cmp
test
sbb
lahf
jbe
stc
or
pushf
lea
mov
mov
idivb
rolb
add
loopne
test
add
in
sbb
or
cmp
in
shrb
lds
sbbl
inc
lahf
push
sarb
mov
filds
pop
lock
and
subl
inc
xlat
sti
rolb
xor
ss
mov
pop
inc
insb
jle
adc
into
insb
jl,pt
lahf
pop
xchg
push
and
sahf
dec
cld
xor
lods
jne
pushf
cmpsb
ret
inc
lcall
inc
gs
mov
mov
xchg
insl
scas
es
hlt
mov
adc
push
sub
jg
js
cmc
lods
mov
rcl
and
pop
subb
or
shl
imulb
sub
pop
mov
js
cmpsl
mov
pop
insl
loopne
jno
ss
push
aas
or
lock
test
in
std
repz
repnz
cmp
jp
cmp
jecxz
add
jns
cmp
and
je
je
scas
and
lods
fisubrl
lahf
add
xchg
mov
lods
adc
outsl
jnp
les
jp
out
fmuls
scas
push
movsl
fidivl
xor
das
push
clc
popl
data16
mov
mov
gs
jb
data16
cmpsl
out
mov
movsb
and
add
sarl
js
popf
jg
pop
int
popa
xchg
add
popf
xor
sub
jge
sub
sarl
sub
push
je,pt
shlb
loop
sub
int3
pop
in
pop
pop
push
and
iret
pop
push
in
cmp
mov
loopne
fidivs
sub
xor
mov
sahf
mov
xchg
test
adc
mov
and
sti
pop
sub
xor
or
lret
fldcw
pop
clc
adc
cs
push
insl
pop
movsl
adc
adc
test
sub
jmp
push
clc
repz
add
cltd
or
xchg
stos
in
aaa
ret
pop
sbb
inc
lahf
cmp
cli
add
mov
jmp
inc
aas
mov
xchg
in
mov
dec
dec
add
pushf
cli
mov
mov
sub
popa
jl
addr16
mov
mov
push
addr16
dec
shr
and
cmp
mov
jle
mov
shlb
cmp
mov
jge
lret
jl
gs
and
pinsrw
mov
mov
insl
jnp
mov
xchg
sub
add
je
add
pop
shll
repz
popf
pop
push
jb
mov
adcb
icebp
cmp
push
fstp
mov
in
push
pop
les
mov
shr
lcall
cmpsl
mov
jae
xchg
add
scas
pop
lods
xchg
movsb
xor
or
pop
enter
cmp
cwtl
pop
nop
xor
mov
inc
pop
cmp
jmp
adc
sbb
xchg
cmp
arpl
pop
mov
fcmovnbe
cmp
mov
xchg
popf
int
or
aas
dec
add
stc
adc
pushf
push
aas
les
sbb
mov
push
mov
push
xor
push
mov
outsl
mov
loope
jb
pop
cmp
mov
or
xor
rcl
mov
lcall
or
movsl
mov
cmc
jmp
cs
inc
xor
dec
stos
cli
loop
out
scas
xchg
lds
dec
jecxz
mov
in
cmp
push
cmp
sbb
ja
xchg
imul
inc
rcr
mov
sub
cltd
movsl
and
jb
cmp
push
jg
or
insb
imul
outsl
inc
aas
insb
fiadds
fcompl
js
rcrl
jle
addr16
push
jg
push
mov
mov
jge
movaps
jbe
das
pop
outsb
jl
lds
lds
out
out
testl
mov
dec
repnz
xor
mov
lock
arpl
inc
add
mov
int
daa
inc
lret
aad
icebp
fildll
out
xchg
and
lcall
inc
flds
add
cmp
lcall
filds
mov
lret
add
stos
push
test
xor
test
aas
das
push
subl
sub
xchg
sub
pop
outsb
aam
mov
mov
into
cwtl
sti
fnstsw
loope
push
inc
cwtl
ds
test
in
pusha
lahf
inc
xlat
or
mov
or
arpl
outsb
add
or
divl
sar
push
mov
scas
loope
loope
das
adc
push
jp
loope
bound
mov
mov
jns
dec
in
dec
lods
ljmp
es
pop
mov
mov
sbb
xchg
rolb
mov
imull
cmp
lret
bound
rol
int
mov
pop
sub
mov
pop
scas
mov
fcoms
outsl
xor
mov
sub
lret
push
xchg
repz
cmp
push
out
loope
inc
mov
inc
popf
sbb
fsubrl
stc
ja
ror
sbb
dec
icebp
mov
fnstcw
cltd
pop
dec
xor
jmp
aad
xchg
cli
mov
mov
jae
pop
sub
lahf
addl
pop
mov
pop
push
push
in
and
xchg
pop
popf
jnp
gs
sub
loope
fsubr
sub
inc
push
dec
fwait
dec
mov
sub
insl
inc
sub
jb
mov
mov
pop
xchg
mov
cli
rolb
data16
rclb
es
inc
sub
fs
inc
push
loopne
push
mov
xor
loope
stc
push
inc
arpl
daa
in
test
pushf
cmp
lea
repnz
or
insl
xchg
cs
inc
inc
insb
jl
fisubrs
aad
sub
jg
inc
imul
ss
lea
adc
xchg
aaa
sbb
jmp
cmp
mov
pop
xchg
imul
les
jns
outsb
dec
pusha
xchg
sbb
xor
lea
movsb
pop
stos
xchg
cmp
adc
xchg
add
inc
dec
jo
sahf
stos
xchg
cmp
jbe
xchg
fidivl
inc
push
lock
cmpsl
ja
or
inc
jmp
pusha
pop
jge
fists
inc
aas
and
rcll
sbb
cmp
jns
add
xor
jge
ret
outsl
lret
xor
stos
test
mov
sub
ja
popa
mov
push
xchg
daa
cmp
stc
and
fildl
push
sub
sbb
push
xor
adc
cmpsl
push
adc
repnz
iret
fcomip
sub
cmpsl
fcoms
test
inc
adc
pop
inc
add
fsubrl
push
nop
mov
push
idivb
enter
paddb
mov
cmp
push
loop
mov
adc
inc
mov
gs
push
dec
mov
stos
sbb
arpl
sub
inc
push
aam
pusha
push
mov
sbbb
jno
adc
jb
dec
out
push
and
fidivs
push
inc
dec
arpl
hlt
aaa
fbstp
rdtsc
mov
je
adc
outsl
cwtl
fimull
outsb
out
mov
push
testl
ror
cli
dec
mov
dec
xchg
movsb
add
in
clc
out
push
pop
popf
aam
into
sub
out
test
ja
sub
inc
xchg
mov
ja
outsb
and
cmp
ja
call
add
and
hlt
orl
push
inc
pop
adc
xchg
lahf
cmp
out
jnp
lods
leave
movsl
mov
dec
arpl
push
stc
pop
lret
sbb
js
pop
cmp
pop
adc
imul
cwtl
out
xchg
sbb
and
shl
cmp
fildl
xor
in
adc
enter
lcall
call
cmp
mov
roll
dec
insl
daa
out
jmp
lods
adc
nop
inc
or
imul
aas
push
sub
sbb
sub
repz
ret
cmpsl
imul
add
xor
gs
rorb
jp
in
rcrb
aam
std
push
mov
sub
pop
sbb
imul
in
inc
cwtl
out
cwtl
popf
and
jmp
in
push
icebp
adc
sub
sub
jae
fldl
sbb
push
and
vmwrite
shr
mov
adc
movsl
mov
divb
jo
pop
pop
cwtl
or
or
movzbl
out
or
pop
mov
xchg
pop
sub
mov
or
push
repz
dec
aam
xlat
cmp
jb
sub
xlat
cmpsl
ret
or
sub
sti
mov
xlat
orl
mov
pop
aad
mov
hlt
mov
mov
imul
cmp
lods
add
push
xchg
das
imul
lret
add
negl
pop
loop
das
addr16
jns
fisubs
lcall
stc
mov
dec
out
ljmp
repnz
outsb
fwait
int
cmp
pop
jg
ret
stos
orb
repnz
jns
or
cmc
pushf
mov
jae
mov
push
imul
xor
xchg
cmc
mov
clc
jp
cmp
xchg
cmp
mov
or
std
adc
psubsb
jnp
adc
xor
cmc
aas
and
or
inc
stos
ljmp
mov
ja
jae
mov
xlat
sub
add
pushf
ret
pop
out
adc
mov
pop
lock
jp
sub
movsb
xor
or
sbb
add
pop
aad
mov
push
jmp
adcl
cmp
xchg
cmpsl
push
rorl
enter
out
pop
and
cmp
push
call
loopne
cltd
push
mov
cli
sbb
sub
jbe
jb
fisttpll
je
pop
jns
xrelease
push
pop
xlat
mov
lcall
outsb
sahf
cwtl
or
mov
dec
xchg
lods
lret
or
pop
cmc
aad
xchg
sub
repz
rcrl
not
inc
xchg
mov
addb
aam
fmulp
add
or
mov
cmp
addr16
insb
dec
mov
lret
shrl
cltd
aam
movsb
cmp
lahf
adc
loope
stos
aam
push
sub
pop
popf
cmp
xchg
lea
pop
dec
daa
dec
push
daa
lahf
jecxz
and
mov
push
xchg
ja
in
sbb
add
addb
adc
icebp
sub
jno
arpl
addr16
push
add
stc
or
inc
daa
sar
or
lock
stos
fnsave
and
enter
sbb
iret
push
out
cmp
fbld
rcrb
shr
mov
fidivl
int
pop
mov
lahf
arpl
xchg
dec
rcrb
ret
jnp
or
sub
addr16
jnp
cmpsl
jl
faddl
xchg
sbb
add
test
popa
xor
test
xchg
ret
int3
rol
repnz
dec
mov
add
call
fsubs
shrl
push
clc
test
arpl
jl
popf
sub
sub
lcall
stos
mov
push
popf
jb
xor
mov
fiadds
sbb
xor
inc
lea
lods
add
jb
xlat
shl
stos
adc
mov
xor
adc
insb
adc
movsb
xor
into
cltd
mov
mov
cmpsl
push
lcall
adc
mov
pop
stc
nop
iret
negl
pop
daa
out
pop
sub
xchg
push
ficoml
sub
dec
mov
dec
pop
sub
fisttpl
repnz
call
scas
dec
mov
sub
mov
cmpsl
scas
scas
fsubp
enter
fisubl
stos
cmp
xchg
mov
xor
xor
fdivrs
aas
dec
jo
xor
loope
fstl
mov
push
dec
xchg
ja
dec
jl
jnp
incl
cltd
add
xor
pop
sub
bound
lret
ljmp
mov
das
or
xchg
jnp
pop
out
inc
push
mov
xor
jbe
repnz
insl
negb
push
inc
and
jl
mov
gs
in
xchg
jne
jbe
xor
stos
ljmp
aas
pop
cmp
cmp
fldt
ds
mov
fdivrp
in
mov
inc
push
out
cltd
xor
je
int
mov
mov
jl
popf
mov
addr16
shrl
out
xchg
add
ja
dec
xchg
bound
mov
popf
and
mov
in
mov
mov
scas
mov
mov
fstpt
push
push
jb
stos
dec
fnsave
and
mov
adc
scas
pop
or
add
cs
dec
mov
mov
pop
hlt
adc
mov
jle
bnd
jb
or
adcl
xchg
mov
rcl
sbb
or
pusha
mov
sbb
pop
test
mov
out
sbb
xchg
pop
sbb
js
jne
xor
ret
inc
xchg
dec
ljmp
rcrl
pop
rcl
and
test
int
push
xor
fists
movsl
fnsave
cs
adc
mov
ss
addr16
rcrl
pop
mov
cld
dec
jnp
sub
or
dec
xchg
loope
and
cld
mov
sbb
adc
xchg
cmp
add
out
sub
mov
xchg
jmp
test
mulb
repnz
mov
aas
push
pop
testb
add
xor
jmp
ret
mov
xchg
int
sub
mov
jp,pn
jnp
mov
add
jae
int
insl
jbe
cmc
sub
mov
xor
mov
push
sub
insb
or
popf
cli
cmp
push
mov
stos
cld
sub
dec
xchg
xlat
dec
mov
gs
mov
cwtl
decb
jb
inc
or
repnz
shrl
dec
pop
and
or
loopne
sbb
inc
aam
shl
scas
dec
sar
push
mov
out
lods
sub
xor
loop
xchg
pop
fildll
lret
data16
std
ret
jg
sub
xor
test
inc
imul
inc
out
or
sbb
ds
and
sbb
adc
das
push
mov
add
push
lods
mov
dec
cli
add
mov
add
mov
adc
inc
mov
jg
int
mov
int
and
mov
pop
mov
push
gs
popa
faddl
loop
adc
daa
pop
rolb
sub
inc
pop
and
adc
or
test
insb
mulb
add
aas
or
aam
sbb
dec
pushf
fistps
sbb
idivb
adc
rorl
bound
nop
pop
pop
dec
jo
sub
mov
popf
adc
jmp
es
push
popf
xlat
dec
in
cmp
adc
mov
movsb
movsb
leave
jge
icebp
dec
ret
rol
pop
mov
imul
lcall
and
scas
and
adc
jle
push
jnp
dec
inc
popa
ljmp
add
int3
jae
out
jns
bound
pushf
xchg
andl
imul
mov
or
and
enter
dec
cmp
clc
fsubrs
cmp
or
orb
and
lret
sbb
mov
mov
sbb
je
fsubs
dec
mov
mov
push
mov
pusha
xchg
das
in
jp
mov
jg
jae
rclb
mov
mov
imul
pusha
mov
or
jl
add
fdivrl
fs
jb
adc
lahf
dec
jmp
and
jmp
insb
ret
cmc
xchg
xchg
pop
lcall
in
cltd
cmpsl
scas
cli
sub
pusha
in
orl
jno
aad
xlat
xlat
or
scas
xor
das
cmp
lods
inc
loop
mov
lret
push
aas
and
cmp
xorl
xor
rcrb
pop
enter
push
adc
fcompl
int
lcall
jb
sahf
xchg
sub
jecxz
mov
add
xchg
add
xchg
call
aaa
int
add
cs
and
ret
fistps
mov
pop
inc
lock
leave
jecxz
and
arpl
jle
dec
push
test
pushf
int3
outsl
push
mov
in
xchg
data16
std
dec
sbb
sub
push
scas
mov
mov
ja
pop
cmp
ret
mov
dec
out
xchg
stos
rol
dec
cltd
gs
scas
ret
out
scas
stos
dec
mov
or
fucomip
mov
orl
inc
jecxz
into
add
fs
shlb
inc
pop
in
cmpsb
sub
cltd
push
push
mov
dec
gs
das
nop
cmp
xchg
and
push
repnz
jb
repz
dec
jp
into
add
loopne
lods
ljmp
hlt
imul
aaa
xchg
jo
push
jnp
sbb
lock
ja
jp
pop
jmp
adc
in
push
inc
fwait
shrl
scas
ja
cmpsb
xchg
icebp
push
jb
loopne
jle
scas
push
fs
stos
arpl
data16
in
push
rclb
push
pop
sub
aam
pop
jmp
xorl
dec
pop
sbb
dec
xor
repz
add
and
in
push
mov
cmp
js
ds
inc
mov
lcall
cltd
pop
into
sub
or
adc
sahf
lea
fcmove
aas
pop
call
xor
movups
ds
out
scas
jmp
ja
popf
xor
ss
addr16
jge
mov
enter
dec
bound
addr16
ljmp
insb
pop
das
sbb
cmpsb
xchg
dec
rcl
cld
aad
outsb
cmp
mov
fucomp
mov
mov
out
add
aas
sahf
and
iret
jae
pushf
cli
mov
mov
fldenv
and
enter
jmp
dec
jne
add
cld
jnp
popf
jp
loop
sbb
xchg
xchg
int
lcall
dec
mov
insl
sub
test
lock
test
loop
sbbb
push
leave
in
insl
xlat
fildll
scas
dec
data16
inc
inc
dec
inc
lcall
push
inc
inc
out
rcrb
shrl
das
into
jmp
inc
shlb
sub
mov
stos
sbb
pushf
xor
cmp
lods
dec
jbe
push
mov
int3
push
sub
jle
lahf
inc
sbb
mov
jmp
clc
sbb
adc
jp
lock
stc
add
cmpsb
sti
or
jae
sub
clc
fbld
jecxz
iret
in
in
imul
pop
ds
fbstp
das
dec
lcall
add
divl
cltd
sub
jmp
adc
lret
fiaddl
xor
aam
push
pop
push
inc
push
pop
jno
mov
xor
in
inc
dec
sub
fwait
shlb
inc
sub
lret
test
sub
jle
sub
cmp
in
out
and
lcall
movsl
lods
xor
aas
cmpsb
cmp
shl
test
int
xchg
push
test
jmp
sbb
sbb
hlt
mov
push
add
pop
test
xor
negb
xchg
jmp
xchg
dec
in
dec
pop
push
mov
iret
and
mov
push
dec
pop
fldenv
les
adc
fwait
repz
faddl
push
xchg
ret
jge
hlt
mov
dec
sbb
sub
pop
mov
pop
push
and
fwait
cmp
icebp
cmp
mov
fidivs
push
pop
orl
inc
pop
shll
sub
pop
mov
mov
mov
gs
sbb
outsb
push
je,pn
add
inc
loop
in
aam
inc
fwait
or
fnstenv
popa
into
movsb
mov
int3
ds
xchg
sub
lea
jmp
in
popf
in
pop
add
push
pop
lcall
ss
inc
sub
adc
mov
icebp
mov
cmpsb
sub
fdiv
xchg
jno
cmc
push
movsl
in
inc
testl
pop
out
mov
rcrl
add
mov
inc
dec
cmp
mov
jae
pop
rorl
xchg
fldcw
push
mov
scas
adc
xchg
push
fdivrs
jne
or
aam
jo
mov
pusha
cmp
jmp
arpl
or
dec
shl
pop
hlt
out
cmp
cmp
sub
imul
xchg
enter
mov
ror
ja
sub
push
xchg
cmp
xchg
stos
xlat
int
hlt
jbe
lods
cmpsl
aad
jp
jb
xchg
mov
es
jo
mov
xor
cmp
repz
fidivs
imul
push
cmova
aaa
pop
pop
out
outsb
or
lea
testl
jl
pop
mov
fldenv
repz
hlt
adc
jg
in
cmp
sbb
xchg
push
imul
sbb
loope
pop
inc
pushl
int3
fdivrp
movsb
push
mov
jp
inc
dec
inc
cmpsb
pop
scas
std
push
dec
dec
xor
cs
out
push
mov
pop
or
mov
push
sbb
push
push
out
sub
pop
sbb
stos
xchg
mov
fldcw
rorb
mov
les
fldenv
or
and
dec
test
push
aad
pop
sar
shll
dec
add
mov
push
and
mov
xchg
xchg
sub
sbb
push
std
not
cli
push
and
push
jbe
lds
pop
sub
mov
fisttpl
fists
pop
idivb
cs
add
jae
push
sub
repnz
into
call
imul
and
cmp
lret
push
sbb
faddl
rclb
test
fnstenv
cmpsb
xlat
insb
add
jnp
cltd
es
pop
outsb
sub
clc
test
fldenv
aad
cmp
in
lret
xlat
out
push
sar
sub
jb
cmpsl
repnz
scas
fsubrs
inc
jno
jbe
and
fistps
fdivr
inc
lret
lret
bound
xchg
hlt
mov
out
xchg
jg
ljmp
push
lea
out
loope
rcll
or
or
sub
dec
xchg
insl
lea
or
hlt
lret
stc
adc
dec
or
xchg
imul
out
cwtl
in
mov
xchg
test
out
mov
fimuls
mov
sub
mov
ret
repz
mov
add
ret
movsl
jg
inc
jecxz
pop
jg
ds
rclb
xor
add
js
outsl
fmuls
mov
or
add
mov
and
es
mov
mov
mov
out
stc
xor
lcall
decb
std
xchg
lcall
mov
ss
mov
xor
hlt
xchg
insl
push
mov
cmpb
xchg
mov
iret
fsubrl
cli
push
mov
sbb
add
lcall
stc
cmp
out
lock
mov
xchg
sub
push
in
pusha
push
out
jle
inc
jp
jae
mov
scas
or
les
sub
xor
inc
fmuls
push
jb
dec
pop
mov
cwtl
outsl
adc
and
imul
test
mov
pop
stc
jbe
mov
sbb
xor
cld
out
adc
cmp
movsl
jp
mov
xor
jmp
outsl
insl
xchg
ss
mov
in
movsb
lret
pop
fstps
jae
into
cli
loopne
fucomp
out
inc
sub
sub
pop
shlb
divb
push
jmp
and
pop
push
fs
mov
daa
psubsw
push
mov
out
xor
sti
cmp
lock
int3
xor
outsl
std
push
fwait
or
lock
xchg
out
icebp
sub
mov
fildl
addr16
leave
pop
jecxz
divb
jae
adc
bound
scas
cmpsl
pmullw
insl
movsb
jp
mov
cmp
aad
lahf
loop
dec
adc
adc
mov
lods
pop
scas
in
sbb
pop
fdivl
cmc
xlat
add
pop
outsb
enter
jbe
icebp
cmpsb
orl
dec
cmp
insl
loop
insb
adc
iret
push
xor
shrb
sbb
adc
repz
ljmp
lret
sub
shll
mov
lret
push
jge
or
xchg
pop
xchg
cs
mov
dec
aad
call
or
icebp
push
testl
clc
adc
pop
mov
fcompl
mov
sbb
mov
dec
mov
pop
mov
ja
pop
pop
imul
fnsave
mov
shrb
dec
and
mov
jne
or
cltd
lret
fs
outsb
xor
sbb
aaa
or
mov
add
jmp
lcall
mov
xor
adc
pop
push
mov
fs
push
out
jg
xor
mov
mov
adc
sarl
mov
mov
push
testb
addr16
xchg
pop
aam
lret
ret
bnd
leave
xor
fidivrl
adc
jmp
les
adc
arpl
popa
cmp
leave
test
cli
inc
shl
scas
mov
pop
ja
push
mov
ljmp
and
xchg
cld
mov
lods
jae
mov
sbb
scas
ret
lret
mov
dec
mov
shll
pop
out
test
or
cmp
cwtl
das
xor
xor
mov
sub
pop
sbb
sti
xlat
mov
aas
xchg
adc
inc
xchg
adc
aam
push
mov
xlat
mov
push
and
aad
test
xchg
mov
dec
mov
dec
or
out
dec
xchg
adc
mov
jmp
add
repz
inc
cltd
push
lods
lret
subb
jle
push
data16
xor
stc
or
loope
xor
icebp
out
fld
xchg
daa
add
xchg
je
enter
xlat
out
lret
push
push
mov
push
cmp
ljmp
stos
push
adc
sbb
xor
sbb
outsl
je
fidivrs
jae
hlt
dec
and
cmpsl
nop
xchg
dec
ljmp
shlb
add
cmp
test
inc
or
push
or
ljmp
push
popa
add
pop
in
lcall
test
mov
pop
in
add
imul
xchg
pop
enter
inc
mov
pop
mov
jo
push
ss
ja
data16
sub
cltd
pop
aas
data16
cwtl
pop
and
mov
daa
or
xchg
or
mov
push
jo
std
mov
scas
sar
repz
fsubrs
ja
js
adc
dec
test
lcall
and
mov
cmpl
push
sbb
xchg
arpl
stc
xor
cmpb
mov
cli
lods
mov
jge
push
stos
dec
xchg
mov
popa
sbb
mov
push
xchg
out
pop
cmp
int
or
decb
inc
aas
fdivrl
aaa
pop
notl
das
or
and
mov
pop
je
inc
divl
faddl
mov
push
push
fildl
push
out
adc
jnp
cwtl
cmc
arpl
inc
aad
clc
jle
es
cli
xchg
dec
mov
sbb
in
outsb
std
adc
mov
push
push
add
and
imul
insl
hlt
push
adc
mov
cmp
mov
daa
lcall
hlt
adc
jae
data16
jl
iret
sub
lods
inc
xor
and
lret
imul
pop
sbb
loopne
cmp
stos
sbb
out
cmp
filds
push
inc
cmp
inc
aam
jbe
arpl
shlb
jp
lret
shrl
ds
push
push
pusha
dec
pop
xchg
fidivl
cmpsl
test
outsb
jmp
aaa
cmc
mov
cmpsl
cmpsb
cmp
sub
inc
xlat
pusha
jbe
xor
pop
mov
jge
jno
xchg
icebp
fnsave
jbe
mov
cli
lock
sub
pop
outsb
test
into
push
and
xor
dec
xchg
cli
call
mov
push
mov
push
xchg
das
mov
aaa
inc
shl
pop
jp
pop
push
or
mov
sbb
femms
xchg
push
pushf
iret
dec
loop
mov
push
inc
int3
pop
mov
inc
fwait
aad
push
enter
mov
dec
lea
dec
mov
scas
popf
fcompp
pop
fiaddl
scas
test
jno
in
pop
mov
lret
std
sub
and
test
add
sbb
arpl
shl
or
repz
jo
add
in
inc
out
test
outsl
in
fwait
xlat
ljmp
add
shlb
scas
ja
test
stos
add
stos
and
xchg
push
and
arpl
rcrb
cld
inc
mov
sub
cmp
fists
lds
insl
fdivl
pusha
cld
cmp
cs
cmp
add
arpl
dec
dec
daa
mov
dec
pop
int
and
enter
jle
push
pop
movsl
cmp
dec
fs
cmp
lret
xchg
fdivs
lods
mov
ja
loope
jge
mov
mov
mov
dec
test
mov
mov
push
sub
fadds
or
jns
cmp
push
lcall
sub
out
fs
pop
or
mov
and
fsubr
pop
jmp
inc
mov
push
outsb
leave
test
inc
push
out
sbb
mov
jmp
cmp
jg
int3
cs
xchg
add
cli
test
fisubrs
inc
jecxz
mov
imul
fidivrs
insl
jge
fwait
std
xchg
mov
mov
int3
push
mov
push
cs
out
cmpsl
mov
adc
pop
mov
add
mov
xchg
test
in
xor
pop
adc
pop
and
pop
loop
outsl
or
mov
sahf
or
adc
adcl
mov
gs
jp
fcomi
repz
xchg
dec
sbb
neg
sbb
push
les
lds
ret
ret
pop
or
les
scas
push
cmp
mov
pusha
movntq
push
mov
mov
fcmovnb
imul
add
jno
imul
jo
lds
shl
lods
iret
sub
push
outsl
cwtl
xchg
sub
dec
call
xchg
add
outsb
sbb
dec
dec
stos
movsb
cmp
iret
addr16
dec
mov
jge
mov
or
movsb
dec
and
pop
iret
and
push
test
mov
mov
xchg
or
xchg
arpl
loope
sub
rcpps
jl
inc
out
mov
out
jno
test
dec
adc
cmpsb
pop
repnz
in
adc
xchg
out
cmpsl
xor
cmc
dec
aas
push
in
lods
jmp
out
arpl
cmp
dec
imul
add
xor
cld
imul
dec
cltd
jmp
push
inc
mov
arpl
xchg
inc
cltd
es
jo
and
pop
mov
testb
rorb
ss
lret
jae
into
sbb
sbb
mov
mov
xchg
xchg
or
mov
or
cmp
fsubr
repz
aad
stos
jge
dec
pop
cmp
mov
ja
pop
dec
dec
testl
movsl
mov
shll
stos
stos
sarl
dec
push
lock
ret
incl
mov
or
int
pop
xor
pusha
outsb
iret
insl
mov
jg
xchg
cltd
insl
jge
je
stos
ds
sahf
push
and
imul
cmp
push
into
cmpl
push
cmpsb
dec
push
mov
shr
mov
mov
push
mov
fimull
iret
adcb
loopne
xor
cwtl
fs
stos
mov
ret
lcall
fiaddl
fiaddl
push
daa
cmp
addr16
mov
push
lret
mov
mov
mov
into
fdiv
in
jne
cltd
lods
jne
test
jae
jg
sti
jge
ljmp
sbb
jno
loopne
sti
adc
pop
scas
cmpb
stos
or
sub
cld
push
mov
addr16
rcl
rcrl
mov
enter
rorb
je
adc
and
push
outsl
and
and
int3
sbb
add
repz
mov
arpl
popa
lods
sub
dec
shlb
mov
ss
fisubs
push
mov
cmp
shrl
and
adc
inc
fs
and
and
sbb
rcr
cli
imul
ljmp
cltd
sbb
mov
das
add
mov
sub
mov
jbe
jnp
jns
cmpsl
ds
lcall
mov
pop
arpl
subb
mov
pop
lds
lret
xchg
lds
jp
insb
mov
inc
push
std
mov
jmp
movsb
dec
cmp
movsl
vshufps
lds
pop
js
cmp
dec
mov
cmp
lods
aam
in
iret
call
inc
sbb
stc
ret
repz
fistps
fdivp
fstl
int3
arpl
cmpb
adc
mov
cmp
add
pop
or
imul
jle
orl
xchg
adc
ror
jns
pop
inc
insb
lcall
cltd
in
or
cltd
jecxz
cwtl
mov
sub
lahf
mov
jbe
mov
mov
and
imul
lods
cmc
in
jns
dec
lods
inc
jl
test
jle
fwait
mov
jnp
xor
mov
mov
fisttpll
push
fwait
stos
fildl
mov
push
outsl
addl
dec
mov
and
popf
inc
shll
cwtl
cli
mov
pop
jo
push
sahf
push
xchg
add
mov
cmp
test
out
test
aaa
jle
sbb
pop
jl
and
mov
fsts
adc
push
cmp
test
pushl
loop
xor
xor
push
hlt
mov
in
sbb
lods
jmp
dec
add
repz
fsubrs
jne
call
enter
fs
mov
xor
push
shlb
push
out
dec
or
lods
cwtl
icebp
fiadds
cltd
mov
adc
fistps
jmp
mov
mov
add
rclb
jo
jnp
fdivp
push
pusha
inc
aas
xchg
inc
ret
jbe
test
sub
addr16
btr
cmp
dec
sub
xor
pop
icebp
and
fisubrl
in
idivl
lock
testb
mov
dec
sbbl
dec
pop
mov
cmpsb
aad
add
inc
les
leave
lcall
jl
xchg
mov
es
mov
mov
notb
sub
xchg
cmp
mov
pop
xchg
jp
fidivs
cmp
aas
scas
jb
or
daa
adc
and
stc
fsincos
jbe
xchg
jne
pop
push
loope
xchg
enter
inc
dec
lahf
jge
cmc
push
jae
add
psubsw
xor
xchg
mov
enter
inc
jnp
rcll
fcomip
popf
cmpsl
repz
jg
mov
push
jmp
loope
ss
out
dec
daa
fdivr
or
or
jmp
xchg
sub
call
mov
fimull
mov
lods
sti
test
or
push
mov
push
xchg
test
mov
in
mov
dec
shrb
xlat
fucomp
fstps
cmpl
ds
inc
cwtl
hlt
cmp
scas
sub
pop
fmul
fdivl
cmpsb
inc
adc
sarl
sbb
mov
lcall
dec
lea
lahf
xchg
pop
leave
mov
lods
jg
nop
das
inc
adc
xor
sbb
jnp
adc
pop
bound
pop
cmp
adc
into
fldt
jg
cmp
pop
pop
jge
add
int3
push
ljmp
inc
inc
pusha
pop
adc
mov
or
jae
xchg
popf
dec
sbb
push
sbb
mov
mov
or
sub
push
and
subb
cmp
mov
ret
add
or
push
dec
lock
push
popf
jg
aaa
push
pop
sub
lods
lods
jo
push
addr16
add
jge
pop
in
dec
in
outsl
cmp
dec
xlat
in
cltd
xchg
or
mov
cltd
out
sti
xchg
rcrb
jg
les
fdivl
pop
rcll
arpl
stos
in
adcl
adc
mov
add
or
fwait
xor
inc
push
loopne
call
cmp
leave
add
jb
cmp
push
mov
outsb
mov
out
xchg
xor
aaa
out
sub
inc
fwait
dec
pop
mov
mov
cmp
xchg
xor
mov
sahf
mov
jno
sbb
imul
stos
mov
mov
ja
fstpt
mov
fidivrl
roll
mov
cmp
pop
ds
cltd
sub
pop
sarb
cmp
jmp
or
arpl
sub
and
xchg
lds
mov
fcmovb
into
jb
adc
sbbb
dec
cmpsl
inc
mov
ss
add
pop
hlt
pushf
push
dec
dec
ror
pop
and
xchg
adc
stos
frstor
das
dec
mov
out
sbb
ds
jbe
push
cltd
insb
sbb
ret
cltd
cmp
push
xchg
mov
mov
sbb
or
mov
negb
loope
sub
xchg
push
jb
iret
arpl
jmp
pop
push
adc
in
mov
mov
cmp
sub
mov
add
jmp
xor
mov
movsl
in
pop
mov
pop
pop
ljmp
mov
adc
stos
mov
daa
or
addr16
pop
pop
add
lods
cmp
gs
stc
shrl
xchg
lret
jl
dec
jecxz
sahf
jecxz
add
out
in
push
dec
inc
aam
sbb
adc
insb
xchg
faddl
repz
idivb
scas
aaa
push
movsl
xchg
xchg
pop
adc
dec
pop
mov
mov
pop
xchg
inc
fsub
jp
dec
cmpl
decl
jle
inc
and
jmp
out
and
sub
testb
mov
pop
sub
mov
imul
js
cmpsl
mov
inc
arpl
cli
mov
sub
mov
call
and
les
or
push
inc
cltd
jbe
mov
mov
int
out
arpl
mov
sbb
mov
out
imul
jl
fdivs
mov
imull
pop
push
fists
incb
out
sti
filds
aaa
push
es
aas
out
pop
mov
loope
cmp
movsb
rcrb
call
pop
push
out
xor
mov
push
inc
mov
xchg
xchg
mov
fcoms
pop
fisubl
jne
xor
in
cltd
or
xchg
adc
scas
xchg
pop
pushf
mov
cmp
adc
ficomps
add
ret
fildll
or
pop
out
xchg
inc
or
sub
jmp
pushf
dec
inc
jno
jae
push
mov
pushf
fbstp
leave
shrb
rcrl
push
sub
sbb
fsubrs
lds
out
or
data16
inc
rorl
or
test
lock
int
dec
inc
test
js
mov
sbb
mov
cmpsl
nop
out
pop
loopne
cmp
adc
stos
shl
and
jmp
mov
ss
das
mull
repz
int
lcall
bound
mov
hlt
mov
jl
ss
cwtl
xchg
mov
xor
test
pop
xor
cmp
imul
mov
andb
pop
sub
icebp
xor
nop
and
dec
push
mov
fst
repnz
sbb
ret
jb
cli
adcl
outsl
test
movsl
sbb
mov
outsl
enter
imul
pop
xchg
lcall
cmp
push
xchg
mov
jge
or
arpl
or
movsb
mov
lods
mov
gs
addr16
push
pop
ret
jle
cmc
ss
aam
stc
adc
mov
cmp
bound
rcrb
aas
lret
lea
and
dec
lret
sahf
add
push
daa
cmp
xor
and
mov
ss
jo
mov
xchg
popl
mov
in
add
testl
insl
lods
rol
jle
push
mov
aas
test
xchg
xchg
sub
jp
adc
xchg
mov
sub
mov
or
push
sahf
std
mov
arpl
jb
icebp
push
and
in
mov
sbb
push
fwait
xor
xchg
popa
jmp
int3
call
fisttpl
mov
adc
pop
mov
mov
in
push
pop
cmp
stos
aam
mov
aas
push
adc
mov
mov
enter
or
xchg
xor
call
pop
pop
loopne
insl
and
fnsave
aam
ja
outsl
xchg
mov
adc
cmp
out
test
mov
daa
fs
sar
inc
aad
repz
stc
test
hlt
bound
lret
dec
mov
pusha
ret
mov
cmpsl
or
dec
repz
jg
bound
mov
xchg
lock
fiaddl
movsl
fst
dec
or
mov
outsb
pop
icebp
lahf
pop
adc
in
xorb
aad
push
jge
and
test
scas
xchg
add
ret
nop
sbb
xchg
iret
cs
and
lock
push
mov
adc
ret
insl
cmc
jmp
cmc
add
xchg
push
jecxz
mov
inc
fwait
push
mov
xchg
and
xor
mov
add
xor
stos
pop
xor
imul
js
xor
roll
iret
push
xchg
jb
mov
imul
arpl
mov
data16
in
xor
sbb
fisttpl
lods
jb
cld
int3
jo
add
jns
dec
popf
jno
jns
xorl
inc
fcoms
fistl
sbb
or
mov
int
sub
mull
sbb
int3
mov
and
call
test
dec
mov
cmpsl
xchg
scas
loop
aaa
mov
into
insl
ror
mov
data16
xlat
fincstp
push
pop
insb
sub
xchg
stos
jo
scas
xor
repnz
jmp
push
jbe
test
xchg
loop
mov
push
sbb
dec
mov
push
loopne
mov
js
inc
test
cmp
xchg
xchg
cltd
outsb
lahf
lods
lahf
mov
outsl
cmpl
into
lds
test
push
outsl
push
movsl
mov
dec
jp
repz
fsts
insb
add
cltd
inc
sbb
or
sub
adc
inc
dec
and
std
add
dec
divb
add
rcr
xchg
xchg
add
or
lea
jle
addl
out
cmp
in
xor
je
fstl
sbb
sub
pop
fs
jecxz
sub
or
adc
xchg
push
push
lds
lret
xchg
scas
es
jnp
jmp
xor
je
dec
jno
mov
mov
adc
fstpt
jle
mov
and
mov
stc
stos
lcall
xor
aaa
cmp
push
push
sub
mov
jmp
xor
jle
pop
stos
cmp
dec
push
xchg
push
cmp
push
ds
push
lahf
fwait
and
xchg
mov
push
outsb
jo
adcb
mov
rcrb
or
or
sub
mov
test
or
ret
add
outsb
jle
orb
and
mov
xor
dec
or
sbb
addr16
mov
ja
in
stos
push
pop
pop
or
add
sbb
dec
lods
push
cltd
cltd
ljmp
mov
and
mov
mov
shll
xor
sub
mov
fmul
lcall
lret
gs
push
mov
jae
andw
dec
test
or
mov
pop
icebp
cmpsl
or
xchg
jp
add
lods
hlt
cmp
sbb
cmpsl
mov
or
jp
std
mov
mov
fnstcw
or
sub
sub
sbb
cmc
or
xor
aaa
cli
xchg
push
sub
cmpsb
gs
lock
sbb
and
and
mov
mov
dec
clc
jb
fstpt
push
cmp
mov
ljmp
fsubl
push
xorl
rcr
rep
enter
leave
inc
add
push
pop
xchg
cmp
lea
push
and
xchg
and
dec
cmp
sahf
push
mov
xchg
jp
mov
dec
sahf
xchg
into
inc
inc
jg
jno
sub
adc
hlt
and
call
and
cmpsl
pop
cmp
mov
mov
int
not
jp
mov
loopne
mov
jb
xchg
movsb
pop
cmp
mov
movsl
cmp
cmp
lahf
loop
sub
cmp
repnz
rcll
jg
sbb
dec
roll
sbb
sti
sbb
jne
hlt
jo
cmp
xor
push
jmp
aaa
sbb
or
mov
imul
inc
rorl
jb
dec
in
xchg
jns
popf
jne
lea
add
rcl
pop
filds
jg
sbb
fsubl
stos
sbb
mov
pushf
pop
call
mov
pop
xor
mov
mov
jl
mov
sub
scas
add
inc
jbe
aaa
pop
mov
ret
push
arpl
and
ss
addr16
xchg
imul
es
cmp
jbe
mov
push
xchg
pop
sub
xor
xlat
je
and
shlb
push
dec
out
and
fisubrl
in
dec
xchg
jo
ds
test
shl
sub
test
xchg
sub
mov
jns
scas
inc
push
pop
int
pop
mov
or
addr16
jo
dec
mov
adc
fidivrs
cmp
fsts
lods
or
push
mov
mov
adc
or
out
cmp
cmp
stc
pop
inc
jl
lahf
mov
adc
add
cmp
mov
mov
arpl
mov
fisttpl
sbb
inc
pop
aas
sub
into
popf
hlt
jnp
pop
push
imul
mov
mov
into
mov
pop
data16
jnp
jle
sbb
std
push
sbb
hlt
fadd
add
xor
aam
in
pushf
sub
out
movsb
ljmp
push
xlat
sbbb
xor
push
inc
jmp
mov
jl
aas
fwait
outsb
in
popf
add
push
shl
inc
das
mov
jo
rol
std
cli
pushf
xorb
clc
pop
mov
sbbb
xorl
sub
mov
dec
jle
andb
sbb
ds
or
mov
lds
sbb
scas
popa
imul
fnstcw
es
ficoms
or
jb
lahf
cld
jl
mov
push
or
cmp
pusha
int3
outsb
in
xchg
inc
or
fdivrl
loopne
sbbb
sub
push
pop
scas
data16
xor
xchg
add
pushf
dec
dec
mov
stos
mov
daa
loopne
fsubrp
inc
fisubl
add
punpckhdq
xor
xchg
adc
pop
xor
xchg
sbb
pop
sub
adc
mov
and
sub
inc
fstl
xchg
nop
imul
jo
pop
sub
int3
ret
cmp
fwait
sti
and
sbb
xchg
cmp
jb
cltd
mov
cld
pop
cli
jne
cwtl
mov
jnp
enter
mov
dec
dec
cmpsl
repz
pop
decl
jp
mov
outsb
je
pop
out
aam
cld
pushf
jle
dec
loope
in
in
in
adc
mov
out
xor
sub
iret
icebp
je
lcall
xchg
in
jb
sar
dec
lea
mov
insb
xor
in
push
cli
lahf
mov
inc
cmp
out
xchg
cli
nop
and
cs
pop
divl
test
loope
test
in
sbbb
int3
jp
lcall
rol
repnz
leave
rorl
insb
int
dec
add
jge
popa
dec
xchg
pop
push
mov
jo
icebp
mov
popa
xor
gs
mov
xchg
stos
test
jnp
ret
popa
lcall
mul
sti
inc
sahf
pushf
inc
mov
jg
lahf
mov
lea
mov
dec
mul
hlt
push
cld
scas
ret
xor
adc
lods
in
rcll
cmp
imul
or
and
dec
jmp
sub
arpl
sub
dec
bound
sub
scas
pusha
and
int
insb
imul
gs
in
adcl
imul
iret
pop
lcall
xchg
or
adc
hlt
xor
sbb
es
aad
mov
insl
repnz
stos
pop
push
or
insl
dec
sub
inc
insb
pop
inc
lahf
int3
mov
jns
inc
push
daa
fistpl
mov
stos
push
push
icebp
lds
adc
dec
sub
dec
daa
fwait
xor
outsb
mov
xchg
fildll
shr
dec
pop
or
clc
int3
lret
mov
shrl
xchg
push
xor
or
outsb
mov
pop
jle
add
imul
inc
imul
scas
sub
dec
pop
add
push
pop
xchg
or
jnp
jb
enter
js
dec
lret
int3
xor
jae
ljmp
cs
js
jae
jb
movsl
cs
scas
mov
xchg
pop
dec
push
lods
icebp
jbe
repnz
jp
lcall
cwtl
xor
mov
mov
imul
and
mov
js
mov
out
add
mov
mov
pusha
adc
pop
push
cmp
cmpsb
out
faddl
daa
shlb
inc
sbb
fistpll
scas
stos
jbe
jecxz
jns
push
cli
cwtl
push
jae
stos
cmpsl
xchg
pusha
or
rcr
xchg
jno
and
sbb
xchg
jg
ret
and
ss
movq
sub
jle
fiaddl
pop
repnz
lret
xchg
les
add
lods
pushf
stos
inc
inc
fstpt
mov
xorl
add
hlt
or
nop
pop
cli
aad
iret
subl
inc
dec
arpl
mov
mov
loopne
inc
pusha
sbb
push
xchg
sbb
cmp
add
aad
xor
add
jle
stos
loope
iret
cmp
lods
mov
push
cwtl
stos
inc
paddq
sub
hlt
scas
jle
sbb
xor
insb
jae
jp
lods
movsb
test
aad
xchg
adc
ret
inc
iret
inc
das
insl
les
popa
xor
add
inc
fsts
jns
ja
mov
jmp
fbld
sbbb
orb
jecxz
mov
xchg
cmpsl
cmp
cld
clc
jb
jb
adc
adc
in
cli
or
mov
aaa
cs
xor
cmpb
add
outsl
mov
and
nop
out
dec
mov
dec
fimull
and
mov
pop
adc
imul
shrl
int3
bound
sub
in
inc
xchg
mov
xchg
inc
loope
mov
sbb
push
mov
dec
pop
jmp
fcomps
ja
and
test
cs
or
add
sbbl
in
lahf
jb
jecxz
outsl
cwtl
jo
mov
mov
aaa
ljmp
jno
stos
mov
pop
mov
xchg
cs
popl
xchg
fadds
push
fildll
sub
cmc
ja
cmp
imul
push
jg
daa
push
xor
scas
mov
loope
lahf
gs
mov
pop
hlt
ret
mov
shll
xchg
test
int3
fistps
push
mov
insb
pcmpeqb
ja
mov
push
sub
inc
neg
ss
adc
push
movsb
cmc
add
aad
into
inc
jmp
or
insb
pusha
push
enter
outsb
iret
add
pop
imull
lock
sub
dec
sbb
mov
mov
out
mov
insl
andb
scas
sti
pop
xor
mov
out
movzwl
mov
fsubrs
inc
cmpsb
ret
testb
jnp
fldt
xlat
add
mov
sti
mov
mov
cmp
cmp
incb
hlt
push
out
cmpl
icebp
movl
xor
data16
cld
fnstsw
pop
fimuls
mov
mov
pop
push
inc
clc
sbb
fldcw
mov
add
out
mov
mov
fbstp
jecxz
pop
inc
sbb
test
cld
outsl
inc
loop
and
cmp
loope
js
popa
aas
into
xchg
popf
mov
xlat
mov
and
cli
push
stos
pop
cmpsb
and
xor
pop
jge
mov
dec
cld
jne
cs
out
sahf
loope
cmpsl
add
xor
or
push
sbb
bound
daa
mov
leave
test
idivb
push
movsl
in
sbb
and
lea
mov
fadds
pop
sub
arpl
xchg
scas
add
mov
jae
pop
lret
lods
jp
ficoms
xor
inc
push
mul
mov
xchg
sbb
xchg
addr16
push
out
mov
icebp
mov
pop
xor
rorl
sub
rcr
ret
or
dec
cltd
mov
cmp
sbb
push
cmpl
shlb
add
nop
outsb
mov
dec
push
cltd
mov
mov
addr16
fldenv
out
test
int3
or
scas
popf
xor
mov
adc
mov
xchg
int3
push
and
inc
lahf
gs
shlb
jge
dec
add
call
or
xchg
xchg
pop
jmp
sarb
shrl
lcall
aad
dec
leave
rorl
frstpm(287
jb
popa
and
ss
mov
lds
aaa
mov
das
call
sbb
and
pushf
mov
sub
fisttpll
divb
mov
outsl
sub
dec
arpl
xchg
push
mov
push
or
flds
sbb
jns
fnstcw
push
arpl
daa
jae
popa
sahf
mov
dec
scas
shll
insb
pop
xchg
xchg
mov
lea
add
sbb
ss
and
pop
sbb
lds
mov
repnz
call
push
icebp
sti
adc
rcll
loopne
imul
test
sbb
xchg
inc
mov
jo
jmp
push
push
mull
leave
scas
out
stos
fisubrs
fdivl
scas
leave
orb
pop
sti
mov
test
or
xor
pusha
leave
fistpl
lods
sub
fsubl
push
push
enter
inc
lahf
loope
mov
stos
loope
cwtl
jge
int
cmpsl
jle
xchg
cltd
stos
inc
and
fcomi
add
sub
sbb
das
addr16
dec
mov
mov
test
xor
in
in
test
ja
dec
addr16
stos
and
loope
out
push
movsl
daa
ja
jb
mov
movsb
and
mov
mov
jbe
testb
inc
dec
pop
inc
push
enter
das
inc
outsb
mov
icebp
sub
daa
add
sub
jmp
cltd
xor
bound
movsl
movsl
andb
mov
push
or
mov
pop
je
loop
mov
je
lds
and
xchg
pusha
aas
dec
bound
cmpsl
sub
push
int3
cmovp
xchg
xor
icebp
cmc
pop
sbb
inc
mov
jns
inc
stos
imul
call
ja
pop
push
cltd
pop
stc
pop
test
test
mov
loop
inc
jmp
sub
clc
shlb
xchg
xor
add
xor
lods
sub
js
aam
int
jecxz
dec
scas
out
xchg
mov
loope
xor
insb
add
xor
pop
sub
lcall
nop
shrl
xchg
or
iret
pop
outsl
push
mov
movsl
cmp
push
aad
push
or
bound
add
xor
sti
or
jnp
enter
stos
adc
push
imul
fsubrs
push
shll
stos
jbe
fisttpl
cmp
xchg
stos
sar
cmpsl
mov
xor
fnstcw
jbe
sbb
jecxz
pop
rcll
cmp
add
hlt
push
cmp
test
ret
iret
ss
fisubs
jp
or
mov
xchg
xor
inc
out
and
mov
cmp
mov
add
push
lahf
mov
movsb
pop
insl
stc
sub
call
and
add
popf
jecxz
add
sub
out
test
pop
xchg
xor
lods
cmp
sbb
add
mov
pop
mov
lret
sti
test
lea
test
jp
mov
in
adc
rcrl
cmp
shrb
notb
loop
sbb
call
sbbl
mov
mov
cmp
pop
inc
adc
fucomip
cld
or
adc
xchg
fidivl
jle
pop
daa
adc
lods
mov
mov
test
dec
testb
cli
filds
or
lret
mov
je
add
mov
and
jp
sub
loope
push
push
pop
mov
xor
push
pop
out
inc
sbb
outsb
ret
xchg
pop
cld
mov
push
addr16
or
fstps
mov
ss
ror
pop
xchg
int
mov
sbb
and
or
ret
and
fcmovnb
push
daa
push
leave
movsb
stc
dec
add
hlt
lock
sbb
inc
arpl
jae
daa
in
call
xchg
xorl
adc
cmpl
in
jmp
sbbl
aaa
inc
xor
ret
jge
mov
mov
jg
enter
pop
insl
cmp
sbb
add
inc
cmp
popa
xchg
push
fsubs
mov
je
mov
pop
outsl
sahf
push
mov
xlat
call
mov
jg
jecxz
push
push
subb
mov
inc
into
inc
xor
inc
dec
aam
outsb
xchg
cmp
sbb
sbb
mov
adc
ja
push
sbb
enter
andb
mov
xchg
in
enter
xor
xor
loopne
insl
arpl
pusha
dec
jo
insl
jmp
push
or
into
sti
or
adc
aam
mov
mov
xchg
loopne
mov
lds
loopne
push
mov
mov
or
push
cmp
in
sbb
inc
in
mov
imul
andl
rcll
mov
sbb
pusha
push
mov
imul
mov
mov
imul
pushf
mov
sahf
ss
pop
mov
inc
out
lahf
jbe
sbb
xor
data16
jns
xchg
stos
sbb
aam
push
xchg
and
ja
icebp
loop
xor
insw
clc
js
push
mov
mov
les
cmp
icebp
pop
xor
mov
fisttpll
push
in
pop
push
or
test
mov
out
outsb
fdivp
xchg
push
push
inc
fimuls
xchg
add
jne
xor
dec
sbbl
gs
popf
int3
adc
jmp
dec
or
cltd
xor
xor
add
lods
fmuls
xchg
push
mov
movsl
adc
dec
loop
rorb
jge
adcb
jmp
mov
lds
mov
das
jl
clc
or
test
imul
rclb
std
or
das
push
call
daa
shlb
out
or
popa
divb
xor
cli
xchg
dec
xchg
lret
jo
adc
inc
inc
mov
in
inc
lret
and
ja
sub
mov
inc
dec
inc
sbb
roll
add
mov
mov
rcr
dec
or
xor
push
xor
loope
push
daa
pop
out
mov
addl
push
repnz
sbb
imul
sahf
decb
ret
test
xchg
pop
out
mov
mov
rol
into
sbb
pop
push
test
popf
sub
in
mov
repnz
fnstsw
pop
adc
add
or
gs
add
jb
repz
xchg
and
jecxz
nop
sub
jnp
out
adc
sub
ljmp
ret
mov
push
inc
xchg
out
lds
insl
inc
cmc
ret
push
push
movsb
mov
adc
push
or
jecxz
mov
sbb
push
out
test
mov
xchg
enter
mov
out
jle
pop
ja
fmuls
addr16
inc
sub
hlt
dec
push
pop
add
jae
aaa
and
or
pop
fldcw
cld
popa
xor
mov
aam
push
lcall
daa
jns
adc
nop
insl
insb
xor
sub
and
jne
fs
cwtl
insl
cmpsb
clc
repz
test
enter
lock
xor
mov
stos
xchg
mov
mov
cmp
pusha
pop
int3
add
enter
mov
xchg
push
jne
mov
mov
fidivrs
sub
dec
or
inc
js
leave
mov
lcall
adc
mov
jno
mov
fnstcw
add
lcall
test
xor
test
into
data16
je
popa
mov
addr16
cmp
or
nop
daa
and
out
adc
cmp
or
push
jno
dec
pop
repnz
adc
jge
inc
jo
mov
add
fidivrs
and
add
mov
fstpl
aad
sbb
ffreep
inc
adc
jmp
popa
push
iret
rcrl
insb
fisubrs
lock
cmp
mov
into
imul
mov
cmp
adc
mov
mov
int
repz
push
loopne
call
jecxz
pop
mov
lods
push
jne
sbb
mov
cmp
ss
or
cmp
xchg
adc
jl
repz
or
scas
push
lahf
mov
push
js
add
xor
aad
mov
xlat
lds
repnz
lea
jns
cmp
mov
cmpsb
out
out
ljmp
mov
xchg
inc
les
pop
test
ljmp
fidivrl
mov
das
addr16
cwtl
mov
mov
inc
pop
scas
mov
fisubrl
push
or
rorl
and
out
jnp
les
mov
mov
cmp
push
movsl
icebp
outsb
and
xchg
xor
mov
cmp
pop
and
pop
mov
jb
fcoml
pop
cmp
jns
repnz
jg
jmp
mov
lahf
or
or
cmp
ds
jge
sub
add
add
movsb
loope
les
sub
mov
mov
cwtl
pop
lods
xchg
mov
out
in
cmp
enter
dec
inc
icebp
imul
stc
adc
insb
mov
stos
pop
cli
andl
lahf
enter
add
or
sbb
jno
data16
mov
daa
clc
sahf
mov
jne
adc
and
cmp
adc
imul
mov
es
mov
ficomps
mov
insb
inc
pop
lds
das
pop
loop
pop
shlb
js
sub
lds
mov
enter
and
dec
mov
test
loope
rorl
or
shlb
push
loopne
xchg
cltd
dec
stos
out
push
hlt
inc
sahf
and
and
mov
call
mov
mov
lahf
add
mov
xchg
daa
jno
push
rolb
cli
adc
jmp
or
jl
in
lods
imul
ret
dec
jae
add
stos
cmp
je
sbb
es
movsb
idiv
sub
lods
cmp
data16
inc
xchg
scas
loop
test
enter
bound
xchg
je
or
ds
pop
outsb
cs
jno
in
fs
xor
mov
shrb
data16
sub
sub
add
xor
loopne
inc
inc
and
xchg
sti
xlat
out
syscall
ret
pop
mov
add
push
sub
in
ficoms
and
adc
or
cmp
adc
sbb
add
popa
ds
xor
pop
jns
xchg
mov
xor
cli
xchg
sub
mov
lods
in
mov
adc
mov
cmc
pop
int3
movsl
or
in
inc
fildll
mov
sbb
ljmp
pushf
imul
push
ficompl
xor
jge
test
push
push
lods
inc
mov
pcmpgtd
dec
dec
ss
shrl
add
xlat
mov
and
insl
mov
lahf
pop
xor
xchg
mov
push
mov
andb
push
and
cltd
fdiv
ret
popf
jmp
es
cmp
cmp
sub
mov
cwtl
xchg
mov
jno
and
jp
xor
lea
or
stos
jg
jge
add
mov
adc
jmp
insb
insb
daa
sbb
or
jle
xchg
sub
cmp
sub
jg
popf
push
xor
mov
fmuls
int3
adc
ror
insl
ja
dec
cmp
push
test
push
sub
mov
or
or
jns
adc
inc
inc
mov
lret
shrl
jmp
mov
test
push
addr16
or
xor
adc
adc
mov
mov
mull
mov
sub
fidivrl
push
mov
dec
or
cmc
ss
int
in
lea
movsb
inc
fistl
std
stc
movsl
sub
repz
test
rcrl
jo
aaa
roll
or
hlt
sub
ja
xchg
out
lods
sbb
mov
sti
push
outsl
lcall
dec
sbb
sbb
fisubl
and
mov
jp
cmpl
xchg
fs
cs
aad
xor
popf
push
pop
jmp
xchg
and
outsb
push
ds
or
mov
mulb
mov
cli
xchg
cmp
lods
and
push
or
push
or
adc
adc
cmpsb
xor
pop
xchg
and
mov
js
js
mov
fprem
or
cmp
inc
lret
test
adcb
sbb
dec
test
rcl
leave
test
inc
mov
mov
pop
and
pop
test
enter
sub
hlt
gs
push
push
push
xchg
fwait
jmp
cmp
fldenv
adc
sti
aas
xchg
jg
jne
cwtl
sbb
dec
dec
mov
loopne
sub
dec
mov
xchg
xor
push
hlt
aaa
push
das
popa
pusha
rorl
jl
xchg
adc
xchg
imul
add
es
cmpsb
stos
mov
jge
sti
lcall
sahf
pushf
mov
sbb
cltd
mov
jle
sahf
sub
sbb
mov
xor
inc
je
stos
fimuls
mov
adc
or
sub
sub
das
stos
push
ret
ss
sbb
inc
mov
fdiv
adc
das
lret
dec
fcmovu
leave
pop
pop
inc
inc
pop
scas
mov
push
cmp
lea
mov
add
lret
sub
mov
sub
or
push
bnd
rol
or
ret
int
or
jl
add
adc
mov
jae
dec
and
popa
add
sbb
stc
aad
cmpl
orb
mov
add
rclb
sbb
int
aad
mov
sbbl
mov
adc
data16
sbb
das
jns
cmp
jp
xchg
adc
mov
lods
psadbw
cmp
jb
or
cltd
xlat
stos
xor
call
xchg
push
xor
iret
das
outsb
cmp
sbb
gs
orl
jle
mov
jb
in
clc
mov
mov
mov
fists
mov
sti
xor
sub
adc
cltd
xchg
dec
mov
outsb
push
pop
stos
jmp
dec
jno
inc
jne
inc
xor
add
adc
repz
and
fucomip
lods
es
push
test
scas
dec
xor
push
adc
jp
imul
add
xchg
mov
pushf
jns
movsl
cmp
xchg
out
pop
rolb
mov
sub
xchg
jno
push
dec
xchg
mov
push
inc
stc
xchg
jecxz
dec
dec
ret
inc
and
jns
cmp
call
sub
mull
sub
sub
test
rorb
lret
pop
ss
in
xor
in
adc
cmc
adc
iret
rol
pop
pop
sub
jbe
enter
jge
popf
cs
push
sub
inc
test
cwtl
xchg
mov
xor
bound
lcall
out
or
mov
mov
inc
xchg
jle
inc
adc
sahf
pushf
scas
out
popf
out
mov
icebp
jge
popa
pop
addr16
clc
sahf
pushf
mov
in
mov
icebp
jge
pop
in
imul
push
cwtl
movsb
or
push
mov
add
pop
cmp
mov
push
inc
loopne
and
or
in
xchg
and
pop
or
sbb
rorb
sbb
push
mov
add
sub
sbb
add
inc
fadds
es
aaa
inc
fadds
xor
lret
xor
ljmp
pop
sub
inc
fisubrl
leave
popa
xor
mov
push
inc
es
push
test
aam
cmc
push
leave
sub
mov
pop
or
add
les
xchg
cs
lret
test
icebp
lcall
adc
xchg
mov
xor
insl
add
fdivl
fidivl
push
add
clc
jnp
dec
jmp
in
pop
inc
pop
or
addr16
sbb
aam
outsb
add
sub
pop
das
rclb
inc
push
in
jmp
xor
xor
mov
dec
add
icebp
push
arpl
xchg
andb
repnz
lods
cmp
sub
imul
xchg
mov
mov
mov
xchg
test
jnp
jp
xor
dec
mull
popf
adc
cmp
in
test
std
adc
jnp
cli
mov
cwtl
stc
cmpsl
jmp
inc
mov
stos
aad
jno
inc
cmp
stc
push
sub
aad
sbb
jnp
pushf
cmp
xchg
das
mov
int3
xchg
es
mov
sbb
movl
imul
mov
xor
shrb
movsl
inc
pop
mov
shr
jecxz
mov
lods
arpl
lahf
idivl
cs
pop
pop
fimull
cmp
shrl
daa
jns
lret
lret
add
leave
cmp
mov
pop
pop
jl
or
mov
scas
rcll
mov
fiaddl
scas
mov
pop
cmp
sbb
cmpsl
lcall
loope
jg
loope
jl
jnp
cmc
mov
ds
icebp
push
in
xchg
inc
pushf
shll
cmp
pushf
add
aas
jmp
test
shlb
cmpsb
pop
stos
inc
cwtl
in
pop
aam
leave
jne
add
xchg
inc
and
push
pop
mov
pusha
pushf
shll
fisttps
aam
xor
cmpsb
sbb
xchg
arpl
lret
mov
sahf
call
shrl
bound
in
mov
jno
dec
adc
push
aaa
sub
mov
dec
add
shr
rorl
mov
mov
or
mov
jmp
rcr
jmp
pop
mov
repz
fimull
fwait
xor
ja
adc
mov
mov
push
inc
testl
pop
xchg
inc
dec
push
or
jl
push
movsl
jl
ljmp
mov
mov
lea
add
lods
inc
rorb
add
cli
in
push
fsubs
add
test
xchg
clc
or
jp
mov
roll
sti
ja
outsl
push
in
mov
loopne
fbstp
jg
lahf
outsb
or
cmc
jg
pop
in
fdivl
jl
or
dec
loopne
lock
outsl
iret
jle
xchg
gs
add
mov
repz
jle
das
outsb
xchg
sub
add
into
gs
inc
xlat
into
jge
pop
jno
add
jecxz
cld
xchg
iret
jge
cmp
jecxz
adc
mov
ret
repz
gs
ss
js
inc
insb
jmp
in
mov
lcall
cli
fisttpll
lahf
rcrb
mov
xor
jns
and
pusha
imull
pop
lods
inc
push
mov
xchg
and
popa
clc
ja
dec
in
fmuls
lret
rcr
jo
sub
addr16
jo
add
bnd
add
push
jmp
int3
sbb
mov
outsl
inc
bound
daa
mov
xorl
xchg
xor
and
inc
sub
fldz
les
ss
sbb
nop
js
mov
insb
inc
aaa
dec
addb
push
lret
cmp
repnz
mov
mov
repnz
sti
cmp
pop
sbb
ret
or
inc
lret
mov
mov
stc
mov
popf
imul
subb
loopne
es
or
mov
xlat
test
and
aam
mov
push
push
push
sub
mov
es
push
xor
adc
fs
cmp
sub
jne
or
mov
cmpsl
push
addr16
fnstsw
call
jmp
out
pop
jo
cli
jle
out
cld
icebp
test
xchg
imul
std
ret
push
mov
pop
and
mov
add
aas
sti
imul
dec
in
aam
cs
sti
dec
mov
mov
cld
sbb
mov
sti
jl
out
and
shlb
xchg
or
add
cmp
shl
add
mov
dec
fldt
adc
xchg
and
mov
aad
jecxz
mov
fisttpll
jl
cmp
adc
int
add
and
mov
cmpsb
insl
int
data16
addr16
cwtl
aad
or
and
adc
push
out
sti
inc
fldl2e
ds
inc
xor
in
orl
pop
add
pop
pop
les
cwtl
push
cmpsb
ret
test
xchg
push
jne
insb
js
sahf
add
ret
mov
mov
sub
inc
loope
dec
push
roll
fwait
sti
sub
mov
xchg
mov
jecxz
sub
xor
test
fstpt
daa
jae
stos
sti
pop
icebp
mov
dec
adc
or
xor
fs
xchg
fwait
sahf
aas
lock
sub
scas
xchg
sub
movsl
dec
pop
fildll
fcoml
ja
call
cmc
mov
lret
je
jnp
push
imul
push
shrb
push
xor
adc
lods
sub
aad
mov
xchg
inc
dec
xor
pop
push
pop
cmp
nop
int3
popa
ljmp
jo
cmp
lahf
ss
mov
cmp
mov
dec
adc
mov
test
xchg
es
in
sub
adc
xor
cmp
mov
int3
add
leave
cmp
push
inc
pop
mov
mov
push
pushf
adc
out
lret
and
int
fimull
jne
sti
shlb
push
pop
bound
fidivs
push
ret
test
dec
jecxz
mov
loop
and
out
mov
jg
jl
mov
or
sub
clc
and
aas
out
std
aad
inc
cmp
cmp
sub
out
cmpsl
lds
adcb
aam
adc
dec
repz
sbb
and
jns
adc
jae
push
dec
jbe
adcl
in
icebp
mov
mov
mov
shll
faddl
rcrl
push
mov
test
push
push
cs
out
fmuls
jne
mov
mov
imul
cltd
mov
jecxz
adc
fcomps
cmp
adcl
bound
inc
in
cmpsb
jo
jecxz
jb
dec
cld
dec
testl
mov
in
sub
or
mov
gs
jne
or
test
in
or
jp
mov
test
ret
fdivs
dec
in
iret
js
in
pop
cmp
jge
jbe
gs
or
add
inc
ss
mov
out
les
popa
jg
cmpsl
test
or
cld
dec
xorl
shrl
mov
and
jp
outsb
inc
adc
ljmp
scas
mov
sahf
or
jbe
loope
negl
adc
pop
mov
mov
fldt
dec
mov
adc
test
ret
mov
pop
pop
sub
hlt
loopne
and
and
jnp
loope
ret
push
leave
or
imul
pmullw
sti
jecxz
fdivrl
sub
outsb
xor
jp
push
mov
mov
jno
push
add
mov
mov
sub
cmp
clc
inc
stc
shll
mov
popf
sub
xchg
adc
iret
ljmp
pop
xor
enter
stos
stos
mov
jbe
sarb
add
and
stos
xlat
out
andb
sahf
sub
popf
lods
jnp
or
pushf
test
push
stos
mov
shr
cmp
push
enter
data16
jae
insl
aam
xchg
sub
scas
push
out
and
sub
insl
jp
cmpsl
sub
adc
les
xchg
rclb
lahf
push
ret
push
fistpll
stos
repz
lret
mov
adc
mov
jge
stos
out
out
dec
sbb
cmpsb
lock
cli
adc
gs
xlat
or
sarb
push
imul
pop
aad
push
dec
repz
ljmp
insl
scas
insb
cld
xchg
sub
sub
sub
aam
pop
mull
push
mov
jmp
xlat
cwtl
jp
dec
lods
cwtl
das
fbstp
mov
cld
je
sub
iret
ja
call
test
lods
aas
pushf
in
leave
xor
iret
jl
mov
and
loop
jle
push
pop
addr16
out
xor
mov
pop
pop
inc
xlat
out
mov
mov
lods
movsl
jnp
aaa
dec
pop
pop
jne
dec
xor
jp
pop
hlt
ja
pop
repnz
cld
push
mov
movsl
icebp
sbb
fisubs
movsl
push
cmpsl
xchg
into
jns
jmp
stc
push
insb
cmc
std
in
mov
xchg
cmpsl
mov
scas
orb
add
les
mov
setp
popf
stc
ds
clc
sahf
into
cmp
pop
addr16
fdivr
jb
in
jne
add
test
xchg
cmc
hlt
inc
es
stos
inc
je
cmpsb
mov
and
and
and
mov
push
pushf
int
sbb
sahf
clc
hlt
cs
dec
lods
mov
fistl
shrl
fstpt
or
pop
adc
rol
adc
test
rcrl
mov
lods
xor
and
add
mov
ja
aas
dec
cld
and
jnp
push
inc
in
pushl
lods
sbb
cwtl
lret
lods
jae
addr16
scas
aam
out
insb
inc
bound
sbb
leave
movsb
add
test
das
add
test
icebp
cwtl
repnz
jle
and
sub
test
push
mov
je
xchg
test
mov
and
mov
xchg
jnp
testb
pop
shll
dec
jno
dec
xchg
test
cmp
adc
xor
jbe
mov
rcll
dec
push
in
and
xchg
adcb
mov
fwait
gs
sub
jmp
rcr
push
add
jmp
mov
pop
mov
push
in
inc
sbb
add
jmp
imul
lods
mov
pop
mov
in
out
fcompl
shll
pusha
aaa
repz
fisubs
push
push
sbb
loopne
cmp
hlt
push
pop
cs
mov
xor
and
call
daa
mov
xchg
insl
fildl
hlt
fwait
adc
sbb
jb
scas
mov
dec
frstor
js
and
push
or
pop
jp
jmp
push
adc
sub
and
pop
cmp
icebp
add
mov
push
dec
dec
jp
addr16
pop
movsb
cmp
mov
jo
pop
negl
dec
pop
adc
int
test
scas
xchg
xchg
cwtl
or
jg
dec
das
fisubl
repz
push
cmpl
in
and
loope
mov
popf
and
pop
out
cli
movsl
rcll
xor
mov
mov
fwait
jg
mov
or
enter
push
inc
pop
int3
jae
gs
xor
mov
or
xchg
stos
sahf
orl
adc
mov
std
cmpsb
imul
mov
negl
repnz
and
xor
mov
sbb
shll
test
inc
gs
arpl
sub
pusha
ss
mov
inc
test
adc
les
dec
fcmovbe
fmuls
jge
push
inc
rcll
rolb
out
repz
cvtps2pd
cwtl
xchg
mov
inc
xor
lret
mov
jecxz
fstpt
les
add
add
xor
in
lret
icebp
pop
pushf
cli
sub
xchg
addr16
sarl
mov
cmp
imul
inc
xor
mov
mov
js
push
jmp
loope
mov
cmp
pop
mov
pop
mov
push
push
lea
jg
lds
inc
fsubl
bound
imul
xchg
cmpsl
sarb
xchg
dec
mov
pop
or
push
mov
or
xor
cmpb
sbb
xchg
mov
mov
loopne
lods
lcall
pop
imul
xor
cli
inc
shl
rcrb
inc
lcall
and
sbb
lea
ds
jae
inc
add
enter
fwait
xor
mov
jbe
fisubrs
adc
test
jecxz
xchg
lret
mov
xchg
mov
and
mov
addr16
mov
mov
mov
inc
out
pushf
adc
nop
notl
daa
loope
adc
out
and
stos
cmp
jge
sub
pop
fisubl
adc
out
mov
lods
arpl
into
jae
and
pop
fsubs
xchg
sbb
push
cmp
dec
lret
dec
pop
dec
mov
mov
jnp
test
sbb
scas
push
xchg
jl
jnp
divl
pushf
stc
and
adc
jle
lea
lahf
popa
lret
add
jnp
or
and
inc
mov
test
add
subl
mov
or
jp
shrb
dec
sub
sub
into
orl
adc
dec
pop
dec
jne
lds
sbb
popf
mov
call
mov
xor
insl
dec
add
cmove
mov
mov
mov
out
adc
arpl
mov
divb
xor
mov
pop
das
popa
fcoml
dec
adc
cwtl
mov
icebp
cld
cmpsl
das
enter
and
ret
mov
iret
and
in
push
andb
ret
frstor
lret
push
jbe
dec
test
out
jp
cmpsb
mov
test
add
sbb
jle
dec
adc
iretw
shll
xchg
adc
cmpsl
xchg
mov
and
or
inc
std
cltd
jno
les
or
into
movsl
pop
adc
xlat
lret
and
test
dec
sub
jp
stos
ret
scas
es
arpl
xchg
hlt
or
es
push
out
addr16
pop
pop
cmp
sub
popf
cltd
fmull
aam
or
imul
cmc
mov
aam
mov
and
pushf
xlat
movsb
pop
aam
sub
sub
lcall
fcmovu
xchg
shr
fcmovnbe
outsb
inc
std
pop
xor
js
insb
adc
add
test
cs
pop
mov
lea
cmpsb
fidivrl
adc
setle
adc
jae
fsubrl
push
or
aaa
insb
xlat
mov
push
jle
sub
faddl
push
sti
pop
cmc
mov
jns
out
in
test
adc
ret
jo
imul
dec
fnstcw
pop
lcall
pop
int
jae
lret
adc
aad
and
push
lods
mov
and
cltd
and
push
pop
sahf
sbbb
leave
sub
mov
cltd
inc
decb
test
push
daa
lcall
xchg
pop
xchg
cmp
dec
jmp
sbb
into
sbb
insl
push
lret
lock
cmp
das
mov
inc
cs
dec
push
imul
adc
mov
inc
inc
adc
or
popf
test
dec
nop
div
mov
pop
mov
add
inc
popa
xor
xor
adc
scas
call
ret
bound
popf
icebp
ds
repnz
sbb
dec
loopne
outsb
mov
movsb
add
or
xchg
lahf
adcl
mov
out
outsl
lret
js
sahf
test
sbb
scas
gs
lea
cmpsl
cmpb
jo
sub
daa
lcall
jnp
jno
out
fdivr
xchg
in
pop
movsl
xchg
mov
or
out
mov
int
outsl
and
dec
dec
mov
inc
pop
sbb
adc
pop
in
inc
or
scas
int3
fnstcw
out
mov
pop
fiaddl
sbb
cmpsb
popa
and
push
shlb
jns
sub
addr16
mov
lock
rol
cmp
loope
and
xchg
cmp
mov
add
jg
stos
jle
fwait
pop
enter
hlt
mov
pop
addr16
test
gs
mov
and
and
mov
js
adc
xchg
lods
fdivrs
mov
rcrl
shrl
call
insb
xor
mov
add
jo
cld
cmp
and
setb
xchg
xor
inc
sti
cmc
inc
cmpsl
cmp
xchg
inc
shll
jne
xor
jne
lods
out
xchg
adc
jns
mov
in
add
aam
shl
jb
movsb
cmp
pop
lock
fistl
pop
sub
scas
inc
mov
add
into
gs
out
push
dec
push
push
jo
jle
test
fdivl
jp
lds
sub
pop
shrl
dec
nop
push
add
push
lahf
pop
sbb
dec
mov
fildll
adcl
cmp
mov
jmp
pop
xor
and
pop
add
mov
arpl
aaa
cld
mov
mov
push
jae
sahf
xor
cwtl
xchg
xchg
stc
pushf
xor
ret
sbbb
xchg
add
cs
jp
test
inc
xchg
cltd
mov
sbb
push
pop
xor
ret
pop
cmp
loope
push
xchg
jae
sub
hlt
call
stos
mov
imul
mov
andb
aad
adc
jmp
movsb
int
divl
inc
xor
insl
add
std
jp
lahf
mov
imul
sbb
xchg
fdivrl
or
push
add
mov
out
xor
pop
cmp
mov
int3
lret
rorl
xor
mov
out
cmp
jns
xor
je
adc
aam
mov
mov
into
lods
popa
aaa
pop
rorb
pop
fwait
lock
add
cmpsb
sub
decl
int3
xor
and
out
push
addr16
xchg
cs
pop
inc
pop
je
inc
pop
lock
mov
jp
inc
cmpsb
out
xor
stc
inc
daa
sbb
es
les
jb
cwtl
sub
out
mov
jmp
and
inc
jae
dec
pop
clc
js
sahf
cltd
std
xchg
add
fwait
in
aas
add
fwait
cmpsb
push
icebp
sbb
jnp
data16
dec
lds
jge
imul
xchg
xor
cli
xchg
fucomip
cmp
mov
aam
nop
aaa
push
adc
flds
addr16
sbb
lret
add
arpl
mov
add
cmpsl
out
jge
pusha
mov
cmc
mov
cltd
out
cld
adc
in
ret
and
sbb
mov
orl
scas
cmp
fisubrs
lods
jmp
loope
popf
mov
sbb
pop
ret
movsb
xor
nop
pop
std
pop
jmp
stc
nop
scas
test
lret
cld
push
ljmp
in
fs
movsl
mov
out
dec
popa
xor
bound
push
xlat
adc
push
in
jmp
cli
lock
and
push
cmp
das
movsb
sbb
inc
or
ja
fdivrs
sub
add
jb
out
pop
sub
pop
sub
clc
stos
aad
sub
mov
lret
jo
dec
jmp
jl
lahf
xor
xor
xor
mov
adc
mov
dec
mov
jae
inc
sub
xor
mov
dec
loop
ret
js
pop
in
jns
ret
into
fiaddl
mov
roll
jp
dec
lcall
sbb
cmp
int3
aad
int3
lahf
mov
cmpsb
cmp
adc
mov
add
jne
jae
fsubrs
pusha
pushf
stc
or
test
mov
inc
je
jmp
out
xor
ret
mul
dec
cli
pop
inc
xor
loope
jne
pop
push
push
xchg
inc
jp
test
fsubrl
jae
pop
mov
fdiv
testb
jno
xor
divl
jo
mov
push
fidivl
mov
xchg
adc
sub
aaa
leave
int
movsb
sbb
sub
mov
data16
addr16
mov
push
sahf
lods
aaa
rcr
push
in
addb
out
out
sub
subb
in
std
add
mov
jnp
mull
sub
fsts
xchg
and
ret
add
cmp
pop
repz
push
add
outsb
lahf
hlt
fsubr
clc
fwait
stc
ja
sub
in
sahf
pop
ficomps
mov
adc
sbb
and
mov
xchg
jmp
test
sub
insb
iret
fcmovnb
pop
pop
hlt
hlt
int
fdivs
jl
bound
fcoml
mov
fcomps
cmp
dec
loop
xorb
bound
xor
mov
cmp
inc
js
pop
jbe,pn
dec
pop
lret
popl
sub
daa
call
cmpsl
xor
cwtl
out
popa
int3
sahf
or
cmpsl
outsl
daa
mov
aas
mov
pop
pop
adc
push
dec
inc
lret
sahf
lea
int3
jne
push
pop
dec
sbb
lea
xor
idivl
jmp
mov
dec
aad
sbb
sbb
addl
nop
fldln2
fsubrs
jl
xor
jmp
mov
ret
icebp
std
hlt
addr16
pusha
popa
in
xor
sbb
xchg
sbb
pop
jnp
fimuls
leave
cmp
mov
loopne
mov
ret
pop
pop
inc
pushf
add
cmp
ds
and
jle
jno
push
lea
pop
clc
sahf
aas
xor
stos
imul
rorw
mov
mov
addr16
jbe
add
rcl
mov
jbe
mov
incb
jp
jae
sbb
pushf
dec
push
sti
fwait
sbb
lods
and
outsl
xchg
outsb
dec
clc
and
imul
leave
xlat
test
jbe
and
lcall
xor
inc
insb
ret
xchg
jle
pop
psrad
loope
mov
dec
rcrb
cmc
jnp
adc
mov
xor
cltd
push
push
mov
mov
stc
push
xchg
dec
mov
mov
mov
or
mov
jl
xor
fucomi
cmp
cltd
pop
das
xor
xchg
mov
lds
stos
lea
test
into
xorb
pop
movsb
pop
sub
not
mov
add
mov
fstl
lea
push
lock
cmp
push
mov
mov
lret
cmp
cmp
movsl
insb
inc
in
adcb
mov
movsl
xchg
cmp
xor
push
sbb
cs
into
or
jbe
ja
push
cwtl
xlat
mov
inc
test
and
cmp
or
arpl
mov
pop
pop
repnz
out
push
xor
lods
inc
imul
or
loope
loop
sahf
lods
dec
out
jmp
add
hlt
push
or
sub
jmp
je
gs
and
xchg
or
data16
jae
or
lcall
dec
inc
pop
jbe
push
jns
sub
push
fcompl
push
or
out
fidivrs
fs
dec
les
jo
pushf
add
movsl
enter
jl
ficomps
ficoms
faddl
jg
fwait
icebp
mov
cmpsb
mov
add
iret
xchg
js
cmp
lds
out
repz
or
mov
dec
sbbb
insl
push
insl
lahf
dec
lret
je
xor
cmp
jnp
popf
stos
mov
shrl
outsl
fiadds
push
addr16
cwtl
aaa
lods
inc
std
lret
into
test
jle
clc
sahf
and
dec
dec
inc
and
in
andps
inc
cmp
pop
ljmp
sub
xor
in
push
dec
outsb
sbb
ds
mov
mov
mov
int3
adc
xchg
push
out
jle
cmp
or
rolb
pop
fs
xor
call
mov
push
pop
and
scas
aam
lock
mov
movsl
imul
xchg
lea
xor
cmpsb
sbb
dec
pop
sub
movl
and
jbe
pop
nop
add
cmpsb
xor
aad
sti
inc
das
pop
imul
fs
pop
pop
sbb
cmp
add
or
sbb
fisubrs
sti
xchg
add
cmp
add
mov
or
shlb
sbb
add
pop
jne
pop
lds
xchg
mov
std
ss
sbb
fadds
push
and
pushf
xchg
and
or
xor
aad
jge
jno
push
inc
mov
fwait
sub
mov
js
add
arpl
arpl
jns
insl
sub
vandps
xor
or
add
adc
cwtl
mov
push
insb
mov
jg
bound
mov
xchg
js
movsl
pop
push
std
fs
adc
pop
andb
mov
jbe
cmpsl
addr16
mov
push
add
arpl
popa
mov
fsts
iret
and
cmc
enter
jl
dec
imul
push
pop
daa
mov
ret
pop
push
in
out
pop
sbb
imul
cli
or
divb
adcb
cmp
movsb
aas
xchg
daa
and
test
in
in
icebp
add
mov
inc
rolb
pusha
fcomps
sub
dec
adc
js
nop
loop
dec
pushf
dec
dec
test
iret
mov
mov
add
out
mov
cmpsl
loopne
jne
addb
imulb
sub
lock
ja
call
cmp
add
movb
cltd
pop
sbb
cmp
push
jl
or
xlat
sbb
xchg
fldcw
es
dec
push
inc
sti
pop
insl
aad
sbb
test
hlt
sub
xlat
pop
test
stc
jae
fsubs
dec
pop
adc
or
je
mov
repz
cmp
les
insb
rep
inc
or
ret
dec
push
dec
add
jne
xchg
scas
push
mov
mov
out
pop
scas
cld
imul
subl
jp
cmp
bound
fistpl
jp
inc
lods
cmp
cmp
pop
cmc
pop
fstpl
loop
fwait
jl
aad
movsb
jl
sti
xlat
repz
add
jg
ds
xchg
jl
inc
popa
loop
in
push
inc
repnz
es
fs
andb
fdivl
clc
mov
or
stos
mov
fldt
or
and
fabs
fwait
cmpsl
adc
mov
imul
cmpsl
movsb
mov
ljmp
pop
ret
mov
mov
jo
jmp
sub
out
sbb
cmpsb
ftst
pop
sti
adc
fldenv
pop
cmp
and
push
cmp
lods
push
rol
outsb
sub
or
mov
fmuls
arpl
stos
xor
js
fucomip
push
xor
mov
lds
jp
mov
or
add
gs
out
stos
aam
and
cmpsb
jno
xchg
mov
dec
xor
fwait
mov
js
aad
test
jo
shll
mov
rolb
les
sbb
aad
pop
fimull
mov
sti
dec
mov
xchg
cwtl
stos
mov
shlb
jp
and
std
lods
call
sbb
shlb
dec
dec
mov
test
jge
push
xor
jnp
mov
filds
mov
sahf
das
xchg
test
inc
loopne
les
sbb
mov
mov
imul
or
imul
ret
leave
cltd
sbb
test
repnz
jp
push
pop
rcrl
nop
mov
jge
bound
inc
xchg
test
bnd
push
test
mov
rcr
adc
mov
ds
and
fimull
or
fidivs
test
test
inc
add
mov
popa
pop
cmpsb
mov
sbb
sbb
test
rcrl
leave
fucom
add
jp
sbb
or
xor
xor
inc
fcomps
mov
inc
pusha
bts
aaa
and
inc
jecxz
inc
popa
clc
jb
in
test
sbb
ljmp
inc
fnstcw
fisubs
mov
daa
mov
leave
pop
jne
push
call
repnz
xchg
in
pop
out
cmp
movsb
pop
jno
pop
dec
ret
loop
clc
xchg
out
sub
negb
adc
pop
in
nop
clc
cmp
jnp
add
insl
popa
xor
inc
mov
sbb
imul
mov
idivl
ja
ret
movsl
push
and
and
pop
mov
in
cmp
js
adc
or
ja
dec
push
inc
add
xor
dec
dec
push
repz
cmpsb
sub
les
scas
jae
push
lcall
cwtl
sti
cld
jb
jae
cwtl
xor
sti
in
or
cld
xchg
xor
int3
loope
leave
pop
pusha
aas
and
roll
loope
pop
sahf
sbb
pop
shlb
into
adc
sbb
adc
dec
inc
push
out
iret
xchg
into
enter
out
cmpsl
out
push
lahf
neg
notl
jo,pt
in
lret
xlat
ja
cltd
std
fcompl
mov
push
mov
xchg
out
jg
pop
out
scas
xchg
sub
pop
mov
int
jo
inc
cwtl
dec
sti
add
into
popf
dec
ret
sbbl
mov
pop
popf
mov
clc
pushl
push
mov
out
test
mov
rclb
mov
and
dec
call
dec
test
hlt
int3
fcomps
sub
cld
pop
mov
dec
outsl
jle
fbld
cltd
repz
outsl
adc
jno
ret
dec
inc
adc
lcall
mov
xchg
and
pop
dec
dec
test
mov
adcb
les
adc
fbstp
jge
movsb
jne
adc
dec
outsl
sub
in
shl
mov
out
xor
jmp
jnp
idiv
inc
and
cs
dec
dec
add
lods
test
repnz
in
call
mov
mov
hlt
push
xlat
cmp
fnsave
es
cmpsb
outsb
test
test
or
mov
shl
pop
cmpl
pop
lahf
ss
sub
or
add
lcall
jl
cmp
adc
jg
repnz
cmc
repnz
or
icebp
jb
or
mov
adc
hlt
pop
hlt
sti
xchg
mov
clc
inc
lcall
lods
stos
xor
add
pop
fldcw
int
addb
adc
pop
mov
mov
cmp
push
fcmovbe
cmc
sbb
xor
gs
into
test
stos
or
adc
leave
inc
fwait
cli
xor
adc
cwtl
push
mov
add
fimull
mov
shrb
test
mov
xor
aad
nop
stc
sub
fidivs
xor
jg
jl
adcl
inc
push
xchg
cmc
stos
outsl
jns
push
sbb
cwtl
data16
push
popa
xchg
xlat
jle
mov
imul
sarb
movsb
rclb
jnp
adc
jecxz
inc
inc
fsubrp
cld
lcall
cwtl
push
mov
push
shlb
mov
sbb
push
xchg
movsb
xchg
ja
jno
inc
and
stos
js
xchg
inc
mov
xchg
nop
sbb
faddl
cs
ss
push
movsb
sti
shll
push
aaa
mov
pop
sub
stos
inc
shlb
insb
js
inc
int
push
inc
faddl
and
sub
bound
jl
add
xchg
daa
mov
sbbb
or
pop
push
arpl
test
cmpl
lods
pop
mov
jmp
or
pop
daa
addl
pop
pop
mov
or
pop
jmp
push
sbb
rcr
xchg
daa
clc
std
pop
in
push
pusha
mov
pop
mov
xchg
shr
mov
ljmp
mov
fbld
and
sub
xchg
mov
pop
movsb
xor
jbe
lret
push
jmp
xchg
daa
adc
add
and
addb
int
mov
fucomip
push
or
lods
arpl
loope
sub
jno
adc
xchg
sahf
inc
les
sub
inc
call
pop
push
mov
enter
out
mov
push
test
mov
mov
outsl
stos
mov
ffreep
mov
test
and
adc
jecxz
mov
movsb
sbb
outsl
mov
imul
rorb
popf
lods
fwait
push
or
sbb
into
jb
sahf
push
xlat
sbb
push
sbb
fmull
inc
cltd
dec
data16
cmp
push
sub
adc
pushf
enter
xchg
std
outsl
add
cmpsb
dec
loopne
or
lock
mov
dec
and
lret
shrb
add
es
sbb
imul
movsb
mov
fs
mov
loop
sbb
push
push
sub
inc
push
dec
mov
pop
xor
cmp
les
jbe
xor
xor
test
or
test
int
dec
scas
and
xchg
pushf
add
mov
in
and
xchg
push
aad
lcall
inc
mov
xchg
lock
cmp
mov
and
inc
mov
xchg
push
sahf
inc
pop
les
pop
mov
xor
cmp
pusha
dec
push
stc
add
mov
add
sti
or
mov
fcmovnb
xor
int3
mov
shll
cs
loop
sbb
cs
out
inc
lahf
jge
test
gs
decl
push
add
es
pusha
xlat
and
add
das
cltd
or
bound
mov
rcl
rcl
pop
aaa
pop
push
xlat
and
icebp
add
leave
mov
jb
pop
jbe
lods
ljmp
xor
jno
clc
or
lods
sbb
insl
xor
jnp
xor
xchg
fsub
push
divb
push
push
cmp
mov
jg
lds
mov
testl
nop
inc
sub
ret
push
rolb
xchg
loopne
mov
aam
sbb
pop
sar
cmpsl
fucomip
pop
mov
cmc
js
add
or
or
jge
lock
lcall
data16
push
cmpsl
loop
and
out
or
mov
sbb
mov
mov
add
sub
cmp
bound
aas
pop
clc
fsubs
movsl
imulb
sub
scas
push
dec
stos
inc
arpl
inc
fwait
jg
stc
xlat
xchg
mov
mov
mov
pop
mov
loopne
mov
mov
outsl
cs
outsl
clc
ret
repz
jl
and
fcompl
xchg
mov
js
adc
arpl
movsb
sbb
xor
sbb
jge
mov
xor
or
sub
test
jbe
mov
hlt
push
pusha
insl
inc
ret
ret
ss
xchg
call
jmp
out
lea
scas
or
push
push
mov
xor
pop
jne
mov
and
lds
push
or
mov
xchg
scas
dec
in
imul
dec
fwait
pushf
outsl
inc
shr
rorl
push
and
cmpsl
les
test
xor
movsb
test
shl
out
ss
sub
lcall
adc
inc
or
mov
pop
mul
test
xor
flds
cmovle
sti
mov
mov
push
movsl
add
out
sub
push
in
sbb
test
pop
push
std
bound
add
das
cmpsb
cmp
jg
les
loope
aad
pop
movl
mov
rolb
mov
add
loope
add
call
inc
lcall
sbb
scas
dec
jnp
in
cmpsb
xchg
notl
mov
out
xor
adc
in
push
movsl
push
add
push
jnp
and
cmpsb
sub
xlat
dec
aam
lock
dec
sahf
movsb
fdivrl
popa
stos
and
push
pop
mov
xchg
and
mov
roll
cs
ds
cltd
sbb
cmp
mov
or
mov
mov
or
add
aad
push
jae
mov
scas
adc
in
mov
push
in
nop
pop
xchg
loope
lret
jge
imul
mov
sub
fidivs
cmc
ds
add
rcl
aaa
jb
lods
movsb
mov
fsub
dec
fcmovbe
jbe
push
sub
adc
lcall
xchg
stos
cltd
push
push
call
pop
xor
mov
sub
dec
pop
xchg
or
scas
mov
fs
cwtl
scas
sbb
mov
out
pop
xor
das
popf
mov
xchg
cld
fistps
jo
cmp
mov
push
fsubrs
movl
jge
xchg
dec
int3
dec
enter
jae
or
stos
fsts
mov
cmovae
out
or
pop
jg
jl
dec
lahf
cmp
xchg
inc
sub
xchg
shll
push
lcall
fcoms
dec
bnd
pushf
xor
xchg
mov
jmp
sbb
into
add
vpor
dec
jecxz
je
xor
add
xor
xchg
xorl
or
xor
mov
jns
aad
sti
popl
in
and
or
pushf
inc
dec
cmpsb
lret
addl
mov
pop
jp
add
dec
sbb
push
jo
cltd
pusha
mov
lds
lds
jns
hlt
scas
and
push
std
pop
ljmp
mov
leave
cmc
inc
push
cmp
cmp
aas
xchg
bound
aam
sub
add
mov
mov
rcll
adc
sub
nop
shlb
pop
je
add
xchg
sbb
and
pusha
pop
add
mov
rolb
adc
cmp
enter
sbb
lret
fsubr
clc
repz
jns
int
push
cmp
in
test
es
add
dec
pop
push
out
mov
mov
pop
cmpsl
nop
fisubrs
push
sbb
in
movsl
jnp
cltd
lods
push
jmp
andl
enter
mov
int3
xchg
xchg
push
filds
movsb
push
fisttpl
in
std
shrb
mov
jecxz
shlb
mov
and
out
inc
cmp
push
ljmp
push
and
lods
popa
jg
xor
dec
fnsave
daa
mov
test
or
sbb
outsb
test
adc
addr16
jg
out
leave
xchg
pop
pop
jmp
mov
dec
bound
in
sub
lret
scas
repz
jg
icebp
sub
push
push
or
dec
pushf
xor
mov
xlat
mov
dec
mov
push
inc
sbb
int
push
cmc
fwait
xor
hlt
mov
pop
add
into
jge
divl
pop
add
adc
cmp
fdivl
or
das
std
pop
mov
orb
iret
push
or
test
pop
xchg
jle
lods
not
aad
jbe
aaa
push
pop
xor
dec
dec
fisubrl
daa
outsl
and
inc
in
dec
mov
lahf
rorl
and
lods
inc
sub
inc
sub
es
xchg
jb
add
jmp
sbb
xor
mov
into
jbe
sbb
aam
pop
and
inc
or
mov
add
sub
xchg
push
movsl
das
mov
insb
insl
imul
jnp
aam
sbb
test
mov
shlb
ret
fnstenv
adc
fldcw
sbb
cmp
fisubrs
pop
ret
lds
data16
in
incl
out
xchg
or
fisttpl
push
pop
gs
push
push
xor
or
cmp
imul
in
stc
sub
add
test
push
cs
mov
push
mov
sbb
mov
add
fisubs
and
jg
mov
dec
imul
and
popa
xor
xor
fucomi
jno
xchg
cmp
sbb
pop
adc
dec
stos
inc
sbb
dec
xor
ret
jge
outsl
mov
insl
pushf
mov
bound
push
or
jmp
mov
add
dec
xchg
push
out
xchg
sbb
aad
mov
jnp
jg
test
ja
mov
or
movsb
mov
ret
pushl
dec
mov
lret
push
push
jecxz
outsl
add
fisubrs
iret
cwtl
xor
sub
sub
fldt
in
cmp
ss
pxor
dec
inc
adc
adc
or
xchg
xchg
arpl
mov
fs
cmp
test
jno
lods
adc
jp
and
iret
fs
fimuls
arpl
cmp
insl
sahf
xchg
scas
jmp
mov
out
jb
jne
cmp
push
cltd
mov
or
aas
and
or
cmc
mov
adc
xor
push
ret
ret
push
inc
rorl
inc
idiv
dec
inc
mov
fsub
das
aas
ret
negl
jp
fsubrp
sbb
call
sbb
dec
out
push
add
pop
adc
cmp
ja
stc
lcall
cmp
push
fwait
inc
fstpt
jle
fbstp
shll
ljmp
adc
mov
test
inc
sbb
mov
xor
cmp
push
movsl
xor
and
outsl
outsl
lods
mov
cmp
cmpsb
popa
mov
add
dec
test
xlat
cmpsb
jge
push
lretw
add
xchg
clc
es
scas
jp
out
dec
in
xor
mov
push
dec
xchg
dec
mov
pop
jns
xor
lret
pop
adc
sarl
lds
and
push
mov
andps
xor
iret
outsb
loope
jg
pusha
mov
insb
ds
mov
mov
jmp
push
loope
sbb
push
xchg
mov
inc
xchg
in
and
xchg
bt
out
sub
outsb
push
jge
imul
jnp
jl
jbe
jmp
and
sbb
mov
gs
mov
loopne
jp
or
cmp
test
lock
lahf
inc
push
inc
negb
and
mov
mov
push
mov
or
rdmsr
mov
jno
xor
enter
pushf
bound
mov
adc
nop
xchg
jl
dec
xchg
insb
in
fistpll
mov
std
pop
and
mov
movsb
pop
jl
ret
aad
pop
mov
jmp
aas
sub
add
inc
pop
fists
push
in
inc
add
inc
ficompl
or
sub
add
cmpb
add
in
and
pop
ljmp
or
ret
hlt
loope
xor
and
stos
arpl
fistpll
pop
test
rolb
inc
out
or
cmp
dec
clc
sub
loopne
cwtl
dec
inc
push
cwtl
cmc
out
cs
pop
sbb
push
fwait
add
iret
adc
xor
mov
sbb
pop
sbb
test
mov
jae
ljmp
or
jnp
xor
push
mov
into
mov
sub
sbb
push
xorl
mov
xor
arpl
lret
mov
mov
ret
iret
fimuls
mov
adc
cli
or
jecxz
cli
mov
sbb
sub
andl
mov
loope
ret
adc
pushf
xor
dec
mov
jl
daa
jl
pop
mov
inc
adc
xchg
and
sbb
or
sub
inc
inc
ret
jnp
or
mov
xlat
fdivrs
mov
push
pop
or
mov
shr
test
scas
xor
and
add
std
add
xor
fdivrl
cltd
gs
inc
mov
push
push
in
dec
and
or
push
sbb
ret
pop
cmpsl
out
add
pop
bnd
add
or
lds
cmp
jecxz
sub
orb
inc
sets
push
dec
scas
cmp
mov
jb
sub
es
adc
enter
xor
sti
addr16
xor
stos
andb
jo
and
inc
sub
in
mov
dec
outsl
ds
add
or
test
arpl
push
dec
add
mov
cmpsb
ja
iret
aaa
push
add
lcall
data16
sarb
mov
pusha
inc
mov
scas
shrl
adc
dec
mov
jno
adc
cmp
pop
sahf
lods
adc
and
jno
orb
mov
inc
pushf
pop
cwtl
loopne
fcompl
shll
jge
mov
adc
lcall
push
jg
popl
mov
orb
mov
lock
and
inc
xor
jae
out
icebp
inc
outsb
add
push
arpl
pop
test
shr
push
aad
or
mov
cmpsb
insl
xlat
mov
push
jno
fwait
push
sahf
jmp
dec
dec
les
push
repnz
test
adc
add
lea
push
int3
das
dec
mov
stc
sbb
inc
and
in
push
jecxz
xchg
and
sub
inc
cmpsb
imul
jb
loope
mov
inc
sbb
mov
popf
add
and
and
jecxz
and
adc
sti
insb
lret
jno
jmp
aaa
mov
push
lea
mov
dec
clc
stos
hlt
idivb
xchg
sahf
or
lahf
call
and
int3
xlat
sbb
pop
hlt
inc
movsb
mov
dec
push
arpl
or
push
sbb
loop
movsl
sbb
xchg
scas
push
aam
xchg
call
in
sub
adc
ret
mov
es
sarl
fcoml
xor
push
mov
call
enter
mov
rorl
jg
mov
and
xchg
push
and
mov
in
jbe
mov
in
push
shl
arpl
mov
push
addr16
adc
lea
cmpsb
and
ljmp
lret
jnp
pop
adc
sbb
xchg
push
bound
lds
daa
lcall
xor
imul
or
or
cmp
imulb
mov
jo
jmp
faddl
test
inc
push
push
mov
outsb
aad
push
pop
mov
dec
inc
push
lret
pop
ds
imul
mov
mov
scas
mov
test
test
pop
xor
xor
xchg
mov
push
add
jp
sub
lock
jmp
and
jno
dec
cmpb
cmpsl
and
jne
xchg
push
movsb
jns
mov
popa
stc
call
or
ja
in
sbb
fldt
jp
mov
or
movsb
and
cmp
mov
sub
hlt
mov
nop
in
cwtl
pop
push
mov
jg
sbb
jbe
push
push
jo
pop
xchg
push
push
scas
fisttpll
mov
sahf
les
es
push
bound
outsb
lds
hlt
dec
loop
dec
lock
mov
pop
push
xchg
imul
loope
and
in
ficoms
jae
fdivrl
insb
xchg
jecxz
call
push
adc
mov
push
cmp
call
pop
cmp
ds
call
in
dec
aaa
or
add
push
push
inc
push
fisubrl
movsl
loopnew
jne
sub
outsl
and
cmp
in
inc
rolb
mov
rcrl
enter
pop
movsl
adc
fldt
xchg
mov
adc
push
pop
lcall
insl
enter
inc
push
mov
in
inc
xchg
xchg
sbb
loopne
dec
iret
cs
jnp
movsb
push
jb
pminub
in
inc
jo
lods
mov
ret
outsb
les
adc
ret
xlat
sbb
cs
fadds
mov
lret
jae
jge
stc
ss
popf
fwait
jmp
jle
sarb
jae
cmp
pop
mov
aas
mov
in
cmp
pop
inc
ja
dec
xor
cmp
mov
mov
rcrb
xor
inc
push
aaa
dec
xchg
mov
andl
out
pop
bound
je
push
mov
fidivl
sub
sbb
shl
xor
pusha
inc
mov
xorb
into
add
fcoml
or
cwtl
inc
or
add
adc
and
in
out
sub
push
test
cld
xchg
imul
lock
sbb
xor
push
push
push
cli
inc
pop
xchg
sub
pop
mov
sub
mov
adc
mov
fsubrs
mov
movsb
cwtl
sbb
ret
sbb
jnp
daa
fwait
dec
imul
std
and
push
lret
jbe
in
mov
mov
mov
rcrb
mov
xlat
repz
xor
aam
adc
out
lock
rorl
sbbl
push
jmp
pop
inc
sub
mov
test
std
xchg
test
icebp
repnz
inc
push
scas
cld
cmp
mov
call
mov
rcll
not
jnp
sahf
das
dec
cltd
push
pop
push
xor
idivl
xchg
movsb
in
push
sub
ret
and
xchg
insl
dec
mov
rorb
jle
push
movsb
mov
lcall
mov
mov
int
adc
inc
fidivl
pop
mov
iret
shll
mov
jg
pop
pop
push
mov
aad
and
dec
aad
std
adc
test
sub
jg
sbb
fldcw
inc
fnstenv
mov
test
js
fnstsw
dec
xor
fcom
inc
lea
out
cli
sbb
aad
shl
push
sahf
adc
inc
push
dec
dec
pushf
repz
shr
and
adc
pop
xchg
mov
mov
test
mov
or
cltd
jl
fdivs
mov
jno
in
xor
sbb
insl
dec
ljmp
test
rcll
repnz
leave
std
or
cmp
dec
pop
cmp
pop
lret
cmp
add
and
mov
xlat
cmp
inc
popa
adc
and
dec
mov
and
out
stc
test
adc
fwait
or
inc
aad
cmpl
js
aad
nop
mov
dec
bound
addr16
sarb
ror
push
push
in
orb
mov
mov
and
bound
stc
inc
mov
repnz
lret
int3
cmpb
jne
pop
rol
arpl
xchg
movsb
je
cmpsl
sub
out
add
hlt
dec
sbb
cltd
cli
push
rcll
pop
or
adc
clc
inc
fdivl
ret
fstpl
mov
daa
sub
or
imul
sahf
jle
inc
jnp
sub
inc
or
xor
imul
js
cmpsl
pop
clc
push
jmp
and
hlt
pop
in
ficoms
das
lods
push
sub
outsl
dec
mov
push
fs
movsl
and
dec
rcrb
pop
push
add
or
sbb
inc
lcall
inc
lcall
cmp
add
mov
dec
stos
mov
lods
mov
lods
aas
jo
out
sti
sub
add
in
xchg
mov
shlb
lret
repnz
loop
test
pop
cmc
push
repz
enter
pop
icebp
call
aas
push
aaa
push
lods
iret
inc
sbb
adc
mov
fwait
xchg
sub
lods
lcall
adc
xchg
test
sub
inc
sub
add
bound
mov
jl
dec
mov
push
cwtl
shr
jge
out
mov
scas
xchg
jb
sbb
jge
cltd
mov
sub
gs
add
xchg
das
pop
mov
push
pop
cmp
mov
stos
adc
adc
lds
jecxz
cld
pop
orb
icebp
cs
pop
or
pushf
xor
pop
int3
xchg
dec
dec
clc
mov
out
andl
mov
ret
imull
pop
add
imulb
inc
mov
mov
addr16
cmp
mov
js
mov
mov
ds
lods
imul
pop
icebp
sub
mov
lods
xor
mov
jae
dec
mov
stos
mov
mov
fisttpl
js
and
push
pop
cmp
xchg
jp
mov
dec
mov
jge
bound
in
pop
scas
inc
jnp
jnp
arpl
idivl
adc
insl
in
jae
test
mov
jp
pop
lods
cmp
movsb
jg
icebp
scas
push
int
jecxz
lret
insl
add
mov
push
mov
jne
adc
sub
jmp
sarl
jg
add
mov
jge
inc
test
sbb
jp
add
or
sbb
nopl
into
lahf
jne
pop
jno
adc
push
je
je
mov
leave
and
push
test
cmp
filds
mov
jnp
push
xchg
lods
mov
dec
imul
subl
cmp
xchg
insl
jae
sbb
das
mov
mov
int3
test
scas
sbb
inc
cmp
jae
dec
mov
mov
je
fsubs
and
cmp
popf
jle
loope
jp
repz
sub
mov
pushf
ficoms
sbb
fwait
sbb
cld
pop
cmpsl
and
js
popf
sub
sbb
jmp
popf
pop
sub
fucomip
push
jmp
cmc
rcll
pop
in
jne
lea
addr16
sahf
mov
and
pop
push
pop
push
outsl
nop
or
push
ret
fcmovb
das
rclb
shlb
mov
dec
in
test
adc
aam
add
testl
hlt
or
js
inc
and
push
inc
jo
fs
jo
std
mov
pop
lret
int3
out
mov
or
gs
and
push
xor
test
adc
push
daa
jge
insl
in
jl
fisttpll
stos
fs
pop
lret
lret
xchg
lds
mov
inc
xlat
mov
push
or
aaa
pop
out
jbe
jmp
ljmp
data16
test
jle
bound
jp
inc
imul
inc
in
adc
test
inc
movsl
push
lods
mov
popf
daa
or
std
iret
mov
cmp
jb
mov
and
aas
inc
xor
dec
int
jge
repz
cmpsb
mov
jge
fiaddl
push
or
xor
add
pop
cmovno
mov
xor
push
push
inc
push
dec
dec
jb
xor
sbb
mov
jg
and
mov
sub
xchg
bound
add
sub
daa
xchg
out
xchg
int
pop
or
sub
bt
outsb
aad
adc
dec
sub
jmp
jb
or
shrl
outsb
imul
xchg
test
add
popf
xlat
addr16
sbb
sbb
cld
stos
pop
scas
pop
int
call
cwtl
or
lods
orb
fbld
into
lahf
cmp
in
js
add
lahf
loop
dec
mov
adc
jne
in
inc
pop
add
push
roll
lcall
adc
sbb
mov
dec
fstl
cmpsl
ja
ficoml
cmpl
aad
xchg
inc
bound
and
xchg
inc
xlat
cmp
pop
insb
nop
adc
cltd
sub
sub
sub
add
pop
cmpsl
and
push
cld
push
mov
adc
xchg
ja
cltd
es
fidivl
lret
ja
push
pop
inc
mov
sbb
scas
sbb
push
test
les
loope
xchg
mov
mov
jle
push
scas
out
mov
orb
fidivl
fbld
adc
idiv
addl
imul
lods
imul
daa
bound
fwait
pop
iret
jnp
push
xchg
add
cltd
xor
mov
ret
push
in
clc
cmpsl
jns
jge
inc
inc
dec
cmpsb
cld
inc
and
iret
popf
xchg
pop
sbb
inc
push
enter
shlb
dec
xchg
cltd
push
outsb
xor
movsl
test
jne
inc
das
notb
sbbb
mov
mov
or
jb
rorb
mov
push
cmp
das
push
hlt
inc
stos
ss
shll
popf
into
ss
mov
inc
jo
hlt
rcrl
push
mov
xlat
sbb
mov
mov
or
pop
inc
or
in
lcall
push
adc
and
ds
xor
and
mov
nop
xchg
xor
aad
sbbb
push
mov
push
adc
lods
mov
xchg
or
movsl
inc
stc
cli
mulb
lcall
dec
pop
ljmp
arpl
mov
into
mov
sarl
sub
mov
dec
imulb
mov
stos
jbe
sbb
fldenv
mov
xchg
cmp
and
icebp
mov
add
pop
adc
test
lea
sti
mov
repz
xor
cltd
sub
sbb
push
lods
mov
mov
jmp
jmp
loop
push
inc
fs
pop
adc
mov
sbb
leave
lahf
ficoms
push
mov
subb
push
repnz
sbb
mov
pusha
repnz
pop
clc
imul
js
cmpsb
mov
cltd
test
test
adc
cli
pop
or
jae
jbe
mov
add
fstps
sub
andl
add
jle
and
stos
mov
movsb
sbb
sbb
dec
mulb
ret
dec
mov
iret
push
pop
lret
and
pop
mov
pop
cmpsl
or
daa
add
mov
jb
lock
inc
push
fnsave
dec
gs
jp
mov
sub
cs
dec
mov
nop
xchg
outsl
dec
out
addl
in
add
mov
loopne
mov
mov
iret
sbb
std
or
jle
inc
shlb
dec
or
xchg
mov
push
mov
outsb
mov
push
dec
dec
shrl
sahf
clc
jne
rorb
popl
enter
lcall
or
mov
loopne
fisubrs
add
cld
ret
cmp
jo
in
sbb
out
bound
sbb
cmp
push
pop
adc
adc
addr16
mov
cmp
js
dec
pushf
adcb
aad
xchg
leave
bound
cmpsl
pop
cmp
stc
jo
sub
adc
rorb
dec
inc
flds
lahf
leave
cwtl
pop
jb
pusha
int
jae
mov
lock
scas
cli
addr16
mov
adcb
pop
pusha
inc
jnp
rcr
movsl
pop
add
jmp
mov
iret
nop
add
mov
xor
or
dec
cmp
testb
sub
scas
cmp
pop
jno
pop
ss
lahf
in
pusha
pop
sub
inc
test
jne
stos
fiaddl
iret
adc
fadd
fwait
add
bound
xor
dec
push
jae
push
jge
nop
lods
shll
add
xchg
inc
popa
fisttpll
mov
lods
sub
out
mov
jge
jae
test
adc
add
pop
xchg
stos
sbb
jne
xchg
jle
je
shrb
popa
jl
push
or
fsts
mov
cmp
or
ror
fldcw
mov
and
scas
push
pop
cmp
mov
aaa
icebp
mov
push
or
dec
lods
scas
mov
ss
adc
jne
mov
xor
dec
pushf
dec
xlat
jne
mov
jmp
lret
pop
mov
clc
xorb
or
mov
mov
inc
xchg
adc
add
aad
push
into
mov
jnp
jbe
loop
adcb
ret
xor
jo
idivb
adc
sub
xchg
inc
enter
pop
xor
xor
icebp
imulb
mov
test
jno
and
mov
and
fstps
in
add
mov
test
stc
sbb
cmp
mulb
daa
push
cltd
cmp
outsb
fcmovnbe
pushf
sub
jns
in
int3
mov
bound
push
in
jnp
call
and
mov
loope
popf
sbb
xor
pop
inc
fstl
pop
cmp
push
xlat
scas
ds
inc
out
bound
shll
inc
and
fisttpll
es
fwait
sub
mov
stos
out
das
movsl
sbb
adc
mov
fnstcw
push
loopne
pushf
push
dec
mov
cmc
mov
lret
in
pop
lea
pushf
mov
jb
ds
pop
push
xchg
jl
das
inc
dec
fsubrl
rcll
ret
and
sub
jne
subb
pop
lds
adc
int3
pop
gs
or
inc
fwait
sbb
and
xchg
pop
mov
adc
jno
cmp
add
jmp
jge
dec
lret
and
inc
push
inc
jne
test
fsubrl
pusha
loop
nop
push
push
mov
das
mov
fisubs
sub
inc
sub
out
adc
ror
jo
push
mov
loope
mov
mov
push
dec
lcall
mov
aam
daa
xchg
mov
les
inc
lret
dec
notl
int
xchg
daa
sub
or
xchg
add
test
loop
add
mov
sub
and
push
add
xlat
mov
shll
loop
push
fwait
divl
sbb
into
out
cmp
pop
push
sub
imul
mov
imul
push
mov
fcoms
jo
or
cmp
jecxz
push
adc
adc
repnz
leave
scas
in
in
sub
mov
shl
scas
jle
iret
adc
out
int3
sbb
xlat
dec
clc
aam
mov
dec
push
cmp
fnstenv
dec
in
jge
adc
push
in
stc
cmp
mov
xor
enter
xor
pushf
cli
ret
xor
jecxz
sbb
test
xor
out
mov
push
add
insl
mov
lcall
in
ret
mov
imul
loop
jmp
jge
sbb
adc
push
cmp
lret
lret
sub
mov
mov
filds
push
jbe
xchg
mov
das
stos
xor
xchg
es
cmpsl
cmp
in
cmp
inc
dec
div
mov
xor
cmc
loop
test
mov
outsb
xchg
xchg
lods
push
mov
fistpl
push
jl
stc
jg
xchg
pop
push
imul
sbbb
mov
addb
sbb
and
jo
popf
inc
call
mov
lods
gs
mov
mov
add
mov
inc
cmc
sbb
out
sbb
push
nop
enter
xor
mov
cmp
inc
fidivs
dec
sbb
mov
outsl
mov
cmc
mov
push
mov
smsw
aaa
xchg
fs
xchg
push
and
push
or
sti
shl
pop
movsl
icebp
rorl
je
clc
xchg
xor
pop
cld
inc
jp
ljmp
pop
fucomi
nop
inc
pop
xchg
out
lea
add
and
lret
dec
sbb
inc
jmp
or
enter
inc
fimull
out
packuswb
mov
stc
shrl
rorl
mov
das
push
xor
inc
mov
cwtl
push
addr16
pop
stos
in
mov
inc
call
sti
push
iret
fs
sbb
mov
inc
push
jl
mov
push
pop
pop
push
and
mov
ljmp
cmc
ds
shl
arpl
jae
and
sbb
insb
fidivrs
xchg
or
jno
fisubrl
std
xchg
aam
mov
add
push
mov
add
dec
stc
pusha
sbb
mov
and
dec
fabs
xor
fidivs
push
jne
or
mov
sti
dec
mov
push
outsl
sub
outsl
inc
ja
mov
cmp
repnz
outsl
mull
daa
lods
jle
aad
cmp
push
fdivrl
mov
mov
pop
adc
mov
stc
js
mov
int
push
aam
jns
test
int
cmp
pop
aad
and
fisttpl
mov
mov
stos
pop
test
xchg
jb
loop
adc
mov
mov
add
repz
testl
sbb
jno
inc
lods
cs
pop
mov
sbb
stos
scas
or
rorl
fwait
mov
sbb
repnz
mov
xor
xchg
stc
ret
data16
xor
insb
fs
and
outsl
push
rorl
pop
addr16
xchg
pop
test
dec
add
xlat
mov
and
push
push
fisubl
stc
mov
call
testb
jle
das
add
pop
cwtl
andb
fcmovu
mov
fadd
sti
xchg
and
ljmp
jae
repz
mov
fidivs
mov
sarb
dec
lds
lods
add
or
or
fidivs
fists
jmp
lret
cmp
or
mov
in
test
pop
ds
es
jb
repnz
mov
pop
or
out
loope
sub
maskmovq
notl
xor
xor
inc
icebp
and
jmp
fs
sbb
push
mov
divl
mov
repz
nop
jmp
jae
pop
pop
cmp
mov
dec
pushf
jnp
mov
lea
ds
into
negb
jge
or
mov
out
cmpsl
cmpsb
hlt
adc
lds
adc
ficomps
jne
out
xchg
mov
jecxz
cltd
daa
mov
testl
inc
mov
push
test
jg
push
dec
push
ljmp
jno
sbb
add
sarb
jge
mov
sbb
mov
out
sbbb
pop
in
xor
pusha
lods
test
scas
xor
xor
aam
into
lcall
stc
adc
test
ficoms
add
cld
jns
jo
or
mov
or
pminub
enter
repnz
or
jmpw
mov
jmp
pop
pushf
movntq
icebp
inc
xlat
and
ja
decb
pop
idivb
and
cmpsl
lea
mov
jnp
lcall
mov
fiaddl
lret
mov
or
rep
pop
icebp
dec
add
lret
and
xchg
xor
cs
sahf
insb
mull
push
push
rcrl
ss
mov
push
inc
push
cwtl
mov
aas
xor
dec
pushaw
repz
cmpsl
arpl
les
push
rcll
aaa
dec
pop
loop
leave
xor
cmpsl
ds
add
popa
or
or
testl
sub
and
dec
dec
cmp
cmp
popf
imul
and
inc
push
inc
xchg
repz
mov
xor
push
jbe
cmpsl
test
dec
ds
jb
test
in
nop
sub
xor
or
dec
in
mov
jae
add
pop
adc
cmp
cmp
in
cmpb
repz
dec
add
mov
or
daa
sbb
mov
pop
add
pop
cld
dec
popf
lock
leave
popf
mov
jge
pop
dec
push
inc
push
or
adc
mov
or
xor
rol
pop
add
xchg
jns,pn
nop
push
loope
scas
add
das
xchg
imul
in
cmp
bound
fbstp
add
xor
lea
add
xor
pop
push
jnp
adc
adc
add
inc
mov
cmc
cmp
pop
jnp
jl
insb
mov
pop
and
test
mov
inc
dec
lock
lret
dec
adc
and
xchg
push
xor
movsl
cmpsb
push
sahf
jbe
mov
mov
dec
xor
cmp
xchg
aaa
inc
fs
and
xchg
inc
dec
repnz
andl
les
inc
ret
xchg
scas
mov
and
xchg
jb
movsl
pop
add
fnsave
out
fdivr
cld
xchg
xor
enter
sbb
sar
loop
imul
iret
mov
xor
add
cwtl
xor
enter
gs
push
fld
inc
adc
xchg
sub
bound
lret
into
jmp
jmp
or
mov
mov
lret
pop
xchg
lods
adc
cmp
aad
xor
mov
int3
xlat
mov
mov
aas
xchg
adc
cli
xchg
loop
mov
repz
sub
cli
sti
xchg
outsb
iret
dec
shlb
faddp
or
bound
adc
push
mov
arpl
cmpsb
out
xchg
repz
adc
mov
jmp
nop
xchg
mov
cmpsb
inc
arpl
push
stos
ss
cmc
es
test
mov
jns
or
fstpl
dec
add
inc
mov
dec
or
jl
push
jno
ljmp
mov
xor
jp
mov
lea
fcoms
mov
push
sub
and
add
fiadds
push
nop
pop
lret
sbb
inc
out
mov
repz
jns
cltd
pop
mov
jne
sti
in
cmp
add
jnp
xor
cli
xor
mov
inc
pop
cmpsl
jge
andb
and
dec
dec
mov
fwait
cmp
cmp
push
sbb
cmpsb
cmp
push
leave
sub
pop
mov
das
fwait
mov
pop
aam
xor
aaa
sarb
in
and
aad
xchg
pusha
sub
pop
lret
push
fidivl
in
lods
out
inc
aam
add
mov
xchg
push
pop
xchg
out
jl
pop
pop
adc
inc
cmovo
push
xor
orl
sub
cmp
sti
jg
pop
ret
std
mov
push
outsb
ds
jns
mov
int3
jnp
xchg
imul
aam
pop
repnz
sti
or
daa
cmp
lret
loope
pop
mov
rcrl
pop
push
or
popa
mov
pop
pop
and
push
jmp
add
aad
pop
call
push
inc
pop
jbe
dec
les
insl
add
mov
jb
scas
in
fdecstp
imul
std
dec
add
jg
clc
pop
jno
and
outsl
cmp
push
aas
mov
out
mov
out
cld
ds
aaa
xor
push
xor
fidivrs
or
jne
fwait
movsl
in
idivl
dec
aaa
fwait
cmpsl
xchg
cmp
push
mov
cmp
or
sub
jl
inc
pop
aam
dec
mov
and
push
aad
bound
or
sbb
iret
jb
in
cmc
loope
addb
out
test
jnp
mov
int
int
dec
and
inc
mov
sbb
pop
je
shll
lcall
inc
outsb
mov
iret
push
and
iret
cmpsb
and
dec
push
ret
xchg
sub
jbe
pop
test
pop
out
jecxz
mov
adc
lds
inc
fldenv
dec
pusha
fldt
push
rcll
mov
dec
out
pop
cmp
nop
insl
adc
pop
inc
or
pushf
push
outsl
lret
and
out
mov
cwtl
out
sahf
daa
xchg
or
iret
and
mov
in
out
in
add
pop
cmpsb
daa
dec
push
or
sub
cmp
bound
mov
push
sarb
int3
inc
ja
mov
in
dec
mov
inc
and
jp
xchg
xor
movsb
test
fsubrp
mov
xor
and
sbb
jns
test
movsb
bound
hlt
lea
inc
dec
sbb
sahf
xor
loopne
and
add
inc
mov
xlat
mov
les
mov
popa
ret
sbb
push
inc
and
out
inc
cltd
xchg
ja
cmp
mov
andb
ja
jno
ss
push
lods
fdivrl
push
adc
ds
outsl
pushf
cltd
mul
add
lret
es
mov
and
int3
aad
lods
pop
icebp
xor
and
idivb
daa
ljmp
inc
xor
push
mul
mov
dec
out
mov
and
pushf
das
cmp
adc
jl
sub
mov
and
xchg
testl
out
add
js
xor
das
jmp
mov
xor
or
mov
pop
dec
and
out
or
mov
shlb
nop
dec
and
push
sbb
pop
mov
jg
jo
leave
push
scas
push
arpl
test
push
cli
and
lock
fsubrs
inc
and
mov
in
lret
pop
xchg
cmp
mov
mov
dec
movsb
cmp
lcall
adc
shrl
andb
les
into
inc
leave
or
pop
cmp
jb
lret
iret
mov
xchg
cmp
push
inc
stos
outsl
xchg
mov
fisubrs
fidivs
jg
push
fs
hlt
mov
mov
push
push
sbb
scas
stos
movsb
inc
shl
xchg
test
push
cmp
fisubrl
fs
aas
mov
adc
ljmp
xchg
mov
int3
mov
adc
mov
iret
sahf
mov
in
rcrl
int
cwtl
xor
and
pop
movsb
xchg
lods
add
sbb
fistl
mov
in
pop
xchg
sarb
adc
push
push
lahf
push
xorl
cmp
fwait
je
repnz
aas
mov
mov
cmp
and
leave
or
and
sub
pop
in
mov
ret
xchg
inc
outsb
or
pop
push
pop
lds
push
ljmp
call
das
inc
mov
lods
nop
cltd
adc
cmp
adc
mov
jmp
fildll
test
fisubrl
fidivl
push
xor
in
fs
sbb
jo
jmp
push
jno
jno
enter
and
movsl
es
fildl
cmp
pop
lcall
jne
out
sub
adc
and
jmp
xchg
jg
or
add
jmp
popf
js
xor
icebp
leave
sbb
adc
mov
push
cmp
cld
mov
pop
mov
push
or
push
popf
loop
or
mov
mov
ljmp
sahf
or
insb
push
andb
loopne
dec
and
stos
sub
out
inc
cltd
pop
pop
in
test
call
es
loop
in
mov
pop
add
fidivs
cmp
scas
repz
rorb
adc
ja
inc
sahf
and
aas
rcll
or
ljmp
arpl
xchg
jo
hlt
enter
ljmp
mov
and
cmp
jmp
sarl
loope
add
sbb
pop
jecxz
mov
add
mov
iret
inc
fdivrl
pop
fnsave
shl
lock
xchg
jo
xchg
mov
es
mov
xor
sub
cmp
in
ret
mov
sub
repz
iret
pop
mov
or
int3
lret
dec
and
lret
and
jecxz
inc
jno
mov
push
lock
pushf
and
invlpg
jl
in
sbb
scas
nop
mov
cmc
shrb
mov
dec
fsubl
faddl
das
cmp
and
pop
inc
cmpsl
sub
pop
sbb
mov
mov
dec
adc
mov
xor
cmp
sti
andb
jbe
nop
xor
bound
fwait
sahf
mov
push
add
mov
popf
pop
cltd
xor
jg
js
push
xchg
push
jecxz
loopne
in
mov
gs
adc
jecxz
insb
loope
jp
repnz
jecxz
cld
mov
push
aas
inc
imul
mov
testb
or
je
pop
dec
inc
test
ja
clc
xor
xchg
jae
add
leave
cmpsb
ds
mov
mov
jp
or
sub
or
jmp
cmp
fs
out
mov
arpl
std
addl
imul
or
jnp
mov
cmovg
ja
inc
jnp
mov
out
repnz
pop
cmp
jl
icebp
pop
push
mov
and
sub
inc
hlt
jl
cmp
sub
into
add
mov
and
mov
stos
mov
loope
in
rorl
es
mov
cmp
movsl
icebp
push
das
into
cmpsl
cmpsb
mov
fnstcw
imul
repnz
popf
push
mov
cmp
jns
scas
sbb
lods
jns
or
mov
and
mov
add
ret
aam
pop
fsubrl
shll
call
loopne
inc
push
add
mov
je
and
hlt
lcall
inc
inc
mov
xor
cmc
mov
jle
in
mov
cmp
cmp
dec
pusha
in
roll
pop
adc
inc
int3
inc
mov
xlat
out
js
out
test
rol
or
and
add
popa
fmull
push
pop
das
mov
push
mul
int
jns
in
cmp
and
ret
out
sahf
adc
adc
cmp
cs
push
pop
insb
fistl
jmp
cmp
add
pop
dec
stc
and
pop
push
mov
xor
out
pop
jle
and
outsb
ret
loopne
repz
pushl
add
push
rcrl
insl
xchg
mov
add
mov
push
iret
es
rcrl
aam
pop
mov
adc
mov
lock
inc
out
jae
fldl
mov
mov
int3
jbe
xor
movsb
mov
jnp
scas
xchg
cmp
adc
inc
mov
xor
leave
mov
lret
mov
push
loope
arpl
stc
popa
mov
leave
xor
mov
push
or
add
lcall
lea
lock
inc
jne
je
jb
insb
sub
lahf
divl
cmp
sub
insl
nopl
ret
or
mov
pop
dec
pop
jecxz
and
movsl
enter
repnz
sbb
pop
fstpl
mov
mov
mov
sbb
ret
inc
mov
sub
stos
pushf
pop
pop
sbb
scas
in
int3
in
sbb
push
lcall
inc
repnz
cmp
mov
inc
adc
or
add
xchg
shll
jp
addr16
iret
in
das
fs
popf
cld
or
mov
cwtl
outsl
mov
leave
mov
mov
pushf
pop
lcall
loopne
fists
lret
and
mov
leave
push
repnz
add
std
adc
xor
or
lcall
mov
aaa
or
cli
push
loop
je
popa
jns
push
push
jbe
cs
push
pop
aam
dec
repz
sub
addr16
cmp
mov
sub
enter
lods
shll
mov
pop
popa
mov
loopne
fisubs
popf
or
xchg
scas
test
push
stos
in
fmuls
hlt
movsl
ret
and
jp
fsubs
pop
hlt
mov
push
in
out
divb
or
sub
adc
cltd
jge
and
sahf
sub
mov
dec
xlat
mov
jecxz
gs
cmp
push
in
push
enter
imul
fimull
inc
or
ficoms
mov
popa
sahf
xor
xchg
inc
xor
mov
inc
fwait
mov
iret
inc
mov
or
mov
dec
ljmp
push
push
sbb
dec
lret
pop
repnz
add
pop
aaa
cwtl
jns
and
insb
les
mov
xor
jl
mov
or
lods
inc
or
xchg
push
push
adc
orb
js
push
inc
push
flds
or
je
data16
stc
xorl
das
loope
jmp
pop
push
jecxz
scas
mov
lcall
jns
push
das
xchg
stos
mov
fchs
add
sub
mov
dec
cmp
ror
pop
mov
mov
fwait
inc
fmull
adc
xor
rorb
notb
xlat
fadd
adc
xchg
mov
rcl
mov
mov
xor
ja
push
or
dec
loope
les
sub
in
aas
mov
inc
mov
jns
shrl
aad
pop
jb
adc
shr
push
fmuls
pop
scas
jle
push
lret
arpl
out
sbb
call
test
imul
cmpsb
or
into
outsl
mov
push
xchg
inc
add
push
push
jge
outsl
aad
cmp
mov
cli
push
pop
dec
cmp
or
test
aaa
mov
out
xchg
or
int
mov
pop
adc
andl
lret
jecxz
popa
sti
adc
jnp
jno
jno
cmp
or
xlat
int3
arpl
cs
lcall
shlb
ss
nop
add
popf
icebp
dec
inc
fiadds
es
mov
xchg
or
xchg
sub
sub
test
stos
jecxz
sbb
lock
or
pop
mov
inc
iret
data16
jne
outsb
gs
addb
fwait
mov
fadds
inc
push
or
xchg
mov
int3
aam
jae
shl
fstl
clc
sahf
jnp
test
insl
fnsave
push
setae
dec
adc
inc
sub
jp
insb
sub
cld
add
fs
pop
xor
mov
nop
out
xlat
cmp
sbb
jns
mov
dec
sti
push
add
dec
sahf
jl
test
stos
lds
enter
xor
pushl
loopne
cmp
in
pop
lcall
adc
adc
lods
ljmp
pushf
mov
daa
gs
cmpsb
je
imul
stos
mov
addb
out
pusha
lods
popf
mov
push
test
les
or
movsb
add
insb
and
addr16
shll
bound
pop
xor
mov
fwait
sti
sarb
and
adc
pop
sbb
aaa
jae
add
add
dec
sbb
loope
jg
mov
push
call
test
scas
sub
mov
and
jo
mov
add
aas
xchg
arpl
push
scas
jbe
cmpsb
in
dec
mov
inc
mov
ljmp
dec
ret
lahf
and
jecxz
and
dec
popa
xor
sub
xlat
ljmp
sbb
mov
in
hlt
push
lock
push
orl
add
sbb
jge
jp
pop
mov
les
cmp
sbb
pusha
and
mov
push
add
inc
pop
pop
mov
pop
movsb
and
add
or
rclb
mov
nop
mov
mov
outsb
popa
and
nop
add
fldenv
cmpsl
add
xchg
push
enter
jo
lret
ret
inc
dec
and
dec
gs
ss
in
in
js
lods
cmp
mov
jbe
cmp
push
lea
push
pusha
addb
imul
into
gs
jmp
cmp
in
xchg
fcoms
mov
or
add
testl
push
mov
jp
pop
out
pop
rolb
in
xlat
scas
jae
inc
fidivrs
sub
ljmp
ljmp
scas
adc
test
mov
sub
pop
dec
inc
loop
call
xlat
dec
cwtl
movsb
sbb
loopne
add
test
cmp
into
lods
mov
jno
ret
push
fdivrl
xchg
mov
mov
adc
or
lods
jmp
mov
popf
push
js
shrl
fisubrl
push
dec
testl
add
out
cld
xchg
mov
inc
imul
mov
fildl
test
lock
mov
cmp
iret
mov
push
pop
xchg
aad
pop
add
repnz
adc
jg
in
add
aas
fdivrs
jg
dec
je
test
sub
mov
cmp
xchg
cltd
mov
push
xchg
push
sub
shlb
jnp
push
fwait
add
enter
out
mov
stos
and
adc
ja
xor
push
push
jne
ficomps
jb
jmp
popa
test
mov
iret
add
sbb
lds
xchg
sbb
les
xchg
pop
mov
pop
cmpsb
cmpsb
xchg
fldenv
aam
and
fimuls
test
adc
pop
xor
pop
jne
movsl
sub
add
adc
mov
mov
jp
sub
push
mov
lock
aaa
stos
add
mov
lods
dec
add
adc
enter
scas
lods
loop
fisubrs
es
xchg
add
push
mov
push
movsl
inc
inc
mov
push
jo
mov
mov
mov
insb
add
popf
call
out
jmp
shll
xor
jmp
test
mov
xchg
pushf
pop
pop
add
dec
mov
mov
mov
sbb
or
insb
repz
shrl
punpckldq
xchg
out
cltd
xchg
add
mov
fwait
push
pop
ja
cmp
pop
shrl
dec
push
mov
jle
xor
sub
out
insl
xchg
jns
mov
andb
cmc
pop
sbbb
inc
movsl
icebp
pusha
in
int
faddl
jp
sti
testl
dec
mov
lock
jae,pn
add
mov
mov
adcl
xchg
repnz
and
test
hlt
js
jp
pop
insb
out
xchg
scas
pop
je
test
fcompp
outsl
cmp
xchg
cmp
notb
jb
stc
mov
inc
or
push
add
ss
xchg
pop
iret
xchg
xor
jns
into
bound
add
loope
lock
call
cmp
lods
cmpsb
js
fwait
inc
sub
ljmp
enter
dec
imul
xor
mov
stos
call
imul
repnz
adc
adc
jno
jge
jle
not
push
xchg
fadd
loopne
sub
in
push
sbb
cmpsb
or
mov
not
cmpsl
and
out
test
in
or
xchg
sbb
push
in
fsubl
outsl
xor
hlt
cli
pop
mov
inc
xchg
ror
jo
ret
sbb
ret
nop
dec
lahf
xchg
dec
or
rcrl
mov
mov
push
cltd
into
pop
loope
or
test
out
jg
in
aam
pusha
rep
xchg
xor
out
test
sti
mov
rorl
shrl
push
int3
jg
add
test
cltd
push
or
cmp
cmp
push
cmpl
pop
pop
hlt
dec
pop
or
lea
mov
loope
mov
add
pop
lcall
or
adc
ret
cmp
daa
cmp
outsl
xor
dec
in
aam
daa
mov
imul
mov
test
mov
cmp
rclb
mov
jmp
mov
outsl
mov
xchg
fnstcw
out
aaa
out
push
pop
sub
cmp
in
inc
mov
aaa
cmp
jnp
fs
push
add
xlat
add
leave
js
xchg
ds
push
dec
mov
sbb
xchg
xorl
xor
data16
add
gs
lock
inc
repnz
xor
fs
arpl
sti
sub
addl
mov
shlb
push
dec
cmp
shrb
xor
xor
mov
test
pop
out
cs
movsl
add
in
js
loop
or
or
out
rorl
rcrl
xor
inc
cs
repz
rorb
andb
jmp
xor
ja
shll
inc
fisttpll
outsl
jbe
mov
cmpsb
pop
ss
or
icebp
mov
cld
dec
insb
mov
repnz
jp
lret
jb
push
aas
or
ret
jle
jp
cmp
sub
mov
sbb
out
fwait
inc
jnp
jns
ljmp
enter
inc
cltd
je
adc
aaa
sti
xlat
ret
inc
xor
pusha
std
fadd
pusha
push
sbb
out
call
jns
inc
jl
mov
inc
xchg
nop
sbb
sarl
in
pop
push
repnz
add
adc
aas
add
divl
mov
dec
in
inc
push
or
dec
rorl
aam
rol
inc
lods
push
arpl
inc
jmp
inc
jae
imul
mov
push
outsl
pop
mov
or
pushf
mov
ljmp
jl
fsubrl
int
in
mov
incb
jnp
jle
fwait
sub
aad
mov
xchg
pushf
mov
and
or
jb
ficoms
sub
pop
inc
mov
mov
push
inc
hlt
lret
icebp
lahf
in
popf
xchg
dec
repnz
mov
mov
push
fwait
cmpl
lret
add
cmp
and
push
pop
in
lds
and
outsl
pop
cmp
out
pop
aam
pop
adc
mull
imul
roll
lcall
and
imul
loopne
xchg
and
sbb
sbb
inc
xorb
rclb
test
mov
sbb
stos
rcr
mov
mov
inc
bound
jl
shlb
mov
fbld
clc
into
inc
mov
or
or
xor
lods
popf
or
imul
cmp
sbb
fistps
sub
sub
outsl
mov
icebp
insb
scas
jmp
bound
xlat
insl
clc
push
sbb
jbe
shl
popf
imul
lea
lret
bound
cmp
sahf
fistpl
cmp
xor
gs
shll
adc
andl
aaa
mov
and
xor
sbb
mov
push
xchg
int
or
mov
aam
cs
sub
in
push
sahf
scas
add
and
mov
jne
or
repz
ret
lret
test
fs
in
adc
inc
andb
cmp
or
ljmp
pushf
arpl
das
dec
pop
popa
js
leave
lods
xor
nop
push
mov
orl
lahf
rorl
xchg
add
sbb
xchg
adc
into
mov
out
js
pop
mov
and
sahf
xor
popl
mov
pop
xor
xor
repnz
push
adc
mov
xchg
mov
cmp
xlat
sbb
and
aaa
pop
push
xchg
push
push
daa
mov
rcll
jbe
xlat
mov
xchg
sbb
cltd
popf
pusha
inc
jl
andb
lret
in
push
sub
sub
sub
andb
fisubrl
inc
fld
xor
stos
sbb
ret
push
xchg
jb
in
push
ds
std
mov
jmp
dec
hlt
mov
xchg
sub
pop
in
ret
mov
cmp
or
iret
test
ret
mov
out
mov
stc
pop
loope
fmull
sbb
sbb
push
dec
in
mov
insb
push
sbb
mov
jmp
push
and
push
sbb
mov
push
sbb
xchg
arpl
adc
clc
ljmp
jnp
rcrl
mov
jp
mov
mov
and
push
ljmp
xchg
xchg
repnz
leave
cmp
mov
icebp
sbb
lahf
push
hlt
int
cltd
out
pop
scas
leave
mov
call
in
pusha
cli
xchg
push
jl
ja
mov
nop
dec
jmp
roll
sub
pop
add
popf
enter
dec
cmp
aam
fnstenv
jbe
or
inc
in
add
add
xor
out
add
in
dec
pop
addr16
clc
cwtl
xor
shlb
int
push
incl
mov
push
lods
dec
mov
sbb
and
and
mov
imul
stos
sbb
mov
hlt
int3
adc
xor
pusha
insl
mov
test
ss
fmuls
daa
inc
lcall
pop
or
je
jo
shll
cwtl
psubq
iret
sbb
idivl
call
sub
and
inc
sbb
xor
and
bound
sub
xchg
push
lahf
sbb
jb
lea
outsl
inc
into
roll
cmc
push
outsl
lret
and
add
imul
out
mov
cli
xor
pop
pop
cwtl
lods
xchg
aas
rorb
mov
cmpsb
outsb
sbb
sahf
hlt
dec
pop
repz
sub
push
cmp
add
movsl
jmp
pop
xor
out
add
pop
stos
or
or
nop
cmp
movsb
jnp
pop
aas
out
fdivr
and
aam
pop
inc
and
inc
cmpsb
cmp
std
clc
mov
ss
pusha
stc
rclb
sbb
sub
xchg
adc
call
ljmp
add
dec
xor
add
adc
dec
popa
push
mov
jle
andl
mov
lret
popa
adc
stos
xchg
aas
mov
in
call
lock
add
ss
dec
arpl
dec
mov
xchg
adc
fmull
jns
inc
scas
loop
mov
jge
lods
sub
loopne
test
repnz
xor
ds
dec
push
lret
mov
movsl
push
fwait
ljmp
and
dec
in
insb
jge
dec
gs
lret
adc
sub
sbb
mov
fidivrs
push
imul
sbb
mov
aam
adcb
or
sahf
xor
mov
or
popa
mov
pop
xor
into
inc
push
mov
cmpsl
and
pop
push
xchg
and
in
jecxz
cmc
lcall
popa
clc
and
addb
inc
xchg
outsl
jb
adc
cwtl
lock
and
mov
mov
les
lea
push
stos
fcmovb
pop
cmp
sub
fldenv
push
cmp
xor
aas
mov
decl
repnz
cmp
test
loop
into
inc
loopne
or
mov
push
sub
pop
test
cmp
pop
int
notb
lret
stos
repz
adc
mov
mov
push
movsl
cmp
insb
repnz
push
push
sbb
out
lret
jo
cld
xchg
inc
ret
ret
out
cld
lods
scas
mov
shrb
std
push
pop
cmc
cmp
in
dec
std
jae
repz
loope
xchg
adc
mov
xchg
xchg
loope
mov
test
and
imul
mov
add
mov
test
pusha
mov
mov
daa
lcall
adc
pop
mov
cmp
addr16
faddl
lret
jne
lret
sbb
mov
fmuls
movsl
mov
mov
cwtl
sub
inc
aaa
dec
sahf
in
test
ss
int3
adc
sbb
inc
fld
jae
lods
lods
mov
popa
jns
dec
add
dec
inc
enter
add
lahf
jae
in
mov
push
in
sub
mov
mov
dec
scas
and
fisttpll
in
sti
jge
mov
or
xor
sbb
xlat
push
shll
dec
pop
pop
cmc
mov
adc
nop
dec
xorl
scas
fadds
mov
inc
sti
loop
daa
mov
es
test
mov
cmp
out
pop
notl
xor
push
push
and
ljmp
bound
mov
pop
jge
mov
outsb
and
mov
xor
cmp
imulb
or
sbb
mov
and
push
in
dec
mov
push
dec
popa
cmp
mov
cmp
leave
decb
lea
ffreep
out
sbb
fimuls
mov
mov
mov
xor
pop
jnp
adc
in
mov
push
shll
dec
jno
rol
stos
xor
fcmovnbe
push
aam
scas
and
out
xchg
push
xor
xor
dec
repz
out
mov
inc
and
push
inc
mov
mov
adc
mov
lret
int3
mov
mov
sbb
test
or
repz
lods
insl
clc
add
shlb
js
pop
push
out
les
addl
movsb
iret
jbe
mov
cld
pop
loop
sub
inc
repnz
fnstcw
sub
sbb
movzbl
jmp
in
aaa
add
cld
aaa
jle
cmp
dec
adc
cmp
clc
sub
cli
mov
filds
and
mov
shll
mov
test
aad
adc
fs
jmp
ficompl
fstpl
xor
test
and
test
stos
mov
rclb
cli
sahf
pop
sub
stos
or
movb
les
cmpb
loop
lret
test
inc
push
out
iret
es
int
outsl
int3
lods
subl
sub
scas
jb
rcll
add
fadds
jns
mov
xchg
pop
sub
stos
xor
clc
xchg
lods
sub
push
inc
lock
imulb
call
xchg
and
add
out
shrl
lret
dec
add
rcl
mov
insl
sarb
dec
dec
loopne
mov
sbb
test
push
mov
fists
aam
xchg
in
push
add
pop
div
add
pushf
inc
dec
add
je
cwtl
push
mov
jno
pop
adcb
add
sahf
gs
lret
cmp
js
cmp
jo
icebp
dec
andl
lret
xchg
jbe
test
xor
divl
inc
xchg
push
sub
pop
aaa
or
push
mov
sbb
addr16
sbb
xchg
scas
out
test
outsb
or
fnstcw
scas
and
xlat
adc
push
add
repnz
adc
ret
popa
pop
int3
sar
je
cs
hlt
std
sub
lods
pop
and
popf
divl
inc
mov
addr16
movsb
push
adc
test
lret
js
aas
dec
dec
xor
mov
movsl
movsb
dec
jae
or
ret
cmp
enter
sbb
xchg
std
jb
xor
shrl
xor
inc
sub
clc
dec
lret
xor
mov
xchg
movsl
fldl
xor
int
incb
clc
xchg
sti
xor
or
push
lahf
neg
or
imul
out
xchg
pop
pop
in
dec
mov
push
mov
cmp
aaa
stos
cmp
and
into
cmpsb
xchg
cmpsb
xchg
cmp
pop
les
nop
sbbl
ljmp
xor
and
les
hlt
inc
into
cmc
ss
adc
push
push
and
or
lcall
jae
push
pop
daa
lock
mov
aas
mov
mov
sbb
es
jle
fmulp
xchg
push
into
mov
adc
sub
ss
popf
cli
mov
je
daa
mov
adc
inc
ret
iret
nop
daa
add
jecxz
cltd
jne
add
scas
mov
mov
xchg
or
loopne
inc
in
jle
movsl
xor
push
rclb
xor
in
faddp
xchg
and
test
dec
xchg
cmp
adc
call
js
or
dec
adc
out
xor
mov
push
sbbb
bound
lret
mov
cmpsl
or
or
and
cmp
pop
mov
dec
dec
call
out
push
xor
xor
fwait
lock
cmp
xor
movsb
and
pop
xchg
jbe
mov
sub
aas
sbb
insb
fwait
clc
or
inc
mov
xor
sti
lret
int
popa
test
adc
push
push
out
aaa
adc
inc
fwait
ret
pop
xorb
fdivs
add
push
out
ds
movsb
xor
pop
ja
pop
push
push
test
or
sub
mov
inc
scas
pop
in
test
mov
gs
xor
mov
enter
leave
xor
outsl
mov
movsb
in
inc
test
sub
xchg
lea
push
pop
push
push
cmpb
insl
data16
xorl
cli
push
imul
out
das
out
mov
insb
sub
movsb
fstps
cmp
ss
xchg
insb
fwait
pop
out
add
jle
aad
out
add
es
test
mov
repnz
inc
mov
inc
cwtl
pop
jmp
adc
rep
outsb
cmp
nop
xchg
xor
in
mov
iret
jg
add
or
mov
or
and
and
mov
movsb
and
xchg
xchg
repnz
lcall
adc
in
pop
leave
jb
jl
clc
sub
mov
lods
negb
jecxz,pn
test
add
jmp
es
iret
jp
sbb
mov
sti
test
jmp
pop
dec
arpl
mov
ss
xchg
out
icebp
push
mov
fists
or
push
push
gs
xchg
aaa
arpl
inc
hlt
cmp
mov
push
mov
mov
and
jecxz
jb
xchg
fwait
jbe
loope
imul
xchg
dec
lea
ret
push
pop
pop
push
dec
in
push
lret
and
adc
stos
sub
xor
std
mov
sub
mov
xchg
push
pop
mov
inc
cmc
ret
mov
mov
dec
mov
mov
notl
daa
fisubs
push
call
mov
and
hlt
push
aam
and
fimuls
sub
loope
stc
popl
sub
xor
test
push
repnz
cli
or
pop
notl
scas
add
xor
out
ljmp
jo
mov
testl
shll
push
sbb
test
xor
or
cmp
andl
push
mov
aaa
outsl
mov
lcall
arpl
cs
cmp
sub
rolb
inc
arpl
jo
inc
out
jle
pop
mov
orl
imul
aaa
cmp
xchg
add
outsb
push
stc
je
or
stc
in
xlat
outsb
lret
std
xor
je
or
test
jnp
jno
jne
push
mov
and
xchg
addl
loop
ja
fwait
jbe
stc
xchg
lret
cmp
inc
scas
push
inc
sub
fildl
or
mov
dec
enter
sahf
xchg
aam
push
mov
xor
gs
jnp
inc
bound
stos
shr
mov
outsb
adc
jl
jecxz
xor
and
insb
sti
pop
push
pop
add
outsl
adcl
enter
jae
jg
adc
pop
out
push
fadds
mov
loop
xchg
sar
adcl
cmc
ds
out
adc
xchg
rcll
mov
dec
cmp
dec
xchg
xor
je
addl
dec
xchg
push
int3
mov
push
lahf
es
mov
cwtl
adc
inc
gs
pop
gs
add
btc
mov
fucomi
pushf
or
and
mov
loope,pt
sbb
sahf
ljmp
inc
dec
imul
test
test
lret
inc
out
arpl
xchg
fisttpll
lahf
push
xchg
stos
das
lea
sub
sub
pop
sub
pop
xor
mov
shr
aad
cmc
pop
sbb
dec
pop
xchg
imul
xor
push
sub
and
jle
push
into
inc
stos
pushl
sbb
cmpsl
cmp
inc
cwtl
das
cmp
ja
push
push
loop
js
pop
xor
pop
push
jg
or
pop
and
mov
dec
mov
dec
mov
or
ficompl
xchg
insb
insb
les
mov
hlt
mov
inc
push
sub
push
call
sub
dec
pop
in
cmp
cltd
xor
test
movsb
int3
or
and
jp
xlat
pop
ret
test
mov
int3
cmpsb
cmp
lret
xor
out
jae
stos
in
fs
jae
sahf
fadds
xor
pop
add
mov
sbb
sub
ret
mov
sbb
xchg
imul
cmp
into
icebp
inc
arpl
jle
xchg
pop
mov
ljmp
stos
mov
fnstenv
arpl
inc
pop
or
pop
xchg
push
adc
rol
jmp
push
scas
jae
lods
push
jae
fcmovne
aad
jp
push
pop
lahf
mov
cmp
daa
push
inc
pop
popa
push
mov
sbb
rclb
dec
fbld
imul
cmp
inc
mov
sbb
push
notl
addr16
repnz
je
jmp
fwait
les
adc
ljmp
jae
fsts
sub
incb
sbb
ds
xchg
stos
gs
sbb
xchg
sbb
shl
jg
stc
vmovmskps
iret
lea
int
mov
ret
or
adc
cmp
sub
outsb
stos
std
adc
pop
out
xor
xchg
and
cmp
inc
lock
lcall
int3
mov
adc
pop
jae
popf
loop
xchg
lcall
bound
inc
pop
mov
fdivr
cs
pop
mov
mov
add
leave
mov
and
push
je
out
test
sahf
sub
mov
lea
movsb
testb
lcall
push
jle
pop
imul
lods
shl
movsb
xlat
test
movsl
xchg
add
xorl
cs
push
mov
int3
push
popf
std
or
mov
in
pop
cmpsl
jno
pop
shr
mov
mov
mov
or
cli
cmp
aas
push
int3
cmc
rcrl
dec
and
jge
aam
in
lcall
aaa
lds
lock
jno
decl
sbb
jge
aaa
mov
and
outsl
dec
mov
and
call
jg
push
mov
mov
ja
adc
add
in
std
sbb
int3
and
cmp
cmp
mull
outsl
addr16
xchg
push
cmpsb
stos
jns
pop
es
sub
sub
xchg
push
mov
out
sub
mov
pop
in
std
xchg
xchg
movsb
add
outsl
xchg
push
mov
adc
xorb
xchg
adc
data16
lret
mov
int
mov
mov
leave
jmp
ljmp
sub
push
xchg
xchg
lcall
sti
std
and
bound
adc
fsubrl
lods
pop
xor
jg
lahf
loopne
jp
lock
testl
jo
jg
mov
or
add
lock
imul
pop
add
jmp
push
mov
out
or
cmc
cli
arpl
sbb
lods
ljmp
pushf
scas
stc
xchg
and
enter
ljmp
ret
int
push
shl
mov
add
adc
mov
xor
jae
xor
xchg
fdivrl
rcll
roll
cmpsb
dec
pop
mov
pushf
scas
mov
push
sbbl
mov
cmp
fmul
mov
xor
pop
pop
stos
mov
outsl
mov
out
mov
pop
shll
xor
daa
ja
hlt
mov
dec
cmp
xlat
aas
fcomps
and
out
loop
mov
dec
pop
pop
out
sbbl
xor
in
ja
std
lea
xor
call
test
jne
mov
xor
test
mov
imul
enter
in
movsl
mov
ljmp
jmp
dec
add
pushf
dec
or
mov
outsl
inc
loop
mov
dec
in
jae
popa
pop
insl
xchg
mov
pop
aad
test
stc
adc
fwait
sbb
jmp
push
cmpsb
sahf
aaa
pusha
out
inc
cli
mov
or
loop
cmp
fadds
push
mov
aad
outsl
pop
xchg
jbe
mov
mov
pop
lock
out
xchg
push
addr16
xchg
add
push
sbbl
test
movsb
adc
pop
cmp
pop
arpl
popf
pop
gs
or
mov
pop
imul
sub
out
adc
je
movups
mov
mov
inc
xor
jnp
out
sbb
or
test
pop
popa
sub
ja
cmpsb
shl
into
loope
push
xchg
jl
jne
mov
or
mov
sbb
lcall
and
xchg
and
xchg
mov
test
imul
cld
stos
std
mov
sub
loope
pop
cmp
adc
jmp
push
ljmp
dec
cmp
cmpsl
xchg
cmp
adcl
dec
dec
sbb
stc
insb
jno
sahf
sbb
out
out
in
lcall
ja
mov
pusha
mov
insb
std
sub
and
and
pop
repnz
stos
and
sub
jg
xchg
mov
loopne
out
ja
or
adc
inc
push
movsb
insb
hlt
mov
adc
aas
inc
sbb
mov
js
mov
adcb
mov
mov
das
jae
push
jno
mov
add
push
out
push
cmp
lods
daa
outsb
lds
sbb
mov
nop
lret
out
sub
fnop
lods
pop
add
dec
add
mov
js
ret
lahf
mov
sub
scas
sbb
mov
jno
scas
mov
add
dec
fcmovne
in
ret
or
cwtl
inc
xchg
iret
cmpsb
inc
loopne
test
int3
or
shrb
jae
scas
sub
xor
xlat
xor
out
cmpsb
adc
loop
cmp
pushf
inc
leave
sbbb
cmp
aad
sub
or
or
lock
cmpsb
pusha
jp
pop
mov
xchg
call
and
xor
into
add
lods
xchg
into
and
aad
xor
and
in
push
and
leave
ss
call
scas
dec
dec
dec
loop
aam
fsubl
cmp
mov
mov
add
loopne
jg
fbstp
jnp
mov
int3
cltd
jne
sti
fwait
ret
cmp
es
xchg
cli
cwtl
dec
mov
cltd
pop
imul
pusha
clc
dec
sub
cli
inc
ret
xchg
fiaddl
addr16
iret
pop
and
es
ret
aad
loop
or
cs
mov
sub
push
addr16
and
xchg
sbb
call
xchg
jp
mov
lock
in
lret
pusha
rorb
shrb
lock
mov
out
inc
in
pop
repz
mov
pop
push
adc
mov
lock
pop
out
push
outsb
divl
dec
jne
lcall
xchg
test
push
mov
xchg
int3
leave
fcomps
mov
inc
xor
pop
jbe
pop
loope
movsb
addl
outsl
push
add
addr16
pop
push
mov
xor
sahf
pop
rcr
cmpsl
ret
mov
pop
mov
addr16
sbb
aam
pop
xchg
je
dec
ret
outsb
mov
shrb
subb
in
adc
fcompl
jle
cmp
stos
vmulpd
dec
pop
out
adc
mov
lods
or
sub
daa
push
xchg
in
cs
aad
ja
xchg
cmp
mov
out
or
js
addr16
sub
jbe
insl
pop
aam
pop
ret
repnz
inc
addr16
loopne
mov
repnz
cld
jnp
dec
lds
add
pop
cmp
push
adc
mov
add
cmp
mov
clc
cmp
jg
pop
add
dec
decb
fldcw
sbb
shl
mov
sub
pusha
lea
sti
shrb
jg
mov
cltd
lea
jp
pop
xchg
mov
or
dec
xor
aas
and
popf
mull
cmp
mov
xor
jecxz
xor
mov
stos
cmp
push
xor
out
pop
xor
xor
rcr
adc
pop
pop
xchg
jmp
fistpll
and
clc
mov
addr16
mov
lahf
add
cwtl
sbb
mov
std
hlt
sub
loope
xchg
cs
addl
pop
add
rcrl
out
xchg
sbb
xlat
sbb
imul
addr16
or
sub
rorb
shr
xchg
loop
adc
or
mov
adc
std
pop
pop
test
icebp
into
push
xchg
daa
stos
shlb
jmp
push
pop
dec
ret
lret
push
push
and
jl
jmp
inc
cmpsl
cmp
pop
jae
cmp
dec
aad
jecxz
ret
jnp
movsl
pop
scas
pusha
or
pop
sahf
mov
push
and
shl
mov
inc
xchg
cmp
in
and
xor
or
fadds
and
stc
and
add
xchg
adc
les
or
fidivrs
sbb
in
inc
and
iret
sub
repz
fdivrs
in
push
or
bound
arpl
frstor
inc
fs
pop
sahf
pop
cmp
inc
addr16
sahf
xor
nop
ret
fbld
and
sbb
mov
push
test
push
sahf
stos
push
mov
adc
es
pop
jne
shrb
sub
dec
in
push
cmp
fdiv
loope
jl
sbb
lret
pop
std
push
mov
dec
pop
je
pop
and
pop
mov
jge
mov
mov
dec
arpl
in
ror
faddl
mov
mov
push
jno
inc
mov
pop
sub
pushf
xor
xchg
popf
pop
cmp
or
cmp
inc
jbe
out
fstp
dec
test
xor
outsl
std
mov
mov
test
mov
rcll
orb
mov
or
cmpsl
ss
addr16
and
jmp
jb
ja
test
dec
outsb
sbb
xor
aam
xor
mov
xchg
pop
inc
pusha
aad
aaa
fldenv
dec
pop
inc
jl
xchg
add
xchg
mov
test
test
push
repz
cmp
loopne
push
inc
jb
inc
and
fsubr
stos
mov
xchg
enter
adcb
add
imul
sub
dec
mov
sub
adc
in
xchg
sbb
adc
inc
dec
push
jecxz
dec
push
mov
push
mov
and
cmpsb
jbe
out
cs
addr16
mov
out
add
popf
movsl
xor
fisttpl
jg
mov
aad
push
sbb
xor
mov
push
sar
jne
mov
popa
pop
inc
in
or
cmp
shl
imul
les
mov
fwait
push
je
js
push
out
leave
and
daa
xchg
clc
add
test
mov
std
test
xchg
shll
movsb
nop
sbb
mov
adc
xor
push
movsl
inc
loope
popf
xor
adc
lret
mov
lahf
inc
leave
iret
add
sbbb
pop
sub
adc
xchg
sbb
fisubrl
xchg
add
mov
or
aas
or
sti
fwait
pop
mov
fs
xchg
popa
dec
mov
sub
stos
cltd
jbe
mov
rorl
adc
xor
es
sahf
xor
xlat
add
mov
add
push
gs
jae
cltd
cmp
jle
xchg
pop
pusha
stos
lds
push
icebp
xchg
outsl
inc
push
jo
mov
or
or
mov
xor
mov
imul
xor
xor
pop
adc
mov
les
add
idivl
mov
fcmovnu
mov
fnstenv
sub
jp
lods
fcoml
and
xchg
cmp
ret
mov
test
shrl
sub
dec
and
cmp
clc
hlt
dec
outsl
lret
dec
int3
ret
xor
xchg
xor
cwtl
ljmp
vmulss
add
iret
outsl
add
push
cmpsw
nop
cmpsb
sarb
daa
into
les
out
inc
aas
out
addr16
push
loopne
xorb
dec
cmc
rclb
add
movsl
dec
dec
pop
sbb
mov
jne
pop
je
pop
scas
pusha
cmc
roll
sbb
aaa
into
cmp
dec
dec
movsb
mov
cmp
movsl
movl
add
in
adc
hlt
or
sbbb
ret
mov
cmpsl
dec
leave
ret
ret
jp,pn
nop
jmp
arpl
cmc
xor
pop
pop
sub
cmp
push
imul
in
mov
cs
cmp
push
and
mov
and
cmp
mov
incl
fdiv
push
sbb
xor
inc
xchg
mov
lcall
xchg
adc
cwtl
les
sbb
in
sbb
loopne
and
test
fistpl
push
cmpsb
repz
fwait
mov
lods
popa
mov
out
lods
mov
fdivs
push
mov
hlt
hlt
mov
dec
cmp
imul
clc
sbbl
dec
stos
lock
pop
jmp
lret
jp
into
fs
jno
arpl
pop
repnz
pop
lcall
push
adc
lcall
stos
inc
push
movsl
pop
cmpsb
jo
pop
jl
jb
gs
xchg
std
xchg
xchg
iret
cmpsb
inc
icebp
dec
jecxz
addr16
out
mov
cmpsl
adc
pop
push
or
js
xorl
push
fistps
jle
in
mov
insl
mov
mov
loopne
loopne
mov
adc
add
jno
add
outsl
mov
bound
push
insb
adc
in
fdivrs
lock
cmp
and
mov
inc
cwtl
ljmp
push
std
lds
negb
pushf
xor
adc
imul
ja
jmp
mov
sbb
ret
cmp
std
imul
and
xor
popa
push
in
push
nop
je
mov
inc
cmp
shrl
jmp
or
sahf
xor
and
cmp
pop
testl
mov
imul
in
idivb
adc
inc
pop
jnp
pusha
iretw
and
and
sbb
frstor
jb
fs
cmp
popa
das
fidivrs
popa
xor
in
sbb
vmread
das
inc
popf
or
icebp
jnp
inc
jbe
or
mov
cwtl
repnz
lds
adc
push
cmc
scas
inc
daa
jb
add
cmp
imul
sub
imul
cli
loop
sbb
mov
int3
subl
sahf
iret
xchg
or
mov
dec
mov
incb
aas
in
in
and
inc
gs
adc
filds
push
or
shl
lea
test
and
adc
or
fdiv
in
sub
pop
xor
pop
sbb
sbb
jmp
arpl
jns
nop
mov
xchg
ja
fstpl
dec
jo
int
lock
adcb
mov
ja
lret
mov
jmp
mov
xlat
sbb
dec
adc
jno
jecxz
jae
push
adc
divb
fnstenv
gs
fmull
clc
sahf
and
pop
xor
loope
or
test
movsl
add
lea
aad
test
fwait
mov
add
mov
mov
lock
repnz
imul
sbb
dec
fadds
js
enter
bound
inc
sbb
mov
sub
mov
loope
cmp
sbb
xchg
add
or
pushf
mov
orb
push
fs
aas
push
inc
test
das
ljmp
insl
jle
mov
sub
pop
dec
std
mov
mov
clc
addl
pop
cmpsl
stos
in
mov
mov
ja
inc
or
or
adc
inc
pushf
pop
incb
lahf
add
mov
cltd
test
jl
mov
add
movsl
cld
lcall
loopne
jnp
push
inc
repz
rcl
cmp
jno
or
insl
ror
ja
lret
icebp
hlt
xor
ret
repnz
jecxz
push
xchg
adc
mov
push
lock
ret
lds
lds
pusha
jmp
sar
inc
jae
cmp
pop
out
mov
pop
jne
xlat
sbb
and
loopne
push
cltd
dec
pop
lret
jnp
inc
rolb
repnz
inc
xlat
out
xchg
out
mov
maxps
xchg
jo
test
jmp
or
push
rolb
xchg
ret
mov
or
ret
push
dec
push
dec
dec
test
outsl
sub
push
out
or
jg
pop
in
inc
dec
sahf
stc
add
fildl
data16
ja
pop
inc
in
test
in
stc
jg
xor
pop
pop
pop
cmp
jnp
iret
testb
pop
ret
rol
fldl
jno
xlat
sub
push
popa
dec
sbb
mov
xchg
punpckhdq
adc
jb
add
sbb
push
adc
sub
sbb
cmc
pop
loop
mov
sub
into
push
aas
jg
dec
aam
sbb
jae
pop
jg
mov
lock
mov
jb
clc
cmc
mov
push
call
jg
in
imul
repnz
aas
call
adc
or
jge
into
push
stc
pop
test
mov
or
xor
add
imul
mov
or
jl
add
inc
mov
ja
sbb
arpl
pop
cmp
insl
push
pop
sbb
jge
jae
sbb
lcall
push
lods
mov
dec
xor
jge
sahf
outsl
pop
fidivs
jns
mov
xchg
mov
sahf
out
nop
mov
inc
fists
fdivs
subl
sarl
test
push
rol
mov
xchg
push
and
out
pushf
int3
or
subl
clc
sbb
jae
inc
fistpl
push
xor
lock
dec
in
jp
ds
movsl
cmc
dec
mov
sbbb
rcrl
lret
std
ret
std
jmp
mov
and
pop
xchg
sti
leave
shlb
and
jb
sub
mov
adc
mov
inc
mov
add
jle
outsb
ret
ret
pop
fwait
xor
add
and
bound
and
sahf
jecxz
divb
cli
pop
test
andb
dec
pop
loope
test
aad
icebp
or
or
inc
outsb
jb
ja
imul
or
jge
loope
loop
leave
mov
cld
cwtl
pop
movsl
mov
mov
xor
adc
loopne
sbb
push
mov
out
push
lahf
imull
insb
cmp
pusha
pop
lock
std
jle
das
imul
mov
lea
mov
mov
pop
loope
movsl
sub
fcom
xchg
add
mov
ds
jo
lret
dec
fidivl
adc
jmp
or
daa
sarb
xchg
mov
int
sbb
aas
js
sti
xchg
mov
fisubrl
mov
movsl
mov
mov
repnz
std
aam
cs
xlat
js
jbe
jl
jne
stc
bndstx
loop
xor
pop
xor
int3
xchg
clc
ja
rcrl
stc
jae
xor
mov
jno
pusha
push
jle
mov
incb
fmuls
cmpsl
mov
cld
outsl
mov
and
lahf
adc
jp
outsl
mov
ss
pusha
ljmp
mov
push
fidivrs
or
mov
int3
jle
add
jo
dec
cwtl
push
inc
adc
sarb
push
loopne
pop
sbb
imul
mov
fdivrs
mov
or
cmp
push
mov
sub
xchg
into
sbb
arpl
aas
cmp
insl
or
insb
js
xor
mov
cmpb
cwtl
push
xor
xchg
leave
cld
lea
xchg
push
xor
lock
into
jb
ds
sbb
sbb
mov
jne
inc
cmpsb
inc
stc
or
xchg
in
insb
add
ficomps
and
and
push
hlt
sbb
mov
sub
xchg
xchg
lea
add
and
je
in
inc
push
mov
sbb
sbbl
jecxz
movsl
pop
inc
popf
jne
bound
std
and
and
mov
sub
push
in
jg
adc
sub
or
adcl
lret
cld
ljmp
comiss
adc
and
sbb
xor
jmp
and
cltd
in
notb
cmp
add
cmp
rclb
js
mov
and
fidivrs
pop
add
cmc
dec
xor
xchg
or
rclb
loopne
lods
in
and
test
out
aas
and
dec
adc
jne
out
mov
movsl
mov
fwait
pop
mov
stos
mov
shl
mov
push
cltd
or
cmc
xchg
xor
hlt
cmp
fs
into
arpl
and
sbb
fs
or
insb
fs
test
mov
add
nop
and
ss
mov
fwait
cmp
adc
rol
out
stos
ror
xchg
fdivl
in
movsb
push
es
ficomps
loope
lea
in
hlt
rcrl
imul
cltd
popa
xor
mov
sub
scas
jno
in
dec
in
rclb
in
cmp
int
std
popa
mov
mov
add
adc
and
mov
xor
mov
test
mov
call
or
adc
cmp
mov
data16
loopne
xor
sub
xorb
scas
or
cwtl
and
xor
xchg
push
imul
cmp
xchg
jns
mov
or
xor
cmp
sbb
push
jmp
mov
dec
mov
data16
mov
in
sbbb
lret
and
mov
fstpl
cld
adc
test
popf
repz
mov
xchg
popa
int3
iret
adc
cld
push
push
push
test
push
ja
fsubl
jle
cmp
mov
test
dec
jmp
loopne
ja
push
out
lock
out
repnz
aas
jno
mov
lods
pop
cmp
jns
cli
stos
imul
orl
lods
rorb
cld
daa
push
jmp
aad
xchg
jno
test
lret
data16
cmp
ss
adc
adc
sub
cmpsb
mov
adc
cltd
xor
movsl
shl
add
push
and
mov
push
daa
jle
in
dec
pop
pop
sub
cli
cmp
xchg
adc
push
clc
xchg
xor
mov
les
sbb
imul
jge
cmp
and
pop
push
cmpsb
movsl
cmpsb
inc
inc
mov
mov
and
mov
das
shlb
jnp
jnp
mov
repnz
ret
fimuls
stos
add
sbb
out
stc
jl
movsw
jnp
push
cli
mov
mov
inc
cmp
mov
xchg
add
push
mov
jo
out
mov
aad
sbb
cld
and
cmp
cmc
xorb
mov
add
arpl
push
xchg
mov
inc
leave
or
fildl
jecxz
and
js
test
mov
movsl
pinsrw
divb
cs
ret
mov
push
sub
ret
loop
xor
sub
jl
xchg
mov
movsb
sub
mov
shlb
fmul
jge
jae
and
dec
sbb
lods
pop
xor
out
test
mov
clc
bound
fidivl
popa
or
jecxz
push
loop
rcrl
and
sbb
loope
loopne
push
outsb
cmp
adc
pusha
mov
fbstp
shl
xchg
pop
iret
cmp
ljmp
and
xor
or
xchg
jae
sbb
sub
ret
sub
cltd
pop
and
jns
jp
sub
imul
cmp
lahf
xchg
dec
decl
push
lods
bound
fbld
xchg
adc
cmpsb
cmpsl
pop
xor
cwtl
push
sahf
hlt
or
das
lret
out
xchg
cmpsb
mov
sbb
xchg
push
push
mov
inc
fstpt
imul
movb
cmp
stos
fimull
xchg
add
in
sbb
sbb
xchg
sbb
inc
fs
mov
repnz
cmp
cmp
sub
dec
loop
nop
push
clc
mov
dec
ja
jg
adc
push
inc
adc
or
pop
out
inc
push
inc
inc
ljmp
lds
pop
pop
sarb
test
scas
pop
leave
xor
add
divl
leave
cmpsb
sub
incb
sbb
lcall
gs
movsb
mov
loop
outsb
ret
inc
mov
adc
xchg
add
xor
into
mov
and
fs
inc
cmpsb
cs
pusha
xchg
dec
int3
jg
add
pop
ljmp
jne
jae
sti
xchg
and
clc
pop
push
xchg
jno
mov
push
dec
loopne
sahf
fwait
pop
push
loopne
adc
addr16
out
adcb
sbb
cmpsb
out
add
xor
sbb
jmp
cmc
cs
sub
stc
mov
mov
sbbl
cmp
notb
rorb
cltd
out
pop
lahf
add
jnp
sbb
xchg
add
data16
movsl
mov
sti
and
aaa
xor
pop
hlt
xchg
sbb
dec
rcrl
xchg
in
jae
inc
std
das
cmp
jmp
lahf
rorb
add
or
xchg
std
pushf
inc
iret
adc
or
pop
dec
fidivs
aam
fs
and
aad
mov
jg
sub
int3
xchg
mov
pop
pop
hlt
push
test
out
test
movsl
icebp
mov
xchg
cli
mull
sbb
lret
mov
mov
xchg
mov
out
dec
adc
push
jns
and
insl
lret
frstor
fs
cmp
mov
mov
lcall
mov
pop
inc
or
pop
mov
lds
lds
sub
dec
jecxz
sbb
in
pop
stos
in
inc
mov
and
mov
leave
std
cltd
adc
adc
cmpb
cltd
iret
mov
pusha
add
loope
pop
and
shl
mov
mov
aam
pop
rcrl
pop
sub
pop
sahf
jo
mov
rclb
mov
mov
xchg
cmp
fnstenv
push
scas
xor
mov
pop
fsub
adc
sub
jo
pop
or
mov
mov
adc
stc
cmp
orb
imul
mov
push
pop
stos
inc
pop
pop
popa
clc
nop
clc
int
pushf
lea
outsb
ljmp
mov
les
insb
xchg
popf
xchg
or
insl
es
sti
sub
mov
stos
or
pop
aam
pop
add
lahf
push
xlat
mov
ret
popf
xor
xchg
jne
test
push
sbb
cmpsb
leave
jecxz
adc
mov
lcall
mov
pop
out
xchg
leave
push
pop
ret
sbb
cmp
sub
dec
loop
jge
mov
fldcw
or
scas
andl
sbb
clc
daa
mov
mov
mov
in
dec
xor
jp
shll
ja
jecxz
pushf
cli
ljmp
mov
jae
sbb
popa
cmp
jno
mov
push
inc
sahf
xor
jmp
in
outsl
fnstenv
push
push
push
mov
popf
pop
mov
in
mov
or
aaa
pop
sbb
xchg
mov
daa
test
fcmovb
lock
jbe
or
pop
mov
testl
mov
dec
push
stos
inc
stos
cltd
imul
outsb
adc
xor
mov
mov
jb
jo
in
rol
es
icebp
fdivl
mov
clc
xor
sti
pop
cmpsb
stos
mov
hlt
ljmp
cmpsl
test
cli
out
sbb
loop
and
repz
test
cwtl
mov
mov
leave
inc
mov
mov
sub
and
inc
xchg
and
icebp
cmp
stc
ret
push
sahf
pop
adc
or
dec
in
mov
sub
fdivs
int3
lret
sbb
lock
js
iret
les
clc
inc
test
dec
enter
scas
pop
adc
mov
mov
mov
subb
mov
lcall
scas
xchg
and
mov
stos
jmp
pushf
mov
sti
add
sbb
repnz
jp
outsb
mov
out
jno
out
sbbl
or
aad
divl
dec
pop
dec
cmp
les
mov
popa
jl
xchg
lahf
cmp
add
mov
sarl
fyl2xp1
mov
pop
sub
cwtl
aaa
addr16
and
add
xor
sbb
push
cwtl
in
sti
xchg
out
push
and
frstor
mov
xor
mov
xor
mov
stos
dec
mov
pop
xchg
aaa
cmpsb
out
jmp
pop
jae
xor
and
in
xchg
les
aad
popa
jle
sub
xchg
and
scas
repz
ja
mov
jae
push
test
js
fdiv
adc
push
cmc
cld
mov
cmp
inc
sbb
dec
mov
and
iret
jmp
sbb
sti
adc
mov
xor
mov
sbb
adc
enter
sub
sbb
push
popa
jns
idiv
rcrb
xchg
jno
lret
push
add
xchg
push
arpl
fs
jmp
sub
add
mov
arpl
sbbb
xorl
vaddpd
xchg
fs
add
adc
jae
stos
fxch
push
mov
daa
and
jg
cmpl
add
sar
test
movsl
cli
xor
mov
bnd
into
mov
outsl
clc
fdivrs
pop
mov
lahf
jecxz
mov
jne
dec
mov
xchg
mov
int
leave
xor
out
rcrl
adc
mov
pop
sbb
mov
loopne
ret
adc
sbb
inc
scas
into
aas
jecxz
movsb
mov
inc
inc
fdivs
fwait
lods
bound
cmp
inc
xorb
out
sbb
nop
fs
addb
jae
inc
in
mov
push
and
int
jb
std
lcall
in
dec
imul
sub
test
mov
ljmp
pop
cs
jecxz
cmp
sbbl
pop
pusha
sti
mov
jbe
pop
rolb
popl
jno
hlt
in
mov
push
or
add
jmp
imul
adc
sbb
xchg
movsl
inc
inc
mov
es
lods
outsb
sarb
int3
mov
pop
insl
lock
mov
push
jbe
lods
push
cmc
push
mov
inc
jmp
xchg
call
cwtl
shll
decb
mov
clc
fs
testl
ret
lock
jmp
sahf
ss
imul
les
or
movsb
mov
cmc
dec
loop
mov
frstor
sbb
scas
add
je,pn
xor
aad
fisubrl
notb
xor
loop
xor
cmp
dec
mov
fstl
dec
out
repnz
clc
ret
dec
mov
or
inc
ffreep
cmp
mov
pusha
addl
mov
jae
rcrl
dec
sbb
adc
std
pop
adc
push
sbb
mov
jmp
dec
fstpl
iret
xlat
inc
jb
sarl
mov
das
mov
mov
mov
xlat
inc
popl
xchg
or
cmc
movsl
push
pop
push
or
jge
scas
jne
fwait
push
shl
xchg
icebp
mov
or
hlt
mov
cld
mov
mov
mov
push
loop
jecxz
mov
jl
xchg
stc
and
jo
imul
call
mov
sub
mov
loopne
mov
mov
mov
orb
or
add
imul
xchg
ret
dec
push
sub
jmp
call
or
fsts
aaa
push
sbb
or
pusha
orb
loop
es
add
push
xor
and
inc
jnp
push
mov
cmc
insb
jge
and
push
mov
or
movsl
pop
and
jl
jae
cmp
repnz
dec
cmp
cmp
mov
sub
lcall
out
inc
sub
sbb
lahf
sbb
mov
movsl
fcomps
call
add
call
mov
cmpsb
mov
out
dec
mov
jmp
dec
sub
dec
sarb
ss
int
add
les
jbe
jno
add
adc
jl
stos
sub
mov
inc
dec
sbb
outsb
and
pusha
imul
or
lock
dec
sbb
rclb
jmp
push
lret
call
ret
arpl
push
loope
test
andl
jns
xchg
js
jns
xlat
mov
jns
pusha
aaa
pop
xchg
aam
mov
add
dec
xchg
outsb
sbb
jb,pt
and
cwtl
pop
ljmp
in
icebp
xlat
cmp
aas
repnz
rorb
out
push
xor
xlat
stc
mov
cmc
jo
rcrl
sbb
lds
shlb
clc
mov
mov
push
or
adc
adc
es
dec
negl
in
ret
add
pop
adc
daa
cmp
mov
inc
add
fisubs
mov
ret
gs
pop
cmc
paddq
or
pop
sbb
push
in
mov
aas
cmp
add
imul
mov
pop
xchg
mov
leave
insb
jg
mov
mov
fcom
fsubr
inc
or
testl
cmp
cli
mov
inc
sbb
mov
push
out
mov
fwait
adc
mov
pop
icebp
mov
or
aad
mov
push
scas
rcrl
dec
mov
sub
pop
mov
aaa
xchg
add
fwait
movsl
inc
lds
mov
ss
and
test
cmp
dec
xchg
leave
pushf
pop
imul
mov
movntps
jl
insl
pop
scas
insb
add
ret
scas
sbbl
add
jnp
adc
add
inc
inc
dec
rcl
ret
clc
adc
rcrb
test
loopne
sbb
mov
in
aad
adc
mov
lcall
inc
jnp
mov
dec
dec
mov
rolb
and
fiadds
js
adc
mov
dec
test
dec
xchg
in
leave
loope
adc
adc
add
mov
inc
pop
rolb
dec
ds
cmp
stos
repnz
out
add
jg
shlb
scas
mov
jl
xchg
mov
adc
push
or
mov
ret
jmp
push
idiv
sar
cwtl
mov
jns
sub
cmc
adcl
nop
test
cmpsb
adc
cltd
test
push
xor
push
mov
xlat
movsl
lret
lret
in
iret
dec
pop
repz
mov
xor
cmpsb
lock
sub
popf
aam
jl
inc
cld
mov
fldt
jbe
pop
push
mov
inc
insb
aaa
pusha
nop
leave
mov
inc
mov
lahf
sub
inc
insb
out
push
adc
les
push
adc
inc
jb
push
lods
les
jae
sahf
jb
lahf
mov
sub
and
andl
cwtl
outsl
pop
push
fiaddl
jle
sub
ja
mov
int
cld
je
and
xchg
sti
notl
ds
call
ljmp
inc
mov
lcall
cltd
outsl
sbbl
mov
test
xor
int
lret
sahf
lea
mov
lods
loopne
push
xor
rolb
cli
mov
lahf
pop
jae
cs
das
pop
movsb
pop
aad
movsl
mov
jns
add
test
cmpl
lcall
jg
gs
hlt
mov
mov
ds
xchg
ds
rep
cmpl
pop
sbb
into
fidivrs
jp
mov
inc
jecxz
dec
ret
pushf
ret
push
jge
push
insb
int
xchg
push
repz
test
dec
aad
jl
jns
leave
out
test
or
faddl
jecxz
push
mov
es
push
loopne
ret
pushf
int
fbstp
out
dec
lds
mov
jecxz
hlt
sbb
dec
cwtl
or
mov
xchg
scas
fwait
jno
xchg
xor
fabs
mov
pushf
push
mov
es
adc
lret
xchg
mov
mov
or
lahf
cmp
sbb
testl
icebp
cmp
idivl
push
loop
cld
shrl
xchg
mov
xchg
mov
loop
inc
push
xor
jno
aaa
ret
test
xor
push
pop
and
push
push
cmp
xchg
push
pop
adc
sub
mov
sbb
or
adc
sbb
ds
lods
mov
and
add
mov
add
push
shrl
imul
lret
inc
push
dec
mov
push
cmp
pop
dec
loop
jecxz
add
call
mov
stc
jecxz
loopne
mov
stc
cmp
mov
adc
inc
mov
orb
pusha
shrl
sbb
sbb
lock
mov
iret
pop
inc
jno
or
in
dec
out
lcall
cmc
jne
sbb
pop
mov
arpl
adc
xchg
mov
or
adc
sti
add
enter
cld
jmp
mov
add
jmp
test
inc
sub
push
test
insl
sti
enter
cmpsl
insl
xor
push
xchg
cli
aam
int
div
and
mov
dec
testb
outsb
pop
dec
mov
lods
xor
dec
mov
push
rol
mov
sbb
jb
jl
scas
std
inc
das
arpl
mov
cmp
add
mov
mov
cmp
and
test
cmp
cmp
nop
loop
mov
push
cli
adc
popl
pop
or
xor
mov
sub
loope
nop
mov
xchg
cmpl
xchg
sbb
lahf
dec
cmc
arpl
rep
shrb
arpl
mov
xor
or
enter
pop
xor
adc
pop
loopne
inc
sbb
mov
pusha
enter
ljmp
into
loop
and
les
cmp
test
jecxz
adc
inc
pop
subb
inc
add
mov
mov
jnp
inc
mov
pushf
outsl
fcomp
or
xor
into
adc
pop
cmpsb
push
xchg
hlt
or
aaa
mov
pop
jbe
inc
push
sub
gs
ss
ljmp
jo
divb
outsl
test
popa
lcall
mov
das
sti
lret
adc
and
gs
inc
lret
imul
rcl
sub
fisttpl
adc
aas
push
add
test
out
mull
push
xor
mov
out
dec
mov
ljmp
shlb
rolb
outsb
jl
push
xchg
scas
int3
stos
push
mov
sub
inc
xchg
xor
mov
cli
in
mov
lret
xor
jb
pop
sub
pop
and
lods
jp
xor
cltd
test
jnp
out
jnp
fisttpl
mov
mov
lahf
fs
dec
dec
mov
and
cmpsb
push
mov
cld
mov
jns
gs
iret
es
gs
popa
push
add
sbb
jmp
popf
adc
popa
roll
sub
rcrl
adc
xchg
fbld
insl
dec
dec
pop
or
pop
xchg
push
xchg
add
dec
jp
fs
jo
dec
inc
stos
lds
sub
loopne
mov
sti
inc
adc
in
pop
add
add
mov
push
or
push
divb
xor
adc
in
xchg
out
inc
push
fbstp
mov
push
jbe
loopne
popf
scas
ljmp
dec
fs
jmp
push
gs
add
xor
dec
test
cmp
adc
dec
push
movsl
icebp
ret
jmp
push
and
xchg
sarl
inc
call
xor
imul
pop
sub
inc
fidivs
cmp
cmc
adc
data16
stos
pop
rcl
cmp
mov
xor
andb
dec
sbb
mov
movsb
jg
jnp
mov
test
sub
jae
out
lds
and
xorb
xchg
xor
sbb
inc
outsl
fildll
insb
popa
test
mov
gs
adc
sahf
add
xchg
mov
cpuid
cli
sbb
in
mov
ficomps
leave
stc
addr16
jbe
rclb
xchg
into
in
cltd
insb
inc
dec
je
add
outsl
mov
dec
mov
int3
hlt
inc
pushf
dec
bound
mov
jge
test
or
decl
add
fisttps
gs
mov
insl
hlt
dec
pop
inc
stos
les
add
sub
ret
aaa
mov
and
adc
jg
xor
lret
stc
xchg
movb
mov
jg
pop
pop
jp
out
pop
and
push
jp
or
cmpsb
mov
mov
nopl
push
inc
jmp
add
xor
aam
gs
rcll
dec
stc
lret
into
fucom
sub
add
and
push
mov
rcrl
xor
das
inc
shll
fnsave
mov
out
dec
jmp
and
rcr
das
movsl
sbb
out
jg
dec
inc
sub
adc
add
sbb
cmp
adc
cmp
mov
aaa
es
push
dec
popa
push
dec
lods
jb
imul
pop
push
pusha
leave
xor
adc
enter
lods
inc
sti
pop
sub
pop
stc
leave
adc
mov
shrb
into
and
popa
andl
lret
bound
jmp
add
dec
pop
or
iret
adc
mov
mov
jb
call
or
mov
ret
jge
inc
enter
gs
sbb
cmp
cmp
xor
notl
jl
int3
sub
stos
inc
mov
sbb
dec
fld
sarb
push
or
aas
xchg
mov
lods
pop
inc
add
repnz
xor
int3
cmp
iret
and
sub
incl
mov
pop
adc
dec
inc
sar
ds
outsl
jge
add
popa
pop
imul
cmc
lcall
in
das
in
cmpsb
ss
sub
shrb
jb
mov
aad
sbb
mov
js
sbb
mov
mov
adc
fmul
daa
dec
lahf
fnstsw
ss
mov
lahf
push
add
dec
mov
movsl
call
in
inc
push
movsl
cld
pop
jae
mov
daa
bndstx
push
fidivs
leave
push
cmpsb
mov
adc
inc
jmp
xor
inc
lds
into
pop
jmp
notl
mov
lds
sarb
adc
scas
dec
movsb
push
cmpsl
xchg
or
xlat
repz
ds
mov
xchg
sub
dec
lahf
and
sahf
cs
xchg
push
dec
bound
inc
lret
cmpsb
jmp
and
ss
cwtl
mov
and
aas
loop
jbe
iret
es
dec
sub
popf
jg
push
leave
pop
pop
ljmp
sbb
add
add
fdiv
cmp
jmp
sbb
dec
pop
fdivl
sbb
push
mov
xor
dec
pop
out
jmp
lahf
sbb
inc
mov
pop
fisttpll
xor
js
ja
add
sub
popf
inc
fcompl
aas
inc
test
mov
sub
xchg
stos
mov
sbb
mov
push
aad
movsb
cwtl
mov
pop
insb
cwtl
fstl
cmpsl
call
lahf
mov
decb
mov
pmaxsw
test
push
pop
cmc
or
je
test
lret
sub
cld
ljmp
push
out
hlt
push
scas
call
xchg
lods
xor
lea
and
mov
notb
xor
enter
xorb
inc
out
imul
cmp
sub
pop
imul
fsubr
add
jle
mov
and
sub
in
orb
aad
add
mov
push
pop
pop
sbb
lea
scas
push
pop
sbb
js
push
stos
and
mov
push
cli
inc
mov
js
xchg
stc
xorl
and
out
cwtl
mov
or
push
pop
pop
shlb
sub
mov
nop
sub
xchg
mov
daa
aam
arpl
mov
lret
xchg
adc
fwait
xor
mov
shlb
ret
fldl2t
test
aaa
jnp
push
and
fnstcw
or
xchg
mov
mov
insl
add
repz
lods
pop
xor
cld
push
adc
mov
xor
ja
sti
fistpl
mov
gs
xor
add
and
in
add
mov
fisubrs
scas
push
inc
fistpl
and
scas
xchg
or
js
cmp
jp
pop
sbb
test
jl
stos
xor
arpl
in
push
lret
push
mov
xchg
ljmp
and
fnsave
jl
jo
sbb
or
cmp
mov
sub
push
add
out
mov
cmp
inc
push
stos
divb
cmp
popf
clc
mov
and
sti
sub
sub
fdiv
jl
loop
stos
nop
mov
cmc
mov
pop
dec
dec
rcr
dec
arpl
dec
and
js
jnp
out
xchg
cld
push
sbb
or
push
movsl
push
mov
cmc
aas
fwait
mov
cltd
fwait
decl
fldl
jnp
js
dec
pop
pop
test
mov
adc
pusha
xorl
test
jno
sub
jg
es
in
cs
pop
mov
xor
pop
push
add
hlt
mov
adc
push
pop
sti
hlt
push
xor
enter
bound
mov
and
enter
dec
sub
pop
jo
fdivrl
cmpsb
popf
call
pushf
int
aam
or
daa
sub
lock
cmpb
add
sub
jecxz
or
lods
sub
push
or
int3
jno
push
xchg
imul
mov
mov
inc
pop
scas
add
shl
push
and
cmp
pop
cmp
jns
out
cmp
pop
mov
ss
pop
icebp
data16
pop
fcomip
roll
dec
xor
dec
pop
jmp
mov
test
inc
clc
nop
je
sub
fwait
and
scas
lahf
or
test
arpl
scas
jmp
scas
push
repz
or
mov
fcompl
out
mov
nop
test
hlt
popf
push
cmpsl
pop
and
cmp
cmc
iret
bound
les
lret
in
cmc
mov
push
xchg
xchg
ljmp
insl
dec
dec
xchg
scas
xor
push
jnp
mov
sbb
ret
fdivrp
push
mov
inc
dec
sbb
daa
xor
shlb
push
jno
cmp
imul
jbe
mov
add
push
sbb
jmp
xor
into
adc
cmovo
or
insb
or
inc
aad
adc
cmc
push
fisubl
jb
adc
sbb
loop
adc
inc
f2xm1
mov
jmp
adc
inc
pop
xor
jle
inc
enter
mov
mov
ret
push
xor
push
mov
or
push
shrl
scas
xchg
xlat
sti
xchg
mov
jnp
mov
iret
cmp
mov
pop
push
imul
xor
popf
jg
mov
cs
cmpsl
xchg
hlt
xor
aad
and
lock
mov
sub
aad
lahf
lcall
or
push
add
aam
mov
popf
xor
pop
jge
adc
mov
ret
scas
out
or
cmp
insl
mov
ja
xor
xchg
and
dec
lea
imul
jmp
popf
mov
adc
pop
ficompl
addb
and
loope
cmp
mov
xor
pop
into
xor
jb
xchg
jae
sub
insl
add
mov
push
mov
cltd
add
jecxz
outsl
sbb
add
ja
add
inc
into
fldcw
mov
push
sarb
cltd
int
int3
test
mov
addr16
enter
addw
lods
or
push
lods
cwtl
movsl
inc
enter
sti
mov
scas
nop
jnp
clc
sbb
shll
dec
cld
into
adc
lcall
negb
sahf
cmpsl
mov
or
dec
scas
out
loope
popa
xor
add
push
fs
cmp
mov
inc
sbb
sbb
cwtl
stos
xchg
pop
out
inc
cld
in
fdivrs
jne
cltd
dec
stos
ds
xchg
lds
lods
arpl
aaa
roll
insb
imul
pop
jmp
popf
dec
xor
jg
cwtl
das
mov
cld
mov
push
mov
movsb
cmp
call
and
outsl
push
add
scas
xor
xchg
data16
adc
mov
icebp
xlat
jmp
mov
dec
scas
sub
pop
dec
jecxz
xor
iret
insl
stos
out
roll
iret
ja
cmp
push
push
cmpsb
dec
xchg
sub
pop
xor
xor
sti
test
and
rcll
jecxz
stc
nop
cltd
add
jmp
mov
scas
cli
data16
mov
xor
push
adc
in
or
subl
fldt
or
sbb
icebp
js
test
shr
les
mov
sbb
ja
push
ja
add
cmpsl
and
rolb
or
sbb
pop
stc
mov
pop
jp
sub
xchg
sub
xor
push
gs
fidivrs
gs
shll
outsl
daa
mov
cwtl
pop
mov
aad
in
lods
repnz
ljmp
data16
into
enter
xor
int3
leave
inc
push
inc
shrl
fidivrl
lcall
jne
jle
pushf
test
mov
test
xchg
scas
fimull
je
inc
xlat
lods
outsl
dec
loope
int3
pop
jmp
cmp
enter
cmp
mov
push
xchg
movsb
mov
ret
jb
pop
outsb
mov
mov
mov
mov
jg
jmp
cmpsl
add
add
ret
jnp
dec
inc
fsubs
push
inc
mov
xor
hlt
xchg
inc
pop
popf
sub
add
imul
mov
mov
jp
stos
insl
leave
int
jg
std
into
dec
mov
xchg
lds
push
js
cmp
or
xchg
pusha
pop
add
or
jmp
xchg
int3
adc
jo
sub
xor
mov
aaa
push
rclb
js
dec
sub
enter
mov
das
stos
sub
les
lods
sub
mov
mov
inc
je
movsb
repnz
lock
loopne
xchg
xchg
add
sub
xor
gs
inc
rcr
xchg
xor
lea
leave
xchg
pop
icebp
mov
xor
insl
xchg
add
hlt
inc
pop
and
or
push
ja
xor
arpl
mov
and
push
or
leave
cmpsb
mov
jle
in
push
mov
jge
outsl
daa
mov
add
iret
push
leave
or
mov
ja
jl
lods
xchg
shll
dec
hlt
mov
scas
add
lcall
and
cli
mov
jne
lock
adc
jg
jb
cld
mov
fwait
fwait
ss
mov
cwtl
cmc
jb
dec
mov
mov
xchg
std
and
lock
js
mov
adc
sub
leave
and
jns
pop
pop
cmp
cwtl
in
popf
jp
lods
ret
adc
lods
pop
into
movsl
or
mov
jp
pop
adc
adc
pop
inc
jae
inc
add
dec
sub
lahf
or
cmp
or
mov
inc
jle
jl
pop
movsb
xchg
lea
cli
and
adc
mov
pop
xchg
movsl
jp
mov
cmp
mov
add
xor
xlat
sub
ret
outsl
xchg
mov
dec
imulb
cmp
add
sbb
imul
sub
sbb
cmp
push
aad
lock
out
shrl
mov
arpl
add
popa
inc
push
ja
and
and
cmp
xor
push
sub
xor
pop
adc
or
repz
mov
add
jle
xor
sbb
jae
test
insb
lods
lret
push
add
fldcw
shrb
cwtl
jbe
lahf
repnz
stos
out
xor
mov
ds
test
mov
or
mov
aam
aas
push
xchg
dec
or
dec
sahf
cmpl
push
ret
and
pop
and
mov
gs
cmp
cmp
shl
test
and
xor
lock
pop
xlat
adc
lret
dec
sub
jp
addr16
pushf
das
addr16
hlt
lahf
jbe
cmp
adc
lods
dec
add
jecxz
mov
arpl
jecxz
and
scas
push
in
lods
inc
gs
jb
orl
push
test
adc
adc
jbe
scas
jmp
or
lret
add
bound
dec
pop
mov
das
int3
testl
in
sbb
cli
mov
xor
out
pop
mov
push
sub
mov
movsb
jge
cwtl
shl
mov
sub
dec
mov
repnz
pop
xor
gs
fmul
out
dec
pop
js
xor
dec
dec
pop
js
dec
stos
xlat
add
xchg
notb
mov
jge
es
jle
int
mov
insl
push
jo
sbb
inc
or
shrl
les
nop
int3
sub
pop
cld
mov
inc
mov
rclb
cmpsl
push
inc
dec
sbb
outsl
test
mov
mov
insb
data16
arpl
lcall
dec
pop
mov
mov
cmp
call
ret
outsb
shl
ret
xor
xchg
in
fwait
repz
test
call
dec
hlt
inc
jb
cmp
or
sti
mov
fwait
sub
mov
sahf
dec
or
sbb
push
iret
lock
loop,pn
cmc
cmp
stos
mov
les
xchg
or
cmpsl
ljmp
push
cmp
xor
adc
xor
adc
lret
mov
iret
mov
mov
mov
por
daa
cmp
stos
pop
lahf
and
sbb
mov
pushw
out
push
xor
gs
adc
daa
push
xchg
repnz
add
movsb
icebp
and
icebp
lret
inc
ficoml
xor
xor
inc
push
mov
ret
out
or
lock
dec
pop
imul
sbb
dec
pop
jnp
push
cld
jns
lods
jo
adc
scas
into
dec
andb
adc
rclb
fs
push
jmp
test
or
call
dec
out
xor
in
lods
xchg
insl
jge
je
std
movsl
outsb
inc
bound
inc
jno
icebp
rcrl
gs
call
cs
pop
push
call
scas
and
cmp
iret
aam
nop
js
in
mov
test
aam
mov
js
lret
cltd
ss
xchg
pushl
xor
es
loope
shlb
inc
daa
add
xor
push
pop
out
inc
mov
adc
mov
mov
iret
data16
orl
andb
xchg
in
pop
call
cmc
xchg
sbb
out
inc
mov
mov
fmuls
adcb
sbb
popa
dec
iret
mov
lret
xchg
ljmp
imul
lock
cltd
sub
cmp
addl
jge
daa
xchg
sbb
cmp
outsl
popf
into
fsubl
iret
and
or
push
lds
jb
sbb
outsb
gs
arpl
rcrl
sub
xchg
push
int3
sbb
push
in
xchg
les
jne
mov
mov
sbb
jg
mov
aas
test
lret
cld
fiaddl
cmpsb
dec
fwait
mov
int3
scas
das
jg
in
shrb
lds
xchg
arpl
xchg
dec
push
int3
arpl
fs
jbe
inc
in
push
mov
rolb
test
xor
in
js
std
mov
jmp
ljmp
out
fsubr
add
cmp
push
and
jnp
call
in
ds
fisttps
pop
inc
push
int3
xchg
leave
stos
sbb
cmp
mov
or
data16
addr16
sub
mov
arpl
mov
enter
popf
lock
add
mov
movsl
push
dec
or
or
iret
loopne
lret
dec
add
dec
mov
pushf
sti
and
lcall
and
scas
push
xchg
loope
nop
repz
sbb
adc
jge
push
mov
loop
scas
mov
fsubr
mov
into
xor
lret
sti
scas
loopne
imul
repnz
and
test
jecxz
outsb
mov
fidivs
fsubr
xor
popa
loopne
inc
out
mov
mov
seta
outsl
sbb
cli
jl
mov
mov
jge
int3
scas
stos
aas
push
in
cld
xchg
push
push
lret
icebp
enter
lea
enter
dec
sbb
jb
sub
shl
push
jo
add
cld
cltd
imul
or
mov
in
cmovge
mov
int
ficomps
jae
lret
or
lods
push
mov
dec
mov
pop
out
adc
test
fiaddl
mov
cmp
rcrb
jle
xchg
es
shr
xor
scas
cs
movsb
mov
push
xor
out
xor
addr16
cmp
jecxz
jae
sahf
adcl
mov
das
ficoms
push
lods
js,pt
inc
jge
int
pop
rorb
into
icebp
pop
mov
andl
push
mov
cld
jg
adc
mulb
aas
mov
stc
clc
cmp
cmp
addr16
cmpsl
mov
mov
in
std
pop
push
mov
xor
xchg
push
inc
ret
cmp
pop
fcompl
ss
es
shrb
push
pop
std
push
test
sub
or
xor
js
stos
in
mov
dec
in
std
xlat
in
imul
add
je
mov
xchg
nop
sbb
pop
mov
lret
mov
loope
aad
movsl
nop
out
xchg
in
out
xor
lds
jl
sub
jne
pop
jmp
mov
ret
dec
bound
xor
cs
adc
mov
pop
adc
std
insl
mov
into
ret
stc
jg
inc
pminsw
lcall
lcall
test
bound
adc
lret
pop
adc
out
dec
icebp
mov
stos
mov
push
es
sbb
nopl
add
mov
mov
or
lods
inc
stos
sub
xchg
test
push
add
dec
pop
adcb
in
leave
mov
pop
call
mov
xchg
adc
lds
add
sbb
push
lock
bound
bound
mov
cmpsb
jecxz
stc
or
mov
and
pop
cs
sbb
imul
cmp
loope
mov
dec
or
ja
jl
push
sub
test
and
cmp
insl
out
repnz
popa
pop
lahf
js
bts
mov
xlat
pop
push
dec
xor
dec
mov
lea
jbe
ror
ss
stos
lds
inc
sbb
lahf
hlt
movsb
sti
mov
inc
jnp
inc
xor
push
rorb
dec
cmc
xchg
data16
sahf
clc
popf
inc
cltd
mov
or
lret
scas
sbb
imul
repnz
pop
mov
jg
loop
clc
inc
inc
sbb
adc
sbb
fnstsw
out
fcomp
mov
test
fdivrl
push
and
mov
dec
fdiv
lret
xor
inc
ljmp
test
cmp
loope
outsl
inc
out
sub
cmp
int
mov
rclb
pop
sbb
push
imul
clc
gs
fisubrl
pop
mov
mov
loope
loope
sbb
jns
and
jge
in
outsb
dec
fwait
add
not
sbb
adc
or
sbb
mov
cmpsb
test
add
out
test
dec
pop
add
lret
sti
not
sub
std
dec
mov
pop
mov
adc
inc
fwait
mov
movaps
lods
test
sbb
sbb
mov
shrb
push
out
xchg
lock
shlb
pop
repnz
in
sbb
ret
aaa
push
call
cmc
lcall
mov
inc
dec
pop
cmpsb
popa
pop
cwtl
pusha
aas
stos
jge
push
pusha
out
xchg
je
xor
xor
adc
dec
loope
icebp
adc
inc
push
mov
addr16
push
or
pop
lds
popa
mov
insl
jecxz
lahf
in
ldmxcsr
mov
arpl
enter
mov
inc
enter
pop
jb
enter
loopne
movups
sti
test
add
xor
cmp
push
cld
addr16
add
xchg
cltd
mov
inc
jnp
faddl
push
mov
adc
arpl
jno
jl
subb
iret
xor
dec
shr
jge
pop
scas
pop
pop
cmpsb
es
and
hlt
jp
hlt
sti
jg
add
sbb
sahf
dec
cmp
ss
stos
xchg
push
jb
aas
cmpsl
adc
ficoml
mov
leave
and
cmpsb
rcl
hlt
mov
cs
repnz
mov
dec
push
lods
jo
jecxz
add
dec
cli
pop
inc
jecxz
mov
pop
in
cmp
dec
aad
jge
stos
call
sbb
jle
or
test
xor
inc
push
repnz
lret
and
sub
mov
dec
mov
loop
pusha
push
test
stos
xor
fdivp
leave
sahf
lods
pusha
inc
and
js
psraw
inc
cld
xor
xchg
sti
and
cmp
aaa
sar
xor
adc
or
cmp
rcrb
outsb
add
xlat
repnz
movsb
fldt
sub
sbb
cmp
shl
xchg
and
lahf
mov
shlb
lret
or
inc
ret
scas
fsubr
pop
loope
jg
xor
xchg
test
inc
fst
movsl
sbb
out
cmp
pop
inc
testb
in
xor
ret
push
dec
xor
jle
lret
and
mov
or
imul
sbb
push
cmp
inc
cmc
fwait
add
insb
pushf
jo
push
push
jmp
ret
popf
xor
enter
or
ret
mov
jns
test
stos
data16
outsb
inc
test
dec
mov
lds
lret
pushf
dec
int
mov
jbe
pop
fisubs
arpl
jnp
fs
ret
adc
les
mov
lods
out
loop
adc
jno
mov
sbb
push
out
ds
mov
mov
push
mov
les
ss
outsl
lret
cmp
jne
inc
out
mov
lods
add
lods
sbb
push
mov
mov
inc
bsf
and
mov
xlat
ret
pop
imul
lods
sbb
into
pop
cmp
mov
xor
adc
jbe
mov
mov
fdivp
cmp
aam
repnz
cs
stc
mov
orl
lret
cmpsl
es
lea
sbb
popa
mov
dec
lds
and
cs
mov
movsl
mov
sbb
loope
mov
jo
add
addr16
adc
int3
mov
icebp
adc
adc
adc
repnz
pop
fs
inc
jge
mov
push
xchg
add
lds
popa
outsl
mov
loop
scas
inc
mov
jb
aad
mov
mov
sbb
cwtl
es
out
jg
movzwl
ja
pop
pop
cmp
adc
xchg
xor
jns
int3
xchg
fcom
mov
dec
or
fldcw
mov
rorb
ret
xchg
mov
fstps
jnp
cltd
xchg
add
pushf
cmp
mov
daa
jo
ss
pop
sub
scas
mov
lret
push
push
test
sbb
dec
mov
rcrb
out
js
mov
push
stos
dec
aas
and
mov
jns
scas
jo
mov
outsb
sbb
rorl
loope
sub
push
aad
ss
cmpsb
sti
in
out
or
cmp
push
out
arpl
and
aad
sbb
push
pop
mov
pop
jb
aaa
xlat
xchg
push
or
adc
pop
insb
jle
add
movsb
aas
mov
popa
enter
xorl
push
dec
pop
fistps
mov
pop
mov
jb
cmp
mul
push
sub
sbbl
mov
sbb
lds
test
fnstsw
dec
jl
or
push
jb
sub
jge
jae
and
fstpl
out
fcoml
add
sub
rcrb
rcrb
xor
pop
fcoms
test
andl
add
pop
and
out
out
adc
xchg
mov
mov
xchg
mov
rorb
push
push
stos
mov
fisttps
sub
stc
rorb
mov
cmp
cmpsl
lds
mov
mov
mov
jl
loopne
xor
pop
adc
loope
or
inc
dec
outsb
mov
loope,pn
dec
rorb
add
pop
in
mov
jne
push
mov
jno
in
jp
xchg
pop
lock
ret
push
sarb
repnz
das
scas
bnd
fsts
neg
out
lods
or
jnp
pop
stos
lret
ja
sub
loope
and
add
nop
mov
lret
call
or
sbb
fs
xor
dec
sbb
mov
sub
mov
adc
fldcw
pop
ja
adc
dec
ja
add
clc
adc
mov
mov
dec
lds
and
das
mov
inc
sbb
movsl
pop
xchg
add
int3
in
repz
and
add
jns
cwtl
sub
cli
int
adc
fnsave
push
jno
clc
stc
jae
pop
movsl
sbb
mov
sbb
pcmpeqb
or
insl
xchg
psubusw
insl
aad
or
pop
testl
mov
lret
js
mov
pop
inc
and
ds
into
mov
mov
shll
lahf
cmp
pop
ss
and
pop
push
xor
adc
adcb
ret
addl
sbb
mov
xor
and
shll
cwtl
loop
cwtl
mov
shrb
jno
jmp
mov
add
inc
pushf
stc
inc
mov
dec
sahf
xor
xlat
sahf
mov
inc
in
ds
dec
ror
iret
les
dec
fisubl
xchg
ja
sti
aad
mov
fdiv
or
enter
es
or
mov
cwtl
cld
push
stos
test
shll
inc
push
pop
flds
cmp
lea
jmp
ss
pop
xchg
push
and
push
inc
cmp
aad
and
xor
jmp
orl
push
popf
xchg
outsb
cmpsl
mov
mov
mov
andb
loope,pn
repnz
imul
insb
jle
fwait
and
inc
scas
scas
inc
mov
cmpsl
int
and
mov
outsl
xchg
add
notl
sbb
fcomip
shr
stos
push
shl
xchg
push
shrl
lea
insb
mov
cmp
mov
mov
cmpsl
pop
cmc
hlt
iret
sbb
fistl
add
test
inc
int
xor
push
adc
rcll
ret
mov
xchg
mov
and
into
data16
cmp
icebp
dec
cmc
adc
xor
cmp
addr16
movsl
cmp
std
aam
sub
pop
enter
fcoml
ficoms
icebp
test
pusha
cld
aam
push
rcrl
mov
inc
stos
addr16
ret
dec
sar
js
mov
push
or
fwait
mov
inc
fdivp
jo
shlb
pop
aad
test
push
xor
pop
addr16
push
sahf
xor
pusha
jg
mov
jnp
loopne
dec
sub
jbe
sub
stc
jns
aam
mov
jecxz
rcr
sub
js
pop
es
xor
fstps
mov
sbb
mull
mov
in
jbe
movsb
jp
adc
popl
jl
into
cmp
mov
push
inc
mov
jmp
push
xchg
and
mov
xor
shrl
rcl
mov
in
fistpl
add
jo
xchg
es
mov
mov
dec
popf
pop
fmuls
inc
jle
fucomp
cwtl
sub
cmp
pop
push
mov
arpl
call
cmp
cs
out
cmp
mov
ret
mov
and
push
mov
adc
or
in
push
outsl
ret
fnsetpm(287
scas
arpl
xchg
fcmove
je
cmp
lods
cmp
sti
inc
pop
rclb
jnp
push
jbe
pushf
gs
int
pop
repz
ljmp
sbb
adc
cmp
decb
ret
adc
xorl
xor
out
jecxz
mov
call
cmp
fistps
adc
dec
scas
aaa
dec
ret
in
in
hlt
push
jns
xchg
inc
in
inc
or
test
roll
xlat
sub
xlat
xor
popa
adc
jno
lret
lret
test
insl
pushf
push
dec
mov
cld
dec
jno
mov
in
sbbb
mov
mov
cmp
push
int
dec
gs
cmc
inc
push
jae
push
or
dec
mov
xchg
mov
and
xchg
mov
sti
shrl
out
pop
mov
dec
mov
xchg
xlat
xchg
gs
clc
sbb
mov
shrl
iret
fisubs
je
push
adc
das
es
outsb
push
lcall
sbb
inc
cmp
bound
mov
mov
adc
xorl
pop
jns
adc
inc
xor
xor
inc
or
imul
loop
gs
cltd
aad
lea
mov
shr
mov
rcrl
sbbl
stos
mov
xchg
lock
lods
clc
std
fadd
cmpsb
inc
push
mov
cmp
jns
lock
add
add
mov
cmc
loop
add
ror
or
mov
pop
orb
or
add
add
les
xlat
dec
jecxz
sub
jae
sub
notl
es
mov
cs
cmp
or
cli
mov
sbb
cwtl
dec
and
cmpsl
xchg
cmp
cwtl
sarl
movsl
mov
ret
popl
cld
out
insb
imul
add
lods
cmc
popa
mov
shl
andb
mov
imul
dec
fldcw
insb
pusha
lods
fcoms
mov
xor
test
mov
cld
push
push
or
xchg
decb
inc
pop
fdivrl
xor
pop
push
push
jge
lock
fwait
xor
adc
popf
jl
mov
cmp
imul
mov
mov
out
mov
push
dec
cs
std
loope
loope
mov
xchg
mov
nop
sbb
popf
mov
push
ss
jge
loopne
pop
dec
nop
or
ds
fistpll
rcl
xchg
fsubl
lret
jle
cld
ljmp
jge
xor
push
push
xor
lret
pushf
test
aam
mov
scas
or
add
dec
mov
cmpsb
mov
xor
fldcw
rorb
push
jns
push
pop
jge
sub
cmp
inc
pop
jbe
xchg
popl
inc
ljmp
jb
andb
inc
std
and
stos
outsl
pop
outsb
ret
fisubs
cmpsl
js
inc
sub
jecxz
movsl
out
add
cmp
jns
mov
outsb
cmpsb
add
lret
cmp
sti
gs
dec
out
ja
xor
jnp
fcomip
test
inc
push
dec
cmpsl
adc
repz
jp
js
adc
mov
loop
inc
adc
xor
nop
insl
mov
bound
popa
mov
adcl
push
fcmovnb
sbb
add
sbb
xchg
popf
ss
xchg
jmp
jge
jb
fwait
inc
xchg
mov
adc
ret
in
les
fnstenv
mov
aaa
xorb
pop
cmp
add
pop
imul
mov
iret
in
jge
insl
popa
popf
sbb
add
dec
push
ljmp
fs
fidivrl
clc
jb
pop
cmp
add
jmp
mov
mov
bnd
xchg
mov
cmp
mov
xchg
jmp
or
push
mov
pop
mov
andl
and
pop
imul
xchg
test
adc
mov
stc
xor
push
mov
ret
inc
lret
push
pop
icebp
pop
into
fmull
rcll
add
lret
xor
in
push
scas
jmp
xorl
cltd
pusha
dec
out
jno
addr16
sbb
mov
mov
mov
fdiv
in
lcall
in
cmp
and
push
cs
adc
testl
add
fidivrl
or
push
mov
mov
mov
and
push
or
mov
push
sbb
sub
insl
popa
cmp
adc
daa
and
sbb
dec
mov
xorl
in
add
jp
fmuls
jle
lods
scas
sub
lcall
cmpsb
cmp
dec
ret
mov
rcrb
pushf
push
push
call
loopne
ljmp
xor
pushf
mov
add
dec
adc
add
jnp
jecxz
cli
push
lcall
push
inc
cltd
xor
jnp
xchg
int
ja
add
in
out
mov
adc
add
push
push
lds
stc
pop
decb
rolb
inc
or
jge
fistpl
pop
sub
shll
add
lcall
pop
repnz
pop
or
fdivrl
or
cmp
push
into
mov
in
sbbl
mov
ftst
jnp
xchg
push
out
mov
jg
or
stc
loope
pop
cmp
filds
pop
push
out
aaa
mov
adc
and
add
inc
outsb
dec
loopne
fs
stc
xchg
mov
sbbb
shlb
fildl
pop
cmc
or
in
push
mov
out
subl
jmp
xchg
adc
es
fisubs
sti
mov
add
jle
leave
aas
xor
mov
test
push
cli
add
xor
aam
fistpl
add
cs
inc
sbb
sahf
lahf
aas
pop
and
lcall
jge
add
add
or
std
cmp
inc
pop
cmc
pushl
mov
inc
and
roll
imul
es
aas
mov
loopne
mov
jne
in
jg
sahf
jg
bnd
adc
inc
mov
sub
addr16
into
gs
cmp
mov
push
pop
inc
mov
int3
jecxz
lret
es
outsb
jp
add
adc
dec
dec
mov
jmp
inc
test
out
cmc
jne
cmpsl
dec
and
lret
mov
jg
mov
stos
xchg
push
loop
fwait
imul
and
andb
pop
scas
adc
lahf
pusha
and
js
add
dec
leave
lods
mov
cs
pop
xchg
and
or
dec
pop
aaa
imul
jno
jecxz
pop
dec
push
sub
sub
aam
or
lcall
into
mov
jnp
imul
repnz
adc
cltd
adc
mov
pop
out
inc
aad
mov
sbb
jl
lahf
ds
stos
push
repnz
dec
stos
push
int3
test
shrl
outsb
adc
xchg
out
inc
dec
sbb
fldcw
fwait
jnp
inc
pop
mov
jae
and
fildl
dec
dec
sti
push
enter
cmp
shrl
cmp
add
test
pop
cmp
fdivs
mov
loopne
dec
cwtl
lea
outsl
fidivs
popf
lods
push
fistpll
pop
sub
bound
push
mov
jnp
popf
cmp
xor
pop
aam
and
mov
stos
inc
fcoms
adc
shrb
daa
mov
fmul
aad
std
pop
push
jmp
inc
xor
push
ret
mov
popf
out
mov
sub
xor
mov
xlat
cmpsl
lock
xor
pop
adc
dec
fs
push
mov
jmp
and
xor
mov
ljmp
mov
pop
mov
or
add
and
add
mov
imul
data16
mov
ds
das
stos
stos
hlt
mov
mov
pop
xor
cmp
movsb
mov
mov
shr
jno
mov
lcall
mov
dec
pop
int3
fwait
push
xor
stc
mov
pushl
decb
inc
sti
inc
cld
int
mov
jmp
rorb
fs
and
dec
push
cmp
addr16
sbb
aas
call
mov
or
cmp
mov
mov
or
clc
cmp
lret
push
inc
ja
xchg
std
xorl
push
cmp
adc
xor
bound
mov
push
negl
bnd
and
aas
push
mov
mov
clc
push
enter
iret
mov
loopne
outsb
jge,pn
sbb
mov
dec
sub
in
lds
xor
sbb
mov
lods
repnz
fldl
mov
out
int3
cwtl
xchg
mov
loope
daa
add
dec
mov
push
push
add
int3
pop
and
sahf
inc
sub
stos
jecxz
push
fcoml
sbb
fcmovne
sbb
dec
pop
inc
pop
sahf
inc
inc
gs
or
cld
jnp
pop
lods
enter
dec
loopne
sti
or
add
sbb
mov
inc
lret
out
icebp
sbb
and
mov
lcall
arpl
and
xchg
jp
lea
adc
push
movsb
std
test
push
jmp
or
xchg
or
mov
cmp
or
add
mov
loopne
dec
aas
or
cmp
cltd
mov
ljmp
dec
ds
js
push
jbe
cs
nop
or
add
inc
pop
inc
mov
inc
lret
jbe
std
mov
arpl
mov
lods
imul
cmpsl
hlt
push
in
out
mov
dec
or
push
sbb
cld
fildl
add
cs
loope
pop
cltd
xor
mov
aam
and
jl
adc
add
test
lret
mov
mov
pop
mov
js
inc
push
outsb
mov
into
shll
pop
mov
scas
inc
push
cmp
scas
cli
xor
test
mov
push
pop
lods
movb
sbb
pop
bound
bound
xor
sbb
or
cmp
clc
jno
sbb
inc
adc
repz
int3
test
xchg
loop
push
loopne
ret
jo
outsb
inc
std
push
pusha
testl
mov
xchg
test
xchg
and
je
cltd
gs
leave
int
decb
rorb
aas
rolb
and
ljmp
sbb
xchg
data16
shlb
jl
push
mov
data16
jg
gs
and
mov
sbb
into
in
adc
xchg
andl
std
dec
pop
icebp
jge
mov
mov
ds
inc
lcall
add
adc
decl
jns
fildl
sbb
imul
sbb
addr16
adc
push
daa
inc
out
dec
aaa
ljmp
mov
jp
push
mov
jg
out
pop
ljmp
jo
xor
test
and
popa
into
adcb
xchg
out
out
movsl
xchg
push
pop
shlb
vhaddpd
and
add
lock
sahf
xlat
pop
je
jecxz
icebp
adc
inc
dec
addl
aaa
add
iret
jle
ret
outsb
dec
or
inc
iret
pop
cmpsb
cmp
out
lea
mov
sbb
push
inc
clc
cmp
fadds
insb
dec
pop
popf
push
jno
add
and
inc
push
inc
mov
bound
jae
jnp
sub
mov
and
cltd
mov
shll
push
hlt
pop
hlt
repnz
add
xor
mov
mov
mov
jge
mov
mov
es
mov
cmp
orb
pop
in
pop
xchg
jmp
icebp
pop
cld
test
test
inc
sbb
rorl
or
fldenv
add
or
test
nop
lds
lods
dec
cmp
divps
and
adc
out
push
out
jne
or
push
xchg
mul
push
fimuls
loop
cmp
jmp
or
data16
pop
scas
rcrb
push
out
lds
out
jmp
arpl
cmp
mov
jbe
lret
mov
stos
subl
mov
add
xor
movsl
xchg
testl
mov
xchg
stos
adc
mov
jge
pop
imulb
into
jge
daa
sbb
push
ret
test
insb
stc
xchg
dec
sbb
outsl
xor
stc
dec
pop
fcoms
and
or
mov
fisttps
mov
outsb
sbb
mov
cmp
lcall
leave
adc
scas
das
cwtl
mov
fadds
or
shrb
sub
scas
jno
add
insb
int
mov
adc
dec
xor
mov
xor
addb
push
in
cmc
mov
test
jae
out
adc
sbb
sub
out
jp
pop
sahf
adc
fldl
lahf
push
shlb
or
loop
mov
mov
inc
pop
mov
push
rolb
xchg
pusha
ret
mov
pop
jno
adc
je
stos
test
aaa
outsb
sar
ds
sbb
sbb
mov
or
xlat
rcrl
sarl
and
pop
sahf
jns
add
stc
sub
ja
lods
push
jp
outsb
incl
adc
dec
icebp
cmp
mov
dec
pop
cli
or
add
ret
shll
pop
mov
daa
push
rcrb
adc
push
adc
loope
mov
jle
xchg
in
sub
xchg
cli
sbb
push
mov
mov
mov
arpl
push
mov
mov
pushf
dec
inc
lret
jg
dec
aad
sbb
pop
cld
add
inc
xchg
aaa
lret
or
fs
mov
je
xchg
pop
movsl
mov
adc
test
fldt
enter
fisubrl
xchg
and
jne
out
pop
call
in
inc
dec
or
push
fs
inc
es
mov
jecxz
lret
inc
sbb
std
jecxz
push
cmc
pusha
push
inc
shrb
mov
push
inc
sti
ret
pusha
fstpt
dec
push
lret
bound
mov
dec
int3
sbb
jle
mov
pop
idivl
mov
mov
pusha
mov
dec
out
imul
sbb
inc
lods
rcrb
and
push
clc
or
lcall
stos
sub
lock
and
stc
adc
sbb
mov
jbe
shlb
sarl
iret
add
jmp
in
push
mov
movsl
int
pop
lds
and
imul
movsb
xor
mov
inc
and
test
dec
dec
test
cmpsl
cmpsb
loop
je
stos
jle
daa
xchg
lret
mov
jae
sub
adc
xor
adc
ret
fistpll
pop
cmp
test
loope
popf
and
sub
clc
shlb
mov
fisubrs
push
push
out
sbb
and
test
popa
add
sub
xor
push
xchg
imul
insl
enter
mov
ret
mov
fdivr
cmp
mov
stos
fdivrs
mov
fmuls
sahf
pop
and
and
testl
int
cltd
fs
lret
cmp
adc
ss
negb
data16
mov
aas
inc
inc
cld
dec
daa
mul
stos
bound
xchg
jbe
dec
out
fs
shlb
addr16
ds
jmp
mov
xchg
int
jae
in
lret
jns
stos
lcall
xchg
push
lds
and
repz
fstps
out
fidivs
test
lds
nop
int
ret
scas
jg
jmp
ljmp
jg
adc
pusha
add
xlat
lock
out
mov
es
dec
sbb
push
jae
push
into
and
jmp
add
jmp
test
loope
insb
mov
mov
int
pusha
and
jb
int
clc
xchg
mov
dec
cmp
add
lds
and
pop
adc
insl
lret
test
aam
and
xchg
mov
or
adc
mov
mov
pop
and
outsl
fsubp
std
ljmp
aaa
xor
fs
les
dec
push
fnstenv
xorl
jae
xor
shll
jae
in
je
dec
and
test
fldl2t
in
sti
pushf
popa
mov
ret
aas
les
jae
std
inc
movsl
xchg
jp
addb
fs
lods
mov
push
push
jnp
jns
xor
push
outsb
int
ja
lret
pushf
test
inc
filds
repz
xchg
inc
sbb
call
sbb
bound
mov
mov
out
xor
push
popa
xor
adc
add
je
mov
push
test
aaa
lret
mov
arpl
shll
rolb
or
movsb
movsb
inc
xchg
nop
stos
enter
inc
jmp
iret
jae
mov
sti
rorl
mov
out
pop
std
shlb
in
xchg
push
dec
push
xchg
jnp
lahf
lods
inc
inc
mov
rorb
xchg
xor
fstpl
mov
aam
xchg
xchg
stos
ret
jp
jae
fidivl
fcomps
sbb
addr16
xor
lcall
sbb
stos
and
mov
mov
lods
inc
xchg
sbb
mov
rol
fcmovnb
cmp
dec
in
movsb
mov
lods
xchg
pop
rorl
cmpb
and
jo
mov
out
mov
aas
mov
push
fstpl
test
clc
or
je
mov
dec
jle
fcoms
jno
repz
aam
test
or
dec
and
testl
dec
add
hlt
rclb
mov
bound
jmp
cmp
xchg
jl
xor
popf
mov
sbb
mov
fcoml
cmp
je
jae
add
pop
enter
mov
ds
pop
in
mov
testl
js
adc
xlat
es
add
inc
lock
jbe
mov
mov
cmp
add
shlb
xor
call
mov
xchg
cmp
insl
test
mov
jo
mov
lods
sbb
int3
push
les
cmpb
lcall
and
pop
push
fstps
addr16
add
ljmp
icebp
mov
pop
repz
jb
mov
jns
je
push
call
pop
push
dec
jle
lahf
xchg
xor
clc
outsb
add
in
adc
mov
lret
push
sti
pop
xor
sbb
sbb
mov
jecxz
es
fsubrl
mov
mov
imul
ja
jnp
jnp
fnstenv
leave
arpl
add
push
mov
mov
insb
sbb
out
cmp
dec
and
scas
mov
pop
out
imul
cli
insb
test
data16
adc
xor
data16
xor
dec
or
mov
ret
xchg
sub
je
add
mov
rcl
inc
add
sbb
shrl
cmp
scas
lods
pop
pop
inc
push
xchg
and
lds
cmpsb
lret
enter
out
lds
jae
outsb
clc
movsl
xchg
shlb
popf
enter
aaa
push
cs
add
cmc
nop
lods
ljmp
sbb
shlb
lret
xor
xchg
or
inc
repnz
sbb
cs
jmp
sub
test
or
popa
movsb
and
fwait
xor
je
push
cmpsb
xor
gs
mov
dec
loopne
aam
cs
js
xorl
aam
mov
push
add
xor
mov
mov
rclb
add
add
es
xor
jmp
pop
sbb
add
mov
push
mov
fwait
and
push
std
push
cmpsb
add
jmp
push
lods
and
fisubrs
fdivs
inc
dec
insb
jnp
xchg
lods
popf
xchg
lods
ret
into
sbb
loope
fld
sbb
fidivl
dec
pop
pusha
aaa
pand
fldcw
mov
cs
or
fwait
and
inc
xor
push
mov
cwtl
test
add
je
dec
insb
add
xlat
repz
loope
lret
mov
add
cmpsb
xchg
clc
fdivs
dec
inc
inc
jne
int
mov
in
std
popa
xchg
inc
mov
sbb
aas
pop
dec
je
dec
cmc
pop
insl
pop
xor
cmp
xor
pop
jle
push
jo
push
inc
cmpsb
shrl
test
adc
leave
pop
sti
sbb
push
pop
lds
fnstcw
sub
pop
std
jmp
out
dec
cmc
and
int
dec
pop
push
sbb
sbb
xor
jae
pop
test
sub
shlb
mov
jle
aas
mov
jle
aam
mov
arpl
jbe
ds
arpl
fistpl
pusha
or
adc
loope
lret
xchg
lcall
adc
xor
movsl
call
push
out
inc
int
dec
dec
fldenv
pop
add
pop
and
divl
pop
xor
popa
mov
inc
push
mov
jae
jne
and
cmpsl
dec
testl
sub
ud2
repnz
add
sub
sub
in
test
test
jg
pop
sub
push
scas
fisubrs
mov
xchg
js
pushf
cmp
xchg
sahf
sub
imul
pushf
xorps
jmp
mov
fdivrl
ret
movsb
jecxz
dec
lock
mul
xchg
add
popf
daa
or
pop
or
add
jp
out
and
ffree
rcl
jle
pop
mov
dec
dec
fstpl
int3
pop
in
fucomp
movsb
pop
xor
fstl
std
xchg
pop
call
imul
and
enter
cmpsb
insb
pop
pop
adc
fbstp
mov
add
mov
int
push
mov
cli
pop
push
lods
fcom
pop
out
jl
jecxz
mov
xor
outsl
fstpl
je
xor
out
daa
push
insl
pusha
cwtl
scas
jge
adcb
push
ljmp
cwtl
sub
sbb
lea
xor
pop
test
mov
jnp
xchg
nop
daa
int3
rcrb
rcrb
scas
push
mov
sbb
lock
loop
and
pushf
ja
inc
cli
pop
xor
lods
inc
xchg
push
cs
scas
lods
ret
lock
pusha
adc
xor
mov
inc
mov
adc
mov
add
popa
mov
leave
in
rcr
add
in
test
mov
xchg
in
or
leave
push
dec
movd
dec
or
rcrl
sub
xor
or
std
xchg
movsb
aaa
enter
arpl
mov
cwtl
pop
cmpsb
or
push
sub
out
mov
fs
je
loop
test
lea
leave
jle
out
fs
mov
mov
jmp
aas
push
xor
loopne
jp
cmpsl
test
roll
sar
leave
sbb
sbb
mov
xchg
repnz
mov
mov
push
jg
stos
cmp
test
pop
or
cmp
or
les
push
mov
int
sbb
ja
aas
jbe
pop
out
xchg
mov
mov
push
add
jae
jge
nop
push
mov
jb
or
lret
jnp
dec
add
jl
mov
xchg
test
movsl
or
mov
lock
xchg
xor
cmp
fucomi
pop
or
stos
cltd
cwtl
repnz
subb
fnstenv
push
jbe
adc
add
loopne
xchg
xchg
inc
enter
pop
test
pop
in
jns
add
test
jb
dec
pop
ficoml
mov
xchg
push
xlat
inc
push
int3
mov
mov
cs
fsts
leave
dec
jae
mov
push
sbb
inc
sub
int3
fisubrs
leave
insl
movsl
and
pop
movsl
daa
jbe
orl
sahf
push
inc
pop
pop
and
jmp
adc
fcomps
lods
inc
dec
pop
fdivl
push
inc
in
ja
dec
stos
push
aad
mov
adc
dec
sbb
into
push
jmp
aad
mov
fnstenv
adc
outsb
fs
mov
aaa
iret
push
mov
push
sub
addr16
sbbb
dec
loopne
daa
addr16
lcall
aad
or
outsl
inc
popf
jge
cmp
jl
das
pop
pushf
scas
push
push
mov
pop
push
es
mov
addr16
test
out
js
orb
out
sub
lds
mov
dec
or
lcall
or
cmc
xchg
or
pop
jge
add
lcall
mov
jno
cs
cmpl
stc
in
push
stc
xor
rol
xchg
call
sbbb
ja
test
cltd
inc
popf
xchg
subb
iret
jl
je
jbe
jno
sub
xor
loop
fidivrl
adc
jge
and
fdivl
subb
cli
cli
inc
mov
fnsave
pushf
pop
or
imul
xchg
test
push
repnz
fs
leave
xor
and
insl
add
inc
outsb
insl
inc
push
lods
fwait
repz
pop
popf
add
les
push
pop
in
daa
or
imul
movsl
mov
shrb
cmc
mov
sub
sbb
push
aam
or
jecxz
sub
out
jle
stos
out
push
mov
xchg
sub
ss
sub
and
mov
pushf
jo
push
inc
shll
iret
movsl
pop
rcl
pushl
into
dec
mov
loope
fimuls
scas
std
mov
ss
loop
pop
push
out
sub
js
xchg
daa
popa
loop
xchg
dec
sbb
nop
addb
test
sub
add
inc
and
mov
or
dec
es
andb
into
jl
jbe
mov
pop
lcall
or
loopne
xor
mov
mov
divb
mov
pop
arpl
push
cmp
iret
faddl
std
adc
push
cmc
js
out
mov
mov
sti
jle
pop
out
in
jl
inc
push
ja
jge
ljmp
cwtl
mov
ret
test
jo
mov
push
in
shr
pusha
cli
adc
mov
jp
ss
cmpsl
push
out
fcmovb
dec
pop
subl
mov
mov
je
mov
xchg
imul
and
sbb
dec
dec
out
xor
lds
clc
shr
dec
fdivp
popa
fdivs
mov
dec
clc
mov
jg
aaa
pop
jecxz
adcb
enter
inc
sahf
in
js
nop
sub
popa
in
mov
jbe
cmp
fists
mov
push
jae
xor
sbb
inc
inc
pusha
push
adc
mov
ljmp
mov
clc
loope
das
xchg
sbb
and
mov
mov
movsl
cmp
aam
rcrb
pop
negb
adc
jge
mov
cmpsl
lds
and
into
dec
loopne
das
adc
scas
nop
addr16
lock
ret
push
jno
dec
movsl
mov
adc
push
sub
sbb
jns
ljmp
cmpsb
xorb
jae
fcompl
jne
les
jae
mov
sbb
icebp
cli
xor
ja
jp
adcb
ret
and
mov
test
and
inc
sti
pmaxsw
pop
push
add
xchg
mulb
pop
push
pop
push
xchg
icebp
fnstenv
mov
mov
cmpsl
mov
jle
sbb
xchg
pushf
push
push
call
and
jecxz
notb
and
iret
xor
push
mov
cmp
mov
mov
adc
repz
dec
daa
arpl
mov
pop
out
and
dec
dec
xor
dec
loope
ja
mov
and
ss
leave
pop
out
cli
or
xchg
jmp
or
fnstenv
fiadds
minps
adc
dec
sbb
andb
ljmp
sub
cmp
fisubs
inc
fimull
pop
sbb
dec
or
and
popf
cmp
and
dec
ljmp
pop
jp
mov
ja
xor
ja
int
jmp
rcrl
push
xor
stos
mov
xor
testl
dec
adc
mov
and
mov
push
loopne
ret
sbb
cmpsb
xchg
inc
stos
nop
out
cld
mov
lcall
lcall
mov
mov
popf
mov
testl
xchg
lods
insb
addr16
xor
icebp
les
movnti
mov
pop
daa
fstl
inc
mov
cs
stos
loope
push
mov
adc
icebp
cmp
out
xchg
sbb
rcll
mov
pushf
enter
repnz
sbb
aaa
jae
push
mov
fcomps
jae
or
out
jle
pop
pop
mov
cmp
push
in
addl
divl
xor
insb
add
into
mov
int3
lods
and
or
ds
outsl
lock
and
add
mov
mov
call
or
decb
adc
js
out
lods
mov
jp
lcall
inc
pop
les
out
jno
and
xchg
loopne
adc
mov
fs
call
mov
ret
movsl
mov
mov
imul
lock
shr
aas
enter
bound
jbe
sbb
or
or
adc
es
or
xchg
fsubs
rcrb
pop
dec
pop
xor
push
pop
sub
dec
shrb
mov
lds
pop
repnz
jb
add
jno
call
fistps
repz
lahf
testl
shr
in
dec
in
add
and
pop
xchg
pop
repz
sbb
mov
aas
inc
mov
and
fwait
jo
sbbl
daa
xchg
out
mov
movsb
testb
pop
xor
sub
mov
inc
sub
iret
call
inc
arpl
add
add
push
sbb
sub
push
mov
imul
test
cmp
xor
fisttpl
push
push
dec
cmp
mov
mov
test
add
xor
cmpb
jp
push
mov
or
xor
jecxz
pop
pop
mov
xor
std
or
fnstsw
sbb
mov
test
arpl
lret
mov
xchg
ds
out
jne
aaa
out
fildll
testb
roll
add
sahf
das
jg
fwait
xchg
test
ret
hlt
imul
aas
pop
pop
stos
mov
push
jne
jb
lea
xchg
xchg
jle
mov
and
daa
cld
push
out
sub
push
loopne
iret
rorl
subb
sbb
imul
fidivl
xlat
mov
dec
clc
inc
push
jae
repnz
roll
or
sub
and
push
into
adc
pop
inc
mov
out
xor
sbbb
cltd
dec
ret
out
gs
stos
xchg
pushf
xor
cmp
pop
test
mov
cmp
out
pop
sbb
push
fistpll
cmpsb
push
and
mov
fisubl
pop
pusha
jb
inc
loopne
pop
outsb
lea
ss
fisubs
call
bound
pop
or
imul
in
insl
or
or
pop
sbbl
mov
test
push
insb
push
leave
sbb
andl
inc
cwtl
add
test
xor
push
notl
lcall
xlat
lds
pop
out
xchg
arpl
imul
adc
lods
and
fimuls
cwtl
outsb
mov
mov
pusha
mov
sar
mov
jnp
xor
mov
pop
push
jns
dec
or
jle
add
mov
mov
popf
jae
or
xchg
and
or
xchg
or
out
cli
push
int
imul
cmp
mov
mov
adc
lret
cld
sbb
rorb
insb
fsubrp
mov
fimull
loop
enter
jo
cmp
sub
inc
mov
jmp
iret
and
fwait
mov
sub
add
adc
loopne
jnp
les
dec
mov
and
shl
subb
test
push
or
leave
mov
pop
mov
test
xor
shll
xchg
cmp
sbb
cwtl
addr16
or
mov
sti
inc
sub
cmp
loopne
fsts
lods
inc
out
lods
jmp
sub
inc
jmp
push
xchg
imul
ss
inc
jecxz
fucomi
mov
sbb
push
js
cmpsb
mov
jno
ror
in
popa
pop
xor
data16
and
enter
lods
cmp
inc
arpl
xchg
lods
push
dec
pop
mov
cmp
cmpsb
out
and
add
or
mov
cmc
pop
btrl
sbb
leave
pusha
inc
in
out
inc
arpl
mov
es
or
push
test
pushf
repnz
repz
mov
sub
or
xchg
lea
shlb
hlt
mov
lcall
xlat
inc
sbb
pop
jno
aam
push
push
pop
out
daa
xor
xor
lods
shrb
popa
arpl
and
mov
ret
fistps
pop
mov
je
int3
arpl
into
pop
nop
lea
mov
push
mov
cli
mov
xchg
popf
enter
adc
push
test
into
cmp
adc
ss
insb
mov
mov
scas
mov
lahf
jecxz
repnz
mov
jp
and
movsl
xchg
mov
push
lret
lock
adc
test
enter
pop
std
iret
rcr
icebp
pop
sub
and
or
inc
adc
fistps
mov
inc
andb
inc
test
divb
adc
xchg
ja
cld
sbb
sub
jle
push
stos
mov
div
test
enter
movsb
push
or
lock
ljmp
je
mov
or
push
stos
inc
fstps
loope
loop
fldcw
lret
xchg
push
add
and
cli
enter
jp
inc
imul
sbb
sub
fwait
popa
mov
push
pop
fnstenv
adc
bound
dec
and
leave
in
mov
cmc
and
sub
and
jl
xchg
scas
adcb
pop
xor
push
and
xchg
mov
add
pop
dec
lds
xchg
jl
stos
and
out
dec
adcl
fwait
lock
and
push
gs
fdivrl
cs
insl
lock
xchg
xor
cmpsl
cld
imul
jmp
jno
ret
and
lcall
mov
jle
scas
ljmp
cld
cld
xlat
adc
rcrl
cltd
bnd
sbb
cwtl
jge
xchg
or
outsb
cmp
mov
xchg
xor
ficoms
dec
inc
stos
sbb
sub
pusha
inc
add
not
sub
inc
int3
loop
jns
cld
dec
xor
xor
test
mov
add
sub
push
xor
aaa
push
xchg
in
inc
pushf
mov
push
mov
or
dec
cmp
and
adc
js
scas
add
mov
iret
js
adc
adc
fwait
ljmp
popf
lods
mov
loope
lahf
loop
jecxz
lahf
jmp
or
cmp
fsubrs
hlt
push
out
mov
out
jbe
push
adc
int3
je
mov
push
insl
sub
int3
pop
sbb
adcb
mov
sub
sbbl
test
push
jnp
lret
dec
les
or
pop
xchg
mov
ficoms
pusha
sbb
xchg
ret
movsl
mov
or
mov
out
adc
aaa
xor
or
sub
call
shrl
add
bound
cmp
mov
stos
mov
ret
hlt
cld
sbb
jge
mov
mov
jl
xor
iret
shr
mov
les
add
dec
cwtl
stos
jns
mov
push
ss
lea
jg
icebp
out
insl
out
pop
out
mov
aam
sub
notb
push
out
ss
outsb
lds
jge
sbb
push
data16
shl
das
cmp
pop
mov
lods
imul
mov
adc
xor
test
dec
mov
add
sub
and
cmp
adc
icebp
roll
pushf
popf
xor
inc
outsl
sbb
push
lcall
ss
test
sub
push
es
mov
into
jmp
xchg
xchg
inc
cld
data16
push
scas
subl
mov
jg
inc
es
pop
cmp
test
orb
cmc
imul
mov
xor
pop
mov
scas
push
clc
bound
and
inc
inc
rcrb
mov
movsb
daa
aas
mov
inc
dec
sub
adc
jae
fs
xchg
sub
aam
shrb
dec
or
push
in
test
test
imul
mov
movsb
jnp
pop
cltd
push
int3
cmc
add
aas
scas
ljmp
scas
loope
jbe
lds
mov
jo
jecxz
int3
loope
imul
lock
pop
and
push
cmp
xchg
lock
xchg
add
adc
inc
sbb
fwait
popa
push
add
cmc
scas
and
mov
fdivrp
jae
mov
cli
mov
add
adc
mov
mov
sahf
xor
jl
cmp
xchg
popf
sbb
loope
lret
iret
jns
bound
and
aad
rcrl
je
insl
inc
fsubl
cld
mov
in
xor
push
hlt
aam
jp
enter
gs
mov
pop
and
inc
jl
jle
adc
mov
dec
add
aad
adc
repz
push
mov
rcrl
adc
mov
negb
sbb
pushf
cli
xor
push
sbbl
dec
adc
aaa
cmp
sbb
mov
or
mov
frstor
arpl
movsl
js
imul
pop
sbb
nop
fnstenv
xor
mov
fstl
dec
fwait
mov
es
es
xchg
popa
xchg
sub
mov
fisttpl
sbb
cmp
jmp
mov
imul
add
xor
push
mov
lret
cmpsb
cmp
and
push
icebp
inc
das
cmp
add
mov
fwait
test
icebp
shlb
mov
pusha
inc
scas
mov
push
fisubs
push
fsubl
xor
xchg
dec
mov
cmp
mov
xchg
mov
xor
mov
std
es
xchg
lods
or
fimuls
sub
mov
and
and
test
lret
sbbb
jns
rcrb
mov
sub
cmp
or
mov
xchg
xor
jle
in
pop
mov
cwtl
lods
aad
or
or
cmp
loopne
pop
adc
sahf
in
stos
mov
mov
jne
dec
push
loope
shl
xchg
scas
adc
jecxz
insl
cmp
xor
sti
dec
aas
xlat
aas
es
xlat
cmp
or
sbb
xor
lahf
scas
jp
jmp
mov
imul
lock
dec
sbb
xor
sub
adc
repnz
stos
cmp
jg
sbb
inc
into
jnp
ja
mov
inc
inc
nopl
or
sbb
imul
push
pop
xor
jo
pop
in
repz
or
je
loope
or
cwtl
add
jae
fiadds
mov
xchg
jge
mov
mov
jl
outsb
adc
adc
cltd
xor
xchg
xchg
mov
xor
test
loope
dec
dec
sbb
mov
mov
mov
adc
sahf
ret
mov
sub
jmp
or
xor
push
gs
xchg
dec
or
bndstx
test
mov
mov
js
mov
andb
lahf
pop
cld
into
sbb
add
or
jne
cltd
inc
mov
mov
cmp
and
xchg
mov
out
sub
jae
pop
insl
mov
jge
stc
sti
in
daa
mov
sbb
mov
mov
movsl
xlat
jae
cli
aas
jge
inc
mov
clc
sahf
mov
insl
pop
jne
aad
ss
mov
fwait
faddl
push
and
adc
lea
mov
scas
mov
sbb
rorl
mov
iret
out
loope
and
scas
jge
in
sbbb
enter
pop
cmc
xchg
push
mov
sbb
movsl
xor
aad
lds
sti
jo
iret
pop
call
xor
mov
aaa
loop
mov
push
mov
jge
cwtl
cmp
xchg
mov
cwtl
lcall
pop
mov
dec
mov
push
push
fldl
xlat
aas
rolb
cwtl
cmpl
in
xchg
and
lret
fcom
mov
mul
xor
aad
test
adc
lds
xchg
stos
pop
ficompl
je
pop
push
dec
xor
sub
inc
pop
sbb
sbb
dec
push
inc
cmp
sub
sbb
cmp
mov
scas
sub
add
or
xor
sub
aas
push
xchg
xchg
sbbl
call
mov
jle
subb
push
stos
mov
fadd
or
and
aaa
push
insb
cltd
icebp
mov
sahf
jle
or
negl
aas
mov
jns
xor
push
pop
dec
data16
data16
mov
push
sbb
add
xor
scas
ja
pop
in
loopne
fdivs
add
hlt
xchg
cmp
ret
int
jo
xlat
aaa
int
imul
outsl
dec
scas
inc
daa
xchg
dec
mov
gs
pop
xchg
repz
cmp
pop
por
jge
ret
xchg
divb
dec
xchg
lods
aam
sub
shr
push
sbb
cltd
cmp
lahf
repz
sar
and
inc
xchg
decl
xor
sbb
hlt
arpl
inc
daa
test
jl
xor
cltd
fwait
outsb
stos
inc
mov
int3
ret
faddp
pusha
pusha
push
xchg
sub
cmc
or
fwait
sub
sbbl
xor
imul
push
pop
and
push
iret
shl
jl
out
push
lea
xchg
loopne
mov
jge
pop
repnz
sub
mov
rorb
cmc
out
dec
sbbl
decb
aam
cld
push
hlt
out
pop
sbbb
dec
mov
push
shll
je
loopne
mov
popf
mov
mov
shlb
pop
adc
or
mov
and
push
sbb
and
mov
filds
insl
adc
xchg
add
or
push
jle
xchg
and
add
sub
gs
stos
jbe
add
mov
and
sub
add
mov
push
scas
lret
xor
fidivrs
inc
in
push
cmp
out
sub
pop
es
cmp
int3
inc
dec
shrl
push
fwait
sbb
fistl
mov
xor
in
mov
testb
pop
lds
popf
hlt
outsb
jl
stos
mov
add
mov
mov
cs
loopne
pusha
rolb
and
jne
pushf
lods
push
stos
insl
add
setl
enter
das
ljmp
sbb
push
out
gs
loopne
mov
jecxz
add
jno
and
cmp
pop
dec
mov
subl
bnd
fbstp
mov
dec
sub
ljmp
ror
repnz
jl
push
add
loope
pextrw
push
mov
repnz
icebp
dec
pop
and
jle
xchg
mov
data16
aas
sub
mov
dec
mov
mov
test
imull
gs
shll
mov
or
push
andb
or
mov
or
out
jnp
mov
lcall
xor
mov
mov
push
lcall
lcall
adc
fldcw
mov
imul
loop
sahf
mov
mov
lret
lods
jno
ljmp
sbb
xchg
mov
fwait
pop
scas
mov
push
xor
mov
xor
mul
ficomps
lret
push
jmp
test
and
jne
sbb
std
xchg
inc
push
push
jns
sbb
into
lcall
adc
mov
fnstsw
fsubr
aaa
stos
out
out
lods
jmp
sub
addr16
lahf
jb
movsb
fnstenv
andl
push
sub
in
jnp
lods
push
in
add
ret
add
add
pop
and
arpl
inc
mov
subl
adc
test
dec
push
adc
in
mov
push
sub
jecxz
sbb
pop
fdivr
adcl
or
jmp
pushl
int
xor
std
mov
fdivl
xchg
cmp
scas
add
shlb
insb
data16
ficoml
sti
fsubrs
loopne
jle
cltd
jg
sti
les
mov
mov
pop
cmc
cld
mov
leave
int3
fcomi
in
jae
push
push
out
dec
xlat
push
out
insb
push
in
xchg
adc
cmp
dec
hlt
into
icebp
jle
test
adc
iret
fs
pop
or
sahf
cmp
mov
cltd
pop
enter
fucomp
popf
repnz
mov
push
sub
fistpl
lds
xor
fwait
xor
mov
cmp
testb
xor
push
sub
push
xor
lods
loop
push
fidivrl
les
lret
jne
mov
fdivr
fnstsw
inc
popa
clc
sahf
push
mov
push
cmpb
push
jno
fsubr
push
in
pshufw
mov
int3
mov
adc
mov
push
jns
clc
mov
call
sbb
idivb
xor
dec
mov
fsubp
lods
cltd
cmpsl
es
jns
cmpsb
dec
ret
or
rcrb
adc
sahf
xor
sbb
adc
dec
cmpl
adc
push
je
mov
imul
jne
call
fidivl
mov
inc
mov
gs
or
in
and
cmp
add
pusha
cltd
mov
in
pop
jne
mov
xchg
out
mov
pop
cmp
leave
movsb
out
dec
rorb
push
push
jbe
and
aaa
popf
xor
add
aas
mov
std
nop
lret
ss
pop
aad
xor
ja
push
cmp
sub
add
pop
jb
loopne
jnp
jnp
cmp
mov
inc
mov
jge
arpl
insb
int3
mov
and
mov
jp
in
popf
inc
mov
dec
aaa
jae
shr
fistps
mov
sub
xor
popa
add
jg
dec
sub
sbb
bound
mov
sub
inc
mov
cmc
loopne
jno
mov
fwait
jge
push
inc
shrl
mov
push
jo
outsb
and
int
adc
and
push
fstl
cmova
ret
fbstp
stc
xchg
mov
jle
pop
dec
add
inc
adc
jbe
cltd
xchg
add
sub
adc
cmpsb
and
sbb
sub
jge
frstor
adc
ja
rorl
jg
cmp
loop
das
cmpsb
enter
mov
outsl
jge
hlt
sub
sbb
mov
movsb
scas
jne
mov
dec
mov
pusha
jp
push
add
pop
aad
add
cmc
psubusb
inc
push
addb
lods
mov
loopne
outsl
push
mov
adc
aaa
scas
adc
adc
sub
test
and
rol
std
mov
jge
ss
outsb
in
mov
sbb
push
and
jne
xlat
pop
test
mov
mov
je
icebp
push
je
add
fwait
inc
mov
and
sarb
jg
bound
push
mov
sbb
mov
dec
pop
inc
adc
jl
inc
sldt
xor
mov
shl
stos
cmp
jns
repnz
ljmp
ljmp
push
ror
xchg
add
cmp
or
push
dec
imul
cmpsb
fnstsw
sub
push
std
leave
push
popf
mov
push
sbbb
int
and
push
cmpsl
icebp
sbb
sub
mov
xchg
out
ret
push
int
sub
imul
fs
jle
dec
mov
js
stc
xchg
dec
pop
lcall
xor
cmp
mov
xchg
clc
and
movsl
jmp
mov
jl
push
xor
sbb
sbb
pop
sub
loopne
add
fst
sbb
jo
and
repz
xchg
into
fcom
scas
stos
push
repz
dec
mov
das
xorl
loop
loope
push
adc
insl
jne
pop
ja
rorb
or
push
outsl
mov
fidivrs
add
inc
jle
mov
rcrl
and
xchg
mov
fildll
fwait
and
dec
xor
out
push
add
mov
xlat
xchg
sub
and
fidivs
mov
add
clc
movsl
dec
jb
sbb
xchg
rcrl
ja
mov
cmp
aad
imul
pop
es
inc
fsubrs
inc
loope
sub
fisubl
dec
adc
jle
push
ja
inc
mov
ds
loop
out
fildll
aaa
es
jbe
jb
inc
movsb
cwtl
push
test
xor
lock
sbb
adc
dec
pop
or
fsubl
pushf
cmp
mov
mov
fadd
jg
sbb
cmp
mov
or
cmp
cmp
mov
rcll
imul
xchg
in
jns
daa
pop
test
push
test
rcrb
mov
ret
bound
insb
loopne
sub
mov
out
call
jmp
scas
inc
jo
sbb
mov
jnp
cmp
pop
and
cmp
scas
pop
pop
jbe
xchg
push
or
mov
movsl
dec
cmp
ja
andb
dec
jbe
hlt
stos
push
jmp
add
int
adc
movsl
out
and
stos
adc
xor
cmp
mov
inc
jo
clc
fistpll
es
lods
outsl
icebp
imul
jmp
aas
push
sub
jne
jmp
shlb
add
cs
daa
push
sbb
scas
inc
mov
loop
lods
dec
push
lea
arpl
xchg
cmp
cmpsl
xchg
inc
xchg
inc
dec
pop
jg
push
mov
lea
sbb
mov
and
ret
addr16
mov
mov
inc
add
sbb
jo
sbb
mov
fstpl
push
dec
scas
inc
jp
adc
add
mov
pop
es
sub
in
out
sbb
lods
inc
jmp
adcb
adc
mov
pop
nop
xchg
lcall
daa
and
mov
leave
add
sbbl
fcmovnbe
sti
pop
stc
mov
xlat
outsb
dec
jge
inc
pop
loop
adc
movsb
mov
jo
mov
in
mov
ss
stc
adc
daa
mov
or
xchg
and
add
inc
inc
fisttpll
lods
fs
jmp
sub
lock
xor
or
pop
cmpl
lahf
into
mov
mov
inc
jnp
mov
sbb
lahf
mov
outsl
push
das
rcrb
ds
std
push
insl
push
mov
mov
loope
dec
dec
loop
test
mov
or
add
mov
mov
push
or
in
rcr
sbbl
and
and
int3
pop
arpl
push
mov
cld
push
mov
int
test
out
xchg
in
in
test
cmp
sti
mov
mov
push
pushf
mov
dec
mov
mov
adc
dec
in
mov
cltd
aaa
ss
mov
sub
jae
xchg
das
adc
mov
dec
mov
loope
and
xchg
and
sbb
stos
push
or
popa
xchg
lods
push
insb
mov
test
mov
into
cltd
stos
push
outsb
cmp
xchg
out
add
xchg
daa
or
mov
popa
cmp
sti
aas
cmpsb
add
movl
add
je
loopne
inc
pop
sub
orl
inc
leave
fnstenv
mov
cwtl
lret
addr16
lahf
movsb
lods
out
popl
mov
or
mov
movsb
and
les
jge
push
scas
out
adc
sub
xor
push
int
mov
je
sub
mov
sub
in
sbb
cmpsb
jl
xchg
add
sahf
aaa
es
int3
jmp
adc
push
adc
gs
sub
aas
mov
into
mov
test
inc
sbb
jb
outsb
mov
int3
and
dec
bound
lea
gs
in
adc
sub
mov
movsb
movsl
and
add
or
mov
loop
scas
dec
mov
loope
shll
add
add
or
jmp
stc
xchg
mov
ss
push
fcmove
dec
mov
or
jmp
add
cltd
je
inc
lods
inc
inc
cltd
test
mov
fdivrs
fiaddl
push
sbb
cltd
and
adc
mov
cmp
cmp
sbbl
fst
filds
mov
nopl
jecxz
rcr
jo
inc
xor
push
ret
jl
fwait
loope
cmc
adc
xor
pop
adcb
sub
aad
cmpsb
cmp
or
adc
add
das
or
cld
aas
out
xchg
pop
sbb
pop
out
scas
out
sub
push
cltd
sub
mov
jne
add
es
cltd
cld
mov
mov
out
push
ja
jp
jo
cmc
mov
jo
cmc
loope
cltd
mov
scas
je
cli
mov
sbbb
jmp
in
inc
pop
cmp
js
mov
push
pop
stos
sti
jecxz
loope
aam
mov
mov
xchg
fs
movsl
scas
push
jnp
cs
outsl
xchg
mov
push
es
fidivrs
pop
scas
popa
add
clc
inc
fs
adc
outsb
ds
push
sub
and
inc
inc
fidivl
push
adcl
adc
push
mov
enter
add
test
and
fists
ds
sbb
push
hlt
pusha
mov
enter
cmpsb
cld
xchg
pop
xor
mov
push
push
add
push
fnstenv
and
or
shlb
call
stc
fisubl
jmp
cmpsb
or
push
das
movlps
testb
xchg
xchg
push
and
inc
stos
in
cmp
sub
mov
cli
xchg
clc
dec
fldl2t
mov
mov
into
ret
lcall
fnstcw
dec
pop
cmp
mov
stos
mov
jno
es
mov
jl
inc
fimull
test
rcr
pop
in
adc
sbb
imul
add
mov
xchg
cmpsl
pop
xor
ret
hlt
mov
cmc
out
xchg
rcrl
mov
cmp
fcoml
push
test
rcrl
subl
nop
xchg
lahf
mov
mov
lods
cmp
stc
shl
mov
std
fcomps
test
mov
repnz
push
ja
test
aas
test
popa
subl
lods
jg
sbb
lea
sbbl
xchg
sahf
lahf
imul
sbb
test
call
out
and
in
stc
ja
and
jle
pop
jbe
aas
test
cmpsb
mov
cmp
mov
mov
lods
push
inc
jae
in
fistps
inc
in
push
or
ja
lret
mov
push
pop
jb
xchg
push
popa
lea
inc
and
xor
xchg
or
mov
loope
push
lcall
jo,pn
ja
movl
adc
popa
clc
cld
inc
push
jb
int
xchg
fs
push
fwait
sub
and
adc
rolb
xchg
clc
pop
dec
sar
jno
sbbl
fbstp
adc
jbe
mov
sub
aam
pop
mov
fldl
aam
inc
lcall
and
aas
push
daa
push
mov
mov
ret
sbb
push
xlat
push
or
xchg
fdivs
leave
aad
movsl
scas
push
sub
mov
sti
xchg
sti
push
mov
cmp
clc
lret
sub
sub
xor
and
popf
mov
movsl
jns
popf
or
jno
sbb
subl
daa
xor
xchg
shll
add
mov
jbe
ds
sub
outsb
cmc
pop
fsubrs
add
addb
or
sbb
xor
bound
dec
roll
adc
shlb
and
out
cmpsl
cwtl
mov
ret
fucomip
mov
es
rolb
xchg
cmc
jp
fcmovnu
sub
mov
int3
pop
adc
sbbl
cmp
out
lock
jb
xor
sbb
test
shll
outsl
movsb
pop
dec
sub
mov
push
fwait
sbb
ljmp
fnsave
dec
inc
pop
jns
xchg
stc
jb
xchg
movsb
sbb
cmpsb
rcll
outsl
or
sub
xchg
popa
xchg
xchg
pop
dec
sbbb
and
push
lahf
ss
mov
sbb
mov
adc
out
lods
es
arpl
jne
or
jo
xor
jmp
aam
out
in
test
pop
repnz
testb
xor
sbb
mov
idivl
fidivrs
insl
dec
scas
push
and
outsb
into
inc
xlat
outsl
inc
shr
fwait
stc
pusha
mov
dec
pop
repnz
or
pop
sbb
mov
scas
jbe
enter
add
repnz
imul
sub
and
cmpsb
bound
fidivrl
movsl
jecxz
inc
or
push
push
xor
add
push
mov
fucomip
hlt
jle
push
cmpsl
add
push
xor
es
xchg
lods
fsub
sbb
dec
jecxz
xchg
add
pop
cmp
push
cmp
mov
das
inc
gs
jmp
push
loop
cmp
jo
dec
jns
leave
sub
pusha
enter
dec
jecxz
cmpsl
inc
enter
lcall
jo
lret
bound
testl
dec
mov
ljmp
mov
in
inc
dec
in
or
and
int3
lock
xlat
jp
shll
dec
pop
mov
or
dec
adc
dec
call
adc
icebp
out
mov
lea
or
add
out
pop
dec
or
jge
ficomps
adc
rcll
jp
jge
and
in
or
movsl
inc
out
inc
into
test
adc
cmp
ds
ja
test
xchg
lret
lcall
pop
jmp
loop
and
push
jns
data16
jmp
mov
mov
inc
fisttpl
std
xor
add
scas
push
scas
je
xchg
push
mov
and
andl
ljmp
inc
jecxz
dec
enter
imul
fnstenv
lods
dec
in
rorl
subl
pop
xor
pop
jmp
push
out
les
sbb
movsl
hlt
mov
cmpsb
mov
mov
mov
ja
insb
add
out
xchg
push
shrl
cltd
xchg
cmpsb
sbb
pop
mov
and
mov
jecxz
stos
mov
push
andl
push
lahf
cs
jo
xlat
loopne
aaa
mov
ss
aas
sbb
mov
sub
ja
int3
gs
leave
mov
and
inc
bound
idivl
pop
movsb
push
inc
push
mov
mov
lea
add
cmpsb
cld
xor
mov
lret
jecxz
das
dec
push
sbb
pusha
sub
shrb
mov
lds
sbb
push
sti
and
hlt
push
adc
adc
pop
cmc
inc
add
cmp
adc
jmp
lcall
sub
mov
add
and
inc
fnstsw
out
sub
jge
mov
fbstp
or
dec
int
ja
imul
sub
popf
pop
jno
outsl
mov
leave
mov
mov
inc
push
sub
out
xchg
pop
cmp
push
mov
mov
lret
notl
cmpsl
test
arpl
subl
xchg
out
in
ret
cmp
push
cmp
lcall
xlat
imul
sub
dec
out
and
data16
and
test
jo
cmp
and
pop
inc
fcmovnbe
adc
cwtl
xor
notl
fnsave
jg
loopne
popa
into
push
adc
sbb
mov
ss
lods
fldcw
and
jl
cli
nop
add
loope
or
or
cmp
add
jg
int
mov
lcall
sbb
mov
shlb
pop
cli
pop
push
mov
pop
mov
cs
cmp
xchg
dec
pop
outsl
jnp
lock
mov
inc
subl
call
mov
sbbb
cmpsl
movsb
mov
xor
js
fcmovb
pop
js
mov
fidivs
xchg
cs
fisttpll
hlt
lock
add
test
sub
add
pop
fdivs
lds
xchg
fs
push
sub
mov
jns
xchg
add
add
fadd
push
fbstp
loop
cwtl
test
cmpsl
sbb
inc
or
mov
dec
jg
call
or
and
daa
or
mov
pop
and
hlt
inc
stc
xchg
ljmp
mov
and
push
add
cmc
push
xorb
fdivp
js
inc
movsb
mov
jecxz
movsb
mov
mov
jns
stos
sub
mov
jge
into
cmpsl
test
mov
or
inc
lods
imul
mov
insb
js
xchg
loop
adc
xor
push
jbe
xchg
xchg
inc
mov
sbb
cmp
lock
movsb
push
cmpsb
xlat
mov
pop
ja
icebp
cmp
inc
popa
fcmovnbe
andb
jns
add
mov
push
add
daa
mov
pop
pop
outsl
jge
cmp
call
inc
scas
mov
mov
push
out
push
jae
in
mov
movsl
push
add
std
xor
pusha
adc
or
sbb
pop
add
dec
mov
lock
mov
jp
scas
inc
or
cmp
cmp
xchg
xor
jl
scas
fmull
shlb
out
xchg
sbb
popf
xchg
jbe
mov
out
aas
sbb
adc
in
xor
push
cwtl
call
mov
sub
cmpb
push
cmp
js
jp
pop
repnz
jecxz
lock
push
jmp
dec
loopne
mov
addr16
addb
cmp
test
add
cwtl
or
xchg
fistps
sub
xchg
pop
lock
mov
es
xchg
adc
jl
in
jnp
sar
iret
sub
jns
cmp
add
and
notb
add
fs
mov
pop
sbb
cmp
add
mov
int
jae
test
jo
mov
in
ret
shrb
mov
lret
cmc
cs
pop
xchg
xchg
mov
inc
lock
lds
out
mov
push
jmp
out
outsl
shlb
lahf
pop
gs
and
aas
sub
and
data16
mov
psubb
enter
cld
sbb
sbbl
cmpsb
insl
add
inc
mov
and
cwtl
ret
dec
stos
inc
jle
fnsave
in
sarb
shrb
repz
and
inc
fs
jbe
shrb
xchg
mov
lds
fs
sub
shrb
je
and
jp
sti
stos
jne
imul
fs
jnp
shrb
cmpsb
mov
mov
sbb
fwait
jmp
imul
push
lods
ficompl
fwait
push
je
out
mov
fs
dec
mov
xor
cmpb
xor
icebp
inc
pop
push
call
add
loopne
rcrb
in
cmpsb
lock
mov
mov
xchg
insl
cwtl
dec
rol
jnp
inc
fwait
cmp
in
daa
shrl
sub
sub
push
or
dec
clc
sbbb
mov
push
jb
outsl
loop
sbb
lea
outsb
jl
jecxz
enter
xchg
dec
shlb
mov
mov
in
or
ljmp
enter
push
sub
pop
pop
iret
into
cmpsb
adc
mov
fcmovnbe
adc
dec
cmp
add
adc
inc
gs
push
mov
not
shrl
out
sbb
cmpsl
loopne
push
subb
push
add
or
pop
scas
sub
mov
clc
cmp
outsb
push
iret
cmp
xor
imul
mov
jmp
pop
rcrb
sub
mov
fisubrs
leave
dec
hlt
pop
lds
fcom
push
es
out
mov
xor
fsubs
outsb
pop
mov
in
or
enter
and
idivb
push
enter
cltd
roll
in
movsb
add
push
aaa
stos
jae
das
cmp
jno
jl
jl
ret
ficomps
inc
int
adcb
loop
orb
iret
imul
xor
inc
in
cmc
mov
shl
jnp
sarb
push
add
xchg
push
or
lock
sbb
push
cmpsb
fisubrs
push
sbb
and
cmp
jnp
pop
ljmp
icebp
clc
bound
rcrl
sub
dec
push
jbe
mov
cwtl
pop
ss
mov
push
fildll
add
pop
scas
in
jns
nop
sub
pusha
fdivl
notb
or
pop
sbbl
scas
ljmp
jmp
push
sbb
xor
jmp
jle
jmp
push
int
rolb
pop
adc
adc
xor
test
pop
shrl
xchg
add
pop
notb
std
xor
pop
and
cwtl
sbb
loope
adc
and
adc
stc
inc
dec
daa
lcall
cmp
jecxz
mov
sub
cmp
repnz
and
jmp
mov
lret
jl
xor
pusha
mov
xor
add
dec
jmp
cmc
mov
mov
mov
mov
sub
sarl
sarl
or
add
mov
rcr
fwait
xchg
cs
mov
pop
mov
add
into
pop
sub
xor
jmp
ret
inc
jecxz
lahf
push
orb
ficoml
xlat
repz
orl
lods
js
adc
push
push
enter
loop
dec
add
sub
sbb
mov
pop
ret
stos
test
jnp
mov
sub
cs
call
cmp
add
iret
push
mov
dec
fstps
rolb
sub
notb
mov
nop
stos
jno
imul
mov
test
test
inc
push
bound
mov
iret
adc
cmp
add
in
cmp
lods
inc
dec
insb
xorl
and
jecxz
inc
out
jp
push
lods
call
or
jbe
dec
iret
or
loope
pushf
and
add
adc
aas
jno
add
sahf
mov
mov
add
push
es
sti
jns
sub
cmp
imul
push
cmc
mov
jne
idivl
dec
or
sbb
pop
cmp
lret
fsubrl
bound
inc
sbb
cmp
dec
es
mov
dec
pop
pop
test
shrl
scas
push
dec
pop
jg
sbb
pop
pop
repnz
in
addl
xchg
jmp
pop
xchg
dec
mov
movsl
cwtl
stc
or
ja
scas
lcall
mov
fisubrs
jae
stos
clc
in
mov
lods
jp
jecxz
cwtl
lcall
jl
imul
out
lea
shrb
enter
push
test
repz
scas
pop
daa
lock
mov
pop
ds
rol
test
push
aas
movsl
fwait
ret
push
pop
mov
out
sbb
mov
std
and
movsl
inc
cld
les
lret
add
data16
sbb
inc
xor
bound
lahf
lret
sti
rolb
andb
fmul
jge
dec
add
lock
mov
ja
jge
test
push
mov
push
or
sub
ret
jle
cmp
loop
loopne
or
cmp
mov
int3
jmp
shlb
fistpll
push
push
bound
fsubl
dec
js
ja
insl
inc
clc
dec
nop
pop
adc
clc
cmp
pop
adc
inc
jnp
fwait
add
xchg
sub
jbe
pop
jl
inc
scas
jl
shl
shll
and
daa
rorl
aaa
mov
lock
pop
insl
add
sbbb
jbe
and
test
in
inc
dec
repz
ds
mov
mov
arpl
movsl
and
cs
mov
je
ds
loope,pn
fimuls
push
fs
push
xorl
pop
fldl
xchg
xor
pop
and
call
or
sub
cmp
pop
adc
popf
gs
inc
mov
mov
out
aaa
mov
xor
mov
int
push
hlt
xchg
dec
hlt
push
daa
xchg
xor
movsl
jge
cmp
lds
adc
sbbb
mov
arpl
xchg
je
inc
pop
sub
xor
sti
mov
add
dec
and
mov
test
inc
std
lds
lds
sbb
addr16
inc
sbb
std
ja
xchg
fs
leave
xlat
pop
inc
cmpsb
std
mov
dec
xor
outsl
inc
mov
cld
mov
movsb
inc
sub
sbb
cmp
movsb
dec
popa
cld
notb
and
fisubrl
loop
sub
hlt
dec
cmpsb
leave
testb
mov
cmp
enter
jmp
and
and
lret
mov
pop
or
in
push
mov
jae
shlb
mov
scas
xchg
sub
pop
cmp
mov
mov
enter
inc
jae
sbb
mov
popf
fwait
pushf
mov
inc
mov
add
or
loope
stos
pop
push
add
dec
inc
push
dec
aad
fists
fstpt
imul
sahf
rorl
sbb
sbb
enter
mov
rcrl
cmp
jecxz
inc
stc
movsb
cmp
sbb
pusha
mov
inc
scas
inc
mov
stc
enter
movsb
into
cli
pusha
aaa
sti
lcall
int
dec
cmp
jno
pushf
sub
sahf
ljmp
xchg
adc
dec
pushf
and
dec
and
mov
movsl
lock
push
sub
repz
sbb
adc
test
sbb
pop
xchg
fdivs
or
pushf
xor
sub
inc
fdivr
nop
sti
xchg
les
jge
lea
mov
lods
mov
pop
jns
aad
repnz
inc
dec
cltd
cmpsl
jp
sub
icebp
fistpll
mov
dec
mov
shrb
cmp
sbb
adc
xlat
inc
gs
push
test
and
test
or
rcrl
pop
in
loope
pop
out
lods
testb
sbb
leave
lea
xor
fstpl
addr16
add
loop
mov
jbe
iret
xchg
ss
aas
xor
jb
or
add
daa
push
mov
lods
arpl
lea
mov
xor
inc
cwtl
pop
pop
aad
decb
jo
lds
jae
sub
adc
lds
enter
test
stos
inc
push
js
pop
test
icebp
mov
push
cmpsl
mov
fnstenv
inc
xor
add
inc
stc
mov
les
fimull
xor
push
xor
xchg
mov
hlt
andb
cwtl
pop
mov
out
cmovp
adc
add
je
mov
pusha
cmpsl
sbbl
loop
das
in
rcr
cmp
popf
imull
or
mov
push
insl
push
inc
push
mov
fs
out
sub
pop
insl
stos
daa
insb
sbb
pop
jae
push
call
jbe
fdivs
jns
fdivrp
aas
pop
rdmsr
push
inc
test
push
xor
pop
neg
gs
lcall
je
sub
loopne
iret
imul
dec
pop
fadds
cmpb
and
xchg
aad
mov
dec
lods
cmp
gs
insl
sub
jg
ja
add
andl
pushf
insb
add
data16
adc
outsb
data16
aas
sub
in
imul
mov
ret
push
das
pop
dec
lods
jecxz
or
cltd
or
push
cmpsb
ret
test
out
push
cmpsl
xchg
mov
mov
adc
sbb
and
push
dec
ror
sbbb
hlt
shll
cltd
jmp
inc
xlat
mov
std
or
nop
aad
mov
dec
iret
icebp
clc
cmp
ja
es
and
mov
cli
pusha
scas
add
sti
rorb
sub
dec
inc
push
lods
add
sbbl
push
adc
notl
adcb
arpl
bound
sub
fwait
and
sbb
xchg
divl
sbb
adc
jnp
sub
pop
mov
fisubl
push
add
cs
push
lea
hlt
dec
pop
mov
mov
jle
dec
mov
jns
in
insl
mov
add
xlat
and
dec
inc
push
mov
jb
out
mov
xorl
aas
rol
sbb
cwtl
das
sbb
sub
cli
dec
js
in
mov
aaa
mov
pop
movsb
mov
sbb
test
mov
pop
xlat
not
dec
mov
cmpsl
stos
mov
mov
das
xchg
mov
dec
cltd
cld
sub
bound
movaps
jns
adc
xchg
pop
add
aam
mov
ds
shrl
or
sub
int3
push
fs
add
xchg
test
lcall
xorl
and
xchg
lods
cwtl
rcrl
add
cmp
iret
cli
aas
dec
sub
cwtl
addr16
hlt
xor
dec
sbb
mov
cs
scas
stc
inc
adc
ja
stc
nop
fs
sbb
dec
test
out
ss
or
or
cmp
push
stos
jle
out
xchg
mov
ret
cmpsb
pop
int
lret
sti
ficoms
divps
add
jae
mov
add
dec
stc
inc
push
xor
adc
ljmp
setae
cmc
mov
lock
xchg
jl
les
add
push
pop
pop
lock
cwtl
adc
inc
ss
bnd
ss
cmp
lret
scas
ja
cwtl
test
push
jb
push
cltd
cltd
int3
mov
and
pop
sub
outsl
in
mov
dec
adc
fdivs
xchg
popf
rorl
fisttps
mov
inc
add
loop
stc
inc
cmp
inc
loope
loopne
imul
cmpsb
imul
lods
mov
jmp
or
inc
daa
mov
lret
fisubrl
adc
fldcw
dec
jo
aam
rcr
and
scas
out
or
xchg
and
adcb
xchg
adc
fidivrs
in
lret
or
or
cld
push
stc
mov
jecxz
mov
mov
inc
mov
out
cmp
add
xchg
xchg
sbb
pop
subb
ficoms
gs
xor
sub
xchg
and
movsb
mov
jle
nop
movsb
push
sbb
cmc
push
jl,pn
pop
cmp
dec
aad
xchg
mov
clc
pop
shll
xor
fisubrl
ljmp
icebp
fidivrl
arpl
js
add
push
iret
mov
cmp
push
push
outsl
cld
inc
imul
mov
mov
shrb
test
mov
out
mov
add
mov
inc
mov
testl
dec
je
stos
xor
ds
lret
rorl
jno
dec
jmp
stos
leave
scas
push
outsl
lea
jb
fstl
cltd
std
push
ljmp
cmpsl
orb
icebp
sub
cmp
jle
out
jp
dec
pop
jmp
ds
cli
repnz
push
outsl
mov
cltd
or
shlb
out
sub
inc
inc
jg
sti
jne
les
xor
movsb
ret
subl
inc
push
jns
mov
sub
push
ss
cvtps2pd
mov
pop
stos
mov
sarb
jae
push
xchg
add
rcl
aaa
out
inc
repz
push
cmpsl
jo
insl
mov
mov
jo
hlt
jg
cld
movsb
inc
dec
lea
lret
out
shrb
lret
aaa
cld
push
mov
mov
xchg
mov
rcrl
lds
fdivl
jae
gs
sub
or
mov
jo,pn
test
cmpsb
push
rorb
mov
or
lods
push
cmpsl
in
mov
outsb
scas
mov
cmpsb
xor
iret
iret
jmp
adc
mov
or
adc
dec
dec
inc
bound
loop
stos
fwait
mov
push
js
shll
fldenv
in
pop
xchg
push
cmp
mov
mov
push
fmuls
dec
out
out
mov
movsl
mov
inc
test
insb
adc
js
lret
jae
cmpb
es
jb
fdivrs
adc
mov
pop
mov
ror
xchg
add
pop
addl
movsb
jo
lods
fcompl
sub
pop
or
xor
jge
mov
lret
mov
inc
dec
mov
pusha
xchg
xor
fwait
sub
cmpsl
ret
sbb
aad
mov
jecxz
adc
stc
push
inc
push
iret
xor
pop
std
in
into
shrb
add
lahf
sub
int3
pop
jo
popf
xor
mov
movb
repz
push
add
hlt
outsb
popf
sub
inc
push
mov
xchg
and
push
data16
dec
loopne
ret
imul
xchg
cld
fbld
imul
and
stos
mov
xor
mov
cltd
inc
xor
xor
test
je
subl
pop
adc
aaa
push
inc
cmpsl
aaa
sub
sbb
pop
insl
add
pusha
sbbb
ss
imul
subl
cwtl
lods
pop
xchg
pop
out
je
push
and
lret
es
into
xchg
aaa
push
mov
cwtl
stos
push
mov
fistl
mov
jp
inc
push
mov
loopne
push
ret
xor
and
clc
cmp
or
add
sub
stos
cmp
pop
fmull
vpacksswb
sbbb
icebp
out
mov
scas
je
lock
lods
aaa
stc
lcall
cld
and
jne
sbb
mov
stos
jns
and
pop
cmpsl
mov
arpl
nop
mov
jp
mov
push
arpl
cmp
imul
das
lock
push
mov
divb
push
mov
or
outsb
sub
popf
negl
xchg
push
fbstp
dec
or
lret
lea
push
sbb
dec
cs
mov
stos
nop
and
popf
arpl
fs
push
push
mov
push
push
js
into
and
mov
jge
test
push
mov
sahf
lods
mov
push
in
mov
mov
jbe
push
ja
test
adc
ss
aad
ja
mov
dec
adc
fildll
sbb
dec
cmp
insb
sub
jae
mov
cmp
daa
or
fisttpl
cs
mov
pusha
cmp
dec
jmp
int
stos
push
je
out
mov
popa
cmp
jae
pop
outsl
sbbb
cmp
push
mov
sbb
leave
pop
in
mov
pop
call
cs
hlt
mov
les
push
rcrl
xchg
nop
repnz
xlat
sub
es
xchg
ja
jbe
mov
push
jbe
pop
inc
bound
idivl
arpl
jbe
sub
mov
mov
mov
mov
jle
push
das
dec
ret
jl
xchg
mov
xor
cli
xchg
mov
or
shlb
sarl
xor
mov
mov
adc
sub
push
sub
push
cmp
dec
dec
inc
fs
xor
cmp
iret
jo
xor
dec
inc
aaa
hlt
mov
in
adc
pop
cli
or
int3
fidivrs
cmp
cmp
insb
outsl
call
outsb
sub
mov
cmp
lods
jo
shl
jnp
jb
movsl
jb
decl
aam
mov
cmp
xchg
clc
push
jne
or
xor
mov
loope
mov
cld
lcall
sub
ds
aam
push
xchg
or
mov
push
shrb
pushf
or
or
pop
adc
xor
loopne
mov
movsb
adc
les
xlat
mov
xchg
dec
adc
and
stc
cmp
sbb
fildll
pop
sbb
inc
stc
push
push
insb
mov
xchg
mov
fldt
mov
jl
ds
push
sbb
push
cmp
sti
leave
shrl
popa
lods
inc
clc
or
ret
aad
dec
pop
jbe
mov
out
push
cmp
fsubrp
popa
xchg
jecxz
add
inc
sbb
into
mov
push
add
pop
sti
mov
mov
sbb
cltd
daa
addr16
mov
xor
inc
sbb
popl
xchg
ss
push
mov
jo
into
gs
js
mov
xor
xor
clc
mov
lods
lea
or
je
fs
mov
pop
pop
loopne
mov
push
jl
popa
sti
iret
cmp
fisttpll
pop
leave
inc
xchg
outsl
push
fnsetpm(287
fstl
jae
daa
cli
inc
test
mov
jmp
pop
xor
mov
mov
jecxz
sti
cmpsl
jb
adc
lds
mov
push
lahf
out
fisttpl
out
lods
jno
fisubrs
mov
xor
xchg
xchg
addr16
shr
addl
fs
xchg
xor
add
jo
movsb
mov
sahf
test
iret
loop
cmp
adc
insb
lds
inc
push
div
mov
sti
aad
sub
pop
push
lds
ja
sub
adc
mov
int3
popa
fdivl
pop
push
cmp
push
push
cmp
cmp
jmp
fcoms
sbb
leave
nop
mov
out
sub
xor
jne
xor
outsb
arpl
ljmp
cmp
loop
push
jne
out
push
aad
inc
fiadds
inc
int
jl
xchg
js
jns
repnz
ret
negl
std
movsb
cmp
arpl
repz
pop
inc
arpl
and
int
negb
jns
push
dec
mov
iret
sti
lret
gs
sbb
pop
movsl
add
mov
enter
xor
dec
loope
nop
call
pmaxub
jns
js
rcrl
fmull
or
cmpsb
leave
pusha
aam
fisubrs
sbb
mov
clc
aam
gs
add
inc
mov
push
ljmp
jno
int
jae
iret
das
pushf
mov
out
jl
fnsave
mov
leave
lcall
push
mov
lea
jecxz
fldenv
aad
popa
int
out
into
add
int
repz
frstor
adc
mov
repz
mov
xlat
sub
add
imul
out
jle
push
jl
pop
lret
popf
jns
fistpl
fs
aad
mov
lret
add
push
mov
xor
movsl
mov
or
or
push
push
aam
fwait
jecxz
nop
cltd
std
mov
sbb
ret
adc
mov
push
add
sub
xchg
cmc
inc
dec
repnz
arpl
xor
imul
dec
adcb
and
movsl
inc
out
gs
ja
cmp
xchg
or
cmp
stos
int
scas
out
mov
cmc
sub
nop
mov
les
xor
sti
mov
fnstenv
imul
popl
shrb
in
inc
movsl
frstor
in
xchg
fwait
add
test
int3
cmpsl
sub
lock
add
push
cltd
xor
cmpsl
out
xor
xchg
in
in
push
mov
inc
dec
insb
xor
in
push
push
adc
je
outsb
enter
xchg
movsl
and
cmp
nop
ja
sub
pop
mov
mov
jl
adc
aas
insb
sub
mov
fildll
rorl
rolb
inc
scas
mov
dec
mulb
lods
push
outsb
cs
lods
cmp
pusha
int
cld
or
or
scas
mov
test
add
cli
mov
and
dec
pop
inc
inc
lahf
lods
push
xlat
lcall
jno
adc
shlb
movsl
mov
arpl
adc
xor
push
jbe
push
mov
popl
fnsave
inc
sub
mov
test
fucomi
iret
adcl
push
clc
jae
pop
mov
lcall
out
pop
sbb
adc
add
add
cld
sbb
dec
out
cltd
xchg
insl
inc
lret
rep
insl
jno
jne
fnsave
mov
and
xchg
mov
cmp
xchg
fidivl
mov
jns
inc
pop
mov
rorb
pop
or
leave
or
sub
push
xor
ret
jae
mov
bound
int
mov
insb
data16
ret
shll
loope
push
push
push
cmp
aas
das
negl
rorl
mov
testl
push
mov
and
mov
arpl
push
mov
or
sti
mov
mov
in
push
mov
push
iret
sub
shrl
mov
call
das
loopne
pop
sahf
das
js
or
mov
xchg
add
xor
stos
cmpsb
xor
gs
xor
sub
mov
jns
lahf
xor
lock
jl
pop
push
mov
mov
push
ljmp
jb
sbb
leave
mov
mov
fcmovnbe
rcll
pop
and
mov
movsb
call
cmp
jns
ja
out
xchg
jns
mov
test
insl
aad
pop
rcll
add
repz
nop
pop
rclb
xor
push
fidivrs
xor
mov
ret
outsl
fscale
xchg
int
mov
push
outsl
lock
mov
pop
and
lahf
ss
push
dec
in
cmpl
shlb
inc
dec
pop
leave
and
adc
cmc
mov
or
adc
pop
mov
mov
cmp
movsb
cmp
in
out
adc
or
ret
and
mov
jbe
ljmp
lds
jno
inc
pusha
inc
xlat
xchg
jb
mov
les
roll
adc
ds
mov
repz
rclb
add
add
sbb
aas
repnz
mov
sarl
rolb
filds
adc
pop
lock
xor
data16
jb
xchg
sbb
or
jmp
xchg
sub
imul
dec
movsb
out
jo
daa
mov
int3
out
test
push
lahf
test
test
movsl
mov
cmp
lds
mul
aad
adc
repz
hlt
xchg
xchg
dec
in
subl
push
aad
and
ds
pusha
jo
jmp
mov
or
and
test
mov
and
lahf
push
mov
es
xor
loopne
or
or
pusha
aaa
daa
mov
mov
outsl
cli
xchg
mov
ret
sbb
jno
cmp
aas
xchg
fnsave
pop
lock
in
xchg
pop
mov
push
in
sbb
xor
push
shlb
loopne
lock
aaa
jnp
gs
out
test
mov
mov
fidivs
into
or
jb
hlt
cld
xchg
and
out
rcr
jbe
xchg
fs
ret
es
push
loop
call
ja
movsb
movsb
aaa
movsb
cmp
xchg
sub
test
mov
lret
aam
cmpsl
add
inc
xchg
and
scas
push
mov
and
sub
lods
add
nop
xor
mov
jo
sbb
imul
mov
ret
clc
pop
push
in
mov
mov
dec
mov
aam
xchg
add
jo
mov
gs
mov
js
movsl
call
hlt
sbb
cmp
inc
xor
push
sub
mov
fadds
test
xchg
fidivs
sbb
rorl
jg
xsha1
cmpsb
mov
call
jbe
jmp
mov
sbb
jo
montmul
cmpsb
subb
sbb
inc
shrl
dec
and
loope
xchg
sub
cmp
imul
mov
es
jne
int3
cmp
pop
insb
push
ret
pop
xchg
xchg
sub
cmp
in
jp
sbbl
aam
inc
fdivs
aaa
into
jge
mov
xor
inc
pop
lock
dec
loopne
stos
jnp
fldt
ret
pop
je
sub
jl
mov
in
xor
fdivrl
sub
insl
dec
fnsave
icebp
mov
cmpsl
push
in
aad
aad
outsl
dec
lea
mov
mov
mov
pop
mov
dec
out
jle
insl
add
mov
testl
loopne
add
jo
add
loopne
and
push
outsl
dec
and
loop
or
and
sbbl
fsubl
bnd
fwait
xor
stos
inc
in
arpl
fnstcw
inc
fisubrl
jno
jge
sbbl
movsb
lds
in
imul
jge
mov
jo
cmp
shrb
idivb
xchg
call
aaa
aad
dec
pop
lock
push
in
in
mov
cmp
dec
jns
jp
insl
add
mov
xchg
sub
aaa
into
jbe
pop
mul
mov
mov
push
js
jnp
in
or
imul
out
in
mov
and
cmp
imul
addr16
in
mov
test
ds
imulb
dec
loop
mov
iret
imul
push
push
jne
out
mov
out
xchg
push
call
out
les
xabort
dec
loopne
das
pop
hlt
pop
mov
mov
cld
jo
jae
pop
cmpsb
mov
inc
sbbl
sub
bound
mov
sti
dec
addr16
jp
repz
push
ljmp
outsl
push
bound
imul
fnsave
leave
or
dec
jecxz
and
xor
cmpsb
or
idiv
dec
fildll
pop
daa
mov
jae
inc
pop
lahf
xchg
xor
rcr
icebp
out
jecxz
adc
add
stc
nop
xchg
mov
jae
mov
or
loop
xchg
sbb
testb
push
cld
xchg
mov
xchg
sub
adc
jne
aaa
xor
outsl
addr16
xchg
addb
xor
add
icebp
mov
sub
pop
push
inc
fadds
mov
jo
cld
std
lahf
sub
test
dec
sbb
mov
ret
clc
lock
and
inc
mov
xchg
pushf
cltd
fnstenv
mov
arpl
and
jge
inc
inc
mov
js
fwait
xor
arpl
rclb
pusha
mov
xchg
cwtl
test
inc
out
loope
sbb
pop
notb
add
xchg
sub
sbb
cmp
adc
popa
clc
aas
call
dec
out
add
jge
push
cmp
ds
cmp
pusha
pop
icebp
xchg
xor
lods
popa
rol
testb
inc
aad
stos
add
lcall
int
push
jne
iret
mov
int3
hlt
mov
lea
lcall
test
insl
leave
pusha
fwait
sub
inc
pop
mov
in
pop
mov
js
cmp
pop
je
pop
xchg
sub
das
xchg
jecxz
sbb
mov
pusha
ja
aam
jecxz
pop
pop
mov
pop
jno
scas
iret
data16
out
xchg
or
cmovne
add
cmp
jo
xchg
mov
push
ljmp
jbe
data16
pop
xchg
sub
fidivl
add
and
stos
jnp
xchg
lods
int3
dec
out
lret
xor
sbb
dec
push
loop
dec
insl
mov
mov
ret
mov
rorl
fidivs
bound
xchg
arpl
mov
mov
ret
call
add
mov
mov
adc
mov
add
adc
mov
sti
sub
inc
or
sub
pop
cli
lea
jle
shrd
or
mov
fildll
clc
pop
sti
aas
xor
add
test
adc
aad
cs
pushf
clc
sub
lock
testb
sbb
sub
mov
mov
repz
enter
xlat
lds
add
clc
dec
iret
sbb
xchg
shr
mov
lahf
repz
rorl
pop
cmpsl
ret
mov
scas
rol
xchg
aam
inc
lret
insb
fxch
fdivs
mov
jns
pop
leave
lock
fsubrl
pusha
mov
iret
gs
sub
fadds
push
xor
cwtl
dec
mov
mov
pushf
jo
scas
pop
repnz
and
adc
sbb
icebp
add
vrcpss
mov
divl
movsl
mov
adc
aad
push
int
xor
mov
into
or
loop
movsl
lea
in
sub
stos
jo
jns
mov
mov
in
leave
sbb
lahf
add
add
adc
imulb
mov
ljmp
mov
or
jp
add
sbb
in
add
mov
clc
or
std
mov
lret
ja
push
xchg
sub
sub
enter
sarb
in
inc
cltd
into
dec
inc
fiaddl
adc
out
fstl
cmpsl
xchg
mov
imul
jbe
stc
daa
cmp
xor
subl
cmc
sub
out
cmp
cld
cmpsl
adc
std
mov
rcr
push
in
pushf
rolb
out
sbb
popa
dec
adc
cld
xchg
dec
lods
xchg
imul
or
daa
lds
xor
shrb
andl
lret
xchg
sbb
insb
movsb
jecxz
pusha
mov
fistps
mov
in
push
aad
mov
fdiv
fnstsw
aad
ret
xor
loopne
dec
sarb
xor
in
xor
push
add
inc
xor
ror
data16
shrb
ret
stos
data16
fsubs
mov
out
jne
lahf
xor
xchg
jne
and
imul
push
pop
ss
pop
inc
pop
or
or
inc
xchg
movlps
decb
cmp
sub
lods
inc
or
mov
and
inc
imul
cmpsl
mov
divl
mov
add
and
lret
dec
pop
adc
push
add
cmp
shlb
sti
pop
and
add
sbb
outsl
xor
sub
jecxz
jnp
sbb
sbbb
popf
mov
daa
sub
inc
fisubrs
scas
test
and
lea
js
lahf
sbb
cmc
lods
sbb
xchg
int
mov
push
inc
or
pop
ret
aad
or
ds
cmpb
cwtl
cmpsl
fdivs
mov
dec
lods
test
add
fldcw
pop
pop
and
sarb
jge
sbb
sub
xor
dec
data16
jns
add
shrb
xor
lret
mov
cmp
ds
fldl
out
lret
push
pusha
mov
aam
sbb
or
testb
arpl
dec
cmp
inc
jle
lea
cmp
pop
cmp
mov
adc
fisttpll
dec
inc
mov
xor
jb
and
sub
adc
push
mov
pop
sbb
xchg
mov
mov
std
pop
pop
mov
pop
smsw
xchg
pusha
xor
mov
xor
call
ja
clc
inc
lret
int
mov
pop
aad
out
push
push
lcall
insl
jg
dec
repz
xchg
and
dec
aaa
fsubrl
cmp
jns
xor
rclb
mov
ret
negl
adc
movsl
mov
cmc
or
hlt
sub
hlt
sub
cwtl
and
ret
sub
mov
adc
pop
lret
mov
sub
adc
push
jne
bound
mov
aaa
push
lret
xchg
lea
insb
mov
cmpl
cmpsb
imul
nop
jnp
fcomps
pop
fidivl
mov
out
push
out
mov
cmp
pop
mov
insl
lahf
dec
pushf
aam
mov
cmp
mov
nop
andb
and
pop
rolb
data16
nop
mov
inc
inc
fidivl
imul
sbb
add
cmp
out
push
pop
pop
cld
arpl
and
jge
shlb
sub
stc
sahf
xchg
sbb
and
adc
mov
stc
nop
xor
push
cli
cs
lret
dec
lret
loopne
test
sbb
xchg
cmpsb
mov
lret
mov
xor
sub
ficoml
lea
sbb
sbb
sbbb
lcall
push
jge
dec
inc
push
jbe
gs
mov
inc
xor
lea
push
or
dec
cwtl
xor
sub
mov
jle
arpl
pop
or
ss
ljmp
xor
xor
and
cmpsb
pop
mov
adc
or
jne
mov
icebp
mov
inc
leave
shlb
imul
shll
adc
fyl2x
shl
sbb
cmpsb
adc
adc
xchg
cmpsb
push
cmpsl
add
test
add
jg
test
adc
xchg
sub
xor
hlt
dec
or
sbb
ja
ret
cmp
mov
jle
push
sbb
out
imul
or
jne
out
pop
cmp
test
ret
or
mov
hlt
cs
jbe
adc
or
add
adc
imul
repz
jmp
es
add
sbb
xchg
dec
pop
sbb
xor
cmp
pop
test
push
push
popf
ss
ss
push
cmp
gs
imul
xor
fisttps
jno
or
mov
sub
push
shl
sub
mov
rcll
xor
sbb
mov
inc
outsl
add
imul
ds
jbe
xchg
ljmp
dec
jp
dec
outsl
sbb
pop
insl
enter
jmp
sbb
sbb
push
test
repnz
xchg
shlb
pop
in
icebp
sbb
les
call
jb
pop
lret
je
dec
aam
xor
jl
inc
fstps
or
jge
or
sbb
push
pop
test
cli
and
xchg
lock
push
mov
pop
rcll
ret
jb
mov
push
sbbb
test
mov
cmp
cmc
pop
pop
lahf
pop
mov
je
cmp
jns
pop
jo
cltd
and
shll
push
jmp
daa
sub
xchg
push
setne
cmp
sbb
xchg
movsb
ret
ds
fiaddl
out
add
inc
pop
ss
inc
dec
mov
scas
js
cltd
xor
add
fldt
gs
sub
adc
jbe
dec
xchg
into
xor
push
rorb
mov
and
pop
mov
bound
imul
imul
mov
mov
daa
cmpl
sbb
shr
insl
mov
hlt
mov
je
fwait
rcrl
lret
cmpsl
mov
es
enter
pop
in
sbb
es
aaa
daa
nop
shll
aas
sub
aas
ret
out
cmp
mov
icebp
sbb
jmp
test
filds
sub
icebp
je
mov
xchg
and
add
sahf
xchg
rcrb
stos
loope
aam
out
dec
mov
rol
hlt
pop
or
lock
mov
push
adc
or
push
cltd
fmuls
loop
adc
sbb
sbb
dec
shrb
outsb
lock
imul
inc
mov
call
enter
insb
test
adc
nop
xchg
xlat
push
in
xchg
sbb
lret
push
push
shrl
leave
popa
lret
mov
loopne
shlb
lds
sbb
pop
out
cwtl
pop
or
dec
mov
call
pop
push
subl
ds
push
or
push
nop
fwait
jg
pop
and
push
lods
scas
pop
cld
mov
mov
cmc
mov
dec
push
fisttps
dec
cs
clc
lds
pop
sub
pusha
int
nop
fsubrl
in
push
jg
jl
repnz
add
cmc
call
push
rol
divl
or
fists
sub
inc
je
lods
pop
sahf
dec
stos
fs
clc
movl
push
sbbb
and
or
cmp
ret
pop
mov
add
leave
outsb
xchg
icebp
jb
cwtl
xor
js
sbb
clc
jo
dec
mov
ja
dec
iret
cmp
pop
push
into
dec
sub
addb
gs
cmp
mov
or
xchg
gs
lcall
stos
fs
and
xor
orl
xor
cmp
xchg
jl
inc
lret
mov
aad
fisttpl
push
das
iret
imul
xor
in
jl
outsl
pusha
cmp
adc
jns
bound
into
repz
icebp
pop
hlt
and
cmpsb
bound
sub
pop
xchg
out
enter
popf
in
faddl
in
pop
stos
mov
clc
push
aad
fldl
mov
iret
call
push
mov
xchg
idiv
xchg
sub
mov
sahf
sub
les
subb
rorl
push
add
sti
repz
sarb
sub
jmp
das
outsl
repnz
aas
push
add
inc
inc
mov
pop
dec
push
test
adcb
negb
fists
stos
xchg
xchg
sbb
outsb
cwtl
popf
mov
sbb
pop
cmc
pop
cmp
jle
cmp
pop
sub
es
adc
sbbl
jmp
popa
loope
rorb
mov
push
jmp
or
dec
xorl
movsl
lea
stos
cmpsb
pop
adc
mov
icebp
push
jo
ds
cmp
sub
in
sbb
out
mov
jmp
cmp
pusha
pop
xchg
mov
sti
sub
pop
adc
shrl
xor
dec
lret
in
loopne
lds
lahf
movsl
roll
lret
fists
aad
sbb
adc
fsubl
out
pop
scas
and
out
push
xchg
inc
pop
add
out
jl
cmpsb
sti
lds
out
imul
adc
sub
xchg
sbb
xchg
imul
add
lea
in
xor
adc
sbb
or
fwait
lahf
ljmp
dec
shr
add
sub
dec
daa
loopne
insl
and
xor
test
push
inc
movsl
push
dec
jbe
pop
dec
inc
stos
pop
dec
pop
aam
pusha
data16
xchg
pop
add
push
adc
imul
dec
lret
insl
sub
xchg
jle
popl
add
ss
add
das
xor
jge
fisttps
push
mov
push
int3
dec
push
js
cmp
push
dec
mov
pop
adcl
pusha
mov
rolb
and
jge
or
push
sbb
lcall
fsubrl
cs
movb
push
loop
dec
add
jmp
cmp
push
adc
or
test
in
pop
shr
fwait
jg
mov
div
fcoms
mov
les
popf
popa
aad
inc
out
cmp
mov
sub
mov
cli
dec
pop
sahf
mov
jmp
xchg
mov
fildll
xlat
lods
dec
sar
mov
aas
cmc
loopne
sub
das
mov
lahf
xchg
push
cmp
pop
add
ds
js
je
mov
or
fdivl
mov
mov
adc
pusha
gs
xchg
scas
sti
and
mov
sbb
push
lods
pushl
sbb
iret
push
jne
scas
jae
push
test
jge
das
mov
aam
add
out
mov
cmpsl
cmc
daa
es
mov
jne
inc
arpl
mov
add
fildl
xchg
pop
arpl
dec
fdivs
loopne
or
nop
xchg
shrl
adc
pop
jge
lahf
int3
jmp
fucomi
push
mov
lret
loope
push
mov
mul
push
lret
or
mov
repz
ss
int3
mov
mov
out
jg
lret
fwait
push
mov
in
pop
shll
in
sbb
jno
jecxz
into
out
test
push
faddl
pop
ret
pop
inc
inc
fwait
insl
push
xor
fs
test
test
punpcklbw
in
jns
or
andps
pusha
xor
pop
mov
outsb
frstor
xor
sahf
xchg
mov
jb
fs
xchg
xchg
adc
dec
in
sbb
das
cmc
mov
in
pop
or
testb
cmp
scas
fists
adc
xor
stc
or
in
dec
jp
outsb
mov
sub
jge
add
sbb
add
jbe
jmp
ss
fidivl
stos
jne
aaa
adc
xorb
sub
mov
add
rolb
loope
filds
sub
push
aad
movsl
addl
shlb
push
fistps
push
or
arpl
push
out
adc
dec
test
add
push
lahf
sub
mov
mov
arpl
or
popa
cli
jb
inc
test
lahf
sub
orb
test
clc
pop
leave
loop
ret
mov
cmc
adc
orb
jb
sti
xchg
bound
test
xchg
test
jno
xchg
popa
pushf
sub
dec
and
push
sbb
push
inc
sbb
cld
lahf
push
int3
cmp
sbb
mov
sbb
push
xor
xor
in
pop
dec
jno
adc
jo
lea
jno
aas
dec
je
mov
dec
sarb
push
sub
ja
fidivl
cwtl
cmp
arpl
xor
sub
imul
lea
or
outsl
movb
add
push
pop
mov
cmp
pop
cmp
lahf
in
adc
fildl
icebp
inc
ret
mov
fcmovb
xor
and
inc
std
cmc
bound
and
jb
pop
push
in
lock
int3
or
cmpsl
out
adc
mov
lods
inc
aaa
add
loop
push
jecxz
jno
pop
lods
cld
xchg
lock
adc
scas
inc
inc
aaa
test
mov
xchg
xchg
out
imul
sbb
push
rcr
leave
faddp
fstl
fsubl
icebp
lret
dec
in
or
out
lods
stos
inc
sub
jp
xchg
push
je
adc
stos
xchg
pop
lea
cmpb
popf
mov
pop
rclb
add
shlb
push
iret
cmp
mov
fnstenv
mov
sbb
xchg
pop
int3
clc
test
pop
sbb
jo
inc
xor
push
int3
push
imul
push
cmp
xor
add
sbb
test
inc
mov
and
dec
negb
pop
data16
xor
add
nop
dec
fidivl
mov
mov
jbe
arpl
jle
in
lods
pop
insb
mov
cli
call
or
cli
jne
mov
aaa
adc
pop
pop
cmpsb
pusha
lahf
add
sbb
pop
hlt
ret
inc
ss
add
stc
nop
xor
jne
push
sub
inc
push
mov
jp
jo
xchg
xor
xchg
mov
cmp
jecxz
stos
adc
divl
mov
push
xchg
xchg
sub
xor
lock
mov
sub
mov
cmp
movsl
enter
movl
repnz
or
lret
sub
push
arpl
inc
dec
aaa
imulb
jne
scas
jge
xchg
add
or
sbbl
dec
lea
or
inc
stos
sub
inc
sbb
mov
subl
jbe
adc
push
in
lret
mov
mov
scas
movsl
insl
std
lods
dec
sar
movsl
cmp
sbb
add
or
xor
mov
out
cli
mov
push
adc
test
cmpsb
cmc
xchg
imull
pop
pop
inc
mov
adc
push
aad
xchg
gs
fstps
mov
decb
pop
out
mov
sub
xchg
in
sahf
adc
hlt
lahf
sbb
adc
sbb
in
mov
shll
dec
out
out
pop
rol
test
enter
or
cli
cmp
mov
add
xchg
ror
cmp
mov
add
lock
mov
jmp
pop
sti
push
adc
mov
lret
das
lock
loop
dec
mov
mov
dec
mov
mov
fdivr
ret
push
int
mov
and
cmpsb
or
dec
mov
fldcw
xor
pop
xor
hlt
pop
bound
or
jno
pop
xor
push
jns
jo
subl
or
sbb
sbb
sbb
add
out
popf
mov
xchg
pop
rcll
cmp
xchg
cmp
ja
mov
mov
xchg
lea
pop
adc
ret
push
inc
out
inc
aaa
push
ds
lock
lcall
dec
xchg
jle
jae
xchg
mov
out
mov
inc
sbbl
cmc
cmp
mov
loopne
cmp
lcall
dec
push
movsl
jnp
dec
jecxz
outsl
push
cmpsb
mov
mov
icebp
mov
add
lcall
rorl
inc
mov
jnp
push
movsb
pop
insb
jge
pop
dec
cmp
xchg
sub
mov
inc
fidivs
sbb
cmpsl
es
or
push
sbb
mov
xchg
lds
adc
add
sub
sbb
movsl
lea
pop
leave
push
sbbb
xor
pop
dec
sbb
jg
iret
inc
inc
pop
cs
pop
inc
mov
inc
push
daa
xlat
outsb
dec
scas
inc
popf
sbb
add
push
add
cmpsb
insl
add
lods
repz
sub
mov
das
or
mov
shl
push
ljmp
or
out
jbe
pop
scas
adc
or
jns
mov
adcl
sbb
addr16
rclb
nop
pop
rcll
cmp
dec
stmxcsr
inc
nop
xor
mov
xchg
jge
mov
std
rcll
cmpsl
add
ret
daa
push
adc
cmp
add
mov
inc
dec
add
mov
dec
push
xchg
dec
xchg
xchg
xor
lahf
cmp
imul
and
push
lcall
insb
lahf
inc
aad
and
dec
js
sub
cmp
sbb
mov
mov
cmc
call
mov
pop
adc
in
lea
cmc
sbb
icebp
clc
and
jg
dec
pop
leave
repnz
dec
stos
inc
pushl
fucomp
push
fwait
outsb
mov
jne
andb
leave
jp
in
or
cs
sbb
stc
call
sub
sub
dec
sarb
push
pop
aam
pop
cwtl
sarb
dec
mov
jge
rcrl
sti
push
xchg
push
xchg
jmp
mov
mov
cli
push
mov
repnz
int
test
fdivr
cltd
and
sub
sub
repz
loopne
and
lods
popf
pop
addb
inc
jle
xor
ja
loopne
mov
lods
pop
sub
jp
inc
outsb
sub
pop
sub
jno
jge
inc
inc
adc
jbe
pop
xchg
push
pop
cmpsb
cmp
sub
loopne
xor
aad
push
push
cmp
sbb
cli
es
cld
lret
cmp
mov
call
mov
cmc
sbb
push
hlt
sbb
xor
pop
jns
icebp
sub
cmp
shlb
mov
mov
xchg
mov
and
lahf
ss
icebp
push
or
daa
xlat
cmp
rcll
push
in
push
mov
sub
mov
lds
loope
xchg
mov
sbb
gs
or
rcrl
lds
addr16
call
jbe
pop
scas
push
xor
and
loope
aas
loope
cmp
adc
rorb
xorb
cmc
lds
mov
fwait
xchg
sbb
push
lods
jg
popa
mov
mov
lock
xchg
jmp
leave
insl
mov
jmp
sbb
mov
out
xchg
lods
cmp
into
ja
aas
insl
stos
pop
mov
mov
pop
sub
js
out
add
loopne
dec
repz
or
fisttpl
adc
push
push
xor
addr16
out
jb
test
cmp
sub
inc
sbb
mov
mov
jne
jmp
cmp
lcall
mov
xchg
xchg
push
out
inc
aas
ja
adc
inc
lods
push
out
insl
lret
fsubrs
sti
nop
add
xchg
push
shrl
lds
pop
dec
inc
into
push
pop
push
lods
mov
out
pusha
mov
push
or
fmull
rorb
das
scas
jno
hlt
jns
lret
pop
ret
ljmp
or
loopne
pop
decb
or
icebp
adc
dec
cltd
test
lods
repnz
pop
ds
stos
negl
movsb
pusha
stos
cli
xchg
push
es
add
ja
push
aam
and
test
cmp
imul
push
ret
call
shlb
mov
shl
aad
push
mov
icebp
sbbb
adc
xchg
sub
cmp
sbb
sub
shrb
out
add
sbb
push
lahf
dec
jle
cmp
stc
and
lret
lock
lock
sbb
xchg
xchg
mov
sbb
sbb
add
test
fcoms
cld
cli
ss
pop
cmp
int3
arpl
jnp
gs
mov
and
cmp
ds
pop
inc
fmull
scas
arpl
loopne
jp
daa
add
das
jp
mov
dec
int
mov
imul
fdivl
inc
repnz
xchg
adcl
lds
cmc
ss
cmp
inc
push
jmp
mov
mov
fisttps
daa
pop
xor
inc
jb
les
xchg
int3
arpl
jns
out
sbbl
cmp
lahf
imul
mov
es
add
inc
fistl
and
icebp
push
xor
bound
push
addl
sti
sahf
xor
dec
sub
mov
ret
icebp
mov
iret
clc
popl
pop
adc
push
imul
lret
movsl
mov
push
jmp
aas
sbb
dec
pusha
mov
xchg
imul
in
lods
inc
lock
pop
cmp
int3
arpl
in
mov
xchg
lods
add
call
or
mov
sbbl
shrl
jp
add
das
jns
mov
dec
int3
cmpsl
mov
imul
fdivl
inc
repnz
cli
xchg
adcb
shl
lds
hlt
ss
cmp
inc
push
jmp
mov
mov
fimuls
daa
push
xor
inc
jno
les
xchg
int3
arpl
fsub
jns
out
sbbl
cmp
lahf
push
push
mov
mov
mov
add
inc
fisttpl
and
push
xor
popa
jne
xstore-rng
cmpsl
addb
cli
aad
xor
dec
sub
mov
ret
repnz
push
cmpsb
cmp
xchg
inc
fcmovnbe
out
mov
sub
sub
push
jge
jge
dec
loope
pusha
sub
xchg
sbb
pop
out
jecxz
mov
ss
stos
cmpsl
mov
sbb
mov
fwait
xor
insl
mov
mov
mov
rcl
mov
inc
adcb
mov
sub
cltd
shrb
add
pop
out
and
arpl
fs
jns
mov
push
lods
mov
testb
sub
jmp
les
cmc
xorb
push
jno
inc
fwait
nop
daa
int
dec
out
out
scas
test
mov
sarb
mov
pop
sbb
dec
inc
jmp
pusha
xchg
rclb
add
jne
addr16
loope
jno
push
push
xchg
call
inc
sbbl
xlat
fstl
fsubrs
int
das
int
dec
and
push
outsb
stos
inc
rol
add
push
out
jo
lds
out
jle
mov
cmp
xor
mov
scas
push
jbe
sarl
jnp
cmp
lods
pop
mov
pop
fists
hlt
lcall
das
jmp
pop
mov
fdivl
mov
xchg
add
dec
add
rcr
xor
cmp
pop
sbb
int
fnstcw
lods
and
scas
pushf
pop
sbb
cmp
jmp
bound
mov
jmp
xor
cmp
idiv
cmp
das
fdivrs
popa
jge
dec
sar
sbb
sub
sbb
stc
cmp
inc
fisubrs
or
add
xchg
xor
bound
loop
jno
fstpl
mov
push
cmpsb
mov
popa
mov
lret
mov
xchg
addb
mov
lret
push
test
sbbb
cmpsb
fsubl
cmp
fs
mov
jle
ficoms
or
jge
inc
adc
sbbb
test
sahf
mov
or
ds
or
pop
int3
xchg
into
pop
jns
pop
daa
scas
out
aad
push
cld
and
fcomp
jnp
scas
js
test
mov
clc
addr16
insl
aad
sahf
pushf
lret
xor
xchg
inc
cli
adc
sbb
pop
dec
jmp
jecxz
and
lret
xchg
or
out
addr16
mov
lea
adc
sbb
insl
shlb
lods
sub
jbe
lods
sbb
sub
dec
mov
push
stc
int3
repnz
jnp
imul
loop
sbb
js
scas
cli
push
mov
lahf
call
jecxz
call
push
negb
mov
jmp
adc
pop
or
fdivrs
repz
mov
lock
mov
andl
mov
int3
mov
stos
push
jg
stos
jg
mov
or
es
pop
fldenv
sub
pop
fnsave
into
repnz
push
mov
shll
hlt
sub
push
in
push
ffree
jecxz
lds
rcrl
das
cmp
or
mov
daa
push
dec
pop
sbb
addr16
push
arpl
lret
bound
jbe
adcb
cmp
mov
dec
add
inc
rorl
jecxz
imul
jno
clc
hlt
mov
or
sarb
into
gs
sbb
mov
lcall
das
stos
mov
pop
cmp
adc
leave
pop
and
pop
out
adc
ljmp
pop
insb
fidivs
jmp
inc
fucomp
adcb
outsb
pop
repz
xchg
or
jecxz
les
xchg
mov
pop
fadds
or
sbb
cs
pop
mov
cmc
jns
out
adc
xchg
xor
cs
andl
push
xor
sub
adc
lcall
or
fs
add
dec
out
jecxz
cld
jns
pop
addb
test
fdivr
mov
pop
cld
std
add
push
ja
push
push
or
xchg
aas
sub
je
je
lret
imul
add
lahf
cmp
pusha
push
add
hlt
or
push
or
pop
xchg
xchg
inc
xchg
inc
jne
ja
inc
adc
push
loop
push
xchg
inc
xchg
popa
push
add
add
iret
mov
sbbb
pop
mov
test
or
ljmp
xchg
loopne
add
mov
push
add
shlb
lret
lret
ret
xchg
sub
pop
mov
sbb
xchg
ret
mov
cmp
inc
or
and
jo
cmc
filds
stc
sbb
loope
ljmp
lock
push
pop
daa
loope
sub
adc
in
inc
or
notl
and
adc
adc
mov
cmp
pop
add
cmc
in
je
aas
cs
fildl
dec
cmpsb
stc
pop
lods
cltd
pusha
call
je
mov
lods
cmc
ret
mov
shll
dec
ds
pop
xchg
pushf
jecxz
and
rorl
cmc
xchg
ds
incb
test
and
dec
mov
pop
pushf
mov
inc
or
mov
cmp
iret
mov
inc
xchg
cmc
pop
popf
aad
inc
jmp
rorb
notl
mov
movsb
lcall
xchg
fcompl
shll
or
pop
mov
xchg
cmp
les
cmp
inc
icebp
pop
dec
dec
negb
fwait
mov
pop
aaa
dec
sub
aad
pop
fwait
inc
push
mov
jae
inc
or
sarb
mov
nop
add
scas
xor
fcompl
hlt
and
into
inc
xor
xor
sahf
dec
cmpsb
sub
int
int
push
adc
int
adc
pop
sub
cmp
fs
scas
jno
cltd
inc
lcall
into
lret
test
mov
fwait
inc
pop
add
int
lahf
mov
bswap
js
mov
ljmp
repnz
lahf
inc
lahf
mov
pop
lret
pop
adc
fnstsw
imul
cmpsb
mov
cli
adc
push
add
dec
sub
arpl
cmpsl
jbe
xor
and
sbb
xchg
inc
movl
mov
or
pop
cmp
cmpb
xor
mov
sub
ja
fistl
rol
xchg
rcrb
and
mov
movsb
popa
out
xor
and
lcall
dec
inc
inc
int
aad
sbb
cmp
out
cmp
sbb
xchg
pop
or
inc
leave
mov
fistps
rolb
loope
xchg
inc
inc
cld
sbb
mov
loop
mov
addr16
sbb
lods
and
xchg
inc
into
jns
mov
push
icebp
popa
test
mov
mov
push
ds
roll
jecxz
xchg
inc
pop
stc
mov
jg
jno
jae
and
mov
movsl
push
add
pushf
sub
data16
cmp
and
stos
movsl
outsb
mov
cmp
jle
jmp
cli
pop
xlat
in
cmpsl
mov
mov
fdivrs
and
cltd
aas
cmp
push
cli
and
pop
push
out
mov
out
inc
adc
icebp
sahf
mov
cld
in
mov
mov
cmpsl
aam
push
push
lods
daa
mov
xchg
inc
pop
stos
inc
push
push
xorl
mov
mov
mov
push
rclb
or
mov
dec
or
push
in
imul
lods
sub
dec
pop
pop
xor
mov
xchg
roll
dec
mov
insb
add
orl
mov
fdivrs
mov
mov
hlt
xchg
inc
stos
call
pop
cld
dec
shlb
xchg
iret
lea
xlat
loopne
insl
ret
push
add
jne
enter
push
mov
mov
dec
or
and
loopne
icebp
aas
xlat
test
mov
jo
push
push
lret
xchg
inc
ja
sub
int3
lea
xor
jno
inc
push
add
push
or
mov
xchg
shlb
das
dec
pop
cmpsb
xor
lahf
cmp
loope
adc
je
dec
mov
test
dec
ljmp
pusha
insl
int3
mov
jl
mov
or
jo
or
arpl
dec
or
jae
out
imul
jg
rolb
shl
ret
or
jns
lods
rolb
pop
shll
mov
lock
out
outsb
add
enter
jl
mov
cmc
lret
jns
sbb
xchg
nop
gs
jb
jns
fnsave
add
je
movsb
gs
cmp
pop
cld
in
and
mov
stos
fdivrl
push
mov
out
inc
stos
fstpt
jmp
in
fistpll
cld
fistpll
jmp
mov
ret
cli
ja
mov
fdivrs
stos
jmp
push
ja
or
neg
jle
in
add
je
cmpsb
leave
jne
lock
cmpsb
jnp
jmp
out
addr16
clc
fidivrl
fwait
cmp
cli
scas
daa
enter
mov
movsl
jnp
push
ja
out
push
sar
stc
repnz
cmp
aaa
lahf
jne
lock
jmp
push
sbb
dec
xchg
cmp
fwait
inc
mov
lods
xchg
cmp
leave
filds
lcall
loopne
pop
pop
add
mov
jp
push
inc
pop
add
cmp
jmp
insl
add
int3
mov
stos
sbb
dec
push
mov
iret
add
insb
icebp
iret
mov
add
mov
stos
fldl
adc
mov
push
inc
push
idivl
mov
mov
ret
pusha
sbb
jno
jns
test
dec
adc
rcr
test
pop
ds
aaa
test
xor
icebp
mov
sub
mov
sub
sarl
pop
iret
sub
jl
call
mov
rcll
xlat
test
push
cmp
jb
repnz
pop
or
test
mov
out
mov
xor
push
rcrl
outsl
popf
ds
movsb
pop
cli
lea
lea
add
data16
mov
jge
clc
mov
out
xchg
shl
les
adc
xor
cld
es
sbb
xorb
in
insb
imul
mov
rorb
sbb
sarl
inc
adc
scas
pop
cld
mov
arpl
subb
in
movsb
test
cmp
xor
sub
mov
fstpt
lods
clc
pop
adc
mov
xchg
and
fnstsw
push
ret
xchg
mov
push
inc
ss
jl
mov
shlb
xchg
arpl
addr16
mov
pop
and
mov
push
mov
int
hlt
ffree
mov
loope
dec
pop
stc
lods
xor
fsubs
lods
xchg
cmp
mov
cwtl
inc
inc
aas
iret
xchg
and
int3
nop
pop
xlat
xchg
cmp
sti
pop
mov
cmpsl
test
sub
out
std
nop
and
cli
fcom
jge
ljmp
fs
xlat
inc
jb
dec
push
xchg
scas
das
in
xchg
imul
jle
je
xchg
ss
fwait
cmp
or
rorl
cs
out
or
pop
cli
negl
aam
nop
inc
cli
lss
popa
call
repz
jp
fstpt
addr16
mov
and
mov
sahf
xor
mov
sub
fildll
adc
loopne
sbb
aaa
cld
popa
call
add
pop
pop
mov
mov
jle
insb
fidivrl
dec
stc
push
push
lds
aaa
cmpsb
xchg
mov
mov
xchg
inc
dec
imul
ss
xor
push
hlt
loope
mov
pop
inc
das
lods
lea
subl
add
test
mov
mov
push
add
int3
pop
sahf
std
pop
mov
mov
sub
ds
pop
pop
mov
inc
mov
lods
mov
lahf
xor
addr16
cmpsl
sub
ja
repz
push
add
test
mov
push
cld
cmp
inc
or
je
mov
in
push
mov
or
out
insl
adc
jnp
dec
dec
or
sub
popa
xchg
and
ss
mov
jg
leave
lahf
cmp
cmpsl
mov
xchg
xor
mov
mov
adcb
cmc
pusha
mov
cmpsl
mov
std
or
out
loop
sub
xchg
cmp
test
adc
xchg
sbb
cltd
loop,pt
and
push
js
inc
stos
out
test
loopne
lods
cmp
jmp
dec
ret
gs
add
pop
pusha
testl
pop
push
clc
dec
inc
pop
mov
dec
adc
or
cli
push
sahf
push
roll
rorl
mov
pop
push
in
outsb
jecxz
std
pop
mov
mov
stos
cs
mov
cltd
cmp
pop
add
pop
repz
into
xchg
bound
mov
fwait
les
pop
mov
mov
loop
xor
sub
cmp
inc
or
mov
shll
xor
push
mov
jl
out
sbb
pop
insl
xchg
cmp
sub
loopne
jb
adc
sub
gs
push
pop
dec
xor
or
cmpsl
stc
pop
push
cs
and
xor
xor
andl
int3
xchg
sbb
fdivrl
icebp
push
xor
lds
mov
pop
incl
sar
pop
jl
out
jae
outsl
dec
psubw
scas
test
lcall
xchg
jp
jp
cs
imul
scas
mov
fiaddl
ljmp
int3
or
jge
outsl
repz
or
cmpsb
mov
in
sbb
lea
into
mov
sbb
cli
push
sub
jmp
lock
out
jmp
push
iret
jb
insl
adcl
mov
mov
jle
aad
cmpsb
xor
rorl
pop
out
out
jg
test
jmp
scas
pop
cwtl
pop
add
aam
nop
or
adc
xor
test
inc
pop
add
notb
mov
scas
inc
ja
pop
mov
pushf
cmp
mov
mov
push
pop
sub
push
mov
mov
les
add
pop
sub
into
add
imul
pop
aaa
or
jne
cmpsb
push
mov
adc
xor
in
out
fwait
ds
xor
movsb
push
sbb
int3
sbb
arpl
xchg
sbb
outsl
push
into
rorb
adc
inc
xchg
inc
and
cmp
fnstcw
sub
lods
movsl
into
lods
sub
mov
jecxz
fmuls
or
gs
mov
mov
push
mov
lods
push
push
sub
or
or
test
in
sub
outsb
xor
rorb
rclb
popa
pop
cld
pop
daa
jle
gs
jbe
cmpsl
in
test
sbb
xchg
in
inc
fistpl
mov
out
push
int
push
rorl
inc
sbb
jno
pop
push
mov
push
ret
dec
adc
sub
faddl
test
cmpsb
stc
aam
mov
out
mulb
test
mov
movsl
and
push
clc
pop
cmp
xor
sub
push
inc
test
data16
sar
popf
sub
test
aam
insb
repz
add
call
pop
mov
inc
pop
fsubl
push
cli
pushf
jne
sti
out
jb
out
fildl
xor
daa
cmpsl
push
cmc
lea
mov
mov
cmpsl
push
add
dec
adc
lcall
aam
mov
insl
add
dec
or
pop
cmp
cmp
scas
hlt
sbb
jbe
fdivl
inc
add
js
dec
adc
imul
xchg
mov
lcall
in
push
fstpt
add
bound
and
out
mov
jle
push
jmp
imul
and
mov
mov
cs
insb
adc
dec
push
mov
test
adc
fnstenv
rolb
ffreep
les
xchg
add
jmp
jmp
adc
pop
sti
add
mov
out
lahf
cmp
jno
and
mov
or
add
mov
lcall
arpl
mulb
push
pop
call
and
subl
cltd
roll
dec
lret
inc
popf
nop
cmp
xchg
or
addr16
add
mov
xchg
movsl
mov
xor
xor
or
ja
push
mov
pop
rclb
dec
push
mov
jg
mov
sub
lods
daa
aaa
jl
iret
cmp
xchg
fldt
cmp
xor
mov
fldenv
fs
mov
mov
push
lods
pushf
adc
cmpsl
into
imul
fsub
repnz
or
xchg
cmp
adc
test
or
out
jns
jg
loop
cmpsb
daa
mov
mov
in
icebp
ds
cli
loope
sbb
jae
hlt
arpl
insb
push
add
enter
es
add
jle
mov
pusha
outsb
ja
dec
jl
test
xchg
es
cmpsb
das
loopne
push
jl
or
push
dec
push
jnp
nop
mov
ja
xchg
into
xchg
dec
mov
imul
sbb
popa
popa
dec
cli
pop
cmp
je
sti
lea
pop
insl
pop
cli
or
scas
jno
push
add
pop
mov
jg
and
inc
mov
push
push
mov
mov
test
pop
xorb
xchg
and
push
add
cmp
popf
mov
mov
sub
cmp
imull
hlt
bound
inc
xlat
movsb
loope
adcb
push
into
repnz
add
or
sbb
dec
mov
leave
cmp
jb
push
std
mov
mov
jbe
push
sub
add
int3
aaa
push
jecxz
push
and
jmp
xchg
je
lret
popa
xchg
cmp
and
into
in
adc
cmp
pop
cs
or
mov
add
sarb
sbb
hlt
into
mov
ds
ret
aas
stc
push
sub
mov
mov
dec
or
sbb
adc
loop
pop
rcll
bnd
push
mov
mov
bound
xchg
or
dec
std
mov
mov
pop
add
lcall
mov
sbb
cwtl
inc
adc
in
jno
inc
sub
push
lahf
dec
lock
xchg
leave
inc
adc
and
gs
pop
loop
sbb
dec
add
pop
cmpsb
pop
add
inc
mov
or
dec
push
inc
adc
jb
add
sub
mov
xor
mov
sbb
lret
popa
icebp
or
adcb
sub
and
and
pop
mov
sbb
repnz
add
dec
lock
pop
ret
rolb
inc
pop
data16
pop
popf
or
dec
test
lret
leave
mov
fidivrl
jp
daa
in
orl
pop
fisubs
xchg
dec
mov
inc
adc
scas
roll
adc
sub
push
jbe
ss
mov
pop
push
xor
fimull
adc
aam
sub
jecxz
mov
hlt
test
xchg
xchg
aam
xchg
inc
arpl
roll
xchg
and
mov
cwtl
and
xor
inc
dec
imul
sahf
int
mov
movsl
xor
inc
sbb
ds
sub
xor
jle
sbb
xchg
sub
iret
pop
mov
mov
stc
hlt
or
jnp
sarl
push
dec
push
hlt
push
popa
inc
psrlq
int3
jbe
dec
sub
ds
mov
jns
dec
psrld
mov
rorl
jp
xor
lcall
ja
lods
sti
test
repnz
push
addb
aad
sub
lods
das
lods
xchg
in
adcb
lea
js
mov
xchg
cwtl
shr
push
dec
or
test
test
cmp
push
roll
mov
movsl
daa
mov
mov
mov
scas
int3
mov
leave
icebp
mov
sub
mov
dec
mov
scas
in
lcall
loopne
orl
test
mov
cli
xchg
xor
and
fadds
xor
mov
and
stos
inc
mov
jg
stc
jge
push
cmp
aas
lahf
cmpsb
cs
iretw
mov
mov
pop
aad
into
out
ljmp
ficompl
int3
lea
leave
rclb
addl
mov
mov
xor
lods
adcl
mov
jne
lret
lea
mov
in
ds
inc
mov
mov
inc
adc
adcl
and
aad
inc
fcoms
les
mov
or
movsl
sub
sbbb
dec
call
mov
mov
or
mov
mov
pop
in
push
and
xlat
jp
xchg
mov
mov
sub
lods
push
or
adc
pushf
cmp
fs
cmp
sub
jo
lea
into
rorl
stc
push
inc
mov
pop
or
xchg
inc
pop
sub
jp
mov
pop
clc
outsb
out
pop
xchg
test
mov
jmp
mov
jp
test
push
add
mov
fs
ror
mov
iret
aaa
mov
stos
sbb
cmp
out
sahf
cmp
incl
je
test
inc
adc
xchg
sub
out
out
int3
mov
icebp
push
push
xor
out
and
dec
mov
sbb
enter
negl
add
addl
xor
imul
push
lret
push
clc
xor
jmp
shll
jmp
shlb
stos
inc
adc
not
lcall
int3
sbb
icebp
push
leave
dec
dec
pop
push
cwtl
xor
and
imul
aad
test
push
jmp
mov
mov
xchg
test
cld
inc
lds
lcall
sahf
aas
pop
push
push
std
insb
push
push
jl
sub
fdivs
mov
cmpsl
stos
cld
sub
pushf
jno
push
push
shrb
pop
loop
push
xor
into
popa
bound
xchg
xchg
addb
xor
xchg
and
mov
jecxz
scas
cli
mov
sahf
adc
jbe
mov
test
or
aad
cmp
movsb
xchg
mov
scas
cs
rorb
test
dec
cmp
outsl
out
enter
sbb
mov
sub
dec
out
xor
pop
not
addb
pop
clc
pop
pop
dec
or
and
dec
push
ret
xchg
pop
cltd
stc
push
test
sub
popa
sbb
ret
nop
cmpsl
inc
mov
mov
out
leave
mov
stos
sub
mov
pusha
sub
imul
inc
les
inc
jbe
jne
dec
adc
xchg
movl
popa
pop
mov
inc
jno
sbb
in
jbe
jbe
mov
stos
xor
in
adc
popa
add
int3
fidivs
adc
fucomp
jb
lea
mov
test
pushf
lcall
lcall
dec
int
jecxz
popf
push
cli
mov
jne
fcompl
jnp
dec
out
outsb
jno
or
lds
push
and
sbb
dec
or
inc
les
jge
in
addr16
bound
call
stc
jnp
sub
mov
fs
insb
mov
xor
loopne
inc
sbb
mov
adc
pusha
lcall
lock
cmpsb
xor
cmpsl
xor
je
xor
aad
arpl
xor
es
and
inc
imul
sub
aas
outsb
testb
test
push
test
jnp
mov
nop
mov
inc
mov
stos
xor
adc
xor
hlt
inc
xor
mov
leave
fadd
fnstsw
push
and
cli
scas
repz
pop
cs
test
out
or
bswap
push
push
lea
mov
mov
push
je
inc
stc
mov
xchg
movsl
sub
or
sbb
push
sub
mov
mov
adc
inc
xchg
ds
and
les
in
inc
insb
cmp
addr16
and
dec
je
inc
fstps
and
aam
fiaddl
mov
jae
and
out
jo
xor
mov
stos
test
fisubs
lahf
aas
jmp
repnz
lahf
movsl
xor
mov
jmp
inc
sti
jle
pusha
popf
rclb
and
rcll
shlb
scas
mov
push
shll
mov
jge
inc
repz
std
fs
jecxz
out
jnp
repnz
cmp
std
pop
adc
jmp
into
jge
pop
mov
adc
ret
rorl
pop
call
fs
xor
ja
addr16
cltd
inc
mov
lods
addr16
inc
jb
jle
fwait
inc
pusha
imul
jne
inc
pop
xchg
fiaddl
xchg
cmpsb
or
push
lds
test
adc
sub
mov
nop
cmp
movsb
jo
jae
jno
push
pop
add
orb
mov
sarl
pushf
cli
popf
lcall
loop
dec
adc
imul
test
imul
mov
fadds
add
outsl
std
push
into
xchg
js
lcall
outsl
and
popf
hlt
into
mov
lds
arpl
in
inc
jp
decb
mov
mov
loope
mov
jno
pop
cli
mov
sub
aam
orl
pop
dec
or
fcoml
mov
add
lret
ds
pop
in
je
lock
lds
loopne
pop
insb
stc
orb
inc
or
lret
lods
iret
xchg
cmp
shrb
insb
fimuls
rolb
bound
loopne
imull
pop
lds
add
push
push
imull
dec
mov
iret
mov
movsl
dec
pop
pop
in
lahf
push
cmpb
inc
pop
ret
dec
pop
pop
lret
fiadds
jmp
inc
aad
lret
inc
inc
sbb
mov
lahf
aaa
mov
xlat
lods
adcb
mov
mov
push
push
lcall
and
or
sub
inc
or
test
sbb
ds
dec
scas
xor
in
insb
clc
jns
adc
add
jno
add
clc
gs
push
aas
mov
mov
lods
sbb
clc
rclb
lock
sarl
lcall
and
bswap
jne
inc
adc
outsb
pop
clc
cmp
rolb
rol
inc
add
in
scas
pop
add
loope
insb
in
jae
les
jg
rolb
outsb
imul
ja
lret
shlb
rclb
add
or
mov
pop
rolb
pop
mov
cmpsl
ds
cmc
jecxz
stos
lahf
out
jne
mov
hlt
pop
nopl
es
out
jne
out
adc
sbb
jnp
fmull
add
pop
add
push
test
inc
sbb
aad
adc
in
js
or
dec
jne
mov
ss
les
scas
fisubl
or
pop
jae
dec
adc
fs
push
mov
sub
fcomi
pop
jge
cs
outsl
dec
adc
push
mov
lock
movsb
adc
cmp
inc
shll
jns
aaa
enter
add
out
movhps
imul
arpl
jecxz,pn
push
mov
mov
je
filds
lock
arpl
gs
test
add
jne
xor
and
add
gs
fwait
push
ret
jne
repz
imul
add
gs
sbb
pop
add
fnstenv
cmpsl
cmp
jne
gs
sbb
jbe
dec
sbb
pushf
ljmp
mov
mov
inc
adc
cmp
mov
ja
xor
mov
test
loopne
in
pop
cmp
fdivs
or
xchg
sub
ds
inc
xchg
stos
xor
cwtl
jmp
sub
mov
enter
lds
dec
mov
les
fs
jp
mov
pop
shrl
das
scas
cs
add
or
call
cmc
cltd
cmp
pop
mov
ret
pusha
in
adcl
push
mov
negl
loopne
xchg
and
aad
mov
or
outsl
out
aas
popa
jmp
cld
sarb
or
mov
cmp
push
clc
pop
jnp
movsb
inc
xchg
out
mov
add
test
scas
daa
pop
jp
orl
and
inc
cltd
inc
cmp
testl
test
jg
ljmp
add
sbb
popf
aaa
dec
daa
test
and
out
xchg
jae
jno
int3
adcl
push
mov
sub
sub
xchg
cmp
ret
sub
seto
fisubrl
and
or
add
fiadds
jge
cmp
pop
les
sub
dec
cs
cmpsb
sahf
adc
inc
dec
insb
icebp
mov
sub
ljmp
aad
in
jp
movsl
mov
mov
mov
insl
out
in
mov
jb
loopne
jne
out
sti
pop
xor
mov
cs
mov
adc
xchg
pusha
repnz
pop
cmpsb
sahf
cmp
ret
data16
pop
cmp
and
push
mov
clc
jae
jns
jmp
repz
and
int
cmp
jno
push
mov
ss
out
insb
cmp
jmp
dec
fst
outsl
jmp
xchg
push
fsubl
mov
lret
jmp
sbb
jne
lods
mov
adc
mov
cs
jp
push
mov
jmp
mov
xchg
cmp
xor
or
mov
popa
mov
stos
out
jnp
addb
mov
push
popf
xor
mov
fwait
cmp
movsl
or
pop
in
mov
movsl
add
push
sub
xchg
inc
fadds
daa
push
test
ret
dec
and
jp
mov
inc
or
mov
test
pop
push
push
imul
mov
mov
sti
lret
xchg
xchg
add
and
cltd
aaa
xor
hlt
cld
sub
andb
lret
cmp
jae
dec
pop
les
lret
mov
dec
imul
repnz
leave
fadds
out
adc
movb
pusha
outsb
into
jmp
jae
notl
gs
cmpxchg
fistpll
stos
mulb
mov
add
mov
mov
cmpsb
xor
push
xor
push
outsb
pusha
insl
out
push
jne
pop
xor
xor
mov
lods
sub
sub
sub
xor
lcall
icebp
fs
test
mov
mov
sub
mov
movsb
push
add
stos
lods
sub
adc
mov
inc
add
gs
hlt
fstpt
mov
xchg
inc
pusha
lods
icebp
data16
mov
inc
sbb
mov
roll
loope
daa
adc
xchg
mov
fnstcw
scas
add
testb
push
shl
sub
and
xchg
outsl
cmc
test
lret
mov
addl
orl
je
sbb
int
mov
and
jl
jmp
into
xchg
leave
setge
push
and
arpl
in
fdivrs
ljmp
cmpsl
sub
addr16
adc
fisttpll
sbb
jg
lea
push
lds
rcrl
xor
and
push
iret
stc
gs
nop
ds
xchg
cmp
mov
xchg
cmp
xchg
push
cld
xchg
loop
negb
jg
incl
dec
test
adcl
or
xor
repnz
lahf
mov
adc
ret
jae
sbb
pop
shlb
lods
sub
or
pop
jnp
popf
cmp
arpl
outsb
xor
sub
icebp
bound
adcl
inc
push
add
fidivrl
popl
rcl
xchg
adc
dec
or
js
cltd
scas
sub
cmp
je
add
sub
jle
jbe
mov
mov
add
rorb
lcall
sub
addr16
sub
and
lods
inc
jns
sub
cmp
das
mov
and
cmp
sub
rcrb
into
mov
lahf
cmp
sub
test
lret
mov
in
fstpt
cltd
shll
ljmp
push
cld
xchg
mov
push
lret
out
pop
sub
xchg
lea
adc
ss
in
xor
dec
mov
test
push
add
mov
dec
test
mov
int3
xchg
aas
mov
in
pop
fidivrs
hlt
fbstp
and
xchg
push
dec
jno
sbb
add
sub
ds
int
inc
push
ret
dec
pop
adc
shll
sbb
test
mov
pop
push
sbb
negb
iret
addl
pop
loop
add
aad
push
jnp
stos
pushf
in
jne
sarl
movsb
mov
ret
xchg
jg
pop
ja
dec
add
adc
add
mov
pop
test
stc
addr16
pop
in
je
rorl
cli
inc
or
mov
sbbb
push
std
xchg
aas
cltd
mov
movsl
cltd
sbb
lds
sub
jns
cmp
dec
jmp
adc
xchg
nop
inc
sub
lret
xor
adc
inc
mov
add
clc
pop
xchg
adc
push
mov
adc
sub
xor
mov
push
cmp
xchg
push
lcall
push
lahf
inc
cmp
fldl
push
mov
popa
aas
push
and
mov
push
out
outsl
cs
pop
std
cmp
movsl
pop
out
pop
cli
and
cmpsb
xchg
cmp
stc
xor
sbb
je
je
xchg
insl
add
sbb
and
in
fnstsw
lcall
cmp
sbb
sub
cltd
inc
sub
imul
ret
in
mov
mov
mov
mov
push
sahf
jno
orl
push
fists
fbld
int
jle
add
mov
in
pop
roll
mov
sub
ljmp
push
adc
inc
test
mov
mov
xchg
or
mov
mov
mov
std
in
jbe
jns
mov
into
imul
sbb
faddl
and
add
sub
insb
testb
cmp
xchg
test
out
fidivrl
and
jns
mov
rcll
loop
mov
inc
add
jge
addr16
cltd
push
add
xchg
and
ds
inc
xlat
sub
xchg
dec
pop
cmc
jge
dec
in
sahf
jl
rolb
add
icebp
lcall
inc
mov
aas
fstl
pop
xor
hlt
mov
adc
nop
xor
shl
mov
jecxz
in
dec
ds
xor
pop
repz
mov
mov
fsubrl
das
je
pop
popa
xchg
mov
movl
add
outsb
sub
mov
adc
stos
loope
lds
int
repz
xor
pop
jnp
push
test
mov
cltd
xor
mov
clc
sub
insl
dec
jle
pop
mov
hlt
mov
rclb
icebp
and
xchg
push
adc
enter
mov
fs
out
enter
mov
add
sbb
dec
or
sahf
pop
stos
inc
mov
enter
mov
inc
add
jle
gs
xchg
push
add
mov
cmpsl
and
cmp
inc
fsubrs
pop
das
dec
pop
idivb
in
popf
jge
iret
add
lock
xor
push
mov
mov
push
jne
test
fistl
pop
cs
cmpb
cltd
aam
xor
shl
mov
loop
out
dec
ds
xor
add
lcall
mov
fldt
das
jb
pop
pusha
xchg
mov
lds
aam
sbb
add
insb
daa
and
mov
fildll
lds
int3
pop
hlt
std
xor
push
jl
push
subl
jno
xor
lds
cmp
dec
jl
pop
scas
imul
popf
iret
loop
add
add
inc
je
mov
arpl
xchg
cmp
divl
pop
repnz
or
adc
xchg
cs
scas
leave
pusha
loopne
mov
inc
add
jg
arpl
imul
repnz
cmpsb
and
xlat
or
test
clc
inc
fldcw
pop
das
lea
idivl
dec
in
pushf
jle
into
add
out
pushf
xor
push
mov
xchg
push
je
test
fsts
pop
sub
testb
cmp
stos
insl
mov
xor
mov
loope
out
inc
ds
xor
gs
pop
repz
xchg
sbb
stos
inc
or
cwtl
das
jo
enter
mov
ret
and
mov
aam
push
aam
fwait
add
and
mov
lds
lret
pop
cmc
cld
das
dec
jecxz
sbb
push
mov
fwait
xor
les
cmp
dec
jp
pop
lods
push
lea
adc
out
and
cwtl
push
rdpmc
lret
pop
mov
popa
push
call
cmc
mov
push
in
pop
repz
push
mov
lcall
das
in
lods
lret
push
mov
inc
call
insb
xchg
push
push
popf
xorl
mov
cmp
inc
fldenv
pop
xor
mov
idivl
dec
in
lcall
xor
pushf
xor
push
mov
test
push
jae
test
fcoms
pop
sub
testb
cmp
insb
mov
xor
mov
loopne
out
inc
ds
xor
fs
pop
repz
mov
jp
sbb
stos
inc
or
enter
mov
ret
jge
jecxz
imul
repnz
and
mov
fsubrl
lds
cs
jecxz
sbb
adc
subb
outsl
fwait
xor
ret
mov
cmp
dec
jns
pop
stos
imul
jns
mov
add
aas
jno
mov
pusha
push
call
hlt
mov
push
in
pop
repz
add
jp
cltd
pop
lods
inc
mov
lret
or
call
insb
xchg
push
push
popf
xorb
aam
adc
es
xor
mov
idivl
dec
in
cltd
jle
lret
insb
add
in
pushf
xor
push
mov
test
push
jb
test
xlat
xchg
fsubrs
clc
pop
sub
testb
cmp
imul
leave
mov
fists
adc
jne
outsb
add
movl
inc
or
das
outsb
sub
pop
pop
mov
sarl
mov
aam
adc
add
add
repnz
and
mov
fldt
lds
pop
cmc
cli
sub
jge
dec
jg
add
rorb
push
hlt
and
fsubrs
js
pop
stos
push
loop
std
mov
add
jo,pt
mov
pop
push
call
repz
push
jecxz
pop
repz
add
and
cwtl
push
lods
inc
mov
lret
or
dec
ds
call
insb
xchg
push
push
popf
xorl
adc
and
inc
pusha
divl
dec
in
cwtl
jle
lret
add
in
pushf
xor
push
mov
cmpl
push
jno
test
xchg
fsubrs
test
lea
dec
in
jge
adc
push
add
mov
ficoms
cmovae
aad
xor
bound
mov
mov
jp
sbb
stos
inc
or
cwtl
das
insl
sub
pop
pop
mov
jge
loope
imul
add
add
and
mov
fisubrl
lds
enter
sub
jecxz
sbb
dec
jle
add
rorl
push
repz
cmp
inc
ja
pop
test
lret
cld
mov
add
cmp
pop
push
call
repnz
push
loop
pop
repz
add
adc
mov
lret
or
jg
pop
aad
xchg
dec
push
popf
xorb
mov
ss
fldenv
xor
mov
divl
dec
in
xchg
jle
leave
cld
insb
add
jmp
xor
ds
aas
aad
fsubrs
test
sub
testb
cmp
imul
and
push
inc
ds
das
outsb
add
lds
jp
sbb
stos
inc
or
cwtl
das
insb
sub
pop
pop
lea
jge
loopne
imul
add
add
mov
and
mov
fldcw
lds
pop
cmc
clc
sub
sbb
dec
jge
add
rorb
push
repnz
outsl
inc
jbe
pop
test
testb
mov
add
cmp
pop
mov
pop
push
call
icebp
scas
outsl
push
loope
pop
repz
add
adc
mov
das
jmp
or
jg
pop
aad
nop
dec
push
popf
jg
repz
mov
adc
and
mov
jne
dec
in
xchg
jle
enter
sub
dec
mov
cmpl
fsubrs
cmc
pop
daa
in
lea
dec
in
jnp
adc
push
mov
leave
mov
fcoml
or
outsb
add
les
jp
pop
aad
inc
pop
cmp
pop
pop
mov
jge
imul
add
add
repnz
and
mov
inc
xlat
movsb
fsubrs
lds
pop
cmc
imull
dec
jecxz
sbb
dec
jl
add
iret
mov
add
cmpsb
cmp
inc
jne
pop
cmpsl
testb
mov
add
cmp
mov
pop
push
call
lock
outsl
push
loopne
pop
repz
add
adc
mov
das
call
or
jg
pop
aad
dec
push
popf
jle
repz
lahf
and
rolb
adc
and
movl
xchg
jle
cli
insb
add
pushf
xor
dec
mov
cmpb
outsb
mov
fsubrs
hlt
pop
es
lea
ss
addr16
add
mov
fistl
or
ds
sub
pop
repz
orb
aam
inc
push
cmp
pop
pop
mov
jge
imul
add
pushl
repnz
and
mov
inc
fsubs
lds
imulb
dec
jecxz
pop
jle
dec
jp
add
mov
mov
cmpsl
ds
adc
jo
jae
pop
movsl
arpl
mov
mov
lods
out
add
cmp
mov
pop
push
jmp
out
lods
jo
fimuls
pop
hlt
inc
decl
adc
cltd
xor
movsl
lret
or
jg
pop
insl
mov
popf
jl
hlt
mov
popf
and
into
add
stos
xor
inc
fldenv
push
xor
xchg
divl
dec
out
xchg
jle
vpunpckhqdq
out
xor
dec
mov
jg
mov
inc
rorb
pop
and
inc
in
jns
adc
gs
mov
and
or
aas
jo
outsb
add
ret
and
shrb
xor
enter
mov
mov
fst
insb
bswap
add
std
xor
mov
and
mov
inc
fsubs
ret
pop
div
daa
dec
in
adc
imul
push
mov
mov
test
push
push
fnstenv
jb
pop
movsb
popa
testl
in
add
aaa
push
mov
mov
pop
fmull
pop
cmc
aas
std
mov
xchg
push
lods
inc
xorb
aad
mov
jg
pop
xlat
outsb
lea
popf
jp
cmc
mov
fwait
and
int3
add
xor
inc
fstps
push
xor
test
pusha
divl
push
out
xchg
jle
ret
clc
outsb
add
pop
dec
mov
jle
mov
inc
rorl
enter
testb
xor
arpl
xor
mov
and
or
inc
xlat
outsl
sub
pop
nop
pop
cmc
sarl
loop
adc
stos
inc
add
lcall
mov
jge
insl
push
lret
sti
das
hlt
mov
and
mov
inc
fcomps
rcrl
es
in
adc
inc
js
add
lret
mov
std
mov
test
jo
jno
pop
mov
in
divb
add
dec
add
lret
xor
push
push
jmp
in
test
pop
fimull
mov
xchg
dec
lods
inc
xorb
popa
roll
mov
jg
pop
fsubrs
inc
push
popf
js
testb
add
fstps
xor
test
push
call
shl
push
sub
pushf
xor
ss
inc
rorb
leave
pusha
and
testb
xor
popa
cwtl
add
leave
mov
and
push
cmp
outsb
add
sarb
lods
loope
adc
into
stos
inc
add
enter
mov
jge
fcmovnbe
outsb
or
cs
mov
and
mov
inc
fcomps
mov
dec
out
adc
inc
ja
add
fs
xor
mov
push
jmp
or
jo
jo
pop
mov
ret
out
cmc
mov
lods
loope
add
lret
xor
mov
test
jo
fmuls
idivl
pop
jle
xchg
dec
lods
inc
jle
pushf
xor
lahf
lret
add
call
jo
inc
push
popf
jbe
testl
xor
inc
fstps
push
xor
cmpl
insl
movsb
push
call
shl
push
sub
pushf
xor
lea
xor
stos
inc
iret
mov
outsl
mov
fdiv
lea
inc
out
jbe
adc
pusha
xchg
add
leave
mov
and
add
outsb
add
mov
loopne
adc
int
inc
pushl
fwait
xor
leave
pusha
push
xchg
jle
outsb
or
add
mov
and
dec
jg
stos
mov
inc
fstps
pusha
imul
and
push
adc
inc
jne
add
arpl
and
mov
push
call
or
jno
outsb
enter
clc
mov
out
repz
push
lods
loopne
add
int3
xor
mov
test
jno
xlat
or
cmp
sub
adc
jge
pushf
xor
sahf
lret
rolb
mov
andb
fnstenv
inc
pop
sahf
jne
testl
cs
xor
cmpl
push
call
mov
loope
xor
dec
lea
xor
push
data16
stos
inc
int
fnstenv
out
leave
pusha
and
testl
pop
xchg
add
lret
and
add
inc
fsubrs
outsl
push
push
mov
mov
fidivrs
adc
stos
inc
xor
popa
push
test
jg
xlat
xlat
outsb
or
push
popf
imull
cmc
mov
mov
scas
push
ficompl
mov
dec
out
jo
add
bound
and
mov
push
out
stos
inc
dec
or
jb
insb
enter
stc
nop
lea
pop
scas
fists
add
int
and
xorl
or
or
cmp
nop
daa
sub
adc
jl
pushf
xor
popf
int3
arpl
add
andl
inc
or
ficoml
adc
fistpl
dec
xor
jg
stc
imul
pop
mov
loopne
xor
js
mov
inc
lret
xchg
jno
in
leave
pusha
push
or
out
jb
push
lods
pop
xchg
add
lret
mov
and
add
inc
fsubrs
jo
push
mov
mov
fdivrl
push
lret
lods
inc
std
das
fwait
xor
lret
bound
mov
andb
pop
sahf
imulb
cmc
mov
es
lods
imul
mov
push
out
or
outsb
add
xchg
les
in
stos
inc
dec
push
fdivl
push
pusha
pushf
pop
cli
xchg
mov
sbb
inc
ss
arpl
xchg
push
push
jmp
mov
mov
popa
clc
cmp
nop
daa
daa
pop
jg
mov
inc
jp
popf
xor
fwait
int3
arpl
add
and
xchg
lahf
jb
clc
fsts
push
lods
sub
inc
fistl
dec
xor
jle
stc
imul
jo
and
sahf
xor
ja
mov
inc
lret
jno
jmp
popa
sbb
aas
call
lods
pop
xchg
push
popf
ret
jge
lret
scas
in
mov
add
inc
fldcw
jo
push
mov
mov
fstpt
or
cs
xor
lret
bound
mov
andb
pop
sahf
hlt
daa
testb
jp
stos
stos
addr16
fistpl
mov
push
call
cmp
pop
lahf
ss
ret
lea
push
lods
inc
dec
add
jae
imul
xchg
mov
scas
fisttpl
pop
sahf
inc
cld
ss
bound
jmp
mov
mov
stc
aaa
pause
daa
and
inc
scas
inc
js
sahf
xor
lret
mov
sbbl
inc
or
fcoms
push
lods
sub
inc
fistl
dec
xor
jge
stc
push
mov
pop
and
sahf
xor
jbe
mov
inc
leave
sbb
mov
lret
xlat
clc
jg
sub
lods
pop
xchg
push
popf
ret
lret
lods
jecxz
mov
add
inc
fldenv
jo
push
mov
mov
fidivrl
or
lods
inc
cli
sub
lret
bound
mov
andb
pop
sahf
repz
jns
stos
stos
inc
fistl
mov
push
call
cmp
outsl
push
mov
ret
hlt
mov
push
loop
lods
inc
inc
add
jae
push
cli
xchg
mov
sbb
aas
sti
ss
popa
and
jmp
mov
lahf
jb
roll
nop
daa
and
adcb
inc
scas
inc
ja
sahf
xor
lret
push
xor
ljmp
aas
or
xlat
xchg
es
sub
inc
fistl
ss
stc
addr16
push
jmp
mov
fcompl
and
popa
xchg
lods
inc
enter
mov
lret
clc
jg
sub
lods
pop
nop
push
popf
sarl
lods
loop
mov
pushl
fldenv
jno
push
xchg
mov
movsl
fdivrs
or
lods
inc
stc
sub
dec
jle
push
mov
ljmp
rorl
repnz
lea
daa
mov
test
inc
fcoml
mov
cli
call
or
push
lahf
pop
mov
and
scas
mov
inc
inc
add
je
lretw
push
sti
xchg
xchg
sbb
cmp
pop
and
in
jge
inc
sahf
jae
rolb
stc
xor
xchg
sub
push
adcb
inc
scas
inc
jbe
sahf
xor
leave
cld
mov
sbbb
or
aad
daa
mov
daa
jecxz
fcoml
xor
jp
arpl
data16
push
jmp
mov
fistpl
and
pusha
xchg
lods
inc
movb
popa
sbb
stc
nop
pop
cmp
jg
sub
scas
pop
mov
popf
mov
loopne
mov
xor
arpl
jb
push
test
mov
nop
daa
movsb
jle
or
scas
inc
clc
sub
dec
jl
push
scas
insb
jmp
sahf
iret
fsubrs
rorb
icebp
and
lea
mov
cmpsb
fs
fstl
mov
sti
out
push
call
cmp
push
popf
pop
mov
and
scas
mov
inc
inc
add
jne
fs
push
cld
xchg
xchg
sbb
cmp
cmp
sub
mov
jl
inc
popf
je
iret
add
xor
xchg
sub
push
adcb
inc
mov
jne
sahf
xor
enter
sub
in
sbbl
jno
cmp
clc
rorl
push
lods
and
inc
xor
js
fs
gs
push
jmp
push
out
lret
lret
xor
mov
or
lds
movsb
shrl
inc
add
jmp
inc
mov
dec
aam
call
sub
ror
repz
pop
sbb
fcomi
nop
daa
dec
mov
leave
mov
mov
insl
aas
daa
js
add
int
cmpsb
dec
or
mov
jp
mov
cmp
adc
mov
dec
sub
cmp
add
pop
ret
faddp
jbe
push
ret
sbb
dec
insb
xlat
jle
test
imul
test
loope
cmpsl
or
sub
mov
mov
mov
aas
adc
or
or
cmpsl
iret
and
jmp
fcomps
jae
push
or
iret
sbb
cld
das
pop
push
loope
xchg
push
mov
out
and
aam
xchg
aam
leave
sbb
sub
movsl
xchg
dec
sbb
pop
push
push
je
je
mov
and
mov
or
cmc
loop
xchg
lods
push
mov
sahf
orb
xchg
lahf
adc
adc
xchg
ljmp
cld
in
sar
cmp
outsl
mov
imul
mov
leavew
pop
lods
hlt
inc
cmpsl
inc
xor
sub
repnz
cwtl
insl
pop
sub
cmp
aaa
mov
add
fidivrl
nop
add
insl
arpl
push
adc
popf
stos
mov
outsb
adc
xlat
sub
mov
popf
and
add
ret
imul
xor
add
cs
adc
hlt
and
adc
mov
ficoms
and
dec
outsl
dec
pop
aad
mov
jg
mov
js
roll
push
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
lea
adc
jb
test
xchg
rcrl
xchg
lock
mov
push
jno
add
imul
call
data16
sbb
and
xchg
ret
jp
outsl
test
nop
jno
mov
pop
jbe
mov
mov
mov
push
lods
test
cld
ds
xchg
ret
shll
push
push
jbe
pop
mov
das
std
or
or
sti
int3
jnp
push
movb
sarb
xchg
insb
mov
clc
jno
jp
outsb
out
xor
mov
and
cmp
xorl
jnp
mov
shll
popf
test
bound
mov
or
cld
in
jl
daa
add
jmp
fs
ljmp
mov
dec
cmp
or
mov
int3
mov
xorl
or
test
sub
imul
push
push
jle
xchg
or
in
add
mov
scas
cmp
popa
cmp
mov
iret
lock
push
orw
and
jg
stc
fdivrs
sub
in
clc
pusha
xor
mov
out
push
adc
lcall
stos
cwtl
sub
hlt
mov
xor
cli
sub
mov
xchg
dec
lret
pop
xor
mov
pop
jge
xchg
mov
mov
popf
xor
jno
test
addl
sbb
daa
adc
mov
bound
jne
mov
inc
jb
sub
in
cmp
clc
ret
cli
xchg
cmc
inc
add
cmc
pop
hlt
bound
out
ja
cmp
out
push
xor
pop
add
push
popa
mov
mov
adc
cmp
test
sbb
cmp
shl
pop
inc
in
pop
push
popf
aaa
sbb
mov
in
adc
cmpsb
dec
xor
mov
scas
dec
push
mov
or
icebp
and
adc
cmpb
inc
cld
aad
inc
and
imul
fwait
icebp
adc
dec
xor
mov
xor
mov
xor
or
xchg
iret
cltd
mov
sbb
jae
push
sbb
jecxz
sub
outsb
aad
push
fisubrs
fcompl
xor
jle
rcr
jle
dec
xchg
jne
xchg
mov
call
mov
xor
and
sti
xor
sub
cltd
xchg
cmpsl
stos
shlb
lock
negb
pusha
aad
mov
mov
mov
jne
dec
test
out
adc
icebp
adc
loope
xchg
or
pop
add
dec
mov
pop
cmp
mov
mov
aam
pop
inc
xor
sbb
mov
mov
xor
js
xchg
movsl
stc
jmp
pop
test
jmp
lret
scas
cwtl
insl
mov
popf
adc
push
movsl
cwtl
cmp
addr16
fwait
jb
dec
mov
jb
push
or
fdiv
push
and
adc
insl
clc
or
jo
repnz
nop
xchg
leave
aaa
js
rolb
stos
inc
lret
call
or
jp
inc
mov
std
in
inc
or
xor
cmp
in
hlt
fs
daa
jmp
call
and
outsb
call
pushf
pop
sbb
js
add
fistpl
das
aad
mov
clc
inc
adc
out
mov
cmp
sub
jle
sub
mov
insb
add
mov
pop
int
push
push
pop
mov
notl
mov
push
mov
aad
cmp
bnd
lea
inc
lret
shrl
mov
icebp
scas
sbb
fnstcw
pop
mov
pop
cltd
scas
or
jnp
pop
push
hlt
or
push
bound
lods
push
repz
pop
ja
gs
hlt
sub
sub
inc
xchg
xchg
pop
es
sbb
daa
and
dec
mov
pop
std
js
push
sbb
scas
inc
iret
cmpsb
lret
or
loop
xor
aam
ret
pop
movsb
cmp
jae
aam
sbb
inc
mov
fstpl
add
mov
inc
je
arpl
int
ret
nop
xchg
test
aas
xchg
fwait
mov
out
dec
inc
adc
fsub
adc
movsl
pop
add
aaa
push
adc
enter
add
cmp
adc
out
shlb
cmpsl
dec
push
pop
sarb
lock
cld
nop
mov
pusha
outsl
xchg
lahf
lock
daa
jno
into
mov
scas
fisubl
push
lahf
outsl
xchg
pusha
scas
or
mov
lcall
pusha
cmc
sub
and
jle
test
iret
cmpsl
mov
add
push
in
add
pushf
insl
mov
pop
mov
stos
lods
jbe
repz
imul
sarl
adc
lahf
bound
in
mov
pop
jecxz
insl
in
sub
fdivs
cs
push
push
scas
stc
pusha
sub
mov
dec
push
pop
adc
aaa
or
xchg
test
lret
lcall
js
inc
push
push
pop
push
push
add
or
addr16
or
sti
lahf
dec
addl
loopne
add
mov
fcoml
enter
int3
ss
sbb
clc
testl
push
dec
mov
fidivrl
enter
push
imul
rolb
mov
dec
pop
fcompl
xchg
pop
jns
mov
movsl
push
loopne
sub
mov
sahf
rolb
mov
dec
mov
dec
pop
xor
jg
repz
or
daa
jp
pop
test
idivb
ss
pop
mov
test
in
mov
paddusw
cmp
dec
and
jle
ljmp
jmp
push
push
fisttpll
in
daa
pop
cmpsb
ret
leave
dec
jb
cmp
pop
mov
gs
daa
lcall
loopne
into
mov
pop
mov
daa
in
dec
adc
or
mov
mov
inc
daa
lret
pop
pop
xor
std
sub
pop
lcall
popa
cmp
hlt
imul
in
or
hlt
lret
and
cmp
jle
test
adc
nop
xchg
jo
sub
cmp
mov
mov
jge
fidivrl
shrb
repnz
sar
aaa
repnz
in
xchg
sub
or
add
cmpsb
xorb
test
mov
mov
jge
stos
xorb
lods
test
push
sub
inc
bound
popa
push
test
in
jae
cmp
andb
loop
negl
add
jge
pop
mov
or
int3
insl
cmp
sub
punpcklwd
lods
xor
andl
cmp
fisttps
aaa
cmp
leave
cmp
rcll
sub
dec
fdivs
cmc
mov
jle
dec
les
push
les
pop
shlb
insb
loopne
orl
rdmsr
push
sub
mov
jb
into
mov
mov
rorl
jle
stc
pop
or
pop
movb
jge
lock
add
leave
xchg
mov
add
dec
adc
push
shll
jmp
loop
adc
vmwrite
lahf
fmuls
xor
fisubl
inc
mov
push
pop
jle
xchg
jne
popf
push
mov
test
lcall
pop
mov
pop
pop
icebp
leave
pop
andl
and
mov
addb
popa
pop
lahf
add
push
cmp
xlat
ret
mov
orb
dec
push
push
imul
inc
sahf
lds
stos
and
pop
dec
in
es
cmpb
xchg
out
adc
imul
and
int
cs
mov
cwtl
xor
ljmp
repz
jg
cmp
cmp
cli
jne
mov
je
iret
inc
mov
int3
xchg
jbe
loopne
and
out
sti
jo,pn
jecxz
xchg
stc
mov
mov
push
sub
pushf
in
subb
pusha
inc
imul
inc
movb
shrb
call
into
sub
dec
pop
adc
add
fcmovnu
mov
cmp
cmc
jnp
add
imul
sbb
test
addl
cmp
mov
adc
and
fmull
cmp
testl
