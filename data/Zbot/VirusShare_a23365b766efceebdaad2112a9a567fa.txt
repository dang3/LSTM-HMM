cmp
sub
add
or
add
add
and
adc
mov
addb
loopne
add
push
rclb
add
add
inc
adc
add
addb
and
inc
dec
add
add
or
andb
add
aad
add
add
xorl
add
or
add
push
add
and
or
mov
inc
add
adc
or
cmp
mov
add
xorb
mov
and
adc
add
fmuls
add
inc
inc
daa
and
add
and
add
cwtl
add
movsb
add
add
or
rolb
add
or
inc
add
dec
or
or
inc
sub
add
xor
bound
and
mov
addl
inc
nop
dec
and
inc
dec
add
sbb
add
or
pop
mov
xor
dec
mov
nop
or
add
mov
mov
or
add
add
add
or
orb
push
add
add
adc
push
and
adc
int3
mov
adcb
add
inc
dec
adc
adc
and
or
mov
adc
adcb
loop
dec
add
add
and
inc
arpl
sub
or
inc
and
dec
or
dec
and
add
sub
test
adc
push
add
or
nop
sub
test
inc
fwait
or
dec
andl
pop
xchg
push
dec
add
adc
add
jo
xchg
dec
mov
or
inc
add
add
inc
push
add
and
movsb
popa
and
sub
and
lds
add
and
or
push
and
sub
push
add
push
bound
mov
inc
or
add
shlb
aad
add
add
push
inc
push
push
dec
lds
lea
add
sbb
adc
and
bound
loopne
add
inc
add
and
add
add
in
adc
and
push
addb
or
and
add
and
sbb
xor
push
and
js
and
add
rolb
adc
inc
add
and
xchg
add
add
add
adcb
add
adc
add
or
sub
sbb
mov
dec
aam
push
mov
and
add
and
inc
or
add
xor
and
test
xor
dec
mov
dec
andb
sub
xorb
add
inc
add
and
pop
push
add
add
cmp
test
addb
or
add
pusha
or
andb
and
sbb
cmp
daa
test
add
and
add
add
push
subb
cmp
add
or
movsb
or
add
js
ret
add
xor
mov
and
mov
adc
add
push
adc
push
add
add
and
orb
or
adcb
push
loopne
add
adcb
mov
test
add
add
push
orb
roll
inc
movsb
sub
and
add
jb
xchg
add
push
add
xchg
xor
xchg
subb
add
fsub
push
mov
or
rclb
xchg
cmp
add
dec
dec
or
or
add
pushf
inc
test
inc
test
or
add
add
test
andl
loope
add
data16
test
mov
orb
push
pop
ficoms
and
or
xchg
addb
add
add
push
add
add
inc
adc
and
xchg
pop
inc
insl
enter
enter
inc
push
mov
mov
stos
add
add
enter
adc
xchg
add
xor
pop
loope
dec
xor
roll
sbb
add
add
add
add
xor
test
roll
les
push
or
add
add
adc
daa
or
rolb
or
xor
add
inc
add
add
enter
mov
insb
adc
add
test
add
addb
xor
add
add
inc
mov
add
stos
cltd
popa
adc
dec
adcb
jno
add
push
or
jo
adc
sub
xchg
and
adcb
mov
add
push
dec
adc
and
sub
add
test
bound
or
sbbb
adc
adc
sbb
pusha
xor
pusha
addb
add
or
sub
add
inc
add
and
addb
push
adc
add
add
and
push
add
add
add
add
addl
and
sub
push
add
add
xor
add
and
orb
add
adc
sbb
cmp
add
xor
or
pop
inc
push
and
inc
and
or
or
adc
and
orb
or
addb
inc
add
and
pusha
and
andb
inc
add
cmp
or
add
or
test
adc
les
and
test
addb
rcll
and
add
add
andb
cwtl
dec
or
inc
inc
add
inc
addb
adc
add
add
and
addb
add
add
add
pusha
add
adc
add
inc
rolb
inc
test
add
inc
add
rclb
inc
popa
mov
in
and
adc
mov
enter
adcl
mov
or
adc
mov
add
add
adc
cltd
or
add
rolb
and
add
popa
add
mov
mov
xor
mov
inc
add
adc
push
xor
push
mov
add
cmp
mov
sub
add
add
dec
or
mov
add
add
inc
sub
add
xor
and
add
or
dec
push
add
add
inc
orb
sub
dec
nop
movsl
orb
adcb
push
nop
adc
orb
sahf
adc
add
xor
add
push
dec
orb
add
and
aas
or
shlb
push
sbb
add
add
test
add
add
rolb
add
add
loopne
dec
inc
mov
inc
pop
or
and
inc
adc
and
add
adc
adc
add
or
inc
mov
movsb
add
or
add
call
add
push
mov
inc
add
punpcklbw
mov
shll
xchg
or
or
mov
adc
adc
push
ret
addb
or
add
and
or
mov
adcb
adc
adcb
add
bound
andl
sub
inc
or
add
push
in
add
arpl
test
adc
mov
xchg
and
xor
add
adc
add
add
test
inc
orl
addb
les
push
or
or
add
add
add
add
push
les
loopne
andb
inc
add
or
adc
loop
and
adc
xor
mov
xor
add
add
and
addl
add
add
xor
or
or
sub
push
mov
push
and
add
add
test
and
test
mov
add
xor
sub
add
and
or
add
dec
nop
add
add
inc
dec
shlb
sub
and
add
add
add
add
adc
sub
adc
sub
inc
and
and
nop
xor
or
adc
add
or
and
push
addl
or
sub
cmpl
add
add
push
pop
addb
xchg
or
sbb
add
addb
and
sbb
pusha
loope
lea
inc
or
rolb
add
add
mov
and
add
test
add
or
test
sub
or
or
add
orl
add
add
add
push
test
sbb
lds
pop
pusha
adc
in
or
movsb
adcb
xor
pop
adc
add
cs
add
add
or
rorb
or
or
cmp
push
add
inc
dec
loopne
adc
adc
sbb
inc
xor
es
or
xchg
adc
in
orb
add
or
add
add
push
pop
push
add
test
dec
mov
adcb
add
adc
adc
xchg
add
push
adc
lock
add
add
add
adc
adcb
mov
and
add
imul
add
add
adc
add
add
add
add
roll
add
mov
pushf
adc
push
add
add
addb
add
mov
and
or
xor
add
and
inc
jo
or
or
add
add
inc
rcrb
test
test
pusha
rclb
xchg
mov
dec
or
rolb
xor
add
add
and
sbb
xor
add
add
insb
adc
and
add
add
add
icebp
orb
add
add
mov
and
orb
ds
orb
xor
loopne
inc
mov
test
adc
add
or
test
addl
sbb
mov
inc
or
or
and
and
jo
rolb
and
or
and
movsl
adc
or
sbb
or
cmpb
push
xor
adc
adc
addb
sbb
add
or
inc
dec
push
addb
add
add
inc
mov
add
adc
inc
jo
sbb
adc
subl
adc
jo
add
add
adc
int
dec
and
les
add
add
cmpsb
or
or
or
add
sub
add
add
andl
mov
addl
nop
add
adc
add
adc
cmp
add
push
dec
icebp
roll
dec
addb
push
or
and
add
or
or
adc
and
add
mov
xor
addl
mov
jns
xor
pusha
enter
sub
adc
inc
add
out
push
inc
sbb
test
add
adc
add
add
dec
or
loopne
pop
add
and
adc
inc
adc
int
push
add
aam
add
add
and
and
push
and
mov
adc
sub
or
inc
or
inc
add
adc
in
adc
sbb
andb
add
push
nop
adc
add
adcb
add
leave
les
or
or
push
adc
adc
adc
add
inc
add
xor
add
inc
cmp
add
add
add
push
add
addb
or
and
pop
loopne
add
xchg
push
inc
cmpsb
add
dec
adc
and
pop
add
adc
add
inc
add
inc
fadds
andb
pop
inc
add
add
add
dec
or
mov
inc
and
cmp
leave
and
enter
and
add
or
or
xchg
xchg
mov
adc
and
lcall
add
and
or
add
add
adc
rolb
add
sbb
mov
dec
adc
or
xor
add
and
subb
pop
xchg
dec
adc
inc
xchg
mov
and
add
adc
add
and
or
adc
mov
sbb
subb
sbb
add
add
add
test
sub
push
sbb
and
or
xor
sbb
pusha
enter
enter
add
or
add
adc
add
and
add
add
add
sbb
sub
adc
sbb
add
add
mov
int
add
adc
dec
add
jo
add
and
or
and
add
adc
mov
add
adc
and
add
sub
add
adc
andl
add
add
adcb
sub
sub
add
adc
add
add
add
inc
or
bound
sub
rorb
and
call
push
adc
and
and
jo
inc
test
inc
shlb
lcall
andb
mov
add
and
add
dec
rclb
bound
rolb
les
and
adc
add
add
add
adc
push
pop
or
or
or
inc
sbbb
add
or
sub
int3
inc
add
inc
nop
push
xchg
andb
adc
add
add
cltd
add
rolb
adc
inc
pusha
adc
sbb
call
daa
add
pop
xor
add
or
add
pop
addb
inc
adc
add
dec
inc
sub
inc
inc
call
or
mov
sbb
sbb
sub
movsb
rolb
mov
add
inc
adc
xchg
xchg
mov
sub
inc
or
mov
add
sub
sub
add
mov
addl
add
mov
or
mov
add
push
mov
add
in
xchg
add
or
push
or
add
dec
mov
inc
enter
add
add
add
add
inc
add
add
adc
dec
add
add
inc
add
push
push
add
and
and
cmp
cwtl
sbb
xorb
mov
sub
or
inc
add
pop
inc
xchg
jo
sbb
and
xor
or
adc
adc
cmpsb
or
add
inc
adc
add
add
adc
add
add
or
add
sbbb
mov
or
add
test
push
sbb
pusha
add
push
or
adc
stc
inc
inc
inc
pop
test
sbb
add
and
test
adc
add
or
xchg
add
or
dec
sub
or
sub
test
add
gs
dec
and
and
mov
mov
adc
nop
jb
inc
bound
add
push
cltd
pop
mov
xor
pusha
pusha
add
add
movb
nop
adc
add
mov
enter
rcrl
sbbb
rolb
stos
adc
push
or
sahf
andl
call
add
and
imul
xor
add
rolb
inc
and
adc
add
add
add
add
mov
adc
sub
or
add
inc
and
dec
adc
nop
rolb
xchg
addb
add
jno
inc
and
scas
fs
cmp
sbb
xchg
mov
adc
popa
dec
or
cmp
sub
or
inc
push
or
add
or
add
push
addb
sahf
add
test
add
sbb
sbb
dec
fcomps
popa
mov
add
xchg
mov
or
or
xor
and
add
and
stos
and
and
add
and
rclb
push
or
js
addb
add
rolb
mov
int3
add
sub
xchg
dec
mov
add
inc
dec
adc
adc
add
add
and
push
add
add
add
or
push
and
or
ret
adc
or
add
and
inc
and
push
add
xchg
inc
test
add
adc
push
dec
add
add
test
add
inc
shlb
rorb
and
inc
add
inc
add
mov
enter
addl
add
or
dec
add
sub
push
inc
rorl
movsb
adc
and
or
or
add
add
addb
fs
fldenv
adc
and
adc
adc
dec
and
scas
add
and
loopne
inc
adc
and
add
sub
push
int3
add
int3
push
or
add
and
cwtl
add
xchg
andb
or
and
and
in
add
adc
or
xor
sbb
xor
adc
dec
add
rclb
adc
push
sub
and
add
add
adc
adc
orb
adc
shlb
xchg
push
inc
addb
or
inc
pop
and
or
inc
inc
mov
and
add
inc
rorl
push
add
sub
and
sub
inc
and
addb
xorl
and
or
xor
adc
and
push
and
adc
or
fsubl
inc
add
xor
mov
add
and
adc
inc
adc
add
and
or
adcb
pusha
test
add
xor
pop
add
sub
add
add
test
dec
adc
and
or
or
adc
add
inc
adcb
add
sub
shlb
add
add
add
push
inc
xor
and
or
and
sub
addb
inc
dec
inc
and
xor
add
inc
cmp
add
add
or
sub
sbbl
adc
lock
xorb
and
add
bound
add
test
adc
adc
mov
dec
sbb
inc
add
add
les
addb
dec
or
add
je
inc
or
loope
pop
adc
and
rolb
add
adc
add
adc
add
add
fdivrl
sub
or
push
add
adc
rolb
mov
push
or
rorl
xchg
bound
mov
test
add
pop
sbb
add
test
xchg
adc
xchg
adc
add
addl
add
filds
mov
andl
or
adc
inc
adc
push
inc
xchg
add
add
push
add
dec
inc
dec
cmp
and
sub
mov
enter
addl
add
and
mov
add
push
add
add
or
subb
or
and
add
addb
or
or
adc
and
add
and
daa
mov
inc
add
add
adc
sub
xor
adc
add
out
or
lret
and
mov
mov
addl
and
addb
or
add
and
add
adc
aam
inc
dec
inc
add
mov
and
data16
add
nop
jo
mov
or
add
add
test
add
sub
sub
inc
add
add
test
adc
and
add
adc
mov
add
add
or
add
dec
mov
push
mov
adc
dec
addb
mov
add
adc
inc
or
iret
add
dec
add
xor
addb
or
add
sub
inc
adcl
adc
and
or
or
xchg
sub
add
inc
add
or
add
adc
es
ret
mov
int
dec
orb
inc
adcb
or
or
addl
inc
add
xor
or
nop
or
sub
and
push
mov
movsb
andb
add
or
jne
adc
or
or
add
and
or
add
rolb
adcl
or
movsb
and
or
add
add
cwtl
add
add
add
jecxz
add
or
test
jne
or
mov
call
pusha
add
addb
rorb
or
add
dec
and
inc
sub
sbb
or
insb
and
subb
andb
add
sbb
sbb
or
rclb
nop
and
test
or
inc
popa
add
dec
cwtl
addb
and
inc
ret
add
dec
add
add
adc
subb
nop
mov
add
inc
inc
mov
add
rorb
push
adc
or
mov
or
and
add
lods
add
xor
add
adc
add
mov
inc
or
add
adcb
addl
add
mov
outsb
inc
add
add
add
sbbb
and
adc
and
add
add
sbb
jno
popa
add
or
inc
or
mov
or
or
add
sbb
addb
fs
test
or
add
add
mov
or
mov
inc
or
dec
sbb
xor
adc
or
adc
dec
mov
and
add
push
or
add
or
add
dec
adcb
add
and
xchg
add
ret
test
add
and
xor
addb
add
or
push
add
add
mov
or
nop
test
adc
addb
add
or
addl
mov
inc
and
and
adc
in
or
orb
inc
sub
inc
push
pop
shlb
add
xchg
mov
dec
dec
add
ret
or
pusha
and
and
mov
sub
adc
add
inc
sub
bound
inc
pusha
add
add
push
and
cs
sub
dec
add
and
xchg
add
andb
adc
and
add
adc
add
add
push
add
xor
add
add
sub
or
test
inc
and
add
add
rolb
insb
test
mov
inc
adc
add
add
add
shlb
push
or
or
inc
rolb
dec
inc
or
add
inc
adcb
add
add
subb
xchg
sbbb
add
or
add
rclb
add
add
adc
inc
and
loopne
add
rclb
add
and
movsb
test
adc
dec
push
sbb
add
and
pop
xchg
add
and
pop
sbb
rorb
inc
lods
add
add
or
push
and
inc
push
push
and
and
adc
push
subb
add
push
nop
and
add
or
mov
add
xor
and
gs
cmp
addb
add
or
inc
push
orb
add
mov
inc
cmp
sbbl
add
loopne
and
cmpsb
add
add
addb
sub
add
inc
add
pusha
addl
add
sbb
dec
mov
je
adc
add
gs
add
add
nop
sub
add
mov
popl
add
pusha
addb
add
sbb
inc
jbe
or
add
add
inc
sub
and
mov
ret
or
or
add
inc
push
mov
xchg
adc
cmp
push
add
mov
add
adc
stos
and
addb
push
mov
add
addb
add
adc
lea
inc
add
inc
roll
and
inc
push
or
jo
add
add
adc
push
adc
addb
pop
sbb
or
jg
add
rorb
push
add
adcl
or
or
pop
test
nop
andb
add
add
and
and
addb
addb
mov
addb
xor
inc
add
add
and
add
add
adc
add
adc
add
add
add
addb
add
mov
adc
xor
xorb
add
pusha
add
add
addb
add
pop
add
addb
or
mov
mov
inc
lds
and
add
xor
add
or
adc
xor
and
add
adc
and
inc
orl
dec
inc
dec
addb
adc
add
and
pop
add
sbb
or
pusha
push
addb
inc
adc
push
or
xorl
or
or
sub
and
add
pusha
lds
mov
or
rclb
add
cmp
add
inc
pop
add
add
add
orb
sbb
add
add
and
add
or
or
sub
pusha
sub
dec
add
add
test
add
xorb
adc
or
push
adc
add
mov
adcb
sbb
addl
and
add
fldenv
adc
or
rolb
inc
add
and
and
add
or
add
push
push
andb
dec
add
or
mov
or
or
adc
or
add
xchg
xchg
adc
add
add
sub
add
pop
mov
pusha
or
ret
add
add
add
and
inc
add
test
sub
add
xchg
adc
or
add
add
or
or
mov
dec
loope
and
adc
and
call
sub
lods
bound
add
dec
add
add
inc
adc
adc
les
adc
mov
add
add
or
mov
pusha
add
cwtl
add
add
mov
addb
xor
add
adc
aaa
and
inc
or
enter
add
or
inc
and
adcl
add
orb
adcb
mov
add
or
and
inc
push
sbb
inc
inc
addb
and
mov
add
xor
or
add
push
lock
inc
and
add
mov
xchg
add
orb
sbb
subl
sbb
xor
push
sbb
and
and
adcb
ret
add
add
or
mov
xchg
push
add
or
adc
inc
pop
sbb
sub
inc
add
mov
add
or
dec
sub
adc
sub
inc
add
addb
adc
or
add
or
addb
add
inc
push
inc
add
add
add
les
or
and
popa
sub
roll
pop
add
movsb
add
adc
adc
adc
subb
dec
add
add
mov
or
and
shlb
mov
add
add
add
ret
inc
or
stos
or
inc
orb
inc
xor
add
or
adc
or
test
adc
add
addl
add
or
and
adc
and
and
mov
sbb
add
and
xorb
dec
lret
inc
dec
movsb
sahf
add
test
loop
add
loop
inc
in
mov
add
ret
or
add
or
and
xor
and
adcl
inc
add
inc
or
and
xor
push
add
or
add
rolb
mov
pushf
inc
xchg
inc
rcrl
xor
addb
inc
sbb
stos
loop
mov
addb
jns
inc
and
addb
xorl
or
adc
add
add
and
orb
xor
mov
add
test
xor
adc
inc
or
aad
add
inc
and
adc
push
dec
add
push
add
pop
add
nop
mov
add
or
addb
inc
inc
add
loopne
xchg
pop
and
add
xor
adc
inc
add
mov
push
orb
and
inc
adc
or
addb
pop
add
dec
add
inc
mov
and
adc
add
push
sbb
mov
popa
add
add
addb
repnz
pusha
inc
and
or
popf
push
add
addb
test
sub
addb
inc
inc
or
mov
or
and
mov
adc
add
mov
mov
adc
and
shrb
or
cwtl
add
or
add
rorb
dec
andb
enter
je
add
add
mov
add
push
mov
xor
pusha
and
mov
mov
dec
add
leave
inc
jecxz
push
add
adc
add
add
sbb
add
add
sub
cmc
and
loopne
insb
push
and
push
add
add
inc
push
lods
or
inc
add
add
and
inc
add
test
add
add
add
addl
push
adcb
add
rorb
adc
add
int3
inc
or
adcb
shlb
addb
nop
inc
add
xorb
cmovo
push
inc
mov
add
push
das
mov
rolb
add
addb
dec
add
or
andb
nop
add
adc
orb
adc
adc
add
adc
and
add
inc
addb
and
orb
add
add
mov
inc
xor
mov
inc
mov
sbb
popa
addb
mov
pusha
add
loopne
mov
rolb
or
add
add
xchg
adcb
and
addb
push
add
mov
add
add
sti
andb
addl
or
cmpb
adc
or
and
add
sub
mov
and
push
add
or
bound
inc
test
arpl
add
or
add
leave
orl
mov
dec
sub
andl
dec
and
pusha
sub
pusha
pop
mov
mov
nop
orb
or
addl
push
sbb
adc
inc
or
cmpb
push
inc
andb
test
xchg
dec
push
add
or
add
xchg
and
pop
jl
sbb
xchg
xchg
cwtl
fs
lock
adc
rclb
add
add
and
or
push
add
adc
add
add
test
add
add
add
cltd
subb
adc
loopne
adc
test
adc
add
addl
push
add
rcl
add
mov
pop
and
add
add
add
or
add
inc
add
nop
sbb
push
mov
rolb
adc
or
inc
dec
lret
andl
or
sbb
movsb
adc
add
xor
pusha
xchg
and
xor
fimull
inc
addb
add
dec
add
push
add
push
xchg
addb
or
or
subb
orb
or
add
adc
adc
sbbb
and
adcl
adc
nop
and
or
mov
popf
xchg
addb
adc
pop
mov
adc
xor
add
addb
inc
mov
inc
add
dec
xchg
add
push
inc
enter
pop
test
and
add
xor
or
dec
mov
adc
or
add
popa
add
add
inc
add
mov
xor
add
dec
rolb
push
cwtl
push
and
and
add
in
inc
popa
adc
adcl
sbb
or
andb
andb
adc
popa
push
addl
add
xchg
inc
dec
push
sbb
push
mov
add
and
add
add
jbe
mov
and
add
or
inc
addb
lds
add
and
and
adc
add
add
nop
mov
mov
add
mov
add
or
or
add
inc
inc
rolb
adc
and
adc
nop
or
push
arpl
adc
push
addb
rolb
inc
inc
add
addb
add
or
or
push
or
shll
or
xchg
sbb
adc
stc
and
test
add
xor
adcb
addl
add
adc
add
add
xor
pusha
les
inc
inc
add
or
cmp
add
orb
or
and
or
adc
sbb
addl
adc
mov
add
inc
push
add
inc
test
or
andb
mov
in
jb
and
add
pusha
and
andb
mov
cmp
nop
and
add
mov
addl
inc
dec
sub
add
xor
or
inc
add
add
or
add
add
aam
add
inc
adc
add
pop
jge
add
and
add
test
and
and
dec
add
inc
or
add
and
adc
add
sub
les
pop
add
cwtl
xchg
pop
addb
adc
sbb
and
add
cwtl
adcb
inc
adc
ret
and
and
cmp
mov
rol
add
pop
dec
dec
adc
cs
add
add
add
bound
add
add
or
xor
shrb
add
sbbb
adc
adc
xor
rolb
add
mov
add
add
les
sub
add
addb
test
shlb
in
add
adc
dec
add
push
inc
imul
add
add
and
andb
add
pusha
addb
and
adc
gs
inc
adc
inc
add
adc
cmp
addl
add
add
insb
mov
add
adcb
sbb
add
addb
adc
inc
xor
addl
xor
inc
mov
push
add
and
and
xor
and
add
dec
outsl
test
add
add
ss
and
and
and
xor
and
add
xchg
inc
add
and
adc
add
add
or
dec
dec
mov
push
and
dec
add
mov
adc
xor
add
lcall
push
adc
inc
sub
or
add
push
or
movsb
add
dec
add
les
dec
adcl
or
xchg
xor
adc
add
and
add
cmp
xor
inc
or
push
mov
add
mov
loop
rcll
mov
sbb
sub
xor
les
dec
adcb
adc
add
addb
addb
addl
and
add
adc
add
add
sub
or
add
or
add
adc
add
add
push
add
pusha
fldcw
mov
xor
xor
add
inc
daa
inc
and
xchg
popa
add
xchg
dec
adc
inc
add
dec
inc
jae
in
inc
push
add
inc
add
add
adc
inc
inc
add
bound
addb
movsb
sub
or
and
adc
addb
fs
add
inc
cmp
add
sub
mov
add
inc
or
or
add
rcrb
mov
xor
add
lea
movb
add
pusha
add
add
adc
je
add
test
add
js
cmp
or
mov
add
add
inc
add
xchg
sbb
add
add
add
mov
test
inc
pusha
dec
add
fdivr
addb
test
mov
push
dec
cwtl
inc
popa
addb
add
cwtl
or
add
call
add
sbb
add
push
add
mov
subb
xchg
sub
add
jecxz
add
add
add
addb
or
addb
xchg
mov
dec
dec
add
add
test
adc
sbb
cmpb
add
addb
faddl
or
add
xor
test
push
push
push
add
or
adc
inc
pop
add
movsl
je
add
and
sbb
xor
pusha
adc
add
mov
or
pop
ret
pop
inc
sub
add
add
and
xor
add
dec
nop
dec
add
adc
dec
add
rclb
nop
add
addb
and
mov
and
sbb
inc
addb
add
mov
mov
push
addb
inc
xchg
or
mov
rclb
add
pusha
addb
arpl
add
add
add
add
sbb
nop
add
adc
ret
shll
nop
push
sbb
adcl
add
xor
push
add
adc
mov
dec
or
xor
inc
push
pop
adc
inc
rorl
inc
jp
adc
adc
js
add
adc
add
add
mov
xor
add
inc
add
or
and
push
inc
adc
and
add
inc
push
test
movsl
push
xor
add
add
xchg
add
fisubl
andb
and
adc
mov
inc
add
inc
and
addl
dec
cmp
mov
or
add
test
or
test
inc
or
adc
shll
push
or
add
ret
or
add
pop
xchg
pusha
and
or
subb
inc
addb
add
add
addl
sbb
inc
and
dec
adc
adc
add
imul
push
in
add
add
lock
add
addb
push
sub
rcll
imul
add
or
sahf
push
xor
add
orl
subl
push
or
jo
leave
movsb
add
push
add
dec
add
sbb
or
add
mov
add
mov
movsb
add
adc
add
xchg
add
inc
and
or
cmp
sbb
adc
xchg
test
xor
or
adc
xchg
push
bound
inc
push
add
popf
add
test
and
subb
sub
addb
mov
ret
add
push
or
push
inc
in
dec
add
add
add
shlb
dec
add
adc
inc
or
inc
add
test
addb
or
add
sub
mov
sub
orb
mov
sbb
orb
pusha
or
or
das
inc
add
inc
add
cltd
rorb
adc
or
add
inc
cmp
sub
mov
ret
rorb
pusha
sbb
loope
xorb
inc
adc
adc
or
xor
adc
add
adc
add
adc
push
add
inc
mov
nop
xor
mov
adc
inc
pusha
adc
nop
add
adc
add
cmpb
add
sbb
test
roll
sub
or
mov
sbb
sbb
add
mov
add
inc
orb
sbb
and
adc
shlb
add
or
daa
adc
shll
add
or
inc
mov
add
or
inc
add
add
mov
rcrb
inc
add
addl
adc
dec
je
add
xchg
and
inc
add
add
enter
pusha
add
add
push
mov
test
aam
and
and
sub
popa
add
add
inc
or
add
addb
push
or
add
inc
add
sub
push
add
push
add
add
xor
add
mov
add
mov
adc
and
bound
add
inc
or
add
add
mov
add
inc
dec
add
adc
pusha
rclb
jo
lods
add
and
mov
shrb
add
and
add
add
pusha
adc
or
add
pusha
add
inc
addl
movsb
add
inc
and
or
add
cmp
add
push
movsl
mov
adcb
adc
and
inc
add
and
test
add
add
sub
inc
add
add
mov
add
rcrl
adcl
add
or
pop
and
orb
inc
or
adc
inc
pusha
pop
add
dec
sub
or
and
xor
adc
or
xor
push
push
push
add
add
sub
and
and
and
add
mov
push
adc
addb
or
or
sbb
jmp
inc
adcl
add
inc
or
sub
add
inc
sbb
add
add
jecxz
add
fadds
addb
add
inc
and
or
inc
bound
sbb
add
or
add
adc
add
addb
xchg
cli
dec
enter
push
or
add
andl
inc
inc
pop
push
orb
and
add
addb
add
sub
rcrb
push
sbb
and
adc
pop
pop
adc
or
mov
and
xchg
and
add
sbb
adc
mov
or
push
add
xchg
add
inc
add
or
xor
add
or
push
sub
adc
jb
add
mov
and
add
sub
addb
add
sub
test
mov
or
adc
xchg
sbb
and
add
add
orb
sbb
inc
add
movsb
or
cwtl
add
add
orb
pusha
add
add
les
inc
jo
add
push
and
sbbb
add
add
add
add
inc
or
add
adc
enter
dec
cmp
je
adc
dec
or
add
inc
fadds
scas
or
add
mov
or
nop
inc
xor
mov
and
sbb
adc
add
add
add
or
push
add
lock
add
add
es
fs
add
add
cmp
pop
and
inc
mov
add
pusha
xor
and
inc
and
and
add
push
add
xchg
lds
jb
inc
sub
andl
and
or
or
xchg
adc
push
lods
add
adc
adc
inc
inc
add
cmp
add
ret
add
mov
and
verr
sbb
add
or
nop
xchg
addb
inc
sbb
and
es
sub
sub
addb
push
xchg
jno
push
adc
inc
adc
dec
test
test
xchg
and
cmpsb
callw
add
adcb
adc
inc
add
and
xor
push
adc
sub
push
and
ret
or
add
mov
or
add
add
test
inc
or
test
and
sub
and
adc
add
in
es
add
push
sub
or
add
add
add
inc
dec
rcrb
or
sub
inc
mov
push
add
add
add
andb
add
add
adc
or
mov
inc
push
dec
xchg
test
inc
pusha
add
pop
addb
xor
jle
mov
es
add
pop
and
add
adc
add
rolb
push
inc
dec
add
adc
sub
and
loope
adc
orb
add
addb
sub
add
push
nop
cmp
and
les
xchg
or
addb
add
adc
add
add
add
add
sbb
or
adc
addb
sbb
xor
add
mov
add
inc
add
add
xor
stos
add
add
xor
cwtl
addb
add
and
add
pusha
nop
push
add
adc
mov
and
add
and
add
mov
add
orb
xchg
jne
add
adc
push
les
jp
add
mov
sbbb
mov
and
or
sbb
jno
addl
add
and
or
enter
add
adc
inc
inc
inc
add
popa
nop
test
or
and
and
fs
pusha
ret
inc
xchg
popa
sub
add
add
test
es
dec
and
lock
add
and
pusha
pusha
sub
add
pusha
and
ret
shrb
add
dec
in
add
pop
add
inc
inc
roll
add
add
pop
inc
nop
subb
orl
and
addb
sbb
sub
and
or
add
addb
push
and
orb
or
addl
add
mov
push
popa
add
push
movsb
add
add
and
add
addb
add
add
jne
mov
push
xor
mov
and
inc
addr16
adc
push
add
and
inc
add
adc
adc
add
adc
xchg
adc
add
add
and
and
add
add
pop
ret
adc
or
inc
inc
or
or
andl
add
sub
push
push
and
mov
adc
and
xor
and
mov
or
mov
pusha
pushf
add
or
mov
push
xor
mov
enter
push
or
ret
adc
test
mov
add
and
jno
shll
xor
xchg
push
or
and
add
dec
lds
add
push
roll
and
pop
add
and
or
pusha
nop
dec
cmp
add
sahf
test
add
add
push
adc
inc
pop
add
add
add
mov
or
and
xchg
shrb
push
sub
add
and
adc
and
pusha
add
add
and
add
inc
add
pop
addb
sub
add
adc
add
inc
sub
test
cmpsl
mov
and
mov
or
clc
addb
add
lea
into
sub
cmp
dec
and
add
bound
popa
xchg
inc
mov
sub
cmpsl
add
and
add
and
dec
adc
loopne
xor
xchg
add
rclb
dec
and
test
mov
add
lds
add
dec
test
add
or
or
sub
add
popa
add
test
add
adc
addb
or
dec
mov
xor
fs
dec
add
add
adc
add
xchg
inc
and
cwtl
adcb
add
sub
and
sub
inc
add
inc
dec
and
add
xor
adc
sub
and
jmp
add
inc
sbb
add
sbb
or
addb
push
add
jo
je
add
ss
cmp
pop
inc
add
inc
test
inc
inc
mov
adc
mov
xor
xor
mov
adc
or
xor
mov
or
dec
cwtl
add
mov
adcl
adc
inc
add
and
adc
andb
xor
or
and
mov
ret
add
dec
imul
mov
inc
add
mov
xor
mov
sub
or
nop
mov
mov
add
rolb
inc
mov
addl
push
mov
pusha
add
inc
dec
push
add
cmp
add
add
push
add
inc
adc
add
adc
jb
les
and
xor
or
sub
inc
push
clc
or
xchg
or
mov
mov
xor
add
xor
add
xor
add
rcll
add
xchg
mov
add
add
sub
or
or
stos
add
adc
mov
add
add
inc
inc
and
add
add
add
test
ret
pop
ret
or
dec
or
xor
add
test
push
nop
adc
add
addb
add
dec
adc
and
add
push
or
cmp
add
or
or
and
and
sbb
addl
inc
adc
add
js
or
sbb
and
add
xor
push
add
push
or
add
or
inc
and
inc
and
test
inc
adc
add
test
adc
mov
inc
int3
adc
or
int3
or
and
push
add
inc
add
inc
adc
adc
add
cmp
pusha
add
dec
push
xor
movsb
dec
or
add
add
andb
adc
sbb
rolb
enter
addb
and
dec
inc
sub
add
add
xchg
xor
sbb
inc
push
and
or
inc
sbb
inc
inc
cltd
add
mov
add
or
test
orb
add
add
lcall
add
adc
pop
mov
adc
add
adc
test
inc
call
or
push
cmp
or
adc
dec
sbb
inc
and
adc
push
inc
andl
add
mov
adc
adc
pusha
nop
inc
push
and
adc
adc
mov
inc
add
sub
mov
add
add
inc
rclb
dec
sbb
shrb
pop
jle
addb
dec
inc
xor
add
xor
mov
add
sbb
mov
enter
adc
mov
subb
push
xchg
xchg
rclb
mov
add
inc
roll
sbb
adc
mov
orb
shl
movsb
add
leave
add
roll
xor
bound
or
and
and
add
add
add
add
sub
adc
add
and
adc
add
dec
inc
adc
orb
add
jo
dec
mov
and
dec
or
add
cld
add
or
mov
adc
add
mov
test
push
test
and
jae
xlat
mov
adc
in
add
or
lds
push
sub
and
add
push
mov
add
add
xor
jbe
sub
test
add
inc
pusha
add
adc
push
and
add
and
push
add
nop
pop
mov
add
add
add
push
mov
inc
cmp
add
and
sub
push
or
push
add
inc
pop
add
push
rcll
mov
add
or
shlb
inc
mov
add
and
xor
orb
test
or
xchg
rolb
add
imul
push
nop
cmp
add
nop
sub
mov
adc
xor
dec
or
add
adc
test
adc
sub
push
inc
nop
xchg
rolb
roll
pusha
movsb
jb
ret
inc
sbb
or
add
push
mov
add
or
add
or
inc
add
and
adc
mov
adc
xchg
add
adc
or
and
or
xchg
mov
sub
and
or
or
and
adc
and
add
dec
or
or
add
dec
adc
rolb
les
inc
add
add
or
add
cmp
fisubrs
and
loopne
pop
nop
addb
and
add
sbb
xchg
mov
adc
push
and
add
sub
add
add
add
add
cmp
pop
push
or
add
andb
aad
xor
daa
or
nop
add
test
adc
add
jmp
add
adc
add
or
addl
and
or
xchg
and
push
andb
add
shrb
shll
add
and
and
adc
add
add
adc
add
add
sub
inc
and
add
pusha
adc
mov
stos
or
push
nop
add
adc
adc
mov
test
add
pop
xchg
or
or
add
test
or
add
add
and
sub
enter
add
add
inc
roll
add
and
or
pusha
add
and
add
adcb
and
dec
adcb
and
inc
add
or
cmp
xchg
dec
or
or
xor
repnz
inc
add
inc
dec
add
pop
add
add
xchg
inc
addl
les
pusha
or
rolb
dec
rolb
inc
loop
inc
adc
and
add
add
and
add
adc
add
add
cwtl
add
addb
inc
add
or
and
add
inc
sub
push
mov
add
push
push
or
data16
add
add
addb
add
mov
xor
add
and
orl
cmp
es
add
adc
incb
sub
inc
pusha
xor
inc
sub
and
add
add
orb
je
cwtl
addb
rclb
or
inc
push
add
add
add
push
and
cwtl
addb
add
orb
add
or
or
push
and
add
dec
inc
add
mov
aam
or
add
sbbb
loopne
add
and
lea
add
xchg
or
inc
sub
pusha
test
add
add
add
in
xchg
dec
and
mov
push
and
sbb
add
addb
orb
mov
adc
nop
push
add
or
or
dec
or
or
or
pushf
bound
pusha
inc
cs
int3
add
adcl
and
rolb
add
xor
or
add
or
add
add
add
add
or
test
add
or
shrb
add
inc
sbb
add
call
test
or
add
sub
adc
and
add
mov
test
inc
or
add
add
bound
addl
adc
push
sub
add
lds
rolb
pusha
or
add
adc
and
add
pop
add
add
and
or
add
or
mov
add
and
pusha
add
and
and
adcl
or
add
or
add
add
test
or
or
sub
inc
adc
add
add
and
or
add
or
add
test
add
andb
nop
or
inc
add
inc
pop
inc
adc
mov
orb
or
add
inc
pop
or
test
adcb
rcll
inc
addb
add
add
add
inc
xorb
addb
nop
and
stos
add
test
and
loope
or
add
add
add
add
mov
or
inc
inc
inc
xchg
inc
add
test
add
xor
add
push
xorb
add
add
or
sub
xchg
pusha
add
mov
imul
js
cwtl
mov
add
sbb
and
stos
add
pusha
add
and
addl
pop
rorb
mov
ljmp
and
lock
add
nop
or
push
inc
dec
and
add
and
cwtl
add
sub
adc
and
add
adc
adc
adcb
add
add
addb
sub
and
inc
add
or
rolb
and
sub
sub
inc
xor
push
rcll
and
mov
inc
add
adc
xchg
or
add
mov
inc
or
inc
add
add
adc
add
push
and
add
sbb
lock
inc
in
xor
sbb
or
jo
and
and
add
add
pop
push
xchg
sub
inc
add
add
inc
pop
int3
or
sbb
and
sub
or
addb
mov
mov
and
inc
mov
cwtl
addb
andl
sbb
adc
dec
inc
sub
add
add
jo
add
rolb
add
sbb
or
and
dec
or
push
add
add
push
and
mov
mov
mov
inc
or
add
adc
or
add
adcl
test
or
dec
add
mov
cltd
add
sub
add
addb
andb
test
add
add
or
adc
and
or
add
and
add
and
push
and
add
nop
inc
add
inc
inc
add
xor
fisttpl
add
add
add
mov
inc
add
and
inc
add
inc
pop
mov
adc
cltd
add
xor
xchg
push
dec
roll
or
addb
inc
mov
xor
sub
or
mov
dec
add
sub
add
add
mov
andl
add
inc
test
orb
dec
add
add
add
push
mov
add
addl
test
addl
add
mov
add
and
add
mov
add
xor
mov
add
adc
addb
movsb
dec
add
add
push
roll
and
add
mov
add
orb
add
sub
or
rolb
or
xor
and
adc
mov
add
inc
fcmovbe
adc
mov
and
adc
add
push
or
push
rolb
add
cwtl
mov
in
and
enter
les
loopne
or
add
and
inc
cwtl
popa
sub
or
add
add
adcb
add
add
inc
add
pushf
inc
push
adcb
sbb
add
push
add
adc
add
or
nop
xor
add
jp
add
rolb
adc
addb
inc
subl
inc
sub
add
and
inc
inc
mov
test
shl
adc
inc
inc
adc
add
inc
adc
adc
add
roll
mov
addl
or
mov
add
add
addb
add
add
add
ror
add
nop
dec
or
inc
add
fadds
adc
add
or
and
inc
xchg
mov
and
add
or
mov
add
and
add
or
add
add
sbb
or
and
mov
inc
add
add
es
cwtl
add
add
or
add
nop
mov
inc
adc
push
add
sbb
add
add
mov
dec
rclb
sbb
add
and
mov
dec
or
xorb
add
and
aam
add
out
mov
add
add
mov
dec
and
add
or
or
adc
movsb
and
dec
or
add
and
dec
add
adc
test
roll
dec
add
add
and
add
sub
inc
subl
dec
add
sbbb
xor
add
adc
add
push
xor
add
add
pop
mov
add
adc
sub
enter
ret
dec
add
mov
add
test
add
add
or
loopne
cpuid
bound
push
test
add
mov
add
or
inc
dec
add
and
adc
add
and
inc
addb
test
addb
push
inc
add
add
syscall
es
pusha
or
xchg
add
add
adc
or
sub
subb
add
or
inc
add
or
adc
add
add
mov
and
shrb
test
add
ret
adc
dec
dec
xor
sbb
push
xor
addb
inc
addl
rol
and
push
and
or
adc
xor
push
add
add
add
adc
popa
and
mov
and
push
xor
addl
adcb
add
rorb
push
and
loopne
adc
shlb
test
nop
adc
xor
and
sub
test
add
or
add
xchg
sbbb
add
and
sbb
adc
add
add
add
add
addb
push
inc
inc
addb
adc
and
addl
add
nop
andl
add
sbb
inc
sbb
and
add
adcb
add
enter
and
and
pusha
push
add
rolb
add
inc
add
ret
mov
add
inc
inc
inc
inc
add
and
cwtl
add
add
or
addl
loopne
inc
nop
adc
and
inc
adcb
add
add
add
sbb
add
add
inc
adc
add
add
sub
adc
or
add
add
shlb
dec
xor
adc
addb
movsb
or
adc
add
add
add
add
and
add
and
adc
add
add
dec
add
inc
add
sub
add
movsl
dec
add
adc
and
inc
inc
adc
add
or
add
add
in
adc
add
add
inc
dec
inc
pop
add
add
inc
add
xchg
addl
mov
mov
insl
add
add
je
inc
inc
add
adc
and
adc
and
add
add
popa
push
adc
xchg
and
xor
roll
add
add
pusha
inc
adc
add
cmpsb
push
add
dec
andb
or
mov
dec
adc
xchg
sbb
add
inc
mov
inc
sbb
inc
mov
adc
or
and
add
add
andb
sub
nop
and
add
add
rclb
inc
dec
add
and
add
mov
and
test
add
add
or
sbb
adc
xchg
dec
and
mov
test
sub
and
sub
adc
add
add
add
add
add
sbb
inc
dec
arpl
mov
add
adc
inc
add
inc
add
add
add
and
mov
add
adc
addb
add
addb
inc
addl
inc
add
add
adc
mov
adc
inc
andb
sub
rolb
add
add
adc
add
or
mov
inc
mov
inc
add
addb
and
or
dec
adc
add
int3
add
movsb
sub
add
or
inc
or
add
add
add
add
or
mov
xor
push
and
or
dec
outsl
or
dec
add
add
and
push
add
add
add
daa
xor
inc
addb
add
add
add
add
mov
push
inc
nop
add
daa
inc
and
or
add
add
and
fsubs
mov
add
and
and
ret
add
add
add
add
adc
add
pusha
or
ret
add
add
add
add
loopne
xor
add
add
rolb
inc
add
add
add
mov
or
mov
add
adc
inc
add
inc
inc
and
cltd
xchg
adc
and
or
inc
inc
add
faddl
add
add
inc
adc
out
adc
or
inc
test
add
add
push
or
flds
inc
stos
adc
loop
popa
add
inc
add
addl
or
add
add
add
and
and
or
sub
rolb
push
or
add
and
add
add
addb
add
sub
add
push
and
add
lea
cltd
loop
dec
add
add
add
add
inc
test
add
add
addb
add
dec
test
addb
or
xor
sbb
mov
add
add
or
and
or
inc
adc
pop
inc
add
or
sbb
inc
inc
ljmp
add
adc
add
inc
xor
and
inc
or
inc
push
sbb
and
ret
inc
mov
or
inc
inc
add
stos
or
xor
test
inc
adc
adc
inc
addb
adc
inc
or
addl
and
inc
add
and
and
dec
or
and
inc
addl
nop
add
or
inc
adc
add
add
add
add
jo
add
and
push
add
add
nop
enter
loopne
rolb
inc
inc
test
inc
push
dec
and
add
andb
addl
pop
add
add
add
or
rorb
adc
adcb
adc
or
add
xor
inc
mov
add
add
dec
inc
adc
movsb
xor
add
shlb
inc
test
and
add
add
add
add
add
lods
je
dec
in
add
push
ret
bound
add
addl
movsl
mov
adc
add
adc
add
mov
orl
sbb
adc
xchg
adc
add
add
inc
add
or
inc
xor
add
add
add
add
push
lret
xchg
add
shlb
and
add
cmp
add
inc
add
test
or
inc
test
pusha
dec
test
mov
adc
add
add
add
and
add
add
add
inc
add
add
addb
add
movsb
data16
sbb
inc
add
inc
inc
push
add
add
and
pop
add
call
add
addb
inc
add
and
add
insl
pusha
add
addb
add
add
addb
sub
add
push
add
andl
add
add
add
inc
or
add
adc
adc
or
xor
orb
add
add
popa
addb
add
adc
add
addb
add
inc
andb
bound
inc
fs
and
sub
add
and
es
add
add
add
dec
add
sub
adcb
add
inc
adcl
add
add
test
add
addl
and
add
and
add
inc
adcb
add
inc
adc
orb
add
jbe
dec
or
add
adcb
sahf
add
addb
add
inc
add
push
add
aam
jno
dec
enter
and
and
and
add
cmp
add
add
adc
push
mov
cmp
add
xchg
add
xor
push
add
add
lea
rolb
add
mov
and
mov
adc
addb
adc
cwtl
pusha
add
sub
or
or
add
add
mov
adc
dec
add
and
add
addl
add
add
subl
add
add
mov
add
inc
sub
popa
and
lea
cwtl
sub
add
add
and
or
add
nop
adc
adc
mov
add
add
inc
or
cwtl
add
sub
inc
add
addb
inc
add
leave
inc
add
or
inc
or
add
cmp
adc
adc
addb
add
orb
mov
add
add
push
inc
nop
dec
inc
inc
nop
add
add
add
and
sbb
or
and
test
or
add
rol
add
addb
add
add
add
inc
addb
addb
add
dec
or
sbb
adc
rolb
add
dec
addb
addb
adc
add
inc
add
add
pusha
and
loopne
add
add
mov
int3
dec
adc
or
and
pop
adc
or
inc
addb
inc
add
or
mov
and
adc
addl
add
dec
addb
addb
add
sub
adc
dec
mov
and
add
shll
inc
add
add
add
add
dec
aam
add
sub
and
add
test
and
add
or
and
sub
add
adcb
adcb
inc
test
add
add
or
or
add
add
adc
sub
or
inc
mov
add
inc
inc
imul
push
inc
add
add
inc
mov
add
add
adc
inc
add
add
add
push
add
inc
and
and
and
mov
adc
inc
add
shlb
and
add
add
inc
push
adc
xorb
inc
inc
inc
add
add
add
and
inc
add
adc
adc
and
orb
add
add
add
and
or
cwtl
dec
inc
add
test
sub
pusha
test
add
add
add
shlb
test
sub
sub
push
outsl
nop
test
and
adc
pop
mov
inc
add
add
enter
add
add
add
add
xor
add
add
add
add
add
sbb
lea
or
add
add
add
add
test
add
add
mov
add
inc
or
add
and
add
push
cmp
inc
add
push
inc
inc
or
adc
pop
add
add
inc
inc
inc
inc
adc
and
pusha
or
add
add
inc
test
add
add
adc
inc
lock
andl
add
rolb
rol
mov
inc
add
addl
add
inc
inc
adc
enter
add
nop
or
inc
add
add
addb
add
add
adc
adc
inc
nop
and
dec
mov
dec
dec
add
add
mov
add
addb
add
adc
add
jne
add
add
addl
and
sbb
add
inc
inc
add
add
inc
add
rolb
push
add
and
addb
add
add
inc
add
add
and
rolb
add
inc
add
dec
dec
add
add
mov
add
pop
push
inc
mov
adc
jo
add
add
roll
and
add
inc
cmp
and
popa
add
add
add
add
adc
add
add
dec
inc
add
addb
addb
add
add
dec
add
adc
inc
push
orb
inc
dec
add
add
or
and
mov
add
add
or
or
add
and
fs
inc
xchg
add
add
and
add
add
add
or
inc
test
inc
sub
mov
add
push
add
add
adc
add
inc
add
addb
add
add
add
addl
push
addb
dec
or
add
add
adc
add
push
add
test
or
mov
push
inc
add
mov
inc
addb
dec
or
add
inc
add
adc
add
or
adcb
xchg
add
xchg
add
addb
add
sbb
or
inc
test
dec
add
jo
or
add
add
add
add
add
dec
add
inc
mov
pusha
loope
add
orl
mov
sbb
adc
and
add
pusha
add
or
add
adcb
inc
add
add
add
add
addb
add
dec
arpl
or
cltd
add
les
inc
ret
adc
int3
add
pusha
or
and
add
rolb
xchg
add
or
add
and
add
add
roll
cwtl
add
push
inc
add
add
shrb
or
test
and
add
add
or
add
add
pop
daa
or
sub
add
add
rcrb
add
adcl
add
push
add
adc
inc
dec
or
test
add
inc
xchg
sbb
add
add
add
addb
add
inc
mov
bound
add
xchg
and
add
add
push
mov
mov
or
mov
push
add
add
add
mov
add
and
inc
add
add
or
add
xchg
add
xor
adc
test
add
add
shlb
inc
and
pusha
add
or
add
adc
xchg
add
add
add
or
inc
or
add
add
xorb
or
sub
inc
pop
add
inc
cmpsb
scas
cmp
cmpsb
mov
lods
and
test
mov
fildl
mov
xchg
js
xchg
mov
mov
jmp
lcall
or
mov
cmc
sti
test
add
je
xor
mov
das
jl
mov
cmp
int
and
cltd
test
add
inc
inc
hlt
dec
or
mov
pop
lods
xchg
mov
inc
call
aaa
ds
lods
push
out
insl
cmp
ret
mov
rorb
mov
lods
pop
inc
or
dec
popl
lret
sub
mov
sbb
add
leave
sub
mov
mov
scas
ljmp
das
cmp
movhps
out
lret
add
lcall
fstpt
and
or
push
xchg
pop
sub
add
or
hlt
jmp
cwtl
enter
cmp
add
ret
mov
lea
or
leave
jne
das
loop
repnz
ret
mov
test
sub
inc
orl
push
sbb
adc
mov
mov
sub
stos
push
xor
or
insl
jo
lret
xchg
cli
cwtl
xor
pop
inc
iret
adc
ret
cmp
insb
xchg
adc
inc
into
scas
scas
sub
cvttps2pi
push
sbb
pusha
cmp
scas
ja
sub
sub
inc
sbb
cli
scas
fwait
mov
iret
rclb
add
ret
push
iret
daa
aas
cs
stc
shrb
arpl
pushf
and
cli
mov
mov
pop
and
sub
out
dec
xor
sahf
push
sub
lods
stos
ret
dec
mov
xchg
xchg
aad
ret
sub
ret
pop
xchg
in
jecxz
ret
sub
and
imul
cmp
aas
sub
pop
pop
stos
mov
lods
fdivrl
mov
mov
and
pop
aad
sub
dec
sub
insb
jnp
jne
iret
or
sub
fsubr
mov
rcll
or
add
in
xor
mov
sbb
sbb
mov
or
cmpsl
or
dec
popa
mov
aaa
lods
mov
mov
push
outsl
cmp
fnstsw
fwait
mov
pop
and
scas
add
xchg
mov
adc
mov
cs
xchg
test
scas
aaa
pushf
pop
movsl
sbb
mov
mov
jns
pusha
sbb
add
sub
fmuls
fcomp
or
push
lret
mov
inc
mov
cs
stos
scas
mov
mov
mov
mov
stos
mov
or
lea
cltd
andb
out
out
cli
lock
mov
mov
xchg
jl
xchg
mov
daa
rorb
mov
lods
pop
inc
rcrl
ss
adc
scas
mov
pushf
add
lods
inc
das
mov
push
leave
cs
aaa
add
test
test
fisubrs
scas
xlat
mov
stos
mov
lahf
rorl
xor
mov
fisubrs
into
rorl
ret
lahf
mov
sub
mov
fcmovbe
fs
in
mov
fwait
in
mov
mov
inc
xchg
push
sub
push
mov
cmp
adc
pop
xor
test
xor
xchg
cmp
lods
stos
ret
outsb
inc
pop
fwait
adc
or
mov
xchg
cmp
mov
mov
cmpsb
out
mov
stos
loop
scas
pop
fisubrs
cli
and
mov
sbb
std
mov
xchg
xor
mov
stos
mov
pop
pushf
adc
or
mov
add
push
dec
sub
icebp
fsubl
xor
fwait
cmc
punpcklbw
iret
jg
nop
push
cwtl
orl
cmp
mov
mov
sti
mov
mov
mov
scas
and
out
sub
xor
or
das
das
mov
adcl
xor
mov
mov
and
add
jnp
adc
les
cmpsl
xchg
mov
aad
lods
sbb
pushl
xor
and
pop
mov
lret
movl
fwait
outsb
push
dec
inc
inc
leave
sub
mov
mov
into
into
scas
scas
sbb
outsl
pop
out
lods
dec
leave
sub
icebp
adc
arpl
mov
xor
xchg
cmp
popa
sbb
sbb
movsb
cmpsb
pop
adc
and
mov
cmp
mov
cmpsl
in
mov
mov
mov
mov
sahf
cmp
mov
scas
scas
sbb
mov
inc
outsl
sbb
insl
mov
mov
sub
mov
and
sbb
add
pop
mov
imul
fninit
js
pop
pop
mov
mov
das
mov
lret
stos
outsl
cmp
mov
sbb
mov
pop
ret
push
sub
mov
mov
mov
cs
mov
mov
ss
add
dec
stos
pop
lds
cmp
lods
mov
cvttps2pi
push
fisubrs
fidivs
arpl
cmp
cmpsl
pop
das
mov
mov
xor
cmpsl
mov
mov
arpl
fsubr
lods
pushf
mov
out
mov
rorb
pop
cld
movsb
repz
outsl
cmc
iret
sbb
nop
mov
xor
or
ficoml
das
mov
push
mov
xor
push
adc
add
stos
pextrw
das
mov
cmpsl
or
es
xor
pop
pop
mov
push
daa
mov
mov
mov
ficoms
mov
mov
out
dec
in
sub
jmp
sbb
pop
inc
mov
in
push
push
add
fs
mov
sub
mov
sarb
out
cli
jb
int3
arpl
fldcw
test
ret
imul
mov
lods
ja
jmp
repnz
mov
aas
add
xor
xor
incl
stc
dec
or
cs
mov
fs
lea
mov
mov
scas
fdivrs
ljmp
loope
mov
int3
and
xor
testl
enter
jnp
clts
jbe
xor
lret
cmp
mov
xchg
aas
add
mov
cmp
mov
add
pop
shlb
ret
leave
imul
mov
je
jnp
addr16
cmp
mov
ret
ret
imul
mov
inc
lods
loopne
mov
push
movsb
mov
ret
das
in
std
or
gs
lock
call
cmp
inc
aaa
clc
dec
and
jl
out
mov
iret
aas
add
xor
or
movsb
sarb
fisttps
aas
inc
lock
mov
mov
cld
jnp
das
stc
dec
fstpt
inc
das
push
lods
lock
xor
in
cli
dec
mov
outsl
sti
scas
out
jnp
movsw
inc
hlt
fneni(8087
fld
cs
insb
cmpsb
mov
sti
inc
in
daa
decl
sub
xchg
in
lret
jb
neg
pop
xor
or
cmpsl
repz
sarb
cltd
lods
imul
lods
sbb
iret
dec
mov
xor
mul
pusha
xlat
mov
testl
mov
mov
pop
in
pop
insl
and
dec
cli
push
fs
scas
in
sub
dec
fmul
aas
aas
clc
jb
jbe
sti
dec
js
dec
xor
jg,pn
loop
mov
js
imul
pop
mov
movl
out
fldenv
std
dec
aad
pop
xor
das
xor
aas
sti
pop
and
scas
ret
jo
rcrb
int
cmp
mov
push
cmp
jecxz
cmp
push
call
jo
das
or
nop
inc
arpl
push
xlat
cmp
dec
aam
cmc
dec
xorl
arpl
pusha
push
int
xchg
cmp
xor
dec
push
inc
and
inc
mov
xchg
xchg
inc
out
xchg
push
adc
and
sbb
pop
scas
ljmp
cmp
cmp
inc
lahf
jmp
sti
sar
cwtl
loope
jmp
fcmovu
sbb
in
fxch
scas
into
aas
ret
lret
repnz
dec
fidivl
sub
push
inc
mov
inc
dec
add
sub
aaa
arpl
or
jo
std
sub
incb
push
addr16
mov
in
in
cmp
shll
lds
cmp
sbb
in
rcrl
test
jae
insl
jge
ret
xchg
xlat
xor
cmp
bnd
fidivrl
fisubrs
pop
pinsrw
ret
jp
mov
dec
xchg
into
mov
sub
sbb
mov
pop
jns
or
outsb
mov
iret
mull
sub
cltd
iret
rorl
aam
jb
pusha
mov
cmpsb
push
stos
sbb
dec
add
xchg
outsl
cmp
xor
outsb
shll
and
stos
insb
scas
cmc
int
pop
aad
int
cmp
mov
mov
push
movsl
xlat
rcrl
xchg
out
xlat
ret
mov
mov
dec
sti
and
or
add
mov
shlb
xor
mov
pusha
mov
jp
mov
test
dec
ss
mov
xor
inc
mov
scas
inc
loop
out
jb
shrb
xor
inc
inc
mov
lods
cmp
jmp
jae
jecxz
repnz
shrl
scas
ret
imul
lret
adc
test
or
mov
adc
bound
inc
out
lds
xchg
mov
xor
cs
sub
jo
cmp
mov
pushf
jno
xor
insb
pop
sub
xor
fsubl
jae
in
or
lret
push
cltd
pop
mov
fnstcw
mov
stos
jne
cmpsb
xor
mov
push
outsl
loopne
in
clc
into
dec
mov
dec
mov
enter
xchg
jne
inc
xor
das
sub
dec
fcmovnb
out
inc
fcmove
push
outsb
push
and
cli
mov
lods
bound
lahf
xlat
mov
and
insl
xor
in
lret
popa
adc
popa
in
or
mov
fiaddl
aaa
and
les
jge
insl
push
mov
test
cmp
imul
sbb
sahf
les
sbb
sti
push
cmp
ljmp
cmp
daa
and
cli
sbb
mov
imul
sbb
maxps
xchg
mov
fadd
iret
xor
int
inc
shrb
popf
mov
femms
adc
pop
adc
ror
bound
inc
sbb
inc
int
xchg
xchg
dec
mov
inc
mov
mov
mov
sbb
sub
push
jge
lret
dec
xor
jo
iret
and
out
mov
mulb
movsb
jo
ret
ljmp
dec
xor
mov
mov
cltd
xor
jns
stos
jle
adc
pop
ds
mov
xchg
jae
jmp
fs
mov
push
fsubp
arpl
push
inc
jge
sti
or
or
jbe
jecxz
mov
xchg
and
dec
testb
sub
xlat
pop
mov
push
je
rorb
test
or
cmc
in
cmp
mov
fistl
stos
insl
dec
sub
mov
jmp
test
and
push
mov
shll
in
jae
lret
push
add
arpl
jmp
leave
das
cmpb
mov
cmp
xchg
inc
mov
jbe
xchg
xchg
fisubrl
mov
mov
cmp
inc
cmc
scas
lea
aad
fstps
inc
adc
outsl
mov
mov
mov
inc
cmc
push
jle
sub
cmp
inc
lahf
ja
icebp
jnp
mov
fidivs
push
pop
hlt
mov
mov
shrd
mov
jmp
fxsave
mov
mov
in
scas
loope
call
add
fisubrs
mov
add
push
or
and
orl
sahf
test
stos
sbb
lcall
sahf
int
xchg
rolb
popa
movsl
sbb
std
rorl
sbb
mov
dec
mov
sbb
push
xchg
pusha
mov
cmp
or
inc
and
pop
leave
inc
cmpsl
mov
push
dec
sbb
mov
xor
jne
sbb
in
movsl
cs
push
inc
inc
xor
pop
jp
push
jge
cmpsl
cli
pop
sarb
out
imul
es
in
pop
sbb
sti
ret
jo
repz
pusha
push
dec
fiadds
bound
lea
leave
lret
inc
sbb
sbb
movsb
jl
iret
cmp
xor
mov
mov
popf
mov
fwait
xorl
mov
int3
mov
loop
arpl
adc
enter
ja
fldcw
xor
pop
push
int
out
movb
ss
and
sub
loopne,pn
sbb
shlb
clc
push
xor
add
push
mov
int3
dec
jecxz
mov
mov
push
mov
fisubl
mov
mov
or
das
inc
imull
jecxz
loopne
dec
fmul
pop
rorb
sbb
fidivl
cmpsl
jae
pop
push
ss
xchg
scas
dec
fisttpl
testb
mov
dec
ljmp
and
fsub
or
pop
dec
jecxz
xchg
stc
fcomp
adc
mov
xlat
mov
or
popf
fnstsw
cmpl
jle
jb
mov
loopne
push
adc
xchg
leave
in
push
inc
inc
jmpw
pop
lods
mov
mov
and
lock
out
scas
les
or
sti
scas
sub
cmp
pop
shll
mov
push
inc
into
jae
mov
adc
adc
push
ds
pop
sti
or
imul
in
js
mov
cmp
in
cmpsb
addr16
ss
xor
icebp
and
sbb
scas
idivb
stos
xchg
rcpps
mov
cmp
aam
pop
and
or
cs
cmp
xor
push
frstor
adc
xor
xchg
xor
es
sahf
pop
sbb
test
fsubrl
test
ret
and
out
scas
lods
call
out
popa
and
mov
lret
mov
adc
addr16
test
xor
in
push
lds
insb
ja
hlt
inc
ds
jl
aas
mov
scas
add
jl
mov
test
inc
fmul
fcompl
loope
gs
mov
mov
popa
lds
push
movsl
xor
pop
aaa
adc
cmovg
ficomps
mov
inc
jno
into
mov
mov
mov
cli
repz
jecxz
bound
mov
push
mov
jl
cmpsl
shrb
movsl
test
les
shr
cmp
loop
jb
lods
adcl
stos
jp
lret
inc
adc
pop
sbb
leave
sar
xchg
xor
push
ror
in
add
jmp
fcoml
inc
roll
mov
jl
cmpsl
loope
or
fsubl
pushf
outsl
lret
in
pusha
test
rolb
and
int3
test
cmp
and
xor
cmp
ds
push
and
les
stc
into
mov
lds
mov
aam
push
mov
repz
jo
xorb
xorl
scas
out
leave
mov
mov
mov
scas
sub
fimull
pop
in
inc
and
sub
push
cmp
mov
push
inc
pop
shr
sbb
mov
in
sarl
mov
mov
aam
mov
pushf
pop
add
test
cmp
lret
ret
lret
inc
and
xor
jnp
mov
insb
ss
mov
xor
pop
pop
inc
jmp
mov
cmp
ret
mov
ss
cmp
scas
out
mov
rorb
sub
leave
lock
cmpsl
int
xor
and
adc
dec
pop
xor
gs
sbb
fsubl
in
in
xor
dec
fistpll
push
icebp
pusha
mov
add
scas
rcrb
lock
jbe
dec
mov
push
push
sub
push
pop
in
imul
aas
and
fbstp
adc
mov
push
out
mov
mov
test
shll
lock
inc
ss
xchg
ss
cmp
aad
sub
fdivrl
and
jbe
cmp
mov
fildl
out
aam
int3
rolb
sbb
mov
cmp
in
sub
mov
imul
lret
xchg
mov
pusha
test
int
hlt
daa
pop
cmp
sarl
push
aad
mov
test
int3
in
sub
dec
lods
cmp
mov
mov
cmp
je
cmp
push
push
mov
mov
adcl
test
adc
iret
inc
mov
inc
pusha
ss
cld
scas
les
enter
lds
mov
push
mov
add
sub
xor
aad
psllq
in
sarl
scas
lods
andps
fdivrl
mov
mov
xor
in
arpl
sbb
inc
jp
pushf
sub
adc
repnz
fmull
mov
xorb
xchg
fst
cmp
into
mov
sahf
ret
mov
inc
pop
subb
mov
or
ds
adc
lods
xchg
cmp
int
push
lds
fadds
push
daa
jbe
sar
xor
mov
inc
mov
cltd
jnp
fdivrs
pop
js
ja
mov
out
lods
mov
push
mov
inc
movl
cmp
in
mulb
or
cld
ficoms
xor
repz
cmp
jl
aad
insb
mov
imull
fstpt
xor
les
sarl
gs
divl
cmp
shl
pop
and
or
popa
outsl
into
fsubrl
lds
mov
mov
scas
sti
dec
lds
and
addr16
out
aam
pop
sub
mov
sub
jne
dec
push
push
and
or
mov
and
sub
mov
jp
push
push
mov
jo
sahf
add
roll
xor
test
int3
and
aas
jecxz
jp
push
test
aas
inc
mov
push
adc
into
pusha
shrb
sub
mov
jb
notl
std
adc
xchg
pop
daa
push
mov
stos
aam
out
jle
rolb
adc
into
adc
adcl
aam
into
sbb
jecxz
jge
and
pop
mov
mov
dec
outsb
fs
jp
jmp
lods
cs
cwtl
adcb
lahf
js
enter
and
int
inc
cmp
test
or
mov
xchg
test
mov
cmpsl
push
rcrl
and
jl
add
xchg
dec
mov
mov
add
push
adc
or
leave
pop
push
inc
ret
or
hlt
lods
outsb
std
sbb
out
mov
cmpsb
in
test
and
dec
lods
ret
and
xchg
adcb
scas
out
jno
push
ljmp
fisubl
lds
mov
push
arpl
les
adc
add
jl
mov
dec
adc
aas
sbb
arpl
or
shlb
shrb
xor
pop
fbstp
orl
dec
mov
lods
xchg
and
int
rep
and
daa
dec
push
mov
les
sbb
cli
xor
mov
dec
add
jg,pn
inc
pop
mov
popa
push
mov
pop
insb
xor
fisubl
pop
insl
push
cwtl
mov
mov
dec
cmpsl
dec
mov
aas
call
mov
jbe
adc
ss
mov
je
mov
es
mov
mov
insl
jmp
mov
xor
inc
adc
add
in
lods
xchg
inc
aaa
sbb
lods
iret
mov
js
int
imul
mov
cwtl
lea
push
cmp
es
shrl
add
add
jns
fisubrl
add
jecxz
xor
inc
jecxz
scas
pop
outsl
xchg
int
cs
out
push
lods
pop
sbb
mov
loop
xlat
add
and
ss
adc
cmpsl
repnz
mov
test
lret
sti
push
dec
arpl
arpl
ret
mov
ret
mov
add
inc
leave
mov
ret
add
xchg
sbb
push
lods
idivl
in
mov
jg
dec
sbbl
dec
not
and
xchg
xor
jecxz
jp
repz
or
xor
arpl
sbb
or
mov
sbb
inc
add
cli
pop
fcomi
daa
aaa
scas
out
inc
daa
add
fmulp
lods
pop
cmp
fcomps
iret
xor
dec
into
test
xor
movl
mov
mov
mov
sbb
aas
je
mov
cltd
add
xchg
je
scas
push
mulb
repz
push
mov
test
cmp
dec
jnp
cld
mov
hlt
shr
aaa
and
shll
inc
xchg
aas
jno
or
lods
dec
xchg
or
sbb
jp
mov
dec
rcl
dec
jle
movl
inc
fsts
btc
imul
jbe
adc
mov
outsb
push
jmp
rolb
mov
int
mov
sub
sub
imul
xor
insl
sbb
lret
dec
inc
xorb
adc
cmp
fstl
dec
sbb
pop
pop
mov
or
sti
enter
lret
enter
cmp
je
mov
adc
ret
test
clc
push
mov
fbstp
pop
pop
dec
sti
mov
movsl
mov
stc
fwait
movsb
pop
push
mov
jg
jbe
insl
ret
xchg
add
mov
mov
imul
xor
and
int
dec
shll
mov
mov
pushf
jecxz
mov
fisubrl
mov
mov
and
ret
sbb
adc
sbb
stos
andl
movsl
cmp
sbb
bound
ljmp
inc
pop
and
ret
arpl
jo
mov
push
cmp
sbb
mov
sahf
sbb
imul
adc
inc
sub
mov
test
jbe
scas
sbb
dec
push
ss
mov
push
gs
stos
sbb
mov
fsubl
mov
dec
dec
fwait
sbb
xor
fistps
out
push
push
scas
sub
mov
push
cwtl
dec
outsl
jge
jecxz
mov
mov
test
sbbb
and
mov
imul
fisubrs
and
sbb
in
add
clc
mov
outsl
xor
and
mov
mov
push
cmp
sbb
pushf
pop
dec
dec
loop,pn
or
mov
or
mov
ret
lahf
jns
mov
cmp
andb
ljmpw
and
stc
pop
testb
rcrb
call
std
scas
ret
enter
je
push
repz
push
inc
movsl
cmp
push
xchg
add
push
fwait
push
jnp
insl
dec
xchg
std
or
fwait
xchg
stos
lret
xor
jmp
push
xor
cmp
and
mov
cmp
loop
pop
add
cmp
push
pop
mov
inc
cmpsl
push
sub
inc
or
jb
test
movsl
sub
adc
push
jp
cmp
adc
xchg
decl
xchg
add
ja
adc
lret
ljmp
icebp
pop
pop
in
dec
dec
stos
mov
stc
or
test
cmp
xor
inc
or
or
pop
addr16
push
sub
aam
daa
je
out
aaa
mov
test
rcrl
mov
inc
sbb
pop
push
aam
dec
xlat
lock
xchg
orb
adc
imul
pop
fisttpll
xor
out
mov
divl
dec
inc
hlt
inc
lahf
sbbb
les
mov
jns
stos
jg
push
cmc
stos
jb
jmp
lret
arpl
insb
inc
mov
aas
push
popa
lods
lret
outsb
adc
push
dec
mov
daa
mov
notb
xor
sbb
inc
mov
or
pushf
adc
xor
cmp
movb
adcb
rcll
adc
sub
lea
lret
sbbb
jle
mov
ss
out
mov
loopne
out
imul
xlat
mov
dec
push
sbb
aaa
testb
stc
ds
fimuls
pop
or
ret
pop
mov
sti
inc
xchg
repz
adc
add
daa
mov
or
xor
rcrl
mov
fistl
leave
out
aam
mov
sub
inc
mul
loopne
ds
mov
mov
aas
mov
dec
lcall
fwait
or
jnp
xor
push
xchg
ja
rcl
mov
enter
insb
rcrl
sbb
notb
cmp
fs
andb
cmp
jno
ja
ss
and
xchg
insl
inc
int3
xchg
dec
sub
sbb
lahf
adc
mov
jnp
xchg
call
xlat
inc
mov
dec
mov
lock
lahf
pop
xor
cmp
jbe
sahf
xchg
mov
lret
ds
push
add
cmp
push
cmpl
push
mov
xchg
adc
out
ljmp
in
mov
push
mov
dec
fstps
mov
sarb
gs
out
pop
push
adc
sahf
insb
rolb
mov
xor
aad
cli
xor
push
fisubrl
das
or
mulb
push
or
ficomps
out
enter
sti
push
sahf
fstpt
xchg
xchg
outsl
cmc
jo
adc
pop
shr
in
push
jno
leave
jbe
cmp
dec
lods
xchg
mov
popf
ret
cmp
adc
cmp
iret
scas
das
repz
es
pop
cmp
out
test
int3
xchg
xchg
push
gs
or
sub
ljmp
mov
adc
int3
sbb
xor
aam
adc
ds
push
sub
sahf
iret
lcall
cmp
mov
push
xchg
push
add
pop
xchg
pop
scas
xor
cmpsl
je
fdivrs
bound
mov
sub
cmp
and
inc
adc
inc
shrl
cltd
mov
jecxz
arpl
jmp
sahf
loopne
outsb
mov
jl
sahf
pusha
aaa
add
mov
xchg
jp
push
jecxz
ja
pop
cmp
jmp
clc
sub
mov
jns
xchg
fnsave
jmp
inc
cmp
in
outsl
fistpl
dec
std
inc
inc
outsb
mov
sbb
movsl
sbb
fcmovne
push
and
cmpsl
imul
xchg
inc
mov
mov
pusha
or
mov
push
pop
xchg
ret
jae
mov
sub
enter
mov
fdivrl
movsb
sbb
xor
pop
outsb
fwait
sahf
mov
inc
lds
scas
sbb
jle
sub
pop
iret
stos
xchg
test
scas
adc
shr
mov
mov
fisubrl
or
dec
lock
jp
int
cs
dec
xchg
push
pop
repnz
lea
and
stos
add
call
pusha
cmp
mov
cmp
cld
into
jp
mov
mov
in
push
mov
pop
mov
ja
push
lds
int
in
and
mov
xor
push
pop
pusha
mov
mov
pushf
mov
xchg
mov
ret
lahf
mov
sub
repnz
xchg
pop
fcoml
xchg
iret
mov
imul
lock
dec
push
lret
or
jo
mov
mov
mov
imul
cli
mov
and
jb
aas
arpl
out
in
mov
inc
sbb
clc
push
jno
roll
pop
mov
adc
aas
negb
shlb
sahf
into
add
ficompl
pop
in
in
mov
ret
push
cmp
lods
mov
pop
fstpl
rorb
fldenv
mov
push
in
ret
cltd
sbbb
add
and
jae
in
int3
dec
pop
stos
cld
inc
mov
push
popf
in
mov
mov
test
push
or
lret
lods
cltd
sbb
retw
sub
rclb
insb
or
cmpsb
push
and
and
in
sub
stos
cli
xor
cs
lods
mov
mov
dec
xor
lods
sbb
mov
aad
cld
ret
and
hlt
push
or
stos
dec
call
xchg
xchg
and
mov
add
das
dec
cld
cmp
dec
cli
popa
pusha
add
push
std
inc
xorb
pop
lods
sbb
jae
outsb
sub
pop
xor
inc
inc
shrl
xor
mov
sub
and
rorb
cmp
lods
in
jns
xor
lea
ljmp
pop
xchg
and
push
popa
xchg
aam
lcall
hlt
cld
mov
ret
jb
mov
adc
xchg
adc
aaa
mov
pusha
lds
mov
cs
mov
mov
inc
pop
mov
cs
pop
lods
add
ret
cwtl
mov
repz
js
lahf
or
add
mov
mov
jmp
push
jg
dec
out
stos
fidivrl
adc
add
mov
rcl
iret
mov
push
and
push
jns
dec
popa
pushf
adc
out
lcall
scas
push
and
sbb
pop
lret
pop
scas
sub
popf
push
je
cmp
mov
mov
rcrl
push
or
popf
sub
jecxz
gs
sahf
addr16
or
mov
pop
sbb
mov
insl
or
ljmp
and
outsl
mov
xchg
inc
push
xor
lock
or
aas
iret
adc
into
loop
and
enter
shrl
lahf
repnz
rcrb
or
cmc
cmpb
dec
and
mov
pop
and
pusha
push
and
scas
inc
out
arpl
out
mov
jb
xlat
cmp
mov
inc
jle
shrl
scas
loopne
and
inc
xchg
pop
push
fneni(8087
xlat
repnz
adc
ret
out
jl
aad
add
mov
mov
xchg
adc
dec
jne
shrb
jns
rorl
and
adc
inc
push
add
xchg
xchg
mov
jle,pt
push
loopne
ret
fucomip
jb
negb
inc
jne
fmull
cmp
xor
xor
ss
xchg
enter
imul
pop
dec
incl
fldcw
outsl
addr16
int3
cmp
cmp
add
cmp
arpl
imul
cmpsb
mov
jb
mov
fcomip
jb
mov
xor
stos
inc
sub
pushl
in
mov
aas
add
enter
aaa
push
or
mov
adc
repz
mov
mov
push
fdivp
insl
sbb
cmpsb
int
mov
pop
push
shrb
xor
push
loope
enter
andps
scas
mov
idiv
pop
xchg
movsl
jecxz
sub
ds
hlt
jb
aaa
push
xchg
fcomi
aam
push
jo
leave
lret
fsubrp
sub
adc
sbb
push
aaa
or
daa
lret
push
mov
mov
shlb
rcr
push
iret
or
lret
cmp
push
cmp
std
xchg
fiaddl
rcll
or
mov
xchg
scas
jecxz
jmp
mov
adc
repnz
sbb
addl
fisttps
int
add
fsubl
pop
adc
cwtl
mov
push
mov
lods
push
adc
shl
push
ljmp
or
sub
pop
int3
insb
jmp
sub
adc
xchg
xor
xchg
mov
cmc
mov
mov
mov
aaa
ds
out
in
sbb
or
mov
ljmp
shrl
aas
arpl
repz
inc
testl
out
pushf
popa
mov
arpl
clc
shl
push
lods
ja
fucomip
sar
testb
inc
mov
lea
shrl
fadds
or
or
mov
in
xor
repnz
pop
push
sub
push
jno
enter
and
outsl
out
lods
and
aas
adcl
push
jbe
pusha
mov
dec
push
inc
push
les
mov
push
mov
test
jb
xchg
out
cmpsl
inc
outsl
movsl
lret
xor
insb
rcr
int3
nop
sub
or
xor
or
push
lret
out
jmp
xchg
push
mov
add
push
jp
or
cmp
pop
fdivrs
inc
nop
sub
adc
rolb
or
and
mov
cmp
cmc
repnz
xchg
lock
and
jo
xlat
insb
or
aas
mov
mov
xlat
add
adc
les
mov
push
jle
lock
movsl
pop
inc
jg
xor
push
je
dec
je
int3
imul
aas
mov
jns
pop
cmpsb
pop
je
jmp
xchg
cmp
xor
negb
shr
xor
shl
jbe
cmp
test
dec
cmp
xchg
sub
leave
aas
arpl
xor
cli
mul
add
xchg
cmp
or
inc
fadd
lret
cmp
add
push
pop
stc
repnz
mov
cmp
test
and
addr16
adc
sub
adc
filds
push
xor
sbb
mov
scas
xchg
cmp
adc
loope
jle
push
xchg
cmp
mov
push
call
iret
imul
xor
adc
fisttps
jae,pn
jbe
mov
add
or
mov
lcall
add
ds
out
shl
xchg
jl
addr16
aaa
fbstp
aas
mov
xchg
lret
add
xchg
sub
push
aam
imul
mov
shrl
in
mov
inc
fcomip
repnz
subl
lods
loope
mov
xchg
lds
mov
push
xchg
xchg
dec
movb
cmpl
rcr
push
mov
inc
mov
test
jle,pt
xlat
lret
dec
lods
and
dec
cltd
les
xorl
adc
jbe
loopne
push
sub
sti
push
xor
cmp
pop
jmp
inc
mov
repnz
xor
push
mov
imul
fistpll
int
jmp
aas
add
cmp
or
mov
or
arpl
addr16
push
stos
ret
mov
cli
adc
jb
pop
dec
ljmp
outsb
gs
das
int3
cmp
xchg
insb
add
aas
jecxz
rcll
push
fbld
xor
mov
pop
aam
fdivrl
jne
and
in
jo
adc
xor
test
dec
mov
mov
int3
ss
out
inc
push
mov
adc
ja
bound
mov
adc
push
jmp
xchg
cmp
push
and
sub
insb
xor
test
int3
sub
aas
ret
adc
rcrl
jbe
and
xchg
xor
add
mov
aad
xorl
xor
push
test
adc
idivb
fldt
dec
sub
pop
mov
leave
int3
push
adc
and
xchg
xor
adc
cmc
mov
jle,pt
lock
repnz
repz
int
inc
mov
and
rolb
xlat
adc
push
push
inc
int
jmp
push
jne
and
add
out
movsl
idivl
les
mov
cmp
int3
push
fidivrs
jecxz
sub
pusha
shl
xchg
pop
data16
insb
mov
icebp
sbb
cmc
mov
leave
mov
mov
push
mov
rcr
outsl
push
push
mov
xor
daa
into
mov
inc
push
jecxz
movl
push
aam
add
adc
in
mov
stos
aaa
dec
aas
cmc
xor
push
std
bound
fisubrs
dec
insb
and
inc
ret
fdivrl
add
loop
shll
xor
insl
rolb
pop
adc
icebp
mov
inc
mov
dec
mov
ret
les
xorl
or
cmp
addr16
rol
out
mov
call
mov
push
icebp
push
in
mov
je
dec
xor
mov
or
iret
aas
mov
push
enter
aas
xlat
adc
fnsave
addr16
mov
sahf
mov
stos
aaa
inc
adc
aad
inc
test
aas
filds
aas
mov
jbe
add
adc
pop
or
dec
sarl
xchg
test
push
jle
lock
ficoml
mov
inc
mov
lret
dec
in
and
andl
lods
adc
inc
adc
mov
xchg
aad
sub
insb
xor
mov
push
lods
arpl
in
loopne
mov
adc
notb
cmp
das
lods
decl
fnstcw
mov
mov
add
pop
je
jge
cmpsl
loop
pop
adc
in
sahf
call
fbstp
mov
shrb
int3
and
jns
fldt
ds
and
rol
cs
add
xchg
mov
ret
cld
push
push
mov
push
pop
add
adc
mov
fcomps
sub
in
and
mov
arpl
pusha
shll
and
mov
daa
lock
push
xor
loope
push
out
jecxz
mov
jb
into
xor
movsl
fisubrl
cmp
out
dec
xor
aas
add
sub
fdiv
ds
std
dec
adc
es
out
mov
mov
out
fidivrs
mov
xor
xor
lret
jmp
out
and
lock
adc
mov
ja
pop
hlt
std
ja
cmpsl
out
jl
mov
add
divl
fdivp
mov
mov
push
pop
cmp
add
cmp
jne
lds
inc
adc
push
iret
pusha
mov
pop
aam
xchg
mov
loop
imul
shl
mov
ja
jmp
adc
push
orb
dec
sub
lahf
add
aas
arpl
jae
push
lret
mov
or
gs
and
lret
idivb
push
call
pop
push
lahf
push
stc
divb
test
outsb
inc
lret
or
dec
xor
or
loopne
add
sub
test
les
xor
clc
insb
lds
std
jl
aad
ret
movsl
add
push
mov
shl
negb
or
sub
pop
jnp
fisubrs
int3
aas
ret
lock
add
daa
pop
add
push
inc
and
lret
push
in
fistl
xchg
push
pop
lock
fcmovnbe
and
push
andb
or
and
lods
sarl
adcl
push
push
pusha
enter
jbe
daa
out
dec
mov
add
out
pop
mov
push
jmp
fidivrs
outsl
cmpsl
jle
push
lds
and
and
add
pop
xor
loopne
leave
in
push
out
push
ljmp
mov
jbe
orl
int3
das
pop
jg
lds
loope
adcl
or
or
das
testl
lret
daa
jmp
xchg
cmp
in
xchg
mov
sar
jbe
jg
test
and
jmp
aas
ret
push
sub
add
mov
adc
mov
std
cld
pop
jne
mov
sahf
sti
shl
xor
push
cmc
ss
insb
adc
shr
aad
mov
push
loopne
mov
bound
pop
push
cmc
mov
mov
push
mov
push
pop
add
not
call
or
insb
cmp
xchg
dec
aas
and
and
pusha
aad
into
push
ret
fcoml
mov
jmp
push
cld
xor
rol
xchg
pop
mov
xor
sub
ljmp
ret
insb
mov
push
sbb
xor
add
cli
mov
jb
adc
cmp
test
mov
sbb
sbb
or
or
arpl
mov
xlat
insb
sbb
cwtl
les
cmpsl
jb
js
scas
in
outsb
sbb
out
lcall
sarb
lea
cld
out
mov
mov
int
test
out
xchg
pop
xor
lcall
push
mov
mov
mov
mov
cmpsl
hlt
jae
dec
in
cld
iret
lods
xor
jp
jbe
cld
sub
inc
adc
dec
sbb
cmp
addr16
sub
outsl
sub
test
xor
out
test
popa
scas
xchg
or
xchg
call
ds
jp
movsl
pop
repnz
cmpsl
mov
mov
cmc
ret
adc
jno
bound
test
mov
add
push
fwait
inc
mov
mov
clc
push
adc
add
btc
mov
fistpll
ret
and
or
fwait
jl
jo
mov
in
mov
jmp
xlat
pop
cltd
pop
mov
inc
mov
test
jecxz
mov
pop
mov
das
and
in
jb
fsubrs
mov
shr
daa
fidivrs
xor
fistps
and
mov
mov
mov
clc
mov
push
les
jg
scas
frstor
mov
ficomps
xchg
lret
xlat
xchg
xorb
cmp
pushf
sub
add
mov
aas
test
sarb
adc
call
xlat
mov
in
sti
dec
fcmovbe
xchg
push
cmp
mov
push
mov
movsb
aas
pop
lods
ds
jge
fisttpll
aas
inc
xor
xor
ja
das
inc
dec
out
sbb
aad
cmp
sbb
mov
or
loop
scas
mov
out
inc
mov
ja
xor
int3
xor
cmp
cs
push
dec
cli
xchg
sbb
decl
and
pop
mov
mov
jle
jbe
ror
and
jo
push
mov
ja
mov
xchg
push
dec
aam
adc
pop
fcompl
mov
fdivrl
push
fadds
xor
leave
daa
and
mov
in
fnstenv
rol
divb
jmp
mov
daa
or
push
jbe
pushf
ret
jbe
mov
and
or
dec
push
stos
sti
inc
ret
xchg
movsb
cmp
mov
jno
int
aam
adcb
mov
or
push
sbb
aad
cmp
mov
inc
mov
xchg
jne
nop
cmpsl
dec
and
push
or
xchg
xchg
sbb
popf
test
scas
mov
pushl
test
shll
push
and
add
iret
rcrl
and
in
jecxz
fists
mov
jg
loopne
mov
rol
sbb
cmpsb
jp
push
call
shrl
das
jl
dec
repz
dec
daa
mov
dec
push
push
dec
rol
and
push
fildll
inc
mov
sub
fcoms
xchg
out
clc
lds
outsb
cwtl
sti
pop
dec
js
push
fbld
in
mov
into
mov
jne
push
ret
and
sbb
or
xchg
and
lods
mov
lock
or
cmpl
ret
aad
sub
xor
inc
test
mov
adc
inc
xchg
insl
xor
or
sub
and
mov
imul
sub
pop
cmc
test
mov
aas
push
cs
aam
dec
loopne
and
cmc
xchg
mov
mov
xchg
mov
in
ljmp
enter
lahf
jp
mov
push
testb
sbb
xchg
loope
aas
xor
or
jnp
imul
scas
pop
shlb
xor
pusha
scas
lret
sub
bound
insb
xor
or
divl
sbb
ret
mov
xlat
sahf
xor
outsb
mov
mov
pop
jo
aas
int
aam
dec
ss
mov
pop
popa
jns
mov
outsl
das
pop
test
loop
nop
shrb
add
sahf
and
fimuls
push
fsubl
sbb
mov
imul
daa
aaa
shrb
aad
jmp
jne
push
add
or
jbe
imul
out
jns
cmpsb
mov
inc
add
jne
sbb
xchg
out
ds
mov
xchg
sub
ss
hlt
dec
mov
arpl
jle
loopne
lahf
push
mov
xchg
cs
xor
and
sub
and
ljmp
aam
lds
loop
or
adc
fidivs
mov
std
arpl
push
cmpsl
jbe
out
movsb
mov
xor
lock
mov
mov
jp
mov
or
push
and
mov
lahf
mov
out
divb
nop
loope
or
addl
fadd
pop
xchg
sbb
jg
mov
popa
add
sub
sar
fidivrl
inc
ret
fsubs
and
adc
fisubrs
lds
sub
cmp
cld
das
addr16
add
ffree
xchg
adc
adc
or
sbbl
in
cs
pop
stos
jnp
fisubrl
pop
mov
jmp
push
mov
cmp
pop
pop
mov
shlb
addr16
stos
push
test
add
pop
sbb
icebp
jo
scas
jb
lret
mov
adc
cs
repnz
xchg
adcl
lret
mov
lea
cmp
in
jle
inc
icebp
cmp
jg
jg
lahf
cmp
insb
inc
insb
mov
insl
mov
cmpsl
jne
adc
out
lret
adc
mov
push
xor
js
adc
xor
iret
mov
bnd
push
pop
cmp
or
cmp
mov
lcall
sarb
aaa
lods
jns
cmp
cs
xchg
adc
ljmp
mov
addr16
cs
subl
rcrb
mov
or
cmp
aam
xchg
pand
jo
in
mov
fsubrs
pushf
icebp
fldt
imul
adc
mov
fdivrl
jmp
cmc
dec
int
aam
push
sub
ret
jnp
dec
jae
repz
ds
pop
jl
leave
mov
int3
stc
data16
aad
mov
adc
pop
cwtl
data16
pop
mov
adc
das
cmp
cmp
fisubs
inc
push
and
and
lret
mov
rcll
mov
cmc
mov
add
adc
mov
jae
jp
pop
leave
jp
outsb
in
sub
push
or
nop
pop
xchg
inc
jo
ljmp
and
mov
jns
scas
xchg
sbb
std
fnstcw
out
cs
and
jge
mov
stos
test
negb
mov
mov
bound
mov
out
test
jg
outsl
pop
add
scas
mov
push
into
push
nop
mov
xor
add
mov
repz
xor
xor
and
out
cmp
add
popf
mov
in
push
arpl
scas
push
icebp
fidivrl
les
fcmovb
stos
lds
int
call
js
lret
fs
adc
jge
mov
dec
sarl
sub
outsl
stos
rolb
dec
imul
shll
push
lock
roll
test
jl
test
push
sub
pop
mov
out
pop
rcrl
cld
fadds
push
adc
cmp
inc
push
push
adc
xchg
loope
jp
mov
data16
imul
andl
xchg
push
add
lret
aaa
push
mov
shrb
pextrw
outsb
cmpsl
in
cmp
and
test
add
clc
ja
adc
mov
notl
aaa
jno
mov
daa
jl
add
in
into
icebp
sarl
in
scas
scas
sbb
cltd
add
in
mov
adc
out
bound
ljmp
xchg
mov
xor
call
cmpsb
xor
cmc
jmp
sub
xor
fisubs
jae
fwait
jns
sahf
enter
das
nop
dec
mov
ds
in
jg
sbb
ffree
cmp
fisubl
mov
dec
mov
scas
cmp
push
bound
lret
adc
pop
or
out
lea
jge
dec
push
cmp
push
xchg
inc
cmp
xor
mull
stos
pop
push
movsb
call
adc
cmpsb
lret
mov
mov
push
das
fwait
xor
scas
sbb
subb
cmpsl
mov
xchg
test
in
sbb
push
inc
fwait
enter
xchg
je
fimull
mov
and
icebp
shrl
sbb
cmp
push
ret
adc
mov
push
insl
mov
popa
stos
popa
or
push
push
mov
leave
pop
scas
xor
push
adc
push
inc
enter
lret
es
cmp
jae
jns
mov
clc
and
push
pop
xchg
hlt
xor
xchg
pop
mov
lret
dec
out
xchg
loopne
in
mov
lds
xor
cmp
movsb
pop
sub
lahf
mov
loopne
sti
or
inc
pop
ffreep
sbb
cmp
cmp
daa
fxch
sbb
or
pop
ret
mov
push
mov
push
mov
push
ja
push
call
outsl
jl
sub
dec
das
jmp
data16
je
mov
scas
xorl
cmp
pop
aas
mov
push
fcoml
lcall
es
aaa
insl
fsubs
ja
jno
mov
icebp
add
dec
adc
push
nop
neg
or
mov
cli
out
mov
mov
and
jmp
jnp
mov
sbb
lods
cmpl
popa
lea
and
fisttpl
mov
in
lods
push
out
and
adc
scas
sbb
mov
in
mov
loopne
inc
mov
inc
in
add
out
popa
xchg
xor
dec
frstor
push
fwait
hlt
loop
xor
xor
xor
insl
push
dec
imul
das
mov
pop
cltd
cs
mov
bound
mov
shlb
xor
mov
sbb
cmp
into
and
mov
jb
mov
orl
test
jns
add
das
mov
or
dec
adc
cmpl
out
lahf
and
loope
inc
roll
and
aaa
fistpll
adc
mov
push
sti
addr16
lods
add
inc
lea
imul
lods
out
sub
rcrb
jb
pop
cld
cs
dec
cmp
and
cmp
flds
sub
xchg
mov
or
or
rorb
push
mov
imul
test
push
push
fcmove
mov
adc
sub
lods
fldt
outsb
adc
adc
test
push
inc
stos
jle
test
inc
hlt
out
aas
xchg
mov
xchg
sbbb
fcompl
adc
and
mov
add
xorl
or
adc
mov
push
scas
sub
jno
out
movsl
push
fwait
cmovne
push
add
pushf
leave
mov
test
out
cmpsl
push
mov
or
je
aad
jne
insb
inc
xchg
movsl
lods
popf
adc
int3
ds
sub
pop
mov
dec
pop
mov
dec
sub
aad
ret
xchg
mov
jbe
cmpsl
mov
jae
push
mov
test
cmpsb
pop
testb
hlt
ljmp
repz
mov
or
dec
mulb
pop
xchg
cmpsl
ret
xchg
ja
mov
mov
adc
lcall
inc
push
push
pop
mov
into
mov
out
fwait
mov
setp
sbb
push
call
xor
add
movsl
sbb
cs
xor
popf
shll
cmp
mov
aam
sbb
into
push
je
xor
lret
dec
xlat
adc
test
mov
fisttpll
sahf
add
cmp
mov
sbb
fisubrl
mov
test
cmp
in
cwtl
out
inc
mov
fcompl
sbbl
pop
popf
ss
fcompl
ljmp
xor
adc
add
aad
sti
push
xor
xchg
fiadds
jge
scas
movsb
xor
das
ret
das
aaa
cltd
ret
push
cmp
in
jl
out
mov
cmp
add
cmpsb
lds
push
dec
sbbl
adc
or
sub
xchg
out
testl
aas
and
pop
lods
fcomip
mov
loope
or
ja
sub
and
mov
fiaddl
cmc
test
or
sub
daa
dec
fidivs
jnp
mov
int3
and
mull
outsl
pop
xchg
push
lods
inc
xor
imul
fs
arpl
icebp
test
xchg
mov
mov
lea
cmp
roll
adc
ret
pop
and
mov
add
jno
dec
hlt
setg
aam
mov
sub
sti
iret
pop
xchg
pop
rorb
mov
mov
add
in
sub
mov
xor
mov
or
sub
push
or
push
mov
or
push
mov
mov
test
jne
mov
or
mov
cmp
je
and
cmp
jne
mov
mov
test
jne
mov
and
add
add
and
sub
test
je
mov
mov
test
je
cmp
jne
xor
mov
sub
sub
cmp
je
mov
mov
add
add
cmp
jne
sub
add
mov
cmp
je
cmp
jne
sub
cmp
jne
cmp
jne
sub
sub
and
add
xor
mov
or
sub
add
add
cmp
je
mov
mov
xor
mov
add
and
cmp
je
sub
mov
mov
mov
or
add
add
or
cmp
jne
or
mov
sub
xor
add
sub
sub
add
add
add
and
add
sub
cmp
jne
mov
sub
test
jne
mov
mov
cmp
je
sub
sub
mov
add
mov
cmp
jne
sub
cmp
jne
mov
add
add
add
mov
and
add
and
cmp
je
sub
add
sub
add
mov
sub
mov
and
cmp
je
mov
mov
test
jne
mov
xor
cmp
jne
or
sub
mov
mov
cmp
je
add
mov
sub
mov
sub
add
cmp
je
add
or
xor
test
jne
sub
mov
cmp
je
mov
mov
sub
or
add
and
mov
sub
add
and
add
add
cmp
je
cmp
je
cmp
je
mov
sub
mov
cmp
jne
mov
mov
add
add
sub
sub
sub
xor
cmp
je
mov
mov
add
add
cmp
je
mov
add
mov
cmp
jne
and
mov
mov
sub
test
je
xor
mov
cmp
je
mov
mov
cmp
je
xor
sub
add
add
sub
and
cmp
je
xor
mov
cmp
jne
sub
mov
or
mov
sub
cmp
jne
sub
or
mov
xor
cmp
je
add
cmp
jne
cmp
je
sub
mov
cmp
je
sub
mov
mov
cmp
je
mov
mov
mov
add
or
cmp
je
cmp
jne
xor
mov
sub
sub
sub
or
cmp
jne
mov
or
or
mov
or
test
je
add
and
sub
mov
or
sub
xor
mov
add
or
mov
add
mov
mov
sub
add
cmp
jne
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
mov
sub
add
add
add
sub
and
test
je
test
jne
mov
add
mov
add
or
sub
xor
cmp
jne
add
mov
mov
add
test
jne
cmp
jne
sub
mov
and
sub
xor
mov
and
and
add
or
sub
sub
add
sub
add
test
je
add
sub
sub
mov
mov
or
cmp
jne
mov
sub
test
je
mov
cmp
jne
or
or
xor
mov
sub
sub
add
add
add
mov
mov
add
mov
sub
or
sub
xor
mov
test
je
xor
add
add
sub
mov
xor
sub
sub
add
and
cmp
je
mov
sub
and
test
jne
mov
cmp
je
mov
mov
or
cmp
jne
or
sub
cmp
jne
sub
mov
mov
cmp
jne
mov
cmp
jne
sub
add
add
add
mov
mov
sub
sub
add
add
add
and
add
sub
sub
add
cmp
je
add
add
add
cmp
jne
cmp
jne
sub
test
jne
cmp
je
mov
sub
cmp
je
add
cmp
jne
mov
sub
mov
cmp
je
add
sub
mov
cmp
je
mov
add
add
mov
cmp
je
cmp
jne
sub
mov
sub
sub
mov
cmp
jne
mov
mov
add
test
jne
mov
sub
mov
cmp
jne
add
sub
cmp
jne
cmp
jne
mov
mov
cmp
jne
add
add
mov
and
add
mov
add
add
sub
sub
or
add
add
add
add
and
test
je
add
cmp
jne
mov
mov
sub
add
add
cmp
jne
add
cmp
jne
mov
mov
cmp
je
mov
add
cmp
je
sub
sub
or
mov
mov
cmp
jne
mov
add
xor
mov
cmp
jne
mov
cmp
jne
sub
add
mov
or
and
or
add
mov
and
and
or
mov
cmp
jne
xor
sub
mov
and
mov
add
add
sub
sub
test
je
cmp
je
cmp
jne
or
mov
mov
sub
sub
add
cmp
je
xor
cmp
je
cmp
jne
mov
xor
sub
cmp
je
add
mov
xor
add
cmp
je
sub
add
mov
mov
sub
add
or
cmp
jne
add
mov
mov
add
sub
or
and
add
sub
add
push
call
mov
and
or
and
mov
and
sub
add
cmp
jne
add
mov
sub
mov
sub
mov
sub
cmp
jne
cmp
jne
mov
mov
add
or
and
and
add
add
add
and
sub
and
xor
add
mov
add
mov
mov
sub
or
sub
xor
sub
add
mov
sub
mov
add
add
mov
mov
add
test
je
mov
and
mov
cmp
jne
add
mov
and
mov
sub
or
add
add
sub
mov
sub
mov
add
or
test
je
cmp
jne
xor
or
cmp
je
sub
cmp
jne
xor
xor
add
add
mov
add
sub
or
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
sub
and
and
test
jne
cmp
je
or
mov
cmp
jne
add
xor
cmp
jne
xor
mov
add
sub
mov
mov
sub
cmp
jne
add
mov
mov
add
mov
sub
mov
add
add
xor
add
add
cmp
jne
cmp
je
sub
cmp
jne
add
add
sub
xor
sub
sub
mov
and
sub
test
jne
mov
add
mov
sub
or
mov
cmp
je
add
mov
sub
add
cmp
je
cmp
je
sub
push
push
call
cmp
je
mov
mov
sub
sub
or
cmp
je
cmp
jne
sub
xor
mov
add
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
add
and
sub
cmp
je
and
xor
sub
sub
mov
or
sub
sub
sub
add
add
sub
xor
sub
test
jne
mov
mov
sub
mov
cmp
je
cmp
jne
mov
sub
cmp
je
and
mov
mov
sub
add
mov
mov
add
add
test
je
mov
cmp
jne
add
xor
add
sub
cmp
je
mov
mov
sub
sub
and
test
je
xor
and
test
jne
mov
mov
sub
add
mov
add
cmp
jne
mov
sub
mov
and
cmp
jne
cmp
jne
add
mov
sub
add
mov
sub
mov
add
sub
cmp
je
xor
mov
add
cmp
jne
cmp
jne
xor
add
mov
cmp
je
cmp
jne
add
xor
sub
mov
sub
and
or
add
sub
sub
test
je
add
cmp
jne
add
call
cmp
jne
or
cmp
je
mov
or
cmp
jne
and
mov
sub
sub
mov
mov
add
add
xor
or
mov
sub
mov
mov
sub
cmp
jne
and
mov
and
cmp
jne
mov
mov
and
sub
cmp
je
mov
sub
or
cmp
jne
cmp
jne
mov
mov
cmp
jne
mov
mov
sub
cmp
je
mov
xor
mov
add
sub
add
cmp
je
mov
mov
sub
and
sub
cmp
jne
mov
mov
xor
cmp
je
cmp
je
and
cmp
jne
mov
sub
xor
cmp
jne
mov
sub
sub
sub
mov
add
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
sub
cmp
jne
and
mov
cmp
je
mov
cmp
jne
add
cmp
je
mov
sub
mov
cmp
je
mov
xor
sub
xor
sub
sub
or
sub
add
sub
add
cmp
jne
and
mov
add
or
add
add
cmp
je
mov
add
mov
mov
add
or
sub
cmp
jne
or
push
call
xor
mov
add
add
mov
cmp
jne
mov
and
cmp
je
mov
mov
cmp
jne
mov
add
add
add
mov
cmp
jne
sub
add
xor
mov
cmp
je
mov
sub
mov
cmp
je
sub
cmp
je
mov
mov
cmp
je
add
cmp
jne
mov
sub
cmp
jne
mov
mov
add
cmp
je
sub
add
mov
and
add
test
je
xor
sub
xor
add
add
cmp
jne
mov
cmp
jne
mov
or
add
add
cmp
je
mov
cmp
jne
mov
cmp
je
sub
add
cmp
je
cmp
je
xor
mov
cmp
jne
cmp
je
sub
add
cmp
jne
test
je
mov
mov
sub
sub
add
sub
add
sub
cmp
je
mov
mov
and
add
and
sub
cmp
je
xor
push
call
or
push
call
xor
mov
and
sub
test
jne
cmp
je
cmp
jne
cmp
je
cmp
je
mov
or
cmp
je
cmp
je
mov
mov
and
cmp
je
xor
add
mov
cmp
je
sub
sub
sub
sub
cmp
jne
mov
sub
xor
mov
test
je
or
cmp
jne
sub
and
or
and
cmp
je
mov
mov
mov
mov
cmp
je
cmp
je
sub
add
sub
mov
mov
or
mov
sub
add
sub
sub
add
mov
mov
sub
sub
mov
cmp
jne
test
jne
cmp
jne
xor
or
mov
or
add
add
add
xor
cmp
je
mov
mov
sub
and
or
add
cmp
jne
and
sub
cmp
je
mov
sub
and
xor
and
add
xor
mov
add
add
add
sub
sub
mov
add
mov
or
add
sub
cmp
jne
xor
sub
xor
xor
sub
sub
and
cmp
jne
mov
mov
or
add
sub
and
add
cmp
je
cmp
je
cmp
je
cmp
je
or
xor
mov
mov
and
cmp
je
mov
mov
sub
sub
sub
mov
or
mov
sub
add
sub
or
sub
sub
add
mov
mov
cmp
jne
add
or
mov
cmp
jne
add
mov
mov
sub
add
add
sub
cmp
je
mov
xor
mov
xor
or
add
add
cmp
jne
mov
xor
sub
cmp
je
mov
add
or
mov
cmp
je
cmp
jne
cmp
jne
xor
mov
and
add
or
cmp
jne
mov
cmp
jne
mov
mov
sub
add
xor
sub
sub
add
or
cmp
jne
and
add
cmp
je
mov
mov
and
cmp
jne
cmp
je
mov
add
sub
mov
add
or
or
and
cmp
jne
and
add
and
mov
cmp
jne
mov
sub
mov
sub
add
add
add
test
je
add
cmp
je
add
test
jne
mov
sub
xor
add
sub
test
jne
mov
add
mov
add
or
cmp
jne
or
add
lea
sub
cmp
je
mov
mov
add
add
test
je
or
cmp
jne
mov
sub
mov
mov
mov
test
je
cmp
jne
sub
test
je
test
jne
cmp
je
mov
xor
xor
test
je
mov
mov
cmp
jne
sub
mov
mov
sub
sub
add
sub
xor
add
sub
and
cmp
jne
mov
mov
add
sub
add
add
test
je
mov
add
mov
sub
cmp
jne
sub
mov
mov
sub
or
mov
add
add
push
mov
add
push
mov
mov
xor
or
sub
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
cmp
je
mov
add
add
mov
sub
sub
call
test
je
mov
xor
add
sub
cmp
jne
cmp
je
sub
mov
add
mov
add
sub
and
mov
mov
and
add
shr
mov
add
test
je
mov
cmp
jne
cmp
je
and
mov
and
add
cmp
jne
mov
and
xor
cmp
je
xor
add
mov
add
add
xor
sub
add
sub
sub
add
cmp
jne
and
mov
mov
and
sub
sub
mov
sub
cmp
jne
mov
sub
xor
mov
add
cmp
jne
and
mov
mov
cmp
je
add
add
cmp
jne
sub
mov
cmp
jne
mov
add
cmp
je
and
sub
call
mov
add
mov
and
mov
mov
and
sub
cmp
je
mov
mov
mov
sub
add
cmp
jne
mov
mov
and
cmp
jne
sub
cmp
jne
cmp
je
mov
cmp
je
sub
xor
xor
add
add
add
add
test
je
add
mov
mov
mov
add
sub
add
cmp
jne
add
pushl
push
pushl
call
cmp
jne
add
mov
add
cmp
je
mov
mov
add
sub
cmp
jne
mov
and
cmp
je
mov
mov
add
add
sub
add
and
cmp
je
mov
mov
cmp
jne
mov
xor
mov
cmp
je
mov
sub
xor
sub
add
add
cmp
je
mov
sub
mov
cmp
jne
add
sub
sub
mov
mov
and
add
cmp
jne
or
sub
mov
add
add
cmp
je
mov
test
jne
mov
cmp
je
mov
cmp
jne
sub
mov
test
jne
mov
mov
cmp
jne
mov
sub
sub
add
mov
sub
sub
and
sub
cmp
jne
cmp
je
sub
mov
mov
sub
sub
cmp
jne
test
je
mov
and
xor
sub
cmp
jne
mov
and
add
mov
mov
add
sub
and
test
jne
mov
mov
and
cmp
jne
cmp
je
xor
cmp
je
mov
or
and
mov
cmp
je
mov
mov
sub
add
test
je
add
mov
and
sub
and
cmp
jne
add
mov
or
sub
addl
mov
mov
sub
sub
or
and
add
cmp
je
mov
sub
sub
mov
and
cmp
jne
xor
and
sub
cmp
je
test
je
mov
cmp
je
and
xor
sub
mov
xor
add
test
jne
add
mov
cmp
je
add
mov
add
and
mov
cmp
jne
add
sub
sub
add
cmp
jne
and
xor
mov
add
or
sub
cmp
je
or
sub
mov
mov
mov
cmp
je
sub
mov
add
mov
cmp
je
add
add
mov
add
mov
add
sub
cmp
je
mov
add
sub
add
call
mov
cmp
jne
xor
or
add
sub
mov
add
sub
cmp
je
cmp
je
mov
mov
sub
add
add
sub
sub
mov
sub
mov
test
je
add
sub
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
and
mov
cmp
je
and
sub
mov
or
xor
add
cmp
je
cmp
jne
mov
mov
add
sub
xor
add
sub
sub
add
mov
mov
mov
add
add
sub
cmp
jne
mov
and
mov
or
sub
add
and
sub
cmp
jne
mov
or
add
test
jne
mov
xor
sub
cmp
jne
xor
cmp
je
and
add
add
add
cmp
jne
sub
sub
sub
sub
pop
add
and
cmp
je
mov
mov
sub
cmp
je
add
add
mov
mov
and
add
or
add
pop
mov
cmp
je
cmp
jne
mov
xor
add
sub
cmp
je
sub
mov
add
mov
cmp
jne
mov
sub
sub
sub
mov
add
sub
add
add
pop
test
jne
mov
mov
cmp
jne
mov
add
add
mov
cmp
jne
add
mov
sub
mov
add
sub
add
add
add
cmp
je
add
and
add
cmp
je
cmp
je
xor
xor
sub
sub
sub
sub
cmp
je
mov
mov
add
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
add
sub
mov
push
mov
mov
add
add
push
mov
cmp
jne
sub
push
mov
mov
sub
and
sub
sub
sub
cmp
je
mov
mov
test
jne
xor
add
mov
cmp
jne
mov
xor
add
add
sub
sub
or
and
sub
cmp
jne
and
and
sub
mov
mov
add
add
or
add
movl
mov
sub
call
xor
add
and
mov
or
add
add
add
sub
mov
mov
or
mov
sub
sub
call
mov
cmp
je
mov
sub
mov
or
mov
sub
test
je
add
xor
sub
mov
sub
sub
test
je
add
cmp
jne
cmp
je
mov
mov
sub
sub
and
sub
call
or
and
mov
mov
add
sub
cmp
je
mov
mov
sub
test
jne
sub
and
xor
cmp
je
cmp
je
mov
sub
add
sub
sub
cmp
je
mov
or
or
xor
test
je
and
mov
add
xor
sub
cmp
je
mov
mov
add
or
cmp
jne
mov
and
mov
sub
or
add
sub
add
add
mov
sub
mov
mov
mov
add
add
and
add
cmp
je
mov
or
add
xor
sub
mov
and
xor
mov
add
and
cmp
jne
add
mov
or
and
mov
cmp
je
mov
mov
and
sub
add
xor
mov
and
and
mov
cmp
jne
and
add
mov
xor
sub
add
cmp
je
mov
add
mov
cmp
je
cmp
je
mov
sub
mov
sub
add
sub
test
jne
xor
xor
mov
cmp
je
sub
mov
sub
add
or
mov
or
xor
sub
sub
push
call
sub
or
je
sub
addl
add
xor
mov
sub
sub
sub
sub
xor
lea
test
jne
mov
add
mov
mov
inc
mov
sub
cmp
je
sub
mov
add
xor
add
cmp
je
or
mov
and
mov
add
and
cmp
jne
mov
mov
xor
sub
sub
add
mov
cmp
je
add
sub
cmp
je
or
cmp
jne
sub
sub
and
cmp
je
or
mov
mov
add
mov
sub
or
cmp
jne
mov
mov
add
add
add
sub
add
sub
cmp
jne
add
cmp
jne
xor
and
add
sub
mov
cmp
je
mov
cmp
jne
mov
add
add
mov
and
sub
sub
cmp
je
mov
mov
mov
cmp
je
mov
mov
sub
mov
add
sub
cmp
je
sub
sub
mov
xor
add
mov
add
sub
mov
mov
add
add
mov
and
mov
cmp
je
test
jne
mov
sub
add
pop
add
pop
sub
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
add
push
mov
mov
cmp
je
mov
mov
sub
add
sub
add
cmp
je
sub
add
cmp
jne
sub
mov
sub
or
mov
add
sub
add
sub
add
add
add
mov
and
sub
sub
push
add
mov
test
je
cmp
je
mov
cmp
je
sub
cmp
jne
mov
add
add
mov
sub
cmp
jne
sub
cmp
je
mov
add
mov
and
sub
test
je
add
mov
xor
sub
xor
cmp
jne
or
sub
sub
mov
mov
or
or
sub
cmp
jne
or
and
sub
sub
sub
sub
sub
sub
mov
cmp
jne
sub
add
sub
mov
xor
sub
xor
and
rdtsc
sub
mov
xor
add
sub
add
cmp
jne
sub
add
xor
pop
add
pop
sub
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
sub
mov
push
mov
add
mov
cmp
je
mov
add
cmp
jne
cmp
je
and
mov
mov
add
sub
push
or
push
xor
sub
mov
mov
mov
or
cmp
jne
cmp
jne
mov
mov
or
mov
sub
add
add
sub
mov
and
add
and
mov
mov
xor
add
cmp
jne
and
add
cmp
jne
mov
and
mov
test
jne
or
add
mov
sub
add
cmp
je
add
sub
cmp
je
add
mov
add
sub
mov
cmp
je
add
cmp
jne
mov
mov
cmp
jne
test
je
sub
mov
cmp
jne
add
add
and
sub
and
sub
sub
cmp
je
or
decl
mov
sub
sub
sub
sub
cmp
jne
add
add
sub
rorl
add
add
or
add
mov
sub
or
cmp
je
cmp
je
xor
cmp
jne
add
jmp
cmp
je
cmp
jne
add
mov
add
mov
cmp
jne
mov
sub
mov
add
add
add
add
add
pop
mov
cmp
jne
cmp
je
xor
test
je
cmp
je
sub
sub
mov
and
add
xor
sub
sub
and
add
cmp
jne
cmp
je
xor
mov
sub
sub
sub
cmp
jne
add
pop
add
sub
add
mov
add
mov
cmp
jne
mov
and
cmp
je
mov
sub
cmp
je
or
sub
mov
or
mov
cmp
jne
cmp
je
sub
mov
mov
test
jne
xor
sub
sub
sub
and
sub
add
sub
cmp
jne
mov
cmp
jne
cmp
je
mov
add
add
test
jne
mov
add
mov
cmp
jne
mov
add
and
test
je
cmp
jne
add
add
mov
mov
cmp
jne
sub
cmp
je
cmp
je
add
sub
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
sub
sub
sub
add
add
add
sub
mov
add
sub
sub
push
mov
and
mov
sub
push
test
je
cmp
jne
mov
xor
mov
add
or
sub
push
mov
cmp
je
cmp
jne
mov
mov
sub
sub
mov
sub
cmp
je
sub
mov
mov
sub
add
sub
cmp
je
add
and
mov
mov
sub
and
add
sub
or
add
mov
add
sub
mov
sub
mov
add
add
add
sub
cmp
je
cmp
jne
mov
add
add
push
add
mov
mov
mov
sub
mov
add
add
add
push
sub
or
sub
push
mov
cmp
je
cmp
je
mov
sub
or
mov
cmp
jne
mov
xor
add
test
je
cmp
jne
test
jne
and
mov
add
mov
sub
cmp
je
and
mov
sub
cmp
je
mov
cmp
je
add
mov
mov
add
sub
add
mov
push
mov
sub
add
mov
sub
add
sub
or
sub
mov
add
sub
mov
test
jne
mov
mov
add
add
add
mov
add
sub
xor
call
sub
add
cmp
je
sub
cmp
je
add
add
or
mov
sub
mov
cmp
jne
mov
add
mov
sub
cmp
jne
cmp
je
add
add
sub
mov
cmp
je
mov
mov
or
add
sub
xor
sub
sub
and
mov
cmp
je
mov
cmp
jne
mov
mov
and
test
je
add
mov
sub
add
mov
and
add
sub
add
cmp
jne
add
or
or
mov
xor
add
add
mov
sub
or
mov
mov
xor
cmp
je
mov
sub
sub
mov
add
sub
or
sub
cmp
jne
add
xor
add
and
sub
sub
mov
mov
mov
and
cmp
je
sub
sub
cmp
jne
cmp
jne
cmp
jne
add
sub
sub
mov
cmp
je
cmp
jne
sub
cmp
jne
sub
mov
add
cmp
je
cmp
jne
mov
and
sub
cmp
je
cmp
je
sub
mov
and
mov
sub
mov
or
or
je
add
add
xor
repnz
mov
add
addl
mov
or
test
je
cmp
jne
add
add
add
jmp
mov
mov
sub
add
sub
and
sub
mov
and
cmp
jne
and
mov
mov
sub
cmp
jne
mov
cmp
jne
mov
or
mov
cmp
jne
add
and
cmp
je
add
mov
mov
sub
cmp
je
mov
add
cmp
je
and
xor
mov
sub
sub
mov
add
cmp
jne
mov
mov
cmp
jne
mov
mov
sub
sub
sub
cmp
jne
mov
xor
and
sub
sub
sub
sub
xor
sub
mov
mov
and
add
sub
pop
mov
mov
add
cmp
je
add
add
sub
or
pop
test
jne
mov
cmp
jne
cmp
je
sub
pop
mov
leave
ret
push
push
cs
xor
dec
xchg
and
xor
lret
mov
mov
repnz
cmp
mov
dec
xor
scas
add
nop
fwait
inc
adc
stos
stos
cmpsl
mov
shll
pop
sub
pop
sub
pop
add
push
loop
mov
fimuls
push
int3
push
in
jge
sbb
shrl
or
lods
stc
ret
fcmove
xor
ja
and
cmpl
inc
xchg
outsb
in
cmp
enter
popa
pushf
xchg
fsubrl
in
cmc
sub
sub
push
sbb
subl
clc
mov
repnz
push
push
sub
or
data16
outsl
sbb
cmc
movsb
sbb
fldcw
popf
gs
int3
mov
cmp
ret
lcall
inc
dec
js
lret
ss
fisttpl
jl
push
repnz
lds
lcall
mov
ljmp
inc
jnp
fbstp
daa
push
mov
mov
cwtl
int
sub
into
or
sahf
loop
inc
shll
iret
test
cld
mov
and
mov
iret
jecxz
and
rcrb
xor
leave
xor
dec
adc
push
inc
xchg
repnz
negb
dec
sbb
sub
imul
fsubs
movsl
in
sub
or
jmp
sub
inc
arpl
pop
cmp
insb
push
lods
lcall
or
pushf
and
in
mov
enter
movsl
fisubrl
gs
testb
mov
shlb
movsl
gs
das
addr16
adc
inc
jno
jo
mov
push
movsl
ror
mov
nop
out
xorb
push
mov
add
movsb
or
cwtl
inc
dec
insl
sub
ret
lods
ret
mov
xor
cmp
daa
dec
sbb
in
lcall
xor
outsb
jnp
sub
or
test
shll
neg
jb
je
outsl
and
dec
adc
mov
cmp
jbe
mov
adc
dec
inc
xchg
lahf
mov
pusha
xchg
das
or
mov
in
stos
lahf
cwtl
test
test
add
fdivs
insb
push
lods
mov
loope
xor
pop
xor
std
inc
and
mov
xor
mov
popa
mov
faddl
adc
and
fildll
in
jmp
lock
fldenv
jmp
gs
sti
mov
fmul
in
stos
mov
outsl
mov
inc
aaa
iret
dec
rcrl
xchg
les
scas
mov
mov
lret
cmp
ss
xor
clc
movsb
ja
sbb
pop
pop
mov
mov
xchg
and
mov
fildl
inc
push
and
pop
add
mov
mov
ret
aaa
iret
nop
bound
loope
shrl
mov
ror
push
out
in
mov
mov
pop
jbe
sub
js
push
das
mov
mov
or
inc
push
scas
add
fistpll
sub
outsb
cld
iret
scas
inc
lods
repz
mov
mov
push
cmp
cmp
lcall
sub
dec
imul
test
int3
int3
or
sub
mov
or
push
inc
sbb
lret
outsb
push
cwtl
lret
xchg
and
jle
outsl
push
mov
cmp
lds
lret
jno
lods
ja
test
std
ret
inc
pop
leave
xchg
cmpl
fwait
inc
mov
push
sbb
aam
pop
or
mov
pop
cmpsb
pop
imul
cmp
enter
mov
sub
movsl
aaa
into
loopne
sbb
stos
dec
inc
dec
rcrl
jmp
jb
pop
in
sub
repnz
arpl
pop
icebp
push
mov
lock
and
js
jbe
add
jnp
std
iret
cmp
cmpsl
sbb
mov
mov
ja
fcmovnb
inc
leave
lea
ret
push
and
mov
cltd
ss
and
pop
stos
pop
cld
outsb
in
cmp
jp
icebp
outsb
in
jno
mov
push
cmpsl
cmp
mov
lret
pop
sub
insb
mov
push
dec
cmp
lock
in
fisubrl
les
outsl
pusha
sahf
xchg
aaa
std
out
cmpsl
jno
sahf
ret
leave
rol
mov
scas
out
jno
or
out
cmp
dec
mov
jecxz
out
rorl
mov
xchg
pop
push
lock
mov
ja
shll
push
dec
add
pop
jbe
push
loope
dec
inc
fs
dec
sub
fwait
aaa
cmp
xchg
cmp
movsb
mov
ret
iret
mov
shlb
popf
fidivrl
in
test
jae
jecxz
mov
js
xchg
sub
and
fcoml
push
mov
pusha
cmp
ret
cli
popf
data16
fstl
push
mov
aad
mov
pop
add
dec
dec
repz
jmp
test
mov
mov
out
repz
popf
pop
dec
jmp
sub
out
sub
fcompl
fwait
nop
rol
loope
stos
xor
push
out
loop
xchg
ss
mov
je
ds
mov
mov
mov
mov
cmc
mov
cld
jne
dec
flds
ljmp
cltd
add
jl
mov
std
aam
dec
mov
mov
add
fdivr
movsb
in
jge
fs
in
mov
xchg
repnz
jmp
lds
sub
cmp
jb
int
dec
xor
ja
fwait
inc
mov
or
das
mov
mov
jecxz
adc
jge
sub
je
jns
mov
jb
or
fucomip
shl
iret
loopne
in
fs
ds
lock
xchg
mov
gs
jbe
sbb
and
push
jle
xor
or
mov
push
jae
mov
mov
mov
sbb
mov
fadds
js
repz
ret
or
xlat
aam
sbb
fstl
frstor
fmulp
mov
movsl
sar
lret
mov
pop
pop
inc
pop
inc
xchg
std
scas
lcall
jle
cmp
add
dec
and
pop
movsb
rcrl
mov
addr16
fistpl
pop
or
inc
push
xor
cmp
subl
inc
jbe
sub
loop
mov
aaa
inc
sbb
test
dec
sbb
adc
push
fidivrs
or
jmp
xor
test
mov
test
jmp
adcb
xchg
sbb
jl
mov
or
leave
sbb
ficoms
or
outsl
cld
inc
add
pushf
xchg
pop
iret
mov
mov
cmpsl
nop
jmp
pop
dec
push
sti
mov
or
movsb
xor
jmp
cmp
sbb
cli
mov
dec
mov
and
adc
ret
mov
jne
sub
aad
pusha
pop
mov
movsl
adc
sbb
pop
pop
xor
out
sti
das
xchg
inc
fcmovu
mov
js
rcll
pop
lret
mov
cmc
add
mov
mov
inc
pop
leave
pop
pop
sub
mov
inc
inc
movsl
je
mov
mov
mov
out
outsl
cmp
ds
mov
sub
pop
xor
lahf
inc
stos
and
outsl
in
cmp
call
sub
fs
push
and
test
cli
das
test
fdiv
stos
jmp
pavgb
mov
rcll
pop
inc
fisttps
aam
mov
mov
cmp
jo
dec
roll
pop
sbb
mov
cltd
push
add
sti
push
ja
xor
test
das
push
or
enter
mov
xchg
adc
jo
test
sbb
push
mov
gs
sub
mov
cmpsb
push
loopne
scas
add
shr
mov
mov
scas
iret
popa
aaa
cmp
jge
push
sub
mov
addl
jp
repnz
xor
sub
mov
mov
mov
inc
xlat
inc
ret
sub
cmp
scas
negl
enter
sbb
adc
aas
movsb
cmc
les
dec
mov
xorb
cmp
das
mov
pusha
mov
push
insb
imul
repz
add
xor
xchg
and
and
imul
inc
fcomps
pop
and
mov
xchg
jl
in
mov
in
clc
push
xchg
jge
fldenvs
jae
sub
inc
cmovnp
lahf
into
xor
xor
dec
fldt
movsl
xor
rcll
mov
fxch
mov
repz
adc
push
mov
fcomp
pop
mov
test
in
outsl
sub
dec
jp
push
js
and
fisttps
cs
mov
push
imul
andl
xor
mov
test
jp
xor
push
xchg
mov
adc
mov
lods
pop
out
jp
test
sbb
jb
or
mov
rcrl
out
das
cmp
scas
dec
mov
jg
insb
sub
repnz
outsb
imul
inc
or
adc
mov
ljmp
xchg
call
xchg
sub
aam
or
adc
mov
das
das
add
cmp
mov
push
lahf
sub
arpl
sub
adc
call
cmc
or
ret
jg
push
insb
mov
add
popa
mov
pop
lods
in
or
jbe
fildll
loop
add
mov
out
push
clc
fdivp
lea
movb
push
cmp
inc
sbb
sbb
sub
pop
xchg
movsb
in
inc
or
mov
daa
jl
hlt
mov
fimull
movsb
mov
adc
jle
push
fs
insl
lock
mov
jae
cmpsb
mov
xchg
insl
mov
inc
cmp
cmp
cld
cmpsb
fstpt
repnz
dec
das
fwait
adc
repz
test
repnz
daa
push
shll
jae
jecxz
notb
dec
jne
imul
dec
jl
lds
xchg
outsl
pop
mov
jg
pop
push
add
and
pop
add
rorb
insb
std
add
scas
jno
mov
cmpsl
push
clc
movsb
jg
sub
adcl
aas
sub
loop
push
jno
fs
jmp
mov
push
mov
cmp
mov
sub
pop
sti
jge
das
cli
sub
add
cs
fidivrl
push
jmp
pusha
jbe
add
adc
andb
js
movsb
sub
and
push
lret
xchg
mov
std
loope
and
daa
xor
fimull
cmp
mov
int3
out
dec
pusha
outsb
and
add
and
jmp
ljmp
out
pop
and
mov
sub
jecxz
xchg
test
aam
shrb
cmpsb
jne
jb
lahf
outsl
cmp
cmp
sub
mov
xor
test
mov
push
or
xchg
cmp
into
jnp
out
lea
pop
cmpsb
int3
and
stos
in
mov
xor
xlat
mov
nop
lahf
repnz
cld
xchg
mov
out
pop
out
bound
or
cmp
push
push
jmp
test
mov
mov
dec
das
push
xchg
rolb
xchg
ficoms
std
xor
add
mul
jp
xchg
stc
mov
ss
dec
xchg
leave
pop
jbe
jae
cli
jp
mov
fdivs
fdivs
pop
inc
lret
scas
js
inc
add
mulb
jbe
inc
es
xor
bound
jno
push
test
fwait
mov
push
fwait
xor
repz
sub
shlb
decb
xchg
lock
and
adc
cmpsl
mov
push
inc
pop
pop
mov
mov
int3
rol
adc
adc
cmpsb
in
int3
cmp
aaa
dec
mulb
cmc
test
sub
test
lods
fildll
rol
les
push
mov
inc
cli
dec
dec
xor
or
xchg
inc
je
ss
outsl
test
jg
jmp
out
lods
jg
call
mov
lock
or
xlat
xchg
sbb
mov
adc
push
mov
mov
mov
mov
mov
jmp
mov
sbb
cltd
jmp
xor
sarb
jmp
push
das
mov
sub
adc
inc
cmp
jg
ljmp
mov
pushf
xor
mov
push
pop
movsl
movsl
sbb
cmc
or
arpl
das
mov
pushf
cmp
adc
insb
jns
sub
sub
into
int3
cmpsb
mov
loope
shlb
in
or
sub
movsl
ljmp
and
stos
ss
aas
xchg
mov
out
inc
push
cmp
pop
iret
out
pop
push
aam
fucomp
aas
dec
cmp
or
insl
and
cld
xor
fwait
rep
sub
rcl
stos
gs
outsl
sub
pop
hlt
jbe
pop
loopne
shlb
and
out
and
outsl
lret
mov
fistpl
mov
int
push
iret
ljmp
ret
push
dec
daa
jb
popa
mov
mov
dec
adc
jnp
inc
in
inc
cmpsl
sbb
iret
add
loopne
mov
or
xchg
pop
jg
out
imul
fildl
sahf
mov
pop
adc
inc
rep
mov
fimull
enter
jg
mov
xor
test
dec
mov
or
outsl
idiv
cmp
ja
into
fstpt
inc
mov
daa
jb
xchg
arpl
push
xor
sahf
mov
push
sbb
ret
ds
in
xor
or
movzbl
xchg
mov
and
icebp
or
jnp,pt
stos
iret
sub
cmp
jae
mov
repnz
and
jb
outsl
int3
push
and
ret
aas
pusha
push
jecxz
or
in
dec
int3
xchg
sub
mov
data16
sbb
mov
adc
adc
int3
pop
mov
fdivrs
inc
mov
and
mov
push
in
xchg
cs
out
into
jnp
loopne
adc
pushf
shrl
loopne
mov
inc
aam
sub
adc
lods
stos
dec
mov
mov
mov
rcrl
data16
xchg
xor
adc
popa
xor
popa
jle
xchg
rcrb
xor
in
inc
mov
orl
sbb
mov
rcr
inc
ds
push
or
cltd
sti
push
adc
shll
scas
and
addr16
inc
loopne
jns
data16
mov
insl
mov
mov
xchg
lods
sub
rcrb
cvtpi2ps
xchg
dec
enter
inc
cwtl
es
mov
push
push
call
notl
mov
dec
or
call
test
aas
movsl
dec
add
pop
lock
shlb
int
daa
and
cs
into
sbb
shlb
pop
push
sub
push
popf
add
lcall
sarb
in
sbb
add
rclb
or
push
push
dec
jne
push
ljmp
int3
mov
and
stc
jle
cmp
mov
shlb
inc
sti
push
inc
sbbb
ret
mov
push
jns
test
push
add
pop
xor
jnp
ss
scas
push
pop
pop
push
fnstsw
mov
ret
add
add
dec
les
adc
cmp
scas
push
cld
jmp
loope
aaa
loop
shl
mov
add
mov
stos
inc
das
sbb
test
xchg
lods
push
mov
inc
cmp
mov
adc
int3
mov
mov
clc
scas
mov
nop
out
add
popa
jno
aaa
xchg
aaa
ret
into
xor
iret
mov
jle
add
sbb
add
push
jb
xchg
fdiv
sbb
sub
mov
push
push
sbb
decb
bound
sarb
dec
jo
pop
push
mov
mov
xor
insl
xchg
mov
fs
inc
push
fcoml
dec
jae
aaa
sub
movsl
cmp
andb
das
insl
xor
xor
aam
xchg
and
loope
mov
xchg
imul
adc
or
xchg
push
test
test
jl
lea
cs
ja
and
xlat
adc
enter
stc
rcl
xlat
popa
jns
xor
insb
xlat
push
xchg
cmp
test
daa
sub
mov
mov
xor
mov
lods
xchg
ja
cmp
sbb
push
cli
dec
jne
adc
repnz
and
mull
outsl
mov
add
in
push
cmp
insb
push
xchg
fs
push
fbld
inc
push
mov
clc
adcb
cs
bndstx
addl
shl
into
fsubl
cmpsl
je
adc
clc
scas
test
std
shr
adc
mov
mov
mov
fucom
jmp
ds
mov
xor
xor
xchg
mov
bnd
fdiv
mov
xchg
imul
pop
push
imul
outsl
sbb
addr16
push
lods
dec
ret
cmpsb
sbb
push
jmp
jns
lods
loopne
std
xor
inc
lods
icebp
cmp
jne
fs
fwait
dec
lods
add
push
jge
jne
dec
imul
mov
out
test
push
dec
gs
sub
jns
out
pop
or
loopne
sbb
repz
jb
adc
shll
and
pop
dec
add
add
cmc
out
xchg
push
leave
mov
loopne
adc
cmp
fstpt
mov
enter
lea
mov
leave
sbb
xchg
jne
sar
xchg
in
sbb
std
shl
mov
or
mov
adc
hlt
xor
lock
sbb
das
test
mov
sbb
mov
xlat
stos
arpl
mov
cmp
fnstsw
outsb
icebp
rcrb
mov
scas
dec
sar
mov
insl
mov
popa
mov
mov
mov
in
mov
cmp
pop
sbb
in
mov
xchg
cmp
and
adc
bnd
cmp
leave
mov
sti
inc
scas
test
jae
bound
xchg
roll
push
pushf
pop
popa
dec
cmp
out
push
stc
stc
lcall
and
sub
insl
ja
das
cmpsl
cmpsl
sub
mov
ljmp
mov
mov
dec
adc
test
int
jb
movsb
mov
filds
das
add
dec
lret
pop
mov
mov
pop
sub
rorl
xchg
inc
mov
xor
xor
scas
mov
push
and
gs
push
push
fdivl
dec
add
or
movsl
stos
push
and
arpl
pop
cmc
mov
and
hlt
mov
mov
add
ljmp
pop
mov
cmpsl
mov
int3
push
ret
adc
push
adc
sub
fisubrl
mov
hlt
inc
mov
sbb
jo
out
jns
mov
in
cs
mov
cmp
mov
cmp
popf
fimuls
ja
jbe
out
add
adc
push
inc
rorl
popf
roll
sbb
iret
add
and
xlat
pop
repnz
iret
or
inc
test
fwait
cli
mov
push
cltd
lea
lcall
mov
pop
adc
movsb
jb
mov
shlb
or
inc
stc
fcmovnu
in
inc
aaa
cmc
pop
ret
xor
fldcw
mov
int3
ds
add
dec
pop
cmp
sub
mov
shll
push
fs
in
mov
xchg
sbb
mov
iret
aad
inc
jo
popa
sbb
sub
div
cmovle
icebp
mov
xchg
jge
or
and
mov
adc
outsl
les
adc
fisubs
cmpsb
aaa
rcrl
inc
addr16
adc
xor
pop
pop
lock
push
out
push
mov
mov
sub
jge
sbb
movsb
ja
dec
cmp
mov
adc
ret
daa
sbb
or
shl
xchg
lock
mov
jae
dec
lret
stos
test
mov
fidivrl
fcomps
xor
lret
daa
sbb
pusha
mov
mov
adc
xchg
fdivp
rcpps
mov
gs
popf
or
push
repnz
push
dec
stc
jmp
dec
arpl
jp
mov
inc
iret
fdivs
out
sbb
adc
jo
push
add
dec
and
inc
sahf
ret
mov
sbb
ret
jg
xor
jmp
loop
or
fistpl
adc
into
xor
adc
rcl
mov
add
popa
das
pop
lcall
js
push
inc
loope
adc
aam
inc
xchg
stc
xor
inc
push
shll
inc
test
rcrb
xor
ja
pop
xor
dec
jmp
ror
pop
mov
dec
shr
cmp
les
xor
test
sbb
mov
xchg
xlat
fisubs
jle
adc
lahf
push
in
jae
jl
inc
xchg
stos
sub
xor
push
sbb
mov
jmp
fcmovne
xchg
jg
aam
mov
stc
mulb
mov
cs
sbb
push
call
or
xchg
inc
xor
mov
pop
test
loop
inc
dec
jbe
cmp
es
scas
pop
xor
ror
add
mov
aas
mov
lret
add
dec
out
mov
movsb
iret
fadd
out
mov
add
lds
mov
xchg
test
filds
inc
xor
sbb
mov
adc
dec
orb
je
dec
je
pop
test
jb
push
icebp
xor
imul
dec
xchg
cltd
vmwrite
pushf
cwtl
and
int3
xor
push
mov
mov
out
cmp
out
add
aas
xor
fistps
jmp
cmp
mov
pop
std
outsl
push
or
push
sar
addr16
inc
cld
lds
dec
jge
mov
mov
or
sahf
jmp
add
mov
and
fidivs
pusha
into
fildl
cmpsl
inc
mov
adc
scas
add
ret
push
cwtl
jmp
push
jl
xchg
sub
hlt
in
cltd
aas
ret
push
out
cmp
imul
or
imul
pop
mov
add
sbb
push
mov
out
mov
mov
inc
mov
aaa
fs
push
or
mov
fisttps
mov
icebp
inc
data16
xor
mov
sub
mull
cvtps2pd
insl
or
and
aaa
inc
push
jne
push
hlt
subb
ficompl
push
in
test
jle
and
sbb
or
scas
data16
iret
dec
movsl
mov
shlb
ds
js
mov
rorb
xor
push
loope
pop
jb
mov
fadds
aaa
xor
inc
xchg
dec
addr16
cmp
leave
or
setnp
cmp
sbb
inc
add
sbb
mov
mov
push
lcall
and
shlb
cmp
stos
push
dec
daa
or
push
mov
push
fidivrs
inc
push
das
pop
sbb
pop
enter
movsb
adc
push
mov
cmp
hlt
cmp
and
aas
jnp
adc
popa
test
popf
mov
ficoms
das
rorl
lods
test
nop
xchg
push
fildll
or
xchg
insl
lcall
pop
push
pusha
or
clc
cmpsb
int3
pusha
mov
addr16
adc
push
test
sub
dec
enter
cmpsl
int3
int3
mov
sub
sub
jge
lods
dec
call
das
jne
addr16
data16
push
movsl
inc
int
outsl
sbb
adc
lahf
push
fcmovnb
cmp
scas
mov
jg
xchg
cld
xor
mov
scas
xchg
ret
loope
mov
jp
mov
jecxz
push
fcmovne
sub
add
lret
mov
adc
mov
stc
jl
pop
pop
aaa
enter
ss
ficoml
inc
dec
out
mov
xchg
cmpl
sbb
xlat
mov
idivl
inc
orl
in
jo
sarl
dec
xor
push
fcomps
into
das
imul
mov
cmp
das
ret
mov
sbb
push
sbb
cmp
jo
ss
sbb
push
dec
mov
sbb
les
into
push
sbb
iret
push
sub
outsl
les
mov
lds
mov
dec
jne
adc
out
testb
aam
scas
dec
add
cld
call
xor
adc
adc
out
cmp
shlb
adc
cmpsb
mov
push
or
cmp
jg
outsb
add
and
xor
shll
xor
sbb
outsb
mov
ss
mov
movsb
xor
sbb
movsb
mov
aam
adc
aad
cmpsb
mov
jl
out
negl
lcall
out
popa
xor
inc
pop
cwtl
sti
push
es
inc
mov
jmp
les
sbb
xlat
sub
or
outsb
push
mov
xor
xchg
inc
cmc
cld
xor
pop
rorl
xor
mov
call
mov
xor
inc
sub
push
push
jle
xchg
cmp
jae
std
xor
shll
lea
aad
addr16
lock
sbb
icebp
movsl
mov
add
mov
stc
xlat
ror
in
dec
jbe
jmp
mulb
xor
jo
movsl
cmp
xchg
cmpsl
fsts
adc
mov
adc
aam
pop
iret
mov
mov
sarl
and
jecxz
jb
xchg
aaa
decl
ss
lock
cli
outsl
hlt
cmpsb
inc
mov
add
jmp
and
aas
in
push
jae
xor
std
jp
xchg
mov
jnp
xchg
out
cmp
mov
ret
lods
pop
dec
push
sub
mov
cmc
in
clc
pop
jno
int
iret
mov
mov
lea
pop
imul
jno
mov
xor
shlb
add
iret
rcl
icebp
mov
fcoms
mov
addr16
push
adcb
adc
icebp
inc
pop
in
xchg
ror
out
clc
push
cmpb
sub
push
mov
movsl
js
push
mov
testl
mov
mov
add
xor
loopne
sub
fsubr
mov
sub
fistpl
xor
insb
scas
bndmov
and
sti
xchg
and
into
push
loope
movsb
inc
add
dec
add
lods
fldl
mov
jb
cwtl
repz
push
adc
stc
sub
xor
and
xchg
addr16
add
test
or
leave
mov
push
sahf
mov
pop
cld
dec
imul
lcall
in
xchg
mov
fcmovnbe
pop
outsl
jb
das
cmp
loop
and
mov
jb
mov
ret
insl
mov
stos
fadds
inc
aas
sti
jno
inc
je
ljmp
mov
shll
mov
xchg
lods
pushf
jp
mov
movsl
loopne
mov
and
or
jbe
test
sahf
lret
push
imul
imul
fwait
mov
loop
mov
fsubs
mov
ret
mov
xor
cmc
adc
mov
pop
test
movswl
cmp
inc
repnz
mov
dec
dec
adc
mov
xor
shr
push
xor
xchg
push
xor
mov
outsl
inc
bound
mov
mov
mov
or
fdiv
inc
cmp
xchg
sbb
pop
xchg
lcall
ss
jg
mov
mov
je
or
inc
clc
xor
rorb
lods
rcr
outsb
sub
xor
dec
cwtl
add
je
push
xlat
mov
dec
subl
or
rcrl
xchg
cld
cmc
scas
mov
stos
mov
sub
lret
test
icebp
or
fldl
jbe
jb
cld
and
cld
pop
mov
dec
push
rcll
and
xchg
sbb
sbb
sbb
aam
popl
mov
cli
push
mov
pusha
push
cmpsb
scas
les
daa
pop
mov
das
adc
insl
push
stos
shlb
movsl
mull
inc
and
shll
and
popf
ret
rdpmc
jae
push
sub
out
out
fcompl
pop
adc
shl
pusha
jns
adc
mov
out
clc
inc
ss
stos
xlat
out
shll
pop
sub
sub
fs
icebp
jb
sbb
pop
ficoms
xor
lock
add
sub
mov
sub
sbb
fs
dec
xorl
loop
dec
or
xor
sub
pusha
shlb
mov
test
ds
add
popf
out
jl
push
mov
lds
pop
imul
xchg
dec
mov
push
pop
call
aad
ficoms
and
and
dec
dec
orb
dec
mov
mov
add
nop
les
adc
xchg
shlb
sub
in
xor
hlt
daa
pop
jmp
insb
out
push
mov
iret
hlt
lret
mov
and
mov
pop
adc
inc
pop
mov
adc
and
pop
in
dec
in
sub
adc
out
push
decl
mov
mov
xorl
scas
imul
jmp
push
mov
nop
addl
dec
in
mov
push
rorb
fisttpl
pop
mov
jmp
lea
inc
mov
gs
cmp
mov
lock
mov
xor
sar
mov
inc
outsb
inc
lcall
les
movswl
movsb
xchg
int3
les
sub
ds
pop
xor
cmp
push
pop
leave
lds
sub
mov
xchg
pop
cmp
rclb
adc
lret
test
aas
dec
dec
std
leave
mov
call
mov
inc
jmp
insl
sub
jecxz
jle
xor
popl
aaa
leave
cli
movsb
mov
cmp
jb
fisubrl
cmp
and
cmp
mov
aaa
mov
dec
and
out
gs
mov
pop
xchg
sub
and
mov
leave
out
iret
flds
pop
sbb
insl
stc
add
xor
repnz
shll
test
stos
jo
lret
adc
and
mov
lcall
movsb
shrb
fcmovu
xchg
and
mul
sub
jl
jg
jmp
sub
cmp
aad
fcmovu
jge
inc
gs
push
stos
les
cmp
icebp
xor
and
loopne
xor
scas
clc
mov
imul
insb
rorl
sti
xchg
pop
sbb
push
inc
testl
mov
and
xor
xorl
ret
lods
xor
imul
jle
push
push
repz
dec
rcl
mov
xchg
fmull
mov
add
addr16
jno
mov
pop
xorb
aaa
nop
js
ja
lock
adc
or
cmp
xor
cld
push
sbb
lds
pop
mov
dec
lret
inc
mov
mov
and
add
sub
iret
loop
inc
ja
adc
ja
mov
int3
cli
mov
push
mov
or
add
ja
mov
sti
inc
clc
mov
mov
pop
mov
incl
mov
sbb
xor
mov
cmp
mov
sarl
hlt
and
cmp
lret
sub
lods
or
dec
cmpsb
inc
call
xor
sub
hlt
xor
xchg
add
inc
divb
arpl
out
cmp
mov
out
popf
jmp
and
sti
push
test
lds
ficoms
lds
add
xchg
lea
jne
in
rcl
add
pusha
in
mov
mov
cltd
inc
hlt
or
jg
pop
leave
mov
aam
push
lret
push
pop
jmp
sbbl
mov
sub
xchg
sub
mov
jae
xchg
adc
mov
fisttpl
pop
mov
add
cli
les
stos
xor
inc
sbb
lahf
nop
adc
fnstsw
pop
xchg
cmc
and
imul
cwtl
sbb
lret
sbb
xchg
ja
jb
sub
call
insl
xchg
loop
mov
inc
cmp
push
repnz
or
mov
cs
push
xchg
ds
add
mov
push
xor
incl
push
or
and
adc
mov
push
mov
xchg
xchg
mov
int3
mov
outsl
dec
or
jecxz
sbb
jmp
jo
stos
jle
jecxz
mov
leave
movsl
lret
aad
adc
leave
xor
pop
add
icebp
push
xor
mov
mov
bound
je
pop
ja
subl
xchg
pop
adc
arpl
stos
mov
xor
repz
icebp
adc
xorl
jecxz
dec
cmpsb
pushf
movsl
sbb
cmp
mov
stc
ficomps
pop
es
or
dec
push
xchg
mov
adc
cmp
inc
mov
leave
mov
cmc
arpl
imul
inc
push
cmp
mov
pop
inc
inc
push
adc
in
xorb
bound
xor
mov
out
xchg
shr
mov
lret
cmp
hlt
dec
pop
mov
inc
sub
add
mov
leave
or
or
jnp
push
xor
js
je
lea
in
inc
mov
jmp
pop
cmp
mov
dec
mov
xor
popf
loope
stos
adc
mov
push
decb
repz
sbb
mov
or
push
add
stos
lret
lds
jns
jb
sbb
shrb
mov
xchg
push
jae
mov
cmc
mov
cwtl
ds
adc
push
das
mov
mov
stos
pop
cld
mov
mov
sbb
adc
iret
sub
and
stos
jp
fwait
dec
sbb
dec
dec
fadd
lret
lahf
inc
das
push
lcall
dec
gs
aas
xchg
rcrl
dec
adc
dec
test
xor
sarl
inc
daa
in
cmp
dec
repz
cld
test
gs
scas
aaa
fcoml
stos
sbb
gs
mov
xorb
scas
dec
inc
mov
and
adc
iret
das
in
xor
sti
insl
add
inc
lock
mov
mov
clc
pop
mov
fwait
into
mov
cmp
outsl
cmp
mov
jg
xor
mov
and
iret
sub
xchg
or
shll
cs
test
mov
shlb
fstpt
or
sub
push
jbe
dec
aam
enter
push
iret
sbb
jno
cmp
mov
stc
mov
sbb
adc
js
int
xchg
mov
je
xor
adc
mov
cmpsl
clc
test
repnz
mov
ss
cmpsb
inc
xchg
lret
out
sti
call
js
xchg
mov
js
fcmovnb
cmp
add
mov
shlb
add
fsub
dec
jo
fwait
pop
inc
es
aaa
mov
cs
or
jg
sub
mov
push
sarl
dec
lods
fs
sahf
jl
push
test
dec
out
mov
popa
mov
popf
pop
fbld
sub
push
and
jae
cltd
pop
clc
push
arpl
add
stos
jo
scas
inc
aas
mov
aad
hlt
adc
stos
enter
orl
into
insb
xor
mov
add
les
sbb
lret
pop
or
adc
add
std
icebp
ds
and
add
loop
or
jns
outsb
hlt
and
sub
add
scas
lock
je
cwtl
sti
in
leave
push
push
lret
jnp
sbb
stos
aam
cmp
mov
lds
and
sahf
xor
ret
jbe
hlt
fiaddl
pushf
loope
push
jo
lods
adc
add
pop
and
loope
cli
mov
dec
xchg
aad
and
imulb
jle
fcom
sti
rcl
lcall
stos
int3
cmp
popaw
mov
loopew
gs
mov
popf
mov
ja
push
sub
lcall
mov
mov
adc
iret
sub
ret
jno
cmp
sbb
cmp
xor
cwtl
sub
jl
imul
mov
xchg
mov
xchg
int3
xlat
cld
lock
out
xchg
shlb
out
es
cmp
mov
cli
inc
push
push
dec
cmp
mov
or
sar
out
sub
fists
jo
in
mov
sbb
cmp
lret
mov
mov
cmp
or
pop
jle
adc
xchg
jb
ds
jecxz
es
nop
mov
push
rorl
mov
xor
mov
dec
shrl
xor
mov
jmp
divb
test
jns
lock
pop
mov
push
dec
add
mov
mov
cmp
sbb
insb
push
aam
adc
loope,pn
sub
sub
repnz
out
aam
ret
cmp
and
jge
mov
pop
jae
aad
ja
jnp
imul
pop
mov
dec
sbb
adc
xlat
sbb
out
inc
lret
xchg
add
mov
pop
cmp
sbb
xchg
mov
or
push
mov
nop
and
xchg
mov
pop
push
adc
in
scas
leave
dec
stos
cmp
adc
xlat
sbb
jb
and
popl
pop
xor
inc
insb
sbb
jl
sbb
pop
ss
adc
stos
mov
and
dec
add
add
jb
rclb
aad
movsb
into
and
add
sub
xchg
xchg
sbb
pcmpgtb
mov
xlat
cmp
sub
adc
pusha
fisttps
push
popl
fs
ja
sar
or
repnz
cld
es
inc
dec
mov
mov
xor
xlat
pop
or
lods
ds
pop
in
leave
dec
movsb
dec
test
sahf
push
shlb
lret
push
sti
or
cld
sbb
out
es
cmp
pop
mov
and
bound
or
cld
pop
sub
les
add
lods
stos
xor
fadds
push
mov
xchg
out
std
mov
scas
and
ja
das
sub
push
test
out
adc
push
cwtl
aam
cmp
fs
push
repz
fistpl
pop
daa
jnp
fnstsw
icebp
insl
push
lret
add
xchg
lods
pop
out
jl
add
mov
lret
mov
jg
lcall
jns
enter
rcrl
stc
dec
js
mov
jbe
jmp
jbe
ljmp
inc
and
cmpsl
rorb
test
insb
scas
out
fisubrl
push
dec
push
cld
movsl
andl
mov
fistl
lods
push
lahf
shlb
addr16
ret
fcomps
jno
adc
lret
imul
mov
loope
pop
cmp
je
cs
push
lret
adc
data16
jp
mov
out
push
jmp
jae
jo
jge
iret
outsb
andl
jg
mov
scas
notl
out
das
mov
cs
pushf
pop
aas
pop
cmp
xchg
or
clc
lret
mov
fbstp
mov
stos
xchg
imul
fs
stos
push
je
sbb
sahf
inc
data16
mov
xchg
dec
fsubrl
mov
xchg
divb
iret
mov
push
in
mov
into
sbb
mov
into
or
test
shll
std
mov
xor
sub
dec
xchg
push
push
ret
mov
mov
inc
cwtl
ljmp
fs
lret
dec
dec
mov
xchg
push
aaa
and
mov
pop
and
push
bound
pop
mov
and
insl
and
xor
inc
jne
mov
fldcw
jnp
cmpsb
push
inc
daa
ds
ljmp
shll
mov
jno
into
mov
adc
sti
push
outsb
push
or
aam
rclb
repz
test
xchg
mov
push
aas
enter
stos
push
rcrb
xor
imul
mov
cli
push
or
inc
pop
xor
sub
mov
cs
dec
pop
inc
fstp
dec
cmp
push
insb
std
ss
aas
xchg
mov
fwait
mov
call
out
xchg
xchg
cltd
xchg
and
adc
aas
fidivs
stos
addr16
push
mov
cltd
cld
mov
push
mov
and
fcomps
insl
mov
fidivs
push
in
ds
push
insb
out
in
sbb
or
cmp
clc
cmp
or
inc
idiv
shll
xor
stc
xor
test
data16
xor
jecxz
pop
sbb
push
pop
clc
iret
pop
jne
cli
sahf
push
lret
adc
add
test
push
divb
mov
sub
int3
cmp
adc
enter
add
sbb
loopne
je
cwtl
sub
sub
push
inc
mov
orb
dec
aas
cmpsl
jge
mov
aas
add
xor
sbb
mov
xchg
jo
xor
cld
and
ss
xor
std
mov
shll
dec
mov
imul
add
in
mov
cmp
or
out
mov
outsb
xlat
lcall
add
popa
pop
cmovo
roll
scas
and
pop
test
aam
into
cmp
js
inc
cmp
mov
mov
cmp
pop
addr16
cmp
sub
ja
xor
loop
fimuls
and
incb
sbb
movsl
jg
push
imul
nop
loop
inc
out
in
cmp
lds
and
push
das
adc
sub
mov
fisttpl
in
and
mov
repz
and
call
enter
insb
push
scas
das
out
jns
push
xchg
pop
leave
data16
mov
adc
cltd
orl
pop
out
xor
js
jae
xchg
scas
in
mov
movsl
mov
xor
scas
jns
cs
pop
pop
sbb
or
mov
mov
xor
xchg
scas
pop
arpl
popf
pusha
xor
out
mov
dec
jns
test
dec
jb
push
sub
repnz
out
cmp
push
insl
fwait
mov
das
mov
and
movsb
inc
mov
lods
or
out
mov
pop
imul
int
push
mov
cmp
and
mov
cwtl
mov
mov
decb
cs
mov
imul
rcrl
adc
aas
lods
mov
jbe
out
data16
addr16
js
ds
lcall
adc
loopne
dec
adcl
xor
mov
xchg
insb
push
jle
mov
scas
int3
dec
sub
mov
jo
adc
out
adc
mov
and
mov
cmpsl
ljmp
push
stos
or
out
xlat
add
lret
mov
pushf
inc
hlt
mov
push
rorl
fistl
push
pop
add
iret
daa
test
ret
push
out
lea
shl
cmp
jmp
or
ss
xor
xor
cmpsl
imul
lcall
pop
mov
out
outsb
data16
cmp
out
xchg
push
mov
lahf
xchg
xor
mov
stc
fstl
mov
shrl
mov
sbb
xor
mov
hlt
das
xor
cmp
fstl
or
stc
test
inc
loopne
push
xchg
mov
insl
dec
jmp
sub
adc
xor
hlt
jmp
sahf
scas
mov
adc
jae
gs
sub
and
sub
add
out
or
cmp
adc
pop
mull
add
mov
iret
hlt
mov
lahf
faddl
pop
push
jg
out
push
out
adc
push
shrb
dec
adc
popa
mov
insb
hlt
xchg
sub
rolb
repnz
xor
jl
je
inc
das
xor
and
push
xchg
jmp
fdivs
aam
inc
xchg
xchg
or
xor
pop
fisubrl
xchg
testb
cli
cmpsb
xchg
lds
jne
push
rcrb
gs
cmp
mov
jp
mov
mov
jbe
movsb
nop
test
testl
scas
test
pushf
outsl
adc
movsl
xor
data16
add
das
ret
dec
sub
dec
xchg
int
mov
cmpsb
xor
xor
lds
popa
jbe
aaa
aad
pop
ret
fbld
xor
sbb
cmp
push
jl
sbb
mov
mov
push
mov
jmp
and
fidivs
mov
cs
imul
lret
mov
imul
ja
aaa
cmc
outsl
and
nop
cmpsb
sbb
ds
sub
ljmp
mov
push
inc
les
xchg
mov
ret
pushf
movsb
adc
ss
sub
pop
adc
aad
mov
cmp
hlt
inc
rorl
xchg
shlb
add
lret
push
push
inc
std
sbb
mov
push
sub
sub
addr16
in
mov
xchg
mov
or
adc
xor
mov
sub
xchg
lods
clc
ljmp
inc
add
dec
push
xchg
rcl
pop
fsts
pop
test
xchg
sub
adc
in
test
shrb
fsubrp
das
xor
cmc
loop
sbb
mov
dec
aad
push
pop
loop
sbb
xor
outsb
mul
or
cmp
and
sub
xor
cmpsb
pusha
loop
pop
push
mov
mov
fldenv
roll
das
lret
mov
scas
ja
test
dec
push
rorb
inc
pop
xor
es
xor
dec
mov
lock
push
pop
xchg
inc
std
sbb
sub
xor
xchg
cmc
jmp
inc
mov
orb
mov
add
sub
fidivrl
pop
sbb
cs
cli
cmpsl
insb
rclb
lahf
sub
or
or
and
inc
popa
inc
daa
push
xchg
fdivl
mov
gs
fidivs
repnz
xchg
add
xchg
jl
cmp
dec
pop
repnz
rolb
shlb
or
std
sub
rcrb
pop
and
xchg
inc
mov
mov
xchg
sub
ljmp
cmp
or
sbb
cwtl
aas
push
aam
pop
test
pop
stc
sub
int3
mov
clc
sub
loop
fwait
call
sbb
mov
ds
fisttpll
cmp
les
mov
sub
lcall
iret
inc
dec
cmpsl
xchg
lods
out
std
in
inc
cmpsl
stos
movsb
inc
push
scas
and
jae
add
stc
out
mov
inc
rolb
inc
sub
cmc
dec
in
in
repz
and
std
dec
shrb
shr
rorb
mov
jae
cwtl
pop
inc
mov
jp
and
or
mov
mov
mov
gs
filds
aas
mov
xor
add
inc
call
mov
mov
jle
rcr
inc
jnp
into
xor
adc
pop
adc
xor
out
adcl
xchg
ljmp
jae
fcompl
dec
mov
mov
scas
les
mov
shrb
jno
cltd
sub
push
in
lock
rolb
push
cmpsl
dec
cmpsl
mov
das
std
inc
or
xor
ficoml
pop
scas
in
add
pop
les
movsb
xchg
sub
das
in
cli
mov
or
adc
jb
push
rorl
aam
inc
jnp
sub
insb
add
stos
cmpsb
and
adc
fidivrl
push
fstl
mov
xor
ljmp
xchg
cmpl
out
stc
sub
je
xchg
jns
push
pop
and
add
xor
pop
push
and
mov
mov
sbb
cmpsl
outsl
lahf
ss
push
dec
jno
dec
xchg
sarb
daa
data16
dec
pop
cmp
jb
dec
je
adc
pushf
divl
sbbl
in
mov
mov
mov
mov
push
test
out
jg
xlat
pushf
jge
test
dec
neg
in
inc
fisubrs
mov
test
icebp
push
adc
insb
push
or
or
mov
clc
sti
pop
fs
xorb
gs
scas
mov
cld
lret
in
call
xlat
pop
mov
popa
add
jbe
cmp
daa
les
dec
fadds
hlt
sarb
js
dec
xor
pop
fisubrl
jle
or
test
jge
mov
adcb
cld
es
outsb
cltd
jbe
cmp
mov
xor
adc
pop
mov
iret
push
push
loop
movsl
cmp
bts
and
mov
dec
sbb
stos
adc
push
cmpsl
mov
out
mov
pop
dec
repnz
mov
fildl
fdivs
subl
or
dec
xchg
sbb
mov
cltd
insb
sub
icebp
jmp
testb
cwtl
mov
scas
dec
inc
sbb
daa
and
xor
stos
cmp
xlat
mov
shr
repnz
ret
sbb
cmpsl
int3
cld
mov
mov
push
in
sub
div
scas
sub
je
jge
shld
mov
jle
imul
in
out
add
pop
mov
loopne
inc
fucomp
pop
cmpl
inc
rcrb
in
andb
adc
negl
fcomp
push
iret
psubusb
test
pop
cmpsb
xchg
idivb
push
loopne
je
iret
hlt
xlat
fisttpl
cmp
pop
inc
sbb
add
push
cmp
pop
cli
mov
sti
stos
mov
mov
flds
or
jg
je
inc
pop
or
mov
movsb
adc
and
jnp
in
cmp
movsb
and
rclb
lds
adc
outsb
loop
push
fadds
pop
mov
cmp
push
lock
sub
outsl
stc
jp
xchg
pop
je
orb
lds
stc
ret
js
inc
inc
jle
fidivl
scas
imul
ja
mov
dec
sbb
shlb
pop
dec
pop
dec
mov
cwtl
jle
mov
mov
fchs
inc
inc
test
stc
test
add
neg
outsl
xor
mov
sahf
inc
test
test
sbb
pop
dec
fstl
rorb
jle
sub
cmpsl
dec
fdivs
adc
cli
jle
xchg
lods
xlat
mov
fdivrl
push
out
xchg
mov
fmul
cmp
xor
repnz
xchg
inc
xor
jmp
sbb
loopne
loop
cmc
mov
mov
out
mov
fwait
hlt
stc
scas
mov
adc
mov
push
sub
imul
sahf
scas
ss
or
stos
insl
jp
xchg
mov
mov
push
push
into
jno
insl
test
adc
fcmove
stos
lock
pushf
dec
pop
cmp
sub
adc
dec
mov
inc
rcll
cmp
mov
mov
dec
fucom
and
sbb
ret
pop
jae
pop
idiv
mov
fisttps
inc
jb
repz
jae
dec
push
loopne
les
mov
es
or
cs
scas
mov
adc
sub
xorb
std
xor
pop
lahf
mov
out
push
shrl
cmc
add
pop
mov
sub
pop
pop
pop
testb
jo
fsubl
andl
xchg
sub
add
push
xchg
sbb
mov
mov
hlt
neg
push
mov
dec
xchg
jns
push
adc
xchg
add
jmp
dec
insl
arpl
sub
push
test
insl
pop
pop
cld
cmp
push
ljmp
incl
fldt
mov
push
sub
shlb
sub
adc
mov
adc
or
std
mov
out
mov
ja
pop
mov
sarb
inc
and
mov
inc
push
mov
lahf
imul
sub
jo
inc
mov
in
enter
leave
xor
fwait
push
sbb
test
pop
loope
mov
and
out
outsb
mov
jo
das
push
push
insl
jl
dec
cmp
jbe
sahf
cmp
sub
int
fsubrs
adc
cmp
addr16
int
and
adc
jbe
pop
mov
adc
adcb
lock
mov
lods
sti
sub
adc
les
mov
inc
or
sbb
cmpsl
lret
push
adc
in
sub
imul
loope
push
cmpsl
aam
outsl
data16
das
out
inc
cmp
mov
pusha
sub
adc
ja
sub
cmp
sub
mov
xchg
cmp
sbb
rcr
cmpsb
js,pt
cmpsb
mov
mov
flds
xor
shr
sub
push
xchg
xchg
sbb
pusha
and
mov
pushf
lods
sub
sbbb
arpl
js
cmpsl
mov
or
sti
xlat
mov
inc
pop
xor
in
push
inc
shll
mov
or
mov
arpl
mov
push
pop
rorl
mov
shlb
xchg
jae
fmuls
cmp
lds
cmpsl
les
ja
fiaddl
or
jae
mov
outsl
jns
mov
pop
dec
push
jb
cmp
cmpsb
mov
out
stos
dec
sub
loopne
cmpsl
sub
leave
ficomps
dec
insl
xchg
and
mov
test
pusha
mov
jnp
arpl
scas
es
mulb
int3
push
movb
sub
pop
add
test
dec
adc
outsb
xor
add
popf
push
pop
andb
movsl
enter
cmp
push
in
add
jge
pcmpeqd
fcoms
andl
scas
cmp
ret
xlat
adc
outsl
mov
jne
mov
lahf
jne
add
sub
pop
xchg
imul
add
and
and
pop
xor
adc
dec
scas
mov
cmp
pop
aaa
cmpsl
sub
cmp
aaa
adc
arpl
aas
aaa
ja
fdivs
imul
xor
jp
loope
sbb
lds
jnp
inc
mov
stos
inc
imul
in
insl
jmp
inc
dec
outsb
or
adc
cmc
out
out
xchg
and
repnz
ret
lret
fcompl
scas
cwtl
mov
dec
mov
inc
sub
push
test
rclb
dec
xor
lret
dec
cmp
pop
push
mov
xchg
lret
scas
clc
lret
cmp
or
mov
lret
mov
cmpsb
lret
iret
mov
or
xchg
cmp
xor
sub
mov
leave
out
lods
lret
mov
scas
loope
jo,pt
push
test
adc
cs
mov
movsb
push
stos
dec
sbb
push
push
lcall
xchg
das
mov
cmpsb
pop
adc
fucomi
call
push
test
jae
imul
xchg
mov
dec
lods
jno
shrb
data16
enter
inc
push
in
out
cmpsb
lock
lea
cmpsl
inc
stc
inc
movsb
xor
or
nopl
cltd
cmpb
mov
add
xchg
nop
shr
xor
adc
mov
sti
add
int3
insl
sbb
pop
mov
xchg
or
stos
cmpsl
bound
das
lret
fdivrl
dec
pop
je
mov
or
pop
into
adc
jmp
rcrb
mov
pop
insb
bound
and
push
add
out
jno
mov
push
sub
adc
inc
and
int3
andb
into
mov
dec
lock
xlat
or
jno
loop
add
pop
pop
mov
dec
push
push
fcmove
insb
jb
inc
out
xor
push
dec
push
mov
int3
stos
lahf
lret
shlb
or
jmp
sbb
jnp
inc
and
mov
xchg
out
insb
repz
dec
mov
ja
mov
cmp
mov
ret
jg
repz
mov
aas
push
imul
cltd
push
test
and
mov
push
fs
adc
inc
xchg
es
xor
jmp
inc
jg
into
mull
xor
jb
add
lea
jbe
xchg
in
sub
xor
jmp
push
dec
loopne
mov
push
jnp
jno
pop
mov
mov
inc
lods
or
sub
jo
lret
pop
lds
mov
xor
or
lock
inc
and
insl
jl
addl
jle
inc
push
sbb
xchg
imul
mov
and
cmp
fwait
in
mov
sub
out
or
shlb
and
jg
iret
shrl
das
jnp
outsl
fxch
mov
lods
or
cmp
push
sbb
push
movsl
subl
push
mov
or
leave
dec
jns
clc
add
xor
pop
adc
inc
mov
xor
jp
in
pushf
xchg
mov
jmp
mov
cmc
lods
stos
or
scas
mov
sarl
xor
xchg
push
xchg
test
mov
xor
insl
in
add
adc
fcmovnb
aaa
push
jno
mov
stos
push
sub
lcall
fwait
xchg
imul
mov
fucomp
jo
mov
and
dec
jnp
mov
mov
dec
cs
sysenter
and
int3
ja
xchg
mov
cld
add
cmp
je
bound
icebp
push
mov
les
inc
sahf
jmp
scas
fistpl
int3
mov
push
sahf
in
loopne
loopne
and
xor
dec
lods
fcomp
fsubs
pop
sbb
dec
and
ret
sti
mov
fs
imul
les
test
sub
xchg
inc
cmp
in
xchg
xor
pop
mov
push
jmp
inc
cld
aaa
lods
jmp
mov
das
xor
push
out
cwtl
loopne
mov
xlat
jno
scas
mov
aaa
je
xchg
das
xor
out
mov
pop
mov
nop
xchg
popa
sub
mov
lea
int3
pop
mov
aas
pusha
jp
xor
ret
mov
jl
int
jmp
adc
outsl
jno
das
aam
xor
dec
dec
sub
pop
imul
nop
inc
xchg
mov
inc
testb
push
aaa
int
mov
iret
rolb
movsb
inc
cs
fldl
cmp
xchg
jno
iret
stos
bound
les
jge
xor
std
push
jecxz
pop
and
les
mov
mov
mov
popa
xor
pop
int
ffreep
mov
idivb
cld
pop
jmp
clc
pop
fcomps
pop
ja
test
xorl
ret
popf
fsubs
pop
pusha
xchg
adcl
shrb
ss
clc
shlb
pop
cmovnp
out
push
mov
aas
nop
stc
adc
aad
in
mov
mov
sbbb
cmpsb
and
mov
add
push
add
mov
sub
movsl
std
add
in
jl
push
mov
xchg
xchg
and
adc
push
leave
dec
ljmp
ret
fnstenv
icebp
dec
jb
out
iret
scas
dec
out
stos
std
inc
aam
loop
rcll
and
inc
testb
lcall
dec
dec
mov
dec
pop
jp
lds
cmp
xor
xor
inc
or
nop
rcll
cmp
movsb
push
mov
or
sbb
idiv
jle
mov
aam
rcr
ja
shlb
jo
outsb
ret
or
adc
std
lods
adc
cmp
sub
fsubrp
jecxz
lahf
mov
mov
mov
fwait
inc
mov
mov
nop
mov
dec
lods
mov
fisubl
das
imulb
push
paddusw
cmp
jecxz
or
sarb
pop
xor
inc
mov
icebp
das
xor
lock
fcoms
les
int3
and
jbe
xchg
xchg
or
bound
scas
sti
lahf
xchg
sahf
dec
mov
mov
and
sti
imul
add
pop
cmp
gs
imul
cmpb
icebp
js
cmpsl
adc
js
movsb
pop
pop
in
mov
jbe
or
repnz
push
imul
and
fmul
ret
jmp
jmp
shll
jns
fstpt
jne
into
js
and
add
cmpl
mov
and
sub
and
das
mov
and
jns
int3
cmc
dec
rclb
dec
push
in
bound
cs
xchg
mov
movsl
xor
mov
jg
xchg
fs
ret
sbbb
arpl
rep
xchg
cmc
lock
dec
xchg
mov
jno
scas
std
pop
cld
scas
pop
xchg
pop
imul
push
cmpsb
lods
jle
pop
sub
pop
jg
xchg
daa
inc
or
jecxz
lds
cmp
mov
rolb
ja
ja
mov
dec
inc
xchg
cmp
ja
push
push
out
mov
outsb
jne
movsl
test
fdiv
dec
cld
movsb
loop
in
int3
push
fdivl
popf
cmp
shlb
loopne
xchg
movsl
test
movsb
cs
mov
es
shlb
clc
fisttpll
stc
mov
dec
adc
sub
mov
jb
addr16
lcall
out
loop
push
sub
cmp
xchg
lock
sub
shlb
mov
adc
testl
pushf
in
scas
mov
aad
out
adc
xchg
rcl
lds
into
sub
mov
xor
mov
pop
aad
lods
rorb
mov
test
hlt
pop
fstl
mov
jno
push
and
mov
cmp
adcb
jno
fbld
rorb
mov
cli
ja
push
and
popf
add
in
mov
std
mov
in
mov
fcoml
cs
les
push
ret
fwait
add
add
xlat
fiaddl
je
pop
pushf
insb
cmp
jbe
dec
push
xor
into
popa
mov
pop
jmp
or
jnp
in
cmp
popf
or
adc
jecxz
sbb
icebp
leave
lods
add
cmpsl
mov
ret
xchg
je
cmp
mov
mov
imul
pop
sbb
lret
pop
in
jl
jle
and
dec
xchg
jg
cmp
dec
lods
add
sub
stc
stos
ret
xchg
adcl
popl
lods
lret
or
ficoms
iret
outsl
jae
fnstcw
add
movsb
inc
cltd
mov
mov
jo
sub
inc
jmp
mov
into
popf
sbb
sub
sbb
mov
and
xchg
sub
movsb
fdivrs
or
jl
and
mov
arpl
nop
rcl
cmp
jle
dec
jg
mov
xor
lret
inc
jle
inc
icebp
iret
lods
inc
mov
ljmp
mov
dec
sbb
mov
sub
outsl
in
aaa
pop
cltd
popa
jae
sub
movsb
add
test
pop
test
out
popa
and
sbb
outsb
gs
fstl
shlb
mov
sub
xor
and
inc
icebp
negb
popa
xchg
es
test
add
nop
in
les
rcrb
sbb
xor
mov
popf
orl
rcrl
idiv
cmc
movsl
lods
sbb
scas
jp
fbld
push
imul
push
out
lods
and
cmp
pop
and
imul
and
addr16
add
int3
and
dec
pop
loope
mov
mov
dec
xlat
xchg
mov
loopne
and
fistpl
outsb
push
inc
jecxz
rep
andb
out
xor
xchg
mov
loopne
mov
cld
or
xchg
mov
icebp
pop
add
cld
into
inc
or
je
in
inc
lret
adc
addb
add
push
mov
arpl
out
ficoms
repz
in
mov
mov
test
shlb
mov
cmpsl
fdivrl
pop
xchg
sub
fiaddl
xor
mov
jo
or
insb
xchg
pop
and
inc
inc
packuswb
mov
push
or
sti
rorb
inc
pushf
push
rol
data16
fwait
cmp
scas
cli
fsubrs
push
fsubrs
mov
dec
or
mov
dec
cmp
dec
push
cmp
nop
nop
jp
inc
loopew
sub
cmpb
jecxz
cmp
fcoms
sbb
mov
and
pop
push
pop
movsb
adc
hlt
leave
mov
cmp
mov
addr16
shr
pop
push
push
mov
out
mov
cmp
clc
or
rorl
and
fs
xorb
pop
push
movsb
add
stc
cmp
cmp
das
pop
push
push
sub
insl
mov
cmp
pop
test
and
mov
adc
push
inc
push
adc
cmpsl
jl
sbb
mov
cli
in
cmp
jmp
in
scas
daa
xor
sbb
or
mov
xor
or
dec
mov
inc
push
cmc
lock
and
out
push
sub
dec
mov
inc
dec
int3
fcmovnbe
rcll
cmpsb
repnz
xchg
loop
jns
clc
mov
gs
repz
adc
xchg
mov
mov
lods
push
xchg
stos
xchg
hlt
pop
clc
pusha
xor
sub
add
sub
stos
xchg
xor
lods
push
pop
mov
sub
subb
inc
into
jae
push
pop
lds
fcomp
xchg
into
test
mov
or
ljmp
push
gs
adcl
jmp
sub
pop
enter
push
int3
lret
test
lds
fs
outsb
into
jle
push
leave
aaa
mov
ja
stc
sub
mov
mov
xor
mov
das
dec
outsb
addl
insl
insl
dec
aam
or
pop
push
add
jmp
fs
xor
insb
insb
les
popa
pop
cmp
icebp
dec
mov
popa
loope
cmp
pop
inc
inc
mov
inc
inc
test
or
adc
pop
and
fsubrl
mov
nop
test
cmp
aad
scas
xor
jp
sarl
push
or
outsl
pop
mov
add
xorb
arpl
test
push
jae
fmulp
xlat
ror
xor
data16
pop
aam
test
pop
mov
call
push
jmp
sbb
movl
xlat
cmp
es
roll
ja
jno
int3
movsl
push
int
repz
sarl
cltd
cs
sub
xorb
psraw
sti
mov
xor
dec
hlt
xchg
xor
inc
adc
cmp
idiv
rcl
xchg
mov
mov
jle
gs
fldl
stos
cmp
mov
mov
push
cwtl
dec
mov
jne
and
inc
mov
ja
addr16
fidivrl
mov
cmp
mov
insl
pushf
jbe
adc
cld
bound
mov
loope
test
aam
sbb
push
and
fisttpl
dec
iret
sbb
iret
fstpl
into
xchg
mov
in
icebp
dec
and
xchg
arpl
inc
sub
int3
sub
aas
scas
outsb
dec
out
mov
mov
push
cmp
inc
lds
add
sub
das
mov
lods
pop
ret
pop
sbb
jg
cmp
in
adcb
adc
das
adc
shrl
insb
cli
pop
sbb
repz
jo
push
nop
pop
jmp
shrl
adc
in
test
stos
aas
add
sbb
sub
jbe
jmp
repnz
sub
xchg
outsl
dec
xor
cmpsl
ja
iret
rcll
pop
xlat
sub
mov
ret
mul
and
hlt
pusha
dec
xor
pop
enter
xor
test
add
les
sbb
divl
xchg
lds
es
shlb
lcall
mov
mov
fidivrl
loope
outsl
mov
push
leave
xchg
enter
pop
mov
xor
test
adc
arpl
cmpb
dec
into
xchg
int3
test
sub
int
or
lea
lahf
aam
pop
pop
out
lods
js
cmp
leave
out
pop
pop
mov
ja
test
or
mov
js
mov
pop
inc
push
mov
mov
movsl
insb
xchg
mov
fbld
pop
lret
sub
mov
fistpl
rorb
popw
in
sarl
and
dec
or
leave
mov
hlt
dec
lds
cmp
dec
fldt
mov
icebp
in
sub
jmp
xchg
mov
jno
sbb
call
sbb
add
add
mov
nop
ret
add
or
push
sub
mov
sub
xchg
jae
fsubr
cld
dec
cmp
ja
xchg
cmpsl
inc
fstpt
or
mov
pusha
cmp
sub
ss
push
test
adc
add
mov
fldt
mov
push
rcrl
bound
cmp
loopne
or
jg
out
stos
in
fcomps
pop
inc
sub
fadds
jl
xor
das
ret
mov
cmp
xchg
lods
stos
mov
push
adcb
stos
std
outsl
cs
ja
adc
rcrl
xchg
clc
pop
lods
mov
pop
data16
mov
int3
xchg
addr16
mov
call
test
movl
cmpsl
addr16
loopne
stos
idivb
adc
and
or
sbb
out
leave
lahf
sub
movsb
bound
pop
iret
aam
jle
mov
xor
imul
pop
xchg
imul
fnstenv
pop
loope
arpl
or
and
cltd
imul
mov
repz
mov
in
test
push
scas
cltd
out
imul
push
out
mov
sbb
loop
mov
xchg
xchg
jae
es
and
jnp
jge
push
shlb
out
out
int3
push
dec
nop
hlt
xchg
out
mov
mov
js
xor
mov
scas
jle
lfs
lahf
jl
insb
int
leave
lahf
or
adc
inc
insb
or
adc
shl
cmp
adc
mov
push
or
ja
sbb
push
and
pop
mov
popf
shlb
jecxz
and
jo
rcr
popa
ljmp
pop
movsl
jns
imul
icebp
dec
cmpsb
dec
aam
pushl
jbe
cwtl
rcrl
pop
hlt
js
mov
push
daa
xor
lcall
roll
xor
push
mov
inc
adcb
test
gs
jns
push
pop
mov
mov
push
fadds
mov
jb
cli
or
into
or
int
sub
out
push
cmp
dec
dec
push
lret
pop
mov
or
ret
mov
push
mov
or
xor
and
adc
push
sbb
nop
in
fidivl
mov
divb
inc
jno
je
stc
cmpsl
and
cmp
mov
js
outsl
and
cmc
push
shll
inc
mov
pop
push
popl
aaa
pop
add
jg
xor
and
adc
mov
mov
push
in
inc
mov
xor
ret
mov
cmc
push
idiv
sub
mov
int3
mov
ss
jae
xor
add
test
fucom
mov
sub
andb
outsl
mov
adc
sahf
cltd
outsl
jo
xchg
ss
cmp
adc
in
pusha
fildll
rolb
xchg
cmp
push
rorb
ret
aam
xchg
push
jg
outsb
push
cmpsb
sbb
adc
pop
into
mov
sahf
mov
mov
lret
mov
sub
sub
out
enter
mov
clc
push
pop
shlb
jae
je
jge
mov
out
inc
popl
mov
mov
enter
sahf
lock
cli
pushl
xchg
shl
mov
mov
sub
xor
xchg
test
mov
imul
outsl
ljmp
arpl
inc
cs
pushf
or
aas
mov
ffreep
inc
je
mov
mov
jge
jmp
mov
stc
shl
pusha
cmpb
or
mov
mov
mov
lahf
int3
cmp
dec
sar
js
mov
xchg
sbb
jmp
mov
lock
nop
lods
icebp
icebp
addr16
sub
lahf
pusha
xor
push
mov
mov
dec
movsl
pop
inc
in
pushl
sbb
lods
lret
dec
sbb
es
sbb
sub
push
sub
stc
mov
push
ficompl
std
inc
adc
loopne
jbe
stos
in
fsubrs
test
and
jbe
loop
aaa
inc
ret
pop
mov
insb
ret
sub
sahf
xor
sbb
push
insb
jl
jg
or
adc
and
das
mov
sbb
es
insb
xchg
icebp
daa
jp
mov
addr16
out
lock
movsb
fsqrt
test
daa
cld
mov
sbb
stos
xchg
push
push
push
inc
dec
js
sbb
mov
pop
arpl
aas
dec
or
push
dec
jp
fiadds
mov
lret
adc
lahf
push
mulb
cli
in
aam
sbb
inc
push
testl
adc
mov
neg
in
dec
and
aas
dec
test
or
jl
or
mov
cmpsl
jecxz
lret
cmc
dec
cwtl
std
jnp
mov
movsb
jmp
ss
out
mov
shrl
lds
or
xchg
adc
xor
pop
mov
xchg
movsb
test
inc
add
scas
cmp
sub
push
cmc
mov
ja
lock
xchg
xchg
cld
jecxz
xorl
and
test
insb
stc
fidivl
xchg
lret
cld
ret
push
roll
push
mov
jne
pxor
lea
xchg
cmp
outsl
adc
push
repz
ret
fnstenv
jo
mov
mov
fisubrs
sub
in
nop
cs
sbb
adc
mov
hlt
loope
and
xchg
mov
mov
ds
sbb
sbb
jmp
xchg
mov
mov
add
aaa
push
pop
pusha
or
and
jns
fs
or
mov
ret
shll
xor
into
mov
fsubrs
sbbb
mov
mov
sbb
add
cmpsb
in
push
cs
dec
mov
push
adc
jmp
jns
sbb
cmp
ljmp
aaa
push
push
lds
adc
mov
dec
xlat
mov
jge
stos
or
test
js
or
mov
popf
xor
jbe
mov
push
push
mov
mov
jp
cmp
jge
cmp
dec
rcl
push
outsb
adc
outsb
xchg
cltd
add
aam
adc
jo
dec
push
mov
out
push
enter
inc
cmp
fimuls
clc
push
push
pop
outsb
aad
mov
jle
ljmp
imul
push
cmc
or
sub
xlat
pop
xor
mov
jb
push
sbb
sub
std
xchg
ret
cmp
jno
mov
das
out
sub
fdivrs
inc
je
out
pop
mov
sub
mov
push
scas
cs
sbb
out
push
xchg
mov
sub
aaa
les
clc
mov
movsb
dec
sbb
loope
iret
cld
fnstsw
sbb
jns
mov
mov
adc
add
pusha
mov
pop
shrb
xchg
inc
imul
clc
adc
int
aad
dec
mov
lret
fwait
mov
pop
cmpsb
mov
xor
mov
sub
aad
insb
mov
sbb
lahf
xor
mov
add
add
jae
mov
scas
stos
fistps
cli
dec
imul
mov
inc
aas
dec
and
popf
or
push
mov
stos
jle
xlat
or
lret
stos
sub
imul
outsl
mov
and
lret
inc
imul
out
xchg
mov
pop
frstor
icebp
add
mov
mov
sbbb
js
sarb
fs
add
add
popa
enter
push
lret
add
repz
scas
mov
cmpsl
sub
outsb
jge
stc
mov
in
mov
inc
lahf
pop
sub
cmp
xchg
sbb
inc
arpl
iret
sub
push
cmp
mov
sbb
mov
jbe
inc
scas
incb
pusha
dec
sub
rcr
jne
mov
sub
inc
sarl
int
inc
jb
mov
mov
repz
cltd
cmp
notb
pushf
add
sarl
stos
mov
push
adc
lods
fiadds
out
pusha
sub
inc
pop
xchg
mov
mov
adc
pop
repz
bound
cmp
addl
jb
pop
inc
push
adc
mov
add
into
push
or
scas
xchg
cltd
mov
cmpsl
lods
dec
push
inc
incb
aas
jb
xchg
aas
push
aad
mov
and
or
sti
jmp
sbbl
iret
jns
mov
pop
and
mov
gs
lahf
lods
sub
pop
xor
xor
pop
mov
cmp
aaa
ljmp
xchg
test
push
repnz
or
fsubr
out
mov
in
jmp
test
stos
into
sbb
push
pop
or
mov
shlb
aad
aas
or
push
push
iret
push
pop
pop
sub
std
movsb
repnz
jne
movsb
mov
clc
sub
stos
les
adcl
enter
push
aas
sbb
cmpl
xchg
jo
mov
sub
aas
aam
jmp
mov
sub
cmc
push
pop
test
jge
mov
jecxz
jns
lea
mov
das
cmp
xor
sarb
sahf
cmpb
fucomp
in
cltd
stc
aas
adc
test
lret
xchg
xchg
jne
pop
ds
call
inc
push
push
add
xchg
sub
fldenv
mov
jno
pop
jmp
insb
push
std
inc
dec
jnp
jecxz
sbb
pop
stos
aam
dec
push
adc
es
xchg
adc
stc
ja
and
pop
mov
mov
stos
xor
cmp
lods
or
mov
fwait
or
dec
or
jg
das
in
in
and
pop
dec
aam
jmp
mov
pop
inc
scas
pushf
mov
adc
jae
add
je
fnsave
or
sub
jnp
cwtl
jbe
stos
xlat
into
sbb
mov
sahf
mov
push
and
inc
cmp
add
xor
gs
and
cltd
mov
cmovp
push
inc
xchg
and
mov
push
push
andb
sub
jns
in
jp
push
or
adc
sub
insb
cltd
lcall
popf
sub
lock
adc
loop
cltd
cli
xor
arpl
pop
lcall
fcmove
push
js
je
jecxz
cmpsb
mov
das
loope
shll
inc
mov
adc
shlb
mov
lock
mov
jns
add
gs
out
nop
or
repnz
xor
dec
push
jmp
mov
xor
fcomps
mov
mov
sub
loop
test
inc
in
or
mov
test
sahf
sub
call
cmp
sub
enter
jae
adc
addr16
dec
mov
iret
je
xchg
or
cwtl
sub
mov
pop
jl
dec
ds
mov
stos
ret
mov
xor
and
mov
outsl
test
inc
xor
fildl
mov
adc
dec
fs
jl
push
add
jmp
jecxz
mov
js
andb
fs
insb
sahf
dec
xor
ds
jge
mov
movsl
dec
cwtl
mov
pushl
into
cltd
jo
pop
clc
and
mov
stos
push
mov
jg
pop
mov
arpl
fsubp
xchg
ss
push
xchg
lcall
jb
push
daa
adc
cltd
rcll
adc
cltd
add
inc
std
jmp
pop
aas
pop
cmp
push
push
fstl
fcmovb
and
mov
sbb
outsb
mov
and
dec
push
pusha
adc
dec
mov
mov
jne
fdivrl
xor
sub
jle
inc
push
sbb
pop
cmp
cmpsl
sarb
movsl
xchg
in
mov
pop
lcall
lock
xchg
ljmp
or
sarb
sti
mov
sub
add
cmp
shll
dec
add
sbb
lods
gs
xchg
push
cmpsb
out
push
lods
cmc
dec
pop
push
mov
add
rcr
dec
cltd
lods
mov
je
jmp
and
sub
dec
xchg
lds
test
jo
inc
fadds
inc
into
dec
sbbb
movsl
imul
mov
loope
jae,pt
lea
jl
lock
ret
fbld
rolb
addr16
cmp
je
pop
cmp
jbe
nop
jns
dec
outsl
jl
mov
lock
shr
push
pusha
es
xor
pop
inc
pop
dec
jg
pop
xchg
lds
mov
xchg
aaa
dec
mov
out
frstor
xor
mov
and
xchg
pop
push
subl
mov
pusha
test
mov
dec
iret
clc
sub
ja
or
mov
adc
repz
sub
movsl
pushf
pop
pop
dec
jno
iret
push
adc
dec
mov
mov
jnp
daa
jl
scas
mov
int3
pop
push
addb
push
xor
pusha
xor
inc
rcll
nop
push
js
packsswb
pop
mov
arpl
stos
addl
mov
push
in
mov
lret
das
inc
addr16
and
push
test
inc
repz
mov
rcrl
mov
mov
into
jno
sbb
cmp
jb
out
cmpsl
mov
repnz
fst
aam
push
and
dec
stc
cli
dec
dec
ljmp
jnp
sahf
std
lds
outsb
aam
lods
in
sbb
dec
notl
popa
nop
push
out
rolb
out
popa
mov
inc
loopne
les
inc
sub
test
adc
negl
repnz
out
insb
into
into
nop
int3
xor
mov
sti
pushf
roll
popf
sbb
jns
sub
cmp
add
mov
mov
into
fwait
aaa
mov
mov
test
mov
jmp
sub
repnz
nop
in
push
shll
mov
push
xor
sub
sti
pusha
div
popf
push
mov
jmp
in
sub
cmp
ret
mov
jmp
dec
add
xor
mov
movb
adc
loopne
mov
adc
fidivrl
sub
movsl
mov
lret
sbb
inc
push
or
fwait
dec
inc
mov
mov
mov
jae
out
sbb
mov
xchg
pop
cmp
das
mov
lds
aas
xchg
push
xor
imul
loop
fbld
sbb
xlat
outsl
pop
sbb
out
jmp
xchg
jmp
push
fsubl
pop
adc
lods
lcall
test
lret
adc
mov
outsb
and
inc
dec
shrb
add
sub
sub
clc
movsb
inc
std
adc
add
fildll
and
popf
push
or
outsb
lret
dec
jp
adc
mov
fists
jb
repnz
pop
push
inc
repnz
lret
arpl
dec
push
jno
lret
icebp
aas
insb
dec
repz
rcl
push
push
mov
push
and
xor
scas
inc
das
cld
xor
mov
adc
repnz
mov
pop
xor
stos
int
jns
adc
in
mov
int
pop
jo
mov
addr16
mov
pop
ret
dec
and
sub
add
dec
iret
xchg
mov
cs
icebp
inc
mov
mov
xchg
loopne
scas
hlt
out
jo
movsb
aad
popf
sub
loop
in
pop
iret
scas
mov
or
imul
test
aad
mov
cmp
je
push
mov
cmp
inc
repnz
jo
and
and
jns
jns
movsl
std
fucomp
dec
test
sbb
dec
sti
and
mov
loop
lret
aas
das
push
adc
dec
mov
les
out
dec
in
mov
arpl
into
mov
xor
dec
outsl
pop
jge,pt
popf
and
add
imul
mov
mov
lock
orl
jmp
cltd
stos
and
aaa
xchg
popa
ret
push
cmpl
mov
repz
nop
inc
add
sbb
add
and
mov
iret
mov
pop
and
add
das
test
adc
sub
fsubr
sub
inc
pop
sub
inc
sarl
adc
test
bound
pop
jg
or
jl
enter
repz
push
inc
cmpsb
fnstsw
mov
xchg
popf
bound
enter
aad
adc
cmp
lcall
out
mov
nop
dec
aad
jns
inc
pop
or
xor
pop
dec
xchg
mov
sub
inc
mov
mov
dec
inc
jecxz
daa
jl
loopne
mov
cmpsl
hlt
xor
add
les
mov
ja
leave
ret
shll
cs
xchg
sahf
pushf
das
cmp
cmc
jge
xlat
daa
fs
addr16
add
fs
sbb
jmp
add
add
popf
sbb
ret
enter
les
pop
xchg
lock
jo
push
out
sti
or
pusha
outsl
and
in
push
pop
popf
test
mov
int3
pop
insl
adc
xor
pop
lcall
sbb
movsb
mov
jo
outsl
shlb
idivl
shlb
inc
adc
mov
lcall
insb
and
sbb
cli
movsl
test
ret
shlb
adc
sub
fs
fimull
das
lret
sbbb
sub
pusha
fcmovnb
cwtl
pop
aas
mov
leave
lret
and
lds
hlt
orl
repnz
aas
lahf
and
sbb
jo
add
adc
mov
push
lds
sub
mov
lods
stos
hlt
call
sbb
scas
out
mov
sbb
aaa
outsl
ja
push
aad
adc
hlt
and
ret
pop
jbe
leave
mov
sbb
loopne
cmpsb
cmp
sti
or
mov
ss
jae
test
sahf
mov
scas
lret
cmc
cli
xlat
loopne
iret
scas
lcall
stos
push
inc
mov
arpl
jle
out
fldl
jns
lret
dec
cli
push
jnp
addl
lods
fcoms
in
xor
jno
test
pop
mov
inc
adc
fmull
ficoms
sub
stc
add
sahf
xchg
push
leave
ret
jno
pushf
icebp
cmp
aaa
shr
dec
mov
in
fwait
cs
add
mov
in
pop
sarb
jb
lahf
mov
mov
mov
sub
int
fildll
and
inc
push
jne
push
das
add
sub
bound
das
ds
mov
dec
xchg
push
movsl
lods
loopne
js
rcl
cmpsb
iret
sub
icebp
call
adc
cmp
mov
sti
aas
pop
fistpll
mov
cmp
xchg
mov
repnz
inc
dec
xor
sbb
flds
divl
dec
insl
inc
ljmp
jge
jns
mov
and
mov
addr16
stos
inc
in
ds
lods
outsl
cwtl
xor
xor
xor
jp
sbb
mov
mov
pop
mov
cmpb
push
daa
mov
jmp
push
jg
push
scas
out
das
dec
adc
cmp
cmp
cmp
jle
jg
sub
ret
hlt
lds
loope
imul
lock
fstl
xchg
test
mov
mov
and
insl
jmp
aam
cwtl
mov
dec
push
inc
jg
jge
adc
inc
outsl
std
mov
scas
data16
scas
adc
in
imul
std
mov
sbb
shrb
aas
fnstcw
pop
push
jmp
adc
pop
dec
lds
lds
mov
stos
insl
pop
inc
cmp
cmp
jecxz
cs
sbb
cld
insb
mov
bound
cmp
enter
cmp
nop
test
roll
repz
leave
inc
mov
aam
inc
insl
cwtl
mov
jo
xor
sahf
mov
push
pusha
push
jne
ret
in
cmp
mov
push
outsb
push
out
jo
call
dec
mov
push
mov
divb
sbb
add
call
mov
add
mov
add
xor
arpl
mov
cmc
sti
mov
cmp
xor
fstpl
addr16
sub
loopne
mov
or
test
adc
adc
add
fdivl
repz
inc
lods
push
xor
daa
sbbb
fsubs
out
out
mov
insb
ds
call
addb
out
in
repz
loop
icebp
insb
sbb
mov
mov
stc
pop
shl
jb
lcall
testb
nop
sbb
cmp
imul
pop
fstl
sub
rolb
xchg
inc
add
jp
stc
movups
push
sub
mov
es
dec
repz
out
pop
sbb
sub
push
push
test
rcll
call
pop
repnz
insb
dec
jecxz
out
sbb
dec
hlt
or
rcl
mov
aad
daa
aaa
sub
sbb
loop
cmp
dec
int3
push
xchg
out
addr16
jecxz
rclb
cmp
gs
jle
xorb
mov
sbb
cmp
adc
aad
mov
int
scas
fstpl
dec
pop
or
push
cs
inc
xchg
jbe
out
mov
pop
push
cmpsl
xor
dec
xor
push
xor
jge
aas
inc
dec
sbb
hlt
and
movsl
fisubrs
dec
xor
fisubrs
push
outsb
jmp
mov
iret
xor
ret
mov
adc
ljmp
xchg
dec
and
jmp
xchg
mov
lret
mov
rolb
mov
aaa
cmpsb
ss
mov
mov
inc
jge
ret
pop
jecxz
rcrl
gs
gs
dec
lods
int
jge
mov
test
stc
ss
xchg
sub
or
prefetchnta
xor
or
imul
or
mov
sub
jmp
sub
add
popa
popf
sbb
ds
gs
dec
iret
das
testl
push
cmp
and
or
aad
outsb
mov
bound
push
xchg
fldenv
fmuls
into
rcrl
in
push
call
sub
mov
leave
stc
dec
aad
mov
or
lock
scas
xchg
adc
scas
pop
pushf
test
imul
loop
aaa
pusha
sahf
inc
jge
xchg
loopne
scas
stc
and
mov
lods
push
mov
clc
je
test
pop
imul
loope
mov
sub
out
xchg
mov
cmp
mov
insb
cmp
aam
call
ds
pop
jbe
mov
mov
push
pop
aaa
xchg
adc
mov
dec
in
push
or
popl
mov
push
int
fldl
ds
inc
mov
jnp
stc
mov
jo
add
int
into
adcl
sbb
push
ret
scas
add
pop
lea
fadd
clc
out
mov
jnp
jmp
into
test
push
cs
and
jmp
pushf
add
xchg
pop
addr16
into
xchg
bound
and
loop
xchg
out
xlat
test
imulb
cmpsl
push
fisubs
add
pop
xor
dec
mov
and
push
js
in
mov
lock
jge
imul
mov
xchg
sub
fcomip
pop
iret
cli
iret
mov
cmp
jnp
incl
out
loopne
imul
int3
jbe
push
and
loopne
int
xchg
xor
testb
cmp
rorl
mov
jns
push
and
fidivrs
call
jnp
sti
mulb
mov
cmp
xorl
roll
mov
jecxz
or
xor
xor
and
out
cmp
and
fistps
sbb
in
lds
mov
outsl
in
mov
cmp
jnp
cwtl
jecxz
sub
cmp
cmp
sub
cmp
lock
std
or
lcall
int
jns
adc
cmp
pop
outsb
movl
pop
fisubs
push
push
out
adc
mov
test
push
xchg
cmpl
adc
stos
dec
pop
sbbb
sbbl
adc
sub
movl
add
pop
lcall
xchg
in
shll
sub
lahf
add
imul
lock
push
or
fnstenv
sbbb
pop
aaa
in
push
fildll
inc
inc
loop
mov
inc
lret
dec
add
dec
sbb
add
in
sbb
fcmovbe
xor
scas
aam
addr16
sub
out
out
push
rolb
int
popaw
out
push
mov
sbb
and
shrb
scas
enter
dec
xor
fwait
add
lea
lods
cmp
jb
cmpsb
imul
jecxz
daa
sbb
mov
jmp
inc
cmp
cmpsb
cli
sti
ret
sarb
aas
cmp
xchg
push
loope
adc
or
pop
adc
outsb
cmp
jns
jb
rol
cmp
jbe
stc
inc
push
and
inc
out
mov
ss
aas
push
cmp
mov
mov
mov
push
test
xchg
loopne
pop
adc
push
inc
repz
lods
loopne
pop
push
rcrl
decb
push
jmp
pop
in
jae
sub
cmp
rcrb
mov
mov
fstl
loope
mov
and
pop
push
dec
dec
scas
pushf
jbe
sbb
inc
or
adc
cwtl
out
sahf
cmp
xchg
jmp
mov
test
push
cmc
shl
lret
jo
push
fadds
ficoms
xchg
stos
mov
xor
pop
sub
xchg
in
movsb
push
pop
add
mov
pushf
out
and
mov
mov
mov
adc
or
testl
into
out
push
fidivs
arpl
add
push
or
dec
xor
dec
rcll
add
rcl
sbb
sub
ds
shll
sahf
movsl
test
and
sti
xor
jbe
dec
pop
xchg
repnz
out
mov
icebp
push
inc
pusha
mov
dec
push
mov
ja
pop
add
adc
loop
test
inc
add
mov
xlat
push
rcll
das
jl
jg
cli
cmp
mov
sbb
sbb
xor
mov
pop
lea
dec
or
pop
insl
int3
lcall
sbb
cwtl
dec
aad
mov
sbb
mov
jp
mov
mov
test
lds
mov
sub
outsl
cld
add
stos
dec
push
outsl
mov
scas
sub
mov
sub
jb
out
add
adc
pop
sbb
xor
shl
fisttpl
fmull
sahf
mov
sbb
dec
xchg
js
sar
sti
or
cwtl
push
cmp
and
lahf
mov
stc
pop
ret
add
xchg
or
push
movsl
add
out
cmp
outsb
inc
pop
notl
xor
cmp
jecxz
jae
xor
xor
push
cmp
or
rorl
hlt
or
sbb
daa
jns
xor
dec
popa
jle
shl
scas
mov
stc
cmp
xlat
pop
rorb
and
adc
jl
sbb
or
out
pop
rolb
adc
xor
ret
add
push
scas
mov
insl
mov
mov
cmp
pusha
das
sub
dec
pop
cli
dec
pop
test
call
stc
push
inc
xlat
inc
inc
jnp
popa
jmp
nop
in
or
and
jmp
add
std
negl
dec
popa
or
xor
pop
in
jnp
fidivrs
test
ds
rcrb
push
out
imul
lock
insb
stc
mov
mov
sbb
jae
push
jbe
push
fucomi
push
test
push
insl
test
xchg
daa
sub
fwait
cmp
sbb
add
sbbb
loopne
mov
mov
cmp
dec
add
sub
pop
xchg
cs
sti
jmp
ds
into
dec
sbb
push
clc
adc
push
out
inc
lahf
xchg
xchg
cmp
js
cmpsb
push
shlb
mov
mov
lock
out
push
adc
cmp
nop
leave
out
frstor
rcrl
sub
pop
fisubl
fwait
movsl
jae
push
jmp
icebp
sub
lea
adc
push
aad
scas
and
scas
mov
mov
outsb
clc
repz
clc
repz
das
push
inc
push
mov
push
jnp
outsb
nop
pop
xchg
add
inc
mov
popa
rolb
or
addr16
pop
mov
mul
xor
inc
jg
add
xor
scas
and
cmp
fadd
loop
out
dec
sbb
xor
test
nop
push
mov
push
jnp
outsb
aas
mov
push
sub
and
lods
cld
dec
adc
jg
test
sub
ja
scas
loope
sub
or
loop
es
sub
dec
in
and
jns
out
sbb
adc
cmpsb
pop
jl
adc
xor
fsubrs
pop
add
movsl
test
inc
sbb
movsl
fildl
cmc
add
mov
stc
xchg
repz
arpl
fldcw
lods
loope
sbb
pavgw
add
mov
push
mov
jl
into
cltd
shld
repz
mov
xchg
aam
sar
push
out
nop
push
jnp
movsl
es
adc
dec
mov
cmpsl
daa
ror
mov
cmpsb
dec
mov
cmp
inc
pop
dec
iret
cs
dec
test
cmp
xor
mov
lahf
aas
dec
aas
and
in
fdivl
push
cmp
shrl
out
sbb
mov
push
es
stos
jbe
mov
add
inc
stos
dec
jnp
push
jbe
inc
mov
test
pop
cmp
sbb
ljmp
dec
into
icebp
ret
mov
pop
insl
add
dec
cld
add
pop
shll
leave
xchg
inc
lcall
cmp
aas
adc
imul
out
rolb
cmp
fwait
adc
aaa
addb
adc
sbb
or
pushf
cmp
mov
pop
push
insb
ljmp
pop
sub
mov
jmp
je
xor
mov
xor
mov
adc
out
dec
dec
outsb
addr16
idivl
hlt
cmp
subl
hlt
jp
punpcklwd
movsl
mov
adc
jae
mov
jb
xchg
ret
je
repz
shrb
sbb
test
loopne
mov
lods
dec
cmpsl
jae
jmp
icebp
mov
and
cmp
subl
inc
cmpsb
mov
xor
unpcklps
add
push
or
xlat
testl
mov
cmp
shlb
cwtl
scas
aad
xorl
sub
subb
pop
xchg
mov
pop
mov
test
push
sbb
push
aad
pop
stos
mov
mov
jns
or
or
outsl
inc
out
addr16
jge
xor
mov
lret
fs
icebp
out
sbb
cmp
iret
mov
jp
lret
mov
xlat
xlat
push
xchg
push
mov
fisttps
lods
pop
jg
cmp
psllq
jl
inc
sbb
mov
rorb
xchg
jne
mov
mov
fistl
cmp
nop/reserved
out
pop
repz
jno
bound
push
inc
ss
lods
stos
inc
and
dec
shlb
psrlw
mov
mov
mov
cmp
insl
js
xchg
cmp
push
and
pop
add
jecxz
dec
sub
cmp
mov
outsl
icebp
pop
and
ret
mov
push
push
lds
pop
scas
call
divb
lahf
aad
repz
shl
dec
sub
cmp
xlat
pop
popa
es
push
sbb
sbb
pop
cmpsl
cmp
stos
sahf
in
xchg
shlb
and
stos
mov
test
mov
jecxz
stos
stos
adc
mov
cmpsl
mov
or
add
out
jle
push
pop
push
jecxz
mov
pop
adc
movsl
mov
mov
adc
push
imul
and
xor
gs
inc
fidivl
aam
pop
push
mov
hlt
insl
data16
push
lods
or
sarb
cmp
lods
and
clc
xor
xchg
or
bound
movsl
imul
jne
insl
cmp
insl
flds
mov
jle
adc
and
cmpsl
lods
test
movsb
mov
fisttpl
in
xor
lds
xchg
push
mov
xor
xchg
push
inc
cmc
add
mov
stos
lds
arpl
test
ficomps
push
and
push
shll
ret
xlat
mov
sti
test
inc
cmp
outsl
out
mov
les
aaa
loope
test
fnstcw
bound
or
mov
lods
bound
test
xor
mov
inc
data16
mov
scas
and
in
lahf
ss
call
test
lods
iret
mov
mov
lahf
mov
push
enter
fildll
jo
les
sub
adcb
shrb
push
movaps
add
sti
sti
and
adc
in
sub
aad
xchg
ret
adc
sti
mov
sbb
sahf
mov
push
push
scas
xchg
mov
rorl
lock
addl
jg
out
xchg
repz
cmc
in
add
ss
cmp
lret
push
or
out
lods
sub
jne
roll
out
loope
insl
idivb
inc
nop
mov
push
xor
or
ljmp
shlb
sbb
xor
and
mov
imul
push
adc
cmp
test
ljmp
pop
imulb
orl
inc
cmp
es
add
push
dec
jl
ss
int3
or
inc
xchg
add
imul
das
roll
dec
cld
jl
ret
push
jnp
xor
fmuls
mov
cli
es
inc
push
dec
movl
jmp
insl
movsb
sbb
aad
cmp
and
ljmp
shl
out
xor
stc
pop
lock
inc
arpl
or
int
dec
sahf
xor
sti
movb
dec
dec
add
push
nop
add
mov
das
pop
push
out
sti
dec
icebp
jbe
jle
bnd
adcb
jne
iret
loopne
fnstsw
xor
mov
and
pop
scas
iret
aam
dec
and
cmc
mov
jno
data16
arpl
dec
test
adc
jbe
icebp
adc
adc
clc
test
loope
xor
lds
addb
sbb
sbb
sub
sbb
mov
mov
mov
in
data16
xlat
movl
aad
adc
inc
ds
rcrl
ficoml
jne
adc
mov
fists
jl
mov
jnp
daa
outsl
insl
or
int
mov
or
pop
push
jecxz
jbe
stos
test
mov
inc
out
sbb
adc
jl
add
xchg
push
lahf
pusha
outsl
mov
jle
fdivl
pop
dec
ljmp
mov
mov
dec
fbstp
int3
ja
in
ret
mov
add
movsb
xor
mov
mov
pushl
out
frstor
loope
ss
enter
mov
add
push
xor
int
sbb
movsl
xor
insb
stos
in
mov
pop
xchg
out
cld
lret
jle
outsl
lea
fisttpl
lcall
movsb
push
rcll
xlat
jmp
shlb
pop
lods
shll
xchg
cmpsb
sub
les
add
enter
lods
add
pop
lds
mov
xor
dec
stc
sbb
iret
rep
mov
adc
fstl
jbe
in
cmp
sbb
inc
cmpb
mov
add
scas
pop
test
or
notb
test
xchg
into
mov
dec
rol
mov
dec
and
repz
neg
pop
and
sti
pop
push
and
add
mov
aam
mov
outsb
inc
xor
test
ljmp
inc
mov
cmp
arpl
data16
in
lret
fmuls
mov
popf
sub
xchg
lret
xor
test
movsl
sahf
filds
cmpsb
test
or
psllq
sub
mov
aas
mov
cld
or
lahf
sub
inc
outsl
aam
mov
movsl
sub
jl
pop
aas
inc
jne
adc
pushf
aam
je
mov
mov
mov
and
sarb
dec
or
outsl
dec
insb
push
clc
lock
fisttpl
lcall
mov
pop
xor
cwtl
aaa
js
out
xchg
lea
dec
adc
sub
pop
sbb
jb
ret
xchg
cmc
shlb
fyl2xp1
outsl
les
cmp
in
jns
mov
loopne
sub
xor
push
xor
fxch
xchg
fdivrl
pop
aas
sbb
cld
outsl
mov
add
mov
mov
push
adc
jl
rolb
push
incb
js
out
mov
arpl
push
and
ret
xchg
dec
mov
sti
lret
fwait
sub
and
cmpb
movsb
add
mov
lods
es
pop
push
pushl
int3
ljmp
inc
mov
xchg
xchg
scas
in
jl
lods
lret
enter
pop
or
jle
pop
lret
negb
push
pop
cmp
or
push
sti
mov
push
ljmp
orl
insb
xchg
scas
sarb
add
push
dec
xor
sbb
sbb
mov
dec
mov
jne
decl
xchg
imul
loopne
insl
jg
cmp
sbb
mov
sub
icebp
ret
mov
mov
cmc
bound
jmp
dec
pusha
popa
mov
daa
inc
mov
and
xchg
or
gs
gs
fwait
repnz
pusha
cmp
int
into
inc
test
fwait
dec
mov
dec
cld
cmp
sar
pop
push
mov
pop
and
mov
jo
arpl
inc
mov
pop
sub
mov
rcrb
push
cmp
stc
and
sarl
cli
mov
or
outsl
jp
jecxz
ror
add
add
js
jp
popf
push
pop
fnstenv
push
dec
shlb
push
inc
inc
sbb
jne
pop
add
lock
pop
sub
push
mov
push
shll
jo
jmp
mov
inc
jb
xor
mov
repz
addr16
rcrl
cwtl
loopne
aam
ja
into
aas
test
add
cmp
addb
rcll
mov
cltd
ret
popf
rorl
stos
xchg
or
pop
sbb
jns
cmp
mov
pop
loop
inc
dec
aam
insl
pop
inc
out
mov
xchg
stos
sbb
bnd
addl
aas
das
int3
mov
mov
sbb
int3
xor
mull
jo
xor
or
cld
cmpsb
cmpb
in
cmpsl
iret
xor
mov
mov
xchg
mov
dec
pushw
pusha
lret
in
movsb
cmp
cmc
pop
insb
adc
or
subl
imul
sti
jl
cmp
xor
inc
ud2
das
dec
sbb
mov
or
inc
xchg
leave
sbb
adc
inc
dec
cmp
mov
xor
aaa
rcl
cld
mov
dec
mov
js
push
out
shrl
add
lds
xor
jns
mov
push
std
push
xor
in
cmpsl
jb,pn
outsb
pop
movsb
sbb
inc
fwait
or
xor
mov
jge
imul
incb
add
std
mov
ja
ret
adc
mov
pusha
xchg
rcll
movsl
cmpsl
aaa
sbb
cli
sub
inc
push
stos
repnz
loop
jno
push
or
fs
nop
loop
adc
mov
jnp
testl
bound
ja
xchg
inc
lods
xor
xor
mov
or
insl
sbb
pop
cmp
sub
insb
cli
jo
dec
jmp
pusha
lret
jmp
test
pop
mov
lret
mov
pushf
test
xchg
add
cmp
push
push
cmp
adc
jecxz
scas
push
dec
cli
jb
ret
and
mov
add
add
jns
mov
mov
ljmp
into
xchg
test
imul
ja
iret
fidivrs
sub
rcrl
xchg
hlt
mov
pusha
test
sub
in
lahf
cmp
jbe
adc
pop
stos
mov
repz
or
xor
and
movsl
mov
cmp
shl
sub
shl
sarl
nop
cmp
pop
jmp
xchg
lret
cld
cmp
or
ror
mov
and
fadds
mov
loopne
lds
pusha
data16
mov
pop
inc
scas
aam
lcall
lcall
pop
sti
sub
loopne
push
xchg
add
xchg
inc
adc
scas
sbb
and
das
pop
mov
jecxz
lds
js
je
xor
insb
mov
lods
cmpsl
adc
shlb
jbe
mov
mov
into
lds
sarl
dec
push
scas
stc
out
in
sbb
fldenv
sub
adc
xchg
out
sub
shr
in
push
dec
inc
add
int3
mov
add
xchg
mov
mov
jp
jp
add
dec
adc
fwait
aam
inc
mov
test
data16
or
enter
sub
sub
bound
fstpt
and
lock
jne
xor
shrl
push
jae
add
pop
mov
daa
sub
push
xor
sarb
into
push
dec
pop
aaa
icebp
add
mov
cmp
mov
int3
mov
cmp
mov
aas
or
push
addb
push
xchg
or
movl
inc
xor
scas
pop
lcall
sub
rcll
daa
mov
cmpsb
shlb
or
or
xor
adc
mov
pushf
add
pop
stos
ss
mov
lret
loope
fstpl
pop
pusha
jmp
sarl
fcoms
stos
xlat
lahf
push
mov
add
adc
cmp
stos
jp
mov
fsubl
xor
lods
sub
les
aad
cli
mov
dec
mov
mov
div
jno
push
mov
push
lea
xor
sub
or
gs
sbb
jle
idivb
enter
inc
jecxz
fdivrs
cmp
or
shr
out
pop
loopne
add
dec
nop
in
jne
out
data16
das
push
mov
lods
cmp
jno
mov
and
xor
std
add
and
push
pop
lods
add
loope
movsb
nop
pop
leave
jb
ja
cli
sbb
out
adc
mov
nop
fsubrl
inc
test
fistps
int
stos
xor
lds
inc
dec
sahf
jae
xlat
popf
xchg
rolb
adc
arpl
inc
inc
arpl
dec
xchg
leave
pushf
sti
cmp
push
xor
mov
call
or
cli
fdivl
and
bswap
popf
outsl
fildll
cmc
xor
movsb
cmpsl
cld
addb
repnz
int
dec
add
xchg
mov
push
push
stos
jmp
cmp
xor
aam
adc
inc
cmp
ror
sbb
lcall
and
inc
sbbb
movsb
jmp
bound
or
push
jge
movsl
inc
nop
jle
pushaw
xchg
mov
push
aaa
lcall
aas
les
ficomps
gs
cmp
or
data16
ret
dec
pusha
mov
pop
or
mov
jl
lret
imul
jge
in
sbb
push
out
fsubs
mov
pop
mov
popf
shll
jnp
jge
mov
adc
popf
insl
or
sbb
pop
in
pop
test
and
mov
xchg
xchg
into
cld
in
pop
xor
rcrl
jb,pn
jecxz
jbe
jp
leave
pop
xchg
shrl
adc
mov
stos
inc
in
fsubrl
bound
or
push
mov
popf
push
ret
sbb
push
cmpsb
push
lods
sbb
jmp
mov
dec
add
xlat
andb
mov
push
loopne
mov
pusha
lcall
pop
push
cltd
cwtl
movsl
adc
movsb
outsl
inc
ja
and
add
cld
xchg
mov
pushf
dec
lods
in
pushf
in
test
sub
stc
adc
inc
push
xor
mov
sbb
cmp
out
mov
ds
jno
mov
jecxz
ret
sub
mov
xor
xor
xchg
shll
rcrb
mov
pop
and
insl
das
add
mov
add
fmul
popa
rcll
scas
daa
xor
dec
mov
add
sub
xor
test
decb
adc
int3
mov
cmpsb
dec
loopne
into
subl
insl
cmpsb
stos
mov
dec
jae
xor
or
aaa
pop
lahf
push
sarb
iret
jnp
mov
xor
inc
inc
adc
mov
jns
ds
pop
inc
sub
shlb
push
loop
shrb
push
pop
outsl
jne
popa
daa
mov
mov
js
bound
loop
add
jl
pop
testb
mov
ret
cwtl
pop
mov
jae
inc
test
adc
sbb
add
xchg
scas
dec
sbb
push
stos
pushf
out
scas
xorl
shrb
out
jo
push
icebp
dec
and
sbb
pop
in
sarb
lea
rcl
dec
mov
movsl
ret
mov
je
out
and
call
into
sbb
into
mov
mov
js
add
pop
bound
lock
jno
test
in
lret
shrb
fidivl
adc
fs
mov
mov
aad
and
xchg
cmp
xor
ficompl
sub
mov
int3
cmpsb
or
dec
outsb
and
inc
iret
movsb
and
xchg
jae
sbbb
scas
adcl
add
ss
int
pop
ja
adc
or
lret
shrl
aaa
push
sub
cmc
cltd
cltd
mov
jnp
idivl
dec
jb
aaa
pop
jb
ljmp
outsl
xor
adc
jb
jp
sbb
das
scas
icebp
ds
xchg
sub
push
mov
ds
cli
fs
mov
xor
rcrl
xor
xorl
fnstcw
push
add
insl
or
les
pop
xchg
or
mov
xchg
dec
sub
lock
push
cmp
mov
jno
mov
je
cli
and
jno
test
sbb
sbb
add
xor
pop
push
test
inc
in
cld
cmpsl
fists
cmpsl
lock
sub
xchg
xor
inc
or
xor
mov
mov
xchg
mov
mov
test
or
cmp
dec
pusha
mov
cmp
ficoml
lcall
loopne
popa
fstpt
mov
push
jmp
fimull
repz
mov
cmc
outsl
jnp
xchg
add
lret
xchg
shrl
sahf
cmpsl
orl
mov
leave
xor
lahf
xchg
aas
push
out
scas
neg
imul
arpl
or
jo
mov
mov
shlb
adc
addb
arpl
inc
js
mov
pop
xor
int3
pusha
push
pop
jno
xchg
movsb
or
mov
or
lods
dec
psubw
fadds
jp
call
mov
pop
dec
cs
scas
loope
xor
push
mov
adc
adc
jno
fistpl
push
aas
jg
push
adc
mov
fisttpll
dec
jo
mov
iret
xchg
out
add
xlat
call
sbb
cmp
jne
cmp
push
icebp
add
push
mov
mov
outsl
pop
ret
push
adc
push
pop
jbe
adc
daa
jns
xchg
lea
subl
and
jno
in
jae
lea
subb
xlat
test
mov
fnstcw
fwait
lods
ret
in
sub
dec
sahf
mov
dec
adc
test
cmpsl
mov
vphaddudq
add
jl
movsl
push
push
inc
jnp
sub
mov
outsb
movsb
mov
js
int3
mov
shll
iret
or
cmpsl
rcl
cmpsb
pop
repz
jmp
daa
ja
enter
mov
mov
sti
lret
stc
sbb
adc
dec
or
movsb
pop
cli
into
mov
xchg
shrl
dec
mov
mov
sub
clc
iret
aas
pminub
into
icebp
mov
jg
pusha
nop
mov
lcall
sahf
sbb
aam
cld
outsl
cwtl
rep
test
mov
mov
pushf
subl
xor
movsl
jle
sub
js
movsb
jmp
mov
inc
ds
xor
ss
orb
fnsetpm(287
fildll
inc
and
insb
ret
add
lods
ret
inc
into
mov
push
adc
lock
mov
std
in
cmp
out
dec
add
test
aaa
xor
test
or
xchg
fcmovbe
adc
mov
adc
and
and
or
xor
push
and
dec
mov
outsl
mov
pop
rolb
mov
lods
repnz
push
fwait
sub
mov
out
test
jg
out
daa
rcl
imul
mov
sbb
out
jns
call
lret
or
mov
call
or
cmp
out
mov
sub
jb
mov
lock
imull
xor
mov
xchg
icebp
xor
shrb
clc
shll
xor
mov
shlb
mov
in
jp
dec
fistl
cli
and
pop
add
dec
inc
aas
sub
mov
cli
ficomps
add
fdivs
jno
cmp
inc
inc
scas
in
repz
fs
adc
scas
out
push
xlat
stos
xor
dec
adc
add
mov
mov
pop
sti
aas
xor
loop
mov
jno
fisubl
mov
into
jae
cmp
sbb
inc
sbb
popa
add
test
sahf
xor
insl
sbb
outsb
outsb
fistpl
gs
sbb
mov
fldt
hlt
leave
inc
mov
sbb
aad
rcll
mov
mov
xchg
insb
lcall
and
das
aas
mov
jae
push
add
fcoms
mov
pop
add
sbb
push
mov
dec
cmpl
mov
loope
and
hlt
dec
call
jg
sbb
jmp
sbb
cwtl
cmpsl
aas
mov
call
mov
test
fld
outsl
test
add
out
fwait
das
inc
loop
mov
out
loopne
push
das
rcll
in
mov
imul
or
dec
pushf
mov
xchg
insb
mov
insb
mov
mov
add
outsl
pop
jg
enter
ljmp
movsl
rep
rcr
test
and
sbb
mov
bound
stc
lock
je
adc
hlt
xlat
pop
jecxz
js
sahf
dec
pusha
or
int3
mov
sahf
pop
je
push
in
sbb
mull
xor
sbbb
cmp
subb
push
loopne
push
cmp
arpl
faddl
push
xchg
mov
in
inc
sbb
fmuls
iret
xor
mov
repnz
jge
cmp
pop
jbe
les
cmp
xor
push
mov
clc
lods
xor
jmp
call
cmp
enter
jp
movsb
sbb
test
test
adc
dec
fildll
mov
mov
mov
add
adc
pop
lods
movsl
outsb
or
loope
jae
jge
xchg
mov
mov
iret
adc
mov
jmp
inc
dec
mov
mov
cmpsl
arpl
test
xor
gs
xchg
mov
pop
mov
lods
sarb
and
and
mov
and
jnp
xchg
mov
rcl
ret
fs
xchg
push
inc
leave
cmp
xchg
and
jecxz
ret
jbe
cmc
inc
cmpb
lods
sbb
mulb
push
push
add
cmp
xor
jns
ds
shlb
mov
adc
and
xor
cmpsl
lret
inc
add
cmp
pop
enter
sbb
les
ret
sbb
adc
cmp
int
rolb
cmp
add
mov
inc
mov
sub
test
in
sahf
stc
inc
idivl
pop
int
cmpsb
push
out
aad
add
mov
repnz
lods
sub
mov
scas
inc
add
fdivl
out
sti
scas
add
enter
cmp
cmp
mov
int3
movsl
mov
sub
pop
push
movsb
lret
pushf
jno
mov
or
inc
inc
loopne,pn
pop
pusha
in
inc
bound
sub
test
in
add
add
xor
mov
arpl
fadds
xchg
negl
lea
sbb
pop
fwait
cs
jbe
mov
fs
cmc
push
dec
or
lods
jmp
mov
push
push
mov
mov
mov
add
fisubl
dec
rolb
fsubrl
sub
adc
insb
jge
out
ficoms
insb
xchg
add
cli
jo
push
repz
dec
inc
pushf
jae
sub
daa
jg
mov
jl
rep
jae
mov
jmp
adc
cli
push
movsb
outsl
and
call
pop
fnstenv
inc
dec
adcl
pop
push
xchg
into
push
pop
adc
sarb
or
mov
dec
dec
fisubrs
mov
icebp
jns
xchg
and
xor
inc
xor
out
xorl
cs
push
test
stos
aad
jns
sub
nop
enter
jge
adc
sbb
sbb
xchg
push
fadds
sub
testl
in
mov
test
out
mov
sbb
push
push
sbb
lret
mov
sbb
mov
fdivrl
cli
and
sbb
pop
fisttpll
les
xchg
or
mov
push
gs
aad
ret
lods
push
xor
xor
mov
testb
das
jns
scas
aad
les
mov
rcr
or
pop
inc
jb
inc
dec
inc
inc
clc
out
cmp
mov
fildl
push
test
imulb
mov
xchg
push
add
mov
jmp
pop
cmpsb
sub
dec
or
mov
xor
xchg
sbb
cmp
mov
cmp
and
lods
mov
movsl
and
adc
icebp
xchg
call
sbb
pop
fisubs
lret
fwait
xor
add
test
in
outsl
add
fldcw
cmp
push
dec
pop
mov
sub
ja
inc
fdivs
gs
scas
test
fisttpll
xchg
cmp
pop
clc
dec
loop
aas
mov
xor
cmp
xchg
in
nop
dec
fwait
shll
lds
repz
dec
jge
dec
xor
sub
neg
add
dec
push
lcall
repnz
repz
sbb
mov
jae
outsb
or
aaa
push
mov
test
xor
mov
int3
push
mov
adc
inc
loopne
sub
fcmovnbe
mov
test
call
repnz
incb
push
inc
or
xor
lahf
rolb
and
aas
dec
lods
mov
popl
mov
push
movsb
xchg
movsb
ja
cmpsl
adc
lock
pop
sub
pop
loope
adc
imul
shl
sbb
push
push
daa
inc
jo
mov
call
adc
mov
fsubl
pop
pop
cmp
pushf
test
mov
jg
js
adc
js
scas
mov
sub
or
andl
jns
jmp
in
loopne
aam
and
sbb
adc
cmc
jge
mov
lahf
hlt
xchg
xchg
movsl
xchg
add
aam
loop
pop
inc
xlat
xor
or
or
add
fstpl
iret
lods
in
aaa
jmp
ljmp
push
out
mov
out
inc
out
test
xchg
push
rolb
sbb
movsl
xlat
dec
jg
xor
divb
dec
mov
fs
mov
pop
lret
add
cli
jecxz
lret
je
addr16
sti
dec
push
mov
cmpb
pop
and
or
jno
sub
movsl
mov
andb
sbb
or
mov
push
xor
ret
mov
dec
cld
jp
mov
cmc
jmp
addr16
mov
sbb
call
xor
test
loopne
insb
sub
cmc
sub
sbb
lret
inc
inc
sbb
xchg
lods
or
fstpl
test
or
aam
pop
inc
out
xchg
aad
in
lret
ss
lret
mov
push
xchg
loop
out
jmp
enter
pop
jnp
mov
iret
pop
adc
pusha
or
adc
adc
sub
mov
in
add
pusha
std
icebp
add
mov
bound
int3
mov
jae
pop
lcall
jp
push
xchg
sub
stos
scas
shll
pop
xor
dec
and
aaa
idivl
imul
lea
xor
fwait
movsl
cmp
in
mov
cld
inc
push
lret
scas
ret
aad
push
ja
cmpsl
adcl
fwait
aas
add
push
mov
lret
or
stos
sbb
lcall
inc
jae
xchg
xor
jg
sub
cmp
add
mov
sub
push
adc
mov
or
stos
icebp
adc
cmpsl
mov
mov
sbb
dec
rcrl
aad
mov
lret
xor
jle
sbb
mov
pop
mov
and
repz
mov
cmp
jl
pop
rolb
sbb
pop
testl
pop
out
sub
mov
shlb
mov
jns
dec
add
or
cmp
mov
xchg
scas
ret
mov
hlt
or
pop
ret
pusha
add
xor
jnp
mov
lock
aaa
add
imull
mov
dec
popf
lcall
rcr
cwtl
sub
sbb
mov
jae
sub
mov
mov
xchg
int
iret
xchg
mov
add
sahf
xchg
mov
inc
mov
pushf
das
cmc
xor
push
ja
xlat
icebp
cmp
adc
push
xchg
adc
push
repz
xor
mov
std
push
hlt
ret
inc
lock
int3
mov
mov
inc
xchg
sbb
movsl
mov
sub
add
cmc
outsb
and
cwtl
jmp
and
inc
mov
movsb
push
add
mov
pop
out
lds
push
adc
lret
sbb
adc
xor
dec
sub
fucomi
push
int3
add
sbb
or
inc
sub
adc
lods
orl
std
ja,pt
add
stc
xchg
mov
mov
add
ds
push
mov
gs
sub
jge
mov
cmpsl
push
pusha
loopne
mov
xor
mov
cmp
popa
into
gs
cmpsl
outsb
mov
lret
xor
jmp
mov
dec
jmp
cwtl
mov
out
sub
sti
test
dec
jge
mov
push
dec
cmp
lods
lock
ret
hlt
js
xchg
xor
and
movswl
mov
push
leave
xor
std
push
add
jge
dec
sub
sub
sub
insl
ficomps
int
psubusw
mov
push
aam
inc
je
icebp
stc
dec
pop
popf
add
or
aam
mov
aas
push
aas
sbb
idivl
rclb
mov
mov
mov
xor
insl
mov
rolb
js
repnz
mov
and
dec
imul
sbb
sub
adc
xchg
fxch
daa
leave
mov
and
push
sub
add
orl
aas
jle
stos
add
ds
and
jg
sarb
jnp
fwait
insl
inc
dec
dec
add
push
sbb
push
mov
and
fwait
das
mov
cmpsl
in
xor
hlt
mov
pop
das
mov
shll
push
testb
ljmp
sbb
pop
fs
lret
and
dec
xor
mov
dec
mov
jo
or
rolb
mov
lds
cs
jg
add
xor
xor
xor
aad
std
adc
lods
pop
cwtl
xor
sbb
mov
fucomip
xor
in
outsb
orb
repz
nop
jnp
inc
inc
stos
sbb
cld
or
push
sarb
xlat
adc
xchg
test
xor
jp
mov
cmc
lods
fimuls
sahf
lcall
push
adc
fsubl
and
push
pop
xor
outsb
sbb
push
pop
fcompl
in
adc
jb
fdivrl
pop
movsb
mov
ret
dec
and
js
lea
or
aam
xor
stos
jmp
lahf
dec
packssdw
scas
stc
and
dec
xchg
xlat
gs
out
lret
inc
inc
stos
ss
dec
movsb
cmp
xchg
mov
loopne
jecxz
dec
int3
push
aas
cwtl
sub
pop
dec
inc
inc
and
mov
out
jno
jmp
movb
aaa
lea
mov
fs
or
aaa
aaa
fldenv
jno
cmp
mov
cs
rorl
mov
pusha
pop
jbe
xchg
jbe
insb
mov
add
adc
dec
mov
in
rcl
ret
sete
cmpsl
sbb
jg
in
psubsb
lret
jno
loop
test
shlb
or
cmc
cmp
adc
jne
movsb
add
mov
loope
xchg
hlt
cmp
pushf
cmp
sbb
mov
addr16
dec
imul
sbb
jo
test
sbb
es
addr16
lcall
les
repnz
mov
inc
jb
jp
fsts
repnz
mov
es
xor
test
adc
pop
scas
pop
mov
cli
cltd
or
mov
push
mov
xor
or
and
inc
popa
jbe
and
pop
mov
in
or
lret
das
xchg
into
xchg
mov
sub
ror
adc
mov
xor
add
fcmovne
arpl
mov
movsl
dec
mov
sbb
in
push
jno
add
or
enter
and
cltd
enter
addr16
int3
das
icebp
loop
popf
outsl
inc
push
or
cmp
aas
rorb
out
cld
sub
outsl
xorl
or
dec
push
in
xor
mov
in
or
das
sti
gs
scas
ds
jmp
push
out
inc
lods
out
inc
movsb
loop
cmp
fstpt
adc
and
add
js
dec
push
sbb
lods
jns
pop
addr16
mov
shrb
loope
cmp
mov
pop
stos
xorb
or
mov
dec
jecxz
fstcw
inc
rcll
jo
and
pop
lods
lret
mov
mov
or
mov
and
clc
loopne,pt
dec
xchg
rcrl
jnp
rolb
jg
mov
or
mov
jecxz
cmc
maxps
jb
inc
add
in
aad
cmp
and
mov
and
add
imul
mov
mov
pusha
and
subb
test
bnd
dec
inc
xor
and
lret
xchg
cmp
addb
xchg
in
dec
push
rorb
out
and
adc
stos
nop
adcb
mov
cmp
adc
cmp
inc
sbb
add
add
add
add
add
add
add
add
add
push
inc
push
push
xor
cs
insb
add
filds
jns
add
outsl
data16
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
pop
add
arpl
arpl
insb
add
add
gs
arpl
add
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
pop
add
aas
aas
xor
gs
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
pop
add
pop
pop
ja
jb
jbe
js
aas
js
insl
popa
js
imul
xor
add
insb
add
gs
arpl
rolb
imul
imul
jb
je
add
pop
add
aas
xor
je
gs
insl
inc
inc
push
inc
inc
inc
push
inc
inc
dec
dec
inc
pop
add
add
je
push
add
bound
arpl
add
inc
add
jae
outsl
insb
insb
add
add
jns
pop
gs
insb
imul
aas
arpl
inc
inc
xor
jae
jb
popa
insl
pop
ja
je
popa
jae
imul
add
aas
aas
pop
inc
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
push
inc
pop
dec
inc
pop
add
out
pop
pop
jo
pop
ja
outsb
jbe
jb
outsb
add
add
je
gs
imul
inc
push
inc
push
outsl
jae
jb
popa
insl
inc
inc
pop
pop
add
jae
imul
insl
inc
inc
aaa
inc
outsl
jae
jb
popa
insl
inc
inc
inc
add
insb
insb
add
imul
pop
insl
bound
bound
je
in
add
gs
outsb
add
mov
pop
imul
add
add
insb
outsl
add
cmpsb
add
jo
insb
popa
jae
add
pop
add
aas
xor
fs
je
jo
imul
push
inc
inc
inc
pop
add
cli
add
jae
jo
add
clc
add
aas
pop
inc
imul
inc
inc
push
inc
inc
push
inc
pop
dec
inc
pop
add
sti
add
jb
bound
inc
imul
insl
inc
inc
push
inc
inc
push
inc
push
imul
inc
inc
pop
pop
add
mov
gs
ja
add
add
jne
arpl
jb
les
pop
imul
daa
add
aas
xor
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
out
aas
aas
xor
je
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
push
inc
inc
inc
pop
add
sub
aas
xor
imul
jb
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
add
aas
pop
aaa
jae
jb
je
gs
insl
inc
inc
ss
inc
add
pop
add
jae
popa
jb
push
dec
push
dec
cs
insb
add
dec
jae
inc
insb
outsl
jae
inc
insb
insb
dec
popa
outsb
fs
gs
add
inc
popa
je
bound
gs
gs
gs
add
dec
jae
push
gs
jb
jo
jb
jns
add
add
jae
inc
gs
gs
je
jb
push
popa
insb
imul
push
add
add
imul
fs
je
outsb
outsw
inc
jb
insl
push
arpl
jo
inc
add
add
imul
push
gs
outsb
je
addr16
fildl
dec
jae
inc
outsb
popa
bound
outsl
addr16
add
add
imul
je
jb
push
je
je
push
add
add
jae
push
gs
gs
je
jb
inc
je
jb
bound
gs
add
cmp
je
bound
gs
js
outsl
jb
inc
add
mov
push
jne
jb
inc
gs
je
jb
push
je
je
inc
jb
insl
inc
gs
jb
jo
outsl
jb
add
add
jae
inc
outsl
insb
insb
arpl
gs
outsb
outsw
push
add
push
arpl
fs
gs
je
imul
dec
jae
inc
fs
jb
imul
jo
push
add
inc
gs
jae
jb
outsb
outsw
inc
add
add
imul
outsl
fs
je
add
add
imul
imul
jo
inc
add
add
imul
imul
jae
inc
gs
gs
push
jae
jb
popa
je
inc
add
aaa
add
jae
inc
gs
gs
push
jae
jb
popa
je
push
add
mov
inc
outsb
popa
bound
dec
push
jb
jbe
gs
add
jo
outsb
push
popa
arpl
addr16
js
add
add
imul
fs
je
outsl
fs
jb
insl
push
popa
arpl
addr16
outsl
fs
add
add
imul
inc
insb
gs
jb
popa
je
add
out
dec
jae
push
gs
outsl
insl
jo
outsb
outsb
je
je
je
inc
add
dec
jae
inc
outsl
outsb
imul
push
jb
fs
je
js
add
adc
je
bound
gs
outsb
gs
je
push
jb
outsb
jae
outsl
jb
inc
add
inc
fs
jb
imul
jne
je
js
add
pop
add
imul
outsl
jae
add
jg
dec
jae
push
jae
inc
gs
je
jb
push
add
mov
dec
outsl
je
data16
imul
push
add
add
imul
popa
bound
gs
je
je
add
add
imul
je
jb
inc
add
test
dec
jae
inc
outsl
outsb
imul
push
jb
fs
je
js
add
lcall
gs
je
inc
outsb
fs
gs
data16
outsb
jae
popa
insb
insb
gs
imul
jns
add
add
imul
jne
je
insb
gs
je
fs
add
dec
jae
inc
gs
push
jne
push
popa
jb
gs
add
push
jb
jbe
gs
imul
inc
add
push
add
imul
inc
popa
je
push
imul
jae
inc
gs
popa
jb
gs
popa
je
inc
add
push
jb
jbe
gs
imul
test
inc
gs
outsl
insl
jo
outsb
outsb
je
je
je
push
add
inc
popa
je
bound
gs
insl
jo
jb
inc
add
add
imul
gs
outsl
js
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
icebp
add
dec
outsl
jae
outsb
popa
insl
gs
outsl
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
mov
popa
je
inc
imul
outsb
addr16
add
fldl
inc
gs
imul
push
jo
arpl
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
test
push
popa
imul
je
jo
gs
bound
arpl
js
add
add
inc
bound
addr16
jb
jae
outsb
je
adc
push
gs
gs
popa
addr16
popa
imul
imul
add
add
jo
outsb
push
push
add
xchg
add
je
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
fildl
outsl
insl
jo
jb
push
je
imul
add
je
outsl
outsb
jae
insb
gs
jb
arpl
jae
imul
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
push
je
jb
add
popa
insb
imul
jae
insb
gs
dec
inc
imul
jne
gs
je
dec
outsl
arpl
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
hlt
add
gs
je
push
gs
popa
jo
outsl
jb
inc
add
sub
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
jae
insb
gs
outsb
jne
outsl
outsb
je
outsl
insb
add
into
add
je
popa
arpl
outsl
outsb
jae
insb
add
insb
jae
jb
popa
je
add
lcall
jae
gs
push
outsl
ja
xor
imul
jns
add
fiadds
dec
gs
jo
outsl
insl
jo
arpl
add
insl
bound
jns
arpl
js
ja
push
jne
jne
push
jae
jb
push
inc
add
sti
add
outsb
push
jb
imul
jb
popa
jo
imul
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
scas
add
je
jb
arpl
jae
imul
inc
gs
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
outsb
outsw
add
pop
add
arpl
outsb
arpl
insl
gs
imul
gs
outsl
arpl
push
imul
inc
gs
popa
insl
gs
imul
add
fildl
gs
inc
imul
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
clc
add
je
gs
jae
jbe
jo
dec
outsb
jae
popa
insb
insb
dec
outsl
fs
hlt
add
fs
imul
add
int
inc
popa
insb
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
outsl
add
imul
insb
gs
bound
arpl
add
gs
gs
inc
imul
gs
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
outsl
jb
outsl
insb
jne
gs
popa
insl
gs
add
add
jb
popa
je
add
xchg
inc
jb
popa
je
dec
popa
jb
dec
imul
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
bound
push
imul
outsb
jae
insb
gs
dec
inc
add
fwait
add
je
jne
inc
bound
push
je
imul
add
outsl
jbe
inc
imul
add
je
outsl
outsb
jae
insb
gs
jne
jae
jb
outsb
outsw
add
sub
dec
pop
inc
outsl
jo
add
je
push
gs
outsl
outsb
jae
insb
gs
popa
jb
ja
jb
push
je
je
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
clc
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
xchg
add
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
insb
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
je
jb
add
add
je
outsl
outsb
jae
insb
gs
insb
imul
add
push
jo
popa
je
push
gs
jne
arpl
add
add
outsb
fs
gs
jne
arpl
add
add
fs
outsl
outsb
jae
insb
gs
insb
imul
add
outsl
arpl
inc
insb
popa
addr16
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
insl
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
js
add
gs
outsl
arpl
fs
js
push
add
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
outsb
fs
gs
inc
imul
imul
imul
insb
gs
bound
arpl
add
push
gs
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
add
insl
outsl
jbe
inc
imul
jns
add
inc
push
push
inc
dec
dec
cs
insb
add
cmpsb
add
pop
gs
je
test
jns
add
movl
gs
cmp
pop
inc
dec
jae
outsb
add
sbb
imul
pop
outsb
gs
popa
data16
jb
add
add
bound
jae
outsb
add
or
pop
insl
imul
add
popa
je
outsb
xor
jno
ja
jae
outsb
add
daa
add
jb
outsl
jne
add
add
je
outsb
imul
pop
jb
je
jo
add
jb
outsl
jb
add
add
je
outsb
arpl
add
inc
add
jae
outsl
jne
add
jae
jo
add
outsl
jb
jno
pop
popa
gs
je
jb
outsb
pop
fs
insb
add
addl
imul
add
jp
gs
add
popa
outsb
data16
repz
insl
bound
jns
add
ja
pop
je
jne
jo
jb
add
add
js
arpl
add
jae
popa
outsb
add
addr16
arpl
add
outsb
gs
arpl
adc
jae
jb
arpl
add
mov
arpl
arpl
add
pop
data16
gs
data16
je
pop
add
jae
bound
outsl
ja
jb
mov
jo
jb
add
pop
imul
addr16
add
pop
imul
insl
add
push
inc
push
push
cs
insb
add
leave
add
ja
je
jo
add
cmp
outsb
add
testl
popa
insb
pop
jne
ja
outsb
xor
add
jae
jb
arpl
add
add
bound
arpl
insb
add
add
je
insb
insb
add
bound
pop
arpl
je
inc
push
inc
inc
inc
push
inc
inc
inc
pop
add
inc
add
jae
cwtl
add
bound
outsl
jne
jo
jb
test
aas
aas
xor
fs
arpl
je
inc
push
inc
inc
inc
inc
inc
push
inc
inc
inc
pop
add
lcall
imul
add
insl
imul
ss
inc
add
je
arpl
add
sbb
push
add
add
jne
jo
jb
add
popa
jb
jbe
xchg
pop
jo
insb
outsl
jae
add
add
gs
imul
outsl
imul
pop
ja
outsb
popa
insl
add
xchg
pop
pop
bound
imul
xor
imul
add
js
popa
insb
insb
push
outsb
ja
outsb
fs
je
jb
pop
add
bound
arpl
add
add
arpl
inc
outsl
insl
jo
jb
push
je
imul
pop
pop
ja
gs
popa
imul
add
add
jae
ja
jb
outsb
je
add
pop
inc
dec
popa
je
outsb
add
pop
pop
jo
pop
ja
outsb
jbe
jb
outsb
add
add
fs
imul
xor
jp
pop
jne
addr16
push
pop
insl
bound
push
pop
jo
je
jae
add
je
jb
jbe
jae
add
inc
inc
push
push
xor
cs
insb
add
jae
push
inc
push
dec
inc
dec
push
pop
push
jae
jb
jb
add
imul
jb
popa
je
inc
imul
dec
outsb
outsw
add
mov
push
popa
jb
outsl
outsl
insb
inc
jb
insl
push
dec
xor
add
push
dec
cmp
outsl
insl
push
dec
xor
testl
jns
jb
insl
dec
xor
cmp
push
popa
jb
arpl
jo
cmp
sbb
push
cmp
outsl
insl
push
je
add
roll
popa
jb
outsl
jb
add
dec
popa
inc
jne
insb
fs
gs
imul
push
popa
jb
dec
xor
jb
insl
inc
outsl
outsl
insb
add
push
add
jb
dec
xor
jb
insl
push
je
add
push
popa
jb
arpl
bound
sub
push
popa
jb
jns
jb
insl
push
cmp
rolb
push
popa
jb
popa
outsb
je
imul
jae
popa
je
push
imul
inc
outsl
jae
popa
je
push
imul
jb
popa
outsb
je
imul
dec
push
push
inc
inc
inc
inc
push
push
inc
pop
pop
push
jae
jb
outsb
insl
popa
jb
push
add
jb
jae
jb
jb
insl
inc
arpl
add
add
arpl
inc
jb
insl
inc
jae
jb
add
push
popa
jb
dec
xor
outsl
insl
push
je
add
add
jb
popa
je
inc
jb
insl
inc
arpl
add
push
dec
xor
outsl
insl
inc
imul
push
popa
jb
jns
jb
insl
push
xor
fldl
push
popa
jb
outsl
jb
popa
je
jne
bound
add
add
jb
xor
jb
insl
inc
popa
je
add
cmp
outsl
insl
inc
jns
lods
add
jb
jns
jb
insl
push
dec
xor
add
push
popa
jb
jae
jb
jb
insl
push
xor
cmp
push
popa
jb
jns
jb
insl
inc
arpl
add
add
push
push
inc
inc
inc
inc
push
push
inc
pop
pop
push
jae
jb
popa
jb
push
add
popa
jb
popa
outsb
je
outsl
jo
add
push
popa
jb
cmp
outsl
insl
push
xor
ss
add
jg
add
jnp
add
jg
add
add
add
add
add
add
sahf
jge
add
jne
add
add
mov
add
xor
add
mov
add
add
add
add
add
addb
les
add
imul
add
add
test
add
add
add
test
add
add
imul
dec
push
add
add
jp
add
outsb
imul
shrb
add
add
scas
imul
add
imul
add
push
add
imul
sub
add
push
add
add
mov
add
xor
add
imul
add
imul
push
add
cmp
add
in
add
push
imul
cld
push
add
add
add
mov
outsb
add
insb
outsl
add
sub
call
insb
add
mov
add
call
insl
add
les
add
add
test
add
ret
add
add
imul
push
add
push
outsb
add
mov
add
add
insb
add
fisubrl
add
add
push
outsl
add
outsb
add
je
add
inc
outsl
add
lcall
add
imul
and
add
outsb
add
data16
add
lods
insl
add
add
add
insb
add
cli
insb
add
mov
add
outsl
add
cmpsb
insb
add
adc
add
sbb
add
add
add
add
shlb
jae,pt
add
je
add
jb
add
add
loop
add
cld
jb
add
add
out
jno
add
jb
add
jo
add
jo
add
jno
add
jb
add
add
sahf
jae
add
add
les
add
add
mov
xchg
add
add
fidivl
add
jae
add
je
add
jb
add
add
lock
add
je
add
add
xor
add
ret
add
jo
add
je
add
jno
add
add
mov
jo
add
add
sub
add
mov
add
sub
add
add
inc
jb
add
add
and
add
add
xchg
add
add
jbe
add
or
add
js
add
test
add
add
add
outsl
add
push
add
fidivl
add
je
add
add
add
into
outsl
add
add
add
cmp
add
mov
add
add
add
xchg
jbe
add
jbe
add
add
movsb
jbe
add
add
data16
add
add
jo
add
call
jne
add
jne
add
jne
add
add
stos
jne
add
jne
add
add
push
jbe
add
jbe
add
add
loopne
add
ss
add
jbe
add
jne
add
add
mov
add
inc
jbe
add
add
add
js
add
ja
add
add
dec
js
add
add
ja
add
ja
add
add
clc
jbe
add
add
mov
add
pop
ja
add
ja
add
jbe
add
add
test
add
and
add
js
add
add
jbe
add
jbe
add
add
in
jbe
add
add
js
add
ja
add
js
add
ja
add
ja
add
add
add
add
inc
jns
add
js
add
js
add
js
add
jns
add
add
add
add
push
jp
add
add
js
add
jp
add
add
sarb
add
jns
add
add
sarb
es
add
jns
add
jns
add
jp
add
jns
add
add
jp
add
add
add
add
push
add
fs
add
add
test
add
add
add
test
add
add
imul
dec
push
add
add
jp
add
outsb
imul
shrb
add
add
scas
imul
add
imul
add
push
add
imul
sub
add
push
add
add
mov
add
xor
add
imul
add
imul
push
add
cmp
add
in
add
push
imul
cld
push
add
add
add
mov
outsb
add
insb
outsl
add
sub
call
insb
add
mov
add
call
insl
add
les
add
add
test
add
ret
add
add
imul
push
add
push
outsb
add
mov
add
add
insb
add
fisubrl
add
add
push
outsl
add
outsb
add
je
add
inc
outsl
add
lcall
add
imul
and
add
outsb
add
data16
add
lods
insl
add
add
add
insb
add
cli
insb
add
mov
add
outsl
add
cmpsb
insb
add
adc
add
sbb
add
add
add
add
shlb
jae,pt
add
je
add
jb
add
add
loop
add
cld
jb
add
add
out
jno
add
jb
add
jo
add
jo
add
jno
add
jb
add
add
sahf
jae
add
add
les
add
add
mov
xchg
add
add
fidivl
add
jae
add
je
add
jb
add
add
lock
add
je
add
add
xor
add
ret
add
jo
add
je
add
jno
add
add
mov
jo
add
add
sub
add
mov
add
sub
add
add
inc
jb
add
add
and
add
add
xchg
add
add
jbe
add
or
add
js
add
test
add
add
add
outsl
add
push
add
fidivl
add
je
add
add
add
into
outsl
add
add
add
cmp
add
mov
add
add
add
xchg
jbe
add
jbe
add
add
movsb
jbe
add
add
data16
add
add
jo
add
call
jne
add
jne
add
jne
add
add
stos
jne
add
jne
add
add
push
jbe
add
jbe
add
add
loopne
add
ss
add
jbe
add
jne
add
add
mov
add
inc
jbe
add
add
add
js
add
ja
add
add
dec
js
add
add
ja
add
ja
add
add
clc
jbe
add
add
mov
add
pop
ja
add
ja
add
jbe
add
add
test
add
and
add
js
add
add
jbe
add
jbe
add
add
in
jbe
add
add
js
add
ja
add
js
add
ja
add
ja
add
add
add
add
inc
jns
add
js
add
js
add
js
add
jns
add
add
add
add
push
jp
add
add
js
add
jp
add
add
sarb
add
jns
add
add
sarb
es
add
jns
add
jns
add
jp
add
jns
add
add
jp
cwtl
fs
add
or
add
or
add
js
add
adc
add
mov
ret
add
adc
add
rolb
sets
add
inc
add
jge
add
sbbb
xor
adc
xchg
pop
imul
xor
or
add
sgdtl
mov
les
add
mov
add
xor
xor
add
add
add
add
or
mov
inc
inc
dec
xor
cs
insb
add
add
jae
and
insl
xor
and
mov
popa
add
rorb
add
add
addb
fs
xor
outsl
dec
xor
push
sub
xorb
dec
mov
pusha
add
adc
add
mov
rolb
adc
adcb
and
mov
sub
inc
inc
or
add
dec
inc
dec
dec
inc
inc
cs
dec
dec
add
add
add
add
orb
add
add
in
mov
inc
lret
mov
adc
add
and
add
cmp
add
outsl
and
pop
push
xchg
add
add
add
add
add
aam
jno
cld
add
add
add
add
add
push
add
add
push
jno
sbb
lea
adc
add
addb
add
add
add
inc
cmpsl
lret
add
add
add
nop
add
add
add
add
mov
add
push
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
shlb
cmpsb
mov
and
mov
add
add
add
add
add
add
enter
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
movsb
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
xor
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
add
xor
add
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
jp
popa
add
xor
push
add
aaa
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
inc
add
push
add
dec
add
add
xor
push
add
add
dec
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
inc
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
aaa
add
inc
add
inc
add
add
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
je
push
add
inc
add
dec
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
or
je
jo
cmp
xor
and
and
insl
gs
jo
imul
popa
je
outsl
outsb
and
and
jb
imul
xor
xor
xor
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
gs
xor
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
addr16
addr16
or
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
or
or
outsb
sbb
testl
sbb
jmp
popf
enter
enter
inc
fsubrl
mov
jge
push
cs
cltd
test
push
into
bound
pop
pop
mov
xor
mov
outsb
clc
or
cs
int
pop
mov
in
lret
inc
and
adc
and
mov
mov
hlt
adc
std
or
hlt
fdiv
and
xor
pop
adc
repnz
es
js
push
popa
adc
popa
cmp
scas
dec
lds
xchg
push
cmp
add
daa
std
insl
daa
loopne
xchg
jecxz
iret
insl
in
inc
dec
cmp
sub
in
xchg
dec
pop
je
mov
mov
stos
unpckhps
ror
out
push
bound
fwait
lods
cmpsb
push
sbb
jg
rorb
aas
jnp
fcomps
jns
push
dec
jnp
sti
mov
lret
sbb
xlat
fsts
out
dec
scas
adc
jmp
sub
sahf
dec
rol
fldenv
xlat
mov
test
enter
or
out
cwtl
mov
push
pop
js
lods
lret
test
subb
mov
std
mov
scas
and
or
je
adcl
sub
les
inc
mov
in
sarl
lods
mov
cmp
into
mov
jb
imul
mov
pop
mov
mov
xor
stc
dec
imul
mov
out
mov
sub
jno
adc
sbb
mov
mov
cld
js
repnz
fisttps
or
adc
lea
lahf
dec
add
scas
ror
outsb
fildll
mov
xchg
add
pop
xor
mov
and
cmp
cmpsb
adc
mov
mov
lret
xor
shrb
leave
inc
inc
fildll
loope
adc
add
cmp
push
push
jb
mov
call
shrl
xchg
jne
aas
fidivrs
xor
cld
in
and
inc
fidivrl
jns
sbb
out
repz
pop
idivb
test
outsl
lods
push
xor
dec
dec
cmp
bound
ja
cs
dec
mov
mov
sub
and
sub
mov
lret
fcomip
outsl
daa
movsl
sbb
into
add
xor
aaa
lock
cmp
mov
mov
xchg
iret
inc
and
scas
xor
mov
push
aam
mov
pop
mov
insb
loopne
das
mov
out
pop
jle
mov
int3
mov
repz
lock
ret
ret
loope
mov
cmp
push
daa
mov
dec
sub
ret
addr16
lahf
inc
cs
std
cmp
mov
into
and
sbb
iret
cmp
add
mov
out
cli
xor
out
sbb
iret
pop
xlat
sbb
jne
pop
es
fisttps
pusha
jb
gs
jae
cmp
aad
test
dec
call
insl
aaa
mov
ja
repnz
movl
dec
sub
out
sbb
pop
roll
xor
pop
jb
push
inc
cmp
pop
xchg
adcl
fldt
jge
xchg
cmp
add
aad
out
mov
pop
pop
std
and
xor
cmp
mov
and
aas
sub
and
ss
jg
inc
pop
test
inc
inc
xchg
xchg
cmc
inc
int3
ljmp
enter
mov
outsb
lret
lds
cs
fcoml
les
fwait
in
and
enter
and
les
pop
loopne
push
lret
push
lods
xchg
iret
xor
sub
jge
and
ss
cmpsb
add
adc
loopne
subl
lret
sub
icebp
xchg
bound
dec
rol
mov
and
pop
aad
mov
mov
cmc
jmp
ja
sub
mov
cld
outsl
xlat
or
and
jo
mov
enter
mov
inc
lret
push
inc
or
test
jp
push
lahf
fstl
aas
iret
ja
and
std
pop
fnstcw
sub
dec
insb
fstpt
dec
out
xchg
aaa
inc
inc
xor
xchg
shll
cmp
aad
test
je
or
cwtl
xchg
dec
dec
aas
arpl
push
scas
fsubl
std
jno
dec
pand
scas
mov
push
scas
clc
xchg
pop
insb
lods
xor
inc
or
cmp
dec
pusha
aam
out
rcll
lahf
pop
test
jns
cwtl
pop
mov
es
scas
cmc
aam
inc
xor
lock
inc
sbbl
and
mov
ret
add
jnp
push
xor
sub
inc
test
pushf
xor
pop
lahf
leave
sbb
and
cltd
getsec
mov
inc
leave
pop
movb
push
add
daa
push
mov
jmp
jl
xorb
mov
call
aam
jl
xchg
or
jmp
mov
inc
sbb
mov
fsub
sti
test
and
sbb
mov
or
lds
loop
mov
xchg
subps
in
rorl
inc
lret
and
mov
icebp
push
aaa
je
mov
hlt
incb
cmc
mov
mov
push
mov
lods
xchg
dec
xor
andl
cmp
xchg
dec
jl
in
and
insl
lods
fidivs
popf
push
xchg
ja
xchg
aaa
pop
enter
sub
cwtl
adc
jl
loope
add
inc
arpl
push
int
push
pop
and
pop
lret
faddl
cmp
cmp
aam
movsl
fsub
stos
data16
push
cmp
fdivrl
shll
popa
pop
ficomps
cmp
or
mov
mov
push
mov
cmp
pop
sti
inc
ds
subl
xor
cmp
push
xor
sbb
and
cli
mov
stc
cltd
adc
or
enter
ret
sub
test
dec
mov
inc
push
out
or
into
jecxz
sub
sbb
or
push
fisubrl
lret
add
jmp
es
and
push
adc
imul
mov
clc
mov
out
sahf
in
push
push
adc
aas
jmp
cmpl
fwait
jne
lret
adc
ret
lahf
mov
lods
mov
fsub
fiaddl
mov
std
stc
pop
mov
pop
out
fidivrs
dec
cmp
rcll
pop
jp
lods
mov
push
hlt
push
dec
xchg
xchg
out
sub
xchg
lds
xlat
hlt
mov
jae
dec
lods
xor
inc
sub
frstor
mov
je
xchg
push
lret
xor
mov
cmp
in
enter
xlat
arpl
inc
pusha
adc
pop
sti
xor
sub
adc
testl
dec
call
icebp
lret
push
rorb
jmp
xchg
jg
xchg
sub
mov
rorl
mov
sar
ret
sahf
cmpsb
outsl
ja
out
mulb
push
xor
out
ror
xchg
adc
push
ja
jge
jno
jae
or
xlat
xor
ljmp
aad
xchg
imull
xchg
movsl
stos
push
inc
sub
hlt
jp
iret
sbb
add
and
xor
xchg
stos
ja
mov
xor
insb
sub
addl
rolb
mov
xor
stc
gs
push
add
iret
les
sti
hlt
insb
loope
popf
stos
pop
sbb
rcll
out
out
in
add
dec
mov
mov
cli
aaa
push
es
xchg
pop
pop
inc
inc
inc
jmp
iret
dec
fwait
adc
xrelease
into
sub
insl
xor
stos
xlat
and
jge
pop
popf
jne
addr16
sarl
cs
test
xor
push
jnp
mov
leave
dec
push
adc
xchg
inc
bnd
mov
sbb
dec
and
dec
icebp
sbb
hlt
push
clc
or
or
jb
stc
scas
enter
xlat
insl
movsb
add
inc
cli
mov
or
adc
dec
sub
sbb
es
jp
xchg
rcrb
mov
andb
testb
inc
sub
mov
rolb
insb
mov
lds
xchg
aas
lcall
cli
push
mov
mov
aas
ret
aam
fisubl
inc
test
pop
lods
mov
mov
std
xor
stos
and
lahf
pop
jbe
dec
push
iret
cld
sub
adc
lret
arpl
xchg
sbb
jmp
lock
pop
and
mov
dec
mov
pusha
mov
push
push
mov
inc
mov
outsl
adc
sub
in
lods
inc
jae
fwait
arpl
xor
loopne
xchg
outsl
imul
xor
inc
adc
loop
scas
sbb
ja
ljmp
cwtl
pusha
and
jp
jp
mov
adc
cli
inc
jae
test
hlt
stc
xchg
mov
js
les
stc
stos
pop
pop
cmp
repnz
sarb
cmp
pop
out
dec
popf
scas
sub
das
mov
adc
in
mov
mov
pop
ds
outsl
fidivs
testl
mov
dec
sbb
into
add
sub
arpl
push
mov
frstor
xchg
adc
mov
mov
fnstenv
mov
daa
stos
ja
fidivs
sbb
fwait
xchg
jecxz
xor
inc
push
iret
cmpsb
mov
cwtl
xchg
mov
mov
xor
sbb
pop
and
jno
pop
pop
movsb
dec
mov
mov
fstpl
cmp
inc
lret
lret
adc
pop
test
mov
test
jae
lret
mov
jnp
inc
sahf
dec
mov
fbld
leave
xchg
std
shlb
leave
jge
mov
and
mov
and
inc
out
mov
cmpsl
fldl
adc
pop
xor
stos
imul
mov
xor
aas
enter
icebp
lahf
adc
sub
aad
jmp
dec
shlb
ja
fsubs
enter
mov
fildll
dec
psubd
pop
adc
add
push
dec
aas
xchg
adc
push
mov
mov
or
mov
lds
scas
outsl
fsub
in
push
les
leave
cmp
fs
das
or
sbb
ret
and
cmc
jle
in
cmp
cs
lret
rcll
sub
and
inc
cmp
mov
dec
jp
in
push
mov
xchg
in
mov
movb
mov
in
sarl
mov
shl
jo,pt
icebp
xchg
cmp
out
pop
jmp
fnstsw
dec
mov
les
in
push
test
test
pop
rep
shlb
outsl
inc
push
pop
arpl
outsb
fcoms
clc
bound
cmp
dec
movsl
lret
jl
rcrb
mov
in
push
xchg
jns
int3
sahf
int3
jbe
adc
rorb
xchg
pushl
mov
sub
xor
inc
shl
mov
sub
sahf
cs
xchg
mov
aas
cwtl
inc
mov
fnstsw
pop
fisttps
mov
shll
add
mov
add
nop
adc
aas
iret
fistpl
into
out
jg
or
in
pop
xor
cmp
gs
push
iret
add
add
in
outsb
push
push
sti
sub
in
jb
jne
mov
fcmove
lock
sbb
out
mov
dec
fs
nop
xchg
mov
add
sarl
aam
adc
push
in
adc
inc
or
cmp
xchg
cs
aaa
sbb
ljmp
pop
outsl
cli
arpl
cli
testl
sbb
sbb
jge
aam
rol
das
imul
mov
mov
pop
movsb
fbld
mov
mov
mov
test
xor
pop
xor
gs
adcl
fldz
push
push
sub
subl
sbb
lea
sub
cmpsl
clc
ds
add
ror
inc
lods
jnp
mov
mov
outsl
cwtl
push
ficoml
sub
pop
mov
or
xor
iret
adc
add
inc
sbb
insl
push
jmp
and
out
shlb
mov
xor
frstor
lock
dec
push
jmp
aas
movsl
mov
or
jne
es
jne
movsb
lret
pushf
rorb
test
loopne
cld
inc
add
push
mov
jbe
mov
xor
sbb
xor
pop
pop
or
xor
sub
cmp
dec
cmp
aad
leave
pop
dec
hlt
roll
jle
arpl
push
and
aad
popf
cmp
mov
mov
lcall
sub
push
cmp
out
icebp
ljmp
adc
mov
movsl
adc
nop
jns
sahf
cs
mov
loop
jnp
xor
shrl
iret
inc
mov
mov
jmp
pop
lds
loopne
mov
lcall
push
mov
frstor
ret
and
outsb
ds
and
ja
fisubl
cs
xchg
push
loop
or
xchg
pop
aad
pop
movsl
sbb
pop
insl
jp
outsl
pop
cld
xchg
out
inc
cwtl
gs
ljmp
inc
or
mov
dec
out
mov
xchg
xor
mov
es
and
mov
push
cmp
data16
xor
out
mov
jno
js
mov
mov
test
pop
dec
cmc
add
dec
pop
or
data16
xlat
mov
loopne
mulb
ds
jmp
and
and
dec
sub
adc
inc
inc
out
sbb
adc
and
imul
add
shlb
lret
outsb
mov
imull
pop
or
push
in
mov
out
and
ficoml
mov
fs
mov
jae,pn
repnz
call
mov
ja
xchg
pshufw
mov
mov
push
shll
jg
inc
push
mov
mov
ret
and
push
sbb
inc
push
outsb
cs
enter
out
pop
xor
jnp
mov
les
inc
xchg
dec
gs
or
lea
mov
sbb
roll
mov
mov
pop
add
pop
in
out
cmp
mov
stos
loop
mov
push
inc
cmp
inc
cli
scas
jle
mov
lea
ds
inc
jecxz
scas
outsb
sbb
aad
mov
ja
stos
inc
mov
fsubl
push
pop
and
pushf
push
scas
into
mov
stos
ljmp
push
shlb
xchg
mov
dec
cmc
nop
xor
push
adc
and
sbb
jle
shll
out
movsl
or
mov
shrl
fstps
dec
push
sbb
add
insb
xchg
push
mov
and
aam
cmpsl
fdivrs
xchg
push
shrb
xor
lret
pop
add
mov
outsb
out
adc
arpl
mov
mov
cmpsl
mov
mov
into
movsl
cmp
mov
mov
jp
mov
scas
cs
adc
fnstsw
jecxz
lahf
mov
pcmpeqd
cmpsb
mov
and
push
rorl
mov
ds
xor
aad
jp
dec
jno
dec
and
sub
jg
mov
xchg
lds
sbb
outsb
leave
xchg
pushf
subl
pushf
mov
mov
das
fwait
aas
inc
or
mov
aad
mov
les
insb
ret
push
add
xchg
mov
push
dec
std
dec
adc
jo
cs
inc
lods
xor
or
call
sub
jae
cmova
and
xchg
call
ljmp
in
arpl
shrb
icebp
lret
jp
mov
dec
cmp
in
mov
mov
xor
dec
aas
js
adc
aas
and
or
mov
ss
mov
ret
mov
in
bound
mov
mov
inc
scas
in
inc
clc
pop
int3
into
call
addl
lods
shrb
jge
iret
fxam
imul
aad
aas
popf
enter
mov
jnp
pop
or
xor
cld
mov
in
sub
or
jae
pop
hlt
lret
jecxz
cmp
fs
fldl
mov
inc
sub
adc
bound
adcl
ljmp
or
adc
xor
mov
sub
daa
push
mov
popa
stos
mov
jmp
fs
rorb
xor
insl
add
push
scas
dec
aas
das
or
mov
sbb
jbe
out
sbb
aad
arpl
mov
pop
sarb
mov
add
mov
mov
xor
lret
mov
test
shr
insb
fistpl
mov
add
fnstsw
aam
pop
sbb
xor
xchg
dec
sub
mov
jne
lret
lods
sub
adc
mov
mov
filds
jno
and
and
outsb
jmp
shlb
push
mov
push
in
mov
adc
ret
xor
lock
ret
nop
je
pop
out
stc
add
sbb
dec
mov
add
push
adc
lock
lds
xchg
aad
dec
or
stos
lds
add
inc
xchg
inc
rcrl
aas
cmp
mov
repz
xor
stc
jle
pushf
pop
and
cli
xor
cmp
mov
cmp
lcall
cmp
rcl
ja
cmp
cmp
addr16
lea
ja
mov
mov
loope
pushf
inc
lret
leave
data16
js
jno
mov
mov
shl
pop
mov
push
sti
ficoms
mov
jae
dec
and
mov
cltd
movsb
fiaddl
outsl
ljmp
lods
jmp
xchg
pop
mov
arpl
inc
nop
mov
mov
cli
cld
mov
jge
pushf
sub
nop
lcall
push
push
aas
jnp
outsl
mov
add
xor
mov
dec
or
cmc
cli
int
cmp
ss
scas
insl
jb
xchg
sar
xor
jnp
add
inc
in
stos
mov
std
int
mov
ds
repz
mov
std
and
ret
mov
and
sub
cmpsb
mov
iret
xchg
pop
or
and
je
pop
add
das
jecxz
lret
aas
jbe
sbb
es
xchg
int
inc
out
movsl
cmc
repz
sub
inc
daa
cmpsb
mov
dec
stos
popf
stc
int
mov
xor
mov
jmp
mov
sub
movsl
sub
xor
jnp
enter
jae
cmp
dec
jecxz
jge
outsl
faddl
dec
test
adc
pop
jb
hlt
cld
sub
icebp
sbb
pushf
outsb
and
xor
pop
push
xchg
movsb
insb
jg
scas
mov
in
nop
mov
mov
inc
es
and
mov
int
mov
data16
dec
cmp
rorb
repnz
sbb
ljmp
mov
aad
push
aas
or
push
cmpsb
push
mov
lods
cmp
cmp
inc
cmpb
mov
aas
or
mov
js
mov
or
scas
sub
fiaddl
test
push
pusha
fidivs
lahf
cmp
xor
mov
rorl
pop
jge
pop
ret
push
adcl
aaa
pop
ljmp
insb
sub
popf
lods
mov
insl
xor
iret
fstps
dec
sbb
and
pop
iret
dec
sub
scas
scas
inc
sbb
xchg
cmp
xchg
sub
scas
dec
adc
sti
add
cmp
mov
adc
pusha
xchg
sub
daa
adc
fwait
aas
addr16
dec
iret
inc
jge
les
xlat
ds
mov
sub
mov
ljmp
test
add
mov
ja
xor
in
cld
cmp
xor
fidivs
mov
mov
outsb
mov
mov
fcomps
jbe
inc
sbb
mov
xchg
sarb
cmp
leave
or
add
jle
and
je
je
scas
test
or
and
or
pop
or
mov
and
or
mov
jbe
dec
sbb
sarl
leave
mov
aam
xchg
mov
cmp
das
cmpsl
mov
xor
mov
insl
test
jae
addl
movsl
push
ljmp
into
mov
ret
inc
pop
pop
movsb
and
scas
pop
leave
divl
loopne
xchg
push
daa
push
das
mov
in
scas
xor
or
ljmp
fimuls
sti
scas
push
jae
repz
jecxz
cs
scas
jle
stos
xor
loope
mov
sbb
push
out
ss
lds
xor
das
ds
xor
jo
mov
cmp
adc
test
sub
fs
add
adc
sub
test
orb
dec
out
out
mov
jae
mov
sub
jmp
in
jnp
sub
or
out
sub
cmp
aam
push
es
out
rorb
xchg
inc
dec
push
inc
je
lcall
lahf
rclb
mov
adc
fsincos
and
adc
cmp
ror
xchg
test
push
mov
mov
add
insb
jge
rol
mov
xchg
push
xor
jo
dec
cmc
push
mov
cmp
cmp
in
push
pop
mov
pusha
inc
pop
mov
sbb
aad
stos
aas
or
xchg
sbb
jb
iret
adc
lret
fcmove
xchg
cs
loopne
and
push
int
dec
add
push
sbb
and
sub
xchg
push
mov
xor
aam
loopne
pop
xchg
fsts
pop
cmpsb
pop
pop
adcl
xchg
in
sub
cmp
sbb
cmp
xor
fbstp
clc
pop
jecxz
and
insb
out
enter
mov
sub
dec
test
fildll
pop
or
or
mov
push
into
ljmp
ret
lds
xor
and
mov
pushf
faddl
cmp
fs
push
jmp
fcomip
int
jmp
loope
arpl
movsb
inc
das
out
mov
test
sbb
and
sub
daa
hlt
mov
sub
data16
jb
mov
pushf
mov
or
ss
sarb
movsl
adc
mulb
fstpl
leave
xor
dec
cmpsl
adc
xor
xor
mov
outsb
dec
jg
or
bound
cmp
pop
mov
push
stc
and
clc
xchg
insl
cmp
pop
mov
iret
pop
mov
add
jb
inc
fxch
push
and
adc
lret
mov
into
xor
stos
test
cs
test
mov
shrb
or
ds
and
and
mov
ss
jo
cmp
mov
pushf
into
push
or
sub
cmp
fldenv
adc
mov
ljmp
push
loop
out
adc
fcoml
out
enter
add
ror
xor
lock
xor
push
jl
cmpsl
pop
lcall
mov
push
shrb
int3
movsl
pop
movsb
in
out
faddp
dec
pop
out
dec
imul
xchg
cmp
adcb
lods
mov
int3
scas
xchg
adc
add
stos
popa
xor
xlat
cli
enter
int3
xchg
jno
les
adc
in
imul
scas
mov
shlb
test
mov
push
hlt
ret
sbb
arpl
push
sbb
and
mov
repnz
jbe
sbb
movsb
and
jo
imul
cmp
cs
jno
out
and
cltd
arpl
sub
push
jnp
movsl
stc
in
dec
mov
sbb
sub
popa
aaa
cltd
mov
test
mov
push
test
gs
in
mov
loope
pusha
inc
cs
fstpl
mov
dec
xor
xlat
mov
dec
ds
inc
cltd
repz
stos
js
sbb
and
pop
xor
fcmove
setle
jb
sbb
push
popa
xchg
cmpsb
mov
jg
in
or
mov
push
sbbl
fiadds
lahf
dec
sbb
mov
adc
aaa
and
fdivs
shrb
cwtl
mov
adc
jno
aas
jnp
sub
stc
push
insb
and
jb
pop
pop
mov
lds
push
loope
les
icebp
popf
dec
rcrb
mov
dec
mov
in
mov
xor
xor
pop
sbb
int3
fbstp
jle
movsb
aam
xor
sarl
out
fcoms
add
inc
or
insl
lea
inc
cmp
cmp
bound
push
jecxz
stos
shll
jp
push
iret
add
movsl
fmulp
hlt
cld
mov
bts
shrb
std
jae
repnz
gs
mov
mov
nop
repnz
das
cld
fisubrl
ror
fs
loop
pop
and
xor
out
int
mov
lea
jo
push
and
popa
xchg
push
out
push
mov
dec
test
jl
std
cmc
push
cli
push
andb
in
push
xor
das
mov
ljmp
iretw
sbb
xor
loop
sub
shlb
mov
insb
pop
loope
mov
mov
rep
jp
push
add
or
in
ljmp
por
arpl
shr
stc
iret
scas
dec
dec
xchg
xchg
sar
push
lret
add
adc
mov
in
dec
lcall
out
fs
stos
cli
xchg
cmp
hlt
je
add
adcb
das
ja
sbb
aad
jo
mov
sbb
xchg
inc
add
out
stos
stos
pop
std
ljmp
dec
in
aaa
mov
mov
cmc
sbb
mov
xor
lea
in
stos
push
test
mov
mov
packssdw
test
push
and
mov
nop
adc
mov
sbb
xlat
aam
cmp
cli
int3
mov
sub
scas
mov
add
clc
add
xor
ret
movl
dec
ss
lret
or
cltd
test
jg
push
cmp
lcall
in
les
popl
dec
and
or
jbe
aad
int
dec
lods
and
ret
jnp
dec
push
shld
imul
mov
js
leave
cltd
ret
xor
into
jb
mov
dec
pop
dec
les
lahf
fmuls
mov
insb
repz
xor
pop
pop
dec
inc
mov
mov
mov
xor
fstpt
pop
xor
sbb
int
mov
mov
jb
cmp
ds
jae
mov
jge
mov
andl
in
jecxz
sub
mov
jg
hlt
clc
jle
insb
push
test
jg
or
enter
jmp
stos
dec
mov
mov
cmpsb
add
test
sahf
pusha
ja
cwtl
int
mov
incl
movsl
stos
shr
subl
popf
mov
jg
lods
jp
cltd
and
shll
cmp
adc
movsl
adc
out
shll
orb
test
mull
lea
in
push
stos
or
imul
mov
jecxz
inc
sub
mov
push
xor
je
mov
arpl
dec
ja
in
sti
mov
dec
jecxz
in
in
jp
jnp
testl
outsb
fstps
das
or
and
jmp
sub
cmpsl
rclb
jp
xchg
rorb
sbb
dec
leave
lea
nop
lcall
shrb
shlb
dec
pop
jae
inc
scas
movsb
shlb
mov
jne
mov
pop
das
mov
jne
faddl
aaa
mov
push
imul
in
xorl
scas
push
sub
rorb
incl
pop
and
mov
or
sbb
jmp
mov
jmp
mov
test
test
bound
mov
cmp
and
aas
adc
cltd
loopne
push
mov
popa
xchg
xchg
inc
jmp
mov
test
push
dec
fsubp
mov
inc
dec
gs
adc
pushf
shlb
mov
popf
adc
js
shl
popa
adc
mov
xchg
sbbl
icebp
pushf
add
pop
pop
pop
out
fwait
jnp
jge
cmp
popa
movsl
xchg
fsubrs
xor
daa
dec
and
lret
shl
scas
pop
mov
aas
cmp
inc
xor
sub
pop
cltd
in
jno
sahf
sbb
add
jmp
fldcw
nop
or
fcoms
jecxz
adc
cmc
stc
xlat
lods
xor
insl
mov
fiadds
jb
ljmp
iret
stc
mov
sub
sub
call
dec
cs
insl
or
clc
cwtl
xor
sub
mov
clc
ljmp
sbb
sub
dec
cmp
fnstcw
lea
mov
icebp
inc
lret
adc
push
popf
adc
dec
jns
pop
inc
ja
rclb
inc
mov
sub
sbb
and
sub
cmpsb
nop
sar
cli
or
jns
lcall
pop
ret
ret
int3
sub
xor
int3
cmpsb
mov
mov
adc
lods
test
push
negb
in
jmp
xchg
imul
repz
pushf
imul
test
adc
pop
insb
scas
js
nop
addb
mov
and
xor
daa
inc
cmp
lret
jg
test
mov
sbbb
and
test
pop
lock
dec
hlt
rcl
fists
mov
mov
xor
mov
sbb
nop
je
jae
xlat
or
and
aam
xor
mov
jbe
mov
lahf
jle
or
mov
cmovle
pop
rcl
out
setns
pop
mull
push
shrb
unpcklps
loopne
push
cmp
sub
les
rorb
xchg
aam
pop
inc
insl
jnp
sbb
push
out
bound
add
test
sub
sbb
scas
xchg
bound
paddusb
popf
sub
sbb
in
sub
dec
lea
out
mov
jae
mov
stos
pop
into
testl
sub
mov
add
add
and
push
inc
cmp
jo
push
scas
inc
pop
xor
cs
repnz
or
lahf
popf
dec
fisubrs
das
leave
mov
push
push
adc
loope
aam
sti
pop
bound
incl
movsl
or
test
rcrb
inc
test
aas
sub
sub
inc
outsb
dec
or
mov
inc
pop
jl
inc
imull
inc
scas
std
xchg
or
nop
cmp
icebp
push
pusha
fwait
xchg
ret
aas
push
dec
xchg
pop
inc
push
repz
ret
imul
into
mov
mov
rcrl
mov
cmc
bound
lods
push
sti
scas
xorl
xchg
cli
ds
repz
mul
ret
push
jl
xor
mov
pop
in
push
cmpsb
jecxz
mov
dec
in
cmpxchg
cmp
shll
movsb
hlt
jg
xor
xor
dec
and
mov
push
fidivrl
fists
and
stos
cmpsl
push
push
inc
sti
sahf
sub
push
push
sahf
std
pop
ljmp
mov
jg
sbb
loop
jmp
jno
rclb
sub
insl
and
adc
inc
push
out
loop
pop
and
mov
ds
test
rcr
shrb
pop
sti
jne
ja
pop
stos
nop
xorb
push
enter
mov
ss
mov
lret
in
adcb
pop
ds
and
mov
je
inc
push
push
stos
test
add
pop
jge
mov
mov
inc
lret
mov
cmp
sub
sbb
ljmp
cmpb
cmpsb
push
mov
fidivs
xchg
push
add
test
ljmp
xchg
mov
xor
add
pop
adc
cmp
arpl
pop
repnz
movsb
push
cmpsl
sbb
mov
push
inc
or
dec
stc
pop
mov
xor
cli
cmc
xor
fwait
inc
lret
pusha
jmp
sbb
testb
dec
and
push
mov
imul
jo
and
mov
dec
sub
scas
cmp
dec
es
scas
and
mov
adc
xor
mov
sub
ror
popa
ss
and
cmpsb
stos
fs
xchg
add
xchg
ror
daa
lret
mov
mov
cs
mov
mov
scas
clc
dec
pop
outsb
lds
push
aas
scas
dec
aas
cmp
push
in
loop
int3
mov
movsl
push
loopne
mov
jo
inc
and
stos
inc
into
jbe
xor
testb
sbb
mov
mov
mov
adc
lods
jecxz
and
fists
in
add
daa
mov
icebp
pop
push
ret
jl
xchg
add
sti
stos
lock
cmpsl
dec
hlt
or
in
or
test
out
sbb
pop
cmp
pop
lahf
lods
sub
push
pop
lods
loop
jl
andl
mov
push
mov
fwait
pop
in
in
icebp
aam
das
loop
loop
test
pushf
stos
push
filds
xor
lock
dec
xchg
and
xor
mov
jbe
sub
cmp
mov
mov
ret
xor
out
jg
xor
and
xor
rorb
inc
pop
aas
push
inc
jmp
jp
std
div
in
pop
fnstenv
sti
mov
ret
cwtl
test
repnz
sbb
pop
daa
mov
dec
inc
push
pop
test
movsl
inc
and
int3
les
xor
insl
xchg
out
mov
xlat
dec
sub
mov
xchg
subb
and
add
imul
mov
dec
out
icebp
outsb
scas
xor
das
add
rorl
add
sub
es
sti
into
sbb
add
aaa
aam
cmp
sub
add
jmp
mov
sbb
fcoms
in
cmpsb
xchg
ret
and
test
stos
inc
jge
mov
xchg
add
daa
cld
jne
sti
jnp
mov
lea
mov
aaa
jg
xor
pop
lahf
mov
insl
push
stos
add
add
int3
gs
sub
repz
dec
and
mov
cmovbe
cmp
mov
dec
pop
sub
push
lods
or
pop
rclb
icebp
hlt
aam
and
pop
xor
sub
daa
enter
enter
mov
pusha
xlat
cs
mov
mov
jb
cmp
sarl
mov
ror
push
sbb
daa
sbb
clc
add
add
jbe
mov
aam
cmp
add
mov
daa
or
jno
inc
inc
mov
mov
and
add
or
and
cs
cmp
clc
xor
mov
test
into
xchg
sbb
arpl
cmp
xor
push
daa
fistpl
cmp
leave
mov
cmp
xor
adc
and
notb
xchg
mov
data16
lods
sti
xchg
out
pop
push
dec
add
inc
sbb
fdivrs
cmp
jl
sub
and
pop
jo
in
jno
addr16
or
xor
inc
inc
cld
in
aam
test
rcll
sti
cmp
xchg
and
mov
sbb
jecxz
int
or
cmp
jp
jns
movsl
mov
fsubrs
icebp
mov
repz
bound
mov
les
int
sbb
sbb
pop
test
sub
xchg
dec
orl
jl
push
push
imul
rolb
dec
xor
es
repz
and
fucomi
xchg
sbb
out
fbstp
sub
xchg
sarb
or
sahf
call
cs
loop
mov
js
push
cs
nop
popf
dec
lods
cmp
movsb
inc
sub
push
mov
clc
scas
sti
movsl
iret
orb
xorb
pop
push
in
pop
pop
lahf
stos
adc
aad
clc
xchg
mov
sar
sub
sub
mov
jmp
inc
daa
mov
sub
sub
ficompl
jecxz
jb
or
in
enter
stc
gs
ljmp
xchg
cltd
and
mov
es
jnp
pop
stc
cmp
lods
icebp
cmp
fnstcw
cmpsl
ljmp
in
cmp
inc
fnstcw
sub
hlt
sub
push
dec
imul
lock
lret
out
add
dec
mov
sub
inc
mov
ss
icebp
dec
sbb
loopne
cmp
int
dec
cmp
sbb
aas
lahf
and
and
into
iret
sarl
inc
mov
ds
out
push
mov
sub
and
insb
jne
xchg
dec
or
lcall
inc
inc
enter
adc
xchg
sub
in
std
adcb
addr16
inc
rclb
xchg
iret
xor
dec
loopne
push
das
or
lahf
push
scas
mov
jae
rcrl
sub
jmp
jl
jmp
gs
sub
sub
lea
nop
sub
xor
cltd
xorl
xchg
std
iret
push
sti
shlb
cmp
mov
int
repnz
gs
cmpsl
mov
lcall
and
dec
icebp
add
psubsw
xor
es
mov
stc
das
push
test
fnstcw
inc
into
cmp
into
cwtl
in
mov
sbb
aas
cmc
popf
push
test
popf
adc
jg,pn
rcll
outsl
mov
imul
test
xchg
fxch
dec
cmp
lret
and
mov
and
cmpsb
mov
pushf
outsb
cli
mov
pop
sub
and
rcll
ror
enter
sbb
mov
mov
jbe
adc
cld
clc
out
cmp
xchg
pop
mov
aad
enter
das
adc
sbb
cmp
jno
imul
dec
mov
daa
repz
and
xor
aas
xchg
pop
pop
push
stos
je
push
out
jp
jb
jp
mov
cmp
add
dec
sub
test
and
sub
je
jno
inc
sarb
xor
dec
xchg
mov
xor
lret
lahf
mov
hlt
jbe
or
xlat
pushf
aaa
jo
lret
es
rcr
cmp
adc
mov
les
or
bound
jno
push
pop
inc
in
es
xchg
ret
jg
fldenv
out
into
mov
cs
inc
lahf
mov
out
pushf
clc
sub
and
divl
fdivrl
xchg
mov
cmp
xor
das
test
adc
popf
mov
push
cmpl
mov
dec
shrb
int
adc
int
lds
push
inc
pop
rorb
xor
outsb
ret
enter
mov
mov
loop
xor
pushf
hlt
cs
dec
inc
movsl
adc
insb
mov
push
and
dec
shlb
je
mov
cmp
sbb
push
sub
hlt
adc
cmp
cs
jecxz
out
jno
pushf
jnp
loopne
icebp
fidivrl
or
sub
jle
leave
pop
xor
or
mov
mov
sbb
push
fwait
xor
add
adc
add
sahf
aaa
and
xor
add
xchg
adc
mov
adc
adc
loop
stos
dec
icebp
imul
push
cmc
mov
fmul
push
sub
cmp
jns
cmp
enter
xchg
cmp
xor
stos
jae
sub
xchg
adc
insl
sub
fdivrl
ds
xchg
inc
movsb
js
fildll
lahf
fcmove
mov
sarl
xchg
add
cmp
or
sbb
inc
mov
jb
in
js
loop
cmpsl
ds
cld
pop
dec
cmpl
fstpt
fwait
cmp
xchg
iret
push
mov
mov
shl
mov
ljmp
mov
ret
inc
pop
in
jne
push
and
loop
shll
shrb
pop
add
cld
jmp
lcall
ja
xchg
adc
push
jl
sbb
aaa
stc
mov
icebp
cli
rclb
popf
lods
inc
int
or
in
aad
add
cmp
xor
fdivrs
add
mov
hlt
dec
scas
push
mov
enter
bound
sub
dec
aaa
inc
cld
pop
mov
movsl
lret
sar
and
adc
mov
cli
inc
and
sbb
mov
mov
les
rcll
mov
out
xor
jg
imul
jl
fidivrs
cmpsb
loopne
push
movsl
repz
cli
cmp
daa
xor
test
dec
andb
out
popa
shrl
cltd
mov
cmp
dec
inc
sbb
jg
xor
lock
xor
xlat
jo
and
insb
cli
xor
jo
cs
jno
repnz
shr
ret
shlb
roll
outsb
cmpsb
xchg
std
fdiv
xchg
mov
mov
sub
inc
inc
mov
inc
and
jae
xchg
adc
jmp
pop
and
jmp
les
movsl
int
mov
mov
mov
xchg
popa
xchg
pop
jecxz
std
jge
xor
scas
lahf
jp
sti
test
push
sub
add
sub
int3
rorl
cmc
test
mov
sbb
das
int
dec
outsb
shlb
sbb
mov
jo
jb
es
sti
lods
out
mov
stc
adc
xchg
insl
aas
lret
mov
imul
dec
or
xchg
pop
rcl
out
adc
mov
in
test
xchg
cli
mov
movsl
add
fcoms
xor
fistpl
out
sbb
pop
rclb
imul
pop
mov
jmp
dec
pop
stc
mov
sub
fucomip
add
xchg
mov
add
repnz
sbbb
sub
ss
test
or
cmp
inc
push
mov
mov
mov
loopne
imul
sub
pop
data16
and
clc
mov
sub
dec
and
pop
dec
in
cmp
xor
arpl
mov
loope
jge
stos
jmp
mov
mov
ret
imul
rolb
lods
push
push
jmp
out
lret
and
mov
push
inc
repnz
ljmp
mov
ja
xchg
es
fs
mov
cmp
test
es
outsb
xor
mov
pop
idivl
add
mov
xlat
orb
xor
xchg
or
aam
xor
xor
gs
xor
test
inc
movsl
les
jb
std
mov
cld
dec
mov
pushf
mov
int
pop
in
cmpsl
xchg
out
das
cmpsb
faddl
mov
je
imul
out
mov
xorl
in
pop
cmp
movl
outsl
mov
lods
xlat
dec
inc
fdivrl
mov
rcr
sub
dec
fdivrs
add
setnp
cmovno
scas
into
outsl
in
ljmp
xor
lcall
insb
dec
jnp
sub
hlt
lcall
negl
repnz
or
mov
shlb
lcall
xor
xor
ljmp
jecxz
lret
xchg
dec
xor
adc
xchg
pusha
jecxz
pop
cmpsb
mov
in
mov
mov
sub
lcall
movl
sub
cs
push
jbe
lahf
mov
test
or
dec
push
pop
insb
fstpl
push
inc
stos
loop
cmpsb
push
mov
scas
lret
pop
inc
inc
xor
xchg
fstl
dec
push
inc
sbb
lret
dec
jo
ja
inc
dec
test
push
jmp
adc
popf
imulb
iret
mov
jo
push
cmp
mov
cmpsb
movsb
das
xchg
dec
xchg
in
push
fistl
cmp
int
pop
popf
movsl
in
mov
movsb
test
subl
fiadds
cmpsl
push
mov
into
and
cs
push
lret
pop
mov
push
mov
cmp
xchg
mov
add
inc
shlb
and
mov
neg
jg
xor
xchg
pop
fcompl
sub
cmp
enter
dec
pop
ljmp
dec
add
lahf
mov
je
pop
inc
jmp
push
addr16
fdivrl
fstpt
inc
mov
bound
aad
pop
cwtl
rcr
xchg
and
cmp
adc
dec
inc
cmpsb
mov
shlb
repnz
loope
int
adc
ds
lret
inc
sub
iret
mov
push
sbbl
mov
mov
aad
jmp
fnstsw
xor
cmp
out
sub
push
jbe
jg
je
cmp
xor
jmp
inc
ljmp
int
insl
mov
sub
lock
stos
fdivrl
cs
xchg
std
arpl
push
or
cltd
jmp
sbbl
fbld
jno
jae
shl
lds
pop
mov
ret
jb
imul
jl
inc
adc
jmp
sbbl
aad
clc
pop
add
and
std
ret
xchg
je
stos
das
push
or
jle
lds
jle
cwtl
or
mov
ss
repz
push
push
push
loop
cmp
subb
sar
sub
repnz
pop
ja
or
daa
jge
iret
sbbl
xor
pop
or
and
pop
loop
inc
nop
hlt
cmp
cs
pushw
loope
das
lods
mov
shr
repnz
sbb
sarl
loopne
or
stc
loopne
dec
mov
or
xor
aad
mov
int3
outsb
out
addr16
loopne
call
sub
imul
pop
jbe
jl
sub
les
mov
dec
inc
sub
or
inc
cmp
xchg
ret
or
dec
fs
dec
dec
arpl
call
cmpsl
aad
lds
fwait
ret
inc
push
cmp
aaa
mov
mov
sub
and
notl
push
push
neg
enter
push
shll
xor
and
pop
adc
sub
cltd
lods
sarl
fsubrl
mov
in
cld
cli
jmp
mov
mov
or
or
xchg
outsl
scas
mov
andb
hlt
xor
inc
jb
push
and
mov
mov
push
push
dec
cmpsl
mov
lret
int3
das
mov
enter
nop
stc
mov
jecxz
mov
xchg
mov
sti
and
add
xchg
push
lret
movsl
cwtl
ret
mov
dec
fidivrl
imul
ficoms
sbb
cmp
loop
mov
mov
adc
sub
lret
popf
or
popl
scas
insb
stc
inc
mov
repz
in
out
adc
push
mov
dec
cmp
les
fldt
mov
cmpb
in
sbb
popa
rorb
sbb
xchg
test
xchg
cmp
push
decl
stc
or
cmp
jmp
test
xlat
sahf
stos
cltd
je
pop
fwait
mov
cld
mov
fdivs
add
jp
insb
xorl
ds
arpl
lds
mov
jmp
xlat
lcall
daa
cmp
jo
sub
mov
ja
mov
stos
mov
std
and
xchg
psubusb
addr16
lcall
fisubl
aam
gs
xchg
jo
jmp
std
xchg
fcoml
jge
and
fistl
xor
inc
fidivs
mov
sub
lds
dec
in
mov
adc
arpl
test
jno
fiadds
ljmp
jae
push
and
push
push
mov
fwait
jge
mov
sub
push
stos
test
add
mov
les
test
sbb
xlat
in
sarb
int
test
jmp
cmpb
in
sub
push
gs
inc
popf
mov
sub
sti
mov
dec
dec
iret
or
pop
mov
subb
jae
scas
out
jge
pushf
push
inc
push
dec
mov
cmp
pop
jg
ffreep
dec
fstpl
lea
imul
cmp
dec
cli
loopne
cmp
cld
loopne
sbb
pop
push
aaa
inc
and
mov
adc
jnp
sbb
fisubrl
mov
xchg
pop
out
pop
add
dec
jl
xlat
lcall
arpl
fadds
repnz
xchg
cmp
push
sbb
mov
inc
les
js
lea
fimull
lcall
cli
ss
cmp
push
cmp
or
call
stc
jecxz
inc
fld
and
xor
push
inc
xor
nop
fcomps
subl
fwait
pop
hlt
mov
and
mov
in
mov
xchg
xor
scas
jmp
dec
cmp
mov
out
mov
shrb
xor
push
in
andb
inc
scas
stos
xchg
xchg
shrl
add
ret
fidivl
repnz
jmp
sbb
push
movsl
mov
cmp
fidivl
dec
push
cmpsb
sbb
mov
aad
mov
push
lds
repnz
mov
mov
mov
cmovle
pop
sbb
xchg
push
ret
cmp
push
push
dec
outsl
scas
mov
mov
out
cmpsb
in
pop
loope
in
mov
cmp
inc
ret
vshufpd
jmp
imul
adc
sbb
outsb
push
push
jbe
push
pop
data16
ret
mov
aaa
fistpll
or
shl
sub
mov
pop
mov
arpl
lret
mov
xor
imul
scas
pop
push
xor
adc
pop
pop
adc
inc
lahf
adcl
mov
fmul
pop
adc
out
lock
into
and
or
es
jg
ret
ret
mov
inc
out
hlt
inc
xlat
sti
push
jno
inc
mov
icebp
inc
aas
pop
cwtl
popf
sti
inc
dec
add
cmc
mov
xor
add
or
mov
aaa
nop
pextrw
mov
lods
and
fimull
sahf
scas
inc
xor
or
out
inc
mov
outsl
sbb
cld
cmp
xchg
and
daa
enter
mov
sbb
adc
int
cmp
mov
adc
xor
movsb
sbb
and
push
cld
push
add
adc
mov
xor
sbb
xor
mov
ss
mov
shll
in
jns
dec
or
or
mov
out
ljmp
sub
in
xchg
cmp
mov
add
inc
inc
int3
pop
push
mov
mov
xor
mov
or
scas
mull
testl
inc
jge
or
push
inc
insb
data16
dec
bound
and
out
mov
xor
scas
jg
leave
jg
imul
fbstp
mov
imul
mov
dec
cmp
mov
dec
fisttpll
mov
mov
mov
or
outsl
lret
mov
fidivs
cmp
adc
aas
in
outsl
xor
mov
dec
mov
mov
xor
and
out
push
push
push
daa
sbb
fstpt
cwtl
aam
or
dec
lahf
mov
into
cmpsl
jbe
lea
scas
rep
int3
mov
cmp
in
stc
fwait
xchg
xor
inc
cmpsl
clc
jns
fisttpll
push
dec
push
jmp
add
mov
repz
dec
repnz
lods
mov
rcr
inc
mov
cmp
and
rcl
add
pop
xchg
jmp
mov
sub
pop
mov
dec
leave
xchg
idivl
and
xchg
aas
push
addr16
xor
sub
jo
jecxz
cwtl
insl
fstp
repz
dec
sbb
push
and
dec
aas
pop
iret
add
cmpsb
jge
pop
test
cmp
div
jp
fstps
or
loop
aas
pop
lret
jae
leave
dec
push
or
arpl
nop
push
and
int3
mov
repnz
add
daa
fldl
hlt
push
dec
xor
leave
inc
push
and
cmp
ror
dec
mov
or
cli
test
xchg
test
ret
hlt
push
inc
jb
xor
and
push
xor
mov
daa
lret
loope
mov
xlat
sub
dec
and
into
aas
je
mov
repnz
pop
mov
imul
filds
pop
rorb
loopne
push
cs
cmp
push
xchg
outsb
mov
push
mov
stos
dec
scas
adc
dec
popf
cmp
inc
movsb
mov
jnp
shlb
ficomps
rcll
cmp
adc
std
movsb
jae
jle
xor
sub
lret
shl
xor
das
insb
out
mov
push
arpl
daa
leave
test
ss
outsl
mov
and
mov
mov
das
repnz
sahf
rol
aas
subb
xchg
stos
lahf
xlat
push
enter
repz
mov
mov
sub
push
ret
xor
or
ss
mov
rorb
roll
xor
mov
pusha
xchg
xchg
sbb
int3
or
pop
adc
fsubrl
pushf
mov
or
push
int3
sbb
jno
addr16
lds
xchg
cmpsb
cwtl
xchg
jo
aaa
es
ja
inc
out
sub
mov
cmp
das
loopne
cli
inc
pop
xor
std
dec
rcrl
xchg
jns
jmp
repz
inc
sbb
sub
push
ret
jecxz
cmc
fistpl
add
cs
cmp
aad
ret
lea
sub
push
ds
sbb
fdivrs
add
subb
push
loop
dec
mov
inc
les
aad
into
insb
xor
ljmp
lea
push
pop
lods
fwait
cmp
lret
xchg
pop
rorb
jae
sar
shl
outsb
add
pop
mov
lea
cmp
xor
mov
out
stc
enter
outsl
out
jmp
ret
ds
jge
sbb
cwtl
jbe
sbb
gs
jae
addr16
jmp
push
inc
xlat
jbe
sahf
xor
jg
dec
mov
into
mov
mov
mov
mov
pop
scas
sbb
ljmp
movsl
push
out
stos
inc
mov
orb
jg
adc
mov
and
and
mov
jo
mov
jl
jg
repz
sbb
jne
sub
mov
mov
adc
std
shr
xor
xor
scas
adc
shrl
push
icebp
aam
cmp
or
mov
cwtl
mov
test
push
in
dec
loopne
add
push
pop
mov
adc
and
adc
jmp
mov
push
ss
jae
jge
push
jb
pop
test
and
and
xchg
andb
or
lds
jb
out
stos
cmp
les
sub
and
mov
cltd
push
out
in
mov
mov
in
ret
inc
nop
in
xlat
inc
xor
inc
mov
inc
mov
mov
or
xlat
ret
fidivrs
xchg
cs
pop
inc
or
sar
lcall
jo
aas
hlt
sub
ret
push
ret
je
mov
dec
xchg
pop
leave
in
cmp
outsb
jecxz
sub
cmp
mov
xchg
jge
mov
dec
mov
test
movsb
pop
out
aam
lock
lcall
or
jo
popf
jns
test
and
xor
cmc
popf
popf
sbb
stos
ljmp
and
sbb
pop
jbe
adc
outsl
and
call
add
rcrb
jp
imul
out
icebp
lods
out
mov
dec
repz
ja
push
fsubrs
jle
pop
pop
mov
and
loop
movsb
test
cmp
inc
int
xor
pop
sahf
sub
dec
lds
ret
jle
div
mov
gs
in
js
call
outsb
jl
enter
data16
lahf
pop
cmp
icebp
in
mov
sub
mov
outsl
fbstp
sub
add
adcb
shrb
lret
std
mov
jno
cmp
xchg
scas
and
mov
mov
fisttpll
sub
dec
pop
and
das
dec
push
fistpl
inc
dec
cld
call
test
adc
stc
pop
sbb
lds
push
push
lcall
jl
loopne
xlat
into
ljmp
pop
out
sub
add
imulb
mov
mov
imul
sbb
push
mov
lock
mov
inc
xor
pop
loop
jl
pop
imul
xchg
int3
bound
repnz
int3
xor
int3
ja
outsb
mov
xor
mov
das
nop
xor
les
mov
lcall
mov
xchg
in
adc
cmp
hlt
lds
pop
out
lods
cmp
neg
scas
jl
addr16
mov
push
push
cmpb
insl
ror
loope
xchg
stos
xchg
cmpsl
xor
xor
cmpl
dec
mov
sub
push
movsb
shrb
mov
pop
ds
push
repnz
dec
mov
out
stos
test
aaa
ljmp
push
andl
xor
sub
push
cmpsl
mov
mov
aas
je
mov
cmp
adc
pop
push
in
sub
push
shll
js
mov
sub
and
sti
outsl
sbb
adc
push
cmpsl
movsb
jnp
cmpl
push
test
dec
mov
push
push
icebp
out
xor
cmp
cmp
into
les
iret
fwait
std
sti
dec
shll
das
ret
lahf
fstpl
jns
sub
push
inc
cmp
inc
insb
aaa
inc
imul
out
push
mov
inc
xor
in
mov
add
push
cmp
fwait
mov
aas
push
or
das
ret
pop
dec
mov
fsubs
ror
pop
ds
mov
cmp
and
xchg
out
push
push
xor
jno
cmp
repnz
ss
out
push
or
lahf
push
lds
out
scas
stos
loope
sbb
fldl
or
in
mov
xchg
loopne
mov
pop
or
scas
dec
xchg
xor
pop
jae
out
loop
cmc
or
inc
mov
and
xor
lahf
cmp
adc
dec
test
arpl
pop
mov
dec
xchg
xchg
ret
or
xor
xlat
push
and
hlt
arpl
pop
ret
call
mov
xchg
adc
shrb
mov
push
inc
scas
aaa
scas
rcrl
scas
popf
sub
int3
jbe
cmpsl
imul
shlb
cmp
push
lcall
xorb
inc
ret
test
or
add
and
outsl
pop
mov
test
inc
mov
fnstenv
pop
jbe
sub
xchg
addr16
xor
stos
adc
insl
in
mov
les
test
xchg
sahf
lock
pop
jl
inc
out
mov
push
pop
int
dec
dec
or
xchg
xchg
lret
test
fidivl
xorb
cli
or
jge
js
aaa
push
inc
xchg
sub
mov
push
shl
xchg
add
ret
sbbb
mov
ret
out
repnz
mov
jbe
inc
movl
sar
xor
xchg
fbld
repnz
sbbb
sahf
mov
imul
data16
add
sahf
mov
std
inc
test
fnstsw
jno
jne
insl
les
out
mulb
jecxz
sub
adc
mov
jge
das
xchg
push
push
fmuls
push
mov
ds
popf
test
shl
push
stos
clc
aad
sub
stos
scas
out
vpunpcklqdq
mov
jmp
ss
subl
lahf
sarl
push
jnp
mov
cmp
mov
repnz
xor
push
adc
sbb
mov
xor
push
sub
fsubr
and
add
jl
loope
sahf
xor
cmp
pop
rorb
mov
outsl
pop
mov
push
mov
jmp
xor
mov
cmp
lods
jo
xchg
push
scas
mov
fildll
jo
ss
fcomi
cmpsl
lods
dec
inc
and
xchg
mov
pop
xor
out
jge
fs
push
sbb
mov
add
fldl
xor
dec
cli
call
xor
mov
mov
aad
adc
xchg
stos
lods
mov
lcall
das
mov
adcb
cmp
add
gs
ret
mov
cmp
and
inc
mov
push
in
push
test
mov
ja
xor
pop
insl
je
adc
xor
add
dec
inc
dec
cmp
ret
aaa
ss
fildll
lds
into
pop
xor
movsl
imul
xchg
pop
sub
add
or
rorl
mov
mov
ret
pop
xor
mov
icebp
jp
insb
cld
mov
lret
and
movsl
adc
das
mov
lods
or
mov
fidivrl
cmpsl
push
pop
sub
enter
xlat
xor
push
mov
inc
inc
hlt
clc
es
rclb
pavgb
dec
xchg
ffree
movsb
iret
fistps
cmp
push
inc
dec
aad
insl
negb
sub
fmull
lahf
inc
fucomp
add
adc
test
ljmp
mov
cltd
lds
cmp
sbb
inc
pop
mov
insb
lretw
sbb
mov
xchg
in
lahf
xcrypt-ecb
cmpsl
dec
roll
imul
test
int
inc
cmpsl
and
sub
dec
inc
jbe
add
cmp
cmp
jg
and
int3
int3
icebp
push
xor
add
sti
mov
andb
xor
cltd
cmp
mov
lock
ljmp
add
outsl
sbb
and
sar
add
mov
call
icebp
inc
fisubl
mov
clc
xor
jno
sbb
pop
or
inc
jns
push
lods
aas
bound
mov
ljmp
arpl
xchg
cmp
jmp
mov
or
push
inc
lret
xchg
fimull
cs
add
inc
pop
inc
dec
mov
mov
sbbl
stos
cmp
xchg
mov
mov
aaa
sub
cmp
xchg
mov
loope
scas
add
sub
xchg
int
mov
push
add
icebp
testb
xor
or
ret
loop
add
pop
aam
in
mov
in
dec
mov
xorl
leave
pusha
inc
and
repz
je
js
and
mov
mov
fsubrl
int3
cmp
dec
insb
mov
jmp
adc
push
lea
xor
out
cwtl
rcrb
cld
stc
push
das
dec
test
push
clc
flds
jns
fiadds
pop
shrb
xor
cmpsl
xchg
in
xchg
or
mov
sub
mov
aaa
mov
cmc
add
jmp
pop
movsl
mov
into
aam
mov
mov
mov
sub
lods
jmp
clc
jnp
adc
pop
fdivrp
je
fwait
inc
xor
nop
xchg
lret
dec
out
lods
mov
and
popa
xchg
data16
cmp
mov
jl
mov
or
mov
sbb
imul
pop
xchg
sub
sub
bound
movsb
or
xor
into
loop
into
pop
adc
pop
dec
lods
daa
push
xchg
add
rorb
inc
push
xor
test
js
or
ss
add
inc
xchg
push
push
mov
andb
fwait
into
je
jge
or
in
fwait
mov
jns
mov
sbb
rorb
repnz
divb
add
loope
cmp
dec
cli
mov
inc
in
pop
lea
fs
cmp
push
add
aaa
in
je
xor
or
cld
jp
mov
movsl
popa
cmp
icebp
fcoml
ss
inc
aaa
lcall
adc
adc
xchg
movsl
or
xchg
fiaddl
aad
jb
lret
mov
sahf
rcrb
fisttpll
jmp
mov
dec
sahf
lret
shrb
outsl
in
mov
ret
movsb
jb
inc
lahf
mov
and
call
xchg
push
imul
mov
mov
xor
fiaddl
fiaddl
insl
sbb
inc
mov
pop
mov
mov
jmp
iret
sbb
adc
out
pusha
mov
push
into
pop
push
stos
pop
negb
sti
imul
outsl
stos
sbb
xor
idivl
loop
leave
jns
inc
or
outsl
aaa
jg
iret
scas
inc
imul
jnp
sub
fidivl
xchg
clc
inc
ret
shll
pop
sarl
mov
mov
rclb
rolb
das
pop
fs
xorb
fdiv
cmp
dec
cs
in
sbb
push
xchg
repz
pop
ret
clc
inc
popa
dec
dec
js
mov
shrb
jnp
xor
adc
into
and
mov
dec
xor
mov
nop
js
cmp
sti
pop
outsb
mov
xchg
adc
nop
xor
rclb
add
inc
dec
or
shrl
fnsave
data16
ficoms
jg
in
jg
add
push
jno
xlat
faddl
xor
mov
jecxz
testb
insb
stc
xchg
mov
ret
mov
adc
pop
xorl
inc
fsts
insb
mov
stos
push
es
jb
xlat
dec
add
inc
loop
xorl
dec
and
into
dec
mov
int3
cltd
inc
pop
jle
cld
sub
ret
sbb
lods
push
scas
pop
pinsrw
dec
inc
add
adc
mov
and
cmp
adc
std
add
cmp
imul
sahf
cmp
xlat
das
mov
push
xchg
cmc
mov
cltd
fwait
sbb
les
or
jg
push
dec
sbb
cmp
pop
adc
sub
aas
mov
mov
jae
cmp
imul
mov
ljmp
mul
push
push
in
xor
add
scas
mov
inc
or
cmp
cmpsb
sub
jno
mov
pop
test
add
test
ljmp
sub
mov
ret
pop
dec
out
popf
dec
pusha
fisttps
int3
repz
movsb
cmp
lea
std
divl
pop
scas
push
push
scas
dec
add
mov
imul
pop
add
aam
mov
jo
fsubrs
sbb
and
pop
jb
mov
jl
shlb
negl
fwait
sbb
dec
push
insl
stos
dec
jmp
fsub
in
pop
sub
in
out
vmwrite
xor
rolb
es
std
js
out
fs
insb
aaa
pop
inc
lods
adc
jo
push
daa
insb
mov
fcmovnu
cli
mov
mov
scas
or
mov
cmp
fildll
add
aas
cwtl
mov
adc
pop
dec
push
je
aad
inc
mov
mov
ds
movsw
jbe
icebp
cli
sbb
imul
mov
sub
mov
cmp
xor
adc
inc
cmp
jge
xchg
clc
loop
repz
xor
pop
sub
mov
addr16
cmpsl
adc
add
mov
popf
das
lret
cmp
push
inc
jecxz
xchg
cmpsb
or
push
mov
dec
cmpsb
ja
dec
dec
mov
loopne
push
int
clc
test
ljmp
push
jb
push
scas
int
or
aam
mov
in
cmp
jne
std
pop
or
movsl
sbb
mov
or
sbb
xchg
scas
cmp
imul
pop
push
inc
xor
cmp
jle
loopne
mov
mov
out
xchg
jecxz
jg
adc
inc
testl
sahf
mov
xor
jb
shlb
mov
add
clc
cmp
xchg
fcmovnb
mov
daa
and
mov
adc
lcall
fwait
pushl
loop
popf
mov
pop
and
push
mov
pop
mov
fisubl
orl
fs
push
cli
fmul
loop
cltd
inc
movsb
les
loopne
or
lahf
sbb
sub
cs
and
sub
xchg
jbe
pop
adc
stc
mov
icebp
repnz
adc
les
insl
fcompl
aaa
or
jo
mov
push
fwait
adc
aas
sbb
ljmp
shrl
lret
cwtl
and
ds
jno
mov
sub
pusha
scas
cmpsl
imul
xchg
jle
sbb
sbbl
sub
mov
xchg
stc
ss
iret
or
mov
xchg
neg
and
cmpsb
pop
nop
pop
and
mov
add
movsb
mov
je
out
mov
mov
iret
out
ds
pop
ret
notl
das
mov
dec
aad
dec
leave
push
loopne
test
cmp
lods
scas
in
sub
dec
mov
and
cmp
fdivs
or
cmp
jmp
cmpsw
lea
enter
mov
ret
test
xchg
leave
lock
in
ss
adcl
out
mov
inc
leave
and
ds
xor
lahf
add
mov
adc
mov
xor
mov
mov
testb
xchg
xor
sbb
out
cmp
aaa
xchg
sub
outsb
ds
lea
jnp
dec
es
jge
inc
lcall
jb
mov
pop
lock
lea
inc
push
mov
insb
pusha
insl
mov
stos
jg
test
cld
roll
dec
jle
adcl
xchg
mov
sub
and
das
or
xor
adc
repz
lods
mov
push
nop
call
pop
push
dec
pop
inc
jne
aas
dec
mov
sti
fidivs
or
sbb
lock
dec
xchg
push
lock
cmpsl
add
push
sub
mov
jb
je
decl
fdivrs
out
lods
stos
xor
pop
shlb
int3
data16
loopne
pop
mov
aam
push
and
inc
dec
out
outsl
cltd
mov
xor
xchg
xchg
ja
fwait
mov
into
ss
and
mov
out
adc
gs
les
xchg
pop
and
and
lods
push
xchg
mov
adc
stos
jmp
xchg
gs
repz
jl
xchg
lock
jno
adc
inc
scas
loopne
jnp
dec
mov
lret
cmp
jecxz
pop
xor
outsl
xchg
xchg
std
push
cmpb
frstpm(287
scas
add
pop
out
loopne
pop
sbb
das
pop
add
pushf
jo
xchg
and
loopne
mov
mov
fdiv
sbb
mov
dec
push
cmpsb
push
pushf
push
jns
ja
mov
or
mov
mulb
push
add
jno
or
shrl
mov
push
mov
imul
mov
clc
push
int
cmp
lcall
fwait
out
xchg
pushf
adc
pop
cmp
std
sub
ret
dec
sub
movsb
xor
xchg
loop
call
jle
into
ffree
xchg
pop
cmp
in
push
xor
push
sub
repz
dec
cmp
fildll
lret
ja
repz
cmp
inc
jmp
mov
jecxz
lods
stos
add
push
mov
dec
aad
adc
jbe
xorb
inc
ss
jl
and
jbe
push
aam
ds
mov
imul
and
imul
and
test
lods
into
pop
or
dec
mov
test
xor
mov
loopne
scas
imul
cli
jbe
ret
aaa
clc
sbb
test
movsb
cmpsb
ss
loop
movsb
pop
mov
mov
lret
xor
dec
mov
and
filds
aam
push
dec
movsb
addr16
mov
pop
push
mov
andb
in
push
mov
arpl
lret
lret
push
fstpl
xor
insl
push
pop
xchg
inc
cwtl
and
inc
xbegin
cmp
stc
daa
adc
cmp
xchg
scas
push
pop
jecxz
mov
push
stos
lods
shrl
insb
addb
sub
adc
addl
mov
jno
push
xor
fcoml
repnz
fldenv
pusha
adc
push
js
loope
outsb
fwait
xchg
out
xchg
faddl
aas
notl
std
negb
xchg
in
adc
add
inc
cmc
int
mov
popf
adc
cmp
test
loopne
cmp
enter
dec
clc
cmpsl
dec
pop
scas
das
addl
cwtl
aad
push
xchg
jmp
in
loope
adc
or
cmp
mov
popa
add
adc
add
sub
fxch
push
aam
mov
mov
cmp
sub
sub
repz
or
mov
sub
mov
jno
cwtl
or
adc
xor
inc
mov
setnp
mov
adc
icebp
jecxz
pop
mov
pop
cmp
adc
mov
xchg
add
movsl
mov
add
int3
ds
clc
mov
push
or
mov
dec
test
js
cmp
or
gs
sbbb
xor
stc
imul
loop
adc
popa
mov
pushl
negb
pop
jg
int
shr
mov
lret
fidivrs
cmp
sub
mov
testl
fistpl
fneni(8087
sti
push
adc
mov
mov
hlt
push
jl
inc
int
dec
pop
das
and
cmp
shrb
movsb
movsl
movsb
dec
pop
inc
mov
adc
imul
add
lret
adc
cmpsb
pusha
mov
cli
loop
jmp
ja
adc
pop
xchg
xor
aad
jecxz
push
into
jle
fwait
addr16
loope
ficoml
js
sahf
xor
paddusb
les
push
mul
inc
mov
sub
ljmp
jno
jae
push
mov
js
rolb
mov
cmp
pop
xor
loop
mov
stos
mov
mov
mov
inc
je
mov
fidivs
sarl
shrl
and
sub
repz
xor
imul
ret
jb
movsb
and
inc
div
mov
cmp
cmpsl
sarl
xor
mov
xor
ds
stos
cmp
jmp
mov
fs
ds
mov
sub
sub
shlb
aaa
call
xor
into
sub
mov
movsl
hlt
xor
lret
sub
mov
ret
jl
cmp
out
push
les
add
aam
gs
neg
xor
aaa
adc
and
shll
mov
mov
repz
mov
mov
lahf
mov
outsl
xlat
xor
xlat
cmp
ljmp
aas
dec
xor
das
add
xor
xor
aas
inc
das
and
xor
dec
and
sarb
mov
test
xlat
cmp
sub
fisubs
aad
sti
mov
lds
mov
mov
mov
dec
mov
int
lods
mov
mov
imul
js
ret
iret
icebp
lret
inc
ret
adc
add
jmp
jecxz
daa
xor
ret
mov
icebp
mov
dec
idivl
int
mov
rcr
jno
xchg
sar
mov
int
cmp
shlb
aas
pushl
divl
mov
das
hlt
addr16
iret
mov
clc
xor
adc
gs
jp
xor
dec
pop
es
cs
ficomps
ds
mov
test
or
jnp
out
fisubrl
in
cmpsb
push
inc
data16
les
xlat
lea
lret
mov
repnz
ds
and
jo
sarb
das
les
inc
rcl
es
lret
in
ret
pop
movsb
dec
jecxz
stos
jmp
ds
mov
push
clc
aad
out
jmp
testl
xor
aaa
push
out
sub
lods
dec
and
in
push
repz
shr
cli
fsubrp
push
neg
loopne
xor
stc
xor
movsb
cmp
cmp
aas
inc
xor
add
lret
and
xor
aaa
add
xor
mov
repz
mov
icebp
mov
mov
les
sbb
aas
mov
imul
inc
stos
out
ds
xor
push
mov
push
repz
dec
iret
and
mov
pop
movsb
aas
inc
pusha
mov
inc
cmp
mov
das
hlt
mov
clc
mov
bound
lret
jge
shrb
rcrl
mov
repnz
scas
sub
mov
mov
daa
int
lret
loopne
ret
mov
movsl
pop
mov
mov
repz
pop
sarl
cwtl
test
adc
cmp
inc
lods
sarl
cmpsl
rorb
inc
xor
mov
or
shrb
dec
ds
xor
xor
xor
ss
sub
pusha
test
lret
aas
jecxz
sub
add
and
xor
aaa
decb
xor
pop
and
iret
cmp
shrb
dec
lods
sub
mov
sub
movsl
dec
scas
fisubl
adc
mov
cmp
xor
cmc
mov
mov
mov
mov
mov
dec
jl
fmull
lods
cmp
push
cmpsl
stc
cmp
mov
inc
mov
idivl
ds
jecxz
stos
aaa
inc
add
cmp
pop
fs
mov
insb
sahf
leave
rorl
leave
iret
pop
shlb
jmp
cmp
fidivrl
les
sbb
mul
pop
add
dec
inc
push
clc
test
jmp
pop
fistps
fidivs
dec
lds
push
fcmovnb
inc
jecxz
mov
orl
out
pusha
aad
pop
mov
repz
jmp
mov
dec
add
pop
jmp
les
clc
lock
dec
push
repnz
div
loopne
jg
fisttps
jge
fisttpll
xor
jbe
pusha
jb
ja
pop
je
add
push
jne
add
lock
cmpsl
idivl
jmp
repnz
in
cmp
outsb
out
mov
mov
insb
hlt
in
cltd
lret
out
jl
cmc
stos
or
jmp
cmc
jb
ja
jg
jb
jbe
gs
test
or
and
andb
add
aas
add
xor
or
shl
lret
repnz
or
mov
cmc
mov
jle
in
jo
jb
ja
jg
jb
jbe
jne
je
aam
xor
jb
rorb
lds
add
and
cld
test
mov
int3
imul
incb
icebp
clc
repnz
repnz
std
call
mov
es
out
mov
jae
jbe
pusha
iret
jb
ja
pusha
je
or
pop
jne
add
lock
out
repnz
in
clc
inc
ja
xlat
mov
in
ss
out
mov
xorl
add
pusha
mov
das
xchg
je
popf
or
sbb
inc
repz
mul
loopne
repnz
notl
imul
call
add
out
jle
jo
jb
ja
test
push
sbb
aas
and
out
jg
ds
fidivrs
mov
sub
cli
rclb
out
out
lock
lods
testl
or
addr16
aad
mov
hlt
cld
push
jne
add
in
movsb
idivl
jecxz
loop
inc
repz
loopne
fdiv
aas
notl
imul
call
and
cli
repnz
sti
clc
lock
dec
push
repnz
div
loopne
jg
fisttps
jge
fisttpll
xor
jbe
pusha
jb
ja
pop
adc
add
adc
sbb
xor
repz
add
bnd
out
jl
cmc
mov
iret
jmp
jle
and
cs
jp
out
mov
aas
jae
jbe
pusha
jb
ja
addr16
adc
addr16
gs
add
imul
div
out
repnz
dec
push
repnz
div
decl
fimuls
jl
fmull
das
jae
jbe
pusha
jb
ja
push
je
add
addr16
push
jne
add
out
fcomip
cmpsb
idivl
jmp
repnz
in
cmp
in
mov
and
jle
loope
fptan
inc
negl
push
ljmp
cmc
test
jmp
jle
sti
jo
jb
ja
jg
jb
jbe
arpl
gs
insb
and
andb
call
aas
add
xor
or
shl
leave
repnz
or
cli
xchg
cmc
mov
jle
jmp
jecxz
stos
ja
jg
jb
jbe
jae
jb
rorb
xor
jo
rorb
ret
aas
add
and
fcmove
addr16
cli
insb
jne
add
imul
lock
mov
out
aam
rcrl
aas
arpl
sub
jns
pop
fwait
pop
add
jb
push
pop
pop
add
push
pop
dec
push
mov
jmp
dec
sub
xchg
in
in
aas
jecxz
cmp
adc
fadd
rcl
xchg
rorl
mov
pop
xor
push
sub
pop
jg
xchg
cmpsb
push
sub
mov
arpl
je
rcrb
sbb
jge
punpckhwd
mov
jns
pop
jl
jno
ds
and
pop
pop
dec
jmp
xchg
stc
and
popl
sub
cmp
imul
lods
les
adcl
push
mov
sbb
loop
push
adc
aas
dec
mov
dec
inc
dec
cli
nop
mov
movsb
sahf
inc
or
lods
repz
mov
popf
test
add
cmp
outsl
mov
movsb
push
das
out
mov
aaa
imulb
pop
pop
inc
idivl
inc
loope
rolb
sbb
mov
out
pop
dec
push
or
iret
jne
push
les
push
fcomp
mov
repnz
or
push
push
gs
push
inc
adc
orb
scas
or
lret
xor
dec
ljmp
cmpsl
sub
mov
push
jecxz
mov
mov
shrb
sub
inc
adc
xorl
movsl
mov
xor
dec
les
jbe
sbb
movsl
sbb
clc
out
cmp
in
hlt
cwtl
add
mov
subl
idiv
xlat
cmp
pop
mov
adc
sbb
cmp
aaa
sub
scas
sar
outsb
xorps
movsb
dec
gs
imul
jno
jne
out
lahf
pop
fsts
mov
cmp
inc
pop
jecxz
dec
push
into
lret
mov
mov
frstor
add
sbb
in
outsl
repz
decb
out
mov
aas
out
ret
and
out
scas
icebp
fdivrp
repnz
cmp
xlat
std
out
ret
xor
or
mov
cmp
fidivs
inc
pop
mov
sar
jne
sti
lcall
fsubrl
movsl
dec
pop
push
xor
ds
push
jecxz
int3
cld
mov
push
movsl
xchg
push
jnp
out
ds
imul
mov
xor
clc
lock
mov
scas
xlat
jnp
call
andl
scas
aaa
jno
push
jge
push
mov
test
or
push
cmp
je
mov
add
rcrb
lock
mov
pop
push
mov
mov
mov
lret
push
ljmp
or
in
cmc
pop
lret
pop
cmp
mov
daa
and
cld
add
and
xor
jge
icebp
inc
or
add
sar
or
xor
test
leave
push
das
in
cltd
add
into
stc
jne
ja
popa
inc
xor
mov
add
pop
aas
sahf
int3
das
movsl
fnstsw
jle
cmp
bound
push
jne
jg
push
test
mov
lea
out
subb
jo
outsl
fnsave
push
pop
mov
ds
lret
test
push
fs
and
inc
das
sbb
or
push
psubusb
fidivrs
sub
les
icebp
xor
push
push
std
inc
rolb
inc
jb
sbb
and
pusha
inc
xchg
mov
and
push
jmp
inc
xor
inc
lea
or
loop
jg
inc
xor
or
fadds
ljmp
loop
sarl
insl
inc
loop
fcoms
movsb
cld
jns
pop
out
scas
in
lds
das
mov
rclb
or
aas
data16
fisttpll
repz
hlt
push
std
out
and
cmp
mov
xor
ret
mov
add
mov
dec
sbb
mov
data16
ss
mov
iret
xchg
lock
add
in
iret
or
or
rorb
inc
rclb
ja
adc
pusha
fdivrl
int
stos
loope
dec
fistpll
pop
pop
aas
xchg
inc
fcoml
ret
sarb
dec
inc
cmp
fisubrs
pushf
rorl
push
movsb
push
pop
jnp
nop
lret
in
jo
jns
xchg
sarl
pop
lods
not
lds
out
xchg
scas
sub
popf
arpl
data16
lret
or
aas
fwait
das
imul
cmp
and
ret
fnstsw
inc
inc
ljmp
and
aam
outsl
shll
es
adc
sub
loope
jb
shlb
and
cmp
lea
int
cli
xchg
fldenv
cmpsl
xor
loope
aaa
iret
pusha
xor
dec
les
inc
icebp
leave
dec
mov
ret
testb
pop
mov
dec
jne
pop
ljmp
in
lret
xor
mov
sahf
rclb
and
insl
push
icebp
fildll
inc
jmp
lds
out
sti
fwait
stos
unpcklps
jb
xchg
inc
imul
mulb
ss
idiv
lock
cmp
or
cmpsb
jb,pn
sbb
loop
cmpsl
shlb
ror
in
inc
loopne
inc
imul
push
clc
inc
sub
rorl
pop
popa
dec
shrl
adc
pop
jno
ljmp
in
push
lret
xor
mov
push
cmpsl
mov
aaa
or
insl
add
xor
stc
lret
in
inc
mov
aaa
push
push
out
lods
lds
mov
mov
sbb
sub
mov
mov
cli
inc
test
int
mov
inc
shlb
ljmp
js
add
ret
mov
repnz
mov
jns
mov
jnp
fnstcw
inc
lock
test
leave
jb
ja
sub
cli
nop
stc
xor
mov
mov
xor
lds
outsb
std
mov
push
inc
mov
mov
mov
out
outsl
jo
push
and
jge
aam
test
cmp
fisubrs
sub
cmpsl
xlat
pop
mov
mov
inc
jle
ror
sub
mov
dec
hlt
mov
mov
idivl
sub
jle,pt
xor
xor
push
sbb
outsl
sub
aas
jp
fmull
sub
aas
andb
subl
stc
push
sub
jg
cmpsl
rorb
jae
jns
xor
jbe
pop
pop
dec
iret
das
hlt
ds
in
movsl
aaa
inc
mov
enter
shr
pusha
and
hlt
imul
cmp
mov
hlt
jle,pt
lock
mov
inc
mov
clc
xor
shrl
mov
repnz
aaa
inc
aas
jmp
das
aas
insb
fmull
std
lock
fnstenv
sub
outsl
pop
push
xor
mov
outsb
mov
repz
into
mov
aas
dec
pusha
hlt
ret
sti
out
cld
imul
xlat
add
jb
shr
jbe
jnp
xchg
movsl
rorl
pop
test
cmp
pop
lods
pop
enter
mov
shll
hlt
repnz
mov
lods
leave
scas
aas
ret
mov
mov
pop
in
decl
mov
xor
ficoml
rorb
out
jl
fmulp
aas
fsubs
jb
testl
out
jl
ret
jg
jae
leave
lahf
mov
xor
rcrl
sub
call
cmp
fdivl
lock
out
fistpl
and
jne
sbb
ficomps
and
mov
mov
pushf
in
push
inc
cld
xor
sub
dec
dec
xchg
fldt
pop
fcoml
bound
mov
lds
add
xor
jl
lcall
dec
fildl
jns
jns
jbe
mov
dec
icebp
cwtl
fsts
jl
fwait
scas
mov
cs
int
jne
aas
outsb
mov
push
dec
xor
lods
push
xor
insl
jnp
out
test
sub
mov
ss
adc
xor
iret
cmp
addr16
add
add
scas
out
sti
cld
aas
rclb
sti
fbld
sarl
jl
inc
jmp
ss
push
ret
xchg
xor
into
push
jno
mov
mov
dec
mov
fwait
xchg
lods
loope
mov
nop
cmc
xchg
fistpl
pop
movsb
xor
pop
dec
sub
arpl
loop
adc
addr16
daa
mov
sbb
xor
cmp
test
cmp
data16
pop
xor
sub
sbbl
repnz
cmpb
fsubrs
xchg
aaa
dec
out
add
fmuls
mov
cmc
shlb
mov
fwait
push
push
outsl
mov
daa
std
dec
xchg
sbb
lcall
icebp
dec
mov
out
xor
pushf
mov
cmp
enter
int3
mov
cld
pop
cld
iret
mov
shl
aaa
cmc
xchg
and
fxch
sarb
inc
incl
sub
add
pop
les
xor
test
dec
lcall
lret
mov
cmc
shlb
jge
or
mov
lret
jle
shll
mov
daa
lea
and
inc
rolb
jnp
int
push
std
es
jl
pop
sub
es
fnstsw
fistps
ja
sbb
in
cmp
std
add
jmp
mov
mov
js
movl
nop
stos
add
cmp
sub
shlb
roll
mov
xor
fists
in
mov
xchg
cmpsl
inc
movsl
push
out
cmp
push
cmp
outsb
pop
lret
jo
mov
xor
mov
in
out
mov
call
cltd
mov
nop
pop
jo
jbe
insl
mov
movsb
lea
notb
cmp
aas
fwait
and
sbb
sbb
mov
pusha
push
adc
pop
jo
mov
out
add
clc
adc
lds
data16
adc
or
push
imul
inc
dec
iret
sub
pop
xorb
int
fdivrl
jecxz
xchg
mov
clc
in
shl
lcall
lea
data16
fsubrs
cmp
dec
aaa
jl
popl
mov
pop
lcall
movsl
cltd
sbb
jae
and
mov
lret
aaa
mov
add
out
daa
inc
jg
sbbl
lret
inc
jnp
shll
out
loopne
outsl
mull
sub
jb
bound
push
movsl
push
pop
pop
xchg
adc
popf
or
arpl
std
xchg
pop
cltd
dec
jno
add
cwtl
gs
test
pop
leave
xchg
pop
into
test
pop
lods
xchg
out
xlat
loop
stos
imul
movsb
push
sub
push
xchg
xchg
xchg
outsl
outsb
ljmp
jle
add
daa
inc
loope
jl
mov
sahf
pop
out
data16
fdivs
sbb
jno
cltd
xchg
add
pop
jle
mul
jb
mov
jecxz
jo
stc
and
and
fwait
xor
or
repnz
cmpb
or
fidivs
sub
mov
ret
push
sbb
daa
fiaddl
stos
push
or
push
popl
lret
and
push
aaa
pop
mov
std
sub
out
jns
push
repz
xor
sbb
jae
int3
ds
mov
sub
insl
jl
scas
out
ds
xchg
sub
add
xor
xlat
jmp
ss
test
negl
outsb
cmp
xchg
dec
mov
inc
sbb
pop
sub
inc
into
jo
xor
sarl
pop
jno
cwtl
dec
xchg
jo
or
lods
in
inc
test
cmp
mov
xor
push
addr16
mov
sbb
add
xor
cmc
sti
inc
clc
lds
dec
ret
pop
add
shl
imul
aaa
add
mov
out
fdivrl
lods
sbb
xor
cmp
sub
push
pop
mov
gs
cmp
mov
pop
xlat
sarl
movsb
fmulp
lods
shll
rcr
inc
idivl
dec
frstor
add
and
and
sbb
nop
fistps
jl
jbe
xor
xchg
and
clc
rolb
aam
ret
inc
or
int
mov
inc
add
bound
mov
jbe
cmp
pop
push
lahf
dec
and
add
aad
pop
lahf
mov
sti
xchg
filds
mov
fs
cmc
lods
pop
push
imul
push
rclb
aad
scas
xchg
popa
pop
ret
in
out
and
roll
mov
scas
idivb
int
cmp
mov
xor
push
addr16
arpl
testl
loopne
pop
adc
lahf
jg
adc
and
pop
xor
push
leave
sub
out
les
mov
mov
xlat
addr16
cmp
cli
cmp
ds
or
add
dec
sub
mov
mov
fimuls
daa
mull
fadds
push
aaa
push
mov
push
pop
jg
lea
adc
jae
pop
sub
jo
leave
int3
cs
cmp
clc
int
adc
sub
lret
outsl
cmpsl
nop
out
inc
aaa
sti
dec
stc
shr
xchg
jne
fdivrl
sbb
scas
jbe
pop
mov
rolb
in
pushf
out
add
es
cmp
sub
jno
dec
pop
pop
mov
push
sub
cwtl
or
adc
or
mov
sub
mov
imul
sbb
push
sub
cmp
cld
sbb
xor
sub
pop
jnp
adc
andl
push
mov
mov
in
cld
push
hlt
int
add
test
lea
rcrl
pop
leave
das
push
lcall
push
stos
shr
add
push
fadds
lods
daa
repz
adc
jecxz
in
and
push
ljmp
adc
push
or
push
pop
cmp
push
repnz
fdivrs
iret
inc
outsb
imul
fdivs
inc
test
int3
sub
xor
cmpsb
jns
stc
hlt
or
shrl
mov
sbb
flds
jmp
mov
aas
inc
les
lea
inc
mov
std
or
sbbl
sub
setge
cmp
mov
pop
in
push
aad
popf
lret
dec
add
jecxz
js
arpl
dec
cmp
mov
and
insb
pop
iret
arpl
adc
mov
mov
scas
jb
pop
movsl
cmp
adc
cltd
jl
add
loop
mov
ja
jge
mov
pop
dec
rcrl
pushl
out
leave
rcrb
mov
fcomps
mov
out
in
cmp
jl
mov
movups
jno
jo
pop
dec
push
mov
clc
pushl
into
idivl
sbb
inc
jnp
cmp
xor
xor
pop
inc
insb
test
into
cmp
push
fbld
lds
xchg
idivb
rorl
mov
adc
sub
push
mov
icebp
and
leave
xlat
outsb
pop
lahf
stos
popa
mov
add
call
cli
testb
test
fstps
xchg
js
shlb
aas
std
out
jns
add
xor
in
in
sbb
cmc
das
jne
sbb
jl
jmp
ja
adc
outsl
clc
lret
rorl
mov
dec
add
leave
not
lret
or
aad
adc
xchg
cs
pop
fs
imul
add
sbb
jnp
jmp
sub
pusha
ffree
or
mov
clc
push
or
sbb
in
sbb
in
icebp
sbb
pushf
cmp
cli
sub
add
sub
mov
and
dec
arpl
or
mov
add
jbe
sbb
jbe
cli
dec
mov
out
daa
arpl
ja
inc
mov
push
sub
mov
push
fdivl
push
cmp
or
lret
or
aas
xchg
xor
mov
imul
sbb
call
out
testb
or
cmp
rolb
cmp
fiadds
cld
adc
pop
xchg
mov
cmp
mov
ds
push
into
lcall
jmp
lret
inc
lods
push
int
scas
pop
mov
aad
mov
ss
mov
mov
mov
movsl
mov
cmpsl
mov
ss
mov
lods
mov
ss
mov
ss
pushf
ss
sahf
ss
mov
xor
mov
mov
lahf
andb
loope
inc
fstps
inc
fistpl
inc
fstpl
inc
pop
pop
pop
inc
rcrl
ret
pop
arpl
pop
gs
pop
addr16
leave
pop
imul
pop
dec
inc
iret
pop
mov
cmpsb
cmp
ljmp
aaa
mov
pop
inc
fistpl
inc
fstpl
inc
fistps
inc
rcrl
ret
pop
arpl
pop
gs
pop
addr16
leave
pop
imul
pop
dec
inc
iret
pop
mov
cmpsb
cmp
mov
insb
cmpl
xchg
je
mov
js
mov
jl
xchg
mov
cmpb
mov
inc
and
mov
and
mov
mov
rorl
cmpsl
rcll
stos
rcll
scas
rcrl
mov
sahf
and
shll
xor
roll
shll
rorl
mov
rorl
test
xchg
and
rcll
mov
fwait
and
rcrl
mov
mov
aaa
pushf
mov
mov
mov
lret
movsb
lret
cmpsb
lret
test
xchg
sub
lret
scas
lret
mov
fwait
sub
lret
mov
mov
xor
mov
fmul
shrl
ljmp
sub
lock
fldt
hlt
int3
fildll
clc
int3
add
dec
xor
jae
mov
cmc
dec
cmc
xor
aaa
mov
aam
push
loop
add
int
in
into
stos
in
iret
lods
out
shrb
call
popa
imul
cltd
mov
or
xchg
test
pop
aaa
fwait
pop
push
icebp
sahf
aas
add
inc
adcl
and
pusha
mov
cmp
ret
hlt
not
sub
mov
xor
ja
xlat
scas
inc
push
or
xchg
and
int3
rorb
les
push
test
popf
fimuls
jmp
lret
test
xchg
stos
stos
or
sub
out
imul
mov
popa
add
dec
popa
adc
data16
xchg
xchg
imul
mov
sbb
pop
test
push
sbb
xor
cmp
in
loopne
sbb
insl
lret
lret
push
push
lods
pusha
push
push
repnz
out
or
addr16
leave
fimuls
lret
imul
inc
or
sub
pop
in
lret
dec
iret
int3
in
rorb
in
dec
sub
dec
imulb
fnstenv
adc
mov
push
bound
xchg
mov
adc
mov
aam
rcll
lds
out
leave
cmp
add
inc
or
sub
fsts
sbb
fwait
push
inc
loope
and
add
lret
lea
cmc
adc
inc
sbb
xchg
stos
adc
xchg
mov
in
mov
aas
or
clc
add
clc
jp
jb
or
inc
das
sub
push
adc
fisubs
ja
pop
or
xchg
mov
jb
or
iret
mov
ss
pop
pop
cmc
push
int
dec
or
pushf
pushw
pop
loopne
cmpsb
dec
xchg
pop
cwtl
push
pushf
bound
add
outsb
mov
test
call
cmp
adcb
xchg
add
pop
mov
mov
dec
xchg
mov
jae
push
sti
mov
add
lds
pusha
popa
lcall
push
mov
pop
add
hlt
push
fmull
fisttps
push
cmc
push
mov
cmp
cmpsl
mov
inc
adc
ds
mov
xor
movl
xchg
dec
adc
lcall
orb
push
fdivl
hlt
pop
and
push
pop
pop
neg
and
jb
mov
inc
pop
scas
and
add
add
in
ds
insb
orl
lock
movsl
sbb
lahf
insb
pop
mov
xorb
sbb
popf
jmp
mov
dec
ja
push
xor
in
popf
mov
addr16
or
int
dec
inc
adc
add
xor
add
jmp
arpl
cmpsb
ljmp
add
ljmp
push
or
in
or
popa
outsl
sub
addr16
test
sbb
test
xor
jne
xchg
enter
ljmp
dec
and
mov
jo
hlt
and
sbb
push
cmpsb
sub
sti
ret
dec
push
adc
add
fldenv
gs
mov
dec
sub
stc
into
lret
push
into
leave
ret
mov
repz
dec
icebp
lds
mov
xor
aam
ficoms
jg
add
mov
cmpsl
mov
rclb
pop
and
lea
sub
fwait
into
sbb
outsl
xchg
adcl
push
mov
sti
cmpl
xchg
xchg
js
fwait
loope
xor
or
stos
and
push
pop
lret
mov
leave
or
pop
ret
ret
jl
std
pop
pushf
cmp
nop
xchg
push
mov
imul
and
addl
mov
mov
xor
mov
scas
fldl
fnsave
mov
movsl
adc
pop
subl
jge
xor
inc
jne
xor
cmc
data16
std
and
stos
jae
fsubr
test
rcrb
add
hlt
cwtl
cmpb
sub
and
xor
jecxz
pusha
adc
je
mov
and
mov
addr16
lret
and
sbb
add
cmpb
or
dec
mov
insl
push
adc
mov
jge
xor
negl
sub
cmpsb
fisttps
push
outsb
ret
sarl
out
lods
aaa
dec
sbb
and
jb
dec
add
sub
data16
lahf
jne
loope
add
cmp
mov
add
into
push
xor
hlt
mov
push
xchg
jnp
pushf
lods
sub
or
jmp
mov
ss
fisubs
jg,pt
insb
mov
and
adc
push
ds
jae
jg
mov
dec
repz
xlat
sub
and
mov
inc
jge
push
jl
cmp
or
aad
testb
aad
or
jecxz
dec
aaa
adc
aad
push
out
dec
sbb
xor
xor
cmp
dec
xchg
cmp
and
push
mov
mov
sub
clc
sub
mov
mov
sbb
fwait
cld
mov
mov
icebp
mov
mov
test
leave
imul
pop
pop
and
dec
pop
lret
adc
mov
push
int3
out
push
jl
mov
push
xchg
in
jbe
and
nop
rclb
clc
out
xchg
daa
cmp
loopne
push
das
sub
mov
sbbb
enter
and
pop
js
jns
jl
bound
and
leave
cmpb
out
aad
adc
xchg
dec
repz
push
ds
aaa
jns
sbb
sahf
jle
insl
out
es
and
insl
fbstp
rcl
xlat
adc
mov
shrb
incb
cmp
mov
mov
xchg
or
sbb
sub
loopne
add
mov
movsb
pop
andl
int
in
sub
sub
inc
repz
jle
cmp
jle
mov
sbb
jge
mov
movsb
mov
inc
dec
and
mov
mov
cmp
out
mov
cmp
sbb
mov
int
jp
iret
adc
outsb
repz
mov
or
test
sbbl
enter
push
loop
in
inc
hlt
or
and
mov
imul
int
xor
push
sub
xor
insl
jbe
aad
mov
jb
pop
lods
sub
loope
mov
lods
insb
fcmovnb
pusha
stos
mov
add
orb
in
test
nop
push
popa
jae
and
loope
inc
cmpsl
rcrb
pop
and
fildl
inc
scas
jle
mov
cmp
xor
mov
xchg
lcall
push
movsb
ss
mov
jl,pt
sbb
push
xchg
and
cli
adc
ds
ret
test
dec
in
jo
daa
cmp
fs
test
fbstp
dec
xor
xchg
cmp
mov
cmp
mov
sub
cmp
sbb
or
jns
mov
inc
loop
hlt
rclb
jae
mov
mov
sbb
cmp
cmpsb
cmpsl
adc
adc
in
fs
aad
das
pop
dec
cmp
jle
mov
scas
mov
mov
mov
xor
xor
sbb
data16
cmc
xchg
lahf
leave
jg
add
arpl
jbe
lret
push
adc
dec
add
add
dec
push
sbb
das
mov
dec
cmpsb
add
ret
hlt
mov
pop
andl
in
dec
scas
movsb
test
and
idiv
rolb
xor
scas
mov
es
out
repnz
js
js
shr
mov
ret
aad
iret
sub
mov
or
or
xor
loopne
pushl
sbb
mov
subb
imul
push
pop
cs
dec
iret
inc
jno
mov
or
adc
in
or
lret
bound
cmp
xor
pusha
jmp
jno
jb
clc
rorb
jg
dec
aaa
xor
mov
scas
pop
or
cmpsl
push
xchg
xor
dec
in
push
cmpl
mov
or
in
cmp
icebp
and
int3
inc
mov
and
test
or
xor
imul
call
or
fisubrs
lahf
invd
dec
cld
mov
out
scas
push
shll
ret
dec
mov
imul
test
adc
sub
jne
pop
sahf
jbe
sbb
ret
cmp
xchg
adc
xchg
loopew
cld
or
jp
lock
movsb
and
xchg
mov
sub
addr16
mov
arpl
in
cmp
sub
inc
or
push
mov
xchg
cmc
mov
lods
xor
out
xchg
into
cwtl
push
fadd
mov
push
pop
xchg
and
or
jnp
xchg
mull
push
sub
addl
test
sahf
jne
mov
arpl
rcr
ss
popa
cmp
sbb
icebp
xor
cmp
int3
cmp
mov
adc
push
and
push
jne
je
push
fcoms
jge
inc
in
mov
inc
mov
jbe
loopne
add
out
inc
idivb
push
int3
shl
andl
std
jecxz
and
pusha
mov
adc
int
mov
mov
jo
xor
sbb
mov
mov
push
adc
pop
jb
movsb
sti
dec
fcmove
orl
repnz
div
das
xchg
mov
ss
add
lcall
mov
or
xlat
mov
add
pop
mov
xchg
mov
cmp
jp
andb
loope
das
sbb
or
cmc
sub
ret
push
jl
mov
mov
out
or
pop
jno
testb
shld
outsb
inc
sub
fidivl
lods
enter
leave
mov
lret
test
ret
cwtl
add
xlat
xchg
cmpsb
and
cltd
cmpsl
popa
or
mov
sub
out
cmpsl
mov
push
and
bound
or
jle
add
xor
gs
daa
rol
cmpsb
ja
enter
cli
pusha
add
inc
out
xor
inc
test
loope
xorb
test
popf
xor
imul
repz
or
call
std
cs
in
adc
add
iret
into
or
and
gs
pop
scas
jno
jns
sub
ret
rol
cmp
shr
aad
jbe
pop
xorl
stos
inc
mov
nop
arpl
decb
cs
sub
jge,pn
xchg
int3
js
jp
lahf
cmp
scas
in
push
int
das
ljmp
sbb
ret
aad
les
int
lods
cs
stc
xchg
adc
adc
jecxz
xor
shrb
xor
mov
test
cmpsb
lds
shr
aaa
in
push
hlt
lods
jno
pop
lods
out
mov
movsl
in
and
add
add
or
add
shlb
test
add
add
or
add
jle
push
aas
add
add
or
add
sub
add
add
add
add
lods
add
add
lea
mov
xchg
ss
mov
shll
ss
aaa
dec
aaa
push
aaa
push
aaa
popa
aaa
jae
jbe
cltd
aaa
shlb
aaa
into
aaa
fdivl
std
aaa
aaa
pushl
or
sbb
and
and
cmp
pop
cmp
cmp
xchg
xchg
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jne
ja
jnp
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
mov
xchg
cmp
sarl
out
lock
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
insb
cmp
mov
xchg
cmp
fwait
cmp
lds
fidivrs
cmp
push
ds
ds
sub
sub
jnp,pt
xchg
test
mov
mov
ds
or
and
and
sub
xor
aas
data16
jbe
ja
jg
lods
aas
sarb
aas
lret
aas
sarb
fdivrs
fnstsw
out
aas
idivb
aas
add
add
add
add
add
xor
xor
xor
xor
pop
xor
xor
jg
xchg
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
aaa
xor
dec
xor
arpl
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
xor
xchg
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
je
mov
dec
xor
xorb
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
hlt
aaa
and
cmp
data16
cmpl
add
cmp
cmp
xchg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
pop
cmpb
ds
ds
or
adc
cmp
dec
aas
push
jb
sarl
aas
lock
add
add
add
push
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
pushf
xor
xor
mov
cltd
xor
or
adc
xor
xor
cmpsb
xor
inc
ss
mov
adc
sub
pusha
aaa
mov
lret
aaa
add
pop
cmp
cmp
cmp
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
mov
clc
adc
jae
xchg
aas
add
add
push
add
add
mov
ret
xor
xor
xor
xor
cmc
xor
xor
jp
std
xor
xor
xor
push
aaa
inc
aaa
pop
aaa
jp
mov
and
cmp
mov
mov
cmp
cmp
mov
lcall
cmp
nop
add
sbb
add
add
or
adc
sbb
and
sub
xor
