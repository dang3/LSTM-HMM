push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
popl
pop
pusha
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
pop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
pop
dec
jmp
jmp
call
add
mov
sub
sub
mov
pop
mov
mov
lea
mov
push
xorl
pop
sub
or
xor
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
xor
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
ret
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jb
ret
sub
lea
add
mov
mov
rol
xor
call
pushl
mov
sub
cmpb
je
add
lea
inc
movzbl
sub
ja
nop
mov
sub
ja
mov
cmp
ja
lea
jl
pop
call
popf
push
pushl
decl
ret
outsl
testb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
and
add
and
add
and
add
and
add
and
add
and
add
add
andb
add
add
jo
add
jo
add
cmp
add
dec
and
add
add
fsubl
add
and
add
add
push
and
add
add
shlb
add
add
sbb
add
mov
add
add
and
add
and
add
add
or
add
sbb
add
and
add
and
add
add
and
add
and
add
add
add
add
jb
add
nop
and
add
add
add
add
cmpsb
and
add
add
add
and
add
and
add
add
add
add
add
add
push
and
add
add
aam
add
mov
add
mov
add
push
and
add
and
add
and
add
and
add
and
add
and
add
add
andb
add
add
jo
add
jo
add
cmp
add
dec
and
add
add
fsubl
add
and
add
add
push
and
add
add
shlb
add
add
sbb
add
mov
add
add
and
add
and
add
add
or
add
sbb
add
and
add
and
add
add
and
add
and
add
add
add
add
jb
add
nop
and
add
add
add
add
cmpsb
and
add
add
add
add
inc
popa
fs
gs
fs
je
add
icebp
add
imul
jb
je
arpl
rolb
dec
gs
jo
gs
jb
jns
mov
inc
jb
popa
je
inc
imul
gs
gs
imul
data16
je
je
dec
popa
outsb
fs
add
mov
jo
outsb
fs
push
add
push
gs
insl
gs
push
add
movl
jne
jb
outsb
je
push
dec
add
or
popa
insb
imul
add
add
outsl
bound
push
imul
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
imul
insb
jae
jb
outsb
inc
add
adc
dec
outsl
fs
gs
imul
add
sahf
add
gs
je
dec
jne
gs
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
inc
jb
popa
je
inc
imul
gs
imul
gs
add
push
gs
jbe
outsb
je
add
popa
je
inc
imul
jns
add
push
add
je
outsl
arpl
gs
outsb
outsw
inc
add
call
inc
imul
bound
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
or
je
arpl
or
jo
imul
push
push
gs
jae
addr16
add
pusha
pop
inc
gs
imul
outsb
addr16
add
int
dec
outsl
popa
fs
jne
jae
jb
add
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
je
outsl
jns
arpl
add
jo
je
push
popa
addr16
add
mov
inc
gs
jb
jns
outsb
jne
mov
inc
jb
ja
arpl
add
jno
push
gs
jne
jae
jb
test
inc
gs
imul
js
inc
add
jp
inc
gs
imul
outsb
addr16
add
push
push
inc
push
xor
cs
insb
add
cmp
inc
gs
popa
fs
arpl
add
je
popa
fs
add
je
popa
fs
outsl
arpl
add
xor
inc
gs
bound
add
inc
push
push
inc
push
cs
insb
add
dec
jae
popa
insb
imul
inc
push
inc
push
dec
xor
cs
insb
add
pop
scas
and
notb
ss
xchg
cmp
dec
push
inc
sti
cmpsb
ss
sbb
push
pop
pop
in
inc
xor
and
jge
cmp
xor
add
test
insl
xchg
das
cld
lds
push
cmp
lock
outsb
cli
dec
add
ret
movnti
xchg
inc
and
aad
push
xchg
mov
jae
mov
mov
push
sbbl
or
mov
xchg
add
lcall
fcoms
lret
sbb
out
imul
fs
into
stos
ror
lret
pop
jge
shrb
ds
sbb
fsub
mov
stc
aad
and
test
lcall
hlt
and
and
push
sub
fsubr
sub
push
pop
inc
jbe
push
xlat
fcmove
mov
mov
fcomp
jmp
ss
cld
ret
or
sbb
lds
fwait
sub
adc
cld
jg
in
cltd
xchg
pop
repz
xchg
adc
mov
movsl
sub
jge
push
int3
iret
and
aam
push
adcb
mov
push
popa
jl
ss
mov
in
scas
mov
pop
pop
sbb
test
icebp
imul
jmp
ljmp
enter
outsb
xor
insb
dec
mov
jmp
sub
push
mov
sbb
daa
xor
in
add
into
pop
pop
xor
add
mov
fistps
cmp
in
enterw
and
mov
mov
in
push
or
ja
dec
shlb
xor
cli
test
call
andb
arpl
sub
jo
sub
jae
popa
pushf
cmp
movsb
jmp
outsb
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
test
add
clc
dec
add
push
add
add
add
add
add
fs
add
arpl
add
xor
add
xchg
add
xor
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
std
std
add
sar
add
std
sti
add
hlt
hlt
add
icebp
lock
out
in
add
jmp
add
out
add
loope
add
fsubr
add
fucomip
add
into
out
in
flds
fldl
call
add
add
fcmovu
add
loope
rolb
xlat
add
rcl
add
aad
add
aam
add
rcl
add
flds
iret
into
add
int3
add
fxch
add
ror
add
rcl
add
aam
add
ror
add
int
add
lret
lret
add
lret
add
leave
ret
lret
enter
add
mov
flds
mov
mov
movb
in
add
loop
add
in
add
loope
add
loopne
add
loope
add
add
aam
add
fdivrs
add
add
fbld
add
aad
add
aad
add
int3
lods
add
int
add
sarb
rol
mov
add
leave
mov
add
ret
mov
add
lret
rol
mov
lds
add
xlat
pushf
add
rcrl
add
mov
std
rolb
add
int
add
rol
mov
movl
add
mov
mov
enter
fadd
movsb
add
mov
mov
int
movsl
add
rclb
in
xchg
in
test
fdivrl
xchg
add
lods
xchg
add
lods
xchg
add
mov
add
cmpsb
mov
shlb
add
mov
mov
add
mov
mov
mov
mov
stos
mov
mov
add
mov
mov
mov
add
mov
scas
add
cmpsb
add
lods
add
test
add
movsb
add
mov
mov
mov
mov
add
xchg
mov
add
cmpsb
lahf
add
xchg
add
mov
mov
add
lcall
lcall
add
xchg
xchg
add
nop
mov
xchg
nop
nop
add
mov
add
fxch
add
into
add
jmp
add
mov
add
lahf
add
add
mov
cld
jg
cld
ret
jo
test
insb
add
mov
jno
std
mov
data16
mov
add
scas
fs
movsb
addb
mov
js
into
fwait
je
ficompl
gs
mov
add
mov
add
movsl
dec
add
test
add
cmpsl
inc
add
mov
pop
add
xchg
push
add
xchg
pop
add
mov
int
push
add
xchg
mov
ja
cmpsb
mov
mov
mov
mov
mov
jo
cld
mov
inc
add
sahf
xor
add
fwait
cs
xchg
sub
std
xchg
and
ljmp
add
xchg
add
lea
incb
add
js
add
jl
add
jg
add
jge
add
push
add
je
add
jo
add
insb
sub
iret
insb
and
add
jge
add
je
add
jbe
add
jae
add
jno
add
jo
add
jl
add
jp
add
js
add
jne
add
jno
add
insl
add
jecxz
add
loop
add
aad
sbb
aad
sbb
iret
fs
fldt
add
add
lret
add
pop
add
rcrl
add
pop
or
mov
add
add
call
sbb
jmp
adc
adc
pushl
jae
push
pop
add
push
adc
ljmp
xchg
push
pop
add
add
adc
jmp
jae
xchg
add
push
adc
lcall
and
jne
xorb
or
sub
jmp
js
jbe
daa
and
push
pop
sbb
sub
jmp
jge
cmpb
dec
dec
and
outsl
js
mov
pushf
fwait
sahf
cmp
jmp
outsb
pop
daa
push
je
xchg
xchg
push
dec
dec
outsb
es
lea
jle
mov
cmp
sub
jno
movsl
test
scas
push
dec
dec
es
orb
pop
popf
mov
cwtl
mov
mov
dec
push
push
push
and
outsl
lcall
sahf
sahf
fwait
fwait
cwtl
sahf
sahf
fwait
fwait
sahf
sahf
fwait
mov
pop
push
add
push
jae
andb
incl
pushf
pushf
fwait
sahf
sahf
mov
leave
lret
xchg
jp
sbb
add
add
pop
and
incl
mov
lret
fcmovnu
fucom
in
loop
insb
inc
push
pop
add
add
push
adc
lcall
addb
cli
std
cld
sti
hlt
repnz
inc
push
add
adc
ljmp
jge
addb
cld
sti
hlt
icebp
out
out
xlat
shll
and
ljmp
jae
jae
jg
idiv
sti
stc
hlt
repnz
in
fcmovu
fcom
iret
mov
pushl
outsb
outsb
outsb
jae
mov
repnz
fcmovu
aam
rcl
shlb
call
jae
insl
jecxz
hlt
repz
in
fcmovu
into
mov
bound
jmp
jno
push
out
fcmovu
fnop
mov
scas
dec
inc
sbb
jmp
outsb
pusha
lock
fcmovu
mov
push
push
dec
inc
and
pushl
sbb
and
pop
jmp
out
fcmovu
fcmovbe
mov
dec
dec
xor
xor
incl
push
pop
adc
pop
ret
in
fcmovu
fnop
push
xor
xor
xor
inc
es
incl
and
fcmovu
mov
das
das
xor
inc
es
call
mov
lock
out
mov
xor
cmp
aaa
xor
call
addr16
jmp
inc
inc
inc
inc
pop
sbb
or
decl
pop
imul
sbb
lcall
clc
jg
jmp
ud0
rolb
incl
add
cld
add
push
add
jmp
add
and
add
addb
add
add
add
add
jo
add
aas
addb
aas
addb
pop
addb
pop
addb
pop
addb
pop
loopne
add
incb
add
incl
add
incl
add
add
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
sar
add
xchg
incl
mov
add
incb
pop
xor
add
adc
add
repnz
add
add
add
add
add
push
add
or
das
add
add
add
std
incl
in
sar
add
mov
add
xchg
std
add
jb
add
incb
lcall
add
iret
add
mov
push
add
add
add
sbb
xor
add
add
incl
sti
sar
add
mov
add
xchg
std
add
jb
add
push
incb
repnz
add
adc
add
add
add
add
add
add
add
push
add
xor
add
add
std
add
shl
add
mov
add
xchg
fiadds
std
jae
add
push
enter
mov
add
add
add
add
jb
dec
add
add
add
add
add
add
std
add
rcr
add
mov
add
xchg
mov
pushl
add
push
xchg
std
xor
call
pop
add
add
rolb
inc
add
add
add
and
push
add
add
add
add
add
add
std
incb
std
aad
add
mov
add
cwtl
xchg
add
jl
add
pop
push
add
inc
xor
std
and
add
push
add
rorl
add
or
add
add
push
push
add
das
add
add
add
add
std
incb
jmp
rolb
call
mov
inc
xchg
add
mov
add
sahf
push
add
mov
add
jnp
add
imul
add
add
jb
add
push
and
add
adc
add
add
add
std
add
not
add
icebp
mov
in
xchg
add
in
add
ficoms
fdivs
add
aam
add
ret
add
shrl
add
xchg
je
add
add
push
inc
add
cmc
repz
add
repnz
icebp
icebp
add
out
in
add
out
add
loop
add
add
les
loopne
fcmovu
fldl
fldl
aam
faddl
fcomp
xlat
add
aam
add
rolb
rcl
roll
fxch
filds
into
add
ror
add
ror
add
ror
add
int3
leave
add
int
add
int3
lret
add
leave
add
lret
iret
mov
add
mov
add
rol
mov
rol
cld
loop
add
fidivs
add
xlat
mov
add
fisubl
add
lret
scas
add
lret
test
xlat
enter
mov
add
les
add
cmpsb
add
rorb
fidivs
xchg
aad
addl
rol
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
mov
mov
mov
mov
mov
mov
add
scas
scas
add
scas
stos
add
movsl
stos
add
cmpsl
cmpsb
add
mov
add
lcall
xchg
scas
lcall
xchg
addb
lcall
xchg
xchg
xchg
add
nop
xchg
add
fld
add
xchg
add
lret
jl
stc
ret
cld
les
in
jb
cld
mov
outsl
add
mov
add
test
dec
add
xchg
pop
add
xchg
push
add
xchg
scas
subl
mov
sub
add
mov
add
xchg
cld
xchg
add
jl
add
jle
add
addr16
out
js
add
jg
add
jnp
add
jnp
add
jnp
add
ja
add
jne
add
insl
or
in
outsl
add
call
insb
sbb
add
pop
add
mov
add
add
lcall
lcall
orl
cltd
mov
mov
lcall
stos
mov
rol
mov
scas
xchg
xchg
int3
xchg
xchg
rcl
aam
rcl
ror
mov
mov
shl
lock
out
mov
jle
xchg
call
cld
stc
hlt
jmp
ljmp
cld
cli
cmc
jmp
out
mov
inc
les
in
call
incl
repnz
loopne
lahf
lahf
movsl
mov
pushl
mov
ljmp
test
incl
add
addl
incl
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
lock
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
cmp
add
std
incl
std
incb
fwait
lcall
lahf
lahf
lahf
or
mov
lahf
or
fwait
cltd
add
add
add
stos
stos
stos
add
lahf
sahf
sub
movsl
cmpsb
movsl
jne
test
mov
mov
mov
scas
mov
jne
stos
stos
push
popf
lahf
popf
das
nop
adc
add
add
movsb
sahf
pop
cltd
mov
mov
les
mov
lret
out
rcl
shr
rcl
rcr
leave
leave
enter
mov
pop
lcall
add
rol
add
mov
lcall
stos
test
mov
mov
mov
into
int3
jmp
jecxz
out
in
out
jmp
jmp
jmp
fcmovnu
out
enter
lods
scas
outsb
mov
fwait
cltd
add
std
incb
stos
stos
stos
add
into
int3
add
movsl
mov
xchg
rcrb
test
inc
aad
jmp
in
push
idiv
std
std
cld
std
std
push
cmc
repnz
loope
jecxz
mov
cmpsl
cmpsb
addr16
cltd
cwtl
sbb
push
add
add
add
addl
mov
mov
nop
xchg
xchg
pop
sahf
lahf
sahf
and
stos
lods
scas
mov
pushf
lcall
mov
mov
iret
into
fsubp
loopne
in
out
lock
idiv
idiv
sti
cli
sti
stc
cli
stc
jmp
call
iret
out
lods
mov
mov
mov
mov
lods
stos
lods
add
nop
xchg
daa
mov
cmpsb
cmpsb
pop
cmpsl
test
jo
test
movsl
mov
mov
std
mov
mov
cmpsl
cmpsl
test
cmpsb
test
mov
iret
cli
fcom
xlat
clc
out
out
jmp
jmp
out
in
out
lock
icebp
jmp
loopne
dec
shl
cld
lods
mov
mov
xchg
lcall
cmpb
mov
nop
cmp
scas
scas
popf
mov
mov
mov
mov
scas
ret
inc
mov
mov
test
mov
test
fcmovbe
repnz
fdiv
loope
loopne
jecxz
out
fcmovne
out
mov
mov
mov
nop
cltd
fwait
xor
addr16
pop
fs
dec
dec
dec
adc
cmp
xor
cmp
or
add
add
add
add
mov
subl
ret
rol
mov
mov
test
movsl
scas
pushl
lods
mov
dec
lret
lret
leave
sti
lret
repz
out
int
leave
repnz
shl
fnstcw
mov
int
popf
mov
mov
dec
jo
jo
jae
je
addr16
pop
pop
gs
dec
dec
push
inc
inc
inc
pop
dec
dec
push
pop
push
pop
pop
cmp
sbb
dec
or
or
cmpsb
cmpsb
cmpsb
mov
mov
cld
lret
dec
leave
pushl
stos
cmpsl
jmp
test
movsl
inc
mov
mov
mov
mov
lock
mov
cmpsl
lcall
xchg
xchg
cld
nop
xchg
xchg
rorb
mov
ret
test
jge
jnp
je
jbe
insb
insl
imul
jae
int
jge
lods
ja
jne
addr16
pusha
pusha
pusha
and
stos
test
mov
mov
lock
inc
pushl
mov
mov
sahf
ret
lcall
leave
xchg
dec
into
mov
mov
sarb
scas
test
pushf
xchg
xchg
cld
lcall
call
lea
push
stos
mov
popf
fstps
mov
cli
mov
stc
mov
xchg
mov
jl
insl
imul
xchg
mov
scas
lods
out
mov
mov
lret
out
pushl
out
mov
pop
jecxz
incl
jl
ret
lds
inc
mov
lret
sti
vcmpps
movsl
lods
stc
movsl
xchg
movsb
std
test
xchg
mov
clc
xchg
xchg
xchg
xchg
nop
nop
dec
mov
scas
cmpsl
decl
xchg
lcall
pushf
lahf
cltd
cltd
lcall
xchg
jg
push
push
insb
push
imul
xchg
xchg
in
movsb
movsl
cmc
lretw
and
pop
repz
fcoms
pushl
ret
mov
call
aam
fcom
aam
lret
std
mov
mov
test
test
cmpsb
popf
mov
lcall
xchg
sahf
mov
xchg
xchg
ss
mov
lods
fldt
xchg
nop
call
xchg
xchg
lcall
pushf
popf
lcall
xchg
xchg
cld
mov
imul
pop
pop
cmpsl
jb
jno
test
lcall
rol
ljmp
mov
pushl
sarb
loope
loop
jmp
ljmp
jmp
xlat
mov
lods
scas
lcall
xchg
ficomps
nop
xchg
push
fxch
mov
fldt
cwtl
xchg
call
cwtl
call
xchg
xchg
decl
mov
icebp
cmpb
test
rolb
mov
out
mov
xchg
cmp
stos
mov
pushl
rol
int
into
fstp
fdivrp
icebp
icebp
icebp
cli
sti
cld
std
cld
cld
sti
cli
cli
out
out
lock
fcom
fdivr
mov
stos
stos
lock
lcall
xchg
jg
or
mov
sahf
popf
lcall
mov
lcall
xchg
cwtl
xchg
lea
clc
mov
subl
mov
jno
std
shll
lret
jae
dec
jg
inc
pushf
jge
sarb
call
xlat
jmp
out
push
div
sti
cld
std
std
std
std
sti
stc
stc
stc
jmp
jecxz
inc
enter
mov
mov
cltd
lcall
shlb
scas
stos
movsb
cmpsb
mov
cmpsb
jmp
pushf
lahf
jmp
test
jo
mov
dec
inc
jb
inc
arpl
pop
adc
int
add
jmp
data16
in
or
faddl
dec
ret
mov
fcom
aad
ljmp
std
std
cld
cld
std
sti
push
clc
idiv
in
in
out
sti
loop
loope
enter
mov
jbe
test
cltd
add
mov
mov
fldt
lods
test
ljmp
mov
stos
inc
stos
lcall
pop
or
rcrl
call
push
add
rcrl
call
pop
add
fsubl
jmp
imul
jmp
add
hlt
ja
push
jge
call
test
faddp
cmpsl
jmp
aam
in
jecxz
push
ljmp
rcl
shl
lret
test
mov
scas
and
mov
scas
pop
mov
scas
fldt
mov
mov
mov
ljmp
stos
stos
inc
stos
popf
dec
orb
pop
or
pop
add
aam
add
pusha
add
fsubs
jmp
push
out
jno
push
js
sti
jnp
cld
jg
std
orb
clc
mov
push
popf
dec
jmp
lods
outsl
jmp
mov
xchg
ffree
mov
mov
mov
stos
test
mov
mov
add
add
scas
lods
fldt
mov
mov
mov
mov
scas
scas
scas
inc
mov
call
nop
pop
fsubs
fsubs
fsubs
fsubl
jmp
imul
push
jbe
cld
jns
std
jg
std
addl
cld
mov
std
xchg
and
std
fwait
sub
cld
popf
xor
out
mov
inc
mov
stos
stos
xchg
lcall
mov
cmpsl
mov
mov
mov
sar
mov
mov
ret
mov
call
xchg
push
aad
or
fisubs
jmp
insb
add
lock
stc
jp
sti
jle
cld
jg
sti
mov
call
sub
std
lcall
sti
popf
das
push
mov
stos
clc
test
xchg
xchg
inc
push
push
push
add
add
add
sbbl
pushf
mov
mov
ret
mov
mov
inc
mov
jl
shll
fldenv
fisubs
jmp
imul
push
jp
cld
jg
cld
addb
incb
ljmp
dec
std
test
dec
std
stos
dec
ljmp
cmp
mov
scas
rcrb
add
add
dec
pop
pop
pop
imul
xchg
xchg
mov
rol
ret
mov
mov
inc
sarb
aad
das
fldt
jmp
push
add
repz
cld
addb
incl
add
std
lea
cmpsl
inc
sti
mov
data16
cld
mov
insb
std
shrl
shrl
into
mov
loope
mov
mov
popf
popf
pop
fwait
fwait
cltd
or
add
add
dec
pop
push
pop
pop
fcoms
mov
inc
mov
mov
mov
mov
inc
jmp
insb
or
jmp
je
sti
jle
cld
addl
cld
addl
std
xchg
sub
mov
test
std
lret
std
iret
xchg
std
rorl
call
xchg
cld
fistpl
std
mov
mov
mov
popf
adc
add
add
add
add
popa
inc
jge
jnp
scas
mov
fld
vpaddsb
int
test
ret
ret
mov
mov
mov
fimull
or
icebp
outsl
add
stc
jns
cld
addb
cld
addl
std
test
std
xchg
std
mov
xlat
fwait
call
popf
std
fistpl
loope
jmp
mov
scas
mov
mov
cltd
sbb
std
incb
jnp
jno
popf
popf
sahf
inc
lret
fs
jecxz
loope
in
fmulp
aam
fcmovu
int3
lret
lret
lret
sarb
dec
ljmp
sti
jl
cld
addl
cld
xchg
cld
xchg
std
scas
push
std
fldt
jecxz
in
call
mov
cld
loope
jmp
shll
ljmp
mov
incl
lods
stos
lods
add
loope
or
icebp
lock
repnz
in
lock
jmp
out
pop
in
in
jne
xchg
fcomp
fadd
xlat
lds
jmp
or
std
jg
std
addb
std
test
incb
push
inc
jne
jmp
out
cld
call
mov
cld
call
mov
call
sarb
mov
addl
std
std
add
incb
std
cld
cld
or
cmc
cmc
sbb
lock
xor
fstp
jnp
leave
jb
in
outsl
adc
stc
jbe
jp
cld
jl
cld
jle
incb
xor
dec
mov
std
in
std
jecxz
cld
loopne
push
ljmp
in
fsubrl
test
cmpsb
cmpsl
xchg
mov
addl
aam
aam
aam
into
push
int
mov
sti
out
adc
hlt
insb
add
stc
jo
push
jae
push
jp
clc
mov
std
repnz
mov
out
aad
cli
jmp
mov
hlt
fmulp
cmpsb
in
aad
mov
ror
mov
ror
mov
rcl
mov
pushf
stos
stos
stos
pop
xchg
xchg
xchg
sbb
jg
fcmovnu
fildl
leave
sarl
scas
xchg
neg
addl
fidivrl
cld
fdivrs
neg
lea
popf
push
jmp
lods
jg
into
mov
stos
rol
shrb
ret
shlb
rol
jns
ret
mov
dec
mov
mov
mov
add
add
add
mov
mov
nop
into
shlb
shlb
fnstsw
mov
mov
scas
cmpsl
movsl
mov
cmpsb
lea
mov
push
mov
lahf
inc
mov
lods
sub
sarl
mov
or
int3
int3
add
jg
addl
incb
mov
mov
mov
mov
mov
mov
lods
pushf
mov
test
lods
scas
movsl
push
scas
scas
test
scas
test
popf
and
shrl
xchg
xchg
pop
stos
stos
stos
add
jg
std
add
std
incl
lods
lods
stos
add
mov
mov
mov
adc
stos
stos
setnp
mov
add
std
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
add
incl
add
cld
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
loopne
add
incl
pop
jmp
add
add
jmp
add
add
jmp
add
add
rcrb
push
out
and
movsl
cmp
inc
jne
js
ret
pop
jbe
xchg
sub
xchg
loope
leave
in
mov
push
jmp
xchg
sbb
ds
test
nop
cmp
shl
mov
adc
inc
fsubrs
ja
mov
mov
fdivrl
push
fdivl
xor
shrl
cmpl
mov
xlat
outsb
or
or
mov
ret
adc
stos
iret
xor
add
addr16
and
push
pop
xchg
movsl
jb
cmp
ret
sbb
js
insb
enter
call
icebp
mov
add
roll
and
xchg
mov
fsub
mov
or
cmp
xchg
cmp
adc
mov
shrl
add
mov
push
fnstenv
push
adc
fsubs
adc
jecxz
dec
xor
jge
push
jl
push
call
iret
lock
push
and
pop
pop
out
mov
and
xor
jne
pop
repz
jp
push
mov
jno
jbe
das
cmpsb
ror
add
dec
push
aaa
in
test
fimull
mov
mov
lds
montmul
cmpsb
pop
jg
fidivs
push
gs
cmpb
stos
mov
decb
mulb
mov
aas
test
dec
ds
xchg
mov
repz
in
dec
pop
in
jp
pop
cmp
data16
sbb
hlt
dec
mov
adc
ret
hlt
xor
push
inc
xchg
xchg
mov
hlt
mov
into
adc
lea
xor
push
scas
pop
repz
out
add
xor
cld
mov
jo
stos
sbbl
cmpsb
testl
xor
push
jae
stos
inc
test
pusha
xlat
out
xchg
sbb
out
into
mov
mov
outsb
addr16
lahf
das
out
pop
mov
pushf
lods
fbld
mov
and
in
jb
popf
xor
xchg
adc
shl
enter
adc
add
xor
xchg
imul
or
movsl
int3
aaa
repnz
test
jbe
xor
std
xchg
clc
jbe
je
and
sti
xchg
cli
ja
shrb
leave
pop
scas
cli
insl
jbe
lahf
sbb
int
rclb
adc
or
shrw
adc
xchg
gs
inc
xchg
or
movsl
cmp
pop
sub
or
cmpl
or
xor
sub
xchg
inc
fidivs
test
cmp
push
gs
test
ret
pop
sub
dec
loope
cmp
cmp
call
jg
sbb
je
inc
cmp
js
sti
xchg
es
js
ja
push
lcall
jno
push
in
sbb
jae,pt
jo
shrl
xchg
xchg
sub
cmp
xchg
scas
inc
pop
lea
fs
sub
adc
loopne
fisttps
mov
mov
daa
mov
or
cmp
arpl
pop
jge
pop
scas
sub
jbe
jl
ss
and
xchg
push
iret
mov
mov
and
jb
leave
cmp
cli
jne
nop
cmpsl
sbb
dec
enter
insl
jbe
lahf
sbb
int
rclb
adc
or
shrw
adc
xchg
fs
inc
xchg
or
movsl
cmp
pop
sub
cmp
dec
loope
pop
or
xor
sub
xchg
inc
fidivs
test
cmp
push
gs
test
ret
pop
sub
dec
loope
cmp
cmp
xchg
sub
mul
js
dec
add
xor
shrl
push
push
in
addl
cmp
ljmp
or
lret
gs
sbb
rorb
xchg
and
and
rorb
scas
inc
int
nop
daa
and
sbb
mov
push
loop
sti
sub
sub
je
and
cli
jbe
nop
daa
xor
adc
jne
pop
hlt
xor
jnp
orl
movsb
xchg
sub
fwait
lea
dec
dec
loopne
push
jae
xchg
sbb
jg
aaa
into
and
imul
jg
xchg
cs
in
sar
gs
sub
fiaddl
movsl
popa
clc
rorb
jle
jg
and
pop
negb
xor
sub
out
mov
insb
sbb
mov
cltd
xor
fdivrl
adc
inc
fcoml
ds
ret
icebp
mov
jecxz
xor
and
jo
add
xor
add
adc
mov
xor
xor
adc
repz
mov
mov
sbb
lret
cmp
dec
jecxz
inc
call
cmp
sub
mov
cmp
imul
adc
mov
inc
pop
pop
cmp
push
cmp
inc
sahf
mov
iret
pusha
testl
push
dec
loopne
popf
inc
fmulp
inc
fiaddl
pop
sub
mov
fdivl
sahf
testl
adc
out
xchg
pusha
adc
enter
jnp
mov
test
and
out
cmc
into
sub
adcb
push
mov
std
pop
xchg
inc
fadd
add
and
pop
pop
repnz
rcrl
push
call
daa
pop
inc
fmull
popf
loope
sar
jnp
sub
stc
pop
repnz
lea
pop
push
ljmp
and
dec
jg
or
pop
xchg
ds
outsb
popf
int
shlb
and
push
nop
test
cmpb
rcrl
movsb
cmp
pushf
sub
rcrb
into
mov
hlt
jno
pop
mov
inc
jnp
mov
sbb
fcomps
pop
lock
lds
push
shll
push
subb
aaa
pop
mov
cwtl
mov
jne
cli
cmpsl
add
insl
add
sti
dec
loop
cltd
xchg
int3
out
cmp
inc
sbbl
sbb
sqrtps
xor
hlt
fidivs
push
cmp
jp
add
insb
xor
xchg
cs
add
push
mov
jb
int3
cmpsl
insl
push
movsl
lcall
lret
out
pop
push
lods
inc
push
xchg
sub
xor
xchg
js
mov
imul
lahf
ss
add
or
push
mov
xchg
test
add
jbe
js
outsb
stos
loop
fisttpll
fs
jne
and
fimuls
inc
fnstenv
or
cwtl
stos
pop
repz
out
data16
cmp
sub
jno
push
imul
pop
inc
fisttpll
xchg
jp
ret
test
aad
fs
icebp
cwtl
xchg
pop
cmc
ret
cmp
mov
adc
ss
in
stos
pop
data16
xor
mov
rcr
cli
psrad
rcll
sbb
dec
push
push
call
psrad
out
dec
push
outsb
add
or
sbb
repz
xor
cmc
loop
pop
adc
xchg
aaa
iret
enter
fs
adc
mov
pop
add
sub
lcall
enter
push
dec
lods
xchg
fldt
lods
sahf
cld
movsl
cmp
shll
testb
sbb
rorl
dec
out
outsb
mov
dec
daa
mov
jae
jle
pop
mov
lahf
sti
xchg
int
gs
nop
out
dec
loopne
mov
in
cmp
jle
add
xchg
popl
sbb
push
outsb
add
xchg
cmpsl
lea
stc
cmp
push
cmp
test
mov
xchg
sub
dec
mov
sub
lods
ret
roll
xchg
mov
mov
mov
in
add
xchg
push
addr16
dec
testl
iret
stos
out
ficoml
movsl
cmp
pop
sub
dec
xchg
sub
hlt
ret
hlt
mov
push
jns
push
addr16
pop
int3
cltd
out
test
lock
sbb
cmp
mov
push
movsl
mov
loopne
movhps
aaa
into
push
mov
rol
andl
push
or
push
in
push
or
and
xchg
push
ja
push
mov
inc
out
shrl
cmp
bound
fnsave
jmp
add
sbb
cmpsb
in
rolb
xchg
add
je,pn
sbb
lock
mov
pusha
cmc
adc
fcompl
cmp
jb
mov
das
test
adc
pop
sbb
fmul
arpl
or
test
test
pop
and
lods
dec
cld
jmp
xor
arpl
jp
lea
jl
dec
inc
lahf
in
roll
push
in
push
dec
stc
xchg
je
or
cmp
call
dec
jnp
insb
add
mov
inc
mov
sbb
mov
sti
rcrb
loopne
xchg
adc
xchg
imul
sbb
mov
cli
andb
xchg
cld
dec
femms
cs
aaa
imul
into
mov
outsl
adc
jnp
pop
bound
inc
fwait
cmp
insl
ret
test
call
add
arpl
and
nop
or
pop
sbb
sub
jns
inc
pop
sbb
push
fisttps
cmp
push
and
add
cmp
push
xor
push
movsb
aad
js
clc
in
sub
ja
subl
mov
mov
cmp
xor
cli
mov
sub
xchg
jnp
push
icebp
test
aas
jle
and
das
xchg
xor
push
lds
inc
push
daa
inc
icebp
movsl
ljmp
imul
dec
push
leave
ljmp
sbb
mov
cld
dec
lock
jle
xchg
cmp
out
shlb
push
cltd
rorb
jge
lret
je
sbb
xor
into
out
out
xchg
testb
mov
inc
xor
push
fisubs
fisubs
pushf
push
repz
cwtl
cmpl
sub
and
hlt
adc
push
mov
leave
mov
sbb
faddl
inc
rol
repnz
pop
fimull
int3
sub
bnd
push
shrl
stos
lods
int
frstor
sub
test
ja
jp
cld
repnz
loop
xor
leave
orb
iret
xchg
mov
or
jge
imul
lret
xor
out
imul
xor
test
sti
mov
pop
mov
adc
dec
or
or
or
xchg
sbb
add
call
incl
sar
and
cmp
cmp
out
pusha
xchg
call
iret
jne
mov
mul
bound
rcrl
fwait
and
out
lds
push
or
jle
cmp
mov
sub
inc
dec
push
mov
fwait
test
jl
gs
sti
or
movsb
mov
lret
jno
mov
jp
je
cmp
test
mov
sub
jnp
scas
flds
lods
and
inc
or
gs
ljmp
jae
iret
cmp
sub
push
mov
push
rorb
mov
loop
mov
sub
ja
jg
repnz
cmp
xchg
pop
int
add
inc
pop
out
and
repz
in
test
xor
adc
int
mov
out
push
sub
data16
xor
fsubs
ret
popa
clc
mov
pop
hlt
insb
sarb
add
jnp
shlb
sub
sbb
hlt
daa
mov
enter
dec
loop
jle
push
ljmp
jno
outsl
and
add
inc
fdivrs
rcrl
push
sbb
jge
imul
or
jo
daa
mov
mov
testb
pop
adc
cmpl
adc
cmp
mov
add
adc
xchg
cs
cmp
jle
adc
pushf
nop
jb
imul
repnz
daa
xor
rcrb
mov
push
out
cmpsl
lds
outsb
add
cmpsb
pushf
xor
push
mov
fmuls
arpl
mov
sbbl
jge
jns
sub
iret
les
push
in
xchg
icebp
push
mov
mov
cmp
cmp
push
pop
bnd
rcrl
outsb
add
xchg
or
icebp
mov
cltd
stos
inc
les
mov
in
leave
pusha
add
out
pop
mov
jbe
pushf
gs
jp
jecxz
and
xchg
aam
fdivr
mov
pusha
testl
dec
iret
lretw
out
pushf
xor
out
sti
xchg
mov
mov
mov
mov
outsl
out
mov
into
jo
testl
int3
mov
xor
and
mov
test
mov
and
mov
fdivrp
xchg
ljmp
mov
add
and
cmp
rcrb
dec
jmp
pop
sahf
push
addr16
cmp
push
test
repz
xchg
ljmp
xchg
sub
fidivs
xchg
pop
repz
jnp
inc
in
mov
outsl
cltd
xor
cmp
jns
mov
lods
lahf
ss
aad
or
push
in
lret
and
xchg
outsb
in
test
xchg
mov
out
cmp
cmp
dec
inc
pop
pop
repnz
imul
sti
jns
clc
adc
test
adc
mov
fsubl
shrl
aam
push
xchg
inc
cmp
mov
pop
adc
out
cs
mov
popf
std
dec
jecxz
mov
data16
sub
in
test
orb
notl
cmpsl
ds
adc
shll
lds
pop
lock
shrl
in
push
lret
xor
mov
in
pop
pusha
pop
montmul
cmpsb
xchg
sub
dec
in
dec
loop
out
shrl
xor
test
roll
sub
cmp
or
les
sub
in
push
loop
sahf
stos
imul
mov
xchg
fimull
pop
mov
repz
jnp
cmp
push
lret
mov
sarb
add
pop
mov
sub
jno,pn
cmp
pop
jmp
dec
in
add
insb
add
dec
cltd
xor
sbb
dec
add
cmp
jp
aad
loopne
pop
lock
hlt
mov
sub
pop
cmp
mov
xchg
mov
mov
xor
loope
pop
shrl
pop
push
xchg
clc
or
sub
cs
push
add
dec
loopne
jmp
addr16
mov
rolb
mov
and
jnp
int3
daa
mov
mov
and
lods
cmc
ds
jb
lcall
daa
data16
adc
scas
inc
xchg
mov
jae
fidivs
xchg
fstpl
aad
stos
sti
or
mov
repz
fildll
shll
adc
push
das
mov
js
outsl
fisttpl
add
imul
push
mov
loope
mov
in
pop
mov
mov
test
dec
mov
mov
scas
and
shlb
mov
mov
inc
out
test
test
dec
jecxz
aam
roll
dec
fistps
mov
std
loop
xchg
sub
inc
and
jge
loopne
scas
xchg
rcrl
xchg
dec
or
ja
jo
mov
andb
add
sbb
aam
inc
std
cmp
out
gs
aas
adc
inc
pop
jae
aas
outsb
ja
lods
pop
xchg
sub
lds
pop
stos
dec
rclb
loope
cmp
fidivs
pop
lock
std
xchg
arpl
sbb
and
cmp
fisttps
loope
notl
xor
js
fistpl
or
hlt
xchg
sub
mov
mov
pop
and
jbe
jbe
addr16
dec
jmp
push
mov
or
adc
sub
cmpsl
testb
iret
dec
push
addr16
xor
pop
jb
scas
jg
cmp
enter
pop
mov
inc
jg
into
gs
shr
subl
or
dec
popf
sub
mov
leave
inc
faddl
push
jmp
cs
sahf
mov
sbb
mov
xlat
lahf
mulb
mov
jl
mov
imul
jae
jnp
mov
loope
xchg
fisttpll
ljmp
mov
int
mov
adc
hlt
outsb
add
or
mov
inc
and
out
arpl
add
ljmp
testb
stc
adc
inc
or
pusha
aaa
arpl
outsb
pusha
out
mov
pusha
testl
push
inc
add
outsb
outsb
mov
in
inc
fld
add
div
mov
jg
inc
pusha
shrl
insb
popf
xor
dec
out
xchg
jle
push
mov
outsb
add
cli
scas
mov
pop
adc
test
jns
dec
cmp
mov
ret
shl
add
mov
shll
mov
cmpsl
int3
inc
xlat
jle
test
ret
xchg
pop
cmc
movsl
jmp
cmp
les
cmp
push
push
call
fidivs
lret
mov
xchg
aam
fsubrs
lcall
mov
cmp
iret
inc
stos
and
xchg
arpl
sbb
je
mov
rcll
add
imul
fidivs
sbb
xchg
repz
je
sbb
mov
lret
loope
cmp
xchg
or
out
sub
scas
pcmpeqd
push
xchg
xchg
sub
je
in
pop
stc
mov
push
je
or
inc
shlb
inc
movsl
cmp
insl
out
test
lods
or
in
mov
sub
pop
xor
test
or
mov
roll
out
sub
mov
or
mov
cmp
testl
repz
aad
scas
outsl
adc
xchg
xchg
das
mov
adc
in
das
xchg
push
insb
add
mov
hlt
sbb
and
stos
test
sbb
lea
xor
pop
inc
shrl
jnp
push
xlat
outsb
imul
cltd
pop
test
mov
mov
lea
stos
aaa
xchg
aad
pusha
xor
enter
dec
lock
neg
addr16
mov
int3
fnstenv
inc
mov
lahf
mov
jmp
add
push
dec
testl
in
ret
jo
mov
xor
sbb
mov
xchg
xor
push
js
popa
dec
jno
and
call
aas
call
adc
mov
xchg
js
fisubrl
shll
stos
montmul
cmpsb
xchg
jg
or
mov
jno
inc
out
and
xchg
jbe
ret
xchg
xchg
push
clc
lret
bound
dec
add
mov
in
gs
add
mov
cltd
xor
and
shlb
inc
and
fdivl
jmp
jmp
rorb
imul
idivb
cmp
mov
or
imul
adc
sbb
ds
fldcw
lret
bound
mov
mov
call
or
outsl
pop
xor
mov
dec
jecxz
jecxz
push
push
adc
stos
dec
cwtl
add
ret
aas
xchg
daa
test
mov
pop
and
fcomp
enter
cmp
cmpsb
out
movsb
or
aas
sub
xchg
xor
jl
inc
adc
add
push
and
aam
mov
sub
out
mov
lods
xor
test
push
rcl
insl
mov
ljmp
dec
cs
adc
pusha
out
xchg
xchg
xchg
daa
fcmovnb
and
shlb
fs
mov
and
test
sbb
cmc
push
sbb
cmp
sub
fdiv
movsb
mov
subl
stc
dec
mov
setnp
int
add
cmp
bound
sub
jae
fcmovu
or
cmc
xchg
nop
cmpl
xchg
sub
mov
sbb
mov
or
mov
mov
ljmp
hlt
inc
mov
ret
outsl
jo
iret
xchg
jle
mov
std
popf
push
mov
leave
pop
shrl
gs
mov
jno
push
subl
lods
out
outsl
arpl
and
sti
jl
loopne
pop
arpl
cmp
sbb
xchg
pop
fisubrs
mov
lea
push
pop
fmuls
loop
xor
add
aas
push
push
add
pop
insl
push
loop
fldl2t
sbb
mov
adc
add
jecxz
xor
ljmp
ss
mov
lods
adc
mov
push
lods
mov
jl
loop
aas
mov
jecxz
or
mov
das
add
test
outsb
pop
mov
cltd
jmp
roll
test
ja
push
test
clc
outsl
lcall
mov
fdivrl
test
push
iret
adc
mov
ret
pop
repnz
andb
push
lret
cltd
out
std
incb
ja
dec
repz
pop
dec
leave
ret
and
fildll
ss
dec
mov
jnp
test
or
nop
xchg
das
mov
pop
push
xchg
adc
push
cwtl
sub
cmp
xchg
push
sub
jmp
pop
sbb
movl
and
repz
bound
cmp
fwait
cld
push
inc
dec
pop
ret
sahf
mov
test
pop
or
xchg
call
ja
into
clc
jb
movsl
aad
lods
mov
lock
sub
pop
cmpsl
jl
inc
jge
add
jae
jae
mov
in
js
movsb
dec
mov
js
or
and
or
mov
dec
sarb
pusha
cmp
jmp
push
mov
cmpsl
lret
dec
jns
xchg
movsb
xchg
ljmp
fcomps
mov
cmpsb
mov
sbb
lods
jne
xchg
mov
adc
stos
fcoml
jo
sbb
sub
mov
xchg
lcall
push
out
cmp
call
jge
rcr
iret
imul
cmpsb
popa
movsl
inc
adc
push
ficoms
nop
xchg
or
std
xlat
je
push
push
dec
pushf
and
cltd
shl
fneni(8087
into
pop
push
lds
test
addr16
jno
push
sbb
adc
bound
std
inc
pushf
push
adc
repz
data16
cmp
sbb
adc
sub
adc
or
cltd
leave
test
out
in
jmp
or
pop
ljmp
faddl
adc
mov
jp
scas
inc
fwait
aaa
mov
mov
or
loop
xor
lea
lea
dec
jmp
cmpsb
jno
shll
pop
adc
cmpsb
xchg
cmp
cmpsb
adc
insl
push
fcmovbe
jbe
jno
pusha
sbb
leave
outsl
pop
scas
mov
mov
mov
loopne
sub
je
hlt
ficomps
scas
push
add
fbld
jo
hlt
adc
les
rcr
scas
ss
dec
jne
mov
adc
sub
mov
dec
add
sbb
testl
sub
cmp
pop
adc
adc
in
into
movsl
cmp
daa
xchg
sub
inc
pushf
sub
jae
cmc
sbb
scas
inc
jns
mov
stos
addr16
scas
and
shlb
cltd
fcoml
outsl
xor
xchg
and
jmp
dec
test
or
jle
dec
mov
pop
mov
or
xor
repnz
std
orb
sub
into
push
ss
pop
mov
mov
push
dec
inc
jmp
sbb
xor
pop
xchg
jbe
push
mov
cmp
insb
jmp
xchg
pop
lea
mov
mov
sbb
popa
pop
repnz
xchg
mov
loopne
push
jnp
shlb
sub
cltd
aas
in
push
dec
mov
icebp
imul
dec
jmp
dec
lock
sbb
fs
ja
mov
ljmp
inc
pop
hlt
push
mov
xor
mov
pop
pusha
loope
lea
stc
pop
sub
adc
pop
jno
cli
push
data16
popa
dec
inc
adc
sahf
and
mov
data16
jg
dec
into
push
inc
xchg
sub
push
pop
lretw
dec
add
xchg
mov
mov
scas
sub
or
inc
and
or
xchg
pop
sub
aad
sub
jae
ja
sarl
pop
jmp
push
cmp
jmp
aad
jmp
imul
fs
mov
push
xchg
mov
sbb
lret
lock
idivb
sub
mov
cmpsb
mov
daa
test
ds
inc
test
sub
xchg
jne
ss
mov
cltd
add
stos
mov
sub
ret
daa
xchg
mov
ja
cmp
flds
xor
sub
mov
cmpsl
test
and
mov
orb
out
cmpsb
into
inc
xor
lret
sbb
inc
push
out
rcrl
cmp
jge
jle
pop
push
fwait
hlt
pop
orl
addl
repz
cmp
ficomps
cmp
imul
cmp
dec
fcoms
mov
dec
or
fiaddl
push
xor
cwtl
lret
and
shrb
lods
pusha
jb
jb
repz
inc
cmp
ret
test
aad
arpl
jmp
push
or
adc
push
mov
push
gs
pop
fwait
sbb
arpl
repz
enter
or
mov
mov
loopne
imul
xchg
xor
hlt
shlb
add
fildl
gs
sbb
sbb
xorl
xor
negl
call
jmp
shl
push
loopne
mov
inc
xchg
mov
xor
pushf
fsqrt
xchg
xor
ret
lret
outsb
js
dec
imul
or
push
ds
pop
es
out
cmp
pop
in
pop
cld
dec
fmuls
outsb
call
leave
pop
flds
incb
fmull
add
lds
mov
mov
ss
jp
das
jns
pop
stc
push
mov
repz
push
pop
insl
dec
sub
xchg
inc
loope
repz
jo
fldt
aaa
cltd
xchg
pop
icebp
nop
jl
and
lret
gs
add
les
push
sub
pop
out
addr16
leave
das
rclb
dec
frstor
ret
inc
loope
push
xchg
movsl
lret
pop
std
jns
dec
or
in
mov
shll
outsl
or
lret
stos
dec
testb
xlat
pop
icebp
fmull
mov
int
pop
gs
sbb
push
test
adc
cwtl
shl
mov
ds
dec
inc
push
sub
aam
push
sti
sbb
hlt
pop
stos
xchg
lds
inc
dec
adc
call
xchg
jae
push
xchg
mov
imul
mov
cmpl
leave
jmp
or
push
or
scas
mov
sahf
aaa
mov
mov
jp
mov
adc
adcb
mov
add
faddl
xor
inc
mov
lcall
or
pop
shrl
in
jnp
dec
and
fdivrs
dec
mov
mov
arpl
in
lret
push
les
cmp
cwtl
mov
mov
pop
popa
xchg
cmp
in
fadds
popa
push
ds
xchg
push
addl
adc
fsubrl
repz
xchg
test
add
vdivss
sub
pusha
cmp
and
adc
inc
add
mov
out
mov
popf
shrl
mov
jnp
or
or
dec
lods
test
add
jns
mov
pushf
sbb
subb
fisubrl
in
push
ror
es
push
dec
mov
jle
inc
into
dec
loopne
lcall
lcall
add
lods
xchg
pop
hlt
lahf
loop
fs
mov
push
mov
aaa
inc
or
or
rep
sbb
call
pop
pop
mov
ljmp
jbe
push
dec
dec
xor
xchg
lret
cmp
inc
daa
arpl
arpl
mov
xchg
outsl
sub
sbb
push
jnp
or
xchg
sbb
arpl
jno
mov
lahf
mov
cmc
pushf
ljmp
ja
mov
je
pop
inc
sti
add
and
mov
sub
mov
cmp
dec
sub
jnp
sub
xor
or
je
outsl
mov
lods
xchg
fcoms
pop
daa
dec
mov
pop
movsb
in
xor
data16
adc
cmp
psubw
mov
mov
aaa
push
cmp
test
ret
mov
inc
cli
in
mov
gs
push
xor
sub
clc
jb
andl
fdivr
rcr
inc
adc
int
cmc
shl
or
inc
mov
lods
ss
jns
xor
mov
cli
mov
out
gs
lret
push
xor
mov
mov
add
inc
sub
sub
rcrb
ret
mov
hlt
mov
in
sbb
dec
xchg
lret
lahf
mov
push
xor
cmpsb
push
imul
push
inc
pop
mov
mov
or
aad
jnp
clc
into
das
pop
sbb
cltd
xchg
mov
mov
ss
scas
sbb
daa
sbb
adc
cmp
adc
popa
shrl
fistpll
jg
fildll
popf
lahf
out
push
fstps
mov
bound
stc
aas
and
mov
enter
inc
jmp
out
jmp
lds
enter
leave
jne
sbb
fs
jp
pop
and
mov
loopne
mov
scas
push
add
mov
push
lahf
ret
jmp
movaps
fs
popa
dec
lcall
xchg
int3
dec
jae
int3
xchg
mov
das
ss
or
jp
rorl
dec
addr16
int3
js
pop
lcall
pop
xor
dec
ret
pop
mov
fcomi
jne
popa
in
mov
cwtl
dec
aam
inc
adc
test
push
iret
clc
adc
insb
or
add
test
aas
mov
inc
repnz
hlt
xchg
nop
repz
adc
rolb
pop
insl
std
pcmpgtd
push
add
or
cld
pop
push
clc
inc
aas
xchg
fmul
push
sbb
cs
movsl
cmpsl
push
push
in
in
mov
or
nop
cld
push
mov
xor
sbb
pop
test
cmp
leave
das
xchg
mov
pushf
adc
movsl
push
sbb
inc
cld
dec
cmp
sbb
sub
out
aas
xor
dec
lods
clc
add
push
push
clc
jb
inc
icebp
push
xchg
orl
and
inc
xchg
push
ret
shrl
cwtl
pop
pop
arpl
mov
jno
clc
sub
cmp
mov
pop
je
imulb
mov
push
ss
popf
test
mov
jnp
pop
cmc
sahf
sbbl
das
push
std
push
push
int
fwait
fs
sbb
jbe
xchg
mov
lds
loop
jns
add
ss
add
fsubp
mov
xor
sub
xor
push
fnstcw
cs
fimull
clc
sbb
jl
std
loop
inc
popw
fisubrl
or
in
mov
sbb
or
sbb
sbb
mov
cmp
ror
mov
push
jmp
addb
pop
sbb
mov
cmp
adc
mov
mov
gs
dec
bound
pop
rcl
imul
or
std
pop
mov
cmpsb
mov
jnp
out
add
gs
jmp
in
stc
pushf
daa
lock
cld
and
hlt
push
insb
in
jg
lret
add
push
insl
test
mov
xor
negb
mov
popf
jns
push
xor
and
imul
push
lea
cmc
cltd
push
xchg
and
stc
push
mov
inc
std
xor
fadd
in
and
jmp
push
es
inc
movsb
cmp
shr
dec
inc
ss
aad
mov
das
test
pop
cli
pop
push
push
cmp
xchg
sbb
enter
out
in
aas
jmp
sbb
sub
dec
mov
aas
loop
loop
dec
lods
nop
sbb
fs
inc
mov
into
adc
inc
mov
mov
jmp
sub
aas
sahf
fstpl
inc
xor
stos
outsl
ret
inc
fsubrs
shlb
lea
lds
dec
jae
push
jo
cwtl
in
push
outsl
out
leave
out
cwtl
clc
icebp
rcl
sub
sahf
addr16
xor
mov
push
jbe
adc
loope
push
pop
and
out
pop
ss
sub
loop
paddd
jo
push
adc
and
push
ss
enter
and
in
fidivl
and
aas
rcrb
and
pop
lods
push
xor
mov
fstps
js
sbb
loope
pop
push
mov
outsl
inc
xor
pop
shll
dec
loopne
pop
jp
addr16
xor
dec
jne
inc
nop
pop
cmc
lcall
cmp
mov
pop
fildl
fs
out
jg
gs
push
popf
fdivrl
inc
inc
jbe
loope
jecxz
mov
pusha
in
in
fwait
xchg
add
cmp
pop
ja
mov
subb
sbb
adc
and
lahf
nop
out
push
cmp
jmp
sub
pop
jle
insl
jecxz
mov
test
test
adc
nop
cmp
adc
push
mov
add
ds
fadd
loope
cmp
imul
aam
sbb
sbb
cmp
push
jg
dec
popf
or
insb
dec
fcmovnbe
mov
enter
xchg
inc
ret
fwait
repnz
mov
pcmpgtd
xchg
test
and
aaa
xchg
jno
xlat
clc
mov
mov
lret
fsubl
rcll
pushf
test
mov
test
mov
dec
xor
cmp
js
add
jmp
pop
push
jmp
mov
xchg
mov
test
mov
imul
pushl
push
or
jp
cmpsb
iret
adc
into
out
popf
push
test
fs
or
sub
out
imul
and
jno
int3
mov
cmp
stos
push
test
push
xchg
in
out
mov
popf
push
jne
in
fldenv
push
outsl
outsl
add
in
clc
jge
arpl
mov
pop
push
mov
xchg
std
push
sbb
sti
jae
fld
test
ret
and
iret
fidivl
mov
scas
fsts
hlt
and
xorb
pop
cmc
stos
stc
inc
mov
xor
mov
fsub
shl
jae
mov
arpl
imul
stos
cld
aam
dec
mov
out
ljmp
es
mov
jge
or
push
stos
push
inc
movsb
pop
mov
in
aaa
popl
cli
mov
cli
lods
mov
or
test
int3
in
push
loope
push
repz
or
mov
push
sub
sti
dec
sti
mov
inc
in
shll
sub
sub
int
ljmp
add
lcall
push
mov
fnsave
ficompl
scas
imul
add
pop
stc
subl
ja
ret
insl
mov
aam
xor
sbb
sub
pop
pop
subl
movsb
xlat
std
imul
fstl
jmp
inc
ja
dec
out
cli
data16
inc
pop
repz
lret
inc
rorb
orl
xchg
jno
cmp
outsb
je
push
add
and
adc
pop
xor
xor
mov
xor
mov
mov
pushf
out
and
add
jo
cld
cmp
cmp
jo
mov
out
stc
sbb
add
nop
push
push
and
adc
repz
pop
xorb
pop
arpl
xor
stos
add
out
test
lret
sub
data16
jecxz
add
pop
pusha
fst
shrb
pop
sti
mov
xchg
aad
cmp
add
sbb
or
fisubrs
pop
add
popa
jle
mov
xor
enter
push
xchg
scas
jbe
mov
outsb
mov
jecxz
mov
push
mov
shr
pop
test
std
hlt
pop
sbb
lock
cmp
in
push
jo
jbe
hlt
sbb
lcall
xor
ret
jb
push
push
push
mov
adc
outsl
scas
scas
xchg
imul
js
xlat
lods
push
pushf
pop
iret
jmp
xchg
cld
jno
cmpsb
sbbb
inc
mov
mov
test
mov
mov
mov
dec
add
add
add
int
or
jne
xchg
jo
rcll
pop
xchg
pop
dec
fwait
adc
fidivl
xchg
scas
inc
sarl
or
pop
mov
shlb
inc
je
mov
xchg
in
inc
sahf
or
pop
xor
mov
in
xor
pop
addr16
mov
push
ret
stos
in
pop
aas
gs
out
in
inc
loope
jl
mov
out
cmpsl
mov
cmp
scas
pop
lock
outsl
shll
aaa
loop
pop
mov
into
out
jl
jb
scas
mov
adcl
shlb
mov
negb
fstps
nop
out
adc
and
repnz
imul
push
leave
lock
dec
les
mov
mov
xchg
add
jae
mov
xchg
push
add
lret
and
push
fnstsw
daa
call
jecxz
cmp
mov
dec
ret
divl
movsl
imul
addr16
push
dec
shl
pushf
jno
insl
adc
lret
push
adc
dec
leave
mov
jl
pop
jbe
js
shl
and
rclb
js
inc
cmp
adc
push
call
mov
in
push
pop
mov
jmp
xchg
je
pop
lods
fdiv
dec
pop
mov
ja
shlb
add
xchg
addr16
into
add
inc
lods
mov
loope
fisttpll
xlat
movsl
jno
mov
push
int
decb
jp
fcmovnbe
and
inc
push
movsb
dec
shll
push
pop
xchg
mov
sub
scas
xor
pop
cmpsb
and
lcall
in
les
out
adc
xor
loopne
fsubrl
outsl
add
add
cmp
fidivrl
fwait
or
jmp
push
fildll
test
aam
or
inc
cmp
sarl
dec
int
daa
mov
adc
pop
cli
fwait
sbb
add
sub
mov
sub
inc
xchg
and
cmp
xchg
clc
dec
or
mov
mov
sbb
xor
ficoml
lods
mov
test
lods
popa
cli
shlb
fld
mov
and
inc
inc
dec
fs
test
mov
clc
movsb
adc
in
les
lahf
mov
add
shlb
pop
movsl
lea
inc
insb
pop
out
repz
or
jns
adc
call
push
out
pop
lds
jp
cltd
mov
xchg
adc
jp
dec
mov
xchg
loopne,pn
dec
outsb
cmp
movsb
sub
jo
cmp
mov
loopne
ljmp
cltd
int3
cltd
cmp
mov
cmpsl
sti
jl
ret
frstor
pop
mulb
xchg
outsl
xor
jge
xchg
stc
in
fwait
test
mov
pop
mov
or
push
inc
and
sub
add
inc
in
pop
sub
jle
mov
pop
arpl
mov
jb
test
jmp
repnz
add
loopne
xchg
and
mov
mov
or
xor
loop
bound
dec
nopl
in
and
out
push
in
shll
adc
lahf
popf
jbe
mov
repnz
fs
sub
jl
mov
rolb
loopne
aam
lods
xchg
cs
clc
adc
ret
jns
xchg
mov
cli
pop
into
pushf
rcll
clc
mov
ljmp
push
fwait
aad
and
or
clc
jbe
or
inc
xor
fstpt
jge
lret
int
pop
cmp
dec
movsl
jb
int
fwait
sbb
mov
cmp
cld
sarb
mov
stc
push
aad
push
rolb
stos
shrb
cmpsb
mov
lcall
leave
adc
test
mov
jle
sbb
mov
and
push
into
sbb
inc
xchg
fs
mov
roll
or
xchg
mov
push
dec
cmp
loope
in
jecxz
or
scas
out
push
popa
insb
xchg
and
rclb
jbe
adc
jbe
mov
lret
jl
jbe
push
imul
or
lcall
scas
sub
stc
inc
aaa
dec
add
fnstenv
mov
cmp
push
out
stos
sub
fsubr
cmpl
or
pop
or
jge
mov
lahf
mov
fsubrl
or
sbb
sub
add
jae
mov
push
gs
nop
mov
stos
mov
xor
jo
aam
pop
cli
movsl
repnz
mov
mov
mov
enter
test
pop
jo
pop
ja
lods
fcmovb
dec
movsb
xlat
inc
or
jg
adc
dec
das
ret
xchg
mov
adc
mov
popf
adc
jnp
push
xchg
xlat
in
fisttps
leave
pop
sahf
in
mov
xchg
loop
jl
insl
mov
sbbb
jno
lods
mov
sub
mov
fiadds
or
push
lods
fdiv
test
ds
sarb
rcrb
mov
daa
push
sub
inc
push
pushf
mov
in
rcrb
cmp
cltd
cmp
int3
mov
push
mov
rol
jnp
or
fnstenv
or
dec
and
inc
jae
ret
bound
lods
cmpb
and
pop
push
inc
add
jg
and
into
xor
daa
dec
out
and
aam
lods
mov
sbb
push
bound
lock
jle
shll
xor
int
cmpsl
pushf
repz
or
ret
cmpsb
mov
sbb
mov
outsl
xchg
enter
js
fmulp
push
clc
filds
mov
lcall
std
xor
fisubl
test
mov
cs
cmpsl
in
dec
pop
xor
pop
loop
fs
scas
push
jae
jae
cld
jle
int3
xchg
insl
cmp
sbb
lahf
popa
push
sbb
and
inc
dec
push
cmp
lods
adc
cmp
testl
mov
ret
gs
jbe
jmp
bound
jne
cmp
sub
data16
xor
insl
subl
pop
arpl
fiaddl
adc
sbb
sub
mov
mov
pop
and
insb
leave
int
jge
loopne
cmp
dec
push
mov
shl
sub
xchg
mov
push
monitor
popa
mov
add
mov
mov
stos
xchg
xor
cmp
push
dec
jbe
arpl
push
xchg
stc
imulb
add
lock
adc
lods
mov
bound
scas
subl
jbe
or
rcrb
cs
shll
insb
xchg
call
je
in
adc
sub
fnstsw
rcrl
popf
lcall
cmp
bound
cltd
imul
cmpsb
dec
add
or
pop
call
pop
data16
pop
push
mov
push
popl
mov
pusha
repz
jmp
xor
jae
push
push
mov
dec
repz
xchg
add
scas
inc
add
or
or
sbb
std
mov
test
js
repz
ret
xchg
mov
insb
mov
mov
out
inc
mov
sub
sbb
pop
mulb
sahf
inc
mov
scas
mov
rorb
shrl
cltd
jo
mov
ds
idivl
or
mov
or
push
fisubl
cmp
rcrb
xchg
inc
push
xchg
push
mov
cli
sub
out
sub
and
sub
or
popf
sub
pop
jno
xor
add
mov
ja
xchg
pushw
js
jl
mov
test
xchg
adc
outsb
cli
jo
pop
enter
mov
mov
jle
fidivs
nop
std
jl,pt
xchg
cmpsb
in
rcll
iret
outsb
stc
mov
loop
bound
xchg
filds
dec
jbe
dec
and
out
inc
in
jns
add
push
jns
aas
adc
xchg
ja
mov
lahf
adc
cmp
fistpll
mov
shlb
xchg
fstpt
inc
add
mov
sti
mov
bound
or
ljmp
jno
mov
mov
mov
out
mov
cmpsb
sub
mov
inc
add
push
test
data16
in
xchg
and
mov
push
test
mov
cs
loopne
cli
adc
pop
movsl
cmc
fnstsw
or
xor
fldcw
loop
insb
mov
add
rorb
xchg
xor
dec
stc
xchg
cmp
pavgb
loope
jge
ljmp
stos
and
aad
and
mov
xchg
jecxz
inc
daa
enter
jp
ss
stos
and
std
jo
in
adc
lds
jbe
inc
call
mov
xchg
bound
repnz
sbb
push
or
xor
aas
add
sbb
mov
adc
lret
das
or
stos
push
dec
or
cmp
hlt
xchg
xchg
and
sbb
pop
adc
sub
sbb
mov
lea
mulb
fnstenv
out
adc
cmp
test
sahf
sbb
pop
dec
enter
loope
sub
add
push
jo
insl
test
or
mov
pop
es
aas
add
mov
mov
fdivrp
xor
mov
or
pop
jl
dec
adc
mov
lret
cmp
clc
gs
nop
pop
aad
testl
mov
or
scas
and
inc
je
dec
xchg
jl
sbb
push
mov
dec
cmp
or
sahf
xlat
jg
push
pop
push
fdivr
jo
mov
pop
mov
xchg
aaa
or
lock
dec
das
adc
inc
sbb
popf
fiadds
stos
aam
scas
mov
in
mov
add
lds
pop
dec
xchg
jge
cltd
push
pop
push
icebp
out
imul
pusha
daa
out
mov
aad
sub
xor
testb
les
jle
pusha
pop
or
rcrb
sub
xor
dec
or
rorb
in
and
je
gs
sarl
jne
adc
sub
or
adc
pop
xchg
inc
add
sbb
mov
inc
clc
test
push
gs
movsl
imul
mov
xchg
inc
push
cmc
and
jb
and
leave
pop
gs
rcr
repz
jle
mov
xor
inc
fsubl
fwait
addb
mov
or
inc
xlat
daa
sub
cmc
jns
mov
adc
rcr
jb
out
lcall
inc
mov
stos
test
lret
sti
out
nop
sbb
sbb
mov
ret
hlt
ficomps
movhps
push
bound
pop
fwait
adcl
loopne
rcrb
clc
xchg
xor
push
es
xchg
stos
inc
fcmovnu
mov
mov
cld
stc
sub
dec
jg
sbbb
mov
ja
fdivp
mov
sub
inc
shrb
push
scas
inc
test
lret
in
adc
sub
xor
jno
or
ret
lahf
das
shl
outsl
push
push
repnz
in
and
xchg
sub
outsb
add
mov
fidivrs
ds
ds
cwtl
mov
fsubrs
xlat
pop
mov
in
lea
sub
stos
imul
mov
fstl
push
and
add
cmpsl
orb
aad
inc
pop
sbb
xchg
leave
pusha
pop
outsl
pop
sahf
mov
rcrl
cli
jns
add
sbb
arpl
pop
addr16
je
ret
cld
pop
mov
sbb
mov
pop
push
sbb
movsb
mov
xchg
lds
sbb
and
pop
pop
mov
nop
movsb
movsb
add
incb
daa
and
pop
dec
inc
fnstenv
lcall
sub
in
inc
fsts
ss
jo
pop
sahf
movsl
xchg
add
add
sbb
pop
sbbb
jge
repnz
xchg
mov
jbe
in
ret
and
mov
bound
cmpsl
add
mov
fsubrp
orl
sub
dec
cwtl
je
cmp
loop
add
cmp
pop
jno
mov
pushf
test
inc
fsubp
hlt
and
xor
mov
sbb
ret
lods
pusha
not
in
int3
sbb
aas
leave
pusha
imul
int3
mov
loopne
xlat
aam
orb
mov
mov
mov
jle
cltd
xor
jne
adc
nop
daa
adc
ss
jo
mov
mov
std
xchg
lret
xlat
push
jmp
in
pop
repz
xor
lock
jo
mov
sbb
add
inc
fcoml
ss
outsl
jle
subb
mov
out
adc
jne
outsb
outsl
int3
arpl
fcmovbe
push
aas
and
in
test
mov
add
add
push
inc
and
aas
fwait
jg
xlat
test
mov
out
pop
lock
push
out
adc
inc
fwait
insl
js
xchg
mov
icebp
mov
pop
outsb
add
cmp
pop
scas
fwait
pop
jo
xchg
push
rolb
mov
inc
rep
inc
sub
dec
aad
js
fsubrs
cltd
test
ret
pop
sub
inc
in
xor
mov
out
test
mov
test
pusha
testl
das
push
call
fdivrs
mov
stc
mov
and
daa
mov
jg
mov
dec
lahf
jne
enter
xchg
ljmp
out
xor
pop
dec
lea
or
mov
inc
fstpl
in
test
mov
mov
fcmovne
gs
lods
inc
loopne
jne
popa
add
gs
fdivl
inc
loope
outsb
add
cmp
pop
out
test
stos
cmc
mov
adc
mov
outsl
fnsave
mov
mov
sahf
xor
ds
jne
cs
xor
push
js
jle
loop
jne
ret
int
jecxz
xchg
sbb
cmp
mov
mov
loop
adc
aas
loopne
dec
sbb
or
cmp
sub
shrb
mov
mov
ss
aam
dec
packsswb
pushf
xor
imul
mov
fdiv
mov
push
mov
nop
and
mov
in
jg
dec
test
jbe
ss
mov
js
adc
dec
mov
rcrl
sbbl
jecxz
ss
add
cltd
mov
cmc
mov
stos
or
jb
mov
cs
jbe
into
dec
mov
js
leave
pusha
sub
ss
out
inc
and
or
out
ss
lahf
ljmp
jmp
mov
lret
xor
mov
jmp
jo
lea
or
adc
jne
push
ss
mov
adc
jne
add
cli
xchg
pop
jmp
cmc
mov
fistl
stos
or
adc
sbb
lods
cmp
push
outsl
int
add
nop
scas
inc
leave
sbb
xchg
sub
outsb
mov
fwait
inc
lret
mov
rclb
testl
mov
daa
jg
adc
fscale
inc
fsubrl
sti
mov
push
jl
scas
inc
jns
mov
lcall
adc
scas
inc
pop
xor
jnp
inc
insl
add
lahf
ss
fidivrl
xor
xor
jp
dec
mov
orl
pop
scas
or
out
test
cs
pop
push
push
mov
jge
fisubrs
lret
add
stc
and
jg
pop
inc
outsb
add
mov
fwait
xor
rol
pop
or
mov
and
out
pusha
inc
jecxz
jns
testl
add
sbb
mov
jle
inc
xlat
test
popa
stc
into
lret
add
test
sbb
jnp
popa
cmp
inc
data16
jno
fmulp
pop
or
decl
and
jns
je
cmpsl
mov
stc
mov
fnsave
iret
pop
cmp
cltd
push
test
mov
xlat
xor
or
addr16
and
pop
adc
xchg
xor
enter
mov
lock
dec
push
and
les
push
hlt
lock
andb
adc
outsb
mov
xchg
bound
popf
mov
andb
add
mov
mov
sets
mull
sub
push
cmpsl
dec
inc
xchg
ss
xor
sahf
xchg
shlb
pusha
push
out
in
xchg
sbb
xchg
xor
insb
push
shll
push
idivb
andb
xor
lds
mov
pop
mov
loopne
scas
adc
mov
jg
cmp
aam
push
repnz
push
fsts
cmpsl
push
xlat
loop
in
xchg
mov
or
add
or
inc
mov
sub
xchg
loop
bound
push
add
mov
int3
ret
dec
jns
mov
pop
ficoms
mov
adc
sub
call
xor
shlb
push
adc
cwtl
sbb
and
and
sub
fnstsw
xor
add
mov
adc
push
xchg
das
in
lods
shlb
lcall
xor
or
xchg
ds
shll
popf
out
dec
out
and
jns
lods
push
xchg
and
push
outsl
xchg
add
sbb
stc
jnp
ja
daa
pushf
pop
out
mov
shll
push
lcall
push
stos
faddl
ds
sbb
lret
xchg
push
pop
hlt
out
mov
or
aad
xchg
pop
mov
test
inc
loop
imull
add
insl
insb
push
cwtl
and
add
rcl
inc
jmp
sub
subb
jl
imul
push
stos
jmp
cmp
sbb
inc
jmp
push
xchg
subl
ja
test
shrl
jne
daa
xor
jg
push
je
ja
out
cmpsl
xorl
add
dec
add
lods
dec
jae
pop
popf
jne
mov
lock
sub
lock
je
or
inc
jnp
test
and
call
adc
cmp
mov
das
xchg
dec
scas
dec
xchg
pop
adc
sub
pop
mov
jg
lret
push
into
loop
js
mull
push
push
ljmp
sbbl
je
icebp
or
das
cmp
adc
shlb
add
cmc
dec
loopne
xor
outsb
add
mov
fcmovne
gs
das
cld
xchg
popa
inc
fdivl
adcb
mov
testb
call
push
mov
cmp
adc
int3
cli
xchg
loopne
xor
push
xor
fs
push
movsl
test
jno
xchg
sub
fdivr
dec
dec
sub
addr16
jge
int
shr
repnz
push
jmp
inc
and
data16
xchg
je
cmp
nop
daa
stc
or
jae
sbb
dec
pop
jp
nop
insl
sub
das
in
lret
cmp
ljmp
arpl
lahf
xchg
mov
es
dec
adc
inc
mov
mov
and
push
movl
cmp
mov
pushl
push
scas
and
jp
test
jns
sub
jg
in
loope
or
cmp
ret
pop
nop
daa
sub
imul
mov
mov
shl
es
aaa
mov
jl
jp
arpl
mov
and
sbb
ds
sti
cmc
jl
negl
mov
iret
fs
test
xorl
test
cmpsb
fdivl
push
adc
pop
shll
jb
mov
cli
cld
sti
repz
mov
pop
and
push
jg
pop
mov
ret
add
es
pop
testl
ss
jbe
dec
push
mov
mov
ss
clc
sbb
lock
ss
cmpsl
popa
aaa
in
dec
ljmp
incl
mov
mov
out
cmpsb
sahf
jo
sbb
mov
sbb
lahf
push
cmc
loop
lcall
inc
mov
bound
pop
jmp
or
or
out
jno
fisubl
add
mov
xchg
and
test
dec
xor
imul
jne
xchg
repnz
jnp
insl
adc
aas
or
out
xor
xor
pop
popf
push
fidivl
fbstp
cmpsb
add
shrb
jbe
jmp
mov
jge
push
out
negl
adc
sub
jl
cwtl
das
scas
popf
sbbl
icebp
das
jnp
les
aas
lret
pop
movsl
fs
push
into
sbb
xchg
mov
xchg
out
add
movsb
and
lahf
pusha
test
mov
mov
daa
pop
lock
xchg
sub
sub
mov
iret
pushf
jns
into
lock
loop,pt
adc
out
lds
mov
pop
xor
aas
mov
push
jmp
scas
popf
xor
arpl
pop
call
and
fwait
and
mov
ret
sub
in
mov
jo
lahf
mov
xor
inc
les
mov
pop
out
cmp
inc
scas
xchg
xchg
fildl
insl
mov
xor
fcomps
sti
xchg
add
mov
jae
xchg
push
push
outsl
ss
sarl
les
or
mov
shufps
sbbl
cld
ss
mov
notl
sub
imul
lock
rcll
test
imul
enter
out
jno
call
inc
les
clc
arpl
sub
test
dec
mov
rcl
cmc
in
jg
sbb
mov
lcall
and
out
jne
mov
aas
lds
negl
out
mov
jae
fsubl
sbb
mov
scas
inc
mov
scas
inc
sbbb
adc
mov
test
push
movsl
xor
out
mov
insb
into
add
mov
inc
test
add
pop
xchg
fnstenv
push
ret
daa
cmp
cwtl
sbb
repz
pusha
cmp
xchg
dec
xchg
sub
add
mov
pop
ljmp
jb
mov
inc
test
jge
push
mov
jae
sbb
daa
mov
xchg
cmp
lock
or
cmp
repnz
bound
xchg
loope
push
rcll
sbbb
hlt
xor
push
xchg
push
or
xor
jmp
fstps
repz
dec
push
mov
push
icebp
mov
rclb
pushf
xor
push
in
js
pop
scas
addr16
imul
push
cli
inc
dec
loope
sbb
outsl
push
scas
xchg
sub
dec
pop
icebp
mov
sub
adc
push
push
push
ljmp
addr16
xor
aad
push
jp
sbb
adc
inc
pop
or
pop
xchg
pop
push
inc
cmp
xor
icebp
mov
push
call
pop
addr16
pop
inc
sbb
in
push
insb
add
push
in
cld
push
out
test
pop
jge
dec
mov
lea
push
repz
pop
xchg
sub
sub
xchg
push
out
xchg
scas
inc
insl
push
mov
adc
and
pop
and
lahf
xchg
inc
pop
hlt
jnp
sub
and
scas
inc
pop
inc
mov
enter
add
sub
rcrl
js
jge
add
repz
xor
aaa
and
adcl
inc
fidivs
dec
pop
cmp
jl
pop
jg
dec
jmp
push
sub
js
int3
cltd
cmpb
inc
adc
pop
xchg
jge
cmpsl
adc
push
xor
insl
push
lret
cld
xchg
mov
fdivp
mov
push
daa
mov
loop
sbb
jne
ja
and
fnstenv
sub
pushf
mov
wrmsr
mov
fs
push
adc
inc
aad
push
stc
arpl
shl
xchg
cs
mov
sti
ret
or
fwait
xor
mov
mov
int3
rcrl
xor
xor
jmp
fstl
inc
ret
stc
push
cmp
lds
pop
insl
ficoml
jne
xchg
ret
pop
shll
movsb
cmp
jns
daa
mov
xchg
cmp
push
call
dec
xchg
jecxz
les
pusha
fnstenv
mov
xchg
xchg
cs
cmc
mov
cmpsl
nop
daa
sbb
and
cld
int3
clc
mov
fbld
hlt
repnz
sub
stos
shrl
add
loope
out
ja
or
cmpsb
cmp
jecxz
inc
fisubrl
shr
testb
inc
lods
gs
fbld
push
ret
and
cmpsb
gs
jecxz
testl
mov
mov
push
lods
lcall
aas
sahf
xor
pop
rcl
push
fwait
push
out
xlat
out
fcmovbe
lret
lods
inc
add
fs
ljmp
pop
jge
add
ud1
in
xor
fsubr
ret
xchg
mov
adc
enter
fucompp
adcb
lds
mov
in
mov
hlt
in
add
fldenv
lods
inc
xor
cwtl
movsb
jns
out
movsb
lds
pop
das
fnstenv
lret
jb
movsl
in
jno
fdivrp
lds
out
jb
xor
scas
xchg
jp
add
daa
and
pop
mov
add
sarb
pop
insl
push
arpl
sbbb
movsb
cmp
nop
daa
idivb
sbb
mov
hlt
mov
or
dec
cmp
leave
lods
push
add
mov
enter
inc
fstps
inc
jo
jbe
jnp
in
pop
sahf
inc
push
out
test
movsl
cmp
lcall
imulb
gs
xchg
int
loop
jne
xor
inc
inc
push
pop
lock
cwtl
push
and
jbe
imul
jle
std
sar
add
cmp
sbb
sahf
xor
lahf
inc
xchg
ss
sbb
enter
mov
push
fistpl
jns
or
mov
fimuls
mov
mov
gs
xchg
push
mov
stos
mov
out
dec
test
stc
ss
int
dec
or
gs
push
mov
xlat
xor
hlt
jl
jnp
xchg
mov
cmp
pop
push
jmp
and
sbb
es
inc
dec
inc
adc
pop
pop
sti
xchg
dec
mov
cmc
mov
push
ljmp
or
test
cli
popa
cmpsb
dec
in
add
push
lods
test
lret
es
daa
fisubs
addl
gs
jecxz
push
movsl
loopne
imul
mov
pop
jp
lea
sbb
insl
mov
es
dec
and
xchg
adc
popf
xor
mov
push
test
xchg
fiadds
and
sbb
das
aas
iret
data16
imul
ret
lahf
pop
scas
mov
pop
mov
push
sbb
pop
aaa
or
mov
aad
std
daa
pushf
mov
push
mov
xchg
mov
ret
cmp
mov
hlt
mov
push
dec
in
out
jb
in
cmp
cli
aad
in
pushf
cli
xchg
in
mov
jg
fdivl
mov
push
movsl
ja
and
xor
adc
xchg
xlat
and
enter
mov
repz
push
or
out
inc
push
call
xor
pop
adc
ss
cmpsl
xchg
adc
mov
fldt
int
adc
fists
sbbb
add
jb
add
push
mov
sbb
daa
sti
xchg
cltd
call
outsl
sub
sbbb
dec
in
test
cmp
cmpsl
pushaw
adc
push
add
repnz
sbb
pop
idivl
mov
movsb
stos
dec
loop
inc
adc
scas
sub
jo
iret
ss
hlt
out
xchg
loop
lret
sarl
scas
inc
out
jg
movb
enter
jl
cltd
leave
pusha
or
jae,pt
test
sahf
adc
popa
clc
xor
nop
daa
adc
sbb
shl
pop
scas
push
sbb
jno
push
pop
scas
sti
adc
jo
decb
daa
dec
scas
test
imul
xor
ret
adc
addb
ja
or
sub
daa
fwait
call
out
inc
add
pop
pop
lock
cld
mov
mov
pop
mov
add
fisubrs
in
mov
repz
sub
das
loopne
sub
jnp
int3
xor
fstps
bound
add
fdivs
sbb
jle
add
mov
xor
xchg
stc
nop
ret
test
rcr
in
scas
adc
aaa
xor
movq
xchg
sub
or
das
es
inc
shrb
subb
int3
aad
bound
out
push
movsl
pop
sub
sbbb
ret
jno
pop
sahf
lods
xchg
dec
loope
into
and
call
xchg
movsb
mov
neg
ret
sbb
ja
insb
mov
xchg
mov
aad
jp
das
adc
add
or
insb
push
add
lcall
in
stos
mov
out
xor
rolb
lret
rclb
mov
out
fnstcw
popa
mov
pop
icebp
mov
mov
fnstcw
lds
lret
pop
inc
push
aad
mov
pusha
in
stos
ds
inc
mov
jg
xor
in
cld
mov
lcall
adc
and
es
cltd
hlt
inc
inc
stc
ja
out
inc
cwtl
adcb
popa
add
xchg
jmp
xor
in
mov
fdivs
xchg
fidivl
pop
pop
testb
jge
fnsave
push
lods
push
mov
mov
fcoml
or
jo,pn
pusha
clc
cmc
mov
orb
jl
lods
inc
pop
sahf
xor
iret
sub
popa
pop
lock
out
jl
jg
inc
insl
add
iret
push
adc
jns
test
imul
out
xchg
and
inc
fcoml
inc
movsl
icebp
loopne
lret
xchg
or
cmp
mov
repz
inc
stc
stos
sarb
push
int3
in
aas
jl
imul
or
out
inc
pop
push
stos
push
fldenv
fisttpl
pop
mov
pop
cmp
push
pushf
xchg
pop
ss
xchg
push
push
or
data16
aaa
add
fiaddl
adc
cmp
fcmovu
pop
push
sbbb
inc
js
inc
jecxz
pop
call
out
pop
xchg
fnstcw
cmc
cmp
inc
cmp
mov
outsb
sub
xchg
movsl
das
jbe
in
out
mov
std
jmp
inc
lcall
aam
mov
shrl
test
nop
pusha
in
cld
icebp
outsb
mov
aas
pop
pushf
hlt
out
adc
jmp
imul
inc
jle
pop
xchg
mov
xchg
icebp
fldcw
or
push
hlt
fdivr
cltd
and
sbb
push
ljmp
rcrl
xor
mov
jne
cmp
jp
mov
repz
mov
jecxz
aaa
lcall
cwtl
int
out
in
mov
call
cmp
xchg
jae
jl
out
mov
xchg
ret
mov
lds
leave
aam
mov
insb
jge
mov
jb,pt
xorb
scas
mov
jo
xor
mov
mov
xchg
daa
and
cmpsl
adc
add
shrb
popa
cld
dec
xchg
adc
jo
xor
cmp
lret
xor
jl
mov
pop
testb
ds
mov
icebp
addr16
jp
in
leave
xchg
push
repz
rcrb
or
filds
fisubrl
push
and
int3
bound
fidivrs
jns
sub
xor
outsl
mov
mov
cmp
inc
addr16
or
mov
xchg
xor
mov
xlat
mov
pop
jnp
dec
adc
hlt
pop
in
dec
bsf
inc
or
fsubrs
nop
pop
inc
pop
int
mov
int
or
andb
es
roll
mov
mov
clc
mov
and
push
aas
fisubrs
stc
insb
lock
push
outsb
and
pop
sub
push
adc
les
sub
and
shrb
imul
pop
xchg
idivl
lahf
pop
mov
mov
loop
mov
incl
xchg
xor
cmpsl
fwait
sbb
sbb
inc
push
add
bound
stos
adc
inc
push
stc
imul
stos
xor
negb
pusha
mov
xchg
mov
repz
sub
scas
lret
std
mov
cmp
mov
leave
pop
xor
and
ret
aaa
cmp
jmp
test
rclb
das
and
rolb
and
dec
in
mov
mov
ret
sti
insb
jecxz
ljmp
outsb
hlt
sti
sub
or
and
mov
les
cwtl
mov
cmp
clc
scas
add
adc
dec
sbb
inc
adc
les
out
icebp
sub
xchg
sbb
pushf
aad
mov
in
stos
pop
add
add
mov
or
stc
fsubs
push
pop
mov
dec
xchg
pusha
lods
gs
pop
inc
mov
scas
and
dec
add
pop
lahf
jle
aam
mov
inc
pop
int3
add
mov
mov
jg
mov
push
lds
jecxz
in
sbb
popl
or
xchg
pop
mov
std
je
xchg
or
popl
in
insl
add
lods
es
mov
cmp
mov
add
mov
jle
daa
or
cmc
mov
cmp
jne
enter
adc
arpl
repz
xor
mov
call
cmpsl
add
mov
xchg
mov
mov
addr16
fists
jne
movsl
fists
cmpsl
mov
mov
sarb
xchg
xlat
adcl
js
mov
ds
lds
ds
sahf
jecxz
pop
inc
stos
cmp
push
push
enter
mov
ljmp
mov
movsl
or
mov
inc
dec
cmp
test
or
outsl
add
jle
sbb
insb
in
jecxz
je
in
cli
js
add
push
lret
adc
dec
cmc
repnz
xchg
and
mov
out
push
jbe
adc
pop
cld
push
dec
out
int
mov
mov
cmp
arpl
push
clc
mov
xchg
jg
mov
mov
ja
lret
and
aas
inc
adc
xchg
add
xor
das
scas
and
dec
xchg
mov
out
inc
aas
in
cmp
mov
sub
xchg
mov
pusha
add
adc
xchg
jb
subb
fmull
pop
repz
lret
aas
mov
int3
push
ljmp
lahf
mov
mov
out
imul
pop
divb
pop
pop
test
dec
push
sbb
jne
ja
mov
sub
push
sbb
xchg
insb
arpl
test
es
xor
mov
int3
imul
test
aaa
icebp
mov
cs
xor
negl
or
jo
stos
or
test
lea
shrl
pop
xor
mov
std
call
outsl
mov
sub
add
out
jo
and
imul
clc
fsts
mov
pop
mov
cmp
icebp
inc
sbbb
in
or
jmp
outsl
cmpsl
cs
enter
mov
mov
bound
push
sbb
mov
pop
or
dec
cmc
jg
add
push
jmp
lods
pop
ds
insb
adc
out
repz
ljmp
cmpsb
cmp
mov
pop
dec
daa
mov
incl
dec
loop
incb
cwtl
lock
mov
jecxz
inc
ficoms
loopne
mov
mov
mull
pop
ret
pop
mov
scas
inc
imull
js
xor
dec
dec
cmp
nop
insb
int3
arpl
data16
cwtl
xor
xchg
test
daa
mov
cltd
jbe
sub
mov
jno
jle
xchg
sub
popa
lcall
push
push
fwait
xor
xchg
leave
pusha
or
insl
fs
stc
nop
aas
insl
xchg
cs
or
or
sub
dec
in
jle
jne
fdivrs
lret
mov
es
loop
sbb
mov
test
mov
mov
push
jge
jle
xor
test
movsl
add
cmpsb
sbb
test
lret
xchg
and
icebp
mov
orb
and
xchg
in
cmc
mov
ret
pop
fcoms
add
xor
inc
fisubrl
inc
lods
inc
jb
xchg
stos
jle
pop
jno
sub
icebp
sbb
shl
xchg
jne
in
sbb
mov
es
mov
jns
movb
mov
mov
out
enter
popf
add
pop
sarl
jmp
xchg
test
sbb
loopne
test
mov
adcb
xor
mov
mov
jl
and
cs
mov
jle
ljmp
setnp
stos
inc
adc
flds
mov
xchg
and
hlt
mov
xor
dec
js
pop
stos
jp
push
insl
mov
mov
rorb
xchg
xchg
test
mov
dec
out
imul
in
sbbl
cmp
lret
in
cmpl
dec
loope
dec
push
mov
movsb
movsl
sbbl
scas
fs
loopne
loopne
inc
jmp
mov
testl
sti
xchg
loope
pop
repz
pop
repz
adc
fimull
leave
sbb
xor
aas
push
ljmp
push
mov
movsb
ret
pop
pop
aam
out
push
sahf
xor
jg
add
stos
cli
pop
hlt
in
mov
sub
fistps
fisttps
sbb
mov
addr16
rolb
xor
les
js
mov
and
xlat
push
imul
iret
cltd
fidivs
or
inc
cmp
xor
cmp
fcomps
xlat
sub
pop
pop
pop
cmc
dec
push
inc
faddl
lret
sub
lock
dec
loopne
hlt
jp
out
and
pop
out
insl
fstps
mov
mov
sarl
outsb
add
dec
ja
and
dec
imul
mov
pop
pop
sub
mov
inc
fcomi
dec
stos
inc
ds
sub
inc
mov
inc
xlat
imul
inc
cltd
fdivrl
push
fnsave
int3
ja
scas
inc
jle
cmp
mov
mov
outsb
mov
scas
inc
pop
in
lret
push
sahf
scas
inc
adc
aam
push
scas
inc
inc
or
inc
xlat
jbe
mov
scas
or
inc
xlat
fisubrl
dec
popa
adc
lret
ret
pop
mov
aad
addr16
pop
mov
out
rclb
inc
fldenv
push
test
inc
sub
ret
iret
data16
xchg
inc
ffree
add
icebp
mov
lret
sti
mov
pop
mov
mov
or
mov
push
lock
and
popf
xor
sub
sbbb
addr16
xchg
mov
cmp
mov
inc
jne
mov
add
mov
inc
jae
mov
shll
inc
push
jle
loope
xor
in
sbbl
dec
loop
lea
jmp
dec
sub
es
data16
mov
mov
lods
mov
mov
sub
addr16
pop
fs
ljmp
in
test
lds
nop
daa
jno
test
and
cs
pusha
jo
iret
add
cmp
cmpsb
int
fnstenv
or
test
mov
dec
sbb
int3
arpl
pop
arpl
dec
or
mov
xor
pop
addr16
mov
inc
mov
lods
ret
pop
fildll
scas
inc
dec
pop
gs
dec
add
mov
in
addl
stos
inc
icebp
inc
mov
pop
sub
cmpsl
ds
cmpsb
fnsave
lret
pop
jo
dec
or
and
imul
xor
mov
add
push
push
pop
pushf
xor
aad
stc
lea
std
repnz
xor
cs
popa
loop
not
push
xor
out
outsl
pop
sahf
or
dec
out
inc
mov
jne
insl
nop
jle
push
mov
dec
loop
mov
shlb
in
dec
pop
jns
ljmp
int
insb
fdivrl
out
dec
mov
jnp
shlb
je
push
cmpsl
xchg
dec
out
mov
inc
loop
fnsave
rcrl
dec
jecxz
push
lods
inc
xchg
lds
arpl
dec
dec
test
jg
aad
add
pusha
stos
inc
pusha
divl
movsb
cmp
aaa
enter
into
gs
stos
outsl
push
sbb
lahf
ss
mov
mov
xor
sbb
pop
mov
push
lret
mov
rolb
iret
data16
mov
pop
fwait
sahf
lret
fisubrl
int
cmpsl
ds
adc
addb
inc
mov
mov
lahf
and
into
and
lahf
xor
mov
lods
mov
cmp
js
ds
arpl
mov
cmp
mov
dec
and
enter
or
xchg
pop
test
xchg
enter
or
imul
inc
and
rclb
es
imul
push
pop
push
push
out
push
mov
xorb
fs
jg
cli
or
repnz
testl
cmp
testb
ja
or
cli
xchg
je
addr16
xchg
jge
or
cmpsl
xchg
fmuls
daa
mov
inc
jns
test
add
pop
mov
add
cltd
sub
pushf
and
ss
pop
cmp
or
sbb
pusha
mov
push
cmp
lahf
push
das
movb
add
loopne
fwait
adc
lds
lods
lods
inc
push
movb
clc
pop
daa
mov
and
cld
xchg
pop
inc
es
lret
xor
js
add
nop
aaa
cmpsb
pop
scas
sbb
or
into
gs
jnp
xchg
lods
push
lods
jmp
int
icebp
pop
add
out
imul
in
imul
adc
addr16
pop
leave
shlb
pop
or
mov
mov
insl
xor
xchg
cs
loopne
jnp
fidivl
adc
scas
test
xchg
sub
enter
pop
fidivs
mov
imull
loope
mov
mov
mov
inc
fbstp
mov
popf
cli
rcll
test
dec
lock
cmpsb
loop
mov
scas
xlat
outsb
loopne
call
sbb
mov
andl
pop
out
inc
hlt
dec
loope
addb
ja
xchg
sub
cwtl
xchg
sbb
movsb
cmp
pusha
shlb
aas
ret
xlat
std
xchg
or
or
jg
xchg
sbb
iret
lods
cmp
mov
int
in
std
mov
int
sbb
push
jmp
mov
les
and
fsubl
xchg
or
lock
mov
roll
xchg
or
out
sub
push
in
cmp
lods
add
in
pop
lods
inc
mov
jno
push
mov
pop
out
and
lods
inc
negl
xchg
mov
pop
inc
test
out
xchg
sti
cmp
sub
add
call
or
mov
rcrl
fmuls
pop
neg
inc
mov
ja
jle
xor
pushf
xor
cmpsl
mov
movsl
jo
fnstenv
jns
imulb
mov
adc
repz
jne
int
xchg
out
rcrb
nop
imul
sub
lea
and
stos
inc
enter
iret
or
push
cmp
jg
xor
arpl
xchg
fs
push
in
sahf
addr16
mov
xlat
sbb
pop
inc
pop
lock
pop
repz
jl
stos
lods
jae
sbb
hlt
xlat
xchg
fwait
xor
pop
shlb
dec
test
cmp
fsubrs
add
fs
add
es
cmpsb
xchg
jp
push
lret
xor
and
xchg
and
insl
push
movsb
jns
pop
pushf
xchg
cs
daa
mov
cmp
les
xor
popa
subb
pushf
ret
add
push
mov
mov
andb
ficoml
dec
in
test
sub
sbbb
and
and
pushf
lret
iret
rorb
cmp
lret
sub
cmp
test
mov
adcl
inc
xlat
lea
shrl
cli
mov
in
or
mov
push
mov
mov
aad
fisubrs
cltd
xor
xchg
sub
adc
and
out
insb
es
out
sbb
arpl
xor
add
iret
data16
xor
sub
and
scas
xchg
and
cmp
xchg
sub
gs
les
rorb
fadd
scas
inc
mov
mov
pushf
daa
nop
mov
ret
es
cwtl
or
push
aas
fildl
dec
imul
dec
andb
ret
xchg
mov
mov
adc
rcrl
jg
xchg
lds
inc
sbb
ret
pop
xor
mov
outsb
lods
jmp
pop
push
inc
ficomps
mov
mov
adcl
cld
ja
jbe
cmc
mov
daa
fwait
mov
or
mov
daa
mov
mov
sahf
shl
mov
mov
loop
inc
scas
inc
je
das
mov
ret
lds
mov
stos
inc
fcmovb
outsb
add
inc
enter
mov
inc
mov
into
nop
daa
shll
loop
rclb
dec
jecxz
stos
mov
fdivrl
mov
mov
mov
jne
repz
loope
je
lods
inc
sbb
lds
mov
aas
decl
leave
pusha
sub
popa
clc
andl
sub
and
and
dec
jno
add
int3
arpl
shll
test
enter
cmpsb
cmp
pop
in
icebp
xchg
les
add
inc
jno,pt
jns
aaa
mov
cmp
mov
xchg
fs
push
fcmovnb
push
or
inc
scas
inc
ja
loop
pop
jle
aad
outsb
movsl
cmp
cmpsb
scas
inc
fdivs
jb
adc
pop
inc
inc
mov
inc
mov
mov
pop
jmp
jecxz
inc
adc
pop
pop
nop
jns
cmp
or
lret
inc
movsl
cmp
andb
movsl
or
mov
sbb
shrb
add
cmp
mov
push
or
mov
stos
andl
mov
push
test
bound
dec
mov
daa
pop
cmp
popa
lods
xchg
or
and
lret
bound
fldenv
fs
bound
call
cmp
pusha
clc
in
jp
fldcw
lahf
adc
pop
imul
mov
add
or
pushl
mov
inc
jl
mov
cmc
cmpsl
fs
xlat
clc
repz
and
movsl
push
ljmp
lret
and
ret
adc
ret
cmc
outsl
add
jb
lcall
stc
add
dec
push
dec
or
add
dec
repz
mov
mov
lods
sbb
add
cmp
int
push
popf
mov
mov
loop
push
jmp
jmp
mov
push
push
arpl
xchg
mov
fwait
rorb
movsl
add
idivb
arpl
sarl
les
adc
sbb
mov
fiadds
sub
and
xchg
xchg
testl
pop
and
lds
cmp
xchg
pushf
aas
int
fsubrs
pop
xor
cmp
ja
popf
xor
mov
leave
xor
push
popf
lods
hlt
mov
xlat
add
ds
dec
add
imul
jl
popf
lods
scas
sub
fsubrs
call
mov
les
xlat
outsb
jmp
in
dec
in
out
push
and
add
add
insl
cmpsl
adc
xchg
inc
xlat
dec
ffreep
mov
mov
mov
xchg
out
pop
lock
and
clc
pop
xor
mov
leave
movsl
xchg
sub
xor
js,pt
jo
xchg
sub
jns
nop
stos
cli
pop
mov
movsb
je
out
mov
loopne
xchg
push
jecxz
mov
lcall
test
and
jb
xchg
sub
lods
aam
mov
cmpsb
repnz
adc
sub
inc
rcrl
scas
ret
mov
mov
mov
psubsw
push
lods
shl
stc
nop
adc
lcall
insb
js
pop
xbegin
in
std
icebp
je
and
mov
jecxz
std
xchg
pop
adc
scas
adcl
mov
mov
imul
cmp
test
adc
adc
push
ficompl
lcall
outsb
adc
cmp
pop
sahf
and
jb
imul
dec
or
ficoms
movups
into
jns
sbbb
jae
shll
lods
xor
mov
inc
femms
movsl
jg
xor
ret
xchg
jno
cmp
cmp
pop
addr16
adc
mov
stos
add
popa
adc
aaa
into
push
popl
xor
jmp
loop
mov
test
fs
lea
or
mov
xor
or
outsb
inc
loope
aaa
addr16
test
dec
lahf
loop
fidivs
in
imul
push
es
fnsave
add
mov
stos
insl
add
xor
imul
nop
insb
add
pop
shrl
or
popf
dec
lcall
pop
xchg
dec
adc
mov
cmp
popf
stos
mov
lret
stos
std
xchg
sbb
sub
sahf
xor
and
lods
push
xchg
inc
cmpsb
mov
cwtl
addr16
arpl
out
xchg
mov
xchg
lods
mov
mov
into
lock
icebp
and
xchg
jb
or
notl
adc
aas
cwtl
out
or
sbb
addr16
test
insl
adcb
mov
outsb
and
icebp
mov
push
push
mov
inc
jl
jbe
insl
imul
mov
sbb
paddsw
iret
data16
out
nop
sbb
and
orb
or
std
mov
cmpsb
cmp
addr16
les
aad
cmp
dec
sbb
push
add
ja
stos
mov
xchg
add
add
aas
lock
sub
and
cmpsl
inc
testl
test
shrb
imul
add
cmc
xchg
or
sbb
pop
pop
jl
cmp
nop
dec
or
jo
xchg
leave
mov
mov
cmp
xor
xor
int3
xorb
es
xchg
dec
cmp
xchg
pushf
mov
sub
int
out
xchg
dec
add
jo
cs
mov
and
xor
ror
repz
out
test
fidivl
sub
pop
dec
ret
pop
jp
dec
loopne
fwait
jecxz
int
push
out
sub
push
popf
and
fidivs
roll
lcall
fsubrs
jmp
shrl
cmp
jle
clc
mov
jns
sbb
mov
adcb
insl
ss
ss
mull
aam
out
mov
mov
fdiv
mov
arpl
xchg
das
in
popa
mov
fbstp
push
mov
loop
pop
or
xlat
pop
push
dec
mov
lea
fwait
aaa
call
rorl
and
mov
mov
jnp
dec
cld
jmp
dec
daa
pusha
pop
orb
push
pop
jno
and
scas
stos
nop
fdivrl
sub
pop
loop
mov
fwait
movsb
pop
adc
cmp
inc
orb
pop
push
mov
and
mov
sub
pop
and
jmp
in
gs
sub
outsl
lock
shll
pop
mov
xchg
imul
and
lret
es
mov
push
dec
dec
mov
mov
inc
adc
ja
push
cltd
sbb
arpl
rorl
push
mov
fisttpll
pop
clc
or
shrb
lret
xchg
add
loopne
pushf
pop
mov
in
jnp
shrl
adc
sub
pop
push
ret
sub
movsl
add
testb
mov
sub
mov
ja
xor
lret
int3
fdivrp
dec
add
je
cmp
sbb
dec
loopne
and
push
cli
fsts
cmp
jno
mov
mov
insl
popf
loope
stos
pop
mov
repnz
mov
pop
popf
sub
xchg
dec
ret
jb
cmc
bound
mov
xor
bound
lret
sub
and
lret
shr
jle
sub
cli
push
cmp
ja
std
adc
pop
sbb
dec
cmpl
mov
or
test
mov
cmp
stc
int
dec
movsl
gs
call
jne
mov
fisubrs
inc
or
das
adc
xor
insl
sub
in
mov
fs
mov
jns
int3
mov
jne
sarb
add
lret
adcl
dec
push
in
jl
lcall
cmp
std
sbb
nop
mov
loopne
rep
mov
jnp
push
push
je
cmp
xchg
cmp
mov
mov
xchg
lea
cmc
insb
lcall
jno
fidivrl
aaa
les
mov
cli
stos
xor
fdivl
sbb
sbb
adc
cmp
adc
jno
int3
dec
sub
add
fmulp
push
insl
jl
sbb
sub
insl
jns
sub
jnp
jle
xor
insl
mov
xchg
jo
mov
jle
ljmp
inc
sti
fbld
nop
mov
cmp
leave
stos
test
mov
mov
enter
stc
dec
dec
mov
iret
shlb
adc
lods
or
repz
inc
shlb
data16
lret
mov
cmp
adcb
ret
rol
push
dec
dec
mov
ret
pop
ljmp
jp
add
xchg
add
xchg
sub
fadds
ds
stc
dec
loope
push
pop
repz
mov
xlat
stos
inc
fcmovnu
clc
xor
sub
stc
cs
push
out
dec
sbbb
popf
outsb
add
xor
push
rclb
stos
inc
jne
fidivs
xchg
enter
cld
xchg
das
ljmp
and
xchg
fwait
inc
adc
in
xchg
xor
push
cmp
aas
call
pop
icebp
xchg
cmp
mov
and
mov
adc
sahf
xor
imul
lock
stos
scas
sub
xorb
test
dec
jecxz
leave
xchg
sub
cmc
push
daa
sbb
mov
jmp
aaa
js
stc
shrb
sbb
mov
inc
insb
inc
fistpl
mov
xchg
cmpsl
lods
push
les
movsb
dec
loop
int3
xchg
sub
imulb
sub
mov
push
dec
xchg
jnp
cmp
popf
lcall
lock
cmpsb
inc
push
mov
push
js
lods
shrl
mov
xchg
mov
ficomps
and
popa
cmpsl
lods
inc
flds
dec
loope
aad
push
push
dec
push
sub
sarb
dec
lods
icebp
movsb
cmp
iret
shrb
inc
rcrl
jo
aam
pusha
test
divl
sbb
and
xlat
xchg
push
ret
mov
aam
loope
push
push
fdivrl
push
push
insb
je
cltd
and
xchg
jae
mov
lds
mov
cmp
fs
cmc
and
sbb
clc
pop
fstps
mov
jle
push
mov
cmp
pop
rcrl
out
scas
and
push
push
shlb
add
jo
and
mov
jbe
dec
test
push
lods
dec
leave
iret
data16
jo
lret
mov
ret
rep
or
mov
shrl
repnz
es
adc
inc
mov
addr16
xchg
or
test
pusha
ljmp
mov
lahf
in
ret
add
loopne
loop
inc
fmull
test
sbb
xchg
sbbl
ficoml
aaa
cmp
out
sub
mov
or
fnstenv
mov
stc
nop
jl
mov
sbb
in
insb
lock
mov
sbbb
dec
enter
out
test
shlb
cmp
mov
inc
out
in
out
or
ja
inc
push
sahf
xor
mov
fwait
inc
sbb
adc
or
hlt
cmp
jb
repnz
faddl
and
or
sahf
daa
dec
std
push
xlat
jge
sub
xlat
jl
dec
loopne
jbe
bound
add
shll
jo
pop
hlt
and
shll
or
fisubs
xchg
pop
out
mov
jnp
push
sbb
imul
jae
push
dec
repnz
shrb
pop
lret
mov
cmpb
lret
int
pop
jmp
dec
shll
repz
push
call
addr16
mov
xchg
push
pop
pusha
in
sub
jge
dec
pop
insb
cld
push
ja
xchg
in
sbb
jg
fnstenv
push
stos
lods
pop
ja
outsl
stc
enter
xchg
sub
add
mov
aam
int
arpl
inc
jmp
jle
gs
jp
xor
push
and
inc
or
cmp
jg
cltd
mov
fists
add
ds
mov
orl
push
aad
inc
pop
inc
dec
adcb
data16
rcr
dec
and
adc
and
bound
inc
pop
pop
jmp
pop
pop
loope
sub
stos
add
push
mov
shl
repz
dec
loopne
adc
xor
xchg
mov
sbb
fs
xchg
das
mov
adc
dec
ss
mov
xchg
int3
arpl
sbb
arpl
shrl
push
cmpsb
outsb
push
repz
repz
mov
push
jg
movsb
adc
adc
inc
push
mov
cld
test
bound
mov
repz
xlat
push
dec
and
xor
ret
push
mov
lods
jg
hlt
mov
stos
xchg
adc
and
hlt
xlat
lock
xchg
jns
idivl
push
dec
cmp
mov
repnz
sub
int
xor
ja
adc
and
push
incl
sar
lea
jmp
xchg
jb
fists
aam
jl
ficomps
std
in
pushf
xor
push
test
imul
mov
stos
loopne
pop
or
xchg
fwait
cmp
gs
out
push
test
cmp
insl
mov
rcrl
ret
cli
or
cmpsb
mov
push
adc
lock
jmp
fbld
fwait
jge
mov
jp
cmp
pop
in
mov
imul
mov
rcrb
sbb
into
xor
push
movsb
mov
mov
push
pop
cmc
stos
int3
xchg
icebp
mov
icebp
and
arpl
cltd
jecxz
mov
das
xchg
cli
lds
imul
adcb
mov
int3
cs
add
xor
mov
inc
push
jo
mov
pop
pop
xchg
and
jbe
rcrl
addr16
mov
mov
push
pushf
mov
jne
mov
ret
inc
in
cmc
ljmp
mov
dec
shll
movsl
and
pop
ficoms
andl
sub
xor
xlat
outsb
hlt
adc
pushl
pop
jmp
cmp
inc
loopne
rcr
out
xor
les
stos
nop
jmp
loop
bound
dec
dec
xor
sub
popa
add
dec
scas
cmp
cmp
iret
rcll
jle
sbb
push
push
mov
cmpsl
rolb
add
stos
dec
or
ds
fimuls
mov
mov
jo
mov
pop
into
test
inc
shrb
jmp
sbb
dec
movsl
jg
mov
movsl
subl
xchg
mov
es
scas
lret
inc
imul
inc
xchg
sbb
mov
push
pop
in
mov
or
popf
jle
xor
and
fwait
jg
xor
xor
pop
add
adc
add
adc
lcall
dec
jecxz
mov
in
hlt
les
in
dec
loopne
aaa
adc
sti
add
cmp
pusha
testl
shr
xchg
fisubs
ja
loop
fwait
mov
jo
mov
inc
dec
loope
cmp
inc
sbb
insb
daa
js
xor
mov
dec
mov
xchg
loope
pop
fsubs
lcall
xor
jno
ljmp
icebp
add
fs
xor
sub
jae
jmp
arpl
dec
movb
test
adc
dec
scas
fnstsw
mov
cmc
mov
push
fwait
inc
shll
leave
dec
xor
dec
cmc
adc
in
aas
cltd
popf
adc
cmp
push
stc
jecxz
int3
inc
push
stc
xchg
in
popf
adc
cltd
sbb
mov
inc
xchg
cmp
adc
inc
add
repnz
jo
popa
bswap
mov
cmc
sbb
dec
dec
push
xchg
inc
test
int
pop
ljmp
insl
maskmovq
imull
scas
xchg
jg
cmp
icebp
in
and
dec
lahf
test
dec
repz
mov
cmc
add
xor
mov
xchg
jbe
mov
inc
sarl
fs
mov
outsb
divl
ficoms
cwtl
ficompl
mov
imul
in
mov
xor
xchg
int3
icebp
xor
jle
mov
lea
push
cmp
add
mov
mov
cmp
inc
jno
mov
cltd
lahf
ss
sbb
mov
stos
pusha
iret
xchg
lret
loopne
shr
aas
push
loop
push
dec
sbb
dec
imul
imul
out
out
sbb
fidivl
dec
jno
jmp
and
sti
sub
jnp
pop
icebp
fcomps
adc
sbbl
sbbb
insl
and
into
fdivr
pop
dec
sahf
cmp
xlat
xchg
push
xorl
stos
jbe
loope
push
xlat
outsb
adc
add
pop
xlat
inc
outsl
insb
sti
push
ss
sbb
xor
mov
and
in
sbb
lahf
imul
push
jecxz
lods
inc
movsl
pop
enter
out
dec
inc
rorb
or
dec
and
shlb
and
pop
aaa
pop
dec
or
sbb
in
and
imul
xor
inc
xor
ss
fdivrl
xor
int3
mov
jne
push
in
rcll
or
rcr
cld
push
scas
mov
jnp
sti
cltd
lds
and
mov
inc
inc
xchg
adc
jnp
pop
arpl
dec
adc
or
dec
mov
popf
outsl
arpl
mov
test
movsl
cmp
sarb
and
mov
pop
sbb
lock
cmp
out
jmp
mov
cmc
testb
push
subl
push
lock
mov
xchg
out
and
out
cmc
cmp
and
stos
aad
xchg
mov
pop
lret
push
shrb
cmpsb
mov
sti
clc
push
jle
fisubs
or
push
pop
inc
sbb
sbb
jne
fists
xchg
les
mov
mov
mov
pop
mov
lea
stc
mov
int
pusha
ss
push
xor
mov
mov
xor
mov
arpl
cmpsl
movsb
mov
mov
lea
sbb
jecxz
dec
notb
push
cmpsl
mov
js
sub
loope
cmp
or
stc
or
enter
xor
sub
xor
inc
enter
rolb
test
push
xchg
clc
add
adc
insl
nop
test
dec
test
scas
stos
mov
sbb
pop
leave
or
adc
fsubrp
int
cmp
out
loop
pusha
or
stc
nop
adc
mov
dec
xor
fs
fcoml
out
or
lods
jne
fisubrs
mov
xchg
and
decb
pushf
out
test
out
aaa
ret
or
push
iret
imul
jae
jb
stos
cwtl
sbbb
mov
fcmovb
loop
cmp
add
rorl
jbe
mov
sbb
cmp
sbb
dec
xchg
xchg
pop
icebp
xchg
int3
pop
std
fisubl
jb
testb
loope
push
mov
adc
push
mov
dec
and
sbb
cmpsb
xlat
push
pusha
ja
or
ljmp
dec
dec
xchg
negb
popf
sbb
pop
jnp
nop
in
out
xor
int
jns
pushaw
call
push
sti
rorl
cmp
push
pop
out
push
mov
jne
shlb
aad
test
xlat
jg
mov
sub
test
push
push
in
subl
stos
stos
jae
sahf
int
xchg
fwait
pop
add
inc
cltd
push
loop
sbb
add
push
aas
inc
testb
hlt
das
lahf
push
mov
cmp
xor
fisubs
ja
movsl
push
int
pop
mov
es
xlat
nop
rcl
cmc
xchg
add
jmp
fsts
mov
movsl
lret
test
lret
fsubs
outsb
or
in
aaa
std
js
mov
jb
cltd
ret
adc
iret
dec
movsb
jmp
aas
xor
es
testb
adc
pop
push
jb
lods
mov
scas
inc
mov
loop
cmp
sbb
pop
mov
pop
int
aad
xor
xor
mov
adc
outsb
in
push
scas
js
dec
xchg
mov
mov
lahf
inc
cli
test
inc
jne
cmp
icebp
xor
arpl
aad
es
cmp
jbe
dec
mov
xor
jnp
and
les
adc
push
push
outsl
add
sub
iret
or
pop
das
ficoms
inc
fiadds
xorl
bound
mov
mov
mov
lret
jp
in
adc
test
mov
loopne
sbb
in
mov
pop
inc
icebp
inc
je
insb
pop
imul
fs
add
test
jbe
pop
and
pop
push
neg
das
in
xor
fs
push
popf
into
pop
mov
pop
rclb
add
cmpsb
push
aas
sbb
lods
jno
xlat
outsb
pop
xchg
xor
dec
mov
nop
loop
repz
popf
push
loop
test
and
jmp
jae
out
pop
aaa
jns
ds
clc
outsl
fdivrs
or
mov
in
shlb
fnstcw
or
and
inc
xchg
inc
lods
subl
outsb
lret
sar
ljmp
xchg
jge
push
outsb
out
sbb
ljmp
or
and
lea
jb
xchg
jmp
inc
rcl
shr
repz
test
xor
add
mov
jne
cmpl
pop
xsha256
cmpsb
nop
es
int
jmp
jecxz
enter
and
jbe
out
inc
fwait
sub
xor
test
loop
fprem1
out
daa
push
pop
aam
cmp
scas
mov
mov
andl
cwtl
sbb
and
xchg
push
push
dec
out
jbe
rorl
stos
pop
pop
test
cmp
movsl
loopne
fs
test
mov
in
dec
and
xchg
pop
rorb
cmp
rclb
inc
insb
pop
ja
pusha
test
mov
mov
scas
mov
int
movsb
mov
xchg
dec
pusha
aam
and
and
jge
adc
sbbb
jno
pop
pop
call
js
stc
clc
sub
push
repz
mov
push
dec
or
and
jmp
sahf
out
push
movsb
xor
arpl
sbb
pop
movsl
push
cmp
fdivp
scas
jo
bound
jl
insb
sub
add
outsl
sahf
lock
jl
xor
push
mov
into
sbb
or
push
gs
push
je
add
sub
pop
cli
add
mov
xchg
stc
mov
clc
int
leave
mov
sbb
ljmp
aaa
into
movl
and
or
xor
jl
mov
nop
add
dec
inc
dec
ficompl
inc
mov
pop
xor
mov
int3
push
pushf
adc
dec
add
pop
push
fxam
mov
in
test
hlt
jge
mov
stos
ja
fsubl
dec
in
mov
cmp
out
enter
sbb
fisubrl
rcrl
mov
out
ret
and
cs
dec
pop
fdivrs
dec
jmp
xchg
fld
push
and
jp
push
mov
jae
lds
das
jae
shrb
xchg
mov
dec
mov
cmp
mov
jle
ret
or
lea
std
dec
mov
or
push
mov
inc
push
mov
mov
xchg
loopne
pop
pushf
outsb
pop
lret
cmp
shrb
ss
mov
incl
fwait
push
sbb
adc
cmp
imul
and
movsb
fidivs
mov
jae
dec
and
xchg
push
push
je
stc
dec
sub
and
jnp
mov
inc
fiaddl
rcrl
popa
rsm
and
lea
in
and
mov
mov
jl
inc
or
dec
stos
jbe
out
mov
or
lea
push
sbb
inc
cmp
push
jmp
outsl
push
fdivs
std
jp
cwtl
push
jbe
andb
jb
push
mul
and
mov
cmpl
stos
fwait
push
and
and
fsubrs
mov
xor
js
mov
je
xor
aad
das
and
pop
inc
fbstp
aas
je
flds
lcall
insl
mov
inc
dec
popw
lahf
sbb
jbe
jo
xchg
sbb
fs
push
lods
iret
test
inc
push
push
popf
fmulp
mov
xchg
and
adc
ss
fstpl
mov
add
push
addr16
mov
mov
jb
or
cmp
mov
cmpb
and
mov
std
jg
aas
inc
movsb
je
adc
jbe
xor
jp
xlat
orb
adc
dec
xor
jg
fwait
cmp
jbe
push
xchg
repnz
and
push
mov
dec
sub
insl
xor
push
inc
jg
sub
mov
movsl
and
daa
int
pusha
imull
pop
out
and
push
jns
cmp
js
xlat
mov
or
sar
mov
pusha
ljmp
fs
out
dec
std
push
mov
scas
push
mov
into
arpl
ficomps
jae
andb
sbb
sbb
rcrl
sub
push
cmp
int3
or
adcl
and
ret
adc
push
push
jbe
inc
fldl
cwtl
fldcw
inc
mov
xorb
leave
mov
sti
sbb
or
cmp
cmp
mov
out
fwait
mov
pushf
push
rcrb
mov
loop
xchg
adc
or
xor
add
mov
cmp
dec
sbb
decb
push
mov
jne
sbbb
jg
mov
in
mov
lret
and
notb
mov
mov
loopne
aam
cwtl
in
fs
sub
jno
cmp
xor
cmp
mov
jbe
out
mov
inc
arpl
pop
add
movsb
cmp
xchg
jae
pop
sti
xchg
jg,pt
pop
jo
dec
in
xchg
fsts
repz
movb
imul
repnz
sbb
insb
add
lahf
jno
inc
aad
jns
clc
aas
and
ret
push
xor
push
movsl
mov
dec
mov
pop
lods
jb
push
cmp
insb
ja
lret
insb
inc
sbb
dec
push
imul
mov
aam
fcomps
cmp
dec
mov
sbb
mov
ret
rorl
xor
adc
add
pushf
insb
shrl
adc
pop
lret
and
mov
push
adc
xchg
pop
jg
cltd
xor
sahf
je
aas
out
jno
ret
sbb
mov
ja
in
cmp
gs
mov
mov
std
imul
and
mov
hlt
adc
jo
out
vmovaps
hlt
sbb
ret
sbb
enter
mov
xchg
call
mov
aas
call
adc
aad
mov
pop
out
sub
ss
rclb
sbb
mov
loope
sub
adc
jmp
push
pop
cmp
cmp
push
jb
dec
es
int
jnp
fmull
ds
decb
inc
fsubr
enter
and
or
das
shrl
and
lret
xlat
outsb
mov
movsb
cmp
add
cmp
test
pop
cmp
cmp
push
pop
scas
inc
in
call
enter
aas
pop
shlb
out
cmp
fnstsw
mov
rclb
inc
push
repz
inc
dec
out
fidivl
push
dec
jo
mov
les
jno
pop
imul
push
mov
inc
popa
push
out
adc
mov
mov
or
jmp
es
out
cwtl
das
mov
fdivs
lret
cwtl
ljmp
loopne
psrlq
fidivs
sbb
sub
jb
nop
fs
lcall
ds
es
mov
inc
js
add
dec
cltd
sti
xchg
lret
outsb
xor
adc
roll
out
fs
fists
mov
std
sub
mov
adc
mov
pop
mov
test
sarl
and
mov
fsubrs
mov
aad
pop
fnstcw
iret
or
mov
stos
adcb
pop
mov
mov
jmp
mov
les
pop
insl
mov
vdivsd
int
jp
int3
sub
sub
fildl
fldcw
inc
into
loop
mov
and
sub
sbb
lahf
cmp
ret
push
lahf
push
outsb
xor
aaa
adc
push
test
xor
xchg
push
inc
fiadds
inc
fcmovbe
jecxz
xlat
aam
fsubrp
sbb
xchg
mov
jnp
xlat
test
mov
ret
pop
repz
jne
push
pop
icebp
mov
mov
mov
fimuls
mov
adc
xchg
mov
adc
test
push
call
inc
mov
cwtl
and
std
xchg
cli
negb
scas
daa
sbb
mov
push
popf
sbbl
mov
mov
std
xchg
sub
mov
testb
cmc
mov
out
push
in
dec
mov
and
or
sarb
mov
dec
and
addr16
jne
pop
push
cmp
test
daa
mov
popf
imul
add
mov
test
repz
cmpsb
sub
repnz
lds
cmp
adc
testl
jmp
mov
xor
push
sub
aas
ja
popf
gs
and
inc
sbbl
mov
pop
scas
or
cmp
fnstenv
xlat
mov
jbe
mov
mov
and
pop
add
je
sbb
data16
sub
addb
leave
fwait
push
push
testb
and
xchg
dec
sahf
test
lidtl
mov
cmp
jbe
dec
rcll
or
and
fnstenv
inc
xchg
jge
jp
jb
pop
mov
outsl
je
sub
xchg
mov
jecxz
xchg
mov
sub
lds
scas
data16
cmp
aam
iret
jl
in
ret
fisubrs
xor
outsl
push
mov
ret
and
mov
push
sbb
xchg
sarb
mov
fidivs
rcll
mov
rclb
sub
insl
xchg
stos
inc
sub
mov
pusha
inc
push
jmp
subl
push
xchg
popa
and
pop
pop
dec
jecxz
sub
test
lahf
icebp
mov
es
clc
addb
pop
mov
cmc
mov
push
ljmp
jno
cmpsb
imul
enter
in
jmp
ljmp
jp
sub
sub
popa
cld
pop
inc
xor
lock
xchg
sub
push
pop
pop
cs
loop
in
xor
fstl
cmove
and
int3
arpl
insl
add
jb
lods
xor
mov
ret
cmp
hlt
fbstp
cli
inc
xor
jge
push
icebp
mov
fcoms
or
mov
andb
call
mov
loop
mov
adcb
fadds
cmp
into
dec
fdivl
fucomp
xchg
inc
mov
mov
lods
out
xchg
mov
jbe
cmp
sub
xchg
xchg
cmp
push
mov
push
call
leave
xchg
imul
xchg
mov
push
mov
ss
sarl
jnp
inc
cld
xchg
mov
sbbb
xchg
inc
fildl
call
insb
icebp
les
push
jae
aad
or
out
test
lods
inc
sbb
mov
cmp
shlb
push
ljmp
daa
mov
sbb
pop
mov
aas
jae
icebp
mov
sub
lret
vshufps
add
fstl
cwtl
das
jle
or
sub
mull
xchg
pop
test
sbb
call
lea
ja
add
mov
add
mov
pop
mov
shl
jnp
inc
dec
loopne
hlt
cltd
xor
jl
movsl
inc
add
inc
fidivs
push
cmp
xchg
push
cltd
xor
rcrl
or
mov
enter
pop
in
sub
nop
mov
sub
repnz
pop
aam
push
les
sub
adcb
cmp
mov
arpl
fstl
popa
xchg
cmp
add
insl
subb
adc
xchg
pop
add
add
fsubl
arpl
not
adc
ret
mov
pop
stos
outsl
push
jae
add
push
in
arpl
cmp
jo
mov
or
pop
in
xor
into
xchg
jno
or
lret
lahf
jg
jae
inc
mov
mov
push
pop
out
dec
xchg
out
add
sbbl
adc
or
mov
mov
loopne
sbb
jge
xor
shlb
icebp
xor
adc
insl
aad
mov
inc
and
pop
xchg
shll
xor
daa
jle
enter
stos
mov
test
inc
loope
jno
mov
lret
mov
dec
sbb
cmp
xchg
sub
cmpsb
repnz
xor
stc
sahf
cwtl
sub
cmpsb
dec
cmc
cmpsl
dec
ds
addb
dec
jns
sbb
pop
or
pop
aas
ljmp
jnp
jo
lods
mov
lcall
popa
push
call
push
push
shlb
arpl
pop
std
xchg
push
jb
mov
xlat
outsb
fsubr
test
push
loop
mov
pop
int
sbb
push
cmpsl
pop
sub
lahf
hlt
mov
sarl
jecxz
xchg
sub
and
dec
jne
pop
stc
out
xor
or
sub
sbb
inc
xor
pop
xchg
xchg
repnz
out
xchg
lea
icebp
mov
roll
adc
scas
lods
and
sarl
cli
jmp
cs
lds
mov
mov
mov
ficoml
sbb
add
popf
cmp
cmpsl
std
rolb
mov
ret
fdivrp
imul
pushl
leave
lret
jmp
or
leave
roll
sbb
push
aam
mov
mov
pop
cmp
orb
add
mov
pop
or
call
dec
inc
sbb
idivl
mov
mov
inc
fdiv
lock
stc
lcall
cld
lret
sar
xchg
call
or
loopne
dec
mov
les
fdivrs
pop
or
mov
or
repnz
out
pop
repnz
jmp
dec
cmp
aas
int
out
sbb
fistps
stos
dec
into
arpl
mov
out
out
loopne
jp
or
jecxz
fnsave
roll
xchg
sub
test
add
pop
jae
sbb
mov
or
add
dec
loopne
sbb
sarb
mov
scas
or
out
popf
xor
pop
pop
scas
dec
pop
shlb
xchg
repnz
mov
arpl
sti
xchg
shrb
fdivrl
aam
xlat
lds
pop
cmc
mov
fidivrs
xor
mov
jnp
jg
xchg
dec
jle
jae
sub
mov
mov
xchg
in
test
add
cli
xchg
lea
test
loope
shrl
add
mov
ret
loopne
add
xor
pop
bound
xchg
pop
popf
cli
xchg
iret
cmp
mov
lock
mov
add
dec
jecxz
mov
outsb
push
out
fcompl
in
sbb
ss
rcrb
mov
into
gs
fiadds
packsswb
movsb
in
jmp
int
rcll
dec
das
jl
mov
fnstenv
add
sbb
aaa
xor
imul
repnz
lret
and
lods
clc
pop
cmc
int
mov
aam
and
mov
jg
cld
sti
mov
in
scas
dec
mov
movsb
xchg
xchg
lcall
jge
xchg
fs
jge
pusha
divl
sahf
mov
mov
jno
pop
negb
mov
imul
ja
jl
pop
lcall
mov
shll
fnstenv
inc
lret
mov
fst
insl
mov
loopne
aas
adc
and
mov
fs
pop
add
jecxz
les
test
xor
inc
ffree
mov
dec
loopne
inc
pop
and
dec
fildll
in
ja
push
mov
cwtl
add
adc
and
fs
js
mov
pop
repz
sub
adc
mov
pop
xor
shrb
mov
xchg
lret
nop
daa
std
jmp
scas
paddb
lret
movsl
cmp
adc
dec
mov
divb
push
ret
push
sub
mov
ret
mov
cmpsl
mov
jmp
ljmp
stos
fcompl
jne
test
rcrb
jg
mov
mov
mov
cmp
pushf
xchg
mov
push
lods
push
pop
pop
insl
xor
xchg
add
jno
mov
out
sbb
cmp
int
sub
mov
dec
dec
insb
push
stc
fwait
out
xchg
cmpsl
sbb
push
pusha
cmp
test
scas
inc
jbe
fidivrs
and
arpl
add
jno
and
cmp
lock
jns
dec
inc
sub
jno
pushf
xor
mov
add
pop
and
xchg
mov
and
inc
or
int
lods
movsb
jecxz
xchg
dec
and
data16
adc
ret
xor
cmc
stos
inc
fdivs
pusha
stos
sub
int
int3
xor
les
cld
aam
cmpsl
and
jns
inc
mov
mov
lret
and
mov
fsubp
dec
pcmpgtd
jae
cmp
sbb
mov
imul
mov
sbb
cmp
sbb
dec
rol
dec
pop
jmp
jno
test
sub
mov
cmp
movsl
repz
jb
leave
pop
lock
lss
lods
stos
push
addb
sahf
lea
out
stos
inc
ret
ja
inc
dec
sbb
andl
pop
mov
lret
out
and
dec
fnstenv
inc
andb
dec
lods
inc
repz
out
cld
daa
cmp
push
cmp
imul
or
cwtl
repz
lods
je
sub
in
leave
fstpt
loope
mov
movsb
stos
rol
pop
insb
dec
shr
jnp
in
xchg
xchg
and
lcall
popa
call
or
xor
push
xor
ret
jns
enter
fnsave
pop
mov
sub
push
inc
fbstp
and
sbb
roll
fs
bound
lret
movsb
push
ror
ja
shlb
jae
push
jb
stos
dec
adc
and
pop
lea
sbb
inc
add
loop
sahf
in
or
rcl
hlt
popf
enter
push
lcall
cwtl
pop
push
ljmp
mov
mov
and
add
aas
pop
cwtl
stos
jo
push
fidivrl
pop
cmc
pop
mov
les
divb
sub
mov
in
cmp
ret
adc
mov
inc
xchg
sbb
mov
mov
pop
xchg
push
cmp
ds
out
dec
ret
add
shl
repz
and
mov
les
clc
popf
xor
inc
push
popf
mov
mov
sub
repnz
and
mov
dec
std
xor
xor
cs
lds
test
pop
dec
fiadds
sbb
or
pop
fcomps
mov
loope
popa
xchg
push
call
frstor
enter
mov
stos
test
inc
mov
out
xor
sub
sbb
pushf
xchg
xchg
xor
add
roll
out
xor
mov
test
mov
fnstsw
cmc
and
stos
jle
jmp
cmc
femms
pop
sub
sbb
jle
enter
inc
cld
test
xor
cmp
nop
xlat
or
sbb
lcall
cmp
mov
xchg
insl
cld
or
popl
insl
in
orl
push
xchg
sub
push
sti
and
fs
or
test
sub
or
adc
aaa
xor
out
inc
call
adc
test
dec
add
mov
je
shl
or
mov
push
lcall
in
mov
movsl
xor
mov
lds
pop
arpl
js
inc
pop
dec
cltd
ja
jecxz
dec
sbb
add
mov
push
and
dec
push
push
sahf
es
adc
sbb
out
dec
sub
and
cmp
or
pop
jge
mov
push
mov
adc
cmpb
scas
pop
or
dec
fsubl
xchg
lods
pop
lods
js
mov
es
movsl
fs
test
rcrb
popf
push
je
lea
or
mov
jge
pop
fbstp
adc
and
add
pop
in
das
sbb
leave
pop
sbb
fldl
inc
xor
icebp
xchg
lret
pop
aas
shlb
lods
loope
mov
addr16
sbb
shr
inc
repnz
cltd
outsb
push
and
movsl
or
sub
es
scas
data16
fwait
outsb
push
ss
dec
inc
xchg
mov
mov
into
sub
cmp
jg
shlb
ret
bound
pop
repnz
lea
lea
and
nop
imul
ss
pop
push
and
data16
or
out
xchg
jmp
push
es
or
sub
stos
mov
out
enter
mov
outsb
push
mov
cltd
mov
cmc
aaa
push
das
mov
shrl
fwait
mov
movsb
dec
lcall
popa
mov
and
inc
flds
les
js
out
fpatan
and
mov
dec
xlat
inc
mov
dec
cmp
fcmovb
push
sbb
add
push
stos
or
mov
mov
inc
cltd
inc
pop
test
cli
add
ds
add
mov
movsb
aad
ret
in
mov
movb
mov
mov
pop
addr16
pop
bound
lock
inc
scas
adc
arpl
das
push
inc
pop
test
fbstp
sub
out
or
sti
adc
insl
jnp
xor
out
lods
outsb
pop
scas
pop
mov
jne
sub
je
movsl
popa
pusha
mov
and
inc
jecxz
lret
mov
push
mov
fisttps
push
cmp
sbb
int3
adcl
cmp
cmp
inc
nop
out
dec
fstpt
adc
mov
cmp
sub
push
jb
hlt
ja
xchg
imul
push
lds
mov
mov
pop
sahf
mov
pop
movsl
xchg
add
and
mov
push
loop
mov
pop
or
sub
push
pop
pushf
xor
jbe
pop
roll
mov
jne
int3
jb
lock
dec
out
pushf
sbb
dec
mov
aad
mov
mov
ret
pushf
icebp
pop
inc
push
mov
roll
fbstp
out
xor
cmc
mov
in
into
iret
fnsave
aad
jecxz
pop
mov
orl
dec
in
cli
and
mov
lea
std
xchg
fidivrl
xchg
out
cld
pusha
arpl
and
inc
fldenv
fidivl
adcl
mov
inc
sbbl
xchg
sub
loope
mov
data16
pop
cmp
shr
cmc
pop
fisubs
or
cmp
rcr
icebp
add
and
jge
jb
mov
xchg
jg
fldpi
mov
mov
stc
inc
dec
mov
lret
mov
cmp
xchg
jbe
je
lods
add
add
cmc
ljmp
repnz
test
out
adc
jae
test
sub
push
adcb
lea
insb
adc
loope
adc
pop
push
dec
shlb
sub
add
out
mov
lds
sub
outsl
push
cld
dec
mov
inc
call
or
fdivrs
cmpsb
and
mov
je
int3
dec
in
fucompp
cmp
jg
test
and
inc
add
xchg
adc
iret
mov
mov
inc
dec
pop
scas
jns
mov
std
xor
xor
push
mov
lret
adc
jp
fsubrs
loope
lahf
rcll
sub
xchg
xor
divb
sbb
add
stos
add
subl
mov
and
call
sub
scas
clc
lds
push
aaa
and
lock
out
in
cwtl
stos
and
in
xchg
jnp
xchg
call
cmp
cmp
cmp
xlat
xor
pop
jmp
pop
mov
lret
dec
xor
lahf
stos
ss
xlat
push
fdivp
cmpsb
pusha
je
cwtl
and
loopne
jo
jae
mov
mov
in
or
push
fsubl
ret
inc
add
jne
cmpsl
in
cmpsb
mov
mov
test
movsb
pop
pop
sub
test
xor
sub
push
pop
pushf
das
sti
out
add
icebp
call
movsb
pop
in
in
imul
imull
xchg
add
pop
loopne
arpl
pop
inc
popa
mov
mov
push
shl
push
mov
mov
ret
in
push
or
mov
les
lret
mov
mov
inc
clc
pop
add
aad
mov
push
in
cmp
xchg
push
shl
fisttpl
cmp
jbe
ljmp
xchg
pop
je
cmpsl
sbb
mov
mov
sbb
mov
or
out
add
pop
dec
pop
shrl
call
or
nop
mov
mov
mov
iret
add
jle
xchg
ror
mov
mov
push
outsb
adc
fiadds
push
pushf
sub
dec
fistl
testl
jno
andl
or
imul
repnz
fs
ljmp
fimuls
int3
insb
adc
shl
sbb
arpl
lock
xchg
mov
in
jp
mov
daa
inc
lods
mov
pop
fwait
test
mov
push
ja
roll
mov
mov
mov
xchg
fcoml
loope
stos
outsb
inc
fs
pusha
fisttpl
xor
pop
push
ljmp
mov
out
enter
adc
mov
js
mov
mov
xchg
fwait
pop
mov
jno
andb
iret
mov
lds
insl
mov
outsb
and
mov
sbb
jg
dec
dec
out
mov
fxch
das
mov
arpl
adc
mov
and
adc
mov
mov
jmp
psraw
mov
sbb
inc
pusha
jo
enter
jae
jns
pop
stos
inc
ja
jae
pusha
sti
nop
sbb
sub
inc
mov
js
sub
jecxz
rcrb
pop
jge
dec
mov
push
mov
jns
xchg
imul
outsb
add
jmp
mov
sbb
sub
pop
mov
insb
addr16
pushf
and
inc
and
std
mov
jmp
int
xor
leave
and
loope
lock
sarb
add
cmp
incb
pop
push
inc
lds
xchg
cmp
xor
or
jbe
test
test
enter
rol
jbe
push
popa
pop
adc
rcr
testl
xchg
cli
insl
call
fcmovnb
ret
and
jne
les
int3
jle
fs
xchg
xchg
jmp
stos
pop
int
cmp
stos
inc
cli
jno
cli
sub
and
setnp
or
push
out
outsb
push
pop
jecxz
jne
cmp
mov
mov
test
jg
ret
mov
in
icebp
call
mov
lods
lock
add
ja
sti
xchg
out
inc
push
aaa
sbbb
jb
xor
push
inc
cmp
or
jne
and
fwait
push
movsl
adc
inc
stos
xor
iret
lret
daa
ret
lret
leave
inc
xor
sub
iret
xor
adc
shlb
mov
add
in
cli
inc
xor
or
fdivs
in
cs
mov
push
outsl
mov
rcrl
subl
pop
cmp
in
aaa
daa
mov
adcb
loop
push
pop
xor
and
and
inc
call
jne
or
sub
or
icebp
jge
addr16
or
pop
mov
rolb
test
inc
push
push
inc
inc
push
jns
sbb
adc
xchg
add
and
pushf
inc
repz
mov
lods
ss
insb
ljmp
push
movsl
mov
dec
call
xor
jo
adc
cli
xchg
cli
add
jne
pop
clc
dec
or
cmpsb
mov
push
arpl
jg
mov
loopne
repnz
dec
clc
pop
mov
imul
mov
test
xor
cmpsb
repnz
lahf
xchg
sub
lret
xchg
mov
jge
jae
and
and
daa
mov
fs
mov
and
push
mov
xchg
sbb
and
jp
aam
and
push
aas
addr16
mov
lods
mov
sub
cmp
mov
test
arpl
cmpsb
bound
js
adc
adc
idivb
int3
lret
mov
jo
xor
sti
fucomp
jp
stos
loope
pop
xor
add
cltd
sbb
iret
adc
cmp
push
call
and
mov
call
jae
stos
pop
mov
mov
in
scas
sbb
and
add
inc
mov
mov
test
adc
in
das
sub
add
mov
mov
pusha
fcmovne
sub
in
pop
out
pusha
mov
lea
flds
pop
and
sbb
and
jecxz
jmp
add
push
sbb
mov
imul
adc
in
out
pop
mov
int3
push
adc
sub
stc
sub
mov
inc
cmp
adc
dec
fwait
mov
divl
xchg
dec
leave
mov
sub
lcall
xchg
sub
add
cmp
adc
xchg
xchg
les
addr16
out
mov
lock
sub
push
fisttps
fstps
fsubl
add
mov
ljmp
cmp
jb
test
dec
pop
hlt
inc
lret
xchg
jnp
sbb
lods
inc
ljmp
xor
sbb
xchg
dec
or
shr
cpuid
lods
bnd
loop
test
loope
inc
pop
mov
pop
cwtl
and
fidivl
adcl
fcompl
std
and
lods
dec
dec
pop
daa
mov
xor
bound
movsl
mov
xchg
outsb
das
sub
mov
fwait
subb
sub
dec
arpl
pop
xor
pop
movb
dec
lcall
jl
dec
push
pusha
popf
jne
fildll
dec
and
xorb
adc
push
lds
push
xchg
das
inc
dec
test
mov
lret
lret
shrb
dec
and
aam
cmpsl
icebp
adc
xor
lods
sub
mov
fstps
push
adc
popf
push
call
cmp
or
cmp
sub
dec
fs
dec
mov
add
shlb
adc
mov
adc
mov
xor
out
cld
inc
dec
add
and
xchg
cld
push
add
xchg
adc
adc
addb
mov
es
adc
xchg
sbb
lcall
das
call
jnp
cmp
movsl
pop
inc
sub
outsb
add
inc
ret
cmpl
sub
pop
or
and
cmpsb
test
mov
sbb
dec
je
pushf
sub
dec
pop
repnz
and
out
cld
dec
pop
cs
sbb
lods
inc
int
dec
into
test
lret
dec
test
scas
les
cld
popf
sub
mov
psrad
mov
aad
mov
in
inc
test
jne
sub
xchg
dec
add
movsb
jecxz
in
adc
popa
mov
fsubr
jmp
or
xor
jle
pop
cmp
into
inc
cwtl
jbe
aad
and
fisttps
inc
fbstp
adc
ds
cs
mov
repz
int3
pushw
xchg
mov
test
or
ja
mov
daa
cmpsl
popa
int
sbb
jle
lret
shl
sti
test
jmp
sub
inc
inc
fldcw
lret
adc
or
push
in
or
dec
loopne
iret
pop
push
mov
mov
scas
fstps
je
push
jae
fs
mov
aas
ret
dec
lcall
xor
dec
xchg
or
add
or
mov
int
jne
cld
push
adc
mov
aas
push
adc
add
imul
mov
dec
arpl
aam
cmpl
subb
mov
lods
mov
icebp
out
xchg
movsb
lds
push
lods
cmp
inc
pop
shl
sbb
xchg
cld
and
mov
cltd
add
and
dec
pop
scas
inc
and
xchg
fwait
fs
lret
jo
adc
and
loopne
sbb
mov
adc
xor
pop
xor
jo
cmp
inc
jnp
jnp
adc
in
dec
loopne
or
jae
jle
xchg
dec
mov
add
xchg
lock
fmuls
adc
leave
push
lods
mulb
mov
test
add
decl
pop
test
fcomp
lcall
scas
imul
jmp
mov
loope
ret
push
iret
jecxz
lret
in
cltd
movsb
cmp
cmp
loopne
xchg
ret
sub
jecxz
mov
xchg
sbb
pop
aas
mov
mov
shll
out
inc
in
stos
shr
sbbb
mov
arpl
and
enter
and
inc
inc
sbb
ror
and
mov
repnz
lret
add
std
insl
cmp
cli
in
dec
insb
push
or
sahf
xor
fs
out
mov
or
or
and
pop
xchg
in
addl
and
inc
inc
pop
mov
ret
fnsave
je
sti
and
loop
in
xor
sbb
daa
sbb
pop
adcl
cs
pop
mov
pop
jo
xchg
push
icebp
js
notb
rorl
stos
loopne
ja
mov
outsl
aas
ja
and
dec
je
jmp
fs
pop
std
jb
stos
mov
inc
faddl
add
mov
adc
aad
lea
cmp
pop
sahf
mov
lahf
movsb
mov
or
cltd
push
inc
push
mov
jp
push
nop
xlat
pop
sub
mov
movsl
push
lods
inc
mov
jno
adc
dec
mov
mov
or
xor
jbe
idivb
mov
mov
mov
scas
pop
in
sub
pop
mov
dec
sub
jbe
dec
iret
lret
dec
repz
js
lods
dec
lret
jmp
jmp
jne
xchg
or
cltd
popa
test
or
or
xchg
loope
jp
stos
pop
addr16
pop
pushf
inc
loop
out
pop
int3
mov
mov
outsb
add
jnp
jns
hlt
ret
jo
aam
or
iret
fsts
sub
test
push
sbb
xchg
js
jne
rcrb
notb
xor
xchg
sbb
ret
clc
cs
sbbl
sbb
inc
int
imul
popf
ds
cli
daa
aam
int
lock
test
out
xchg
inc
and
or
adc
movzbl
push
outsb
sbb
dec
mov
xchg
sbb
xchg
pop
je
lods
push
sbb
mov
pop
xchg
fisubrl
stos
imul
xor
dec
mov
add
push
fiaddl
repz
jmp
pop
xchg
mov
fdivl
fsubl
mov
sbb
movsb
cmp
loopne
dec
and
xchg
stos
xor
test
xor
out
xor
pop
mov
fistl
sbb
mov
sub
add
push
outsb
fmulp
pop
jl
jmp
cmp
fs
loop
pop
mov
pop
mov
xchg
mov
loope
mov
lods
outsb
sub
fcomip
shrl
lods
mov
jmp
sub
fisubl
mov
sti
fwait
xor
cmpsb
mov
sahf
mov
enter
pushf
mov
movb
xlat
push
test
cmp
xor
dec
xchg
sti
sub
fsubrs
int3
sahf
add
adc
sbb
popa
inc
inc
adc
fdivl
xor
xchg
fwait
xchg
sub
sub
dec
dec
mov
aad
add
xchg
mov
nop
adc
les
dec
and
aaa
mov
adc
adcb
or
cmc
aas
mov
pop
fimull
adcl
cmpsl
iret
pushf
jae
test
cli
mov
jg
fucomi
cwtl
push
add
or
sbb
jnp
adc
sti
pop
aas
push
test
cmp
cltd
insl
fmull
pop
es
mov
aaa
mov
aam
pop
stos
inc
addr16
dec
add
xorl
mov
adc
aas
inc
icebp
jns,pn
into
xchg
test
xor
bound
scas
mov
filds
ficompl
fstpt
inc
jb,pn
sub
bound
mov
jae
pop
mov
das
cmp
imul
mov
int
mov
cmpsl
inc
dec
cmp
jl
cmpsl
push
jns
loope
push
int
jg
daa
mov
divl
xchg
outsb
or
out
jno
call
int
and
sub
push
js
and
push
mov
data16
mov
and
push
ret
pop
pop
popa
fmull
xchg
imul
xlat
into
jmp
jno
cltd
scas
dec
mov
mov
mov
cmc
ja
iret
clc
icebp
push
mov
ror
mov
rclb
or
cmp
xchg
les
xchg
scas
icebp
out
jmp
xchg
ds
sbb
pop
adc
mov
scas
ss
pop
bound
xor
inc
lds
in
inc
mov
cmc
or
sbb
or
sarl
out
jne
inc
arpl
jne
push
rcrl
fsubr
xchg
nop
fbstp
jge
dec
loopne
lret
js
decb
cmp
and
mov
xor
rorl
mov
mov
fdivs
inc
loop,pn
jb
sub
cwtl
test
sbb
cs
sub
inc
mov
pop
pusha
adc
fstpt
or
lret
xchg
sub
jge
and
ret
ja
js
sbb
mov
mov
sub
add
stc
dec
mov
iret
push
cmp
mov
loop
mov
push
out
ljmp
test
pop
imul
andb
pop
repnz
or
ds
push
push
fwait
loopne
sbbb
lcall
mov
jnp
jle
add
cmpsl
pop
fwait
mov
sub
cmp
js
or
dec
cli
sub
xchg
fwait
push
jo
pop
sub
mov
fcmovne
and
dec
shl
lret
jb
mov
and
out
mov
insw
adc
int
adc
out
cmp
sub
xor
cwtl
jbe
int
adc
xor
push
in
lret
mov
repz
jae
push
lods
decl
ja
mov
jmp
inc
popf
mov
pop
stos
mov
and
jae
add
psllq
scas
movb
add
inc
loope
jmp
and
add
repz
enter
xchg
inc
add
fidivs
ss
fimuls
jmp
mov
xor
loop
cmp
insl
test
into
out
sbbb
adc
dec
or
jge
and
inc
js
xchg
jp
into
test
int
in
xor
nop
imul
leave
xor
push
packuswb
push
jbe
in
ficompl
data16
push
cli
stos
inc
aad
repz
xchg
sbb
pop
loopne
jb
loopne
ljmp
rcll
mov
cmp
sbb
sbb
loop
sahf
or
jnp
outsb
pop
and
push
ret
bound
push
mov
jno
lds
iret
fisubl
jbe
sub
rcll
lahf
test
jno
mov
jnp
insl
cmpsb
js
fsubrs
aad
lcall
jno
test
or
jp
pusha
sub
add
inc
test
repnz
sbb
lahf
add
and
test
les
daa
pop
cmp
jecxz
movsl
ret
mov
shr
pop
popf
jbe
mov
aam
push
push
mov
inc
sbb
pop
fisttpll
sub
cmp
test
bound
fsubrs
xlat
loopne
dec
arpl
mov
or
jmp
add
cmp
test
mov
stc
push
scas
movsl
xor
jb
lret
adc
shlb
mov
in
loop
lret
add
lock
sbb
sti
lret
jmp
std
loopne
aaa
inc
xchg
pop
or
mov
sub
mov
fmull
stos
pop
mov
popa
jge
jmp
jne
fadd
push
lret
sti
and
jl
in
xchg
sbbb
pop
js
pushf
push
mov
add
xor
movq
sub
nop
gs
cmp
inc
in
data16
sub
push
aad
xor
stc
cmp
fs
mov
outsl
mov
xchg
insb
and
push
xchg
imul
pop
push
adc
sbb
sbbb
fidivs
cmp
or
aad
jmp
shrw
sbb
mov
rclb
and
rcr
mov
xchg
xor
std
iret
push
jno
stos
jmp
imul
mov
sbb
push
pop
fstl
xor
mov
fildl
sahf
mov
mov
push
aam
imul
cmp
sub
addr16
mov
sbb
xchg
stos
add
outsb
inc
inc
loopne
mov
repz
shlb
std
divl
fnstsw
inc
xor
inc
push
sbb
inc
mov
sub
or
mov
jp
inc
test
mov
pop
jno
das
lds
popa
jns
xchg
dec
jecxz
cmc
cmp
dec
sub
sti
pop
outsl
sbb
push
cmc
mov
fisubl
pusha
mov
sub
cmp
lea
sub
jl
cli
leave
push
cmp
into
or
int
jbe
mov
push
jge
sbb
andl
jle
pop
les
jge
pop
cmp
cltd
stos
lea
sbb
rcrl
cmc
out
adc
and
mov
rcrl
jbe
jmp
jmp
pushf
mov
into
or
test
mov
and
lods
orl
inc
xor
test
mov
dec
and
and
adc
or
aaa
xchg
outsb
push
pop
mov
in
push
xchg
mov
jg
in
cld
cmp
adc
sub
adc
or
pop
das
pop
or
or
imul
orl
jle
inc
jle
mov
mov
xor
es
jno
into
nop
dec
les
in
arpl
or
mov
addr16
inc
into
jo
add
jmp
stos
cwtl
push
adc
addr16
aam
push
mov
xor
pop
sub
sbb
pusha
adc
sbb
lds
inc
pop
adc
or
xor
push
push
sbb
shlb
sbb
and
pop
dec
xor
xchg
push
shrl
or
mov
jbe
sbbl
test
xchg
and
insl
add
inc
and
add
sti
inc
cltd
cmp
jmp
and
or
outsl
jo
cmp
lcall
or
fisubl
faddp
imul
stos
std
mov
rcl
aaa
cmpsb
pop
jns
pushf
inc
mov
sbb
xchg
test
and
fistpll
hlt
mov
arpl
dec
es
nop
cmp
mov
xlat
pop
test
scas
hlt
data16
push
iret
mov
inc
cmp
mov
clc
cmpsl
scas
and
xchg
ret
aam
mov
mov
xor
cmc
js
movsl
fldl
lret
cltd
jbe
mov
xlat
pop
mov
xor
ja
mov
cltd
inc
ds
ds
push
cmp
xchg
sub
das
cmp
inc
add
xor
aad
xor
ja
mov
arpl
xchg
dec
sbb
jle
push
out
movsl
fwait
rcrb
repnz
sbb
nop
stos
popa
jp
xchg
and
and
fmuls
icebp
frstor
inc
pop
sub
push
rorl
ss
mov
test
push
and
aas
sti
pop
pop
ret
jp
mov
jno
sub
inc
mov
mov
jp
imul
fsubrs
or
cmpsl
aam
fsubl
icebp
pop
rcll
xor
and
fmull
test
push
sar
loope
scas
decl
xchg
addr16
mov
and
js
jbe
lods
lods
jmp
sub
sub
daa
in
add
imul
push
lea
xchg
ljmp
sub
xchg
jb
ljmp
mulb
push
jle
adc
lcall
and
mov
fistl
push
iret
pop
out
lahf
in
add
nop
insl
ret
and
push
dec
mov
rcr
imul
jle
pusha
icebp
inc
xlat
ja
setnp
pop
cmp
and
xor
lret
dec
push
or
addr16
int3
das
cld
lahf
lock
push
lahf
ds
aaa
int3
cmp
cmpsb
dec
or
outsl
jns,pt
inc
cmc
mov
push
je
mov
mov
popf
jecxz
cmp
mov
pop
jne
pop
pop
popf
mov
out
push
fdivl
aaa
pushf
sub
sti
addr16
mov
xchg
outsl
jg
stos
lods
pop
pop
and
dec
stos
sti
push
push
jo
xor
stc
jg
xchg
sahf
jno
insl
xchg
mov
jo
lods
lret
cmpsl
lret
dec
inc
inc
mov
repz
sahf
jo
inc
repnz
mov
rolb
ficoml
jle
dec
sbb
fs
movsb
cmp
add
mov
push
cmpb
dec
test
push
mov
ret
or
shrl
dec
push
jbe
lea
std
sub
out
iret
lret
stc
inc
cwtl
cs
cmc
mov
xor
sub
ret
adcl
imul
adc
rolb
inc
int
fwait
add
mov
scas
mov
pop
pop
cltd
jmp
lock
imul
adc
pop
ficoms
push
outsl
inc
bound
or
adc
xchg
int
or
and
insl
es
out
push
jno
push
push
stc
ret
mov
sbb
lret
push
pop
mov
lcall
lock
pop
jbe
ret
repz
fwait
outsl
cmp
aas
call
push
inc
popf
mov
sbbb
ss
andb
sub
mov
movd
daa
outsl
jle
movsl
dec
mov
arpl
or
lea
shll
lret
icebp
loop
loope
addb
xchg
pop
mov
or
jp
icebp
stos
mov
sub
les
bound
pop
pop
cmp
inc
arpl
jns
and
movlps
fwait
inc
repz
inc
out
hlt
push
adc
mov
or
cs
scas
bnd
adc
pop
jnp
jl
ret
add
ds
mov
mov
rol
loop
xchg
sub
cmpsb
push
xlat
pusha
dec
mov
in
setle
push
aas
adc
das
xchg
jp
mov
repnz
adc
adc
mov
jne
ret
aam
imul
shrb
mov
pop
xchg
stos
mov
add
push
mov
add
test
or
or
pop
fsubs
call
or
fdivrl
push
jae
push
stc
mov
rclb
fiadds
cmp
dec
orl
xor
xor
es
popa
dec
mov
ficompl
scas
ds
loope
and
repz
aam
add
jp
movsb
outsb
js
fimuls
sbb
nop
jl
mov
daa
push
jbe
scas
dec
mov
lock
cmp
mov
mov
xchg
ret
add
mov
cmc
adc
add
popf
shl
pop
mov
dec
sbb
aam
adc
aaa
pop
test
fistl
cmpsl
cs
pushf
sti
or
lods
mov
notb
scas
sbb
push
push
mov
pop
sahf
adc
sbb
in
push
cmp
test
mov
aad
mov
xchg
dec
inc
push
pop
add
cmpsb
jo
test
loope
sbb
jno
loope
dec
adc
pop
jp
sub
insb
mov
ja
in
sti
invd
lret
sti
gs
jle
push
push
jbe
int
lret
gs
stos
inc
rcll
int
popa
pop
lret
pop
pop
andl
sub
mov
shrl
leave
inc
adc
mov
push
push
dec
imul
or
mov
adc
fdivrs
mov
in
aaa
mov
mov
xlat
iret
add
push
or
sub
movsb
cmovge
out
add
popa
and
cmpsl
add
loopne
test
lds
mov
dec
dec
das
push
adcb
push
rorl
sti
in
enter
inc
mov
into
in
hlt
bound
add
jae
jo
andl
inc
jge
add
and
in
mov
fsubrl
cmp
or
mov
in
stc
inc
idivl
or
cmp
andb
add
mov
sbb
xlat
lret
andl
aam
cmp
ja
in
aam
jp
ljmp
stos
mov
pop
ds
call
shrl
ds
push
push
icebp
movsl
insb
outsl
cmpsl
mov
ds
mul
lock
ljmp
dec
insb
sub
pop
dec
fnsave
in
jbe
test
pop
andl
mov
shrb
cmc
sub
dec
repz
add
and
inc
sub
dec
mov
out
fcomps
test
mov
test
loope
imul
dec
pop
in
pop
scas
dec
adc
loop
xchg
sub
pop
pop
paddq
mov
xorl
lock
out
lret
mov
test
lret
inc
inc
pushf
xor
addr16
lds
push
jns
cmpsl
inc
mov
fbstp
pushf
in
shrb
enter
pop
mov
dec
ss
xchg
xor
std
jg
stos
das
sbbb
les
dec
and
les
cmc
adc
cmp
sbb
aas
add
mov
pop
add
or
pop
mov
push
xor
add
test
shlb
outsb
mov
scas
mov
push
aad
aam
test
inc
je
repnz
andl
dec
jns
xchg
mov
adc
and
fdivs
jmp
pop
testb
lock
imul
js
stc
mov
or
scas
insb
es
in
mov
or
adc
int3
les
inc
pop
sbb
fwait
xor
mov
das
push
lea
stc
insl
xchg
push
in
jb
fadds
push
jo
push
sbb
iret
stos
mov
fsubr
cltd
sbb
fsts
xchg
mov
jno
sbb
xchg
test
fmull
or
fbstp
lods
push
add
sbb
mov
loopne
arpl
repz
and
sbb
xchg
imul
fstps
stos
add
aad
dec
pushf
jge
pop
das
les
dec
repnz
out
jmp
sbb
pop
push
lahf
int3
add
mov
cmpsb
rcrl
outsl
add
sbb
mov
lods
and
sbb
mov
add
adc
ret
pop
xor
xchg
test
and
adc
leave
mov
xor
pop
push
jmp
xor
cltd
call
pop
pop
pop
push
scas
dec
les
mov
dec
dec
mov
ja
push
mov
arpl
jecxz
out
mov
and
cmpsl
mov
aam
cmp
add
out
mov
in
daa
scas
xor
mov
xchg
arpl
lds
sub
mov
sub
add
ja
push
mov
sbb
mov
repnz
cwtl
es
negl
and
push
push
push
and
imul
inc
push
out
cmpsb
daa
and
dec
in
fwait
or
popf
mov
pop
adc
leave
dec
push
icebp
repnz
xchg
mov
and
fs
jbe
mov
js
mov
fistpl
insb
jge
jbe
jp
dec
nop
lret
cmpb
jle
pop
mov
lds
pop
or
in
movsl
out
push
push
inc
and
mulb
js
je
mov
pushf
neg
xor
dec
or
pop
sub
leave
inc
dec
test
dec
xor
or
jg
or
and
sbb
test
cmpsl
lds
pop
push
mul
jns
jmp
fnop
dec
test
lahf
int
and
or
cltd
lret
repnz
push
inc
inc
dec
test
push
imul
jmp
mov
stos
xor
lret
dec
jae
adc
in
jnp
into
and
std
gs
inc
out
imul
daa
inc
andb
push
inc
pop
adc
xchg
lcall
iret
mov
cmpsl
jno
inc
xor
fptan
and
mov
sub
loopne
lcall
jbe
and
sbb
or
sub
jbe
arpl
fwait
xor
cmp
shrl
inc
fldt
jnp
dec
push
or
iret
bound
add
pop
testb
dec
mov
cmpsb
mov
les
lods
cwtl
add
fwait
mov
out
loop
int3
out
repnz
shrb
push
jbe
and
sbb
sbb
mov
out
mov
or
adcb
adc
pop
repnz
dec
call
or
insl
push
mov
cmc
cmpsl
mov
lahf
sbbl
fnstenv
or
push
ds
sub
cmp
mov
fucom
cmp
repz
not
minps
scas
inc
in
inc
sarb
pop
mov
push
gs
movsb
push
push
test
mov
call
test
mov
outsb
adc
push
xlat
test
and
stc
xchg
shlb
pop
mov
jecxz
fucomi
xchg
cld
rcll
or
call
and
mov
dec
fdivrs
or
ljmp
mov
cli
inc
sub
inc
in
popa
je
mov
jnp,pn
pop
adc
je
cmp
aaa
inc
gs
jl
cwtl
mov
int
fs
and
insb
into
stc
nop
mov
daa
repz
jp
mov
xchg
int3
sub
mov
sahf
jl
adc
loope
mov
lahf
mov
adc
mov
repnz
xor
sbb
mov
jbe
imul
pop
sbb
pop
outsb
cmp
cltd
jecxz
in
jg
out
movsb
mov
sbb
mov
mov
fidivrl
dec
jo
stc
push
test
cmpsl
adc
cmpsl
out
sub
aam
mov
sbb
pcmpgtw
clc
sarb
and
in
lds
or
jg
inc
ds
test
lret
lret
imul
fstpl
sbb
dec
cli
sbb
pop
xlat
ja
mov
sbb
and
insl
xchg
sub
inc
push
add
gs
gs
mov
incb
test
xchg
add
xlat
xor
pop
push
in
mov
lcall
loope
pop
loope
fidivrl
push
movsl
mov
pusha
and
cmc
inc
cli
cltd
stc
push
adc
jg
shrl
cmp
mov
pop
les
les
fidivl
xor
cwtl
mov
sub
xor
pop
inc
enter
les
pop
push
shl
test
fisubs
call
or
pop
push
movsb
sbb
push
es
andl
sub
out
leave
pop
pop
xor
in
fistl
scas
fcoms
cld
sbb
and
cmp
mov
in
je
lahf
scas
outsb
stos
mov
push
ja
clc
arpl
mov
js
push
daa
push
xor
xor
ret
call
add
ljmp
inc
lcall
addl
dec
mov
sub
cmp
mov
sbb
popf
in
and
sbb
cmpsb
and
cmpsl
ret
inc
int
push
mov
ds
adc
push
xchg
cmpsl
cmpsl
pop
sti
mov
mov
sbb
jno
test
mov
sub
push
loope
shr
shlb
cli
pop
sub
push
jge
dec
es
push
push
adc
jbe
push
or
out
data16
and
call
or
xor
push
out
push
cmp
fisubl
jae
js
mov
push
fwait
push
mov
popa
mov
fistpll
push
mov
xor
adc
mov
orb
xlat
xor
int3
pop
imull
clc
int
adc
scas
add
aad
jecxz
iret
pop
call
hlt
push
hlt
sbb
shr
into
js
add
pop
cmp
mov
xchg
stc
xor
dec
in
pop
in
inc
fwait
xchg
hlt
pop
outsb
ret
jp
loope
mov
pop
out
xchg
sub
les
push
in
mov
add
or
repz
rol
loopne
push
cli
or
adc
pop
mov
jnp
dec
adc
sar
lret
jmp
mov
repz
jp
frstor
and
pushl
push
xor
pop
mov
jp
js
lds
rcr
fcoms
pop
sti
in
dec
sub
add
dec
pop
pop
inc
mov
cwtl
aas
and
mov
pushf
xor
rol
mov
rcll
add
sbb
test
xchg
dec
pop
mov
outsb
mov
xor
mov
fisubl
push
push
inc
mov
add
mov
adc
insb
sbb
push
aas
aaa
int
repnz
test
push
in
in
movsb
cmp
inc
inc
push
dec
ret
cmp
add
stos
add
leave
mov
or
jns
ret
jb
xchg
mov
xor
ror
repz
int
push
nop
ss
aam
sub
lods
in
repnz
mov
imul
sub
mov
or
stc
into
icebp
popf
js
push
add
ficoms
dec
mov
inc
mov
push
aas
loop
les
pop
movsb
pop
loop
inc
icebp
stos
xchg
insl
lea
jge
aaa
das
adc
movsl
sub
xchg
mov
lahf
dec
jl
leave
sub
jp
add
cli
and
pop
sti
lods
insb
aaa
dec
xchg
stc
sbbl
fisubs
mov
mov
jge
jge
in
push
pop
iret
std
mov
xchg
jmp
rcrb
add
add
mov
jl
sub
shll
push
pop
cmpsb
ljmp
sub
inc
ret
cmc
inc
int
leave
gs
out
mov
cmp
xchg
lods
cmp
aas
fnstsw
xor
lods
in
cli
jmp
rcrl
lea
lret
xor
out
imul
mov
pop
cmp
pop
pop
cmp
lahf
dec
cmp
fisttpll
dec
mov
push
iret
arpl
inc
mov
dec
xchg
outsb
or
dec
dec
lds
test
dec
sbb
mov
xchg
xor
pop
push
hlt
aaa
jge
movsl
ljmp
add
ss
and
mov
call
call
scas
cwtl
inc
sbb
shrl
jnp
cmp
imul
mov
daa
add
or
sub
adc
int3
mov
mov
test
adc
fucomp
mov
daa
jne
cmp
sub
dec
mov
ss
ret
pop
mov
sbb
mov
out
test
inc
dec
sarb
push
mov
mov
mov
dec
pop
dec
cmp
call
xchg
lds
loope
inc
xorl
sub
xor
xchg
cmp
cmc
divb
push
cs
push
add
stc
fistps
adc
and
dec
stc
pop
cltd
pusha
add
push
ljmp
loopne
fs
sub
imul
icebp
je
fsubl
add
xchg
outsl
fisubrs
add
lcall
push
adc
cmpsb
mov
pop
pop
pushf
sub
pop
fidivs
fildll
int
or
ds
pop
adc
jne
cwtl
sahf
xchg
push
cwtl
leave
xchg
fs
movsb
inc
es
jmp
adc
shrl
xor
sub
into
cmp
call
outsb
test
pop
inc
adc
cltd
jns
sbb
jns
pop
sahf
push
dec
jbe
xchg
cli
pushf
jmp
lods
jle
popa
cmpsb
cli
iret
loope
shrl
cli
xchg
sub
decb
int
sar
mov
push
or
mov
cltd
mov
stos
xlat
rcl
repz
mov
and
inc
lods
jmp
push
xor
xchg
mov
flds
imul
bnd
stc
jnp
stos
push
xchg
cs
rclb
test
daa
into
and
inc
mov
fldl
mov
outsl
sub
stc
aaa
idivb
popf
jg
dec
pop
add
aas
in
scas
sub
fistpl
push
jg
std
cltd
pandn
repnz
out
aaa
mov
push
jns
and
enter
out
xor
jne
sub
or
and
xchg
cmpsl
aas
xchg
mov
add
rcll
lcall
push
push
mov
fld
sub
stos
lods
cmp
xor
xchg
data16
sub
push
out
repnz
insb
jg
jmp
stos
xor
mov
mov
sbb
add
pop
mov
cwtl
add
xor
dec
std
push
cmc
jle
mov
adc
push
rcrl
jecxz
pop
repnz
add
adc
xor
stc
xor
dec
xchg
jg
inc
mov
lcall
imul
mov
arpl
movsl
xor
jnp
mov
push
xor
mov
xorl
xor
js
int3
mov
in
int3
add
mov
sahf
icebp
movsl
andl
adcl
pop
in
jns
popa
mov
add
cmp
leave
jmp
push
shrl
mov
popa
cmp
stos
add
push
popa
xor
js
dec
pop
stos
cltd
mov
mov
mov
clc
mov
xchg
fists
xchg
ds
cli
or
mov
sub
aad
add
sbb
mov
or
std
push
or
pop
sub
nop
das
jecxz
xor
add
test
loope
push
jmp
adc
sbb
push
aas
push
icebp
or
iret
pop
jae
push
cs
or
mov
pop
adc
or
adc
fnstsw
test
std
je
and
loope
test
in
jg
repnz
out
xchg
add
push
aam
movsl
or
movsl
cmp
es
mov
jno
xor
xor
push
out
pusha
jo
je
in
mov
loopne
fs
push
stos
das
cmp
sub
mov
sbb
std
shll
jbe
incb
movsb
ffree
outsl
push
cmc
imul
inc
push
mov
or
cltd
std
int
adc
jnp
nop
pop
shlb
pop
popf
cli
xchg
cmp
pop
ljmp
add
or
mov
iret
cmp
jl
cli
lods
movsbl
ret
orl
xor
outsb
sbb
adc
popf
jns
arpl
pop
cmp
lret
dec
pusha
outsb
xchg
sbb
fsubs
shlb
scas
inc
cmpl
int
aas
or
or
andb
std
pusha
fwait
test
fdivrl
stc
into
sbb
push
xor
insl
mov
fstps
ret
sub
in
xor
lea
pushf
rcll
mov
es
lods
popf
dec
inc
out
mov
out
je
jmp
repnz
sahf
clc
cltd
cs
xchg
sbb
xor
lds
sbb
lods
leave
mov
push
push
add
fildl
subl
cmp
flds
pusha
mov
mov
or
sub
enter
andl
ljmp
add
sbb
sbb
int3
cld
lret
daa
test
idivl
cmp
push
pusha
pusha
pop
adc
fnstenv
hlt
outsl
xchg
add
ficoml
loop
stos
gs
dec
aam
jle
repnz
xchg
sub
adc
cmp
jns
inc
imul
icebp
and
dec
push
out
inc
cld
leave
stc
pop
outsb
inc
or
mov
cs
pop
scas
cmp
rcl
push
mov
add
pusha
xlat
sbbb
push
xlat
mov
add
adc
pusha
mov
xchg
outsb
pop
stc
imul
mov
call
sub
push
dec
pop
xor
xchg
pop
jo
pop
call
dec
in
jmp
jno
jns
cmc
adc
or
clc
out
inc
pop
jno
add
mov
loope
adc
xlat
add
insl
mov
mov
ret
adc
jp
jmp
inc
push
adc
ror
xor
push
insl
push
cmpsl
fdivl
mov
cld
sub
jmp
xchg
mov
sbb
pop
bswap
jnp
rcll
loopne
mov
jmp
pop
cmpsl
jmp
dec
data16
xor
daa
lahf
xchg
in
push
dec
sub
inc
orl
xchg
sub
jl
shlb
jno
pop
movsl
mov
ljmp
ja
in
test
ret
pop
jmp
ja
push
jmp
mov
movsb
lock
lea
mov
outsb
jle
sti
mov
push
int3
cmp
adc
adc
jae
ret
jb
les
add
aad
mov
popf
pop
mov
adc
sub
repz
jmp
sarb
add
mov
sbb
movsl
ror
inc
fisttpl
xchg
loop
lret
jmp
fdivs
adc
fcomip
rorb
pop
inc
pop
push
sub
cwtl
cltd
cwtl
cmp
inc
mov
pop
les
stos
shll
ds
xlat
lock
stc
mov
cld
dec
or
and
adc
imul
adc
inc
pusha
addr16
jmp
push
and
pop
ja
push
gs
mov
lods
inc
pop
mov
mov
cld
sahf
and
int3
jbe
sbb
out
lock
ds
and
pop
js
pop
dec
or
push
cwtl
dec
mov
cmp
sbbl
push
nop
nop
mov
push
or
push
sub
sub
xor
mov
pop
xchg
cmp
clc
lea
push
imul
pop
xchg
jle
pop
testl
imul
cltd
mov
ljmp
pushf
dec
or
cmpsl
sub
cmp
lock
dec
or
mov
pop
lock
add
test
test
daa
js
in
mov
cltd
jge
push
sub
mov
fwait
and
xchg
popa
or
mov
inc
push
data16
and
adc
filds
and
and
pop
cmp
xchg
push
mov
push
lods
cmp
int
icebp
sub
outsl
fsubrs
in
mov
mov
adc
pop
shl
sub
sbb
or
les
mov
gs
push
push
sub
insb
xchg
adc
rol
arpl
mov
loop
fsts
mov
stos
jbe
and
ficoms
adc
fldl
cmp
lret
add
push
imul
sbb
push
addr16
push
jno
xlat
outsb
sahf
mov
cmc
or
inc
sub
cmp
movsl
mov
xor
xchg
ret
aad
test
imul
lss
sbb
addr16
rol
xchg
aaa
cltd
imulb
ja
dec
lcall
pushf
push
aad
xchg
inc
test
xchg
mov
fistpl
cmpsb
into
lds
mov
shrl
cltd
xchg
dec
gs
std
sbb
or
ja
jg
outsl
and
xor
mov
test
dec
into
pop
insl
inc
fidivl
dec
and
cmc
and
adc
ret
or
fnstenv
lods
sahf
pop
mov
orl
dec
adc
add
call
or
je
sahf
jbe
or
mov
xchg
stos
jns
je
test
iret
shll
push
ja
test
xchg
mov
pop
jge
daa
hlt
popa
js
stc
aas
or
xlat
mov
mov
sti
stos
sub
mov
xchg
loope
mov
inc
sbb
push
fisubrl
mov
mov
lret
pusha
and
loop
inc
push
jmp
inc
push
test
lcall
clc
jnp
cmpsl
jnp
mov
lahf
mov
je
add
cmp
and
loop
pusha
and
xor
adc
pop
xorl
and
fstpl
aam
push
sbb
hlt
and
mov
in
add
icebp
loopne
pop
fildll
push
rcl
adc
cmc
xchg
sub
xor
sub
repnz
push
fdiv
iret
out
inc
popa
jnp
xchg
movsb
cmp
pushf
dec
add
mov
jae
outsl
sub
or
push
fistl
mov
mov
aad
mov
pop
xor
sahf
gs
dec
mov
mov
sbbl
js
jp
adc
fsubrl
push
add
je
enter
mov
popf
ret
roll
addr16
addr16
push
int3
and
mov
mov
fsubl
pop
in
mov
repz
xchg
in
nop
mov
aaa
or
pop
daa
pusha
loop
cmpsl
dec
rcrb
fs
xchg
shll
jecxz
cmpsb
hlt
outsl
xchg
insb
mov
sbbb
rcll
adc
mov
movsl
lds
dec
mov
xor
hlt
push
dec
fdivr
xchg
es
cmp
out
lods
in
sahf
xor
xchg
in
outsb
sub
hlt
lds
xchg
imul
mov
jl
test
cmc
mov
lret
dec
pop
cli
stc
add
mov
mov
das
imul
lahf
fisubrl
adc
xchg
xor
test
ds
cmpsl
xrelease
cwtl
pop
cmp
adc
jno
loop
out
mov
rcl
imulb
iret
loope
mov
mov
test
pop
push
in
das
scas
inc
faddl
mov
ficoms
das
loope
ss
add
js
fwait
jnp
jmp
fcomip
xor
movsb
inc
sbb
cs
scas
repnz
test
dec
cltd
and
mov
push
test
xchg
pop
aaa
ret
lret
fsub
stos
addr16
fsubrl
das
dec
fsubl
imul
fwait
jg
jb
lock
xchg
sub
and
bound
out
cltd
data16
std
cmp
jae
add
jp
sahf
jmp
adc
clc
jge
lods
ret
jl
cmp
and
test
mov
jnp
shrl
cmpsb
mov
test
repz
pop
adcb
dec
mov
bnd
cmp
mov
aas
push
xchg
scas
mov
mov
mov
clc
mov
push
sbb
test
aad
cld
mov
insb
cmp
and
mov
cli
jno
mov
int
jp
or
sbb
lret
or
jmp
nop
sahf
mov
jmp
adc
push
adc
cld
andl
jle
xchg
movsb
and
fxch
inc
aad
and
push
mov
lds
enter
lds
add
sub
stc
pop
add
push
loop
and
and
add
dec
mov
repz
pop
cmp
enter
sub
outsl
lret
jno
fwait
pusha
jo
cmp
push
movsl
ret
ret
sub
pusha
pop
sahf
testb
jge
ljmp
enter
push
sub
leave
int
iret
xor
xchg
daa
popw
sub
add
cmpsl
out
sub
cmp
jp
push
aam
jecxz
hlt
jle
rclb
and
inc
adc
inc
mov
push
int
jbe
icebp
sbb
sarb
pop
movsb
inc
and
shl
cmpl
dec
mov
jb
clc
jne
pop
sahf
stos
jge
les
stos
or
add
into
add
pop
inc
rorl
push
xchg
insb
clc
and
jo
mov
pop
adc
sub
arpl
pop
jns
lock
jge
mov
pop
popa
xor
xchg
adcb
mov
xor
xchg
in
bswap
adc
push
jmp
cmpsl
inc
push
adcb
pop
push
and
leave
mov
lahf
shl
push
lods
inc
pop
push
jge
mov
adc
jecxz
xchg
fucomp
in
test
out
in
fnstsw
clc
lock
xor
mov
fsts
pop
call
int3
jp
lahf
sub
int
dec
dec
and
jbe
mov
push
dec
and
pop
pop
test
dec
push
cltd
xor
shrl
fcomps
fmull
xchg
push
or
das
inc
add
mov
push
cmp
jae
push
cs
pushf
mov
aaa
les
cmp
cs
cmp
dec
or
dec
les
jbe
insl
jge
and
xchg
in
out
cs
add
mov
movsb
add
sub
clc
sbb
inc
inc
add
inc
push
sbb
pop
adc
xor
sbb
cmp
inc
push
aas
out
cmp
sub
mov
bound
adcl
lcall
pop
jl
sahf
outsl
repz
xchg
imull
cmp
movsl
in
clc
loopne
mov
sub
cltd
fstpt
pop
movsb
mov
xchg
ret
jp
js
cmp
fldenv
int
push
jne
movsb
ds
fwait
mov
imull
nop
out
jp
add
shll
mov
out
ja
imul
mov
mov
fisubrl
cmc
inc
push
cmp
or
push
fidivl
xor
xchg
aaa
into
ret
in
fs
push
in
sahf
shrl
adc
outsb
in
mov
push
ja
xchg
sub
xor
int3
mov
fwait
push
adc
mov
xor
xchg
loop
mov
cmpsb
stos
mov
fnstenv
jge
jle
lods
xchg
ds
jmp
out
test
daa
std
and
insl
fisttps
mov
adc
dec
dec
aas
test
popa
cmpsb
cmp
and
jo
push
lahf
xorb
cmp
ja
jecxz
mov
mov
pusha
in
pop
mov
stos
push
lret
xlat
inc
mov
jmp
jb
rep
test
push
jno
lds
xorb
ss
push
inc
in
test
cmp
cmpsb
rcl
xlat
push
sbb
dec
dec
shlb
sbbl
adc
outsl
dec
xchg
movsl
jp
rcll
mov
mov
mov
aas
adc
adc
ret
les
add
sub
cs
mov
rcrb
out
sub
mov
fisubl
les
pop
repz
inc
jne
in
fistpll
add
mov
test
mov
outsb
clc
push
push
or
jg
push
leave
fnstcw
je
nop
shl
sahf
cmc
mov
int
out
jp
aam
or
lods
sbb
and
dec
inc
mov
sarb
jbe
insl
pop
sub
or
add
lods
cmp
lods
ljmp
out
and
sub
icebp
lods
mov
mov
dec
icebp
popf
jnp
enter
cmpsb
pop
mov
aaa
sbb
mov
sarl
sbb
dec
xchg
pop
scas
mov
shl
fidivs
or
cmp
imul
ss
and
xchg
imul
repnz
xor
mov
cs
xor
push
mov
jecxz
testb
mov
rcll
mov
pop
mov
cwtl
pop
loop
mov
repnz
aaa
in
sbb
sahf
jne
cmp
sbb
mov
xor
push
pop
inc
mov
xor
push
in
test
mov
lret
lock
icebp
add
push
test
cli
inc
xor
enter
push
mov
fdivs
inc
pop
jle
push
mov
and
mov
outsl
sub
shrb
mov
ds
cltd
sbb
ror
and
int
inc
sahf
inc
jle
lea
pop
mov
testl
cmp
inc
cwtl
stos
dec
insl
mov
aaa
leave
enter
lahf
mov
adc
fildl
xchg
sub
stc
pop
rorb
fwait
jns
test
mov
and
pop
inc
fdivp
mov
xor
jns
push
mov
xchg
movb
pop
add
in
ret
sbb
mov
sub
orb
cwtl
pop
adc
push
aaa
es
pusha
jle
int
mov
mov
stos
mov
les
mov
sub
push
sub
mov
dec
cld
lcall
emms
lea
sub
add
sub
jg
jnp
xor
dec
sbb
sub
das
sbb
inc
fisttpl
mov
clc
jl
xchg
idiv
adc
jl
lahf
cmp
popf
xchg
in
pop
push
xor
ljmp
test
lea
pusha
or
testb
repz
cmpb
mov
aam
mov
cmp
mov
lods
xor
lds
jbe
sbb
push
or
clc
xchg
aas
or
in
lcall
mov
dec
stc
jecxz
repz
xor
les
lods
xor
mov
jne
arpl
ds
lret
insl
shl
cwtl
push
jb
pop
ret
movsb
push
repz
jmp
xchg
scas
jo
jne
int3
mov
sti
push
cmp
out
push
jae
dec
fisubrl
shrb
nop
int
stos
inc
inc
mov
rorb
push
in
notl
sub
fisubs
test
iret
clc
gs
loope
clc
adc
add
jnp
push
testb
fisttpl
sub
jecxz
idiv
movsl
xchg
xor
dec
lods
mov
jle
std
int3
cld
mov
insl
pop
gs
cwtl
push
hlt
dec
pop
jnp
movb
pop
rcll
sub
loop
pop
xor
inc
mov
xchg
daa
cs
pop
out
repz
xchg
cmpsl
mov
repz
stos
jecxz
mov
decl
dec
std
outsl
dec
clc
jbe
dec
das
or
loopne
or
push
cs
jle
ljmp
add
lock
test
stc
cmp
jle
lea
dec
and
out
loope
lods
add
and
inc
rcrl
lret
xor
clc
jmp
add
jne
test
xchg
ds
int
out
mov
xchg
cmp
ljmp
pop
mov
pop
ja
jo
push
mov
shll
inc
inc
ret
pop
jb
out
cmp
loop
dec
inc
test
jo
add
test
loop
jmp
mov
repz
xchg
sub
loopne
cltd
and
or
or
mov
lret
sub
mov
sbb
out
xchg
sub
enter
xchg
mov
pusha
push
push
xlat
leave
or
jno
pop
xor
test
fidivl
push
sub
mov
subb
jmp
scas
jl
xchg
pop
xlat
push
jg
repnz
and
mov
ljmp
mov
sub
cmp
test
adc
ret
outsl
xchg
xchg
cs
clc
pop
ret
lret
adc
cmp
inc
sbb
mov
out
pop
jnp
pop
jmp
cmp
dec
call
cld
movsb
cmp
daa
leave
int
ret
ret
mov
mov
sbb
les
out
mov
subl
je
mov
mov
daa
dec
xchg
fisubs
in
std
push
int3
sahf
mov
dec
mov
lret
bound
mov
fcom
ljmp
data16
lret
mov
cs
mov
out
pop
pop
popl
and
inc
lods
and
jle
push
push
mov
cs
stos
popf
inc
cs
cli
inc
push
cmp
xchg
xor
jbe
scas
push
adc
ss
jle
movsl
inc
push
pop
or
push
sarb
stos
loope
and
scas
sahf
push
sbb
push
call
xor
pop
jo
push
in
ja
pop
xor
xor
or
sahf
nop
sub
mov
mov
jbe
lahf
cmp
jne
cmp
or
and
jbe
repnz
pop
xor
cmp
mov
leave
pop
jmp
sub
imull
ret
repz
js
sbb
les
fisttps
add
es
sbb
cmp
fstpl
out
dec
cmp
xor
arpl
scas
inc
fidivrl
push
popf
mov
popf
sbb
scas
out
orl
inc
jl
jns
lea
cmp
nop
popf
test
xchg
les
mov
hlt
lret
jmp
dec
add
ds
pop
movsb
pop
outsb
test
not
adc
lret
and
or
inc
push
je
adc
push
adc
pusha
orb
push
xchg
nop
push
xor
or
cmpsb
xchg
sahf
fcomi
jge
add
rcrl
push
push
pop
mov
or
fists
mov
or
lret
cmp
mov
cmp
sbb
or
dec
int3
xchg
fstl
in
std
sbb
push
mov
in
shl
cmp
stos
aaa
push
xor
fimuls
jl
mov
mov
sbb
cmp
cmp
jle
adc
jo
mov
ja
je
fs
aaa
or
cs
jns
mov
add
cmp
aam
pop
and
sbb
cltd
or
bound
xchg
mov
or
push
mov
mov
repnz
out
pop
frstor
sub
mov
xchg
movsb
xorb
sbb
lock
mov
pop
fisttpl
div
lea
in
add
cmp
out
mov
ficomps
add
jae
mov
xchg
jnp
xchg
mov
dec
arpl
pop
dec
cmp
pusha
push
movsl
xchg
xor
int
or
and
inc
jb
mov
bound
movsb
push
jbe
adc
and
dec
sbb
jne
out
xor
cwtl
movsb
push
pop
out
icebp
lcall
pop
int
cmp
dec
pop
repz
stos
adc
cmp
rcrl
lcall
jne
jne
xor
in
pop
adc
xchg
sub
pop
pop
inc
add
mov
in
xor
xor
cmp
push
push
sbbb
aas
mov
sub
jge
repnz
pop
xchg
call
mov
sbbb
mov
icebp
or
shll
mov
arpl
sbb
rcrl
out
lea
stc
icebp
xchg
xor
stos
dec
inc
data16
rcrb
stos
mov
or
mov
pop
mov
out
cmpsl
pop
mov
div
lods
mov
dec
dec
lods
faddl
lret
dec
push
adc
sub
cmpsl
add
mov
inc
dec
adc
mov
iret
insb
idivl
jbe
lahf
jbe
scas
pop
jb
mov
cld
outsl
movl
xchg
sub
or
mov
jle
or
mov
ret
cmp
dec
insl
in
lcall
sbb
out
xor
xchg
cmp
inc
mov
out
or
mov
in
imul
stos
add
xor
jae
push
xchg
push
lods
pushf
inc
fiaddl
cmp
push
adc
aam
push
lret
and
ja
es
sbb
hlt
jmp
xor
mov
lret
dec
in
push
push
sub
sbb
mov
ss
mov
loopne
cmpsl
sbb
fadds
ja
movsb
cmp
push
jae
fistps
pop
dec
xor
mov
and
out
mov
fwait
mov
pop
outsl
notl
add
aaa
out
fs
jecxz
cmp
push
daa
or
pop
js
daa
jg
dec
in
push
xchg
mov
push
jnp
outsb
fnsave
je
int
push
dec
mov
inc
and
aas
stos
inc
lfs
xchg
scas
outsb
dec
addr16
inc
and
mov
mov
xchg
xchg
test
jo
xor
dec
aam
xchg
xchg
rcll
lods
fsubr
loopne
push
cmp
push
shr
dec
rcll
iret
int3
in
add
sbb
inc
rorb
ss
bnd
push
xor
insb
xchg
mov
push
or
dec
inc
lock
in
inc
fnstcw
add
xor
pop
es
inc
xlat
lock
xor
int
outsb
arpl
out
ss
cmp
arpl
jl
in
sti
addr16
shr
dec
aaa
es
xorl
sbb
fcoms
imul
push
arpl
pop
popf
sbbb
rcll
neg
out
subl
scas
mov
int
mov
sbb
mov
lds
adc
mov
test
mov
scas
inc
in
out
jg
mov
or
scas
and
push
mov
in
cmpsb
enter
pop
insb
sub
hlt
sbbl
push
mov
add
mov
pop
cltd
sbb
mov
fs
pop
cld
mov
std
jge
ret
dec
xor
mov
xchg
addr16
ss
xor
pop
arpl
xor
fisubrl
push
fisubrs
dec
aas
pusha
push
lock
xchg
icebp
mov
fimull
shlb
mov
sahf
xorl
or
and
or
xlat
les
adc
mov
xchg
mov
clc
cwtl
lods
sub
stc
jo
imul
sub
orl
int3
adc
repnz
fnstenv
je
repnz
push
adc
lret
push
inc
sbb
out
add
popl
mov
or
mov
test
int3
lods
ss
sbb
cmp
jge
jo
mov
repz
push
lods
mov
add
push
rolb
pop
mov
stc
mov
test
out
xchg
fimuls
mov
shlb
push
cltd
int
sbb
scas
inc
push
jl
adc
repz
mov
std
pushf
jns
push
jbe
jb
mov
fstpl
sub
adc
call
stos
sbb
lea
sub
inc
sarl
movsl
pop
push
cmc
inc
push
roll
push
mov
xor
mov
push
push
ss
jg
ds
jne
inc
jge
pop
mov
mov
mov
or
rclb
or
hlt
rcrl
sbb
xlat
jns
xchg
aas
xchg
dec
test
lcall
clc
inc
mov
insb
push
movsb
fwait
xor
cld
mov
cs
inc
fidivs
sbb
mov
subb
mov
dec
dec
and
inc
gs
jae
dec
xor
rcll
jbe
jnp
sub
sbb
lods
lcall
mov
adc
mov
adc
imul
push
mov
daa
arpl
pop
lret
js
jg
out
xor
fwait
sbb
inc
es
cli
xchg
ja
inc
shrb
cmp
xchg
pop
push
inc
hlt
xchg
fs
aaa
es
mov
inc
or
sub
stc
jmp
adc
pushf
xchg
push
cli
jecxz
mov
clc
cltd
pop
mov
add
xchg
xor
jnp
ficompl
mov
dec
xchg
in
movsl
sbb
mov
inc
sub
sub
jg
into
enter
or
arpl
jo
push
sub
pop
bound
mov
jle
stc
mov
in
mov
aaa
loope
clc
popf
adc
mov
xor
sub
dec
lahf
aam
sub
cmp
sbb
pop
mov
movsl
ja
pop
mov
lods
imul
clc
jl
int3
loopne
sbb
ret
adc
bound
repnz
jae
aam
incb
and
das
push
addr16
sbb
cltd
mov
das
pop
sti
inc
sbb
add
faddl
aad
sbb
dec
push
jns
bnd
ret
add
or
inc
add
aam
lea
addr16
sbb
mov
stos
mov
push
xor
test
jnp
cld
dec
out
iret
notb
dec
aas
aam
jg
sub
enter
adc
lea
and
fldcw
cmpsl
inc
dec
pop
shlb
mov
sbbl
daa
movsl
ljmp
enter
daa
rcl
mov
stc
loopne
pop
test
cmp
clc
or
mov
movsb
adc
popa
clc
imul
sti
repnz
xor
sub
ds
mov
sbb
xor
or
xchg
mov
jae
dec
in
xchg
jns
std
pusha
pop
call
addl
xor
popa
testl
cld
mov
repz
movsl
int3
insl
add
jnp
inc
cmp
cltd
js
shll
xchg
cmp
addl
pop
pop
cmp
mov
scas
pop
pusha
adc
jp
arpl
pop
in
lea
inc
pusha
push
js
call
repnz
lock
jl
popa
subb
or
jp
insl
fbstp
cmpsl
or
inc
push
jns
jle
xor
shr
inc
push
adc
mov
frstor
les
cmp
daa
jne
sahf
push
inc
stos
xor
inc
dec
jg
cmpsl
inc
lret
mov
push
pop
sbb
rclb
sbbl
push
sub
xchg
int
push
daa
out
movl
int3
lret
mov
pop
test
in
sahf
jae
xor
xlat
frstor
xor
out
mov
mov
or
loopne
dec
sub
fcomps
out
test
push
dec
arpl
int
addr16
shll
mov
imul
xchg
adc
les
ss
fstps
add
mov
push
push
cld
and
psrad
repnz
repnz
cmp
faddl
fidivrs
mov
cmp
out
sbb
ljmp
sub
call
dec
cvtps2pd
jle
movsl
movsl
lds
nop
stc
or
mov
icebp
jg
push
jmp
cmp
sub
dec
mov
out
out
mov
jno
pop
mov
into
or
test
data16
call
mov
in
mov
loopne
cmp
jae
test
inc
add
sub
sub
out
push
push
daa
repnz
push
faddl
fucomi
in
into
inc
mov
sub
popf
scas
dec
adc
dec
pop
notb
mov
or
mov
sbb
outsb
ss
fwait
lods
dec
or
pop
xchg
sti
xchg
loope
repnz
xor
sbb
in
aam
in
xor
push
and
push
cli
shl
jnp
in
fnsave
sub
or
stos
mov
xor
fistpl
das
cmp
dec
cmp
xchg
cld
xchg
xor
lahf
lretw
add
or
mov
jecxz
imul
jmp
sub
pushl
sbb
inc
leave
sbb
in
setns
rcrb
mov
mov
loope,pt
push
cmpsb
dec
push
xor
int3
inc
cmp
addr16
mov
jb
fs
xchg
mov
pop
mov
addb
mov
mov
cltd
push
flds
cmpsl
sbb
lea
mov
or
out
cmp
mov
addr16
fwait
sti
mov
out
inc
addr16
insl
xchg
in
rolb
push
mov
mov
cmp
imul
clc
fiaddl
push
xchg
mov
fdiv
cltd
test
ficoms
mov
in
pop
mov
jl
fnstcw
ss
inc
int3
pop
out
cld
pop
das
lods
jne
fidivrs
int3
into
popf
nop
xchg
mov
or
ja
add
dec
cwtl
fistps
out
adc
loope
mov
xchg
pop
in
pop
int3
mov
mov
jne
fcmovbe
xor
lahf
push
push
shll
jmp
mov
push
rclb
and
je
add
xchg
mov
sub
cmpsb
aam
loopne
jge
sub
stos
cmp
scas
imul
xorl
sub
cmpsb
mov
cmc
ja
cmp
test
mov
pop
test
into
sahf
push
push
insb
jmp
push
jns
bound
into
and
bound
push
push
and
mov
mov
dec
mov
sbb
inc
cmc
inc
in
fidivl
push
and
xor
mov
lock
adc
sub
insb
adc
xor
sarl
xchg
push
repz
cmp
loope
or
and
cld
xchg
add
sti
push
mov
test
inc
mov
out
mov
lds
inc
add
ja
int
stos
jle
mov
mov
mov
push
dec
add
xlat
jmp
outsb
and
das
jg
iret
gs
mov
xchg
xor
dec
sub
xor
push
inc
scas
push
push
out
cld
inc
in
adc
out
test
mov
xor
incl
mov
testl
jno
ret
pop
outsb
cmp
mov
mov
push
cmp
fisubs
mov
jle
inc
ret
jae
outsb
add
adc
cpuid
iret
or
dec
ds
or
sub
and
xlat
scas
adc
shlb
insl
mov
filds
cmpsb
mov
fsin
aad
scas
and
sbb
dec
cmpsl
das
in
sub
outsl
mov
iret
sub
mov
inc
icebp
inc
aad
daa
and
movsb
bound
enter
mov
mov
jnp
cmp
js
mov
data16
fdivs
push
ret
jp
out
addr16
aam
shrb
adc
incl
push
std
cmc
and
rcrl
push
shl
loop
xchg
dec
xor
cwtl
cmp
xchg
ud2
pop
jg
dec
les
pop
pushf
jmp
mov
add
inc
inc
dec
mov
cmp
dec
icebp
jnp
xor
xchg
cmp
push
push
adc
cmp
mov
xchg
sbb
adc
push
xor
xor
and
test
mov
lahf
es
sbbl
or
xchg
repnz
mov
jnp
or
sarb
imull
inc
cmp
inc
dec
cmc
outsl
or
adc
sub
or
cli
adc
lea
lea
cmp
inc
mov
adc
cld
cltd
xor
jmp
lcall
push
roll
movsb
ficompl
xor
adc
call
xor
es
repnz
sub
dec
cmp
jl
out
js
jecxz
push
lcall
in
mov
jb
aaa
jb
mov
fstl
js
fidivl
cwtl
xor
rcrb
std
or
xchg
fwait
xchg
scas
add
sti
mov
std
dec
xchg
movsb
push
or
mov
pop
shrl
jmp
xor
mov
adc
xchg
popf
fisttpl
sbb
pusha
stos
pop
and
push
movsl
pusha
inc
add
lret
cmp
jecxz
mov
adc
aas
sbb
dec
stos
add
call
loope
pop
sbb
jae
dec
mov
cmpsb
scas
xor
pop
cmp
jle
icebp
xchg
pop
sbb
jge
pop
js
jecxz
outsb
mov
mov
movsl
movsl
inc
in
test
mov
mov
mov
mov
ret
pop
notb
jb
adc
xchg
mov
in
add
arpl
push
ljmp
inc
leave
and
pusha
dec
lods
sbb
dec
sahf
push
or
cmp
loopne
push
imul
xchg
in
xchg
pop
push
lds
ret
pop
push
dec
and
jg
nop
push
cwtl
pusha
rcrb
mov
in
fcmovnu
mov
push
lods
sbb
fists
je
test
push
cwtl
mov
xor
or
test
or
fs
movsb
mov
mov
inc
adc
push
adc
je
xchg
test
scas
shlb
lret
enter
les
mov
in
push
pop
mov
and
rol
inc
in
mov
rolb
sub
cmp
sahf
or
push
daa
mov
jne
inc
in
xchg
mov
jecxz
in
or
or
xchg
dec
sbb
stc
lock
arpl
fs
adc
dec
movb
jbe
sbb
push
cs
data16
push
pop
outsl
iret
jp
xchg
push
leave
nop
ss
mov
pop
mov
not
mov
fstl
cmp
pop
cli
pop
push
dec
dec
add
test
push
mov
push
fisubs
popf
sbb
cmc
xor
xlat
jns
push
pop
lea
aas
mov
pushf
dec
jmp
add
sar
cmpl
xchg
push
or
mov
pop
push
inc
xlat
popa
mov
mov
scas
lods
cmp
outsb
mov
shrl
enter
jmp
fwait
addb
lods
or
pushw
aad
pop
cmp
pop
sbbb
sub
cmc
les
add
cwtl
lods
mov
loope
mov
mov
stc
mov
add
fidivrl
dec
or
test
xor
mov
loopne
push
rolb
nop
push
cli
jecxz
popf
or
cmp
loop
pop
pop
cmpsb
into
shlb
mov
or
dec
cmpl
stc
and
inc
push
js
jns
fsubrp
mov
xor
xor
lret
jg
test
mov
lock
into
and
outsl
xchg
test
mov
or
out
dec
dec
sub
idivl
cmpl
mov
xchg
inc
cmp
imul
xchg
add
mov
sbb
int
dec
pop
and
jnp
arpl
lahf
pop
jg
sbb
dec
loopne
sub
shlb
test
movsb
mov
lret
jne
js
shll
testb
nop
dec
cmc
leave
mov
add
inc
xchg
dec
insw
cmpl
jge
or
addl
in
pop
and
fistl
insl
test
fisubs
push
cmc
adc
pop
xorb
movsbl
outsb
jne
jns
int
mov
in
jae
mov
push
in
je
adc
out
insl
outsb
rclb
or
pop
fwait
or
aad
xchg
xor
xchg
jno
mov
movsb
dec
aas
push
out
cmp
dec
sbbb
sbb
sub
cmp
pop
cmp
dec
outsl
cmp
loopne
loope
aas
in
std
cltd
and
pop
xchg
mov
inc
in
xor
pushf
sbb
leave
dec
inc
inc
rolb
push
out
and
movsb
push
and
loopne
pop
sub
mov
decb
and
aad
or
jno
add
xor
cmp
or
and
call
sbb
bound
popf
push
cmp
inc
das
pop
mov
out
jns
cmpsb
lcall
out
xchg
cltd
sbb
jb
fmuls
pop
xor
jns
push
js
push
aam
aad
lea
mov
mov
call
adc
xchg
push
dec
lods
dec
fimuls
loopne
das
pushf
cs
lcall
dec
insb
mov
jnp
mov
lods
jns
xchg
sub
cmpsl
dec
daa
inc
enter
dec
push
adc
fcmovu
mov
cmp
loopne
popf
mov
jle
idiv
aad
sti
lds
movsb
adc
addl
adc
xor
scas
jg
inc
pop
jnp
popa
add
iret
xor
push
filds
lret
add
sub
push
fwait
out
lret
push
jb
movswl
in
push
movsl
cmpsl
adc
cmp
enter
in
cli
or
or
ret
push
bound
popa
xor
orb
fdivs
jns
xor
leave
or
out
push
stos
dec
enter
mov
xchg
vcvtsi2ssl
and
dec
fucomip
ja
add
add
mov
inc
lahf
test
daa
xchg
outsb
sub
ljmp
sbb
outsl
mov
leave
pusha
push
test
das
out
mov
jp
mov
lods
mov
mov
pop
sbbl
cmc
aas
xor
seta
in
das
jge
mov
add
ret
int3
and
and
sub
lahf
sarl
in
paddd
jno
loop
pusha
dec
test
je
rcll
aam
and
mov
out
adc
mov
repz
jne
es
pop
shlb
les
addr16
dec
mov
cmpsb
mov
ret
insl
inc
lret
cmpsb
gs
and
ds
pop
and
push
cmp
cmc
cmp
and
ret
jle
sbb
or
pusha
inc
lret
rcrl
shrb
mov
ljmp
cmc
and
rcr
jbe
push
out
xchg
js
push
sub
imul
int
mov
mov
jae
es
pusha
pop
ljmp
sbbl
add
test
sti
xor
andb
loope
mov
inc
ljmp
std
inc
mov
mov
jge
jp
and
in
add
push
je
sub
sahf
out
mov
jmp
add
jmp
rorb
mov
push
jmp
xchg
or
inc
mov
pop
call
add
ljmp
xchg
push
outsb
cld
push
xchg
pop
aad
push
or
mov
ja
ret
dec
jge
adc
inc
popf
sub
in
inc
push
inc
dec
out
sbb
hlt
ret
rcll
xchg
fsubs
add
enter
pusha
adc
mov
push
mov
arpl
sub
test
adc
and
pop
mov
insl
inc
lock
call
mov
repnz
mov
inc
shll
out
inc
std
das
loope
cmpsb
test
add
nop
stos
jg
add
in
movsb
outsb
clc
shl
dec
xor
int
insl
ret
cmp
xchg
push
mov
xor
dec
xlat
fwait
jecxz
jle
test
lcall
xor
and
shl
pushf
enter
jne
cmpsl
ds
js
sbb
loopne
pop
cmpb
cmpsb
add
or
std
and
rolb
add
mov
mov
fstps
test
mov
mov
mov
clc
out
jno
inc
int
out
stos
cltd
outsl
int
popl
movsb
sti
lds
mov
push
sub
in
mov
xorb
jl
xlat
jge
popa
jo
ljmp
incb
out
mov
cmp
test
lahf
js
movsl
test
push
or
xchg
mov
ja
sbb
les
xor
mov
cmpsb
adc
repnz
leave
lods
cltd
and
mov
aaa
lock
inc
pop
loop
insl
jnp
mov
loope
mov
pop
pop
push
cs
lds
lahf
mov
xor
pop
pushf
jo
hlt
popf
and
push
xor
jl
mov
sbb
sub
ret
js
xor
popf
mov
dec
adc
roll
sbb
outsl
arpl
pop
imul
fnstsw
jmp
push
cli
mov
in
gs
lock
dec
pop
sarl
pusha
xchg
je
fmul
mov
popa
clc
lret
jbe
xor
sbb
and
testl
aam
inc
mov
pop
cwtl
fistl
or
das
mov
rolb
cwtl
aaa
push
add
mov
xchg
lcall
rolb
sub
add
arpl
mov
int3
push
push
xchg
jg
cmpsb
scas
mov
outsl
pop
inc
mov
dec
mov
xlat
ds
fwait
push
call
jecxz
ljmp
outsl
fsave
test
push
cmp
test
cmp
and
xchg
jmp
daa
push
jb
mov
adc
ljmp
int
mov
add
push
les
sbb
inc
push
mov
push
jp
cwtl
das
xchg
mov
jmp
ret
dec
lods
and
loope
cmpsl
adc
xchg
mov
mov
in
sbb
ret
cld
push
dec
ret
pop
loope
pushf
lea
mov
stos
cli
mov
sbbl
stos
cld
and
jnp
inc
int3
lods
arpl
cltd
arpl
ret
lahf
xorl
jge
mov
clc
testl
jne
inc
mov
pop
fs
mov
js
insl
adcl
rclb
xchg
inc
xorl
stc
pusha
dec
push
push
scas
or
and
jmp
jle
mov
std
sub
dec
stos
jo
ficomps
test
sub
rolb
insl
mov
cli
jb
iret
inc
aas
loope
adc
mov
repz
daa
or
jns
mov
cltd
jmp
and
cmpsl
ret
flds
loope
jge
pop
clc
rorl
add
inc
mov
push
pop
ja
inc
push
jns
dec
sahf
lret
sti
jmp
sub
lahf
and
adcl
dec
inc
push
hlt
lods
lds
sbbb
dec
lahf
cmp
mov
jno
lods
hlt
ret
sbb
sbb
cli
mov
lods
call
js
lea
sub
vpandn
mov
repnz
jle
mov
call
pushf
xor
fisubrs
cmp
and
pop
in
cs
shrl
repnz
fiaddl
pop
jae
push
push
jne
pop
sub
cltd
mov
in
inc
std
in
adc
push
lcall
test
xlat
insl
jno
movsl
fs
xchg
pushf
scas
mov
test
pop
movsb
dec
shr
push
loope
movsl
cmp
jl
jl
lock
testb
pop
jbe
xchg
lods
and
lahf
cmp
or
lret
push
mov
leave
outsl
push
jno
roll
pop
ret
stos
pop
jp
xchg
ljmp
jno
xor
popa
clc
mov
repnz
add
adcb
cmp
call
in
cmp
rorb
lcall
hlt
jmp
sbb
xchg
in
cmp
stos
add
jl
rol
pop
movsb
jae
lcall
dec
jo
mov
sbb
pop
jl
stc
jg
mov
inc
aad
pop
mov
loopne
adc
in
fcoms
sub
xchg
push
lods
push
jmp
imul
sti
xor
sbb
aam
push
xchg
cmp
bnd
cmpsl
data16
or
ja
shlb
roll
sahf
push
and
repz
rcrl
jo
inc
ffree
mov
xchg
pop
cltd
inc
pushf
mov
or
xor
std
and
mov
pop
inc
pop
fdiv
inc
int3
scas
stc
pushf
test
and
mov
lds
and
std
popa
lods
inc
mov
popf
std
rorb
in
or
dec
push
lret
lret
and
or
call
sbb
mov
push
out
dec
aas
fdiv
clc
sahf
hlt
xlat
int
jge
jge
adc
lcall
dec
jmp
std
or
gs
loop
mov
cwtl
dec
xor
push
add
addb
cmp
or
jo
aaa
scas
cmc
mov
cmp
lea
mov
cmp
call
or
test
mov
sbb
test
jns
test
mov
and
mov
into
aas
mov
push
orl
daa
ss
inc
jge
push
ret
jge
aas
xchg
jae
mov
xor
jno
scas
mov
dec
test
addb
mov
fiadds
js
mov
sahf
sub
add
mov
dec
push
icebp
jl
cmp
add
jo
mov
fnstcw
rolb
jne
mov
push
mov
cmc
xor
sub
stc
out
inc
cmp
inc
movsl
sub
dec
pop
mov
stc
sbbb
mov
mov
push
jl
adc
aam
push
sub
stc
in
fnstcw
repz
adcb
cmp
inc
jmp
adc
subb
bound
lods
fiaddl
and
push
inc
mov
add
cmp
pop
fcoms
or
jno
inc
int
inc
pop
cmp
jo
xchg
int
cltd
xor
leave
sub
or
push
jmp
repnz
fs
inc
fstpl
pop
add
sub
cmpsb
lahf
jb
rcl
int
adc
or
inc
xchg
fisubrs
test
negl
dec
cmc
es
rcrb
sbb
xor
ss
inc
cmp
jne
and
loop
leave
inc
data16
ds
out
or
out
es
mov
jecxz
repnz
xchg
scas
popf
pop
scas
or
es
andl
fsub
adc
xchg
ds
push
scas
inc
and
ss
adc
mov
pop
jne
bound
test
fwait
and
mov
mov
or
pop
hlt
scas
xor
pop
jb
clc
lret
mov
pop
stc
push
scas
push
in
jbe
mov
push
aam
xlat
dec
inc
and
shlb
add
loope
sbb
jl
jbe
cmp
cmp
test
push
fimull
dec
xor
frstor
cltd
dec
loopne
adc
cmpsb
in
mov
cld
xchg
rcll
add
mov
mov
aad
push
fsubrl
sub
stc
movsb
adcl
mov
roll
adc
ljmp
xor
inc
lcall
insb
adc
scas
jae
ljmp
and
dec
adc
lahf
or
cmpsl
push
xchg
std
rorl
mov
xchg
and
int3
xlat
inc
push
and
add
lret
inc
cltd
add
vmovupd
sub
jo
jno
mov
dec
sub
mov
cwtl
sbb
xchg
into
jp
cmpsl
and
std
insb
aas
mov
nop
daa
push
lods
jbe
jno
imul
sbb
mov
inc
dec
scas
push
in
testb
cmc
cmp
mov
ja
mov
jns
mov
adc
sbb
mov
fimull
nop
imul
xor
loopne
mov
test
scas
aas
dec
mov
das
push
test
out
inc
dec
sbb
hlt
mov
fidivrs
xchg
inc
sbbb
cmpsb
or
push
stc
icebp
push
ds
decl
dec
aam
stc
add
stos
rcll
fdivrl
shll
addr16
rorb
inc
repz
xor
clc
cmpsl
fs
jns
cmp
inc
lock
je
or
into
out
cmpsb
cmp
mov
movsb
rolb
and
inc
inc
scas
sahf
in
shrb
jle
inc
xchg
jg
cmpsb
shll
popa
idivl
push
addr16
sbb
dec
cmp
arpl
lods
xchg
jmp
int3
stc
and
and
stos
sub
inc
pop
inc
leave
inc
fstps
addl
jge
hlt
pop
jns
mov
iret
fstpl
jo
cltd
sub
mov
mov
scas
pop
stos
es
sub
cwtl
cmp
add
les
rorb
add
and
xchg
popa
adc
or
sub
jecxz
push
sub
shrb
cmp
insl
sub
ret
sbb
jnp
lea
enter
and
imul
mov
jmp
popl
mov
repnz
push
out
movb
xchg
insb
jmp
push
dec
clc
inc
aad
pusha
ret
lock
frstor
daa
iret
jecxz
xchg
fldt
mov
popa
clc
lsl
jbe
xor
andb
and
adc
roll
notb
enter
jl
jle
mov
sbb
es
xor
push
or
lds
xor
rcr
aad
int3
and
int
inc
jbe
mov
fs
xchg
push
xchg
les
hlt
pop
loop
xchg
pop
shll
mov
jecxz
rcr
pop
fildll
sbb
pop
xchg
ficompl
scas
dec
jecxz
call
pusha
movsb
inc
mov
ret
jb
jno
iret
roll
cmp
jae
add
push
dec
insl
mov
fidivl
sbb
pop
aad
xor
jge
adc
enter
ret
cwtl
repz
mov
push
pop
jbe
dec
lds
rclb
fcmovnu
jb
fisubs
outsl
loop
pop
sub
push
pusha
lds
ja
or
xchg
movaps
pop
sbb
sub
cwtl
out
xchg
cmp
push
adc
clc
mov
mov
inc
sarl
pop
fucomip
xor
cld
cli
test
sub
mov
je
xchg
sub
shrb
mov
aad
push
test
lret
xchg
js
in
pop
adc
sub
xchg
dec
shrl
stos
xchg
sub
cs
sub
push
pop
icebp
or
movsl
mov
and
dec
ljmp
xchg
sub
pop
hlt
subl
pop
lods
hlt
jnp
push
fldt
orl
pop
fiadds
mov
add
adc
and
rcrb
pop
and
cmp
adc
lret
addr16
repz
inc
xor
dec
jmp
loopne
push
mov
and
push
movsl
mov
daa
lret
dec
pop
inc
mov
movsb
dec
pop
pop
push
sub
aaa
aad
jbe
xlat
push
xchg
push
pop
in
mov
sub
out
fstpl
fcomps
leave
lret
cs
push
inc
std
inc
inc
outsb
push
ja
mov
cmpsl
mov
sbb
add
sahf
sub
push
mov
adc
jle
loope
mov
add
fstpt
inc
int3
or
es
mov
add
mov
mov
rcr
pop
lds
sbbl
push
insl
cwtl
cli
push
lea
les
or
fwait
mov
jmp
test
mov
mov
js
into
gs
stos
mov
add
pushf
push
xor
je
or
daa
shl
lahf
pusha
push
mov
addw
inc
xchg
dec
inc
stos
jge
pop
in
lock
and
or
shll
lret
push
aaa
jge
in
shlb
lahf
inc
dec
in
andl
jp
add
jle
mov
outsl
hlt
std
in
jmp
jno
rcrb
adc
lock
push
stc
sbb
sub
xchg
mov
stc
cmc
lea
dec
pop
in
add
mov
insb
insb
sbb
or
pop
adcl
pop
aaa
mov
in
push
xchg
cld
pop
mov
dec
leave
pop
mov
out
add
and
or
mov
sub
pop
test
nop
popf
pop
jnp
pushf
shr
int3
sbb
or
push
mov
inc
pushf
xor
in
inc
shll
mov
shll
fldl2t
ds
lock
idivb
imul
add
mov
ret
lea
mov
sti
dec
lds
jle
popa
cmp
inc
scas
mov
subl
les
push
push
sbb
or
or
jae
jne
mov
and
xchg
rolb
pop
loop
xor
dec
aam
push
adc
gs
jno
or
inc
add
sub
mov
repz
div
into
mov
lret
cmp
inc
adc
loopne
dec
add
aaa
in
je
dec
test
or
push
xor
adc
in
js
push
imul
inc
fcom
cmpsb
outsb
xchg
jp
movsl
lahf
je
mov
lret
aam
mov
mov
push
xchg
mov
js
pushf
jl
stos
xchg
fsubrl
sbb
mov
fwait
cld
sbb
dec
cld
cmp
mov
loopne
jmp
out
jns
stos
dec
push
movsb
insl
cltd
pop
insb
lret
jo
xchg
sub
dec
cmp
mov
das
daa
repz
sub
sti
scas
ret
cs
imul
cmp
pop
mov
inc
loopne
ret
xchg
shrl
or
ja
test
ror
movsl
iret
mov
out
das
int3
cwtl
je
fisubs
xorl
sahf
js
in
mov
adc
mov
jbe
aaa
jnp
imul
into
gs
lret
jge
imul
and
aam
jge
fwait
push
mov
ss
and
cmc
push
cld
imul
mov
fiadds
ljmp
pushf
jl
aaa
xor
jmp
ds
add
repz
leave
pop
dec
bound
pop
mov
push
repz
xorb
mov
in
icebp
lret
mov
and
pop
loope
loop
sbb
dec
int
mov
inc
shlb
jo
test
fnsave
push
jnp
ljmp
push
loope
or
int3
xlat
jmp
mov
ret
shlb
adc
mov
lock
loop
sbb
lock
lahf
sub
sub
pop
out
cmpsl
xor
push
imul
sub
mov
mov
lcall
sbb
cmc
movd
xchg
stos
dec
int
out
jno
mov
mov
and
iret
xor
setge
cmovb
fistpll
jno
inc
sub
fiaddl
incb
dec
out
ss
xor
jo
pushf
roll
out
roll
mov
push
push
dec
push
xchg
sbb
and
xor
or
mov
lcall
sbb
push
mov
push
inc
addr16
push
mov
or
cld
sub
sbb
lret
je
daa
stc
and
js
sub
fdivrs
movsl
xchg
pusha
xlat
pop
movsl
xchg
adcl
pop
sub
and
sub
mov
scas
lock
stos
xchg
xchg
cmp
and
jg
mov
ret
xor
xchg
filds
mov
stos
call
notl
jmp
push
insl
lock
loopne
movsl
pop
test
adc
or
sbb
adc
xchg
xor
decl
pop
inc
shrb
mov
out
daa
fwait
scas
sub
mov
cli
sti
xchg
push
sti
jne
ss
adc
xor
sbb
cmp
or
dec
hlt
and
cmpsl
out
fcoml
sbb
sbb
scas
imul
adc
leave
push
xchg
mov
fstp
mov
mov
mov
in
sub
fmul
clc
cmp
cmpsl
rcr
and
sar
bound
mov
or
lret
cmovle
adc
dec
adc
cmp
lock
mov
or
push
rorl
push
loopne
dec
enter
jae
add
fdivp
dec
roll
cwtl
add
pusha
mov
pop
out
sub
ja
incb
and
or
mov
in
cmp
imul
and
pushf
pop
ret
fsubl
es
add
cwtl
cmp
nop
push
inc
dec
lahf
sub
fst
mov
cmc
iret
in
or
jl
std
push
add
loope
cmc
mov
mov
wrmsr
outsl
imulb
pop
popf
inc
in
mov
inc
dec
loopne
jbe
loop
dec
repnz
xchg
rcrb
call
mov
rorb
mov
into
shl
jecxz
or
mov
stc
cwtl
lds
adcb
jns
xchg
jne
push
xchg
idivb
addr16
inc
sub
cmp
mov
lds
and
roll
mov
imul
insl
aad
mov
popf
repz
je
notb
fiaddl
sti
pop
repnz
and
xchg
or
sub
sub
mov
jmp
ret
inc
push
dec
scas
idivb
dec
adc
sahf
sbbb
out
cwtl
out
repnz
orl
rorl
cmp
lret
in
repnz
mov
subl
mov
int
jecxz
fisubs
stc
jo
inc
xlat
pop
xchg
inc
xor
sub
rcll
jp
daa
push
mov
adc
inc
and
xor
es
dec
cmp
mov
ret
popa
stos
xchg
jne
jb
imul
test
call
sub
mov
add
add
sti
jno
sarb
addr16
fdivl
jp
cltd
sub
add
lret
enter
loope
sub
ret
sarl
outsb
jg
push
sub
xlat
or
mov
jnp
lock
push
jecxz
nop
stc
mov
in
cmpsb
cmp
or
lds
test
popf
lods
mov
fs
fimull
in
pop
xchg
addr16
stc
fwait
and
das
dec
loopne
or
sbb
mov
mov
mov
mov
pushf
hlt
adc
sub
or
mov
pop
mov
mov
inc
pushf
and
int3
das
or
aam
inc
pop
xchg
test
mov
sub
shl
sub
xchg
fldpi
sbb
pusha
dec
push
loope
push
out
cmpsl
dec
jb
mov
and
scas
stc
mov
add
call
rcl
stos
pop
int3
arpl
fistpll
shr
mov
inc
test
rcl
jbe
push
pop
mov
xor
or
fwait
jnp
push
sub
xchg
rclb
in
stos
rolb
fnsave
push
or
inc
jmp
xchg
mov
adc
outsl
push
push
out
jae
outsl
adc
mov
rcl
xchg
push
call
in
std
ds
add
mov
and
repnz
cltd
stos
xchg
xchg
aad
mov
cmp
mov
mov
cmp
ficomps
shrl
mov
pop
xchg
push
lock
jle
arpl
add
inc
test
pop
outsb
pop
inc
fidivrl
mov
clc
inc
stos
inc
jl
and
pmaddwd
xor
mov
push
sub
adc
push
xchg
mov
push
int3
xlat
xor
cmp
lret
sbb
sbb
adc
push
xchg
push
cmovle
repnz
mov
push
movsl
loopne
sub
sahf
orb
cli
insl
out
orl
fdivrs
fisubs
mov
adc
shrl
data16
insb
mov
cmpsl
scas
mov
out
test
mov
aam
add
imul
adc
mov
adc
jne
sbb
call
nop
xchg
pop
stc
jmp
or
push
or
iret
cmp
push
xchg
pop
aaa
push
stc
sub
xor
push
fsubp
lock
pushf
mov
js
stc
lcall
enter
dec
fists
push
or
in
ja
sbb
rcll
cmp
cmpsb
inc
and
in
jp
mov
jbe
mov
jae
pop
jecxz
sub
mov
and
xor
dec
xor
popa
cmpxchg
push
ret
push
mov
dec
loopne
ffree
pusha
int
clc
or
cmpsl
je
sub
mov
dec
iret
inc
bound
imul
cmp
inc
cmp
inc
sub
fs
and
arpl
xchg
stc
or
arpl
pop
adc
ss
sbb
mov
dec
fldcw
in
inc
or
pop
enter
mov
adc
jb
frstor
add
and
inc
shl
xchg
xor
dec
sbb
dec
out
sbb
movsl
shll
xchg
rorb
shrb
add
sarl
sub
xlat
pop
mov
clc
jo
mov
ret
and
test
inc
sbb
cmpsb
xor
fidivl
mov
cld
push
dec
push
jge
test
jle
mov
orb
hlt
mov
xlat
mov
scas
out
popa
and
repnz
std
xchg
mov
xor
sbb
scas
add
cltd
sbbb
jne
xor
aas
mov
push
outsb
add
dec
push
jp
and
dec
test
jge
dec
xchg
sahf
ret
popa
or
fnstenv
xchg
in
out
jmp
inc
ret
lahf
test
or
xor
aas
cmp
gs
push
out
sub
inc
and
jmp
outsb
or
mov
subl
mov
inc
or
ds
imul
adc
out
xor
jmp
loopne
mov
sub
inc
mov
inc
out
mov
rorl
mov
push
js
mov
xchg
imul
std
js
xchg
repnz
dec
mov
and
mov
gs
jp
cmovo
jecxz
pop
cmp
lea
inc
xor
or
sahf
jmp
int3
pop
mov
fwait
repz
std
out
xor
or
inc
and
pop
push
inc
sbb
repnz
xor
cld
lods
outsl
xor
test
xchg
into
mov
xchg
pop
cltd
pop
jbe,pn
push
and
pop
movsl
imul
cmp
shrl
pop
push
lods
ljmp
es
jne
leave
shl
into
ja
jle
inc
gs
andl
pop
leave
shrb
addr16
add
and
pop
sbb
iret
inc
fidivl
sarl
push
push
in
dec
in
mov
or
cmp
aas
popa
cs
push
loop
or
test
or
add
cmpsb
dec
test
pop
dec
testb
lcall
sahf
mov
sbb
fldl
shr
lahf
nop
pop
mov
xor
pop
rolb
jne
inc
imul
jbe
cld
lcall
cmpsl
lea
orb
negb
mov
and
xchg
shrb
fwait
add
cld
cmp
test
es
adc
jle
lret
xchg
jg
add
stos
ds
data16
or
inc
mov
xchg
dec
daa
adc
pop
sub
or
decb
pop
pop
ljmp
cmp
push
push
inc
shufps
cmp
xor
pushf
mov
lret
inc
add
xor
mov
push
dec
aaa
adc
xor
sub
sahf
ja
cmp
mov
fwait
xchg
or
dec
aam
push
xlat
inc
fcoms
aaa
scas
rcrl
inc
shrl
inc
pop
sub
dec
pop
add
adc
xorb
cltd
pop
mov
fdivrs
jo
mov
jp
out
shll
xchg
mov
outsb
test
fdivl
ja
mov
ljmp
pop
repnz
daa
or
stos
mov
push
sahf
or
pop
in
push
iret
pop
adc
dec
fsubrs
inc
dec
jge
mov
push
out
es
add
adc
dec
loop
clc
mov
xor
inc
hlt
shl
fwait
xor
sahf
jae
sub
jge
outsl
daa
aam
push
mov
rclb
dec
mov
and
shrl
out
into
iret
or
xor
sub
adc
fisubs
movsb
jnp
inc
pushf
add
enter
adc
mov
loopne
push
lret
hlt
pop
mov
loop
cli
xchg
dec
loopne
bound
cld
inc
dec
xorb
sbb
and
pop
sub
sub
xor
push
pusha
loopne
imul
fidivrl
push
xchg
cmp
xchg
ficoml
jns
repnz
mov
mov
sub
test
add
push
xchg
add
insb
inc
lods
mov
pusha
imul
cli
idivb
or
sbb
xchg
jmp
mov
pop
cmpsl
es
adc
adc
in
pop
out
clc
mov
cmc
scas
ret
inc
add
and
sti
dec
push
int3
jle
rclb
das
cmpsb
ss
jecxz
lods
das
lea
adc
pop
adcb
test
scas
imul
or
adc
mulb
add
push
add
push
mov
push
fiaddl
xchg
cmp
loopne
or
repz
dec
jp
mov
jnp
pop
mov
psubsb
xchg
pop
fwait
sti
xchg
cmp
enter
ss
pop
hlt
prefetcht0
push
xchg
push
mov
cld
pushf
addr16
popa
add
movsb
adc
in
mov
loopne
pop
xchg
jp
and
pop
outsb
out
sub
mov
cmp
mov
and
sahf
push
mov
aaa
insl
fwait
push
enter
mov
scas
mov
inc
lock
push
add
cmc
and
xchg
fimuls
arpl
fistps
in
notb
and
sbb
jle
dec
pop
test
nop
scas
outsl
xor
idiv
lahf
std
inc
lret
sbb
push
mov
insb
nop
in
mov
daa
dec
xchg
jnp
aam
das
mov
ret
lods
call
sbb
push
mov
jne
or
mov
adc
lds
rclb
sbb
shll
sub
data16
and
adc
popf
jo
loope
into
fwait
insb
fcmovne
mov
int3
out
push
call
xchg
shr
mov
lahf
fstpt
mov
imulb
mov
dec
rcrl
rorl
stc
mov
push
lahf
pop
aas
mov
pop
xor
bound
sub
inc
jecxz
jns
pop
loope
dec
jp
jae
popa
clc
mov
jle
pop
es
adc
loop
adc
dec
mov
xchg
jno
add
add
cmpsb
je
and
popf
out
sub
popa
fucom
xor
call
pop
mov
jmp
and
cmpb
imul
dec
lret
fldl
in
and
fldenv
fistpll
push
dec
aam
xor
jne
jnp
adc
pop
imul
test
lods
pop
sbb
addr16
cmp
cmpsb
stos
pop
push
jmp
gs
es
inc
mov
adc
les
in
mov
imul
test
cs
jp
arpl
jbe
ss
xorl
clc
add
out
lods
cmp
or
cwtl
out
out
in
and
lea
in
adc
ljmp
mov
adc
push
inc
sti
xor
roll
jg
leave
nop
lahf
stos
mov
movsl
xchg
je
xchg
sub
sarb
cmc
aas
out
inc
xchg
es
shrl
mov
lcall
loop
pushf
add
insb
bound
sbb
insb
shld
sbb
xchg
test
js
and
dec
movsb
scas
out
mov
pop
fiadds
pop
pop
fwait
jno
das
push
mov
push
inc
clc
mov
divb
jnp
fwait
add
and
pop
push
add
es
jbe
xor
or
mov
sub
sub
pop
sbb
jns
clc
sub
pop
mov
jl
jnp
in
lret
jg
and
xchg
pop
sbb
add
test
xchg
adc
mov
add
sbb
cs
aad
sbb
sub
pop
mov
movsl
ret
inc
cld
lock
jl
adc
jp
ljmp
movsb
idivl
popa
jle
shrb
nop
rcll
lock
xchg
mov
sub
lods
js
mov
test
nop
inc
cli
es
in
imul
xchg
notl
mov
idivb
rclb
push
push
xchg
sub
xor
nop
in
cmpsb
inc
in
icebp
or
push
scas
inc
mov
popf
mov
jbe
test
sub
push
out
data16
push
inc
popa
mov
mov
mov
addr16
idivb
mov
xchg
sbb
cmc
ret
fucomip
or
fmull
xor
or
mov
pushf
test
clc
outsl
or
or
cltd
sub
push
mov
add
cmpsb
je
loop
mov
dec
sub
inc
mov
aaa
insl
xor
cwtl
sahf
lcall
loop
jg
pop
mov
shll
pop
sub
mov
mov
and
mov
inc
or
lea
in
cltd
xor
inc
push
pop
dec
jge
in
fidivrl
lds
repz
and
ja
pop
pop
pop
push
stc
inc
or
rcll
lcall
test
popa
adc
dec
int3
adc
aad
push
in
pop
outsl
popa
lret
insl
shlb
in
and
rorl
out
jecxz
int
lret
push
sahf
fnstsw
gs
int3
lock
dec
dec
push
lock
in
int3
dec
jnp
jo
xchg
dec
xchg
adc
cltd
int3
fdivp
mov
movsb
xabort
fucomi
push
adc
and
jne
mov
inc
xlat
dec
mov
xor
jge
fcoml
leave
in
inc
dec
inc
xchg
fsubrs
sbb
decb
hlt
jmp
insb
mov
fsubrl
js
inc
scas
stos
test
sarl
sbb
mov
test
xor
add
aad
dec
bound
xchg
xor
dec
es
sbb
outsb
jle
push
out
dec
sti
fst
and
fwait
add
pushf
lahf
jmp
push
xor
int
push
ret
dec
pop
ljmp
cmp
dec
mov
or
testb
push
lea
pusha
fdivr
call
ss
das
in
add
mov
out
xchg
add
sarl
outsl
imul
add
scas
xchg
cmpsl
or
daa
das
dec
dec
cmc
orl
lods
pop
ja
mov
das
sbbl
sbb
and
dec
dec
insl
dec
hlt
orl
xchg
pop
inc
xor
std
sbb
cmpsl
cld
mov
jo
insb
jl
jne
fs
in
xlat
dec
xchg
pop
loopne
scas
fisubl
push
sub
or
fwait
sbb
js
mov
ret
sub
insl
cs
les
fisttpl
outsl
inc
and
mov
pushf
mov
dec
pop
sbb
inc
mov
mov
and
sub
push
xorl
lock
sub
pop
inc
sahf
sbb
test
jno
das
call
test
es
pop
testl
rdpmc
lods
test
mov
or
outsb
cmpsl
dec
jl
les
adc
out
mov
movsl
iret
push
mov
jns
jbe
xor
adc
mov
arpl
push
loope
shr
pop
ja
mov
cmp
bswap
scas
and
test
dec
in
xchg
cmpsb
jno
fstpt
sbb
orl
xchg
movzwl
test
sbb
lcall
fnstcw
and
lods
mov
inc
loop
inc
mov
push
adc
sbb
scas
stos
stc
into
shr
add
dec
pop
mov
push
out
cmc
fwait
or
lock
cwtl
cmp
inc
in
mov
lds
arpl
xchg
pop
dec
movsb
lds
mov
jmp
push
shlb
roll
imul
jno
iret
loope
pop
cmp
js
es
sbb
or
pop
jecxz
mov
dec
mov
mov
or
or
cmp
addr16
pop
cmp
mov
add
sbb
and
add
cld
pop
mov
fdivrl
jno
mov
push
popa
mov
and
sub
std
jae
test
xchg
sbb
push
ret
jbe
or
jb
imul
mov
cmp
add
fbld
push
stc
push
les
jg
or
lahf
fwait
adc
add
mov
test
jp
dec
jne
das
inc
fsubrs
cmp
test
mov
sbb
inc
push
inc
fisubs
and
cmpsl
inc
inc
push
cmp
das
add
xchg
and
push
outsl
sbb
ja
mov
icebp
in
mov
out
das
xchg
push
cltd
sbb
sbb
mov
js
outsl
sub
jg
mov
out
imul
xlat
leave
mov
mov
pop
aaa
mov
mov
and
dec
loop
mov
bound
cmp
jecxz
jb
or
ljmp
pop
sub
pop
push
divb
sub
dec
aaa
imul
ret
in
pusha
ss
js
iret
and
movlps
pop
mov
inc
dec
jns
loope
mov
call
adc
or
jb
mov
push
adcb
sbb
mov
outsl
lods
adc
push
cmp
sub
cmpsb
aad
xchg
pop
mov
jb
sub
pop
stos
hlt
sbb
push
out
enter
dec
popa
cmp
mov
movsl
loop
mov
inc
mov
mov
aam
sbb
mov
test
add
sub
or
jae
cld
hlt
mov
dec
jmp
adc
mov
cs
mov
dec
data16
aam
pop
or
mov
mov
inc
xchg
mov
lret
mov
mov
comiss
fildll
fmuls
mov
int
clc
adc
fiaddl
daa
and
mov
mov
pop
das
cmp
movsl
in
sti
sahf
push
shl
jno
adc
mov
xor
into
in
mov
xor
je
jae
push
je
js
decl
scas
test
cwtl
inc
in
inc
stc
sahf
arpl
aad
mov
adc
add
and
mov
orb
push
mov
jl
into
outsb
js
mov
sbb
movsl
imul
imul
cmp
cmc
stc
adc
test
ja
inc
cltd
mov
out
insl
mov
mov
push
in
inc
prefetchw
xor
shrl
inc
sub
xchg
mov
jns
ret
push
cmpsl
imul
push
mov
push
mov
mov
push
arpl
outsb
jno
fsubl
lret
xor
mov
test
xchg
sbb
enter
cmpsb
or
and
sub
xor
dec
fs
fldt
int3
or
xor
inc
cmp
jg
call
add
push
gs
inc
inc
xchg
and
into
fwait
lods
or
lods
andl
jg
jmp
push
adc
sub
pop
ret
mov
das
lods
or
dec
rorb
lods
pop
sub
dec
dec
mov
dec
data16
pop
cmp
ljmp
mov
mov
mov
dec
mov
jge
xor
aam
jns
rorb
lds
ja
mov
in
fisubrs
aam
fiaddl
xor
lds
cmp
inc
dec
iret
pop
ss
cmp
xor
dec
je
jmp
push
insl
f2xm1
addr16
and
adc
push
jb
mov
or
mov
mov
dec
scas
and
imul
sbb
fidivs
leave
sbb
ja
movsb
mov
test
loope
mov
sub
mov
adc
imul
sbb
popa
mov
pop
fbstp
lcall
in
orl
and
xor
jae
ret
pushf
dec
jmp
cld
loop
xor
and
in
rolb
fstp
and
xchg
pop
mov
xchg
bound
lds
xlat
pop
test
or
out
movb
xchg
arpl
jno
mov
sub
push
in
fstl
dec
cmc
cltd
jle
bound
sub
ds
jle
inc
pop
cmp
add
xor
insl
dec
xor
mov
hlt
lcall
pop
in
ja
clc
push
cmc
hlt
mov
popf
add
or
mov
int3
aad
test
and
negb
lahf
xor
fcmovnb
cmpsb
jge
cmp
jno
fcompl
fnsave
test
push
jge
adc
dec
lods
pop
lock
mov
sbbb
icebp
lea
push
lods
shrb
cmp
pop
push
popa
or
mov
inc
xlat
sbb
sbb
test
dec
adc
add
stos
shlb
leave
pop
imulb
data16
andl
adc
add
xor
fs
push
sahf
clc
sbb
adc
ljmp
push
int
push
jmp
sub
dec
and
data16
test
fwait
lea
mov
rcll
not
stos
popf
lods
cmp
inc
cmp
fstps
push
int3
mov
fistl
mov
sarb
movsl
cltd
adc
int3
clc
test
sub
sbb
push
mov
pop
les
jg
into
jno
mov
ljmp
lcall
or
dec
and
shlb
aaa
into
cs
rorl
push
in
aas
repz
stos
sbb
mov
ret
shlb
out
mov
sbb
mov
inc
divb
mov
xor
add
pop
inc
ja
push
or
ret
dec
xchg
ja
addr16
mov
enter
lods
test
es
mov
adc
mov
es
adc
adc
les
and
fbld
negb
jns
pop
repz
sub
iret
idivb
scas
daa
sbb
cli
cmp
sbb
sub
mov
fstpl
dec
leave
sub
loop
test
mov
mov
ret
push
jb
adc
rcrl
pop
mov
ret
xor
sbb
sarb
sbb
in
stos
add
and
aas
pmulhw
fnstsw
jb
xchg
dec
lea
and
adc
lret
in
ljmp
adc
sahf
inc
into
test
xor
in
mov
jle
pop
mov
in
frstor
mov
push
and
add
mov
mov
mov
pop
xchg
lea
push
inc
or
decb
xchg
push
adc
or
push
jge
mov
imul
aas
or
push
xchg
stc
lahf
push
sub
jno
int
pop
jmp
add
inc
pop
addr16
xor
jo
mov
pop
jl
scas
test
rorl
mov
mov
pop
adc
iret
jecxz
orl
out
sbb
pop
adc
ljmp
xor
xchg
lock
pop
xor
iret
sbb
popa
xor
xchg
push
cmp
rcrl
loopne
adc
add
fmull
lea
out
les
fisubs
mov
popf
lods
mov
lods
ja
daa
mov
test
push
push
and
clc
cmpsl
sbb
mov
in
std
pop
cmc
insl
pusha
or
mov
popa
jl
push
sbb
inc
sbb
xchg
xlat
add
xlat
sub
ret
pop
push
hlt
mov
or
mov
mov
lret
rcrl
xor
ljmp
inc
pop
icebp
mov
lret
and
ret
addr16
imul
insb
mov
push
fiadds
adc
pop
subl
mov
mov
in
movsl
test
lret
inc
dec
xor
adc
inc
dec
or
leave
mov
popf
mov
mov
jmp
in
enter
fdivl
sbb
decb
repnz
xchg
sbb
shll
or
add
push
shl
jnp
lock
aam
cmp
lret
scas
mov
jbe
and
inc
cmc
adc
aas
dec
in
push
scas
jb
or
dec
inc
adc
rolb
mov
lahf
xchg
jo
dec
jnp
nop
iret
xor
into
mov
sti
leave
cmp
cwtl
fs
xchg
adc
loopne
xchg
ds
mov
faddl
das
mov
clc
arpl
cli
mov
fstpl
jle
dec
or
icebp
inc
xchg
nop
pop
cmp
cli
lock
mov
incl
mov
test
adc
mov
dec
mov
xchg
mov
adc
jg
shlb
pop
adc
callw
push
push
fbstp
movsl
ret
ret
jle
gs
mov
aas
lods
lea
xchg
sahf
adc
jb
push
sbb
lea
setno
ds
in
notl
mov
sbb
inc
cmpsb
sbb
mov
cwtl
mov
add
jne
movsb
pop
out
std
pop
paddw
inc
dec
call
sti
push
inc
sbb
aaa
xchg
push
pop
xchg
cmp
stos
stc
data16
jne
cmp
sbb
loopne
push
sbb
repz
sbb
aam
pop
push
repnz
sub
xor
stos
mov
cmpsb
adc
pop
sub
push
stos
mov
test
pavgw
sti
push
adc
xor
cld
adc
add
add
shll
mul
nop
adc
fstps
mov
dec
inc
fdivrl
and
sti
ficoml
out
and
xchg
cmp
lcall
mov
ja
mov
outsl
sub
xchg
pop
cmp
cmp
jbe
subl
inc
int3
pop
sbb
xor
enter
adc
push
cmp
sbb
push
mov
sbb
orl
ja
pop
jo
or
xor
outsl
inc
adc
sub
pop
lock
movsl
js
in
in
adc
push
lcall
mov
out
mov
fisttpll
xor
outsb
mov
cltd
bound
in
loopne
cmpsl
rcrl
inc
imull
mov
jmp
sti
inc
add
xchg
push
pop
xchg
push
inc
mulb
cwtl
xor
push
imul
mov
push
push
push
dec
test
test
xlat
cmpsl
dec
data16
xor
daa
sti
mov
inc
jle
pushf
mov
mov
and
push
in
add
push
fcomip
inc
pop
lret
movd
or
es
adc
sub
pop
xor
hlt
clc
aas
daa
dec
cltd
xor
stc
lock
shrl
repnz
cld
aaa
loopne
das
aas
dec
sub
imul
insl
rcr
repnz
or
idivl
fdiv
xchg
mov
mov
ja
mov
fdivs
mov
rolb
and
mov
jmp
xchg
rcl
sub
shll
stc
aas
adc
lret
xchg
or
loope
sub
jle
cmp
pop
dec
mov
xor
jp
sbb
aam
sbb
lret
adc
loopne
nop
pop
xchg
sub
iret
imul
mov
xchg
cmp
mov
stos
cwtl
inc
int
add
xchg
pop
mov
outsb
jle
rcll
xorb
mov
sti
sbb
mov
adc
or
lods
or
mov
jle
sub
cwtl
add
cmc
push
or
cmp
xchg
orl
xchg
xlat
push
hlt
lea
imul
adc
push
cmp
pop
in
mov
cmp
movsl
or
sahf
addr16
or
test
inc
fwait
sub
jmp
adc
js
fdivl
and
daa
icebp
or
lods
jp
cmpsb
lea
pop
cmpsl
cmp
and
lods
xchg
test
mov
mov
jl
xchg
scas
daa
arpl
or
add
clc
xchg
insl
inc
rclb
test
js
push
jl
xchg
je
mov
jg
loop
inc
mov
or
cmc
test
sub
jecxz
adc
test
mov
cmp
mov
outsl
enter
or
lcall
xchg
mov
inc
roll
andb
subb
cld
dec
push
data16
cwtl
pusha
divl
lea
leave
sbbl
scas
push
stos
xchg
mov
ss
xchg
adc
dec
shll
mov
inc
fsts
ret
push
pop
jbe
adcl
add
test
sbb
in
repz
adc
cwtl
notb
daa
pushf
jo
cmp
aas
xchg
and
ljmp
loope
mulb
daa
leave
stos
fnstsw
int3
arpl
popf
movsl
sti
imul
inc
idivl
enter
enter
fucomi
cs
out
fwait
mov
xor
xor
cmp
test
pop
shrb
mov
ja
and
dec
dec
mov
jp
xchg
sub
scas
fidivs
push
mov
movsb
pop
rcrl
loopne
jg
xor
push
mov
test
dec
and
mov
push
insb
mov
cmp
scas
inc
mov
jmp
pop
cwtl
dec
mov
addb
test
jge
ret
sub
add
pop
dec
outsl
mov
push
pop
fstp
add
or
lcall
sbb
mov
loopne
jmp
xorl
or
fdiv
dec
pop
inc
lret
movb
jne
dec
cmp
vmovups
push
negb
mov
pop
call
lods
mov
test
mov
mov
imul
xchg
push
cmp
xlat
in
push
leave
or
lea
pop
test
lds
inc
shr
minps
push
test
add
dec
es
scas
push
jo
pop
scas
push
mov
pop
xchg
pop
dec
mov
push
ret
fnsave
inc
lods
jg
fwait
xor
adc
xchg
or
sbb
add
adc
mov
fistpl
cmc
jle,pn
xor
lods
movsb
xchg
pushf
mov
fcmove
imul
movsl
adc
mov
jae
mov
bound
push
dec
inc
bound
jp
mov
add
xor
mov
and
dec
dec
push
sbb
xchg
mov
mov
test
lds
pop
out
push
aas
adc
in
xor
xchg
push
jnp
mov
pop
xor
cli
dec
jo
ds
stos
dec
out
test
pop
xchg
add
jmp
cmp
sbb
mov
xor
stos
out
or
int
rcrb
push
lods
addr16
dec
je
inc
dec
out
push
mov
js
xor
sub
xor
mov
pop
or
cmp
mov
inc
shll
dec
pop
sbb
adc
data16
shrb
stos
fnstcw
push
jmp
adc
adc
outsl
push
xorl
movsb
lea
ljmp
out
adc
mov
aam
neg
xchg
mov
inc
das
sbb
pop
sub
mov
out
push
mov
push
add
pusha
ljmp
jo
push
rorl
add
out
jle
cmp
push
xchg
jo
jg
sti
and
mov
add
shrl
sbb
cmp
pop
dec
mov
data16
cmp
mov
dec
pop
icebp
jg
pop
cmp
and
dec
imulb
setl
adc
scas
cld
inc
data16
andl
inc
arpl
ret
cmp
sub
inc
mov
jb
jmp
mov
ss
jno
fsubrl
push
ret
fs
pop
out
adc
scas
nop
mov
adc
outsl
daa
xor
push
fidivrs
xor
les
push
mov
repz
xor
adc
stc
loop
fucom
xor
jge
pop
fs
rorl
cmp
inc
out
sti
je
lahf
add
mov
pop
and
int3
mov
jecxz
arpl
xlat
test
mov
xor
aaa
in
lods
inc
or
lret
rcrb
imul
dec
jmp
cmp
push
imul
mov
cwtl
mov
jno
add
outsl
xchg
sbb
es
xor
inc
lods
bound
cmpl
aam
mov
test
push
xor
xchg
dec
iret
popf
out
push
les
movsl
in
xor
or
or
rorl
adc
std
fmuls
mov
popa
xorb
mov
cwtl
loop
scas
xchg
ja
stos
push
in
add
lret
jno
std
mov
and
pop
xor
enter
sbb
sub
pop
dec
inc
faddl
imul
out
arpl
inc
gs
mov
aam
aad
mov
lahf
insb
add
mov
shrl
add
xlat
pop
mov
enterw
lret
cmp
pusha
dec
mov
xor
scas
insb
pop
mov
xchg
adc
ffreep
inc
arpl
insb
mov
cmpsb
test
ja
ljmp
test
decl
mov
testb
mov
pop
popa
push
rcll
sbb
movsb
jo
mov
cmp
inc
out
daa
cmp
dec
inc
fidivrs
imul
decl
push
push
jp
roll
inc
push
or
sbbl
cltd
and
insb
outsl
adc
jo
mov
push
lods
or
out
sbb
xor
inc
out
aad
xor
mov
call
imul
push
pop
lods
xchg
ss
jo
fisubrl
add
mov
vorps
in
test
and
stos
outsb
insl
inc
ds
out
mov
sub
mov
sub
or
dec
mov
mov
mov
add
inc
stc
and
push
cmp
and
push
mov
dec
insb
popf
jecxz
mov
push
and
ret
sbb
vmread
repz
xchg
jge
add
imul
adc
adc
jno
mov
or
stos
cmp
subl
and
pop
mov
or
ret
pop
lods
jns
mov
or
hlt
push
dec
leave
iret
mov
push
movsb
pop
rcrl
jge
dec
sub
ds
sub
test
ja
aam
jae
mov
rol
daa
xor
inc
mov
repz
outsl
inc
inc
shrl
sbb
stc
lahf
cs
test
mov
jle
std
inc
adc
pop
sahf
mov
xchg
fstpt
stos
scas
push
pusha
in
add
xchg
push
aas
fs
push
xor
daa
mov
icebp
inc
notb
cs
ljmp
push
add
rorl
mov
xchg
scas
mov
arpl
dec
dec
ja
and
sarb
sbb
or
stc
stos
sbb
xchg
sub
stos
orl
or
sbb
jmp
pusha
sub
add
adc
add
bound
pushl
pop
imul
das
cmp
cwtl
cmp
push
dec
dec
outsl
ja
mov
fcompl
sub
pop
sbb
adc
aam
or
ljmp
cmpsb
mov
in
ror
sub
loopne
ret
adc
sub
add
jb
pop
sbb
pop
stos
mov
into
push
pushf
scas
ror
or
nop
fimull
popa
jp
fdivrs
push
pop
dec
outsb
sub
aas
sub
or
jle
dec
cmpsb
cmp
aam
add
fwait
pop
xor
mov
loopne
int
adc
imul
pop
mov
aaa
out
mov
in
add
sbb
loop
sub
xlat
push
insl
pusha
leave
das
jo
sbb
repz
add
icebp
mov
loopne
test
mov
sbb
scas
in
push
popw
scas
xchg
ja
adc
xor
and
aaa
mov
xchg
repz
ljmp
call
test
loope
xchg
xor
dec
xchg
adc
xchg
icebp
sbbb
dec
in
mov
xor
and
cmp
test
xchg
sub
xchg
xchg
sti
out
or
push
je
fildll
mov
into
cmp
push
imul
mov
inc
ljmp
in
mov
mov
dec
out
sub
hlt
or
xor
addb
sub
xchg
push
push
pop
sahf
test
and
adc
push
daa
mov
fs
add
out
lock
jge
inc
inc
fsubl
add
test
xchg
cmc
add
push
fimuls
or
test
loop
je
movsb
js
nop
mov
xor
sahf
or
mov
mov
ds
add
scas
jg
sbb
mov
push
pop
icebp
repnz
out
or
sbb
andl
add
scas
xchg
mov
lret
or
mov
outsb
lret
inc
arpl
js
sahf
stos
repz
mov
cwtl
in
or
mov
jns
push
icebp
fwait
fs
leave
inc
lret
jmp
mov
test
fidivrs
movsl
jp
gs
loope
cmp
and
cmp
jp
call
dec
stos
fldcw
test
or
dec
sub
mov
int3
dec
test
xchg
push
mov
out
mov
jge
test
adc
jns
popf
pushf
mov
pop
pop
out
dec
rorb
jo
adc
hlt
dec
in
push
insb
jmp
sar
cmp
jmp
xchg
and
cmpsb
mov
or
dec
call
outsl
fdivrl
std
test
sti
or
shll
jl
shll
adc
test
push
pop
lahf
mov
test
adc
mov
push
jno
push
mov
xor
lods
mov
jmp
lret
aas
xchg
rcll
andb
dec
pop
pop
add
sub
js
aaa
stos
pop
aad
ss
jg
jb
xor
pop
adc
cmp
push
imul
daa
cmpsl
lahf
xor
xchg
enter
nop
popa
jns
outsl
jo
ret
popa
sbb
jnp
int3
pop
hlt
ja
cli
jl
stos
push
mov
pop
pop
adc
fdivl
cmp
cmp
mov
lret
movsb
loope
les
test
push
icebp
lea
mov
inc
daa
outsl
cmp
pushf
jae
pop
add
pop
mov
leave
test
lods
or
mull
cmp
scas
bound
pop
adcb
aam
cs
xor
aas
fld
push
fbld
mov
jmp
sub
inc
pop
cmp
es
push
push
bnd
xor
xchg
out
jbe
ret
mov
sbbl
mov
mov
in
pop
dec
sub
dec
arpl
jecxz
mov
sub
stc
nop
rclb
jo
icebp
pop
imul
sbb
jmp
call
std
mov
mov
add
mov
mov
adcb
or
jo
fdivs
pop
mov
cmp
sbb
or
imul
and
cmp
mov
or
xchg
xchg
das
sub
jle
icebp
sbb
jle
adc
lock
mov
pop
mov
push
and
lea
jbe
movsb
addr16
fisubrl
cmp
push
pop
mov
outsl
dec
fsubrs
fnstcw
addr16
ss
sbb
push
dec
aaa
pop
js
sti
test
mov
psrlw
fwait
clc
aaa
mov
jb
dec
test
adc
dec
jae
inc
lds
or
lahf
cwtl
or
outsb
jl
cmp
imul
popf
inc
idiv
cmpsb
sti
inc
pop
push
push
lds
mov
and
cmp
pusha
xchg
lock
jne
dec
scas
fists
lea
test
ret
fs
rclb
in
test
add
push
cltd
mov
sbb
pop
mov
and
xchg
lods
test
ja
xchg
je
je
out
pop
mov
lret
in
adc
adc
sub
rolb
jl
adc
mov
xchg
jecxz
add
mov
xchg
mov
push
push
imul
mov
cwtl
mov
fcompl
out
fisttpl
inc
test
pop
mov
lds
aaa
push
jno
outsb
mov
xchg
test
in
pop
mov
jne
rcl
insb
pop
lock
push
call
js
pushf
pushf
pop
adc
push
mov
fistl
insb
push
mov
sub
xorb
sub
pop
mov
adc
mov
mov
lea
xchg
lods
std
nop
jmp
out
mov
add
dec
mov
hlt
pop
cmp
sub
pop
pop
mov
inc
add
js
addr16
xchg
stos
repz
mov
dec
data16
in
fs
int3
push
cmpb
shlb
xchg
xchg
push
sub
and
scas
ds
outsl
push
outsb
mov
lds
mov
decl
jb
iret
das
jmp
addl
mov
loopne
rcrl
jge
out
lds
inc
cld
pop
sahf
sub
sbb
pop
dec
sub
call
pop
aas
ljmp
in
push
fisubrl
je
aad
lret
lret
xchg
inc
pop
and
push
arpl
push
gs
xor
ret
cmp
dec
addr16
test
scas
push
test
lods
or
loopne
cltd
hlt
dec
fsubrl
lds
mov
cmp
sbb
pop
jo
imul
aaa
lds
sti
cli
xchg
mov
lret
icebp
mov
add
stos
xchg
js
nop
sbb
push
dec
jecxz
out
inc
inc
jmp
push
mov
test
insb
sub
sarl
loop
push
into
scas
dec
mov
jecxz
mov
add
outsb
lods
jmp
in
std
mov
sti
imul
fsubs
dec
loopne
mov
cmp
adc
jns
aas
call
pop
or
movsb
inc
nop
jmp
mov
push
mov
cmpsb
in
or
insb
adcb
icebp
inc
std
xchg
jae
inc
push
ret
andl
jecxz
lock
xchg
shl
mov
pop
sbb
pop
imul
popf
imul
out
test
insl
pushf
bound
xor
dec
mov
sbb
push
stos
mov
cmp
aad
sbb
pushl
cli
mov
shlb
inc
std
sbb
mov
cmp
sub
lret
int
outsl
pushl
inc
inc
dec
cld
mov
push
add
daa
movsl
inc
cmpsl
dec
je
pop
ss
out
fs
cmp
in
imul
jecxz
inc
cli
pop
scas
jb
lret
jno
mov
adc
push
sbb
pop
int
repz
xchg
sbb
sti
mov
xchg
addb
insb
xchg
add
push
fcomp
jg
xchg
aas
lret
and
jmp
add
xor
mov
test
mov
int3
cmp
push
fildll
cmpsb
ret
inc
scas
or
mov
adc
jmp
inc
fsubrl
pop
mov
pop
cli
imul
loopne
and
inc
xor
ret
xor
movsl
repnz
enter
cmp
add
fadds
or
push
inc
pusha
ss
jmp
int
fisubs
push
mov
mov
sbb
xor
out
adc
jmp
fsubrs
jae
filds
adc
lret
jecxz
out
cmp
insl
jge
jmp
cmp
push
loope
pushf
in
cmp
or
mov
adc
cmp
and
shr
ja
movsl
ret
or
shrl
add
sub
std
xor
les
adc
jno
jle
clc
scas
xchg
inc
push
jbe
mov
xlat
rclb
mov
leave
mov
mov
test
mov
cmp
in
repnz
push
rcrb
mov
adc
mov
or
cld
cmpsl
add
sub
or
jb
pop
outsl
roll
push
loop
sbb
addb
mov
or
xchg
push
sub
jnp
andl
rcl
mov
push
aam
xchg
inc
cwtl
into
std
mov
xor
out
xchg
lds
fldcw
scas
push
mov
or
faddl
sbb
jo
outsl
jns
cmp
sub
mov
sub
cmp
ljmp
cmp
push
cs
ret
pop
enter
xor
and
inc
aas
int3
xchg
pop
add
cmc
mov
outsb
adc
int3
pusha
push
jbe
push
mov
inc
cli
mov
shld
pop
das
loop
pop
mov
scas
fdivrl
in
js
mov
mov
test
mov
adc
push
jne
add
int3
outsb
arpl
xchg
or
jo
jmp
and
int3
out
push
dec
das
mov
lret
lret
aam
mov
cmp
mov
pop
mov
in
mov
addr16
fcom
repz
stc
je
icebp
movsl
fimull
mov
sub
jae
pop
mov
ds
shl
pop
jl
fmull
push
mov
aad
lods
and
xor
pop
and
push
or
and
bound
mov
movsb
out
mov
cmpb
outsb
dec
mov
leave
scas
inc
sti
fwait
pop
and
ja
std
rolb
fs
fstpl
fstpl
scas
into
push
pop
xchg
jns
stos
push
faddl
xchg
inc
inc
popf
popa
dec
aaa
dec
lods
adc
fnsave
sbb
in
cltd
cmp
fcoms
push
push
mov
sbb
cmp
out
dec
push
test
call
sahf
lods
movsb
jp
mov
shll
add
mov
fistl
in
pop
sub
push
dec
mov
call
shrb
sbb
or
jnp
hlt
push
or
int
mov
add
jne
adc
dec
inc
push
xchg
insl
xchg
xor
push
push
jge
fidivl
add
paddsw
sbb
and
sbb
cmpsb
xchg
insl
and
jp
mov
lret
sub
in
jp
orl
rcrl
cmp
das
repnz
out
pop
lcall
loopne
pop
mov
pop
aaa
cmp
inc
shlb
push
cmpsb
pop
push
shll
lods
pop
ret
inc
xchg
mov
jnp
movsb
fists
add
and
adcl
sbb
add
pusha
dec
hlt
jnp
es
xchg
or
shl
jle
mov
dec
das
test
dec
add
push
cmp
xor
sarb
cltd
scas
adcl
jno
lock
sbb
push
xlat
lahf
jg
sar
xchg
mov
pop
imul
out
dec
dec
cltd
inc
dec
fstps
lds
outsl
lods
add
push
scas
inc
cmp
adc
int
leave
add
push
jae
xor
sbb
les
dec
dec
mov
lods
pop
mov
sub
fcoms
push
jge
sti
jbe
adc
fstl
mov
push
dec
repz
or
andb
int3
imul
mov
es
sub
pusha
sahf
gs
jb
je
cmpsl
xchg
cwtl
imul
mov
push
adc
int3
add
jge
dec
and
jle
loope
xor
jp
sub
loopne
int
sub
adc
xor
andb
xor
xchg
dec
sbb
push
pop
fcmove
daa
cmp
and
in
add
xor
mov
jl
in
pop
xor
pop
stos
push
jmp
cmp
sub
mov
lcall
ljmp
mov
add
pop
mov
dec
jne
sub
icebp
lcall
jne
data16
push
ss
xorb
push
mov
fdivrp
xchg
adc
fists
movsb
pop
xor
sbb
ret
sub
movsb
inc
add
fwait
outsb
pop
ds
cmpxchg
pop
ljmp
adc
icebp
xchg
mov
loop
test
dec
mov
xchg
roll
rcrl
call
mov
xor
loope
mov
mov
cmp
adc
mov
dec
push
in
jle
xlat
outsl
pushf
cmpsl
cmc
test
mov
je
xchg
popa
cli
xchg
popf
lret
int3
jne
sti
mov
xchg
push
sub
hlt
repnz
repnz
imul
mov
ret
pop
popf
leave
and
movsl
shll
js
jae
sbb
pop
sbb
xor
push
mov
js
test
jp
rorb
scas
lock
mov
xchg
daa
xchg
push
movsb
repnz
pop
clc
test
xchg
push
movsl
push
and
sub
outsb
sub
fcompl
jae
jmp
out
mov
aas
push
xchg
pop
mov
lret
mov
fldenv
mov
mov
mov
in
in
rcrl
inc
popa
xor
lds
enter
stos
mov
sbbb
mov
and
mov
add
pop
jmp
mov
sub
scas
inc
leave
je
dec
sbb
loop
orb
cmp
popf
inc
rclb
pop
imul
out
mov
jl
mov
sbb
pushf
push
mov
loopne
aas
data16
mov
sub
adc
cmpsb
test
sub
sbb
mov
mov
sbb
mov
dec
cmp
loope
push
mov
aas
cmpsb
mov
dec
and
add
stos
mov
mov
imul
inc
cmp
movsb
cwtl
ret
jp
out
cli
out
dec
cmp
dec
aaa
inc
or
dec
push
jb
out
push
sbb
mov
xchg
add
mov
xchg
mull
in
mov
sahf
and
lcall
and
pop
nop
inc
inc
clc
aam
loope
jle
leave
sub
icebp
dec
jne
inc
enter
mov
inc
dec
enter
push
mov
dec
mov
loopne
aas
insb
scas
xor
jp
fisttpl
sahf
and
inc
test
add
fidivs
pop
out
pop
dec
ja
jl
lea
sub
sbb
jp
sbb
pushf
dec
pop
shll
mov
ss
int3
jo
out
xchg
sub
push
js
ja
sub
test
nop
jne
push
or
fistps
push
dec
out
imull
mov
mov
jno
das
rcrb
repz
fnstsw
push
fcomps
sbb
mov
jp
cmp
pop
cs
cld
cmp
out
jbe
cmc
int3
inc
aas
push
jno
int
pop
jbe
adc
add
and
nop
dec
add
movsl
cmp
fstpl
jo
les
adc
and
pop
jg
jmp
rorb
jecxz
sub
pop
bound
std
pop
loop
mov
imul
xchg
add
mov
jp
or
arpl
pop
sbb
sarl
mov
in
out
pop
sbb
lds
ss
mov
cltd
push
imul
mov
jbe
push
mov
lret
mov
jg
outsb
inc
lods
jo
jnp
dec
cmpsl
es
subl
rcl
add
popf
negb
push
mov
adc
cmc
and
fbld
push
mov
imul
sbb
outsb
outsb
out
mov
mov
aaa
inc
mov
push
test
dec
out
mov
jecxz
sbb
cmp
xor
inc
push
inc
pop
mov
outsl
je
test
xchg
adc
or
std
stos
mov
xchg
fisubl
in
add
jnp
dec
xor
out
inc
pop
popf
or
pop
aam
lahf
or
cmc
in
mov
add
cmpl
pusha
xor
jge
mov
sarb
xor
scas
inc
mov
pop
test
fadds
nop
sbb
mov
push
imull
inc
jge
inc
cld
std
outsl
outsb
jp
pop
lods
mov
lea
movsl
adc
les
fsts
js
xlat
pop
xor
cmp
mov
fidivs
fldlg2
mov
arpl
stc
je
lea
pop
push
int
or
or
popa
dec
sbb
pmulhuw
in
lods
test
data16
mov
xor
jmp
into
mov
incb
jg
dec
dec
adc
mov
mov
push
pusha
aaa
cwtl
inc
fbstp
jnp
fwait
enter
dec
fsin
cltd
in
xor
out
xchg
mov
sbb
add
xchg
pop
sbb
data16
xchg
call
mov
or
popa
test
inc
jae
fbstp
aaa
dec
imul
adc
push
or
test
loopne
sbb
sahf
outsb
lds
cmpsb
in
out
dec
dec
inc
clc
imul
jne
cld
push
or
mov
or
stos
sub
inc
push
and
addr16
hlt
xor
dec
das
stc
ss
aas
adc
mov
outsl
jg
mov
shl
mov
dec
add
rcr
test
int
clc
je
std
movsl
mov
test
leave
sbb
mov
pop
jl
adc
xchg
lret
dec
rcrb
lahf
adc
adc
arpl
rorl
or
xchg
insl
fidivrs
xchg
hlt
sbb
xchg
push
out
movsl
loopne
adc
or
push
push
shlb
cmc
push
sub
xlat
repnz
jb
insb
sbb
sub
popa
xor
ret
out
test
xchg
fiaddl
cmp
add
dec
push
sbb
and
adcl
enter
or
and
and
pop
xor
jnp
inc
in
aas
jle
jl
mov
mov
jmp
cmp
lahf
stos
push
add
xlat
mov
cmpsb
shrw
cmpb
dec
xor
aam
mov
or
insb
xor
inc
push
jbe
pop
adc
mov
sbb
xchg
jns
lret
and
std
and
shl
rorb
xor
xchg
sahf
push
scas
cmp
jmp
inc
mov
arpl
test
adc
mov
xchg
push
sub
std
push
mov
pushf
dec
ljmp
subb
xchg
mov
mov
mov
jge
test
mov
xchg
jnp
mov
push
mov
xchg
lahf
popf
dec
sbb
mov
mov
jne
mov
lock
mov
popa
sub
jg
fimuls
xor
fstps
cmc
imul
inc
in
scas
mov
inc
ret
add
xor
cli
ficomps
xor
sbb
mov
pop
push
ret
jg
adc
inc
cwtl
ss
sbb
sbb
push
dec
loopne
jle
jmp
and
rol
sbb
mov
and
mov
lret
mov
repnz
aam
and
add
sahf
and
sbb
add
lds
pop
sahf
dec
xchg
and
adc
push
mov
mov
mov
stc
push
int
fwait
je
mov
cld
xchg
mov
xchg
pop
cld
xchg
idivl
xchg
out
out
call
mov
xchg
mov
mov
inc
adc
icebp
push
inc
lods
sbbl
mov
sbb
mov
aas
ficoms
pop
mov
int3
mov
cmpsb
nop
stos
icebp
enter
pop
fcoms
mov
arpl
jne
pop
out
movsl
ds
lahf
arpl
inc
mov
repz
add
dec
dec
mov
xchg
imul
mov
test
xor
pop
and
lcall
or
test
test
sbb
scas
ja
mov
jmp
inc
std
lret
sbbl
push
pop
and
shl
xchg
add
andb
jns
push
aad
sbbl
mov
imul
in
pop
cltd
add
mov
dec
jnp
in
lods
ficompl
mov
add
stc
loope
inc
inc
push
imul
and
or
adc
fwait
cmp
mov
mov
and
pop
aam
jge
je
cltd
mov
sahf
mov
jae
mov
pop
xlat
repz
jnp
mov
mov
xlat
cld
fcomps
lds
in
in
outsl
mov
xchg
les
aas
movsb
pusha
xor
push
imul
push
jae
ja
lret
in
icebp
pop
xor
outsb
sub
jns
js
les
mov
jnp
mov
sbb
daa
into
daa
dec
pop
cld
jb
jl
push
dec
lds
pop
push
jno
or
mov
jb
sbb
and
push
cmpsl
xor
xchg
call
jecxz
add
je
or
or
mov
sbb
jne
std
insb
xchg
jp
pop
inc
pusha
cmc
push
push
xlat
in
and
mov
pushf
pushaw
jae
mov
adc
sub
int
fisttpll
adc
sbb
jmp
dec
repz
std
lea
decb
imul
or
mov
cltd
dec
jmp
divb
cmp
adc
pop
fisubs
dec
push
jg
cwtl
outsb
fsubr
jnp
gs
cmpl
bound
or
mov
jbe
sub
fcompl
cmp
pop
mov
movl
mov
mov
xor
jo
mov
nop
sub
push
stos
mov
mov
jecxz
pop
popf
pop
movsb
mov
pushf
mov
mov
mov
mov
xor
sbb
movsb
jno
pop
lret
jmp
movsb
push
mov
cmp
dec
mov
outsl
icebp
push
jmp
in
test
mov
push
outsl
cli
scas
nop
sbb
leave
jo
add
shrb
andb
cmc
gs
cltd
gs
divb
mov
cmp
leave
cmc
out
pop
xchg
pop
stos
xor
mov
xchg
adc
imul
cmc
loop
rorl
movsl
popf
cwtl
lahf
hlt
inc
mov
add
fnstenv
mov
das
cmp
scas
je
in
std
js
scas
cmc
jp
adc
addr16
add
test
inc
xor
fstpt
mov
mov
out
fcomp
mov
jne
ljmp
jne
lock
iret
in
push
lret
or
movl
inc
mov
xchg
jle
aad
std
dec
lret
or
icebp
sbb
jp
cmp
or
fldl2t
inc
vcmpps
and
call
adc
popf
inc
movsb
cltd
ss
or
jo
jnp
leave
mov
mov
hlt
mov
add
lret
divb
dec
sbb
mov
sbb
push
sub
xchg
dec
jno
cmpsb
loopne
mov
jg
add
icebp
test
fstpl
mov
call
mov
js
mov
leave
mov
mov
lods
jno
rcll
fdivs
test
mov
pop
nop
daa
nop
sub
out
scas
outsl
cld
or
jae
rolb
imul
imul
popa
shlb
rorb
lret
adc
in
push
shll
shlb
pop
push
loop
aam
push
repnz
adc
add
cltd
test
push
icebp
icebp
dec
xor
andl
dec
or
ret
sbb
out
mov
and
push
test
iret
stos
cli
jge
arpl
mov
clc
xchg
fcoms
jg
lahf
negb
outsl
cmp
lahf
out
dec
adc
test
pop
out
test
sbb
repz
repz
ret
adc
push
sub
or
and
xor
mov
adc
pop
mov
ljmp
sbb
pushf
out
shrb
insl
shlb
add
push
adc
push
xchg
jne
stc
rcrb
sbb
imul
sbb
mov
push
cs
ret
mov
adc
in
pop
sbb
insb
ret
popf
sbb
and
ficomps
jo
jbe
out
lods
jmp
ja
ret
sub
dec
data16
ret
adcl
mov
flds
mov
fdivl
adc
adc
cmp
fdiv
and
dec
fbstp
repz
push
or
aaa
mov
loope
or
orl
mov
xor
rcrl
jmp
mov
sbb
inc
out
loop
cmp
xchg
es
dec
call
jbe
arpl
push
fwait
mov
jnp
add
int3
fdivrl
fisubl
pop
adc
inc
notl
sbb
push
mov
test
repz
call
mov
sbb
lods
aad
stos
lds
fwait
mov
adc
pop
or
cmpsl
aas
paddusb
pop
inc
stos
lcall
or
adc
sub
mov
pop
cmc
adc
imul
pop
lret
int3
push
int3
push
iret
pop
push
mov
adc
mov
jb
push
pop
fistps
fstl
mov
or
rorb
fstl
pop
push
out
lea
add
fdivs
jecxz
mov
cmpsl
jg
imul
pushf
push
inc
aaa
xlat
mov
cmp
push
sbb
sub
sub
fildll
insb
fsubrs
push
jg
xchg
outsb
popf
popf
jnp
cmpsb
inc
push
inc
and
pop
aad
jl
shl
out
aad
sbb
jno
mov
insb
stos
inc
pop
or
inc
ds
or
outsb
add
jns
cmc
xchg
lock
repnz
cmpsb
nop
fdiv
stos
mov
cmpsb
push
in
roll
jae
mov
xor
cmp
test
fmuls
xchg
sub
or
cmpsb
xchg
arpl
or
pop
call
aas
sbb
in
xchg
int
mov
in
xchg
xlat
jp
sbb
mov
mov
mov
inc
orl
sbb
xchg
xor
fsub
sub
xor
push
popf
cli
lock
fwait
push
mov
inc
and
std
mov
sahf
mov
popl
scas
push
push
in
ficoms
mov
jo
mov
cmpsl
dec
add
in
imul
sbb
fimull
iret
and
cwtl
or
das
adc
fsubr
cmpsb
xchg
call
rcll
adc
repz
adc
inc
outsl
push
jbe
sbb
rcr
push
cmp
loope
or
mov
or
fbstp
mov
test
push
je
and
ljmp
repnz
mov
int3
clc
inc
and
mov
mov
cmp
stos
into
push
and
call
in
push
mov
fcomps
mov
or
and
ja
mov
lods
stos
data16
or
lds
test
popa
sbb
bound
repnz
inc
pop
mov
je
dec
sbb
jno
sub
adc
mov
sbb
or
jne
daa
shlb
es
push
pop
test
jbe,pt
aad
inc
mov
mov
pop
outsl
add
fcmovnb
clc
cmc
in
xor
repz
inc
add
fcomip
gs
xchg
add
test
and
xchg
nop
mov
mov
push
xchg
mov
ljmp
push
or
negb
arpl
repnz
aad
push
outsl
xchg
cmp
adc
push
nop
arpl
sub
add
xchg
cmp
inc
and
sahf
faddl
sbb
lods
mov
lea
lods
mov
cmpsl
aaa
inc
gs
jle
mov
aam
cmp
je
mov
dec
xchg
pop
mov
sbb
and
dec
jle
mov
subl
xchg
sub
sub
inc
ret
mov
cmp
mov
popa
sti
test
scas
inc
int3
sahf
jle
fsts
jl
aam
jecxz
icebp
cmc
jbe
rcrl
test
xchg
and
cwtl
xorl
lds
bnd
das
adc
shrb
dec
sarb
std
repz
iret
adc
sbb
cltd
test
xlat
sarl
mov
pop
inc
pop
movsb
xchg
test
jb
mov
adc
data16
mov
push
jno
out
add
loopne
cmc
mov
xchg
mov
sub
in
psubd
mov
js
push
push
push
dec
xchg
jge
in
xchg
push
ret
out
sbb
mov
xchg
xor
in
cmp
cmp
es
xor
mov
outsl
add
xor
ljmp
outsl
call
insb
pop
sbb
repnz
mov
pop
cs
testb
push
outsb
sbb
leave
mov
imul
dec
jmp
hlt
in
imul
push
pop
aam
outsl
pop
insl
mov
cmpsb
mov
push
mov
pushf
mov
xlat
fmull
pop
mov
add
shlb
rol
and
jecxz
or
mov
subb
loopne
mov
fsub
fxtract
adc
rcrb
ret
insl
lcall
and
sub
out
mov
push
ret
lcall
sbb
pop
lds
cwtl
cwtl
lret
sub
push
fnstenv
adc
lret
mov
outsl
scas
leave
sbb
outsb
xchg
push
dec
sub
mov
mov
mov
test
jle
add
xlat
sub
adc
repnz
loope
push
push
push
ret
pop
xchg
cmp
test
test
bound
fadds
je
lea
xchg
subb
mov
enter
dec
fists
mov
movsl
add
sub
jl
dec
sub
jbe
inc
pop
testb
movsb
pop
dec
and
sub
jno
mov
push
xchg
inc
les
decl
ror
int
cmp
bound
mov
popa
mov
shr
jl
cld
mov
xchg
or
rclb
test
jno
jne
leave
cmpsb
push
xchg
mov
shlb
adc
jb
add
ficompl
shlb
fildl
mov
jmp
shl
mov
push
sbb
test
sub
repz
pop
push
ret
js
mov
fisttpll
ret
pop
adc
sahf
add
dec
sti
inc
xchg
mov
icebp
cmp
dec
push
jl
test
sbbl
sub
aad
push
mov
cmp
ret
shll
inc
mov
or
adc
push
js
xor
mov
xchg
scas
fisttps
imul
mov
cmpsl
mov
lret
inc
lock
cwtl
test
fistl
pop
scas
insl
jne
aad
sub
repz
pop
adc
mov
cmp
les
add
test
mov
mov
mov
push
mov
sbbl
and
stos
and
mov
pop
pushl
imul
and
mov
repz
insb
sub
push
sbb
rolb
push
dec
xlat
paddsw
mov
repz
sub
add
inc
test
cmc
dec
cld
xchg
test
lret
pop
rclb
push
sub
mov
cmp
fs
xor
cltd
ret
jmp
or
jl
mov
ret
pop
and
pop
repz
enter
inc
sbbl
xchg
pop
jno
ret
hlt
or
xchg
cmp
sbb
or
pop
rolb
movsl
icebp
sbb
add
jle
xor
in
imul
outsb
inc
fbstp
adcb
fwait
gs
adc
and
cmp
out
test
mov
iret
andb
xchg
dec
mov
fcmovne
push
nop
popa
add
cmp
incl
lret
fstpt
or
xchg
mov
ret
sbb
js
inc
sub
fstps
push
std
jge
fistpl
mov
shr
outsl
mov
jnp
test
jbe
roll
aam
addr16
mov
mov
add
aas
rcrb
shl
cmp
mov
mov
mov
fldt
inc
sbb
adc
add
xchg
and
xchg
mov
nop
fmull
lcall
stc
or
imul
jp
sub
test
leave
jl
jbe
stos
cmpsl
sahf
jnp
dec
dec
sbbb
push
call
cs
call
subl
and
mov
ss
jns
fwait
inc
in
and
sbbl
loopne
jge
xor
jl
dec
mov
sub
sbb
les
xor
or
push
jb
fildl
cmp
jbe
cmp
inc
rcrl
imulb
adc
mov
jge
push
int3
aad
sub
xchg
dec
fcomp
sbb
xchg
adc
int
enter
cli
mov
adcl
insb
pop
stos
inc
mov
mov
xlat
mov
iret
fs
pusha
push
rorb
add
jns
mov
lock
orb
mov
repz
test
clc
ds
sbb
add
in
fistps
and
icebp
mov
jle
mov
hlt
in
lret
orl
mov
add
pop
clc
dec
rolb
scas
inc
jg
pop
es
mov
in
xchg
pushf
insb
pop
leave
les
test
stc
pop
sbb
lds
add
mov
cmp
test
push
sbb
add
inc
cmp
pop
push
orb
negb
in
mov
mov
mov
lcall
imul
sub
pop
ljmp
xchg
jne
mov
arpl
adc
jne
cmpsl
ds
xor
inc
cltd
xor
mov
stos
pop
or
jp
xchg
mov
pop
insl
test
enter
add
push
xchg
ficompl
xor
sbbl
and
pop
ds
cld
loop
sti
rcrl
leave
dec
sub
dec
fnstcw
sarl
rep
sti
test
mov
cmpb
cwtl
sti
ss
je
sub
leave
and
mov
jg
popa
or
dec
mov
cld
gs
pop
pop
inc
xchg
out
add
xor
fidivl
inc
lcall
jg
pop
mov
cltd
inc
or
jle
jecxz
outsb
std
inc
jo
dec
fidivrs
mov
or
pushf
push
cmpsb
mov
adc
les
mov
lret
mov
aam
paddq
or
xor
xchg
sbb
cwtl
xor
lcall
cmp
push
rclb
adc
pusha
mov
sarb
sbb
push
sbb
imul
cwtl
and
mov
mov
xor
mov
fwait
movsb
ds
lods
and
lods
adc
inc
out
mov
mov
arpl
mov
test
and
push
push
sbb
adc
fbld
bound
xchg
sbb
mov
leave
testb
cwtl
adc
xchg
sbbl
stc
insb
cmp
in
cmp
sbb
or
mov
ljmp
or
insl
add
call
mov
aam
pop
repnz
cmc
sbb
xlat
and
push
dec
clc
mov
ret
mov
adc
not
call
rol
mov
clc
or
push
mov
mov
xor
out
xchg
mov
data16
cltd
scas
sti
or
insb
ja
xor
clc
push
xchg
jnp
sub
out
pop
cli
test
fwait
cmp
jo
and
xchg
mov
mov
pushf
or
stc
dec
lods
jbe
jmp
lret
and
jb
push
in
das
fstpl
jns
dec
scas
fadd
mov
jl
pusha
pop
or
sbb
or
adc
xchg
lods
les
stos
push
xchg
sbb
stc
mov
xlat
mov
fdivrl
xchg
mov
push
xor
ja
sub
push
in
or
adc
out
scas
call
sub
sub
in
jl
shrl
in
test
outsb
das
shrb
dec
jmp
daa
mov
jmp
mov
stos
mov
sub
jg
in
jae
mov
push
daa
push
int
test
xchg
icebp
or
imul
into
out
push
fwait
pop
inc
mov
test
lret
jne
fsubrl
mov
insb
cmpsb
testl
mov
xor
fisubl
mov
sbb
mov
add
and
fmull
xchg
hlt
aaa
dec
icebp
aam
dec
jae
mov
insb
fildl
fiadds
ljmp
push
shrl
enter
or
xchg
adc
aad
cmp
rep
pop
fstl
push
enter
adc
insb
pop
jmp
mov
xorb
icebp
rclb
add
mov
sbb
mov
dec
xor
je
icebp
enter
mov
je
or
xor
inc
inc
pop
sahf
xor
cmp
mov
dec
or
testl
mov
sub
mov
movsl
stc
je
xchg
and
ret
and
cli
das
pop
inc
jp
push
in
movl
iret
insb
fidivs
cld
xchg
popa
faddl
cltd
push
out
mov
inc
pop
lret
mov
cmpsl
int
mov
push
mov
xchg
sbb
in
sahf
scas
mov
rorb
push
mov
dec
pop
fimull
clc
sub
dec
pushf
out
cwtl
xchg
add
adc
pop
cmp
sti
lea
pop
sub
cli
rolb
fs
int
dec
cmp
jle
mov
insb
jecxz
adc
or
mov
xchg
in
adc
leave
insb
jge
out
cld
push
cmp
aam
fidivs
jns
xchg
push
je
add
add
es
fbld
int
fsts
pop
xor
mov
cmp
push
push
xchg
adc
add
jo
popw
mov
movsl
test
pop
test
pop
fmull
mov
idivl
pop
popfw
test
jmp
or
daa
add
dec
adc
pop
pusha
ss
push
je
test
mov
add
int3
jle
push
jp
lahf
pop
shrl
into
xchg
scas
outsl
daa
icebp
or
mov
mov
pop
sarb
mov
pushf
xor
mov
sub
or
mov
cmpsl
imul
out
dec
sub
jle
mov
mov
in
cmpsb
xchg
es
shlb
ffreep
mov
cmc
add
out
adc
xchg
and
mov
mov
pop
jecxz
into
dec
or
jae
mov
enter
repz
jb
stos
das
xchg
dec
and
and
pop
stos
inc
cmp
adc
xchg
lea
push
mov
mov
repnz
rol
mov
pusha
scas
cmp
and
aam
mov
aaa
jl
and
sbb
or
mov
stos
jecxz
cltd
xchg
fdivl
mov
mov
pop
cmpsb
lret
mov
jle,pn
pusha
imul
mov
sbb
xor
cltd
cltd
inc
mov
push
dec
clc
inc
call
push
xor
pop
jmp
aad
scas
outsl
pop
push
out
xor
cmp
shlb
push
iret
dec
xchg
dec
mov
mov
mov
rol
sub
loop
inc
mov
fwait
cmp
insl
pop
js
jg
push
mov
add
xor
in
mov
outsl
movsl
dec
icebp
adc
lds
nop
push
jbe
sub
push
and
jo
mov
addl
adc
adc
fsubrl
mov
ret
sbb
in
fwait
mov
mov
pop
mov
sbb
stos
sub
test
outsb
mov
push
xlat
call
and
fsubrl
xor
xchg
aad
test
jnp
lock
pushf
lcall
inc
movd
sub
lods
les
adc
pop
cltd
test
pop
and
jl
testl
scas
in
test
push
ficomps
imul
outsl
cwtl
int3
popa
and
popa
mov
jge
sub
mov
vpshufhw
mov
sbb
push
mov
or
or
jmp
mov
insl
adc
xor
popf
int
sbb
jno
out
xchg
enter
loope
or
xchg
cmp
xor
mov
or
jno
xchg
jg
jl
scas
outsl
roll
in
xor
subb
xlat
mov
lods
xchg
sbb
mov
arpl
dec
push
fmull
mov
mov
jnp
sbb
push
ss
xor
sbb
xchg
outsl
mov
jnp
mov
xor
ret
jmp
adc
pop
lahf
popa
nop
les
sbb
imul
in
or
out
subb
ret
out
mov
or
lcall
and
mov
cwtl
xor
ljmp
scas
enter
rcl
cltd
cli
xchg
lret
hlt
pusha
and
jle
cmp
notl
mov
rcll
fiadds
lret
xchg
mov
jge
xor
test
and
dec
ret
int3
and
out
mov
pop
cmp
cmp
sub
or
push
mov
lret
adc
mov
test
add
inc
push
hlt
test
and
jp
mov
ja
subl
dec
fdivrs
add
sub
push
dec
fstl
orb
pop
add
negl
mov
aad
and
inc
clc
clc
adc
loop
sbb
scas
mov
movsl
cmp
push
nop
int
bnd
push
cmc
mov
or
cmp
push
popf
aam
add
pop
leave
testb
cwtl
lret
in
push
push
dec
pop
mov
jg
ljmp
mov
adc
inc
loop
and
xchg
jns
je
repnz
mov
adc
imul
adc
push
jb
shrb
jmp
sbb
ds
in
sbb
or
sub
jg
or
in
jle
add
sub
mov
mov
fmulp
fdivrs
loopne
aas
loop
jnp
pop
add
popf
addr16
mul
lds
mov
idiv
out
sub
inc
sbb
insb
and
int
sbb
leave
loop
push
stc
fdivrp
aad
les
push
jbe
adcb
push
cwtl
lock
cmp
imul
add
aas
inc
adc
lock
das
addr16
xor
clc
push
ficompl
aam
sub
arpl
push
in
push
or
sub
mov
sub
lret
dec
jecxz
ljmp
fnsave
inc
repnz
push
push
in
ss
mov
nop
xlat
xor
addb
test
mov
jmp
xchg
jo
jmp
mulb
mov
aas
fldt
mov
mov
pop
scas
ret
in
cmpsb
lock
dec
insb
mov
or
stos
pusha
jmp
cmp
subb
fwait
inc
cmp
test
xchg
push
jle
push
or
shll
imul
pop
ja
hlt
push
mov
lahf
jns
repz
and
pop
inc
in
push
sbb
adc
jae
rclb
test
test
adc
add
jmp
test
jb
movsl
lods
pusha
or
lret
inc
pop
xor
pop
jae
dec
loop
cmpsw
add
sbb
inc
enter
test
movsb
and
aam
add
xlat
lea
in
xorl
pop
insl
rclb
aaa
jmp
mov
cli
add
xor
bound
adcl
dec
adc
arpl
adc
mov
xchg
adc
xor
mov
add
jns
sbb
pop
sbb
push
dec
lods
adc
sub
rol
cmpsb
jb
pop
mov
pop
xor
into
cld
cmp
andl
rorl
int3
fs
into
adc
pop
cmpsb
out
cmp
loopne
fldt
je
jns
jg
mov
jge
cltd
add
roll
inc
push
fldt
loop
es
jg
adc
pop
test
mov
fcmovnu
aas
push
aam
mov
mov
aaa
push
mov
ljmp
push
cmp
jns
daa
leave
fldcw
add
call
mov
mov
add
aam
push
mov
lret
add
into
fadds
stos
inc
push
xchg
dec
in
sbb
lret
mov
pop
xorl
pop
push
jno
ds
cmp
and
pop
add
cmc
cmp
lahf
cmp
or
scas
out
dec
mov
repnz
stos
sbb
enter
imul
out
std
mov
into
sub
shrl
lds
or
lea
cltd
mov
movsl
cmp
add
mov
mov
jg
cvtps2pd
jge
imul
mov
les
adc
cmc
adc
rcrl
cmp
pop
fnsave
jmp
inc
and
aad
lret
adcl
dec
xor
add
das
pop
sub
shl
je
call
mov
adc
mov
fwait
sarb
or
push
cmc
sbb
mov
sbb
inc
leave
mov
int
xor
jmp
xchg
ficoml
std
push
cmp
sub
inc
mov
fsubrp
stc
push
adc
cmp
push
jg
inc
sub
mov
out
sbb
mov
sbbl
jle
xor
sarl
repnz
fnstenv
rorb
pop
push
sub
xchg
xor
inc
imul
and
fsub
scas
or
sahf
jno
jnp
jne
mov
test
mov
dec
mov
jmp
pop
hlt
outsb
mov
pop
pushf
xchg
daa
sarl
scas
hlt
lods
add
adc
fisubrs
and
sbb
or
pop
pushf
cwtl
outsl
sbb
mov
or
dec
mov
mov
push
int3
fidivs
lods
icebp
inc
loope
stos
jne
cmp
mov
lods
or
mov
lret
scas
mov
inc
pushf
and
push
jno
nop
sahf
lods
lret
jle
out
pop
sbb
mov
aaa
push
pushf
mov
test
mov
fmull
fdivrl
out
shlb
daa
mov
neg
inc
or
lret
mov
pushf
stc
scas
jle
sti
mov
mov
in
sbb
pop
mov
dec
mov
fs
shll
dec
mov
lahf
sbbl
mov
xchg
aas
cli
or
mov
xor
mov
repz
das
outsb
imul
mov
jle
xlat
je
lods
in
hlt
mov
push
or
scas
lea
aam
cmc
inc
jno
sub
sbb
rcl
or
dec
fisubl
xor
loope
mov
loop
mov
jecxz
inc
pop
out
jns
inc
fimuls
cmc
aaa
pop
insl
gs
in
call
pop
lods
in
loope
punpckhwd
push
sub
push
lods
outsl
cmpb
mov
arpl
scas
push
loope
dec
mov
mov
dec
fmuls
cmp
pop
jg
out
sbb
push
test
out
test
dec
loop
cmc
cmp
popf
push
mov
xchg
xor
insl
jns
sbb
cmp
sub
test
mov
and
and
xor
fisttpll
lret
fsts
jmp
add
push
jecxz
outsl
fsubrs
push
ret
adc
pop
cltd
or
and
push
mov
add
pop
imulb
mov
stc
rorb
xor
subl
mov
addr16
outsb
sub
or
testl
and
mulb
je
ljmp
xlat
shr
push
xchg
loope
lds
loopne
mov
xchg
and
xchg
ficoml
fwait
orb
out
mov
inc
mov
pop
mov
dec
in
sti
jbe
outsb
test
les
inc
and
hlt
out
mov
mov
jg
lods
imul
cmp
stos
inc
mov
jne
mov
sti
pop
jp
push
mov
ret
in
sub
dec
testl
pusha
cmc
mov
mov
adc
out
popf
ficomps
imul
cli
clc
scas
int
insl
fs
icebp
jae
mov
lahf
lods
nop
daa
ffreep
std
sub
xchg
stos
sub
mov
bound
ja
shrb
add
mov
push
out
xchg
xchg
xchg
jbe
cmpsl
pop
mov
pop
fs
adc
sub
hlt
pop
enter
mov
dec
in
jg
data16
xor
pushf
scas
inc
inc
setbe
jecxz
push
int
and
aad
mov
adc
pop
repnz
fstp
out
ljmp
ljmp
adc
repnz
loopne
in
mov
lock
jb
nop
xchg
pop
push
aam
and
or
aad
sti
xchg
mov
sahf
clc
fwait
jbe
jg
out
cmp
xlat
ror
mov
mov
shll
dec
mov
std
push
leave
cmp
je
mov
adc
dec
arpl
test
pop
push
sbb
popa
jmp
lods
in
test
mov
aad
jnp
add
add
fcompl
mov
jmp
aad
das
cmp
movl
testb
xchg
out
fsubrs
sub
sbb
mov
sbb
lcall
scas
push
xor
mov
js
or
cwtl
das
and
push
lea
out
lea
ss
icebp
dec
inc
dec
mov
inc
mov
mov
adc
sbb
push
jl
adc
push
sti
fwait
dec
jl
mov
jns
inc
fsubrl
jle
ret
fdivp
insl
jge
popf
gs
fsts
nop
adc
ret
cmp
lret
or
xsha1
cmpsb
mov
adcb
insb
into
enter
lahf
push
or
insb
mov
enter
or
enter
scas
sub
fists
pop
insl
mov
pop
std
in
mov
sti
test
inc
xor
mov
je
xlat
sub
pop
repnz
mov
orl
add
lods
pop
push
cmp
test
push
xchg
dec
dec
mov
inc
cmp
jl
mov
in
in
pop
call
cmp
dec
adc
addr16
jmp
xchg
fidivrs
shr
das
pushf
push
je
jl
cltd
fcoml
dec
or
sbb
in
mov
mov
iret
cmp
repnz
mov
adc
sub
push
mov
dec
dec
mov
push
xchg
fwait
in
rolb
cmp
rorb
push
shll
cli
mov
mov
jecxz
lods
shl
jg
xchg
sbb
inc
addr16
aaa
cmpsl
mov
mov
or
mov
mov
daa
mov
hlt
int
sbb
add
sub
sbb
add
add
jne
out
js
sub
jae
pop
jns
jg
jnp
sbb
jg
pushf
sub
dec
aas
cmp
mov
insb
jl
pop
push
jno
and
lret
pop
data16
fstps
pusha
add
adc
mov
pop
shlb
adc
lcall
shlb
out
lahf
ss
or
jle
mov
filds
xor
out
js
lods
or
in
mov
movsb
sbb
jnp
outsl
push
mov
pusha
cltd
es
fstpt
push
and
mov
ja
inc
inc
pop
and
cwtl
pop
mov
in
aas
aad
insb
xchg
dec
pop
int
insl
sbb
dec
push
jle
sub
add
dec
fcoms
iret
data16
aas
adc
gs
out
aam
fsubrs
mov
pop
jecxz
negb
add
and
and
cwtl
push
iret
push
cltd
xchg
pop
sar
dec
mov
divl
fdivl
jg
lret
jne
sti
jge
test
lods
inc
sbb
sub
sbb
push
push
sti
cmp
xor
ja
cmp
repnz
dec
sub
incl
push
mov
dec
cld
or
mov
xor
ja
inc
popa
inc
cmpsl
testl
mov
push
xor
or
les
adcl
dec
dec
negb
jge
mov
cltd
push
shlb
jb
adc
jne
movsl
rclb
lret
decl
std
cwtl
decb
mov
push
in
pop
mov
pop
ret
pop
push
xchg
outsb
das
pop
add
ds
shr
xchg
cmp
mov
and
lods
adc
aad
jb
mov
xorps
shrb
sub
aas
xchg
scas
jno
mov
jae
jge
lret
sub
cli
xchg
jo
ss
xchg
sbb
push
fstpt
addr16
mov
sub
xor
bound
int3
xor
cmp
add
push
fmull
leave
mov
test
push
pushf
xchg
cmpsb
xchg
stos
enter
repz
push
lret
jns
push
lods
push
xor
jne
mov
fs
dec
mov
ret
test
jne
rcll
jg,pt
repnz
mov
pop
fisttps
add
mov
jge
mov
andb
addr16
popa
rcll
ficompl
cli
movsl
ds
jnp
ss
cmp
sbb
loop
fistpll
int3
insb
jle
in
jae
add
addl
in
enter
pop
cmpsl
lret
leave
xlat
stos
cld
lea
fistl
fwait
pop
ret
push
add
stos
mov
sub
ret
adc
inc
out
lret
pop
int
jo
pop
es
mov
orl
imul
cwtl
aad
dec
sbb
addr16
call
mov
adc
fdiv
push
cmp
icebp
in
add
jmp
mov
lret
mov
add
je
shl
cmp
push
add
cmp
in
std
sbb
ljmp
jnp
cmp
and
aam
cmp
adc
popf
std
lret
pop
cmpsl
xor
and
pop
pop
cmpsb
lret
jnp
inc
mov
dec
dec
or
dec
out
dec
pusha
adc
sub
repz
add
dec
cmpsb
sbb
mov
or
xor
dec
add
outsl
cmpsl
jns
pop
lock
pop
loope
pushf
mov
dec
lods
test
mov
ja
mov
rclb
sub
dec
and
cld
sub
int3
or
xchg
fildl
adc
mov
inc
stc
movsb
lds
test
movsb
cmpsb
andl
repz
fadd
aad
mov
jmp
mov
test
adc
xor
rcrb
leave
mov
sbb
sbb
test
xchg
push
in
loop
shrb
lcall
mov
ja
dec
jecxz
shr
outsl
ss
fldl
xchg
clc
push
clc
and
sahf
inc
lods
jmp
mov
push
or
push
sub
fisubrs
lods
cmp
or
jno
pop
adc
shl
rorl
popa
adc
sub
or
cs
or
jge
pushf
pop
ret
and
sahf
pop
jae
loope
decb
and
lea
mov
mov
loop
aas
fldl
and
popa
pop
cmp
or
mov
dec
push
int3
into
and
js
arpl
sbb
in
mov
push
scas
push
out
jbe
movsl
xor
ljmp
dec
sub
aad
scas
mov
addr16
adc
insb
mov
stos
bound
xchg
or
jmp
mov
inc
in
xor
leave
cmp
cwtl
aas
push
inc
cmp
je
ljmp
dec
pop
pop
fwait
jae
dec
cmpsl
mov
jnp
rorb
and
aaa
stos
js
addr16
mov
pusha
insl
sahf
push
or
inc
je
jns
push
add
js
jne
push
jge
leave
mov
xchg
push
pop
lret
dec
dec
sub
jno
idivb
mov
faddl
ficoml
mov
pop
mov
mov
push
test
jecxz
mov
in
adc
dec
fucomp
jg
jo
out
test
lds
inc
pop
fucomp
js
xor
ja
or
xchg
pop
xchg
inc
jne
push
stos
or
xor
fisttpl
test
xlat
pusha
mov
jle
xchg
fs
adc
inc
add
jecxz
dec
dec
pop
xor
push
lods
or
adc
sub
bound
iret
cmp
clc
dec
push
push
and
lret
push
daa
cmp
cs
fidivl
arpl
push
and
aad
notl
pop
notb
cmp
jb
lock
mov
mov
and
clc
fdivrl
insl
inc
xchg
sub
test
insw
sbb
roll
repz
push
sub
icebp
movsl
aaa
hlt
fstpl
fstl
into
mov
stos
daa
xor
mov
pop
push
push
or
mov
outsl
enter
mov
cmc
rorb
sbb
inc
mov
jl
out
or
pop
mov
mov
sbb
push
repz
xor
shlb
icebp
sbb
enter
call
mov
loope
gs
adc
mov
xchg
xor
fmull
adc
data16
sub
ret
stos
gs
outsb
fisubrs
or
add
pop
aas
into
push
icebp
dec
adc
push
jne
cmp
xor
xor
dec
jbe
testl
pop
add
add
adc
in
sbb
and
stos
shrb
lret
movsb
mov
mov
mov
jl
rorb
sbb
xchg
or
pop
sub
adc
xor
cs
or
jmp
mov
pusha
cld
xchg
xchg
ss
fadd
xor
xchg
mov
push
pop
lret
ljmp
add
xor
mov
mov
and
aaa
xor
or
adc
inc
int3
add
aas
xor
into
jne
scas
pop
jecxz
push
mov
dec
cld
int3
sti
arpl
mov
mov
cmp
clc
iret
cmp
cmc
mov
mov
xchg
cmp
clc
pop
clc
inc
movsl
pop
push
fildll
jb
pop
cmp
jnp
in
shl
sbb
dec
or
pop
cmp
test
xor
loope
shlb
xor
jg
jne
jl
lods
psllq
and
xchg
insb
pop
xchg
out
jle
imul
lds
push
inc
ds
dec
repz
ja
inc
cltd
cmp
and
test
xor
movsl
add
sbb
xchg
sti
xor
cmpsl
xchg
ret
jp
fbld
scas
test
lret
hlt
mov
jnp
in
gs
lahf
push
pop
add
xchg
inc
pop
lcall
scas
push
xchg
addr16
clc
and
dec
fmul
and
loop
adc
mov
cld
lcall
in
das
movsb
xorb
std
push
lcall
adc
pop
leave
or
aas
add
push
es
cli
int
out
rcrb
lret
fcmovb
sahf
nop
xchg
call
js
ja
push
mov
scas
stos
std
loope
xor
xchg
pusha
adc
xor
sub
dec
add
sub
dec
or
mov
add
adc
cwtl
add
out
cmpsl
jae
into
movsb
pusha
ffree
or
xor
push
vcomisd
inc
pop
inc
icebp
xor
xor
and
push
and
push
push
jb
data16
insl
int
or
fs
xchg
pop
mov
popa
pop
lock
ja
out
push
add
push
popf
out
add
and
cmp
cmp
cmpb
nop
cmp
in
xchg
push
dec
xor
and
xchg
pop
xchg
adc
mov
cmp
sub
movsl
cmp
xchg
mov
sbb
push
xchg
mov
aaa
popf
test
inc
cmc
jl
sub
addr16
cld
popf
xor
cmc
sub
call
pop
xor
in
popf
cmc
cmp
fstpl
push
xchg
hlt
add
cld
orb
orb
cmp
bound
lahf
bound
pushf
mov
in
out
push
pushf
scas
jne
pop
push
cmp
adc
movsl
imul
push
xlat
xchg
lahf
jg
mov
sub
adc
cmp
psubb
mov
pop
push
add
jp
mov
cld
in
cmpb
test
lods
insb
mov
jp
mov
test
adc
pop
lcall
sbbl
mov
lds
inc
sub
mov
clc
inc
jmp
or
ljmp
sub
pop
outsb
jo
jecxz
cmpb
jmp
test
add
jbe
jae
ss
push
test
aaa
jmp
cmp
cmp
insl
sahf
inc
pop
jmp
mov
outsb
inc
lahf
mov
jl
sbb
testl
ror
pushf
xorb
sbb
mov
pop
dec
mov
mov
fsubs
int
imul
xor
inc
aas
dec
test
cmc
iret
test
test
imul
sbb
mov
stos
mov
xchg
xor
mov
loopne
jmp
iret
cmp
ja
add
fisttpll
cmc
mov
jns
repz
push
dec
mov
int
add
sarl
push
repz
enter
fcompl
dec
dec
sbb
cmc
loope
pop
push
lods
mov
mov
jge
cmc
mov
and
mov
mov
jne
arpl
scas
call
push
aam
popa
inc
push
cmp
out
sub
dec
jb
shll
insl
add
int3
in
sahf
xchg
dec
xor
xor
pop
mov
adc
jnp
mov
pop
cltd
sub
stos
repz
enter
lea
xor
xchg
mov
add
lret
and
enter
sbb
or
shll
sub
shrl
popa
imul
sti
mov
xor
or
pusha
ja
test
rclb
shr
subb
push
mov
pusha
iret
cmpb
in
hlt
sbb
or
test
push
ds
lcall
cmc
xor
mov
fdivrs
daa
stos
sub
test
push
hlt
into
sub
in
pop
push
call
arpl
xor
fs
into
push
cwtl
lret
ror
push
jmp
cli
pusha
subb
lock
dec
test
pop
pop
mul
xor
adc
cmc
sub
nop
xchg
sub
cmpsb
cmp
dec
inc
stc
dec
push
xchg
sub
ret
lds
in
fstps
xor
out
xchg
shl
outsl
hlt
inc
arpl
adc
or
or
ds
flds
gs
pop
es
scas
mov
push
mov
inc
stos
adcl
adc
fs
pop
xchg
push
xlat
sbb
data16
cmp
xor
fldcw
loopne
mov
test
or
lahf
mov
cmpsl
bound
jl,pn
sub
ja
sbb
inc
sub
test
sbb
ja
insl
cmp
in
mov
lcall
es
lahf
add
pop
xor
mov
inc
push
sbb
dec
loope
jmp
out
cs
mov
nop
shll
insb
add
pop
loope
pop
sub
icebp
inc
xor
stc
push
mov
cs
adc
rcll
aas
daa
cmp
cmp
pop
xor
jbe
rclb
hlt
mov
dec
mov
enter
mov
mov
mov
dec
pop
xlat
pop
iret
loope
adc
xchg
ret
lods
mul
sbb
cwtl
sbb
adc
jl
outsb
gs
pop
adc
inc
mov
ss
xchg
dec
add
les
scas
xlat
sub
movsb
sub
xor
int
cmc
cmp
nop
nop
xor
ret
ss
sbb
in
loope
fcoms
jmp
sub
lock
push
fbld
mov
shll
inc
push
xor
lcall
fbstp
push
xchg
inc
mov
lods
mov
test
xchg
jo
lds
int
incb
aas
lods
inc
popa
into
mov
or
cmc
nop
add
adc
and
and
sar
lcall
mov
sub
or
cmp
fadd
push
add
lea
or
cltd
sbb
jo
pop
ss
and
or
scas
cmp
or
les
cmp
addr16
cltd
call
mov
jg
lcall
loope
imul
hlt
jg
fidivs
lahf
out
sub
icebp
inc
in
lds
jecxz
mov
push
mov
mov
shll
fstl
int3
cwtl
jg
or
cmpsl
jno
mov
out
dec
push
fildl
mov
popf
sub
sbb
loope
imul
call
test
xchg
pop
int
jb
xchg
and
dec
hlt
bound
adc
dec
sarl
je
cmp
dec
int
sbb
aad
idivb
mov
sub
testl
in
adc
std
fiaddl
adc
mov
icebp
fcoms
mov
push
pop
and
push
pop
push
sbbb
sbb
fwait
push
dec
dec
out
dec
popa
push
ret
dec
dec
sbb
cmp
sarl
bound
sbb
das
call
ret
jecxz
inc
push
incl
test
push
push
out
bound
adc
xlat
jne
adc
jae
mov
fstpt
je
sbb
cmp
xlat
inc
push
les
out
pop
mov
cld
jp
insl
es
pop
subl
dec
ja
mov
cli
dec
lods
movsb
addb
scas
or
push
adc
jp
and
push
jnp
jl
idivb
lahf
xchg
fwait
cli
rol
sbb
clc
mov
leave
test
sbb
mov
cmpsl
xchg
add
jb
cltd
cwtl
aaa
mov
push
xchg
xchg
sub
pop
call
jp
cmp
sbb
inc
dec
mov
cmp
fwait
scas
cmp
in
pusha
cs
ss
lret
into
jno
mov
dec
leave
mov
xchg
mov
clc
sahf
mov
pushf
adc
sarl
dec
xor
push
xchg
push
dec
imul
movsb
jo
pop
je
cmp
aam
fldl
xor
add
pusha
adc
mov
arpl
std
cltd
dec
mov
mov
insl
and
pop
or
inc
and
gs
sub
jp
xor
sub
mov
aad
xor
adc
out
fisttps
testl
and
sub
cmc
inc
xor
les
fnstsw
sarb
ret
enter
pop
scas
mov
gs
jne
bound
iret
ljmpw
or
push
adc
and
scas
rcrl
mov
pop
jp
dec
pusha
and
sub
arpl
jne
mov
mov
sub
test
xor
push
rcrl
scas
dec
bnd
jmp
loopne
aas
popf
xchg
pop
movsl
sahf
loop
sbb
mov
add
jnp
lods
scas
popf
scas
jo
jne
sbb
mov
xchg
or
or
inc
mov
mov
cmp
or
loopne
pushf
ret
rorb
cwtl
and
jle
in
pop
jmp
mov
lahf
loopne
fdivp
data16
leave
cli
xchg
pop
lods
ljmp
das
xlat
lock
adc
jno
cmp
adc
sbb
test
aad
add
dec
mov
int3
sub
movsb
test
or
or
and
push
xchg
les
bound
sub
mov
pop
cmc
popa
cmp
push
cmc
imul
mov
xor
sub
or
add
pop
les
jp
pushf
mov
insb
xchg
insl
es
jp
outsb
ror
call
mull
call
adc
jnp
pop
std
inc
imul
inc
push
sbb
sbb
xchg
das
test
mov
push
jbe
or
daa
cmp
mov
cltd
pop
scas
jae
subl
leave
pop
cli
sbb
mov
sti
into
mov
popa
pop
mov
push
mov
pop
fnstenv
mov
testl
and
rcl
jmp
loopne
inc
inc
add
push
call
icebp
mov
andl
or
gs
cld
push
jbe
iret
shr
inc
ret
enter
mov
ljmp
xchg
test
int
sbb
push
outsb
inc
cmc
sbb
jae
push
mov
in
dec
dec
lds
dec
pop
loop
sbb
pushl
popf
clc
jae
cmp
mov
ret
or
jns
sbb
arpl
and
js
es
push
inc
pop
or
fbld
mov
pop
jbe
inc
mov
sbb
sbb
pop
xor
rclb
clc
dec
mov
divb
xor
dec
and
gs
cmc
jmp
or
call
pop
mov
data16
mov
rcll
push
data16
fwait
ja
insl
out
sarl
fiadds
xchg
xor
repnz
dec
xor
fwait
es
rcrb
pop
cmpsb
js
loopne
push
dec
inc
push
jb
mov
test
je
inc
push
push
mov
or
mov
pop
push
jae
or
jle
jno
push
mov
out
mov
mov
popa
push
popf
and
xchg
aaa
lods
jo
xor
shlb
stc
adc
pop
shlb
loope
pop
fwait
cltd
je
mov
mov
out
ja
stc
les
popa
or
xor
hlt
out
rcrl
outsl
inc
out
fildll
inc
loopne
push
adc
test
enter
shlb
dec
out
test
dec
adc
adc
popf
lock
and
xor
add
cmp
pop
outsb
sub
push
mov
icebp
ds
push
insb
xchg
cmp
pop
lret
scas
inc
sbbl
out
cmpsl
imul
neg
mov
add
int3
sub
call
pop
outsl
bswap
pusha
addl
mov
inc
push
xor
test
push
daa
push
nop
push
fdivl
push
insl
fmulp
int
stc
fucomip
pusha
sti
mov
test
and
push
movsl
fildl
fwait
jecxz
jp
mov
repz
add
dec
adc
push
mov
or
push
lcall
jne
mov
mov
jge
jp
dec
lods
xchg
dec
sbb
pop
fsubs
fwait
lods
fwait
imul
push
cmp
mov
aaa
movsl
hlt
call
pop
adc
sti
xchg
mov
mov
sahf
jecxz
inc
or
push
lea
dec
mov
pop
jmp
adc
push
rcrl
out
jmp
lock
inc
xchg
dec
test
popa
aad
imul
xor
shll
stos
cmp
pop
pop
cmpsb
popf
pop
dec
and
mov
fcoms
push
jo
enter
ja
pop
stos
jmp
fmull
lods
int
and
out
pop
sahf
mov
loop
pop
xchg
dec
mov
lods
mov
fisttpl
rorl
cs
sub
out
dec
in
aas
cmc
mov
push
cwtl
and
mov
jl
sub
aaa
xchg
popf
sbbb
cs
adc
or
lds
addr16
xchg
mov
add
and
fstpl
es
leave
fstpt
xchg
pop
aas
dec
out
sbb
inc
inc
out
or
xor
sbbl
cmpsl
in
sbb
lret
push
jl
inc
inc
cli
lock
pop
jmp
sub
sti
out
test
xadd
mov
es
cwtl
cmpsb
xchg
pop
pop
push
fistpll
xor
mov
xchg
sbb
cld
mov
sub
mov
mov
aad
fdiv
outsb
jg
mov
cmp
das
push
stc
xchg
loop
mov
xchg
jle
out
mov
mov
and
mov
fcmovne
sub
sbb
int
add
adc
cs
repz
cmpsl
inc
adc
out
pop
add
shlb
xchg
out
adc
sbb
jecxz
les
xor
mov
fisttpl
cmp
popf
rorl
out
pop
dec
lahf
je
jb
sub
daa
mov
int
aas
lea
out
mov
aas
aad
push
das
mov
aas
pushf
push
add
ja,pt
pushf
jmp
sub
cmc
cmp
xchg
iret
repnz
fildll
jns
shlb
and
pop
sub
cmpsb
dec
arpl
lock
and
mov
push
movsb
call
jg
cltd
xor
fdivrs
enter
fisubs
popf
xlat
insb
xchg
sub
movsl
xchg
inc
ret
pop
mov
sarb
mov
lret
add
insl
je
cli
push
jbe
in
sets
push
into
or
shrl
shr
jg
push
mov
in
cwtl
inc
test
cmp
in
scas
xchg
push
pop
pop
ds
icebp
dec
add
mov
cld
ror
jle
add
jge
lds
dec
mov
test
fnstsw
mov
in
jl
movsb
repnz
rcr
dec
aas
xchg
pop
xchg
pop
mov
shl
xchg
push
dec
adc
sahf
test
pop
lods
sahf
movsb
jecxz
dec
fdivrl
mov
fcomps
sbb
adc
sarb
daa
shll
add
push
and
push
fdivs
call
lahf
sub
cmp
sub
jecxz
cmp
add
mov
mov
notb
das
lcall
and
fsub
xchg
adc
push
popf
cmp
pop
mov
cmp
arpl
inc
mov
ficoms
int3
fldenv
inc
or
cmp
xchg
or
jnp
xchg
loopne
mov
push
push
icebp
pop
pusha
int
aam
push
mov
mov
scas
mov
pop
xor
xchg
cmp
add
cmp
test
mov
dec
fsub
je
adc
mov
adcl
movsl
rorb
int
andb
jb
std
mov
inc
les
mov
jbe
sub
pop
push
dec
push
inc
lds
or
es
bound
dec
cmp
or
push
ds
mov
adc
push
adc
dec
decb
popf
lods
fst
and
call
inc
or
mov
shrl
add
data16
shl
mov
add
push
lcall
ja
or
sub
insl
cmp
mov
gs
xlat
add
mov
aam
imul
ret
jmp
pop
imul
push
ret
or
clc
or
push
xchg
sahf
stos
pop
movsl
aad
aam
cmpsb
loope
sub
xchg
dec
adc
in
imul
lea
xchg
lea
sahf
sbb
mov
loopne
ljmp
adc
subl
inc
jb
ljmp
icebp
fisttpl
dec
fisubrl
fcoms
pop
pop
repz
lods
lret
add
stos
repz
aas
mov
push
mov
jno
inc
xchg
pop
mov
jp
and
inc
pop
mov
and
mov
xlat
dec
push
xor
dec
rclb
cs
pop
icebp
jb
in
dec
out
cli
push
adcl
cmp
sub
add
cmp
xchg
jae
mov
ret
pop
fbstp
mov
iret
aam
inc
movsb
jmp
hlt
dec
jae
insl
push
lahf
inc
in
cmp
add
aad
jne
jmp
or
aas
xchg
lods
jo
xchg
test
and
sub
xchg
pop
aad
dec
fstps
inc
es
jmp
mov
push
jmp
repz
rcr
mov
sbb
test
icebp
jne
std
xchg
jmp
sbb
push
push
pusha
push
or
mov
aam
mov
fnstcw
iret
pushf
pop
jo
mov
dec
aad
out
add
or
cmp
iret
subl
push
dec
xor
aaa
sti
pop
imul
dec
fldcw
imul
clc
std
dec
loop
cmc
nop
pushf
sub
xlat
outsb
add
es
mov
lahf
inc
adc
mov
dec
xchg
pop
inc
inc
or
mov
mov
mov
bound
dec
shl
xchg
icebp
mov
push
mov
push
jne
lahf
negb
xlat
sub
into
mov
adc
adc
stc
je
daa
lret
aaa
into
rclb
xchg
test
cltd
test
pop
push
fdivs
jp
xor
gs
out
inc
lds
subb
into
loopne
in
les
pop
push
xchg
sahf
pop
push
fucom
sbb
sahf
clc
sbb
jbe
popa
outsb
or
and
loop
adc
call
in
sub
xchg
pop
iret
sahf
int
push
mov
out
cld
cltd
jge
shll
mov
xor
cld
cmp
push
popa
pop
cmp
insl
xor
cli
dec
dec
or
mov
imulb
scas
cmp
in
mov
push
ror
loop
inc
or
cmpsb
sbb
mov
jle
pop
daa
test
inc
push
pop
fwait
pop
inc
sahf
test
push
cltd
pop
push
lcall
mov
fwait
js
xchg
sub
scas
out
inc
and
outsb
imul
mov
outsb
cmpsl
ret
shrb
pop
lret
inc
lret
ds
jno
loopne
jbe
fiadds
xchg
repz
lret
jmp
std
push
adc
inc
pop
mov
or
pusha
fcmovnu
lock
and
data16
movsb
movsl
out
add
jnp
inc
das
lcall
mov
movsb
outsl
push
pop
popf
jbe
mov
inc
mov
mov
data16
push
sub
aas
stos
push
fistl
popa
inc
divb
mov
mov
inc
test
ss
ja
cmc
or
pop
imul
mov
jge
leave
xor
pop
sub
lds
dec
aaa
xchg
std
daa
push
daa
mov
imulb
mov
inc
adc
xchg
leave
mov
pushl
adc
rcrb
push
sahf
repz
mov
in
dec
xchg
decl
dec
fstpt
adc
or
ss
xor
mulb
popa
in
sbb
ret
sub
iret
sbb
and
ds
orb
faddp
pop
jno
popf
lods
xchg
add
xchg
pop
in
imul
jl
cld
mov
stc
scas
shrl
xor
lods
jmp
aam
pusha
scas
inc
cli
inc
mov
sub
mov
xor
and
push
dec
xchg
push
loop
stc
push
rol
fstpl
sub
sbb
fcomp
mov
ret
pop
adc
adc
jecxz
pushf
pop
test
int
xor
sarb
sbb
shrl
in
leave
sbb
cs
adc
adc
xchg
xchg
roll
xor
mov
sbb
cli
xchg
scas
loopne
in
push
lock
fidivs
outsl
and
push
inc
mov
jae
inc
in
dec
xchg
insl
xor
xor
mov
cmp
sub
adc
lock
shll
out
jne
cmp
and
es
popf
lods
mov
push
cli
sahf
push
in
pop
xorb
insl
add
mov
cs
push
lods
xchg
aam
pushf
xchg
add
fistpl
fwait
cmpsl
xchg
stc
pop
mov
popa
iret
xor
popf
cld
mov
sub
shl
sti
clc
xchg
loope
fnstenv
shlb
mov
ljmp
adcb
jmp
sub
mov
push
dec
das
xchg
ja
movsb
pop
mov
push
ja
jns
mov
out
addr16
pop
adc
addr16
xor
push
push
leave
ljmp
dec
sahf
repz
stc
loope
pushf
popa
xor
jno
push
jne
mov
sbb
int3
add
decl
call
cwtl
in
add
call
aaa
and
push
push
lret
pop
fwait
xchg
push
mov
bound
jp
shl
dec
in
cmpl
flds
xchg
mov
sub
mov
mov
sbb
mov
in
pop
rclb
icebp
dec
adc
out
xchg
jb
insl
or
mov
mov
push
cwtl
out
scas
mov
xchg
mov
pop
movsb
xchg
inc
fmulp
xchg
cmpsb
xchg
rclb
cmpsb
fdivrs
enter
cmpb
pop
les
pop
popf
pop
jge
add
push
inc
lahf
mov
adc
mov
push
cmpsl
lea
push
js
das
or
insb
fdivrl
or
add
js
or
sbb
fbstp
jae
dec
loope
xchg
cltd
dec
fisttpl
or
lret
push
daa
dec
ret
repz
mov
dec
addr16
xlat
xor
mov
pop
aam
mov
loopne
pop
jmp
mov
fnsave
push
add
loopne
scas
and
mov
push
and
gs
push
shl
rcrl
cltd
loop
jl
jp
mov
and
xchg
aad
testb
or
das
pop
ja
push
mov
jmp
mov
scas
inc
xchg
add
mov
loop
fcoml
jne
sub
mov
fisttpl
ss
mov
xchg
in
adcb
mov
and
jl
fstl
in
push
jmp
ljmp
in
and
push
cmp
out
xchg
add
ljmp
mov
xor
jmp
mov
adc
jae
cltd
mov
sbb
xchg
mov
add
loop
pusha
fstpt
or
sub
mov
mov
je
sub
sbb
jmp
and
bt
and
loopne
sbb
push
scas
push
xchg
sub
sbb
les
int
iret
sub
mov
push
repz
mov
jl
add
sahf
mov
inc
fs
lods
mov
fxch
sbb
outsb
dec
sbb
jbe
xchg
push
add
xor
lcall
fmul
gs
notl
adc
mov
dec
arpl
js
roll
cld
xchg
aad
leave
mov
lahf
aam
mov
pop
and
sbb
ss
xchg
xor
cs
add
std
adc
divb
and
mov
out
mov
insl
cmc
push
inc
enter
mov
jl
mov
ja
mulb
inc
xor
mov
ja
iret
jp
sbb
stc
or
cltd
dec
sbb
xchg
push
jge
idivl
sbb
ret
out
les
loop
inc
xchg
xchg
call
pop
sahf
cwtl
adc
push
mov
std
or
repz
and
ljmp
neg
mov
ffree
add
jge
jmp
aas
in
cmpsb
sub
push
movl
aas
inc
mov
sub
sub
je
cmpsl
lcall
sarb
lahf
or
frstor
shll
xchg
and
fstpl
xchg
mov
jns
rol
fmul
or
popl
jmp
dec
outsl
sbb
dec
lods
jno
mov
lretw
pop
sbbb
add
stc
xchg
add
pop
lret
sar
sub
iret
mov
jne
lock
fsub
sbb
in
enter
shll
loope
aam
add
add
daa
testl
inc
int
xchg
lret
mov
fsubs
dec
arpl
jge
mov
jl
pop
loopne
jnp
out
outsl
inc
pop
sbb
cwtl
ljmp
xor
xorl
jmp
jb
inc
fwait
and
jne
mov
xchg
pop
mov
pop
pushl
pop
sti
push
call
cmp
test
or
fcmove
insb
ficoml
hlt
cli
iret
push
ficompl
xor
cwtl
cmp
lods
lea
pop
inc
mov
mov
push
add
mov
sbb
imul
cmp
ss
das
lods
sub
inc
push
mov
iret
bound
fnsave
cs
cli
jmp
adc
pop
je
push
inc
sbb
and
sti
cld
xchg
and
ret
aas
ret
xchg
hlt
or
pushf
pop
sbb
aad
jecxz
outsb
pop
addr16
xor
sbb
sub
icebp
mov
enter
std
sarb
xor
aad
std
mov
stos
call
add
add
adc
push
daa
aam
test
sub
inc
mov
sbb
adc
mov
pop
sarl
xchg
sbb
jecxz
enter
push
loope
or
lret
pusha
xchg
sbb
fisubl
movsb
subl
push
push
mov
add
jb
mov
and
and
sub
nop
or
push
inc
xchg
adc
inc
in
shrl
push
jmp
popf
xchg
data16
add
data16
std
lods
and
mov
mov
adc
in
xlat
outsb
scas
aad
inc
nop
iret
cmc
fyl2x
aad
jg
push
or
jecxz
faddl
data16
aad
adc
or
mov
pop
mov
repnz
mov
shrl
loope
pop
xchg
mov
shl
rcrl
sub
in
push
pop
fildl
and
push
roll
dec
dec
fbld
cli
sti
pop
in
cmc
cltd
addl
movsl
lret
insl
jmp
push
mov
jle
jb
div
pushf
adc
scas
mov
jne
sahf
call
frstor
int3
mov
cmp
mov
pop
jae
xor
cmp
icebp
cmp
fmuls
dec
pusha
jmp
and
aaa
pop
lods
aas
pop
jmp
fdivrl
mov
xchg
repnz
lret
mov
sub
xor
cld
repz
adc
cmp
pop
jno
pop
cmovle
nop
jnp
in
scas
push
les
fsubl
cmp
mov
mov
push
dec
rcrl
adc
test
rcrl
jp
xchg
mov
fwait
sbb
mov
mov
cmp
es
imul
mov
push
lods
push
jae
addr16
xorb
sbb
repz
loopne
roll
or
push
outsl
sbb
adc
push
pop
adc
mov
sbb
mov
imul
pop
test
in
cmc
nop
cmc
cmp
and
push
xor
pop
jl
into
xchg
movsb
sub
fldl
std
add
inc
ret
fidivl
sbb
dec
aad
shrl
mov
js
sti
pop
dec
dec
adc
fs
cmp
sub
outsl
test
jae
sub
mov
and
pop
subb
sti
and
stos
push
mov
sub
int
fisubs
cli
jne
ret
jo
jecxz
pushf
pop
fwait
call
in
cltd
stos
xchg
aam
test
test
das
mov
jne
inc
fdiv
mov
in
int3
ljmp
cmp
jb
lods
xor
das
dec
sbb
das
cmp
mov
pop
sub
pop
js
inc
push
and
inc
test
fcoml
dec
xor
xchg
dec
mov
push
mov
or
cmc
pushf
pushf
fnstsw
fimull
add
daa
push
push
pop
add
jns
pop
negb
mov
jle
or
xor
test
imul
cmpsb
pop
mov
lret
or
ja
xorb
adc
cli
std
loopne
ja
ss
in
cmp
inc
pusha
test
fildl
cmpsl
cmc
sti
cmp
test
pop
icebp
sub
outsb
pop
or
adc
cltd
je
push
cmpsl
fs
incb
das
cmp
jnp
cmp
cld
jecxz
pop
popf
pop
cli
imul
push
mov
sbb
sbb
dec
add
mov
lret
sbb
push
ja
imul
repz
jb
adc
out
cltd
or
cwtl
repz
inc
lret
popf
aad
cmpsl
and
pop
imul
or
mov
std
mov
std
adc
popa
div
sbb
or
fucomi
mov
xor
std
movb
lcall
and
out
fsin
inc
fucomi
loop
es
stc
lahf
andb
cmpsb
cmp
sbb
repnz
pushf
gs
sbb
mov
imul
jbe
add
add
xchg
subb
mov
fiaddl
nop
xchg
scas
shrl
push
mov
mov
in
gs
xchg
lret
fs
add
sarl
fs
fsub
cs
adc
mov
mov
icebp
arpl
movsl
sub
jge
aam
push
insl
roll
and
ja
add
lret
dec
lahf
lock
jnp,pn
outsl
sub
mov
shl
movsl
xchg
mov
ret
int
mov
cmp
dec
push
fldt
adc
xchg
and
mov
dec
insl
test
push
clc
ss
cld
jo
xor
filds
xchg
push
push
pop
fildl
sti
dec
shlb
lret
jae
mov
xchg
repnz
cmc
lahf
pusha
jo
xlat
xor
push
push
mov
rorb
stc
mov
test
cltd
push
xchg
fs
or
jns
imull
mov
mov
sub
fcmovbe
jo
push
sub
orb
in
add
inc
rol
jge
in
lds
pop
testb
sub
mov
pushf
push
and
lds
lods
inc
dec
jne
inc
bound
or
or
popf
sub
rcll
push
cltd
xor
jl
cmp
mov
mov
insb
lds
stc
dec
pop
imull
sbb
insb
outsb
subl
sub
mov
dec
popa
ss
call
cmc
or
push
inc
mov
cmp
adc
inc
pop
jb
add
scas
fnsave
std
fdivl
jno
ret
call
cs
pop
in
les
cmp
imul
pusha
in
push
aas
rol
xlat
pop
loope
push
sub
test
movsb
icebp
insl
ret
mov
mov
pop
xor
fldcw
pushf
dec
jne
pop
test
push
adc
pushf
mov
outsl
mov
jmp
or
adc
sbb
pushw
sub
mov
xchg
sbb
xchg
or
push
loope
xchg
cmp
imul
add
mov
nop
push
pop
mov
test
adc
xlat
jmp
jl
jnp
jb
int3
fwait
bound
dec
and
incb
call
and
jle
pusha
sub
jne
jnp
sub
ret
lret
std
bound
mov
cld
xchg
and
dec
sbb
and
out
push
in
test
sbbb
mov
mov
add
popf
lods
inc
popa
and
add
idivl
mov
mov
adc
fwait
nop
mov
hlt
push
and
lea
out
pop
xor
jbe
cmp
dec
mov
mov
ds
test
imul
testl
bound
in
add
in
out
lods
pop
adc
aam
iret
pusha
xchg
sub
lret
cmp
mov
rcrl
xchg
ret
data16
filds
shrl
dec
mov
xchg
cmp
sbb
movsb
fwait
aam
push
dec
rorl
lock
repz
pusha
lods
inc
sbb
xor
sub
sbb
mov
xlat
sub
mov
int3
adc
or
inc
sub
mov
push
add
mov
cmc
lcall
xchg
dec
inc
push
jae
pop
sbb
or
in
aaa
or
xor
push
jp
add
dec
jge
and
mov
cmpsl
ds
stos
loope
pop
mov
adc
push
aas
daa
orl
jbe
test
int
adc
fwait
scas
fdivrs
inc
arpl
inc
in
push
xchg
inc
mov
in
mov
insb
ret
jne
sbb
aam
fcoms
nop
in
out
test
mov
mov
mov
adc
gs
dec
cwtl
push
test
mov
mov
out
stos
scas
sbb
add
or
into
adc
and
ja
cmp
lock
testb
pop
fisubs
mov
cmpl
sub
jle
xchg
mov
push
mov
icebp
mov
test
push
fldl2e
scas
adc
daa
vmovdqu
aad
adc
xor
push
les
ficoml
push
and
push
xor
inc
fists
arpl
jecxz
and
and
fstps
cmp
testl
lret
rcr
into
add
sub
push
rcrl
push
mov
scas
movsl
pop
mov
pop
and
add
mov
scas
data16
mov
adc
mov
mov
out
pop
cmpsb
outsl
loop
movl
js
cwtl
inc
sbb
test
cltd
out
imul
idivb
int
push
sub
aaa
loopne
push
inc
dec
loop
push
shlb
imul
scas
and
sub
stc
arpl
loope
xchg
add
adc
cli
insl
pop
repnz
inc
rcr
jg
cli
testb
test
bound
data16
jae
loope
leave
mov
test
scas
divb
adc
xor
jge
sub
icebp
push
or
lods
outsl
cwtl
daa
stos
xchg
cwtl
add
push
pusha
popf
inc
imul
int3
mov
outsl
sbb
mov
mov
adc
std
push
xchg
cmc
inc
je
xchg
stos
mov
add
loope
xlat
and
xchg
les
mov
cmpsb
inc
insl
rorl
into
dec
sbb
cmp
addr16
mov
inc
call
cld
fadds
bound
lahf
mov
push
cld
lcall
in
sbbb
cmp
add
aad
adc
int3
jg
mov
notb
pop
and
xchg
dec
dec
sahf
mov
in
jns
cmp
adc
std
ljmp
xchg
jle
nop
out
cmpl
insl
sbb
xchg
loopne
pop
mov
or
sub
push
or
push
mov
popa
fildl
jp
fisubs
ljmp
mov
mov
sbb
frstor
jmp
or
pushf
sbb
lea
mov
inc
out
mov
add
movsl
lea
add
das
popf
ret
cltd
inc
push
push
jmp
pop
aaa
push
jbe
enter
mov
loop
cmc
shlb
int
dec
pop
test
fisubs
sub
sahf
jbe
out
jmp
sbb
xchg
push
pushl
ret
aas
fnstenv
pop
cwtl
push
repnz
pop
ljmp
push
in
or
cmp
fdiv
imul
or
cwtl
xlat
xchg
ret
clc
pop
mov
dec
push
or
imul
lock
jge
inc
in
les
mov
fwait
jbe
or
icebp
movsb
rcrb
mov
mov
lret
out
sub
adc
xor
sub
lds
jge
xchg
outsb
mov
out
or
fadd
test
loopne
pop
cmpsl
int3
arpl
xor
or
icebp
stos
inc
loopne
cmpsb
sbb
mov
leave
add
pop
pslld
mov
sub
dec
add
cmp
inc
sahf
ficoms
and
cmp
pop
jnp
push
fwait
jb
repnz
xchg
faddl
dec
mov
mov
jno
hlt
mov
sbb
mov
sub
fimuls
loope
pop
pop
cwtl
pop
lret
mov
sarl
sbb
pop
in
add
cmp
adcb
xor
fdivp
and
ret
stos
arpl
imul
push
mov
rcrl
rorl
test
ja
mov
inc
or
push
mov
adc
andb
lea
mov
out
aad
dec
mov
mov
dec
pop
xchg
mov
pop
sub
xlat
jle
add
cmpsb
movsb
andb
inc
movsl
incb
cmpsl
es
mov
stc
cltd
clc
lret
sbb
mov
out
sti
popa
lods
aam
jg
stos
push
jae
pop
les
test
popa
add
lret
jb
mov
xchg
push
call
cmpb
mov
jne
mov
and
adc
movsl
sbb
pop
and
aam
imul
pop
inc
int
mov
sti
mov
test
adc
ret
push
ds
mov
adcl
pop
rcll
movsb
pop
push
mov
cmp
daa
add
test
xor
cmp
lock
mov
adc
cwtl
adc
mov
out
dec
xchg
pop
jnp
lea
adc
mov
jno
fstpt
xor
out
aas
lret
mov
outsb
test
adc
or
push
xchg
cs
or
dec
push
mov
dec
or
lcall
cmpsb
pop
fimuls
add
jne
bound
int3
mov
out
ret
sti
dec
lds
ror
pop
es
jae
stos
into
push
into
inc
insl
mov
ja
cmp
in
mov
adc
push
in
sbb
notb
add
xor
leave
mov
xor
cmp
jg
pop
and
sub
push
mov
or
aas
inc
xchg
sub
push
jno
adc
cltd
add
lods
mov
jmp
mov
aaa
adc
xor
subb
xchg
arpl
sbb
mov
mov
jge
xor
gs
mov
dec
xor
pushf
mov
mov
mov
xchg
fstps
mov
pop
clc
cld
movsb
sbb
pop
fwait
rorb
popf
mov
xchg
sub
mov
inc
fldcw
cli
xor
push
cmc
adc
loop
imulb
mov
notl
sbb
sbb
push
outsb
add
mov
repnz
les
xchg
pop
cmp
repz
sbb
fdivrp
gs
mov
data16
cmc
nop
mov
jae
hlt
pop
adc
xchg
adc
jnp
or
mov
addb
ret
movsl
cld
fnstsw
psubq
or
mov
inc
adc
pop
loopne
and
daa
cmpps
and
inc
ret
decb
add
subl
adc
sbb
negb
mov
mov
push
xchg
jbe
bound
leave
test
pop
xor
scas
xor
leave
pop
mov
pop
xor
lret
push
jae
jp
mov
scas
lea
loop
and
jmp
dec
fdivrs
cmc
adc
sub
pushf
cmpsl
in
jne
dec
adc
inc
jp
adc
pop
sti
xor
icebp
dec
fucomi
inc
xchg
xchg
sti
lods
mov
ficoms
cmp
sub
mov
or
mov
inc
mov
or
inc
mov
bound
loope
andb
and
outsb
jnp
hlt
lahf
mov
out
jecxz
imul
add
daa
or
jbe
xor
out
cwtl
andb
or
cmp
movsb
cmpps
stos
mov
xchg
aas
dec
mov
je
or
aaa
fwait
cmpsl
push
shr
cltd
sbb
in
cwtl
xchg
and
mov
pop
addr16
clc
rcrl
test
pop
hlt
adc
rcll
mov
adc
cmp
fwait
cmp
fnstcw
fdivrs
arpl
add
aaa
xor
and
das
loope
sub
push
movsb
sarl
rol
xlat
mov
fnstsw
pushf
sahf
and
xchg
fnstsw
sar
into
loope
outsb
fs
cmp
ret
rcrb
push
mov
dec
lret
vmwrite
mov
push
repnz
sub
inc
mov
ret
sbb
into
ficoml
fbstp
fbld
imul
loope
mov
pop
jecxz
pusha
mov
mov
lds
dec
and
mov
push
mov
dec
das
xor
repnz
loopne
clc
push
aad
test
mov
adc
int
enter
cmp
sbb
sub
pushf
shl
adc
into
jnp
jo
popaw
cld
sbb
push
jno
inc
out
mov
fldcw
in
push
xchg
adc
mull
insl
sbb
cmp
jmp
inc
mov
pop
add
jne
dec
test
xor
fwait
mov
repz
stos
sbb
jno
cmc
fstpl
add
orb
cmp
sub
aaa
mov
repz
ds
pop
xchg
mov
mov
mov
dec
mov
jnp
sahf
jns
test
and
ret
mov
mov
outsl
sub
pop
push
lcall
xor
test
xor
fdivl
pop
mov
xor
cmp
dec
aam
pop
loop
xchg
cmp
push
add
mov
aad
ss
jbe
mov
mov
fwait
push
mov
into
das
push
cmp
cmpsl
push
mov
cmpsb
or
ja
sbb
or
fs
out
incb
cmc
dec
bound
shrl
mov
xor
xchg
aam
sub
dec
mov
mov
sbbb
loope
mov
stos
out
jnp
or
test
lods
sahf
imul
scas
sbb
xorl
and
jp
inc
pop
cmpsl
out
subl
push
mov
mov
xchg
nop
imul
jge
xchg
aad
pop
mov
cmpsb
lock
out
aam
sub
sub
cmp
xchg
mov
mov
test
xchg
shl
scas
maxps
jae
jb
js
push
stos
add
xchg
dec
loopne
fistl
pop
cmc
insb
inc
adc
inc
popf
es
stos
add
xor
xor
nop
call
adc
mov
xor
fstps
or
sbb
cmpsb
inc
sbb
jae
mov
stos
inc
mov
mov
popl
stos
dec
jnp
cmp
lcall
and
pushw
xchg
rcll
test
push
push
add
push
popaw
mov
stc
shrb
sub
lea
mov
ret
testb
lret
xor
mov
dec
sbb
loope
or
jnp
test
es
in
inc
out
stc
mov
inc
cmc
mov
cltd
pusha
lds
jo
mov
andb
sbb
out
lahf
and
mov
cld
stos
jne
push
iret
mov
inc
in
daa
data16
nop
adc
stos
cmpsb
xchg
aas
hlt
out
scas
jp
std
mov
xchg
push
and
dec
ret
ljmp
cmpsl
push
imul
push
xor
dec
sbb
lcall
mov
scas
xlat
in
xchg
and
mov
pushf
sahf
sub
sub
jne
add
pop
cmp
jne
sbbl
sahf
scas
dec
loopne
lock
dec
in
pop
mov
cltd
cwtl
jnp
inc
lea
aaa
add
add
adc
push
sahf
clc
ffreep
mov
mov
xor
test
add
xor
je
mov
adc
or
xor
mov
adc
and
roll
inc
sbb
stos
pop
xor
xor
jne
mov
dec
bound
mov
xlat
pop
jmp
fcoms
mov
rorl
andb
or
bound
flds
push
dec
push
sub
arpl
pushf
cmpsl
lret
pop
pusha
sbb
aas
ja,pn
lret
scas
add
adc
mov
aad
inc
push
and
fidivl
jge
mov
add
popf
jne
dec
mov
jle
sbb
fsubrp
mov
andb
xor
int3
push
sub
cmp
out
je
mov
push
push
adc
hlt
inc
pop
sub
fnstsw
daa
daa
sub
mov
mov
data16
xchg
mov
addr16
sbb
sub
pushf
lret
loopne
stos
jmp
add
and
test
int3
fsub
shlb
xor
lret
popf
mov
out
aam
mov
adc
push
movsb
lea
pushf
popa
add
std
sub
cs
mov
pushf
xchg
fcomi
inc
mov
push
out
jns
fwait
pavgb
aaa
or
out
dec
out
test
es
pop
sarb
hlt
lahf
rol
stc
pcmpgtd
hlt
adc
xor
andl
outsl
loopne
mov
in
push
mov
fbstp
sub
les
scas
dec
xor
mov
fdivrl
ret
push
and
adc
push
jne
mov
mov
push
cmpl
adc
fucomip
mov
xor
addr16
out
outsl
or
mov
pop
icebp
xchg
xchg
push
mov
ss
push
sub
aaa
push
ret
lcall
ja
xorl
jnp
int
arpl
rcrl
call
ror
pop
jno
cltd
mov
dec
lock
jg
sub
mov
xchg
outsl
cmpsl
mov
jnp
fsubrs
push
mov
loopne
mov
push
mov
icebp
test
lcall
mov
sbb
test
xchg
mov
add
xchg
mov
out
jb
scas
imul
cmp
pop
call
inc
cld
and
inc
xor
mov
xor
or
cwtl
and
out
jg
and
test
sbb
repnz
lret
pop
push
sbb
mov
daa
push
ret
mov
mov
mov
push
fmul
jmp
stos
add
sti
mov
mov
andl
icebp
movsl
lret
in
mov
fldenv
push
out
lea
sbb
outsl
and
mov
adc
rcl
int
xor
sub
test
movsl
lds
adc
mov
lcall
insl
cmpb
outsb
not
hlt
leave
xlat
daa
mov
pop
mov
sbb
arpl
cmpsb
xchg
xor
lea
divb
push
sarl
mov
xor
and
jl
sbb
inc
push
fwait
sbb
ja
loopne
outsl
push
nop
xchg
add
jmp
xchg
jno
mov
into
jae
mov
mov
dec
and
adcl
inc
adc
cld
push
addb
cwtl
inc
fxch
enter
sub
fucomp
aad
sbb
arpl
inc
insl
mov
in
fidivs
sti
pushf
iret
pop
inc
lods
pop
je
gs
cmp
and
push
or
sbb
shrb
xchg
push
mov
mov
pop
jg
pop
movsb
cmp
push
rorl
std
ret
cs
divb
cmp
and
push
std
lret
fcmovne
mov
dec
jmp
fldenv
mov
jg
adc
lock
out
lods
jmp
or
xchg
pop
add
bound
int
scas
into
cmp
test
inc
ds
jbe
xor
cltd
xor
enter
pusha
insl
test
je
push
cmpb
mov
cmp
and
inc
pop
ret
cmpps
lds
repz
inc
push
lret
mul
dec
jecxz
sbb
outsb
insl
cmc
mov
cwtl
adc
stc
ja
and
ja
in
test
push
jmp
mov
fucompp
push
jb
orl
in
sbb
jecxz
clc
pop
das
shrb
and
notb
imul
cmpsb
or
cmp
pop
out
push
pop
pop
push
ds
aad
sbb
inc
js
gs
jp
js
iret
pop
push
mov
xor
adc
aas
push
mov
ds
xchg
fdiv
mov
adc
jl
pusha
sbbl
mov
push
enter
insl
push
cmp
mov
fdivrs
jle
add
push
pushf
out
pop
int3
add
push
sbb
insl
ret
and
mov
lock
push
jae
xor
inc
xor
je
andl
xchg
test
fwait
xor
sub
fbstp
jo
adc
je
cmpb
movsw
ljmp
mov
clc
in
lock
pop
adc
mov
lret
flds
or
jo
dec
mov
addr16
cltd
pusha
test
jo
and
fsubrp
mov
adc
inc
mov
test
push
pop
mov
stos
outsl
sub
or
xorl
add
mov
movsb
jmp
xchg
outsl
lods
add
dec
jle
shlb
iret
dec
jmp
scas
mov
int
cmpsb
popa
test
imul
mov
and
xchg
push
imul
xor
movzbl
imul
mov
sti
mov
sub
fmull
and
jb
pop
jecxz
in
jb
mov
sbb
arpl
fcmovnu
mov
leave
add
or
mov
in
push
lret
jae
lcall
mov
jge
cli
out
mov
cmp
loop
push
call
js
jmp
or
lds
add
in
xlat
cmp
rcrb
mov
rcll
popf
cwtl
repz
fdivrs
loopne
xor
inc
push
iret
fnstcw
lret
ljmp
call
adc
inc
inc
jmp
add
xor
inc
mov
pop
lret
and
xchg
outsb
adc
shll
jg
add
mov
fcompl
andb
mov
popf
cwtl
sbb
inc
mov
sbbb
add
mov
mov
outsl
pop
sbb
jb
xchg
pop
jmp
sbb
sub
repz
fldcw
ret
js
jp
ljmp
or
xchg
inc
adc
fbstp
mov
pop
mov
gs
ss
mov
ficomps
addr16
inc
pusha
inc
mov
pop
mov
jmp
stos
add
cmp
xchg
push
je
mov
xlat
dec
aas
in
aad
ds
sub
jae
adc
lahf
pop
ret
in
hlt
jns
cld
fwait
inc
dec
pop
adc
andl
fsubr
add
aas
inc
fistps
pusha
sbb
xchg
and
in
mov
sbb
xchg
jns
in
loope
sbb
outsb
add
cmc
push
jne
sub
fdivrs
add
push
jbe
daa
test
clc
hlt
int3
sub
sub
daa
not
xor
popa
sub
lahf
cltd
jne
lret
xchg
movsl
cmp
xchg
xchg
fwait
stos
pushf
ret
fists
scas
inc
fiaddl
mov
daa
pushf
scas
iret
push
dec
mov
dec
gs
stc
jne
or
leave
inc
jmp
pop
mov
jb
jp
int
sti
pop
in
mov
xor
lea
pop
mov
loopne
fildl
cmpsb
and
rclb
stc
imul
fcmovnb
cmc
in
lea
mov
and
or
jp
cmp
dec
push
popf
add
xor
repnz
sbb
cli
inc
cmp
inc
cltd
sbb
lcall
add
or
mov
mov
gs
fsts
out
jae
cld
cmp
add
pop
inc
out
test
lret
cld
das
cmpl
xchg
popa
push
ja
aam
xor
cmpsl
cmp
dec
lcall
rorb
std
mov
cmpsl
sbb
adc
mov
xor
dec
scas
mov
dec
inc
decl
and
iret
and
subl
addr16
add
arpl
add
add
loop
inc
popf
gs
and
movsl
std
ds
andb
pop
xchg
popf
jae
cmp
aas
mov
xor
ficomps
fwait
or
roll
in
jns
pop
mov
pop
je
sbb
aaa
or
add
xchg
insb
mov
inc
repz
and
pop
jmp
xor
cmp
das
mov
jb
je
push
push
adc
jecxz
mov
mov
dec
testb
jl
fildll
outsl
nop
pop
mov
enter
push
sbb
xchg
cwtl
sarb
jbe
lcall
pushf
jo
push
inc
repnz
sub
push
dec
or
pop
mov
dec
cwtd
push
inc
xchg
out
sub
cmp
cmp
jl
or
sti
movsb
ja
push
pop
inc
inc
into
call
fstpt
pop
dec
loop
jnp
loope
fldenv
pop
jae
inc
push
gs
int3
push
inc
sbb
mov
inc
ljmp
jbe
stos
push
xchg
test
outsb
xor
mov
fcmovbe
fistps
sbb
cmp
sub
push
add
inc
push
out
movsl
cwtl
and
pop
out
into
loope
xor
jne
cwtl
repnz
loope
jns
scas
out
fcomi
lahf
mov
jb
xor
call
mov
cmp
pusha
cltd
mov
cmpsl
mov
movsl
test
push
in
adc
in
pop
and
test
sti
mov
in
pusha
mov
or
rol
sbb
xor
adc
test
inc
jp
dec
inc
jne
cwtl
mov
pushl
add
cmp
jle
xchg
jae
inc
push
or
mov
repz
and
jecxz
jns
xchg
stos
gs
inc
dec
sbb
or
es
pop
mov
test
push
mov
mov
lds
mov
mov
cwtl
inc
data16
lock
dec
insl
jge
xchg
ja
dec
aas
add
les
sahf
pusha
inc
int3
jle
jbe
notl
inc
ja
push
jbe,pn
push
out
in
adc
jmp
data16
mov
push
fsub
mov
mov
sbb
push
popa
jb
sahf
ffree
out
shlb
repnz
psrlq
cs
stc
mov
stc
inc
scas
cmc
sahf
leave
je
je
out
aaa
popa
push
adc
xchg
sub
xor
push
push
jle
and
inc
push
mov
push
push
and
imul
jno
push
mov
js
les
daa
cmp
ficomps
ret
ror
es
mov
jmp
or
fs
cli
dec
test
scas
sub
outsb
mov
adcl
hlt
mov
roll
or
mov
out
cmpsl
out
mov
and
pushf
or
shlb
icebp
add
mov
xor
bound
cmp
dec
sbb
and
sbb
es
sbb
lea
insb
mov
fsubrs
and
aam
dec
mov
sbb
outsb
fdivrl
jo
adc
pop
mov
clc
jo
movsb
lea
jo,pt
shll
pop
xor
pushf
jecxz
xchg
cltd
jb
sbb
and
add
push
imul
shll
xchg
pushf
push
xor
adc
call
mov
or
imul
lcall
int
arpl
pop
inc
or
xchg
cmp
in
rcl
lds
sub
cmc
jle
and
and
jbe
jae
or
cmpl
imul
mov
jge
and
jnp
xor
mov
pop
sub
mov
andnps
and
insl
inc
push
push
insl
mov
fldcw
outsb
arpl
sub
lcall
cwtl
sbb
xor
aad
add
sub
notb
xchg
int
mov
mov
imul
mov
adc
call
cmp
sarb
mov
fistl
xor
hlt
add
push
pop
and
add
or
xchg
adc
int
in
xorb
pop
icebp
mov
inc
test
lods
push
fildll
imul
jne
dec
out
movsb
jge
pop
pop
popf
repz
ljmp
mov
test
pop
adc
mov
lods
add
jno
jecxz
mov
sarb
test
jl
mov
loopne
pop
cmp
push
jne
pop
int
mov
inc
push
inc
add
inc
push
data16
ss
sti
push
outsb
rcr
in
push
push
xor
sub
and
fnstsw
mov
lea
ja
lahf
out
xor
clc
loope,pt
leave
xchg
jp
lret
push
push
push
sahf
or
inc
pop
mov
lret
lret
out
inc
add
push
test
jge
cmp
mov
cmp
mov
sbb
fimuls
or
fisubl
xchg
jb
icebp
movsb
sub
mov
and
sar
imulb
jle
mov
jle
pop
mov
outsl
push
xor
adc
cmpsb
inc
call
sub
lods
pop
pop
fstps
mov
nop
in
add
adc
popf
and
bound
es
sbb
inc
fimuls
inc
out
stc
cmp
mov
sti
jecxz
ror
jle
lret
add
int
ret
xchg
in
inc
mov
push
lret
lret
fistpl
and
scas
mov
push
add
pop
decl
hlt
adc
jbe
inc
rcll
lret
add
or
push
in
loope
xchg
xchg
push
lods
jae
sbb
sbb
jge
movsl
repnz
mov
jp
xchg
popf
xchg
pusha
mov
fdivs
shll
dec
stos
aam
mov
into
rcr
mov
jmp
ljmp
adc
mov
pusha
push
sub
loope
jns
adc
pusha
lcall
mov
xchg
sub
daa
scas
xchg
mov
int
cmp
xchg
lret
pop
icebp
push
push
cmc
push
mov
xor
sub
xor
test
lods
add
adc
stc
and
sbb
inc
add
mov
in
lods
mov
pushf
or
daa
mov
dec
mov
mov
add
adc
pusha
sbb
rorb
movlps
mov
testb
cmp
mov
cmpl
sbbb
lock
lahf
inc
mov
enter
lods
dec
ret
pop
sub
push
das
mov
cltd
arpl
shll
xor
adc
js
divb
push
mov
jmp
cmpsb
xchg
pop
rorl
fisttpl
mov
fwait
jmp
and
and
testl
cs
aad
mov
dec
cmp
pop
jge
loopne
mov
shlb
imul
sub
pusha
push
mov
push
leave
hlt
jne
add
cmc
pop
shrl
jnp
xchg
stos
pop
adc
imul
scas
lock
fnstsw
popf
pop
dec
lods
orl
adc
in
pop
sti
or
push
lahf
rcl
iret
popf
scas
mov
sbb
sbb
in
pusha
add
or
jae
sti
sub
sub
push
gs
cmp
ja
mov
int
cmp
push
fcmovu
jae
cwtl
outsb
jnp
sub
lret
xchg
fbld
jge
cmp
outsb
adc
mov
imul
repnz
in
ss
or
dec
cmp
xchg
aaa
or
sahf
jmp
mov
mov
fcoms
mov
adc
and
aad
dec
mov
and
xchg
decl
and
icebp
xchg
mov
adcl
cmp
cmp
mov
cmpsb
insl
out
andl
mov
lds
test
mov
test
mov
or
jbe
sbb
cmp
popa
inc
cltd
lahf
push
mov
jne
in
pop
xlat
sbb
outsl
add
dec
cmp
xchg
push
or
out
aaa
into
das
call
aam
mov
lods
lcall
mov
subb
xor
sar
fstl
and
mov
cs
test
and
mov
pop
aaa
fwait
aas
sub
inc
mov
jmp
js
enter
lds
add
dec
pushf
out
repnz
aad
aas
pop
add
inc
sub
push
mov
mov
insb
sub
dec
out
jo
inc
gs
mov
mov
shr
leave
pop
adc
movsb
ficomps
test
lock
into
aad
mov
fisttpl
ret
mov
mov
stos
add
das
faddl
jg
lds
subl
xchg
lret
loop
in
or
nop
mov
cmp
adc
jns
enter
daa
sub
and
or
cmp
test
dec
jle
sahf
xchg
jno
into
scas
mov
js
adc
or
dec
aam
jnp
add
aaa
push
out
mov
dec
inc
scas
jp
pusha
divl
test
das
inc
jns
rol
jl
xlat
fisttpl
and
rcrb
push
arpl
adc
lods
or
cmp
sbb
ljmp
sub
nop
xor
dec
leave
push
fldenv
sub
mov
aam
test
divb
and
mov
inc
cld
add
jecxz
cwtl
popf
outsl
inc
lahf
adc
test
sbb
jge
jl
pop
mov
mov
xchg
popa
test
iret
push
xor
lds
dec
pushf
pusha
mov
sbb
ficompl
jge
jmp
aaa
cwtl
icebp
das
adc
dec
int
adcb
addr16
in
daa
and
inc
pop
addr16
adc
cmpsl
fistpll
lods
stos
inc
fmulp
ret
dec
jno
pushf
repz
aaa
mov
ret
or
push
icebp
dec
or
and
xchg
pop
outsb
addl
subb
mov
xchg
movsl
jno
aam
pop
xchg
sub
in
aaa
into
inc
loope
pushf
cltd
fs
jmp
mov
mov
repnz
int3
arpl
test
jno
mov
jo
jp
inc
loope
sbb
xchg
mov
or
pop
xlat
daa
mov
in
rolb
or
test
in
pop
push
cwtl
imul
in
or
lock
fbld
sub
notb
pop
ret
jle
cmp
insl
add
jmp
testb
lcall
adc
adc
loopne
push
mov
les
fildl
sbb
lea
xchg
or
mov
int
cli
xchg
pop
pusha
mov
mov
and
adc
xchg
and
enter
sub
fistl
dec
enter
mov
inc
mov
inc
leave
fstpt
in
or
or
fdivrs
add
enter
cld
inc
cmp
dec
inc
push
cld
outsb
adc
push
sbb
testb
mov
imul
scas
jo
inc
pop
add
rcrl
mov
mov
test
orl
mov
cmpsb
pcmpgtd
add
ja
pop
je
add
fidivl
push
insl
lds
mov
test
jecxz
dec
nop
cmp
xor
sbb
add
jnp
outsb
sub
je
mov
lahf
cmpb
fwait
sbb
xchg
daa
popf
push
dec
mov
pop
xor
xchg
sub
dec
rcl
add
xchg
aad
sti
dec
dec
add
les
test
mov
icebp
movsl
icebp
shrl
sub
jmp
add
xor
push
jb
and
popa
xor
push
icebp
dec
dec
inc
fs
cmp
push
stc
xor
loop
pop
adc
lret
bound
dec
jmp
and
test
stos
cmc
sub
cs
push
pushw
sub
cltd
les
cmp
roll
das
popf
je
fldt
mov
pusha
push
test
call
cmp
sbb
sbbb
insb
mov
dec
jns
fistps
lret
and
sub
and
sarb
iret
add
mov
or
mov
aad
xor
jo
ss
into
xchg
roll
jne
cmp
jae
divl
or
cltd
stos
out
mov
sbb
lds
in
imul
fmull
addl
or
xchg
int3
adc
ds
in
es
inc
mov
and
sysenter
bound
enter
js
iret
lea
leave
push
cmp
fistps
mov
lahf
push
rcl
add
sub
add
stc
test
and
or
sbb
push
pop
mov
ljmp
aaa
inc
cmp
dec
add
mov
dec
mov
icebp
mov
pop
fldcw
lods
add
inc
sub
pop
test
inc
mov
cmp
and
mov
cmpl
clc
mov
lret
adc
fstl
and
and
inc
mov
cwtl
and
pusha
jge
mov
cmpsb
ret
mov
mov
cmp
data16
adc
pushf
scas
data16
shrb
in
aaa
push
fstps
shr
push
pop
icebp
xchg
push
lock
mov
pop
dec
pop
mov
dec
jle
mov
fists
or
inc
lret
aam
ret
and
aas
scas
divb
push
roll
mov
xchg
pop
xchg
pop
in
adc
adc
dec
sub
in
dec
loope
jp
add
cld
arpl
or
sub
sub
das
and
xchg
loopne
lcall
ret
aad
mov
incl
out
clc
mov
mov
or
and
cwtl
cmc
or
adc
data16
inc
sub
sub
test
push
inc
aad
out
dec
aaa
ja
imul
loop
lahf
pop
sub
and
or
dec
fnstenv
pop
mov
and
mov
mov
pop
xor
mov
jno
cmp
push
movsl
popw
repz
dec
lds
or
out
pop
sbb
xchg
nop
outsb
and
notb
adc
loop
jne
cwtl
mov
aad
and
leave
nop
mov
mov
pop
mov
sbb
jle
mov
rorb
int3
fisubs
jae
pop
cmpsb
les
in
fisubs
sbb
dec
test
cmpsb
cmp
ret
sub
sub
xchg
mov
loopne
and
or
xchg
cld
dec
mov
repnz
aas
add
not
and
jns
stos
pushl
sarb
jns
lods
fsubr
sub
lea
xor
push
xor
lds
or
cmc
mov
add
lret
iret
mov
xchg
jl
mov
movsl
iret
fst
insb
jecxz
sbb
and
xchg
sub
pusha
cmpsl
lds
fucom
outsb
mov
ds
mov
inc
movsl
pop
mov
sti
lcall
jmp
push
push
inc
and
cmpsl
xlat
sub
daa
push
xor
hlt
cmp
out
lock
cmpsb
push
inc
pushf
cwtl
xchg
fnsave
push
iret
outsb
popf
adc
jle
lcall
inc
fcoms
out
push
test
adc
sarb
jno
mov
jns
xor
dec
icebp
sbb
imul
adc
mov
pop
jecxz
add
push
imull
in
aad
test
sahf
mov
in
bound
inc
jmp
dec
test
sbb
dec
dec
aas
loope
imul
dec
movsl
test
sarb
or
push
jmp
push
sub
mov
popa
cs
out
xchg
pushf
xor
sbb
test
aaa
jne
es
add
push
out
jge
outsl
adc
adc
cmp
add
aad
outsl
mov
xor
and
inc
in
ss
or
fbstp
imul
push
or
fimuls
jp
push
mov
std
lds
pop
push
addr16
or
cmp
dec
pop
and
dec
fwait
icebp
dec
test
stc
jmp
loope
ljmp
xchg
xlat
lret
addr16
insb
add
in
ret
and
add
pop
lea
mov
call
and
lret
mov
or
jbe
and
adc
push
push
or
mov
dec
cmc
xchg
outsb
scas
imul
jo
inc
test
into
in
adc
cltd
test
in
push
mov
sub
lods
sub
jo
shrl
out
pop
cmpl
incb
dec
into
jbe
xchg
xchg
fsub
dec
data16
les
mov
xchg
ret
hlt
repz
test
les
rcrl
adcb
aam
fildl
movsb
fldcw
es
sbb
push
rcl
pop
sub
cmp
idivb
xchg
and
int3
sarb
aas
shr
out
std
dec
mov
fnstcw
cmp
mov
mov
aam
or
push
mov
xor
daa
dec
in
mov
adc
mov
lcall
icebp
dec
lahf
test
fs
mov
xchg
dec
aaa
clc
hlt
jle
inc
bound
push
xchg
mov
xlat
out
pop
jmp
mov
inc
dec
pop
cmp
push
dec
dec
dec
pop
clc
cmpsl
or
dec
mov
dec
pop
sbb
cmp
gs
push
ucomiss
andb
ds
xchg
push
pop
pop
push
lea
fst
ljmp
loop
fidivl
nop
xchg
loope
scas
ljmp
mov
test
rcrb
pop
stos
jb
int3
cmpsl
or
pandn
mov
sub
add
sub
pop
into
dec
adc
xchg
pop
jmp
bnd
pop
das
xchg
or
movsb
mov
jp
ljmp
sub
lfs
xchg
movsl
xchg
add
test
sub
popf
mov
push
push
test
inc
sbb
cmc
and
cmpsl
js
mul
cmp
repz
pop
lret
lds
adc
shr
repz
cltd
mov
sbb
fcmovb
pop
dec
adc
dec
xchg
pop
cmp
push
inc
mov
orl
push
cli
push
lret
aas
pop
push
jo
mov
xor
mov
jae
xchg
call
mov
mov
adc
jb
lock
in
fisubs
cmp
push
outsl
stos
pop
scas
cmc
jge
lods
cmpsb
pop
insb
cli
flds
dec
cmp
aas
sub
xor
xchg
push
in
incb
enter
into
or
arpl
out
push
mov
test
cmc
or
sbb
push
cld
outsb
add
jmp
mov
pop
push
xchg
int
dec
add
fisubl
adc
rcrl
in
inc
mov
shrl
adc
pop
inc
pushf
orb
je
lcall
sub
mov
aad
xrelease
dec
inc
sbb
imul
lahf
xchg
jecxz
dec
in
push
lods
jmp
mov
cmp
jmp
xchg
icebp
mov
scas
movsl
pop
pop
leave
sbb
xchg
sbb
outsl
ret
pop
cmp
fcmovnbe
aaa
push
and
pop
imul
pusha
or
and
xchg
inc
mov
inc
in
inc
jecxz
push
scas
out
faddl
adc
jnp
mov
push
lds
fbld
add
push
cmp
and
inc
pop
sub
and
lods
icebp
out
ffree
xchg
int
nopl
sbb
aas
mov
loop
jmp
rol
mov
rclb
fsubrs
ret
push
push
je
dec
loop
inc
mov
out
pop
cmp
pop
dec
clc
lcall
mov
cmp
pop
jg
pusha
xchg
cld
outsl
pop
shll
or
xchg
jno
add
popa
leave
adc
rcrl
and
fmuls
jecxz
fldcw
or
js
enter
dec
loope
mov
jnp
pop
pusha
idivl
jle
sub
inc
push
xchg
jecxz
pop
lcall
test
aad
iret
cli
cld
mov
mov
out
and
bound
arpl
js
and
lcall
mov
movsb
movsl
fcomi
mov
loop
cmp
cmp
js
adc
mov
je
rorl
and
xchg
loopne
shr
push
lods
xchg
hlt
loop
ljmp
lcall
sbb
in
outsl
mov
rorl
fcomps
imulb
comiss
loop
or
or
ljmp
push
inc
fucomip
push
inc
negb
icebp
fstps
push
sti
jo
sub
cltd
fcomi
out
inc
cli
or
sarb
sbbl
and
mov
pop
sbbl
push
sub
xor
insl
sbb
lock
add
nop
and
push
mov
out
mov
mov
test
pop
decb
into
mov
push
xchg
jb
ja
aad
outsb
fnstsw
hlt
fbld
es
incl
or
jo
push
fdivp
mov
xchg
mov
pop
in
jb
test
ja
es
pop
pop
adc
xor
mov
divl
shrl
lods
xchg
leave
int
sub
dec
loopne
xchg
hlt
cmp
mov
mov
test
sbb
aas
and
mov
out
popa
into
pop
sub
adc
inc
pop
xchg
jle
das
dec
fsubs
fdiv
mov
movsb
movsb
mov
fisubrs
adc
dec
es
jg
lret
lds
decl
shl
or
sub
sub
pop
cmp
das
insl
push
xchg
sub
add
dec
mov
adc
imul
clc
lahf
jbe
and
std
push
jl
jp
push
insl
push
in
sahf
in
cmp
enter
pop
pop
sub
dec
stos
sbb
in
xchg
adc
jae
or
jnp
ret
pop
ds
lret
out
or
mov
enter
insl
sti
inc
in
adc
jmp
icebp
lock
pop
add
mov
dec
jle
push
and
fcmove
loop
out
sti
jl
push
jmp
fwait
outsb
jo
mov
dec
mov
inc
or
push
fnstcw
add
fldt
mov
notb
mov
adc
bound
mov
mov
jae
enter
enter
loopne
xchg
dec
sub
or
andb
jno
mov
mov
orl
push
out
jmp
mov
fnstenv
pop
add
test
nopl
loop
xor
pop
inc
push
leave
hlt
mov
pop
das
pop
inc
loop
lret
sub
subl
jge
pop
loope
rcll
jge
push
mov
xchg
pop
ss
fidivs
fisttpl
cmp
inc
sbb
pop
add
aam
mov
dec
int
rorl
stc
popf
cmp
fucomip
jge
jnp
shrb
inc
pop
fs
inc
jecxz
ja
jp
sbb
cltd
dec
jl
adc
push
stc
lea
ja
or
inc
xchg
sub
dec
add
dec
or
push
fmuls
or
cwtl
mov
mov
insl
push
jmp
call
rclb
in
mov
and
int
pop
mov
inc
loop
cmp
inc
dec
loope
out
adc
and
adc
inc
imul
pushf
push
cwtl
mov
ds
out
mov
outsb
sbb
jo
sarl
and
out
cmp
adc
xor
push
lahf
nop
mov
loop
imulb
popa
sahf
int
xor
enter
mov
fnsave
mov
mov
dec
cs
or
mov
and
jl
aas
push
mov
dec
das
inc
test
icebp
or
mov
lahf
sub
xor
dec
icebp
mov
hlt
data16
cltd
fbld
cs
daa
lcall
xchg
daa
xchg
imul
mov
jecxz
adc
mov
mov
loopne
and
jno
loopne
dec
sahf
test
mov
inc
iret
icebp
cmpsb
shll
pop
in
call
lret
pop
popf
movzwl
mov
or
inc
xor
jmp
aaa
xor
jmp
sub
gs
test
add
jbe
lods
popl
xor
cmpl
jo
test
jmp
aas
or
and
xchg
fisubl
add
scas
movsl
push
lock
push
in
test
xlat
xchg
mov
and
loopne
jnp
and
inc
inc
in
stos
in
aad
loope
mov
test
jmp
sbb
jb
mov
mov
cmc
lcall
sbb
pop
add
out
and
in
mov
mov
shr
add
sar
adcb
sub
jmp
sub
out
jg
ja
cs
mov
xchg
sub
stc
nop
das
lods
mov
pop
ret
dec
in
jnp
cmp
cmp
xchg
jbe
pop
lcall
roll
stos
out
inc
or
aas
iret
cmp
adc
and
sub
inc
add
int
int
test
mov
pop
adc
push
cs
xchg
jne
sub
fdivr
inc
push
mov
sbb
lret
sti
adc
mov
fs
push
add
lcall
mov
fnstsw
out
cs
sbb
xor
xor
in
out
cmp
ss
sbb
adc
or
adcl
xor
push
mov
and
lods
rclb
pop
popf
hlt
push
xor
mov
jge
adcl
mov
int
shll
push
test
outsl
or
mull
dec
xchg
iret
imul
std
movsl
andb
sub
push
adc
jo
fidivrs
xchg
push
mov
cs
xlat
cmp
push
jge
lcall
jmp
or
mov
jae
inc
mov
lahf
test
psubsw
mov
out
shl
xor
imul
mov
xchg
dec
pop
pop
dec
out
jne
or
mov
jbe
movsb
adc
enter
and
add
dec
mov
cmp
pop
sbb
pop
leave
mov
out
clc
inc
scas
xor
cltd
lods
ljmp
call
stos
sbb
adc
jle
xchg
popa
fsubl
push
loop
xor
stos
out
fisttpl
out
mov
popa
int3
ja
ficoms
pop
dec
sbb
sbb
jecxz
dec
jbe
adc
rcrb
fiaddl
jb
sbb
push
mov
mov
bound
dec
xchg
sbb
xchg
xor
sbb
mov
aam
pop
out
cmc
out
cmp
in
aaa
cmpsb
mov
or
xchg
loopne
mov
test
inc
push
mov
cmp
cmp
jmp
or
daa
mov
xorb
add
cmpsl
int3
scas
ret
push
dec
xchg
adc
cld
sbb
jg
popf
push
rcll
lret
pusha
lret
lret
adcl
add
outsl
je
jl
mov
ret
fistpl
xchg
in
rol
jle
fisubl
cmp
xchg
rclb
and
pand
push
aaa
int
std
bound
push
jo
push
jnp
cld
ss
inc
stc
dec
aaa
jns
mov
sti
lret
xor
int
xor
or
push
stos
mov
push
cld
hlt
test
test
mov
jmp
popa
negb
sub
ds
lods
sahf
sub
leave
fldt
std
je
shrl
and
stos
mov
fsubr
or
mov
cmpsb
adc
lret
mov
jnp
les
pusha
cli
xchg
test
call
shlb
pop
outsl
push
cltd
rorl
cmc
shl
in
les
push
cmp
outsl
jg
stos
cmc
xchg
scas
es
jno
fs
cli
mov
mov
pop
arpl
cltd
sbb
ds
mov
jne
lock
rclb
ja
sti
xchg
adcb
jg
lahf
ss
mov
idivl
pushf
add
xchg
mov
mov
adc
cmp
out
and
pusha
in
sbb
mov
pusha
ret
xchg
xor
in
arpl
mov
mov
cwtl
adcb
lea
icebp
push
and
push
or
test
jle
icebp
sub
pop
mov
imul
cs
outsb
repnz
scas
add
jns
lods
psadbw
arpl
add
add
cmpsl
fadd
fisttps
mov
xlat
ja
jecxz
jl
rclb
or
xchg
fidivs
mov
cld
andb
push
sbbb
jae
xlat
add
mov
rcrl
int3
inc
call
aam
stos
mov
lods
push
sahf
fsubr
xchg
lret
leave
xor
cs
pop
adcl
outsl
xchg
lods
add
push
jb
dec
test
stos
dec
aam
mov
or
nop
push
movsl
cwtl
jae
and
sbb
pop
mov
mov
inc
insb
pop
decl
nop
or
test
icebp
inc
popa
inc
pop
push
cmc
inc
test
push
fcmovbe
sbb
loop
sbb
bound
mov
lods
loope
push
repz
add
xor
popf
pop
jmp
jnp
mov
fldl
cmp
clc
sahf
pop
xchg
push
adc
mov
sub
aad
call
xlat
and
pop
cwtl
mov
aaa
dec
lret
jo
xchg
repnz
dec
lock
pop
dec
xor
jmp
mov
push
pop
mov
xchg
out
sbb
pushf
and
sti
push
adc
jmp
jecxz
leave
cwtl
lods
addr16
sub
fs
mov
mov
mov
push
in
fcmovu
dec
xor
out
out
mov
ret
mov
adc
push
outsl
hlt
inc
out
loop
movsl
inc
sysenter
cmpsl
je
loope
jmp
cmp
aam
or
cli
mov
jne
es
mov
repnz
std
adc
enter
lds
fistpll
aam
int3
fadds
mulb
outsl
cmp
sbb
ret
add
fwait
inc
lret
add
jl
jmp
adc
xor
fdivs
outsl
std
fistl
cwtl
jbe
in
dec
add
testb
pop
stc
mov
cmpsb
cli
and
jp
mov
je
cmp
xchg
je
stos
sub
xchg
rsm
xchg
xor
popa
cmc
mov
stos
stos
mov
das
jle
imul
mov
fldenv
test
leave
pop
imul
sub
sbb
std
bound
test
into
jb
push
aaa
andl
push
add
or
popa
mov
js
loope
push
xlat
movsb
jmp
push
xchg
arpl
add
inc
lods
cwtl
cmc
or
pusha
xor
sbb
nop
aad
rol
adc
pop
and
sub
cmpsl
out
cmp
stos
sbb
xor
aaa
xor
dec
push
jae
push
mov
stos
mov
lods
sbbl
in
cmp
mov
dec
xchg
cli
ja,pt
mov
cmp
sbbl
and
pop
aam
sub
pop
repnz
out
jbe
clc
or
push
in
sti
ja
sub
les
out
loop
stos
ret
popf
stos
adc
pop
cwtl
andl
dec
adc
add
xchg
push
jmp
outsl
xchg
test
mov
loope
xlat
call
cmc
and
sbb
ds
xchg
stos
ja
dec
test
scas
lea
cltd
pop
mov
pop
and
ja
popa
mov
xchg
jns
jne
out
push
dec
cltd
mov
or
sub
xor
xchg
out
aas
mov
in
jmp
lods
mov
clc
and
inc
push
adc
push
or
stc
inc
movsb
movsl
adc
aaa
inc
jae
les
ficoml
das
outsb
ret
jp
push
sbb
into
pop
xchg
aas
jg
or
pop
fsubl
aas
jle
mov
aad
push
testl
bound
jg
cmp
popf
inc
fistpl
jns
and
sub
mov
ds
shrb
and
sbb
lock
sub
and
mov
jne
adcl
push
mov
ds
rol
dec
inc
rol
aam
ljmp
or
cld
lcall
in
push
pushf
push
dec
mov
cmp
loop
mov
lcall
mov
dec
push
lcall
add
fisubrs
add
sbb
pop
mov
and
pop
push
add
mov
fmulp
inc
push
mov
mov
adc
mov
je
mulb
sub
inc
clc
add
jg
pusha
sbb
dec
sub
lcall
lods
cmp
sub
popa
int3
shll
fistps
push
mov
fnstenv
mov
fnstenv
sbb
mov
scas
stc
mov
movsl
lret
jno
iret
bound
inc
inc
add
scas
into
push
and
lock
jg
addr16
or
pop
aam
add
push
or
int
sub
clc
fs
fsubrs
or
ja
sbb
lret
incb
and
cs
pop
sub
or
jge
sub
inc
xchg
mov
or
orps
rcll
mov
ficoml
jo
dec
dec
or
mov
cwtl
loope
push
inc
jle
ja
sbb
push
lods
loopne
addr16
pop
out
aas
out
test
and
fsubl
xor
lods
add
movsl
sub
stos
mov
jg
stos
jno
mov
adc
cmp
bnd
stos
inc
adc
lock
adc
lcall
ret
bound
js
xor
sub
call
sbb
adc
and
addr16
xor
cmp
out
mov
inc
jno
dec
arpl
xor
dec
pop
decb
mov
sbb
pushf
cli
fnstcw
sbb
jb
jle
pop
sub
int3
xchg
jp
hlt
and
or
cmp
sti
push
enter
xchg
lret
popa
xor
pop
out
cltd
or
daa
jne
jge
ret
mov
les
push
or
das
mov
and
inc
pop
pop
xchg
js
dec
aad
enter
rorl
repz
cwtl
sub
popa
pop
xchg
sub
int3
sub
xchg
pop
dec
loopne
sarb
and
sti
test
gs
pop
cmp
and
in
push
push
xor
xor
out
dec
adc
mov
enter
aad
ljmp
push
ss
repz
dec
inc
clc
push
add
cwtl
hlt
fidivs
dec
xchg
out
test
hlt
fstl
pop
xor
repnz
jb
ret
jle
sbb
ret
ljmp
popf
pop
inc
pop
insl
add
dec
mov
mov
nop
mov
and
in
loop
sub
add
jle
mov
mov
mov
out
cmp
cmc
xchg
stc
cmc
push
sub
int
jp
mov
lea
add
add
into
adc
xchg
dec
add
dec
sahf
repz
in
fcomp
out
push
ror
push
cmc
ret
adc
pop
ljmp
push
inc
mov
push
inc
push
xchg
sub
sub
fidivs
jle
push
cmp
dec
ss
rep
mov
pop
insl
xchg
shll
push
pop
fsubrs
jne
mov
cld
lcall
in
arpl
adc
xchg
and
lret
mov
xor
push
add
sahf
push
mov
push
jb
jbe
repz
dec
js
xor
xchg
pusha
xor
push
dec
dec
loop
dec
enter
pusha
mov
xlat
jmp
or
cmp
repz
or
cmp
shll
push
jo
imul
jns
adc
push
jle
stos
mov
out
sti
jg
test
dec
jl
loope
cmp
movsl
cmp
pop
mov
xchg
cmp
jecxz
sub
jnp
inc
sbb
push
mov
xchg
sbbl
jmp
dec
pushl
adc
inc
aam
dec
inc
cwtl
enter
cmp
sbb
mov
jmp
stos
jmp
outsb
sub
movsl
dec
movsb
mov
xchg
std
push
push
xor
ret
dec
sbb
sbb
scas
pop
dec
mov
loopne
push
xor
enter
sub
cmp
popa
mov
fistl
mov
jge
mov
pop
cmp
cltd
or
xlat
mov
das
pusha
rcrl
adc
fnstcw
sbb
xchg
mov
fsubs
dec
lock
mov
xor
js
scas
mov
js
jae
rolb
faddl
insb
xchg
sti
mov
mov
sbb
flds
enter
push
jnp
xchg
sbb
fcomps
ja
gs
xchg
std
xor
mov
push
nop
mov
ljmp
stos
mov
adc
add
out
pop
push
test
call
sub
scas
mov
and
js
daa
and
ja
je
mov
fucomi
mov
pusha
jg
xchg
mov
push
fsubrp
test
pop
cmpsl
out
aaa
cmp
cmp
fmuls
scas
xlat
jmp
push
jmp
pop
cld
mov
mov
je
lods
popa
jg
push
mov
or
rol
jnp
pusha
xchg
daa
mov
insb
pushf
sub
movsb
ret
xchg
daa
loop
repnz
cli
lods
jne
and
stos
inc
xchg
sets
or
jg
ret
sbb
pop
cmpsl
cmp
xlat
shll
mov
stos
aas
jae
pop
ret
xchg
xchg
pusha
xchg
aaa
jp
lock
out
add
mov
jge
out
cmpsl
outsb
clc
aad
out
xchg
or
push
and
mov
push
mov
mov
fldcw
cld
mov
jl
xor
shll
and
dec
cmp
addr16
insb
ret
push
mov
adcl
loop
push
mov
lods
pop
jae
xchg
bound
inc
scas
mov
cld
std
mov
test
inc
ss
dec
fstpt
ljmp
mov
addb
andl
nop
mov
out
int3
negl
fs
xchg
mov
filds
out
push
sbb
data16
in
adc
push
lods
ret
jae
jl
mov
mov
daa
std
mov
insb
lds
je
mov
xchg
call
ljmp
jb
push
adc
cmp
std
xchg
inc
xchg
xor
xchg
dec
pop
lds
cmp
and
jg
mov
xchg
jg
sbb
mov
xlat
cmp
jge
mov
into
test
adc
sbb
enter
aaa
mov
mov
mov
adc
cs
out
mov
stos
out
add
notl
mov
jbe
outsb
outsl
push
stos
aam
mov
stos
mov
mov
inc
out
ret
mov
cmc
cmp
pop
push
adc
aaa
dec
cmp
stc
aaa
ret
es
sbb
loopne
pop
mov
fsubrp
inc
sub
sti
xchg
xor
dec
cld
jg
lods
test
sbb
push
in
mov
dec
ds
bound
in
out
mov
test
jle
lods
je
mov
imul
fs
mov
or
cld
sub
dec
nop
mov
dec
push
test
xor
sub
call
dec
imul
mov
insb
mov
aam
cmp
xor
mulb
into
jns
aaa
lock
test
addr16
rcr
fcomps
jge
pushl
js
push
jb
jns
js
and
inc
cmp
dec
cltd
icebp
lret
add
mov
out
push
jae
mov
and
pop
andl
lret
add
dec
out
inc
xchg
sbb
in
lcall
dec
in
sbb
popf
test
insl
add
and
call
mov
fidivrl
push
pop
loopne
aaa
adc
fs
jnp
clc
inc
sbbb
and
in
movsl
sbb
adcl
outsb
aam
and
leave
sbb
popf
or
xlat
aaa
cwtl
mov
cld
iret
and
aad
and
pop
adc
add
xlat
jo
addr16
jge
notl
sbbl
fcoms
push
push
and
cmpb
shrb
rcl
mov
inc
fwait
sbb
or
mov
call
mov
and
ret
stos
inc
js
mov
in
adc
in
add
imul
out
out
xor
xchg
cltd
fnsave
pop
push
lods
nop
test
jl
dec
lcall
sahf
or
popl
push
test
loopne
cwtl
pop
pop
adc
inc
inc
enter
xchg
stos
jmp
mov
mulb
pop
ret
shrl
cmc
sbb
int3
jg
mov
cli
jecxz
jl
add
sbb
inc
inc
and
jne
imull
ljmp
andb
and
divb
adc
out
popa
dec
xchg
stos
cmpsb
jno
pusha
cmpsl
jge
incl
xchg
dec
hlt
repnz
cmp
inc
inc
stos
xor
in
into
pop
rol
sbb
loope
loop
sbb
stos
sub
fildl
add
adc
data16
lret
andl
lcall
in
cmpsb
sbb
push
les
loopne
jle
stos
sbb
push
xchg
movsb
push
dec
cmpsl
push
lahf
pop
mov
lods
hlt
sbb
add
cmp
xchg
sub
daa
xchg
and
cld
addl
dec
jl
sti
inc
cmp
int
movsb
push
or
jo
add
das
pop
jb
jne
xlat
cld
loope
sbb
packsswb
push
pop
pop
lahf
jb
pop
fldcw
fnsave
sub
lcall
aam
scas
inc
push
sbbb
mov
mov
jno
xchg
icebp
sarb
mull
outsb
or
push
and
mov
call
jle
xor
movl
pop
sbb
cmp
mov
push
mov
sbbb
push
leave
les
sbb
cmpsb
arpl
xchg
mov
sub
inc
aam
aaa
push
pop
jecxz
inc
lcall
lahf
ret
mov
mov
mov
test
mov
xor
stos
add
adc
fdiv
iret
xor
sbb
jmp
xor
pop
adc
ret
pushf
lods
bound
into
in
jno
mov
mov
xchg
mov
dec
cmpsl
mov
mov
lock
push
jl
xchg
scas
repz
cmp
push
shld
push
aam
jns
push
aad
daa
int
jb
mov
adc
mov
lcall
movsl
push
dec
rol
inc
out
test
xchg
xchg
mov
in
dec
sbb
shll
mov
leave
cmp
pop
hlt
stos
sub
shll
push
xor
call
int
or
cmc
decl
scas
mov
daa
cmpsl
dec
pop
mov
mov
dec
cmp
jne
adc
mov
xor
fsubrs
add
movsb
popa
in
notb
shll
mov
ss
or
leave
mov
or
push
fnstcw
rolb
add
mov
xor
insl
rorb
pushf
pop
push
or
mov
mov
iret
aas
dec
and
pmaddwd
mov
xor
pushl
in
std
inc
push
mov
rcrb
imul
push
xorl
push
inc
cli
popa
mov
ja
inc
jmp
dec
ret
imul
add
sbb
push
fwait
sti
jbe
inc
push
or
push
fmuls
xchg
adc
cltd
in
push
sbb
fadd
push
mov
xchg
je
arpl
xchg
push
xchg
cmc
lods
sbb
lret
aaa
shrl
add
jnp
dec
sahf
cmp
sbb
push
add
test
stos
push
addl
xchg
ss
scas
push
sbb
push
push
push
jmp
mov
push
leave
mov
xchg
pop
xor
add
dec
sub
repz
dec
pop
xchg
pushf
and
shrl
gs
ja
lock
out
out
idivl
adc
pop
and
rorb
push
cmp
popa
lods
dec
loopne
lcall
or
es
jae
mov
popf
lahf
loope
or
add
daa
cli
xchg
sub
lock
xor
mov
cmpsb
stc
mov
addr16
adc
push
loop
ficomps
mov
xchg
mov
enter
pushf
jmp
cmpsl
ds
dec
ljmp
lods
mov
mov
sub
shl
ss
lcall
mov
data16
sub
jb
insb
and
mov
test
enter
dec
shll
jg
and
loopne
das
push
fisubrl
icebp
sub
lods
insb
sbb
sbb
and
add
mov
pop
adc
arpl
outsl
ljmp
out
aam
add
mov
in
sbb
mov
movsb
ret
in
cli
daa
mov
mov
fst
jae
out
mov
ljmp
pop
push
xchg
xchg
sub
jle
mov
arpl
xchg
jae
insl
lods
mov
xor
popa
in
ror
les
jb
loope
push
jp
jns
pop
push
jecxz
mov
cmpb
sub
cmc
divb
outsl
xchg
stos
cmp
mov
sbb
cmp
push
mov
jl
out
popf
sbb
inc
lods
push
lret
bound
scas
or
test
rolb
loopne
filds
cmp
into
jp
add
push
outsl
cmpsl
and
fdivrl
cmp
add
lea
xchg
cmp
lea
inc
pop
rolb
sub
enter
rcrl
mov
sub
mov
pop
sub
out
loopne
mov
outsl
ret
jb
lds
or
mov
shl
xchg
and
dec
loop
lret
cmp
jae
ljmp
leave
aaa
jnp
rclb
push
ror
adc
insb
fisttps
fsubrp
pop
les
push
fsubl
pop
imul
xchg
arpl
mov
pusha
lahf
mull
popf
gs
arpl
aad
push
and
fwait
ljmp
mov
ja
xor
fisubs
sbb
in
xchg
bound
into
pop
add
mov
fdivrs
rcrb
dec
leave
or
repnz
or
jb
adc
fstpl
faddl
or
pusha
int
rorb
jmp
or
daa
shll
mov
sbb
pop
fwait
dec
push
jg
xor
add
jp
cmp
sbb
lods
cld
stos
setno
int
mov
imul
in
cmpsb
sti
cmp
andl
pusha
stc
add
sbb
sbb
dec
push
shlb
fisubrs
xor
pushf
jo
pushf
test
mov
ret
pop
movsb
cvtps2pi
mov
movsb
repnz
dec
xchg
inc
push
adc
scas
mov
push
cmp
sbb
rorb
dec
dec
xor
mulb
inc
inc
pop
jbe
out
mov
or
jp
loop
outsb
mov
aas
cli
and
xor
mov
data16
outsl
je
dec
stc
cwtl
and
lret
ss
xchg
repnz
cmpb
addl
insb
loop
les
jb
in
or
loopne
mov
testb
rcll
add
data16
sar
mov
icebp
jp
and
sbb
rorb
adc
mov
pop
push
call
xchg
stos
xlat
inc
inc
pop
inc
icebp
insb
outsl
repz
sub
adc
lock
sub
sbb
cmp
es
rclb
sub
test
test
push
add
lock
pop
call
cmpsb
mov
pop
popf
push
jns
jp
popf
xor
fisubl
sbb
dec
shll
xor
push
jne
xchg
mov
pop
mov
xchg
inc
cmp
call
insl
cmp
in
test
jbe
loop
sbb
movsb
dec
or
add
sub
dec
add
jl
popf
mov
popf
loop
or
dec
pop
xchg
or
daa
addr16
adc
orb
xchg
cmp
xchg
add
or
push
ljmp
lea
fcmovnbe
cmp
xor
das
adc
outsb
outsl
dec
jno,pt
ret
rcrb
gs
loopne
lods
xor
lock
test
inc
cmp
or
arpl
insl
jnp
out
mov
int3
loopne
adc
sbb
cmp
test
push
nop
jge
imul
inc
mov
sarb
mov
sbb
inc
mulb
cld
mov
mov
popa
lods
ljmp
leave
push
ret
sub
lods
fnstsw
sub
or
in
dec
inc
sub
push
cmp
cmc
sub
push
scas
es
adc
movsb
lods
rclb
and
sbb
add
jnp
sbb
adc
xchg
fwait
xor
cmpsb
lock
sbb
in
xchg
gs
mov
and
movl
cwtl
adc
add
jns
int3
pop
fstl
jmp
mov
and
into
cmp
mov
fsubr
loope
jno
mov
cmp
add
cwtl
sub
jp
mov
push
test
addr16
fstpl
sbb
mov
sub
repz
and
ret
out
xor
mov
js
faddp
icebp
sub
xor
orb
dec
mov
mov
lret
or
filds
adc
in
shlb
insl
imul
cmpsb
pop
sti
adc
pop
dec
push
je
mov
out
scas
cmpsl
lock
cmp
mov
loop
mov
repnz
out
jb
add
xchg
jbe
inc
mov
data16
dec
pop
sub
movsb
cmpl
lret
in
adc
decb
ja
cwtl
xor
iret
into
mov
ret
sub
or
cmp
pop
int
cmp
cmp
movsl
icebp
sbb
mov
outsl
outsb
sbbb
jno
rolb
insb
gs
popl
in
into
in
rcrb
cmp
mov
bound
dec
mov
sub
test
mov
repnz
cmp
jbe
inc
ja
outsl
shrl
xchg
dec
cmp
loope
add
loope
data16
jb
dec
sub
add
ljmp
popf
or
cmp
push
dec
pop
lret
lret
mov
pusha
mov
aad
int3
push
insl
lcall
jne
jb
jb
clc
mov
lcall
push
test
mov
mov
sbb
inc
scas
std
sub
fimull
pop
mov
and
les
fiaddl
dec
shll
aam
jb
sbb
cmp
js
loop
lods
sbb
test
and
xchg
insl
mov
fnstenv
jae
mov
cmpl
or
or
das
dec
sarb
movsl
jg
mov
add
mov
fldl
nop
fisubrl
pop
cmp
stc
hlt
mov
stc
adcb
scas
inc
mov
xor
inc
pop
mov
mov
add
jl
mov
xrelease
or
xor
sbb
dec
cmp
addr16
popa
in
test
xorb
or
mov
not
iret
or
mov
fs
add
xor
and
les
test
lds
or
dec
adc
mov
pop
push
xchg
lcall
jb
mov
test
dec
test
arpl
sbb
rorl
loope
pop
daa
cmp
pop
int
mov
lahf
xchg
mov
les
mov
add
xchg
push
loop
hlt
xor
loop
ds
mov
push
lods
push
das
shl
test
gs
insb
dec
mov
or
mov
and
xchg
xor
mov
xor
loope
add
inc
stos
sub
loop
ret
out
dec
aaa
mov
mov
xchg
rcr
repnz
mov
adc
adcb
xlat
xchg
cmp
pop
out
rcll
add
mov
adc
and
out
sti
and
inc
addl
dec
pop
addr16
xchg
js
sbbb
jle
icebp
movsl
dec
lahf
test
insl
jmp
fidivrl
push
mov
fidivs
mov
rol
je
xor
enter
arpl
daa
scas
ds
ljmp
jno
fisubl
sbb
mov
adcb
fwait
loop
xchg
dec
test
adc
add
data16
fisubl
ret
mov
sbb
xor
scas
inc
outsb
sub
sub
fmuls
faddl
pop
addr16
xor
cld
cmp
push
outsb
ffreep
jl
ret
sahf
push
and
pop
push
sub
xor
icebp
sub
es
sti
pop
mov
sub
jno
sub
out
inc
addr16
jo
test
mov
mov
lds
das
sbb
jp
xlat
lcall
js
or
scas
rcrl
or
jmp
pushf
xchg
lds
test
out
jecxz
and
push
adc
sbb
outsb
lods
out
sbb
jbe
cmpsl
out
xchg
mov
lcall
subl
xchg
pop
jl
lock
mov
imul
push
sbb
lret
mov
sbb
mov
adc
adc
hlt
iret
xchg
ror
mov
mov
sarb
jmp
sbb
and
and
lods
fidivl
stc
dec
cmp
adc
sti
push
aam
enter
cli
test
outsb
add
cmp
xor
adc
jmp
loope
nop
dec
scas
cmp
cmpsb
les
inc
ret
pop
adc
aaa
loope
gs
int3
mov
ficoml
int
mov
inc
mov
push
in
loop
int3
adc
imul
cltd
and
into
arpl
aaa
cmp
jmp
imul
ss
bound
cs
loope
gs
add
mov
jb
jge
imul
in
sbb
xor
xor
and
out
push
jmp
imul
mov
dec
jp
push
push
outsl
adc
fs
mov
pop
xor
aad
ja
push
in
daa
pop
aam
rorl
daa
std
pop
sbb
popf
data16
into
add
and
jl
mov
cmp
andl
aas
out
dec
mov
in
mov
scas
mov
mov
rcrb
test
jns
test
and
jns
xor
push
inc
add
dec
in
push
hlt
mov
dec
jno
push
jnp
push
pop
dec
inc
in
call
sbb
gs
aam
aas
push
jb
daa
movsb
sub
mov
stos
push
and
pop
xor
and
and
push
dec
in
add
pop
and
cmpsb
dec
and
mov
or
xchg
dec
loop
jecxz
adc
cltd
inc
lds
xor
xchg
mov
dec
and
stos
sbb
js
or
pop
lahf
scas
cld
lcall
lahf
pop
jl
test
inc
push
and
ja
ficomps
insb
cwtl
or
xor
jecxz
adc
cmp
popa
insl
leave
sbb
sahf
push
out
mov
mov
rcrl
repz
clc
subl
sbb
sarb
fists
xchg
cld
je
fsubrs
jne
sbb
aad
int3
mov
push
and
and
jae
inc
stc
sbb
inc
fistl
pop
mov
push
xor
arpl
std
xchg
jp
notl
push
add
sarl
ds
lret
xrelease
cltd
push
insl
mov
pop
xor
push
pop
in
xchg
repz
sahf
roll
jmp
mov
fisubrs
xor
add
push
jle
hlt
cmp
xor
adc
add
sbb
dec
les
pop
xchg
inc
xchg
add
loopne
iret
pop
faddl
cmp
mov
hlt
push
femms
in
push
mov
out
leave
loope
outsl
in
mov
and
xor
jnp
dec
mov
add
jo
dec
rcl
test
pop
cmp
jae
jge
testb
jge
dec
add
jl
mov
lods
push
push
xchg
adc
mov
push
adc
out
in
popa
jg
jae
cmp
stos
out
lcall
sbb
mov
les
imulb
insb
jge
sbb
movsl
outsl
repz
movsb
mov
lret
jle
orb
add
fwait
xor
pop
add
mov
push
push
inc
fiaddl
xor
mov
dec
pusha
cwtl
enter
mov
push
lods
sti
in
repnz
mov
mov
rolb
or
rorb
push
lds
dec
in
jge
movsb
bnd
mov
add
out
movsb
sahf
or
arpl
orb
cmp
ljmp
into
adc
xchg
adc
pop
push
dec
jbe
out
sub
xchg
lock
dec
mov
push
sub
popa
jp
lret
mov
xlat
je
je
inc
stos
pop
jae
arpl
lahf
int
mov
mov
push
or
add
jnp
jecxz
jne
add
adc
enter
scas
mov
ret
jnp
mov
sbb
aas
or
mov
sub
roll
xlat
shrb
add
or
sub
jl
inc
xor
mov
in
lret
lret
push
insl
in
lcall
leave
jg
dec
xchg
add
sbb
out
xchg
cs
lods
mov
pop
sub
int
adc
pop
shlb
pop
or
test
mov
fdivp
loop
adc
pop
stos
mov
rcll
inc
movsl
cmp
pop
mov
into
jne
sub
test
dec
or
pop
xchg
cmpsl
sub
xchg
sbb
mov
add
clc
or
out
sub
jbe
add
mov
xchg
pop
jno
or
sarb
push
pop
loop
fadds
mov
xchg
fcmovbe
push
push
cmp
les
mov
xor
inc
loopne
loopne
inc
inc
mov
aas
jbe
pop
pop
add
in
and
sub
movsl
stos
imul
sub
or
std
sbb
cmp
fisttpll
xchg
and
adc
shrb
and
fsts
imul
push
pop
pop
shrl
sub
call
inc
and
loopne
adc
push
stos
inc
xorl
out
out
cmpsl
inc
jbe
sbb
movsb
sbb
bnd
mov
inc
jmp
inc
in
in
xor
pop
out
dec
dec
fwait
repnz
dec
or
inc
jl
xchg
adc
jns
add
lcall
cli
xor
shll
pop
jae
xor
inc
xchg
cmpsl
mov
jmpw
sub
out
mov
add
cmc
mov
sub
adc
cmp
loopne
cmpsb
push
pusha
idiv
jp
into
sbb
push
push
push
sub
jbe
rep
ljmp
sbb
sbb
ss
push
jo
and
cld
dec
cmc
xchg
dec
jecxz
cltd
xor
mov
aas
test
mov
jbe
test
iret
mov
and
shll
test
mov
jl
lcall
adc
ljmp
push
insb
jg
push
movsb
cmp
cmc
fcmovnbe
loope
mov
dec
fbld
push
into
inc
aas
outsb
mov
rol
and
and
jae
jge
movsb
mov
and
jl
loop
flds
rorb
pop
andb
xlat
xor
stos
mov
test
and
xchg
das
ret
sub
lret
popa
pop
cs
jo
xchg
jmp
adc
mov
fdivrl
push
int3
and
shrl
imul
mov
ret
push
mul
sahf
loope
mov
sbb
rolb
adc
repnz
xlat
and
jns
inc
and
cmp
arpl
push
mov
stos
mov
xchg
sbb
lret
stc
mov
pusha
into
push
enter
cmp
in
lcall
xor
scas
adc
xchg
dec
xor
and
dec
out
add
mov
iret
sbb
testb
popf
and
mov
dec
mov
push
push
out
rcll
mov
enter
call
les
cli
dec
jmp
add
pop
insb
rcl
mov
hlt
jl
mov
and
add
pop
fstps
js
sbb
sbb
fadds
test
js
cmpsb
pop
ljmp
and
mov
cmp
add
inc
loopne
imul
push
mov
neg
jb
jle
jg
dec
stc
inc
cwtl
popa
jns
aaa
scas
inc
stos
push
pop
enter
sub
mov
call
test
add
adc
jbe
aas
push
sar
add
add
push
fidivrl
lss
lahf
fidivrs
push
dec
int3
push
lcall
test
sbb
add
lret
scas
fwait
and
or
xchg
fstpt
jle
repz
out
inc
sahf
xchg
das
mov
cmp
mov
test
outsl
fimull
cmp
push
pushf
xor
bound
sub
nop
and
adc
xor
mov
lock
loope
loopne
pop
xchg
fldcw
mov
aas
fsubr
outsl
mov
sub
mov
imul
mov
lods
imul
xchg
cltd
call
mov
sahf
xor
jne
enter
dec
mov
pop
mov
or
js
mov
fwait
cmpsl
mov
xchg
jne
loopne
neg
push
cld
push
mov
push
mov
aaa
test
mov
roll
test
cmp
enter
mov
cmpsb
add
add
pop
loopne
int3
popf
mov
inc
or
push
das
cmp
fistpl
mov
sbb
rcr
jnp
lret
add
pop
fnstenv
pop
xchg
testb
jp
cmp
push
push
jle
inc
decb
xchg
cmpsl
xor
sbbl
cmp
push
movsb
xorl
jo
imul
sub
fsts
test
cwtl
push
enter
sbb
inc
notb
in
shl
push
ja
arpl
pop
inc
dec
or
enter
mov
int
shlb
int3
mov
cwtl
xor
dec
jno
dec
adc
out
lods
push
push
jno
mov
sahf
cmp
pop
hlt
mov
xchg
add
insl
push
daa
pushf
lea
inc
lret
mov
scas
fimuls
in
mov
adc
or
shlb
sbb
jecxz
imul
test
dec
repz
jnp
inc
lods
sbb
sub
insb
test
jns
jecxz
sbb
mov
add
mov
xlat
in
dec
mov
dec
std
mov
iret
movsl
std
ss
cli
cmp
xchg
mov
test
push
pop
pop
insl
arpl
and
mov
cld
nop
inc
shll
jne
decl
sbb
xchg
pop
and
pop
inc
mov
lods
mov
adc
mov
leave
sub
sbb
pop
cli
dec
dec
out
cli
out
rol
decl
adc
lea
and
repnz
pop
cmp
push
push
call
and
outsl
push
stc
pop
cmp
sub
add
repz
and
scas
add
adc
or
pop
fsubs
pusha
cli
push
mov
pop
sbb
pop
aam
mov
fbstp
mov
sub
bound
add
movsl
cmc
scas
and
les
jnp
stos
ret
stc
xchg
push
mov
fs
push
sub
hlt
xchg
pop
out
pop
mov
lods
cmpsl
or
pop
mov
shrl
pop
es
dec
or
cmc
xor
xor
jo
pop
aas
lock
add
add
in
cld
pop
loopne
pop
shl
pop
and
popf
sub
or
fwait
daa
int
scas
mov
add
idivb
jns
outsb
push
lcall
cmp
fsubs
movsl
adc
dec
pop
mov
popf
cmp
cmp
je
aad
sub
sbb
sub
das
repnz
pop
cmc
xor
mov
push
movsl
sbbl
flds
dec
testl
and
loope
movb
mov
mov
test
pop
adc
call
in
js
lahf
cltd
repz
sub
int
mov
lods
and
dec
mov
add
sbb
lahf
loop
or
cmp
and
mov
jge
push
daa
rcrl
xchg
xchg
icebp
sbb
sarl
mov
popf
scas
addr16
test
sub
add
xchg
xor
jle
scas
dec
aaa
stos
dec
inc
outsb
sub
jns
ret
sub
outsb
pop
mov
xor
or
lods
inc
push
sbb
dec
enter
jmp
cmp
into
into
push
mov
shrl
or
jae
in
cmc
push
loopne
in
push
jge
add
cmp
jae
rorb
cwtl
xlat
addr16
addr16
loopne
and
cltd
mov
inc
push
loop
mov
cmp
in
shl
sub
mov
xchg
ret
pushf
test
fwait
dec
testl
lahf
fsubr
mov
mov
lahf
push
mov
loopne
je
xchg
in
mov
stos
mov
fsub
inc
aaa
sbb
push
lcall
bound
popf
inc
popf
ret
test
ja
movsl
fisubs
test
call
mov
xchg
or
cmp
pop
mov
add
movsb
dec
lock
lods
pushw
fdivs
fstpl
mov
rcr
nop
push
fstps
adc
loop
sub
or
or
adc
add
aaa
cltd
sub
or
fs
outsb
aam
fcoms
int3
mov
push
dec
out
add
mov
adc
int3
xor
cmp
int
sub
test
je
or
pop
ss
stos
rcl
in
outsb
push
fdivrl
cld
scas
push
cmc
or
xchg
xor
loop
xchg
fistps
loop
cli
jge
sub
jecxz
andl
pushf
bound
cltd
add
loopne
outsb
je
dec
xor
pop
pop
shlb
mov
rcrl
pop
sub
ficomps
push
sahf
nop
daa
es
pop
hlt
push
inc
push
outsl
jl
xchg
jbe
rcl
lret
add
iret
xor
inc
and
cmp
lret
push
rol
pop
pop
flds
test
jmp
lds
sti
shr
outsl
and
pop
dec
mov
jge
xchg
mov
mov
adc
aad
in
pop
mov
bound
and
cmpl
jge
and
mov
les
lret
mov
insb
cmp
addr16
fstl
add
push
or
xchg
jl
dec
jo
mov
cld
xchg
push
mov
push
loopne
testb
xchg
xchg
mov
frstor
fs
cmp
jle
xor
mov
divb
das
inc
cmp
pop
dec
roll
dec
loopne
add
sahf
xor
rclb
daa
inc
daa
negl
pop
pop
call
data16
mov
movsl
rclb
mov
scas
fcomps
leave
sbb
icebp
loop
hlt
fildl
or
and
xchg
ljmp
add
push
scas
daa
mov
adcl
mulb
addr16
rcrb
or
sub
mov
xchg
xor
fcoms
or
lcall
cmp
sub
xchg
cmp
dec
test
mov
fadd
lock
jne
mov
outsl
sbb
fld
xchg
sub
gs
lret
xlat
rcrb
sub
add
mov
pop
or
adc
pusha
jl
or
hlt
push
sub
loopne
inc
fsub
add
cmpsl
sbb
subl
add
mov
fcomps
rcrl
jp
mov
pop
jmp
lea
jecxz
in
ret
testl
or
jns
jb
push
test
sbb
movl
xor
popf
jl
inc
mov
pop
icebp
adc
andl
inc
or
jbe
es
fwait
inc
icebp
mov
sub
sub
pop
decb
inc
sbb
insb
or
inc
loop
cld
outsl
fs
fiaddl
add
scas
pop
in
repz
bound
push
inc
aas
mov
jg
fldl
mov
test
mov
rclb
aam
or
js
and
mov
or
jae
push
and
lcall
xchg
stos
shrb
and
add
inc
jno
mov
in
pushf
dec
add
scas
mov
dec
sbb
add
out
cmp
out
fcomip
xor
cmpsb
les
mov
jmp
and
jb
insb
sbbb
jns
xor
push
ljmp
inc
mov
jb
lahf
jno
jns
mov
mov
sub
incl
mov
iret
push
inc
int3
fldenv
inc
loop
inc
arpl
sbbl
pop
fs
mov
xchg
inc
lahf
inc
out
xchg
stos
test
je
enter
inc
insl
or
ja
lea
iret
addr16
dec
mov
jae
pop
nop
testb
daa
notb
sub
aam
and
sub
fisttpll
int3
fisubs
dec
mov
movsb
adc
cmp
push
add
sbb
cmp
in
mov
fnsave
lahf
xchg
mov
push
fs
xlat
jns
stos
jmp
fstpl
fidivrl
push
popa
mov
dec
les
lahf
xor
push
mov
dec
aam
data16
loopne
dec
cmp
test
fildl
or
push
bound
adc
cmc
push
xor
loope
jnp
xchg
cli
push
mov
enter
test
or
pop
cmp
add
push
repz
cs
lahf
test
out
in
xlat
mov
dec
in
jnp
inc
pop
and
loop
and
les
dec
dec
push
inc
ss
scas
out
mov
jmp
aad
repnz
ds
fldcw
sbb
jge
popa
xchg
or
pop
add
movsl
push
cmp
xchg
popa
inc
loope
xchg
mov
in
loop
sbb
sub
mov
push
add
bound
jge
ret
loope
push
sub
fwait
xor
xor
xor
cmp
inc
sti
subb
or
out
iret
inc
out
and
dec
jecxz
nop
jecxz
stos
sub
out
lods
jge
inc
push
push
fcmovu
and
push
mov
push
mov
xor
es
pushl
shll
jp
aam
and
or
imul
mov
fsubs
lcall
cs
xor
lea
xor
xorb
xchg
xor
xchg
and
adc
xor
pop
bound
les
in
lcall
jnp
clc
pop
jmp
outsl
or
lock
outsl
inc
push
lods
sub
sarl
ret
lahf
outsb
sbb
push
lea
or
iret
mov
movsb
es
inc
rcrb
rcl
jmp
adc
adc
mov
shll
jmp
or
cmpb
adc
mov
in
push
cmp
movsl
dec
in
lods
ret
call
lret
in
getsec
testl
xlat
lahf
ds
or
sub
adc
push
cli
inc
dec
imul
inc
adc
dec
mov
dec
pop
imul
es
hlt
aas
xchg
dec
lods
lcall
roll
cmpsl
pop
xor
int3
imul
fwait
dec
lcall
mov
pop
cli
xchg
jae
or
pop
or
mov
fildll
or
mov
add
mov
fisubrl
in
ror
and
push
or
mov
sbb
inc
jle
sub
dec
and
jae
jbe
xchg
xor
stos
xchg
sahf
orb
or
inc
aaa
rcr
jne
fsubrs
inc
xor
push
jg
and
mov
sub
push
aas
push
or
outsl
mov
push
and
cs
push
cmp
es
dec
js
or
push
test
rcrb
movsb
adc
jb
dec
out
mov
outsb
or
das
mov
xchg
out
sbb
mov
stos
lds
jecxz
push
adc
cs
jg
flds
ss
sub
hlt
push
popf
jecxz
xchg
repz
mov
mulb
mov
dec
lcall
adc
in
or
mov
and
int
mov
call
leave
cli
jo
mov
jge
ret
mov
or
hlt
ret
out
xchg
pop
push
adc
mov
xchg
xchg
idivb
adc
arpl
add
arpl
pop
ljmp
pushf
or
xor
fsubrl
notl
repz
inc
ljmp
sbb
fstps
sbb
xor
dec
push
push
in
mov
sbb
mov
out
pop
aam
shrl
and
xchg
dec
push
movb
adc
mov
cs
sbb
jmp
sti
or
sub
rol
cmc
jg
pushf
mov
pop
pusha
pop
and
inc
pop
dec
es
mov
inc
out
clc
bound
in
leave
cltd
insb
inc
xlat
popf
mov
loop
add
lods
jne
aad
test
xor
lret
push
sub
loop
into
outsb
xchg
repz
rol
cs
jmp
daa
adc
pop
fs
ret
adc
into
adc
outsb
scas
divl
xchg
mov
sub
sbb
popf
aam
mov
cmp
xchg
cmc
adc
mov
popa
and
imul
add
pop
add
sbb
pushf
mov
dec
add
in
inc
ret
pop
push
cmpsb
outsb
popf
dec
ror
sub
mov
pop
repnz
mov
and
pop
call
cmp
test
out
dec
sbb
rorl
xor
mov
push
out
pusha
rorb
arpl
hlt
mov
sbb
int
cmp
lods
inc
insl
adc
jb
sbb
and
jge
mov
jmp
lret
test
mov
push
sub
movsb
xlat
sub
add
add
repnz
and
adc
lcall
and
jl
inc
popa
and
int
cld
push
mov
jl
ss
pop
jns
cmp
dec
add
dec
stos
ret
int
lret
das
mov
popf
jg
rolb
pop
fbstp
ljmp
jle
mov
pop
into
and
push
xchg
mov
mov
fstpt
test
ja
pop
adc
push
aas
mov
leave
mov
hlt
and
negl
aas
jg
in
add
xchg
ljmp
mov
fstpl
lds
out
popa
jl
arpl
mov
jp
sbb
shl
js
cmp
pop
dec
xchg
call
cmp
pop
iret
or
sarb
into
or
into
test
dec
cld
in
sbb
fwait
push
adc
jmp
xchg
stos
push
add
jae
in
cs
fdivrs
ds
add
jae
in
mov
outsb
lods
out
jmp
shll
mov
xchg
xchg
and
data16
repnz
rcrb
cmp
sub
xchg
jecxz
xchg
push
in
fsubrs
icebp
sbb
flds
loop
push
div
sti
sub
dec
fmuls
mov
cmc
xchg
fsub
imul
dec
xor
or
cld
scas
and
add
dec
add
push
mov
cs
sub
and
or
sbb
mov
xor
mov
dec
adc
frstor
in
std
jae
dec
das
cmp
rclb
in
test
iret
stos
jns
ljmp
mov
sub
in
dec
push
mov
xor
daa
cli
inc
aas
stos
xchg
mov
div
aad
scas
jb
test
enter
cmp
or
adc
pushf
push
pop
sahf
xchg
pop
xchg
adc
ret
add
arpl
movsb
adc
mull
subb
jnp
mov
push
cmpsl
lret
xchg
scas
loop
sub
aaa
shlb
in
sbb
push
push
lcall
cmp
aaa
push
scas
in
pop
ret
push
dec
and
mov
pusha
pop
sbb
repnz
pop
cmp
rcll
ret
mov
push
jl
pushf
push
adcl
icebp
mov
loop
push
mov
mov
inc
adc
xchg
fdivr
or
lea
fiadds
push
imul
fmull
cmpsb
sub
lock
je
pop
aas
xchg
jns
lds
repz
ds
pop
es
mov
or
cmp
dec
dec
sub
cltd
ds
fs
test
add
jp
push
outsb
sbb
pushf
js
or
cmpsl
ds
jle
lods
mov
mov
sbbl
leave
int
pop
stos
insb
out
rorb
icebp
lods
xchg
inc
mov
or
cmp
into
mov
cmpxchg8b
sahf
push
icebp
add
inc
or
cmpsl
sahf
in
cmp
mov
adcl
add
inc
sbb
jo
cli
shl
add
insl
shlb
repnz
dec
das
dec
pop
popa
insl
dec
sti
cmp
std
sbbb
ss
insl
adc
or
fs
lds
lds
mov
jle
sbbl
mov
or
mov
dec
loop
insl
adc
outsl
push
filds
or
sbb
xchg
add
or
jmp
xor
cmp
imul
lea
fistl
sbb
pop
mov
cwtl
pop
repnz
mov
repnz
cmpsb
dec
xor
or
mov
push
pop
imul
in
cmpsl
mov
jnp
in
add
dec
dec
pop
loop
pop
rcl
stc
and
pop
cmp
imul
rcrb
lret
mov
fdivrl
mov
add
pop
dec
shrl
add
lea
stc
stc
popf
aaa
and
mov
dec
dec
sub
fs
loopne
ret
insb
mov
mov
in
mov
push
movsl
mov
out
xor
pop
outsb
push
mov
fst
pop
ficoml
rorb
pop
outsl
test
sub
xchg
mov
mov
xchg
insb
jnp
popf
hlt
jb
dec
addr16
lret
mov
loopne
cmp
dec
icebp
movsl
iret
mov
hlt
icebp
xchg
dec
dec
sarl
xor
mov
cwtl
mov
xchg
aas
adc
sbb
sbb
inc
stc
popa
lods
imul
mov
and
lock
fcoms
in
and
sub
lods
cmc
and
repz
in
push
dec
pop
push
add
repz
inc
mov
mov
xchg
notl
loop
pop
js
jle
sub
roll
xor
in
insl
xor
pusha
js
mov
add
in
adc
aad
inc
pushf
fbstp
in
mov
fs
pop
int
rcrl
push
xchg
repz
mov
mov
mov
sub
mov
pop
dec
mov
fdivr
sarb
lret
mul
stos
xchg
jmp
or
pop
xor
sub
push
dec
mov
mov
adc
dec
mov
out
or
out
jecxz
mov
int3
add
cmp
outsb
add
decl
or
fadds
push
lods
and
sti
cmpl
popa
shll
je
sub
add
cs
xchg
bound
out
rcll
push
inc
dec
sub
pop
orb
push
xor
sbb
inc
pop
adc
loop
lods
mov
pop
xchg
loop
insb
jle
add
je
repnz
pop
std
es
or
mov
xor
mov
or
test
inc
push
lock
test
imul
rcll
cmp
fadds
insl
fiadds
jecxz
push
mov
pop
notb
fyl2x
in
and
stos
aaa
decl
adc
cltd
lea
je
addl
insl
xor
xor
adc
adc
fidivl
lahf
fsubr
xchg
stc
xchg
loop
fwait
scas
mov
inc
aas
cli
ds
loopne
dec
jmp
in
ljmp
test
test
mov
add
and
test
fcoml
faddl
cltd
fidivs
inc
fsubrl
jo
insl
cmp
dec
inc
jnp
push
dec
fmull
out
test
js
or
or
cmp
xchg
fldt
push
ret
aas
ljmp
add
push
adc
jo
pushl
sbb
lret
lock
fadd
xchg
or
cmp
add
or
sub
das
lret
inc
pop
mov
insl
jmp
or
adc
mov
or
adc
sub
dec
js
jb
sbb
jecxz
movsb
pop
shrl
aas
dec
mull
mov
fwait
dec
inc
rorb
arpl
xorb
ljmp
mov
daa
dec
iret
sbb
mov
mov
inc
decb
fstps
pop
sti
aaa
call
mov
cli
mov
mov
mov
sar
clc
push
xlat
xor
hlt
add
xor
movsl
xchg
mov
jp
cmp
and
xchg
xchg
mov
test
and
cmp
idivb
jge
movsl
push
ret
jge
jnp
insl
lds
and
dec
test
and
pop
leave
aaa
outsl
fsubrl
adc
push
lcall
push
ss
loop
xchg
sbb
mov
rclb
xchg
xlat
cltd
or
out
mov
or
movsl
jle
mov
jle
push
pop
adc
or
sbb
sbb
in
jle
pop
lods
mov
cmpsb
jmp
or
pusha
add
pop
cmp
cmp
roll
in
into
mov
cmp
inc
cmpsl
out
push
sbb
or
xchg
xchg
push
orb
xor
mov
in
notb
lcall
cwtl
push
fistpl
negb
andl
adc
push
jns
andl
call
cli
xor
insl
inc
scas
stos
jns
push
sbb
movsb
ljmp
pop
lods
stos
jns
xchg
sbb
loope
or
push
cmpsb
mov
or
lahf
rcll
fucomip
sub
cltd
mov
mov
dec
pop
in
imull
mov
cmpsb
stc
and
pushf
js
loopne
inc
fwait
pop
push
gs
lods
ljmp
data16
nop
add
and
add
daa
mov
outsl
or
pop
cmp
sub
out
shr
lock
add
insb
mov
xchg
repz
xlat
ds
lahf
stos
shl
xor
jmp
aad
and
jb
cltd
test
cld
daa
ljmp
push
mov
or
mov
jns
pop
test
sub
sbb
xchg
cwtl
mov
or
sub
cmp
call
pop
cmpsb
das
dec
sbb
jae
cmp
mov
jns
or
aaa
cmp
lcall
lcall
fsubl
inc
data16
fwait
dec
cmp
cmpsl
out
sbb
push
sbb
leave
pusha
out
nop
outsl
pop
add
adcb
or
js
sahf
test
push
popf
xor
push
repz
loope
xchg
sahf
mov
rorl
push
xchg
push
vmovhpd
int3
fdivs
in
popf
xchg
test
ljmp
xchg
scas
faddp
loope
cld
push
xor
repz
clc
iret
divb
adc
push
popa
call
ja
aam
out
loop
bound
aas
cmc
mov
xor
in
add
dec
pop
test
mov
leave
sbb
aam
outsb
and
push
xor
outsl
or
adc
inc
sbb
cmp
xchg
and
jecxz
insl
and
push
fldenv
cs
push
ja
add
insb
and
and
call
push
rclb
cld
imul
pop
out
test
xchg
shl
repz
call
test
jnp
pop
ss
stos
sbb
das
add
xor
xchg
pop
data16
cmp
xlat
stos
inc
xor
jle
inc
loopne
push
push
in
pop
push
std
fucomp
das
xchg
cmp
fstps
inc
movsl
push
scas
call
sub
add
cmpsl
test
add
and
pushf
or
shll
ljmp
or
jnp
cmpsb
mov
pop
add
into
or
rep
jmp
mov
and
in
mov
lret
lret
sbb
inc
adc
cmpsl
insb
icebp
clc
aas
rcrl
testb
icebp
dec
sarb
imul
js
insl
push
or
ret
out
and
mov
add
rcl
jne
ljmp
shll
cs
adc
stos
add
lods
and
in
pandn
pop
roll
pop
into
outsb
shr
insb
dec
loop
mov
cmp
icebp
loope
mov
shll
dec
jnp
std
mov
fucomip
pop
loop
and
mov
xor
out
inc
imul
dec
pop
mov
movsl
jnp
cmp
xlat
lcall
pop
xchg
mov
dec
xor
mov
mov
rcl
gs
data16
int3
imul
hlt
cmp
enter
lds
dec
xchg
pop
pop
push
enter
int3
jle,pn
mov
inc
int
daa
and
sub
adc
sarl
in
xor
cld
aad
inc
lret
fidivl
sti
or
clc
js
pop
xchg
jnp
sub
push
dec
mulb
sub
fistps
xchg
jp
sbb
sbb
mov
iret
shll
add
or
mov
ffreep
aad
fildl
and
push
and
mov
test
stos
mov
fldenv
jecxz
dec
add
stc
into
lds
movsb
ss
dec
enter
mov
std
jmp
mov
subl
xor
push
pushw
ss
jbe
cmp
shlb
mov
pop
dec
mov
sbb
mov
jge
xchg
jae
pop
mov
lods
rcl
pop
in
dec
ret
lea
xchg
pop
mov
xor
xchg
pop
rolb
sub
dec
imul
iret
dec
aad
pop
pop
add
dec
sbb
add
stc
mov
mov
ja
jge
outsb
test
fistpll
popf
into
mov
jmp
push
sti
add
icebp
sub
sarl
outsb
arpl
inc
gs
push
ljmp
jp
adc
mov
mov
mov
cmp
push
faddl
pop
in
cmp
jo
mov
xchg
mov
stc
lcall
ds
das
into
loop
jmp
mov
mov
dec
in
bound
dec
nop
sub
loope
adc
jno
movd
scas
orb
lock
ds
sub
jg
lds
sbb
aas
adc
test
data16
and
push
hlt
sbb
addr16
push
notl
or
push
push
lods
add
xchg
mov
fimuls
pop
and
jle
in
inc
popf
adc
cmpsb
xor
lods
int3
dec
mov
mov
sub
pop
or
rcrb
add
pop
push
xchg
imul
jg
sbb
and
pop
cmpsb
in
sub
cmp
pop
or
pop
stc
or
xor
jmp
shrb
add
popf
xor
fists
adc
sub
pop
mov
sahf
push
jg
jle
not
roll
and
mov
sbb
xor
xchg
push
aas
push
movsl
jo
jae
icebp
push
ljmp
in
mov
or
jmp
popa
xchg
sub
sbb
mov
dec
fcmovne
push
xor
test
push
orb
sub
je
mov
pop
gs
jecxz
push
das
adc
xor
movsb
arpl
mov
je
mov
cwtl
push
test
push
or
inc
addb
aam
cmp
fsubrs
push
mov
add
mov
fwait
adc
inc
inc
fnstenv
push
test
test
inc
mov
je
jl
xor
out
sbb
dec
adc
mov
adc
pop
cmp
lahf
loop
outsl
cli
subb
dec
xchg
cmp
xor
pop
bsr
subb
push
fisubrs
xchg
add
xchg
aas
loope
cmpsb
andl
daa
cmp
test
loopne
add
sti
test
insl
fiadds
add
mov
test
push
das
mov
cmc
repz
pusha
test
loopne
push
fcompl
push
loopne
sub
inc
pop
sub
ds
xor
sbb
sti
movsb
loopne
ficoml
gs
shl
mov
outsb
add
mov
push
xchg
pusha
push
and
lahf
xlat
sub
push
mov
or
xchg
push
push
outsl
out
xorl
xchg
stos
xor
shl
jo
in
cltd
cmp
pop
xchg
or
out
cmc
mov
cwtl
add
scas
push
dec
add
jnp
mov
int3
out
adc
cmp
xor
push
ret
ds
mov
mov
sbb
call
adc
mov
ret
or
nop
mov
imul
cmpb
and
push
xchg
pop
cmp
fimuls
lock
add
pop
jb
mov
bsf
je
adc
subl
rcl
adc
pop
outsb
jp
xor
sbb
and
das
inc
push
pop
out
xor
add
lcall
or
dec
dec
mov
es
xchg
adc
aad
push
jne
push
fbstp
leave
les
jg
add
or
inc
pusha
insb
sub
sti
xlat
push
xor
lods
movsl
mov
mov
call
adc
shrl
cmp
pop
pop
movsl
cmp
imul
pop
sub
nop
pop
mov
add
mov
test
jg
test
xchg
psrlw
out
popf
fucom
decb
fimull
sub
loopne
push
int
inc
mov
data16
loope
xor
sbb
loop
pop
out
rcrb
fcomps
cs
xchg
add
add
sbb
mov
xchg
std
and
or
push
xor
fcoms
pushf
fcmovu
inc
add
ds
sub
ret
andb
stos
lds
sub
mov
pxor
out
add
hlt
cmp
aad
adc
and
pop
dec
adc
lods
shll
fmuls
pop
idivb
sub
insb
testl
sti
stos
xchg
das
push
dec
and
add
icebp
add
cltd
mov
push
mov
or
ss
mov
in
andl
cld
jo
sub
and
cmp
or
popf
in
jo
dec
pushf
fcoms
aas
into
popf
xchg
int3
ja
cli
int3
fsubp
push
and
ljmp
hlt
fimull
mov
out
mov
lods
push
fsubrl
add
clc
aas
loop
cmpsb
xchg
test
js
jne,pn
push
or
mov
adc
aam
add
scas
sub
inc
cld
movsl
js
add
jmp
addr16
movsb
ja
jo
pop
mov
inc
pop
jae
pusha
cld
xchg
fnstenv
or
adc
pushf
movsb
popf
int
das
negl
cmp
loopne
sahf
sti
scas
inc
xor
into
xchg
test
sub
xlat
in
jns
inc
test
ja
jmp
rcrl
int3
cmc
mov
pop
cmp
push
sub
jnp
test
jecxz
xchg
iret
sbb
adc
shlb
adc
sub
pop
fistpll
pop
xchg
jno
ret
aam
dec
push
xchg
fisubrs
mov
mov
bound
fisubl
push
adc
adc
jge
out
cwtl
cmpb
mov
mov
loopne
or
lcall
xor
out
inc
dec
aam
push
test
fisttpl
cmpsl
fsubl
sub
sub
push
es
pop
xlat
mov
test
js
repnz
mov
xor
adc
add
push
ret
adc
mov
push
in
sbbb
std
insl
mov
jo
out
fs
insb
inc
mov
adc
mov
sbb
cmp
mov
xorb
inc
in
out
mov
in
sahf
cmp
dec
cmp
push
inc
pop
movswl
movsb
test
inc
jns
in
movsbl
mov
sbb
lcall
in
xor
adc
insl
imul
imul
sbb
icebp
sbb
loopne
rorl
int
popa
xor
test
lret
xor
pushl
or
adc
pop
dec
jge
dec
and
cmpsl
push
insb
sahf
clc
lea
mov
lret
or
dec
cmp
dec
jle
out
or
test
mov
xchg
pop
xchg
cmpb
les
xchg
mov
xchg
pushl
add
inc
mov
cmpsb
roll
pop
dec
cmp
shll
mov
lods
pop
push
xchg
mov
dec
mov
xchg
lcall
add
or
rolb
nop
popa
int3
testl
push
rclb
dec
pop
test
or
pop
mov
les
int3
out
pop
fisttpll
or
sbb
sbb
pop
dec
out
cmc
dec
or
sti
into
cmp
pusha
jp
sbb
adc
push
add
jbe
icebp
mov
rorl
add
sub
hlt
mov
cmp
inc
mov
xor
and
inc
push
cld
mov
movsl
and
or
inc
std
mov
cmp
flds
or
sti
stos
ja
xor
leave
int3
xor
push
das
adc
and
and
insl
push
push
jl
emms
mov
and
das
lock
adc
sub
int
lahf
xor
push
addb
sub
or
mov
es
popf
popa
nop
lcall
push
mov
mov
jmp
aaa
push
divb
or
fildl
push
das
sub
roll
addr16
mov
popf
pop
sbb
push
cli
je
add
test
in
aas
jb
ss
xor
add
push
icebp
fwait
xor
lret
adc
das
xchg
or
cld
stos
xchg
out
cld
push
call
inc
inc
mov
mov
loop
sbb
sbb
out
pop
xchg
adc
bound
inc
xchg
scas
je
cmp
jle
das
cli
test
xchg
xchg
sbb
addl
js
push
pop
adc
arpl
pop
jg
mov
push
loop
xchg
pop
fiaddl
mov
xchg
dec
iret
fldl
gs
xchg
sahf
lret
imul
pop
inc
outsb
sbb
sbb
mov
mov
mov
mov
ja
std
adc
mov
loope
or
pop
xchg
xchg
and
and
sbb
pop
or
or
jb
cltd
std
push
daa
pop
std
dec
loopne
mov
addr16
jg
and
pop
mov
call
jl
mov
ja
rorl
push
dec
dec
push
mov
stos
imul
mov
mov
xchg
lea
shlb
outsl
mov
dec
adc
push
jbe
cmc
push
js
add
rcl
sbb
test
jmp
sub
iret
popa
js
in
or
mov
dec
pop
cmc
jle
mov
shlb
adc
mov
push
insb
mov
sub
test
pusha
sti
sbb
dec
int3
and
mov
sbb
std
mov
or
call
mov
push
in
test
mov
std
inc
push
stc
xchg
fcompl
das
inc
lods
std
push
or
stos
cmc
cmp
rcll
ret
fdivrl
sub
out
sub
jno
or
arpl
notl
jmp
jecxz
dec
test
dec
cmp
shl
aaa
mov
loopne
fs
mov
int3
or
mov
fwait
rolb
xchg
sub
jb
push
mov
xchg
call
mov
push
das
repnz
jmp
jg
push
pop
fpatan
pushf
andl
adc
mov
in
out
ficompl
lret
cmpl
int
insb
mov
rcrb
mov
in
sbb
cmp
hlt
mov
adcb
xchg
mov
ds
lahf
xchg
dec
xchg
dec
pushf
daa
jbe
in
mov
aaa
push
shll
mov
cmp
pop
loop
jge
mov
cmpl
mov
push
push
pop
pop
pop
ds
inc
fmull
pop
dec
mov
pop
add
negb
add
fisubrs
loop
inc
mov
adc
jns
adc
mov
sbbb
test
push
test
pop
mov
shlb
xchg
xor
fldl
dec
xchg
mov
cmp
cmp
add
pop
xchg
push
lods
rorb
sti
jns
mov
mov
and
mov
lock
cmp
add
test
mov
mov
mov
scas
push
sub
xor
inc
jae
aas
inc
inc
out
call
aam
int
mov
or
mov
sub
loop
lret
ret
ret
pop
cmp
sub
mov
les
or
xor
jl
sbb
fwait
pop
and
cltd
xchg
addr16
repnz
lcall
and
test
xchg
insl
add
int
movsl
sbb
inc
dec
jecxz
mov
mov
jnp
xor
mov
rcll
cmp
lds
add
add
push
pop
testb
cmp
outsl
xchg
push
clc
cmc
xchg
cmpsl
inc
sbb
mov
sub
movsl
push
cmp
aam
fisttpl
ror
std
daa
outsl
xor
je
or
mov
xor
inc
pop
mov
ljmp
aas
pop
sbb
sbb
cld
sbb
xor
addr16
icebp
pop
or
into
das
jne
jecxz
pop
sbb
or
call
mov
push
rol
dec
imul
jl
dec
cmp
sbb
test
pushf
push
and
in
push
sub
ret
cmc
scas
inc
cmpsl
add
subl
pop
push
stos
outsl
jge
ficoms
rcrb
and
psrlq
xchg
mov
xchg
and
cmpsb
jge
xor
mov
or
je
lods
subl
lods
dec
mov
fnstenv
in
cmpsb
lock
dec
xchg
outsb
push
insl
iret
push
push
testb
and
ret
or
out
xor
rcrb
add
mov
pop
out
sub
push
bswap
outsl
pushf
iret
in
fnstenv
leave
and
addr16
out
xor
sbbl
xchg
pcmpgtd
and
push
inc
sub
ja
das
sub
fsts
jle
leave
and
sti
fcomip
mov
in
out
lret
in
stos
dec
setle
inc
mov
fcomps
fmull
xchg
das
lahf
sbb
and
sbb
movsl
dec
xchg
call
imul
push
int
inc
fs
dec
cmp
adc
ss
testl
sbbb
aam
or
xchg
fwait
mov
fbstp
scas
jp
and
iret
scas
or
mov
addl
sbb
les
xor
inc
cli
pushl
stos
fimuls
or
push
loop
fiaddl
mov
insl
loopne
mov
pusha
jno
in
push
xor
cltd
scas
lods
es
jp
rclb
push
cltd
jmp
xor
inc
push
or
xor
xchg
stc
and
sbb
mov
xchg
enter
mov
add
pop
xchg
or
out
out
sbb
movl
push
push
pop
cmp
fisubrs
push
mov
inc
fcmove
xor
mov
push
stc
mov
mov
push
mov
inc
insb
inc
mov
movsl
fisubrl
mov
nop
gs
mov
and
jo
push
fiadds
out
es
incb
jnp
aad
sub
inc
shrb
pop
inc
jp
mov
je
dec
loop
or
imul
push
xchg
or
popf
and
mov
scas
jecxz
in
mov
mov
lahf
sbb
movsb
push
fucomip
adc
icebp
fdivrl
fcmovne
insb
std
js
xor
test
enter
mov
fdivrl
inc
dec
popa
fsubr
inc
pcmpgtd
cltd
lock
cmp
test
dec
in
jnp
adcl
shl
es
loope
xor
jae
out
and
lods
cli
pop
jbe
cmpsl
rcl
and
sbb
loopne
cli
mov
adc
ljmp
nop
mov
mov
inc
sbb
hlt
andb
mov
sbb
push
loope
sub
push
pop
dec
int
fcomip
pop
dec
scas
stos
imul
arpl
and
xchg
cmp
adc
xor
outsb
mov
flds
xchg
inc
inc
fs
jno
out
sti
push
inc
cmp
mov
notb
xor
mov
mov
idiv
lret
roll
push
mov
lret
rorl
ret
rcll
jmp
mov
inc
mov
adc
or
into
mov
repz
in
xchg
push
pusha
or
mov
ret
sub
sbb
test
sub
mov
pop
aam
lods
jl
dec
popa
xor
inc
out
cmpsl
push
in
sub
sub
out
rcrl
lret
mov
xchg
sub
dec
imul
mov
insl
decb
fwait
ret
pop
push
aaa
jbe
icebp
aad
inc
push
addr16
icebp
xlat
or
mov
xor
mov
popf
and
enter
out
push
jge
mov
jb
add
out
mov
addr16
icebp
sub
pop
mov
out
cld
cmpsb
lea
push
adc
aam
int
insb
cvtps2pd
push
xlat
jp
insb
cmp
and
into
shrb
or
jg
xchg
dec
push
or
xchg
movsl
jnp
stc
pop
ret
jns
xor
loop
mov
dec
push
pusha
ss
and
lahf
insl
fsubl
ljmp
push
mov
loop
and
nop
sarl
mov
ja
out
mov
sarl
xchg
je
lea
stc
and
enter
js
pop
lods
jnp
and
rcrb
mov
setb
test
sub
out
clc
nop
xchg
add
and
and
cmc
xchg
sub
mov
in
lds
or
test
dec
cmpsb
daa
mov
mov
subl
dec
and
inc
pop
vsqrtss
movsl
inc
mov
aas
jmp
or
andb
cmc
or
xchg
call
pop
fnstenv
push
inc
enter
push
out
add
pop
cmp
sti
lea
int
pop
negl
mov
sarl
cmp
popf
xchg
mov
dec
in
push
cmp
cli
xchg
adc
movsl
xor
jp
outsb
mull
or
cmp
lds
jle
addr16
sbb
addr16
and
test
repnz
and
pop
cmpsb
add
sub
and
or
sahf
movsb
mov
clc
add
cmp
and
scas
fldl
stos
in
mov
mov
popa
sub
jl
sub
pushf
jbe
into
jno
stos
push
in
clflush
jbe
out
cli
aas
cmp
cmc
roll
dec
dec
mov
ret
pusha
cmp
xchg
pop
jne
pop
mov
repnz
xor
jge
jns
add
shll
jne
jns
fdivrl
add
xchg
fadds
pop
push
rol
or
repz
andb
lds
clc
sahf
sub
push
sbb
and
addl
inc
push
mov
nop
fnsave
cli
adc
addr16
mov
test
pop
or
aaa
jbe
sub
mov
movsb
mov
sbb
imul
repnz
push
jl
shll
bound
int
icebp
sub
sarl
adc
mov
sub
mov
cmpb
clc
loope
dec
cmc
mov
mov
pop
push
push
ret
lcall
icebp
cld
imul
dec
cmp
in
push
push
dec
test
mov
pop
or
cs
mov
js
jge
or
sbb
jl
mov
fcmovnb
and
mov
clc
out
sub
and
inc
rclb
xchg
pop
scas
dec
dec
jb
and
lds
xor
xchg
out
mov
inc
lret
popa
orl
xor
push
aad
cmpsl
pop
xor
inc
je
inc
xorb
or
jecxz
bound
mov
fs
mov
sbbb
subl
test
cld
inc
add
mov
push
test
divb
hlt
cs
add
jle
insb
and
inc
and
sti
inc
out
xor
xchg
xor
or
cmp
rclb
movsb
inc
orl
dec
icebp
mov
icebp
sub
lret
add
dec
dec
stc
mov
cmp
or
das
inc
push
jmp
stos
fisttpl
inc
jmp
ds
add
xchg
push
add
inc
cmc
xchg
fisttpl
sahf
repnz
xchg
push
aaa
aas
rcrl
inc
jo
inc
es
inc
adcl
ss
dec
add
mov
fstl
pop
shlb
lock
pop
add
loop
cmp
sbb
int3
push
loop
and
push
sahf
or
mov
adc
and
dec
cmp
mov
jg
lods
pop
stos
add
or
xor
xchg
out
xchg
cmp
sti
sbb
xor
add
subl
movsb
dec
and
jnp
mov
jae
inc
arpl
mov
outsl
imulb
leave
mulb
xchg
adc
ja
std
fs
sahf
adc
xor
je
mov
mov
out
inc
call
ss
fwait
dec
jg
pop
and
cmp
xchg
add
mov
movsl
out
push
sahf
mov
xor
sub
cld
push
fadds
mov
fwait
mulb
cmp
mov
pusha
cltd
cmpsb
lock
shrl
mov
cltd
push
mov
or
or
dec
mov
pop
sub
pushf
mov
js
jo
jnp
jmp
sbb
mov
icebp
lds
and
pop
xchg
mov
lcall
je
pop
cmp
hlt
jnp
dec
add
test
push
xor
imul
lds
out
lds
xchg
add
lods
jb
xchg
test
aaa
mov
or
inc
loopne
push
pop
test
addl
pop
and
rcrb
paddsb
and
cmpsl
ds
adc
lds
std
add
pop
push
flds
sub
enter
outsl
sub
ret
out
ljmp
mov
mov
push
scas
inc
test
imul
mov
push
sbb
iret
add
js
adc
decb
stos
loopne
lahf
jp
cmp
mov
ret
in
pop
daa
cwtl
cld
sarl
push
or
push
mov
pushf
push
cwtl
lods
xchg
or
adc
jg
add
pop
sbb
test
iret
mov
mov
push
leave
ds
aam
fld
mov
jnp
xchg
sarb
repnz
and
dec
in
test
out
aad
pop
stc
and
and
sahf
out
rcl
daa
mov
xor
jbe
imul
adc
fbld
mulb
adc
mov
xchg
cmp
and
and
imul
loop
and
jge
dec
jmp
dec
mov
leave
mov
push
jge
movsb
cmp
ret
mov
adc
loopne
rcrb
mov
sbb
mov
dec
pop
jle
test
jp
pop
shl
leave
out
sahf
sub
xor
rol
jae
stc
mov
notl
mov
scas
pop
xchg
push
stos
scas
lea
mov
sbb
sti
mov
imul
test
test
mov
cmpsl
sbb
sahf
add
xchg
lods
pop
mov
enter
inc
pop
cli
jmp
and
mov
cmp
jp
pop
popf
or
fwait
in
xchg
popf
popa
fsubr
or
push
mov
call
popa
sub
cs
imul
clc
inc
inc
sbbl
mov
and
imul
aam
bound
repnz
xor
mov
sbb
xchg
add
push
test
test
mov
sarl
mov
mov
out
sbbb
xor
ljmp
push
in
jecxz
dec
and
add
or
je
xchg
cmp
sub
sub
out
sbbb
dec
sbb
bnd
fwait
sti
decl
xor
ja
sbb
lret
into
test
in
hlt
xchg
loop
pop
imul
out
and
sarl
jae
pop
xor
mov
cmpb
lcall
adc
gs
jl
mov
xlat
inc
cmp
sub
push
mov
fwait
mov
xlat
jne
das
sarb
mov
adc
sarl
cmp
cmpsl
xlat
icebp
in
decl
aaa
loope
setle
mov
scas
mov
shlb
jbe
mov
or
subl
or
arpl
and
sub
jecxz
data16
les
call
pop
cmp
xor
sbb
pushf
mov
daa
mov
xchg
mov
mov
imul
jne
in
push
sub
cmp
cmc
lahf
ret
sarl
sbb
push
push
cmp
pop
mov
je
lods
fists
je
loop
stc
xchg
outsb
jne
cli
lock
sub
xchg
and
in
pop
repz
xor
sub
jne
ret
mov
js
sub
out
jb
in
stos
xchg
mov
push
sar
imul
push
cmp
lea
jno
jns
push
xchg
popa
fsub
jnp
cli
lods
insl
call
pop
sbb
js
sub
or
repnz
int3
lret
pop
movsl
outsl
mov
push
movsb
lret
or
mov
scas
inc
push
pop
ds
out
lock
negl
dec
ret
js
sbb
xchg
insl
jge
mov
add
dec
cld
xchg
das
lahf
pop
out
mov
xchg
add
test
ror
lahf
js
cli
pushf
jecxz
lcall
loopne
dec
push
jg
mov
je
sarb
aad
inc
add
lds
push
rcrl
jbe
jno
fbstp
sbb
outsb
mov
mov
shr
xlat
cltd
pop
notb
mov
adc
jne
pop
scas
jnp
pop
jmp
nop
pop
hlt
scas
dec
sarb
dec
inc
test
push
sbb
jbe
mov
push
insl
mov
mov
inc
push
mov
dec
orb
inc
jne
pop
cltd
mov
int3
or
repnz
aam
mov
push
cmpb
imul
daa
mov
xchg
mov
push
ret
in
cmp
loop
or
cmp
ret
movsb
adc
fstps
sub
mov
jbe
loope
adcb
push
adc
clc
adc
push
inc
faddl
pop
mov
aad
push
pop
loope
sub
lahf
rorb
inc
and
inc
lret
lret
jmp
into
int
scas
dec
fs
iret
jmp
add
mov
jae
les
addr16
xlat
add
idivb
sbb
iret
mov
sbb
add
fistpl
push
lods
xchg
cmp
pop
icebp
cmp
lret
insl
adc
cmp
mov
sub
repz
aam
xor
xor
lods
cmc
push
das
cmp
sub
xchg
xchg
sbb
jl
mov
mov
aam
push
push
imul
pop
lods
int3
pop
push
sub
lods
test
js
mov
add
sti
adc
loop
sarb
mov
std
faddp
and
xor
and
and
mov
shrb
adc
icebp
or
push
andb
lea
fcmovbe
js
and
stos
sub
xchg
ss
inc
jg
xchg
fcmovnbe
pop
nop
mov
movsl
mov
adc
popa
enter
lods
lods
jecxz
xchg
cwtl
repz
mov
shl
in
sbb
in
sbb
xchg
sub
inc
fsubr
je
mov
push
mov
jle
jmp
dec
loope
xchg
stos
hlt
sarl
iret
test
cmovle
add
lock
push
jbe
aad
lock
movsb
arpl
cmp
jbe
pop
fsts
mov
sub
cmp
das
add
xor
jle
push
cmp
push
loop
sub
push
shrl
xchg
xorb
test
mov
fwait
clc
xchg
popa
push
adc
add
sub
les
add
ret
jg
pop
mov
cmp
outsl
les
jge
mov
insb
push
inc
outsb
dec
outsb
loope
add
jns
adc
rorl
nop
shl
pop
enter
stos
insb
std
pop
pop
fcmovne
fadds
mov
ret
xchg
sbb
enter
pusha
out
and
fs
bswap
push
jge
xchg
or
andb
dec
imul
fldcw
aaa
pop
cmpsb
les
repnz
jno
adc
mov
std
jo
jno
pop
test
add
arpl
fwait
pushf
mov
shrl
push
mov
dec
fs
sahf
data16
pop
sub
test
xchg
subl
sbb
mov
and
rol
scas
scas
push
flds
mov
xchg
repnz
mov
jno
shrl
sbb
aas
jmp
fcmovnb
sbb
repz
dec
xor
mov
sub
call
or
mov
jle
das
pop
xor
fstps
daa
pusha
xchg
shlb
xchg
ljmp
mov
sub
pop
jo
out
clc
call
dec
mov
das
aam
dec
dec
mov
inc
fadds
test
imul
mov
stc
test
lret
jge
mov
jo
xchg
jg
push
xchg
add
push
or
inc
fdivl
test
inc
push
sar
movsl
mov
ds
fsub
mov
shr
dec
pusha
sub
mov
sub
and
lcall
mov
pop
orl
mov
sbb
out
mov
sbb
addl
mov
lahf
out
adc
sub
fmull
nop
sub
jbe
sub
xchg
mov
or
adc
daa
push
mov
pop
outsb
pop
xchg
pop
ja
xor
adc
scas
orb
in
pop
scas
fstpl
stos
in
subb
push
lods
mov
std
jecxz
scas
or
push
jo
arpl
sub
mov
mov
inc
lods
mov
mov
add
sub
lcall
aam
add
mov
push
mov
je
cmp
negl
push
movsl
pop
mov
int3
cmp
push
xor
sbb
into
jg
shll
test
mov
mov
stos
fcmove
test
insl
rcrb
jnp
xor
into
mov
push
fists
sbb
hlt
sub
mov
xchg
jmp
jl
stos
push
aaa
pusha
and
push
out
shlb
jge
paddb
outsb
movsb
vpshlw
movsb
mov
in
rcrl
leave
cmp
stos
lods
add
rorb
push
popf
pop
fidivrs
rclb
dec
lret
pop
mov
enter
data16
dec
pop
out
push
call
jg
outsl
cli
mov
loop
test
adc
int3
cwtl
in
js
jecxz
xor
cmc
cmp
ret
popa
int3
pop
lds
out
lea
push
inc
loopne
in
jl
mov
xchg
inc
or
bound
xchg
jb
popa
test
lret
add
js,pn
sub
subl
cmp
lods
sub
mov
and
mov
sbb
and
mov
sbb
cmp
cmc
sbb
xor
mov
push
push
mov
rcl
out
adc
xor
or
out
push
jmp
dec
mov
shlb
xchg
or
mov
mulb
jno
mov
lock
push
add
lock
ss
xor
imul
rol
pextrw
cmp
mov
test
sbb
pop
mov
cs
popa
and
xchg
sbb
into
lahf
mov
loop
ss
push
in
dec
cmp
rcrl
test
insl
rorl
push
cmpsb
xchg
jmp
lea
ljmp
mov
shll
stos
pop
adc
outsb
ja
test
aaa
mov
shrb
out
mov
lahf
cmpl
push
movsl
inc
hlt
sub
add
scas
jmp
and
daa
cmpsb
add
mov
cmpsb
push
rclb
and
xor
out
icebp
or
push
int3
leave
insb
sbb
pop
mov
daa
pop
pop
fnstenv
xlat
test
cmp
sbb
mov
ret
mov
xchg
int
pop
dec
out
scas
bound
inc
fisubl
cld
data16
in
add
lods
cmp
pusha
js
inc
xchg
sbb
pop
or
aad
jecxz
jp
or
arpl
fcoms
mov
cmp
testl
pop
dec
stos
sbb
in
dec
lret
test
mov
pop
ds
cld
sbb
cmc
dec
cmp
cmp
mov
ret
out
mov
repz
adc
sbb
mov
inc
pop
mov
add
pushf
push
aas
outsb
mov
fstpt
ljmp
jp
mov
popa
mov
add
add
cmp
mov
xor
push
mov
pushfw
push
rcrl
test
sub
insb
mov
idivb
idivb
into
pop
xor
jge
pop
scas
js
fisttpl
fists
outsb
pop
mov
xor
mov
mov
jo
cmpsl
mov
cmpsl
push
fadds
mov
lds
jmp
dec
icebp
sbb
cli
jae
and
dec
cmp
pop
inc
popa
xchg
outsl
inc
mov
add
int
cli
sbb
aam
sbb
add
mov
mov
dec
loop
out
push
xchg
lea
movsb
adcl
nop
shrb
ds
inc
push
mov
push
mov
ja
rclb
in
mov
dec
cmp
arpl
rol
test
jbe
mov
mov
movsb
jecxz
ja
jbe
push
add
and
and
push
scas
inc
andb
in
mov
mov
nop
shrb
clc
mov
outsl
popa
lods
call
xor
mov
std
jo
pop
push
negl
out
xor
orl
out
and
and
mov
push
ud1
mov
fcompl
maskmovq
testl
mov
add
bound
sub
int3
dec
stos
mov
adc
add
pop
add
sbb
jge
lds
iret
or
test
notl
inc
cld
cmp
in
xchg
cli
sbb
icebp
sahf
repnz
pop
in
add
mov
mov
lods
mov
repnz
inc
and
je
push
test
mov
in
filds
xchg
adc
cld
jae
mov
or
adc
inc
xchg
mov
out
dec
pop
or
dec
lahf
xor
insb
rolb
sub
mov
inc
jb
xchg
rol
push
mov
fisubl
je
adc
xor
lods
jmp
sbb
stc
dec
jle
push
sub
mov
cmp
push
mov
dec
adc
call
popl
or
cmpsl
lahf
push
jbe
insl
jge
jle
mull
shll
fistps
mov
icebp
cmc
inc
lds
out
inc
stc
in
xor
in
lcall
mov
sbb
adc
cmovnp
xchg
dec
xor
idivb
jne
lret
mov
pop
and
inc
add
and
pop
push
sbb
dec
inc
and
dec
jg
mov
xlat
pop
dec
fstpt
mov
shl
jae
mov
mov
lods
jle
and
mov
add
xchg
je
jo
stc
inc
dec
in
sbb
mov
push
std
in
stos
jp
scas
stos
int3
pushf
dec
sbb
stos
aaa
mov
push
or
push
or
jp
movsb
xor
sub
push
jo
jle
frstor
push
into
dec
gs
insb
shlb
cwtl
sarl
notl
in
out
mov
leave
and
or
or
push
scas
test
xchg
cltd
fisttpl
loopne
xchg
pop
stos
xlat
adc
neg
xor
inc
out
pxor
jmp
jns
push
xchg
vshufpd
push
push
in
mov
dec
mov
aad
xchg
aam
mov
jns
insl
add
fsubrl
xor
xchg
mov
repz
and
adc
sbb
jns
mov
mov
out
or
sbb
sub
mov
mov
cmp
mov
mov
add
xor
adc
or
xor
les
faddl
or
xlat
jne
xor
shrl
gs
insb
popf
push
jp
rolb
mov
shr
pop
lret
negl
dec
mov
je
and
mov
and
pop
nop
insb
mov
out
repz
js
int3
es
cli
pusha
jns
outsl
add
lahf
inc
sbbl
add
and
dec
bound
scas
jp
inc
in
cmp
pop
leave
pop
inc
fdivrs
ficomps
xchg
sub
xorb
add
lcall
pop
dec
cmc
jne
and
xor
cmpsb
inc
pop
mov
mov
mov
inc
jp
pushl
mov
dec
jmp
pop
inc
fs
mov
aaa
xor
push
dec
cmc
and
sbb
cmc
cmp
sahf
addr16
mov
mov
pop
inc
mov
adc
int3
push
jp
daa
push
popf
arpl
mov
addr16
add
bound
adc
cmp
enter
testb
xor
or
cmp
cmp
pop
dec
xor
repz
cmc
dec
fdivrl
or
test
xrelease
sbb
pop
or
pop
lret
push
std
js
sbb
mov
mov
test
jno
leave
ret
mov
xor
aaa
mov
adcb
cltd
lahf
scas
test
mov
rcrl
xchg
dec
pop
cmpsb
in
andb
lahf
sub
outsl
loop
inc
lock
push
or
mulps
test
subl
xchg
xor
inc
ds
out
popf
jmp
sbb
aas
test
cmp
dec
mov
addr16
loop
insl
add
inc
rol
dec
dec
jae
rclb
dec
scas
arpl
test
out
xchg
addr16
mov
jb
adc
es
inc
cmpsl
jmp
and
and
push
mov
nop
stos
mov
dec
push
outsl
fidivrs
pop
xor
mov
aad
pop
pop
cli
ret
negb
jae
pop
sbb
lods
clc
jae
inc
and
or
push
inc
daa
icebp
in
and
push
pop
insb
bound
mov
push
in
aam
push
push
in
mov
jb
mov
sub
daa
loope
sbb
mov
xlat
inc
fisubrl
add
ficomps
lods
dec
inc
popa
mulb
test
mov
fisttpl
dec
mov
add
cmp
in
ss
xchg
jge
and
adc
mov
shl
jns
mov
ret
adc
fsubl
pop
add
push
lcall
stc
add
xchg
lcall
add
cmpsl
cmpsl
jge
mov
int3
dec
call
mov
loopne
sbb
xchg
hlt
movl
data16
das
fwait
lahf
and
imul
int3
sbb
fistl
jnp
pop
mov
sbb
push
adc
mov
xor
sbb
movsl
jg
add
adc
sub
cld
xchg
stc
je
and
xlat
outsb
bound
js
ret
jecxz
std
js
pop
mov
mov
sub
dec
rcrl
xor
outsl
pop
pop
cmc
mov
dec
enter
push
pop
sub
pop
jb
ss
mov
fstps
int
lret
outsl
in
mov
push
stc
push
int3
bound
stc
and
ds
mov
arpl
jge
xchg
icebp
and
mov
cmc
addr16
lods
sub
popl
xchg
test
mov
jmp
cmp
lcall
add
and
mov
push
xor
popa
pop
cs
pusha
clc
adc
mov
xor
popa
fmul
imul
dec
mov
pcmpgtd
adc
adc
xor
mov
lock
fildl
sbb
rclb
sbb
out
lods
test
ja
pop
mov
int3
inc
pusha
jae
sub
scas
pop
js
push
push
inc
adc
push
movsl
cmpsl
sub
mov
adc
lcall
and
xor
loopne
mov
lods
fdivl
sbb
jp
cmp
cmpsb
aas
push
or
popf
or
out
jb
inc
adc
jnp
call
or
push
test
lods
into
orl
sbb
push
stos
sub
push
add
inc
lret
sub
hlt
arpl
mov
adc
enter
scas
sbbb
mov
jns
enter
lods
call
push
sub
daa
xor
cld
pop
dec
mov
pushf
adc
lods
mov
out
mov
or
inc
push
jb
xor
mov
or
mov
sbb
mov
shrb
jbe
loop
movb
rcrl
cwtl
push
mov
and
fildl
pop
and
inc
imul
xor
je
sub
inc
pushf
andb
mov
jne
mov
cs
inc
cmpsb
sub
or
mov
jae
hlt
jo
pusha
mov
dec
out
loop
lock
ret
movsl
jg
in
jg
add
scas
xchg
mov
jb
lret
mov
push
mov
cli
iret
ret
mov
les
mov
shrl
mov
insl
lock
mov
shrb
ja
sbb
sbb
jp
stc
sub
inc
dec
jnp
xchg
sub
fwait
adc
ds
sub
call
bound
add
pop
into
fdivrl
push
inc
sub
mov
sub
push
xor
adc
std
push
sbb
int3
push
jl
xor
movsl
push
outsl
in
pop
cmp
lret
sbb
insl
lahf
mov
sub
push
lods
nop
jg
fnstsw
or
add
inc
stos
aam
in
mov
and
mov
mov
xchg
cltd
ds
pusha
jmp
addl
das
jmp
pop
ja
cmp
push
rol
repnz
cmpsl
pop
mov
mov
loopne
push
loop
mov
or
xchg
clc
sub
jmp
pop
add
int3
cmpsb
fwait
xor
lcall
pop
jmp
bnd
push
int
js
jnp
testl
out
loop
ja
lret
es
test
dec
xchg
hlt
lods
ljmp
pushf
repz
push
mov
inc
lret
mov
into
je
add
flds
push
jmp
dec
cmp
or
aad
or
out
and
push
mov
rclb
shlb
pop
sahf
decl
dec
sbb
dec
xor
in
pop
fldcw
dec
adcb
out
iret
lds
cltd
je
adc
fwait
lods
sbb
sahf
mov
sbb
js
lds
inc
sbb
xchg
inc
sbb
test
nop
ud0
clc
fidivrl
jge
push
cli
pop
cmpsb
mov
bnd
add
xchg
mov
mov
fisubl
jb
je
and
mov
cltd
and
in
lods
or
cld
xor
xor
pop
ror
push
popf
stc
sti
jnp
cmpsl
mov
fldcw
lret
enter
and
sbb
pop
jne
mov
lret
test
into
adc
les
adc
mov
pusha
sub
fldl
lret
mov
xor
pop
imul
in
jbe
es
adc
push
ljmp
mov
and
nop
lret
std
jecxz
bsr
sbb
inc
pop
push
dec
mov
mov
jae
daa
cli
int3
dec
pop
adc
push
mov
xchg
cmpsl
mov
repz
mov
add
mov
pop
rcr
jl
test
xchg
add
dec
cmpsb
jb
xchg
mov
cwtl
jp
mov
repnz
fldt
add
jns
adc
mov
scas
xor
cltd
gs
inc
sub
jbe
cmp
dec
lods
and
out
test
jb
sub
push
pop
push
dec
jb
dec
pop
ficoml
subl
mov
dec
jne
insb
mov
or
jle
lods
jbe
and
out
push
ficoml
xor
in
xchg
jle
ret
test
pop
sbb
data16
ss
push
jno
out
rol
inc
test
test
jne
push
out
add
push
mov
mov
pop
ss
mov
lcall
push
mov
lock
add
mov
jne
inc
mov
addb
dec
mov
pop
insb
rcrb
out
xchg
test
pop
mov
adc
jb
leave
mov
arpl
loop
in
aaa
dec
arpl
rclb
xchg
inc
cmpsl
jg,pt
inc
fadds
inc
stos
sbb
loop
jno
insl
mov
or
stos
out
pop
lahf
sbb
or
pop
inc
out
stos
adcb
jmp
sbb
fs
and
dec
shll
add
jp
pop
loope
test
imul
icebp
loope
pop
dec
and
hlt
ja
jmp
adc
add
sbb
push
arpl
sub
sqrtps
mov
test
repz
push
ja
push
push
jp
ds
xchg
lahf
negl
jle
xchg
and
xchg
adc
mov
xlat
ljmp
mov
addr16
mov
scas
jbe
stc
iret
loopne
dec
push
push
fdivs
adc
inc
fstpt
sahf
sbb
adc
aad
xchg
in
push
sti
jae
xlat
jns
rolb
test
lock
mov
lds
xorb
sbb
mov
push
jecxz
imul
mov
mov
pop
rcll
lahf
fcomps
lods
or
mov
lret
fwait
push
fidivl
pushf
jmp
call
pushf
std
outsl
outsb
jbe
outsl
push
add
xor
and
mov
xchg
jnp
test
stc
addl
or
and
push
sbb
sub
push
adc
shl
fldl
inc
push
pop
push
jge
dec
sub
pop
xchg
imul
add
mov
mov
fwait
mov
insb
aaa
in
push
cmp
hlt
loope
sbb
test
test
xchg
insl
mov
xchg
mov
enter
cmc
in
mov
pop
out
and
mov
sbb
popa
mov
jae
incb
outsl
add
orl
sbb
lds
ret
sub
clc
shlb
xor
cmpsb
out
jmp
ret
dec
jns
and
sbb
test
cltd
xor
adc
aam
aaa
push
out
popf
stc
inc
mov
lds
xor
es
imul
popf
lods
xchg
std
adc
mov
or
repz
fwait
arpl
add
pop
imulb
dec
jge
out
inc
pop
xor
jae
pop
push
xorb
or
mov
in
pop
bound
scas
mov
push
inc
test
int
push
dec
jne
jo
jge
xor
mov
jg
mov
cld
cmp
das
push
sub
jo
dec
mov
bound
pop
aaa
mulb
lea
dec
cmp
sub
insb
adcl
xchg
jp
inc
sub
cmp
es
jl
das
mov
push
es
aaa
out
mov
scas
and
push
or
stos
xor
sbb
xor
es
mov
add
inc
mov
pop
movsl
and
mov
sbb
lock
jg
into
imull
xchg
jge
lea
push
je
out
mov
xchg
jle
daa
mov
cltd
xor
lret
push
inc
push
out
dec
add
add
insl
xor
leave
pop
jle
movsb
mov
cltd
mov
jmp
fcomip
adc
jb
adc
jbe
or
xor
add
or
lcall
mov
das
xor
outsb
sub
adc
sbb
repz
sbb
adc
xchg
jns
popf
add
add
in
mov
fsubs
adcb
and
cld
mov
or
jbe
jg
fimuls
mov
fistl
stos
mov
pop
push
jns
sub
mov
pop
clc
test
mov
push
mov
fstps
adc
enter
cmp
stc
pop
cmp
mov
rorb
cmp
xchg
or
lds
sub
testb
mov
cli
and
aas
out
dec
xchg
sub
add
pop
aam
int
cmc
out
sub
data16
adc
fildl
pop
shll
mov
xor
dec
ds
dec
bound
and
add
cwtl
mov
jmp
jae
shlb
fs
xchg
decl
or
lods
jmp
aaa
jecxz
mov
push
sbb
insl
pop
push
ljmp
cmc
aam
add
sti
sub
xor
rcrl
insb
jae
mov
inc
sbb
sarb
stos
daa
mov
enter
gs
inc
ret
adc
leave
sbb
cmp
dec
pop
mov
add
push
lret
jbe
xchg
xor
repz
cmp
inc
testl
add
pop
popf
mov
shlb
cmpsb
push
fmuls
mov
addr16
and
or
enter
add
jb
push
sbb
xor
push
cmc
jle
dec
cmpsl
jae
and
stc
adc
jl
inc
scas
push
call
icebp
jnp
cmpsb
lock
out
sbb
es
add
cmp
and
or
mov
cmp
sbb
sbb
cs
sub
repnz
pop
icebp
daa
jnp
sub
lret
icebp
adc
and
cmpl
mov
stos
stos
dec
nop
dec
sbb
in
xchg
add
jg
mov
adc
out
fsts
hlt
or
jne
and
out
xchg
push
aaa
add
jl
mov
jge
or
adc
sub
pop
js
mov
fdivs
xrelease
xchg
sub
pop
jmpw
inc
xchg
lods
adc
enter
mov
fimuls
rorb
aam
mov
add
clc
push
or
jnp
xchg
mov
leave
imul
or
jne
loope
and
sbb
sahf
pop
jecxz
sub
out
add
dec
scas
mov
push
pop
mov
mov
cmp
dec
cmpsb
ret
jb
and
imull
clc
dec
adc
and
sub
bound
add
mov
fwait
xor
in
sti
sbbb
inc
ljmp
pushf
loope
sub
bound
mov
and
push
sub
jns
and
lds
sti
inc
pushf
cmpsb
out
xor
loopne
popa
lock
iret
sub
popa
jno
push
jge
loopne
jne
imul
cmpsb
mov
subl
fstpl
lds
mov
sbb
add
xlat
fwait
fs
out
mov
negb
lret
mov
hlt
in
das
cli
in
dec
movsb
mov
roll
sub
shll
xor
mov
loop
cmpsl
rcrl
inc
mov
jmp
sbb
sub
inc
sahf
loope
les
inc
and
jno
lcall
into
ja
push
mov
adc
inc
pop
das
dec
sbb
push
adc
lcall
inc
dec
adc
jnp
lcall
and
cmpsl
sbb
setg
inc
cmp
in
push
scas
pop
mov
push
mov
push
push
daa
inc
gs
push
pop
lds
sahf
testl
shrb
subb
das
jno
or
data16
dec
xchg
sbb
fsts
mov
lcall
pop
pushf
lods
aaa
mov
mov
pop
pop
das
sub
or
adc
arpl
jbe
mov
inc
pop
inc
push
sub
xchg
fisubl
push
cmp
in
sub
pop
imul
shrb
push
sbb
mov
pop
test
xchg
icebp
pop
add
les
std
in
xor
insl
ss
ljmp
cld
add
dec
xchg
cs
jo
lret
jno
int
adc
add
je
aam
icebp
xchg
pop
xor
bound
or
addr16
xchg
scas
int
addr16
dec
lret
sub
and
popa
lock
test
jb
cmp
dec
dec
mov
cmp
ret
xchg
cmpsl
sti
stc
mov
xchg
sbb
xchg
mov
stos
imul
xchg
sub
adc
not
cmp
bnd
sbb
xchg
lods
mov
fucomp
into
pop
scas
das
scas
pop
mov
add
mov
or
ljmp
fisttps
in
and
xor
faddl
or
inc
xor
xor
jo
test
jbe
cwtl
test
sub
fxch
arpl
pop
sub
jno
aad
jne
xor
and
jne
pop
inc
rep
xchg
add
push
arpl
mov
loope
scas
xchg
fistpll
xchg
sub
call
je
sahf
ss
xchg
fbstp
xlat
mov
mov
scas
adc
nop
mov
clc
in
lods
dec
loope
dec
daa
ret
mov
pop
xchg
mov
movsl
stos
mov
loope
xor
mov
sbb
pusha
push
sbb
jne
add
fwait
mov
out
add
mov
mov
dec
jecxz
add
cmp
out
inc
lea
rcrl
sub
inc
movsb
dec
xchg
or
movsb
cmpb
daa
mov
cmp
dec
push
mov
aas
push
cli
ror
data16
pop
cmp
mov
hlt
push
push
testl
in
and
fildll
xor
loopne
das
movb
jae
sub
xchg
popa
rcrb
test
xchg
adc
shrb
mov
sti
out
xchg
inc
movsb
loopne
orb
or
cld
in
dec
lcall
or
sbb
dec
push
adc
lea
or
test
call
inc
pop
sub
lcall
rorb
dec
dec
mov
sub
cltd
dec
pop
cwtl
jns
loopne
xchg
sbb
jmp
lds
je
aam
cmpsl
loop
mov
jmp
sbb
cltd
dec
jl
ss
dec
movsl
pop
mov
mov
sarl
add
push
stos
repnz
js
loope
pop
or
pushf
mov
dec
adc
movsl
icebp
mov
dec
xchg
add
enter
out
sti
pop
popf
mov
popf
xor
loop
lret
jecxz
push
fimuls
pop
scas
jne
add
fmull
and
outsl
fs
mov
mov
cmp
jecxz
rep
lret
sub
mov
push
fmull
mov
or
popa
adc
adc
int
test
pop
jecxz
shll
dec
add
dec
imulb
add
mov
or
mov
les
rorl
mov
popf
inc
fcmovne
into
pop
adc
leave
pop
std
inc
pop
and
lret
inc
pop
scas
pop
cmp
and
jno
aaa
sub
fs
inc
lcall
dec
mov
out
inc
repz
xchg
xor
mov
dec
cmp
dec
out
bound
mov
fmull
in
and
dec
lret
mov
jne
jmp
cmp
dec
mov
pushf
xor
pop
test
dec
push
push
inc
movsl
or
inc
or
in
and
jmp
pop
sub
or
jmp
movsb
repz
cmpb
fdiv
push
or
mov
mov
sub
sbb
popf
lods
sub
out
adc
in
cmp
dec
jno
xlat
fstps
jns
divb
mov
mov
xlat
mov
test
add
mov
jns
sub
jecxz
call
pusha
std
lods
ljmp
jmp
sbb
ds
dec
and
cmpsb
mov
xchg
add
leave
xchg
das
adc
jge
in
jp
fwait
or
jecxz
push
inc
outsb
push
jmp
jne
out
lods
and
ss
xor
mov
inc
and
sbb
dec
lcall
jo
ja
iret
fdivl
xchg
sbb
in
lcall
dec
fmul
int
pop
push
rcl
inc
inc
stos
mov
jp
lods
fsubr
jnp
lods
mov
shr
mov
cwtl
das
ljmp
fdivr
mov
and
push
fs
or
mov
icebp
pop
hlt
and
les
mov
pop
mov
add
aas
stos
cltd
fs
cmp
push
mov
fstpl
jmp
cmpsb
lea
sbb
dec
cmpsl
addr16
aas
roll
pushf
insb
sarl
nop
mov
int
or
aas
mov
pop
or
cli
fwait
arpl
pop
hlt
pop
inc
pusha
divl
out
xchg
xchg
in
loop
xor
pop
data16
push
xor
outsb
pop
ja
inc
arpl
mov
adc
test
adc
sub
or
and
imul
arpl
lahf
imul
push
and
out
push
push
cld
lcall
in
inc
daa
sub
lods
pop
imul
or
clc
test
dec
xchg
sub
push
cmpsl
out
aad
inc
filds
xchg
movsl
sub
jp
insl
mov
sbb
and
cmp
lret
add
dec
pop
fs
pushl
push
xor
inc
icebp
mov
enter
cmp
cld
imul
insb
pop
xor
cmp
icebp
xchg
sbbb
scas
cmpsl
xor
cmpsl
into
cmp
or
cmp
test
dec
add
push
test
mov
sahf
mov
mov
jno
adc
xchg
cltd
aam
xorl
stos
pop
cli
cs
insl
sti
cmp
rcl
stos
jmp
cmp
dec
clc
mov
cmp
scas
sbb
dec
add
enter
adc
repz
ja
or
stc
inc
std
or
lods
inc
push
test
xor
outsl
loop
jecxz
push
pop
inc
adcl
loopne
mov
inc
xchg
xchg
inc
pushl
xor
out
hlt
cmp
stos
push
test
mov
test
movsb
and
rorl
add
cs
mov
mov
mov
add
add
imul
movsl
out
mov
xchg
hlt
adc
push
push
incl
add
dec
push
movsb
dec
xchg
mov
xchg
std
movsb
outsl
push
xlat
and
push
rol
fstl
es
lret
leave
and
cld
dec
subb
aas
mov
xor
icebp
pop
jl
sbb
js
or
jg
dec
call
bound
sahf
cmc
fstpl
arpl
cmp
mov
mov
mov
xchg
ljmp
in
xchg
add
insb
js
fdivrl
push
cmp
push
push
dec
dec
testb
sbbl
popf
pusha
stos
incb
xor
fcompl
add
sbb
sub
sbb
mov
test
mov
push
imul
pushf
or
and
mov
push
ljmp
mov
xor
jp
fstpl
notb
dec
fs
into
popa
inc
pop
daa
bound
call
sbbb
add
fucomip
dec
arpl
mov
cwtl
push
pop
mov
imul
int3
or
sbb
cmpsb
pop
pop
adc
and
in
dec
enter
out
adc
insl
dec
add
mov
jg
pushf
xor
mov
jae
mov
sbb
add
fnstcw
ret
test
jp
mov
rcrb
loop
push
cmp
add
cltd
cli
dec
ret
sub
andl
aas
stos
sub
popf
and
std
dec
add
jb
bound
mov
int3
sbb
jl
push
sbb
lock
shrl
lea
lret
cmp
data16
push
shl
cmp
loope
mov
lret
sub
sahf
mov
stos
sbb
lods
lea
xor
scas
xor
push
inc
or
outsb
stc
inc
lret
and
stc
test
int
mov
adc
bound
mov
add
jp
sbb
cmpl
mov
ds
push
mov
movsl
in
jg
adc
lret
xchg
push
push
je
shlb
cmp
scas
mov
pop
mov
in
jecxz
data16
call
push
jecxz
dec
xor
mov
pusha
icebp
out
xlat
repz
xacquire
xchg
dec
mov
orb
bound
iret
in
or
in
xchg
nop
cmp
mov
pop
adc
loop
stos
mov
xchg
stc
shll
cmp
jle
loop
clc
inc
gs
sbb
shlb
shll
fisttpl
cltd
sti
fiaddl
loopne
jno
insb
cld
inc
xchg
push
into
ret
and
leave
dec
repnz
pusha
gs
mov
dec
imul
mov
xchg
pop
jp
outsl
mov
mov
mov
mov
dec
mov
inc
imul
test
sbb
or
daa
lea
push
adc
xchg
lahf
cmp
outsl
test
imul
subb
inc
inc
loopne
jmp
cmp
push
push
xlat
aas
inc
pop
mov
in
sbb
mov
shrb
mov
mov
shlb
enter
fistpl
mov
popa
mov
push
push
repz
xchg
mov
outsl
cmp
outsl
lret
pop
dec
push
idivl
fwait
sub
or
in
jbe
in
int
lret
mov
loop
andb
mov
stos
lahf
push
mov
dec
jg
insw
mov
sbb
xor
stos
lahf
test
sub
cltd
sub
clc
or
test
jle
lcall
push
push
sbb
aas
inc
mov
or
int3
inc
pop
int
in
insl
gs
bound
xlat
outsb
add
jbe
movsl
and
scas
cld
scas
or
andl
cltd
test
jecxz
push
in
int3
push
dec
cli
loopne
int3
fisttps
test
xchg
cs
out
and
out
pop
lahf
icebp
data16
loop
jle
mov
or
pop
pop
mov
arpl
ficoml
adc
das
adc
and
lods
fdivr
jae
or
cmpsl
ds
jno
jbe
aaa
jae
enter
push
lcall
in
std
dec
push
xor
push
out
movsl
xchg
jle
es
sub
loopne
outsb
adc
cmp
inc
add
xchg
out
push
sub
add
cmp
push
inc
rcl
inc
incb
sbb
and
pop
cmp
jnp
jne
xchg
sub
inc
pop
cmpsb
inc
sub
inc
je
sub
add
aam
sbb
xchg
outsl
mov
fdivr
popf
mov
sbb
sub
and
shll
in
sbb
jg
mov
shll
xchg
push
mov
out
aas
imull
xor
xchg
mov
dec
loop
mov
inc
push
or
push
movsl
out
mov
dec
gs
sbb
lea
mov
fwait
mov
arpl
xchg
scas
les
xchg
rorb
push
xchg
outsl
loope
shlb
add
and
popf
xor
xchg
lods
addb
xchg
xor
enter
and
mov
aam
jno
clc
inc
subl
insb
faddl
fsubrs
dec
test
movsb
xchg
idivl
in
or
xchg
add
sub
js
jmp
xor
push
jb
push
push
ljmp
jl
pop
add
add
dec
pop
mov
mov
pushf
xchg
xor
ljmp
xchg
into
je
je
popa
jp
xor
add
adc
xchg
in
inc
push
shlb
or
ja
das
jg
stc
int3
sbbl
xor
cmp
test
loop
lods
pop
popl
sub
jb
dec
dec
adc
fs
sbb
inc
stos
insb
sarb
lea
xchg
lret
inc
popa
stos
pop
mov
inc
jmp
mov
mov
pop
outsb
cmpb
icebp
push
cmpsb
push
sahf
jns
das
adc
mov
add
and
sahf
test
mov
mov
xlat
push
xchg
sub
pop
jnp
jp
je
adc
xor
cmp
rorb
or
into
shlb
sub
js
int3
popf
fldl2t
push
mov
pusha
fs
popa
sar
out
clc
mov
test
mov
inc
es
pop
lcall
mov
or
adc
shrl
out
sahf
cmc
push
cmp
sub
orl
xchg
adc
hlt
lret
jns
loope
sbb
jg
les
add
popf
sahf
mov
xchg
xchg
jbe
sarb
mov
pop
jmp
push
int3
jmp
add
sbb
fdiv
outsb
jle
ret
and
lods
arpl
stos
insb
jg
movsb
pop
cmc
aad
adc
rcrl
push
dec
add
lds
movsb
cmp
sahf
lods
mov
jbe
mov
dec
pop
fdivrs
in
int3
sub
cwtl
fcomip
dec
jmp
cmp
imul
push
loop
std
dec
pop
ds
cmpsl
outsl
cmp
add
cmp
inc
pop
fwait
shl
test
insl
mov
push
push
imul
push
add
sbb
xchg
sub
aam
divl
lock
xchg
ljmp
rcll
ret
fwait
jl
inc
mov
repnz
jbe
ja
xchg
push
cwtl
enter
stos
xlat
mov
ret
jmp
pop
imul
iret
ljmp
subb
push
aas
adc
pop
mov
xlat
arpl
dec
mov
insb
cmp
sbb
dec
cmp
enter
ret
dec
dec
dec
out
insb
dec
fmul
mov
loope
add
nop
sbbl
xchg
pop
in
pop
insb
inc
adc
movsb
cmp
mov
xor
push
push
dec
loopne
stc
addr16
loop
xor
or
nop
jle
testl
cli
icebp
ror
es
jmp
cmp
ds
cmp
repz
cmp
cmp
sub
add
sbb
insl
add
addr16
out
out
mov
inc
std
movsb
mov
gs
in
nop
sarb
pop
ja
add
or
sahf
sbb
adc
pop
addl
xor
xor
shl
push
push
ds
dec
icebp
dec
dec
aad
xchg
add
js
iret
pop
inc
sbbb
popa
and
mov
in
jle
mov
sbb
ds
sub
sub
mov
jmp
mov
push
sub
shr
pop
jb
movsb
arpl
popa
std
xchg
cli
je
add
es
test
xor
and
ljmp
push
test
sbb
lcall
sbb
hlt
sbb
hlt
rcrb
add
fistl
inc
inc
xor
push
cmp
mov
into
ret
loop
or
movsl
cmp
cmp
and
sbb
popf
je,pt
inc
xchg
jne
jnp
icebp
es
mov
dec
ret
inc
jmp
pop
cmp
int
cmpb
jne
in
jp
lret
or
fistps
jns
scas
aaa
jle
mov
lcall
cmpsl
sbb
scas
popf
cli
adc
mov
dec
mov
jecxz
lods
dec
and
sbb
bound
push
jbe
or
leave
fsubrl
inc
fsub
cld
jg
ja
pop
ss
adc
imull
add
int
lea
cmpb
roll
jmp
mov
pushf
shl
sub
inc
stos
mov
sbb
mov
mov
pop
std
and
adc
sbb
stc
jnp
dec
xor
cmp
test
lret
xchg
test
outsb
pop
mov
inc
and
faddl
sbbl
pusha
xlat
cltd
movsl
loope
push
mov
pop
in
jg
enter
sahf
adc
or
mov
jecxz
cmp
repz
sub
push
mull
cld
jp
pop
fmulp
addr16
leave
je
fisubl
fwait
xchg
push
sbb
and
push
dec
inc
push
std
mov
jmp
or
mov
les
xor
addr16
sahf
sbb
xchg
sub
mov
scas
inc
repnz
outsl
sub
in
xor
xor
mov
push
dec
loop
dec
icebp
mov
cs
pop
test
mov
cmpsb
shlb
std
pop
es
push
out
add
mov
notb
mov
xchg
mov
mov
mov
jno
xor
clc
fbld
jb
mov
frstor
mov
pushf
dec
gs
push
out
xchg
mov
cmp
pop
test
or
push
or
faddl
aas
mov
shlb
rolb
push
scas
movsb
pushf
xor
sti
les
scas
jo
std
xchg
call
and
mov
dec
adc
mov
mov
int
cld
pop
push
dec
dec
jae
divl
xor
pop
mov
inc
mov
jb
mov
xchg
lret
test
xchg
jb
cmp
add
mov
ss
push
xor
pop
ss
lea
mov
jo
outsl
pushf
lea
scas
adc
xor
ja
push
pop
mov
test
and
test
pop
adc
cs
inc
inc
mov
cld
js
sbbl
add
mul
lock
pusha
add
es
fwait
mov
sti
mov
jae
das
jne
pop
fistps
mov
mov
xor
loope
clc
push
mov
imul
bound
mov
aad
ds
repz
daa
jmp
in
js
pushl
rep
jb
xchg
lods
sbbl
call
mov
push
adc
xchg
repnz
jg
test
iret
adc
or
xchg
jle
push
jno
lahf
mov
mov
mov
fnsave
cmpsl
sbb
cld
xchg
dec
lea
mov
sbb
mov
out
mov
je
mov
add
jge
sub
xchg
shll
movsl
cmp
movsb
cli
les
addr16
mov
loop
mov
iret
lcall
inc
push
cwtl
js
mov
mov
mov
insb
mov
repz
jecxz
mov
sub
push
mov
or
xchg
lret
sti
repz
fwait
cmp
mov
imulb
or
aas
adc
inc
out
addr16
in
cmpsb
lret
push
inc
rclb
in
bnd
mov
sbb
push
scas
mov
popf
xor
mov
test
aaa
push
arpl
ss
push
push
in
test
and
mov
lds
jbe
insl
dec
dec
outsl
pushf
fsts
jnp
jp
popf
out
into
mov
test
cld
or
stc
dec
jecxz
fstps
ret
adcl
ret
shr
dec
cmp
nop
mov
ret
xor
cwtl
cmp
into
add
inc
cmp
lds
imul
add
pop
notl
aaa
test
in
jge
mov
popf
mov
pushf
lods
xchg
mov
mov
ljmp
fmuls
and
popa
pushf
or
push
or
adc
mov
leave
mov
ja
lock
inc
lock
and
lahf
xchg
ds
mov
adcb
sbb
inc
sbb
mov
push
sub
je
mov
fisttps
shll
sbbl
mov
iretw
xchg
mov
mov
aad
mov
test
and
and
pop
xlat
cmpsl
cmp
fisttps
mov
jnp
sub
xor
push
pop
aaa
out
lcall
mov
in
sub
subl
out
cmc
sbb
imul
int
push
outsl
pusha
jns
inc
fimuls
mov
push
push
shl
sbb
cmpsb
outsb
and
pop
lods
jae
inc
mov
ret
xor
call
out
outsl
loop
mov
and
sub
stos
test
aaa
pop
adc
jb
jp
les
fsubrl
popf
lahf
sahf
mov
jo
and
out
sub
jb
mov
popf
inc
jecxz
es
rcrl
fs
int
sbb
add
add
fistl
stos
and
inc
rcll
and
sub
xor
sbb
inc
std
push
pusha
fists
jle
mov
and
jmp
fs
nop
out
cmpsl
rcll
je
push
arpl
dec
sbb
inc
es
jno
and
mov
fmull
lods
lds
push
cmp
inc
les
pop
aam
add
push
aas
inc
fbld
in
ficoms
mov
gs
test
push
xor
mov
aad
xchg
arpl
dec
or
sub
jmp
call
scas
cmp
sub
out
and
adc
inc
cmp
es
stos
and
adc
or
mov
add
pop
insl
jl
subl
ret
push
mov
in
jmp
jnp
iret
sub
cmp
aas
shl
cmp
movsb
jle
shll
out
or
push
sbb
fdivl
fisubl
sbb
mov
add
cli
xor
ss
xorb
jbe
sbb
sbb
cmc
sbb
jnp
outsb
sub
cmpsb
nop
lods
xlat
jp
aad
xrelease
fnsave
fisttpl
xor
mov
pop
mov
aad
mov
fidivl
push
sub
xlat
outsb
sarb
cmc
xor
rclb
mov
lret
stos
mov
jne
inc
js
out
add
mov
in
push
mov
mov
insb
jb
sbb
cmp
out
test
lret
iret
push
pop
xchg
arpl
fwait
cmpsl
lea
into
mov
inc
int
stc
outsl
loop
sahf
xor
loope
outsb
sahf
dec
dec
jl
insb
daa
ret
dec
fcomps
jecxz
jae
cmp
movl
jle
jp
cmp
cmp
shlb
cmp
dec
aaa
add
shll
sub
mov
addr16
stos
stos
dec
lock
in
shl
jle
jbe
out
xchg
mov
fnsave
or
mov
xchg
subl
insl
dec
andl
mov
fisubrs
sub
pop
popa
mov
repnz
sbb
inc
pop
scas
aaa
push
jae
lcall
aas
call
out
repnz
and
cmp
cmp
cmp
fmuls
fs
es
xor
cmpb
das
sar
dec
add
sbb
add
popf
loop
add
push
jle
push
jle
gs
insl
jge
aas
lock
inc
fadds
aas
xor
insb
loop
lods
or
adc
mov
das
add
pextrw
mov
imulb
adc
xchg
sahf
pop
adc
in
mov
mov
lret
inc
lods
fldcw
adc
stos
les
add
lea
and
test
xchg
cltd
mov
fwait
add
icebp
or
sahf
sbb
in
shr
push
sub
adc
mov
sbb
inc
rcrb
leave
pop
adc
das
fsubrl
loop
movsl
jb
jmp
jmp
leave
or
push
pushf
push
cmp
add
adc
push
jne
or
call
hlt
xor
mov
ret
in
xchg
scas
std
cmpsb
adc
in
jb
and
imul
icebp
insb
adc
dec
loop
jno
xchg
aaa
dec
out
popf
mov
inc
fimuls
mov
aam
loope
lock
insl
lcall
pop
jbe
loopne
lcall
dec
push
hlt
out
test
pop
loop
inc
mov
lretw
xchg
xchg
mov
and
outsb
fs
jl
sti
lahf
lods
jns
and
fsubl
jle
mov
and
add
inc
mov
sbb
mov
jb
shl
xor
loopne
or
andl
push
and
pop
dec
mov
or
test
or
jecxz
movsb
jnp
aam
inc
push
cli
mov
mov
mov
mov
push
sub
repz
and
decl
lea
sub
xor
adc
push
mov
mov
sub
push
sbb
mov
fwait
negl
daa
std
lods
sbb
nop
sub
jno
scas
cmp
or
pop
out
popa
nop
pop
adc
push
ja
mov
out
and
mov
nop
adcb
xchg
push
fcoms
jmp
mov
sbb
into
add
fnstsw
js
ds
gs
mov
dec
lret
loope
lods
jbe
filds
xchg
out
movsb
push
push
insb
insl
iret
cmpsl
les
mov
jb
inc
sub
dec
loopne
adc
inc
mov
pop
out
push
repz
stc
test
dec
jp
call
mov
lods
sbb
insb
mov
loopne
mov
inc
adcl
push
dec
shrl
push
daa
xor
lea
in
mov
xchg
mov
push
mov
fwait
jmp
adc
stc
nop
xchg
cmc
cmp
shl
pop
loop
mov
lods
inc
or
aaa
pusha
pop
sbb
mov
sub
pusha
jl
dec
add
add
inc
ficoml
movb
xor
xlat
mov
ficomps
ror
or
and
xchg
lea
daa
ds
fdiv
jns
and
xchg
cs
xchg
mov
fmuls
mov
cmp
push
nop
daa
loopne
aaa
xchg
scas
call
mov
cmpsb
shrb
subb
ret
mov
dec
bound
divl
or
jl
adc
xor
inc
or
daa
or
pop
out
jl
lds
sbb
pop
dec
data16
xchg
cmp
xchg
sub
sub
lock
insb
in
push
cltd
daa
jle
or
lcall
cli
xchg
and
mov
dec
mov
mov
lea
fcoml
mov
mov
addr16
push
pop
adc
cmc
loopne
ret
dec
add
adc
out
or
mov
scas
call
inc
sub
fsubs
rcll
call
icebp
clc
and
movsb
cs
ficomps
pushf
pop
loop
mov
push
mov
inc
push
jmp
in
inc
loop
jb
sahf
and
lahf
mov
fsub
fnsave
mov
adc
inc
xor
iret
cld
fisubrs
cmp
cmp
loop
mov
mov
enter
mov
mov
mov
xor
aad
push
dec
cmp
in
fiaddl
in
mov
sbb
js
pop
js
lods
lea
leave
loopne
repz
xlat
sub
dec
dec
xor
jns
sub
fcmovb
lcall
cmc
cmp
pop
cmp
stos
out
dec
push
xor
mov
jp
adc
cmp
xchg
out
adc
pop
ret
jle
push
dec
jecxz
mull
in
push
jae
xchg
fmul
push
inc
cmp
inc
insl
in
mov
out
mov
ret
in
outsb
inc
mov
in
jge
std
nop
popf
cmp
in
mov
test
cs
jg
mov
jo
repnz
inc
and
in
pop
sarl
into
andl
cmp
fwait
xchg
aad
or
adc
arpl
std
fucomi
mov
sbb
xor
popf
mov
sub
mov
and
fwait
mov
lahf
cmp
sub
in
jg
lds
repnz
pop
xchg
adc
sahf
xchg
jb
or
mov
test
sub
pop
push
testb
jle
imul
mov
sbb
and
mov
mov
mov
jne
lret
imul
xorl
test
icebp
or
mov
and
ret
repz
out
insl
pop
push
lcall
fcoml
mov
push
rclb
loope
add
inc
aaa
movsb
loopne
jecxz
xor
or
jge
dec
das
sub
pop
sbbb
mov
orl
cmp
sarl
in
rcrb
pop
and
aas
fbstp
xchg
lea
fdivr
push
jnp
cld
jmp
mov
sub
jb
out
ret
in
sbb
or
jnp
mov
xchg
or
sbb
dec
cwtl
sbb
test
cs
shrb
dec
pop
pop
mov
mov
movsl
in
cmpsb
call
loopne
push
outsb
mov
xor
aam
test
sahf
and
cltd
js
ret
leave
test
push
daa
setnp
addr16
jb
fmull
push
adc
ss
xlat
rol
loopne
dec
mov
jnp
dec
ja
mov
outsl
jge
jno
adc
ja
js
aam
daa
incb
sahf
pop
lret
dec
outsl
jns
and
sbb
cmc
jnp
out
push
and
sbbb
pop
or
mov
adcb
push
adc
lret
fnstsw
sub
push
inc
es
rorb
dec
cli
std
pop
aaa
bound
adc
and
and
xchg
or
adcl
mov
jle
arpl
call
nop
pop
push
mov
mov
adc
repz
mov
scas
cmp
push
loope
data16
and
je
mov
sbb
dec
mov
adc
sub
cmp
test
pop
daa
bound
push
cmp
pop
je
mov
subps
jb
lds
loop
jle
mov
out
xchg
lods
dec
fwait
pop
hlt
outsb
push
mov
adc
pop
add
sarl
add
std
sbb
mov
fdivp
pop
call
mov
xlat
mov
and
add
push
push
cmp
imul
gs
mov
fs
mov
add
stos
lea
sarb
scas
sub
mov
pop
inc
xor
bound
mov
data16
call
cmp
push
and
out
in
jo
xchg
mov
jb
inc
std
into
sbb
fnsave
jo
fiaddl
movsl
cmp
loope
lret
adc
cmp
cmp
xor
fwait
les
add
outsl
gs
adc
mov
add
sbbl
mov
jbe
sbb
arpl
je
push
daa
jmp
lea
imul
inc
lahf
dec
pop
lret
test
adc
fsubrl
enter
or
xchg
add
sbb
shrb
dec
enter
jg
outsb
lret
jmp
push
cli
mov
fiadds
or
xor
cmpxchg
jge
mov
xor
sarl
and
neg
repnz
fisttpl
adc
test
inc
fsubrs
rcll
out
ret
pop
repnz
pop
ds
xchg
jnp
inc
add
jbe
movsb
mov
pop
mov
roll
loop
imul
repnz
lret
add
insb
orb
or
lcall
inc
es
ds
cmpsb
dec
mov
out
push
mov
in
mov
add
pop
adc
popa
mov
mov
pop
imul
loop
or
movsl
dec
mov
aad
pop
xor
fnstcw
mov
sub
nop
dec
jge
and
pop
mov
inc
aad
cmp
inc
loop
sti
das
mov
shlb
inc
or
push
imul
mov
xor
push
xor
outsl
mov
mov
movsl
and
push
je
xchg
and
cmpsb
and
loopne
inc
adc
pusha
xorb
dec
pop
pop
ss
imul
jbe
pushf
or
fidivrs
lea
idiv
lds
dec
shll
adc
mov
shrb
enter
out
or
gs
push
in
inc
push
cltd
inc
into
sbb
sbb
fs
xor
test
shlb
daa
jnp
xchg
lods
dec
pop
cmp
inc
xchg
testl
cli
pushf
inc
flds
add
sbb
std
pop
mov
lea
jno
dec
stc
addr16
push
inc
mov
pop
xor
lcall
xchg
scas
jge
and
push
jp
jle
pop
dec
fisttps
lock
movsb
imul
jne
jb
mov
repnz
sbbb
rolb
or
stos
mov
mov
push
xlat
sub
cmp
arpl
out
or
fidivs
xor
mov
adc
dec
mov
push
dec
push
adc
adc
jl
mov
int
push
push
push
icebp
push
jbe
sbb
test
lahf
jl
jnp
mov
cmpsb
dec
in
gs
pop
std
and
sti
inc
jns
jmp
or
and
pusha
fdivp
imul
mov
xor
pop
mov
mov
mov
or
mov
daa
and
jp
inc
rcll
stos
xchg
inc
mov
loopne
adc
enter
mov
add
push
mov
push
mov
scas
lock
subb
mov
adc
dec
lahf
nop
inc
mov
mov
loopne
dec
adc
xchg
push
lods
mov
popf
inc
adc
jns
and
xor
jne
lcall
xchg
sbbl
popf
or
js
mov
mov
fcmovbe
insl
sbbb
push
js
sbb
lcall
adc
mov
stos
jb
test
inc
jne
cmp
pop
and
push
fisubrs
fwait
push
cmpsb
or
out
xor
cmc
inc
stc
rcrl
ret
jp
or
outsl
lea
mov
std
insl
sub
dec
aam
pusha
sub
outsl
in
popf
xor
repz
jp
fs
cld
xchg
pop
addb
das
cli
mov
insb
sub
gs
popf
cmc
dec
mov
add
mulb
xchg
aas
arpl
sahf
pop
xor
shlb
cld
testb
es
outsl
and
cmpsl
pop
cmpsl
mov
cli
aam
fwait
std
decl
mov
and
xchg
data16
fnstcw
pop
and
into
mov
lret
cmp
add
sub
fcompl
dec
inc
lret
int3
jg
push
sbbl
neg
jbe
rcrb
inc
call
or
cmpsl
das
stc
es
ljmp
dec
fucom
addr16
ja
inc
xor
in
jns
out
js
and
push
sub
shrb
mov
in
pop
loope
icebp
aas
pop
lods
inc
popa
aad
arpl
xchg
in
add
insl
add
popa
or
add
mov
push
sbbb
std
iret
fs
aas
lock
lahf
test
sbb
cld
adc
mov
sahf
shrl
repnz
loopne
ljmp
cli
fdivs
dec
cmp
fwait
dec
mov
pop
push
mov
mov
xchg
cs
jp
lds
dec
pusha
jp
clc
lcall
or
push
outsb
pop
outsb
mov
push
jo
inc
inc
jmp
fcos
and
mov
xchg
andl
stos
jmp
push
loope
jno
mov
pop
and
cli
mov
jmp
mov
std
cs
jmp
cmc
sbb
mov
sbb
ret
ss
addr16
ja
xorb
jmp
adc
aaa
das
lds
dec
jecxz
cmp
pop
adc
pop
stc
sub
sbb
inc
push
dec
gs
push
or
mov
sub
fcmove
shr
repnz
popa
outsb
xor
inc
ds
mov
into
push
mov
cmp
lods
cmp
shl
insl
mov
jp
mov
outsb
xchg
aad
sbb
jl
sbbb
xor
lea
xchg
or
and
sbb
mov
or
cltd
enter
cmp
hlt
add
jne
lea
mov
xor
jae
mov
jg,pn
xchg
fs
in
pop
insb
push
mov
stos
adc
rcrb
movsl
test
mov
jbe
cmpsb
adc
fscale
cltd
push
sub
jecxz
test
add
mov
push
mov
lret
adc
pop
pop
lret
inc
lea
ret
mov
pop
or
add
xchg
adc
cmpsl
aas
bound
mov
push
adc
inc
mov
subb
fidivl
sub
fsubr
push
pop
ljmp
xchg
lahf
jno
inc
xchg
xor
mov
stos
loope
sub
mov
push
in
fcoms
popa
or
add
sub
int3
aaa
aad
fs
inc
dec
lret
pop
subb
ja
out
push
pop
jne
fnstcw
ljmp
ret
pop
neg
dec
ds
pop
fcmovnbe
xchg
jae
dec
hlt
es
jle
or
dec
stc
dec
cmc
adc
sar
mov
pop
imul
je
dec
js
ljmp
dec
out
pop
push
jle
imul
push
cmpsl
fwait
int3
mov
mov
jns
lret
scas
fbld
inc
cltd
add
shl
rorl
sbb
loope
test
and
pushf
or
test
cmpsl
mov
inc
mov
lds
fnstenv
pop
pop
mov
mov
pop
imul
out
aad
dec
bndstx
cmp
sahf
out
jnp
and
stos
rcrl
es
add
dec
mov
xchg
xor
fcmovne
fadds
aas
mov
cwtl
les
lcall
and
push
sbb
insb
xchg
lahf
loop
push
jmp
jle
cmpxchg
fstpt
ja
push
mov
xor
dec
jle
or
and
push
rorb
movsb
and
sub
adc
outsl
hlt
cs
loop
xchg
das
and
mov
dec
push
gs
out
leave
sbb
pop
lret
leave
xor
aaa
ret
hlt
push
ljmp
outsl
mov
mov
pop
add
mov
add
or
cs
cmp
pop
outsl
cld
or
cmp
sbb
jmp
mov
int
leave
arpl
insl
stc
add
sbb
leave
dec
add
xor
mov
mov
mov
aam
mov
mov
repz
test
aam
cmp
sbb
mov
jb
lds
sahf
and
push
jle
jl
mov
fdivs
mov
popa
adc
push
pop
jg
sahf
pop
scas
shlb
sub
enter
imul
mov
jns
or
fldl
data16
and
mov
sbb
adc
pop
shll
test
add
data16
cmp
shlb
adc
jge
test
jle
fcos
jb
dec
mov
jge
mov
int
aas
add
cmp
adc
insb
lahf
push
outsb
clc
mov
std
mov
out
stos
adc
aas
roll
push
cs
lods
lret
pop
cmp
push
repz
mov
sub
push
fsubrs
cmp
out
nop
inc
mov
shl
dec
add
jne
cmp
inc
mov
addl
inc
lock
out
xchg
dec
mov
jg
ret
outsb
cmp
push
push
xchg
adc
xchg
pop
pusha
insl
xchg
add
cs
fstpl
mov
repz
push
in
cs
movsl
dec
out
addl
int
ret
dec
pop
lea
loope
stos
adc
xlat
repz
xchg
add
push
out
and
imul
arpl
hlt
mov
adc
lea
scas
aam
push
adc
std
jge
cs
xchg
dec
clc
inc
or
jae
fcompl
popf
push
mov
cmpsb
loop
out
adc
lock
mov
es
push
mov
xchg
and
mov
or
out
mov
adc
flds
jns
sti
xor
mov
dec
adc
repnz
pop
lcall
out
jecxz
add
int
repz
xchg
add
dec
cmp
ja
lods
push
mov
or
push
sub
xor
imul
scas
mov
sbb
mov
jne
jne
xchg
out
mov
lods
loopne
lock
push
fimull
jb
sahf
and
icebp
jl
lret
hlt
or
adc
lods
xchg
pushf
xchg
test
insl
insl
sub
popf
pop
outsb
xor
xchg
dec
mov
inc
push
mov
cmp
inc
pop
jg
pop
repz
push
add
push
jl
fdivs
or
bound
ss
jmp
int
push
mov
pop
mov
fucom
and
pusha
fs
pop
cltd
std
jo
sbb
jecxz
inc
enter
push
inc
xchg
in
pop
jp
mov
sahf
pushf
mov
dec
cmp
or
mov
push
scas
inc
cmp
popf
pop
std
int
push
int3
adc
inc
in
test
mov
xchg
xchg
in
lcall
orb
bound
mov
addl
aad
dec
ficoml
xor
xchg
outsb
and
mov
sub
xor
add
push
icebp
or
clc
sahf
xor
push
cmp
or
pop
jne
shll
mov
out
dec
mov
shrb
adc
sbb
cmp
fsub
adc
je
adc
mov
std
jg
xchg
das
adc
in
movsb
xor
jle
imul
mov
aam
ja
iret
mov
fdivl
xchg
sti
nop
sub
outsl
stos
aad
or
int
xor
xchg
stos
enter
xchg
fldl
out
repnz
lcall
sbbl
mov
clc
addb
mov
jmp
aas
mov
ja
pop
and
xlat
repnz
jo
add
dec
mov
test
pop
xchg
fucomp
leave
push
test
jns
push
scas
ret
outsl
jb
sbbb
ret
sbb
hlt
fsubl
icebp
fdiv
mov
fwait
and
iret
dec
pop
bnd
adc
push
and
jp
fstps
andl
xor
pushf
cmp
sub
jecxz
mov
jmp
mov
xchg
test
nop
jne
cs
or
adc
fwait
std
ds
cmp
xor
dec
add
push
rclb
mov
ficompl
xchg
push
aas
cmp
jecxz
rcrl
dec
jecxz
cld
inc
lea
jmp
sub
mov
out
js
sbb
mov
rorl
jb
cmpb
jae
and
inc
xor
and
mov
jbe
push
cwtl
jb
mov
call
inc
or
xchg
ljmp
pop
fistps
pop
xchg
or
or
adc
clc
dec
sub
aad
mov
daa
fwait
mov
pushf
dec
addr16
mov
gs
adc
mov
and
leave
call
and
sbb
movb
xchg
sbb
xor
inc
outsl
icebp
and
orl
imul
cmp
cli
sbb
lea
jle
pusha
scas
add
test
scas
pop
mov
insb
and
in
ds
daa
aaa
jb
in
movsb
mov
pop
pusha
idivl
sub
cmp
pop
push
jmp
enter
sbb
sbbb
movsl
icebp
inc
fiaddl
sarl
out
enter
mov
stos
pop
bound
jb
mov
adc
mov
and
pop
cltd
push
cmp
mov
push
pop
xlat
orl
call
sbb
jp
sub
pushf
in
push
adc
lods
fiadds
mov
sahf
or
sti
xchg
cmp
imul
mov
dec
repz
mov
aam
aas
push
push
jge
mov
pop
mov
fstpt
mov
mov
lods
aaa
daa
sti
cmpsb
lahf
jl
rcl
push
nop
pop
dec
filds
and
rol
jnp
incl
in
adc
mov
mov
mov
sbb
adc
stos
lahf
add
jbe
repz
lock
outsb
dec
daa
movsb
ss
cmpsb
mov
shrb
push
pusha
xor
fwait
iret
xor
dec
fnstenv
mov
cmp
rorl
setae
ret
xchg
pop
push
mov
icebp
enter
sahf
or
inc
cmp
inc
xor
pop
lods
fmull
xchg
in
xor
jb
insb
imul
or
nop
jmp
xchg
adc
test
push
scas
cs
adc
imul
or
loopne
scas
das
and
xor
or
jmp
loopne
or
cmp
adc
pop
xchg
adc
int
add
cli
out
pop
popl
xchg
sub
push
pop
mov
mov
lods
inc
jno
xchg
pop
js
shll
pop
cltd
cmpsb
inc
lret
jle
and
shrb
sub
fisttpl
mov
pop
test
shl
jge
loop
sub
jns
dec
mov
mov
movsl
jmp
cmp
lcall
pop
mov
ds
jae
lret
iret
data16
push
out
push
lock
lcall
pop
jns
push
mov
pushf
fiadds
mov
fldcw
outsl
jmp
ja
jo
push
shll
pop
pusha
xor
insl
inc
mov
adc
stos
sbb
out
jbe
mov
insl
fsub
jnp
or
push
loopne
sbb
cltd
js
fdivs
insb
cli
jns
cmc
mov
faddl
and
sti
neg
test
ja
mov
and
pop
mov
xchg
fnstenv
pop
jne
test
push
mov
mov
movsl
inc
vpxor
aaa
repnz
dec
xor
pop
jnp
into
fimuls
gs
sbb
call
or
sub
fnsave
cli
xchg
into
xor
repnz
pop
loope
lods
mov
xor
jmp
fdivl
cld
or
dec
lock
adc
in
clc
imul
cmp
in
xchg
jbe
addr16
push
push
jle
xlat
stc
jnp
pop
in
pop
xor
je
jns
pop
adcl
dec
mov
sti
lcall
sbb
popa
fsubr
lret
push
mov
lret
pop
adc
push
xor
popf
sub
into
int3
push
xchg
push
jne
cmpsl
cwtl
push
adc
mov
xor
dec
jecxz
pop
inc
les
xor
xchg
mov
or
ret
adc
push
push
push
movsl
daa
cmp
aad
jne
icebp
fistl
andl
lock
loop
cmpsl
xor
call
jns
xchg
jl
dec
jmp
sbb
xor
gs
xchg
cli
push
or
adcl
sub
pop
scas
pop
adc
iret
in
pop
or
cmp
enter
dec
adcl
lahf
ret
shr
rol
mov
sub
push
push
shrl
xchg
andl
cld
ljmp
ds
jo
sbb
dec
js
jp
scas
jp
sbb
aam
cmp
mov
mov
mov
sbb
mov
mov
jne
mov
mov
push
xchg
adc
dec
data16
or
jnp
cld
daa
inc
shlb
cli
scas
aam
mov
mov
add
repz
pop
xchg
mov
lock
data16
pop
lea
inc
repnz
aas
loopne
insb
negb
ret
repnz
jb
xor
xor
cmp
iret
jecxz
jno
jo
jbe
lds
aas
mov
mov
test
cmp
call
std
jge
cmc
loop
mov
add
shlb
dec
pop
add
popf
dec
or
add
sbb
imul
insb
mov
shlb
or
out
cld
stos
aaa
lods
xor
pop
pavgb
hlt
pop
push
out
jp
pop
xchg
fwait
xor
pop
dec
pop
push
or
fnstcw
push
jl
jle
add
push
rcr
jl
xor
mov
lds
daa
data16
jle
pop
xchg
sbb
push
or
sbb
jnp
outsl
in
jnp
and
push
test
inc
lcall
test
mov
jns
and
mov
dec
jnp
iret
mov
cmpsb
lock
jo
sub
mov
mov
mov
cmp
ljmp
sbb
cmpsl
push
or
call
xchg
inc
jp
sbb
jo
cmp
dec
xchg
jl
xchg
mov
jg
adc
add
cmpsl
push
repnz
lods
and
adc
ret
jnp
dec
add
adc
push
pushf
dec
xor
fucom
cmp
sub
lahf
cmpl
sub
pop
mov
dec
hlt
inc
pop
out
pop
imul
or
test
inc
int
mov
mov
xor
cmp
mov
jo
test
and
or
jbe
inc
mov
insb
dec
fwait
push
mov
imul
inc
movsl
test
mov
adc
xor
xor
dec
inc
adcl
sub
stos
push
call
loope
outsl
stos
lock
sub
cli
adc
rorb
add
xchg
cli
pusha
and
mov
adcl
pop
cli
in
adc
fcomps
inc
lods
dec
dec
fisubrs
aaa
sbb
jmp
mov
add
imul
inc
mov
pop
mov
ror
sub
fisubl
daa
stos
jmp
scas
and
insl
inc
fcompl
aaa
das
xchg
cli
cmp
out
loopne
fxch
lret
addr16
mov
push
jge
pusha
scas
aaa
out
cmpsl
nop
push
fists
and
shlb
cmp
adc
aaa
push
lods
aas
outsl
sti
adc
jno
xor
push
pushf
fsubl
enter
and
in
inc
inc
fnsave
xor
xlat
mov
int
pop
aam
jge
jl
lds
push
jmp
ja
cmp
das
cmp
add
sub
xchg
stos
dec
dec
aam
in
mov
pop
nop
or
xor
inc
or
fbstp
rorl
cmp
std
xchg
cmp
sbb
pop
or
sahf
in
fisttps
mov
std
dec
fwait
je
inc
push
stc
xchg
xor
movsb
les
pusha
stos
clc
mov
sub
out
test
jbe
test
js
js
movsb
xor
scas
mov
into
mov
push
iret
fdivrs
mov
bound
mov
mov
aaa
xchg
ljmp
or
sub
cwtl
push
mov
into
gs
xchg
sub
mov
mov
adc
fs
add
fmull
pop
rsqrtps
in
ss
fwait
es
pop
mov
jecxz
xchg
mov
pop
out
or
jbe
xchg
fbld
or
push
jne
decb
jne
lds
sub
inc
dec
popf
push
daa
cmp
int3
jb
xor
stos
xor
ret
shr
mov
cmpsb
sarl
cmp
in
inc
pop
subl
fisubrs
push
fldl
jnp
int3
adc
and
mov
addr16
xlat
icebp
pop
mov
cmp
and
leave
mov
dec
lahf
sbbb
inc
lret
divl
mov
jnp
sbb
push
pushf
cmpsl
lds
mov
inc
loop
or
arpl
or
jne
shr
xchg
sub
subl
shlb
adc
jb
add
lahf
and
jp
hlt
cmpsb
adc
inc
int3
enter
sbbb
sub
daa
shr
cs
lods
cmp
es
mov
inc
testl
imul
sub
lret
ret
push
jp
les
jg
nop
mov
dec
pop
ret
mov
rep
nop
inc
adc
mov
sahf
fdivrl
pop
adc
push
insb
mov
std
frstor
jg
fdivrp
or
jmp
test
cmc
jge
shll
inc
pop
fwait
in
push
push
scas
shll
fisubrs
outsb
fwait
push
popf
lret
push
pop
mov
mov
inc
fscale
pusha
out
rcrb
popa
clc
push
lods
push
xor
notb
add
xchg
outsl
push
rcl
or
mov
and
mov
rol
or
stos
xchg
and
adc
gs
iret
pop
loope
mov
and
into
xor
inc
sub
test
adc
enter
enter
and
or
lods
aam
inc
popf
in
ret
lock
orb
mov
inc
and
int
lahf
call
xchg
in
outsb
xchg
insb
lods
jmp
insl
dec
test
test
pushf
lods
push
cmpsb
push
cmpsb
xchg
insl
jge
loopne
mov
inc
loope
scas
shrb
cwtl
repz
sti
lock
push
sarl
push
daa
cmp
lret
pop
out
xchg
stos
xchg
jno
loop
popf
push
scas
push
js
and
and
cltd
addb
dec
lds
jne
pop
mov
fstpl
jo
sub
mov
test
daa
mov
add
fdiv
mov
adc
xchg
mov
mov
pusha
inc
xor
inc
out
cwtl
pop
mov
add
pop
test
add
cld
stos
pop
xor
inc
mov
data16
test
or
in
sbb
aaa
push
data16
xchg
xchg
add
inc
xchg
sub
pop
mov
mov
jno
push
outsb
fnstsw
mov
mov
faddl
lcall
loop
popf
not
jae
cli
mov
xor
in
mov
pop
in
loope
pop
mov
cmp
das
add
hlt
jno
push
lret
dec
lahf
cmp
arpl
rcrl
lock
fstp
mov
mov
fadds
lahf
jp
test
loope
cmpsl
popf
aad
loopne
aaa
out
lock
mov
mov
cmc
dec
mov
in
add
shrl
xchg
mov
and
mov
pop
das
dec
imul
jno
or
fcomps
and
cmpsb
jb
add
inc
adc
in
xor
inc
cmp
fpatan
and
enter
xchg
mov
xor
jmp
xor
bound
mov
les
mov
iret
sub
rcrl
sbb
sbb
iret
and
xor
pop
pop
push
push
mov
lcall
in
xorl
fstpt
movsl
mov
sarb
add
int
movsb
dec
and
jnp
xor
add
cmp
sub
xor
mov
std
mov
mov
stos
loop
enter
sbb
ret
addr16
outsb
add
inc
sub
inc
mov
in
icebp
jo
in
push
lods
psubd
inc
jno
stc
inc
push
sbb
test
sub
lods
imul
lods
cwtl
pop
pop
repnz
jge
mov
gs
xchg
shl
jns
cmc
dec
jmp
ret
xor
jb
mov
ret
mov
or
lods
ret
add
mov
sarb
sti
ja
push
mov
jle
sbb
movsl
mov
mov
popa
add
lock
data16
inc
push
inc
out
arpl
std
jo
or
iret
jmp
das
xor
pop
mov
inc
lahf
xor
cmp
scas
mov
dec
push
mov
inc
aad
enter
inc
flds
out
inc
lahf
imul
push
loope
lock
test
push
jmp
xor
jo
and
dec
pop
enter
inc
ljmp
cli
shr
test
dec
dec
inc
add
roll
orl
jns
mov
mov
pop
push
xchg
cld
cli
xchg
or
out
jmp
sub
inc
add
jae
int
roll
xor
mov
mov
stos
pushf
xor
jbe
pop
rclb
ds
add
inc
leave
inc
std
mov
pop
jno
push
mov
mov
or
es
dec
push
lret
leave
sub
daa
dec
enter
addr16
stos
outsl
add
or
cwtl
mov
orl
jmp
cmp
mov
mull
sub
adc
test
das
mov
cmp
ficomps
xchg
fidivrs
mov
mov
cmp
es
stos
js
icebp
lret
adc
cmpsb
dec
mov
in
aam
xchg
pop
out
jl
bound
popf
jbe
repz
mov
jne
inc
mov
stos
jne
sbb
cmp
xchg
stos
or
neg
insl
push
xor
aam
or
sbb
clc
dec
xchg
aad
in
pop
sbb
ds
adc
rol
xor
cmp
out
pop
pop
xchg
lds
orb
inc
dec
pop
sbb
push
loop
and
cmp
mov
or
add
aam
xchg
jns
xchg
push
scas
fdivp
rcrl
ljmp
insb
jge
cmp
outsl
push
jno
cmpsl
and
inc
cs
movsl
xor
pop
cmpsb
jle
xchg
inc
cmp
xchg
hlt
jecxz
mov
push
loope
xor
mov
pushf
ja
xor
outsb
enter
pop
mov
incb
mov
lock
sbb
jns
sbb
sub
sbb
sub
popa
jnp
pop
or
adc
push
jnp
popl
ret
cmpsb
dec
push
push
cmp
repnz
stc
nop
iret
fadds
mov
adc
out
mov
push
rcr
cmp
mov
adc
xchg
gs
nop
cli
pushf
push
or
adc
adc
cmpsl
dec
pushf
pop
push
into
push
jge
cmpsl
cmp
rcrl
or
pop
ljmp
fadds
mov
pusha
idivl
pop
arpl
pop
loope
mov
aaa
inc
and
scas
push
mov
mov
add
adc
fsubrl
and
fdivrs
stos
inc
or
fidivs
adc
scas
add
nop
out
insb
xlat
push
imul
cmpsl
icebp
mov
jae
pop
imul
decl
hlt
jl
jle
lahf
and
push
xor
inc
mov
mov
pop
push
fcoms
or
jnp
add
mov
mov
outsb
mov
popa
and
jns
adc
insl
sub
dec
pop
adc
andl
call
cmc
inc
and
aad
cmp
imulb
outsb
xchg
mov
cld
xor
cli
pushf
sub
jp
mov
ljmp
cmp
push
outsb
inc
pushf
sub
sbbb
sub
mov
cmpsl
scas
sbb
add
out
fsubrs
cs
pushl
test
pop
cmp
and
lahf
xor
ficomps
mul
dec
push
neg
das
adc
je
movsl
ds
jnp
std
sub
jb
xor
jnp
cmp
testl
cmpsl
mov
jg
mov
sub
mov
mov
sbb
adc
out
pop
add
cli
adc
std
sarl
mov
push
imul
jl
jo
imul
push
pop
mov
jno
mov
mov
ljmp
pop
ds
lods
inc
jl
dec
rorl
sub
xor
mov
dec
repz
cmp
and
dec
push
stos
in
add
and
idiv
popa
cmpsl
stos
sbb
jbe
ds
cli
xchg
divl
jo
dec
push
mov
or
mov
fcompl
ja
jle
stos
stc
jl
nop
jp
test
or
out
adc
repnz
add
int
fmull
pop
popf
inc
mov
push
cmpsl
daa
push
test
int
aad
dec
and
sbb
fisubl
sub
add
into
imul
cmpsb
out
xchg
test
leave
dec
push
jecxz
sub
mov
test
ljmp
js
aas
mov
rcll
test
xorl
adc
jmp
cmp
mov
popa
or
aas
push
bnd
cltd
push
xchg
pop
add
jl
test
pushf
jno
add
adc
or
repz
cmp
fldl
popf
shrl
adcb
clc
aad
lcall
sbb
int
sbb
pop
out
sub
inc
das
cmp
fwait
or
inc
ret
incb
testb
push
xchg
lret
bound
lods
mov
insl
mov
ret
test
cli
xchg
cmp
testb
cmc
loope,pt
mov
fucomi
jge
fldcw
or
dec
inc
push
out
xor
leave
inc
fld
out
or
xchg
out
mov
loope
jae
pop
add
sbb
cmp
add
push
sub
xlat
jno
or
adc
xor
in
sahf
sub
insl
dec
and
test
test
out
and
in
pop
push
xor
and
pop
sarl
in
mov
into
loope
cli
mov
aam
ret
sbb
add
jle
and
xchg
xlat
test
xchg
repnz
sahf
lods
notb
stos
or
fsubrl
out
cltd
outsb
popa
mov
mov
mov
rcrl
and
inc
scas
and
cmp
pop
inc
add
xchg
les
and
sub
xchg
addr16
inc
sbb
or
movsb
cmp
dec
in
mov
leave
shll
push
xchg
out
xchg
cmpb
out
and
push
push
push
jae
arpl
adc
mov
adc
mov
cmp
and
mov
nop
pop
test
in
aaa
pop
inc
stos
in
stos
icebp
fs
adc
in
cmp
shlb
or
movsl
xchg
jne
repnz
repnz
aam
ja
movsl
adc
int3
xchg
pop
adc
cmp
int3
xor
test
add
mov
pop
sti
stos
push
daa
outsl
fbstp
loope
mov
adc
sbbl
lea
out
push
cmp
popa
and
nop
daa
outsl
imul
push
scas
inc
cmp
push
loopne
imul
out
adc
and
lods
ror
xchg
and
push
jle
push
cmp
mov
adc
inc
sbb
mov
adc
adc
xchg
mov
xor
repnz
dec
cmp
dec
ljmp
mov
dec
jp
jle
mov
sub
jp
sbb
std
scas
cs
stos
fbld
pop
icebp
mov
cwtl
xsha1
cmpsb
leave
bound
ja
mov
add
sub
mov
add
xchg
pop
jne
bound
lahf
xchg
out
jno
lock
push
fwait
adcl
daa
cmp
jp
lret
popa
nop
jg
shlb
push
mov
pop
xor
shlb
cmp
aam
dec
call
scas
out
js
jp
test
enter
inc
fs
inc
scas
faddp
xchg
icebp
jle
call
shlb
dec
or
mov
shl
repnz
pop
or
ficomps
xchg
ja
push
stos
sbb
lock
push
sarl
je
adc
pop
mov
or
lahf
add
daa
pop
cmp
xchg
lods
xor
cli
out
sub
movl
popf
mov
shrl
lods
dec
stos
mov
mov
pop
fsubrs
js
cltd
mov
mov
bound
loop
jl
pop
out
add
xchg
out
mov
xor
lods
inc
add
and
xchg
xor
sub
dec
mov
xchg
adc
enter
cmpl
movsl
mov
xlat
out
std
mov
fadd
mov
popf
inc
push
mov
cmp
xchg
test
push
test
gs
in
adc
cld
jecxz
ljmp
and
pop
and
and
xchg
pop
scas
dec
push
nop
dec
lods
inc
movsb
mov
negb
sbb
fisubrs
jmp
test
cmp
xor
out
or
out
repz
jg
rolb
mov
mov
movl
insl
loope
xchg
cmp
or
cmp
cmp
sbb
fs
push
jecxz
sahf
sbb
push
fisubrs
out
inc
add
dec
ret
call
jl
cmp
test
pop
xlat
in
addr16
clc
in
sub
in
mov
mov
xchg
cmpsl
or
push
roll
adc
and
mov
push
jns
or
stc
cmpsl
fdivl
sbb
je
cltd
and
mov
enter
add
cmp
dec
pop
out
jge
test
int
sbb
cltd
pop
ljmp
adc
mov
push
test
fldt
mov
mov
mov
sbb
cmp
jbe
lds
mov
aad
sbbb
cmpb
test
dec
movsl
or
daa
cmp
dec
or
push
mov
data16
adcl
mov
inc
push
fsubrl
xchg
mov
lret
pop
hlt
push
nop
outsb
mov
ret
sti
sbb
inc
cld
movsl
push
sbbl
lds
adc
scas
insb
sbb
xor
cld
cld
pop
push
xchg
sarl
mov
lods
push
adcl
mov
cmpsl
pop
rclb
add
scas
dec
push
xchg
mov
and
inc
pop
pop
and
decl
mov
xor
nop
push
cmp
sti
xchg
sbb
ds
dec
xor
mov
lds
mov
xsha1
cmpsb
int
shlb
loopne
lret
cwtl
pop
ds
cmp
inc
push
mov
ret
jle
pop
xor
mov
test
ret
je
mov
push
mov
aas
es
and
pop
in
xor
outsb
xor
mov
push
fnstenv
jge
sar
sbb
int3
movsb
cmp
daa
jle
xchg
jecxz
sbb
xchg
shrl
and
and
and
enter
mov
ja
push
shl
leave
int
repz
jmp
jmp
jno
xor
cld
lods
shll
lret
dec
inc
mov
jo
sub
data16
cwtl
mov
les
cmc
lock
push
mov
clc
cmpsb
cmp
iret
pop
lds
in
sub
push
inc
xor
in
stos
mov
cmpsl
push
leave
movsl
add
hlt
lods
fnstenv
push
test
mov
cmpb
mov
sub
xchg
jo
lahf
jecxz
inc
cmp
shr
mov
cmpsl
repnz
or
cmp
dec
testb
outsl
fistpll
call
sub
outsl
negl
fidivrl
xchg
lret
xor
sbb
repnz
dec
mov
adc
cmp
fsubrs
pop
stc
mov
daa
mov
daa
into
cwtl
loopne
xor
fildll
push
aam
push
rcrl
imul
mov
movsb
mov
test
mov
in
stos
into
repnz
and
scas
cs
pop
push
roll
int
pop
jp
aaa
dec
cmpsl
pop
cmp
sar
test
ss
push
xor
pop
shll
cmp
sub
jp
cli
dec
pop
out
jnp
icebp
xchg
mov
pop
hlt
pop
push
jnp
pop
das
mov
fnsave
pop
jne
cmp
insb
mov
jbe
out
xor
mov
jns
jge
xchg
scas
pop
inc
fsubrl
js
jns
dec
arpl
adc
shrl
out
outsl
xchg
data16
ds
stc
test
mov
cmpsl
cs
in
jg
fisubrs
xor
sahf
mov
shlb
adc
pushf
jb
scas
pushf
xor
add
fcompl
mov
rcll
shl
cmp
sub
repnz
rcll
xlat
clc
xor
sub
insl
dec
push
lock
aaa
push
movsl
push
add
adc
xchg
and
inc
sbb
and
sbb
sbb
scas
sarl
iret
add
mov
pop
push
out
push
icebp
je
push
mov
xor
cld
and
pop
notl
ret
adc
call
test
cmp
cmpxchg
or
xchg
pusha
lahf
lods
xchg
aas
push
mov
repnz
inc
test
lds
xchg
leave
lret
push
adc
cmpl
mov
sub
add
mov
inc
sti
jae
jb
add
js
ret
hlt
mov
shlb
jmp
stos
jl
pushf
fstpt
sub
xchg
fisubrl
dec
loopne
pushf
mov
fsts
pop
dec
inc
sarl
imul
xchg
lret
push
inc
imul
cs
insl
mov
or
int3
jns
test
dec
mov
sbb
sahf
jmp
out
out
test
cmp
cmpsb
add
adc
pop
xor
sub
adc
sbb
leave
xchg
loop
xchg
add
push
inc
sti
cwtl
mov
test
and
and
jecxz
movsb
jge
ss
add
das
dec
push
test
in
xor
sub
mov
add
addr16
and
popf
js
icebp
std
xorl
mov
xor
ljmp
jno
mov
call
cmp
add
outsl
pop
lea
xchg
sub
rorb
inc
push
test
sub
jg
fucomip
shlb
mov
cmpsl
cmpsb
add
jmp
inc
cwtl
ret
jmp
outsb
add
imul
popf
lods
xlat
xchg
mov
aad
lods
inc
scas
not
push
mov
popa
xchg
jo
jle
cmp
movsb
es
test
mov
lret
out
inc
lds
push
inc
jbe
rcrb
icebp
mov
loopne
push
dec
mov
push
dec
iret
add
movsl
popf
jp
jae
test
and
xchg
aaa
dec
cmp
jg
push
out
adc
dec
and
lds
lahf
icebp
cmp
dec
jmp
sub
mov
and
inc
int
push
loope
push
inc
aas
fidivs
movsb
cmp
sbb
push
or
popa
fdiv
out
jge
adc
lahf
or
cmp
pop
out
mov
les
xor
jnp
push
call
dec
push
mov
aas
push
cmp
ja
mov
push
sahf
xlat
xchg
fstpl
cmp
je
and
adc
movsl
shll
imul
pop
icebp
int3
jg
sbb
dec
xchg
stos
inc
add
test
roll
add
fiadds
mov
lods
xchg
push
hlt
mov
sub
iret
lock
and
and
lret
data16
and
enter
fidivrl
mov
popa
loop
mov
aas
pop
xchg
or
push
sub
jns
lret
imul
out
lods
add
adc
imul
repnz
dec
push
mov
dec
push
jnp
sbb
add
jnp
stos
mov
lea
mov
sub
mov
sbb
inc
push
xchg
xor
xchg
std
or
jp
jno
mov
sub
iret
push
adc
cmp
mov
jae
lock
mov
sbb
cld
pop
mov
mov
cli
push
push
jge
xchg
mov
out
popa
jg
sahf
mov
ss
jmp
mov
push
xor
fidivrl
jno
ret
mov
add
cmp
pop
adc
nop
cmp
xor
add
mov
jmp
xor
dec
or
adc
ret
and
js
ja
sub
cld
jns
cmc
insb
jle
dec
or
cmp
sbbl
sbb
shl
les
dec
mov
fistpll
stos
rcrl
sbb
lret
sti
xchg
insb
sub
imul
repnz
lret
mov
mov
test
aad
jmp
adc
jmp
sbb
cmp
jno
dec
mov
rolb
mov
cmp
pop
inc
enter
sbb
ss
aad
je
nop
hlt
inc
mov
es
adc
cmp
sub
mov
sbb
aam
cmpsl
cmp
out
not
cmpl
sbb
out
cld
or
sub
fstl
and
and
xchg
sbb
pop
sub
fstpl
sub
jmp
ljmp
push
fistl
sbb
out
cmp
mov
movsb
cmc
sbb
movsb
pop
fldt
pop
dec
inc
stc
js
fwait
pop
in
mov
inc
cmpsb
popa
add
out
int3
sbb
add
cmc
mov
in
pop
mov
add
movsb
pop
subl
lea
je
sbb
mov
push
adc
and
mov
lods
pop
xchg
xchg
ds
mov
mov
sarb
jbe
dec
test
cli
or
or
add
inc
movsl
sbbb
lea
pushf
dec
xchg
and
ljmp
in
and
ds
iret
jnp
xchg
add
repnz
fwait
les
jnp
inc
inc
lret
out
fistps
push
inc
sbb
repnz
push
ds
icebp
movsb
aas
addr16
fldt
sbb
xor
lcall
cld
fdivrl
test
jae
into
movsb
inc
out
add
xchg
jb
pop
fsubrs
jle
xor
leave
and
push
dec
pop
dec
insl
mov
shl
sbb
mov
jb
mov
movsl
cmpsl
aaa
xor
imul
movsl
dec
mov
into
lea
repz
mov
ds
daa
mov
inc
add
mov
je
inc
jns
jns
inc
sub
fiadds
sbb
adc
jbe
hlt
push
and
or
xor
push
mov
ret
jmp
mov
and
and
or
xor
in
ljmp
mov
xchg
mov
mov
sub
fdiv
push
rol
je
test
lret
push
outsb
mov
ret
add
es
insb
js
andb
shr
ljmp
push
out
pushf
cmpsl
and
cwtl
test
jb
jb
test
lret
xor
sub
push
mov
or
adc
imul
jge
decb
je
cmp
xchg
iret
fsts
and
test
repnz
cltd
clc
adc
jmp
sbb
mov
ret
jl
std
or
popf
mov
pop
sub
sbb
sti
dec
int3
dec
loopne
inc
sar
add
clc
and
inc
rcll
ja
mov
sbb
imul
jnp
cmovp
hlt
xor
cli
mov
xor
out
dec
hlt
call
or
xor
stos
pop
xchg
inc
add
push
les
hlt
cmp
jb
or
mov
call
adc
adc
imul
cltd
xchg
and
leave
ret
out
mov
dec
sub
ret
rorb
cltd
call
js
sub
cmp
lcall
add
jl
mov
sti
insl
adc
xchg
cltd
cmp
filds
dec
pop
scas
scas
test
test
push
repz
mov
pushf
cmpsb
pop
inc
pop
pop
stos
sub
test
movsb
into
cmpsl
cmpsb
push
pop
mov
adc
sub
jecxz
push
test
xor
iret
sbb
clc
and
sub
inc
inc
addr16
cltd
mov
mov
mov
aad
and
dec
push
pop
mov
shll
push
add
sbb
jbe
push
into
adc
push
leave
out
popf
lahf
fwait
ljmp
xchg
es
data16
cltd
pushf
lods
stos
aam
mov
sbb
xchg
test
andl
sbb
jg
add
sti
dec
mov
inc
jne
sub
mov
push
test
mov
das
mov
jne
daa
sbb
push
or
cmp
adc
lcall
sarl
sarb
lret
xor
dec
xor
inc
or
push
rcrb
dec
push
cs
fucomip
jmp
cli
or
vpor
dec
fwait
test
jge
dec
fisubl
jb
dec
adc
aad
lds
jg
mov
sti
mov
rclb
test
xchg
scas
and
pop
enter
cmp
push
cmpsl
push
outsb
push
ja
cmp
sahf
xor
adc
mov
push
gs
ja
sahf
scas
scas
push
call
out
in
lcall
jmp
inc
sahf
repz
int3
fwait
push
scas
or
dec
movsl
push
sub
or
in
scas
xor
mov
push
cmp
repz
call
adc
and
pop
add
movsb
nop
add
adcl
pushf
pusha
movsl
aas
jbe
test
jbe
repnz
push
ja
into
fs
fsub
add
jmp
push
push
xchg
pop
mov
lret
xor
push
in
push
inc
out
dec
jmp
push
cmp
jne
jmp
cs
pop
xlat
sub
pop
mov
mov
sub
xor
pop
faddl
xor
loopne
or
jb
imul
pop
xchg
testl
imul
js
xchg
lcall
xchg
add
out
ret
or
cmp
cli
sbbb
mov
adc
mov
mov
out
cmp
sbb
push
sbb
movsb
movsl
mov
pusha
test
add
enter
xlat
stos
add
sbb
jo
jl
test
cmpsb
cltd
jmp
inc
adcb
sti
pop
xor
bound
xchg
imul
sub
fisttpll
dec
loopne
pop
sbb
xor
xor
iret
arpl
inc
sbb
xchg
sub
loop
popa
lock
scas
lods
cmp
lods
pusha
mov
mov
shlb
inc
mov
cs
add
push
push
nop
cmpsl
fcoml
xchg
push
leave
pop
mov
cmpsb
cmp
add
js
or
test
add
dec
lahf
sub
mov
data16
mov
sub
inc
or
xchg
std
jmp
fdivl
and
xchg
cld
mov
fwait
loop
gs
sub
addl
ret
lea
pop
ror
dec
pop
scas
jns
popf
outsl
dec
pop
popa
rcrb
pop
mov
fndisi(8087
js
cs
sub
jb
dec
pop
jl
jg
lods
jns
and
xchg
imulb
andb
mov
inc
adc
jo
dec
xorl
mov
test
iret
mov
notb
lods
xlat
outsb
fidivrs
sbb
insb
aad
pusha
or
mov
outsl
aas
lods
inc
jo
pop
clc
pop
jge
mov
call
mov
mov
mov
mov
mov
outsl
mov
stos
lcall
lods
arpl
dec
rorb
in
shlb
add
repnz
xor
jp
in
adc
mov
push
xor
ret
std
mov
pop
pusha
adcl
pop
loop
cs
cmpsb
ds
jmp
rclb
mov
aas
test
jno
ja
jno
mov
xor
int
push
outsb
fildl
aam
int3
or
jp
adc
xlat
out
add
or
push
dec
repnz
fbld
mov
jmp
int3
mov
mov
imul
push
xchg
not
fildl
add
popf
sbb
pop
cmpsb
cmp
les
cmp
les
ret
xor
outsl
mov
clc
repnz
and
sub
or
mov
adc
jbe
add
outsl
xor
insl
enter
negl
mov
insb
cmpsl
in
pushf
ja
sbb
jge
cmp
cmc
loop
xchg
sub
sub
pop
fldt
test
sti
jno
cli
leave
pop
pop
jb
arpl
ret
mov
int
mov
insl
lods
mov
das
ret
add
mov
insb
je
dec
inc
push
pop
cwtl
pop
lahf
mov
sub
and
into
loopne
sbb
test
pop
mov
popf
pop
loop
mov
out
js
fld
dec
or
lret
push
mov
fisubrs
jb
movsl
pop
repz
jp
out
repnz
stos
setns
mov
sbb
stos
mov
js
scas
test
xchg
lods
pop
or
out
js
fwait
stc
nop
int
orl
lods
pop
insb
ja
add
aam
xchg
cs
or
cmpsl
cmp
sbb
in
sbb
aas
daa
mov
jnp
inc
fsubl
in
sti
jbe
inc
arpl
jb
mov
in
dec
push
lret
aaa
cmpsl
inc
imul
popf
cmp
jmp
insb
mov
or
xchg
out
inc
mov
jmp
jae
mov
mov
xor
movsb
sti
test
adc
pop
jb
ret
push
push
ja
cmpl
push
movsb
push
jo
in
inc
cld
lahf
add
pop
pop
lcall
pusha
scas
xchg
pop
out
mov
adc
xor
inc
outsl
and
add
jns
ret
adc
int3
cmp
sbb
push
or
xor
mov
push
cltd
mov
and
sbb
push
outsb
sbb
lds
jg
xor
jge
sahf
mov
inc
add
outsl
mov
push
jmp
int3
dec
xor
jg
jg
xor
push
mov
or
dec
or
mov
adc
pop
sub
pusha
sbb
and
nop
jecxz
jmp
push
andl
xor
xor
xorb
mov
gs
jne
and
shl
test
loope
cmpsb
loopne
xor
mov
mov
or
xor
rolb
jp
cmp
shrl
lods
dec
in
ret
ljmp
push
ljmp
ljmp
jg
jo
jmp
std
and
jmp
decl
inc
in
jns
rorl
call
subb
push
scas
loope
loopne
gs
mov
enter
jnp
je
mov
movsb
pop
repnz
sbb
cmc
pusha
bound
ja
push
pop
ljmp
sbb
int
shrb
xor
lea
add
scas
pop
dec
stos
es
clc
ss
pop
mov
push
imul
loop
push
out
pop
xchg
outsl
gs
hlt
jmp
push
inc
enter
xlat
sub
and
lds
shrl
sbb
adc
mov
xor
add
dec
sub
mov
jbe
fldcw
lahf
push
inc
jp
divl
jno
jno
mov
xor
lahf
inc
pusha
into
mov
cwtl
lock
xor
inc
inc
pop
lret
jnp
xor
cmpsb
test
pop
jne
lods
ret
or
xor
xor
sbb
shlb
jecxz
pop
mov
outsl
sub
ja
mov
push
sub
in
jp
hlt
mov
mov
fimuls
arpl
inc
testb
or
cmp
cmp
pop
mov
pop
push
ret
jge
cmpsl
int3
arpl
pop
pushf
fidivrs
es
cmp
and
adc
mov
pop
mov
cmp
push
insb
push
rcrb
out
in
push
psubq
mov
pop
loop
loope
add
adc
ret
shl
mov
leave
xor
call
popf
dec
pop
iret
push
fs
arpl
pop
pop
test
and
mov
andb
inc
fidivrs
js
push
ja
arpl
cwtl
int3
pop
imul
or
mov
sub
push
ds
ret
loope
pusha
fmull
fistpll
mov
mov
insl
sub
mov
test
push
inc
arpl
or
aad
push
push
adc
pop
dec
xchg
xor
push
mov
xchg
dec
leave
jne
gs
or
mov
imul
arpl
cli
jns
idivl
shll
stos
xchg
and
cmp
jle
mov
out
outsb
mov
fs
dec
xlat
test
aaa
or
movsl
outsb
imul
outsl
mov
jbe
sbbb
mov
inc
cld
jae
lret
inc
aas
in
push
rcr
data16
popa
mov
scas
sbb
adc
outsb
ljmp
inc
scas
sub
loopne
ljmp
jecxz
jmp
daa
lcall
adc
mov
lea
cmp
int
iret
jns
sub
shr
cmp
nop
xchg
insl
shl
pop
add
inc
and
movsl
ret
xchg
mov
test
adc
insb
in
mov
leave
jmp
leave
mov
pop
test
inc
popf
inc
imul
sbb
les
jo
mov
pop
loop
sub
aam
mov
out
aas
fadd
push
and
cmpsb
lahf
enter
fmuls
in
addb
stos
addr16
repz
adc
aas
jl
dec
pop
push
inc
shrb
aas
dec
int
lods
jno
test
pop
out
mov
lea
pop
rorl
sbb
test
out
dec
sub
ret
mulb
enter
jno
jno
inc
push
pop
jle
push
leave
aam
and
pop
push
xchg
mov
andb
fs
jp
je
adc
jo
mov
push
ja
pop
bound
jns
daa
xchg
fcmovnb
lcall
leave
mov
dec
inc
or
lds
dec
inc
add
aaa
push
mulb
lret
repz
mov
dec
in
mov
mov
xor
mov
sbb
movsb
push
insl
pop
lahf
xchg
or
loop
jmp
sahf
or
scas
push
stos
icebp
adc
aaa
xor
dec
ss
xchg
and
push
sub
jne
std
ds
inc
jecxz
xchg
xor
pop
sbb
cmpsb
or
jle
pop
pusha
fisubl
add
inc
add
xlat
lock
or
fistl
cmp
out
cmp
xor
pop
mov
aas
rol
sahf
mov
lock
insl
jl
addr16
das
adc
add
push
mov
dec
lods
xchg
mov
pop
movsl
cmp
xor
jl
and
out
iret
dec
and
aad
ja
cmp
adc
imul
adc
sbb
push
in
shrb
inc
pop
inc
pushf
test
push
jne
lret
mov
add
pop
dec
loope
dec
dec
jae
das
push
xchg
cmp
add
jmp
sbb
rolb
imul
pop
insl
inc
cmc
sub
xlat
imul
lods
out
cmp
pop
inc
mov
mov
inc
push
leave
fstpt
pushf
lods
or
dec
pop
aaa
out
andl
jge,pn
neg
loop
pop
sub
sub
pop
das
push
dec
mov
aam
orb
int
mov
inc
lods
inc
sub
lods
or
int3
loopne
mov
xchg
mov
jge
add
mov
popa
loop
xor
inc
jl
push
in
add
adc
and
call
or
ljmp
sbb
cli
jns
outsl
sub
dec
cltd
mov
push
pop
adc
shl
insb
mov
js
sub
andl
mov
inc
fs
ret
sub
inc
pop
inc
push
cwtl
xchg
cmp
test
leave
and
jae
data16
xchg
pop
mov
loope
mov
jne
add
mov
dec
scas
and
xchg
les
ja
or
cmc
adc
cld
insl
in
sahf
popf
xor
and
mov
cmp
mov
xor
mov
mov
outsl
push
testl
pop
dec
add
in
sbb
inc
add
xorl
xor
xor
test
mov
fsubrp
pusha
sbbb
inc
fs
pop
jne
cmp
cmp
push
dec
ss
mov
test
sub
scas
sub
pop
xchg
inc
push
mov
push
shlb
ss
outsb
pop
jecxz
sahf
lods
in
cmc
adc
fiadds
mov
loopne
sbb
or
jge
cmpsb
jns
inc
dec
mov
xchg
in
or
jg
cs
cwtl
pop
or
jnp
icebp
and
xchg
mov
pop
dec
shl
cmp
push
out
out
add
adc
add
ljmp
mov
in
std
or
sub
add
int3
pushf
pop
xor
out
pop
sti
jbe
fstpl
shll
inc
push
gs
jnp
adc
adcb
ret
and
mov
in
loop
je
push
ret
pop
int3
dec
pop
insl
dec
mov
cmp
shll
dec
xchg
sub
in
leave
dec
push
pusha
testl
dec
lods
jle
mov
dec
nop
xorb
add
fwait
aad
xor
cmp
cmp
jle
loopne
shl
xchg
test
add
out
fisubs
shll
mov
mov
pop
xchg
mov
out
arpl
movsb
xchg
cmpsl
lea
clc
sbb
and
dec
icebp
scas
rcll
stc
inc
cmp
pushf
insl
addr16
push
out
cltd
mov
js
sti
xchg
dec
mov
fdivp
aam
sub
in
push
xchg
ja
rcr
aam
iret
pop
loop
fwait
push
or
xor
clc
or
popa
xchg
lods
loopne
dec
fiadds
xchg
gs
aaa
outsl
cmp
jp
mov
divb
movhps
dec
fists
cli
fucomi
jmp
xchg
add
push
xlat
stc
pop
or
lret
or
in
in
adcl
sub
add
arpl
int
popf
mov
jmp
jl
or
mov
popf
imul
addb
pop
insl
mov
je
push
rcll
decb
mov
push
insl
arpl
not
or
test
xchg
push
fisttpll
jnp
xlat
ret
pop
xor
arpl
or
test
aaa
dec
mov
movsl
sub
adc
adc
mov
in
addr16
filds
adcb
hlt
popf
mov
xchg
stc
jnp
test
xor
sub
das
pop
aaa
mov
xchg
adc
mov
int3
jns
push
jge
rcrb
pop
jecxz
add
aaa
mov
push
xor
cmp
cmp
inc
loop
les
dec
movsl
mov
test
xchg
mov
cltd
cmp
add
out
inc
xchg
ds
xor
leave
pusha
daa
xchg
push
fwait
call
mov
fisubs
cli
push
lock
or
mov
sub
sahf
cwtl
int
ror
mov
sub
out
nop
cmp
xlat
jmp
push
jbe
and
cld
mov
fwait
push
insl
in
and
mov
sbb
push
mov
je
aam
inc
inc
fsts
mov
xor
add
xchg
movsl
jp
pusha
or
sar
cmpsb
das
mov
or
movsl
push
mov
push
jl
lret
test
mov
shl
fldenv
adc
sbb
les
in
pop
cmp
mov
ficoml
jle
lods
nop
pop
ficomps
jnp
xchg
stos
jae
pop
fmull
sahf
icebp
mov
push
test
push
pushf
arpl
and
add
mov
jnp
leave
lret
xor
cld
scas
cmc
test
loopne
mov
les
jns
jp
sub
andl
xor
test
mov
push
xchg
popf
sub
call
push
or
xor
test
xchg
cmp
outsb
sub
adc
shrl
jb
cmpsl
cmp
and
inc
nop
andl
jb
inc
xchg
shrl
push
in
mov
fildl
fnstenv
xchg
scas
fldt
push
fiadds
cli
cmpsb
lea
repnz
mov
and
fwait
xchg
daa
cmp
push
mov
rcrb
add
jnp
push
lods
jge
test
mov
gs
jbe
aad
mov
js
ret
test
out
mov
into
outsl
xor
out
dec
sub
rolb
enter
idivl
cwtl
xchg
pop
cli
pop
xchg
adc
push
pop
outsl
fdivrl
pop
cmp
outsb
dec
adc
mov
pop
fimuls
cwtl
adc
hlt
call
test
lods
push
cmpsb
out
jge
adc
jmp
mov
fs
jno
std
dec
mov
test
add
call
movsb
das
loopne
mov
sub
lret
jae
jecxz
xchg
lret
outsl
jnp
fwait
shlb
mull
aas
sbb
adc
adc
dec
push
inc
test
mov
jo
test
or
es
jne
cli
xchg
mov
push
sub
push
mov
ljmp
pop
or
sbb
cmp
sbb
dec
call
bound
arpl
jae
xorl
daa
jmp
mov
mov
mov
call
add
repnz
dec
pop
mov
stc
xchg
jge
mov
addl
adc
rorb
sub
xchg
sbb
sahf
sbb
add
mov
jae
dec
cmp
sub
testl
movsb
loope
negl
jecxz
pushf
daa
ret
dec
call
mov
push
pusha
aam
jo
inc
fmulp
inc
inc
repnz
lods
fstps
xor
and
xchg
adc
push
xchg
add
andb
lods
aas
call
cmp
out
rcr
jecxz
or
xchg
mov
dec
lcall
mov
cmc
sub
stos
pop
cwtl
popf
push
push
mov
jp
test
jp
adc
ss
lds
push
push
mov
dec
jge
pop
movsl
mov
xchg
mov
lret
sbb
push
sbb
or
iret
mov
pop
testl
inc
outsb
xchg
jo
pop
stos
call
sub
add
jg
fmull
xchg
test
mov
and
jmp
adc
sbb
pop
and
std
dec
out
cmpsl
jge
pusha
or
pop
dec
jecxz
fstpt
mov
mov
pop
fbstp
jle
popa
daa
mov
jb
stos
adc
pushf
sbb
push
adc
test
cmp
push
cld
insl
test
es
test
jg
repz
sbb
nop
or
add
jbe
jg
je
loope
inc
adc
inc
push
data16
add
jo
in
xor
fsts
jno
lods
sbb
xor
cmc
xor
dec
lret
push
es
add
push
fisubrl
push
inc
rcrl
fs
jmp
imul
mov
dec
xor
xor
xchg
shl
mov
mov
jmp
xchg
lock
testl
lahf
aam
dec
cld
or
lods
mov
adc
push
call
lock
xorb
lahf
outsb
mov
sti
mov
jp
jno
repz
mov
xchg
imul
jbe
leave
fists
leave
fnstenv
xor
mov
push
add
ret
pop
dec
pop
aaa
pop
inc
mov
mov
dec
mov
repz
xor
sti
xchg
popa
push
adc
lret
or
enter
push
jb
lods
push
scas
iret
pop
into
or
cmc
scas
jle
popa
jle
ret
jb
outsb
add
fisubs
pop
mov
push
inc
add
fsubr
outsl
jnp
les
fcmovb
jns
idivb
fiaddl
cmp
rcrb
fnstenv
sbb
lret
inc
mov
add
popf
xchg
add
mov
dec
subb
xor
jo
mov
push
cmc
fldcw
pop
dec
xchg
mov
add
rol
xor
sbb
cltd
and
ret
or
push
lods
xor
insb
scas
out
fcomps
mov
sub
push
pop
xchg
dec
pop
add
cs
jnp
pop
test
jmp
out
dec
stc
aaa
jle
xorb
leave
pop
aad
cmp
outsb
mov
into
pop
pop
sarl
mov
push
sti
rorb
cltd
arpl
jl
test
cmpsl
xchg
push
aad
jne
mov
cmp
cli
cmp
rcll
mov
mov
scas
push
jmp
push
dec
aas
mov
pop
dec
mov
jmp
pop
xchg
out
mov
fwait
lcall
aas
xlat
ljmp
pop
sub
cltd
dec
frstor
jo
jb
fnsave
and
test
mov
fdivrs
repnz
or
hlt
mov
xor
xor
aaa
fildl
xor
lods
outsl
sbb
add
xchg
jns
outsb
adc
movsl
pusha
or
lret
cli
and
aaa
dec
mov
lahf
and
sbb
inc
cmpsb
dec
jae
mov
cmc
xchg
aam
scas
lret
sti
iret
push
jb
mov
pushf
jl
mov
stos
dec
out
inc
cmc
inc
stos
mov
push
mov
les
add
jbe
ss
bound
mov
out
sahf
daa
inc
hlt
in
movl
rorl
les
ret
jg
mov
loop
dec
push
cmp
fst
popa
or
mov
jecxz
js
adc
add
add
fists
push
stc
adc
jno
mov
or
jg
xor
loope
addr16
in
and
or
xor
insb
sub
hlt
hlt
ja
sbb
mov
fisttpll
hlt
xlat
jle
and
mov
adc
xlat
int
mov
ret
jle
dec
ljmp
push
dec
pop
insb
dec
inc
xchg
clc
mov
xor
adc
and
sbb
jnp
xchg
dec
and
ds
jge
popf
imul
sar
insb
rcr
mov
inc
xchg
dec
es
arpl
fdivs
push
mov
fidivl
pop
pop
outsb
cltd
pop
mov
push
pop
fists
sub
and
mov
lods
sbb
shrl
sbb
dec
movsb
js
push
imul
mov
jnp
cmpsl
aam
sbb
push
dec
les
add
lods
fnstenv
mov
test
add
orb
jne
repnz
psadbw
fidivrs
xchg
div
std
inc
add
mov
fisubs
mov
push
rol
jbe
jmp
out
mov
scas
mov
push
into
cld
push
add
fcoms
cltd
shlb
mov
and
xorb
push
lods
push
and
dec
fnsave
fistpll
adc
ret
fdivrl
nop
std
sbb
out
sub
pop
pop
dec
dec
mov
sbb
popf
lods
mov
mov
je
and
add
inc
shld
xor
pop
bound
push
xor
stc
test
pusha
enter
mov
adc
jo
xchg
hlt
push
mov
pop
enter
inc
mov
inc
int3
jmp
xorl
repnz
push
cmpsl
fisubs
mov
push
lret
test
or
jnp
mov
shll
mov
pop
pusha
fisttpl
inc
lcall
inc
lods
jmp
inc
scas
mov
mov
insb
inc
lahf
cmp
inc
jbe
stos
push
popf
mov
ret
xlat
sub
cmpsl
cmp
scas
addr16
mov
sbb
nop
pop
inc
inc
adc
jne
divl
mov
adc
add
or
jecxz
insb
inc
cmp
mov
pusha
mov
dec
pop
sbb
pop
adc
mov
adc
push
dec
mov
jg
xlat
cmc
mov
inc
cltd
add
call
sbb
clc
xor
push
test
pushf
jb
xchg
outsb
mov
sbb
adc
jne
test
and
shrb
clc
pop
jge,pn
xchg
cmc
insl
pop
loope
sub
inc
imul
icebp
rcrb
xchg
adc
lea
nop
xlat
add
ds
jb
jl
insb
out
mov
cs
pop
xchg
xor
cmp
mov
mov
adc
stos
jl
sub
cltd
inc
sub
in
push
inc
enter
dec
insl
inc
inc
sahf
and
adc
pop
ds
adc
movsb
mov
add
scas
jg
fmuls
subl
lock
xor
loopne
sbb
jbe
sqrtps
inc
cmp
and
out
jns
test
repz
in
and
pop
cmpl
mov
lea
imul
xor
sbbb
lea
and
imul
into
invd
ja
mov
sarb
mov
push
test
push
xor
xor
gs
inc
gs
sbb
in
mul
call
inc
fs
push
in
pushf
xor
cmpl
cltd
jle
hlt
and
cs
imul
movsb
sarb
add
aaa
popf
stc
ljmp
lea
xchg
cwtl
pop
push
push
in
mov
or
cmp
idivl
insl
adc
scas
call
ds
sahf
repz
test
inc
add
sbbb
or
mov
jmp
xchg
mov
push
mov
jmp
mov
mov
jns
and
testb
sub
enter
fisubl
and
and
cmp
adc
dec
ffreep
sub
cmp
in
xchg
mov
push
enter
dec
lods
lret
mov
pop
adc
xchg
outsl
fcoms
sarl
jg
sub
outsb
push
and
insb
std
nop
jns
dec
and
lret
dec
cmp
inc
movsl
mov
rcl
pop
pop
orb
mov
popa
in
xchg
dec
enter
lret
cmp
in
loopne
push
nop
out
xchg
mov
sbb
and
xlat
xor
adc
add
lret
and
push
push
mov
mov
js
lcall
iret
cld
les
and
mov
ret
push
sub
inc
sbb
loopne
leave
jp
divps
in
stos
mov
mov
fists
sti
lret
and
jns
testl
push
push
inc
ss
into
inc
pop
fwait
jb
fbld
inc
adc
shll
or
outsl
push
pop
cmpsb
xor
std
mov
xor
js
dec
cmp
das
sub
repnz
fstl
mov
mov
jmp
adcl
pop
out
jne
inc
imul
out
add
inc
pop
push
enter
into
fdivl
push
aaa
mov
xlat
cmp
call
cmp
clc
adc
mov
aas
repz
push
pop
fisttpl
dec
mov
lret
cltd
std
dec
lods
mov
pop
sar
xchg
mov
fmulp
std
dec
mov
push
lds
insl
ljmp
and
ja
push
in
cmpsl
add
jne
sbb
or
mov
mov
insl
add
sarb
aas
sbb
div
cmp
popf
stos
add
xor
or
jge
xchg
adc
inc
mov
sbb
cmp
icebp
cmpsb
pop
outsl
ficoms
fcomi
loopne
and
pop
mov
gs
fadd
sbb
int3
in
mov
lret
clc
lret
in
or
sub
into
jne
jge
je
arpl
lds
cmp
stc
or
into
es
fs
cmpsb
cmp
pop
imul
pop
call
sbb
jae
mov
scas
adc
sahf
sub
test
jmp
cld
lock
movsb
adc
sbb
mov
sti
fdivl
ja
test
mov
jg
jge
mov
out
stc
loop
inc
pop
dec
hlt
fdiv
mov
cmc
stc
cmp
push
ret
jo
fwait
sub
lret
mov
pusha
fnsave
into
test
mov
sbb
pop
mov
jns
sub
cmp
enter
bound
pop
or
cmpsb
xchg
gs
adc
testb
jge
pop
pop
ja
mov
ret
lret
inc
pop
mov
lret
out
xchg
lahf
adc
outsl
jl
add
or
shrl
cmp
and
push
bnd
stos
add
xchg
cmpl
test
lret
pop
xchg
lea
xchg
xchg
out
and
inc
mov
jmp
mov
outsb
stos
out
xchg
fidivl
mov
insb
jno
leave
int3
pop
adc
pop
idivl
aad
add
mov
xlat
adc
imul
loop
in
rorl
mov
inc
lods
repnz
push
testl
mov
lods
fcoml
stc
popf
mov
popf
jmp
xchg
pop
lret
cmc
dec
es
ljmp
mov
lds
ret
cmpsb
fiaddl
xchg
sbb
dec
filds
insb
popf
bound
cld
xchg
andl
or
jp
leave
jg,pn
imul
cs
mov
enter
xchg
cmp
push
mov
jnp
cmp
repnz
pop
test
mov
movsb
and
jno
test
shll
push
pop
inc
or
fsubl
mov
into
bound
sub
outsb
shlb
mov
push
adc
int3
and
mov
xchg
icebp
nop
in
sbb
push
mov
mov
das
std
cltd
add
cmp
in
das
fwait
xor
stos
icebp
aas
lds
leave
loop
std
lcall
in
xchg
test
sbb
mov
cmp
pop
jecxz
push
shl
out
data16
mov
push
jne
insl
jg
and
aad
fmull
ficomps
push
cmpsl
cwtl
std
jge
pop
fwait
in
pop
mov
pop
rolb
mov
mov
adc
mov
cmpsb
pushf
dec
pop
jb
test
mov
fimuls
mov
dec
in
mov
sbb
sbbl
xor
test
decl
lods
push
popa
fcoml
subb
xchg
pop
sub
ja
or
push
pop
daa
andl
enter
adc
aad
jge
les
daa
aas
inc
scas
movsl
cmp
fs
inc
sahf
js
sti
and
int
jnp
shr
mov
xchg
cmp
inc
insl
clc
add
push
imul
fcoms
mov
testl
clc
push
adc
fimull
popa
clc
push
adc
add
or
andl
jne
cmp
or
in
inc
mov
jns
loope
iret
dec
rcrb
rol
in
fucomip
jo
inc
dec
pop
mov
push
dec
into
mov
outsb
cwtl
adc
mov
clc
outsb
iret
push
cmpl
cld
in
stos
mov
mov
xchg
mov
pop
add
jle
jg
mov
xchg
push
gs
int3
mov
mov
cli
lea
cld
xchg
or
pushf
sub
sbb
pusha
dec
fidivl
jb
sub
xchg
addb
lahf
clc
pop
fisubs
inc
sbb
sti
mov
loopne
mov
pusha
aas
dec
add
xchg
fstpl
aaa
ds
fwait
imul
gs
add
sub
fsubrs
ret
mov
mov
cmp
xor
push
xor
cwtl
mov
bound
mov
sbb
jge
jmp
sbb
in
jp
adc
jo
sbb
hlt
add
add
loop
pop
and
leave
mov
or
pusha
cmp
sarl
push
les
insl
push
push
sub
cmp
test
push
hlt
enter
ss
es
stos
in
push
insl
fidivs
filds
cmpxchg
fnstenv
push
mov
ljmp
mov
xchg
push
push
push
add
lcall
shrl
mov
sub
test
ss
mov
loopne
mov
lock
in
jg
inc
cltd
test
lret
cmp
scas
fwait
mov
sahf
jecxz
dec
icebp
fucomip
and
jae
inc
xor
repnz
aaa
mov
fwait
shl
daa
loope
jae
or
jae
test
scas
dec
push
nop
pop
lods
roll
push
jnp
pop
popf
xor
stos
rcll
cmp
cwtl
push
push
mov
xor
iret
pop
fnsave
add
andb
push
cld
iret
push
pop
and
int3
movsb
mov
push
out
sub
push
lea
fnsave
jg
ror
mov
inc
xchg
mov
mov
clc
or
pop
loopne
jno
pusha
xchg
icebp
jo
adc
cmpb
dec
or
mov
fldcw
mov
pop
pop
adc
sbbl
out
cwtl
or
aaa
jge
in
push
incl
fsts
dec
or
hlt
mov
cli
or
push
outsb
popf
sub
fidivrs
scas
decl
xor
xor
xchg
aam
dec
push
mov
data16
dec
pusha
pop
cmp
jbe
dec
mov
clc
loop
imul
sbbl
xor
pop
jecxz
sbb
adc
push
lock
rorl
xlat
mov
test
or
push
mov
jo
pop
addr16
push
inc
test
fsubrs
mov
adc
lds
xor
daa
inc
leave
adc
data16
xchg
add
popf
iret
sub
sahf
in
pushf
push
xor
lds
cld
xchg
cmp
mov
loop
xor
movsb
mov
xchg
adc
xchg
jae
inc
pop
ja
adc
ja
xchg
fcomps
mov
shll
mov
push
out
mov
xchg
rcll
or
mov
negl
adcb
pusha
mov
cmpsl
adc
fsubrs
negl
mov
dec
sub
movsl
je
xchg
scas
mov
mov
aas
frndint
push
or
int
add
and
mov
push
xor
negl
push
scas
incb
imul
or
roll
scas
push
addr16
scas
pushf
xor
lds
xor
push
xchg
ss
shrb
sbb
push
ret
ret
mov
xorb
test
xor
push
scas
lret
cmpsl
hlt
push
xchg
xor
mov
or
mov
adc
test
cld
xchg
jg
lret
mov
push
mov
out
xor
xchg
aas
and
mov
jmp
pop
pop
fs
lods
fstpt
inc
push
lret
jne
push
out
enter
or
subl
dec
sbb
push
stos
fisubrl
clc
test
mov
cs
mov
mov
lock
sbb
hlt
mov
push
add
mov
and
insb
loope
inc
fnstenv
inc
cmp
int3
arpl
mov
or
fwait
ljmp
out
push
inc
or
lcall
mov
inc
jno
inc
pop
xor
xchg
dec
jns
stc
xor
and
es
call
sub
push
push
dec
jns
xor
test
cmp
cltd
xor
scas
inc
cvtps2pd
xchg
sbb
push
or
jb
jecxz
mov
add
sub
dec
aaa
and
out
push
mov
mov
insl
mov
sbb
jbe
test
pop
outsb
pusha
push
hlt
pop
movsb
gs
mov
add
push
fmuls
pop
jb
mov
xchg
sub
add
mov
mov
imul
loop
lock
jo
enter
push
mov
xchg
test
ret
mov
pop
adc
sub
cmp
filds
lret
cmp
enter
xorl
jae
ds
scas
jae
rolb
pop
insb
enter
lods
jo
and
out
add
into
mov
mov
pop
or
test
fsubrl
insl
add
sub
movsl
mov
mov
dec
push
sbb
lods
jmp
jbe
add
lods
dec
mov
lods
incb
pop
cmp
imul
xchg
dec
out
test
xor
hlt
and
inc
jl
rclb
cmp
repz
fwait
enter
repz
push
mov
movsb
mov
mov
imul
movsb
dec
in
mov
imul
mov
out
rcrb
mov
and
lea
lds
fidivs
loopne
in
fisubs
lret
repz
dec
pop
fists
adc
push
sub
mov
fildl
jp
pop
push
jl
jg
push
ds
dec
out
dec
and
jbe
push
inc
cmp
xor
ja
scas
cmpsl
rcrl
mov
ss
xchg
inc
nop
cmp
cmp
mov
movl
pushf
xor
jne
into
scas
mov
xor
pop
push
test
out
lea
jle
gs
lods
xchg
repz
push
int
lds
pop
xchg
daa
insb
jecxz
sahf
dec
pop
lods
stc
and
fstpl
xor
add
lods
enter
int
orl
or
sub
ja
inc
ja
mov
mov
or
mov
lock
ret
jle
and
inc
test
mov
xchg
jecxz
adc
dec
cwtl
pop
add
pop
lock
xchg
add
add
outsb
sti
xchg
push
mov
mov
jno
ret
sub
aaa
fisubrl
rolb
aad
jecxz
hlt
aad
mov
into
scas
shl
jl
shlb
add
push
push
xchg
lods
scas
xchg
fbstp
icebp
mov
dec
dec
into
push
cmp
mov
and
or
data16
fildll
adc
cmpsb
ret
fdivl
in
mov
xor
xchg
and
mov
mov
cmp
xchg
and
sub
dec
xchg
fldl2t
rorb
jmp
ja
lock
test
test
mov
inc
mov
inc
rep
imul
shlb
jne
dec
jnp
mov
push
inc
ret
mov
dec
cmp
sub
push
dec
xor
dec
loopne
xchg
push
lods
mov
das
mov
shll
subb
jne
cmpsw
rcrl
dec
dec
mov
xchg
inc
fbstp
arpl
or
jnp
pop
sub
xchg
and
sbb
data16
rcrb
dec
and
jle
cmp
push
cmp
loop
sbb
xchg
mov
adc
sbb
sub
cld
lcall
pop
lret
mov
cld
out
popa
andl
es
push
fbld
out
int3
inc
aaa
out
cli
pop
das
jl
stos
outsl
sbb
and
lret
fidivrs
adc
push
in
xlat
insl
cwtl
test
pop
mov
mov
subl
dec
mov
iret
or
rorl
outsb
xchg
es
sbb
cmp
cmpsb
pop
inc
inc
adc
xor
fs
cs
dec
add
loop
dec
in
call
sub
test
lret
mov
loopne
lock
jg
or
mov
or
imul
test
call
pop
jg
adc
or
loope
pusha
adc
inc
std
xchg
mov
dec
out
dec
jle
int
jmp
jmp
outsb
push
jl
or
xor
shll
xchg
out
lods
or
in
sub
mov
leave
sbb
cli
and
jnp
mov
enter
fldt
out
insl
cmp
push
jo
imul
add
movsb
adc
and
xchg
mov
int3
inc
jb
push
jo
lea
sbb
mov
call
push
in
loopne
data16
shl
adc
or
jb
aam
jge
and
inc
add
sub
push
je
cltd
cmpsb
mov
and
popf
jle
pop
daa
xchg
mov
xchg
cmpsb
in
les
sbb
iret
adc
cmc
js
aam
cs
jg
jg
fdivl
push
int3
cmpsb
fidivl
sbb
xchg
dec
mov
sbb
push
dec
lahf
into
xchg
xchg
add
pop
mov
mov
ja
xor
outsl
imul
dec
nop
dec
cmp
mov
xchg
out
jge
mov
fucomi
stos
push
das
jmp
aad
gs
stos
xchg
movsl
pop
adc
popf
mov
xor
jl
test
push
pop
insb
ficompl
add
sub
xchg
pop
mov
sbb
js
aam
int3
adc
in
xor
push
jae
xchg
mov
fnstsw
adc
in
or
iret
fdivs
dec
adc
in
hlt
std
mov
das
pop
ficoms
cmpsb
push
mov
or
aaa
dec
and
outsl
lock
mov
lock
push
iret
fnstenv
push
subl
mov
cmpsb
pcmpeqw
jo
push
xchg
stc
into
push
loope
jo
or
jle
repz
and
mov
notl
cmpb
and
adc
out
outsl
xchg
mov
push
incb
inc
dec
dec
arpl
fimuls
cmpsb
std
cmp
lret
mov
jmp
cmp
cmc
xor
adc
pop
lock
xor
mov
or
sub
pop
adc
sti
xor
mov
test
fisubs
cli
cmp
xor
xor
clc
lcall
xor
loopne
insl
cmp
sub
dec
in
jl
cmp
sub
int3
outsb
aas
das
add
nop
sub
stc
out
jns
jecxz
mov
jle
inc
out
scas
sub
sahf
xorb
and
push
jae
fstps
jmp
es
cmp
xorl
aaa
jae
cmp
mov
js
lods
mov
or
dec
fcomps
cwtl
sbb
pop
cli
fsts
sbbl
or
jp
aad
mov
adcb
sbb
pop
jns
jnp
fs
hlt
adc
jnp
cmpsl
jp
pop
adc
cmp
rcr
push
call
add
jo
dec
adc
dec
xor
insl
add
adc
mov
xchg
mov
mull
test
mov
push
sbb
add
and
and
pop
mov
fidivs
jmp
cli
notb
test
or
repz
call
pushf
push
or
cmp
xchg
roll
sbb
fwait
in
test
lods
xor
ficoms
fsubr
cmpl
lock
enter
out
ja
sahf
mov
xor
fsub
pop
fsubp
stc
lock
pushw
outsb
faddl
loop
out
imulb
mov
xchg
stos
and
fmuls
lea
test
cmp
jne
and
fstps
inc
pop
lret
in
rclb
dec
dec
cmp
mov
insl
inc
sbb
test
fisttpll
jno
push
hlt
cmp
xchg
clc
imull
xchg
adc
mov
addr16
inc
imulb
loop
pushf
enter
sbbl
jb
data16
stc
sbb
sbb
aad
hlt
pop
jl
mov
inc
jmp
jbe
sbb
aad
or
mov
lds
jle
lret
xlat
daa
jnp
adc
cmp
sbb
faddl
movsl
cmp
clc
pop
les
jns
jnp
sbb
inc
popf
or
aad
sub
daa
ss
frstor
mov
pop
pop
fs
cmp
add
add
or
sub
out
repz
mov
mov
xchg
js
mov
pop
cmc
sahf
outsb
loope
lcall
aad
outsb
jle
adc
popl
test
test
push
xor
pop
mov
or
push
mov
add
adc
jle
fistps
push
arpl
iret
xchg
pop
mov
fimull
jle
xlat
sbb
cltd
fwait
jg
cli
daa
flds
dec
add
push
dec
dec
mov
std
stc
dec
mov
sbb
test
add
mov
imul
pop
lock
sub
dec
and
mov
leave
push
pop
sub
xorb
or
aas
sub
jo
dec
dec
flds
mov
jmp
aas
aam
sbb
dec
push
outsb
push
data16
stc
xchg
xor
pop
je
dec
mov
loopne
insl
push
dec
in
test
xchg
push
ja
outsl
sub
sahf
push
out
dec
jmp
jle
and
popf
push
ret
insl
add
negl
loope
adc
imul
int3
or
mov
lahf
cmc
cmp
shr
arpl
clc
aas
add
cmpsl
pop
das
cli
add
and
insl
adcb
sub
adc
dec
lahf
xor
outsb
xchg
mov
xorb
xchg
pop
xchg
sub
pop
call
fistpl
hlt
addr16
dec
popf
xor
out
xor
adc
jnp
sub
es
lret
inc
inc
fmull
arpl
cmp
popa
enter
fisubl
imul
fsubr
orb
les
sarb
lods
add
icebp
cmpsb
mov
lret
in
pop
loopne
int
mov
push
cmp
rcrl
mov
ret
dec
and
imul
sub
lods
inc
stc
in
fsubr
out
sbb
pusha
dec
jmp
imul
insl
out
outsl
xor
mov
adc
addb
aas
loop
xchg
adc
sub
push
xchg
cld
lret
and
mov
mov
dec
fsubrs
int3
xchg
int
mov
or
test
xor
sub
sub
xchg
inc
lods
ret
out
jb
push
in
mov
mov
fidivs
inc
hlt
iret
cmp
mov
ss
lock
pop
prefetch
lods
sub
test
mov
xchg
jno
fisubrs
mov
push
or
test
xchg
sub
mov
pop
sbb
xchg
insb
xor
outsb
dec
cmpsb
mov
push
inc
das
fnsave
xor
fwait
movsb
xor
pop
stos
jno
xchg
pop
insb
or
cmpsl
xorb
test
cmp
cmpsb
mov
inc
mov
ret
jae
mov
gs
jmp
sub
mov
mov
int3
mov
gs
inc
insl
cld
subl
mov
adc
pop
fadds
jne
pusha
pop
out
mov
lcall
test
ss
in
adc
add
arpl
out
les
repz
mov
mov
clc
repz
in
std
mov
jp
lds
cmp
mov
mov
mov
repz
add
out
out
inc
aas
call
add
xor
pop
pop
lock
dec
push
jmp
lods
inc
mov
jb
push
xor
or
pop
cmc
dec
mov
ret
rcr
daa
jmp
call
jns
xlat
out
repnz
arpl
jecxz
inc
inc
out
cmpsl
mov
fbld
push
sar
mov
popf
roll
cmp
lods
js
cmc
mov
dec
pop
pop
xor
orb
iret
or
xor
lods
or
xor
scas
push
or
cmp
repz
bound
pop
dec
fwait
and
sub
out
jp
jnp
sub
leave
aam
add
push
sub
or
daa
insb
pop
loop
push
aam
inc
repnz
int3
xchg
dec
retw
dec
pop
fwait
dec
pop
xor
xchg
adc
and
aad
pop
ja
jecxz
jae
das
nop
mov
out
aam
dec
cmp
cmpsb
and
adc
arpl
xchg
mov
fiadds
insb
leave
bnd
repz
pop
xchg
push
into
insb
decl
pop
push
popa
test
rorl
pop
bsf
inc
fldcw
jns
jb
or
jb
bound
jnp
mov
xor
lcall
sbb
ds
in
push
out
call
std
sahf
xorl
inc
cmp
jecxz
sti
jno
out
aas
push
call
jne
xor
jp
jb
sahf
rcr
jno
roll
out
cmpsb
sub
ss
shll
inc
scas
std
xchg
add
shrb
fs
call
in
mov
cli
repz
flds
test
jb
jne
jno
xchg
pop
addr16
aaa
xchg
imul
cmp
pop
push
test
lds
and
sti
add
std
xchg
mov
test
adc
xor
enter
jmp
or
xor
or
ja
push
jmp
pop
in
jo
aaa
mov
sbb
pop
test
mov
in
xchg
inc
aaa
shrb
je
test
lock
cs
cwtl
notl
pop
mov
sbb
dec
into
loop
or
aam
cmp
xchg
les
aaa
gs
push
test
jmp
mov
inc
xchg
bound
pop
and
mov
outsb
inc
fistpll
cmp
mov
cmc
xchg
popa
inc
dec
push
stos
jmp
fdivs
push
mov
sub
add
gs
or
xchg
xchg
adc
out
jg
push
popf
mov
jge
mov
lds
mov
xchg
dec
sbb
cmpsl
add
push
outsb
lock
testb
dec
mov
push
inc
mov
lods
add
inc
out
aam
testb
push
ss
mov
pusha
aam
rol
jg
repnz
into
jne
lcall
push
or
gs
imul
dec
push
cli
xchg
fdivl
mov
repnz
sub
cmpsl
jns
cwtl
mov
add
fisubrl
or
cmp
jbe
adc
sbb
mov
stc
test
sahf
leave
stc
or
mov
dec
pop
lock
push
inc
imul
inc
inc
xor
inc
push
pop
mov
pop
push
test
lea
cs
jo
jl
cs
clc
lahf
mov
dec
es
jg
jecxz
stc
movsb
mov
and
aam
fisttpl
mov
pop
mov
pop
or
add
ret
je
push
ret
sar
movsb
sarl
loop
push
jecxz
jb
inc
rcrb
pushf
ret
sbb
sub
stos
jmp
mov
out
xor
cmp
mov
add
jmp
adc
push
imulb
scas
mov
aas
mov
negl
scas
in
jge
es
fstl
popa
add
xchg
sbb
add
xor
mov
testb
cmp
jbe
sbb
ret
xchg
pushf
insb
xchg
mov
pop
inc
cmpsl
pusha
scas
jl
or
jns
push
xchg
mov
push
adc
push
xchg
sbb
push
dec
rcl
shll
sbb
mov
in
pushf
mov
adc
daa
mov
dec
lret
adc
dec
pop
daa
data16
out
das
dec
inc
xor
mov
imul
or
repnz
pop
jns
arpl
cs
mov
add
pop
pusha
xsha1
cmpsb
mov
pop
and
sub
sbb
jecxz
pop
mov
lea
jge
mov
mov
int
fxch
and
adc
jmp
test
mov
inc
fs
and
sahf
in
adc
loope
cmpl
das
sbb
add
lds
xlat
or
push
jo
nop
xchg
js
or
cmc
cmp
push
cwtl
lods
push
cmc
mov
cmp
aaa
loop
adc
sub
lods
sarl
lcall
in
and
xchg
fistl
sbb
xor
jecxz
mov
aad
jg
ja
stos
pop
dec
push
mov
jmp
and
jb
mov
outsb
cmp
in
lock
out
jne
sub
stc
fsubrl
mov
hlt
loope
jne
pop
repz
jg
xchg
pop
mov
sbb
jg
js
xor
push
inc
stos
pusha
neg
add
xchg
mov
pop
in
push
test
popf
mov
ja
mov
cmp
adc
hlt
repz
cmp
lcall
mov
fcomi
ja
mov
orl
jecxz
movsb
push
lcall
js
push
mov
push
xchg
or
push
cmp
nop
shll
jb
jge
xchg
and
lret
mov
pop
push
call
pop
and
ja
cmc
mov
push
frstor
int
or
xor
sarl
xchg
adcl
or
xchg
cltd
shll
mov
jmp
into
adc
sbb
fisubs
push
lcall
stc
test
jne
and
xchg
clc
or
stos
jne
aam
add
push
cld
loopne
cmpsl
push
and
mov
in
adc
or
add
dec
lret
sbb
ss
mov
imul
mov
wrmsr
fstpt
pop
push
in
mov
icebp
mov
dec
js
rcrl
aam
jnp
dec
pop
sbb
fidivs
test
cld
sbb
sbb
and
or
mov
xchg
lock
push
incl
adc
sub
in
pushf
adc
xchg
xor
jle
and
adc
add
in
pop
mov
or
mov
inc
sub
shl
bound
int3
jo
sub
or
js
and
loope
and
ds
lods
js
sbb
pop
dec
mov
mov
insl
xchg
test
in
pop
mov
rcll
cmp
lods
dec
xchg
mov
lahf
ja
movsb
repnz
lahf
fistpl
add
icebp
lods
sub
sbb
xor
incb
stc
cwtl
sti
leave
enter
adc
inc
inc
call
adc
adc
pop
sbb
sub
scas
repz
push
insb
sub
pop
mov
shl
int
add
or
gs
cmp
cmpsb
cmp
xchg
out
dec
or
sub
push
cmp
sub
inc
ret
pop
js
cmp
cmp
decb
push
outsl
in
andl
or
cmp
mov
std
xchg
test
adcb
pop
call
sbb
lcall
cwtl
push
test
cli
sarl
xor
test
scas
mov
ja
andb
stos
sahf
ja
jo
jp
es
pop
dec
add
sbb
adc
call
mov
xor
and
cltd
hlt
stos
xor
push
jne
dec
imul
jo
xchg
mov
sbb
pop
push
lods
shl
cmp
repz
inc
pop
pop
ja
jp
and
dec
cmp
or
out
repnz
ds
mov
pushf
jle
hlt
adc
push
mov
bound
xchg
xchg
push
mov
adc
imul
mov
push
xchg
test
in
inc
jbe
xor
loop
aad
sahf
xor
jno
mov
lret
adc
push
xor
aad
jecxz
popa
jg
xchg
sbb
lds
push
xchg
out
test
loop
xor
lds
gs
jo
arpl
sbb
out
rcll
or
push
mov
scas
iret
jbe
jge
inc
sub
fcomip
inc
frstor
mov
fs
xorb
mov
add
shr
out
jg
jge
mov
add
inc
out
in
int
jo
push
inc
dec
dec
imul
mov
out
popa
jne
mov
adc
mov
xchg
inc
mov
shll
mov
test
fwait
lret
mov
jmp
stc
sbb
fwait
push
gs
adc
testb
cwtl
shll
ljmp
lock
or
cmpsb
lret
and
push
in
sub
mov
iret
and
cmp
ja
das
mov
out
ret
mov
outsb
xor
dec
push
imul
mul
adc
stos
lcall
jne
lret
inc
popa
int3
mov
lock
add
dec
and
lods
xor
test
not
xchg
daa
mov
shrb
insl
pusha
test
and
xchg
popf
dec
loop
push
mov
mov
mov
jo
push
test
xchg
mov
stos
fsubl
fistl
fdivl
int
pop
ljmp
ljmp
dec
add
pop
adc
mov
jb
inc
xlat
daa
push
mov
jns
xchg
xor
fldenv
std
xchg
or
movsl
sbb
jmp
xor
jo
insl
push
cmpsb
inc
lds
adc
mov
xchg
xor
test
stos
les
dec
out
sub
lahf
aam
insl
inc
sarl
into
gs
aam
push
mov
and
test
shlb
sub
xchg
idiv
adc
xor
sbb
bnd
pop
mov
and
dec
adc
push
ds
movsl
cmp
sub
rcll
mul
stc
push
add
popa
cmpsb
pop
push
movsl
or
repnz
jecxz
adc
scas
jb
sbb
mov
mov
cmp
dec
loopne
xor
lods
popa
and
adc
testb
sbb
xor
or
movsl
mov
lcall
xchg
clc
push
cmp
push
stc
cmp
insb
sbbb
pusha
cmpsl
inc
pop
rcl
movsb
sub
jecxz
inc
loop
orl
jo
loope
loopne
testl
fcmovnb
sarl
mov
outsl
adc
inc
lds
lahf
push
aam
xchg
jle
jl
sub
jg
mov
subl
arpl
mov
mov
and
mov
mov
mov
out
cs
pop
sti
xchg
xor
mov
cld
add
pop
push
xor
leave
mov
xlat
mov
ret
push
dec
and
inc
aad
lret
iret
mov
push
mov
jnp
fists
cltd
inc
add
xor
loopne
cld
aas
adc
test
out
cmp
mov
jmp
clc
xor
jmp
or
imul
out
xchg
mov
sbb
mov
mov
adc
shl
xor
test
cwtl
das
or
fnstenv
push
sub
and
or
clc
add
stc
into
pop
pop
jb
out
jg
lret
test
ficoms
pop
mov
xchg
adcl
fisttpl
ljmp
jmp
push
sbb
out
and
lods
cmpl
pop
jmp
bound
mov
shll
cmp
mov
cmp
jge
jo
mov
lea
test
insb
pop
and
inc
hlt
xchg
fs
push
adc
aam
lods
add
pop
scas
addr16
aam
cs
xchg
in
jb
mov
push
subl
fmuls
mov
mov
cwtl
push
in
sti
into
sub
repz
sub
pop
icebp
inc
lret
scas
inc
sarl
mov
fs
sbb
push
inc
jmp
sub
cmpsl
dec
sub
movsb
sbb
jb
insl
sub
jmp
xlat
jecxz
popl
test
idivb
inc
cmc
sbb
xor
nop
xchg
movsb
cmp
fisubl
pushf
lock
cmp
mov
pop
scas
js
cmpsl
sbb
mov
mov
dec
sub
popa
ja
mov
ds
lretw
pop
and
sbb
mov
mov
lret
lods
push
push
es
or
lods
insl
pop
inc
sbb
mov
popf
lods
add
push
xchg
aas
loop
arpl
ror
jmp
xor
test
jnp
inc
inc
push
adc
mov
testb
shll
mov
les
std
insb
sahf
pop
or
push
dec
jg
and
sbb
xor
arpl
outsb
mov
pop
add
inc
std
lock
or
leave
lret
aam
std
scas
inc
pop
call
push
push
sahf
mov
cld
push
mov
out
jo
mov
and
push
fldenv
enter
cmp
scas
popa
and
xchg
or
and
mov
out
out
sub
in
sbb
fidivs
sbb
add
dec
clc
dec
pop
lret
adc
outsl
call
in
test
inc
daa
inc
fidivl
out
jo
push
loope
jnp
lea
test
divb
mov
xor
cmpsb
lock
xor
fs
insb
imul
jb
dec
sub
mulb
sbb
stos
inc
and
pop
lret
xlat
ror
cmp
fists
fstpl
shrl
cwtl
das
and
mov
rclb
sub
sbb
or
sbb
mov
and
fnstcw
bound
insl
sub
scas
fnsave
jo
es
dec
xor
dec
jb
mov
sbb
inc
lcall
and
sub
popa
ja
icebp
or
push
incl
mov
push
ljmp
cmp
lret
sbb
test
imul
xchg
incb
xor
adc
sbb
aam
jmp
mov
mov
lea
xchg
test
stc
fdiv
pop
dec
sahf
jge
xchg
cmp
or
outsb
fildl
test
cltd
in
xchg
mov
popf
mov
cmc
leave
push
sbb
push
addl
sahf
push
inc
pop
xchg
xlat
scas
jne
adc
ja
inc
sbb
data16
iret
push
dec
dec
xor
mov
adc
adc
adc
mov
jl
xor
call
push
lods
loopne
leave
jecxz
mov
leave
jne
sub
jecxz
push
imul
sub
cmp
dec
jp
inc
xchg
mov
and
stos
adc
mov
sbb
add
mov
pop
jle
push
pop
mov
dec
das
mov
lods
jne
jbe
jp
test
stc
adc
ss
jecxz
sbb
in
mov
adc
lds
pop
inc
and
ret
cmc
jg
push
call
or
les
xchg
jl
sbb
cmp
incb
scas
sahf
scas
aam
or
sub
fbstp
cltd
orl
pop
and
mov
aas
rclb
outsl
inc
pop
imul
nop
inc
hlt
cmp
data16
mov
mov
sbb
xchg
and
stc
xchg
lcall
fucomp
xchg
setnp
push
inc
xor
cltd
or
or
pop
pop
inc
orb
add
int3
cwtl
sbb
pop
mov
fistl
or
cmp
inc
pop
pop
mov
sbb
ds
call
in
clc
cmc
pop
dec
aaa
add
inc
sub
mov
mov
mov
mov
fnstenv
pop
mov
mov
ja
mov
std
jbe
stos
cmp
adc
les
adc
dec
sub
mov
popf
xor
mov
pop
mov
xchg
sbb
js
fcomps
mov
push
dec
aad
xchg
xor
xchg
pushl
imul
shl
dec
cmp
jg
inc
test
ss
lock
aam
dec
mov
xchg
and
aad
daa
pusha
mov
dec
inc
pop
lock
aas
iret
lods
xor
mov
rcrb
pop
xchg
lret
repnz
mov
mull
outsl
jp
nop
sbb
arpl
adc
lret
in
lret
insl
push
cmpsl
pop
jne
pop
jns
add
lcall
lretw
test
add
stc
leave
cmp
inc
int3
arpl
mov
xchg
lock
and
and
cmp
pop
in
inc
popf
push
cmp
mov
cli
and
loope
test
mov
jle
add
cmp
sub
popf
adc
inc
lahf
xchg
xchg
ror
sub
outsl
xchg
int
pop
mov
movsl
lea
les
loope
cld
test
scas
dec
shl
mulb
jmp
pusha
xchg
popl
xchg
push
test
sbb
push
mov
sbb
pop
loopne
rcrl
push
test
dec
stc
jge
inc
sub
mov
mov
add
mov
xbegin
xchg
out
int
rolb
ja
addr16
loope
mov
lods
fnstcw
sbb
outsl
mov
ss
jge
xchg
into
data16
fistpll
mov
pusha
ljmp
xor
popa
sub
scas
rolb
jmp
out
popl
cltd
mov
push
mov
pop
pop
pop
mov
test
sub
pop
mov
cmc
test
call
mov
aam
xor
test
arpl
mov
or
push
out
sti
mov
int
push
and
mov
ljmp
or
out
mov
xor
sbb
xchg
outsb
pop
dec
cmp
mov
aad
das
sub
aam
js
mov
movsl
icebp
mov
sub
bound
orb
ret
movsl
test
popa
addr16
mov
ret
adc
test
jp
dec
mov
sub
jbe
inc
cmp
cltd
rorl
mov
lock
loope
xor
fnstcw
lds
insb
outsl
popl
outsb
int
cmpsl
push
pop
lods
mov
popf
jmp
lret
adc
jno
es
lcall
into
mov
add
xchg
mov
lret
mov
mov
sbb
xor
adc
outsl
ja
mov
mov
ss
jnp
xchg
mov
in
push
mov
cmc
test
jmp
push
sti
popa
mov
and
or
shrl
xchg
stos
and
or
dec
jmp
fbstp
jae
movsb
lea
rorb
int3
sub
div
into
in
in
stc
push
outsl
sti
les
fidivrs
mov
daa
sub
xor
adc
push
sarb
cmpsb
call
je
imul
or
inc
push
adc
push
lods
out
jns
ljmp
cltd
cmpsl
push
add
mov
pop
mov
push
mov
icebp
lods
adc
idivb
fstpt
fadds
lods
rcrl
stos
inc
dec
repnz
das
and
push
pusha
cmp
sbb
xor
xchg
mov
imul
rcrb
iret
push
repnz
test
adc
xchg
xchg
xor
mov
test
lock
mov
sahf
or
cs
inc
pop
rcr
add
in
push
lds
in
test
pop
je
int3
jecxz
lods
push
dec
push
into
pop
pushf
jo
add
mov
les
sub
sbb
loope
rolb
mov
fstps
push
jnp
adc
xchg
and
or
icebp
shll
adcb
js
andl
xchg
xor
xchg
fucom
outsl
cli
fdivl
jne
push
cltd
sub
pop
adc
stos
test
lds
dec
mov
sub
sub
and
std
nop
push
roll
mov
call
cli
sub
ror
clc
fbld
testl
sahf
cmc
push
shrl
repnz
cmp
icebp
cli
rcrl
sub
dec
repnz
xchg
leave
dec
or
mov
movsl
arpl
ljmp
inc
xchg
jmp
je
jp
dec
mov
pop
or
pop
std
dec
rorb
pop
imul
mov
inc
sbb
iret
jecxz
dec
jnp
outsb
lods
inc
lea
lock
cmc
mov
xchg
sub
adc
loop
xor
lret
xlat
cs
loop
mov
imul
fdivl
lock
cltd
add
and
cltd
adc
xchg
sub
push
lahf
test
arpl
adc
sub
psrad
pushf
test
adc
pop
repnz
out
xchg
rorl
imul
lock
scas
xor
mov
add
cmp
inc
popf
xor
inc
xlat
push
sub
into
test
popl
lahf
mov
mov
in
adc
lcall
push
xor
push
fsubr
fcmovbe
xchg
mov
daa
test
sar
cmp
mov
into
outsl
cmpsb
repnz
mov
jp
xchg
push
cmpsl
ret
nop
subl
sub
pop
mov
call
xchg
adc
cmpb
aas
xlat
cwtl
das
or
push
outsb
outsl
push
mov
and
dec
loope
rcrb
jo
pop
push
inc
and
stc
cmp
hlt
cwtl
jecxz
and
xor
pop
push
into
dec
and
mov
dec
dec
pop
jb
push
or
cmpsb
ret
jle
add
push
call
popa
daa
aas
xchg
mov
cmp
jg
mov
cmp
sti
and
divb
mov
xchg
outsl
lea
add
sbb
fcmovb
ret
mov
push
dec
int
dec
sub
jne
jbe
pop
insb
adc
push
pop
loope
out
adc
and
ja
mov
repnz
or
sar
mov
mov
adc
nop
and
pushf
cmp
and
lds
rol
stc
imul
mov
mov
pop
bound
jp
outsb
fidivl
cli
scas
movb
inc
insb
jo
rcrl
leave
fs
hlt
scas
ret
push
imul
inc
fimull
xchg
xor
lcall
dec
sbbl
je
inc
repz
push
aaa
out
adc
cld
or
cmpsl
dec
aam
add
mov
cmp
inc
sarb
adc
sub
lret
andb
adc
push
incb
test
jne
pop
mov
pushf
bound
xchg
ret
xchg
mov
mov
fisttpl
cli
incl
sti
jmp
xchg
sbb
lcall
pop
adc
mov
enter
pop
cmp
jns
mov
bound
push
in
jns
mov
xchg
xchg
scas
mov
sbb
fildll
fcompl
add
mov
bound
fucom
or
push
push
in
lret
xor
mov
test
popa
scas
xchg
or
xor
mov
jnp
mov
jle
xchg
lods
xor
fcoml
clc
test
inc
add
inc
inc
int3
inc
adc
dec
into
in
jecxz
push
push
push
scas
std
into
sub
inc
sbb
and
ficoms
fisttps
flds
jns
addb
lcall
sub
or
jo
pop
mov
fmul
jns
sbb
into
stos
cmp
insb
lret
push
fsub
movsl
inc
sbb
lods
cmp
call
icebp
loopne
ds
cltd
pop
adc
imul
sub
mov
inc
jg
xchg
push
mov
out
mov
fsts
pop
sbb
mov
push
jae
aaa
mov
sarb
mov
pop
icebp
xchg
mov
in
test
sbb
scas
roll
sbb
and
xchg
int
loopne
les
jns
xor
jl
inc
jp
inc
inc
bound
lds
das
mov
rcl
dec
fimuls
pop
je
clc
and
inc
leave
mov
push
jno
gs
push
or
mov
lret
fsubrl
mov
loopne
jb
adc
adcl
mov
pusha
rcrb
adc
cld
xlat
jbe
and
jp
mov
mov
rorb
fnstenv
mov
out
lret
nop
push
ret
hlt
je
push
into
add
cmpsl
js
sbb
mov
jno
cltd
mov
fwait
jnp
pop
lock
push
xor
test
add
insb
shl
or
or
loope
pusha
imul
add
test
es
test
or
movsb
and
lods
jne
or
fiaddl
fwait
gs
push
jne
scas
loop
lods
adc
pop
cmp
xchg
xor
inc
mov
mov
mov
int3
sbb
xor
mov
adc
and
jbe
jecxz
lea
mov
dec
dec
test
jle
mov
decl
xchg
sub
adc
mov
notl
ret
pusha
sub
in
imull
in
stos
in
stc
inc
pushf
scas
fsubl
stos
inc
sbb
test
sub
popf
inc
imul
or
sub
iret
mov
mov
scas
test
xchg
lea
pop
popf
mov
ret
fs
loope
inc
jecxz
emms
fildl
imul
mov
hlt
call
sti
xchg
mov
in
sbb
outsb
dec
pusha
mov
mulb
or
pop
xor
xor
dec
es
into
mov
loope
inc
sbb
aas
repz
jno
pop
lret
mov
cwtl
jecxz
sbb
cmp
cmc
loope
pop
lret
bound
gs
int3
jp
cmpsl
inc
jmpw
xlat
test
in
test
and
outsl
xchg
sbb
mov
sub
push
dec
hlt
cmp
es
dec
and
lds
jo
enter
xchg
adc
hlt
sub
adc
in
in
or
xlat
mov
pop
mov
es
ja
push
aad
jne
jmp
mov
popa
decl
mov
lcall
adc
xchg
addr16
xchg
into
loopne
add
cld
adc
jge
lret
ret
shll
push
test
fidivrs
testl
out
popf
fsts
xor
and
fisttpll
stos
int3
imul
in
xorb
sbb
or
pop
lds
aas
lods
push
arpl
in
mov
in
jmp
push
es
scas
mov
sti
xlat
jge
mov
int3
pop
iret
mov
int3
js
lret
data16
icebp
and
add
popf
jle
aam
rep
je
cs
rorb
sbb
xor
push
jle
mov
jae
mov
push
mov
jle
fbstp
mov
sbbb
shl
dec
xor
je
shr
fs
and
loop
pop
aas
jge
insb
out
pop
push
das
ds
ljmp
push
loopne
out
add
xchg
jae
jg
aaa
popf
adcl
in
push
or
jmp
pop
scas
cli
ja
or
pop
dec
int
mov
or
inc
mov
jo
pop
dec
push
shr
mov
inc
xchg
les
xchg
xchg
and
cmpsb
or
inc
xchg
das
jmp
mov
sbb
mov
cli
jl
cs
lret
clc
push
add
xchg
std
mov
jmp
mov
in
or
sub
out
xor
or
rolb
mov
push
pop
sti
jbe
and
movsl
imul
cmp
and
mov
popl
into
push
sub
push
js
aad
cld
cltd
lea
pop
daa
cmp
imul
fdivs
mov
cmc
nop
inc
andl
shr
cmc
inc
mov
jl
fstl
cmpsl
call
lea
sub
and
push
test
scas
clc
jae
add
and
cmp
je
iret
sub
lret
rcll
adcl
inc
pushf
sar
jl
fimull
inc
stos
cmp
sbb
mov
xchg
in
dec
push
mov
addr16
or
mov
movsl
popa
xor
or
in
flds
divl
fisttps
mov
jmp
frstor
inc
cmp
iret
push
test
mov
push
aad
pop
xor
xor
into
sahf
js
cmp
and
adc
int3
mov
pop
les
fs
sbb
xchg
lahf
fwait
sub
movb
or
aas
test
mov
jmp
orb
jns
and
dec
sbb
in
jns
lahf
xor
fsqrt
fists
jg
test
xchg
lret
jg
mov
jo
shrb
xor
sbb
cmpsl
mov
cltd
cmp
mov
imul
pop
jecxz
mov
xor
in
loopne
popl
movsb
std
xchg
sub
or
jnp
cmpsb
jg
pop
lds
mov
loop
jle
aam
fldt
divb
sub
icebp
mov
dec
xchg
sub
mov
cmp
xchg
pop
clc
pop
scas
mov
push
mov
mov
adc
adc
sub
xchg
pop
popf
orl
add
mov
icebp
sbb
loop
sbb
xchg
fxch
mov
xchg
aam
xor
mov
test
les
test
sbb
xchg
jecxz
xchg
dec
int
pop
rep
sahf
xor
je
mov
lret
nop
aad
mov
lds
or
fmulp
xlat
addr16
dec
repz
cwtl
pop
dec
fildll
hlt
jge
push
or
xchg
cs
adc
ds
bound
mov
sub
fsubrs
vsubsd
inc
fsubrl
enter
arpl
xchg
aaa
xor
sarl
dec
xchg
dec
mov
test
mov
imul
and
jb
fsts
cs
lahf
inc
loope
mov
in
or
scas
xor
mov
sarl
jp
mov
sarl
iret
pop
bound
cmp
pop
pop
mov
test
mov
ror
ds
mov
insl
inc
xor
inc
mov
add
dec
jno
and
lods
dec
das
int
sbb
dec
xchg
adcl
sbb
cmp
out
insb
adc
adc
ficompl
clc
jae
xchg
and
int
testl
add
icebp
test
test
mov
and
and
and
push
mov
xchg
out
outsb
call
loopne
sbb
lock
and
mov
pop
push
ja
ret
ss
imul
mov
jg
sbb
sbb
and
jmp
movsb
push
stc
sbb
lods
inc
test
xor
das
mov
pop
call
cmp
mov
push
js
xor
xchg
and
int
movsl
mov
cmp
pop
pop
cmc
lcall
jo
ds
push
call
xchg
fucomp
xchg
fiaddl
sbb
lods
jo
push
popl
das
pop
jmp
inc
xchg
lods
jo
push
pop
mov
adc
mov
shrb
nop
sub
add
insl
inc
test
xor
dec
leave
movsb
adc
mov
xlat
imul
add
cltd
inc
push
add
xchg
je
test
push
and
pop
adcl
mov
pop
mov
jl
stc
cmpsb
push
lret
add
clc
lret
dec
in
adc
mov
mov
jno
mov
movsb
push
adcl
jg
mov
cmp
ja
jnp
lahf
xchg
fldl
ss
xchg
pop
mov
push
and
cmp
les
xor
popf
cmp
das
fwait
mov
jb
ss
xchg
insb
pop
andb
push
frstor
sub
aam
out
inc
outsl
mov
mov
cmp
pop
xor
fs
insb
jle
xor
jp
je
shlb
add
push
jbe
scas
jge
push
mov
out
adc
lds
in
mov
sbb
or
inc
movsl
imul
sbb
insb
jl
or
lcall
and
movsb
inc
sbb
dec
sbb
sbb
mov
adc
or
repnz
jbe
cmc
adc
cmp
jl
jae
ds
xor
xchg
jo
bound
mov
jb
imul
and
mov
jne
lahf
pop
outsl
pop
inc
faddl
sbb
push
in
adc
inc
aaa
hlt
adc
scas
pop
aaa
sbb
sub
jecxz
dec
lea
arpl
popa
fpatan
xchg
push
sub
or
push
xchg
and
testl
cwtl
fcomps
movl
aas
lock
jl
int3
lret
testl
or
cmp
mov
or
out
add
jl
mov
xchg
xchg
jnp
add
xor
shl
xor
cmp
xchg
lret
add
or
push
cli
es
pop
notb
mov
mov
sub
add
inc
mov
jne
and
xchg
ret
mov
mov
push
popl
adc
stos
dec
push
in
mov
push
in
fmuls
loop
dec
or
add
imul
xchg
push
xchg
jecxz
stos
push
sub
lock
jns
cltd
xor
cmp
and
js
cmpsb
daa
jmp
dec
aaa
jae
out
pop
pop
out
mov
xor
jle
jbe
and
push
je
xchg
outsl
or
jb
xor
or
scas
icebp
cli
push
cmp
popf
xor
jo
insl
mov
incb
jno
or
jmp
icebp
jno
adc
xchg
les
inc
fwait
add
fdivr
xor
stc
pushw
insl
ja
xor
iret
jae
sbb
and
jge
icebp
sbb
mov
andb
push
sbb
aas
or
pop
cli
fisttps
pusha
adc
out
xor
andb
pop
mov
jno
jl
xchg
cli
outsl
adc
subb
jns
rcrl
lahf
jb
sub
fcmovbe
aad
and
sbb
cld
xchg
jne
mov
fisubrl
sbb
cmp
lods
adc
loop
mov
movsl
cmp
iret
mov
add
or
pusha
cmpsb
sbb
ss
inc
popa
push
mov
imul
sti
xchg
mov
pop
into
shrd
dec
shrb
xchg
sub
call
in
jae
lds
jae
aaa
addr16
xchg
out
cmp
and
push
fbstp
dec
testb
cmpsl
sti
or
not
aam
ja
int3
repz
in
ret
xchg
push
add
dec
shrl
and
cmpsb
xchg
popa
pop
repz
xor
xchg
mov
int3
jns
into
stos
lods
dec
cmc
andl
xchg
leave
mov
inc
cmpsb
loope
test
jnp
lods
xchg
cmp
jge
insb
popf
movsb
mov
std
lret
bound
or
stos
mov
movsl
push
popf
and
pop
test
loope
cmpsb
mov
push
push
sbb
add
fisttpll
sub
push
push
sub
outsl
push
les
push
ds
fbstp
sub
jae
or
mov
fcmovnu
xor
lea
push
es
add
aas
aad
xchg
test
cli
cwtl
rcrb
xchg
loopne
scas
cmp
shr
sbb
xlat
fidivrs
pop
insl
pushf
out
ds
popa
mov
push
pop
popa
or
xchg
pop
mov
ret
bound
cld
shlb
ret
xchg
jecxz
pop
out
mov
push
daa
add
das
in
jmp
add
mov
andb
mov
fdivl
lods
inc
adc
cmp
cmp
lahf
orl
push
jno
sub
mov
sti
rcll
add
adc
sbb
push
mov
rcrl
cwtl
cli
cmp
push
push
daa
adc
inc
and
ljmp
mov
scas
inc
jb
adc
sbb
mov
xor
repz
fdivr
xchg
sbb
scas
out
popa
loope
shr
sbb
enter
cmpsl
mov
ret
jecxz
mov
add
pop
lret
xchg
add
jle
mov
jae
icebp
mov
sbb
scas
sbb
mov
mov
jne
pop
icebp
adc
xchg
aas
fwait
in
test
pop
sahf
fnstsw
data16
inc
test
arpl
and
mov
xchg
addl
bound
adc
mov
sbb
pop
inc
push
sub
xchg
fcmovb
xor
lret
bound
jo
jnp
mov
add
push
dec
add
fucomp
inc
ja
add
repnz
movsb
clc
test
orl
cmp
mov
sahf
dec
mov
cwtl
fcomps
sub
je
adc
jne
jp
or
lds
test
sbbl
insl
idivl
add
xor
xor
call
sub
popf
dec
out
mov
push
xchg
mov
jge
addr16
xor
aam
sbb
dec
jnp
dec
and
mov
nop
cld
mov
int3
pop
mov
das
add
jmp
or
jmp
and
stc
mulb
out
jg
sub
mov
and
sub
push
enter
cltd
lds
fdiv
add
xor
dec
cli
pop
lock
cmpsb
lret
fsubrs
fisubrs
outsl
cltd
xchg
xchg
scas
cmc
mov
lret
test
inc
xchg
sub
xchg
fisttpl
and
xor
jno
cmp
jl
add
outsl
xchg
popa
add
les
clc
repnz
les
stos
addr16
cmpsb
lock
cmpsb
sbb
sub
rcrb
sub
repz
sub
push
push
nop
push
fcmovne
inc
scas
jno
repz
xchg
test
repz
imul
imul
lods
adc
sub
push
cmc
mov
stc
adc
xlat
es
stos
nop
inc
inc
repnz
aam
or
shr
pop
and
cs
dec
mov
fwait
add
out
cmpsl
int3
adc
adcl
std
or
mov
push
daa
and
test
push
and
push
imul
stos
jmp
leave
or
test
fsubl
ljmp
aad
mov
out
sub
or
out
jne
xchg
push
jbe
jg
or
xor
stos
insb
add
popa
add
outsl
loop
ljmp
loope
sub
cltd
pop
fs
jbe
jmp
adc
fwait
ds
fcomps
inc
xchg
jl
insl
adc
imul
dec
and
or
stos
movhlps
sub
lahf
clc
xor
and
andb
movsb
sahf
loopne
rolb
popa
sysexit
jg
xchg
stos
cld
adc
push
adc
sub
push
xchg
mov
mov
sub
int
test
push
push
mov
movb
repnz
mov
mov
push
mov
in
mov
jbe
fists
push
sub
fstenv
lcall
xchg
hlt
dec
push
mov
fadd
sub
cmpsb
mov
stos
pop
dec
xchg
push
push
inc
fisttps
push
xchg
decb
lock
lods
in
mov
bound
push
fisttpll
dec
insl
dec
adc
mov
sub
pop
imull
scas
data16
sahf
pop
inc
pop
insl
xchg
cmp
mov
pop
or
pop
out
xchg
and
mov
jns
adc
xor
xsha1
cmpsb
leave
add
push
nop
ret
fbld
inc
mov
add
jp
pop
sbb
rorb
push
dec
and
jl
pop
lret
adc
cs
into
pop
jo
idivl
sbb
xchg
int
imul
jp
cmc
jnp
and
insb
inc
icebp
es
cs
xchg
or
movsb
dec
ljmp
mov
fnstenv
push
imul
xlat
sarb
jg
pop
jle
sub
lods
pop
xchg
stc
inc
inc
popa
xor
cmc
ja
shrb
enter
gs
sahf
notb
sbb
les
pop
jb
imul
imul
cmc
in
pop
ret
cld
or
popl
fst
mov
mov
push
lret
push
xchg
jb
xchg
pop
scas
mov
xchg
adc
mov
testb
mov
aam
cmpsl
out
jl
cld
lcall
in
sbb
xchg
mov
repnz
xchg
dec
push
mov
sub
repz
imul
dec
adc
jno
ds
imul
or
aaa
cmp
mov
fsubr
dec
aam
inc
xchg
xchg
xchg
sbb
or
mov
mov
ja
pop
fs
test
cmc
je
inc
int
inc
sub
cwtl
in
mov
pop
ret
sub
shlb
push
loope
mov
cld
xchg
fcompl
imul
inc
js,pt
stc
call
adc
int3
test
int3
jmp
movsl
push
inc
jmp
xor
int3
sbb
fwait
xchg
fcmovbe
mov
fs
jo
adc
std
test
inc
jmp
fisttps
add
push
xor
inc
imul
pop
push
jmp
add
outsb
sub
ficoml
fnstcw
fnstcw
or
test
cld
popa
pop
jmp
push
data16
roll
pop
cmp
ret
out
in
ds
cmp
adc
aam
pop
xchg
icebp
jae
and
xlat
dec
mov
pop
sub
adc
lods
jmp
arpl
mov
orl
cmp
pcmpgtd
cltd
arpl
imul
add
xlat
pop
cmp
movsl
mov
nop
das
pusha
mov
call
and
adc
xchg
faddl
add
fs
pop
cwtl
test
push
shrb
mov
push
lahf
inc
push
cmpsb
ret
mov
pop
mov
std
mov
dec
test
add
ret
stc
test
sub
je
int3
dec
mov
ret
icebp
repz
adc
lds
ljmp
mov
pop
shl
mov
lret
movsb
xor
aad
into
jne
pop
and
cmp
popf
push
into
mov
pop
fisubl
push
push
and
xor
imul
mov
or
push
js
sarb
adcl
orl
cmp
jge
jle
scas
add
sbb
hlt
dec
xchg
icebp
adc
data16
fcmovnu
stc
enter
fldcw
mov
jo
btc
je
subl
adc
push
aam
pop
filds
cltd
xor
fsubrp
pop
jne
inc
cltd
test
nop
xchg
imul
int3
jp
jns
inc
in
adc
fcoms
int
mov
popa
inc
rcll
or
stos
inc
mov
dec
divb
movsl
dec
test
les
aas
icebp
jge
fcomip
push
popf
fadds
sahf
xor
mov
sahf
loope
mov
pusha
dec
jbe
jns
and
clc
icebp
mov
push
inc
xlat
andl
mov
xchg
in
mov
mov
jb
outsl
inc
cltd
adc
inc
pop
cld
mulb
adcl
sbb
xchg
leave
insl
cli
mov
imulb
cltd
hlt
cmp
ss
sbb
mov
mov
in
push
loope
mov
mov
clc
fcmovb
sub
xchg
mov
sub
xchg
xchg
xlat
cs
jne
cwtl
mov
dec
ljmp
or
or
fisttps
jl
lret
jmp
rcr
lahf
shlb
jb,pn
test
jl
push
dec
repz
adc
or
mov
fisubrs
sahf
dec
mov
mov
inc
bound
test
test
xchg
lds
call
idivb
out
or
xchg
sub
mov
scas
sahf
mov
aaa
in
jge
shrb
inc
xlat
ret
lcall
or
lret
mov
xor
jns
mov
mov
add
in
shl
gs
jle
shr
mov
aad
in
xor
adc
in
push
aam
and
inc
jle
dec
outsl
adc
xchg
mov
or
pop
mov
mov
cmpsb
jmp
xor
mov
mov
inc
shlb
xchg
insb
and
dec
mov
sbb
js
shll
pushf
sub
scas
push
push
aam
push
outsb
insl
and
in
movb
push
xor
mov
rorl
enter
adc
inc
or
testl
dec
pop
call
test
ja
test
mov
push
inc
fcmovnu
or
inc
dec
js
repnz
and
fldt
fwait
in
rcrl
inc
push
mov
xor
mov
fnstenv
outsb
iret
mov
aam
add
xor
pop
bnd
dec
incb
inc
ljmp
pop
cli
pop
mov
sahf
pop
out
int3
jb
and
xlat
pop
jbe
cwtl
xor
in
mov
push
loop
jns
fistpll
fisubl
inc
pop
aad
cmp
jecxz
xor
jns
pop
rcrl
or
sahf
mov
dec
add
mov
cmpl
pop
int
lods
shl
jge
mov
imul
jne
jg
sbb
lret
xorl
dec
mov
repnz
add
cli
imul
and
push
mov
cmp
push
setp
mov
push
outsl
std
dec
insb
jl
fiadds
add
jl
push
outsb
fwait
sbb
lock
bound
xor
not
addr16
repz
leave
jae
adc
add
mov
shll
faddl
add
or
jae
subb
sub
aas
cmp
daa
out
pop
in
xor
jp
ljmp
jg
nop
sub
jne
pop
pop
pop
je
xor
out
stc
aam
xchg
sbb
mov
shrb
add
loop
jne
jg
mov
jp
orl
xor
les
pop
mov
fstps
xor
cwtl
ds
jmp
dec
mov
or
push
or
cmp
or
das
ljmp
cwtl
jb
cli
cli
ds
data16
xlat
lahf
test
outsb
dec
mov
dec
bound
adc
inc
push
jne
push
adc
bound
repnz
push
outsb
inc
enter
cld
rcrl
lret
mov
pushf
add
sbb
mov
repnz
sbb
xor
xchg
adc
movsb
jae
mov
sahf
stos
repz
jle
clc
pop
movsl
jmp
into
scas
mov
ret
cld
test
scas
sub
inc
rcl
testb
ljmp
fnstenv
jle
mov
xor
adc
insl
xchg
dec
xor
inc
pop
inc
fstpl
and
sbb
lret
lahf
jno
pop
push
fsubrl
jb
mov
sub
cmpsb
lahf
push
rorl
cmp
jl
stos
push
lods
insl
pop
pop
xor
xchg
mov
call
repnz
adc
stc
jge
ret
pop
pop
mov
ret
insl
cmp
mov
rcr
dec
or
dec
fwait
and
sbb
and
and
jnp
aas
push
out
std
aas
mov
mov
sub
adc
mov
jo
lret
flds
inc
cmp
test
cmp
sbb
test
cltd
stos
mov
and
mov
fstpt
lret
or
mov
push
add
or
insl
adc
jle
jnp
cmpsb
cmp
inc
mov
or
mov
mov
loop
xor
test
aas
xchg
outsl
sub
push
test
sbb
and
mov
shll
cmp
gs
pop
cmpsl
lret
jle
push
fwait
pop
push
outsl
lea
rep
popa
pop
pop
scas
jno
pop
imul
mov
inc
xor
cmp
cmp
dec
sub
inc
jmp
jae
es
loop
insb
into
leave
add
mov
or
mov
clc
out
xchg
mov
pop
mov
xor
lock
inc
xchg
mov
shlb
out
jb
xchg
mov
push
xor
jnp
lcall
xor
in
out
lahf
lret
push
xchg
mov
nop
fldcw
xchg
dec
pop
int
jne
and
lds
mov
repz
and
out
inc
dec
pushf
inc
jg
inc
rorb
mov
xchg
aad
push
push
jg
call
add
jae
jge
and
cli
sub
pop
out
jns
push
out
push
cmp
fwait
std
pop
dec
sub
pop
mov
jecxz
sub
sub
mov
sti
int
or
aam
lcall
or
push
rcl
pop
jmp
stos
xchg
es
jmp
mov
jmp
and
cmp
and
or
mov
push
outsl
stos
popa
mov
shrl
int3
pop
pop
inc
subb
ret
xor
inc
rolb
xor
mov
scas
and
mov
repz
lea
lret
ja
mov
push
inc
mov
xchg
je
sti
cli
pop
mov
push
lcall
push
inc
cltd
and
rorl
fwait
xor
cmp
inc
cmp
test
dec
and
cmpsl
out
test
aaa
sahf
jne
in
push
repz
outsl
icebp
addr16
fidivs
pop
lret
sub
ss
loop
sbb
pop
cmp
int
sub
push
sub
jmp
cli
push
pop
sub
pop
mov
aad
cli
add
xor
ja
sti
jge
cmpsl
add
imul
or
movsl
daa
pushf
out
xchg
ljmp
pop
sub
int3
xor
cs
ss
ss
push
sarb
pop
cltd
sbb
push
mov
dec
and
lahf
push
xchg
jl
dec
rcl
pop
push
inc
pusha
movsl
mov
loope
inc
aas
shr
insl
add
and
xchg
or
aaa
or
fisttps
mov
fldl
add
jbe
add
test
icebp
cmp
ss
sbb
out
jmp
repz
mov
pop
movsl
jns
out
inc
mov
jns
adc
test
mov
cltd
mov
pop
popf
or
neg
jae
xor
sbb
push
push
mov
pop
adc
lods
mov
dec
ret
sbb
dec
or
pop
pop
out
test
push
out
ds
ds
cmp
jne
in
push
jmp
pop
hlt
mov
call
adc
ret
jg
cli
push
imul
sub
push
pop
jns
stos
adc
pop
add
loopne
or
lds
pop
and
in
test
fs
je
mov
cmp
mov
dec
aaa
mov
mov
cltd
ficoml
mov
subl
cmp
pop
aas
mov
scas
cmpsb
test
xchg
pop
outsl
cld
ja
or
hlt
paddsb
mov
jmp
and
fsubr
pop
aad
or
and
or
xchg
cmp
cwtl
stos
mov
pop
leave
pusha
mov
scas
and
mov
mov
sbb
stos
mov
jge
jge
loopne
mov
pusha
in
data16
movsl
movsl
push
aam
jo
jge
inc
inc
mov
in
sbb
jo
and
lcall
push
imul
pushf
jne
sbb
fsts
xor
or
jne
mov
adc
xor
inc
mov
aas
ja
out
xchg
add
push
pop
ljmp
inc
mov
cmc
scas
sahf
and
mov
sub
lea
shrl
ret
dec
outsb
adc
into
std
sub
fprem1
out
mov
cmpsb
lea
loopne
adc
jae
cmpsb
inc
outsb
lods
push
subb
test
inc
push
imul
imul
xchg
xor
iret
jecxz
cmp
cmpsl
inc
cmp
imul
inc
pop
pushf
pop
cmpsb
push
test
cwtl
push
aad
inc
xlat
push
es
xor
adc
inc
xchg
xchg
xorb
ds
stos
roll
ja
mov
mov
push
adc
mov
pop
pop
imul
inc
inc
push
scas
out
call
repz
call
jge
jge
repnz
mov
mov
inc
mov
imul
shrl
outsl
push
add
push
add
lock
adc
cmp
mov
enter
lods
sub
or
sbb
jp
dec
pusha
das
mov
push
sbb
rcrl
mov
sbb
insb
mov
dec
stos
and
jnp
rorl
xchg
pop
mov
mov
sti
jbe
sub
adcb
lds
xchg
mov
test
jle
clc
sti
stos
mov
aaa
lods
in
push
out
icebp
push
and
imul
dec
out
mov
mov
arpl
mov
push
mov
dec
dec
dec
mov
jb
imul
shl
adc
mov
push
jl
cmpsl
xchg
lret
lret
lods
imul
sub
jnp
testb
push
cmp
cmpb
test
daa
jbe
jg
andb
xchg
aad
hlt
or
mov
cmp
inc
out
xlat
dec
fstl
fisubrl
mull
jle
insb
ljmp
loop
or
xorl
fdivrl
ja
iret
xor
popl
test
ret
test
push
jl
pop
in
inc
dec
cmc
mov
mov
pop
jl
int3
cwtl
leave
or
xor
cmp
or
xchg
jmp
adc
dec
jnp
dec
and
aam
inc
dec
out
mov
hlt
lret
fmull
xchg
mov
leave
pop
out
pop
sbb
or
je
xchg
add
push
ss
shlb
mov
mov
mov
fstpl
in
aad
xchg
pop
mov
xchg
ja
cmp
sarl
data16
mov
in
fs
stos
cwtl
fisubrl
cmpl
mov
aas
cld
push
add
arpl
mov
ret
sub
out
mov
sarb
jecxz
pop
pop
icebp
push
jge
push
js
sub
and
cli
dec
in
nop
fnstsw
sub
lret
pop
and
mov
lret
jae
shlb
sub
pop
pop
inc
and
and
sub
push
or
aas
xchg
adc
lret
mov
cmp
mov
xchg
pop
jne
enter
scas
scas
or
enter
rorl
shll
xchg
pop
push
jne
or
rcll
insb
dec
push
push
in
add
shll
cmp
ja
fldt
sbb
hlt
push
popf
scas
out
pop
sub
xor
adc
add
sti
pushf
rorb
rclb
test
sub
cmpsl
icebp
shrb
sbb
mov
mov
adc
xor
xchg
cmp
lock
in
mov
add
lret
sbb
cmc
xorps
sbb
mov
adc
or
daa
dec
test
out
repz
scas
pop
cltd
inc
mov
mov
rcl
imul
jp
or
or
push
mov
loope
stos
popa
jmp
in
jecxz
mov
sub
adc
mov
mov
loope
mov
or
mov
test
insl
aas
push
imul
out
sti
mov
mov
out
in
or
into
push
sbb
sub
stos
outsl
arpl
stos
hlt
jns
mov
mov
addr16
or
adc
popf
jae
mov
and
xor
cmp
pushf
sub
inc
rol
cmpl
movsb
mov
sti
orb
xchg
sbb
pop
out
lods
inc
and
jmp
cwtl
cwtl
in
cmc
inc
decl
cmc
adc
fidivs
mov
fs
pop
call
mov
push
fadds
lcall
cld
in
jle
ja
add
sub
out
mov
frstor
sub
dec
dec
in
push
cmp
push
dec
push
mov
add
fsts
inc
dec
or
movb
and
mov
call
or
xor
sbbb
loope
gs
out
aas
lods
mov
pusha
push
pop
and
and
outsl
push
push
or
icebp
adc
rcrl
and
movsb
scas
inc
sbb
dec
cmp
cmc
mov
dec
mov
sbb
and
aam
out
cld
adc
fwait
fs
jmp
mov
sub
push
std
pop
int3
xchg
out
and
cmc
mov
and
pop
sbb
sub
rcrb
std
lret
sub
and
push
pushf
adc
push
out
fwait
jecxz
int3
cmp
inc
mov
jne
sub
or
cwtl
rol
fmull
mov
xchg
imul
mov
xchg
sbb
mov
call
test
pop
mov
out
sahf
xchg
mov
int3
jnp
dec
repz
rcll
push
jno,pt
pop
shl
out
adc
lds
fs
mov
fs
sub
aas
lock
sbb
jae
mov
jno
out
or
dec
out
loopne
mov
jl
outsb
inc
pop
sbb
jle
sub
inc
push
mov
test
lea
pop
xchg
sbb
push
mov
fdiv
inc
mov
sbb
xchg
xor
les
xor
cltd
sahf
fs
mov
sahf
and
movsl
cld
gs
ficompl
mov
addl
sub
mov
arpl
mov
pop
daa
loope
jbe
int
scas
inc
mov
mov
jo
int
or
nop
scas
call
or
add
and
mov
mov
call
pop
repz
mov
inc
fs
xchg
cmp
pop
sbb
or
imul
in
mov
push
mov
test
cltd
ret
push
mov
rcl
lock
lahf
mov
and
lods
in
loope
adc
dec
xchg
dec
movsb
cmp
incl
call
or
or
shll
add
notl
push
test
push
pop
mov
mov
jl
mov
ljmp
mov
dec
dec
ret
xchg
nop
push
lds
les
cmc
jns
sbb
pop
push
call
repnz
aas
push
or
mov
sub
fildll
fsubl
jle
xor
rolb
cwtl
add
ret
lret
mov
dec
pop
inc
fwait
pop
idivb
stos
jge
mov
push
in
lret
shrl
inc
mov
cmp
push
mov
mov
stc
add
mov
inc
mov
inc
mov
inc
or
dec
pop
xor
loop
mov
jnp
icebp
imul
iret
std
xlat
jmp
mov
pusha
outsb
inc
mov
jne
pop
icebp
cltd
or
adc
js
jbe
mov
jb
jp
add
push
test
test
mov
ss
mov
out
outsb
les
ficoml
into
pushf
scas
mov
xchg
scas
ds
or
adc
fsts
xlat
or
xor
das
xchg
mov
ret
sbb
sbb
cmp
push
jnp,pt
or
mov
jmp
dec
stc
inc
dec
push
xchg
in
daa
movsb
repnz
lds
dec
scas
pop
mov
push
out
sbbl
pop
mov
cmc
les
notb
xlat
outsb
push
or
mov
mov
mov
aam
loope
in
push
dec
jle
cmp
lock
shl
sub
xor
mov
in
in
pop
in
or
mov
ret
lret
push
inc
lahf
mov
scas
addb
sti
fdiv
xor
pop
sahf
add
mov
int3
orl
andb
adc
dec
add
mov
jno
adc
mov
andl
pop
scas
fsubrs
int
jae
es
jge
imul
lahf
mov
sahf
lahf
pop
fidivl
loop
push
shlb
in
pop
test
or
in
push
pop
ficompl
test
ret
xor
imul
mov
stc
jp
cmpsl
xor
cmc
adc
push
fsubrs
in
rcll
mov
clc
cmp
loopne
in
std
enter
int3
fs
add
pop
dec
xchg
and
decb
in
inc
test
call
dec
add
mov
fnsave
negl
js
movsb
int3
jmp
or
adc
inc
in
cmp
aaa
divl
mov
outsl
fsubs
imul
out
test
xlat
cmc
into
mov
fimuls
cmp
pop
dec
jmp
xor
lcall
fs
jne
inc
jo
stos
cmp
leave
call
add
insl
push
adc
adc
lods
mov
insl
pop
outsl
mov
add
push
cmc
pop
pop
clc
lret
push
cltd
mov
fildl
push
xchg
roll
bnd
cltd
mov
mov
mov
clc
sahf
into
cmpsb
subl
imul
xchg
movsl
xor
push
jl
pop
pop
insb
mov
add
or
xchg
add
adc
popf
adc
imul
arpl
sbb
xor
adc
out
dec
mov
les
std
mov
dec
shrb
dec
mov
cs
inc
movsb
inc
add
mov
pop
push
daa
mov
add
cs
adc
aam
and
fistpll
pop
in
sub
mov
sub
xor
xor
cwtl
fs
arpl
xor
aas
push
into
adc
andb
inc
cld
into
pop
incb
adcb
push
dec
fstps
fldcw
adc
push
pop
rorb
xchg
mov
outsb
sub
ss
cmp
xchg
aas
push
aaa
xchg
ds
mov
fsubrp
xor
push
sbb
dec
fnstsw
leave
mov
xor
or
mov
lods
xor
insl
test
call
stos
in
lahf
ret
divl
jne
sti
out
imull
repnz
mov
test
mov
push
fbld
mov
inc
in
inc
mov
mov
add
cmp
hlt
adc
push
cmp
jb
xor
popa
add
push
mov
les
dec
cld
ljmp
xchg
add
mov
jae
mov
lret
jmp
or
es
mov
and
inc
inc
sbb
jle
push
cmp
pop
sbb
dec
pop
subb
icebp
cs
dec
pop
sahf
and
add
cld
adc
mov
push
lret
imul
fnstcw
push
leave
lret
les
mov
xchg
int3
cltd
mov
fistl
inc
ja
push
sub
std
sbb
xor
mov
aaa
lea
out
mov
xor
loope
adc
cmp
jne
js
xlat
and
fs
aaa
ss
mov
rclb
jmp
stos
cmp
adc
mov
arpl
aas
js
repnz
xlat
fisubrl
mov
pop
add
ret
pop
popf
inc
or
and
sub
push
into
inc
pop
add
mov
push
inc
lcall
lds
arpl
outsb
or
scas
scas
fstpl
leave
into
xchg
daa
ljmp
push
add
push
inc
add
push
movsl
popf
cmpsl
jecxz
push
into
push
xor
jns
mov
pop
xchg
sbb
dec
and
testb
push
jbe
lods
movsl
lea
pop
arpl
dec
xchg
add
jmp
xchg
pushf
lds
xor
popa
fwait
mov
and
aaa
cmp
xchg
imul
fimull
int
jb
inc
pop
mov
enter
pop
les
xor
repnz
mov
jne
nop
cmp
and
in
jbe
inc
je
dec
in
mov
aam
movsb
std
add
xlat
xchg
int3
faddp
pop
or
iret
movsb
jecxz
mov
les
dec
pop
jae
sahf
sahf
call
cmp
lock
orl
test
pop
fdivl
and
movsl
push
pop
cmp
lea
xor
mov
adc
dec
filds
and
lock
imul
fucomi
aas
pop
mov
inc
sbb
mov
mov
outsb
scas
mov
fidivl
adc
sbb
movsb
ja
mov
jnp
loop
lcall
cmpsl
pop
lret
and
mov
bound
jl
movsl
fldcw
cmp
ja
push
lock
dec
and
enter
testl
scas
out
push
psrlq
add
je
ficoms
enter
add
lds
and
dec
js
mov
aaa
sub
push
testl
jmp
test
and
inc
lahf
es
hlt
cmpsb
adc
roll
xchg
add
or
inc
adc
xchg
vpsrlw
adcb
mov
mov
dec
mov
mov
xchg
jl
sbb
cmp
shl
aam
push
repnz
cs
adc
outsl
shll
cwtl
adcl
adc
aaa
out
lds
pop
mov
enter
inc
xor
mov
dec
movsb
popf
aaa
jbe
push
and
lds
loop
popf
xchg
add
test
adc
ja
push
inc
and
std
daa
push
jb
clc
popa
xor
sahf
push
pop
sbb
les
sub
sbb
leave
repz
fsubs
jle
add
faddp
dec
or
aas
mov
loop
adc
leave
rcll
cmc
negb
std
les
push
or
push
cmc
sbb
das
and
mov
adc
cli
shrb
adc
je
lds
push
out
mov
test
pop
sbb
cltd
iret
mov
mov
mov
lock
into
das
pop
mov
out
push
jmp
adc
mov
adc
fmull
bound
dec
stos
cmp
js
jp
popf
leave
lds
xor
arpl
adcb
fisubrs
sbb
xor
mov
push
inc
std
xchg
jo
notl
jmp
sbb
mov
gs
xchg
loopne
push
jge
mov
mov
push
mov
neg
ljmp
shlb
add
push
inc
stos
lock
imul
loop
jae
gs
lods
pop
hlt
fsubrp
outsl
shll
cmpsl
iret
inc
sub
in
push
lahf
sbb
jbe
inc
mov
xchg
or
mov
ret
mov
sbb
adc
movsl
push
dec
das
cmp
in
out
mov
or
pop
ja
pop
xchg
stc
or
and
and
stos
adc
movsb
jp
xor
clc
sbb
fldenv
imul
push
rorb
fldl
fisttps
mull
mov
imul
inc
jno
cmp
xlat
sbb
jb
imul
pushf
and
push
repz
and
out
fnstcw
test
clc
icebp
dec
inc
xor
das
insb
mov
scas
mov
fdivr
rorl
loop
mov
dec
inc
xchg
lds
cs
adc
aaa
ficoml
das
test
cli
mov
inc
or
aam
clc
jno
daa
outsl
xor
lea
ljmp
and
inc
sub
and
push
rcrb
push
call
outsb
jle
js
mov
jp
mov
sbbb
mov
push
mov
jne
push
pop
jg
inc
and
jp
pop
mov
xchg
mov
sub
pop
ds
mov
add
scas
adc
loopne
shll
fidivs
xor
mov
imulb
sub
sub
inc
lods
flds
jg
movsb
jge
das
xchg
mov
push
push
sbb
pusha
sbb
cmpsl
push
lock
or
add
and
lock
lock
inc
jecxz
idivl
adc
adc
flds
in
jge
ret
adc
stos
andl
call
fs
jo
aad
xchg
and
push
push
stos
sbb
cmc
sbb
cmp
adc
hlt
push
sub
fwait
push
repz
adc
pop
lcall
lahf
sub
mov
sbb
pop
mov
cmp
mov
or
pop
mov
hlt
fs
inc
lcall
adc
mov
inc
push
xor
mov
outsl
xchg
imul
mov
ffree
aam
lods
xor
and
movsl
xor
out
in
jbe
mov
xor
adc
cmc
pop
dec
popa
push
fptan
jnp
ja
and
inc
cwtl
dec
in
ror
into
adc
mov
jb
adc
inc
cld
cmp
insb
xchg
stos
lds
sub
shr
fisttpl
repnz
mov
clc
test
add
je
and
test
dec
inc
adc
sub
setge
out
pop
push
rcrb
or
sub
push
dec
mov
push
mov
adc
xchg
and
int
sbb
push
xchg
and
into
lret
je
clc
aam
jno
push
shlb
and
insb
pop
cmp
pop
inc
xchg
add
jbe
cmc
addr16
in
add
repnz
dec
xchg
out
inc
push
add
fisubs
data16
popa
cmp
xchg
push
jns
push
or
mov
popa
or
fs
mov
mov
ja
inc
lods
sbb
mull
lahf
aas
cli
sbb
int
add
and
push
addb
je
out
mov
popf
pop
lret
add
popa
mov
aad
in
add
jno
inc
das
push
loopne
int
imul
and
sbb
int3
xlat
jno
lahf
negl
fwait
imul
lret
add
sub
jle
cs
sub
andl
sub
jecxz
pop
out
fadds
jbe
xor
cltd
and
xlat
jb
test
pop
out
outsl
and
shlb
pop
jo
pop
push
dec
adc
and
cld
xor
movsb
push
jecxz
mov
in
jmp
sub
xchg
sahf
data16
out
sbb
iret
jbe
adc
movsl
and
jg
jne
andb
push
inc
inc
jl
std
jb
xchg
fs
lods
ljmp
ret
daa
push
mov
lea
pop
aaa
and
and
jno
ret
mov
jp
mov
lahf
sbbl
dec
mov
ret
xlat
and
lods
mov
in
ficoml
fs
mov
imul
add
adc
fistps
mov
es
les
lret
xchg
mov
xor
iret
add
xor
jb
je
push
enter
push
cmp
mov
movsb
cmp
subb
or
mov
daa
mov
mov
iret
xor
pop
xchg
sub
cltd
lock
xchg
addr16
js
repnz
fstl
inc
mov
lea
push
cli
jg
adc
xor
mov
sbb
cmpb
pop
dec
movsb
jmp
cmpsl
daa
or
divl
hlt
aam
loop
enter
stc
dec
repz
adc
insl
les
cmp
and
mov
inc
xor
pop
in
sub
and
mov
test
fwait
adc
fildl
mov
aas
push
push
xchg
leave
pop
addl
popf
xchg
div
mov
mov
sub
pop
xor
mov
sahf
aaa
pop
xchg
add
ljmp
pop
fsubrs
mov
xor
dec
push
xor
ljmp
xor
mov
nopl
cmp
push
jecxz
hlt
and
rcr
sbb
and
and
cmpsl
jmp
enter
fs
into
in
data16
and
scas
xor
xchg
scas
push
push
movsb
jbe
sub
dec
dec
fisubl
cmp
push
and
cld
push
jns
fisttpll
outsl
or
xor
adc
cmc
dec
sbb
cmp
lret
gs
cmc
aad
jmp
in
addl
or
push
inc
mov
lock
loope
in
inc
aad
xchg
sub
outsl
sbb
lret
daa
mov
cmpsl
mov
xchg
xchg
jmp
andl
dec
fucomp
imul
dec
mov
jl
mov
sub
push
gs
mov
inc
jp
ljmp
dec
out
xchg
and
pop
addr16
mov
aam
loop
xchg
aad
dec
mov
fwait
test
out
jne
add
jecxz
orb
push
push
int3
cmp
loopnew
cltd
mov
stos
mov
cmp
push
pop
leave
pop
sub
add
or
and
lods
add
jb
lods
add
test
push
cs
mov
stc
adc
cmpsb
add
mov
xlat
out
mov
into
and
push
xchg
push
subl
add
xchg
sub
jecxz
xor
ja
movsb
out
and
daa
jge
outsb
dec
rcl
xor
pop
dec
xorb
mov
jp
mov
js
loopne
cmovg
mov
pop
jno
cmp
and
or
sbb
adc
mov
stos
lret
fimuls
hlt
dec
jg
outsb
sbb
add
scas
mov
pop
sbb
mov
pop
stc
cli
int3
mov
sti
stos
mov
and
adc
inc
cmp
mov
adc
nop
adc
sub
lret
sarl
stc
jno
jg
nop
sub
push
aad
iret
mov
cmp
js
fisttpl
pextrw
sbb
mov
jecxz
cld
mov
popf
push
lret
test
mov
fistl
and
dec
dec
dec
arpl
jmp
sub
inc
shr
je
mov
cmc
lret
lods
test
push
jmp
cmpsb
lahf
ss
mov
push
xchg
jmp
nop
pop
mov
push
stc
adc
mov
shr
push
out
add
scas
xorb
push
addl
push
fsubl
retw
xlat
subb
stc
lock
sbb
stc
cwtl
out
in
aas
ja
adc
jecxz
adc
pop
sarl
nop
lahf
xchg
imul
inc
dec
data16
clc
cmp
mov
xchg
push
jl
adc
dec
mov
push
fidivrl
vmulps
pop
adc
cwtl
push
push
imul
outsb
add
pushf
xor
inc
addl
or
and
icebp
jbe
ficoml
push
or
add
mov
les
adc
sahf
int
dec
mov
xor
mov
les
pop
inc
std
adc
jge
add
lea
cwtl
aam
arpl
adc
push
sub
sbbb
dec
out
push
pop
mov
fistl
xor
stc
mov
cmpl
dec
mov
jg
cmp
sub
inc
xchg
cmp
repz
push
jl
mov
push
inc
or
inc
repnz
or
push
cmc
xor
call
fsubl
out
jle
push
repz
add
mov
add
lea
inc
xchg
scas
inc
xor
mov
mulb
decb
scas
call
inc
decl
jno
or
imul
jns
stos
push
insl
push
lahf
sbb
cltd
cs
int
mov
movsb
repnz
iret
jle
jns,pn
pop
pop
cmc
int
and
add
test
mov
jecxz
stc
nop
or
movsl
in
cmp
outsl
iret
sbb
inc
dec
mov
fld
or
imulb
pusha
and
aas
xrelease
adc
in
adc
lcall
mov
daa
jns
add
jb
scas
jb
xchg
out
addl
inc
or
stc
pop
xchg
andl
adc
inc
add
aad
ljmp
xor
dec
lret
mov
outsl
sub
aas
outsb
push
enter
repz
filds
das
inc
or
ds
jae
jns
xchg
pop
mov
push
jl
and
jbe
pusha
xchg
add
jns
xchg
sbbb
icebp
push
pop
insb
negl
fsubs
mov
cmpsl
sub
mov
int3
es
fstpl
and
jno
js
icebp
clc
ja
mov
movsb
cmp
xchg
ret
mov
stc
xchg
mov
sti
xchg
cld
cmpsb
push
or
mov
ficompl
mov
loopne
hlt
push
cmc
shrb
mov
arpl
jle
pusha
testl
xorb
push
sbb
inc
lret
or
pop
mov
hlt
push
ja
mov
int
pop
xchg
dec
dec
sbb
enter
add
sbb
push
bound
push
rorb
jae
data16
cwtl
pop
out
leave
pop
in
or
stos
mul
and
out
in
xor
dec
repz
mov
call
pop
fisubrs
or
in
cmp
pop
cmc
test
pop
cmp
mov
xchg
dec
mov
fmul
fsubp
lahf
inc
popa
rol
test
dec
add
repnz
loopne
or
jns
ja
jnp
test
ret
daa
jno
push
jno
pop
mov
movsb
in
fbstp
dec
fwait
cmpsl
cmpsb
sar
push
and
mov
and
test
mov
mov
mov
inc
jl
shlb
add
jecxz
sub
and
push
mov
inc
mov
sbb
pop
mov
movsl
mov
or
adc
jmp
lret
repnz
jle
push
sub
sbb
sbb
xor
cmp
lahf
jecxz
mov
jbe
xor
aam
inc
fldcw
cmpsl
xor
popa
hlt
dec
sub
mov
jns
add
mov
pusha
jecxz
shrl
call
lods
push
and
int3
ficoms
shrb
out
lret
push
outsl
addr16
arpl
xor
ret
or
xchg
jno
push
out
add
and
iret
icebp
or
dec
sbb
movsb
mov
jbe
xor
fbstp
lods
fwait
jo
mov
fdivrl
fwait
jo
and
push
inc
mov
popf
imul
in
notl
out
inc
push
test
jmp
mov
and
sub
xor
scas
ret
adc
fidivrs
inc
cli
in
stos
jl
sbb
mov
and
adc
adc
push
dec
or
mov
imul
into
shrb
out
sbb
or
xchg
cmpsl
adc
jp
jbe
mov
xchg
sbb
push
movsl
stc
lock
rcrb
cmc
dec
stos
jmp
and
iret
repz
ljmp
push
push
sub
movsl
mov
dec
pusha
sti
sahf
loop
rcrb
add
fnstcw
or
sub
and
and
mov
scas
lret
lret
ja
mov
pop
hlt
or
lcall
push
sub
cmp
jne
pop
fs
notb
xor
cmpsl
inc
mov
inc
inc
mov
push
popaw
adc
loope
add
std
aas
mov
inc
les
cltd
push
push
or
jns
inc
push
jg
mov
cmp
mov
push
sbb
mov
cmp
out
adc
pushf
inc
push
repz
sbb
dec
xor
imul
rcrb
adc
xchg
inc
xor
repnz
mov
or
cmc
mov
mov
adc
mov
fildl
cmp
jl
sti
sahf
mov
cmpsl
ds
fmul
rcrb
dec
cli
test
pop
mov
testl
test
pop
xor
into
pop
pop
sub
pop
cmp
das
nop
dec
popf
inc
dec
add
stos
ljmp
andl
dec
pop
ds
outsl
jge
cmp
loop
push
in
sti
mov
test
add
fimull
daa
jnp
xchg
cmpsb
popa
jns
pop
in
cltd
sbb
jle
add
cltd
jbe
std
nop
dec
xlat
mov
cs
ds
add
insb
pop
dec
jo
mov
sbb
sbb
jle
jge
add
pop
cmp
pop
cmp
mov
adc
sbb
ds
jg
shlb
fisubs
loop
loope
sub
fs
lock
subl
push
sbb
push
out
add
test
xchg
add
inc
ljmp
je
je
cmp
clc
pop
out
daa
dec
movl
fnstenv
jne
jae
ljmp
mov
stos
inc
pop
and
inc
xlat
stc
xor
shll
fwait
add
push
jo
fistpll
movsl
outsb
pop
cmpsl
inc
ds
pop
jl
xchg
sub
cltd
xor
aad
xchg
outsb
ds
jno
lcall
pop
inc
cwtl
xchg
xchg
xchg
test
mov
ljmp
jle
sbb
push
push
mov
push
xor
jae
cmp
fs
jg
or
in
aas
and
imul
push
jmp
int
cmp
pxor
aad
push
jb
push
dec
test
pushl
leave
movsb
lahf
imul
jae
add
es
sbb
and
sbbl
inc
lea
add
ret
mov
outsl
pop
adc
push
dec
testl
xchg
jnp
xor
popa
cltd
adcl
int3
mov
xor
mov
sahf
test
loopne
enter
out
push
sahf
add
cltd
add
mov
les
inc
pop
ds
mov
ds
jecxz
ljmp
bound
js
jmp
pop
ljmp
push
dec
adc
or
popf
cmp
push
pop
cmp
adc
scas
fistpll
mov
popa
iret
cmpb
rcrb
mov
mov
xor
xchg
pop
icebp
pushf
loope
js
mov
ret
mov
loope
cmp
movsl
cmp
loop
aaa
adc
ret
pop
mov
jbe
mov
or
adc
pop
loopne
shlb
rol
xchg
into
jb
fsubrp
das
xchg
push
xchg
scas
pop
sub
aad
xor
add
ljmp
stc
push
cmpsl
out
sub
mov
or
dec
mov
fst
pop
lds
lods
pop
pop
fdivp
sbb
xchg
mov
fcoms
push
mov
cli
push
cs
lock
in
inc
mov
flds
fisttpl
dec
mov
and
inc
in
ss
jae
ljmp
mov
test
add
adc
mov
outsl
push
clc
lahf
push
mov
mov
iret
movsl
xlat
dec
and
or
mov
faddl
mov
sub
dec
inc
cmp
xor
jle
lcall
movsb
mov
int
jb
jmp
lcall
js
addr16
gs
ficomps
and
mov
cld
sub
cld
sbbl
inc
add
sbbl
and
jnp
mov
stc
loopne
or
xchg
fmul
xor
push
imul
popa
adc
xor
scas
mov
inc
fs
add
into
jbe
pushf
push
lock
cwtl
jg
inc
idivl
pop
cmp
and
sbb
xchg
sti
out
push
ss
fstl
adc
dec
cwtl
enter
adc
inc
pop
aaa
or
mov
mov
inc
orl
adc
shlb
in
loopne
pop
xchg
pop
sbb
mov
and
add
out
dec
pop
mov
push
sub
cmp
jle
and
cwtl
dec
lods
fidivrs
aam
push
arpl
push
jb
dec
mov
popa
enter
jmp
xor
outsl
push
sbb
js
pop
testb
int
rcrb
dec
test
adc
xor
stos
push
aad
dec
iret
dec
loop
jl
outsl
pop
int
icebp
insl
icebp
mov
push
mov
imul
mov
jge
jae
cld
inc
psraw
fmull
stos
jnp
test
sti
aas
push
rorl
imul
icebp
or
pop
mov
mov
inc
jp
mov
gs
and
pop
iret
and
dec
test
out
dec
push
outsl
mov
vprotb
mov
fcompl
xor
xchg
push
loop
dec
push
icebp
mov
loopne
ss
sbb
out
test
jge
xor
jle
mov
lret
pop
int3
arpl
and
sub
aam
adc
scas
in
popa
ficoml
add
dec
mov
sahf
pop
cmp
adc
pop
shll
outsl
loop
jg
fmul
sbb
fists
faddp
inc
cld
les
int
pop
enter
pop
dec
and
cli
ss
or
or
cs
dec
jp
xor
cmp
xor
stos
mov
pop
jno
inc
pop
pop
jbe
dec
test
add
subb
xor
xor
mov
mov
sub
jo
rolb
leave
pop
imul
movsl
push
in
shrl
push
pusha
mov
mov
fsubr
arpl
mov
mov
fwait
sub
mov
sbb
or
je
push
inc
sbb
iret
xchg
mov
mov
aad
sahf
jecxz
inc
or
mov
iret
test
xlat
fwait
pusha
clc
mov
loopne
aas
jle
mov
jno
pop
mov
pop
and
in
add
dec
jne
stc
movsl
inc
push
test
cli
xor
je
outsl
mov
jbe
es
sbb
adc
jl
es
pop
inc
xlat
xor
sbb
insb
xor
test
mov
jbe
cmp
cmp
inc
fcomi
ret
rcl
into
xchg
and
and
enter
push
in
aaa
adc
xchg
rolb
data16
fstps
or
xchg
aam
jnp
sub
outsl
test
jns
or
mov
ret
call
psadbw
pop
push
es
daa
and
insb
cltd
lahf
xchg
dec
inc
sub
fldt
test
imul
arpl
push
or
les
jl
push
xor
mov
adc
jecxz
int3
mov
sarl
int
cmp
inc
jb
mov
dec
lret
cmp
mov
loop
push
faddp
sbb
int
and
gs
add
cmp
pop
jg
mov
push
or
ljmp
pop
jbe
mov
cmp
sbb
dec
and
inc
cwtl
inc
jbe
add
jns
or
mov
xchg
push
pushf
cmc
mov
mov
rcll
push
dec
push
movsl
addr16
icebp
pushl
in
cltd
mov
inc
jl
repnz
or
mov
xchg
dec
aas
pop
iret
adcb
adc
xchg
inc
jmp
sti
in
aaa
movsb
ja
fisubrl
add
mov
mov
mov
popa
cmpb
and
cmp
xchg
daa
js
lods
gs
scas
and
adc
add
and
in
cmp
pop
ljmp
paddq
jle
pop
mov
mov
push
clc
mov
shrl
movsl
rolb
pusha
stc
js
fldt
inc
bound
test
mov
xchg
gs
das
xchg
pop
in
ret
imul
imul
js
jle
push
or
into
aad
jns
fs
xor
push
repz
into
bound
cmp
adc
imul
fsts
mov
push
jno
xor
adc
daa
sbb
pop
out
xor
rcrl
outsb
movsl
ret
pop
cmc
cmp
xor
in
pop
xchg
mov
ret
aam
jle
or
dec
dec
pop
lods
jns
outsb
test
mov
push
insb
int3
mov
in
pop
hlt
subb
xchg
ss
popa
adc
callw
adc
insb
xchg
inc
aad
xchg
aaa
push
test
xor
arpl
inc
sbb
cmc
enter
incb
cmpsb
sbb
and
fisubrl
push
fcomp
inc
jnp
ljmp
inc
int
inc
cli
mov
filds
mov
in
addr16
out
popf
ret
sub
movsl
test
xchg
mov
ja
je
clc
inc
out
or
cmpsl
mov
mov
ja
push
gs
je
imul
pop
cmp
mov
ds
ja
cmp
jb
or
pop
pop
in
das
mov
mov
inc
test
test
or
imul
mov
xor
mov
or
loope
mov
aaa
add
xchg
adc
test
mov
xor
into
jl
out
int3
push
int
out
sbb
in
inc
out
adc
int3
cs
lds
movsb
jnp
incb
mov
dec
xchg
addr16
xor
into
push
in
fisttpl
das
into
es
fnstenv
pop
shr
cmp
cwtl
sub
dec
pushf
repz
xchg
in
lret
rorl
sbb
dec
adc
push
or
arpl
lea
negl
and
mov
cmp
and
pop
add
mov
cs
cmp
dec
xor
add
fisubrs
and
jae
stos
lds
js
aam
sub
and
out
cmp
icebp
xchg
add
out
aaa
push
out
jmp
in
pop
xchg
into
pop
mull
fstp
outsl
sbb
stos
jne
xchg
jne
push
sub
inc
notl
movsb
loop
sub
or
fcompl
lds
xchg
icebp
fnstenv
adc
cmp
add
sub
xchg
scas
call
add
or
adc
pushf
or
xchg
adcl
mov
adc
jg
mov
jnp
jg
into
push
jg
pop
lahf
adc
aad
shlb
incl
cli
xchg
push
mov
lea
xchg
xor
push
jno
inc
push
outsl
test
mov
popa
mov
xor
dec
bound
sbb
stos
inc
popf
cmp
push
adc
ja
and
fisubs
push
inc
fnsave
xchg
movsb
sbb
lods
jnp
push
out
movsl
sbbb
cld
jecxz
mov
sub
push
pop
ss
mov
addr16
fidivrl
out
lret
daa
add
cmp
push
and
pop
ficoml
cmp
lds
inc
scas
xchg
jg
lret
sub
and
ret
and
add
or
loop
xchg
pushf
les
lret
ret
mov
xchg
jns
cmpsl
xor
fwait
enter
rcll
dec
fmuls
jmp
addl
fisubl
int
mov
lret
and
mov
int3
cwtl
sbb
jg
pop
leave
and
lock
stos
cmp
and
test
sub
mov
fucomip
cmp
push
push
push
push
mov
das
cmp
mov
xor
loop
pusha
orb
lock
dec
jge
xchg
stos
push
les
adc
push
sbb
pop
aad
out
mov
pop
xor
push
fsubrs
push
jb
cmpsb
pop
adc
cwtl
lea
fstps
push
mov
enter
ficoms
gs
inc
pushfw
mov
mov
and
pop
sbb
mov
jmp
jns
adc
divl
pusha
movsb
aas
mov
and
mov
and
fistpll
push
or
lret
xor
push
cmp
mov
out
das
and
jnp
ds
cld
pop
cltd
insb
sub
repz
shll
sub
jbe
cwtl
push
lahf
stos
test
xchg
add
add
jecxz
xor
stc
inc
fmull
mov
inc
sahf
lods
cmp
cmp
loop
out
inc
pop
xchg
icebp
pop
xchg
pop
aam
jns
jmp
fcmovb
js
or
call
xor
add
scas
jns
pop
add
ret
iret
sahf
stos
inc
cwtl
sahf
mov
jl
cmpsl
inc
int
mov
sbb
sbb
xchg
int3
pop
cmp
pusha
cmp
lea
pop
stc
or
inc
arpl
mov
xchg
jl
cld
lret
sbb
je
cmp
mov
fstps
jne
popw
cwtl
xchg
pop
push
rclb
inc
gs
std
cltd
out
jl
cmpb
jg
mov
insb
je
pop
cmp
pushf
xor
add
repz
add
sarb
jecxz
adcb
mov
insb
out
dec
mov
subl
add
mov
rorb
pop
cmc
cmpsl
sub
js
jl
lcall
mov
stos
and
movb
and
andb
in
test
cs
xchg
xor
and
mov
cmpsl
ds
bound
or
cwtl
mov
loopne
repz
mov
sbbl
sub
pop
or
and
jo
mov
inc
jne
mov
movsb
jp
aaa
pop
jg
insb
leave
jo
xchg
adc
mov
jecxz
sbb
xor
xor
dec
in
clc
aas
cli
mov
cmp
stos
sub
sbb
mov
int3
jns
mov
and
sahf
push
int
sbb
addr16
xor
cld
push
outsb
mov
loopne
outsb
jmp
insb
mov
xchg
push
pop
lcall
xlat
in
inc
lods
jmp
jb
add
imul
sbbb
jb
fs
mov
inc
iret
imul
scas
mov
loope
mov
xchg
aas
dec
out
lods
cmpsl
mov
jmp
sbb
mov
jp
jmp
cld
adc
imul
test
add
lea
jo
mov
arpl
sbb
daa
lcall
add
fstpt
dec
dec
fists
pop
in
popa
cmp
inc
imul
cwtl
stos
lods
pop
vpunpckhbw
xor
xchg
div
movsb
fwait
aaa
mov
adc
sahf
sbb
lcall
jecxz
hlt
sub
jbe
pushl
mov
scas
arpl
fdecstp
rol
cmp
pop
xchg
test
push
ret
ret
rol
inc
pop
out
lods
das
aam
add
lods
outsb
rol
les
xchg
stos
aam
xchg
imulb
repnz
sub
loope
adc
adc
pushf
repz
cmp
notl
xchg
test
sbb
mov
pusha
jle
sbb
gs
cli
pop
data16
inc
push
mov
shl
shl
and
cwtl
dec
mov
sar
sbb
in
inc
addb
hlt
mov
mov
fsubr
push
sub
inc
jno
inc
das
mov
adc
mov
mov
cmpb
leave
adc
add
xchg
pop
hlt
sub
inc
aas
fdivl
xchg
dec
mov
mov
mul
icebp
or
imul
add
mov
xlat
adc
js
xchg
sub
inc
nop
sub
imul
mov
mov
mov
push
popa
shl
test
addr16
clc
or
or
out
enter
js
fildll
pop
adc
icebp
pop
in
fcomps
stc
mov
mov
mov
and
push
cmp
aaa
stos
mov
pop
add
enter
jne
fs
jno
jg
dec
sbb
or
pop
out
dec
loopne
sbb
cmp
mov
cmp
lock
pop
stos
and
das
std
mov
and
inc
es
dec
xchg
test
and
mov
and
cmp
xchg
imul
push
ret
cltd
xor
jne
xlat
mov
cmp
pop
sbb
ljmp
aaa
es
adc
aad
jb
testl
loope
sub
cld
ficoml
sub
enter
subb
lcall
and
aas
ret
mov
loope
mov
push
dec
bound
mov
test
cmpsl
cli
pop
hlt
icebp
pop
mov
int
add
mov
mov
xor
out
mov
mov
mov
cld
lcall
jne
push
call
ds
faddp
xchg
scas
and
mov
fdivrp
cvttps2pi
add
and
sbb
cwtl
inc
fmull
sbb
add
dec
fisubs
mov
jne
iret
push
xchg
dec
cmpsb
dec
and
js
mov
mov
out
xchg
mov
dec
pop
sahf
sub
sub
out
fsubl
mov
dec
inc
cli
dec
shrb
aaa
sub
mov
loopne
inc
mov
mov
jae
pop
sub
insl
add
int
and
xor
mov
pop
fisttpll
sub
dec
bound
dec
jmp
je
and
inc
jno
pop
sub
xchg
iret
stos
and
in
mov
int3
pop
cmp
lcall
cwtl
push
adc
lock
imul
pushf
test
jo
lds
xchg
shrb
repnz
loope
cmp
push
xchg
cmp
adc
sbb
outsb
ret
pop
ja
fcmovb
and
cmc
lret
ja
hlt
xchg
sub
out
mov
idiv
cltd
pushf
aam
movsb
inc
cmp
dec
sub
sahf
sub
test
mov
inc
mov
out
movsw
pop
outsb
out
flds
in
sbb
lahf
xchg
loopne
mov
push
int
fs
lds
scas
stos
lds
sbb
ljmp
push
in
mov
fstpl
add
xchg
movsb
in
mov
pop
sub
xlat
je
rcrl
mov
out
and
aaa
lret
adc
fistps
inc
push
int3
mov
pop
arpl
int
push
test
sub
and
mov
mov
pop
test
push
pop
mov
dec
fstl
enter
loopne
mov
add
fildl
movsb
mov
aaa
adc
sahf
dec
test
enter
hlt
cmp
push
outsl
imul
xlat
inc
movsb
daa
jbe
cmpsb
xorb
inc
lds
sahf
outsl
popf
jo
mov
fistpl
sub
sbb
mov
push
xchg
inc
ja
inc
pop
hlt
mov
clc
xchg
jnp
and
hlt
sub
add
es
fs
dec
dec
dec
into
mov
sbb
dec
rolb
fsubl
stos
pop
lods
ret
mov
inc
pop
xor
adc
mov
loope
and
fdivl
ds
fwait
cmpsl
mov
push
addr16
fnstsw
jge
sti
das
iret
jnp
pop
adc
stos
adc
sbb
cmp
cmc
xchg
push
pop
mov
jbe
mov
push
in
imul
or
roll
xchg
call
dec
mov
stc
mov
add
xchg
push
aad
push
icebp
imul
inc
pop
sahf
test
xor
xchg
addr16
push
xor
insl
in
or
xchg
dec
jne
inc
fs
xchg
pop
fwait
fs
lds
push
dec
dec
fisubrl
shll
hlt
mov
xchg
push
nop
mov
pop
out
dec
mov
test
negb
inc
stos
fs
and
dec
inc
test
sub
imul
sahf
call
sbb
ja
imull
loop
inc
adcb
pop
xchg
adc
xchg
lods
jnp
sahf
push
lea
xor
pop
lahf
jns
cmp
xlat
es
sti
aam
daa
cld
push
test
add
mov
andl
aas
data16
mov
push
test
mov
mov
sub
in
mov
jne
push
mov
or
mov
das
inc
sbb
cltd
xchg
ret
or
sub
sub
mov
mov
stos
in
or
mull
dec
out
cmp
rcl
push
or
dec
cmp
fidivs
jo
inc
dec
pop
cld
xchg
divb
pop
sub
xchg
lods
cmp
leave
dec
xor
push
popa
sahf
daa
jle
or
add
lcall
sbb
out
sarb
cwtl
das
subb
pop
sub
dec
jmp
andb
dec
out
sbb
loope
cwtl
aas
adc
out
test
mov
mov
scas
or
pop
pop
cmp
jle
andb
movd
xchg
adcb
jge
popa
cwtl
lods
sahf
jecxz
dec
cmp
pop
rcll
mov
out
and
adc
sbbb
cmpsl
lods
cmp
push
jae
cmp
push
ret
pop
pop
adc
push
hlt
cmp
mov
ret
shr
cmp
sbb
cltd
push
js
shll
lret
cmp
gs
jmp
xchg
out
pop
dec
ds
nop
add
or
pusha
sahf
pop
add
sub
dec
xor
lcall
imul
cmp
ret
xor
les
loopne
mov
ficoml
pop
sarb
popa
add
xor
js
inc
jge
int3
push
cmp
es
mov
push
cmpsb
in
popf
sub
jp
sub
jecxz
loopne
pop
dec
pop
jp
cmpsl
fisubs
subb
mov
add
iret
and
xor
mov
dec
in
inc
test
or
dec
int
add
out
std
jl
xor
insb
jg
icebp
sbb
lahf
js
shlb
jl
push
pop
or
sub
xchg
pop
add
or
mov
js
sarb
out
fdivrl
clc
test
lahf
call
cmp
sub
iret
mov
aaa
jmp
sbb
ret
data16
out
cmpsl
or
lret
je
je
call
loop
dec
inc
fistpll
mov
je
mov
pusha
fsubl
push
and
bswap
insl
xchg
or
iret
jb
pop
sub
test
int3
pop
aaa
cwtl
call
xor
and
cmp
pop
addr16
mov
xor
test
into
ud0
sbbl
mov
insb
add
icebp
rclb
lock
and
frstor
les
push
xor
xor
lcall
jle
mov
push
pop
inc
popa
jg
xchg
adc
out
push
and
sub
jnp
ss
cs
pop
mov
outsb
out
enter
int
adc
push
dec
stos
mov
jnp
cmp
pop
push
js
mov
outsl
mov
imul
out
or
jecxz
int3
sbbl
adc
in
xor
pop
sub
sub
lds
lods
mov
sbb
mov
add
fnop
outsl
rol
pop
inc
lret
mov
add
pop
cmp
out
inc
dec
pop
out
push
jmp
fmull
stos
xchg
imul
shl
cmp
inc
jl
popl
dec
pop
mov
data16
stos
xchg
xorl
in
sub
pop
fnstcw
out
out
push
mov
lods
sub
int
std
cli
mov
jp
inc
mov
rol
cli
in
sbbl
mov
xor
mov
arpl
pop
cmp
leave
mov
adc
dec
andl
shl
cmc
outsb
mov
les
test
mov
aam
stc
icebp
aad
jns
cmpsb
test
pop
ljmp
pop
int3
sbb
xlat
jae
mov
xor
enter
mov
roll
sbb
enter
or
je
xor
sbb
adc
xchg
sub
xchg
imull
fs
mov
out
das
cmpb
ss
push
fsubrs
lret
xor
cli
or
push
or
sti
dec
rolb
jp
pop
rorl
lahf
fildll
sub
mov
sbb
lcall
mov
pop
or
sbb
xchg
nop
push
lods
in
mov
pop
int
xor
mov
rcr
jo
dec
ret
pop
repnz
pop
test
in
xchg
add
adc
jo
int3
push
jo
push
push
int3
adc
push
ret
insb
sbb
pop
lea
mov
in
sbb
ret
outsb
push
mov
js
mov
adc
mov
sub
push
sub
lods
lea
inc
mov
inc
xchg
out
push
adc
sysenter
addr16
lock
or
cmp
push
negb
loope
add
iret
repz
adc
adc
sti
cmpb
in
imul
add
cmp
add
sbb
jbe
push
in
pop
jbe
repnz
push
in
stos
cmp
mov
iret
icebp
ret
push
lods
dec
stos
rorl
inc
lcall
inc
aam
out
decb
stos
inc
sub
jno
hlt
push
mov
push
outsb
or
xchg
inc
mov
xor
dec
movsl
push
iret
pop
icebp
lds
push
rol
xchg
out
mov
pop
sbb
jbe
add
jg
lods
lock
xorl
es
mov
xchg
cmp
mov
add
lea
sbb
cmp
add
push
sub
divb
test
stos
dec
xor
mov
push
add
movsl
jae
addr16
dec
in
decb
dec
js
cltd
xor
ds
out
cmpb
or
cmp
test
popf
sbb
pusha
mov
ljmp
or
mov
mov
add
cmp
outsl
or
pushf
rcl
aad
cld
add
push
test
sbb
nop
insl
int
in
xlat
es
mov
jg
sti
xor
and
push
jo
jo
xor
or
shll
ret
mov
jno
das
jmp
jno
movsb
pop
pop
movsb
sub
cmp
sub
dec
je
add
push
loop
lretw
aam
add
test
adc
xchg
sub
sub
cmp
pop
insl
mov
mov
or
imul
pop
scas
lds
daa
inc
iret
popa
popa
adc
mov
inc
insl
xor
xchg
cmp
mov
sub
test
lds
fs
or
inc
push
lcall
jmp
cwtl
das
or
stc
repz
mov
add
sbb
sti
or
sub
rolb
pop
cmpl
mov
inc
xor
arpl
mov
aaa
add
xor
sbb
rol
jb
inc
ds
fisubl
scas
and
je
push
xor
inc
loop
aaa
jle
sub
lds
cmc
inc
mov
jecxz
negb
cmp
call
sbb
sub
inc
pop
arpl
and
dec
imul
leave
inc
lret
jb
mov
sbb
sbb
rorb
rcl
cmpsl
lock
pop
mov
jp
mov
adc
aad
inc
es
mov
push
jb
xor
or
shrb
mov
xchg
push
insb
stos
jp
dec
pop
movl
ljmp
inc
fdivrs
sub
and
pop
mov
sbbb
in
ljmp
lock
cli
dec
rcl
adc
pop
dec
rcrl
inc
jmp
adc
fcoms
and
je
push
pop
pop
out
jle
xor
mov
decl
cli
mov
fistpl
aam
xor
xor
shlb
lret
rol
iret
loopne
xchg
sub
mov
rcl
into
push
push
jno
xchg
decl
mov
aad
inc
loop
pushf
mov
adc
add
outsb
pushf
jmp
cmp
imul
out
scas
xor
cltd
sub
adcb
popf
in
push
xchg
push
jae
mov
dec
addr16
popa
pushl
sub
mov
mov
popa
jge
xlat
hlt
push
or
pop
or
int
push
lods
loope
jbe
das
inc
out
in
fwait
xchg
mov
std
pusha
cmp
inc
ljmp
lea
dec
mov
or
push
lods
ror
pop
sub
sbb
imul
nop
sub
enter
es
cmpsb
xchg
add
test
mov
loopne
iret
lahf
sbb
mov
push
bound
cmp
int3
jmp
push
movsl
mov
xchg
bound
repnz
not
mov
sub
inc
enter
imul
jmp
sub
xchg
mov
sahf
sub
jecxz
sub
cmp
mov
sbb
out
aam
mov
bound
hlt
in
jns
out
stos
movsl
push
repz
stc
and
adc
cmpsb
cmc
and
pop
push
xor
aaa
sub
cli
mov
mov
or
mov
inc
mov
pop
lds
dec
cmp
adc
insb
pop
mov
insb
ss
mov
movsb
jmp
mov
inc
in
pusha
xor
loopne
mov
mov
jmp
or
sub
sub
int
subl
pusha
outsl
mov
lods
vpsraw
cli
xchg
push
lcall
fdivrs
testb
cwtl
sti
pop
mov
aam
hlt
pop
idivl
fidivs
cmpsl
jb
fldt
jl
movsl
cld
mov
sub
es
fcomp
div
mov
adc
add
jne
test
cmp
pop
and
mov
cli
lods
aaa
mov
adc
int3
push
inc
gs
xor
push
and
loopne
sarl
cmpb
xchg
jecxz
aam
cld
push
stos
subb
mov
insl
sbb
stos
das
push
test
mov
adc
and
adc
mov
jo
mov
movups
add
push
inc
fcom
add
pushf
data16
in
cmpsl
adc
or
int
out
mov
mov
loop
lea
xor
movsl
and
sub
jle
in
ja
pop
mov
cld
sub
pop
mov
pop
sahf
push
sub
shll
mov
ret
jae
in
sahf
add
adc
movsb
je
movsb
xor
test
fmul
in
inc
stos
inc
js
scas
inc
fstpl
pop
mov
lds
call
ret
ja
adc
dec
mov
jle
mov
mov
add
sub
arpl
cmpsb
js
jnp
ret
mov
push
add
shl
inc
dec
fwait
insl
stc
jo
add
adc
jae
jnp
push
mov
xor
scas
sbb
jl
fwait
inc
pop
lds
jl
pop
mov
scas
sub
add
mov
lea
mov
xor
pop
mov
fsubr
dec
js
jnp
sub
mov
out
int3
aad
lods
inc
push
rcll
dec
fld
insb
aad
outsl
mov
outsb
or
mov
je
pop
mov
ja
mov
adcb
mov
arpl
mov
pusha
add
fadd
movsl
sbb
cmpsl
insb
mov
and
xchg
arpl
ret
test
mov
mov
xorb
cli
jmp
pop
sub
inc
jae
in
fistpll
or
and
out
or
je
mov
dec
fdivrs
cmp
pop
stc
push
fnstenv
daa
jo
pop
dec
mov
add
xlat
mov
lods
ja
lods
sub
adc
jle
movsb
int3
mov
push
xchg
add
jmp
sbbl
in
sbb
mov
xchg
ret
in
mov
or
sti
andb
xlat
es
dec
or
mov
inc
push
adc
push
popa
inc
or
sar
out
stos
dec
push
fnstsw
pop
xor
and
add
insl
aam
xchg
push
add
out
call
dec
push
sub
mov
aas
pop
outsl
and
fxch
mov
ds
shll
fsubrs
stc
nop
js
dec
push
test
es
cmp
xor
mov
pop
movsl
into
sub
xor
sub
jne
add
push
inc
fistpll
sbb
or
mov
push
xorb
xor
mov
fstps
mov
xchg
js
pushf
out
aad
lds
mov
pop
loop
fsub
dec
stos
das
in
mov
les
sbb
ja
adc
mov
adc
and
xchg
lret
inc
lods
int3
stos
mov
aam
adc
push
inc
mov
popf
outsl
popf
ret
xor
jp
and
adc
aad
int
cli
sti
das
mov
sbb
icebp
lds
adc
test
and
fsubl
fsubrp
popf
jb
add
aaa
aas
push
cli
aaa
aas
push
gs
pop
outsl
mov
sbb
ljmp
cmp
xchg
sahf
mov
adc
stos
les
int3
cs
dec
cmp
outsb
cmp
pop
sub
sbb
mov
aaa
loopne
pop
cmp
ljmp
call
xchg
rolb
pop
jne
jecxz
loopne
enter
btr
nop
inc
adc
fnstsw
and
in
mov
push
or
sub
xorb
inc
pop
sub
xor
or
jb
jns
sbb
out
pop
clc
sbb
cmpsb
ret
mov
and
add
pop
push
xor
or
arpl
cwtl
pop
out
mov
add
fiadds
leave
sbb
add
popf
mov
fildll
les
loope
jae
ss
imull
adc
jnp
fsubrs
adc
adc
or
xor
sbb
push
mov
mov
arpl
inc
sub
sbb
scas
ss
rclb
loopne
mov
ja
sbb
loop
or
inc
mov
cmp
sub
cmp
scas
leave
push
aad
inc
add
std
add
xchg
mulb
shlb
jle
push
enter
leave
popf
add
sahf
ljmp
add
ds
xchg
hlt
movsb
ficomps
pop
cmp
pop
les
cmpsb
imul
fdivr
inc
push
mov
push
lcall
dec
mov
fidivrl
inc
push
insl
jo
mov
add
pop
sbb
ss
idiv
sbb
test
lret
addr16
jge
jo
pop
lahf
pop
inc
adc
rclb
xor
cwtl
push
add
adc
push
add
lods
test
jmp
mov
and
mov
gs
jns
jo
jle
mov
mov
lahf
xchg
rorb
mov
in
rorb
cmp
cwtl
jecxz
imul
sub
xor
and
rorl
test
mov
ds
loop
adc
or
add
in
adc
jle
and
add
xor
stos
out
or
add
popf
mov
or
mov
push
jns
xchg
and
xchg
add
sub
jbe
jno
jns
jae
mov
xor
loope
pop
out
sti
inc
ds
je
stos
sub
and
mov
add
int3
lahf
mov
mov
mulb
test
stos
mov
mov
out
sub
int
lret
jmp
rol
jecxz
int
lds
cltd
rorl
dec
inc
and
pop
xchg
mov
mov
repz
cwtl
dec
jle
jnp
mov
jle
iret
and
dec
mov
pop
ret
outsl
add
arpl
int3
test
mov
std
cs
mov
loope
rcrl
mov
je
lds
push
loope
fstps
cli
jle
cmp
daa
mov
clc
sbb
xchg
stos
jb
xchg
ret
fistps
orb
sahf
and
inc
add
stos
xor
xor
test
movsb
insb
das
pop
int3
out
push
cltd
mov
sar
ss
jns
pop
mov
dec
mov
sub
imul
insl
mov
xor
outsl
jo
or
add
cmc
xchg
jle
popf
lcall
xor
sti
scas
scas
and
jne
inc
out
sahf
jg
sarb
bound
pop
jno
inc
mul
inc
scas
ret
dec
pop
add
and
pop
mov
sbb
ljmp
cmp
mov
pop
xor
mov
add
dec
jns
adc
scas
out
int3
lret
outsb
in
out
push
stc
jle
add
xchg
lea
or
lock
mov
notl
jmp
mov
dec
in
fisttpl
hlt
loopne
stc
pop
fnstcw
shlb
jmp
push
out
test
jne
fistpl
xchg
addr16
in
xchg
pop
mov
cmpsb
add
xor
mov
mov
add
mov
pop
xor
cmp
fs
fldln2
jle
xor
push
lods
push
sub
pop
push
cmpsl
es
std
fcompl
test
pop
jns
lcall
and
mov
and
sub
mov
sbb
fsubrp
int3
mov
lods
cmp
mov
sub
or
mov
mov
sti
xchg
jb
or
les
pop
lea
mov
push
dec
test
sub
pushf
int
decb
sbbb
sub
mov
sbb
test
insl
pop
sub
lret
cmc
pop
push
or
dec
xor
mov
lock
add
dec
fstps
mov
lods
xor
pusha
popa
and
popf
or
loopne
push
push
cs
ds
int
popf
jl
pop
enter
incl
std
cmp
stos
imul
test
cmpb
push
pop
je
andb
adc
dec
dec
scas
xor
add
scas
sahf
arpl
insb
outsl
add
push
cmp
pop
mov
cmp
xchg
xor
adc
iret
push
lods
cli
popf
sbb
push
mov
xchg
add
dec
sti
insb
scas
ss
xchg
cmp
fwait
xor
or
adc
mov
fbstp
mov
mov
clc
or
cli
adc
mov
pop
jo
sub
out
pop
and
push
out
push
shrb
mov
cmp
in
lcall
fsubrl
ljmp
lock
iret
xlat
loope
sub
pop
mov
dec
sub
lods
jmp
cmp
jb
sbb
mov
ret
jne
dec
decb
adc
out
loopne
mov
xlat
mov
add
scas
mov
pop
stos
mov
bound
sub
scas
lcall
bound
into
imull
aas
les
shrl
pop
or
test
cmp
aad
sbb
das
into
fdivrs
insb
cwtl
enter
sarb
sub
jge
lahf
push
and
stc
scas
ret
call
cmp
cmp
push
pop
xor
rcrb
push
ds
test
xor
in
xor
out
inc
dec
mov
arpl
rcr
rclb
aad
fcmovnb
idivl
lock
xchg
pop
mov
out
cwtl
andl
adc
jnp
add
stc
out
mov
lods
scas
inc
fwait
in
mov
pop
mov
inc
stos
mov
fidivrl
mov
popa
jns
adcl
loop
mov
sahf
sub
push
or
add
aas
xchg
flds
out
or
xchg
mov
cltd
jmp
shll
mov
dec
mov
xchg
call
jns
jmp
xchg
mov
stos
incl
xchg
es
loopne
jp
int3
or
or
out
adc
pop
cmc
xchg
pop
jl
mov
inc
fidivrl
mov
icebp
pop
fcomps
pop
nop
jns
call
ljmp
pop
or
data16
mov
jp
inc
in
adc
pop
lret
das
pop
in
cmpsb
in
into
adc
inc
out
imul
xor
test
cltd
add
mov
mov
popf
add
es
push
repnz
mov
and
jmp
mov
fimuls
and
hlt
xchg
jge
mov
ja
add
gs
adc
xlat
mov
push
test
dec
lock
fdivs
inc
fcompl
xchg
repz
cmp
push
into
paddq
loop
call
pop
mov
daa
push
mov
cmp
jne
loopne
loope
aas
cld
xchg
in
icebp
cmp
pop
sbb
testl
loope
in
sahf
mov
loop
shll
mov
mov
nop
mov
add
sub
dec
and
cli
popf
inc
xlat
into
sbb
pop
mov
jno
sbb
pop
push
pop
mov
cmp
and
sahf
stc
mov
into
mov
pop
lcall
and
scas
call
xor
xchg
mov
ja
mov
jg
invd
sti
jp
push
fsubs
popa
mul
mov
fldt
adc
dec
jmp
mov
cmp
or
adc
adc
outsl
decb
imul
inc
scas
fwait
xchg
or
jne
jg
cmpsb
mov
ss
gs
dec
pop
or
jne
jns
shrb
adc
push
jl
cmp
adc
jbe
cmp
out
inc
cmp
loope
cmpsb
aam
int3
arpl
ljmp
lods
or
xchg
fwait
cmp
lret
mov
dec
in
stos
lods
ljmp
pushf
pop
loopne
mov
cltd
stos
rep
xor
jp
cmpsl
mov
dec
lock
lea
pop
sub
add
imul
sub
sub
lds
fbstp
xchg
dec
stos
ljmp
std
sahf
sbb
mov
dec
std
mov
repz
pop
fwait
jp
add
mov
imul
out
mov
lock
xchg
and
push
fucomip
dec
stos
xor
push
gs
jb
sbb
or
into
in
out
enter
and
arpl
aas
outsb
call
divl
sub
cli
xchg
and
xchg
sbb
scas
test
pop
mov
sub
shl
inc
rcrb
sarl
or
popa
or
test
shlb
jns
jecxz
mov
out
stc
in
add
lds
lea
and
arpl
cmp
sbb
sub
adcl
cmc
lcall
out
mov
mov
mov
mov
fmull
les
mov
iret
ja
pop
out
sub
popa
roll
insl
xchg
mov
or
xor
sbb
adc
xchg
sub
adc
repz
repnz
xlat
movsl
in
out
adc
jle
mov
xor
test
lock
inc
daa
or
or
cli
adc
pop
daa
in
push
xor
imul
test
mov
clc
test
xor
sahf
xchg
add
cld
jecxz
xchg
lcall
or
loop
testl
movsl
lds
sub
push
pop
inc
syscall
and
adc
pop
loop
cmp
std
pop
jbe
mov
push
inc
ljmp
repz
test
sub
int3
mov
aam
pop
inc
das
jnp
insl
xor
cwtl
lods
push
sbb
mov
or
stos
jbe
sbb
scas
add
cld
lcall
in
stos
dec
lret
jns
addb
cmpsl
call
imulb
scas
sahf
mov
jmp
scas
js
jo
scas
out
pop
aam
sub
mov
outsl
scas
dec
add
icebp
mov
pop
push
adc
ret
dec
xlat
mov
push
mov
orb
std
adc
mov
dec
into
mov
jp
pop
fwait
lret
xlat
push
xchg
push
lock
into
and
lret
test
cmp
mov
mov
add
rcr
xchg
xchg
dec
lret
cltd
std
shrl
sbb
xchg
pusha
fbstp
xchg
lock
insb
cmp
andb
mov
jne
cmpsl
cmp
inc
fisttpl
std
jecxz
inc
pop
dec
aam
fs
fisubs
mov
test
in
cmp
pop
xlat
xor
arpl
or
inc
movsb
xchg
adc
jo
loope
mov
push
or
lahf
sti
sub
xchg
add
lods
mov
pop
test
inc
inc
insb
pushf
adcb
test
mov
mov
jge
cwtl
daa
dec
aaa
pop
out
inc
push
aas
mov
xchg
loope
dec
push
mov
inc
jne
outsl
sub
adc
pop
xor
sbb
fwait
sbb
cmp
and
loopne
inc
pop
insl
test
ret
jne
pop
adcb
mov
sbb
jo
mov
imul
mov
pop
dec
pop
in
xor
push
push
xor
addr16
imul
mov
mov
sub
jne
sub
xchg
pop
mov
mov
inc
pop
enter
pop
add
aad
or
lahf
ret
push
mov
enter
xor
imul
mov
pop
cmp
mov
cmp
push
adc
cltd
push
or
cs
imul
test
lahf
lea
in
inc
push
and
xor
aad
loopne
lret
push
xchg
int
lahf
inc
std
scas
lods
cwtl
mov
inc
out
fwait
sti
push
xchg
iret
sbb
mul
xchg
add
or
das
rcr
lods
mov
cld
adc
add
jmp
mov
cld
icebp
mov
push
fucomip
add
adc
inc
cmc
jl
fwait
jb
xchg
and
cltd
out
outsl
andl
into
fadd
jns
and
mov
orl
push
mov
pop
icebp
cmp
and
and
xor
push
aas
imul
push
mov
xor
je
xor
inc
push
xor
dec
arpl
in
ja
add
mov
dec
mov
cwtl
stos
dec
in
mov
add
enter
mov
inc
and
test
scas
dec
sbb
push
aas
iret
fistpl
mov
scas
hlt
push
pop
hlt
mov
cltd
adc
jnp
inc
or
daa
mov
push
repnz
stc
mov
adcb
dec
and
jne
jbe
lods
cmp
push
ret
lods
dec
xor
cmpsb
loopne
mov
std
dec
shlb
pop
outsb
cmp
loop
sarl
data16
imul
xchg
bound
in
das
cmp
popa
mov
add
fmulp
int
add
das
mov
pop
cmpsb
lea
notrack
mov
sbb
jecxz
jo
repnz
mov
inc
int
add
push
push
xor
cmp
pushf
dec
les
testw
jns
adc
stc
cmc
xchg
mov
imul
cmp
jno
push
jns
jge
or
cmc
xchg
or
je
cmp
adc
fs
test
jo
js
notb
enter
dec
mov
pop
addl
sbbl
jo
jecxz
adc
in
adcl
and
jecxz
xchg
je
ret
int3
jnp
mov
cmc
cltd
push
inc
loope
cltd
fwait
push
hlt
push
xchg
inc
cli
inc
add
fwait
test
jbe
xor
jae,pn
fsts
push
cmp
test
lock
mov
and
aaa
or
into
ret
mov
out
and
inc
into
sahf
xchg
xor
addr16
xchg
inc
shlw
insl
push
add
shrl
mov
ret
mov
fdivl
pop
iret
or
cli
xlat
mov
inc
gs
sbbb
aaa
testl
mov
fnsave
lret
jb
cmp
push
call
pop
dec
call
movl
shr
xchg
jg
xorb
xchg
sub
hlt
adc
jecxz
inc
adc
int
ljmp
push
outsl
lea
xchg
jp
imul
leave
adc
cli
out
jae
sub
mov
outsb
ja
cmpsl
jge
repz
sbb
pop
lock
push
in
push
js
inc
add
cmp
xchg
mov
mov
aaa
cmc
pop
adc
in
into
mov
ret
jo
out
cmpsl
adc
add
out
mov
aaa
dec
and
bound
mov
add
int
enter
pop
cmp
sub
pop
sbb
popl
dec
rcrb
fistl
leave
adc
jo
in
adc
shlb
out
cmpsb
leave
jae
jno
ss
mov
ja
jg
sub
scas
xchg
lret
lds
adc
in
inc
movsb
loopne
lahf
ss
add
das
xchg
data16
popf
and
out
xor
cmp
jle
jp
out
popa
adc
inc
xchg
sbb
test
sub
jl
test
mov
xor
cmp
mov
push
movsl
sbb
inc
push
je
jl
jp
xor
mov
dec
lds
adc
lods
pop
sbb
rclb
arpl
xor
fbstp
nop
fwait
xor
and
push
pop
cmp
mov
lock
push
out
and
or
out
je
adc
sti
es
pop
out
or
scas
decl
jbe
pop
push
pop
xchg
das
mov
dec
jecxz
stos
outsl
push
sahf
push
imul
mov
out
add
xchg
add
into
cld
inc
pop
sbb
inc
sahf
xchg
pop
rorl
push
loope
sub
add
aas
test
mov
rol
popf
mov
sti
or
repnz
or
pop
adc
jmp
aas
mov
sub
cmp
mov
loop
xlat
mov
dec
stos
xor
dec
call
daa
std
loop
cltd
stos
in
or
out
out
dec
dec
push
bound
movsb
jmp
sbb
call
xor
das
addr16
push
pop
push
push
dec
sbb
std
and
and
add
int3
add
xor
add
push
xchg
ds
adc
ljmp
inc
pop
loope
mov
mov
jnp
repz
sbb
xlat
or
call
or
xchg
out
inc
out
icebp
pop
scas
stos
xchg
je
sub
ficompl
jecxz
mov
in
mov
fwait
add
psadbw
mov
inc
sarb
dec
pop
or
cmc
loopne
pop
dec
xchg
addr16
imul
imul
sub
dec
jo
cld
int
test
cmp
add
inc
incb
dec
pop
inc
in
lcall
sub
xor
das
outsb
pop
fmulp
int3
push
inc
outsb
lds
and
lds
outsb
sub
add
jge
dec
pop
fsubl
mov
mov
adc
outsl
sub
jge
pop
sub
in
or
fcomi
inc
xchg
cmc
mov
xchg
shrb
add
push
jb
je
xlat
test
shrb
outsl
hlt
adc
divb
aam
insb
mov
mov
out
push
xchg
lods
pop
loopne
inc
dec
lock
mov
xchg
sbb
in
test
and
xchg
or
adc
aas
inc
push
lcall
jge
push
push
shl
rorl
sbb
xchg
or
push
add
mov
fildl
hlt
pop
lock
clc
sub
jo
lret
in
cwtl
lret
enter
cmp
aas
mov
push
or
xchg
cs
push
xor
cmp
ffreep
or
lret
adc
test
cmp
decl
repz
cmp
fstpt
call
jmp
test
insb
adc
out
adc
ret
mov
das
sbb
repz
sub
je
jl
and
and
mov
push
jne
into
test
mov
cmp
push
insb
mov
and
fistpl
fisubrl
ret
icebp
or
decb
push
add
pop
add
test
push
out
mov
xchg
sbb
pushl
push
test
je
movb
das
jne
ljmp
repz
pop
sub
mov
xchg
jp
in
stos
mov
rclb
mov
adc
mov
push
and
call
add
cmpsb
xchg
popa
das
ss
dec
sub
cmpsb
pop
jbe
clc
cwtl
iret
mov
out
and
in
cltd
test
xor
push
dec
pusha
sti
into
sub
mov
add
and
fnstenv
dec
loopne
push
mov
imul
adc
xor
sbb
adc
xchg
loope
out
adc
addb
cmp
ret
mov
in
and
and
cmc
jmp
push
cmp
sbb
sbb
mov
sbb
sbb
jg
jecxz
pop
xchg
xor
jne
sub
sub
mov
xchg
add
leave
push
push
mov
sbb
cmp
pushf
xchg
pop
xlat
pusha
clc
cmp
dec
sub
jnp
test
inc
xchg
add
add
and
punpckhdq
or
mov
xchg
mov
dec
and
shl
ja
lcall
mov
fwait
pop
mov
leave
scas
xchg
add
mov
out
aaa
call
loope
xchg
cmp
and
xchg
je
sub
jbe
push
pop
cmp
sub
push
mov
icebp
test
mov
fdivrl
fwait
cmp
xchg
insb
rorb
shl
negl
dec
dec
in
test
sub
jp
je
out
imul
mov
sbb
ja
jecxz
xchg
jp
cmp
mov
cld
jmp
fidivs
pop
inc
mov
scas
pushf
and
data16
inc
cli
cmpsb
sub
icebp
fiadds
cwtl
test
daa
inc
sub
xchg
lahf
mov
jmp
rcl
pop
mov
fidivl
pop
pop
pop
test
in
sub
fwait
dec
add
mov
iret
mov
dec
mov
fimull
sarb
stos
std
xchg
inc
fiadds
pop
pop
repnz
fnstsw
imulb
push
out
shll
cmp
fbstp
into
inc
inc
fdivs
les
xor
mov
pop
fisubs
pop
jno
sti
jo
out
stc
push
stc
sub
rol
mov
das
stos
jle
movb
inc
push
jmp
bound
mov
push
inc
shr
test
stc
push
inc
mov
pop
mov
xchg
xor
jge
push
fstps
aas
dec
cmpsb
test
pop
pop
push
pop
xor
mov
out
adc
sbb
mov
and
mov
insl
jnp
and
imul
imul
adc
pop
add
mov
dec
mov
std
notl
in
fstps
addr16
sub
mov
idivl
sbb
popf
je
xor
mov
push
lods
popf
sbb
aaa
pop
imul
add
pop
jmp
clc
aaa
add
hlt
mov
fstps
repz
call
mov
cmpb
cld
sahf
mov
lds
push
adc
notl
popa
call
jecxz
inc
insb
pop
mov
xchg
cpuid
dec
xchg
cmpb
push
sub
mov
inc
icebp
loope
mov
adc
jbe
mov
adc
adc
jae
mov
sbbb
in
bound
hlt
mov
mov
and
pushf
cli
lret
cmp
sbb
push
loop
fwait
push
mov
inc
cld
mov
popf
outsb
push
out
test
movsb
or
adc
int
jle
adc
push
in
pop
mov
xchg
rol
mov
pop
icebp
jle
out
and
loope
xchg
in
gs
mov
sub
inc
push
ds
arpl
imul
xrelease
adc
xor
jns
xchg
xchg
leave
mov
out
inc
ret
leave
pusha
shlb
add
ret
repnz
mov
cs
xor
mov
xchg
push
inc
jmp
cmpsl
xor
xor
scas
mov
leave
int
jge
loope
es
aaa
lahf
inc
sub
push
cmp
xchg
or
scas
ret
mov
das
adc
adc
loope
adc
and
insb
jl
mov
notb
push
test
mov
or
cmpsl
and
mov
fdivrl
fisttpll
xchg
test
mov
and
es
cmp
stc
lret
jae
xchg
test
ret
cmpsb
push
dec
add
icebp
lret
loopne
or
stos
jmp
add
sub
inc
popf
or
xchg
imul
in
mov
add
push
nop
jo
add
and
pop
pop
xor
sbb
cli
fs
pop
mov
fistps
jle
arpl
mov
arpl
aad
dec
fidivrl
fwait
lret
mov
mov
push
addr16
scas
stos
repz
add
mov
cmpb
repz
jge
lock
mov
aam
addl
push
xlat
dec
dec
pop
movsb
mov
add
cs
test
inc
add
xchg
xchg
adc
sahf
fs
dec
xlat
std
sbb
push
dec
addr16
push
jno
jl
jns
and
stos
fdivrs
push
cs
mov
andb
leave
mov
mov
rclb
subl
push
movsl
jno
jle
push
dec
mov
int3
xchg
lock
inc
fwait
das
inc
aaa
or
lds
jg
mov
pop
pop
mov
jle
mov
mov
mov
mov
rol
and
in
jbe
test
out
cmc
int
cwtl
mov
out
fbld
xchg
imul
aad
xchg
sub
cmc
sub
jo
mov
xor
sbb
fsubs
xchg
clc
mov
mov
sbb
in
test
adc
cmp
xlat
into
pop
or
xchg
mov
loope
ja
rolb
add
je
pop
jle
xchg
inc
sbbl
pop
pcmpgtd
test
loopne
mov
sub
push
xchg
mov
enter
jmp
or
jl
icebp
insl
and
sbb
mov
lcall
dec
popa
std
shlb
cmp
mov
mov
ds
jge
cmp
mov
push
adc
movsl
pop
push
in
push
stos
cwtl
mov
adc
pop
jb
test
adc
pop
push
leave
xlat
dec
sub
pop
dec
sbb
dec
icebp
cs
ss
fsubr
aam
push
xchg
add
add
xor
pop
cs
dec
and
and
cmp
pop
shrl
loope
xlat
fstpt
add
push
add
xlat
lcall
cmc
addb
aad
dec
or
jnp
movsb
lods
inc
negb
int3
and
repz
and
pop
push
xor
cmpsl
xchg
and
add
cmp
loop
dec
fwait
in
push
stc
cmp
sti
fwait
lret
pop
andb
test
cmc
es
fists
mov
dec
ljmp
test
gs
insb
jl
sahf
scas
jne
arpl
pop
xor
test
cmpsl
jp
lahf
pop
fs
xchg
jp
mov
rcrl
or
stos
mov
sub
notl
jecxz
mov
dec
inc
mov
stos
sti
fnsave
adc
call
ss
pop
loop
adc
test
jecxz
push
aas
mov
inc
sbb
jl
add
je
push
in
mov
je
fucomi
xchg
xor
movsl
push
adc
std
lods
sub
aas
ss
mov
imul
pop
lret
in
jp
pop
jg
mov
enter
out
roll
push
ret
test
cmp
cmp
out
jns
ljmp
pop
xchg
xchg
xor
enter
lret
pop
les
jle
lods
fdivl
mov
cmp
call
xchg
nop
ss
push
leave
cmp
xor
aam
mov
je
jae
ljmp
lods
xchg
jecxz
add
dec
loope
in
fnstcw
loopne
mov
and
fstpt
into
int
imul
cmp
int
jp
xchg
pop
add
pushf
call
adc
imul
or
ror
jb
cwtl
test
push
cmc
sub
or
xor
fldenv
popa
out
lahf
outsb
fisttpl
out
inc
aas
jno
mov
or
outsl
jg
mov
lds
movsb
pop
or
jno
xchg
cwtl
or
shrl
mov
js
and
jne
js
pop
and
mov
add
out
jae
ds
cld
inc
aas
push
ret
dec
sub
inc
lret
push
pop
sbbb
repnz
fisubrs
jno
jo
insl
pop
mov
cmpsb
dec
stos
rorb
mov
loop
movsb
add
aad
imul
inc
cmp
xor
lds
out
in
gs
xor
jb
pusha
outsb
dec
add
iret
lea
mov
and
push
int3
lahf
stos
aaa
pop
in
test
mov
or
or
push
les
out
add
xor
push
mov
push
ja
test
xorl
lods
sbb
int3
int
hlt
push
push
in
xchg
aam
push
add
inc
jp
pop
jo
scas
popa
fidivrl
pop
mov
bound
inc
hlt
sub
call
rolb
test
fstpt
hlt
mov
dec
test
repnz
push
push
xchg
test
pop
and
or
ljmp
scas
pop
addr16
lea
push
xchg
shrl
mov
test
out
loope
loop
decl
mov
xor
cmp
push
cs
dec
lcall
cwtl
mov
add
inc
into
in
mov
pushf
aas
cmp
xchg
add
or
mov
aaa
ficoml
call
cmc
fldl
xchg
ljmp
pop
and
lret
jne
loopne
out
xchg
or
dec
movsb
shl
in
je
inc
fs
lods
mov
jmp
sub
das
or
pop
out
pop
clc
sbb
jb
cld
xchg
pop
xchg
nop
mov
cmp
subl
xchg
sbb
pop
fwait
sti
gs
mov
lret
mov
sbb
lds
ds
pop
sbb
fbstp
sub
fidivl
cmp
sbbl
mov
xor
sub
jns
xchg
cli
imul
iret
jns
push
inc
frstor
mov
sbb
cld
bound
inc
mov
leave
pop
js
sti
fwait
xchg
inc
out
testb
sbb
in
cs
lahf
mov
enter
and
sbb
jb
movsl
jp
aas
jno
lods
push
leave
add
dec
jl
jp
popf
xor
lcall
push
jmp
mov
insl
ljmp
lret
outsb
xchg
xchg
mov
jbe
mov
scas
push
test
je,pt
icebp
arpl
jge
xchg
add
push
cmpsb
cmp
inc
push
inc
ljmp
jno
lcall
ret
cmp
enter
inc
mov
xor
loopne
cmpsl
movsl
inc
fisttpll
push
fstp
jnp
mov
pop
or
push
cmpsb
sbb
cmp
jg
in
sub
shrb
stc
clc
push
jmp
inc
mov
loopne
cmp
out
pop
mov
jmp
stos
sahf
add
out
ds
xchg
sbbb
or
sahf
push
test
arpl
out
cmp
and
inc
stos
adc
push
out
rolb
enter
or
xor
dec
inc
sahf
xor
sarl
fisttpll
sub
ficomps
inc
in
lcall
lods
xchg
imul
in
add
sahf
xchg
sub
mov
scas
movsb
movsb
jl
mov
jecxz
call
int
outsl
testl
enter
rclb
scas
loopne
loope
out
ja
mov
pop
jmp
or
testb
das
or
push
repz
lcall
and
mov
dec
or
iret
cmovle
call
push
cli
shlb
je
ljmp
arpl
loope
add
jg
mov
cmp
pop
fcmovbe
push
mov
fwait
testl
mov
aaa
cmp
ja
mov
shrl
fdivrs
lock
iret
out
out
jge
lahf
scas
stos
ja
push
inc
jno
adc
test
stc
repz
mov
fldt
ja
loope
fistps
mov
push
jb
sbb
mov
fistpll
or
dec
mov
mov
sbb
dec
pop
cmpl
sub
addl
test
dec
test
dec
and
enter
inc
xchg
cmc
stc
mov
movsl
xor
repnz
mov
imul
imul
push
xchg
xchg
push
mov
push
pop
push
pop
outsl
jns
je
ja
sub
gs
faddl
enter
test
fnstcw
aad
push
pushf
and
dec
jnp
aad
xlat
mov
orl
cld
mov
ss
rorb
inc
std
xchg
fimuls
outsl
dec
xor
mov
jg
xchg
stos
or
stc
push
sarl
xchg
add
jg
fwait
cmp
iret
aaa
negl
push
sub
mov
add
mov
cmp
out
sbb
push
pop
inc
repnz
test
inc
lods
inc
pop
lret
mov
enter
aas
fs
arpl
adc
xor
dec
jne,pn
inc
out
js
ss
inc
loop
ficomps
inc
jle
hlt
movsw
mov
push
cwtl
mov
xor
adc
pop
popa
aaa
ss
cld
mov
arpl
or
lds
adcl
outsb
pop
mov
push
jb
out
xor
xchg
and
aas
jg
inc
stos
dec
adc
scas
call
mov
xchg
fimull
xor
sti
cmc
push
mov
dec
icebp
int
aaa
imul
call
test
mov
xor
lods
mov
cwtl
das
or
mov
movsb
cltd
aam
lret
lds
iret
xchg
data16
xchg
mov
in
push
lds
xchg
insb
sub
sarb
push
call
mov
outsl
nop
or
ljmp
push
jnp
mov
push
and
lock
mov
imul
cmp
repz
fucomi
call
pop
or
add
push
inc
loop
and
call
mov
xor
jno
or
sbb
pop
dec
jp
xor
cs
ljmp
jb
loopne
aaa
push
inc
push
mov
inc
push
sbb
ss
mov
addr16
sbb
sti
or
push
test
xchg
nop
out
out
popf
pop
xor
fnsave
cwtl
cwtl
mov
ret
sub
jl
add
fs
sub
in
test
xlat
das
imulb
inc
cmp
outsb
jl
adc
lret
negl
insb
out
mov
mov
mov
ret
mov
ret
xchg
jl
xor
outsl
jmp
adc
or
testb
ss
ror
cs
sahf
cli
int
mov
jmp
in
subl
pop
dec
fcompl
fidivrl
add
fistps
mov
scas
lock
and
dec
js
adc
ret
add
in
dec
movsl
loopne
pop
insl
or
cltd
dec
std
mov
stos
xchg
cs
test
mov
out
and
adc
shlb
ss
out
jae
ret
in
sbb
push
aam
xor
adcb
dec
mov
sub
int3
xor
fldcw
mov
pushf
mov
pop
in
xlat
loope
or
sbbl
sub
call
xchg
dec
outsb
add
add
testb
sub
outsb
inc
pop
lcall
sbb
or
or
lcall
loopne
xchg
es
push
xor
call
add
hlt
mov
and
xchg
jo
out
addr16
les
inc
cwtl
xchg
adc
push
push
xor
or
inc
cwtl
out
mov
fcmovu
lds
xor
adc
sub
mov
ret
ja
cmc
and
adc
gs
enter
pop
ret
pop
add
jp
in
les
sub
and
and
cmp
shll
and
and
jae
lds
and
xor
sub
les
pushf
xor
scas
movl
sbb
inc
xchg
push
repz
mov
lret
in
pop
jbe
in
ficomps
cmp
pop
rclb
jl
mov
setne
cmc
movsl
sbb
or
adc
in
popf
and
jle
popa
test
xor
out
cld
ja
lea
or
xlat
in
mov
push
xchg
mov
aam
aaa
xchg
dec
ja
lea
in
hlt
sahf
xor
in
mov
xor
mov
es
idiv
aad
icebp
lcall
pushf
mov
les
in
cmpsb
push
ss
lret
test
push
ljmp
sbb
xor
cmc
and
inc
add
cli
repnz
in
xchg
test
jbe
ja
mov
cwtl
stos
mov
ret
call
shrb
adc
xchg
and
inc
and
xor
or
xchg
xor
arpl
inc
push
out
adc
fimuls
leave
mov
hlt
push
test
add
push
jnp
sbbb
iret
ficompl
stc
pop
jb
xchg
jb
cltd
sub
pop
aam
mov
addr16
sub
mov
or
mov
subps
jb
mov
or
test
adc
divl
mov
dec
imul
fimull
xor
mov
shll
rolb
iret
cmp
fwait
jmp
cmp
xor
mov
xchg
pop
not
push
mov
mov
push
flds
adc
lods
mov
filds
mov
into
xlat
stos
test
call
sub
xchg
mov
es
or
inc
pop
mov
movsl
mov
pop
imull
or
mov
idivb
scas
movsl
mov
mov
scas
fldcw
sbb
ret
inc
imul
xor
sahf
fdivrp
and
mov
fstpl
test
adc
je
pop
lock
adc
jl
stos
jecxz
js
mov
inc
sub
cmpsl
add
jle
jo
and
push
rcrl
sub
lcall
and
fs
push
pushf
dec
push
jmp
mov
out
test
jns
and
subb
or
mov
cmp
lds
lahf
cmpsw
mov
fdivrs
cmp
xchg
pop
mov
pop
ss
pop
xor
arpl
inc
cmpsb
imul
and
je
sahf
xor
js
cmp
into
mov
or
inc
inc
jb
cltd
xor
ljmp
mov
lock
add
or
push
cli
pop
outsl
add
xor
jge
xor
mov
addr16
cmp
lock
stos
inc
fiaddl
adc
sub
sbb
sbb
mov
clc
stos
add
test
in
je
add
std
xchg
xor
sbb
cmpsl
mov
push
lods
mov
xchg
sub
ret
stos
aaa
cmp
gs
sbb
or
je
adc
cmp
or
into
pop
jecxz
fdiv
xor
sub
bound
cmp
mov
popl
andl
loopne
or
lahf
push
movsl
mov
pop
cmpsb
mov
push
xchg
icebp
add
mov
repnz
repz
ret
fwait
shll
mov
adc
pop
cwtl
adc
push
xor
test
push
cmp
push
sub
repz
inc
adc
shll
xlat
loop
faddl
mov
sbb
sub
cwtl
and
xor
stos
fdiv
addb
pop
loope
xlat
test
xchg
dec
movsl
test
loope
adc
push
cmp
mov
jge
js
popf
lock
popl
xorl
cmpsb
mov
pop
out
test
repz
adc
sub
sub
xorl
xchg
test
aad
iret
into
sub
push
sub
inc
push
out
fdivs
int
and
rorl
aad
add
pop
jg
inc
adc
pop
pop
push
rcrb
fbld
mov
inc
fs
pushf
cli
es
popa
addl
jmp
je
mov
andps
test
mov
cli
ffree
shlb
jg
xor
imul
adc
or
sbb
adc
loopne
or
jb
mov
clc
hlt
jns
test
pop
add
pop
xchg
dec
ffreep
sub
cmp
clc
fstps
daa
mov
cs
inc
mov
push
adc
push
jbe
fldenv
inc
pusha
divl
adc
adc
fwait
rcrb
push
test
loope
push
push
or
cmp
hlt
mov
sbb
mov
push
adcb
jp
sbb
add
inc
lret
aam
jns
dec
aas
dec
pusha
pop
popa
into
add
add
movsl
fwait
sbb
fs
pop
inc
in
mov
stos
cmp
out
inc
sbb
js
xchg
inc
imul
out
insl
and
lea
cwtl
clc
cmp
sarb
or
outsb
imul
adc
mov
xor
xor
lods
rorb
mov
pop
sub
aaa
push
adc
or
aad
sub
cltd
mov
fcompl
mov
and
cmpsl
test
imul
mov
and
in
xor
xchg
sbb
lret
je
bound
incl
ds
dec
and
xor
inc
sar
jge
mov
rorb
mov
mov
filds
arpl
pop
scas
lds
inc
ficompl
lods
or
push
push
lods
cmp
ja
daa
cmpb
pushf
push
fidivrl
dec
push
xor
lods
jnp
test
dec
lods
jmp
push
inc
imul
mov
push
push
lcall
hlt
fs
fwait
shll
repnz
test
or
xchg
enter
cmp
jecxz
pop
insb
movsl
fisubs
dec
cmpl
ds
jo
test
stos
push
sahf
jmp
xchg
addb
hlt
pusha
xor
ss
in
addr16
aad
pop
cmc
clc
pop
push
imul
pusha
testb
out
orl
mov
std
sahf
scas
cmp
or
dec
iret
fs
int3
push
arpl
enter
cs
popa
cmp
lods
mov
or
lds
fldl
push
lret
dec
bound
imul
cltd
inc
add
sbb
and
pushw
sbb
pop
xchg
test
mov
movsl
cmpsl
inc
out
pop
popf
int
rcrb
inc
out
and
inc
in
inc
jecxz
int3
mov
xchg
lods
push
imul
mov
sub
inc
xlat
popf
mov
pop
outsb
in
es
dec
fistps
stos
xchg
fs
in
roll
mov
das
subl
and
sub
loop
cmpb
lock
push
loope
mov
pop
loop
aas
cmp
aam
loope
arpl
andb
xor
add
push
mov
orb
or
adc
cmpsl
inc
inc
inc
leave
fsubrs
mov
sbb
into
divb
jns
int
rclb
divl
pop
mov
jno
cmp
loopne
pop
lds
scas
inc
gs
xchg
add
push
adc
or
jmp
xchg
and
testl
je
dec
push
jnp,pn
sbb
or
movsl
dec
pop
xlat
jb
rcll
lcall
adc
sbbb
nop
sbb
inc
fsubrs
sbb
stos
cmp
lods
addl
or
inc
stos
orb
aaa
aaa
push
paddq
jno
lea
aaa
mov
les
inc
pop
mov
repz
lds
mov
add
push
ret
movsb
dec
dec
addl
ds
aad
hlt
dec
inc
idivb
shll
xchg
pop
scas
dec
pop
mov
add
cmp
cmp
sbb
leave
fxch
loope
mov
ret
shll
push
mov
xchg
pop
sub
insb
jle
and
dec
mov
mov
pop
addr16
dec
popf
sbb
sub
push
pop
push
xor
inc
pusha
enter
add
xchg
jg
lds
and
insl
inc
fs
push
fcoms
addr16
fstpt
add
mov
ret
fwait
repnz
push
push
adc
mov
ret
fmul
sub
jno
pusha
lret
cmp
les
lahf
ljmp
inc
sub
adc
inc
mulw
adc
data16
xor
or
mov
out
rcl
or
sub
adc
dec
nop
mov
pop
leave
jecxz
sti
xchg
std
fs
sbb
int3
leave
xchg
cld
mov
xchg
cmpsl
and
mov
ja
into
mov
repnz
les
adc
push
push
adc
jb
xor
mov
jle
mov
cmp
mov
and
or
rcll
push
outsl
fists
scas
add
clc
test
daa
pop
adc
pop
sub
pop
sbb
jge
mov
xchg
jb
pop
loop
push
xor
dec
in
mov
jg
popa
pusha
jno
fs
push
icebp
addb
and
cmpsl
dec
or
out
movsb
sahf
stc
pop
enter
das
fidivs
push
mov
mov
and
cmp
hlt
mov
andb
aas
lcall
mov
jno
add
mov
mov
pop
outsl
push
inc
lods
into
mov
sbb
aaa
stos
insl
sbb
mov
paddb
add
cmp
dec
jae
insl
push
nop
hlt
inc
pop
jecxz
imul
mov
sub
or
cmp
testl
mov
jae
mov
mov
xchg
mov
aaa
hlt
cmp
ds
cmp
test
inc
std
leave
xor
inc
mov
or
sbb
into
xor
js
jmp
jnp
fadds
clc
nop
fyl2xp1
pop
sub
pop
imul
sbb
pop
cmp
jmp
xchg
arpl
pop
lahf
sub
sarl
inc
outsl
jns
or
shl
gs
jp
in
push
pop
ret
xor
fcmove
mov
lods
nop
stos
mov
sub
iret
dec
dec
mov
dec
jecxz
add
loope
aam
frstor
or
mov
fstpl
cwtl
xlat
push
xor
imul
adc
xor
pusha
xor
jb
mov
add
pop
xchg
mov
mov
pop
mov
insb
shr
and
test
rcll
push
out
mov
xor
jge
mov
dec
mov
sub
inc
loopne
lock
inc
in
sahf
adc
jge
hlt
ret
dec
jns
cmp
and
push
incl
mov
fwait
xchg
sub
pop
scas
popf
addps
out
mov
adc
hlt
fildll
mov
push
sub
into
mov
mov
cs
add
mov
jae
xor
cmp
loop
jg
xor
lds
out
pop
push
aam
les
mov
das
in
loop
test
pop
testb
mov
scas
sarl
push
stc
inc
movsl
cmp
sbb
pop
adc
ret
push
add
push
mov
xor
push
mov
push
xor
mov
leave
test
clc
lcall
add
out
mov
push
int
fnstenv
jae
hlt
gs
notl
mov
repz
fs
hlt
test
out
repz
addr16
clc
shrl
repz
lea
xchg
in
push
sub
xor
js
adcl
test
enter
jns
push
push
testb
popf
fstps
pop
pop
dec
repnz
jnp
mov
add
jle
out
push
jne
add
mov
aam
cmp
jo
adc
testb
cmp
jno
mov
popf
dec
cmc
push
sub
sbb
out
test
push
xchg
xchg
pusha
frstor
sbb
mov
ret
dec
jl
js
ret
mov
push
inc
xor
mov
pushf
inc
xlat
or
and
mov
or
mov
pop
cmp
sub
mov
nop
pop
inc
rcrl
insb
jle
lods
mov
addr16
fldcw
enter
sub
cwtl
std
shl
minps
cmc
cmp
mov
or
test
ds
pop
out
shr
dec
sbb
xchg
xor
rol
jns
cmc
mov
in
mov
push
add
mov
adc
add
xor
and
jbe
fdecstp
push
xchg
lods
cld
push
adc
add
mov
add
movsb
push
ret
fadds
jle
cmp
add
mov
sub
sub
in
xchg
fsubrs
xor
in
or
repz
or
sub
xchg
sub
loopne
test
xor
or
or
imul
add
dec
xchg
sbb
fsubl
dec
sbb
cmp
stos
add
mov
mov
add
mov
xchg
jo
not
cltd
push
adc
add
lcall
sbb
leave
testb
mov
neg
scas
fimuls
bound
pop
hlt
sub
sbb
push
dec
jge
inc
std
push
xor
int3
and
mov
test
stos
jnp
pop
inc
lods
mov
aad
add
je
adc
xor
sub
mov
push
data16
std
xchg
lret
pop
push
push
data16
adc
and
pusha
xchg
mov
xor
jne
dec
test
out
xor
push
or
je
out
pop
or
mov
pop
lock
xchg
mov
movsl
in
xchg
jle
jns
and
cmp
cltd
fcmovne
push
repnz
mov
aaa
push
sti
addr16
adc
fwait
jb
xor
jmp
das
hlt
fisttpll
movsl
push
push
lock
das
sub
pusha
pop
and
dec
dec
iret
and
sar
es
jmp
stos
add
inc
xchg
jno
adc
dec
or
sti
adc
jmp
arpl
cmpsl
in
rcrl
lods
pop
imul
and
inc
test
fldl2t
or
cmpsl
mov
adc
ror
test
pop
jmp
lds
popa
push
loop
call
xor
inc
scas
insb
pop
mov
jg
int
pop
adc
int3
and
and
int
dec
imul
mov
jg
mov
rolb
test
mov
loope
lahf
cld
xor
sub
iret
dec
adc
leave
sahf
mov
push
pushf
loopne
loopne
ss
inc
mov
leave
push
push
daa
pop
sub
mov
test
ret
jns
mov
ret
sbb
mov
sbb
loope
and
ja
mov
popa
sti
jbe
out
sbb
cmp
rcrl
js
imul
sub
push
jbe
dec
sbb
cmc
lret
lahf
jo
xchg
scas
arpl
add
popa
xor
cmp
pop
add
fiaddl
adc
cli
push
test
lret
jle
shrb
push
and
je
pusha
cmpsb
inc
xor
out
cld
push
scas
mov
icebp
iret
test
int3
lcall
sbb
je
adc
jle
add
adc
into
jo
mov
pop
adc
add
add
dec
ja
dec
inc
dec
aam
leave
adc
mov
sbb
lcall
jnp
lret
pop
cmp
pop
cmp
mov
fwait
and
or
test
das
mov
pop
xchg
cmpsl
fsubl
jp
push
push
sub
into
icebp
lea
loope
notb
pop
or
jle
mov
xchg
dec
xor
fimull
loopne
je
repnz
xchg
or
and
lea
and
adc
sub
push
dec
add
enter
loop
jbe
rorb
push
sub
and
or
jb
cmp
rclb
push
push
int3
sbb
cmpsl
xchg
mov
mov
jnp
adc
pop
cmc
clc
inc
cmpb
pushf
jl
push
repz
sub
inc
ds
jb
adc
ljmp
adc
aaa
testl
mov
jl
fistpl
push
mov
loope
pop
pop
clc
cmp
inc
mov
xchg
sub
cmp
ljmp
nop
cmp
pop
sub
ds
jg
pop
dec
fs
xchg
cmc
stos
popa
clc
icebp
push
andl
push
xchg
imul
movsb
clc
lea
pop
pop
cmpsl
pop
jmp
jmp
shrb
bound
push
pop
lcall
and
push
psadbw
ret
push
mov
leave
mov
fs
and
decl
jb
adc
scas
jnp
xor
dec
cmp
out
inc
ficoms
sahf
in
aas
test
fisubs
inc
lds
xor
pop
std
mov
mov
adcl
mov
push
les
xorl
or
xorb
mov
test
mov
aam
dec
or
cmp
push
cmp
arpl
stc
pop
lock
adc
stc
sar
rolb
fcmovnb
pop
or
out
jecxz
push
or
cmp
fwait
adc
adc
dec
mov
jo
nop
scas
rcl
adc
sub
sub
fcomi
pop
xor
pop
xor
push
adc
sti
es
test
repnz
scas
jnp
sahf
lret
pushf
xlat
lods
fdivr
fwait
sbb
mov
in
sub
fsubrl
add
cs
pop
push
jge
cltd
stos
mov
add
int3
and
jbe
int
aaa
adc
daa
inc
push
fs
dec
lock
inc
mov
lcall
mov
xchg
insl
xchg
xchg
mov
mov
sub
cwtl
or
dec
and
cmp
lock
xchg
push
dec
cmp
xor
insl
fdivrl
sub
sbb
jo
inc
dec
fistpl
and
push
cmp
and
add
sarl
movb
sbb
mov
push
stos
inc
push
sbb
pop
jle
mull
arpl
ret
push
popa
push
adc
mov
jl
dec
das
mov
dec
shll
clc
mov
fcmovbe
or
jns
imul
in
ds
mov
dec
push
mov
xorb
arpl
mov
mov
adcb
and
or
outsl
int3
xchg
mov
nop
enter
addb
ror
pusha
lret
mov
push
pop
xchg
aaa
and
mov
movsl
push
xchg
enter
insl
icebp
into
pop
pushf
ss
mov
dec
inc
in
std
lret
xor
inc
imul
dec
and
cmp
add
xor
hlt
mov
xchg
xlat
cmp
stos
cmp
ljmp
inc
pop
pop
or
in
clc
pop
sub
dec
fistl
mov
and
test
lret
cmp
test
data16
movsb
lcall
jae
xchg
dec
in
cmp
push
popf
mov
enter
lcall
lock
dec
mov
sahf
icebp
sbb
aas
cmp
inc
or
pop
rclb
arpl
mov
stos
inc
repz
mov
push
out
stos
push
fcoms
mov
daa
in
jae
ret
int3
dec
insl
jnp
fwait
push
sub
push
mov
std
xor
xor
pop
pop
mov
pop
mov
jns
and
cs
xchg
sub
dec
orl
repz
outsl
add
push
cld
xor
lcall
cmc
lret
addr16
sbbl
fimull
or
mov
xchg
mov
push
pusha
movb
bound
cmp
xor
xchg
mov
aaa
insb
xor
pop
lret
das
pop
popa
in
pusha
testl
jg
sbb
mov
pop
xchg
or
dec
xchg
jg
sar
sbb
jmp
lret
xor
push
cmp
sbb
dec
inc
sbb
sbbb
xchg
test
shrl
imul
fisubl
mov
jnp
mov
ficompl
mov
dec
in
add
sbb
pop
icebp
xchg
lods
cwtl
xchg
lahf
ror
xor
push
dec
inc
mov
jne
push
sbb
aam
shr
xchg
inc
test
push
mov
dec
inc
sbb
aad
movsl
mov
pop
scas
out
pop
shrb
or
loope
push
fcomp
ret
jno
mov
ror
inc
call
fisubrl
jbe
shrb
icebp
mov
out
and
sub
sbbb
xor
fs
das
and
sub
xor
sbb
movsl
cmp
xor
rcl
inc
orb
test
or
in
stos
scas
pop
jge
outsb
jnp
sub
jbe
mov
adc
sbb
lcall
jp
jle
inc
mov
push
mov
xchg
mov
fbstp
stc
mov
or
push
stos
ret
jo
jecxz
or
adc
ja
cltd
xchg
xor
xchg
mov
scas
inc
cmp
push
mov
fmul
fbstp
pop
cmpsb
aad
addr16
mov
dec
repz
addr16
mov
dec
mov
out
adc
mov
loop
scas
push
mov
sbb
movsb
aaa
ret
arpl
into
mov
sub
push
cmc
lds
clc
aas
iret
jo
loope
add
cltd
adcb
imul
stc
or
cmpsl
cwtl
stos
fcompl
outsb
jle
sub
pop
fld1
mov
xchg
test
lcall
cld
shrl
or
leave
jp
icebp
adc
dec
leave
sub
into
lcall
cs
inc
pop
je
daa
add
js
aad
test
mov
adc
xchg
rol
jo
stos
rcrb
mov
mov
in
add
mov
sbb
imul
divl
mov
sub
mov
rol
fstps
test
into
bound
mov
ret
in
pop
jmp
aas
sbb
cmp
mov
cmp
movb
popf
outsb
ficompl
xor
pop
out
idiv
inc
and
out
dec
pop
mov
enter
push
test
enter
cmp
or
sub
pop
sarl
test
pop
aad
mov
sti
or
js
inc
fdivs
pop
mov
and
sub
jle
lret
add
and
loopne
clc
cmp
jnp
sbb
pop
dec
add
pushf
out
stos
shll
jnp
jmp
cmpsl
in
lahf
adc
dec
mov
and
and
ss
xor
adc
and
ds
gs
pop
cwtl
movsb
cli
or
stc
and
mov
adcl
xlat
call
push
and
cmpsl
test
repz
xchg
xor
cwtl
ret
push
ret
pop
dec
push
loope
and
push
rorl
lahf
jbe
jns
sub
repz
jno
in
cwtl
movl
outsb
add
mov
outsb
mov
jo
mov
jae
ret
lret
mov
std
sbb
int3
repnz
out
rorb
testb
shlb
pop
pop
add
push
jp
and
dec
stos
inc
jl
lock
out
mov
and
xor
rorl
mov
cmp
orb
jmp
mov
sub
rolb
mov
jns
add
in
push
xor
je
jmp
xchg
mov
push
je
shll
repnz
push
sub
adc
pop
xlat
jmp
pop
gs
jns
add
movsb
sti
mov
call
inc
adc
push
iret
ja
stc
mov
mov
bound
jecxz
adc
mov
popa
fnstenv
pop
mov
or
lods
mov
daa
mov
cmc
in
sub
shlb
lret
or
test
dec
inc
mov
iret
ret
add
popf
adc
or
divb
test
inc
xchg
divl
pop
rolb
fs
push
inc
adc
dec
sbb
repnz
mov
jns
aam
cwtl
subb
scas
stos
mov
cwtl
mov
movsl
clc
xchg
sahf
ficoml
cwtl
int3
cs
sti
mov
xchg
out
push
mov
jmp
mov
sahf
jb
push
jp
icebp
enter
push
addr16
or
lods
sbb
rcrb
fidivrl
scas
in
cwtl
mov
repz
out
xor
scas
outsl
popf
sub
and
aaa
mov
shrb
sar
or
out
mov
mov
push
mov
addl
add
ljmp
jo
ja
push
rcl
push
fsub
pop
jae
in
movsb
sub
or
loope
aaa
movsb
cwtl
pop
xchg
mov
hlt
repnz
idiv
dec
arpl
test
mov
fbld
jnp
and
cld
mov
pop
fistps
lahf
cmp
push
es
or
into
subb
movsb
movsb
jo
roll
add
xchg
jg
pop
jmp
je
fxam
jecxz
ja
pop
popa
clc
aaa
lret
mov
jg
fstpl
mov
movsb
push
inc
pop
cmp
mov
xor
sub
stos
out
aam
inc
mov
iret
mov
insb
jle
push
dec
sbb
orb
repnz
or
fistl
movb
mov
xchg
movsb
prefetch
stos
sbb
push
cmp
sbb
sub
adc
dec
mov
stos
or
scas
aam
data16
icebp
aaa
int
fs
and
push
mulb
mov
sub
aas
dec
jnp
lcall
mov
notl
ds
xlat
outsb
pop
into
gs
setle
iret
and
hlt
mov
out
xchg
dec
or
orb
mov
cld
mov
xor
rcl
roll
fmull
ret
ret
pop
std
imull
or
jecxz
loopne
jmp
les
in
outsb
push
jae
in
mov
addb
icebp
and
mov
aaa
cwtl
add
inc
push
sbb
pusha
loop
xor
push
mov
jnp
mov
xchg
and
call
adc
fs
and
xchg
pop
mov
je
outsl
stos
mov
pop
cmpsl
ret
mov
jl
cmpsl
sub
maxps
mov
xchg
mov
sbb
or
add
int3
xor
cli
xchg
mov
iret
xchg
sbb
or
pushf
sub
or
push
cltd
out
mov
int
popf
ja
sub
mov
shlb
lds
sub
mov
testl
add
mov
test
jbe
pop
ja
test
adc
loop
out
test
jbe
jno
movsl
dec
sub
dec
mov
mov
cmp
fistpll
outsl
push
add
mov
sub
mov
pop
adc
cmpsl
inc
inc
sub
jb
imul
dec
mov
mov
jnp
xor
fdivp
adc
repz
sub
out
pushf
push
xchg
setg
rcll
mov
mov
popf
insb
ss
mov
xlat
nop
lods
pop
mov
dec
repz
call
test
xchg
outsb
lret
popa
orl
jnp
xchg
jle
stos
iret
jmp
jl
nop
cmp
push
lock
adc
cwtl
push
loope
inc
or
add
mov
adc
and
pop
sbb
add
cmp
imull
fdivl
mov
xor
dec
enter
cli
adc
enter
fs
adc
mov
xor
mov
or
add
or
jbe
inc
test
adc
addr16
pushf
xor
dec
dec
sub
and
shlb
ret
push
jno
sar
aad
cmc
mov
shll
jnp
lods
and
lcall
jg
cmp
jae
add
jne
xor
jmp
andb
pop
cmp
jp
out
jmp
ficomps
push
push
cmc
pop
call
clc
shlb
fcoms
fidivl
out
inc
xlat
ficomps
out
nop
gs
xor
fldenv
cmpsl
ds
data16
cmp
shlb
in
dec
out
sub
into
push
pop
pop
mov
adc
mov
jle
and
ljmp
outsb
cmpsb
cmp
push
in
repz
xchg
sub
mov
sti
xchg
hlt
scas
jmp
cmp
cmpsl
movsb
lcall
mov
mov
adc
and
fs
dec
shrb
movl
adc
mov
and
cmp
loop
push
mov
scas
xchg
pop
mov
xor
in
and
fcoms
inc
add
into
stc
stos
jg
cltd
push
mov
lret
jbe
sbb
sbb
fbld
repz
adc
outsl
jnp
sub
fildll
cltd
cmpsl
ret
mov
mov
mov
add
pop
outsl
push
rorb
or
jecxz
shll
insl
cmp
int
les
hlt
dec
dec
jnp
sti
in
in
jecxz
jmp
addr16
mov
mov
xor
jge
jb
mov
stos
add
push
repnz
sub
popf
and
xor
out
push
fisubs
pusha
mov
into
lods
ljmp
shll
out
mov
adc
or
mov
shlb
mov
dec
xor
xchg
movsb
xchg
dec
fldl
gs
sbb
sub
dec
sarb
dec
jmp
das
or
stc
int3
push
sbb
cmpb
or
pop
adc
cwtl
addl
fisubl
sub
pop
ficoml
sub
and
xor
push
les
jb
sahf
inc
add
mov
add
mov
fwait
jae
inc
and
andb
dec
loopne
fsubs
pop
mov
sub
imul
data16
cmp
sar
jnp
add
mov
xor
jg
xchg
arpl
xor
hlt
int3
add
aaa
stos
mov
push
aam
and
cmp
inc
dec
gs
inc
xlat
scas
mov
pop
cmc
adc
jnp
push
push
xor
orl
xchg
sub
aaa
push
adc
xchg
push
mov
sahf
cli
pop
lea
inc
xor
pop
jg
lahf
jbe
add
es
es
xchg
cwtl
nop
or
shlb
test
nop
ficompl
aas
jnp
sbb
lods
dec
and
aam
or
mov
sub
inc
xorb
mov
dec
inc
scas
dec
sti
inc
cld
aam
test
inc
or
push
xchg
or
sbb
jne
outsl
cli
pusha
mov
shrb
jge
push
jmp
cs
incl
fimuls
pop
inc
push
out
stos
gs
fmull
fmull
add
adc
and
cmp
lods
sbb
fbstp
sarl
mov
jne
jae
mov
push
xchg
cs
iret
push
mov
cmp
dec
xchg
push
inc
gs
xchg
xchg
mov
push
aam
dec
pop
add
shrl
test
fstl
cmp
xchg
jmp
push
movsl
inc
jmp
push
jmp
shll
jo
inc
xchg
add
sbb
sbb
xchg
test
notb
mov
loopne
ss
sub
std
lds
hlt
jo
popa
clc
inc
test
mov
push
inc
push
andb
shrl
jbe
adc
mov
sbb
adc
aas
imul
xchg
xchg
push
cwtl
das
ficoml
mov
or
adc
leave
push
dec
aad
pop
mov
mov
ficoms
pop
daa
daa
push
fcomps
push
mov
bound
xlat
and
or
mov
inc
sub
lcall
and
inc
sbb
repz
into
and
mov
push
popa
jnp
sub
jne
imul
dec
dec
cmc
lret
jp
sbb
je
stos
and
or
inc
cmp
xchg
sub
dec
sbb
pop
jbe
lahf
testb
mov
aas
mov
fdivrs
mov
popf
adc
and
adc
cmpsl
pop
imul
jg
xchg
lcall
pop
scas
out
lock
inc
imul
xchg
sti
xchg
in
sbb
cli
xor
ret
and
mov
test
sarb
je
push
std
jl
enter
imul
pop
xchg
mov
in
add
dec
mov
rcrl
inc
adc
cltd
in
adc
inc
jno
jmp
neg
es
jae
nop
lods
les
leave
ds
ss
pop
cmp
lea
and
lds
xchg
fs
mov
dec
add
sub
push
sbb
sarb
cmp
mov
jbe
and
pop
aaa
into
xchg
in
cmova
daa
cmp
and
movsb
rcrl
out
lds
mov
int
outsb
sub
arpl
and
inc
xor
jmp
mov
pop
lods
insl
add
adc
mov
mov
dec
push
out
mov
push
testb
dec
jecxz
enter
roll
xlat
sahf
sub
call
add
cli
adc
rclb
stos
in
nop
repz
mov
mov
mov
inc
jp
push
enter
xchg
add
mov
pop
or
cld
mov
sti
inc
ret
loope
mov
lods
leave
cmp
push
test
xchg
jl
shl
in
jge
jnp
pop
and
add
fs
mov
test
cltd
fildll
les
pop
insb
in
in
sbb
or
mov
sbb
jnp
in
test
xchg
push
test
xor
xor
dec
cwtl
xchg
js
dec
in
push
mov
xchg
push
push
aad
cmp
pop
imul
in
mov
pusha
clc
xchg
mov
push
icebp
mov
mov
lcall
mov
mov
xchg
loopne
cmc
adc
stos
insb
mov
xchg
lret
cli
inc
es
push
fucomp
lret
xchg
daa
push
lods
mov
scas
sub
mov
imul
call
jno
insb
fwait
das
xor
dec
sbb
push
test
dec
pushf
jg
popa
fbld
or
divb
sub
aas
sub
pop
jne
xchg
enter
sar
orb
sub
cmc
lret
add
mov
xlat
ljmp
mov
dec
and
jl
ja
fistl
sbbb
cld
jno
das
shlb
mov
fimull
push
mulb
push
xchg
cmpb
cmp
stc
nop
or
push
jecxz
aaa
aas
gs
mov
dec
aas
mov
push
test
lock
loop
shr
int3
mov
repnz
xchg
inc
push
mov
jb
fnstcw
lea
push
xchg
xchg
imul
test
inc
andl
cmp
sahf
sub
xchg
xor
in
push
lods
push
mov
jb
mov
mov
xchg
mov
rorl
ret
in
or
cmp
fmull
fwait
mov
push
push
lcall
push
stos
fwait
add
das
addr16
mov
add
cmpsl
mov
pop
idivb
shll
mov
dec
xchg
leave
das
fwait
xor
das
shr
mov
sbb
addr16
inc
outsb
jo
dec
or
pop
repnz
fldenv
inc
fsubl
inc
iret
ja
test
shlb
jns
cmc
mov
lret
mov
call
add
mov
nop
int
fwait
push
mov
icebp
addr16
test
mov
rclb
sbb
std
sbb
nop
push
or
xchg
out
insb
js
or
lods
adc
nop
daa
stos
xor
std
jbe
scas
inc
out
add
mov
scas
push
fs
or
xchg
clc
lcall
clc
aad
pop
or
shrb
std
test
xor
sub
in
jne
fcomps
adc
mov
cltd
mov
cmpsl
inc
fcmovu
dec
les
mov
out
roll
jecxz
loop
push
xlat
push
lods
push
jp
pop
fwait
or
lret
rorb
jmp
xchg
int
addr16
pushl
jecxz
cmpsl
dec
loop
adcl
std
mov
fldl
gs
cmp
in
dec
cli
mov
dec
lret
std
aam
xchg
xchg
adc
mov
or
dec
loope
std
mov
or
roll
lods
inc
xchg
ja
setne
dec
cmpsb
dec
movsl
lcall
jae
ret
cwtl
loop
test
sbb
jbe
mov
cmpsl
out
enter
rorb
sub
sar
and
aad
xchg
jp
adc
pop
outsb
jle
gs
out
sub
fdivr
xchg
sub
lock
or
mov
mov
fdivrl
pop
push
aam
gs
sub
sbb
addl
or
aam
push
push
ja
rolb
pop
cwtl
in
lret
addr16
push
xlat
add
into
es
xor
adc
jno
cmpsb
or
mov
jne
xor
sub
jg
pop
jns
push
lea
js
mov
bound
mov
mov
cmp
cmp
or
test
sub
xchg
lock
icebp
lahf
inc
lret
pop
inc
xor
cmp
negb
push
mov
pushf
pop
aam
adc
shlb
pop
movsl
repz
stos
arpl
xchg
fnstsw
lahf
out
mov
xor
pop
lock
stos
inc
xorl
movsb
jle
in
cwtl
cmpsl
jo
fldcw
ret
push
fcmovbe
ds
or
mov
inc
jg
insb
mov
adc
das
push
divb
mov
mov
and
mov
sub
repz
fcmovne
sbb
xchg
dec
add
clc
inc
jnp
cmp
xor
cmp
push
lcall
mov
push
push
jbe
ror
pushf
stos
inc
mov
js
pop
testb
pop
pop
loope
dec
pop
and
mov
cmp
es
imul
into
pop
jno
or
daa
rcrl
dec
je
mov
mov
mov
nop
in
xchg
jo
and
dec
xchg
bound
jecxz
test
and
xor
mov
sub
pop
xor
aam
fndisi(8087
add
jp
jp
fistpl
mov
add
mov
fidivs
xor
push
add
imul
lods
sbb
mov
cmp
jbe
and
shlb
std
sahf
ljmp
stos
aaa
pop
pop
out
shl
movsb
hlt
cld
icebp
jne
cmp
add
cmc
test
jno
out
and
mov
xor
mov
inc
mov
sub
inc
add
aad
test
xchg
mov
hlt
push
shll
gs
or
ljmp
mov
adc
sbb
and
push
mov
mov
out
mov
lods
loop
jp
jle
aam
lods
dec
ret
out
aad
rorb
orb
adc
xchg
mov
xor
prefetch
mov
popa
dec
ljmp
xchg
test
ds
push
pop
cmpsb
jne
loopne
sbb
fs
shrb
jl
fcmovu
push
add
das
cltd
test
je
pop
out
lret
scas
mov
aam
flds
cltd
fldenv
enter
mov
mov
imul
mov
std
hlt
mov
inc
cmp
push
daa
adc
pusha
push
jmp
xchg
mov
cltd
call
xchg
push
xorl
insb
cmp
jmp
lret
into
std
mov
stc
mov
aam
aas
mov
or
push
sbb
xor
popf
cli
and
das
aaa
dec
out
mov
inc
cmp
inc
in
rcr
arpl
ljmp
addb
jo
in
lcall
cwtl
test
sbb
mov
mov
aas
test
inc
aas
jno
mov
pop
cmp
add
jns
cltd
cmovle
mov
jge
aas
enter
movsl
mov
pop
movsl
cmp
jg
xor
inc
sbb
dec
jno
test
les
movsl
mov
sbb
jp
rorb
adc
jl
je
out
pop
mov
in
addl
or
push
push
repnz
adc
sub
scas
add
pop
dec
mov
jno
mov
ljmp
add
xchg
pop
jl
dec
and
popf
sahf
mov
xchg
jnp
xchg
jl
stos
adc
pop
dec
add
js
insl
push
jmp
cwtl
inc
inc
lret
sahf
inc
adc
jns
pop
sbb
or
xchg
cltd
sub
mov
jns
loopne
mov
addr16
inc
fcomi
jp
inc
push
xor
nop
repz
cs
jecxz
push
adc
popf
cmp
ljmp
mov
in
movsl
mov
push
outsl
rcrl
mov
mov
inc
out
and
jo
cmp
mov
in
idivl
add
enter
mov
jb
cmp
pop
jmp
add
xor
xor
imul
movsb
arpl
ja
pop
test
outsb
mov
push
mov
mov
sub
adc
pop
int3
mov
cwtl
lods
xchg
sbb
mov
outsb
jl
sti
fcmovnbe
pop
fdivl
push
cli
cmp
adcb
fwait
sub
mov
mov
mov
xor
loop
inc
loope
mov
es
repnz
lret
enter
dec
push
sbb
fcoms
push
out
clc
or
xchg
ffreep
in
stos
jp
dec
ret
int3
adc
pop
xor
out
fdivrl
js
movsb
push
das
popa
xchg
pop
mov
cltd
pop
mov
popf
mov
lcall
push
inc
mov
loopne
repz
fwait
add
icebp
jmp
mov
mov
sbb
mov
pop
cmp
or
popa
cmpb
push
and
mov
sub
push
and
mov
sahf
arpl
rclb
fsubrs
test
lods
lods
ret
fstl
push
and
cmpsb
into
mov
sub
add
enter
out
es
sbb
es
in
repnz
imul
xchg
cwtl
mov
stos
loop
mov
push
mov
push
mov
cmp
aam
clc
push
and
or
adc
clc
adc
sub
pop
ret
push
out
push
loope
xchg
test
lret
scas
push
lahf
orb
outsb
pop
loope
out
scas
xor
jne
jb
mov
sbb
cmp
jne
sbb
sbb
shl
xor
fcmove
sub
push
cmp
mov
pop
pop
xchg
adc
repnz
cmp
push
mov
push
xchg
mov
push
fdivr
push
data16
test
mov
cmpsl
aam
repnz
das
mov
in
mov
dec
push
adc
mov
and
loopne
jle
fldcw
mov
loope
lods
call
call
jnp
jp
nop
fwait
pushf
sbb
cmp
ret
dec
xor
lods
ret
cs
shrl
or
cmp
and
push
mov
xchg
dec
out
lgs
inc
out
inc
scas
in
adc
sbb
test
lock
pop
adc
cmp
add
loope
sbb
iret
jo
adc
neg
pop
lds
pop
mov
jmp
sbb
jo
sbb
test
cmpsb
add
mov
jae
sub
jecxz
mov
or
gs
clc
pop
pop
test
or
dec
notl
ret
std
mov
jl
or
je
jbe
or
fstp
iret
jg
xor
fwait
hlt
push
int
test
mov
lea
mov
mov
rcl
mov
sbb
test
dec
ret
cmc
loop
or
jecxz
mov
jo
mov
rcrb
sub
shr
loopne
push
repz
and
add
addr16
inc
xchg
adc
jg
and
sbb
clc
xchg
es
fs
xchg
sub
push
stos
mov
pop
pop
lcall
adc
cmpsl
movsl
fisubs
and
mov
mov
fld
imul
xor
dec
pop
jnp
add
push
pop
mov
insl
insb
push
lock
and
sub
data16
xchg
dec
sbb
and
fidivrl
gs
mov
hlt
aas
jle
xchg
mov
cmp
pop
insl
inc
lret
nop
les
aaa
into
ficoms
cmp
js
jae
aas
ret
jg
sbb
sbb
insb
or
jmp
movswl
ds
sub
or
jb,pn
inc
mov
rcr
jo
lret
fwait
cmpsl
hlt
insb
xorb
mov
jmp
mov
pop
dec
adc
xor
mov
cmpsl
jecxz
aad
scas
aaa
dec
jbe
sub
ljmp
test
imul
imul
sbb
stc
mov
mov
jle
inc
popa
clc
xor
cli
pusha
shll
xor
ret
hlt
add
aad
adc
mov
add
mov
imulb
mov
xor
or
imul
mov
pop
data16
jle
xchg
fwait
xor
pop
mov
xchg
pop
pop
loopne
dec
lds
push
add
push
rclb
in
jae
or
clc
xor
adc
mov
mov
mov
ret
je
fcoml
mov
cli
fdivr
sahf
ret
sbbl
or
xor
es
or
cmpsl
or
mov
shl
or
cltd
sub
inc
fimuls
mov
aam
ds
fisubl
iret
inc
jecxz
pop
adc
inc
arpl
cmpsl
pop
or
addr16
cmp
pusha
mov
pop
mov
rolb
push
jg
xchg
sub
in
repnz
repz
or
lret
stc
lock
lds
jns
add
push
stos
sub
sub
mov
dec
cmp
addb
aas
xchg
pop
inc
std
adc
leave
mov
cmp
cli
pop
mov
dec
mov
mov
mov
mov
mov
mov
nop
pop
iret
push
mov
loopne
or
xor
addr16
mov
inc
cs
pop
les
cmc
add
jb
dec
mov
jge
stc
adc
js
pop
stos
sub
lods
mov
loope
std
iret
pushf
pop
jae
incl
ret
xchg
movsl
cmp
popa
out
push
repnz
js
push
stos
and
lds
mov
add
xor
inc
iret
push
sbb
jp
testl
popa
mov
push
das
cs
jge
add
add
or
lret
lock
ss
cltd
pop
mov
dec
in
or
lods
pop
mov
or
dec
fcmovnbe
movsb
or
out
fisubrl
iret
cmpsl
push
jno
lock
mov
xchg
mov
sahf
ljmp
hlt
aaa
into
and
pop
int
adc
ss
fsub
faddl
push
or
lret
test
jl
in
push
imul
sub
add
add
in
fldcw
jae
mov
or
and
push
xor
daa
in
popa
mov
scas
xchg
mov
clc
and
in
fistl
es
fistps
and
mov
xchg
mov
jne
sahf
shll
lea
xchg
pop
push
in
mov
cmp
adc
sbb
sbb
aas
repz
sarl
shl
lds
pop
adc
cmp
xchg
sub
push
inc
testl
mov
rcr
scas
outsb
xchg
pop
cmpsb
call
inc
mov
andl
movsl
fidivrl
cmp
sub
enter
dec
daa
or
xchg
lahf
int
fidivl
out
es
sub
sbbl
mov
sbb
repnz
int
xchg
sbb
pop
xor
rcr
xchg
in
test
cld
aam
cmpsb
fs
test
cli
ss
inc
xchg
mov
repnz
ja
sub
push
adc
xchg
xor
aam
iret
mov
xchg
pop
mov
mov
add
mov
and
adc
xchg
add
lods
push
or
lods
jnp
shl
lock
repz
push
and
sbb
ss
lock
arpl
xorl
jnp
rcrb
push
inc
jl
loopne
sub
fwait
outsl
jbe
in
hlt
aaa
pop
or
jb
addb
shl
popf
dec
mov
lcall
xor
push
fidivs
nop
jno
dec
test
std
adc
call
addr16
xchg
and
mov
loopne
das
mov
enter
shr
dec
bound
push
and
mov
mov
pop
jbe
or
pop
outsb
std
xchg
lods
sub
ljmp
push
mov
movsl
sub
xchg
sbbb
xchg
sti
cmpsl
mov
pop
in
fisubs
mov
rcl
adc
cmp
outsb
mov
pop
sbb
insl
sbb
add
cmpsb
cmp
adc
ss
pushf
ljmp
out
mov
bound
mov
sub
into
sub
lea
dec
dec
popa
xchg
inc
xchg
sub
movsl
push
xlat
es
aaa
mov
ljmp
sub
mov
nop
int3
je
lret
mov
call
imul
xor
jmp
inc
cld
pop
lock
jge
cs
lds
sub
std
ss
xchg
push
shll
mov
inc
fimull
fsubrs
or
sbb
cld
mov
out
xchg
xchg
dec
cmp
imul
pop
push
aad
rolb
cmp
lcall
jnp
mov
push
add
mov
xchg
sub
popf
and
out
loop
xchg
inc
cmpsl
ds
mov
push
fsubs
test
jno
fsubs
mov
ljmp
fwait
pop
addr16
into
gs
sbb
aaa
lds
or
dec
push
sub
loope
lock
popf
mov
iret
mov
sub
sti
pop
repnz
adc
add
xor
mov
repz
push
adc
xlat
ret
lret
push
xor
ficomps
loopne
mov
mov
popf
jno
xor
push
stos
inc
sti
lret
lock
sub
shll
and
pop
cs
sti
dec
fnstenv
xchg
mov
lods
dec
notl
loop
fsubrs
repz
push
sbb
or
aam
mov
insl
mov
fbld
mov
test
lds
addr16
out
out
sbb
lcall
or
nop
xor
dec
or
or
outsb
gs
cmp
aas
and
fnsave
lahf
aaa
and
mov
mov
mov
test
aam
nop
sbb
mov
mov
xor
or
sub
pop
outsl
dec
rcll
inc
pop
loop
lock
outsl
pop
mov
push
js
fs
imul
dec
cmp
repnz
enter
mov
jle
and
xchg
movsb
les
es
add
setle
push
sarb
jns
xlat
mov
dec
pop
call
mov
ret
xor
mov
or
sub
sub
fiadds
or
popf
add
stos
mov
sub
dec
sub
mov
mov
add
xor
sbbl
aam
adc
adc
scas
mov
inc
aam
xor
pop
mov
ficoms
out
mov
fidivrl
enter
cmpsl
add
jl
xor
pop
in
std
in
in
pushf
or
inc
push
and
xor
adc
inc
mov
mov
jns
pop
mov
in
jnp
clc
xchg
mov
scas
add
mov
aam
adc
jmp
lret
lret
popa
popa
adc
cwtl
das
mov
adc
addl
movsb
mov
lret
lahf
pop
adc
jne
push
in
or
push
xchg
mov
roll
cmp
cmpsb
mov
ljmp
jne
outsl
xchg
fmull
jg
out
clc
stc
mov
adc
aas
sub
cli
sbb
stc
out
in
mov
iret
adc
stc
dec
test
mov
pop
jmp
scas
dec
vpmacssdd
out
insl
and
xlat
cs
inc
ficompl
or
dec
stos
push
sub
stos
mov
in
fisttps
out
mov
mov
mov
je
xchg
pop
adc
in
xchg
scas
rclb
repz
add
adc
lcall
or
cmp
xchg
cmp
filds
les
push
outsl
test
pop
aaa
adc
lds
mov
cli
pushf
xchg
in
push
and
fwait
jle
es
stos
add
pop
ss
pusha
cmp
es
adc
add
dec
or
cltd
test
jo
jnp
roll
sbb
jg
fs
add
and
clc
xchg
int
lcall
stos
leave
add
adc
dec
cmp
shlb
inc
fidivl
insb
loopne
sbb
pushw
mov
es
xor
jl
imul
push
mov
jl
sahf
lods
addr16
add
insb
dec
mov
push
loop
add
scas
in
xchg
push
dec
xchg
sbb
repz
lods
movb
lahf
ret
nop
shlb
outsl
push
lcall
xor
fnstcw
lcall
xchg
imul
mov
imul
adc
push
je
adcb
add
insl
mov
push
or
ret
and
sbb
mov
jmp
mov
and
add
popa
or
jno
add
xor
data16
rcll
stos
loopne
gs
movsb
nop
cli
test
push
pop
push
sbb
sub
mov
leave
hlt
sub
incl
or
mov
or
sahf
push
jge
out
push
fadds
addb
sub
fcomp
mov
mov
imul
sub
lcall
push
sub
repz
mov
mov
xor
sub
cltd
test
xor
jnp
dec
adc
mov
test
sub
adc
ds
push
push
push
lret
insl
mov
les
xchg
lahf
testb
jp
mov
out
cmpsb
dec
jo
pop
jmp
sbb
jns
add
mov
sahf
call
icebp
dec
test
loope
sti
insl
sub
jne
pop
orb
push
cmc
adc
mov
add
lods
inc
jle
mov
popa
add
lods
les
pop
dec
pop
test
out
subl
xor
in
ja
add
adc
and
lret
xchg
in
int
aas
test
ds
shl
out
loopne
sbb
adc
inc
xor
pop
inc
dec
adc
aad
hlt
mov
cmpsb
lret
pop
xchg
xchg
adc
pop
mov
popa
into
sti
cltd
add
loopne
in
js
es
in
cmp
xchg
or
es
stc
inc
aam
jae
mov
rclb
movsb
lcall
push
jl
cmp
neg
fcoms
pop
cmp
pop
lahf
cmp
sbb
pop
repz
xchg
shll
aas
shl
jge
outsb
push
mov
xor
nop
ja
bound
xchg
testb
inc
andl
inc
rcrl
in
sti
xchg
hlt
dec
loopne
aaa
jnp
out
mov
or
stos
rcrl
loopne
insb
lods
inc
repnz
incl
push
pop
stos
sbb
call
jg
sbb
add
fidivrl
daa
mov
jge
stc
xchg
pop
mov
loop
repnz
add
cmp
pop
sub
cmp
repz
push
ja
jnp
sbb
dec
out
jb
jle
adc
shll
or
jbe
fdivl
xchg
sahf
pop
push
adc
fsubs
cld
adc
insb
inc
push
ljmp
repnz
shrl
cmp
imul
fidivrs
add
push
mov
adc
jo
scas
xor
repnz
shll
lock
and
loope
jne
pop
mov
jns
adc
mov
hlt
stc
xchg
pop
inc
mov
pop
insb
je
pop
mov
popf
test
xchg
aad
das
xor
or
mov
dec
fs
and
out
pop
into
push
lods
incl
imul
mov
mov
jbe
rcll
jp
fmulp
fsts
fbstp
sbb
mov
popf
adc
jb,pt
add
or
ret
loope
sub
push
aad
test
jecxz
and
xor
icebp
hlt
fbld
pop
jbe
cltd
adcl
cmp
or
dec
cmp
adc
pusha
mov
jmp
es
decb
inc
inc
insb
sbb
push
ljmp
mov
add
mov
xchg
dec
mov
push
enter
push
xor
arpl
push
ret
pop
out
rcl
loop
loop
cmp
pop
icebp
or
std
loope
sub
push
pop
sub
mov
mov
shr
out
movsb
sub
sbb
adc
or
flds
or
jecxz
add
mov
lret
add
loop,pt
and
jge
rcll
clc
les
jecxz
insl
inc
les
leave
sub
cli
rcll
insl
add
cltd
stos
adc
push
mov
sarb
into
cmpsl
rorb
mov
pop
cmp
mov
bnd
stos
add
cmpsl
xchg
sbb
push
fsubl
rcl
push
mov
mov
mov
fsubr
mov
sub
adc
push
mov
ficoms
or
push
pop
sub
add
xchg
pop
ds
aam
pop
insb
xchg
mov
lret
imul
repz
sahf
xor
fildl
test
leave
dec
in
repz
and
inc
pop
sahf
ja
movsl
cmp
cwtl
sub
hlt
ljmp
dec
inc
sub
mov
fisubs
mov
inc
xchg
leave
pusha
ret
ffreep
pop
adc
mov
dec
xchg
leave
pusha
iret
fadd
pop
stc
push
es
mov
lds
jo
mov
stos
pusha
lret
jbe
jae
dec
sub
aas
fidivrl
enter
roll
aaa
mov
in
stos
push
inc
pop
or
jg
jae
cmp
filds
test
mov
xor
mov
int
inc
fidivl
jmp
mov
je
push
loopne
test
shll
mov
das
dec
loope
orl
or
jl
nop
mov
sahf
into
lds
test
push
adc
arpl
out
mov
mov
mov
pop
leave
jmp
cmpl
dec
mov
mov
xchg
dec
mov
data16
mov
or
lods
test
mov
inc
arpl
repz
or
mov
cmp
mov
aad
inc
call
fistps
test
and
fisubl
mov
scas
loope
enter
addr16
sub
sbb
das
mov
push
sbb
ja
jno
ljmp
pop
pop
sbb
cltd
mov
adc
sbb
pop
gs
cmp
adc
push
iret
fwait
into
lret
pop
inc
fucomip
in
in
xor
jp
aaa
lret
clc
std
sub
pop
fcmovu
jbe
aas
loope
or
push
dec
inc
imul
push
sbb
mov
shlb
mov
and
loopne
stc
leave
dec
inc
dec
or
mov
mov
dec
cmp
loope
inc
adcl
aas
shlb
negb
adc
les
xchg
fs
add
ret
pop
jo
int3
icebp
mov
fisttpl
push
push
inc
xchg
lret
and
popa
or
mov
pop
inc
xchg
fs
pop
sub
push
pop
jg
icebp
xchg
test
adc
out
setns
pop
lret
pop
js
sbb
je
enter
in
mov
or
add
test
fstpt
cmc
lea
jne
shrl
xor
ret
sarb
repz
fldl
in
add
scas
imul
sbb
and
or
dec
es
pop
and
std
jl
movsl
dec
dec
pop
rep
inc
add
fdivrs
pop
push
sub
push
cmp
inc
jmp
inc
pusha
cld
mov
out
push
scas
inc
or
push
sub
data16
repz
sub
into
addr16
lret
imul
push
loopne
je
and
test
lods
mov
xchg
adc
cs
ss
imul
movsl
inc
mov
mov
mov
daa
jl
xchg
daa
out
jg
les
xor
test
out
and
pop
aad
sbb
xor
dec
sbb
lods
jg
inc
jle
out
loop
or
cmp
in
out
shrl
adc
push
lds
sbb
or
sarb
aaa
fcoms
fnstcw
stos
pop
inc
fwait
aaa
inc
aad
bound
insb
sub
sub
mov
out
adc
loop
fmull
cld
and
aam
stc
imul
cmp
sahf
lods
push
punpckldq
jo
jcxz
daa
mov
fxch
rol
out
push
pop
fmull
jmp
std
or
sbb
xchg
mov
fbld
lahf
clc
fs
dec
dec
push
mov
into
pop
mov
test
push
daa
cmp
push
push
mov
inc
fistpll
mov
ljmp
jb
aaa
mov
mov
cmp
mov
push
test
jo
and
fisttps
xor
fsub
shl
cmp
xor
or
fs
cmpsl
mov
xabort
or
fsubrs
cmp
nop
push
fisubrl
nop
getsec
repz
push
fwait
icebp
hlt
xchg
add
sub
lock
inc
and
loope
sbb
mov
rclb
cmpsl
xor
imul
loopne
inc
loope
jnp
test
xor
popa
add
data16
pop
sub
leave
enter
or
dec
clc
stos
add
hlt
xchg
loope
xchg
adc
fidivs
cmp
mov
popf
cmp
pop
rolb
mov
pop
sti
xchg
or
lea
and
push
call
add
out
xor
fsubs
jbe
mov
push
data16
subb
mov
mov
rol
add
sub
fisttpll
sub
lds
loop
xor
loop
mov
inc
je
adcb
dec
bound
mov
mov
pop
cld
push
inc
test
or
cmp
jae
fscale
adc
and
inc
pop
push
ret
mov
mov
insb
xchg
sbb
mov
imul
imul
outsl
sub
pop
sbb
jae
jns
jae
or
ljmp
sbb
dec
cmp
pop
aas
in
jg
xor
movb
and
je
sbb
or
or
int3
repz
lcall
and
js
adc
xor
mov
dec
cld
inc
mov
xchg
jg
lds
adc
xchg
dec
adc
in
addr16
xlat
mov
into
gs
movsb
sbb
in
adc
jecxz
test
lret
outsl
repnz
mov
in
lret
inc
shld
mov
or
cmp
cmc
stc
pop
xchg
testb
pop
cmpsl
jnp
or
mov
push
and
in
insb
inc
sahf
lods
iret
or
add
mov
lcall
add
adc
into
fcoml
loope
hlt
sbb
bound
cltd
ja
jmp
sarl
pop
or
pop
pop
and
push
fs
dec
in
xor
outsb
cmpsl
stc
shlb
imul
jp
imulb
outsl
arpl
push
test
adc
sub
add
test
lret
mov
cs
fiadds
and
mov
shrl
jge
xchg
jno
insb
or
and
pop
cli
jp
pop
and
aad
jmp
add
aam
out
aam
jbe
add
testb
pop
jns
push
xchg
int
push
bound
push
inc
sar
sti
lea
xchg
scas
sbbb
stos
cmp
xor
xchg
out
push
xchg
push
adc
and
push
sti
xchg
xor
call
js
sbb
mov
test
bound
cmp
jb
sub
mov
dec
xchg
nop
lods
stos
mov
loop
inc
adc
inc
and
jmp
movsb
push
cwtl
cwtl
push
xchg
sub
stos
pushf
mov
push
out
add
jmp
lock
and
js
xor
inc
jecxz
push
lcall
rcrl
inc
or
jns
adc
cwtl
sub
movsl
subl
push
xchg
cmpsl
push
lret
mov
add
pop
fldl
sbb
int3
arpl
rcrb
jmp
insl
out
pusha
sbb
lea
mov
add
sbb
mov
mov
lcall
adc
dec
xlat
out
push
fldcw
add
add
push
adc
or
notl
cltd
scas
xchg
and
aad
rol
xchg
lret
xchg
sub
arpl
or
or
sarb
imul
rolb
or
fwait
add
jae
mov
sti
xchg
inc
push
mov
or
add
cmpsb
sbb
jno
sub
push
mov
aaa
sar
mov
mov
mov
mov
fsubrl
add
mov
or
mov
jle
jb
sub
mov
mov
arpl
adc
adc
cmp
and
jns
mov
aad
or
pop
push
lock
adc
push
ss
sub
das
aam
sbbl
mov
call
jecxz
mov
jbe
ret
or
lds
imul
notb
aas
pop
je
ret
jnp
xchg
arpl
movsb
push
xor
and
push
enter
into
and
dec
pop
mov
call
icebp
push
jo
outsl
pusha
mulb
mov
fistpl
ljmp
cltd
push
mov
jns
outsl
aam
mov
test
pop
pop
cltd
dec
mov
je
mov
xchg
ret
add
scas
inc
push
lcall
cmp
mov
mov
sub
movsb
orb
testl
inc
cld
ja
inc
popa
xchg
jge
filds
insl
faddl
push
jb
jmp
fsubrl
inc
pop
addr16
sbb
mov
xchg
and
adc
inc
xchg
mov
arpl
mov
pop
pushf
sbb
ss
imul
pop
mov
fildl
loopne
sbb
test
push
mov
lret
pushf
out
pop
cmp
jae
nop
mov
pop
sub
add
push
aaa
dec
cmp
ds
adc
mov
pusha
xorl
dec
in
loopne
add
cmp
and
lret
push
push
inc
dec
idivl
jg
or
xchg
pop
std
push
jl
imul
daa
mov
sbb
sbb
push
xor
adc
dec
jnp
clc
iret
fisttps
aaa
pop
loop
xchg
mov
int3
jo
cmp
mov
inc
cwtl
pop
aad
pop
inc
nop
pop
xor
mov
cmp
std
add
cmpsb
jecxz
dec
dec
jl
push
dec
nop
scas
inc
push
shl
ja
cmp
mov
fdivl
push
cmpb
pop
outsl
sbb
adc
mov
inc
or
cmp
icebp
dec
dec
inc
xchg
xor
jmp
push
lret
push
shlb
repnz
mov
jns
inc
lret
rcr
push
jo
mov
and
dec
cmpsb
popa
sbb
inc
push
ljmp
jno
popf
shlb
jne
xchg
lock
pushf
push
adc
xchg
scas
jmp
xchg
jl
fsub
jns
subb
ljmp
lret
cld
jmp
push
push
mulb
in
xor
sub
stc
inc
sub
aaa
inc
pop
arpl
add
dec
lret
sahf
mov
dec
sbb
fldl2t
es
mov
inc
and
mov
sbb
cmp
ss
mov
aam
jecxz
sarl
out
mov
jge
lea
add
lcall
xlat
sub
push
mov
lcall
iret
loopne
add
cmp
mov
add
mov
push
decb
insb
jle
sahf
push
xchg
out
mov
aaa
ds
xchg
lea
sub
lea
or
mov
push
sub
jns
cs
out
stos
sbb
mov
adc
mov
ljmp
insl
inc
rcrl
dec
and
and
jmp
mov
and
clc
adc
iret
loope
cmp
mov
sahf
addb
cs
imul
lahf
or
mov
gs
addr16
leave
add
inc
cs
ret
inc
dec
out
ss
mov
xchg
stc
push
sbb
pop
mov
icebp
daa
jnp
sti
lods
dec
js
xchg
mov
cwtl
lods
push
pop
mov
std
xchg
loop
xor
das
aad
push
outsl
or
adc
mov
inc
lea
outsb
mov
ret
inc
cmp
loop
and
loope
fldcw
mov
xchg
jmp
push
push
mov
mov
sub
adc
push
mov
push
sub
dec
aaa
push
ret
pusha
outsb
int3
push
call
jmp
inc
loopne
mov
sub
test
mov
aam
adc
in
xor
addr16
imul
pop
jae
daa
outsl
jmp
mov
lahf
pop
in
ss
sub
mov
cli
test
leave
jecxz
movsl
std
jle
stos
inc
adcb
ss
icebp
adc
xor
push
mov
xchg
inc
test
and
ljmp
rcrb
inc
setl
gs
push
jg
add
cmp
xlat
or
lods
sub
xchg
adc
mov
sub
push
mov
insb
xchg
pop
scas
or
jns
inc
xchg
or
rclb
aaa
stc
loop
fsubrp
inc
pop
pop
cmp
inc
pop
test
int3
xchg
cmp
adc
cli
movsb
mov
mov
jae
inc
pop
mov
xor
xorl
adc
jae
mov
sub
jecxz
and
xchg
mov
lea
pushf
stc
jge
cmp
cwtl
insb
xchg
lcall
out
adc
cmp
loop
bound
fldl2t
mov
outsb
sub
lahf
ds
cmp
jecxz
mov
xor
mov
or
cmpsb
addr16
filds
mov
fsubr
and
xor
lcall
xchg
add
loopne
test
pop
push
jg
cmc
imul
imul
div
cmp
xchg
jae
cwtl
jns
xor
jbe
pop
fstps
dec
insl
inc
js
push
stos
fs
ja
mov
outsl
in
xchg
xchg
into
ss
mov
mov
icebp
jl
push
ret
fbstp
sbb
outsl
mov
ret
ret
cld
lds
add
fimuls
gs
xor
hlt
dec
pop
cmp
mov
inc
jnp
iret
and
mov
jb
mov
push
adc
adc
cmp
in
mov
mov
shrl
xchg
jns
or
repnz
inc
repnz
push
leave
sub
cltd
pop
popf
shrb
fildll
pop
adc
adc
mov
test
sub
mov
dec
pop
vshufpd
gs
pop
cmpb
movsb
mov
iret
lret
push
add
lods
mov
stos
add
or
mov
xlat
push
push
push
mov
sub
add
push
lea
xchg
popf
stc
cltd
or
adc
sbb
sysenter
in
call
mov
pop
dec
xchg
jmp
push
loope
add
push
stos
xchg
jle
xchg
flds
push
jb
inc
aaa
ds
xor
pop
fcoml
aam
xchg
xor
inc
add
ds
les
jb
loop
testb
lahf
sti
loope
push
dec
cltd
jecxz
dec
jo
lds
mov
and
adc
or
gs
aad
fdivrl
jg
mov
add
ja
mov
dec
cmc
jecxz
scas
gs
test
xchg
and
out
fidivl
movsb
adc
push
lock
aaa
jb
psubb
jno
into
mov
clc
mov
scas
dec
scas
pop
ds
xchg
clc
addr16
and
fsubr
clc
fwait
insl
sbb
pushf
and
ljmp
movsl
fldcw
pusha
dec
das
pop
xlat
add
and
xor
ds
push
sub
jge
sub
mov
bswap
push
ret
adc
sbb
fisttps
jnp
jle
fnsave
xor
fwait
push
mov
mov
xchg
imul
add
addb
fsubr
test
jb
push
cmp
push
loopne
xchg
adc
cli
imul
inc
rorl
jecxz
unpckhps
or
mov
fistpll
ret
xorl
inc
lock
pusha
es
out
jns
fs
insb
xchg
jo
inc
sbb
in
in
mov
dec
dec
mov
sti
and
mov
sub
mov
xchg
sub
jmp
mov
push
loop
lods
stc
popf
out
movsb
dec
insb
out
jae
inc
mov
xchg
sbb
xor
push
mov
and
aas
pusha
stos
mov
inc
jnp
ficompl
pop
inc
mov
movsl
mov
mov
xorb
cmp
in
and
ljmp
icebp
loope
add
mov
or
xchg
cmp
xchg
sbb
jo
stc
xchg
aas
dec
dec
repnz
and
fldt
dec
data16
fsubl
dec
out
movl
cmp
jg
je
xchg
ds
dec
pop
int3
arpl
sub
sub
jns
cmp
int
or
xchg
out
std
sub
fs
mov
insb
bound
shll
sahf
pop
inc
shlb
pop
push
add
pop
cmpb
xchg
sahf
es
aas
loope
add
jecxz
push
sbb
rsm
call
or
std
xchg
decb
mov
out
cmp
out
rcrb
scas
call
in
sahf
cmc
fadds
pop
mov
add
rcrb
into
jo
jg
sub
mov
loop
push
aad
mov
jb
jl
inc
lahf
or
inc
imul
outsl
out
pop
jmp
leave
adc
sbb
dec
mov
out
imul
xor
xchg
aad
jmp
add
stos
inc
sub
push
pop
leave
pop
movsl
jmp
and
or
es
cmpsl
or
vpunpcklwd
inc
xorb
das
cmp
mov
and
idiv
not
mov
xor
push
lods
push
imul
mov
jno
push
mov
pop
mov
fsubr
cld
je
or
mov
jg
mov
clc
adc
sbb
loopne
mov
ds
dec
fstpt
bound
dec
out
cmp
xor
nop
pop
cmp
push
add
inc
repz
add
aaa
stos
dec
fistl
mov
or
adc
gs
adc
push
es
sub
pop
js
mov
repnz
xchg
stc
cmp
inc
fs
negl
mov
ficoml
push
pop
adc
sbb
sub
nop
mov
enter
cltd
jge
jl
daa
inc
lods
sbb
push
xor
leave
scas
pop
jmp
cmp
movsb
pop
inc
push
repnz
add
dec
dec
xor
mov
mov
cli
and
mov
xor
adc
clc
rorl
in
out
sarl
sahf
pop
in
mov
popf
stc
fwait
stos
pop
jae
xor
lret
es
push
repz
ret
adc
sbb
test
inc
out
mov
jns
repz
enter
ds
imul
push
mov
clc
add
push
insl
pushl
enter
and
push
jnp
xlat
fcomps
sbb
sbb
mov
iret
rcrl
enter
test
pop
xor
or
mov
in
xor
xchg
addr16
xorb
data16
xchg
mov
rcrl
movsb
xchg
push
inc
or
mov
cmpsb
sbb
sar
cmp
in
jecxz
mov
mov
aas
pop
mov
repnz
mov
hlt
pop
cwtl
mov
adc
std
xlat
add
pop
push
cmp
imul
mov
sbbb
stc
enter
sbb
jle
and
xchg
movsb
scas
jno
mov
loopne
lods
leave
je
dec
mov
jb
and
das
cmp
je
loopne
jg
mov
ja
xlat
cmp
and
and
imul
sub
das
or
jno
xlat
mov
sbb
inc
mov
cmp
cmp
mov
imul
pop
or
ss
cld
dec
out
sub
xchg
xor
xor
scas
dec
fs
push
lds
adc
lds
jbe
fimuls
jg
xor
cmp
add
mov
enter
cwtl
movsb
dec
mov
push
sub
mov
ja
outsl
dec
pop
aad
inc
and
sub
push
hlt
in
add
imul
dec
movsb
jl
or
enter
test
adc
jge
or
sahf
insb
add
xchg
cmpsl
xorl
insb
aaa
and
or
xlat
ss
xchg
sahf
faddp
pop
adc
lahf
jne
cmp
scas
fwait
repz
jnp
xchg
daa
push
jns
movsl
inc
push
mov
cwtl
jmp
sub
dec
icebp
enter
addb
cmp
cs
stos
mov
xchg
sub
and
or
inc
loopne
fstpl
fs
imulb
das
inc
call
pause
fisttps
or
jae
ljmp
jae
sub
in
mov
push
not
nop
loop
shl
mov
cmp
ret
mov
popl
daa
push
push
mov
mov
imul
and
mov
addr16
inc
in
bound
js
cmc
jl
mov
add
test
inc
mov
scas
xor
sarb
in
jbe
mov
inc
vmovhps
cmc
jo
push
xchg
data16
mov
xor
pop
jmp
fistpll
push
stos
sbbl
pop
and
scas
mov
andb
cmp
leave
enter
mov
out
jnp
mov
mov
jmp
mov
std
xor
dec
cmc
repnz
shrb
mov
xor
push
lods
imul
pop
aas
inc
fdivs
leave
pusha
int
pop
testb
es
mov
sbb
xchg
stos
and
imull
inc
daa
push
fisubs
pop
xor
std
dec
lret
mov
lcall
insb
adc
cwtl
das
rdpmc
call
or
js
call
stos
dec
stos
mov
jne
xor
xor
testl
push
mov
test
mov
adc
out
lea
std
jnp
cmpsb
nop
lret
pop
divb
not
pop
inc
rcrl
push
push
inc
cmp
lret
cmp
jbe
outsb
lcall
pop
or
jae
jge
stos
in
in
sub
into
add
into
jmp
push
shll
dec
push
scas
pushf
fwait
push
mov
inc
jmp
fsubrl
inc
add
sti
insl
add
stos
lds
jae
lock
stos
pop
sub
jbe
sub
fdivl
jo
jne
sub
sub
outsb
cmpsl
mov
dec
mov
jns
jnp
jecxz
clc
adc
add
jle
jns
test
adc
xchg
add
cmp
sub
leave
adc
mov
inc
insl
test
mov
mov
jnp
imul
add
repnz
mov
jp
adc
cmpsl
shrl
lea
mov
jl
imull
sbb
mov
jbe
sbb
cwtl
push
movsl
leave
mov
js
jle
inc
jo
sub
add
sbb
pop
mov
aaa
into
gs
add
xor
mov
in
testl
std
and
xchg
cmpsl
xsha256
cmpsb
pop
or
push
cmp
pop
aad
inc
fidivs
das
inc
fsubs
gs
shrb
cmp
lret
jns
aad
mov
push
mov
cmp
sub
mov
out
jae
pop
dec
repnz
xchg
add
adc
ja
xor
or
es
xchg
aas
pusha
divl
add
and
adc
sbb
mov
sub
incb
test
sbb
mov
fs
and
mov
cli
xchg
xor
lods
cmpsb
out
scas
pop
fmul
bound
cs
loopne
mov
xchg
add
dec
loopne
and
addr16
mov
aas
inc
test
aaa
fnstenv
adc
cmp
testl
cli
add
jl
dec
pop
mov
sarb
roll
rolb
cmp
pop
iret
data16
aad
in
mov
icebp
mov
push
out
popa
xsha256
cmpsb
xchg
outsl
adc
xsha1
cmpsb
dec
std
imul
push
les
lods
call
and
push
mov
inc
lahf
ss
outsb
add
mov
mov
insb
addr16
cltd
xor
ret
in
test
lods
xor
mov
sub
imul
pop
xor
mov
dec
out
fldl
sahf
or
cmp
das
cmp
enter
mov
mov
fdivrp
nop
adc
and
dec
out
aas
pop
imul
aas
repz
rclb
pop
hlt
out
and
jl
cmp
dec
stos
inc
jnp
sub
into
mov
dec
in
sbb
dec
aas
insb
add
jae
lahf
xchg
mov
rclb
sbb
loope
pop
add
jl
ret
repz
call
shll
and
in
popa
out
test
mov
mov
lcall
imul
push
cmp
push
or
test
out
xor
push
inc
call
lods
mov
loopne
adc
clc
push
pop
icebp
ds
mov
out
leave
adc
push
outsl
push
aas
mov
sub
call
push
ljmp
call
sbb
jle,pt
outsl
mov
xchg
sub
push
pop
cmc
ds
dec
fisttps
xchg
cld
xchg
or
lcall
xchg
nop
daa
ret
dec
rcrl
nop
pusha
loope
xchg
loopne
mov
fs
add
pop
repz
mov
jnp
ds
push
pop
repnz
and
insl
add
out
mov
push
pop
pushf
xor
xchg
sub
fists
andl
test
daa
insl
add
clc
inc
xlat
sub
cmp
pop
std
cwtl
das
xor
xchg
sub
loope
cmc
adc
stos
inc
add
xor
sub
adc
jge
push
cmp
xor
adc
popf
xor
push
mov
sbb
out
aam
sub
pop
or
cmp
addr16
sti
out
pop
cmc
sbb
adc
inc
int3
or
or
pop
icebp
dec
pop
in
dec
fcomi
xchg
ret
pop
icebp
icebp
sbb
pop
dec
and
push
pop
filds
or
and
pop
ljmp
es
jmp
pop
sbb
add
mov
push
adc
fimuls
xchg
adc
in
aaa
int
xor
in
sbb
add
inc
shll
add
lods
inc
pop
sbb
lahf
dec
adc
testl
pop
bndldx
ret
sub
in
adc
popa
clc
cmc
add
and
push
call
das
cld
or
cmp
out
push
in
sbb
or
inc
inc
cmc
push
out
into
pop
icebp
jmp
sbb
dec
scas
jle
fmulp
mov
std
push
les
xor
outsb
bound
sbb
jge
icebp
mov
mov
pop
jno
imul
rorb
pop
scas
sahf
cmp
test
pop
test
data16
xlat
dec
inc
fdivrl
push
jmp
in
js
mov
jbe
adc
insb
dec
in
add
pop
xor
jne
incl
pop
leave
in
xchg
inc
insl
ja
dec
loop
mov
test
sub
sbbl
add
rorl
out
ds
lret
bound
test
mov
jbe
xchg
insb
insl
add
iret
enter
mov
xchg
bound
imul
ljmp
daa
lret
test
xor
rcr
outsl
add
jns
pop
and
or
and
scas
jbe
mov
add
sub
dec
sub
pop
rcrl
add
jle
scas
and
jae
jne
shll
cmpsb
cmp
push
insl
les
lret
aam
cli
jl
loope
daa
fsubrs
insl
lds
test
imul
cli
adc
cli
xchg
shlb
mov
jp
cltd
stos
mov
shlb
movsb
pop
repnz
xchg
out
test
jo
leave
movsb
pop
aam
mov
add
int
and
pop
stos
inc
xchg
sbb
je
mov
loope
sub
loop
inc
add
push
cmp
add
push
icebp
daa
mov
inc
div
mov
xlat
outsb
pop
repnz
in
and
cli
xchg
inc
cmc
imul
pop
add
xor
dec
loop
jecxz
pop
adc
popa
clc
push
push
out
aaa
adc
inc
loop
sub
xlat
enter
mov
arpl
ss
orl
mov
fldenv
mov
add
sub
and
push
mov
ss
pop
mov
sar
xchg
pop
and
mov
pop
je
insb
mov
ret
ret
pop
stc
into
in
add
loop
dec
and
or
sbbb
subl
sti
aam
or
sbb
xchg
lods
pop
outsl
popf
enter
test
push
push
addr16
xchg
into
int
decl
fsubrs
arpl
xchg
jbe
fwait
cmpsb
mov
jmp
loope
iret
adc
mov
push
mov
cmp
sub
and
push
mov
fcomip
movsl
or
add
sbb
adc
cmp
xor
and
test
push
xchg
frstor
push
jmp
pop
and
push
jge
sbb
lret
add
xor
xor
inc
ficoml
shrl
jno
jl
insl
add
enter
xor
into
push
movsb
stos
inc
rclb
xsha1
cmpsb
mov
imul
int
out
test
push
mov
test
sbb
lret
ljmp
aad
sbb
repz
cmpsl
out
sbb
mov
sti
sub
add
iret
data16
xchg
in
mov
mov
scas
sbbl
xchg
sti
add
es
loop
ljmp
sar
and
call
add
mov
les
pop
cmc
sbb
jmp
cmpsl
xchg
cs
mov
pop
jl
outsb
cwtl
add
stc
push
jp
arpl
sbb
mov
loop
cmpsl
xor
repz
or
or
call
loopne
loop
addb
mov
or
bound
or
jns
cmp
in
addl
inc
pop
data16
aaa
dec
mov
or
addl
push
pop
adc
pusha
outsb
push
lahf
xor
nop
mov
or
insb
sahf
pusha
inc
xor
sub
fisubrs
loope
pop
jg
pop
mov
jge
dec
mov
sub
jb
cmp
cmp
sbb
hlt
sbb
lret
mov
jmp
adcb
fisttps
ss
pushf
mov
fucom
sbb
ret
dec
mov
lock
clc
in
lret
mov
rclb
scas
add
dec
sub
cmove
daa
gs
add
jno
push
std
std
and
ja
fisttpll
pavgw
clc
inc
mov
cltd
jecxz
adc
mov
in
daa
les
jbe
mov
fsubl
ljmp
jo
daa
inc
inc
cltd
pop
lret
inc
fcmovu
pop
jb
dec
loop
ret
daa
popa
shlb
sbb
sub
int3
lea
adc
popf
orb
imul
jp
lcall
jge
jae
cld
daa
cltd
xor
sbbl
jnp
movsb
fistl
adc
xchg
xchg
aaa
out
and
lods
pop
or
sbb
cltd
ret
pop
pop
xor
cmp
xchg
pop
push
rorl
es
pop
sub
enter
data16
inc
fiaddl
xchg
jnp
arpl
dec
scas
movsl
push
cmovb
jae
mov
dec
adc
lds
xor
cmpb
lret
pop
jge
imul
xlat
mov
sbb
xchg
mov
mov
imul
scas
dec
rclb
out
test
popf
ds
lods
jno
xor
push
add
in
inc
sub
push
jnp
shrb
pushf
mov
and
ja
ja
hlt
inc
fst
inc
mov
lds
pop
test
repnz
fiadds
fwait
mov
xor
sbb
imul
mov
adc
pop
cwtl
in
test
jl
inc
inc
dec
mov
sub
sbbb
inc
movsb
cmp
daa
push
ds
push
mov
stc
sbb
in
cwtl
aas
sar
xchg
mov
jno
mull
mov
dec
sub
outsl
push
out
sarb
sarl
orb
insl
add
jge
mov
dec
mov
sbb
pop
dec
xchg
xor
add
fdivs
jle
call
movsl
sbb
xchg
roll
cmpsb
rcrl
fbstp
ljmp
lods
call
bound
cmp
cmp
inc
movsl
cmp
lahf
lea
cmc
push
lea
pop
aad
cmp
or
lcall
out
mov
les
test
stos
cld
ss
dec
loope
sbb
rep
in
push
jbe
sbb
jnp
fadds
or
call
in
orl
dec
shrb
call
lahf
pusha
lret
es
or
xchg
fsub
sub
cmpsl
stc
jge
adc
mov
mov
stos
nop
push
mov
jmp
lcallw
push
pushf
pop
mov
int3
dec
daa
or
aam
shrl
ljmp
lcall
add
pop
inc
jb
mov
addr16
jg
push
lcall
xchg
test
in
add
sti
sub
mov
pop
adc
rorl
cwtl
stc
nop
lret
pop
es
mov
jmp
lds
bound
mov
lods
adc
xor
adc
and
ljmp
mov
ljmp
and
push
js
mov
xor
push
dec
mov
test
cmp
cmp
jmp
lret
jg
or
xor
push
std
mov
cmpsb
data16
outsl
mov
fs
adc
and
push
jns
add
ljmp
xchg
mov
decl
lret
addr16
test
mov
mov
je
pop
mov
inc
enter
inc
out
and
je
shll
add
adc
movsb
lret
inc
add
fists
mov
jne
xchg
adcb
nop
jns
ret
mov
loop
arpl
imul
sbbb
mov
cmpsl
and
out
in
jae
ret
scas
pop
out
divb
mov
adc
adc
das
lods
and
std
and
std
fisttpll
and
incb
test
pop
aam
mov
aam
pop
pop
mov
mov
rorl
jp
lret
stos
mov
mov
mov
imul
outsl
mov
movsb
jge
rolb
int3
adc
repnz
xor
call
cmp
mov
and
mov
loop
pop
daa
fldenv
sbb
call
xor
hlt
xor
stos
inc
mov
in
outsl
ret
inc
and
pop
shlb
cmp
add
jae
xchg
dec
fsubr
and
pop
jg
arpl
das
add
mov
imulb
dec
mov
mov
pop
lret
inc
insb
pushf
sbbb
sub
mov
sbb
cmp
stos
neg
jno
lret
pop
aad
hlt
lods
xor
push
mov
xchg
fs
xor
mov
pop
cli
movsb
push
jecxz
enter
enter
loopne
lret
iret
lods
inc
or
lahf
mov
and
and
andl
mov
or
nop
stos
pop
or
in
repz
fistpl
imul
aad
dec
push
sbb
mov
jnp
xchg
outsl
scas
pop
std
movsl
aaa
and
xor
push
xor
jmp
xchg
jp
inc
outsb
mov
xchg
xorb
or
add
xchg
pop
sub
loop
mov
mov
call
dec
out
cmpsb
test
add
jmp
dec
notb
or
pop
push
lds
cld
mov
sti
sbb
pop
jmp
sbb
aas
fsubrs
add
je
add
std
das
mov
stc
jecxz
leave
dec
add
ror
mov
mov
je
in
jecxz
aaa
mov
frstor
in
adc
dec
mov
enter
icebp
pop
jo
enter
cmc
inc
daa
and
jae
and
push
inc
inc
enter
scas
or
orb
jne
push
cmpsl
cmp
cltd
les
add
adc
xlat
ja
jmp
sub
inc
ret
lock
divl
sub
mov
sbb
push
add
andb
jge
mov
ljmp
push
dec
mov
out
or
leave
dec
iret
sbb
adc
pop
jle
lcall
mov
pop
aam
cltd
pop
ret
push
cmpsb
aaa
int3
inc
aas
dec
mov
inc
adc
imul
add
icebp
xchg
inc
in
push
push
sbb
mov
xor
flds
adcl
addr16
adc
push
fists
push
mov
push
sti
jmp
mov
leave
dec
ficoms
mul
call
sub
icebp
into
ds
mov
xlat
cmp
cmp
inc
jp
loopne
inc
xor
xor
fisubs
mov
fisubl
dec
jo
mov
pop
jge
in
ja
cmpsb
pop
jnp
call
lods
movsb
hlt
sbb
js
stc
nop
int
mov
cmpsl
rolb
pusha
xchg
fstpl
jmp
movsl
push
in
mov
in
fcompl
sub
scas
lret
jmp
std
sbb
in
and
repz
pop
add
call
in
andb
lret
jbe
enter
bound
mov
sbb
or
lea
adc
rorb
sbb
sbb
es
fistl
fs
inc
push
xor
sbb
mov
cltd
imul
xchg
outsl
xchg
and
push
imul
gs
xor
notb
adc
mov
mov
jbe
in
pop
pop
shlb
xor
mov
and
in
ss
mov
insl
add
jnp
lret
cmp
push
fbstp
push
popf
or
jbe
cltd
imul
dec
les
mov
enter
xchg
les
xchg
xor
ja
inc
mov
popa
stos
inc
int
jecxz
dec
push
ljmp
xor
insb
push
dec
popf
and
emms
or
andb
outsb
pop
cs
adc
gs
mov
pop
or
rclb
lcall
inc
je
mov
add
mov
jns
jnp
mov
sti
cs
push
xchg
sub
scas
rolb
mov
mov
mov
adc
dec
pop
jl
roll
jmp
mov
int
jp
scas
mov
roll
adc
aas
int3
mov
lcall
push
in
mov
adcb
add
cld
mov
ficomps
into
xchg
mov
mov
sbbb
cwtl
push
mov
mov
cmp
pop
in
and
fsts
mov
movl
and
bnd
add
push
pusha
push
push
push
ja
and
cmp
int
push
jo
jno
es
gs
mov
ja
out
mov
and
lcall
imull
leave
xor
ja
add
cltd
mov
push
aam
and
pop
jp
or
stos
mov
popf
add
in
xchg
lea
push
imul
xchg
aaa
sub
and
xchg
popl
adc
mov
add
daa
mov
shlb
outsl
fldenv
das
and
bound
dec
insb
jbe
je
inc
lds
pop
das
mov
inc
dec
addb
pop
dec
xchg
daa
mov
lock
incb
xor
cmp
fnsave
xorb
cld
sub
mov
test
jmp
rorl
in
mov
inc
rcl
cld
xor
push
lret
push
stos
enter
int3
xlat
sbb
pop
jb
pusha
stos
add
mov
sbb
test
lret
push
mov
fs
inc
lds
fstl
bound
and
test
sub
out
sbb
fwait
mov
pop
or
pop
sti
and
add
jbe
das
xchg
pop
lea
mov
push
test
xchg
js
cld
add
repnz
xchg
lds
xchg
pop
out
insl
lds
and
and
inc
int3
xchg
daa
mov
out
lret
dec
inc
mov
xchg
jne
enter
jo
mov
es
mov
movl
pop
decb
xchg
pop
sub
fadds
adc
sub
sub
xlat
sub
movsb
stos
jb
loop
int3
ljmp
mov
xsha256
cmpsb
push
inc
cmpsl
outsb
outsb
test
dec
mov
mov
jbe
aas
call
jp
aas
add
imul
pop
and
jmp
and
movsb
stos
insl
in
lahf
repz
mov
sbb
bound
and
xchg
arpl
orl
pusha
and
scas
retw
cmp
mov
hlt
dec
push
loop
xchg
ret
and
pop
push
mov
pushf
sub
sahf
cmp
jo
leave
inc
jno
aam
xor
lret
sub
xor
popa
adc
mov
mov
jmp
loop
xchg
lret
cmp
pop
stc
das
mov
out
es
cmp
cld
sub
in
sbb
adc
pop
xchg
lret
mov
ljmp
or
inc
jl
aaa
or
mov
cmc
xor
adc
jge
adc
push
mov
mov
pop
sti
sub
dec
lret
mov
loopne
int
andl
push
dec
lods
test
dec
jno
rorl
sbb
imul
shrl
lahf
adc
fsubrs
pop
lods
pop
mov
in
push
pop
test
xchg
pop
sahf
sbb
ret
inc
pop
mov
pusha
xchg
ja
or
aaa
jp
clc
and
jne
aas
es
dec
jae
repz
lods
inc
faddl
xchg
dec
sbb
lcall
dec
int3
mov
arpl
jne
or
push
leave
xor
test
jmp
in
pop
or
pop
mov
or
dec
jecxz
xchg
mov
repz
sbb
out
stos
out
and
movsl
ret
xor
dec
xchg
fs
push
js
ret
cltd
mov
inc
mov
xchg
adcb
push
adc
cmpsb
inc
xchg
mov
cmpsl
outsl
push
fsts
xor
jb
sub
inc
fnsetpm(287
dec
cmp
outsb
cmpsb
adc
jne
rorb
ss
pop
mov
sbb
in
adc
or
ja
sbb
dec
repz
icebp
mov
mov
jle
in
push
in
adc
dec
mov
xchg
inc
ret
sub
imul
ljmp
out
sub
test
mov
jmp
aad
mov
shl
nop
or
and
jae
or
ljmp
inc
pop
rcrb
sbb
gs
ds
sub
lds
sbb
add
adcl
pop
int3
cmp
je
or
lods
pusha
pop
inc
add
mov
jne
lahf
lcall
loope
or
and
adc
push
sbb
inc
and
xchg
imull
sti
sub
and
dec
dec
lds
inc
rolb
cmp
je
jecxz
mov
in
pop
ja
js
sub
jno
pusha
lret
pop
xlat
adcl
pop
int
adc
ficoml
and
fcomp
sub
in
push
push
mov
psllw
out
xor
bnd
inc
mov
jnp
test
pop
xchg
jae
idivl
add
jae
mov
cmp
add
push
fldt
jo
or
cmp
cli
rcll
xor
cli
scas
add
mov
mov
insb
les
mov
jmp
jbe
inc
lods
lret
daa
jns
insb
in
xor
sarb
jecxz
mov
ret
fsubl
cli
inc
icebp
xchg
fisttpl
add
pop
push
cs
xchg
mov
jne
and
aaa
add
mov
gs
jae
mov
mov
push
mov
xchg
addb
sbb
jge
js
loope
sbb
stos
popa
ffree
pop
jecxz
push
lret
int
test
or
sbb
ret
mov
mov
push
jl
mov
mull
mov
lods
pop
xor
dec
clc
popl
mov
fwait
jg
bound
lea
pop
pop
add
mov
sbb
aas
arpl
push
sbb
pushf
imul
sub
inc
mov
inc
xchg
ja
and
outsl
insb
inc
dec
les
mov
mov
aaa
repnz
lock
rolb
stos
jo
xchg
inc
fisubs
inc
repnz
fwait
mov
dec
xor
push
add
xorl
push
lret
lret
lcall
popa
lods
xchg
mov
dec
in
mov
cmp
inc
push
push
or
push
aad
push
lock
stos
dec
shl
push
push
push
outsl
mov
shll
sti
jne,pn
pop
or
cmp
pop
loopne
pop
xlat
add
in
push
out
outsl
mov
and
andb
push
test
ret
xchg
je
jg
lock
adc
pop
clc
xor
add
loopne
xchg
loop
jecxz
add
or
xor
leave
jno
lock
mov
sbb
and
xlat
jb
cld
xchg
and
adc
adc
xlat
push
cmp
jecxz
lcall
popf
pop
push
call
jbe
cmp
sub
mov
xor
jno
popf
xchg
xchg
push
testb
push
lret
int3
sbbl
or
aas
in
les
or
ret
xor
push
jb
cmp
daa
mov
jnp
jmp
cmp
rcrl
mov
dec
sbb
mov
or
and
lds
dec
cmp
or
pcmpeqw
inc
inc
lcall
aaa
in
dec
ret
rorl
aaa
fcmovu
lcall
adc
xchg
je
push
mov
push
shll
mov
jmp
cmp
mov
popa
clc
mov
call
inc
fsts
mov
cwtl
or
or
mov
js
xchg
mov
pop
and
xchg
test
lds
ljmp
in
iret
xor
fidivl
jae
and
pushf
and
dec
or
rcrb
xchg
xchg
sbb
or
cmp
cmovno
test
cwtl
xor
sbb
push
add
mov
out
or
cld
stos
jne
in
sbb
stos
xchg
adc
xchg
seta
scas
xchg
xchg
jg
loop
leave
mov
in
and
mov
jmp
jns
jmp
fidivrs
loopne
test
insb
out
sbb
je
in
dec
loope
pop
lods
test
push
mov
loop
inc
aam
cmp
sarl
pop
sub
lods
outsb
fisttps
in
and
inc
mov
aaa
int3
xlat
inc
lods
cld
mov
xor
jb
shl
aas
mov
push
adc
aaa
xor
mov
repnz
leave
sahf
ret
inc
sbb
add
or
sti
inc
lods
pushf
lahf
xchg
pushl
mov
shlb
mov
add
mov
and
jg
cmp
push
into
lret
test
jno
movsb
push
loopne
lret
lret
mov
adc
mov
xchg
imul
sbb
cli
scas
inc
cmp
lods
lods
mov
mov
gs
enter
ljmp
pop
add
out
es
cmp
loop
fimull
add
cmp
clc
in
lds
mov
je
roll
adc
rorb
cltd
xor
shl
mov
add
push
test
orl
lock
add
fisttpll
ds
aam
imul
xor
xor
mov
inc
idivb
xchg
jle
mov
cmp
push
fiadds
je
inc
inc
push
xchg
push
stos
inc
inc
inc
xchg
jl
push
xchg
cmp
lea
dec
punpcklbw
adc
pushf
fildl
movsb
or
bnd
jo
adc
mov
push
mov
movsb
mov
and
jns
aas
xor
imul
imul
out
subl
push
cmp
jle
adc
inc
cmp
mov
fcomps
sbb
mov
and
lock
jbe
xchg
push
es
push
inc
ds
mov
mov
inc
fwait
add
add
mov
in
cmc
daa
shll
dec
ss
mov
adc
dec
jno
call
dec
in
loopne
ja,pn
jl
or
mov
sbb
sarb
mov
or
and
sub
sbb
jge
insl
sbb
pop
mov
jmp
sbb
xchg
inc
fistl
pop
testb
mov
dec
lahf
mov
lcall
inc
hlt
mov
shll
xchg
call
fmulp
xor
jae
int3
cmp
std
and
inc
test
lret
icebp
movsb
lret
divl
fiaddl
ffreep
pop
in
mov
xchg
sbb
mov
in
clc
xchg
push
mov
inc
testb
pop
movsl
mov
out
inc
repz
rorb
mov
rclb
mov
cmpl
or
loop
out
jl
sbb
cmc
xor
jle
pop
insl
mov
icebp
aaa
xlat
shlb
arpl
sbb
mov
cmpsl
jns
lcall
mov
out
pop
icebp
push
or
lods
test
icebp
cli
inc
scas
into
movsl
pop
leave
std
frstor
push
fidivs
pop
ja
sbb
ret
and
pop
jns
sbb
mov
cmp
fldl
int3
cmp
icebp
mov
iret
fldl
popf
push
ffreep
cmp
or
push
lcall
pop
mov
out
mov
paddq
movsb
pop
enter
fcomp
ret
fisubrl
jmp
sub
dec
or
test
xor
xlat
repnz
fsubl
stc
push
call
jbe
outsl
push
jge
sbbl
shr
lahf
ss
stos
inc
and
mov
pusha
ja
cwtl
out
lret
nop
push
in
add
scas
imul
xor
fadd
fcoml
or
das
jno
popa
xor
es
fwait
xor
fdivrl
bound
xlat
outsb
popa
jl
subb
pop
sahf
add
adc
push
sub
enter
fisubl
popa
clc
test
adcb
pop
mov
push
imul
movsb
mov
enter
sub
les
xchg
dec
out
ficoms
push
push
pushf
cmp
test
or
out
unpcklps
nop
popa
sub
xchg
mov
xor
bnd
push
ja
sbb
lret
iret
enter
fmull
jecxz
out
xchg
inc
push
add
sub
sub
dec
loop
jbe
inc
test
imul
sahf
enter
mov
sti
xchg
dec
adc
pop
inc
imul
pop
xchg
cmpsl
lds
inc
lods
out
pop
sbb
int
jp
and
pop
mov
pop
imulb
jge
test
lret
clc
xor
xchg
dec
test
sbb
fisubs
mov
cmp
pop
jb
ret
or
cmp
mov
lret
xor
mov
fsts
push
idivl
int3
mov
lea
cmpsb
aaa
nop
dec
movsl
sub
ljmp
lcall
inc
std
pop
xor
insb
sub
and
lahf
jb
mov
es
xchg
jle
movsb
fmul
leave
insl
mov
pushf
pushf
cmpsl
lods
xor
sub
fcmovb
jecxz,pn
push
andb
imul
jecxz
lcall
ret
lods
scas
cmpl
stos
ret
push
xor
pop
push
inc
jl
aad
xor
popa
popa
ds
fmul
bnd
outsb
xchg
ja
mov
mov
fcompl
cmp
mov
add
jmp
sub
sbb
xor
addr16
push
and
mov
jae
jns
jbe
std
jp
mov
dec
movsb
repnz
mov
mov
cmp
push
jge
sub
movsl
mov
push
or
movsl
cmp
repnz
jnp
ss
nop
sbb
or
push
clc
shlb
fidivs
aad
dec
adc
mov
pop
jbe
dec
negl
stos
sub
lret
cld
sub
aad
out
and
sti
test
mov
out
outsb
rcll
rcrl
pusha
dec
rorl
push
aam
adc
movsb
fmul
jns
aaa
stc
sub
mov
inc
repz
jo
arpl
mov
add
inc
test
jp
sub
call
mov
mov
sub
shll
scas
sub
loope
jge
inc
aas
mov
leave
jne
lea
cmp
xchg
pop
push
push
add
lret
sahf
aad
jmp
adc
test
cmp
or
es
addl
pop
cli
or
pop
jmp
scas
sbb
lods
cs
pop
mov
lahf
outsl
mov
or
outsb
pop
or
in
test
pop
outsl
inc
pop
mov
mov
lea
mov
push
lret
fsubs
stc
popf
out
stos
rorl
iret
rcr
frstor
mov
jae
stos
jecxz
sahf
xchg
paddsb
xchg
inc
icebp
or
adc
pop
call
or
adc
xchg
outsb
sti
xorb
mov
push
inc
mov
cwtl
das
ffree
mov
mov
push
hlt
mov
and
inc
fstp
sbb
cmp
daa
xchg
cltd
add
jae
push
out
sbb
mov
daa
jl
cltd
mov
mov
push
dec
mov
arpl
xlat
push
lods
enter
mull
jg
mov
es
jo
pop
div
xchg
jmp
lret
fs
push
data16
pop
stc
fidivs
idivl
mov
mov
addr16
xchg
xor
or
push
imul
push
in
sub
pop
repz
adc
and
sbb
arpl
das
cs
xchg
sub
rcll
push
push
lret
stos
inc
sbb
shrb
mov
pop
jg
stos
sub
bound
sub
mov
mov
outsl
xchg
shlb
mov
int
call
mov
test
mov
out
dec
or
or
xchg
out
mov
iret
out
push
cmp
sub
add
into
sbb
xchg
insb
in
sbbl
push
aad
jecxz
xchg
add
fistps
int3
and
std
adc
lahf
out
or
data16
mov
int3
rorl
and
push
scas
insl
hlt
adcl
shll
add
inc
push
push
orb
roll
add
lahf
xor
insb
or
fs
outsl
cmc
jg
ja
cli
outsl
fadds
push
push
lret
xchg
mov
stos
cld
mov
out
repnz
pop
add
iret
xchg
adc
pop
dec
inc
push
cld
push
lcall
sub
jge
cmp
mov
icebp
jo
mov
mov
out
pop
inc
fs
push
xchg
adc
mov
aam
in
les
push
sti
xor
dec
in
fs
loope
xchg
cmp
repz
xchg
adc
lea
stos
mov
dec
hlt
pop
cmp
das
adc
shr
aam
push
pop
mov
ljmp
mov
xchg
sub
pop
push
mov
dec
adc
aam
outsl
mov
js
mov
lods
into
xchg
inc
mov
dec
mov
fdivrl
movsl
es
shrb
push
dec
roll
push
mov
orb
jp
sub
daa
inc
fs
mov
push
cmp
mov
lods
push
shlb
mov
pop
jl
aam
jl
mov
pop
jns
xchg
aaa
jno,pn
pop
outsl
cmp
pop
jb
dec
cmp
mov
sbb
xlat
and
jns
cmpsb
das
mov
cld
pop
out
mov
jmp
icebp
or
fmull
sbb
lret
mov
cs
imul
jno
imul
outsl
lea
fmull
enter
sbb
xlat
lret
mov
mov
std
pop
cli
scas
imul
out
lret
mov
iret
pop
lods
inc
dec
in
and
mov
stos
xor
xor
fs
and
pusha
jg
push
mov
cs
rolb
and
cmp
repnz
sarb
jecxz
dec
push
repz
xor
das
mov
add
xorl
dec
adc
or
pop
push
or
call
cmp
or
pop
xchg
inc
mov
cmc
push
or
js
iret
and
push
push
cs
lret
xchg
xchg
orb
insl
testb
jmp
mov
push
lret
inc
jge
push
repz
push
lret
nop
loop
add
cmpsb
sub
insl
not
je
in
test
mov
dec
psubusw
add
rcr
test
fistpl
fistpl
lret
jl
sbb
mov
cmp
jbe
sub
adc
push
sbb
addr16
test
cwtl
mov
into
mov
test
cwtl
inc
in
jecxz
add
mov
rorb
lahf
test
mov
cmp
xlat
jns
jl
or
enter
stos
repz
sbb
nop
cmp
iret
imul
inc
repnz
bound
mov
jp
cmc
out
push
daa
hlt
test
dec
xor
or
pop
mov
jbe
movsb
sub
mov
sub
outsl
mov
scas
xchg
cmp
push
inc
pop
cli
jp
test
adcl
rcl
pop
cmp
test
sub
or
dec
inc
or
xchg
cmp
sub
mov
xor
addl
xor
sahf
imulb
cmp
out
cltd
cmp
sub
shll
cmp
or
pop
sbb
push
cwtl
jno
mov
mov
jecxz
sbb
pop
sti
cmpsb
ss
ja
adc
icebp
pop
rorb
sbb
xorl
mov
fldl
scas
sub
adc
fcomp
dec
xchg
inc
addl
roll
shll
xor
nop
mov
stc
pop
ljmp
cs
pop
roll
mov
mov
jae
or
jns
push
jae
sub
sub
mov
pop
mov
mov
clc
pop
sti
dec
mov
sub
ja
cmp
lods
sub
pop
xor
fidivrl
ljmp
jg
mov
pop
push
cwtl
test
aaa
sbb
inc
loop
clc
pop
cmpsb
xor
mov
xchg
pushf
stos
sub
push
addr16
les
scas
sub
cmpsl
or
mov
mov
ljmp
sub
pop
rolb
test
int3
sub
ret
mov
mov
test
adc
xor
loope
cli
pop
mov
movsl
fidivs
inc
mov
cmpsl
scas
loop
sbb
movsb
xor
inc
push
inc
hlt
popa
lea
cmp
xor
es
addr16
xor
daa
lods
push
add
push
call
je
cld
mov
xor
movsl
mov
mov
mov
xor
sub
xor
mov
popa
hlt
lea
xor
mov
mov
pushf
sub
push
call
jne
repnz
cmp
sarb
sub
rol
mov
insl
in
addl
mov
push
popf
push
fistps
mov
lahf
add
xchg
pop
fst
or
aad
mov
stos
or
sub
inc
xchg
lcall
dec
sarb
xchg
aas
xchg
mov
pop
popa
sbb
xchg
daa
nop
inc
cmp
repnz
pop
and
cli
push
test
loopne
adc
sbb
out
rolb
lahf
xchg
xchg
inc
inc
mov
pushf
mov
sbb
lods
sbb
jg
lods
or
roll
or
push
pop
cld
pop
rolb
pop
rorb
or
push
jmp
sub
lds
mov
stos
lods
stos
aaa
mov
stos
ret
push
jbe
rolb
lret
das
test
sub
in
push
add
cld
adc
test
lods
sub
icebp
xchg
aaa
lahf
cmp
lret
popa
divb
adcl
rcll
out
rolb
hlt
mov
popf
mov
iret
int3
adc
fldz
je
out
or
ret
add
jle
adc
fs
add
in
dec
push
jns
in
addr16
xchg
iret
ja
stos
mov
scas
xor
out
adc
add
jnp
sahf
sbb
lods
mov
xchg
orl
fwait
inc
add
scas
xor
push
push
test
and
xchg
pop
sahf
inc
out
cmp
je
xor
xorl
dec
adc
cmpb
daa
ljmp
xor
xchg
cmp
and
mov
out
lods
fwait
cmp
test
js
stos
cltd
aaa
mov
xchg
mov
sbb
cwtl
and
popa
add
mull
pop
call
dec
loopne
and
cmp
xchg
or
adc
add
adc
enter
xchg
adc
scas
adc
dec
add
cmpsl
cmp
popf
sahf
mov
imul
popf
adc
addr16
push
std
xor
shr
xlat
jge
cld
push
out
sub
jp
mov
add
mov
frstor
xor
push
add
in
outsb
mov
test
pusha
mulb
negl
jge
pop
stc
lods
adcb
out
scas
sbb
into
xchg
fs
and
sub
lret
dec
xchg
gs
inc
sahf
movsl
insb
xchg
jmp
push
jge
cmp
test
mov
dec
fmulp
xchg
push
pushf
mov
les
loope
sbb
add
and
push
jb
pop
jecxz
jle
clc
xlat
jns
fiaddl
pop
jecxz
inc
push
inc
xor
add
ja
fstpl
cmp
sbb
pusha
test
and
jns
stos
ficompl
clc
pop
inc
mov
cmp
popf
leave
xchg
sbb
push
insb
test
aad
push
cmp
xchg
dec
mov
ror
cmpsb
ss
or
mov
cmpsl
movsb
xor
and
add
or
out
push
dec
into
fdiv
pusha
icebp
adc
mov
test
fcompl
xor
scas
sahf
jnp
rorb
cmc
pop
xchg
adc
mov
enter
adc
or
mov
loopne
fs
cmpsb
dec
pop
add
out
ret
mov
lcall
rolb
jge
jp
pop
cmp
ljmp
push
and
cmc
xchg
outsb
out
clc
in
inc
jmp
cmp
xor
scas
push
jmp
aas
push
shrb
icebp
jmp
out
push
inc
out
faddl
xor
sub
mov
dec
movsb
xor
xor
cld
pop
mov
test
inc
daa
dec
xchg
inc
pop
aas
lods
sub
mov
je
aaa
out
in
jge
mov
xchg
scas
sarl
lds
xchg
jge
repz
cmpsb
test
mov
ss
mov
push
xchg
pop
loop
cld
rclb
data16
mov
cmpsl
rolb
negb
movl
xor
jg
out
repz
fnstsw
ljmp
jns
sarb
fs
or
xchg
clc
addr16
push
add
sub
dec
fisttps
repz
dec
or
fmull
pop
call
test
jecxz
scas
mov
lea
stos
lock
jbe
push
test
ja
push
lret
clc
push
xchg
cmp
jmp
cs
xor
jno
pop
mov
fwait
movsl
sub
push
dec
js
ja
cld
popa
std
pop
lock
arpl
cmp
gs
push
mov
jno
adc
into
imul
jmp
icebp
lcall
sub
cmp
and
test
cmc
pusha
clc
inc
movsb
das
mov
adcl
xor
les
or
test
lahf
clc
pop
push
inc
dec
or
mov
mov
mov
mov
gs
out
mov
scas
mull
jl
xor
jmp
cli
inc
or
ljmp
adc
das
mov
inc
pop
ret
ss
or
and
inc
or
xor
xchg
sub
sub
mov
flds
mov
fstl
cmpl
lods
xor
mov
sub
nop
sbb
adc
js
call
push
ret
sahf
adcb
scas
cs
jb
repz
fwait
cmp
ljmp
into
add
fstl
mov
insl
arpl
xchg
cmp
xor
jae
push
add
jo
in
cwtl
push
pushf
cmp
mov
inc
daa
xor
test
iret
jle
xor
sbb
pop
cltd
leave
lea
scas
sub
sub
sub
xor
ja
mov
les
mov
popa
sbb
or
pop
fs
pop
movsl
sub
or
xchg
cmp
sbb
mov
int3
bound
sbb
xchg
je
jb
ret
pop
or
cmpsl
repnz
mov
sar
push
int3
jg
pop
std
sub
xchg
inc
mov
mov
lcall
add
and
dec
imul
aaa
xchg
inc
andl
push
sti
fisubs
adc
daa
ja
pop
cmp
mov
jg
js
xor
and
inc
or
aad
loop
inc
ret
xchg
sbb
enter
in
dec
xlat
xlat
test
mov
sub
sub
mull
aaa
movsb
xor
lods
sub
mov
gs
fsubl
ja
outsb
fadds
or
sbb
loopne
jl
push
push
xchg
imul
into
cmpsl
xor
int3
pop
sarb
jno
jno
cmp
xchg
insl
les
push
in
idivl
stos
xor
sbb
add
cltd
movsl
outsl
mov
xchg
imul
xchg
dec
mov
mov
inc
out
inc
or
xchg
or
jnp
xor
or
pop
stos
jp
xchg
mov
mov
sbb
sbbb
and
inc
adc
mov
icebp
bound
or
dec
add
popl
movsl
xor
sahf
pop
cli
scas
inc
sub
pop
mov
mov
outsb
xchg
inc
cmp
xor
daa
pop
sahf
pop
mov
sbb
in
cmc
inc
push
js
add
out
pop
and
call
xorl
sbb
push
pop
int3
fstps
push
sti
addr16
jno
mov
scas
sub
jmp
call
push
lea
outsl
fiaddl
dec
lods
int3
stos
xor
imul
dec
adc
in
jl
not
jp
sbb
clc
fstpt
shl
dec
adc
shll
and
push
roll
cmp
xchg
jae
dec
pop
inc
push
push
cltd
xchg
aas
xor
imul
pop
xchg
or
in
jae
icebp
pop
sahf
inc
or
push
mov
iret
loope
mov
stos
fwait
icebp
sub
and
add
mov
or
inc
xchg
jb
fnstenv
fidivl
jo
mov
shll
push
jns
inc
adc
gs
add
pop
stc
es
push
in
cmp
insl
adc
mov
mov
mov
sar
adc
out
or
push
test
ss
insb
mov
lods
cmp
das
xchg
cmp
xor
push
movmskps
cmpb
clc
out
mov
out
sbb
xchg
and
pop
stc
or
ss
inc
inc
adc
jmp
cltd
push
xor
sub
xor
outsb
lcall
data16
lahf
dec
pop
xor
sub
enter
jbe
push
lcall
lds
xchg
cmpsb
loope
fsubs
js
test
and
mov
mov
cwtl
pop
push
loopne
jo
mov
orw
jmp
push
test
mov
dec
add
mov
movsb
stos
cs
sub
subb
push
das
xor
xor
popa
adc
dec
aaa
mov
mov
fidivrl
push
push
lahf
hlt
lock
insb
ljmp
lret
bound
add
je
pop
cmpsb
gs
xor
and
mov
mov
mov
aad
stos
ror
xor
into
les
mov
xchg
or
jne
ret
xor
mov
addr16
lods
das
sbb
in
jo
mov
pop
inc
pop
rcr
mov
movnti
ja
or
callw
jecxz
cmp
add
xlat
xchg
xchg
lds
imul
push
call
repnz
popa
dec
xor
jl
and
leave
mov
lea
cmpsb
xchg
repz
pop
mov
mov
movsb
js
and
sti
es
push
mov
in
js
dec
stc
fdivl
xchg
aam
pop
fsubs
addb
sub
push
inc
jo
movsl
fistps
push
ljmp
mov
test
stc
adc
enter
cwtl
sbb
xchg
jl
aaa
sahf
aaa
insl
mov
daa
and
cltd
ljmp
push
das
daa
lods
add
ss
jl
fstpt
jo
xchg
push
js
in
dec
pop
add
icebp
jns
mov
out
loop
jl
push
sahf
loopew
sbb
cmpsl
ss
cmp
test
xor
cmpsl
adc
lods
stc
pop
push
les
in
aas
sbb
inc
in
or
push
notb
add
in
mov
leave
pop
xor
insl
sbb
dec
mov
adc
mov
mov
fisubl
mov
mov
sbbb
and
cmp
ja
dec
add
sbb
shrl
arpl
cld
xor
mull
sub
mov
pop
je
mov
mov
shlb
push
pop
lds
in
cmpl
dec
adc
out
fiaddl
pop
mov
js
pop
and
mov
scas
jmp
or
push
xor
mov
inc
or
dec
adc
jno
fsubrl
mov
jecxz
xor
pop
add
jmp
cld
xor
hlt
cmp
int
jmp
pop
add
push
loope
jle
test
or
pop
or
hlt
mov
repz
insb
mov
pop
lret
mov
mov
mov
pop
and
jb
and
mov
add
jb
mov
lods
or
bnd
or
xchg
xor
fs
adc
ficoml
into
xchg
xor
jmp
push
lds
pop
in
xchg
cmp
adc
js
xor
push
aad
in
pop
add
das
faddl
mov
ds
fnstsw
jbe
mov
mov
mov
cmpsl
outsb
mov
mov
mov
mov
jmp
pop
cmpsb
dec
pop
dec
cmpb
xchg
inc
adc
aam
adc
push
mov
xor
imul
inc
dec
stc
pusha
fsts
push
lret
add
dec
adc
pop
dec
adc
dec
pop
add
loope
xchg
sti
arpl
push
or
rcl
pusha
pop
sbb
mov
cmc
xchg
adc
adc
orl
fidivrl
int3
cld
inc
adc
lret
movsb
inc
xchg
mov
mov
and
mov
out
mov
mov
xchg
add
insl
mulb
aam
cmp
mov
jl
jae
and
cmpsl
sub
std
pop
cltd
imul
mov
mov
frstor
inc
mov
std
aaa
or
int3
jmp
mov
or
add
push
sub
test
enter
xor
es
lret
mov
mov
push
add
cwtl
cmc
cmc
dec
test
push
in
insl
ljmp
jno
sub
or
and
and
notl
in
push
shl
push
mov
push
add
pushf
test
icebp
popa
rcrl
leave
pop
or
enter
and
inc
adc
adc
insb
pop
jno
push
jbe
insb
dec
sbb
fistl
add
je
out
addr16
insb
adc
leave
xchg
sahf
mov
fldcw
fdivl
jnp
and
inc
enter
std
sbb
jl
in
aam
loopne
xor
cmp
sysenter
mov
cmp
movsl
shrd
mov
sub
rorl
out
pop
std
xchg
iret
les
mov
cld
pop
sub
xor
mov
imul
xchg
push
subb
push
cmpsl
jne
xchg
test
lret
xchg
mov
ja
cmp
cltd
xor
dec
psrlq
mov
out
jae
cmc
push
mov
mov
mov
and
xor
imul
sbb
jae
pushf
pop
mov
xchg
cmpsb
in
data16
sbb
push
insl
out
imul
lds
mov
cmc
jae
lret
xchg
jb
xchg
inc
pop
insb
sub
fldl
cld
pop
push
mov
sti
sub
lock
xor
cs
shrl
in
ret
or
dec
pop
sbb
add
roll
jmp
mov
pusha
clc
or
mov
fdivrl
mov
sbbb
fcmovb
xchg
pop
outsb
mov
jno
push
inc
sbb
mov
mov
scas
inc
hlt
das
mov
out
mov
aas
mov
push
inc
mov
orb
dec
cwtl
clc
pop
ljmp
int
mov
inc
jns
lods
dec
and
or
push
cld
daa
sub
sarb
inc
or
push
dec
push
and
cs
sbb
popf
inc
push
push
cmp
rcrb
shlb
mov
pop
and
pop
cmp
and
dec
or
repnz
xchg
cmp
jge
lret
xlat
adcl
sub
push
pop
and
fiaddl
pop
mov
mov
jl
lods
xor
ja
sub
ja
cmp
push
jnp
in
imul
outsb
in
xor
lcall
enter
push
out
imul
std
pop
dec
decb
inc
xchg
sbb
les
xchg
sub
xor
dec
push
dec
adc
sti
outsb
fstpt
jmp
inc
or
xor
jns
pop
iret
xchg
pop
cmpsb
lods
xor
mov
mov
sub
stos
inc
sub
cmp
test
adc
das
mov
inc
movb
jb
ds
and
push
mull
arpl
dec
jne
fidivs
sub
pop
negb
popf
jp
test
outsb
lret
push
addr16
cwtl
aaa
cli
sbb
addr16
adc
inc
lock
popf
cs
ret
cmp
ret
dec
or
sar
push
add
cs
test
dec
xorb
sub
mov
arpl
mov
cmpsl
jne
sub
sbb
aaa
adc
push
dec
sub
lea
rorl
int3
cwtl
jnp
stos
rol
cmpsb
das
jg
cmp
xlat
add
outsb
mov
xchg
inc
jne
push
sbb
popf
dec
movsl
cmp
out
xchg
mov
xchg
cmp
xor
mov
es
insl
lock
or
pop
add
pop
pop
int3
push
out
add
orl
mov
stos
mov
test
insl
or
test
jg
stc
dec
fistpll
popf
sbb
inc
icebp
sbb
push
jl
daa
adc
push
mov
test
mulb
aam
mov
mov
xchg
inc
jg
adcb
enter
and
aad
lods
sub
mov
clc
pop
push
inc
jp
ja
in
mov
stos
out
cmc
hlt
mov
mov
mov
mov
push
mov
xlat
adc
repnz
mov
cmp
nop
cmp
sub
imul
lret
lods
xor
adc
out
mov
jg
mov
push
iret
xor
ja
jge
add
es
in
jb
xor
cld
out
and
loope
inc
sbb
jecxz
stos
sub
cld
test
bnd
cli
dec
add
pusha
loop
mov
test
sub
dec
mov
mov
xchg
push
mov
xor
jmp
daa
popa
pop
cmc
mov
xchg
cmp
mov
lret
nop
xlat
faddl
lret
fidivrl
jne
out
mov
out
stos
movsl
cmp
dec
insl
add
sti
cmpsl
daa
push
jo
add
orb
sbb
jae
repnz
add
and
xchg
push
inc
mov
ss
and
mov
mov
cmp
add
mov
rcrb
shrl
clc
aaa
jae
mov
scas
push
clc
outsl
and
pusha
adc
adc
push
in
inc
cmp
xchg
fistpll
sarl
mov
sahf
ss
xor
and
repz
ss
cmp
les
jl
test
sub
jecxz
pop
jmp
imulb
movsl
aaa
or
out
mov
and
fistpll
test
pop
push
push
push
lret
fistpll
test
mov
push
mov
mov
ljmp
mov
mov
pop
lcall
sub
icebp
mov
mov
jmp
bnd
adc
push
sarb
add
push
mov
test
lods
mov
pop
xorb
enter
mov
mov
rolb
xlat
movsb
or
dec
inc
jmp
mov
pop
negl
ret
dec
or
stos
aad
sub
dec
or
xor
scas
fnstenv
fsubl
mov
lock
andl
push
in
dec
push
xor
dec
mov
push
mov
icebp
movl
orl
inc
adc
clc
xor
mov
cmpsl
inc
adc
fsubr
imul
inc
adc
out
cmp
inc
dec
loop
idivl
mov
rcl
scas
xor
add
in
lret
xchg
out
fldl
gs
cmp
notb
icebp
enter
das
adc
xchg
add
insb
in
pushf
pop
pop
mov
pop
shr
insl
int3
test
cmp
and
or
jae
or
sahf
inc
mov
lods
pop
lds
fnstsw
or
pop
ss
dec
mov
jp
call
lcall
push
pop
xchg
rolb
and
fwait
push
adc
mov
test
adc
cmpsl
xor
xchg
and
mov
ljmp
mov
inc
jno
push
xchg
sub
xchg
jb
insb
sbb
cmp
xor
sub
aaa
sub
jge
jl
jne
push
lret
xor
inc
cli
movsb
adc
or
test
cld
mov
mov
mov
mov
in
lods
inc
fcomp
push
push
int
cmovp
add
mov
push
xchg
cmp
and
fildl
push
xlat
jmp
movb
add
adc
movsl
xor
das
scas
or
loope
jl
push
int
gs
or
push
mov
pop
cmp
cmpsl
sbb
dec
jmp
dec
adc
mov
out
push
add
cld
cltd
cmp
pop
cmc
pusha
out
addr16
sbb
jmp
and
inc
adc
cli
adc
imul
ret
lock
xor
lret
cld
inc
dec
adc
out
faddl
mov
pop
and
cwtl
push
inc
pop
mov
ja
inc
or
fs
xor
std
pusha
ret
in
insb
pop
lds
sub
js
xchg
aas
in
cmp
movsl
daa
lea
cmpsb
sub
cmp
add
cwtl
inc
adc
aaa
addl
xchg
lods
xor
aad
push
xchg
add
in
enter
adc
arpl
into
mov
jmp
inc
call
mov
pop
cmp
xor
ss
js
inc
test
cwtl
add
out
mov
xlat
jns
movsb
sbb
gs
addr16
jg
pop
icebp
out
jno
out
fidivrl
lods
inc
adc
inc
in
addr16
adc
sbb
and
push
insb
cli
es
cmpsl
pop
inc
fisttpl
fbld
sbbb
xchg
cmp
push
addl
cld
or
dec
sbb
mov
inc
scas
xor
sbb
stos
ret
enter
es
into
add
mov
sti
fs
pop
mov
mov
xor
xor
gs
jmp
jge
sbb
jecxz
fistpll
cmpsb
xor
dec
push
mov
int
jle
popa
push
imul
sbb
or
cmpsl
cltd
lret
xor
stos
xor
fdivl
or
add
mov
push
clc
addr16
ja
add
xor
and
push
mov
sbb
lret
and
adc
stos
sub
aas
addr16
sbb
rol
movsl
cltd
pop
adcb
mov
sahf
ja,pn
pop
dec
xor
lods
rcll
mov
dec
aad
data16
das
or
inc
inc
test
jb
cmp
daa
mov
or
int3
fsubr
je
sbb
nop
aaa
addb
sbb
shll
sbb
dec
setl
testl
dec
adc
mov
orb
jmp
jo
mov
imul
sbb
pop
pop
hlt
popl
jbe
aaa
sahf
iret
addr16
and
sub
fadds
repz
ds
ljmp
test
iret
out
ja
cld
cli
adc
fsubp
aaa
lahf
xor
je
and
cli
xchg
pop
xchg
imul
das
sbb
mov
stos
mov
mov
das
mov
out
in
lcall
int
pop
jmp
repnz
xor
push
loope
das
nop
mov
and
lret
cmpsb
sub
scas
adc
cmp
orl
lds
ror
in
fstp
negl
or
jle
mov
xchg
jne
les
lods
icebp
gs
dec
call
insb
popf
adc
push
dec
xchg
xlat
and
std
jecxz
xor
int3
cmpsb
push
loope
test
jmp
mov
mov
sub
iret
xor
dec
das
das
pop
push
aam
cmpb
stos
rol
mov
mov
cld
pop
cs
push
add
cmp
jge
inc
pushf
cmp
into
cmpsb
xor
imul
inc
adc
les
jle
pop
movsl
xor
mov
xchg
push
jns
pop
cmpb
pusha
jecxz
test
aad
ret
adc
sbb
subps
jnp
sbb
dec
test
icebp
mov
lcall
add
mov
fisttps
cmp
pop
ret
jb
sahf
sbb
js
cmp
hlt
gs
cwtl
gs
lock
mov
jns
mov
jmp
xor
sarb
jne
pop
mov
subb
mov
sub
inc
adc
mov
push
mov
mov
ficoms
mov
or
mov
mov
out
xlat
jns
repz
adc
into
jns
push
mov
pop
rolb
inc
stos
pop
std
call
clc
data16
cmpsl
sbb
out
jle
inc
cli
fidivrl
inc
adc
sbb
mov
movsl
pop
std
inc
pop
lcall
sbb
loope,pn
je
lock
and
mov
xor
pusha
cltd
push
popf
inc
ss
or
into
and
cmp
je
mov
das
push
in
ret
jbe
mov
test
cmp
stc
out
movsl
sti
out
js
add
sbb
out
pop
sub
enter
sbb
push
leave
jno
xchg
aaa
in
lock
or
push
movsl
sub
and
mov
dec
adc
testb
in
mov
add
into
aad
lock
pop
pushf
in
cmp
movb
fiaddl
je
and
icebp
mov
cmc
pop
lea
push
gs
lods
xor
les
outsb
add
sahf
imul
mov
mov
pusha
inc
fsubrs
fs
xchg
mov
add
lods
cmp
and
cmp
lret
inc
pusha
neg
add
xor
jle
xor
and
test
mov
popa
sub
dec
call
lea
push
popf
rcrl
and
and
inc
inc
fnstcw
push
out
cltd
pusha
test
jmp
adc
sbb
pushf
xor
stos
inc
outsl
xchg
mov
pop
ret
outsl
pop
in
jge
cmp
lea
add
push
mov
mov
paddusb
or
cs
cmc
pop
subl
cmpb
mov
or
lcall
daa
mov
pop
scas
jp
insl
lods
shl
jge
into
hlt
mov
and
fwait
push
and
test
cmpsl
jae
movsb
enter
lds
negb
pop
testb
add
insb
jge
sahf
push
and
test
push
inc
adc
pop
inc
fsubrs
arpl
jge
mov
add
out
adc
mov
mov
fmuls
lods
pop
neg
add
xor
jge
xor
and
subl
push
sti
lret
clc
xlat
outsb
sub
jg
dec
cmc
mov
push
popf
rcrl
and
and
inc
inc
fnstcw
dec
out
cltd
pusha
test
jmp
adc
sbb
pushf
xor
test
push
les
fsubrs
jecxz
jl
cmp
lea
add
mov
fidivs
leave
pand
or
push
out
sub
outsb
add
mov
mov
or
cltd
xor
es
pop
jge
pop
scas
jns
insb
stos
shl
jge
int
mov
and
push
and
test
cmpsb
jb
mov
les
cmc
sbb
dec
push
insl
add
imul
imul
inc
out
adc
pop
inc
fsubrs
out
xchg
mov
jmp
or
mov
lea
fmuls
stos
pop
neg
add
xor
jge
das
push
mov
andb
push
aad
lret
not
outsb
sub
jg
dec
cmc
mov
popf
rcrb
and
and
xor
and
fnstenv
dec
out
cwtl
pusha
test
ljmp
sbb
pushf
xor
test
push
ret
mov
pop
shl
outsl
push
loop
jl
cmp
lea
add
mov
fnsave
leave
push
fidivrl
or
push
out
sub
hlt
pop
subb
jle
adc
rcrb
inc
pop
and
enter
aad
stos
iret
out
add
repz
and
push
pop
adc
movsl
jno
mov
ret
dec
in
sbb
dec
adc
jge
pushf
push
fwait
xor
mov
mov
pop
inc
arpl
outsl
xchg
popa
out
xchg
mov
call
or
mov
mov
fmuls
stos
pop
neg
ljmp
xor
jge
das
push
lea
cmpsb
stos
inc
fsubs
leave
pusha
sub
xlat
outsb
sub
jle
dec
cmc
mov
pushf
rcrl
and
and
fdivs
dec
out
xchg
pop
test
insl
add
jmp
mov
sbb
test
push
ret
pop
shl
outsb
adc
aaa
cmc
mov
add
mov
fdivl
enter
or
dec
out
sub
hlt
pop
subl
mov
mov
push
rcrb
inc
pop
and
pop
lods
js
insb
stos
into
in
add
repz
and
lcall
and
mov
ret
dec
in
pop
pop
cmc
dec
adc
jl
fwait
push
lcall
ud1
push
enter
xlat
outsb
xchg
popa
out
xchg
mov
mov
mov
fwait
in
adc
cmp
and
mov
fmuls
stos
pop
neg
outsb
add
das
push
mov
test
xor
mov
enter
xlat
outsb
sub
jle
cmc
mov
fwait
rcrb
and
and
jne
dec
out
xchg
pop
cmc
xchg
insl
add
call
mov
sbb
xor
test
dec
rorl
insl
adc
in
adc
hlt
mov
add
mov
or
aas
or
dec
in
sub
hlt
pop
subb
jnp
mov
mov
add
daa
test
pop
and
pop
lods
js
insb
stos
int
jnp
lret
repz
and
lcall
and
mov
ret
repz
pop
cmc
inc
adc
add
push
mov
cltd
mov
test
push
inc
or
xlat
outsb
xchg
pusha
out
xchg
mov
mov
mov
fwait
in
adc
cmp
xor
mov
fmuls
test
outsb
add
cs
mov
orl
andl
pop
sub
xlat
outsb
sub
jge
dec
cmc
mov
add
iret
pushf
adc
and
xor
and
xlat
je
dec
out
xchg
pop
cmc
xchg
insl
add
out
adc
out
and
cmp
inc
insb
mov
pop
mov
loope
jl
xor
add
mov
fidivl
or
aas
or
pop
hlt
pop
jg
add
rorb
xor
es
pop
and
dec
push
jns
pop
stos
ja
insb
test
lret
cld
pop
add
dec
jno
mov
mov
rorl
adc
insl
add
addr16
cltd
mov
cwtl
mov
test
push
aas
or
pop
ds
xlat
outsb
xchg
pop
out
xchg
mov
mov
mov
fwait
jecxz
adc
aaa
add
mov
mov
fadds
test
neg
cld
outsb
add
sub
dec
fwait
xor
mov
enter
xlat
outsb
daa
dec
out
jl
cmc
mov
add
into
fwait
adc
and
xor
pop
inc
inc
xlat
jae
dec
out
xchg
pop
cmc
lds
jl
sbb
mov
sbb
lcall
lea
pop
mov
loopne
jl
xor
mov
add
mov
fnstenv
or
aas
or
in
sub
pop
jle
add
rorl
xor
and
mov
push
js
pop
stos
jbe
insb
test
in
std
leave
repz
push
add
dec
jo
mov
lahf
ret
repz
adc
cmc
inc
adc
inc
data16
cwtl
mov
xchg
mov
test
push
ds
pop
cmp
pop
out
nop
mov
mov
mov
fwait
loop
adc
add
mov
mov
fadds
cmpsl
pop
neg
sti
outsb
add
sub
mov
orl
inc
aam
mov
pop
daa
hlt
xlat
outsb
es
out
jnp
cmc
mov
add
int
adc
pop
in
xor
push
inc
inc
xlat
jb
dec
out
xchg
pop
cmc
les
jl
pop
in
and
cmp
inc
push
mov
pop
mov
jl
xor
mov
add
mov
and
or
aas
or
dec
in
sub
pop
jge
add
rorb
xor
and
aas
push
and
pop
test
lret
cld
enter
sbb
adc
mov
sarl
repnz
pop
cmc
inc
adc
inc
gs
xchg
mov
xchg
mov
test
push
cmp
pop
xlat
outsb
nop
pop
out
mov
mov
mov
fwait
loope
adc
xor
push
xor
xchg
test
pop
not
cli
outsb
add
sub
and
mov
mov
pop
repz
outsb
and
inc
cmc
mov
add
int3
cltd
adc
push
in
xor
sbb
ds
out
xchg
pop
cmc
ret
nop
insl
add
in
adc
in
and
cmp
inc
imul
insl
adc
in
adc
hlt
mov
lcall
and
or
aas
pop
sub
pop
sub
pop
jl
add
iret
mov
add
cltd
xor
and
dec
push
jbe
pop
test
aad
cmpsb
leave
in
sti
repz
sbb
lcall
and
popf
sarb
icebp
mov
pop
cmc
inc
adc
inc
fs
xchg
arpl
xor
mov
inc
call
or
pop
cmp
outsb
pop
out
mov
add
loopne
adc
xor
and
xchg
fadds
pop
not
stc
outsb
add
sub
and
fwait
xor
stos
inc
rcrb
enter
xlat
outsb
and
out
jns
cmc
mov
add
lret
cwtl
adc
sbb
aas
inc
xlat
jo
dec
out
xchg
pop
cmc
ret
add
jecxz
adc
aaa
lcall
mov
pop
mov
fucom
jl
xor
mov
add
mov
and
pop
aad
push
sub
pop
daa
pop
hlt
pop
jnp
add
into
mov
add
cltd
xor
and
dec
push
je
pop
cmpsb
jae
insl
movsl
in
stc
hlt
mov
sbb
lcall
and
pushf
mov
dec
out
adc
inc
movd
xchg
bound
out
stos
inc
out
mov
pusha
cmp
outsb
lea
jle
scas
cmc
mov
scas
add
stos
xor
and
xor
leave
test
flds
movsb
pusha
not
imull
sub
jle
sub
and
pushf
xor
inc
rcrb
enter
fsubrs
inc
out
ja
testb
xchg
adc
enter
sbb
xor
sbb
push
out
pop
cmc
rorb
adc
loop
and
stos
inc
mov
mov
pop
mov
fsub
jge
das
hlt
mov
add
pusha
adcb
mov
and
add
daa
dec
in
es
cmc
push
jns
add
int3
mov
dec
lcall
push
mov
pop
movsb
jno
outsb
mov
cmc
mov
sbb
dec
pop
adc
dec
push
mov
lcall
out
push
pop
idivb
or
jge
xchg
pusha
lea
mov
xor
mov
inc
in
mov
popa
cmp
outsl
mov
jg
lods
testb
call
xor
and
xor
leave
adcl
andb
aam
outsb
add
sub
and
xor
stos
inc
iret
pushf
mov
pop
and
fsubrs
inc
out
jbe
testb
xchg
adc
jmp
xor
sbb
xlat
insl
cmp
insb
mov
mov
loopne
adc
loope
and
xor
xor
stos
inc
xchg
pop
mov
jge
cs
mov
add
pop
adcl
mov
add
inc
xlat
add
dec
in
and
insb
add
lret
mov
std
lret
cld
push
test
push
dec
jno
pop
mov
in
test
mov
pop
add
dec
push
adc
inc
imul
leave
cltd
mov
push
out
or
outsl
push
ds
jge
xchg
pop
lea
mov
xor
mov
inc
in
mov
popa
aaa
pop
fsubrs
pop
call
adc
das
and
das
push
xor
adcb
andl
outsb
add
daa
dec
mov
jnp
pushf
xor
stos
inc
into
fwait
mov
pop
and
fsubrs
inc
out
jne
testb
xchg
adc
call
xor
sbb
inc
xlat
insb
cmp
imul
add
adc
mov
adc
lcall
xchg
pop
mov
jge
sub
add
pop
adcb
mov
and
add
inc
xlat
add
pop
cmc
push
ja
add
lret
cld
leave
lcall
sbb
push
dec
jo
pop
mov
ret
in
cmc
ret
hlt
push
add
inc
adc
and
cwtl
mov
push
out
or
idivb
pop
jge
nop
pop
lea
mov
xor
mov
inc
jecxz
mov
popa
ss
fsubrs
push
call
fsubrl
adc
cs
and
cs
xor
orl
out
mov
outsb
add
es
mov
jp
pushf
xor
stos
inc
int
mov
pop
and
fsubrs
inc
out
je
testb
xchg
adc
mov
sbb
inc
xlat
imul
out
mov
mov
fidivrs
fisttps
xor
dec
mov
enter
insl
or
out
or
mov
add
pop
jg
test
scas
shll
movl
and
in
and
push
jbe
add
leave
mov
sti
enter
sbb
inc
dec
sbb
pop
mov
ret
hlt
shl
repz
adc
inc
and
xor
xchg
mov
push
out
or
cmp
outsl
push
cmp
jge
pop
lea
mov
xor
mov
inc
loop
mov
popa
xor
push
call
fldt
adc
sub
dec
xor
orb
jg
push
out
mov
outsb
add
and
inc
pushf
xor
stos
inc
int3
cltd
mov
pop
pop
in
fsubrs
inc
out
jae
testb
xchg
adc
out
mov
pop
cmp
push
push
out
mov
mov
fnstsw
fimuls
arpl
stos
inc
arpl
pop
mov
insl
or
out
or
hlt
mov
add
pop
jle
test
scas
shlb
movl
and
push
and
push
jne
add
enter
lcall
sbb
pop
mov
shl
repz
repnz
fwait
inc
adc
inc
data16
xchg
mov
push
out
or
cmp
outsl
push
cmp
mov
mov
stos
inc
loope
mov
popa
xor
fsubrs
push
call
fisubrl
adc
sub
and
sub
xor
jg
inc
fnstcw
push
out
lahf
pusha
not
repnz
add
and
mov
js
pushf
xor
stos
inc
lret
cwtl
mov
pop
push
in
fsubrs
inc
out
jb
testb
xchg
adc
ret
in
mov
push
cmp
imul
pop
cmc
mov
fdivrl
fisttpll
bound
stos
inc
bound
enter
insl
or
out
or
hlt
mov
fwait
pop
jge
test
lods
iret
xor
add
inc
xlat
add
dec
in
and
push
je
add
mov
stc
lcall
sbb
pop
lahf
insb
xlat
outsb
sahf
shl
repnz
add
inc
adc
inc
and
xchg
mov
xlat
call
or
cmp
outsl
push
cmp
adc
pop
lea
scas
stos
inc
loopne
mov
popa
xor
xchg
xchg
push
popf
fdivr
adc
sub
and
sub
leave
jle
inc
fnstcw
push
out
sahf
pusha
test
icebp
jle
and
and
pushf
xor
stos
inc
lret
push
leave
jmp
pop
sbb
aas
out
jno
testb
xchg
adc
ret
mov
adc
ss
out
mov
mov
fstpt
fmull
popa
das
stos
inc
popa
cmpb
mov
insl
pop
out
or
hlt
mov
add
pop
jl
test
lods
into
xor
dec
inc
xlat
and
push
pop
pop
notb
insl
add
jno
adc
lds
xor
sbb
push
dec
imul
popf
push
outsl
pushf
mov
testb
adc
mov
xchg
mov
fsub
mov
call
cmp
jo
cmp
adc
mov
inc
fdivrp
mov
bound
push
fsubrs
push
jmp
xlat
cmpsb
pop
sahf
xlat
clc
adc
sub
and
leave
jl
inc
fidivrl
out
popf
popa
clc
into
out
outsb
add
and
and
popf
xor
xchg
stos
inc
enter
enter
sbb
fnstenv
cmp
testl
shl
mov
adc
inc
xlat
xor
xchg
mov
fnstcw
fisttpl
xor
stos
inc
pusha
cmpb
mov
insl
add
daa
hlt
mov
add
test
stos
int3
xor
std
int3
inc
fdivr
push
dec
out
push
pusha
testl
jle
mov
ret
pushf
xor
push
stos
inc
dec
push
mov
pop
fwait
imul
jge
mov
add
lret
xchg
mov
or
dec
andl
fs
sbb
fs
hlt
movsl
jecxz
inc
or
xchg
mov
icebp
cltd
mov
lock
mov
in
sbb
scas
fidivrl
inc
test
test
ds
adcb
or
ret
clc
cmpsl
outsb
pop
sub
pusha
les
xlat
push
test
dec
push
fdivrp
push
add
insb
pusha
push
shll
in
jp
add
pop
jmp
mov
xchg
gs
ror
xchg
mov
pop
push
add
pop
xchg
fcomps
lods
sub
ss
xor
out
xchg
mov
dec
xchg
imul
ffreep
xchg
mov
xchg
sbb
mov
mov
adc
xchg
and
dec
adc
mov
and
pop
fildll
out
insl
cld
add
test
or
sbb
add
jo
pop
mov
dec
push
mov
scas
icebp
dec
rorl
mov
int3
mov
mov
adc
das
idiv
add
ds
rclb
andb
mov
arpl
dec
fstpt
pop
dec
ja
hlt
jle
insb
and
sbb
or
ret
aas
xchg
mov
mov
stc
add
push
jle
pusha
sub
mov
repnz
push
mov
lods
in
inc
cmp
mov
push
jle
adc
pop
sti
push
cmp
jl
addr16
pop
fs
icebp
inc
js
cmpl
lret
xchg
pop
int3
mov
stos
mov
je
add
dec
in
adc
mov
adc
frstor
adc
in
leave
push
lock
movsl
mov
jle
xchg
mov
or
test
in
subb
push
sub
inc
mov
push
mov
jg
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
and
add
add
and
fs
add
add
mov
mov
iret
mov
in
cmp
pop
mov
jns
xchg
pushf
out
inc
out
pop
adc
cmp
and
cld
ja
test
mov
loope
xor
jns
xchg
mov
cli
mov
cli
arpl
mov
daa
and
fnstenv
movsl
mov
xorl
imul
mov
mov
cmp
dec
lds
in
aad
and
or
mov
adc
pushf
in
mov
sub
subb
std
nop
cmp
mov
or
idiv
pop
dec
mov
dec
ss
out
cmp
je
stos
ljmp
xor
loopne
mov
jmp
sub
stos
inc
mov
or
in
mov
sbb
shl
jl
xor
xorl
jo
pop
mov
jne
xor
mov
or
or
xchg
jle
push
mov
cmc
and
push
jae
jg
adc
sub
dec
inc
adc
xor
into
popf
jbe
int
push
inc
jne
enter
nop
add
jmp
and
je
push
cwtl
popf
jle
inc
inc
ds
add
lret
and
ret
push
sbb
dec
push
dec
mov
jb
shrb
fs
popf
sub
cmpsb
lret
mov
in
sbb
adc
adc
std
shlb
pop
sub
dec
sbb
in
dec
pop
sbb
push
imul
cmp
xchg
mov
inc
cmp
xchg
les
test
ja
inc
lret
incl
repz
cmp
cmpsl
cwtl
clc
cli
cwtl
cmpsl
xor
lock
repz
cmpsl
cmpsl
pop
sub
test
mov
mov
fsub
pop
jmp
mov
aad
or
stc
xor
int
loope
stc
adc
mov
imul
nop
push
jg
push
cli
xchg
imul
pop
xchg
shll
lahf
call
fcoml
jecxz
rcr
test
les
lea
arpl
add
dec
sub
or
test
or
xchg
icebp
fadds
arpl
lods
xchg
xchg
mov
leave
mov
ja
mov
jo
addb
jbe
pop
jne
lcall
mov
repnz
push
idiv
test
push
aam
cmp
jle
pop
outsb
or
dec
lret
jne
jle
lret
jp
adc
popa
xchg
jns
mov
ljmp
mov
iret
add
sbb
in
jecxz
test
out
out
inc
shr
cmp
call
shlb
aad
es
sbb
pop
lcall
jp
mov
sub
add
pop
inc
xchg
push
pop
add
inc
jg
inc
push
nop
xchg
inc
mov
fmull
enter
inc
mov
add
sub
in
mov
mov
aas
rorl
into
rolb
inc
sbbl
jl
fwait
decl
repz
fbstp
push
fcmovnbe
ror
imull
mov
clc
iret
cwtl
mov
rcrl
enter
cmpsl
or
mov
sbb
fisttpll
out
mov
loop
cmp
fsubl
dec
or
pop
mov
repz
js
cmp
pop
roll
es
movsl
das
shlb
lret
aas
shlb
or
push
xchg
ret
or
imulb
into
xchg
xchg
ljmp
inc
in
int
add
cmpsb
ss
sub
sub
pusha
mov
pushf
icebp
dec
int3
pushf
push
pop
je
mov
mov
mov
rorb
cmp
xor
mov
sub
lea
imul
lods
xor
mov
in
mov
cs
xor
adc
stos
stos
mov
xor
push
les
mov
jge
inc
push
sub
iret
shlb
jae,pn
lea
lret
add
mov
xor
xchg
xchg
lcall
mov
ja
mov
mov
xchg
pop
stos
jo
shll
and
aad
int3
aad
stos
fsub
test
adc
loope
mov
fildll
and
dec
lret
cltd
fs
fs
out
out
icebp
test
icebp
test
sbbl
movzwl
xchg
adc
bound
sbb
call
cmp
lcall
pop
jnp
iret
ljmp
fucomi
mov
push
out
dec
stos
daa
out
adc
adc
sub
lods
pop
adc
mov
xor
push
mov
or
mov
jp
pusha
dec
jae
and
xor
dec
cmp
aaa
cmp
push
pop
fistpl
mov
jle
mov
and
shll
lds
aad
stos
aad
inc
xor
push
add
push
pusha
or
mov
jmp
rol
fimuls
mov
incb
jmp
lret
adc
mov
sbb
or
or
test
mov
loope
xlat
repz
jle
sbb
add
insl
fisubrs
jne
cmp
out
cli
and
int
push
int
push
xchg
jmp
rclb
mov
shl
jb
adc
jb
divb
adc
test
push
inc
jb
lret
xor
add
dec
dec
in
add
test
popa
adc
in
lock
int
lret
stc
aaa
aad
push
lret
sub
inc
xchg
pop
push
jne
jbe
jbe
and
test
sbb
test
jp
push
incl
xorb
loopne
xchg
mov
mov
mov
out
add
dec
add
sbb
jl
arpl
jl
popf
adc
jo
stos
jle
sahf
sub
adc
mov
dec
mov
adc
mov
orb
icebp
xor
xorl
int3
pop
mov
pushl
mov
pop
pop
jge
mov
push
sbb
sar
ss
std
dec
icebp
mov
mov
arpl
add
push
push
imul
push
push
fcompl
imul
push
fcompl
insb
insl
sbb
push
pop
fcompl
insl
outsb
sbb
pop
pop
fcompl
outsb
stos
and
pop
pop
call
call
in
ja
ljmp
jecxz
ss
dec
stos
lahf
pop
and
ret
xchg
mov
rorb
scas
ret
jg
leave
