mov
popa
test
pop
loopne
ret
mov
outsl
je
dec
push
lods
in
in
adc
sbb
pop
leave
loope
das
shr
fucomip
push
std
pusha
pop
es
divl
neg
or
je
sbb
xchg
add
mov
pop
mov
int3
mov
das
iret
push
and
inc
adc
jg
js
sub
ja
rcrl
xor
mov
sahf
xor
in
mov
aam
cltd
popa
adc
push
dec
mov
jae
or
test
mov
negb
dec
cltd
ret
pop
mov
pop
or
xchg
xlat
call
xorl
jl
pop
jne,pt
daa
inc
jbe
rolb
popa
fdivs
xchg
in
adc
repz
lods
jno
adc
cltd
add
mov
pop
enter
adc
or
andl
adc
adc
jl
or
dec
push
jg
inc
mov
push
pop
xlat
add
shlb
loop
ret
scas
jl
enter
lods
inc
sahf
mov
cmc
inc
push
push
xchg
lds
in
rclb
jb
push
xchg
pop
jecxz
imul
sbb
xchg
jbe
jae
shl
in
or
pop
je
sti
in
or
dec
cltd
mov
mov
cwtl
add
mov
repz
cmc
inc
push
es
lahf
nop
fisttps
xorb
nop
in
jb
jae
push
jecxz
pop
setae
lods
jecxz
pop
jb
jae
ret
push
lods
pop
nop
push
xor
add
push
pop
and
sub
neg
lods
xor
mov
inc
inc
inc
inc
loop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
nop
nop
nop
nop
nop
nop
jmp
jmp
dec
gs
dec
push
inc
addr16
pop
popa
inc
js
ja
pop
pusha
pop
dec
push
dec
dec
dec
gs
dec
dec
push
pop
bound
jo
inc
pop
imul
add
push
dec
dec
inc
imul
je
imul
imul
dec
data16
pop
dec
dec
inc
insl
ja
outsl
push
inc
outsl
push
ja
add
jb
pop
dec
outsb
outsl
imul
dec
bound
insl
push
dec
dec
inc
imul
jae
jae
dec
push
pop
jns
jno
inc
bound
insl
outsl
je
insb
inc
jo
push
push
jno
pop
gs
dec
pop
push
add
pop
jne
push
push
pop
inc
push
jbe
dec
inc
gs
pop
je
gs
inc
push
jns
push
inc
fs
inc
dec
jbe
inc
bound
jns
pusha
inc
add
add
add
inc
popa
imul
pop
pop
insb
push
pop
pop
dec
jns
inc
dec
dec
push
fs
jb
inc
push
imul
insl
dec
inc
js
popa
js
push
outsb
fs
push
dec
pop
data16
push
dec
pop
pop
inc
dec
jbe
pop
push
pop
jno
gs
push
pop
pop
add
popa
pop
imul
push
jne
push
push
dec
dec
dec
jno
dec
inc
imul
pop
dec
outsb
push
pop
push
dec
pop
dec
dec
push
add
inc
dec
jbe
push
fs
jae
imul
fs
push
je
add
add
pop
insl
push
popa
jns
push
outsw
insb
fs
js
inc
insb
inc
pop
jae
dec
dec
inc
data16
add
add
dec
push
push
imul
inc
add
add
bound
dec
fs
push
push
outsl
dec
outsl
jne
inc
push
push
jns
jne
js
popa
inc
dec
dec
push
inc
je
inc
inc
dec
outsb
dec
jb
dec
je
insl
outsl
push
add
dec
pop
push
jb
jno
pop
jbe
jo
dec
pop
jb
inc
inc
dec
pop
inc
push
jb
push
arpl
jo
dec
inc
pop
pop
addr16
popa
fs
push
popa
push
insb
bound
add
add
addr16
dec
imul
pop
push
push
push
add
add
dec
inc
pop
insb
inc
inc
gs
pop
push
dec
push
imul
fs
add
inc
jns
imul
jne
dec
addr16
dec
pop
imul
add
add
outsb
jo
dec
pop
pop
dec
arpl
popa
je
push
add
dec
jo
bound
js
inc
outsb
je
add
outsl
jbe
js
imul
dec
jae
pop
pusha
dec
inc
gs
jo
dec
inc
inc
dec
push
push
pop
insl
fs
pop
add
add
add
dec
fs
inc
jae
outsb
jo
pop
dec
pop
insb
pop
bound
push
push
js
dec
inc
push
pop
insl
ja
outsb
addr16
add
dec
pop
dec
dec
addr16
pop
addr16
je
dec
jo
push
pop
pop
inc
push
dec
dec
pop
inc
push
pusha
dec
pop
imul
pop
jb
je
push
jns
bound
dec
push
inc
inc
arpl
inc
push
je
inc
push
jb
jno
addr16
addr16
ja
jbe
jns
add
outsb
push
imul
inc
push
addr16
pop
inc
inc
dec
inc
dec
inc
inc
fs
popa
imul
jns
inc
dec
inc
insl
jae
jae
dec
dec
push
pop
add
add
jns
popa
push
gs
jbe
outsl
dec
jb
pop
pop
push
dec
dec
add
add
add
addr16
push
jno
push
data16
push
push
imul
addr16
je
pop
addr16
jo
outsl
dec
pop
dec
arpl
push
inc
push
add
push
add
jb
push
inc
dec
pop
popa
insb
arpl
dec
pop
pop
dec
addr16
push
dec
ja
je
add
jne
push
dec
jae
push
insl
data16
add
jne
pop
inc
pop
pop
inc
push
data16
push
pop
push
dec
imul
outsb
jo
push
inc
pop
dec
gs
push
jae
inc
dec
push
push
inc
pop
inc
inc
pop
inc
add
inc
inc
js
push
dec
push
inc
outsl
je
gs
inc
push
dec
push
dec
push
dec
jb
jae
pop
outsb
dec
pusha
push
bound
inc
add
push
dec
insl
pop
push
push
pop
pop
push
dec
inc
insl
pusha
arpl
push
push
push
fs
add
imul
insl
jbe
dec
pop
pop
jns
dec
inc
pop
insl
dec
arpl
dec
popa
bound
add
add
arpl
push
dec
add
dec
dec
push
pop
popaw
gs
add
push
jae
imul
jo
jo
push
add
pop
jno
inc
addr16
push
dec
inc
inc
insl
dec
addr16
pusha
jae
dec
push
inc
inc
push
push
dec
arpl
dec
imul
pop
dec
inc
pop
dec
inc
bound
js
push
inc
dec
pop
outsb
pop
arpl
push
dec
imul
pushw
addr16
pop
push
pop
jne
dec
inc
arpl
add
add
je
pop
pop
push
pop
dec
push
pop
push
pop
jne
add
inc
fs
pop
push
arpl
js
jae
push
dec
pop
push
dec
imul
dec
pop
inc
insl
pop
inc
jne
outsb
inc
push
js
ja
bound
add
jae
outsb
push
push
push
push
jns
dec
addr16
push
inc
jae
dec
jne
pop
pop
push
pusha
inc
pop
inc
imul
popa
dec
dec
outsl
inc
popa
pop
dec
push
add
gs
ja
fs
gs
js
ja
je
push
dec
pop
push
addr16
ja
inc
jb
pop
jo
push
dec
addr16
ja
jns
push
inc
pop
imul
add
popaw
add
dec
pusha
jbe
pop
imul
arpl
dec
push
pop
push
push
push
pop
insl
jbe
inc
inc
push
inc
inc
pusha
pop
pop
inc
push
add
add
dec
pop
jno
push
add
add
addr16
push
imul
dec
push
je
imul
jo
push
push
jbe
jb
dec
dec
inc
dec
add
dec
dec
jno
pop
imul
push
pop
pop
inc
push
pop
push
push
push
push
push
inc
push
dec
imul
jo
add
dec
pop
jb
outsl
ja
push
insb
push
insb
pop
push
pop
pop
push
bound
dec
arpl
bound
pop
popa
push
pop
dec
jae
dec
jae
outsl
addr16
dec
outsb
je
push
push
push
jno
insl
add
add
push
jb
pop
dec
dec
fs
inc
inc
push
inc
dec
addr16
inc
push
inc
dec
fs
pop
pop
pop
jae
pop
push
inc
inc
inc
inc
dec
imul
jno
push
push
popa
push
dec
add
add
pusha
pop
dec
jne
popa
dec
push
push
add
pop
push
pop
imul
pop
imul
inc
dec
push
add
add
inc
inc
pop
dec
insb
inc
jbe
push
imul
push
add
add
dec
ja
dec
push
dec
fs
jb
bound
jae
fs
arpl
jbe
pop
push
push
pop
outsb
ja
pusha
push
add
popa
jns
popa
insb
pop
jns
dec
pop
addr16
jo
inc
pop
pop
add
push
fs
pusha
dec
dec
gs
push
jb
pop
inc
pusha
inc
pop
gs
inc
push
imul
dec
je
push
push
inc
dec
inc
insl
pop
inc
arpl
add
add
jb
push
jno
insb
arpl
pop
pop
insl
inc
dec
inc
inc
pop
pop
push
inc
dec
inc
push
push
dec
inc
push
jb
push
jo
ja
dec
inc
outsl
gs
insb
push
dec
jne
push
arpl
inc
pusha
inc
inc
inc
push
pop
pusha
push
arpl
pop
push
pop
je
ja
jne
pop
add
aam
add
scas
sub
add
push
das
add
mov
das
add
sub
add
sub
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
inc
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
add
hlt
sub
add
adc
add
add
add
hlt
sub
add
adc
inc
fs
je
insl
inc
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
cwtl
add
movsb
add
lods
add
mov
add
int3
add
fsubrl
add
lock
add
add
adc
add
push
das
add
xor
add
inc
das
add
add
add
cwtl
add
movsb
add
lods
add
mov
add
int3
add
fsubrl
add
lock
add
add
adc
add
push
das
add
xor
add
inc
das
pop
imul
insl
add
add
js
je
add
pop
pop
arpl
inc
imul
gs
je
add
add
arpl
insb
outsb
add
add
addr16
popa
imul
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
add
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
add
pop
pop
jo
pop
insw
outsl
fs
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
pop
gs
gs
pop
push
gs
add
add
pop
arpl
je
outsl
insb
data16
add
add
add
add
add
add
add
add
add
outsl
jb
add
or
fidivl
popa
inc
jbe
shlb
adc
insb
int
pushf
les
xorl
mov
xchg
lods
lea
mov
add
lea
call
jae
int
pop
mov
mov
jle
out
scas
cmpl
add
cltd
add
add
ja
xchg
ret
jae
gs
jle
mov
fwait
mov
shrb
dec
call
lds
in
inc
in
xchg
mov
or
jb
dec
cmp
sub
jae
jnp
add
mov
and
inc
lods
cmp
in
adc
mov
sub
mov
bound
cli
add
scas
pop
xor
xor
adc
or
sbb
cmc
in
adc
sbb
test
or
mov
mov
or
or
inc
mov
ss
movsl
ljmp
cmp
cmc
jl
mov
sbb
jg
cmp
push
in
xchg
add
push
ret
dec
out
or
adc
push
xor
xchg
inc
and
jl
shll
mov
mov
xor
outsl
cmp
aam
fnstcw
dec
pop
jo
mov
negl
lods
out
ss
mov
je,pn
fldt
push
repnz
test
subl
dec
jg
xor
lea
sub
jbe
and
pop
movsb
aaa
hlt
inc
push
imul
add
push
lea
addr16
fdivrl
push
sub
int
pusha
adc
push
add
ret
sbb
mov
xchg
jno
sub
mov
xchg
fs
orb
mov
addr16
jno
mov
das
in
ss
je
lds
outsl
jo
cltd
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
jle
inc
in
jl
dec
clc
movsl
dec
cmp
imul
push
ss
lods
inc
adc
jo
dec
gs
in
les
xor
insb
dec
lods
ror
loop
xchg
add
loopne
leave
andl
popf
push
mov
sbb
jg
cmp
jo
inc
in
mov
test
ljmp
orl
ja
mul
or
mov
push
fdivr
ja
in
jl
mov
not
adc
xlat
addr16
jg
adc
push
in
xchg
jo
dec
lret
lds
push
shll
sub
sbb
adc
icebp
jge
bound
push
movsb
xor
iret
or
jne
mov
lcall
jl
or
popl
je
jle
jae
sbb
cmp
scas
out
jl
add
ja
sbb
fidivl
add
sub
inc
lret
inc
cwtl
jle
push
fnstenv
in
xchg
insb
lcall
or
cltd
je
inc
shl
sub
pop
jns
jmp
or
dec
aas
in
inc
in
xlat
jb
test
sub
fadd
pop
cmpl
sub
inc
jnp
mov
adc
out
sub
dec
negb
cmp
mov
and
push
xor
inc
in
mov
adc
fidivl
iret
adc
pop
sbb
sub
out
lret
mov
mov
jae
inc
lahf
sbb
jne
inc
fisubrs
adc
add
jl
pop
fidivl
adc
mov
sbb
insb
mov
sbb
mov
add
sbb
sub
orl
push
in
push
push
jecxz
dec
cmp
cltd
adc
jae
fcomi
jge
add
jmp
cmpb
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
mov
pushl
push
cltd
push
and
jl
call
mov
mov
out
cmp
mov
mov
adc
outsb
pop
cmp
test
imul
adc
mov
inc
xor
mov
ja
pop
rcrb
in
jl
add
mov
push
sub
sbbl
sbb
xchg
ja
and
repnz
ret
int3
icebp
cwtl
repz
inc
getsec
cwtl
add
jb
inc
in
jl
add
adc
inc
in
xor
pop
ja
adc
xor
jg
inc
loope
pop
xchg
push
lcall
inc
push
add
cmp
pop
test
js
dec
jne
pushf
ret
mov
fmuls
jge
pusha
icebp
ja
dec
jbe
sbb
pop
xlat
dec
scas
jae
push
xchg
pushf
xor
lcall
lds
out
jmp
je
or
int3
jbe
inc
call
enter
hlt
pop
aad
cwtl
cmp
sti
xchg
sub
mov
push
mov
enter
mov
add
mov
shl
test
pop
cmc
pop
adc
push
push
add
test
add
popa
pop
bound
xor
mov
mov
outsb
into
cmp
pop
stos
cli
xchg
push
jl
cmp
loop
fs
inc
dec
pusha
sbb
insb
mov
dec
cld
mov
adc
push
inc
in
in
fs
jp
bound
dec
xchg
push
push
or
adc
push
sarb
fisubrs
std
xchg
dec
test
add
push
or
cmp
or
shr
push
ja
push
clc
pop
mov
incb
mov
mov
stos
fucom
es
test
daa
movsb
ss
dec
bound
les
push
sbb
lock
inc
roll
sub
cs
adc
bound
inc
xchg
sub
mov
data16
cli
mov
dec
pop
ljmp
clc
gs
sbb
loop
mov
aad
jp
mov
lcall
enter
dec
cmc
into
ss
bound
jp
nop
mov
into
sub
rorl
cli
cmp
rclb
frstor
sahf
pop
std
inc
push
lcall
in
loop
idivb
fwait
call
pop
sub
cli
fs
fadd
sbb
mov
cwtl
sbb
jne
dec
xor
inc
shll
nop
adc
rol
dec
in
push
push
xchg
pop
testl
mov
push
sbb
jns
or
push
push
inc
pop
cmovs
cwtl
mov
aad
push
jbe
mov
sbb
dec
adc
es
push
outsb
xor
xlat
outsb
pop
out
inc
mov
gs
push
mov
mov
shrl
fnsave
insl
cli
add
lods
jp
push
mov
rorl
loop
negb
sahf
xchg
sub
pop
outsb
cmp
cmp
inc
loopne
gs
je
sub
add
xchg
push
dec
add
adc
daa
enter
or
clc
gs
or
or
fs
into
in
mov
and
mov
jle
adc
cli
inc
push
dec
pop
or
loop
fs
pop
pop
enter
push
in
push
fs
arpl
ret
popf
in
mov
mov
incb
popa
inc
test
mov
popa
jp
stos
or
cmp
jp
sbb
gs
fs
cli
and
aas
xchg
dec
push
xchg
rolb
aaa
mov
mov
pop
pushf
inc
leave
jo
sub
fstpl
call
add
sub
es
fisttps
push
mov
popa
push
enter
arpl
scas
dec
xchg
in
mov
cli
and
xor
sbb
sub
in
mov
gs
lds
dec
adc
insb
xchg
mov
pop
inc
ss
adc
jo
sbb
mov
inc
mov
lods
hlt
out
push
mov
fwait
and
mov
inc
int
mov
test
fidivl
xor
ficomps
add
mov
into
dec
mov
das
mov
es
test
or
jns
or
jbe
inc
cltd
inc
fwait
xor
add
xor
dec
fisubl
mov
push
xlat
int3
inc
mov
ret
pop
xchg
mov
in
sbb
bound
jl
imul
daa
sbb
adc
adcb
sbb
push
pop
nop
push
inc
or
jae
and
xor
dec
leave
jb
adc
loopne
loope
pushf
loopne
lea
push
in
out
or
gs
xorb
sbb
int3
mov
or
inc
sbb
adc
call
mov
xlat
jns
fcompl
and
test
cmpsb
sbb
jecxz
fdivrl
xchg
push
scas
inc
clc
xchg
lods
and
adc
scas
das
pushf
aad
ret
mov
ss
xor
jb
mov
dec
and
test
dec
sbb
fsubl
pop
add
flds
call
test
and
das
sbbb
ds
dec
mov
cli
dec
mov
ds
mov
rclb
cmp
inc
aam
lock
int3
test
pop
popa
cltd
xor
sbb
fwait
shl
mov
mov
mov
push
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
andb
shrl
pop
sub
push
push
lahf
sti
adc
sti
into
jne
js
dec
lahf
loop
fs
sub
icebp
jmp
jecxz
xor
in
sarl
into
shrb
gs
jge
into
ljmp
insl
in
paddd
movsb
sbb
mov
int3
scas
stc
add
xor
push
subb
hlt
outsb
adc
in
and
or
cmc
inc
add
xchg
pop
sbb
xor
lret
adc
inc
or
push
adc
in
pop
xor
bound
lret
imul
mov
jns
cmp
xchg
ds
add
mov
in
mov
or
fstpt
cmc
add
xchg
rcrb
std
sbb
mov
cmp
mov
es
xchg
dec
or
xor
mov
jmp
mov
push
jge
sbb
shll
mov
shll
std
lret
cltd
inc
inc
arpl
negl
mov
mov
pop
or
cmp
or
mov
sbb
adc
fcmovu
and
rorl
out
dec
adc
pusha
add
mov
stos
das
clc
dec
and
pop
loop
sbb
fsubrs
xchg
jmp
popf
jle
adcl
mov
jge
dec
lock
adc
pop
mov
cmp
push
hlt
add
ljmp
push
cmp
xor
or
push
add
mov
fistpl
mov
shll
and
xchg
mov
fsubl
int
sbb
push
mov
mov
mov
cld
and
adc
add
fucom
and
cmp
imul
cmp
push
or
ficoms
cmp
mov
std
leave
pop
fs
bound
dec
ljmp
sbb
mov
and
test
fmuls
dec
mov
adc
mov
xor
jne
lret
dec
gs
push
es
jle
ljmp
xchg
std
fldl
pop
sti
cmp
stos
in
movsb
lret
and
fisubs
bound
cmc
push
xchg
pop
or
cltd
mov
aad
and
fldl
loop
add
bound
les
and
outsl
mov
adc
hlt
test
in
mov
sbb
and
aas
repz
or
mov
push
jne
or
bound
adc
sti
std
inc
mov
into
enter
pop
bound
adc
xor
enter
mov
outsb
enter
bound
std
push
jbe
insb
xchg
lret
sbb
sarl
xchg
shlb
mov
pop
insl
shlb
lret
push
push
jmp
mov
jge
jo
bound
push
sub
xchg
bound
jl
fmull
xchg
sbb
lds
in
add
cmp
cs
ss
js
push
pop
dec
in
and
ds
cld
aam
add
push
inc
xor
and
xchg
xor
daa
adc
fildll
mov
iret
leave
hlt
clc
cld
loope
sub
push
cwtl
mov
out
cltd
bound
xchg
pushf
loopne
adc
push
jne
std
lods
mov
cltd
and
insl
loop
dec
arpl
push
add
enter
mov
push
add
stos
fmul
xchg
into
cmp
adc
bound
xchg
lret
shll
test
jp
cmpl
fists
lcall
mov
adc
fnsave
xor
ror
fcmove
or
push
ret
inc
mov
adc
push
xor
int
int3
fldt
xor
ljmp
lret
mov
ror
js
lock
mov
mov
dec
mov
add
dec
mov
icebp
mov
stos
js
mov
subb
jmp
movsl
jns
test
mov
jb
mov
dec
pop
into
inc
mov
jmp
pop
in
scas
enter
mov
jge
in
cmp
push
fcmovu
movsl
out
aaa
inc
sub
push
jae
outsb
adc
xchg
shr
cmp
pop
sub
arpl
aas
sbb
jne
push
or
push
fcmovnb
fidivrl
data16
cmp
mov
cmp
xor
in
push
popf
mov
outsb
pusha
pop
addr16
cmp
inc
push
cmp
jg
mov
leave
ljmp
lahf
sub
xor
jbe
add
cmp
cltd
pop
stos
xchg
fs
jl
or
push
fucompp
jecxz
jnp
outsl
pop
mov
loope
cs
mov
rcr
add
jge
inc
inc
adc
test
mov
xchg
iret
xchg
inc
bound
pop
add
adc
aam
enter
popf
sbb
add
push
xchg
dec
sarb
fcmovbe
mov
mov
pop
pop
cmp
or
out
jp
out
movsl
mov
sbb
inc
sbb
in
ljmp
xor
lea
xchg
mov
jo
stos
sub
jl
adc
pop
push
and
cltd
icebp
push
xchg
xchg
std
lods
in
das
add
cmp
gs
sbb
fcmovb
cmpsl
mov
aaa
arpl
fsincos
fisttpll
in
shll
bswap
xor
add
in
push
inc
das
add
pop
add
arpl
fisubrl
ret
cltd
mov
sub
add
or
or
or
or
or
or
in
inc
leave
xchg
popf
pop
loopne
add
pop
or
cmp
mov
and
inc
test
cmp
adc
imul
sbb
cmp
loope
pop
jl
push
mov
shlb
pop
push
pop
push
add
push
jae
jae
and
jmp
push
stc
xor
add
dec
movsb
or
pop
roll
dec
faddl
sahf
jg
inc
fstpl
push
push
jae
nop
jmp
dec
fxch
add
jp
mov
cltd
push
xchg
push
and
insl
and
insl
nop
jl
pop
mov
in
sub
jmp
movsl
adc
in
inc
add
daa
jle
mov
mov
pop
or
and
sbb
cltd
scas
pop
shll
xchg
in
in
jecxz
inc
xor
pop
push
and
jp
pop
clc
lcall
and
fsubl
js
or
add
stc
jae
xor
mov
cs
cmp
cmp
cmp
push
mov
popf
pop
xor
mov
cmp
mov
mov
aam
jge
jp
imul
push
movsb
test
dec
fldenv
sub
or
fxch
add
sub
xor
pushl
mov
jb
mov
xor
cmpsb
xor
jl
lahf
adc
fstl
rolb
add
shlb
xor
test
into
orl
cld
shl
notl
pop
or
aas
ficompl
aam
fisubrl
cmp
mov
xchg
mov
and
aaa
sti
ret
mov
inc
insb
jle
or
xchg
add
inc
clc
in
shlb
test
adc
repz
lret
scas
in
insb
and
jae
neg
mov
cmp
aad
or
or
or
or
or
or
or
or
call
jno
dec
lods
xor
out
dec
mov
mov
xor
mov
mov
iret
cmpsl
mov
sub
fbld
sub
cwtl
mov
das
iret
cmpl
push
mov
and
mov
and
pop
jno
mov
cmpsb
sub
mov
subb
aad
pop
repz
push
repz
mov
push
repz
cmp
cld
xchg
stos
dec
repnz
mov
adc
bound
xchg
adc
add
xchg
adc
pop
and
pusha
sbb
lahf
adc
mov
adc
inc
and
pusha
push
and
pusha
outsl
and
pusha
arpl
mov
out
fstl
bound
dec
cmp
sub
int3
fdivs
adc
adc
popa
xor
push
pop
jecxz
lods
movsb
in
out
in
adc
cli
jl
pop
sub
cmc
test
ja
aaa
shll
test
daa
push
fnstcw
in
cwtl
cmp
sbb
iret
xlat
jae
mov
dec
int3
fs
popa
mov
and
bound
lock
pushl
and
push
mov
xchg
lock
mov
fs
rcrb
add
push
test
clc
in
rcrb
sahf
add
mov
xchg
jnp
cmp
insb
mov
add
sbb
xchg
lea
shrd
sbb
outsb
shlb
push
js
js
loopne
dec
add
dec
jle
nop
cmp
bound
push
cmp
cmp
dec
cmp
cmp
jo
sbb
lods
sbb
cltd
pop
scas
sbb
mov
sub
sub
pop
mov
xlat
sub
sub
pop
mov
hlt
or
sub
pop
mov
fsubrs
icebp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
roll
in
aaa
subb
push
mov
subl
insb
sub
inc
in
adc
sub
and
sbb
iret
sub
push
sahf
sbb
mov
cwtl
sbb
mov
push
movsb
sbb
cmpsb
sbb
call
sbb
stos
sbb
in
sub
push
mov
mov
sbb
or
pop
push
xor
add
js
cvtps2pi
int
pop
jl
comiss
iret
add
decb
sub
leave
add
cld
movntps
lret
add
repnz
cmp
add
lock
cmp
add
testb
cmp
add
hlt
mov
ret
add
ljmp
jl
cmp
add
out
cmp
add
in
cmp
add
loop
xor
pop
loopne
nop
cmp
push
cmp
invd
cmp
cmp
cmp
push
cmp
cmp
lar
mov
nopl
mov
nopl
mov
or
pusha
push
sti
icebp
adc
push
sti
cmc
sbb
push
sti
stc
sbb
pop
sti
std
sbb
jbe
mov
jle
or
je
mov
jp
mov
mov
addr16
lea
addr16
cli
loope
xorb
dec
mov
icebp
adc
arpl
adc
popa
mov
adc
popa
mov
adc
popa
mov
adc
popa
shlb
jl
adc
popa
ret
je
adc
or
and
adcl
and
adc
adc
or
and
adc
adc
or
and
movsb
jae
cmp
push
sarb
cmp
jnp
cltd
movsl
clts
imul
cmp
jp
cmp
jnp
cltd
xchg
shld
cmp
jp
cmp
jnp
cltd
test
add
hlt
sarl
cli
pop
adc
outsl
sahf
mov
xchg
lret
sahf
lea
xchg
stc
add
inc
xchg
jmp
push
imul
cmc
test
leave
lock
cld
ljmp
cld
sbb
mov
cld
dec
int
insl
clc
cld
sbb
iret
cmc
outsl
cmpps
leave
repz
idiv
adc
mov
jl
iret
repz
idiv
adc
std
cld
adc
jl
pop
pop
jo
scas
fs
cmp
push
orl
test
mov
test
clc
push
mov
lea
inc
movsl
imul
sub
ja
pop
mov
jne
pop
mov
dec
mov
mov
push
mov
push
push
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
je
push
clc
inc
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
dec
test
jnp
ds
jle
cmp
fldenv
test
stos
pxor
popf
jp
cmp
jl
mov
pslld
cltd
jl
test
or
repz
xor
push
leave
add
in
cmp
in
cmpsl
in
lcall
jecxz
xchg
das
les
xchg
icebp
push
mov
mov
mov
arpl
push
mov
mov
mov
jbe
arpl
out
lret
mov
arpl
jno
and
jecxz
pop
jno
and
loope
frstor
and
adc
or
or
or
or
or
or
or
or
or
or
or
or
adc
imul
and
adc
adc
popa
scas
and
adc
adc
popa
mov
fists
adc
cmpsl
and
mov
inc
cld
ds
js
inc
lods
sbb
js
inc
xchg
pop
dec
jmp
and
movsl
adc
js
jae
and
clc
or
test
repz
add
outsl
leave
xor
mov
pop
cld
leave
xor
mov
lret
add
cmp
arpl
and
outsb
jge
adc
cmp
or
in
mov
arpl
in
xchg
js
inc
xchg
ds
loope
or
aaa
xor
scas
sub
ljmp
dec
in
dec
shrb
in
shrb
push
enter
pushf
cmpsl
repnz
shlb
in
out
hlt
sbb
sub
dec
out
pop
cmp
sbb
sti
cmp
sub
bound
in
xor
gs
inc
pop
clc
arpl
pop
leave
insb
inc
inc
iret
pop
aaa
idiv
mov
or
hlt
je
mov
hlt
pop
cmpl
mov
pop
xorl
pop
and
enter
lock
lds
shrb
movsl
mov
pop
jecxz
nop
and
pop
push
and
pop
push
insl
xor
andl
mov
xchg
pop
dec
icebp
ret
mov
dec
icebp
movl
nop
xchg
nop
dec
cli
fsqrt
push
aaa
cmpsb
inc
pop
inc
clc
sbb
inc
clc
adc
test
cmp
int3
mov
cmp
jp
cmp
xchg
cli
xchg
repz
repz
test
hlt
xchg
xor
xor
cli
pop
aaa
insb
mov
arpl
adc
nop
mull
je
repnz
mov
in
push
hlt
push
arpl
cmp
dec
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
ds
clc
cmp
movswl
jb
cli
cmp
mov
lds
mov
dec
lock
aas
mov
outsl
mov
sub
inc
lcall
jg
das
mov
pop
inc
sub
ret
movsl
jns
push
jecxz
mov
mov
sar
cmp
jecxz
inc
xchg
aad
ss
jo
js
adc
dec
cld
popf
or
push
or
cmp
pushf
loope
mov
cmpsl
jecxz
mov
cmpsl
in
cmpsb
shlb
in
shrb
in
shrb
test
stos
shlb
shrb
in
shlb
in
shlb
nop
shlb
in
shlb
in
sarb
in
sarb
jb
in
jle
mov
vmread
cmp
loopne
jp
cmpsl
cmp
pcmpeqb
cmp
in
or
stos
push
js
ljmp
fucomi
ljmp
cmp
movsb
pop
cmp
mov
cmp
mov
cmp
mov
xor
mov
xor
mov
xor
mov
xor
mov
or
mov
or
mov
andl
mov
or
mov
add
mov
add
mov
add
mov
add
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
adc
mov
adc
mov
adc
mov
subl
mov
or
pushf
mov
subl
mov
pop
andl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
cmpl
mov
sbb
mov
movl
fs
mov
jmp
stos
cmp
out
mov
sbb
mov
adc
mov
adc
mov
adc
mov
adc
mov
subl
sub
cltd
mov
subl
mov
push
andl
and
xchg
mov
andl
mov
sub
mov
mov
cmpl
mov
sub
lea
movl
mov
xorl
mov
cmp
mov
orl
insl
dec
pop
sahf
movsl
repnz
cmp
fcomp
sub
mov
cmpsb
xor
mov
jnp
faddp
arpl
cmp
mov
pop
cld
lahf
in
orb
sub
lods
scas
sbb
insb
cld
lods
nop
cmp
sub
mov
sbb
popf
cmp
mov
mov
sbb
pop
mov
andl
adc
jle
pusha
and
push
mov
stc
pushw
inc
jbe
push
inc
mov
push
cmpsl
mov
xchg
dec
mov
js
gs
fnstcw
out
into
aad
stos
jno
inc
push
in
pop
je
inc
out
dec
cwtl
insl
adc
enter
mov
fcoml
or
sbb
orl
enter
call
add
das
adc
enter
movsb
sub
and
and
mov
out
sbb
jge
into
pop
std
sub
jge
stos
add
repz
xor
push
aas
loope
or
or
or
or
or
or
or
or
or
or
or
or
jge
jmp
push
jg
jmp
dec
popa
lahf
bound
mov
add
adc
movsb
push
or
cmc
add
clc
push
jno
cld
loop
sub
movsb
or
fmuls
insb
dec
fmulp
sub
popa
and
int3
shll
ret
test
sti
mov
bound
std
xchg
outsl
push
mov
pop
sbb
mov
adc
movsb
adc
mov
adc
es
sbb
in
xchg
sbb
add
or
enter
or
clc
or
adc
in
push
and
mov
jg
mov
mov
iret
cmp
and
pop
sbb
nop
push
cmp
out
cmc
cmp
cmp
push
or
cmp
lret
lcall
xchg
cwtl
jge
into
nop
std
pop
lret
adc
sbb
mov
repz
hlt
call
xor
pop
pop
shlb
iret
stos
xor
push
out
push
mov
and
jbe
ret
mov
dec
fdivrs
dec
loopne
xlat
jns
mov
mov
mov
dec
mov
ficoms
enter
daa
dec
scas
add
push
out
out
or
mov
push
inc
xor
nopl
rorl
in
adc
lret
adc
cwtl
nop
sbb
arpl
test
sbbl
insl
xor
js
popf
jae
or
popa
push
pop
mov
imul
push
mov
popa
cmc
addl
fwait
sbb
or
xchg
push
movsb
dec
jge
jmp
mov
xchg
jno
inc
pop
fs
cmp
outsl
jmp
stos
xor
sub
xor
jmp
xchg
ljmp
or
or
or
or
or
or
or
or
or
or
or
push
test
or
push
nop
outsb
add
xor
dec
out
add
clc
adc
cmp
xchg
adc
dec
mov
cltd
loopne
ret
add
mul
xor
add
daa
mov
out
mov
test
mov
jns
sarb
popa
fldenv
mov
pop
push
mov
loop
xchg
adc
nop
call
mov
jbe
mov
fwait
jo
popa
mov
fwait
imul
pop
jbe
inc
icebp
jne
sbb
jo
notl
add
push
imull
adc
mov
loopne
xor
cmp
jp
cwtl
pop
clc
and
adc
jmp
add
mov
pop
shll
or
stc
lock
aas
lods
xor
dec
scas
ret
adc
adc
repnz
outsb
mov
test
sbb
cmpsb
mov
inc
addr16
add
pop
xchg
jecxz
mov
mov
fcoms
daa
jle
inc
push
test
inc
mov
seto
xor
sbb
xor
inc
xchg
add
call
cwtl
mov
lods
xlat
hlt
dec
xchg
mov
iret
mov
ret
aas
cld
mov
mov
dec
outsb
mov
or
scas
call
sahf
or
inc
sub
in
or
mov
clc
repz
mov
mov
jmp
insb
stos
push
fs
push
fimuls
jno
mov
and
mov
inc
scas
cmp
push
sub
and
sub
adc
sbb
push
or
std
xor
negl
or
sub
lea
lds
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
in
loope
jmp
sbb
push
mov
aaa
hlt
pop
and
inc
pusha
and
dec
xor
mov
jnp
clc
adc
scas
fildll
mov
pop
adc
xlat
dec
inc
dec
push
xchg
adc
push
add
stc
add
sbb
ret
in
jo
xor
and
mov
push
or
test
enter
je
ss
add
add
rolb
in
test
jmp
das
loope
adc
xor
mov
lds
adc
push
pushf
mov
jns
add
sub
sub
loope
adc
push
sub
enter
aad
mov
outsb
pop
icebp
jo
cmp
mov
sbb
daa
fimull
pushf
cmp
nop
sub
ljmp
aaa
movl
push
push
in
fs
lods
add
cltd
sbb
test
jnp
imul
xor
pop
adc
out
ds
dec
test
lcall
xor
or
xor
or
inc
fwait
cmp
lcall
ja
xor
pop
cld
adc
xor
add
lods
cwtl
pop
mov
ds
push
dec
fidivrl
mov
aam
mov
outsb
imull
xor
jae
ss
adc
or
dec
ljmp
inc
and
lcall
sub
lods
mov
dec
sbb
rolb
sarb
mov
inc
pop
out
or
mov
loope
outsb
call
lods
in
popa
hlt
inc
push
insl
sub
sub
dec
jb
mov
jno
mov
or
dec
cmpsl
xchg
fmul
mov
add
or
or
or
or
or
or
or
or
push
xchg
mov
sub
push
jno
sbb
jns
fimuls
jmp
dec
and
cmp
int
mov
insb
lock
hlt
mov
jecxz
fldcw
pop
call
mov
mov
jmp
or
sub
dec
cmpsl
sub
adc
addb
lock
jg
cmpsl
sub
jl
sbb
and
sub
sub
dec
jl
mov
mov
call
lds
std
push
rolb
pop
mull
scas
paddb
jae
xchg
nop
jbe
cwtd
in
scas
inc
fsubrs
stos
cmp
lods
push
jne
or
aam
sbb
or
iret
xchg
xor
into
rcrl
or
sub
add
cwtl
lcall
mov
xchg
lret
cltd
rolb
mov
jp
and
xchg
imul
adcl
add
subb
push
xchg
test
inc
jmp
inc
stc
pop
lcall
jle
aaa
sbb
ret
outsl
fdivrl
push
sbb
cld
iret
fs
cmp
xchg
out
dec
les
fstps
jl
fstl
xlat
out
notl
push
in
lds
push
rclb
insb
hlt
or
mov
sti
sub
xor
sub
loopne
out
mov
mov
push
mov
leave
movnti
mov
jb
push
cli
insb
nop
adc
cwtl
adcl
loop
lahf
add
aas
stos
push
mov
and
push
or
jg
mov
mov
add
cmp
cmc
cmpsb
ja
adc
test
dec
sub
push
push
test
cld
inc
les
jne
add
or
push
je
inc
aaa
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
pop
xor
pop
mov
xchg
inc
popf
cmp
dec
mov
cwtl
dec
fstpt
test
pop
xor
sahf
iret
xor
xchg
inc
icebp
jle
cld
je
cmpsb
dec
sarb
dec
pop
in
sub
sub
in
stos
and
xchg
and
adc
inc
mov
xchg
jbe
arpl
sub
fistps
lea
jmp
mov
pop
mov
jae
bnd
mov
in
aam
scas
stc
pop
hlt
push
and
mov
int
and
jne
and
cmp
and
daa
pop
inc
lret
pop
lcall
btr
mov
or
cmpsb
add
mov
cmp
jl
and
inc
xchg
repz
push
cmpl
fiadds
aam
inc
fcomp
mov
jmp
data16
scas
sahf
fiaddl
mov
pop
int3
adc
lods
pop
int
outsl
mov
dec
fsubrl
push
in
std
push
int
mov
push
aad
add
or
jne
mov
mov
fldenv
push
loope
out
dec
rcr
in
cmpsl
or
movsb
cmpsb
add
pushf
mov
in
and
jecxz
mov
xchg
jle
cli
mov
inc
mov
add
repnz
jae
or
xor
aaa
stos
cmp
mov
add
lahf
call
mov
pop
jge
sarb
jmp
push
lea
dec
rcrl
inc
pusha
xchg
ss
cmp
stos
jl
push
rolb
movsb
add
inc
repz
push
mov
xchg
imul
rcrb
adc
rcll
or
popf
fnstenv
and
rolb
push
pop
jp
jge
mov
inc
sub
jmp
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
nop
jmp
fstpt
fsub
pop
iret
insb
add
enter
mov
push
mov
jp
dec
mov
jecxz
pusha
int3
pop
mov
arpl
cld
gs
ss
mov
inc
lret
inc
decl
loop
js
nop
pushf
sub
add
add
inc
test
dec
iret
add
clc
lea
cwtl
and
xchg
and
test
or
je
inc
cmp
nop
dec
cld
js
sbb
mov
cmp
and
sarl
sti
inc
iret
jle
push
cltd
daa
lcall
jge
pmaddwd
ret
and
sub
inc
adcb
repnz
push
clc
jp
js
jnp
mov
mov
and
out
and
pop
xchg
sub
ja
dec
pusha
aad
cmp
int3
xor
popa
call
lods
insb
pop
aad
negl
jge
and
or
cli
push
mov
cmpsl
sub
cmp
sti
dec
or
mov
push
push
stos
add
jb
push
stc
cld
fwait
adc
push
lock
jecxz
xchg
dec
jge
inc
jle
pop
xchg
adc
shl
iret
shrl
mov
fisubrl
rclb
mov
sub
gs
rcrl
jo
pop
jae
lea
lahf
lock
repnz
pop
loopne
cld
inc
nop
cs
inc
mov
jmp
pusha
mov
pushf
xor
sbb
sbb
and
data16
mov
jo
jle
std
xchg
and
repnz
jbe
xchg
inc
out
jle
lock
jno
and
mov
cmc
dec
call
pop
out
popf
imul
out
rdmsr
outsb
jmp
inc
and
sub
jnp
mov
ds
fistpl
or
or
or
or
or
or
or
or
or
or
or
or
cmp
and
dec
mov
outsl
cmpsb
js
and
mov
sti
jno
aad
stos
in
adc
xchg
inc
test
xor
arpl
cld
aam
sbbb
scas
js
or
or
loopne
mov
lcall
xor
dec
push
adc
cmp
sbb
sub
jl
stc
xbegin
or
arpl
jo
repz
pop
test
mov
mov
jl
andb
adc
ja
push
clc
test
stc
lods
lret
sub
mov
rolb
mov
cmp
cmp
jns
inc
adc
or
es
call
shrl
lret
mov
mov
sub
pusha
jp
fs
in
fiadds
push
movsb
jge
jae
jp
fnsave
test
or
loopne
loopne
sub
pop
cmpsb
sub
arpl
and
sbb
gs
pop
aad
in
test
xchg
push
call
stc
ffree
xor
sar
enter
dec
mov
fimuls
sub
push
xchg
xor
inc
stc
adc
mov
dec
add
outsl
mov
sbb
sti
inc
lahf
push
adc
pusha
call
rcl
mov
cltd
dec
hlt
in
fwait
xchg
pop
dec
jo
in
imul
nopl
push
int3
dec
outsl
aaa
fwait
xor
ds
pop
enter
ljmp
jae
pop
stos
sub
jno
jp
jl
mov
dec
int
mov
jp
pop
mov
mov
sahf
loope
xor
fisubl
nop
jnp
xchg
xchg
push
or
adc
fidivrl
inc
in
pop
ret
das
iret
push
or
sub
jp
enter
in
dec
mov
sbb
jg
and
jmp
fildll
dec
shll
rol
icebp
sbb
sbb
mov
mov
pop
mov
add
jae
pop
mov
popa
aam
sarl
jae
sbb
adc
ss
dec
xchg
insl
mov
test
repnz
cmpsl
add
xor
inc
das
in
cmp
sub
pop
test
mov
push
cmpl
xchg
inc
xorb
pop
loope
xchg
lea
xchg
add
les
or
jg
fists
cwtl
outsb
xchg
pop
and
adc
sbb
mov
arpl
arpl
mov
sbb
adc
add
push
xchg
or
insl
lahf
xor
mov
pop
xchg
in
incl
test
dec
pop
imul
fldenv
adc
sarb
fcompl
xor
sbb
scas
xor
and
cld
jp
iret
and
mov
inc
jns
std
mov
data16
loop
lret
push
xchg
iret
cmp
fs
addb
add
lea
mov
push
aas
cmpsb
sbb
add
jmp
jbe
push
adc
adc
xchg
sahf
cmpsb
cltd
lds
cltd
xor
pusha
shll
xchg
adc
lret
xor
or
fdivrs
fadds
int3
sbb
inc
adc
cmpsl
adc
mov
sub
xchg
inc
popf
pavgw
xor
inc
cwtl
cmp
mov
stos
jnp
popa
pushf
ds
mov
lcall
lret
sbb
insl
nop
mov
mov
pop
mov
sub
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
mov
inc
cli
ret
les
xor
lea
pop
gs
push
jno
cmp
lock
inc
loopne
xchg
daa
lods
adc
mov
xchg
jo
repz
mov
mov
jb
xor
outsl
and
xor
jbe
inc
cltd
jns
push
nop
cmp
psrad
enter
dec
dec
les
pop
fbstp
dec
fdivrl
jl
push
fwait
and
sbb
bound
mov
arpl
pop
fdivs
pop
cmp
imul
mov
add
jmp
cmpsl
cmp
pop
int3
cltd
ret
pusha
ret
adc
xor
subl
jae
je
xor
adc
inc
inc
jg
aam
pop
xchg
lahf
clc
mov
es
sbb
movsb
jns
xchg
xchg
cs
pop
scas
jae
jp
xor
push
add
dec
sbb
jl
lret
push
mov
mov
jmp
cmp
test
or
insb
test
dec
cltd
inc
aam
movsl
push
xchg
xor
mov
data16
fcmovnb
cld
inc
xor
sbb
repz
or
add
test
jnp
dec
jg
repz
stc
pusha
outsb
xor
xor
sbb
jb
sub
pop
mov
cs
sbb
movsl
sbb
adc
insb
pop
sbb
aaa
mov
dec
jb
and
es
xor
out
ljmp
dec
in
xlat
dec
repz
inc
mov
sub
cmp
cmp
push
add
jb
pusha
movsb
jp
jae
inc
mov
loope
fimuls
test
insb
loop
int
xchg
in
add
orl
subl
ret
dec
les
jl
mov
dec
shrb
test
lret
xchg
test
lret
outsl
call
push
test
mov
inc
push
mov
rol
imul
cmc
outsl
shll
mov
int
inc
inc
shll
aaa
rolb
rcr
xor
test
mov
push
stos
and
lds
cmp
pop
ret
outsb
movb
sti
xor
cmp
lods
test
inc
mov
jo
dec
cld
jb
sbb
and
adc
std
sbb
sub
out
lahf
dec
iret
outsb
out
dec
call
inc
and
mov
fwait
pop
cld
dec
xlat
or
mov
mov
adc
jae
push
push
mov
sub
in
jnp
add
rcrl
pop
cmpl
sub
rorl
lods
inc
inc
sub
pop
xchg
ficompl
pop
mov
aas
mov
lds
add
outsl
xchg
nop
out
lea
sub
cmp
jnp
jle
jp
adc
inc
mov
mov
insb
imul
shl
aas
fidivs
mov
inc
mov
add
push
movsb
mov
add
cmp
or
je
jbe
mov
fstpt
decl
push
in
or
int3
jmp
testl
cmp
pop
in
xlat
jle
cmp
mov
and
not
sbb
mov
dec
out
aam
pop
jg
int
jge
dec
vmovups
jne
pop
add
and
ret
add
lcall
mov
shrb
lea
dec
popa
lods
and
adc
inc
mov
xor
xor
js
cmp
out
sub
pop
bound
rorb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jge
scas
popf
mov
add
mov
sbb
mov
out
std
push
rcr
les
push
mov
mov
scas
cmp
sbb
incb
xchg
sub
fucomp
jmp
cmove
fsubs
test
pop
pop
call
in
icebp
and
daa
lods
lret
cmp
mov
mov
sub
dec
sarb
adc
mov
adc
add
scas
out
cwtl
movsl
outsw
and
or
fstps
xchg
sahf
push
cmp
pop
sub
mul
lahf
out
cmp
mov
imul
mov
popa
call
js
inc
mov
cs
xor
fimuls
add
test
sti
les
add
dec
mov
push
add
incl
fadds
into
iret
mov
aaa
cld
arpl
fwait
mov
add
mov
inc
loop
pop
andb
stos
loope
in
cmpl
xchg
lds
imull
outsl
ret
sub
jge
or
fdivp
mov
or
fsubrs
sbb
sbb
mov
xor
mov
scas
push
sub
push
lds
xchg
add
add
popl
xor
das
xchg
xchg
test
push
mov
inc
sti
or
push
ja
jp
pop
jno
push
and
lods
imul
xchg
pushf
push
or
or
xchg
imul
fdiv
cmp
lret
cwtl
out
popf
fldl
cld
cmp
daa
jg
ret
xor
pop
add
in
mov
ret
cmp
sub
addl
adc
dec
jns
adc
fdivr
pop
sbb
popf
jnp
push
in
add
sti
and
shr
sti
jae
rorl
push
cwtl
xchg
add
xor
xor
ret
das
jecxz
shrl
dec
mov
pop
adc
insb
sbb
or
or
or
or
or
or
or
or
or
or
or
xchg
mulb
movsl
or
xchg
sbb
cwtl
imul
les
insl
cmp
or
inc
test
clc
pop
push
inc
and
pop
shld
je
movsb
mov
insl
ret
mov
jg
mov
add
test
add
ljmp
adc
scas
mov
fs
andb
xor
in
imul
cli
cltd
jl
mov
cmp
clc
push
es
in
ss
xor
add
push
imul
std
aas
pop
lahf
dec
lods
aam
xchg
popf
push
push
xor
shll
push
jbe
scas
adc
jmp
loop
add
ss
jne
fstpl
stc
push
adc
iret
push
pop
push
mull
fs
mov
sar
push
mov
and
add
and
in
xor
mov
je
neg
dec
push
pop
mov
mov
dec
push
lret
aad
movsb
js
sbb
vprotd
inc
sahf
mov
xchg
cmp
xchg
sti
int3
stos
arpl
pop
stc
xchg
pop
sub
movsl
negb
scas
sbb
fdivl
ret
mov
cs
mov
das
dec
iret
mov
in
dec
lahf
js
jg
dec
push
adc
adc
xchg
ret
test
mov
pop
adc
fwait
adc
cld
jge
and
frstor
mov
data16
or
outsl
ljmp
adc
shrb
repz
and
ja
test
jnp
repz
sub
std
stos
mov
fistps
sub
jnp
mov
dec
cmp
fidivs
add
push
pop
or
mov
test
ja
inc
pop
test
loopne
adc
inc
and
pusha
iret
add
dec
movl
mov
mov
mov
or
or
or
or
or
or
cltd
in
rolb
push
and
xchg
xchg
gs
ret
loop
mov
inc
mov
push
mov
scas
int3
icebp
mov
xchg
and
imul
int
in
mov
stc
ret
xchg
jmp
in
adc
xor
push
popf
sbb
fwait
adc
loope
push
daa
sub
or
clc
lahf
insb
push
add
shll
lods
cmc
pop
nop
or
xchg
xor
cmpsb
in
or
xchg
adc
lock
repz
addb
mov
fucompp
jge
pop
leave
pop
mov
nop
lds
mov
lea
pushf
repz
pop
andb
add
dec
popa
out
dec
mov
xor
add
jge
xchg
xchg
daa
testl
ss
insb
leave
inc
dec
adc
xlat
xor
stos
add
icebp
subb
jae
xchg
jecxz
cli
gs
add
mov
jg
add
pop
push
pop
mov
rcrl
ss
push
dec
cmp
jmp
pusha
mov
repnz
push
add
dec
int
cmpb
dec
movsb
inc
xlat
sbb
mov
and
mov
mov
xchg
mov
ja
cs
jmp
fadd
test
pop
js
insl
hlt
mov
mov
dec
cmp
push
jl
pop
pop
xor
push
push
ds
insb
stc
inc
or
pop
jo
inc
jo
xor
push
mov
pop
add
adc
gs
inc
iret
dec
or
pop
stos
lret
add
daa
sbb
fimuls
jg
jle
jge
push
or
mov
cli
clc
mov
push
fdivr
iret
xchg
je
or
xchg
xlat
mov
rol
add
dec
popl
sti
enter
pop
cmp
ljmp
xchg
cs
push
fidivrl
stos
xchg
mov
mov
mov
in
ret
int
cld
je
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
fisubl
xchg
lcall
dec
adc
test
mov
movsb
add
shl
or
jg
lret
push
aam
dec
shr
iret
jecxz
add
xor
cmp
push
and
out
mov
int3
inc
xor
dec
mov
aam
lret
nop
cmp
cmpsb
stos
repnz
or
aad
adcb
and
pop
or
scas
dec
outsb
dec
xor
pusha
outsl
and
or
cwtl
notb
jl
mov
popa
loop
int3
pop
shlb
je
js
dec
mov
stos
or
incb
rcrl
mov
lods
ds
inc
and
fwait
mov
inc
shlb
jns
cs
xchg
leave
jg
push
mov
adc
mov
and
in
mov
cmp
cmp
xor
lret
sbb
sahf
mov
test
adc
testb
cmp
and
fistpl
je
dec
fs
flds
lahf
inc
adcl
mov
sub
testl
push
sbb
cmp
xchg
pop
stos
in
shlb
pop
or
mov
sub
cmpb
popf
roll
jo
inc
mov
hlt
dec
pinsrw
xor
pop
inc
fstps
mov
sub
xchg
pop
push
ja
lahf
mov
data16
add
jne
fldenv
dec
xchg
cli
loop
xor
adc
cmpsl
pop
xchg
dec
cltd
int
mov
push
scas
inc
adc
fmull
lds
test
push
xchg
icebp
fldenv
xor
mov
adc
xor
mov
hlt
je
inc
outsl
notl
lock
inc
imul
or
and
sub
cmp
enter
dec
ret
xor
xchg
cmp
adc
dec
insl
sahf
jmp
pop
enter
and
shld
out
add
sub
in
notl
xchg
je
loopne
jp
outsl
lods
int3
and
dec
stos
add
xchg
nop
add
or
adc
xchg
stos
push
or
push
pop
sub
jne
or
loop
lods
scas
shll
dec
xor
and
adc
add
lock
gs
mov
add
push
lret
test
and
aas
lods
push
push
imulb
pop
jge
jo
push
movsb
mov
or
sub
call
push
add
jno
mov
movsb
adc
aam
idivl
cwtl
sahf
jp
push
ret
cli
sbb
int
xchg
and
mov
fwait
push
jbe
fsubrs
mov
cmp
fwait
mov
orb
mov
icebp
sub
pminsw
shll
ja
mov
jl
test
push
mov
sbb
fldl
pop
jno
movsl
shrl
pop
xor
adc
adc
pushf
dec
inc
loope
jp
mov
adc
stos
jb
icebp
inc
dec
pop
or
sarb
enter
repnz
cwtl
push
pop
bswap
dec
jmp
pop
sbb
or
or
xchg
dec
sub
and
aam
sub
jo
orb
movsb
test
outsb
xchg
xchg
rorb
test
jg
inc
fs
lcall
jmp
ror
xchg
pop
add
sub
int
inc
fwait
imul
in
jbe
rcll
dec
dec
push
fldenv
lods
inc
push
sub
adc
xor
sub
sarb
cmp
lea
jmp
pop
insl
js
lret
sub
inc
push
outsl
mov
ret
jno
out
cltd
cmp
aas
shlb
dec
dec
lds
mov
dec
lea
nop
xchg
out
dec
int3
xchg
mov
div
out
iret
xor
adc
pop
cltd
andb
jmp
and
mov
in
stc
inc
and
cmp
ficoml
aad
jl
push
jl
add
das
mov
icebp
sub
or
sub
int3
pop
inc
insb
cmp
sbb
cmp
mov
test
cld
loopne
into
jnp
mov
sarb
cmp
aaa
jb
push
xlat
mov
popa
ret
sub
lret
pop
test
out
fs
test
inc
sbb
cs
lret
or
xchg
shl
inc
cld
dec
sbb
loop
mov
sbb
sbb
push
insb
in
lods
cld
mov
inc
mov
jno
cs
mov
scas
cmc
sbb
xor
adc
adc
inc
sar
adcb
addr16
lret
std
pop
add
mov
imul
adc
mov
push
aad
call
jnp
xchg
jg
jb
stc
out
scas
jb
mov
jge
or
jg
pop
test
mov
cmc
sub
xchg
testl
push
mov
xor
insb
dec
fwait
or
push
scas
je
xchg
fldpi
ret
mov
sbb
push
pushf
int
scas
daa
sub
fimull
and
add
stos
mov
mov
std
arpl
in
add
inc
jne
jmp
aas
enter
leave
jb
sub
scas
push
out
add
rep
f2xm1
int
add
fmull
xorb
or
pop
lods
lret
pop
pop
inc
push
cs
or
or
or
or
or
or
or
or
or
or
or
or
ror
and
orl
in
and
adc
mov
mov
int3
ret
rclb
bound
lods
pusha
sbb
push
push
cli
lods
in
jecxz
or
push
and
jecxz
mov
push
inc
lds
daa
lods
hlt
mov
pop
cld
mov
cmc
repnz
jg
repnz
and
xchg
xlat
cmp
inc
mov
and
loope
xchg
ljmp
and
das
add
arpl
decl
orb
js
add
pop
lahf
sbb
imul
out
iret
in
ss
inc
pop
adc
mov
in
orb
call
pop
shl
sbb
adc
sbb
div
mov
loope
jmp
cmp
and
mov
js
push
fdivrl
sti
sti
int3
call
flds
mov
fs
push
ds
outsb
cli
push
cld
push
lahf
jl
add
dec
pop
pop
rorb
mov
or
fisttps
mov
mov
into
push
lock
pop
pop
test
mov
mov
sub
pusha
mov
jbe
and
xor
cwtl
dec
int
fists
lret
negl
js
ljmp
xacquire
cmp
movb
iret
xor
dec
dec
clc
lret
dec
inc
std
icebp
push
xor
int
mov
xor
cmp
sbb
cld
mov
fwait
inc
fs
or
add
mov
push
push
xlat
test
push
mov
push
dec
sbb
sub
mov
dec
repz
mov
addl
int3
push
xor
scas
mov
enter
mov
rcll
and
mov
cmp
inc
sbb
daa
out
inc
std
addr16
xor
mov
or
or
or
or
or
or
or
or
or
or
or
pop
mov
mov
sbb
pop
jmp
clc
rclb
ret
dec
orb
negb
xchg
pop
lret
pop
and
popf
call
push
test
push
jle
sbb
push
xchg
dec
adc
or
stos
mov
xchg
stos
das
adc
sbbb
and
dec
scas
fwait
lret
mov
leave
cmp
cmp
imul
or
in
subb
xchg
dec
jno
jecxz
repnz
fmul
add
dec
adc
cli
push
cli
sbb
mov
push
push
jmp
inc
dec
fsubs
in
scas
rcrl
mov
fisttpll
sbb
ret
sbb
sar
pop
add
fistps
icebp
jne
mov
and
sub
inc
outsl
mov
adc
mov
pushf
inc
aaa
outsb
adc
leave
in
jl
mov
test
fwait
jb
add
sti
adc
lret
mov
lods
sbb
stc
adc
iret
cmp
in
fildll
sbb
cld
xchg
jno
cmp
cli
inc
sbb
leave
mov
movsb
mov
mov
cs
jnp
dec
xchg
loop
or
sbb
js
xchg
arpl
js
push
mov
gs
into
call
rorb
shrl
adc
xchg
adc
lds
mov
jno
xor
add
inc
dec
les
scas
test
call
movsl
mov
and
mov
outsb
in
mov
and
fidivl
stos
xchg
fidivrs
and
mov
adc
pop
outsl
cmp
mov
inc
mov
insb
cmpsl
rcll
hlt
sbb
loop
inc
adc
dec
push
fadd
sub
push
adc
ret
mul
inc
imul
adc
xor
jno
mov
mov
neg
jno
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
lds
daa
push
mov
divb
jo
fnsave
jo
pop
mov
ja
inc
add
int3
pop
loop
xor
cmp
or
mov
arpl
aaa
add
push
insl
cwtl
dec
mov
pop
pop
inc
and
sub
lret
mov
jae
mov
fmull
pop
mov
mov
dec
les
enter
sub
in
lock
add
sub
adcl
sub
sti
jl
mov
adc
mov
mov
in
js
pushf
enter
mov
outsl
ret
fcomp
aas
arpl
insb
lock
call
jo
fisttpl
push
lcall
lret
mov
leave
ret
pop
out
push
inc
pop
mov
pop
jecxz
xor
shll
jmp
mov
imul
sbb
arpl
imul
mov
clc
lods
repnz
mov
rcrl
pop
jmp
mov
cmp
int3
and
xchg
pop
mov
push
jae
scas
dec
and
int
lods
insb
loope
outsl
or
mov
pop
in
popf
inc
mov
mov
mov
pop
pop
mov
lds
sbb
xchg
loope
lods
fwait
sti
andl
addr16
mov
leave
imul
push
into
je
adc
dec
iret
inc
lcall
sbb
hlt
hlt
mov
dec
or
sar
or
sub
pushf
cmp
adc
mov
in
ret
or
xlat
fdivs
fs
mov
jge
jbe
dec
adc
fnstcw
aas
push
out
mov
adc
int
clc
jg
mov
dec
cwtl
xchg
arpl
sarl
orl
movsl
loop
iret
outsl
leave
dec
je
mov
and
lock
test
xchg
or
or
or
or
or
or
or
or
or
or
or
or
mov
fisttpl
mov
pop
add
test
xchg
xchg
sti
mov
pop
dec
or
sbb
and
lds
in
pusha
mov
mov
or
jne
xor
add
nop
jo,pn
data16
icebp
testb
clc
ljmpw
push
adc
mov
std
jae
imul
push
push
add
les
sbb
mov
leave
add
sbb
jb
cmpsl
jo
clc
mov
push
inc
push
fbld
add
lods
jecxz
dec
jns
lret
stc
mov
add
rclb
lea
xchg
cwtl
pop
push
leave
sub
outsl
outsb
test
pop
cmc
int
cmp
jle
fsts
scas
clc
xchg
stc
mov
adc
and
inc
jl
sbb
hlt
fs
lea
in
pop
aaa
or
sub
adc
out
lcall
int
lods
pop
jns
jns
push
mov
pop
mov
xchg
div
leave
inc
mov
je
push
enter
push
lret
in
fisubl
dec
call
pop
out
sbb
inc
pop
inc
lahf
xchg
pop
sub
lds
mov
and
mov
push
inc
cmp
push
imull
lahf
jo
fpatan
fmul
xchg
js
xor
in
pop
mov
or
outsl
pop
push
push
mov
or
jmp
loop
xor
mov
cmp
sbb
jge
stos
sbb
xor
fistps
lcall
pop
pop
mov
lret
pop
loop
sahf
aam
stos
dec
cmp
add
pop
enter
jecxz
xchg
and
mov
cmp
jle
and
sbb
jo
push
test
hlt
ss
push
fmuls
in
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sarl
push
inc
scas
adc
popa
aam
dec
ljmp
mov
mov
jmp
insb
inc
mov
ret
sub
divl
pop
mov
or
mov
loopne
xchg
lea
ret
xchg
or
movsb
sub
mov
push
push
sar
jnp
imul
mov
add
xchg
and
dec
nop
outsl
xchg
or
popa
icebp
add
test
dec
insl
pushf
push
sarl
es
fxch
adc
pop
xor
jg
push
vaddps
mov
push
stos
sbb
pop
or
push
mov
push
dec
outsl
mov
test
loopne
fs
das
push
pop
imul
push
mov
mov
fnsave
out
cmc
nop
mov
test
cmp
sub
push
js
stc
pusha
enter
lods
into
dec
outsl
sahf
ficomps
push
lock
and
xchg
sbb
sbb
adc
cmp
insb
mov
stc
push
pop
sarl
fndisi(8087
repz
xchg
popa
jno
jno
xor
xor
adc
pop
lret
mov
sbb
js
je
cmp
and
imul
mov
std
pop
ret
jb
jp
sti
bound
push
pushf
lds
ss
loop
in
rclb
jmp
movsb
adc
xor
inc
add
pop
mov
ljmp
fbstp
scas
popa
adc
ret
mov
xor
pop
rcrb
das
pusha
les
fs
je
dec
mov
and
ljmp
push
jl,pn
pop
xchg
mov
push
xchg
pop
lcall
push
push
jg
fmuls
jae
pop
mov
scas
sub
pop
sub
mov
les
fisubrl
or
insb
sbb
in
adc
outsl
ss
push
add
dec
mov
fdivp
mov
js
pop
dec
pushf
mov
xor
insb
jae
push
mov
mov
lahf
fwait
and
push
dec
pop
pop
jo
adc
add
mov
xchg
adc
add
add
pop
fistps
fidivl
cld
xor
pop
daa
imul
test
jge
je,pn
adc
jp
pop
push
out
jb
push
mov
jl
mov
shl
fistps
jno
sahf
push
xlat
popf
adc
jg
push
movsl
outsl
push
ficoml
mov
cli
stc
pushf
xor
jecxz
adc
pushl
mov
xchg
adc
xor
int
xor
sub
sarl
addr16
divb
jae
cmpb
mov
in
pop
push
add
mov
int
push
jmp
in
sub
sub
pop
lret
inc
out
mov
orl
cli
fs
repnz
push
hlt
lea
scas
inc
fbstp
push
sti
pop
mov
mov
pop
jbe
push
sub
sahf
scas
push
insw
ss
sub
fsubl
out
push
jg
lods
dec
fbld
add
out
xchg
sbb
gs
mov
out
out
jmp
ja
ljmp
stos
pushf
jle
addr16
les
mov
inc
push
mov
pop
sub
mov
mov
cmpsl
bswap
push
cmp
adc
in
loop
pop
xchg
mov
shr
fists
xchg
cmp
cmp
inc
repnz
sub
sub
loope
xchg
lea
add
jp
push
cmpsl
rorb
js
int3
fwait
int3
mov
aad
imull
pop
cmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
imul
xor
push
fisubrl
pop
test
jmp
insb
mov
mov
sbb
or
test
jecxz
push
test
xchg
and
push
dec
inc
pusha
or
repnz
fldt
das
mov
lret
cmp
inc
mov
sbb
xor
neg
loopne
dec
mov
in
push
or
push
inc
daa
shl
movsl
sub
outsb
dec
cwtl
xor
fwait
jnp
scas
flds
push
xchg
lock
ljmp
push
xor
cld
inc
push
mov
and
ss
adc
sub
xchg
adc
sbb
and
pop
testl
imul
cmp
pop
mov
or
xchg
ja
out
stos
mulb
inc
scas
inc
out
push
mov
lret
sbb
in
add
imull
adc
cmp
.byte
add
add
lcall
adc
sub
inc
add
add
add
pop
imul
add
add
add
add
adcb
add
nop
add
addb
add
pop
imul
add
add
add
add
add
pusha
add
andb
add
add
pop
imul
add
add
add
add
rolb
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
dec
scas
xor
gs
ja
gs
imul
shr
fwait
add
insb
xor
js
inc
rorl
loop
into
popa
mov
and
mov
push
nop
in
int
or
pop
cmp
je
lock
rcr
jns
xor
inc
jecxz
xor
and
sbb
je
xor
cmpsb
mov
sbb
cmp
lods
scas
cmp
fcompl
in
jl
cmp
pop
mov
xor
cmp
cmp
mov
add
push
fstps
subl
mov
mov
mov
jbe
jne
cld
lock
rolb
pushf
push
ja
lahf
push
jno
shl
es
sahf
inc
fcom
and
or
pusha
das
push
jmp
iret
cld
xchg
sar
jno
adc
adc
mov
daa
jmp
std
xor
mov
bound
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
add
adc
mov
inc
das
add
outsb
insb
stc
icebp
lret
jge
js
ljmp
outsb
jp
cmp
cmp
imul
fucomp
pop
test
pop
int
test
adc
pop
test
sub
icebp
fwait
add
outsb
cwtl
adc
pop
xlat
mov
stos
je
jns
pop
mov
mov
inc
repnz
insb
xchg
jns
mulb
call
push
lods
add
out
mov
dec
fcoms
pop
xor
jmp
jp
cltd
or
or
enter
pop
call
fdivrp
xchg
xor
call
loope
xchg
adc
mov
icebp
push
out
test
das
dec
push
fdiv
test
sub
in
fwait
iret
and
roll
mov
outsb
fldt
jle
and
cmp
mov
out
push
stc
sarl
mov
cli
stc
add
fxch
push
addr16
inc
or
jb
scas
or
pop
jo
imul
clc
add
outsb
mov
cs
dec
subb
dec
or
push
sub
aam
mov
jae
or
jmp
subl
sbbb
push
std
out
mov
nop
sbb
mov
out
push
call
lret
or
xchg
adc
sub
imul
popa
push
fs
mov
add
test
mov
and
mov
or
or
and
jg
sub
pop
cs
popa
es
clc
ficoms
sbb
pop
push
in
pop
pop
xchg
sbb
fwait
xchg
xchg
push
fsubs
aaa
clc
mov
dec
mov
nop
ror
fdiv
or
cli
stc
or
or
or
or
or
or
or
or
dec
imul
xor
or
add
and
jl
cmc
mov
xlat
cli
cld
bound
into
jo
ret
pop
rcrl
ret
cld
jne
push
mov
std
mov
les
inc
sub
enter
mov
push
cmp
mov
sub
cltd
add
rolb
pop
sub
pop
mov
dec
add
faddl
mov
push
mov
shlb
mov
outsl
ljmp
test
lret
jno
add
xchg
cmp
mov
lds
lret
in
pop
xor
or
mov
pop
xchg
jo
mov
mov
pop
cmp
push
dec
js
pop
cld
addr16
jns
xor
mov
cld
out
xchg
jno
pop
mov
jg
loopne
mov
popf
mov
mov
mov
xor
dec
mov
fisttps
push
push
adc
out
or
xchg
ret
add
into
push
adc
in
ja
hlt
fcoms
sbb
pop
mov
pop
mov
xchg
fcomip
aad
inc
push
add
xchg
pop
fucomip
mov
shlb
mov
shrl
addr16
cli
mov
and
ficompl
and
ds
adc
out
loopne
dec
mull
jmp
xor
movsb
repz
scas
add
mov
leave
dec
data16
sbb
sub
sub
cmc
dec
inc
mov
dec
cmp
pop
dec
lds
jns
xorb
iret
lods
mov
insl
out
pop
scas
fs
sub
mov
adc
inc
mov
shl
out
xchg
ret
cmp
movsb
push
jp
outsl
mov
outsb
out
dec
in
mov
cmpsl
pop
pop
sub
push
cmc
js
mov
and
int3
or
xchg
les
scas
adc
adc
xchg
test
arpl
out
into
insb
jle
fsts
int3
icebp
lea
hlt
and
fbstp
ds
mov
jno
dec
fisubl
mov
lahf
pop
das
outsb
mov
into
outsb
lds
loopne
lret
imul
sahf
and
mov
mov
adc
popa
jno
lahf
xchg
and
push
sar
adc
js
das
inc
icebp
ljmp
mov
mov
mov
movsb
jnp
cld
ljmp
in
or
adcb
xlat
push
jns
std
pop
cmp
dec
enter
pop
out
mov
pop
repz
in
mov
es
cld
icebp
movb
nop
or
fstpl
lret
jno
pop
jecxz
inc
sub
cwtl
sub
enter
bound
adc
sarl
ljmp
divb
mov
aas
in
mov
movsb
jecxz
cmp
shll
push
jle
push
or
push
dec
out
fwait
aaa
je
jno
xchg
daa
xchg
mov
stc
imul
cs
jle
lds
jecxz
xchg
insl
fldcw
les
push
pop
fnsave
call
mov
loopne
or
inc
shl
mov
push
or
adc
inc
cmp
dec
sub
mov
jl
push
std
mull
dec
jmp
jb
pop
jbe,pt
cld
pushf
inc
jl
pop
je
push
pop
sub
repz
testl
inc
push
sti
lds
les
cmp
sti
sbb
testl
pop
cmp
push
xchg
sub
inc
bnd
shr
notb
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
and
xchg
aad
jg
jl
jbe
clc
sbb
push
cmp
in
jl
or
insl
sahf
xchg
in
ficoml
jne
xchg
ljmp
jnp
push
and
fwait
daa
mov
xor
test
lods
rorl
or
test
dec
es
cmp
cmp
sbb
dec
xor
ficoms
out
out
adc
imulb
pop
cmp
sbb
lret
fbld
mov
lahf
aam
push
sub
inc
call
out
aas
add
loopne
jns
jmp
cwtl
in
sub
adc
mov
sub
scas
mov
imul
and
loopne
inc
insb
cld
pop
sub
fcompl
mov
in
jno
sbb
and
lods
fnstcw
in
mov
push
repz
outsb
out
loope
cmp
xor
movb
cmp
je
pop
mov
into
pop
stos
into
push
xchg
fldl
test
sti
mov
pop
pop
or
mov
out
add
ss
mov
fiadds
cmp
and
or
pop
leave
xchg
std
sub
cli
push
mov
into
jg
lret
fisttps
cmp
lret
sarl
test
out
sub
or
js
in
popa
cmp
test
test
ss
mov
imul
rolb
pop
in
imul
xor
xchg
shr
push
nop
addr16
sub
std
mov
popf
sbb
lods
in
push
jge
push
ds
out
ret
fcomps
call
pop
and
movsb
fcomps
lods
dec
fwait
push
adc
mov
xor
lods
dec
ja
sbb
aas
mov
adc
das
cmp
and
fdivp
fistps
or
repz
mov
sbb
aad
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
pop
xor
push
push
jp
sub
mov
xchg
ret
jbe
jp,pn
add
jge
dec
jne
int3
sbb
loop
lret
into
sub
cmp
sarl
push
scas
xchg
int3
pop
and
fistl
dec
mov
imul
int3
xchg
fnstcw
loop
jno
test
pop
dec
daa
inc
jl
and
mov
roll
push
sti
lret
daa
addr16
fistpll
lret
out
je
push
aad
add
movsb
pushf
xchg
xchg
in
jle
pop
xorl
jecxz
pop
lret
shlb
lret
rol
inc
js
cmp
jbe
cmp
push
out
das
pop
mov
aad
pop
jmp
stos
cmp
jo
into
test
pushf
loopne
into
adc
mov
repz
stc
clc
js
mov
cmovbe
sbb
jbe
jne
xor
icebp
mov
push
aad
mov
addr16
jb
aas
or
jbe
fbstp
leave
lods
dec
sub
mov
push
push
sub
pop
test
je
push
clc
xor
fbstp
sbbl
into
cmp
pop
mov
lock
ljmp
or
xlat
stos
out
fs
out
jo
xchg
gs
data16
pop
faddp
mov
push
cwtl
int
pop
mov
inc
mov
push
or
int
out
bound
loope
lods
or
popf
sub
das
das
add
xchg
aas
repz
add
test
push
jl
mov
test
push
cmc
gs
push
call
jnp
into
and
mov
jl
or
jmp
add
jb
pop
fst
cmp
aas
fisttpll
jno
repnz
dec
mov
mov
stos
inc
dec
flds
jmp
xor
dec
xchg
loopne
bound
pop
fnstsw
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
adc
xor
ja
test
sub
mov
xor
adc
ds
push
popa
inc
push
testb
ja
mov
sbb
and
push
xchg
popa
xor
lods
fstpl
lcall
push
je
daa
out
mov
lret
pop
outsl
sbb
stc
popf
mov
lea
lret
sarb
xor
jl
mov
push
jp
jge
mov
sbb
call
rorl
lock
mov
sbb
inc
and
xchg
loopne
inc
xchg
mov
xor
pop
dec
or
mov
nop
mov
or
mov
cmp
fisubrs
inc
fcoml
jns
cld
in
insb
test
aaa
inc
cmp
xor
insb
test
mov
sahf
fstl
movl
std
hlt
add
gs
sbb
flds
jne
xchg
inc
xchg
test
ret
out
lods
lods
movsl
xchg
pop
js
pop
sub
sbbl
into
mov
lock
and
xor
movl
loope
test
fwait
lods
fdivr
mov
ret
and
push
iret
stc
pop
daa
push
add
adc
test
dec
push
pop
sar
inc
ss
xchg
pop
sub
ja
cmp
push
clc
pusha
cmp
dec
jae
mov
inc
inc
mov
push
or
push
dec
out
inc
add
add
hlt
push
or
xchg
jp
cli
mov
addr16
pop
mov
mov
hlt
test
popa
or
outsl
cmp
adc
push
xorb
in
mov
sub
jbe
add
xor
mov
fisubrl
lcall
cmp
nop
mov
iret
xor
or
fs
jge
xor
mov
push
push
adc
xor
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
jnp
call
dec
pop
mov
xor
add
leave
or
stc
lret
adc
lods
mov
adc
lods
nop
adc
and
mov
cmp
in
and
mov
clc
xchg
cs
das
xchg
in
ja
push
sbb
dec
lret
jae
test
jne
outsl
sbb
and
hlt
and
jge
clc
fldl
sahf
inc
in
ficoml
sbb
inc
fdivrl
xchg
addl
fwait
add
mov
sbb
popf
cmp
push
out
mov
imul
idivl
push
xchg
jge
add
xchg
mov
aad
sub
xlat
or
pop
rclb
mov
lret
lea
sbb
decb
fistpll
mov
jns
popa
pusha
adc
notb
out
mov
cmp
leave
fsubl
xor
add
jmp
add
and
fistl
outsl
inc
push
sbb
push
push
lcall
fdivr
cmp
push
mov
fwait
jae
jmp
lcall
insb
insl
pop
cwtl
test
ja
or
test
sbb
push
or
jb
xor
dec
mov
ret
jp
or
sbb
test
cmc
jp
push
popa
fs
and
out
test
pop
rcll
out
arpl
rcrl
incl
repz
xchg
in
cld
push
scas
imul
adcb
push
sub
std
mov
dec
pushf
pusha
out
fldt
or
shlb
test
rcrl
in
inc
outsl
idivb
mov
mov
gs
lock
xchg
sub
xor
jbe
test
rorl
inc
mov
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
fmul
inc
and
adc
jle
out
dec
cld
hlt
inc
ficompl
std
neg
outsb
mov
push
lods
push
pop
inc
dec
enter
in
push
repnz
cli
lret
clc
dec
mov
aaa
cwtl
mov
incb
fs
cmp
aad
jne
and
mov
inc
popa
leave
fucomp
movsb
jne
sbb
je
sub
loopne
adc
bnd
pop
jns
jge
and
sub
mov
xor
sub
mov
inc
push
addr16
sub
repnz
lcall
dec
dec
das
insb
xchg
push
sub
js
cwtl
jno
sub
scas
out
or
stos
inc
mov
scas
int
add
sub
mov
xchg
scas
and
mov
adc
push
das
mov
popa
xchg
jbe
push
call
icebp
or
cmpb
in
bound
dec
ficompl
in
pop
sbb
out
mov
mov
push
mov
xchg
pop
xchg
ds
adc
out
xor
add
cmp
shrl
inc
sahf
outsb
sbb
fcompl
jae
insb
test
bound
lods
nop
xor
xor
jnp
mov
ret
mov
shll
xlat
testl
repnz
leave
jne
mov
jb
les
mov
mov
push
cwtl
jl
in
push
jge
push
dec
adc
lret
add
pop
xchg
adc
jl
mov
xor
shrb
cmp
add
idivl
repnz
cld
mov
jl
rcrl
pop
gs
in
ds
lods
mov
cmp
push
scas
add
les
std
loop
sbb
push
push
pop
adc
push
sub
ret
arpl
insl
sub
pushf
mov
or
or
or
or
or
or
or
or
call
stos
jge
insb
lahf
jb
cli
mov
ljmp
and
in
push
fdivr
cmp
rcl
repz
pmuludq
xor
fdivl
or
testb
stc
xchg
ss
mov
xor
push
dec
inc
inc
mov
adc
jecxz
add
loopne
test
into
mov
jg
add
je
add
popa
xorb
das
data16
xchg
sahf
fildll
rcl
sbb
insl
lret
xor
hlt
cmp
ja
fadd
push
fisttpll
loopne
cwtl
sbb
loope
mov
hlt
pop
cli
cli
jo
mov
mov
lcall
test
inc
fcoml
imul
leave
fs
cmp
loop
in
push
fistpl
or
inc
int3
dec
andl
add
imul
mov
adc
cmpsb
mov
jae
dec
sbb
sbb
cli
scas
pop
sub
xchg
dec
iret
in
dec
add
jbe
fldt
xchg
lds
stos
shrl
hlt
outsl
mov
xor
ds
cmp
out
lcall
xor
ja
sub
stc
aas
lock
mov
mov
xchg
jne
leave
push
imul
cmpsb
cmp
out
push
movsb
jo
push
imul
aaa
mov
add
lret
push
fdivrp
loopne
sbb
sbb
pop
jg
fwait
outsl
jne
jge
mov
rcrb
sub
lods
push
lahf
adc
sub
fnsetpm(287
xor
jns
popa
and
add
lods
daa
mov
enter
push
cli
aad
leave
imul
cmp
notl
fistpll
into
movsl
or
jmp
mov
outsb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
loopne
mov
lcall
sbb
inc
and
or
sarl
mov
cmpsb
jmp
movsb
mov
inc
mov
sbb
lock
ret
fcoms
dec
cmp
mov
rolb
adc
test
fwait
popa
shrb
hlt
xor
sar
fistpll
adc
stc
mov
push
mov
add
lret
stos
imul
dec
jge
jo
in
pop
leave
push
mov
int3
int3
xor
pop
gs
mov
enter
int
pop
aad
mov
test
pop
push
jp
into
jecxz
out
mov
xchg
xchg
jb
sbb
jmp
sahf
insb
flds
xchg
fisubl
test
push
enter
lret
adc
cmpsb
outsb
jno
xchg
mov
lcall
jae
pop
or
gs
mov
pop
repz
ljmp
test
stc
sub
in
dec
mov
daa
out
outsb
shll
push
xor
hlt
jle
inc
inc
lods
and
sahf
movsl
mov
filds
xor
sahf
jnp
mov
xor
adc
ja
push
fildll
push
mov
xlat
add
or
fstps
mov
cmp
lods
out
push
fistps
inc
mov
jb
push
or
outsl
dec
cmc
mov
mov
iret
and
sub
repnz
icebp
pushf
push
mov
loopne
in
pop
cltd
jl
or
mov
call
mov
push
filds
inc
in
lods
dec
ficoml
scas
inc
clc
inc
stos
sub
cmp
inc
adc
sarb
inc
push
push
sbb
pop
inc
cmpsl
jbe
inc
pop
arpl
pop
sahf
mov
enter
mov
adc
enter
into
icebp
rolb
jb
cmp
add
add
scas
cmc
ss
jl
jb
in
push
jne
cmp
lahf
or
mov
test
notb
sbb
pop
mov
pop
fcompl
data16
std
cmp
cwtl
and
sbb
jnp
sub
outsb
lahf
push
xor
xor
into
mov
lock
inc
nop
int
out
xor
mov
xor
js
loop
jns
dec
sbb
push
lods
pop
mov
push
movsb
jns
mov
lahf
popf
add
sti
mov
push
and
jle
pop
xlat
lods
pop
stos
push
mov
sbb
xchg
dec
pop
mov
imul
jmp
jmp
insl
pop
out
add
leave
jecxz
std
xor
xor
mov
cmp
sbb
cwtl
iret
mov
shr
xchg
push
pop
add
fs
push
pushf
dec
mov
aas
xor
rcrb
popa
push
inc
sbb
and
fstpl
add
test
int3
sub
aaa
popf
push
push
in
iret
cmpl
std
cwtl
js
and
mov
xlat
test
xor
sub
subb
repnz
xor
cmp
sbb
mov
jno
mov
mov
nop
leave
sbb
cmc
repz
in
mov
shrb
orl
lods
mov
xchg
jno
add
jo
pusha
pop
scas
inc
stc
imul
fidivrs
mov
aas
pop
lea
data16
insb
pop
push
cwtl
rcrl
push
in
addr16
dec
imul
mov
sub
movsb
adc
adcb
sbb
adc
inc
jno
andb
sub
or
or
xchg
push
mov
or
out
je
pop
stos
clc
mov
push
pop
and
push
add
test
test
mov
jg
sub
repz
je
mov
jbe
cmp
cmp
sti
add
data16
or
or
or
or
or
or
or
pop
in
mov
leave
js
mov
xchg
jg
lods
outsb
rorb
xchg
sub
dec
mov
leave
push
xchg
inc
push
add
xchg
push
es
aam
sbb
sub
js
loopne
mov
jno
aam
and
or
cmpsb
repz
add
sbb
cs
fxch
mov
gs
jmp
out
aad
aam
lgdtl
call
and
dec
pusha
fwait
mov
dec
xor
mov
leave
push
lea
jp
xchg
hlt
clc
roll
adc
sub
loop
and
sub
adc
mov
test
push
test
xor
call
ss
mov
mov
mov
pop
pop
movsb
push
imul
mov
out
bnd
adc
cld
mov
insb
fidivl
fsubl
push
dec
inc
push
push
adc
mov
ja
jno
add
jp
mov
mov
push
mov
mov
aam
cwtl
sbb
test
aas
outsb
aas
cmp
jbe
cmp
es
int3
lds
pop
sahf
scas
sbb
sar
cmp
or
fcoml
mov
test
jae
aad
test
lret
ss
fdivl
pop
repnz
and
pop
ror
pushw
icebp
sub
es
scas
xor
mul
xchg
push
add
push
ret
adc
cmc
add
mov
add
aad
fists
lahf
lahf
fs
cmpb
jns
fsubrs
cli
or
mov
pop
and
jno
fildl
push
inc
add
scas
scas
call
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
idivb
lret
mov
jmp
push
loop
inc
adc
push
push
add
sbb
ja
adc
jb
aaa
mov
popf
test
scas
fidivs
pusha
and
jmp
ss
imul
mov
push
fnstenv
or
ss
loop
cmp
in
jbe
push
mov
mov
in
and
add
push
cwtl
add
push
jecxz
xchg
cmc
js
sbb
mov
jecxz
push
fsubl
or
mov
out
xchg
in
sub
into
jge
aaa
xbegin
js
sbb
lods
sub
dec
stc
push
xlat
lahf
mov
push
cmp
mov
cmp
je
lret
fidivl
dec
xchg
push
jp
ss
mov
dec
es
xchg
gs
jl
mov
mov
jmp
mov
or
repz
mov
adc
dec
add
lock
neg
xor
jae
mov
dec
push
pushf
pop
inc
sti
inc
push
int3
or
jae
push
push
push
outsb
idivb
lcall
lock
cmp
daa
sub
fs
xor
push
push
sarb
mov
push
cwtl
je
pusha
adc
inc
fmuls
cltd
push
js
xchg
test
inc
mov
mov
jne
push
into
adc
and
or
xor
out
cmp
mov
and
dec
scas
out
add
push
lods
insl
and
pop
enter
lds
rcrl
fmuls
sahf
out
test
pop
addr16
sbb
scas
pop
and
cwtl
dec
imul
loopne
xor
insl
cmp
test
push
sahf
mov
notl
loop
fmul
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
cwtl
popf
jnp
lds
cmp
xor
mov
jae
subl
jbe
sub
mov
cmp
push
inc
ss
push
fidivrl
push
addr16
rorl
dec
adc
stos
aas
out
lcall
mov
in
sub
sub
xor
push
cltd
mov
dec
cs
mov
or
jmp
js
sbb
fwait
xchg
mov
loop
mov
adc
xor
out
ret
cmp
mov
dec
lods
and
out
mov
mov
cld
in
dec
or
es
sub
cmp
push
insb
cmp
mov
cli
movsb
and
pop
adc
push
mov
cmpsb
push
addr16
mov
ss
mov
mov
mov
push
jno
in
jnp
fdivs
adc
in
lret
ljmp
paddusw
shlb
and
sub
pop
add
inc
lock
cmpb
push
dec
jg
and
mov
subb
jnp
mov
dec
sti
xor
and
xor
cmp
or
inc
movsb
pop
fs
gs
pop
adc
fiadds
aad
aaa
bnd
call
or
gs
add
sahf
nop
add
push
icebp
mov
pop
repz
test
mov
std
push
push
gs
add
sti
pushl
jbe
cmp
push
out
xchg
add
imul
push
mov
jg
sub
das
test
in
inc
inc
adc
mov
je
frstor
mov
xor
stos
fcoml
data16
inc
sub
in
repnz
sbb
xor
lcall
arpl
jmp
aaa
mov
js
movsl
arpl
sti
xchg
lods
pusha
push
sbb
or
or
or
or
or
or
or
or
mov
int3
xchg
clc
and
ret
mov
add
fstp
push
cld
clc
sbb
cmpsl
shrb
adc
inc
lahf
mov
aad
out
icebp
or
fmul
in
cmpsl
cmpsl
inc
cmc
xchg
inc
cmp
dec
mov
repnz
fs
int3
addr16
xchg
push
mov
jnp
in
dec
gs
mov
clc
imul
mov
jnp
sub
inc
add
das
push
mov
les
mov
pop
cld
push
and
dec
gs
out
insb
test
mov
les
or
pushf
pushf
adc
sub
mov
mov
shlb
in
or
mov
data16
xchg
sub
imul
arpl
int
call
insl
in
pop
xor
rol
jne
mov
outsl
stc
adc
les
and
fwait
mov
mov
add
test
lea
into
iret
and
dec
fdivrl
in
cld
sub
or
xchg
pop
xchg
mov
adc
aas
shrb
mov
bound
push
int
pop
sbb
daa
int
in
adc
push
xchg
loope,pn
sti
arpl
mov
cmp
add
xchg
sub
in
xor
mov
es
adc
bound
cmc
nop
js
push
repnz
insl
dec
fwait
sub
test
lock
popa
sub
jbe
jo
mov
sub
xor
and
or
sub
jb
inc
pop
movsb
inc
lods
push
fldt
hlt
mov
cli
inc
mov
pushw
pusha
sarl
jle
scas
mov
repz
xor
scas
mov
popf
rorb
arpl
xchg
cltd
inc
in
stc
sbb
jno
dec
js
mov
enter
out
mov
ret
cmp
dec
out
iret
inc
ja
scas
jb
inc
jnp
es
push
inc
dec
sbb
sub
loop
xchg
pop
rcl
xorl
int
sbbb
mov
inc
mov
fistpl
nop
inc
adc
loop
pop
stos
lods
push
add
inc
sbb
inc
in
sub
daa
mov
xchg
adc
into
add
popf
cmp
movsb
fs
cmp
lahf
lea
mov
andb
in
scas
lret
mov
clc
mov
scas
jg
and
in
inc
data16
lds
add
lods
adc
xor
push
notl
gs
movaps
push
xor
out
fidivs
cmc
lcall
scas
sub
ret
into
leave
gs
mov
sbb
nop
cli
push
mov
lods
xor
xchg
jb
jne
jb
shr
ja
out
popa
nop
adc
mov
das
in
shlb
sub
sbb
sti
pop
int3
repnz
nopl
sbb
das
add
ljmp
or
rcll
jg
adc
gs
adc
push
lret
sub
jp
push
sub
fmuls
lods
mov
sub
jl
cmp
lock
popa
jp
jge
sbb
ja
mov
or
enter
pop
mov
lods
clc
jne
dec
xchg
pop
mov
scas
punpckldq
cmp
pop
enter
xchg
in
inc
aad
popf
add
sbb
and
fisttpl
jmp
shll
jb
pushf
test
push
adc
cli
shll
dec
mov
lea
loopne
dec
clc
lods
imul
inc
cmpb
or
je
jle
repz
cmp
arpl
jb
xor
sub
sbb
and
into
sbb
or
sub
dec
or
sub
pushf
dec
gs
daa
int3
inc
lret
mov
into
lcall
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
arpl
pop
divb
mov
push
sti
mov
test
lock
in
into
pop
rcrb
xor
mov
inc
add
push
fdivl
sahf
cli
xor
mov
mov
into
jnp
or
jmp
testl
pop
dec
aad
add
jle
inc
in
mov
mov
enter
pop
pop
sti
cld
into
xchg
inc
mov
stos
enter
pop
rol
fcoml
lahf
shll
jmp
popa
xor
cmp
adc
mov
xchg
jp
xor
cwtl
jae
mov
stos
push
cmpb
and
mov
aas
in
daa
stos
mov
pop
cmp
mov
fimull
pop
dec
add
adc
in
lods
gs
sbb
push
hlt
js
pop
movd
jecxz
cmp
cwtl
xchg
add
popf
sbb
insb
popa
mov
mov
fsubrs
jmp
xor
loopne
add
adc
dec
jo
pop
jmp
lea
xor
out
xchg
ja
pop
or
xchg
xchg
fmuls
pusha
rsqrtps
push
xchg
ficoms
mov
das
repz
pop
lahf
pop
add
jmp
aas
popa
sahf
push
mov
insl
sbb
inc
popa
adc
outsb
xor
fs
shll
xchg
jo
pusha
pop
jge
inc
mov
add
scas
sahf
cmpsb
pop
jp
adc
insb
adc
mov
ja
add
xchg
mov
aaa
into
std
ss
push
sti
sbb
imul
and
adc
testl
aas
lock
xchg
insl
xor
mov
mov
dec
sub
in
mov
pop
cmp
inc
andb
ja
push
iret
push
pop
ja
adc
add
xchg
xor
out
jns
jecxz
clc
pop
fsubrl
bswap
pop
cmp
or
or
or
or
or
or
or
or
xchg
jg
mov
push
rclb
lcall
sbb
icebp
out
lds
jmp
aam
imul
jno
rcrl
cmp
xor
cmp
lods
xor
adc
into
mov
leave
xchg
mov
xchg
sahf
out
mov
arpl
pop
jnp
lcall
adc
aam
je
lret
in
daa
xchg
jns
sub
push
sbb
orb
inc
mov
insb
mov
lods
lods
ljmp
out
in
shrl
mov
jo
push
xchg
or
xlat
pushf
nop
add
push
pop
dec
lea
sub
dec
mov
lret
sbb
xchg
loopne
and
lds
loopne
orl
mov
xchg
jp
movsb
lods
idiv
outsb
pop
orb
cmp
ljmp
xor
das
cmp
xchg
push
jo
fimuls
addb
jae
sbb
sub
cmp
mov
inc
xchg
inc
sarl
mov
xor
xlat
push
fs
cmove
dec
lret
push
shlb
daa
cld
not
ss
mov
dec
xchg
fisubl
shrb
mov
ss
cmp
cmp
cmp
jecxz
loopne
in
fld
notl
inc
mov
fisttpll
jmp
leave
das
cltd
jbe
ds
hlt
shl
sbb
arpl
je
leave
inc
in
adc
clc
aas
mov
loop
sbb
mov
dec
stos
out
ljmp
mov
dec
outsl
sbb
cs
or
jmp
inc
sahf
xor
sbb
iret
mov
jbe
mov
cmc
dec
nop
jbe
xchg
adc
mov
mul
dec
fdivl
and
aad
cmp
cld
push
int
xchg
mov
das
sbb
pop
insl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
loop
test
sbb
add
jns
push
cmp
cmp
std
adc
xchg
hlt
sbb
xor
call
icebp
orb
cmpsb
out
mov
and
lods
icebp
xor
lret
inc
mov
scas
sbb
lds
inc
notb
dec
mov
inc
lea
clc
xor
mov
mov
adc
sub
xchg
and
push
mov
out
and
and
pop
inc
in
mov
adc
jne
fs
sbb
mov
aam
stos
mov
inc
cmp
cwtl
and
fdivs
or
add
cmp
rcrb
dec
xchg
jae
mov
xchg
sbb
xlat
xchg
dec
loope
subl
pushf
dec
mov
pop
out
adc
pop
push
data16
sbb
or
pop
push
ret
fldl
xchg
push
nop
cmpsb
mov
pop
orl
shll
jne
daa
clc
scas
fdivrl
inc
insl
sbb
sarb
je
std
sbb
mov
iret
lods
call
jecxz
mov
in
sbb
ret
stos
mov
adc
push
mov
orb
mov
lods
gs
dec
jle
mov
out
addr16
testl
inc
xchg
icebp
icebp
xchg
incb
aas
adc
jg
outsb
push
fs
test
xchg
cmp
push
cmp
xchg
cmpsl
out
nop
mov
mov
add
cpuid
push
in
popf
iret
in
mov
cmp
sub
pusha
push
dec
push
imull
add
xchg
dec
jb
sbb
js
cmp
out
mov
or
push
mov
pop
mov
sbb
mov
out
fcomps
jmp
fdivrl
cmc
pop
sub
pop
xlat
xor
mov
test
jne
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
iret
inc
pop
cmp
cli
push
stos
outsb
ds
shll
fidivrs
jbe
sbb
cmpsl
je
icebp
mov
fnstenv
push
in
jne
sub
dec
in
or
stos
adc
cmp
ret
mov
das
das
mov
pop
jnp
or
fwait
jno
mov
push
or
inc
cmc
mov
push
je
lds
sbb
test
ss
icebp
jmp
repz
dec
jb
mov
rolb
out
jnp,pt
int3
in
leave
pop
mov
inc
sub
lods
and
or
jnp
shll
xchg
xchg
filds
or
adc
jnp
push
jnp
pop
jge
in
cwtl
mov
sub
xor
jecxz
xor
fs
xchg
mov
mov
lock
dec
or
inc
or
mov
jl
clc
pop
push
adc
mov
call
mov
stos
cmc
std
arpl
add
inc
push
or
cmp
cmp
enter
push
inc
insl
ljmp
xor
xchg
inc
mov
jp
or
adc
dec
sub
dec
dec
dec
repz
mov
lret
mov
mov
scas
pushf
sbb
inc
es
stc
lods
and
cld
test
gs
or
xor
xor
jg
test
ret
mov
mov
stos
das
das
sbb
lea
ret
movsb
push
or
aaa
int
call
push
jmp
push
xchg
ja
cld
popa
out
fwait
aad
pop
add
jbe
jl
cmp
clc
sbb
decl
in
mov
cwtl
xor
out
iret
push
mov
pop
xchg
mov
orb
cmp
call
lods
xorb
lods
outsl
out
jne
ljmp
cmp
mov
push
mov
loopne
icebp
push
xchg
loop
dec
or
or
or
or
or
or
or
or
or
or
or
or
popa
cmp
xor
mov
cmp
and
jno
push
lahf
add
cli
std
filds
push
out
dec
sub
das
inc
int3
mov
xchg
call
or
mov
push
mov
cmp
dec
mov
gs
fstpl
pop
loopne
jne
test
lret
xchg
mov
push
sub
test
xor
mov
gs
adcl
shrl
in
das
push
dec
pop
dec
fnstcw
push
mov
movsb
loopne
pop
sub
leave
or
or
push
push
ret
push
mov
inc
push
push
stc
or
push
adc
push
out
or
cmpsl
jmp
and
gs
and
add
xchg
push
repz
das
jle
xor
cld
add
lret
jno
mov
data16
mov
test
lds
into
cmp
or
xor
xchg
xchg
mov
inc
push
cmp
out
jmp
lock
adc
ja
das
repz
out
addr16
in
inc
jae
iret
jbe
loope
movsl
test
hlt
dec
int3
push
cmpsl
jg
and
cmp
cmp
mov
in
jae
jo
adc
jle
roll
test
add
jge
fildll
mov
je
loope
lods
push
dec
outsb
fdivrp
addr16
mov
push
fwait
es
add
and
sbb
aad
xchg
push
cli
pusha
out
in
popa
gs
push
movsb
das
leave
es
sbb
in
add
fsubrl
dec
adc
mov
cld
inc
pop
das
mov
movsb
inc
adc
call
in
les
mov
test
sbb
je
loope
iret
lcall
and
daa
mov
outsb
scas
pusha
inc
mov
jecxz
mov
cmp
testb
test
xor
gs
add
push
pop
out
cmp
int3
dec
mov
adc
hlt
cmpsb
adc
call
outsb
mov
mov
push
xchg
rep
or
mov
xor
test
cmp
dec
pop
test
aam
mov
repz
ficomps
adc
push
and
sub
cmp
mov
ja,pn
fists
or
insl
int3
mov
xchg
dec
or
sub
add
mov
pop
icebp
outsl
fdivr
sub
ja
fwait
pop
jecxz
pop
mov
stos
mov
or
mov
adc
aaa
fs
jmp
das
enter
adc
insb
push
inc
jne
pop
jb
test
push
cwtl
inc
adc
jl
jl
push
fadd
inc
xchg
mov
adc
xchg
es
notrack
imul
xor
sub
xor
cs
xchg
clc
in
sbb
xchg
pop
sub
data16
sub
fs
vmaskmovps
ret
xchg
cs
lret
xchg
sbb
and
pop
adc
mov
mov
lcall
sarl
imul
test
sbb
fldenv
enter
jmp
into
or
mov
iret
sub
out
xchg
or
shrl
call
and
sub
adc
xlat
out
or
ja
dec
data16
cld
sbbb
lea
sahf
emms
pusha
cmp
push
ret
xchg
push
sbb
insb
jnp
arpl
pop
mov
imul
ret
or
imul
jo
scas
insb
ret
in
sbb
scas
cmpsb
mov
or
or
or
or
or
or
jne
add
fs
inc
les
mov
cld
ljmp
je
gs
cmp
stc
pop
inc
mov
jmp
adc
push
fdivr
mov
in
mov
pop
pop
inc
add
jo
scas
pop
jne
les
aaa
roll
dec
scas
inc
pop
sub
loop
mov
out
mov
cmpsl
inc
cmp
xchg
ljmp
movsb
adc
shlb
mov
pop
out
mov
mov
adc
loope
adc
add
int3
cmp
jp
test
mov
sbb
cmp
rorb
mov
pop
mov
scas
cmp
adc
inc
sub
addr16
and
mov
fnsave
push
rcl
movsb
mov
fabs
jmp
and
sbb
pushf
je
lret
inc
push
popf
pop
pop
insl
pop
popl
rorb
adc
sub
add
es
pop
and
je
insl
repnz
push
stos
sbb
mov
push
out
adc
scas
insl
stos
add
pop
ljmp
add
in
pop
andb
popa
dec
das
cli
in
fwait
in
jg
repz
add
mov
pusha
mov
inc
mov
push
stos
pop
cmpsb
imul
fnstsw
ja
mov
xchg
adc
and
push
aad
rcll
mov
xorl
or
adc
xor
mov
out
mov
xor
inc
adc
push
iret
mov
sub
rcl
adc
mov
out
addr16
push
jmp
sub
sub
and
imull
xor
mov
ds
std
lcall
test
int
mov
pop
icebp
push
popf
and
sub
or
sbb
or
into
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
insb
imul
pop
xchg
xchg
xchg
sub
and
mov
es
enter
aad
inc
push
xor
es
cltd
int
inc
pop
mull
sub
mov
lods
bnd
inc
dec
cmp
and
pop
pop
rolb
lea
cmpsb
les
lret
sbb
insl
or
jl
jecxz
push
icebp
push
sbb
hlt
jecxz
mov
pushf
iret
nop
mov
push
and
into
in
inc
pop
xlat
pushl
cwtl
enter
test
test
sbb
cmp
repnz
cld
outsb
push
mov
push
ds
dec
xor
mov
or
mov
js
sub
loope
dec
push
clc
sub
fbstp
push
scas
mov
dec
in
jno
sbb
add
inc
adc
mov
jg
scas
mov
loop
jecxz
dec
rclb
iret
mov
mov
mov
xor
repz
cmc
xlat
cwtl
scas
dec
stos
push
mov
jne
mov
cmp
xor
inc
sbb
sub
rorb
lcall
ljmp
in
pop
in
or
xor
mov
popa
shrb
js
rorb
add
sub
xor
xchg
shl
pop
addr16
jg
test
sub
sti
hlt
mov
adc
push
jp
xchg
xor
fistpll
jl
loop
dec
xchg
call
sbb
fisttps
push
add
shlb
mov
mov
mov
aam
jbe
movsb
test
sub
xlat
push
sti
hlt
jae
jnp
enter
fcmovnbe
out
ljmp
push
dec
dec
adc
cmp
enter
cli
popa
mov
data16
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
test
fimuls
addr16
incl
push
mov
push
popa
and
and
js
sbb
jl
out
sbb
outsl
in
dec
dec
jl
jl
push
addr16
frstor
std
rcr
push
out
or
add
sub
add
push
insb
pop
mov
xor
fldl
das
lods
and
sbb
cld
xor
jae
jmp
dec
dec
mov
mov
jp
mov
clc
lods
cld
inc
cwtl
mov
pop
xor
nop
std
xor
fldcw
int3
add
fmul
js
pop
lcall
xor
jb
mov
inc
jb
out
shrl
fidivl
addr16
or
mov
pop
test
jge
loope
sahf
test
repz
lods
pusha
xchg
push
add
sti
sbb
mov
jmp
inc
mov
aad
pop
cmp
lcall
adc
and
pop
pop
cmpsb
inc
push
aam
cs
flds
xchg
test
lock
insl
cmpsb
and
inc
subb
neg
sti
cmp
les
daa
jo
and
andb
ljmp
adc
outsl
ret
fildl
mov
imul
mov
cmc
je
movsb
dec
xchg
aad
inc
fisttpl
sbb
fnstcw
adc
cmp
pushf
lods
dec
orl
fld
jne
pop
xchg
shll
mov
adc
ds
addr16
add
fadds
call
adc
lret
popf
notb
pop
mov
cmpl
pop
mov
adc
lret
pop
insl
jnp
loope
test
jae
lahf
mov
pop
in
xor
and
add
ss
fisttpl
xor
mov
inc
test
enter
test
pop
les
and
les
les
mov
jge
or
or
or
or
or
or
or
or
or
or
or
or
lock
and
mov
or
push
sub
sbb
ss
xorb
jle
push
nop
in
dec
arpl
adc
lods
jb
mov
dec
cld
add
sarb
pushf
rorl
test
lods
test
push
jnp
sub
push
adc
mov
outsb
inc
imulb
jno
xchg
pop
dec
sti
dec
das
jl
jg
xchg
test
cmc
lods
sub
mov
das
pop
outsb
test
jp
mov
adc
mov
add
pop
or
in
cmp
dec
and
cmp
mov
call
push
std
mov
xor
cmp
fcomps
mov
xchg
push
add
aam
fcomp
je
or
lret
stc
jge
into
add
sbb
subl
pop
jnp
jmp
cs
xchg
inc
push
mov
xlat
jmp
insb
pop
pop
insb
sbb
pop
cli
mov
call
add
test
in
rcrb
pop
sub
cmc
leave
mov
sahf
push
fwait
mov
cmp
add
out
xor
loop
cmp
movsl
sbbl
adc
mov
outsb
filds
cwtl
mov
xchg
pop
hlt
imull
ss
stc
std
clc
or
sahf
mov
es
cmp
push
pop
xchg
out
add
jno
add
pop
sahf
in
xchg
ret
mov
push
outsb
dec
cwtl
outsl
dec
stc
ret
in
ja
stc
test
lcall
sbb
xor
xor
ljmp
pop
pop
dec
jb
jo
aam
mov
fs
test
mov
mov
les
sub
cmp
cmp
mov
aam
cltd
test
int3
cltd
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
ja
jae
addr16
lods
xchg
adc
inc
repz
nop
push
std
xchg
mov
andl
mov
packsswb
enter
in
mov
add
adc
in
sbb
ret
sbb
rcrl
mov
call
cwtl
movsl
push
push
xor
adc
repz
xchg
cwtl
adc
loop
push
mov
or
or
aas
jecxz
stos
pusha
adc
data16
jo
xor
jle
push
leave
out
sub
adcl
and
leave
xchg
jle
out
rcrb
and
out
ds
cwtl
pop
bswap
mov
and
jg
pop
push
rcr
fbstp
rclb
inc
js
add
fwait
test
int3
sahf
out
cmpsb
fisttpl
cli
clc
dec
jg
movsb
lods
sub
lahf
mov
dec
cld
adc
leave
xor
es
pop
dec
shrb
adc
idivl
pop
out
scas
mov
jle
jo
mov
xor
inc
mov
push
out
out
push
es
and
push
call
pop
jg
movsl
push
mov
sbb
out
and
pop
cld
call
xchg
jp
and
pushf
stos
add
mov
ljmp
mov
jno
inc
cwtl
inc
lcall
test
pusha
and
loope
mov
cwtl
es
adc
mov
insb
test
cltd
imul
mov
popa
in
cmp
lcall
iret
jge
lcall
pusha
sti
xchg
setp
loop
pop
jne
sbb
pop
pushf
lcall
in
lret
fs
jecxz
fsubrs
mov
push
loopne
inc
adc
sti
jb
inc
dec
in
fs
lods
or
or
or
or
or
or
or
or
lret
dec
lcall
inc
adc
jmp
lods
xor
pop
jne
cmpb
add
test
dec
popa
add
in
orl
int
adc
iret
es
loopne
addl
sub
stos
mov
int3
or
stos
outsl
lods
jmp
jno
xchg
add
xor
outsb
mov
add
mov
lods
insl
cmp
cmp
mov
pop
sarb
test
jb
inc
adc
rclb
sub
aas
dec
out
lret
add
pushf
ficomps
je
movl
sbb
test
pop
out
insl
mov
out
fadd
test
icebp
lea
ja
imul
pushf
js
push
ljmp
shll
ljmp
repnz
add
arpl
das
dec
mov
fstps
cwtl
cmp
int3
jmp
jb
jo
push
call
mov
ds
nop
jge
pop
loope
gs
cmpl
sub
ficomps
pop
sub
push
jns
pop
movsb
fisubrs
mov
sbb
movsl
xlat
jecxz
mov
gs
cmp
pop
and
sbb
jne
inc
adc
mov
push
jns
dec
cltd
cli
jg
pop
push
nop
xchg
inc
fbstp
lret
roll
or
sbb
movsb
pop
dec
andl
inc
sbb
je
std
lds
add
adc
scas
and
adc
pushf
ja
shlb
pop
inc
lods
pop
icebp
insl
inc
rclb
in
scas
call
test
xchg
sarb
pop
pop
loopne
push
repz
pop
inc
fists
fmuls
add
or
push
mov
mov
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sbb
and
add
push
fisubl
sub
in
and
mov
movsb
shrl
pushf
and
test
dec
jecxz
pop
xlat
inc
dec
bound
in
aad
cld
fidivs
stc
dec
mov
push
std
pop
sub
mov
inc
mov
lret
cmc
inc
and
ljmp
test
lock
jno
rorb
sbb
insb
pop
cmpsl
cmp
fstp
dec
ret
push
cltd
daa
cs
mov
push
ja
sti
subb
pusha
cli
dec
or
xchg
lods
jnp
js
insb
mov
push
inc
scas
xchg
outsl
adc
pop
xor
pop
inc
in
pop
mov
fldenv
rcrb
out
int3
lcall
fmull
dec
imul
inc
mov
mov
jae
pop
add
dec
sbb
stos
fucom
xchg
test
dec
mov
pop
sub
jl
mov
mov
stos
and
sub
inc
shrl
xor
fs
jne
adc
aam
pop
mov
mov
and
ret
and
aaa
ds
hlt
pop
enter
shrl
pop
stc
jo
adc
cwtl
mov
shl
or
cmpsb
add
or
daa
inc
pop
movsb
decl
clc
lods
dec
repz
cld
push
rcl
mov
sub
sbb
mov
test
lock
sarl
das
cmp
das
mov
mov
mov
adcl
pushf
test
dec
adc
cmp
sbb
repz
pop
jmp
popa
xchg
xor
xchg
clc
pop
repz
call
xchg
je
hlt
and
or
pop
ret
test
inc
xchg
jp
push
inc
sbb
sbb
rcrb
fistps
loope
push
xor
mov
add
out
in
mov
pop
sbb
jle
jbe
fwait
xchg
sti
mov
push
xchg
pop
mov
clc
hlt
fwait
cld
mov
lahf
mov
scas
or
pushf
cwtl
cmp
sbb
je
jg
insb
cmp
xchg
stos
inc
xchg
add
xor
sbb
or
mov
cld
pop
inc
ljmp
mov
int3
stos
pop
pop
adc
dec
xchg
jne
mov
imul
cwtl
or
repz
es
movsl
sarb
dec
nop
imul
sbb
inc
popa
jb
mov
xor
sub
add
fs
dec
mov
test
shlb
cmp
and
pop
push
adc
fisttps
jp
mov
mull
or
leave
out
bound
and
pushl
popa
mov
adc
sbb
pop
xchg
iret
movsl
psadbw
jecxz
cmp
lret
cli
dec
jmp
xchg
push
jns
cwtl
dec
sub
dec
dec
push
daa
cmpl
inc
sub
mov
cmp
popw
loop
test
div
and
xchg
sbb
clc
push
sub
pop
push
aad
popa
jns
repnz
into
cmpsb
pop
adc
xor
jecxz
dec
outsl
xor
jecxz
dec
mov
or
fwait
test
test
movsb
fwait
test
incb
mov
cs
dec
adc
movsb
push
ss
add
sub
ljmp
inc
aas
pop
flds
call
or
pop
jmp
fs
sbb
push
sub
mov
cmp
mov
insb
inc
add
stos
out
cwtl
jno
test
dec
test
xor
mov
jno
dec
mov
in
or
sbb
mov
out
or
push
mov
mov
or
or
or
or
or
or
or
or
or
or
or
or
in
jnp
aas
scas
jg
push
pop
dec
push
adc
aam
popa
leave
into
scas
lea
jg
out
fwait
inc
sub
js
push
leave
jb
mov
cli
in
pop
jle
adc
or
push
dec
adc
mov
scas
pop
lods
push
fs
cwtl
test
xchg
sti
mov
push
lods
loopw
pop
cwtl
mov
cmc
and
push
or
nop
xor
mov
dec
mov
adc
xor
mov
adc
arpl
inc
xor
sub
fwait
loop
pop
out
pop
mov
push
inc
dec
jmp
and
sbb
bound
das
mov
int
inc
loope
mov
fs
push
push
xlat
inc
test
stc
hlt
cwtl
cmpsl
xchg
gs
rorb
aad
dec
xlat
orb
push
jb
mull
and
or
pop
movsb
dec
cmpsl
fwait
mov
pop
cmc
add
enter
pop
fcompl
inc
dec
movsb
repz
xchg
lahf
push
pop
pushf
sti
adc
jnp
pop
into
iret
sub
sarl
push
push
cltd
xchg
test
inc
dec
inc
sbb
lds
repnz
arpl
sub
jecxz
xor
mov
enter
and
jecxz
sbb
insl
push
inc
stos
pop
pop
inc
mov
insl
fs
loop
into
and
into
addr16
mov
sbb
ret
jl
xor
hlt
outsb
sub
sahf
lods
aad
loopne
rorl
rolb
lods
sbb
push
cmp
adc
lods
jmp
scas
stos
clc
mov
mov
jns
xor
fsubrs
mov
dec
int3
adc
enter
daa
and
pushf
arpl
decb
shrl
filds
jb
and
mov
into
fnstenv
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
push
xchg
dec
arpl
lds
cmp
loopne
leave
sbb
lret
test
xchg
pop
sub
hlt
loop
shl
daa
push
jge
fistpll
adc
push
cli
rorb
data16
fs
sub
jnp
data16
jae
push
push
scas
adc
cmp
ja
push
vxorps
dec
pop
xor
fidivrl
jbe
sub
cmp
inc
and
mov
lods
out
lcall
mov
push
lds
xchg
push
adc
mov
xchg
xor
pop
fwait
add
mov
mov
sub
jmp
aam
mov
mov
inc
addr16
int
push
loopne
stc
push
jp
xchg
aaa
outsb
and
mov
cmp
rolb
std
dec
fisubrs
in
outsb
xor
out
test
js
xor
mov
mov
jle
pop
push
jmp
sub
mov
lret
movsb
movsb
xchg
and
mov
mov
push
ficoml
jecxz
loopne
xchg
incl
cmpsb
dec
imul
jecxz
cld
dec
bound
out
imul
and
xor
sub
in
aaa
xor
and
es
std
pusha
adc
adc
xchg
movsl
cmp
or
xchg
in
out
loope
xchg
push
inc
lods
in
rolb
leave
addr16
cmp
insl
inc
xor
jbe
mov
cmc
xlat
and
push
test
sbb
hlt
loopne
xor
inc
sub
inc
fcomps
push
fstp
push
sub
ljmp
dec
dec
fwait
imul
inc
lret
insb
sbb
push
xchg
lea
mov
cwtl
sbb
or
add
cmp
call
push
sbb
int3
xorps
push
pop
icebp
fdivs
push
mov
sub
push
push
sub
pop
imul
stc
xchg
int
xchg
xchg
or
lock
notl
xor
and
movsb
mov
bound
ja
adc
imul
push
aaa
add
adc
test
hlt
outsb
outsl
pushf
inc
pop
fsts
jne
add
cmp
test
add
lods
mov
sbb
shlb
jge
push
clc
roll
sarl
loop
int3
sub
inc
cltd
or
xor
ljmp
lods
outsl
mov
mov
jle
dec
xchg
ret
rolb
push
jae
xor
arpl
movsb
mov
enter
or
dec
push
jno
xor
cli
fs
jne
sub
mov
jmp
call
pushf
addr16
add
xchg
test
xchg
mov
lods
aas
pop
aad
lods
jge
mulb
mov
mov
imul
mov
push
push
and
dec
dec
mov
add
nop
jg
scas
sbb
test
jno
jl
lcall
jo
lret
mov
lcall
sub
adc
pop
lret
imul
scas
mov
int3
inc
jb
scas
inc
scas
push
dec
mov
mov
pop
sbb
push
mov
or
fisubrl
lret
hlt
lods
aaa
mov
ja
mov
iret
add
sub
pusha
stos
xor
inc
lods
cmp
cmpsl
xchg
fsub
popa
xor
cmp
mov
ja
dec
das
add
clc
xchg
aam
bound
pop
xchg
cmp
stos
mov
cmpsl
xchg
push
sub
adc
dec
out
test
rorb
xchg
outsl
mov
push
inc
repnz
add
push
xlat
int3
inc
ds
mov
xor
sbb
jo
mov
inc
into
inc
orb
outsb
xor
sub
or
sbb
jae
mov
loopne
add
add
push
cltd
mov
inc
iret
notb
je
int3
mov
push
push
leavew
insb
pop
lea
mov
pushf
bound
sbbb
jns
mov
pop
mov
xchg
push
add
xchg
jnp
fstpt
mov
and
pop
sub
js
inc
pushf
je
icebp
or
push
xor
insb
sti
int
rolb
js
stos
dec
jle
loopne
ds
or
jecxz
mov
fcompl
shlb
add
sub
xchg
jg
sub
mov
add
out
stc
and
mov
inc
sbb
dec
out
or
enter
mov
imul
jmp
lret
mov
push
push
adc
or
aam
dec
ret
pop
jmp
imul
inc
or
inc
cmp
pop
outsl
mov
lea
shl
adc
push
insb
mov
shrb
push
shlb
fs
lret
mov
mov
fisttpl
or
push
lret
and
sub
out
dec
xor
pop
movsb
insl
dec
js
ret
mov
setae
mov
lahf
push
jae
mov
in
and
mov
repnz
inc
and
xor
lea
lock
push
incb
cli
or
push
ja
cmp
push
cmp
movsl
adc
imulb
lahf
mov
or
or
mov
cld
cwtd
addr16
or
mov
movsb
push
pusha
mov
and
xchg
jg
repnz
mov
shl
xchg
push
push
sub
push
mov
mov
hlt
mov
inc
scas
pop
pop
into
mov
xchg
fisubrs
lcall
add
push
push
cld
scas
int
lods
lea
shr
fs
pusha
rep
push
pop
dec
add
add
scas
sbb
cli
and
push
push
daa
hlt
repz
and
test
push
addr16
out
mov
or
not
xor
out
vcomiss
adc
sub
cmp
cmp
iret
out
push
popf
cmp
xchg
iret
fsub
rep
mov
cmpsb
pop
sub
popa
adc
dec
inc
inc
fcompl
lea
jecxz
xor
cwtl
pop
into
mov
jge
mov
fcoms
hlt
mov
je
out
cltd
mov
scas
and
push
sbb
cmp
sahf
cmp
mov
popf
arpl
mov
mov
fidivrs
xchg
iret
push
js
pop
jo
fnstcw
repz
rcrl
nop
hlt
fistps
xor
outsb
sub
std
popf
dec
aas
xor
ljmp
enter
sbb
mul
pop
mov
mov
imul
push
lods
xor
jge
sti
mov
dec
cs
cmp
test
addr16
inc
cmp
lahf
in
push
dec
cltd
or
into
cmp
mov
jno
or
leave
ret
jp
scas
out
in
sti
sbb
les
sahf
out
and
and
cmp
popa
pushf
mov
or
cmpsl
cmp
or
scas
sbb
loope
jne
call
dec
sbbl
cs
ret
jns
sbb
fdivrs
pop
add
lock
sbb
cmc
or
mov
repz
sarb
popf
mov
xlat
ss
popa
adc
ja
inc
dec
adc
jns
mov
or
fwait
cwtl
pop
push
loopne
dec
sub
add
jl
xchg
leave
push
in
neg
fbld
mov
mov
lock
jle
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
push
fiaddl
lods
imull
fmuls
fcompl
cmpsb
shrl
lods
lcall
add
push
and
and
pop
jnp
push
cmp
xor
cmc
mov
lock
das
or
mov
dec
mov
dec
lods
mov
push
xor
push
lret
dec
sbb
mov
insl
inc
fistpll
mov
push
xor
in
add
pop
fsubs
push
adc
fs
addr16
mov
cmp
and
xlat
pop
sbb
add
dec
jmp
arpl
loop
lret
loop
xchg
mov
int
dec
pop
add
inc
xchg
add
sbb
jmp
push
or
dec
jecxz
inc
das
xor
inc
pop
push
imul
inc
into
enter
dec
cmc
sarb
es
bound
andb
pop
into
cli
rclb
and
jns
mov
stos
arpl
push
gs
mov
dec
sub
cmp
inc
sub
jno
mov
imull
sub
clc
lock
lods
ja
je
push
inc
inc
outsb
rcll
mov
inc
std
xor
ret
add
and
inc
xor
ja
jl
aad
jge
jb
jo
mov
cmc
xor
xor
mov
push
ficompl
call
negb
jno
push
adc
lahf
sbb
mov
sbb
flds
mov
sbb
mov
loope
divl
mov
push
les
andb
shlb
sbb
sahf
xor
xor
add
cli
add
aas
in
push
bound
sahf
ja
out
shll
orb
loope
adc
cmp
mov
mov
mov
das
fcoms
add
out
or
or
or
or
or
or
or
or
or
or
or
or
add
shrl
fs
mov
clc
dec
pop
dec
je
xor
mov
push
insl
sbb
cmp
aaa
pushf
pop
scas
insb
sar
iret
mov
inc
pop
test
push
xchg
add
jg
lret
xor
add
fcoms
ja
xlat
xchg
je
das
cwtl
aaa
mov
test
clc
popa
fldcw
and
scas
xor
cmc
mov
out
and
repz
mov
aad
in
rclb
cmp
mov
push
mov
sub
sahf
cltd
pop
and
xlat
push
mov
mov
orb
mov
xchg
xor
dec
adc
and
fcoml
sub
jno
enter
xchg
sahf
cmp
and
dec
inc
push
sub
test
push
push
pushf
fisttpll
sbb
inc
shrb
dec
mov
add
cmp
xorb
sti
push
in
add
dec
repz
int
cld
iret
mov
cli
ja
dec
stc
notb
mov
sub
jns
mov
mov
jg
xor
dec
sub
das
loopne
dec
jle
jmp
frstor
arpl
mov
adc
cmp
dec
dec
test
cwtl
std
xchg
xor
mov
jg
je
scas
sbb
push
ljmp
ret
adc
xlat
push
leave
lds
clc
into
mov
mov
fcompl
cmp
adc
addb
sub
les
icebp
jno
lods
cmp
cmp
sbb
or
cmp
and
ja
jge
mov
aas
outsb
fsts
xor
addr16
adc
ja
jne
sbb
pop
js
push
adc
mov
hlt
fwait
inc
stc
in
xchg
mov
mov
filds
psrlw
lods
pop
adc
fists
call
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
pop
call
dec
sbb
fdivrs
add
jecxz
cmp
arpl
push
iret
xchg
jecxz
dec
adc
ja
adc
xchg
imul
mov
add
pop
xor
sub
pop
mov
dec
cmpsb
stos
out
ja
push
rorb
push
adc
addr16
out
fs
xor
adc
fimuls
mov
jge
fdivs
push
add
daa
xor
add
loopne
pop
inc
xchg
js
sbb
fdivrl
push
pop
jecxz
or
imul
clc
mov
ffreep
insb
jae
aam
inc
cmp
sub
stos
or
mov
sub
jle
add
cld
insl
push
mov
fsubs
lahf
loopne
sbb
lods
jmp
in
push
add
out
nop
data16
orl
repz
mov
mov
mov
push
test
movsb
xchg
enter
mov
insb
div
inc
jo
addl
pushl
shll
or
mov
pop
mov
xor
mov
dec
mov
sbb
fsubrp
xchg
inc
sbb
shrl
xor
movsb
and
test
mov
adc
xlat
mov
sbb
scas
push
sub
mov
jne
not
andl
aam
sub
movsb
or
pop
mov
xor
pop
leave
cli
in
imul
mov
int
push
mov
outsl
lcall
insb
mov
std
iret
cwtl
jns,pt
hlt
int
test
cmp
cmc
sub
xor
mov
inc
insl
xchg
in
mov
test
rorb
cmpsl
pop
xchg
cmp
adc
test
xor
and
cmp
add
out
jno
es
mov
mov
or
sbb
testl
fcmovnu
pusha
xor
insb
sahf
test
sub
push
popa
fcomps
stos
push
sbb
clc
cmpsl
adc
fisubs
clc
mov
push
addr16
sub
jg
pushf
cmp
pop
sbbl
adc
push
call
xor
push
leave
out
shrl
sub
clc
cld
iret
nop
or
into
inc
mov
ret
mov
test
sbb
pop
lcall
mov
fisttpl
cld
std
add
insl
out
mov
clc
add
xor
jae
lea
mov
adc
fidivrs
pop
in
mov
ret
cmpb
movsb
pop
test
cltd
je
jmp
and
push
mov
test
leave
and
subb
adc
xchg
xchg
loopne
cmp
xor
push
push
loopne
decb
jbe
pusha
sub
test
adc
enter
sbb
add
insl
aad
pop
sub
dec
gs
pop
push
and
call
lods
mov
xchg
sti
sarb
jecxz
cmpb
inc
push
addb
dec
adcl
sbb
or
cli
cltd
shlb
jo
dec
movsl
add
lret
insb
mov
push
push
iret
and
mov
sti
shrb
int3
imul
sahf
out
inc
xlat
out
pop
add
popa
add
jb
dec
xchg
inc
xor
lea
mov
and
icebp
nop
pop
aas
dec
mov
sub
xchg
xchg
ja
mov
mov
push
pop
sarl
aas
cmp
mov
cmp
xchg
xor
loope
sbbb
ret
call
adc
sbb
xor
into
roll
and
clc
insb
icebp
cmpsl
mov
or
lods
fisubs
mov
xor
push
pavgw
inc
push
jnp
out
cmp
and
in
cwtl
inc
pop
int3
cmc
lahf
sti
cmc
out
pop
xchg
mov
lcall
or
cli
adc
cwtl
jnp
push
test
fdivr
jbe
test
mov
test
cld
cmpsl
pop
xor
ss
in
pushf
push
mov
call
fldl
ret
and
push
push
dec
sub
out
stc
mov
mov
fdivp
sbb
pop
scas
mov
push
mov
into
call
mov
mov
sub
inc
and
mov
scas
in
jno
xchg
insb
adc
inc
dec
xor
push
dec
inc
mov
jbe
adc
adcb
outsb
nop
popl
jle
xchg
int3
aam
adcb
out
or
cmp
adcb
shrb
loopne
adc
inc
lods
movsb
push
pop
cmp
sahf
mov
std
xor
rcr
mov
loope
xor
cld
jo
push
test
out
push
xor
dec
iret
ljmp
into
push
jae
mov
dec
je
mov
jb
and
sti
cmc
cmp
arpl
in
xor
sub
mov
xor
jle
call
movsl
sti
jbe
cli
clc
icebp
add
stc
sar
ret
add
mov
inc
push
pop
inc
shll
cmp
ljmp
enter
aam
push
push
loop
sub
sbb
stos
pop
mov
push
add
xchg
loope
mov
lods
repnz
inc
mov
adc
aad
nop
push
das
std
mov
ret
ss
cmc
xchg
xor
mov
lods
in
xchg
inc
ficomps
sbb
rol
cmpsb
jl
hlt
mov
ficomps
lea
push
ljmp
sbb
cmp
loop
in
sub
inc
xor
push
rclb
pop
stos
stos
mov
ljmp
ja
in
call
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
dec
inc
sub
xor
xchg
ret
cli
and
cwtl
mov
inc
outsb
jecxz
inc
cwtl
cmp
mov
mov
repnz
cltd
gs
repnz
sbb
sub
repz
mov
and
mov
pusha
mov
enter
int3
adc
and
leave
sbb
xchg
or
jmp
ficomps
cmc
sahf
xchg
sbb
lret
orb
push
jne
popf
or
out
inc
jns
aaa
das
mov
jbe
push
cmc
mov
pop
xchg
outsl
adc
pop
add
bound
rcll
nop
or
loop
inc
loop
cmp
dec
mov
push
lds
or
cld
jge
pop
scas
mov
push
enter
lret
xchg
dec
dec
daa
repz
enter
cmp
data16
inc
imulb
sub
cmp
dec
neg
sbb
mov
imul
cmp
call
adc
popa
add
fs
testl
fsubs
popa
mov
sub
pop
fidivrs
mov
pop
add
pop
xorb
lret
jecxz
xchg
mov
push
fildl
and
push
hlt
pusha
xchg
inc
dec
add
push
out
pop
sbb
and
pop
sarl
div
pop
or
stc
mov
pop
pusha
cmp
les
sbb
aam
cmpsb
jnp
push
jbe
jae
adcb
sbbl
aad
pop
xlat
push
jg
call
mov
inc
notb
aas
in
call
push
in
xchg
gs
add
cltd
sarb
out
push
mov
and
jmp
inc
mov
push
pop
jle
add
sub
fwait
pop
lret
addr16
mov
xor
mov
sbb
test
outsb
xchg
in
xor
mov
mov
jl
add
ret
push
ljmp
xchg
mov
jg
fnstcw
sub
nop
cmp
pop
cs
sbb
adc
inc
test
popa
aam
out
and
pop
cmpl
cmp
mov
fisttpl
int
aas
sarl
xor
cmp
gs
cs
scas
hlt
mov
mov
jae
das
and
clc
aam
cmc
pop
fld
iret
push
push
cwtl
xlat
pop
aaa
dec
repz
xchg
pop
adc
cmp
mov
ds
inc
push
jl
adc
jo
and
mov
test
sbb
lret
push
loopne
out
subb
xor
mov
mov
jns
inc
fldt
js
mov
cli
jg
jne
sub
lret
popa
jno
dec
mov
mov
mov
enter
fs
jno
outsl
jae
int3
or
mov
or
jns
pop
xor
mov
test
ljmp
das
mov
inc
imull
out
out
push
jae
sbb
xchg
xor
mov
jno
add
jo
push
adc
fcompl
outsl
add
mov
hlt
dec
dec
pop
ja
add
adc
pushf
pop
ljmp
lods
mov
xchg
xchg
pop
cmp
pop
dec
imul
shl
mov
out
cmp
jo
jmp
sbb
adc
lock
push
xlat
cli
xchg
inc
and
lock
pop
inc
shld
adc
inc
in
loopne
imul
int
hlt
iret
sub
add
in
push
out
mov
xchg
sub
lret
pusha
mov
lcall
arpl
mov
test
adc
jmp
sub
mov
stc
jno
dec
das
cmc
xchg
or
or
or
or
or
or
or
or
or
or
or
or
jge
or
mov
jmp
data16
mov
outsl
clc
les
sti
stos
roll
negb
fldenv
int
or
sti
pop
jne
bound
cmpsb
ret
cmpsl
in
push
adc
pop
mov
and
cwtl
mov
xchg
pop
xchg
and
and
jno
pop
shrb
jnp
mov
adcl
faddp
mov
mov
jno
jbe
mov
fsubs
push
je
inc
xor
mov
push
add
sahf
mov
cltd
xchg
sbb
sub
lods
lods
xchg
cmpsb
into
inc
pop
dec
xor
enter
test
mov
push
in
stos
cs
lods
sti
pop
pop
stos
fsubl
jo
pop
ljmp
jp
cmp
jl
repz
add
mov
lcall
lock
int3
pop
jo
test
fisttpll
fdivs
jno
pushf
test
push
lret
and
pop
and
xor
movsl
push
js
pop
pop
pop
sub
sarb
xlat
rdtsc
sub
mov
mov
or
addl
cs
mov
jne
aam
test
xchg
cmpsl
add
push
arpl
rcll
nop
mov
or
in
sub
push
sub
lods
andb
daa
xchg
cmp
inc
lods
jnp
add
jns
xor
adc
mov
aas
pop
ljmp
je
loop
shld
add
xchg
movb
hlt
mov
jae
mov
hlt
es
fcmovnbe
dec
mov
pop
hlt
in
lock
add
pushf
push
jnp
push
push
pushf
lret
cli
outsb
jnp
ficoms
cs
mov
adc
lahf
int
pop
outsb
pop
scas
int3
adc
mov
mov
icebp
lret
xchg
dec
xchg
inc
into
mov
add
arpl
push
fwait
call
mov
lea
fsubrl
nop
and
dec
add
insl
adc
daa
iret
gs
sub
pushl
mov
cli
pushf
cli
test
andb
scas
repnz
mov
test
mov
scas
adc
push
cld
pop
insb
inc
stos
adc
jnp
mov
lret
ficompl
push
movsl
or
fwait
outsb
mov
mov
push
stos
fdivrl
jge
sbbb
dec
or
jb
sbb
in
xchg
jmp
push
mov
add
imul
push
repz
std
mov
pop
dec
aas
int
dec
or
adc
shl
shlb
sub
in
or
flds
clc
pop
subb
adc
jae
je
jns
push
jg
fcomp
jp
out
jmp
js
adc
js
dec
aas
push
jo
in
sahf
and
inc
fimuls
test
cmc
xchg
js
sahf
xchg
jl
sub
and
xchg
or
ds
cmp
jge
pop
pop
jb
inc
mov
gs
out
and
rcrl
or
add
add
mulb
cltd
xchg
dec
test
lcall
into
repnz
mov
iret
add
bound
jge
rcrl
jg
stos
push
dec
push
xorb
popf
add
mov
adc
push
lahf
sbb
push
cs
aas
dec
ret
sub
sbb
out
push
cwtl
ret
lods
ret
repnz
add
or
jmp
jecxz
jge
push
adc
addb
mov
popf
cwtl
int
mov
add
pop
loope
xchg
jno
fcmovnb
push
clc
mov
mov
es
mov
mov
jbe
loopne
mov
cwtl
rclb
test
and
mov
popf
sbb
insl
push
add
out
iret
nop
incl
jp
jge
mov
scas
iret
ja
into
dec
arpl
or
cltd
xchg
rolb
mov
push
inc
addr16
cmp
insb
frstor
cmpsl
add
sbb
inc
pop
jae
iret
push
inc
pop
imul
mov
mov
push
dec
jl
mov
pop
imul
jl
sub
fcmovnu
pop
sbb
push
insb
jg
mov
sbb
jg
scas
inc
insl
add
xchg
mov
push
int
push
inc
fisttps
xor
pop
sbb
bound
mov
dec
lods
cmpsb
adc
cmp
fistpll
mov
shlb
enter
cmp
mov
and
jge
mov
mov
pusha
aam
jmp
inc
sub
imul
adc
jg
ret
xlat
push
pushf
les
push
pop
mov
bound
in
lahf
sub
push
pop
mov
addr16
add
clc
scas
cmc
std
sub
repz
mov
cmp
int3
cmc
jle
sub
adcl
les
sahf
loop
lods
push
movsb
push
cmpsb
mov
mov
fisttpl
mov
movsb
mov
dec
xchg
sahf
jl
js
lahf
lret
xchg
xor
and
mov
lock
lret
ja
push
add
xlat
cmpb
ret
xor
or
fcomi
sbb
iret
push
sbb
cmp
lock
pop
daa
je
jnp
aam
xchg
push
xor
test
push
xlat
jo
sbb
xchg
xor
dec
mov
pusha
imul
push
aam
jmp
sbb
in
sub
iret
addr16
sbbl
lods
faddl
lea
sti
loope
push
nop
dec
fnsave
js
inc
and
cmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
repnz
outsl
movsb
push
dec
jg
mov
inc
inc
xor
decb
mov
xchg
adcl
mov
fldenv
mov
mov
push
subl
or
clc
or
inc
addr16
dec
ja
mov
cli
jg
and
fsubrs
in
lock
and
imul
rorb
lret
xchg
push
xchg
and
jecxz
mov
and
out
fisttpl
movsb
divl
jne
cmpsl
add
outsb
dec
jle
push
imul
je
push
js
leave
mov
dec
mov
repz
rcl
cmpsb
outsl
outsl
mov
je
and
imul
xor
adc
jl
sub
jns
aad
out
push
adc
fdiv
dec
cwtl
or
push
and
cmp
rcl
outsl
stc
cmp
push
in
daa
movsb
ss
dec
sbb
ret
inc
in
push
pusha
out
je
add
dec
scas
add
mov
push
cmpsl
pop
fwait
pop
aas
mov
jb
les
jno
pop
leave
stos
cmp
push
cmp
add
adc
xor
xchg
shr
mov
test
ss
cltd
mov
pop
jb
sbb
add
pop
leave
or
in
mov
mov
dec
jp
outsl
outsb
mov
call
inc
shrb
fiadds
mov
mov
sar
insl
loopne
mov
mov
sub
cmpsb
lahf
and
lock
clc
sbb
std
sub
ss
mov
clc
push
pop
out
bound
orb
iret
pop
mov
fbstp
fisttpll
dec
add
xchg
scas
xlat
imul
jae
aam
pop
mull
xchg
movsl
cmc
add
pop
adc
cltd
fsts
fldl
orl
clc
push
mov
pop
xor
xchg
push
ret
ja
testb
insl
dec
mov
cld
sbb
adc
xor
das
pop
fwait
iret
test
icebp
and
rcl
incb
jmp
or
sub
lea
push
les
lods
cmp
mov
data16
mov
rcl
int
jmp
jb
bound
repnz
dec
and
or
jl
sub
adcb
push
sub
and
fcmovnbe
std
int
cld
stc
dec
add
cmp
inc
inc
jg
dec
aad
fbstp
jp
dec
outsl
sub
push
jo
jae
js
roll
mov
out
jle
jg
loop
adc
xor
xor
imul
dec
cli
adc
iret
fdivl
test
inc
fistps
test
leave
jne
pop
hlt
sbb
lcall
pusha
and
inc
sub
jmp
gs
sbb
fnsave
inc
sahf
lcall
mov
push
lcall
das
outsl
lock
test
cmp
notb
and
inc
decb
enter
pop
cmp
jle
scas
add
add
outsb
push
xchg
ja
sbb
inc
inc
rcrb
sub
clc
cmp
shrl
xor
cmpsb
mov
outsb
jp
pop
roll
jle
push
test
jle
or
cmp
clc
test
xor
ret
aam
dec
hlt
push
pop
test
add
out
lds
gs
cmpsb
cmp
out
push
inc
lcall
cmp
pop
lock
enter
sub
sarb
outsb
and
nop
adc
orl
xchg
xchg
test
mov
ficoml
js
pop
fisttps
and
xchg
hlt
push
mov
jns
add
xlat
js
cmp
mov
sarb
enter
movl
mov
sbb
pushf
mov
jns
loop
pop
sbb
mov
xor
call
lret
hlt
je
xor
shrl
mov
frstor
hlt
movb
out
mov
mov
scas
loop
sub
push
fcoms
pop
xor
xchg
cltd
icebp
sbbb
and
sbb
mov
mov
dec
scas
fldt
test
pop
push
enter
aaa
stos
test
in
mov
jbe
jge
or
push
mov
jae
cmp
or
lock
sub
nop
test
sub
xchg
mov
stos
icebp
push
pop
jmp
mov
push
hlt
push
repnz
xchg
repnz
xchg
push
fs
outsl
and
mov
and
lock
sub
sti
xor
lret
cmp
daa
sub
mov
test
frstor
lret
psubq
inc
jp
mov
scas
cmp
adc
xchg
mov
stos
call
in
loop
mov
aam
scas
rcrb
addr16
in
pop
bound
in
or
pop
push
and
rcrb
mov
vpxor
out
sbb
pop
testb
das
sbb
outsl
lret
ret
dec
cmp
imul
out
repnz
or
cmpsl
push
mov
je
orl
lock
je
jno
push
cltd
fadds
sub
cmc
andl
es
inc
add
mov
or
dec
pop
lret
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
lods
and
lock
std
lret
pop
add
enter
jle
mov
shl
mov
sub
jle
arpl
lret
push
cmp
mov
orl
xor
mov
cmc
dec
and
sub
sti
aas
lret
push
adc
push
in
and
pop
push
xor
into
mov
mov
and
jae
sbb
cld
aaa
xchg
je
arpl
inc
cltd
sti
adc
ret
mov
or
and
push
and
jae
shlb
xchg
cmp
jmp
cmp
popa
push
adc
out
mov
cli
les
mov
and
inc
xor
gs
aam
fdivrp
jno
arpl
push
mov
in
gs
sub
je
inc
repz
dec
dec
dec
mov
hlt
fcoml
mov
jns
clc
insl
mov
fwait
fs
mov
xor
std
pop
push
stc
sub
fsub
loope
sbb
xor
scas
in
test
fistpl
mov
lods
and
in
js
neg
lcall
jno
fsts
stc
lds
sahf
xchg
outsl
out
adc
pushf
mov
mulb
cmp
mov
jno
fwait
jne
imul
fldt
lock
addr16
adcl
mov
adc
data16
jmp
add
or
xchg
das
loopne
mov
push
hlt
xor
mov
ljmp
call
pop
jae
adc
and
dec
sub
insl
sub
lret
adcb
out
adc
mov
jle
xor
nop
test
pop
xchg
mov
mov
inc
mov
lods
stos
call
mov
mov
popa
in
mov
cmpsl
mov
inc
mov
enter
lods
and
push
movsl
js
fcoml
dec
out
flds
push
repz
call
dec
adc
jecxz
adc
addr16
add
xor
cmovno
ficomps
pop
push
push
ja
jg
mov
jg
mov
icebp
dec
lea
mov
rcrl
xlat
flds
loopne
iret
cld
mov
adc
inc
jbe
dec
jmp
subb
lds
mov
stos
jns
lahf
fildll
shrb
mov
test
mov
push
push
sbb
push
jo
jne
test
test
stos
rclb
push
adc
into
fdivl
std
orl
mov
sub
jb
lret
push
arpl
cltd
addr16
pop
mov
jecxz
dec
adc
adc
loopne
gs
bound
cmp
xchg
mov
mov
or
push
fs
in
adc
lret
pop
adc
and
xchg
fistpl
mov
dec
js
push
jle
loopne
push
cld
cmc
add
xor
push
sub
and
sub
jns
cmc
push
pushf
push
pop
scas
testl
mov
std
pop
sbb
pop
test
scas
lds
dec
or
adc
pop
cmp
js
enter
iret
fs
in
jl
dec
sarb
mov
addr16
cld
and
subl
xchg
mov
mov
leave
fdivp
icebp
cs
xchg
lds
push
loope
mov
enter
inc
push
jge
dec
scas
test
add
cmp
dec
jle
inc
mov
and
fsubrp
loopne
or
or
push
cmp
test
add
push
sbb
and
inc
idivb
and
in
mov
sti
pop
mov
shl
ds
bound
xor
mov
and
xchg
mov
lret
inc
in
btc
xchg
xor
mov
test
xor
rcrl
dec
adc
lret
sbb
add
fucomip
mov
ret
sbb
xor
mov
cmc
sbb
ret
cs
icebp
sahf
sti
out
mov
adc
push
ljmp
xchg
ret
movsl
cld
xchg
into
xor
icebp
movsb
jb
cmp
out
push
adc
loope
cs
js
out
adc
add
stos
sbb
je
xor
shll
jb
or
xchg
scas
movsl
or
adc
test
mov
push
xor
test
outsb
pop
or
push
push
cmp
cwtl
hlt
fs
mov
mov
and
insb
and
add
les
out
mov
mov
cmp
sbb
bound
rol
mov
jle
inc
cmpb
rcll
into
test
rclb
mov
jp
cmp
xchg
test
ret
in
push
cld
jno
inc
outsl
mov
mov
arpl
add
aaa
push
addl
add
pop
std
into
push
movl
popf
subb
mov
dec
iret
negb
rclb
cmp
lods
lds
outsb
jae
lcall
in
shlb
xor
popf
push
out
mov
push
aas
add
mov
imul
and
jb
mov
insb
pop
xchg
out
push
sub
mov
pusha
pop
push
inc
outsl
jmp
cmpsl
es
cld
mov
fimull
xchg
mov
stos
sarl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
test
jne
inc
outsl
cmp
gs
add
push
and
iret
js
std
mov
fs
pop
test
arpl
cmp
rorl
fstpt
lock
icebp
hlt
push
repz
xlat
and
cmpsb
sahf
lret
add
aad
pop
pop
inc
jbe
xchg
sub
insb
movsl
add
add
arpl
shl
lods
jo
sub
lret
xchg
pop
push
add
out
mov
std
adc
sbb
fmul
mov
adc
mov
dec
rcr
roll
mov
std
inc
iret
stos
or
dec
jp
jge
push
lret
jle
dec
mov
loopne
jnp
pop
adc
inc
pop
push
repz
iret
adc
or
clc
insb
mov
mov
adc
pop
adc
lea
push
jne
int3
lret
add
xchg
ja
or
push
lahf
insl
push
shll
out
mov
sbb
or
mov
sub
jo
test
sbbb
sub
lds
imul
movsl
push
mov
notl
clc
das
popa
jne
cs
leave
shll
sbb
aas
aam
jl
mov
addl
sbb
je
cwtl
pop
xchg
jmp
inc
call
in
in
push
jl
jno
sub
mov
adc
leave
mov
jge
sub
lret
push
push
pop
xchg
cmpsl
fbstp
dec
cwtl
inc
nop
xchg
xchg
sbb
push
mov
jno
pop
lret
test
xor
xor
sub
adc
in
call
in
scas
insb
std
xchg
push
testb
cmc
sbb
sbb
sub
sub
mov
nop
bound
shrl
and
push
push
inc
test
lods
mov
push
mov
mov
in
loope
push
in
and
dec
cmc
ja
dec
lods
lods
sub
or
or
or
or
or
or
or
or
or
or
or
or
or
or
rcrl
lds
xchg
daa
push
xor
repz
cmp
cmp
loope
mov
jle
mov
push
pop
test
jecxz
pop
sub
adc
aaa
adc
push
mov
or
pusha
mov
sub
jl
pop
test
and
int3
cmp
or
fwait
nop
mov
mov
je
push
out
dec
icebp
or
lcall
add
cwtl
imulb
fwait
test
dec
adc
dec
xchg
inc
ret
inc
divb
cmp
mov
jmp
xchg
gs
dec
int3
std
fs
insl
subb
enter
add
ret
inc
bound
push
cmovns
cld
xor
dec
mov
test
icebp
jle
or
pop
push
popa
adc
aas
mov
mov
push
shll
scas
xor
ss
jmp
in
xor
sbb
xchg
stos
pop
dec
fsubl
add
dec
xchg
ret
or
mov
pop
js
cmp
and
aam
arpl
mov
jl
sub
imul
adc
add
daa
push
and
daa
sub
xlat
xor
cli
jl
xchg
aad
in
clc
movsb
dec
addr16
jl
sahf
into
scas
inc
mov
or
sub
les
inc
mov
xchg
js
xor
dec
cmp
push
xchg
pop
insl
loopne
sub
scas
aas
scas
inc
int3
clc
cmpsb
mov
in
lds
adc
adc
mov
mov
xchg
stc
xor
imulb
and
push
lock
inc
xchg
xchg
das
xor
adc
dec
aam
mov
lret
fnstcw
call
or
mov
fwait
dec
mov
push
xor
es
pop
mov
mov
or
scas
mov
xchg
mov
or
fdiv
shll
or
or
or
or
or
or
or
or
or
or
or
test
sub
int3
ret
xchg
mov
jno
dec
fcomps
mov
stc
bound
push
xchg
dec
or
imul
inc
mov
sub
dec
mov
pop
inc
pop
popa
dec
push
jg
sub
and
pop
into
and
in
mov
ljmp
in
mov
mov
cmpsl
in
out
mov
dec
push
or
adc
nop
sbb
hlt
aaa
leave
jle
mov
lods
clc
push
hlt
f2xm1
jbe
loopne
call
cmp
nop
loopne
pop
or
mov
lea
mov
ja
adc
imulb
mov
ret
jge
mov
repnz
push
test
or
hlt
cmp
bts
call
cs
push
std
mov
add
jo
add
mov
shl
push
fisttps
push
fdivl
mov
xchg
xor
inc
sbb
sahf
mov
lods
mov
clc
fnstenv
outsb
repnz
sub
mov
mov
mov
sbb
mov
cltd
int
pop
sbb
and
jbe
jmp
mov
loope
sub
mov
jg
addr16
mov
sub
test
push
fistl
movsb
xchg
jmp
cmp
xchg
jbe
icebp
cltd
push
and
mov
out
pop
test
enter
int3
and
fdivrl
jno
lret
cmc
xchg
push
popa
xor
shll
sahf
push
mov
mov
sti
xor
mov
dec
imul
push
pop
lea
xor
fldenv
mov
jbe
cmpb
pop
fstps
jle
adc
popa
mov
and
jnp
out
aas
daa
lcall
xchg
cmp
mov
stc
and
pusha
out
lcall
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
roll
ja
pop
sub
popf
dec
cmp
pop
fsubrs
lret
pop
int3
popf
lcall
aas
test
repnz
adc
push
xlat
dec
xor
lds
repz
into
cmp
mov
dec
and
fnstenv
dec
pop
or
sbb
out
cmp
lea
sbb
xlat
call
popf
lahf
xorl
test
cmp
mov
mov
adc
sarb
cmp
imul
adc
negb
mov
cmp
xchg
iret
jl
xchg
mov
pop
xchg
jno
test
mov
jmp
test
insb
or
push
rcrb
push
mov
or
in
sbb
test
sub
dec
lret
jge
lock
testb
mov
jne
hlt
shrb
inc
pop
rcrb
push
inc
loop
mov
and
call
das
cmpsl
cli
test
jb
mov
fisubrl
dec
cmp
dec
notl
push
mov
mov
push
jb
xchg
clc
or
pusha
cmpsl
mov
jge
int3
pop
add
push
jp
neg
outsb
stos
pop
sbb
fsubl
pop
hlt
mov
adc
or
fnstenv
insb
add
add
lret
lds
mov
popf
mov
sahf
in
test
or
jge
in
outsb
mov
pcmpgtb
mov
cwtl
nop
popf
int3
sub
inc
adc
pop
lock
sbbb
push
leave
lret
xchg
lea
imul
orb
dec
in
cld
hlt
andl
sbb
push
fs
aaa
pop
mov
cmc
mov
cli
fmull
lds
in
cmp
ud2
pusha
iret
dec
dec
out
dec
mov
aas
into
lret
inc
outsb
pusha
jns
mov
ret
dec
inc
loopne
fnstcw
sbb
cmpsb
push
and
shlb
push
dec
int
or
or
or
or
or
or
or
or
or
or
or
or
mov
into
jge
stos
leave
cmp
fidivrs
mov
push
lds
ret
pop
in
xchg
and
sub
test
adc
ja
xor
ret
js
sub
pop
ficoml
shl
push
sbb
add
sbbb
push
jns
push
adc
adc
and
daa
push
xor
jns
cwtl
xchg
jg
xor
ljmp
into
das
jnp
repz
jle
or
sbb
shrl
leave
xor
mov
pop
outsl
scas
sub
test
pushw
sub
xor
popf
dec
testb
cld
mov
ret
or
cmc
orb
lret
cmpsl
sahf
shl
fwait
or
loope
loopne
in
pop
jge
aaa
imul
fld
enter
jno
test
add
lods
addl
dec
sbb
leave
insb
scas
xor
jnp
imul
dec
inc
jnp
dec
dec
mov
cmp
inc
lods
in
xchg
sbb
mov
push
mov
jb
inc
add
aas
xchg
and
scas
fndisi(8087
mov
inc
arpl
std
xchg
cmc
lret
sahf
cli
data16
mov
fmuls
and
add
xchg
repz
das
mov
mov
push
jge
fsubrl
aaa
sub
xchg
cmp
cmp
mov
mov
and
enter
fnsetpm(287
cmpl
push
lret
mov
jo
iret
mov
dec
inc
mov
xlat
int
jno
cmpsb
ja
pop
jp
sbb
sub
push
jecxz
jno
dec
cld
clc
pushl
push
cmp
outsb
inc
cltd
push
mov
push
mov
dec
push
ret
push
stc
fdivl
jmp
gs
aam
lods
call
sbb
dec
cli
cmp
int3
sbb
push
pop
loopne
sbb
push
shlb
aaa
loopne
repz
mov
daa
jge
push
int
clc
add
ja
bound
nop
mov
lds
cmp
sub
sub
ds
sbb
sahf
push
std
pop
ljmp
pop
push
ficoms
outsl
xcrypt-ctr
cmpsl
lcall
bound
rorb
jl,pt
int
mov
rcr
cmc
xchg
push
lods
mov
adcb
stc
mov
loop
sbb
xchg
pop
inc
addr16
cmp
sub
and
mov
idiv
dec
mov
xor
xchg
das
data16
mov
add
fmuls
loop
and
insl
xor
mov
inc
test
pusha
in
aas
lock
cmc
pusha
clc
sbb
pop
inc
aad
data16
leave
mov
mov
cwtl
stos
xor
lods
std
je
mov
test
mov
cmpsb
and
pusha
ljmp
scas
add
js
pop
out
mov
in
dec
xor
mov
xor
addb
push
mov
add
and
test
test
sbb
dec
mov
ja
call
movsl
and
call
cmp
bound
test
cli
sub
cmp
mov
stos
inc
or
ret
imul
jl
repz
adc
adcb
lcall
xchg
or
sbb
and
xor
pop
stc
scas
arpl
cs
fimuls
dec
repz
mov
cmp
or
pop
mov
xchg
jb
cltd
dec
jle
nop
sub
push
lahf
add
add
xchg
popf
xor
cld
movsl
jl
jbe
dec
jno
mov
lock
std
push
into
and
movups
out
imul
add
rcrb
stc
pusha
jle
push
xchg
xlat
jp
scas
adc
mov
pop
and
scas
push
fisttpll
xchg
mov
or
and
or
fmuls
adc
popf
imul
sahf
call
cmp
xchg
data16
lret
leave
sub
dec
popf
std
outsb
out
sub
cli
lahf
push
push
jne
and
jae
push
sbb
je
mov
mov
loop
pop
cmc
dec
clc
xor
sub
mov
dec
fldl
lahf
sar
out
push
sub
sbb
leave
and
sbb
jno
jge
pushf
clc
fbstp
pop
mov
fidivrs
push
mov
enter
cmp
ljmp
cmp
repz
out
daa
jp
mov
lret
xchg
sub
push
clc
jge
xlat
push
xor
mov
outsb
cltd
out
bound
out
mov
fsts
push
xor
dec
xor
sbb
dec
scas
aas
and
mov
fisubrs
pop
xchg
fdivrs
loope
in
cld
push
push
push
adc
in
sbb
lods
push
fisubrs
in
push
stos
cmp
mov
or
cltd
xchg
out
out
mov
sbb
test
imul
push
mov
ficoml
pop
mov
clc
stc
fadd
jne
in
das
in
adc
lods
push
xor
aam
movsb
clc
es
and
sti
rclb
cwtl
and
jns
popf
jae
xor
xchg
pop
dec
arpl
mov
add
ljmp
enter
push
dec
in
or
test
mov
jg
loop
inc
and
mov
in
mov
mov
inc
lock
gs
jp
mov
dec
push
ret
aas
add
repz
shlb
stos
xchg
cmp
in
add
imul
xchg
daa
sti
cmp
test
lods
xor
and
adc
or
or
or
or
or
or
or
or
fisttpll
sub
aad
jg
jmp
aam
dec
test
in
xor
mov
aam
mov
jl
std
jo
xchg
imul
add
push
pop
std
push
clc
add
notb
data16
rcrb
mov
je
test
cmp
mov
push
sarl
mov
mov
xor
adc
xorps
test
scas
adc
ret
adc
push
xchg
orb
dec
fldl
mov
mov
jg
cwtl
mov
mov
adc
hlt
out
scas
std
rcrb
add
aam
cld
and
orb
xor
pop
jle
bnd
leave
imul
loop
fwait
push
popa
push
out
pop
scas
sarb
lahf
xor
mov
push
clc
enter
sub
movsl
fisubrs
push
jae
je
jo
mov
and
xchg
inc
ds
jno
xor
jns
xor
sub
cmp
mov
outsb
mov
xchg
loopne
aad
dec
jmp
adc
push
sub
fisttpll
dec
mov
sbb
and
hlt
pop
dec
cmpsb
sub
fs
xor
pop
call
hlt
push
in
js
inc
insb
js
and
ja
dec
inc
sub
sti
cmc
push
lock
adc
pop
dec
cmp
cmp
sub
jle
std
imul
cmpsb
shlb
aam
es
repnz
push
cmp
aaa
aam
les
push
repnz
xchg
xor
sti
out
enter
add
lock
sti
push
test
in
dec
cmpsl
fwait
in
aas
out
or
xor
roll
sub
ja
add
inc
shll
adc
pop
mov
icebp
lret
add
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
int
sub
mov
xchg
xor
clc
jecxz
fwait
enter
cmp
jnp
sub
je
jmp
mov
cwtl
jmp
or
pop
sub
sbb
and
fadds
loop
sbb
aaa
js
jo
movsl
mov
test
mov
sub
out
dec
int
mov
mov
and
lcall
adc
xchg
jns,pn
movsb
shl
sbb
sbb
push
jge
push
or
push
ljmp
sbb
outsb
popa
add
dec
xchg
xor
xchg
std
sub
clc
pop
enter
xor
stc
jmp
push
sbb
scas
testl
out
or
test
shll
inc
jl
mov
or
jle
adc
inc
addb
lods
xchg
lods
dec
mov
out
test
ljmp
test
gs
xor
in
aas
add
test
repz
mov
fwait
lcall
jg
int3
cmp
xlat
push
pop
pushf
xchg
pusha
clc
pop
xor
xor
adc
popf
cs
out
xchg
mov
mov
xor
push
lods
push
dec
aad
xchg
add
loop
xchg
xchg
pop
dec
cld
adc
dec
gs
cwtl
xchg
and
lods
cltd
mov
mov
out
push
cmp
in
sti
fistl
mov
cmpsb
push
push
fprem1
movsl
div
lcall
into
shl
andl
dec
mov
xchg
std
jl
xchg
sbb
add
clc
stos
dec
out
cmpsb
inc
rolb
jno
sbb
xor
jecxz
sbb
je
add
cmp
addr16
dec
cltd
enter
jnp
xor
or
or
or
or
or
or
cld
mov
mov
and
imul
push
rcr
xor
xchg
repz
pop
jmp
out
mov
push
mov
and
mov
pop
aaa
lock
stc
fstpt
mov
ret
add
shll
sub
push
mov
mov
cmp
pop
shlb
clc
mov
push
mov
sbb
xor
dec
push
mov
pop
les
adc
ss
push
lock
xor
xchg
call
lahf
jmp
cmp
xchg
aaa
ja
inc
add
iret
jo
xchg
insl
and
test
mov
sti
push
sbb
mov
jecxz
pusha
pop
xlat
mov
mov
xor
jle
or
movsb
inc
loop
dec
popa
push
mov
jle
sbb
bound
mov
rcr
jl
int3
iret
jp
or
push
mov
sahf
in
cmpsb
cmpsb
ds
outsb
rclb
inc
and
out
push
in
aaa
and
ja
mulb
int3
ss
enter
insl
pop
push
arpl
add
adc
adc
cmp
daa
or
mov
sbb
xor
dec
pop
sub
adc
jb,pn
rcll
xor
and
lock
hlt
mov
cmp
out
pop
or
ficoms
add
mov
fists
add
inc
mov
mov
push
jmp
sub
dec
and
mov
mov
in
add
sti
jmp
ljmp
jg
jae
add
sub
inc
jne
mov
xchg
mov
dec
out
push
mov
jno
jmp
dec
gs
jecxz
loopne
je
fcmovu
stos
mov
or
or
or
or
or
or
or
or
or
add
jns
jb
rcrl
mov
out
pop
lods
orb
jecxz
mov
dec
call
jo
repnz
xor
clc
in
pop
mov
cld
mov
and
jp
pop
and
shlb
loopne
imul
andb
push
and
mov
in
dec
inc
dec
enter
pop
or
addr16
pop
sub
out
or
ret
pop
or
inc
out
aam
je
fidivrl
clc
popf
dec
call
inc
and
rcl
xchg
inc
pop
inc
fdivr
pop
push
cwtl
lea
aad
jp
test
fwait
and
setl
mov
mov
movsl
movsl
dec
cmpsb
js
pop
call
jo
repnz
loopne
push
jmp
and
subl
inc
dec
pop
aas
xor
imul
rcrb
jl
sbb
test
cmp
sbb
push
jg,pn
negb
push
inc
inc
push
add
test
dec
push
xor
pop
sbbb
mov
mov
push
lock
add
nop
cmp
in
xor
lods
mov
mov
sbb
xor
enter
notb
movsb
jae
xchg
lret
frstpm(287
xchg
push
dec
lret
mov
inc
mov
sub
sub
shll
inc
mov
adc
and
addb
lcall
sub
jl
sbb
outsl
jno
mov
push
mov
mov
andb
push
add
or
or
lock
out
sbb
popf
dec
std
std
out
ror
push
xchg
loop
pop
aas
pusha
add
pop
mov
dec
lret
pop
adc
add
stos
inc
imul
dec
pop
in
mov
ja
mov
outsl
sbb
bound
xchg
rorb
fs
push
repz
adc
push
bound
enter
push
sarb
add
cs
push
xchg
adc
push
push
std
js
iret
call
test
mov
mov
fstpt
lret
xchg
push
dec
in
cwtl
jno
jo
push
movsb
xchg
push
pusha
inc
arpl
or
fwait
pop
out
test
mov
popa
jle
mov
aaa
ret
std
fcomps
je
loopne
orb
or
xor
repnz
pop
dec
cmc
xchg
adc
mov
aas
sbb
in
out
xchg
out
adc
mov
mov
dec
repnz
movsb
and
or
add
add
pop
scas
push
cli
pop
movsb
idivl
clc
insl
test
insb
push
test
mov
and
lret
fidivs
mov
mov
lcall
test
push
aas
sbb
inc
enter
adc
push
push
jae
movsb
sbb
mov
clc
dec
xchg
das
movsb
xchg
das
lret
imul
xor
and
inc
jbe
loopne
xlat
pop
sbb
inc
fucomip
pop
push
test
inc
cwtl
dec
jne
addr16
mov
adc
vmaxpd
andl
xor
mov
cli
or
inc
sub
test
leave
dec
dec
mov
fucomi
push
xor
jle
mov
rorb
and
nop
adc
aaa
sti
shlb
in
sti
xchg
loope
lret
imul
subb
inc
popa
ja
dec
xchg
jne
dec
push
sbb
call
pop
sub
lock
hlt
movb
mov
cmp
pusha
ss
ljmp
sub
insl
mov
aam
fwait
ja
stc
mov
shlb
sub
popl
push
andl
and
roll
lea
pop
adc
jle
sub
icebp
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
out
mov
or
pop
shl
jmp
add
adc
into
lock
lods
les
les
jbe
xor
mov
loope
xor
jmp
inc
insb
mov
hlt
enter
sub
or
jmp
xchg
cmp
mov
sbb
scas
jns
movsl
inc
xor
dec
jecxz
and
rcll
xchg
and
push
jge
sub
sub
lahf
add
xchg
xchg
lahf
in
mov
jl
pop
dec
clc
push
and
addr16
lods
insb
stc
and
mov
mov
lods
shrl
hlt
int3
adc
dec
aas
push
in
roll
push
sub
sub
fsubp
pop
mov
int
in
mov
mov
fsqrt
and
xchg
testb
fs
add
mov
out
outsb
mov
push
cwtl
ja
jne
neg
shrb
mov
in
or
push
and
leave
clc
scas
and
mov
mov
inc
fldt
jne
stc
sbb
lods
outsl
mov
jbe
loope
and
popa
push
inc
xor
fnstcw
lock
ljmp
push
xchg
jns
adc
shll
xor
and
push
pop
pop
jle
add
repnz
in
push
outsb
incb
or
and
xchg
scas
xor
mov
mov
jecxz
or
int
shrb
add
or
in
push
cmpsl
mov
xor
push
sub
mov
mov
fldt
sarb
loopne
xlat
das
cwtl
shl
mov
fs
push
pop
sbb
adc
sarl
mov
pop
int3
call
push
jnp
and
mov
hlt
cmc
sahf
out
xchg
std
std
in
fwait
xor
mov
dec
scas
mov
and
dec
mov
out
xchg
stos
sub
fists
nop
pop
out
fldt
mov
aad
adc
xchg
fldl
push
xchg
pop
mov
dec
pop
scas
fwait
bound
sub
cmp
loopne
push
or
in
ret
testb
orl
sti
xor
fwait
or
imul
xchg
clc
out
sub
fcoms
and
push
stos
aam
sub
testl
xchg
mov
xchg
xchg
mov
xor
lods
jp
cmp
cmp
mov
adc
dec
lods
sub
jle
lods
lock
bswap
xor
xor
mov
push
add
into
pop
sbbl
push
lret
out
sbb
shrl
lea
cmp
lea
mov
cltd
pop
negb
fistl
push
jl
lock
sub
mov
sbb
ljmp
jmp
leave
inc
push
call
push
sbb
insb
int
fcomi
xchg
test
mov
sub
cmpsb
movsb
ret
rcrl
jle
sub
pop
loopne
adcb
dec
aad
divb
cmc
fsubs
hlt
out
clc
sub
cmc
ret
or
pop
sub
cmpsl
sar
dec
sbb
dec
bts
sub
xchg
hlt
push
mov
sub
add
xor
pop
enter
movsl
xchg
xchg
fistpl
scas
xchg
mov
addr16
pop
mov
sbb
addr16
mov
addr16
cmp
in
sub
mov
leave
push
ds
xor
mov
mov
cmp
imull
jl
fwait
and
hlt
addr16
pop
lea
and
jno
pop
rclb
pop
inc
sahf
sub
inc
sahf
xlat
sbb
xchg
and
cli
mov
std
dec
mov
fstl
pop
mov
stc
adcb
adcb
adc
xchg
or
or
or
or
or
or
or
or
or
or
or
or
movsl
mov
sub
pusha
rcrb
inc
mov
out
jb
popa
and
mov
in
test
and
addr16
jo
xlat
movsb
out
push
xchg
ficoms
int3
rcl
cmp
je
inc
fsubl
cli
cli
jns
add
ret
cli
mov
fistl
push
mov
test
fwait
int
fidivrl
adc
dec
in
fs
xor
lret
lret
cmp
xor
push
stos
addr16
mov
sarl
push
sbb
cltd
or
call
push
mov
popf
cmp
cli
ficomps
add
push
clc
cwtl
cmovge
shll
fidivs
xor
aam
daa
and
call
jnp
xor
outsl
xorb
cmpl
fstpl
sub
imul
out
push
mov
mov
es
cmc
fs
enter
test
lret
repnz
dec
dec
ljmp
xor
dec
push
mov
xor
push
dec
and
mov
mov
jb
and
push
jb
pop
adc
lds
mov
inc
dec
mov
ret
jno
cmpsl
shl
xchg
dec
sbbl
cmpsb
cmc
into
test
mov
je
pop
cmp
mov
cmp
je
pop
xor
mov
lock
push
outsb
insb
in
inc
mov
or
sub
popf
cmp
sub
shll
push
aaa
sub
stos
mov
ss
or
fiaddl
cld
rcll
fdivrp
inc
xlat
pop
push
adc
jns
add
fwait
cltd
cmp
sub
pop
or
mov
jle
js
sbb
cs
add
in
ret
adc
lcall
add
push
push
and
mov
call
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
loope
imul
inc
xor
push
pop
dec
movsb
mov
sub
dec
sbb
out
push
leave
mov
push
cmp
and
out
pop
xor
push
dec
rcll
leave
push
mov
and
push
ret
pushf
scas
push
sahf
xchg
inc
mov
cmp
jl
sub
adc
add
std
lds
mov
sarb
data16
and
push
xchg
xlat
inc
sbb
subb
in
and
jle
addr16
lahf
or
testb
js
test
sub
enter
lods
dec
nop
stc
inc
loop
sti
dec
cwtl
jb
xchg
mov
fbstp
jbe
pop
jns
ror
push
call
je
xor
repz
add
mov
mov
mov
imul
adc
aam
add
daa
xor
xor
lret
es
dec
cmp
sub
xlat
and
push
push
jbe
add
scas
and
push
clc
inc
scas
push
fcmovb
in
gs
popa
and
idivl
repz
push
in
jge
or
mov
int
lods
cltd
mov
loope
addr16
pop
sub
jns
paddw
enter
pop
test
arpl
inc
stc
in
ja
in
int
mov
adc
jb
xchg
dec
imull
dec
push
lds
mov
insl
lods
mov
stos
mov
inc
out
ret
mov
adc
xor
lret
jbe
fwait
cmpsb
xor
popf
mov
stos
mov
adc
xor
and
lods
insl
int
add
add
cmp
push
ret
aam
ja
call
stos
pop
adcl
rolb
adc
mov
sbb
xlat
insl
inc
inc
out
leave
xor
mov
mov
cmp
adc
fwait
lods
test
push
ss
mov
inc
xor
in
jmp
das
adc
fs
movsl
xchg
fs
pop
xchg
jne
int
mov
inc
leave
frstor
clc
stos
repnz
lods
mov
mov
push
popa
adc
jmp
or
clc
mov
aas
inc
cmp
loopne
enter
mov
sub
rclb
iret
sbb
ja
mov
mov
mov
ja
arpl
nop
ljmp
pop
push
xchg
xchg
je
mov
fnstsw
test
fsts
call
jne
add
lret
test
jmp
mov
dec
test
pop
xchg
imul
cwtl
or
test
sti
xor
mov
in
fwait
gs
in
jg
fst
push
mov
and
lods
jmp
daa
loope
psubq
mov
enter
cwtl
push
jmp
push
xchg
adc
sub
shll
sbb
stos
push
dec
loope
pushf
add
push
lahf
pop
mov
int3
xchg
loop
sbb
inc
xchg
lds
test
roll
hlt
sbb
int
ret
dec
mov
pop
push
xchg
das
mov
in
cwtl
imul
sbb
pop
xor
test
add
jne
hlt
fidivrs
cmc
pop
mov
mov
sbb
mov
clc
ror
test
push
and
push
push
xor
adc
mov
and
or
dec
dec
or
loope
daa
mov
mov
lret
cmpsb
pusha
push
loop
inc
fnstcw
test
outsl
lret
jne
push
mov
push
cmc
cmpsl
adc
decb
adc
pushf
jb
mov
and
xor
and
ss
sub
add
mov
fisubrs
or
mov
cwtl
mov
test
or
or
or
or
or
or
or
or
or
or
or
bound
and
stc
xchg
mov
popa
outsb
fimuls
inc
inc
xchg
outsl
addr16
js
xor
fwait
mov
ret
jp
testb
in
mov
lods
std
jp
rcrl
inc
insl
or
pop
scas
ret
jecxz
clc
xchg
je
clc
push
stos
das
push
mov
xor
push
addl
ret
outsl
shrb
pop
cli
jecxz
lods
aas
fwait
and
cltd
push
mov
scas
push
fcmovne
dec
sbb
dec
or
sti
lds
pop
cs
ret
adc
lahf
outsl
or
cld
lea
push
jns
and
add
enter
cwtl
pusha
add
mov
sbb
and
and
or
aaa
call
push
mov
push
mov
lcall
fldl
pushf
jne
dec
xor
mov
addr16
xlat
insl
ja
pop
daa
rcrl
xlat
mov
xor
jnp
fwait
mov
push
mov
adc
dec
and
sub
mov
dec
xchg
jno
inc
cld
mov
movsb
out
lret
jle
outsb
ret
sbb
pop
std
pop
insl
inc
or
add
negl
ret
mov
pop
inc
lret
das
adc
mov
int3
push
cmpsl
push
mov
ja
callw
and
int3
int3
aas
es
clc
ficoml
xchg
lds
jbe
out
iret
outsb
mov
aad
das
mov
mov
mov
jne
cwtl
jge
lret
add
dec
sbb
lock
cmp
mov
or
and
std
enter
xor
popf
jle
sbb
out
mov
je
enter
lcall
pop
arpl
fs
ret
xchg
and
push
cmpsl
mov
xchg
xchg
test
pop
push
sub
scas
je
mov
lea
pcmpeqw
adc
jae
jg
push
data16
or
or
or
or
or
or
or
or
or
or
or
testb
jnp
dec
popa
push
int
push
push
into
ja
ja
push
mov
ds
testb
test
insb
into
inc
fxch
lret
sbb
ror
test
ds
frstor
pop
inc
pop
dec
xchg
hlt
cwtl
add
jmp
adc
or
xchg
pop
adc
add
mov
xor
jo
inc
jo
movsb
cmc
lea
sbb
jnp
loopne
sub
insl
enter
add
cltd
idivl
inc
ret
out
jecxz
int3
jg
push
jno
fsubrs
mov
sbb
sub
mov
jmp
adc
pop
lea
pop
mov
test
mov
mov
mov
xor
mov
xchg
jmp
adc
or
or
or
dec
xor
cmp
pop
cs
adc
cmpsb
fnstcw
push
outsl
pop
lret
stos
clc
test
add
xchg
jbe
cmp
add
pusha
fadds
clc
mov
jl
scas
cmp
clc
popf
pop
and
cmp
mov
cmp
adc
push
dec
mov
sbb
jg
bound
inc
popa
add
inc
fstpl
aas
fnstenv
xchg
jbe
dec
inc
fwait
in
stos
inc
je
adc
xor
mov
sub
mov
rcrl
notb
ja
lds
and
fisttps
inc
into
in
sbb
push
fadd
cmp
jmp
mov
or
sub
popa
cld
fcmovnb
cwtl
pop
push
inc
rorb
inc
or
pop
pop
and
or
push
out
sbb
add
in
inc
push
pusha
cli
ja
mov
scas
push
je
xor
lret
push
jg
mov
clc
inc
enter
pushf
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
outsb
or
jp,pn
mov
movsb
stc
incb
dec
rcr
jb
cmp
dec
or
mov
stos
push
jge
mov
in
dec
mov
outsl
inc
add
cli
rep
in
push
dec
xchg
mov
add
dec
lahf
mov
push
push
int3
dec
mov
cmpsb
or
cwtl
ret
jno
push
mov
dec
inc
or
imul
pop
adc
jae
in
in
jns
xchg
sub
sub
mov
loope
into
mov
cmp
add
xchg
add
mov
jae
inc
repz
xor
sbb
and
stc
jmp
enter
shl
daa
test
push
js
xchg
int
loop
push
sti
jge
ljmp
push
sub
push
mov
xor
fldenv
cmp
enter
adc
addr16
jl
in
xor
pop
test
mov
out
mov
xor
push
pop
cmp
bswap
pop
out
pop
mov
add
lret
call
jbe
call
jp
dec
fwait
or
test
jae
aad
mov
cwtl
xor
pop
daa
dec
xchg
fs
lret
mov
sbb
xor
faddl
lahf
add
arpl
enter
pop
lcall
jecxz
in
sbb
adc
es
cli
dec
fstpt
or
loop,pt
fildl
js
jns
xlat
insb
addl
sbb
cmp
scas
xor
mov
iret
cld
hlt
test
jns
out
repnz
gs
fcoms
or
cs
pop
push
in
adc
faddp
xchg
aaa
xor
pop
lods
dec
mov
xchg
pop
imul
xor
insb
in
pop
scas
push
lds
push
jl
loop
push
push
fadd
sbb
mov
scas
jecxz
ljmp
in
jecxz
test
mov
xchg
xor
imul
push
pop
xor
repz
sahf
in
push
pushf
mov
loopne
pop
arpl
rcrb
pop
outsb
lods
jbe
inc
roll
std
jb
jge
test
xor
push
or
adc
and
popf
cs
nop
shlb
xor
push
push
mov
sbb
fsts
inc
push
push
cmp
loopne
mov
xchg
loope
stc
add
xchg
mov
out
jo
pop
sbb
push
or
jl
and
push
push
mov
cli
xchg
int3
fistpll
lcall
jg
popf
pusha
push
xchg
push
mov
push
mov
lahf
aam
jge
ficoms
push
insb
jle
sahf
cmp
jg
cld
lods
xor
arpl
cltd
push
mov
mov
add
and
fsubl
xor
push
inc
daa
pop
es
lret
pusha
fsubrl
or
adc
stos
or
out
jns
mov
sahf
push
mov
dec
scas
out
cmpsl
pop
mov
addb
out
and
pop
addr16
jle
pop
sbb
mov
in
mov
push
rolb
adcb
inc
repz
inc
dec
push
lahf
xchg
lods
inc
mov
imul
mov
arpl
out
mov
xchg
xor
xchg
xchg
mov
cmp
pushf
xchg
mov
inc
cmp
mov
gs
js
daa
pop
sbb
lds
add
mov
inc
xorb
lea
xchg
and
dec
push
xchg
mov
nop
cwtl
xor
rolb
dec
mov
push
popa
sbb
pushf
push
mov
lret
push
dec
jmp
into
and
sub
jge
jb
lods
xchg
mov
or
or
or
or
or
or
or
or
or
or
or
or
enter
nop
pop
xor
frstor
je
dec
inc
sbb
xchg
jmp
or
stc
cwtl
fcomi
lret
int3
pop
ret
or
imul
add
sub
dec
cmp
and
test
aas
push
movb
sub
dec
jbe
and
ds
sbb
jmp
cmp
test
popa
outsl
in
cmp
leave
scas
aad
and
fwait
pop
jp
mov
loop
xor
cmp
scas
int
test
cmp
inc
insb
movsl
sahf
divl
mov
sub
xlat
cmc
std
or
clc
xchg
xchg
push
cli
xchg
pop
pusha
in
insl
push
xchg
fwait
jp
sarb
and
xor
push
testb
jae
dec
jae
lea
mov
adc
loopne
dec
cvtps2pd
cmp
stc
add
gs
negb
inc
scas
jg
adc
jne
push
mov
test
fs
into
xchg
lds
movsb
add
addb
mov
sbb
out
out
div
int3
rcl
adc
cmp
mov
das
mov
xor
push
push
outsb
js
clc
dec
adcl
mov
dec
ret
sti
enter
ss
cmpb
in
jno
sub
push
or
pushf
dec
sbb
pop
sarl
push
push
insl
push
in
cmp
push
hlt
jne
xchg
or
test
cwtl
out
pop
pop
push
sbb
inc
int3
idivl
fidivrs
jp
cmp
mov
js,pt
inc
sub
mov
mov
and
cmp
dec
cmc
add
in
inc
push
mov
adc
jae
xor
movsb
jb
or
test
mov
into
and
cmp
dec
sub
pushf
out
dec
repz
dec
aas
insl
push
mov
sub
and
or
jno
cmc
or
cmpsb
lock
jb
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
or
cmp
iret
je
inc
cli
jnp,pt
pop
mov
ret
pop
pop
cmpsb
lret
stos
mov
fs
cwtl
loope
inc
pop
push
and
pop
in
lea
jle
out
jnp
adc
adcb
pop
mov
jne
lock
sub
icebp
pushf
sub
lods
or
sub
lods
je
adc
jmp
loop
inc
sbb
cmp
outsb
fstpl
adc
jle
or
fcompl
push
inc
adc
push
mov
enter
lds
sub
jns
jmp
in
push
dec
scas
mov
sub
mov
int3
jb
cld
inc
shlb
popf
adc
stos
aad
in
lahf
movsb
shlb
ljmp
add
or
sub
push
jne
cmp
ret
and
mov
icebp
fsub
xchg
push
mov
jg
push
mov
xchg
test
mov
xchg
push
mov
test
popf
add
cmp
sti
sti
mov
lds
jae
sbb
bound
inc
outsl
mov
scas
into
mov
xchg
xchg
mov
pop
lret
stc
add
xor
cmp
mov
gs
inc
out
icebp
xlat
loope
and
mov
dec
pop
mov
lods
imul
mov
in
mov
shlb
jno
push
dec
divl
insb
nop
add
aam
xor
sbb
rcll
gs
jb
test
sarb
imul
sub
mov
outsl
cmp
fisttps
jecxz
notb
ss
fsubl
daa
mov
loop
mov
push
fs
xor
push
dec
or
decb
stos
inc
popf
daa
xchg
adc
lds
xchg
mov
aad
test
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
pop
xchg
sub
sbb
and
fs
jnp
in
xor
or
lahf
rorb
je
dec
fs
push
mov
sub
add
inc
lea
movsb
fdivl
xlat
xchg
call
sbb
sbb
fisubs
xor
pop
in
pop
adc
popf
jno
inc
mov
or
or
mov
leave
push
jo
mov
pop
test
and
pop
sbb
sbb
mov
jbe
or
into
push
aaa
out
xchg
mov
rclb
jne
add
mov
mov
mov
bound
sbb
fadds
mov
add
ja
sbb
mov
mov
pop
inc
sti
lcall
faddp
gs
add
das
daa
xorb
mov
cmpl
xor
imul
int
mov
sub
cmp
or
xchg
les
pop
and
or
aas
mov
sbb
jge
push
rol
fnstcw
hlt
pop
mov
sbb
fsubl
aam
int
aad
pslld
std
mov
adc
push
cld
popa
adc
icebp
sarb
and
fnsave
ss
sbb
dec
mov
jge
adc
xchg
lea
mov
stc
imul
xor
aam
push
loop
sbb
and
lea
gs
mov
xlat
cmp
je
sti
push
push
test
in
sub
sbb
inc
pop
and
and
xchg
into
sbb
add
dec
or
pop
mov
pop
xchg
insb
push
add
fisubs
addr16
dec
dec
ret
add
ret
mov
movsl
hlt
mov
or
jne
sbbb
bound
xorl
lock
or
add
fwait
mov
ret
adc
mov
push
ss
and
arpl
xor
or
add
gs
aad
push
in
negb
xchg
das
push
repnz
test
add
mov
and
add
xor
push
mov
lods
insl
sbbl
mov
jmp
mov
pop
mov
sbb
clc
scas
insl
cmpsb
data16
add
mov
mul
out
mov
xlat
rorl
scas
cwtl
mov
pop
nop
cld
mov
out
cmpsb
pop
mov
movlps
rclb
add
jb
sub
push
ja
movsl
add
les
in
adc
mov
addr16
or
fs
and
cmp
xlat
or
adc
pop
stos
cmp
xor
dec
testl
adc
shrl
jmp
std
dec
adc
jg
mov
jb
xchg
popa
aaa
fistl
mov
add
inc
mul
mov
scas
stc
das
push
and
shll
outsb
in
mov
jno
inc
fs
push
dec
dec
les
adc
add
xchg
int3
xchg
push
mov
and
ss
push
ret
xor
mov
jb
test
aad
mov
dec
sarb
ret
dec
cltd
mov
enter
cmpsb
clc
sub
dec
scas
add
mov
lret
jecxz
scas
dec
lea
jmp
call
pop
movsl
xchg
mov
jecxz
out
mov
cltd
xchg
test
xor
adc
or
sbb
add
subb
je
test
mov
lods
jae
push
popa
sbb
add
pop
js
loopne
or
addr16
ret
les
mov
or
or
or
or
or
or
or
or
or
or
or
or
movb
jge
add
stc
cmp
sti
xor
hlt
inc
inc
aas
lcall
call
xchg
je
cmp
lcall
jecxz
dec
mov
scas
adc
pop
imull
out
adc
shl
lcall
ljmp
pop
mov
es
add
lods
pop
loopne
repnz
fs
loopne
xchg
jne
cli
sbb
pushw
cmp
in
inc
test
adc
xor
mov
cwtl
sbb
out
lcall
mov
xor
sbb
loope
lcall
jg
sbb
cli
mov
cmp
daa
xor
negl
ds
mov
push
call
jo
je
xor
mov
mov
xchg
addr16
dec
insl
add
cli
rolb
fisubl
push
xor
jae
test
ss
mov
cmp
dec
xor
or
inc
std
pop
mov
inc
cwtl
jo
add
adc
orb
insl
adc
shl
push
dec
push
sbb
out
mov
stc
push
aam
imul
outsb
rcll
jnp
ret
lea
in
int
xchg
int3
into
jecxz
ret
shrl
std
dec
xchg
enter
addr16
mov
push
adc
rorl
sarb
into
nop
outsl
or
push
jmp
outsb
into
push
sbb
fmull
movsb
clc
sub
jb
adc
inc
sahf
push
xchg
push
mov
push
je
mov
xor
inc
std
and
dec
scas
addr16
test
dec
repnz
mov
into
mov
pusha
push
clc
rcll
dec
test
or
sub
out
jbe
sub
aam
mov
adc
jnp
out
or
or
or
or
or
or
or
or
or
or
or
or
mov
jns
add
jno
out
movsb
mov
jbe
jl
hlt
jo
inc
repz
int3
ficompl
cmovb
fildll
jecxz
std
ret
mov
pop
push
push
mov
fsubl
shrl
icebp
dec
push
cmc
sub
ljmp
mov
xchg
shlb
pop
mov
in
add
in
clc
add
pop
mov
fiaddl
cwtl
inc
into
shll
dec
push
push
adc
fidivl
test
bnd
sti
mov
and
lahf
scas
outsb
fs
push
rclb
rclb
add
hlt
pop
xor
jmp
iret
ret
mov
repnz
test
fdivrp
call
leave
fiadds
xchg
fisubrl
push
test
xchg
dec
or
mov
push
push
outsb
test
xchg
cmpsb
imull
cmc
out
jno
or
loop
lock
mulb
and
fnstsw
fwait
push
pop
push
cli
push
stc
inc
mov
stos
mov
xchg
sbb
fdiv
lods
mov
cmc
lods
divb
testb
jo
pop
lea
mov
add
inc
test
sub
movsb
xor
loope
outsb
dec
pop
mov
stos
test
out
flds
in
loopne
rorl
clc
xor
loopne
mov
test
adc
cli
call
dec
cltd
jg
clc
jo
cmp
mov
arpl
mov
test
and
or
or
add
push
xchg
test
lahf
sub
dec
cwtl
cld
sbb
fildl
mov
movsl
mov
inc
leave
int
xchg
pop
in
je
xchg
push
push
pop
jae
mov
mov
jbe
sub
or
adc
lods
or
mov
mov
and
aaa
cmp
in
lock
xchg
icebp
mov
jecxz
cmp
rolb
loope
sub
xor
enterw
sahf
jge
stos
cmp
cmpl
shrb
arpl
js
jp
and
mov
imul
mov
add
and
pushf
sarb
enter
sub
aad
imul
add
test
fwait
sub
add
test
inc
mov
sbb
lods
mov
cmpsl
push
jbe
sub
nop
add
adc
mov
add
js
inc
sti
clc
sub
aas
cwtl
jb
dec
cli
jno
mov
add
cmpsl
mov
add
lods
outsl
adc
fisubrl
xchg
mov
inc
pushf
adc
inc
dec
pop
lods
xchg
rcpps
jmp
test
xchg
jecxz
jmp
out
loope
pop
jbe
sbb
push
jo
adc
or
enter
or
dec
pop
aad
push
inc
data16
in
lds
aaa
mov
clc
mov
popa
lret
es
mov
dec
outsl
push
pop
ss
cmc
arpl
mov
and
fucomp
mov
pop
pop
mov
cmp
add
fidivrl
dec
movsl
dec
add
xchg
inc
adc
je
xor
mov
mov
or
mov
popl
cmpsb
lods
mov
jnp
testl
sbb
out
xchg
lock
mov
sbb
xor
xchg
cmc
mov
jmp
std
iret
jae
pop
call
nop
pop
iret
sets
jb
int
cmc
les
aam
fs
xor
inc
mov
stc
xchg
dec
stc
shll
jb
add
lods
movsb
cmpsl
xor
jne
lahf
dec
and
or
or
or
or
or
or
or
or
and
test
insb
mov
sbb
push
cmc
scas
ds
popa
lahf
mov
push
arpl
dec
xor
call
mov
fbstp
sti
aad
mov
inc
adc
adc
lock
test
mov
test
mov
xor
pop
out
cwtl
cmp
push
jns
cmp
movsl
mov
iret
sub
std
fnstcw
cs
fnstenv
repz
je
cli
dec
into
add
arpl
pop
les
mov
push
fdivrl
dec
mov
push
adc
xlat
or
add
leave
adc
xor
xchg
cmp
in
in
inc
xor
fnstsw
fadd
ret
jno
ds
fimuls
push
xchg
push
insb
cmp
xchg
add
shrb
loop
mov
lret
xchg
push
pop
das
jno
stos
jae
xchg
or
xor
mov
nop
ja
sub
xchg
xchg
hlt
nop
push
and
sub
xor
push
out
cld
lods
xlat
jno
jae
push
push
mov
jg
scas
call
popa
and
xor
dec
sub
push
nop
fists
inc
jae
nop
cmp
fsubrp
mov
popf
xchg
or
cld
loop
stc
fsub
cmp
andb
ss
in
or
mov
imul
push
movsb
iret
lret
dec
in
pop
mov
popa
lods
sbb
cmpsb
mov
leave
movsb
in
add
stos
pop
pop
cmp
mov
lods
pop
pop
lods
fldl
fmul
xor
out
rcl
mov
negb
dec
callw
push
jae
ret
mov
out
fs
lds
mov
or
sub
push
mov
fcoms
jp
scas
shll
fimuls
push
ret
sub
mov
xchg
sub
idiv
cmp
rcrl
inc
stc
outsb
inc
lret
inc
sub
xchg
dec
das
arpl
mov
mov
insl
mov
repz
bound
int3
mov
add
add
adc
cmc
aas
pop
in
sbb
push
mov
jae
mov
pop
inc
push
repnz
repz
shl
les
fdivr
sub
inc
xor
sub
rclb
cwtl
fdivl
mov
ret
or
inc
mov
fdivr
dec
xor
nop
data16
sub
push
jne
mov
mov
cmp
sahf
mov
lods
out
lods
cmp
mov
test
and
ficompl
jo
inc
xor
mov
dec
sbb
mov
into
or
push
call
ret
test
xchg
out
ficompl
add
lea
shl
test
ljmp
mov
and
mov
xchg
rorb
push
gs
out
push
mov
mov
inc
cmc
dec
push
andb
in
xor
pushf
cmpsl
iret
lcall
adc
clc
push
stos
jle
or
pop
pop
mov
mov
cmpb
jne
dec
hlt
je
add
jns
mov
cli
ljmp
fst
cli
gs
loop
jmp
and
arpl
add
dec
mov
adc
sub
or
out
mov
pusha
push
push
dec
movl
adc
sub
repz
loopne
mov
xchg
ljmp
bnd
shl
jno
mov
xor
or
and
es
ja
sub
cld
jmp
pop
or
sbb
scas
pop
pop
push
testb
jl
push
mov
je
or
xchg
jg
inc
mov
xchg
and
xchg
push
mov
pushf
bound
popa
lods
mov
xchg
test
inc
icebp
call
scas
pop
sarb
sti
lret
test
sub
ret
xor
cmp
mov
or
or
or
or
or
or
or
or
mov
jno
sub
xchg
sbb
or
sub
and
enter
mov
adc
xchg
inc
push
mov
js
aaa
push
ja
dec
arpl
and
mov
dec
stc
lret
cmp
dec
cltd
test
dec
and
js
sub
leave
adcl
add
popf
jo
jno
mov
incl
xchg
adc
xchg
or
or
dec
jge
iret
jb
fsubrs
cmc
sahf
mov
jns
push
xchg
je
popf
pop
in
mov
add
sti
leave
scas
xor
lcall
sbb
mov
insb
outsb
xlat
cmp
sbb
lock
xor
out
add
jp
mov
das
fnstcw
aam
gs
mov
in
sbbb
sub
popa
lea
icebp
push
sbb
in
sub
push
lcall
dec
add
mov
mov
xchg
or
push
jge
fistpll
loopne
pop
fcmovbe
xchg
leave
das
mov
scas
dec
xchg
inc
mov
fists
into
mov
js
cmpsl
sub
jge
xlat
lret
fists
lret
bound
in
aad
lcall
and
xchg
mov
rcll
pop
xchg
and
clc
jl
aad
lcall
push
fnstcw
xor
icebp
pop
jne
xchg
shll
rolb
mov
adc
in
shlb
into
or
dec
roll
pop
add
sub
pop
cwtl
pushf
ss
inc
dec
into
int
cli
sti
push
roll
adc
and
push
adc
or
outsb
sub
clc
mov
iret
cmp
insb
jo
outsl
fs
sbb
xor
mov
mov
sbb
hlt
cmp
ret
cmp
or
or
or
or
or
or
or
or
adc
pop
mov
or
or
flds
push
jg
adc
jp
nop
lods
in
pusha
inc
lock
scas
cwtl
bound
xor
aaa
test
lahf
fcom
lods
out
add
inc
jb
pop
loop
in
insl
fisubs
pusha
stos
adc
mov
sti
imul
adc
mov
fnstsw
int
les
xchg
outsl
xchg
jl
jnp
xor
loop
adc
rcrl
iret
stos
pop
insb
dec
or
divb
cmp
push
or
cmp
mov
jl
mov
mov
fcomps
and
push
pop
or
daa
or
cmp
dec
stc
popa
cmp
mov
test
mov
dec
pop
or
pop
fsts
mov
cmp
mov
mov
xchg
xchg
xor
mov
aam
loop
pop
mov
and
dec
not
mov
fldcw
xchg
ds
cmp
jno
add
inc
stc
fisttpl
data16
stos
xchg
push
aad
dec
and
data16
cmp
leave
lock
inc
lea
lcall
pop
pushf
jl
sub
push
add
jne
inc
mov
mov
push
dec
mov
ds
lods
inc
jo
inc
and
sbb
push
sub
and
mov
and
std
pop
lretw
cmp
test
out
decb
pop
push
xlat
aas
pop
rcr
insb
mov
pushf
jae
data16
mov
fidivrs
cmp
pop
xchg
lock
out
mov
stos
fstpt
int
mov
jne
out
cmp
stc
push
push
jo
aad
inc
cmp
xor
out
add
nop
or
jl
out
sub
jbe
ljmp
mov
mov
jp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
test
jle
mov
or
xor
sub
xchg
daa
cmp
cmpsb
sub
sub
xor
cmpsb
les
and
jp
out
sub
jns
or
mov
aam
push
stos
jb
ljmp
dec
in
lcall
xor
dec
or
test
and
sub
mov
add
rcll
inc
shrb
inc
inc
jle
xchg
jp
int3
in
fs
and
inc
pop
xchg
rclb
repz
lods
jge
int3
pop
in
or
inc
aad
fistpll
pop
pop
and
pop
ret
adc
mov
jnp
cmpsb
in
mov
sbb
repnz
fcompl
xchg
pop
dec
cmp
add
push
aad
out
inc
fiadds
push
pusha
jns
ret
fildll
filds
int3
pop
jno
jmp
cwtl
into
xchg
push
ss
es
pop
inc
out
mov
pushf
jp
push
jns
imul
into
int3
or
xor
or
jg
pop
xchg
and
shll
mov
xchg
pop
dec
out
mov
inc
pop
pop
scas
mov
inc
jge
filds
iret
in
jecxz
xchg
arpl
cwtl
rcr
xchg
arpl
ret
les
xlat
jl
xchg
jns
iret
scas
sub
stc
jbe
push
pop
pmulhw
adc
adcl
mov
call
jo
and
lret
adc
daa
leave
add
fcomps
push
imul
aaa
std
clc
out
pop
mov
cmp
and
mov
push
and
call
adcl
enter
cmp
js
sahf
pop
les
enter
test
fiaddl
add
push
or
pop
pusha
ss
fs
mov
pop
xor
movsb
in
int
loop
and
mov
out
jb,pt
and
or
add
sub
pop
adc
or
imul
add
arpl
cmpsl
push
popf
jnp
iret
cld
ret
xchg
lock
cmpsb
shll
es
jl
add
ds
imul
aaa
pop
adc
ret
ja
inc
insl
insb
add
adc
icebp
leave
imul
das
outsl
mov
int
imul
and
addr16
add
cli
int3
les
fsts
pop
mov
std
out
sahf
fstps
ret
xor
inc
rcrl
or
dec
push
xlat
js
push
rcrl
cmpsb
mov
jecxz
add
sbb
push
repnz
mov
or
dec
inc
mov
adc
cwtl
in
test
int
loop
loop
adc
call
lahf
cwtl
adc
sub
les
arpl
fists
clc
mov
add
les
push
push
push
repz
jg
scas
and
or
test
pop
mov
push
cmpsl
pop
into
out
jg
push
mov
push
xor
xchg
int
sbb
push
inc
jge
add
ja
loopne
adcb
fsubrs
stos
inc
nop
scas
sbb
ljmp
sbb
in
add
mov
xor
mov
in
not
push
bound
xor
push
bound
lret
loopne
loope
lds
das
cmp
inc
fdivl
mov
jp
xor
add
adc
leave
cmp
pop
cmp
push
das
jnp
iret
cs
cltd
int
add
xor
sub
and
mov
dec
xchg
leave
push
arpl
pop
lds
bswap
sbb
mov
test
out
out
pop
daa
or
pop
outsb
sub
outsl
lea
pop
jo
sub
push
fidivrs
rcll
add
push
push
adc
in
jmp
mov
pop
pop
dec
addr16
mov
data16
pop
xor
cwtl
shrb
or
inc
mov
pusha
xor
pop
push
lock
fstps
inc
mov
das
in
imul
and
dec
imul
adcb
or
ja
out
cmp
sub
mov
and
mov
dec
fildll
mov
fmulp
fistps
lcall
int
cmp
xchg
imul
jecxz
mov
sarb
push
icebp
and
sbb
adc
sub
popa
cmp
loopne
es
scas
incb
add
out
or
daa
test
fbld
cli
xor
fs
iret
mov
outsl
mov
fdivr
xchg
push
xor
pop
mov
jne
mov
xor
leave
mov
mov
sahf
xlat
out
adc
mov
lock
cmc
xchg
sub
das
loopne
sbb
pop
js
xor
mov
and
sub
bound
gs
loope
aas
mov
inc
leave
mov
adc
ja
ja
sub
add
add
cmp
fsts
mov
jo
icebp
sarl
jb
lock
dec
ret
jl
jno
sahf
loopne
pop
jmp
inc
ret
iret
cmp
or
push
outsb
cmovbe
movsb
lods
inc
inc
dec
iret
sbb
cwtl
push
int
std
rcrb
pop
cwtl
mov
ds
daa
mov
frstpm(287
cs
sahf
es
stos
lahf
es
sbb
ja
lods
xor
roll
cwtl
adc
idivl
dec
fildl
push
out
ror
movsl
pusha
inc
sbb
rclb
pop
push
and
jo
inc
lcall
sub
inc
add
sahf
mov
xor
lods
sti
in
clc
or
or
or
or
or
or
or
or
lret
adcl
xchg
dec
out
inc
mov
jno
aad
sub
ljmp
fdivs
pop
test
adc
dec
rcrb
ficoms
fildll
mov
in
into
adc
push
mov
mov
fwait
insb
mov
bound
inc
inc
daa
push
sub
mov
mov
mov
bnd
adc
jmp
aad
lret
das
js
mov
sbb
adc
inc
imul
jmp
out
nop
xlat
dec
mov
add
jnp
imul
int3
mov
fmul
cmc
and
mov
jmp
adc
stos
cmp
or
loope
pop
addr16
rcrl
out
into
or
sub
mov
dec
loope
outsl
dec
sub
mov
ja
mov
push
xlat
shr
xchg
shrl
and
ret
inc
push
imull
sub
mov
scas
jno
mov
fldz
dec
xor
mov
fdivl
jge
cmp
push
mov
sub
mov
adc
jno
lods
cmp
mov
andl
inc
add
push
push
shlb
sahf
jae
lods
and
icebp
xchg
orl
push
in
pop
xchg
xchg
clc
add
xchg
mov
mov
sbb
es
call
in
pop
or
xchg
xchg
xchg
gs
mov
inc
ljmp
imul
xor
adc
std
push
and
sub
aam
lds
scas
scas
adc
ds
sub
int3
clc
cs
pop
sub
sub
fs
mov
int3
repnz
inc
mov
and
add
pop
aas
std
into
jp
pop
push
sub
push
scas
jo
lret
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jl
mov
push
sub
or
pop
test
adc
push
adc
push
lea
sbb
or
test
fadds
pusha
push
mov
lods
decl
test
jne
jmp
or
xchg
ret
in
fwait
pop
inc
dec
sub
jp
mov
lods
sbb
enter
xchg
xor
add
sbb
popf
sti
movsl
call
push
and
xchg
js
test
setne
push
lfs
and
stos
ljmp
dec
aaa
mov
dec
mov
jmp
outsl
aas
xchg
ss
or
mov
or
sbb
ljmp
pop
fs
pop
sub
loopne
dec
out
mov
or
aaa
aad
dec
jge
push
fs
or
mov
sbb
and
out
lcall
mov
push
ror
arpl
std
pop
movsb
sub
mov
push
push
mov
pop
push
lods
and
dec
cld
mov
xchg
hlt
fsubs
lods
jp
xor
pop
jne
cmp
sbb
mov
leave
loope
dec
add
push
call
adc
push
cmp
cmp
jl
add
jbe
out
mov
xor
inc
in
xchg
and
clc
cmpsb
add
leave
lods
popa
addr16
lcall
dec
jne
rcr
popf
ljmp
xor
out
into
and
aas
jl
roll
mov
js
cmp
dec
pop
jae
scas
imul
shlb
pop
mov
or
ror
inc
xor
sbb
stc
mov
sbb
adc
dec
jne
adc
mov
addr16
or
or
or
or
or
or
or
or
jne
andl
lret
inc
fistl
push
sub
cs
aas
testb
hlt
fs
lock
arpl
jnp
dec
fs
jle
rclb
scas
adc
sbb
mov
int3
clc
divl
sbb
repz
inc
mov
jno
rcrl
sbb
adc
adc
xchg
repnz
enter
add
mov
out
insb
cmp
cmp
adc
adc
movsb
filds
sub
mull
push
bound
xchg
ljmp
add
inc
jg
mov
inc
iret
jp
clc
nop
rcl
and
outsb
jge
ret
xchg
push
adc
outsl
lret
sbbl
pushf
mov
icebp
daa
push
lea
inc
sub
or
loope
jecxz
fists
cmpsl
xchg
pop
push
ss
pop
jp
sbb
push
jp
dec
cmp
popa
sahf
add
mov
sbb
or
add
nop
push
push
pop
stc
scas
or
lret
push
push
jb
and
mov
lea
fdivl
hlt
sbb
scas
sub
imul
jb
hlt
pop
cs
add
clc
gs
mov
in
fcom
scas
xor
mov
into
addb
xorb
pop
les
fldlg2
fstps
xor
adc
push
dec
mov
sbb
cli
fmul
test
mov
dec
push
fisubrs
out
push
lea
sti
cmp
int
andb
stc
ljmp
sbb
shll
mov
sbb
dec
fistpll
in
xor
movsb
cmp
imulb
jle
repnz
ja
or
fistl
je
pop
stos
sbb
jo
mov
dec
and
or
or
or
or
or
or
or
or
icebp
sub
pop
jbe
dec
add
test
pop
enter
imul
cmpsl
dec
push
pusha
cmp
lret
pop
sub
sub
add
pop
outsl
or
in
xchg
or
testl
adc
cli
insb
adc
jbe
pop
sub
xchg
nop
add
xor
into
cli
pop
inc
mov
jb
xchg
sub
stc
lock
dec
test
mov
pusha
cmpsb
jl
cmp
or
test
xor
mov
pop
sub
in
addr16
inc
in
call
gs
cmp
lcall
jo
mov
cmp
push
mov
out
add
cmp
lcall
mov
jp
xor
sbb
mov
sub
fcmovu
pop
stos
std
and
adc
xor
jns
scas
nop
cmc
dec
jmp
mov
in
aam
inc
cmp
sub
or
fmuls
mov
cmp
out
mov
outsl
daa
xor
mov
rclb
push
inc
or
lret
and
mov
rorb
out
lret
mov
addr16
xor
rorb
push
xorl
lret
and
xchg
ja
xchg
imul
aam
and
in
jmp
xor
in
sarl
enter
push
ftst
xor
mov
sub
insl
mov
out
dec
std
jne
push
out
adc
push
add
inc
jne
sar
fildl
ljmp
xlat
cmp
mov
imul
lahf
loopne
xchg
lods
int
shlb
mov
adc
cmp
loop
push
xchg
movsb
mov
or
iret
and
outsb
mov
dec
rol
out
divb
jns
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
fsts
sub
fsts
insb
pop
loopne
inc
add
and
inc
into
pop
in
enter
and
jnp
push
cmp
cli
inc
mov
fwait
jl
jne
mov
push
adc
dec
pop
iret
cltd
xchg
fcmovne
push
cmp
outsl
dec
lcall
and
sti
xor
sub
lret
push
out
and
or
and
je
mov
cmp
add
out
pop
fisttpll
and
push
dec
pop
adc
or
mov
push
mov
iret
cmpsb
fsubrs
les
mov
fsubrs
fimull
pop
adc
sbb
pop
sbb
aam
inc
lods
aad
mov
push
push
out
jmp
cmp
cmp
mov
hlt
push
sbb
icebp
mov
mov
fwait
in
out
ja
sub
push
push
andb
pop
sub
cmp
rcl
jg
test
adc
xor
cs
das
jo
fxch
scas
hlt
test
popa
int
sub
das
ds
pop
add
mov
dec
test
int
fdivrs
rclb
stc
inc
push
xchg
into
out
lahf
jl
aas
arpl
loop
popa
adc
xor
sub
add
cld
insl
mov
repnz
mov
hlt
mov
andb
xchg
jp
push
sub
mov
and
out
cmp
pop
cli
jae
add
cli
xor
lcall
jl
inc
into
pushf
add
jns
adc
call
cmp
and
lret
test
daa
adc
push
xor
mov
sbb
cltd
mov
cltd
outsb
add
mov
xchg
lods
mov
push
ret
out
jb
and
fwait
mov
inc
aam
aaa
cltd
rolb
inc
call
add
test
int
lea
xchg
push
mov
mov
out
add
fldenv
adc
fnstsw
les
or
or
or
or
or
or
or
or
stos
cmp
and
dec
sub
pop
adc
pop
xchg
cmp
jbe
mov
pop
jl
xchg
add
pop
stc
mov
in
aaa
in
inc
ret
test
inc
sti
scas
and
and
aam
mov
dec
lahf
stos
in
int
mov
mov
arpl
and
xchg
xchg
jne
into
outsb
xchg
sub
lret
repnz
fists
ljmp
mov
lods
lcall
enter
bound
test
adc
cmp
aam
jns
pop
std
mov
jmp
roll
cld
or
clc
shr
adc
aas
aam
scas
jle
cltd
sahf
cld
mov
mov
icebp
push
cmp
mov
bound
stc
fdivrs
add
push
sbb
int
inc
dec
cmp
mov
adc
test
inc
aam
sub
cmp
sub
xor
negl
test
inc
mov
les
in
mov
popf
in
push
pop
sub
xor
div
fs
cld
push
popa
jmp
xor
call
scas
mov
mov
sbb
jae
scas
divl
push
scas
std
js
pushf
cmc
pop
daa
mov
pusha
jbe
sub
and
xor
mov
loopne
repnz
cmpsb
or
mov
lret
push
pop
or
push
daa
add
dec
das
jecxz
and
xchg
dec
insb
mov
mov
and
loopne
inc
adc
and
push
cmp
cmc
cld
jbe
adc
xchg
int3
fstps
xchg
int
into
mov
insb
out
push
adc
and
jecxz
gs
outsl
mov
mov
sbb
jge
cwtl
cmp
cmpsb
push
outsl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
icebp
mov
insb
popl
jle
add
ret
enter
in
mov
add
lock
loop
movsl
mov
lcall
jecxz
xor
xor
ret
xchg
xchg
xor
xor
sbb
jno
cmp
mov
push
mov
loopne
imul
movsb
int
call
mov
push
std
je
cmp
movsl
xlat
mov
xorl
xchg
mov
inc
and
push
clc
gs
or
jg
daa
jmp
call
push
lea
in
sub
leave
cmp
inc
push
and
call
jnp
mov
mov
adc
leave
jnp
test
sbb
jle
repnz
sub
xor
pop
mov
mov
lret
adc
in
push
gs
sub
sub
dec
scas
inc
orl
nop
pop
fcmove
or
shlb
scas
and
mov
xor
push
test
dec
mov
xchg
cmp
adc
pop
rcrb
test
fsubrp
push
aaa
rclb
movsl
sbb
je
lret
sbb
dec
mov
faddl
leave
sbbl
movsl
or
filds
sbb
cmp
push
outsl
stos
in
pusha
push
lock
arpl
cmpsl
push
into
fs
out
mov
jns
rclb
outsb
and
jl
dec
pop
imul
sbb
mov
pop
shll
loope
mov
add
es
fstpt
mov
xchg
es
mov
in
and
dec
mov
neg
mov
xchg
xor
lcall
cmp
jne
or
or
or
or
or
or
or
or
je
mov
sbb
sbb
addb
adc
and
sbbb
sti
mov
shlb
stos
into
lock
dec
pop
inc
push
roll
sub
scas
sub
or
or
mov
inc
jmp
stc
pushf
mov
cmp
push
mov
shr
lods
push
mov
mov
das
jle
jo
and
cld
gs
gs
fwait
into
test
or
testl
popf
inc
in
lahf
xchg
sub
push
imul
ret
push
add
sahf
or
dec
hlt
inc
lods
mov
or
adc
fwait
pop
and
xchg
push
jg
fcmovne
cmp
mov
shlb
add
or
mov
sub
sub
aaa
fisubrs
xchg
hlt
xorl
jl
into
jno
mov
push
out
xlat
xchg
cmp
add
int
lret
dec
gs
rolb
shl
push
jle
repnz
rep
mov
mov
repnz
cmpsl
add
fwait
xchg
mov
pop
cmp
mov
or
pop
pop
dec
jmp
push
bound
jns
ljmp
dec
test
sti
push
dec
push
mov
or
repz
jge
push
or
std
mov
xchg
adc
jae
add
out
push
into
cwtl
imul
jge
lret
xor
test
mov
pop
mov
mov
mov
pop
std
inc
mov
add
adc
pop
push
outsl
js
or
movsl
jbe
adc
or
xor
lods
movsb
imul
addr16
mov
notrack
adc
mov
jne
mov
cmpsb
jmp
push
sti
sub
adc
jle
iret
fdiv
jae
pop
movb
push
outsb
xchg
inc
lods
inc
imul
fnstsw
cwtl
jb
stos
lcall
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
lret
mov
lds
mov
mov
fwait
ss
insl
lcall
cld
adc
sub
jbe
data16
int3
loop
es
call
mov
std
jno
ret
xor
mov
in
mov
test
lcall
lods
pop
fcoml
loopne
rclb
xchg
inc
aad
push
mov
incl
sub
mov
sub
clc
insb
loop
je
ret
cmp
lret
jmp
lret
clc
pop
das
hlt
adc
test
push
std
dec
jg
xchg
jno
sbb
jno
inc
push
ds
jp
mov
mov
push
adc
cmc
adc
adc
pop
jmp
push
lea
mov
xchg
ja
mov
std
mov
sbb
stos
test
mov
repnz
push
push
cmp
leave
add
xor
ret
mov
stos
outsb
or
and
bound
inc
insl
add
jae
call
mov
mov
pop
setge
lret
cmp
call
or
clc
int
cltd
decb
shll
les
push
call
shlb
lcall
hlt
xor
xchg
aad
out
sub
mov
dec
adc
add
adc
adc
cli
mov
inc
cli
cmp
push
outsb
shrb
stc
popa
enter
jl
sbb
imulb
test
das
jge
jb
shrb
cmpb
pop
push
mov
jmp
mov
cs
sbb
mov
imul
mov
test
lcall
insl
and
and
movb
jl
pop
aam
mov
dec
subl
fisubrl
cmpsb
lret
xor
push
sub
adc
bound
push
xchg
dec
shl
test
je
aas
or
cld
rcll
and
das
jmp
inc
mov
leave
pop
mov
dec
push
adc
jbe
xor
pop
fwait
cld
pushf
lea
pop
push
mov
cli
mov
push
imul
pop
cmp
pop
mov
mov
add
jl
xorb
sbb
leave
int
sub
or
jb
adc
pusha
push
xchg
pop
mov
sub
pop
jnp
clc
js
mov
out
ret
nop
sbb
and
cmp
adc
xchg
push
cltd
imul
adc
repz
push
nop
mov
pop
jle
call
push
mov
push
xor
repnz
aaa
stos
call
push
pop
dec
bnd
fadd
icebp
push
fcoms
dec
inc
fdiv
and
mov
outsl
pop
sub
repz
push
and
aam
or
add
sar
and
cli
fistl
inc
int
lds
popa
clc
pop
mov
push
cmpsl
popf
push
fadds
cmc
shll
popf
xor
andb
push
mov
xor
jl
add
cmp
jne
cmp
jo
insl
lahf
insl
lods
enter
sbb
out
out
shlb
fimuls
push
and
inc
push
les
and
push
leave
and
ret
sbb
jno
xor
mov
and
orb
fmul
adc
add
jmp
les
mov
sub
inc
sub
std
stc
mov
fists
movsb
mov
stos
inc
sbb
sbb
rcll
mov
cmp
loop
aaa
xchg
iret
lcall
pusha
cmp
loope
or
jne
xchg
sub
sahf
push
in
das
jge
mov
xor
neg
add
dec
arpl
leave
enter
sahf
jne
mov
nop
fcmovne
or
and
mov
ljmp
inc
lea
jno
xlat
subl
sub
int3
push
adc
xor
pop
xchg
mov
aam
push
sbb
into
mov
lret
lods
inc
insb
and
jecxz
xchg
jb
cmpb
mov
insl
les
or
cmp
xchg
add
in
adc
movsl
test
push
aad
mov
test
add
push
fwait
jg
bound
cmp
dec
pop
js
jne
pop
jns
imul
cmc
dec
jecxz
mov
jno
arpl
insl
in
sbb
insb
mov
int3
ret
aaa
push
adc
fwait
movnti
lahf
popa
inc
adc
test
xor
cmp
mov
push
add
cmc
movsb
lea
repz
xchg
xlat
cs
ljmp
or
test
lods
loopne
sub
cmpsb
adc
inc
xchg
add
mov
decl
sbb
xchg
mov
sbb
daa
cltd
daa
pop
mov
push
hlt
lcall
xor
xor
mov
decb
sbb
shll
dec
adc
lds
shrb
push
cli
mov
add
cli
mov
xor
mov
dec
in
test
or
aad
and
test
xchg
cmp
inc
testl
dec
in
rolb
inc
add
inc
imul
rclb
imul
scas
adc
ds
rcrl
andl
inc
push
mov
pusha
jl
mov
pop
mov
pop
xor
mov
cmp
rorl
or
xor
adcl
iret
xchg
dec
mov
sti
test
ret
roll
stos
mov
jne
or
pop
scas
xchg
out
cli
insb
in
and
lret
mov
adc
push
pop
pop
jae
hlt
add
mov
dec
adc
outsl
hlt
adc
inc
sbb
cmp
leave
mov
cmp
into
addr16
stos
adc
pop
jne
add
push
or
pop
xchg
xor
push
popa
cmp
and
pop
ss
push
inc
pop
and
addr16
insb
xchg
test
push
add
enter
add
lds
and
push
aaa
dec
xchg
cwtl
sub
and
sbb
jns
movsl
cmp
xor
pop
add
ss
stos
sub
jbe
mov
sub
sbbl
ja
jl
pusha
mov
jnp
insl
mov
ficomps
sub
test
cmp
dec
push
mov
jle
jno
xchg
frstor
cmpsl
rclb
ljmp
jne
pop
addr16
jo
subl
ret
data16
mov
das
jae
call
daa
popf
mov
test
jno
push
popa
rcrb
sbb
jb
add
xchg
mov
iret
cs
push
pop
addr16
ds
and
aam
xlat
mov
lret
xchg
add
pop
bound
xchg
int3
repz
xor
mov
leave
loop
fidivl
leave
push
add
jns
test
fldlg2
les
aaa
call
cmp
sub
jae
inc
jmp
adc
xor
in
imul
lods
jg
jmp
xlat
scas
ljmp
or
xchg
pushf
fsubrp
fprem
adc
push
icebp
rcr
or
dec
xlat
rcrl
icebp
and
je
adc
dec
aaa
adc
xchg
pop
cmp
xchg
add
daa
pop
add
aam
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
in
scas
inc
nop
dec
data16
decl
das
pop
fidivs
pop
cmp
pushf
enter
popa
adc
enter
jle
sti
mov
xchg
push
and
repnz
lret
int
rorb
fists
xor
dec
dec
js
lcall
push
inc
or
xlat
add
lahf
popa
cld
leave
imul
inc
push
lods
js
clc
cld
lods
fdivs
mov
xchg
push
dec
dec
inc
jl
ret
mov
add
loop
shlb
mov
push
pcmpgtw
dec
dec
int
inc
push
jb
ret
clc
in
cmp
and
aad
jle
dec
mov
repz
push
sarl
cmp
pop
jg
xchg
sahf
scas
sub
inc
test
mov
xor
lahf
data16
aam
jne
popf
xchg
popf
sbb
and
cs
sub
sbb
mov
mov
std
insl
aaa
mov
sub
icebp
int3
mov
les
ja
call
add
pusha
std
mov
les
insb
in
xlat
neg
or
pcmpgtw
dec
push
sub
gs
or
push
loopne
dec
xlat
ror
xchg
adcl
xorb
mov
es
gs
and
dec
pop
jnp
cmp
test
pushf
cld
jmp
mov
pop
push
cld
enter
mov
jge
xchg
pminsw
lods
and
mov
mov
movsb
insl
movsl
dec
cli
int3
test
push
shrb
cmpsb
cltd
les
ljmp
xor
shrb
les
fstpt
jns
adc
cmp
push
ret
shrl
arpl
push
and
push
cltd
addr16
jae,pn
push
lods
cld
pusha
add
pop
clc
dec
out
mov
push
lods
in
popf
lock
mov
test
jnp
or
or
or
or
or
or
or
or
fbstp
in
lret
call
inc
cmpsb
mov
jbe
outsb
test
lret
cwtl
xor
inc
ret
fsubl
sbb
adc
lea
sbb
jg
popf
aad
imul
gs
arpl
mov
push
sbb
jge
mov
inc
inc
inc
test
inc
xor
push
sbb
mov
movnti
mov
adc
sbb
jb
dec
jl
test
pop
mov
inc
push
xchg
imul
jg
cmp
nop
xchg
jae
insb
stc
out
pop
fdivrl
cmp
adc
lds
pop
stos
data16
xor
out
insb
mov
cmc
xchg
mov
push
roll
ljmp
pop
cmpsl
xchg
aad
outsb
cld
pop
mov
mov
cld
push
push
fsincos
mov
sub
push
mov
jno
fcmovne
jl
add
mov
mov
pushf
stos
pop
xchg
sbbl
sarb
movsb
in
inc
aaa
lods
cmp
jl
cmp
or
lret
pop
sbb
inc
loope
mov
xchg
insl
cmp
aam
xchg
xor
xor
test
in
jne
nop
add
jecxz
cmp
scas
cmc
dec
dec
dec
sub
rcr
out
inc
lahf
enter
aam
xlat
cwtl
ss
mov
dec
cld
adc
fdiv
xchg
pop
push
jo
dec
test
dec
lret
xchg
and
push
jecxz
and
mov
into
xor
rcl
sub
call
gs
adc
out
dec
es
mov
xor
xor
xor
adc
stos
rcll
fstl
cmpsl
jb
jb
jl
mov
ret
insl
int3
call
cwtl
sti
lock
cmp
or
fildl
jl
pop
push
cld
inc
faddl
in
push
or
mov
push
jp
mov
inc
data16
sbb
mov
mov
dec
cs
xchg
mov
cli
add
cltd
insb
popa
rorl
stos
mov
add
sbb
push
leave
movsb
in
mov
push
repnz
sub
lahf
xlat
xchg
fdivp
sbb
ja
jbe
adc
mov
imul
cltd
and
aaa
sbb
xchg
sbb
pusha
jb
mov
outsb
mov
mov
test
jno
jp
cmp
pop
repnz
cli
lods
push
inc
xchg
mov
cmp
scas
push
sbb
mov
lret
fistpl
push
fimull
push
shrl
fcmove
mov
icebp
iret
jo
jge
mov
push
in
xor
or
loope
jle
dec
leave
xchg
out
fidivrs
int3
dec
lcall
sbb
sub
xlat
lea
jecxz
mov
xchg
cltd
jb
fistpll
sbb
pop
rorl
out
insb
shrb
int3
cmc
jnp
pop
lret
sbb
and
ret
jg
into
jmp
lea
stos
mov
cmc
loop
cmp
push
adc
and
dec
and
sub
dec
xchg
jle
cmp
pop
and
insb
sbb
push
push
and
or
in
cmp
repz
mov
mov
mov
mov
cmp
mov
mov
movb
jo
push
cmpsl
xor
data16
jno
jge
or
and
std
cld
clc
or
push
xchg
call
jbe
cmp
mov
cmpsb
andb
mov
loopne
or
mov
or
adc
icebp
and
sub
xchg
mov
cmp
xor
mov
or
or
or
or
or
or
or
or
mov
fwait
stos
adc
fildl
fisttps
repnz
js
pop
mov
sbb
ds
xor
int
popf
ja
mov
fcmovnu
push
jle
xchg
pop
mov
jbe
and
dec
adc
lahf
add
adc
dec
das
lret
add
pop
inc
arpl
cwtl
pop
pop
cltd
pop
enter
loopne
cli
inc
dec
push
imul
cmp
out
and
cld
movsb
in
adc
jae
mov
mov
test
xchg
adc
push
inc
into
xor
in
pusha
fcomi
js
enter
mov
xor
mov
push
sbb
push
dec
das
data16
inc
jp
mov
shr
dec
andl
jno
mov
jl
or
inc
rcrb
fnstenv
jge
enter
scas
out
jp
sahf
movsb
ds
or
mov
jle
insb
or
clc
cmp
lcall
inc
or
cmp
xor
and
or
orb
dec
call
out
and
stc
lods
out
insb
inc
push
xor
rcll
push
cmpsl
call
add
aaa
mov
sub
cmpsl
shlb
fs
dec
inc
sbb
icebp
mov
sbbb
mov
mov
sahf
add
pop
and
jne
and
pop
add
jnp
out
lds
incb
jns
mov
mov
enter
lea
clc
push
jo
or
mov
std
mov
iret
insl
adc
push
cmpl
pop
fs
je
lock
inc
fidivrs
cmp
enter
sarl
cmp
jo
out
ss
and
mov
ficoms
inc
xchg
cmp
push
cmpsl
push
adc
xchg
cmp
jg
jp
xchg
std
adc
push
lret
roll
inc
std
sahf
ftst
stos
cld
mov
fmuls
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmp
pop
loop
subl
cmp
test
xor
inc
mov
add
int
lock
cmp
mov
in
stc
out
pop
cmp
add
dec
xchg
xchg
ret
xchg
out
add
dec
repnz
dec
or
sbb
xchg
push
mov
or
jg
imul
jle
jecxz
loopne
or
and
sarb
mov
lea
xchg
sbb
dec
push
stos
scas
fdivl
xor
lds
aad
or
pop
ljmp
mov
or
mov
add
popa
aad
fdivrl
sub
jp
pop
xchg
jmp
adc
int
int
js,pn
jg
mov
mov
pop
movsl
jp
push
repz
mov
push
jp
fistps
jmp
shrb
mov
shrl
cld
jnp
ret
scas
sbb
inc
cwtl
add
subl
push
jecxz
sahf
jle
and
or
pop
arpl
sbb
lods
xor
hlt
pop
js
sbb
mov
add
mov
inc
sarb
cld
lock
outsb
and
call
mov
in
push
xor
push
gs
shll
dec
imul
lret
xchg
movsb
push
cmp
mov
xchg
or
cmpsb
sub
lock
sub
sbb
xor
lcall
cld
and
xor
push
imul
mov
movsl
adc
cltd
add
jbe
sub
xor
jae
sbb
cltd
dec
pop
test
xchg
dec
fmuls
mov
nop
test
pusha
sbb
mov
adc
shlb
xor
aaa
jmp
push
ret
cmc
outsl
jecxz
lods
mov
mov
ljmp
push
and
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
clc
jae
imul
repz
test
movsb
push
sbb
pushf
lods
test
enter
inc
and
inc
xchg
xchg
push
je
push
xor
outsb
into
adc
jle
and
nop
call
cmp
push
jl
out
mov
fcmovbe
pop
lods
sbb
in
shrb
and
xlat
jp
push
mov
inc
push
xchg
into
sbb
cmpsb
popa
and
iret
sub
add
sbb
inc
sub
jnp
gs
adc
mov
gs
iret
inc
mov
adc
shr
adc
gs
xchg
jo
adc
ret
push
add
pop
mov
mov
jb
xchg
sar
pop
fdivrl
jb
jo
push
mov
out
sbb
lcall
push
mov
int3
or
jae
jge
je
xor
jns
jo
movsb
dec
jmp
sbb
aaa
out
pop
sub
out
into
xor
call
shlb
lea
push
js
out
ret
jo
mov
outsb
mov
bound
or
push
mov
jno
testl
or
sarb
dec
push
jle
call
mov
mov
jle
pop
jns
lret
cmpsb
cld
xlat
sti
cwtl
pop
push
fsubrs
mov
js
hlt
andb
xorl
sar
movsb
dec
cmp
call
mov
and
xlat
movsb
or
dec
ljmp
mov
pop
push
mov
mov
ret
xchg
dec
push
aaa
enter
sbb
pop
sbbl
arpl
mov
xor
cli
or
mov
rcrl
jns
jns
aaa
pop
sti
imul
addb
and
jb
cmp
xor
jbe
xchg
cmp
aam
mov
dec
inc
ret
mov
or
enter
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
jno
push
add
mov
xchg
popf
shll
jbe
xchg
pop
inc
daa
enter
sub
js
fs
or
or
out
mov
loop
sub
mov
es
bound
or
test
ds
and
inc
cmpsb
mov
push
mov
adc
addr16
pop
std
xor
aad
stos
push
ljmp
add
cwtl
or
mov
fists
lcall
insb
mov
cmpsb
mov
jb
or
std
stos
push
and
out
aam
pop
imul
push
sti
ficoml
mov
lods
inc
sbb
xorb
jle,pn
or
lcall
jl
pop
inc
mov
hlt
push
push
and
notl
and
and
xor
scas
push
pop
repz
dec
in
push
mov
int
fcompl
jecxz
jmp
add
fwait
adc
sbb
stc
push
sbb
int3
mov
stos
inc
add
or
mov
cwtl
aas
fucomp
mov
nop
fsubrl
dec
stos
cwtl
lcall
dec
dec
jge
xor
test
mov
mov
xchg
push
sub
shlb
test
into
xor
pusha
dec
je
sbb
jle
adc
adc
inc
mov
mov
call
pop
dec
xor
mov
adc
shrb
mov
pop
in
adc
pop
shll
imul
sub
mov
push
arpl
aas
lock
pop
lea
clc
jbe,pn
or
call
or
sti
test
xor
ljmp
and
adc
mov
or
cli
inc
adc
xor
jmp
add
pop
mov
inc
xchg
cmp
in
int
or
mov
mov
pop
push
out
mov
sub
xlat
adc
cmp
gs
inc
inc
fwait
hlt
xor
in
mov
and
lock
push
pop
cmp
fidivrl
out
repnz
xchg
inc
sbb
inc
imul
dec
push
or
and
xor
jg
addb
pop
xor
add
gs
xchg
gs
mov
lea
pop
cltd
or
test
xor
push
or
xor
xorl
leave
shll
fadd
jle
or
mov
sbb
lds
push
dec
in
jle
adc
dec
jns
ljmp
push
and
xchg
add
mov
and
jno
rclb
adc
pop
jb
stos
jp
adc
outsb
sbb
sbb
into
push
xchg
pop
test
mov
and
adc
adc
notb
dec
push
loopne
mov
inc
push
int3
inc
add
bound
scas
int
aad
clc
and
adc
sbb
test
leave
jnp
repnz
test
xor
popf
ret
repnz
aas
out
in
test
xor
xor
and
stos
call
xchg
std
nop
into
jo
and
repnz
and
hlt
push
shl
add
pop
add
aas
rcrb
sahf
hlt
js
mov
or
add
into
in
dec
mov
aam
insb
mov
xor
sahf
and
daa
sbb
cmp
pop
pop
pushf
xor
or
fisttpl
pushl
insl
insl
add
and
scas
inc
aam
fisttpl
pop
sub
je
in
data16
sub
call
pop
int3
mov
js
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
insl
gs
pop
dec
jle
mov
cmp
into
aad
sbb
sbb
cld
test
mov
nop
dec
es
addb
ss
call
xor
or
ds
xor
and
scas
shlb
xchg
and
xchg
mov
cmp
testl
ret
sahf
mov
jle
inc
ret
daa
push
push
inc
orb
negl
in
fldenv
sbb
cmp
lea
jge
jne
clc
dec
cmovle
jmp
cmp
data16
popf
or
inc
xor
pop
ja
cli
lret
jnp
mov
insb
scas
jno
pop
mov
shrb
in
adc
mov
aas
lea
xor
push
cld
jp
out
inc
mov
dec
stc
jno
insb
loope
icebp
gs
adc
xchg
scas
xchg
imul
fidivs
or
fsubrs
sar
mov
mov
pop
cmc
push
mov
pop
insl
movsb
jnp
dec
sbb
movsb
arpl
sub
fisttpll
or
lcall
sahf
jbe
jae
or
int
or
ret
mov
mov
sti
cmpsb
sub
cmp
sbb
jge
dec
and
jmp
or
jp
or
push
cmc
mov
cmpb
pop
and
fstpt
pop
out
cli
and
pop
push
lods
dec
addr16
adc
es
xor
in
mov
inc
push
jb
mov
push
adc
and
push
leave
cmp
mov
cs
add
ljmp
push
popf
cmp
dec
inc
stc
dec
add
out
inc
mov
ss
sub
mov
cltd
xor
cli
xor
imul
cltd
cwtl
outsb
sbb
jle
or
pop
or
or
or
or
or
or
or
or
mov
imul
addr16
push
adc
aad
pop
sub
sub
aas
xor
or
jmp
arpl
xchg
shl
sbb
js
dec
xor
out
lret
fs
dec
nop
push
popa
adc
xchg
sbb
loopne
sub
ljmp
mov
xchg
pop
scas
out
pop
cmc
pop
add
sbb
sbb
ja
dec
shr
fcmovnb
jae
jg
inc
cmp
cmp
ficoml
into
sahf
mov
push
mov
add
xor
cmp
push
movsl
adc
xor
xorl
pop
mov
jmp
sub
pop
jge
in
xchg
rorb
pop
daa
pop
lock
pop
add
addr16
ljmp
int
scas
xchg
xor
into
push
test
dec
push
jnp
cmc
notl
ss
aam
mov
xchg
sti
pop
mov
repnz
je
and
loopne
mov
mull
sahf
inc
test
nop
outsb
icebp
and
imul
or
cmp
ror
sub
dec
negb
popa
and
xchg
sub
xchg
lds
push
or
mov
ret
mov
cli
jge
and
outsb
sub
cli
mov
shll
jo
add
dec
and
clc
sbb
cmp
add
je
neg
push
stos
insl
shrb
je
jo
ret
fmul
ret
mov
filds
dec
or
pop
test
int3
cmc
test
ret
sbb
cmp
dec
popa
adcb
gs
mov
jmp
dec
fsubrs
fnsave
adc
xlat
into
jg
cmp
dec
push
cmc
sub
push
inc
pop
cmp
fs
or
into
enter
dec
bswap
ds
jg
mov
sub
or
cmp
cmp
dec
movsb
jb
dec
mov
adc
insb
adc
pop
fs
dec
sarb
fisttpll
jb
clc
incb
push
or
loop
jne
push
inc
and
stos
stos
xchg
lods
cmp
int3
lret
mov
xchg
mov
enter
dec
xlat
into
out
loopne
mov
and
and
aaa
cmp
and
std
cltd
pop
bound
pop
in
addb
test
jnp
fstl
in
lods
and
aaa
lock
gs
lret
adc
clc
adc
iret
in
lods
fs
push
ds
mov
sbb
mov
in
dec
fwait
into
mov
add
jne
jo
jmp
pop
nop
mov
xchg
xor
stc
dec
fisubrl
mov
js
ret
nop
push
push
dec
fs
sbb
adc
rcrb
adc
mov
int
ror
cmp
push
clc
jp
and
fisttpll
ror
in
xchg
ret
push
pop
lret
inc
into
arpl
je
add
idiv
inc
adc
clc
dec
xchg
mov
nop
jno
ds
push
dec
jmp
jne
inc
call
jne
mov
pop
bound
xor
loopne
imul
ljmp
clc
bound
add
mov
cmp
stc
pop
xchg
push
mov
push
movsb
push
test
fldenv
out
aam
gs
mov
pop
movsb
bound
mov
iret
cld
imul
push
call
add
push
sbb
sbb
jne
xor
or
cmpsl
movsb
xchg
jge
mov
iret
push
outsb
and
cmp
inc
jle
fs
sub
jl
pusha
mov
mov
into
test
jg
xlat
xchg
gs
cmc
or
xor
xchg
push
fcmovnu
ret
in
mov
cs
or
xor
pop
rcrl
imul
test
xchg
mov
popa
call
or
mov
adc
push
or
cld
test
dec
dec
adc
insb
fcmovbe
xor
mov
nop
inc
outsb
pop
dec
notb
bound
loopne
cwtl
clc
out
pusha
cmc
adc
pop
push
insb
ja
nop
xchg
add
in
or
xor
xchg
mov
add
fdivrp
pop
test
fsts
out
aam
fsubr
mov
push
gs
mov
inc
call
in
adc
insl
inc
sub
mov
sahf
into
test
rclb
cli
test
insl
mov
push
fs
cmp
out
enter
xchg
ficoms
jne
and
cmp
fs
sbb
decb
mov
fisubrs
movsb
push
jge
mov
iret
test
fldenv
cmp
xlat
fmuls
imul
mov
ror
ljmp
sti
push
in
lcall
mov
sbb
lret
add
jno
adc
xlat
sbb
fs
jp
push
or
scas
cmp
ljmp
or
and
push
orl
gs
push
in
mov
ret
enter
push
test
pop
jno
add
test
adc
xchg
xor
xchg
scas
inc
sub
cs
nop
mov
pop
outsb
aaa
and
cmp
dec
pop
pop
inc
inc
in
aam
repnz
into
add
jp
cli
sahf
push
sbbb
mov
cmp
push
push
and
or
roll
xor
js
inc
scas
mov
popa
ret
xor
xchg
clc
push
repnz
push
adc
jge
mov
jp
add
in
mov
lods
jge
mov
iret
cmp
and
cmp
xlat
sub
inc
fs
gs
mov
loopne
sahf
inc
cli
jp
or
or
or
or
or
or
or
or
or
or
or
or
jle
pop
dec
push
loop
outsb
cmp
jp
add
shrl
adc
ret
mov
rcll
rolb
ss
movsb
push
or
clc
push
test
div
adc
push
loop
out
lahf
and
push
adc
xchg
sub
bound
xor
xchg
cmp
add
stos
adc
enter
movsb
mov
test
pop
cmc
sub
je
inc
push
dec
in
cmp
inc
aaa
jbe
gs
mov
jge
mov
iret
sahf
outsb
mull
cmp
inc
andb
dec
xchg
xor
fnstsw
in
cli
ficoms
mov
cld
loop
repnz
imul
push
inc
in
andb
push
push
in
ja
xor
or
movsl
movsb
xchg
jge
mov
iret
push
outsb
and
cmp
xchg
addr16
adc
adc
xor
in
gs
add
in
jp
push
ret
pop
imull
mov
push
or
sub
mov
mov
jp
xlat
ficompl
inc
hlt
pop
gs
pop
mov
push
into
outsb
fisttpll
sar
ljmp
mov
mov
mov
xor
bound
xor
xchg
add
add
push
aad
pop
jp
iret
cs
mov
enter
dec
fxch
loopne
fiadds
mov
jp
jle
pop
xchg
push
push
push
outsb
add
jp
add
or
adc
ret
adc
sahf
enter
mov
loopne
test
fdivp
mov
lock
lret
in
xchg
shlb
push
gs
or
or
int3
sbbb
xchg
mov
movsb
into
mov
ds
and
dec
sbb
cs
cmp
mov
sar
enter
dec
ror
fsubrs
popa
bound
xor
xchg
pop
push
xchg
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sbb
or
sub
lret
adc
in
jo
dec
mov
pop
movsb
pusha
jge
mov
iret
outsb
xchg
and
cmp
xlat
out
insb
addr16
mov
adc
push
or
push
in
inc
and
aaa
cmp
mov
test
mov
iret
inc
outsb
xor
cmp
jb
add
gs
xchg
push
fnsave
cli
adcb
dec
mov
cmp
push
push
cmp
roll
dec
into
jl
dec
stos
mov
popa
lret
xchg
les
add
outsb
adc
enter
movsb
jle
fldenv
sbb
imul
cltd
mov
dec
test
mov
pop
imul
adc
in
adc
enter
movsb
cltd
or
clc
scas
test
cmp
dec
adc
push
and
and
push
repz
lods
fisubl
cmc
cld
test
and
aad
xor
push
shl
ljmp
sahf
dec
mov
ja
push
pop
call
push
ljmp
mov
lahf
xor
lds
in
arpl
sbb
sbb
pop
inc
add
adc
jle
iret
mov
xchg
aad
daa
ljmp
scas
ret
loop
hlt
add
jmp
cmp
jmp
mov
lret
cmpsl
adc
jecxz
xlat
out
mov
inc
jno
mov
mov
int3
ss
mov
movsb
idivl
fsub
cmp
adc
xchg
outsb
lret
das
iret
pop
out
mov
shlb
popf
jo
out
insb
int3
or
popf
repnz
add
shll
lcall
cmp
mov
iret
cmp
rorb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cld
ljmp
dec
imul
jb
outsb
xchg
add
scas
inc
call
xchg
rcll
test
push
in
clc
mov
notl
fiaddl
mov
dec
notb
cltd
fstps
std
insb
add
dec
ja
dec
scas
inc
int3
jg
shl
clc
lods
fldcw
mov
test
fs
xchg
jp
out
aad
movsb
shrl
jns
xchg
mov
iret
ret
or
pop
mov
test
jp
fs
stc
inc
scas
hlt
int3
je
fwait
insl
pop
or
iret
cltd
mov
xor
push
icebp
ret
push
jg
in
sub
cmp
jmp
cmp
fistpl
sub
mov
lds
cmp
add
inc
les
pop
pop
ljmp
inc
je
fs
cmp
sti
into
add
xor
out
cmpsb
fadds
mov
test
add
cltd
pop
lret
and
push
jmp
mov
out
outsb
jns
add
mov
add
std
dec
or
mov
pusha
mov
pop
xchg
add
clc
pop
dec
inc
imulb
mov
push
sbb
cltd
aad
fdivrp
aad
add
mov
mov
bound
mov
stc
scas
mov
jnp
addr16
mov
and
int
pop
loopne
icebp
je
adc
int
lcall
cmp
in
int
add
inc
jbe
call
inc
dec
arpl
cmp
hlt
iret
jle
lret
jge
push
add
mov
inc
mov
shrb
dec
mov
stos
push
fisubrs
outsl
push
sarb
insb
nop
popf
je
pop
in
fs
popl
ret
and
sub
pop
sti
push
mov
sti
in
adc
jl
hlt
in
adc
xor
and
scas
mov
jl
cmp
push
das
icebp
lret
aaa
mov
sub
or
sbb
and
mov
sti
adc
mov
pop
ret
push
mov
mov
bnd
mov
scas
leave
pop
call
mov
into
or
add
pop
rcrb
das
jne
and
es
ficompl
inc
stc
div
jbe
arpl
dec
aaa
pop
ss
jb
mov
stc
cwtl
ljmp
lret
mov
into
push
cli
dec
mov
push
insl
outsl
out
iret
dec
jbe
and
addr16
decl
icebp
sub
pop
inc
gs
imulb
dec
mov
and
or
push
mov
sbb
fdivp
pop
or
adc
xchg
mov
jge
loop
inc
popf
xchg
icebp
jne
ljmp
sub
inc
xchg
aaa
cmp
mov
cmp
jl
fnstcw
sub
sbb
pop
jo
pop
inc
arpl
pop
inc
gs
shlb
sbbb
sahf
sbb
and
lock
jecxz
jge
pop
jge
mov
test
aam
andb
es
cmp
mov
sbb
sti
scas
cmp
insb
dec
jecxz
test
pop
jno
ret
jnp
sub
inc
mov
sbb
aad
cli
dec
cltd
add
jo
jns
add
push
mov
jno
xchg
call
arpl
xchg
rorb
cmp
shlb
pop
test
aad
lret
gs
dec
mov
stos
xchg
sub
push
ret
push
and
sub
subb
mov
add
sahf
loope
xor
sahf
lods
outsl
add
jmp
in
int
aaa
pop
mov
call
data16
jl
fidivrs
mov
or
enter
loopne
mov
fcomi
loope
cs
cmp
movsb
mov
jmp
mov
mov
ljmp
xlat
and
repz
inc
and
and
and
data16
mov
jl
fidivs
adc
subb
push
mov
cmp
insl
cmp
inc
cli
notl
or
das
dec
int
sbb
add
and
mov
cmp
test
movsl
or
and
loop
cmp
lret
outsl
inc
push
mov
std
rcrb
ss
idiv
push
pusha
lock
arpl
push
mov
push
pop
int3
pop
cmp
jb
bound
xchg
jp
add
mov
jle
sahf
push
push
cmpsb
outsl
inc
ss
push
jo
cwtl
pop
mov
adc
and
sbb
mov
adc
dec
pushf
loop
outsb
cmp
mov
mov
mov
repnz
inc
movsb
jecxz
out
into
mov
cwtl
into
test
adcb
xlat
in
mov
mov
jl
insl
jne
lods
data16
cmp
xor
dec
es
clc
inc
lds
adc
aaa
push
dec
mov
and
cmp
inc
pop
and
lods
std
js
add
push
lret
in
leave
and
rorb
mov
xor
sub
jo
and
inc
jp
mov
push
sbb
jp,pn
inc
sbb
nop
inc
lock
gs
es
lret
fnsave
push
pop
xchg
icebp
fisubrs
push
inc
mov
iret
insb
outsl
fbstp
xor
pusha
enter
push
test
push
push
pop
push
inc
sbb
into
loopne
nop
repnz
jge
cmp
inc
pusha
aad
sar
cli
mov
fisttps
in
incb
push
into
inc
int3
sti
adc
iret
movsb
loopne
in
mov
into
fs
sbb
stos
dec
fisubrl
and
cmp
stc
or
or
insl
adc
cld
mov
cmp
or
nop
scas
or
cwtl
xor
imul
dec
inc
push
add
pop
jecxz
mov
mov
fldt
push
push
mov
cmp
iret
push
outsb
xor
cmp
cwtl
pop
std
inc
xchg
inc
inc
in
mov
jl
jne
hlt
clc
cltd
test
es
and
jbe
jo
in
sbb
lods
aaa
test
gs
sub
jge
push
sbb
ss
mov
into
jo
sbb
test
and
cmp
xlat
pop
andl
test
adc
pusha
push
sahf
in
and
mov
stc
lea
and
loop
fs
cmp
adc
shll
dec
push
into
push
test
jg
dec
xchg
cmp
jge
repnz
hlt
nop
js
sbb
adc
dec
jo
mov
sahf
test
cmp
cmp
mov
inc
pushf
dec
gs
fs
shlb
adc
and
mov
dec
movsb
ljmp
je
adc
imul
nop
js
add
push
inc
in
mov
aaa
test
gs
mov
ja
mov
rclb
loop
fs
std
cwtl
pusha
scas
daa
std
faddl
push
incl
out
adc
js
jbe
bound
add
or
or
loopne
xor
imul
jne
adc
xchg
nop
sbb
into
jo
xor
mov
mov
xor
mull
push
mov
arpl
or
or
or
or
or
or
or
or
sbb
pop
sub
adc
push
lcall
adc
sahf
inc
in
fsubl
jb
pop
idivl
aas
mov
adc
ret
xor
or
pop
test
sbb
jb
es
sbb
into
mov
clc
adcb
adc
mov
aas
or
inc
ljmp
fnsave
outsl
in
xchg
daa
mov
jno
or
dec
fildll
inc
test
pop
mov
in
cmp
sub
push
icebp
cmp
mov
fcomi
ljmp
xchg
mov
adc
stos
fstps
xorb
cmp
lods
aaa
fisubl
lea
push
xchg
in
stos
add
fbld
cld
pop
or
imul
mull
adc
pop
mov
imul
pop
int
pop
fwait
dec
xchg
pop
ret
cmp
add
jbe
insb
pop
outsl
push
mov
push
dec
js
xchg
jb
jmp
lahf
loopne
mov
insl
xor
push
xorl
scas
lcall
call
fisttpl
mov
out
movsb
mov
bound
shrb
dec
mov
hlt
ss
push
sahf
stc
xorl
shlb
xchg
sub
in
xchg
mov
into
cmc
jno
aad
push
rcr
fistpl
and
sbb
or
rcrl
outsl
aas
movsb
clc
adc
jo
jnp
xchg
add
dec
flds
push
fisttps
sbb
pop
mov
push
mov
or
adc
dec
jns
je
xchg
icebp
sub
ret
data16
div
push
sahf
ds
push
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
gs
cmc
pusha
mov
xchg
push
jb
insl
inc
mov
std
push
pop
jmp
adc
jl
push
cmpb
mov
inc
outsl
out
mov
test
jb
xor
jae
inc
and
or
scas
and
adc
adc
inc
mov
std
repz
and
adc
xchg
sbb
imul
mov
aas
pop
mov
lods
jb
xchg
xor
movsb
daa
ss
adc
push
and
repz
or
or
insl
subb
fsubr
pop
aad
cmpb
cs
test
pusha
sub
das
gs
andb
sbb
les
stc
cmp
xchg
scas
jle
inc
cmp
adc
dec
sarl
cmc
cmpsb
mov
out
aam
shl
cmpsl
insb
mov
loopne
xor
mov
dec
lret
mov
inc
cmp
nop
pop
adc
std
repz
lcall
add
pop
pop
cs
rclb
xor
push
lock
mov
subl
mov
movsl
xchg
scas
mov
mov
adc
push
bound
lahf
fistps
out
lret
adc
xor
jmp
mov
test
xchg
jge
inc
loop
xchg
pop
pop
cltd
and
lahf
in
jge
lds
xchg
or
or
adc
mov
stos
dec
add
cmp
sbb
or
ret
sub
cs
sarl
push
cmpsb
adc
gs
cltd
add
arpl
insl
nop
cmp
sub
aas
push
ret
and
ljmp
cmp
jl
dec
fs
icebp
pop
xchg
leave
leave
dec
outsb
and
xchg
cs
out
out
into
jae
cmc
shll
lret
sub
jp
gs
jnp
lcall
add
je
ret
push
fldcw
enter
mov
call
sbb
mov
adc
inc
popa
pop
xor
xchg
mov
lahf
ss
and
roll
or
xor
or
in
rcr
mov
jno
lret
adc
sub
dec
pop
mov
pop
mov
or
jne
test
lret
adc
ja
xor
aaa
xor
rorl
jbe
mov
insb
adc
jb
es
inc
mov
inc
mov
xchg
out
inc
or
scas
mov
add
mov
movsl
adc
stc
xorl
xchg
imul
enter
std
jbe
cmp
ljmp
pusha
or
in
pop
ret
xor
sbb
enter
mov
add
test
fsubr
xor
jecxz
adc
jl
or
add
std
mov
cld
adc
lcall
loope
arpl
les
mov
pusha
icebp
std
jae
cmp
mov
popf
mov
and
idivb
fs
inc
lds
xchg
test
dec
out
mov
or
arpl
dec
pop
shlb
cwtl
push
mov
ds
mov
int3
push
std
loope
adc
add
aam
xchg
fiaddl
les
xor
mov
jp
adc
xor
xchg
mov
inc
test
mov
mov
mov
cmp
pop
addb
aaa
push
ss
daa
push
pop
jo
scas
aam
pop
inc
cmpsb
jge
cmpsl
and
pushf
cmp
sbb
lea
ljmp
sahf
and
je
lcall
push
jge
les
jle
xchg
dec
push
pop
mov
movsb
pushl
outsl
ss
lods
and
lods
pop
fisttps
out
add
xor
adc
pop
jmp
mov
cli
mov
pop
test
fdivrl
push
pop
xor
jl
dec
mov
sbb
ret
test
dec
fbstp
sbb
data16
sub
or
enter
and
mov
jnp
mov
ret
popa
loop
insb
add
je
mov
loope
sbb
cmp
dec
je
out
and
add
out
push
test
cwtl
dec
push
cwtl
mov
ljmp
jb
rclb
jg
mov
in
clc
or
mov
push
cmp
mov
push
aaa
adc
push
cmp
mov
out
stos
jno
sar
ss
enter
int3
call
sub
sti
pop
jmp
movsb
mov
shrb
leave
pop
jg
jle
roll
xor
cmp
xor
xchg
lods
push
inc
dec
xor
stos
insb
mov
push
dec
decb
add
enter
nop
enter
cli
sbb
fadd
loop
ret
dec
push
lahf
and
jns
aad
or
rcl
mov
sbb
scas
sti
aam
imul
mov
fsubs
icebp
pop
or
xchg
sub
fsubrl
push
ret
cmovl
mov
and
push
mov
mov
add
pop
xchg
movsb
jg
jge
mov
jns
pop
psubusb
ret
fidivrs
js
sub
sub
jno
xor
sub
pop
shl
mov
jge
mov
mov
xor
shl
and
push
imul
hlt
sub
outsl
sub
outsb
add
mov
ja
push
movsb
lret
cmp
mov
repnz
int
cld
dec
ficompl
clc
pop
aam
idivl
pop
mov
in
aam
or
test
bsr
movsb
sbb
cmp
aam
pop
and
loope
dec
int
into
icebp
rorl
or
pusha
inc
push
out
aaa
sbb
mov
movsb
fstpl
cwtd
sub
mov
data16
cli
lock
into
inc
sbb
stc
rep
cli
out
dec
lods
rcl
test
mov
mov
jns
push
mov
push
stos
add
xor
mov
mov
lahf
je
adc
int
jecxz
dec
lahf
dec
cmc
rolb
sahf
lock
add
out
test
jbe
dec
jo
jne
cmpsl
inc
mov
mov
into
in
adc
std
jl
mov
jae
movb
dec
adc
xchg
fcmovne
xchg
fwait
popa
pushf
jns
push
mov
in
fst
mov
mov
adc
jmp
lea
adc
int
test
mov
imul
outsl
sbb
orl
notb
jecxz
xor
xchg
jns
jae
xor
cld
jo
gs
gs
push
mov
mov
push
push
clc
and
icebp
add
jl
jns
cmc
pop
sbb
lret
xor
lahf
fdivs
add
sub
mov
aad
cmc
mov
jg
enter
mov
pop
mov
and
repz
and
into
mov
push
ljmp
push
and
jno
insl
mov
popf
pop
or
pop
push
push
inc
xlat
pop
sub
sub
cld
jns
push
add
add
fsub
mov
aaa
cli
imul
je
call
pushf
imul
or
pop
imul
push
cwtl
shr
fmull
bound
xor
outsb
addb
push
mov
mov
dec
rcr
add
and
in
mov
inc
push
popf
lock
mov
incl
test
shl
adcl
cmp
stc
popf
pushf
enter
mov
pop
cli
pop
movsl
mov
mov
fnstcw
je
mov
mov
insl
pop
pop
scas
mov
idiv
dec
inc
in
xchg
adc
aam
and
test
negl
pop
inc
in
sub
ja
dec
lret
int3
into
push
rcrb
ror
das
mov
dec
test
inc
mov
mov
rclb
mov
inc
sbb
mov
cmp
cmp
sbbl
loop
pop
or
fwait
add
inc
fs
sarl
pop
inc
gs
insl
mov
xor
inc
lret
mov
xor
mov
cmpsl
insb
in
inc
push
pop
dec
jnp
rclb
and
lahf
insb
mov
leave
sbb
popa
xor
stc
dec
mov
pusha
adc
mov
xor
push
add
fstpl
dec
es
cmpsl
mov
in
js
int3
orb
jle
out
sbb
ret
fimuls
cmp
xor
cmp
mov
xchg
mov
sbb
mov
fdivs
dec
fdivs
int3
push
out
cld
mov
or
push
xor
mov
fs
cmp
cld
daa
mov
mov
pop
inc
test
xchg
repz
iret
push
jnp
orl
mov
sarl
js
imul
arpl
inc
mov
stc
inc
jp
nop
add
jge
mov
arpl
cs
in
mov
jno
leave
std
sub
jecxz
iret
mov
popf
jmp
xchg
adc
mov
scas
shrb
out
shrl
jnp
les
xchg
push
repz
imul
aaa
cld
mov
inc
mov
sub
jmp
pushf
data16
fcoms
add
ficoml
stc
mov
add
lea
jno
inc
xchg
in
fwait
lock
enter
out
mov
mov
mov
cmc
cld
scas
nop
mov
dec
jo
dec
xorb
sub
xor
cs
adc
loopne
xlat
pop
rcrb
sub
inc
sarl
cmp
sbb
sbb
cmp
clc
cmpsb
mov
out
fcmovbe
fsubs
cli
sarl
rcrl
in
sarl
xchg
bound
pop
xchg
sub
inc
arpl
cmp
adc
sbb
adc
clc
push
mov
fcoms
adc
mov
and
adc
js
or
addr16
pop
pop
pop
pop
sub
inc
pop
cmp
sub
pop
sbb
sbb
sub
pop
cmp
clc
push
sub
pop
ficompl
fsubrs
sub
pop
cli
pop
mov
pop
lcall
pop
mov
ds
add
sub
inc
adc
dec
inc
daa
jae
jae
push
insb
inc
pop
xor
jae
push
mov
jae
jae
push
lods
inc
jae
jae
push
int3
inc
cmpsl
jae
jae
push
in
inc
xchg
imul
std
stos
pop
mov
sub
inc
and
inc
daa
jae
jae
push
insb
inc
pop
jae
jae
push
mov
jae
jae
push
lods
inc
jae
jae
push
int3
inc
cmpsl
jae
jae
push
in
inc
xchg
imul
std
stos
pop
mov
sub
inc
sub
cmp
cmp
sbb
cmp
clc
jle
cmp
fdivrs
cmp
mov
or
xor
rorl
fisubs
arpl
jbe
int3
xchg
int3
call
movsb
jne
sub
gs
adcl
adc
shrl
stos
stc
mov
stos
aad
mov
mov
cvttps2pi
xchg
add
or
shrb
and
adc
loopne
arpl
add
bnd
pop
inc
inc
test
insl
mov
jmp
sbb
test
jae
xchg
pop
inc
fstpt
sbb
imul
dec
mov
out
or
jb
cmp
lcall
sub
lret
js
fnstsw
pop
pop
dec
pop
sub
sbb
aas
sub
out
cmpsl
sub
std
sub
dec
or
pop
ss
sbb
dec
add
add
jecxz
or
jle
and
mov
xchg
stos
mov
lock
sahf
add
xchg
push
scas
sub
sahf
fdiv
jge
pop
inc
add
mov
and
cmp
pusha
xchg
and
adc
cld
and
out
inc
dec
jle
rorl
popa
xor
and
jb
pop
mov
jp
unpckhps
inc
movsb
mov
sub
xor
add
aam
lret
or
xor
or
bound
pop
sarl
or
adc
scas
dec
push
sbb
mov
dec
inc
fdivl
fdivrl
pop
pusha
fnstsw
jge
xor
add
fnstcw
jb
push
inc
inc
dec
xchg
xor
loopne
out
dec
pop
cmp
lods
les
inc
lea
or
or
or
or
or
or
or
or
push
mov
or
xor
loop
adc
lock
in
fisttps
lds
fwait
pop
pop
xchg
inc
fidivs
xor
inc
dec
pop
xor
test
loopne
lods
add
aam
adcb
pop
mov
or
xor
cltd
mov
pop
loope
lcall
es
cwtl
adc
shrl
jbe
lods
enter
sub
dec
iret
xor
out
mov
xchg
sarl
mov
jle
cmp
inc
push
push
or
mov
pop
lock
aaa
cwtl
sbb
jmp
mov
xchg
mov
jno
icebp
cld
pop
mov
mov
mov
call
into
fistpl
jg
mov
lock
js
cmp
push
cmpb
out
xor
xor
popf
sub
adc
add
add
xor
dec
cmc
jo
or
jbe
or
cmp
xor
jbe
xor
mov
pop
sti
or
pop
or
jo
jp
and
jb
adc
mov
adc
or
jno
ss
sbb
sbb
mov
push
xlat
push
push
loope
lret
pop
stos
and
dec
lock
xchg
mov
sbb
shll
or
jbe
or
popa
add
jle
sub
into
loop
cmpsl
or
and
xchg
popa
xchg
or
and
fwait
js
es
jmp
sti
mov
rcll
dec
or
push
sbb
aad
aad
mov
ja
xor
mov
out
dec
cli
in
lcall
rcll
lock
xchg
cld
dec
jnp
jb
cmp
mov
sbb
inc
cld
ss
sbb
jb
pop
stc
xor
add
jp
movnti
insl
add
dec
fs
nop
shll
shrl
mov
inc
fidivl
push
lret
and
pushl
int
hlt
fcmovnu
test
push
scas
ljmp
pusha
inc
mov
arpl
icebp
movsl
imul
std
inc
test
dec
cmp
mov
loopne
xlat
aas
sar
xchg
sub
adc
dec
out
push
scas
shll
ror
mov
xchg
add
sbb
loopne
dec
sahf
arpl
xchg
xchg
sahf
sbb
std
lret
nop
lods
jge
pop
adc
aas
orl
rcrb
jo
push
lahf
adc
sbb
adc
enter
push
mov
movsl
jbe
or
fstpt
lahf
xor
jecxz
push
inc
pop
bound
xchg
add
cld
xlat
loop
mov
xchg
lock
sub
mov
mov
cmp
or
rorl
dec
sub
dec
jo
das
fistpll
cmp
fsubl
push
cwtl
add
lret
xchg
xchg
jae
mov
or
mov
mov
pop
dec
add
lods
cmp
pop
push
mov
push
xor
jg
fdivrl
push
movsl
mov
or
jbe
mov
rol
inc
sahf
add
ret
dec
cld
rorl
in
shrl
scas
nop
std
shrl
inc
pop
fucomi
jno
cwtl
sub
lahf
lods
mov
mov
clc
mov
cmpb
push
cmpb
shll
inc
nop
popf
clc
push
negl
outsb
movl
jmp
ffreep
mov
mov
sub
mov
out
push
adc
cmp
mov
rorl
stos
sbb
jb
inc
jp
inc
daa
ds
inc
inc
sub
mov
hlt
or
or
or
or
or
or
or
or
xrelease
jge
inc
andl
mov
nop
in
in
dec
lock
push
cmpsb
or
xor
pusha
mov
mov
insl
pop
jno
jl
sub
clc
jne
aas
cmp
inc
lcall
xor
mov
xchg
cmp
dec
aad
stos
push
data16
push
xchg
jno
out
lods
jmp
mov
adc
pop
mov
add
or
mov
push
fcomps
int
pusha
lds
mov
pop
and
mov
dec
dec
cli
cld
mov
bound
pop
popa
aas
add
jae
and
fnstsw
sub
sub
jecxz
or
fisubs
cwtl
repnz
jns
and
inc
pop
ljmp
xchg
mov
fldenv
pop
mov
xchg
les
inc
or
and
lret
popa
fnstenv
imul
insl
movsb
aam
mov
pop
and
adc
shlb
test
stc
dec
mov
dec
inc
cmp
jo
pop
jns
inc
dec
aas
add
add
ja
sub
dec
nop
dec
lret
mov
jae
dec
popf
cld
mov
test
movq
psllq
inc
mov
or
jle
or
mov
fcomp
bound
aad
incl
sbb
test
mov
insl
cmp
jae
cltd
cltd
ljmp
cmp
out
popl
add
outsb
sbb
into
std
mov
push
sbb
add
les
jne
sub
add
movsb
adcl
arpl
xchg
pop
push
cltd
test
push
mov
shl
nop
nop
mov
inc
movsb
sub
test
push
mov
andb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
jmp
pop
cmpsb
shlb
dec
sarl
inc
pop
aas
adc
cmp
movsl
insb
fnsave
pop
enter
in
in
pop
cmpl
jg
mov
pop
fbstp
xor
xor
cmp
xchg
xor
scas
xchg
stos
pusha
sarl
xor
leave
or
inc
cmp
popf
popa
dec
pop
dec
je
cwtl
jmp
jnp
fadds
les
aas
sahf
fwait
xchg
loop
aas
scas
in
loope
call
fstps
sbb
les
test
cmp
push
xor
or
fmuls
iret
and
adc
cmc
mov
jmp
push
jecxz
lcall
jns
pop
sub
cld
dec
cmp
pushf
inc
xchg
mov
inc
sub
pop
sub
xchg
bound
pop
mov
mov
iret
sub
das
or
inc
shll
cmpsl
jb
or
out
push
lahf
add
push
jo
imul
jp
sub
fnstcw
dec
sub
mov
push
xchg
ret
xchg
out
out
movsb
fstl
sub
imul
test
call
shrb
mov
xchg
cmp
out
dec
cmpsb
leave
inc
mov
test
mov
scas
dec
push
jmp
and
mov
sbb
imul
push
mov
sub
in
dec
int
adc
cmc
cwtl
mov
and
sahf
cmp
xchg
lcall
add
xor
jne
pop
push
pop
je
aam
cmp
jg
into
mov
ja
dec
into
jge
add
subb
test
je
pop
xor
cmp
push
fwait
sub
mov
int3
xor
mov
outsl
fstsw
jmp
lcall
outsl
mov
push
cmp
mov
inc
aam
mov
fsub
lods
xchg
iret
adc
mov
inc
stos
push
xchg
in
fwait
and
xor
loope
mov
push
mov
ja
mov
in
jae
bnd
jmp
scas
pop
std
push
stos
rorb
aam
and
adcl
popa
or
cmp
push
into
or
mov
lds
es
lret
cmp
xchg
dec
cmpsb
sub
test
mov
cli
mov
mov
insl
gs
dec
stos
fst
add
lds
mov
add
movsb
cmp
pop
cmp
inc
int
orl
aas
mov
cwtl
inc
add
jle
cmp
mov
repz
orl
push
pop
cmp
es
or
dec
mov
daa
movsb
jne
sub
mov
shll
sbb
sub
call
mov
loop
cmpsl
fnstcw
pop
das
pop
adc
xor
xchg
mov
push
mov
jp
add
push
cmp
lret
xchg
mov
bnd
inc
inc
aas
cmp
pop
inc
imul
push
adc
jecxz
clc
push
cmpb
or
dec
incb
in
xchg
rclb
sub
pop
adc
es
sub
pop
das
pop
or
pop
lret
pop
out
push
sub
sbb
mov
dec
and
js
and
loope
sbb
mov
add
push
sub
lods
sbb
rcrl
sub
jae
xor
mov
dec
fdivrs
loop
or
lret
movsl
mov
roll
and
sbb
in
mov
scas
divl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
adc
nop
sahf
mov
jno
pop
fsts
xlat
xor
xor
aaa
test
mov
out
in
dec
cmp
add
sbb
jb
adc
int3
mov
push
popf
xchg
jo
pop
testb
fs
sub
inc
hlt
and
ret
and
sub
loop
fsubl
sbb
icebp
inc
mov
jg
dec
std
sub
push
add
push
icebp
inc
sub
icebp
dec
loopne
mov
dec
mov
push
xor
clts
jnp
lock
pushf
jg
push
xchg
dec
mov
loop
jmp
push
sbb
xchg
sub
jo
mov
shlb
dec
out
dec
jp
leave
mov
sub
adc
rcll
pusha
push
mov
dec
cmpsl
cmp
or
cmc
mov
ljmp
lods
lock
pop
ret
mov
scas
popa
jle
and
iret
lods
jp
push
outsb
add
sbb
data16
sub
jl
stos
cmpb
hlt
ljmp
popf
rcrl
loop
flds
dec
dec
jl
das
jecxz
shlb
or
rorl
dec
mov
iret
cmp
mov
xchg
and
cmp
add
jle
or
jno
and
iret
jle
xor
cmp
xor
or
sub
and
mov
aad
jns
inc
out
pop
pop
hlt
jmp
ret
cli
iret
das
scas
cmp
mov
popa
jg
cmp
jg
dec
mov
inc
rcrb
cmp
les
popf
movsb
enter
sbb
jg
mov
aaa
call
sub
jnp
xor
dec
adc
lahf
or
sub
push
scas
inc
mov
inc
and
ret
int3
loopne
and
repnz
mov
pop
jl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jns
sub
std
jns
pop
sub
sahf
jg
pop
fdivl
out
mov
sub
dec
jecxz
mov
cmc
dec
cmpsb
clc
pusha
insb
jo
xchg
cli
gs
js
and
lock
ss
nop
xor
pushf
adc
sbb
inc
mov
mov
sbbl
mov
call
adc
in
pop
add
lock
lods
movsl
fsts
add
daa
mov
inc
sbb
in
inc
in
jl
add
jae
inc
cwtl
jg
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
nop
nop
dec
add
outsb
add
push
add
add
add
add
popa
add
jo
insb
add
and
jo
jb
outsl
add
jb
popa
add
add
dec
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
add
and
jb
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
nop
nop
xor
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
dec
add
push
add
inc
add
add
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
