push
call
ret
ret
ja
bound
test
dec
cmp
std
push
nop
repnz
inc
jo
sbb
stos
in
fcomps
out
inc
loope
xchg
pushf
aas
fidivrs
push
mov
movsb
popa
adc
push
cltd
fcmovnu
dec
lret
xor
jno
int
xor
arpl
insl
xor
sub
scas
jmp
pop
testb
mov
in
cvtps2pd
test
ret
and
xchg
cmp
ljmp
sub
cmpsl
pop
mov
sahf
ja
inc
nop
jecxz
sbb
leave
outsl
nop
cmp
movsl
dec
xchg
xchg
mov
xchg
add
mov
flds
rorb
out
aam
xchg
cmpsl
fucomp
test
jp
xchg
test
test
ljmp
sbb
divl
lods
das
cmp
mull
fistl
ja
shr
iret
mov
mov
inc
cmp
mov
daa
arpl
loop
inc
sbb
test
cmc
ror
dec
cmpsb
mov
ds
jge
dec
or
lcall
jge
add
jo
jns
rcl
and
je
push
cltd
sbb
out
sbb
and
test
add
clc
popa
inc
test
lret
and
pushaw
jne
sahf
jecxz
pop
pop
ficomps
testb
iret
nop
sbb
dec
loope
mov
jo
add
cmp
rorl
mov
mul
fstps
push
lcall
scas
mov
pushf
and
sub
pop
rcl
aas
pushf
mov
lods
ror
les
mov
test
dec
mov
sbb
xchg
insl
inc
sub
adc
scas
test
sbb
cmc
cli
mov
sbb
push
push
mov
aam
cmpsb
imull
and
das
vpslld
mov
pop
fwait
jnp
int3
test
sahf
cmp
mov
stos
rorl
insb
pop
push
ret
inc
test
push
sahf
into
fdivrl
and
mov
outsl
int3
xchg
push
cmc
xor
or
daa
sub
jp
pop
dec
sub
js
sub
enter
jne
adc
ljmp
test
cmp
rcrb
push
jbe
mov
mov
gs
jno
xor
or
sbb
xor
mov
ljmp
mov
xchg
mov
aas
cwtl
cld
push
sbb
mov
dec
mov
insb
ror
sbb
or
das
xchg
repz
sub
or
pop
push
enter
xchg
arpl
outsl
push
mov
ljmp
icebp
jle
dec
jp
test
aam
inc
aas
test
xchg
jecxz
adc
filds
nop
stc
dec
pushf
add
pushf
add
gs
dec
inc
add
push
mov
cmpsb
sti
nop
cmp
sub
xchg
sti
stos
into
sub
mov
inc
stc
push
and
jle
test
stos
mov
jl
xor
xor
int
and
or
outsl
xor
clc
mov
xlat
sub
mov
mov
les
cmp
lock
mov
std
imul
cmp
jmp
sub
xor
gs
inc
call
adc
ficoml
jl
cmp
cmc
addr16
mov
jle
mov
and
hlt
jl
insl
mov
ds
popa
push
lods
mov
sub
das
push
pop
negb
dec
test
loop
fdiv
inc
inc
push
cmp
xchg
daa
jp
mov
ret
xchg
xchg
ror
jo
int3
mov
stos
add
ret
lret
push
imul
mov
add
test
pop
cwtl
daa
or
out
pop
test
stc
roll
enter
cmp
jl
shl
clc
and
repz
lcall
xor
pop
and
int3
push
ret
pop
add
jge
dec
cmp
sbb
mov
and
push
push
xchg
ds
je
xchg
and
push
adc
jnp
lods
add
xor
pop
lcall
dec
xchg
hlt
lahf
and
xor
addb
mov
xor
in
add
imul
fildll
push
push
dec
mov
fisttps
adc
jge
lcall
shlb
lds
or
fwait
mov
movsl
xchg
sbb
pop
cld
es
sbb
cmc
add
add
mov
cmp
daa
inc
shrb
xor
icebp
dec
cmp
pop
bound
aas
call
test
push
gs
cmc
mov
xchg
adc
ret
or
iret
xlat
mov
mov
cmp
fwait
push
xchg
fmuls
ret
pop
in
insl
jecxz
jae
in
roll
xor
pop
mov
imul
push
inc
enter
lods
scas
clc
mov
orb
fsubrp
arpl
aas
adc
ss
pusha
fimull
pop
sub
cld
jge
push
fistl
or
insl
loop
fwait
arpl
pop
dec
mov
xor
jno
hlt
lahf
mov
addl
mov
jl
call
js
imul
sar
inc
sub
loop
ljmp
adc
jbe
clc
movsl
js
jae
mov
push
mov
iret
in
insl
in
stc
xor
xchg
outsl
and
out
cld
lds
jp
out
rolb
dec
outsb
inc
dec
cwtl
cs
es
push
mov
lret
ljmp
and
or
fs
dec
pop
mov
sub
xor
xor
dec
imul
add
mov
dec
lock
push
mov
js
or
xchg
and
sbb
adc
pop
int
jmp
adcl
xchg
jp
out
pop
cs
inc
jae,pt
push
or
subl
popa
inc
shl
lea
mov
popa
pusha
push
push
xor
scas
clc
lahf
sub
mov
jne
mov
push
jp
cmc
pop
xlat
and
loope
mov
mov
mov
es
ljmp
mov
sbb
es
and
mov
push
lods
bound
mov
lds
pop
push
leave
mov
inc
cmc
btc
add
jge
jle
enter
std
and
mov
mov
fisttpl
xorl
pusha
call
xchg
adc
dec
subl
aad
cmpsl
xchg
push
xchg
sbb
or
adcl
sti
mov
push
stos
repz
aad
andl
adc
sahf
cmp
mov
cmp
sar
loope
inc
flds
dec
add
pop
adc
jae
les
gs
outsl
lcall
fimuls
xchg
add
je
imul
repnz
cld
xchg
cltd
out
cmc
test
popa
inc
jb
mov
adc
gs
orl
inc
cmp
icebp
arpl
pop
jne
and
scas
mov
aad
addr16
push
lcall
pop
sub
lahf
push
jg
xor
push
mov
xchg
fcmovnu
xchg
sbbl
fistpll
sub
cmp
testl
inc
mov
adc
dec
into
mov
push
pop
ror
enter
mov
mov
adcb
jg
lock
in
push
mov
int
mov
imul
stos
repnz
mov
add
fs
pop
fnstenv
and
cmp
testl
in
mov
loope
or
call
pusha
aas
scas
movsl
mov
stos
out
andl
adc
roll
repnz
f2xm1
mov
jle
push
out
dec
orb
xchg
jle
xchg
inc
daa
jge
mov
and
ss
lahf
ds
out
lods
in
mov
mov
cmpsl
mov
stos
jb
lea
mov
cltd
sub
lret
fnstcw
lods
cld
push
std
inc
ljmp
pop
push
out
cmp
daa
mov
jmp
fwait
mov
out
popa
adc
add
call
mov
shrl
xor
cmp
cwtl
xlat
lea
fnsave
cmp
adc
enter
dec
mov
hlt
sub
test
sub
xor
repz
push
push
mov
cmpsb
mov
ret
mov
dec
push
xor
divb
inc
lret
xlat
jecxz
sbb
mov
in
cmpsl
negb
shlb
test
pop
jne
xchg
pusha
or
test
nop
jo
mov
ret
mov
pop
es
divb
shll
push
jno
xor
jecxz
dec
pop
push
dec
dec
popa
or
in
or
inc
xchg
int
inc
mov
int
jle
adc
xor
sub
push
mov
xchg
nop
bound
jne
cmpsb
mov
mov
out
cmp
imul
jmp
lods
add
mov
int3
mov
adc
inc
pop
nop
push
jecxz
pop
and
sbbb
rorb
mov
jne
popf
imul
in
mov
mov
ja
call
mov
mov
rol
adc
mov
stos
xchg
push
je
out
push
jo
sbb
pushf
flds
rcll
loope
mov
sbb
mov
cli
imul
cmp
mov
xchg
adc
xor
fucom
mulb
mov
aad
xchg
jg
dec
addr16
ror
popa
or
mov
or
mov
push
sub
imul
push
dec
xchg
dec
pop
mov
sbb
inc
popa
add
cmc
fxch
rcrl
popf
and
in
inc
push
push
mov
mov
fists
dec
dec
xchg
adc
outsb
push
xchg
dec
dec
loopne
cmp
mov
sbb
pushf
inc
in
rclb
jl
push
push
mov
test
orl
loopne
dec
push
jp
leave
fldcw
xchg
jo
xchg
xor
pop
dec
pop
fcompl
fisubl
push
and
pop
mov
xchg
mov
shlb
mov
push
inc
dec
out
inc
idivb
push
dec
andb
adc
jae
xchg
xor
pop
mov
xchg
cmp
fsubr
jnp
rorb
orl
insl
mov
icebp
rcr
add
iret
ja
push
jp
inc
dec
push
or
aas
dec
sbb
sub
dec
les
inc
xchg
loop
cltd
push
sbb
cli
sbb
cmp
inc
test
add
mov
leave
sub
mov
xchg
std
mov
jecxz
and
ja
cmp
push
dec
mov
sbb
jp
mov
xlat
push
loop
xchg
aaa
rclb
pop
jns
lock
cmp
insl
jae
xor
jns
sub
dec
dec
and
popf
jne
or
mov
lret
add
xor
sbb
adc
fnsave
sub
push
jmp
inc
addl
sbb
push
pop
fwait
mov
lret
push
adc
mov
leave
aaa
sbb
cmp
fmull
jmp
pusha
in
scas
adc
mov
scas
stos
push
sub
subl
stos
inc
mov
std
aad
sarb
dec
xor
add
stc
jbe
jae
cmp
dec
add
test
das
xchg
mov
fsubrl
ret
fdivrp
faddp
mov
jg
lea
jo
xor
out
int3
decb
xchg
ja
insb
pop
imul
mov
je
shll
aaa
push
inc
jge
mov
out
imul
addr16
inc
xchg
push
rcll
scas
dec
hlt
popa
fwait
stos
lods
jae
into
cmpl
push
lock
sbb
mov
or
sub
fisubs
sub
add
repz
mov
test
fidivs
test
cmpsb
mov
ss
cmp
stos
mov
gs
xchg
inc
mov
ds
pop
mov
movsl
call
dec
xor
push
cmc
and
fistl
xchg
inc
scas
jnp
cmp
into
sti
push
add
cmp
outsl
jl
loop
rorl
popf
loopne
inc
add
cmp
cltd
cwtl
pop
lock
mov
mov
fstpl
pop
jmp
lret
pop
dec
cltd
stos
inc
jecxz
adc
dec
dec
scas
test
fwait
cmpsl
aaa
sub
mov
stc
sbb
sub
mov
mov
cmc
pop
pop
push
and
loopne
imul
adc
stos
adc
test
xor
idivl
daa
out
in
push
xchg
es
cmpsl
or
shll
call
lds
mov
inc
push
sub
in
xor
out
negb
inc
push
jecxz
aam
dec
mov
inc
stos
xor
lock
je
test
scas
cmc
out
enter
pop
add
mov
repnz
aam
xchg
mov
loope
push
in
cmp
lret
add
repnz
in
cs
sub
imul
cmp
test
pusha
xor
or
aad
push
sub
xor
into
out
dec
inc
lods
shlb
mov
repz
sub
repnz
stos
add
out
pushf
not
es
cmpsl
mov
repz
iret
push
ret
lods
push
mov
adc
add
inc
push
jecxz
or
and
xchg
sbb
xor
das
push
dec
mov
test
jno
pop
or
scas
push
pusha
fistpll
sti
adc
sub
xor
adc
out
mov
mov
loop
push
rcl
test
mov
cmp
shll
xchg
popf
push
jne
inc
or
xchg
leave
push
adc
jno
bound
cmp
adc
lahf
daa
in
cmc
push
jno
or
test
shlb
jle
insb
mov
and
adcl
lret
mov
adc
xchg
inc
in
ds
out
popa
cmc
dec
inc
pop
scas
or
cli
xchg
jne
cmpsl
jbe
repz
xchg
and
adcb
out
jmp
sbb
mov
sbb
xor
and
fisttps
mov
jnp
loop
xor
jnp
cmp
pusha
adc
ss
out
xchg
lods
movsb
stos
cmp
pop
aas
loopne
and
inc
pop
adc
sub
js
jns
pop
movsl
jae
mov
pushf
leave
shll
mov
mov
mov
sbb
xchg
sbb
sub
int
enter
loope
add
fidivrs
insb
jnp
into
sbb
lahf
movsb
ret
fidivrl
aad
pop
mov
in
ss
orb
test
cwtl
xor
ljmp
call
je
or
test
enter
orb
lret
insb
push
dec
aam
mov
and
data16
xor
in
fcoms
sti
test
into
aaa
pop
test
sub
es
cmp
loop
sbb
push
lret
or
jnp
adc
xchg
push
sahf
push
cmpb
and
dec
mul
loope
andb
shlb
fcom
add
mov
mull
fbld
outsb
icebp
gs
adc
clc
addr16
add
cmp
aad
mov
aas
test
push
aad
xorb
jmp
rorb
mov
mov
push
mov
cmp
popf
cwtl
imul
jp
movsb
adc
pushf
xchg
pop
stc
jb
sti
and
cmp
jp
cwtl
and
mov
jl
jns
xchg
xor
ret
jae
fdivrl
mov
xor
xchg
mov
ja
aam
cmc
sti
jecxz
dec
dec
fnstenv
adc
mov
aam
dec
into
xchg
aas
test
xor
in
or
sti
dec
mov
fisttpl
popa
jg
mov
insl
inc
or
cmp
int
mov
or
sub
mov
lock
iret
or
pop
mov
dec
adc
sub
aam
bound
bound
arpl
sbb
add
xorl
popa
int
outsb
push
mov
adc
ret
and
jge
dec
pop
bound
stc
adc
adc
adc
out
idivl
cmp
adc
test
icebp
inc
mov
pop
mov
out
sub
mov
xchg
mov
xchg
lds
push
hlt
push
cltd
or
inc
or
lahf
adc
mov
inc
or
sti
jg
inc
nop
test
pusha
mov
sahf
ss
adcb
stc
addr16
add
pop
mov
xchg
jns
mov
dec
adc
in
leave
div
or
xchg
or
lods
insl
cltd
dec
inc
das
inc
mov
pop
scas
cmp
pop
sbb
pop
xor
mov
jge
cmp
jl
ds
pushf
mov
mov
cwtl
mov
pop
pop
add
or
bound
dec
xchg
outsl
in
je
call
aaa
std
jl
push
into
push
lcall
pop
push
push
mov
popa
sub
xor
ret
mov
loop
inc
xchg
repnz
loop
gs
push
out
rorb
mov
or
insl
mov
xor
ds
daa
lods
ror
loop
outsb
xor
outsb
push
mov
cmpsb
pop
cmp
inc
outsb
ss
cmp
adc
inc
and
sub
pop
push
scas
mov
pop
stc
xchg
lods
into
sub
out
ljmp
xchg
mov
fcmovne
inc
mov
daa
mov
fdivrs
daa
insb
add
leave
sbb
cmc
hlt
xchg
adc
mov
test
aaa
movsb
ds
test
aas
xchg
xor
pop
lods
in
mov
sub
pop
packsswb
mov
push
inc
mov
mov
pop
dec
mov
xor
pusha
popf
dec
outsb
jle
push
pop
bound
and
mov
mov
xor
jbe
repnz
into
lods
sub
xor
xor
sub
push
loope
mov
aam
div
push
jbe
xchg
in
cmc
stc
imul
ljmp
divb
dec
jbe
inc
negb
cltd
xchg
jge
xchg
out
movsb
cltd
sahf
xchg
insl
mov
mov
aaa
inc
faddp
out
mov
push
xchg
call
jno
scas
xchg
fdivrl
subl
push
xor
adc
lods
js
out
js
mov
ret
and
les
mov
or
or
fs
ss
dec
jl
loop
mov
dec
mov
push
addl
sub
pop
push
mov
insb
inc
pop
cmp
mov
adc
ja
jge
push
sti
out
push
fisubs
outsb
cs
cmc
pop
shlw
push
or
lret
pop
outsb
mov
jb
les
roll
mov
mov
shll
mov
dec
lret
sbb
inc
dec
stos
inc
mov
pop
jnp
call
xlat
sbb
sub
mov
mov
push
push
xchg
mov
lods
pop
pop
mov
or
std
out
repnz
mov
rcrl
xchg
pusha
or
adc
addr16
jno
popa
and
sub
aad
rcl
stos
lcall
sbb
dec
iret
push
jl
push
incl
shl
add
xor
out
dec
rorb
cmc
loop
push
push
fiadds
insl
stos
fnsave
insb
push
add
cmp
jle
ljmp
lds
pop
sahf
lods
hlt
outsb
cwtl
xchg
into
jnp
or
adc
dec
and
adc
aaa
stos
xor
mov
xchg
xchg
imull
or
push
adc
scas
jo
cmc
sub
ficompl
addr16
mov
pop
mov
popa
imul
add
decb
scas
and
lds
mov
mov
jno
rclb
pop
es
faddp
loopne
jecxz
mov
pop
inc
lods
fwait
out
sub
aam
loopne
dec
and
jl
in
jno
test
and
enter
or
sub
mov
iret
pop
sbb
fstl
mov
les
mov
sub
lret
mov
adc
mov
pop
movsb
icebp
push
out
adc
out
inc
inc
cmpsb
test
rclb
sbb
inc
jnp
into
leave
lea
out
andb
lcall
movsl
sbb
pop
repnz
inc
mov
dec
fidivrl
pop
mov
mov
stc
xchg
sub
or
mov
jnp
leave
sbb
sbb
sbb
int
pop
cwtl
hlt
inc
aam
inc
popf
cmp
sub
dec
adc
cld
sbb
sbb
shr
xlat
stos
ljmp
js
ffreep
stos
pop
add
or
or
fdivs
outsl
jo
shll
cli
dec
mov
hlt
mov
xchg
in
inc
jp
add
dec
rcl
mov
fistps
cmp
in
lods
movsl
scas
mov
add
je
test
daa
cmpsl
pop
pop
dec
jae
inc
mov
enter
into
and
push
int3
mov
xchg
mov
sub
iret
test
mov
stos
mov
sub
fidivrl
vandnps
loop
sbb
and
sub
add
cmp
mov
cmp
outsb
push
cmp
inc
mov
mov
js
pop
sbb
ss
adc
test
or
ljmp
push
cltd
cwtl
dec
push
or
ds
xlat
fs
pop
aad
orb
push
jno
aaa
add
movsb
inc
scas
add
or
subl
dec
lods
shr
push
push
xchg
add
inc
xor
and
pop
mov
movsb
aam
adc
shlb
inc
ljmp
push
xchg
jae
je
adc
int3
loopne
insl
repz
call
xchg
xlat
fcoms
repz
and
sbb
enter
loop
mov
lea
icebp
dec
inc
mov
hlt
xchg
cmpsl
dec
nop
lret
aam
add
push
dec
xchg
aad
xor
mov
movsl
xor
outsl
xchg
stc
add
dec
push
dec
ss
insl
add
jne
test
out
xor
das
scas
daa
mov
cmp
rcrl
cmp
jbe
ret
loop
popf
pop
cmp
add
jmp
pop
add
popf
test
cld
insl
ss
repnz
inc
pop
sti
jo
movsl
out
mov
mov
inc
daa
std
mov
pop
out
testb
stc
or
jg
sub
sbb
rclb
lods
sub
std
mov
xor
stc
lock
and
js
cmp
out
mov
cmpsb
ja
jge
pusha
loop
in
inc
cltd
xchg
cwtl
adc
lret
fisubrs
add
out
mov
pop
mov
jle
arpl
loopne
roll
dec
sub
xor
packssdw
lods
push
mov
push
or
lods
xchg
adcb
jb
lret
cmpsb
jmp
movsl
jp
push
test
lret
jmp
hlt
push
fcmovnb
and
sub
decb
jg
sub
cmpsl
ret
out
xchg
pusha
sub
mov
lds
popf
push
outsl
and
xor
jle
push
pop
int
sbb
stos
pop
xchg
mov
aad
lods
imul
sar
jecxz
sbb
jle
xor
adc
inc
in
mov
inc
pop
inc
shlb
and
lods
adc
ljmp
sbb
in
lea
inc
mov
push
jg
sbb
mov
cmp
mov
sub
ret
test
push
ficoms
mov
mov
mov
dec
nop
out
imul
and
xchg
jno
call
jbe
inc
fs
add
or
mov
mov
push
loop
sub
mov
xchg
insl
pop
scas
xor
std
adc
mov
xor
jb
mov
sbb
or
pop
out
jg
idivl
jno
repz
push
pop
xor
adc
fcoms
sahf
in
fst
xchg
mov
add
xchg
jno
jae
sbb
rorb
and
rcrb
pop
pop
fs
out
adc
stos
sbb
jmp
inc
fxch
dec
ret
pop
and
ds
in
out
xchg
xor
cmpsl
cltd
sub
cld
pop
add
xchg
call
or
or
into
jl
ljmp
mov
xchg
or
ljmp
lahf
into
pop
loop
dec
fmull
add
test
out
movsl
inc
les
pop
dec
sbb
jl
jp
imul
or
xor
popf
ror
stc
mov
nop
outsl
or
lods
out
push
lcall
pop
sbb
pop
or
add
pop
mov
repz
out
in
stc
test
leave
jae
jecxz
jl
mov
pop
push
mov
mov
mov
andl
add
adc
les
fdivrs
daa
lahf
nop
jp
mov
jno
popf
loop
xor
cmp
in
inc
bound
fbstp
mov
inc
mov
fistpll
imul
or
adc
loop
insl
enter
gs
fwait
xor
imul
das
ljmp
nop
dec
imul
xchg
sahf
add
mov
pop
or
movsb
shlb
xchg
jae
sti
pop
mov
lods
adc
pop
mov
dec
insb
lret
and
sbb
aam
xchg
xor
mov
cmp
sbb
inc
call
lret
mov
xchg
fld
mov
scas
push
jmp
cmpsb
lods
pop
dec
in
cmp
dec
push
repz
enter
dec
addr16
aaa
scas
xor
mov
call
pop
mov
sbb
mov
roll
mov
repz
in
xchg
add
pop
faddl
je
aad
mov
inc
lock
std
xor
jo
push
lods
xlat
lock
jg
movsl
mov
insb
mov
cmpsb
call
movsb
jb
or
xor
test
ds
enter
outsb
mov
pop
ja
and
adc
cltd
fucom
decl
jns
inc
out
sbb
aam
dec
pop
dec
fldt
dec
data16
xlat
repnz
popf
call
mov
les
in
sub
jmp
xor
or
cmp
cld
sub
or
test
loop
xor
gs
repnz
xor
and
in
xlat
call
fwait
lds
inc
sub
test
leave
imul
mov
push
cmp
jle
mov
aas
js
mov
cmpsl
sbb
add
adc
xchg
cmc
sub
lcall
sub
adc
push
mov
test
les
les
xor
rcrb
test
out
mov
mov
cmpsl
push
movsb
call
add
test
sarb
and
imul
dec
sbb
jge
fistps
cmp
jns
outsl
xor
or
repnz
inc
insl
fsincos
sub
mov
sbb
fcomp
stos
sbbb
push
or
add
stos
dec
jne
notb
xchg
jbe
mov
mov
sbb
inc
xchg
call
xchg
arpl
xchg
ror
cmpsl
mov
xor
jno
cmpsl
in
hlt
pushf
mov
std
adc
nop
add
js
cmc
fildl
or
adc
inc
xor
jno
push
adc
inc
test
xor
not
scas
jno
aas
jno
add
push
mov
nop
cmc
mov
repz
and
in
in
scas
mov
mov
xchg
xor
pusha
pop
xor
fsub
out
test
or
adc
divps
push
dec
jae
shr
xor
lret
mov
push
aad
out
dec
or
adc
mov
aas
gs
mov
loop
jg
pop
imul
pop
lcall
xabort
fcoml
push
jle,pn
int3
in
outsb
out
adc
mov
loop
test
inc
sub
xchg
cltd
inc
adcb
mov
gs
dec
clc
jb
scas
cmp
and
pusha
call
dec
fwait
loop
dec
sbb
imul
mov
mov
cmp
jo
dec
repnz
in
add
popa
outsl
div
jg
jg
mov
push
xor
loop
or
and
iret
ds
lret
cmp
out
icebp
or
xor
nop
stos
jmp
ret
test
jmp
incl
and
jnp
inc
jne
jge,pt
dec
hlt
sub
jecxz
subb
loop
ja
dec
push
dec
mov
or
pop
cltd
dec
xchg
sub
sbb
test
lcall
xchg
cmp
cmpb
stos
je
out
push
fimull
out
out
std
clc
xor
mov
aaa
cmpsl
fmull
js
jbe
jmp
fsubrl
fnsave
aad
dec
xchg
push
mov
push
xchg
push
cld
mov
dec
push
add
es
add
xor
sbb
std
xor
popf
sub
and
or
cmp
out
scas
jg
pushf
ret
sub
popa
std
jp
push
clc
repnz
jmp
fisttps
add
in
icebp
orb
lea
mov
push
jbe
pop
mov
loop
push
dec
icebp
imul
lods
imul
inc
sbb
out
mov
shlb
or
testb
idivl
mov
lret
xlat
sbb
daa
push
mov
in
xchg
jmp
test
xchg
add
or
mov
ss
loopne
lock
xchg
jecxz
fbld
lret
imul
movsl
shlb
cli
push
sub
fadds
sbbb
aas
loope
mov
mov
dec
sbb
pop
jns
in
test
sbb
lods
nop
mov
les
das
imul
ret
out
inc
scas
call
cmp
mov
out
outsb
adc
add
aaa
xor
fcmovnbe
lahf
andl
pushl
xlat
bnd
mov
mov
jle
andl
mov
push
xor
dec
cmp
lret
fstps
xor
pop
dec
ret
cmp
imul
cs
xchg
leave
test
push
ret
data16
push
enter
xor
stos
dec
fidivrl
add
push
mov
and
xor
mov
push
in
mov
dec
sub
push
pop
loope
pop
test
mov
movsl
add
mov
inc
pop
in
xor
adc
mov
xchg
xor
mov
add
dec
pop
mov
add
adc
or
clc
je
insb
cld
cmc
sarl
imul
les
scas
mov
and
leave
adc
adc
mov
aam
leave
cwtl
push
jg
xor
mov
jge
cli
outsb
mov
pusha
and
mov
repnz
sbb
movsb
sbb
movsl
leave
pop
testl
lods
dec
call
xchg
xor
xlat
xchg
sub
push
fistpl
mov
dec
or
into
cs
test
fstpt
mov
xchg
insl
mov
sbb
push
sti
jae
rol
mov
fisubl
stc
cwtl
push
adc
mov
inc
xchg
xchg
pop
js
fdivl
leave
xchg
in
data16
mov
aam
dec
jnp
data16
push
and
mov
lret
iret
fnstenv
roll
sti
mov
test
dec
and
add
jne
pop
dec
mov
sub
hlt
push
cmp
or
xor
jae
lods
fstps
or
nop
data16
push
roll
jle
inc
gs
push
push
and
mov
ret
inc
jbe
sub
xchg
adc
ror
adc
cmp
loope
ds
enter
cltd
xchg
stos
out
push
mov
adc
mov
push
push
pop
or
jge
push
dec
sarl
test
mov
shlb
leave
adc
push
inc
shl
cmpsb
ljmp
loopne
cmp
fs
pusha
jnp
es
mov
icebp
or
adc
fistl
inc
lcall
mov
std
cmc
mov
mov
add
pop
in
xchg
push
dec
push
scas
pop
movsb
std
push
push
out
fidivrl
scas
and
ret
sti
sub
mov
aaa
jp
mov
ret
scas
stos
xorb
or
test
mov
test
mov
push
subb
mov
pop
pushf
ds
call
add
mov
mov
mov
imul
mov
clc
in
aad
jnp
loopne
movsl
out
pusha
inc
cmp
sbb
mov
sub
dec
add
lods
out
xor
cltd
xchg
and
dec
cltd
shlb
add
stos
in
push
mov
syscall
jne
pop
testl
inc
sbb
xorb
jmp
lea
imul
pop
lcall
popa
das
push
push
std
push
jge
lret
dec
cltd
mov
mov
mov
mov
cmp
mov
pop
and
jmp
inc
stos
fldl
xchg
sub
push
daa
fs
enter
les
or
sub
in
mov
push
es
mov
and
daa
out
sti
cmp
les
lods
cld
loope
cli
rorb
outsb
jbe
or
int3
sub
xchg
scas
ljmp
aaa
imulb
mov
addr16
addr16
sub
xchg
add
call
cmp
pusha
cmpsb
dec
les
dec
cwtl
dec
adc
loope
jbe
repnz
mov
xlat
and
push
add
test
iret
pop
jno
and
lea
mov
cmp
mov
sbb
xchg
fcomi
icebp
add
ret
ret
push
sub
arpl
add
xchg
jns
fisubl
add
daa
jae
push
out
call
fwait
loope
pop
pop
cmpsb
or
cmp
mov
fisttps
push
cmpl
shl
pop
dec
test
cmp
jge
cmp
mov
pop
cltd
mov
fcompl
xchg
xchg
jno
popa
rclb
decb
int
enter
jle
fs
xchg
cmp
pushf
sti
xor
int3
ror
mov
aas
addr16
mov
jmp
das
ja
pop
add
sbb
inc
pop
pop
pop
and
insb
push
adc
and
outsb
sti
pushf
fldt
bound
cmpsb
movd
psubusw
pop
movsl
or
mov
es
adc
pop
push
adc
iret
xchg
mov
mov
popa
ss
sub
dec
cmp
mov
sti
pop
cmp
lods
adc
rclb
cli
leave
jb
push
lock
inc
mov
add
lock
aad
cmp
sbb
push
push
and
xchg
adc
inc
and
ljmp
xchg
scas
inc
and
mov
cld
movsl
xor
pop
dec
xor
jmp
mov
xor
sbb
mov
sti
loop
dec
outsb
aad
sub
enter
mov
lahf
sbb
push
jo
sbb
or
dec
push
mov
mov
ljmp
xor
jne
imul
fsubrl
adc
inc
test
cmpl
jae
mov
cwtl
xchg
movsb
xchg
test
xor
jl
fiadds
mov
pop
lods
cmp
pop
cwtl
sti
rcr
or
dec
das
mov
mov
lea
and
icebp
pushf
lret
cmp
mov
lea
rcl
add
cmp
adc
inc
std
out
ret
xchg
xchg
loope
mov
pop
aam
add
sbb
int
mov
dec
leave
dec
cmc
pushf
pop
adc
xor
dec
lock
lret
push
imul
push
mov
mov
iret
popa
add
add
outsl
cmp
xchg
sbb
insl
pop
add
arpl
js
dec
pushf
rep
scas
sbb
add
imul
pop
jle
pop
jo
mov
clc
loop
mov
sub
push
xor
pop
popa
in
lock
aad
mov
jle
xchg
dec
adc
neg
xor
dec
xchg
xor
pop
cmc
jne
xor
test
xchg
xchg
andl
stc
jns
mov
sbb
addr16
mov
or
js
decb
dec
inc
leave
cmc
lret
adc
mov
xchg
repnz
aam
jecxz
xor
sub
test
scas
push
cmc
ja
or
or
xlat
jge
jmp
pop
in
inc
fwait
cwtl
shrl
test
xchg
dec
xchg
xchg
or
cmp
mov
outsb
xchg
rorl
lahf
leave
mov
jl
pusha
push
jno
and
push
adc
stos
orl
imul
cwtl
sbb
sub
mov
pop
mov
or
or
ror
leave
test
jmp
adcl
xchg
into
xchg
pop
xor
cs
push
or
xor
push
loop
mov
stc
fsts
dec
test
pop
icebp
add
aaa
xchg
scas
pop
adc
cmp
frstor
std
and
mov
or
pop
outsl
cmp
push
add
lods
movsl
inc
es
test
hlt
pop
add
ljmp
mov
sqrtps
mov
mov
jo
lods
jbe
movsl
xlat
jecxz
pusha
mov
rcl
xchg
jns
inc
jle
adc
pop
inc
jle
in
push
mov
lock
js
mov
jne
push
sbb
jl
test
repz
shrb
fldt
push
pop
lods
or
lahf
mov
repz
and
and
and
sub
cmp
pop
pop
dec
mov
test
mov
adc
je
add
sub
jbe
mov
ja
xchg
fwait
out
pop
or
adc
xchg
in
loope
jnp
push
ja
sub
jle
cld
adc
pop
andb
adc
daa
loopne
mov
std
pop
int
mov
lock
mov
pop
xchg
mov
sbb
data16
push
fidivl
in
dec
mov
imul
add
push
stc
jnp
xor
mov
lea
add
fsubrs
mov
mov
pop
push
fldl2e
lock
mov
mov
dec
pop
push
pop
xlat
mov
push
xor
je
mov
mov
loopne
mov
std
mov
sub
movsl
adc
outsl
or
push
xor
rorl
gs
mov
shrb
push
dec
cmp
es
push
cli
xchg
mov
nop
fidivs
adc
push
or
popl
orl
xor
xchg
push
mov
add
enter
adc
mov
rcrb
cmp
inc
test
testl
repz
jg
dec
pop
xchg
lar
xchg
fwait
xor
mov
sub
stos
push
fcoms
fwait
cld
xchg
scas
jae
loope
out
popa
sarl
ret
adc
fcoml
cmp
cmp
pop
dec
push
jnp
push
loopne
xlat
sub
aas
xlat
stos
loopne
inc
and
aad
icebp
cmpsb
mov
jbe
test
mov
jmp
int3
mov
dec
lahf
notb
add
pop
xor
dec
adc
xchg
xchg
loop
xchg
shrb
jl
or
aas
mov
scas
addr16
pop
push
mov
out
int3
add
mov
shl
jae
dec
rcr
push
lcall
scas
push
lcall
sbb
cwtl
or
nop
push
into
stc
addb
gs
sub
test
rcrl
cmpsl
je
shlb
and
stos
jne
inc
into
in
xchg
mov
pop
sub
sarb
and
cmp
add
push
incl
pop
int
push
leave
jecxz
sti
or
ror
push
aam
cmp
into
and
jbe
or
jecxz
sub
fcomps
lcall
cld
fldl2t
fstpt
jecxz
pop
pop
gs
jns
jle
jp
pop
movsl
ljmp
insl
push
iret
mov
scas
into
push
popa
ret
jle
add
mov
sbb
mov
and
jnp
aam
adc
adc
xor
push
sbb
movsl
fmul
orl
js
fmull
push
dec
enter
sbbl
loopne
pushf
stos
xlat
inc
push
les
xchg
sahf
mov
jle
mov
mov
adc
insl
jae
mov
xchg
mov
or
jge
mov
das
clc
repz
sub
jle
push
dec
nop
push
mov
mov
add
xor
ja
or
je
push
adcb
test
ja
in
in
xchg
cmp
loopne
test
aad
in
test
imul
add
fldl
push
call
push
sub
jae
popf
lock
movsl
test
orl
push
mov
imul
xlat
lret
cltd
jmp
jp
repnz
mov
rclb
jmp
mov
shlb
xor
adc
inc
push
movsb
xchg
mov
sbb
mov
icebp
adc
insb
mov
mov
or
push
xlat
sbb
or
xor
cmp
fcomi
cmc
jge
dec
test
pavgw
inc
sub
mov
stos
cmpsl
add
jmp
sub
cmp
cltd
popa
ljmp
sub
rcrl
repnz
arpl
cld
pop
fwait
call
fxch
ja
loope
dec
adcl
jnp
pop
icebp
pop
loop
out
arpl
jno
test
insl
das
xchg
aas
mov
aas
ret
in
stc
popa
std
cmovl
aam
push
fs
pop
jne
adc
push
sarb
mov
push
inc
imul
lcall
or
aad
adc
cmpsb
push
inc
xchg
sub
push
mov
mov
cmc
dec
mov
sahf
out
cmp
scas
xor
push
sbb
jb
sti
leave
in
sbbl
outsl
push
fimuls
xchg
xor
in
outsl
or
sbb
pop
mov
dec
push
mov
add
ljmp
mov
adc
jne
dec
leave
sbb
pop
loopne
dec
inc
add
mov
jno
jl
inc
pop
inc
and
adc
xchg
jmp
testb
insl
add
sti
test
cmc
je
pop
enter
dec
jg
inc
sti
mov
jno
lods
ret
xchg
xor
inc
mov
inc
xlat
sub
pop
inc
imul
out
in
push
je
add
in
adc
lcall
lcall
test
out
scas
ror
xor
into
or
mov
test
mov
insb
out
add
aad
loopne
dec
and
and
loopne
lcall
out
mov
test
insb
mov
add
mov
mov
adc
xchg
lret
jbe
fdivrs
popa
xlat
cmc
xor
jbe
cs
sarb
jnp
sub
xchg
in
adc
inc
daa
loop
outsl
je
rcrl
jo
ljmp
enter
cltd
pop
stos
data16
jns
xchg
mov
enter
xchg
out
jmp
cmp
sbb
cmp
mov
in
mov
adc
jns
mov
imul
mov
cmp
xchg
stc
cld
mov
aaa
popf
outsl
fwait
pop
scas
sbb
cli
xchg
int3
ret
lret
push
or
sbb
pop
add
cmp
bound
das
mov
rcll
loop
xor
dec
iret
into
adc
je
stos
in
xchg
scas
or
xlat
dec
mov
mov
dec
adc
lret
xchg
addr16
rorl
mov
cwtl
or
cli
push
das
mov
repnz
rcrb
sub
clc
inc
pop
fidivs
fdivr
mov
gs
push
adc
xchg
inc
orl
mov
xchg
cmc
cmpsl
xor
xchg
add
and
xchg
negl
roll
lahf
ja
aas
fwait
adc
lea
add
push
dec
pop
scas
mov
int
in
lods
nop
pop
push
ret
js
loope
cmp
or
pop
enter
bound
arpl
cmp
test
and
test
mov
sarb
pop
mov
mov
add
jo
inc
mov
mov
push
rolb
stos
mov
mov
push
mov
ds
pop
orb
inc
jnp
out
sahf
nop
sub
pop
out
jg
pop
sbbl
lods
ret
pop
movsl
addr16
hlt
int3
dec
dec
jg
pop
mov
push
sbbl
negl
sbbb
xchg
int3
sbb
repz
or
test
cmpsl
sbb
cld
adc
mov
andl
hlt
pop
ficompl
and
lods
sbb
aam
xchg
dec
jge
loope
add
nop
rol
mov
jo
push
push
mov
mov
aam
mov
pop
push
loop
enter
es
adc
add
dec
pop
or
iret
data16
pop
xor
inc
jp
enter
js
cmp
insl
and
test
stos
pop
out
rclb
icebp
dec
add
js
fsubs
ss
scas
add
sub
call
loopne
stc
scas
and
xchg
add
ficoms
cmpsb
cmpsl
test
mov
xchg
rcl
jmp
push
ja
sbb
lds
mov
pop
loop
jne
jp
or
fisubrs
test
add
xchg
dec
testb
pusha
xor
icebp
jns
jnp
and
in
cltd
xor
mov
sbb
jg
jne
mov
ja
sbb
imul
pop
das
stc
test
divl
fwait
sub
xchg
roll
and
mov
mov
pushf
and
dec
pop
loopne
cli
dec
add
mov
inc
stc
sub
or
adc
push
pusha
jnp
pop
sub
arpl
clc
push
inc
and
vmread
shl
mov
xor
inc
stos
adc
jnp
rol
in
xchg
mov
or
ss
dec
push
fsqrt
push
ficoms
sbb
mov
or
loopne
mov
fiadds
sub
mov
push
jns
and
pop
mov
imul
and
adc
jb
pop
out
sub
pop
imulb
xor
pop
cli
fsubrs
inc
out
lcall
mov
ret
outsb
int3
mov
rorl
je
jno
xor
or
and
nop
dec
add
mov
jno
or
enter
push
mov
or
cmc
sbb
push
dec
pop
cmpsl
out
movsb
cwtl
cmp
ja
adc
pop
ss
mov
xor
xchg
pop
loope
push
dec
leave
lds
aaa
js
mov
dec
adc
xchg
into
push
pop
cs
test
mov
lahf
les
cmp
jns
inc
xor
call
sti
popf
je
jno
jne
and
imul
dec
mov
cmp
mov
stc
lret
jns
or
mov
les
sub
std
sbb
add
lea
sti
fidivrs
jmp
sub
out
ds
test
aaa
mov
roll
hlt
push
enter
push
dec
pop
cmp
cmpsl
in
add
movsb
mov
xchg
adcb
jp
fmuls
xchg
cmp
push
sbb
add
scas
repz
mov
sub
divw
mov
out
mov
mov
mov
lahf
mov
int
rcpps
inc
mov
pop
fimull
push
cmc
mov
or
dec
cwtl
loope
scas
jae
mov
adc
pop
or
and
js
adc
mov
and
fstpt
push
mov
xchg
int
push
data16
jno
scas
sub
in
jne
scas
sahf
ficomps
int3
aad
or
clc
stos
jmp
mov
add
cltd
push
xor
test
mov
lds
add
das
es
pop
pop
jo
popf
ret
hlt
imul
adc
lods
data16
push
mov
push
mov
js
mov
mov
mov
inc
lcall
mov
data16
sbb
mov
fdivr
cmp
inc
pop
jp
mov
sub
cs
pushf
dec
jns
aad
outsl
or
jmp
pop
dec
mov
jecxz
out
push
add
inc
sub
repz
dec
or
cmp
xor
or
dec
loopne
mov
push
push
push
push
jmp
fisubs
jge
mov
xchg
xor
dec
and
push
mov
outsb
aam
jle
incl
pop
data16
or
out
jg
push
mov
ja
cmp
xor
sbb
aaa
cmpsb
popf
adc
out
cmp
daa
jo
stc
mov
push
xor
fnstsw
ds
lds
adc
adc
pushf
fstps
mov
mov
jl
scas
pushf
jns
mov
popa
negb
movsl
popa
mov
pop
mov
mov
leave
mov
mov
lods
mov
push
gs
or
sbb
push
xor
aam
mov
jnp
jns
add
inc
sub
sub
xchg
gs
xchg
repnz
mov
mov
iret
push
mov
dec
in
jno
lret
test
repnz
dec
inc
dec
jne
int3
int3
dec
ror
xchg
mov
and
jae
cli
or
or
sar
pop
cs
fsubr
nop
pop
fwait
stos
jle
outsl
cmp
sti
fnstsw
in
sub
push
push
sub
jecxz
loop
pop
xchg
jle
push
ljmp
mov
xchg
inc
shlb
xor
mov
roll
test
ret
mov
push
daa
stos
loop
sub
mov
aam
jl
mov
mov
ret
cli
adc
mov
jmp
pusha
popf
out
sub
cmp
test
dec
mov
sti
sub
clc
out
push
insb
sbb
jbe,pn
int
test
jle
outsl
pop
xchg
xchg
jnp
ret
pop
movsl
aad
cmc
aam
movsb
fsubrl
push
mov
iret
add
adc
jg
mov
and
int
movsl
imul
pop
bound
add
pop
nop
push
test
aam
gs
ljmp
fcomps
sbb
push
add
pushf
mov
xor
xorl
mov
mov
ljmp
int3
inc
ja
xchg
cmpsl
ds
sbb
mov
test
les
mov
sbb
xor
ja
dec
mov
mov
or
push
les
add
xor
into
aas
cmp
pop
popf
adc
adc
out
pushf
fiadds
add
sti
and
and
sub
pop
inc
es
mov
mov
cmp
in
mov
nop
fwait
inc
pop
popf
or
sub
outsl
aad
loop
or
lock
pop
cmp
pop
adc
cld
inc
add
add
add
pop
dec
push
iret
pop
xor
in
cmpsl
or
cs
mov
das
mov
dec
lret
lods
sti
stos
cli
inc
jne
cwtl
movsl
das
popa
pop
popf
cs
cs
pushf
fbstp
fidivs
push
dec
std
pop
mov
rolb
inc
cmp
je
loop
xor
xchg
push
add
mov
add
pop
js
mov
jno
das
push
dec
and
in
idivb
mov
dec
cmp
sub
daa
das
outsl
adc
testl
pop
push
and
xorl
gs
sbb
bound
shlb
pusha
pop
sub
daa
adc
mov
in
insl
lcall
jge
loopne
dec
in
mov
adc
lods
loope
mov
sub
push
xchg
incl
lods
or
out
stc
or
jae
cltd
fmuls
loop
pop
out
or
or
and
jmp
cmpsb
jnp
inc
pushf
mov
pop
jg
cmp
jnp
sub
xor
xor
cs
jb
data16
outsb
push
push
xchg
fxch
shlb
jge
adc
xchg
sub
sarl
scas
pop
add
mov
sti
insb
mull
xchg
and
sahf
divb
push
jge
push
fstpt
addr16
iret
dec
hlt
mov
dec
jecxz
pop
test
addr16
sbb
int
push
inc
lahf
push
jne
pop
int
pop
mov
pop
out
jae
mov
dec
or
mov
mov
in
movsb
cmp
loope
shlb
enter
mov
adc
lea
gs
lcall
jg
inc
test
loope
and
push
xor
out
subb
idivl
mov
shl
xchg
int3
mov
mov
shrl
faddl
cmc
call
out
roll
cmp
scas
test
jmp
leave
push
adc
je
cmp
adc
cmpl
mov
xchg
test
adc
sti
push
lock
push
push
jg
fcomps
push
mov
jns
mov
fimuls
sub
xchg
cmp
lea
cmp
cmp
mov
insb
fildll
out
mov
notb
dec
iret
jp
xchg
xchg
push
icebp
test
std
adc
mov
inc
ss
nop
cwtl
in
mov
jns
push
jae
xor
scas
outsb
jno
and
mov
sbb
leave
mov
or
test
in
sbb
dec
jns
jnp
push
hlt
jne
enter
aad
cmpsb
arpl
js
pop
cmpsb
xor
mull
stos
test
cmpl
mov
pop
fnstcw
adc
mov
lahf
sbb
cmp
mov
xor
cmp
aaa
mov
out
jecxz
cmpsl
ds
adc
cmp
xor
cmp
loop
mov
in
lahf
pop
sub
arpl
lods
push
pop
int
mov
sub
les
stos
push
lock
sub
imul
push
fisttpl
mov
mov
mov
or
mov
mov
int3
sub
and
add
push
push
shrl
jmp
mov
sbb
ds
scas
cs
push
lahf
cmc
sbb
push
fsubrs
mov
and
scas
jp
inc
or
daa
data16
aad
xchg
and
sbb
test
mov
inc
mov
xor
sub
mov
sub
hlt
add
dec
pop
xchg
dec
lret
shr
inc
push
pushf
sbb
sub
or
dec
ljmp
xchg
dec
fxch
push
cmc
push
mov
or
into
xchg
dec
lock
lds
insb
testl
mov
mov
dec
cmp
pop
sub
xchg
dec
lds
cmp
jp
addb
lods
mov
in
shlb
sti
shlb
int3
in
enter
es
jb
jp
pop
xor
and
xchg
or
lods
sti
andb
pop
xchg
jge
lret
idivl
loopne
int
dec
dec
test
push
sub
jecxz
dec
jns
popa
lret
jno
filds
cli
dec
or
loope
fcmove
push
out
pop
xor
pop
test
pop
mov
xchg
or
xchg
enter
in
lret
pop
mov
outsl
or
sub
jne
andl
mov
outsl
or
and
jp
sti
notl
xchg
je
dec
xor
pusha
xor
sbb
fildll
in
cmp
push
or
xchg
imul
push
notl
lea
lods
add
out
lods
arpl
ds
push
gs
out
les
imul
push
lcall
pop
mov
xorb
mov
cmp
mov
mov
mov
inc
add
fdivr
cmc
shlb
enter
cld
sti
add
push
add
lcall
pop
ljmp
dec
cmpsb
enter
outsl
sti
cmpsl
inc
leave
lret
leave
test
push
iret
lea
aaa
call
mov
mov
add
lea
jno
imul
add
push
jg
mov
cwtl
sub
mov
mov
stc
sub
dec
dec
mov
xor
xchg
cmp
nop
sub
push
mov
xor
pop
divl
sahf
aam
insl
pop
and
lea
jae
ret
enter
out
out
incl
cmp
mov
sbb
mov
out
out
mov
xchg
into
popa
pop
xlat
or
ss
add
js
imul
pop
jle
xor
jecxz
aam
pushf
pop
hlt
jb
push
rorl
mov
push
cmp
lods
xor
lea
insb
mov
sbb
adc
stos
or
jecxz
lea
push
inc
inc
pushf
in
pusha
es
into
jecxz
mov
lcall
add
jecxz
in
add
push
xchg
out
dec
pop
xchg
mov
mov
shrl
pop
cmp
cmp
fs
push
mov
pop
stos
jmp
mov
loope
test
sub
dec
mov
add
cmp
dec
cmp
fwait
imul
adc
icebp
in
test
outsl
pusha
gs
lret
shll
sahf
insb
add
out
leave
fists
lea
in
popa
jo
add
sub
fxam
xchg
out
mov
cmp
fsubrs
insl
xlat
jbe
lcall
push
sti
call
ljmp
xchg
mov
fiadds
mov
push
rcrl
mov
push
jmp
jo
insl
cmp
mulb
test
sub
into
inc
lds
dec
jae
mov
adc
xorb
lret
aaa
jno
addr16
sub
adc
rclb
sbb
adc
rclb
repnz
js
shrb
cwtl
std
aam
push
ds
loope
inc
jge
and
clc
cmp
add
scas
fdivl
insl
addr16
ficompl
leave
fsubrl
fsubs
push
rorb
jnp
incb
outsl
stos
sahf
leave
jne
jecxz
rolb
cmp
test
xchg
fistpl
aaa
push
and
cmpsb
fs
cmpsl
nop
repnz
in
lcall
loopne
adc
xchg
aas
cmpsl
ret
xlat
mov
xchg
lcall
mov
int
pop
scas
pop
sti
loopne
xchg
adc
cld
notl
lret
jnp
in
inc
push
push
push
out
stos
add
popl
inc
cs
sub
daa
lcall
neg
dec
mov
lods
mov
ret
pop
loop
das
ret
push
push
popf
xchg
mov
sbb
sub
aas
mov
mov
or
jecxz
icebp
shl
jbe
inc
cmp
pop
fstpt
lret
inc
outsl
cltd
mov
mov
mov
negb
mov
call
mov
xchg
sbb
jl
mov
sbb
mov
inc
jle
or
push
aas
icebp
and
rep
sub
mov
cmpsl
adc
.byte
adc
add
mov
mov
aam
xor
notl
mov
dec
inc
push
addr16
cmpsb
pop
daa
pusha
dec
pop
jl
cmpsl
mov
into
dec
leave
mulb
enter
jmp
inc
push
fbstp
mov
es
int
fs
push
dec
data16
insb
stos
inc
ljmp
loopne
and
xor
lea
ret
or
sub
dec
stos
sarb
xchg
jb
xchg
inc
pop
xchg
inc
dec
rcl
mov
inc
pop
cmp
dec
inc
and
lods
xchg
adc
test
ds
dec
mov
mov
fwait
in
popf
jg
loope
insl
jne
sahf
sub
mov
xchg
xor
jbe
mov
sbb
mov
std
lods
int
ret
lret
jmp
cmpl
ljmp
mov
test
and
in
fiadds
inc
es
shl
jle
stc
iret
jle
scas
lret
and
jbe
pop
dec
fdivl
jnp
push
mov
cmp
xlat
into
std
and
ss
sub
jnp
in
orl
insb
and
stos
into
or
stos
mov
jo
mov
adc
rcr
push
sbb
leave
movsl
cmp
dec
fimuls
inc
scas
in
outsl
xchg
pushf
cmp
push
in
sbbl
dec
mov
mov
stc
aam
sub
mov
mov
iret
imull
shll
popf
in
xor
popa
aad
test
pop
loopne
add
mov
sub
lea
dec
adc
sub
or
mov
nop
push
pop
ret
insb
je
movsl
cmp
in
cmp
je
xchg
xchg
rorl
xchg
pop
or
mov
scas
adc
jge
push
clc
add
cmp
jae
and
lret
jle
jo
jo
stos
mov
mov
jge
iret
xchg
ss
xor
push
inc
mov
jge
adc
and
out
icebp
test
rcll
xchg
push
or
repz
cmp
repz
inc
mov
es
call
push
or
jno,pt
and
push
addr16
les
push
call
pop
int
add
pop
ret
enter
jle
push
js
mov
les
push
add
les
call
mov
stos
mov
fidivs
mul
sbb
pop
dec
lahf
clc
aad
dec
mov
mov
leave
dec
into
movsb
xor
pop
ret
mov
outsb
inc
xchg
jo
sub
dec
or
jnp
orl
xor
mov
mov
cwtl
adc
in
dec
mov
pop
inc
and
lea
fs
sti
nop
loopne
mov
cmpsb
add
test
aaa
cwtl
push
mov
jo
jo,pt
xchg
pop
in
pop
sahf
negb
push
ror
aaa
xchg
jns
push
lea
inc
cmp
dec
pushf
xchg
inc
jo
jns
jecxz
ret
mov
mov
mov
lods
outsl
xchg
mov
daa
pop
xchg
mov
mov
or
xlat
pop
xchg
pushf
lods
rorl
mov
jb
xorb
outsb
cmp
test
fldenv
and
lahf
sbb
mov
mov
mov
fucomi
test
movsb
iret
cmpsb
test
insb
insl
and
ficompl
out
mov
call
push
jge
sbb
dec
mov
stos
add
stos
das
ret
sbb
jg
mov
repnz
sub
xchg
mov
mov
ds
push
sub
push
.byte
add
add
cmpsb
sti
pop
aad
sbb
in
aaa
sub
pop
lods
xchg
push
pop
push
dec
push
out
jle
add
js
mov
loop
lea
inc
mov
or
rclb
mov
cmp
inc
out
xchg
pop
or
mov
and
jb
pop
jb
incb
rolb
outsl
std
jbe
and
loop
jge
and
add
bound
pushf
pop
scas
inc
cmp
mov
jns
sarb
sbb
jg
or
aam
mov
sub
sbb
mov
neg
sbb
and
lods
and
imul
and
daa
xchg
ret
mulb
inc
and
js
jmp
ss
mov
xor
daa
mov
lea
jl
and
pop
enter
xor
in
les
adc
mov
mov
cmc
cltd
push
das
mov
push
bound
sahf
xchg
scas
lea
lds
jae
lret
les
inc
push
jns
pop
out
iret
mov
mov
or
xor
add
sarb
mov
aad
cmp
xlat
aaa
xorb
jbe
dec
pusha
pop
pusha
dec
lcall
pusha
pop
mov
push
mov
aad
mov
fsubrp
into
cmpsl
push
addr16
xchg
jbe
int3
popf
aaa
movsb
test
mov
aam
jbe
mov
push
nop
loop,pt
repz
ja
mov
repnz
pop
pop
add
xchg
daa
sub
mov
add
repnz
cmp
sbb
add
test
and
xor
insl
mov
adc
add
arpl
jl
cmp
xlat
movsb
inc
adc
dec
pop
cmp
clc
add
cmp
or
xchg
cli
.byte
xchg
fnop
.byte
add
addb
cs
sub
ficomps
ss
stos
test
push
sbb
into
xlat
jl
xchg
mov
stos
or
cmp
jne
or
lret
adc
in
ss
xor
pop
mov
mov
mov
fwait
xor
xchg
inc
push
dec
sub
mov
or
mov
movsl
push
mov
lahf
pop
push
sub
lahf
mov
pop
cmp
mov
sbb
jae
xchg
out
add
pop
in
aas
inc
mov
rcll
addr16
sahf
movsl
adc
sub
mov
inc
jo
popf
add
cmp
cmp
jnp
in
test
orb
and
sti
and
jmp
or
pop
mov
pop
push
jae
test
sbb
push
ljmp
sbb
add
ficompl
push
xchg
jns
mov
pop
xlat
inc
ss
lret
test
xor
mov
pop
cmpsb
daa
cld
fucomp
testb
jmp
das
jno
xchg
mov
ret
sti
mov
divl
dec
icebp
in
push
inc
jmp
dec
repz
mov
repz
xor
mov
xor
std
inc
push
mov
pop
pop
outsb
push
jl
and
cmp
flds
or
outsl
out
sbb
aaa
jg
adc
dec
jns
stos
je
adc
das
pop
idivl
xchg
sbb
int3
cmp
inc
repnz
in
sbb
mov
pop
popa
mov
xchg
xchg
push
je
les
adc
adc
sbb
arpl
cli
fcompl
xchg
jmp
push
mov
push
lds
add
lock
xchg
xchg
pop
dec
nop
xchg
inc
leave
cmp
mov
push
iret
lock
pop
pushf
adc
adc
mov
das
int3
adc
data16
jmp
adc
push
jae
lods
jbe
es
mov
andl
jbe
sar
or
aam
mov
push
icebp
daa
or
pop
push
cmp
fdiv
pop
push
adc
push
xor
scas
movsl
inc
jmp
js
icebp
mov
in
arpl
aas
notb
js
movsb
xchg
or
lahf
cmpsb
push
ror
push
add
mov
push
sti
and
js
adc
push
sbb
out
fldt
dec
jne
outsb
cltd
pop
clc
orl
fwait
jecxz
ret
sub
jg
ljmp
adc
and
xor
jb
mov
inc
loop
lea
cltd
je
mov
outsb
push
inc
jmp
pop
lret
cmp
pop
or
pop
fsubs
sbb
sub
sub
and
lock
popf
sar
aad
shlb
and
push
decb
mov
leave
sahf
inc
lds
mov
xchg
enter
mov
add
pop
xchg
icebp
je
push
push
add
mov
bound
mov
imul
dec
into
inc
pop
std
jmp
loop
outsb
inc
sar
rorb
les
rcrb
aaa
insl
arpl
push
aad
sub
dec
test
mov
mov
mov
pop
cltd
dec
movsb
cli
hlt
adc
les
inc
fsts
xchg
subb
push
xchg
push
les
push
or
add
xchg
ja
cmp
jns
and
out
dec
and
jp
and
push
fdivrp
stos
xchg
fimuls
jge
sahf
pop
cmp
movsl
sub
out
jg
jl
xor
mov
pop
mov
fnsave
jb
push
es
jns
cmp
cs
mov
les
nop
enter
popa
inc
push
hlt
lds
fsubrp
test
test
and
mov
in
sbb
pop
sub
mov
sub
xor
clc
into
sub
mov
sarb
cmp
dec
ds
fcoms
in
cmp
int
loopne
repz
testl
or
jns
push
in
or
insl
js
mov
add
loop
mov
ror
je
roll
xor
outsl
cwtl
and
aas
mov
addr16
fidivs
or
add
lret
cmp
xchg
cmpsl
jo
and
in
imull
in
adc
test
mov
sub
pop
mov
and
jbe
gs
jecxz
ret
fistpl
dec
test
push
xor
dec
jbe
inc
push
test
popa
pop
ja
sbb
sub
push
mov
cmpsb
mov
and
dec
sbb
lret
ds
xor
mov
pop
mov
lods
leave
mov
lret
mov
lret
test
fldcw
mov
je
mov
rcll
sub
sub
les
out
push
push
sbb
ja
repnz
mov
test
push
fmul
mov
inc
mov
icebp
sub
stc
and
cltd
loope
add
mov
adc
push
adc
xor
and
mov
fcomi
pop
xchg
or
jp
or
dec
push
and
cmc
and
and
mull
jle
pop
adcb
or
nop
dec
cmp
leave
insb
jmp
add
outsb
cmp
add
xchg
fwait
test
popl
mov
ret
xor
pop
adc
mov
jl
dec
push
stos
sub
shll
adc
cmp
adc
pop
mov
les
mov
jmp
loope
arpl
adc
std
mov
imul
mov
dec
pop
stc
out
loop
lcall
jp
add
inc
add
into
iret
or
mov
mov
mov
scas
jb
jl
shl
xor
dec
pop
push
addr16
sar
dec
js
shrl
xor
sbbl
and
les
add
bound
movsl
aad
pop
daa
push
mov
mov
inc
and
pushf
jl
jns
inc
cwtl
cbtw
adc
jo
test
lods
pop
nop
mov
aad
jne
cmc
test
push
das
mov
cmpl
adc
inc
xor
mov
inc
push
mov
dec
das
sub
xor
pushf
je
cmp
cld
adc
js
movsl
pushf
mov
mov
cmp
sub
add
test
and
fdivs
loop
pop
cmp
cmp
lret
pop
sub
inc
dec
and
push
jge
cmp
jae
iret
inc
jl
mov
push
cltd
mov
and
fbld
push
pushf
out
push
xchg
mov
push
loope
insl
roll
cmpsb
ljmp
push
aaa
sub
mov
scas
or
mov
adc
repnz
adc
jae
out
sti
sar
movsb
pop
loop
inc
cmp
insb
inc
push
mov
mov
inc
mov
ret
lea
xor
cmc
sub
xchg
aam
or
add
decb
hlt
movsl
add
xchg
insl
lea
loope
jo
pop
fs
mov
xchg
lods
pushf
xor
mov
hlt
test
sbb
xorb
inc
and
and
mov
cmp
xchg
stos
fwait
call
rcrl
push
mov
jmp
mov
mov
dec
pusha
sub
out
int
sub
fs
mov
cld
ficomps
jecxz
fwait
adc
out
adc
inc
enter
mov
xlat
jmp
jl
jbe
xchg
iret
inc
or
or
ret
push
and
dec
sub
inc
andb
mov
test
dec
mov
icebp
dec
rorl
cli
js
mov
adc
add
jnp
loopne
add
imul
int3
cmp
xor
repnz
repnz
mov
aas
lea
les
push
pop
hlt
pop
stc
test
mov
inc
fs
jnp
rorb
loope
std
nop
adc
add
scas
iret
pop
cs
push
jp
rolb
popa
scas
enter
pop
push
test
ficompl
mov
ljmp
xor
in
mov
arpl
nop
cltd
push
pop
mov
scas
sbb
xchg
xchg
pop
scas
cmp
xchg
sub
jg
fbld
and
pop
pop
cmp
pop
leave
or
sub
out
mov
xor
dec
push
inc
dec
adc
jp
jno
sub
ja
jb
dec
mov
iret
mov
and
test
add
jnp
ja
neg
xor
xchg
out
sbb
pop
movsl
out
cmp
lea
mov
fs
add
in
push
jle
scas
dec
adc
imul
popa
mov
sub
clc
test
cs
sbb
sbb
jg
pop
pusha
lea
mov
lods
shrl
imul
mov
xor
adc
aam
out
and
les
xor
js
gs
jbe
dec
daa
sbb
sbb
adc
pop
pop
sub
add
icebp
jmp
add
and
fs
mov
test
aaa
mov
arpl
jmp
mov
sub
mov
and
inc
adc
sub
fldenv
int3
sbb
adc
or
out
xchg
push
cmp
pop
and
fisubl
or
jne
dec
lock
adc
sub
or
sti
mov
cmp
dec
pop
sub
mov
add
sub
lds
xchg
aas
xchg
push
loope
mov
lea
mov
int3
scas
mov
xor
inc
xchg
mov
xchg
fs
pop
jne
aas
aam
and
fs
ja
loopne
inc
outsb
mov
sbb
sub
lret
or
xor
xor
fldenv
mov
addb
sub
ds
jecxz
jl
imul
aas
imul
push
test
push
mulb
je
sbb
stos
in
ljmp
dec
pop
jbe
inc
mov
pop
push
ror
cmp
jns
pop
int3
cmpsl
mov
add
gs
push
sti
mov
mov
jle
dec
and
pop
push
xchg
mov
shll
into
inc
test
xchg
cs
and
pushf
xor
push
or
and
rcrl
ljmp
add
test
jb
or
xchg
xchg
fs
push
mov
pusha
cmc
adc
mov
mov
sub
popf
sub
cmp
cmpsl
scas
cli
fmul
dec
int
mov
push
jae
std
clc
jecxz
je
jae
out
jbe
outsl
xchg
flds
adc
pop
inc
mov
pushf
aas
and
les
lds
cmp
cltd
in
lods
es
fiadds
xchg
sub
into
out
pop
cmp
int
movsb
mov
pop
mov
test
mov
pusha
cld
push
aaa
ror
xor
cltd
xor
nop
negb
jnp
cmpsl
outsl
into
push
mov
aaa
imul
xchg
cmpsl
push
aad
and
jno
mov
mov
push
rcrl
fisubl
xchg
jae
ljmp
fidivl
push
cmp
ror
mov
mov
jg
scas
jno
or
sub
jle
lock
adc
xor
stos
test
mov
ds
shrl
scas
cmc
lcall
test
iret
das
mov
add
in
popl
jecxz
scas
add
jae
sub
push
push
inc
fs
dec
sbb
pop
pop
mov
xor
ljmp
pop
test
xchg
or
jg
rcrb
mov
inc
xchg
cltd
jne
out
dec
in
push
adc
das
iret
mov
cmp
cmpsl
std
inc
pop
or
mov
mov
mov
rorb
or
addl
mov
frstor
and
or
push
fisttps
dec
adc
fcmovu
and
enter
imul
or
es
jecxz
ret
rclb
xchg
jnp
push
mov
jno
arpl
mov
int
dec
mov
xchg
pop
rcll
mov
and
bound
push
add
movsl
into
jl
arpl
xsave
adc
gs
pop
and
jne
inc
mov
mov
adc
outsb
inc
sub
adc
jmp
jb
mov
loope
lea
mov
sub
ret
push
insb
dec
adc
in
stc
push
es
aad
jecxz
repz
lds
negb
test
jmp
cmp
out
repz
jg
shrl
outsl
sbb
icebp
mov
fistpll
loopne,pn
adc
movsb
fisttpll
xchg
aam
jmp
xor
cmp
arpl
in
mov
or
add
lods
add
loop
mov
mov
xchg
sbb
mov
call
or
sbb
fs
inc
jbe
and
cmpsl
dec
testl
sbb
mov
mov
or
cmp
lods
or
dec
scas
les
sub
repnz
lds
scas
mov
sti
cli
mov
lahf
xchg
test
js
shrl
mov
xor
add
subb
jb
xchg
mov
filds
aaa
pop
add
push
clc
xchg
and
push
scas
daa
fstpl
fiadds
cmp
mov
adc
dec
push
xchg
jns
jle
repz
int
jg
push
pushf
jecxz
sbb
and
push
es
out
add
adc
jnp,pt
jle
lret
cmp
test
ljmp
or
jne
lcall
xchg
or
inc
ficomps
pop
aad
std
jns
push
add
shrb
jns
push
hlt
testb
stos
movups
cmp
inc
std
sub
paddw
cmp
push
mov
fwait
xor
push
sahf
into
fsubrp
jno
repz
aad
mov
mov
ds
jl
scas
ss
incl
jbe
hlt
insb
inc
pop
mov
pusha
adc
movsb
hlt
jle
pop
aaa
leave
push
stc
mov
inc
mov
push
xchg
push
mov
adc
mov
fbld
mull
jns
test
xlat
into
and
inc
add
cmpsb
test
mov
pop
fwait
lahf
inc
fsubp
adc
js
mov
adc
pop
xor
push
mov
popa
js
in
in
stos
mov
hlt
int3
jno
into
xchg
arpl
int3
sbb
sub
jb
shll
dec
repnz
mov
mov
inc
mov
xlat
xchg
mov
aaa
jle
and
jp
jmp
cmp
aam
inc
dec
xor
sbb
movsl
lret
inc
and
dec
or
repnz
in
xor
mov
and
xchg
push
xor
dec
out
fisubrs
cmp
or
repz
xor
fdivr
or
add
mov
inc
nop
cmc
outsb
xlat
sub
or
inc
lret
jnp
pop
aam
mov
cltd
cli
or
aad
inc
adc
scas
cli
in
fcoml
mov
mov
data16
ret
add
loop
fcomp
push
push
adc
orl
xlat
insb
add
popf
popf
cmc
arpl
push
inc
outsl
iret
sbb
dec
pop
orb
push
loop
inc
mov
outsb
test
sub
ret
nop
cmpsl
lret
add
fdivrl
outsl
pop
mov
inc
mov
dec
adc
jg
jns
inc
add
mov
sub
aam
pop
rolb
mov
ja
fs
adc
push
mov
insb
pop
jp
or
pop
aaa
mov
xchg
mov
add
xchg
jbe
xor
mov
sbb
inc
ss
clc
insl
jp
mov
xchg
stc
cmp
lahf
dec
cld
dec
paddw
add
and
addr16
test
leave
pop
push
cmpsl
mov
mov
adc
adc
imul
mov
out
out
dec
lea
jmp
je
cmp
ret
xchg
in
jmp
add
push
adc
lahf
jno
mov
and
push
and
push
dec
sbb
cmp
adc
test
out
testl
push
or
int
xor
xor
out
jecxz
loop
lods
push
adc
dec
jecxz
mov
push
push
jmp
movsb
cwtl
cli
ret
pusha
daa
adc
es
jge
dec
and
fidivs
test
test
clc
cld
xchg
nop
syscall
sbb
inc
fdivrl
jg
and
fcoms
jnp
dec
or
jnp
test
test
stos
adc
test
jo
insb
mov
addr16
ficompl
fistpl
sub
loop
aas
sub
jo
call
jns
xchg
or
enter
jnp
sub
jno
mov
xchg
sub
es
arpl
das
jecxz
clc
adc
test
inc
jo
mov
loopne
pop
jecxz
test
sub
inc
jmp
mov
dec
pop
adc
imul
sbb
notrack
add
rolb
cs
or
cmp
dec
dec
pusha
scas
dec
mov
aas
mov
ljmp
pop
fadd
pop
cmp
sbb
lods
lcall
or
push
xchg
sub
sub
subl
addr16
fldcw
shlb
cmp
int3
pop
jle
cmp
jns
int3
or
rorl
ljmp
pop
mov
imul
jmp
lds
adc
cmp
add
mov
out
sub
out
cwtl
cld
stc
lods
push
out
add
mov
fidivrl
jo
push
jae
push
sbb
enter
or
ret
sub
pop
cs
mov
sbb
mov
cmp
cmpl
xchg
xor
mov
mov
xchg
inc
adc
in
lcall
test
aam
imul
cmp
sbb
dec
jle
call
mov
jne
mov
xchg
cmp
out
and
pushf
lea
add
addl
mov
cwtl
adc
xchg
std
out
cmpsl
cli
sbb
ret
mov
mov
lcall
das
out
mov
adc
mov
dec
lahf
repz
aam
or
xor
movsl
mov
sbb
adc
stos
out
dec
test
mov
lods
inc
in
aas
outsb
stos
push
lret
sub
dec
push
or
and
and
cld
pop
jp
sub
imul
inc
push
int
lret
je
pop
mov
push
mov
movsl
ja
loopne
sbb
insl
ljmp
cmp
lcall
cwtl
fsubrs
lcall
shlb
sub
inc
xchg
inc
xor
sbb
andl
mov
loope
fsubrl
iret
dec
sbb
sbb
pop
dec
dec
test
fcmove
pop
cmp
sbb
pop
out
jmp
aas
mov
cmp
pop
test
lret
xchg
fmuls
pop
xor
xchg
jbe
inc
sahf
test
or
jl
cmp
inc
enter
scas
jo
fcmovnb
outsl
cmp
aas
sub
cmp
push
cmpsl
xor
scas
mov
sti
cmp
test
adcl
mov
imul
sub
or
andl
sti
xor
adc
and
les
add
jecxz
cmp
sbb
cmp
enter
pop
imul
test
or
mov
dec
xor
mov
cli
int
jmp
call
mov
aas
adc
es
iret
andl
pop
nop
rol
sbb
mov
mov
mov
ss
sarb
hlt
inc
dec
or
adc
mov
push
sub
xchg
push
bound
das
cwtl
mov
add
fwait
mov
repz
nop
adc
push
decl
push
adc
or
iret
mov
stc
inc
inc
inc
fidivs
decl
movsb
pop
sub
cmc
or
inc
mov
insb
mov
lcall
out
fucomp
testl
out
jne
les
ss
scas
and
cwtl
cli
xchg
into
dec
imul
pop
scas
fld
or
iret
and
lock
stos
out
call
lock
mov
sti
mov
ret
ret
and
sbb
pop
xchg
sbb
adc
sbb
sbb
je
nop
int
mov
insb
sbb
ret
rclb
les
push
int3
push
dec
sbb
repnz
mov
outsb
out
mov
andl
or
xchg
fwait
rorl
pop
pop
movsb
inc
or
or
add
enter
int3
jo
pop
fdivs
mov
es
cld
and
test
mov
sub
dec
call
call
dec
cmp
lcall
fabs
jmp
popa
mov
adc
jge
dec
push
xor
sbb
pop
fnstcw
mov
add
call
add
mov
adc
fiaddl
xchg
jb
mov
orl
jb
mov
imul
pop
shrl
adcl
jl
add
jns
inc
pusha
cld
sbb
das
jp
aas
enter
in
loop
cmp
gs
mov
jo
dec
sbb
insb
push
dec
pop
inc
dec
scas
xchg
pop
mov
push
dec
push
in
lret
inc
test
xchg
xlat
fdiv
insb
lds
and
mov
mov
mov
repz
xchg
xor
add
test
cltd
ds
dec
outsb
inc
loope
cwtl
jnp
call
inc
imul
lret
ret
cmp
fmulp
dec
enter
inc
add
mov
or
ror
cwtl
mov
repz
pop
dec
ds
and
xor
adc
fs
out
outsl
cmp
mov
dec
icebp
clc
enter
ret
dec
push
mov
outsl
push
and
fwait
rorl
lock
push
adc
push
out
mov
dec
ss
cmp
add
sbb
inc
jg
int3
dec
push
dec
mov
push
or
xchg
lret
lcall
pop
out
jge
xor
aaa
xchg
scas
bound
dec
add
inc
xchg
and
cmpsb
mov
in
xor
mov
adcb
mov
fmul
mov
ret
outsl
movsb
shll
mov
sahf
loope
fsubrl
jp
mov
mov
test
push
sub
shlb
add
pop
jno
hlt
sbb
jns
outsb
mov
lahf
xor
adc
stc
fs
ror
stos
jbe
test
in
mov
movsb
pushf
enter
jmp
hlt
sub
inc
dec
xor
or
jb
pop
cld
inc
xor
xchg
xor
out
xchg
mov
nop
int3
and
xlat
popf
pusha
call
xchg
test
jno
das
bound
xchg
add
xor
cmp
pop
cmp
mov
loop
push
bnd
imul
xor
pop
icebp
inc
negb
xchg
repz
pushf
fucomi
push
std
xor
or
sbb
flds
icebp
hlt
adc
idivl
mov
and
ljmp
mov
popa
lret
sub
add
test
ret
mov
scas
jmp
test
repnz
cwtl
xchg
adc
pop
aad
mov
pop
mov
push
push
cmpsb
int3
sbb
ret
sub
fisttps
mov
and
fldl2e
iret
sub
push
cmpsl
push
sbb
cwtl
mov
sbb
cmpsb
imul
out
push
mov
push
pop
outsl
leave
xchg
jp
sbb
rcll
repz
jb
push
es
js
outsb
mov
cs
pushf
jb
push
aaa
test
mov
or
cmp
mov
mov
clc
fstl
inc
jo
mov
icebp
push
jb
shll
cmpsl
lods
xchg
jg
mov
mov
mov
dec
loopne
add
mov
lahf
pop
mov
bound
xor
stos
pop
popf
mov
adc
enter
mov
aam
ret
cli
rclb
rcrl
jg
in
popa
cmp
jns
xchg
mov
out
cmpsl
es
lahf
sub
push
pop
lret
cmp
xchg
mov
dec
scas
push
testl
jp
xor
sbb
xor
les
adc
in
add
loopne
and
fdivl
sbb
iret
lea
dec
dec
jge
dec
shll
add
or
insl
rorb
dec
jae
arpl
xor
inc
jo
fcompl
jnp
mov
lods
jp
pop
lea
jecxz
cmp
pop
mov
pop
clc
sti
xor
mov
mov
stos
test
inc
mov
repnz
sbb
jnp
out
inc
repz
shr
push
std
add
call
mov
test
cmp
aam
incl
fwait
push
fwait
adc
cmp
outsb
mov
scas
mov
fs
cs
stos
imul
push
data16
jle
pop
je
les
dec
scas
insl
lret
jne
push
repnz
jo
add
ds
mov
insl
adc
mov
shll
sub
aas
ds
out
shl
aas
sarl
sbb
aad
lods
jp
daa
loope
sub
fcoms
js
je
xchg
cmp
jl
int3
stos
fs
lods
push
sbb
sbb
dec
popa
mov
lock
mov
negb
fstps
add
jecxz
cmp
leave
nop
sbb
and
or
add
gs
inc
test
adc
mov
es
mov
push
jbe
subb
jbe
lret
sbb
and
daa
js,pt
add
push
in
fidivrl
pop
fmuls
in
xchg
movsl
xchg
mov
cmpsl
push
sub
adc
and
sahf
les
movsb
push
out
pop
fistl
aad
fsubrl
inc
outsl
and
sbb
int
scas
and
push
cmp
lcall
outsl
jns
andl
hlt
lods
xor
mov
dec
out
out
fwait
sbb
int3
cmp
mov
aaa
aam
out
outsl
cmp
pop
out
xor
xchg
rolb
and
add
stos
pop
das
lock
push
sub
push
into
shlb
mov
dec
or
shlb
sub
mov
jge
or
mov
jae
sarl
dec
je
pop
fidivrl
cmpsl
lock
repnz
dec
xchg
adc
jo
jp
push
sbb
fcoms
out
test
sbb
out
je
and
pop
insl
mov
mov
mov
inc
inc
ja
les
scas
dec
cmpsb
and
in
xor
sarl
out
incl
cmpsb
hlt
out
lahf
adc
xchg
es
mov
xlat
push
xchg
pop
push
ficoml
and
aas
push
xchg
jp
mov
jno
mov
mov
inc
subl
pusha
pop
jo
jne
cmp
mov
pop
ja
fsubs
adc
cli
push
fcoms
pop
cwtl
cmpsb
mov
ret
sarb
sub
xor
and
xor
testb
popa
mov
lcall
xchg
jne
pop
lret
push
dec
mov
icebp
jbe
add
clc
cli
and
in
cmp
addr16
out
jae
push
stos
outsb
mov
repz
jo
push
push
cltd
sub
fcoms
js
xchg
dec
data16
dec
dec
jne
je
cld
cmp
inc
sbb
std
loope
outsl
mov
push
lock
int3
xchg
int3
test
push
in
es
push
cmpsl
mov
in
cmp
push
gs
lods
jl
cmp
jmp
ret
lahf
loope
push
jge
outsb
daa
sub
clc
inc
adc
add
push
ja
mov
push
dec
sub
pop
pop
mov
gs
mov
adc
inc
adc
scas
push
mov
xchg
xchg
test
and
jno
or
fsubrs
js
mov
inc
inc
lcall
lcall
aaa
std
mov
dec
push
mov
mov
movsb
fsubrl
jne
roll
and
xor
movzbl
hlt
push
and
xor
outsl
xchg
xor
pop
mov
andb
xchg
fsub
pop
stos
les
fwait
jbe
mulb
andl
clc
mov
das
sti
out
sar
jb
sub
pop
and
sub
add
popf
push
fidivl
add
mov
fwait
push
push
lret
jmp
rorl
mov
xchg
push
and
jns
stos
dec
pop
xchg
mov
cmp
arpl
std
and
adcl
ficoms
and
in
add
push
mov
aad
push
add
dec
pop
jns
xchg
add
push
mov
sub
sbb
push
cmc
push
jl
insl
out
or
mov
cld
les
adc
xor
iret
lods
mov
loop
add
xchg
jl
inc
cltd
mov
pop
dec
rcl
add
and
icebp
mov
xor
pushf
dec
in
in
divl
mov
mov
jnp
dec
jae
xchg
fimuls
push
mov
test
inc
push
shll
scas
imul
push
repz
ret
std
mov
or
xacquire
or
sti
and
fistl
cmpsb
jno
movsl
add
sub
aad
mov
add
inc
les
xchg
jns
stc
xor
inc
mov
adc
icebp
test
or
sbb
data16
cwtl
aam
adc
sbb
addl
jne
stos
repz
dec
mov
pop
push
adc
and
in
inc
into
mov
cld
stc
add
js
add
mov
xor
dec
ss
imul
xor
clc
pusha
cmp
mov
jl
ret
popf
cmp
pop
sub
in
sbb
nop
cmc
rorl
fs
insl
inc
jae
cltd
push
sub
loope
jno
or
popf
aad
dec
cmp
fwait
test
dec
lds
dec
mov
les
push
movsb
ret
test
push
mulb
fwait
push
inc
jecxz
cs
pop
jle
lahf
push
aad
inc
pop
dec
mov
sahf
push
cmp
sub
fildll
add
push
dec
fisubrl
es
testl
mov
stc
pop
inc
imul
mov
fs
xchg
cmpsl
nop
imul
xchg
xchg
outsl
inc
inc
cmp
shufps
mov
addr16
xchg
cmp
popl
js
mov
ret
jns
fbld
mov
pop
in
repz
or
mov
lret
inc
jbe
lahf
or
add
adc
jl
cmpsb
aad
movsb
push
pop
push
popf
pop
inc
add
test
dec
xchg
repz
xor
sub
aas
mov
sbb
adc
loope
jns
stos
sub
mov
xor
sbb
dec
xor
notl
int
or
bound
push
xchg
push
popl
stos
fildll
push
stos
iret
subl
adc
js
movsb
and
shll
ret
rcrb
jno
dec
inc
ss
pusha
or
mov
xor
add
lret
call
mov
inc
sarb
push
in
and
lea
nop
movsl
ja
jnp
pop
xor
mov
popf
jmp
movsl
xchg
sbb
pop
out
inc
xchg
adc
jmp
notl
clc
aam
int3
adc
xor
inc
shll
lret
jb
inc
xor
push
sub
adc
nop
and
jl
icebp
nop
mov
ja
std
sbb
dec
pop
mov
es
jbe
loope
into
push
adc
adc
call
ret
jne
stos
adc
sahf
ja
sub
xor
add
mov
cmp
pop
test
sbb
aaa
popl
sub
ret
imul
add
cmpsb
xchg
or
dec
xchg
inc
test
inc
pop
sbb
jge
sub
dec
movaps
push
clc
sbb
push
daa
lds
in
sub
adc
push
mov
mov
stc
dec
xchg
test
mov
dec
ds
out
in
sub
shl
or
add
jl
jmp
mov
xchg
cmpsb
fwait
and
cmp
andl
std
out
mov
les
jg
mov
or
add
enter
jb
lahf
mov
mov
add
lock
in
decb
push
or
pop
ds
pop
adc
sub
int
aam
lret
adc
orb
push
dec
mov
push
xchg
aas
rcr
jbe
jbe
adc
sub
cmp
cwtl
cs
fisttps
mov
add
sub
out
in
dec
and
roll
push
mov
into
bound
rorb
push
rcrb
cs
aaa
inc
sti
add
add
inc
and
test
fsubs
stos
out
icebp
fsqrt
cwtl
or
push
call
test
idiv
xchg
fisubl
adc
add
inc
aas
das
pop
xchg
dec
into
in
cwtl
jl
jp
push
fmul
push
mov
int3
lcall
sub
cmp
xchg
sbb
push
mov
dec
cltd
dec
adc
dec
out
out
jb
ds
comiss
mov
sub
xchg
jbe
shll
adc
aam
subb
adcl
sub
cmp
ds
push
in
or
push
jno
push
xchg
xchg
xor
dec
and
and
pop
pop
push
movsl
js
pop
jp,pt
or
pop
mov
xor
push
aam
xchg
jp
leave
pop
xor
mov
cmp
cld
mov
jle
mov
or
imul
adc
xchg
adc
sbbl
jle
in
test
add
in
xor
push
clc
inc
xor
int
hlt
mov
outsb
adc
sub
dec
hlt
sbb
push
inc
ljmp
das
outsl
pop
add
push
test
lret
cmpl
cmovb
jnp
add
gs
leave
movsl
add
adc
jnp
pop
mov
xchg
testb
pop
aaa
mov
xchg
int3
lret
cmp
add
mov
inc
aaa
ret
insb
in
sub
xchg
jb
cs
inc
jge
sar
cmpsb
imul
fbstp
mov
test
inc
add
add
mov
scas
pop
popw
cmp
jge
mov
fucomp
push
sbb
dec
sbb
or
dec
call
movsb
dec
and
jg
not
sar
call
jb
js
cmp
in
dec
lahf
mov
pop
add
dec
add
jle,pn
add
inc
inc
cmpl
sub
icebp
ljmp
das
push
jns
mov
cmp
mov
mov
adc
jge
js,pn
jnp
mov
and
inc
jo
pop
mov
imul
shl
mov
andl
lock
add
mov
xlat
test
insb
loope
push
inc
xor
test
or
push
sahf
and
and
popa
inc
xchg
insl
push
cwtl
cs
mov
and
inc
add
sbb
sbb
sub
fs
loope
aad
int
mov
aad
sbb
out
adc
push
lcall
jmp
pop
and
xchg
dec
adc
sbbb
les
scas
cmp
xchg
daa
jns
sbb
enter
sub
sub
ret
cld
jb
cld
xor
je
out
in
fsubp
lods
orb
negb
das
sub
xorl
scas
stos
in
aad
lret
test
jno
js
es
sbb
and
cmc
adc
lret
pop
push
pop
inc
stos
sbb
in
call
fcmovne
mov
ret
shlb
xorb
sub
sar
rcrb
pop
lret
mov
sub
movsb
fisttps
test
push
lcall
push
xchg
dec
xchg
nop
push
pushf
cmp
lock
out
add
ja
lret
or
js
mov
fst
sub
jbe
movsb
and
mov
je
call
xchg
cmpsl
adc
aad
and
lret
notb
mov
out
inc
cmpl
mov
das
lahf
add
lods
xorb
sbb
mov
andl
add
inc
add
push
sub
hlt
pop
lcall
inc
xchg
push
mov
dec
mov
popf
cli
stc
mov
lcall
lds
fsubrl
sbb
push
sub
mov
dec
push
aad
in
divl
outsb
mov
inc
mov
in
push
inc
cmp
inc
sahf
movsb
gs
ljmp
jg
les
push
and
push
sbb
or
scas
jecxz
sbb
popf
and
mov
jp
dec
push
sub
bound
push
sbb
jne
or
sbb
lcall
mov
lahf
add
stos
push
push
bound
scas
or
nop
inc
lahf
or
incl
adc
cmpsl
fs
mov
add
pusha
sbb
adc
adc
inc
icebp
fs
pusha
rcr
mov
pop
sbbl
rolb
adc
out
push
ljmp
inc
mov
add
es
cmpsb
sti
cmp
lods
and
lock
xchg
cmp
push
in
add
or
into
movsl
push
fimull
rcll
icebp
mov
mov
addr16
xchg
pop
pop
mov
fs
xchg
mov
ret
sbb
mov
add
xchg
xor
jae
imul
popa
cs
testb
out
inc
stos
pop
aaa
adc
mov
imul
push
mov
inc
icebp
jns
fdivl
and
adc
int
jl
mov
movsl
leave
push
sbb
or
repz
adc
ss
mov
jecxz
movb
loopne
rcr
inc
add
dec
out
adc
jge
movsb
pop
repz
cs
pop
shrl
das
adc
in
cmp
sahf
inc
out
add
mov
xchg
xor
push
mov
push
je
push
sub
fwait
aam
test
add
jp
pop
call
loop
dec
pop
sbb
scas
xchg
sub
jno
xchg
jb
cltd
sahf
lret
adc
jle
mov
jl
cltd
and
hlt
pop
pushf
scas
ja
mul
dec
lock
das
movsl
fcompl
push
cmp
xchg
add
add
mov
cmpsl
roll
xchg
insb
cmp
xor
js
sub
fcomps
cmp
adc
sbb
ja
push
mov
pop
jmp
pop
jae
lret
push
imul
daa
insb
xchg
popa
xor
stos
cltd
fldt
and
mov
out
cli
pusha
sub
inc
add
push
jecxz
repz
rclb
lods
fs
xchg
lea
and
xchg
adc
sub
and
stc
sahf
mov
in
push
cmp
stos
ret
out
jb
mov
mov
cmp
xchg
addr16
adc
sub
lret
cmp
mov
dec
cld
dec
mov
enter
int3
test
or
mov
add
xchg
xchg
xchg
cmp
cltd
enter
aaa
push
xor
mov
loop
dec
and
rcr
out
pop
out
xchg
ja
bound
inc
pop
and
repz
fnstenv
test
dec
dec
pusha
lahf
mov
js
push
mov
cvtpi2ps
xchg
dec
mov
fs
mov
push
sbb
fwait
and
pop
mov
push
ficoml
and
jbe,pt
daa
outsl
xchg
push
lahf
clc
movsl
sbb
mov
adc
push
mov
or
adc
push
orl
mov
fdivs
inc
cmpsb
adc
je
cld
inc
sahf
lret
ljmp
jmp
pop
jmp
pop
outsl
or
out
push
mov
dec
negb
lcall
and
and
clc
pop
jp
sub
sbb
or
mov
push
sbb
lods
fldenv
and
test
daa
inc
popf
andb
mov
cli
bound
jmp
insl
subl
lret
stc
pop
sbb
sbb
test
push
sub
jg
aad
and
push
push
movsb
inc
bound
sarl
push
fistpl
fbstp
jb
add
mov
push
adc
cmp
dec
cmp
mov
cltd
ds
push
pop
add
jecxz
sbb
jg
push
push
js
cld
mov
push
jnp
push
lods
push
push
dec
adc
mov
mov
cmp
adc
and
outsl
sbb
add
pop
fwait
icebp
mov
nop
mov
add
pop
test
cmp
cmp
xor
xor
mov
popa
and
loope
dec
fs
bound
push
fildl
mov
sub
imul
lock
jbe
xor
imul
inc
xchg
fstl
push
or
mov
add
lea
jb
mov
mov
or
ret
mov
or
pop
add
or
test
inc
inc
or
lret
sahf
scas
pop
jno
xchg
and
cmpl
mov
mov
movsl
xor
inc
and
fdiv
loopne
dec
or
aam
cmpsl
add
in
les
inc
mov
inc
loop
xorl
sbb
ss
mov
xchg
in
scas
scas
cmc
scas
pop
sti
mov
flds
mov
addr16
cli
jg
into
dec
ja
scas
movsb
pop
add
xor
ds
ret
repz
subb
and
loopne
xor
loopne
or
fadds
ret
xchg
call
sbbb
addb
jnp
jle
pop
fprem1
mov
mov
cwtl
lds
push
push
xchg
aas
sti
ud2
addb
xlat
fisubrl
cmp
int3
sbb
push
int
je
xchg
and
or
push
sbb
outsl
xchg
mov
out
je
fidivl
cli
pop
xor
or
lret
inc
movb
lods
or
jne
iret
lahf
lods
dec
jg
insl
cmp
push
je
jno
in
cs
cmpsb
mov
push
adc
jne
cmp
shll
lret
sti
pop
sub
shl
cli
mov
mov
xchg
jnp
pop
ret
push
mov
pop
push
lret
lds
daa
jnp
rorl
xchg
imul
mov
mov
adc
into
or
out
shrb
jle
out
pop
adc
mov
sub
mov
ds
in
and
xor
in
sar
inc
adc
inc
call
cmp
ja
stc
dec
mov
cmp
fsubs
add
repnz
scas
in
pop
repz
or
jo
shlb
lods
inc
mov
into
movsl
sbb
shrb
mov
mov
loope
lcall
dec
mov
and
jns
mov
call
cmpsl
scas
adc
loop
sbb
sub
outsb
in
mov
idivl
cmp
mov
jge
or
cwtl
cmp
adc
fistps
and
sub
dec
push
das
mov
fsubr
adc
sbb
mov
fdivrs
psrad
sub
nop
dec
aas
or
insb
imul
repnz
loopne
jnp
lods
push
adc
jmp
shrb
or
iret
ret
mov
cmpsb
test
popf
xchg
iret
jmp
pushf
in
mov
push
pop
fmuls
int3
clc
out
cltd
shll
negl
inc
jns
inc
shl
ficomps
outsb
mov
in
adc
mov
ret
adc
stc
jno
ja
repnz
arpl
xchg
mov
in
xchg
outsb
inc
aam
jecxz
cmc
pop
popa
cmp
push
insb
sahf
and
fdivrs
cwtl
dec
dec
dec
ljmp
test
insl
jecxz
and
sahf
bound
arpl
lcall
insl
iret
cs
in
sahf
ds
stos
dec
or
jb
mov
mov
sbb
daa
sub
mov
test
mov
aaa
lods
fildl
mov
aam
out
xchg
mov
mov
cld
add
stc
mov
aas
add
add
call
fldl
push
in
jne
repz
aas
in
out
push
add
std
outsb
lcall
or
mov
inc
mov
int
lock
loopne
pop
repz
pop
lcall
push
mov
sub
push
loop
flds
fstpl
jle
ds
xchg
call
enter
adc
loop
mov
push
out
lcall
movsl
sbb
ja
popa
dec
jge
add
pop
inc
dec
xchg
pop
jg
push
data16
or
aas
rclb
jmp
mov
rcll
pop
outsb
mov
adc
add
ja
mov
add
or
inc
loopne
jbe
jno
ljmp
push
je
out
push
and
mov
fwait
sarl
push
mov
inc
andl
jge
cmc
sbb
into
sbb
mov
pushf
popa
sbb
in
push
cmpl
aaa
sbb
sub
ss
lahf
divb
add
gs
cmp
jne
addl
mov
jo
xchg
lcall
in
xlat
ret
pop
inc
popa
jb
adc
imul
into
jecxz
paddsw
push
cltd
das
inc
xchg
lods
sbb
push
outsb
fstpt
mov
mov
lods
push
mov
loope
icebp
mov
pop
mov
pop
inc
cli
adc
imul
jbe
sbb
into
dec
push
sub
or
adc
loope
or
inc
addr16
jnp
mov
data16
dec
cmpsb
bound
push
sub
xlat
jns
add
push
mov
push
jne
or
mov
fmul
or
bound
sbb
jmp
cltd
lret
sub
mov
fidivrs
mov
inc
push
shr
cld
sbb
mov
in
push
ret
jnp
out
cmp
cmp
mov
scas
sub
repnz
push
cmpsl
mov
adc
aam
push
int
fsubl
sbb
mov
mov
inc
mov
mov
aas
out
adc
mov
push
push
push
orl
andps
push
fsub
int3
xor
mov
icebp
fnsave
rcl
je
jmp
nop
mov
push
enter
pop
push
in
xchg
ret
push
dec
adc
or
imul
aaa
call
dec
lahf
das
xchg
mov
rcll
cmp
into
dec
sahf
jae
or
faddl
dec
mov
sbb
rcll
inc
push
push
leave
pushf
mov
push
cmp
inc
out
hlt
or
mov
imul
fs
hlt
ljmp
sbb
out
outsb
jno
outsl
ja
cs
loope
scas
negb
jbe
add
clc
shr
pushf
mov
addr16
pop
jmp
lds
jle
mov
sbb
cmp
out
fdivrl
cwtl
cld
pop
dec
aam
mov
adc
hlt
repz
or
loop
fmuls
cs
sbb
lret
mov
xlat
xor
inc
mov
cltd
jecxz
mov
sub
push
push
cmpsb
fs
dec
data16
ds
adc
dec
stc
mov
out
add
push
and
adc
call
pop
add
adc
xor
push
sarb
mov
mov
pusha
xchg
cltd
hlt
add
out
mov
sbb
inc
mov
jbe
or
mov
cmpsb
push
mov
fwait
and
pushf
cmp
and
xchg
addb
inc
xlat
mov
arpl
test
orl
idivl
loopne
push
popa
lcall
jbe
dec
cs
fsubrs
adc
repz
mov
mulb
js
repnz
loope
jbe
repz
jnp
js
sub
out
jg
jge
dec
bound
lcall
push
shll
nop
shll
and
popf
push
adc
jmp
repz
cltd
hlt
outsb
fneni(8087
add
call
mov
mov
ljmp
xlat
jbe
mov
mov
pop
ja
test
out
call
lods
and
mov
mov
pop
inc
fcmovnbe
aaa
pusha
aas
mov
mov
pop
rcrl
inc
inc
pop
sahf
xor
xor
bound
popf
mov
icebp
fnsave
sub
xchg
mov
in
jae
ret
mov
or
scas
mov
xor
sub
jmp
cmpsb
dec
fsubs
stc
fcmovb
rcr
mov
imul
in
stos
mov
push
add
push
pop
jmp
jecxz
xorb
les
jbe
dec
add
jecxz
xchg
dec
push
outsb
stos
mov
add
or
aam
nop
lahf
mov
mov
shrb
setb
movl
pop
push
mov
ss
mov
lret
insl
dec
scas
jecxz
aas
lret
test
sahf
shll
repz
sub
mov
or
sahf
sbb
xchg
inc
imul
or
outsl
jl
lods
sti
push
sahf
dec
les
repz
adc
addb
ret
jnp
or
pop
xchg
mov
xchg
out
dec
add
mov
xor
push
dec
and
jmp
sbb
inc
inc
scas
ljmp
mov
jge
xorl
push
int3
jnp
dec
xor
imul
add
mov
add
movsb
fs
sub
inc
pop
cmp
adc
inc
test
and
cmp
fdivl
cltd
or
cmp
push
ja
jle
test
in
std
lret
call
test
test
call
hlt
ret
int3
arpl
cmp
mov
pop
sub
jmp
or
push
mov
dec
lods
icebp
out
data16
hlt
inc
insl
ss
sbb
ss
dec
fs
sahf
arpl
aas
fcomps
fdivs
xchg
cmp
pop
jnp
les
arpl
loopne
lahf
push
mov
push
test
mov
loopne
lret
repnz
bound
adc
xor
sub
stc
push
inc
inc
fsts
push
and
mov
push
and
xchg
push
or
push
mov
mov
sub
in
jo
loopne
adc
jge
int
xchg
xchg
addb
push
push
cltd
ret
jno
add
mov
or
imul
adc
popa
lahf
js
sahf
mov
insl
mov
dec
imul
pop
xchg
das
jecxz
push
and
out
jle
pop
pop
pop
jno
mov
push
mov
enter
xchg
mov
lods
testb
aas
decb
mov
mov
push
nop
pop
or
inc
aaa
mov
out
divb
loop
jb
testl
out
sahf
add
adc
shlb
clc
cmp
mov
jecxz
sub
mov
inc
dec
dec
pushf
jle
sbb
adc
fisubrs
lret
js
cmp
setae
xor
xor
jl
sub
mov
cmovae
push
push
subl
int3
lahf
xchg
and
rcrl
enter
adc
dec
int3
cli
sbb
shll
rorl
sahf
jb
stc
jns
jo
xlat
mov
lea
mov
hlt
sub
adc
cmp
data16
out
pop
movsl
xchg
sub
int
xchg
call
adc
hlt
or
sbb
push
mov
mov
scas
mov
sbb
cmp
jl
fisubs
nop
add
mov
into
outsl
jge
sbb
mov
mov
ja
xor
or
ja
cwtl
mov
sbb
call
in
in
mov
in
pop
popa
pop
aaa
test
out
lret
sbb
mov
jns
pop
mov
sbb
and
pop
lea
cmp
push
sarl
lret
fcmovu
mov
clc
xchg
clc
test
cmpsb
jae
push
mov
int3
sub
es
xorb
sar
pop
sbb
mov
xchg
test
pushf
pop
xor
inc
xchg
cmpsb
pushf
sbb
fldt
xchg
loop
mov
pop
xchg
push
movsb
addb
insl
cmp
pop
addr16
and
dec
addr16
cmp
clc
sub
pushf
insb
ret
mov
fs
jle
and
ljmp
mov
test
add
nop
lods
ss
mov
and
cmp
mov
out
test
iret
mov
jle
jo
ja
pushf
daa
mov
into
sub
lock
xchg
mov
lahf
and
mov
jae
cmpsb
out
cmp
andl
push
cmp
jl
lock
dec
in
fistl
add
popa
inc
cmpsl
cmp
lods
cltd
and
scas
lahf
dec
daa
sbb
nop
in
fwait
test
loop
fcoml
repnz
sbb
sbb
ret
xbegin
jne
inc
clc
ljmp
fsubs
add
dec
lret
push
int3
cltd
push
push
mov
xchg
fs
pop
je
popa
cmpsl
mov
xor
lea
popa
mov
jns
cmp
jg
insb
mov
aam
sub
in
sbbb
jae
mov
into
jns
outsb
inc
push
and
jmp
push
inc
dec
imul
je
lods
and
add
lret
enter
test
loope
cld
sbb
int3
aaa
dec
testb
leave
xchg
cltd
xor
aas
or
mov
pop
addr16
pop
fiadds
mov
add
cmp
mov
xor
movb
add
cld
and
ljmp
jg
loop
push
pop
dec
std
hlt
add
pop
scas
dec
je
pop
into
xor
lahf
inc
fisubs
xor
movsl
mov
mov
pop
adc
rol
mov
out
insl
cmp
cli
mov
aas
sbb
and
lods
sbb
cmp
lds
enter
repnz
mov
mov
and
es
cmp
out
andb
adc
es
cmp
or
or
das
xchg
dec
aas
jecxz
mov
xchg
jnp
mov
push
push
mov
cmc
sahf
aaa
cwtl
loope
sub
or
stos
imul
lret
mov
cld
push
jmp
and
cmp
psubsb
enter
shl
push
clc
test
stos
repnz
push
inc
fidivs
lds
cmp
mov
mov
jecxz
add
dec
pop
xchg
pusha
imul
pop
pop
dec
mov
jbe
jmp
or
dec
mov
or
jne
push
xchg
ss
add
xor
mov
into
dec
xor
fdivl
mov
adc
sub
sub
push
out
sub
adc
pop
hlt
outsb
stc
cs
jbe
daa
das
loope
cwtl
lods
repnz
bound
xor
adc
lods
push
mov
negl
pop
pop
dec
mov
and
sbb
adc
adc
int3
je
aam
rcrb
push
xor
mov
clc
xchg
mov
pop
pop
cmpsl
nop
das
dec
daa
cmpsb
push
mov
lock
xchg
cmpsl
outsl
imul
test
frstor
jne
out
sub
and
js
push
stos
push
jns
lods
mov
fstpt
scas
sub
insb
mov
int3
movsb
pop
inc
cmpw
testl
iret
lcall
and
add
hlt
fdiv
sbb
dec
add
dec
movsb
lret
xchg
pushf
mov
lods
jmp
sti
hlt
mov
mov
mov
jg
add
pop
mull
or
push
xor
dec
aaa
les
mov
bound
mov
out
mov
test
roll
lock
es
gs
push
fxch
fists
iret
xchg
mov
jl
pusha
adc
pop
mov
icebp
cmp
inc
fsts
fcmove
pop
mov
cld
popa
pop
add
out
outsl
ja
sub
xchg
call
lods
pop
fpatan
popf
imul
movsl
jb
in
jp
daa
rcll
sub
stos
rcr
sahf
pushf
rcl
push
inc
mov
dec
out
sbb
fwait
repnz
cltd
sahf
pop
jne
rcll
cld
cltd
add
jmp
ljmp
cmp
pop
fcmovnb
arpl
xor
arpl
mov
in
stos
insl
add
repnz
fbstp
ficomps
dec
cmp
out
daa
ror
enter
in
jno
mov
jecxz
aam
sbb
movsb
push
add
sbb
repnz
test
dec
dec
iret
mov
push
pop
mov
dec
insl
jno
movsl
gs
add
cmc
push
and
hlt
push
jge
xlat
popf
shl
popf
or
ja
push
dec
sub
fsubrp
pop
daa
lods
cli
ret
aas
mov
repz
decl
out
cwtl
xchg
ret
repz
cmc
stos
aaa
mov
ljmp
in
add
sub
pop
imul
inc
push
dec
mov
pusha
pop
sbb
fimuls
addr16
cmp
xchg
aad
enter
push
out
inc
jmp
popf
cmp
pusha
in
xor
imul
jno
fstl
aas
inc
test
mov
sub
sub
aaa
inc
std
imulb
or
xor
mov
out
cs
arpl
aam
movsb
outsb
and
push
je
inc
mov
or
leave
xchg
scas
adc
sbb
jo
sbb
lock
xchg
sahf
sar
and
jp
mov
adc
push
jge
push
inc
adc
inc
pop
cmp
in
rorl
enter
sub
inc
repnz
adc
mov
dec
pop
pop
popa
cmp
je
arpl
rol
push
push
or
mov
addr16
or
ljmp
mov
iret
sub
push
mov
push
xchg
in
xchg
in
lea
cmp
xchg
ljmp
fdivrp
and
in
loopne
fcompl
int
inc
jns
dec
stc
dec
lea
inc
fwait
adc
rol
leave
filds
cs
jl
addr16
push
jns
mov
dec
dec
mov
xchg
rcl
loopne
inc
dec
xor
adc
scas
adc
jge
add
dec
out
sbb
jb
inc
cmp
cmp
push
ss
mov
cld
stos
mov
idivl
cwtl
mov
mov
stos
bound
add
pop
mov
xlat
and
outsb
cmc
mov
fbld
cmpsb
jno
mov
add
test
mov
xor
ljmp
mov
mov
clc
shrl
or
inc
pusha
clc
sbb
ljmp
adc
out
inc
es
fsts
push
in
pop
sbb
mov
cmpsb
bound
pop
add
cld
or
sub
xlat
jno
or
dec
push
mov
shlb
push
outsb
in
inc
pop
cmp
inc
mov
loopne
cmp
loop
xchg
leave
mov
fwait
or
lds
call
xchg
push
adc
in
pusha
test
cmp
scas
loope
inc
cs
into
xchg
pop
mov
pop
rclb
jl
loop
xchg
sbb
xchg
mov
out
xchg
cld
adc
test
push
mov
out
call
inc
xor
lret
push
sbb
sub
xchg
ljmp
mov
add
call
cmp
add
ja
mov
popf
adc
xor
or
mov
das
inc
negb
fucom
fcoml
xor
mov
pop
std
inc
dec
scas
inc
pop
lahf
cmp
mov
or
call
mov
add
mov
push
test
cmp
subb
clc
cld
orw
lods
outsw
rclb
jae
push
ss
enter
nop
sbb
bound
aas
mov
adc
inc
lock
cltd
push
sbb
cmp
cmp
lcall
lock
out
aaa
movsb
iret
pop
mov
in
jp
aaa
mov
outsl
mov
xchg
adc
subl
lret
sbbl
xor
ss
ss
or
sub
and
jns
lret
jne
and
call
jae
adc
inc
pop
xchg
loope
xchg
mov
xchg
pop
mov
inc
icebp
movb
hlt
clc
mov
lods
xor
sub
fwait
xchg
sub
jle
shll
mov
stc
inc
push
jbe
or
xchg
pop
mov
jnp
push
loopne
push
and
retw
cmpb
icebp
mov
dec
lock
movsb
inc
sub
sbb
inc
push
push
push
mov
subb
std
and
ja
jp
jecxz
xchg
sub
push
std
ljmp
mov
cli
xor
jbe
in
and
adc
mov
shll
popa
inc
push
sub
outsb
jno
xor
cmp
push
pop
aam
in
cwtl
imul
dec
xchg
push
cld
or
test
sahf
push
lahf
xlat
fistps
mov
stos
call
or
std
sbb
loope
out
cmp
inc
dec
sahf
push
pop
mov
sub
mov
mov
xchg
repnz
pop
xor
fwait
jl
mov
cmpb
xchg
adc
jge
inc
pop
sarl
cld
adc
clc
into
insl
mov
ljmp
mov
mov
stc
enter
hlt
jbe
dec
pop
jae
imul
push
cwtl
shrl
push
push
mov
push
repnz
jmp
mov
xchg
repz
pushf
mov
xchg
jbe
mov
insl
cmpsb
xchg
pop
out
out
stos
ss
dec
pop
xchg
rcrl
inc
xor
xor
popa
cmpb
push
popf
pop
and
imul
stc
je
arpl
push
into
into
push
lods
ljmp
inc
pop
int
jns
loope
es
add
les
sbb
shlb
push
jmp
fisubrl
add
jl
int
and
pop
sbb
dec
add
mov
data16
sub
add
out
push
outsb
inc
and
adc
jp
shlb
push
add
fnstsw
and
or
mov
sub
sahf
cmp
pop
rcrl
aad
gs
sub
sti
inc
daa
notl
xchg
mov
xchg
rcll
xor
mov
arpl
jns
mov
in
sub
jno
xor
pop
xchg
mov
pop
pop
pop
pop
call
iret
loop
inc
andb
out
mov
push
cmc
dec
adc
pop
or
movl
inc
lock
loopne
movsl
push
pushf
jge
cmpsl
inc
addr16
std
inc
xchg
int3
or
repz
jmp
jecxz
sbbl
adc
sbb
mov
ficompl
imul
imul
dec
pushf
jle
pop
test
dec
fisubl
dec
es
pop
mov
push
adc
mov
sub
mov
and
in
adc
pop
ja
add
ret
inc
xchg
push
mov
cmp
repnz
dec
or
loope
jbe
repnz
push
xorl
and
loop
dec
sub
xorb
ret
sbb
fsubrs
xor
jge
jbe
icebp
aaa
inc
push
mov
sub
lea
nop
sti
xchg
ficoml
sbb
xchg
xchg
or
mov
pop
mov
xchg
pop
pop
mull
mov
leave
nop
pop
adc
stc
test
fmull
les
les
inc
enter
aaa
mov
fs
pop
cwtl
adc
xchg
push
xor
int
sub
std
xor
outsl
push
jo
push
xor
stc
jecxz
push
jg
fistpl
and
xchg
jp
jo
cwtl
inc
icebp
ss
jge
ret
lret
jp
push
es
fsubr
mov
sahf
idivl
adcb
jae
ds
loopne
add
loopne
add
fsubrs
movsl
jb
and
jo
add
ljmp
pop
mov
ss
dec
mov
test
pushf
cmp
dec
mov
inc
in
clc
mov
es
lret
shlb
shl
mov
stos
mov
dec
sub
sub
dec
fimuls
cli
mov
sbb
lods
pop
aam
push
test
inc
vcvtss2sd
ss
pushf
ss
les
or
add
bound
mov
arpl
das
mov
xchg
addl
jns
fnstcw
mov
or
mov
dec
add
loope
push
jmp
fwait
pushf
sbb
es
data16
test
pop
pop
ja
and
insl
push
inc
mov
sahf
negl
push
icebp
ljmp
mov
movb
fs
mov
orb
pop
test
push
jl
xchg
xor
jp
dec
fcompl
loop
bnd
mov
fmulp
xlat
push
sub
jnp
gs
xchg
int3
push
sbb
xor
lods
sub
lret
add
ja
out
jp
push
and
inc
xor
push
lret
bound
shrl
arpl
movsl
jecxz
or
lds
inc
xchg
push
scas
mov
jns
or
rorb
sti
insl
into
xchg
gs
nopl
push
jp
jno
shrl
fwait
mov
or
mov
inc
adc
adc
and
dec
mov
sub
sub
xchg
xor
punpcklwd
push
dec
inc
adc
dec
add
cmc
repnz
push
lret
mov
pop
inc
add
loope
cmp
sbb
push
cltd
push
inc
fildll
imul
jo
mov
in
je
xchg
adc
into
ret
sub
xor
sub
aaa
push
cmp
mov
push
push
mov
jae
xor
divb
in
addr16
cmp
jg
test
lret
scas
mov
xlat
mov
xor
scas
pop
dec
into
out
mov
dec
addl
push
sbb
divl
inc
fsubr
mov
outsb
outsb
xor
adc
push
and
mov
push
jns
xchg
rcrb
lcall
sbb
jbe
mov
fs
sbb
shrd
aam
imul
dec
cmc
inc
cmpsl
push
test
fistpl
movsb
or
ja
xor
pop
out
cmpsb
lods
xchg
jmp
nop
fistl
cmp
pop
jmp
jl
xchg
les
lods
xchg
sub
mov
inc
push
push
es
test
repnz
je
push
push
leave
push
imul
icebp
out
imul
jl
pop
mov
lods
jp
loopne
in
lods
mov
xchg
jecxz
pop
into
in
mov
xchg
mov
pusha
push
mov
xchg
pusha
fnstenv
inc
push
pop
jae
jnp
inc
scas
aas
paddsb
pushf
ss
imul
jae
aad
shrb
sbbl
std
adc
lock
pop
cltd
adc
sti
or
add
xchg
mov
das
imul
mov
lcall
add
adc
pop
fimull
dec
iret
pop
push
cmpsl
sbbb
dec
imul
add
jg
enter
dec
add
push
dec
pop
cmp
cmp
mov
sarb
pop
cld
fidivl
xchg
and
xchg
insl
pop
movsl
jg,pn
add
jecxz
inc
js
pop
xchg
pop
jg
inc
push
inc
inc
dec
shlb
out
scas
sub
aam
jno
fstpl
inc
inc
adc
subb
or
dec
or
lret
shll
add
out
pop
mov
jmp
adc
mov
mov
stos
ret
aaa
inc
mov
jno
pop
dec
dec
out
xchg
into
sbbb
cwtl
xor
test
lods
xchg
bound
mov
cmp
xchg
cmpsb
cmp
test
pushf
jb
in
fldl
jg
jl
call
pop
incl
int3
sub
and
scas
outsl
cli
std
lods
sbb
mov
xlat
push
xchg
cmpsb
cmpsl
push
fwait
pop
int
push
push
or
lret
inc
int
push
das
pop
sub
jle
pop
mov
jle
fs
inc
pop
mov
adc
sbb
pop
mov
mov
mov
fnsave
clc
xchg
dec
cltd
xchg
fadds
mov
loope
mov
fisubs
ficompl
pop
jecxz
xor
ljmp
push
adc
push
xor
imul
inc
adc
xorb
fisttpll
sti
cmpsl
fisubrs
shrl
insl
neg
sub
inc
cs
imul
and
es
push
xchg
and
mov
push
push
movsb
pop
mov
mov
sub
insb
mov
dec
sbbb
and
in
mov
popa
pop
aad
fs
in
loope
dec
fcoml
insl
jb
loopne
stos
stos
jecxz
jp
sub
out
sarb
aad
pop
push
leave
fldl
cmp
scas
push
addb
mov
dec
enter
popa
sub
cld
test
loopne
jo
add
leave
ret
xor
push
iret
push
loopne
jo
dec
jl
push
xor
xorb
testl
xchg
jns
xchg
adc
xchg
repnz
in
js
push
imul
iret
into
cmp
xchg
icebp
cmp
lea
std
out
jno
adc
xchg
mov
jbe
and
xor
cmpb
imul
inc
mov
add
inc
add
scas
push
mov
jmp
xchg
addr16
shlb
adc
sbb
jecxz
adc
out
ja
mov
jle
adc
cmpsb
bnd
rcll
fimull
clc
inc
dec
pop
or
hlt
xor
aad
data16
xchg
mov
jle
data16
or
in
sbb
pop
enter
in
xchg
lock
dec
fistl
xchg
xchg
lret
push
mov
or
jle
test
gs
pop
mov
sbb
aad
popf
cmp
jle
in
lods
leave
mov
into
inc
xor
sub
hlt
ret
adc
int3
pop
pushf
jbe
out
sub
les
or
stos
lds
push
out
push
mov
lcall
fucomp
aaa
stc
sbb
mov
xchg
cld
jnp
sub
test
dec
fdiv
pop
mov
dec
fcmovnu
push
sub
movsl
mov
leave
popa
ss
lret
sahf
int
lret
cltd
sbb
xor
sbb
mov
in
xor
add
gs
mov
sub
test
dec
ja
je
bound
mov
stc
cli
xchg
loop
lods
mov
or
sub
int
push
pop
jne
dec
nop
jge
clc
sbb
sbb
add
bound
rolb
aad
mov
mov
rcrl
mov
inc
out
data16
int3
sbb
popa
repz
enter
cs
mov
lods
xchg
aas
and
loopne
out
and
loop
fnstsw
outsb
cltd
lret
pop
test
cwtl
and
xchg
inc
mov
adc
adc
adc
xor
sahf
into
dec
data16
xchg
push
push
cmp
inc
rcr
sub
xor
jbe
push
flds
add
mov
xchg
pop
inc
sub
mov
and
adc
paddusb
pop
aad
mov
movsb
xchg
inc
lret
into
fdivrs
jno
sub
cmp
int3
adc
fnstsw
into
ret
ret
pop
mov
mov
es
mov
outsl
push
sbb
cld
and
popa
cmp
loope
add
mov
fsubs
lea
mov
cld
loop
fidivrl
lods
push
data16
insl
je
pop
mov
xchg
popa
ljmp
fwait
int
stos
jp
sub
loope
jge
and
mov
aas
dec
daa
xchg
pop
in
and
jg
cmpsb
xor
pop
out
insb
fldl
and
adc
push
xchg
xor
lea
loop
mov
and
xor
fdivrl
dec
push
mov
xchg
lahf
dec
iret
or
pop
lret
jnp
inc
sti
fsubrs
jle
or
jae
jge
pop
sbb
cmp
aad
inc
aas
sub
xor
lds
incl
movsb
loop
push
and
xor
daa
mov
aad
inc
popf
pusha
aad
addr16
pop
movsb
insb
test
ss
rol
mov
movb
pop
cmp
adc
shlb
movl
jae
jbe
fs
movsb
mov
jo
cmpsl
scas
inc
lcall
jnp
outsl
push
inc
mov
mov
test
push
loopne
aad
jle
cmp
pop
xor
in
mov
lret
push
add
leave
mov
rolb
inc
bound
mov
imul
xchg
jg
in
cwtl
xor
mov
xchg
std
jecxz
sub
sub
ds
push
xchg
pop
test
mov
bound
pop
leave
lcall
xchg
ja
lahf
jp
test
imul
fisubrl
mov
xor
pop
loope
xorb
xor
xchg
cmp
icebp
xchg
adc
or
sbb
ss
shlb
adc
push
cmp
lret
dec
and
int
mov
inc
and
adc
sub
loope
mov
adc
mov
repz
xor
sub
add
mov
jecxz
jne
mov
cmovle
popf
xchg
pusha
mov
pusha
inc
aas
cs
fildl
xchg
ret
inc
in
stc
mov
adc
and
roll
or
aam
jmp
cmc
daa
sbb
xchg
xchg
loop
int3
mov
xchg
sbb
fcmovbe
lret
dec
out
mov
sub
outsb
push
icebp
movsl
cmp
sbb
mov
icebp
push
mov
cltd
ret
pop
je
sti
add
bound
mov
adc
lcall
mov
add
dec
outsb
sahf
cli
xchg
sub
push
xor
jp
dec
cmpsb
xor
rcr
sahf
xor
push
daa
xchg
loopne
jb
or
jae
stos
mov
dec
enter
imul
vunpcklps
mov
push
mov
push
daa
mov
and
test
int
lods
daa
stc
test
xor
idivl
cld
sbb
outsb
or
cmp
dec
pop
inc
mov
pop
aas
xchg
movd
mov
lock
ret
loope
push
test
push
std
inc
xchg
mov
xchg
and
mov
cmc
fnstcw
addr16
mov
mov
repnz
pop
imul
imul
sbb
mov
sahf
sub
and
jnp
test
dec
or
repnz
jno
shlb
cmp
jb
scas
push
xchg
adc
movsb
sarl
movl
bound
imul
add
push
arpl
sbb
ret
push
xchg
mov
fsubs
push
pop
inc
ds
lret
push
cmp
add
cmp
imul
jle
fwait
xchg
jmp
xlat
fcoml
test
arpl
or
repnz
outsl
out
outsb
outsb
inc
rol
add
test
adc
fcom
mov
dec
mov
jg
fisubs
lret
sbb
jno
xor
mov
dec
jns
sarl
lahf
mov
insl
xchg
out
sub
enter
or
test
xlat
pop
int
xor
adc
js
and
push
cmc
inc
push
cmp
push
inc
sbb
in
insb
int3
mov
aam
sti
jp
inc
ret
into
mov
sub
cmp
cmp
xchg
inc
xor
and
shrb
pop
js
jnp
in
ret
or
lret
lds
push
fstpt
ficompl
gs
adcb
les
call
fucomip
cs
fdivr
add
movsb
lcall
mul
pop
outsl
cmpsb
popf
jbe
cmc
add
cltd
inc
test
jb
or
push
mov
fdivr
test
xor
mov
mov
in
push
dec
xor
popa
or
push
in
jno
xchg
adc
js
or
push
adc
cmpsb
repnz
outsl
in
mov
jnp
adcb
stos
mov
mov
imul
or
fisubs
push
or
dec
insb
pop
pop
aad
sahf
in
add
scas
push
jl
fcomip
sar
mov
push
jl
leave
arpl
jae
or
cmp
push
mov
movsb
jno
jl
lods
xor
sbb
lcall
aas
es
xor
xchg
adc
inc
push
lahf
iret
pop
data16
mov
arpl
enter
nop
daa
xor
xor
popa
inc
imul
out
push
cmp
inc
rorb
ret
hlt
jbe
dec
or
test
pop
dec
popa
rcr
outsb
imul
cmp
add
pop
std
lods
lahf
push
rorb
loope
in
jne
sbb
jl
jg
std
popa
pop
jns
mov
and
fldt
gs
icebp
xor
icebp
daa
repz
daa
xchg
xchg
call
sbb
fdiv
loop
push
dec
push
lods
mov
fidivrs
loopne
inc
scas
adc
inc
sbb
xchg
jmp
scas
pop
jle
inc
imulb
cmc
and
clc
aas
adc
jae
adc
jmp
xchg
aad
jle
repnz
sub
inc
inc
je
mov
ss
xchg
cmc
std
mov
inc
fsub
lea
out
lahf
fsubrs
cmpsl
jecxz
stos
or
push
imul
push
fmuls
bound
push
mov
xor
push
bound
jbe
lret
gs
aas
push
sub
gs
stc
cmp
jmp
shlb
pop
dec
mov
pop
mov
mov
sub
xor
das
or
and
enter
mov
xor
jbe
mov
sbb
push
push
inc
test
sbbl
iret
dec
mov
lret
fbstp
mov
xor
pop
adc
aas
ds
cmp
jne
sbb
sbb
lahf
call
inc
test
dec
adc
mov
mov
js
lahf
jne
sub
aaa
repz
lods
test
test
insl
dec
lret
or
inc
in
repz
jb
sbb
lods
xor
out
cmp
iret
and
xor
clc
int3
daa
testb
stos
mov
repz
jl
out
push
add
mov
pusha
fidivrs
xchg
jae
inc
sbb
sub
fdivr
add
out
pop
sbb
cs
test
push
mov
mov
xchg
xlat
sub
push
jg
dec
and
das
scas
adc
fiaddl
or
pop
pop
mov
fistpl
pop
dec
mov
mov
push
or
push
mov
add
in
ja
jmp
mov
stos
pusha
out
sbb
adc
mov
fstl
outsl
ljmp
pop
lea
mov
ret
cli
popf
ror
cmpsb
mov
not
pushl
inc
push
adc
sti
dec
mov
fsts
leave
fs
pop
shll
sub
es
xchg
dec
lods
js
outsb
dec
xchg
or
adc
sahf
xchg
xchg
push
movb
popf
fidivrs
ljmp
dec
xor
adc
es
cld
dec
shrl
cmp
lock
pop
xor
hlt
cli
les
nop
dec
or
or
mov
movsl
sub
cltd
mov
enter
clc
movsb
and
dec
data16
mov
out
jnp
sub
iret
jne
leave
xor
jle
push
lods
pushl
icebp
ja
push
cltd
mov
aaa
jge
inc
xchg
mov
stc
sbb
or
dec
rolb
inc
mov
popa
jno
mov
aas
fists
push
add
mov
out
inc
fldl
pop
gs
inc
push
mov
in
pop
adc
faddp
bound
xchg
xor
dec
clc
das
insb
rclb
out
inc
addr16
mov
mov
push
mov
in
fisubrl
or
mov
pop
in
faddl
sub
push
mov
ss
jp
cld
adc
pop
fdivr
mov
fsubrs
int
andl
sbb
into
pop
jae
and
sbb
pop
les
or
jbe
ljmp
leave
orl
adc
cltd
mov
xchg
sub
nop
fsub
dec
pop
dec
clc
hlt
adc
leave
ss
sbb
lock
push
inc
xor
orl
leave
or
sarb
mov
fisubrl
outsb
push
fldt
adc
xor
push
xor
xchg
dec
push
mov
call
iret
daa
lock
lahf
cltd
inc
faddl
fidivs
add
push
loop
icebp
fwait
jo
std
test
xchg
mov
pop
imul
sub
cmp
sti
sbb
arpl
pop
lods
in
into
mov
mov
into
add
popa
movsb
dec
je
sub
loope
and
test
push
pop
cmp
pushf
mov
mov
mov
adc
fiadds
xor
movsl
push
ret
inc
fnstcw
ror
test
xchg
imul
insl
jg
repz
push
cmp
sar
xchg
icebp
xchg
mov
fmull
sahf
cmp
sbb
in
push
push
xchg
arpl
inc
mov
xlat
push
xor
test
inc
mov
stc
out
movsl
gs
std
arpl
pop
adc
sti
daa
xlat
aad
roll
addr16
push
xor
fildll
movsl
pop
dec
lcall
dec
and
mov
and
std
jno
mov
stos
das
mov
dec
mov
out
or
cmp
mulb
ret
es
pop
mov
sti
xchg
lcall
inc
les
inc
pop
inc
repnz
inc
insl
call
popa
inc
bnd
cld
mov
or
je
ss
jo
or
arpl
iret
dec
xchg
std
imul
push
addr16
loop
aam
xchg
js
cld
pop
outsb
mov
insb
xchg
negb
pushf
or
dec
int3
mov
lods
xor
xchg
icebp
mov
cmp
in
sbb
pop
push
cli
fstl
inc
push
dec
xchg
or
sub
ds
fidivrs
jo
dec
in
popf
push
mov
ja
mov
cmp
push
in
mov
xor
and
cmp
xchg
sub
sbb
sahf
out
sbb
inc
call
rclb
pop
aaa
add
mov
into
cs
push
mov
add
xchg
mov
sahf
push
insb
jmp
cltd
shrl
mov
in
cmpsl
dec
daa
add
test
in
js
xchg
xlat
insb
pop
arpl
push
ja
jmp
inc
dec
inc
das
int
and
mov
inc
test
addb
add
mov
mov
pop
adc
dec
or
mov
cli
or
mov
cmc
out
pop
lods
xor
daa
add
lods
fdivl
ja
fnsave
inc
jo
mov
sbb
les
aam
cmp
mov
pop
and
stc
mov
pop
int3
pop
test
aas
flds
jle
mov
sub
lods
test
scas
iret
aad
sub
mov
xor
movsl
or
jns
xchg
xor
push
mov
andl
pusha
add
popf
test
aas
scas
xor
fnsave
inc
sub
iret
testl
mov
test
movsl
pop
and
roll
dec
xor
adc
inc
pushf
mov
mov
cmp
sbb
sbb
js
cmp
loopne
jae
push
stos
push
jne
pop
daa
adc
stc
push
ja
mov
jb
decb
fcmovne
dec
mov
sbb
mov
adcl
dec
dec
data16
jge
mov
subl
sub
mov
lret
testl
mov
mov
aas
pop
add
imul
mov
mov
inc
repnz
fisubl
mov
cli
adc
inc
lret
cmpl
stos
stos
aad
shr
imul
xor
mov
mov
out
into
xchg
sub
pop
add
push
push
dec
ret
pop
sub
rclb
popf
ret
sub
fimull
jle
lds
int
js
stos
or
sbb
inc
loopne
dec
call
lret
insb
cld
nop
push
xchg
pop
cmp
cmc
repz
dec
mov
push
xor
jmp
in
jmp
int3
push
push
int
sub
fisttps
lea
es
mov
or
icebp
and
mov
mov
int
or
out
in
inc
xor
lock
adc
pop
sbb
cs
mov
popa
xor
icebp
push
adc
add
iret
mov
xor
push
mov
or
jo
mov
xchg
inc
sbb
ljmp
aam
inc
loope
xchg
lea
adc
lcall
into
mulb
js
lcall
mov
add
adc
mov
ds
xchg
outsb
mov
mov
inc
stos
or
xchg
pop
arpl
jnp
in
mov
cwtl
pusha
sub
jo
movsl
repz
xor
cmp
shll
stos
sub
mov
lahf
xchg
cmpsl
xchg
add
repz
lret
les
mov
insb
test
pop
push
das
xchg
push
pop
pop
outsl
fwait
xchg
jno
xor
mov
divb
popa
cmpsl
fimull
jno
movsb
sub
ret
xchg
repnz
in
or
mov
in
ret
loopne
lahf
scas
or
rorb
aas
dec
mov
subl
das
add
cmp
sub
cli
mov
jg
dec
aaa
mov
loope
fnstsw
mov
imul
dec
dec
push
fldenv
insb
or
and
dec
dec
jbe
stos
xor
cmp
jmp
xor
inc
xchg
mov
lds
call
mov
fisubrl
xchg
mov
jge
in
fdivrs
jmp
or
sarb
adc
les
pop
inc
push
cmp
mov
repnz
pop
gs
je
mov
and
aaa
loopne
pop
mov
sub
xchg
jns
push
pop
lret
cld
popa
fwait
mov
mov
jno
sahf
adc
js
mov
jecxz
jg
inc
lods
mov
fldenv
mov
std
cli
rorb
mov
arpl
out
mov
fdivrs
mov
push
cmp
mov
push
stc
scas
xor
sub
xchg
out
ljmp
pop
cmpl
loop
xchg
fwait
iret
mov
xlat
jae
outsl
sti
sub
subb
push
sahf
xchg
xor
sahf
mov
bound
mov
dec
jmp
xchg
mov
mov
outsb
sub
in
mov
cwtl
cmp
dec
in
and
pushf
imul
stos
xor
rcrb
jmp
loopne
jmp
or
mov
cmp
and
inc
lea
inc
dec
dec
std
xchg
das
sub
sub
pop
jecxz
mov
in
jmp
xchg
test
nop
cmpsl
ds
add
out
xchg
mov
mov
mov
mov
push
outsl
lcall
movsb
adc
shld
insl
mov
push
es
js
jno
leave
push
and
xchg
jns
adc
mov
mov
mov
pop
int3
add
xchg
out
sbb
insl
out
popf
in
jns
jl
test
cmp
cmpsb
daa
cmp
or
shll
xchg
push
leave
fsubs
inc
cmp
push
cmpl
push
jp
jl
mov
push
jp
push
dec
rclb
idivl
mov
adc
clc
icebp
out
cmp
pop
repnz
test
mov
xorb
mov
loopne
sbb
sbb
mov
arpl
xchg
decb
or
lret
xor
or
insl
sbb
fisubrl
sbb
and
movsb
xorb
pop
lods
jae
adcl
pop
and
xchg
test
iret
repz
xor
popa
call
addl
push
or
sub
pop
inc
push
nop
int3
mov
mov
movsl
push
mov
pop
inc
andb
or
sub
shlb
xchg
lods
jae
ja
push
jnp
push
in
outsl
inc
ret
ljmp
setae
in
mov
call
pop
fists
xchg
mov
cmpsb
test
cmp
cld
clc
cltd
test
sub
loop
lea
out
outsl
mov
mov
lcall
popa
pop
aas
xlat
and
xchg
add
jecxz
fisubl
lahf
mov
sbb
sbb
cmp
push
icebp
mov
jo
aad
inc
repnz
mov
sahf
aam
mov
jecxz
scas
in
sbb
push
and
lock
mov
inc
pop
cwtl
mov
iret
push
pop
sub
call
into
cmpsl
sub
inc
mov
hlt
push
and
cmp
jl
mov
nop
int3
mov
cwtl
mov
fbld
adc
sub
xchg
repnz
add
rcrl
insb
push
and
test
loopne
rcrl
popa
ret
movsl
fidivrs
and
push
leave
mov
inc
outsb
jne
jns
adc
mov
lahf
imul
mov
inc
pop
sub
es
pop
fdivp
daa
or
xorl
idivb
push
mov
scas
pop
jle
inc
dec
pushf
imul
push
fsubr
push
cmpb
fiadds
cltd
repnz
outsb
cmp
adc
sub
cmc
pusha
das
sub
sbbl
mov
stos
jb
lock
aam
or
sub
mov
jns
lcall
imul
enter
aas
mov
out
lea
movsb
adc
popa
rep
jg
rol
sub
jmp
mov
in
xchg
xchg
orl
mov
add
sahf
imul
leave
enter
mov
cmp
mov
inc
nop
inc
mov
sub
xchg
scas
mov
pop
dec
lock
mov
or
pop
or
in
xor
mov
jbe
sub
sbb
sub
insb
xor
xchg
std
mov
sbb
ret
pop
lea
sarb
push
fwait
popa
mov
push
inc
rcrb
jl
cmp
dec
movups
jl,pn
pop
jne
inc
pop
jbe
mov
adc
sub
lods
mov
pop
mov
das
outsb
cmp
or
ds
mov
push
inc
jnp
xor
shrl
in
xor
and
mov
inc
adc
jg
dec
pop
lods
aaa
and
movsl
mov
inc
push
and
rcrb
loope
clc
xchg
or
mov
je
dec
nop
xchg
jo
push
or
and
inc
push
jg
xor
inc
xchg
inc
add
pop
lods
adc
mov
lahf
arpl
pop
sub
lea
dec
sub
inc
mov
cmp
test
shll
mov
repnz
cmp
testb
xchg
arpl
xor
adc
shlb
mov
adc
mov
add
mov
and
movsl
stc
setae
jae
cmpl
aaa
pop
mov
test
sub
lds
aam
call
and
in
mov
adc
stos
in
push
xor
test
fucomi
jle
repnz
xor
or
mov
pop
sub
pop
aas
hlt
fdivl
out
iret
sbb
sti
pop
js
nop
xor
cwtl
ja
push
popf
test
movsb
inc
cmpsl
inc
mov
sub
in
movsb
add
mov
pop
ret
mov
jle
mov
sub
scas
or
in
mov
rorl
cmp
inc
push
pushf
mov
fisubrs
or
add
pushf
sbb
ret
sbb
dec
add
push
leave
cmp
insb
jl
stos
int
pop
fcomps
and
inc
or
lret
sbb
and
dec
mov
sahf
daa
add
data16
dec
subb
dec
into
popf
fs
stos
cmp
lock
loope
xlat
cmp
xchg
adc
or
dec
ds
test
xorl
insl
loop
push
or
adc
jle
mov
stc
fildl
enter
fisttps
xchg
mov
adc
mov
fs
pop
sbb
jle
push
xchg
mov
arpl
xor
inc
inc
and
mov
mull
cmp
cmpsb
cmpsl
clc
lea
cmp
sti
bound
jae
cld
and
xchg
pusha
pop
outsl
fwait
and
add
cli
test
ds
insl
ljmp
xor
adc
rcrb
jb
repnz
ret
pop
js
cmp
pop
orb
pushf
cmpsb
out
filds
pop
repz
sub
dec
out
hlt
mov
int3
movsl
negl
sbbl
lahf
push
js
sti
in
jnp
pop
sarb
lock
imul
mov
adc
or
bound
rorl
fidivl
mov
sub
mov
dec
or
sbb
das
pop
movsb
jbe
mov
jp
ds
or
rcrl
les
roll
mov
in
jae
aad
jge
lods
adc
mov
sbb
mov
mov
popa
dec
xchg
mov
hlt
fldl
dec
in
inc
mov
jns
rorb
popf
leave
jle
imul
jecxz
ret
out
cmp
lcall
add
arpl
mov
lods
sbb
dec
adcb
repz
fiadds
xor
fadds
xor
pop
pusha
jp
xchg
or
lods
lahf
fldl
movsl
pop
inc
or
sbb
pop
mov
xor
test
addb
push
cmp
pop
xorl
pusha
lds
cmp
pop
xchg
aam
in
mov
rcr
cmp
adcl
jae
jnp
xlat
cmpb
nop
adc
cmp
test
inc
add
popa
sahf
stc
push
stos
sbb
rcrb
shll
shl
ret
mov
push
xorb
out
or
push
loope
or
xchg
pop
shrl
mov
xor
fsubrs
pushf
jle
rorl
dec
filds
pushf
xchg
mov
mov
pushl
add
xchg
and
stos
xchg
sbb
fwait
call
push
das
cmp
jecxz
loopne
xor
push
in
pop
lret
out
lret
xchg
adc
int
xor
or
cli
pushf
fidivrl
fisubs
test
push
dec
std
pop
xor
aaa
jge
cmp
es
mov
mov
movsl
mov
dec
pop
dec
push
js
cli
or
aas
inc
cmpsl
inc
call
int3
pop
adc
decl
pop
loope
mov
mov
adc
cmp
hlt
add
idiv
push
fistpll
inc
enter
pusha
push
sbb
test
fbld
cs
jae
sub
push
movl
or
xchg
jns
fstpt
mov
inc
adc
repz
jo
mulb
ja
loop
jle
mov
and
jbe
and
mov
sbb
pop
xor
dec
out
jne
in
mov
popf
int3
lds
rclb
fs
ljmp
pop
pusha
dec
leave
adc
add
hlt
pop
out
nop
insb
pop
push
out
idiv
jne
lret
pushf
pop
lods
push
ret
xor
ficoml
fnstenv
imul
scas
mov
lret
imul
xchg
paddusw
clc
jne
aas
xor
pop
jle
iret
inc
jg
repz
repnz
outsb
dec
mov
sahf
ja
test
ss
jnp
scas
loopne
fwait
cmp
jg
jb
mov
bound
dec
mov
xchg
dec
test
imul
rcl
jbe
jmp
push
sbb
xor
popa
in
lock
inc
pop
mov
ficoms
int3
jbe
aas
adc
enter
pop
push
inc
test
cmpsl
sub
sbb
das
xchg
popa
pop
repnz
push
add
aas
mov
dec
mov
clc
dec
orps
pop
shrb
jne
lret
repz
pop
xor
shlb
mov
ss
out
int
lock
lea
filds
sub
test
mov
rolb
shlb
mov
xor
out
mov
mov
push
aas
in
enter
and
pusha
lcall
mov
clc
cmc
and
dec
and
add
movsb
icebp
scas
push
or
xorb
inc
rclb
mov
cs
fptan
sti
sub
sarl
sbb
lret
movsl
shll
divb
ljmp
adc
int3
sub
sbb
push
sbb
xor
shrb
adc
pop
int3
cmp
push
out
mov
mov
out
cmp
sar
add
dec
mov
or
inc
rcll
out
ret
int
lcall
setbe
add
xlat
test
or
mov
sbb
pop
jae
jecxz
daa
or
or
cmpsl
movsl
pop
andb
repnz
and
ljmp
push
loope
scas
mov
pop
xlat
aas
mov
pushf
sub
push
shrl
out
cli
mov
out
into
faddl
push
lds
hlt
ret
in
inc
and
dec
mov
ret
das
repz
and
mov
and
sti
cmp
sub
je
ljmp
jne
and
dec
lds
jnp
inc
fisttps
fst
sub
movb
aaa
repnz
xchg
xchg
pop
ret
int
mov
stos
mov
push
mov
fcoms
iret
adc
push
nop
and
inc
xor
mov
les
pusha
mov
fchs
xor
ja
mov
adc
fdivs
xor
sbb
es
xchg
call
lcall
xchg
fs
imul
xchg
scas
dec
pop
bound
stos
dec
pmullw
popf
adcb
fs
xor
mov
inc
or
sbb
aas
dec
jle
stos
add
fcmove
jmp
into
out
and
jg
testl
shll
sub
rcrb
test
shl
mov
je
aas
popa
push
push
inc
sbb
stc
xchg
ja
stc
sbb
in
adc
insl
ljmp
xor
ljmp
sbbl
xchg
inc
adc
leave
cmp
push
pop
imul
jge
jecxz
push
xor
or
ret
sahf
fistps
icebp
dec
mov
push
lahf
mov
lods
popa
mov
mov
xchg
dec
std
jecxz
ret
out
dec
mov
scas
push
xchg
add
pushf
fwait
insl
ja
pop
imul
mov
xchg
pop
push
mov
add
dec
push
fnstcw
pop
icebp
ljmp
lods
or
negl
sub
fcomi
cmovb
imul
pop
stos
cmp
cwtl
adc
pushf
int
imul
mov
pop
jnp
inc
std
fdivs
into
add
xlat
out
repnz
xlat
jae
sti
jnp
jmp
jmp
xchg
ljmp
push
mov
lea
xchg
or
or
into
insb
lock
call
sar
sub
nop
loopne
push
ds
hlt
adc
lods
popa
inc
add
test
cld
sub
add
insl
in
aam
and
mov
pop
fldenv
dec
sub
mov
ja
cmpsl
xchg
sbbl
mov
jmp
imul
stc
add
mov
jl
fwait
or
into
push
movsl
sbb
out
pop
aad
cmp
fdivr
int
inc
test
fsubr
sbb
sub
ja
and
dec
and
pop
inc
jecxz
mulb
mov
js
cmp
jmp
frstpm(287
sub
ja
jl
stos
mov
ljmp
add
shlb
movsl
iret
and
adc
lret
adc
mov
cld
shrl
jg
out
jecxz
xor
jl
jecxz
xchg
xor
out
xor
inc
push
cli
sbb
movl
repnz
xor
mov
pop
stc
mov
sbb
mov
mov
pop
ror
mov
cmp
fists
fstpt
jne
in
and
or
xchg
outsl
jle
add
xchg
xlat
fisttpl
push
or
mov
cmp
xchg
lock
mov
into
pop
adc
pop
or
insb
push
jle
subb
cmc
and
jmp
hlt
in
sbb
sub
iret
pop
cmovg
pop
pop
mov
or
fldenv
jns
mov
push
push
adc
add
inc
jno
adc
push
fs
outsb
repz
andl
xchg
inc
and
push
aaa
mov
mov
xchg
mov
adc
push
bound
xchg
cmpsl
sbb
cld
testl
stos
sbb
push
inc
inc
out
cs
insl
sub
out
movsb
scas
and
and
lea
iret
cwtl
imul
imul
insb
pop
lret
dec
in
jecxz
fldt
jl
pop
lods
sub
mov
jnp
hlt
sarb
outsl
vsqrtss
ja
push
test
push
and
cmp
fisttps
mov
xor
push
pop
pop
mov
lcall
adc
daa
divps
sti
and
jmp
and
mov
hlt
js
mov
pop
push
outsb
sbb
pop
mov
jb
inc
push
insl
or
addb
sarb
cwtl
mov
cmpsb
cmp
inc
test
bound
fldcw
pop
subl
mov
push
or
sti
std
and
push
mov
data16
xlat
xlat
pop
pop
and
adcl
xchg
pop
adc
int
xor
sub
icebp
insl
and
mov
pushf
push
stc
sar
dec
in
pop
out
rclb
mov
enter
cmc
icebp
pop
pusha
mov
pushf
inc
ret
mov
jmp
jo
push
sti
mov
fs
add
ret
add
jns
mov
dec
inc
pop
adc
xchg
xchg
cli
mov
addl
cmc
mov
adc
dec
lret
push
cmp
sub
lahf
adc
mov
and
inc
dec
mov
popf
es
pushf
lock
stos
push
das
inc
call
push
ret
jge
push
fsubs
sub
pop
mov
daa
xchg
mov
mov
jl
pushf
out
dec
imul
adc
out
dec
std
movsb
shll
loope
es
pop
dec
mov
ficomps
xor
mov
loope
and
fnstsw
roll
aad
lcall
inc
mov
or
mov
cmp
lcall
cmp
outsl
add
cwtl
in
mov
pop
push
jmp
inc
cwtl
fisubs
or
sbbl
lret
pop
jmp
pusha
cmp
stc
pop
pop
movlps
jnp
or
femms
js
xchg
mov
pop
test
in
imulb
jns
cld
push
add
push
xor
add
decb
xorb
push
out
popf
or
adc
jnp
fdivs
sub
add
push
cwtl
sub
pop
mov
in
cltd
out
mov
sbb
aad
or
lea
das
sbb
pop
repz
test
or
pop
mov
or
scas
add
mov
iret
mov
mov
aaa
rcl
decl
pop
inc
or
fs
mov
pop
push
xor
sub
in
pop
add
outsl
pop
popf
loope
aad
jge
leave
cmp
sbb
pop
sbb
mov
loop
ret
insl
pusha
jle
rcll
aaa
bound
push
inc
test
pop
dec
mov
pop
fs
xchg
and
outsb
mov
mov
sbb
and
mov
int3
jbe
out
out
call
cs
int3
icebp
fldcw
sub
or
aad
pop
fdivs
negl
in
lcall
cs
pushf
push
sbb
ja
dec
mov
xor
stc
fneni(8087
imul
stc
fadd
aaa
daa
loopne
ds
xor
mov
out
mov
pop
test
hlt
out
aaa
jge
dec
test
or
cltd
xchg
incb
cmp
or
jge
sbb
and
xor
sti
loope
rol
pop
jl
mov
push
dec
cmpl
pusha
gs
lods
mov
cmp
jmp
call
xor
xor
xor
xchg
enter
out
mov
jnp
mov
add
sub
push
or
pop
inc
adc
push
push
adc
loop
mov
in
inc
shlb
out
push
ffreep
mov
outsl
dec
adc
jl
xchg
out
sbb
fmul
xchg
cmpsb
cmpsb
push
pop
nop
adc
xchg
pop
out
int3
cmpsl
or
sbb
add
xor
stos
xchg
mov
push
cmp
hlt
mov
cmp
xchg
adcl
push
add
pop
or
xchg
das
addl
mov
xchg
adc
mov
adc
or
in
inc
imull
xchg
arpl
cmpsb
arpl
stos
jle
xor
and
orl
pop
adc
push
cmp
inc
dec
mov
or
pushf
imul
je
pop
adc
sub
imul
mov
mov
add
dec
loope
xlat
xor
sub
pushf
lret
dec
or
pop
out
imul
xchg
lret
xchg
rorb
or
mov
stc
sbb
jne
inc
ret
ret
icebp
xchg
xchg
imul
ss
test
leave
jb
cld
in
push
sbb
pop
inc
sar
mov
push
pusha
and
push
sbb
xchg
mov
xor
daa
inc
inc
in
pusha
xor
xchg
push
lea
dec
add
add
xchg
add
mov
ret
enter
push
adc
add
sbb
adc
sub
and
or
and
les
mov
pop
insb
mov
insl
js
add
loope
add
lahf
inc
pop
setno
dec
adc
repz
popa
and
cmp
cli
pop
test
out
inc
imul
and
adc
outsl
cmp
push
push
xchg
cli
enter
or
js
add
in
cmpsb
fs
lcall
ja
jg
aas
cmp
fistps
dec
insl
push
cmp
mov
out
or
pop
scas
jns
out
or
sbb
inc
das
xchg
mov
imul
jbe
cltd
sub
mov
fsts
add
idivl
stc
mov
dec
sbb
decb
dec
sbb
cli
out
mov
enter
adc
jno
stos
add
in
repz
fisubrl
sbb
and
inc
call
mov
and
in
insl
sub
jo
cld
outsb
cmp
jge
leave
xchg
jle
mov
push
test
mov
mov
mov
ljmp
std
pusha
jo
xchg
lock
imul
movsb
mov
rol
jle
jmp
or
xchg
out
cwtl
mov
sti
push
xchg
cmpsl
mov
push
mov
into
aas
and
cmp
out
jecxz
push
push
xor
sbb
xchg
fsts
in
or
movsl
mov
add
pop
xchg
mov
xchg
dec
mov
in
cs
lret
icebp
and
subl
push
in
push
or
das
jl
xor
popf
orl
je,pn
jb
jge
push
add
js
daa
data16
sub
nop
aam
jns
cwtl
ja
jmp
push
dec
sbb
leave
movsl
movsb
and
sub
mov
bound
fildl
leave
xchg
shlb
dec
xlat
fimull
sarl
xor
orb
movsl
cwtl
mov
mov
data16
push
fdivrs
jge
mov
jg
pop
adc
dec
orb
in
mov
dec
push
dec
clc
das
ret
sub
adc
dec
dec
ret
movsb
into
xlat
push
test
ja
mov
sti
enter
dec
fwait
or
adc
adc
xor
cltd
test
pop
in
xor
dec
fsubs
sub
sarb
pushf
decb
jae
ss
add
and
mov
bound
mov
lahf
mov
add
lods
sar
stos
arpl
pop
adc
and
test
sbb
inc
shrb
jnp
paddsw
pop
dec
dec
lret
mov
movl
push
sbb
xchg
gs
outsb
or
adc
ficomps
jge
aas
jge
mov
data16
sahf
stc
call
add
fisubl
shlb
rcrl
mov
mov
mov
test
daa
sbb
arpl
push
mov
pushf
ja
xchg
addr16
lds
cmpsl
sahf
sbb
pop
aaa
or
mov
call
jb
push
sbb
out
imul
inc
sbb
bound
pop
push
xor
notb
push
jnp
insl
pushf
cmc
outsl
testl
sbb
or
movsb
ret
bound
test
sarl
jo
push
xchg
sbb
ficoms
sub
push
hlt
fwait
push
in
jmp
stc
testb
cmpsb
test
sbb
push
lods
jnp
stc
mov
sub
fisubl
aam
les
xchg
mov
sbb
mov
sub
cmpsb
into
ljmp
rol
push
push
jb
lret
sbb
or
fldt
nop
or
loope
cmp
imul
xchg
jns
nop
out
push
xchg
cmp
cmp
in
jp
cmp
cwtl
loope
mov
imul
lahf
adc
pop
mov
faddl
add
ljmp
mov
adc
push
inc
pusha
insl
popa
lds
ljmp
cmc
imul
outsl
into
in
dec
fwait
adc
push
dec
push
pop
scas
decl
repz
jbe
paddd
jne
mov
dec
cmp
fcoml
mov
lock
aam
lret
push
int3
mov
out
sbb
aas
xchg
inc
fmuls
sti
jle
pop
mov
xlat
mov
xchg
mov
push
mov
mov
jns
into
push
daa
push
dec
mov
xchg
mov
mov
mov
sbb
push
mov
jnp
mov
nop
jle
outsb
outsl
outsb
jb
lahf
push
adc
les
push
mov
rclb
xor
sbbl
mov
loope
adcb
push
or
add
mov
mov
lods
pop
xor
push
enter
imul
subl
jle
rorb
test
and
les
ret
lods
jp
inc
mov
nop
int
ss
pop
push
mov
addb
rorb
dec
xchg
jmp
mov
enter
ret
pop
mov
xchg
clc
outsl
mov
jb
jge
xchg
fistpl
jmp
loope
mov
mov
or
lret
adc
sti
in
lret
dec
subl
mov
sbb
int3
outsb
xor
ljmp
popf
mov
lret
mov
in
dec
movsl
bound
jno
mov
ret
jp
shlb
movl
sub
dec
out
out
nop
pop
mov
or
in
jne
sbb
mov
push
mov
adc
insb
repz
dec
ficoml
xchg
outsb
xchg
stos
dec
or
adc
stos
into
nop
xchg
addr16
add
lahf
js
cltd
testb
xor
adc
mov
addr16
sub
and
clc
mov
loop
pop
int
lods
filds
outsl
rclb
push
and
ja
pop
mov
mov
mov
scas
mov
bound
jg
lret
sub
lds
cmp
inc
aaa
lds
push
and
mov
sub
inc
pop
int
mov
pop
sbb
popa
and
repnz
jle
mov
push
int
xor
or
push
shl
shr
jb
inc
dec
sbb
lret
je
jmp
mov
cmc
aam
push
ljmp
in
push
clc
mov
jl
add
lahf
loope
push
adc
enter
xlat
je
xchg
adc
das
pop
push
popl
mov
lods
je
pop
insb
divl
roll
cwtl
data16
std
xchg
mov
xor
xchg
je
fwait
sub
es
aas
test
sub
int3
nop
sbb
in
hlt
mov
imul
mov
inc
mov
addl
cmp
mov
into
sub
push
fs
mov
add
loopne
sbb
mov
mov
aaa
xor
mov
adc
icebp
jno
cld
jecxz
cmpb
mov
ret
add
xor
cs
loop
out
aas
cmpsb
xchg
push
adc
push
xor
in
jg
nop
movsb
cwtl
sbb
sbb
aad
int3
cmpl
cmp
push
out
add
adcb
jbe
pop
ja
dec
cmp
cmpsl
mov
push
xor
push
xchg
xchg
jb
out
incl
sbb
pop
mov
jg
cmp
popa
fidivrs
lea
sub
sarb
sub
test
cwtl
cmp
sub
mov
js
stos
or
insl
xchg
std
ds
jae
aas
pop
sub
cli
outsl
dec
xchg
add
std
mov
rorl
pop
aad
jge
pop
dec
pushf
dec
enter
xchg
jno
cmp
movsl
and
jno
arpl
outsl
orl
scas
test
push
xchg
pop
push
sub
mov
jmp
sub
jge
lods
sti
xor
pusha
fnstsw
call
loop
sarl
scas
fs
mov
jae
sahf
hlt
push
ljmp
jnp
sti
movsb
pop
je
sbb
xor
inc
jns
jp
dec
mov
repz
fisubrl
add
cmp
dec
out
inc
jge
push
adc
cmp
jns
mov
fwait
mov
out
push
cmp
push
pushf
jle
loopne
push
out
push
flds
pop
xlat
shl
sbb
sti
ljmp
dec
ljmp
gs
mov
loopne
mov
subb
sbb
lock
std
popf
and
jmp
lret
xlat
out
xorl
js
sub
or
pushf
scas
outsl
pop
lret
jns
inc
dec
jecxz
pop
inc
push
pop
insb
xlat
popa
xchg
pop
lret
dec
or
repz
sahf
ja
daa
mov
xchg
mov
mov
test
rcr
sub
and
pop
mov
xchg
and
dec
push
hlt
mov
fsubrs
or
outsl
enter
and
pop
ret
cld
jnp
scas
aam
push
jmp
sti
add
pop
outsb
jo
icebp
ljmp
sbb
sti
jnp
imul
loop
data16
dec
scas
in
ret
rcr
jno
dec
mov
jge
ljmp
push
std
lret
loope
cmp
pop
cmova
jmp
call
inc
sub
jmp
sbb
mov
adc
in
jg
repnz
cmp
xchg
xchg
sub
fwait
lcall
xchg
ret
mov
jnp
out
inc
jle
add
icebp
adc
push
stos
cwtl
push
mov
clc
sub
cmp
data16
add
xor
lahf
aas
xor
rcl
pop
push
mov
jg
push
pop
mov
jne
loope
das
mov
mov
lods
stos
sub
pop
lret
rol
out
xchg
jnp
rcll
shlb
pop
imul
int3
je
push
xorb
push
cwtl
lea
popf
ss
xor
imul
jge
stos
clc
imul
xchg
outsb
sbbb
mov
stos
ljmp
xchg
pop
out
flds
scas
test
and
mov
clc
aad
push
test
jo
rcrb
mov
jae
out
mov
repnz
inc
divl
imul
push
ljmp
sbb
adc
lea
jp
push
mov
mov
pop
rclb
jbe
dec
mov
lahf
iret
cs
dec
adc
push
inc
cmp
and
inc
fmull
inc
xor
push
inc
mov
pop
push
bound
jb
sbb
sub
push
mov
cli
int
lret
fwait
test
sbb
pop
xchg
out
jle
mov
mov
sub
cli
pop
jne
xchg
mov
daa
stos
jno
mov
mov
inc
jne
pop
fsubrs
cmp
xchg
les
lcall
xadd
lar
in
loope
jecxz
mov
inc
pusha
inc
mov
std
and
xchg
and
jb
fabs
xchg
add
cmc
xlat
sbb
mov
mov
adc
sbb
lahf
cmp
xchg
adc
imulb
movsb
iret
out
cs
pushf
push
push
add
and
repnz
add
jge
mov
les
jmp
jge
or
sub
idivl
leave
loope
jae
jbe
data16
xchg
mov
popa
je
xchg
pushf
cltd
cmpsb
or
jecxz
aad
add
jne
dec
rol
lea
ret
adc
pop
jne
inc
ret
add
adc
adc
inc
jne
push
loop
jb
add
mov
jecxz
outsl
imull
pop
out
insb
cmp
insl
add
xchg
das
or
sbb
nopl
clc
or
popf
jp
add
dec
sub
xchg
dec
jge
mov
push
gs
mov
mov
je
cltd
cwtl
stos
cmp
leave
mov
xchg
lcall
pop
jle
adc
adc
and
xchg
sbb
sbb
jns
lds
icebp
es
pusha
sbb
pop
xor
lods
loope
and
adc
xchg
push
sub
aam
mov
cmp
pop
inc
add
ficomps
xor
out
repz
xor
or
outsl
fldl
inc
subl
movsb
rcr
xchg
xor
out
addr16
or
cwtl
jmp
fwait
dec
xchg
enter
add
popa
jmp
push
lret
rcrb
rcrl
mov
sbb
push
sarb
sbb
lock
cld
xchg
sub
mov
inc
js
mov
mov
jmp
sbb
inc
les
repnz
add
mov
mov
aad
mov
adc
jl
testl
jmp
dec
adc
stos
orb
in
mov
call
xor
aas
xor
xorb
push
loopne
and
mov
jae
testl
xchg
mov
sub
add
or
sbb
repz
mov
push
enter
sub
xchg
stos
adc
pop
xchg
ret
es
mov
fwait
adc
sub
nop
mov
xchg
mov
fdivl
push
sbb
mov
lahf
fs
fldt
pop
pop
fnstcw
and
xor
repz
dec
push
push
push
ret
and
ds
mov
je
push
jno
lcall
mov
lahf
mov
addr16
adc
push
imul
scas
xor
xchg
push
jecxz
xor
das
sbb
xchg
fisubrs
clc
cmc
push
push
lahf
xchg
sahf
nop
pop
lds
inc
mov
pop
clc
cwtl
mov
push
push
and
aaa
and
sahf
mov
lods
aas
out
and
fcmovne
xchg
adc
xor
jbe
adc
or
cmp
jecxz
scas
push
shrl
or
pushf
xor
mov
sub
add
mov
sti
cmp
test
outsl
pop
testl
mov
dec
les
imul
es
xchg
stc
pusha
sub
push
mov
les
mov
mov
ror
jo
inc
lods
add
and
mov
or
pusha
inc
mov
imul
mov
add
in
jl
js
xor
cmp
mov
push
xlat
jb
inc
rcr
outsb
sarb
dec
push
and
and
incl
ficomps
add
pop
int3
inc
jmp
std
in
xor
rcr
enter
cltd
mov
pop
inc
inc
or
lds
jno
mov
mov
mov
mov
cmp
inc
fwait
cltd
mov
inc
outsl
pop
mov
jecxz
xchg
xchg
ret
jnp
push
jmp
add
xor
or
cld
rcr
lea
aas
fildll
xchg
cmp
fistpll
je
imul
rclb
outsb
jmp
inc
mov
pop
xlat
jl
fsubrl
jle
mov
adc
test
test
mov
add
pushf
rsqrtps
ljmp
aam
pop
or
and
pusha
mov
iret
jnp
sub
call
icebp
in
aad
adc
xlat
mov
pusha
movsb
stc
jg
cmp
in
jmp
dec
pop
ret
and
pop
lahf
imul
jg
sbb
icebp
ficoms
mov
mov
mov
imul
stos
jnp
jle
push
lds
call
out
jecxz
and
mov
jmp
mov
mov
out
pop
fdivl
and
stos
mov
test
mov
rcrl
push
jnp
inc
loop
sti
mov
adc
mov
ret
fsub
push
xor
addb
adc
aaa
mov
insb
xchg
test
int3
jns
mov
notl
mov
adc
xchg
mov
mov
push
and
push
dec
cmp
leave
xchg
xchg
mov
lret
shll
dec
fldenv
mov
inc
mov
jae
imul
hlt
movsb
fsts
mov
fcomip
pusha
pop
inc
std
xor
mov
push
inc
lahf
mov
jmp
jle
aas
pop
into
lea
xor
mov
mov
aaa
dec
ret
movaps
clc
bound
sbb
jb
jg
pop
xor
fimuls
and
lea
push
fldenv
and
rorb
mov
fcmovnbe
cmp
xchg
mull
int3
sub
loope
mov
xor
fisubs
into
ds
dec
in
idiv
mov
inc
pop
and
dec
xor
mov
arpl
sbb
lcall
cmp
adc
shll
loopne
sbb
mov
ja
dec
sub
loopne,pn
je
dec
add
scas
clc
xchg
scas
xchg
lea
xchg
push
sbb
popa
test
shll
cmp
test
add
in
mov
imul
mov
shrl
adc
or
cmpsb
sub
mov
jge
decl
clc
ljmp
xchg
bnd
int
push
mull
and
rorl
add
mov
mov
cmp
testb
lods
lods
shlb
mov
ljmp
sub
jb
jle
xor
xor
sbb
js
dec
or
pop
test
and
pop
enter
mov
stc
fwait
ret
xchg
jl
xchg
pop
stc
push
jmp
inc
ljmp
jbe
dec
jle
add
sbb
mov
sbb
xchg
sahf
cltd
push
sub
dec
mov
mov
test
and
inc
stos
popf
aam
jecxz
xchg
lret
xor
mov
cmpsl
mov
pusha
and
daa
orl
testb
add
paddq
aas
adc
xor
jne
jb
inc
mov
popl
sub
pop
ja
push
scas
outsb
loope
arpl
cmp
mov
add
js
mov
mov
xchg
xchg
mov
std
cmp
cli
or
fsubrl
addr16
push
xor
rclb
test
mov
sti
dec
add
pushl
sub
and
sbb
mov
sahf
jle
sub
jbe
adc
or
xchg
jmp
mov
push
adc
adc
int3
lss
test
ret
and
sub
add
xlat
xchg
and
popa
test
mov
sub
fwait
ds
fwait
xchg
sub
test
sub
push
mov
rcr
imul
fldenv
adc
mov
mov
cmpsb
xor
jno
cmp
add
pop
cmp
je
jo
xor
jge
in
mov
inc
popa
add
sarb
inc
insb
jp
popf
lods
xchg
inc
dec
mov
adc
or
lods
xchg
rcrb
rcr
lods
repz
push
orb
shl
mov
pop
xchg
out
mov
push
pop
stc
ljmp
idivl
cld
sbb
movsl
adc
dec
sub
inc
xor
movsb
mov
jo
mov
mov
lahf
mov
pop
pop
rcrl
js
ss
mov
jns
test
movsl
call
xchg
cli
add
fmuls
inc
js
or
iret
cmpsb
out
cmpsb
das
sub
xor
mov
and
mov
cs
mov
test
sub
das
outsl
xchg
add
or
lea
add
lock
popa
icebp
leave
push
mov
adcl
and
xchg
push
push
adc
add
push
mov
mov
push
cli
call
fxch
aaa
xor
sbb
cmpsb
out
mov
loopne
inc
scas
fxch
jl
jb
fwait
ret
jo
mov
pop
and
aad
jge
cwtl
scas
jnp
jae
push
scas
sbb
imul
dec
and
sarl
pop
jp
mov
mov
ret
mov
mov
dec
mov
sbb
and
mov
mov
ss
mov
andb
aad
aad
cs
mov
mov
js
pop
mov
or
lods
pop
xlat
push
sbbl
cmpsb
pop
add
or
lcall
inc
mov
insb
insl
nop
and
fnsave
mov
jne
pop
mov
cmc
cmpl
cmp
jp
jge
stos
cmpsb
push
jae
decb
adc
cmp
pop
mov
jl
imul
inc
and
aam
mov
mov
or
mov
movsb
xlat
jne
aaa
inc
aam
or
gs
out
jp
mov
mov
jle
push
in
sub
jns
or
adc
addr16
test
mov
je
push
cmpsl
mov
loope
jnp
rolb
dec
pop
movsb
and
inc
sub
sub
arpl
lods
and
cmp
fstps
sar
mov
call
mov
cmp
fwait
scas
push
xor
adc
pop
aad
lcall
imull
push
jmp
arpl
cmpsl
and
xchg
jb
ret
lea
mov
ljmp
movsb
push
ret
cmp
sub
cld
clc
mov
sub
das
pop
pusha
fldl
outsl
adc
imul
inc
xchg
outsl
sti
jmp
enter
in
fsts
and
cmp
jb
imul
lahf
sbb
jmp
lock
scas
xchg
je
ret
daa
test
mov
jmp
int3
push
sbbl
or
mov
imul
insb
in
push
lcall
ret
in
imul
mov
stc
dec
inc
cmp
pop
xchg
xchg
and
and
test
movsb
outsb
push
adc
cwtl
pusha
xlat
adc
ret
sub
or
mov
mov
into
mov
dec
rclb
dec
jmp
jne
mov
pop
aad
mov
andb
push
jb
test
adc
stc
push
pushf
dec
and
jp
add
adc
xor
lcall
push
xor
scas
int3
adc
mov
adc
iret
xlat
jno
imul
jns
sbb
cmp
xor
popa
enter
lcall
and
stos
xlat
xchg
cltd
fwait
data16
jns
pushf
cli
lahf
sti
test
movsl
jno
and
xor
call
jecxz
dec
jnp
jns
pop
dec
push
stos
outsl
xchg
sbb
lds
cmp
lods
mov
jg
hlt
xlat
flds
xchg
sub
dec
sub
outsl
pop
fs
orl
mov
pop
sub
ret
fsts
ljmp
je
hlt
inc
pop
or
lret
push
xchg
mov
fistps
xor
fsts
shl
mov
dec
push
xor
mov
and
push
xor
les
xor
dec
xor
mov
mov
out
icebp
adc
push
xchg
sbb
sahf
je
cld
ss
add
sbb
sub
out
inc
insb
inc
push
mov
jno
rclb
jecxz
popa
jmpw
leave
and
adc
dec
orb
inc
pop
jno
push
rolb
xchg
push
push
daa
imul
mov
inc
out
popf
push
test
xchg
or
rorb
sbb
cmpsl
pop
mov
xor
mov
ret
cwtl
xchg
aad
sub
xor
aam
xchg
imul
addr16
fistps
pop
mov
ret
mov
and
mov
jge
or
inc
pop
movsl
insb
mov
xor
std
subl
in
aam
ds
xlat
push
pop
icebp
push
mov
dec
mov
mov
jae
shll
adc
dec
or
lock
sti
jl
xchg
adc
leave
jae
jnp
fcoml
popf
adc
xor
push
ret
push
mov
les
jge
leave
cmp
fdivrl
test
mov
stos
jg
mov
cmp
call
mov
test
es
popa
xchg
ja
xchg
ds
fcoms
imul
movsb
xchg
in
ret
ret
jg
xor
inc
sbb
push
push
pusha
cmc
std
and
out
fisttps
mov
movsl
push
cmp
insb
std
cs
jbe
cwtl
std
nop
lods
pop
push
adc
sub
mov
and
jae
cmp
jae
jns
mov
into
inc
xlat
pop
out
ret
repnz
out
inc
pop
cmp
mov
mov
lods
jle
push
in
and
sub
cmp
lret
dec
sub
xchg
aaa
sahf
sbb
inc
pop
call
aaa
lcall
test
rorb
add
jle
loopne
lds
das
lods
mov
cmpl
mov
jge
in
jnp
test
dec
and
test
mov
out
rorl
xchg
cmc
or
and
and
mov
mov
pop
mov
mov
xor
add
mov
pop
or
mov
pop
int3
pop
cmp
imul
lea
rep
and
rcrb
inc
fsts
dec
push
shll
dec
stos
insl
lret
jne
shll
lret
insb
sub
out
sbb
test
or
dec
loopne
mov
mov
add
pop
aaa
push
push
sarb
push
ljmp
lds
lret
mov
orb
pop
into
jb
cmc
loop
lods
fs
sub
icebp
add
add
pusha
add
out
fisubrl
or
fisttpll
jmp
jne
ljmp
and
pop
lods
mov
leave
mov
fimull
ror
mov
jb
jns
sub
or
jp
test
imul
movsl
hlt
and
pop
loop
sbb
notb
xchg
dec
jecxz
out
icebp
movsl
xor
xor
xchg
out
in
cld
mov
cmpsl
lahf
jno
cmp
and
insb
jae
push
stos
int3
movsl
jo
ja
sar
ds
push
adc
pop
cli
jg
inc
test
cmp
dec
xor
je
mov
push
sub
mov
mov
mov
sbb
cmpsb
test
lods
jp
push
jmp
mov
xorl
cmp
enter
sbb
roll
and
mov
enter
cmc
mov
mov
dec
pop
aaa
pushf
lock
cmpsl
out
enter
notb
mov
mov
push
daa
or
xor
nop
sbb
jae
fists
mov
sub
rcrl
test
enter
push
add
sbb
cmp
xor
in
sbb
xlat
push
sbb
xor
sete
xchg
mov
inc
insl
dec
pop
adc
and
cld
in
jbe
hlt
pop
ljmp
sub
mov
arpl
cmc
mov
scas
in
adc
sub
lret
mov
mov
dec
nop
xchg
scas
pushf
mov
xor
fisttpl
int
sahf
cmpsl
mov
cmpsb
inc
jmp
xchg
fwait
popf
scas
jge
push
stos
out
sti
pusha
hlt
lock
mov
popa
mov
es
in
xor
scas
xchg
test
lcall
daa
lret
cmp
inc
mov
xchg
jns
dec
rol
out
dec
call
push
or
add
mov
loop
adc
fistl
dec
popf
sbb
ds
out
pop
addr16
dec
mov
test
mov
test
inc
add
out
pop
scas
andb
fs
loope
roll
loope
or
lcall
push
xchg
cmp
push
sbb
cmp
pop
push
ja
jmp
push
lods
jl
push
leave
icebp
outsl
mov
jbe
notb
xorb
insb
jne
adc
aaa
sbb
xchg
cmp
and
inc
push
rolb
lock
sub
lahf
dec
out
cwtl
div
lret
pop
test
pop
popf
jg
inc
fistpll
or
imul
sub
enter
pop
mov
jb
inc
push
and
scas
movsl
sbb
in
ja
daa
dec
and
sub
cmp
data16
imul
aaa
sub
push
aaa
or
and
jge
jo
pop
repnz
jg,pt
pop
loope
pushl
inc
nop
int3
ja
inc
fmul
add
inc
and
adc
mov
dec
popf
std
ret
sub
jmp
mov
js
xchg
repnz
test
gs
xor
das
xor
mov
lcall
outsl
mov
xorl
stos
test
shll
in
cmp
push
repz
jmp
mov
clc
inc
dec
sub
imul
aad
pop
or
cmpsl
xchg
or
out
cld
add
ret
push
cmp
mov
mov
aad
and
mov
jb
scas
mov
dec
out
icebp
dec
int
adc
sub
outsl
lods
pop
in
test
cmp
movsl
cmp
mov
add
mov
xor
movsb
out
or
les
sub
xchg
push
lock
adc
push
std
mov
popf
jae
aas
out
mov
cmpsl
out
in
sbb
shrl
pop
mov
adc
fstps
jnp
data16
into
test
mov
clc
xlat
or
loope
inc
pusha
push
xor
push
sahf
cmp
add
mov
fnstenv
inc
es
mov
lock
roll
pop
int
in
rcll
dec
adc
int3
pop
hlt
sub
jge
pop
adc
add
out
lret
xor
shr
push
add
jg
sarb
js
lret
iret
jge
xchg
push
pop
shll
mul
push
sub
mov
outsb
inc
add
mov
fwait
push
cmp
adc
adc
dec
dec
push
es
xchg
cltd
dec
push
jbe
mov
shlb
xor
pop
cmp
aam
adc
dec
mov
cmp
mov
mov
add
dec
pop
sbb
scas
xchg
out
cmp
xchg
cmpsl
xor
mov
ss
mov
insb
inc
dec
mov
dec
xor
sub
gs
jnp
mov
cmp
adc
jnp
add
jo
inc
lret
sbb
call
pop
daa
js
push
dec
call
push
sub
cli
push
mov
popa
inc
pop
mov
sub
pop
negl
mov
xchg
pop
xchg
add
dec
insb
dec
sbb
in
jnp
sub
push
cmp
enter
repnz
jbe
mov
in
mov
and
inc
ja
inc
sbb
shl
xchg
jno
ret
jo
mov
dec
addr16
jp
xchg
js
stos
in
pop
xor
addr16
mov
call
cltd
out
inc
faddl
hlt
sub
int
mov
das
fimull
cmc
adc
mov
ret
push
fs
ror
inc
jo
adc
mov
int3
or
push
outsb
lahf
pop
add
adcb
sub
jno
or
lret
add
ja
in
outsl
lods
scas
adc
mov
sub
xor
xor
sub
rcll
loopne
xchg
mov
cs
sahf
inc
pop
inc
xchg
fists
dec
mov
mov
cs
arpl
xor
sub
and
sbb
adcl
cmpsb
xchg
in
jo
push
aas
hlt
xchg
aas
cs
negl
fnstenv
or
xchg
mov
stos
mov
outsb
xlat
test
iret
imul
jg
fistpll
hlt
mov
xchg
in
adc
jb
aas
cmp
inc
hlt
jecxz
jae
mov
stos
ss
jge
mov
ficoml
fisttpll
push
sti
loop
stos
lea
test
inc
aas
cmp
imul
push
mov
in
mov
jnp
ret
stc
dec
lcall
xchg
aaa
mov
in
sub
in
sbb
xchg
mov
frstor
outsl
clc
daa
xchg
cmpsb
push
gs
push
push
fdivl
sbb
mov
and
jle
push
je
ljmp
cltd
outsb
cmpsb
pop
sar
xchg
add
in
pushf
jnp
inc
mov
push
cmc
in
xchg
cmp
aaa
push
and
sahf
dec
lods
sbb
rorb
xchg
xorl
xchg
dec
scas
sbb
fistpll
fldt
leave
sub
in
dec
xor
mov
xchg
iret
insl
mov
mov
inc
call
push
xor
into
sbb
shl
pop
addl
jnp
xchg
rol
push
arpl
insl
pop
out
dec
icebp
sub
jno
cwtl
ds
jmp
sub
out
mull
scas
jge
js
mov
std
sub
aad
pop
inc
imul
mov
sub
sub
test
jo
xor
outsl
push
xchg
sahf
aad
rorl
push
xor
jbe
mov
sub
int
cmc
lret
inc
adc
jbe
enter
dec
mov
out
sub
lcall
inc
jns
pop
mov
cmpsl
andb
icebp
xchg
pop
mov
mov
add
inc
and
aad
pushf
sub
lock
jecxz
xchg
call
lods
daa
f2xm1
jmp
jmp
mov
adc
outsb
sub
inc
out
daa
or
push
sub
ss
and
pop
push
dec
xor
push
dec
add
dec
mov
out
movsl
pop
testb
ja
mov
mov
and
sbb
out
mov
jmp
cld
daa
and
push
add
cmp
or
popa
xchg
pop
pop
dec
push
or
ffreep
out
fcompl
jns
insl
add
daa
les
pop
subb
cmp
lock
sbb
and
mov
and
or
rcr
adc
mov
xchg
xor
mov
leave
mov
or
and
pushf
mul
xchg
pop
inc
mov
in
leave
jae
shlb
test
fstps
fdivrl
xor
cmp
addr16
pop
mov
adcb
js
loope
pop
bound
jp
xchg
and
cs
lds
push
cltd
xlat
push
pusha
cld
fst
pop
fisubl
icebp
mov
cmpsl
ljmp
in
divl
adc
jmp
jl
stc
ds
cli
adc
outsb
test
jp
pop
xchg
inc
int3
add
push
push
mov
rcll
sub
adc
pop
jp
aaa
jbe
xchg
imul
mov
push
pop
jp
adc
ret
or
dec
ds
jbe
test
es
in
std
mov
pop
sub
xchg
cmp
loop
imul
adc
ja
rorl
xor
xchg
xor
mov
pop
int
inc
addr16
pop
pop
push
dec
adc
aas
popf
xor
into
sub
aas
dec
fwait
pop
addb
shl
adc
aam
fisubs
adc
insb
xor
pop
cmpb
shrl
inc
and
loopne
pop
xorb
adc
repnz
in
jb
lret
pop
xchg
mov
lock
inc
scas
das
inc
dec
js
push
xchg
fsubs
out
dec
fs
or
aaa
push
add
in
movsl
iret
hlt
sub
je
cwtl
stos
pop
pushf
lret
mov
cmp
adcb
lods
outsb
ficoml
and
sbb
pusha
sub
inc
sahf
roll
jge
mov
jmp
and
pop
aaa
sub
mov
mov
xchg
mov
xchg
aas
stos
jnp
jecxz
mov
add
push
out
insl
mov
sub
outsl
andb
lods
rclb
fsubs
outsl
sahf
hlt
movsb
testl
fisubs
and
outsb
lret
mov
mov
add
shrl
mov
and
movsb
out
pop
sub
movsl
arpl
mov
mov
and
addr16
or
int3
cmp
xor
jmp
out
iret
jb
pop
lods
mov
mov
cmpsb
clc
test
std
arpl
mov
mov
xlat
xor
ret
in
je
xchg
lcall
inc
mov
imul
test
xor
mov
aad
sub
cmp
mov
fdivl
mov
mov
cli
daa
in
jg
push
push
sar
or
iret
xchg
mov
mov
xchg
cltd
push
imul
aaa
out
std
movsl
adc
mov
dec
mov
call
pop
adc
addr16
stos
je
jmp
xor
mov
push
xorb
jne
stc
dec
dec
xchg
xchg
xor
xor
pop
cltd
popf
push
lods
sub
outsb
inc
sbb
jne
ret
jle
lahf
push
fmull
iret
jecxz
hlt
cwtl
pop
pop
ret
mov
pop
insl
call
sbb
sub
add
iret
sbb
adc
dec
sahf
adc
push
mov
out
mov
push
rorb
adc
sub
aaa
fbld
mov
sub
xchg
mov
inc
repz
mov
mov
sbb
inc
jp
cltd
mov
jmp
into
sti
pop
xor
mov
clc
sbb
add
sbb
and
jle
cwtl
sub
xchg
push
pop
push
jp
sbb
jl
inc
push
mov
iret
or
cmp
movsl
ss
and
xchg
lea
pop
mov
data16
ss
into
mov
xchg
test
add
jbe
add
or
push
roll
sub
jae
or
xchg
and
pop
jmp
roll
daa
cld
mov
mov
pop
leave
pop
loope,pt
negb
inc
rcl
nop
ljmp
xchg
cwtl
push
out
cmp
mov
push
pusha
push
xor
call
fstpl
icebp
nop
cmp
push
js
mov
mov
loopne
das
in
and
sbb
ficoms
hlt
or
pop
dec
jp
push
and
jae
push
shlb
std
cltd
mov
cld
xchg
dec
jo
into
inc
jbe
mov
pusha
mov
dec
and
mov
icebp
mov
xor
lods
bound
add
sbb
stc
data16
imul
mov
xor
arpl
dec
popf
inc
pop
mov
dec
or
cmp
inc
add
rorb
andl
cmp
xchg
mov
popf
mov
cmc
flds
aas
jge
push
gs
es
fsubr
fsts
mov
pop
fdivrs
lea
sti
jae
rclb
aad
daa
shrb
loopne
mov
imul
jmp
insl
lods
sub
dec
cld
faddl
push
mov
dec
lret
cmp
ret
lahf
jno
les
loop
xchg
loop
cwtl
mov
push
inc
dec
int3
jmp
or
testb
iret
pop
cmp
lock
shlb
xchg
imul
adc
inc
rclb
cld
arpl
lcall
inc
cltd
pop
int
insl
push
mov
aad
scas
outsl
mov
xor
adc
sbb
xchg
xlat
add
dec
pop
add
subl
cmp
addr16
fdivrs
and
sbbl
fdivrs
loope
imul
loopne
or
js
adc
loopne
call
inc
cmp
sub
push
jb
mov
jg
mov
xchg
out
add
stc
xor
in
sbb
mov
and
xor
xchg
dec
or
gs
scas
mov
repnz
scas
cmp
inc
and
adcb
addr16
xchg
enter
or
sbb
sub
push
dec
dec
dec
mov
imul
xchg
in
cmp
lods
imul
mov
dec
add
mov
and
jae
push
jecxz
lock
xchg
mov
xrelease
jp
mov
push
stos
aaa
jge
es
sub
loop
popa
ret
cmpsl
jecxz
jnp
icebp
jg
mov
in
mov
addb
push
ss
or
fidivs
jno
dec
call
mov
xchg
pop
add
cmp
xor
pop
mov
jle
in
add
push
movsl
into
repz
lret
mov
popf
and
push
mov
dec
and
pop
divl
inc
sbb
xor
je
jl
aas
inc
int3
xor
push
jmp
enter
jb
mov
adc
mov
fiaddl
xchg
lret
dec
fadd
add
xchg
pop
iret
test
xorb
ljmp
sti
ret
push
push
jmp
cwtl
popf
inc
scas
jmp
push
mov
adc
cmp
and
adc
mov
mov
jbe
cmpsb
jbe
cmp
xchg
mov
test
insb
outsl
xor
pop
shlb
cmp
fadds
jle
xchg
xchg
fisubs
mov
dec
lcall
mov
mov
mov
push
sbb
gs
imul
xchg
sbb
add
inc
int3
loopne
lret
pop
insl
popa
loopne
stos
mov
inc
mov
cmp
jmp
shl
sub
es
insb
add
or
movsb
loop
and
aad
call
loop
pusha
sub
jle
sbb
dec
inc
cmpsl
call
jp
inc
mov
pusha
lahf
or
and
sub
pop
inc
jecxz
mov
mov
cmp
cltd
popa
insl
roll
lods
push
movsl
add
adc
fsubrl
jp
push
mov
pop
bound
xlat
test
fsubs
and
icebp
enter
les
outsl
fidivs
push
fstpt
ja
jl
adc
mov
xlat
mov
xchg
ret
insl
pop
arpl
inc
addr16
xor
fwait
repnz
sub
inc
mov
xchg
mov
loope
lret
das
ss
lods
mov
and
xlat
xchg
clc
cmp
roll
lcall
mov
js
addl
and
lret
ljmp
rolb
push
pusha
cmp
out
push
xchg
mov
cmp
add
inc
loop
mov
xor
lret
ja
test
add
pop
mov
xchg
fwait
inc
scas
add
add
rcrb
es
sub
nop
sbb
push
xor
and
fldt
xlat
sbb
das
sub
push
rol
test
xchg
repnz
mov
dec
in
sub
xchg
clc
icebp
ffree
loopne
fs
fiaddl
jno
mov
addr16
xchg
in
inc
xor
stos
mov
jno
movsl
mov
inc
sbb
cmpl
push
adc
movsl
aas
xlat
mulb
jg
int3
std
mov
repnz
arpl
and
aad
sub
cmp
cmc
push
insl
mov
inc
push
daa
sahf
in
sbb
inc
shll
and
sbb
andl
jmp
jle
mov
or
push
shlb
jne
push
xchg
ret
lds
lock
ds
sbbl
roll
clc
mov
in
push
add
movsb
mov
pop
lahf
or
or
mov
ss
sub
js
fisubrl
lods
popa
rorl
pushf
dec
int3
sbb
mov
add
daa
mov
jns
adc
std
repnz
out
push
jecxz
pusha
mov
nop
add
sbbl
sbb
rclb
das
rclb
cmpsl
dec
jbe
call
adc
add
rcl
xchg
fldenv
xchg
stos
fbld
test
ds
insl
push
sub
xchg
jne
inc
jp
mov
aad
aam
idivb
mov
add
adc
inc
xor
pop
pop
dec
test
pop
cli
jo
push
in
push
subb
testl
lahf
into
xor
dec
in
out
jo
call
xor
daa
or
pop
xchg
pop
sbb
pop
js
enter
sbb
enter
push
push
lret
add
jg
jl
pop
xchg
pop
pop
sbb
inc
jecxz
jg
mov
jbe
scas
jnp
jecxz
test
movsb
xchg
imul
jecxz
add
cmp
out
in
outsl
mov
je
dec
outsb
jmp
sahf
call
pop
out
xchg
fstl
push
cmp
ss
imul
jns
repnz
mov
xor
mov
push
cmp
mov
mov
mov
cmp
mov
sub
cld
scas
dec
sti
jbe
mov
xchg
sbb
jno
cltd
jbe
xor
ja
mov
sbb
push
xor
repnz
das
mov
sub
sbb
in
inc
ja
inc
dec
mov
mov
ljmp
aas
in
outsl
pop
pop
jns
cmp
mov
sub
cmpsb
sub
inc
or
ljmp
out
idiv
test
push
loopne
inc
lcall
jb
pop
pop
and
xchg
sbb
cmpsl
add
sub
cld
jae
pop
into
mov
jmp
lock
inc
mov
cmp
push
mov
push
mov
dec
add
sub
inc
push
push
test
xchg
mov
inc
jmp
xchg
insb
je
adc
xor
pop
add
mov
jne
in
push
pop
dec
outsb
cs
sub
in
mov
pop
mov
pop
jmp
aam
xchg
pop
cmp
mov
psrlw
pop
inc
push
inc
and
popa
loopne
in
cmc
jmp
mov
and
dec
sub
jg
orl
push
pop
cmp
jae
lret
testl
push
mov
mov
or
push
imul
mov
xchg
stc
enter
adc
jne
push
and
movsl
cmp
and
dec
sbb
dec
bound
mov
test
dec
xor
fsts
out
aad
and
xorb
flds
jmp
fsubrp
pushf
jo
lds
icebp
das
mov
pop
inc
pop
data16
popf
test
xchg
lcall
fs
xchg
in
nop
mov
adc
in
aaa
repnz
lahf
outsb
mov
aam
scas
sub
and
pop
mov
outsb
bts
mov
stos
cmpsb
subb
cmpsl
sahf
mov
adc
push
add
mov
inc
jo
pop
adc
stc
je
adc
adc
loop
xchg
jno
push
aad
and
int3
jmp
dec
aaa
pop
movsl
xor
fdivrl
test
hlt
pushf
lcall
sbb
nop
dec
add
xor
ret
outsb
pop
or
mov
pop
mov
mov
mov
cltd
sti
sub
sbb
scas
xchg
lret
mov
push
add
pop
arpl
mov
lahf
hlt
or
cmpb
movswl
jmp
inc
daa
imul
pop
jnp
inc
push
sub
push
lcall
mov
cmpsb
pop
pushf
and
roll
xchg
into
inc
mov
inc
add
push
pop
out
testb
jns
jno
or
pop
out
inc
push
jp
inc
adc
xchg
sbb
pusha
mov
cmp
int
lcall
mov
cmp
mov
or
inc
or
je
icebp
mov
popf
and
fwait
xor
push
add
pop
adc
mov
imul
sbb
fidivl
mov
daa
xchg
std
popf
les
or
xor
fdivl
adc
add
xor
popf
fs
pop
loop
stc
arpl
scas
data16
mov
dec
lods
push
negb
and
sub
insl
ja
or
add
decb
mov
mov
repnz
mov
syscall
pop
icebp
cmp
imulb
sub
and
leave
leave
mov
add
test
xor
popa
mov
dec
nop
loopne
dec
test
jmp
ret
xor
xlat
aaa
cmp
fisubrs
push
mov
pop
outsb
cmpsl
xor
pop
out
xchg
push
test
xchg
aas
mov
xor
cld
fcmovu
xlat
mov
jmp
call
test
jnp
nop
in
shlb
in
sub
sbb
adc
out
jno
ffree
lahf
mov
leave
je
mov
pop
jge
dec
ljmp
fcompl
inc
orl
imul
dec
loope
mov
ja
shll
sub
fnstsw
pop
xor
or
add
orb
cltd
and
sbbl
cwtl
incl
mov
adc
mov
cmpl
mov
imul
leave
push
test
pop
jnp
es
shll
in
add
rolb
mov
lret
lods
testl
into
jg
cmpsb
sub
mov
sub
inc
dec
hlt
dec
mov
pop
data16
mov
push
add
and
call
repz
std
arpl
test
ret
stos
jns
mov
sub
inc
lcall
ja
xchg
sahf
lcall
xchg
add
push
cs
push
test
mov
mov
cmpsb
pop
xchg
out
es
add
mov
xchg
lahf
scas
sbb
gs
cmp
xchg
lcall
sbb
sti
roll
flds
jp
fistl
cwtl
dec
sub
ret
pop
push
or
cmp
add
mov
mov
push
add
dec
int
out
mov
movsb
lret
addr16
leave
ds
dec
sahf
pop
mul
push
adc
adc
push
jmp
pop
add
and
push
shrl
les
or
or
sub
mov
lods
mov
mov
cld
mov
mov
aad
cli
ss
cli
rorb
cs
jp
inc
daa
add
in
inc
adc
in
shrb
and
pop
out
lahf
push
insb
push
jnp
mov
cmp
dec
outsb
sub
mov
xchg
and
test
lcall
xor
mov
and
loope
sbb
add
push
std
cmpsb
mov
popa
push
jae
out
or
cmpsb
dec
xor
mov
sti
iret
dec
pop
and
or
out
mov
or
bts
inc
lds
dec
shr
sub
clc
bound
mov
mov
mov
jmp
xchg
shl
adc
or
ret
push
pusha
mov
add
int
cmpsb
repnz
pop
mov
cmp
push
bound
cmovae
outsb
or
jo
pushf
jmp
aaa
dec
or
jmp
add
xorl
roll
ret
aaa
in
push
mov
insl
and
dec
int
jge
push
sub
loop
in
pop
add
sub
inc
stos
addr16
ljmp
mov
lea
es
sbb
cmp
iret
inc
movsb
mov
pushf
das
cmp
js
mov
push
sti
mov
xchg
enter
mov
cmc
mov
sbb
fcomps
add
push
popf
gs
ret
sbb
and
mov
or
movb
inc
cmpb
popa
pop
and
mov
pop
jge
and
mov
ja
xor
adc
push
das
dec
xchg
scas
inc
inc
mov
dec
aam
sbb
xor
imul
es
testl
lock
daa
or
jno
shlb
xor
sub
icebp
xlat
out
pop
pop
mov
inc
in
mov
clc
mov
xchg
mov
or
cmp
pop
mov
cmp
roll
hlt
mov
mov
loop
sahf
loop
mov
cmp
imul
loop
sub
sbb
mov
jo
mov
xchg
dec
inc
cmp
in
inc
push
repnz
inc
xor
push
jge
mov
call
scas
imul
sbb
and
cmp
fsubrs
cmp
pop
andl
xchg
insb
push
gs
mov
gs
jns
mov
jnp
aam
movsl
add
xchg
dec
imulb
testl
mov
cmp
fdivp
gs
sti
bound
push
dec
mov
fdivs
dec
push
push
pop
push
sub
fistl
popf
mov
jno
xorl
jnp
xchg
dec
jbe
scas
mov
fdivrs
or
in
icebp
lahf
or
or
push
fsubl
jne
data16
lock
and
movsl
xorb
scas
out
jb
in
sub
scas
inc
xchg
inc
ds
inc
sbb
cltd
ds
dec
lock
rcrl
hlt
icebp
shlb
adc
lcall
gs
aam
lods
adc
pusha
jnp
inc
aas
scas
cmp
scas
stos
fisubs
push
sub
call
hlt
adc
stos
and
jae
add
inc
jnp
mov
dec
push
xchg
xor
out
add
add
gs
mov
sub
xchg
mov
das
rcrb
pusha
mov
jp
fnstenv
cwtl
inc
jmp
negb
push
xor
sti
jae
enter
ja
aaa
mov
adc
ficoml
testb
xor
arpl
jecxz
dec
cld
pop
cmpb
jmp
mov
xor
xchg
adc
or
inc
mov
inc
inc
out
jno
fcmovnu
inc
add
clc
jnp
sbb
loop
iret
aam
pop
mov
xor
rcrb
in
aad
insl
dec
sbb
mov
lcall
test
jg
push
pop
cmp
es
pushf
sub
arpl
or
icebp
dec
sbbl
fldenv
ss
sbb
fnstsw
out
pop
popa
ds
mov
and
add
repnz
sbb
dec
arpl
sbb
mov
push
add
notl
sub
xchg
mov
rcrl
cmc
movsb
dec
test
in
pop
shrb
mov
insb
push
decl
fsubl
incb
stc
sbbb
cltd
add
add
lcallw
inc
hlt
mov
imul
cmp
mov
mov
lret
push
and
lahf
adc
loope
fstl
orb
or
cmp
lea
mov
fdivrp
hlt
inc
in
mov
mov
sub
jge
sbb
or
push
inc
and
addl
ss
mov
xchg
adc
mov
inc
pushf
xchg
push
hlt
push
mov
stos
cltd
xor
adc
and
loope
xchg
fcoml
dec
pop
fcomp
jb
xlat
mov
fcoml
push
jno
fwait
or
imul
imul
sub
cli
and
add
xlat
shrb
ficompl
imul
rcr
fisttpll
mov
push
or
imul
jecxz
sbb
mov
mov
icebp
dec
mov
std
out
or
arpl
addr16
pop
ljmp
xor
mov
pop
testl
testb
pop
xor
repnz
xor
pop
insb
in
fstpt
push
sub
and
mov
lods
sub
xlat
and
or
test
lret
lahf
xchg
push
cmpsb
sbb
jecxz
popf
pusha
insb
loopne
jmp
int
les
mov
imulb
cmp
call
sub
sbbw
and
xchg
icebp
and
xchg
xchg
les
leave
lds
into
mov
stos
fisttpl
xchg
out
fdivrl
jle
push
imul
xor
in
mov
cmp
scas
cld
pop
cmpsb
dec
fildl
dec
cmp
pop
jmp
cld
call
aas
sub
cmp
push
das
sbb
lods
pop
cmp
mov
mov
pop
mov
sbb
jns
jbe
fs
dec
mov
dec
mov
dec
dec
gs
dec
and
in
pop
ret
inc
dec
xor
rclb
imul
stc
jae
pop
jge
lods
fsubrl
sub
cmp
dec
ret
xor
push
dec
jbe
mov
xchg
int3
std
jp
scas
lds
movsb
ss
nop
in
mov
mov
rclb
jae
add
pop
clc
bswap
outsb
jmp
push
add
xchg
aas
mov
imulb
int3
xchg
xchg
xchg
pushf
and
ret
bnd
or
dec
xchg
rol
jns
es
lahf
adc
sub
cmp
into
jns
idivl
xchg
mov
cmp
fstpt
sub
shl
mov
sub
out
fcompl
insb
pop
adc
cmp
jle
xchg
and
or
int
scas
jnp
add
cwtl
idivb
flds
dec
mov
sub
push
sbb
or
fdivr
cwtl
iret
les
jg
addr16
clc
movsb
and
mov
mov
loopne
or
sub
cmc
cmpsb
sahf
cmc
xchg
dec
incl
lahf
movsb
pop
adc
sahf
in
inc
repz
xor
adc
lds
mov
aad
rolb
pop
jl
lock
inc
int3
mov
sub
stos
xchg
shll
push
push
sbb
lret
xlat
sti
pusha
pop
test
push
add
sub
imul
ret
cli
and
jmp
rol
insl
adc
sub
flds
sti
and
insb
mov
nop
xchg
data16
sub
sub
imul
mov
xlat
sub
mov
mov
fwait
xchg
cmp
nop
mov
pop
jle
fs
mov
and
icebp
icebp
jecxz
les
push
inc
jno,pt
daa
mov
xchg
pop
nop
cmp
and
ja
sub
popf
out
mov
pop
adcb
subb
in
pop
hlt
xchg
mov
lds
push
cmp
out
push
xchg
lret
mov
jp
cmp
addr16
cld
push
cli
pop
fistpl
enter
sub
rcrb
stos
mov
pop
xor
test
repnz
add
sbb
repnz
sarb
leave
push
dec
mov
mov
out
push
into
pop
mov
pop
xchg
xor
mov
ja
add
mov
and
nop
or
jnp
iret
cmp
xor
scas
shrl
dec
pop
lret
and
syscall
aas
popa
ret
pop
add
add
addr16
ret
fwait
enter
cmp
loope
or
stos
push
outsb
cmc
mov
inc
shrb
iret
xor
ds
cmp
add
lods
rorb
repnz
jno
movsb
es
mov
mov
push
icebp
imul
push
dec
xor
mov
xor
push
fnsave
adc
xor
pop
cmpsb
into
shl
arpl
aam
arpl
pop
punpckhwd
xchg
mov
inc
loope
fucomi
popf
or
jle
test
xorl
push
mov
or
inc
fwait
arpl
jbe
lock
bound
xor
push
ds
cmpsl
cmc
stos
sub
push
pop
mov
xor
movsl
lods
or
pop
cmp
add
clc
pop
pop
mov
mov
out
sub
out
fildl
xchg
jl
push
or
cmp
sbb
or
js
test
push
fisttpll
sbbb
fistl
cmc
dec
jmp
mov
hlt
pop
testb
mov
add
nop
cmp
xchg
iret
push
or
xor
inc
cli
loope
fwait
dec
xlat
lea
loop
xchg
hlt
gs
sbb
push
inc
shl
xchg
jns
pushf
mulb
push
mov
jne
jb
jnp
mov
lahf
jg
ja
jg
adc
and
cmpl
std
lods
pop
mov
mov
mov
out
bound
loope
add
dec
roll
push
sub
sub
cmp
xor
or
rclb
cmp
cld
jle
cmp
cli
pop
loopne
dec
sti
aad
stc
inc
push
aam
dec
in
push
scas
lds
test
xor
mov
aaa
pop
insl
bound
xchg
testb
cmpsl
mov
jl
lret
imul
xor
dec
fildll
repnz
pop
mov
pshufw
xor
jmp
pop
filds
andb
insl
mov
loop
scas
cmpsb
jne
dec
int3
mov
dec
in
arpl
jns
cmp
rorl
mov
pop
repnz
adc
pop
in
mov
ds
ljmp
pop
inc
ljmp
sahf
dec
fiadds
lahf
ljmp
ficompl
pop
nop
inc
popa
sub
in
xor
pop
mov
outsl
mov
pop
das
add
lahf
addr16
gs
push
fisubrl
mov
xchg
xchg
jns
negl
iret
aam
loop
insl
pop
rorb
sbb
adc
and
stos
mov
push
outsl
jnp
jle
pop
gs
int3
push
xchg
insb
inc
dec
fxch
outsl
pop
fidivrl
ljmp
rorl
mov
cwtl
jge
lahf
andl
adc
divl
cmp
mov
add
and
insb
mov
cltd
or
roll
pop
div
lahf
das
js
imulb
dec
sbb
repnz
imul
jae
xchg
aaa
pop
pushf
pop
xchg
xchg
bound
add
inc
push
xor
pop
xchg
movl
ljmp
jge
dec
in
movsl
lods
and
mov
movsb
movsb
nop
push
jns
std
test
enter
call
movsb
push
addr16
adc
enter
xor
out
aam
movsl
jl
mov
je
cmpsb
mov
fs
repz
jnp
std
or
loopne
mov
lock
pop
add
cmpsb
push
sarl
mov
push
cmp
or
scas
stos
xor
jp
adc
cmp
movsl
and
lcall
xchg
mov
push
insl
lea
cmpsl
pop
sarl
lods
jns
mov
clc
mov
daa
insb
add
adc
aad
and
stc
cmp
mov
or
daa
imul
xor
pop
cs
ja
sbb
push
sbb
hlt
pop
test
push
int3
dec
or
adc
mov
xor
adc
rorb
xor
push
inc
cmp
jl
xchg
xchg
mov
shrl
pushf
add
insb
mov
or
jp
and
das
mov
push
addb
cmp
lahf
mov
mov
lret
insl
daa
or
in
adc
cmp
or
pop
stos
or
cmpl
popf
jmp
test
pop
adc
mov
sbb
mov
cmp
jo
cli
inc
xchg
outsb
stos
push
xor
pop
lods
lcall
popa
jo
adc
adc
xor
arpl
stos
in
jbe
repnz
and
cmp
push
xchg
xlat
sbb
ljmp
bnd
and
jmp
inc
lock
inc
mov
push
adc
loopne
ja
sbb
movsb
iret
or
idivb
sub
dec
jne
out
pusha
adc
pop
out
jnp
jmp
mov
sahf
or
je
icebp
clc
xor
sub
jge
scas
jp
popf
fcoml
push
cmpsb
nop
cli
add
fs
pushf
fcom
lahf
xchg
jmp
xchg
xor
cwtl
fwait
cmp
xchg
int
push
mov
jp
sbb
cmp
cld
shlb
mov
xor
ja
into
mov
aam
popa
gs
jecxz
push
dec
icebp
and
aas
dec
loop
insb
insl
je
adc
mov
shrb
push
movsb
outsb
je
jne
dec
frstor
sbb
pusha
cmp
ret
or
or
sbb
pop
or
hlt
daa
xchg
jle
push
sbb
add
push
add
into
mov
les
rorb
or
leave
xchg
fldcw
scas
push
cmp
dec
jo
mov
in
pushl
enter
pusha
cmp
mov
pusha
mov
loopne
pop
fwait
add
adc
addr16
or
inc
daa
cltd
aas
lds
repz
ficompl
lods
push
ds
sbb
jo
jecxz
mov
cmp
pop
mov
fidivl
jo
test
addr16
push
inc
imul
jmp
pop
pop
sub
fwait
jle
jg
icebp
jae
popa
sahf
std
pushf
add
pop
mov
scas
pop
fs
ja
out
in
js
pusha
pop
outsb
dec
iret
aam
push
lret
lods
push
jp
ljmp
mov
pop
sbb
loop
icebp
jb
inc
or
dec
sbb
sub
test
out
iret
mov
jne
jle
shll
and
movsb
mov
xlat
pop
push
mov
dec
pushf
dec
mov
adc
sarb
jno
mov
mov
loopne
xor
xchg
sub
xor
int
xor
or
lock
aam
mov
dec
inc
push
mov
mov
out
xor
xor
es
pop
sbb
cmp
mov
jle
sti
mov
aaa
jmp
cmc
adc
stos
pop
imul
loope
xor
in
out
iret
add
sub
dec
notl
rclb
jmp
std
pop
inc
dec
push
test
mov
shl
lret
fcoml
push
int
repnz
stc
iret
gs
mov
mov
icebp
xor
xor
lret
mov
adc
andb
xor
hlt
cmp
mov
mov
or
fstl
or
push
mov
jmp
pop
movb
fstpl
mov
stos
iret
or
ljmp
mov
mov
fwait
jle
sahf
insb
sub
imul
jmp
in
add
xchg
pop
call
jno
jmp
pop
fs
fidivrl
loop
xchg
test
stos
inc
mov
mov
movsb
dec
icebp
je
sbb
cs
subb
sbb
pop
mov
xlat
test
xchg
lods
or
lahf
and
push
pop
mov
loope
add
sbb
mov
in
mov
imul
dec
pop
lahf
stc
cmp
ss
jne
cmc
loop
ss
loopne
outsb
aas
xchg
outsb
outsb
ret
lods
mov
mov
bound
testb
pop
cmpb
cmp
and
xlat
int
cmp
dec
sbb
lahf
in
jno
addl
in
xchg
pop
dec
shll
dec
loope
addr16
dec
pop
enter
das
in
or
jecxz
push
jbe
xor
cmpsb
arpl
fldcw
cmp
mov
xor
inc
lods
out
xchg
dec
sub
add
pop
add
jns
dec
cs
mov
sti
mov
jae
out
xchg
ja
in
fwait
mov
insb
jns
pop
mov
sub
jmp
cld
int
cwtl
and
mov
inc
mov
aaa
mov
shrb
hlt
push
jg
data16
divb
ja
inc
stc
mov
movsb
push
xchg
shlb
popf
cmp
mov
dec
or
push
xchg
dec
xlat
shrl
fbld
mov
dec
fbstp
nop
rcrb
pop
jns
dec
inc
xchg
ljmp
dec
cmc
push
popf
mov
push
pop
or
or
in
push
les
mov
mov
push
lret
jecxz
iret
jns
push
dec
clc
mov
outsb
out
cltd
jmp
pop
add
adc
sub
ret
xlat
add
lahf
in
mov
bound
in
imul
jns
dec
gs
fcmovu
mov
and
mov
bound
stc
xchg
aas
lds
lods
xchg
shll
jp
out
lret
or
out
push
into
mov
pop
stos
pop
jge
push
outsb
imul
lcall
push
cmp
lds
andl
shll
mov
loopne
movntq
out
or
lock
gs
jbe
inc
int3
push
in
clc
int3
mov
push
xor
addr16
nop
jl
and
mov
imul
adc
bound
pop
pop
in
mov
aad
imul
lret
outsb
imul
aad
aam
mov
sbb
decl
fisubrl
xchg
push
cld
rolb
lret
mov
adc
push
sar
dec
lock
inc
pop
mov
and
mov
mov
popl
das
mov
fstps
and
stos
ret
sub
and
aaa
fabs
push
lahf
fadd
mov
aad
or
sarb
and
xchg
lret
test
dec
xchg
push
mov
scas
mov
aaa
inc
aaa
sub
xchg
mov
push
push
lret
adc
imul
cmp
pop
jle
shll
out
sbb
mov
inc
fidivrs
mov
in
sbb
popl
pop
jecxz
cltd
stos
xchg
dec
les
scas
inc
sbb
and
or
lods
pop
aad
and
lcall
sbb
in
stos
out
movsb
mov
mov
hlt
ja
xchg
ficomps
cmp
mov
push
jg
inc
mov
mov
cmp
and
cmc
pop
fcmovnbe
or
cmpsb
cltd
xchg
test
loop
test
add
stc
add
and
loop
leave
gs
mov
push
repz
adcl
mov
jl
pop
ljmp
lcall
push
xor
cmp
mov
js
xchg
insb
xor
cs
xchg
lret
rcl
and
icebp
fsubrp
xor
repz
jge
push
sub
lock
mov
aam
cmp
mov
push
ljmp
add
clc
push
fsubr
jne
or
sbb
jl
mov
xchg
cmp
xor
aad
insl
inc
addr16
xchg
add
aaa
loopne
and
pop
mov
inc
cmpsb
adc
dec
lea
adc
or
xchg
mov
mov
mov
stc
js
data16
shl
arpl
stos
xchg
cmpsl
out
mov
pusha
shl
mov
dec
adc
das
inc
js
arpl
inc
jle
iret
es
pop
fsts
mov
pushl
xlat
sub
mov
orl
ror
pop
mov
jae
pop
fstpl
je
clc
and
adc
pop
push
out
adc
popa
stos
or
in
and
push
out
sarl
insb
pop
sti
pop
vmread
dec
loope
hlt
mov
add
insb
movsb
push
adc
push
pop
push
add
mov
rclb
lods
rcrl
dec
aaa
or
push
push
xchg
pop
clc
or
pusha
lods
sar
sbbl
imul
enter
cmp
lahf
clc
mov
aas
sbb
pop
push
loopne
jb
mov
sub
lret
lock
adc
sub
jbe
push
dec
inc
mov
std
pop
push
jmp
xchg
out
push
mov
pop
xor
jae
arpl
xchg
lods
push
lahf
pop
aas
xor
jbe
ret
dec
push
test
mov
jecxz
decb
jno
dec
xchg
outsl
movsb
pop
stc
in
add
sbb
jl
in
mov
cmp
mov
adc
push
fld
insb
jns
shl
push
je
pusha
inc
push
cwtl
pop
pop
add
lea
xor
and
mov
inc
enter
push
int3
out
push
xchg
sub
insl
jp
mov
mov
ss
jo
insb
in
or
push
mov
jle
arpl
xchg
ret
popa
cmp
or
dec
or
adc
mov
or
jg
cmp
push
ds
or
push
push
inc
push
jne
cmpsl
add
arpl
xlat
imul
cmp
loop
lds
add
cmp
ds
repz
movsl
insb
in
je
hlt
les
sbb
pop
add
push
cmc
or
aas
pop
xor
or
test
repz
mov
mov
mov
ljmp
adc
stos
repz
add
sub
inc
in
cli
adc
mov
loope
sub
outsb
mov
inc
dec
pop
jo
xor
icebp
sbb
in
cmp
fsubr
cs
lret
cmpsl
test
push
jnp
je
adcl
pop
jge
dec
or
or
sub
movsl
lcall
jl
pop
jmp
cmp
call
adc
dec
pop
fs
inc
dec
ljmp
lock
shl
nop
sbb
dec
inc
sti
fcompl
stos
sub
mov
and
pop
scas
shlb
fcmovbe
cld
inc
xchg
les
imul
dec
xor
aam
push
push
movsb
mov
aaa
or
push
loope
pop
scas
xchg
dec
call
ror
dec
js
add
add
pop
push
xor
xor
sub
fsubl
repnz
insb
xor
daa
mov
add
pop
pop
pop
add
cltd
insl
hlt
xor
cmc
mov
dec
sbb
out
mov
cmp
ret
sbb
and
jne
inc
pop
aaa
pop
pop
std
inc
ds
clc
ret
mov
mov
push
push
das
divb
inc
dec
xchg
add
or
pop
jle
add
xor
jmp
fbld
add
mov
and
fs
aam
pop
shr
mov
sbb
adc
call
xor
rol
bound
test
sbb
xchg
adcb
push
cmove
cmpsb
adc
loopne
jl
sbb
adc
jmp
mov
addr16
add
scas
adc
fbld
in
int3
lahf
sub
xor
test
inc
gs
mov
int
xchg
sbb
lods
insl
inc
loope
in
lret
push
popf
data16
fs
mov
pop
or
aam
sub
in
daa
add
outsb
pop
mov
dec
mov
lahf
jle
lock
xchg
or
test
mov
outsl
mov
clc
mov
leave
add
enter
rorl
fcoml
aas
push
out
mov
clc
pop
cmc
sar
jno
sahf
imul
push
icebp
std
roll
sub
mov
push
insb
push
mov
in
stc
test
add
pcmpgtb
mov
jge
xchg
les
jno
inc
dec
mov
mov
out
aaa
sub
pop
test
sub
aad
push
mov
outsl
shll
mov
add
loop
imul
push
sbb
out
lods
mov
push
push
mov
popa
mov
cli
inc
cmp
in
push
subl
sub
mov
pop
and
dec
sbb
aaa
adc
aas
mov
das
test
in
mov
outsl
sti
mov
sbb
jmp
fldenv
and
out
lock
mov
mov
mov
add
mov
popf
xchg
xchg
jne
jecxz
jp
add
xlat
dec
xorl
and
and
jns
mov
out
ds
sbb
xor
xend
rcll
mov
ja
das
mov
sub
push
mov
inc
lret
pop
xor
push
out
idivl
mov
call
add
test
jecxz
mov
stc
rorb
lcall
cmc
lods
push
cmpsb
xchg
testl
pop
pop
xchg
push
fwait
repnz
mov
push
jl
iret
lret
jmp
sbb
sbb
pop
cmp
jbe
arpl
mov
ljmp
xlat
xor
lods
mov
int3
and
std
out
push
sbb
in
pop
cld
testl
mov
push
push
jle
testb
push
out
imul
gs
pop
repnz
arpl
ret
arpl
sbb
pusha
mov
xor
add
orb
sbb
add
cltd
cmp
sub
pop
jecxz
mov
push
xorb
mov
jecxz
xchg
stc
mov
addb
aad
sbb
cs
fistpl
xor
pop
push
inc
pop
lret
mov
mov
add
in
push
leave
movl
jge
data16
inc
cs
add
mov
mov
push
mov
mov
out
pop
sbb
sbb
stos
lea
mov
and
push
add
movsl
cmp
jle
mov
idivb
rcll
sub
inc
mov
mov
adc
arpl
push
movsb
mov
daa
pusha
imul
mov
fs
inc
add
push
fisttpll
cmp
aaa
push
lret
cld
push
and
lock
mov
lret
mov
lods
imul
fistl
call
lds
cmp
subb
mov
icebp
jp
sbb
lcall
and
dec
popa
push
pushf
mov
repz
fcmovb
dec
outsl
stc
js
jb
pop
enter
jp,pt
and
enter
dec
jb
pop
adc
jge
dec
push
add
ret
out
and
adc
movsl
push
ret
mov
mov
inc
fisubs
or
mov
xchg
fcompl
mov
clc
cmp
mov
out
mov
sti
shr
xor
sbb
add
xchg
cmp
lods
test
pusha
popf
pop
add
xchg
xor
mov
add
fisttpl
into
mov
arpl
dec
jmp
xchg
adc
jmp
mov
sbb
test
cmp
dec
sub
xor
inc
sbb
xchg
jne
mov
rcrl
jo
ljmp
in
repnz
add
jb
sbb
sub
cmp
cmpsl
sbb
cmp
jp
xchg
int
fidivl
in
adc
and
cltd
mov
sbb
inc
mov
pop
sub
push
sbb
push
jo
pop
mov
nop
cmp
gs
dec
xchg
mov
call
lock
dec
js
sub
mov
repz
aam
aam
xchg
cmp
lcall
add
ret
adc
sub
jnp
cmp
push
push
push
push
push
xchg
ja
inc
push
fiaddl
in
dec
lcall
cmp
scas
mov
jl
lods
mov
add
ljmp
insb
rol
out
mov
xor
inc
cs
inc
popf
add
inc
jmp
ret
hlt
inc
aaa
add
enter
jnp
and
cwtl
arpl
inc
adc
fwait
push
dec
and
sub
cmc
lds
fnstcw
push
mov
scas
cld
in
clc
inc
xor
je
mov
sti
mov
cmp
jno
ret
out
xchg
add
mov
mov
or
insl
and
fcompl
push
inc
add
jecxz
xchg
pop
jp
or
hlt
lds
jp
mov
sbb
dec
ret
fiadds
add
mov
pop
pop
mov
inc
mov
decl
movsb
xchg
mov
ret
cmp
das
mov
inc
push
mov
cwtl
sbb
lods
mov
push
in
decl
decl
insb
mov
sarl
repz
ja
add
icebp
push
lods
pop
lcall
orl
out
jl
push
add
xchg
out
jg
cmp
adc
insb
jno
xchg
scas
fisubrs
sub
add
sti
adc
rorl
mulps
add
dec
xor
mov
cmp
adcb
cs
sub
and
mov
sub
and
inc
or
rclb
repnz
and
push
jbe
sbb
fs
mov
enter
addl
test
push
fstpt
cltd
mov
add
mov
lods
or
int
lahf
pop
jbe
movsl
loopne
in
pop
insb
stos
vpmaddwd
sbb
neg
gs
ds
cli
xchg
mov
outsl
cwtl
inc
mov
lods
ret
dec
rorb
imul
fiadds
imul
sub
bound
inc
xor
cmp
hlt
inc
xchg
lods
movsl
cmp
in
inc
ds
pop
cmc
in
and
shl
adc
iret
imul
mov
imul
jne
mov
or
cld
lret
lds
mov
mov
inc
bound
stos
jae
sbbl
call
dec
mov
add
xor
and
js
iret
lods
mov
adc
pop
adc
shrl
adc
movsb
lods
stos
lahf
lahf
hlt
or
gs
outsl
push
add
pop
in
dec
mov
or
cmp
jno
fnstsw
push
scas
jae
mov
adc
xlat
add
repnz
mov
sub
inc
dec
rclb
inc
pop
ret
insl
xor
push
cmpsb
outsb
rcrb
test
arpl
sbb
add
and
adc
pushf
dec
in
xor
push
in
inc
adc
lcall
stos
cmp
clc
mov
lods
and
cmp
cwtl
in
aas
lret
bound
sub
clc
and
cwtl
bound
pop
push
push
repnz
inc
xchg
jno
iret
push
stc
mov
mov
cmp
neg
mov
sbb
es
cmp
jmp
sub
cmpsl
cmpps
jecxz
pushl
pop
add
jae
push
fldcw
cmpsl
loopne
inc
ror
pop
mov
jmp
and
add
mov
ret
or
rcrb
sub
pop
jl
int
cmp
in
ret
fcomps
repnz
xor
es
jbe
mov
repz
xor
loopne
mov
mov
mov
mov
mov
pop
pop
add
stc
fiadds
adc
xrelease
mov
stos
rol
cmp
cmpl
jl
jae
pop
cli
push
jnp
inc
addl
loopne
xchg
inc
sub
sbb
push
lret
sbb
shlb
or
dec
dec
dec
xor
rcll
pushf
push
pop
adc
sarl
push
add
and
loopne
cld
arpl
jae
jnp
insl
ds
clc
rcrb
jp
jecxz
int3
ret
hlt
mov
xchg
dec
pop
mov
mov
xorl
iret
mov
dec
aaa
pop
inc
lods
inc
inc
cmp
mov
pop
xchg
add
movsb
nop
daa
cmp
cmp
cmp
enter
push
add
out
int
sub
inc
mov
sarl
ljmp
push
das
or
mov
push
stos
mov
repnz
jb
fwait
mov
in
fs
cs
repz
inc
mov
pop
stos
mov
sbb
sub
stos
dec
jmp
sbb
addb
cmpsb
mov
ficompl
popa
ret
std
int
or
or
inc
daa
mov
mov
xchg
push
int
cmp
dec
ja
ja
mov
xor
cmp
pusha
loop
jmp
icebp
daa
jmp
lret
or
xor
jg
or
orb
andps
shrl
inc
cmp
sarb
lock
fidivrs
test
mov
mov
xchg
push
xlat
mov
push
or
lods
dec
insl
add
sbb
mov
pop
jecxz
lock
xchg
or
incb
sbb
sbb
mov
dec
orb
xchg
cmp
testb
test
xchg
mov
jns
lcall
mov
fcmovnbe
enter
repnz
mov
cmp
test
je
sbb
cld
mov
mov
fmuls
inc
jo
inc
xor
mov
mov
stos
scas
stos
or
insl
nop
sbb
adcb
jb
call
aam
mov
arpl
xor
pop
fstl
lret
dec
add
jo
lods
sub
jecxz
ja
pushl
mov
int
or
mov
pop
push
stos
enter
ljmp
mov
mov
xor
jp
test
movsb
jle
jae
sbb
repnz
push
int
icebp
adc
inc
outsb
mov
cwtl
cmp
sub
rclb
popa
jnp
fsubs
push
sbb
out
or
xor
jp
inc
cld
cld
and
dec
cli
setge
cmp
sbb
bnd
ret
fbld
out
adc
fcomip
inc
imul
mov
mov
cmp
mov
sti
subb
cmp
mov
inc
pushf
adc
push
loopne
mov
dec
mov
pop
xor
cld
cmp
jmp
or
xchg
mov
mov
aam
inc
xor
or
in
mov
cld
xor
inc
in
add
das
adc
hlt
and
popa
inc
cltd
aam
mov
dec
jg
divl
xchg
outsl
mov
mov
push
out
jle
hlt
xor
imul
cmp
pop
adc
test
movsb
mov
popf
sub
lds
fcompl
out
cmp
fistpl
sbb
movl
fiadds
or
fxch
cld
sbbl
data16
dec
xchg
adc
inc
frstor
aam
daa
dec
lahf
cs
add
in
insb
inc
sbb
sbb
enter
faddl
pusha
imul
cmp
inc
or
xor
rcrb
inc
jne
rol
mov
adc
xor
je
out
out
dec
xchg
test
inc
js
int
sti
popa
pop
jge
push
pop
cltd
int
jno
jb
loope
gs
imul
sbb
mov
lret
mov
roll
xchg
mov
jecxz
ret
stc
int
insl
subb
and
xchg
enter
mov
xor
sahf
pop
pop
adcl
or
or
push
dec
repz
and
pop
dec
stc
jle
dec
fistl
push
mov
xchg
in
pop
add
push
pop
xchg
inc
dec
outsl
push
loopne,pn
mov
sar
lods
dec
inc
stc
sbb
pop
cmp
mov
rorb
nop
sub
inc
sbb
adc
mov
or
inc
movsl
popfw
sub
inc
gs
hlt
in
into
fmull
iret
rorl
jle
repnz
push
jns
scas
fidivs
rorb
icebp
rolb
push
and
imul
stc
lret
sbbb
cmp
pop
jno
sti
jae
sti
fcmovnu
loop
out
pop
test
push
lcall
inc
inc
mov
dec
aas
in
add
cmp
fsubrl
addr16
mov
enter
add
sbb
out
mov
imul
mov
fistl
repnz
mov
mov
cmp
or
nop
insl
and
ror
xchg
jge
mov
xor
xor
cwtl
push
andb
es
fsubrl
rclb
lds
ret
ficoml
and
pushl
push
cmpsb
aam
lcall
das
test
and
cwtl
sbb
sbb
fcomps
jae
hlt
lods
inc
mov
mov
fcompl
xchg
sbb
adc
loopne
mov
jb
jle
fs
cmp
mov
std
scas
outsl
stos
leave
push
sbb
xor
add
rclb
lock
out
icebp
lods
cwtl
lods
testb
into
fldl2e
push
dec
jb
add
shl
or
ja
ret
lahf
jp
pop
cmp
jmp
xchg
es
inc
push
pop
jo
or
int
push
popa
arpl
xor
lea
pop
jmp
mov
mov
push
add
iret
pop
dec
cmpsl
jns
push
or
inc
loopne
ljmp
inc
and
loope
aas
andl
popf
rcl
cli
mov
jne
jmp
data16
test
jbe
dec
jno
or
cld
xchg
fldcw
add
sub
je
push
pop
mov
lret
jne
mov
cmp
mov
push
lods
xor
scas
dec
pop
or
les
subb
xchg
add
fbstp
rcl
adc
movsl
sbb
mov
cwtl
add
shlb
pop
iret
gs
fbstp
hlt
enter
dec
push
int
outsl
lods
mov
inc
mov
or
dec
cli
inc
jbe
es
mov
cs
ret
jno
cmp
hlt
mov
leave
sub
enter
sbb
lret
les
mov
cld
test
xor
pop
fbstp
mov
in
and
jae
xchg
out
fcompl
sub
movsb
pop
dec
das
pop
popa
aam
xchg
fs
icebp
cmc
xchg
cmp
nop
dec
bound
shrl
cmpsl
xor
fs
pop
sbb
rcll
popf
lahf
mov
and
mov
test
xchg
aam
jns
imul
loopne
scas
xchg
jne
fs
or
lcall
sub
mov
push
sbb
inc
or
xchg
xchg
hlt
xor
es
bound
xor
shl
add
lret
mov
je
cs
and
icebp
add
pop
jbe
jg
mov
and
cmp
sti
mov
jns
daa
and
pop
test
xchg
int3
gs
mov
jg
xchg
int3
or
test
pop
in
fdiv
jl
jg
inc
pop
push
repnz
in
in
out
and
pop
push
dec
ret
int3
push
inc
cltd
rclb
pop
aaa
sub
ret
mov
mov
push
sub
mov
jbe
bound
and
push
rcr
add
mov
push
pop
mov
pop
cltd
test
ja
movsl
out
push
inc
inc
sub
sldt
xor
and
cmc
iret
push
add
cmpsb
mov
mov
insl
test
ja
call
mov
inc
jge
daa
out
sbb
mov
inc
mov
push
shrb
cmpsl
fcmovnu
dec
aas
adc
add
imul
ficomps
data16
hlt
xor
cmc
shr
lret
inc
sti
push
cmpsl
mov
lcall
mov
inc
or
add
pusha
xor
repnz
lcall
jle
data16
xchg
ret
cli
lret
mov
mov
or
add
xchg
jg
adcl
pop
push
mov
xor
sbb
xchg
dec
dec
and
call
add
movsl
mov
pop
cmp
add
pop
push
insb
jb
fimull
inc
or
push
cmp
ss
xor
repz
decl
xor
add
dec
fs
out
xor
sahf
lret
mov
bound
inc
push
cmpb
mov
fsts
xchg
or
int3
inc
mov
mov
cld
imul
sti
jecxz
lret
adc
aad
ret
sarb
sahf
bound
dec
enter
sub
mov
mov
rcl
jae
enter
xorl
ljmp
xor
add
loopne
mov
setns
adc
into
sbb
xchg
mov
jecxz
pop
outsb
jbe
mov
mov
stos
mov
stc
jmp
or
lods
les
shl
sbb
pop
jb
in
scas
xchg
add
test
inc
pop
sbb
das
sbb
pusha
add
out
xchg
sbbl
add
lods
popf
pop
fmull
mov
push
inc
cmpsb
sahf
sub
xchg
jl
dec
adc
in
sub
xchg
addr16
mov
loopne
sti
insb
cli
push
cli
mov
jg
push
aad
dec
jmp
jmp
cmp
adc
cmpsl
pushw
sti
ljmp
mov
leave
push
xchg
mov
popa
mov
and
data16
adc
cmp
inc
sarl
mov
and
testb
mov
or
cmc
aad
jb
lret
xchg
call
icebp
and
loopne
dec
sub
test
out
sub
cmp
add
int3
lods
je
add
cltd
mov
les
or
xchg
cltd
inc
repnz
sbb
das
cwtl
sbb
dec
push
push
dec
xchg
ja
add
mov
and
cld
rcll
int
fstpt
sbb
bound
mov
clc
adcl
out
jl
divb
mov
cmp
das
mov
or
dec
in
stos
int
jp
imul
xchg
popa
sar
adc
jbe,pn
les
or
imul
sub
into
cmp
in
test
dec
cmc
out
push
xchg
mov
xchg
scas
lods
dec
popl
xchg
mov
adc
fldcw
insl
jns
stc
inc
fsubrl
pop
iret
in
stos
sti
dec
bound
xchg
cmp
imul
adc
subl
lret
icebp
subl
pop
pop
int
mov
push
jno
mov
sbb
shlb
push
or
jge
sub
test
mov
xchg
dec
decl
dec
jmp
movsb
mov
pop
dec
dec
push
push
push
sub
lahf
enter
xor
pop
test
cmpsb
pop
ret
mov
jecxz
pop
test
repz
pop
sub
pop
outsb
dec
cmp
inc
inc
addr16
xchg
mov
pop
idivl
mov
cli
outsb
insb
xchg
add
fs
dec
xorl
stc
xchg
sub
adc
nop
sbb
cmp
sbb
inc
add
inc
outsb
jo,pn
imul
sub
mov
pop
aam
lds
das
test
add
xor
js
sub
or
push
lret
stos
push
sub
mov
jns
out
stos
and
subb
rcll
mov
xchg
push
xchg
cmpsb
sub
gs
stos
inc
cmc
sub
in
pusha
lods
shlb
insb
mov
frstpm(287
daa
or
mov
xor
orl
dec
pushf
inc
adc
sub
jo
sti
and
mov
cltd
loope
mov
pusha
push
sbb
pusha
push
nop
rcll
jb
subb
pop
sbb
xchg
andb
inc
or
fldenv
fwait
mov
es
rcl
push
into
int
daa
es
fs
mov
incb
sub
repnz
icebp
sub
sub
push
nop
clc
mov
sbb
into
je
clc
ffreep
out
push
popa
rcrl
add
mov
out
js
inc
xchg
aaa
sub
aas
outsb
jmp
adc
cs
repz
arpl
aaa
scas
mov
jo
inc
andl
and
mov
add
inc
mov
lds
enter
test
fdivl
bound
xor
es
imul
push
rcll
mov
hlt
xchg
pop
pushl
or
push
scas
fdivrl
dec
stos
fdivl
cld
fs
rclb
call
pushf
aad
adc
sbb
fisubl
adc
repz
fstl
cli
stos
pushf
ficoms
pop
mov
adc
lea
out
xor
xor
scas
add
pop
cmpsl
cmp
icebp
jmp
sbb
repnz
shl
sub
add
stc
adc
fwait
popf
outsl
sub
mov
orb
mov
push
dec
add
cltd
jnp
pop
cli
inc
lods
sbb
dec
cli
pop
inc
and
sub
push
popa
aam
add
int3
popa
inc
jae
rclb
daa
mov
mov
sbb
frstor
and
jne
je
mov
and
sub
mov
icebp
cmp
mov
arpl
mov
test
mov
rcrb
dec
xchg
inc
cltd
into
jecxz
ret
movsl
mov
jmp
lret
nop
dec
mov
sahf
mov
xchg
sbb
pop
sub
loop
mov
adc
push
idivb
lock
mov
int3
int3
daa
aas
lods
int
lods
mov
pop
jle
mov
jno
mov
sbb
insb
xor
inc
and
mov
aam
cltd
ret
sub
cmp
mov
mov
inc
enter
stos
sub
imul
insl
jge
add
movsb
shl
xchg
out
pusha
aaa
into
daa
ret
mov
pop
sarb
adc
stos
or
fprem1
xlat
xchg
or
ret
cmpsb
stos
sbb
iret
mov
xchg
lea
ja,pn
test
sbb
lret
scas
sbbb
inc
dec
push
aas
jbe
sub
dec
pop
jg
sub
testl
sub
or
in
movsb
cld
inc
or
pop
test
jno
mov
test
add
hlt
fdivrs
shrl
mov
out
pop
sub
hlt
iret
test
jne
fisubrs
test
bnd
clc
xchg
call
pop
jne
cmp
or
fdivp
lret
in
add
dec
push
and
xchg
pushf
cld
inc
gs
lea
mov
sbb
cwtl
in
push
mov
test
cltd
out
dec
sbb
mov
pop
loopne
enter
jb
and
sbb
insl
outsl
test
mov
stos
fmull
dec
push
sahf
inc
adc
sbb
cmp
cmp
stc
xchg
cld
xchg
movsl
pushf
jb
out
mov
lock
popf
dec
mov
sub
nop
pushf
adc
or
in
mov
clc
enter
and
adc
icebp
fstp
and
scas
xor
aaa
leave
andl
call
dec
sub
pop
loopne
sbb
or
jl
test
icebp
push
pop
jbe
xchg
fwait
xor
in
cmp
sbb
jae
jnp
in
mov
out
xchg
es
xor
dec
xchg
mov
aaa
mov
cmpsl
cmp
loop
mov
aam
faddl
sub
idivl
or
dec
fsts
cmp
stc
cmp
jo
scas
and
pop
jno
lds
in
sub
loopne
add
aam
test
add
in
push
mul
cmc
iret
mov
dec
dec
xor
loop
mov
and
or
imull
add
add
pop
ja
or
iret
xorb
xchg
inc
int
jp
dec
cmp
xor
xchg
adc
mov
mov
adc
push
lods
int3
pop
clc
std
lret
sahf
clc
insb
loop
test
jno
push
out
xchg
jbe
dec
fs
test
xlat
dec
pushf
ror
subl
pop
dec
mov
addl
mov
cmp
lds
dec
jns
sub
insb
dec
sbb
jle
cmp
scas
pop
ljmp
aam
push
adcl
loope
add
out
das
add
jp
cmp
lea
jne
push
sbb
in
xchg
fidivs
cmpsb
pusha
cmp
arpl
call
lock
sbb
inc
test
rcrb
fwait
test
jne
inc
pop
sub
faddp
aaa
pop
xor
dec
xor
out
out
jae
std
mov
mov
xor
add
mov
push
jecxz
out
mov
dec
adc
or
push
jge
sub
aas
cwtl
out
jae
loop
aas
popl
pop
aad
les
push
decl
add
popf
or
das
sbb
cmp
push
and
sub
cltd
pop
jns
dec
mov
mov
loope
in
dec
jne
movsb
xor
mov
call
cld
add
fcomps
mov
movb
test
ret
mov
jg
add
push
mov
ds
andb
repnz
sub
xchg
mov
dec
mov
clc
jb
jl
jbe
mov
mov
jecxz
fiadds
inc
je
push
sahf
jno
fs
push
aaa
fimuls
mov
bound
adc
jae
outsb
out
jb
mov
and
cmp
pop
sub
push
inc
xchg
xor
nop
jns
and
push
add
or
add
cmp
inc
dec
mov
adc
adc
pop
outsb
sub
clc
test
in
mov
or
call
xchg
jno
imul
sub
xchg
repnz
add
xlat
mov
mov
adc
mov
push
cmc
iretw
jecxz
cmp
aaa
add
cs
inc
xchg
pop
stos
mov
stos
push
push
push
inc
push
mov
ret
out
adc
cltd
mov
das
mov
jle
cld
adc
mov
jb
iret
mov
rolb
nop
leave
dec
test
push
mov
mov
or
jnp
and
mov
cmpsl
clc
fmull
cs
data16
jge
test
pop
cmp
ja
pop
mov
mov
insl
mov
sub
add
mov
mov
lods
mov
cmpsb
adc
xor
push
pop
ss
mov
ret
xor
add
xlat
jecxz
js
push
nop
js
pop
fadds
mov
xchg
jmp
adc
lcall
dec
sbb
pop
jae
imulb
cmc
push
out
pop
mov
xor
adc
xorb
movsb
jo
mov
pop
cmp
mov
out
push
add
stos
cmp
adc
daa
xchg
testl
add
inc
inc
das
scas
dec
shlb
aaa
jno
jp
adc
pop
test
cli
lods
or
jo
and
adc
and
int3
mov
pusha
setl
dec
jno
dec
call
scas
jns
lcall
sbb
dec
pop
roll
pop
push
xor
ret
pop
lcall
lret
mov
in
xor
gs
push
mov
jns
in
mov
je
jge
aad
jl
jbe
test
jmp
gs
mov
cmp
and
pushl
ja
adc
pop
movsl
xchg
insl
xchg
adc
test
pop
out
jp
mov
adc
fs
adc
add
outsl
inc
aam
inc
mov
int3
xchg
inc
mov
add
loop
test
sbb
icebp
in
lret
lods
shl
out
aam
in
push
out
add
adc
sti
adc
lock
jnp
push
stos
push
xor
mull
mov
pop
push
cmp
inc
aaa
xor
data16
jnp
pushf
sbb
xor
sbb
push
xor
int
cmc
outsl
inc
cmpsl
shl
fistpll
daa
scas
fistpll
orb
out
add
cmpsl
mov
add
mov
adc
jmp
inc
out
inc
inc
sbb
das
adc
mov
out
or
test
xchg
and
mov
and
sti
sahf
stos
mov
movsb
dec
fwait
mulb
cltd
inc
mov
dec
out
or
inc
je
sarl
cwtl
enter
pop
out
jp
mov
or
xor
inc
cli
jl
xorl
push
xchg
sbb
pop
das
mov
or
adc
and
push
call
femms
add
dec
test
pop
inc
jmp
ret
loop
and
in
push
push
cmpsb
aas
or
hlt
and
test
push
cltd
cwtl
call
arpl
mov
pop
addb
shlb
sub
sbb
xor
scas
imul
iret
mov
add
fildll
pop
sbb
andb
loopne
test
mov
es
movsb
es
pop
xchg
cmp
fistpll
out
mov
lret
fcompl
jecxz
out
push
leave
leave
xor
test
jns
pop
and
sahf
es
adc
sbb
ret
mov
arpl
mov
mov
xor
push
mov
test
inc
mov
or
dec
add
bound
cmp
std
and
add
push
pusha
xchg
sbb
fadd
ret
sbb
packsswb
std
jns
mov
pop
inc
dec
test
cld
and
jb
test
popf
jle
inc
dec
sbb
imul
sub
lods
mov
fimull
dec
pop
push
pusha
sbb
popf
inc
mov
xor
jmp
sub
lret
popa
and
push
mov
sbb
xchg
pop
cmp
mov
loopne
xor
and
push
subb
frstor
jecxz
pop
inc
cmpsl
ror
adc
sbb
push
mov
push
pop
adc
pop
into
in
repz
xchg
dec
adc
xchg
sarb
pop
and
jno
cmpsl
jno
adcb
dec
dec
mov
pushf
iret
jle
push
mov
stos
cmp
lds
mov
lock
fmuls
xor
js
cmpb
sub
or
sbb
cmp
xchg
lahf
fistpll
mov
out
sbb
xor
xor
lcall
mov
dec
jle
cli
xor
stos
lret
and
out
insb
ds
rcll
popa
out
icebp
adc
repz
rcll
jmp
pop
and
jmp
mov
push
xor
sbb
xor
pop
clc
inc
mov
imul
jp
add
out
inc
add
pop
jns
es
cmp
cmp
mov
stos
inc
sbb
cmpsl
rol
jno
fisubl
xor
pop
and
mov
pop
or
outsb
inc
dec
mov
sub
xor
mov
cltd
in
sarl
repnz
and
loopne
shll
jae
mov
rcl
cltd
arpl
mov
test
adc
cwtl
dec
mov
bswap
mov
lods
sub
xchg
add
insl
mov
mov
and
pop
jl
sbb
loope
adc
paddw
push
jns
add
or
insb
pop
mov
mov
mov
pop
shll
xchg
sub
rclb
cmp
hlt
fsts
popa
shll
popa
test
mov
rorl
adc
push
dec
xchg
mov
pop
lret
stos
mov
or
jecxz
dec
push
mov
pop
shlb
xlat
dec
mov
xchg
push
popf
add
mov
pop
dec
push
jbe
pop
test
pusha
xchg
scas
dec
out
ror
arpl
fmuls
mul
or
mov
pop
or
clc
int
inc
xor
lret
dec
in
push
repnz
fisttps
shll
or
dec
aam
or
imul
push
jbe
add
ret
jbe
cs
sub
aad
push
hlt
mov
int3
pop
test
xor
pop
test
outsb
push
movsb
aaa
cmp
popf
cmp
insb
or
dec
ret
pop
in
push
xchg
adc
xorb
mov
pop
mov
sub
fistpl
cmpsl
mov
je
cs
fildl
adc
inc
xor
push
clc
aaa
es
mov
cltd
xor
xchg
fiadds
or
cmp
jmp
sbb
out
mov
mov
fadd
xor
mov
imulb
dec
arpl
test
pop
daa
insl
mov
shll
mov
shll
sbb
inc
gs
inc
dec
add
clc
sub
ret
in
cmc
cmp
mov
je
add
mov
in
repnz
loope
int3
jge
fadd
hlt
mov
test
rolb
scas
rolb
cmp
pop
call
lods
xchg
dec
push
mov
dec
fwait
or
in
cmp
lods
adc
and
jle
mov
jecxz
cmp
mov
adc
es
test
sub
aas
pushf
loope
mov
mov
stos
shrb
adcl
ds
dec
in
pandn
leave
mov
mov
mov
sbb
imul
iret
mov
and
push
inc
aaa
mov
cmp
jp
repnz
push
pusha
rcrb
mov
lock
ret
into
and
inc
jns
out
aaa
popf
jmp
int
inc
lods
out
push
test
push
mov
mov
adc
or
xchg
inc
xchg
adc
adc
bound
out
push
cmc
add
mov
ret
jne
fnstcw
iret
stos
out
fcoms
xor
add
mov
adc
rcrb
andb
dec
or
cmp
clc
repnz
rclb
and
push
lret
jnp
jbe
xor
xor
loop
rcrb
rcll
iret
std
inc
push
sbb
mov
call
mov
popf
xchg
dec
inc
ret
cltd
stc
push
arpl
movsb
out
aaa
into
mov
pop
inc
hlt
iret
jle
sub
mov
xor
roll
nop
and
mov
mov
popf
mov
loop
ljmp
in
mov
adc
fadd
loopne
adc
push
call
push
incb
or
sbb
jle
sbbl
mov
data16
sub
pop
andl
jne
sarb
sub
adcb
pushf
adc
test
vrsqrtss
adc
pop
stc
loop
mov
cwtl
dec
pushf
xchg
mov
shrl
mov
test
imul
sbb
push
std
and
inc
pop
ss
xor
andl
test
sbb
movsb
test
inc
push
dec
fwait
push
notl
in
movsb
aad
js
sbbb
xor
or
or
xchg
sahf
mov
or
sbb
rcll
push
movsb
push
mov
sub
pop
in
sbb
fadds
mov
int3
sbb
int3
xor
inc
not
adc
push
sub
insl
xor
int3
cmp
out
cmp
mov
inc
cmp
mov
in
jl
pop
mov
xchg
adc
inc
mov
addr16
adc
push
xor
fmuls
jo
xor
jo
or
mov
jp
or
lock
cmp
inc
fidivl
dec
pop
jge
mov
stc
lcall
dec
clc
leave
adc
les
push
pop
subps
jo
inc
jp
dec
fwait
mov
push
jmp
fistl
xchg
test
stos
pop
cli
add
call
out
or
ds
lock
sahf
sub
subl
push
or
jns
push
push
xor
sub
int3
sbb
jl
sub
fisttpl
mov
dec
repnz
dec
jmp
jo
daa
mov
inc
call
inc
ljmp
jecxz
pshufw
imul
roll
mov
pop
rcr
sarl
leave
popa
ds
push
push
popf
mov
adc
push
add
bound
mov
mov
fs
repz
faddl
jge
mov
aas
jnp
sbb
inc
mov
lahf
pop
sub
cmp
pop
adc
xchg
shrl
lret
out
shll
outsb
testl
sub
in
fwait
and
push
or
jmp
mov
xor
cmp
movsb
test
insl
push
inc
pop
push
jmp
fidivs
dec
and
cmp
rcrb
test
cmp
jmp
mov
test
add
mov
mov
xchg
movb
out
in
xchg
test
jne
or
inc
dec
call
xchg
push
sahf
push
mov
ja
out
iret
ret
inc
or
fsubrl
addr16
test
clc
stos
leave
ss
xchg
orb
jecxz
mov
cmp
lods
jb
aas
nop
xor
fcompl
scas
bound
mov
pop
shr
push
dec
mov
push
adc
adc
xor
adc
mov
mov
in
xor
mov
mov
out
dec
xchg
xchg
pop
mov
jb
cltd
mov
out
shr
add
adc
xor
ret
sbb
stos
movsl
mov
and
xchg
jle
cmp
data16
pop
and
dec
sub
stos
cmp
insb
and
test
pop
jl
movsl
inc
stos
movsl
add
mov
addr16
movl
fnsave
xlat
insl
leave
push
into
sbb
pop
sub
shlb
rcrl
out
xor
in
out
icebp
add
imul
mov
sahf
xor
stc
jns
mov
repnz
shrl
bswap
loop
repz
xchg
dec
push
rclb
push
mov
rclb
jge
pop
ret
sbb
pop
in
pop
mov
jae
mov
push
cmp
mov
daa
bswap
shr
stc
inc
out
push
adc
or
vaddpd
lret
cmp
xchg
adc
lcall
outsl
add
cmp
ss
ret
sub
int3
testl
ja
inc
cmp
pop
mov
dec
dec
leave
lock
inc
lods
lret
mov
mov
xchg
dec
xchg
loop
push
int
xor
xchg
sti
xlat
cmp
mov
mov
xor
sub
push
popf
cmpsb
mov
fcmovne
cmpsl
xor
add
bound
or
rclb
adc
mov
vpcmov
cs
xchg
jbe
ret
outsl
sub
rcrl
mov
mov
xchg
push
inc
push
mov
lods
dec
pop
cmpsb
jmp
ss
in
push
out
sbb
mov
xchg
loop
mov
inc
xchg
mov
stos
push
push
loope
mov
testl
fcoms
pop
cwtl
dec
and
mov
movsl
popf
test
and
leave
adc
fiaddl
adc
adc
int
ja
add
mov
outsl
es
jle
xor
xlat
test
sub
dec
test
scas
xchg
fs
cmp
sub
insb
ret
leave
mov
push
stc
and
imul
mov
jb
aad
lds
daa
mov
sub
cmpsl
pop
fs
push
jg
aad
or
dec
outsb
mov
xor
mov
pushf
pop
xor
mov
xor
fs
mov
insb
or
ljmp
lret
sub
and
arpl
lods
ret
dec
dec
push
pusha
in
inc
pop
lret
ss
in
imul
xor
shlb
or
ljmp
shl
les
and
int3
xchg
jae
aas
jecxz
inc
pop
mov
mov
test
pusha
stc
mov
rorl
lret
mov
pop
xor
push
or
xchg
scas
popf
call
or
xchg
and
mov
add
add
xchg
cmp
mov
outsl
cmp
outsl
loopne,pn
sub
pop
test
mov
repnz
movb
inc
iret
cmp
cmp
mov
and
adc
jno
shr
push
add
mov
in
repnz
dec
ficoml
dec
dec
push
add
loop
ljmp
cmpsb
ds
or
pop
pop
aaa
sbb
jl
call
leave
imul
fildll
in
mov
ss
xor
jg
adc
mov
js
inc
ret
movsb
out
sbb
pusha
testb
mov
mov
inc
xchg
fisubl
inc
inc
int3
loop
pop
aas
mov
lds
push
inc
adc
fs
push
js
movsb
pop
inc
push
daa
test
push
cld
sbb
or
mov
pop
sahf
test
loop
rorb
xlat
int3
repz
fsubrl
pusha
leave
sbb
test
sbb
xor
test
dec
sbbl
movsb
jp
imul
ret
push
or
test
aad
jecxz
inc
lahf
mov
push
mov
push
aam
inc
pop
out
xchg
in
pushl
or
inc
adc
loopne
movsb
scas
cmpsl
cld
inc
fcoms
inc
movsb
push
mov
sbb
cmp
fsubrs
mov
or
daa
sub
xor
adc
ret
cmpsb
negl
or
cmp
xchg
and
mov
dec
adc
clc
lock
adc
scas
mov
xor
fsubrp
or
roll
xchg
std
jne
cmc
loop
outsl
and
es
fldcw
aam
or
adc
pushf
xor
push
mov
hlt
pop
fwait
roll
sub
jg
jne
cmc
xor
or
mov
mov
jge
jae
inc
add
jge
sbbb
imul
add
outsb
fs
xor
dec
sarb
mov
imul
bound
das
mov
hlt
mov
divb
pusha
insl
sarb
insl
add
int
rcl
ror
dec
out
mov
ja
add
dec
je
mov
xor
push
mov
leave
fs
lahf
inc
sub
pop
insl
push
push
push
jno
je
fsubs
lods
cltd
stc
push
js
je
mov
sub
andl
dec
push
fwait
push
push
jb
push
and
and
out
data16
test
aad
ja
mov
aaa
pop
and
dec
dec
fwait
in
test
imul
sub
sub
loope
shlb
insl
mov
adc
sbbl
mov
ds
fnstsw
xor
sub
nop
ret
aam
in
sub
test
inc
mov
into
je
shl
fisttpl
add
mov
jo
adc
jg
mov
jle
loopne
mov
pop
test
js
jbe
arpl
dec
mov
jecxz
int
insb
and
lods
into
pop
loope
inc
repnz
inc
fistps
push
enter
cmp
fisubrs
sub
push
iret
outsl
push
js
inc
mov
mov
ret
in
or
and
pop
mov
fisttps
adc
jb
add
cwtl
cmp
lcall
cmpsl
dec
repnz
popf
adc
pushf
cltd
pusha
pop
inc
cmp
test
push
push
lahf
mov
ret
xor
dec
jp
out
xor
lcall
sub
scas
or
cmc
out
sbbb
lods
sbb
mov
xor
and
mov
push
fldt
in
sub
std
mov
push
loope,pt
test
sbb
adc
jne
aaa
fadds
inc
inc
rcrb
mov
xchg
sub
pop
inc
cmp
stos
test
in
sub
pop
leave
rorb
inc
insl
popf
jmp
mov
orl
cmp
pusha
push
cmpsb
jo
into
fisubs
jg
fstpl
sbb
scas
inc
add
and
xor
push
and
mov
aam
mov
nop
mov
jl
xchg
pop
dec
xchg
andb
mov
dec
jmp
lock
pop
fmulp
cmc
xlat
addr16
out
paddw
fisubrl
sub
jl
sub
or
in
push
dec
pop
dec
scas
mov
aas
das
cli
fadds
xchg
test
rorb
jle
callw
cwtl
dec
imul
mov
dec
test
test
cmp
sbb
mov
out
push
sahf
cmp
aad
adc
sbb
icebp
inc
sbb
mov
adc
mov
and
cld
ds
ljmp
dec
mov
jnp
js
lret
ljmp
leave
mov
dec
cmpb
stos
rorl
lret
jne
fnsave
cli
xchg
lcall
pop
xchg
adc
jp
lea
das
jl
es
lea
jp
fidivs
adc
ret
inc
mov
mov
fstl
cmpsl
xor
xchg
outsl
dec
jmp
jns
adc
mov
pop
out
mov
stos
adc
ret
pop
mov
sub
test
fsub
shrl
inc
stos
adcl
aas
sbb
inc
adc
daa
push
xchg
adc
subb
popa
lds
repz
nop
sub
insb
xor
pop
xchg
adc
xchg
jae
jb
inc
inc
mov
in
sub
mov
mul
std
and
mov
mov
inc
mov
sahf
subl
lcallw
xchg
fs
xorb
stc
pushf
inc
pusha
xchg
add
inc
and
xchg
cmp
push
or
test
mov
dec
in
rclb
sub
jb
cwtl
dec
loope
or
xlat
add
add
fimull
dec
out
inc
arpl
dec
adc
mov
add
cmp
pop
push
js
nop
sbb
cmp
hlt
and
lcall
mov
push
sbb
nop
xor
pop
and
je
insl
enter
subb
popa
dec
jmp
cmpsl
into
adc
je
shl
loop
dec
cmpl
popf
test
xlat
cs
sbb
scas
pop
and
mov
insb
mov
jnp
cmp
not
aad
rclb
stos
mov
nop
push
test
cmc
dec
sub
sbb
cmp
pop
xchg
ret
mov
jge
mov
idiv
add
in
cmc
inc
push
xchg
xchg
jae
xchg
pop
shrl
pusha
std
pop
test
jns
nop
jl
add
pop
dec
push
and
test
call
pop
mov
adc
movsl
and
mov
pop
gs
insb
jmp
in
testb
sahf
enter
jle
xchg
out
inc
pop
sub
cld
xchg
fisubrs
arpl
repz
mov
xchg
push
dec
mov
sub
scas
push
dec
fnstsw
lods
sar
popa
mov
cmc
inc
fwait
lods
mov
negb
loope
lcall
roll
test
mov
and
or
aaa
fnstsw
add
xchg
gs
lcall
enter
shll
jp
pop
mov
jb
fidivl
xor
jae
invd
mov
jg
adc
mov
xchg
jg
xor
jmp
and
xchg
sub
shll
inc
and
sbb
ret
insl
xchg
jg
push
jg
aad
pop
jl
mov
stc
sbb
aas
jp
mov
or
rorb
mov
jb
pop
dec
sbbb
fldt
sub
sub
mov
sub
test
dec
imul
sbb
adc
pop
out
popa
insl
jae
arpl
mov
adc
cmpsl
pop
inc
xorb
mov
insl
xor
mov
incb
inc
sub
jl
xor
aaa
pushf
push
cwtl
movsl
push
into
and
sarb
rcll
xor
xchg
aas
xor
and
cld
test
push
mov
dec
inc
in
jnp
mov
cmpsb
sbb
mov
es
nop
or
inc
fstpt
fsubrl
dec
add
test
or
sbb
cmp
cmp
push
scas
dec
add
std
les
adc
scas
and
sub
jecxz
aaa
cmc
aaa
shr
adc
push
pop
xor
stc
std
sub
mov
adc
lds
lea
rcr
lea
data16
cmpsb
movsl
mov
ja
sub
or
add
daa
cmp
xor
cltd
dec
lods
jae
or
les
xor
out
dec
stc
fdivrl
jo
jno
xlat
sbb
and
addb
pop
sub
lods
and
or
stos
adc
adc
sbb
and
xor
jb
dec
cmp
mov
insl
adc
testb
or
das
and
xor
lcall
push
out
push
cmp
cmp
imul
xor
dec
push
mov
adc
dec
mov
lcall
repz
dec
xchg
fidivs
dec
addr16
movsb
add
in
bound
lock
arpl
pushl
sbb
iret
mov
push
int3
enter
in
or
iret
test
xor
cmp
inc
in
cmp
or
test
es
and
fsub
sahf
mov
mov
ret
hlt
ljmp
xor
jo
call
cmpsb
lods
jl
stos
cltd
add
push
jge
sbb
loope
in
xor
dec
cltd
into
jl
adc
popf
mov
and
cmp
and
mov
dec
sub
aaa
and
add
data16
fucomp
inc
sbb
data16
lods
icebp
incl
stos
xchg
call
lods
in
adc
std
sub
aad
lret
dec
fisubrs
or
fbld
popf
int
sbb
pop
or
out
movsl
fsubl
and
push
sbb
jo
inc
dec
add
add
lret
push
mov
push
andl
cmp
iret
subb
pcmpeqw
mov
shll
fldpi
push
xrelease
stos
xlat
leave
push
or
jo
pop
add
lret
scas
fnstsw
int3
inc
pop
add
lods
jmp
mov
xchg
insb
push
pop
jmp
sar
or
adcb
xlat
dec
xchg
popf
fwait
in
test
or
and
adc
add
add
repz
out
sti
cltd
ljmp
and
enter
xchg
xor
push
and
sbb
movsb
les
xchg
sbbb
lret
es
push
pushl
dec
pop
lock
pop
bound
pop
add
test
dec
mov
rorl
arpl
adc
imul
nop
mov
scas
sub
inc
mov
push
pop
iret
or
push
imul
dec
dec
sub
rcr
pop
pop
mov
xor
and
addl
sbb
pop
adc
cmpsl
shlb
leave
xor
dec
mov
fdivl
std
xchg
mov
movsl
pop
scas
inc
test
mov
iret
jne
out
pop
outsl
out
adc
jbe
test
xchg
out
push
addr16
jo
hlt
pop
adc
cmp
add
mov
out
les
xor
repnz
bnd
push
pop
notl
dec
sbb
imul
dec
dec
imul
call
js
xchg
lret
mov
rclb
jae
jno
js
ja
add
imul
add
xchg
lea
cmpl
imul
arpl
idivl
inc
push
int3
jo
and
inc
lock
mov
push
popa
mov
jo
sub
sub
lret
idiv
lcall
test
imul
cs
mov
jns
mov
sbb
inc
xor
gs
mov
pop
push
pop
out
mov
in
fistpl
dec
cmp
mov
popa
jb
mov
lock
testb
loop
jns
js
and
in
test
bound
lods
fwait
mov
mov
movsl
icebp
fs
out
lock
sbb
add
in
in
or
push
and
insl
add
sbb
mov
xor
jge
aad
mov
lock
sub
pop
sub
stc
inc
push
adc
mov
jnp
pop
jmp
loopne
cmpsl
inc
repz
int3
outsl
xchg
adc
or
sbb
pop
push
cs
cmc
mov
jns
pop
inc
mov
pop
and
xchg
loope
pop
mov
sbb
repz
pop
xchg
xor
jp
dec
or
aas
xor
jg
imul
enter
stos
stc
cmpsb
push
xor
jne
outsl
outsl
jne
cmc
add
adc
pusha
cmp
stos
fnsave
lods
out
aas
cltd
icebp
or
or
pop
fistpll
mov
mov
inc
ljmp
xchg
fistl
lods
inc
jmp
add
inc
addr16
pop
mov
mov
ds
mov
xor
insb
jp
out
mov
fwait
add
out
or
add
xchg
pop
xor
mov
and
jl
xorb
imul
jmp
jb
rcll
cmpsb
scas
jecxz
sub
lods
or
jno
std
push
push
or
cmp
mov
lods
imul
xor
cmp
jns
pop
int
inc
xor
add
nop
sub
test
popa
jb
inc
scas
aas
rclb
subl
mov
adc
fdivl
xor
xchg
sub
mov
pushw
ljmp
nop
ljmp
lcall
push
iret
out
pop
dec
adc
sub
jns
pop
sbb
sub
adc
call
dec
std
add
xor
popa
aas
pop
inc
cmp
xchg
insb
mov
and
fstpt
inc
sti
mov
jo
das
stos
mov
arpl
add
cmpsb
fistpll
into
dec
dec
lret
test
cli
aam
je
push
xchg
xchg
and
stc
jns
and
cmp
adc
ds
cmpb
cmp
mov
cli
dec
loope
adc
jecxz
sub
mov
in
inc
loopne
insb
sbbb
divps
mov
out
loopnew
jns
fildl
test
jnp
jae
xchg
mov
mov
sub
xchg
shrl
mov
inc
adc
movd
mov
adc
jmp
jmp
cltd
icebp
mov
mov
cmpsb
stc
mov
sbb
cltd
fcmovnbe
inc
loop
pop
imul
xchg
lahf
pop
idiv
xor
inc
cmp
dec
add
push
jae
shlb
xchg
jl
adc
inc
sbb
mov
sarb
cli
mov
xchg
je
cmp
orl
push
daa
inc
pop
jns
pop
jle
mov
aas
sbb
xor
addb
jo
mov
xchg
ja
cwtl
mov
cmp
mov
sub
aas
mov
shlb
sahf
es
lcall
sub
insl
daa
push
pop
sbb
or
das
pop
xchg
jmp
aas
imulb
sbb
js
cmpsb
mov
push
mov
adc
lret
mov
cs
std
fs
orps
cmp
sti
mov
push
loop
notl
pushf
xor
jae
fisttpll
mov
es
jno
fsubrp
lea
mov
dec
xor
dec
sub
xor
pop
jg
push
ds
mov
sbb
daa
addb
mov
std
jl
or
mov
and
pop
rorb
mov
dec
mov
inc
repz
lahf
xor
sub
enter
fwait
scas
push
lahf
scas
mov
inc
inc
xor
popf
xchg
fisttpl
jbe
and
fs
mov
xchg
mov
stos
adcb
xchg
jmp
sbb
push
jnp
addl
ficomps
inc
push
ret
rorl
or
scas
filds
out
fisttps
mov
mov
popa
js
jae
mov
out
cmp
jmp
scas
in
outsb
mov
lahf
mov
cmp
pusha
outsl
ret
pop
pop
or
jo
mov
hlt
push
jl
sub
ss
xlat
fwait
jbe
add
mov
xor
jbe
mov
add
flds
scas
or
lret
test
add
in
mov
mov
pop
xor
mov
mov
popa
adc
mov
test
imul
enter
sti
sbb
mov
xlat
inc
gs
out
cmp
and
ljmp
test
out
or
aaa
xsave
push
mov
xor
jmp
inc
cmp
jne
cli
dec
sarl
sub
push
cwtl
pop
push
jb
sub
int
dec
xchg
js
cmpsl
dec
cmp
int3
popa
loopne
cli
lds
jnp
call
fwait
mov
ja
sub
push
cltd
xor
popa
imul
clc
xchg
pop
sahf
push
adcl
stos
sub
sub
push
adc
push
push
sub
in
fisubs
bound
adc
xor
in
mov
jae
jp
inc
stos
in
test
ds
and
jne
inc
repz
ficoms
adc
dec
or
xchg
sar
pop
sub
ret
jecxz
movsl
mov
lcall
mov
js
sub
adc
sbb
pop
in
xor
mov
lods
jno
ljmp
xor
jnp
and
lea
jl
lret
pop
enter
in
dec
dec
cmpb
jecxz
push
bound
incl
mov
dec
nop
shrl
sar
jle
add
or
fistpll
mov
xor
jmp
shrl
cli
into
mov
in
addr16
mov
push
push
fimuls
jb
pop
jg
bound
enter
dec
mov
in
enter
xchg
repz
lock
jl
mov
cmp
fwait
pop
mov
movsb
ja
xor
lret
cmp
or
int3
int
push
test
test
or
jecxz
call
out
jne
sbb
in
loop
scas
jp
cmp
cld
mov
inc
pushl
inc
jbe
mov
fwait
jp
inc
enter
and
daa
dec
lcall
insb
out
pop
push
and
add
adc
cmc
add
adc
pop
xor
dec
pop
xchg
pop
pop
dec
ret
xor
mov
stos
sbb
fcoms
jg
rorl
xchg
fs
sbb
xchg
push
popf
dec
dec
mov
pop
jns
stc
cwtl
inc
sbb
xchg
push
cs
cmpsl
fsubl
test
sub
ja
mov
inc
cmp
daa
push
movsl
lea
notb
cli
xchg
mov
aas
adc
dec
pop
dec
and
fimull
sbb
sbb
or
jo
mov
leave
jno
iret
pop
dec
shrl
push
stos
jne
jp
out
sub
dec
out
xchg
inc
jmp
out
push
mov
pop
push
insl
jns
xchg
xchg
xor
cli
fbld
loopne
mov
inc
rcll
dec
cmp
das
and
mov
mov
and
je
add
roll
pop
outsb
clc
xor
sti
cmc
fsubp
inc
cld
adc
loope
mov
fcompl
shrl
jle
cmp
jecxz
in
xchg
xchg
xchg
xchg
cmp
jbe
add
movsb
or
or
or
scas
xor
pop
arpl
and
movb
in
mov
xchg
int
loope
fs
jne
pop
pop
movsb
cmp
xor
dec
mov
xor
sub
push
mov
pop
xchg
icebp
stc
sbb
test
int
imul
push
ret
or
jg
shlb
xlat
push
or
pop
xchg
aad
xor
or
lret
and
dec
inc
push
inc
pop
or
push
popa
mov
xchg
sub
aas
cmc
movsb
pop
or
sahf
add
pushf
out
je
in
jmp
jbe
pop
pop
cmp
sub
into
ja
mov
sbb
push
pop
pop
jge
les
movsb
inc
push
cmpsl
pop
push
mul
lods
lret
popf
into
mov
mov
jle
cwtl
mov
mov
xchg
movsl
in
cltd
inc
inc
cmp
cmp
mov
mov
and
adc
popf
test
imul
pop
pusha
arpl
hlt
call
or
ja
adc
arpl
sbb
test
pushf
adc
pop
sub
subb
push
inc
add
clc
inc
pop
jb,pt
jns,pt
push
rcrl
inc
test
and
sub
jle
jp
dec
mov
pop
adc
std
rorl
push
pop
pop
mov
decl
adc
pop
in
call
popf
push
cltd
stos
into
sbb
push
push
outsb
imul
and
shlb
shll
mov
es
push
jge
push
sub
std
mov
inc
jge
cmp
inc
or
dec
push
inc
sbb
lds
daa
sbb
push
sub
imul
jmp
ljmp
jnp
cltd
je
cltd
add
sub
test
vphaddwd
insl
mov
cld
cmpsb
inc
fldl
cmp
or
mov
test
xor
dec
mov
lcall
mov
mov
xor
addr16
ljmp
jmp
popa
jbe
loopne
ljmp
lods
or
dec
pop
xchg
add
push
or
fucomip
jmp
push
iret
adc
aam
in
cmp
jg
add
sbb
imul
xchg
dec
rcll
pop
push
mov
fcomps
adc
ret
push
push
pop
clc
pushf
insl
mov
xor
inc
pop
or
mov
enter
arpl
outsb
or
gs
xchg
daa
inc
inc
mov
aam
mov
mov
or
pop
inc
and
pop
cmp
jnp
sbbl
push
test
sbb
inc
push
das
or
inc
dec
push
inc
aam
pop
push
clc
test
add
adc
aas
aas
out
mov
or
stos
add
lahf
push
lds
test
cmp
mov
push
push
pushf
inc
stos
mov
inc
mov
pop
stos
dec
repnz
test
mov
xor
mov
dec
push
cmp
jmp
outsl
lahf
add
cltd
in
filds
inc
mov
push
repz
or
fadds
faddl
jb
xlat
pushf
cmp
pop
lods
mov
jg
mov
dec
test
mov
xchg
sbb
cmpsb
addr16
jns
rorb
sbb
insl
adc
data16
out
cmp
enter
push
push
aaa
adc
inc
shlb
ljmp
fnstenv
cs
xchg
iret
mov
mov
outsl
push
inc
sbb
testl
scas
popf
add
sbb
sbb
jns
test
sbb
clc
scas
arpl
out
das
in
fnsave
out
in
xor
dec
sar
xor
rcrl
test
mov
push
std
mov
and
cltd
jae
cs
inc
cmpsl
shll
add
xchg
lar
xchg
xchg
scas
jl
pop
gs
pop
fdivrl
in
jnp
mov
xchg
dec
inc
mov
sbb
adc
idivb
imul
lret
inc
jmp
mov
push
ret
outsb
sbb
sub
add
lret
adc
jmp
mov
jo
jmp
sub
pop
sub
add
jle
cmpsb
flds
dec
jmp
mov
imul
rclb
or
cli
cltd
test
inc
out
pop
cld
andb
inc
int3
aaa
daa
call
inc
in
addl
aas
jne
fcomi
dec
mov
jle
imul
adc
inc
adc
sbb
pop
test
arpl
push
lock
mov
inc
adc
jle
fdivl
stos
not
lret
inc
fnstsw
shr
call
or
jo
int3
sbb
sub
push
push
xor
adc
addr16
xor
push
fadds
hlt
mulb
lods
sub
shlb
addr16
jbe
and
and
out
dec
dec
push
sahf
test
pop
push
aad
dec
xchg
cwtl
and
mov
xor
adc
dec
and
shlb
xor
test
fcomps
mov
call
add
movsl
push
xchg
jb
stos
incb
jg
mov
das
pop
or
dec
daa
pop
loopne
mov
jge
jb
mov
mov
ss
divb
mov
jle
cmpsl
loop
and
repz
push
inc
cltd
and
aas
in
loop
adc
mov
inc
dec
rdmsr
inc
xchg
stos
in
fs
xchg
test
push
mov
adc
pop
sub
mov
out
sarl
and
rcr
pusha
shl
jae
js
mov
das
or
ret
cs
push
sub
sbb
sbb
xchg
xor
sar
sbb
inc
and
pop
xor
push
pop
aaa
ljmp
push
gs
loope
ret
addr16
fadd
mov
adc
movsb
xor
add
push
and
and
faddl
cmpsb
dec
inc
mov
fwait
dec
pop
mov
mov
out
fisubs
movsb
ret
imul
mov
movsl
xchg
or
ret
stos
mov
movlps
std
xchg
ds
mov
xor
lods
cmpsb
jl
sbb
mov
adc
clc
mov
xor
gs
mov
sbb
testl
mov
aam
cld
imul
pushw
pop
cmp
les
push
call
pop
fistps
lods
xor
mov
arpl
mov
std
mov
mov
lret
xchg
outsl
adc
mov
mov
and
aaa
and
sbb
pusha
cmp
xor
addr16
andl
xchg
xlat
cltd
fiaddl
add
icebp
pop
mov
fsts
fisttpll
sbb
or
in
pop
mov
lods
aaa
mov
out
ja
repnz
mov
jg
cmc
icebp
sti
sub
sbb
inc
cmc
jg
and
pop
or
repnz
and
test
push
pushw
test
stc
lcall
leave
out
fwait
mov
pop
in
cld
scas
insl
xchg
push
loopne
sbb
pop
mov
ficoms
mov
cmp
pop
add
lds
bnd
add
jae
fiaddl
push
push
fidivs
mov
scas
lcall
shl
push
mov
stos
fsub
inc
xlat
cmp
enter
mov
fsubl
xchg
fmuls
jb
pop
in
popa
sbb
cmpsb
into
xchg
xor
xor
dec
js
ret
mov
mov
or
fst
mov
out
jp
inc
lret
sub
sbb
xor
pop
pusha
out
imul
pop
add
xor
lods
stos
sub
movsl
xchg
sub
mov
cmpsl
lcall
cld
inc
jmp
mov
mov
inc
mov
lock
neg
push
xlat
mov
add
int3
xchg
mov
into
imul
inc
add
outsl
ss
ret
arpl
jmp
xchg
mov
test
push
inc
xchg
sahf
in
test
mov
pop
sbb
and
add
sbb
xor
mov
in
lcall
cmp
adc
fwait
dec
mov
insl
adc
mov
inc
xchg
in
xchg
lret
xchg
xchg
jecxz
mov
leave
lea
lahf
std
mov
xchg
jp
jl
ret
push
fnstenv
add
popa
loopne
lret
enter
icebp
and
fadds
bound
jo
pop
push
push
pop
insl
divps
fstl
jl
cmp
clc
bound
stc
push
sub
mov
mov
ss
cli
adc
mov
push
std
ror
jecxz
xor
pop
call
push
scas
sub
fcom
lock
sahf
pop
or
test
mov
fcmovnbe
inc
sub
inc
aad
shlb
xor
repz
adc
push
stos
lds
xor
sysenter
icebp
cmp
sub
dec
sub
hlt
rcl
pop
aas
inc
out
int
or
mov
subb
dec
aaa
ficompl
dec
or
std
mov
mov
mov
pop
jns
push
insl
dec
cmp
jmp
nop
in
call
pop
inc
push
jmp
mov
imul
push
outsb
insb
cmp
enter
cltd
aam
movsl
daa
jae
jg
or
add
sbb
jl
addl
inc
je
cld
lret
cmp
mov
daa
and
pop
add
data16
out
or
sbb
dec
pusha
ds
adc
jecxz
sar
cmp
adc
xchg
adc
sbb
jge
fistl
push
cwtl
push
jae
dec
les
andb
cmp
mov
inc
xchg
fwait
fcoms
inc
xor
insl
lock
mov
jo
iret
aaa
mov
push
js
jo
mov
lret
sarl
daa
and
pop
ds
pop
pop
add
sbb
loop
jae
dec
lret
jb
jmp
mov
arpl
rorl
fmull
and
data16
fwait
pop
inc
movsl
cmpsl
pop
add
into
in
push
repnz
scas
xor
loopne
dec
pop
shl
mov
shl
hlt
fimuls
cmove
sbb
mov
pop
adc
fisubrl
leave
push
mov
jmp
xchg
repz
cs
loope
lock
stos
fisubs
mov
mov
loop
dec
mov
mov
gs
popf
push
sbb
cmp
popa
aad
push
sub
add
fcomi
xlat
sub
push
mov
push
mov
mov
fidivrl
stc
data16
jmp
dec
in
jb
push
jno
xchg
movsl
fwait
sub
ret
mov
mov
test
int3
cmp
lods
xorl
mull
into
or
cmp
shlb
repz
jae
int
jge
push
and
test
fcmove
xchg
and
or
mov
aas
push
cmp
pop
mov
mov
pop
add
cmp
fnstcw
cs
sbb
push
lret
and
mov
cld
into
les
sub
push
mov
scas
sbb
push
lahf
and
dec
lahf
cmc
je
adc
or
aam
out
arpl
mulb
cltd
fsubrl
shl
testb
fstpl
xchg
jp
iret
xchg
js
push
mov
sbb
adc
or
mov
mov
jnp
into
inc
jg
out
dec
ret
icebp
lcall
sbbb
pop
sbb
push
aas
inc
mov
hlt
mov
ret
lret
push
ss
mov
test
or
cwtl
sub
ret
call
idivb
sub
cmpsl
pop
hlt
mov
inc
in
shll
push
fs
or
push
shlb
imul
les
loope
lret
and
stos
xchg
inc
push
pusha
cmc
jbe
or
jge
lock
xchg
je
and
inc
or
mov
xchg
or
scas
push
nop
or
inc
sbb
jle,pt
xchg
movsb
loope
inc
xor
adc
je
das
shl
dec
inc
movl
jmp
xchg
cltd
lcall
mov
mov
fisubrs
push
test
sub
xchg
mov
jl
push
jp
inc
and
mov
jl
jg
jmp
fchs
aam
adc
cmpsb
mov
in
dec
mov
xchg
lods
and
xor
jmp
pop
dec
mov
cmpsb
loopne
ja
mov
push
mov
lock
mov
popa
aad
inc
adc
xchg
add
mov
fwait
cmp
pop
ds
andb
aam
jle
or
stc
aam
mov
dec
and
shl
jge
dec
push
jecxz
shlb
sub
jbe
stc
sbb
inc
das
jle
pop
shrb
adc
adc
jns
popf
nop
cli
fldcw
adc
adcl
pop
xor
imul
cmpsb
cwtl
test
sahf
xchg
addl
adc
movsb
push
lret
pop
outsb
cmp
cli
decl
push
popa
or
sbbb
sub
stc
out
nop
cmp
subl
dec
repnz
icebp
cmpl
add
faddp
sbb
icebp
aaa
and
mov
mov
push
into
out
mov
inc
dec
fbld
xchg
mov
scas
aaa
les
int
data16
add
pusha
mov
or
xchg
inc
xor
dec
sar
xchg
xchg
mov
adc
dec
mov
popf
shlb
and
mov
or
test
fidivl
arpl
test
insl
int
aaa
lret
sti
jb
js
xlat
gs
scas
mov
cltd
insb
push
outsb
cmpsl
mov
mov
imul
cmp
jle
cmpsb
and
mov
mov
int3
adc
data16
inc
aad
xor
mov
push
mov
sti
inc
rcrl
ja
lcall
aad
and
xchg
outsl
sarl
pushf
sbbb
iret
into
mov
imul
pop
into
out
xchg
addl
pop
ljmp
pop
dec
cltd
push
sbb
jae
les
popf
out
dec
and
test
int
push
jbe
jne
mov
mov
ja
mov
popa
out
push
cmp
out
and
mov
fwait
nop
movsb
mov
and
pop
sahf
aaa
out
mov
push
insb
sarl
movsb
stos
add
sbb
repnz
or
and
test
stc
out
cmc
pop
pop
dec
jns
mov
add
pop
dec
mov
sbb
mov
fbld
adc
arpl
daa
gs
xor
and
push
or
in
jge
subb
call
xchg
adc
jmp
jle
push
lods
add
jne
xchg
jge
in
std
sub
mov
ret
cmc
push
mov
or
dec
xor
xchg
popf
mov
mov
daa
mov
setnp
add
lahf
xor
mov
mov
add
mov
inc
xor
pop
inc
sub
pop
ja
mov
push
ljmp
xor
xchg
in
mov
aas
dec
add
or
pop
push
inc
sbb
daa
sub
add
xchg
ja
std
inc
lcall
xlat
scas
mov
inc
xchg
leave
jmp
mov
sbb
inc
cmp
pop
stos
outsl
sbb
imulb
sub
inc
scas
sub
xchg
adc
scas
mov
and
in
ret
test
roll
mov
mov
mov
adcl
es
rolb
jmp
mull
pop
push
or
aad
jmp
cmp
rcrl
add
pop
dec
std
xor
sub
dec
mov
addr16
ja
negb
mov
sub
lret
mov
xchg
mov
mov
inc
cmp
push
lea
or
bound
cmpsl
add
sarl
cmc
fst
sub
out
movsl
xchg
jae
lock
and
repnz
test
hlt
push
into
xchg
and
xchg
push
cwtl
sub
xchg
aam
fstps
pusha
ret
gs
ljmp
mov
pop
push
lods
aad
push
dec
inc
test
dec
inc
xlat
push
cmp
fistps
lcall
jmp
add
sub
pop
push
imul
push
push
aas
data16
push
pop
ja
mov
or
sub
std
add
fldt
cmp
mov
cwtl
mov
dec
jnp
ds
mov
pusha
movsl
pusha
xchg
gs
pop
inc
mov
push
push
lods
mov
out
cmp
jo
rorb
xchg
mov
das
pop
mov
insl
and
fisubs
adc
dec
imul
mov
dec
sti
ljmp
cmp
and
data16
push
std
push
fildll
mov
fstpt
mov
lahf
daa
mov
mov
sub
lods
dec
imull
xchg
cmc
mov
sub
pop
pop
stos
scas
or
adc
mov
int
push
sbb
xor
jns
mov
mov
pop
pop
sub
movsl
sbb
dec
scas
dec
jns
sbb
adc
lea
enter
inc
shl
cli
sbb
stos
fmul
orb
ja
shll
out
arpl
sbb
jecxz
js
jge
push
push
xchg
add
aas
sub
dec
pop
cmpsl
test
iret
sub
xor
push
inc
ret
in
inc
cmpl
dec
inc
sti
in
stos
xor
xchg
xlat
and
pop
pop
xor
fidivs
pushf
shrl
orl
scas
rcl
in
sub
mov
jnp
lahf
cmp
and
arpl
pop
adc
scas
test
or
and
ret
aam
mov
mov
out
sbb
scas
pop
jnp
push
mov
aas
cwtl
dec
fildll
repnz
xorb
mov
repz
mov
ds
out
inc
mov
push
lret
lret
jle
inc
arpl
setg
subl
repz
mov
mov
aaa
dec
xchg
mov
ss
popf
xor
packsswb
dec
and
xor
mov
sub
cmp
pop
movsb
adc
push
rcll
out
dec
pusha
mov
sub
or
lods
popf
or
call
imul
cmp
aad
scas
add
push
dec
loop
lcall
pop
les
js
mov
xchg
pop
nop
je
or
jo
in
mov
pushf
imul
jno
in
stc
out
mov
in
std
daa
sbb
cmp
inc
push
jecxz
xor
lahf
xor
and
arpl
shl
scas
loop
mov
lret
and
cs
out
jne
pop
rorl
or
mov
hlt
cmp
cmp
in
sbb
out
mov
popf
sti
iret
pop
push
stc
mov
dec
push
jg
cmp
mov
jp
stos
jmp
mov
jbe
fcomps
int
inc
ror
lock
scas
sub
cmc
adc
ret
mov
mov
or
cld
test
mov
jl
or
jmp
mov
adc
in
jge
fwait
std
fucomp
ds
xor
push
fs
mov
inc
inc
inc
stc
cltd
aad
lds
repz
icebp
xchg
std
pop
daa
jns
cmpsb
xchg
mov
and
adc
mov
adc
in
daa
push
jmp
sbb
pop
test
in
jmp
jo
imul
jl
cwtl
fnsave
sub
jbe
sub
loope
pop
in
mov
pop
jmp
cmpsb
mov
arpl
pop
les
cmp
outsb
aas
fcoml
adc
mov
call
roll
dec
andl
jmp
jl
out
jmp
rcr
sbb
decl
hlt
outsb
mov
rcll
leave
les
adc
pop
xchg
xchg
mov
pop
iret
ja
add
andb
pop
rcrl
inc
test
movsb
mov
add
stc
popa
sub
or
mov
loope
loope
fildll
mov
mov
mov
cmp
and
lret
icebp
push
aad
mov
dec
jne
sbb
test
cmpsl
outsl
cmp
outsl
or
fadd
pop
loop
sub
lock
iret
or
subps
push
lock
cmp
mov
daa
jns
sbb
mov
add
scas
in
in
sub
pop
fdivrp
mov
mov
and
jmp
cld
inc
jmp
mov
push
push
push
fisubs
lahf
loop
jmp
pop
mov
mov
pop
aaa
or
or
in
sbb
push
cmc
fldl
lcall
insb
mov
lods
mov
push
xchg
push
mov
out
and
mov
cmp
cmp
dec
push
sub
subl
ret
jle
aas
cmp
in
dec
jge
sbb
aam
test
mov
das
mov
xchg
lret
rol
push
xchg
shlb
jle
repz
mov
mov
stc
mov
lea
add
pushf
push
pop
xchg
mov
push
icebp
cmp
hlt
stc
jge
arpl
pop
jo
pushf
test
stc
jne
sbb
daa
sbb
cmp
movsb
nop
rcrb
cmp
xchg
ds
aaa
popa
decl
ljmp
mov
cli
inc
or
arpl
push
or
fmuls
mov
iret
cmp
lds
out
fcomi
out
arpl
xor
dec
sub
mov
cmc
lds
mov
mov
push
dec
out
sahf
js
inc
out
and
scas
xorl
cmp
lods
sub
mov
xchg
out
mov
hlt
fstpt
cs
push
insb
mov
sbb
adc
xchg
les
xor
push
xchg
pop
jo
or
frstpm(287
xchg
loop
push
xchg
std
jns
cmp
pushl
pop
insl
mov
xchg
xchg
inc
inc
daa
inc
ds
movsb
dec
sbb
imul
mov
jnp
jge
fucom
scas
das
cmp
jnp
sub
sub
push
loopne
ja
mov
fcmovnu
xchg
int
push
add
aas
mov
inc
icebp
lret
stos
pop
stos
ljmp
into
stos
xor
lods
cs
sbb
xor
push
xor
test
bound
lds
sbb
dec
push
inc
add
mov
aaa
mov
daa
stos
inc
lock
loopne
dec
data16
mov
xchg
aad
aas
loop
cs
jp
xchg
scas
dec
int
jno
xor
xor
int
push
dec
sahf
dec
sbb
xchg
jns
sub
dec
dec
mov
xor
js
push
loop
pop
xor
jae
sbb
pop
out
push
daa
xor
push
adcl
aam
mov
lods
pop
inc
push
divb
repz
dec
and
mov
lcall
jno
mov
xchg
imulb
loope
mov
mov
mov
andb
fnstenv
rorl
out
mov
dec
jno
xchg
mov
mov
mov
inc
add
xchg
jne
jo
inc
pop
add
out
dec
mov
sub
es
jmp
mov
cltd
mov
push
sub
inc
outsl
and
rclb
cwtl
adc
lds
imul
inc
add
je
add
and
xchg
nop
xchg
ret
mov
and
inc
std
adc
js
xchg
dec
xor
xor
and
mov
out
scas
fwait
subb
dec
xor
jo
sbb
pop
adc
xchg
cmpl
insb
lret
loop
dec
test
repnz
sbb
pop
xchg
outsb
lcall
bound
xor
ja
out
lock
lcall
inc
scas
push
xchg
push
cwtl
andb
xlat
popa
fsub
pushf
push
inc
hlt
pop
xchg
arpl
in
jno
jae
push
push
out
cmp
mov
mov
adc
aam
sti
xor
cli
adc
jmp
testb
lcall
mov
stc
shl
addr16
shlb
test
pop
and
xchg
sub
xchg
jnp
jmp
and
loope
inc
push
les
aad
ds
test
jecxz
inc
mov
pop
push
xor
ffree
popf
and
or
add
mov
pop
outsb
sbb
sbb
iret
pop
rorl
add
sbb
add
shl
lods
shlb
xchg
xor
inc
fidivrl
jle
pop
mov
mov
fdivl
inc
sti
jmp
mov
dec
outsb
sbb
or
fiaddl
fsts
xchg
stos
jbe
imul
push
imul
pop
lcall
shrl
push
push
inc
mov
cmp
movsl
movlps
sub
imul
shlb
jp
mov
out
push
jbe
in
sbb
cmp
aam
js
push
pusha
shl
inc
ret
xor
mov
or
cmp
gs
int3
sarl
das
in
shrb
cmp
in
test
jp
push
jmp
divb
xor
fs
je
cmp
cld
cmp
std
jmp
sbb
xacquire
push
mov
jnp
ss
push
fistpl
push
xor
sub
and
sub
sbb
xchg
gs
inc
pop
addr16
insb
or
aas
push
inc
add
loopne
mov
scas
or
enter
lret
shrb
loopne
test
cmp
cld
sub
test
dec
fcomi
sub
add
and
mov
fiaddl
shlb
mov
pusha
xor
adc
sub
xor
subl
push
les
scas
xchg
out
sbb
xchg
mov
jecxz
int
lret
out
mov
idivl
lahf
cmc
inc
jecxz
int3
std
cli
jbe
dec
icebp
push
fucom
push
dec
or
stos
popf
xor
add
sub
and
mov
xor
inc
int3
push
mov
inc
repnz
cmp
lcall
sbbb
push
cwtl
add
sbb
jge
inc
in
les
sbb
or
xchg
lods
aad
jge
inc
xchg
pushf
and
xor
adc
cld
mov
stos
sub
jne
bound
sub
pusha
or
cmp
roll
mov
dec
inc
cmovle
ret
ds
scas
pop
leave
jecxz
push
sub
jl
es
not
xor
or
scas
dec
push
jbe
inc
mov
in
int
lret
adc
clc
mov
icebp
mov
and
cmc
gs
sub
mov
shlb
or
push
mov
xchg
and
jnp
mov
cld
outsl
mov
adc
lahf
rcl
sbb
int3
cli
and
or
gs
mov
push
pusha
daa
ss
sbb
cmpsb
dec
pop
mov
mov
push
sub
stos
or
mov
push
fstps
mov
shl
es
lds
mov
loopne
jle
fistps
and
pushf
mov
sub
out
push
or
mov
jns
dec
mov
or
loopne
cld
pop
xchg
pop
pusha
xor
adc
mov
or
fcompl
or
push
lcall
or
aas
jno
xlat
ret
aas
sub
std
call
dec
cmp
loop
mov
aad
add
loope
add
insb
adc
mov
inc
mov
xchg
fwait
mov
sbb
push
insb
nop
dec
mov
pop
lods
mov
fucom
js
jmp
jmp
loopne
jmp
cs
stc
or
ds
sbb
pop
or
sbb
addr16
mov
mov
mov
adc
scas
pop
sub
xor
mov
fdivrp
cmpsl
cs
sub
xor
leave
jle
std
add
lahf
xchg
push
sub
bound
aas
pop
add
orl
lds
sbb
jp
addr16
aaa
and
in
fisttpll
jge
cs
mov
aad
cmpsl
or
sbbl
mov
lret
in
ud1
cld
cmpsl
mov
je
in
dec
and
pop
ljmp
popf
iret
xchg
sbb
dec
fildl
arpl
fwait
and
mov
test
jne
lock
lock
xor
or
adc
clc
jle
and
dec
pop
dec
dec
push
push
rolb
pop
rcrb
mov
imul
scas
fwait
aaa
ret
incl
jecxz
mov
or
and
cld
fildll
out
fsubl
incb
push
and
fists
pop
mov
stc
sbb
mov
adcl
pop
rorb
loope
dec
jae
add
in
push
loopne
jae
xlat
pop
icebp
sbb
ds
mov
movsl
xor
cmpsl
mov
push
and
sub
lods
loope
and
pop
jecxz
jmp
lret
xchg
enter
sti
mov
popa
stos
mov
out
push
xor
leave
cmp
sub
out
lds
sahf
jbe
inc
inc
mov
xor
out
hlt
hlt
sub
push
fsubrs
in
mov
jno
ss
iret
push
xchg
add
cwtl
mov
cmpsb
clc
cli
push
sahf
push
out
push
inc
imul
jecxz
stc
cwtl
daa
cmc
aad
mov
or
xor
insl
inc
mov
dec
xor
add
cld
xchg
in
shlb
sub
negb
xor
jbe
jnp
mov
mov
and
icebp
mov
sbb
fidivrl
aaa
or
xchg
mov
jno
arpl
inc
pop
ja
rorl
add
adc
push
js
test
and
or
mov
ret
idiv
xchg
aam
mov
mov
test
cld
dec
enter
mov
bound
sub
push
sarb
outsb
mov
call
jns
xchg
mov
inc
imul
pop
mov
xor
ja
mov
sub
push
cli
cmp
or
rcrb
jnp
lods
inc
call
jg
push
add
or
out
mov
imul
inc
pushf
daa
mov
jge
and
xchg
jge
jno
movsb
cmp
dec
or
mov
push
cmp
xor
fwait
roll
mov
insb
mov
rcrl
into
mov
fldt
xor
jnp
add
inc
push
xor
pop
scas
and
jae
jno
lods
jl
fwait
inc
push
das
repz
or
or
in
xchg
lcall
adc
pop
adc
iret
mov
dec
or
lret
mov
repnz
sub
les
shrb
mov
inc
loopne
lods
movsb
sbb
push
inc
pop
lret
ja
add
add
jb
jo
std
push
cwtl
clc
outsl
ds
jmp
or
cmp
xchg
sbb
add
dec
and
xor
fucom
mov
call
sub
push
in
hlt
outsl
pop
jnp
pop
in
out
call
test
xor
ror
sbb
repz
popa
ja
cmp
mov
lret
mov
les
inc
jnp
popa
sub
out
jge
cmp
fldenv
jl
psubb
iret
fcomip
cmp
mov
xchg
adc
xor
in
pop
push
mov
fwait
in
jo
sub
mov
dec
cmp
lods
dec
push
jge
push
subl
lret
stos
push
mov
xor
xor
mov
std
adcb
filds
lea
add
or
mov
mov
pop
jecxz
pop
mov
push
push
bound
cmp
mov
cmp
outsl
cs
mov
fcmove
mov
xor
out
push
idivl
push
cmp
addb
xchg
es
daa
fisttps
jl
fstps
loopne
popf
mov
sahf
mov
mulb
ja
lds
pop
movl
popf
daa
outsl
jns
shrl
movsl
xor
mov
jp
es
subb
cmp
dec
xlat
loope
inc
sbb
and
aaa
or
loope
jg
and
jmp
idiv
lcall
mov
lds
inc
jnp
cmp
cmp
xor
imul
mov
ja
fsubrl
fwait
aad
mov
ja
pop
sub
stos
and
addb
out
push
cmpsb
sti
test
rcr
mov
shll
add
fcmovnb
out
mov
subl
xor
nop
and
call
mov
mov
outsb
or
stos
cmp
popf
and
adc
sub
or
xchg
fsubs
sbb
sbb
cmp
inc
imulb
rcr
mov
not
pop
insl
lods
inc
shlb
fcoml
sbb
mov
sub
lock
inc
aad
mov
inc
mov
jb
inc
popa
enter
add
popf
test
sti
lret
dec
hlt
add
jae
aas
stc
lock
fcmovne
jns
mov
mov
imul
sahf
call
pop
adcb
jp
ret
movsb
repz
adcl
int
outsl
ret
jmp
pusha
iret
test
jle
hlt
nop
lret
outsb
ljmp
mov
sub
gs
jno
and
mov
scas
outsl
test
dec
test
cmpsl
aaa
jno
fadd
je
mov
out
add
mov
cli
das
es
pop
jae
ja
mov
push
cmpsl
sahf
movsl
xor
cmp
xor
sbbl
lods
inc
cmpb
mov
mov
rorl
test
pop
ja
push
in
sbb
inc
aas
xchg
cltd
jns
xor
mov
iret
mov
xor
cmpsb
jp
pop
or
pop
es
mov
scas
push
and
push
addr16
mov
sbb
cmp
mov
xor
loopne
add
and
sbb
sti
cmp
sahf
mov
out
scas
imul
dec
into
jno
mov
repnz
testb
mov
movsl
push
xchg
sti
xchg
and
ljmp
cmc
cmp
adc
je
cltd
lcall
and
mov
xor
jp
adc
dec
stos
jge
roll
movsb
xchg
cmp
xor
sbb
jo
jns
add
xor
adc
lea
and
cmp
mov
cmpl
push
and
stos
add
ds
add
pop
loope
in
rorl
imul
es
ret
ljmp
mov
pop
adc
add
lds
addr16
jns
pop
jb
loop
scas
lahf
sub
test
cwtl
lock
mov
mov
icebp
enter
push
xchg
adcl
aam
sub
adc
mov
cmpsl
xlat
in
arpl
sub
test
mov
mov
jne
sub
test
in
inc
data16
movsl
movsb
dec
sub
incb
lcall
pop
push
pusha
dec
mov
mov
imul
std
push
xchg
scas
add
lret
cmp
jb
outsb
inc
add
xor
mov
repz
int
xchg
js
imull
xchg
or
gs
add
mov
mov
clc
outsb
push
js
js
daa
push
sbb
cmp
dec
ss
add
dec
mov
sbb
xor
inc
stos
pop
sbb
add
les
xor
adc
out
mov
fs
fwait
jg
ret
imul
add
mov
out
mov
mov
push
add
fcmovbe
rorb
stos
add
rcrb
iret
into
shlb
in
jo
pop
movsb
jg
imulb
call
pop
testb
aaa
inc
or
aas
pop
xor
xor
mov
lods
mov
es
sbb
fbstp
ja
mov
and
xchg
hlt
mov
pop
dec
gs
in
fbld
jno
repnz
jb
xchg
pop
sub
cmp
pusha
xchg
neg
scas
movsl
and
test
mov
jbe
cmpsb
pop
mov
xchg
shlb
push
ljmp
addr16
xchg
mov
mov
add
ljmp
cmp
testb
mov
movb
jecxz
dec
jmp
jge
outsb
mov
lret
ljmp
lcall
pop
lea
xchg
inc
sub
sbb
mov
mov
push
sar
sub
and
and
sub
inc
mov
jle
mov
lods
mov
jo
and
std
repnz
and
das
gs
mov
inc
sbb
mov
ret
sub
insb
aaa
iret
push
cmp
mov
jp
ret
push
imul
fld
hlt
out
pop
jg
jle
sbb
mov
jno
cmp
push
mov
inc
lods
cmp
push
ja
mov
cmp
cli
je
in
push
or
mov
adc
into
lret
jecxz
fisubrs
push
push
fisttpll
and
test
stos
sbb
cmpsl
push
or
lock
je
sub
lcall
add
fdivrl
cmc
mov
xor
arpl
mov
sub
jne
bound
out
xor
mov
sbb
iret
pop
arpl
sti
scas
das
jle
inc
adcl
orl
push
pop
and
cli
popa
xor
clc
pusha
outsl
dec
and
cs
out
cmpsl
nop
mov
dec
jmp
xor
and
lahf
adc
or
jl
inc
jo
cmpsl
or
outsb
pop
aas
das
push
xchg
mov
icebp
mov
fld
xor
bound
and
inc
cmp
pop
and
xlat
cmp
adcb
jae
sub
das
dec
cmp
mov
xchg
out
ret
push
cmp
mov
mov
out
fwait
mov
int
mov
jb
sub
arpl
cmp
call
pop
cltd
das
lret
adc
mov
sbb
cmpsl
pop
cli
inc
jmp
outsl
cli
andl
adcl
dec
sahf
cmpsb
xchg
jb
dec
mov
lahf
ret
int3
inc
jne
das
push
pop
dec
ret
push
mov
sbb
mov
sub
jne
pop
sbb
cwtl
jbe
cli
push
aam
add
jae
pop
adc
insl
iret
icebp
pop
mov
jne
lahf
mov
push
jecxz
xchg
sub
dec
enter
lret
add
les
pop
insb
cmp
jle
aad
pop
ljmp
je
out
push
pusha
ss
cmpsl
imul
mov
aam
pop
xchg
jb
cwtl
fadd
addr16
cmp
jbe
loopne
jecxz
shlb
pusha
xor
mov
mov
icebp
and
clc
out
inc
jecxz
or
mov
mov
xchg
mov
scas
sahf
data16
jmp
mov
sbb
inc
negl
or
aam
movsl
mov
in
pop
or
int
mov
push
pop
lret
jbe
inc
shlb
call
test
fldl
mov
stos
xchg
orl
pop
iret
xor
sbb
sahf
push
rorl
es
jp
mov
in
dec
push
pop
call
push
xchg
mov
sub
imul
sbb
fs
das
xchg
push
sub
or
xlat
inc
popa
daa
sbb
pop
dec
and
clc
mov
mov
test
xor
es
daa
loop
mov
mov
imul
loopne
aam
gs
dec
loopne
loop
test
pop
pop
pop
push
jb
movsb
pushf
sahf
jecxz
repz
outsl
imul
fimull
fsubrs
scas
pop
insl
outsb
inc
jnp
bts
mov
lret
sub
shl
out
cli
stos
or
fmull
test
inc
mov
in
ficoml
jmp
or
inc
addr16
adc
inc
xchg
shrd
mov
inc
xchg
or
mov
dec
xchg
cmp
inc
sub
movsl
inc
sub
push
lret
cmp
xchg
or
outsl
adc
or
sbb
mov
or
into
sti
lock
mov
cmp
mov
push
enter
movsb
push
push
aas
icebp
data16
xchg
inc
mov
leave
incb
cmp
cmpl
into
test
xchg
pushw
or
shrb
cmp
xor
fwait
scas
xchg
dec
ret
or
lods
lahf
pop
shrl
dec
sub
jg
ficompl
push
imulb
xchg
mov
movsb
adc
mov
jp
lahf
inc
shll
sub
sbb
push
pop
sub
test
cltd
dec
xchg
scas
jns
outsl
cmp
cmp
into
daa
cld
and
cld
filds
and
roll
mov
adc
inc
pushf
xor
pop
dec
jne
and
adc
aam
adc
and
and
pop
and
test
call
inc
lcall
cmp
push
es
hlt
or
inc
stos
inc
push
lret
jnp
gs
in
int3
aas
jge
imulb
inc
dec
cltd
mov
xchg
roll
sbb
push
mov
and
xchg
and
sub
aaa
fwait
imul
es
enter
mov
pusha
adc
jb
mov
and
push
lds
or
test
les
lods
jbe
push
adc
mov
inc
arpl
in
mov
jb
out
push
mov
repnz
xchg
mov
ja
cmp
pop
outsl
fbld
incl
cmp
inc
mov
test
pop
lcall
movsl
xchg
ret
and
push
cmp
dec
bound
test
pop
pop
jmp
enter
leave
jle
in
push
popa
jmp
xchg
jg
scas
test
and
push
pop
fisubs
and
jmp
nop
mov
dec
push
jp
add
dec
pop
in
ljmp
push
xor
cmpsb
mov
outsl
jo
and
jno
leave
mov
cmpsl
mov
loopne
out
xor
dec
dec
ret
movsb
adcl
shlb
jge
push
or
cmp
popf
mov
adc
mov
mov
insl
pusha
mov
jnp
into
das
lock
mov
dec
scas
cmc
pop
ja
scas
sbb
cld
adc
lds
out
adc
xchg
inc
pusha
dec
out
mov
out
add
je
in
fwait
adc
lods
nop
push
sub
inc
loope
pop
pushf
orl
cwtl
jmp
cmp
xchg
outsb
jno
fwait
lcall
in
mov
mov
lods
leave
dec
loop
leave
aas
mov
bnd
fisubrl
inc
out
sbb
xor
ljmp
and
jle
add
inc
jmp
inc
loop
icebp
jmp
sub
cltd
iret
add
xor
inc
inc
scas
mov
fwait
jge
inc
sbb
sub
dec
mov
jle
dec
mov
mov
jns
in
xchg
mov
gs
pop
hlt
cmp
adc
dec
gs
pushf
orl
mov
push
xor
push
scas
jno
ret
sbb
pusha
mov
out
xorl
out
aad
mov
and
inc
loopne
pop
std
loop
lds
pop
jge
push
adc
pushl
adc
loopne
cmpsl
dec
lea
lock
jnp
push
in
and
movsb
and
jle
push
xlat
inc
pop
adc
cmp
jae
imul
stc
cs
or
cltd
xor
sub
cmp
jnp
negl
out
dec
enter
dec
jle
xor
subb
mov
sbb
sbb
push
dec
es
xor
push
adc
inc
fimuls
jo
dec
test
mov
cld
out
test
jp
fisubs
aam
call
ficomps
loope
push
test
cli
shl
xor
lahf
scas
and
cltd
mov
lret
sbb
fdivr
push
sbbl
pop
subb
cmp
popf
arpl
cs
ret
pop
fcompl
or
in
cld
rcr
cmp
or
arpl
jmp
xchg
inc
pop
push
fstpt
loopne
test
cli
cmpsb
sub
ds
jnp
xchg
fildll
out
loopne
push
dec
mov
test
in
add
sarl
add
or
push
gs
add
xchg
push
adc
cltd
dec
aam
loopne
sbb
das
lds
adc
dec
xor
fst
jp
out
pop
jge
pop
jg
lods
in
xchg
aam
push
push
out
sbb
add
mov
lds
fwait
mov
push
subl
dec
int
xor
and
push
inc
sub
je
add
in
xchg
rcrb
cmp
into
jae
pusha
out
cmp
dec
xchg
dec
cmp
fwait
sbb
into
xor
adc
testb
xchg
xchg
out
jmp
test
nop
std
fadds
jle
enter
ror
jecxz
cld
mov
cmp
add
rcrl
sahf
push
shl
push
repnz
mov
jmp
mov
sub
ja
pop
mov
stos
and
jbe
lock
dec
pop
mov
cmp
sub
gs
js
enter
mov
fcoms
daa
shlb
aas
adc
pop
add
jne
fsubp
repz
inc
mov
mov
loopne
jmp
push
jns
pop
sahf
ds
adc
shr
xchg
lret
push
push
xchg
pop
mov
ret
aam
scas
add
mov
fwait
lods
jp
gs
cmp
jmp
sbb
int3
sub
push
daa
fistps
or
ret
or
imull
daa
and
fsubl
in
fucomip
jo
mov
and
push
inc
inc
arpl
fldl
lods
and
jp
leave
push
ficomps
fmul
cmpsl
adc
pushf
fistps
loopne
mov
sub
xchg
push
add
pop
in
fisttps
repnz
xchg
xrelease
fsubrs
cli
push
and
jmp
test
push
pop
fdiv
jge
cltd
jo
mov
inc
jecxz
xor
xor
shrb
hlt
push
jo
and
jno
jbe
add
imul
bound
pop
shrl
pop
sbbl
xor
xor
pop
int
loopne
popf
aam
xor
add
xlat
and
mov
in
test
cmp
stos
mov
pop
xchg
dec
fldt
out
mov
sub
cmp
sub
lret
insl
lods
xor
lock
dec
push
pusha
cmpsl
lods
push
mov
push
mov
leave
pop
jge
mov
lret
inc
pop
adc
testl
ss
jle
inc
fistl
aam
mov
xchg
inc
xor
test
push
stos
xchg
cli
jns
push
imul
stos
hlt
mov
mov
aad
movsl
dec
jae
xchg
inc
mov
mov
dec
xchg
lahf
pusha
xchg
and
mov
xor
fwait
cmp
mov
test
dec
mov
je
push
sub
mov
cmp
adc
or
mov
cmp
scas
cmp
mov
xor
rorl
out
or
sub
push
mov
jns
adc
aaa
jb
push
cmp
cmc
ficompl
sub
xor
jl
scas
dec
cli
inc
and
shrl
in
in
jge
clc
popa
fdivrs
movsl
xor
cmp
sub
sahf
pop
mov
pusha
adc
xor
mov
jae
cltd
dec
in
js
outsl
mov
mov
sbb
mov
adcl
les
test
out
aam
iret
clc
lock
dec
pop
insl
addr16
mov
pop
mov
jbe
outsl
jae
iret
ja
mov
insb
mov
ret
push
js
cmp
leave
loope
xchg
xchg
mov
fs
fidivs
push
popf
js
lret
test
addr16
lock
dec
mov
scas
xchg
test
ret
inc
jp
jo
xlat
mov
sbb
mov
xchg
popf
je
pop
pop
in
mov
mov
sub
add
mov
aas
movsb
ljmp
in
fbld
mov
sub
stos
ss
aaa
add
mov
or
mov
mov
test
cmp
rol
out
cmpsl
mov
cld
aaa
mov
lds
sbb
into
in
sub
adcl
out
leave
in
movsl
andb
ljmp
sub
repz
iret
in
subl
mov
sub
mov
mov
and
arpl
xor
push
fsubs
and
fildll
imul
aam
out
inc
mov
repz
rcrb
sub
stos
gs
shr
scas
movsb
call
xlat
scas
and
rorl
mov
add
movsl
rcll
ret
movsb
pop
movsl
test
in
inc
dec
lahf
out
mov
loope
push
xchg
mov
movsl
lock
mov
lods
cmp
ds
xor
outsb
neg
sbb
adc
push
mov
dec
sbb
xor
sub
sub
test
adc
sbb
pop
dec
cmpb
sbb
jnp
prefetch
or
pop
xor
and
outsl
xchg
pop
lret
dec
jg
int
jp
adc
cld
fmull
sub
aam
cmp
call
adc
frndint
sub
sbb
cmp
movsb
pop
repz
xchg
adc
or
dec
mov
pop
aas
push
fisttps
xchg
jns
jo
mov
loope
daa
mov
mov
jle
pop
scas
nop
or
in
outsl
sbb
stos
mov
inc
adc
fnstcw
hlt
scas
stos
inc
lret
sub
ss
lock
and
sub
push
mov
fdivl
push
or
mov
mov
xor
sub
cli
dec
and
fstpl
pop
adc
rcr
cmp
es
fmuls
lock
mov
xchg
pop
fstp
das
aad
pop
loopne
lds
mov
mov
and
out
sub
jmp
rorb
xchg
popa
xor
stc
inc
fcompl
pop
add
mov
xchg
add
sub
lcall
mov
mov
outsb
xor
jl
mov
in
adc
pop
push
pushf
dec
cmp
xor
pushf
cmp
add
shr
and
imul
dec
jo
cmp
mov
gs
adc
xchg
mov
lret
sub
push
fmull
mov
fbstp
mov
out
inc
mov
pusha
mov
or
loope
or
push
ljmp
cwtl
lcall
mov
pop
sbb
out
and
mov
jnp
mov
fldcw
into
push
xor
mov
fsubrl
shl
mov
das
ljmp
xor
rcr
or
mov
mov
lods
mov
fistps
mov
data16
or
divb
sbb
imul
cwtl
fildll
outsl
mov
xor
fs
hlt
jo
dec
add
repz
pushf
std
mov
addb
pop
adc
cmp
pop
imul
std
lock
pop
mov
or
jmp
out
insl
test
or
jns
jne
imul
jo
lea
mov
loope
hlt
mov
inc
out
pop
fsts
pop
imul
dec
or
jae
mov
mov
ret
loop
sahf
lahf
xchg
xchg
pop
or
sbb
xchg
cmp
jmp
mov
out
mulb
or
push
pinsrw
bound
mov
pop
test
mov
sub
mov
sbb
sub
fcomps
cmp
sbb
mov
shlb
mov
test
aaa
je
ja
sub
and
mov
cmp
lds
out
mov
and
xchg
nop
loopne
jp
mul
mov
inc
fstl
push
fistpll
inc
jne
push
subl
lret
stos
cmp
dec
aaa
mov
pop
push
cltd
cmpl
dec
outsl
pop
fwait
repnz
jns
repz
mov
cmp
test
inc
aaa
push
hlt
out
jecxz
aaa
pop
imul
cmpsl
cmp
leave
les
int3
pop
xchg
fisubs
lods
in
push
idivb
dec
inc
xchg
iret
adc
in
cmpsl
mov
lahf
adc
mov
add
sub
lahf
mov
mov
sbb
or
les
mov
fucomip
cmpsb
int
jb
shll
cmpsb
xor
adc
cmc
mov
stos
insl
les
cmp
push
scas
lea
push
stc
mov
add
popl
cmp
dec
dec
mov
lds
or
cs
dec
mov
pop
pusha
mov
sahf
pushaw
fldcw
sti
sbb
jbe
loop
pusha
jg
xchg
in
in
pop
adc
data16
mov
mov
out
cli
sub
in
insb
stos
xor
mov
xchg
lea
adc
lea
add
outsb
sub
es
xchg
dec
lods
pop
jno
xor
in
xor
insb
add
jg
adc
push
and
adc
int
shl
sbb
inc
out
sbb
push
inc
js
rcr
xchg
mov
xchg
dec
or
ds
sub
fs
bound
inc
bound
fwait
jmp
jecxz
movsb
frstor
mov
sbb
cmp
pushl
enter
js
movsb
xor
mov
test
inc
outsl
mov
and
push
adc
xor
pop
adcl
push
rol
jnp
jbe
xchg
pop
or
sub
cmp
mov
lds
add
mov
sar
or
sub
jns,pn
or
scas
shlb
popa
dec
in
fimuls
mov
bound
fdivrp
enter
pop
push
aas
test
and
mov
flds
daa
mov
ljmp
loope
or
int
in
stos
icebp
cli
push
lods
fbld
stos
dec
push
lock
jle
xor
or
sti
push
sti
add
rcll
sbbb
shlb
leave
add
pop
inc
psubb
cmp
gs
jae
dec
jle
rorl
call
mov
test
inc
cmp
cmpsl
js
in
sbb
int3
subb
xorl
insl
xor
and
ficoms
stos
test
nop
push
nop
out
mov
or
sbb
jno
xor
sub
fidivrl
jmp
pop
cltd
out
xlat
scas
lret
adc
adc
aad
pop
std
mov
loope
jne
xchg
cld
xchg
gs
jg
push
xchg
lea
adc
cmpsb
test
pop
out
xor
cmp
ja
int3
xchg
fcoms
xorb
sub
out
lret
shrl
xchg
xchg
dec
jg
gs
and
iret
int3
rol
cmp
sbb
jb
cs
xchg
pop
mov
adc
jno
xchg
test
or
cli
sbb
loopne
mov
dec
shl
push
in
fwait
pop
cmp
cmc
pop
fs
pop
in
jbe
clc
outsl
pop
out
dec
inc
subl
dec
mov
rcr
push
mov
xchg
cmp
cs
or
push
jae
inc
fwait
push
sub
xchg
test
xchg
nop
aaa
pusha
sbbl
xchg
fdiv
aaa
test
outsb
clc
xor
pop
loopne
pop
pop
pop
mov
mov
imul
mov
mov
stos
xor
rclb
sbb
mov
or
pushf
push
push
movsb
cltd
adc
fcompl
inc
push
scas
mull
mov
cmpsl
mov
pop
pop
push
xor
sbb
or
popf
add
jnp
xchg
frstor
mov
xor
test
daa
cmp
lods
mov
cwtl
pop
inc
xchg
addb
mov
jmp
dec
jb
jb
mov
or
insb
sub
push
add
xlat
setae
mov
fwait
arpl
pop
inc
shrd
jecxz
imul
pop
mov
idiv
hlt
jne
inc
mov
loope
jo
jnp
repnz
outsb
mov
stos
mov
lcall
inc
jbe
leave
xchg
mov
insb
jbe
mov
inc
scas
jne
mov
popa
lcall
das
arpl
xor
jns
dec
dec
clc
mov
in
insb
loop
xchg
js
pop
iretw
mov
jo
repz
xorl
add
dec
dec
jecxz
or
cmp
xchg
adc
push
sti
pop
jb
cld
xchg
mov
es
out
xor
and
insl
data16
cmp
pop
jg
xor
mov
push
mov
std
xchg
jl
repz
or
in
paddd
sbb
sahf
aaa
cld
xchg
mov
nop
pop
fistpl
or
mov
repnz
sbb
inc
sbb
sub
push
mov
or
shl
aas
cmp
dec
in
mov
test
jbe
fdivr
dec
add
roll
cltd
js
popa
xor
das
mov
mov
mov
xchg
mov
inc
test
cld
aad
mov
mov
jl
pop
add
sarl
imul
out
sarb
call
adcl
mov
or
roll
neg
out
sbb
ret
outsl
mov
pop
push
push
roll
dec
shll
dec
cmp
shrb
pop
xor
fs
push
mov
movsl
push
jp
ret
pusha
mov
iret
test
loop
fs
sbb
xor
mov
pop
mov
and
pushf
fwait
dec
call
pop
mov
mov
lock
adc
add
sysexit
push
movsb
mov
adc
jo
mov
pusha
mov
int3
rorl
adc
adc
inc
push
hlt
insb
popf
lds
stc
pusha
mov
in
adc
mov
pop
dec
push
xchg
cmp
orb
mov
iret
adc
fwait
cmpsl
call
and
pop
dec
and
and
cmp
mov
test
imul
pop
pop
lds
fsubrl
mov
xchg
fsubrp
imul
repnz
jb
xorb
das
mov
mov
sub
rolb
jae
in
insl
sub
aaa
cld
jge
or
cmc
stc
sub
xchg
movsl
rorb
ja
mov
mov
add
andb
pop
xchg
mov
int3
fistpl
dec
push
lock
dec
mov
stc
and
or
rcl
pop
mov
in
pop
cs
add
inc
cmp
push
xor
aad
mov
mov
push
mov
dec
xchg
xor
pop
cmc
les
jle
sti
mov
lret
dec
dec
xchg
jno
or
push
xchg
test
lods
pusha
adc
rcrb
sti
or
roll
push
imul
sti
adc
ret
cwtl
xchg
sub
add
out
mov
push
sub
movsl
or
testb
js
cmp
xchg
aad
mov
int
pop
sub
mov
lock
push
scas
mov
lret
mov
into
pop
cs
lods
movsb
xor
test
ss
jbe
mov
or
sbb
or
add
sbb
jp
out
jo
mov
shl
inc
and
outsb
jnp
add
je
stos
adc
adc
and
xchg
mov
mov
adc
push
loopne
adc
movsl
out
and
loop,pn
mov
adc
push
ja
insb
je
jne
jno
imulb
lds
insb
jno
pop
jnp
push
sbb
and
test
arpl
xchg
int3
push
repnz
out
mov
hlt
fwait
jg
shrl
or
add
pop
cltd
push
or
cmp
jmp
pop
inc
adc
adcl
stc
mov
aad
lcall
mov
mov
inc
data16
je
xor
ret
push
lds
jne
pop
rcll
sub
inc
dec
mov
je
lcall
arpl
lock
sub
jns
fmull
ljmp
xchg
shrb
stc
rcl
lret
inc
pop
or
dec
imul
cwtl
pmullw
mov
mov
inc
fldl2t
and
pop
shrl
insl
dec
ffree
sub
fsubl
stc
fmuls
mov
xchg
jle
in
cmp
xlat
sysenter
in
mov
mov
sbb
xchg
ja
inc
mov
icebp
mov
pop
cmp
out
xchg
in
jp
int3
nopl
test
cmp
divl
sbb
adc
es
aad
loope
sbb
fsubrs
push
mov
js
fisttps
add
js
jno
gs
adc
dec
sub
dec
in
sbb
movsl
movsb
pushf
arpl
aaa
dec
pusha
and
or
mov
jp
inc
mov
shrb
jne
cmc
insb
inc
icebp
sub
fsubrs
jno
push
test
push
adc
repnz
imul
in
and
sub
js
cld
sbb
lcall
sarl
pop
dec
mov
sub
jmp
lcall
loop
xor
cmp
cmp
not
inc
dec
mov
mov
adcb
push
sbb
add
xor
dec
adc
pop
subl
lods
in
sub
test
testl
scas
lret
cs
aaa
in
and
stos
mov
dec
push
fstl
popf
in
sahf
push
sub
fdivp
xor
addps
xor
mov
xchg
ljmp
shll
jmp
test
jmp
outsb
call
ror
dec
xor
mov
xor
scas
aas
cmp
adc
xchg
sub
scas
mov
arpl
ret
pop
push
mov
aas
push
fcmovu
rorl
xor
cltd
cmpsb
xchg
cmp
scas
sub
aas
dec
add
sbb
cltd
mov
or
cmpsl
decl
cli
cmpsb
imul
std
dec
pop
sbb
popa
xor
int
dec
fucomi
hlt
insl
ljmp
jg
popf
das
inc
xchg
bound
mov
andl
outsb
shr
mov
add
hlt
jae
addr16
outsb
jmp
inc
fsubs
repnz
vandnps
mov
and
sti
add
xor
sti
test
push
insb
jp
sub
jns
pop
mov
fimull
jmp
stos
aaa
pop
popl
iret
outsl
stos
fs
dec
jbe
adc
jae
dec
iret
or
or
aad
mov
lods
and
std
add
jo
sbb
or
ja
lea
adc
out
sbbl
xchg
das
into
jecxz
mov
xor
clc
loop
jmp
pop
movsl
loop
sub
xchg
enter
xor
jle
inc
fiaddl
cmp
jae
sahf
jno
sbb
outsb
adc
ficoms
rcrl
cld
dec
fdivp
call
mov
mov
shr
cmp
inc
add
cmpsb
cmp
insl
fnsave
push
out
in
xchg
mov
mov
and
icebp
dec
jne
orw
sbb
or
xor
fimull
add
xor
pop
and
cmpsb
mov
xchg
mov
popa
jns
jmp
cwtl
fcmovb
mov
notl
cmp
in
incb
pop
push
and
sbb
pushf
dec
adc
mov
mov
sti
stc
pop
cmp
jno
jmp
adc
add
fsubrs
sub
dec
sub
iret
cwtl
daa
ja
mov
xchg
and
mov
lahf
js
fstpl
nop
int3
add
subl
vsubps
imul
dec
in
sub
clc
cltd
add
test
into
xchg
inc
iret
pop
out
push
into
jl
movsb
aaa
lcall
xchg
and
popf
cmp
xor
sub
dec
or
call
mov
mov
inc
call
push
sbb
sbb
orl
or
daa
push
jl
xor
aaa
es
push
jo
mov
jl
push
mov
out
mov
mov
or
imulb
mov
pop
xchg
jno
jae
pop
inc
sub
inc
adc
test
es
out
lcall
ljmp
enter
movsb
and
aas
mov
out
adc
cwtl
push
lock
js
xor
scas
aas
cli
dec
mov
sub
lea
dec
ficompl
bound
cmp
push
rorb
mov
mov
jnp
xchg
das
sub
add
pop
xchg
loopne
orb
add
cwtl
mov
mov
stc
scas
and
jne
addb
fiaddl
pop
xchg
ret
push
push
push
cmp
rep
mov
cmp
dec
dec
xor
inc
inc
les
je
xchg
sahf
movsl
jmp
setle
inc
pop
xchg
in
mov
nop
jb
mov
aad
jnp
push
mov
or
and
dec
sahf
inc
mov
jno
es
sbb
les
inc
dec
lock
ljmp
sbb
cmc
xor
ret
jbe
dec
push
in
dec
repnz
dec
inc
fdivs
movsl
sbb
das
lret
out
xchg
mov
sub
mov
dec
das
sub
inc
xor
nop
mov
lret
or
pop
push
jge
or
fidivrl
std
push
lds
iret
mov
aad
andnps
dec
push
lock
jns
xchg
dec
mov
and
test
lret
fwait
jecxz
dec
sbb
data16
ret
sub
ja
addb
and
out
push
add
sti
cltd
das
fwait
call
lret
fcmovu
idivb
sbb
out
pop
adc
int3
add
inc
stos
jnp
stc
sub
rolb
orl
ficoml
test
xor
jle
fsubs
jp
cmp
jns
inc
mov
lods
push
mov
movsb
push
mov
adc
ds
pmulhuw
dec
lret
sub
flds
pusha
insb
mov
sbb
aad
outsl
stos
adc
divb
adc
dec
pop
mov
ss
aaa
sahf
mov
mov
into
or
adc
inc
scas
test
mov
xor
mov
call
mov
loopne
ret
arpl
pushf
cmc
outsb
add
dec
dec
xchg
insb
adcl
out
mov
sub
or
lret
sarb
testl
notb
shlb
out
sub
fsts
lods
dec
inc
into
inc
aam
sahf
int
jg
inc
mov
cmc
xchg
push
fs
xor
xchg
loopne
sbb
pop
call
push
pop
dec
notb
fwait
outsl
push
and
or
or
inc
cmpsl
repz
sub
cmp
rcr
jecxz
out
adc
xchg
test
enter
rolb
stc
pop
xchg
mov
clc
sbb
mov
sub
lahf
cmp
xchg
adcb
je
ja
push
jle
lods
pop
ja
jo
jp
pop
movsb
pushf
repnz
pop
test
sarb
or
gs
lods
jecxz
shr
inc
sub
insb
das
cs
inc
jne
rorl
loop
subl
loope
in
lret
cmc
dec
sub
inc
call
clc
addr16
adc
push
add
jle
add
pop
test
je
cmp
jo
addb
pop
sbb
push
cld
jmp
fnstenv
mov
pop
sub
add
jno
lret
adc
sbb
xor
test
and
and
and
outsb
adc
mov
mov
popa
and
xor
xchg
sub
pop
daa
jns
cmpb
adc
add
ret
ret
mov
cmp
mov
add
fsts
dec
xchg
inc
dec
mov
fldt
sub
mov
mov
in
call
in
inc
imul
jecxz
add
test
adc
cmp
add
xchg
enter
stos
aas
es
pop
jmp
mov
and
mov
mov
cmp
jmp
xor
lret
mov
mov
mov
lea
pop
push
out
push
cld
sbb
add
push
sub
loope
inc
fwait
mov
mov
or
daa
lahf
xorl
mov
call
mov
rolb
int3
inc
jg
fisttpll
inc
movsl
sti
push
fisttps
xchg
and
lea
ja
lea
insb
cmp
mov
push
lock
aaa
cwtl
imul
test
jle
cld
cmp
xchg
xor
fsubr
inc
shr
rclb
hlt
push
cld
insb
dec
into
xchg
jnp
pop
or
adc
enter
aas
scas
stos
mov
sahf
ret
and
movsb
sti
mov
out
push
pop
insb
shl
aaa
push
int3
xor
mov
dec
mov
pop
sbb
jg
cmp
sub
pop
add
lcall
push
pop
mov
stos
xchg
sar
gs
out
mov
fwait
push
jg
lcall
pusha
in
mov
fs
sbb
add
push
xor
mov
ss
test
loopne
cli
movsl
xlat
out
xlat
pop
push
sti
emms
dec
jg
leave
pop
jo
ljmp
push
jecxz
dec
outsl
in
shl
cmp
loop
xor
std
mov
sarl
jns
lret
popa
jae
mov
or
mov
rolb
and
das
xchg
aas
sarl
inc
scas
inc
mov
test
stos
data16
inc
dec
adc
and
out
jl
rorb
xor
inc
fistps
jle
test
pop
lahf
push
sub
mov
mov
pushf
std
jp
and
arpl
sub
cmp
aaa
mov
pushf
divl
xor
cmp
dec
sahf
inc
xchg
inc
mov
lods
add
cmp
adc
repz
mov
mov
xlat
lret
or
dec
daa
pop
xchg
pop
add
mov
cs
and
pop
icebp
rol
icebp
ffree
aad
xor
pop
mov
jbe
xchg
ljmp
mov
fistl
dec
push
jb
add
lods
cwtl
mov
cwtl
loop
sub
js
shll
loopne
daa
mov
out
sbb
dec
scas
out
mov
hlt
xor
or
shlb
int3
xchg
xor
test
mov
dec
pop
mov
stos
shll
xor
je
or
stos
ljmp
pop
cs
frstor
or
xlat
das
mov
inc
fsubs
test
inc
mov
addr16
mov
pop
es
fmuls
xor
jo
and
pop
adc
scas
fisttpll
or
insl
pop
sbb
shll
sbb
das
jb
std
jg
vmovntps
rorl
and
sub
mov
lea
mov
aad
fwait
adc
lods
call
push
incl
mov
es
or
cmpsl
mov
lds
pop
ja
inc
ret
out
mov
imul
mov
pop
mov
lret
fistpll
daa
jp
mov
aaa
scas
dec
imul
add
icebp
mov
xchg
ret
imul
mov
xchg
mov
imull
nop
or
insl
shrl
leave
sub
pop
jle
push
cmp
pop
xor
cmp
jne
jns
xorb
ret
xchg
jne
mov
adc
in
dec
sub
andl
inc
adc
ret
mov
fistps
mov
ljmp
gs
inc
or
adc
pop
stos
repz
pop
pop
and
adc
mulb
dec
jne
inc
jbe
sbb
xchg
push
fxch
jg
ret
and
repnz
mov
mov
xchg
cmc
add
inc
mov
scas
xchg
jmp
jno
mov
and
mov
xchg
jle
and
arpl
mov
fldl
iret
sti
dec
jae
sbb
or
mov
mov
sub
pop
jecxz
sub
and
int3
popa
out
sub
pop
mov
jl
mov
pop
loope
lds
mov
ret
ror
mov
das
movsb
xor
sbb
out
mov
add
ficoml
cmp
imul
sahf
inc
jge
inc
mov
xor
mov
es
pop
jnp
hlt
xlat
stos
jg
mov
ret
pop
xchg
push
mov
jne
les
jl
test
nop
rcrl
jl
aad
das
scas
scas
pop
gs
push
gs
jge
cmp
fildl
fwait
push
lcall
xchg
cmpsl
mov
test
mov
cs
fidivl
fldenv
pop
js
shrl
mov
ficompl
inc
sbb
ret
imul
in
adc
pop
divl
out
int
psubq
in
jl
adc
movsb
ror
adc
adc
mov
jns
xor
aaa
xor
xchg
test
cmp
dec
mov
sub
imul
xchg
add
add
dec
and
lods
xlat
jp
stc
pop
jl
xor
push
rorb
int3
pushl
xchg
inc
rclb
test
sahf
push
lret
popf
fpatan
in
inc
sbb
iret
repz
xor
and
hlt
mov
jle
cmp
pop
adc
lock
andb
ss
sub
push
in
loopne
shlb
lods
jmp
jne
aas
mov
xor
cmpsl
cmpsl
cmp
jecxz
stc
push
sahf
add
sbb
jbe
add
fs
dec
mov
mov
mov
loopne
adc
xor
and
and
shrl
insl
jae
push
mov
cmp
lods
push
arpl
add
xchg
xchg
push
mov
add
inc
popa
stos
sbb
outsl
jle
out
js
andl
test
adc
and
mov
das
rcrb
dec
pop
clc
cmp
in
xchg
push
cmp
flds
aas
sbb
xchg
cltd
enter
jo
adc
popa
push
mov
jbe
sbb
xchg
adc
push
inc
mov
mov
imul
adc
mov
push
jle
pop
sub
dec
sub
sub
outsl
mov
push
inc
jecxz
sub
popa
jg
dec
jmp
in
mov
out
add
mov
pop
loope
cmp
or
mov
out
pushf
cmp
popa
inc
fistpl
je
pop
hlt
adc
or
test
cli
mov
jle
push
daa
inc
cmp
pop
push
sub
pop
cmpsl
adc
xchg
mov
jl
mov
and
stos
cmpsl
in
mov
sbb
lret
jns
and
cmp
mov
xor
xorb
lahf
outsb
jp
add
fst
jb
xorb
aaa
shll
sbb
xchg
xchg
inc
out
cmp
sbb
pop
aaa
sbb
or
ds
mov
push
bound
dec
aam
data16
mov
xchg
int3
aas
insb
out
stc
adc
out
mov
sub
sub
mov
inc
sti
cmc
rcrb
add
imul
into
jle
add
aam
sbb
jle
sbb
mov
into
out
push
cld
add
mov
stos
ja
lods
xlat
inc
cmpsb
push
xor
cmp
jno
and
popa
add
ljmp
cli
push
mov
xchg
loop
das
popf
xchg
and
out
and
jne
sbb
ss
in
adc
adc
data16
xchg
aaa
push
or
jle
adc
inc
jbe
cwtl
test
js
sub
xchg
inc
jle
inc
add
stos
addl
stc
ret
cmp
sahf
xor
jp
dec
dec
nop
into
xor
stos
aaa
into
add
pusha
jmp
subb
pop
mov
notb
xchg
sub
loop
test
add
sub
xchg
cmp
and
and
adc
mov
lret
pushf
mov
shlb
xchg
jecxz
and
mov
fiadds
push
dec
lea
lahf
ja
mov
xor
sar
lods
ss
aaa
test
leave
mov
push
inc
jns
xchg
and
and
cmp
dec
cmp
das
jle
jmp
cld
sub
jecxz
out
nop
mov
fldl
mov
sbb
aam
imul
and
cmp
push
or
cmp
sub
mov
ret
pop
xor
xchg
sub
cmp
mov
jmp
cld
rclb
sub
popa
lods
aas
adc
dec
inc
sbb
in
lcall
cmp
shrb
pop
mov
mov
nop
ret
movsb
in
cs
fsubrs
cmp
scas
clc
iret
sub
jno
movb
dec
pop
int3
cmp
addb
adc
repnz
cmpsl
aam
mov
imul
push
adc
rolw
sahf
inc
push
les
mov
stos
pop
ja
xor
pop
in
mov
sub
nop
adc
pusha
and
ret
movsl
xchg
sbb
popl
out
push
sub
in
or
in
enter
movsb
ret
cmc
enter
jb
mov
scas
push
ficomps
jns
loop
nop
movsl
outsb
fistps
push
lock
jp
sbb
sub
mov
mov
dec
in
push
cld
adc
jbe
mov
cli
into
xor
fwait
push
pop
jnp
sbb
lods
cld
mov
fsub
incb
incb
dec
or
sub
mov
dec
push
sti
push
xchg
in
gs
mov
scas
add
jnp
icebp
aad
xchg
sahf
outsl
sbb
rclb
out
sub
leave
loope
and
and
movsl
sbb
rclb
add
adc
mov
jbe
or
inc
cmp
popa
call
fldenv
cmpb
ljmp
fcomps
jle
xor
outsl
adc
cmp
dec
or
lcall
jp
jne
xchg
mov
xchg
out
daa
out
dec
ret
stos
lds
mov
cli
jge
in
movsb
lds
or
xchg
mov
sub
mov
pop
imul
scas
dec
outsb
lret
jp
adc
iret
mov
cmpsl
ds
lods
nop
aad
pop
mov
test
data16
das
add
xchg
jo
jns
jmp
or
cmc
jl
mov
push
cmp
enter
pop
roll
inc
push
and
in
adc
xchg
pushf
decl
push
or
out
ss
and
mov
adc
add
jne
ds
fldt
pop
fsubl
stc
shll
mov
lods
inc
cmpb
dec
repz
xorl
ja
dec
sub
add
andb
and
addr16
xor
in
sbb
dec
icebp
sarl
out
shrb
js
jae
pop
cmpsb
dec
sbb
add
inc
xchg
popf
adc
and
jbe
lret
femms
mov
bound
pop
repnz
or
mov
addr16
stos
arpl
jp
test
popa
movsb
addl
scas
shlb
xor
and
mov
fimull
or
and
fwait
mov
dec
pop
ja
dec
notb
int3
outsl
mov
xchg
mov
push
cmpsl
mov
jnp
push
repnz
lods
out
mov
mov
xor
jo
popa
das
setl
mov
inc
in
and
ss
fwait
sahf
fstl
mov
mov
cmp
push
repnz
mov
mov
xchg
popf
fwait
loop
adc
xor
loop
sbb
jl
mov
cmp
mov
outsb
popa
or
aam
jb
sbb
xor
addr16
dec
int
sbb
movsl
das
int
or
bound
and
popf
lret
cmc
int
fdivrs
rcll
or
sahf
loop
in
inc
xchg
shl
dec
or
rcll
or
adc
push
notb
adc
xor
and
pop
addl
lods
in
clc
cmp
xchg
int
dec
xor
fisttpll
add
or
mov
ds
movsb
scas
int
jg
rcrb
js
mov
add
fmul
push
inc
pusha
mov
push
xlat
cs
xor
aam
iret
or
push
dec
fisttpll
lret
cmpsb
mov
sub
xchg
loopne
jge
insl
xor
loope
bound
jns
pop
push
push
cld
out
arpl
sub
xor
cmp
push
xchg
imul
push
dec
rcll
sub
inc
xor
negb
lods
ret
decb
cmc
imul
adc
int3
mov
mov
cwtl
push
movsl
int
imul
or
xchg
jbe
mov
test
loop
call
cmpsb
pop
out
push
xor
loope
sbb
or
fwait
push
fsubl
repz
loope
dec
inc
xchg
lock
loopne
cwtl
pusha
jns
popa
ja
or
out
dec
ret
jnp
sbb
adc
fdivl
lock
imul
mov
fldt
dec
cmp
jge
add
ret
cmc
loop
cmp
stos
repz
sbb
jnp
leave
xor
jmp
rorb
lret
push
aad
cmp
push
mov
daa
push
xor
js
cmpsb
push
adc
lret
fists
xchg
loop
popf
pop
xor
inc
jp
xchg
sbb
clc
mov
adc
sbb
faddl
mov
ficoms
add
daa
out
push
dec
xor
or
jbe
sarl
stos
test
add
fdivs
lock
outsl
lret
sar
jne
sbb
iret
inc
cmpsb
pop
hlt
or
mov
cmp
sub
fidivl
sub
dec
xor
adc
sub
outsb
adc
rolb
lods
addr16
subb
sbb
jp
mov
fs
xlat
cmp
js
push
inc
inc
sbb
int
mov
outsl
inc
mov
fs
js
inc
xor
ds
mov
push
loop
push
loope
stc
lock
and
xlat
int
sbb
sub
das
mov
ret
jp
mov
ds
and
cmpsb
sar
push
xlat
xchg
rcll
xlat
test
das
nop
mov
inc
outsb
pop
and
sbb
hlt
rcrb
lret
push
lods
pop
nop
pop
shlb
in
or
je
push
test
adc
lods
pop
jg
sarl
push
push
inc
test
imul
add
jne
xor
hlt
aam
cmc
leave
push
cmp
xor
sub
pop
lret
mov
mov
sub
mov
mov
mov
stos
xchg
popf
es
fwait
aam
dec
insl
push
fs
jl
xchg
sti
repnz
jmp
pop
mov
lods
arpl
mov
mov
std
xchg
iret
movsb
flds
sub
jae
adc
mov
es
inc
adc
cmp
movsl
adc
cwtl
cltd
leave
inc
pop
dec
call
cld
adc
ds
xchg
xchg
sbb
or
mov
jae
int
lret
jb
pop
pop
leave
cmp
mov
pop
inc
xor
xchg
cmp
adc
adc
js
and
mov
pop
scas
in
data16
fs
rclb
sub
xor
aaa
jge
mov
dec
push
sub
int3
pop
mov
mov
dec
mov
jns
adc
mull
mov
push
jecxz
add
xchg
sub
cli
xchg
aaa
jnp
mov
mov
cltd
int
pop
cltd
cmp
stos
jmp
les
ret
jg
xor
loopne
pop
insb
fdivrs
mov
inc
arpl
jne
add
les
out
test
in
sbb
push
xlat
fdivrs
mov
cli
shr
daa
cmc
jnp
fs
jp
stos
std
cmc
int
jge
lret
pop
mov
push
rclb
leave
mov
sbb
cmp
jg
dec
adc
into
addl
add
xor
pop
rorl
cwtl
adc
and
cmp
pop
sbb
enter
jb
jmp
mov
and
popa
push
ds
add
push
dec
add
loop
add
dec
or
cmp
stos
jnp
mov
stos
pop
adc
adc
mov
xor
test
fisttpll
stc
jg
sub
imul
pushf
pusha
fdivrl
jbe
adc
lcall
adc
icebp
mov
add
sbb
xchg
or
pushf
cmp
lcall
lret
jl
clc
xchg
xor
mulb
cwtl
mov
icebp
lods
xor
mov
pop
add
cmc
popa
inc
repz
xor
rcl
addr16
insl
fimull
lcall
sbb
xor
cmp
popf
mov
inc
inc
out
adc
fidivs
ret
shl
inc
xlat
aam
xchg
adc
pop
scas
scas
aam
jmp
xchg
filds
aas
xor
and
or
icebp
jp
push
xchg
ffreep
loope
cld
xchg
mov
lret
dec
call
xchg
push
fwait
dec
aad
mov
repz
mov
clc
outsb
push
push
mov
xor
push
or
imul
fwait
in
mov
jg
cmpsl
mov
repnz
test
dec
push
int3
mov
dec
push
and
clc
mov
rcl
scas
xchg
jmp
jbe
mov
in
nop
and
cmp
out
xorl
negb
mov
dec
dec
in
scas
ds
pop
push
mov
xlat
out
sar
lcall
mov
mov
fmuls
dec
push
stos
sbb
stc
cmp
mov
insb
in
cwtl
jecxz
dec
and
fcompl
out
decb
movsl
dec
jns
or
shll
add
jmp
dec
roll
dec
testl
shl
mov
adc
xchg
xchg
or
mov
push
arpl
clc
mov
inc
cs
lods
or
xchg
into
pop
pop
jle
test
daa
leave
in
dec
gs
add
lret
nop
push
call
pop
loopne
mov
push
ja
or
and
push
xchg
stc
idivb
out
in
mov
dec
xor
divl
fisubs
inc
addr16
nop
lock
inc
mov
lcall
push
jecxz
rolb
sbb
rcrl
mov
dec
aas
inc
in
insb
pop
push
mov
and
inc
nop
arpl
lret
scas
inc
adc
or
pushf
repnz
mov
ss
fistps
sub
adc
pop
shr
shl
dec
sbb
mov
sbb
roll
jge
jmp
cld
mov
cmp
xchg
ds
add
cmp
rcrl
pop
popa
sbb
bsf
xchg
shll
sahf
and
stos
cmp
xchg
in
cmpsl
dec
push
fwait
pop
sub
inc
sahf
jp
test
mov
pop
lret
pop
movsb
jle
aas
bound
or
mov
imul
test
int3
pop
mov
dec
ffreep
sbb
cltd
adc
sub
je
xor
and
xchg
or
cwtl
jmp
mov
jo
mov
pop
loope
lcall
sub
fs
shrl
aaa
or
rol
dec
ret
js
or
add
ret
mov
out
into
aam
pop
arpl
inc
int3
inc
xchg
call
into
std
mov
xor
jnp
xchg
sbb
or
dec
jmp
add
inc
in
xor
mov
or
xlat
mov
or
cmp
out
xchg
push
enter
stos
sahf
mov
push
nop
stos
jb
push
pop
dec
out
arpl
pushl
push
rorb
mov
mov
test
in
sahf
cmpsl
push
iret
jl
pop
xchg
aas
nop
dec
sbbl
in
pop
js
jecxz
add
xchg
lods
scas
push
xchg
or
cmpsl
lret
push
xor
or
mov
lret
dec
jns
cmp
mov
sbb
roll
jae
push
lea
hlt
stc
nop
lods
sub
pop
sbb
mov
scas
clc
mov
lea
sbbb
enter
ss
pushf
in
add
and
js
mov
mov
addr16
je
mov
push
outsl
pop
pusha
sbb
mov
clc
push
std
shll
and
mov
xor
or
mov
push
insb
lcall
mov
lahf
xchg
xor
test
and
and
xchg
mov
and
jbe
stc
shll
inc
and
push
into
sub
mov
icebp
lcall
js
jmp
stc
fmull
adc
repz
fucomip
ds
shl
shll
out
mov
push
xchg
subb
jmp
into
xchg
fldcw
sub
push
pop
mov
mov
mov
addb
stos
aam
lret
push
iret
stc
mov
call
rcll
aad
vminss
dec
xor
adc
test
xchg
iret
call
mov
lahf
cmc
clc
popf
jns
sahf
push
pop
imull
xchg
psubusw
in
xor
push
adc
push
pop
jnp
mov
mov
add
pop
mov
rolb
adc
push
popf
push
or
push
pop
add
stos
mov
imul
push
push
fnstcw
jbe
loop
pop
dec
sub
cli
or
and
flds
adc
jae
add
cmc
fs
leave
movsb
mov
sub
mov
jne
cmpsl
cmp
std
test
jo
or
adc
push
cmc
repnz
icebp
mov
stc
cmp
or
and
sbb
nop
shlb
fsubl
jbe
xor
movsb
adc
repnz
shlb
movsb
ljmp
or
xor
pop
adc
ss
lock
fdivrp
mov
js
jbe
xchg
mov
jo
lret
cwtl
inc
je
ljmp
or
pop
and
xchg
ret
adcb
mov
outsl
mov
jg
lcall
or
jl
insb
mov
inc
int
imul
outsl
aas
jae
pop
mov
adc
jo
dec
repz
and
cmp
leave
add
es
pop
mov
mov
loope
sub
pop
bound
stos
push
into
shlb
sub
fdivrl
or
pop
hlt
adc
inc
loope
xchg
push
jle
dec
xchg
cwtl
push
mov
cwtl
stc
in
cwtl
sbb
xchg
pushl
in
fisubs
aam
nop
push
add
insl
pushf
adcl
pushf
dec
adc
sub
push
sbb
dec
push
push
pop
sqrtps
cltd
push
pushw
cltd
lods
pop
xchg
mov
ret
pop
imul
jno
push
or
xlat
loop
into
mov
or
gs
daa
imul
iret
fsubr
xchg
or
jae
mov
dec
jle
je
cmc
frstor
test
icebp
out
imul
xor
sbb
in
mov
jge
inc
inc
jecxz
in
push
les
push
rcr
stos
inc
push
clc
rcrb
push
sbbb
xlat
movsl
xchg
ss
stos
lret
daa
jmp
cmc
in
dec
outsb
mov
xchg
xor
xor
out
cmp
movsb
sub
inc
je
mov
push
mov
adcl
sahf
shlb
stos
mov
scas
sub
jno
inc
roll
sbb
loop
imul
jmp
pop
add
xchg
sbb
add
jg
adc
or
xchg
xchg
sub
jl
data16
push
test
aas
in
popf
and
loopne
dec
arpl
loopne
in
inc
fsubl
sahf
mov
scas
or
mov
dec
pop
jne
inc
loop
out
addr16
jg
inc
or
adc
clc
and
nop
orl
sarb
sti
dec
test
mov
test
jns
test
jnp
inc
lret
test
movsl
xor
inc
add
inc
std
xchg
sbb
push
outsl
pop
pop
mov
inc
sti
test
popf
and
fidivrs
idiv
lock
in
jo
inc
nop
cmp
xchg
inc
jae
adc
ret
xorb
jecxz
xor
scas
addr16
jl
push
mov
je
shrl
xor
xchg
sbb
mov
imul
iret
out
xor
ljmp
jecxz
and
mov
lock
pop
inc
adc
pop
mov
popa
or
mov
xchg
jns
push
out
cltd
jge
cltd
jns
sub
cwtl
in
inc
mov
fsubrs
dec
insl
xor
push
loopne
push
add
pop
clc
fnsave
adc
sbb
pop
adc
adc
pushf
stc
jecxz
inc
fwait
xchg
mov
mov
add
ret
sub
cmp
jl
gs
mov
jns
lahf
mov
lea
dec
lret
int3
mov
outsl
mov
je
push
add
mov
jo
notb
mov
in
int3
push
mov
cld
mov
mov
jmp
nop
fst
pop
push
stc
loopne
sub
addr16
jne
fs
xor
test
mov
cwtl
stos
lock
push
fbld
aad
adc
pop
call
jb
jae
xchg
divb
lret
inc
xchg
push
lcall
movsb
mov
jne
les
imul
push
lock
addl
xlat
rcrb
sbb
xor
pop
adc
js
sub
pop
insb
dec
lods
mov
out
mov
js
enter
movsl
mov
jecxz
orb
jecxz
cmpsl
sahf
aad
xchg
mov
dec
push
ljmp
dec
es
in
mov
insb
pushf
lss
lock
xchg
aad
inc
pop
test
movsb
jg
ljmp
inc
jns
daa
adc
addb
mov
pop
xchg
in
das
inc
jge
out
hlt
jmp
lods
icebp
mov
in
outsl
or
push
in
mov
add
cmpsb
pop
xor
sbb
inc
and
mov
in
rcrl
sub
add
sbb
dec
iret
pop
outsl
add
or
fadds
movb
mov
push
lcall
sbb
push
pop
mov
gs
xchg
xchg
aad
sub
or
outsl
cmp
push
and
mov
fwait
data16
jle
cmp
jle
xchg
xor
call
jo
adc
fidivrs
mov
adc
int3
aam
xchg
jne
imul
std
sahf
into
sbbl
and
in
cmp
cmpsl
mov
mov
dec
inc
sbb
jbe
fsubl
push
mov
lea
sub
gs
andb
out
les
ss
xchg
mov
adc
fdivl
sub
ret
es
mov
jbe
sahf
popa
mov
mov
hlt
push
loop
xchg
mov
mov
int
jne
jb
test
cmp
jbe
xor
call
xorb
push
in
iret
stc
in
std
movsb
gs
test
jno
sbb
pop
add
and
xchg
arpl
xchg
loopne
mov
iret
addr16
mov
xchg
stc
test
cld
cmpsb
mov
or
jp
rcll
jle
cli
add
mov
mov
test
mov
daa
das
sti
mov
dec
pop
xor
cld
cmp
test
and
mov
and
push
mov
xlat
das
int
and
jo
add
sub
and
lret
pushf
inc
aaa
cwtl
jo
dec
mov
jno
xchg
out
add
addr16
pop
repz
loop
pop
hlt
cld
shrl
cli
sub
fcomi
out
je
mov
push
cwtl
mov
sbb
mov
cmp
outsb
xchg
roll
sub
or
lock
sbb
lock
movsl
lret
mov
pop
sbbb
inc
addl
cs
mov
jne
xor
xor
jge
inc
pop
pop
mov
sarb
dec
inc
xor
pop
cwtl
add
jg
out
add
popa
jno
sbb
xor
aam
enter
sub
movsl
cli
loopne
pusha
ret
test
in
out
movsl
jg
push
mov
fs
xchg
mov
arpl
mov
test
add
xor
pop
xchg
add
jb
or
push
inc
repnz
xchg
das
push
xor
jle
push
sbb
pusha
out
dec
cmp
dec
call
and
cmp
fistps
hlt
lock
jg
sahf
imul
or
jl
push
mov
inc
add
dec
and
xchg
pop
sbb
pusha
add
bnd
push
add
push
cmp
mov
jge
int
sbb
jns
adcb
add
mov
pop
mov
xchg
mov
sbb
lock
sbb
ret
xchg
stc
jl
fadds
stc
sbb
imul
clc
shlb
or
mov
jmp
jno
ret
fabs
or
mov
sbb
adc
jnp
out
ds
js
mov
cmpsl
mov
mov
out
popf
cltd
or
stc
dec
adc
jge
sub
test
xlat
mov
lods
sbb
inc
cmp
repnz
fwait
xor
pop
lahf
lock
mov
mov
fs
sub
cmp
inc
add
icebp
push
test
push
mov
xor
xchg
rorl
adc
popf
sub
aam
test
or
icebp
inc
out
adc
cs
xor
pop
mov
dec
mov
pop
mull
mov
xchg
sbb
or
jmp
push
jns
stc
nop
xchg
jae
lret
sbbb
and
mov
mov
icebp
jg
int3
insl
cmc
sbb
leave
jecxz
add
mov
add
popa
xchg
int3
aas
inc
aam
pop
shl
loopne
incb
xchg
mov
sbb
jno
adc
push
cmp
ljmp
jmp
dec
mov
mov
popa
xchg
add
pop
in
test
stc
cmpsb
sar
xlat
dec
es
push
push
mov
movl
push
sbb
push
loopne
movsb
inc
jbe
pop
arpl
inc
in
xor
sbb
test
mov
aaa
dec
mov
fwait
or
leave
js
ljmp
aaa
jne
sahf
repnz
out
add
sahf
jb
enter
pop
jg
fwait
dec
xchg
jp
outsb
insb
xor
aaa
mov
add
out
pop
enter
cmp
or
loope
aad
cmp
mov
jb
out
pop
movhps
popa
sbb
mov
or
dec
inc
jno
cmpsb
es
mov
jecxz
repz
repz
in
sbb
cmp
cmc
pop
repnz
popf
sbb
add
sahf
adc
dec
int
jb
adc
bnd
mov
jae
test
enter
jmp
mov
loop
inc
inc
xchg
loop
gs
pop
inc
xlat
pop
andl
jns
sbb
add
add
cmp
jl
or
mov
cld
test
das
mov
scas
mov
mov
jae
push
and
rcr
or
or
mov
add
xchg
jle
inc
mov
mov
ficompl
pop
pop
inc
mov
dec
in
cli
cmpsb
jae
es
lret
cwtl
test
pop
jo
push
pop
lahf
mov
lea
pop
dec
mov
adcb
pop
or
aam
mov
in
imul
jmp
add
xor
lahf
cli
out
sub
inc
mov
sub
sub
xchg
in
cmp
out
cwtl
jp
das
in
mov
test
adc
ret
push
shll
sarb
cmp
inc
js
add
repz
sbb
inc
dec
test
jno
in
cmpsb
jns
aaa
inc
in
popl
jg
xchg
mov
ret
cs
jb
rorl
inc
repz
cld
js
inc
sub
cmp
and
inc
fsubr
add
or
cwtl
fwait
pusha
aaa
xor
mov
lock
xor
and
xorb
mov
inc
mov
imul
movsb
fisttps
or
shrb
inc
int
lret
gs
test
xor
push
pop
cmp
jp
cmp
add
outsb
mov
aas
mov
mov
cmpsb
aaa
jle
mov
in
into
test
rcrb
push
fwait
dec
xor
sbb
inc
mov
jo
scas
popf
cmp
rorb
aad
add
jg
xor
clc
js
sahf
insb
in
dec
pop
jmp
hlt
daa
dec
icebp
rcll
aas
push
mov
gs
mov
lcall
fwait
inc
pop
arpl
and
sbb
mov
mov
shlb
sbb
pop
push
scas
xor
mov
mov
adc
and
ret
push
sti
or
jns
push
inc
das
in
jbe
mov
mov
dec
add
push
mov
push
aam
jae
xchg
outsl
jle
das
adc
mov
test
loop
subb
mov
dec
push
adc
data16
daa
add
shr
cmp
scas
nop
retw
and
mov
loopne
xchg
xchg
sar
jge
mov
pop
ljmp
dec
jbe
shll
popa
es
in
xchg
lods
adc
and
test
pushf
sub
and
lds
dec
pop
stos
sub
adc
mov
jns
in
inc
mov
jmp
test
or
sub
in
pop
jae
icebp
popf
add
aaa
cmp
ja
sub
mov
shlb
fiaddl
jo
pop
dec
bound
lret
bound
jne
shrb
inc
add
or
push
xchg
jns
jmp
pop
testl
mov
push
fucomi
push
push
adc
stos
xchg
cmp
test
mov
dec
push
ret
mov
sti
cltd
pop
mov
sbb
mov
push
jne
mov
dec
loopne
and
and
push
cmp
jg
mov
stos
jno
mov
out
jb
lods
lahf
inc
push
out
xchg
jns
adc
adc
jbe
jl
push
test
cmp
sarl
popf
out
hlt
cmp
aam
stos
sub
pop
push
xchg
shll
jp
insl
cmp
bound
mov
and
jecxz
add
rolb
sarl
or
jmp
je
cmpsb
sub
nop
addr16
push
in
rclb
xchg
add
inc
lock
push
imul
pop
into
push
pop
mov
inc
ss
jmp
cmp
push
nop
inc
leave
icebp
xor
daa
test
aam
jns
cwtl
fldenv
fnstsw
test
leave
in
sbb
fwait
aam
imul
dec
xchg
push
cmp
mov
cmpsl
test
sub
or
xchg
dec
or
mov
push
pop
shll
scas
xchg
adc
ja
jl
scas
mov
fnstsw
cmp
xor
xchg
stos
inc
ljmp
adc
imul
xchg
jmp
imul
movsb
pop
lahf
inc
es
mov
xrelease
into
lcall
cmp
repz
cmpsb
adc
sub
jp
std
scas
jmp
sub
jbe
fisubl
into
lret
lea
mov
in
add
sub
mov
push
iret
stos
lods
cwtl
fbld
pop
rol
push
cwtl
sbb
add
imul
enter
cltd
xchg
push
mov
out
push
mov
or
xchg
cmp
mov
lahf
inc
ret
fbld
mov
jbe
dec
pop
fwait
dec
or
imul
push
mov
ljmp
scas
lcall
or
fidivl
add
aas
rorb
in
lods
push
ja
scas
pop
enter
repz
push
stos
xor
ss
es
jne
jecxz
push
xor
ljmp
call
xchg
mov
mov
cmp
and
sub
test
xor
addb
int3
aas
into
or
adc
push
call
push
scas
aam
inc
cmp
daa
cmp
stos
inc
push
pop
or
loop
pop
scas
xchg
inc
xor
sbb
cmpsb
xchg
mov
or
inc
add
mov
mov
and
scas
inc
push
push
fwait
push
jle
int3
cmpsl
jmp
aaa
sub
cmpsl
out
lcall
pop
shl
mov
dec
ss
jne
mulb
ljmp
jnp
jl
mov
xchg
push
imul
xchg
jae
jnp
arpl
enter
aaa
xchg
mov
cmp
cmpsb
andb
test
push
xlat
or
inc
mov
and
and
ror
mov
cld
sti
pushf
fst
sbb
out
jge
mov
push
in
adc
mov
sbb
addl
popl
jp
jecxz
gs
jae
lea
sub
adc
mov
push
mov
stc
or
test
lahf
xor
cmp
stos
fimull
cltd
cwtl
mov
pop
out
cmp
popl
mov
cwtl
cmp
mov
sub
adc
nop
sti
mov
adc
jmp
iret
pusha
cmp
cmpsb
push
push
ljmp
add
push
fwait
movsb
mov
scas
push
lds
mov
jecxz
push
addr16
sub
push
or
repz
in
test
les
lods
push
cmp
push
xchg
mov
and
mov
aad
fcoml
push
mov
push
or
das
out
mov
mov
into
inc
ret
xor
adc
xor
dec
lea
push
jl
xor
mov
lods
test
movsl
out
jb
nop
sub
push
sbb
addl
inc
decb
jno
mov
push
ss
jmp
in
stos
daa
enter
xchg
scas
movsb
jg
push
and
jb
pop
mov
jns
jmp
lods
cmp
lock
adc
cmp
setge
push
lret
pusha
data16
stos
push
lods
jnp
cmpb
adc
js
push
fs
fsubl
out
and
xor
jb
mov
mov
icebp
sbb
ret
test
clc
rolb
push
loopne,pn
imul
dec
add
sub
rclb
jne
ja
or
in
lock
cmc
movsl
imul
ljmp
je
outsb
stos
lcall
icebp
pop
loop
aad
cmpsb
add
sar
add
std
xor
enter
imull
xor
mov
jp
imul
subl
test
es
mov
mov
outsl
shlb
in
jmp
xchg
enter
aam
outsb
test
sbb
clc
out
mov
xchg
mov
repnz
cmp
mov
out
leave
test
add
push
pop
cmp
inc
hlt
mov
jmp
xchg
cltd
or
ret
sbb
xchg
test
mov
and
dec
cmpsl
sub
pushf
mov
sub
push
pop
pop
add
mov
cli
pop
lret
popf
negb
arpl
jo
xor
aam
xor
je
sbb
pop
aaa
xor
ret
adc
jmp
cld
lods
mov
mov
jmp
xor
push
jno
out
adc
cmp
sbb
je
mov
repnz
push
test
push
pmulhw
lea
mov
cmpl
pop
push
push
jbe
mov
pop
shlb
inc
lret
cmp
dec
in
outsl
jle
ret
jne
sub
ja
xchg
push
stc
sarl
cld
pusha
jmp
xchg
xor
jne
out
out
xchg
adc
stos
fimull
inc
popf
or
icebp
inc
les
sbb
ljmp
cmpsb
mov
nop
cmp
ja
jo
push
push
outsb
jl
testl
mov
ror
std
inc
insl
adc
mov
mov
add
push
das
das
and
out
inc
ret
sahf
call
dec
cmp
mov
mov
leave
sbb
imul
mov
cwtl
bound
inc
in
mov
arpl
mov
popa
pusha
jne
adc
add
cltd
add
inc
cmpsl
addl
inc
pop
push
push
pop
cwtl
lds
lods
cmc
pop
jae
subb
je
cwtl
inc
mov
push
inc
repz
pushf
pusha
and
movsl
adc
xchg
jae
mov
push
jnp,pn
sti
jnp
imul
testb
insl
aas
push
adc
sbb
loop
cmpsl
sub
rcrl
out
mov
das
jg
sub
repz
mov
jg
addl
into
push
jl
cmp
repnz
mov
les
in
cmp
jo
cmpsb
jl
or
nop
pusha
movsl
sub
jne
mov
sub
data16
enter
sbb
xchg
aas
cltd
adc
testb
push
xchg
mov
mov
sbb
mov
insl
sbb
sbb
and
xchg
test
stos
dec
sti
lcall
pop
pop
fisubrs
push
loopne
leave
jb
mov
and
aaa
xchg
movsl
add
lcall
jb
mov
jl
pop
sbb
adc
je
outsl
jge
cli
or
outsl
adc
add
push
in
inc
lods
push
push
adc
dec
push
jge
dec
push
lahf
clc
in
sbb
mov
or
lahf
or
xchg
in
repnz
popa
shl
inc
or
add
pop
cmp
push
lock
jbe
bound
out
xchg
and
sbb
xchg
jg
and
mov
push
scas
inc
jge
jb
popf
cmp
mov
push
movsb
in
loopne
bound
cmp
dec
out
sbb
in
aas
dec
mov
or
pop
lret
push
xor
in
sbb
loope
xor
fwait
movb
in
hlt
ja
in
push
ljmp
in
pop
movsb
gs
and
xlat
or
rep
mov
cmp
fstpt
adc
mov
cmp
loop,pt
push
lea
fs
out
add
xchg
nop
repnz
xchg
fidivrs
cs
cmp
mov
mov
and
lret
fwait
stos
loopne
jle
das
iret
mov
popf
addr16
push
cwtl
jb
pop
pop
imul
rorl
push
movsl
outsl
sub
fcompl
pop
xchg
push
sbb
mov
push
add
mov
loop
insl
xchg
pop
fcomps
ret
sbb
stos
jle
mov
cld
je
aas
push
aas
lahf
mov
mov
xlat
add
push
pop
dec
adc
outsl
int
cs
add
jbe
jg
adc
sti
ss
xor
icebp
sbb
les
dec
and
jns
or
aas
inc
add
pop
mov
mov
xor
push
stos
xchg
aaa
cs
movsl
stc
mov
or
fwait
shrb
add
mov
addr16
mov
fmuls
outsl
ffreep
inc
or
pop
or
test
add
xor
and
add
or
push
dec
mov
jb
dec
mov
call
cmpsl
loope
jmp
pop
jnp
lods
aad
loope
lret
adc
pop
mov
lret
xor
fimuls
int3
icebp
sahf
xchg
sbb
add
mov
sub
or
pop
mov
outsl
xor
ja
and
adc
aaa
mov
and
pop
loopne
cli
or
cli
sbb
sub
mov
shlb
jle
sti
push
cmp
xchg
cmpsb
or
ficomps
pop
mov
sub
les
sub
cmp
sbb
sbb
mov
jo
scas
dec
mov
out
mov
or
or
mov
xchg
push
cli
push
add
mov
xchg
cltd
addr16
ret
stos
cmc
pop
mov
xor
mov
dec
sub
push
pop
cs
inc
nop
test
ja
es
inc
in
dec
test
ret
xor
cmp
sub
mov
jno
inc
lahf
xchg
mov
mov
sbb
jg
das
push
ja
aaa
mov
mov
xchg
adc
js
stos
not
rcl
jns
sub
pop
aaa
cmc
mov
and
push
add
sbb
mov
fchs
idivb
out
movsl
ja
xchg
push
fisttpll
sub
hlt
mov
pop
sahf
sub
data16
cmp
je
pop
mov
mov
add
leave
mov
mov
add
outsb
shr
jle
jno
xor
leave
into
outsl
push
sub
rcrb
or
insl
dec
xchg
pop
aad
or
dec
adc
jmp
mov
dec
rorl
adc
or
mov
aad
push
jp
enter
js
andl
into
pop
xchg
pop
mov
decl
shll
ret
pop
inc
jbe
loopne
push
dec
cwtl
pop
push
sbbb
movsl
or
cli
mov
arpl
jecxz
sub
inc
lret
push
imul
pop
push
stos
sbb
lock
sbb
aaa
js
and
adc
cld
adc
popl
jnp
and
xchg
arpl
add
js
push
mov
jns
stos
cmpb
cmc
mov
lcall
adc
adc
cmp
pop
dec
lock
mov
inc
stos
xchg
jbe
cmpl
xlat
dec
jno
push
pusha
push
clc
cmp
scas
into
shlb
mov
mov
mov
ljmp
sub
sahf
adc
inc
mov
and
and
fisttpl
add
mov
mov
mov
adc
xchg
stos
or
je
icebp
int
jnp
jns
pusha
sub
xor
jae
lock
xchg
fsubr
fdivp
cmp
push
nop
pop
enter
cld
push
loopne
mov
mov
lods
aam
addr16
shl
imul
into
hlt
xor
sti
push
fadd
cmp
add
dec
cmpsl
mov
inc
push
fdivs
add
mov
sbb
aaa
xchg
sbb
xrelease
and
mov
and
ljmp
test
adc
mov
insl
and
pop
in
mov
leave
and
jmp
pusha
outsb
leave
pop
xchg
das
in
xchg
jae
mov
sbb
xor
test
jle
hlt
nop
sahf
sarb
stos
shll
idivb
pop
add
or
jle
fwait
and
jae
cmp
xor
fisttpl
divb
hlt
sbbb
sub
stos
rep
sbb
std
mov
jb
popa
aaa
imul
pop
scas
imull
or
fcmovnbe
cwtl
cmc
gs
aad
mov
mov
xchg
insl
pop
cmp
adc
xchg
and
push
cmp
imul
std
jo
inc
sub
das
mov
ficompl
add
mov
adc
outsb
sub
aaa
out
stc
push
icebp
movsb
mov
mov
lea
popa
push
lea
inc
mov
push
sbb
push
push
jmp
leave
xor
mov
inc
or
loopne
dec
stos
mov
pushf
pop
pop
inc
add
rol
aaa
idivb
xor
mov
sub
push
outsl
jge
inc
je
sub
je
sub
ficoml
dec
sub
mov
adc
jmp
adc
inc
cmp
jo
fsubs
pop
std
nop
or
loopne
pop
cltd
cltd
fdiv
aam
and
lcall
pop
pop
mov
inc
push
test
loopne
push
mov
xor
mov
iret
xchg
out
aad
int3
rcl
ret
sub
mov
ret
adc
shr
mov
fwait
mov
add
dec
ficoms
cmc
das
scas
mov
sbb
les
int
jle
nop
pop
fld
rclb
add
test
hlt
icebp
test
dec
push
js
pushf
ljmp
inc
mov
add
ja
pop
addr16
test
sarb
stos
mov
push
mov
add
scas
sub
in
in
pusha
xchg
arpl
push
addr16
mov
mov
adc
pop
mov
out
flds
imul
pop
sbb
dec
imul
cmp
repnz
inc
jae
inc
in
cltd
mov
and
or
ss
ret
nop
mov
pop
shll
inc
insb
lcall
adc
out
stos
mov
ret
push
and
mov
loopne
sbb
out
cmp
sbb
lret
sbb
scas
punpcklbw
movb
cmc
out
dec
ret
lcall
and
jge
out
dec
mov
sbb
inc
mov
repz
mov
adc
add
arpl
pop
inc
pop
decl
adc
leave
push
unpckhps
jo
sub
sub
inc
flds
and
imul
rcl
iret
xchg
les
jecxz
dec
cwtl
out
mov
xchg
rorl
out
mov
fwait
aad
cmp
sub
bound
add
dec
ss
dec
loop
dec
pop
fists
pop
out
cld
out
mov
mov
sti
imul
xchg
cmp
adc
aad
stos
xchg
mov
cs
loope
or
in
fildl
sub
mov
add
xchg
cmpl
insl
xor
xchg
and
dec
pop
out
xor
sti
out
test
jae
mov
sbbb
pop
inc
stos
repnz
cmpsb
daa
mov
in
cmp
movb
and
cmp
jecxz
sbb
and
cli
push
pop
jge
or
inc
fstpl
sbb
dec
mov
fidivrs
sub
mov
ud2
pop
add
adc
dec
jns
xor
mov
fimull
mov
jbe
inc
aad
inc
cli
ficoms
pushf
out
cmp
insl
inc
pop
adc
popa
mov
sub
mov
addr16
mov
dec
insl
lahf
adc
dec
out
pop
testl
notl
cmp
jge
cmp
xchg
out
fldenv
fbstp
xchg
fucom
pop
sarl
fistpl
push
mov
mov
add
lret
and
leave
and
push
repnz
and
jmp
pop
lahf
or
out
repnz
fwait
cwtl
push
jae
pop
mov
pop
mov
adc
jmp
jno
or
mov
cltd
enter
sbb
xor
jl
popa
js
sub
cmpsl
pop
clc
xlat
xchg
mov
hlt
xrelease
dec
mov
lods
pop
stos
pop
pop
mov
push
out
aad
mov
sbb
pop
jmp
push
mov
and
mov
into
in
mov
sbb
aas
outsl
ljmp
fiadds
add
lcall
hlt
push
mov
and
aam
dec
pop
or
push
add
lret
push
fsubrl
adcl
in
mov
or
frndint
cli
sub
or
sbb
loope
mov
out
inc
xor
inc
aas
imul
or
push
fisttpl
push
popl
mov
mov
das
imul
push
pop
clc
dec
inc
out
jne
movb
cmpb
pushfw
inc
xchg
out
das
cmp
cmp
dec
push
divb
and
and
loop
std
xor
add
jae
push
xchg
lcall
aaa
das
scas
xchg
mov
loop
mov
sete
pop
jo
pop
sbb
mov
pushf
int
lds
mov
and
nop
stos
xlat
push
pop
cmp
jmp
push
add
inc
jnp
pop
cmpsb
sbb
dec
mov
lea
pop
fwait
or
push
imul
sbbl
fcmove
adc
mov
jo
out
call
int3
pushf
loopne
ja
mov
mov
ficoms
sub
mov
lods
in
inc
sbb
push
stos
xchg
bnd
cmp
push
mov
adc
iret
clc
cs
jge
loopne
and
je
xor
cmp
inc
stos
into
in
roll
xchg
sbb
or
ret
xorb
test
fmull
xchg
add
inc
es
daa
repnz
mov
cmc
xorl
jecxz
mov
stc
xor
xchg
pop
push
insb
push
jbe
mov
loop
mov
push
pop
orl
in
rclb
mov
popa
clc
aaa
mov
adc
sub
pushf
gs
dec
sbb
mov
dec
jb
pop
jo
les
movsb
test
cmp
sub
mov
jno
cmp
das
adc
loop
push
shlb
ret
sbb
cmp
enter
outsl
lock
pop
stc
lock
mov
outsl
rolb
pop
ret
sbb
pop
mov
push
mov
mov
ret
cltd
sti
cmp
sar
inc
aas
sub
or
call
sub
and
in
dec
shll
pop
xchg
push
mov
xor
dec
xor
mov
int3
push
movsl
or
leave
jle
icebp
add
push
clc
in
into
and
cmp
repnz
mov
enter
mov
add
sub
aas
inc
xor
push
shlb
mov
sbb
adc
pop
out
adc
out
call
out
andl
lret
push
mov
imul
mov
jp
ss
cli
or
pop
and
cld
sub
add
fmuls
ficomps
add
jg
mov
adc
sbb
notl
sbb
insb
jecxz
mov
push
orb
sbb
aam
adc
in
scas
sarl
or
jb
dec
cmp
push
nop
xchg
jbe
dec
pop
adc
repnz
insl
mov
nop
mov
pop
dec
sbb
adc
lret
push
mov
lret
rcll
movsl
cmp
fcomi
loopne
int3
cmpsl
mov
test
and
add
xor
xchg
xchg
push
jle
cmp
stos
xor
inc
push
cmp
fadd
sbb
pop
addr16
pop
out
out
or
mov
xchg
jne
jle
shl
aam
imul
add
or
xchg
xchg
fcomi
stos
lods
push
push
ja
and
cwtl
or
xor
push
jns
daa
jle
nop
jmp
sbb
mov
enter
adc
ret
lcall
mov
xchg
add
lret
cmpsl
mov
mov
push
mov
and
cmp
xor
jmp
adc
imul
sbb
nop
out
negb
xor
ds
scas
xor
sbb
mov
es
movsb
mul
xor
shrb
mov
fcompl
pop
bound
adc
test
pop
mov
dec
pop
insb
fnstcw
jmp
cwtl
adc
xchg
jmp
mov
inc
ja
push
lock
fs
in
jbe
pop
movb
mov
clc
flds
mov
dec
xchg
scas
pusha
and
mov
adc
jecxz
clc
xchg
inc
mov
test
and
push
out
xor
mov
fdivrl
and
in
cmp
in
inc
xor
or
xor
inc
sub
xchg
daa
cmp
jae
mov
mov
repnz
rorb
pop
lahf
out
lods
out
fwait
mov
jb
test
sti
or
mov
adc
or
mov
divl
xchg
lret
mov
icebp
pop
test
pop
dec
xchg
dec
sub
lret
dec
xor
push
sub
sbb
call
addr16
ret
mov
sbb
clc
gs
decb
jmp
push
xchg
add
sbb
cmp
mov
aam
movsb
dec
add
pop
stos
stos
lea
xchg
adc
mov
pop
xchg
push
cwtl
shl
push
mov
lock
add
outsb
stos
pop
xor
xor
movb
int
pop
fisubs
mov
fidivs
in
push
lods
and
data16
ret
js
mov
mov
rcl
cmp
hlt
pop
test
push
imul
dec
fucom
shl
lahf
sub
out
stos
pop
fcmovnb
push
pop
dec
jae
loopew
pop
push
adc
jnp
mov
imul
adc
inc
repz
cltd
stos
flds
jecxz
rcr
lahf
movsb
mov
out
pop
mov
jge
aas
nop
fiadds
sbb
dec
mov
aam
es
pop
es
xchg
clc
add
cmpsb
scas
stos
divb
leave
adc
bound
mov
lods
ret
xor
push
sbb
sbb
jae
js
gs
fnstenv
ds
cwtl
mov
dec
mov
mov
mov
nop
nop
jae
adc
xchg
pop
adc
or
add
xlat
mov
cltd
dec
mov
push
lods
movsl
push
pop
sti
pop
lods
rorl
lret
xchg
in
dec
push
xor
sbb
ficoml
leave
bnd
inc
sbb
mov
mov
adcb
mov
lods
out
arpl
dec
sbb
clc
pop
mov
shlb
out
pop
shrb
jbe
mov
ljmp
jle
jl
addr16
jle
sub
out
pop
in
sbb
add
es
fnsave
xor
ja
adc
stc
fwait
ret
mov
xchg
fs
nop
insl
addr16
dec
pusha
je
movsl
inc
push
inc
std
mov
jb
cwtl
ficomps
push
cmp
cs
icebp
mov
fnstenv
ds
cs
bound
pop
adc
push
and
and
mov
or
out
popa
adc
push
outsl
fisttps
xchg
fcmovnu
icebp
inc
je
data16
decl
les
dec
lods
jnp
inc
cmp
bound
pop
and
lock
sbb
arpl
mov
add
fwait
sub
mov
ret
sbb
xchg
mov
or
mov
scas
jmp
mov
ds
sbb
add
clc
jl
xor
pop
cmp
popf
lods
mov
inc
int3
int
test
sub
push
xchg
sub
push
enter
mov
dec
jle
test
push
les
movsb
dec
mov
or
iret
dec
fs
into
pop
fcmovnb
jnp
insl
in
nop
mov
pop
fmull
pop
push
insb
push
mov
mov
xor
inc
mov
and
mov
xchg
push
loop
scas
dec
and
dec
adcl
cmpsl
out
lods
push
xchg
icebp
ds
inc
push
add
fimuls
mov
and
addb
leave
mov
pop
loop
aaa
repz
jnp
inc
ss
jae
add
cmp
int3
stos
ret
jbe
jns
dec
xchg
iret
test
mov
loop
jl
fdivr
mov
dec
cmp
mov
mov
das
rcrl
loopne
hlt
push
add
push
mov
notl
and
fisttpll
ja
stos
mov
sti
insl
sbb
repz
pop
xor
data16
mov
push
test
sub
es
xchg
std
push
xchg
ret
clc
mov
jno
stos
fldl
sbb
jae
pop
in
xchg
mov
dec
push
push
rcrb
adc
push
gs
mov
scas
cld
sbb
jns
sub
push
arpl
inc
ficoml
sbb
fcomip
decb
scas
not
sub
roll
iret
add
leave
mov
dec
mov
push
shl
mov
cmpsl
mov
xlat
in
cmpsb
or
cmp
mov
sub
xor
mov
jne
sarl
pop
orl
iret
lds
imul
jp
mov
mov
test
test
jmp
mov
mov
cli
sub
in
rcrb
cmc
or
out
mov
mov
inc
out
out
test
cmp
aad
sbb
jb
cltd
repnz
into
adc
movsb
push
mov
add
and
dec
xor
inc
bound
and
nop
add
pusha
pop
xchg
pushf
loopne
pop
mov
fidivrs
lret
push
mov
lret
jae
lret
dec
adc
fstl
inc
shlb
imul
sub
ss
movsb
pop
add
daa
cli
sbb
scas
jo
sahf
inc
add
pop
pop
enter
fwait
stos
mov
jp
xchg
sub
add
mov
pushf
add
jmp
push
ret
xchg
pushf
inc
aas
lds
ret
sarl
enter
in
subl
subb
lret
adc
aas
sbbl
sbb
rorl
loopne
into
dec
in
aas
pop
cmpsl
imul
cli
sbb
jg
adc
xchg
and
and
mov
mov
jno
lds
lds
and
push
mov
inc
imul
mov
add
data16
sbb
rolb
xchg
cld
lock
xchg
dec
ret
pop
fsub
pop
pop
push
pushf
ret
sbb
lds
std
cmp
sub
sbb
jle
xor
dec
add
jg
jge
test
sbb
and
jnp
push
xchg
aas
mov
test
imulb
sub
xor
out
cvttps2pi
jl
jecxz
stos
sbb
add
or
mov
jno
out
out
aad
mov
add
fdiv
sbb
aas
push
out
or
jnp
cmpsl
mov
outsb
inc
shl
pop
into
xchg
rorb
cwtl
xchg
icebp
loopne
flds
dec
fbld
xor
push
mov
xor
idivb
inc
adc
shlb
and
mov
xor
sub
xor
mov
lret
inc
fld
push
xchg
sub
mov
aam
daa
arpl
push
cmc
mov
sbbl
aaa
addr16
in
push
jmp
sub
out
bound
jno
negl
add
push
repnz
pop
mov
ficomps
pushf
jecxz
in
fdivr
in
or
push
call
mov
sbb
jmp
in
stos
inc
push
sahf
call
inc
in
and
cmpsl
rclb
testl
push
shll
jg
adc
xchg
std
cmp
insl
mov
xor
je
add
dec
repnz
inc
inc
sbbl
mov
mov
lret
in
cmpl
xorb
adc
jo
dec
inc
negl
clc
dec
pop
mov
sbb
shl
jle
inc
shl
pop
sbb
lods
clc
adc
hlt
mov
dec
daa
clc
xor
enter
cli
hlt
xchg
loop,pt
cmp
fisubs
rcrl
xor
leave
mov
cli
cmp
push
int3
pop
sub
mov
sbb
mov
pop
dec
fdivrs
ret
jbe,pn
aas
mov
jnp
mov
loop
lock
insb
test
inc
adc
mov
faddl
movb
iret
pop
out
scas
dec
and
fdivrl
inc
sub
or
push
cmc
add
add
adc
lea
jbe
and
rcl
push
stos
mov
popf
outsl
pop
movsl
mov
xor
data16
xchg
dec
scas
dec
cmp
mov
dec
std
sbb
jo
push
std
in
mov
je
adc
adc
test
xchg
call
dec
push
and
push
inc
xor
cli
inc
lcall
lret
int
movsl
inc
push
sub
xor
xor
es
inc
movsl
mov
cmc
mov
mov
sbb
insb
pop
mov
shl
push
sarb
call
mov
ret
arpl
mov
xor
mov
xorl
in
adc
repnz
inc
or
stos
sub
sbb
dec
into
in
mov
arpl
paddq
in
and
and
add
rol
cmp
mov
sub
lret
addl
leave
data16
rclb
adc
sbb
jp
movsb
subl
push
test
and
out
test
aad
mov
inc
imul
pop
pop
xlat
test
jne
scas
outsl
mov
sub
cmpl
adc
repnz
pop
test
sbbb
shlb
sbb
mov
lcall
or
fists
jp
sbb
xchg
rol
fwait
and
lret
pop
stc
das
lret
repnz
rorb
inc
fadds
lret
nopl
je
in
cmp
sub
add
and
dec
sbb
fldcw
cmpb
xchg
test
psubq
ror
int3
aam
xor
ds
and
inc
aaa
cmp
sarb
mov
xor
mov
outsb
imul
mov
das
pop
xor
push
xchg
xorl
pop
arpl
jbe
shr
addr16
lret
mov
add
cmc
cmp
pop
int
mov
push
add
in
xchg
pop
xlat
cmp
lds
pop
jne
roll
fucom
pop
mov
out
outsl
jmp
mov
and
dec
inc
mov
lcall
outsl
add
adc
repnz
popa
sbb
and
out
testb
adc
sbb
out
xchg
mov
jl
push
mov
imul
push
push
inc
add
fs
add
sbb
bound
vmread
mov
xchg
cmp
cmp
dec
daa
push
dec
cltd
push
cmp
std
lret
inc
sbb
cmp
lods
popf
fcoms
test
sbb
mov
push
jg
enter
addl
in
fcompl
insb
insb
ss
pop
cld
jnp
mov
jp
addb
pop
scas
into
xchg
incb
xchg
mov
jno
pause
lcall
ret
push
cmp
mov
jno
decb
adc
les
das
fsubl
pop
fdivrl
bound
mov
js
into
inc
imul
xor
leave
pop
jns
mov
adc
inc
aas
fldcw
mov
xor
mov
push
cltd
enter
lods
pop
into
faddp
in
mov
jae
lods
inc
pop
enter
xor
arpl
dec
sub
in
test
addr16
xchg
stos
in
pop
ljmp
mov
cmp
xor
and
negb
sub
mov
sbb
adc
adc
jo
cli
fcmovnb
mul
push
aam
inc
inc
fisubs
jb
xchg
dec
aad
idivl
cmp
rcrl
in
mov
ljmp
stos
lret
and
mov
shlb
push
cmc
sbb
fnstsw
adc
and
mov
ret
sub
mov
ss
sbb
xchg
repz
adc
add
lret
out
pop
adc
adc
fiaddl
lret
call
adc
sbb
int3
xlat
xor
sahf
sbb
adc
push
lcall
adcl
cltd
stos
mov
cmpsb
stc
inc
add
icebp
sbb
les
inc
or
or
inc
sti
jnp
add
out
mov
cld
div
push
jnp
mov
popl
add
ja
mov
pop
out
jl
int3
sti
sbb
add
cmp
iret
mov
repz
xor
push
hlt
jbe
xor
push
leave
xchg
and
mov
push
lahf
jmp
inc
bound
mov
fwait
data16
dec
imul
fidivs
mov
push
xchg
and
sbb
stos
mov
adc
idivb
xchg
aaa
or
sbb
cmp
pop
mov
pushf
fstps
je
cmc
push
push
adc
ljmp
scas
roll
or
arpl
outsb
push
out
scas
enter
pop
jge
and
add
lea
ds
sub
mov
and
sbb
cwtl
divb
xor
and
enter
xor
jbe
sub
inc
sub
in
xchg
push
popf
xchg
mov
sti
xchg
jbe
mov
arpl
xchg
adc
lcall
repz
and
ret
das
aas
mov
mov
or
and
repnz
movsl
xor
push
and
popf
pop
lret
xchg
imul
adc
adc
or
iret
adc
or
lods
testl
xchg
mov
and
xtest
fucomp
psubq
pushf
loopne
jmp
aas
cmc
mov
popa
lcall
push
repnz
sbb
hlt
fstps
data16
add
filds
loop
popa
and
xorl
inc
xor
and
in
fwait
lahf
fisttpll
pop
stos
pop
addr16
cmpsl
lods
sub
push
mov
pop
cmp
cltd
repnz
shrl
mov
fs
add
sbb
lock
lcall
mov
cmpb
in
and
dec
arpl
mov
nop
push
popa
addr16
fcmovu
cmp
sbb
fsubrl
popa
add
nop
pusha
mov
or
out
loopne
sti
sub
ds
dec
mov
add
mov
or
jg
inc
lahf
pop
or
in
dec
stos
shr
fcmovnb
scas
test
scas
dec
jo
mov
cltd
sbb
mov
dec
fwait
cmpb
inc
and
jno
mov
mov
int
test
stos
push
or
cmpsb
inc
dec
xchg
in
mov
loop
mov
add
ljmp
mov
movsl
in
test
add
mov
out
aad
aaa
and
cld
jle
nop
mov
cmc
in
lcall
mov
jbe
pop
in
jl
and
xor
cmpsb
pop
pushw
aad
mov
cmp
cld
cld
call
dec
sbb
es
jmp
xor
jbe
pop
test
andb
insl
dec
xchg
jg
sub
push
sarb
mov
sti
popa
xchg
jns
lahf
and
mov
shr
outsl
add
and
hlt
xchg
sub
or
inc
push
add
stos
mov
test
call
sti
cwtl
imul
mov
popf
stc
aam
dec
xchg
add
outsl
push
push
add
fsubrp
inc
mov
fmul
ret
lret
and
mov
ljmp
dec
clc
adc
cld
aas
popa
std
out
pop
and
testl
and
cmp
shl
nop
cmpsb
lahf
xorb
in
mov
insl
mov
fisubrs
dec
mov
push
repz
shlb
pushf
mov
ljmp
push
xor
push
adc
test
stc
repnz
outsl
sbb
cmp
pop
or
sub
push
jmp
mov
iret
mov
add
stos
jbe
add
bound
push
scas
test
cmp
lahf
in
popa
cwtl
pop
and
std
stos
inc
mov
jbe
out
mov
ret
call
mov
sub
xchg
test
out
push
adc
lea
push
cmpsl
into
lods
arpl
xchg
idivl
orl
jno
cmpsb
and
idivb
adc
mov
stc
insl
inc
cmp
jp
lock
call
jg
sub
adc
pop
dec
add
jnp
insb
jl
out
repnz
jb
stc
ja
add
into
rcrb
inc
lahf
mov
out
sub
jo
sar
inc
sahf
fbstp
mov
ss
pop
pop
gs
aaa
jbe
dec
imull
push
and
mov
frstor
popf
fisubrl
in
icebp
push
inc
in
jbe
in
test
mov
stos
adcl
xlat
sysexit
loope
movsb
pop
gs
sbb
loopne
xchg
imul
insb
std
mov
push
jl
mov
bound
jmp
test
push
lea
loop
pop
or
push
movsl
dec
sub
sbb
daa
shll
pusha
inc
mov
mov
call
aad
mov
mov
push
subl
aas
les
push
or
pop
mov
rolb
aas
subl
and
inc
push
pusha
aaa
pop
popa
shrb
fnstsw
pop
mov
mov
adc
repnz
jle
inc
pop
movsb
push
pusha
and
roll
mov
mov
xchg
sub
dec
xchg
inc
and
ja
test
lcall
repz
and
imul
loope
xor
out
jle
rcll
out
imul
pop
insl
mov
test
sub
mov
add
lods
ds
xchg
xchg
add
out
pop
pop
or
pop
add
sbb
mov
insl
fnstsw
aas
jno
stos
inc
stos
jae
dec
lcall
dec
jb
sbb
fdivp
pop
rolb
jno
mov
push
dec
fadd
xor
in
xor
cmp
pop
inc
pop
pop
imul
in
mov
stc
push
cmp
push
int
fstpl
into
pop
cmp
mov
push
lock
pushl
pop
leave
push
fldenv
enter
adc
mov
sbb
ljmp
cmp
sahf
lret
loop
adc
stos
mov
das
call
rorl
lret
call
sti
and
lahf
push
mov
loope
sub
test
mov
inc
js
mov
test
mov
cmp
lods
lods
pop
adc
iret
mov
and
adc
es
cs
cmpsb
push
cli
mov
repz
push
jns
push
jo
jne
rorl
or
out
cmp
adc
daa
inc
add
mov
in
xchg
jmp
cmp
push
sahf
add
xchg
stos
xchg
dec
add
je
cwtl
in
test
je
mov
in
ds
sbb
sbb
clc
imull
mov
inc
movsb
je
fdivrs
pop
add
push
out
lcall
jmp
lret
add
adc
loopne
sbb
push
call
mov
ljmp
and
daa
ja
xchg
xchg
push
xchg
xchg
dec
mov
jmp
ret
cltd
adc
fisubrs
mov
in
adcl
je
mov
push
sbb
cmp
adc
cmp
lret
xlat
jle,pt
arpl
stc
xchg
test
mov
xchg
or
push
lahf
jae
leave
mov
cmp
fs
push
jo
inc
jl
js
call
pop
jl
dec
mov
and
adc
int
mov
dec
mov
mov
fisubrs
mov
pop
or
leave
cmp
faddl
ret
in
rolb
stos
faddl
sub
pop
and
test
cmp
sti
test
stos
xchg
pop
jge
aam
cmp
into
bswap
mov
mov
push
push
sub
aad
cmc
test
aad
clc
mov
in
mov
sbb
cmpl
pop
enter
dec
mov
pusha
inc
mull
jg
xchg
ja
cmpb
rclb
cmp
lods
cmp
lret
inc
push
jg
sub
sahf
ret
ja
cmp
inc
mov
loope
nop
adc
fs
mov
into
stc
xchg
fsubp
stc
dec
shrd
clc
outsl
push
cmp
adc
faddl
test
sub
sbb
lds
xchg
shll
adc
ret
test
dec
js
jge
jl
popa
test
jbe
jo
arpl
and
and
push
xor
fildll
push
mov
movsl
push
in
stc
fnstcw
aad
mov
pop
inc
mov
clc
inc
aaa
xchg
call
inc
sub
aas
xor
mov
or
xchg
nop
sub
incb
mov
push
jnp
mov
data16
popf
test
lcall
push
sar
ret
cs
pop
lret
repz
cmc
aad
jg
mov
stc
add
cmpsl
lret
pop
push
repz
jl
pop
mov
sbb
sbb
push
cmp
testb
addb
mov
shlb
ss
mov
cmpl
out
in
inc
mov
cmpsl
adc
sub
test
xchg
std
mov
or
shl
ja
and
and
test
inc
in
movsb
xor
mov
add
pop
xlat
inc
into
mov
and
or
dec
jl
hlt
cltd
jae
rolb
push
push
into
shll
shrl
mov
iret
add
cmp
in
std
push
ret
sub
push
mov
and
fwait
aam
daa
test
xchg
in
icebp
pop
shll
rclb
lret
imul
xor
nop
pusha
out
call
stos
ja
sbbb
pop
pop
push
xor
test
and
outsb
or
xchg
cmpsb
jne
es
xor
fidivrl
cmc
sahf
inc
add
push
sub
shll
sbb
pop
test
add
mov
icebp
xor
sbb
pand
out
xor
push
push
pop
inc
cmovp
iret
out
in
sbb
and
add
xorb
test
xor
fs
inc
out
inc
out
pusha
hlt
lret
sub
cld
and
je
leave
sub
and
pushf
mov
mov
sahf
idivb
ret
ror
loope
in
mov
jl
rcrl
pop
ret
loop
pushf
std
push
outsl
jmp
dec
inc
cmpsb
sub
int3
test
in
clc
dec
and
jmp
mov
imul
sbb
out
dec
pop
insl
xor
ret
lods
dec
push
and
xor
roll
sub
adc
add
add
push
cld
int
cli
adcb
add
mov
cmp
jmp
fnsave
mov
mov
push
lock
pop
inc
cmp
push
sub
mov
movsl
stos
cmpsb
hlt
hlt
inc
in
mov
fisubrs
xchg
aam
outsb
out
and
test
imul
jne
sarl
scas
cltd
lock
arpl
push
lock
adc
dec
dec
sub
cmp
inc
push
lret
xorl
clc
sub
xor
loopne
sub
push
pop
cltd
push
fildl
jecxz
inc
jle
idiv
mov
mov
sbb
pop
sbb
ror
mov
jmp
lret
cmpb
ret
dec
fnstcw
cmc
aad
cmpsb
adc
test
pop
enter
sub
or
xchg
mov
aam
enter
inc
jmp
std
repnz
subb
cmp
mov
enter
loope
push
movsl
faddl
pop
in
orl
test
pushf
add
dec
cmp
into
scas
dec
jp
xchg
aad
pop
cld
stos
cld
icebp
xchg
movsl
xchg
lret
mov
add
into
cltd
movsb
sub
je
add
and
test
xchg
inc
jnp
stos
jmp
cltd
fsubrs
lcall
xor
fsubrl
dec
mov
ret
fiaddl
adc
stos
bound
jbe
jns
gs
daa
mov
stos
dec
add
je
insb
push
or
inc
mov
and
out
sbb
cmove
push
inc
jbe
movsl
pushl
cmp
rcll
pusha
aam
sbb
sbb
bound
nop
out
pushf
imul
xchg
mov
ja
or
aad
jge
adc
jae
mov
enter
mov
push
cmp
sub
repnz
nop
jns
inc
sub
sub
inc
inc
and
and
dec
hlt
xor
pushl
in
mov
inc
aaa
xlat
cmp
cmc
pop
lods
jo
xchg
push
cli
xchg
int3
sbb
pop
fidivrs
add
outsb
aad
mov
jbe
in
sbb
fisubrs
xchg
and
push
pop
aas
inc
add
push
imul
je
xor
push
pusha
mov
pop
pop
jge
and
mov
fs
jno
push
and
js
mov
gs
out
insb
jbe
mov
pop
mov
les
sahf
mov
pop
outsb
push
mov
mov
dec
ljmp
outsb
sub
aam
dec
xor
pop
or
adc
cltd
lcall
in
mov
and
pop
mov
inc
ret
xor
sub
movsb
xor
xor
push
adc
jg
fisubs
pop
xchg
test
cltd
stc
test
adc
fcomi
pop
stos
in
das
in
cmp
push
xor
sbb
jno
mov
jecxz
xchg
rcrb
jle
fnstcw
daa
fmulp
in
sbb
popf
cwtl
and
xor
and
mov
xor
pop
stos
adcb
xchg
adc
test
dec
lea
jb
jecxz
push
mov
shll
popf
mov
inc
mov
sub
sahf
xor
xor
sbb
jae
jmp
adc
mov
add
pop
jns
jns
pop
mov
push
shl
mov
cmpsl
stos
adc
or
add
dec
cmp
dec
outsl
pop
sbb
lods
mov
sarb
jle
dec
outsb
add
add
in
xlat
push
xchg
test
loop
daa
xchg
out
push
jns
mov
stos
addr16
fcmovnbe
jne
jb
int3
aas
mov
cli
jp
and
or
or
adc
lods
dec
jmp
cld
jmp
aad
nop
add
mov
and
add
sbb
in
and
xchg
inc
stc
inc
fucom
aam
popl
xchg
cwtl
cmpsb
lods
jo
xchg
inc
cmp
cmp
mov
xchg
jg
daa
jne
add
mov
mov
mov
add
push
adc
push
outsb
les
in
xor
inc
into
je
cmp
adc
or
fisubs
in
adc
test
xor
scas
sbb
fcoml
das
loope
cmp
adc
jg
rorb
and
sbb
mov
cmpsb
xchg
jmp
adcl
nop
or
clc
mov
lea
test
pop
cmp
mov
test
push
sbb
pushl
jno
adc
push
add
idivb
jle
pop
out
aaa
mov
or
dec
inc
test
jo
int
fildl
push
mov
jo
cld
dec
sbb
enter
pop
mov
xchg
xchg
test
repz
std
and
mov
or
adc
mov
ljmp
push
es
test
or
int
pop
sub
cmp
iret
xor
push
je
xchg
xor
xchg
inc
notb
fisttpl
sti
fwait
pop
jge
mov
push
adc
or
stos
and
loope
push
or
or
xchg
mov
push
mov
imul
add
std
mov
movsb
jmp
in
xor
cmp
sbb
xchg
and
jge
shll
cmpsb
sub
or
pop
out
imul
dec
cmc
sahf
enter
ret
or
in
jnp
and
xchg
xchg
adc
push
rcr
mov
sbb
clc
pop
mov
cmp
call
mov
into
ficompl
jno
push
push
xchg
hlt
daa
movsb
xor
adc
fimull
pushf
xor
mov
lret
stc
xor
pop
jl
dec
orl
bound
lcall
cltd
add
adc
lcall
dec
rorl
jp
add
dec
addr16
xchg
sub
xchg
push
insl
aaa
repz
fcom
push
test
lahf
sub
dec
push
xor
cmp
or
leave
mov
insl
mov
arpl
cld
stos
aam
dec
and
sar
inc
mov
outsb
cmpsb
lock
and
pusha
dec
insb
test
bound
roll
imul
sub
dec
repz
push
imul
adc
mov
jge
sbb
lods
mov
push
xchg
pushf
push
xchg
cmp
popa
sub
pop
int3
movsb
insb
in
int
pop
addr16
add
xchg
mov
imul
lds
das
push
fldcw
cmp
fmuls
xchg
addr16
cmp
fucomi
mov
shll
push
cltd
sub
roll
arpl
cwtl
mov
es
add
nop
add
into
cmp
push
ljmp
test
dec
and
add
mov
ja
jp
lods
or
loope
bound
pop
adc
out
push
push
and
in
cmp
fcomi
mov
aaa
testl
daa
xchg
je
mov
lahf
or
or
mov
xchg
add
mov
bound
roll
bound
inc
in
out
int
orl
mov
jne
mov
test
pop
dec
leave
cmp
mov
jns
jle
mov
stos
adc
xchg
xchg
push
nop
loope
aaa
sub
fs
mov
xadd
xor
fadds
xor
pop
pop
mov
lea
int3
daa
cmp
out
xor
femms
insb
xchg
push
lods
dec
shlb
arpl
lcall
inc
sbb
sahf
out
mov
jl
ss
dec
push
lods
inc
add
inc
in
data16
push
jnp
fbstp
stos
pop
adc
xlat
or
sub
push
into
jae
fidivrl
ficompl
iret
cmp
decl
xchg
fisubl
aas
xor
cmp
daa
popa
xor
les
and
mov
jecxz
and
incb
push
xchg
cmc
inc
dec
rcll
dec
nop
int
xor
sbb
sbb
cmp
mov
sbb
stos
pusha
scas
and
scas
adc
sub
adc
xchg
push
adc
mov
ds
iret
iret
sarb
out
lret
push
jne
adc
sti
mov
xor
pop
inc
mov
ret
mov
adcl
pop
dec
jae
pop
push
jg
mov
jg
inc
clc
mov
loope
add
in
sbb
xchg
fisttps
jnp
cmp
clc
mov
cmp
subb
lahf
outsl
cmp
outsl
adc
addr16
inc
jno
mov
sti
cmpsl
cltd
sub
mov
fisttps
out
cmp
and
and
loope
jge
popa
adc
or
xchg
into
popa
jo
xchg
cltd
arpl
push
arpl
lods
scas
cmpsl
xor
xchg
or
jecxz
sti
xor
mov
cmpsl
adc
and
adc
mov
push
jbe
movb
push
test
fsubrs
fwait
pushf
sbb
mov
mov
add
lods
and
mov
mov
jbe
push
cli
lds
push
cmc
repnz
clc
push
xor
xor
adc
cmp
push
sbb
test
lea
fstpt
and
add
aam
lcall
inc
aaa
cmp
cmp
fdivrl
xchg
test
mov
hlt
outsl
xchg
cwtl
imul
push
imul
dec
adc
push
gs
sbbb
lret
mov
jb
roll
iret
lds
jb
clc
mov
aaa
cmpsl
es
cs
push
or
push
jl
mov
mov
lds
mov
popa
shrb
inc
cmp
and
cmp
and
push
ror
sub
jae,pn
cmp
enter
aaa
sbb
jnp
iret
pop
into
xchg
xchg
dec
jp
push
xor
das
std
lret
je
repnz
and
shlb
sbb
push
jne
mov
sub
sbb
cmpsb
inc
daa
pushf
push
dec
dec
mov
cmp
mov
jns
mov
leave
inc
cmp
dec
aam
out
mov
and
adc
in
pop
lods
jmp
push
cmp
pop
cmpsb
adc
xor
push
sub
xchg
add
jae
jb
clc
jmp
icebp
push
push
inc
cs
in
adc
fists
pop
dec
adc
adc
and
push
shll
mov
stc
movsb
sbb
cmpl
cmp
add
pop
pusha
dec
imul
add
mov
adc
sbb
jb
sti
push
in
mov
and
xchg
movsl
cmp
or
out
int3
dec
xor
mov
push
jecxz
decb
sub
and
adc
fs
and
sub
outsl
mov
xor
test
inc
fistps
push
mov
adc
rorl
sub
in
mov
cwtl
pop
push
adc
mov
lcall
outsl
mov
nop
daa
clc
xchg
mov
dec
or
test
cmp
jo
dec
inc
icebp
add
popf
imull
push
inc
lret
lods
pop
and
push
jae
cmp
mov
pop
jae
leave
enter
fnstcw
mov
cs
jge
adc
ja
addr16
icebp
inc
cli
lret
fucomip
sub
inc
xchg
ret
ss
push
jecxz
sbb
mov
dec
sub
loope
loopne
inc
out
outsb
inc
insl
andl
hlt
xchg
data16
in
fcmovne
xchg
out
push
add
ret
sahf
push
push
jmp
adc
cwtl
fsubr
jmp
xchg
jo
pop
lcall
fwait
inc
xchg
roll
dec
cmpsb
ds
mov
mov
jns
adc
cli
mov
loop
cmpsb
jbe
pop
push
dec
gs
xor
mov
or
jnp
negb
pop
and
lds
popf
mov
movsb
je
addl
stos
add
mov
data16
test
push
push
call
xchg
dec
mov
jmp
xchg
adc
dec
xchg
aad
fwait
jo
push
mov
test
repz
in
adc
ds
lret
jecxz
push
mov
in
xchg
inc
insl
add
cmp
xchg
adc
hlt
testl
lods
sub
shll
push
xchg
mov
add
outsl
adc
and
xchg
jle
sub
push
pushl
mov
loop
cld
fs
decb
les
and
adc
add
jb
xor
push
rol
test
xor
jns
shl
pop
or
nop
adc
push
mov
sub
bsf
jecxz
fisttpll
or
int3
mov
jae
sbb
addl
xchg
add
lods
mov
xchg
comiss
dec
movsb
flds
and
push
fbld
mov
mov
mov
daa
add
mov
leave
fisttps
fwait
ret
lods
arpl
push
push
aam
addb
sarl
inc
xchg
mov
imul
pop
ljmp
jae
and
lcall
mov
lret
and
xor
push
rcrb
jle
and
adc
pop
xchg
cwtl
addr16
push
pop
shrl
mov
insb
mov
in
mov
leave
out
dec
outsb
push
dec
push
mov
jns
adc
addr16
fidivs
mov
cmp
push
out
pop
or
stos
adc
sti
hlt
push
pop
or
pusha
mov
in
adc
mov
dec
outsb
fnsave
push
iret
out
pop
imul
cwtl
inc
mov
dec
leave
inc
ret
jns
xor
fwait
stos
push
add
mov
and
aaa
xor
aam
aaa
out
scas
or
lret
out
sarb
fidivrl
in
cwtl
imul
test
aam
lds
out
testb
mov
leave
fmull
add
fsubrs
insb
push
sub
out
cmp
jae
movsb
sbb
adc
roll
jb
es
lret
cmpsl
rorb
add
mov
loop
xchg
jno
scas
iret
hlt
dec
jnp
mov
xor
adc
in
pop
jnp
inc
xor
setl
sub
ja
inc
shrb
sbb
push
notb
xchg
jae
xlat
ficomps
shll
clc
mov
out
leave
and
sub
push
xchg
iret
or
fisubl
shrb
lret
out
out
jns
dec
fistpll
cmc
dec
popf
mov
je
mov
or
xchg
inc
sti
cmc
loopne
xchg
leave
dec
xor
push
aad
loopne
cmp
xor
mov
cmp
sarb
push
clc
mov
and
scas
xor
jl
cmpsb
sbb
bound
fcomps
daa
cld
mov
jno
inc
dec
jbe
bound
dec
dec
loopne
aad
mov
inc
leave
dec
out
lods
int3
dec
loopne
fwait
mov
iret
scas
or
sbb
aas
dec
pushf
mov
pop
repz
jg
mov
repnz
fisubl
vmwrite
in
mov
cmpsb
cmp
sbb
add
sti
cmp
cmpsl
jmp
push
lcall
or
in
testb
push
jne
jno
push
dec
cmp
in
cmpsb
mov
out
mov
rcl
and
leave
flds
xchg
fcmovne
and
sub
and
shlb
movaps
pop
loope
rcr
and
in
pop
mov
into
fsts
or
jno
sarl
cmp
jnp
mov
sti
jo
lcall
stos
stos
insb
in
ja
adc
push
leave
pusha
popa
scas
mov
pop
bound
mov
mov
add
ret
push
cmp
mov
mov
jnp
das
repz
popa
mov
inc
jg
pop
dec
xlat
add
ds
bound
lahf
into
mov
cltd
xor
pop
dec
adc
add
fcoml
pop
pop
mov
mov
lret
pop
or
inc
push
gs
loopne
mov
mov
lret
daa
rcrl
shlb
pop
stos
cmp
icebp
stos
ret
pop
xchg
sub
sahf
lret
ret
dec
and
lcall
mov
and
mov
fs
nop
jne,pt
mov
inc
sti
fmull
jo
mov
rorb
in
pop
cmp
push
rol
movsb
scas
sahf
orb
push
sub
jo
sbb
push
inc
shrl
cs
fwait
cmp
mov
cmc
sub
aam
pop
mov
mov
push
jge
push
xchg
jns
insb
out
inc
add
std
repnz
push
aaa
dec
inc
fdivrs
push
mov
paddw
in
out
xchg
xor
inc
stos
and
and
mov
mov
push
scas
gs
iret
outsl
clc
xor
mov
mov
sub
notb
leave
stc
fwait
sbb
movsl
in
mov
inc
repnz
add
xor
jno
sub
xchg
jp
xor
or
lahf
pop
scas
ljmp
psubsw
inc
mov
xor
xchg
daa
daa
and
mov
out
add
insb
push
aas
lahf
push
stos
mov
dec
push
and
push
add
or
and
cwtl
aam
fstpl
jge
pop
cmc
pop
dec
inc
cmp
add
mov
xor
mov
mov
std
xor
and
cmp
and
addr16
mov
dec
jle
cmpsb
xchg
jle
inc
jno
lret
cmpb
sbb
dec
fwait
scas
stos
movsl
popa
push
sbb
testl
lods
and
js
cmp
adc
rcrb
leave
mov
cmpsl
adc
movsb
in
sub
dec
jecxz
or
cmc
push
pop
sbbb
loop
adc
pop
fs
add
xor
adc
mov
dec
or
push
imul
stos
push
jecxz
fwait
mov
pop
dec
mov
or
rclb
and
inc
or
cs
jecxz
cmpsb
xor
dec
pop
push
pop
test
sbb
incb
dec
lret
int
push
ror
pop
dec
icebp
dec
jnp
decb
mov
pop
mov
loop
lret
cld
mov
cmp
and
jg
mov
test
and
int
dec
das
sub
cltd
push
pop
xor
negb
push
mov
pop
jg
push
fcompp
sbb
fistps
adc
in
into
sub
hlt
pop
sub
and
jnp
lahf
xchg
add
mov
ss
or
jg
dec
arpl
cmpsb
roll
or
adc
mov
jae
xchg
pushf
out
or
dec
les
xor
lds
push
lret
fs
and
int
sbb
mov
jg
sub
andb
jnp
sub
xchg
jg
sbb
jbe
inc
filds
adc
test
mov
cmp
bnd
sahf
lods
sbb
pop
or
sbb
jmp
push
incl
mov
in
inc
and
pop
mov
aaa
sbb
adc
mov
lahf
rolb
add
cmp
xchg
les
int3
and
ja
xchg
cmp
mov
jle
mov
jb
sarl
push
push
pop
inc
pop
int3
dec
cld
adc
push
test
lret
jp
lret
int
xor
jmp
mov
dec
cmpsb
in
out
add
cmpsb
sbb
jae
and
cmp
sbb
xchg
js
inc
jno
outsl
jno
js
or
ss
mov
mov
cmpsb
jge
pusha
fidivrs
mov
repz
insb
adcb
into
sbb
xlat
dec
adc
xor
nop
clc
faddl
push
lret
movsb
xor
arpl
sahf
add
mov
push
cmpsb
iret
into
push
mov
and
or
leave
clc
pop
outsl
ds
les
leave
pop
rorl
in
lds
push
dec
pop
and
cmp
lods
mov
insl
push
mov
push
movsl
in
mov
in
std
rclb
lods
mov
adc
xor
stc
fnstcw
pop
movsb
adc
xchg
stos
pop
test
in
outsl
or
mov
mov
in
das
lods
push
cmc
mov
xchg
sub
jl
and
outsl
fisttpl
push
jmp
xchg
xor
cmc
es
xchg
cmpsb
stc
adc
cld
cmp
lea
jnp
sub
stc
adc
pop
dec
pop
movsl
mov
sbb
int
in
fstpl
rol
shlb
sub
movsl
dec
jae
dec
daa
cwtl
or
sbb
sub
adc
sahf
and
xchg
lock
or
test
pop
out
ror
rorb
sbb
jge
or
sub
inc
fwait
sub
fwait
jl
fucomi
adc
sub
push
filds
scas
dec
ret
mov
add
mov
repnz
xchg
adcb
nop
add
stc
clc
jecxz
loopne
add
xchg
inc
lds
cmp
cli
scas
sbb
loopne
icebp
std
sub
orb
pop
std
cmpsb
mov
scas
and
dec
mov
call
pop
pop
push
fwait
repnz
push
lret
jp
sbb
ret
movsl
lret
hlt
dec
and
or
or
pop
mov
mov
movsl
movsl
jl
loop
mov
cld
lret
jl
stc
in
lock
dec
adc
xor
cs
sub
outsw
insl
mov
setns
mov
sub
aaa
cmc
sub
xchg
push
and
ljmp
leave
test
call
xchg
pop
in
insb
mov
sub
pop
icebp
mov
mov
mov
mov
cli
dec
mov
xor
out
shll
inc
jb
call
pop
inc
es
pop
lea
shrb
mov
rolb
or
mov
cmp
les
cmpl
cmp
aad
in
loopne
adc
out
xchg
mov
pop
sarl
mov
jnp
ljmp
sub
loopne
movsb
loopne
or
add
incl
jecxz
lcall
movsl
mov
mov
and
iret
mov
xor
fabs
sub
je
adc
fistl
adc
stos
shlb
add
popw
stos
xor
popl
fiaddl
ja
xor
sub
xchg
pop
test
adc
xor
cmp
rcrl
and
out
sarb
inc
adc
xlat
xor
lods
push
adc
hlt
pop
xorb
xor
sub
jbe
xchg
aad
call
popf
shrl
dec
cmpsl
icebp
mov
andl
scas
push
cltd
insl
cld
inc
insb
mov
dec
cs
sbb
dec
inc
test
push
push
mov
sub
push
sub
add
add
mov
sbb
xchg
push
adc
lods
fldt
dec
mov
pop
roll
mov
ret
pop
push
dec
sbb
rcll
add
fnsave
pop
cltd
sbbl
adc
inc
jnp
icebp
inc
xchg
inc
popf
popa
jg
mov
pop
icebp
sub
push
test
mov
and
in
inc
ljmp
gs
aas
sarl
cltd
das
loopne
imul
xchg
icebp
inc
add
mov
sub
movsl
adc
cwtl
mov
das
fs
mov
sbb
adc
sbb
mov
ret
loop
sbb
jmp
shlb
or
hlt
cld
push
jne
into
pop
dec
daa
inc
push
in
incb
int
cmpsb
js
xchg
dec
sahf
clc
test
dec
call
testl
test
pop
lahf
or
jb
jle,pn
jg
mov
mov
xor
ret
ret
call
mov
stos
fs
call
sahf
add
jnp
pop
jnp
pushl
sub
pushf
cmpsb
push
pop
or
cmpsl
setbe
lds
dec
in
dec
int
mov
jg
repnz
jg
jg
jge
xorb
pop
daa
popf
jl
inc
adc
add
and
and
push
pushf
pop
dec
fisubs
push
mov
movd
sbb
mov
cmp
mov
out
loop
loope
lret
mov
addb
out
rcrl
mov
push
lods
outsb
cli
scas
stos
dec
jnp
push
idivl
stos
loopne
movsb
ljmp
add
mov
outsb
push
push
iret
cwtl
ret
cmc
insb
call
cmc
in
or
xor
mov
aad
rcl
ja
and
add
lea
cmp
scas
inc
push
push
push
in
fmul
scas
xchg
sub
add
mov
mov
xchg
add
mov
lods
inc
push
pop
cmc
insl
mov
pop
sub
adc
movsl
daa
xchg
int
sub
popl
out
cmp
sub
lods
cld
bound
lahf
add
lahf
shrb
pushf
add
pop
sbb
mov
sbb
nop
mov
pop
popf
cmp
sbb
lods
push
dec
lret
aas
cli
sahf
sbb
rcr
cwtl
lock
mov
cmp
jl
xor
jb
sub
fldcw
jns
stos
xorl
xchg
fldcw
pop
loop
dec
jmp
insb
mov
xor
mov
xor
mov
fisttpl
int
sbb
add
nop
aad
xchg
stos
dec
nop
add
add
stc
jg
add
xchg
and
cmp
pop
mov
pop
mov
mov
adc
aaa
pushf
into
sub
adc
jmp
std
popa
rcll
pop
jnp
ds
es
popa
mov
jno
jnp
test
and
push
repz
and
xor
jle
pop
pop
push
icebp
pop
movb
xor
dec
repnz
into
stos
mov
fcompl
lods
xchg
sbb
pop
or
mov
jg
cltd
fwait
std
add
sub
mov
daa
stc
xchg
adc
jb
mov
push
pop
je
aaa
test
adc
xor
clc
adc
mov
push
and
cs
shlb
and
in
call
xor
and
inc
sub
into
jns
and
jne
and
dec
mov
cmc
pop
mov
inc
jbe
popf
insl
jb
mov
fadd
jne,pn
xchg
shrb
fwait
int
cmpsl
fldcw
push
dec
into
testb
dec
jns
out
movsb
outsb
or
dec
stos
push
jmp
ret
outsb
daa
xchg
pop
xchg
add
mov
mov
mov
std
lods
cmpsb
add
jge
dec
mov
inc
js
ror
loopne
in
jle
out
mov
mov
push
fists
cltd
xor
mov
pop
sbb
push
js
jle
jb
inc
cmp
shlb
nop
into
inc
dec
faddl
lret
out
sub
repnz
out
dec
mov
lds
js
adcb
decl
loope
outsl
leave
mov
adc
mov
fmull
sbb
pop
insl
js
shrl
dec
mov
mov
mov
rdpmc
sbb
and
push
and
xchg
sbb
inc
and
jo
jae
adc
aaa
movsb
jg
jl
or
jl
mov
addr16
ss
icebp
ja
int3
jae
mov
xchg
push
sahf
scas
in
leave
sub
scas
or
sub
mov
fstl
jb
xorl
nop
popf
mov
and
std
jg
mov
push
or
cmp
in
xor
mov
cmp
adc
mov
jecxz
add
es
cli
stc
dec
and
xchg
jecxz
pop
pushf
testb
cmp
mov
mov
pop
das
icebp
pop
mov
mov
pop
push
sbb
pcmpgtb
or
cmp
xor
inc
mov
cmp
or
repz
add
cmp
jp
test
loopne
call
jmp
ror
cltd
outsl
cmc
adc
les
jae
adc
shrl
cmp
mov
push
inc
mov
push
sub
xor
push
xchg
das
lds
sbb
cld
fsubrl
xlat
or
inc
adcb
popf
and
int
pop
mov
cmpsl
jg
sub
scas
mov
ret
xor
sbb
add
cmp
add
or
mov
jns
js
lcall
pop
repnz
imul
insl
mov
cs
arpl
imul
fldcw
xchg
pushf
movsl
arpl
loopne
jl
js
or
xor
mov
mov
mov
mov
mov
cmpsb
aaa
adc
xchg
inc
adc
jns
icebp
inc
or
dec
xor
xchg
jle
int3
leave
test
or
das
pop
pushl
mov
inc
aam
cld
idiv
test
xlat
shrb
rorb
repz
inc
mov
mov
push
cmp
xchg
inc
pop
cmp
in
ret
ja
xchg
icebp
xor
push
aaa
fwait
sbb
call
pop
pop
dec
std
scas
sub
xchg
jl
cltd
in
mov
dec
imul
fwait
cli
fs
mov
fistpll
xchg
add
mov
call
add
in
addr16
pop
in
cmp
mov
sub
mov
imul
mov
out
imul
shlb
stos
xor
int
add
pop
sbb
in
inc
xor
repz
in
pushw
popf
gs
in
sahf
pop
jae
push
and
dec
inc
clc
ret
cld
sbb
ljmp
and
loop
out
add
movsb
rclb
dec
push
and
enter
sub
out
movsl
icebp
or
push
lret
push
push
push
fistps
adc
xchg
test
dec
inc
sub
pop
adc
int3
or
adc
pop
push
mov
and
add
jle
hlt
fldl
sbb
push
adc
dec
jecxz
hlt
mov
stos
mov
aaa
mov
push
mov
add
dec
fisttpl
adc
or
cmc
sar
sub
ja
dec
hlt
mov
xchg
adc
adc
mov
dec
cmp
aaa
addl
jge
outsl
inc
loope
aam
push
mov
mov
add
movsl
pushl
mov
sbb
fimuls
enter
or
inc
gs
mov
push
shll
jg
inc
inc
mov
data16
jbe
into
xchg
cmpsl
cld
xor
rcr
leave
lahf
xor
xchg
rorl
jle
rcl
into
mov
xchg
mov
cs
out
pop
jno
xlat
push
xchg
jp
sub
adc
stos
push
mov
mov
adc
sbb
shrb
mov
jae
movsl
lret
xchg
xor
mov
shll
adcb
lods
dec
mov
xchg
das
jg
test
imul
inc
sub
js
jno
mov
add
jbe
aad
inc
mov
andl
jmp
inc
test
push
lods
cwtl
inc
shrb
stc
out
adc
ret
lea
lret
or
sub
xor
test
sbb
dec
push
sub
data16
xchg
mov
push
sub
pusha
movsb
add
add
mov
cs
pop
jmp
cmp
ja
and
inc
ja
pop
rolb
shll
sbb
jg
jp
jp
inc
jne
popa
loopne
sbb
xchg
lock
dec
pop
icebp
sbb
movsl
mov
mov
dec
arpl
mov
hlt
int
fxtract
nop
pop
xor
filds
and
push
mov
jmp
data16
sub
out
js
xor
adc
lock
add
xorl
inc
pop
xchg
pusha
xor
or
lret
mov
aad
jbe
fcomip
ja
pop
sbb
mov
jl
sbb
add
stos
add
cmp
mov
movsl
jl
sub
lods
loope
leave
testl
hlt
pop
or
sahf
mov
gs
pushf
sbb
push
pop
in
shl
ja
xchg
push
dec
jbe
sbb
dec
sub
cwtl
push
fs
test
mov
xor
andb
mov
adc
push
cmp
lahf
push
mov
iret
sbb
or
push
sbb
jg
lret
and
das
lock
xchg
push
dec
sub
xlat
jne
mov
jns
add
scas
out
test
sbb
enter
cld
fmul
rcll
xor
or
adc
mov
jo
sahf
cltd
jne
cmovo
xchg
cmpsb
jae
pop
and
jb
mov
out
adc
popa
mov
mov
xchg
push
xchg
push
xorb
or
popf
dec
xor
cltd
mov
jb
fwait
xor
and
enter
dec
in
add
mov
add
ret
add
sub
stos
dec
xchg
loope
decb
std
push
pushf
pop
shll
lods
iret
cmp
dec
push
rcrb
inc
add
arpl
mov
push
notb
mov
pop
in
imul
jecxz
fdiv
mov
int3
or
sub
mov
mov
dec
arpl
sub
push
xchg
cmpsb
push
pusha
adc
jle
shll
loop
add
dec
fwait
push
testl
sub
fstpt
xor
mov
cmpb
scas
lock
imul
add
lahf
out
loope
sbb
lock
xchg
sub
loope
sub
rcll
adc
xlat
jae
cmpsl
idivb
sbb
pop
nop
adc
mov
xor
jno
test
lret
xchg
or
mov
ljmp
test
sbb
mov
inc
lea
fstps
adc
pop
push
sbb
nop
or
subl
popa
jae
inc
jmp
hlt
aas
test
mov
nop
ja
dec
outsl
jbe
orl
pand
fnstcw
sub
or
mov
push
jge
mov
mov
cmp
ja
push
insl
or
dec
ja
sub
ficomps
xchg
dec
push
into
lea
or
aaa
outsl
cmpsl
mov
dec
jg
xchg
jg
test
pop
jl
mov
popa
inc
jae
or
jae
mov
sahf
jns
mov
xor
mov
push
add
pusha
add
jle
jmp
dec
cltd
push
fs
outsl
adc
or
and
xor
arpl
push
jb
mov
lock
push
inc
pop
mov
scas
in
sarb
dec
nop
popf
cltd
addb
popa
dec
pop
jae
xor
daa
jne
fnsave
xor
inc
cmp
push
sbb
rol
outsl
fincstp
sbb
xchg
xlat
das
inc
push
push
rcr
push
les
inc
cli
lods
add
ljmp
mov
inc
cmp
jmp
sbb
jge
mov
jns
nop
stos
adc
pop
and
mov
sub
scas
iret
mov
sub
jno
mov
ja
or
sub
mov
push
testb
mov
int
cli
cmp
sbbb
in
add
jp
out
dec
cmp
mov
fnsave
mov
js
sub
aam
repz
inc
imul
loop
aad
cli
xlat
dec
loopne
imul
pop
sbb
push
jbe
pusha
dec
sti
xchg
int3
out
cmp
scas
rcrl
scas
adc
idivl
imul
cs
addr16
mov
push
cmp
adc
mov
cwtl
add
mov
push
mov
popf
jmp
add
stos
xchg
add
mov
mov
hlt
adc
mov
stos
clc
sub
popa
mov
cmp
push
jge
pop
std
loopne
popaw
stos
lcall
jo
jle
call
jle
or
push
dec
stos
cwtl
les
jecxz
fisubs
sub
inc
ss
jp
imul
test
imul
std
jle
clc
popf
inc
out
inc
mov
or
cmp
stc
and
mov
adc
mov
aas
lret
dec
xor
and
mulb
pop
repnz
insb
mov
scas
mov
movsb
cld
cmp
fiadds
lds
or
sub
push
dec
aaa
ret
aad
or
sbb
dec
jns
jecxz
mov
sub
mov
loop
adc
dec
popl
gs
pop
test
ret
clc
loop
paddb
sub
push
sbb
mov
fs
and
imul
hlt
jp
cmc
push
ljmp
xchg
add
imul
enter
or
dec
test
and
pop
push
lea
icebp
mov
mov
adc
arpl
mov
push
dec
or
mov
push
push
dec
xor
xchg
lret
inc
aas
jge
pop
jmp
lret
inc
mov
in
enter
in
loope
psubsw
fstpl
lret
fistl
jg
xchg
lret
nop
pushf
mov
fmuls
std
or
pop
mov
push
mov
push
push
push
adc
enter
pop
adc
push
inc
call
ss
frstor
adc
insb
into
mov
cmp
lods
pushf
pop
mov
dec
cmp
hlt
and
sbb
orl
shlb
es
nop
movsb
pusha
xor
fdiv
push
scas
outsl
stos
sbb
mov
sub
cmp
sub
add
inc
in
mov
sub
mov
inc
fisttpll
inc
pop
push
fsubs
inc
xchg
int3
mov
dec
andl
dec
cmp
sub
fsubrl
sbb
adc
push
xchg
ds
jl
addl
jbe
xor
pop
ret
inc
inc
sti
ds
sub
stos
sub
jge
fbld
pop
mov
jo
inc
sar
or
xchg
aam
das
mov
sbb
movsl
out
ret
in
lock
cmp
fisttpll
cmpb
jo
lcall
test
inc
addr16
repz
mov
adc
loop
divb
fdivl
mov
xchg
in
enter
stc
pop
daa
stc
ficompl
lahf
jno
push
and
xchg
divl
cmc
dec
jo
daa
inc
mov
push
inc
loopne
mov
int
je
jle
mov
cli
neg
mov
cmp
sub
mov
shrl
test
ror
out
jge
out
push
add
sbb
jo
subb
sub
add
mov
ja
push
imul
xsaves
out
sbb
push
lods
imul
enter
adc
sub
pop
test
xor
outsl
sahf
inc
out
and
imul
adc
cmpsl
insl
pop
cmpsl
cltd
into
out
lahf
sub
dec
movsb
mov
imulb
fsubrl
mov
aad
call
aaa
cmp
jecxz
cltd
mov
dec
pop
or
icebp
lret
cltd
mov
jmp
je
push
pop
cmp
dec
and
add
mov
lods
cld
jecxz
xorl
daa
cli
sub
push
mov
arpl
shlb
fisubl
sbb
dec
bound
rolb
in
mov
jo
popf
imull
hlt
sbb
cmp
aam
lcall
fimuls
xorl
mov
hlt
arpl
mov
sbb
imul
imul
in
xchg
imul
sub
nop
scas
popf
add
pushf
cld
js
sbb
mov
push
dec
mov
loop
mov
mov
enter
dec
push
ja
pusha
lcall
in
scas
mov
mov
stos
icebp
push
inc
dec
pushf
mov
inc
jl
xor
cli
std
enter
add
push
cltd
std
idivb
popa
mov
pop
daa
call
orb
xor
int
xor
shll
hlt
lods
pop
data16
adc
push
sbb
xchg
sbb
out
cwtl
test
aad
xchg
sub
leave
lods
xor
dec
mov
test
js
insb
dec
add
lods
inc
dec
std
icebp
sti
pop
sub
and
jns
or
jno
xor
and
andl
popa
in
sbb
popf
or
rolb
push
cs
jge
and
pop
sub
dec
clc
cmp
xor
mov
in
push
inc
fistpll
jns
sub
cmp
fmul
out
dec
xlat
imul
sbb
cwtl
daa
insl
add
mov
inc
xor
mov
sbb
imul
inc
inc
rcll
adc
sbb
syscall
ja
lret
dec
mov
xchg
adc
in
add
jbe
out
and
add
std
imul
adc
mov
andl
shlb
sub
call
fsub
and
aad
dec
insl
ret
xor
sbbl
jl
dec
mov
cwtl
aas
xchg
jnp
mov
pop
lret
adc
loopne
jmp
sub
sbb
xchg
xor
incl
outsl
xchg
or
call
xor
aaa
push
arpl
ljmp
fldt
inc
or
mov
pop
je
ds
jmp
fs
and
mov
xor
push
adc
xchg
das
in
in
or
dec
cli
pop
sub
and
pop
nop
aaa
mov
pop
popf
insb
idivl
sahf
out
movsl
loop
data16
stos
int
mov
stos
inc
mov
or
and
jmp
adc
lret
in
scas
mov
xor
mov
lahf
aas
mov
pusha
sub
shl
or
in
out
lahf
jae
mov
sti
pop
bound
dec
mov
mov
andl
scas
jno
jne
sbb
jecxz
movsl
cmp
shr
cmp
cmpsb
sahf
dec
pop
in
and
mov
lret
ja
and
repnz
dec
xor
dec
cmp
mov
jle
adc
inc
cmp
pop
sbb
movb
lret
xchg
inc
xor
jl
ss
xlat
jns
mov
les
mull
pusha
clc
and
test
ss
shrb
das
out
ljmp
out
push
mov
jo
lret
add
xor
aam
sub
popa
fisttpl
jmp
xor
push
iret
jl
cwtl
ljmp
repz
rcr
movsl
out
test
sub
mov
mov
jo
icebp
or
jne
insb
sarl
sub
lahf
out
bnd
or
adc
pushf
pop
addb
in
pop
sbb
insb
into
fnstcw
xlat
push
outsb
cld
xchg
xor
push
sbb
jp
in
add
adc
and
pop
sub
and
test
enter
sub
rclb
or
xlat
clc
icebp
dec
pop
add
mov
and
mov
push
sbb
and
aaa
inc
lods
dec
jmp
or
les
xor
push
js
sahf
adc
cmp
push
jp
pusha
mov
lret
cmp
fbstp
add
mov
enter
dec
lds
ror
roll
hlt
cltd
mov
aad
inc
dec
jmp
and
fnstcw
cld
fstl
filds
cmpsl
and
mov
pop
and
jbe
jle
mov
xchg
inc
int3
add
jbe
pop
inc
sbb
test
sbb
jb
inc
sbb
push
sbb
jge
hlt
in
pop
jge
mov
int3
rorl
dec
inc
popa
daa
iret
cmp
negl
push
in
adc
push
insb
xchg
fs
stc
add
stos
sub
sub
sbb
xchg
mov
add
jg
loopne
mov
insb
pop
loopne
rcl
inc
xchg
mov
loope
mov
push
sub
push
pop
add
or
cltd
mov
fsubs
cmp
jbe
lahf
add
cli
pop
fldt
bound
xlat
ds
movsl
push
dec
jecxz
or
or
dec
mov
lret
enter
push
lods
int
inc
hlt
fcom
dec
jle
and
std
xor
dec
psubsb
fs
xchg
push
jo
int
fsubp
push
push
aam
pop
cld
cld
add
jnp
mov
mov
loope
in
ds
daa
fwait
jno
sbb
mov
and
jmp
ret
fisttps
test
in
xchg
icebp
dec
push
dec
repz
mov
dec
lahf
sub
imul
add
call
push
jbe
in
aas
mov
add
add
and
or
faddp
aaa
pop
adc
idivl
stos
lcall
iret
add
int
xchg
mov
sub
lods
jge
movsl
sub
sub
and
and
int
adcb
insb
test
mov
push
in
cmp
inc
aam
xor
sbb
jb
dec
mov
adc
outsb
xchg
push
sar
xor
sbb
negb
jl
fldt
aam
out
addr16
sbb
scas
ret
push
jo
int3
test
adc
not
rcr
mov
pop
mov
fwait
dec
sbb
pop
dec
add
out
push
jne
addl
movb
dec
cmp
aaa
inc
xor
mov
inc
fiaddl
daa
pop
jns
daa
cltd
addr16
dec
cwtl
mov
mov
mov
adc
test
mov
inc
xchg
test
jle
and
call
jg
xor
and
out
jae
cmpsb
xor
fcmovne
jmp
xor
in
jge
adc
mov
loop
cmpsl
cmp
mov
or
mov
cmpl
movsb
xchg
jne
xor
xor
test
leave
cmp
cmp
scas
jb
or
push
or
mov
ret
rolb
in
and
iret
add
ds
adc
cmc
pop
dec
outsl
dec
sti
jecxz
xchg
icebp
mull
lahf
dec
lahf
jb
nop
pop
jne
mov
repz
mov
jb
fisubs
icebp
cmc
mov
or
enter
int3
loope
inc
shrb
ss
lcall
aad
pop
movsl
xor
dec
push
add
pop
inc
pshufw
in
test
push
or
lea
jbe
jge
movsb
xchg
sbb
cmc
leave
cmpsl
insl
nop
fisubrs
dec
sub
adc
jge
es
call
sub
sbb
cld
xchg
loope
hlt
dec
lods
mov
sbb
cmp
or
mov
fsub
xchg
fidivrs
sbb
testl
pop
dec
dec
int
jge
loopne
popf
leave
mov
sbb
shll
repnz
ja
rorb
loope
cs
push
pop
cmp
mov
cpuid
aam
sub
lahf
fnsave
inc
test
dec
popf
loope
pop
movsl
adc
sti
pop
inc
out
and
stos
ja
aas
push
sub
test
adc
ljmp
pop
mov
jg
fs
fnsave
adc
push
mov
sub
cmp
and
and
push
popf
bound
push
sub
fiadds
mov
xchg
mov
std
insb
cmpsl
pop
xor
pop
test
seto
notb
pop
fnsave
pop
fnsetpm(287
outsl
add
popf
test
cld
pop
stos
in
clc
test
out
shll
mov
jnp
in
bnd
xchg
add
add
aas
nop
call
mov
adc
jp
mov
mov
test
or
mov
push
out
pop
jnp
xchg
and
push
je
cmp
lods
xor
aaa
dec
and
push
pop
xor
movl
mov
mov
popa
aam
std
inc
dec
mov
imul
nop
xchg
js
insb
mov
ja
data16
mov
mov
roll
sub
push
sarl
mov
push
add
push
pop
pop
addr16
pop
mov
js
dec
cmp
out
repz
mov
push
pop
and
jmp
mov
mov
shll
clc
cmp
xchg
inc
arpl
fisubrl
movsb
ret
or
lcall
mov
add
mov
fucom
pop
aad
out
sbbl
inc
lods
cmp
dec
xor
mov
jp
add
ret
fs
sbbb
add
repz
popf
push
xor
cld
stc
push
shlb
test
and
push
jg
dec
or
sbb
mov
nop
push
cs
clc
or
es
sub
jbe
add
cld
bound
mov
iret
pop
xchg
test
repz
mov
pop
xor
sub
push
mov
lret
cli
pop
cmpsl
or
mov
cmpsl
xchg
lcall
int3
outsl
sbb
push
repz
or
stos
insb
mov
cmp
adc
mov
psraw
sahf
in
mov
pop
movsl
jnp
out
xchg
mov
dec
insl
push
ret
sahf
scas
inc
xchg
mov
insb
fidivrl
jo
gs
mov
iret
jg
and
jo
jmp
cs
push
jne
and
mov
outsb
aad
adc
sub
scas
arpl
xchg
scas
mov
fs
fdiv
sahf
and
arpl
inc
fwait
test
ds
inc
push
or
push
mov
outsl
jno
daa
xor
rcll
cltd
je
mov
std
lods
jle
jecxz
cli
cmc
mov
rcrl
pop
insl
mov
add
mov
iret
mov
sub
push
lret
pop
js
lea
mov
adc
add
jl
js
sub
sbb
lods
and
jbe
fadds
cmp
mov
xchg
fldenv
popa
test
jns
sbb
jp
sbb
cmp
xchg
cmc
xchg
aaa
aad
sub
lret
lahf
lcall
push
cmp
insl
and
es
add
adc
loope
sub
rclb
or
sub
fisttps
out
hlt
loop
popa
cltd
dec
lret
int3
cmc
cmpb
insb
sub
add
xchg
jne
mov
inc
and
icebp
sti
adc
cmp
jecxz
leave
mov
cwtl
lahf
test
mov
hlt
inc
rcrl
inc
add
sbb
xchg
dec
jecxz
dec
and
jge
and
insl
push
popa
orb
inc
mov
scas
adc
fnstenv
inc
in
jp
insb
mov
cs
pop
sub
pop
cld
inc
fisubrl
jno
pop
shlb
outsb
scas
inc
ss
xchg
lcall
hlt
dec
adc
push
fidivl
xor
test
outsl
lods
mov
sahf
and
cs
push
mov
aas
out
jle
lret
test
mov
or
int3
sbbl
nop
movsl
xor
cmp
ss
mov
mov
ja
gs
xchg
fadd
rcll
jns
es
movsb
mov
sbb
insl
in
out
push
fisubrs
lea
jbe
jno
leave
mov
loopne
jle
lret
mov
jnp
ftst
sub
test
es
icebp
in
out
sbbl
mov
lret
decb
xor
fwait
mov
pop
js
mov
icebp
mov
enter
gs
mov
stos
cmp
psubusw
movl
int3
dec
add
jmp
dec
xchg
and
rclb
loop
cmpsl
sub
pop
addr16
jp
adc
inc
xor
jae
xchg
or
inc
lock
or
sbb
xchg
dec
or
adc
aaa
mov
movsl
rolb
orl
xchg
cmp
push
jle
lcall
and
pushf
cmp
out
imul
pop
or
lahf
rolb
imul
adc
and
iret
push
push
loop
lret
dec
mov
and
mov
and
xor
pop
mov
notl
fs
add
rorb
cli
das
mov
stc
push
push
aas
out
xor
stos
jno
jbe
mov
mov
sub
outsb
xchg
leave
lcall
fnstcw
arpl
movsl
jae
cwtl
xlat
mov
or
cmpsl
inc
jo
mov
cltd
rcrl
repz
repnz
sbb
scas
test
jb
pushf
lock
or
jnp
inc
sar
push
inc
insb
outsl
push
aaa
mov
sti
push
mov
xor
js
popl
addb
aas
cltd
mov
cmp
out
int
add
aaa
ds
or
cmp
shlb
cmp
jg
lock
icebp
lods
dec
push
bound
lods
cwtl
out
or
cmc
es
inc
repz
jno
push
sbb
mov
test
cmp
jne,pt
xchg
xchg
mov
cmc
mov
xor
mov
mov
push
push
divb
pop
arpl
jmp
cmp
lods
test
lret
std
daa
popf
cvttps2pi
movsb
scas
xchg
dec
jg
les
fcomps
fcompl
popf
sbb
lahf
repnz
fxam
mov
sbb
jecxz
outsl
int3
lahf
xchg
sub
das
jo
xchg
mov
movsb
int3
cmpsl
clc
sti
dec
in
adc
test
adc
or
sbb
pop
sbb
sbb
aam
xchg
addr16
int3
fstl
pushf
jnp
js
jbe
pop
js
jbe
mov
sar
push
lea
jmp
jle
jmp
pop
out
stos
push
les
insl
xchg
cli
rcr
stos
dec
adc
cmc
icebp
lahf
insl
ret
decb
jecxz
js
mov
icebp
push
adc
rclb
les
repz
fwait
mov
daa
lods
cmp
mov
mov
lcall
xor
aam
iret
hlt
adc
out
and
add
xchg
inc
les
pop
cmp
test
ljmpw
inc
ret
adc
sbb
push
rcrl
sub
sub
rcrb
rcll
jbe
push
inc
cwtl
lods
lds
imul
enter
divb
adc
mov
or
add
jae,pt
lds
sub
leave
outsl
imull
xor
jae
cwtl
popl
insl
bound
push
cmp
repz
and
dec
hlt
pop
or
xchg
pop
xchg
jl
add
adc
sahf
xor
jecxz
or
pop
or
popa
and
aam
sub
negl
push
xchg
sub
mov
loope
add
push
sub
loope
mov
jg
pop
mov
sub
push
pop
outsb
xor
jo
cmp
into
outsl
jle
add
imul
push
sbb
dec
loop
cmp
movsb
pushf
inc
pop
jle
data16
rcl
int3
cmc
cmp
mov
pop
jg
add
rcrl
das
jbe
insl
and
jo
ja
mov
dec
jge
inc
rolb
pusha
push
cmp
mov
mov
andl
bound
test
adc
bound
ret
cmc
pushf
sbb
mov
adc
stos
mov
jp
pop
adc
stos
xor
xorb
ds
pop
ret
jae
sbb
mov
fwait
sbb
out
and
lret
xor
int3
sub
lret
lahf
mov
outsl
fisttpl
pop
xchg
nop
push
loope
and
arpl
mov
ficoms
loopne
sub
inc
inc
insl
sti
pop
outsb
scas
jmp
call
orb
adc
icebp
add
mov
pushf
es
or
insl
jp
mov
idiv
dec
xchg
dec
xchg
mov
filds
out
imul
in
ljmp
xor
inc
loopne
ljmp
mov
jle
lret
call
loope
cmpsb
dec
loope
mov
jmp
pusha
outsl
adc
inc
push
and
mov
pop
cs
out
sbb
push
cmp
add
mov
push
or
mov
and
leave
sub
mul
dec
flds
jmp
lret
stos
inc
int3
clc
inc
mov
roll
add
int3
je
cltd
mov
test
sbbl
jb
push
push
inc
push
jae
push
mov
stos
shrb
lret
lds
jecxz
ret
jmp
dec
jle
xor
loope
sbb
jno
test
pop
std
push
pop
gs
daa
push
out
mov
testb
fbld
sbb
or
inc
and
cs
test
push
jle
sbb
push
sarb
sub
test
dec
std
imul
cmp
test
pop
dec
scas
pop
add
jecxz
jae
xchg
xchg
pop
xchg
testb
movsb
add
dec
test
out
adc
push
inc
pop
cltd
sub
roll
cmp
jmp
sar
mov
aas
mov
in
imul
xchg
imul
shr
jbe
xorl
daa
das
sbb
xchg
and
insb
push
fisubs
rorb
int
cmp
xor
jmp
adc
fcmovnbe
shrd
nop
push
fs
aas
fsubr
xchg
xchg
jge
push
or
xor
cs
add
fcomp
int
jmp
inc
cmp
stos
ja
xchg
sbb
xlat
adc
mov
fs
outsb
out
adc
xor
sub
hlt
lock
loope
icebp
in
or
pop
xchg
mov
adc
subb
nop
sbb
mov
mov
jo
adc
jmp
inc
je
rorl
cli
dec
call
icebp
dec
imul
dec
dec
nop
pop
out
dec
movsb
xor
stc
dec
lock
jmp
jo
mov
lahf
xchg
aam
and
outsl
and
xor
int3
stos
imul
add
stos
dec
jecxz
xlat
sbb
adc
or
or
pop
loopne
mov
cmc
hlt
nop
adc
cli
mov
into
aas
push
into
push
mov
sbb
xchg
dec
mov
imul
mov
cmp
lock
inc
adc
pop
or
das
cmp
dec
aaa
inc
les
cltd
and
add
jae
sub
jge
enter
cmp
gs
out
mov
inc
stos
or
mov
sub
mov
hlt
mov
inc
adc
stc
push
dec
enter
jecxz
pop
inc
jmp
jle
mov
push
sti
and
cltd
jl
adc
int
out
popf
sbb
push
divb
cld
popa
lock
enter
add
pop
jne
mov
leave
es
mov
ds
out
xor
aaa
xchg
insl
jmp
inc
fwait
pop
push
les
xchg
sub
mov
inc
or
inc
pop
jns
sub
mov
adc
movsb
sbb
jo
mov
mov
dec
movb
pop
daa
and
dec
popa
clc
shll
inc
jne
xor
incb
dec
fsubs
or
subl
inc
out
xor
cmp
leave
outsb
inc
lds
cmp
add
cmp
pusha
hlt
and
ljmp
push
dec
popa
sub
lahf
lock
sbb
sub
in
push
rorl
xchg
jl
push
sub
repnz
or
orb
sbb
dec
mov
xchg
dec
ds
pusha
cmpsb
ja
imul
pushf
mov
push
sbb
pop
sub
or
mov
std
ss
pop
pop
scas
int
mov
sub
mov
test
jne
pusha
gs
mov
add
fcoml
push
xor
pop
lods
push
pusha
leave
jo
imul
jae
mov
inc
mov
xchg
test
mov
out
fistpl
xchg
mov
xchg
test
jle
rorb
test
jno
gs
mov
xchg
aas
out
mov
arpl
xchg
sarl
push
jmp
rcr
jl
pop
lods
dec
les
add
jl
jg
shll
or
dec
push
rolb
mov
xchg
xchg
cmp
sub
div
shr
mov
clc
test
push
mov
aad
pop
mov
mov
jne
rcll
dec
test
fsubrl
test
jo
not
mov
sub
xchg
pop
xchg
ret
mov
pop
xor
and
inc
add
or
fcmovb
stos
adc
test
pop
jae
xchg
xchg
mov
inc
jecxz
dec
add
das
cmpsl
adc
push
sbb
jp
and
jbe
xlat
test
scas
in
jb
cmp
nop
test
mov
mov
xchg
sbb
loop
lcall
or
xchg
push
adc
dec
outsl
mov
loope
xchg
xchg
mov
mov
cld
mov
icebp
out
pop
scas
jg
ret
sbb
xchg
mov
rorb
adc
aam
mov
push
adc
cmp
nop
pop
mov
faddl
hlt
pop
insl
movsb
mov
and
mov
mov
cltd
cwtl
inc
pop
jbe
xorl
inc
pop
add
popf
xchg
cwtl
adc
adc
dec
testl
ret
mov
in
movsb
es
fistps
orl
sub
lods
add
and
lods
mov
push
xchg
lods
outsl
sbb
test
cld
test
rcrl
out
add
int
jle
mov
std
sbb
mov
mov
arpl
popa
xchg
or
cmp
jecxz,pn
in
imul
xorb
add
adc
push
cmp
enter
lods
test
mov
jp
cmc
jne
cs
cmp
sbb
imul
pusha
xchg
inc
loop
mov
xchg
es
dec
xchg
jnp
push
ret
cmc
bnd
and
test
jg
in
pop
loopne
or
add
xor
dec
dec
setnp
gs
mov
movl
mov
into
test
jp
dec
jg
sahf
inc
mov
nop
xchg
mov
loopne
cli
fmull
repnz
xchg
xchg
and
pop
dec
jle
or
pop
xchg
push
push
insb
addr16
je
jmp
mov
cld
inc
fnstsw
scas
loopne
sub
movsl
nop
adc
sarl
adc
aas
pop
insl
mov
inc
jbe
movsb
push
sbb
xchg
stc
daa
add
fucom
pop
leave
xchg
jp
add
mov
push
repnz
mov
mov
filds
xor
jge
repz
lods
bound
mov
ss
mov
cmp
jnp
jbe
sub
fmuls
insl
push
out
loopne
rcll
aad
or
pop
data16
fistpll
inc
xchg
das
mov
shlb
and
push
ljmp
bound
into
mov
push
movsl
dec
dec
push
les
pop
mov
hlt
sub
mov
test
inc
lods
popa
out
adc
pushf
and
in
xor
mov
cli
fisttpll
pop
es
jae
and
cmp
mov
jae
test
js
lret
daa
aam
pop
pop
cmova
sbb
lret
ret
insl
jmp
pop
shrl
sti
cmpb
clc
mov
int3
ds
fwait
sub
mov
dec
jl
test
jb
push
xorb
ret
mov
pop
ss
in
xchg
xor
idivw
out
aas
xchg
nop
jo
adc
xchg
sbb
arpl
imul
cmc
xchg
in
fs
insb
fcomi
int
sub
decl
cltd
test
fcmovbe
stc
and
mov
jl
outsl
xor
push
in
hlt
iret
xchg
push
adc
jae
out
cmc
call
or
lcall
movsb
das
adc
mov
cmp
mov
sub
inc
mov
fnstcw
lret
jle
adc
push
sub
cltd
cmp
out
sti
adc
mov
mov
pop
add
ret
mov
adc
test
mov
push
jecxz
imul
pop
sub
mov
out
sarl
mov
cmp
out
mov
dec
pop
inc
fldl
xchg
or
or
and
daa
xchg
aaa
dec
jo
push
jae
js
inc
bound
ljmp
mov
cmp
dec
add
push
sbb
scas
out
adc
mov
ret
pop
mov
pop
aam
orl
idivl
sbb
jae
or
sbb
mov
sub
jmp
movsb
mov
lock
push
cmpsb
cmpps
mov
dec
xor
jnp
xchg
push
dec
inc
movb
jne
mov
fs
pop
or
inc
mov
mov
lret
test
sub
imul
add
jmp
outsb
lods
mov
xchg
and
divl
lods
sti
stos
repnz
xor
pusha
xor
sbb
out
xor
mov
mov
mov
aad
or
fiaddl
xor
lea
sub
insl
xchg
sti
adc
push
repnz
jb
ret
test
out
fwait
xchg
repnz
jns
jne
jge
shll
into
sub
fldl
dec
in
movsb
out
sahf
pop
outsl
js
arpl
or
dec
and
xchg
fdivrs
js
icebp
es
jno
out
push
add
push
push
or
adc
jns
cmp
into
ret
jp
sti
jnp
or
sarl
pop
fwait
ljmp
mov
cmp
push
add
mov
or
in
imul
or
push
pusha
dec
loope
push
filds
xor
push
jbe
pop
popf
jl
loopne
aaa
sub
jge
cmp
aad
jg
loopne
orb
loopne
dec
or
add
clc
pop
dec
orl
push
pop
sub
mov
out
mov
and
cmc
fsubl
mov
scas
push
test
out
out
and
jle
mov
ljmp
jle
es
or
inc
cmp
daa
jns
mov
movsl
ds
or
cld
out
add
test
and
cmp
adc
add
xchg
sbb
add
int3
lcall
mov
insb
lahf
adc
adc
test
sahf
js
mov
inc
sbb
push
sbb
fiaddl
lods
imul
push
arpl
aas
dec
jb
aam
sbb
mov
fsubrl
nop
out
cld
dec
outsl
inc
ds
xor
cmp
fistl
or
sbb
mov
sub
sbb
mov
push
and
mov
xor
clc
into
ds
ffreep
jo
aaa
dec
pop
js
rorl
mov
push
mov
and
pop
inc
push
ret
stos
loop
jecxz
into
push
lock
icebp
cs
adcb
out
jl
pop
mov
mov
in
out
imul
cmp
adc
inc
adc
sbb
add
in
test
push
mov
adc
arpl
nop
fwait
push
inc
jp
sub
jbe
xor
xchg
cli
shll
sbb
hlt
and
or
cmpsl
mov
ds
fdivrl
out
push
imul
scas
sub
adc
scas
cmp
inc
das
mov
mov
jmp
mov
pop
cmpsb
rcl
xchg
test
add
repz
inc
xor
mov
outsb
mov
mov
into
add
rcrl
fwait
int
stos
dec
push
clc
outsl
sbb
cmovns
add
pusha
icebp
int
jp
jne
out
jbe
mov
and
cmp
jo
xchg
mov
or
test
ret
inc
lea
xor
lcall
push
insb
testl
insb
out
mov
mov
dec
mov
test
jno
cltd
pop
data16
and
fnstenv
add
test
or
pop
lret
push
sub
outsb
stos
test
mov
clc
daa
jecxz
cmp
insb
popf
push
jmp
push
shl
loope
daa
iret
insl
cmp
push
mov
insb
stos
loope
inc
in
incl
or
lods
adc
lock
mov
add
repnz
fistpl
ljmp
mov
lods
add
dec
cmp
push
pop
rorb
fs
loope
adc
outsl
mov
sbb
enter
pop
add
imul
push
mov
xchg
out
and
je
pop
dec
movsl
popf
nop
loopne
in
sub
dec
mov
rorl
push
scas
jmp
bound
inc
repnz
mov
add
xchg
jns
in
mov
pop
jo
aam
add
cmp
les
cmp
jmp
adc
jmp
jecxz
fistpl
inc
cmc
mov
cmp
add
in
push
sbb
lret
xchg
dec
arpl
sub
test
pusha
loop
inc
sbb
popa
xchg
cs
or
fistpl
mov
aas
sub
sbb
jecxz
leave
xor
fcomip
lock
jecxz
or
test
adcb
popa
push
or
pushf
and
subl
jb
int
jmp
cmp
xor
cmp
sbb
je
mov
mov
mov
push
add
ret
mov
sbb
push
repnz
inc
xor
sub
cmp
jmp
das
pop
pop
mov
shrb
into
rorl
popa
ret
add
xor
mov
in
je
enter
fwait
bound
ja
sub
lods
jo
sub
jo
push
jge
mov
push
mov
lods
into
gs
rcrl
sbb
cmpl
ret
xchg
cld
cmp
push
xchg
minps
adc
or
or
inc
pop
daa
jb
jge
or
call
mov
dec
rcrb
and
push
jae
mov
stos
int3
shl
ret
pop
out
add
cmpsl
loope
push
jge
sahf
mov
out
pop
lock
xchg
ret
sub
mov
jns
fwait
test
shrl
ret
mov
or
addl
sbb
jmp
sarl
push
test
xchg
push
push
push
xor
push
and
adc
dec
sub
clc
push
jno
lret
fnstsw
dec
xor
jge
stos
inc
scas
and
loop
ret
adc
mov
sub
inc
fimuls
call
shrl
xlat
arpl
loop
sub
jbe
mov
sub
dec
mov
jbe
cmp
popa
jg
fldcw
sbb
test
aam
xchg
add
pushf
imul
addr16
add
popl
xor
jne
cmpb
lea
mov
ficoml
movsb
and
sub
subb
jp
pop
leave
add
adc
push
incl
inc
ret
inc
sbbl
pusha
fwait
icebp
cmpsl
mov
fucomi
dec
inc
loop
pextrw
pop
xchg
or
enter
or
or
dec
inc
les
nop
dec
ja
xchg
cltd
sub
cmpsl
adc
sarb
dec
aad
or
xchg
and
addb
inc
push
xor
fmuls
push
scas
movsl
cmp
dec
jecxz
add
mov
loopne
pushf
cmc
subb
push
enter
mul
mov
push
aas
or
push
mov
in
sbb
mov
sub
cmp
mov
movsb
loopne
je
orl
sbb
push
jle
push
jnp
jp
out
lahf
push
jecxz
jmp
or
add
mov
mov
pop
popf
sbb
adc
or
pop
les
mov
in
mov
lahf
jp
in
jae
in
mov
out
lcall
stos
sarl
in
movsl
sub
cmp
push
loope
xor
dec
insb
push
mov
stc
adc
rcll
push
mov
cld
xor
insb
pop
lock
stos
testb
inc
xor
fsubrs
es
cmp
mov
out
sbb
pop
dec
mov
call
ss
and
outsl
imul
mov
or
push
pop
in
cmp
stos
sbb
dec
popa
mov
daa
ss
and
clc
xchg
xchg
cs
cmpl
sbb
mov
inc
pop
ja
data16
and
add
sub
cwtl
sub
adc
sbb
pop
cmp
rorb
inc
pusha
fidivs
jg
push
inc
fs
sbb
xor
dec
jb
hlt
bswap
mov
rcl
jno
insb
pop
sub
jmp
dec
addr16
in
nop
jns
mov
rcrb
or
bound
addr16
out
pop
xchg
out
ds
loope
cmpsl
mov
lods
mov
out
xchg
test
loope
pop
mov
mov
ja
aad
pop
xchg
push
int3
add
arpl
repnz
sub
stc
outsb
xor
pop
push
xchg
mov
and
lret
enter
repnz
push
cmp
in
leave
jae
inc
mov
nop
jl
sysenter
gs
lahf
shll
add
cwtl
ret
jp
jbe
lods
or
ret
fbld
mov
decl
test
into
in
inc
lea
dec
xchg
cmp
ja
cmp
je
mov
loopne
xor
dec
push
push
idiv
fnstsw
aas
pop
push
sbb
cld
sbb
lds
cmp
jp
mov
and
mov
mov
fcoms
test
sub
mov
and
stc
mov
push
nop
sbb
outsb
data16
fsubrs
lds
outsb
pop
pop
or
out
loop
add
ret
xor
mov
pop
jle
mov
icebp
and
sbb
or
or
dec
imul
clc
fdivrs
ret
dec
xor
push
or
or
jbe
sub
sbb
or
aas
push
pop
adc
mov
and
cmp
test
xchg
clc
in
push
aam
mov
in
jns
mov
imul
ret
dec
mov
push
ret
mulb
cmpsl
or
sahf
sti
cs
lock
pop
pushf
std
rclb
mov
out
mov
orb
hlt
mov
mov
xor
jle
add
adc
lds
lcall
nop
xchg
imul
ljmp
cltd
mov
or
je
mov
pop
add
sbb
mov
roll
adc
push
int
inc
push
sti
in
or
movsl
les
add
stos
add
adc
push
jo
mov
sbb
int
lods
filds
xchg
lret
fs
and
pop
pop
cmpsb
inc
dec
rclb
sub
push
xor
imul
movsl
jae
jo
sbb
scas
pop
aam
je
inc
scas
lds
mov
mov
mov
jle
outsb
jbe
and
fbld
sbb
pop
loope
hlt
pop
sarl
sub
mov
test
sub
mov
dec
add
sbb
xchg
xchg
sarl
dec
sbb
inc
xchg
xchg
mov
adc
leave
in
push
std
xchg
adc
sub
sub
mov
fcmove
mov
fs
mov
and
imul
mov
pop
mov
or
push
jmp
aaa
fidivl
ds
or
inc
adc
push
ss
in
mov
mov
mov
aam
mov
addl
mov
mov
pop
sub
inc
loopne
cmp
lahf
bound
jbe
insb
shl
push
push
shlb
movsb
mov
fsubrs
iret
ss
outsl
sub
mov
sbb
movsl
jecxz
pop
xor
insl
jne
in
stos
movsl
fwait
mov
enter
out
psubsw
xchg
dec
pop
jne
fistl
ds
push
das
aas
aas
inc
lods
sub
sbbb
incl
fcoms
mov
and
fs
sub
iret
mov
push
pop
add
stos
or
test
adc
sbb
xchg
sti
mov
stc
mov
and
loopne
or
ret
mov
adc
icebp
movsl
mov
jne
orb
sarb
push
jle
mov
daa
ljmp
jae
aad
sbb
aad
add
cmp
adc
and
push
sub
stos
pop
aam
mov
int3
add
imul
sbb
jbe
clc
push
mov
mov
pop
pop
and
or
shlb
pop
mov
fs
or
inc
mov
fscale
sbb
shrl
and
mov
push
inc
pop
mov
xchg
cmp
popf
les
in
rcl
pop
insl
jno
hlt
sahf
lcall
cmp
cmpsb
loop
dec
mov
xchg
jecxz
cltd
adc
and
roll
lret
pop
int
push
sub
inc
ss
pop
push
scas
xor
sbb
mov
sti
or
sub
and
xlat
fmulp
pushf
xor
shll
push
cli
ja
outsl
mov
mov
push
cmp
fbstp
lret
add
jp
ror
mov
test
mov
add
mov
sub
fidivrs
rolb
jns
in
xchg
cmp
mov
lods
fs
jb
shl
lret
push
fs
mov
mov
xchg
or
fs
inc
jg
insb
xor
lods
nop
subl
pop
mov
and
fsubrl
ja
imul
stos
imul
jg
push
inc
outsl
test
jno
or
cmp
xchg
mov
or
mov
leave
pop
sahf
shlb
addb
adc
sub
lds
cmp
shl
or
adc
fnstcw
fstpt
cmpl
leave
jo
ljmp
inc
iret
gs
xor
xor
loopne
xchg
push
aas
outsb
xor
dec
mov
and
rol
int3
loopne
or
sbb
rorl
in
das
arpl
mov
sub
dec
add
dec
pop
cbtw
adc
aas
cmp
or
rol
mov
sub
or
fdivs
cmpsl
test
mov
iret
jbe
pop
stos
mov
inc
add
lods
jp
fdivs
je
ljmp
bound
out
and
xor
pop
sub
lahf
data16
testl
icebp
xor
and
pop
std
movsl
xorb
sub
test
loope
ficompl
insb
and
addr16
ret
and
mov
inc
arpl
sub
movsb
pop
cld
test
pop
int3
mov
pushf
jg
scas
dec
adc
jo
pop
sub
movsl
cmpsb
shl
bound
aad
push
mov
jns
lods
mov
call
fwait
dec
aas
xor
jbe
push
mov
hlt
push
fidivrl
leave
aaa
cmpsb
gs
fs
xchg
daa
imul
adc
dec
mov
sbb
scas
scas
shlb
sbb
movsl
fldenv
je
mov
das
push
jmp
push
lea
cltd
clc
popa
xchg
xadd
test
dec
or
xor
pusha
inc
xchg
ljmp
mov
aaa
sbb
mov
ljmp
leave
mov
sub
call
rorb
sbb
xchg
sarb
movsl
movsb
xchg
iret
xchg
pop
dec
cld
jge
and
popa
int
repnz
jle
or
mov
mov
fbld
insl
sti
sti
mov
sub
stos
sbb
cli
adc
pop
fwait
stos
sub
lcall
mov
mov
push
out
mov
xchg
mov
pop
sbb
dec
scas
lret
xchg
sbb
ss
sbb
xor
std
or
add
pop
push
mov
ss
hlt
cmp
and
fs
out
mov
movsb
lcall
inc
pushf
sbb
mov
bswap
test
ljmp
mov
mov
test
dec
cltd
sub
sub
and
in
das
mov
xchg
fbstp
les
in
clc
mov
out
cmpsb
mov
adc
inc
jo
mov
ret
jnp
mov
ret
cmp
dec
push
inc
ljmp
push
mov
or
xor
xchg
push
or
xchg
inc
aas
mov
xlat
in
mov
leave
nop
imul
jno
or
sub
das
es
outsl
adc
mov
movzbl
xorl
mov
stc
jecxz
shr
sti
outsl
add
mov
jl
rcl
icebp
jne
fdiv
in
xorl
inc
fistpl
xor
hlt
adc
ljmp
sub
rcrl
test
sub
lcall
mov
decl
fmull
jle
sbb
fimuls
fidivs
dec
movsl
pop
fisubs
inc
fildl
inc
jmp
dec
dec
cmpl
inc
mov
mov
out
mov
rolb
popf
sbb
push
cli
xchg
icebp
cltd
xchg
das
fistl
add
paddusb
jbe
mov
jmp
sbb
scas
loopne
xchg
pop
mov
aas
xchg
cld
push
cs
jle
dec
ja
pop
adc
jmp
aam
dec
in
pop
xor
daa
lret
inc
xchg
test
push
add
call
jno
outsl
in
inc
sub
mov
jg
mov
adc
aas
hlt
les
or
int
fmull
rorl
sbb
xchg
iret
or
cli
push
sbb
dec
mov
ja
lock
repnz
jmp
ja
fst
popf
fmul
sub
cmpsl
mov
test
insb
test
push
inc
add
pop
xlat
mov
stc
inc
jo
and
int
dec
insb
or
negb
or
scas
cwtl
popf
push
popf
push
mov
decl
inc
ja
and
ja
xor
das
mov
addr16
jg
xlat
popf
or
mov
add
pusha
ljmp
arpl
jmp
mov
cmp
sbb
hlt
hlt
cmpsb
lret
jmp
ret
xchg
cmp
mov
and
xor
xchg
cmc
sbb
dec
scas
test
out
imul
dec
pushf
mov
push
mulb
mov
jg
bound
mov
pusha
dec
jmp
mov
inc
lds
sub
mov
mov
pop
test
hlt
cmpsb
and
int
shrb
jae
adc
je
jge
je
sbbb
add
dec
mov
hlt
cwtl
stos
int3
add
jno
jecxz
ljmp
mov
enter
dec
jmp
fwait
addr16
mov
dec
or
sub
imul
enter
je
cmp
mov
pushf
inc
inc
jo
sub
rorb
addr16
xchg
mov
outsb
and
test
pusha
int3
popa
pop
stos
cmpl
fistl
push
lock
je
or
in
jmp
test
into
pop
cmp
adc
loopne
outsl
adc
negl
pop
cmp
xor
push
push
ret
lods
fcomps
and
std
xor
sub
jnp
daa
pop
dec
cmpsb
or
fsubs
push
add
repz
xor
jae
cs
dec
add
fnsave
cmpb
mov
xchg
jbe
shlb
data16
into
bound
mov
jbe
push
push
push
and
add
int3
enter
mov
arpl
push
repnz
push
xor
inc
push
flds
scas
jle
test
rolb
dec
push
aaa
add
stos
int3
in
enter
daa
push
arpl
shrl
std
icebp
out
lods
jge
in
push
mov
insl
sbb
cmpsl
cmp
pop
and
mov
test
push
stos
push
mov
sbb
out
cmp
push
int3
sub
add
and
add
xchg
cmp
mov
mov
mov
lret
mov
cltd
sbb
int
rclb
adc
inc
sbb
sub
jbe
dec
notb
xor
aad
cmpsb
mov
lahf
gs
pop
jae
cmp
xlat
lds
sbb
pop
and
xchg
cli
sbb
jno
popf
or
scas
xor
inc
movsb
mov
int
mov
add
sahf
push
mov
fidivrs
mov
rep
mov
leave
push
bound
sub
adc
ja
sbbb
push
pop
cmp
sbb
lea
jge
inc
rorl
mov
out
jnp
add
mov
cmp
leave
sub
inc
bound
add
out
out
mov
add
movsl
lahf
addr16
push
xor
inc
je
vmread
je
adc
xchg
push
sbb
xchg
mov
scas
pop
dec
stos
and
push
ret
mov
in
repz
fs
mov
add
inc
je
andb
stos
xor
xor
xlat
dec
jge
mov
nop
daa
jmp
arpl
inc
xor
lahf
push
stos
jae
ss
aam
xor
shlb
mov
dec
mov
cmpb
arpl
xor
rorl
mov
enter
mov
sbb
inc
fldenv
and
mov
rcr
sub
pop
stos
adc
add
sub
dec
sub
scas
or
jle
jp
cmp
push
inc
and
inc
cld
ss
jg
fistl
sub
pop
in
stos
pop
jns
push
out
sarl
int
dec
rcrl
lds
dec
icebp
adc
mov
xchg
adc
stc
jnp
loopne
outsl
push
or
adc
dec
lods
push
aaa
cmpsb
xor
xor
push
cld
or
cs
out
lea
insb
add
divl
repnz
adc
cmp
or
sbb
insb
in
cmp
xchg
scas
call
sub
stos
xchg
sub
lcall
sbb
cmc
call
ljmp
or
mov
cld
dec
mov
pop
jmp
testl
imul
aas
loope
orb
mov
pop
or
sbb
test
xchg
mov
xchg
dec
mov
mov
out
cmpsl
dec
insb
adc
and
sub
fnclex
dec
push
daa
fnstsw
and
push
push
imul
loope
je
decb
test
shl
push
aas
rorl
roll
lret
xor
add
shl
xor
fisubs
jnp
push
bound
out
dec
inc
outsl
fdivrl
push
das
push
xchg
imul
cmpsb
xor
pop
jo
add
mov
lcall
mov
jno
xchg
insb
scas
cli
mov
pop
das
stos
faddl
test
call
mov
out
popf
roll
cmp
add
mov
fidivrl
ss
push
stos
mov
mov
clc
jae
inc
pop
das
daa
add
ss
fstpl
push
test
push
jge
push
sub
dec
cmpsb
xor
loope
shrb
push
aas
mov
popf
adc
out
dec
ret
and
xlat
jno
cwtl
adc
jl
mov
jg
sbb
dec
hlt
rcrl
sbb
fwait
push
jne
pop
mov
lds
pop
push
inc
fcmovb
movsb
stos
sub
out
inc
mov
dec
xchg
and
xchg
loop
popf
jmp
cltd
mov
sub
popa
mov
sbb
fistps
dec
mov
jno
dec
pop
pop
scas
lret
cmpsb
sti
mov
jp
mov
subb
pop
fistl
jno
aam
xlat
js
stos
cli
inc
add
cwtl
mov
jns
mov
inc
inc
fcmovne
fisubs
lahf
xor
lret
dec
jle
or
daa
dec
sub
jne
aaa
mov
and
mov
notl
lods
in
fwait
shlb
cmp
jmp
jg
popa
jno
js
lods
cmp
jo
aas
sub
add
sbb
xor
data16
and
daa
mov
inc
dec
lds
and
dec
cs
icebp
push
icebp
or
mov
paddq
dec
montmul
cmpsb
rcrl
js
add
mov
dec
adcb
sbb
pusha
pop
mov
sbb
shrl
lret
ja
xchg
xchg
jg
imul
add
sbb
jno
jg
nop
mov
and
sbb
xlat
pmaddwd
push
test
fisttps
das
loopne
dec
cmp
adc
in
pop
pop
cmp
lret
jbe
or
cli
lods
jl
test
push
popf
jns
sahf
in
dec
dec
push
mov
jbe
test
add
ja
sub
rorb
jge
xchg
inc
pop
jnp
in
ror
mov
movsb
adc
xchg
cli
int3
jb
ret
fldcw
hlt
and
lcall
scas
popa
xchg
pop
xor
into
jb
inc
xchg
aaa
addb
jp
out
idivl
repnz
jp
aam
hlt
jae
leave
xor
fists
xor
push
pop
jmp
es
je
pop
scas
popa
adc
mov
lock
or
adc
ja
aad
mov
loopne
xchg
mul
push
and
out
dec
xchg
fsubrp
int
inc
cwtl
loope
daa
ficompl
ss
scas
mov
aad
xchg
loope
mov
xor
add
ljmp
xlat
inc
add
lcall
inc
xchg
pop
mov
mov
pop
test
jl
adc
loopne
repz
mov
movsl
addr16
pop
lea
out
icebp
push
rcrb
mov
inc
clc
mov
dec
jnp
mov
sub
mov
std
mov
in
loope
adcb
or
icebp
sbb
sti
sbb
push
lahf
scas
cmc
jle
mov
mov
adc
jo
js
and
clc
sub
pop
cmpsl
in
jle
sbb
and
ss
std
lret
and
aaa
inc
scas
inc
scas
cmpsb
pop
push
sahf
push
add
test
shl
in
test
cld
mov
or
notl
test
lret
cld
mov
sbb
pop
sti
xchg
out
mov
in
pop
adc
and
jae
stos
into
jl
pop
int3
mov
mov
aas
dec
sub
lods
mov
mov
mov
rolb
insb
sbb
mov
mov
test
iret
shll
movsb
push
enter
cmc
xchg
xchg
dec
push
inc
loopne
in
xchg
dec
movsl
jbe
sub
adc
stc
lret
lret
pop
cltd
push
or
cmp
jb
lahf
adc
lea
push
ds
pusha
pop
cmp
xchg
bound
out
xor
and
xchg
fsubl
mov
or
sbbb
ret
xor
jbe
jge
cmp
ds
sub
jbe
cwtl
jno
inc
mov
add
lret
orl
ja
js
jmp
mov
add
xor
aam
mov
adc
or
scas
sahf
rolb
jge
lret
pop
fstpl
cmp
dec
xchg
jns
repz
mov
or
jb
iret
out
sti
in
stc
inc
fnstcw
adc
dec
cltd
mov
insb
cwtl
or
sub
bound
jo
daa
lock
addr16
xchg
push
sti
movb
int3
inc
sub
inc
mov
sub
loopne
fs
negl
dec
add
shll
loop
lds
es
mov
mov
xor
icebp
or
stc
add
test
pop
mov
mov
mov
and
pop
xchg
out
dec
mov
push
fsubl
jns
jae
divb
and
xor
mov
xchg
daa
xchg
dec
mov
lret
or
cmp
arpl
rcrb
xchg
jnp
jp
es
mov
pop
pop
mov
outsl
dec
cltd
pop
add
jecxz
sahf
sub
mov
add
push
es
into
insl
inc
sub
das
or
sub
addr16
es
leave
inc
push
pop
int3
cs
lods
add
aas
repz
dec
dec
les
cld
jmp
adc
test
test
movsl
adc
jg
and
dec
push
dec
out
mov
push
data16
mov
pushf
adc
inc
jle
adc
jl
add
stc
dec
mov
mov
mov
jbe
push
pop
bound
adc
xchg
jl
push
jecxz
es
mov
adc
fidivl
loope
pop
mov
int3
in
into
adc
pop
jecxz
cwtl
mov
dec
movups
adc
mov
add
sub
ds
bound
loopne
idivl
mov
push
fcmovnb
adc
cmp
jmp
mov
xchg
aad
dec
das
insb
lea
xchg
loope
and
fisttpl
inc
fdivs
test
mov
into
sahf
insb
std
dec
and
stos
scas
fs
shrb
in
lock
mov
push
fwait
xor
repz
xor
outsl
loop
jno
repnz
lock
cmp
insl
mov
and
jg
mov
out
cmp
cmc
fwait
xchg
mov
dec
mov
sti
sti
sbb
mov
movsl
xchg
lock
cpuid
and
shlb
pop
cld
xchg
mov
pop
sbb
and
sbb
inc
mov
and
xlat
lock
adc
xchg
js
or
or
outsb
mov
imul
fmul
enter
jl
dec
test
mov
stc
movsb
xchg
push
jg
test
addr16
mov
in
mov
cmpsb
xchg
push
pop
dec
dec
ficoms
aas
mov
push
inc
push
dec
cwtl
jge
hlt
decb
cli
pop
mov
sbb
jecxz
xchg
pop
or
aam
push
ror
xchg
push
lds
test
mov
xchg
test
std
push
jge
and
jmp
xor
mov
mov
nop
mov
fdivrs
rorl
pusha
jg
jmp
inc
leave
scas
mov
add
xchg
jmp
jns
jo
jge
popa
or
pop
jbe
cwtl
sbb
test
cmpsb
pop
andb
arpl
pop
rclb
mov
jl
sbb
mov
mov
std
adc
ds
jecxz
pop
lret
push
jmp
mov
xor
outsl
daa
pushf
shr
loope
imulb
push
mov
in
lods
push
adc
dec
lods
xor
push
or
stos
lcall
ret
popa
mov
sti
and
popf
fwait
jae
popf
lret
jno
lcall
lods
add
lcall
sbb
sub
jae
adc
cmp
adc
mov
aam
insb
nop
push
imul
in
subb
bound
or
pusha
cmp
rorl
xchg
or
pop
in
xor
sbb
dec
ljmp
dec
lcall
outsb
dec
push
or
pushf
sub
xor
mov
pop
jmp
mov
ja
mov
pop
jne
adc
ljmp
fadds
inc
into
mov
shl
mov
push
lods
add
rcll
loopne
cmp
outsl
adc
clts
cwtl
xor
jg
sbb
pushaw
fwait
xchg
lcall
outsl
sub
js
repnz
xlat
icebp
xchg
push
or
dec
sbb
jl
data16
sub
push
in
mov
into
popf
sti
cmp
ds
adc
roll
insb
xchg
ljmp
rcr
inc
mov
inc
test
mov
js
or
cmp
jne
ret
sbb
inc
pop
shrl
xor
roll
jp
jmp
pop
movsb
nop
push
push
or
add
mov
push
sarl
or
pushf
push
adc
push
fsubrs
fmuls
or
push
mov
pop
jo
aad
out
mov
sahf
rol
xor
dec
jne
ret
or
lock
adc
xchg
adc
nop
pop
rcl
clc
movsb
in
and
fnstenv
sbb
loop
data16
addl
jo
out
es
arpl
xchg
sbb
lret
and
dec
mov
jns
and
mov
cmc
pop
xor
sub
into
mov
cmp
fnstenv
aad
jne
xchg
test
jo
inc
sub
sbb
and
cmc
jle
in
or
aam
dec
cmpsb
mov
adc
pop
daa
stc
push
fldln2
xor
push
mov
mov
inc
lret
popf
cmp
add
jb
movsl
sub
fs
mov
cmp
and
xchg
jle
fnstcw
addr16
sub
enter
imul
iret
xchg
popf
add
and
cltd
mov
insb
orl
mov
andb
pop
daa
je
fildl
fimuls
lahf
inc
jo
xchg
jecxz
add
mov
jne
shr
scas
cmc
xchg
call
pop
scas
cmp
shll
mov
dec
push
lret
pop
adc
pop
add
outsl
test
out
in
lock
xor
in
gs
or
fldt
js
mov
xchg
xor
jg
outsb
add
push
mov
sub
mov
xchg
push
js
mov
xor
or
sti
pusha
cmpsb
addr16
rcrb
fwait
push
lds
movsb
je
xor
das
nop
jnp
xor
lret
jb
test
mov
arpl
iret
cmpsl
push
jne
sahf
mov
movsl
testb
nop
push
xchg
pop
push
sbb
fstl
lea
or
fsubs
mov
dec
and
fimuls
cwtl
adc
pusha
cli
add
add
add
pusha
xchg
sub
les
test
mov
mov
push
fisttpll
mov
bound
push
pop
repnz
dec
dec
fstpl
xor
ret
out
in
ror
shrl
shr
fsub
scas
inc
fs
xchg
xchg
jae
scas
xor
test
dec
push
adcb
sbb
cmp
mov
outsl
iret
pop
cmp
push
or
rcrl
sub
mov
cwtl
xor
xchg
cmp
std
fs
fnstcw
inc
cmp
cmp
das
mov
gs
out
addl
add
lods
push
dec
fidivrs
sbb
or
mov
jg
out
hlt
dec
sbb
in
std
jbe
add
test
ja
xchg
adc
rolb
dec
dec
jecxz
cmp
outsl
mov
sbb
pop
add
adc
in
fnstenv
add
test
divb
int3
pop
mov
mov
inc
pushf
and
ljmp
mov
jle
xchg
lods
scas
js
adc
add
sub
addb
push
xchg
add
pop
popf
stc
scas
adc
fnsave
mov
pop
mov
andb
jg
sub
and
mov
cli
mov
in
shl
inc
stc
sub
hlt
cmp
pop
push
imul
out
sahf
mov
adc
cmp
xchg
lret
into
cmpsl
mov
and
aas
mov
rcr
push
cmp
push
sbb
and
repz
sti
push
in
ja
add
cmp
ret
dec
insl
cmpb
je
xor
mov
movsb
pop
loop
mov
aam
adc
stos
mov
enter
ret
icebp
nop
lods
mov
dec
lret
out
lahf
dec
xor
test
insl
push
mov
mov
stos
jmp
fs
jns
cmp
dec
ret
int
inc
xor
xor
enter
cwtl
lods
pop
rorl
scas
cmp
sahf
push
js
push
add
mov
stc
sbb
std
dec
je
bound
punpckhwd
adcl
pop
movsb
clc
mov
call
sub
pop
in
lcall
xchg
xchg
mov
inc
cmpsb
add
imul
or
in
pop
or
or
push
lods
scas
jecxz
mov
hlt
adc
in
xlat
jl
call
sbb
dec
lea
test
pop
sahf
mov
pop
out
addb
adc
add
adc
cli
xor
sub
lcall
jne
int3
or
daa
out
les
and
stc
roll
adc
imul
bound
jmp
mov
hlt
pusha
test
jb
push
add
iret
lcall
into
call
dec
cmpsb
mov
mov
enter
iret
ds
mov
jne
loope
mov
cmp
cld
jne
mov
sarb
push
push
xor
adc
mov
sub
adc
decl
enter
add
push
bnd
mov
out
push
dec
loopne
and
sub
mov
jns
lds
icebp
push
imulb
inc
mov
dec
or
or
test
inc
add
cmp
cmp
mov
lock
push
ja
insl
test
fcmovnu
jbe
sub
inc
arpl
cmpsl
cmp
mov
jle
jl
gs
test
sub
out
das
loope
test
pop
outsl
or
xchg
dec
lcall
mov
mov
add
cmp
int
dec
xchg
or
xchg
sbbb
fmuls
shl
dec
fwait
xor
int3
push
sbb
rol
jle
sub
pop
add
inc
and
sbb
jmp
inc
mov
js
hlt
lods
mov
jb
xchg
out
pop
inc
mov
xchg
ret
dec
add
dec
call
or
jns
lret
or
push
loopne
mov
cmpsb
inc
push
aam
mov
sbb
out
push
dec
mov
aas
ss
sub
add
mov
ds
ja
pop
mov
and
sub
shl
mov
rol
inc
sbb
ja
add
outsl
ljmp
movsl
ljmp
movsb
aad
or
jne
xchg
sub
outsl
add
test
and
test
and
sub
imul
push
fs
jnp
pop
imul
mov
adc
cld
mov
sbb
loopne
mov
mov
mov
mov
cmp
incl
gs
jp
rclb
stos
popa
icebp
fmul
mov
and
cmp
push
add
xor
lret
add
pop
popa
mov
push
mov
mov
push
mov
jbe
cmpsl
sub
jp
dec
out
ljmp
es
cmp
push
mov
xor
mov
aam
hlt
stos
cmp
stos
bound
jl
mov
in
aas
push
insb
xor
popa
mov
movsb
xor
stos
dec
pusha
sbb
pop
jp
andl
or
adc
jbe
or
fiadds
cwtl
aam
jl
cld
jmp
lret
and
mov
adc
lock
push
xchg
lcall
mov
mov
push
mov
mov
ljmp
pop
pop
mov
enter
test
hlt
mov
in
sti
ja
push
push
mov
lahf
push
mov
fnsave
sub
cmp
dec
pop
pop
push
and
sbb
gs
pop
sbb
cmpsl
mov
pop
mov
push
pop
lock
push
push
adc
mov
test
gs
imul
lret
outsb
test
and
out
sub
enter
push
push
fnstenv
movsb
jne
sti
out
insb
iret
pop
popa
xchg
call
cwtl
rorl
rorb
jne
add
cmp
das
and
ds
lods
cld
pushf
nop
cmpsl
in
ja
pop
movsb
dec
inc
test
push
repnz
and
addr16
sbb
xchg
pop
xchg
and
stos
adc
ja
and
clc
mov
in
rorb
aaa
dec
and
push
rcrl
inc
or
fistpl
and
fisttpl
jnp
ds
lods
push
xor
or
lods
cld
mov
mov
inc
jnp
xchg
mov
lods
inc
mov
test
lret
ret
aas
inc
js
lcall
sbb
push
mov
ret
int3
test
ljmp
cli
loope
movsl
ret
jge
in
loope
or
insb
jns
jmp
push
pop
pop
xchg
std
sub
repnz
out
fsubrp
stos
and
es
jb
xor
dec
test
push
ja
mov
xchg
adc
scas
mov
inc
sbbl
dec
cs
push
and
cmpsb
fstpt
xlat
mov
xchg
jecxz
mov
fldenv
hlt
jle
mov
and
lods
inc
add
xlat
xchg
rcrb
test
cmpsb
rorb
stos
push
inc
roll
sbb
ret
enter
scas
clc
fists
mov
or
bound
cmp
popf
dec
mov
divb
and
xchg
cmc
jecxz
divb
out
es
jns
inc
ret
xor
imul
and
xchg
cld
shl
imul
xor
push
cld
movsl
repnz
push
aam
jns
lods
push
inc
push
xor
fs
add
mov
jge
mov
insb
push
push
jge
adc
dec
inc
mov
aas
shlb
pop
das
sub
out
dec
cmp
mov
in
pushf
fabs
xchg
mov
sbb
jecxz
xor
shll
adc
ret
je
ljmp
add
loope
loopne
gs
mov
push
inc
cmp
xchg
orb
jle
repnz
aaa
sbb
fstl
sub
fnstenv
jbe
ret
mov
dec
jne
lds
jae
jge
and
pop
rorl
in
mov
cs
or
out
es
pop
jecxz
lock
add
jg
loope
jge
jb
pop
enter
lret
sahf
mov
jg
and
in
popf
inc
and
mov
dec
in
stos
imul
mov
or
jo
sbb
xor
subb
sub
ret
xchg
stos
imul
dec
cmp
push
scas
out
jge
mov
xor
pop
add
mov
scas
cwtl
jmp
jp
jmp
mov
xor
js
pop
xor
jl
sub
mov
dec
xchg
sahf
scas
nop
fidivrl
push
rcll
dec
stos
dec
pop
adc
in
sbb
dec
mov
lret
insl
push
xor
rclb
push
mov
xorl
mov
leave
lea
ret
insb
frstor
or
inc
cmp
adc
iret
cmp
and
and
jg
xor
pop
xchg
ficoms
mov
pushf
ljmp
lods
inc
or
lret
lret
mov
pop
jmp
ds
xor
xor
ljmp
mov
adc
or
or
andl
shl
and
mov
shl
adc
sub
nop
subl
or
xor
inc
add
jge
js
aam
push
and
fiadds
pusha
sar
repnz
ss
sub
jge
lahf
out
mov
mov
push
aam
int
mov
xor
test
dec
pop
data16
pop
rcr
push
rorl
pop
dec
shr
cmpsb
mov
mov
xchg
jp
fmuls
pop
std
shlb
push
fsub
or
cmp
lahf
int
arpl
mov
push
lods
pop
pop
filds
sbb
jmp
sahf
and
outsl
ljmp
int
addr16
in
into
aad
sub
frstor
push
inc
mov
mov
dec
std
fldenv
sbb
adc
sub
inc
pushf
add
test
jnp
mov
scas
and
push
in
add
jb
je
xor
mov
popa
mov
cmp
push
daa
dec
xor
mov
xchg
cmove
jp
jae
jl
in
daa
inc
clc
mov
inc
sbb
sti
lret
out
jno
mov
sub
in
pop
cmp
pop
cli
mov
mov
cmp
data16
pusha
jge
sbb
nop
cmpsb
adc
fadd
stos
scas
push
xlat
sar
xor
inc
jae
in
inc
aad
xchg
outsb
dec
test
into
bound
data16
fisttpl
in
sbb
cmp
push
mov
adc
sub
and
inc
push
or
and
hlt
and
mov
outsb
pop
cs
xor
sbb
jne
dec
xor
mov
testb
pop
xchg
dec
ja
adc
xchg
sti
cmp
aam
adc
nop
lret
aam
stos
lods
fdivrs
stos
xchg
xchg
and
adcl
mov
mov
mov
repnz
data16
inc
in
pop
mov
lret
or
iret
scas
and
lods
jecxz
or
les
xchg
xor
mov
or
xchg
out
mov
pop
repz
jl
adc
dec
cld
dec
in
cwtl
jo
and
popa
and
mov
jmp
scas
pop
stc
and
loope
dec
and
minps
mov
sbb
push
pop
stc
outsl
outsb
jmp
sbb
adc
adc
xchg
mov
sub
mov
mov
xchg
mov
scas
es
outsl
shlb
dec
pop
inc
inc
enter
rcrb
dec
and
sub
push
mov
cli
ss
out
push
lds
test
into
rcll
loope
pushf
mov
jle
xchg
mov
xchg
gs
pop
add
jle
rorl
nop
sahf
jnp
popa
mov
nop
in
pop
imulb
pop
jae
clc
loope
adc
push
mov
cmpsb
mov
xchg
add
in
hlt
gs
cmpsl
jmp
fcmovb
aas
std
mov
jmp
cld
jl
shlb
cwtl
rcrb
addr16
es
test
mov
push
and
lcall
aam
mov
imul
movsl
ret
push
sub
loop
rep
fs
out
pop
sbb
mov
lods
add
lahf
test
div
cmp
aas
in
push
imul
pop
sub
call
pusha
inc
mov
mov
inc
jl
scas
outsb
insl
aaa
sub
out
sub
inc
xchg
lock
fs
ficomps
jg
sub
es
ss
jle
xchg
inc
inc
cmp
sbb
or
cmpsl
jno
jnp
inc
lcall
inc
repz
fsubrl
mov
mov
xchg
adc
cmc
jbe
outsl
fcoms
pop
sub
xchg
out
sub
mov
and
pop
xor
addl
aam
fmull
in
mov
sub
xor
test
or
cvtps2pi
fildll
and
cmp
xor
dec
jg
ret
adc
inc
xor
mov
sub
push
mov
inc
movsb
movsl
xchg
or
dec
fidivl
or
pop
clc
push
cwtl
jge
arpl
lods
sbb
dec
xchg
sub
shrb
adcl
mov
push
je
add
jo
mov
or
xchg
xor
ret
sbb
rorb
enter
out
mov
and
jge
inc
xor
jns
or
gs
bound
pop
aaa
lds
repnz
mov
jge
aad
xor
lods
pop
testb
ret
lods
jle
aaa
jnp
or
cs
sbb
mov
dec
inc
jle
in
xchg
pop
xchg
scas
hlt
cmp
or
inc
jnp
inc
nop
push
sahf
icebp
pop
shl
push
push
add
sbb
add
xor
movsl
mov
push
sbb
push
mov
pop
xchg
mov
and
sbb
sbb
inc
xorb
push
lds
scas
xor
ret
or
xor
push
cmc
pmuludq
cmp
mull
cmp
dec
popa
data16
cltd
pop
push
clc
xor
pop
int3
ret
lcall
mov
mov
or
cwtl
jl
dec
std
push
cs
or
in
lahf
ja
bound
jns
jno
cmp
mov
pop
dec
add
jle
push
mov
add
or
setns
lret
shlb
xlat
repz
shlb
or
mov
xchg
jge
call
ret
jecxz
dec
lcall
xor
rolb
test
imul
adc
fisubl
in
repnz
clc
jae
cmp
shr
mov
lea
pop
into
adc
mov
aaa
shl
scas
popf
push
outsl
das
pop
jns
divb
mov
fstpt
rcl
lret
jno
add
sub
mov
pushf
pop
mov
sub
out
xor
cmp
xchg
push
and
xor
jecxz
stos
fwait
xor
xor
outsb
andb
ss
imul
sub
sbb
mov
lods
mov
jae
pusha
out
mov
cmp
fsub
push
scas
mov
popa
push
mov
sbb
inc
xchg
sbb
insb
jmp
lods
push
outsb
stc
aam
and
repnz
lds
int3
inc
add
out
inc
sub
lret
or
dec
gs
sbb
aam
jns
xor
jmp
daa
loopne
push
adc
jge
or
add
mov
xchg
or
add
or
push
aaa
int3
push
push
adc
sub
repz
jmp
or
push
inc
pop
jb
jl
xchg
subl
mov
sub
cli
and
dec
std
jmp
fadds
jle
rorl
outsl
sub
xchg
add
mov
sub
jl
xor
pop
hlt
dec
pushf
xchg
loopne
cwtl
mov
push
sub
out
dec
das
sub
xor
fabs
add
and
mov
mov
je
mov
mov
jnp
sarl
mov
mov
mov
mov
or
inc
mov
mov
sahf
push
mov
stos
rcll
sahf
inc
addr16
push
or
das
enter
sub
out
es
test
mov
mov
clc
insl
das
fbld
je
xchg
adc
xchg
adc
ror
clc
xchg
mov
lret
clc
shll
icebp
xchg
pusha
out
adc
dec
clc
or
or
je
cmp
mov
inc
inc
mov
sub
aas
out
xchg
push
or
adc
and
jae
jne
and
push
jns
mov
lcall
loop
repnz
sub
test
or
movb
popa
add
jecxz
pop
mov
lods
cmp
mov
aaa
nop
sarl
das
fbld
ret
les
sub
insl
mov
pusha
pop
cmp
sbbl
es
out
repz
arpl
adc
inc
ljmp
cmp
and
lahf
call
rcrl
shlb
pop
adc
lret
jmp
stos
mov
jns
jp
cli
and
jmp
mov
ret
lcall
in
insb
loope
mov
mov
ret
lds
mov
fnstsw
cli
lcall
sbb
cmp
mov
lds
sbb
popf
or
or
fsubp
mov
adc
sbb
jle
or
incb
pop
xor
push
push
and
or
push
stc
cmp
jp
jmp
mov
in
mov
or
mov
pop
push
mov
pop
pop
leave
addr16
mov
ja
and
adc
aas
pminsw
jge
in
push
and
mov
jg
push
pop
sbb
fsub
popa
pop
cmp
dec
mov
mulb
aas
or
rolb
nop
les
call
adc
jnp
xor
mov
adcb
inc
cmc
jg
and
imul
test
daa
test
out
jle
fsubr
xchg
jmp
jae
inc
aad
jns
imul
xchg
xchg
sub
mov
inc
dec
cltd
pop
lods
lcall
cmp
pusha
fchs
std
xlat
std
shlb
mov
xchg
jg
mov
sahf
ja
testl
mov
cmpsb
pop
popa
mov
push
jmp
insl
sbb
xorb
and
cwtl
push
xor
adc
jo
mov
inc
mov
int3
dec
test
and
jns
rolb
movsl
add
insb
lret
std
rdtscp
cmp
and
in
xchg
dec
mov
call
orl
xlat
and
fmul
inc
add
jno
ret
hlt
xor
cltd
xor
and
scas
sbb
xor
cmp
stos
fnop
xchg
loopne
ret
lock
sahf
fsub
mov
cmp
mov
fistpl
cltd
int3
rclb
subl
pop
stos
and
mov
mov
in
jne
mov
cmc
mov
jno
xchg
pop
repz
mov
jl
mov
dec
in
push
lret
xor
xor
push
stos
jg
lods
fistpl
std
lds
mov
data16
arpl
ja
push
and
imul
enter
inc
out
xchg
int3
jmp
pop
adc
pop
sub
inc
fdivrs
call
pop
push
dec
ljmp
cmp
mov
xor
add
jno
rcrb
sub
mov
xchg
out
mov
xchg
movsb
mov
pop
lods
push
sbb
sub
jmp
icebp
aam
dec
lds
mov
shld
adc
jnp
mov
pop
cmp
insl
dec
adc
test
mov
pusha
leave
lret
push
sub
mov
movb
mov
mov
xor
sbb
inc
and
sbbl
inc
and
xor
test
mov
pop
xlat
xchg
xlat
std
repz
lahf
mov
fistps
jg
jbe
xor
adc
xor
jnp
cmpsl
jmp
mov
mov
xor
mov
mov
enter
pusha
lahf
push
mov
test
fwait
ret
mov
dec
xor
movsl
pusha
cmc
std
mov
adc
xor
sbbb
sbb
enter
inc
cmp
fidivl
jp
inc
push
mov
shll
shrb
hlt
out
mov
ja
mov
adc
add
lock
lods
dec
xchg
xor
test
push
dec
mov
in
jae
shll
sub
inc
jp
nop
ss
adc
mov
pop
vsubsd
mov
jne
nop
or
out
roll
jmp
rcrl
ds
loope
adc
insl
or
mov
shrb
jmp
aaa
scas
les
inc
inc
lea
in
enter
std
adc
inc
lds
div
inc
xchg
mov
dec
std
add
jbe
int
add
stos
test
dec
clc
cmpl
jo
clc
fimuls
ficomps
pop
mov
mov
stc
inc
cmp
daa
mov
cmp
push
and
jns
lea
adc
mov
mov
push
add
pop
test
pusha
negb
xor
mov
mov
lock
mov
inc
lea
jg
in
aam
enter
adc
in
pop
adc
stc
into
outsl
jmp
leave
ficoml
fisttpll
sub
jp
ret
or
call
xchg
xchg
fiaddl
push
mov
out
lods
fisubrs
sahf
out
or
xor
test
sub
adc
push
in
adc
sub
outsb
icebp
xor
push
xor
xor
cwtl
popf
sbb
xchg
inc
outsb
sbb
roll
mov
clc
sub
push
mov
xchg
sbb
xchg
jl
add
mov
sub
cmp
scas
push
push
adc
pause
shll
out
mov
xor
jne
adc
jnp
push
leave
or
out
sar
stos
add
push
jns
or
ljmp
aam
mov
mov
jg
mov
hlt
out
ret
push
mov
stos
stos
xchg
hlt
andb
sbb
ljmp
mov
insb
popa
out
mov
jge
adc
aas
xchg
icebp
inc
rorb
pop
xor
outsb
cmp
nop
sti
pushf
mov
sbb
pusha
push
jnp
adc
mov
jns
inc
cmp
cli
and
adc
clc
pop
sbb
jmp
push
loope
pop
shll
xchg
pop
out
push
imul
leave
xor
shlb
mov
dec
pop
xchg
notl
inc
sbb
mov
push
add
int3
cmp
loopne
hlt
mov
jg
iret
mov
push
jns
xor
push
iret
leave
xchg
les
mov
or
or
inc
pop
cmp
or
leave
jne,pt
xchg
mov
xor
std
imul
aaa
mov
mov
not
and
mov
inc
popf
sub
out
add
or
dec
push
add
jmp
daa
jnp
sets
cs
add
dec
adc
mov
scas
xchg
sar
inc
divb
cmp
aaa
push
enter
shrl
or
cmp
and
push
dec
lods
insl
pop
mov
push
or
pop
add
add
fidivl
or
mov
cmp
lods
mov
pusha
andl
xchg
push
test
push
adc
cmp
mov
fldt
test
xchg
pop
popa
outsb
mov
test
lcall
popf
lahf
out
loop
adc
aad
pop
cmpl
pop
lods
imul
outsl
or
add
lods
gs
loop
movsl
in
call
leave
mov
outsb
addl
pushf
xchg
and
or
fs
test
dec
icebp
fildl
nop
mov
jl
sub
mov
ss
js
sub
and
int
sub
sub
dec
xchg
ret
mov
xchg
sbb
add
jmp
jnp
icebp
push
iret
xor
shll
jo
popa
dec
mov
push
jb
aam
hlt
out
pushf
push
je
std
das
ret
gs
push
fsubp
movsl
pop
inc
imul
pop
dec
sti
push
push
dec
or
sbb
leave
xor
fldcw
pusha
mov
push
mov
addr16
mov
lret
cwtl
cwtl
xlat
neg
push
aam
push
pop
jl
leave
adc
xchg
orb
pop
test
jg
mov
and
mov
daa
jg
scas
fisubrl
pop
pop
pop
and
repz
lock
nop
mov
cmpsb
jl
adc
imul
xor
sti
rcll
hlt
sub
sahf
imul
test
lcall
sub
pushf
imul
inc
lds
test
push
jp
push
push
mov
xchg
sahf
int
repnz
or
sbb
bound
lock
add
and
mov
loope
dec
adc
pop
mov
fst
pop
and
or
shlb
lret
inc
nop
xorb
adc
xor
push
test
iret
mov
jb
cmc
cmp
push
loop
inc
cmp
data16
ja
inc
mov
lahf
fwait
cmc
leave
adc
adc
jbe
movsl
pop
das
inc
mov
sbbb
xor
dec
shlb
mov
sbb
int
repnz
mov
mov
xor
mov
pop
bound
in
ret
adc
mov
daa
pop
shlb
lret
iret
sahf
mov
cmp
push
ljmp
xlat
push
ficoml
lahf
fiadds
pushf
pop
push
mov
les
dec
xchg
daa
jno
push
arpl
jno
mov
mov
scas
sub
jns
test
aad
ss
sbb
cmpsl
mov
adc
dec
mov
inc
popa
imul
cwtl
adcb
les
pop
sti
lea
test
sbb
pslld
mov
sbb
xchg
cmovl
ss
ficompl
push
xorb
fdivrs
stos
jae
sub
bound
in
ret
mov
push
pop
adc
sti
xchg
hlt
mov
xlat
sub
test
mov
fisubrs
adc
add
pop
sti
ss
sbb
iret
and
or
fwait
out
movsl
sub
add
into
jp
pop
fndisi(8087
test
adc
jnp
adc
in
mull
test
insb
fistps
lahf
sbb
pop
push
cmp
xor
sub
imul
outsl
fwait
loop
imul
sub
mov
jb
rclb
sub
xlat
dec
nop
add
lock
sbb
xor
mov
push
aam
mov
testb
notb
push
lods
push
inc
mul
fistpl
mul
mov
adc
and
mov
add
enter
push
in
jo
xchg
mov
andb
push
std
push
lret
dec
sub
xor
ja
loop
in
push
insl
mov
fstpt
pop
rcrb
lock
mov
xchg
jecxz
fisubrl
movsb
add
mov
pop
xor
fnstenv
pop
inc
inc
imul
rcl
sbb
and
sti
cmp
add
cmpsl
push
leave
jp
lahf
shrb
jge
out
pop
mov
psrad
xor
fmul
and
mov
fnstcw
rorl
les
out
inc
orw
push
cltd
test
sub
lret
shrb
dec
into
xlat
out
flds
push
dec
dec
adc
sub
dec
push
and
mov
sbb
push
pop
push
fisubrs
sub
daa
movsb
cmp
mov
inc
xchg
mov
dec
test
jne
pop
pusha
sub
cmp
mov
pop
mov
sub
xchg
xor
andb
and
or
ficomps
push
scas
xchg
pop
sbb
mov
sub
jp
dec
cld
xchg
dec
jp
xchg
fwait
movsl
mov
and
das
mov
xor
mov
inc
and
ds
xor
adc
dec
xlat
dec
inc
ss
xor
popa
ss
aas
jecxz
fiadds
pop
sbb
mov
push
sbb
and
popf
shrl
mov
addr16
xor
lret
inc
mov
jnp
jnp
and
loopne
lret
add
push
inc
enter
jbe
mov
jge
fsubr
push
dec
pop
mov
jae
pop
cmp
lret
repz
inc
push
imul
enter
mov
lods
cs
add
arpl
dec
and
cmc
sbb
or
adc
and
nop
mov
fsts
icebp
int3
jns
and
insb
sub
add
push
es
push
push
push
gs
push
xor
inc
cmp
imul
pushf
mov
or
hlt
out
push
xchg
imul
mov
out
lret
iret
push
xor
fs
sti
xchg
xchg
test
jl
jg
pusha
or
lods
adc
mov
sub
sub
repnz
or
jne
xor
fsubs
xchg
inc
stos
xchg
loop
jno
add
xor
movsb
inc
xchg
aad
repz
mov
pop
mov
iret
sub
mov
sbb
iret
sarb
pusha
push
xchg
jno
aas
rcll
adc
insl
mov
repnz
jae
int3
hlt
mov
dec
dec
push
xchg
dec
push
adcb
lret
cmp
or
pop
idiv
bound
test
inc
pop
cmp
fiadds
icebp
inc
out
xchg
lcall
bound
mov
jae
cmp
outsb
pop
adc
push
int
push
pcmpeqd
jno
xor
inc
ffreep
push
add
jbe
cmp
jb
lahf
ja
inc
xlat
add
inc
push
nopl
imul
test
adc
pop
mov
int3
iret
ds
inc
jnp
ljmp
xchg
ret
lock
enter
or
push
mov
inc
lods
pushf
testl
movsb
lcall
mov
pop
out
sub
stos
in
out
decl
xchg
lods
test
xchg
xchg
adc
and
mov
nop
js
mov
inc
push
cli
adc
outsb
xor
loopne
lock
in
xchg
pop
sub
gs
mov
and
cmpsw
cli
cmpsb
inc
pop
scas
mov
xor
insl
mov
jl
and
adcl
pop
sub
cld
and
sub
outsb
mov
inc
or
insl
andb
xor
and
sub
mov
mov
inc
xor
dec
sbb
cmpsl
mov
adc
push
fldlg2
push
cmpsl
jo
cld
push
cmc
push
sbb
add
test
cmpsb
push
stos
nop
pop
jl
sbb
xor
push
push
mov
fsubrs
js
das
xlat
jle
mov
xor
fnstsw
push
xchg
ja
in
xchg
call
or
or
lcall
fistps
in
fstps
outsl
jne
imul
push
inc
outsb
pop
xor
sbb
mov
sub
push
sarb
fs
xchg
and
or
repnz
mov
jp
fnstsw
into
mov
mov
iret
adc
stos
xor
pop
pusha
int
and
push
aas
lods
insb
les
lds
aas
pop
outsl
enter
push
scas
stos
xchg
in
jp
lds
xor
flds
jecxz
sub
sub
xchg
adc
fcoml
mov
mov
push
in
add
xchg
stc
fwait
enter
pop
xchg
decb
stos
out
xlat
orb
ja
int
ljmp
movsb
mov
jge
mov
mov
cmp
mov
pop
xchg
aad
lock
cmp
lahf
outsl
adc
test
stc
gs
or
mov
lret
push
shll
sub
add
aad
pop
pslld
pop
or
sbb
es
cmc
stc
inc
repz
pop
stos
dec
mov
mov
adc
or
insb
cli
fs
cmp
mov
mov
sbb
pop
sahf
outsb
in
xchg
inc
mov
xor
dec
mov
testl
pop
cmp
cmpsb
cltd
pop
je
stos
imul
out
inc
cmp
icebp
or
ret
push
and
or
sbb
xchg
ja
into
push
inc
lods
clc
xchg
add
mov
loopne
mov
cwtl
js
repz
test
adc
popa
push
fimull
test
shll
in
nop
adc
dec
ds
xchg
xchg
push
jle
out
mov
pop
push
jge
inc
dec
push
out
movsl
imul
pop
push
pop
push
xchg
std
pop
aas
cmp
and
add
or
test
ja
xchg
xor
ret
xchg
lahf
push
dec
inc
loop
push
cmp
clc
outsb
adc
aad
imul
js
dec
cmp
loopne
and
adc
jne
fs
enter
mov
dec
cli
jl
out
cmc
subl
les
mov
dec
test
repnz
inc
xor
orb
data16
das
cmpsl
leave
push
fsubp
adc
or
add
sbb
sub
fidivl
movb
mov
push
loopne
outsb
xchg
iret
adc
std
ljmp
xchg
mull
dec
pushf
inc
lcall
mov
cmpsb
mov
insb
mov
out
mov
xchg
add
inc
sbb
ficoms
ficomps
adc
add
xchg
lock
adc
fdivrl
and
jp
push
ljmp
jmp
cmp
enter
cli
shll
sbbl
jae
mov
add
mov
sub
arpl
push
rorl
or
sbb
mov
lret
rcl
mov
lret
lcall
es
jmp
lods
xlat
or
push
icebp
xchg
sub
call
xor
mov
jp
lcall
xor
pop
les
dec
in
in
jnp
mov
jns
add
lahf
mov
mov
gs
mov
mov
mov
test
pushf
mov
sub
xor
clc
fwait
push
std
lcall
inc
stos
inc
xchg
or
cmp
inc
push
pop
push
inc
nop
lahf
mov
xor
out
roll
pusha
ja
xor
fsubp
cmpsl
cmp
stc
testb
frstor
sub
ficompl
and
popf
xchg
repz
fstps
push
xchg
mov
es
shlb
movsl
and
sub
sbb
sarl
mov
sub
sahf
hlt
xor
pop
ljmp
aam
leave
dec
lret
daa
ret
push
mov
mov
shrl
bnd
xchg
push
movsb
mov
push
es
dec
es
daa
dec
mov
push
mov
lahf
cmp
xor
ss
cmp
or
and
mov
mov
cmp
cmc
jne
push
dec
push
lahf
jne
push
es
hlt
addl
je
mov
pusha
or
push
xor
cltd
lret
push
push
jp
push
adc
scas
inc
push
mov
fcomps
cmp
aad
pop
push
push
loopne
lds
in
rorl
xor
mov
mov
inc
cmp
sub
mov
out
insb
add
cwtl
mov
push
lcall
test
mov
mov
push
push
popf
push
cmp
jmp
fcmovb
adc
push
mov
in
push
push
jne
mov
mov
lea
je
cli
lods
shl
mov
mov
inc
pop
lods
icebp
xchg
mov
pop
mov
lcall
cmp
mov
sbb
push
es
pop
fisubl
cmp
add
out
inc
jnp
pop
ret
rclb
sbb
add
loopne
fcomp
dec
in
incl
lret
push
jno
cmp
dec
and
or
and
ljmp
mov
dec
pop
sbb
and
xor
je
pop
das
sti
xor
pusha
push
jne
xchg
pop
aas
sbb
mov
adc
jo
cmp
insl
mov
rcrb
or
sbb
adc
push
mov
xor
stos
cmp
ds
xchg
ret
inc
sub
lret
dec
ja
inc
add
add
jmp
mov
xchg
push
xchg
movsl
movsb
loopne
xchg
fadd
adc
jmp
imull
cwtl
cmp
pop
out
dec
in
aas
imul
inc
stos
mov
mov
sub
rcr
inc
adc
popf
pushf
popa
fwait
cwtl
stc
jle
out
xor
mov
inc
ror
sub
xchg
xorb
pop
fimull
nop
cmp
ficoms
mov
stos
push
adc
cmp
outsl
movsb
and
push
cmp
mov
sbb
ds
cmpsl
paddusw
mov
popf
xchg
sarl
pushf
jg
xchg
push
cmp
daa
lods
fisubrl
jp
bound
clc
pop
jmp
add
scas
cld
iret
pop
divb
pop
and
mov
xchg
mov
ss
push
or
fcompl
les
imul
outsl
inc
and
fiaddl
adc
shr
fwait
jecxz
adc
and
push
mov
call
arpl
movsl
mov
mov
xchg
jb
cmp
dec
pushf
data16
sbb
es
and
xchg
lods
mov
lock
test
and
popf
inc
out
inc
mov
add
icebp
mov
adc
es
rclb
fmulp
psllw
and
scas
imul
pop
dec
jns
and
imul
cld
add
mov
stos
stos
mov
orb
call
scas
lret
dec
cmp
out
jae
add
push
ja
rorl
outsb
mov
adc
mov
inc
push
push
cmpsl
mov
add
xchg
inc
imul
mov
jmp
lret
inc
and
xchg
sub
js
xor
xchg
push
xchg
xchg
arpl
add
test
add
or
mov
out
pop
flds
push
jg
clc
mov
dec
jne
mov
enter
movsb
repz
testb
scas
pop
cld
aas
stos
ljmp
jns
adc
and
mov
jb
mov
ret
or
jae
add
adc
add
std
pop
hlt
fistpll
jne
icebp
out
adc
ja
sbb
sub
scas
gs
out
mov
xor
cmp
push
cmp
mov
nop
xchg
cmpsl
dec
pop
mov
sbb
in
jne
pop
adc
and
jo
es
xchg
sbb
ret
mov
sbb
push
adc
jo
movsb
xchg
scas
or
mov
popf
mov
insl
xor
dec
mov
call
jns
mov
stos
sbb
out
notl
aas
sub
fidivs
out
ljmp
inc
inc
js
xchg
xchg
sub
lret
jle
mov
or
insb
subb
push
mov
mov
sbb
jl
les
xchg
jg
sub
hlt
scas
inc
jne
scas
call
mov
pop
repz
push
data16
fsubl
fdivrs
int3
xchg
dec
xchg
xor
flds
pop
pop
mov
into
inc
mov
push
test
outsb
ds
sbb
lret
test
movsl
push
loop
data16
clc
mov
ret
jb
addr16
ja
mov
inc
test
idivl
pop
pop
jne
std
mov
jmp
enter
lret
dec
adc
adc
inc
call
lret
cmp
fsubl
cmp
dec
mov
mov
mov
cmp
mov
adc
mov
cmc
shl
push
mov
sbb
mov
pop
rcrb
ret
mov
rol
xchg
jmp
ljmp
lock
loope
inc
push
std
pop
pop
pop
jg
xchg
scas
testb
cmp
add
mov
mov
movsb
xor
or
lods
push
out
mov
arpl
stos
loopw
mov
loopne
enter
xchg
cmp
frstor
pushf
push
movsl
inc
dec
jp
cmc
imul
dec
orb
hlt
adc
or
inc
imul
mov
push
pop
xor
pusha
push
adc
in
jno
nop
das
mov
add
je
inc
jne
mov
lock
lahf
cwtl
sahf
mov
repz
sub
pop
into
cmp
jle
jb
mov
sub
add
addr16
pop
jb
popf
sub
int3
daa
dec
xchg
hlt
cmp
xor
fidivs
mov
add
jg
out
bound
lods
enter
jae
shrb
loop
dec
setne
movsl
mov
ds
out
cmp
jb
or
sub
stos
shlb
outsb
idivb
mov
pop
cmpb
loopne
add
insb
mov
and
xchg
je
dec
outsl
dec
push
cmc
ja
sbb
ffree
xor
dec
or
adc
test
scas
out
cld
jbe
sub
les
sarl
mov
pop
xchg
xchg
xchg
dec
daa
insb
mov
jp
ss
xchg
pop
jp
into
and
push
or
das
cmp
cmp
scas
ljmp
add
in
sbb
cs
cmp
test
or
fisubl
test
pop
leave
repz
cmpsb
out
ficoms
mov
mov
pop
roll
mov
or
jne
shlb
push
test
add
popa
popa
in
push
sub
idivl
inc
mov
mov
outsb
loop
sbb
push
jnp
test
sets
xchg
sub
sbb
mov
inc
mov
jnp
sbb
push
aas
sub
cvttps2pi
pop
push
stos
mov
xor
mov
mov
pop
shll
ljmp
cmp
ficompl
pop
adc
cltd
sub
iret
int
cmp
cmp
jecxz
lock
pop
mov
hlt
mov
int3
imul
jae
ds
aad
loopne
test
lods
ljmp
fs
add
inc
aaa
mov
add
lret
push
jns
sub
pop
pop
iret
jo
adc
pop
jp
je
jge
sub
mov
xchg
fidivs
cmp
jecxz
pop
jge
fnstsw
or
je
enter
sub
xchg
mov
stos
jb
nop
fiaddl
arpl
inc
dec
jnp
dec
dec
adc
fwait
push
mov
jae
inc
mov
clc
out
sbb
rol
jno
loope
sub
lret
and
rcrb
cmpb
sbb
sub
push
insb
pop
pushf
inc
stos
and
adc
cwtl
fs
jne
adc
dec
push
je
mov
sub
test
pop
leave
push
movsb
loopne
mov
and
jl
adc
adc
xchg
mov
aas
out
cmp
push
cmp
xchg
scas
jmp
pop
dec
xchg
add
mov
fdivrl
out
jno
int3
sti
pop
push
in
and
inc
lock
push
mov
mov
jmp
push
cli
scas
test
iret
inc
repnz
dec
mov
lods
adc
xchg
lods
ficomps
or
stos
xchg
mov
cmp
add
je
insb
scas
insb
xor
pop
xor
push
ja
leave
rol
je
orb
jbe
xchg
pop
js
sahf
pop
mov
movsb
mov
push
or
sbb
cld
push
test
int3
sarb
aad
ja
call
test
inc
addr16
sub
lcall
addr16
int
call
mov
das
roll
lock
cli
leave
lretw
mov
or
sbb
push
aad
stos
xor
sub
subl
repz
mov
data16
out
push
cmp
mov
lds
mov
push
iret
imull
pop
sbb
mov
cmp
hlt
push
movsb
in
je
pop
mov
mov
syscall
jb
mov
jecxz
sbb
xchg
mov
add
aas
adc
push
dec
cmp
shl
pop
mov
xor
lds
and
iret
pop
aad
xchg
movsl
xor
iret
mov
mov
fwait
cmp
and
dec
dec
cmp
iret
iret
adc
cmp
inc
aaa
outsb
mov
shrb
fcoml
jmp
adc
dec
lret
dec
cmp
jmp
cmp
mov
and
or
push
jns
sahf
mov
lahf
in
and
jae
sub
mov
jae
pop
fidivrl
adc
inc
mov
sub
mov
ret
xor
inc
les
fistps
lock
int3
leave
lods
or
clc
out
int
sub
popa
fs
mov
rcr
pop
push
xor
pushf
xor
in
inc
movl
add
xor
adc
adcl
out
push
and
xchg
sub
mov
aas
xchg
gs
mov
mov
aaa
mov
sbb
daa
adc
lds
jmp
cwtl
pop
aaa
jge
into
mov
pop
sti
sub
arpl
mov
ret
xchg
cmp
in
pop
cmp
add
push
inc
push
iret
sbb
inc
pop
pop
pop
push
roll
xchg
test
cmc
xlat
fstps
out
sbbl
hlt
push
dec
and
jae
dec
mov
jae
xchg
nop
cmpb
sbb
stos
xchg
cs
sub
add
icebp
cmp
cwtl
lcall
fwait
sub
pop
mov
inc
aad
push
push
ljmp
push
and
and
xchg
cmc
pop
in
lods
adc
addl
pop
sub
jnp
repz
or
mov
inc
pop
shlb
jo
mov
movsb
sti
ret
int3
notb
orb
bound
dec
adc
dec
jne
or
inc
stc
pusha
call
sub
mov
incl
repnz
test
inc
mov
ds
xor
vmwrite
inc
jo
push
addl
xor
stos
iret
push
ds
pushf
sub
repnz
cli
inc
fldt
mov
addr16
mov
dec
pop
push
mov
jp
push
inc
xchg
test
in
std
xchg
pop
and
pop
scas
cmp
cmp
push
mov
shlb
and
xlat
sti
insl
xor
jecxz
jne
xchg
movsb
mov
fidivrl
addr16
sub
stos
xchg
leave
arpl
jns
rcll
ret
jle
or
adc
push
mov
arpl
dec
nop
sbb
jns
xchg
jo
sahf
pop
mov
push
or
sti
fisttpll
ljmp
or
ret
xchg
xor
cmp
pop
or
ljmp
lret
or
xchg
push
jmp
sub
loop
int3
gs
or
rorb
jnp
mov
jae
xchg
inc
popa
pop
ret
xor
mov
outsl
jae
pop
xor
inc
fsubs
cmpsb
loope
and
push
lods
ret
mov
mov
sbb
pop
rclb
xlat
adc
dec
jmp
out
enter
xchg
mov
add
out
pop
jle
mov
sbb
jge
pop
or
aad
add
xor
xor
add
es
xchg
shll
inc
mov
into
xor
sbb
add
pop
push
xor
add
jg
cmp
cli
pop
dec
dec
cmp
cmpl
inc
loop
and
sub
sti
push
inc
outsb
mov
xor
push
insl
negl
int
faddp
sub
dec
mov
data16
into
imul
subb
mov
js
xchg
and
or
adcb
adc
js
test
add
les
jnp
test
pop
jnp
es
add
shrl
movsb
out
into
mov
add
je
insl
lret
xor
jp
cmp
imul
mov
dec
xor
mov
scas
cmp
ljmp
jns
mov
imul
rorl
shlb
shl
loopne
lods
fdivrl
into
icebp
fwait
jns
xchg
or
xor
cwtl
mov
pop
imul
icebp
stos
jbe
test
cwtl
mov
cwtl
sbb
push
sbb
and
pop
push
dec
ss
adc
add
mov
leave
mov
mov
ja
mov
sub
dec
in
inc
rcrl
fdivr
out
inc
xchg
adc
xor
jns
fadds
add
mov
add
mov
sarb
mov
mov
sub
adc
leave
test
test
inc
dec
add
mov
adc
movsl
cld
idivl
add
mov
pop
cmp
std
movsb
out
push
rcrl
cmp
aam
pop
sti
xchg
gs
jns
add
cs
lret
jns
mov
sub
xor
add
in
loopne
or
repz
into
aas
xchg
inc
fcoms
and
mov
insl
jge
sub
add
jmp
stos
cmp
out
test
and
adc
call
pop
mov
inc
dec
jmp
mov
or
or
shll
xor
sbb
sbb
adc
movl
popf
push
sbb
repz
adc
insb
sub
hlt
aaa
mov
jo
aas
inc
cmpsl
mov
aaa
inc
mov
push
out
push
mov
pop
mov
insl
xor
and
xchg
pop
xchg
sbb
xchg
inc
lea
pop
lcall
inc
inc
xchg
adc
fidivs
testl
lock
add
scas
push
sub
cmpsl
inc
mov
mov
jg
push
addr16
lds
and
ja
add
shl
stos
loopne
and
dec
cltd
adc
and
insl
adc
movsl
adc
jmp
pop
sub
inc
push
hlt
dec
out
icebp
and
pusha
loop
ljmp
xchg
scas
adc
test
stos
jecxz
add
outsl
pop
or
xchg
int3
or
mov
aaa
aam
push
adc
ljmp
jbe
and
mov
jg
dec
lods
cmp
and
das
aam
adc
add
loope
add
ds
push
sbb
testl
dec
or
mov
or
ret
int
mov
aaa
add
xor
sub
mov
cli
lods
push
mov
sahf
movsl
mov
aaa
js
test
ljmp
clc
mov
outsl
loop
movsb
sti
inc
jo
dec
ss
sti
mov
icebp
push
add
scas
mov
cltd
aad
pop
sbb
inc
out
sub
or
pop
out
sbb
add
push
jmp
jb
test
or
jno
dec
sub
xor
sarb
dec
sub
fisubrs
xchg
dec
sti
push
mov
adc
js
xchg
pop
xchg
mov
into
int3
test
sub
in
stos
mov
out
cmp
push
jne
out
jo
inc
push
fstl
pushf
repz
pop
dec
stc
cmp
and
out
mov
dec
push
sbb
adc
jno
ds
frstor
jp
movsb
sarl
xor
aad
jae
jbe
xchg
cld
jne
mov
inc
adc
mov
fidivs
fwait
das
fcomps
push
pusha
cmc
sub
cli
adc
xchg
pop
inc
das
fisttpll
pcmpgtw
daa
imul
outsb
popa
bound
and
clc
xchg
pop
mov
or
lahf
or
ljmp
or
ljmp
sub
or
or
mov
mov
or
fbld
sbb
jnp
lret
xchg
subl
fucomi
and
out
jl
pusha
cs
and
dec
pop
lea
leave
sbbb
cmp
shl
push
out
lcall
test
inc
icebp
xor
jg
cwtl
adc
ljmp
push
shlb
lock
mov
add
add
imul
out
jl
mov
or
out
subl
enter
dec
lret
loop
movsl
pop
hlt
rclb
dec
or
jno
fcmovne
test
sahf
aad
rol
repz
lretw
outsl
fdivl
shlb
lret
pop
and
pop
inc
xchg
jno
loop
sbb
lods
xchg
lcall
fiadds
cli
adc
pop
pop
mov
mov
and
xchg
cmp
add
hlt
call
aad
out
add
rclb
push
push
std
popf
cmpsb
rcrb
push
js
push
xor
cmp
ficompl
push
xchg
push
mov
es
jg
sbb
ds
pushf
cmp
gs
or
xchg
mov
or
leave
pop
imul
in
mov
and
mov
jmp
push
sbbl
inc
cmp
mov
jg
insb
cmp
push
ret
shlb
jg
mov
stos
inc
loope
or
inc
shll
push
repz
inc
inc
dec
loopne
dec
mov
push
mov
jnp
and
adc
mov
ss
lds
lods
xchg
dec
fildl
gs
movb
cmp
dec
push
pusha
ret
repnz
dec
sbb
xchg
push
adc
test
inc
inc
sbb
dec
add
jns
call
mov
mov
xor
jmp
aam
lods
xor
ljmp
iret
mov
lret
es
inc
jecxz
into
insl
insb
jb
movsl
in
outsl
test
jno
xchg
cwtl
mov
pop
sbb
inc
xchg
cmp
aad
outsb
jo
inc
dec
cmpsb
cmp
push
test
jo
inc
in
jg
dec
imul
das
sbb
negb
sahf
add
sbb
pop
nop
aad
xor
inc
addr16
cmp
jp
out
push
mov
sub
arpl
clc
aas
rorl
inc
mov
std
imul
sbb
icebp
test
popf
sub
ret
mov
xchg
push
jmp
xor
movb
ds
push
xchg
sbb
int
adc
sub
imul
sbb
push
pop
inc
mov
sti
mov
repnz
mov
ja
in
add
and
lret
mov
or
add
lahf
mov
testl
xor
add
adc
push
out
and
pop
insb
cli
adc
and
xor
adc
dec
jae
out
int
xchg
aaa
xorl
pop
mov
add
push
inc
stc
pop
out
or
in
sub
inc
icebp
int
cmpsb
cs
add
adc
mov
repz
push
jg
jns
in
mov
jg
xchg
cmc
pop
out
movsl
cmpsl
sub
mov
movsl
xchg
repz
int3
dec
je
dec
aad
sbb
das
in
mov
xchg
adc
gs
aaa
xchg
xchg
clc
sub
movsl
jo
sti
into
lods
push
ret
xchg
fcmovnb
jmp
std
sbb
and
test
sar
mov
inc
mov
or
push
inc
mov
lods
sbb
xchg
js
popa
repnz
lods
fs
push
or
dec
lahf
pop
and
std
fdivl
incl
das
push
incb
test
sbb
inc
cli
mov
data16
mov
fistps
fcmovb
xor
inc
ficoms
aam
rcll
lret
cmp
add
jb
das
cmc
adc
push
sbb
enter
xor
sbb
or
pop
jns
jae
add
ljmp
sbb
cli
push
sub
and
jmp
clc
adc
mov
add
sbb
dec
jmp
lods
ficoml
loopne
inc
test
lea
iret
push
xchg
add
into
xchg
sub
push
clc
mov
cmp
stc
jno
pop
mov
add
adc
mov
inc
pop
jl
in
scas
jno
xor
int
cs
dec
daa
addl
pop
ja
sbb
cmp
xor
lea
fbstp
jmp
and
sbb
inc
insl
or
mov
jae
dec
push
mov
std
mov
into
mov
push
pushf
xor
sbb
notb
inc
sar
cli
pop
sub
loop
outsl
pop
adc
in
fldenv
jl
adc
add
lea
loop
or
clc
mov
pop
arpl
sbb
imul
imul
aad
insb
out
add
inc
xor
scas
push
sub
data16
dec
mov
push
cltd
sbb
cmp
mov
cmp
loopne
lock
mov
pop
and
int3
and
sub
mov
mov
pop
mov
pop
nop
ret
lods
movsl
mov
jb
sbb
mov
sub
xchg
popf
sub
rorb
negb
cwtl
test
in
aad
pushf
imul
adc
jmp
push
jge
hlt
mulb
push
cmp
call
adc
out
cmp
sbb
cli
dec
sarl
adc
fwait
cmpsb
mov
and
pusha
mov
pop
cmp
jne
cwtl
nop
cmp
in
pop
imul
mov
je
xchg
pop
mov
testl
xchg
inc
movsb
push
leave
cs
hlt
and
pop
inc
aas
jecxz
mov
mov
pop
je
xorb
aam
lahf
aaa
sub
inc
mov
sbb
push
pop
mov
mov
mov
adc
jns
es
inc
mov
or
lock
addl
aas
mov
lea
scas
mov
inc
sbb
mov
xchg
loope
xorb
test
les
loope
xsave
push
repnz
pop
and
pop
repnz
or
sbb
jae
sti
and
cltd
xor
out
dec
lahf
loope
popf
fistpl
and
inc
cs
aas
adcb
movsb
aad
adc
addr16
lret
loopne
shrb
ds
pusha
insl
and
in
test
andl
fists
and
push
adc
int
iret
cld
add
cmp
sub
jo
sub
or
xor
xorl
xchg
and
movsl
mov
add
test
and
aas
lds
and
pushf
popa
sbb
pop
and
cmpb
dec
jnp
pop
adc
lret
fists
push
std
inc
sbb
outsb
pop
in
cs
xchg
add
mov
inc
dec
push
sar
lret
addr16
pop
mov
js
sub
push
clc
pop
lahf
mov
xlat
xlat
stos
push
sbb
sub
aas
dec
imul
jnp
add
xchg
cmp
jp
ret
cmp
xchg
mov
push
push
out
out
dec
jg
pop
cmpsb
push
cmc
jle
xchg
insl
aad
pop
inc
inc
xchg
add
dec
aas
hlt
mov
xchg
dec
fidivrs
push
cmp
jae
mov
pop
cmp
testb
add
fistps
pop
add
sbb
or
push
cwtl
sub
xchg
sbb
mov
addr16
and
sbb
std
cmp
mov
hlt
je
xor
pop
pop
dec
iret
adc
cs
subb
imul
xchg
mov
movsl
push
push
mov
sbb
decl
sahf
jle
pusha
xor
inc
add
fidivs
das
dec
shlb
mov
inc
inc
sbb
xchg
xor
fadds
sbb
popa
push
inc
dec
cmp
rcrb
test
mov
jb
mov
pop
fwait
inc
inc
mov
gs
pop
imul
sub
dec
pop
gs
cmp
rcrb
pop
fldenv
inc
push
adc
lret
jp
stos
jne
xchg
cmp
ret
xchg
outsl
cwtl
push
lea
bound
sub
push
push
sahf
sub
movsl
adcb
int3
idivl
cmp
rcl
mov
and
mov
iret
mov
mov
inc
andl
fldlg2
mov
pop
sub
sahf
xor
sub
jns
sti
mov
dec
shlb
mov
shlb
and
inc
fwait
mov
movsl
add
cmp
or
or
xchg
inc
or
repnz
shll
mov
in
jb
fisttps
inc
in
xchg
outsb
out
popa
push
cmp
cld
test
push
popa
rcrl
sub
and
cmpsl
scas
pop
popf
adc
jle
addr16
pushf
dec
daa
bound
mov
and
hlt
flds
in
fmull
sub
mov
lods
insl
xrelease
iret
cwtl
sarl
mov
sahf
jae
rcr
sti
cs
push
pop
ret
in
sub
jb
arpl
push
movsb
inc
jl
xchg
fwait
cld
mov
loope
jo
dec
icebp
and
imul
mov
imul
cltd
ret
dec
in
scas
cs
sbb
pop
addr16
dec
mov
imul
mov
lret
pop
and
aad
rclb
ret
push
inc
lods
push
ret
pop
or
jle
outsl
add
jno
into
mov
and
or
xorl
jge
out
nop
rorl
sbb
dec
jb
jmp
mov
pop
movsb
sbb
jge
mov
xchg
and
aad
insb
add
xchg
cld
sbb
jno
or
aas
call
int3
cli
insb
addl
dec
aaa
fistpl
push
fs
into
xchg
cs
or
cld
sbb
addb
pop
lock
xlat
adc
xchg
cmpl
inc
adc
out
pop
iret
pop
jp
cmp
and
ret
inc
sub
mov
outsb
pop
adc
cmp
push
dec
sbb
cmp
dec
and
pop
outsl
rolb
or
inc
gs
jbe
les
pop
test
cmp
in
dec
push
inc
jnp
mov
cmp
sbb
mov
das
pop
outsb
pusha
sahf
ret
dec
movsl
fwait
aas
outsb
xchg
ja
dec
xor
inc
mov
sub
or
iret
or
mov
pop
ret
nop
fisttpl
xor
jp
mov
sub
aad
insl
inc
xor
vpcmpgtb
mov
movsb
or
dec
sub
cltd
lahf
mov
sbb
rol
ror
rclb
shll
cmp
xor
cmpsl
jl
jb
inc
in
ljmp
pop
xchg
xor
ss
dec
mov
nop
or
popf
adc
or
pop
lea
movsl
mov
and
repnz
inc
data16
pop
icebp
sti
jae
jge
add
aad
pop
push
push
cmc
js
stc
pop
hlt
jb
inc
movsl
mov
push
lods
mov
sub
cmp
sahf
loopne
push
in
loop
mov
pusha
jmp
jg
mov
loopne
sub
scas
hlt
push
daa
or
and
sarb
imul
fcoml
jecxz
stos
inc
push
add
int
outsb
mov
cs
rclb
repz
dec
call
lret
ret
fs
dec
cmpsb
jbe
jne
int3
pop
shl
das
sbb
es
cmp
loope
pushf
add
into
mov
punpcklbw
loop
xchg
mov
out
js
add
sub
cmp
cmp
jmp
fisubl
movsb
fldl
adc
mov
or
pop
pop
and
imul
pop
scas
outsb
bound
addr16
adc
das
mov
mov
call
imul
jb
jne
cmc
pop
dec
mov
pusha
mov
mov
mov
popa
xchg
insl
dec
jb
mov
inc
push
cld
stc
leave
xchg
sbb
mov
cmpsl
bound
jb
dec
cwtl
mov
movsl
in
shrb
cmp
nop
cmp
pop
pop
sub
rclb
pop
jmp
gs
fimull
sahf
ljmp
icebp
leave
inc
and
popa
data16
sbb
mov
outsl
cli
push
add
lahf
dec
imul
xorl
xor
sbb
mov
xor
iret
xlat
int3
xor
mov
test
test
jg
jnp
push
ljmp
dec
js
and
loopne
pop
ficomps
add
test
nop
test
push
adc
cs
sti
enter
mov
aaa
aad
pop
mov
sahf
pop
xchg
sbb
dec
outsl
aaa
into
hlt
repnz
rclb
in
mov
aam
or
xchg
push
mov
js
adc
dec
mov
outsb
xorb
mov
inc
jmp
or
or
sahf
sub
dec
jo
dec
pop
push
mov
jge
repnz
adc
pop
movsb
test
jle
in
dec
das
popa
arpl
stos
jo
mov
outsb
in
dec
in
nop
xchg
cmp
pop
test
cwtl
cmp
ss
out
push
xorb
mov
add
xchg
inc
notl
pop
cmp
dec
mov
mov
psllq
dec
cmp
lret
negl
xor
je
sbb
test
subb
mov
and
aam
sub
int
cld
pop
or
or
sub
in
insb
jmp
inc
push
clc
lcall
xchg
jle
daa
push
int
mov
ljmp
rcrl
fsubrp
mov
mov
mov
insl
or
popf
in
mov
cmp
sub
mov
xor
lcall
shlb
xchg
aam
pop
arpl
test
arpl
push
lea
cmpsl
jge
inc
sbb
call
ljmp
cmp
inc
fdivrs
lds
dec
insb
pop
sbb
mov
nop
fidivrs
mov
cwtl
dec
loopne
sbb
xor
sub
outsl
hlt
mov
pop
aad
out
sbb
fmull
sarl
loop
mov
pop
mov
adc
pop
xor
mov
jb
les
or
xlat
lods
mov
sbb
imul
and
int3
fiaddl
dec
adc
xor
lds
xchg
rcll
mov
xor
mov
icebp
push
jbe
adc
outsl
sbb
int
jl
xchg
lret
sub
out
out
pop
pop
cmp
rorl
adc
rcr
pop
iret
adc
pushl
mov
dec
and
in
mov
xchg
or
mov
es
aas
xor
cli
call
mov
mov
xor
xchg
into
lahf
and
mov
scas
insb
lcall
icebp
pop
data16
rorb
inc
mov
andl
cmp
nop
arpl
mov
addr16
mov
je
ljmp
out
movsb
in
mov
int
or
or
fildll
ljmp
aad
inc
mov
dec
mov
add
sub
push
xchg
imul
adc
sbb
decb
xchg
xchg
and
je
push
psubb
fpatan
add
xchg
fisubs
shlb
mov
dec
aaa
jne
lahf
test
dec
ret
xor
mov
push
pop
adc
mov
gs
mov
push
cmp
pop
and
sbbl
fnstsw
pop
xchg
test
aaa
out
cmp
jmp
cli
pop
imul
jne
add
incl
add
aam
cld
sti
mov
out
pop
pop
mov
pop
xchg
test
shrb
outsl
cmp
or
cld
incl
adc
movsl
add
js
mov
out
popf
cmpsl
flds
fisubs
jecxz
jns
lret
sarb
mov
stc
mov
ds
out
notl
or
dec
cmc
sbb
sub
arpl
dec
es
rorl
cmc
sub
xchg
mov
call
mov
jae
movsl
push
inc
cmpl
leave
ret
xchg
das
inc
hlt
jmp
push
leave
jbe
xchg
bnd
mov
lds
aad
and
adc
push
mov
aaa
call
test
andl
lods
sahf
in
xor
test
imul
leave
into
and
in
xchg
cltd
shlb
imul
inc
cmp
sahf
test
sarb
and
adc
inc
push
lea
jae,pt
movsb
jg
pushf
scas
cmpb
pop
push
out
fiadds
enter
and
jmp
ss
and
fcoms
sarl
mov
mov
mov
sbb
cmp
cmp
out
lods
push
stc
cmp
fs
push
cmpsl
icebp
enter
jg
inc
sub
inc
sbb
or
pop
or
inc
mov
lahf
popa
jl
clc
adc
shll
xchg
lahf
inc
dec
mov
push
sbb
insb
stc
or
movsb
mov
add
sti
daa
push
fistpll
adc
sbb
fnstcw
fwait
daa
xchg
sbb
pushf
inc
cli
hlt
adc
push
ret
shll
scas
sbb
adcb
popa
scas
xor
cmp
mov
mull
ret
int3
in
stos
lret
sub
insb
push
imul
jb
fisubrl
xor
rolb
in
add
xchg
ss
jae
jb
addb
adc
shll
icebp
nop
enter
sbb
add
fldcw
push
rcll
mov
pop
xchg
lods
in
loop
fmul
sub
js
xor
push
imul
inc
xchg
xchg
sahf
or
add
or
jbe
jns
hlt
das
aas
pop
test
ljmp
nop
mov
addb
xchg
and
cltd
leave
sbb
lea
sub
mov
mov
cmp
not
cmc
rcl
movsl
cltd
rcl
aaa
test
jns
cwtl
mov
outsl
lock
jmp
inc
mov
les
lods
mov
push
imul
lret
test
jg
push
mov
pop
sbb
add
sbb
mov
jnp
arpl
sub
test
call
inc
aaa
mov
jecxz
xor
push
sub
add
je
or
adc
inc
insl
idivl
add
push
push
mov
mov
lret
outsl
insl
aaa
sbb
ffreep
fucomip
pusha
mov
inc
outsb
cmp
mov
adc
xorl
mov
rcrl
dec
jns
fistpl
mov
mov
mov
pop
pop
add
into
clc
dec
jge
or
idiv
pushf
xor
cmp
inc
arpl
mov
add
mov
leave
mov
in
std
mov
xor
rolb
shlb
cmpsb
enter
jb
fldt
sub
xchg
adcb
fcmovnbe
pop
js
inc
add
cmpsl
push
pop
sbbl
pop
mov
rcll
gs
push
jb
sbb
sub
aaa
xlat
int3
dec
inc
shlb
daa
mov
lea
sbb
movsb
pop
push
xor
in
lods
push
mov
lds
sbb
jno
dec
testl
cmp
popf
mov
test
dec
mov
daa
jmp
mov
xchg
arpl
xchg
lods
add
data16
into
gs
jp
fld
mov
loope
test
scas
mov
fsubr
inc
cli
dec
mov
and
sub
int
or
rorb
and
je
dec
lea
andl
push
ds
popa
mov
enter
dec
insl
add
enter
and
ret
pop
insb
out
push
dec
fistps
or
hlt
mov
xlat
xchg
push
and
outsb
out
inc
cwtl
loopne
push
call
or
pushw
fisubl
mov
iret
sub
lods
jl
scas
ljmp
dec
cwtl
add
test
loopne
push
jnp
and
popa
jne
lret
push
push
pop
cmp
cmc
cltd
bound
ror
push
xor
loopne
pop
mov
mov
ror
rclb
inc
sub
pop
dec
mov
add
add
loop
orb
iret
aaa
lret
outsl
rcl
popf
cmp
test
mov
jle
or
inc
outsb
mov
and
sub
test
pushf
fnstcw
cmp
jecxz
cmp
sti
cmc
fs
int3
adc
jge
cmp
push
out
lret
push
jne
mov
jg
mov
in
scas
jo
jno
ds
test
dec
fldenv
sahf
xchg
rclb
xor
pushf
mov
xchg
push
jnp
cmpsb
pop
mov
daa
in
dec
add
aas
mov
ss
jmp
imul
sbb
insl
inc
cmp
iret
xchg
filds
repnz
fsubrs
push
and
xor
xchg
add
inc
jp
xchg
mov
cmpsl
loop
loope
add
cli
imul
add
rcr
dec
jecxz
pop
fimull
roll
mul
mov
push
sbb
push
add
xor
cmpsl
into
lret
pusha
inc
sub
in
xor
pusha
imul
and
outsl
jecxz
pop
ljmp
jmp
bound
std
jbe
push
and
cmc
testl
xchg
outsb
loope
push
rcl
xor
pop
push
mov
icebp
sahf
arpl
mov
push
mov
mov
out
push
push
lea
in
jbe
sbb
mov
push
jg
shrl
test
inc
movsb
test
jle
jo
aaa
daa
inc
dec
xchg
cmp
push
xchg
subb
insl
daa
push
inc
pop
mov
mov
or
pop
or
jo
lahf
mov
clc
push
dec
lods
fdivrp
mov
mov
insb
insb
aas
js
and
aaa
insl
mov
xchg
pop
lea
xor
push
xor
vcvtsi2sdl
or
sub
js
sbb
xchg
fmulp
lret
xor
out
movsl
push
in
shlb
pop
jmp
ds
int3
fwait
scas
aaa
sub
xlat
or
mov
dec
sub
ficoms
jl
mov
sub
shll
inc
jmp
xor
das
xor
push
adc
outsb
in
fadds
jl
jb
mov
fisubs
rcrl
loope
loop
arpl
test
and
cmc
jo
call
mov
jecxz
dec
aam
pop
sub
mov
nop
add
adc
jmp
and
inc
xlat
pusha
into
loopne
mov
sub
push
sbb
bswap
repz
mov
imul
inc
ss
push
outsb
cmp
and
inc
std
jns
aad
cmp
addr16
fistps
js
xor
lods
fldl2e
push
lret
lcall
cmc
jmp
fs
stos
js
adc
dec
pop
dec
mov
rcll
mov
hlt
cmpsb
inc
into
out
and
mov
jl
lret
test
inc
cltd
imul
cmp
cltd
nop
scas
adc
imul
jge
lcall
ss
mov
sub
jecxz
mov
aam
lahf
xchg
jle
inc
mov
mov
pop
call
test
mov
aam
lock
push
cmp
pop
repz
mov
mov
bound
and
addr16
cmpsb
stos
scas
jb
dec
aam
jmp
dec
fwait
addr16
sbb
add
lahf
cs
jo
push
adc
add
cmp
xor
sbb
loopne
int
enter
sti
push
dec
dec
jmp
xor
in
xor
loop
sbb
jnp
mov
daa
je
imulb
icebp
mov
orb
adc
in
mov
cld
or
fsubrl
jnp
js
jb
icebp
pop
dec
cmc
sub
out
mov
add
jge
daa
dec
cld
in
ret
sti
lret
bound
adc
cli
pop
sbb
adc
sub
clc
or
and
push
or
xor
into
hlt
dec
daa
in
or
xorb
mov
mov
popf
and
xor
not
aaa
adc
mov
pop
test
and
dec
ss
ljmp
nop
rcrb
pusha
popf
sub
pop
xlat
shrb
enter
lret
mov
xchg
or
adc
icebp
scas
or
adc
or
mov
sub
sub
sar
movsb
pop
push
xchg
inc
dec
lret
in
xor
pop
push
mov
pop
mov
push
mov
adc
sub
fsubl
stos
loop
rcrb
es
mul
mov
push
lea
inc
imul
outsl
pop
sub
aaa
ret
push
scas
xor
fisubrl
std
stos
xor
xchg
imulb
jno
adc
inc
call
xor
cmp
or
fcmovne
adc
dec
int
leave
sbb
pop
sbb
stc
fwait
ja
js
or
loopne
imul
stos
mov
xlat
daa
test
scas
jge
loop
mov
loop
add
std
xchg
dec
xlat
gs
sbb
jo
inc
and
in
dec
jae
dec
shll
cmp
imul
cmpsl
add
aas
cld
sub
xchg
inc
xor
pushf
mov
int3
ljmp
add
pop
adc
cmp
sahf
outsb
insb
push
xchg
inc
rcl
lret
cmpsl
mov
dec
mov
pop
pop
pusha
lea
popf
cwtl
mov
lahf
or
mov
movsl
add
mov
and
sbb
call
sbb
cmpsl
and
mov
lret
cmpb
sbb
jp
shlb
lret
gs
cs
push
cwtl
mov
xchg
data16
sarl
jns
cltd
idivb
cld
xor
pop
leave
je
aam
cmpsl
lret
mov
mov
mov
pop
sbbb
out
ud0
dec
cli
clc
jbe
ja
xor
inc
xchg
mov
fidivs
cmp
lea
fwait
sbb
enter
sbb
mov
int3
outsl
ds
jp
data16
mov
add
xchg
cwtl
push
loopne
out
jae
and
mov
mov
dec
mov
mov
call
int3
inc
xor
cmp
je
jle
in
lret
mov
rcrb
int3
dec
lea
adc
addl
arpl
and
sub
into
lea
xchg
and
cwtl
add
dec
cwtl
or
cli
imul
and
divb
jle
or
dec
and
xchg
sub
adc
inc
test
jae
dec
pop
fwait
sub
jo
lods
pop
ret
das
jmp
mov
in
xorl
sub
inc
or
int3
clc
pop
mov
jle
stos
inc
aad
stos
pop
add
xchg
lods
mov
test
xchg
sarb
insb
jl
repnz
jge
cmpsl
movsl
lock
lret
leave
rcll
ss
xchg
add
addb
flds
cs
jbe
mov
loope
pop
mov
mov
xchg
jno
fistpl
xchg
aam
daa
sti
sub
sbb
xor
mov
stos
mov
mov
outsb
push
icebp
xchg
cmpb
mov
testl
cmp
scas
scas
push
sub
pop
mul
xor
mov
dec
lock
or
mov
std
pop
stos
and
movsb
repz
add
ja
push
int3
imul
push
jmp
pop
sti
rcll
std
push
pop
adc
aaa
std
pop
dec
dec
scas
shlb
test
dec
jmp
mov
repz
icebp
cmp
mov
jno
mov
out
push
call
movsb
xchg
mov
push
xor
adc
sbb
mov
std
pop
int3
scas
and
push
push
lods
repz
mov
aam
xor
adcb
loopne
pop
std
pop
cld
rcll
cmp
jbe
mov
js
sub
je
push
dec
cmp
adcl
ficoml
mov
iret
push
scas
mov
xor
cmpsb
push
inc
jmp
adc
pop
mov
mov
pop
fnstsw
jecxz
pop
jne
pop
pushf
popa
cmp
movl
xor
rorl
dec
add
jp
lret
aaa
pop
xlat
pop
xchg
push
addr16
inc
sub
xchg
mov
jge
out
jo
pop
add
jp
dec
jmp
pop
lods
call
xor
push
adc
movsb
and
dec
sub
dec
sub
jae
mov
inc
ja
jecxz
jae
adc
ja
xchg
mov
and
ficomps
push
push
lds
jae
cmpsl
cs
cmc
xor
lcall
ds
xchg
cmp
outsb
mov
xor
pusha
push
and
add
movsl
ds
push
ljmp
pusha
imul
xchg
sub
scas
push
cmp
lcall
addb
inc
test
fwait
xlat
add
sti
mov
push
cmp
jp
mov
fs
mov
adc
nop
cmp
jns
cltd
push
adcl
cltd
loop
in
mov
and
addb
dec
hlt
add
scas
hlt
adc
and
inc
xchg
popf
test
sub
add
mov
fisttpl
es
mov
xchg
push
mov
sbb
push
es
in
xchg
push
or
xchg
and
fwait
out
inc
jbe
cmc
mov
ljmp
aas
loope
mov
popf
adc
stos
and
mov
pop
sbb
xchg
iret
xor
int
mov
or
jecxz
push
mov
mov
data16
mov
mov
sarl
nop
nop
mov
outsb
mov
hlt
push
jle
mov
sub
adc
inc
or
cmp
ds
and
lret
test
inc
mov
fldt
or
scas
sbb
int
in
sbb
push
repnz
jg
jae
mov
pop
inc
push
bound
frstor
cltd
pop
pop
adc
push
cld
cli
push
jle
cli
stos
lret
mov
sarl
inc
jb
lcall
mov
sub
jg
jb
sbb
lret
and
test
pop
out
ds
adc
stc
cmp
fs
mov
jp
movsb
cmp
dec
pop
pop
cwtl
xchg
and
addr16
into
fs
inc
ljmp
mov
mov
push
xchg
push
insl
jmp
das
mov
xor
es
xor
push
pop
into
notb
sar
inc
imul
out
cmpl
lea
jmp
pop
adc
mov
out
and
mov
add
imul
mov
cmp
pushf
mov
faddl
ss
dec
adc
jb
jno
lcall
fmulp
leave
cmp
lret
cmp
cmp
inc
dec
pop
dec
push
xchg
pop
dec
adc
iret
mull
push
push
icebp
jle
dec
cmp
call
lret
adc
inc
xor
nop
lret
xor
or
nop
add
call
lea
movsb
ds
add
push
cmpsb
outsl
outsb
sbb
sbb
or
popf
sbb
add
push
cmp
sub
fimuls
test
mov
adc
lods
fbstp
adc
mov
xchg
lcall
insb
sub
pop
fwait
xchg
lock
les
mov
or
jge
xor
jne
inc
sub
mov
push
lods
mov
pusha
js
push
arpl
ss
outsb
icebp
fistl
out
test
jmp
mov
inc
test
inc
cld
add
inc
cmp
pop
stos
out
inc
push
mov
jae
test
or
xor
push
add
fadds
test
cmp
cmp
ret
and
insb
out
dec
pop
pop
cmpb
push
or
fistps
dec
or
pushf
xor
cld
out
lret
push
push
loopne
push
dec
aad
add
mov
js
out
mov
les
sbb
mov
jae
xchg
mov
xor
pusha
inc
icebp
movsl
pop
adc
hlt
jle
mov
adc
dec
pop
test
outsb
mov
mov
xor
add
test
sub
xchg
dec
lret
cmp
mov
in
sti
and
or
repz
xor
clc
xor
jle
sbb
lret
out
mov
push
add
leave
push
add
mov
cltd
repz
fsubrp
cmp
mov
add
lcall
sub
xor
dec
imul
sbb
aaa
cmpsb
cmp
arpl
shlb
or
and
ds
push
xchg
and
sub
lods
mov
dec
sub
out
mov
sub
sub
icebp
xchg
ret
dec
mov
cmp
sbb
dec
cmp
scas
rcrl
adc
in
sti
and
jmp
jb
inc
xchg
shlb
push
pusha
es
cmp
adc
nop
das
adc
or
xchg
fs
inc
ds
pop
out
pop
rcll
sbb
fdivrs
sti
dec
into
xor
addr16
adc
pop
cwtl
adc
pop
sbb
test
adc
jmp
mov
movsb
imul
rolb
push
sbbb
cli
rcrb
cmp
adc
mov
stos
pop
ljmp
xchg
fsubr
test
mov
push
inc
gs
and
xchg
test
xchg
cmpsl
mov
mov
jle
sub
pop
cmc
gs
cmp
call
lcall
test
fnstsw
clc
in
bound
clc
sub
hlt
adc
mov
fildll
inc
rorb
jle
add
fnsave
mov
mov
or
mov
mov
cmp
jno
cmp
mov
mov
pop
addr16
mov
leave
out
adc
aaa
pop
in
daa
jg
cmpsl
rclb
imul
mov
and
shrl
repnz
or
lret
nop
mov
aad
push
mov
fwait
incl
pop
or
jp
insl
mov
or
es
dec
sub
fcom
loop
shlb
jecxz
jge
pop
test
repnz
xchg
or
mov
fadd
in
jmp
dec
jg
movsl
cmp
aaa
adc
or
push
movsb
push
call
sub
add
loope
icebp
lret
cmpb
push
sbbl
jle
push
leave
jno
inc
add
cmp
cli
mov
cltd
pop
sub
loopne
dec
out
xchg
mov
xchg
push
sbb
dec
insb
sbb
mov
rcr
out
jle
jnp
or
or
push
loope
pop
enter
pushf
subl
rcl
cltd
popa
pop
sbb
loop
mov
sub
mov
cmp
lret
clc
xor
icebp
and
xchg
mov
out
mov
dec
mov
popf
push
inc
rcrb
out
sbb
ljmp
cwtl
inc
gs
lret
call
outsl
mov
in
jne
fnstcw
dec
sub
addr16
and
mov
push
mov
or
xor
call
push
icebp
cltd
repnz
test
xchg
pusha
shlb
mov
mov
data16
fnstenv
mov
sub
ds
and
fwait
data16
in
fisttps
pop
fidivrl
fxch
mov
imul
test
gs
mov
je
jo
and
push
mov
insw
aad
mov
pop
pop
lea
mov
inc
fwait
sbb
stc
mov
dec
pop
aad
shrb
out
mov
xor
in
repz
jmp
pop
stc
xchg
lods
fistps
sbb
icebp
adc
sbb
and
or
mov
ss
push
push
jmp
test
jp
dec
sub
stos
sub
fcompl
inc
dec
out
rcrb
sti
lahf
jge
add
int3
pop
repz
jns
les
ja
pop
xchg
pushf
sub
mov
roll
mov
out
sub
fldl
dec
pusha
bound
sbb
mov
mov
shlb
pop
push
in
fldcw
inc
pop
adc
arpl
sbb
add
or
pop
js
fcmovb
popf
sarl
push
push
cmp
call
ret
iret
push
mov
and
pmulhuw
fisubrl
fistpll
lds
rclb
sbb
ret
mov
hlt
xchg
fucomp
pop
mov
jl
sbb
sti
add
popa
rcrl
or
mov
jne
movsb
fcoml
outsl
outsb
xchg
daa
jg
ret
cmpsl
lods
enter
and
shlb
lods
jbe
repz
add
push
lret
rcr
negl
roll
mov
into
test
lret
jp
imul
add
lahf
or
in
dec
test
insl
xor
pop
iret
inc
mov
add
aam
jae
push
fmuls
mov
cs
push
xchg
jmp
mov
pop
test
or
cmp
xchg
pop
pop
xor
jle
lock
pop
test
jne
pop
and
pop
mov
fbstp
jns
gs
or
push
fidivs
aas
adc
outsl
sbb
sub
test
inc
pop
jle
adcl
fldt
daa
inc
pop
cmpsb
xor
outsb
or
jl
jp
ja
test
push
xor
mov
call
xchg
inc
sbb
test
inc
icebp
jge
ljmp
icebp
stos
xor
pop
mov
pop
pop
mov
sbb
cmc
loope
je
xor
and
adc
pop
pop
mov
lret
mov
xchg
pop
mov
inc
pushf
sbb
repz
test
sahf
dec
mov
pop
jno
jg
sti
pop
adc
loope
pusha
popl
test
fisubrs
cmpsb
pop
addb
sahf
outsb
jg
loop
xchg
ds
cli
inc
mov
or
outsb
adc
pop
jg
loop
adc
fnstenv
dec
jg
adc
stos
clc
pop
enter
add
mov
cli
pop
cmpsl
inc
pop
push
sbb
sbb
test
out
clc
es
mov
and
sub
and
xchg
lcall
mov
push
popf
ss
mov
mov
les
int
sbb
in
mov
loopne
ret
movsl
mov
aad
popa
inc
inc
mov
xor
shlb
mov
jnp
fcomip
and
mov
jmp
outsl
and
sbb
and
lock
pop
or
aad
cmpsb
or
arpl
xchg
mov
or
bound
push
and
dec
fbld
movsl
sub
pop
cmp
push
dec
es
into
movsl
xor
xchg
imul
xchg
push
outsl
sub
xchg
cs
pop
clc
mulb
xchg
stc
mov
lock
fstpt
inc
ds
leave
sub
xchg
mov
loopne
push
and
xchg
pop
out
ficompl
jp
mov
and
fadds
outsl
and
jno
outsl
jmp
stos
cltd
sub
hlt
enter
subb
push
outsl
sub
pop
bound
jmp
pop
test
mov
neg
repnz
xor
sub
inc
or
shll
sahf
xchg
int
lock
fimull
xor
xor
or
cmpsl
mov
cmp
test
inc
cmc
and
push
xchg
repnz
adc
in
sub
pop
aam
sahf
jnp
std
int
cwtl
test
subl
pop
dec
xchg
je
out
fcmovnu
into
add
mov
repz
ljmp
mov
outsb
aas
jns
or
int3
movsl
xchg
cmp
pop
add
adc
pop
adc
mov
push
repz
xorl
inc
lods
daa
repnz
lds
out
xor
adc
mov
push
push
inc
js
mov
ret
dec
or
dec
imul
or
je
dec
xor
test
ds
lahf
cmp
inc
popf
jl
mov
pand
out
add
popa
push
fbld
shlb
inc
fisubs
cmc
add
adc
fbld
ja
push
iret
add
ljmp
xor
sub
pop
imul
mov
jne
mov
jle
xchg
movsl
inc
xchg
mov
std
add
xchg
add
sub
dec
jbe
dec
iret
pop
pop
jns
decl
stos
xchg
int3
inc
pop
add
pop
dec
mov
push
or
lods
inc
mov
scas
loop
addr16
data16
fistpll
rclb
mov
inc
pop
outsb
mov
pop
notb
in
and
xor
cmp
sti
push
inc
iret
push
call
outsl
cmpsb
xor
lcall
xorb
sbb
cmp
je
fnstsw
pop
dec
pop
dec
mov
xchg
fldt
adc
lds
xlat
and
daa
enter
xchg
pop
xlat
rolb
mov
es
push
arpl
jl
cmp
mov
and
inc
loope
addr16
aad
insl
fwait
push
shll
push
js
push
jb
or
stos
popa
movsb
out
adc
cmp
es
mov
jns
lret
es
push
mov
incl
xor
popf
fcomps
icebp
xor
je
or
add
jmp
adc
mov
test
jp
push
dec
fimull
and
adc
popf
scas
loope
jle
and
enter
ja
or
negl
or
sub
test
stos
jecxz
inc
dec
imul
arpl
imulb
dec
fstps
sahf
sbb
jecxz
cwtl
lahf
sub
or
ljmp
xchg
inc
les
adc
aad
cmp
or
mov
xchg
or
inc
mov
cmp
loop
mov
and
repz
mov
push
and
mov
icebp
push
fnstsw
fucomp
aaa
mov
in
mov
pop
pop
or
in
loop
popf
ljmp
cld
push
pop
or
jle
lods
cmp
in
aaa
ljmp
cwtl
xchg
and
mov
mov
mov
jb
scas
imul
sti
pop
mov
rcl
js
aas
and
popf
or
mov
sahf
dec
fmull
std
dec
js
inc
scas
xor
mov
movswl
xor
cwtl
popa
subb
in
repz
popa
ficompl
cmp
insb
xor
lret
iret
jecxz
or
in
inc
test
rorl
adc
inc
mov
mov
sub
sub
clc
adc
inc
mov
xor
fcomip
stc
dec
inc
lret
rcr
shlb
adc
out
sahf
in
loope
lret
insb
inc
dec
mov
aas
aad
lcall
into
insb
cld
pop
push
push
xor
sbb
loop
mov
insl
fdivp
sub
mov
mov
daa
sbb
push
imul
fisubl
cmp
sub
iret
and
mov
popa
fistpl
lods
mov
leave
mov
repnz
bound
cmp
ljmp
bound
dec
mov
inc
adc
sahf
push
mov
mov
lret
js
test
in
sbb
out
cmc
fs
mov
je
or
je
push
pop
jmp
adc
mov
mov
xchg
adc
sbb
or
daa
or
repz
in
mov
mov
or
dec
popf
push
push
inc
add
xor
cmp
push
ljmp
repnz
cld
rol
jo
pop
mov
xchg
cs
inc
dec
add
push
into
imul
xchg
xchg
mov
hlt
and
dec
lret
sub
push
or
dec
and
sbb
ds
inc
xor
stos
faddp
insl
idivb
sub
push
fistl
call
out
push
mov
mov
stc
cwtl
jp
mov
or
in
dec
sub
das
fildll
mov
push
in
test
frstor
sahf
lods
jecxz
mov
jae
jl
movq
in
fiaddl
and
pushf
adc
movsb
bnd
or
dec
ds
movsl
mov
addr16
enter
xor
out
out
push
inc
inc
lea
cmp
mov
mov
in
les
mov
adc
dec
push
lods
jnp
mov
jae
cld
pop
test
nop
jae
jmp
adc
clc
or
jle
pop
iret
inc
mov
pop
mov
std
push
mov
aas
dec
pop
jns
add
pop
lahf
inc
mov
cmpsl
sbb
jb
and
pop
or
outsl
out
rclb
adc
sahf
mov
xor
push
pinsrw
enter
pop
mov
mov
fcomi
int3
xchg
cs
jae
adc
mov
add
cmpl
cltd
outsl
sbb
imul
sar
rcr
hlt
push
test
cmpb
mov
sarl
xchg
add
outsb
jle
pop
mov
mov
push
cmp
add
or
push
cmp
jg
lds
xchg
cwtl
cltd
jecxz
aad
ret
and
outsl
into
pop
shl
stos
lea
and
mov
xchg
ds
hlt
rol
lds
mov
dec
lahf
in
mov
in
dec
ret
loope
lods
sbb
sbb
fidivrl
xchg
xor
sbb
cmp
ds
jge
sbb
test
ss
dec
sub
lea
fdivr
jmp
gs
call
pusha
aaa
jns
repz
fidivs
add
mov
xchg
fists
xchg
out
and
aad
popl
call
jno
and
xlat
push
adc
sub
jb
pop
shl
jne
push
sub
xor
out
mov
mov
cmp
jne
adc
cmp
add
repz
add
test
mov
dec
lret
ret
mov
fucomi
mov
inc
ret
or
cmpsb
roll
scas
jmp
sub
mov
outsb
and
inc
bound
lahf
sbb
or
pusha
push
out
leave
sbb
or
test
pop
pop
ja
repnz
mov
rol
sbb
mov
shl
add
mov
sub
iret
sub
fs
insb
mov
out
xchg
in
pop
ss
int
cmp
daa
add
dec
enter
je
loope
iret
out
loope
pop
insl
repz
das
insl
insb
xchg
dec
xorl
or
ss
xor
sbb
call
imul
outsl
push
test
insl
dec
push
xchg
insb
push
xchg
mov
inc
testl
cs
imul
jp
cli
out
leave
push
arpl
outsl
adc
cmp
js
fs
mov
call
xchg
or
icebp
daa
adc
cmc
mov
lahf
cmp
out
sub
or
add
pop
mov
pop
in
rcrl
lcall
fisubs
data16
inc
sarl
xor
mov
sub
xchg
mov
pusha
movsw
pusha
mov
enter
dec
nop
aaa
pop
ja
std
in
out
mov
cld
aam
and
pop
push
lock
add
gs
sbbb
leave
pop
cwtl
fisubrs
lcall
xlat
jmp
test
pop
mov
xchg
adc
and
pop
mov
fmull
and
cmp
jb
outsb
cld
jne
jecxz
push
push
or
addl
inc
jl
call
xchg
lcall
mov
mov
ror
jge
cld
out
in
mul
push
and
fdivrs
mov
inc
fs
xlat
jo
roll
dec
shl
mov
jmp
cltd
jns
mov
add
jle
cmp
mov
cltd
in
ret
jne
add
icebp
out
sbb
and
iret
shll
add
iret
xor
stc
outsl
xchg
sub
cmp
xor
pusha
cmp
loop
xchg
and
inc
repz
sub
pusha
pop
repnz
inc
cmp
cltd
jno
mov
lds
push
sti
xchg
sbb
dec
adcb
cmp
inc
clc
orb
popa
rcl
or
pop
pop
mov
lcall
mov
not
and
sbb
mov
mov
mov
leave
bound
inc
add
in
and
xchg
add
mov
cmp
pushf
push
xchg
mov
sub
mov
fwait
mov
decb
cmp
dec
xorb
pop
cmp
xor
adc
inc
cmp
push
inc
jecxz
add
stos
jo
cli
imul
popf
outsl
stc
bound
push
pop
jge
xor
insl
mov
sti
jl
lcall
lds
sbb
sbb
ret
and
pop
and
roll
sbb
sub
push
test
dec
push
clc
adc
inc
mov
jae
fwait
push
daa
out
mov
lahf
xchg
fwait
dec
push
xchg
aas
fsubr
or
lahf
push
imul
xchg
push
sbb
xchg
test
mov
test
xor
setne
pop
mov
sbb
mov
sbb
jns
cwtl
inc
out
sub
scas
pop
test
shll
jge
stos
cltd
xor
push
jge
in
test
inc
xlat
pop
int
test
dec
and
lods
xor
mov
or
mov
lahf
stos
in
insl
xor
push
test
sti
xchg
pusha
mov
mov
pushf
jne
pushf
fstp
cmp
or
add
mov
stos
lds
bound
lret
je
add
jge
daa
es
jb
mov
insl
es
gs
jge
dec
jae
nop
add
sub
mov
or
dec
jl
and
pop
mov
insb
pop
repnz
dec
xor
subb
jns
inc
iret
xor
mov
push
xchg
sbb
adcb
push
imul
add
jle
push
fcomip
cmc
dec
sti
sbb
push
mov
add
imul
pop
xlat
or
stos
jp
lret
scas
in
shrl
sbb
mov
iret
sbb
push
sti
lock
push
mov
pop
lcall
mov
xorl
mov
mov
xor
fs
gs
jb
sarl
adc
testl
mov
or
fisubs
movhps
aaa
stos
or
shl
pop
and
adcb
add
pop
jnp
scas
sub
lock
fstpl
xor
cmp
popa
rcrb
loopne
lds
movsl
dec
dec
in
or
pop
inc
cmpsb
xchg
mov
sti
inc
stos
mov
mov
jecxz
xchg
mov
inc
aas
daa
jno
int
lock
call
filds
loope
fistpll
aaa
in
push
mov
scas
xchg
xchg
into
repz
mov
in
in
sti
nop
push
sub
into
aad
sahf
push
xchg
loopne
decl
jnp
outsb
push
and
bound
mov
sbb
out
jae
jne
cld
rcl
test
add
or
sbb
inc
pop
jb
psubsb
mov
fadds
mov
and
shl
sub
mov
das
mov
mov
pop
mov
dec
sub
ret
rorb
das
pop
arpl
xor
movsb
xor
xor
loopne
sub
ljmp
push
jg
mov
push
lods
xlat
mov
shl
insb
nop
into
push
fs
aad
or
mov
scas
inc
push
and
in
daa
scas
sub
ljmp
cmpsb
out
loop
mov
cmc
repz
mov
mov
inc
test
pop
xchg
int
mov
icebp
sbb
subb
sahf
lea
pusha
jmp
mov
ror
data16
sbb
into
shll
mov
lcall
ds
sahf
lods
sub
mov
mov
out
loope
jbe
mov
aam
testl
xor
mov
mov
insb
pop
nop
in
add
std
mov
push
jns
inc
pop
rcl
cmp
fstl
std
je
pop
mov
sar
stos
popf
ret
cmp
jge
cmp
shll
jecxz
in
jbe
orl
adc
mov
dec
jnp
inc
mov
xchg
mov
in
mov
sub
nop
test
jae
rcrl
int3
dec
nop
imul
out
add
inc
dec
push
cli
int3
push
mov
icebp
push
addr16
add
sbb
jb
add
lcall
test
dec
sar
jp
mov
call
bound
aas
stc
fidivrs
imul
call
int3
adc
das
ret
push
xchg
loopne
jb
push
shl
lock
mov
mov
dec
lea
fwait
and
in
add
sbb
pop
cmp
xlat
dec
call
dec
loop
fwait
outsl
jecxz
push
pop
int3
inc
add
jmp
fisubl
aas
xchg
imul
outsl
or
into
sub
aam
inc
insl
mov
push
and
add
and
dec
xchg
mov
gs
add
imul
jmp
cld
mov
loop
movsl
daa
and
loope
sti
fs
adc
iret
inc
enter
push
pop
cmc
mov
sub
cltd
add
leave
je
mov
mov
sbb
sub
lcall
mov
and
mov
sub
xchg
add
mov
and
mov
jmp
pop
test
adc
sahf
adc
aaa
iret
xchg
push
push
xor
xchg
rolb
or
dec
imul
jae
push
outsl
inc
je
fdivs
ds
xchg
lcall
pop
inc
bound
in
cld
inc
dec
je
mov
rcr
inc
push
sahf
mov
cwtl
mov
movsl
mov
test
pop
insl
and
dec
cmp
int3
lock
notb
pop
add
cmpb
fs
cmp
shl
clc
es
arpl
faddp
pusha
add
xchg
fimuls
rcr
and
fs
add
bound
cli
gs
mov
adc
stc
fistps
cmp
loope
sub
and
jecxz
and
scas
mov
and
fyl2xp1
popf
dec
xchg
mov
and
xor
push
fstpl
adc
roll
jae
gs
sbb
cwtl
cwtl
testl
psubsb
or
pmulhw
inc
push
int3
inc
dec
jmp
jo
mov
aad
insl
and
repnz
adc
aad
pushf
idivb
shl
cmp
adc
daa
repz
js
fimuls
ljmp
popf
jecxz
mov
push
cmp
fwait
adc
pusha
adc
in
mov
xor
pop
fmuls
add
cwtl
stc
movsl
je
pop
jb
shrl
sbb
jg
cltd
fs
into
jno
pop
dec
cmp
imull
mov
cmp
adcb
inc
cld
ds
std
shll
loop
fistl
mov
out
add
loop
xor
mov
cmpsb
sbb
cli
pop
push
mov
jbe
mov
out
jmp
jp
cld
xchg
sahf
and
dec
mov
int
leave
xchg
push
jl
out
addr16
or
fnsave
push
mov
mov
imul
lds
jbe
addr16
rcl
cltd
xchg
out
lret
dec
mov
cmp
pop
call
mov
cmp
and
mov
fistps
push
or
pop
test
mov
or
mov
and
sbb
out
mov
dec
dec
call
push
shrl
cmp
mov
sbb
pop
gs
pop
inc
ret
cmpsb
push
test
inc
lods
sbb
hlt
xchg
int
mov
dec
imul
jmp
in
insl
inc
jns
enter
enter
cld
in
xor
add
out
and
and
call
sti
outsl
pushf
aam
sbb
cltd
push
ret
icebp
sbb
xchg
jno
fsub
sub
xor
xchg
fisubl
xchg
enter
loop
jo
or
icebp
inc
add
loop
adc
test
dec
sbb
inc
iret
inc
jno
arpl
adc
shr
jle
pop
mov
ficomps
inc
in
test
aas
js
xor
mov
data16
mov
sbb
repnz
loopne
std
dec
je
insl
jae
aam
lods
and
push
mov
cld
pop
mov
add
divb
fdivs
mov
fadd
mov
jne
dec
push
mov
clc
loopne
stc
xchg
int3
mov
cmp
rcr
out
push
mov
mov
push
js
nop
push
lods
xchg
inc
xchg
cltd
push
dec
std
movsb
push
in
mov
into
insb
push
xor
mov
fs
mov
nop
xor
shr
outsb
or
adc
add
fimuls
sbb
sbb
and
xchg
stc
lret
into
cmp
jo
sub
pop
in
mov
and
push
xchg
lcall
add
insl
push
pop
push
int3
or
bound
adc
pop
std
scas
aas
shll
outsl
dec
push
cmp
call
daa
mov
nop
push
test
stos
xlat
jb
pop
test
jne
fs
jne
shll
testl
mov
movsl
fnstcw
and
pop
fimuls
mov
lods
lds
out
inc
lahf
pop
dec
mov
xlat
gs
lcall
add
add
pop
in
and
or
cmp
or
out
mov
in
addl
dec
or
sahf
jbe
std
orl
xlat
pop
sbb
mov
mov
jae
ljmp
lcall
popa
mov
clc
imul
xchg
pusha
out
adc
cmp
flds
cmp
cmp
cmp
ja
mov
jne
inc
sbb
cmp
dec
clc
add
or
add
int3
add
mov
cmp
push
cmp
pop
push
fnstsw
outsb
imul
lods
sbb
push
mov
mov
popa
and
pusha
repnz
mov
cmp
dec
cmp
jae
mov
or
mov
jo
inc
xchg
sti
lea
pop
inc
inc
push
cmp
insl
test
mov
xchg
fld
xor
xor
mov
lea
div
or
cld
inc
dec
mov
xchg
xor
cmpsb
pop
std
aas
add
jle
xor
call
imul
mov
mov
mov
negl
popa
dec
aaa
cs
mov
or
pop
adc
mov
or
dec
and
ljmp
mov
popa
mov
pop
mov
cmpsl
fisubs
or
cli
test
add
mov
pop
sub
test
fdivrl
sbb
mov
les
jbe
xchg
jle
das
or
aad
pop
fisubl
push
jae
lcall
xlat
data16
or
dec
decl
call
insb
int3
mov
mov
mov
out
scas
and
daa
cltd
pop
cmpsl
mov
push
xchg
xchg
pop
cwtl
pop
fcmovne
in
inc
outsb
mov
call
and
pusha
push
push
dec
add
out
shll
sarl
mov
lret
fwait
cmp
lret
pop
inc
lods
add
dec
les
cmp
adc
aas
mov
sub
and
cmp
mov
or
cmpsl
imul
push
decb
iret
add
dec
jp
jne
aam
popf
push
insb
repz
sahf
in
in
sbb
adc
inc
jno
stos
sbb
xor
ja
iret
fcmovbe
sbbb
inc
jle
mov
pushf
xchg
js
fsubrl
mov
scas
push
popa
push
jns
and
popf
mov
fistpll
cmp
pop
outsl
push
cli
lahf
push
and
sub
mov
mov
les
pop
add
cmp
out
cmp
xorb
mov
sbb
lods
pop
pusha
sub
dec
pop
fcoms
aam
cmp
test
adc
fwait
mov
dec
xchg
jno
pop
add
int
fistpl
loope
aam
mov
mov
out
inc
pop
xor
inc
inc
hlt
xchg
nop
mov
dec
test
cltd
jae
in
sbb
rolb
add
mov
sub
or
pop
enter
or
cmp
jb
push
push
cmpsl
inc
jno
out
mov
mov
xor
push
ljmp
int
jne
in
aas
sbb
push
or
arpl
insb
loope
mov
sbb
inc
xlat
xchg
pusha
jmp
mov
test
and
popa
fwait
push
std
addr16
sbb
ja
pop
xchg
es
mov
aas
xchg
mov
gs
push
inc
popa
sbb
movsb
test
rcrl
dec
inc
xor
jnp
jle
mov
mov
jae
mov
imul
fimuls
aas
cli
stos
outsl
mov
fiadds
mov
mov
clc
popf
inc
pop
mov
sub
cli
insl
js
adc
sbb
mov
and
lcall
in
js
or
in
dec
vpunpcklqdq
sub
out
push
pop
xlat
stc
mov
adc
mov
push
cmp
repnz
xchg
flds
sub
imul
int3
add
push
xchg
dec
sub
push
loopne
adc
cli
shr
nop
dec
fwait
scas
xchg
loopne
flds
lcall
xchg
add
xchg
cmc
and
xor
pop
fbstp
call
add
or
xor
in
add
daa
lods
jmp
or
cwtd
jns
xchg
adc
mov
int
adc
sbb
enter
subb
dec
test
rcrb
lret
rolb
and
mov
outsl
fsts
cmp
call
mov
imul
mov
sbb
xchg
outsb
dec
mov
jae
or
mov
push
jecxz
dec
jecxz
shr
jns
adc
jmp
outsb
lahf
add
fadds
cltd
loopne
lret
sti
xor
adc
shl
dec
aaa
dec
mov
cmpb
mov
cmc
sbb
pop
scas
aas
stos
push
in
xchg
in
pop
mov
ljmp
adc
sbb
push
or
push
shlb
loop
sbb
sub
sbb
scas
inc
flds
mov
xchg
lods
inc
or
shlb
in
fstps
pop
in
outsb
jae
std
sbb
xor
sbb
cmpsb
adc
enter
outsb
push
addr16
jbe
cmp
cwtl
lea
push
push
sub
dec
add
mov
shlb
cmpsl
icebp
pop
xchg
pop
mov
jns
es
ds
mov
mov
dec
lahf
fwait
add
add
fdivrl
push
out
sub
sti
in
sub
mov
push
pop
pushf
aaa
add
aaa
dec
jns
mov
sbb
ja
jno
xchg
std
inc
cmp
fnstcw
int
ss
mov
lea
sti
imul
jo
movl
push
inc
inc
inc
aaa
pop
mov
pop
push
dec
sbbb
stc
mov
imul
call
or
test
je
call
mov
out
out
mov
pop
test
sub
inc
push
add
fstps
ret
data16
xor
loope
mov
mov
dec
cli
in
add
stos
push
cmp
mov
js
add
popf
inc
adc
lods
aam
pusha
cwtl
int3
nop
sti
stos
out
mov
jb
in
push
dec
xchg
xor
call
ret
dec
enter
xchg
mov
mov
rcl
sub
jmp
or
pop
pop
xor
dec
jo
inc
insl
imul
std
ja
je
nop
fwait
cmc
jle
cld
js
imul
mov
push
pop
mov
mov
jne
fstpt
clc
ja
sub
sbb
das
mov
xor
pop
pop
dec
and
fsubl
inc
aam
insl
add
lods
rcr
repz
pop
cmc
aaa
adc
jl
cwtl
scas
push
hlt
or
mov
std
daa
cmpsb
test
push
xor
jl
movsl
xchg
lea
iret
jg
cmp
xlat
and
sbb
jecxz
jecxz
cmp
iret
or
mov
aad
mov
jg
jmp
ljmp
jmp
iret
sub
jmp
call
out
inc
dec
xchg
mov
stos
lea
jae
push
cmp
mov
lcall
addb
mov
or
lock
cwtl
jbe
xlat
dec
xchg
outsb
mov
and
mov
xlat
xor
mov
cwtl
das
pop
cli
test
les
sahf
xchg
mov
gs
hlt
mov
push
dec
cld
sub
jne
sub
rcrb
push
mov
jecxz
std
fs
fbstp
push
add
lods
push
push
add
push
ret
mov
push
mov
pop
ret
xchg
imul
dec
in
mov
outsl
pop
push
sbb
mov
jg
clc
cmp
pop
and
jg
cwtl
std
xchg
pop
jo
mov
addb
mov
fisubrl
dec
pop
add
sahf
pop
cmp
mov
or
sbb
ljmp
jecxz
mov
fldl
repz
out
fldenv
sub
mov
test
int3
mov
movsb
out
cmp
gs
xchg
push
push
nop
test
call
jge
jmp
and
pop
lahf
push
xor
push
push
cmpsb
roll
lds
daa
enter
inc
shll
ljmp
jb
in
ja
cmp
and
jmp
pop
bound
fmuls
fisubl
xor
das
jmp
mov
fimull
pop
pcmpgtd
push
jno
inc
in
fisttpll
cmpsb
fwait
cwtl
test
andl
xor
imul
les
dec
sbb
jmp
cmpsl
test
add
ds
out
jp
data16
nop
jb
dec
into
rcll
mov
sbb
adc
inc
ficoml
push
dec
xorb
xchg
leave
mov
aas
sub
rcl
inc
fwait
ljmp
ret
push
jge
inc
mov
pop
push
mull
xlat
xchg
cmp
sahf
sbb
icebp
cs
dec
jae
aas
daa
dec
sub
into
stos
sbb
insl
xchg
out
or
movsb
lret
adc
push
add
mov
push
scas
adc
notb
jmp
movsb
call
pop
add
insl
cmp
fwait
movsl
xor
scas
dec
stos
or
push
pop
push
pushl
loope
lcall
push
dec
lret
aad
insl
adc
sub
dec
fdiv
sbb
adc
pop
xchg
sub
adc
pusha
ret
inc
das
test
push
ss
mov
sub
stc
mov
adc
mov
out
mov
xchg
scas
xchg
add
arpl
and
add
je
int
aam
jno
jbe
inc
xchg
ljmp
cld
add
add
xlat
xchg
iret
into
not
push
mov
add
mov
push
sub
sub
gs
jp
or
loop
mov
jns
rcrb
rclb
mov
stos
adc
push
jmp
hlt
cmc
jb
xchg
mov
sub
std
push
dec
pushl
ret
std
in
or
lods
sbb
movsl
ds
insb
arpl
hlt
pop
lret
push
pop
dec
rorb
sub
or
sub
dec
out
dec
sub
inc
loop
clc
push
push
jmp
jge
push
jbe
cltd
or
idiv
adc
popa
or
jg
out
rclb
inc
mov
pop
out
xchg
sub
cmpsb
in
mov
ss
and
pop
inc
mov
sbb
xor
outsl
jecxz
xchg
and
cmp
adc
sarb
dec
aad
push
sti
popa
cltd
bswap
mov
jmp
test
push
jnp
loopne
daa
jge
add
xor
sahf
sarb
ret
or
js
scas
dec
sub
push
pop
cld
loope
mov
insb
es
popf
mov
ja
sub
jb
testl
cmc
psubq
dec
les
fmul
mov
test
mov
cmc
pop
push
dec
push
jnp
mov
fst
fsubp
je
or
rcl
imul
xor
outsl
int
inc
lcall
nop
mov
repnz
mov
das
mov
out
fxch
push
adcb
mov
xor
mov
movsl
xchg
sub
mov
shrb
pusha
push
add
icebp
sub
sub
cltd
pop
xor
dec
pop
jge
dec
jmp
push
cmp
mov
jmp
dec
mov
mov
dec
negb
inc
jp
pusha
dec
rclb
pop
add
mov
cld
push
bound
jb
cs
pop
adcl
arpl
adc
lods
cmp
inc
test
rcll
push
outsb
jp
pop
loopne
imul
rcrl
cmpsl
push
inc
pop
sbb
shrb
mov
idivb
xchg
fs
ja
call
mov
and
push
push
mov
mov
adcb
shrl
and
mov
clc
cmpsb
jbe
mov
loop
add
ss
mov
js
xchg
mov
lods
iret
sarl
pop
adc
lcall
add
mov
lret
pop
out
in
jb
loopne
jg
push
sub
flds
xchg
in
jecxz
pushf
cmpsb
dec
xor
jns
fwait
repnz
jecxz
rorl
insb
jecxz
jp
adc
xor
mov
xor
shrb
and
xchg
jo
inc
inc
jmp
mov
daa
sub
ds
pop
outsl
cmp
mov
or
addr16
inc
das
sbb
ss
cmp
xchg
cmp
fucomp
out
mov
shrl
loop
repnz
test
out
sub
das
cmc
adc
inc
ret
xchg
pusha
sbb
pop
pop
jnp
push
fildl
xor
test
mov
arpl
enter
pop
test
sti
adc
ret
ret
jae
fimull
jl
adc
push
scas
movsl
sbb
repnz
sbb
pop
inc
aam
enter
cmpsl
inc
in
dec
int3
sbb
gs
loope
call
daa
sbb
int
and
inc
std
dec
lock
add
add
cli
add
data16
das
hlt
and
mov
and
lea
pop
sbb
mov
clc
jmp
gs
add
mov
lods
icebp
adc
push
out
dec
les
jl
jge
add
push
in
add
mov
sbb
fsub
pop
xchg
sub
sub
xor
loop
cmpsb
xchg
and
push
fildl
and
sbb
or
xor
lcall
pusha
xchg
mov
orb
rorb
xchg
inc
mov
das
bound
insl
fucom
adc
or
dec
fxch
insl
jbe
push
test
inc
add
fwait
mov
or
cmovo
lahf
addr16
in
aas
mov
mov
jb
push
repnz
push
lret
lods
mov
imul
stos
fnstenv
push
mov
aaa
aaa
rcr
mov
mov
fsts
sti
shlb
imull
mov
fnstcw
mov
xchg
mov
out
sub
aaa
mov
mov
inc
repnz
je
sub
cmp
fwait
enter
aaa
inc
and
jbe
xchg
rcll
xor
cmp
arpl
adc
popf
rcll
insb
and
xchg
fs
ds
out
sbb
add
mov
add
nop
cmp
insb
inc
dec
loope
push
push
iret
sbb
hlt
jno
cltd
pop
out
mov
sarl
mov
iret
sub
xchg
idivb
jbe
mov
roll
rep
mov
sahf
std
push
inc
lods
cltd
sub
cmpsl
mov
lret
fsubp
and
mov
loope
push
out
mov
arpl
in
pop
fmul
xchg
outsb
pop
push
je
sarb
and
cmp
mov
fwait
int
rcrl
add
pushf
test
hlt
movsl
movsb
fs
xchg
das
add
inc
push
adc
lods
push
mov
je
aas
cmp
and
clc
mov
xor
xor
cmp
jae
sbb
loop
addr16
addr16
and
inc
arpl
mov
mov
hlt
rol
push
add
in
inc
mov
enter
out
gs
dec
test
ret
rcl
adc
es
push
push
fimull
adc
ss
shl
pop
or
nop
ficomps
stos
leave
jg
loop
iret
imul
mov
push
jnp
push
jne
inc
or
fistpl
aas
cltd
mov
xchg
and
ljmp
test
add
jae
cmp
push
and
dec
mov
shr
cwtl
mov
xor
popf
fcomps
jno
push
fucomi
sbb
dec
scas
sahf
scas
adc
xor
fs
push
sbb
in
rclb
gs
jae
loopne
idivl
add
ret
sub
adc
and
rcrb
scas
mov
ja
mov
pusha
ret
stc
xchg
dec
ret
cwtl
js
cs
cltd
and
fnstsw
inc
xchg
sti
stc
not
sub
pusha
clc
mov
fs
inc
push
push
pop
pop
addr16
adc
inc
out
cmp
cmpl
inc
lcall
imul
sbb
pop
paddsw
fstps
pop
sarb
mov
sub
dec
inc
pop
add
fsubrl
out
jb
xchg
test
ja
and
xchg
ficoml
push
aaa
sbb
je
xor
imul
and
add
ljmp
dec
test
shlb
sahf
insb
mov
in
les
out
or
repnz
cmpsb
sarl
into
jno
xor
idiv
jl
aaa
fisubrl
fs
jno
std
adc
jne
mov
xlat
dec
xor
mov
movl
mov
or
hlt
mov
inc
sbb
cmc
mov
lods
data16
mov
jle
mov
cltd
mov
pop
les
inc
test
mov
inc
hlt
lea
fistps
roll
adc
jno
mov
lods
jp
sbb
ds
pop
push
pop
aaa
jmp
mov
aaa
je
mov
dec
pusha
mov
scas
test
dec
movsb
popf
je
dec
push
fwait
push
xchg
bound
shrb
and
xchg
nop
in
xor
push
sub
or
mov
cli
es
inc
mov
sarb
lea
lds
icebp
sub
insl
push
pop
mov
fistps
add
xchg
dec
xchg
pushf
jb
push
xor
mov
imul
sub
mov
fwait
roll
dec
add
pop
lahf
jno
pop
out
cmc
cmc
add
cmp
push
dec
jg
out
lock
inc
fwait
adc
xchg
dec
nop
jo
icebp
mov
ret
clc
add
popf
or
aaa
fstl
jecxz
ja
je
adc
jg
sub
rcr
aad
fisubl
jne
jb
into
xchg
cltd
cmp
jp
das
je
mov
into
sbb
dec
and
ss
arpl
or
xor
roll
mov
sub
push
mov
xor
jecxz
xchg
add
dec
xchg
in
ds
inc
pop
popf
jle
loope
dec
das
jecxz
roll
dec
les
push
add
shrb
mov
loopne
ds
imul
push
fiadds
xrelease
movsb
out
inc
mov
jp
iret
or
sbb
inc
out
sahf
lods
stc
sbbl
pop
push
stc
sbb
sbb
push
inc
loope
pop
lahf
mov
pop
fisubs
push
outsl
adc
mov
aaa
pop
dec
mov
inc
push
cli
inc
add
pop
mov
xchg
aaa
pop
into
andl
mov
shlb
jnp
jo
nop
loop
or
call
ljmp
add
iret
cmp
addr16
addr16
mov
xchg
pop
jecxz
xor
push
jle
ficoml
mov
ja
mov
dec
mov
jae
fs
or
cld
test
mov
fsubs
sahf
mov
mov
iret
loop
dec
add
shll
xchg
jae
xlat
cmp
mov
shr
and
in
testl
dec
in
dec
dec
xchg
sbb
add
xor
cmpsl
roll
and
add
ja
sbb
cwtl
cmp
loope
mov
jae
mov
pop
mov
xchg
add
cltd
into
dec
cmc
int3
and
jle
xorl
push
cmp
test
and
inc
aad
push
adc
mov
pop
xchg
jbe
les
add
mov
pop
sbb
jmp
pop
mov
adc
mov
inc
push
cmpsb
sub
scas
gs
xor
or
imul
and
cmp
lods
add
add
sub
xor
xor
pop
sarl
lods
test
and
sub
cmpsb
icebp
push
sbb
jmp
rcr
in
or
and
pop
aad
sbb
jmp
mov
sti
adc
push
out
pop
mov
adc
jno
sti
cmpl
mov
sub
inc
xlat
es
clc
inc
sbb
xchg
out
inc
aaa
jle
pop
out
int3
mov
cld
lcall
mov
fnstsw
xor
and
or
insb
fs
out
dec
cmp
jecxz
dec
mov
loopne
cmp
cltd
xor
shlb
jb
cmp
addr16
cmp
popf
imul
add
lock
rcll
and
push
je
dec
aad
sbbl
adc
adc
push
xchg
enter
cmp
mov
cmp
outsb
fidivrs
jae
lret
and
jg
shll
sub
pop
adc
and
mov
mov
or
scas
fldenv
in
aad
aas
aam
inc
mov
insb
stos
add
stos
xchg
imul
fndisi(8087
push
push
mov
mov
sarb
insb
lret
pop
sbb
shll
mov
inc
mov
xor
push
fcom
mov
js
sbb
jne
lock
lret
push
jg
mov
jne
test
add
test
xor
jp
xchg
xchg
xchg
mov
add
adcl
mov
pop
popa
dec
xor
cli
test
ret
mov
sub
hlt
inc
jge
pop
jp
push
xor
lods
sarb
fs
es
push
aad
clc
jno
mov
mov
mov
cmpl
insl
jl
imul
mov
mov
das
or
or
stc
sbb
pop
jg
xor
sbb
add
shl
cmp
sbb
xchg
mov
mov
adc
nop
int
out
daa
cld
cmp
and
fwait
jnp
mov
in
or
xor
lods
bound
imul
lods
xor
sar
mov
cmc
cmpsb
fs
mov
jae
and
daa
jno
roll
int3
adc
mov
inc
mov
mov
cli
push
out
lret
std
push
and
dec
dec
flds
adc
filds
mov
stos
push
xchg
in
stos
or
jne
push
hlt
or
loop
test
xchg
xlat
sub
push
fadds
dec
repz
mov
xor
dec
push
xchg
repz
bound
lock
inc
arpl
js
loopne
pop
adc
mov
ja
jae
lea
lret
lcall
lret
clc
jb
dec
push
or
jg
pop
jge
xchg
xchg
xchg
push
pop
lods
mov
adc
jae
cltd
mov
add
stos
push
push
out
adc
rcll
repnz
mov
xchg
dec
pushf
rolb
lea
pusha
xor
mov
jbe
enter
in
xchg
ljmp
aaa
mov
roll
or
arpl
adc
jb
cmp
mov
mov
jge
in
mov
and
xor
or
and
cli
test
mov
ds
lds
fisubs
stc
jge
in
mulb
adc
sub
mov
mov
pop
out
xchg
sbbb
int
repnz
xor
push
repz
leave
push
das
mov
or
cli
and
sub
inc
sub
je
rcrl
stc
fsubr
adc
pushf
arpl
adc
mov
cmovnp
in
push
rcl
enter
fisubl
sub
push
or
int
sbb
lret
insl
dec
mov
stos
insb
inc
add
repnz
mov
push
mov
dec
push
shll
xor
xor
and
aas
pop
add
add
loope
xchg
sbb
mov
pop
stos
xchg
out
gs
push
adc
data16
cmp
leave
sahf
push
adc
jmp
push
push
push
out
add
jo
repz
mov
cmpsl
cmpsb
mov
push
fs
ss
leave
mov
gs
sbb
aas
fnstcw
movsb
and
push
or
repz
out
mov
es
in
repnz
cmp
xchg
mov
mov
ror
jp
lods
push
or
jne
addr16
daa
or
xchg
pusha
pop
fs
shrl
out
popf
pop
fs
dec
clc
jbe
mov
imul
inc
gs
ficompl
inc
pop
xchg
or
scas
jp
out
mov
jne
cltd
xlat
ja
mov
mov
ljmp
mov
mov
bound
xchg
cs
insb
push
add
lcall
and
cmpsl
inc
cli
insb
sub
movsb
inc
aam
adc
int
and
in
test
mov
mov
aas
addb
test
fsubrp
cmp
shll
and
adc
add
xchg
aaa
sbb
sub
pop
xchg
add
jne
dec
or
push
stos
mov
fldt
jg
xor
pop
jno
mov
pop
les
jne
push
nop
mov
in
push
aaa
pop
jl
stc
ret
nop
xor
fwait
jmp
int
dec
and
cmpsl
push
and
jp
push
rsqrtps
pop
inc
jg
pop
pushl
mov
pop
xor
enter
jnp
push
ret
push
mov
fildl
pusha
mov
xchg
jmp
scas
add
fsubr
mov
mov
dec
ret
test
clc
add
sub
lock
push
lods
int
mov
pop
push
jb
xor
popf
insl
push
shrl
push
addr16
or
and
scas
shll
pop
mov
mov
daa
insl
push
and
lods
insb
loop
xchg
or
sbb
mov
fildl
test
or
add
aaa
sbb
sub
or
sub
mov
mov
das
cmp
mov
in
xorl
in
mov
rorl
outsb
mov
xchg
test
filds
xchg
lods
add
cmp
outsl
xor
xchg
cmpl
xchg
dec
cmp
dec
movsl
mov
in
xor
fidivrl
jl
pop
imul
sub
fldl
sarl
cs
sbb
mov
shr
jo
outsl
leave
lds
fs
inc
mov
pop
lea
mov
sar
cmpsb
pusha
addb
hlt
ljmp
sahf
adc
inc
enter
xchg
ret
pop
mov
shlb
push
mov
sbb
jae
jne
mov
aad
jne
push
mov
lock
stos
ds
mov
loopne
mov
push
mov
adc
lock
jmp
sbb
je
ljmp
and
test
add
call
mov
cmp
loop
and
das
push
sub
stc
insl
xchg
das
dec
orl
pop
sub
and
sub
mov
lret
inc
cmpsl
adcl
sar
jns
test
jne
inc
push
imul
fcomp
in
pop
jb
xor
push
pop
das
inc
scas
push
popf
sub
out
mov
sbb
cmpsl
outsl
out
outsl
test
test
iret
or
popaw
loope
test
mov
mov
clc
cmc
add
shll
aam
push
mov
sbb
es
xchg
cs
jg
adc
push
movsl
insl
push
inc
dec
mov
mov
mov
jecxz
cmp
add
orl
jo
sub
ret
pop
dec
and
mov
clc
push
add
mov
inc
div
hlt
sub
in
pop
mov
cmp
xchg
pop
pop
add
call
imul
sahf
in
ret
cmp
pusha
sub
add
in
inc
pop
xor
xchg
xchg
rcll
jb
jne
idivb
mov
push
mov
add
push
shlb
imul
jo
push
jae
mov
cmp
sbb
fs
dec
dec
dec
and
mov
mov
jmp
xchg
inc
sbb
mov
hlt
divl
ja
ret
aaa
dec
sbb
fwait
add
push
add
loope
repz
adc
xlat
xor
js
dec
and
jmp
push
pop
rcll
cmp
cmpsl
flds
mov
lods
in
jge
xor
mov
movsl
addb
hlt
imul
xchg
pop
mov
aad
mov
test
cld
test
cmp
xor
je
hlt
mov
call
stc
jbe
add
xchg
pop
sub
jnp
shrl
es
pop
cmpb
mov
and
icebp
xor
rcrb
sbbb
data16
mov
icebp
push
mov
jecxz
jo
test
xor
lods
push
data16
cmp
imul
mull
hlt
jecxz
inc
adc
idivl
mov
sahf
cmp
cmpsl
mov
dec
cmp
sbb
test
and
adc
ja
sahf
in
movsl
repz
fbstp
nop
insl
rcrb
leave
addb
push
jle
xor
jecxz
push
jb
mov
stc
movsl
cmp
addr16
sbb
inc
xor
ss
xor
std
sub
cmp
cs
jae
or
in
gs
xchg
pop
xlat
xor
stos
pop
or
lds
or
push
adc
mov
adc
stc
and
mov
jecxz
mov
popf
and
adc
movb
sahf
mov
aam
clc
xor
daa
aam
mov
sub
rcrb
mov
stc
add
xchg
pop
cmp
cmpsb
jp
or
ret
xchg
js
das
pop
mov
fcomps
notb
mov
subb
addr16
fstps
lcall
std
jg
push
sbb
aad
xchg
loope
and
pop
xchg
ret
mov
cmc
jp
nop
pushf
shll
jp
stos
jbe
sbb
jne
mov
loopne
dec
xor
roll
xchg
stos
mov
push
pusha
bt
sub
pop
mov
sbb
sahf
out
test
xchg
pop
int
lods
mov
mov
in
mov
jg
push
lods
stos
push
sbb
or
dec
test
int3
shr
xor
push
cld
sbb
leave
add
in
fsts
jae
adc
pushf
mov
fidivrl
lcall
daa
call
test
mov
lock
out
fsubl
add
call
enter
cmpb
mov
loop
int
mov
lret
mov
js
adc
mov
fcmovnbe
cmp
test
push
push
lret
insb
ret
fmull
std
xchg
cmp
rorl
push
aam
push
add
sbb
ljmp
sbb
push
std
mov
or
sbb
mov
ljmp
push
sub
addr16
pop
in
or
lret
adc
jmp
addr16
dec
xchg
sub
fadd
lahf
and
mov
lods
jb
jg
mov
xchg
nop
sub
mov
inc
or
or
mov
sub
cmp
add
push
lcall
jmp
cmp
jae
xorl
adc
arpl
mov
jno
dec
shlb
or
dec
inc
lock
out
jecxz
add
xorl
and
fimuls
mov
mov
decb
xchg
sbb
ss
adc
dec
mov
pushf
mov
cmp
pop
mov
mov
mov
jl
test
idivl
add
mov
pop
les
adc
mov
repz
xchg
cmpsl
adc
dec
jge
mov
inc
mov
mov
es
push
and
in
ljmp
dec
lock
insl
lods
scas
xchg
sbb
xor
cli
movb
sahf
dec
mov
sub
and
mov
les
jns
push
not
jge
fwait
xor
cmp
push
jae
xchg
push
sub
dec
or
pop
jge
mov
stos
push
pop
mov
movsb
imul
push
dec
icebp
pusha
lahf
and
je
mov
out
and
dec
ja
pop
sbb
mov
pop
ljmp
aas
push
ret
sub
mov
je
jge
mov
pop
push
daa
int3
in
jb
int3
cmpb
mov
or
aaa
mov
scas
sub
test
orb
fildll
inc
and
mov
inc
lods
leave
loopne
test
aaa
xchg
cmp
outsb
loope
mov
aam
push
lea
inc
icebp
cmpsl
sbb
jmp
outsl
ret
add
mov
es
sbb
les
jbe
lahf
mov
adc
addl
mov
mov
push
pop
cmpsb
cmp
jl
sub
lcall
scas
mov
divl
xchg
aam
int3
push
mov
sub
mov
mov
push
xchg
scas
jg
test
out
ss
pop
and
outsb
xchg
repz
or
out
jmp
inc
push
cmp
loop
xor
pop
mov
push
or
xchg
jle
jne
and
fsubs
imul
shll
pop
in
jns
sti
loopne
cli
jo
leave
mov
ds
test
inc
pop
imul
std
and
clc
negb
jbe
fdivr
imul
inc
insb
inc
sbb
stos
lret
das
les
out
xchg
cmpsb
mov
jns
push
pop
cmp
das
xchg
add
outsl
icebp
out
mov
fdivl
jle
mov
add
cmc
xchg
pop
cmpsb
outsl
movsl
cmc
int
mov
clc
mov
loopne
lcall
pop
jle
pop
add
nop
fldt
jbe
mov
pop
or
fsubs
fs
insb
cmp
jp
add
fcmovnu
sbb
mov
sarl
mov
out
shlb
inc
jg
sub
inc
es
push
movsl
cmp
mov
push
pop
or
mov
std
fidivrl
sub
jo
fdiv
mov
dec
ret
repnz
dec
xor
mov
ja
cmp
rol
cmp
xchg
stc
pop
or
add
mov
mov
mov
popf
mov
adc
add
filds
outsb
mov
cmpsl
inc
lret
pop
mov
sahf
jl
jns
addr16
cltd
cmp
jae
cmp
lahf
mov
pusha
jbe
int
fwait
inc
fwait
repz
lds
js
jg
adc
inc
js
xchg
mov
cmp
sub
push
andnps
jae
cmc
pop
pop
xor
lret
cmpsl
jg
cmp
xchg
sub
sub
test
dec
push
jae
or
pop
jmp
mov
jb
subl
mov
xchg
mov
stc
mov
call
mov
loop
xchg
scas
enter
mov
lahf
std
mov
notl
incb
add
mov
mov
xor
jno
pop
xchg
insl
jge
xor
or
adc
cmp
push
push
test
cmp
cmp
dec
in
leave
jmp
imul
dec
jne
test
call
jo
push
dec
and
and
stos
aas
sbb
rorb
adc
mov
in
sub
dec
mov
cmp
xchg
fnstenv
mov
or
jne
mov
fwait
nop
jns
inc
pop
sarl
rorl
add
xor
cmp
and
and
sbb
sub
loopne
jle
pop
repnz
fwait
xchg
out
dec
mov
in
jmp
xor
les
pusha
sub
sbbb
pop
mov
sub
jecxz
movsl
mov
xchg
mov
cwtl
in
push
inc
lock
and
sbb
out
das
lret
scas
loope
lahf
loop
fmull
or
arpl
xor
jecxz
out
mov
icebp
mov
adc
or
aaa
inc
xchg
push
shr
mov
mov
cmp
push
ljmp
testl
dec
mov
movb
cltd
sub
pop
das
xchg
in
sub
arpl
cmpb
lahf
test
clc
inc
scas
sahf
lret
pop
fcoml
xchg
inc
outsl
mov
adc
xchg
or
or
mov
fistpl
ret
fcomps
addr16
dec
into
int3
or
mov
loope
pop
or
arpl
pushf
out
mov
stc
and
aas
lret
mov
out
cld
rcr
leave
fwait
mov
out
dec
nop
pop
stos
and
push
push
subb
shll
orl
xchg
cmp
mov
lock
loop
add
push
lea
pop
xor
cmpsb
icebp
push
loop
sub
lods
imul
cmp
hlt
lea
fdivrs
pop
jns
mov
test
xchg
addl
pop
push
push
scas
dec
dec
sub
and
cmp
incb
xchg
pop
and
xchg
sbb
leave
jns
mov
mov
jg
ret
or
sub
mov
sub
insl
cmp
cmovl
xchg
mov
aad
dec
xor
adc
addr16
sarl
xchg
sbb
xchg
jae
jg
cltd
outsl
xchg
div
mov
push
decl
jo
adc
jbe
inc
scas
adc
mov
pop
jno
cmp
inc
push
fidivrs
jbe
icebp
xor
daa
cmp
hlt
jle
insb
mov
popf
loopne
pop
push
xor
out
out
icebp
dec
cs
ljmp
lock
mov
arpl
js
mov
pop
cli
xchg
add
hlt
test
cmpsb
aam
pop
orb
push
and
adc
push
pushf
push
addb
or
icebp
sti
push
sub
rorb
push
cmp
inc
adc
jl
mov
scas
adc
ss
push
dec
imul
jle
push
fcoms
ror
mov
out
push
mov
mov
pop
xchg
add
push
mov
pop
xor
adc
test
test
and
mov
int
dec
lcall
fsub
fsts
es
icebp
xlat
and
lret
and
ret
ja
daa
loop
in
jg
out
fisubrl
push
adc
push
push
pshufw
lahf
mov
cli
xlat
ja
xor
loope
mov
jae
cwtl
dec
test
ja
pop
sub
push
sbb
mov
xchg
fistpll
fisttpll
mov
jmp
xchg
popa
or
push
je
shrb
mov
cwtl
push
add
mov
pop
inc
sbb
inc
dec
sbb
pop
sub
and
movsb
xlat
repz
sahf
push
mov
mov
adc
ja
inc
iret
pop
in
push
movsb
pop
popa
test
dec
push
nop
adcl
mov
ds
test
bound
pusha
pop
mov
or
stc
dec
mov
push
insb
imul
push
dec
pop
in
lret
pushf
sub
stos
pop
pop
inc
push
lds
push
push
cmpsl
sub
cmp
xor
ror
xor
adc
lahf
xchg
xchg
es
inc
pop
mov
test
sti
lock
add
dec
add
and
mov
pop
int
inc
push
jns
in
shlb
cmp
sub
loopne
push
call
pop
adc
push
ss
iret
add
cmp
sub
mov
push
outsb
shrl
push
jne
je
popf
xchg
dec
sub
stos
int
hlt
add
fwait
push
in
in
xlat
in
sbb
ret
negb
out
and
jno
mov
xchg
xchg
sub
cmp
test
lds
test
mov
jmp
loopne
inc
xor
sub
xchg
xor
and
dec
mov
mov
jge
into
jp
mov
sbb
mov
mov
jns
push
sub
dec
push
lcall
add
jno
jp
stos
pop
dec
or
popa
js
sysret
lock
addr16
or
mov
mov
pop
inc
dec
imul
xor
mov
int3
rcrl
mov
dec
cltd
add
sbb
dec
lret
ds
fisttps
cmpl
pop
popa
les
call
xor
pop
push
fstpl
push
insb
pop
cs
loop
mov
sbb
push
repz
test
xor
lret
sbbl
cmp
or
inc
mov
scas
out
pop
sbb
lea
test
out
aam
inc
push
pusha
int3
add
dec
push
sub
jl
mov
in
cmpl
int3
imul
xchg
lods
pusha
and
rclb
loop
sahf
push
jecxz
push
sub
cmpsb
mov
sahf
xor
jns
je
push
aad
mov
push
mov
pop
enter
gs
filds
fmul
mov
into
jle
push
gs
lods
mov
push
dec
sbb
or
scas
xchg
xchg
and
xor
xchg
icebp
lret
repz
movsb
aas
clc
sbb
jecxz
mov
mov
test
decl
sbb
or
adc
sub
mov
mov
iret
dec
arpl
test
test
repz
shrb
push
repz
mov
mov
lock
mov
sbb
cmpsb
ss
or
sbb
adc
inc
call
or
test
mov
add
mov
das
cli
cmpsl
ret
fcompl
loopne
inc
cltd
mov
xchg
jl
out
inc
mov
out
mov
jmp
cwtl
loopne
xor
lock
xchg
rcll
lret
jno
xchg
test
lods
insb
jge
dec
into
popf
xchg
adc
lret
testl
push
neg
insb
fsubl
add
pop
sbb
leave
js
rorb
lock
scas
pop
ret
dec
xchg
xor
std
shl
sbb
cld
shlb
pop
ret
xchg
int
xor
xor
popa
or
or
outsb
jne
mov
push
std
jnp
int3
ja
icebp
cmpsb
fisubl
xchg
or
add
mov
dec
scas
sti
loope
clc
fiadds
push
test
je
pop
and
popa
jg,pt
adc
leave
pop
sbb
dec
xor
push
js
nop
lret
lock
mov
or
rolb
mov
dec
arpl
cmpsb
outsl
fdivs
mov
jb
fcoml
dec
repnz
js
or
les
cli
gs
or
ja
js
fst
inc
jns
fucomip
int3
jnp
insb
loope
push
divl
cmc
xor
mov
or
stos
ret
cmp
add
pop
fdivs
push
das
in
rcll
pop
mov
nop
mov
pop
js
lock
out
sbb
popw
ds
add
xor
enter
imul
in
or
movsl
scas
fldt
mov
ret
adcl
jg
jmp
and
add
out
testb
dec
inc
sahf
mov
jae
and
mov
inc
lret
mov
push
push
icebp
jno
out
push
dec
shlb
xlat
call
and
jno
mov
cmp
or
lcall
scas
dec
pop
xchg
push
dec
and
inc
ret
mov
inc
xchg
or
aas
pop
sub
sbb
into
adc
or
rcrl
mov
stc
pop
scas
and
in
jp
fisubs
cmpsb
xor
das
fwait
mov
pop
dec
push
lds
lret
lods
jg
xchg
les
mov
jge
repnz
and
flds
jp
push
sub
jns
aaa
sbb
sub
mov
adc
jmp
xorl
in
ret
and
adc
cmpsl
jbe
jne
or
cli
push
ffreep
mov
jg
dec
ljmp
mov
dec
fdivs
mov
call
jne
pop
es
pop
jno
fldcw
mov
aad
aam
xchg
mov
popa
cmp
and
adc
lret
jg
imul
lret
lret
sbb
popa
push
cld
jb
and
dec
or
sub
stc
jg
xchg
pop
xor
lcall
call
movq
test
pusha
inc
lcall
test
xor
add
pop
stos
xor
add
sbb
cwtl
out
xor
pop
mov
das
fbld
mov
mov
jno
mov
adc
jmp
jecxz
lahf
mov
push
cmc
push
push
mov
jmp
mov
test
xor
sbb
mov
fsubl
rorb
addl
lcall
lret
fadds
push
mov
mov
adc
adc
test
push
jg
out
add
test
xchg
or
mov
jb
daa
jae
lcall
or
mov
pop
push
pop
xor
shrb
adc
mov
sub
mov
popa
aam
or
hlt
clc
imul
cmp
imul
add
lret
in
dec
sbb
sahf
inc
test
mov
in
or
and
jb
add
in
mov
dec
mov
push
stos
pop
dec
in
rorb
addr16
data16
cmp
inc
ss
push
std
xor
push
cmp
mov
data16
add
xchg
push
movsb
lret
cltd
cmp
pop
xor
rcr
repnz
add
in
call
cmp
mov
and
xor
nop
mov
or
mov
dec
dec
mov
sub
stos
xchg
push
xchg
in
push
sbb
int
xor
pop
ss
xor
mov
stos
push
lahf
js
gs
lahf
mov
push
adcl
pop
lods
xor
out
adc
ret
jo
sub
xchg
in
loope
dec
hlt
inc
scas
or
jne
xchg
ds
adc
shll
stc
dec
xchg
mov
mov
sub
pushw
cli
sahf
sub
mov
mov
pop
dec
in
into
insb
xor
ret
pop
adc
or
ss
cwtl
sub
adc
repnz
mov
cmc
pop
push
jge
jecxz
ljmp
add
add
dec
bound
outsl
mov
cld
push
fistpll
stos
inc
mov
jno
add
into
adc
mov
cld
in
push
fstpl
mov
lds
scas
jb
mov
fidivrl
aam
or
adc
cs
mov
outsb
insl
mov
and
mov
cmpsb
sti
push
ficoml
jne
icebp
aas
mov
xchg
out
add
inc
cld
mov
stos
push
add
nop
sbb
test
mov
add
xchg
call
cmc
in
andb
addr16
jge
or
jb
aaa
adc
shrl
inc
push
jo
scas
mov
rolb
ret
hlt
cmp
orl
add
aas
pop
and
nop
ficomps
jp
int
adc
fwait
cmp
addb
leave
out
or
jne
dec
repnz
scas
fwait
ss
cmpb
icebp
mov
xchg
les
pop
imul
stc
ss
testl
xchg
pop
inc
inc
fmul
push
dec
aad
push
inc
push
xor
cmp
xchg
add
cltd
push
cld
fisttpl
sbb
jnp
loop
inc
push
pop
adc
push
popf
push
in
lcall
push
dec
jns
jb
outsb
mov
nop
mov
stc
arpl
popf
scas
push
lahf
jo
jns
mov
sub
fstpt
insl
cmp
inc
imul
ret
cmp
or
lea
pop
hlt
adc
leave
orl
push
mov
xorb
lods
test
jb
fisubl
push
jbe
mov
fidivs
inc
inc
xchg
cmpb
jl
mov
xor
rorl
sbb
inc
fstps
lcall
jno
mov
fwait
scas
mov
pop
dec
push
mov
data16
push
jg
inc
push
rclb
lret
adc
and
std
and
and
sahf
sub
xor
cwtl
in
cld
cltd
cwtl
mov
lods
int3
sbb
xchg
sub
mov
mov
insl
xchg
jmp
push
xchg
push
ja
hlt
adc
cmpl
loop
fistpl
push
pop
pop
push
mov
pop
sbbl
add
repnz
push
xor
xor
mov
jmp
es
mov
add
mov
stc
xchg
ss
incl
and
mov
xchg
or
daa
jp
sbb
jmp
pop
dec
outsl
sbb
or
dec
mov
xchg
mov
int3
out
cmp
adc
and
adc
bound
int
mov
lahf
pop
xlat
pop
mov
fimuls
mov
and
insl
push
mov
push
sub
lret
sbb
test
paddw
adc
cmpsb
mov
mov
lods
lods
push
es
and
sub
test
ss
mov
leave
mov
add
nop
jle
out
test
jp
jae
sub
mov
add
or
fldt
and
xor
cmp
mov
lcall
pop
out
test
jae
stc
loopne
es
inc
xchg
xchg
xchg
aad
mov
ljmp
movsl
mov
loopne
out
sbb
stos
enter
and
mov
push
pop
aad
js
js
jo
jno
jae
mov
mov
jl
inc
mov
enter
bound
aaa
pop
mov
lret
daa
cmc
xor
loop
xchg
push
or
xor
call
das
inc
jp
lea
loope
mov
stos
push
pusha
popa
subl
adc
jo
bound
repnz
add
xlat
xchg
add
sarb
push
movsl
rol
mov
scas
jg
cmp
jl
mov
test
insl
jae
cmpsb
shrb
or
shlb
movsl
nop
push
in
sarb
sub
mov
sbb
and
inc
icebp
ja
pop
inc
mov
dec
sub
xchg
insl
testl
imul
inc
popa
cmp
xchg
scas
mov
insb
or
into
jmp
sbb
ss
ret
ljmp
fidivrs
clc
xor
push
loopne
xor
dec
cmpsb
adc
push
inc
mov
insl
xor
pop
dec
adcb
test
push
jns
jmp
cwtl
sbb
aas
scas
push
sbb
ja
inc
add
cmp
cld
cld
mov
clc
bound
push
cmpsl
sub
orl
mov
lock
cmpsb
bound
rolb
mov
out
shlb
or
loop
push
push
sub
pop
xor
loopne,pn
dec
cld
ret
test
mov
xchg
sti
js
xchg
lods
xor
inc
mov
pop
sarl
cltd
push
mov
rcll
xor
stos
cmp
mov
roll
push
arpl
nop
and
out
insl
and
or
clc
cs
pop
fnstenv
cmpsb
jecxz,pt
movsb
push
mov
incb
fisubrs
jmp
scas
int
cmpsb
push
dec
iret
scas
fsubs
dec
pop
add
xor
fstpl
cmp
outsl
mov
test
jo
jno
sbb
cld
movsb
inc
push
xor
mov
mov
jo
test
adc
push
pusha
and
pop
int
or
cli
mov
shll
out
addr16
cmp
dec
in
repz
xchg
insl
inc
pushf
cmp
enter
ret
jle
push
push
inc
test
std
stos
cmp
jnp
jb
adc
dec
or
cmp
repz
cmp
sub
add
cmp
fwait
std
jg
jns
enter
iret
sub
rcl
add
stc
push
aam
xor
out
leave
jne
xchg
xor
xchg
leave
hlt
iret
dec
cmp
jns
and
outsb
mov
ret
aam
ficoms
out
adc
cmp
lods
xchg
lcall
pop
inc
inc
js
sub
insb
dec
adc
cwtl
popf
and
push
aas
andl
cld
cld
cmpb
std
jl
push
and
fdivrl
mov
fstp
adc
jle
sbb
jns
pop
int
cmpsb
rcl
shll
xchg
scas
andl
ret
aaa
inc
repnz
test
jmp
and
outsb
cltd
arpl
rorl
mov
dec
aam
lock
nop
add
add
sbb
pop
mov
xchg
push
xor
push
leave
int
lcall
nop
rclb
pop
fwait
mov
sub
stos
icebp
mov
repz
repnz
lds
mov
mov
sbb
lret
sarl
decb
loop
and
sahf
std
dec
or
and
push
enter
adc
add
pop
imul
ss
data16
bound
lahf
mov
out
das
add
daa
das
inc
insl
push
leave
fnsave
mov
xchg
nopl
cli
mov
mov
inc
push
pop
fisubl
mov
lea
mov
fstpt
sti
out
mov
xor
test
sub
outsl
aaa
dec
in
sbb
mov
les
adc
sub
pop
pop
call
aas
push
sbb
rcll
jge
or
fs
xchg
sahf
fists
pop
dec
dec
push
dec
aaa
rcrl
mov
nop
imul
cmp
lahf
jno
test
gs
cmp
inc
jbe
dec
fs
leave
and
pushf
mov
jno
mov
in
leave
andb
cmc
in
fwait
mov
cwtl
arpl
mov
xchg
cmp
mov
push
xchg
mov
mov
leave
icebp
fbld
mov
adc
lcall
dec
add
xlat
pusha
stc
js
sub
jmp
jo
test
ja
mov
jbe
inc
loop,pn
jmp
aad
ds
mov
and
sbb
cmp
cwtl
xchg
aaa
xor
fcmovnbe
bound
jns
sub
xchg
sti
fnstenv
sub
push
cmp
rolb
popf
jl
shld
cmp
add
test
jmp
xor
dec
sub
jnp
jnp
inc
dec
int3
sbb
es
subb
imul
mov
cs
insb
jnp
cmpb
addr16
insl
rcrl
nop
jl
decb
std
add
data16
in
mov
sbb
test
xchg
iret
inc
loop
js
mov
insb
enter
addb
pusha
push
push
imulb
push
or
lock
or
or
push
xor
adc
addr16
subb
fwait
daa
std
inc
cwtl
outsb
cld
out
aas
fs
leave
enter
ret
rcrl
mov
cs
push
imul
and
stos
or
rcrb
jecxz
cwtl
push
inc
mov
sahf
mov
aas
cmp
dec
or
flds
call
dec
stc
mov
jp
xor
cmp
xchg
xchg
xor
repz
cmp
leave
or
lahf
cmpl
add
sarl
stc
lahf
mov
dec
loopne
sbb
pop
mov
jmp
cmpsl
fisttps
jb
rcl
pop
movsl
in
mov
outsb
daa
lock
icebp
fcmovu
push
subb
cmc
mov
or
mov
mov
push
paddusw
pavgb
pop
mov
popa
insb
add
sub
push
mov
pop
mov
dec
into
frstor
mov
icebp
jno
push
in
fnstenv
js
scas
cmp
nop
sarl
inc
sub
ja
fsubs
int3
repnz
stos
dec
enter
shll
dec
fmuls
test
outsl
cmp
mov
jmp
jnp
shll
and
fcompl
pop
aam
mulb
mov
add
pop
gs
lods
sbb
pop
cmpsl
lcall
add
shll
fs
adc
inc
dec
and
sbb
iret
ffree
pop
and
incl
or
pusha
mov
lret
adc
add
dec
popa
scas
pusha
xchg
mov
daa
mov
in
mov
test
out
and
outsl
xor
js
mov
xor
pop
xorl
es
lahf
sbb
cmp
es
fsubl
add
popf
data16
aam
pop
jnp
mov
cmp
es
mov
sub
add
pop
insb
mov
aas
cmpl
push
mov
inc
cli
mov
sub
leave
pop
mov
sbb
dec
mov
push
into
out
stos
es
adc
in
mov
sbb
mov
dec
cmp
out
js
cltd
push
rorb
filds
mov
xchg
mov
cwtl
adc
fwait
arpl
cmc
incb
mov
push
mov
jle
mov
pusha
mov
add
mov
jmp
or
adc
nop
dec
dec
loopne
xchg
lahf
xchg
mov
pop
add
mov
lret
jae
movl
cmp
xchg
add
jecxz
mov
call
sub
lret
scas
jp
jne
push
jo
fcmovnbe
aam
mov
dec
mov
jns
aad
iret
inc
or
mov
push
pop
lea
insb
fstl
fwait
nop
fdivrs
mov
jl
jg
aad
lock
push
shl
pop
cmpsw
pushf
xorl
adc
in
cmp
pop
out
sbb
xchg
push
aad
andl
push
sti
jge
mov
addb
mov
inc
shr
nop
xlat
pop
cmpsl
in
fisubrs
shll
cmpsl
or
add
push
jge
test
sar
xor
pop
and
or
scas
xor
mov
das
mov
push
pop
imul
mov
fisttps
jns
mov
adc
shlb
or
inc
push
fwait
mov
push
mov
loopne
cwtl
rolb
das
insb
in
mov
rcrb
loopne
ficompl
add
cmpsl
out
dec
out
jmp
insb
sub
leave
xor
adc
fs
pop
push
cmp
in
imul
lock
mov
test
mov
jge
mov
mov
jbe
xchg
jno
sub
scas
negb
stos
mov
les
iret
and
fadd
scas
aam
sub
ljmp
inc
and
ss
push
inc
or
add
mov
mov
mov
int3
repz
pop
sub
jmp
add
popf
out
insb
out
or
sub
loop
clc
inc
xchg
jle
add
or
aad
mov
outsl
in
shll
sbb
inc
add
test
je
inc
cmp
aad
pusha
je
and
arpl
dec
in
mov
mov
clc
in
scas
sub
test
call
xor
iret
aaa
jne
xchg
iret
push
jecxz
dec
shrb
pop
push
jle
pop
fld1
sbbb
cld
xchg
aas
push
dec
out
out
lahf
pop
cmp
mov
test
loopne
xor
sti
jge
pop
ret
and
sti
dec
jns
cmp
js
cltd
lcall
pushf
pop
rcll
push
imul
scas
fnstcw
xlat
lods
outsb
sub
pop
std
nop
imul
mov
out
jns
jle
or
call
repnz
cmp
inc
mov
pop
adc
out
cld
mov
popf
call
or
ljmp
shll
mov
mov
add
data16
in
jnp
pop
add
test
in
lea
ja
push
add
mov
dec
ret
negl
adc
outsb
mov
stc
cmpsb
jp
int3
and
lods
cmpsb
pusha
sub
arpl
lea
xchg
jb
test
sbb
rcll
inc
mov
cmpsl
push
lahf
adc
mov
mov
stos
andb
push
cmp
adc
pop
imul
sub
fdivrl
cmpl
pop
iret
adc
clc
cmp
pop
xlat
fdivrp
loop
les
mov
aaa
pusha
pop
call
mov
fists
mov
negl
fbstp
mov
or
jb
sbb
sub
xchg
xor
dec
add
cmp
fstps
into
cmp
mov
jp
jae
push
sub
cli
jle
stc
into
test
or
xchg
test
cli
jo
jmp
adc
push
dec
adc
mov
or
adc
cmp
call
test
dec
add
inc
shrb
imul
imul
dec
cmp
adc
xor
rorb
mov
mov
xchg
adc
jecxz
scas
popf
out
cli
je
add
push
imul
testl
test
or
jge
aad
lods
shll
xor
out
and
in
sub
inc
xchg
das
cmp
mov
shlb
out
or
push
scas
sub
push
xor
xor
mov
in
jno
dec
cltd
stc
push
dec
js
cmc
jp
and
push
add
xchg
rorb
or
in
jo
sbb
loop
int3
xchg
clc
js
ret
push
in
jp
xchg
call
cmc
dec
sub
frstor
jne
xchg
int3
inc
lods
jb
sub
push
jle
fimuls
dec
lock
and
popa
pop
shl
rcrl
ljmp
inc
push
sbbl
out
adcl
inc
add
cli
pop
mul
imul
ret
xchg
cli
ss
dec
cmpsl
sbb
inc
ficompl
in
add
or
imul
movsl
xor
cli
mov
je
xorl
inc
das
sarb
pop
jo
mov
aad
dec
xchg
xor
xor
dec
or
test
xor
dec
mov
push
jne
jg
mov
cmp
fisubs
lret
lods
xchg
xchg
aaa
mov
je
stc
bound
adc
fnstcw
fildl
dec
sub
lods
fsts
pop
mov
loopne
sub
and
add
lods
stos
int
adc
fsubs
lret
fdivrs
inc
pop
rcrb
dec
sti
mov
adc
jns
jo
push
out
or
xchg
outsl
dec
in
arpl
mov
push
call
mov
adc
cmp
leave
dec
cli
hlt
sub
push
std
push
push
or
aam
aad
les
jl
xchg
xor
jne
adc
jg
pushf
rdpmc
mov
dec
popf
push
fmulp
xor
je
insb
xlat
fdiv
push
push
loopne
jbe
push
in
pop
or
push
mulb
imul
insl
cld
mov
ret
fstps
push
cli
out
adc
push
out
cmp
nop
sarl
and
and
and
jge
or
push
xchg
fs
push
push
out
loope
mov
cmpsl
mov
adc
pop
push
cmp
scas
push
push
add
cmpsl
mov
and
js
push
dec
aaa
push
in
inc
mov
sub
pop
std
push
repnz
inc
lret
push
fisubrl
outsl
ret
out
dec
xchg
cmp
mov
adc
insl
ds
mov
test
push
sbb
ja
out
push
push
dec
leave
repz
je
xlat
fdivs
push
repnz
cmp
les
jns
aaa
and
les
adc
fisttps
jne
les
adc
pop
gs
adc
and
lds
std
mov
xor
ja
cmpsl
cmp
adc
in
movsb
cmp
add
andb
imul
pop
jmp
xchg
popf
jnp
inc
adc
sbb
pop
pushf
into
jo
add
testl
xor
pop
mov
pop
adc
insl
xchg
lahf
andl
sub
adc
shlb
cli
xor
int
mov
aam
ret
adc
insb
xchg
clc
dec
pop
pop
xor
out
or
mov
push
int
cltd
int
add
imul
bound
fistl
in
and
sbb
lret
mov
out
or
add
adc
ret
inc
repz
cmp
sti
xorb
gs
jo
das
cld
dec
xchg
sub
mov
mov
data16
jnp
and
dec
adc
inc
push
cmp
call
aad
les
adc
dec
mov
push
dec
fldenv
xor
xchg
rolb
int3
pushl
ja
lds
je
pop
adc
fcompl
ret
sub
sahf
adc
cmpsb
or
jno
dec
loopne
mov
call
jnp
mov
test
inc
cmpl
pop
push
or
sbb
cld
pop
push
aad
mov
sub
mov
adc
ds
adc
mov
push
sub
xor
ljmp
dec
mov
or
mov
jae
jecxz
repz
sub
imul
push
mov
mov
or
cmp
adc
dec
popa
mov
nop
cmp
adc
lock
and
mov
dec
sub
cmp
enter
mov
mov
mov
jle
mov
mov
jmp
lcall
xchg
adc
mov
mov
test
jbe
mov
rcr
mov
cmp
lret
adc
cmc
push
test
and
dec
or
push
xor
mov
mov
dec
jg
cld
aaa
sbb
pop
or
stos
je
pop
sbb
pop
xor
xchg
adc
pop
les
and
cmp
loop
out
lea
inc
and
or
sti
xchg
xor
jmp
mov
in
repz
mov
bound
imul
aad
mov
push
xor
pop
ss
ret
xlat
sub
sub
loopne
and
or
loop
lret
inc
cmpsl
loopne
aad
mov
test
test
shl
es
adc
hlt
xorb
int
and
push
and
push
or
pushf
cli
inc
cmp
jbe
lret
cmp
aaa
lds
mov
or
pop
jmp
add
lods
push
stc
loopne
dec
insl
testb
xor
out
push
jo
out
aas
test
cmc
adc
ss
ret
in
push
repz
popf
jge
mov
mov
repz
cmp
out
lods
jmp
dec
jne
adc
inc
data16
js
dec
mov
push
sbbl
in
inc
mov
xor
aas
push
add
popf
sarb
aam
jno
and
pop
jp
push
mov
xchg
ds
aas
repz
cmpsb
test
outsb
xor
insb
jne
lcall
xor
stos
sti
jg
mov
pop
push
adc
ds
mov
jb
orb
inc
mov
bound
mov
mov
ljmp
iret
mov
push
and
arpl
pop
loopne
lea
cmp
cmc
aam
jecxz
bnd
lods
xchg
cmc
enter
push
mov
or
cmpsb
mov
cmp
addl
std
lret
insb
add
lcall
mov
dec
pusha
dec
mov
cmpsl
outsl
out
dec
repz
clc
xchg
dec
xor
push
adc
pop
test
dec
sbb
fs
movl
cmp
shl
cmc
inc
xchg
mov
add
jge
out
insl
adc
or
xchg
mov
cmpsb
jle
adc
push
mov
fldenv
add
lret
mov
test
adc
js
xchg
or
cmp
jne
push
add
add
mov
add
push
push
fmuls
jmp
inc
sbb
out
push
test
push
or
push
jmp
push
cmp
push
mov
xchg
adc
stos
ret
xchg
dec
repnz
movsl
nop
stos
icebp
and
ds
idiv
add
lcall
sub
xchg
mov
and
adc
outsb
cli
rclb
dec
aaa
xor
cmp
movsb
out
cmpsb
cmp
xor
out
test
test
xchg
jp
test
mov
shll
jle
pop
and
mov
pop
add
iret
and
fidivs
je
ret
and
mov
dec
mov
loope
cs
or
cwtl
loope
repz
push
insl
cmp
dec
jl
lods
mov
or
cwtl
fstpt
loopne
int3
or
out
jns
cld
xor
push
xchg
das
push
xor
mov
scas
mov
jno
adc
push
shl
xchg
inc
pop
cmp
jle
add
mov
stos
fwait
sbb
sbb
xor
mov
inc
sbb
xor
addr16
test
cmp
sbb
pop
xlat
stos
pushf
sub
leave
xor
fbstp
dec
clc
arpl
jge
call
out
push
gs
test
dec
je
imul
mov
mov
mov
pop
lret
fisttpll
jb
cmpsb
js
mov
sub
xor
lcall
scas
add
ljmp
mov
xchg
daa
and
jo
ds
inc
fdivrs
mov
mov
outsl
lods
orl
pop
popf
dec
xchg
inc
sbbl
jno
push
inc
ljmp
sbbb
clc
add
lea
mov
notl
ret
cwtl
popa
mov
idivl
mov
popf
push
movsb
dec
out
adc
push
lahf
lock
jae
mov
shrb
or
sti
add
xor
mov
cmpsb
hlt
push
cmpsb
test
push
or
icebp
or
testl
pop
mov
pop
jbe
scas
nop
fs
test
sti
lret
test
sarl
popl
les
cld
outsl
orl
data16
xor
xchg
xor
sahf
out
roll
dec
test
repnz
flds
std
pushf
add
mov
and
mov
cli
mov
jmp
sbb
sub
pop
imul
inc
cwtl
jnp
dec
add
cltd
pop
adc
into
outsb
cmc
rcl
pop
test
push
nop
repnz
adc
out
push
mov
sbb
sub
mulb
test
jbe
mov
leave
in
push
jmp
stc
inc
adc
test
mov
call
inc
and
mov
nop
push
xchg
push
lds
push
aad
dec
xchg
inc
lcall
out
popf
pop
jle
les
fs
sti
jno
xchg
fstpt
adc
pop
mov
sub
inc
test
push
sbb
lret
jns
push
sbb
clc
enter
sbb
nop
cmp
into
mov
mov
imul
fwait
lea
jno
jnp
lods
mov
lods
mov
or
sarb
test
outsb
sub
enter
xchg
sbb
jbe
add
jmp
imull
cmp
jbe
insb
cmpb
outsb
insl
fsubrl
cmovge
sbb
and
divl
pop
fsubrp
in
add
xor
push
icebp
les
xchg
cmp
inc
xchg
lea
push
ss
outsb
lods
pop
jmp
push
cltd
pushf
daa
fs
shll
iret
adc
push
and
xor
and
sub
cli
xor
or
dec
push
xchg
mov
cltd
xchg
stos
sbb
ficoms
xchg
movsb
add
dec
push
mov
loop
sub
imul
fwait
xchg
xchg
mov
cmp
lahf
dec
xor
mov
or
stos
jge
daa
mov
adc
imulb
fsub
pop
dec
iret
sbb
xchg
jnp
std
sub
inc
movsb
mov
in
push
mov
add
mov
dec
xchg
rol
pop
mov
xor
mov
enter
inc
cs
std
int3
inc
loopne
push
icebp
pop
test
lret
nop
push
sub
mov
sahf
ret
xchg
and
stc
mov
sarb
xchg
movsl
jbe
pop
sub
in
mov
je
inc
fmull
mov
add
fidivl
sbb
int3
push
xchg
pop
stos
and
in
push
inc
out
inc
or
fidivs
iret
push
jl
push
lock
adc
and
inc
sub
std
mov
jnp
cmp
or
xchg
loope
iret
pop
push
xchg
mov
js
addr16
mov
dec
sbb
cmp
call
inc
sbb
fsub
shll
sub
repnz
xor
mov
imul
divb
sub
jb
scas
adc
popf
fisttps
dec
fwait
mov
cmp
repz
es
dec
xor
push
in
jmp
les
out
mov
shr
add
push
mov
cs
mov
lods
xchg
mov
jp
pop
sbb
mov
jae
cli
idivb
call
mov
or
sbb
push
hlt
mov
out
add
mov
cs
imulb
out
inc
cli
add
lods
nop
push
xchg
xor
xchg
rolb
jmp
es
adc
lods
fcomi
bound
sarl
int
or
or
cmpsb
cmp
fists
xchg
jbe
scas
fwait
xor
cmpsl
imul
inc
cmp
sbb
leave
ret
adc
xchg
sbb
cmp
or
pop
pop
cmp
mov
mov
or
fildll
outsl
add
mov
pusha
sbb
outsl
add
insl
fdivrl
fisttpll
mov
add
mov
mov
fldcw
inc
sub
sbb
sbb
sbb
add
repnz
mov
cmp
idivl
xchg
scas
or
int3
mov
jne
aam
loope
sub
jecxz
push
sub
sbb
dec
mov
pmovmskb
fidivl
sbb
dec
sarb
mov
and
lret
cmpb
jbe
jnp
sbb
scas
iret
or
lock
les
cltd
add
test
mov
dec
mov
sbb
fs
popa
negl
mov
negb
sbb
std
xchg
shl
test
mov
clc
js
mov
cmp
ljmp
cwtl
test
sbb
mov
mov
test
sbb
add
jnp
pop
push
fdivrl
out
test
sbb
test
cs
lahf
pusha
or
clc
out
test
jecxz
adc
negl
popf
cmpsb
out
jg
mov
aam
xor
jae
xor
in
insb
mov
insb
ss
loop
cmpsb
in
lock
lcall
mov
sub
cmp
ret
les
iret
mov
sub
js
ror
out
cmp
mov
fs
add
daa
or
inc
cmc
dec
jns
jnp
int3
mov
xor
scas
xchg
sub
ja
xor
gs
sub
jae
fidivl
stos
imul
loop
int
adc
cmp
jg
aam
push
pop
adc
push
xlat
jmp
in
rcr
incl
push
imul
fs
inc
or
mov
loope
mov
xor
cmp
add
pushf
pop
adc
cmp
lods
add
adc
xor
sub
js
mov
jle
add
into
pop
mov
pushf
mov
sub
insl
insl
sbb
jecxz
popf
and
xchg
into
mov
xor
or
and
out
or
hlt
mov
fstps
sub
loope
pop
lea
pop
scas
cmp
mov
pop
test
arpl
lock
insb
pop
in
jnp
dec
push
scas
hlt
mov
and
jle
push
sub
pop
loopne
fadd
nop
xchg
jecxz
dec
push
inc
testb
adc
mov
call
jae
or
dec
loope
cmpsb
sbb
and
and
cmpsb
movsl
dec
mov
cmpsl
add
stc
jp
adc
lret
cmpsb
test
rorl
add
jns
and
mov
push
mov
xchg
test
out
pop
enter
leave
ds
sti
imul
cli
mov
push
jmp
mov
xchg
cmp
pop
in
inc
ja
insl
add
dec
insl
mov
add
pop
aam
out
push
stc
mov
movsl
mov
mov
fiadds
xor
mov
das
psrld
call
pusha
popf
bound
inc
enter
jecxz
jb
fists
or
pop
push
pop
outsl
pop
add
dec
scas
cli
pusha
sbb
mov
int
loope
hlt
lret
cwtl
adc
test
div
scas
fistpl
jp
add
movsl
jg
add
or
xchg
mov
xchg
mov
cs
sahf
sbb
adc
mov
cmp
jne
lea
pmulhuw
jb
add
mov
jno
sub
jbe
test
popf
xchg
lcall
stos
dec
cmpsb
mov
dec
xor
mov
in
fs
loop
rcrl
cmpsb
mov
ss
dec
mov
jge
push
cld
push
aas
imul
sbbb
call
mov
sarl
sahf
mov
mov
dec
inc
xchg
js
div
fidivl
daa
xchg
pop
sarb
xlat
jecxz
push
imul
stos
sub
lret
lcall
push
lds
ror
sbb
sbb
sar
fcompl
aaa
ret
test
and
enter
cmp
stos
es
add
out
mov
in
xor
cmc
insb
mov
cmp
ffreep
jae
outsb
pop
in
and
and
dec
sbb
cmp
scas
adc
ret
pop
movsl
dec
pop
in
mov
test
cld
les
xchg
pusha
mov
pop
xchg
enter
jge
or
imul
cmp
mov
cmp
xor
out
fwait
and
iret
push
push
or
push
ss
add
andl
mov
das
sub
mov
je
pop
push
xchg
popa
sbb
mov
xchg
mov
fisubs
popa
ficomps
pop
inc
jns
inc
ja
icebp
shll
inc
aaa
inc
push
mov
lret
push
call
adc
popf
mov
xchg
sti
dec
push
scas
mov
and
aam
fmul
cmp
iret
mov
sub
lret
and
mov
mov
xlat
cli
stos
cltd
lcall
out
and
shrl
shll
std
jp
fcmovnbe
add
and
and
rclb
pop
jp
cmpsb
out
adc
mov
jnp
sahf
dec
ret
sub
jg
loope
lret
cmpsl
les
sbb
ret
adc
dec
fcos
repz
int3
sbb
nop
xor
pop
xchg
mov
ja
and
es
push
xor
xchg
add
cmp
cmp
jae
insl
out
mov
nop
roll
sub
sub
mov
jno
jecxz
inc
xor
aas
jbe
sbb
xor
sbb
cmp
and
lahf
mov
sbb
shlb
mov
das
dec
ret
adc
mov
push
xchg
sbb
xchg
pop
inc
sbb
cld
inc
mov
sbb
repnz
xor
mov
lcall
push
dec
in
cld
popf
jns
dec
cmp
cmp
shr
mov
adcl
xor
dec
jle
repnz
cmp
cmp
lock
stos
cmc
data16
call
push
pop
sub
inc
cli
dec
or
pop
test
pop
xchg
inc
hlt
inc
nop
dec
leave
imul
add
das
xor
sbb
clc
jle
aad
loope
lock
aas
sub
test
mov
jno
lods
push
test
addr16
dec
push
hlt
pop
pop
gs
lahf
sub
ds
repnz
mov
into
ds
fisubl
or
fistpll
mov
sub
and
mov
adc
mov
out
test
clc
push
sbb
cmpsl
push
in
repnz
jecxz
inc
mov
cmp
fildll
cld
add
movsl
push
lock
xchg
scas
xor
jl
stos
or
xchg
inc
sub
test
add
sub
lds
je
cmpsl
leave
cmpsb
pop
subb
sbb
repz
fwait
outsl
test
jmp
loopne
mov
cld
dec
mov
loope
jno
mov
sbbb
stos
outsl
and
mov
repz
push
shll
push
push
xor
mov
xor
fmulp
pop
adc
dec
repnz
mov
cltd
and
js
scas
icebp
pop
in
push
jecxz
ja
sub
data16
dec
fld
dec
cmp
pop
leave
loope
mov
sub
flds
sub
adc
jo
les
push
or
lret
inc
bound
scas
outsb
jecxz
xchg
repnz
and
xchg
inc
das
aam
pop
idiv
testl
mov
jns
ja
jbe
inc
sub
mov
daa
sub
push
popa
pop
xor
fnsave
push
cld
push
dec
adc
pop
inc
int
push
addr16
sahf
mulb
clc
fisttpll
leave
adc
adc
sahf
popf
js
adc
xor
cmpsl
shll
ds
dec
pop
mov
ret
in
adc
idivb
loopne
repnz
outsb
cmp
scas
and
pop
or
jecxz
sub
cmp
sub
xchg
jb
lret
cmp
stc
repz
jns
and
xor
jle
and
adc
dec
pop
repz
lods
test
or
mov
ds
jb
cmp
cmp
xlat
xchg
inc
pop
mov
lods
das
leave
sub
xchg
and
imul
adc
jno
cmpsl
inc
dec
push
call
xor
ljmp
nop
or
adc
mov
mov
fistpll
and
push
and
jmp
mov
loopne
pop
push
inc
jbe
test
insl
movsb
sub
stc
sti
das
loop
xor
cltd
fdivl
adc
insl
and
dec
out
push
jae
sbb
xchg
inc
hlt
mov
adc
ss
xchg
mov
mov
in
rcll
xchg
inc
loop
jae
mov
mov
test
and
imul
adc
in
adc
add
sub
adc
lds
loopne
test
jae
xor
jne
mov
lea
sarb
lret
add
cli
loope
enter
out
sub
dec
pop
pop
imul
out
and
lahf
sub
sub
dec
out
mov
scas
xor
mov
fsub
fcompl
sub
lods
and
add
mov
insl
pusha
div
pop
xchg
xchg
jbe
sbb
lock
jl
sub
xchg
dec
pop
stos
pop
push
mov
pop
push
pop
xchg
or
lds
loope
sahf
hlt
push
push
pop
xor
push
enter
movsl
adc
int3
pop
mov
pop
xchg
imul
lret
in
adc
jae
or
add
pop
mov
dec
xor
std
bound
push
aaa
repnz
nopl
dec
and
push
icebp
mov
jno
iret
leave
int3
in
push
lcall
cmp
repnz
loope
or
into
nop
adc
jg
arpl
xchg
pusha
fsubrl
cmp
mull
pop
pop
aam
mov
dec
loop
adc
push
pop
sbb
out
rorl
jae
arpl
inc
jecxz
jmp
out
push
adc
push
insl
in
adc
pop
fcmovb
mov
fdivl
adc
push
cli
jp
mov
pop
test
ds
xor
or
rcrl
dec
adc
mov
pop
push
lds
or
add
mov
pop
repz
mov
and
push
or
push
cmpsb
lahf
fst
xor
sub
sub
mov
ss
push
push
inc
push
sub
cmpsb
push
xchg
sub
push
test
ss
imull
adc
push
lret
jo
aam
aam
mov
lcall
mov
or
jns
dec
repz
cld
in
sub
mov
add
mov
rcl
sarl
loope
imul
inc
testb
xchg
pop
jmp
sub
int
mov
decb
fwait
cmp
xlat
es
dec
stc
loopne
shlb
add
cltd
ret
roll
dec
cmpl
pop
inc
fcomip
pushf
sbb
push
cwtl
or
call
rorb
adc
je
stos
andl
cmp
cmpsl
pop
push
inc
xchg
inc
test
pmaxsw
cwtl
fmul
xor
loop
outsb
xchg
mov
shrb
les
jne
call
ds
fisttpll
push
loopne
fs
jb
add
jbe
xor
pop
sbb
sub
push
adcl
mov
lcall
int
data16
loopne
repnz
sti
daa
mov
ljmp
jge
mov
scas
cmpsb
arpl
xor
sti
aas
inc
jg
jae
lock
dec
inc
adc
outsb
xchg
jns
or
add
xor
mov
or
adc
dec
icebp
jne
and
cmp
inc
sahf
mov
enter
mov
rcrl
loope
inc
push
xchg
and
pop
lock
cltd
pop
xchg
in
hlt
mov
cmp
cltd
inc
inc
inc
cs
fadd
cwtl
mov
add
pop
jno
leave
push
dec
movsl
mov
pop
out
jg
inc
scas
loope
lcall
stos
sub
out
in
lods
sti
pop
addr16
add
ja
cmp
lods
cmp
jmp
dec
and
negl
jp
dec
popa
mov
lcall
dec
enter
loop
cld
mov
ret
sub
aad
sbb
mov
sub
ljmp
sbb
xchg
xorl
xor
rcll
mov
sbb
inc
push
paddb
xchg
adc
in
xchg
sbb
pushl
dec
xchg
inc
xchg
sub
loop
xlat
or
mov
push
lock
popa
ficoms
daa
leave
jp
xchg
sahf
je
sbbb
jecxz
xchg
push
fisubl
mov
dec
mov
shlb
xchg
orl
cs
or
xor
in
mov
xor
pushf
or
add
rcll
dec
cmp
cs
ds
lret
adc
inc
jbe
push
push
sbb
mov
jmp
xchg
jge
insl
jnp
rcrb
ret
pop
mov
in
sub
cmpsb
inc
sbb
dec
pop
sub
test
dec
push
jecxz
mov
mov
stos
loop
inc
es
imul
jbe
cltd
push
je
out
add
cmp
cmp
push
or
test
int
rcll
loop
repz
and
push
fisttpl
mov
add
dec
xchg
cwtl
xchg
dec
dec
jbe
dec
xor
in
stos
shll
cli
enter
dec
and
and
lods
hlt
inc
loope
add
pushf
xor
je
ret
repnz
push
test
or
scas
js
sbb
fiaddl
mov
push
jne
mov
push
pop
arpl
jb
sbb
inc
and
sub
pusha
add
or
or
lahf
gs
ja
dec
dec
sbb
add
inc
fsubrl
lea
mov
dec
mov
jns
les
cmpsl
shr
push
in
nop
insl
pop
cs
adc
div
into
test
insl
mov
aad
pop
scas
into
push
in
adc
lock
std
and
loopne
inc
cmpsl
mov
loop
fcmovu
add
push
lods
pop
and
neg
stos
es
mov
xchg
aam
leave
mov
icebp
movsb
lret
and
or
adc
lea
aad
mov
lret
pop
add
or
mov
das
mov
inc
jmp
push
jp
pop
cmp
cmp
mov
sub
sbb
sub
mov
pop
push
adc
cmc
cs
clc
adc
and
add
imul
test
in
sbb
into
enter
inc
sub
mov
xchg
ficomps
fnstcw
sti
and
or
sub
pop
cmp
or
jo
sbbb
cli
leave
sbb
loop
pop
fsubrp
or
pop
enter
push
pop
aad
mov
cs
mov
add
mov
pop
adc
mov
add
stos
push
pop
or
mov
adc
push
sbb
lds
js
xor
cmp
cmp
ja
pushf
or
jecxz
call
addl
pusha
xlat
es
fstps
lock
fidivrl
mov
adc
add
jg
xor
add
pop
adc
arpl
xchg
sbb
pop
arpl
lret
cli
stos
fisttps
add
jle
dec
cli
lock
hlt
andb
sub
imul
mov
xor
into
nop
and
loop
cmp
fistpll
addl
inc
into
add
into
shll
loope
sub
arpl
and
sbb
sub
jns
clc
pop
mov
inc
std
stos
ja
scas
mov
je
fdiv
mov
cmp
cs
and
push
mov
mov
cli
xor
adc
mov
pushf
inc
and
adc
iret
ss
rorb
or
dec
jecxz
push
push
icebp
rcll
jo
daa
dec
and
aas
fcompl
mov
inc
push
and
jmp
sarl
add
jnp
aas
push
sbb
inc
sbb
adc
push
sub
loopne
push
push
insl
push
push
add
jmp
insl
adc
add
or
nop
addr16
popa
jne
test
and
out
mov
pop
out
mov
outsb
mov
mov
xor
repnz
test
ja
inc
mov
movsb
dec
push
imul
inc
mov
xor
pop
aas
mov
jge
or
mov
mov
jne
and
pop
jmp
sbb
std
mov
xchg
push
mov
fisttpll
mov
jl
xor
and
mov
imul
in
inc
push
or
or
xor
subl
push
jmp
loopne
inc
mov
clc
sbb
loopne
dec
cltd
scas
scas
bound
sub
stos
xorb
fdivs
push
ret
and
or
jne
push
adc
xor
ja
mov
cmc
push
mov
mov
data16
pop
dec
mov
fwait
pushl
jo
sbb
fstl
rcll
or
int3
arpl
cmpsl
rclb
scas
mov
fidivrs
pop
or
ds
jns
lcall
xorb
testb
int3
xchg
push
or
lods
daa
gs
cmp
sbb
ds
ds
jae
xchg
cmp
ret
add
outsl
rcll
pop
add
leave
lretw
movsl
pusha
xlat
imul
fsubrp
jge
and
stos
dec
rcll
lret
mov
clc
jns
pop
xchg
repz
fidivs
and
shlb
mov
pop
daa
and
outsl
pop
mov
cli
push
pop
mov
pop
inc
push
test
dec
mov
popf
addr16
ret
in
repz
pop
sti
in
dec
arpl
mov
sbb
stos
repnz
dec
js
push
or
aad
popl
cmp
into
push
insb
ret
push
cmpsl
test
mov
lock
xor
les
push
dec
xchg
xchg
in
jo
push
xchg
push
insl
clc
clc
push
sub
icebp
sbbl
insl
sti
loopne
fiaddl
xchg
xchg
cmpb
hlt
jl
push
insl
shrb
xor
fistpll
popf
xchg
stos
push
push
inc
cmp
inc
int
loope
ret
lcall
add
mov
mov
cmp
ss
movsl
sbb
jne
adc
push
xchg
pop
or
mov
je
pop
sbb
cmp
or
out
cmc
add
dec
push
or
loope
sub
dec
push
ljmp
loope
add
push
mov
lea
lods
fbld
inc
pop
jecxz
dec
nop
fldt
les
pop
loopne
je
repz
xchg
insl
cmp
mov
add
cmp
clc
or
imul
lods
mov
cmp
loop
lock
adc
movb
and
repz
cmp
inc
out
inc
push
jne
lret
in
push
inc
dec
and
add
lahf
add
inc
gs
lret
lods
mov
mov
call
jl
dec
and
push
fists
fidivrl
mov
mov
sub
jmp
jo
xor
sbb
sub
lahf
shll
in
and
jl
inc
int
fldenv
xor
fldl
ret
or
push
jp
xor
or
shll
xchg
pop
adc
icebp
cmp
scas
inc
adc
cmp
push
fdivrp
mov
bound
and
adc
ja
xlat
add
clc
shrl
mov
cmp
jmp
into
push
and
sti
jnp
ret
cli
leave
outsl
cwtl
push
mov
sarb
mov
mov
dec
adc
outsl
push
cmp
mov
dec
lock
outsb
sub
jne,pt
or
lret
mov
pusha
cltd
mov
fs
cli
or
inc
lcall
lret
jb
inc
popa
pop
push
mov
loope
cmpsb
add
pop
inc
jns
mov
leave
leave
push
icebp
leave
es
push
pop
sbb
loop
and
mov
xor
xchg
mov
testl
and
in
push
pushf
dec
dec
std
ds
rorb
shl
sub
notl
aas
cmp
cli
sub
mov
enter
ss
sub
push
sarb
clc
push
dec
or
cmpsb
mov
dec
test
sar
iret
stos
cmp
fiadds
aaa
pusha
iret
dec
mov
push
cmc
ret
xchg
and
inc
in
hlt
dec
bound
lea
mov
aaa
test
mov
dec
insl
aad
or
mov
mov
bsr
rol
sub
setno
cli
dec
in
and
push
leave
out
lds
adc
arpl
fs
divb
test
popa
sub
data16
pop
dec
shr
cmp
sub
cmpsl
pop
or
inc
mov
xchg
ds
jmp
dec
les
dec
aad
xor
aam
pop
inc
ja
jmp
cmpsb
lret
pop
les
out
arpl
mov
sti
sub
pushf
out
ljmp
out
aam
add
fldcw
add
jno
jnp
loope
and
mov
adc
or
sahf
lock
sbb
xchg
and
push
sbb
notb
out
push
in
scas
outsl
sub
imul
fistps
cli
cwtl
jp
sbb
xorb
outsl
fsubs
dec
mov
idivb
xor
sub
in
mov
rcr
jnp
mov
sub
adc
clc
mov
repnz
sbb
lret
aad
mov
cmc
loope
inc
pop
movsl
push
inc
push
pop
and
aad
ret
jl
stos
std
das
cmc
insb
sti
shll
push
outsb
sar
pop
inc
iret
mov
xchg
push
push
lret
push
mov
mov
inc
into
jae
stc
mov
push
xchg
cs
mov
lock
hlt
aas
jno
mov
inc
add
into
xor
imul
lods
push
and
mov
and
and
ss
jp
lcall
mov
inc
jle
sub
or
aam
mov
jno
lock
mov
iret
cmp
popa
add
out
lds
stos
les
pop
lods
stos
mov
lods
mov
jb
jle
dec
sub
mov
push
mov
jae
mov
and
lea
and
xchg
flds
dec
imul
mov
adc
ds
lcall
idivb
jmp
aam
inc
or
adc
stos
je
push
xlat
sbb
push
loope
mov
popa
pop
and
mov
les
xchg
jae
cmp
jnp
dec
inc
data16
test
std
stos
pop
mov
shlb
inc
fcoml
test
loopne
out
pop
xchg
jmp
test
js
add
subl
mov
sahf
or
lahf
hlt
jle
pushl
jnp
mov
es
ret
stc
and
sub
fwait
jg
pop
pop
mov
mov
test
adc
inc
shrl
mov
xchg
jne
mov
ret
mov
sbb
jae
pop
sub
and
pop
xchg
lret
imul
nop
outsb
mov
or
imul
inc
mov
push
test
adc
or
leave
lds
lcall
add
stc
inc
int
sti
sahf
sub
xchg
les
scas
mov
xchg
aas
jg
in
push
pusha
pop
mov
lcall
mov
mov
mov
mov
jb
test
cld
mov
push
push
popa
jg
dec
out
or
sub
out
inc
pop
sarl
add
shl
sub
lret
adc
and
es
mov
dec
pop
mov
repz
out
xchg
add
sbb
inc
add
inc
mov
mov
sub
in
mov
or
aad
and
incb
fnstsw
mov
add
jb
xor
in
fsubrl
lock
dec
pop
mull
jbe
push
mov
cmp
push
pop
add
push
mov
sub
adcl
inc
and
dec
in
cmpsl
pop
jmp
add
clc
rcl
out
xchg
movsl
sbb
inc
mov
dec
test
ret
fsubl
add
sbb
push
mov
scas
pop
std
cmp
pop
jl
dec
lea
xor
push
mov
lret
or
cmp
dec
sub
fistps
sub
add
push
cmp
pop
vorps
add
pcmpgtd
jge
or
shlb
icebp
xorl
dec
int3
pop
shll
imul
nop
pop
xor
and
imul
lret
repz
fwait
pop
repnz
inc
xchg
dec
mov
out
or
sub
inc
or
jae
jb
aaa
or
mov
inc
mov
cmp
andl
jnp
mov
mov
stc
loopne
data16
mulb
or
div
insb
cmp
filds
test
outsl
add
jmp
pop
xchg
cld
int
sub
test
in
jb
mov
jecxz
sub
sti
nop
jmp
fstpl
cmpb
test
stos
std
mov
xchg
mov
adc
inc
mov
ret
lea
jbe
mov
in
mov
rclb
popa
ret
iret
xchg
movsl
ja
in
pop
or
jp
pop
dec
ja
or
repz
lods
int3
xchg
stos
fdivl
or
xchg
mov
jbe
loope
sbb
pop
testl
dec
outsb
fnstsw
lret
mov
inc
push
fidivrl
and
dec
and
dec
jle
lahf
leave
cmpsb
fistl
ljmp
and
jp
and
sti
rcrb
inc
jae
sub
jl
pushf
sub
in
cmpsl
out
fisubrl
jg
cs
inc
test
loop
sub
cmp
jp
sub
push
and
pop
pushaw
testb
pusha
ljmp
or
loop
cli
add
stc
push
pop
out
add
sbb
cmpb
test
adc
cld
jle
out
cmp
ret
insl
into
mov
lods
arpl
add
sub
stos
js
orl
add
lret
mov
dec
jmp
xchg
jle
inc
imul
pop
sub
testl
fstps
enter
adc
xchg
arpl
lret
push
pop
cld
sbb
out
shll
aaa
test
inc
dec
adc
and
adcb
dec
xchg
jle
aaa
cs
jo
jnp
inc
xchg
push
push
dec
xchg
mov
call
divl
cmp
cmp
sar
data16
mov
test
call
out
jp
sub
xor
adc
push
push
xor
addr16
testb
orb
jns
movsl
sub
in
std
cmc
ds
ret
into
mov
mov
sbb
ja
cltd
scas
les
mov
mov
pop
jp
data16
fcomp
stc
cmp
add
xchg
or
xchg
mov
mov
mov
xor
int
xchg
stos
push
and
jb
xchg
jo
sti
or
pop
sti
xor
test
into
lock
mov
movsl
subb
loopne
jp
cld
xchg
loopne
imul
clc
jae
ljmp
lahf
push
negl
out
sbb
mov
movsl
xchg
sub
cmpl
mov
pop
arpl
mov
or
ret
repnz
pop
xchg
jl
sub
data16
mov
mov
mov
xor
or
test
bound
cmc
aad
or
lahf
fdivl
lods
and
jmp
inc
fidivs
xor
pop
lcall
dec
xchg
insl
and
loope
movsb
cli
jecxz
jbe
jg
test
mov
inc
fs
stc
mov
dec
add
and
cmp
dec
jp
or
inc
int
int3
push
mov
outsb
push
push
inc
stc
or
test
jle
cmc
sub
xor
sti
fcomps
insb
or
sub
sub
jl
mov
mov
ret
cwtl
std
int3
inc
sbb
cmp
movsb
or
popl
add
or
repz
or
mov
sub
or
inc
jo
nop
in
dec
push
ret
mov
adc
aaa
jo
outsl
loop
xor
xor
out
repnz
fisttpll
mov
lea
xchg
push
adc
in
in
fisubrs
into
mov
pop
mov
inc
push
inc
and
dec
and
pop
dec
flds
cmp
jnp
stos
daa
hlt
jns
out
xor
dec
push
aas
js
inc
pusha
dec
inc
adc
add
xor
mov
sub
clc
das
pop
pushf
add
jecxz
in
dec
cmpsl
xchg
cwtl
sub
int
mov
int
pop
pop
ret
fsubrl
notb
add
movsb
movsb
in
mov
sbb
add
or
or
sbb
mov
dec
mov
xchg
std
xor
shlb
scas
cld
aad
xor
xorl
or
test
adc
inc
fwait
jns
add
decb
shrb
in
xchg
dec
jg
fsts
cmp
jg
add
cmpsb
or
nop
sub
fisubrs
xor
sbb
push
aaa
sarb
lods
out
test
dec
inc
xchg
ja
add
push
xor
mov
les
cmp
mov
push
stc
pop
iret
lock
repnz
fdivl
pop
inc
pop
sahf
clc
cmp
sbb
cmp
pop
idiv
pop
loop
scas
movsl
push
adc
xchg
test
lock
or
inc
and
es
in
cmp
lock
sub
inc
jae
inc
lret
sarl
adc
lods
int3
sahf
mov
pop
add
cwtl
jbe
rcrb
or
fucomi
or
mov
ret
or
inc
jo
and
gs
rorb
add
push
fwait
movsl
arpl
sbb
shlb
inc
enter
dec
push
mov
or
inc
adc
pop
movsl
sahf
sbb
adc
jns
lds
xchg
jne
xlat
into
jg
rcrl
mov
fists
inc
xor
scas
push
test
xor
mov
mov
pop
mov
mov
xor
popl
gs
sub
int
push
push
inc
mov
jns
cmp
and
hlt
and
sbb
icebp
pop
fsubl
jmp
mov
inc
jo
adc
push
inc
mov
mov
jbe
lret
aaa
xchg
enter
xlat
mov
mov
mov
stos
mov
in
test
mov
outsl
mov
xchg
mov
add
xchg
in
adc
push
outsb
loop
clc
inc
inc
or
mov
or
loop
mov
clc
hlt
xchg
loopne
mov
mov
je
mov
jmp
mov
sub
pop
xchg
push
lret
ljmp
insl
cmp
adc
outsl
bound
push
dec
pop
mov
push
roll
add
arpl
daa
sarb
pop
sarb
lock
dec
sti
inc
leave
mov
enter
enter
cli
mov
mov
test
test
imul
xchg
enter
dec
cmp
cmp
or
hlt
fdivs
xchg
xor
in
lock
push
mov
mov
nop
cmpsb
stc
mov
adc
ljmp
and
mov
inc
cwtl
push
xchg
sbb
jp
shrb
cmp
loopne
ret
adc
test
push
ja
imul
inc
and
nop
dec
lods
jl
push
push
dec
fnstcw
loop
and
push
xchg
hlt
jg
and
mov
out
inc
sbb
jecxz
sub
xor
ljmp
in
loope
testl
fists
mov
xchg
cli
or
push
xor
aas
cmp
lcall
stc
repz
jecxz
daa
cmc
lods
mulb
push
aad
enter
mov
cmp
cli
out
popw
cwtl
in
mov
insb
pop
insb
test
insl
mov
sti
sbb
inc
inc
xchg
cwtl
mov
pop
daa
xchg
dec
mov
jno
popf
xor
test
arpl
inc
leave
daa
inc
mov
nopl
aaa
cmpl
mov
dec
mov
xchg
xchg
jns
push
and
jbe
xchg
mov
mov
sbb
dec
xchg
enter
jp
inc
dec
and
aad
add
inc
sub
sbb
enter
cmp
ss
push
mov
int3
es
dec
push
push
in
pop
dec
or
push
pusha
insb
int
addr16
inc
sarb
sub
mov
movsb
add
test
loop
scas
adc
pusha
lock
in
insb
mov
cmp
mov
and
test
add
and
scas
inc
mov
ja
movsl
outsb
adc
imul
sbb
hlt
ffree
jg
jge
aam
cltd
adc
lcall
mov
lock
and
dec
mov
hlt
jne
inc
adc
daa
data16
repz
adc
call
push
adc
mov
push
pop
test
jne
jmp
pop
aam
mov
dec
hlt
je
add
ds
lret
rcrb
or
pop
cmp
jnp
in
lahf
adc
popf
addr16
fmuls
stos
cmc
and
xor
pop
pop
mov
xchg
adc
jmp
mov
or
xchg
jl
hlt
pusha
lret
aad
and
into
pop
inc
sti
pop
in
xchg
cs
mov
mov
scas
imul
popf
stc
xor
mov
popf
pop
daa
ss
mov
or
es
sbb
fmuls
mov
test
xor
pop
leave
pop
jns
jnp
and
add
rorb
insb
cmp
imul
pushf
scas
ss
add
jmp
push
dec
into
rorb
out
stos
aad
pop
jnp
mov
scas
std
mov
inc
xor
mov
das
sub
mov
jb
pop
loope
and
mov
fidivl
jns
lahf
or
sbb
cmp
cmpsb
ret
sub
mov
jge
jp
pop
leave
pop
push
dec
adc
lock
jae
xor
pop
je
mov
push
inc
cwtl
leave
xor
sub
cmc
push
outsl
ja
pop
adc
pop
add
dec
jmp
pop
pop
mov
aas
sti
jmp
pop
pop
ffreep
ffreep
pop
mov
ret
loope
gs
lret
das
jmp
mov
push
push
inc
xchg
add
adcb
std
or
xchg
test
jmp
or
lret
je
dec
jge
dec
adc
mov
lcall
sarb
add
mov
lret
das
adc
add
test
inc
imul
cmpsb
push
sub
inc
ret
or
pop
testl
aad
pushf
add
add
pushf
inc
pushf
push
lret
jecxz
lret
sbb
jle
imul
push
jns
int
ja
jmp
test
shl
inc
mov
ds
stc
mov
jle
mov
ds
insl
mov
jmp
aaa
ljmp
hlt
xchg
add
push
jne
push
lahf
je
cltd
cltd
mov
cltd
ds
jb
or
lea
das
xchg
inc
lds
mov
mov
loope
out
cmp
aad
dec
int
or
mov
popf
mov
cmpsb
out
popa
push
cmpsl
add
or
stos
aaa
xor
call
sbb
push
stc
icebp
sahf
mov
xchg
int
ficoms
adc
xor
aam
loop
arpl
and
xchg
jge
push
xor
pop
and
shlb
repz
or
sub
pop
stos
dec
lods
push
clc
repnz
outsb
inc
out
or
pop
sub
jne
xor
xor
mov
xchg
faddl
jmp
jecxz
mov
fsubrs
xor
cmp
xchg
xor
cmpsl
enter
pmulhuw
xor
xor
mov
rclb
ret
add
xchg
mov
pop
push
bound
in
movb
repnz
add
add
rorb
mov
mov
or
fwait
shl
xchg
shrb
fisubrl
nop
jle
inc
arpl
lahf
xchg
jae
out
cmp
dec
or
insb
sarl
mov
insl
cmp
call
loop
mov
add
insb
dec
xlat
lds
xchg
lds
push
jns
or
and
lcall
mov
into
insb
hlt
std
xchg
cli
aas
les
xchg
jl
fwait
outsb
rcr
ficomps
push
mov
mov
fistpl
call
test
mov
push
sub
loope
xchg
pop
push
adc
popf
sbb
pop
popf
or
pop
insb
sahf
dec
int
mov
sub
out
mov
mov
movsl
fstpl
cmpsb
mov
pop
push
xchg
loopne
leave
jmp
nop
pop
andb
mov
sbb
outsb
fsubl
lret
aam
xchg
call
pop
push
xchg
popf
lea
pop
and
fcmovbe
push
fdivrs
fucomi
jae
mov
mov
mov
xchg
shrb
adc
lods
ret
mov
or
cmpsl
shll
pushf
out
insl
pop
add
outsl
or
mov
pop
xchg
sub
xchg
mov
aas
adc
and
mov
adc
sub
mov
push
jae
pop
sahf
stos
into
ljmp
aad
push
shr
cwtl
dec
mov
aaa
mov
push
clc
adc
or
ds
iret
push
scas
dec
cmpl
cmpsl
sbb
pop
jp
fidivs
adc
leave
scas
icebp
gs
leave
imul
lret
and
out
xchg
aaa
pop
or
sbb
inc
lock
mov
scas
xchg
outsb
mov
lcall
fildll
popa
dec
mov
stos
jno
in
imul
push
fiaddl
inc
lret
sub
and
push
popf
call
nop
xchg
pop
and
movlps
lret
sarb
iret
fldcw
or
jne
mov
dec
icebp
into
popf
add
shll
mov
dec
cmp
dec
dec
jbe
ret
cmp
mov
push
sub
sub
xchg
stc
test
stos
unpcklps
gs
ja
repz
sahf
aam
dec
sar
mov
fwait
mov
xor
int3
fs
sbb
pushf
push
ljmp
xchg
push
ljmp
jmp
shlb
sub
push
fucomp
and
leave
rcll
imul
xchg
jge
push
out
and
pop
rorl
out
jmp
popa
sbb
mov
xchg
push
cwtl
and
pop
xchg
add
shlb
xchg
add
pop
out
pushl
inc
movsl
cltd
es
sub
push
mov
fnstcw
std
push
inc
addr16
leave
add
mov
jbe
dec
fldcw
xchg
test
testb
mov
cld
jb
data16
aaa
xchg
dec
inc
dec
scas
xchg
xor
jmp
or
outsl
or
sbb
aam
das
mov
nop
mov
outsl
hlt
rclb
xchg
fbstp
shll
repz
pop
fs
fidivl
mov
xchg
push
inc
dec
add
imul
adc
cmpsb
call
add
ja
addr16
inc
mov
call
and
flds
cli
push
andl
sbb
lds
hlt
push
pop
inc
je
cmpsb
dec
mov
add
mov
fcoms
call
in
add
enter
pop
popf
sub
or
sahf
stos
add
and
ljmp
mov
push
mov
sub
sub
sti
mov
dec
idivb
test
inc
stc
notl
ds
inc
loopne
gs
push
sahf
adc
cmp
cmp
dec
fdiv
inc
mov
popa
push
test
ret
jo
jmp
pushf
push
hlt
adc
sbb
pop
roll
pop
nop
ss
jno
dec
cli
xor
icebp
ss
test
lods
dec
sbb
sbb
pop
stc
lock
icebp
pop
sub
mov
pop
test
shll
xchg
ljmp
xchg
shlb
lods
push
pop
cmp
mov
js
and
fnsave
push
dec
cmp
and
xor
insb
cmp
jecxz
sub
mov
inc
mov
mov
call
stc
call
sub
dec
cs
popf
iret
mov
mov
cwtl
push
mov
dec
mov
mov
pop
mov
pop
daa
ficoms
jle
sbb
loopne
and
mov
pop
stos
lods
inc
iret
fimuls
mov
sbb
stc
xor
sbb
sbb
inc
push
ret
and
cmp
int3
ret
mov
repz
mov
mov
xchg
inc
or
jecxz
rcrl
inc
clc
hlt
mov
cmc
mov
xor
pusha
adc
xor
or
push
jge
jmp
inc
pop
loopne
bt
add
dec
popa
mov
pop
dec
pop
adc
sbbb
aam
repnz
and
pop
inc
push
icebp
add
dec
jo
pop
popa
lods
adc
rolb
outsl
fwait
jns
ficomps
fimull
dec
push
add
stos
and
movsl
push
and
push
adcl
cmp
lods
rcr
rorl
add
std
push
stos
js
dec
test
push
dec
jne
mov
shll
lods
rolb
sbb
push
add
outsl
sub
and
repz
sbb
mov
adc
push
sti
in
dec
push
call
xchg
mulb
gs
rorb
sbb
loope
mov
pop
jg
shlb
popf
mov
dec
es
daa
popf
xlat
repz
pusha
aas
xchg
pop
outsb
mov
xchg
mov
push
sub
mull
pop
inc
jecxz
pushf
inc
movsl
cmp
imul
push
out
mov
loope
sub
mov
test
adc
sub
mov
inc
ljmp
or
insl
mov
add
mov
fcompl
mov
jg
inc
xor
mov
gs
push
and
dec
cmpsl
imul
inc
pusha
cmp
jmp
outsl
push
mov
mov
dec
rclb
int
fistpll
imul
into
dec
jge
dec
rcrb
sti
lock
lods
clc
in
and
lock
xor
repnz
add
and
insl
jp
jmp
cmovae
pop
stos
call
push
icebp
sub
or
cwtl
xlat
and
jg
jbe
add
mov
mov
or
add
mov
and
push
xor
pop
aas
mov
push
fstl
mov
aas
jle
loop
and
loop
aad
add
mov
mov
cmp
loopne
xchg
xchg
pop
aam
dec
xchg
iret
or
loopne
stos
fwait
cmp
jns
xchg
mov
and
mov
fmull
aas
shrb
ljmp
cmp
mov
sbb
repz
scas
adc
add
out
xor
push
lret
lcall
cmp
sub
xorl
jge
push
jae
pop
adc
enter
mov
std
cs
or
cmp
push
hlt
sbb
jnp,pn
push
pop
adc
insl
and
mov
lock
pop
mov
mov
xchg
mov
pop
pop
sbb
addr16
movups
mov
sarb
cmc
xor
lods
insl
sbb
in
adc
pop
test
dec
pop
pushf
mov
pop
mov
xchg
mov
js
jb
aaa
shlb
mov
xchg
nop
mov
add
stos
push
add
pop
test
xor
and
lock
dec
xor
dec
mov
and
xchg
addr16
or
push
rolb
jp
dec
add
and
lds
add
scas
into
popa
jge
push
mov
xor
ds
test
xlat
cmpsl
dec
and
xchg
pushf
pop
sub
outsb
fdivrl
notl
mov
xor
adc
mov
cmpl
int3
test
sub
dec
sahf
and
in
lock
sub
xlat
push
xor
orl
xchg
mov
movsl
ret
mov
outsb
xchg
push
imul
sbb
out
addr16
push
xlat
and
and
aam
xchg
test
aaa
pop
jecxz
mov
mov
aam
cli
xor
mov
outsb
icebp
sarl
fdiv
push
cmp
mov
mov
xchg
icebp
push
test
fstl
sbb
lds
sbb
pushf
enter
xor
mov
enter
lea
add
fwait
inc
sub
lods
faddl
shlb
jmp
test
sub
push
jmp
fdivs
gs
xor
repnz
repz
lods
aas
sbb
js
pop
pop
mov
lods
into
sub
xor
out
cmpsb
inc
or
mov
fcmovnu
fstl
cmp
out
dec
lret
sub
xchg
xor
dec
pop
add
sub
inc
inc
pusha
push
sub
pusha
cmpl
test
arpl
adc
lock
ss
daa
sub
cmp
mov
or
loop
adc
je
mov
fdivl
imul
sarb
rclb
sahf
rol
pop
inc
in
xchg
test
push
popf
sub
inc
inc
or
mov
adcl
test
mov
lahf
push
add
ror
popf
insb
aad
imul
push
jl
adc
mov
pop
dec
ljmp
jl
lock
sbbl
xlat
fistpll
shl
and
fbld
insl
adc
mov
insb
mov
pop
and
bound
mov
add
pop
cmp
cld
arpl
addr16
fmulp
outsb
cmp
mov
andl
xchg
mov
in
ds
cld
inc
push
js
pop
inc
add
jne
jmp
cmc
mov
test
or
cmpxchg
fwait
shrb
dec
and
mov
push
and
enter
stc
or
push
cmpsb
fs
push
stos
mov
mov
xor
fs
inc
jmp
negb
xchg
je
loopne
inc
and
ds
sbb
pshufw
mov
dec
xchg
and
stc
and
dec
cmp
pop
cwtl
repnz
mov
sbb
aam
adc
sbb
fwait
push
fucomp
xchg
ljmp
dec
jo
sbb
mov
push
rorl
or
mov
stc
mov
cmp
icebp
xor
jecxz
aam
lds
sub
out
int3
insl
fs
xor
mov
outsl
je
jnp
das
and
or
fs
mov
jle
stos
fnstsw
shlw
xorb
inc
mov
out
les
jnp
xchg
rcrl
mov
cmp
scas
test
jecxz
lahf
int3
and
xchg
data16
in
insl
sub
lret
fwait
js
into
insl
ss
and
test
jnp
imul
lret
and
sub
loope
dec
into
aam
or
inc
cmp
push
mov
cmp
mov
iret
cmpsl
add
xor
dec
cmp
cmp
jnp
mov
xor
not
jp
imul
leave
fucomip
cwtl
lds
jns
ja
or
cmpsl
fwait
push
pushf
jns
mov
ret
xor
adc
and
push
pop
fidivrs
sub
add
push
repz
popa
pop
sub
push
lret
shr
les
das
subl
jne
cmp
les
inc
jo
dec
inc
popa
sti
out
jae
or
and
xchg
pop
cmc
scas
movsl
loop
ljmp
dec
leave
dec
sub
pop
mov
cmpsb
mov
jg
sbb
xor
or
and
mov
sub
add
mov
sbb
ja
ret
popf
pushf
push
jns
enter
incl
fistpl
lret
pop
arpl
push
xor
lcall
add
arpl
call
or
fstps
rcrl
jmp
test
imul
add
shlb
clc
and
jo
mov
addl
insl
popa
clc
lods
inc
mov
cmpsl
push
mov
jnp
pop
nop
xor
in
fmull
jge
arpl
pop
sbb
pop
shr
or
fwait
aad
xlat
fldl
test
adc
mov
sub
out
addr16
lds
cmp
xor
sub
xor
or
mov
push
sub
mov
ja
test
jo
mov
lcall
js
loope
test
test
pop
imul
aam
std
ds
loopne
sbb
movsl
test
mov
inc
jnp
add
rorl
pop
mov
ficoml
popa
add
arpl
push
jl
jae
lods
dec
aas
icebp
jbe
xor
stos
mov
pop
cltd
adc
imul
inc
adc
outsb
jbe
push
fdivrl
sahf
sub
or
or
push
push
or
movsb
mov
inc
add
cli
xor
push
cmpb
shrb
out
xchg
fildl
sbb
xor
inc
jge
mull
inc
jmp
lds
inc
mov
fbld
sub
inc
cmp
dec
jo
mov
cmc
clc
iret
push
mov
insb
int3
mov
scas
push
decb
in
out
dec
rorb
test
sub
mov
or
dec
mov
int
std
cltd
push
push
test
sahf
ficomps
in
lret
sub
push
mov
stos
call
mov
mov
bound
inc
aas
xorb
cmp
in
inc
dec
scas
mov
xor
enter
jmp
lret
pxor
ret
idiv
jl
and
mov
addr16
adc
jno
jp
js
or
js
jnp
jbe
add
push
xchg
xor
repz
pushl
daa
mull
xor
push
cs
mov
pop
push
inc
mull
cmp
or
js
addr16
loop
gs
scas
xchg
xor
sbb
mov
das
mov
cmp
shlb
pushf
cmc
dec
jne
cltd
mov
lods
jno
scas
push
and
sbb
inc
xorl
hlt
mov
mov
lods
push
mov
scas
das
add
dec
out
icebp
mov
cmp
mov
jle
push
lea
push
jp
or
lea
test
rorl
es
xorb
mov
push
xchg
cmc
cltd
movsl
jecxz
gs
jb
test
adc
jb
in
add
cmpsl
adc
enter
cmpb
out
test
pop
sbb
stos
mov
cli
mov
inc
lods
in
and
mov
inc
cmp
sub
mov
push
hlt
push
push
pop
cmp
lahf
adc
pop
push
mov
and
adc
sbb
ja
sbb
ret
cmp
leave
or
fwait
dec
and
inc
and
inc
xor
sub
dec
cmp
int3
add
pop
sar
in
es
stos
cmp
repnz
mov
vprotw
lret
inc
cmp
divb
bnd
xchg
sbb
pop
cmpsb
mov
jp
mov
xchg
lret
or
ljmp
push
cmp
fcoms
rorb
leave
mov
pop
icebp
jle
pop
sbb
xchg
mov
sbb
or
hlt
inc
int
adc
pop
push
cmpsl
or
push
add
idivl
add
test
pop
xor
jecxz
push
xchg
or
cli
push
out
dec
inc
orl
jnp
xchg
jl
lahf
xor
mov
mov
xchg
sti
push
jbe
mov
lods
mov
sahf
or
cs
mov
cmpsb
xchg
lods
orb
cs
aaa
icebp
outsb
dec
sbb
cmp
fisttpll
cmp
data16
roll
or
mov
jnp
inc
push
sbbl
xchg
xor
int3
xor
icebp
jb
cmp
adc
xor
mov
iret
mov
dec
xorl
sbb
xchg
mov
jl
aam
or
xchg
adc
mov
dec
enter
stos
mov
push
xchg
xor
fwait
lods
jge
mov
leave
and
stc
pop
in
sbb
test
pop
add
idivb
dec
xchg
adc
enter
iret
inc
or
test
cmp
shl
hlt
mov
adc
pop
insl
xlat
stos
xchg
ss
sub
cld
leave
out
adc
aas
dec
cmp
pop
aad
and
imul
or
xchg
cmpsl
imul
aas
imul
cmc
push
movsl
or
scas
data16
out
mov
inc
cmp
inc
loop
sbb
xchg
lods
push
mov
in
xchg
inc
adc
push
dec
or
mov
and
hlt
jbe
and
jbe
xchg
pop
and
or
fbstp
cwtl
jl
mov
test
mov
inc
push
sub
out
test
stc
sbb
cmc
loopne
outsb
cmp
or
sbb
adc
aaa
sbb
cmp
ret
sub
icebp
mov
mov
lock
int3
leave
ret
cmc
out
bound
fcmovu
or
xor
mov
mov
loopne
lahf
out
stos
cwtl
out
mov
int
adcl
out
push
push
lcall
out
in
addr16
jno
mov
xlat
or
xorb
lock
in
ret
in
jl
fistl
push
xchg
stc
push
je
insl
sbb
fs
xchg
xchg
mov
mov
xorb
cmp
pop
add
mov
pop
or
and
sbb
and
pop
popf
dec
clc
enter
xchg
call
fwait
push
xchg
sbb
xor
add
and
cmp
ja
js
mov
pop
xchg
sbb
fcomps
mov
outsl
inc
dec
or
push
pop
adc
inc
xchg
mov
ja
jne
loope
adc
stos
dec
cli
loope
or
shlb
pop
icebp
in
outsl
mov
int
ss
stc
mov
sbb
jp
incb
dec
adc
jmp
jmp
xorl
enter
cmp
outsl
mov
xchg
in
sbb
cmpsb
push
push
mov
push
sarl
daa
std
sahf
xlat
aad
mov
mov
lods
mov
xor
pop
lds
xchg
xor
xchg
into
jo
adc
sbbb
and
leave
mov
jno
ror
or
jno
push
in
in
dec
mov
sbb
and
dec
std
mov
std
mov
xlat
lahf
sbb
repnz
imul
fisubl
pusha
cmp
test
stos
insl
xchg
lods
cmp
fstl
xor
xor
mov
fists
enter
fld
lahf
xchg
sbb
ret
aas
imul
pop
cmp
in
xchg
cmp
aam
inc
xor
mov
test
inc
sbb
push
jns
add
pop
movsb
sub
jecxz
out
mov
loopne
push
mov
inc
insl
rcr
mov
push
adc
push
mov
inc
adcl
mov
jns
ds
mov
mov
dec
out
xchg
fwait
rorl
movlps
mov
subb
cmc
fcoml
xor
and
sbb
mov
enter
jl
inc
xchg
inc
xor
out
or
mov
movsb
push
sti
dec
fnclex
stc
push
mov
xor
sbb
addr16
ljmp
and
rcll
shlb
jmp
cmp
dec
imull
inc
je
push
and
ret
fcmovb
push
mov
mov
rclb
icebp
insb
mov
jae
inc
mov
jg
cmp
scas
sbb
push
stos
cmp
das
dec
dec
hlt
xchg
imul
fsub
sbb
cld
lods
push
mov
imul
push
adc
or
and
dec
mov
dec
mov
ljmp
mov
sbb
pop
lods
or
cli
cwtl
and
adc
jmp
ficoms
frstor
mov
mov
test
jae
ja
adc
pop
adc
das
pop
mov
in
adc
je
and
push
arpl
xchg
imull
mov
sbb
pusha
xlat
mov
imul
push
xchg
and
push
movb
shrb
pusha
xchg
arpl
mov
scas
dec
cltd
mov
lock
aad
pushf
icebp
mov
and
xor
push
cltd
inc
jge
push
push
fs
das
movd
cwtl
xor
mov
addb
cmp
mov
pop
inc
std
sarb
xor
aam
jmp
xorb
lret
stos
adc
dec
push
testl
jnp
jmp
mov
xchg
icebp
push
or
jo
loopne
jmp
adc
adc
and
lods
or
mov
cmp
mov
shl
xchg
cmp
xchg
adc
repz
dec
orl
mov
inc
push
call
bound
mov
sub
dec
lock
in
outsb
arpl
jge
and
xor
lret
or
stc
inc
sbb
or
sbb
outsl
je
leave
mov
clc
jnp
or
jo
repz
xchg
mov
pop
imul
mov
mov
mov
mov
cwtl
mov
mov
adc
inc
ja
add
or
jb
aad
repz
cs
je
inc
xor
mov
in
pop
xor
push
add
xchg
xor
and
inc
dec
fiaddl
test
test
stc
or
push
mov
ret
mov
lock
sti
rcll
mov
dec
pushf
lahf
lds
inc
jne
imul
stos
xor
repz
leave
pop
mov
stos
xchg
stos
xor
sbb
test
inc
imul
dec
sub
dec
mov
loope
aad
fxch
push
sub
inc
pop
mov
sub
outsl
pop
xchg
movsl
pop
es
push
ds
leave
outsl
mov
out
push
inc
pop
das
pop
out
xor
mull
sub
clc
sti
pop
xchg
or
mov
or
nop
sub
inc
mov
leave
mov
xlat
dec
in
enter
mov
mov
and
pop
je
add
xor
adc
mov
xchg
popf
adc
pop
rorb
scas
push
sub
xchg
aas
push
ficoml
sbb
xchg
dec
ret
push
adc
cmp
mov
out
insl
jne
push
into
arpl
or
mov
add
inc
pop
inc
out
lea
movsb
inc
sar
filds
nop
dec
cmp
cmp
pop
inc
lods
pop
sub
jmp
and
and
pop
lock
outsb
push
sbb
imul
push
mov
adc
push
das
xor
out
test
sbb
and
pusha
call
inc
mov
stc
cmpsl
push
lds
mov
js
aad
mov
in
jbe
pop
orb
inc
shrl
dec
mov
test
mov
inc
enter
imul
es
xchg
fisttpl
add
push
pop
cmpsb
ret
pusha
mov
jne
enter
pop
je
imul
addr16
inc
sar
push
ret
mov
in
or
xchg
test
and
aas
test
push
xchg
jbe
dec
sub
xchg
in
xchg
mov
xor
scas
aaa
pop
hlt
sub
cmp
test
pop
or
repz
inc
pop
ja
add
adc
lock
cmovne
test
sbb
imul
add
and
fistpll
add
pop
pop
and
push
add
jmp
ret
sarl
pop
push
add
jle
or
push
lret
js
add
and
mov
lret
test
aaa
sbb
cmpsl
outsb
insl
cwtl
inc
test
dec
mov
inc
jne
pcmpgtd
xchg
lock
xor
sbb
sar
pop
mov
jns
xor
pop
push
mov
cltd
lcall
jg
lret
jl
push
dec
fnstenv
dec
cmc
inc
pop
mov
push
hlt
mov
out
pop
or
pop
dec
repz
in
mov
or
xlat
cmp
mov
fs
mov
cltd
and
xlat
imul
add
rcrl
push
and
int3
hlt
mov
sub
repnz
or
aam
fmulp
inc
sub
shlb
sub
ds
test
push
sti
cmp
aad
loopne
jle
adc
sub
in
inc
dec
push
push
dec
mov
lret
adc
call
mov
inc
jne
mov
data16
clc
test
test
arpl
push
out
in
adcl
or
sbb
shl
jmp
inc
ja
pop
add
jg
scas
lods
xchg
push
adc
repnz
rorl
stos
lea
je
imul
orl
fsubs
sahf
insb
es
sbb
sahf
ljmp
xor
push
xchg
iret
push
mov
push
inc
ss
ss
je
or
aad
fisttpll
repnz
mov
cmpsl
lret
jl
mov
push
add
stos
loop
testl
pusha
cmp
mov
idiv
mov
sub
xor
mov
sub
xor
repnz
call
push
pop
inc
insb
ljmp
popf
cmp
movsl
mov
cmp
cwtl
add
xchg
xchg
enter
outsl
cli
insl
cmp
popf
push
pop
mov
adc
int3
jp
jmp
push
jle
xor
push
push
lods
pop
dec
add
xchg
xor
xchg
cmp
cmpsb
lahf
outsb
loop
sub
mov
add
data16
jp
dec
mov
mov
mov
mov
push
test
lods
fidivrs
orb
push
sbb
mov
lahf
mov
pusha
pushf
ret
mov
les
inc
decl
in
mov
sbb
inc
jmp
jle
or
mov
movsb
xchg
inc
mov
jo
dec
push
cld
sub
rolb
fadd
iret
inc
std
xor
push
push
adc
int
cmp
sub
test
das
sti
test
dec
push
sahf
mov
int3
jne
sub
scas
inc
repnz
test
ljmp
cmp
rcrl
test
outsb
jg
adc
dec
out
mov
xchg
dec
dec
gs
imul
cmp
xorl
adc
les
mov
insw
ss
sbb
pop
xchg
or
jno
adc
cltd
sbb
outsl
mov
inc
push
push
mov
shll
jp
nop
call
adc
push
cmp
stos
jl
xchg
test
cmp
test
bound
xlat
out
pop
into
cmp
nop
mov
adc
push
loope
dec
mov
push
inc
adc
test
popf
pop
fs
add
ret
cmp
add
fs
inc
lea
hlt
xor
jmp
mov
in
lret
fidivrl
aam
ljmp
sbb
or
mov
add
dec
cmp
inc
adc
sub
sbbb
or
in
scas
cmc
or
mov
jo
and
shll
pop
and
sub
push
mov
fs
add
push
cmp
in
sub
and
fwait
ss
dec
or
pusha
pushl
pusha
repnz
xchg
es
jle
loopne
cmp
mov
mov
and
sbb
jp
stos
call
add
xchg
sub
lds
or
mov
dec
push
or
fwait
inc
jns
call
outsl
xchg
mov
xor
ss
stos
jbe
sub
mov
mov
loop
cmp
jo
icebp
push
repz
pop
cs
insl
mov
loop
rclb
xchg
push
add
pop
hlt
test
mov
outsl
lods
xlat
es
outsl
mov
or
sbb
pusha
sub
frstor
sbb
xlat
cmpsl
loope
add
stos
lods
pusha
cwtl
push
xlat
es
int
frstor
add
movsb
push
in
pop
sahf
rcrb
mov
negl
stos
outsb
xchg
loopne
cwtl
sub
sahf
lods
xlat
mov
push
jp
enter
xchg
pop
clc
in
aam
xchg
jo
out
jb
int3
add
sbbl
jno
and
mov
inc
lahf
inc
imul
sbb
adc
stos
mov
pop
mov
gs
dec
push
pandn
xchg
aaa
mov
loope
out
imul
ljmp
jge
mov
inc
hlt
xor
int3
insb
mov
arpl
jg
jmp
or
push
or
mov
and
test
filds
add
daa
sub
and
out
test
filds
lods
fsubrl
adc
clc
paddusb
inc
popf
pop
inc
stos
fstpl
subl
jno
xor
ja
jmp
dec
xchg
rolb
cmp
mov
pushf
testb
ret
lods
ds
cs
sbb
loop
rol
mov
nop
out
dec
xor
sbb
clc
inc
push
push
mov
cmp
popa
and
xchg
or
ja
in
in
sbb
sbb
xchg
cmpb
fwait
sarl
aas
inc
hlt
in
xchg
jbe
and
out
push
push
andb
movsl
std
shrl
fcomps
jg
jmp
mov
scas
in
pop
xchg
mov
add
jae
inc
aas
push
ret
push
xchg
das
pop
in
lahf
inc
inc
mov
or
cmpsb
mov
popa
loope
js
aad
fwait
inc
aad
pop
pusha
data16
loop
cli
xchg
push
cmp
jecxz
aam
sti
or
sahf
test
and
dec
outsb
test
jl
call
test
loope
repz
jmp
arpl
dec
popa
add
push
push
inc
shll
mov
pop
mov
cmp
jno
adc
sbb
inc
je
test
jne
xor
sub
aad
test
jno
cmp
ror
out
popf
and
fisttpl
pop
clc
mov
pusha
push
dec
push
push
or
faddl
cmp
sub
fistl
cmpsb
and
push
dec
adc
mov
fimull
repnz
scas
cmp
add
sbb
enter
aam
imul
mulb
and
test
leave
lret
pop
cmp
arpl
mov
add
add
movsb
sub
cmp
in
jg
push
lahf
mov
push
jno
mov
push
cmp
add
je
outsb
jl
sbb
scas
xchg
and
add
icebp
pop
mov
or
pop
stc
sub
lret
sbb
je
xchg
lret
jne
mov
call
les
add
jbe
addr16
imul
mov
popf
or
push
mov
cltd
pop
ljmp
aas
push
outsl
fstp
and
in
popf
adc
and
lcall
and
pop
aas
adc
xorb
and
stos
sub
mov
dec
push
sub
pop
loopne
mov
xor
lahf
ljmp
push
dec
adc
xchg
and
ljmp
sbb
pop
inc
pop
dec
setg
adc
jp
fstpl
xchg
cmp
imul
daa
xchg
ljmp
jno
dec
push
aad
mov
xor
sti
jge
les
fbstp
sti
test
addr16
std
cs
jns
push
jge
notl
sub
rorl
mov
add
jg
dec
push
ja
sbb
push
outsb
ja
push
adc
cli
mov
aas
push
lods
imul
popf
mov
in
xor
mov
movsb
push
inc
mov
push
sbb
ss
push
ret
lcall
pop
ljmp
push
testl
mov
jl
imul
int
mov
mov
xchg
call
daa
mov
outsb
push
mov
and
push
fcmove
inc
jg
or
call
out
into
mov
and
and
lret
inc
push
sbb
dec
and
mov
adc
push
xchg
jg
rcll
xchg
push
inc
out
daa
sub
adc
scas
inc
sub
xchg
mov
sub
cmp
ret
or
stos
popa
pusha
jbe
imul
iret
adc
dec
pop
out
icebp
and
lods
mov
mov
sub
fs
stos
cmp
nop
popf
push
scas
pop
loop
dec
je
mov
daa
lcall
push
or
lret
lret
pop
pushf
rcll
loope
push
repz
sti
lcall
sbb
arpl
jle
xchg
or
jnp
adc
adcl
clc
adc
adc
jle
repz
and
insl
sarb
bound
insb
std
stc
sub
adc
cmp
daa
xor
mov
fs
cmpsl
xor
cmp
out
sbb
cmp
lds
daa
xchg
xor
das
js
es
into
lret
add
loopne
mov
push
lods
pop
mov
jae
push
cltd
or
cmp
std
or
mov
testl
orb
xor
mov
cs
jecxz
mov
idivl
pop
cmpsb
pushf
mov
fbld
cmc
outsb
mov
rcll
xrelease
dec
mov
insb
imul
std
shr
rcrb
jecxz
pop
xchg
push
inc
inc
push
lcall
jae
add
mov
jecxz
xor
pop
push
mov
repz
pop
popa
push
dec
clc
fcoms
imul
in
cltd
inc
testl
mov
push
mov
lods
sbb
clc
or
or
jbe
aad
and
das
or
inc
das
add
daa
mov
sbb
mov
in
in
es
pop
sbb
out
daa
iret
das
jle
mov
pusha
jmp
js
sahf
jo
loop
or
mov
xchg
sbb
pushf
mov
movsl
cwtl
fbstp
sbb
sbb
mov
mov
jle
inc
test
pop
loopnew
inc
xor
adc
outsb
rcrb
jae
int3
cli
dec
adcb
lcall
arpl
lret
adc
mov
imul
sbb
cmp
jae
test
repnz
push
insl
jge
sub
pop
push
repnz
iret
or
repnz
dec
mov
lahf
sub
loop
arpl
push
shlb
jp
and
dec
pop
xchg
dec
and
in
cmp
push
ret
jae
aaa
inc
insl
test
lds
mov
popf
dec
aas
xor
dec
inc
daa
rorb
fdiv
add
add
ret
jp
fbstp
mov
cmpsb
cltd
mov
jmp
inc
pushf
pop
push
mov
imul
mov
dec
push
loop
jnp
bound
scas
xchg
fsub
adc
add
test
mov
and
imul
lds
out
mov
push
mov
mov
or
fs
lods
inc
inc
out
test
push
cmpsb
xchg
push
inc
and
push
out
lea
iret
pop
jae
sbb
push
mov
or
call
subb
movsl
sub
mov
push
dec
stos
mov
and
mov
notb
push
stos
push
push
push
or
mov
adc
sti
mov
stos
dec
dec
sub
mov
sbb
push
inc
lret
stc
inc
shlb
and
cwtl
jnp
lods
pop
pop
out
fwait
dec
aam
jecxz
or
pop
cmp
push
sub
hlt
push
in
cmp
jg
or
inc
inc
sub
lds
jge
xor
sti
mov
mov
pop
pusha
addr16
and
shll
lods
aas
push
and
popa
xchg
sub
icebp
fisubrl
scas
xchg
aaa
movsb
mov
add
mov
addr16
push
sahf
mov
mov
xor
arpl
mov
sbbb
adc
andb
pop
in
cmpsl
push
mov
inc
aaa
lret
int3
leave
xor
rcrl
stc
and
mov
cmpsb
mov
out
test
ja
cmp
add
ljmp
jle
je
mov
fsubs
in
fsubrp
fwait
xchg
pop
je
icebp
sbb
xor
test
dec
mov
daa
mov
out
pop
mov
add
mov
xchg
pop
and
popa
outsb
add
lret
sbb
mov
test
imul
lahf
fdivl
out
add
jl
testl
pop
push
cmp
push
mov
and
pusha
push
test
cmp
or
or
inc
jecxz
cmp
out
das
mov
dec
cld
shll
inc
fnsave
mov
ja
sub
pusha
sti
or
sarb
outsb
sbb
xlat
and
jns
fstpl
push
movsl
xchg
out
dec
inc
or
lds
jno
gs
in
xor
cld
int
nop
movsl
xchg
pop
outsb
mov
mov
push
cwtl
fxch
in
call
ja
iret
jmp
ss
or
inc
call
jmp
ss
xor
dec
adc
cmc
sub
sbbl
mov
aaa
sahf
fnstenv
icebp
jne
out
aad
mov
rorl
lea
and
xchg
out
mov
jo
push
into
add
mov
in
fnstenv
pop
js
sub
js
xchg
data16
adc
jge
movsb
jnp
push
daa
or
fimull
mov
test
arpl
pop
push
lds
rep
jno
pop
aas
fs
cmp
inc
ret
subl
inc
inc
sub
lcall
fistps
push
lds
cld
insl
sub
into
lret
test
add
cmp
ret
fucomip
fimull
sarl
xchg
dec
orl
mov
cmc
mov
sbb
mov
mov
xchg
shrl
jbe
jle
jne
xor
add
or
icebp
mov
pop
scas
push
and
add
out
test
fnstsw
aaa
mov
add
pop
bound
enter
push
mov
dec
add
adc
test
add
stc
fldl
outsb
fisubl
ljmp
sti
enter
jge
and
dec
add
pop
das
or
mov
jle
dec
aaa
push
pop
xchg
sbb
jae
or
dec
test
inc
mov
icebp
pusha
jle
lods
shlb
mov
mov
push
dec
lahf
add
scas
fsubrl
push
imul
rcr
sbbb
pop
jo
int3
je
daa
ficompl
xchg
lret
inc
stos
nop
xlat
pop
insl
daa
test
mov
sbb
jns
mov
or
jbe
jecxz
out
inc
mov
mov
cld
jne
adc
adc
jg
sub
jmp
loope
xor
mov
fwait
push
dec
push
cmp
jb
dec
js
inc
xchg
mov
cmpsl
cwtl
or
mov
fstl
cmp
aad
aaa
inc
pop
adc
xor
push
and
int
scas
shlb
push
jo
mov
dec
sub
cld
sub
push
add
call
mov
or
push
push
sbb
push
pop
sbbb
dec
into
cmpsl
cltd
mov
jle
xchg
push
int3
add
pop
insl
adc
push
shrb
push
sub
xor
das
test
xor
cmc
pop
pop
xchg
push
push
mov
inc
xchg
mov
push
bound
xor
rcl
rcrb
pop
ja
mov
mov
lahf
lret
push
cmpl
push
cmc
dec
sahf
sbb
mov
loopne
lods
pushw
jge
dec
adc
in
push
jns
pop
fmul
inc
cmp
xor
fs
fwait
or
mov
pusha
aaa
lock
add
inc
and
jecxz
jle
pop
aaa
mov
mov
lret
rcl
mov
jo
mov
mov
sbb
das
pop
aam
cmp
shlb
loope
push
mov
pop
xchg
outsb
push
jns
test
rcl
fstl
cmp
pop
push
rep
adc
lahf
lds
mov
xor
pop
inc
sbb
cltd
scas
push
out
jl
or
std
cld
push
pop
adc
mov
xchg
mov
and
mov
fdivrs
mov
sbb
lock
rclb
mov
ficoms
mov
dec
dec
or
xchg
pushl
ret
xlat
and
lds
cmp
cmpsl
rol
sbb
dec
out
dec
rclb
adc
mov
jl
push
out
ja
xchg
adc
sub
dec
lret
or
test
sbb
cmp
jp
xorb
popa
in
iret
and
ljmp
mov
in
sbb
fs
pushf
adc
icebp
stos
pop
pop
push
cwtl
bound
xor
inc
xor
in
jge
jmp
popl
mov
jne
scas
sub
dec
and
lcall
hlt
pushf
and
fs
sahf
sub
fwait
jae
adc
mov
add
das
add
mov
jge
dec
aas
jmp
dec
lret
jmp
idivl
add
pop
inc
lods
push
out
adc
ds
xor
dec
adc
cmp
cltd
lds
xlat
xor
push
dec
imul
loop
popf
inc
mov
into
test
aad
test
dec
fs
mov
les
dec
push
sub
test
test
cmp
pop
push
aas
push
sti
or
rcl
aam
inc
cmc
test
mov
jbe
pop
pop
push
cld
xchg
test
push
mov
jge
push
xlat
jmp
cld
out
mov
pop
jae
jecxz
push
lret
call
jecxz
and
mov
fstpl
and
jmp
je
fsubr
mov
mov
sbb
fldt
clc
cmp
lcall
inc
outsl
cmpsl
cmp
cs
lods
in
in
arpl
sub
pop
shll
push
shl
ret
xor
push
nop
imull
je
shl
sub
push
mov
fimuls
xchg
xor
std
outsl
and
loopne
int3
in
jmp
cmp
movsl
xchg
sub
test
fbld
flds
jp
pop
add
movsl
adc
push
sti
xor
in
adc
stos
sbb
lret
je
adc
mov
imul
in
or
mov
mov
mulb
rclb
mov
shlb
or
and
sub
xchg
jge
std
fs
les
test
arpl
xor
call
loop
imul
sub
mov
cmpb
fsubl
aad
xchg
or
cmc
imul
lret
or
push
mov
push
dec
jge
mov
cld
mov
arpl
stos
xchg
jo
bound
leave
div
aas
jo
dec
jbe
cltd
outsl
cltd
adc
xchg
mov
lds
subb
je
lahf
test
and
icebp
mov
mov
dec
pop
push
add
or
test
into
push
test
das
hlt
inc
dec
xor
sub
rol
lret
or
movb
sahf
int
mov
lods
mov
cld
pop
nop
cmc
fldt
fidivl
in
movsl
movsb
sub
adc
inc
in
sbb
fistl
or
mov
dec
and
add
icebp
pop
sub
mov
push
mov
dec
and
mov
mov
int
sbb
push
movl
and
jnp
lock
lds
or
mov
lret
or
cmp
in
push
xchg
hlt
cmp
mov
shl
push
test
inc
mov
idivb
sbb
insb
lock
xchg
push
jmp
aam
enter
cld
fwait
repz
out
jnp
test
imul
pop
les
mov
ror
add
add
rcrl
dec
adc
cmpsb
sub
xor
outsb
sub
lcall
loope
jge
sub
inc
or
sbb
addr16
xor
jnp
cs
in
dec
lds
test
sbb
int
data16
movsb
dec
jge
ja
out
and
pop
nop
pop
in
shl
ficompl
addr16
call
jecxz
sbb
sbb
xchg
mov
and
push
sub
scas
in
stc
scas
inc
divl
data16
into
jo
dec
in
add
aad
lret
std
xor
gs
std
mov
and
jmp
int3
add
movsl
xchg
inc
ret
fstl
imul
jge
movsb
sub
and
xchg
insb
scas
ret
push
enter
bound
sbb
jnp
xchg
lods
mov
push
movsl
movsl
sub
cld
jge
rcrb
sub
add
out
scas
hlt
add
subb
ror
ret
mov
insb
sub
xchg
aaa
jnp
pop
xor
pushf
in
jle
imul
cmp
cmp
inc
mov
mov
mov
dec
jge
sbb
jecxz
jecxz
mov
cltd
inc
scas
mov
cld
xor
push
sbb
cltd
push
pop
scas
addb
pop
push
dec
je
xor
jp
popf
addr16
add
int3
imul
push
lret
sti
adc
movhps
xor
jo
add
pop
push
enter
pushw
into
inc
sub
dec
mov
mov
iret
sti
insb
mov
outsl
xor
fs
daa
addr16
mov
add
push
fistl
jl
inc
dec
sbbl
sub
in
or
and
or
or
pop
fisubs
lret
sbb
in
shll
mov
insl
add
adc
fimull
cmc
call
jo
mov
cmpsb
iret
out
fstps
cmpsb
lods
pop
xlat
iret
test
dec
int
pop
sete
ror
add
add
jno
inc
pop
pop
test
fildll
mov
lret
test
imul
xor
xor
leave
rolb
cmc
scas
dec
js
cmpsb
scas
leave
inc
mov
stc
fwait
jle
fsubrs
lcall
insl
inc
xchg
cmp
cmc
dec
frstor
orl
xchg
mov
cli
dec
sbb
daa
and
sub
xor
xchg
fadd
xor
popa
cmc
arpl
push
push
pop
stc
add
pop
push
and
pusha
das
lahf
jle
mov
adc
cmp
xchg
fistpll
mov
aas
push
dec
jp
adcb
fsqrt
and
mov
mov
mov
pop
enter
xor
std
adc
test
hlt
shl
les
mov
sub
ja
mov
cmp
repz
push
inc
insl
cmp
inc
cwtl
pop
mov
mov
lcall
mov
rol
sbb
fwait
test
lods
jo
lcall
cltd
adc
fimull
minps
mov
inc
jae
mov
andl
xchg
hlt
jecxz
data16
xchg
mov
xchg
shll
xor
call
cli
ror
test
mov
adc
add
xor
and
test
mov
lds
xchg
ret
mov
loop
or
jno
int
leave
fistl
add
sub
scas
icebp
repnz
or
cmp
int3
push
push
aaa
or
addr16
adc
stc
mov
aad
insl
push
lret
add
xor
or
mov
into
jnp
mov
mov
fmuls
fdivr
jo
sub
js
xchg
jl
mov
mov
xchg
imul
rorb
fnstsw
mov
aaa
xor
mov
js
fsubrl
stos
jp
jae
push
cs
ret
push
dec
stc
sub
add
lret
fstp
les
xchg
inc
divl
jno
pop
xor
push
scas
jo
jnp
mov
push
lret
mov
inc
sub
jo
or
dec
fs
mov
mov
shlb
in
notl
and
mov
xchg
fimuls
testl
push
add
mov
cmc
arpl
mov
push
pushw
lahf
xchg
fildll
enter
mov
std
xchg
add
iret
pop
mov
mov
xchg
mov
andb
outsl
xor
enter
pop
sub
rcrl
inc
mov
out
sub
sbb
mov
xchg
xor
xchg
rcr
stc
xchg
and
inc
mov
loop
jl
icebp
shlb
sbb
lret
rcll
pop
sbb
lret
rol
push
daa
imul
mov
xor
jmp
arpl
mov
icebp
nop
je
jae
push
rcrl
cmc
rcrl
roll
push
pop
into
adc
jmp
pop
aaa
pop
les
inc
inc
add
inc
mov
or
jecxz
fwait
and
pusha
ret
in
push
adc
mov
cmp
xchg
test
add
add
mov
or
movups
adc
jnp
cmpsl
arpl
arpl
js
jl
mov
pop
pop
ret
xor
mov
dec
ds
mov
movsb
and
jecxz,pn
cmpsb
std
bound
outsl
lods
mov
cmp
ds
out
cmp
aaa
dec
pop
repz
cld
dec
in
dec
xchg
loope
ljmp
cmp
ljmp
mov
pusha
jge
cmp
mov
int3
xorl
sub
int
pop
nop
xlat
imul
ret
dec
pop
outsb
mov
add
pop
xor
cmp
pop
xor
lods
push
sub
rorb
mov
rcrl
hlt
mov
add
aam
mov
mov
je
incb
daa
xor
stc
nop
popf
loop
scas
adc
dec
movl
aaa
scas
pop
pop
pop
nop
cmp
popa
add
jge
cmp
and
xchg
fisubrl
sahf
xor
test
xor
repz
sbb
adc
dec
das
pop
sub
inc
cmp
add
lret
mov
sbb
aad
sbb
mov
outsb
loopne
std
and
arpl
dec
or
movsb
push
inc
loopne
push
lods
add
jo
aas
jae
jns
inc
lods
or
cmc
dec
mov
mov
stos
fisttpl
mov
sub
push
mov
adc
jno
mov
and
push
cld
cmp
adcb
clc
inc
xchg
cmpsb
std
leave
int
mov
jp
inc
push
inc
pop
test
inc
mov
insl
call
mov
sar
movsb
icebp
fcmovbe
jbe
dec
push
popa
pop
cs
push
jmp
mov
jg
inc
inc
or
sub
and
pop
das
inc
jmp
arpl
pop
cs
stos
enter
mov
jnp
test
jmp
jecxz
mov
call
fdivp
aaa
or
inc
jbe
fildll
mov
int3
push
daa
inc
sahf
adc
cli
lcall
pop
fnsave
pop
add
jl
adc
cld
sbbl
stc
daa
pop
or
fs
mov
punpcklbw
mov
inc
insb
jp
lret
or
cmp
aas
or
lods
or
bound
cmp
sub
das
insl
fcompl
or
cwtl
test
mov
jo
cwtl
cmp
out
je
xchg
xor
xchg
pushf
mov
jno
xor
xchg
leave
xor
jo
inc
aas
mov
and
sbb
cmp
je
xor
mov
dec
test
push
or
lock
hlt
pop
mov
sbb
fisubs
std
mov
leave
jmp
clc
in
add
shlb
mov
popa
ds
xchg
sub
dec
ja
push
or
jmp
lret
leavew
push
mov
addb
xchg
add
cli
dec
or
add
loop
mov
insl
inc
rcrb
nop
sub
cld
jb
jbe
xor
rolb
xor
sbb
bound
nop
xchg
xor
dec
dec
dec
adc
or
dec
mov
add
sub
in
insb
pop
dec
icebp
sub
add
jns
inc
pop
adc
addr16
mov
pop
add
add
in
xchg
movsb
outsl
int3
adc
popa
push
lret
mov
arpl
xchg
imul
cmp
mov
shll
loop
sub
dec
or
jl
pop
fdivr
and
iret
mov
scas
pop
mov
mov
add
dec
into
scas
push
mov
int3
insl
add
push
movsb
outsb
jp
mov
outsb
mov
add
mov
out
and
add
int3
fs
hlt
dec
push
sub
test
jae
sbb
js
jo
insl
arpl
pop
jl
call
call
lret
xlat
lds
dec
sub
pop
decb
sub
out
in
push
test
xchg
xor
arpl
pusha
ret
xlat
mov
out
aam
sbb
jns
push
xor
outsl
add
popl
push
out
insb
push
rcrb
add
or
pop
lea
mov
out
insl
push
movsl
jmp
ja
sti
sbb
arpl
jbe
sbb
data16
in
iret
cli
dec
lods
inc
inc
xchg
mov
cs
fnstcw
push
jg
jp
addl
jp
fs
fcoms
dec
jne
and
lret
sub
and
pop
cmpsl
ret
add
into
bound
xor
cld
mov
js
cmp
xlat
sbb
dec
jo
push
push
cmp
or
rcrb
jbe
inc
scas
stos
subl
mov
jl
xor
pop
push
lret
sbb
adc
cmc
int3
std
push
pop
into
popa
stc
sbb
hlt
inc
mov
stos
and
jnp
cwtl
sub
push
gs
push
rclb
shlb
push
movsl
push
dec
leave
icebp
ret
out
xchg
or
loopne
sub
fnstcw
subb
ss
out
sub
lods
push
subb
outsb
cmp
jo
loope
aas
mull
jmp
cli
cmp
ja
xor
fstpt
aas
mov
cmc
jns
jo
imul
pop
xchg
and
enter
xor
je
shlb
repz
cmp
lcall
inc
push
sub
add
sahf
mov
ja
aas
imul
dec
adc
lods
push
or
jo
mov
cmp
loopne
sbb
xchg
jno
push
and
add
sub
and
and
jbe
gs
iret
jmp
mov
pop
sti
xor
out
aad
lret
iret
xchg
mov
and
insl
xor
fidivl
and
sub
iret
push
jno
mov
out
cmp
cmp
jge
or
scas
lahf
int
adc
ffreep
enter
pop
mov
sbb
inc
out
and
or
mov
pop
sbb
pop
inc
lcall
and
mov
xchg
push
lods
mov
xor
add
aam
imul
int
lods
adcb
les
dec
outsb
cmpsb
loop
pop
add
and
push
sahf
sarb
aaa
ds
les
pop
jg
pushf
sbb
sbb
ret
add
xchg
fists
mov
cmpsb
clc
and
mov
sbb
bswap
push
fimull
dec
loope
fistpll
dec
push
dec
mov
xchg
push
fs
stos
lret
mov
or
rcrl
sbb
clc
mov
pop
aad
sti
adc
sub
ds
ja
jp
repz
sbb
std
xchg
add
mov
enter
pop
testl
adc
lea
push
dec
aaa
mov
dec
sbbb
ret
out
jb
test
fdivs
cld
adc
sub
sub
and
test
pop
test
aas
jne
into
stos
scas
in
lahf
js
popf
fnstcw
xor
cmpsl
sahf
jmp
or
ret
bound
or
aad
pop
sub
mov
mov
mov
jg
lock
adc
cwtl
ds
js
mov
enter
loop
jmp
pop
stc
push
mov
xor
aam
inc
jp
mov
xchg
cmp
pop
scas
mov
mov
lcall
sbb
repnz
push
dec
arpl
scas
and
inc
mov
fs
aaa
fs
pop
jg
push
mov
xor
sarl
sub
sbb
and
or
in
rcrl
jmp
mov
xchg
push
mov
shll
test
std
loopne
sbb
lret
iret
cmc
es
mov
testb
repz
daa
cmp
cmp
pop
lahf
push
es
and
dec
push
loop
xchg
rclb
sub
sbb
or
into
xlat
sbb
jmp
mov
nop
lods
jle
mov
ficomps
repnz
in
pop
aas
sbb
out
loopne
dec
fdivrs
fs
gs
lcall
jb
rolb
mov
sbb
push
or
sub
mov
insb
mov
ss
sti
or
leave
mov
adc
fidivl
mov
stos
xlat
dec
pop
pusha
mov
and
outsl
in
cmp
cmp
cmp
out
icebp
mov
stos
pop
sub
sbb
mov
add
adc
movsl
popa
sub
jmp
pop
mov
outsb
ficoml
jno
or
inc
sbb
bnd
dec
jmp
scas
cmp
lea
sbb
fs
out
add
cltd
xchg
mov
aam
dec
in
cld
or
jae
xor
test
and
sub
into
and
xor
daa
iret
push
mov
push
cs
xchg
outsl
inc
push
inc
es
inc
pop
xor
scas
js
in
call
cmp
mov
scas
add
xchg
leave
mov
fsubp
push
mov
mov
push
sti
movsb
mov
mov
fsubrl
push
jbe
pushf
fs
cmp
mov
lcall
pop
adc
push
iret
enter
cwtl
movsl
cmp
add
pop
decb
movsb
inc
sub
push
jne
and
mov
sub
adc
loope
lods
ja
mov
xchg
adc
divl
int3
push
dec
xchg
pop
inc
xor
jge
push
xor
aaa
mov
and
dec
jge
push
mov
insl
sbb
lea
jb
cli
and
dec
sbb
sbb
clc
jl
mov
pop
adc
sti
rcrb
insl
aad
xchg
bnd
ss
cmc
xchg
mov
aaa
ret
shrl
fsubr
incb
push
mov
jno
fisubrs
dec
sbb
add
mov
add
in
dec
xchg
fdivrl
xchg
jecxz
cmp
push
push
add
push
stc
mov
and
fstp
popa
adc
dec
push
sbb
loopne
dec
into
pusha
jo
inc
adc
inc
jbe
aam
es
pushf
dec
sahf
jp
fsubr
enter
pop
adc
push
mov
dec
dec
loopne
mov
push
push
stos
nop
adcl
fiaddl
xor
das
mov
lcall
addr16
push
sub
sbb
cs
rorb
add
sbb
mov
into
and
sahf
hlt
out
in
jns
or
adc
jmp
xor
arpl
lods
xchg
sbb
subb
jns
loopne
mov
movsl
fwait
ja
js
mov
int3
cmp
or
sti
sub
sub
xchg
or
jne
fisubs
jbe
inc
mov
or
mov
push
lahf
sbb
xor
add
mov
sub
aad
es
in
mov
mov
mov
jo
lods
frstor
movsb
lret
roll
pushf
fstps
into
pushf
hlt
lock
pushf
rcrb
mov
sub
rcrl
outsl
rcr
andl
jp
test
lret
mov
mov
push
ret
push
sbb
cli
imul
add
iret
rorb
sub
xor
testl
imul
mov
xchg
mov
pop
cltd
pop
sahf
leave
dec
clc
sub
inc
rcrb
loope
mov
and
and
xchg
pop
loop
jmp
mov
das
decl
mov
jb
js
insb
andb
mull
lahf
jne
mov
fnstsw
pop
bound
imul
push
pmulhuw
and
pop
repz
out
mov
cmp
dec
mov
sbb
rclb
cld
fadds
call
jbe
sub
arpl
inc
xlat
cwtl
and
call
shll
mov
mov
fwait
outsl
sbb
push
imulb
push
cmpsb
pop
stos
or
mov
leave
pop
repz
xorl
mov
test
cmovnp
test
ljmp
lret
dec
mov
push
jge
hlt
add
mov
adc
shlb
movl
cs
pusha
fdivrs
fsubs
and
in
popf
cmp
mov
dec
loop
stos
icebp
adc
jl
pop
movsb
mov
call
and
ret
push
push
imul
sub
scas
mov
xchg
mov
cmp
les
jg
lods
lret
and
jecxz
pop
xchg
imul
cld
mov
pop
xchg
sbb
dec
fdivl
pop
fmuls
dec
jl
or
data16
mov
pusha
lds
xchg
ljmp
loope
push
out
adc
scas
sub
mov
pop
testb
cmpsb
cmp
les
jne
popa
cwtl
dec
mov
pop
into
imull
shll
mov
insl
aad
add
pop
jg
inc
inc
fiadds
hlt
rcr
ja
mov
push
pop
push
or
sbbb
mov
xchg
mov
jae
xor
mov
jmp
loopne
pusha
out
xor
js
sub
bnd
mov
sahf
or
xor
cs
ss
movsl
mov
scas
or
lret
add
or
pop
aas
fs
push
mov
rcrl
sub
add
xchg
pusha
add
jecxz
jno
popf
jge
enter
in
insb
xchg
mov
or
push
and
int3
addb
xchg
sti
or
dec
sahf
adc
xchg
es
iret
inc
add
movsb
push
jns
test
push
jo
test
mov
es
inc
cmp
sbb
xor
dec
popf
adc
inc
js
test
fcomip
adc
stos
mov
negl
ret
shll
imul
hlt
sbb
repz
les
mov
lret
mov
cmp
es
ret
dec
loopne
add
mov
push
push
loope
aaa
or
or
jg
shl
movl
jno
jae
mov
jnp
sbb
lret
or
jg
mov
inc
aas
sbb
lea
imul
mov
xor
scas
pusha
in
adc
xor
leave
subl
cmpsl
inc
mov
or
inc
std
loopne
sbb
mov
mov
ret
shll
sub
xor
sub
scas
in
je
loope
outsb
fstp
in
mov
mov
push
add
cmp
xor
cmpsb
into
daa
les
cli
rcll
add
call
push
mov
add
fcmovbe
xor
mov
mov
into
popa
push
jne
sub
sub
ja
insl
and
xchg
mov
aad
clc
adc
xchg
repz
imul
clc
call
fwait
sbb
popa
movsb
or
jns
push
clc
pop
ja
orb
fstpl
sbb
call
aaa
push
xor
push
out
sub
icebp
in
or
cmpsb
cmpsl
aaa
xor
imul
lock
or
dec
cmp
mov
lock
enter
and
lods
cmc
loop,pn
int3
pop
fnsave
sarb
adc
lret
dec
shll
pop
jle
xchg
mov
xchg
pop
and
int
mov
movsl
mov
cmp
lahf
pop
out
test
jo
mov
lods
push
nop
mov
loope
out
or
out
jp
push
jae
out
xchg
imul
insl
outsb
add
sti
mov
fdivrs
out
insb
xor
fnstenv
shl
aas
adc
add
cwtl
xchg
in
add
in
cs
in
in
mov
mov
mov
inc
inc
sub
pop
movsb
hlt
push
jp
ljmp
lds
sbb
mov
inc
and
mov
in
pop
push
test
jl
mov
loope
loop
xor
fadd
and
ret
cmp
pop
pop
scas
adc
popa
test
pop
out
fstl
inc
loope
aam
sbb
mov
push
sub
mov
je
stos
es
xchg
loop
jae
out
int
adc
testb
rcrb
repz
mov
repz
dec
cltd
pop
sbb
sbb
popf
jae
jb
adc
sbb
into
das
mov
add
popf
inc
in
sti
int
mov
stos
test
xor
pop
fwait
or
mov
aam
gs
push
outsb
mov
in
mov
aam
into
xor
adc
mov
jno
test
jnp
sti
push
inc
add
xor
pop
pop
fwait
clc
pop
std
call
cmp
icebp
test
inc
pop
cwtl
imul
sub
test
cmp
mov
gs
push
push
hlt
dec
or
jl
sbb
push
scas
inc
pop
mov
inc
sub
pusha
xchg
aad
.byte
mov
gs
add
add
add
add
add
add
orb
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
adc
add
addb
add
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
rcrl
add
or
add
add
add
add
add
add
add
add
add
clc
ficomps
add
add
in
add
add
add
or
sbb
cmp
add
in
add
add
add
dec
loop
add
add
in
add
add
add
sub
add
addb
add
add
add
add
add
add
add
add
add
or
add
or
or
add
inc
add
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
imul
add
add
or
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
out
add
arpl
add
sbb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
dec
dec
inc
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
decl
inc
lcall
sbb
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
inc
ljmp
fcom
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
stos
test
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
movsl
mov
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
fstp
aam
movsl
mov
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
pushl
das
cs
mov
dec
mov
xor
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ja
add
sldt
add
add
add
add
add
add
add
add
add
pop
push
push
dec
lret
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
jmp
fstp
dec
enter
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
out
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
pushl
fcompp
jmp
fcompp
jmp
fcompp
jmp
fcompp
jmp
fcompp
jmp
fcompp
jmp
in
out
in
ljmp
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
out
in
ljmp
fcompp
jmp
fcompp
jmp
fcompp
jmp
fcompp
jmp
fcompp
jmp
fcompp
pushl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ja
add
fildl
add
incl
add
incl
add
incl
add
lcall
pop
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
jecxz
push
div
push
div
jmp
jecxz
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
lcall
pop
incl
add
incl
add
incl
add
incl
add
incl
add
fildl
add
sub
add
incl
add
incl
add
incl
add
incl
add
dec
enter
loope
jmp
loope
jmp
loope
jmp
loope
call
cld
sti
cld
cld
sti
call
loope
jmp
loope
jmp
loope
jmp
loope
dec
enter
add
incl
add
incl
add
incl
add
incl
add
incl
add
sub
add
imul
add
add
add
add
add
add
add
cmp
cmp
in
fdivrp
in
fdivrp
in
fdivrp
in
fdivrp
in
fdivrp
stc
stc
clc
stc
stc
clc
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
jbe
jae
out
loopne
out
loopne
out
loopne
out
loopne
in
in
jmp
in
in
jmp
jmp
in
jmp
in
jmp
in
pushl
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
pushf
lcall
in
jmp
in
jmp
in
push
hlt
repz
push
hlt
repz
in
jmp
in
jmp
in
jmp
in
lcall
add
incl
add
incl
add
incl
add
incl
add
mov
add
mov
add
add
add
add
add
add
scas
lods
test
jmp
out
jmp
clc
idiv
stc
clc
idiv
jmp
out
jmp
out
ljmp
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
scas
lods
stos
ljmp
ljmp
stc
stc
clc
stc
stc
clc
ljmp
ljmp
ljmp
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
scas
lods
stos
jmp
in
jmp
in
jmp
in
jmp
in
cli
stc
clc
ljmp
cli
stc
clc
jmp
in
jmp
in
jmp
in
jmp
in
scas
lods
stos
incl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
lods
in
jmp
out
in
jmp
out
cli
stc
clc
lcall
jbe
incl
inc
jmp
jbe
ljmp
xchg
xchg
incl
lcall
ret
mov
mov
jmp
rcl
decl
stos
stos
incl
lahf
lahf
inc
ret
ret
inc
ret
ljmp
mov
jle
lcall
xchg
xchg
lcall
scas
scas
inc
ret
scas
scas
scas
call
stos
stos
decl
cmpsb
cmpsb
mov
cli
stc
clc
in
jmp
out
in
jmp
out
mov
lods
incl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
lods
in
ljmp
in
ljmp
cli
stc
stc
lcall
pop
call
push
ljmp
jp
lcall
jle
incl
push
push
lcall
pop
lcall
jbe
jmp
ljmp
outsb
decl
dec
decl
mov
jbe
sahf
sahf
sahf
lcall
pop
decl
xchg
xchg
lcall
mov
jbe
dec
dec
dec
mov
pop
pop
pushl
jb
outsb
outsb
outsb
jp
jp
mov
jle
mov
outsb
call
addb
cli
stc
stc
in
ljmp
in
ljmp
mov
lods
incl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
lods
in
jmp
in
jmp
in
jmp
in
jmp
cli
cli
stc
ljmp
outsb
pushl
sahf
sahf
dec
into
into
fcmovu
xchg
xchg
xchg
inc
ret
mov
call
sahf
sahf
pushl
xchg
dec
into
into
ljmp
stos
stos
incl
fcmovu
inc
ret
mov
cmpsb
cmpsb
fdivrp
repz
into
into
jmp
out
lcall
mov
mov
scas
scas
ljmp
ret
mov
mov
into
into
into
ljmp
jb
cli
cli
stc
in
jmp
in
jmp
in
jmp
in
jmp
pushl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
scas
out
in
jmp
out
in
jmp
cli
cli
stc
cli
cli
stc
out
in
jmp
out
in
jmp
pushl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
scas
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
sti
cli
cli
sti
cli
cli
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
mov
scas
incl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
lock
in
push
out
in
push
out
in
push
out
in
sti
cli
cli
out
out
out
push
div
call
rcl
jmp
loop
jmp
out
sti
cli
cli
push
out
in
push
out
in
push
out
in
push
out
in
pushl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
icebp
out
in
push
out
in
push
out
in
push
out
in
sti
sti
cli
push
div
decl
lcall
mov
fdivrp
xchg
xchg
xchg
pushl
jbe
lcall
jp
jp
mov
mov
mov
xchg
xchg
lcall
sahf
sahf
jmp
lcallw
pop
call
cmpsb
cmpsb
incl
scas
scas
incl
mov
incl
scas
scas
inc
ret
jle
jle
mov
incl
mov
cmp
lcall
xchg
jp
jp
scas
scas
scas
dec
lret
into
into
into
incl
lcall
mov
ljmp
call
lcall
xchg
xchg
decl
scas
scas
incl
xchg
xchg
sti
sti
cli
push
out
in
push
out
in
push
out
in
push
out
in
pushl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
loop
jmp
loope
jmp
loope
jmp
loope
in
jmp
push
out
in
push
out
in
push
out
in
push
out
jmp
out
in
jmp
out
in
ljmp
in
ljmp
imul
xchg
xchg
xchg
pushl
mov
pushl
jae
xchg
xchg
call
push
lcall
scas
lods
incl
inc
ljmp
imul
fs
ljmp
jmp
pushl
jp
ja
dec
dec
dec
jmp
lcall
pop
pushl
outsl
incl
push
push
call
push
dec
leave
jmp
in
jmp
jl
incl
inc
ljmp
push
jmp
test
decl
movsb
mov
ljmp
jb
jl
jnp
addl
mov
push
push
outsb
outsb
outsb
lcall
pop
dec
lret
fdivrp
scas
scas
scas
lcall
pop
lcall
pop
lcall
pop
jp
jp
jmp
pushw
jbe
sti
sti
cli
push
lock
push
lock
push
lock
push
lock
pushl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
fcompp
jmp
fcompp
jmp
fstp
jmp
fstp
jmp
ljmp
jmp
out
jmp
in
jmp
in
ljmp
ljmp
inc
mov
xchg
inc
fwait
cltd
xchg
decl
sar
lods
stos
call
xchg
mov
stos
test
mov
jmp
loop
ljmp
stos
test
mov
movsb
mov
pushl
xchg
xchg
call
jnp
decl
mov
decl
fcom
js
je
jno
insb
jmp
mov
jnp
jbe
movsb
mov
mov
lea
inc
ret
jge
ja
mov
lods
pushl
jbe
call
fcmovu
lcall
rcl
pushl
repz
mov
ljmp
scas
scas
lcall
pushl
into
into
sti
sti
cli
push
lock
push
lock
push
lock
push
lock
pushl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
ljmp
lds
call
lds
fmul
mov
fmulp
mov
fmulp
mov
mov
mov
mov
mov
mov
fmul
mov
fmul
mov
fmul
mov
fcmovne
mov
fcmovne
mov
fcmovne
mov
fcmove
mov
fcmove
mov
fcmove
mov
fcmove
mov
fcmove
mov
fxch
mov
fld
mov
fld
mov
fadd
mov
fadd
mov
fadd
mov
xlat
scas
call
lds
call
lds
call
les
call
les
call
ret
lods
call
ret
lods
mov
ret
aam
stos
call
shrl
rol
test
call
shrb
lret
mov
fcmovnbe
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovnbe
sar
out
sti
sti
cli
cld
sti
sti
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
pushl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
aaa
adc
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jl
mov
mov
lret
fcmovnbe
sar
fcmovnbe
sar
aad
div
hlt
cld
sti
sti
push
repnz
repnz
repnz
repnz
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
ss
test
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
jp
pushl
cmpb
fcmovnbe
sar
fcmovnbe
sar
sar
div
hlt
cld
cld
sti
push
repz
push
repz
push
repz
push
repz
pushl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
incl
add
decl
add
and
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
pop
call
insl
push
xchg
jg
ljmp
jmp
jle
ljmp
scas
scas
inc
ret
cmpsb
cmpsb
cmpsb
lcall
xchg
xchg
pushl
cld
cld
sti
push
repz
push
repz
push
repz
push
repz
pushl
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
or
and
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
xchg
outsb
decl
data16
dec
dec
dec
jmp
loop
lcall
mov
pushl
jb
jbe
jbe
lcall
ljmp
push
outsb
outsb
outsb
decl
cld
cld
sti
push
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
incl
add
ljmp
sbb
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
pop
inc
sbb
decl
out
in
pushl
jb
xchg
xchg
xchg
ljmp
mov
jmp
mov
inc
ret
ret
pushl
rcl
cld
cld
cld
push
hlt
repz
hlt
repz
hlt
repz
hlt
repz
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
sub
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
pushl
jle
mov
lret
fcmovnbe
sar
loopne
xlat
push
div
push
repz
cld
cld
cld
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
xchg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
inc
mov
sar
fcmovnbe
sar
cmc
hlt
repnz
std
cld
cld
push
div
push
div
push
div
push
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
adc
and
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
andb
mov
aad
fcmovnbe
sar
jmp
out
jmp
out
std
cld
cld
push
div
push
div
push
div
push
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
aas
sub
mov
andb
andb
andb
andb
andb
andb
andb
andb
andb
cmpsb
gs
call
out
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
imul
jecxz
cmc
in
loopne
in
mov
popf
push
mov
andb
andb
andb
andb
andb
andb
andb
andb
andb
xchg
jl
test
xchg
decl
addb
sahf
sahf
sahf
incl
std
std
cld
push
div
push
div
push
div
push
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
mov
andl
mov
andl
mov
andl
mov
andl
mov
enter
call
mov
and
mov
andl
mov
andl
mov
andl
mov
andl
nop
jnp
decl
inc
inc
mov
pop
pop
mov
ds
jbe
scas
scas
scas
std
std
cld
clc
div
clc
div
clc
div
clc
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
adc
mov
test
mov
test
mov
test
mov
test
call
mov
dec
cmpsb
pop
mov
test
mov
test
mov
test
mov
test
pushl
pusha
pop
lcall
cmpsb
cmpsb
inc
ret
out
out
into
into
into
lcall
repz
std
std
cld
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
adc
mov
test
mov
test
mov
test
mov
test
clc
repz
out
loop
mov
test
mov
test
mov
test
mov
test
dec
mov
sar
xlat
std
std
std
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
ud0
xchg
mov
xchg
mov
xchg
mov
xchg
cmp
std
std
sti
mov
xchg
mov
xchg
mov
xchg
mov
xchg
dec
mov
sar
loopne
xlat
std
std
std
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
push
mov
xchg
mov
xchg
mov
xchg
cmp
mov
xchg
mov
xchg
mov
xchg
sar
loopne
xlat
std
std
std
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
push
mov
mov
mov
mov
mov
mov
mov
xchg
cmp
mov
mov
mov
mov
mov
mov
mov
mov
sarb
sar
loope
fdivr
std
std
std
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
mov
mov
mov
mov
mov
inc
cwtl
ss
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
aam
loope
fdivr
std
std
std
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
mov
mov
mov
mov
mov
mov
cwtl
ss
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
aam
loope
fcos
std
std
std
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
mov
mov
mov
mov
mov
mov
cltd
xor
clc
hlt
loope
icebp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
aad
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
clc
cmc
in
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
aad
loop
fcos
std
std
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
mov
mov
mov
mov
mov
mov
lcall
in
loope
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
ffree
addr16
stc
imul
jmp
lret
jbe
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
loop
jg
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
aad
loop
std
std
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
lea
mov
lea
mov
fwait
xor
in
loope
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
out
cwtl
jmp
lret
jbe
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
repz
int
mov
lea
mov
lea
mov
lea
jmp
std
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
mov
mov
mov
mov
mov
mov
pushf
xor
in
loope
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
div
jmp
lret
jbe
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
fadd
arpl
loop
jg
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
jmp
std
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
nop
adc
mov
nop
adc
mov
nop
adc
mov
popf
xor
in
loope
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
jmp
rolb
jne
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
push
in
int
mov
nop
adc
mov
nop
adc
mov
nop
adc
mov
nop
adc
mov
pushl
insl
decl
call
xchg
xchg
mov
mov
lcall
addb
addb
call
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
sahf
cs
in
loopne
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
push
jmp
jne
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
fcmovnb
jmp
int
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
xchg
test
outsl
insl
push
mov
jle
jle
jle
jle
jle
jle
jle
jle
stos
stos
stos
aas
aas
aas
mov
ds
jbe
data16
outsb
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
lcall
or
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
lahf
sub
in
loopne
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
je
std
std
cli
je
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
fcmovnb
popa
push
in
int
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
mov
lcall
pop
dec
into
into
dec
into
into
pushl
jbe
jle
jle
mov
xchg
xchg
jmp
jmp
into
into
pushl
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
pop
inc
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
mov
in
fildll
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
in
loopne
fmulp
je
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
fcmovb
pusha
jmp
int3
jle
inc
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
xchg
ud0
rorl
loope
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
push
inc
xchg
or
inc
xchg
or
inc
xchg
or
inc
xchg
or
in
fildll
fidivrl
pusha
fidivrl
pusha
fidivrl
pusha
fidivrl
pusha
fidivrl
pusha
fidivrl
pusha
fadd
imul
faddp
jae
fidivrl
pusha
fidivrl
pusha
fidivrl
pusha
fidivrl
pusha
fidivrl
pusha
fidivrl
pusha
push
jmp
inc
xchg
or
inc
xchg
or
inc
xchg
or
inc
xchg
or
call
ret
loope
fdivr
in
fdivr
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
push
inc
xchg
or
rcll
inc
xchg
or
rcll
inc
xchg
or
leave
mov
in
fisubrs
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
popf
ffree
jb
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
jl
inc
xchg
or
rcll
inc
xchg
or
rcll
inc
xchg
or
rcll
jmp
fstp
jmp
loope
std
std
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
inc
xchg
or
rcll
inc
xchg
or
rcll
dec
mov
jmp
scas
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
jecxz
fadd
jb
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
inc
xchg
or
rcll
inc
xchg
or
rcll
inc
xchg
or
rcll
mov
cmpb
xchg
decl
stos
stos
ljmp
rol
lcall
mov
std
std
std
std
std
cld
std
std
cld
std
std
cld
std
std
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
ret
inc
xchg
or
ret
inc
xchg
or
ret
inc
xchg
or
ret
dec
movsb
daa
jmp
lods
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
xchg
fadd
jo
xlat
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
jp
inc
xchg
or
ret
inc
xchg
or
ret
inc
xchg
or
ret
inc
xchg
or
ret
pushl
cmpsb
mov
lcall
pop
jmp
gs
rol
outsb
outsb
outsb
jnp
jnp
xchg
xchg
xchg
ljmp
insl
pushl
jno
sahf
sahf
sahf
std
std
std
std
std
cld
std
std
cld
std
std
cld
std
std
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
ret
inc
cwtl
or
ret
inc
cwtl
or
ret
inc
cwtl
or
ret
dec
movsl
es
ljmp
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
sar
fcmovnb
outsl
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
push
jmp
inc
cwtl
or
ret
inc
cwtl
or
ret
inc
cwtl
or
ret
inc
cwtl
or
ret
dec
mov
mov
jmp
ljmp
popf
popf
lcall
into
into
ljmp
mov
in
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
ret
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
dec
cmpsb
and
ljmp
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
fadd
jae
fidivrl
pop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
ffree
js
inc
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
inc
cltd
push
call
lds
jmp
loop
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
ret
lcall
ret
lcall
ret
lcall
ret
lcall
jmp
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
push
call
inc
lcall
ret
lcall
ret
lcall
ret
lcall
xlat
lds
jmp
loop
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
lret
cmpsl
and
jmp
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
fcmovnb
jbe
inc
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
ret
fwait
add
xlat
mov
jecxz
out
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
les
inc
pushf
add
les
inc
pushf
add
les
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
rcrb
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
push
out
inc
pushf
add
les
inc
pushf
add
les
inc
pushf
add
les
ljmp
imul
sahf
sahf
sahf
ljmp
xchg
xchg
jle
jle
sahf
sahf
sahf
inc
rol
ret
inc
ret
in
in
addb
mov
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
les
add
les
add
les
add
les
and
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
shll
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
call
scas
push
fnstcw
inc
sahf
add
les
add
les
add
les
add
les
and
pushl
jno
mov
mov
lcall
pop
pop
decl
xchg
xchg
lcall
mov
jns
push
push
fstp
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
lds
add
lds
add
lds
add
lds
and
jmp
aad
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
jmp
aad
cld
stc
hlt
call
mov
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
faddp
xchg
iret
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
dec
lods
push
push
in
inc
lahf
add
lds
add
lds
add
lds
add
lds
push
pop
pop
pop
call
ret
mov
mov
jb
jb
fcmovu
fcos
ret
jmp
cmpsb
movsl
repnz
lcall
popf
popf
mov
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
add
mov
add
inc
mov
add
inc
mov
and
jmp
aam
dec
test
push
dec
test
push
dec
test
push
jmp
aam
jmp
aad
dec
test
push
dec
test
push
dec
test
push
dec
test
push
dec
test
push
dec
test
push
dec
test
push
dec
test
push
dec
test
mov
dec
test
push
dec
test
push
dec
test
push
dec
test
jo
inc
mov
add
inc
mov
add
inc
mov
add
jmp
loope
jmp
in
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
dec
mov
or
enter
enter
enter
enter
enter
into
lods
sub
jmp
shlb
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
jmp
shlb
std
cld
stc
call
scas
pop
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
in
fnstsw
int
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
dec
cmpsb
dec
out
jecxz
dec
mov
or
enter
enter
enter
enter
enter
enter
fcmove
mov
in
out
loopne
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
dec
mov
adc
leave
mov
adc
leave
mov
adc
leave
mov
sub
jmp
shll
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
jmp
shll
jmp
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
jmp
mov
call
mov
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
dec
movsb
dec
call
mov
dec
mov
adc
leave
mov
adc
leave
mov
adc
leave
mov
adc
fcmove
nop
jmp
loope
jmp
in
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
in
in
in
in
in
in
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
or
lret
dec
movsl
adc
dec
movsl
adc
dec
movsl
adc
call
mov
jmp
shlb
leave
mov
dec
dec
mov
dec
dec
mov
movsb
std
cld
call
scas
arpl
leave
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
mov
out
loope
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
out
loope
dec
movsl
adc
dec
movsl
adc
dec
movsl
adc
dec
movsl
adc
ljmp
jbe
ljmp
aad
call
aam
jmp
addl
call
jne
pushl
addl
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
or
dec
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
shll
jmp
into
mov
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
jmp
into
mov
jmp
mov
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
ljmp
call
mov
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
dec
popf
inc
call
scas
imul
dec
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
lret
cmpsl
sbb
cltd
mov
imul
mov
test
ds
jno
ss
mov
pop
pop
mov
push
push
pushl
jne
int
int
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
adc
int3
test
and
int3
test
and
int3
test
and
int3
test
cmp
jmp
int3
mov
inc
lcall
lcall
lcall
call
lods
push
inc
lcall
lcall
lcall
lcall
lcall
lcall
lcall
push
in
inc
lcall
lcall
lcall
lcall
in
ffreep
dec
test
and
int3
test
and
int3
test
and
int3
test
and
mov
nop
mov
into
int3
leave
jmp
in
jmp
lcall
jmp
rol
in
in
fcos
movsl
movsl
movsl
stc
stc
stc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
adc
int
es
stos
es
stos
es
stos
es
stos
es
stos
es
stos
es
mov
jmp
lret
ret
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
jmp
lret
in
loopne
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
jmp
call
mov
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
dec
test
dec
stos
es
stos
es
stos
es
stos
es
stos
es
stos
es
stos
es
stos
es
fmul
cltd
jmp
jecxz
call
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
push
dec
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
aam
inc
jmp
leave
lahf
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
jmp
leave
lahf
call
scas
jo
rcll
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
call
out
in
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
inc
xchg
inc
in
ffree
dec
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
into
lods
sub
fwait
jmp
jecxz
call
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
std
std
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
jmp
sbb
iret
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
aad
dec
ffreep
sahf
mov
cmp
mov
cmp
ffreep
sahf
push
in
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
aam
dec
stos
insl
mov
cmp
mov
cmp
mov
mov
dec
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
iret
scas
xor
fmulp
sahf
jmp
jecxz
call
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
std
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
sbb
shrb
ss
scas
ss
scas
ss
scas
ss
scas
ss
scas
ss
mov
jmp
int3
test
inc
lcall
mov
mov
mov
mov
mov
mov
inc
xchg
inc
inc
lcall
fstpt
call
scas
js
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
fstpt
push
inc
xchg
inc
mov
mov
mov
mov
mov
mov
mov
mov
inc
cwtl
push
inc
lcall
div
jmp
call
scas
ss
scas
ss
scas
ss
scas
ss
scas
ss
scas
ss
scas
ss
scas
lcall
xchg
xchg
inc
mov
sar
rol
popf
popf
popf
incl
mov
sar
movsb
movsb
call
jge
lcall
aam
inc
rol
aam
aam
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
ffree
fwait
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shlb
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
dec
dec
call
xchg
xchg
call
ds
insb
call
push
call
pop
lcall
pop
mov
pop
pop
lcall
mov
mov
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
and
shlb
inc
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
fadd
lcall
xorl
mov
xorl
mov
xorl
mov
xorl
shll
call
mov
mov
xorl
mov
xorl
mov
xorl
mov
xorl
call
mov
mov
xorl
mov
xorl
mov
xorl
mov
xorl
mov
out
in
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
ljmp
mov
nop
jmp
test
call
aam
jmp
int3
lret
jmp
cwtl
xchg
incl
in
inc
sarb
movsb
movsb
movsb
push
hlt
repz
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
and
shll
call
mov
call
mov
call
mov
call
mov
call
mov
fdivrs
fstpt
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
shrb
push
in
loop
mov
jg
pushl
jg
pushl
jg
pushl
jg
pushl
jg
pushl
into
mov
call
scas
jle
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
imul
in
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
cmpsl
jmp
in
jmp
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
es
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
fnstcw
jmp
int
dec
pushf
arpl
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
fadd
popf
fadd
popf
dec
pushf
arpl
enter
enter
enter
enter
enter
enter
enter
enter
enter
ljmp
fadd
popf
dec
pushf
arpl
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
clc
bnd
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
test
jmp
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
sti
sti
cld
cld
cld
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
sub
aad
push
call
mov
push
call
mov
push
call
mov
push
fcmovb
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
jmp
shrl
call
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
cld
cld
sti
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
sub
mov
pop
call
mov
pop
call
mov
pop
call
mov
insl
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
jmp
aam
jmp
in
jmp
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
sti
sti
cli
cld
cld
sti
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
das
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
jb
call
mov
pop
call
mov
pop
call
mov
pop
call
mov
pop
jmp
aad
jmp
in
jmp
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
sti
cli
cli
cld
sti
sti
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
fdivrs
fs
fdivrs
fs
fdivrs
fs
fdivrs
ja
fdivrs
fs
fdivrs
fs
fdivrs
fs
fdivrs
fs
mov
out
loope
jmp
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
sti
cli
stc
cld
sti
cli
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
fnstcw
imul
fnstcw
imul
fnstcw
jnp
fnstcw
imul
fnstcw
imul
fnstcw
imul
out
loope
jmp
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
sti
sti
cli
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
aaa
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
cmp
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
fcmovb
outsl
jmp
xlat
mov
out
loop
jmp
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
cli
stc
stc
sti
cli
cli
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
cmp
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
test
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
fcmovnb
je
jecxz
mov
jmp
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
cli
stc
clc
sti
cli
stc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
cmp
fadd
jp
fadd
jp
fadd
jp
fadd
jp
fadd
jp
fadd
jp
loopne
mov
cld
fadd
jp
fadd
jp
fadd
jp
fadd
jp
fadd
jp
fadd
jp
fadd
jp
fadd
jp
jecxz
mov
jmp
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
cli
cli
stc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
aas
ffree
jg
ffree
jg
ffree
jg
ffree
jg
ffree
jg
ffree
jg
ffree
jg
ffree
jg
sti
stc
repz
push
icebp
loope
ffree
jg
ffree
jg
ffree
jg
ffree
jg
ffree
jg
ffree
jg
ffree
jg
ffree
jg
jecxz
mov
call
lcall
xchg
xchg
xchg
incl
call
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
stc
clc
idiv
cli
stc
stc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
inc
fmulp
test
fmulp
test
fmulp
test
fmulp
test
fmulp
test
fmulp
test
fmulp
test
fmulp
test
in
loopne
jmp
xlat
cmpsl
fmulp
test
fmulp
test
fmulp
test
fmulp
test
fmulp
test
fmulp
test
fmulp
test
fmulp
test
in
mov
decl
dec
jmp
lcall
pop
lcall
push
lcall
pop
jmp
loopne
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
clc
clc
idiv
cli
stc
stc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
ljmp
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
icebp
call
in
loope
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
ret
aaa
aaa
call
mov
lcall
popf
pushf
push
repz
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
stc
stc
clc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
decl
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lock
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
sti
clc
icebp
cli
imul
push
in
xlat
jmp
xlat
test
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
lret
nop
jmp
loopne
fcom
sar
jecxz
fdivrp
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
clc
div
stc
stc
clc
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
adc
loope
xchg
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
int
jmp
iret
pushf
jmp
in
jmp
in
out
in
ljmp
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
stc
clc
idiv
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
movsl
xchg
jb
loop
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
iret
pushf
jmp
fdivrs
call
icebp
out
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
stc
clc
idiv
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
cmp
daa
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
lcall
jb
jmp
cmc
hlt
ljmp
loop
jmp
jbe
lcall
into
int
test
cmpsb
incl
rcl
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
push
cmc
hlt
clc
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
incl
add
decl
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
dec
mov
push
div
repz
jns
js
outsb
outsb
insl
lcall
pop
lcall
pop
pop
ljmp
push
push
pushl
mov
repz
cmc
repz
cmc
repz
cmc
repz
cmc
repz
cmc
repz
cmc
repz
cmc
repz
cmc
repz
cmc
repz
cmc
repz
cmc
repz
clc
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
or
pop
ljmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
aam
jmp
mov
mov
xchg
xchg
push
repz
hlt
repz
pop
pushl
outsb
insl
call
rcl
mov
fwait
lcall
fwait
lcall
hlt
repz
hlt
repz
hlt
repz
hlt
repz
hlt
repz
hlt
repz
hlt
repz
hlt
repz
hlt
repz
hlt
repz
hlt
repz
hlt
repz
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
incl
add
incl
add
incl
add
incl
add
decl
or
ljmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
fcmovnb
call
in
call
icebp
out
push
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
hlt
repnz
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
leave
lods
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
xlat
mov
jmp
fdivrs
call
in
jmp
in
push
out
in
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
div
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
push
pushl
mov
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
fnstcw
call
loopne
call
in
jmp
in
call
out
in
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
cmc
hlt
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
add
dec
lds
stc
cmc
out
stc
cmc
out
stc
cmc
out
push
in
in
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
ljmp
cmpb
nop
mov
xchg
insb
pushw
jmpw
mov
cmp
xchg
mov
mov
inc
ret
lcall
mov
mov
js
insb
jmp
xchg
decl
stos
mov
jmp
out
jmp
scas
cmpsb
decl
jp
decl
sahf
xchg
jnp
outsl
lcall
mov
ljmp
lcall
mov
mov
xchg
decl
loope
addl
cmp
xchg
xchg
call
jnp
fcom
aad
enter
jo
outsl
ljmp
ret
ret
mov
mov
lcall
popf
pushf
decl
jnp
call
jg
call
iret
int
repz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
cmc
repz
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
hlt
repnz
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
jmp
push
decl
dec
lcall
outsb
insl
cmp
cmp
cmpsl
movsl
movsb
ds
cmp
arpl
jp
js
mov
cmp
cmpsb
movsl
mov
ljmp
mov
pushl
je
outsb
insl
imul
popa
popa
pushl
jae
xchg
xchg
nop
in
ljmp
dec
dec
dec
call
insb
push
xchg
jne
dec
dec
dec
ljmp
jmpw
pop
lcall
push
lcall
push
call
push
call
push
decl
test
jmp
inc
inc
ljmp
insb
call
into
lret
decl
pop
pop
lcall
imul
sub
inc
mov
cwtl
call
mov
pushl
jbe
repnz
out
call
push
push
lcall
pop
jg
jge
mov
scas
lcall
pop
call
jae
lcall
pop
mov
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
hlt
repz
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
testl
add
incl
add
incl
add
incl
add
incl
add
incl
add
mov
push
repz
lock
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
jmp
mov
jne
decl
xchg
xchg
jmp
sarb
mov
scas
ljmp
mov
dec
lret
enter
xchg
fcom
sar
fcom
sar
fwait
lcall
mov
imul
in
jmp
decl
inc
call
dec
lcall
pop
ljmp
mov
ljmp
test
mov
popf
fwait
ljmp
push
jmp
enter
mov
stos
in
jmp
cmpsl
pushl
insb
imul
lock
jmp
lret
mov
ja
lcall
xchg
xchg
jmp
in
dec
into
int3
fcmovnu
xlat
js
jbe
iret
into
int3
call
mov
mov
mov
mov
pop
dec
into
int3
inc
mov
lcall
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
repz
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
repz
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
repz
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
repnz
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
repnz
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
push
repnz
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
fcom
aam
call
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
jmp
out
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
out
out
jmp
repz
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
push
icebp
out
out
in
ljmp
in
ljmp
in
ljmp
in
ljmp
callw
cmpb
lcall
mov
mov
pushl
mov
xlat
lcall
pop
ljmp
push
incl
sahf
pushf
ljmp
imul
mov
mov
out
in
ljmp
mov
jmp
lods
stos
jge
jnp
stos
test
in
jle
jnp
pushf
lcall
enter
lahf
sahf
pushf
pushl
jo
stos
test
mov
mov
sahf
pushf
decl
xchg
xchg
incl
in
ljmp
xchg
xchg
incl
test
test
jmp
jns
ljmp
cmpb
xchg
xchg
decl
xchg
xchg
call
xchg
pushl
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
icebp
out
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
push
lock
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
pushl
je
iret
into
lret
lcall
pop
pop
incl
dec
ljmp
insb
pushl
jo
addl
lret
cmp
cmp
movsl
movsb
mov
lcall
pop
decl
jbe
decl
insl
insb
call
in
jmp
decl
jno
ljmp
insb
lcall
pop
jmp
pop
pop
lcall
call
push
ljmp
push
out
in
jmp
call
dec
incl
test
jmp
popa
lcall
push
pushl
jae
out
in
jmp
incl
jae
mov
push
push
lcall
dec
dec
call
call
dec
ljmp
insb
incl
inc
pushl
imul
pop
pop
pop
call
jne
pushl
jae
test
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
push
lock
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
pushl
je
in
jmp
lcall
mov
xchg
ljmp
mov
xchg
lcall
ret
aam
incl
xchg
nop
inc
ret
lcall
inc
mov
mov
lcall
in
jmp
pushl
jae
mov
lods
mov
mov
mov
fwait
jmp
xchg
xchg
ljmp
pop
pop
call
aam
inc
mov
sahf
popf
fwait
mov
popf
fwait
jmp
mov
cmpsb
lcall
pop
in
jmp
in
jmp
pushl
mov
xchg
mov
xchg
xchg
inc
ret
xchg
xchg
nop
dec
int
call
leave
lcall
pop
pop
pushl
mov
pop
pop
pop
mov
mov
fwait
fcmovu
aad
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
push
lock
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
push
out
in
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
lock
in
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
push
out
jmp
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
lock
jmp
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
out
in
jmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
out
in
jmp
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
mov
out
in
ljmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
out
in
ljmp
mov
add
incl
add
incl
add
incl
add
incl
add
mov
add
add
add
add
add
add
add
add
scas
scas
scas
push
out
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
call
in
push
out
in
ljmp
add
incl
add
incl
add
incl
add
incl
add
mov
add
xchg
add
add
add
add
add
add
add
add
addl
push
div
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
push
div
incl
add
incl
add
incl
add
incl
add
incl
add
xchg
add
add
add
incl
add
incl
add
incl
add
incl
inc
jmp
in
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
out
fdivrp
jmp
in
incl
inc
incl
add
incl
add
incl
add
incl
add
incl
add
imul
add
add
add
add
add
add
add
add
add
add
add
loop
loop
sti
cli
cli
jmp
in
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
in
sti
cli
cli
jmp
loop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
sub
add
fildl
add
incl
add
incl
add
incl
add
ljmp
push
cld
sti
sti
ljmp
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
ljmp
ljmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
dec
into
into
stc
stc
clc
push
lock
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
lock
stc
stc
clc
dec
into
into
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ja
add
sldt
add
add
add
add
add
add
add
add
add
and
and
ljmp
ljmp
incl
add
incl
add
incl
add
incl
add
incl
add
out
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
pushl
aaa
aaa
jmp
out
jmp
out
pushl
aaa
aaa
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ja
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
mov
mov
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
inc
mov
inc
mov
dec
dec
dec
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
call
push
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
push
push
push
lcall
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
out
add
arpl
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
imul
add
add
or
add
add
incl
add
add
add
cld
add
aas
clc
add
pop
jmp
add
pop
inc
add
add
incl
add
add
add
add
incl
add
add
incb
add
add
incb
add
add
cld
aas
cld
aas
cld
aas
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
push
pop
inc
pop
incl
pop
incb
pop
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
jmp
add
push
add
push
add
clc
add
clc
add
cld
add
incb
pop
incl
pop
inc
pop
push
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
cld
aas
cld
aas
cld
aas
incb
add
add
incb
add
add
incl
add
add
incl
add
add
add
add
inc
add
add
jmp
add
pop
clc
add
pop
cld
add
aas
incl
add
add
add
pushl
mov
xchg
push
les
int3
loop
jnp
js
lds
mov
or
jp
cmp
movsl
adc
cmpsl
andl
dec
ja
fcomip
lock
jnp
or
push
xorl
mov
inc
and
pop
sub
jecxz
push
fwait
jg
push
push
repnz
xor
daa
and
mov
push
lret
xchg
cmp
jle
sbb
inc
cmpsl
mov
adc
popa
mov
lahf
mov
jp
lods
shlb
sbb
daa
ret
pop
cmpsb
mov
repnz
inc
iret
pop
hlt
popa
adc
fs
push
testl
xor
daa
dec
nopl
orb
lods
cltd
pop
mov
fisubrl
in
fstpt
pop
sub
cmovge
jl
pop
or
imul
sti
add
sbbb
sbb
push
inc
cmc
fisttpll
push
pop
cmpsb
fildll
xlat
hlt
xlat
sub
xchg
or
jge
hlt
rcll
scas
lret
enter
pushf
cmpsb
ja
cmp
mov
iret
push
aaa
icebp
sbb
int3
ret
fldcw
imul
dec
aad
pop
mov
add
and
lds
shll
lcall
inc
xor
leave
scas
mov
scas
sahf
inc
mov
inc
pop
in
inc
add
jl
add
pop
sbb
pop
mov
fldcw
cs
and
shll
or
mov
shll
push
xlat
cld
lcall
mov
ja
lods
test
jns
mov
cmp
sub
imul
adc
cwtl
mov
lret
test
push
xchg
incb
mov
insl
push
xor
bound
sub
sbb
jno
cmpsb
mov
inc
rcrb
loop
dec
ret
adc
in
addr16
out
movb
mov
jmp
orb
mov
fidivrs
and
aad
xor
dec
cmpsb
cltd
pushf
push
cli
int
lahf
cmp
dec
mov
jo
mov
outsb
inc
adc
inc
andb
cmpsb
mov
shlb
xor
fsubl
out
testl
and
cltd
daa
xor
jno
pop
or
add
inc
cwtl
pop
popa
push
scas
inc
lods
mov
mov
ljmp
notl
push
jle
push
fmull
outsb
fadds
addb
in
and
cmpsl
xchg
adc
adc
add
out
jmp
xchg
inc
insb
and
push
enter
jo
push
stc
mov
ljmp
insl
pop
and
int
mov
int3
insl
xor
sbb
aad
xchg
arpl
push
mov
pop
shrb
push
movsb
mov
cmc
rcll
lahf
push
jo
int
jmp
fcomi
stos
inc
fistpll
icebp
pop
addr16
stos
xor
enter
and
and
adc
inc
mov
xor
adc
or
nop
out
out
xchg
leave
jns
test
test
sbb
cli
mov
jne
mov
mov
and
in
int3
push
jnp
jb
sub
les
in
push
jl
inc
jns
dec
ljmp
inc
ret
xlat
adc
pop
add
fdivrp
mov
jmp
aam
outsb
cmc
and
negb
ja
push
call
push
cli
inc
mov
arpl
mov
mov
sbb
inc
movsb
call
test
test
in
pushf
dec
add
test
dec
loopne
loop
test
insl
mov
sub
rcr
fadd
and
std
lds
into
pop
shr
jns
fsubl
daa
jae
xor
or
mov
inc
inc
xor
cli
mov
mov
outsl
sbb
xchg
fcompl
cmpsb
sub
lods
dec
stos
scas
xchg
inc
addr16
icebp
mov
ljmp
scas
inc
inc
in
cld
mov
jnp
scas
cltd
adc
jecxz
and
hlt
dec
ljmp
movsb
inc
test
push
adc
xor
xchg
fadds
stos
int
dec
sbb
sbb
outsb
sbb
out
leave
jl
sub
cmp
rcrb
loopnew
xchg
push
dec
mov
clc
bound
aam
lds
adc
lahf
mov
in
adc
lock
aas
and
ja
pop
add
push
mov
dec
pop
dec
shrl
bound
lret
xor
out
loope
popa
outsb
cs
addl
push
mov
out
fmull
or
and
lods
cmp
cs
orl
popa
mov
loope
aad
jp
push
imull
arpl
hlt
rolb
jecxz,pt
pop
shl
xlat
test
sbb
insb
fistpl
mov
faddl
add
add
add
add
add
or
add
add
clc
outsl
sub
jg
mov
push
add
cmpsb
aas
xlat
shrb
loop
fcoms
bound
enter
mov
push
xchg
xor
pushf
sar
fists
xor
pop
jecxz,pt
aam
xor
mov
ljmp
insb
adc
push
xlat
rcl
lret
dec
or
push
lret
in
push
adc
inc
shll
lods
stos
pop
pop
sub
sbb
daa
movsb
mov
sbb
and
and
fsubl
mov
ret
inc
lods
stos
mov
mov
pop
shll
rorl
pop
lcall
loop
daa
ds
adc
xor
addl
or
xchg
pusha
outsb
mov
popf
out
sbb
adc
jnp
push
js
sub
dec
mov
inc
mov
or
adc
call
ret
js
or
decb
stc
es
inc
test
and
outsl
sahf
pusha
stos
jns
fstpl
fisttpll
push
aad
mov
shrb
or
and
idivb
jnp
sbb
add
inc
lock
mov
imul
movsb
xchg
and
outsl
pusha
fidivs
cbtw
popf
sub
rcrb
dec
push
sbb
push
jmp
push
push
js
sub
sub
imull
rcrl
mov
js
movsb
or
scas
mov
xchg
or
jno
leave
cmp
inc
jns
outsl
jg
adc
mov
xor
add
les
test
mov
jg
popf
mov
mov
dec
dec
xor
jg
lea
hlt
push
call
ret
adc
pushf
sub
test
adc
scas
lea
pushf
xchg
call
inc
out
mov
sub
mov
push
out
pop
shl
std
inc
inc
sbb
and
jp
in
outsb
or
cmp
xchg
xlat
loopne
repz
fsubl
push
dec
sub
sbb
pop
push
cmpsb
je
adc
cmp
std
dec
arpl
sar
adc
xchg
fsubl
push
pushf
and
xchg
loopne
xchg
mov
aam
fwait
cmp
cmp
imull
sbb
sahf
imul
dec
lret
lds
add
pushf
jno
pop
inc
stos
xchg
inc
imul
lcall
movsl
fistl
cmp
imul
mov
lds
cltd
test
in
in
movsb
push
dec
sbb
ljmp
mov
mov
xor
push
jg
push
test
jno
fisttpl
sbb
cld
jge
dec
push
inc
popa
and
nop
rcrl
ja
mov
inc
inc
int
xchg
pop
jmp
loope
rcrl
xchg
cmp
sub
lock
ljmp
iret
sti
adc
jmp
mov
adc
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
pop
pop
mov
pop
mov
pop
mov
pop
cmpb
jne
mov
pusha
lea
push
xor
pushl
mov
mov
call
jmp
mov
popl
add
popa
lea
push
call
call
jmp
popl
add
jmp
add
jb
gs
xor
cs
insb
add
cmpsl
add
add
lea
lods
or
je
mov
mov
rep
jmp
add
inc
add
xor
add
fs
ret
xor
add
push
push
pushl
push
call
mov
mov
add
push
push
call
add
mov
xor
lea
and
mov
mov
addr16
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
je
mov
or
je
add
mov
add
sar
rep
add
jmp
mov
push
mov
push
mov
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
mov
mov
mov
mov
fstcw
lea
push
push
push
push
push
mov
add
push
push
push
push
call
push
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
popa
pop
ret
add
add
mov
and
add
sub
cmpw
jne
pusha
mov
mov
mov
add
add
mov
lea
lea
mov
mov
call
stos
add
cmpl
jne
popa
ret
pusha
mov
mov
add
mov
add
call
mov
cmp
je
add
jmp
sub
sub
shr
add
add
movzwl
shl
add
add
mov
add
mov
popa
ret
push
mov
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
cmpsl
push
and
cmpsl
push
add
nop
adc
out
je
jne
dec
add
add
fdivr
sbb
imul
inc
add
inc
adc
add
add
add
add
adc
stos
cld
pop
lcall
mov
mov
cmp
adc
cmpsl
sbb
sahf
mov
out
dec
lret
dec
inc
jle
xchg
ret
mov
imul
xchg
jno
rcrb
mov
xchg
add
add
das
inc
repnz
fcmovnb
scas
mov
xor
push
lahf
lcall
adc
mov
jp
popa
jns
mov
aad
in
gs
pop
mov
lea
insl
xchg
dec
inc
into
iret
pusha
mov
popa
adc
test
pop
mov
push
mov
push
dec
call
cmp
fldl2e
or
cmpsb
test
and
enter
cmpsb
subl
pop
mov
push
inc
fiaddl
jae
push
outsb
lcall
subl
pusha
popa
popf
aaa
pop
dec
mov
aad
mov
add
add
add
or
add
sub
cli
sbb
push
cli
sbb
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cli
sbb
or
sbb
push
sti
sbb
leave
sti
sbb
pop
sti
sbb
sar
sbb
push
sbb
fsincos
sbb
jbe
sbb
loope
sbb
cmp
add
sti
sbb
sti
sbb
icebp
sti
sbb
cltd
sti
sbb
stc
sti
sbb
movsl
sti
sbb
add
sbb
scas
sti
sbb
or
sbb
mov
cld
sbb
arpl
fs
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
insb
ja
jo
cs
insb
add
xor
cs
insb
add
outsb
jae
outsl
outsl
insb
cs
add
jb
imul
add
imul
insb
insb
add
outsb
insl
insl
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
cld
sbb
add
add
sub
sbb
add
add
aas
cld
sbb
add
add
push
cld
sbb
add
add
push
add
add
sbb
add
add
cld
sbb
add
add
movsb
cld
sbb
add
add
mov
sbb
add
add
cld
sbb
add
add
add
inc
push
inc
outsl
insb
outsl
jb
add
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
push
dec
inc
jne
outsl
inc
outsl
insl
jo
gs
add
add
inc
jb
gs
outsb
jne
gs
imul
jae
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
push
gs
jne
jb
push
popa
insb
jne
push
add
add
imul
jo
gs
imul
push
insb
popa
jns
outsl
jne
fs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
cmp
inc
and
add
fisubs
push
adc
and
dec
add
and
stos
sub
lock
push
outsl
and
loopne
lods
adcb
mov
and
inc
je
inc
dec
int3
dec
jle
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
pushf
sub
test
or
test
sbbl
subb
add
movsb
loope
inc
xor
mov
adc
add
xchg
mov
add
cmp
js
je
mov
mov
insb
jb
cmp
fs
add
xchg
push
enter
dec
jb
cmp
xorb
enter
jb
cmp
sub
sub
cld
and
loopne
fmul
fdivs
jb
sbb
push
orl
mov
outsb
call
add
inc
and
fdivl
add
mov
push
xor
pop
jmp
sub
xor
add
xor
sbb
sbb
and
rol
push
mov
adc
push
int3
push
call
mov
test
jne
xor
add
pop
lret
mov
push
add
or
rcl
ret
femms
lea
loopne
mov
nop
push
ds
addl
aas
les
xor
push
pop
nop
mov
cmp
cmp
pop
sbb
fadds
xor
add
dec
mov
mov
push
pop
or
rclb
xor
and
inc
cmp
add
push
mov
push
xchg
push
adc
mov
nop
aas
push
push
orb
call
xchg
add
inc
push
jmp
mov
inc
mov
jns
adc
jne
add
adc
cmpsl
fst
daa
xchg
aas
pusha
or
jmp
dec
add
dec
cmp
pop
aam
jge
fbstp
loope
call
test
pop
pop
pop
add
je
repnz
add
xor
jge
sbb
add
call
fmul
ja
popl
and
sbb
or
sub
add
cltd
gs
xchg
or
fdivs
add
je
fbstp
push
iret
add
sbb
sub
sahf
test
push
add
adc
sar
lock
cmpsl
sub
or
push
or
jle
jge
add
bound
fcmovbe
lock
rclb
incl
jecxz
adc
out
adc
add
push
sbb
nop
out
cmp
mov
test
cmp
or
sarl
fs
adc
and
mov
add
not
dec
clc
jp
fs
flds
sar
add
popa
add
pop
push
push
push
lds
jns
lret
and
cmp
add
movsl
fsubl
dec
adc
dec
in
or
push
data16
push
nop
sbb
jl
pop
lds
adc
rolb
push
push
and
jae
and
out
ja
dec
sbb
mov
je
push
xchg
jg
pop
fisubrs
jne
mov
dec
xchg
add
movl
filds
cwtl
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
or
add
xchg
nop
jbe
add
fldl
call
sarb
push
pop
inc
adc
sub
push
test
shrl
jmp
leave
xor
mov
mov
add
imul
xor
add
and
adc
sahf
add
add
pop
leave
cld
testl
xchg
test
add
sbb
jae
fisttpll
loope
out
fiadds
call
dec
inc
loop
adc
lods
xor
mov
add
aas
push
xchg
add
xor
pop
aam
cmp
add
sub
jl
xlat
push
add
call
ja
add
inc
arpl
test
leave
or
out
inc
fs
adc
call
and
int3
sbb
cmpsl
int
pop
movsl
and
cmp
add
aaa
and
or
pop
mov
sub
inc
aas
cmpsl
xchg
gs
add
bound
orb
jne
ja
add
mov
loopne
lea
sub
pushf
es
pop
call
icebp
push
xor
addl
mov
push
mov
and
jmp
add
push
orb
test
lcall
sub
imul
dec
rcrb
cmpsb
jp
and
cmpl
add
adc
sbb
add
adc
inc
adc
add
push
adcb
cwtl
sbb
or
jnp
push
out
cmp
add
jae
ror
push
je
add
mov
jmp
int3
inc
mov
mov
add
mov
ret
cs
pop
es
dec
add
push
cmp
lods
cmp
pop
add
mov
addl
push
fs
pushl
int3
andb
xor
add
push
jle
add
pop
xlat
out
bound
pop
sub
test
clc
sysret
mov
xchg
cmp
das
mov
add
xor
pusha
rolb
add
jo
dec
daa
sbb
repnz
movb
pop
add
add
xchg
xchg
ret
cs
jmp
mov
add
dec
stc
repnz
test
int3
test
sbb
xchg
enter
sub
out
mov
hlt
leave
adc
dec
cmp
aad
cmp
mov
in
cmp
pop
add
je
xorl
in
jne
xor
add
push
push
lret
inc
bndldx
in
fistpl
loopne
push
cmp
xchg
adcl
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
mov
add
mov
add
pop
add
add
push
cld
adc
cmp
call
add
adc
mov
addl
lock
sbb
pusha
add
adc
movl
mov
ret
or
add
cmp
leave
test
enter
or
es
add
sbb
loop
cwtl
in
add
add
adc
or
push
test
sub
rolb
and
xchg
add
loopne
dec
incb
adc
dec
fnstenv
loope
and
inc
nop
jecxz
push
out
cs
add
push
sbb
scas
add
xor
adc
ret
add
and
mov
testb
js
sbb
cmpsl
rorb
sub
cmp
push
mov
mov
call
fidivs
push
xor
mov
or
and
sti
fadds
pop
and
add
lock
pop
add
lret
push
pop
andl
movsb
mov
leave
clc
dec
rcl
mov
popaw
ror
aas
jle
add
aaa
sub
repz
xor
add
jge
push
xchg
imul
loopne
sbb
add
jmp
and
inc
jne
adc
sub
daa
in
xchg
or
ljmp
add
xor
or
or
je
imul
xabort
mov
pop
add
dec
xchg
xor
inc
cmp
pusha
shll
rcll
dec
es
mov
add
movsb
xor
dec
add
dec
nop
hlt
lcall
inc
pop
rcrl
xchg
jecxz
inc
adc
insb
add
sub
cmp
bound
or
or
adcl
jl
add
dec
sbb
mov
mov
push
jle
cmp
andl
adc
cmp
mov
add
adc
pop
add
xchg
scas
sbb
les
nop
imul
lea
cld
movsl
push
jg
cld
or
or
inc
mov
and
addr16
roll
fsubs
es
add
sub
loopne
or
add
je
nop
aas
dec
pop
pop
sbb
iret
xor
adc
cmp
dec
loopne
insl
cmc
outsl
out
push
xor
ds
pop
incb
adc
xchg
int3
leave
call
call
imul
jne
cmp
or
mov
add
sti
xor
add
xchg
mov
add
push
add
in
push
dec
subb
dec
pop
pop
ljmp
shlb
loope
je
add
addb
insb
jle
xor
dec
xlat
sbb
jg
pop
lods
add
pop
jle
out
shr
add
push
xchg
or
dec
fsubs
add
sbb
lcall
add
cmp
or
test
add
mov
mov
vucomisd
iret
mov
cmp
pusha
xchg
jmp
add
cltd
xor
xchg
add
pop
pop
xchg
dec
lret
add
repnz
mov
imul
lods
jno
test
pop
sub
xor
mov
pop
pop
movsl
or
stos
or
cltd
cld
jmp
leave
push
pop
push
xor
and
cmp
in
sti
add
mov
adc
sub
inc
test
jge
xor
adc
add
ret
cmpsl
mov
push
bnd
clc
sub
prefetch
dec
add
jl
hlt
clc
sahf
add
cmp
cs
jbe
or
push
dec
inc
cs
or
push
imul
add
call
push
rol
cmp
cmp
addb
pop
push
and
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
cmp
dec
andb
pop
test
and
add
cmp
cli
sub
sub
lea
test
and
fdivrs
add
mov
inc
add
cmc
test
add
ret
lock
movsb
inc
inc
add
jmp
cwtl
punpckhbw
and
cmp
push
add
cwtl
jmp
push
or
addr16
test
dec
aas
or
ret
inc
sbb
add
push
or
cmpsb
imul
or
cmp
sub
jno
push
adc
add
leave
inc
or
mov
imul
mov
test
add
cwtl
add
pop
add
mov
cmp
or
mov
mov
jmp
aas
inc
mov
insl
pop
xor
push
or
dec
and
add
and
lcall
sbb
pop
pop
mov
dec
in
add
out
mov
dec
jg
add
js
push
icebp
or
add
add
cmp
jl
xlat
sub
inc
pop
lds
cmp
loop
pusha
add
addr16
orl
sahf
add
sub
sbb
imul
pop
pusha
adc
add
testb
xchg
stos
push
int3
lcall
inc
fcomps
mov
sbb
push
add
push
incb
add
dec
xor
movl
xchg
addr16
cs
pop
and
ret
push
push
sbb
nop
adc
xor
add
add
xchg
sbb
adc
mov
pop
xlat
or
movsb
push
xchg
fistpll
add
js
mov
gs
cmp
lcall
and
jmp
sahf
lret
dec
orb
inc
mov
or
dec
arpl
add
xor
and
cmp
sub
cs
pusha
cmc
fadds
sub
mov
andl
jmp
add
jmp
cmpsl
xchg
mov
pop
repnz
cld
jbe
sbb
xor
andb
add
mov
add
insb
subb
inc
clc
add
ljmp
dec
add
jge
movsl
cmp
clc
adc
add
lret
xchg
call
add
dec
jle
jge
xchg
or
and
das
and
call
xlat
bound
ret
dec
test
mov
rorb
nop
mov
or
cmpb
mov
cmpsb
inc
std
add
sbb
mov
adc
push
int3
add
adc
out
dec
dec
cwtl
loopne
lock
scas
add
pop
call
add
sub
mov
and
jge
sahf
or
test
ret
es
int3
enter
je
add
into
fcmovnu
lret
add
add
loopne
jecxz
and
sub
push
and
out
mov
rcrb
leave
add
adc
psubb
add
nop
push
xor
enter
xlat
test
add
cmp
ja
je
pop
sub
vmread
rep
incb
cmpl
add
movsb
xchg
mov
jl
xchg
sbb
adc
std
sbb
pusha
lret
push
lcall
add
xchg
adc
add
nop
rorl
jns
jbe
cmpb
jne
aam
jnp
rorb
out
add
and
inc
lock
inc
push
adc
test
xorb
or
andb
cmp
int
pop
dec
into
cmc
adc
mov
or
ja
js
xor
push
push
lea
push
lods
and
ja
mov
repz
int
insl
cmp
mov
push
in
jl
and
jmp
pop
xor
xchg
add
cmpl
jae
movzwl
imul
cmp
add
add
shrb
or
mov
sbb
js
mov
in
pusha
pop
js
in
or
mov
mov
fwait
pop
pop
xlat
insb
movl
call
std
fists
pop
stos
add
je
and
outsb
mov
shlb
cmp
mov
pop
fcom
stos
mov
mov
add
aaa
aas
jp
mov
pcmpeqd
add
add
sbb
push
test
loopne
jle
cmp
push
inc
into
test
shlb
sbb
fnstenv
inc
dec
scas
jne
add
sbb
repnz
loop
fildl
sar
push
add
mov
fiaddl
mov
or
sbb
jne
push
adc
in
add
dec
out
and
and
add
sbb
mov
inc
stos
cmp
add
std
cld
or
fiadds
sbb
nop
cmp
loopne
adc
add
mov
sbb
rep
roll
adc
xor
add
jno
in
imulb
mov
xchg
cwtl
adc
jno
cld
iret
add
sub
mov
movsb
fildl
or
jns
lcall
add
mov
jae
add
mov
stc
cmp
mov
dec
mov
fnstenv
roll
mov
ret
rorb
nop
sub
imulb
mov
jmp
int3
lods
add
sbb
jl
add
add
push
inc
addb
sti
and
mov
sub
or
mov
and
add
popa
pop
pop
rcrb
xor
sub
enter
dec
test
pusha
and
jmp
add
xor
in
xor
push
ja
add
clc
subl
add
xor
or
mov
xor
sbb
pop
int
add
aam
adc
testb
add
fdivrs
cmp
sub
in
inc
push
repnz
pop
bt
je
fisttps
popa
jb
mov
add
adc
add
ret
or
mov
inc
not
jmp
test
jmp
in
je
inc
add
jne
pop
and
cli
cmp
jae
dec
add
add
inc
add
ss
fsubrs
rolb
cld
dec
cld
nop
add
mov
lods
sbb
adc
ret
je
fsubs
or
add
das
rolb
loopne
clc
add
push
push
sbb
add
and
xor
push
mov
and
fiadds
pop
jne
loop
cmpsl
or
add
sub
cwtl
add
and
pop
mov
popa
add
pop
aaa
add
xor
jae
ss
push
add
das
push
add
repz
pop
dec
adc
push
push
pushl
roll
and
inc
hlt
mov
in
push
or
mov
enter
lcall
sub
sbb
add
jno
ret
dec
xchg
clc
and
cmp
or
mov
sub
dec
add
push
inc
push
inc
pop
inc
add
outsl
jb
popa
outsb
roll
fdivl
jg
sbb
push
push
dec
cmp
add
jae
imul
push
jne
dec
rcr
mov
mov
xlat
add
jo
xor
mov
inc
add
adc
cli
jecxz
mov
xchg
testl
jge
xor
ss
mov
cli
add
sbb
add
inc
loopne
push
divb
jmp
gs
add
dec
or
dec
call
inc
or
leave
sub
popl
or
lock
cltd
insb
xchg
pop
add
mov
call
push
loop
loopne
stos
mov
and
fcomp
adc
add
cmpb
pusha
mov
in
leave
add
pusha
push
add
pop
push
sar
pop
addr16
inc
sbb
in
cmp
hlt
sbb
andl
int3
cmpsb
divb
rolb
mov
je
cmp
lea
adc
mov
push
fldenv
ret
mov
test
push
sbb
movsl
dec
shrb
jge
inc
add
nop
push
add
add
repnz
test
pop
pop
fs
ret
add
subps
cld
jns
mov
add
inc
cmp
add
inc
popl
sbb
or
pop
faddp
mov
call
pop
xor
pop
push
loope
sbb
lock
psadbw
hlt
cs
pop
add
outsb
cmp
or
cmc
or
add
pop
and
add
or
push
in
jecxz
lods
add
je
xchg
sbb
mov
aaa
xor
push
inc
and
rorl
add
push
or
jp
lret
jg
ds
mov
popa
jne
cmpb
sbb
adc
imul
cli
in
push
push
call
push
sbb
fistpl
push
push
add
push
add
mov
cltd
shl
dec
jnp
sbb
push
mov
jg
sbb
or
clc
push
adc
jl
outsl
add
inc
add
add
or
sub
add
cmpsb
add
push
loope
imul
pop
fmuls
cmp
pop
mov
adc
inc
ja
hlt
fiaddl
lock
push
addps
orb
repz
lret
xor
mov
sbb
cmpsl
add
outsb
cld
call
dec
dec
or
mov
test
push
jmp
and
out
mov
add
cmp
cli
out
push
je
pusha
stos
mov
loopne
mov
jno
ja
imul
add
sbb
add
and
mov
mov
or
sub
test
push
push
mov
movb
mov
cmc
cmp
inc
rorl
add
fstpt
sbb
stos
mov
shl
push
roll
jl
cmpsl
and
out
mov
inc
add
addb
outsl
pusha
aad
pop
add
movl
stc
or
mov
jecxz
lcall
inc
fimull
inc
sub
movsl
mov
nop
add
mov
sub
hlt
add
xorl
sbb
and
subb
call
addr16
add
mov
fiaddl
imul
je
clc
push
inc
mov
add
cmp
jne
fs
aam
push
imul
inc
add
xchg
into
sbb
add
shrb
rolb
dec
das
pusha
sub
adc
mov
fldl2t
sbb
xchg
sarb
cmp
sti
sbb
adc
andb
pop
adc
andl
adcb
mov
pop
mov
call
call
add
cmp
or
mov
dec
cs
cltd
add
pop
xor
mov
mov
call
shll
cmp
ds
push
sbbl
mov
enter
pop
dec
gs
data16
mov
andl
push
inc
or
pusha
add
xchg
lock
dec
push
mov
leave
xor
js
nop
push
cmp
adc
adc
lea
aam
pop
sub
add
inc
or
aam
mov
xorb
lods
shlb
add
xchg
mov
jo
in
stc
dec
xor
movq
pop
sub
inc
push
sub
mov
sbb
clc
jno
add
aas
orl
sub
push
cmp
adc
sub
inc
adc
push
pop
and
cmp
std
xor
push
mov
mov
enter
leave
jp
int
and
iret
call
sbb
into
sahf
adc
fcomps
or
lret
sub
lea
jecxz
add
add
and
add
es
push
cmc
loop
dec
pop
cmp
loopne
cmp
adc
andb
cmp
rclb
popl
je,pn
sbb
call
arpl
add
xchg
pop
pushf
or
aaa
add
dec
or
adc
cmp
sahf
push
and
adc
je
pop
ja
in
xchg
jecxz
push
mov
sbbb
inc
cmp
dec
jne
jo
push
add
sbbl
pushl
jg
add
cmp
mov
roll
push
xchg
cmpl
push
or
orb
jmp
test
fstpt
dec
add
xor
add
xchg
add
shlb
out
sahf
mov
pop
mov
mov
add
cmpsb
or
scas
mov
pusha
inc
mov
dec
add
xor
fcmovnbe
js
pop
add
xor
or
repz
add
add
loopne
sbb
fadd
sub
movsl
pusha
add
mov
pop
jge
mov
movsl
popl
or
test
sbb
movsb
adc
add
test
aaa
mov
jge
je
mov
jmp
loopne
sub
rcrb
add
pop
in
mov
xorb
xchg
jp
add
jno
add
jne
cli
and
ret
fxch
rcll
sub
adc
call
sub
sbb
xchg
add
push
shll
cmp
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
adc
push
xor
mov
or
push
xchg
sub
mov
decl
and
mov
push
pop
addl
andb
fs
lea
fiaddl
sbb
add
push
and
aaa
daa
add
dec
pop
sub
fcomps
mov
or
mov
or
xor
add
push
call
sarb
aaa
fiadds
add
ret
and
out
sbb
adc
xorb
and
inc
push
or
mov
mov
pop
aas
add
jmp
sbb
or
mov
jne
jo
outsb
dec
add
push
ds
add
insb
lds
or
pop
mov
inc
or
lock
and
mov
push
pop
add
cmp
cs
jns
cmp
add
pop
push
jg
and
ljmp
adc
push
sub
or
cmp
pusha
lret
mov
add
add
insb
sti
cmp
jmp
mov
outsl
jb
imul
cmp
addr16
arpl
xorl
sub
scas
lret
int3
insl
mov
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
add
fcomps
adc
mov
adc
push
sbb
add
mov
mov
pop
dec
xchg
fisubrl
push
and
push
inc
jg
addb
inc
loopne
xchg
daa
mov
dec
pop
jbe
sahf
pop
rol
mov
outsb
add
jb
inc
add
and
sub
fs
ja
add
subl
adc
pop
mov
cld
loope
adc
sub
rolb
nop
mov
mov
sub
movl
imul
push
cmp
in
sar
repz
mov
ljmp
push
and
add
dec
sti
xchg
js
sub
insb
movsb
sbb
or
push
push
push
add
jnp
nop
test
or
daa
into
add
pop
xor
in
fldenv
loop
mov
add
add
push
addb
xchg
rolb
rorl
stos
sub
push
and
cmp
or
arpl
pop
xchg
or
add
imul
inc
add
and
add
xor
cmp
or
pop
mov
push
test
add
push
les
and
mov
inc
dec
inc
adc
mov
inc
or
scas
cmp
add
pop
add
push
pop
sbb
add
and
add
repnz
mov
cld
add
aas
ds
enter
loop
movsb
xor
loope
cld
cld
iret
add
xor
cli
cmp
mov
dec
sub
dec
push
xor
jbe
add
aam
xchg
pop
dec
idiv
stos
add
cmp
or
inc
mov
pop
mov
mov
add
cwtl
dec
sbb
xor
sub
xchg
and
cld
rcrb
add
jne
and
mov
ja
push
add
arpl
push
push
sysenter
pop
pop
and
jg
aam
jno,pn
out
jmp
push
add
push
push
push
test
in
or
mov
cli
das
loop
add
cld
dec
iret
sub
xor
mov
in
cli
jle
mov
into
push
mov
add
sbb
aas
and
movsl
loopne
add
icebp
cmp
mov
lret
xor
sbbb
add
cwtl
cmpl
push
shr
dec
pushf
push
xchg
add
adc
and
pop
or
dec
add
insb
rol
fsubp
test
or
inc
dec
pop
pop
ret
xor
or
mov
jecxz
scas
loope
in
mov
add
and
add
lret
pop
adc
pop
jecxz
adc
xchg
nop
add
inc
js
add
inc
loop
cmp
jo
add
in
mov
cmp
xchg
adc
imul
flds
cmpsb
clc
bswap
mov
sbb
cmp
fidivrl
pop
sub
pusha
push
sbb
mov
add
inc
in
testb
push
adc
insb
pop
pop
sahf
add
sub
push
dec
xchg
xor
cld
dec
jl
cmpb
jle
mov
iret
aaa
add
stc
add
jl
add
jg
sti
xchg
push
lock
cli
dec
inc
dec
fists
jns
dec
mov
mov
dec
cld
addl
push
inc
cwtl
icebp
sarb
xchg
mov
lret
cmp
repz
mov
ljmp
aam
test
ljmp
lcall
scas
and
jne
cmpl
or
sbb
lock
xchg
cmp
scas
mov
cld
jns
cmp
faddl
xchg
pop
xor
sar
and
cmp
icebp
jl
jmp
jbe
add
cltd
test
aam
lret
pop
push
repz
add
ficompl
cmp
leave
add
inc
pushf
aad
cmp
adc
dec
jg
loop
mov
sbb
inc
sub
jne
xor
icebp
push
mov
lods
loop
fs
aad
add
pop
xor
mov
cltd
pushf
xor
and
push
add
adc
sbb
rcll
int
cmp
mov
pop
push
jns
add
popa
xchg
jl
push
icebp
dec
add
test
add
dec
sub
in
xchg
jl
push
dec
lock
mov
add
pop
clc
mov
push
sub
or
or
add
inc
ss
decb
pop
ud0
add
jns
cmpsl
dec
jne
lcall
cmc
add
push
or
adc
jg
add
push
cld
aad
adc
or
addb
add
dec
andb
jno
add
adc
fnstcw
add
mov
mov
int3
hlt
and
das
adc
xchg
inc
lea
stc
mov
push
add
test
inc
lock
test
inc
bound
jnp
data16
mov
int3
push
mov
or
fisttpl
jmp
push
js
pop
and
mov
das
adc
sti
add
repz
push
jo
in
add
out
fidivl
add
push
mov
cmp
cmpsb
cmp
repnz
sbb
test
and
inc
ucomiss
cmp
in
rolb
mov
inc
popa
jl
orb
mov
ss
mov
adc
push
mov
push
mov
pop
add
inc
rorb
ret
es
adc
into
mov
ds
mov
fadds
sub
fwait
hlt
or
push
stos
ja
cli
add
push
xor
sub
xor
cmc
push
sbb
or
leave
in
push
push
cmp
or
mov
sbb
jecxz
lds
ficoms
or
or
lahf
push
cmp
jb
subl
jne
sbb
add
loope
hlt
mov
sub
or
add
nop
add
cmpl
subb
jno
jge
shl
mov
daa
add
adc
add
mov
jae
pop
pop
pusha
push
jle
and
mov
dec
add
sbbl
push
adc
movd
add
xor
fnstenv
sbb
xor
movsb
mov
add
xchg
enter
add
or
jne
add
lock
into
stc
jge
loopne
mov
pop
mov
cs
lock
xor
pop
pop
inc
frstor
jge
aas
and
lret
xor
push
inc
cmp
sub
add
leave
pop
pop
aad
mov
xchg
or
add
cltd
and
jno
add
sub
popf
dec
dec
and
sub
ret
iret
call
adc
sbb
xor
push
add
mov
idivb
add
sbb
add
arpl
mov
cmp
clc
pop
cltd
inc
or
push
pusha
jmp
cmpsb
dec
mov
mov
subb
push
jge
push
mov
pushf
and
int
std
add
call
data16
dec
or
fiadds
push
add
shrl
mov
add
mov
jl
out
insl
add
fimuls
shll
xor
filds
andb
jmp
pop
cmp
add
or
pop
test
push
notl
mov
pop
xchg
add
lret
dec
xchg
or
push
add
ror
push
push
orl
or
pop
arpl
mov
into
sub
mov
test
inc
mov
dec
mov
mov
fdivrs
pushf
mov
mov
daa
stos
jl
jbe
clc
cltd
and
add
pop
fisttpll
jo
push
les
add
add
fldenv
loop
cmp
add
dec
mov
daa
xor
pop
and
dec
clc
mov
push
add
dec
add
push
or
pushf
cmp
cmpsl
or
inc
pop
xchg
je
add
loope
adc
in
push
lret
sub
inc
add
inc
jno
adc
jmp
xor
filds
push
test
push
je
add
jmp
or
or
hlt
cs
and
inc
test
out
jmp
fdiv
and
mov
push
sbb
pop
jne
add
clc
xchg
or
int3
jg
cwtl
dec
cltd
xor
mov
inc
clc
adc
add
movb
sbb
jge
test
test
mov
ja
insl
cmpsl
jb
add
imul
xor
sbb
subb
je
push
js
add
add
adc
insl
add
data16
movups
ljmp
mov
mov
pop
push
ret
cwtl
xchg
add
repz
lea
jle
or
call
stos
cmp
add
rolb
add
inc
cmp
or
das
and
sub
xor
clc
scas
dec
jo
jecxz
je
fsubp
mov
fistl
and
pop
ljmp
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
jg
jmp
xor
fists
imul
or
jb
out
pop
push
xor
andb
pop
inc
pop
fildl
push
ja
cmp
push
inc
adc
call
dec
sub
mov
inc
jo
mov
aas
dec
loopne
inc
and
faddl
and
ret
pushf
nop
inc
cmp
add
mov
inc
enter
add
fimull
jno
int3
aam
aas
outsl
test
mov
fs
lds
pop
sbb
push
std
pop
loope
aaa
inc
dec
push
jg
add
imul
repz
sub
fiadds
and
xor
cmpb
jge
in
cmp
sbb
lahf
and
pop
inc
add
mov
lock
dec
xorb
add
adc
leave
sub
inc
sbb
sub
or
push
inc
and
rolb
cwtl
and
stos
add
or
ror
xchg
dec
loopne
fsubrs
push
je
jb
gs
jg
add
std
jae
fcoms
rolb
test
or
faddl
push
dec
cli
mov
add
inc
mov
add
clc
xchg
push
cmp
and
sbb
fsubr
cmp
call
xchg
add
lret
pop
ss
pop
imul
dec
dec
lods
cmp
rolb
pop
cmp
cld
add
add
mov
inc
jmp
mov
xchg
add
in
outsl
or
mov
hlt
ljmp
lock
adc
cld
in
xor
je
loop
add
add
jge
rcrl
arpl
js
jg
jbe
cmp
or
fists
lock
add
fwait
out
or
add
js
mov
add
push
adc
push
or
lea
je
xchg
mov
xchg
in
cmc
sahf
lock
sbb
and
clc
insl
mov
push
mov
mov
leave
js
sti
jp
pop
mov
push
xor
or
inc
jmp
pop
pop
sub
aad
ljmp
jne
sbb
dec
shl
test
dec
mov
xchg
cmp
mov
sub
or
jle
add
jmp
mov
mov
cld
add
inc
sbb
dec
gs
mov
add
orb
adc
add
jecxz
or
and
dec
dec
pop
add
or
es
add
xchg
jae
push
sub
add
or
sub
cmp
jmp
add
add
push
mov
add
fstl
add
call
leave
adc
sub
lds
pop
loope
enter
lods
push
pop
sbb
mov
ja
add
test
mov
mov
dec
jne
adc
sbbb
loopne
pop
inc
add
sub
dec
pop
jecxz
adc
jmp
push
add
and
movsb
pop
pop
push
push
sbbb
call
je
xor
pop
outsl
imul
add
pop
cli
add
lock
jl
shlb
mov
jmp
mov
jbe
jnp
sbb
aam
dec
mov
sub
xchg
and
mov
push
adc
sbb
sub
and
fs
xor
push
sbb
testb
adc
int
or
dec
les
sub
pusha
in
mov
push
push
rcrl
add
push
ret
and
mov
xchg
mov
sbb
sub
push
mov
add
push
test
or
adc
jmp
xlat
cmp
adc
xchg
rolb
es
mov
jecxz
xchg
lock
adc
stc
orl
push
inc
scas
clc
test
mov
push
add
adc
cmpsb
inc
ret
jmp
loopne
jbe
add
dec
jb
mov
pop
add
sbb
inc
mov
jnp
add
pop
nop
push
inc
aas
loope
jg
mov
repz
push
idivl
and
cs
mov
repz
xchg
lds
arpl
cwtl
add
sub
add
pop
mov
inc
push
rcrb
loopne
mov
add
int3
xor
and
lahf
adc
cmp
or
pop
jmp
lods
ret
inc
cmp
xor
xchg
pop
sbb
pop
cld
inc
fwait
cmp
in
sub
adc
mov
dec
add
mov
cwtl
or
and
mov
cltd
or
sub
push
mov
pop
add
push
or
loop
push
add
mov
icebp
xchg
mov
pop
mov
repnz
mov
add
jne
cs
mov
sub
sarl
add
and
shl
movsb
cmp
test
fiaddl
cwtl
jp
rolb
pop
cmp
push
rolb
mulb
add
pop
add
je
ja
lods
pop
jno
add
addl
stc
inc
jle
sub
lock
mov
in
or
xchg
jne
es
pop
pop
add
pusha
incl
fsubrl
push
push
cmp
lret
jle
push
das
dec
cmp
enter
icebp
pop
movsb
sbb
mov
add
sub
adcb
cmp
or
jge
mov
add
mov
adc
lods
shll
daa
pop
push
loop
add
adc
push
push
nop
or
test
cmpsb
rcrl
ss
lock
mov
in
movsb
add
test
sub
sub
daa
repnz
pusha
xor
dec
sbb
pop
sub
inc
xchg
jbe
int
adc
xlat
and
dec
stos
aas
add
jl
je
xor
add
aad
lea
rcrb
fisttpl
sub
cmp
add
fmulp
shr
mov
es
sub
pop
or
ret
iret
aad
shlb
adc
test
inc
inc
add
mov
cwtl
cwtl
xor
pop
mov
enter
ret
mov
add
add
or
adcb
add
out
inc
add
jb
or
cmp
inc
push
and
adc
pop
adcb
mov
sbb
sbb
stc
add
add
mov
mov
add
aam
flds
add
adc
hlt
shl
sub
xor
cmp
or
add
mov
lds
mov
aaa
cli
jbe
cmp
or
xchg
add
jge
and
mov
mov
add
jmp
cmp
pop
mov
adc
cmp
inc
add
xchg
add
aas
push
sbb
test
int3
pop
into
sbb
ret
inc
mov
push
add
nop
sbb
enter
mov
push
mov
hlt
push
daa
lret
into
pop
ds
or
sbbl
mov
pop
pusha
fisttps
add
add
leave
repnz
bound
inc
clc
jl
cld
jp
loope
mov
add
test
lds
aad
iret
decl
js
jo
mov
push
stos
mov
out
cmp
jmp
and
test
notl
out
sbb
mov
inc
imul
cmp
jl
pop
xor
cmp
pushl
xor
pushf
popf
sti
jmp
jle
push
inc
mov
add
sbb
cld
sarb
int3
repnz
test
jge
sbb
nop
fildl
inc
add
stos
clc
scas
adc
jecxz
cmp
pushf
mov
testb
inc
aam
testl
jp
iret
shll
hlt
pop
fsub
fadds
ds
push
add
cmpsb
scas
mov
pop
add
jbe
pop
dec
dec
in
xchg
jo
in
add
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
lret
push
fwait
xchg
and
add
les
aad
bound
lret
aas
cli
dec
loopne
add
mov
adc
fs
or
mov
add
pop
loop
jo
movsl
and
push
add
mov
aad
xchg
popa
add
rcrb
or
psrld
fcmovnb
pop
adc
mov
pusha
cmpl
ss
cmp
xor
jle
mov
jmp
test
jb
add
jne
not
loopne
rolb
inc
pusha
xlat
cmp
jb
add
ja
popf
repz
addb
pop
testl
je
xor
jnp
push
jecxz
lock
mov
pusha
and
add
adc
pop
add
repnz
ret
insl
pushl
add
call
and
flds
rolb
test
adc
or
in
in
adc
roll
rorb
push
jb
hlt
cltd
mov
mov
inc
add
mov
nop
das
adc
xor
adc
and
addl
add
push
stos
push
shl
cvttps2pi
sub
loopne
incb
add
cltd
sar
add
outsl
lods
dec
ljmp
mov
out
or
call
ljmp
dec
add
dec
movsl
add
pop
aaa
in
pushf
sub
pop
sub
or
mov
or
mov
cld
ret
loopne
in
push
stc
push
cmovb
or
add
clc
pop
push
subl
and
xor
dec
out
fs
inc
aad
or
les
add
data16
std
adc
add
test
adc
xchg
mov
mov
xor
adc
jmp
fs
dec
sub
call
js
imul
push
adc
sub
push
popf
repnz
fbld
fnstenv
mov
add
and
sahf
add
mov
push
imul
mov
adc
clc
enter
lock
sbb
add
xor
inc
cmpl
jge
xor
loop
call
push
ret
inc
test
into
or
pusha
ds
push
mov
xor
mov
mov
pop
dec
andb
add
sbb
out
jg
movsl
clc
adc
push
ja
jl
xor
jge
add
or
sub
sub
sbb
mov
or
test
mov
mov
dec
adc
sar
add
sub
insl
jmp
outsb
pop
xor
pop
xor
mov
add
int3
out
add
mov
cmp
cmp
fsub
push
or
mov
mov
or
add
or
add
mov
lret
add
and
testb
dec
dec
loope
inc
push
imul
cmp
and
jle
add
fdivrs
dec
cmp
and
cltd
add
push
inc
pop
fdivs
mov
or
pusha
jmp
loope
dec
std
es
pushf
in
cmp
and
adc
enter
xchg
mov
and
test
movsb
jb
loopne
scas
nop
scas
mov
sub
jl
and
je
jo
mov
add
cmp
in
jb
cmp
sbb
int3
xorl
in
jb
or
loop
mov
call
push
clc
pusha
and
xchg
lock
call
cmpsb
adc
loopne
cltd
add
rorl
or
ret
call
mov
add
and
jnp
add
js
cmp
jae
fs
push
test
inc
femms
inc
xchg
mov
les
cmc
pop
into
mov
in
cld
sbb
pop
pop
lock
add
sbb
jl
hlt
and
cmc
xchg
test
in
jb
stc
cmp
sbb
and
cld
and
xchg
shl
enter
loop
push
cmp
out
out
call
jmp
ret
andb
out
in
jb
cmp
sbb
rolb
jl
or
and
xchg
xlat
aad
mov
sbb
sbb
and
and
ficoms
shll
cmp
inc
inc
lds
add
and
xchg
jae
add
in
jb
cmp
sbb
into
iret
xchg
push
add
jb
cmp
mov
mov
mov
and
mov
jb
cmp
mov
and
jge
add
call
out
adc
xor
add
or
insb
gs
dec
addb
push
filds
inc
jb
push
add
jle
mov
rorb
add
pop
ljmp
adc
cmp
adc
popf
push
or
std
mov
pop
rcrb
inc
js
add
jb
hlt
mov
pop
xor
mov
cmp
addb
jo
pop
loope
adc
pop
test
or
adc
dec
jne
je
dec
add
outsl
jb
cmp
andb
inc
inc
jo
jmp
or
outsb
mov
mov
add
hlt
test
or
fmuls
dec
fimull
mov
js
adc
insb
mov
inc
pop
mov
push
sub
push
add
loop
rorb
inc
je
add
jns
mov
popa
pop
hlt
pusha
and
fcoml
push
outsb
xor
shr
and
or
inc
dec
jbe
scas
data16
push
sub
mov
dec
ret
mov
cmp
push
bound
mov
popa
jmp
pusha
sbb
mov
nop
imul
mov
rol
or
decb
xchg
pop
ficoms
rcrb
jmp
insb
pop
dec
inc
cmp
and
jle
inc
pop
or
inc
push
outsb
fs
pop
nop
push
sbb
pop
mov
cmp
mov
mov
pusha
xchg
dec
ss
test
rolb
mov
hlt
cmp
xchg
add
scas
rolb
add
outsl
aam
add
mov
add
ljmp
add
mov
mov
or
repz
sub
add
mov
add
nop
fs
pop
enter
xor
arpl
mov
shrb
jo
inc
imul
sbb
das
or
push
mov
mov
pop
and
ret
jb
pop
gs
jmp
outsl
fs
pusha
and
pop
push
bound
jae
mov
addr16
sbb
or
push
cmp
push
mov
popa
loop
mov
incl
add
dec
add
cmp
shr
pop
add
repz
pop
or
cltd
add
push
adc
or
add
add
bswap
mov
mov
call
sub
add
loope
lret
pop
dec
push
xor
sub
popf
inc
jnp
ret
mov
sbb
out
dec
cmc
pop
ds
inc
xor
sub
insl
cmp
stos
adc
add
mov
xchg
mov
ret
movsl
js
scas
aaa
pop
add
emms
push
add
cmc
clc
sbb
repz
je
mov
movsb
cwtl
or
jp
ja
pop
test
sub
sub
cmp
add
movzbl
push
xlat
add
sub
pop
scas
ja
push
or
call
inc
add
sbb
pop
add
incl
and
adcb
or
jmp
fs
sub
aaa
dec
clc
insb
into
sbb
pop
shll
out
push
add
xchg
loope
push
pop
dec
hlt
cmp
fwait
cmpl
or
add
xchg
sbb
adc
fisubl
push
or
inc
movups
dec
add
clc
cld
add
lock
add
mov
fisttpl
add
je
inc
mov
xchg
cmp
sbb
js
jl
push
aas
sbb
dec
push
out
add
test
repz
test
hlt
lcall
sbb
lock
les
daa
or
test
mov
int
fstpt
push
xor
bound
jg
ss
stos
xor
pop
jmp
mov
inc
sbb
push
test
icebp
in
or
dec
das
rcll
in
dec
cwtl
insb
add
sub
and
push
cltd
inc
sub
lret
adc
push
das
adc
rcl
xor
ret
idiv
cmp
dec
pop
adc
mov
mov
sub
pop
add
xchg
flds
sbbl
push
mov
push
adc
loopne
cmpsl
mov
add
pusha
xorl
test
sbb
add
stos
lahf
into
sbb
add
push
addb
add
mov
add
sti
addr16
lahf
loopne
cmpb
adc
mov
cmp
jl
inc
push
out
mov
cmp
jne
add
test
jg
jl
add
aas
mov
jge
add
sub
popf
cmp
jne
sub
xchg
mov
sbb
pop
movsl
es
add
sbb
push
add
inc
xor
mov
push
sbb
rclb
and
inc
andl
add
xor
cmp
icebp
add
rorb
aad
cmp
pop
mov
ds
mov
add
jecxz
xor
add
push
add
loop
push
fwait
lock
add
xor
js
xchg
xchg
test
push
or
jge
adc
je
call
rolb
xchg
add
insl
clc
xor
rolb
call
sbb
add
fstpt
push
jmp
je
add
inc
or
add
enter
mov
in
adc
ret
pop
cltd
add
ds
nop
je
rcrb
mov
sbb
add
pop
cs
roll
loopne
add
lods
push
call
mov
pop
fldl
pop
dec
inc
sbb
test
subl
leave
cmp
xlat
dec
mov
repnz
inc
stc
popw
dec
fsubr
shrb
fldl
and
jl
adc
add
push
in
incb
adc
sub
mov
mov
xor
lret
lods
adc
je
jp
add
mov
decl
mov
mov
out
add
xor
aas
or
push
jb
or
call
fwait
lret
inc
lock
inc
push
sbb
push
and
cmp
dec
pop
cli
or
enter
add
pop
inc
cmpl
mov
sub
inc
push
lret
rolb
mov
pop
mov
jle
clc
orb
stos
cltd
mov
enter
and
mov
clc
cmp
add
cli
or
adc
pusha
lea
cwtl
in
addl
push
or
xor
cmp
inc
add
jno
push
push
and
xchg
pop
mov
arpl
sbb
clc
push
inc
int3
sub
jbe
jb
out
bsf
dec
in
hlt
pop
iret
sbb
push
or
call
rol
mov
lcall
fnstcw
nop
psubq
jbe
outsl
mov
fs
add
dec
add
dec
mov
add
loopne
adc
push
js
and
push
or
out
movswl
pop
mov
mov
pop
dec
into
dec
lcall
dec
fcoml
add
cmp
cltd
push
mov
xor
add
rcrl
into
add
xor
sub
xchg
add
hlt
or
pusha
out
cmp
into
pop
add
stos
jae
add
es
push
jmp
fbstp
mov
mov
addb
sbb
fisubrl
jmp
or
ljmp
adc
mov
cs
or
mov
es
lock
popa
jne
push
push
hlt
ss
add
sbb
dec
nop
mov
xor
cmpb
pop
lcall
rcll
lret
add
pop
movsl
push
es
cmpsl
pop
or
push
loopne
add
pop
movb
cmp
mov
or
sub
xor
jb
add
ja
imul
inc
in
mov
mov
sub
ret
sbbb
add
push
ja
add
rol
aam
bound
out
es
je
lods
xchg
jg
add
mov
add
sahf
push
cld
cmpb
xor
fidivs
pusha
jae
and
bound
or
add
cmpsb
enter
jnp
jb
in
or
cmp
fs
xor
dec
or
int3
and
adc
jns
add
push
jo
dec
pop
fdivrl
roll
xchg
rclb
lea
les
cltd
add
cmc
cmpsl
fs
xor
mov
sub
or
pop
jne
mov
and
testl
add
sbb
pop
add
mov
inc
add
das
push
ret
icebp
xlat
add
lea
add
leave
mov
faddl
mov
lock
cwtl
jmp
pop
lret
push
push
push
dec
inc
mov
out
add
or
jne
lea
scas
sub
icebp
xchg
dec
loopne
push
push
and
cmp
cmp
or
add
and
and
cmp
pop
or
add
testl
pop
xchg
mulb
jnp
add
hlt
bound
mov
push
js
fsts
ret
inc
jmp
push
xchg
cmp
and
push
or
lods
loopne
add
jmp
mov
dec
movsl
push
jns
sbb
push
dec
sbb
lock
ja
add
or
push
jl
or
divb
mov
loopne
add
push
add
add
pop
jecxz
iret
dec
lret
sbb
pop
inc
push
addb
inc
loopne
add
cmp
mov
add
add
xchg
mov
add
aas
push
ja
add
inc
add
loopne
add
cmc
dec
inc
call
mov
cmp
bound
loope
mov
sub
sbb
daa
adc
add
dec
cmp
mov
and
add
inc
iret
sub
movsl
xchg
add
shll
push
ret
sarl
xor
pop
adc
nop
add
jb
dec
icebp
and
fistps
sub
popa
or
pop
into
clc
xor
add
or
and
sti
add
fldcw
add
lahf
lock
dec
add
shll
cwtl
inc
add
and
adc
cmp
cli
lret
mov
rorl
sub
cmp
jecxz
add
jne
dec
outsb
shr
add
jnp
jmp
or
aas
xchg
lock
cmp
ret
shlb
pop
fildl
testb
pop
add
popa
xchg
push
inc
mov
jge
add
sub
inc
arpl
add
leave
push
xor
xor
xor
jp
or
decb
jns
xchg
in
xor
xor
push
xchg
add
or
add
lret
ja
pop
dec
sbb
mov
pop
push
pusha
adc
inc
filds
xsave
jae
sbb
add
stc
jl
add
xlat
cmp
lcall
imul
leave
pusha
imul
push
rorl
call
or
add
mov
or
pop
fwait
cmpsl
add
sbbl
add
dec
push
jo
jno
dec
add
les
add
daa
or
add
adc
shr
add
pop
call
push
cmp
xor
jne
hlt
punpckhwd
pop
clc
mov
test
enter
and
push
adc
ss
add
testb
mov
icebp
sub
imul
jl
lods
pop
clc
or
out
fdivrs
std
push
cmpsl
and
cmp
gs
loopne
lea
add
cwtl
xor
in
fiaddl
mov
jge
push
nop
cmp
push
fsubs
ja
jle
addb
out
sbb
sti
sbb
mov
ja
lret
add
sbb
pop
add
inc
loopne
negl
dec
mov
xor
imul
rcrl
sub
inc
ss
jle
loop
add
or
pop
jne
add
push
add
mov
jecxz
icebp
add
jb
bound
pop
cmp
adc
pop
clc
lock
pop
nop
xor
pushl
push
add
outsb
call
add
test
jg
push
loope
xlat
xchg
add
enter
addr16
mov
ljmp
xchg
into
dec
dec
and
or
xchg
filds
jmp
adc
ret
adc
sub
or
in
mov
add
lods
mov
xor
cmpsl
push
mov
lcall
decl
push
sub
cltd
imul
and
sub
inc
insb
add
pop
mov
add
lock
scas
push
and
add
dec
jae
sub
mov
ss
add
ret
ja
je
pushf
add
mov
mov
add
jb
mov
sbb
add
mov
add
or
push
hlt
push
and
inc
daa
push
fdivs
add
xchg
or
add
dec
mov
add
outsl
xchg
rolb
add
popf
or
push
int3
imul
xchg
jle
cwtl
shll
pop
add
daa
mov
add
fcoml
pop
sbb
sbb
add
push
add
xchg
and
sub
xlat
add
jp
xor
add
sub
xor
dec
mov
sub
mov
sqrtps
nopl
es
or
mov
push
shlb
add
push
push
add
les
add
or
mov
jmp
add
push
xchg
pop
add
xlat
jmp
testl
stos
xor
adc
xor
add
add
xchg
fidivl
inc
add
dec
shrl
adc
das
jp
call
add
xchg
pop
addl
inc
or
push
push
mov
dec
mov
sub
add
fcmovne
dec
pop
jge
add
les
cmpl
adc
jnp
jmp
sti
or
je
add
mov
add
and
mov
lcall
mov
jno
dec
jmp
add
sub
ret
and
jae
jne
pushf
xchg
mov
jp
push
aaa
gs
mov
add
je
pushw
jle
pop
mov
add
stos
and
cwtl
mov
or
das
into
or
mov
in
pop
dec
les
pop
mov
inc
sahf
dec
inc
sub
pop
rol
pop
and
xor
add
pop
mov
cmp
stos
cmp
scas
push
jbe
dec
lods
add
ja
scas
jnp
add
push
xchg
aam
mov
dec
or
scas
ss
add
sti
inc
pop
pop
outsb
je
add
dec
push
sarb
push
push
cmp
dec
adc
aam
nop
jno
xor
add
mov
sub
stos
adc
gs
adc
clc
and
mov
nop
mov
and
imul
and
or
jp
pusha
cmp
das
lds
loopne
xor
repz
add
push
mov
add
and
mov
sub
inc
rcrl
mov
bsf
mov
loopne
ja
cmpl
push
lock
add
adcl
lock
insl
pop
scas
aad
push
inc
add
mov
add
jae
arpl
and
lds
sub
dec
sbb
or
aaa
insl
mov
aad
sub
daa
pop
fs
xadd
js
jmp
push
nop
inc
test
jns
add
mov
clc
push
cli
test
lahf
dec
adc
je
inc
xor
shrb
test
jl
popa
test
les
insl
jge
lock
dec
fcompl
fs
add
add
sbb
fmuls
pop
in
add
mov
call
add
lret
jb
jo
add
test
add
mov
mov
rcl
and
in
adc
dec
add
sbb
mov
mov
out
inc
std
mov
shl
inc
pop
sub
nop
inc
ret
daa
ret
sub
mov
jmp
sub
popf
xor
mov
int3
daa
add
js
adc
inc
adc
sbb
dec
mov
pop
add
mov
adc
mov
adc
dec
sbb
mov
dec
and
fdivs
push
push
insl
add
aad
push
pop
gs
es
dec
popf
mov
cmp
test
pop
inc
push
xchg
add
adc
sub
addr16
cmp
lods
addb
es
mov
add
mov
daa
add
push
or
mov
pop
lea
push
push
add
pop
nop
pop
inc
arpl
fiadds
rcpps
add
dec
or
in
add
dec
and
call
add
mov
sbb
les
mov
ss
cmp
jmp
popf
in
sbb
hlt
inc
mov
outsb
sbb
inc
sarl
leave
fistps
lods
test
xor
mov
and
decb
nop
add
push
sub
jmp
pop
or
and
aaa
pop
dec
lods
cld
rorb
js
insl
addb
push
gs
addb
push
sahf
insl
subl
jo
sub
mov
xor
out
aas
jo
sbb
add
hlt
stc
add
dec
adc
in
mov
scas
inc
jno
fildl
sbb
js
incb
sti
add
jg
cmp
jne
icebp
push
adc
inc
call
insb
add
pop
pop
cwtl
stos
jmp
sbb
sarl
add
pop
les
orb
inc
add
or
addl
dec
je
or
ljmp
and
ja
jne
adc
pmaxsw
fcoml
sbb
xsavec
jno
pop
jmp
xor
cmp
push
cld
loop
les
in
or
popl
push
shr
addr16
mov
xor
outsb
sbb
addb
jne
pop
hlt
lock
mov
adc
inc
addb
push
mov
mov
dec
mov
sub
jne
into
mov
orb
dec
lock
dec
mov
int3
shrb
push
or
or
imul
add
sub
mov
cmp
push
adc
add
dec
jmp
inc
push
bound
cmp
pop
daa
jmp
pusha
inc
in
stc
aaa
in
add
and
jmp
das
xor
nop
mov
mov
ret
flds
add
or
adc
or
into
adc
clc
push
out
push
loopne
call
push
mov
fsub
nop
add
adc
into
add
or
add
and
jo
cs
movsb
andl
adc
adc
mov
xchg
mov
fsubs
cmp
pop
add
or
jns
add
lock
and
test
or
leave
add
je
data16
xchg
dec
cmp
cmpsb
mov
xchg
shl
cli
hlt
cmp
push
mov
call
loopne
jb
add
cmp
dec
or
pop
adc
mov
movsl
or
add
add
and
xchg
lea
dec
lret
pusha
fs
jmp
pop
aas
xchg
and
pusha
pushf
xchg
mov
test
sbb
adc
and
pop
movsb
mov
mov
cmpsl
inc
mov
mov
mov
aad
mov
cltd
movsb
jp
dec
mov
das
xchg
cld
mov
ret
add
cmp
jb
je
inc
add
or
out
add
imul
mov
scas
popf
je
fimuls
adc
mov
mulb
rcrb
xchg
add
pop
adc
leave
push
jecxz
mov
add
lock
subl
sub
or
add
lret
adc
adc
sbb
jno
xchg
pushw
les
in
leave
mov
mov
sti
mov
dec
arpl
pop
repnz
mov
push
add
adc
or
mov
xchg
sub
test
xchg
andl
test
int3
sub
inc
mov
clc
jns
lcall
dec
xchg
sbb
filds
and
sub
add
lahf
flds
xor
out
pop
sbb
inc
ljmp
and
test
inc
and
aam
push
sbb
inc
mov
jne
hlt
sbb
scas
add
mov
pop
arpl
pop
pop
movsb
add
mov
and
test
push
fmuls
lea
push
adc
add
rorl
xor
data16
add
sti
cmp
repz
inc
dec
test
add
xor
xor
idivb
add
loope
and
add
add
add
add
inc
pop
std
inc
mull
shr
adc
in
add
jnp
les
ljmp
push
dec
repnz
ja
jns
nop
xor
cli
pop
adc
shl
mov
mov
imul
add
cmpsl
jl
add
mov
xor
enter
pop
clc
mov
cmpsb
fldl
sub
jb
adc
inc
and
add
out
test
add
lea
adc
add
push
or
push
jbe
lahf
push
and
xor
dec
add
add
adc
loop
jl
add
mov
cmc
add
lret
adc
or
sub
mov
or
dec
push
and
add
pop
and
inc
cmp
inc
subb
jb
push
inc
mov
pop
cmc
xor
cwtl
dec
stos
ret
call
out
subl
cmp
add
pop
push
or
psubw
insl
gs
and
stos
cli
add
adc
dec
add
leave
ja
add
dec
adc
je
cli
sbb
in
add
mov
movsl
in
pusha
in
mov
shrb
out
je
shlb
adc
sbb
in
jle
jmp
lds
icebp
dec
add
sbb
adc
adc
std
push
cmp
test
outsb
sbb
cmp
mov
mov
nop
cmc
enter
ss
rcr
cmp
add
lahf
imul
sub
aam
mov
and
add
pop
fsubr
add
cld
sub
xchg
cmp
lds
fcomps
mov
mov
adc
mov
sub
shrb
inc
clc
idivb
hlt
cmp
enter
roll
pop
mov
dec
arpl
in
push
sub
les
aas
xchg
and
cwtl
rolb
lock
mov
add
mov
add
push
hlt
mov
pop
iret
mov
sub
sbb
ss
stc
inc
or
mov
fstpl
add
dec
xchg
mov
mov
jo
add
push
push
insl
das
fs
mov
cld
push
pop
add
or
repnz
popa
mov
push
add
and
jge
inc
xor
loopne
xchg
add
push
mov
sub
cmp
add
test
pop
add
push
mov
je
add
aam
test
add
xor
pop
mov
inc
inc
and
add
icebp
sbb
mov
mov
cmp
or
and
mov
inc
jb
add
imul
enter
popa
jle
sbb
inc
add
fld
sub
insb
xchg
push
add
adc
rorb
cmp
pusha
add
call
pop
sbb
and
dec
push
notb
push
mov
jl
and
xlat
js
xor
mov
addl
xor
and
les
inc
dec
mov
xor
es
aas
inc
xor
divps
sbb
add
mov
or
lods
push
loope
adc
je
insb
mov
xor
int3
out
push
add
cmp
sub
test
inc
inc
add
fcoml
sbb
cli
mov
sbb
enter
dec
mov
mov
hlt
rcrb
or
mov
cmp
adc
rep
scas
fsubl
test
sub
adc
xchg
or
aas
jo
aas
pushf
pop
add
lahf
cwtl
lahf
mov
nop
aaa
js
mov
dec
or
mov
test
andb
scas
pop
cmpsl
sbb
fs
je
mov
mov
lock
cmp
flds
cld
xor
cwtl
iret
adc
in
movsb
xor
repz
adc
mov
pushf
js
xorl
inc
sbb
stc
clc
andl
hlt
xchg
addb
sbb
and
aas
adc
inc
leave
inc
rolb
repnz
xchg
imul
stc
dec
das
and
push
add
je
xchg
data16
push
sub
or
and
xchg
addb
add
sti
shll
dec
pop
xchg
pop
cld
xchg
sub
xor
jae
xchg
call
sbb
nop
inc
cs
cmp
cld
jne
out
mov
pop
adc
add
add
or
mov
mov
add
popf
xor
xchg
pop
mov
mov
or
push
jb
cmp
aam
inc
inc
xchg
and
shlb
push
mov
mov
add
sbb
push
add
dec
dec
push
in
mov
cmp
std
jl
sbb
leave
xchg
sbb
sbb
push
pushf
sarb
iret
jmp
cld
ret
inc
inc
add
loop
or
or
stos
push
clc
pop
dec
cld
inc
add
stos
xorl
and
stos
pop
adc
or
rol
pop
or
mov
add
xchg
add
add
ljmp
push
pop
in
stos
add
jmp
loop
jge
andl
push
mov
mov
stos
xchg
add
popa
fdivl
divl
push
add
inc
dec
pop
or
adc
xchg
push
stos
cmp
clc
and
jae
addb
cmp
sbb
push
loop
add
add
sub
fldt
mov
dec
add
faddl
add
dec
jne
add
xor
ljmp
jecxz
aas
jae
add
add
sub
es
sbb
inc
push
add
and
and
add
cmp
jbe
jg
jmp
pushf
xchg
rclb
and
add
shlb
pop
jbe
dec
mov
jp
sub
call
not
cvtdq2ps
inc
loop
lock
pop
shlb
add
and
outsb
inc
add
and
std
es
jg
push
add
add
jge
cld
aam
sbb
jle
add
cs
inc
cmp
fidivl
jle
add
adc
sub
sub
xor
inc
pop
sub
repnz
add
imul
add
or
mov
jmp
scas
icebp
or
or
pop
push
dec
testl
shr
test
jmp
rclb
mov
das
in
sbb
or
sarl
or
stc
cmp
adc
add
push
mov
sbb
add
cmpsb
fwait
push
push
cld
xor
xchg
popa
jmp
nop
xor
sub
popa
inc
xlat
je
cmp
lock
add
test
je
or
cmp
daa
mulb
jo
and
dec
xchg
adc
sbb
add
or
add
lods
cmp
rcrb
test
jmp
sbb
add
mov
mov
push
clc
cwtl
push
and
es
xor
add
jl
in
xor
xor
gs
ss
movb
push
xlat
jmp
inc
jbe
cmp
sarl
outsl
lret
andl
cmp
scas
mov
movsb
jno
scas
xor
sub
mov
decb
insb
add
mov
xchg
pop
add
imul
add
shl
jbe
cmp
dec
add
and
ret
cmp
dec
addb
add
sarb
push
inc
jl
popa
sub
lret
sbb
inc
mov
pop
pop
ret
inc
cld
sub
push
lret
add
into
daa
cs
repz
add
push
mov
adc
and
add
es
mov
add
ja
xchg
fsubs
cld
add
or
in
and
jno
add
add
push
mov
iret
ja
mov
in
add
sub
ficoms
mov
sbb
adc
xchg
add
dec
inc
jne
jmp
mov
xor
in
add
cli
inc
mov
dec
inc
pop
push
adc
loopne
xor
and
push
loop
jne
mov
cld
jecxz
xor
mov
leave
repnz
cltd
mov
shll
add
jbe
add
adc
sub
or
add
rorb
cmc
xchg
push
or
cmp
testw
lahf
pop
adc
jle
add
adc
inc
push
in
shr
bound
aas
cmpb
adc
add
gs
mov
in
pop
loopne
fabs
call
or
fldt
add
cmpsb
test
add
addb
pop
fidivrl
fbstp
lea
add
mov
inc
sub
adc
call
sub
sub
cmpb
mov
xchg
or
add
dec
or
cmp
cmp
movlps
sbb
xor
jo
sbb
dec
js
adc
cmp
in
or
pop
data16
cmpsb
adc
xor
pop
sub
add
and
sub
mov
mov
ljmp
push
add
inc
push
mov
addr16
cs
enter
sysexit
test
push
into
mov
repz
mov
add
testb
dec
add
or
fidivl
jae
add
push
nop
rclb
add
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
mov
mov
or
out
add
and
jne
dec
out
add
add
stos
add
sbb
and
ss
xor
addr16
andl
cmpb
shl
stos
add
repnz
mov
xor
mov
push
test
pop
lock
add
fnclex
add
add
or
add
or
call
sub
jo
cmp
ret
add
sub
movsb
pop
add
add
je
push
sub
fists
jo
pop
aam
add
sbb
sbb
and
popa
xchg
loope
cwtl
div
dec
mov
push
inc
add
add
aas
jmp
fucomi
fwait
add
clc
test
popa
sahf
cmp
ffree
mov
mov
nop
add
xchg
and
add
aas
sub
dec
add
add
fimull
add
push
test
and
mov
xor
dec
mov
adc
xchg
cmp
imul
nop
pusha
es
hlt
jl
add
mov
mov
mov
hlt
push
add
push
jne
sbb
jno
mov
add
add
add
add
daa
add
in
mov
sub
xor
mov
jp
lds
adc
adc
inc
inc
and
inc
loopne
cwtl
test
add
or
or
cld
les
in
and
sub
rcrb
add
lea
mov
lds
jae
mov
push
add
xlat
and
movsb
mov
cmpb
dec
sbb
mov
cs
jo
dec
jbe
or
scas
jns
xorl
jge
or
lods
and
loopne
ret
rorb
fwait
jo
xchg
setl
and
clc
add
inc
inc
push
aam
push
or
mov
and
pusha
in
jnp
movsl
pop
dec
hlt
xor
jecxz
push
not
mov
pop
or
shl
cli
fsub
mov
or
loopne
add
push
jno
mov
out
add
mov
and
popf
push
jg
and
or
jl
add
push
ret
adc
mov
clc
mov
add
test
adc
fs
sub
shr
add
icebp
cmp
jmp
repz
pushw
and
dec
mov
clc
cmp
add
and
popf
mov
adc
cli
jae
jl
add
shlb
xchg
add
add
jmp
xchg
adc
sub
dec
jecxz
setne
loopne
jne
loope
sbb
leave
xor
inc
adc
mov
lret
nop
in
popf
lret
test
cltd
add
test
adc
add
jmp
loop
inc
pop
ds
pushf
cmc
add
daa
sbb
add
sbb
lret
push
leave
addb
jbe
and
sbb
or
in
xor
daa
or
adc
push
iret
sarb
add
add
cs
or
sub
aas
push
dec
movsl
push
loopne
popf
stc
cmp
jbe
pop
scas
xchg
popa
or
cmp
mov
add
popf
xchg
or
cmp
inc
cmp
sar
or
push
lahf
push
les
mov
push
adc
add
dec
paddsw
out
pop
add
mov
lahf
outsl
mov
js
hlt
add
in
aad
cmp
inc
inc
inc
add
add
mov
add
add
fdivp
enter
or
or
add
ljmp
dec
jne
jle
in
arpl
cmp
dec
addr16
sub
loop
pop
mov
jo
add
pusha
movsb
test
in
ret
xchg
popf
rorb
push
jl
inc
lods
xlat
dec
in
add
cwtl
add
das
loope
loopne
jns
add
hlt
loop
or
sbb
aam
shl
inc
lss
sbb
pop
lods
xlat
push
adc
push
and
add
xor
clc
push
jne
xor
add
in
jge
lock
incl
jae
aas
dec
in
adc
daa
mov
fstps
and
cmp
or
in
sarl
sbb
jl
pusha
pop
mov
incl
add
sub
jae
lods
dec
add
andb
and
decb
in
je
jge
add
sbb
xchg
sbb
cmc
shrl
insl
cmp
add
repnz
lahf
mov
inc
inc
add
inc
dec
dec
sbb
dec
dec
add
dec
push
push
push
cmp
mov
pop
add
popa
bound
jae
jo
add
imul
outsl
add
jb
je
jbe
ja
add
xor
xor
xorb
sub
add
sub
add
jge
cmp
sub
add
daa
or
add
push
call
xchg
pop
stos
add
or
add
clc
or
adc
xchg
ret
jmp
hlt
sub
cmp
repz
fsubrl
xchg
incl
data16
loope
mov
cmp
add
and
jmp
add
xchg
in
loopne
push
dec
add
pop
jle
jno
sub
test
rcrl
add
or
inc
lahf
add
xchg
andb
add
add
xor
lock
cli
adc
stos
lret
xchg
pop
pop
jle
or
dec
adc
mov
faddl
add
jg
adcb
ds
out
cmp
adc
in
jno
pop
mov
dec
inc
dec
in
call
jbe
sub
movl
roll
decl
xchg
lods
add
jle
cli
fldpi
fisubl
add
and
adc
xchg
out
cmp
push
nop
push
xchg
jnp
jo
mov
add
pop
lahf
sbb
push
movsl
cmp
xlat
test
fildll
adc
add
dec
leave
or
imul
add
add
pop
jo
and
sub
out
push
mov
insl
lods
sbb
enter
gs
fdivrs
inc
rorb
or
mov
dec
pop
inc
sub
hlt
push
push
lods
les
pushf
push
pop
or
cmp
je
xchg
sti
lea
mov
imul
xor
mov
mov
and
outsl
mov
dec
add
pop
mov
or
push
and
mov
loop
xchg
sbb
or
inc
or
cs
jb
add
push
push
inc
push
ror
loope
aad
insb
xchg
and
hlt
ljmp
aam
lods
lahf
jg
push
mov
leave
das
or
jle
or
add
mov
push
adc
mov
pop
cmp
test
daa
and
hlt
sbb
pop
adc
dec
xor
lcall
fstps
lret
add
xor
or
jl
jecxz
loopne
fld1
mov
xor
xchg
testb
add
jne
loop
add
xchg
add
test
xor
add
adc
pop
sub
and
mov
add
decb
fcompl
mov
add
shll
in
jge
add
mov
or
cmp
add
adc
pop
and
testl
mov
cmp
add
jo
lock
mov
and
add
sarl
sbb
pop
das
xchg
out
rolb
add
not
stos
cli
ja
mov
lock
ret
or
gs
push
add
idivl
push
into
inc
les
jne
or
and
push
enter
and
cmpsb
ficomps
movsl
test
pop
in
lret
jb
add
xlat
push
sarb
mov
mov
insb
movsl
mov
and
xchg
lock
sub
mov
inc
jg
add
lahf
mov
jnp
das
jns
sbb
push
hlt
push
inc
jae
xchg
adc
push
sbb
dec
add
fs
jne
or
mov
shr
rolb
xlat
arpl
or
lret
add
inc
pushf
movsb
sbb
out
jno
scas
fisttpl
pop
mov
mov
xor
cld
jno
push
mov
sub
negl
push
scas
shl
test
add
xchg
bswap
clc
daa
add
aaa
push
xor
mov
xchg
test
xor
sbb
sbb
rorb
push
add
mov
lods
out
xor
cmp
jne
lcall
sbb
imul
mov
push
push
dec
adc
add
or
push
cld
test
xchg
inc
add
mov
fs
add
mov
xchg
mov
andb
jae
in
stos
jle
lods
push
pop
test
add
adc
jne
mov
push
pop
cs
add
dec
icebp
call
xchg
sub
aaa
subb
sbb
fstpt
push
test
cmp
add
cmp
mov
ljmp
xor
test
out
js
and
in
add
test
dec
mov
mov
xor
mov
mov
xchg
fwait
adc
pop
es
sbb
clc
ljmp
add
inc
mov
inc
inc
sub
jo
stos
sarb
movsb
enter
cwtl
xchg
cld
or
fadds
add
das
rcrb
add
pop
lock
or
push
bound
je
hlt
adc
adc
sub
movsl
fs
popa
imul
push
adc
call
in
lret
add
mov
sub
add
hlt
pop
cmc
sub
mov
movsl
loop
and
cmp
pushf
dec
in
insl
mov
push
cltd
adc
dec
mov
mov
add
je
xor
repz
out
mov
js
xchg
push
xchg
in
jl
add
pop
lds
adc
pop
mov
adc
call
in
sub
lea
xor
jmp
cltd
decl
mov
xchg
pop
dec
sarb
and
lods
lds
lret
rorb
add
test
add
cmpsl
jns
mov
fldenv
pop
and
add
nop
dec
push
and
fstpl
fwait
push
shll
add
lea
cmp
add
mull
loope
outsb
fldl
in
mov
jb
cs
jae
inc
ret
and
inc
jp
cmp
mov
ja
test
cli
dec
mov
pushf
add
and
cmp
mov
sbb
inc
pop
jo
rorb
test
xor
jae,pn
push
idivb
pop
ja
outsb
xor
cmp
mov
aam
adc
inc
jb
xor
add
lret
jbe
shrb
jle
add
add
clts
fdivrs
jae
add
repz
into
jne
xor
add
fimull
aad
add
rol
iret
shr
rclb
mov
subl
add
fsubrl
out
repz
call
mov
ja
xor
cld
add
mov
sbb
mov
jo
jl
daa
xchg
aam
and
mov
loope
inc
jp
pop
in
mov
pop
cli
cmp
and
and
call
mov
sub
push
and
lods
jo
xchg
jne
add
shrl
jecxz
jmp
cmp
pop
or
add
clc
mov
cmp
rcrb
cmp
cmp
outsl
icebp
rcrl
repz
lods
mov
cmp
roll
ret
clc
dec
add
das
mov
repnz
jno
add
test
pushf
loop
ficoms
add
inc
add
adc
sbb
add
dec
stos
adc
push
dec
stc
xchg
mov
or
cmp
add
pop
cwtl
pop
lea
xchg
add
fsub
sarl
lock
scas
call
sub
mov
ljmp
jl
dec
lds
mov
dec
int
icebp
popa
jle
das
aam
mov
cmpsl
add
pusha
pop
pop
pushf
push
fidivl
xchg
adc
pop
add
xchg
stc
cmp
mov
pop
aas
add
jae
xchg
jnp
sysenter
sbbl
enter
and
loop
xchg
scas
add
add
add
adc
jbe
add
pop
and
test
cmp
addb
loop
mov
mov
sar
scas
add
sbb
jo
adc
mov
lea
rep
pcmpgtd
inc
pop
rcrl
xor
loopne
fs
cld
add
jg
les
mov
orl
subl
leave
out
add
movsb
mov
int3
stos
and
dec
mov
or
cmpb
call
in
add
add
pusha
scas
or
pop
enter
and
int3
fiadds
loopne
inc
aam
cmp
jge
rclb
and
pop
adc
imulb
pop
aam
inc
call
test
fs
push
rorb
fmul
push
add
xor
je
in
enter
push
sahf
dec
mov
lahf
sub
inc
add
in
xor
ja
dec
sahf
out
test
cmp
clc
add
dec
aam
fiadds
adc
pop
mov
rcll
iret
jle
arpl
mov
inc
popa
fildll
out
hlt
dec
test
fisubs
inc
mov
lods
cmpl
dec
mov
fdivrl
cwtl
pop
add
es
add
cli
and
aam
ja
xchg
cmp
fnstenv
sbb
loope
cs
sbb
mov
in
nop
fdivl
dec
dec
sbb
sub
mov
xchg
dec
pop
pop
jno
jmp
test
push
and
dec
mov
jb
rorb
nop
in
rcll
pop
fldenv
or
mov
jnp
push
pop
or
dec
inc
out
add
incl
add
jecxz
xchg
hlt
inc
cmp
xchg
add
sub
or
lret
test
dec
xor
xchg
loope
cmpsl
jbe
stc
and
add
cli
mov
push
or
je
mov
adc
btr
repz
sub
jo
movsl
or
sub
int3
rcrb
dec
jns
add
std
pusha
addr16
add
xchg
lret
pop
hlt
lahf
xlat
push
pop
dec
rorb
inc
sbb
aad
push
aam
xor
leave
xorl
dec
in
add
jb
ret
popa
inc
addr16
pop
cmc
mov
wrmsr
stc
icebp
pop
or
aas
or
cwtl
add
dec
inc
repz
xchg
jmp
das
out
push
sbb
push
cmp
push
add
or
bound
push
sbb
test
or
add
lods
xor
push
enter
mov
ljmp
sarb
pusha
mov
std
leave
adc
mov
add
cmp
dec
xchg
pusha
add
cld
mov
dec
add
sbb
pop
push
push
push
sub
pusha
test
add
clc
leave
push
push
vmovlps
and
sub
sbb
adc
add
mov
jmp
and
mov
or
pop
add
and
push
int3
cld
xchg
enter
pop
aas
mov
inc
mov
push
cmp
loopne
sbb
fucomi
add
push
xor
les
sub
popf
cwtl
jle
cmp
pop
sub
mov
out
mov
adc
add
add
mov
clts
clc
jecxz
cmovb
mov
mov
pop
dec
add
push
rolb
dec
call
inc
mov
add
and
cld
lcall
pop
mov
add
and
mov
xlat
orl
adc
ljmp
and
cwtl
std
push
dec
pop
push
mov
add
faddl
and
fwait
test
add
adc
rclb
enter
mov
test
sarb
mov
nop
add
jne
jg
test
icebp
outsl
inc
inc
js
popf
mov
jbe
adc
rolb
xchg
mov
xchg
add
and
imul
jl
add
loop
pop
inc
rcr
or
jae
addb
or
mov
mov
shl
lret
add
push
push
dec
stc
lahf
test
inc
add
inc
pop
xchg
xor
rorb
pushf
mov
addr16
orb
cmp
xchg
jne
pop
pop
nop
outsb
popf
mov
and
push
leave
jp
jb
dec
jge
in
ja
add
daa
or
jle
movd
push
and
and
jns
add
in
inc
insb
push
hlt
mov
mov
sub
mov
xor
xchg
loope
fsubs
sub
mov
scas
addb
mov
mov
jl
adc
sbb
mov
pop
fmull
dec
jns
insb
lret
and
mov
inc
in
fwait
mov
pop
addb
movsb
incb
popf
sbb
or
and
adc
es
out
addb
jge
push
pop
xchg
mov
inc
dec
repz
push
dec
add
mov
mov
add
ss
dec
jl
add
inc
mov
or
add
mov
inc
decb
lods
imul
sub
or
hlt
mov
pop
mov
mov
jg
mov
push
xor
shrb
adc
cltd
push
js
je
xlat
movsl
adc
adc
add
xchg
lret
iret
int
add
push
xchg
pop
cmp
mov
roll
mov
pop
nop
mov
sahf
mov
pusha
fldenv
add
add
pop
cmp
jmp
sub
pop
enter
nop
in
sbb
stc
jmp
mov
mov
jns
dec
cmp
lea
xchg
fmull
loopne
xchg
add
xchg
push
lock
or
add
sbbl
sbb
inc
sti
or
rcll
leave
fadds
push
mov
or
mov
movsb
inc
pop
mov
lods
gs
loopne
fists
mov
xchg
pop
mov
outsl
and
jo
popl
jle
mov
xchg
pusha
inc
in
mov
adc
clc
xchg
cmp
and
cmp
jle
pusha
repnz
or
adc
and
add
add
sub
jp
add
mov
pop
dec
mov
call
or
pop
mov
xor
lret
sub
inc
insb
add
jae
sbb
inc
lds
xor
add
ja
adc
and
mov
add
daa
adc
add
add
out
sbb
add
sub
sub
in
in
jl
and
ds
cltd
and
out
aam
mov
jnp
pop
outsl
lcall
mov
mov
add
daa
inc
xor
outsl
fisubl
add
and
pop
stos
jo
add
fildl
aaa
scas
lcall
mov
mov
fmul
add
leave
test
aam
jne
jnp
adc
mov
lret
scas
jge
ds
in
and
clc
xchg
ficompl
movsl
jge
xchg
dec
into
out
ds
nop
sbb
push
or
cmp
addr16
push
dec
gs
mov
add
clc
jae
or
fidivl
add
out
test
push
loop
sbb
dec
iret
mov
inc
inc
cltd
scas
std
lcall
adc
test
xchg
fdivl
stos
jecxz
and
mov
inc
xorl
int3
rcll
pop
pop
inc
dec
das
jnp
or
les
es
add
xchg
and
dec
jbe
std
dec
into
cmp
mov
push
xor
push
cmp
fadds
add
xchg
push
mov
test
stos
jne
add
out
das
js
cmp
adc
mov
rcll
pop
lods
mov
and
clc
sub
sub
jl
cli
adc
sbb
or
mov
push
add
dec
pop
inc
loop,pn
ret
cmp
adc
out
add
data16
inc
sub
inc
cld
sub
push
daa
jne
and
pop
pusha
add
jns
mov
aas
addr16
call
in
adc
push
lock
out
mov
hlt
jb
stos
add
lret
fs
sbb
scas
dec
add
out
rcrl
add
add
inc
shrb
push
dec
jb
cmp
bnd
loopne
out
das
pop
xchg
andb
xchg
clc
add
in
cld
mov
dec
repnz
lods
push
sbb
je
pop
arpl
loopne
andb
sti
or
lea
push
andl
dec
insb
mov
fimuls
pop
sub
dec
les
sub
mov
add
mov
fists
fsubrs
lahf
push
add
adc
ljmp
inc
sub
mov
or
and
mov
nop
sbb
adc
or
lock
stos
xor
jle
adc
sub
cmp
sub
adc
sbb
add
jp
cmpsb
xchg
sub
mov
cmpb
sub
jb
fdivl
vcvtsd2si
ret
cmp
inc
fcomps
add
daa
jnp
jg
jmp
fldl
repz
push
push
jmp
loop
cmp
add
jbe
ffreep
pop
pop
push
jae
jmp
icebp
or
dec
pop
and
mov
dec
daa
mov
testl
imul
aam
mov
sub
add
popf
loop
pop
push
dec
jmp
mov
rorl
add
stos
popa
xor
add
adc
data16
incb
mov
fmulp
sar
lock
add
push
add
ja
cmpsl
stos
test
movsl
fwait
or
push
bound
icebp
jl
xchg
sbb
inc
ljmp
sub
and
sub
xor
sub
in
out
fs
call
xchg
push
loop
adc
int
push
add
repnz
cmp
into
jb
cmp
jle
popa
add
pop
clc
sub
sbb
sbb
jae
pop
mov
lret
cmovne
or
add
sbb
inc
mov
in
add
cli
jbe
nop
lahf
or
ljmp
jge
cmpb
or
push
xchg
stc
sub
je
mov
ss
xchg
cmp
enter
loopne
sldt
add
add
adc
aam
or
jb
inc
jl
sub
pusha
inc
add
adc
mov
repnz
add
lret
imulb
cwtl
pop
push
push
and
add
loopne
sbb
dec
lahf
es
mov
inc
add
adc
or
aad
inc
lds
popf
push
ret
out
repnz
sti
jb
push
and
lfs
jne
adc
add
movb
xor
lds
cmpsb
rolb
adc
mov
fs
mov
cwtl
sbb
push
mov
and
enter
sub
dec
add
or
add
and
add
xor
aam
add
adc
scas
cmp
loopne
add
mov
adc
pop
inc
test
mov
clc
adc
int
cmp
add
adc
pop
aam
add
sub
cmp
jo
leave
js
add
mov
in
mov
inc
jne
adc
pop
pop
xlat
lea
call
pushw
inc
inc
inc
add
out
icebp
or
jnp
pop
and
jg
dec
push
mov
test
nop
xchg
cmp
jo
in
push
or
add
or
or
jle
rorb
xor
mov
add
cld
and
or
lret
insb
aad
xor
mov
cmp
dec
faddp
xor
add
in
je
icebp
push
je
add
inc
test
pop
adc
jle
dec
rorb
mov
rcl
data16
call
sarb
dec
push
xor
ss
pop
cmp
push
inc
std
in
and
mov
in
jbe
jo
cmp
mov
or
add
sbbb
push
sub
aas
jmp
add
sti
rol
jne
jp
or
dec
dec
bound
stc
sbb
push
lret
pop
cmc
addb
or
sub
add
movsl
jmp
mov
add
lock
leave
pop
daa
add
jnp
outsl
and
enter
sbb
add
imul
test
mov
adc
add
dec
movb
push
pop
dec
adc
test
aas
inc
push
repz
mov
add
mov
iret
add
xor
stos
add
jecxz
sbb
sti
and
mov
xchg
and
pop
or
pop
add
rol
clc
cmp
push
call
arpl
stc
and
or
lods
cmp
jno
fwait
imull
lock
or
out
adc
les
jp
add
mov
cmp
adc
fisubrl
jae
pop
cmp
je
pop
leave
mov
adc
mov
cli
jl
mov
sbb
and
add
adc
mov
mov
inc
sub
and
pop
mov
xor
and
or
mov
cmp
mov
add
outsl
stos
or
les
sub
lds
add
mov
adcb
mov
or
int
push
sub
sbb
lods
mov
xchg
stos
arpl
jmp
jne
sub
xchg
or
sub
jecxz
add
cmpsl
adc
dec
mov
loope
add
push
add
movsb
mov
lret
movups
push
mov
js
and
push
add
or
or
mov
into
roll
leave
or
sbb
sbb
repnz
inc
xor
test
mov
pusha
cli
jp
test
int3
push
and
mov
push
sub
pop
xchg
and
pushf
mov
sub
hlt
add
and
nop
cmp
cmp
add
outsb
xor
in
enter
mov
or
adc
mov
jmp
scas
add
and
dec
mov
pop
pusha
adcl
cld
cli
ret
lcall
add
cmovae
pop
xchg
push
or
mov
sub
sbb
cmp
add
inc
ficomps
jo
mov
mov
fs
sub
stos
mov
mov
rorl
adc
mov
add
sub
and
sbb
inc
les
ret
add
xlat
add
cs
jl
and
add
or
pop
inc
test
jb
adcb
daa
mov
js
dec
sti
jnp
adc
add
inc
xchg
pop
fadds
lock
nop
and
add
stos
int
out
push
pop
or
fdivrl
inc
xor
add
loope
ret
sbbl
pusha
cwtl
mov
add
int
mov
push
add
insb
nopl
shl
lods
fdecstp
add
fiadds
add
cmp
inc
test
add
jle
inc
outsl
sub
lea
pop
and
push
lods
cli
xor
lock
aam
push
test
loopne
rol
mov
jno
add
insb
pop
adc
andb
mov
les
cld
dec
push
inc
add
jmp
in
add
enter
arpl
jle
ja
outsb
xchg
add
aas
add
add
in
shlb
add
fistpll
adc
dec
or
push
jo
dec
and
fs
add
xor
sub
add
call
aam
push
add
xor
push
add
mov
in
lea
lds
push
push
cld
hlt
notl
movsb
outsb
shll
mov
xor
inc
sahf
inc
ret
sarb
aas
dec
loope
push
mov
xor
inc
mov
mov
mov
push
or
fst
jno
add
out
sbb
and
dec
or
adc
xor
out
add
sarl
loope
pop
ret
add
xor
and
jne
or
jae
add
cmc
add
or
adc
enter
movb
mov
push
and
imul
inc
xor
test
mov
add
fs
das
jno
out
fadds
cwtl
subb
enter
xlat
or
push
scas
testl
mov
cmc
sbbb
sbb
pop
jmp
testl
mov
mov
add
or
sbb
insb
mov
pop
rcll
arpl
lock
add
test
cmp
adcb
jns
mov
push
or
fs
rolb
bound
add
imul
icebp
push
sbb
inc
mov
leave
rolb
mov
jb
xor
add
push
pop
pop
cmpb
and
ret
lds
adc
cmp
stos
pushf
add
in
dec
xor
iret
fs
add
sti
flds
or
mov
sbbb
cmp
add
sbb
adcb
inc
add
cwtl
loop
lock
add
nop
out
fadds
lahf
test
cwtl
enter
out
add
mov
jmp
mov
int
and
mov
add
or
enter
pop
getsec
ret
adc
lea
jle
or
add
loop
shr
add
cmpb
and
jno
xor
add
mov
adc
or
adc
mov
mov
daa
sbb
flds
outsl
add
loope
mov
inc
xor
lea
add
mov
fisubl
dec
pushl
pop
sti
sbb
add
aad
mov
scas
rolb
jno
nop
loopne
mov
or
aad
jne
mov
popf
insl
inc
imul
je
pop
in
sbb
mov
adc
add
inc
adc
pop
mov
adc
dec
and
inc
mov
pusha
andl
repnz
xorb
jg
add
mov
jle
fwait
sub
add
fsubs
fs
out
cli
loope
ljmp
filds
into
sbb
add
and
js
add
cld
and
pop
cmp
and
fldenv
add
in
test
aad
push
jp
jl
pop
and
cmp
or
gs
lods
inc
les
inc
out
and
hlt
jge
add
mov
jb
add
add
rclb
inc
testb
pop
add
cs
xlat
bswap
jo
and
xchg
stos
rolb
add
adc
adc
add
xchg
xor
js
jnp
add
or
je
mov
add
rol
add
addb
xorb
int3
stos
xor
call
sub
jge
hlt
out
lcall
leave
mov
inc
stos
add
pop
cmp
lret
mov
jle
outsl
ljmp
subl
enter
push
test
fs
decb
adc
add
mov
add
mov
jmp
in
add
cmpb
add
mov
cmp
nop
jge
mov
xlat
sub
push
xor
roll
mov
es
outsb
popa
cmpsb
mov
stc
push
insl
arpl
aas
rcrb
add
loop
subl
xchg
pop
push
push
push
add
jl
test
call
pop
enter
fldenv
xchg
mov
push
clc
mov
and
xlat
scas
cli
testb
sub
js
push
add
and
jae
add
mov
dec
stc
mov
fimull
testb
or
ljmp
add
adc
push
cli
sub
mov
xlat
bound
lret
test
fimull
sti
sub
jmp
sub
bound
nop
xlat
xchg
jns
cld
jo
mov
mov
sbb
fmull
adc
fcmovnbe
or
and
inc
orl
pop
test
cld
sub
enter
push
push
add
fistpll
sahf
sub
xchg
adc
jg
test
mov
insb
out
inc
ror
ret
add
pop
add
xor
or
push
cmp
mov
push
scas
fsubl
faddl
jno
cmp
cmpsl
in
insb
add
insl
mov
dec
mov
fcompl
stc
and
xchg
mov
mov
out
shlb
mov
addb
or
cmp
mov
std
sub
sbb
mov
aaa
adc
test
aas
or
fstpl
adc
mov
test
sbb
and
inc
pop
aas
les
insb
add
pop
or
fdivrs
add
or
adc
mov
pop
ficomps
mov
test
or
dec
fadds
add
push
pop
or
xchg
rcrb
adc
add
in
push
and
add
lret
dec
aaa
or
in
pop
ds
movsb
add
cmp
les
stos
adc
adc
inc
clc
mov
and
or
adc
mov
je
loope
shlb
sti
add
push
add
add
jb
shll
add
fst
les
popf
cmp
mov
and
loopne
add
sbb
out
sub
sbb
daa
or
add
xor
jmp
pop
mov
aas
mov
inc
rorb
add
dec
loopne
cli
pop
call
jge
sub
jae
add
add
loope
and
or
rcrl
pop
negb
xor
cwtl
in
inc
sbb
jg
sub
movsl
cmpsl
xchg
lock
cmpsl
shll
push
jle
push
js
loope
xchg
sbb
sbbl
jl
add
sub
addr16
ret
or
test
popa
lods
movsb
mov
xor
sbb
inc
pop
adc
sbb
add
or
mov
add
mov
stc
pop
add
dec
aaa
das
or
xor
add
out
pop
out
or
xor
add
or
gs
lock
jns
call
push
push
jbe
scas
jecxz
ds
in
lcall
out
aaa
add
inc
push
adc
pop
shrl
cmp
enter
add
or
inc
push
inc
or
cld
mov
cmp
movsb
lcall
dec
movsb
lahf
add
clc
jecxz
test
sbb
add
add
push
add
data16
daa
mov
mov
inc
push
or
fcom
clc
test
add
lods
cmc
out
adc
loop
cmp
adc
mov
push
add
and
push
mov
xor
pop
outsb
rorl
cs
add
xor
fadd
add
pop
fiaddl
out
cmp
cwtl
xor
iret
add
outsb
pop
aam
mov
push
into
or
sbb
add
dec
lret
dec
outsl
cmp
xor
icebp
add
add
mov
mov
add
jp
fldenv
or
in
add
inc
lds
fldenv
xchg
cmp
into
add
xchg
add
pushf
shlb
std
and
or
add
loope
xchg
sbb
addl
sub
rol
or
add
cmp
inc
enter
sub
lea
clc
fs
shll
cmp
incl
call
test
add
mov
add
inc
pop
pop
adc
and
sbb
cld
out
mov
inc
stos
fistl
sub
mov
enter
dec
les
rcrb
mov
mov
xchg
xor
addr16
cmp
and
push
pop
add
jmp
pop
push
cmpsb
das
jo
nop
ljmp
test
xchg
sub
das
push
movb
pop
push
jmp
enter
pop
mov
fdivrs
mov
das
mov
dec
fwait
push
nop
lret
pop
sysret
xchg
loopne
enter
add
xchg
std
jmp
int3
and
cs
in
or
jnp
add
mov
jno
push
cmp
mov
add
mov
sub
je
in
inc
or
xchg
in
xor
xor
ret
xor
ror
mov
xor
add
sbb
shll
dec
pop
mov
dec
or
in
pop
cmc
mov
add
insl
les
loop
xor
or
lock
jge
jbe
add
sub
mov
jae
imulb
cmpsb
add
js
fbstp
cmp
dec
add
xchg
jnp
sbb
push
lock
add
jb
mov
cmc
and
sarl
call
das
cmp
mov
sub
add
sbb
cld
loopne
and
pushf
push
push
and
das
out
adc
mov
call
dec
sbb
push
std
xor
add
out
lret
in
jmp
pmullw
or
cmp
add
icebp
mov
inc
mov
jae
lock
jo
aam
mov
add
cmpsb
pop
xor
lahf
popa
lret
outsb
je
rclb
pop
enter
or
fs
inc
call
pusha
jo
clc
xchg
xor
adc
mov
cmc
pop
popa
pushl
add
dec
inc
jecxz
lret
test
mov
jle
js
and
dec
fs
inc
push
icebp
pusha
hlt
test
rcrb
mov
pop
add
mov
or
sub
xor
inc
in
popa
ret
xchg
test
data16
stos
sub
repnz
fs
push
pushf
and
dec
push
adc
cmc
cld
rolb
out
lahf
inc
ds
and
xor
pop
xor
mov
sar
mov
add
add
mov
push
in
add
fdivr
stos
clc
add
inc
mov
xchg
add
hlt
jle
jl
add
mov
or
dec
hlt
push
mov
lret
jmp
push
test
nop
nop
add
xor
sub
pushl
ficoms
cmp
ss
add
push
hlt
cld
ficomps
mov
adc
mov
or
cmc
inc
adc
stos
sbb
adc
and
push
add
lahf
fs
bound
and
push
push
xchg
jmp
xchg
xchg
add
out
inc
push
loopne
add
xchg
aas
and
push
inc
xor
dec
inc
add
or
and
clc
icebp
pop
rolb
or
idivb
sub
add
jae
testb
mov
xchg
in
nop
mov
outsb
in
cmpsb
or
add
enter
pop
add
or
jle
pop
rolb
cmp
push
add
hlt
and
cmp
sbbb
xor
xor
in
xor
lock
pop
imul
divb
lret
nop
xchg
inc
mov
pop
adc
lret
aam
add
push
adc
mov
test
pop
imull
cmpb
xchg
sub
ja
sbb
mov
negl
mov
clc
or
or
xchg
xor
pop
or
push
ja
sbbb
out
add
faddl
loop
addb
push
aaa
mov
fdivr
pop
add
cmp
push
pop
sub
ja
add
frstor
sbb
push
inc
sub
mov
or
add
adc
add
push
ds
xlat
and
sbb
add
xor
sbb
add
pop
je
inc
ret
xchg
or
dec
std
das
out
add
sbb
aam
addl
les
pushf
or
popa
push
push
mov
xor
pop
add
inc
cmpl
dec
mov
ss
pop
inc
push
stc
push
orl
dec
add
daa
lock
mov
cli
sub
add
rcl
cwtl
or
out
sbb
pushf
sbb
scas
jno
mov
xor
mov
xchg
faddl
push
and
sbb
mov
into
test
or
dec
fimull
adc
pop
pusha
inc
xor
dec
pop
add
out
add
and
or
sti
xor
mov
pop
jle
or
and
fwait
push
addb
add
push
or
cmpsl
int
adc
add
stc
xor
cmp
aad
add
or
xor
add
sub
xor
add
ja
jnp
add
mov
push
stos
fs
and
add
cmpsb
lcall
xor
je
inc
test
mov
add
call
jo
add
mov
sbb
out
loope
nopl
lea
cwtl
fists
cmp
inc
xor
add
cmp
fs
ds
nop
dec
jmp
dec
jle
add
lods
push
test
clc
in
cwtl
cmpsl
add
cli
mov
test
cmp
xor
scas
mov
push
idivb
fs
add
mov
add
shrl
jo
outsb
pop
push
or
js
stc
push
mov
and
sub
nop
push
mov
testb
bound
flds
cltd
out
mov
lea
cwtl
sbb
push
add
test
add
addr16
xor
movsb
add
mov
add
or
cmp
pop
outsl
sbb
loop
mov
xchg
cs
xlat
adc
add
cmp
xchg
cmp
es
out
push
add
add
jmp
mov
dec
and
add
sarb
les
jecxz
cmpb
enter
or
int3
int3
jecxz
shrb
shll
aam
mov
push
in
fdivrs
add
xor
sbb
push
inc
loopne
out
add
fisubs
sbb
mov
in
jne
inc
in
shrb
nop
lock
add
addr16
push
dec
adc
add
shll
enter
jmp
add
in
cmp
aas
cs
lret
push
xchg
incl
in
loop
adc
pop
in
jp
sbb
xor
decb
and
je
cmc
adc
and
xor
xor
and
push
dec
inc
lcall
mov
add
add
pop
jae
push
outsl
or
pop
push
lods
jmp
pop
sub
in
add
in
aas
add
out
add
add
mov
aaa
sub
sar
xor
add
and
push
aam
lock
jg
loop
or
add
ret
pop
shlb
adc
jg
push
rorb
add
jne
mov
clc
xor
shlb
addr16
loopne
add
sbb
mov
xor
adcl
xor
pop
pop
add
adc
pop
jmp
xchg
jg
add
jle
mov
add
lret
sti
push
cmp
pop
movl
sub
jle
add
ds
sbb
inc
int
xadd
sbbl
mov
add
add
rorb
orb
fstpl
sbbb
flds
sbb
pop
fildl
push
loope
enter
pop
add
jbe
cmp
push
mov
add
pusha
pop
pop
adcb
sbb
xchg
popf
adc
adc
roll
pop
add
shlb
xor
add
add
shl
repnz
jbe
sbb
loope
xchg
loopne
mov
cmc
shlb
cmp
cld
cmp
decl
sbb
xchg
popf
cmp
cmp
stc
sbbl
sub
add
inc
sub
add
sub
ljmp
jo
out
add
inc
sbb
push
in
and
pop
and
roll
and
idivb
jecxz
and
loope
and
mov
jo
mov
andl
sub
mov
movsl
shlb
out
fs
add
add
inc
scas
xchg
fldcw
test
push
js
mov
add
jp
jg
jg
js
sbb
sbb
add
mov
jl
add
out
mov
ja
mov
sbb
jb
mov
mov
jae
mov
jno
xorb
enter
adcl
push
inc
xchg
xchg
mov
adcb
jo
add
pop
and
jecxz
loopne
or
lahf
sbbl
fwait
add
cltd
rclb
sbbb
mov
dec
jo
add
mov
orl
loopne
orb
inc
mov
add
mov
add
inc
addb
ret
adc
jecxz
lock
add
sbbl
add
test
jecxz
in
pushf
es
add
xor
bound
popf
push
mov
mov
cmpsb
repnz
sbb
cld
pandn
cpuid
fneni(8087
shlb
rcrb
mov
pop
mov
stc
add
loopne
adc
dec
xor
add
lock
adc
cmpsl
nop
xorb
mov
jmp
aas
add
repz
sbb
and
mov
cmp
push
and
enter
xor
das
mov
add
mov
sahf
mov
xor
push
add
add
mov
data16
adc
add
mov
in
sbbb
push
cld
add
pushf
fbld
add
dec
or
xor
ret
fidivs
addb
mov
pop
dec
jne
dec
repz
push
push
test
das
pop
inc
cld
sub
imul
jecxz
xorb
adc
out
inc
lods
mov
add
sub
repnz
jl
jns
mov
clc
inc
ds
imul
adc
push
lods
cmp
jmp
nop
jo
call
notl
push
cmp
add
push
out
lock
movsl
movb
gs
jae
test
jbe
adc
je
add
fists
sbb
dec
add
repz
pop
in
sbb
pop
add
subb
add
lret
mov
pop
add
rcrb
add
push
add
test
sub
call
fs
out
mov
pop
add
push
stc
jge
dec
leave
enter
insb
add
stos
mov
repz
add
and
je
sahf
or
add
xchg
push
ret
add
incl
ret
xlat
sbb
fs
cmp
scas
pop
sarb
roll
shll
sbb
dec
or
mov
jno
rep
add
adc
sbb
leave
gs
cmp
mov
stc
jbe
aas
fsubp
mov
push
fld
and
cmp
add
sub
mov
test
arpl
inc
sbb
scas
and
xor
add
add
inc
sub
mov
xchg
dec
cltd
mov
mov
xchg
xor
xchg
push
adc
xchg
add
cmp
mov
add
add
push
aaa
xchg
cli
mov
and
movsl
jecxz
lock
sub
xchg
mov
hlt
sti
pop
cli
push
xor
push
clc
xchg
ret
mov
or
stos
add
sub
cmp
inc
xchg
adc
and
fiadds
movsb
xchg
or
mov
cld
and
push
xor
and
jmp
mov
inc
inc
or
xor
or
incl
and
and
repnz
leave
repz
imul
sub
sub
lock
or
fsub
repnz
cmp
pop
fs
fcmovbe
mov
sub
adc
mov
mov
inc
sub
sub
notb
pop
sbb
test
fs
sub
sbb
mov
out
xor
lods
xchg
cld
mov
nop
or
push
add
inc
xchg
lret
add
sub
pop
inc
push
and
sbb
push
cmp
lahf
xor
or
mov
das
lret
gs
or
pop
cmove
sbb
cmp
push
lea
pushf
sbb
or
aas
add
popf
pop
and
repnz
push
pop
inc
jmp
in
mov
adc
mov
mov
add
stos
mov
sub
push
mov
icebp
les
adc
and
and
inc
aas
popf
lods
addb
add
mov
cmpsl
dec
or
mov
icebp
sbb
and
inc
jbe
cmp
shlb
je
add
pop
inc
stos
add
or
add
add
add
xor
xor
ret
pop
jo
and
lar
or
add
mov
mov
sbb
test
jge
add
repnz
hlt
mov
inc
cmpsl
test
adc
loopne
pushf
add
rclb
add
mov
dec
add
ret
jg
sub
lock
mov
lret
and
pop
mov
push
fsts
out
add
push
shlb
add
test
sbb
cmp
add
cmpsb
adc
pushf
sub
shrb
xchg
aas
mov
add
ds
mov
bound
sbb
add
sbbb
or
leave
xlat
in
movsb
sarb
add
sub
jle
pop
lret
add
xchg
pop
fisubrs
xor
pusha
iret
sbb
jns
stos
sub
push
lahf
aam
jmp
aas
push
push
cmpsb
xlat
ss
or
pop
test
xchg
or
jg
dec
pop
mov
je
lcall
pop
adc
bound
lods
adcl
or
shl
icebp
and
lock
insl
sbb
push
push
lcall
inc
inc
push
test
mov
jl
ljmp
sbb
mov
add
sbb
mov
push
add
sub
adc
cld
repz
jecxz
mov
clc
jmp
xor
xor
push
push
pop
xchg
mov
repz
jp
fildl
cs
test
push
sbb
xor
and
jl
mov
sbb
fmuls
shrl
push
stc
mov
mov
insl
add
mov
pop
aaa
add
push
mov
addl
jmp
aam
mov
pop
sbb
mov
test
lahf
pop
jl
loop
add
loop
inc
in
mov
sbb
pop
cmp
ljmp
mov
dec
push
int3
add
push
add
out
add
inc
cld
pop
add
lods
push
adc
mov
orb
xor
fcompl
test
sbb
les
cs
cmp
jo
mov
cmpl
add
test
movb
add
sbb
pop
stos
pop
movsl
out
bound
add
mov
xor
add
sub
mov
testb
ficoml
push
xchg
mov
inc
add
mov
mov
add
js
je
inc
add
add
sbb
xchg
xchg
stc
add
mov
mov
fs
mov
faddl
daa
and
add
mov
paddusw
shl
add
inc
push
cmp
xorl
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
es
xor
jle
mov
rcrb
add
inc
push
push
rorb
mov
adc
jno
add
fwait
sub
paddsw
loopne
test
push
jl
add
cmp
inc
adc
fisubl
and
stos
mov
lock
jg
push
adc
rolb
test
xchg
jmp
jge
add
mov
adc
rclb
sub
inc
shlb
rolb
push
mov
jno
mov
in
add
and
pop
mov
inc
add
int
imul
push
lret
fst
sahf
hlt
xor
pop
add
cs
pop
arpl
add
dec
and
cli
inc
add
dec
push
sub
add
idivb
pop
decl
push
mov
adc
add
mov
add
inc
lock
incl
adc
les
loop
ret
push
cmpb
adc
add
scas
stos
call
inc
add
and
ljmp
mov
clc
loope
jae
add
and
negb
push
push
add
dec
jbe
push
icebp
stos
add
addr16
int
notb
mov
push
repnz
lahf
pop
add
mov
pop
jae
add
xchg
jne
pop
shll
dec
scas
inc
push
lea
mov
cmp
add
add
push
inc
add
cmp
pop
incb
jmp
lret
or
cs
push
adc
adc
push
sub
ret
mov
mov
add
adc
sbb
addb
rorb
add
dec
push
jbe
xchg
lock
xor
je
xchg
inc
add
jne
into
addb
cmpl
mov
add
cmpsb
mov
dec
push
int
sub
es
mov
dec
nop
ds
pop
fnstcw
sbb
inc
push
test
ljmp
pop
push
xchg
and
dec
cmp
or
outsb
loop
hlt
mov
roll
jns
loope
andb
jb
ret
rclb
inc
inc
cmp
ror
sbbb
inc
insb
test
sub
fdivs
jb
frstor
jmp
jge
movb
fisttpl
cld
inc
inc
lea
ficompl
dec
sbb
mov
dec
sbb
adc
int3
xor
dec
add
fildll
test
push
cmp
push
add
xlat
je
cs
inc
in
loopne
or
sub
cmc
test
call
imul
or
mov
and
push
in
inc
add
xor
xor
xchg
adc
lret
mov
cmp
movb
xor
pop
cltd
stos
add
or
push
mov
push
or
imul
mov
notb
push
cmpsb
out
mov
dec
dec
jge
andb
sbb
add
mov
loopne
add
mov
sub
mov
ljmp
pop
and
fsubs
mov
jnp
mov
pop
dec
adc
push
pop
insl
add
and
xlat
and
aam
sahf
jb
loopne
add
push
aam
int
push
rcr
add
stos
cltd
cld
fldl
std
pop
adc
mov
sti
hlt
sbb
scas
or
jno
cmpb
or
arpl
jo
add
fcomip
cmp
pop
adc
rolb
stos
in
pop
push
jo
add
mov
out
inc
ret
ret
push
mov
sahf
xor
enter
jmp
aaa
pxor
xor
sbb
jmp
sbb
dec
outsl
add
pushf
pop
call
sub
adc
push
add
xchg
dec
or
pop
xchg
jge
les
subl
je
mov
and
jo
mov
adc
cmpsl
pop
xor
inc
or
insl
add
cld
adc
add
inc
or
push
mov
adc
xor
mov
dec
adc
nop
inc
leave
mov
push
add
cmp
add
fiaddl
fdivs
add
cmp
sbb
test
idiv
enter
sbb
add
push
js
and
sti
or
add
add
std
repz
pop
cld
jne
pop
mov
stos
jmp
sbb
mov
test
add
or
pusha
and
dec
mov
mov
cwtl
pop
lds
call
mov
test
adc
mov
movsl
subl
lock
mov
shlb
pop
pop
push
add
test
mov
adc
and
xchg
mov
adc
and
mov
cwtl
sub
je
shr
ja
add
stos
or
nop
cmp
sar
add
push
pop
jne
movsl
es
pop
jmp
push
mov
add
mov
xchg
mov
pop
add
sbb
add
ret
lcall
mov
xchg
or
adc
xor
pop
push
in
mov
and
add
jecxz
loope
test
inc
fistps
xor
mov
loop
rolb
adc
dec
inc
enter
incb
mull
adc
jbe
add
add
sbb
movsl
orb
and
xchg
add
inc
loop
xor
adc
push
add
out
out
inc
sar
or
adc
mov
rorb
ds
mov
cmp
jb
sbb
add
xchg
cmp
shlb
movsl
loope
mov
neg
lret
add
xor
xor
sub
lods
test
lods
imul
and
dec
std
repnz
mov
add
or
daa
test
or
lock
stc
jne
add
or
mov
pop
inc
cli
add
call
mov
adc
jne
push
inc
mov
fistl
mov
clc
lret
add
or
add
mov
div
jno
add
pop
lret
pop
xor
repz
push
inc
add
and
sub
dec
mov
jg
xchg
addb
dec
icebp
cmp
xor
jmp
xchg
inc
add
out
cmc
testb
insb
loope
mov
aas
and
loopne
repz
add
pop
sti
rolb
xor
xchg
mov
insl
daa
addl
push
pop
pop
cmp
mov
add
add
adc
ret
or
mov
jl
rcl
repnz
xchg
test
add
inc
clc
orl
mov
dec
in
push
add
stc
fwait
adc
or
pusha
add
sub
sti
inc
push
mov
add
fcompl
add
test
and
or
push
negb
add
xor
inc
inc
out
mov
shl
stos
jecxz
pop
add
fldenv
mov
push
cld
rolb
clc
add
addl
movzwl
ljmp
adc
mov
pop
add
push
xorb
add
add
enter
or
jne
mov
lods
mov
cmp
inc
ljmp
xchg
inc
inc
aas
add
fsubrl
and
inc
cmpsl
add
cltd
mov
pop
cmp
movsb
add
xor
jne
add
push
ss
mov
int
pop
add
icebp
pop
push
xor
dec
jo
add
push
or
or
repnz
lea
shrb
lock
pop
movsl
out
push
inc
dec
pop
je
fmuls
add
cmc
dec
adc
test
pop
mov
mov
ret
mov
pusha
call
add
dec
adc
aam
cwtl
mov
sbb
fisttps
sbb
xor
add
sbb
rolb
add
jp
movsl
sub
and
int3
cld
or
mov
xor
lock
fs
cli
cmp
inc
push
xchg
sbb
test
pop
cmp
inc
mov
mov
mov
outsl
push
pusha
movsb
stos
inc
mov
pop
push
and
xorb
mov
lret
nop
cmp
popf
shl
inc
imul
dec
in
test
add
push
push
or
inc
lcall
adc
push
dec
out
in
add
xor
pusha
insb
mov
add
gs
lods
mov
jg
imul
jo
cmpsl
add
dec
push
ret
cmpsb
sub
or
lcall
add
or
std
sbb
mov
sbb
xchg
add
cli
gs
xchg
cmp
mov
sbb
roll
lds
shrb
daa
lcall
inc
jg
adc
sbb
mov
add
mov
sbb
xchg
or
add
test
notl
out
mov
in
xorb
or
pop
dec
pushf
shl
add
addr16
push
les
mov
xor
inc
popl
rcll
icebp
xor
mov
sbb
pusha
cmp
push
xor
mov
add
jp
cmc
sub
cwtl
jbe
rcll
jo,pn
add
inc
je
adc
test
es
xchg
add
add
and
nop
push
mov
add
push
imul
mov
loopne
add
in
push
add
cwtl
push
lcall
aad
mov
cli
mov
push
sbb
cmp
mov
iret
push
inc
jae
cvtpi2ps
lahf
mov
inc
dec
mov
jae
pop
lock
fadds
jbe
pop
push
pop
and
add
std
pop
mov
out
popa
rcll
jecxz
jle
add
pop
inc
sbb
add
inc
add
pop
mov
add
xchg
cs
dec
outsl
inc
add
insb
push
dec
addb
dec
xchg
pop
add
and
add
orb
add
aad
mov
dec
insb
add
mov
nop
push
loopne
add
xor
std
or
sub
adc
adcb
test
pop
add
js
into
push
cmp
add
xchg
cmp
jo
add
stc
aaa
lahf
shlb
loopne
add
scas
push
mov
add
pop
xchg
adc
stc
test
xor
add
push
iret
mov
xor
dec
in
mov
ret
add
setns
mov
add
adc
jl
in
add
insb
stos
es
cmp
decl
add
cmp
out
push
ds
pusha
xchg
repz
push
xchg
sti
pop
push
mov
lahf
inc
rclb
daa
mov
and
add
add
in
push
add
sub
pop
dec
push
xchg
lret
dec
jp
lcall
sahf
aas
int
sbb
cli
in
les
add
stos
outsb
popa
add
mov
test
dec
push
andb
mov
mov
cmova
or
jle
cld
xchg
cmp
dec
movb
pop
or
sub
mov
mov
jo
popa
test
xorb
add
call
fldcw
add
push
ja
add
mov
or
mov
lea
rcr
cmp
add
pop
mov
and
xchg
add
push
loopne
movsl
mov
sbb
outsb
jmp
rcll
add
jae
iret
loopne
add
push
sahf
int
pusha
dec
add
xbegin
pop
test
je
jo
add
push
or
loopne
add
mov
pextrw
dec
add
outsb
push
mov
scas
push
out
cmp
ljmp
fcompl
lock
add
push
and
xchg
cli
andl
mov
inc
xchg
pop
rcrb
xor
lods
insb
adc
lea
push
cmpb
adc
sub
in
pusha
jne
lret
push
xchg
test
pop
or
jne
mov
enter
lock
sbb
pop
mov
out
cli
aas
sub
sbb
sbb
pop
add
add
xor
add
pop
das
cmp
sub
xor
adc
lcall
or
add
jae
xchg
out
addb
push
aam
std
out
jp
lds
add
pop
rdtsc
sarb
rolb
je
divl
xchg
xchg
pop
mov
cwtl
aam
aaa
add
addl
lock
lock
add
sbb
jbe
out
aad
xor
or
cmpb
or
adc
fistpl
fadds
shlb
nop
mov
enter
add
lods
pop
fadds
push
push
cmpb
jg
ret
cmp
push
pop
add
call
push
aam
and
mov
dec
add
add
and
sahf
stos
and
xchg
push
adc
add
add
pop
add
fcmovb
loopne
mov
push
divb
clc
and
lock
add
stos
cmpsl
dec
addps
xlat
mov
or
sbb
xchg
sbb
add
push
add
sarb
in
xorb
lret
push
pop
push
ret
inc
add
icebp
or
les
cmp
cmp
mov
fstl
enter
pop
clc
call
add
mov
loopne
out
mov
add
add
lea
loopne
jp
mov
jmp
push
xlat
inc
add
cwtl
and
adc
add
mov
sti
cmp
subl
pop
push
and
push
mov
pop
pop
pop
cmc
inc
lret
and
sub
mov
inc
jo
jp
sti
les
pop
fadds
data16
lods
add
and
pop
and
sub
push
or
or
xor
mov
pushf
dec
add
cmp
or
adc
adc
mov
fcompl
mov
add
scas
loop
in
mov
pushf
pop
in
aam
mov
je
rolb
mov
mov
inc
es
js
testb
mov
sub
adc
cmp
into
adc
push
gs
xchg
testl
or
add
jbe
loop
inc
pop
loop
and
dec
jg
sub
add
mov
inc
leave
push
pop
pop
mov
cli
sub
or
add
or
aam
shl
mov
fsubrl
daa
or
je
jl
add
in
clc
lds
add
lea
arpl
add
insl
xchg
adcb
shll
je,pn
fnstenv
fs
or
add
and
inc
xchg
add
dec
sahf
int
aas
pop
sbb
mov
stos
aaa
xorl
push
push
mov
sbb
mov
clc
stos
std
test
pop
sub
add
add
clc
or
sbb
ja
add
mov
mov
push
repnz
add
xchg
inc
pop
push
push
mov
aam
xchg
mov
xor
mov
mov
adc
add
out
jne
push
ret
or
add
pop
outsb
sbb
jle
add
nop
xorb
add
sub
push
loop
add
test
pop
push
cmp
add
mov
adc
sbb
mov
add
and
add
or
orb
repnz
call
adc
add
lock
add
push
popf
int
push
add
sub
adc
add
mov
push
dec
sbb
xchg
orb
add
add
repnz
stos
push
int
add
add
in
xor
inc
mov
or
shlb
inc
enter
inc
cld
ret
fmuls
cmp
out
shrb
hlt
add
add
sbb
push
fadds
sub
fdivr
pop
addr16
dec
mov
roll
add
jp
push
add
lods
mov
add
fsub
ret
imul
dec
sub
ljmp
mov
les
dec
aam
push
shlb
cmp
fadds
mov
jbe
verr
mov
push
js
add
push
inc
jno
loop
lock
sub
add
add
adc
and
add
push
pop
stos
push
mov
and
mov
mov
jno
lds
stos
mov
push
sub
mov
outsb
aas
and
cmp
js
add
or
mov
xchg
js
ljmp
sub
stc
pop
loop
mov
jne
dec
dec
sarb
add
popf
sbb
call
movl
adc
movntq
cmp
clc
xchg
sysexit
push
dec
inc
loopne
stos
sub
mov
sub
js
cmp
movsl
insb
add
fs
pop
cwtl
icebp
mov
add
or
lcall
in
adc
std
xchg
loope
ret
xorb
out
xor
pop
adc
adc
test
sub
imul
or
push
or
and
cmp
mov
adc
add
sub
xlat
xchg
ljmp
pusha
fsts
mov
addr16
pop
pop
arpl
add
cs
rcrb
pop
adc
test
or
pop
xor
dec
das
add
inc
aas
nop
repnz
mov
stos
sbb
mov
roll
sub
negl
cmpsl
add
stos
xor
out
test
mov
and
xor
add
mov
std
adc
pop
adc
mov
stos
mov
jbe
in
xor
addb
mov
add
xchg
add
xor
stos
int3
jl
mov
inc
push
mov
sahf
insl
or
add
sti
in
data16
lds
stos
int3
dec
xchg
enter
repnz
add
push
pop
mov
sub
add
inc
add
loop
add
stos
xor
outsb
pop
mov
adc
or
das
adc
add
jl
push
and
jmp
jg
dec
add
stos
dec
adc
pop
int3
xchg
and
inc
or
inc
cmp
loopne
aam
push
push
add
jb
sbb
or
mov
testl
int
mov
push
jecxz
add
nop
dec
adc
add
jb
mov
sbb
dec
ds
stos
addr16
push
cmp
lods
pmaxub
push
push
push
add
aaa
adc
add
int
lldt
xchg
inc
addl
inc
jo
incl
aaa
cli
mov
xchg
push
stos
inc
jge
pop
je
sbb
pop
lock
test
push
adc
sub
int3
pop
add
sbb
cltd
push
jnp
add
xor
cmp
out
gs
aam
xchg
add
cmpsb
inc
sub
cs
loop
shlb
or
jnp
fildl
pop
inc
mov
sbb
jle
add
jge
push
sub
cmp
push
inc
ret
add
and
push
incl
cmpb
sub
inc
inc
xor
and
pop
push
sahf
flds
loope
inc
add
inc
decb
sti
jg
ret
add
add
subl
cld
dec
mov
add
or
sbb
les
cmp
adc
xor
pop
lods
sbb
add
in
out
xor
mov
push
cmp
add
pop
pop
pop
dec
jae
aas
xor
cmpb
add
mov
cmp
and
xchg
clc
data16
mov
cmpsl
xchg
es
cmp
rorl
ss
lret
movsb
or
inc
add
ret
out
add
and
fwait
aad
dec
dec
push
jno
dec
jp
mov
pop
movsb
add
inc
scas
dec
testl
xchg
add
jns
loop
jbe
imul
aaa
add
inc
pop
dec
dec
les
inc
aas
dec
fistl
aaa
pop
mov
jg
test
sbb
addb
inc
sbb
inc
jnp
mov
les
and
jge
sbb
mov
cld
adc
mov
fiaddl
shlb
and
shlb
push
ds
ret
xor
dec
ss
lcall
jmp
xor
inc
cmp
and
xor
sarb
dec
imul
add
dec
add
add
pop
enter
and
sub
pop
sbb
aad
les
add
or
sbb
add
addb
add
fisubl
pop
loop
jbe
add
cmp
movsb
in
pop
stos
pop
cmp
and
aas
test
mov
inc
into
or
cmpsl
and
dec
stos
ja
leave
add
adc
fiaddl
mov
and
stos
mov
pop
test
mov
xchg
pop
or
lcall
bound
pop
aaa
mov
fildll
test
dec
or
or
mov
or
orb
adc
addb
mov
scas
lods
inc
push
lahf
in
loopne
movsb
icebp
push
add
nop
enter
lds
inc
out
jbe
mov
jne
jnp
inc
imul
ret
rcrb
divl
lock
cmp
testl
pop
xchg
adc
shl
repz
je
mov
xchg
les
jl
dec
stos
cld
sti
pop
jo
loope
movsl
mov
xor
jecxz
add
dec
xchg
out
push
add
lods
das
aaa
stos
add
sub
or
js
xchg
pop
in
adc
ds
shlb
int
add
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
add
adc
add
push
push
cmp
add
negb
add
ja
jbe
inc
sub
xor
stos
xor
xchg
clc
push
pop
out
add
inc
mov
andb
jae
mov
mov
mov
out
test
shll
aad
gs
rolb
popf
in
xchg
mov
add
push
jb
inc
pushf
add
cmpb
dec
int
shll
pop
dec
iret
adc
fwait
cmp
push
and
add
xchg
xor
fcom
and
adc
lods
shr
repnz
aas
mov
fdivrs
movsl
sub
add
int
ds
inc
add
mov
adc
mov
inc
cwtl
popl
pop
mov
dec
mov
sbb
mov
adc
mov
inc
or
push
jno
xchg
fs
jge,pn
fidivl
out
test
inc
xchg
add
sbb
mov
add
jbe
cmp
rcpps
sub
add
pop
and
js
add
push
jns
or
aas
mov
add
push
pop
mov
pop
jle
sahf
cmc
add
push
and
xor
stos
push
ret
jp
push
add
sub
test
mov
popf
xchg
push
or
bswap
hlt
adc
negl
lea
jmp
pop
imul
loope
add
les
sbb
add
lock
pushf
hlt
mov
addr16
notl
scas
and
inc
add
cmp
mov
xchg
jo
inc
push
dec
and
push
insl
xchg
jnp
jo
cld
or
int3
scas
lock
mov
add
or
test
aad
mov
aas
push
movntps
popf
or
add
pop
add
test
fs
add
scas
lcall
mov
das
cmp
add
fimull
add
adc
add
add
inc
add
mov
mov
shlb
add
pushf
add
je
cmp
fsubrl
cmp
inc
test
adc
add
mov
lods
sbb
mov
arpl
ja
pop
adc
inc
stos
add
jge
dec
or
add
cld
adc
inc
adc
add
test
loope
push
push
lret
mov
and
movsb
cmc
pop
cs
mov
mov
xor
scas
int3
subb
stc
push
adc
cmpl
nop
sbb
mov
or
repz
adc
add
roll
shlb
push
es
jmp
and
cltd
add
pusha
sti
mov
sub
push
xchg
xor
xchg
add
push
ret
std
add
test
jmp
add
std
rolb
jbe
add
sub
sbb
pop
pop
mov
mov
pop
lods
jns
jge
movb
add
std
xchg
fucomp
pop
leave
adc
jne
xchg
or
and
jns
nop
cld
add
dec
test
imul
loopne
cwtl
mov
jae
push
dec
hlt
and
push
das
cli
sbb
repnz
jnp
js
jg
subb
xlat
cmp
mov
push
fdivrl
loope
pop
loopne
jle
cmp
dec
addb
testb
popf
rcrb
pusha
push
call
xor
dec
or
add
add
jle
jmp
add
jne
rolb
dec
lcall
cld
and
and
js
add
imull
test
add
cmp
push
sub
mov
pop
aaa
pop
add
test
sarl
lea
ljmp
pop
shrb
mov
push
add
push
add
inc
dec
cmp
sub
jl
or
add
and
sbb
mov
sbb
adc
pop
stos
je
testb
add
xlat
mov
fsubs
inc
inc
sarb
sbb
add
push
call
and
adc
cmp
jge
add
dec
sbb
pop
loopne
mov
cld
add
rorb
jnp
jge
lock
or
xor
jle
rorb
cmp
add
push
mov
dec
or
add
rol
js
je
jb
add
movsb
mov
arpl
sbb
dec
jb
push
push
loop
fbstp
jle
mov
mov
add
pop
xlat
mov
add
lods
std
fsubs
pop
lret
mov
adc
xchg
pop
outsb
popa
xor
sarb
jb
add
dec
pop
decb
jl
add
imul
dec
aaa
xorl
mov
and
pop
and
add
mov
xchg
cmp
jb
out
test
inc
pop
xlat
cli
push
xor
les
popl
mov
xchg
xchg
jnp
jle
cmp
test
mov
jmp
ret
jae
mov
int3
add
jmp
rcrb
ret
stos
mov
dec
mov
add
mov
push
lock
cmp
inc
fcmovb
aaa
out
add
push
stos
adc
arpl
add
clc
adc
cli
adc
pop
sub
or
std
add
mov
movups
ja
pop
xchg
loopne
xor
mov
inc
or
cmp
cmp
sbb
and
mov
cmp
mov
jo
jle
add
inc
adc
arpl
push
popa
add
data16
jae
addr16
std
cmp
adc
ja
add
sbb
jbe
jb
out
dec
ja
adc
imul
imul
push
inc
push
loopne
dec
jge
jl
inc
iret
nop
dec
nop/reserved
fisubs
in
cmp
cmp
jle
outsl
insb
add
pusha
push
out
in
jae
jge
imul
test
or
jo
das
push
fwait
xor
jae
dec
mov
add
or
insl
shl
dec
pusha
ret
bound
fs
addr16
popl
xor
mov
inc
popa
les
into
fldl
jns
inc
dec
outsb
clc
dec
add
jbe
fs
inc
add
adc
add
jae
arpl
jne
add
inc
push
push
ja
imul
arpl
mov
add
addr16
popa
loope
push
lret
inc
add
push
jno
movsl
xchg
pop
inc
push
outsb
imul
stc
and
xor
gs
imul
shr
xchg
xor
clc
pusha
add
jns
mov
dec
xor
add
push
adc
push
addr16
jbe
and
ja
andb
sub
test
ljmp
lods
add
outsl
imul
xchg
push
push
push
aaa
jbe
inc
cmpsb
inc
imul
pusha
push
sbb
jbe
and
mov
add
popa
add
rclb
jp
dec
sbb
pop
xor
cmp
add
mov
jb
cmp
subb
movups
pop
test
mov
mov
adc
adc
inc
push
add
lea
jb
sub
cmp
add
push
add
cmp
pop
ret
pop
and
push
jge
pop
sbb
xor
mov
mov
lods
adcb
sbb
push
inc
repnz
scas
cmp
mov
xor
into
add
addr16
loopne
shrl
sbb
and
adc
arpl
add
data16
dec
pop
jo
add
cli
add
add
and
sbb
xor
dec
cmp
fnsave
imul
icebp
rol
sbb
aad
add
enter
xchg
add
test
sahf
and
stos
loopne
add
sti
scas
daa
push
pop
es
push
addl
mov
mov
aas
dec
aas
xchg
or
stos
xorb
pushf
repz
add
in
addr16
pusha
push
add
push
mov
sbb
in
add
jb
push
dec
push
jae
pop
inc
dec
roll
ret
ficompl
dec
lds
nop
rorb
xor
lahf
movl
das
jecxz
jb
jo
add
pusha
xor
add
dec
cmp
loopne
xchg
jo
add
rclb
adc
jp
scas
add
inc
clc
pusha
xchg
or
js
jae
inc
mov
push
or
pop
push
clc
in
sarl
xchg
pop
add
fnsetpm(287
xor
ret
test
lahf
jnp
rclb
mov
test
add
popf
jl
dec
jp
push
sub
add
xor
outsl
cmp
sbb
jmp
jg
sbb
test
add
sbb
xor
add
cmc
stc
ds
push
in
add
pop
add
imul
gs
push
pop
lock
mov
add
cmpsb
out
stc
inc
and
add
rcrl
shlb
jmp
roll
fisttpl
cmpl
cltd
test
sub
int3
push
aad
mov
inc
arpl
loope
rdmsr
push
cmp
dec
and
add
rcl
or
or
add
mov
repz
push
pusha
cmp
aas
inc
mov
aad
add
mov
addr16
data16
xchg
pop
andl
rcrb
sbb
jmp
pop
mov
cmp
add
add
insb
jo
add
adc
stc
sar
push
sub
cmp
jo
sahf
jo
fsts
mov
sub
sub
adc
adc
pop
out
add
mov
shlb
add
fcoms
loopne
mov
nop
xchg
sti
movsb
sbb
add
cmp
addl
mov
lods
jge
enter
outsl
cmc
xorb
mov
stos
add
xchg
pop
inc
cwtl
jno
data16
scas
add
daa
imul
mov
push
mov
push
test
push
jl
inc
or
popf
or
in
sbb
lea
std
insb
add
daa
and
jge
popf
cmp
add
pop
mov
jp
sahf
and
sbb
push
les
cwtl
and
pop
dec
or
out
or
pop
dec
mov
shl
add
inc
jmp
xchg
mov
add
out
sub
lock
repnz
out
mov
push
push
add
cltd
jle
inc
stos
sbb
movsl
add
xchg
pop
dec
mov
lods
out
push
sbb
xor
adc
add
push
xchg
jge
aas
add
sbb
cmp
pop
ror
add
cmp
mov
jg
movb
pusha
cmp
loopne
add
ret
fs
jns
xor
xchg
add
adc
sub
ljmp
push
leave
stos
add
add
dec
incb
outsl
add
or
lds
add
dec
dec
jo
add
ljmp
and
insl
cmp
int
push
cmp
inc
lret
out
adc
jnp
mov
in
jno
adcb
pop
insb
adc
adc
str
rolb
movsb
in
scas
in
pop
mov
add
xlat
testb
daa
mov
sbb
je
int3
xchg
cld
lods
mov
insb
je
sub
sbb
mov
jecxz
or
add
pop
mov
js
testb
mov
jle
jmp
push
ja
add
add
pop
mov
stc
shlb
mov
inc
gs
imul
and
sbb
pop
add
add
mov
incl
rol
pop
lock
incb
push
mov
mov
adc
sti
lahf
or
sbb
pop
push
fsubr
dec
push
scas
mov
or
andb
lcall
inc
jo
add
pop
push
dec
sarb
jle
mov
add
movb
mov
ja
jb
test
or
inc
xchg
push
iret
out
or
cmp
jne
aas
jmp
push
inc
aam
fnstenv
pop
sub
add
sub
loope
fiaddl
and
mov
push
and
pop
xchg
inc
mov
add
or
cmp
or
lret
and
mov
fistpll
or
mov
or
call
mov
es
lock
add
dec
add
cmp
or
mov
cmpb
stc
sbb
jle
or
das
lods
push
mov
orb
ret
movb
lcall
jo
movsl
sbb
dec
into
es
jae
adc
adc
add
xchg
mov
add
imulb
out
fcmovne
fimuls
mov
xchg
lret
sbb
mov
in
cmp
sub
lret
push
and
or
cmp
subl
add
push
jbe
add
rolb
nop
fistl
jl
adc
push
cwtl
cli
push
repnz
mov
int
fcompl
add
mov
fsub
lock
add
sbb
push
pop
repnz
adc
push
jnp
mov
mov
and
mov
int3
add
pop
fadds
hlt
pushl
push
add
dec
leave
outsb
add
sbb
adc
adc
cmp
cmp
or
add
mov
loopne
or
pop
lret
sbb
subb
push
mov
pop
cmp
push
dec
add
cmpsl
pop
call
dec
adc
mov
mov
sti
sar
cmp
shl
loop
imul
int3
xchg
adcb
mov
pop
and
and
add
mov
lods
dec
xchg
mov
xchg
add
jle
or
clc
call
mov
xchg
fildl
adc
push
rclb
add
pop
fidivrs
dec
adc
inc
outsl
mov
xor
jmp
jl
push
add
call
or
out
jg
loopne
lods
add
mov
sub
pop
sub
test
xor
jno
mov
loopne
inc
and
sbb
js
imul
jge
rolb
pop
or
xchg
lock
sub
cmp
jl
jae
mov
in
and
push
pop
lods
sti
into
add
shrb
or
xor
fcmovnb
in
mov
adc
add
stc
cmp
sbb
rorb
fcomi
incb
jp
push
ret
jns
add
or
iret
sub
sbb
jmp
sarl
mov
pop
ret
or
xchg
jo
pop
or
push
adc
inc
es
not
add
xchg
or
and
push
add
not
and
sbb
jle
add
jo
call
adc
sub
dec
sbb
inc
sub
cmp
dec
fdivr
test
adc
sbb
pop
in
cmp
add
add
and
or
add
or
das
lock
testl
cmpsb
and
arpl
call
int3
paddsb
andl
add
aad
dec
das
adc
dec
add
in
cltd
pop
in
jge
sub
xchg
or
push
ret
rclb
add
xchg
aad
xor
add
sbb
xchg
cld
pop
xor
fists
and
nop
mov
roll
pop
xor
loope
rcr
jo
push
clc
jmp
scas
sbb
loopne
and
cmp
ret
mov
movzwl
push
push
or
adc
mov
sar
rol
add
pop
pop
sub
fildll
mov
mov
push
or
cmp
shlb
adc
xor
fs
gs
mov
push
add
cmp
jg
add
cmp
call
push
or
arpl
jmp
sub
cmp
das
xorb
movsl
call
sub
test
mov
and
jl,pn
or
fcomi
pop
push
add
fstps
jl
add
imul
adc
pop
mov
jecxz
add
xor
cwtl
fstpl
psubsb
sbb
sbb
and
clc
fildll
push
out
insb
or
xchg
dec
push
mov
push
lods
ret
sti
nop
or
imul
and
sub
or
mov
popf
add
mov
data16
dec
or
movsb
pop
inc
scas
hlt
shr
pusha
add
sti
dec
je
or
or
inc
cmpsl
es
mov
push
and
ljmp
push
imul
dec
and
jno
stc
or
push
daa
cmpb
jecxz
addr16
push
adc
int3
push
loope
xchg
in
inc
xor
add
dec
sti
test
add
aam
sub
push
sbb
inc
add
adcb
ret
push
or
test
inc
daa
and
addr16
sbb
addb
dec
or
lock
cmp
pop
add
fldl
and
or
daa
ljmp
iret
stos
arpl
dec
nop
mov
and
xchg
push
and
enter
xchg
inc
add
stos
icebp
pop
push
inc
push
pusha
add
add
cli
repnz
aad
xchg
ret
jge
mull
sbb
add
inc
add
scas
jg
jp
mov
pusha
jmp
mov
incb
lret
jecxz
adc
adc
sbb
push
fidivs
pop
sbb
lods
or
inc
or
mov
test
in
push
push
mov
inc
xlat
dec
pop
shll
loope
xor
inc
mov
push
push
add
push
in
sbb
sbb
cs
mov
inc
test
adc
pop
jbe
sbb
ljmp
pop
add
sbb
inc
xchg
and
inc
xlat
mov
or
data16
leave
pusha
hlt
addb
sti
rcr
xchg
xor
jge
cmpsb
xchg
jg
add
xor
jo
and
movsb
adc
scas
sub
sub
rclb
in
add
add
mov
jmp
movsb
aas
adc
inc
dec
pop
xchg
lods
pop
cmp
aam
add
adc
adc
je
push
or
sub
and
call
loopne
push
sti
addb
clc
jb
adc
aas
je
and
inc
stos
sub
cmp
cmp
add
add
add
test
ficoms
hlt
mov
add
xchg
fcoms
jg
mov
xchg
cmp
sahf
rolb
add
insb
ss
add
push
movsb
mov
mov
test
and
in
stos
add
adc
cmp
mov
movsb
add
popf
rorb
test
jmp
dec
sbb
xor
jns
imul
jl
add
add
pop
cli
mov
add
push
dec
push
add
cli
xor
or
add
repnz
push
sub
loop
xor
inc
cltd
add
mov
insb
sub
lea
push
leave
sbb
inc
pop
push
outsb
dec
xchg
loop
cltd
dec
mov
jbe
xor
not
std
push
cmp
add
fcoms
add
stc
mov
mov
add
int3
insl
xchg
pop
popa
add
pop
xchg
imul
and
xor
js
adc
mov
push
sub
add
nop
mov
sbb
or
test
sti
jp
add
popf
xor
stos
ffreep
add
andl
or
mov
push
and
mov
add
xor
lret
or
cltd
mov
lmsw
test
add
aaa
mov
movl
and
cmp
test
lock
push
lea
arpl
add
and
int
add
js
xchg
push
push
nop
mov
enter
rcrl
je
mov
test
mov
adc
sbb
add
test
pop
adc
fcoms
pop
sub
scas
pop
mov
add
dec
mov
adc
lods
jl
cmp
sbb
add
mov
dec
xor
xchg
popa
or
jmp
sub
cmpl
add
jb
mov
push
loope
shr
sub
jle
pop
push
and
fwait
mov
aas
enter
add
call
bound
push
add
sbb
pop
xchg
ja
sbb
mov
mov
fbstp
sub
add
and
add
ljmp
push
sbb
fs
lock
sahf
dec
xor
cmp
loop
and
xchg
inc
movhps
aam
mov
pusha
lcall
nop
movsl
xor
scas
std
cmp
cmc
jne
fisubrs
ret
dec
pop
in
rolb
and
je
push
or
xchg
je
add
pushf
jle
pop
adc
addr16
jns
cld
enter
inc
nop
xor
sarb
jl
add
hlt
addb
add
push
scas
add
or
add
ljmp
stos
addl
aaa
and
nop
push
dec
add
js
jne
xchg
mov
add
lea
int3
int
add
pop
cs
jno
sbb
lret
popa
inc
loope
mov
test
std
push
add
jns
bound
pusha
movsl
mov
push
pop
cmp
repnz
sbb
add
sub
push
xchg
jge
pop
add
and
lcall
stc
jnp,pn
int
sub
ja
insb
dec
cvtps2pd
cmpl
dec
adc
mov
push
pop
xchg
adc
cmpsb
push
jnp
dec
rcrb
into
xlat
add
mov
mov
fstl
pop
subb
aas
popf
rolb
mov
add
rcrl
add
adc
dec
add
add
inc
lods
xchg
in
add
dec
cmp
mov
jecxz
fstpt
clc
sarb
fldt
movsb
divl
repz
lret
shll
xchg
cmp
in
fcom
add
fisttpl
jnp
adc
mov
dec
ret
aam
flds
sub
adc
lods
nop
cmp
dec
and
cmp
cmp
mov
pop
mov
jecxz
leave
fistpll
mov
fwait
add
add
in
mov
dec
add
call
sub
add
testl
ret
push
mov
popa
lds
push
push
and
xchg
and
add
js
or
ret
fcmovnbe
sub
add
dec
push
test
fiaddl
stos
xchg
jle
inc
cmp
daa
and
loope
push
dec
addr16
aad
pusha
mull
inc
pop
and
movsb
aas
jns,pn
push
mov
cmp
adc
je
jp
mov
add
inc
ds
xchg
push
enter
and
call
sbb
dec
add
sub
jecxz
jo
lret
and
sub
mov
pop
or
pushf
cmpsl
add
push
cmp
int
nop
inc
test
roll
daa
stos
jns
fimuls
mov
ljmp
inc
xchg
loopne
fnstcw
xchg
icebp
add
push
xchg
pop
xchg
fidivl
sub
icebp
fadd
add
add
rclb
ljmp
daa
adcb
jmp
shrb
add
test
xchg
add
loopne
clc
push
cmpsl
movl
xor
push
mov
rorb
imul
pop
pop
jmp
add
shrb
repnz
push
cmp
add
in
inc
fstpl
add
cmpsb
in
lret
dec
sbb
repnz
stos
xor
sbb
psubw
sub
rcll
and
sti
aam
movb
xchg
inc
mov
mov
add
movsl
popf
cs
jmp
dec
mov
xchg
add
pop
mov
loopne
dec
add
ret
data16
in
stos
fildl
sub
fisubrs
add
add
mov
cli
loope
and
add
dec
dec
sahf
shrb
aas
mov
add
pop
pushf
test
mov
jae
aaa
or
xor
add
jnp
add
je
or
and
add
xor
dec
sbb
fwait
adc
pop
sub
adc
xchg
dec
mov
adc
mov
dec
hlt
dec
add
mov
movl
cmp
adc
les
and
inc
adc
sub
inc
jae
mov
mov
rcll
stos
ret
mov
fiaddl
xchg
ds
mov
sub
ljmp
sbb
mov
iret
shlb
mov
ds
adc
dec
jecxz
jmp
aam
add
push
call
sbb
mov
inc
jbe
xchg
adc
push
xchg
xchg
mov
xchg
adc
ret
add
test
add
sub
xchg
add
xlat
inc
jae
dec
rclb
push
pop
mov
fs
js
and
dec
xchg
popf
mov
and
sub
push
arpl
sbb
mov
cmp
mov
roll
jge
pop
jbe
fmuls
add
scas
jne
push
insb
fs
cmpsl
stc
je
rclb
push
push
cld
movb
adc
incl
cmovg
pop
xchg
add
shlb
add
por
jge
push
jne
sbb
mov
popa
sbb
push
and
js
pop
mov
or
or
insb
std
cmp
inc
push
ret
add
add
out
sbb
lds
pusha
add
mov
fsin
add
pop
into
and
mov
aas
lea
test
add
pop
negb
aas
mov
add
add
or
fmull
dec
add
sub
rorb
mov
push
pop
add
dec
test
sar
dec
add
rolb
push
aas
add
push
adc
mov
dec
jl
pop
rcl
jle
rolb
or
sub
add
push
inc
xchg
add
xchg
sub
aad
and
or
or
je
xchg
arpl
or
push
addr16
add
ja
movsb
cwtl
clc
aam
orl
sbb
es
adc
pop
adc
sbb
imul
push
jae
gs
aaa
push
fdivs
lock
out
inc
push
daa
ret
mov
add
or
jae
adc
shll
pop
adc
or
leave
push
hlt
or
mov
insb
repz
xchg
xor
es
sbb
pop
lret
daa
cmp
adc
add
jle
add
mov
sbb
jmp
lret
mov
add
iretw
add
or
js
or
stos
jg
movsb
add
rorl
pop
mov
xchg
shlb
add
pop
shrb
andb
xor
adc
hlt
sub
hlt
inc
add
imul
add
mov
jl
iret
aad
mov
subb
add
out
daa
cmp
popf
nop
pop
repnz
icebp
gs
frstor
xor
jbe
inc
mov
daa
push
push
aad
xchg
sub
jecxz
add
dec
add
push
cmpsb
dec
inc
enter
jmp
lock
dec
daa
add
fxch
adc
adc
lea
pop
dec
xchg
cmc
enter
inc
ret
test
str
ja
testb
add
je
mov
add
mov
cmpl
push
add
cmp
mov
jae
data16
and
cli
hlt
cmp
lahf
mov
add
inc
xor
scas
pusha
xchg
aas
mov
mul
mov
add
lret
mov
subb
imul
or
jmp
call
mov
lock
es
mov
pop
add
or
cwtl
jnp
adcb
stos
inc
jb
popa
xor
imul
dec
outsl
push
jge
inc
push
je
insl
sbb
loop
cmp
jg
orb
inc
and
out
imul
ret
dec
lods
xchg
sbb
adc
inc
aas
or
add
sbb
fbld
cmp
xchg
ret
mov
jp
push
jne
cmp
jle
addr16
lock
add
sub
popl
scas
pop
in
mov
out
rcr
add
andl
pop
and
movsl
inc
subb
inc
or
mov
push
mov
and
cwtl
or
mov
addl
push
mov
call
and
inc
lock
pusha
lret
and
pop
outsb
add
lea
and
test
int
mov
mov
leave
aam
pop
fidivrl
enter
test
inc
adc
add
inc
inc
mov
push
das
xchg
pop
cmp
sub
fwait
test
lock
cmp
ljmp
dec
stc
mul
les
inc
add
sub
add
into
in
test
sub
inc
cmp
mov
das
into
sbb
or
addl
stos
and
add
and
sbb
and
cmp
jmp
sbb
dec
add
pop
fistl
decl
and
push
bound
mov
mov
add
movb
add
add
les
mov
out
repnz
nop
sub
mov
inc
sub
popa
jp
int3
test
xorb
adc
pusha
fsubr
push
add
pop
orb
movl
pop
and
in
cmp
lahf
and
push
hlt
fwait
sbb
add
imul
unpcklps
shlb
inc
xor
xchg
sbb
or
adc
xchg
add
sub
xchg
in
xor
push
dec
arpl
or
jnp
stos
adc
mov
leave
cld
dec
ja
add
adc
js
rclb
inc
cmp
lock
jmp
mov
lods
pop
pop
push
dec
pop
jne
andb
mov
ja
add
sbb
rorb
rcrl
add
mov
dec
dec
add
test
add
and
jne
hlt
mov
and
int3
das
add
add
stos
lods
or
pop
push
push
add
xchg
out
cmc
cli
loop
clc
in
sbb
shlb
adc
lea
ljmp
fiadds
pusha
lock
push
test
cmp
pop
add
imul
add
mov
xchg
out
push
xchg
add
mov
lea
ss
add
repz
call
or
inc
sbb
sbb
xlat
xchg
and
in
mulb
fcomp
adc
mov
jnp
add
fldenv
popl
xchg
adc
cmp
add
je
and
or
push
sbb
inc
sub
cwtl
pop
push
adc
arpl
xchg
xchg
jg
jg
jg
jg
add
scas
jecxz
cmpsl
inc
jmp
xor
mov
test
repz
dec
movsb
ficoml
push
jbe
add
push
daa
inc
push
pop
bound
aas
pop
sbb
test
and
cmp
bound
and
fwait
and
cmp
mov
pop
mov
add
call
add
xorb
mov
into
push
inc
mov
add
mov
jmp
add
or
push
sub
push
clc
cmp
ror
jmp
xlat
add
xchg
add
mov
sbb
outsb
repz
add
cmp
lret
mov
xchg
add
adc
pop
jns,pt
cmpb
nop
adc
add
subl
mov
cmp
test
jne
sbb
sbbl
xchg
pop
adcl
add
loop
les
add
mov
lahf
inc
cwtl
xor
or
pop
and
dec
stos
xchg
into
and
mulb
sbb
sub
or
mov
push
cmp
or
xor
cwtl
ret
add
xchg
sub
cmp
jecxz
pop
or
pop
dec
and
cmp
xchg
dec
pop
or
jno
push
adc
decl
ret
xorl
or
or
xor
lahf
outsl
add
rclb
pop
stos
into
loopne
adc
xor
jns
cld
test
adc
mov
push
pop
ja
add
or
cmp
mov
loop
xchg
gs
dec
pop
cmp
push
sbbl
movsl
cmp
mov
adc
test
xor
add
xchg
add
jmp
mulps
and
inc
movsb
xchg
in
ret
pop
loopne
add
cmp
sbb
mov
pop
cmp
mov
insb
and
dec
ljmp
mov
int
dec
clc
adc
mov
xor
xchg
aaa
fwait
sub
fiadds
cmp
call
sbb
mov
add
jb
movzwl
lcall
push
and
das
add
cmp
dec
cwtl
iret
mov
jecxz
andb
loopne
add
incl
rorl
push
pop
push
int3
shrb
dec
cmp
int
out
orb
imul
and
in
add
aad
mov
aas
add
mov
and
push
add
sbb
in
dec
arpl
or
xor
add
inc
enter
imul
add
clc
sub
mov
push
pop
mov
popf
js
add
cmp
cmp
pop
inc
cmp
add
cmp
inc
xchg
ficompl
push
inc
into
mov
lahf
adc
pop
arpl
inc
sub
xor
shr
ret
pop
pop
jmp
mov
sbb
out
xor
push
add
cmc
outsb
gs
lock
cld
pop
movsb
add
or
data16
add
std
addb
adc
je
dec
orl
dec
sbb
repz
pop
add
es
mov
adc
xchg
xor
nop
sub
xchg
movsl
int
add
jmp
fwait
mov
mov
popf
mov
iret
sub
add
dec
push
and
jp
sbbl
hlt
lea
cmp
xor
and
in
and
add
stc
mov
xchg
and
xchg
add
insl
notb
push
adcb
add
or
adc
outsl
rolb
stos
mov
pop
adc
out
mov
hlt
mov
jbe
xchg
popf
push
xor
ret
sahf
add
mov
push
add
jne
dec
add
fcmove
or
push
dec
add
cwtl
fmull
dec
adc
dec
xchg
xchg
xchg
enter
add
mov
add
and
mov
loopne
daa
hlt
stc
cmp
add
lret
fsubs
je
repnz
mov
stos
aad
lods
rorb
add
out
sub
sub
jmp
loop
aas
mov
sub
ret
sbb
lock
cmp
jne
xchg
es
pushf
add
lods
mov
sub
iret
rolb
out
sub
push
data16
inc
arpl
cmp
out
sub
aas
push
pop
sub
xchg
mov
mov
mov
pop
xchg
lea
adc
aas
dec
aad
push
ror
sbb
sbb
movl
push
jmp
ljmp
andl
mov
sbb
fbstp
pop
add
adc
pop
dec
add
pushf
mov
inc
add
dec
add
lret
aas
dec
jl
xchg
js
leave
mov
lea
push
add
cmpsl
fisttps
and
jbe
imul
inc
pop
mull
dec
faddl
xor
sbbl
pop
inc
push
add
push
cmpsb
sbbl
dec
pop
in
fwait
inc
aas
mov
testl
push
add
inc
pop
push
and
jo
cmp
jno
and
jae
jmp
movsl
jle
je
les
pushf
add
cmpsl
into
aam
adc
int3
ss
push
mov
add
inc
or
inc
cmpsb
enter
ficoms
adc
test
sbb
mov
sbb
imul
xchg
add
jmp
or
add
mov
dec
cmpb
inc
add
lock
add
sub
xchg
test
imul
mov
cmp
ds
pop
add
lret
ds
gs
inc
mov
rorb
push
and
mov
sub
add
xor
push
add
je
imul
dec
jo
add
decb
inc
or
adcl
xor
lods
aas
pop
push
mov
push
push
gs
add
dec
push
push
inc
add
fisubl
sub
add
lahf
pop
add
mov
cmp
dec
add
jo
add
or
add
test
add
sbb
addl
pop
pop
mov
lret
cmpsl
loop
xor
test
test
and
jns
add
adc
dec
mov
lods
sub
jge
mov
mov
lahf
fimull
mov
pop
lret
jns
pusha
add
idivb
adc
fs
or
add
or
or
orb
or
xchg
enter
pop
push
push
sub
lahf
add
pop
add
std
dec
iret
push
or
add
cmc
lret
or
cmp
movb
adcl
jb
add
adc
in
cmp
cmp
xlat
sbbl
cmpsl
xchg
enter
cld
stos
add
test
cltd
add
scas
repnz
adc
push
mov
and
mov
pop
mov
push
lock
add
je
div
dec
jb
add
jbe
push
dec
cmp
pop
push
lods
xor
nop
out
rclb
inc
mov
mov
and
jne
pop
and
addb
test
jge
pop
add
adc
add
rorb
mov
lods
add
add
add
jmp
cmp
push
add
lcall
pusha
addr16
jo
call
dec
add
lcall
pop
xchg
insl
or
cmp
xchg
aad
bnd
insb
add
mov
fwait
ds
xchg
add
lods
hlt
adc
ljmp
mov
xor
cmp
push
mov
lods
xchg
repnz
lret
mov
xor
insl
int
dec
rolb
push
cwtl
test
test
xchg
gs
scas
int
xchg
mov
inc
loopne
jnp
xor
add
adc
lea
mov
testb
imul
xor
ja
mov
cmpsb
sbb
movsl
lahf
add
int
sub
mov
ja
test
push
add
pop
pop
loope
pop
aaa
sbb
inc
ja
mov
push
or
flds
shrd
add
out
mov
jmp
movsl
sbb
je
lret
sbb
inc
adc
gs
adc
aas
cmp
das
cld
jns
sub
or
wrmsr
std
cmp
mov
and
sub
push
xor
add
pop
loopne
or
sub
repz
jo
pop
add
test
rclb
add
or
ljmp
adc
ds
fldl
push
sbb
enter
out
not
dec
cli
test
dec
add
test
add
insb
push
sarb
daa
jae
push
js
dec
push
cmp
bound
pop
movsb
adc
pop
sbb
in
adc
mov
add
sub
cmpsl
xchg
ror
cmpsb
add
in
push
out
loope
lock
add
and
and
jp
nop
add
and
cmp
sub
push
pop
or
data16
jge
xchg
add
popl
dec
dec
loop
push
adc
inc
push
js
push
ljmp
add
vpmulhuw
mov
inc
sbb
xchg
xchg
and
into
aad
and
nop
add
cmp
xchg
enter
iret
icebp
pop
push
loopne
adc
and
test
mov
xchg
lea
cmp
xchg
add
dec
aaa
sbb
mov
sbbl
add
and
dec
pop
loope
out
std
and
rolb
mov
xor
push
push
cmp
addl
mov
mov
mov
fs
mov
add
shll
push
push
inc
repz
xchg
aas
mov
pop
xchg
fs
fsubr
sbb
leave
inc
adc
das
mov
add
mov
mov
repz
jne
repnz
bswap
mov
xor
adc
pop
pop
adc
add
mov
adc
add
xchg
pop
imul
pusha
mov
mov
fmuls
mov
push
mov
jno
lock
mov
nop
add
sbb
add
and
lldt
push
jmp
add
jno
and
adc
sbb
stos
push
scas
add
movsb
push
mov
call
rcrl
fistpll
push
push
pop
xchg
adc
and
push
xor
adc
roll
mov
str
sbb
mov
inc
scas
pop
mov
cmp
push
dec
dec
ja
add
ret
and
pop
inc
sbb
xchg
inc
fdiv
pop
orb
mov
jmp
ljmp
imul
mov
mov
add
stc
pop
or
add
rcrb
xchg
sbb
add
sub
outsb
mov
scas
je
add
sub
aad
push
and
or
and
and
sub
out
and
pop
test
pop
cmpsb
addl
pop
bound
jmp
clc
hlt
mov
add
aad
mov
or
and
xchg
leave
shr
or
fiaddl
les
adc
nop
mov
adc
fstpl
add
cmpsl
loopne
movsl
daa
push
ficompl
add
enter
mov
pushf
and
fprem
ret
pop
mov
cmc
fs
add
pop
mov
jmp
pushf
popa
jmp
mov
adc
fs
or
dec
and
sarl
sub
data16
mov
decb
jns
add
cmp
xchg
pop
add
gs
jb
mov
mov
sar
fcoml
repnz
sub
shrl
iret
jp
mov
cmp
das
jle
fbstp
add
orb
cmp
sbb
jne
rclb
adc
bound
or
add
xchg
fs
xor
lcall
nop
or
les
add
xor
xor
adc
xorl
mov
xchg
mov
ret
xorl
lods
cmp
imul
lds
addb
aas
sub
dec
add
pop
jge
add
adc
and
add
lret
shr
cmp
aas
pop
adcb
sbb
jns
xor
cmp
dec
inc
add
xchg
push
mov
addb
popf
cmp
cld
xor
inc
mov
gs
add
into
cmp
pop
movsl
add
ret
popf
cli
je
xor
bnd
add
mov
sbb
negb
cpuid
js
jge
add
dec
lock
ret
cmp
clc
mov
add
push
add
lcall
ja
or
mov
cmpsb
add
addl
jne
add
lods
sub
sub
add
mov
or
add
adc
les
cmp
insb
xchg
xor
push
mov
add
test
jnp
add
adc
repnz
rolb
push
adc
das
imul
ljmp
add
adc
lret
push
cmp
cmp
add
jmp
jp
mov
mov
dec
incl
gs
cli
or
sbb
lea
cmc
cwtl
bswap
push
add
push
fwait
xchg
lea
mov
inc
ds
add
aam
add
dec
jmp
test
dec
sti
in
int
add
out
iret
inc
into
or
or
movsb
cli
add
push
out
test
adc
mov
jbe
and
test
out
lret
and
insb
cwtl
ljmp
mov
pop
cmp
ret
add
or
pop
mov
pushf
add
add
add
leave
mov
or
stc
std
add
push
push
push
ss
sahf
nop
jecxz
or
das
cmp
xchg
inc
or
cmpl
push
sbb
or
dec
and
cmp
mov
add
das
repz
or
dec
or
loop
add
dec
les
rcrb
push
inc
dec
sub
jne
cmp
add
addr16
dec
pop
call
add
xor
xchg
adc
add
pop
jnp
sbb
sbb
add
int
mov
inc
add
add
adcb
sub
inc
jns
mov
mov
pop
ja
add
xlat
add
mov
cld
mov
sbb
push
std
into
jae
inc
dec
add
push
lea
sahf
xchg
fdivrs
pushf
xchg
pop
rorb
push
mov
adc
add
mov
mov
adc
lret
ret
cmp
add
cld
xchg
mov
or
add
gs
mov
cmp
aas
loopne
mov
xchg
xor
push
hlt
add
cmp
fucom
cld
nop
pop
add
cmp
mov
mov
pop
add
in
loope
into
enter
call
int
add
je
or
pop
mov
add
sbb
xorl
mov
rorb
sub
jle
add
mov
add
int3
in
jge
and
cli
pop
cvttps2pi
add
cmp
cwtl
jb
mov
fistl
divl
setb
add
ljmp
or
mov
inc
mov
xchg
rcl
out
lea
pop
cmp
fmuls
lock
add
cmp
jne
xor
add
xchg
jae
js
mov
mov
and
inc
repnz
sub
or
and
lock
add
add
jne
add
and
mov
aas
popf
arpl
add
dec
lods
cltd
ret
and
cmp
hlt
leave
pop
fcom
xchg
addb
movb
add
pop
rorb
jne
aad
mov
pop
add
jb
sbb
or
fsubr
verr
loopne
cmc
add
lods
rcr
mov
fisubs
pop
icebp
test
lret
adc
add
sub
cmp
pop
lds
xor
xchg
repz
movsb
lods
inc
dec
adc
pop
add
xchg
pop
lsl
or
sbb
push
nop
jmp
aaa
sbb
adc
or
lret
fsubrp
rorl
jge
pop
add
repz
fisttps
testb
push
call
scas
sub
jae
add
mov
lcall
add
fmuls
out
xchg
mov
out
jg
xchg
mov
push
repz
sbb
add
push
lcall
fadds
cmpl
sbb
inc
out
lahf
push
ret
jno
les
nop
dec
movsl
adc
enter
or
cwtl
lea
shll
nop
ret
push
fdivr
popf
lret
pop
pop
leave
gs
hlt
xlat
add
loop
aas
mov
jp
add
mov
push
add
pop
adc
xor
cmp
jne
mov
or
aas
dec
pop
jmp
jp
xor
xlat
stos
ficompl
xchg
dec
adc
insb
mov
es
roll
inc
add
jmp
clc
push
pop
scas
loopne
inc
dec
or
xor
or
lahf
add
ss
sbb
imul
fs
fildll
lret
roll
sbb
mov
inc
mov
icebp
inc
mov
jo
cmpl
lea
ljmp
scas
pop
popa
dec
jne
sub
jnp
add
sbb
lahf
sbb
add
dec
repz
popa
jnp
pop
inc
ljmp
cmp
repz
enter
xor
out
inc
add
pop
stos
push
es
pushf
push
add
and
mulb
negl
add
sub
xchg
xor
push
jmp
hlt
std
in
xchg
add
out
mov
fdivr
mov
pushf
and
cmp
lcall
adc
std
or
mov
mov
jg
push
faddl
add
aaa
adc
pop
inc
aam
dec
fs
add
xor
add
mov
mulb
leave
cs
fs
int3
call
mov
les
jnp
movb
ret
jne
outsb
mov
add
or
pop
or
cltd
mov
pop
pop
mov
add
adc
lret
icebp
int3
fmull
test
push
cmp
movsl
jecxz
test
das
mov
xor
inc
mov
faddp
cmp
ja
pop
scas
sahf
aas
andb
inc
add
adc
cwtl
mov
and
mov
pop
dec
jp
pop
mov
push
repnz
cmp
jb
in
lock
mov
fisttpl
pop
pop
xor
pop
add
sti
and
cwtl
adc
inc
mov
mov
jae
movsl
add
pop
fiaddl
and
add
outsb
dec
add
pop
sub
call
push
add
and
cmp
jl
jne
add
out
leave
xor
cmpb
out
je
sub
push
stc
add
cmp
xchg
jecxz,pt
push
add
test
sarl
push
add
jl
xor
add
test
test
jg
add
aas
call
into
pusha
repz
add
stos
das
pop
or
add
or
add
xchg
cmc
incl
add
fstp
orl
xchg
add
pop
pop
out
loop
cli
ret
add
xadd
jb
ljmp
sub
push
lea
push
push
testb
add
inc
sbb
add
aas
stos
or
filds
je
and
sbb
stos
fs
xor
jne
push
mov
movsb
shll
lahf
xchg
addl
add
mov
sub
mov
stos
add
mulb
or
jne
jo
add
push
push
mov
dec
roll
pop
ljmp
add
add
mov
adc
pop
jb
lds
ret
inc
sbb
and
mov
cmp
add
lock
add
pop
dec
pusha
lods
or
mov
sbb
add
push
cmp
aas
adc
inc
sbbb
dec
sti
pusha
adcl
clc
ljmp
add
adc
xor
mov
mov
inc
or
lock
add
jne
cmp
rcll
enter
int
fadds
add
test
jne
or
aad
sahf
add
fwait
push
adc
in
pop
mov
enter
jp
loop
add
mov
lock
jb
jo
rcr
inc
testb
add
jne
adc
leave
or
mul
cmp
cmc
mov
xchg
dec
pop
xorl
mov
add
addb
and
push
pop
and
sbb
add
lahf
cmp
pop
add
sbb
insb
pushf
sti
test
shlb
les
pop
mov
mov
jnp
cli
enter
dec
cltd
scas
add
js
xor
pop
xor
inc
je
pop
cmpb
sbb
test
clc
lret
xchg
je
add
ret
mov
test
add
pop
dec
xor
lock
leave
sbb
in
cmpsl
arpl
sub
fistps
sub
dec
add
cmpsl
add
nop
xchg
push
pop
add
add
sbb
sub
or
clc
or
pop
incl
das
adcb
adc
sbb
out
add
mov
cwtl
xor
nop
add
stos
and
mov
les
sbb
adc
sar
cmpsb
shlb
push
and
adc
pop
leave
shrb
cmp
pop
enter
cmp
add
mov
subb
adc
mov
sub
mov
fldt
pop
or
xor
dec
pop
add
jns
ret
push
nop
cmp
adc
push
inc
cmpl
dec
sbb
mov
or
mov
lods
lcall
pop
sub
clc
lea
mov
pusha
imul
adc
pop
pop
jne
mov
psubb
push
mov
dec
mov
cmp
add
cs
add
js
or
int
push
imul
loop
aas
and
test
aam
mov
sub
jo
pop
add
int3
ficomps
inc
jge
insb
pop
add
jne
adc
push
add
js
cld
sub
and
or
pushl
mov
into
inc
mov
out
dec
inc
adc
add
adc
adc
test
or
mov
add
mov
repnz
jne
mov
sarb
insb
cmp
add
daa
lock
ljmp
adc
mov
enter
pusha
call
popa
cltd
push
or
scas
add
sub
add
jl
push
xlat
test
mov
pop
pop
mov
sub
adc
push
cmpl
add
enter
inc
mov
sub
sub
pop
mov
xchg
or
mov
mov
cmpl
push
jae
xchg
addb
or
int3
mov
push
pop
mov
fisttps
cmp
sbb
push
push
lret
pop
and
jg
add
ljmp
cmp
xor
push
ret
mov
enter
out
int
cmc
fildl
pop
xchg
insb
dec
adc
adc
scas
push
pop
mov
adc
cmpb
shr
push
call
in
je
pop
or
add
ret
adc
fs
movsl
add
cli
shlb
movsb
adc
sub
cltd
push
add
lods
fidivs
mov
adc
in
add
movsb
pop
rep
jmp
popa
mov
add
adc
lock
inc
add
jmp
popl
pop
or
insb
add
mov
mov
rorb
mov
popa
jle
pop
in
mov
scas
add
xlat
sub
push
and
ds
rorb
pop
sub
add
nop
jg
add
push
mov
repz
add
inc
dec
xchg
loopne
add
dec
sub
mov
inc
adc
or
add
or
scas
orb
push
jo
add
call
push
loopne
add
std
or
inc
push
dec
stc
add
popa
mov
call
pop
int3
rorl
hlt
lcall
add
popf
xchg
rclb
mov
sbb
add
stos
enter
pandn
xchg
add
adc
push
jecxz
pop
mov
fadds
jl
add
sbb
js
dec
adc
lods
movsl
jle
dec
sub
fwait
pop
lds
loope
in
cmpsl
pop
sbb
jo
inc
clc
push
dec
push
add
sbb
adc
and
sub
and
push
cwtl
testb
roll
call
lret
fnstcw
popf
xchg
adc
add
push
or
adc
xor
cld
add
xchg
dec
lahf
add
jge
add
in
subb
movsl
mov
shll
push
adc
inc
jge,pt
add
js
xchg
xorl
daa
rolb
add
out
cmp
outsb
pop
das
add
push
ret
clc
pop
test
add
push
shlb
gs
stos
adc
push
jecxz
sbb
mov
inc
xlat
out
ret
cmp
into
add
ljmp
les
out
push
add
jo
mov
push
cmpsl
add
lea
ja
orl
xchg
call
adc
pop
shrl
sub
into
add
or
and
sub
loopne
test
add
add
cmp
sbb
xor
push
or
jo
push
push
jo
add
sub
dec
xorb
add
or
je
xorb
cmp
call
dec
pusha
add
jmp
inc
and
out
push
sub
scas
inc
orb
cmc
push
jne
pop
loopne
rol
sub
jns
incl
jmp
pop
daa
mov
add
dec
xor
fwait
mov
out
jp
pop
and
mov
loopne
add
lret
call
addr16
loopne
sahf
add
jp
aad
mov
inc
lret
push
shr
add
fsts
xor
pop
add
and
popf
mov
lock
sub
lcall
adc
add
jno
cmp
in
cmp
mov
hlt
inc
pop
jecxz,pn
ds
jns
add
in
push
add
repz
insb
sbb
roll
add
jge
add
push
or
sbb
aaa
add
int3
stc
push
add
or
mov
into
pop
xchg
xchg
xor
add
adc
push
filds
add
test
popa
mov
add
lods
movl
and
cli
or
xchg
test
in
add
fbstp
or
roll
dec
push
pop
in
lea
adc
lret
add
add
pop
rolb
mov
jno
fidivrl
add
and
pop
nop
in
push
xchg
jge
add
add
sti
sbb
mov
add
and
out
pop
jno
add
pop
inc
lods
sahf
sub
add
pop
fwait
mov
icebp
scas
stos
arpl
sbb
fcoml
adc
sub
xor
addl
inc
cmp
add
sbbb
outsb
movsb
or
mov
int3
cmp
add
jg
jns
adc
xchg
inc
add
shlb
add
in
inc
rcrb
mov
dec
add
dec
add
fsubl
xor
gs
adc
ret
jno
lahf
stc
bound
popf
cld
cs
fdivs
lea
jmp
or
lret
push
jge
es
add
mov
cmpsl
shlb
jns
push
inc
lahf
int
sbb
mov
xchg
mov
pop
cmpsl
repz
and
rolb
cli
adc
xchg
jb
out
sbb
pop
mov
insb
mov
inc
shll
and
sbb
pop
int3
sbbb
cmp
and
repz
je
mov
nop
xor
xor
in
loope
inc
pop
ret
stos
mov
pusha
std
mov
add
scas
mov
jno
sbb
bound
rorb
inc
xchg
leave
aad
pusha
lea
mov
adc
lock
clc
inc
ret
arpl
pop
cltd
jnp
shl
pop
jl
es
push
add
add
lea
mov
add
pop
ret
add
xor
hlt
addb
dec
pop
pop
loop
shll
add
lea
push
lahf
xchg
pusha
add
in
les
sbb
add
add
inc
test
jmp
pop
cltd
sub
add
dec
ds
jp
and
ljmp
cmp
pop
mov
int3
add
adc
xchg
jne
fwait
dec
add
lahf
xchg
xchg
xchg
adc
ss
push
ret
push
ljmp
stos
sub
cmp
iret
dec
dec
add
sub
xchg
sbb
out
mov
sbb
adc
xorb
add
fwait
leave
jns
adc
mov
inc
dec
sarb
pop
add
mov
loopne
roll
loope
mov
add
lods
xor
test
andb
push
sub
jno
ljmp
cmpsb
add
in
add
ss
push
mov
into
add
loopne
add
sbb
jecxz
roll
pusha
movl
out
orb
add
mov
roll
mov
pop
and
add
mov
add
sub
shrl
mov
inc
leave
push
insb
mov
add
gs
push
dec
xor
jge
add
insl
xor
cmp
pop
aad
mov
xor
shlb
js
ret
cmpb
push
add
push
imul
or
stos
mov
pop
and
fwait
in
arpl
cmp
mov
mov
sbb
dec
jle
lret
sub
in
push
jno
add
cmc
repz
dec
adc
add
inc
subl
push
mov
mov
inc
lods
mov
cmp
shlb
fcomi
add
fstps
pop
dec
cltd
test
mov
inc
inc
mov
adc
leave
mov
push
ret
jne
jnp
push
add
rcl
add
aas
sbb
orb
cmp
in
je
stos
pop
lock
jle
fs
lods
jge
xchg
jne
aas
xchg
inc
and
add
add
inc
addb
pop
mov
jge
add
lds
pushf
jae
dec
out
add
sub
push
pop
sbb
mov
and
dec
push
pop
sub
fs
stc
movsb
and
out
js
mov
pop
adc
fcomi
push
or
add
or
add
fnstcw
push
sub
add
enter
push
add
test
shll
or
add
add
add
sbb
loopne
cltd
sbb
aam
lods
push
lcall
cwtl
push
mov
je
xor
mov
outsl
and
jb
cs
add
mov
sbb
mov
and
inc
stos
mov
insl
jnp
or
sub
test
xor
push
inc
aaa
push
test
xor
std
sub
jmp
add
add
add
and
push
xbegin
xchg
out
add
sarb
add
adc
mov
dec
add
sub
add
mov
inc
ss
sbb
push
sub
orb
mov
or
mov
sub
rclb
loopne
loop
mov
push
clc
mov
sbb
rolb
or
mov
clc
std
xor
and
add
je
push
jcxz
mov
aaa
add
adc
cmp
dec
add
hlt
cld
push
popf
push
cwtl
mov
pushf
ja
aaa
cli
loopne
fcomi
sbb
mov
cmp
aas
push
pop
addb
jb
and
jp
fs
pusha
adc
ljmp
popf
add
jo
sub
imul
push
leave
or
outsb
mulb
test
cmp
shll
daa
xor
adc
add
out
fs
mov
mov
incl
mov
movsb
arpl
sbb
add
push
sub
dec
imulb
aaa
push
jo
loopne,pn
add
push
inc
jne
dec
mov
les
pop
push
add
or
add
lea
push
or
push
sbb
dec
mov
mov
push
or
or
loope
arpl
push
cs
dec
add
or
add
add
or
sub
jp
mov
inc
int
mov
jo
add
in
faddl
pop
jo
adc
lods
add
test
das
xchg
push
push
or
xchg
inc
cwtl
mov
insl
add
sub
add
clc
les
push
push
in
or
push
and
mov
into
ljmp
cvtps2pd
cld
dec
jg
mov
cmp
mov
insl
fsubrl
add
mov
into
inc
adc
cmp
lods
test
lahf
add
in
mov
add
lock
and
in
rolb
shlb
push
cmpsl
add
in
into
pop
inc
nop
lret
das
mov
dec
clc
sub
sbb
sub
dec
cmp
and
jo
push
mov
add
adc
and
sbb
jp
rcll
test
add
cmp
insb
add
psubb
xchg
inc
cmp
rcrl
sub
clc
cmpl
fs
or
or
mov
int
clc
add
lock
adc
dec
inc
pop
push
loope
pop
sbb
cs
fldcw
insb
mov
xchg
inc
aaa
dec
stc
cmc
sub
js
add
dec
rclb
arpl
cmp
in
cli
jg
dec
ret
sub
das
fcmovne
jne
cmp
pusha
pushf
mov
add
or
xchg
outsl
sbb
xor
pop
pop
adc
loop
mov
lret
loope
idiv
fsubrp
rol
add
inc
dec
ja
hlt
sub
mov
add
add
cwtl
ss
mov
shrb
in
out
add
cmove
xor
popa
add
ds
push
and
add
mov
and
jo
add
mov
adc
cmp
push
punpckldq
dec
xchg
popa
mov
or
int
mov
ljmp
ret
xor
jnp
add
push
inc
cmp
cmp
lods
push
mov
sahf
lret
add
dec
lcall
add
mov
push
aaa
cmp
lds
and
imul
mov
add
sbb
data16
add
std
gs
or
popl
xor
xor
jb
and
xchg
lret
and
sub
and
mov
popf
push
addb
xchg
and
sub
int3
pop
mov
mov
inc
push
insb
aam
sarl
and
mov
jecxz
jns
ror
add
fildll
cwtl
orb
push
pop
lret
insb
sbb
add
movsl
jge
add
stc
mov
or
mov
arpl
jno
cwtl
push
add
std
inc
pop
dec
shl
pushf
add
daa
mov
push
rcr
or
cmp
add
cmpsb
shlb
jne
push
add
mov
pushf
enter
cltd
popa
clc
dec
test
adc
sub
stos
add
mov
mov
cmp
loopne
add
push
imul
shrb
add
inc
mov
and
int3
mov
jbe
cmp
imul
sbb
repz
loopne
arpl
xor
mov
xor
scas
pushf
ret
push
pusha
push
inc
inc
add
mov
xchg
jae
mov
xor
int3
pop
xchg
ret
add
push
xor
hlt
sarb
in
in
add
pop
cmp
or
pop
dec
sbb
pop
sbbl
jmp
pop
and
jns
cld
loope
push
outsb
rcr
cmp
ja
jp
inc
pusha
lea
jae
add
xchg
pop
daa
cld
lock
fwait
lods
cmp
lret
and
out
add
pop
cwtl
insb
jecxz
or
mov
repz
mov
nop
inc
push
mov
add
or
jmp
pop
jl
int3
test
sahf
jo
pop
jmp
scas
iret
cmp
xor
jmp
add
jecxz
push
in
fildl
and
or
cli
les
cmp
cmc
and
stos
mov
adc
jge
movlps
mov
repz
push
lea
add
enter
mov
mov
cmp
adcb
add
mov
rcll
sub
jns
xchg
and
mov
stos
mov
adc
lret
sub
pop
out
lock
adc
and
int3
dec
add
xchg
pop
dec
imul
add
fcoml
pop
mov
les
pop
jecxz
add
sub
mov
xor
dec
cwtl
and
lock
add
xor
loopne
mov
roll
xchg
xchg
incl
sbb
xchg
addl
fbld
mov
pop
lret
sbb
mov
push
mov
aas
add
add
add
lods
enter
jne
jmp
inc
sbb
sbb
or
and
out
sbb
test
cmpsb
add
adc
fisttpll
dec
add
call
rorl
dec
mov
jbe
push
pop
in
stos
add
das
push
roll
add
add
xchg
pop
es
add
mov
clc
add
gs
add
pushf
sub
fwait
scas
les
clc
and
push
cli
push
je
jno
jg
shll
add
push
lret
stc
and
mov
popl
jmp
pop
hlt
add
dec
ret
sbb
cmp
fcoms
repnz
or
ret
adc
add
lcall
ror
adc
clc
orl
add
jne
int3
in
pushf
in
push
add
ljmp
jne
pusha
pop
jo
add
add
daa
repnz
pop
aam
and
add
xlat
mov
pop
or
into
sarb
inc
jns
jne
add
xchg
add
rclb
sub
lret
mov
pop
mov
fadds
nop
mov
push
xor
mov
pop
insb
lea
pop
sub
ret
shl
fimull
js
cs
mov
push
and
mov
sbb
push
or
mov
ltr
xchg
mov
add
lahf
sub
repnz
mov
ljmp
cmpb
loopne
inc
fs
sbb
pop
xlat
inc
adc
add
out
xchg
jmp
das
lods
cld
fwait
pushf
sub
in
add
adc
sbb
pop
outsb
or
add
push
call
subb
sub
sub
xor
adc
in
add
jg
cltd
or
add
scas
pop
ret
add
push
repz
dec
sbb
dec
cmp
push
xor
out
fildl
sahf
add
smsw
jmp
add
push
leave
pop
shlb
jns
add
lods
in
add
or
jmp
jge
add
hlt
jno
sar
mov
push
je
es
out
mov
mov
pop
mov
rcrb
or
add
movb
out
add
inc
mov
cld
enter
jo
fisttpll
inc
adc
sbb
fchs
adc
pushl
imul
cmp
iret
shrb
sgdtl
mov
testb
push
out
mov
or
sbb
sarl
add
aam
inc
push
xlat
std
add
cld
and
rorl
in
pop
ljmp
sbb
dec
add
das
pop
jne
fmul
clc
push
loop
jp
add
push
xchg
pop
xor
cmp
and
cmpl
andb
add
xchg
mov
pop
jae
test
pop
mov
lock
int
stc
add
jbe
inc
push
add
adc
lret
add
popf
sub
mov
jmp
out
mov
add
or
cmp
stc
add
aad
in
bound
jo
xor
jp
aas
sbb
add
pop
sub
addb
push
jp
in
add
inc
insl
cmp
testl
add
or
inc
vpmacssww
sbb
add
loop
shl
add
push
adc
in
addb
push
mov
push
jo
xor
das
out
or
outsb
inc
jmp
add
lods
add
int
mov
popa
pop
add
fistl
outsb
xor
imul
xchg
ds
cvtpi2ps
and
cmpsb
rcrb
mov
ret
add
orl
test
cmp
fidivl
or
pop
push
ja
jo
add
xchg
lods
fdivs
add
add
or
sub
pop
imul
add
jns
lods
mov
sub
popf
or
jbe
loopne
add
in
pop
add
shr
cwtl
fisubl
aad
add
outsb
leave
push
sarb
add
mov
cmp
adcb
je
inc
mov
pusha
subb
stos
add
jbe
mov
jo
loopne
add
or
add
js
shrl
lods
cltd
and
dec
js
jo
or
roll
cmc
inc
ja
jno
mov
sbb
inc
orb
pop
add
push
pop
aam
add
mov
push
ljmp
arpl
fisttps
lahf
call
jae
mov
and
pop
lods
filds
shrb
dec
int
pusha
and
fldl
aam
inc
xchg
jb
inc
outsl
leave
mov
fs
push
xchg
into
push
inc
mov
jnp
add
jmp
pop
sarb
add
or
push
into
push
pop
mov
xor
push
cmc
shlb
int3
pop
clc
dec
sub
add
adc
xchg
dec
lock
enter
cwtl
les
imul
aam
jbe
xor
inc
and
call
cmpb
or
lahf
jp
add
push
add
or
push
popaw
push
dec
add
adc
and
movsl
div
pop
popf
les
dec
js
add
cmpsb
dec
jo
add
lea
mov
and
jle
mov
jo
fstpl
pusha
sbb
lret
push
sbb
bound
cmp
inc
dec
xchg
cltd
jno
shrb
bound
push
add
jbe
mov
ljmp
rclb
add
pop
sbb
jo
inc
xchg
jb
mov
add
fldl
and
xchg
add
ds
push
xorb
mov
std
xchg
cli
push
inc
data16
sbb
adc
insb
add
add
ret
add
pushf
imul
sbb
idivb
cld
rolb
out
push
inc
mov
jnp
add
enter
xchg
add
add
aad
adc
inc
mov
insl
imul
pop
loopne
add
push
pop
sub
xchg
mov
in
mov
pop
add
dec
rolb
sbb
andb
les
imul
cli
enter
adc
add
lea
fisubrs
es
inc
push
add
jo
inc
pushf
dec
add
fucomi
sarl
cmpsl
addb
inc
nop
in
out
mov
arpl
add
sti
call
or
pushf
and
rorb
fucom
add
add
adcb
les
pusha
jno
jo
add
sub
iret
or
mov
or
les
add
cmp
pop
mov
add
fmull
sbb
cmpsb
jle
shll
dec
ja
add
mov
sub
push
mov
out
insl
push
mov
cmp
lds
push
adc
outsb
jo
hlt
sub
pusha
xchg
sbbb
mov
xor
add
add
fcomp
or
sbb
stos
add
or
jecxz
clc
popa
xchg
add
js
add
movsl
bts
and
and
or
jmp
mov
inc
shrb
in
stos
and
add
les
ss
inc
push
jb
adc
pop
out
fwait
add
pop
jmp
add
and
subb
inc
cld
int3
mov
xchg
jnp
lcall
jmp
jo
loopne
add
hlt
sti
loopne
imul
jo
fwait
add
push
loop
xadd
push
cmp
test
sub
sub
or
cld
sbb
add
inc
adcl
lods
idivl
sub
xor
cs
jl
les
cmp
add
add
xlat
or
sbb
out
add
dec
sub
mov
adc
xlat
add
cmp
setl
and
es
and
adc
stc
ret
cld
repz
addl
or
mov
jg
shlb
test
jmp
cmp
loop
jp
pusha
hlt
daa
aad
or
dec
and
jl
add
dec
pop
cmpsb
out
das
add
movsb
hlt
jns
xchg
cld
add
pop
dec
pop
xchg
jge
sarb
add
mov
add
scas
js
test
mov
mov
sub
ds
xchg
pop
cmp
test
pop
xchg
xchg
push
jo
add
mov
jbe
jae
mov
sub
add
xchg
negl
lock
mov
clc
add
clc
inc
cmpsb
pop
inc
repnz
add
inc
jl
push
jecxz
mov
add
add
lods
jno
nop
sbb
add
push
stos
ja
aas
std
add
mov
pop
xor
ret
bound
out
sbbb
or
push
popf
xchg
addb
popa
adc
add
jmp
inc
cmp
and
add
cmpb
sbb
add
mov
jl
loopne
add
adc
or
fidivrl
data16
mov
das
pushf
shll
add
nop
sbb
or
test
dec
jae
add
inc
sub
test
add
lret
mov
jnp
adc
inc
jbe
shll
mov
mov
sub
int
sbb
add
and
pop
das
je
add
add
push
sbb
insb
pop
popl
inc
add
out
adc
xor
add
and
aas
add
sbb
mov
andl
inc
dec
add
cmp
test
mov
out
adc
leave
mov
jno
andl
cmpsb
dec
add
mov
xchg
int3
mov
mov
jmp
test
pop
lret
fisubs
fsubl
pop
add
psrlw
jns
rcrb
pop
add
aaa
mov
mov
adc
add
imul
enter
imul
popf
nop
jp
dec
jo
mov
clc
stos
mov
loop
add
mov
ljmp
cmp
mov
jg
and
xorl
push
lods
stos
jl
cltd
sbb
push
mov
jg
test
js
add
mov
stos
addl
add
sbb
insl
in
mov
inc
xchg
fcomps
push
add
xor
outsb
in
orl
xor
enter
cwtl
lea
mov
adc
or
shlb
addb
or
adc
adc
pop
and
xor
add
pusha
jo
andb
sub
add
add
add
add
mov
addb
or
clc
adc
adc
rcll
call
dec
add
jb
push
mov
add
mov
adc
mov
pop
add
pop
jns
popf
pop
pop
mov
inc
or
loopne
add
decb
adcl
jae
lock
js
sub
shr
pushf
cli
add
mov
add
popa
mov
ds
pop
lods
add
pop
xchg
outsb
mov
xchg
push
mov
popf
shrb
mov
les
lahf
or
push
cwtl
add
push
mov
cs
xor
lea
add
stos
mov
out
bound
jge
mov
mov
mov
or
add
lds
mov
jb
mov
je
sub
or
add
decl
incb
in
nop
add
xor
adc
adcb
add
sbb
int3
loop
sub
xor
in
pop
cmp
ret
addl
mov
add
insb
jl
mov
leave
adc
mov
pushf
mov
and
sbb
and
add
call
cmpsl
push
daa
shrb
cmp
data16
jmp
lods
inc
lret
and
stos
out
jg
rolb
or
lock
pop
lret
pop
movsb
fwait
and
bound
xchg
lahf
fiaddl
std
xor
rcrb
cwtl
movsb
pop
dec
add
adc
push
cmp
mov
add
add
and
xchg
mov
test
push
hlt
insb
sub
loop
pop
ret
inc
cmp
enter
adc
leave
dec
push
rolb
cmpl
or
cli
add
add
inc
mov
add
nop
sub
loope
ds
loopne
or
push
mov
mov
mov
jae
pop
shlb
mov
sub
cmp
add
es
imul
add
xchg
mov
fxch
sbb
pop
adc
adc
pop
inc
sub
jae
adc
sbb
fiadds
xchg
aas
cld
rcll
clc
mov
mov
sbb
xchg
or
cmpl
addb
test
pxor
push
xchg
jns
adc
add
or
sbb
pop
call
inc
adc
rorl
repz
pop
xor
pop
lcall
mov
mov
mov
es
add
jp
jecxz
into
incl
add
jb
and
push
push
clc
add
inc
fdivrl
sub
nop
or
call
rolb
xchg
imul
add
pop
jmp
or
shrl
jg
add
inc
lea
pop
jg
sbb
mov
push
or
cwtl
push
cltd
add
mov
lar
push
push
rcrb
int
add
pop
cmpsb
cli
or
in
mov
add
mov
in
lea
arpl
push
ror
loop
shrb
sbb
push
push
push
stos
xor
adc
add
leave
mov
adc
adc
add
js
test
pop
pop
sbb
cmp
add
les
pop
cltd
jecxz
sbbb
mov
push
push
mov
sar
or
icebp
and
and
inc
jmp
pusha
jne
push
add
rolb
bnd
add
push
mov
xor
dec
mov
jg
jmp
nop
push
adc
sub
pop
jae
add
and
mov
mov
inc
dec
jno
movsb
call
repnz
add
stos
add
lea
add
push
das
and
icebp
adc
push
shrb
inc
xor
movb
cmpb
lods
and
add
and
and
sbb
push
mov
mov
inc
add
jne
mov
dec
xor
jl
add
nop
pop
cld
out
daa
in
add
sub
pop
mov
dec
es
mov
call
xchg
push
jns
xchg
push
jae
xor
fisttpl
push
cmpsl
add
and
jmp
add
jae
jo
add
shr
add
lea
sub
mov
cli
enter
mov
or
enter
pop
fwait
cmpsb
add
and
int3
pop
pop
add
or
lods
adc
out
adc
mov
mov
jle
sub
mov
pop
iret
add
addr16
rcrb
insl
push
fidivrl
mov
stc
pop
push
add
mov
add
adc
aad
cld
insb
and
repz
jbe
cmp
jb
repnz
mov
inc
and
std
pop
jo
push
bound
vpsrad
inc
imul
mov
mov
or
mov
xchg
mov
cmp
jae
jns
xchg
ljmp
orb
add
and
xor
mov
add
add
jmp
orl
and
mov
inc
ljmp
jno
cmp
mov
add
jmp
into
mov
cmpb
loop
mov
jmp
sbb
js
add
mov
in
pop
push
or
frstor
or
push
lock
push
adc
loopne
cmp
push
ret
cmc
add
shrb
roll
or
loopne
and
jnp
add
adc
insl
into
add
dec
push
jecxz
cmp
add
jb
push
inc
adc
std
subl
int
and
cld
insb
mov
xchg
stc
inc
test
pushf
jns
pusha
les
inc
jae
fwait
add
cmp
call
xchg
movsb
leave
jmp
dec
aad
rolb
push
xor
jl
icebp
pop
ret
push
sub
add
jp
inc
xor
add
sbb
add
clc
adc
aam
push
adc
add
push
clc
add
aam
xor
add
inc
jg
shrb
xor
repnz
pop
movsl
shlb
or
jbe
das
cmp
xchg
mov
xor
fs
jmp
enter
push
add
mov
lret
adc
cmpsb
adc
jbe
data16
shll
sub
je,pt
add
jb
pushf
jge
xchg
in
sarb
ja
cmp
sbb
fcompl
adcb
push
sbb
sbb
or
add
aas
jne
sub
cvtpi2ps
jl
lds
cmpb
repnz
dec
or
mov
rorb
add
shrb
cmp
jecxz
adc
jb
call
mov
lcall
add
mov
jns
add
pop
fildll
mov
cld
mov
pop
aam
imul
sahf
cmpb
sbb
dec
push
push
add
push
inc
push
mov
mov
mov
mov
stc
dec
add
lcall
cmp
insb
cmp
clc
mov
cmpsb
int
fstps
pusha
xchg
and
cmp
imul
cld
les
je
inc
lret
movl
cmpsb
lea
divl
cmp
sub
popf
xchg
push
ds
in
test
cmp
nop
pop
popl
stos
lds
push
jmp
lock
push
xchg
cmp
ds
stos
xlat
xchg
add
push
sbb
or
and
je
pop
mov
sbb
repz
adc
xor
push
sub
mov
pop
sub
movsl
xor
icebp
or
add
add
test
andb
jle
add
push
in
sub
push
jge
add
bound
cmp
into
pop
lret
inc
test
test
sahf
hlt
in
pop
jns
add
cmp
arpl
jl
add
jge
lods
lds
or
push
push
and
mov
pusha
aam
push
loopne
add
sub
push
mov
lock
add
outsl
ja
mov
sub
and
and
xor
sbb
icebp
dec
push
push
jp
sbb
and
or
jg
sub
repnz
xchg
sbb
dec
movsl
cmp
dec
add
cs
adc
xor
add
add
pusha
ret
add
add
test
pop
mov
xchg
call
jmp
jecxz
push
mov
push
cs
lock
xlat
stos
int
add
jmp
mov
cmp
ds
mov
jmp
dec
add
jne
adc
mov
in
out
addb
and
mov
mov
add
mov
mov
or
cmpb
jp
push
imul
test
push
adc
rorb
jmp
divb
lahf
pop
add
mov
jnp
popa
outsb
sub
jns
or
add
hlt
das
push
add
fwait
add
jnp
add
or
lods
add
jge
cmp
push
jg
inc
loope
add
pop
mov
mov
push
pop
adc
mov
call
push
fs
scas
popaw
and
sbb
pop
xor
push
push
cwtl
je
add
xchg
push
lock
or
rorl
or
or
sbbb
fsubr
sbb
sarl
arpl
rorb
fs
sbb
add
test
xor
mov
and
mov
add
pop
aaa
add
xor
pop
add
clc
repz
mov
inc
inc
xlat
pop
xor
inc
push
push
add
xor
or
les
jmp
shlb
add
addr16
clc
es
cmp
and
pop
loope
push
or
sbb
mov
push
jg
ret
je
call
andl
pop
and
in
inc
movsl
or
inc
add
das
and
push
pop
jo
ds
les
lea
test
in
mov
dec
sbb
add
add
lahf
je
add
call
cmp
sub
dec
rorl
out
add
nop
push
test
enter
cmp
cmp
and
push
add
jne
dec
add
dec
push
dec
lock
nop
or
mov
enter
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
dec
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
mov
mov
fiadds
push
mov
mov
add
scas
call
mov
bound
pop
mov
push
jmp
mov
sub
and
cwtl
movsb
cmp
add
add
pop
cld
hlt
pop
ljmp
bound
aad
js
jns
das
add
push
lahf
jae
subl
mov
outsl
or
inc
pop
or
adc
lds
dec
jo
add
jae
mov
push
mov
fmuls
dec
lock
jp
add
rorl
sbb
sub
orb
pop
xchg
mov
shlb
xor
add
ja
xor
xchg
cmp
add
jecxz
rorb
inc
add
xchg
adc
int
push
sub
and
cmpsl
add
mov
add
push
and
bswap
sub
sub
xor
xchg
test
jnp
cs
sbb
lods
push
add
out
xchg
sbb
sbb
ret
repz
mov
arpl
addr16
pop
cmp
loop
test
cmp
jmp
inc
adc
pop
cmp
sbb
stc
add
clc
lds
and
cmp
ja
pop
xorb
imul
mov
mov
and
movsl
add
add
enter
dec
cmp
dec
mov
sbb
fs
add
xchg
je
aaa
fwait
add
outsl
jb
add
je
rcrl
cli
jno
inc
fs
cld
cmp
cmp
sub
sbb
outsl
insl
jmp
adc
add
sbb
mov
jae
sub
adc
mov
xchg
add
jbe
dec
mov
cmp
jns
sbb
ds
push
cmp
and
cmpb
mov
jmp
sbb
xchg
sbb
push
add
sbb
push
sarb
mov
testl
lcall
loop
in
iret
or
jno
add
inc
push
frstor
dec
cld
les
dec
pop
xor
nop
push
inc
dec
mov
es
or
adc
mov
or
les
add
sub
fistps
mov
es
cmp
roll
add
mov
push
push
push
mov
sub
dec
add
add
and
mov
cmpb
jp
xchg
push
pop
push
cwtl
ret
int3
jne
or
sar
xchg
fldenv
jo
roll
inc
add
fnsave
fidivs
cmp
out
pop
add
cmpsl
adc
xor
and
mov
mov
inc
add
sti
sub
cmp
cmp
adc
jge
clc
enter
les
jmp
dec
sub
add
bound
push
roll
out
nop
inc
cwtl
add
loopne
out
rcr
xor
lock
xchg
fnstenv
fsubs
mov
pop
xor
pop
adc
repz
mov
imul
and
repz
lret
adc
xlat
ret
dec
add
mov
push
or
mov
test
jmp
data16
js
xchg
fmull
mov
add
outsl
and
out
aas
testb
push
mov
pop
add
lods
xorl
jg
xor
pop
mov
or
adc
jmp
mov
in
loop
adc
dec
push
arpl
add
mov
jge
sarb
xor
push
pop
inc
inc
repz
in
sub
sub
loop
pop
pop
lea
pop
in
lmsw
lret
pusha
xor
add
adc
cmp
mov
inc
add
nop
xchg
enter
pop
add
push
pop
repnz
jns
loope
dec
sbb
push
gs
add
push
fdivs
fdivrp
pop
call
jbe
pop
mov
inc
rclb
mov
push
test
dec
repnz
inc
scas
rcrb
repz
femms
jl
xor
lea
pop
sub
cltd
lock
sub
xor
xchg
adc
add
sub
inc
mov
je
jl
je
add
or
aam
addl
jmp
xchg
mov
in
add
lock
out
push
add
cli
push
jl
jl
cmove
xor
mov
add
or
add
clc
cmp
sbb
sub
mov
mov
inc
cmpsb
sbb
sub
sub
xor
arpl
mov
scas
add
inc
and
lret
insb
idivb
dec
adc
add
rcl
addb
xor
adc
mov
xchg
mov
stc
jnp
aam
push
jns
add
push
aad
add
lea
add
int3
add
push
pop
addb
cltd
pop
inc
or
dec
adc
dec
xchg
outsl
pusha
ds
mov
push
jp
jno
add
adc
add
je
js
js
cli
add
inc
dec
jne
popa
call
pop
mov
xor
je
sbb
xor
hlt
or
jmp
mov
clc
xor
mov
add
cltd
or
adc
stos
or
xor
push
sbb
pusha
pop
orb
sbb
xor
aad
add
mov
inc
add
sub
dec
xchg
lods
pushl
fnclex
add
ds
in
inc
or
in
add
stos
mov
or
add
or
or
cwtl
adc
movsb
adc
jge
xchg
push
pop
mov
test
lods
mov
call
dec
sub
sti
adc
cmp
sub
dec
inc
lret
adc
mov
pusha
or
repnz
jae
pop
push
sub
lock
dec
dec
cmpsl
add
or
pop
push
xchg
dec
enter
mov
insl
adc
adc
or
mov
jmp
push
mov
push
imull
adc
out
lods
popa
mov
dec
xchg
mov
adc
mov
add
lods
int
or
jmp
add
leave
adcb
inc
inc
add
dec
inc
jo
cmp
xchg
pop
ss
add
push
repz
add
adc
xchg
jae
add
xor
ss
pop
fcmovu
in
inc
packsswb
mov
xor
jns
xchg
add
pusha
out
ret
out
sub
pusha
jle
push
jb
imul
imul
outsb
lret
jg
aad
jmp
pusha
add
push
insb
pop
push
imul
xor
je
add
dec
inc
clc
jb
add
shlb
xor
xor
or
call
sub
fs
add
add
popf
add
push
lods
adcb
jno
inc
xor
rcl
mov
in
test
and
dec
lods
push
or
dec
jo
lock
out
and
add
jno
mov
add
repz
sub
sbb
or
adc
pop
inc
push
in
push
dec
adc
adc
push
mov
inc
mov
mov
insb
xor
mov
cmp
out
add
add
out
inc
push
jns
sbb
add
and
xor
add
inc
pop
jl
sub
es
jmp
aam
loopne
imul
or
pop
lock
xchg
xchg
mov
mov
fistl
fsts
add
int3
inc
lcall
js
push
inc
push
push
add
nop
mov
lret
jmp
js
jp
rolb
movb
pop
dec
add
cli
or
sub
cs
jmp
adc
aas
dec
daa
cmpb
dec
adc
add
dec
nop
test
loopne
dec
popl
pusha
sbb
jmp
lods
inc
nop
add
fs
sarb
in
fiadds
mov
xor
mov
psubw
add
inc
dec
inc
inc
pop
mov
mov
push
sub
cmp
jb
sbb
push
push
sub
mov
push
pslld
pop
in
das
xchg
cmp
xchg
xor
adc
and
xor
fsts
xor
mov
outsl
jne
in
and
jno
jmp
push
add
imul
sbb
sbb
sbb
mov
add
push
or
roll
adc
add
insl
gs
iret
sbb
jne
fdivrl
add
mov
and
add
inc
pop
in
pop
xchg
add
mov
add
test
ja
enter
outsl
add
xor
test
movl
test
or
pop
inc
cmc
bound
add
push
pop
push
push
push
push
add
inc
jae
xchg
ja
add
lds
xor
inc
fsubs
jle
or
ds
orb
xchg
cmpl
sub
fnstsw
cmp
cmp
pop
xchg
scas
add
jo
test
add
imul
push
cmp
xchg
and
arpl
jmp
and
call
pop
sub
popa
cmp
and
add
adc
jb
add
mov
or
or
push
add
std
rclb
xchg
mov
cmpsb
mov
aas
pop
mov
inc
js
in
call
loopne
shll
ss
mov
and
jmp
jae
lock
mull
xchg
add
lret
or
dec
in
xchg
fcomps
push
add
adcl
cs
out
adc
xor
cmpb
rcrl
fstl
push
mov
fiaddl
and
add
in
in
push
add
adcb
or
jo
add
out
sub
aad
lock
loope
inc
push
adc
loopne
add
push
cmpsl
dec
pop
and
hlt
inc
add
pop
push
cmpsb
test
push
add
enter
push
or
rolb
sbb
add
into
loopne
phsubsw
jo
push
dec
adc
dec
mul
jmp
adc
mov
mov
call
mov
inc
subl
out
or
imul
cmpsl
pmaxub
pop
pop
push
pop
pop
add
pop
mov
jbe
push
add
lods
dec
add
mov
loop
add
push
cld
jmp
add
pop
xchg
xor
jne
aas
cmpsl
add
mov
add
pop
or
add
gs
sbb
xor
adc
fsubrs
jns
cmp
push
into
adc
in
inc
call
push
lock
mov
jge
xor
cmp
mov
loopne
ss
mov
out
add
add
mov
xchg
sbb
jne
jb
xor
xchg
and
outsb
add
xchg
dec
les
jo
cmp
out
or
push
sarb
add
test
mov
adc
xorl
push
jge
pop
adc
in
mov
xchg
pop
test
or
and
movsl
push
out
add
dec
xchg
inc
and
xchg
call
enter
out
add
sbb
xchg
and
je
add
les
mov
lods
cmpsb
mov
or
enter
inc
adc
and
ja
add
add
inc
adc
and
ds
dec
xchg
pop
and
jo
jmp
jbe
add
repnz
enter
mov
in
pop
lock
adcb
dec
adc
dec
hlt
in
std
cmp
adcb
pop
cld
or
test
and
or
or
add
push
pop
dec
cmp
gs
mov
cmp
notb
adc
je
xchg
mov
add
cmp
nop
cmp
add
sub
sub
and
and
and
sbb
sub
jl
push
pop
subl
es
in
jbe
add
pop
cmp
and
add
xor
in
test
inc
jle
icebp
jp
fdivr
fiadds
or
and
jmp
sbb
add
cmp
lahf
fiadds
je
mov
adc
push
mov
add
ret
orl
imul
in
jno
jl
sub
inc
mov
ud2
add
push
pop
lods
movsl
sti
push
and
fs
add
test
jbe
mov
and
loop
jo
aam
and
ss
or
pusha
inc
mov
in
add
add
inc
or
sub
add
xchg
and
scas
sub
push
loop
push
add
mov
cmp
add
aad
scas
add
mov
aam
dec
mov
jle
outsb
jl
add
cld
dec
loopne
popa
add
mov
lret
add
sar
aam
pop
and
mov
rcll
sub
xlat
xchg
jmp
add
sub
add
add
repnz
inc
pop
xor
and
pop
adc
dec
push
cld
call
lds
clc
push
sub
and
nopl
xchg
enter
add
pop
fisttpl
add
adc
jecxz
rclb
sahf
and
addb
lods
gs
sbb
sub
inc
and
mov
jle
aas
rclb
mov
sub
add
mov
test
mov
add
movsb
adc
in
jg
shlb
push
pop
push
inc
pop
mov
pusha
xchg
movsl
insl
and
push
loope
je
pop
and
adc
pop
scas
add
and
daa
jge
cmp
inc
sbb
test
or
addl
mov
dec
sub
es
or
dec
jo
sbb
sub
add
mov
jae
or
add
push
xor
mov
mov
xor
das
sub
and
loope
clc
xor
mov
lcall
addb
or
and
add
adc
lods
aad
mov
push
or
pop
inc
loope
and
push
lds
cmp
push
fsubl
lock
fsubrs
movsl
fldl
dec
mov
dec
ficoms
ret
xor
add
pop
dec
mov
pop
in
xchg
clc
nop
stos
sahf
rclb
sub
cmp
jo
arpl
xorb
fwait
sub
inc
xor
pop
mov
and
loopne
daa
orb
inc
add
popf
push
iret
push
or
add
sbb
and
or
adc
inc
fs
sbb
sbb
add
sbb
push
jmp
sbb
mov
mov
sub
sub
add
adc
add
jae
mov
jno
adc
call
insb
nop
loopne
pushf
pop
psubw
hlt
pusha
test
dec
fnstcw
pop
jns
daa
or
jo
mov
lret
sub
test
add
push
mov
adc
add
cmpl
inc
add
jb
enter
daa
add
fnstenv
icebp
out
add
fwait
dec
push
add
add
movsb
cli
sub
push
das
push
cmp
aad
cmpsb
sbb
add
push
out
js
add
adc
add
mov
mov
lock
incb
xor
add
jnp
insb
cmc
sub
pop
and
cmp
je
xor
pop
jbe
adcl
nop
and
dec
add
or
pop
cmp
les
ja
mov
andb
stos
int3
loopne
or
or
jecxz
dec
sub
mov
std
sub
test
mov
unpckhps
inc
pop
shrb
mov
hlt
sbb
in
addr16
dec
ds
cmp
or
sar
sub
push
push
aad
fisubrs
mov
pop
cmp
lahf
rcr
add
pusha
cmp
or
addl
scas
mov
lock
add
pop
ja
jnp
inc
inc
cs
or
push
or
mov
add
add
lret
sarb
or
jbe
into
jmp
add
pop
nop
mov
shlb
sbb
int3
adc
ret
jns
adcb
shll
xchg
sub
ret
inc
daa
jmp
or
mov
add
push
stos
or
and
icebp
add
nop
insl
add
outsb
mov
add
jmp
dec
inc
sbb
addb
cli
add
xor
add
daa
sub
into
adc
add
mov
push
aas
inc
addr16
dec
sarb
and
xchg
ds
lcall
rolb
adc
jmp
das
daa
cmp
icebp
pop
adc
inc
add
cmp
cmc
adc
add
repnz
cmp
xchg
add
rorb
hlt
ljmp
pop
mov
cli
add
arpl
sub
je
or
pop
in
jecxz
in
jbe
push
mov
ljmp
dec
lds
scas
loop
xor
adc
or
clc
add
xchg
fcom
add
cld
sub
in
and
sub
enter
or
ljmp
sbb
add
mov
inc
jmp
lea
xor
or
test
dec
dec
jp
add
xor
add
popf
lds
pop
jmp
add
adcb
stos
sub
sbb
or
scas
andl
mov
add
aad
shrl
add
push
es
xlat
aad
bound
xor
leave
add
push
mov
add
mov
and
cmp
out
cmp
loop
cmp
push
pop
cmc
sahf
sbb
shl
mov
add
xor
add
add
add
sub
xchg
add
adc
adc
add
xor
mov
sbb
ljmp
cmp
xchg
and
cltd
cs
inc
sti
adc
shr
mov
push
daa
push
push
add
push
and
sub
pop
push
mov
test
clc
adc
cmpsb
jmp
call
dec
cmpsl
outsl
push
mov
hlt
adc
cmc
sbb
les
loopne
ljmp
adcl
test
ds
mov
mov
imul
pop
inc
lods
ss
push
and
lea
aam
popf
mov
cwtl
sbb
sbb
xchg
or
add
cmp
add
push
mov
push
jno
leave
jnp
add
popa
jo
subl
jne
ja
pop
push
movsl
fdivrl
add
das
adc
sbb
test
out
lret
and
out
outsb
add
lods
inc
or
mov
dec
pop
mov
add
js
cmp
hlt
rol
pop
mov
sahf
add
push
sbb
insb
mov
out
cmp
clc
outsb
add
xor
cmpsl
or
repnz
or
and
add
sahf
push
xor
cmp
jae
stc
push
mov
outsl
lods
call
cmp
push
push
in
dec
sbb
or
inc
push
jl
add
and
adc
sbb
cmp
jne
push
or
xchg
jmp
pop
lds
inc
add
and
das
add
mov
and
pop
sbb
repz
dec
sub
jns
insl
lsl
cmp
sub
daa
adc
and
cmp
adc
lods
dec
dec
pushf
loop
xor
andb
lods
add
lcall
mov
mov
sbb
lock
rclb
add
cmp
mov
inc
inc
popl
xchg
cmp
cmp
xor
adc
mov
add
dec
out
mov
clc
mov
pavgb
jmp
add
add
shlb
pop
mov
mov
jo
pop
add
add
jne
incb
mov
add
dec
add
aas
fwait
sbb
rcl
jmp
pop
adc
add
idiv
jnp
add
mov
add
fldenv
sbb
mov
sbb
lret
fcmovb
stc
xchg
and
fildll
mov
scas
add
jl
inc
pop
xor
sub
and
scas
jne
sbb
mov
and
add
shlb
sbb
xor
add
or
push
in
cld
lods
xor
lret
pop
lcall
sbb
and
das
add
push
jle
pop
or
flds
lds
ja
mov
xchg
or
jo
push
add
push
aad
movd
adc
jge
lock
xlat
daa
add
hlt
mov
out
add
xchg
adc
inc
and
xor
mov
jnp
jo
call
pop
andl
loop
test
lret
lea
sbb
mov
lahf
js
xor
lcall
xchg
adc
pushaw
add
mov
push
fmul
into
nop
ds
js
loopne
add
or
add
add
xlat
push
jne
adc
inc
sbb
cmp
daa
clts
and
fidivrs
add
xlat
sarl
push
idiv
rolb
add
scas
sub
cmp
test
es
ss
add
rolb
sub
ret
jno
pop
xlat
sbb
shrb
test
and
adc
loope
xchg
lods
mov
test
aaa
popa
dec
push
clc
cmp
stos
push
or
ret
rolb
les
cmp
xchg
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
inc
inc
jp
fists
in
mov
xorl
pushf
xor
cmp
push
nop
fs
xchg
pop
movsb
arpl
jo
icebp
mull
in
add
addr16
lods
and
nop
sub
andb
mov
push
je
adc
and
in
fildl
scas
pop
dec
js
ss
cld
cwtl
adc
add
inc
add
or
enter
cmpsl
aad
pop
fdivrs
pop
xchg
push
aas
and
fwait
sarb
fiadds
add
pop
sbb
cmpb
add
pop
adc
add
movsb
les
add
fnstsw
or
sub
subb
pop
fs
jno
and
adc
ficomps
aas
jmp
shl
cmp
cmpsl
gs
test
mov
pop
dec
shlb
push
test
inc
hlt
ds
loop
add
mov
and
mov
sub
sbb
in
jae
jle
mov
inc
js
push
sub
es
cmpb
sbb
adc
cmp
inc
push
je
faddl
mov
jns
or
sub
sbb
push
pop
je
jmp
jne
and
bnd
add
push
adc
dec
inc
push
add
push
jae
pop
and
imul
xchg
pop
xchg
mov
or
cmp
fidivrl
jns
in
add
sbb
nop
dec
incb
loop
pop
xor
jne
clc
call
and
adc
insl
or
sbb
sub
cmp
lock
xchg
fisttpll
mov
cmp
ret
fistl
stc
pop
or
ds
inc
jl
adc
inc
cmp
mov
clc
sub
dec
testl
cmp
daa
cmp
pop
out
or
inc
sub
lret
or
add
dec
dec
and
dec
jbe
add
and
icebp
add
or
or
sub
ret
jmp
cmp
add
dec
pop
fisttpll
add
hlt
sti
imul
xchg
or
xlat
jecxz
add
lret
adc
xorb
int3
insl
cltd
add
cwtl
jge
add
cmp
inc
in
inc
ret
cwtl
aam
sub
cmpsb
sbb
inc
es
ret
mov
imul
mov
add
jmp
hlt
paddb
sahf
mov
add
repz
mov
push
add
fadds
mov
enter
xchg
cli
adc
nop
and
pop
jne
push
sbb
jge
add
sub
xor
add
nop
insb
popa
imul
push
cmpl
cmp
push
xor
hlt
inc
data16
fildl
lret
inc
call
jo
addr16
add
push
dec
in
je
add
push
and
jnp
roll
loope
cmp
test
add
adc
mov
pop
jbe
adc
sub
aaa
xlat
mov
jecxz
leave
rolb
push
mov
imul
loop
cmp
xchg
subb
or
xchg
add
push
out
ffreep
dec
sub
jne
cli
inc
cld
cmp
cmp
stos
add
pusha
adc
add
adc
clc
or
ss
or
addr16
xor
fs
jge
add
sub
fstps
in
add
cwtl
mov
aas
data16
add
or
add
call
mov
adc
jecxz
out
mov
pop
pushf
popf
push
add
mov
dec
add
lcall
shrl
call
push
cmp
test
jl
add
mov
cwtl
popf
add
insl
mov
add
jo
push
jb
and
pushf
sbb
push
mov
mov
idiv
mov
cmp
mov
sub
or
inc
sbb
adc
and
sub
push
pop
xor
ljmp
lea
test
cmpl
add
dec
mov
lret
sbb
xchg
pop
push
orl
push
lea
addb
mov
dec
xor
les
xchg
lods
sub
lds
pop
pop
leave
add
cld
lock
add
shrb
sub
lret
mov
mov
jge
enter
rorb
mov
push
add
stos
test
push
mov
pop
and
add
inc
pusha
lahf
pop
cltd
sub
mov
add
xor
and
mov
mov
fisubrl
add
imul
test
pushf
and
les
xor
push
in
inc
sarb
xor
lds
mov
add
rolb
mov
push
xchg
jns
pop
cmpsl
scas
dec
jo
pop
xchg
fisubrs
lock
add
dec
into
and
ds
sbb
jmp
pop
stc
enter
shr
mov
sub
movsb
cmp
and
sub
lds
or
loopne
xchg
enter
add
xlat
paddsb
hlt
shl
add
mov
or
ret
inc
push
rcl
add
clc
add
cmp
ja
add
idivb
sbb
lock
mov
call
sub
push
lahf
jle
hlt
adc
imul
jnp
inc
or
aas
stos
mov
imul
repnz
or
mov
xchg
adc
or
movsl
push
push
gs
test
add
inc
add
jl
mov
loop
enter
outsb
and
data16
jb
xchg
add
clc
bound
sbb
repnz
dec
xor
jge
jmp
inc
mov
mov
dec
cli
faddl
and
scas
adc
sar
enter
mov
cld
adc
mov
inc
sti
mov
add
mov
mov
jnp
hlt
les
add
dec
test
ss
nop
movsb
repnz
adc
and
inc
pushf
add
in
call
pop
xor
push
lock
insb
push
or
sub
mov
inc
mov
inc
pop
pop
pop
pop
sub
lcall
and
pop
add
fs
adc
bound
push
cmp
sub
push
pop
loop
test
jne
sub
daa
add
push
mov
push
call
add
or
add
aas
mov
lock
push
mov
dec
jns
mov
cld
add
jae
add
movzbl
add
push
add
xchg
scas
add
xchg
aam
mov
call
push
dec
insl
xor
shrb
or
add
inc
inc
cmp
cmp
subb
aas
ds
add
sub
aam
jmp
cmp
cs
add
js
call
push
xchg
lock
cmp
dec
das
mov
out
js
jno
add
or
repnz
dec
mov
add
xchg
inc
ss
adc
mov
jnp
or
adc
add
add
jg
mov
and
inc
in
add
xor
mov
pop
mov
outsl
mov
add
or
inc
add
xor
mov
aas
and
gs
sbb
jno
jg
imul
or
int3
and
pop
xchg
rolb
add
add
aaa
push
mov
sbb
and
add
adc
xchg
mov
test
aaa
nop
add
mov
repz
test
or
js
add
and
or
addb
or
xchg
enter
int3
xchg
inc
shlb
mov
add
cs
aam
filds
mov
xchg
xchg
clc
dec
push
stos
add
cmp
add
call
lock
or
xchg
or
xchg
les
inc
sub
movsb
mov
add
sub
xor
push
add
push
in
push
jmp
jle
ja
dec
mov
cmp
push
jbe
jo
in
cmp
add
pop
rorb
cltd
adc
cmp
push
sub
mov
ds
and
hlt
push
adc
mov
jns
dec
test
push
in
fimull
xchg
movsb
mov
dec
or
aaa
or
cmp
pushw
inc
imul
add
jl
clc
in
movsl
mov
pusha
cmp
lahf
inc
ret
xor
xchg
adc
inc
mov
js
loopne
add
pop
jle
mov
nop
xchg
mov
rclb
push
cs
cmp
test
neg
add
xchg
push
pop
and
add
fsts
mov
add
push
inc
mov
sub
sub
sbb
jns
sarb
add
cmp
mov
subb
xor
xor
inc
jo
insb
imul
outsl
fs
sub
push
cwtl
or
rolb
dec
jge
add
jmp
inc
sbb
adc
shlb
pusha
inc
sub
mov
push
dec
cmp
sub
mov
xchg
push
jge
xchg
stos
arpl
dec
loopne
xor
jge
in
arpl
inc
sub
pop
mov
data16
lret
popa
add
dec
and
frstor
cmp
ss
loopne
enter
out
dec
add
nop
incb
pop
gs
push
mov
dec
inc
cmpsl
pop
jns
ret
dec
adc
mov
add
mov
sub
je
or
ss
and
jb
addr16
cmp
xchg
insl
sub
gs
adc
and
cmp
add
gs
push
add
addr16
jnp
adc
add
clc
test
dec
test
mov
cmp
sub
and
add
mov
adc
enter
and
adc
and
and
inc
movsl
inc
cmpb
dec
pop
testb
inc
lret
subb
push
push
fs
and
ja
jae
jo
es
sbb
jl
sub
stc
adc
pop
imul
jg
sub
jnp
sbb
push
xchg
adc
mov
loope
cmc
lock
dec
sub
nop
jle
les
and
xchg
ljmp
lea
add
enter
fcomps
stos
cwtl
icebp
jne
add
daa
push
xchg
push
es
add
enter
ret
std
hlt
sub
add
push
sbb
sbb
les
lahf
or
call
mov
iret
cli
add
je
or
inc
cmpsb
cmpl
dec
jne
add
stc
mov
jg
jmp
andl
adc
das
dec
rolb
test
pop
adc
add
push
inc
cmpb
nopl
pop
xor
std
filds
dec
ss
mov
cmp
sub
add
mov
push
adc
xchg
adc
outsb
push
pop
mov
sar
add
add
push
pop
das
mov
outsl
stos
adc
add
outsl
cmpsb
or
leave
pop
add
faddl
flds
xor
mov
push
mov
lret
and
mov
inc
mov
inc
mov
shlb
dec
out
test
enter
into
movsb
xor
adc
mov
inc
mov
adc
add
aas
cmp
cmpb
pop
or
test
or
lock
es
scas
inc
adc
mov
call
sbb
add
jmp
stc
out
push
adc
cli
shrb
cmpsl
push
xchg
add
mov
inc
cwtl
xchg
out
add
std
mov
add
mov
inc
xor
ret
mov
mov
stos
insb
lds
mov
xor
shr
inc
and
inc
add
popa
outsb
daa
je
insb
outsl
frstor
or
movsl
sbbb
ret
add
das
push
or
sahf
test
add
adc
mov
push
lea
incl
adc
orl
cli
or
jg
js
add
loope
push
call
xor
in
inc
sbb
adc
adc
idivb
dec
xchg
add
add
cwtl
lods
add
and
push
mov
inc
aaa
inc
xchg
daa
and
inc
adc
dec
dec
mov
aad
lret
pop
out
cld
add
add
and
push
jae
xor
inc
nop
jl
xchg
sbb
subl
in
jbe
adc
xchg
shlb
inc
and
inc
pop
enter
das
dec
cld
xchg
add
jne
jmp
add
or
cmp
adc
push
push
inc
adc
pop
rorb
jb
mov
lds
pop
cli
imul
jno
jmp
pop
push
fwait
or
into
cli
pop
cld
push
add
and
and
jecxz
pmulhuw
cmp
imul
out
sbb
pop
add
sbb
dec
cld
inc
enter
das
pop
mov
test
jmp
mov
pop
inc
das
incl
xor
aas
add
inc
xchg
xchg
aad
dec
mov
or
ja
cltd
add
loop
incl
inc
mov
inc
push
add
cld
cli
enter
mov
inc
lahf
hlt
jnp
cli
adc
dec
mov
inc
subl
popa
dec
lea
aas
xchg
popl
out
ret
mov
notb
xchg
or
inc
insb
add
movb
aad
add
jae
loopne
les
push
ret
xchg
adc
add
pushf
xor
cmp
or
lea
icebp
add
and
xor
push
fbstp
in
fldl
sub
adc
mov
pop
and
lret
lods
popf
stc
stos
str
cld
cmpsl
shl
loope
push
jp
cmc
mov
xchg
pop
mov
jmp
pop
fsubrl
pusha
ja
stos
add
push
push
aam
ds
inc
mov
rclb
aas
sti
push
jmp
and
mov
add
lds
movb
lods
and
push
pop
adc
xlat
out
and
stos
lret
sti
push
int3
and
out
and
daa
aas
xor
iret
orb
jae
inc
test
sub
mov
femms
outsl
pop
aam
mov
add
ljmp
add
jne
cli
xchg
cmpl
mov
in
test
add
cmpsb
into
sub
inc
movsl
punpckhwd
mov
fsub
push
test
and
inc
repnz
cwtl
add
lock
ds
push
cmc
jnp
and
rcr
lahf
int3
pop
stos
add
jl
cmp
enter
cmpsl
mov
add
pop
or
add
push
gs
loop
sub
fisttpl
mov
xchg
in
add
add
out
mov
mov
cmc
sbb
bswap
dec
ljmp
in
push
mov
push
stos
icebp
loopne
and
es
inc
xor
sbb
add
add
pop
mov
and
pop
and
cltd
add
mov
daa
pusha
push
add
fisttpl
mov
jae
adc
out
sub
mov
ss
dec
add
in
test
cmp
sbb
movsl
jge
xchg
inc
push
loope
add
ds
popf
call
into
cltd
xor
pop
add
scas
inc
inc
test
out
mov
movsl
inc
ret
insl
push
sbb
jmp
jne
mov
push
sub
dec
mov
repz
dec
or
testb
out
xor
and
imul
mov
xor
sbb
adc
cmp
pop
jmp
lahf
cmpsl
pop
mov
sahf
inc
icebp
pop
mov
nop
xchg
pop
push
jb
cmpsb
push
and
pop
inc
xorl
sub
sub
in
ret
add
repnz
push
sbbb
dec
xchg
add
cmp
mov
mov
data16
in
pop
adc
aad
cli
push
test
cmp
add
mov
mov
adc
inc
add
mov
loopne
mov
into
adc
mov
lods
sub
adc
add
bound
filds
pop
adc
mov
in
in
loopne
pushf
push
xor
leave
push
adc
sub
int
insl
test
lahf
push
add
and
pop
xchg
movsb
jbe
cs
or
mov
push
add
add
jb
movsb
pop
jbe
test
push
lret
pop
test
inc
ret
add
das
inc
les
lock
pop
inc
mov
pop
loopne
ret
add
mov
shlb
pop
shl
mov
sub
add
lea
pop
mov
xchg
enter
xor
mov
jnp
addb
add
add
fsubr
mov
ja
mov
inc
pop
and
rcrb
into
stos
dec
fstl
test
popa
push
push
add
mov
addb
mov
imul
movsl
add
sub
or
je
push
jbe
mov
add
bound
inc
and
mov
xchg
add
test
loopne
adc
add
rolb
rcrb
mov
add
or
stos
jbe
push
orl
and
test
sbb
or
mov
ficoml
sbb
clc
ljmp
or
add
dec
test
hlt
ja
sti
add
dec
ret
adc
sbb
sub
mov
push
rcrb
movsb
push
add
jnp
mov
cmpsl
cmpl
dec
or
cld
test
push
push
sti
insb
adc
push
add
ja
jne
cmp
rclb
rol
jbe
add
add
sub
pop
ret
cmc
xchg
cmc
icebp
iret
les
mov
mov
out
or
loopne
cwtl
xor
in
pop
or
ret
loopne
add
sbb
add
mov
aad
add
clc
lock
pop
lock
cmp
push
fcoml
jge
pop
add
add
dec
add
ret
adc
call
add
mov
xor
jmp
sub
push
dec
in
add
rcrl
cmp
adc
clc
add
sub
pusha
add
out
push
push
mov
adc
cmpsb
ljmp
jne
add
xor
xor
pop
xor
jne
fisttps
add
shll
jns
push
push
add
cmp
nop
push
xchg
repnz
add
dec
adc
add
adc
mov
repnz
pop
cmp
icebp
outsb
ret
or
jb
jo
fidivrs
lret
xor
or
fistl
jecxz
add
int3
repnz
sbb
fdivs
adc
jno
fldt
dec
xchg
add
testl
pop
cwtl
dec
pop
push
mov
nop
add
sbb
movb
lds
mov
jmp
pop
int
lods
xchg
js
mov
push
sub
add
jo
hlt
add
bound
add
inc
xchg
mov
dec
in
add
sbb
cmp
ja
dec
and
lret
add
roll
sub
xchg
je
dec
fwait
es
sbb
ret
jb
push
pop
dec
jp
add
push
and
clc
fs
out
add
or
push
add
lret
faddp
lods
dec
clc
add
das
mov
adc
ret
loopne
add
add
cwtl
data16
inc
add
or
sbb
dec
and
dec
inc
les
cmpsl
add
mov
addl
push
rcl
mov
imul
add
jmp
xchg
sub
fiaddl
cltd
sbb
and
pop
sub
pop
lock
mov
pop
jp
push
sbb
je
xor
add
inc
in
mov
jbe
nop
movsl
add
mov
lods
pop
test
and
mov
jle
add
mov
icebp
je
add
lcall
dec
mov
scas
and
pop
aaa
xchg
call
mov
mov
cmp
add
inc
jo
shll
out
aas
add
data16
jl,pt
subb
addr16
test
daa
dec
out
pop
mov
pop
and
dec
pop
shrb
or
sarl
cmpsl
stc
push
cli
inc
jle
add
jae
inc
lods
insl
mov
popa
pushf
adc
dec
fs
test
decl
sarb
add
ljmp
pop
sbb
add
enter
loopne
pusha
pop
subb
clc
stos
add
push
adc
push
repnz
adc
push
bswap
adc
mov
mov
jb
je
or
addb
or
add
xchg
pop
adcl
mov
out
testl
in
inc
cmp
add
xlat
dec
cmp
icebp
jbe
add
add
dec
arpl
xchg
xor
mov
test
pop
ss
sub
jge
push
test
and
add
or
mov
gs
mov
xor
into
add
rolb
jg
cld
add
insb
add
mov
mov
int3
mov
or
out
movsb
push
add
je
or
cmp
pop
mov
xchg
adc
adc
adc
test
jbe
rcr
dec
ja
out
call
rcrb
sbb
mov
mov
push
add
and
xchg
add
xchg
xchg
jno
dec
push
sbb
jmp
int3
sbb
cmp
adc
cltd
insb
and
sbb
add
sbb
sub
neg
sbb
add
cmp
add
icebp
xor
xor
das
int3
aad
adc
lock
stos
lea
add
or
ljmp
xchg
jl
add
daa
inc
push
ds
subb
add
call
rclb
xor
lea
sub
push
dec
push
fnstsw
add
movsb
jle
push
jmp
pop
sbb
out
shlb
mov
or
inc
pop
ja
cmp
mov
into
add
lret
cmpsb
add
test
call
pop
enter
add
or
push
xchg
mov
rolb
or
add
xor
cmp
adc
clc
cmp
sbb
call
cli
and
data16
jne
push
xlat
dec
lret
inc
pusha
and
cmp
add
jo
dec
inc
pop
push
pop
push
mov
mov
push
add
rorb
sub
lcall
adc
mov
mov
js
fsubrl
xchg
jmp
adc
lret
push
pop
cwtl
clc
adc
add
xchg
daa
or
add
fwait
pusha
mov
fcompl
push
inc
add
pop
int
pop
push
xorb
fadds
not
sub
add
xlat
test
stos
dec
jo
jle
dec
dec
data16
xchg
in
inc
mov
pop
mov
movsl
cmpsl
loopne
add
stos
add
sti
btc
dec
dec
fdivl
mov
pop
int3
sbb
and
jmp
and
add
outsl
xor
push
call
pushl
pusha
rcrb
rcr
lea
mov
mov
add
mov
incl
imul
shlb
sbb
out
repz
popf
mov
lods
pop
orl
jo
add
xor
inc
pop
das
cmpb
bnd
jo
or
pop
pop
dec
push
cmp
or
add
jge
jp
push
mov
sbb
mov
jg
or
sahf
lock
xchg
add
push
int
xor
and
cli
cmp
addb
in
and
sahf
sbb
stos
sbb
or
dec
je
or
jae
cmp
cmp
sbb
pop
push
adc
dec
xchg
adc
cmpsb
add
subl
sar
bound
jo
lock
hlt
mov
add
mov
test
outsl
add
call
push
addb
pop
repz
jmp
mov
and
fisttpl
and
add
push
cmp
pop
and
pop
sbb
testl
rcrb
sub
mov
rorb
mov
mov
imul
jne
loope
add
pop
mov
pop
mov
xchg
add
jno
mov
push
pop
add
aad
movsb
cli
test
cmp
std
sbb
mov
dec
or
addr16
subb
and
dec
inc
adc
imul
sbb
or
jl
push
inc
sbb
leave
xchg
inc
cwtl
jns
pop
cltd
ret
pop
sbbb
imul
inc
inc
outsl
dec
jne
loopne
add
mov
mov
sbbb
sbb
push
in
add
mov
jmp
push
add
mov
enter
add
sub
lret
or
jge
dec
ret
add
add
rolb
mov
int3
add
lock
fdivl
aam
push
jne
out
sbb
fmuls
xchg
mov
in
rcr
jne
movb
stc
leave
les
mov
jmp
mov
adc
jo
cmp
test
mov
into
addl
mov
call
pop
int3
jmp
addl
or
pop
mov
adc
data16
or
fdivrs
add
cli
je
clc
pop
popa
aas
push
add
ficoml
mov
ret
pop
outsb
mov
mov
mov
add
cwtl
inc
jmp
cmp
je
pop
into
or
test
rorb
inc
add
mov
movsl
mov
cld
push
add
xor
inc
add
test
mov
push
add
add
xor
dec
inc
adc
jbe
addr16
add
mov
jge
nop
jle
add
mov
cmc
sbb
bound
add
pop
bnd
push
call
ljmp
add
lahf
lds
jg
adc
loop
notb
add
xchg
pop
push
pop
cmp
add
mov
cld
and
lret
adc
call
push
gs
stc
dec
popl
cmp
and
add
inc
bound
inc
rsqrtps
mov
popf
shlb
movsb
adc
jnp
add
movl
nop
add
add
push
jmp
andb
dec
or
inc
fwait
dec
lcall
nop
mov
or
adc
mov
fidivl
push
push
loope
cmp
in
cmp
xor
or
jb
out
sub
loopne
cmpb
dec
add
push
mov
and
push
add
ljmp
add
jecxz
mov
jo
cmp
movsl
pop
and
jno
test
xor
xchg
mov
in
movsl
pop
push
mov
bound
pop
rol
iret
pop
les
jno
sub
xchg
adc
xchg
cmp
loop
aam
negl
rorb
xorps
and
or
in
jmp
inc
jge
movsl
and
add
test
mov
adc
pop
cli
int3
adc
movsl
stos
and
lods
add
push
sbb
add
fiadds
jo
sar
push
aam
add
mov
and
lods
cld
jae
lret
loopne
xor
and
sarl
mov
leave
stos
xor
je
js
sbb
lock
pop
or
add
icebp
add
mov
push
std
push
xchg
ret
mov
pop
enter
push
sub
sbb
daa
push
sub
mov
and
xchg
cs
pop
lock
cmp
inc
sub
xorl
inc
push
call
imul
hlt
orb
add
stos
sub
cli
ffreep
mov
and
push
ja
adc
add
pop
pop
push
mov
add
push
je
push
in
cmp
jne
mov
mov
ds
aas
rcrl
jno
dec
inc
add
mov
push
mov
add
sbb
add
push
mov
add
mov
lods
and
push
mov
movsb
sahf
in
add
movsl
add
add
inc
sbb
add
inc
sbb
inc
cmp
add
je
add
add
aas
rorb
es
dec
push
dec
in
popf
adcb
in
sti
xrelease
adc
sbb
sub
mov
jb
add
stos
or
push
cld
xchg
add
push
lcall
add
ljmp
jle
out
add
jmp
ds
cmp
add
enter
dec
lock
add
sub
cmc
push
cs
add
lock
mov
ret
sbb
imul
jl
scas
push
int3
in
int
add
mov
hlt
mov
pop
fnsave
mov
pop
push
add
and
ljmp
cmp
sub
lret
fbld
mov
stos
pop
or
sub
dec
addr16
jnp
jne
add
shlb
cs
sub
je
in
std
in
scas
jbe
add
in
or
arpl
dec
neg
pop
cld
lds
in
dec
aas
push
cmc
xchg
dec
cli
add
xchg
mov
jge
dec
adc
mov
dec
mov
roll
cwtl
inc
sub
pop
lods
test
leave
push
sub
wrmsr
cmc
add
inc
mov
or
sarb
cli
add
addb
sub
lcall
mov
pop
inc
dec
hlt
add
bound
inc
iret
push
int3
test
out
sub
xchg
mov
fcompl
add
je
jecxz
pushf
ds
add
sub
cmc
or
adc
push
mov
add
cmp
mov
xor
xchg
rolb
ja
sbb
lock
jg
add
pop
lea
mov
mov
or
mov
mov
sbb
and
mov
mov
pop
hlt
sbb
xchg
add
enter
lods
lea
add
es
add
sbb
mov
mov
pushf
imul
add
adc
inc
mov
add
cs
sahf
test
pop
push
add
adc
out
push
push
fsubrl
icebp
in
add
dec
mov
jp
push
lea
mov
and
add
mov
inc
sub
cmp
popf
push
add
ret
int3
mov
pavgb
mov
inc
mov
sbb
mov
adc
mov
add
out
sti
push
pop
sar
or
popf
nop
adcl
ljmp
clc
rorb
mov
add
flds
add
ret
or
sbb
sahf
fst
mov
add
fsubrs
cmc
enter
push
lahf
mov
clc
inc
push
add
mov
add
xlat
js
add
hlt
or
add
add
inc
test
xor
mov
outsl
push
inc
cmp
inc
cld
ficomps
mov
bound
add
xor
mov
or
or
jg
inc
rdtsc
and
push
sub
testb
psubusb
rorl
hlt
cmp
mov
ds
ja
ret
subl
push
mov
and
mov
cmp
pop
dec
pop
add
add
stc
mov
popa
add
inc
popl
sub
dec
sub
insb
jo
cli
testl
add
dec
addb
sbb
fwait
lock
add
dec
add
cmpsl
testl
sub
call
mov
stos
and
xchg
mov
lock
sub
notl
rolb
sub
add
enter
js
xchg
add
push
fs
lcall
movsb
mov
cmpsb
pop
mov
sub
jmp
lea
mov
pop
add
jae
cmpb
sub
push
jecxz
xadd
and
sbb
loopne
xchg
jne
or
add
sub
cmpsb
add
lcall
add
daa
sbb
hlt
jae
out
lahf
pop
shrb
add
call
loop
add
sbb
int3
add
bound
jae
icebp
jo
inc
sbbb
cmp
and
test
mov
inc
and
add
pop
dec
xorb
cmp
js
jbe
sbb
jne
add
cmpw
or
and
addl
or
add
and
push
sub
push
ds
imul
pop
add
pop
and
xchg
mov
rorb
orb
icebp
nop
cmp
shrb
or
mov
mov
inc
add
arpl
into
call
es
stos
inc
je
pop
cmp
push
jg
sbb
mov
push
icebp
fdivrl
add
pop
jae
lea
je
roll
jmp
jb
in
add
adc
dec
or
mov
les
cmp
js
add
and
movsb
out
push
js
or
mov
sti
leave
jbe
jp
lret
lock
inc
mov
add
inc
xor
add
sbb
add
rolb
and
xchg
test
push
add
lret
shll
xor
add
iret
push
push
or
mov
add
out
mov
mov
ja
pushf
push
inc
mov
add
rorl
jle
xor
cs
rolb
jne
push
mov
add
add
xchg
int3
mov
es
push
scas
les
test
mov
cld
enter
add
dec
inc
js
sub
rclb
in
dec
add
shl
aas
orl
mov
fs
out
xor
es
jne
xor
mov
fcomp
add
mov
add
jmp
das
mov
add
jne
mov
pop
and
add
addb
xchg
fsts
add
out
dec
xorl
adc
stc
fadds
dec
pop
push
push
sarb
test
or
cld
lds
mov
fxch
sub
hlt
jp
jae
nop
mov
mov
stc
fidivs
addb
adc
push
mov
sbb
push
into
add
lcall
add
in
cmc
xor
or
add
xor
sub
or
sbbl
sub
mov
pop
test
loopne
scas
shl
push
add
inc
or
aam
leave
add
adc
test
sub
insl
xchg
clc
push
inc
adc
add
movb
lea
ds
lods
mov
xchg
push
push
frndint
sub
fisubrl
mov
mov
xchg
ljmp
mov
scas
fisubrl
das
loopne
add
cs
call
arpl
loopne
faddl
or
cli
push
jle
cmc
xchg
sti
lahf
add
es
call
mov
sti
ljmp
vcvtsi2sdl
add
xchg
xchg
add
cmc
xchg
inc
sbb
pop
or
das
mov
and
or
dec
mov
add
xchg
push
mov
add
sub
pop
lret
repz
nop
inc
outsl
and
das
mov
inc
out
ja
sub
in
add
or
add
inc
in
sbb
jo
jl
pop
scas
and
or
test
push
and
pop
pop
add
int
mov
imul
adc
fdivp
xchg
adc
subb
add
lods
and
fcmove
sbb
xchg
nop
pop
movsl
into
add
ds
jne
sbb
push
mov
dec
rclb
pop
mov
pop
lea
mov
js
stos
adc
jge
cmp
stc
lret
mov
push
rcrb
ss
sub
add
cmp
mov
pop
popf
loop
push
addr16
rcl
stc
in
stos
add
cmp
lds
lret
lock
adc
and
dec
add
lahf
fnstcw
aas
out
into
inc
adc
jmp
and
dec
les
add
pop
adcl
sub
add
adc
jmp
push
loopne
cmpsl
add
add
mov
sub
or
push
sbb
pop
mov
and
xlat
addb
cmp
jne
adc
add
je,pn
movsl
fadds
cmp
add
mov
push
xor
ret
add
inc
nop
push
push
add
sbb
adc
or
lds
sub
arpl
push
fldcw
push
sbb
rcrb
xor
aad
in
mul
nop
add
mov
shll
inc
mov
inc
sbb
mov
sbb
in
repnz
mov
jbe
cmp
pop
lcall
hlt
adc
mov
rolb
gs
popf
fisubl
adc
ljmp
lcall
cmp
fsub
push
mov
movsl
add
test
add
sub
fbld
imul
cmpsb
mov
jno
lret
dec
lea
pop
xchg
add
mov
push
aam
mov
call
mov
clc
loopne
pop
inc
mov
mov
sub
repnz
in
testb
leave
test
add
clc
push
loop
test
add
into
or
add
push
ror
cld
pop
push
pop
adc
mov
dec
add
adc
out
mov
add
jne
push
xchg
dec
add
pop
mov
xlat
xchg
rcll
and
dec
sbb
xor
je
gs
leave
clc
out
xor
dec
loopne
sbb
push
push
mov
inc
lahf
loopne
fidivrl
dec
push
mov
cmpsl
push
add
test
jmp
xchg
sub
int3
test
add
xor
sbb
data16
xchg
sbb
rorb
pop
sbb
inc
mov
cwtl
aaa
inc
jns
dec
mov
mov
popf
lock
lea
shrl
fcmovnbe
mov
cmp
push
jae
pop
dec
add
jl
mov
add
xor
or
add
inc
gs
mov
outsl
dec
jae
and
ja
add
inc
js,pt
fldt
jae
xchg
mov
adc
or
pop
add
clc
cmp
stos
xor
aas
mov
dec
cmpsl
jns
push
cs
pop
jo
pop
mov
ror
jge
loop
js
mov
cmp
test
cmp
adc
jle
add
pop
inc
shl
aas
dec
add
je
and
jge
adc
mov
cmp
divb
cmp
lret
add
adcw
addr16
add
call
sbb
pop
xchg
cmp
les
cmpsb
pop
imul
out
push
add
cmpb
dec
dec
add
cmp
add
push
push
clc
ffreep
jae
mov
xchg
loop
add
and
push
inc
push
dec
add
push
xchg
sub
mov
add
xchg
cmpsl
test
jl
dec
push
test
jmp
lea
call
dec
add
repz
sbb
fsubs
sbb
cmp
add
ret
xchg
inc
push
fidivrl
addb
fisubrs
pop
in
jo
scas
pop
add
movsb
mov
sub
push
dec
in
dec
sub
sbbb
add
push
add
sbb
pop
push
lock
inc
clc
adc
loope
add
sbb
mov
xor
add
jp
das
add
pop
jl
pop
popa
and
cmp
daa
in
inc
stos
add
pop
add
sub
lock
push
scas
add
outsl
hlt
imul
fcoms
fucomp
jmp
daa
sub
jp
sbb
jne
cmp
pusha
ds
jo
xchg
add
and
push
hlt
add
dec
sub
loop
arpl
mov
call
add
pop
aas
sbb
add
testb
adc
pop
pop
dec
popa
out
xchg
add
fistpl
cmpsb
lock
xchg
add
xor
lods
mov
jb
jg
inc
les
sub
scas
push
pushf
test
xor
loopne
outsl
push
jp
add
add
lods
std
inc
call
mov
add
or
and
and
repnz
add
push
arpl
and
bound
xor
jne
rcrl
xlat
add
out
popa
cmp
icebp
cld
arpl
pop
cmp
add
leave
and
mov
dec
dec
sbb
push
out
rcrb
fs
lea
popf
addb
adc
xchg
jg
fidivrl
js
add
lock
popf
movsb
add
mov
cli
add
add
sub
adc
nop
mov
filds
mov
sub
jbe
push
mov
lods
insl
cmc
jg
mov
pop
lcallw
cli
xchg
rolb
xchg
cld
stos
push
xchg
mov
sbb
cmp
jmp
ds
cmpsb
adc
pop
mov
add
orb
add
fs
mov
or
sub
xchg
push
xor
mov
test
aaa
adc
inc
cmp
sbb
mov
and
sbb
lea
sbb
jle
movsl
cwtl
jno
add
enter
fldenv
loopne
test
cmp
lcall
adc
inc
rep
mov
cmp
mov
aad
jle
fdivrs
scas
inc
aas
pop
movl
cmp
out
sbb
push
lods
or
xlat
rol
sbb
or
leave
stos
in
sbb
and
xor
sbbl
test
je
pop
add
sub
pop
adc
leave
xchg
push
add
adc
inc
add
imul
xchg
xlat
arpl
in
add
in
or
jmp
add
push
adc
dec
pop
push
jmp
jge
pop
lods
inc
clc
add
mov
pop
and
mov
rol
add
iret
xorl
or
push
or
mov
pop
insb
mov
add
inc
xor
adc
push
cwtl
add
cmp
jne
movsb
bound
add
xor
add
iret
jmp
cmp
pop
in
and
push
sbb
xchg
add
xchg
insb
int3
xor
sub
dec
pop
aas
mov
ret
lret
loope
or
and
les
xchg
call
or
aas
sub
and
mov
loope
xchg
loopne
add
scas
add
pop
mov
sti
and
pop
dec
rolb
inc
xchg
stc
jmp
ss
mov
mov
test
add
call
mov
xchg
xchg
stos
popf
rclb
sbb
in
outsl
cmpb
sar
mov
insb
mov
push
inc
and
insl
in
and
inc
int3
test
jb
out
add
adc
mov
mov
dec
in
mov
aaa
out
sbb
xchg
and
mov
mov
cltd
test
es
add
jno
aad
mov
add
out
call
enter
out
and
add
xlat
in
dec
pop
fadds
mov
rcr
call
das
loopne
std
jne
add
mov
movb
cmpsb
out
inc
loopne
imul
std
xchg
mov
hlt
loop
add
pushf
loopne
sti
in
push
dec
lods
pop
adc
rolb
mov
pop
addb
dec
aaa
lods
push
out
aam
or
enter
and
test
jmp
sbb
adc
lods
add
fldcw
fiadds
clc
insb
mov
add
idiv
test
cmp
add
fisubs
les
push
std
ror
mov
add
scas
cwtl
pop
mov
sub
add
dec
push
add
add
or
pop
or
jle
mov
xchg
leave
addr16
push
out
test
ret
daa
dec
mov
mov
cmp
inc
pop
mov
pop
lea
push
xor
sub
cld
jo
add
mov
xchg
pusha
pop
push
loopne
add
rolb
cs
add
adc
scas
inc
lret
pop
lahf
push
pop
bound
popf
and
cmpsb
or
sbb
mov
xchg
jae
in
andb
test
aam
dec
add
sub
int3
pusha
and
cmpsb
daa
cli
add
movb
mov
insl
and
inc
push
add
iret
sub
add
inc
add
je
add
daa
mov
in
out
add
or
add
sbb
sbb
adc
imul
jmp
and
sbb
stos
or
sbb
rol
sbb
add
inc
sbb
push
adcb
add
xor
adc
sub
push
add
adc
fsubrl
or
cld
clc
inc
cmpb
call
aad
dec
jne
fnstcw
sub
repnz
add
call
xor
fcoml
leave
test
xor
into
push
jge
sti
mov
dec
cmp
add
xlat
mov
inc
jle
xchg
add
out
inc
mov
rol
xchg
xchg
adc
sahf
add
test
orl
scas
lock
fists
roll
add
leave
clc
push
adc
roll
xor
mull
mov
add
aaa
push
lock
std
cld
aad
int
aam
test
xlat
clc
mov
fdivrp
icebp
rol
jnp
dec
jb
xor
andl
clc
mov
incb
push
dec
insb
add
loope
inc
add
sti
sub
imul
inc
mov
add
adc
les
xor
sbb
inc
push
cmp
mov
das
sbb
push
divb
lret
or
jmp
hlt
fiaddl
ret
and
outsb
add
lods
dec
or
out
pushf
shlb
fsubr
out
popa
mov
and
add
pop
push
push
dec
imul
and
pusha
add
out
and
loop
cli
sbb
lcall
sbbb
push
jae
movsb
jnp
add
cmp
or
pushf
cwtl
sbb
push
lea
call
cmp
mov
pusha
movzbl
add
or
cmp
add
fnstenv
adc
or
dec
into
repz
adc
mov
add
jae
jo
ja
push
cmc
out
mov
daa
adc
mov
inc
inc
jecxz
cmp
mov
xchg
loop
mov
out
xor
xor
je
cmpl
insb
in
pop
enter
push
scas
add
orl
mov
enter
stc
add
jbe
hlt
push
xchg
add
je
jg
leave
fcoms
xchg
and
sbb
push
inc
scas
pop
inc
mov
dec
add
mov
adc
add
add
mov
fbld
jl
pop
nop
out
or
lods
les
leave
cs
adc
pushf
lods
sub
add
testl
lods
sbb
and
mov
and
ljmp
in
in
fmull
sahf
add
lods
clc
icebp
movsb
pop
push
and
adc
pushf
mov
mov
inc
mov
push
pop
xchg
push
or
push
push
jne,pn
mov
rcrb
enter
and
cltd
cld
fwait
add
add
and
sahf
add
or
test
cmp
test
jmp
je
inc
mov
or
inc
xchg
jo
sbb
int3
add
lock
add
inc
cwtl
sbb
or
mov
xor
pop
adc
fs
mov
nop
sbb
xor
call
xor
xor
xor
cmp
loope
ss
push
pusha
xor
mov
inc
pop
inc
pop
or
js
dec
mov
rcrb
add
add
add
ret
pop
fcomps
sbb
cwtl
in
push
test
test
and
inc
sub
jns
xchg
mov
add
adc
jg
ss
cmp
dec
adcl
mov
lds
push
cwtl
jnp
cmpsb
ret
aam
inc
xchg
dec
mov
jg
mov
adc
clc
std
add
aam
pusha
movsb
mov
arpl
test
push
cmpb
shl
mov
mov
mov
rol
or
xchg
push
adc
add
fs
dec
int3
add
and
add
popf
js
mov
push
inc
push
xor
or
add
jo
and
push
lahf
add
int3
adc
add
mov
push
lea
add
add
test
sbb
mov
cwtl
xchg
and
xor
dec
add
outsb
je
imul
outsl
pop
out
addl
loopne
xor
xchg
mov
xor
cmp
ljmp
xor
or
cli
setg
push
pushf
aam
jo
test
cld
mov
sbb
sbb
or
sbb
nop/reserved
std
shrb
add
adc
or
dec
push
pop
es
xchg
pusha
jecxz
addb
mov
lret
pop
mov
mov
shr
fsubr
loopne
call
jo
pop
or
adc
sbb
and
sub
xor
and
std
cld
jnp
push
jnp
jnp
add
jo
mov
adc
mov
add
add
inc
and
aam
call
xchg
or
and
arpl
xor
mov
and
adc
sbb
loop
xor
add
test
or
aad
pop
std
pop
pop
add
pop
pop
push
inc
in
add
inc
inc
dec
dec
rclb
bound
arpl
cmc
imul
add
jp
mov
and
xor
or
aas
mov
add
int3
lret
and
push
pop
xor
push
add
cltd
adc
pusha
loop
pop
and
dec
add
imul
psubsw
repnz
es
and
and
fsubl
clc
inc
mov
inc
cmp
pop
jo
dec
mov
or
scas
cld
xchg
pop
pop
inc
sub
mov
js
and
inc
lcall
jl
loopne
add
aas
das
cmp
imul
scas
add
adc
xchg
sbb
xchg
or
ss
mov
add
dec
or
cmc
push
add
add
daa
and
movsb
add
xchg
pushl
dec
or
rorb
pop
add
add
or
sbb
and
and
or
jmp
out
in
ljmp
sbb
xor
pusha
repnz
jo
rcl
add
cld
mov
adcl
fcomps
bswap
adc
or
sbb
jo
in
xor
les
stc
test
cld
jb
add
push
jg
test
xor
pushf
dec
test
loop
inc
fadds
in
mov
adc
js
add
adc
inc
dec
push
xchg
add
pusha
hlt
sub
push
cwtl
stc
ss
addb
mov
or
pop
or
or
push
xor
adc
pop
and
lods
mov
or
adc
dec
out
jnp
pop
clc
or
ss
xor
inc
fs
sub
add
les
fsubrl
jo
sbb
or
inc
mov
add
js
or
adc
aam
ss
mov
push
fcoml
xchg
xor
cmpsb
test
cmp
add
movsb
pop
jl
sbbl
mov
push
les
adc
xchg
xor
mov
or
cs
pop
inc
in
dec
add
popa
mov
mov
sub
aam
rolb
mov
cmp
shlb
xchg
push
int3
leave
repnz
add
enter
rorb
push
cmp
add
add
nop
rcll
xorb
xor
sub
jl
inc
xchg
test
cmp
fsubrs
ret
mov
movsb
mov
add
imul
or
pop
pop
test
rcrb
jl
xor
js
push
push
and
cmp
sbb
mov
mov
mov
loopne
lods
pop
sbb
pop
call
mov
lock
incl
test
dec
jo
xor
add
nop
mov
repz
lret
push
add
lock
cmp
inc
add
pushf
fcoms
cld
cmp
daa
adcb
xchg
sbb
nop
iret
add
dec
fadds
or
rolb
dec
in
xor
into
sub
pop
cmp
inc
push
xlat
adc
push
pushf
int3
ret
jno
hlt
cltd
mov
add
xor
adc
cwtl
xchg
add
leave
in
push
orb
jo
rcrb
rcr
pushf
jp
add
pop
sub
gs
push
shlb
testb
xor
pop
je
inc
add
cmc
add
fs
push
lahf
add
lods
adc
enter
repnz
cmovo
in
xchg
add
or
loope
call
and
ljmp
or
clc
jle
add
cwtl
and
in
int
cli
mov
jbe
repz
add
adc
add
push
in
sbb
dec
mov
and
xchg
mov
lcall
pop
faddl
cli
adc
cmp
cmp
push
std
mov
lret
pop
inc
sar
or
adc
sbb
es
sbb
or
outsb
adc
mov
lods
cmpsb
add
cmp
insb
clc
mov
add
push
sarb
adc
add
and
dec
aam
sub
or
sbb
addl
adc
xchg
xchg
mov
dec
shrb
jp
and
add
dec
push
xor
outsb
orb
sarb
mov
decb
inc
ljmp
and
dec
fs
jo
mov
mov
les
add
push
add
adc
imul
dec
scas
pop
or
in
xchg
dec
movsb
xchg
mov
scas
fdivp
mov
cmp
xor
xchg
push
mov
andl
cmpsb
enter
shl
addr16
and
in
fs
aaa
mov
ds
dec
push
mov
addl
inc
inc
cli
je
popf
sarb
cwtl
push
push
add
push
inc
mov
xor
jp
add
xchg
arpl
push
sti
add
lret
pop
jbe
pop
add
add
insl
daa
mov
xor
jmp
nop
add
xchg
outsl
packsswb
sbb
movsl
sbb
test
in
jo
push
add
push
or
mov
xor
or
jo,pn
sub
je
fidivrl
outsb
inc
push
add
arpl
mov
sbb
sbb
jb
or
inc
js
cmp
and
andb
in
out
movsl
mov
loop
outsl
dec
inc
xor
push
jb
fsubl
push
add
decb
popa
outsb
mov
movb
imul
push
aam
cmp
adcb
adc
hlt
insl
jecxz
xchg
lcall
pop
mov
cmp
mov
push
adc
add
jle
mov
aad
mov
andb
sbb
sub
cmpb
sbb
test
es
outsl
add
dec
data16
jecxz
addb
rcll
or
pop
sbb
push
cld
ljmp
fs
or
adc
jp
mov
insl
pop
push
imul
xchg
add
cmp
movsl
xor
adc
lret
int3
jns
nop
cmp
cmp
outsb
cmp
cmpsl
jmp
mov
dec
hlt
adc
dec
fildll
sbb
jle
cmp
add
pop
push
nop
xchg
rcll
dec
cmpsb
outsb
rcrb
mov
loope
add
dec
inc
insl
pshufw
mov
call
outsl
inc
sbb
out
jg
pop
and
sub
push
adc
xchg
adc
fcoms
and
out
test
push
inc
add
jbe
adc
cltd
stos
rolb
in
loope
add
aad
mov
dec
clc
adc
cli
and
inc
movsb
pusha
aam
clc
jne
cwtl
popl
ficoml
mov
jp
adc
ds
pushf
pop
or
sarb
aam
nop
ja
mov
cwtl
mov
pusha
jno
test
inc
shll
pop
add
cmc
xor
dec
jae
lret
push
pop
push
je
mov
add
repnz
repz
adc
add
or
add
push
dec
mov
push
gs
push
inc
add
sub
cmpsb
jb
xor
push
mov
add
xor
mov
scas
rcl
sahf
hlt
mov
mov
jbe
adc
jecxz
loop
inc
inc
fwait
test
xor
imul
arpl
inc
mov
lods
push
cmpsl
sbb
push
loopne
hlt
dec
sub
pop
inc
add
arpl
mov
rorb
sbb
inc
push
pop
out
jge
sbb
dec
mov
mov
dec
movsb
add
add
ds
repnz
bound
mov
pop
insb
mov
mov
add
and
dec
pop
lret
push
das
das
fs
shll
push
jecxz
push
jno
inc
xorb
mov
loop
add
push
lahf
or
cld
inc
adc
add
dec
movsb
cmpsb
pusha
ja
loopne
add
inc
cltd
mov
cs
cld
in
bound
imul
add
test
adc
and
inc
cmp
dec
sub
jo
aam
fwait
dec
pop
push
adc
mov
xchg
mov
lods
cmpsl
or
sub
movsl
or
cmp
pop
xor
add
fnstsw
dec
mov
inc
jne
push
inc
xor
pop
add
sbb
int
adc
lret
add
add
insb
pop
inc
add
push
sub
sub
adc
and
push
jns
or
add
lods
mov
push
mov
mov
jecxz
frstor
xor
jo
sbb
or
fimuls
pop
pop
or
mov
test
add
jo
movsl
add
add
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
incb
clc
push
xor
je
jbe
push
js
jp
jl
jle
mov
xor
popf
int
adc
inc
loopne
and
push
leave
ljmp
sbb
cmp
ret
push
aad
lahf
fistps
jmp
cmp
add
sbb
mov
scas
pop
and
setne
iret
mov
movsb
lahf
in
xor
pop
cmp
add
cmpsl
inc
push
push
fiaddl
movb
cmp
add
jg
lahf
fnstcw
jb
sbb
cmp
sbb
dec
lahf
sbb
push
jno
xchg
lahf
in
add
xchg
xchg
push
xchg
mov
adc
and
sub
jnp
xchg
icebp
scas
stc
mov
sti
addl
xchg
int3
or
pushf
xor
cmp
jge
pop
test
fwait
addr16
xchg
mov
out
out
ret
sbb
pop
push
xchg
decb
pop
dec
aas
jae
cmp
push
jle
sbb
add
xor
pop
sbb
push
mov
stc
xchg
add
or
sbb
addr16
jb
cmpsl
mov
xchg
cmp
cltd
cmp
mov
mov
leave
stos
shll
sbb
daa
jbe
js
dec
xorl
aas
mov
leave
add
push
xchg
aaa
mov
mov
sbb
add
mov
hlt
add
cmp
das
imul
cmp
mov
add
xchg
imul
roll
fsub
adc
cmp
test
orb
cmpsl
add
xor
xchg
rdtsc
push
enter
iret
je
mov
cmp
dec
jbe
js
jp
add
repnz
xor
add
pop
push
pop
adc
jae
orl
hlt
lahf
mov
mov
xor
inc
inc
addr16
mov
sbb
out
xchg
mov
cmp
cmp
lahf
jecxz
call
or
pop
add
mov
cmp
add
inc
push
push
add
xchg
push
inc
es
ds
adc
bnd
adcb
popf
loop
out
mov
leave
pop
or
pop
and
insl
cmp
mov
xlat
loope
jmp
add
cli
and
ficomps
xchg
add
cmp
cmp
roll
jb
je
in
pop
aas
lods
popf
les
xor
push
sbb
sbb
add
inc
xor
je
sbb
repz
test
xor
pusha
mov
inc
rcrl
packuswb
pause
leave
xchg
shlb
test
mov
mov
movsb
mov
mov
add
ss
xchg
push
mov
add
rorl
push
repz
leave
shrw
jbe
jle
imul
es
aaa
rcrb
dec
push
push
sarl
push
sar
cwtl
arpl
out
cwtl
icebp
cmp
adc
daa
call
lock
hlt
pop
clc
sbb
cld
push
jb
jp
sbbb
adcb
jb
pop
mov
mov
rorb
ljmp
cmp
add
adc
sbb
cmp
push
lahf
inc
and
push
cld
jno
jae
add
jb
aas
adcb
ret
mov
repz
sub
adc
dec
cli
dec
and
addr16
sub
int3
cld
inc
cmp
dec
pusha
jp
mov
cwtl
cli
jg
jb
jp
xlat
sbb
cmpl
add
sahf
and
sub
cmp
inc
in
sbb
addps
ds
cmp
nop
aas
cwtl
aas
mov
aas
mov
aas
sarb
fmuls
call
faddl
push
or
mov
cld
and
or
pop
push
inc
jl
push
xchg
mov
stos
sbb
out
popf
rcrb
add
mov
add
cmp
sbb
inc
add
cmpsl
xor
cmp
push
popf
pop
sbb
jo
js
adcb
stos
iret
mov
iret
loopne
clc
testl
and
sub
xor
pop
xor
cmp
cmp
inc
inc
inc
addr16
xchg
push
loopne
xor
mov
mov
sbb
mov
clc
lock
jb
or
or
add
jb
mov
pop
jp
jl
jle
jle
jle
jle
jle
add
xchg
mov
mov
rclb
cld
mov
mov
and
test
dec
hlt
push
jle
cld
pop
cmp
mov
insb
jbe
addr16
mov
test
mov
mov
sarl
enter
rolb
sub
xor
es
add
cmp
pop
cs
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
push
bnd
aas
les
imul
jle
jle
add
xor
jnp
rcrl
fldenv
loope
jmp
stc
xor
cld
fs
insb
shll
xlat
xchg
jl
and
loop
mov
movsb
ja
sar
aam
fdivr
fdivr
loopne
in
arpl
xorb
xchg
and
ret
jp
and
popf
aaa
popf
dec
sbb
js
jl
adcb
cmp
enter
aam
fadds
out
out
out
loopne
cmp
add
sub
xor
cmp
add
inc
repz
repnz
jmp
xorb
lahf
pushf
pop
mov
lahf
rcrb
lahf
lock
hlt
lahf
clc
cmp
test
adc
dec
or
cmp
popf
inc
shlb
insb
cmp
jb
je
jbe
gs
notl
mov
lods
xor
hlt
mov
mov
dec
or
add
adc
nop
nop
je
dec
push
das
and
xor
stc
test
cmpsb
xchg
sub
xor
in
aaa
loope
adc
adc
fstps
sbbb
icebp
and
sub
sub
inc
lret
out
xchg
jo
mov
lock
push
sbb
jb
sub
pop
mov
fidivrs
push
xchg
hlt
jo
push
cmp
add
cmp
cmp
enter
add
xchg
inc
mov
inc
sahf
jo
dec
add
push
cld
mov
cli
mov
jl
push
sbb
jge
xchg
pop
mov
add
cmp
dec
inc
push
xchg
pop
cmpsl
shrl
sbb
popa
jbe
js
ret
mov
subb
inc
popf
push
add
insb
xchg
jle
subb
cmp
insl
leave
inc
mov
mov
out
stc
sbb
add
daa
ds
insb
mov
sahf
imul
mov
bound
push
flds
dec
in
mov
dec
add
inc
dec
add
fs
mov
enter
movsl
subb
xor
popf
add
xchg
add
jns
add
out
mov
sarb
xchg
insb
sbb
cld
cmpl
and
pop
sub
add
xor
clc
cltd
add
mov
or
inc
pop
lret
stc
shl
call
out
ret
jle
add
clc
sbb
xor
rolb
cvtps2pd
arpl
pop
jne
jle
movsb
xchg
sbb
les
sub
cmp
orb
add
ret
add
cmp
iret
push
or
add
mov
mov
add
cmp
cmp
add
xchg
jnp
popf
out
pushf
xchg
jmp
loopne
push
leave
cmp
roll
gs
aam
sbbb
or
subb
hlt
jl
push
mov
inc
xchg
int3
mov
pop
fdivl
inc
inc
add
lock
out
ds
mov
or
rcrb
sbb
xchg
push
and
dec
aas
sarl
sub
add
insb
adc
outsb
mov
add
test
pop
aam
mov
and
int3
loopne
repnz
add
jb
in
adc
lret
sbb
out
leave
cmp
cmp
inc
in
dec
int
jb
pop
rclb
lahf
cmpb
add
lcall
popa
and
in
mov
loop
jns
scas
mov
xchg
movsb
sub
aam
cld
add
mov
inc
dec
fstl
xchg
and
push
or
dec
mov
in
push
add
pop
je
mov
adc
sub
test
add
push
addl
inc
and
out
fisttpl
aaa
cmp
mov
movsl
cmpsb
arpl
hlt
xchg
cmpb
js
ret
adc
loopne
in
push
mov
push
push
xor
push
iret
pop
pcmpgtw
addb
stos
iret
mov
mov
ret
and
jbe
add
jo
or
sbb
daa
aam
inc
out
cltd
and
mov
adc
xchg
jnp
add
sub
add
sbb
push
add
daa
aaa
imul
sbb
out
xor
outsb
add
cld
leave
pusha
cmp
cmp
cmp
addr16
jp
xor
jnp,pt
rcl
push
ja
test
add
in
call
clc
pop
inc
pop
rorb
sbb
faddl
add
shl
int
xor
into
push
jo,pn
sahf
add
sub
icebp
add
sti
mov
leave
dec
rorl
bound
loope
jmp
and
cld
jb
add
cmp
dec
cmp
mov
aam
cmp
je
lahf
cmpsb
es
inc
jo
lock
mov
fcompl
cmp
aaa
popf
dec
adc
dec
pushf
pusha
enter
mov
call
cmp
push
dec
outsb
xor
inc
loop
adcl
mov
jmp
and
xor
lcall
pop
or
mov
lret
pop
dec
xchg
xchg
sbb
repz
adc
jecxz
out
flds
mul
add
pop
or
push
sbb
ds
fwait
jne
inc
xchg
data16
add
cmp
add
adc
sbb
das
and
xor
js
add
cmp
cmp
ss
in
xchg
adc
jl
test
mov
mov
nop
cld
xchg
xchg
pop
adc
sarb
popf
lock
ds
iret
clc
and
fmull
cmp
add
inc
or
dec
xchg
rcrb
inc
js
dec
dec
or
push
loope
pop
cmp
pop
daa
test
cmpsb
add
dec
jmp
cs
ficoml
js
inc
cmc
or
movsb
call
dec
jmp
cmp
push
daa
and
mov
sahf
adc
xchg
bnd
rolb
pop
mov
daa
pop
xchg
jbe
push
pushf
shlb
bound
nop
add
or
hlt
push
add
mov
add
pop
imul
test
pop
dec
mov
js
add
in
add
cmp
in
call
jmp
setle
mov
test
cmp
dec
ljmp
pop
add
fwait
mov
push
rorl
xchg
repnz
add
add
test
mov
out
add
loopne
xor
mov
scas
inc
or
pop
jo
jbe
js
jp
add
add
and
test
popa
les
nop
pop
add
ds
sub
cld
push
xor
insb
dec
mov
or
xchg
loope
lock
nop
or
das
call
add
push
addr16
leave
mov
xchg
in
pushf
mov
test
mov
rorb
push
adc
mov
jl
dec
stc
cmp
add
adc
mov
inc
rorb
push
xchg
ficomps
jo
add
int3
dec
stc
cli
and
into
or
adc
and
imul
add
repz
repnz
sarb
in
mov
rcrl
xchg
in
mov
sub
add
cmp
adc
pop
pusha
hlt
cmp
mov
inc
data16
mov
aas
hlt
aam
xor
sbbl
clc
dec
push
push
arpl
pop
es
add
xor
popf
sti
pop
or
cwtl
add
or
add
bound
adc
cmp
add
mov
pop
test
pop
test
in
add
xor
cmp
push
fmuls
jle
mov
push
test
ss
roll
inc
flds
mov
pop
add
pop
in
lock
hlt
inc
xchg
mov
add
jp
jl
inc
jmp
sbbl
mov
add
ret
rorb
mov
dec
adc
sbb
xor
popf
and
mov
push
jp
push
jge
das
in
addl
jb
add
movsb
ret
cwtl
lods
rolb
push
lock
pop
bound
sub
out
xchg
xor
aam
cmp
add
fsubrp
popf
sub
ds
cmp
add
pop
dec
popa
lock
addl
inc
in
cmp
xchg
call
in
shrb
jmp
dec
sbb
sub
pop
sbb
sbb
add
cli
cmp
add
xor
jl
shll
add
mov
in
call
add
lcall
cmpsl
xchg
ret
and
in
inc
aam
pop
pop
add
xchg
xchg
cmpsl
xlat
cmp
in
not
push
or
inc
repz
add
stos
clc
pop
cwtl
sub
sub
push
rorb
and
and
js
jp
pop
pop
pop
ltr
xchg
sbb
iret
ret
xchg
adc
cmp
xchg
dec
jb
pusha
mov
add
pop
add
or
add
pop
xor
je
pop
add
jp
scas
and
fcmovu
sub
xor
mov
or
mov
jmp
pop
cli
sub
popf
jnp
pop
shlb
and
mov
fdivs
adcl
ror
mov
jecxz
int
add
and
sub
clc
sarb
or
mov
jl
add
xchg
mov
outsl
lahf
add
adc
loopne
and
call
pop
inc
fs
mov
out
pop
rolb
leave
pop
push
js
into
cmp
add
dec
stc
dec
clc
sub
adc
sub
mov
loopne
dec
test
push
idivb
ja
add
jae
jne
xchg
cmp
nop
sub
jns
add
shll
add
add
push
xchg
mov
loop
rolb
fs
cmp
push
nop
add
pop
jmp
dec
popf
outsl
add
lahf
add
xor
or
xor
dec
jnp
cs
jb
pop
je
mov
adc
js
add
xor
popf
add
sbb
in
add
loopne
icebp
cld
cmc
xchg
test
adc
mov
mov
push
in
adc
dec
rolb
adc
adc
mov
nop
pop
in
xchg
lock
hlt
mov
add
loopne
cmp
adc
add
cmp
push
jg
es
push
nop
test
cmp
daa
in
mov
cltd
mov
push
je
adc
in
push
add
aam
add
cmp
fdivs
rolb
fimull
sbb
lock
xor
xchg
pop
in
addr16
push
cmpsl
xchg
sarb
add
jbe
js
jp
add
movsb
or
lods
int
data16
cmp
mov
sub
call
repnz
scas
ja,pt
loopne
add
flds
cmp
adc
ucomiss
faddl
xchg
and
xor
add
sbb
out
and
sub
xor
popf
and
sbb
das
mov
pop
ret
cmp
repz
daa
inc
inc
inc
addr16
orb
repnz
push
call
mov
fsubs
enter
ret
add
fmul
loopne
mov
mov
add
mov
add
xchg
cmp
and
addr16
pusha
jp
movl
jbe
outsb
call
push
jmp
shlb
dec
jl
add
pop
ret
xchg
push
xchg
add
fdiv
add
add
dec
xor
xor
inc
xchg
popa
mov
add
dec
test
ror
pop
jp
add
inc
inc
inc
cmpsl
sbbb
sarb
jle
pop
jmp
push
or
xor
xor
inc
jno
add
pop
dec
fs
test
test
pop
inc
mov
push
loop
add
or
sbb
add
xchg
add
pop
loopne
out
xchg
add
cwtl
rcrb
xchg
into
pusha
out
xor
inc
repnz
shlb
cli
daa
xchg
pop
lods
fwait
out
in
test
fsub
lcall
inc
inc
pop
add
repnz
push
adc
in
lahf
add
cli
and
add
xor
inc
cmovs
dec
mov
mov
cld
aas
xchg
mov
rol
ss
and
sbb
sbb
xor
cmp
pop
inc
icebp
dec
stc
pop
and
lock
mov
cmp
outsb
stos
iret
mov
rcrl
aam
fucomp
add
cmp
or
bound
fldcw
loope
add
inc
inc
loopne
cwtl
cld
jb
je
add
pop
popa
xchg
add
pop
cmp
test
mov
popf
daa
stos
add
outsb
loopne
nop
push
dec
icebp
pop
in
pop
popa
sbb
ja
push
mov
and
lock
cld
in
push
shrl
and
xor
adc
lock
lahf
xchg
out
in
lods
mov
sub
dec
xchg
testb
test
cmpsl
arpl
les
test
jne
cmp
test
lcall
aam
leave
scas
fmuls
shlb
push
push
xor
jo
mov
push
repnz
adc
sbb
or
pushf
or
xchg
add
repnz
repz
lock
inc
nop
dec
add
loopne
jmp
arpl
ja
mov
sbb
dec
subb
add
push
fmuls
jle
nop
jno
jl
cmovb
cmc
mov
mov
or
or
push
test
call
or
rorb
int3
mov
enter
lahf
pop
into
rolb
in
clc
sarb
mulb
dec
aas
loope
subb
sarb
jmp
scas
and
loope
insb
repnz
and
bound
popa
ret
adc
dec
shlb
sub
adc
push
dec
leave
imul
ds
add
mov
mul
jg
add
leave
shll
jl
and
push
mov
mov
repnz
cmpb
pop
or
adc
dec
call
sbbl
repnz
leave
in
and
xchg
dec
enter
loope
add
roll
push
cs
pop
imul
nop
push
cmp
mov
movhlps
sti
xlat
enter
jmp
pop
cmp
add
dec
xchg
xchg
jp
out
roll
in
adc
cmp
sub
jnp
jle
mov
hlt
adc
pop
leave
lret
rorl
aad
mov
pop
and
pop
add
xor
mov
or
iret
cmp
popl
lock
adcb
mov
add
xchg
mov
inc
ret
mov
push
pop
leave
inc
je
cmp
cmp
and
lret
dec
loopne
adc
add
adc
sub
add
mov
jne
jp
andl
test
ds
aad
fbld
add
or
sbb
fnstcw
sbb
push
lods
fs
cltd
cmp
cmpsl
ficomps
add
jno
jnp
es
mov
pop
int3
xchg
shl
insb
sbb
cld
sti
addb
pop
ja
jl
cltd
and
out
std
loope
cmp
xor
test
jnp
add
daa
int
adc
mov
sub
jne
inc
add
pop
loop
jo
pop
add
aam
iret
xchg
or
lods
icebp
cmp
lret
in
dec
lcall
add
iret
add
cmpsl
movsb
loop
cwtl
xor
loopne
fmull
test
xor
mov
pop
pop
xchg
add
mov
add
cmp
adc
and
sub
and
xchg
sub
nop
int3
test
out
or
movb
ret
mov
xor
and
add
ror
or
sub
and
mov
sub
out
pop
cmp
adc
jmp
cmp
mov
icebp
inc
sti
ret
cmp
fcoms
pop
cmp
leave
mulb
ret
movsb
sarb
and
dec
xchg
add
push
lahf
pop
xchg
jbe
add
test
mov
xchg
xchg
mov
lcall
or
sbb
sbb
shlb
cmp
mov
daa
outsl
inc
mov
inc
sub
pusha
push
jb
xor
pushf
dec
test
fs
add
ret
dec
popf
add
xchg
add
jecxz
or
pop
cwtl
ret
jo
jl
xchg
add
in
add
sbb
push
add
out
adc
lock
cld
add
mov
hlt
pop
lea
jb
je
add
jno
testb
pop
mov
out
jo
push
sbb
dec
sbb
mov
xchg
pop
out
cmp
fwait
inc
xor
xchg
ljmp
xchg
and
leave
mov
cs
xor
es
mull
cmp
mov
dec
or
fildl
cmp
clc
fdivs
adc
xor
pop
ror
add
mov
add
and
sar
shl
cld
std
idivb
dec
in
pop
lock
test
cmpsb
cld
stos
leave
scas
shll
sbbb
lahf
ret
dec
into
and
aas
lahf
pop
fiadds
pushf
inc
add
movsb
movsl
ror
loopne
icebp
pop
xchg
push
sub
xor
pop
xor
cmp
xchg
out
testl
cmp
pop
in
add
cmp
and
or
sub
dec
clc
outsb
lock
hlt
ss
xchg
fimull
adcl
repz
repnz
je
pop
add
out
js
add
lock
aas
mov
add
popa
in
xchg
sub
push
in
leave
testl
insl
shlb
je
xlat
adc
aas
add
ss
xchg
sbb
mov
adc
sub
test
je
dec
imul
stos
dec
adc
cwtl
mov
pop
rcll
filds
pusha
out
jmp
add
repz
mov
add
adc
xor
pop
aaa
dec
sub
sbbl
repz
pop
mov
adc
lock
ljmp
xor
aas
push
mulb
stc
out
and
jo
add
pop
jns
add
add
mov
loopne
fmuls
ss
or
pop
adc
cmp
mov
ret
push
pop
sbb
fmull
pop
add
lods
data16
pop
scas
mov
adc
addl
mov
sbb
mov
andb
dec
addb
and
call
xchg
and
cld
sbb
push
sub
lcall
in
in
lret
mov
jno
jnp
hlt
or
outsb
cwtl
in
dec
aas
cs
ffreep
mov
xor
xchg
xor
lock
sbb
jle
subb
add
shr
cld
loop
ljmp
xor
or
push
adc
aaa
addl
cld
in
lea
push
xor
jns
addb
mov
js
je
pusha
xchg
or
nop
iret
test
aaa
xchg
add
loopnew
xchg
mov
loope
cmp
sub
add
dec
lea
jle
rcrb
cmpl
mov
push
pushf
adc
call
daa
mov
ljmp
hlt
add
cmp
jno
add
fcoms
add
jl
xchg
loopne
aas
hlt
adc
add
insb
cmp
cmp
in
inc
add
add
stc
inc
in
call
push
xchg
mov
mov
lret
sahf
sub
sub
cmp
add
push
cmp
add
inc
ret
mov
mov
pop
push
sub
dec
mov
ret
std
rorb
hlt
add
pop
push
xchg
add
mov
cld
repnz
lcall
add
lods
add
add
pop
mov
subb
cmp
subb
rcrl
or
dec
and
cmpl
dec
js
mov
mov
add
rolb
and
je
cmp
push
roll
popf
shll
add
aad
test
das
ds
sub
cmp
daa
push
mov
roll
les
lahf
adc
addb
or
lret
dec
xor
roll
ss
loope
pushf
xor
cs
push
xchg
or
cmp
addl
test
mov
jns
push
inc
add
adc
xor
dec
sub
sbb
scas
mov
pop
enter
scas
movsb
push
pop
push
cmp
inc
xorb
nop
cmp
ds
jl
add
dec
adc
push
cli
add
pop
clc
sbb
cmp
cmp
xlat
or
dec
push
invd
mov
sbb
pop
loopne
pop
add
and
inc
xor
mov
mov
add
ss
cmp
das
loop
add
jp
add
mov
pop
add
rsqrtps
rorl
imul
add
push
add
and
mov
ljmp
or
cli
les
adc
add
flds
xor
push
fstps
push
add
movsb
adc
imul
push
outsl
add
jnp
ds
fimuls
int
push
sub
test
imul
xor
shl
cld
xchg
add
sbb
popf
cmp
inc
mov
cmp
nop
out
ret
cld
or
add
enter
negb
add
cmp
xchg
add
lahf
dec
mov
leave
add
clc
pusha
dec
aad
xchg
out
add
cmc
pop
sahf
dec
add
mov
ja
adc
sbb
sarl
or
andl
mov
in
jmp
add
hlt
mov
pop
daa
enter
enter
syscall
imul
xchg
mov
dec
sbb
add
mov
mov
adc
jmp
xor
xor
jp
push
inc
push
mov
testb
pop
dec
ret
pop
push
mov
sbb
and
mov
into
clc
xor
jge
cmp
jnp
cmp
sbb
add
push
testb
adcl
inc
push
xchg
cli
aam
les
dec
test
add
xor
cmpl
push
and
inc
scas
add
test
js
mov
lods
aas
add
loope
loopne
in
jp
andb
addb
sbb
lcall
sub
xchg
xor
gs
cmp
out
loop
cmpsl
inc
add
jo
sahf
aas
js
sub
test
xor
sbbb
mov
mov
sbb
sbb
or
add
das
sub
jo
adc
add
je
mov
orb
dec
call
test
jl
add
test
sub
pop
lea
jo
fdivs
push
call
hlt
sbb
or
sbb
cs
cwtl
leave
xor
or
pop
push
add
mov
add
in
nop
fmul
cmp
movsb
fmul
jle
push
pop
mov
xchg
loopne
sbb
lcall
stos
sbb
pop
enter
lods
cld
test
mov
movsb
pop
jle
pop
mov
sahf
mov
jo
pop
pop
roll
add
mov
or
adc
xchg
add
sbb
movsb
es
lock
sub
vmread
fmull
aaa
add
add
icebp
xor
xor
ret
in
popf
sbbb
pop
inc
adc
dec
pop
or
pop
jl
adc
in
call
test
cmp
mov
xchg
adc
in
add
mov
call
mov
sbb
mov
cmovl
sub
lock
pop
dec
push
mov
orl
xor
dec
add
mov
movsb
jp
in
lods
shr
pop
mov
lock
add
lret
int3
jo
jle
aam
fmuls
push
loopne
and
push
push
and
clc
xchg
xchg
or
jb
jb
js
add
loope
ds
in
leave
cmp
xor
cmp
lods
mov
dec
dec
dec
adcb
pushf
pop
add
ret
fdivl
push
clc
js
cwtl
mov
movsb
and
inc
mov
mov
push
xchg
std
cwtl
int3
scas
pop
nop
dec
adc
stos
in
adc
clc
nop
or
inc
push
or
inc
push
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
pop
inc
stos
out
dec
test
es
jne
inc
popa
sub
push
call
enter
cmp
mov
mov
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
push
shrb
sbb
adc
or
cmp
mov
jo
stos
and
and
mov
dec
mov
or
fstpt
xchg
test
js
sbb
cmpl
sysexit
test
mov
jb
dec
jle
or
inc
sbb
in
or
repnz
cmpb
inc
add
sub
test
sub
loopne
pop
pushl
je
add
push
xlat
push
js
mov
push
stos
mov
aas
xor
or
leave
add
sbb
shr
in
add
loopne
add
in
sub
add
out
stc
mov
pop
add
pop
bound
add
add
movsl
lea
loope
jge
add
mov
sbb
jge
jp
dec
roll
out
sarb
lock
sbb
pop
sbb
shlb
mov
mov
pop
and
mov
cmpsb
mov
dec
cmpl
add
jge
lods
add
rorl
or
sti
addl
push
inc
ret
cld
sub
add
and
popl
add
ljmp
cmp
mov
loop
in
sahf
fsubl
mov
mov
repnz
and
or
cmc
ret
push
movl
push
lock
outsb
add
sbb
pop
les
jp
jbe
add
jle
sbb
cli
mov
or
mov
in
or
inc
loop
stos
add
mov
push
add
jne
outsl
add
imul
fsubr
cltd
adc
fsubrl
aaa
fmuls
pop
rorl
dec
shl
or
arpl
ds
jnp
aam
or
pop
rorl
cmp
adc
push
and
jo
push
sbb
dec
mov
andl
xor
dec
leave
add
add
cld
jmp
add
push
push
cmp
rolb
das
add
jne
mov
add
xchg
add
xchg
mov
mov
inc
cmp
and
jnp
testb
xor
cmp
in
rol
stc
les
pop
es
mov
inc
sbb
mov
xchg
sub
shrb
add
das
inc
jne
lret
xor
or
stos
pusha
adc
xchg
jmp
lret
aam
cltd
test
xchg
lods
inc
sub
test
add
sbb
repz
and
pusha
lcall
and
inc
push
ret
mov
jne
jp
sbb
aaa
adc
sbb
mov
cld
inc
fnsave
addb
ljmp
jl
push
add
adc
leave
add
cltd
xor
xchg
add
imul
push
add
shll
addl
and
xchg
dec
ja
sbb
lahf
push
cmp
xorb
in
pusha
xor
test
popa
lods
xchg
dec
jg
adc
xor
mov
lret
mov
icebp
in
add
or
mov
shll
jp
add
pushf
jmp
pop
inc
inc
or
pop
rclb
hlt
pop
jge
pop
mov
shll
lock
jecxz
dec
popa
leave
inc
movl
or
cmpl
push
pop
jns
sbb
jg
jo
sub
pop
or
and
jmp
add
aas
loop
xor
fadds
or
out
mov
pop
mov
dec
int3
iret
addl
pop
gs
sub
jo
fisubrl
cmovp
mov
sub
imul
sbb
inc
mov
and
add
push
lret
cld
inc
cmp
add
lds
add
inc
push
lret
add
sbb
popa
arpl
jecxz
jmp
xchg
jo
jmp
int
cmp
ror
stos
add
pusha
mov
imul
enter
dec
add
clc
mov
fs
add
popf
lret
jne
ds
pop
xchg
jb
nop
repnz
cltd
rcrl
add
gs
dec
cmp
adc
add
rcll
mov
mov
adcl
push
fadds
cmpsb
mov
jns
dec
pop
stos
jge
out
add
sbb
jbe
adc
stos
xchg
rolb
dec
and
mov
xor
call
shll
bound
push
adc
add
mov
js
loopne
add
out
xor
arpl
mov
pop
daa
js
je
les
mov
cmpsl
xchg
in
jne
add
lret
adc
inc
mov
adc
and
and
push
inc
enter
xor
mov
add
sub
in
and
imul
icebp
adc
pop
inc
add
rolb
add
repnz
add
sub
adc
ljmp
cmpsl
clc
push
cmp
aas
xchg
sahf
push
mov
inc
flds
adc
fwait
jnp
sub
andl
pusha
lods
or
cmpb
mov
mov
add
pop
inc
add
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
add
imull
cmc
rep
or
jmp
adc
adc
cmp
jae
push
inc
add
inc
lock
mov
add
add
xor
shr
add
roll
push
mov
adc
cmp
call
ret
jns
mov
jae
insb
cmc
sub
mov
push
imul
inc
lds
outsl
arpl
inc
mov
lea
push
in
cmp
arpl
sbb
icebp
jae
cmpsl
inc
jne
mov
sub
sti
push
loope
inc
push
ja
jo
imul
dec
andb
mul
sub
ds
mov
jns
push
clc
and
cltd
sub
bound
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
cmpsl
push
outsl
fs
mov
pop
push
nop
sarl
or
or
mov
insl
add
dec
icebp
inc
std
pushl
clc
ja
shrb
pop
inc
daa
dec
outsl
imul
movsl
daa
push
stc
in
mov
mov
movsb
lods
mov
add
rolb
jmp
add
cltd
jmp
xchg
in
push
pop
push
inc
out
push
xchg
int
sub
mov
out
int
loop
insb
or
push
fsubrl
add
popa
jge
js
cmp
dec
lret
mov
cli
add
clc
or
pusha
or
shll
ja
cs
add
or
adc
aam
pop
add
lcall
in
mov
xlat
cltd
sbb
dec
imul
shlb
aaa
pusha
xor
test
mov
out
xor
lods
cmp
mov
je
cmp
cmpsl
and
mov
cmpsb
clc
inc
cmp
and
adcb
inc
lret
ja
dec
pop
cmpb
rorl
cltd
cld
imulb
jns
fbstp
stos
and
sarl
stos
cwtl
idivl
fidivl
icebp
mov
xchg
fnstcw
sub
xchg
push
mov
mov
and
xlat
push
ss
dec
out
push
clc
enter
pushf
roll
xor
sub
aaa
inc
hlt
adcl
lea
fwait
orb
cmp
push
mov
outsb
stos
into
aaa
imul
xchg
or
sbb
nop
lret
xor
nop
and
inc
ret
xor
xchg
loope
jnp
xchg
jns
and
mov
std
into
imul
xchg
cmp
out
fldenv
jge
cmp
push
adc
pushf
xor
mov
addl
push
jns
sub
mov
stos
std
insl
adc
out
or
pop
add
add
popa
push
xor
cmp
lods
cmp
pop
leave
xchg
sbb
mov
fs
jle
mov
fnstsw
adc
pop
jmp
pop
test
inc
sbb
stos
int
add
push
outsb
push
iret
mov
int3
xlat
fiadds
outsb
dec
push
scas
imul
loope
sbb
int
addl
sub
jmp
pop
imul
sbb
xchg
leave
int
inc
ret
dec
das
movl
loop
test
push
jle
sbb
pop
es
mov
in
fsubrs
je
cwtl
or
leave
inc
add
popf
and
dec
cmpb
pop
push
and
sub
rorl
dec
out
iret
cmp
mov
xchg
jl
pop
jb
pop
sub
aam
cmp
fmul
push
insb
lock
mov
ret
stos
or
popf
imul
stc
or
int
add
lods
fwait
push
cmc
xor
lea
fstp
rclb
nop
cmpsb
pop
cwtl
into
int
les
test
dec
mov
lock
jecxz
js
shlb
push
and
in
and
in
movsb
scas
out
popa
out
fbld
mov
pop
lret
loopne
movsl
and
mov
scas
mov
test
out
sub
xchg
or
in
or
js
sbb
cmovo
mov
add
std
push
dec
test
lods
cmpsb
push
sarb
out
movsl
arpl
jnp
mov
pop
pop
push
repz
xor
sahf
and
js
gs
jp
roll
hlt
iret
dec
xor
popf
sub
jmp
add
push
xchg
xor
dec
sbb
dec
adc
in
push
fstps
enter
push
fsubrs
dec
inc
lods
add
mov
cwtl
jle
hlt
lods
jle
pop
cmp
mov
movsb
push
xchg
ja
test
mov
mov
mov
xor
or
sub
bound
xor
mov
ss
mov
adc
mov
mov
lods
icebp
add
jae
and
xor
mov
mov
stc
pop
pop
push
adc
hlt
pop
cmp
pushf
pop
push
std
mov
jg
cld
pop
adc
sbb
imul
pop
add
jecxz
mov
mov
jmp
bound
test
insl
jno
jle
push
idiv
lea
jl
arpl
sahf
test
push
addb
mov
das
sbb
imul
fdivrl
sub
std
leave
inc
xchg
jge
ljmp
inc
aaa
outsb
lea
sbb
popf
cmp
jle
and
jae
mov
in
pop
in
nop
cs
ficompl
jae
mov
pop
xlat
sti
pop
divl
pop
jb
mov
jne
dec
rolb
mov
inc
aad
psubusw
ret
popl
push
popa
or
pusha
out
pop
rcrb
cmp
xor
pushf
aaa
dec
and
push
fisttpll
dec
adc
sti
xchg
outsb
sbb
lahf
pop
mov
mov
pushf
test
push
sub
imul
hlt
push
adc
xor
or
xchg
repnz
outsb
cmp
pop
nop
outsb
in
or
lret
cmp
js
sbb
sbb
out
push
xor
push
rcrb
lea
mov
jnp
lea
arpl
stc
xchg
in
jp
sub
sbb
outsl
pop
xor
movaps
in
adc
mov
test
adc
inc
sbb
outsb
pop
fsubr
and
iret
fildll
mov
cwtl
xlat
cmc
outsl
and
das
cmp
xchg
add
jge
movsb
pop
les
testb
gs
pop
lods
pop
cli
add
adc
fnstcw
ja
test
pop
lahf
jns
fcmovbe
gs
inc
or
push
out
idivl
movb
or
or
pop
cmpsl
xchg
loope
xor
test
cmp
xchg
test
cmp
hlt
and
test
imul
std
xchg
aas
sbb
sbb
movsb
fcomi
pop
sub
fbld
nop
mov
or
mov
sub
or
xchg
xchg
scas
movl
sti
incl
rcrb
push
inc
jge
mov
rorb
loope
aaa
push
outsb
sarl
xor
insl
aas
sbb
lds
cld
loopne
sti
mov
jno
jge
mov
and
stos
lock
rorb
pop
mov
mov
pop
push
call
ss
add
mov
movsb
popa
ds
inc
cmpsl
mov
lds
adc
cmp
xor
dec
fldl
int
and
add
jb
push
dec
add
xor
xor
cmpsl
adc
icebp
cltd
push
cltd
xlat
in
outsb
or
mov
sahf
mov
adc
ret
outsl
mov
rorl
adc
adc
sub
sub
sti
adc
mov
lcall
or
in
xor
cltd
dec
jg
inc
stos
adc
out
mov
test
sub
nop
vpmadcsswd
pop
and
fcmovnu
jmp
fcomps
sbb
int3
mov
loop
pop
xor
nop
pop
adc
sub
xor
cld
out
inc
jo
ljmp
adc
lcall
imul
add
push
xchg
or
xlat
cmp
adc
mov
leave
push
ljmp
jo
inc
mov
inc
das
add
sbb
jbe
mov
ja
pop
stos
inc
or
cmpb
aad
jnp
shll
cmpsb
popf
inc
stc
pushf
nop
or
mov
inc
repnz
sub
nop
add
aad
jns
outsl
xchg
add
inc
mov
mov
pop
push
or
mov
enter
out
and
lods
jno
jne
data16
and
test
lods
mov
push
mov
cmp
call
jecxz
es
jge
mov
jle
sub
in
nop
push
add
hlt
gs
mov
fdivrl
inc
ljmp
subb
iret
movsb
xor
lahf
mov
ficoml
xchg
std
inc
jg
jae
ljmp
jne
out
mov
adcl
pop
and
insl
pop
xchg
pop
lahf
and
les
xchg
fs
push
std
js
std
int3
popa
aas
inc
lods
sbb
mov
je
xchg
jl
lcall
testl
push
insl
je
or
les
mov
jns
in
xor
int3
push
sbb
js
stos
sub
inc
adc
inc
jbe
jl
scas
lcall
inc
adc
imull
in
shrb
fdivrl
mov
mov
adc
leave
shrb
mov
push
sub
lea
rcll
mov
xor
pop
lret
leave
sub
sub
loope
jno
sbb
adc
cmp
out
mov
repz
out
pop
mov
xor
stos
jns
dec
cmp
pusha
jmp
ret
dec
mov
test
sbb
mov
nop
xor
test
movsl
pop
sar
sti
daa
xor
xchg
push
or
cld
popa
imul
mov
jle
sbb
lods
dec
cmp
orb
inc
or
mov
data16
movsb
jp
adc
xor
outsb
xchg
pop
cs
cli
pop
insl
or
incb
lcall
dec
lods
and
xchg
dec
adc
enter
cmp
jecxz
push
mov
sub
mov
push
cmp
sub
push
add
sbb
mov
aas
repnz
add
adc
sarl
std
sti
in
repz
jg
subb
mov
xor
inc
mov
cmp
cmc
mov
and
jmp
dec
xor
loop
les
hlt
pop
mov
lahf
gs
jns
in
sbb
sub
pop
fdivs
lods
inc
aaa
or
in
xor
stos
enter
lcall
mov
sbb
ljmp
lcall
adc
push
pop
imul
pop
iret
xchg
sub
negb
mov
dec
cmp
xor
or
mov
sbb
leave
rclb
pop
xchg
daa
jmp
jne
aas
xorb
cmovno
repz
jmp
sub
repnz
inc
mov
out
sahf
filds
mov
lock
jmp
jmp
test
jne
loop
push
jae
test
cmp
ja
scas
and
pop
aam
or
fidivrs
rolb
aad
jmp
cmp
or
add
mov
push
enter
push
dec
addr16
or
std
adc
sbb
gs
dec
sbb
and
into
ret
cmp
loopne
and
popa
stos
xlat
movsl
iret
fstp
push
and
inc
inc
mov
lret
int3
adc
push
dec
adc
dec
add
mov
insb
mov
pushf
xchg
rcrb
or
pop
jae
mov
pop
jmp
xor
mov
cmp
es
cmp
mov
shlb
or
gs
sbb
setle
xor
or
mov
mull
ja
adc
lods
jns
dec
push
sub
sub
in
fldenv
leave
das
dec
jecxz
loope
clc
push
add
aam
imul
lock
lea
add
push
push
inc
pushf
in
iret
or
jae
inc
iret
mov
imul
test
push
dec
mov
rcll
out
dec
sarl
adc
mov
lret
lahf
sbb
and
sub
xchg
lret
mov
cmpsb
xor
xchg
fimuls
and
jb
sahf
test
inc
cmpsl
js,pt
sahf
xor
pop
mov
push
mull
insb
test
stos
test
dec
stos
nop
int3
pop
loope
jmp
shll
inc
sahf
xor
lahf
adc
das
and
or
enter
mov
aas
test
test
jecxz
sbb
sub
jno
in
popf
lret
push
sahf
sbb
or
test
push
mov
mov
clc
pusha
gs
outsb
stos
or
jnp
aas
test
pop
push
mov
out
push
sub
idivl
add
sti
test
outsl
repz
push
outsl
fdivr
outsb
iret
insb
mov
dec
jmp
adcl
stos
pop
fsubl
xor
ss
pop
scas
arpl
mov
xchg
xchg
xor
lds
aaa
dec
or
in
xchg
add
ret
add
cmpsl
fwait
push
jbe
push
inc
jl
call
xchg
pop
mov
lcall
mov
mov
jmp
pushl
lea
inc
popa
jmp
add
ljmp
cmpl
lea
jle
pop
add
mov
and
push
es
std
jmp
sbb
out
xorl
inc
xchg
dec
cmp
sub
mov
add
dec
repnz
aaa
pop
cmp
add
inc
jge
addr16
imul
xlat
mov
pop
mov
jge
ds
dec
sub
pop
jne
pop
icebp
push
push
aad
mov
out
jl
lods
mov
inc
dec
push
cmpsb
clc
mov
mov
and
repz
int
push
lret
mov
lret
dec
lea
cmp
jb
arpl
mov
fistpl
in
mov
aas
enter
fwait
inc
ret
aaa
data16
dec
rcr
inc
mov
mov
cld
push
xchg
adc
jno
clc
sbb
cwtl
push
in
jl
mov
repnz
push
push
mov
out
rcr
mov
inc
cmp
inc
and
xlat
ds
aad
nop
mov
repnz
xor
cmp
mov
imul
fwait
aam
push
sub
ja
dec
jle
sub
movsl
bound
in
scas
and
sbb
lahf
cmp
loop
or
lock
mov
dec
pushf
xlat
dec
addr16
hlt
add
shrl
and
pop
xchg
sub
mov
lcall
push
in
ret
cmc
mov
cmpb
mov
cmp
negl
mov
pop
pop
xorb
les
inc
cmp
data16
test
add
add
fstpt
std
xchg
fisubs
ds
call
aam
loop
repnz
ret
mov
sub
insl
inc
fmull
addr16
adc
mov
push
pop
jge
out
inc
pushf
mov
jno
mov
or
shufps
push
loope
push
xor
sbb
or
mov
in
mov
movsl
in
xchg
stc
mov
push
xchg
or
or
cltd
mov
pop
arpl
fnstcw
jo
ja
xor
sbb
insb
int3
inc
jp
inc
fsub
ljmp
aam
shll
pop
fisttps
adc
sahf
jbe
jl
and
aaa
fwait
mov
or
sbb
cltd
popa
test
xchg
dec
mov
mov
leave
mov
into
imul
out
sbb
jmp
pop
stos
sbb
jg
xchg
out
add
in
jle
daa
out
inc
or
cmp
cmc
fistpl
pop
sub
ljmp
xchg
push
pop
gs
sub
aam
jne
cltd
jnp
dec
dec
pop
rcrl
ljmp
gs
sub
xorl
and
imul
sub
xchg
cmp
repnz
mov
stc
adc
imul
in
mov
xor
shrl
mov
xor
lock
cmp
cmpsb
mov
jge
flds
mov
mov
and
or
orb
adc
inc
test
idivb
push
arpl
es
cld
sbb
adc
or
adc
lret
dec
jb
icebp
ja
ja
outsl
es
mov
popf
rcr
adc
mov
pop
jo
lea
xchg
cmpsl
sub
and
and
dec
mov
int3
in
call
jl
sbb
inc
lea
add
stc
inc
aaa
aad
adc
out
adc
dec
aas
icebp
fildll
decl
ljmp
sbb
or
sbb
jge
cmp
ss
ret
or
in
jnp
in
xor
nop
stc
mov
adc
rorl
stc
pop
xor
out
insb
movsb
inc
push
or
nop
add
jno
jae
cmp
cmp
shll
mov
adc
sahf
pop
data16
pop
pop
mov
mov
jle
add
aam
xchg
test
add
inc
imul
and
mov
mov
mov
mov
dec
jle
and
fldcw
lods
push
adc
jg
jecxz
sub
out
imul
push
repnz
fidivs
xlat
adc
dec
ret
es
inc
cmp
movsb
iret
push
sbb
xchg
cmp
cli
push
jg
sub
fimuls
sub
fsubl
mov
movsb
stos
jno
cmc
mov
call
inc
xor
xchg
dec
cs
adc
push
sbb
adc
fwait
cmpsb
outsb
push
add
adcl
fdivrp
cmc
push
cmpl
loope
jns
xor
outsb
fnstenv
inc
sti
aam
vmovntps
leave
push
sub
push
icebp
inc
add
mov
fists
mov
dec
fidivs
hlt
addb
push
jae
test
cmp
push
xor
cld
sarb
push
dec
shll
subl
pavgw
pop
iret
adc
pop
dec
daa
cs
push
jecxz
scas
and
push
arpl
ret
add
push
sub
in
add
cs
or
mov
enter
xchg
push
mov
dec
cwtl
mov
cmp
cwtl
test
jecxz
outsl
ljmp
mov
xchg
cmpsb
dec
xor
adc
popa
xlat
pop
sub
test
test
xor
mov
shll
push
push
adcb
out
sub
fldcw
stos
in
inc
xor
inc
mov
scas
add
orb
sbb
xchg
adc
pop
xlat
mov
stos
add
sbb
mov
jmp
xchg
jle
jmp
jno
repnz
push
cs
fimull
in
dec
and
mov
jecxz
mov
sbb
ss
cmp
dec
jno
xchg
pop
imul
add
adc
outsb
iret
loopne
outsl
lods
in
adc
sbb
mov
push
ja
mov
cmp
adc
data16
cli
ret
stos
push
add
push
cmp
mov
fcompl
mov
jp
mov
repz
sbb
mull
pushl
lea
or
pop
pop
push
jno
mov
and
cltd
insl
mov
dec
imulb
mov
add
and
popf
mov
or
outsb
fwait
pop
pop
push
mov
jbe
add
daa
scas
loop
subl
subb
sbb
ret
xchg
and
out
lret
jae
pop
mov
inc
mov
rolb
adc
xchg
pop
add
sbb
ret
dec
push
roll
lods
fistl
sbb
scas
out
mov
mov
mov
ss
mov
lahf
aad
not
xor
sub
test
sbbl
push
lcall
inc
adc
cwtl
pop
pop
or
or
dec
mov
sbb
mov
or
xor
dec
fs
or
psrad
mov
cmpsb
hlt
addr16
jge
je
rorl
repnz
loop
or
jp
xchg
cmc
in
or
xor
pushf
push
inc
mov
int
lea
cmp
das
and
aam
mov
sub
scas
out
jbe
and
mov
imul
std
pusha
hlt
lock
cmc
pop
movsb
movnti
pusha
pop
shlb
aas
mov
pusha
xor
leave
jb
xor
movsb
stc
push
repnz
mov
pushf
insb
xor
subl
out
in
pop
into
xor
lods
movsb
test
inc
jmp
adc
sbb
enter
pop
adc
hlt
lods
fidivrl
shl
lock
andb
and
popa
lret
adc
inc
push
adc
arpl
cmc
xchg
lea
xor
cmc
or
inc
mov
push
pop
xchg
mov
push
int
mov
and
pop
and
add
insl
aas
mov
sar
or
sub
imul
push
cmp
jmp
inc
inc
pop
repnz
lcall
sbb
mov
and
pop
sbb
insl
dec
fnstsw
ljmp
fdivp
cli
pop
sbb
fwait
dec
pop
pushf
mov
and
int
xor
stos
and
adc
mov
pop
sub
lcall
mov
dec
lahf
jb
inc
and
and
mov
add
pop
sub
mov
pop
push
or
insb
mov
cmc
lods
sub
mov
add
mov
cmp
sub
pop
addl
test
xchg
inc
jmp
shl
and
neg
jo
ja
xchg
test
or
incl
sub
int3
mov
out
movsl
xchg
out
ss
push
insl
xchg
repnz
jge
or
movsl
mov
xor
sub
jle
cli
ss
iret
or
pop
stc
inc
pop
push
cmpsl
leave
pop
dec
pusha
cmp
jecxz
xchg
cmp
cmp
mov
imul
pop
or
fimull
bound
mov
aam
cmp
ficompl
push
aam
inc
pop
fistpll
inc
mov
push
ficoml
incl
jecxz
mov
push
pop
psubusb
cmp
add
stos
inc
mov
mov
jne
push
cltd
clc
cmp
punpckldq
dec
push
add
scas
test
ret
pop
cmp
push
sbb
icebp
pop
bnd
orb
jl
fnsave
add
das
pop
lock
sub
addl
out
insb
int
sbb
movsl
push
ficoms
mov
data16
inc
jae
mov
dec
jmp
xor
inc
test
fs
pop
insb
das
sbb
push
sahf
or
inc
cmp
notl
fistpl
add
cmp
push
mov
push
xchg
xor
inc
jmp
jl
cmp
dec
test
iret
movsl
cs
lds
dec
ljmp
lcall
popf
jo
dec
adc
movl
into
add
add
fadd
movsl
pusha
jo
mov
in
inc
push
es
push
test
xchg
xchg
loopne
lods
leave
fnstsw
lock
mov
test
jo
je
add
daa
sbb
adc
sbb
lea
xlat
jns
rcl
in
lret
push
mov
and
jmp
ss
fwait
mov
xchg
or
or
mov
lret
mov
push
leave
lahf
jmp
push
xor
fists
or
flds
add
jl
imul
mov
mov
cwtl
inc
xchg
lods
das
call
and
and
add
out
adc
fstpt
sub
push
cmp
push
es
into
push
and
shr
xchg
jae
xchg
ror
jno
mov
dec
leave
mov
je
lods
test
insl
mov
and
mov
mov
leave
imul
push
xor
insl
inc
xor
mov
stos
add
negl
sarl
inc
shll
mov
adc
push
sub
jl
cmp
stc
lock
push
fisubl
inc
repz
jmp
loopne
dec
jecxz
adc
lret
add
ja
sbb
mov
dec
sub
out
mov
es
leave
adc
cmp
iret
je
mov
icebp
jne
lahf
xchg
insb
lahf
sbb
xlat
or
and
lock
mov
jp
arpl
add
dec
jae
sub
insl
adc
imul
dec
mov
xchg
mov
sar
pop
push
or
mov
mov
fisubl
hlt
push
or
push
xchg
add
mov
stos
add
mov
nop
out
mov
pushf
inc
inc
cmc
push
add
cmp
adc
xchg
fistl
pop
xor
cltd
pop
xchg
xchg
mov
jno
lods
sbb
roll
cwtl
scas
mov
cmpsl
cmp
iret
and
mov
mov
out
jbe
loope
inc
inc
fcoms
add
fcomp
stos
fdivrp
push
nop
and
pop
shrl
mov
shrb
outsl
cmp
lahf
fisubl
test
sbb
daa
xchg
test
test
lds
sub
push
sub
out
lahf
stos
add
push
add
and
mov
cmp
cmp
test
nop
dec
fwait
dec
cwtl
push
inc
xor
mov
sbb
fxch
sbb
mov
test
push
adc
out
ja
mov
ljmp
push
sub
dec
rcr
lcall
leave
dec
mov
lcall
xor
sahf
adc
je
outsl
or
jns
loop
and
lods
das
push
lods
out
mov
or
or
or
pop
out
orb
jg
cli
cmp
test
cwtl
mov
inc
or
mov
jne
dec
dec
inc
call
xor
sub
cmpsb
pop
inc
push
fs
mov
cs
lahf
dec
sbb
push
shr
sahf
les
jle
pushf
mov
sbb
adc
stc
pop
push
and
aas
lock
push
cmpsl
push
pop
cwtl
out
xlat
pop
rcrl
fbld
cmp
lahf
xchg
aam
push
mov
les
jo
sub
imul
cmp
pop
cmp
shrb
inc
dec
hlt
imul
rolb
dec
push
je
mov
decb
jno
bound
cmpl
aaa
dec
add
sbb
pop
cltd
rorb
push
pop
jmp
aas
cmp
xor
fstpt
xchg
movsb
jecxz
jns
jne
paddd
push
dec
push
inc
sub
push
rcrl
icebp
inc
hlt
movsl
pop
fs
outsb
and
inc
ja
sub
fstps
dec
fs
mov
cwtl
inc
cli
jecxz
inc
shl
mov
mov
add
addb
xchg
pop
imul
insb
push
scas
inc
inc
mov
and
popa
popf
ds
ret
push
cmp
dec
mov
push
repnz
mov
cld
push
push
xor
inc
jge
pop
ljmp
or
inc
mov
shll
jmp
jne
push
subb
movsb
into
or
test
xor
ret
call
pop
std
loop
mov
xchg
xchg
sbb
mov
lahf
mov
lcall
mov
test
jmpw
xor
test
rorl
orb
int3
cs
mov
xor
sbbb
pop
xor
adc
or
and
and
popf
fadds
pop
clc
mov
add
mov
jns
ja
scas
js
sub
or
or
or
pop
fisubs
mov
pop
push
in
sbb
rcrb
or
fwait
push
mov
test
mov
pop
sbb
data16
inc
add
fidivl
ret
test
jbe
or
ret
fwait
push
adc
jb
loop
xor
lret
xor
test
and
xchg
inc
push
mov
fcmovbe
xlat
pop
mov
adc
rcl
fs
lea
adc
jb
push
mov
hlt
stos
xchg
inc
mov
pop
sub
testb
dec
inc
test
mov
mov
lods
daa
cmp
test
cmp
lahf
mov
inc
push
inc
in
lcall
add
mov
out
inc
mov
clc
fs
lret
pop
fcmovb
test
and
sub
les
mov
or
jne
mov
shll
in
inc
fidivl
and
cmp
cli
push
inc
insl
or
xor
xor
stos
cmpsb
out
push
scas
ljmp
or
cmpsl
in
xor
faddp
sub
inc
ret
xchg
pop
loope
and
mov
test
ret
dec
push
popa
aaa
dec
pop
ljmp
je
xor
hlt
xchg
sbb
mov
cmp
and
mov
call
pop
subl
mov
inc
or
push
sbb
test
adc
cmp
pop
pop
scas
inc
dec
sub
mov
mov
push
sahf
mov
cmpsb
imull
notl
xor
pmulhw
lea
aam
cmp
mov
push
push
inc
xchg
adc
ret
and
in
mov
lcall
sub
fs
mov
jge
out
dec
pop
xlat
fs
lret
into
bound
or
pop
xchg
mov
dec
aad
rcll
push
mov
mov
dec
sub
out
mov
jmp
sbb
dec
sub
sbb
sahf
jecxz
pop
clc
xlat
push
pop
pop
fidivrs
xorb
push
leave
jg
cs
or
pop
mov
xchg
cwtl
jl
mov
aaa
outsl
push
jb
jecxz
add
into
mov
mov
jmp
cmp
loopne
jp
cltd
sub
emms
mov
dec
inc
dec
cli
fisubs
js
imul
cmc
sub
dec
fisttpl
cli
cld
cwtd
testl
jge
imul
mov
test
ljmp
inc
in
inc
sbb
lahf
push
cs
icebp
push
ror
xor
in
imul
sub
lcall
cmp
add
mov
je
pop
add
xor
mov
adc
addr16
mov
pushf
mov
jg
xor
out
mov
and
dec
push
push
pop
fst
mov
sbb
push
xorb
cld
imul
or
insb
lea
fists
lcall
sub
cmp
in
cld
pop
cmp
xchg
testb
pop
mov
js
mov
inc
orl
cwtl
fdivr
movsl
shrl
psubb
ljmp
mov
cwtl
dec
pop
or
and
inc
aaa
pop
sahf
lods
inc
push
jle
loopne
cmp
dec
sbb
cmp
inc
mov
lret
and
rorl
ret
cmpsl
add
daa
inc
sub
pop
stos
push
fmull
in
xchg
jo
cld
gs
stos
out
jbe
xchg
xor
sbb
mov
leavew
scas
sub
push
mov
shrb
jb
adc
insl
push
sub
push
cmpsl
mov
call
imul
xor
inc
adc
outsl
xor
sbb
stc
mov
fs
add
add
jne
xor
aaa
cmp
jecxz
loopne
dec
cltd
pop
ds
outsb
lea
dec
outsl
in
rclb
inc
cmpsb
add
bound
sub
lea
test
ljmp
cmp
jecxz
data16
test
pop
lea
in
sbb
mov
inc
mov
lods
pushl
jb
addr16
bnd
adc
daa
jae
push
mov
xchg
repz
lods
and
xchg
push
xor
mov
inc
sub
fimull
rol
cmp
out
leave
cwtl
jno
xor
mov
cwtl
aam
jmp
jmp
repnz
mov
adc
leave
jge
iret
je
cmp
or
xchg
dec
pop
jmp
jo
add
jnp
cmc
stos
adc
mov
push
roll
sti
pop
push
hlt
pop
stos
inc
call
sub
cmc
push
arpl
mov
sub
loope
imul
pop
rcll
notl
xchg
int3
xor
shl
mov
xchg
jmp
lahf
dec
dec
stc
push
sub
daa
orl
test
fadd
mov
xlat
repz
je
sbb
push
jg
out
int
jns
lcall
in
aam
push
das
adc
xchg
lahf
arpl
lret
mov
loopne
jmp
xchg
stos
hlt
lfs
mov
xchg
pop
pop
dec
mov
push
rcll
jl
cs
push
and
push
fldt
mov
shlb
loope
xchg
fsubl
mov
and
jg
mov
int
jbe
outsl
lods
int
dec
repnz
loop
jnp
sub
repnz
ja
cmc
mov
xor
inc
mov
mov
std
dec
mov
std
sub
xchg
inc
das
test
push
ret
sbb
fdiv
or
cmpsl
xor
int3
fs
sarb
sbb
sub
cmp
into
push
stc
xor
jg
jge
xor
dec
push
cmc
adc
adc
pop
lea
shl
ss
add
clc
add
outsl
fstps
mov
lods
or
lret
inc
les
xor
stc
xchg
push
idivb
mov
lret
inc
mov
imul
mov
test
push
jb
stc
call
add
add
mov
mov
mov
addr16
out
add
cmp
push
out
mov
popf
fnsave
sub
mov
into
sub
mov
mov
mov
dec
scas
adc
sbb
dec
jg
sbb
cmp
add
push
ss
hlt
xchg
pop
add
rcrb
orl
rolb
subb
adc
mov
pop
fnstcw
xchg
mov
dec
aas
ds
iret
inc
or
xchg
dec
add
mov
jge
xor
cmp
mov
xor
imul
or
inc
aam
jo
push
dec
mov
push
scas
js
mov
outsb
xor
sarl
icebp
mov
aaa
xchg
xchg
adc
in
inc
mov
scas
pop
push
push
mov
pop
sub
test
sbb
ja
pop
inc
cmp
subl
pop
xlat
push
scas
and
icebp
in
out
mov
fisubs
push
fwait
lods
inc
ficoml
xorb
movsl
sar
out
push
jbe
int3
jae
lods
mov
inc
daa
add
std
mov
iret
rcrl
scas
fwait
sub
pushf
mov
in
jae
movsb
mov
adc
xchg
popa
addl
pop
mov
ja
mov
loope
sub
stc
jle
rcrl
dec
enter
sbb
mov
push
stc
adc
xchg
add
les
mov
loop
push
sub
mov
addb
push
dec
xor
stos
cli
popa
and
loop
insl
pop
pop
pop
or
sbb
mov
sub
enter
push
xor
mov
fmuls
stos
xchg
enter
add
jb
and
jnp
and
movsb
ljmp
into
hlt
jno
je
push
xchg
and
pusha
mov
adc
xor
mov
jbe
sub
mov
adc
xchg
sub
push
fwait
push
sarl
mov
test
ljmp
ret
add
mov
rorb
cmp
pop
test
int
aas
notb
inc
in
jbe
mov
dec
xor
xor
mov
mov
sub
aad
xor
and
repnz
mov
pop
mov
jns
and
testb
mov
push
mov
push
adc
mov
mov
jle
mov
sub
add
push
jl
out
int3
out
jb
adc
cwtl
aam
sbb
inc
sbb
dec
or
cli
or
xor
mov
fld
xor
add
inc
out
inc
rcrl
mov
fldl
out
mov
cmp
mov
ja
add
repnz
out
add
arpl
lock
adc
mov
int3
sbb
jns
out
pop
fcoms
cmpsb
sbb
jne
ss
cld
sbb
insb
sub
add
test
jp
nop
stos
cmp
les
repz
jl
aad
shrb
outsb
inc
pop
pop
mov
fsubs
sub
in
negb
jae
push
pop
xchg
outsb
std
sub
xor
sbb
pop
movsb
addl
and
scas
jecxz
insl
push
ret
cmp
mov
cmc
daa
ljmp
ret
dec
and
sbb
call
and
test
into
cs
movsb
mov
lock
icebp
jnp
jnp
mov
inc
xchg
mov
flds
ds
ljmp
call
ds
outsb
bound
jbe
mov
jb
cmp
mov
adc
cmc
push
mov
rolb
ja
out
and
adc
xor
add
jge
inc
loopne
xor
ss
sub
sub
and
inc
mov
scas
scas
cld
dec
inc
and
mov
xor
inc
mov
lods
sarb
sbb
inc
push
cmp
xor
and
push
leave
scas
xor
pop
pushf
mov
mov
shll
jno
std
call
dec
mov
insb
jb
xor
lea
insb
adc
in
xlat
or
push
repz
fld
cmpsb
nop
mov
dec
inc
lret
dec
fistpll
mov
or
xchg
pop
test
mov
roll
sub
or
leave
cmc
int3
adc
cmp
out
jo
imul
ficompl
sbb
out
and
das
test
mov
jmp
dec
inc
mov
mov
leave
cmp
imul
aam
pop
mov
jecxz
fisttpll
imul
sti
push
mov
pop
sub
dec
lret
fistps
mov
clc
mov
lods
fmull
inc
pusha
xchg
insb
shl
cmp
cmp
jo
jae
lret
pop
in
gs
aaa
lahf
push
dec
int3
lahf
lock
mov
mov
cmp
aad
ljmp
aad
pop
xor
int
sahf
sahf
int
dec
push
mov
and
mov
jo
jno
and
sub
mov
cld
sti
ret
lods
shl
inc
leave
dec
insl
inc
xor
cmp
std
mov
sbb
pop
pop
sub
mov
fwait
jg
mov
aaa
mov
pop
inc
pop
mov
fs
pop
pop
adc
lock
xor
jnp
stos
adc
insl
sbb
mov
loope
jle
mov
je
out
scas
or
inc
daa
lret
lret
fnstsw
test
je
sbb
xor
fwait
imul
add
test
xchg
mov
add
pop
sub
jmp
outsl
pop
or
arpl
push
mov
lcall
or
push
and
stos
mov
mov
and
pushf
xchg
repnz
cmp
jae
aaa
and
jg
mov
inc
stos
sub
out
pop
pop
xchg
cmp
adc
xchg
in
popa
adc
movsb
xor
nop
pushf
lea
cmpb
repnz
sahf
jnp
in
cltd
lock
or
mov
jns
repz
sub
repnz
popf
movsl
int
and
xor
or
lret
ss
xchg
cmpsl
jecxz
fisubl
add
jmp
adc
lods
jae
lods
shll
bound
imul
test
lock
into
js
aaa
add
mov
cmp
xchg
stos
movsb
xchg
mov
adc
sub
jecxz
mov
insl
add
ljmp
cs
addr16
movsl
mov
aas
dec
lret
xchg
mov
out
inc
idivl
xchg
sarb
rcr
cs
aas
or
and
adc
add
rcrl
cmp
push
rcrb
sub
mov
in
adc
mov
add
sbb
std
in
jae
or
out
fwait
dec
aam
cld
les
xor
lods
call
mov
cmpsb
xlat
xchg
ljmp
lea
daa
cmpsl
cmpsb
call
pop
or
jl
pop
or
mov
into
js
jecxz
imul
pop
add
cmp
jnp
imul
sbb
cmpl
mov
pushf
dec
in
scas
dec
mov
dec
pop
mov
dec
mov
ficoms
outsl
test
popa
das
pushf
xlat
xchg
pop
or
and
adc
repz
sbb
push
add
adc
mov
ja
adc
std
int3
push
or
fldcw
inc
mov
or
imul
pop
in
cmp
xor
xchg
movsl
fstpt
sbb
mov
cmpsl
mov
es
in
and
test
push
or
adc
je
ret
push
dec
sub
std
fmuls
das
add
xor
lahf
test
push
push
ficoml
movsb
inc
mov
mov
jmp
fwait
outsb
out
repnz
mov
test
inc
fmuls
cwtl
or
jb
push
sti
sub
icebp
xchg
push
das
in
pop
mov
inc
fldl
mov
popa
bound
idiv
js
xor
shrl
repnz
lock
ret
stos
je
pop
add
sub
mov
cmpsl
jmp
adc
cli
and
stc
push
jne
paddsw
test
push
stos
mov
push
mov
dec
pop
mov
test
jno
ret
mov
lock
push
inc
or
out
insb
adcb
xchg
es
cltd
lret
dec
jns
lea
xor
inc
ret
pop
icebp
push
lcall
sahf
xchg
inc
pusha
jno
or
xorl
data16
mov
mov
mov
or
mov
xchg
stc
push
push
xchg
dec
xchg
int
or
push
add
or
outsl
mov
addr16
out
lods
jg
mov
adc
repnz
ljmp
mov
mov
push
mov
lahf
push
mov
jle
sbb
inc
aad
das
push
lock
jmp
push
imul
jp
mov
andl
cltd
cmp
and
jecxz
lock
insb
subb
push
sub
pushf
and
enter
cmp
mov
mov
sbb
daa
aam
sbb
dec
sub
pop
popa
push
pop
fidivl
ror
jecxz
adc
ret
int
fisubl
mov
mov
fisttpl
sub
repz
movl
and
mov
sbb
fcmovbe
stos
lock
sub
jl
outsb
lret
ja
mov
pop
xlat
leave
mov
es
push
cmp
cld
loope
pop
cmp
ds
xor
aad
push
adc
xor
push
ds
rcr
test
add
add
dec
shlb
rol
daa
jmp
dec
push
loopne
mov
adc
test
jmp
pop
rorl
push
in
adc
out
inc
mov
int3
enter
fstpl
ja
cltd
and
nop
cmp
mov
lock
dec
or
ret
or
out
add
jle
push
sub
mov
adc
cmpsb
and
mov
push
cmp
push
pop
in
xlat
sbb
xchg
loopne
jb
pop
inc
ffree
mov
icebp
mov
les
add
dec
jno
push
pop
and
lods
xchg
push
inc
push
inc
lret
cli
lret
jmp
test
jns
adc
mov
adc
cli
out
jno
push
jo
sub
xchg
or
stos
add
rcl
mov
lds
lahf
or
pop
jns
mov
and
pushf
pusha
hlt
stos
psubsb
adc
xchg
adc
mov
bnd
ljmp
ss
push
mov
mov
jecxz
push
and
aad
jno
add
fsts
hlt
in
sub
fimull
lret
jmp
lret
mov
mov
decb
mov
mov
lret
and
sbb
xchg
jo
dec
js
jnp
push
sub
inc
mov
or
pop
orb
rcrl
loop
inc
pop
sarl
popf
jnp
sbb
xchg
xchg
mov
pop
stos
pop
call
mov
aas
fdivp
arpl
or
xchg
mov
mov
fdivs
push
cld
je
mov
int
and
adc
out
pop
jb
pop
and
movsb
push
push
out
dec
mov
mov
out
movsl
jbe
or
and
dec
out
adc
in
test
aas
jne
fstps
adc
dec
cwtl
or
adcb
mov
dec
mov
pop
mov
dec
fcoml
sbb
inc
addr16
data16
mov
add
mov
add
pushf
out
pop
or
enter
xchg
shlb
xchg
push
lods
adc
enter
sub
xchg
push
inc
cltd
and
inc
mov
cmp
cmp
cmp
push
add
cs
mov
pop
sub
jmp
loope
das
pop
dec
ret
lahf
jmp
push
arpl
ja
push
mov
out
jnp
ret
leave
adc
rol
int
in
xlat
pop
jle
roll
jne
inc
nop
and
pop
loope
subl
add
movsl
aad
jns
or
scas
cmp
inc
loop
or
push
dec
out
jmp
push
stos
call
xor
cmpsl
hlt
pop
jo
loopne
mov
cmp
scas
and
out
mov
ret
icebp
addb
lods
ficompl
and
movb
loop
adc
jne
inc
stc
adc
xor
push
ret
pop
sub
xor
les
push
pusha
lock
addr16
cli
push
xchg
mov
aad
push
iret
push
loope
mov
ss
xchg
imul
movsl
pop
testb
adc
mov
je
jo
in
loope
inc
mov
pop
lcall
push
cmp
cli
outsl
sti
pushf
test
or
stos
pushf
xlat
inc
mov
in
push
lea
int3
cmp
xchg
aad
lret
test
mov
xchg
ds
jae
cmpsl
xchg
test
inc
jns
dec
popf
cmp
movl
das
clc
pop
add
ds
popa
orb
neg
mov
sbb
push
enter
sub
xor
mov
inc
sbb
dec
jbe
or
aaa
add
mov
andb
into
js
inc
stos
in
ret
outsb
jae
mov
jo
mov
repnz
mov
add
push
adc
mov
subb
mov
add
push
push
movsl
jb
insb
jbe
xlat
mov
rolb
dec
sub
bswap
mov
jg
sbb
jecxz
aas
mov
scas
bound
mov
xchg
loop
in
call
mov
inc
inc
dec
lret
sub
bnd
jns
out
push
js
dec
sbb
inc
cmp
pop
test
fwait
aaa
fisttpll
js
mov
jo
lock
movsl
sub
adcl
imul
lds
mov
pop
inc
lds
cltd
adc
nop
movsl
adc
jno
inc
rcrb
pop
insl
clc
rorl
movsl
jne
jns
push
mov
jne
stos
push
cmp
sub
inc
xchg
cmp
jnp
add
fldt
insl
sub
xchg
aad
xchg
push
sbb
in
or
sahf
pushf
imul
adc
sar
sbb
jle
scas
cwtl
mov
popf
add
cli
or
xor
insb
jb
xlat
and
add
jp
cmp
xchg
fldcw
les
mov
xchg
lcall
lods
es
insl
jmp
loopne
add
jp
dec
jle
pop
cmpl
cmp
test
cmp
repnz
adc
repz
xchg
lret
fisttpl
cli
and
xchg
popa
push
dec
pop
sbb
mov
jno
pop
inc
and
pop
test
lock
rolb
add
test
lods
add
imul
push
dec
lahf
dec
test
lcall
mov
jecxz
imul
sbb
fidivs
lock
mov
sti
or
les
or
pushf
xchg
ficoms
std
adc
bound
mov
aas
in
lret
pop
mov
cltd
dec
xchg
sub
jg
cmp
shr
mov
fisttpl
cmpsb
test
mov
insl
lret
leave
sub
push
add
into
mov
subb
sbb
jne
adc
push
push
mov
cmp
subl
clc
rolb
mov
cmpb
xchg
mov
sub
cmp
or
mov
cwtl
pop
in
xor
jecxz
inc
pop
jo
xchg
jmp
outsl
jns
lcall
inc
dec
pushf
mov
mov
jecxz
sbb
test
pop
sbb
clc
and
xor
movsl
xlat
fmulp
adc
mov
xchg
cld
dec
pop
mov
fstl
sub
and
repz
mov
out
or
je
neg
add
pusha
cmpsl
push
adc
jb
mov
jg
pusha
adc
out
test
jbe
add
push
or
jle
aaa
sub
jp
shrb
inc
enter
push
ds
fs
bound
popf
push
pop
andb
js
outsl
push
cwtl
cld
fistps
jge
pop
cwtl
fxch
nop
jge
sahf
das
outsb
pop
mov
mov
repnz
addr16
adc
xor
lret
mov
pushf
lret
mov
jne
pop
xor
pop
cmp
aas
cmpsb
adc
fnstcw
jmp
pop
add
lods
stos
jecxz
stos
repnz
adc
subl
cs
jb
mov
push
dec
arpl
cmp
xchg
sbb
lods
dec
dec
push
jle
adc
shrl
bound
xchg
in
fmul
push
jecxz
mov
xchg
mov
or
enter
ds
sahf
fmull
pop
or
pop
inc
movsl
pop
fdivs
inc
into
xchg
or
mov
mov
jae
mov
fisubrs
fcomip
fsubs
test
xchg
shll
outsl
cmp
lds
stc
mov
cmpsb
sahf
lcall
mov
sbb
mov
popf
inc
enter
mov
out
dec
cmp
scas
dec
push
jle
mov
or
sbb
sbb
lret
popa
addr16
dec
mov
scas
sub
scas
or
sahf
gs
cmp
pop
imul
jae
in
add
shrl
add
jecxz
xchg
or
xchg
or
scas
push
sahf
inc
pop
add
pop
xlat
arpl
arpl
clc
ficoml
stc
int
hlt
lea
and
inc
aam
cmp
je
push
xchg
mov
das
in
pop
sbb
iret
insb
mov
stc
and
jge
pop
mov
cmc
call
pop
mov
pop
push
into
sbb
sub
popa
jnp
stc
mov
jno
or
je
js
or
arpl
mov
dec
dec
fsub
lods
xchg
inc
subb
xor
fcmove
cmp
sbb
pushf
mov
jg
mov
testl
ja
lock
daa
cmp
sub
xchg
jb
and
decb
jmp
pop
bound
pop
nop
out
xor
es
lock
orb
xor
pop
mov
test
add
pushw
xor
push
and
and
pop
movsb
xor
fbld
dec
xchg
or
int
add
mov
ret
clc
xchg
mov
test
or
inc
push
movsb
dec
dec
mov
call
clc
movsb
inc
in
subl
out
aas
js
xchg
sub
add
test
js
lods
cmp
add
mov
bound
mov
ja
nop
or
push
repz
push
mov
mov
add
adc
leave
jp
cmp
rol
test
lahf
inc
outsb
lods
jl
mov
fiaddl
push
or
movsb
fstpl
lock
pop
scas
loop
push
pop
repz
mov
pop
or
mov
jnp
fld
cli
sbb
dec
fbstp
je
bound
out
js
int3
sub
cmp
test
pop
pop
cs
mov
jne
inc
sbb
mov
push
pop
outsl
incl
or
sub
jg
notl
push
sbb
bnd
decb
out
ss
rcrb
sub
dec
cmp
out
mov
push
push
dec
leave
or
imul
sub
jae
cli
jg
outsl
xor
or
push
adc
sub
inc
fsubs
repz
inc
andb
inc
lahf
leave
push
jp
and
imul
shlb
fmull
inc
jle
mov
push
mov
cmp
adc
inc
test
fwait
insl
jl
inc
pop
loopne
mov
lods
dec
decl
dec
pop
xchg
mov
ret
sbb
jecxz
xchg
shrb
mov
xchg
mov
inc
xchg
jp
loopne
mov
mov
stc
dec
adc
sub
mov
ja
sarl
mov
sub
nop
mov
jle
adc
lock
jnp
cmovnp
inc
cmpsb
push
lahf
lods
ljmp
ret
adc
pop
out
push
or
sub
jle
negl
je
lret
gs
mov
je
jb
push
lock
fsubl
jp
sub
or
pusha
pop
aaa
fldt
fsubr
insl
jl
ss
mov
enter
xchg
imul
sub
test
or
jl
push
cmp
pushf
add
pop
mov
cmp
mov
pop
roll
cmc
and
and
es
cmpsb
clc
fisubrs
push
inc
cmc
testl
sbb
inc
jbe
and
or
icebp
xchg
sbb
fiadds
add
loope
icebp
push
jge
bound
cmp
mov
shll
cmp
enter
mov
cs
mov
mov
subb
push
cmp
push
daa
cmpsl
add
hlt
sar
insb
xchg
sahf
movsl
mov
jbe
xchg
in
mov
xchg
in
test
sbb
lds
repz
inc
sbb
dec
imul
sub
mov
sub
int3
jg
mov
insb
sarl
push
cmpsb
cmpsb
and
sbb
cltd
inc
jmp
dec
xor
mov
mov
pop
push
or
imul
inc
inc
sbb
xchg
paddusw
mov
sbb
dec
dec
stc
inc
jns
add
test
adc
mov
jle
shll
xor
loopne
cmpsb
ljmp
inc
mov
test
es
imulb
xchg
xchg
es
push
mov
xchg
fisubrs
shl
gs
inc
mov
push
dec
mov
out
inc
dec
cli
sbb
dec
fwait
xor
or
nop
jns
in
adc
sbb
scas
cmp
jmp
imul
mov
mov
mov
jns
loop
es
test
xchg
dec
inc
enter
mov
fnstcw
arpl
pxor
inc
cmp
jg
mov
movsl
adc
insl
adc
inc
cmp
pusha
repnz
and
or
lods
cmp
sarl
cmp
jno
sbb
divb
fs
out
insl
imul
push
jbe
enter
fs
mov
std
pop
or
pop
cmpsl
pop
mov
loop
adc
mov
insl
mov
sti
mov
jnp
sub
mov
fldt
mov
mov
fnstcw
dec
ror
sbb
movsl
insl
fistl
movsl
fucomp
mov
sub
xor
inc
push
or
loopne
sbbl
mov
push
cli
shll
mov
in
clc
dec
test
mov
ss
inc
scas
or
int3
mov
cltd
jb
mov
mov
imul
push
push
and
mov
inc
out
xchg
mov
pop
lds
pop
insl
push
mov
xor
mov
ljmp
loope
inc
sbb
pop
test
xorl
xor
pop
ret
pop
xor
ljmp
xchg
mov
xor
sbb
cmp
jb
add
lods
inc
cltd
clc
shl
jno
movsb
mov
and
inc
divb
lahf
or
lcall
iret
cmpsl
pop
scas
xor
lcall
frstor
sub
or
imul
and
into
cmp
add
jo
jne
aam
jns
xchg
inc
add
pushf
cld
inc
xor
xchg
mov
loopne
fstpt
out
test
out
lea
data16
pop
scas
push
enter
cmpsb
rcll
xchg
stos
in
ret
sub
and
push
pop
int3
aaa
xor
repz
aaa
push
add
sbb
movlpd
pop
push
cmp
dec
xbegin
sbb
test
and
sub
jo
cld
lods
clc
setnp
repz
daa
sub
push
cmp
cmp
cmp
xchg
xchg
ret
je
adc
gs
roll
pop
sahf
or
iret
je
mov
sbb
xor
adc
mov
or
mov
lret
jne
scas
dec
pop
cmp
ljmp
out
cmp
stos
scas
lret
fcom
rcr
fucomi
in
sbb
sarl
sub
cmc
bound
push
or
xor
adc
mov
ret
in
push
ja
mov
xchg
inc
faddl
faddl
or
and
lahf
stos
cmp
sub
xor
push
push
push
mov
or
scas
inc
into
cld
jnp
mov
add
lahf
xor
or
ret
mov
dec
cmpsb
hlt
repz
sub
add
faddl
jge
and
cli
or
cmpl
sahf
ds
sub
out
inc
and
push
adc
pop
testb
dec
push
cmovbe
sub
adc
jno
mov
je
dec
pop
xchg
cmp
mov
outsl
or
dec
outsb
push
lds
jecxz
push
iret
cli
pop
xchg
repz
jnp
fwait
pop
fwait
and
outsl
push
test
fdivs
in
cmc
sub
push
inc
sub
or
cmp
test
popf
add
std
stc
jnp
mov
mov
fildl
pop
jbe
in
add
fildll
dec
xor
xchg
loop
int3
int
push
clc
jg
lock
xchg
mov
jbe
sbb
add
lret
dec
fimull
fisttps
fs
push
xor
es
inc
mov
push
out
aad
call
or
hlt
bound
sub
in
cwtl
adc
cld
lock
cmp
cmp
or
sbb
sti
inc
test
add
mov
xchg
cmpsl
push
ud2
push
jg
and
mov
xchg
sub
movsl
xor
fisttpl
mov
arpl
sub
inc
or
lret
xchg
pop
sub
xchg
aaa
bound
paddusb
sub
push
lahf
ret
sar
inc
ljmp
jecxz
out
pop
push
and
cmp
lods
inc
adc
insl
or
mov
jmp
dec
bndstx
fistpl
and
cmp
dec
in
adc
sub
gs
sub
ret
sbb
mov
pop
mov
jb
mov
mov
arpl
outsb
pop
aam
ret
ja
imul
into
test
bnd
cmovp
and
scas
jp
pop
cmp
push
stc
ja
adc
pop
inc
sbb
cmp
movsl
mov
sub
enter
fisubrl
and
mov
jg
vmovsldup
cmp
faddl
sbb
stos
lods
xor
pop
push
push
call
leave
push
insl
call
cmpsl
sarb
xchg
in
cmp
mov
dec
ret
xor
bound
mov
mov
pop
or
push
fs
out
adcb
mov
outsl
aas
dec
or
mov
sub
jl
sub
sbb
adc
mov
jmp
stc
xchg
xchg
fcoms
es
lea
lret
clc
mov
mov
stos
mov
add
adc
mov
fstpl
sbb
jge,pn
movb
push
dec
add
in
dec
xchg
sub
push
push
dec
add
sub
and
pop
dec
dec
mov
shll
das
push
or
xchg
lcall
in
stc
fadd
mov
sub
pop
xchg
cwtl
add
stos
test
les
lret
into
mov
daa
mov
int3
sub
xchg
loopne
stos
rclb
hlt
gs
imul
sbb
xlat
aad
cmp
repnz
mov
je
in
mov
mov
cld
cmpsb
and
call
in
push
cmp
push
enter
xchg
add
mov
jno
es
adc
gs
lahf
sahf
xor
adc
pop
enter
sub
cli
lods
and
add
pop
lods
lock
dec
push
out
xchg
and
xor
inc
out
aad
jns
pop
cmp
push
or
psrld
mov
sub
add
push
xor
or
negl
add
lcall
inc
imul
adc
cld
insb
sbb
out
dec
test
out
push
sbbb
and
inc
xchg
or
mov
int
add
xchg
or
xorl
push
dec
mov
cwtl
xchg
pop
pop
addr16
dec
scas
adc
jmp
mov
imul
cld
push
or
add
mov
jno
std
ljmp
outsl
aam
and
mov
mov
mov
jp
sub
fs
pop
mov
sbb
jle
daa
cmpl
es
jb
jg
sbb
inc
mov
bnd
xor
sub
ja
add
xchg
decl
cmp
jbe
jl
xor
xlat
and
nop
int
pop
imul
sub
mov
push
mov
mov
stos
dec
cmp
retw
addr16
fidivl
jno
loope
adcl
icebp
popa
insb
popf
int3
lods
lcall
sbb
sahf
cmp
fsubrl
and
fdivl
mov
repnz
mov
nop
fistpl
decl
mov
adc
jno
push
pop
pushf
in
mov
fisubl
cmc
daa
push
xchg
mov
bound
sbb
mov
std
stos
rclb
push
test
cli
das
sbb
lock
ljmp
sub
fucom
movsb
mov
mov
sarl
decb
jle
iret
sub
or
adc
imulb
shll
pop
jecxz
filds
push
xor
cmp
jb
stos
fdivrs
inc
adc
adc
jmp
mov
int
and
mov
out
inc
ds
cmp
dec
add
shrl
fstpt
loopne
scas
cmp
cli
push
lret
push
mov
scas
push
pop
aam
mov
hlt
js
int
dec
pop
add
out
jecxz
sub
jns
call
xor
jnp
xorb
mov
or
adc
fwait
mov
jno
sbb
mov
jno
cltd
fwait
ljmp
mov
andl
pop
mov
sti
pusha
out
ja
loope
xor
in
mov
test
mov
scas
in
pop
aam
mov
sbb
sahf
cmp
outsb
xchg
call
adcb
mov
mov
lds
push
mov
js
sub
dec
add
push
sub
clc
xor
fadd
cld
fmull
xor
and
xchg
mov
or
inc
movsb
and
mov
cmp
pop
scas
jp
push
xor
out
in
cvtpi2ps
mov
ret
add
int3
cmp
mov
sbb
shll
adc
jecxz
inc
jle
sbb
cmp
jmp
insl
cmp
fdivrl
subl
daa
push
adc
int
cmpsl
movsl
out
push
out
jb
loope
add
popa
lret
and
push
iret
aad
jmp
ds
sbb
xchg
add
jp
or
addl
divb
iret
mov
adc
mov
xchg
movsl
mov
add
push
decb
test
gs
xchg
xor
xchg
dec
fmulp
sti
fdiv
dec
xchg
xchg
test
outsb
jno
imul
jno
rorl
push
push
das
orl
rorb
test
cwtl
xor
sbb
xor
sub
out
test
in
scas
push
adc
jnp
leave
push
or
jno
jp
adc
popf
icebp
dec
dec
popa
push
rolb
popa
test
push
sub
mov
mov
lahf
pop
and
add
jge
jae
cmp
add
pop
xchg
sbb
fsubrl
sti
dec
xor
mov
and
in
xchg
daa
ss
pusha
pop
xor
cmp
adc
xor
popf
loope
std
aam
add
int
push
sbb
pop
xor
repnz
or
push
test
or
gs
test
sub
cs
sub
adc
inc
outsl
aaa
inc
pop
push
lock
jmp
out
mov
std
or
inc
xchg
data16
addr16
jge
out
inc
pop
lds
lcall
lahf
call
mov
mov
movsb
pop
sbb
in
cmp
xchg
add
enter
movsl
dec
sub
cmp
inc
int3
or
cs
push
add
dec
ja
or
cli
int3
clc
gs
test
sarl
out
cmpsl
or
test
aam
pop
xchg
scas
and
lret
lret
jg
pop
ss
mov
sbb
or
xchg
ret
rorl
fidivs
cmp
aaa
xchg
dec
adc
xor
push
mov
dec
cmc
ja
inc
xor
aam
icebp
out
pushf
mov
mov
into
lahf
outsb
sbb
mov
fidivs
scas
adc
test
ja
and
pusha
data16
cmp
test
int
mov
sbbl
cmp
test
push
cltd
mov
repz
popf
aam
out
mov
out
xor
inc
dec
pop
adc
and
std
fcoms
bound
cmp
add
mov
addr16
cltd
ret
push
add
popa
mov
jp
in
xor
cltd
iret
jecxz
jno
push
unpcklps
cmp
into
das
mov
xchg
push
vmovaps
sbb
inc
push
add
sbb
cmp
push
push
xchg
repnz
imul
mov
or
sbb
fcmovbe
movsb
jno
jp
gs
imul
test
out
jnp
daa
scas
sub
push
shrb
or
nop
ficompl
int
iret
inc
lods
cmp
sarl
sbb
int3
cmp
dec
js,pn
daa
xor
sub
mov
mov
lds
cli
ret
inc
into
and
shrl
ds
inc
mov
mov
shr
scas
sbb
std
mov
adc
inc
mov
insb
sbb
sbb
sbb
addl
dec
mov
cs
les
add
out
fisttps
mov
cltd
mov
out
pop
inc
aad
add
mov
cmp
adc
inc
and
jge
in
push
aam
loope
adc
in
cmpsb
or
cs
shrl
or
sub
mov
test
lahf
xor
movb
xchg
inc
dec
add
imul
enter
movsb
adc
or
push
pop
mov
or
jno
sbb
shlb
out
jl
test
out
mov
mov
xor
mov
cli
lret
push
cli
adc
repz
add
outsl
sub
testb
or
aas
mov
xor
sarl
xchg
out
dec
sbb
mov
mov
out
cmp
or
icebp
xchg
push
icebp
pop
es
cwtl
sar
cwtl
jp
clc
cmpsl
loope
ss
sbb
or
leave
std
jae
cmp
mov
xchg
sahf
xchg
loopne
in
xchg
push
mov
add
xor
popa
aad
repz
cmpsl
dec
arpl
aas
in
lcall
clc
je
ljmp
mov
ret
sub
lcall
inc
clc
lods
enter
cmp
cmp
fwait
mov
shlb
lret
ds
xor
cmc
cmp
or
push
pop
bnd
xor
hlt
jbe
and
adc
arpl
inc
pop
push
loope
push
ja
mov
movsl
popa
les
cwtl
jae
js
clc
inc
sbb
adcb
iret
and
das
xchg
in
scas
ja
xor
xchg
cmp
adc
sbb
xchg
mov
push
dec
dec
push
adc
into
add
or
scas
jmp
outsb
fnclex
nop
xor
repz
call
or
loope
push
push
stos
pop
and
dec
call
cld
das
call
push
sub
jle
pusha
add
pop
loope
out
ficompl
stc
dec
icebp
in
sti
mov
inc
xor
pop
jnp
push
std
xchg
cmp
xchg
dec
push
cwtl
sbb
popf
mov
mov
rcrl
sub
xor
pop
nop
push
adc
xchg
scas
fidivl
mov
pushf
sub
shl
xor
lods
xor
adc
into
xchg
int
mov
inc
push
loop
adc
incl
add
scas
pop
push
cmp
lahf
scas
lea
aad
shrl
je
lret
mov
jmp
mov
and
fld
fistpll
in
leave
scas
sbb
or
fisttpl
sub
test
es
xchg
xlat
dec
push
mov
nop
jge
int
inc
lret
test
dec
push
or
aam
xor
push
hlt
cmp
enter
scas
pop
stos
in
and
loopne
lock
pusha
pop
xor
invd
mov
icebp
inc
xchg
and
inc
shrb
loop
loope
cmpsb
testb
je
or
call
jmp
lret
xchg
out
ljmp
fisttps
pop
out
dec
js
jae
imul
xchg
dec
fsubl
inc
pop
push
loop
loop
xchg
mov
ret
sbb
push
push
push
stos
pop
aas
and
mov
int
stos
jp
mov
rcll
mov
jbe
stc
pop
aas
fcmovbe
mov
lds
ret
add
jns
out
icebp
sub
mov
outsl
adc
div
shrl
rclb
lods
push
jmp
lcall
add
mov
mov
insl
sub
in
aam
jbe
cmp
cmpsb
xchg
dec
cmc
sbb
push
scas
or
push
adc
add
sub
int
mov
imulb
popf
or
and
dec
jl
ficompl
ja
pop
pushf
cwtl
icebp
mov
xor
inc
push
cwtl
add
loope
testl
test
inc
mov
xor
sbb
mov
pop
sti
lcall
or
inc
test
push
repz
adc
test
dec
test
mov
std
push
test
cmpsb
or
arpl
leave
push
insl
outsb
outsl
cmp
add
sbb
push
in
pop
mov
pop
dec
fldl
adc
outsb
lret
inc
cmp
dec
imul
jo
lds
imul
cmp
mov
andl
jl
movsl
jle
ficompl
aad
xchg
jmp
lcall
mov
sub
and
jl
push
ud0
mov
sbb
jmp
adc
call
mov
iret
call
mov
pop
sub
je
cli
sub
subb
cmp
test
sbb
sbb
cmp
fdivs
hlt
dec
mov
cmpsb
lret
xchg
sub
lret
jnp
roll
mov
jb
cli
negl
adc
xchg
mov
adc
inc
out
imul
imul
cmpsb
out
jbe
pusha
inc
push
fs
add
daa
push
call
sub
loopne
repnz
iret
pop
cs
or
xorl
cmp
repz
sub
outsb
sbb
inc
popf
and
push
mov
cld
mov
movsb
shll
inc
pusha
or
mov
jo
stos
sbbb
add
fsubs
sub
jmp
sbb
or
sub
insl
or
std
cli
dec
mov
addb
mov
mov
add
icebp
out
or
in
mov
aas
lahf
mov
cmpsb
ja
loopne
sbb
push
xor
ret
adc
lar
sbb
pusha
adc
setns
pop
xor
add
jecxz
mov
incb
and
in
sbb
sahf
sbb
or
sar
inc
and
and
push
mov
or
cwtl
sub
ret
in
mov
stc
mov
add
rcl
shlb
jo
test
adc
xchg
jae
lcall
or
stos
in
push
pop
mov
mov
pop
inc
xor
or
fstps
mulb
jp
pop
arpl
xchg
or
test
movsl
push
data16
movsl
inc
testl
or
dec
cltd
daa
dec
dec
cmpsb
hlt
jno
ss
and
imul
les
inc
test
or
loopne
push
adc
cmp
je
inc
movsb
bound
sbb
mov
xor
jb
xchg
jb,pt
mov
mov
xchg
xchg
add
mov
js
cmpsl
out
out
dec
repnz
jg
andb
mov
outsb
jecxz
addr16
push
add
mov
xchg
outsb
outsb
lea
int
cmpsb
pop
pop
shll
daa
jp
or
and
and
clc
and
es
shll
add
adc
mov
adc
jae
sbb
mov
and
cmp
xchg
stos
xor
das
dec
ljmp
rcr
lods
lods
or
sub
aaa
add
movsb
popa
inc
inc
movsb
mov
loopne
push
mov
pop
add
mov
mov
in
sar
lods
mov
pop
or
stos
cmpsl
mov
pop
xchg
out
sti
leave
xchg
imul
xor
ret
decb
mov
mov
jl
or
mov
movsl
test
sti
ret
sarl
das
fbld
rcll
push
gs
repnz
sub
fwait
cs
rorb
mov
shl
mov
inc
jge
inc
xor
dec
inc
fistps
loop
mov
jne
ror
test
imulb
pusha
add
xchg
out
movsl
and
push
inc
push
stos
mov
mov
daa
les
pushf
push
ds
mov
lret
fisttpl
in
inc
jle
and
mov
repnz
sbb
std
rolb
mov
dec
jl
or
xor
out
mov
jmp
sbb
cltd
fnstenv
pop
mov
push
scas
jge
ja
inc
in
dec
cmpsb
xchg
popa
hlt
adcb
jo
add
popa
xchg
jbe
das
inc
dec
clc
cmpsb
sub
push
xchg
or
pop
sbbl
pop
stos
fimuls
rclb
cmp
stos
test
ret
mov
dec
shl
or
loop
jne
dec
in
nop
adc
sbb
push
pop
pop
dec
in
xor
push
cmp
mov
add
adc
ret
montmul
cmpsb
add
lds
imul
idiv
fistl
popa
mov
loopne
xchg
inc
cmp
and
cmp
jno
add
push
ja
sub
neg
lds
mov
fldenv
es
out
fsubl
cmp
dec
bound
mov
in
mov
dec
out
jb
push
xchg
and
je
mov
inc
leave
daa
stos
loop
jg
sub
push
dec
push
mov
insl
adc
mov
or
sub
das
jmp
sbb
sub
out
mov
jge
sbb
dec
sbb
push
pop
lahf
in
push
movlps
imul
sub
insb
mov
addr16
dec
das
das
mov
stos
adc
daa
lret
fsubl
and
pop
addl
lods
in
push
ret
sahf
pop
ljmp
call
addr16
jno
dec
ja
xchg
fmul
add
jle
cmp
cld
test
pop
mov
shll
xor
fs
cmp
cmp
ss
mov
xchg
push
push
xchg
dec
jo
push
addr16
push
subb
pusha
pop
adc
mov
vminsd
add
shlb
mov
xchg
cltd
mov
push
push
push
scas
daa
popa
xor
pop
and
adc
mov
and
int3
rorb
inc
movsb
cmc
imul
mov
push
mov
mov
aad
pushf
and
cmpsl
stos
mov
daa
testb
divb
scas
lds
aad
inc
dec
jnp
add
sbb
mov
sar
pop
cmpsl
clc
ret
adc
adcl
je
popf
loopne
cmp
ljmp
scas
das
xchg
adc
push
inc
fnstenv
inc
push
lcall
xor
inc
stos
es
jae
mov
lods
out
int
jp
jnp
lods
ja
cmpsl
mov
aam
or
lret
ret
add
insl
jp
daa
cmp
cld
xor
cmpsl
pop
sbb
shll
fistps
and
xlat
xchg
push
int
xchg
dec
rorb
out
add
pop
mov
rclb
popa
cmpsb
pop
cmp
jle
cmp
imul
dec
rolb
pop
xchg
arpl
jmp
add
push
outsl
sub
xchg
push
imul
in
jge
pop
xchg
lahf
xchg
xor
sbb
cmp
popl
jmp
pop
cwtl
cmp
cmp
add
or
fsub
mov
mov
loope
ds
sbb
aas
and
imul
xor
jno
cmp
sub
int
push
lds
cmp
jb
shll
aad
loop
push
jge,pt
add
sahf
mov
je
call
mov
das
dec
sub
nop
push
cs
sbb
insb
sub
xor
movsb
cmpl
or
cmpsl
xor
inc
inc
push
ja
movsb
fisubrl
sub
inc
inc
movsl
jle
lret
inc
fdivl
arpl
sub
fmul
fidivrs
jg
pop
cmc
rolb
pop
xchg
scas
pop
dec
mov
mov
shl
add
mov
rolb
push
cs
or
pop
pop
sub
movntq
sahf
ficoms
jmp
pop
or
mov
in
int
jmp
adc
in
je
inc
push
cmp
cmpsb
dec
xchg
das
flds
jecxz
add
add
add
punpcklbw
hlt
cld
nop
stos
mov
test
pushf
push
sbb
es
mov
pop
xchg
cmpsl
or
inc
sub
mov
jae
sbb
loope
mov
mov
mov
imul
cmp
xchg
scas
xchg
divb
inc
push
jecxz
mov
div
dec
xor
cmp
jl
or
inc
dec
cmp
fwait
adc
mov
and
xchg
fsubr
xor
pop
mov
pusha
fisubl
jns
fnsave
js
mulb
mov
js
or
inc
mov
repnz
andb
lret
inc
movsb
cld
fs
fldenv
sbb
aas
mov
jmp
ds
mov
adc
jae
sub
outsl
aam
ja
lcall
or
mov
mov
xchg
push
imul
ds
mov
mov
jno
mov
out
jo
push
cmpsl
jecxz
xor
test
leave
fbstp
jno
shlb
xchg
adc
xchg
lea
sbb
daa
outsl
stos
inc
dec
cld
pop
push
push
sarl
ja
mov
jbe
in
loope
dec
ss
lock
pop
scas
sbb
cmp
mov
fidivs
pop
scas
jl
repz
not
add
xchg
mov
inc
pop
cmp
pop
rol
or
jmp
das
in
clc
mov
mov
lock
les
sub
rcrb
lods
or
pop
enter
test
and
popa
pusha
cli
push
fbstp
ret
aas
pusha
cmpb
outsl
add
xor
xor
push
mov
sahf
popa
les
pop
std
aam
or
mov
or
push
sub
mov
nop
inc
fisubrs
or
jecxz
into
mov
mov
lds
test
cmp
sub
mov
adc
shl
lock
gs
movsb
adc
mov
daa
hlt
outsl
gs
mov
jno
test
dec
pop
outsb
inc
pop
sahf
push
fsub
mov
mov
fwait
pop
inc
pop
sub
xor
int
and
fisttps
lahf
jmp
dec
cmp
cmp
pop
pop
inc
mov
ss
pop
pop
lods
adc
or
xor
xor
in
lret
in
mov
cmpsb
ja
mov
test
pusha
xchg
fdivrl
inc
jo
pop
adc
stos
std
mov
adc
sub
and
and
xor
adc
mov
popa
jp
jb
ror
movsl
sbb
mov
xor
jb
dec
cmp
or
scas
inc
je
fwait
aas
sub
std
lea
enter
cmp
push
call
iret
adc
or
fsubrp
xor
iret
mov
mov
dec
fs
sub
imul
inc
sub
int
adc
mov
ljmp
sub
stc
xor
rcrb
and
pop
aam
lds
cmp
lds
mov
es
sub
mov
xchg
pcmpgtw
bound
push
stos
stc
sbb
pop
loop
imul
sbb
and
sub
ljmp
cmp
xlat
inc
jecxz
clc
xchg
pusha
push
push
subl
dec
sbbb
pop
push
ret
sahf
gs
fadds
cltd
sbb
in
shlb
sarb
pop
cwtl
mov
mov
lret
in
sbb
roll
fidivl
int
mov
iret
and
cli
pop
inc
nop
movsl
stos
mov
pop
dec
decl
cmp
jb
pop
mov
fucom
mov
daa
and
lret
lds
dec
push
je
sbb
shl
pop
adcl
sub
lret
mov
pushf
sub
jmp
clc
imul
es
pop
inc
push
roll
lds
stos
loope
add
stos
fsub
cmp
jl
icebp
push
insb
sub
rcrl
push
test
gs
ret
mov
cwtl
inc
test
adc
pop
cmp
sbb
adc
add
push
cmp
mov
les
fisubl
leave
xchg
lds
sbb
ljmp
lret
push
lahf
int
mov
jmp
daa
cld
inc
cs
cmpl
pushl
ret
and
inc
pop
ret
inc
arpl
enter
stos
and
and
mov
ret
ret
or
ja
mov
sbb
int3
ljmp
mov
dec
pop
inc
shlb
loop
fsts
lcall
inc
inc
movsl
fstps
mov
sub
dec
dec
xlat
jo
cmc
aad
mov
movsb
imul
stc
cmp
lret
ret
movsb
or
adc
out
pop
push
ljmp
pop
xor
jecxz
or
or
jnp
cli
add
mov
mov
jb
sbb
cmp
sbb
cmc
push
cmp
imull
pop
and
or
ret
in
mov
icebp
test
mov
lret
pop
or
pop
clc
add
iret
or
push
clc
xchg
ljmp
incl
pop
lret
lret
pop
inc
sub
into
leave
mov
gs
cwtl
inc
cltd
fsubl
mov
sub
mov
rcr
jl
xor
mov
sbb
loop
mov
leave
cmp
or
outsb
flds
dec
subl
and
or
js
adc
push
xchg
in
sub
xchg
adc
fs
rcll
and
xchg
ds
mov
xchg
pop
jns
dec
add
sub
jmp
or
lods
pop
cli
xchg
sbb
sbb
repnz
daa
adc
inc
xor
ja
and
out
popa
aaa
incl
cld
rdpmc
sub
mov
dec
push
test
jnp
sbb
add
mov
clc
inc
push
ja
cmp
pop
loop
loope
add
roll
mov
aaa
arpl
push
mov
jns
jmp
dec
lds
inc
add
xchg
lret
mov
mov
push
dec
cwtl
cmpsl
add
xchg
and
sahf
pusha
and
cmp
cld
fcoms
loop
popa
into
lahf
pusha
dec
and
ret
inc
loopne
or
cs
data16
sbb
xchg
movsl
cmc
and
pop
adc
xor
jecxz
jmp
rcl
push
aam
fcomps
fidivl
sub
mov
test
jg
pop
iret
lea
cmp
das
loop
push
mov
inc
mov
aas
stos
sub
fldcw
push
jo
sub
jmp
and
inc
jg
mov
mov
cwtd
cmp
out
cmc
cmc
push
xchg
pop
out
adc
outsl
adc
sbb
add
xchg
xchg
inc
imul
jbe
fld
sahf
pop
jae
or
inc
jle
lea
loopne
push
xchg
icebp
xchg
xor
aaa
push
mov
or
push
cmp
and
inc
mov
pop
dec
sub
pusha
ds
jns
cmpsb
xchg
dec
mov
incb
imul
movsl
push
sbb
inc
push
das
xlat
adc
stos
dec
push
push
out
push
rorl
mov
jns
add
sbb
ja
cs
adc
stc
js
in
inc
lret
mov
pop
mov
lds
cmpsl
aam
call
xchg
incb
mov
or
loopne
enter
lds
sbb
and
andl
mov
and
bound
ja
add
or
add
cmp
xorl
or
sbb
jle
sub
or
inc
scas
jnp
add
mov
stos
addr16
sar
xor
aas
pop
bound
or
sti
mov
imul
mov
sbb
add
into
dec
sub
scas
inc
addr16
repz
loopne
adc
xchg
mov
add
xchg
mov
add
aaa
add
je
pop
repz
shlb
mov
bound
push
out
sub
xchg
sbb
dec
mov
inc
mov
xor
shrb
xchg
inc
subb
xchg
jne
mov
loopne
mov
mov
cmpl
dec
testl
sub
and
fnstcw
push
lcall
sahf
int3
xchg
sbb
inc
lcall
jecxz
fsubl
arpl
or
xor
mov
cltd
pop
dec
call
dec
push
xchg
arpl
or
inc
mov
cmp
xor
ret
fwait
xchg
dec
clc
pusha
or
xchg
and
push
jg
aad
adc
inc
pop
hlt
popa
push
rorb
pop
int3
inc
int3
sbb
adc
fstpl
or
mov
pop
cmpsb
cli
fimuls
sub
sbb
js
cs
test
lods
int3
addr16
push
fs
movsb
inc
lods
xchg
mov
jne
iret
xchg
ljmp
lret
rolb
push
addr16
mulb
or
imul
sbb
nop
jnp
fs
ret
dec
lock
loopne
xor
cs
pushf
mov
cwtl
imul
cmp
xor
push
std
sub
lds
in
jmp
lcall
lods
mov
inc
xor
dec
jnp
sub
shlb
xor
adc
movsl
jbe
repz
add
cmp
mov
xchg
test
sub
pushf
into
xchg
lods
add
or
sarb
add
dec
rcl
jnp
or
mov
or
mov
sub
inc
arpl
mov
inc
sbb
ds
or
test
outsb
push
out
rorb
jl
sub
pop
cltd
lret
bnd
daa
insl
mov
nop
mov
and
mov
sbb
jle
dec
call
mov
jmp
gs
mov
insl
mov
dec
dec
dec
cwtl
clc
out
andb
or
add
xor
out
mov
nop
jns
push
cmp
cmpsl
adc
mov
sub
cltd
or
aam
mov
adc
orl
cs
cmpsl
in
push
xchg
jl
cmp
imul
push
js
call
lods
pop
sarl
hlt
cmp
push
dec
mov
hlt
lret
lahf
stos
push
jge
iret
aam
inc
ret
lret
mov
or
sbb
movsl
sbb
and
xchg
inc
cmp
pop
mov
aas
imul
imul
mov
jge
dec
mov
xchg
pusha
xor
sahf
fildll
outsl
sub
pop
jg
xchg
pushf
mov
cmpsb
pop
add
sbb
and
add
pop
lret
shl
bound
dec
push
cmpsb
pusha
in
lds
push
push
ja
loope
or
inc
sbb
lret
test
aaa
xor
in
pop
out
fldenv
clc
popf
mov
mov
in
mov
scas
pop
mov
fstpt
imul
cmp
cmp
xlat
jno
adc
aaa
fbld
fwait
mov
xchg
xchg
enter
push
sub
sub
inc
add
idiv
push
pop
aas
arpl
push
fldt
xchg
jo
xchg
lea
ljmp
aaa
inc
bound
insl
fstp
mov
enter
repnz
js
or
push
ljmp
inc
ret
inc
inc
insb
jecxz
hlt
test
push
mov
jnp
mov
mov
popf
aam
jns
bound
mov
test
jb
loop
sub
bound
xchg
test
mov
jl
mov
dec
hlt
push
xchg
xor
sub
scas
xor
inc
daa
decb
mov
data16
ret
add
push
hlt
incl
xchg
fs
mov
repz
mov
mov
adc
adc
popf
mov
inc
es
addl
cld
test
or
or
add
out
pushf
xchg
dec
clc
jmp
sbb
push
out
xchg
xor
pop
icebp
dec
xor
mov
push
in
or
dec
out
punpcklwd
test
push
mov
ret
sub
wrmsr
xor
mov
jo
push
mov
mov
cwtl
xchg
scas
push
mov
insb
icebp
mov
xchg
push
ret
and
nop
xchg
add
lods
pop
add
inc
outsb
sub
xchg
lds
push
jle
fsubs
cmpsb
loope
cli
adc
sub
cmp
into
push
fisubrl
cmp
jecxz
ja
xchg
sbb
cmp
ljmp
cmpsl
push
xchg
or
daa
lea
xor
add
addr16
andl
repz
int3
out
addr16
ljmp
inc
mov
push
jae
jns
fst
aas
mov
fs
mov
adc
movlps
je
inc
outsl
int3
jns
mov
mov
lahf
ret
mov
xchg
xchg
add
push
inc
and
loop
inc
mov
rclb
xchg
std
cmp
lods
mov
ret
out
adc
lea
jo
nop
xchg
stos
in
smsw
out
and
mov
and
pop
push
and
adc
jmp
push
xor
insl
enter
test
xchg
jno
push
xchg
push
adc
out
cmp
mov
fists
jp
cmp
cs
or
push
and
sarb
cltd
stos
mov
stc
mov
insl
push
gs
pop
insl
pop
repnz
ds
mov
lock
or
aaa
xor
mov
aad
inc
pop
inc
push
std
mov
push
pusha
test
lret
les
stos
or
cli
adc
sbb
ficomps
cmp
std
imul
lock
test
mov
mov
test
sub
dec
fdivrs
popa
mov
test
cmc
lea
ret
mov
sub
add
sub
jmp
cli
xor
popf
push
sub
dec
dec
cmp
inc
pop
pop
add
es
movsw
mov
shl
xor
pop
cmp
cmc
sbb
jecxz
fdivrs
pop
movsb
sub
repnz
or
mov
lea
jbe
inc
cmp
add
and
jb
shll
std
ja
jb
notl
mov
xchg
jl
out
es
je
enter
and
add
and
lcall
inc
mov
cld
add
xchg
mov
ret
adc
stc
scas
das
or
ljmp
sbb
mov
mov
adc
or
stc
sub
push
cmp
push
aaa
movsb
iret
xor
lods
ja
push
cmc
or
out
cmpsl
mov
pop
dec
out
jge
mov
int3
inc
orb
adc
jnp
mov
cmp
push
adc
mov
or
fists
jl
push
adc
int
sub
fimuls
fs
movsl
cwtl
adc
icebp
dec
stos
rol
int
aad
xor
cmp
push
sbb
sbb
insb
test
dec
mov
jbe
ja
mov
add
aam
xor
loop
mov
push
fldcw
les
mov
mov
push
inc
pop
xchg
jmp
push
cmp
cltd
sub
dec
dec
jne
out
mov
mov
movsb
lods
push
xor
insb
imul
mov
jae
adc
mov
fwait
mov
daa
mov
mov
int3
lahf
js
mov
cmp
lods
sbb
or
decl
pop
add
int
test
dec
lcall
sub
andl
ljmp
negb
mov
aam
adc
ljmp
dec
sarb
xor
out
mov
inc
in
ficomps
jb
out
xor
ror
cs
pop
ret
repnz
inc
out
dec
in
pop
imul
xchg
out
sbb
sub
xchg
sub
scas
stos
jo
push
ficompl
aam
cmc
lret
sbb
push
adc
lods
ss
mov
jge
lods
daa
je
inc
jb
scas
jae
imul
aam
punpckldq
loope
dec
add
js
scas
xchg
test
xor
fistl
data16
pop
mov
repz
cld
push
or
bound
lea
fnsave
cmp
cmp
push
push
sti
lock
and
mov
scas
push
push
pop
bound
dec
pop
push
jbe
popf
inc
movsb
and
push
shr
in
pop
sub
int3
add
mov
loope
jae
out
scas
in
push
cwtl
cmp
mov
inc
sti
push
sbb
aad
pop
jns
aam
dec
int3
dec
mov
clc
xor
jno
pop
jno
fdivrs
es
and
movsb
pop
scas
and
push
in
or
aas
pop
cltd
sub
mov
mov
into
lds
les
pop
ljmp
aaa
mov
push
orl
jne
sahf
negl
mov
mov
in
outsb
popf
mov
pop
incl
outsl
push
arpl
add
mov
into
and
jb
jb
das
sub
mov
mov
lret
cwtl
rcll
xchg
add
aad
icebp
mov
cmp
repz
mov
scas
fdivs
and
lret
cmp
jg
pop
lahf
dec
jno
jne
xor
inc
cmp
popf
std
push
popf
insl
and
rol
test
aaa
or
xchg
int3
js
rolb
inc
cs
dec
push
imul
fwait
jge
jge
dec
mov
mov
dec
sbb
push
adc
rclb
sti
icebp
in
xchg
xor
imul
fnstenv
push
imul
inc
pop
mov
std
push
jl
and
pop
es
jecxz
pop
scas
loop
lds
push
sub
loop
inc
int3
and
in
ret
orl
fyl2x
in
mov
sbb
cwtl
mov
add
xor
xchg
add
jo
ret
in
xchg
pop
sub
mov
int
xchg
repz
cmc
pusha
lcall
push
add
xchg
js
xchg
pop
jecxz
aad
dec
ret
cmpsl
sub
adc
dec
push
and
adc
shrb
mov
mov
mov
xor
cmp
cmp
or
decl
loop
sub
jno
jno
mov
ret
js
popf
inc
jg
jb
stc
movsb
popf
sub
sub
xlat
jnp
and
xchg
into
or
add
insl
xchg
shlb
popa
mov
push
add
add
inc
add
mov
popa
fucom
test
jne
lahf
out
popa
xchg
xchg
lret
xchg
scas
fs
add
inc
add
mov
inc
or
lock
pop
pop
xchg
leave
mov
mov
out
jne
jecxz
jno
add
paddsb
and
cmp
ret
enter
shld
fldt
lret
jns
jg
ret
into
rcr
dec
adc
jae
jns
sbb
insb
sub
shll
push
add
mov
ss
addb
or
and
and
jge
or
xchg
mov
inc
and
and
pop
sub
add
dec
push
push
pop
xlat
aas
push
mov
push
inc
pop
push
scas
out
push
ds
xor
out
test
xchg
cmp
add
push
addl
adc
ficompl
aas
push
add
ret
ss
pop
xchg
je
insb
mov
scas
cli
bound
and
dec
xchg
int
fmull
push
lods
jmp
test
mov
gs
lea
loop
fmulp
fwait
sahf
dec
je
daa
subb
xchg
movsb
and
imul
nop
push
push
push
push
mov
mov
jae
sarl
inc
outsl
lds
pop
and
scas
outsb
ljmp
pop
dec
mov
push
mov
cmpsb
sub
pop
mov
push
inc
dec
dec
lcall
push
pop
push
xchg
cmc
test
and
pop
sub
jl
enter
lods
popf
insl
les
pop
pop
rcrb
jl
leave
mov
sub
lock
mov
aam
inc
xchg
mov
adc
mov
js
inc
push
push
test
xchg
daa
push
push
scas
flds
cmp
and
decl
adc
lds
jnp
inc
add
xor
scas
je
leave
data16
adcl
in
xor
mov
jge
xor
inc
xchg
arpl
add
aas
fnstenv
cmp
mov
add
add
jle
aas
je
ret
std
leave
scas
cmp
mov
stc
in
aaa
ds
xchg
sarb
push
pop
mov
les
insl
icebp
add
and
aas
xor
test
shl
jne
fs
popf
and
and
sbb
gs
ljmp
popa
cmp
pop
rcl
adc
cmp
adc
fisttpl
push
js
sbb
rorl
stos
and
inc
fistpll
adc
scas
jp
icebp
or
xchg
jns
das
clc
jbe
fstps
clc
lea
jg
xor
xor
sbb
inc
out
shll
xchg
mov
repz
stc
jle
pushf
mov
sarl
fcomps
fadd
jmp
addl
push
cmpsl
adc
or
fstl
or
mov
decb
out
mov
sbb
sbb
add
aas
sbb
or
cltd
pusha
xchg
fadds
popf
out
sub
pusha
sub
lds
cmp
push
and
mov
sbb
sbb
xor
cmp
adc
sbb
loop
gs
es
scas
mov
test
adc
mov
fstpt
push
ret
and
xor
ja
bound
jl
stos
or
out
xor
cmpsl
lret
dec
addr16
jg
and
mov
cmp
jle
mov
ret
ljmp
lahf
jmp
sub
rclb
mov
je
into
jg
cld
mov
les
cltd
mov
loop
es
in
xchg
fld
mov
push
jmp
addr16
arpl
aaa
xchg
cli
test
rcll
iretw
jle
movsb
scas
xchg
pushf
inc
jo
mov
jnp
sbb
and
lea
mov
divb
jmp
stc
scas
icebp
push
imul
sbb
dec
frstor
push
cltd
cmpsb
cs
insl
push
fimuls
lret
stos
adc
rclb
int3
pop
data16
bound
xor
jmp
rorb
outsb
push
sub
sub
dec
jecxz
jnp
loope
test
sbb
popf
nop
jne
jns
stc
out
lock
cld
pop
add
xor
mov
mov
pop
inc
inc
jle
outsl
push
fistps
pop
das
jne
addr16
ret
add
pop
sbb
stc
ds
jecxz
dec
popf
imul
xor
add
inc
aad
icebp
and
push
jnp
mov
xchg
mov
int
push
jae
jge
cmc
xchg
sbb
mov
push
push
mov
fstpt
lea
loop
lock
pop
movsl
cmp
cwtl
add
dec
inc
adc
push
aam
loope
mov
mov
mov
or
or
push
ret
sbb
nop
lds
out
rcrb
xor
int3
xchg
sbb
in
rclw
ret
scas
es
movl
push
repnz
or
daa
test
popf
lods
sub
xlat
push
mov
mov
out
mov
add
and
fisttpl
in
bound
subl
int3
xlat
jb
int3
dec
std
or
jno
pop
mov
jne
dec
add
out
xlat
add
cmp
sbb
cwtl
pusha
sbb
sub
xchg
movsb
push
pop
mov
cmp
addb
popf
fxch
cs
push
je
and
out
shrl
xchg
dec
daa
movsb
or
out
jnp
xor
dec
or
mov
mov
dec
mov
pop
popl
sbb
and
mov
sti
push
adc
fidivrl
jmp
sbb
lea
mov
jle
xchg
jmp
xchg
jmp
sub
mov
test
or
push
jmp
mov
xor
insb
fisttpll
test
xor
jle
jne
stos
cmpsb
leave
xchg
xchg
sub
outsl
sub
push
cmpsb
cmp
add
leave
movsb
jmp
mov
icebp
push
and
repz
pop
setle
andb
add
and
sub
dec
fwait
ja
sub
mov
mov
pop
and
dec
out
les
inc
fwait
arpl
inc
mov
lcall
outsb
icebp
add
inc
dec
int3
out
push
out
add
bnd
mov
shll
lock
sub
hlt
lret
mov
xchg
add
sub
scas
pop
pop
cmc
call
sub
jne
adc
dec
nop
lret
mov
xlat
xlat
insb
sbb
sub
xchg
popf
add
dec
fwait
mov
pop
daa
sub
test
sbb
push
push
sbb
dec
neg
les
xor
sub
data16
jns
mov
insl
mov
scas
bound
and
hlt
jecxz
mov
shlb
sub
add
pop
inc
xor
push
dec
test
cltd
hlt
pop
sub
mov
aam
imul
es
mov
xchg
stos
mov
notb
mov
or
scas
lea
cmp
pop
push
enter
lock
das
icebp
jmp
dec
repnz
pop
push
mov
cmpsl
loopne
push
inc
and
jmp
xor
aad
push
notl
adc
mov
mov
push
mov
jmp
and
into
iret
cli
fs
loop
mov
jg
jle
mov
sahf
mov
xchg
lret
dec
push
jge
loope
and
int
push
sub
mov
icebp
rclw
loop
rorl
repz
rclb
mov
jb
scas
xchg
bound
sub
inc
inc
lahf
sbbl
jns
mov
enter
lods
mov
xchg
in
loopne
sbb
and
mov
cmpsb
mov
sbb
insb
sub
xchg
xor
mov
jp
and
leave
ja
popa
lock
jge
jns
mov
pop
in
push
and
cmp
cmp
pop
mov
jmp
lea
icebp
aam
ficompl
popa
out
xor
mov
addr16
lods
insb
inc
mov
test
or
rep
es
lock
out
adc
sti
lret
inc
shlb
lods
jmp
dec
bound
pop
lahf
das
pop
addb
mull
jne
ljmp
test
cwtl
mov
mov
xor
sub
out
mov
jne
xor
aas
inc
xor
xchg
lds
out
push
int3
adc
mov
cmpsb
jno
and
scas
repnz
loop
pop
inc
jne
cmpsb
push
stos
pop
scas
dec
jmp
adcb
inc
addb
rcll
outsl
lret
adc
push
xchg
int3
outsl
mov
gs
jp
test
addr16
test
cmp
lds
dec
cmp
js
mov
or
inc
xor
pop
loopne
std
aaa
into
outsb
mov
incb
imul
je
test
cmpsb
xchg
mov
xchg
inc
jb
repnz
sahf
in
dec
in
dec
ds
dec
in
mov
xlat
je
and
sub
push
inc
insl
in
mov
pop
sub
xchg
out
stos
mov
addr16
scas
stos
inc
cs
dec
cmpsl
mov
lods
stos
pusha
dec
lret
enter
adc
dec
mov
cmp
test
fnsave
fidivl
xchg
mov
aad
push
jg
popl
nop
mov
push
sti
jle
test
xor
test
dec
mov
out
jge
push
jl
scas
or
lcall
aam
je
push
xor
dec
push
pop
push
inc
pop
mov
jnp
inc
or
in
imul
inc
pop
imul
clc
jge
nop
je
xchg
xorb
and
jo
cmpsl
xor
adc
pop
jmp
pop
jnp
jne
sbb
mov
fcoml
ret
js
aad
mov
fldl
into
push
je
fcmove
cmp
leave
pop
push
xlat
mov
test
xor
mov
je
push
js
out
lock
sbb
fwait
push
inc
pop
jno
sbb
pop
mov
in
das
inc
sbb
mov
pop
std
mov
xor
test
mov
mov
pop
pop
inc
adc
fidivrs
popa
jecxz
xor
pop
mov
mov
dec
cmp
adc
mov
aas
lea
jae
xchg
dec
cmp
pusha
sbb
test
in
mov
sub
lds
adc
pop
and
cmc
pop
out
xor
xchg
nop
dec
fldcw
jae
jge
divl
fwait
movsb
push
sbb
add
test
add
insb
jmp
pop
pop
pushf
ret
sub
jecxz
mov
inc
mov
sub
sub
popf
push
jne
mov
jne
mov
mov
mov
or
in
test
jb
mov
es
push
aad
sbb
jmp
jmp
mov
or
mov
pop
lcall
ss
mov
cmp
cmp
add
pop
push
fcomi
int
addr16
adc
xchg
sti
sub
mov
mov
aad
mov
pop
test
test
repnz
adc
cli
add
pop
in
gs
mov
inc
in
inc
xor
push
add
pop
inc
nop
xlat
dec
sub
mov
cmp
sbbl
ret
sub
test
dec
pop
sbb
cmp
out
out
test
cmp
or
stc
mov
arpl
int3
out
data16
test
push
or
lock
jb
repz
adc
ret
mov
and
push
lods
test
out
in
sub
das
fdivs
inc
mov
in
outsl
jg
cli
adc
xchg
fdivr
and
ficompl
dec
ds
popf
sti
xor
fucomi
cmp
and
stos
pop
pop
pop
lea
out
addr16
lock
inc
pop
or
stos
lret
cmp
loop
sbb
or
jne
lahf
js
dec
loop
pusha
gs
cmp
inc
pcmpgtb
notb
mov
inc
mov
dec
test
sti
fcmovnu
xchg
adc
pop
pushf
jne
jp
lea
out
subl
and
inc
int
xchg
lcall
mov
xor
cmpb
ljmp
sahf
xchg
xchg
xor
scas
adc
ret
loope
and
jb
mov
jge
dec
mov
adc
dec
pop
lret
jl
rcrl
dec
push
dec
sarb
into
pushf
pop
sub
shll
or
adc
push
and
xchg
lods
pushf
ret
jg
lods
imul
fldt
sub
push
aas
push
and
lcall
mov
repz
cmp
pop
or
sbb
or
sahf
push
lahf
xchg
inc
mov
popa
mov
rcr
imul
cs
ja
push
adc
mov
int
repnz
add
fs
rclb
adc
pop
insl
into
or
nop
insl
ret
shrb
fldl
push
data16
je
cs
insb
fwait
cld
and
aas
xchg
outsl
mov
mov
jno
lea
dec
mov
adc
out
adc
popf
add
lock
cmp
je
insl
fildll
in
roll
dec
pop
fwait
pop
xchg
aas
mov
out
lea
test
adc
jmp
fidivrl
xchg
dec
in
jbe
xchg
test
loopne
das
add
addr16
imul
xchg
inc
sbb
loopne
lods
fwait
jmp
push
mov
popf
pusha
adc
inc
jo
pop
je
pop
adc
lds
inc
mov
sub
push
scas
xchg
sub
jg
or
sub
popa
test
mov
lahf
std
pop
inc
das
adc
fiaddl
xlat
fwait
rcr
pop
aaa
dec
popf
inc
pop
aad
jne
iret
mov
outsb
cmc
inc
imul
data16
mov
mov
fldt
mov
addr16
pop
mov
cwtl
lock
call
pop
filds
and
mov
sbb
dec
xchg
lcall
mov
adc
sub
push
scas
jmp
sub
int
cld
jge
xchg
das
push
or
out
xor
jbe
mov
push
scas
pop
je
cwtl
ljmp
xchg
push
das
jmp
roll
and
pop
mov
mov
and
pop
movsb
adc
jp
dec
add
and
imul
mov
adc
mov
stos
cmc
add
cmpl
xorl
test
dec
cld
xchg
mov
subw
dec
sub
cli
int3
jb
xchg
filds
inc
hlt
lds
inc
dec
cmp
fs
mov
sbb
xchg
testl
ds
inc
and
sub
jb
xchg
xchg
jg
add
fsubr
mov
in
or
or
pop
lds
push
ss
ja
push
out
pop
cmp
mov
ja
lret
arpl
pop
jbe
push
xor
mov
test
inc
fiaddl
mov
dec
mov
inc
cmp
int3
mov
add
stos
xchg
cmp
push
jnp
lret
icebp
and
xor
jle
mov
and
push
repnz
enter
push
addr16
fists
shlb
mov
xchg
xor
xor
sbb
aam
outsl
cmc
lock
fsub
hlt
call
xorb
out
cmp
movups
sbb
cmc
pop
lret
cli
scas
add
xchg
mov
mull
mov
scas
jge
pop
stc
xor
aam
fs
or
movsl
cmp
inc
mulb
pop
mov
adc
pushf
jb
imul
rorl
cmp
jb
and
ds
xchg
repnz
jmp
cmp
mov
jns
jns
inc
xchg
push
shl
repnz
scas
push
cmp
sti
xor
inc
outsb
dec
xor
inc
shl
psrlw
nop
or
sbb
add
inc
jo
adc
test
shll
sbb
cwtl
rcr
add
mov
add
imul
jae
int3
xor
movsb
in
add
push
les
push
xor
mov
push
mov
add
fisttps
lret
cwtl
in
inc
je
pop
mov
jg
in
mov
xchg
cs
xchg
xor
mov
pop
and
cld
sti
xor
add
pusha
repnz
push
sub
push
gs
dec
rcl
fcomi
popf
sbb
repz
lcall
pop
dec
mov
in
cmc
loope
sti
and
mov
dec
out
test
psubsw
adc
push
mov
pop
idivb
adc
inc
fdivs
rcrb
xor
fwait
push
les
aaa
xor
or
jmp
out
pop
out
add
mov
rcl
frstor
or
or
mov
sub
jmp
xchg
es
lods
sub
fdivs
lods
dec
sbb
les
jl
stos
inc
pop
imul
mov
mov
jne
xchg
push
ds
push
imul
inc
je
into
push
xor
aas
neg
and
jae
das
in
mov
hlt
mov
mov
sbb
fnstenv
jb
xor
lcall
aad
jae
inc
push
in
dec
cwtl
and
es
aam
add
jl
jbe
scas
inc
inc
cmp
or
inc
inc
jb
je
xor
pop
adcl
mov
lea
in
jmp
idiv
arpl
imul
dec
mov
pop
mov
and
lds
sbb
std
ficoms
ficomps
xchg
in
mov
adc
adc
cld
push
jecxz
cmp
sub
out
dec
and
cmp
push
mov
movsb
call
or
xor
flds
hlt
fidivrs
pop
mov
in
out
mov
stos
or
inc
sbb
clc
lds
fmuls
in
and
or
mov
popa
cmp
outsb
addl
out
insl
shlb
and
sbb
icebp
cmp
sub
sahf
ds
fs
adc
enter
stos
lods
pusha
sti
or
lret
and
sbb
mov
movsb
test
insb
stc
xchg
pop
aas
stos
stos
stc
xchg
test
xchg
fidivl
mov
loopne
scas
mov
xlat
ror
cmc
jmp
pop
add
dec
popa
outsl
mov
loopne
pop
and
mov
push
fnstsw
pminub
test
iret
popf
fwait
xchg
fs
add
fisttps
xchg
or
in
jnp
mov
mov
gs
sahf
mov
dec
shlb
outsl
push
sti
ljmp
idivb
cltd
mov
out
dec
push
out
ds
pop
outsb
push
or
xor
popa
movsb
testl
imul
xchg
mov
mov
xor
hlt
xchg
jne
xchg
jl
in
notl
loope
lds
lcall
cwtl
sbb
loope
pop
push
sbb
es
int3
pop
and
cli
pop
cltd
xchg
inc
pop
and
outsb
xchg
inc
jae
ficomps
xchg
fcompl
lret
sbb
sub
mov
pop
xchg
call
into
dec
sti
cmpsl
inc
xchg
mov
xlat
lret
daa
sbb
push
jmp
inc
lods
fistpll
cmpsb
sbbl
jl
lea
mov
sub
cmc
cmp
lea
mov
outsb
daa
fildll
jno
push
bnd
ljmpw
push
inc
push
fs
int3
cmp
jle
idivb
cwtl
fidivl
loop
jecxz
inc
lods
iret
int
mov
push
mov
addr16
bound
xor
bound
add
sbb
sar
pushf
cmp
adc
ja
mov
mov
mov
ret
ja
adc
out
mov
lock
lock
adc
add
andb
leave
xor
sub
add
movsl
mov
scas
xchg
pop
rcl
xchg
decl
xchg
into
ds
cmc
clc
push
insb
lock
dec
outsb
cmp
mov
sub
fs
rcrl
and
add
repnz
pop
sub
jg
adc
mov
leave
enter
sub
aad
mov
add
xchg
adc
call
mov
jg
pop
rclb
jns
pop
aam
sti
les
xor
fldt
push
out
movd
pop
mov
adc
xor
xchg
mov
inc
fadds
mov
or
js
sub
mov
mov
sub
popf
xor
xor
or
and
jae
sbb
or
sub
xor
sbb
lods
in
push
lcall
xlat
mov
in
push
data16
xor
and
xchg
xor
and
and
out
call
push
jnp
pop
pop
nop
inc
push
or
iret
mov
mov
push
out
or
or
mov
dec
dec
sub
lcall
aaa
push
mov
orb
stc
insl
inc
loope
dec
mov
stos
fdivrl
mov
int3
jno
ret
loopne
rclb
popf
inc
push
negl
insl
sbb
hlt
mov
lcall
xchg
inc
mov
mov
ss
adc
out
cmc
jge
out
mov
out
std
mov
mov
sarb
xchg
inc
sbb
sbb
dec
ffreep
add
push
and
bound
adc
aad
adc
cs
push
jmp
xor
scas
jne
xor
fnstsw
pop
add
dec
lcall
lahf
pop
mov
xor
insb
pusha
push
jmp
data16
push
dec
pop
test
lret
jo
sub
xor
jmp
js
push
mov
push
inc
jbe
inc
das
stc
dec
call
test
push
icebp
adc
lahf
retw
or
fstl
push
xchg
dec
inc
pop
xor
loope
xchg
sbb
aam
adc
cli
dec
mov
sub
pop
xchg
fmulp
mov
test
fsts
in
adc
popa
sbb
fcomps
and
je
stos
push
xchg
xor
add
nop
outsb
out
das
sub
jle
ficomps
cmpsb
xchg
ds
fisubrl
adc
add
xchg
enter
ds
inc
mov
arpl
add
pop
jbe
sub
xchg
int
pusha
fisttpll
pusha
mov
mov
sbb
int
jmp
out
gs
push
pop
adc
out
ljmp
add
push
mov
pop
scas
push
ljmp
jmp
daa
jbe
faddl
lcall
cli
jb
push
dec
push
add
mov
test
or
pop
lcall
jb
mov
ret
imul
dec
add
outsb
xor
sbb
int
jge
or
mov
or
or
xchg
adc
aaa
push
or
add
pusha
movsb
xrelease
dec
cwtl
xchg
mov
mov
jmp
cmc
daa
jp
adc
dec
out
jb
mov
jle
stos
push
rcrl
fwait
inc
mov
mov
test
push
mov
adc
xor
rorb
sti
stc
add
mov
es
std
adc
test
out
cmpsl
cmp
std
and
mov
pop
enter
sbb
jmp
jnp
ret
mov
in
insb
sbb
dec
ficompl
addr16
push
sub
cli
mov
jp
add
or
xlat
push
mov
test
andps
int
jmp
push
daa
stos
in
shll
enter
xchg
testl
movsl
stc
mov
fdivrl
out
push
adc
mov
insl
loope
in
dec
push
pop
xchg
jno
std
fisubrl
jmp
cmp
arpl
out
and
push
stc
xchg
sbb
or
mov
out
sbb
jle
inc
and
adc
sub
fisubs
push
test
adc
arpl
repnz
xor
in
mov
loop
test
pop
andb
imul
pop
jns
popf
out
push
icebp
scas
mov
jns
or
mov
adc
aas
std
fisttpl
fnstenv
add
outsl
out
pop
fadd
rcl
mov
mov
sub
push
in
mov
add
xor
add
jnp
cmp
andb
daa
add
int
imul
outsb
adcl
mov
lock
or
dec
jge
stos
out
inc
fadd
dec
cmp
into
std
jle
lret
mov
mov
push
stc
mov
aaa
adc
insb
sbb
loopne
mov
or
daa
rcrl
movsl
fwait
or
xor
sub
imulb
or
leave
xlat
outsb
jb
mov
add
jae
xor
sbb
cmpsb
mov
jo
scas
and
data16
lret
dec
shlb
adcl
xlat
jmp
test
leave
out
or
push
cmc
mov
in
dec
push
xchg
ds
jg
mov
aaa
nop
xor
jl
fiaddl
imul
mov
pop
add
xchg
dec
fbstp
sbb
roll
dec
cmp
jns
add
in
mov
jmp
or
rcrl
inc
ss
pusha
jl
setns
pop
cmp
sti
and
dec
insb
adcb
ja
lahf
shrl
pop
movsb
add
xchg
ss
mov
pop
xchg
mov
sbb
push
mov
mov
div
xchg
stos
in
mov
cwtl
inc
xchg
ret
xor
mov
mov
fcom
hlt
rorb
add
cli
in
xorl
cmpsb
addb
push
inc
test
mov
jg
mov
scas
enter
xchg
cmp
gs
lret
bound
lret
outsb
inc
mov
lock
mov
mov
inc
popa
stc
jno
push
mov
sbb
or
add
test
add
int
ficoml
pop
aad
sub
and
shlb
call
mov
jae
push
inc
push
fs
xor
mov
aad
cmp
cmp
test
lcall
cmpsl
stos
mov
fwait
nop
pop
pusha
sub
cld
fdivs
jl
xlat
pop
data16
jnp
mov
cmp
mov
testb
mov
and
insl
loop
pop
or
jg
clc
mov
shlb
test
mov
lcall
cli
cmp
xchg
in
xchg
mov
adc
xorl
mov
into
ja
les
push
imul
xchg
or
xchg
xchg
jle
sbb
hlt
push
cld
jle
mov
adc
cs
cmp
inc
and
insl
movsl
xchg
leave
xchg
cltd
rorb
sets
cmp
xchg
add
ficoms
xchg
jecxz
mov
pop
stos
subl
les
and
adc
xorb
filds
dec
mov
dec
imul
mov
pop
push
add
and
addr16
pop
or
mov
jbe
inc
fimuls
sbb
rorl
shll
lahf
adc
pushw
fsts
pop
das
xchg
and
add
ds
jae
push
ret
sub
addr16
imul
loopne
xchg
push
mov
inc
lock
push
add
in
sbb
dec
jo
cmp
in
cmpsb
call
mov
cmova
sub
in
sub
ljmp
sar
out
and
push
dec
mov
fcomip
bound
in
lods
and
dec
bswap
rcl
dec
push
adc
lods
pusha
push
adc
push
mov
js
outsl
jno,pt
clc
sub
lods
ljmp
xor
aas
inc
leave
sbb
pop
cmp
in
lret
fisttps
cmpsl
cmovne
mov
adc
sbb
jno
lret
iret
xlat
test
fabs
cld
push
dec
std
daa
jecxz
mov
adc
fs
mov
jg
mov
es
insl
cmpb
mov
in
inc
cmp
push
push
xchg
pop
xchg
enter
cmp
lea
sbb
pop
mov
adc
push
push
push
fldl
loope
je
jmp
xchg
cmp
in
push
or
xorb
call
mull
mov
xchg
aam
mov
fldt
ror
pop
scas
outsb
lret
pop
aas
push
sahf
or
sub
lods
lock
mov
xor
push
jge
mov
out
and
jmp
data16
fwait
out
call
and
push
lret
out
mov
cmp
adc
mov
jecxz
cmpsl
pop
popf
mov
emms
adc
lret
push
sbb
cmp
hlt
pop
jae
sbb
ja
lock
adc
pop
inc
cmpsb
cmpsl
fsubr
hlt
aaa
pop
movsb
and
mov
bnd
fldenv
pop
aam
sbb
js
sub
movb
cmp
ret
cmpsb
daa
divb
out
rol
push
inc
loop
fmull
aad
lahf
push
cli
test
sub
icebp
mov
adc
push
rcrl
pop
mov
sub
mov
test
lods
aam
jo
mov
sub
lods
dec
nop
stos
testb
ret
adc
pushf
mov
je
xchg
pop
cli
pop
fldcw
stc
test
inc
fildl
out
mov
aam
stc
mov
mov
fcom
push
aas
mov
in
into
sbb
fs
jg
outsl
addl
into
fs
adc
fisttpll
sub
mov
jmp
mov
dec
push
data16
in
popa
dec
in
and
pop
adc
mov
les
mov
mulb
adc
imul
push
push
clc
daa
add
ret
adc
or
jl
ljmp
mov
cmp
inc
adc
in
mov
sbb
xor
push
arpl
cld
aas
loop
ret
and
mov
mov
mov
aad
loope
sbb
mov
mov
mov
repz
repz
movsb
or
sbb
mov
fdivr
lds
notb
jge
rolb
sbbb
xor
arpl
lea
push
orl
cmp
xchg
inc
dec
pop
loope
pop
inc
sub
aam
ficoml
cld
mov
imul
cmp
and
jb
push
lods
jne
notl
leave
pop
imul
jmp
inc
xor
lret
dec
cld
or
xchg
mov
add
and
lea
rcr
aaa
into
imul
add
push
adc
mov
inc
jl
mov
push
repz
push
cmpsl
xor
push
clc
scas
xchg
fwait
sbb
mov
mov
adc
cs
mov
rcl
push
xorb
arpl
test
pop
sbb
xchg
cmp
int
mov
sahf
adc
test
les
sbbl
orl
leave
dec
dec
lahf
mov
lods
lcall
leave
pop
push
mov
ds
out
lods
sbb
addb
add
scas
xchg
cmpl
add
mov
mov
and
shrl
mov
inc
xchg
mov
jne
dec
mov
or
pushf
pusha
or
clc
je
xor
arpl
mov
arpl
cmp
push
lahf
dec
push
les
popa
sbb
xchg
xor
xchg
cmp
aam
idivl
or
and
mov
sti
jl
test
or
bound
shll
xor
outsb
outsb
clc
mov
test
jne
enter
or
daa
movsl
jecxz
mov
jecxz
dec
xchg
inc
mov
mov
dec
jmp
mov
mov
cmpsb
lods
fdivp
inc
test
jno
jbe
dec
mov
mov
pusha
pop
xor
adc
dec
push
push
cmp
cmp
scas
jg
cmp
jb
lcall
sbb
rcrl
clc
mov
mov
xchg
mov
imul
sbb
jno
and
cmp
out
jmp
dec
scas
cwtl
and
pop
pusha
cwtl
inc
int
jmp
shlb
mov
push
jp
insb
adc
cld
mov
cli
or
in
jno
les
fadds
aad
fldenv
mov
or
pusha
push
dec
push
push
mov
test
lahf
stos
mov
hlt
xchg
cld
clc
jg
mov
mov
fisubs
ret
or
lock
test
cmp
jne
shlb
cli
out
nop
out
arpl
in
mov
fistpl
sbb
cmpsl
pop
push
inc
xchg
add
adc
cmc
xchg
cmp
sbb
mov
lods
mov
fiaddl
popa
mov
outsl
test
imul
lret
cmp
cmc
jle
adc
cmp
mov
insb
test
sub
xchg
lahf
xchg
movsb
cwtl
ds
sbb
sub
cmp
sar
mov
pop
mov
adc
call
lods
imul
mov
add
std
cmp
orb
inc
gs
movsl
hlt
add
mov
sub
push
icebp
lahf
push
adc
fidivs
enter
mov
outsl
shll
xchg
ds
push
sub
and
rcrl
add
aam
pop
pop
in
mov
sbb
fs
loop
mov
cmc
out
call
jno
jle
div
leave
test
nop
repz
stc
test
popa
fmuls
xchg
jmp
mov
leave
adc
pop
inc
pop
inc
and
ret
xlat
adc
fsubrp
xchg
and
lcall
sub
inc
cmp
inc
popa
jg
jg
dec
out
dec
cwtl
popa
inc
test
loop
push
sbb
sbb
shl
stos
int
shlb
sub
mov
adc
or
mov
cltd
inc
gs
outsb
mov
stos
ja
rcrb
pop
jnp
in
jmp
dec
fsubrl
int3
fiaddl
rorb
inc
mov
mov
xchg
outsb
pop
adc
mov
in
push
or
mov
xchg
test
xchg
mov
xlat
call
and
mov
sub
jle
fldcw
pop
js
mov
sbb
push
push
leave
mov
insl
and
fistps
add
cmpsb
shrb
je
mov
push
cmp
mov
in
ja
out
rcrb
dec
mov
addr16
repnz
sti
jnp
sub
sub
or
xor
jne
adc
mov
push
sbb
cmp
push
and
stos
mov
std
dec
inc
outsl
add
inc
push
ret
mov
dec
and
fdivl
xchg
mov
jb
mov
cmp
cmp
hlt
mov
push
nop
movsb
add
mov
ljmp
lcall
cld
jne
cmp
mov
insb
dec
pop
jecxz
jge
je
jnp
addl
flds
clc
inc
cmp
fcomps
adc
jae
and
add
popa
divl
js
popa
imul
aas
dec
push
lahf
andl
mov
daa
es
xorb
leave
pop
je
sahf
xchg
and
sbb
out
leave
xor
jp
decl
push
cmpsb
sub
jge
jecxz
add
xor
sbb
sarb
dec
mov
stos
sub
scas
js
arpl
stc
in
jns
ja
in
enter
clc
jmp
jbe
cli
jl
cmpsb
ret
dec
pop
pop
pop
lods
jmp
dec
test
dec
loop
cmp
jmp
pusha
mov
mov
iret
out
and
jl
mov
jl
movsl
dec
sbb
insl
push
addr16
out
mov
sub
sbbl
lock
push
mov
test
adc
dec
data16
sbb
daa
mov
popf
imul
push
fsts
stos
jns
xchg
inc
in
sub
sar
insb
movsl
aam
test
out
div
mov
cmp
popa
aaa
mov
ja
sbb
pushf
cmp
cmpsb
mov
or
mov
and
mov
fisubrl
and
and
jne
jno
mov
jno
xor
arpl
test
sti
je
jmp
je
mov
rcl
jmp
inc
sub
cmpsb
cpuid
pop
out
jle
std
xor
and
xchg
mov
or
cmp
mov
xor
mov
aas
mov
jo
fidivrs
jne
outsb
and
sbb
or
nop
popf
cwtl
clc
dec
xlat
aam
lcall
rcll
cmpsb
sub
mov
mov
or
add
adc
cmp
cmp
scas
pop
insl
rorb
sbb
testl
in
pop
xchg
dec
scas
ljmp
and
pop
lea
adc
stos
popa
add
addl
and
cmp
ret
adc
lods
movsl
mov
lock
and
lea
jb
jns
lods
xchg
mov
mov
pop
sbb
ficoml
mov
rorb
mov
inc
cmpsb
stos
mov
sbbl
js
pop
adc
cmc
je
jecxz
push
lcall
xor
add
mov
jb
lret
cld
and
push
es
in
or
imul
dec
cmp
or
inc
xor
mov
inc
pusha
pop
xor
add
bnd
sbb
sub
pop
jae
imul
subl
insl
shll
lock
sbb
pop
imul
xchg
cmp
loopne
pop
mov
aas
dec
mov
js
push
push
or
ljmp
jb
std
mov
dec
or
mov
jg
adc
xor
mov
shll
addr16
test
add
mov
sbb
cli
push
test
mov
lods
jg
xchg
lods
arpl
jb
and
dec
pop
enter
sarb
pop
push
fsubl
aaa
and
sub
decl
push
movq
add
std
xor
popf
cmp
add
out
sbbb
pop
xchg
push
in
shll
fcomp
adc
popf
stos
insb
in
das
xchg
pop
jmp
sahf
jae
arpl
ret
or
mov
cmp
sti
sbb
in
jle
add
faddp
xchg
xchg
sbb
sub
mov
pusha
push
dec
loope
repz
sbb
scas
mov
aas
xlat
mov
inc
adc
nop
sti
sub
mov
cwtl
ret
filds
out
push
dec
outsl
repnz
dec
int3
cmp
aam
pop
jmp
lret
push
xchg
test
lcall
xchg
or
pop
popf
pusha
sub
int
repz
movsb
or
mov
push
ret
dec
cwtl
mov
jae
pop
adc
and
xchg
pushf
arpl
mov
mov
lock
out
jo
dec
mov
fists
sub
sbb
hlt
cmp
mov
ljmp
frstor
mov
cmp
rclb
inc
stc
pop
rolb
fisttpll
test
leave
push
cmc
popf
adc
xchg
mov
lret
and
imul
aad
xor
call
jp
insb
in
insl
pop
mov
and
xorb
inc
data16
test
xchg
test
dec
xchg
xor
mov
push
cmp
adc
ljmp
pop
mov
loope
divl
lahf
aad
pop
in
movsb
shll
orb
pop
pop
push
xchg
pop
ret
jno
arpl
icebp
jmp
cld
jmp
cmpl
mov
out
cmp
pushf
sub
pushl
jo
push
mov
and
sti
ds
mov
out
outsb
push
jne
scas
stos
push
push
sbb
push
roll
loopne
scas
fisttpll
pusha
fmul
stos
sub
in
call
jp
cbtw
adc
add
push
pop
inc
pop
inc
sbb
pop
es
imull
push
cmp
mov
ds
sbb
repnz
aas
fimull
ds
js
rolb
xor
ret
pop
or
jno
adcl
lea
jne
call
hlt
enter
daa
cmp
add
sub
outsb
inc
or
stos
in
les
sahf
aas
jge
mov
pop
rclb
adc
or
inc
mov
clc
sub
xor
and
mov
sbb
mov
adc
stc
mov
push
popf
push
into
push
push
cmp
push
mov
and
sbb
lret
mov
das
imul
sub
pop
ret
push
fiaddl
sbb
mov
mov
addr16
or
sbb
lods
addb
jb
xor
ficoms
insl
lcall
lds
cmp
jne
or
shl
test
and
xchg
pop
and
mov
adcb
mov
into
push
pusha
push
mov
mov
in
push
outsl
testl
bound
pop
add
cmp
pop
ret
enter
cwtl
mov
sub
pop
rcll
xchg
mov
and
mov
xchg
jo
cli
pop
push
test
lret
sub
xchg
cmp
stos
dec
iret
add
clc
hlt
maskmovq
mov
lret
es
pop
in
pusha
pop
inc
jmp
and
xchg
xchg
sbb
jle
sub
mov
scas
insl
je
jo
mov
jo
adc
dec
scas
outsb
lock
fnsave
lcall
inc
jmp
gs
add
xor
sbb
push
das
mov
mov
bound
mov
add
imul
data16
mov
dec
lcall
pop
cmp
jmp
stc
push
pop
cmp
enter
dec
fmull
lahf
push
movsb
jne
ss
lcall
ja
push
mov
insl
pop
clc
push
lret
shrl
enter
lret
hlt
mov
je
ss
sbb
mov
incb
das
pop
sub
jmp
loop
lcall
scas
mov
xor
ret
jae
jno
jae
in
lds
imul
xchg
fimuls
dec
lcall
inc
dec
loop
aad
push
je
inc
xor
mov
dec
mov
mov
enter
int
mov
push
cmp
cmp
lahf
enter
std
aas
jecxz
jle
mov
inc
inc
std
fcoms
jne
iret
sahf
or
jecxz
lahf
sub
lods
push
jg
cmpl
xchg
push
pop
cmpsl
push
pop
push
or
aaa
dec
movsb
cwtl
or
jp
clc
xor
movb
call
sub
jl
sti
jp
mov
mov
ljmp
gs
gs
xchg
fcomp
pushf
sarl
fists
cmpsl
cmp
push
mov
mov
aaa
jb
push
aam
mov
add
or
push
orb
mov
xchg
and
lods
add
cld
loope
push
inc
push
and
jae
jmp
dec
or
xor
push
testb
mov
sub
and
mov
lret
scas
ret
lahf
sbb
pop
inc
xor
stc
fs
out
imul
hlt
and
insb
inc
daa
push
adc
das
shrl
add
shrl
pop
add
pushf
repnz
fisubl
aaa
hlt
dec
ljmp
cmp
pop
xor
mov
mov
mov
xchg
jmp
out
mov
cmp
xchg
rorb
mov
mov
mov
fs
adc
lea
push
adc
out
push
lahf
inc
popa
xchg
arpl
jge
adc
pop
out
add
aas
dec
add
fistpll
pop
cmp
mov
sbb
push
or
pop
mov
dec
jle
or
aaa
ja
dec
and
pop
mov
mov
or
stos
dec
jg
lret
mov
aad
cli
push
cmp
ja
sub
sbb
fcomi
jecxz
movsl
lret
loope
xor
cs
testl
lret
mov
xlat
clc
and
mov
testl
rcll
mov
jmp
mov
adc
or
xchg
mov
or
jge
ret
pop
clc
movb
pop
outsl
fsub
add
in
jae
aam
outsb
xchg
lods
insb
call
or
out
aaa
cmpsb
push
jl
ljmp
pop
jg
cltd
test
mov
adc
loope,pn
inc
mov
mov
dec
and
dec
shl
mov
dec
and
ja
sub
add
adc
cmp
rcrl
ror
aaa
outsb
or
adc
add
push
mov
jle
popa
sysret
movsl
pop
mov
cmpsb
pop
mov
adc
aas
mov
mov
adc
lret
and
mov
dec
sub
fdivrp
negl
push
icebp
call
add
lods
inc
sahf
mov
cs
mov
fs
repnz
push
sarl
hlt
sub
fwait
xor
rorb
jnp
jno
loope
push
les
fcmovnb
cs
ss
ret
fcmovnbe
jl
js
int
adc
pop
jp
mov
mov
or
pusha
push
shlb
push
mov
and
mov
pushf
sarb
xor
test
mov
insb
pop
xor
pop
shll
or
into
sbb
push
mov
fadds
and
cmp
jl
dec
ror
loop
jne
mov
lea
les
aam
arpl
push
inc
in
popl
gs
loopne
repz
jb
mov
fiadds
push
mov
scas
aaa
clc
xor
mov
jp
cmp
mov
dec
xchg
sbb
bound
loope
cld
cwtl
xchg
sti
cs
add
sub
pop
or
push
stos
subb
xor
jbe
push
in
subb
insl
clc
clc
sahf
xchg
lret
faddp
bnd
pop
cmp
je
dec
sahf
inc
sub
ret
mov
lea
shrl
dec
cmp
dec
mov
lock
push
sbb
frstor
sub
in
xor
cmp
popa
loop
or
sbb
jnp
sbb
adc
add
dec
adc
xor
dec
and
pop
xor
imul
xchg
sbb
sub
jno
pop
mov
dec
fcoms
xlat
insb
fmuls
scas
xchg
push
cmp
or
loope
adc
fs
mov
xchg
or
insb
fmul
jne
dec
mov
xchg
pop
loopne
shrb
lods
andl
push
and
jmp
test
mov
sbb
mov
je
hlt
pop
dec
cli
pop
xchg
les
test
test
mov
cmc
sbb
test
aad
sti
or
loop
ljmp
add
jne
insl
cmpsb
xchg
subb
xchg
sti
mov
xchg
xchg
mov
ss
roll
in
jbe
mov
xchg
pusha
xchg
push
lock
cmp
xchg
add
dec
jnp
and
adc
pop
cmpsb
loopne
jbe
sbb
sub
mov
add
add
cmp
out
lret
jp
repnz
add
fdivs
or
dec
stos
scas
xor
ja
push
jo
pop
je
dec
mov
add
adc
xchg
push
cmp
repnz
or
inc
sahf
xchg
push
cli
fwait
out
cmp
loopne
daa
imul
lods
or
dec
xor
mov
lea
rcl
jbe
mov
addr16
dec
lods
fidivl
jmp
xlat
inc
ljmp
insl
icebp
sbb
sti
xlat
dec
xchg
lea
xchg
add
inc
push
leave
out
or
std
pop
sbb
push
mov
jle
or
add
leave
cmpsb
inc
ficoml
inc
inc
jmp
pop
jo
adc
add
pusha
inc
pop
cli
fcmovu
and
mov
mov
cld
add
int
xor
push
mov
xchg
inc
pop
popf
xor
rorl
add
mov
fldt
jg
jb
lds
movsl
pop
mov
scas
decl
popa
xchg
adc
addr16
popf
mov
ljmp
cmp
outsb
mov
fstpl
dec
cwtl
sub
std
subl
add
lods
sub
mov
les
int
cmpsb
inc
jbe
xchg
mov
mov
dec
sahf
mov
dec
mov
cmp
sub
jbe
nop
je
dec
or
hlt
add
pop
and
xor
insl
bsr
scas
dec
test
mov
stos
test
pop
push
adc
or
aaa
add
lods
imul
outsb
xor
lea
insl
ret
jge
aaa
je
je
rcrb
test
sbb
lods
cmp
loop
shl
add
arpl
jg
push
mov
iretw
jo
mov
mov
sti
loop
lods
pop
cmp
dec
loope
jb
bound
push
fstps
mov
leave
outsl
out
jmp
sub
adc
mov
or
cmp
and
xchg
push
es
in
lods
push
dec
and
mov
pop
xor
cmp
sbb
sub
dec
cmp
cmp
insl
sub
stos
dec
mov
mov
pop
mov
add
push
lret
and
outsl
xchg
in
test
das
mov
xchg
std
pop
xchg
pop
in
faddl
sub
cmp
mov
scas
stc
mov
jmp
or
sbb
scas
xchg
cld
psadbw
insl
in
dec
fidivrl
mov
push
bound
fdivs
ret
push
in
adc
inc
sbb
xchg
mov
subb
sub
repnz
shrl
outsl
scas
ja
insl
cmp
adcb
xchg
mov
inc
inc
push
out
pusha
mov
sub
stos
fldenv
sbb
pop
dec
pop
mov
insb
adc
movsl
cmp
jb
cld
add
sarl
xchg
loopne
mov
mov
add
jns
popf
ss
dec
idiv
mov
fnstsw
xchg
bsf
mov
es
jbe
push
jmp
mov
adc
addr16
int
bound
movsb
push
push
nop
test
mov
std
jge
sbb
jno
adc
push
mov
jne
jmp
dec
leave
outsl
cld
clc
pop
cmpsl
mov
xchg
sar
push
sub
in
sub
sbb
ds
lds
dec
dec
dec
mov
lods
cmp
lea
dec
out
add
mov
mov
jo
xor
scas
xor
or
fsubrs
inc
cmpsl
cs
cmc
add
lock
ss
and
ja
xor
push
mov
mov
xchg
push
shlb
sbb
mov
pop
sub
in
sub
mov
mov
loopne
fldl
xchg
pop
pop
scas
mov
mov
testl
pushf
insl
mov
pusha
mov
and
or
outsl
std
dec
add
cmp
sub
jecxz
dec
jns
scas
cmpsl
mov
sbb
or
and
js
cmp
in
cwtl
xchg
jp
inc
out
dec
pop
push
pop
xorb
inc
xchg
fimull
hlt
jmp
fistpl
xor
cltd
loop
inc
or
in
std
jge
cmp
scas
invd
add
mov
xorb
mov
clc
sahf
stc
loope
movsl
subb
cmpsl
rorb
ljmp
bound
xorl
pop
pop
lods
xchg
cli
loopne
out
push
inc
pushf
jecxz
and
add
and
roll
es
cmp
jno
je
fcom
push
mov
mov
mov
dec
xor
jmp
xor
mov
mov
jmp
leave
mov
popa
mov
push
sub
push
das
fwait
jb
or
pop
mov
push
hlt
add
lret
add
jp
push
push
xchg
push
mov
repz
mov
pop
fisubrs
popf
je
test
les
add
insb
jecxz
jl
popa
ret
test
and
ljmp
pop
mov
push
sbb
fmuls
mov
or
je
xchg
lahf
lret
pop
gs
xchg
mov
push
test
scas
mov
enter
mov
imul
test
aaa
sbb
mov
mov
loop
xchg
imul
add
xchg
dec
js
mov
bound
add
mov
movsb
mov
lret
and
sbb
enter
push
repnz
fsubrs
loope
mov
pop
push
shlb
scas
jl
ds
movb
sbb
scas
pop
das
mov
jle
pushf
jbe
repnz
nop
stos
loopne
cmc
cli
push
sti
add
inc
pop
das
push
or
mov
nop
pop
iret
decl
push
cld
mov
dec
out
popa
lock
ret
push
and
fwait
cwtl
jns
cld
test
xor
je
cmp
daa
adc
lret
pop
fbld
cmp
mov
pop
out
addr16
fsubl
jge
cmpb
sub
test
aaa
loop
fwait
sub
lods
pop
mov
gs
loopne
out
lahf
fldl
les
cmp
cmp
loope
test
flds
inc
push
xchg
rolb
lock
xchg
cli
dec
mov
adc
cmc
fimuls
mov
push
xchg
push
ss
mov
test
cmpsb
jnp
dec
mov
shl
or
push
ljmp
jne
inc
ja
mov
inc
sub
sbb
ss
ja
xor
jmp
or
inc
lret
int
movsl
push
js
pop
icebp
outsl
add
push
inc
push
cmp
mov
dec
fnsave
dec
push
add
push
jmp
dec
cmp
les
or
xor
mov
fwait
xor
push
insl
fdivp
sti
test
fstpt
push
mov
fdecstp
test
lock
jle
icebp
cmp
or
push
jo
mov
inc
pop
sub
sarl
leave
add
mov
jns
xor
pushf
outsb
jno
std
and
mov
pop
sbb
out
enter
sti
cmpsb
cs
arpl
jp
mov
sub
adc
mov
mov
cli
pop
fidivl
pop
cmp
mov
das
lods
xorl
sub
mov
jb
mov
cmpsl
add
inc
jns
fadds
dec
xor
add
cmp
sub
mov
mov
lcall
mov
jno
mov
imulb
ret
movb
sahf
jb
dec
xchg
mov
push
inc
fsts
push
scas
iret
hlt
jb
and
gs
gs
rcrl
or
xchg
cmc
sahf
sbb
insb
ret
inc
and
add
inc
mov
lock
dec
mov
inc
aaa
test
das
cmp
rolb
sbbl
ds
fcomi
fs
sub
mov
push
sub
lods
sub
enter
inc
pop
sbb
lock
rcll
cmp
and
jb
lret
ljmp
mov
inc
adc
inc
shrb
nop
cmp
add
iret
mov
cmpsb
nop
shlb
push
lea
mov
push
daa
das
cwtl
jne
mov
cmp
insb
out
lret
ja
inc
fstl
in
add
shlb
movsb
movsb
inc
mov
pop
mov
je
jmp
inc
aad
adc
orl
mov
add
xchg
push
xchg
jns
daa
jmp
dec
hlt
and
lods
inc
in
outsl
adc
pop
xchg
or
iret
sub
or
sbb
sub
jmp
cltd
jp
cmpsb
jo
jno
clc
cmpsb
aaa
xchg
scas
shrb
test
stos
add
xchg
mov
sbbb
sbb
in
scas
fiadds
jl
add
push
pop
push
pop
inc
clc
dec
xlat
stos
sub
push
mov
ja
rolb
mov
out
fbld
add
xor
and
or
jb
aas
inc
lods
pop
call
pop
pop
pop
ja
cmpsb
ds
xchg
int
addl
mov
jbe
or
mov
mov
or
pop
mov
sbb
sbb
sub
mov
add
clc
push
push
lock
mov
mov
mov
mov
insb
and
outsb
hlt
cmp
aas
decb
mov
das
add
mov
pop
cmp
and
fdivrs
in
xor
adc
push
mov
push
int3
shrl
push
inc
mulb
sub
xchg
sub
cmp
inc
test
mov
cmc
int
adc
bound
js
ja
rep
sub
add
adc
sub
iret
mov
test
rolb
scas
fistpll
xor
lea
add
mov
mov
bound
and
mov
dec
ret
sbb
gs
leave
or
mov
not
movsl
pop
sub
lret
inc
add
mov
lcall
mov
mov
mov
cmpsl
lods
pcmpgtd
pushf
or
cmpsl
aad
lea
pop
mov
pop
mov
enter
std
dec
dec
mov
fisttps
nop
cmc
mov
and
or
std
popf
mov
pushf
mov
pop
rolb
xlat
subb
adc
adc
outsl
xchg
rcl
out
mov
pop
into
outsl
push
enter
add
or
cmpsb
shlb
inc
insb
sbb
stc
fnstenv
cs
insb
add
loopne
cmp
lahf
test
cld
clc
adc
sbb
mov
cltd
and
clc
add
and
push
jnp
shlb
cmpb
cmp
cmc
hlt
outsl
jno
negb
es
lcall
inc
js
sti
aam
push
pusha
xchg
xchg
movsb
out
adc
iret
dec
iret
jne
mov
push
pop
inc
sub
test
popa
inc
inc
out
cmp
xchg
cmp
inc
int3
jnp
or
rcrl
shll
jmp
and
and
push
sbb
ja
sbb
lret
pop
shl
pop
daa
xchg
ss
ljmp
sbb
lods
jp
insl
or
push
jecxz
and
push
addr16
mov
sub
xchg
push
test
xchg
xchg
imul
iret
test
and
xchg
cmpsl
ss
mov
movsl
leave
stc
scas
loope
outsb
sbb
fscale
push
mov
pop
xor
pop
inc
add
pop
clc
or
push
dec
pushf
idivb
push
test
out
cld
arpl
cmp
movsl
mov
addr16
pushf
dec
outsl
mov
arpl
adc
xor
cmp
mov
lret
lods
fcmovnb
dec
jb
or
aaa
mov
out
push
aaa
incl
mov
cltd
shrl
lock
call
adc
and
and
fidivrl
or
sub
lret
sbb
cltd
adc
pop
shll
add
cmp
xchg
push
push
in
mov
shll
jno
cmp
ja
mull
sbb
sub
cmp
and
mov
mov
xchg
mov
or
mov
in
sbbl
push
std
push
nop
add
ret
push
jnp
push
fcomip
fcomps
cli
out
xor
inc
jne
imul
mov
dec
cmp
sbb
xchg
inc
mov
sbb
push
mov
mov
popf
or
dec
das
mov
mov
xchg
pop
mov
into
mov
sub
jns
frstor
sbb
add
jle
imul
cmp
pusha
adc
adc
jecxz
bound
jo
jmp
jne
gs
jge
or
mov
pop
adc
xchg
fstpt
js
mov
sub
push
scas
pushf
loope
xor
xor
inc
adc
hlt
sbb
add
or
mov
xor
sub
dec
lcall
push
and
fcmovnb
movb
sub
cmp
xor
lds
cli
dec
imul
scas
mov
int
and
cltd
pop
repz
cmp
mov
xor
out
adc
stos
sub
bt
pop
dec
adcb
loopne
pusha
jns
push
negb
scas
out
addb
jae
inc
pop
sbb
dec
leave
ja
sub
sti
or
popa
sbb
sub
int
stos
or
mov
mov
mov
push
outsl
loopne
adc
dec
push
sbb
out
jnp
aas
inc
ja
jbe
xchg
jae
pop
xchg
test
push
pop
inc
jo
push
dec
dec
push
xchg
xor
add
sub
pop
test
push
addb
push
jg
push
fidivl
cmpsl
aas
nop
adc
cmp
jp,pn
jl
icebp
dec
aaa
imul
loop
xor
pop
xchg
hlt
dec
jne
ret
lcall
mov
cmp
lds
add
je
adc
cmpsl
xchg
push
bound
jl
mov
sti
inc
pop
jge
fdivr
jecxz
dec
add
and
xor
aam
inc
inc
pushf
out
push
scas
and
inc
dec
mov
jge
in
lret
movsb
dec
das
pop
adc
cli
jl
shrl
and
xchg
test
mov
mov
fcomp
mov
pop
dec
inc
hlt
push
xchg
mov
ljmp
shrl
and
pop
popf
sub
aam
dec
nop
adc
shl
add
add
mov
out
sub
loop
rorb
ja
bound
shlb
mov
xchg
or
std
ljmp
inc
ds
sbb
or
sbb
adc
iret
shlb
repnz
rclb
dec
out
ljmp
jnp
mov
cmp
arpl
mov
sbb
aaa
mov
ret
mov
aas
jecxz
push
cli
mov
or
loopne
mov
js
lods
push
les
fstl
jnp
or
jp
idiv
dec
push
pop
incl
mov
pushl
int3
popf
pop
test
rorl
add
imul
aas
jns
in
adcb
aas
inc
mov
add
psllq
mov
pop
and
mov
cmp
jge
cmp
fwait
addr16
addr16
xor
icebp
sbb
xchg
lods
es
repnz
jl
xchg
mul
cmp
mov
xlat
xchg
imulb
lods
loope
pushf
or
xlat
out
or
sub
into
lods
repnz
movsb
imul
leave
add
dec
cltd
aad
push
les
and
loope
jb
in
xchg
and
jae
jp
cmpsl
out
push
leave
mov
add
lret
arpl
fadd
lea
jg
cs
xor
enter
ror
aad
pop
mov
popa
sbb
test
ror
lods
fsubp
or
mov
fst
fstpl
adc
push
adc
cmp
jecxz
mov
inc
clc
repz
je
aas
out
xor
add
xchg
mov
mov
adc
jae
gs
xor
mov
sub
lea
loop
ret
push
mov
dec
in
rcrb
dec
nop
pop
pop
insb
cmpb
repz
imul
loope
mov
and
xchg
inc
cwtl
in
out
cmp
es
xchg
mov
mov
or
int
shrb
outsb
out
dec
add
mov
xchg
add
testl
xor
pop
add
int3
sub
mov
rcll
into
pop
mov
jns
sahf
cs
inc
lods
add
sbb
mov
loope
add
adcl
out
rcrl
ss
xchg
jne
pop
mov
outsl
dec
pop
jp
dec
push
xchg
add
xlat
es
not
or
lds
xor
cmp
hlt
xchg
aas
mov
jl
mov
inc
test
jae
subb
gs
jg
pop
pop
fld
cmp
xchg
sub
and
sbb
pop
mov
testb
mov
das
push
cli
cmp
mov
xchg
sbb
jno
inc
cmp
jae
data16
add
lcall
mov
adc
das
in
test
pushf
data16
push
push
xlat
push
fildll
ljmp
addr16
stc
nop
in
push
or
or
insb
lahf
jmp
sub
into
mov
add
sbbl
fwait
cmp
jl
repnz
pop
add
sbb
in
lods
aas
decl
cmc
jp
xchg
add
lea
cs
mov
fimuls
xor
gs
or
dec
xchg
aas
push
movsl
mov
dec
and
shrl
mov
scas
or
jne
test
out
cmp
cmp
push
mov
adc
in
inc
jnp
rclb
cltd
lahf
mov
arpl
aam
adc
mov
divb
pop
mov
push
ljmp
inc
and
jg
and
shl
or
lea
gs
add
inc
sub
add
or
pushf
and
enter
mov
mov
pop
dec
scas
dec
cld
pushf
jb
aaa
pop
and
imul
xchg
mov
lcall
push
pop
add
jno
pop
lahf
inc
push
and
loope
or
and
xor
jecxz
push
add
test
dec
iret
test
jl
aaa
inc
push
add
sbb
mov
test
lock
lods
xor
imul
add
mov
inc
jae
pusha
lret
stos
lds
pop
mov
clc
insl
add
adc
out
jl
mov
push
dec
xor
ja
pop
jg
pusha
cmc
fwait
cmc
cmpsl
inc
mov
xor
mov
push
mov
xor
sub
pop
lea
aad
dec
cmp
lea
push
imul
leave
cmp
or
lret
pop
call
or
divl
jb
inc
mov
out
push
sub
inc
das
adc
pushf
and
setno
pop
mov
in
pop
lds
outsb
sbb
in
mov
add
inc
mov
repnz
jbe
sbb
movsb
test
cmp
in
scas
push
jb
scas
mov
mov
mov
test
or
inc
insb
push
mov
loopne
sub
push
push
mov
push
adc
mov
lock
and
mov
push
mov
leave
iret
and
out
gs
mov
leave
ret
outsb
cmp
shlb
mov
cltd
dec
mov
sub
mul
stos
jecxz
pop
mov
and
push
jmp
push
jns
sahf
sub
xlat
ffree
out
sbb
push
scas
sti
scas
lret
sub
jmp
outsb
push
pop
jne
cwtl
sub
imul
fdivrl
mov
test
lea
pop
pop
fisubs
inc
xorb
mov
lcall
inc
add
fsts
int3
push
mov
cwtl
ret
push
loop
into
pop
repnz
scas
sub
jns
subl
scas
add
lret
adc
xor
movsb
add
insl
mov
out
lea
and
mov
das
cmp
push
push
test
mov
add
lret
xorl
mov
test
enter
cmp
rcrl
mov
imul
rcl
dec
push
cmp
xor
mov
inc
sub
jl
mov
mov
dec
mov
xor
mov
clc
cs
dec
icebp
std
xor
dec
xor
adc
movsl
leave
xor
mov
test
adc
push
cmovns
mov
pop
push
repnz
sub
adc
mov
cmp
jmp
inc
dec
push
sbb
mov
push
xor
fldl
fs
arpl
repz
adc
mov
loop
xlat
add
push
mov
xor
mov
ret
mov
jbe
dec
jmp
negb
popa
imul
xchg
cmc
xor
push
imul
cs
shl
daa
jo
xor
cmc
cmp
sbb
sbb
pop
xchg
add
icebp
sbb
lds
leave
das
divb
xchg
sub
mov
insl
mov
fcomps
addr16
sub
lahf
outsb
push
sar
call
adc
loope
loope
inc
shlb
xchg
lcall
xor
iret
sub
add
push
imul
jecxz
jmp
test
xor
mov
fimull
mul
dec
nop
jle
push
lods
jnp
fnsave
repnz
dec
xor
mov
fwait
inc
in
js
lea
iret
fsts
xor
mov
add
int
xor
outsb
nop
pop
arpl
and
mov
jg
jns
imul
mov
or
ds
adc
pop
mov
pop
sbb
stc
fdivrp
inc
and
pop
iret
testl
aad
mov
arpl
mov
daa
mov
and
jo
sbb
adc
ret
jne
sub
clc
aaa
sbb
fdivrs
lea
pop
add
stos
sub
stos
xlat
pop
lods
cmpsl
lds
dec
sarl
into
je
mov
mov
testl
das
dec
cmpsb
mov
lds
data16
lret
push
jbe
enter
lcall
fdivrp
jecxz
jp
aas
stos
push
ret
push
mov
enter
cwtl
icebp
add
xchg
loopne
pop
xchg
pushf
jno
jecxz
mov
pop
in
mulb
jg
adc
dec
rcll
cmp
push
lea
int3
test
dec
pop
and
inc
and
stos
fstp
mov
cwtl
add
mov
xor
insl
sub
fidivrs
push
es
mov
cltd
mov
jbe
fdivl
jl
sub
and
or
add
push
push
sbb
dec
outsl
aas
movsl
add
enter
lock
mov
xor
loopne
addr16
jae
jae
pop
dec
lea
dec
cmp
into
dec
loop
les
push
mov
icebp
mov
test
dec
sbb
mov
shl
fwait
xor
clc
and
ret
and
push
xor
mov
jl
xlat
loop
cmp
loopne
dec
lret
push
inc
mov
xlat
mov
imul
das
fwait
imul
push
sbb
cmpsl
xor
cmp
mov
xchg
sbbl
mov
lahf
pop
sub
pop
lcall
iret
testb
lcall
lcall
xor
pop
ja
data16
mov
lock
mov
jge
je
xor
jns
test
xchg
rorl
push
addr16
bound
xorb
xchg
or
mov
pop
and
add
mov
mov
es
cltd
pop
pop
dec
jecxz
fwait
loopne
mov
cmpsb
pop
add
shlb
sub
leave
out
mov
mov
outsl
mov
shlb
xor
xor
into
mov
fnstsw
lea
mov
mov
scas
les
push
xchg
jle
dec
les
add
imulb
lret
je
and
cli
push
add
das
notl
inc
mov
mov
fbld
lret
adc
xor
mov
add
ja
stos
icebp
push
in
mov
movsb
add
adc
cmp
shrl
fldl
cmp
hlt
xchg
mov
jnp
push
andb
filds
lret
mov
push
pusha
rclb
mov
icebp
mov
push
xor
das
cmovno
sub
ret
incb
and
out
fs
mov
shr
cmpsl
test
and
mov
mov
fiaddl
and
cmp
cwtl
xchg
sbb
ficomps
inc
sbb
fcomps
insb
adc
mov
sub
cwtl
das
movsl
cld
mov
xchg
pop
negl
xor
int3
sub
push
push
or
push
outsl
test
mov
mov
adc
fcom
outsb
shrl
xor
push
out
cmp
js
addl
idiv
mov
imul
cmpsb
xor
push
cmpsl
xor
dec
nop
in
mov
cmp
xchg
inc
loope
cmp
lret
addr16
mov
push
in
mov
mov
push
in
xchg
lods
rcrl
lds
jbe
data16
scas
je
movb
dec
sti
push
mov
outsb
cltd
push
pop
bound
sbbl
or
xchg
cld
loope
add
xchg
dec
repnz
test
pop
add
enter
mov
mov
xchg
test
mov
lret
mov
inc
in
and
pop
sub
xor
xlat
mov
push
sbb
lret
lods
push
xchg
jmp
ret
push
mov
mov
mov
addr16
pop
xor
das
in
rcr
push
mov
ret
pushf
jno
ffreep
fcmovnu
sub
das
xchg
out
xchg
fs
and
fcos
adc
sub
loopne
outsb
adc
or
call
aaa
mov
xor
test
enter
dec
jno
pop
fldl
mov
test
cmp
stos
in
jbe
add
insl
xchg
adc
loopne
sub
push
pusha
std
mov
imul
stos
push
cs
cld
mov
cmp
das
pop
push
loopne
push
scas
ljmp
lods
add
fucomi
mov
test
insl
lods
push
sub
inc
sub
xchg
jp
pop
lcall
ljmp
lret
ret
jmp
and
test
mov
mov
movsl
sub
clc
and
pop
stos
mov
pop
fs
push
push
aas
push
sub
hlt
inc
pop
mov
sbb
cli
cmp
andb
adc
leave
lods
fwait
scas
jno
pop
inc
mov
jne
fwait
les
js
mov
imul
test
jp
adc
or
icebp
sahf
mov
inc
push
sti
arpl
fucom
add
xlat
in
sbbb
and
lds
jb
jns
lods
fwait
inc
push
sti
pop
int3
inc
and
ret
sbb
adc
pop
les
jle
push
je
push
dec
push
loope
sahf
lret
popa
aam
mov
movsb
mov
in
xchg
sbb
push
pop
inc
leave
pop
nop
adc
pop
lret
mov
sub
sti
ret
dec
aaa
inc
push
popf
pop
mov
mov
jae
add
repnz
stc
lret
mov
std
pop
sbb
and
xor
repz
ljmp
leave
mov
repnz
fldenv
pop
pop
lret
sub
xchg
lock
adc
out
or
mov
dec
mov
pop
outsl
mov
xor
mov
push
adc
adc
cmovne
cmp
adc
sti
xchg
mov
mov
in
mov
cmp
orl
ret
push
fsubrl
or
push
hlt
mov
add
dec
roll
mov
mov
or
lret
inc
addr16
in
and
je
sbb
inc
addr16
push
or
in
gs
dec
fcmovnu
mov
int3
jp
dec
testb
mov
js
or
mov
cmp
xchg
and
insb
inc
scas
and
add
stos
push
aam
mov
outsb
lcall
rorb
sarb
mov
and
in
aam
test
mov
bound
cs
inc
pop
lock
adc
pop
flds
inc
fdivrl
cmp
mov
add
sub
xchg
push
ret
mov
test
pop
icebp
jp
fwait
mov
xchg
lods
stc
mov
loopne
leave
mov
paddsb
cmp
incl
sub
lahf
fnsave
mov
ja
imul
mov
jp
iret
cltd
xor
xchg
repnz
pusha
sub
push
in
mov
adc
pop
inc
popf
not
outsb
push
mov
xchg
lcall
neg
adc
inc
cmp
mov
inc
sub
inc
dec
sti
sbb
jne
push
push
mov
inc
push
in
or
or
arpl
push
in
enter
sub
dec
mov
sahf
outsb
outsb
in
xchg
xor
mov
push
mov
rcrb
les
leave
adc
and
dec
aad
sbb
lret
pop
mov
into
dec
xchg
shll
sbb
jb,pt
adc
aam
push
xor
cli
xlat
mov
or
and
ljmp
dec
shlb
outsb
cli
xor
add
js
push
mov
mov
fdivr
or
mov
movsl
int3
jo
xchg
push
cmp
mov
popa
jns
add
cwtl
sbb
dec
mov
sub
movsb
jg
cmp
orb
cwtl
mov
mov
pop
or
cmp
push
lods
pop
mov
or
orl
das
data16
test
cmc
mov
add
out
ss
in
pop
pop
cmpsl
loope
test
out
je
push
dec
loope
iret
mov
mov
mov
push
cmp
cltd
and
mov
cltd
clc
jmp
cmp
mov
icebp
stos
hlt
mov
lods
out
jl
mov
dec
bnd
mov
dec
adc
push
hlt
int
inc
mov
nop
or
add
jb
movsb
rorl
dec
xor
psubusb
push
ret
adc
jbe
repz
pop
inc
dec
rcr
or
adc
lahf
jo
mov
xor
sbb
sarb
pop
xor
pop
ljmp
cli
stc
xchg
push
mov
or
fidivs
cmp
loopne
mov
cmp
sbb
xchg
outsl
mov
or
cli
jbe
xor
movsl
lods
mov
cmpl
and
or
pop
loopne
decl
sbb
imul
pop
mov
pop
or
cmp
lahf
cwtl
mov
or
mov
or
jb
das
cmp
and
out
popf
mov
adc
daa
sbb
stos
lea
inc
cli
lds
pop
jp
pop
jo
inc
or
cmp
inc
decb
add
inc
mov
pop
js
cli
inc
sbb
pop
ret
xchg
xor
mov
in
daa
cmc
inc
stos
or
lods
mov
je
inc
sbb
cli
js
jnp
clc
dec
idivl
or
loopne
xorb
data16
lret
or
dec
stc
xchg
das
bound
xchg
cmpsl
pop
xchg
or
and
lock
fs
daa
insb
mov
sub
nop
jl
subb
hlt
cmp
sbb
pop
inc
pop
jmp
mov
out
testb
xchg
sbb
pusha
mov
mov
mov
or
xor
xchg
ror
pop
ret
push
cltd
out
movsl
and
cld
cltd
fcoml
out
je
or
mov
push
sbb
push
fs
insl
sbbb
inc
out
push
icebp
bnd
aaa
jge
repnz
test
in
popf
mov
jno
inc
shr
and
cmc
cmp
xor
mov
jns
lds
sbb
or
out
jae
and
cmp
jnp
pop
jl
dec
sub
sub
mov
push
fcmovbe
lret
xchg
dec
ret
daa
cmp
mov
dec
push
add
inc
imul
xor
mov
push
push
pop
add
pop
cmpsb
shr
pop
push
inc
lea
insb
fldt
out
adc
gs
fucomp
lahf
or
sbb
sbb
cmp
movsb
pop
mov
pop
ret
icebp
sub
leave
cmp
mov
lock
or
rolb
jge
jge
sbb
cld
jge
dec
sub
pop
jo
mov
insb
frstor
leave
inc
sbb
lcall
jae
clc
sub
pop
xchg
loop
fstpt
mov
in
repz
in
xchg
and
iret
mov
or
mov
addl
and
outsl
sub
mov
cmp
jp
repnz
pop
daa
xor
add
xchg
xchg
mov
stc
jge
ror
sbb
lods
and
sbb
lcall
aaa
jmp
jmp
out
mov
fwait
add
cmp
out
lahf
jae
loopne
dec
mov
movsb
mov
scas
mov
out
mov
push
inc
and
jbe
inc
lock
pop
or
sbb
lods
mov
in
xchg
mov
stc
xor
cld
mov
int
in
test
aaa
iret
xchg
adc
outsl
dec
and
imul
dec
call
or
sbb
push
arpl
mov
lods
test
xor
jle
shll
push
xchg
or
inc
or
pop
fs
pusha
fnstsw
cltd
pop
jns
int3
scas
lcall
in
xchg
push
mov
cmp
movsl
repnz
int3
call
dec
cmc
jle
pop
fwait
adc
imull
ret
sbbl
shrd
test
test
outsl
cmp
ret
pop
lock
dec
popf
xor
and
adc
fwait
sub
sahf
push
sbb
add
insl
mov
sub
adc
lods
fcomi
imul
cmpsb
sbb
imul
add
movl
aas
dec
mov
xchg
jo
shll
mov
cmpsl
jae
stc
mov
push
xor
add
sub
lea
out
and
sub
pushf
movsb
pop
test
enter
stos
xor
dec
out
daa
ret
aad
mov
sbb
xchg
jecxz
mov
lahf
jns
xchg
fidivl
jecxz
mov
push
xchg
pushf
movsb
sbb
xchg
outsl
mov
jg
addr16
orl
xlat
out
in
inc
pop
je
shl
dec
jno,pn
add
aaa
movsl
test
push
push
call
mov
in
lods
jne
or
adc
jp
movb
pushf
xor
call
mov
add
rolb
bound
lods
or
aas
mov
mov
inc
mov
cwtl
ss
dec
jno
and
aas
fs
cmpsb
into
pop
lcall
enter
xor
fdivs
xchg
sub
clc
testb
push
adc
loope
push
stos
fmuls
add
or
xor
aas
scas
cmp
arpl
ret
xchg
scas
lock
dec
sbb
test
sarb
jp
sbb
ret
sbb
inc
jne
jnp
sub
outsb
test
ret
pop
pop
push
jl
dec
pop
sbb
add
add
sub
sbb
push
cmp
add
pop
idivb
fwait
ret
push
daa
fs
loopne
pop
sub
push
imul
xor
lcall
int
movsb
mov
mov
lods
inc
add
sbb
mov
sbb
ss
or
movsb
pop
push
jge
js
inc
cmc
or
add
loop
push
arpl
or
mov
push
pop
push
fistpl
jo
sub
sbb
aas
push
mov
or
lret
sbb
jecxz
mov
lahf
xchg
mov
fwait
scas
jnp
sub
std
popw
mov
inc
push
je
jle
inc
jmp
rolb
inc
mov
lea
mov
aad
jne
mov
in
add
popf
nop
inc
cmpsb
out
ss
lret
fsubrp
mov
or
ffreep
mov
jecxz
add
inc
mov
arpl
lahf
int
xlat
mov
mov
jnp
repnz
xchg
jmp
dec
jo
in
stc
test
imulb
loopne
sbb
lds
inc
push
bound
pop
inc
jge
push
push
in
bound
repnz
cmc
sbb
in
imul
nop
jge
xchg
jg
sub
mov
pop
jp
jp
pop
lock
fmuls
mov
repz
jno
dec
sbb
jns
jge
cmp
dec
lcall
xor
adc
jae
mov
fdivs
adc
sbb
and
cmc
lods
jmp
adc
sub
pop
and
dec
pop
call
add
cmp
lret
cmpsb
inc
in
inc
adc
push
cmp
jge
pop
sub
adc
mov
adc
in
sbb
aaa
cmp
mov
imul
pop
xchg
pop
add
ja
mov
out
aam
push
ret
pop
sub
sub
cs
inc
scas
dec
lcall
mov
test
mov
fsubrl
push
stc
mov
ret
cmp
iret
push
jecxz
testl
xor
mov
push
movb
mov
in
add
stos
loopne
jae
lock
and
inc
arpl
mov
xchg
push
ja
subb
mov
rcrb
xchg
xlat
mov
test
pop
sbb
pop
push
hlt
scas
jb
mov
lret
jae
push
mov
aam
rcrb
mov
test
je
ja
push
pusha
cmp
add
push
push
pop
mov
loopne
jp
sbb
dec
les
addl
sub
enter
sbbb
sbb
jl
mov
shlb
pushf
cmp
or
sbb
sbb
int
inc
push
leave
loop
sbb
sub
in
rcll
idivb
or
and
leave
xchg
ss
jno
xchg
fwait
sub
hlt
xchg
je
pushf
jmp
mov
push
outsb
fildll
pop
cltd
jg
push
xor
push
in
or
fstpl
xor
std
push
stos
ljmp
dec
enter
dec
or
add
fbld
gs
sub
mov
outsl
std
push
xor
mov
sub
shl
pusha
add
and
push
filds
popf
or
jo
or
and
mov
sub
scas
jns
inc
push
mov
test
cwtl
push
jle
jno
fildl
dec
adc
pop
inc
popf
xchg
lods
push
xor
jl
jno
fcompl
aaa
daa
inc
repz
mov
adc
inc
in
rol
mov
test
cmpsl
sub
addl
and
sub
jbe
xor
leave
mov
push
xlat
std
jb
push
mov
add
cmpb
xor
jmp
cmp
and
xor
add
je
cs
insl
sub
pop
insl
push
cmp
mov
loopne
or
loope
dec
cmc
lods
cmc
mov
cli
pop
outsl
dec
pop
imul
rsqrtps
lods
jae
fs
in
popf
mov
xchg
loopne
mov
or
repz
shll
xor
in
adc
fadd
lods
pop
or
xchg
sbb
lahf
inc
and
add
xlat
sub
clc
shr
push
or
adc
loope
aaa
jbe
mov
cli
lock
stos
and
mov
je
mov
nop
jne
and
push
fwait
cmpsb
cmp
cmp
lods
cmpsl
dec
fsubrs
and
sub
sbb
je
je
outsl
and
jmp
inc
lahf
jecxz
aad
inc
add
pushl
out
push
dec
shll
js
into
add
lea
loop
cmp
rorb
movsl
popf
mov
and
movsb
cmp
sbb
out
mov
addr16
jle
rcr
in
lods
dec
dec
inc
rcrl
sbb
call
test
ss
and
cmp
out
jae
nop
stc
or
xchg
add
es
mov
call
xchg
pusha
push
cmpsl
sbb
adc
mov
outsl
dec
cmpsb
aas
lock
xchg
nop
mov
cld
mov
adc
repz
je
xorl
add
mov
adc
pop
pop
iret
jbe
jnp
fstpt
mov
clc
or
je
push
adc
cmc
pop
pop
dec
insb
jne
add
outsl
xor
push
hlt
xchg
cld
jl
xor
test
jno
cmp
ja
pusha
cmp
lea
xor
inc
enter
pcmpeqb
jb
sahf
dec
das
sbb
lahf
or
in
cmp
testl
and
das
xor
cmp
pop
sbb
aad
out
cli
adc
mov
mov
mov
lahf
cmp
dec
jl
out
mov
or
call
pusha
xor
mov
jbe
adc
out
sbb
xor
nop
hlt
cmp
dec
or
aad
divb
into
outsl
out
divl
cltd
pop
clc
jg
pop
adc
mov
push
xchg
push
cwtl
ret
inc
fwait
push
lods
clc
je
and
push
daa
lret
repnz
push
push
shr
scas
int3
xchg
in
test
sbb
dec
das
mov
pop
xor
pop
ret
dec
mov
repnz
popf
test
mov
push
mov
ds
cmc
jg
mov
and
mov
push
mov
dec
sbb
lds
mov
xchg
ss
rorb
dec
repz
lea
xchg
pop
ror
adc
jb
dec
sub
popf
xchg
mov
jp
mov
xchg
pop
add
jle
enter
inc
push
cs
add
cmp
or
xchg
incb
testl
mov
mov
dec
in
and
sarl
sbb
or
int
mov
or
dec
jns
lock
faddl
scas
aas
adc
lret
mov
lods
cmc
sbb
out
jmp
fiadds
jno
sub
push
jne
mov
fistps
pusha
lods
xorb
cmp
cwtl
fistl
or
lea
imul
hlt
sub
mov
lods
insb
out
bound
popa
push
int3
push
sbb
fidivrs
push
mov
push
sbb
cmp
cmpsl
push
add
aad
lret
push
or
shlb
cmpsl
arpl
jnp
addb
ds
jmp
js
inc
cltd
scas
dec
xchg
frstor
sti
jne
ljmpw
adc
mov
data16
ja
loopne
jecxz
push
mov
cmp
pusha
cmp
inc
jp
mov
jno
dec
push
inc
or
filds
clc
loopne
mov
cmovno
inc
jne
mov
ss
ficoms
out
fs
sbb
inc
sahf
jle
je
dec
push
test
movsl
dec
imul
gs
jae
mov
jne
mov
test
outsb
and
and
sub
xchg
nop
mov
js
cmp
outsb
sub
push
mov
xchg
fstl
lahf
fsubrl
xchg
imul
jge
mov
mov
imul
pop
leave
xchg
dec
clc
dec
out
adc
cmp
mov
js
inc
iret
sub
push
push
jmp
aam
test
mov
mov
cmp
out
sbb
mov
mov
xor
inc
fimull
xor
adc
das
movsb
add
mov
lods
xchg
scas
mov
sub
popf
push
insl
adc
fldcw
scas
sahf
cmp
ss
jmp
lret
dec
sub
pop
xchg
xchg
ljmp
fucomi
mov
xor
test
xlat
pop
xor
scas
and
jae
xchg
mov
pop
in
adc
mov
or
mov
mov
loopne
mov
gs
push
sub
addl
lods
mov
enter
div
pop
pop
sub
adc
adc
xchg
cmp
punpckhwd
aam
xor
pop
cmp
lret
adc
movsb
mov
xor
imul
pushf
scas
icebp
aaa
jmp
shl
sti
xor
xor
repnz
into
clc
dec
mov
sbb
lret
mov
in
stc
inc
or
push
sub
jb
inc
push
cmp
push
inc
add
or
or
int
xchg
cmpsl
pop
hlt
dec
xor
pop
cli
inc
repz
fnsave
xor
cs
imul
mov
inc
rcrb
jge
mov
in
xchg
imul
mov
mov
jle
dec
daa
fidivrl
push
sub
leave
adc
push
or
leave
gs
xor
xorb
mov
mov
add
inc
jecxz
pushl
or
push
daa
push
add
mov
cmc
inc
mov
mov
dec
inc
pop
sbb
sbb
pop
push
fidivl
dec
sub
mov
jp
dec
push
cmp
rol
fildl
aam
push
loop
mov
mov
ds
into
aam
hlt
sbb
movsl
mov
int
mov
mov
pop
call
sbb
imul
mov
fisubl
mov
xchg
decl
add
jae
jle
call
cmc
jle
jbe
bound
jbe
lock
insl
mov
sbb
cmpl
pop
jge
and
add
ret
popa
scas
cmp
mov
idivl
cwtl
xor
inc
pop
jne
inc
test
pop
mov
and
into
mov
lock
push
out
fsubs
pop
fimull
out
test
outsb
ror
daa
movsl
add
mov
iret
das
add
add
pop
test
in
jp
test
in
cmp
push
test
scas
cmpb
into
fld1
out
jne
setg
enter
shrb
sbbl
or
sub
aaa
out
in
fwait
push
cmpb
rcrb
and
cmpsb
pusha
xchg
leave
divb
test
repz
pop
icebp
mov
fistl
xor
int3
imul
jecxz
out
add
adc
rolb
mov
cli
pop
es
xchg
mov
adc
pop
fnstenv
imul
mov
fsubrl
pusha
jno
shlb
imul
lret
xor
mov
push
lods
and
jns
push
mov
push
jg
movsb
movsl
ss
shlb
xchg
ja
jg
mov
mov
insb
pop
or
adc
call
push
pop
jb
cli
or
popa
arpl
push
push
fs
sarl
mov
aam
aam
adc
xchg
cld
iret
into
xchg
call
jae
sti
pusha
xchg
shrd
out
test
and
sub
jmp
sti
xchg
push
sarb
aas
mov
insl
or
outsl
inc
stos
in
sub
fcmovne
rol
testb
adc
add
xchg
cmp
xchg
outsb
stos
jbe
ds
mov
ds
fwait
shrb
xchg
or
sub
aam
ret
insb
inc
inc
sahf
lods
fistps
out
mov
adc
sahf
bswap
scas
outsb
push
dec
jp
xchg
flds
dec
cmp
mov
lock
xor
int3
imul
pop
or
push
xchg
push
inc
std
cld
fistpll
adc
mov
pop
in
sbb
out
push
pop
mov
imul
inc
mov
daa
dec
sbb
das
adc
cs
das
jmp
popa
cmp
jg
in
enter
mov
nop
mov
test
mov
push
out
loope
xorl
and
out
imul
outsl
xchg
fidivs
pop
inc
xorl
sbb
adc
aaa
sbb
data16
adc
xchg
stc
inc
fdivrs
lods
out
movsl
xor
cld
ret
arpl
sbb
rcl
adc
and
call
popa
lahf
daa
and
mov
arpl
loopne
and
movsl
jmp
or
pop
push
xchg
mov
in
lea
pop
je
cmp
sbb
xchg
lretw
out
pusha
ja
and
push
int3
push
mov
mov
stc
dec
sbb
in
sti
sub
pop
cltd
hlt
adc
sub
jo
jbe
popl
dec
test
aaa
mov
loopne
pop
sarb
lock
inc
adc
bswap
jnp
lea
adc
iret
sbb
pop
xchg
jae
shll
sbb
mov
sbb
addr16
repnz
and
bswap
stos
mov
scas
mov
outsl
lods
dec
aam
aaa
jg
add
insb
inc
push
mov
fcmovu
jmp
push
sbb
int
xor
imul
mov
push
ss
imul
dec
mov
jno
inc
mov
loopne
insl
add
pusha
js
mov
fisttpl
adc
out
add
pushf
xor
cwtl
jae
cmp
out
dec
ljmp
rorl
jecxz
mov
lret
xchg
sahf
in
adc
xchg
cs
add
in
into
cmpb
mov
xor
pop
into
push
push
call
mov
xchg
in
mov
push
mov
xchg
pop
xchg
or
pusha
inc
xor
cmp
push
sti
cs
push
add
inc
mov
and
jne
int3
mov
je
and
mov
bound
mov
and
add
rcr
out
push
add
fisubs
adc
adcb
into
or
sbb
mov
jb
or
jo
sbb
test
in
call
imul
insl
add
fnstenv
sub
sbb
int3
outsb
jecxz
sub
mov
sub
nop
push
cli
pop
out
or
and
stos
pop
lea
adc
test
xchg
aas
insb
push
and
mov
xchg
lcall
sbb
mull
mov
jne
fsubl
out
pop
add
lret
inc
adc
xchg
push
outsl
inc
jnp
push
push
xor
lret
lahf
xor
sahf
fisubs
int
in
imul
or
and
fwait
add
fcmove
pop
ficomps
push
cmp
lds
push
jp
pop
xchg
mov
push
pop
add
pabsd
inc
div
shl
jle
or
sbb
xorl
cltd
jmp
adc
stos
push
lds
sbb
xor
sar
imul
les
scas
mov
jecxz
incl
shlb
test
dec
and
push
mov
cmpsl
cmp
mov
cmp
enter
push
push
cltd
add
inc
test
stc
dec
lahf
push
test
mov
lds
cmp
push
ss
dec
inc
sub
adc
int3
call
daa
insl
enter
pop
jne
out
fistpll
mov
ljmp
add
pop
mov
adc
xor
rcrl
mov
or
rcr
fbld
pushl
cmpw
xchg
sbb
inc
cmp
xchg
fwait
add
xchg
data16
mov
sti
push
das
insb
shlb
pusha
adc
inc
push
in
cld
mov
dec
and
or
jmp
ds
push
mov
inc
hlt
xlat
inc
fildll
mov
jb
ret
jl,pn
and
and
jnp
xchg
sbb
daa
and
jg
inc
inc
push
scas
popf
lcall
imul
lods
mov
and
popf
pop
js
lds
xchg
out
xor
xor
jp
push
cmp
lods
out
enter
and
pop
dec
fstps
insb
sbb
mov
jb
push
sbbb
jle
sbb
mov
aas
adcb
jns
fcoml
mov
and
ss
ljmp
jb
ret
mov
or
sbb
dec
bound
pop
in
sub
ret
adc
iret
or
inc
ret
notl
daa
das
dec
frstor
or
dec
shrb
pop
fdivrl
jne
aaa
xor
lock
ret
js
cwtl
inc
repz
add
fcoms
add
xchg
xchg
mov
mov
es
pop
pop
mov
ret
lcall
pop
xchg
or
sbb
call
dec
mov
jo
adc
cmpsb
cmp
jno
sbb
lret
fidivrl
bound
lock
lea
push
pop
orb
rclb
pop
repz
inc
pop
in
fadds
pushf
and
stos
insb
pop
loope
hlt
adc
hlt
fs
sbb
outsl
lahf
pop
ror
mov
ljmp
dec
inc
lret
sbb
cmp
clc
inc
push
cwtl
ljmp
push
repnz
outsb
addr16
pop
scas
lcall
cmp
fldt
mov
mov
js
mov
xor
pop
push
pusha
cli
movsl
add
xor
shrb
lret
push
xor
insb
mov
orb
push
lret
and
jbe
mov
and
fiaddl
jg
adc
cmp
lcall
sbb
or
xor
rorb
mov
fsubl
xchg
outsb
mov
mov
mov
adc
insb
push
mov
or
push
adc
mov
loop
out
test
adc
out
mov
fs
int3
pop
hlt
loop
lock
add
subl
jle
arpl
movsl
push
xchg
fs
push
mov
leave
pusha
pusha
js
mov
clc
enter
das
ds
jb
movsb
fistps
shll
psadbw
enter
bound
inc
push
pop
cltd
or
adc
xlat
mov
mov
and
dec
hlt
ljmp
mov
adc
sub
jbe
adc
inc
popf
int
xlat
jl
loope
push
aaa
add
sbb
xchg
push
imul
sbb
mov
cmpsb
rcll
mov
ss
popa
repnz
or
jns
xchg
or
sub
cli
push
mov
adc
dec
cmp
sbb
mov
shl
stc
popf
add
stc
ss
loopne
fmull
cmp
xchg
test
iret
outsl
jae
out
mov
push
mov
idivl
test
mov
mov
lret
adc
arpl
add
pop
jo
sbb
test
lods
out
add
and
fisttpll
lcall
mov
cli
xor
hlt
push
popf
shrb
xchg
js
mov
mov
adc
pusha
push
popa
add
or
and
loopne
pop
xor
scas
mov
mov
fcoms
jae
shl
mov
adc
js
jmp
fdivl
mov
xchg
jns
stc
out
push
loop
cmc
jo
jecxz
stc
test
adc
movsb
xchg
xchg
mov
pop
xor
or
outsl
cmova
or
fidivs
pop
in
or
inc
push
outsb
pop
loopne
cld
xlat
js
enter
push
scas
dec
or
repnz
mov
jle
or
int
cmp
sti
hlt
jb
jg
pop
arpl
fiaddl
fnsave
ja
xchg
xchg
fildl
push
cwtl
pop
xchg
cwtl
int
imul
in
pushf
xchg
xor
int3
les
mov
or
xchg
pop
cmc
ja
add
loop
jmp
dec
repnz
jg
jle
shl
shlb
shl
mov
rcrl
xor
pop
out
movsl
xchg
fnstcw
and
addb
inc
xchg
dec
push
ljmp
lds
jmp
add
xchg
adcl
dec
pop
dec
xor
sbbl
mov
sub
fsubrs
add
inc
push
mov
pop
popa
sbb
or
push
into
lods
je,pn
or
xchg
cmpb
loopne
cltd
repz
ljmp
mov
xor
sbb
leave
int3
dec
pop
lahf
int
nop
imul
jmp
loopne
inc
adc
xor
jo
or
mov
cmpps
aaa
dec
dec
ljmp
es
or
loope
pop
fistpll
stos
jmp
mov
mov
fldcw
mov
dec
mov
aas
adc
out
cltd
loop
cmp
adc
mov
rorb
dec
jle
fcoml
icebp
fstps
jg
fdivrs
lret
add
repz
lods
pop
in
push
lods
mov
divb
ret
fsubrs
push
add
pop
and
xchg
jmp
push
sub
or
dec
sbb
lcall
aas
mov
inc
sub
test
mov
int3
jnp
sub
pop
add
xor
lods
cli
dec
jno
mov
cmp
ret
or
and
xchg
pop
cli
sbb
lahf
icebp
jl
cmp
ja
xchg
push
mov
xor
sbb
sbb
loopne
jno
das
add
stc
mov
stos
sahf
cwtl
aas
dec
rclb
pop
mov
pop
daa
and
pusha
push
cld
jl
ficoms
enter
sbb
pushf
xor
dec
jmp
ss
mov
xchg
push
adc
cmp
jge
xor
test
mov
dec
xor
jo
testb
mov
fidivrl
repz
or
pop
push
aaa
leave
xchg
pop
add
imul
jb
push
jecxz
pop
jmp
ret
sub
ljmp
push
add
inc
sti
fisubl
aam
push
add
adc
fildll
inc
jp
mov
or
dec
aaa
sarl
mov
cltd
xchg
shll
ret
jge
lds
cmp
adc
and
push
inc
pop
sub
imul
push
daa
mov
in
jb
push
sub
or
loop
xchg
lret
into
push
add
jecxz
out
dec
scas
rcrb
pop
dec
inc
mov
xchg
add
jg,pn
dec
es
mov
stc
or
mov
cmp
insb
and
push
clc
outsl
scas
pop
mov
cmp
dec
es
jne
and
test
ret
xor
popa
jns
fucomip
jg
sbb
cmp
xor
mov
pop
cmp
shrb
ds
jb
lock
test
push
test
pop
popw
xor
test
es
iret
stos
addb
jecxz
adc
dec
lods
xor
mov
adc
lea
xor
in
movsl
aaa
popf
hlt
test
pop
cmpb
mov
add
fstpt
stos
and
sub
add
ljmp
add
popa
cmp
and
adc
int3
mov
lahf
bnd
lea
pop
ljmp
lcall
inc
lret
stc
cli
pop
repz
ss
mov
jp
inc
add
loop
jne
outsl
cld
xchg
add
gs
add
or
dec
in
push
leave
daa
adc
push
xchg
mov
xor
jp
pop
rcll
xchg
adc
pushf
repnz
or
inc
icebp
enter
xchg
xor
subb
xor
pop
inc
jl
mov
inc
and
jbe
sbb
and
inc
mov
fidivrl
ret
or
jmp
orb
inc
push
xor
mov
orb
push
fistpl
add
arpl
jb
mov
jecxz
clc
ret
sbb
or
adc
hlt
mov
mov
xchg
xchg
lds
mov
adcb
pop
sbb
fprem1
idivb
fsub
in
loope
jmp
setl
jbe
fists
inc
outsl
or
xlat
dec
sub
ljmp
sub
arpl
jl
pop
popa
stos
in
icebp
mov
popl
inc
push
cmp
aam
xor
es
dec
and
jb
sub
addb
mov
clc
mov
dec
jne
mov
adc
xchg
jecxz
ja
push
add
hlt
pop
test
adc
mov
ja
pop
shl
jns
adc
pop
repz
ja
and
push
xor
inc
jb
clc
xchg
dec
loop
in
cltd
adc
aas
pop
loopne
test
loop
lret
ds
sub
call
and
in
jns
mov
cli
xchg
in
addr16
loopne
orb
outsl
jnp
shlb
xor
ret
add
mov
lds
pop
adc
or
mov
andb
cmp
cmp
and
jmp
pop
popf
in
adc
mov
pusha
ret
mov
cli
or
outsb
test
out
push
lock
shll
lahf
xchg
pop
std
es
adc
lods
imul
outsb
pop
xchg
xor
adc
dec
mov
fisttpl
push
std
loope
cmp
mov
stos
mov
es
or
aam
es
mov
cmp
clc
add
xor
negb
push
lret
jp
push
xchg
sahf
push
mov
xchg
lret
cmpsl
pop
xchg
mov
xchg
add
aam
xlat
pop
imul
fists
jno
ret
aaa
jmp
pop
mov
xorb
test
pop
xor
mov
push
lods
roll
sub
jbe
jmp
cvtps2pi
imul
xchg
insb
cmp
repnz
cmpb
jne
icebp
ret
pop
xchg
ja
jo
pop
bound
.byte
