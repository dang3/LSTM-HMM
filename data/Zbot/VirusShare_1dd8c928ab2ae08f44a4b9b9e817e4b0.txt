pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
push
pop
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
jg
mov
jle
mov
popf
dec
call
add
jne
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
incb
scas
and
add
and
add
and
add
add
repnz
add
add
pop
and
add
and
add
and
add
and
add
and
add
add
adc
add
sub
add
andb
add
and
add
and
add
add
add
add
adc
add
mov
add
push
and
add
and
add
and
add
add
jbe
add
and
add
and
add
add
add
add
add
push
and
add
and
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
pop
and
add
add
add
and
add
and
add
and
add
add
repnz
add
add
pop
and
add
and
add
and
add
and
add
and
add
add
adc
add
sub
add
andb
add
and
add
and
add
add
add
add
adc
add
mov
add
push
and
add
and
add
and
add
add
jbe
add
and
add
and
add
add
add
add
add
push
and
add
and
add
and
add
add
add
gs
popa
jae
inc
jb
outsl
jb
add
push
gs
insl
gs
push
add
aad
inc
gs
gs
inc
imul
jae
jb
outsb
inc
add
rolb
dec
gs
jo
gs
jb
jns
push
push
je
imul
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
jle
dec
jo
outsb
dec
jne
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jb
jbe
push
jns
gs
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
dec
gs
jo
jb
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
gs
jb
arpl
jae
gs
jo
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
jb
je
arpl
add
cmp
fs
imul
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
enter
jae
gs
popa
insb
jne
add
push
dec
inc
dec
xor
cs
insb
add
mov
push
gs
imul
gs
add
addb
jae
push
arpl
add
inc
gs
push
outsl
insb
outsl
jb
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
push
jns
push
imul
gs
push
outsl
outsl
insb
add
jl
inc
gs
push
gs
dec
gs
imul
insb
outsl
jae
push
push
popa
je
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
add
ja
push
popa
arpl
jb
jne
add
inc
gs
imul
gs
add
aaa
add
ja
push
fs
add
outsl
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
inc
inc
push
push
inc
inc
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jnp
jp
stos
lods
lods
add
cmpsl
cmpsb
push
mov
mov
mov
ret
ret
leave
leave
lret
into
rcl
in
rcl
shl
rcl
iret
hlt
int
int
enter
leave
leave
leave
out
in
mov
mov
lods
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
fdivr
xlat
xlat
xlat
rcl
sar
int3
int
dec
rcl
inc
ret
mov
mov
scas
iret
movsl
movsb
movsb
xchg
mov
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
dec
rcl
aam
aam
fcom
fdivr
xlat
call
aam
int3
int
dec
int
call
aam
dec
int
inc
mov
mov
ljmp
cmpsb
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
call
rcl
call
xlat
xlat
call
fcom
call
aad
dec
into
int
lret
lret
into
int
inc
mov
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
aas
ds
push
push
push
das
push
push
movntps
push
xor
ss
cmp
adc
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
dec
enter
ror
call
aad
call
aam
call
ror
dec
leave
inc
inc
mov
mov
ljmp
movsb
mov
cwtl
xchg
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jl
jle
jle
jb
jo
arpl
mov
cmp
inc
mov
jo
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
dec
leave
leave
inc
mov
mov
lods
scas
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
xchg
lcall
lahf
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
pusha
xchg
fcoms
addb
jnp
jnp
outsb
outsl
outsb
out
push
data16
je
jge
jle
jp
jp
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
incl
addl
xchg
xchg
xchg
sahf
lahf
mov
ficomps
nop
jle
js
pop
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
mov
addb
decb
xchg
loope
jno
enter
mov
addb
xchg
addr16
cmp
and
jg
cmp
mov
test
icebp
lods
stos
stos
sti
stos
lods
lods
stos
lods
lods
test
stos
std
movsl
movsb
movsb
std
lcall
decl
jle
js
jns
jnp
jnp
mov
cwtl
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
push
pop
push
or
inc
inc
dec
insl
insb
imul
test
fwait
cltd
cltd
fistps
fwait
stc
nop
xchg
std
mov
incl
mov
lcall
cmpsl
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jnp
scas
cmpsb
stos
add
pop
adc
test
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
popf
pushf
std
movsl
movsb
movsb
stc
mov
xchg
xchg
in
nop
nop
xchg
in
test
jne
push
cmovp
or
es
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
mov
xchg
call
sahf
sahf
jmp
test
pushl
cmpsl
scas
mov
xchg
stos
std
rorl
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
pushf
cwtl
pushf
decl
mov
decl
nop
xchg
xchg
xchg
popf
sahf
pushf
movsl
movsl
movsb
test
test
movsl
movsb
movsb
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pop
bound
jno
jne
jl
jle
test
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
js
mov
movsl
mov
mov
lods
lods
mov
mov
add
pop
pop
adc
mov
jmp
mov
call
xchg
xchg
call
cwtl
xchg
fwait
lcall
sahf
mov
movsb
std
mov
lcall
mov
xchg
aad
xchg
fwait
in
xchg
xchg
out
mov
stc
xchg
test
std
xchg
je
lcall
jmp
inc
jl
mov
jnp
mov
je
mov
outsb
ljmp
adc
lods
or
ljmp
jle
mov
mov
lods
pushf
movsb
movsb
mov
add
pop
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
sahf
popf
lcall
pushf
pushf
call
xchg
cwtl
call
xchg
xchg
call
xchg
lcall
fwait
lahf
stc
sahf
xchg
popf
cld
popf
xchg
xchg
imul
xchg
dec
js
lcall
popf
and
mov
adc
jmp
adc
lods
adc
lods
packuswb
scas
adc
mov
push
mov
push
mov
insl
mov
fwait
lods
mov
scas
scas
scas
movsl
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
sahf
pushf
lcall
mov
movsl
jmp
xchg
xchg
decl
mov
decl
ja
cltd
jb
cltd
arpl
call
sub
decl
adc
nop
or
pop
call
pop
jmp
adc
stos
sbb
pushl
pop
outsl
pushl
pop
jb
mov
and
mov
inc
test
ret
xchg
lods
mov
lods
scas
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
lods
mov
mov
cltd
sahf
lcall
movsl
movsl
ljmp
cmpsb
cmpsb
ljmp
cmpsl
test
lcall
decl
inc
jo
mov
push
mov
decl
pop
incl
push
push
incl
add
mov
push
decl
add
lcall
jmp
and
mov
jbe
mov
sub
sub
sub
lds
jg
leave
xor
leave
das
jg
leave
inc
mov
lea
cld
scas
mov
lret
mov
add
add
add
add
stos
mov
push
adc
test
mov
jmp
test
ljmp
stos
lods
pushl
scas
lods
jmp
mov
mov
pop
incl
or
test
push
incl
add
xchg
push
decl
pop
call
pop
lcall
add
scas
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsl
ljmp
sahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
decl
push
decl
push
push
decl
pop
push
incl
add
lea
push
call
add
sahf
add
mov
add
lods
add
jb
les
xchg
lret
inc
mov
int
mov
roll
call
inc
mov
xlat
dec
xchg
call
dec
xchg
fisttpl
ficoml
call
test
std
mov
mov
movsl
movsb
movsl
arpl
mov
add
add
add
lcall
adc
jl
popf
mov
lcall
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
mov
aaa
outsl
decl
sbb
nop
sbb
mov
pop
decl
pop
push
decl
push
call
pop
jmp
add
stos
add
mov
arpl
shll
dec
dec
mov
aad
cltd
fcoms
fsts
fistpl
ficomps
ficomps
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
test
jne
mov
mov
add
add
add
inc
inc
adc
js
sahf
lcall
sahf
cltd
lahf
ljmp
mov
pushl
mov
mov
pushl
mov
decl
and
xchg
and
xchg
and
sbb
nop
or
call
add
cltd
add
mov
add
lods
add
mov
fs
mov
xor
fisubs
fbld
in
test
in
test
out
test
ljmp
jmp
xchg
mov
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
aas
adc
je
fwait
xchg
lcall
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
jo,pn
lcall
lcall
or
xchg
add
fwait
add
mov
add
lods
add
mov
pushl
adc
roll
jmp
outsl
lods
jmp
outsl
lods
jmp
jo
ljmp
in
je
in
jne
in
jbe
out
je
jmp
mov
mov
test
lcall
lahf
add
jle
ds
aas
adc
outsb
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
outsl
lcall
aaa
je
lahf
xor
lcall
lcall
add
mov
add
mov
arpl
mov
data16
mov
sbb
fistl
jmp
jbe
ljmp
in
cmpb
icebp
cmpl
hlt
xchg
push
cmpl
mov
test
sahf
daa
lahf
mov
sahf
add
add
add
pop
add
ss
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
mov
lcall
cmp
mov
inc
jle
movsb
cmp
fwait
sbb
add
popf
add
movsb
add
add
lods
add
mov
data16
mov
add
call
es
data16
ljmp
in
sar
mov
push
nop
ret
xchg
push
xchg
push
xchg
push
ret
pop
fnstenv
clc
lods
lods
stos
mov
pushf
popf
xor
popf
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
ret
ret
inc
mov
jmp
inc
jnp
test
cmp
dec
test
movsb
xor
lcall
add
mov
add
stos
add
mov
arpl
mov
add
movl
call
xchg
ret
push
fwait
push
cltd
push
lcall
negl
int3
sti
sahf
into
cli
popf
int
cli
cwtl
lret
push
xchg
ret
jmp
mov
inc
mov
rcrb
popl
cltd
fwait
lcall
ss
or
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
enter
mov
mov
ljmp
push
xchg
movsb
sub
lcall
jmp
add
mov
popa
mov
add
movl
jne
fiadds
out
mov
push
movsl
int3
push
cmpsb
into
push
test
cld
test
into
sti
cmpsl
into
cld
stos
sar
cld
stos
sar
cld
test
push
lahf
mov
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
cltd
add
add
add
xor
or
inc
bound
push
xlat
jae
jo
mov
sarb
mov
ret
mov
enter
ret
ret
mov
cmpsl
jmp
push
mov
lods
dec
test
sahf
sbb
pop
jmp
add
mov
arpl
mov
add
int3
add
add
adc
out
pop
cmpsb
push
sahf
lret
cld
scas
aam
sti
mov
cli
mov
sti
scas
sar
cld
mov
std
mov
std
mov
std
mov
std
mov
cld
mov
push
movsb
mov
call
lret
mov
mov
lahf
lahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsb
outsb
outsl
mov
fcom
xlat
xlat
jmp
xlat
fdiv
iret
rcl
std
int3
into
into
dec
lret
leave
dec
lret
leave
dec
lret
leave
inc
leave
mov
scas
jmp
push
mov
stos
jg,pt
lahf
push
arpl
mov
add
mov
fs
mov
add
rolb
outsb
call
add
fiadds
jae
ljmp
cli
lods
aam
std
mov
std
mov
fcos
cld
mov
std
mov
xlat
inc
fcos
mov
int3
jmp
mov
call
lret
int3
mov
mov
xchg
or
add
add
xor
add
pop
pop
pop
or
mov
pop
out
jmp
test
jecxz
leave
fucom
fcmovu
fdiv
xlat
cli
xlat
fdivr
int
into
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
add
faddl
jbe
in
ja
out
das
xchg
clc
mov
sti
mov
loope
inc
loope
std
inc
loopne
dec
loopne
inc
std
loopne
dec
fdivrp
std
lret
loope
cli
mov
enter
into
mov
mov
xchg
adc
add
add
incb
std
add
incl
repz
or
out
in
pop
jmp
in
sub
in
in
dec
call
jmp
call
aad
fstp
jmp
mov
xchg
cmpsb
cmp
movsb
adc
pop
ljmp
add
mov
add
into
add
xlat
add
add
jmp
inc
fwait
cli
mov
in
dec
in
dec
in
std
int3
in
dec
in
dec
jecxz
std
into
loope
dec
in
std
shl
shl
shl
cli
ret
fcos
out
mov
inc
ret
cmpsb
test
mov
xchg
xchg
add
add
add
incb
incb
idiv
testb
hlt
lock
hlt
repz
out
icebp
out
pop
out
lock
cmp
out
in
pop
fsubp
loopne
lds
xchg
sti
lahf
and
pop
jmp
pop
pushl
add
leave
add
rolb
jno
flds
jbe
in
jp
in
push
jge
negl
cld
mov
cld
iret
in
std
iret
in
std
shr
call
out
shl
call
out
call
std
fucomi
fldl2t
std
fucomi
std
iret
loopne
hlt
aam
jecxz
leave
lret
lret
test
xchg
and
xchg
xchg
add
cli
add
clc
add
sti
clc
add
cmc
cmc
or
aad
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
lret
add
roll
jo
fldl
jne
call
sbb
push
jne
cli
cld
xlat
jmp
fldl2e
fucomi
fucomp
fucomi
fsubr
std
loopne
fsubrp
fsubrp
cld
shl
push
ret
out
iret
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loopne
add
mov
cltd
repnz
and
sahf
add
cmpsb
add
mov
arpl
mov
add
int3
add
aam
jb
filds
je
call
sub
std
shl
loopne
fsubr
fldpi
fsubr
std
aad
cld
shl
sti
shl
sti
iret
loop
test
test
lret
jmp
rcr
fcomp
xlat
sti
mov
mov
lcall
add
add
add
xlat
add
leave
lds
scas
xchg
lcall
add
mov
fs
mov
add
iret
add
fadds
jb
loope
js
call
ss
cli
xchg
enter
loopne
sti
lret
cli
clc
rcr
idivb
push
mov
iret
out
mov
int
ljmp
std
jmp
shl
ljmp
in
mov
mov
xchg
add
add
add
int3
add
rol
mov
cmpsl
loopne
xor
pop
ljmp
add
mov
add
into
pop
jb
rorl
je
fsts
js
loop
cmp
inc
xchg
ljmp
ljmp
std
loop
ret
cld
fbstp
mov
enter
int
into
iret
aad
loop
fcmovb
call
out
test
out
out
popf
call
leave
lret
stos
lods
adc
test
cmpsb
add
ret
mov
ret
mov
stos
aam
dec
cmp
sbb
test
push
scas
es
mov
js
mov
inc
test
les
stc
lret
test
mov
out
mov
mov
lret
ret
int
ror
int
aad
shlb
xlat
rcl
jg
fcmovnu
jb
loopne
gs
in
call
in
jmp
lock
sub
div
and
repnz
sbb
fstp
or
mov
int
mov
add
mov
rol
mov
mov
les
imul
mov
popf
in
lea
sarb
test
mov
pushf
lret
mov
enter
int
addr16
iret
iret
push
iret
rcl
dec
aam
inc
aam
xor
fcmovu
daa
xlat
fstp
sbb
adc
jecxz
push
loopne
jecxz
call
icebp
out
add
cld
testb
std
sti
add
incl
incb
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
rcll
lds
enter
into
lret
ror
and
rcrl
rcl
rcll
rcl
aam
rcr
push
rcr
xlat
add
fcmovnu
add
add
in
add
in
jmp
add
std
incl
mov
mov
add
ret
ret
mov
mov
mov
mov
push
rol
or
mov
add
int3
lret
aam
add
aam
rcr
aam
xlat
add
aam
add
xlat
loopne
aad
fildl
loopne
loope
fiadds
jecxz
call
add
incb
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
les
mov
mov
mov
stos
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
iret
into
jmp
aam
cmc
aam
sar
iret
into
into
cli
int3
int3
int
lret
lret
lret
mov
mov
lods
stos
lods
fwait
xchg
xchg
xchg
dec
ds
cmp
sbb
add
adc
add
push
add
add
jg
addb
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
enter
iret
rcl
aad
xlat
call
xlat
aad
rcl
sar
iret
into
int
lret
mov
mov
cld
stos
stos
stos
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jne
jne
fs
inc
dec
dec
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
int3
int3
call
rcl
call
rcl
dec
int3
lret
inc
mov
pushl
test
sahf
xchg
cwtl
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
addl
subl
imul
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
outsl
jo
scas
mov
pop
mov
mov
mov
mov
inc
ret
inc
mov
mov
ljmp
pushf
lcall
xchg
xchg
cltd
cltd
cltd
out
test
dec
wrmsr
add
add
add
add
add
pop
lcall
pop
popf
xchg
cltd
fcoml
addb
jl
jge
jp
jp
jnp
jnp
jnp
jnp
jb
je
push
push
push
cmp
je
sahf
popf
popf
mov
lods
scas
rep
lods
lods
sti
scas
scas
lods
std
test
cmpsl
std
popf
popf
sahf
call
test
call
mov
lods
jmp
lods
lods
leave
movsb
movsl
movsb
cltd
jb
jb
adc
adc
add
add
add
add
outsb
outsl
insl
pop
nop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsl
outsl
orl
lcall
mov
call
sahf
ljmp
scas
std
mov
scas
mov
xlat
cmpsb
mov
addb
add
add
add
add
pusha
or
scas
mov
cmpsb
sahf
movsb
decl
lea
cwtl
cwtl
xchg
std
sahf
sahf
lahf
sti
sahf
mov
lcall
push
push
jo
push
pop
outsl
insl
insl
outsl
xchg
subb
xchg
lock
mov
pushf
xchg
pushl
jo
mov
push
mov
mov
mov
out
lods
stos
insl
stos
stos
test
add
add
add
pop
or
mov
in
mov
nop
call
xchg
cwtl
lcall
cwtl
lcall
sahf
pushf
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
jle
sahf
dec
jnp
mov
ss
mov
jae
scas
push
insl
ljmp
sbb
mov
scas
mov
mov
scas
jle
mov
add
add
add
pusha
popa
pusha
or
mov
in
movsl
test
lcall
mov
mov
decl
addl
cld
cwtl
popa
cmp
dec
jns
cmp
xchg
sub
xchg
sbb
punpcklbw
mov
pop
imul
mov
insb
pushl
sbb
jne
rcrb
mov
scas
scas
xchg
popf
lahf
sahf
adc
add
add
popa
pusha
popa
or
lods
mov
test
mov
test
stos
stos
stos
ljmp
xchg
cwtl
decl
imul
mov
pop
incl
or
mov
push
call
add
or
mov
jae
mov
das
jl
les
jg
leave
das
jg
lret
xor
shrl
movsb
test
add
add
add
add
pusha
or
movsb
stos
in
mov
test
mov
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
add
push
decl
add
mov
add
mov
outsb
inc
aaa
test
int3
inc
mov
rolb
rolb
call
inc
nop
fiaddl
call
arpl
stc
mov
mov
movsl
movsb
movsb
daa
std
std
add
add
add
pop
or
mov
ljmp
mov
mov
mov
ljmp
jnp
pop
call
adc
pop
call
add
mov
add
lods
add
mov
dec
xchg
fcomps
ficompl
ficomps
loop
mov
fisubrs
int
mov
ret
cmpsb
xor
jg
add
add
dec
dec
dec
pop
jl
jnp
fwait
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
push
pop
call
add
cmpsb
add
scas
add
push
push
jmp
outsb
stos
jmp
outsl
stos
call
jno
in
jae
jmp
jns
call
test
std
mov
cmpsl
cmpsl
inc
cmpb
add
add
dec
dec
dec
pop
outsb
outsb
insb
bound
cltd
cwtl
pushl
mov
mov
mov
je
lcall
cmp
popf
sub
call
add
mov
add
mov
gs
or
call
inc
xchg
jmp
jns
ljmp
push
test
push
mov
mov
push
lcall
add
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
pushf
jmp
inc
jg
mov
or
add
stos
add
mov
arpl
mov
push
ja
loopne
mov
push
xchg
ret
push
xchg
push
xchg
enter
lret
lcall
jecxz
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
ret
xchg
test
cmpsb
pop
xchg
lods
dec
test
mov
add
test
add
mov
add
fsubs
cmp
jl
push
mov
into
stc
test
iret
cld
lods
iret
cld
lods
sar
cli
test
call
rol
test
popf
sahf
or
add
add
dec
dec
push
aaa
jb
je
test
int
out
into
int3
cmc
lret
lret
enter
enter
mov
popa
mov
lods
inc
cmp
adc
test
add
rolb
dec
add
flds
jbe
jmp
xchg
cld
mov
mov
mov
cld
mov
fcos
sti
mov
ljmp
repz
lods
lods
mov
add
add
add
add
or
aam
dec
loope
jecxz
loopne
fistps
fcmovnu
out
shll
test
or
mov
popa
mov
add
add
loop
jnp
lock
mov
sti
loopne
inc
loope
inc
dec
loopne
dec
loopne
dec
loopne
sti
out
mov
lret
mov
xchg
sahf
sahf
pushf
sbb
add
add
incb
incl
jmp
in
sbb
jmp
xor
loope
jecxz
mov
mov
mov
add
mov
fs
add
iret
add
fildl
jne
jmp
insl
mov
sti
fdivrp
std
iret
out
std
shl
call
out
shl
call
out
call
out
cld
shl
push
fcos
fmul
sar
mov
mov
add
std
add
incb
cld
cld
incb
push
mov
pop
xchg
popf
or
ljmp
add
lds
imul
loopne
jbe
out
and
shl
std
cld
fsub
fsub
sti
fsub
std
cld
aam
push
enter
rcl
sti
mov
sahf
sahf
das
add
add
int
into
or
arpl
ljmp
add
enter
roll
jb
loope
jns
in
xor
cli
lret
loop
clc
lret
loopne
test
bnd
repz
aad
out
ret
sar
in
in
ljmp
ljmp
test
add
add
add
push
mov
jae
or
mov
imul
pop
jb
lret
and
sub
pushf
clc
jecxz
mov
out
jecxz
lret
mov
lret
fdivrl
sarb
in
fistpl
in
call
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
nop
fidivrl
jle
rol
stos
mov
lahf
mov
iret
mov
leave
jge
int
aam
into
pop
aam
rorl
fcomp
cmp
fsubp
das
in
frstor
jecxz
repnz
in
in
or
std
add
add
add
std
std
add
mov
jns
mov
mov
mov
mov
xor
mov
rcll
rol
adc
rcl
or
fnstsw
or
int
add
std
incb
incl
lcall
pinsrw
or
int
int3
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
lcall
rol
mov
mov
rol
mov
mov
mov
lods
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aad
std
rcl
sar
iret
iret
int
mov
mov
cmpsl
test
sarl
sbb
pop
add
add
add
add
add
add
add
add
jb
jno
addr16
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int
rcl
sar
into
iret
into
inc
enter
mov
scas
jmp
mov
push
add
add
add
add
jne
jae
test
adc
arpl
mov
push
insl
jb
pusha
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cltd
cwtl
lds
jae
daa
es
pop
add
add
je
jb
pushf
xchg
lcall
test
clc
xchg
test
addb
push
push
push
inc
mov
popf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
mov
cmpsb
cld
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
cwtl
lcall
push
push
push
imul
jge
nop
aam
lea
lcall
pushl
imul
call
lods
stos
stos
add
add
add
mov
scas
test
cld
xchg
xchg
xchg
call
lcall
xchg
cltd
lcall
mov
loope
jne
out
nop
bound
std
pushf
inc
jne
movsl
ss
scas
sub
mov
outsl
pushl
ss
mov
mov
imul
into
add
xchg
pop
lods
cmpsb
stos
test
sahf
popf
lahf
jmp
movsl
movsl
call
imul
popl
decb
sbb
pop
call
or
scas
push
insl
pushl
es
shrb
inc
inc
xchg
rcrb
subl
jne
push
movsb
popf
mov
cld
test
scas
scas
ljmp
xchg
decl
or
xchg
push
decl
pop
jmp
adc
ret
dec
aas
mov
roll
call
inc
mov
aad
xchg
dec
lcall
mov
add
add
imul
movsl
mov
scas
pushl
mov
ljmp
outsb
call
sbb
nop
or
xchg
add
mov
add
mov
push
xchg
fstpl
loopne
mov
jmp
movsl
call
lcall
cmpsb
cmpsb
cmpsl
pop
add
add
popa
popa
arpl
pushf
pushf
pushf
cld
mov
mov
mov
mov
mov
pushf
dec
jge
popf
xor
lcall
jmp
add
mov
dec
xor
jmp
jl
out
jl
out
jge
fistpl
mov
mov
add
add
dec
adc
push
cmp
mov
mov
rol
mov
bound
lcall
add
jmp
add
or
fmull
out
mov
notb
push
xchg
enter
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
cld
rol
inc
ret
mov
xchg
ljmp
sbb
movsb
add
mov
fs
add
adc
ljmp
clc
lods
iret
cld
scas
sar
sti
scas
sar
std
lods
iret
jmp
leave
inc
mov
cmpsb
ds
incl
xor
outsl
inc
scas
mov
mov
aad
rcl
aam
rcl
shr
leave
leave
lret
xchg
jmp
fs
add
aad
jb
out
xchg
stc
mov
std
mov
std
rcr
std
ret
inc
icebp
mov
shl
cmpsl
test
add
add
add
jmp
out
jmp
inc
loop
jecxz
fcomp
fisubl
mov
add
mov
add
fiadds
ja
out
aaa
xchg
cli
scas
aad
dec
out
call
in
std
shl
std
aad
std
shl
push
leave
fcos
aad
int3
in
scas
lods
scas
popa
cmpb
std
std
add
std
incb
lret
int3
shrb
sahf
sbb
stos
add
mov
add
jecxz
js
cmc
push
movsl
cld
loopne
xlat
out
cld
in
cld
aam
cld
aam
sti
shl
push
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
cmp
out
mov
aam
jmp
ror
call
lret
call
fcmovu
scas
push
lcall
add
sahf
stos
xchg
and
push
mov
ret
int3
lret
mov
fdivrs
adc
int3
outsl
xlat
int3
iret
pop
fst
xlat
dec
jecxz
loope
out
call
sbb
mov
mov
scas
arpl
mov
les
lds
rol
sbb
bswap
into
int
aad
aam
std
add
addb
incb
stos
std
add
mov
std
add
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
adc
ret
cli
into
mov
dec
lock
pop
pop
in
pop
paddw
data16
pop
and
inc
iret
popl
shlb
sub
push
shlb
fisubs
and
out
xchg
lcall
into
add
jg
adc
scas
add
lock
push
js
mov
pushf
mov
insb
inc
popa
mov
mov
inc
fadd
mov
aaa
das
gs
jp
std
fwait
push
xchg
mov
nop
sbb
jae
enter
dec
adc
out
imul
gs
pop
mov
mov
adc
sti
js
xchg
repnz
sbb
and
ja
sbb
jns
outsl
stos
jno
jmp
mov
jno
sub
dec
in
nop
or
iret
lods
fwait
ja
jns
inc
test
hlt
daa
outsl
das
mov
fsubl
jnp
sbb
fdivrl
fsubs
mov
dec
inc
punpckhbw
addr16
das
je
ret
cltd
jge
adc
fistps
sbb
mov
sbb
in
jnp
jnp
std
pop
inc
sbb
fs
dec
and
fucomi
inc
fcoms
mov
mov
in
xor
pop
inc
pop
rolb
jo
cmpsb
outsl
int3
es
out
sbb
mov
nop
lods
mov
pop
adc
mov
mov
push
ja
in
mov
cltd
in
push
faddl
shl
cs
mov
dec
jg
out
pop
test
lock
push
sti
xlat
xor
xchg
xor
mov
daa
enter
hlt
add
out
stc
bnd
stc
fidivrs
je
cmpsb
mov
faddl
pop
mov
pop
shlb
cwtl
or
xchg
fisubl
ss
or
sbb
mov
loopne
adc
mov
int3
aaa
pop
push
mov
and
mov
scas
jp
mov
mov
lods
pop
sub
xchg
incl
ja
and
sub
inc
jbe
popf
mov
xor
cli
pop
dec
lcall
xchg
mov
mov
push
sub
dec
push
cmc
dec
into
jnp
out
iret
out
shrl
push
jp
or
in
imul
jnp
push
pop
sub
jmp
icebp
mov
orb
stos
test
testl
and
mov
xchg
aas
stos
daa
leave
add
out
fcom
adc
cmc
xor
shr
out
adc
pop
dec
hlt
es
sbb
ret
push
int
add
inc
xchg
and
inc
neg
jge
ds
ljmp
pop
adc
mov
cmp
je
and
imulb
das
fsubr
sub
sbb
xchg
push
jmp
pop
stos
xchg
pop
adc
and
sub
pop
sti
fstpl
push
imul
stos
cmpsl
js
nop
cs
mov
fnstenv
pop
lcall
mov
cmp
aas
cmp
test
sbb
aaa
xor
mov
out
mov
or
lea
fcmove
repz
inc
fnsave
mov
inc
push
jp
xchg
jl
adcl
inc
mov
push
adc
xor
cld
xor
xor
mov
daa
mov
in
pop
mov
mov
mov
fisubrl
pushf
test
popa
and
les
jne
xor
lods
sub
push
add
aad
shr
in
sahf
mov
sar
mov
pop
scas
jne
js
add
cltd
and
stos
fs
in
idivb
scas
mov
outsl
test
test
cmpsb
pushf
sub
loope
subl
and
mov
pop
stc
sub
xor
out
sbb
aas
aad
imul
sbb
or
gs
test
push
dec
dec
ret
xchg
out
xchg
jno
enter
pop
sbb
outsb
dec
add
shr
push
int
in
insb
and
inc
repz
push
pop
adc
fnstsw
xor
push
push
ljmp
fnstsw
fists
repnz
and
sbb
sbb
cmp
adc
jecxz
nop
sub
fildll
notl
mov
test
orl
hlt
mov
dec
jae
notb
mov
lds
imul
push
dec
mov
rolb
jbe
inc
mov
push
imul
add
dec
adc
jnp
push
pop
cmc
int
lret
mov
shll
lods
fcoml
jmp
aaa
in
bound
idivb
add
scas
adc
cmp
cwtl
insl
inc
pop
fisubrs
stc
jo
stos
repnz
loopne
inc
lock
ret
shl
inc
dec
insb
out
or
jle
mov
mov
shll
pop
inc
call
ljmp
mov
pop
pop
into
pushf
outsb
rolb
mov
mov
fcompl
cmp
pop
sbb
jecxz
mov
and
mov
sub
mov
mov
fbld
in
popf
mov
out
pop
repnz
cmpsl
push
inc
movsb
jno
pop
mov
sbb
xor
xchg
rcl
sbb
xor
mov
lahf
aam
lods
inc
into
inc
jae
dec
movsl
mov
out
cltd
loopne
or
cmpsl
ds
shll
xchg
inc
data16
and
sahf
cli
push
mov
sub
addr16
sarb
loope
dec
aam
int3
js
mov
and
cmc
fs
pusha
je
push
mov
rorb
inc
xor
inc
lahf
testl
dec
out
mov
xor
shll
sub
movl
in
and
xchg
rcr
outsl
ret
sbb
sbb
add
jl
sub
mov
dec
push
and
lret
pop
mov
mov
sti
xchg
shll
out
test
cmpsb
and
mov
jne
sub
notb
pop
out
dec
fprem1
mov
push
or
pop
mov
xor
scas
adc
out
shrl
and
push
fsubr
pop
xor
out
mov
orl
pop
add
mov
lret
lods
and
add
es
sbb
xchg
pop
rclb
shrb
push
xchg
pusha
jb
pop
rcrl
xchg
pop
cmp
push
or
xchg
push
movsb
adc
test
sarl
rcl
imul
repnz
mov
cmpsl
stos
mov
cs
stc
nop
inc
sbb
pop
scas
xchg
outsl
imul
mov
int3
in
mov
hlt
add
test
inc
push
jb
mov
pop
lcall
jnp
std
scas
inc
das
lsl
andb
xchg
mov
aas
in
or
aaa
dec
es
mov
lcall
inc
push
inc
out
fistl
push
xor
dec
inc
push
and
popa
adc
es
stos
and
push
xorb
adc
mov
cwtl
mov
fbld
jae
shlb
jno
adc
lds
inc
push
sbb
aad
xor
sub
in
and
cmp
mulb
push
and
scas
pop
xor
insl
add
xlat
mov
adc
or
mov
sti
xchg
xor
sbb
xor
mov
in
cmpsl
rcrl
jae
jns
fbstp
fwait
xchg
sub
dec
std
xchg
jg
scas
inc
and
int
jae
cmp
and
jmp
movl
mov
lret
mov
sbb
ds
jo
arpl
adc
sbbl
pop
test
mov
or
fldl
push
ret
or
fs
xchg
in
out
mov
sbb
or
iret
test
jnp
pushf
and
lods
bound
imul
inc
fsub
jle
fs
sahf
push
movsb
popf
xor
jbe
inc
push
mov
test
xchg
lea
dec
loop
scas
dec
in
out
cwtl
and
xchg
xor
fbstp
push
fwait
xor
inc
fcom
push
xchg
test
adc
sbb
lea
leave
sbb
pop
fs
nop
loopne
sub
mov
push
and
les
inc
jle
cmp
les
jg
ret
scas
insb
aaa
into
pop
dec
or
outsl
sbb
call
add
and
mov
jo
je
jb
dec
sub
cmp
adc
ds
mov
insl
je
pop
add
shl
aam
lahf
add
mov
test
fwait
xor
jb
shrl
dec
mov
jp
xchg
mov
fists
pop
cmp
iret
data16
jb
add
mov
pop
loopne
jl
or
push
out
ja
sub
inc
repnz
pop
scas
inc
sbb
dec
arpl
js
in
cmp
sbb
adc
mov
xor
sti
dec
out
sbb
orb
jl
and
dec
xchg
inc
mov
xor
gs
jo
push
mov
pop
in
adcl
sbb
stos
inc
pop
jnp
mov
push
ljmp
jbe
xchg
pop
les
mov
cli
and
montmul
cmpsb
inc
inc
popf
xor
in
je
pop
pop
cmc
dec
mov
cmc
mov
xor
mov
pop
pop
repnz
popa
clc
push
and
adcl
xor
mov
pop
shrl
pop
mov
insl
outsb
xchg
pusha
or
sbbl
xor
add
cmpsl
dec
in
mov
mov
stos
test
mov
fbld
jecxz
repnz
in
dec
in
add
gs
dec
xchg
push
into
sub
inc
fistpl
mov
aaa
into
dec
out
xchg
leave
pusha
xchg
bound
sbb
xchg
sub
adc
mov
loope
lea
sbb
scas
aad
and
add
xor
pop
inc
fcompl
adc
movsl
icebp
mov
jnp
dec
insl
js
or
add
xchg
dec
imul
mov
hlt
and
cmp
pop
inc
mov
aaa
repnz
xchg
pop
jl
dec
int3
aad
cli
insb
xor
pop
xchg
daa
mov
jo
icebp
mov
and
lcall
out
test
aad
daa
in
or
cmp
adc
dec
stos
or
fldcw
mov
es
repz
test
jp
das
movb
es
sbb
lret
mov
ss
int3
pop
mov
fbld
mov
sahf
icebp
out
jecxz
in
test
je
jbe
mov
xor
vcvtsi2sdl
addr16
ljmp
bound
scas
dec
pop
mov
inc
fdivl
popa
int
push
sbb
movb
outsl
data16
mov
pop
cli
stos
push
out
loopne
and
aam
push
movsl
push
sbbl
mov
sbb
les
pop
mulb
xchg
sub
or
movsl
ss
stc
nop
ljmp
sub
fcomps
add
mov
ret
sbbl
cmp
cmpsl
xor
cmc
mov
ficompl
mov
stos
dec
jecxz
cld
dec
loope
jb
add
dec
nop
daa
je
dec
out
sbb
mov
sbb
lret
fdivrs
leave
push
shrl
xor
dec
std
add
sbb
call
mov
fbstp
pop
pop
hlt
mov
xchg
sub
leave
pop
sahf
mov
fcompl
outsb
in
mov
loope
mov
add
stc
nop
jne
mov
aas
or
shrb
out
jle
out
xchg
adc
or
jmp
notb
push
enter
fs
add
aas
jbe
outsb
sbb
lods
mov
sbb
pop
hlt
sbb
addr16
push
cmp
jne
out
iret
cwtl
das
roll
mov
push
andb
inc
fidivrs
pop
sahf
jns
inc
fnsave
lcall
or
movsb
cmp
shll
jp
addr16
js
lds
jbe
outsl
out
adc
add
pop
jmp
mov
sbb
push
in
frstor
xchg
cs
xor
mov
inc
lds
mov
repz
fdivs
hlt
out
jmp
mov
mov
and
out
pop
push
call
subb
scas
imul
push
jmp
fsubs
add
stos
loop
jmp
mov
jecxz
in
lret
fisubs
xchg
sbbl
push
adc
mov
push
mov
cmpsl
out
aaa
out
test
lret
mov
fmull
dec
mov
pop
mov
cmp
push
outsl
add
dec
push
xchg
call
pop
sub
mov
sub
sub
sub
cltd
xor
dec
jg
aas
imul
xchg
push
das
lea
jae
mull
mov
xchg
mul
xchg
sub
sbb
mov
fldt
hlt
stos
adc
or
cmp
xchg
sub
push
roll
and
out
test
clc
cs
xchg
call
or
popl
insl
dec
fbstp
sti
adc
mov
cmp
add
sbb
mov
jmp
call
stc
stos
sti
cmp
in
pop
cmp
js
shrb
or
pop
mov
aad
leave
xor
xchg
jne
mov
imul
leave
xor
cmc
fcmovne
cltd
xor
cld
out
out
mov
jbe
movntq
dec
lea
mov
sub
cmp
jne
int3
insl
clc
fwait
xor
fidivrl
aad
dec
ds
in
xchg
fimuls
sub
ret
or
gs
test
push
in
push
xchg
mov
sub
jno
rcrl
dec
fisttps
pop
hlt
into
decl
daa
lock
loop
fs
clc
add
fnsave
or
subl
push
jmp
sub
dec
sub
sbb
pop
push
lods
push
in
fdivs
insw
iret
data16
push
pop
hlt
mov
nop
daa
mov
pop
sahf
lods
or
mov
mov
shrl
shrb
mov
dec
arpl
cmp
loop
arpl
sbb
or
cmp
dec
out
ja
pop
lea
sub
push
test
mov
xor
and
icebp
mov
inc
sub
cmpsb
out
push
mov
pop
push
add
stos
in
cli
daa
sub
jns
xchg
sub
enter
inc
adc
pop
repnz
iret
adcb
icebp
inc
push
jmp
adc
dec
mov
sub
imul
aas
xchg
push
aaa
xor
cwtl
sbb
xlat
add
mov
fnstcw
cmp
fsubrp
test
or
stos
xor
lret
cmp
fsubrs
cmp
repz
cmp
mov
fisubrs
unpcklps
push
pushf
dec
ljmp
orb
pusha
and
xchg
push
inc
pushf
mov
jecxz
xlat
outsb
out
add
repnz
push
insb
add
test
ds
outsb
stc
nop
pusha
rcrl
les
icebp
mov
cmp
and
add
xchg
sub
outsb
add
push
jmp
call
repnz
out
or
mov
testl
add
insl
jmp
call
cmp
mov
daa
add
shrb
pop
inc
pushf
jns
pop
dec
mov
rcrl
pop
pop
pop
mov
jno
mov
dec
les
cmp
out
test
rorl
add
movsl
cmp
and
shlb
jmp
dec
nop
jecxz
sbb
addb
ret
inc
adcb
roll
inc
aad
bound
imul
mov
fbstp
pop
push
out
lds
cltd
les
adc
les
test
push
shrl
mov
add
xor
cli
adc
leave
fsubrs
jge
adc
lock
stos
add
imul
sbb
jp
push
test
in
mov
xchg
mov
fwait
jecxz
in
lock
pop
pop
repnz
js
pop
lret
ljmp
divl
add
inc
hlt
push
sti
sbbl
repnz
or
fdivrs
pop
les
rcrb
sub
insb
lahf
rorl
arpl
xor
call
fsub
sbb
sub
push
jae
add
gs
sbb
into
or
or
dec
cwtl
sbb
xor
pop
lahf
outsb
sub
out
stos
pop
push
movsb
cmp
test
jmp
lahf
mov
movsl
bound
add
bound
rclb
xchg
adc
mov
adc
fnsave
jl
shlb
xchg
add
es
fdivrs
loope
lcall
dec
or
mov
rorb
test
lret
mov
ret
push
iret
fistpl
push
mov
inc
mov
xchg
shll
lock
mov
inc
sub
insl
clc
inc
ljmp
xor
mov
ja
decb
cmpsb
fistl
imul
pop
xlat
mov
enter
icebp
adc
sbb
xchg
sub
mov
fwait
pop
xchg
push
jmp
sub
mov
out
jp
add
adc
mov
pop
int3
arpl
pusha
not
xchg
mov
xor
sbb
fs
mov
loopne
mov
xor
popa
clc
or
mov
cs
lea
pop
push
scas
xor
sbb
pop
dec
cmp
mov
cmp
push
out
lret
push
lahf
jmp
jmp
and
push
ljmp
cmp
fiaddl
es
clc
jl
rcrl
fs
iret
cmp
jbe
lock
lods
and
pop
sahf
xor
inc
frstor
int
add
lahf
insb
jmp
mov
mov
xchg
or
mov
cmc
jmp
out
in
outsl
mov
test
xor
adc
aad
jo
or
push
add
test
lcall
inc
fsubs
test
pop
divb
jg
jae
add
push
jp
rclb
cmp
repz
aas
rclb
adc
rcrb
shll
mov
cmp
pop
cmpsl
ds
cmp
mov
jmp
sub
scas
jp
mov
call
out
pop
out
and
xor
xor
ret
out
push
lods
sbb
ds
mov
mulps
or
mov
push
mov
add
xchg
popf
xor
ficompl
int3
push
fs
cmp
pop
sbbb
aas
adc
sbb
js
cmpl
mov
xchg
nop
out
ret
imul
cli
xchg
sbb
fsubrs
icebp
xchg
sub
xor
xcrypt-ecb
cmpsl
dec
cmp
cmp
sbb
fdivl
add
sub
jecxz
or
sub
pop
imul
xor
mov
mov
jae
lds
or
xchg
push
cld
or
js
stos
mov
sub
gs
cmp
inc
fisttpll
outsb
add
pop
pop
mov
ja
inc
fisubrs
jno
test
dec
loopne
inc
jne
aaa
cli
pop
scas
jmp
jo
lea
xchg
push
inc
mov
xor
jne
movsb
hlt
and
or
test
jo
inc
sbb
inc
ret
in
xor
loopne
lea
lcall
pop
popa
or
push
call
jp
lods
mov
jo
or
pop
inc
push
push
mov
ja
lret
or
xor
or
adc
into
stos
pushf
pop
sub
push
popf
pop
cmc
sbb
and
pop
cmc
mov
push
popf
rolb
sahf
add
sbbl
cmp
cltd
std
xchg
cmpsb
and
xlat
dec
sbb
into
js
hlt
inc
out
push
mov
arpl
sahf
xchg
call
jp
stc
shll
into
in
sbb
sbbl
popa
sub
cmp
js
sbbl
movsb
call
fimull
sbb
rcrl
mov
in
cmp
ds
xor
nop
leave
int
fidivl
mov
jae
pop
rclb
jl
out
out
nop
daa
in
sbb
mov
shrl
dec
in
pop
xchg
sub
jg
jl
out
in
push
xor
pop
int3
arpl
dec
jecxz
mov
cmpsb
scas
dec
loopne
push
rclb
out
loopne
inc
pop
sbb
aas
pop
push
jmp
inc
mov
out
addr16
lods
cmpsb
push
mov
xchg
xor
in
les
push
sub
xchg
and
xchg
jns
inc
lcall
xchg
cmp
mov
adc
jne
data16
pop
xchg
nop
daa
xor
lods
cmp
pop
push
out
jae
and
adc
cmp
popa
clc
lds
push
movsl
out
test
clc
lock
ljmp
pop
icebp
push
sar
xchg
adc
loop
xor
fs
imul
sbb
mov
dec
loop
ja
or
popf
push
ljmp
jno
pop
mov
add
push
arpl
and
mov
push
call
or
imul
inc
insb
pop
stc
nop
lea
adc
dec
add
xor
shll
cmp
ja
repnz
and
push
mov
inc
leave
pusha
loopw
jecxz
mov
scas
loope
in
xchg
add
xorl
mov
xor
lock
test
jge
nop
or
jno
repz
loop
movsb
cmp
scas
jle
pop
mov
pop
cld
fstps
lret
cmp
shrl
dec
mov
adc
dec
stos
inc
aas
inc
mov
mov
mov
adc
inc
lret
mov
mov
fstp
jo
inc
inc
fnstcw
xlat
outsb
pop
sahf
jg
rorb
jle
add
jl
mov
push
stc
push
lahf
ss
cmc
mov
fucom
jl
dec
imul
pop
fwait
xor
fabs
js
pop
insb
pushf
xchg
mov
fwait
mov
ret
daa
sahf
cli
inc
notb
dec
xchg
and
sahf
call
push
out
cmp
or
pop
cmc
pop
jbe
push
test
jl
push
fnsave
lcall
cmp
pop
repnz
cmp
mov
add
pop
jb
iret
data16
testb
push
leave
pusha
mov
pop
bnd
es
fcomip
mov
mov
scas
inc
repz
mov
les
popf
cmc
mov
pop
mov
ja
jns
mov
sub
daa
mov
xor
lea
pop
sub
mov
ret
xchg
lods
adc
push
das
xor
enter
lret
bound
mov
mov
jnp
xor
stos
out
push
xor
imul
andl
call
dec
aaa
inc
fnstenv
xorl
push
jge
pop
dec
adc
inc
lea
sbb
sbb
cmp
fldcw
pushf
xor
mov
mov
loopne
sbb
int
push
in
mov
jo
popa
jmp
push
xlat
test
leave
in
cmp
jmp
daa
sbb
ds
jp
or
sahf
jp
pop
stc
add
arpl
mov
clc
out
push
movsl
and
xchg
cwtl
inc
and
adc
adc
test
cld
dec
das
add
js
sbb
pop
mov
inc
and
xor
add
dec
sbbb
in
jle
mov
dec
inc
xlat
jle
lods
mov
push
sbb
jb
test
xchg
jge
or
outsl
test
or
mov
stos
inc
cmp
addr16
iret
mov
cmpsb
fcomps
sti
inc
xchg
cltd
xor
push
and
inc
sub
mov
aad
xchg
sbb
cli
dec
subb
pop
mull
xchg
ret
hlt
in
sbb
fcmovu
mov
mov
push
mov
fcompl
gs
mov
cmp
hlt
add
out
lock
mov
xor
pop
xlat
xchg
pop
mov
and
jne,pt
into
and
push
cmc
mov
repz
and
xchg
xchg
mov
stc
jle
sub
add
dec
xchg
add
and
sti
sub
outsb
or
inc
adc
xchg
dec
ret
adc
mov
pop
iret
cmp
dec
aad
aaa
rorb
sub
test
adc
mov
arpl
cmpsb
inc
sub
push
jp
push
mov
pop
pop
sbb
pop
or
cmp
sbb
cmp
jb
xlat
dec
push
mov
pop
inc
int
push
mov
xchg
out
add
push
test
std
ret
inc
ljmp
dec
stc
daa
cmp
mov
out
js
dec
dec
mov
lea
mov
adc
ljmp
aam
or
into
sbb
lahf
int3
dec
ret
fcompl
pop
into
lods
rorl
jmp
fcmovne
fs
mov
xchg
shll
mov
pop
rol
jae
jns
dec
iret
mov
add
xchg
cmp
mov
dec
aam
faddp
lret
pop
jmp
xor
cld
scas
cmp
push
shlb
jo
mov
push
jne
cld
mov
jl
jmp
aaa
inc
subl
test
jmp
das
cld
inc
pop
sahf
xchg
sbb
je
ret
xchg
xchg
sub
in
and
fsub
pop
loopne
enter
ret
xlat
mov
push
in
cltd
mov
stos
movb
sbbl
stc
mov
mov
cld
lahf
addl
lea
pop
adc
jmp
inc
adc
cmp
fs
inc
loopne
and
mov
mov
push
aam
inc
test
xchg
int3
movsl
pop
add
loopne
in
lret
jecxz
mov
mov
addr16
cs
in
inc
test
add
enter
pop
popa
xchg
adc
adcb
xor
loopne
adc
out
or
out
dec
mov
fldt
cmp
adc
loope
sbb
xchg
movsb
mov
orl
int
push
mov
out
push
test
lret
int3
fmul
pop
int3
ljmp
in
leave
daa
mov
das
aam
mov
test
daa
cmc
cmpsb
dec
aad
mov
push
clc
mov
mov
lahf
mov
mov
xor
push
aad
sbbb
adc
pop
out
pop
lea
nop
ljmp
inc
cli
frstor
push
sbb
mov
rcll
and
xchg
sub
ret
call
cmpsl
xchg
mov
or
int3
test
std
aas
cs
pop
repz
into
in
test
loop
pop
sar
cmc
mov
lock
xchg
jecxz
cltd
xor
sub
test
int3
sbb
ds
daa
sub
xchg
mov
in
test
sub
pushf
outsl
cmpl
pusha
xorl
cmpl
sub
pop
out
sbb
push
sub
aaa
add
mov
stos
push
outsl
test
push
mov
mov
je
cld
subb
sub
dec
loopne
pop
adc
cmc
mov
jge
sbb
dec
in
imul
inc
mov
fstpl
movl
jp
clc
mov
xchg
cli
jbe
dec
cmc
mov
daa
rclb
xor
popa
bound
cmpb
mov
pop
pop
lock
and
movsl
sbbb
pusha
or
jge
push
inc
mov
xchg
pop
mov
xchg
dec
ffreep
mov
sub
fsubrp
pushf
pop
sbb
popa
repnz
sbb
cmp
cmp
push
in
aaa
xchg
outsl
mov
bnd
add
jle
dec
mov
ret
pop
xor
orl
out
push
push
insb
add
lea
cmp
cmp
cmp
in
andl
out
cmp
fildl
cmp
lock
and
add
test
sub
add
cltd
scas
ror
xchg
shrl
dec
cli
add
lods
imul
mov
and
filds
push
leave
mov
arpl
adc
cmpsb
xchg
dec
rcl
pop
repnz
ret
es
mov
add
insl
mov
inc
pop
mov
dec
xor
arpl
mov
inc
jl
pop
xchg
das
mov
data16
movsl
jmp
iret
and
jbe
adc
clc
nop
xor
scas
add
out
adc
add
mov
mov
imul
sub
xchg
sbb
aaa
cs
stos
aam
roll
mov
movsl
and
jge
loop
pop
xlat
out
cmp
pop
cwtl
adc
pop
es
xor
push
fs
jge
mov
mov
mov
out
addr16
lock
or
push
xchg
inc
cmc
mov
mov
inc
addl
xchg
mov
lods
out
pop
inc
test
add
out
xchg
out
jmp
jl
push
inc
call
iret
lds
pop
mov
shlb
div
lret
or
xchg
cmpb
test
sbb
or
cmp
pushf
outsb
loop
daa
inc
cmp
add
push
rol
movsb
adc
cs
pop
aad
and
dec
sbb
outsl
pop
ljmp
outsl
push
fcmovnb
mov
mov
ret
repz
cmp
subb
cmc
adc
pop
loope
leave
or
inc
cmp
and
sbb
divl
push
mov
push
or
test
repnz
sub
mov
jnp
in
xchg
scas
xor
ljmp
icebp
jl
and
imul
leave
rclb
fldt
stos
mov
sub
add
cmpsl
push
jmp
jg
lcall
rcr
cmc
pop
push
or
push
dec
fcompl
ret
pop
shlb
pop
pusha
mov
push
cmp
xchg
mov
fisubl
sbb
push
or
jnp
orb
mov
pusha
lcall
movsl
pop
not
push
inc
or
fsubl
dec
ds
mov
fs
iret
xchg
sub
clc
iret
sub
sahf
je
repnz
sub
call
in
or
stos
sbb
cmpsb
loopne
adc
stos
and
mov
adc
push
shl
dec
loope
mov
mov
jo
pop
fbstp
adc
mov
mov
pop
sub
pusha
push
cli
xchg
std
test
or
dec
stos
push
and
mov
into
sbb
mov
aam
rolb
lahf
or
adc
xchg
inc
mov
int3
fs
xchg
in
loop
pop
push
fucomip
mov
mov
fsubp
cwtl
dec
add
pop
sbb
push
pusha
pandn
mov
dec
add
jb
test
andl
icebp
fucom
cmpsb
stos
inc
fadds
ret
aaa
sbb
lds
jne
inc
aaa
adc
pop
adc
inc
clc
mov
sti
jp
dec
xchg
imul
loopne
icebp
push
lock
mov
sahf
daa
lahf
or
andl
stc
mov
sbbb
int3
sbb
push
movsb
xor
rclb
ret
rclb
std
jne
test
xor
or
hlt
dec
add
jnp
fcmovnb
push
or
dec
xor
sbbl
hlt
cmc
mov
int3
sub
lods
movsl
inc
xor
nop
fnsave
stc
sbb
adc
jnp
repnz
js
adc
xor
inc
cmp
add
mov
push
test
pop
fidivrl
sbbb
pop
das
jl
xlat
pop
icebp
or
add
rcrb
repnz
xchg
push
scas
in
out
dec
push
dec
mov
mov
rclb
push
xchg
call
sti
popa
mov
stos
fdivp
pop
ds
out
or
mov
push
ds
cmpsl
push
not
cmovbe
dec
push
jmp
mov
inc
fidivrs
jbe
mulb
push
out
pusha
sub
mov
cltd
xor
cmp
negl
dec
ljmp
jno
jmp
or
xor
xor
cmp
scas
hlt
scas
sub
jecxz,pt
int3
push
jmp
push
cmp
arpl
push
inc
popa
lret
jge
add
push
jb
negl
mov
or
dec
pop
xchg
ficoms
ss
punpckhwd
mov
adc
in
dec
loop
pop
mov
sub
stos
xor
push
xchg
jne
sbb
inc
icebp
mov
mov
push
jge
dec
push
lock
fistpl
loop
jecxz
sub
push
pop
fadds
xor
push
ljmp
sbb
mov
mov
pushf
sub
xchg
lea
notb
push
jnp
sub
pushf
push
lret
js
pop
arpl
xlat
pop
mov
cmpsb
cmp
jg
sbb
push
sbb
pushf
cmp
dec
popf
cmpsb
nop
pop
and
mov
insl
inc
pop
fsubl
jbe
jp
cltd
incb
jge
xchg
mov
cmpsb
mov
sbb
lds
call
or
icebp
mov
sub
or
push
ret
jno
aaa
call
pop
aas
dec
jl
or
cltd
cmp
gs
sbb
imul
insb
add
test
std
pop
dec
sahf
xor
add
out
push
lds
inc
add
sub
xchg
pusha
xchg
into
pop
iret
dec
add
pop
out
inc
or
push
mov
dec
mov
mov
dec
daa
test
xchg
mov
out
adc
call
aam
inc
fdiv
rcll
test
mov
insl
lret
xchg
jmp
or
faddl
js
test
xor
nop
sub
push
mov
lret
adc
pop
test
lea
sbb
push
mov
scas
lea
lods
xor
inc
dec
test
jmp
into
mov
rcrb
push
cmpsl
bound
cmpsb
add
imul
nop
cmp
or
jmp
or
push
sub
jle
ficoms
and
shll
mov
pop
sbb
lea
negl
pop
and
nop
push
add
pop
pop
sbb
test
or
and
push
out
scas
xor
test
mov
test
dec
cmp
mov
inc
dec
mov
jecxz
movl
int
scas
lret
js
clc
or
call
cmpsl
enter
cmc
cmp
ret
push
cmp
mov
inc
adc
repz
sbb
adc
xchg
addr16
add
xchg
jmp
push
jl
out
test
popf
iret
xor
lret
jge
ret
stos
cmc
push
es
or
mov
mov
cwtl
mov
ret
mov
cmp
in
xor
sub
adc
hlt
aaa
mov
in
push
ja
popa
mov
lret
and
dec
adc
cmp
sahf
lods
pop
ja
out
scas
inc
jle
jb
adcb
mov
lahf
cmp
add
xor
push
mov
xchg
pushf
cltd
sahf
pop
lds
mov
cmp
pop
loopne
xchg
mov
lds
jno
int3
push
xor
in
test
mov
hlt
jl
mov
mov
cmp
rcrb
das
jl
popa
adc
mov
jge
shl
jno
push
fimuls
xor
ss
rclb
out
xor
add
cmp
and
pop
mov
jl
dec
shll
sti
out
xor
mov
mov
test
insb
gs
popf
xor
lods
xor
pop
imul
lock
dec
push
xchg
in
cmpsb
jo
fcomp
insb
mov
mov
clc
std
dec
loopne
sub
xor
pop
pop
xor
pop
pop
or
gs
and
imul
and
jae
sbb
cmc
test
pop
subl
cmp
cli
mov
pushf
xchg
pop
inc
xor
fcomp
imulb
xchg
lcall
jmp
xchg
sbb
fdivrp
dec
and
sub
sbb
shlb
mov
xor
arpl
push
fidivl
push
je
arpl
inc
std
inc
stos
mov
adc
mov
ss
mov
xor
mov
lret
test
vmovsldup
aas
cmp
push
ret
add
push
mov
icebp
sub
finit
aas
int3
adc
and
out
mov
fwait
loopne
adc
mov
dec
cvtps2pi
outsl
pop
stos
pop
xchg
dec
or
sbb
pushf
sbbl
xchg
jb
adc
je
jp
lcall
insl
mov
aaa
ja
xchg
inc
ljmp
mov
lcall
adc
pop
jge
iret
inc
dec
adc
popa
push
sbb
repnz
jge
mov
pushf
pop
mov
out
inc
sbb
push
in
cmp
sub
rcrl
dec
xchg
mov
imul
orl
ret
lds
rorl
cmp
scas
inc
push
xor
pop
push
stos
mov
mov
mov
shll
push
out
test
pop
mov
insb
inc
fcompl
mov
imul
cmp
push
add
stos
cmc
cmp
call
ret
loop
pop
sahf
subl
or
mov
pop
test
lret
pop
std
push
jmp
enter
xor
clc
mov
inc
mov
rclb
push
cmp
enter
cmp
insl
mov
inc
das
pusha
loope
xchg
andl
nop
roll
adc
jb
in
cmp
inc
ss
outsb
repnz
fs
outsb
xor
leave
addr16
fmul
jbe
arpl
lods
arpl
jmp
sahf
mov
pop
mov
and
call
pop
cmp
add
sub
imull
leave
subb
in
xorl
inc
fsubrs
push
mov
popa
and
push
unpckhps
scas
lock
cmp
mov
cltd
subb
push
mulb
out
jecxz
test
sbb
mov
pop
pushf
mov
decb
scas
jmp
fnstsw
or
adc
xlat
push
lds
popf
leave
repz
push
ljmp
inc
mov
xchg
repnz
sahf
mov
sbb
mov
shrd
sbb
push
fwait
shl
xchg
or
and
sub
push
stos
hlt
fcomps
inc
mov
andb
test
mov
das
outsb
mov
f2xm1
stos
lea
jbe
mov
jnp
push
pop
fdivr
dec
xor
push
mov
mov
xor
repz
xchg
mov
jae
xor
and
stos
or
inc
pop
sahf
cmp
fldt
or
inc
or
les
xor
sub
or
loopne
dec
daa
mov
mov
sub
in
mov
nop
daa
and
jae
xchg
mov
jne
push
jb
das
push
xor
mov
pop
push
outsl
mov
sub
hlt
fcomp
test
ja
out
test
in
nop
dec
in
mov
insl
scas
mov
lods
cmpsl
xor
sbb
popa
in
rclb
fstpt
mov
mov
shrb
test
lock
test
fwait
mov
test
push
clc
lods
lret
xchg
loop
push
push
fxch
ljmp
fdivs
xchg
jb
pop
xor
sub
nop
sbb
scas
add
loope
push
lds
dec
scas
xchg
shlb
bound
dec
fdivs
fimuls
fcmovnb
jb
rcl
les
inc
lods
mov
pop
mov
xorb
orb
mov
adc
xchg
push
mov
hlt
mov
adc
movsl
test
sub
shrl
data16
mov
aam
adc
push
fwait
pop
cmp
repnz
inc
push
out
jecxz
pushf
insb
inc
cmpsl
enter
dec
cmpsb
daa
mov
repnz
sbb
out
pop
inc
push
adc
flds
push
and
repz
jle
jns
mov
stos
jno
push
mov
push
in
mov
aaa
jecxz
mov
sub
push
sub
mov
jge
lods
and
dec
mov
xchg
cs
test
adc
add
aas
xor
cltd
cs
adc
cltd
int
call
out
mov
outsl
jbe
jge
or
cmpsb
cmp
mov
shlb
mov
ret
loop
mov
outsl
mov
out
into
jbe
push
aas
lret
insl
inc
mov
jecxz
pop
mov
clc
leave
cwtl
das
shr
in
mov
aad
adc
sub
addr16
pop
jecxz
test
aaa
jmp
push
insl
xlat
nop
xchg
popf
iret
inc
xchg
in
cmp
scas
mov
cwtl
sti
out
xor
fsubrs
or
leave
loopne
mov
ljmp
jp
adc
xchg
ret
les
lea
jnp
insl
movsl
andb
and
xor
outsb
in
shrl
push
icebp
fsubl
and
dec
dec
and
mov
jge
pop
xor
fistps
xchg
bound
imul
sarb
daa
mov
int3
xor
jb
jb
mov
enter
call
fnstenv
lods
jno
xchg
fmull
int
sbb
mov
insl
xchg
imulb
pop
cmpsl
out
test
lret
mov
mov
movsb
loope
in
test
fisubs
mov
shll
popa
clc
mov
inc
fld
stos
sbb
lret
rcl
out
or
cs
insb
das
repnz
xchg
or
negb
pop
pusha
pop
sbb
mov
cmc
out
push
leave
cli
jbe
ror
dec
mov
shlb
add
mov
sbb
call
jae
decl
movsl
lock
sub
mov
xchg
inc
inc
fnsave
imul
enter
cmp
sbbb
pop
cmpsb
cmp
outsb
mov
pop
loop
mov
jp
loop
jae
push
add
mov
les
scas
cmc
or
jmp
push
sbb
adc
jo
ss
dec
fs
inc
adc
dec
pop
xor
fsubl
pop
xchg
mov
jne
push
daa
fcompl
push
adc
sbb
fmul
aad
or
mov
dec
mov
icebp
mov
stos
outsb
or
daa
adc
mov
mov
in
cs
push
adc
or
xchg
adc
or
fnsave
adc
into
pop
imul
push
sub
fisttpl
sbb
std
inc
jg
jmp
dec
push
mov
sbb
adc
cmp
jle
pop
mov
lea
mov
xor
jle
clc
sbb
sbb
call
push
les
and
call
push
aam
sbb
cmpsl
mov
loope
rclb
int
adc
dec
sub
mov
movsl
out
push
lock
mov
jg
add
rcrb
std
je
push
stc
dec
jno
mov
dec
lahf
scas
cmp
jecxz
add
cmp
fstpl
andl
cmp
inc
mov
push
push
cld
xchg
inc
mov
movups
imul
xlat
add
ljmp
int3
cmp
dec
push
fpatan
and
iret
add
push
xchg
add
sub
mov
inc
sbb
pop
int
cmp
push
mov
push
cmpsb
shl
xor
movsb
push
mov
fnstcw
fisubrl
push
push
xor
add
loopne
movsb
adc
xchg
test
xchg
mov
pop
cmpsl
jp
fadds
test
sub
xor
nop
shll
out
imulb
outsl
shll
pop
add
xchg
sbb
fiadds
mov
sarb
pop
jne
lret
adc
mov
cmc
xchg
sahf
cli
icebp
dec
fsubrl
fisubl
f2xm1
jb
jae
push
daa
inc
rolb
inc
pusha
adc
outsl
cltd
jl
repz
shlb
nop
popf
das
lret
or
int3
out
loopne
sbb
sub
lock
cmp
mov
test
inc
cmp
repz
fnsave
sbb
jns
xchg
jns
dec
jns
sbb
movb
add
mov
int
cmp
push
jmp
or
mov
cmpl
xchg
sub
ljmp
mov
fstps
sbb
mov
pop
sahf
lods
pop
push
shrb
lret
xorl
jbe
gs
sbbl
xchg
dec
lods
nop
mov
add
iret
in
es
sub
pop
stos
sub
jb
inc
xchg
dec
inc
stos
cmp
jmp
and
das
cmpsl
aam
sbb
sti
push
lods
lahf
mov
mov
loope
jne
iret
add
push
in
rcrb
repnz
imul
xchg
lock
pusha
jo
fucomi
dec
jne
mov
rol
push
out
mov
out
cmp
lcall
loope
sbbb
shll
add
xchg
sub
dec
sub
inc
mov
shlb
cmpsl
popf
mov
adc
and
cmp
iret
adc
cmpsl
insw
xchg
add
fdivr
fwait
cmc
and
fisubrl
jmp
shl
jle
aaa
pop
cmp
or
sub
add
mov
cmp
dec
or
aam
ja
fistpl
js
les
idivb
mov
adc
push
inc
fcomps
mov
jb
or
cwtl
and
cmp
inc
cmp
leave
test
sub
or
jp
push
sti
repz
pop
aas
sbb
jae
xlat
clc
jae
sub
outsb
mov
fcomip
sbb
ficoml
xchg
pop
mov
in
sarl
sbb
and
fisubrs
in
cmp
or
mov
rcrb
sub
mov
and
insl
cmp
fdivr
fs
lahf
push
scas
jnp
and
jo
sub
xor
test
push
push
mov
stos
xlat
mov
cmpsl
cmp
adc
cmp
mov
and
insl
or
dec
inc
fldcw
cmp
outsb
xor
mov
loope
pop
xchg
nop
gs
sbbl
pop
mul
stos
inc
rcll
push
and
iret
push
in
adcb
jle
mov
hlt
imul
adc
addb
shrb
push
mov
or
cmp
repz
add
mov
rcr
pop
es
push
fldz
andl
test
push
aam
sbb
aam
cmp
shlb
fidivs
dec
mov
jp
xchg
jg
mov
test
cmp
pusha
js
jne
mov
add
fcmovne
fwait
sbb
aam
push
or
adcb
jne
push
xor
stos
sbb
jecxz
push
jnp
scas
jne
ja
lret
les
aas
mov
inc
sub
nop
jl
fcmovbe
jb
and
jg
add
nop
jp
sarl
js
out
cmpsl
jp
inc
mov
inc
add
movsl
mov
adc
test
pop
pop
xchg
cmc
pushf
cmp
cmpsb
out
loopne
repnz
mov
fwait
repnz
adc
and
jle
inc
pop
add
frstor
test
mov
push
push
inc
shlb
leave
jecxz
mov
xchg
add
mov
imul
mov
ds
sub
outsl
fisubrl
dec
nop
dec
loopne
jo
dec
push
imul
imul
icebp
push
out
dec
fcoms
sub
push
or
jp
lods
push
mov
mov
fwait
cli
add
adc
or
or
or
cmp
enter
int
dec
mov
or
pop
adc
jne
roll
repz
out
dec
and
jl
cmc
mov
cmp
xchg
jo
inc
xchg
daa
or
adc
ja
icebp
in
lods
push
add
xorl
cld
inc
int
repz
push
lcall
stc
mov
imul
scas
inc
jp
push
lods
adc
sbb
insb
push
pop
xor
or
push
jno
sub
jge
data16
decl
inc
rclb
ss
mov
mov
or
imul
js
mov
adc
pop
pop
mov
stos
jmp
and
inc
testl
inc
mov
iret
loop
fwait
enter
stos
das
inc
jno
sbb
test
loopne
xchg
icebp
out
scas
dec
data16
pushl
xor
outsb
in
adc
nop
roll
movsl
in
lods
sbb
pop
ds
jo
mov
pop
call
cmp
in
out
dec
call
sbb
push
scas
lahf
jg
sub
xchg
sbb
lods
loop
fimuls
cmp
and
test
shl
dec
das
aaa
into
cmp
and
insl
mov
push
jg
or
fisubrs
test
sahf
jbe
xchg
jmp
ret
shrl
cli
xchg
mov
cltd
pop
aas
scas
mov
loopne
in
movsb
xor
jge
inc
xchg
dec
inc
or
insb
jle
in
pop
mov
xchg
dec
andnps
repnz
inc
sbb
int3
addr16
inc
loop
rorl
or
imul
repz
mov
xchg
gs
xchg
mov
scas
pop
int
inc
ljmp
xchg
movsl
rorl
mov
jl
inc
loop
int3
daa
addb
js
mov
dec
sub
aaa
jbe
dec
mov
cli
mov
ret
pop
xor
mov
mov
stos
imul
inc
xor
adc
mov
ret
popf
xor
mov
stos
shlb
add
sbb
xchg
xchg
int
mov
in
sahf
xchg
rorb
movsl
mov
add
mov
std
adc
lea
mov
lret
fimuls
outsb
test
stos
inc
lret
ds
imul
cmpl
fldenv
jo
in
inc
popa
into
popf
sbbb
jmp
mov
je
and
out
lds
lahf
into
xor
test
inc
in
cmp
xlat
stos
mov
sub
mov
pop
cmp
iret
scas
sbbl
pop
sahf
stos
pusha
fistl
xor
jge
push
jmp
push
int3
jmp
pop
lcall
ret
pusha
jb
pushf
mov
insl
fdiv
pop
xor
sub
insl
lahf
or
mov
pop
xchg
push
jmp
xor
leave
mov
mov
call
shrb
in
lret
stc
xchg
jg
push
in
pop
push
jbe
leave
test
xchg
jmp
movsl
push
jb
out
mov
jecxz
inc
mov
fnstenv
or
stc
push
jno
mov
movsl
scas
les
les
or
insb
addr16
cmp
or
fsubl
fcoml
mov
in
push
mov
fcomi
std
pop
not
test
mov
fs
pop
imul
test
pop
jns
jge
adc
sbb
jae
sbb
ds
rorb
andb
xchg
sub
mov
negl
insl
cld
mov
inc
clc
aas
dec
lods
pop
fincstp
mov
hlt
icebp
fs
movsb
inc
divl
fildll
pop
adc
mov
push
xor
cmp
stc
and
push
adc
into
push
sub
stos
aas
push
aam
inc
push
js
pop
repz
mov
jp
loop
aad
rcrl
jns
clc
jb
xchg
mov
xchg
sub
jg
lds
cmp
mov
dec
loop
push
sbb
add
push
inc
and
xchg
mov
lds
mov
fcmove
out
popf
aaa
pop
iret
xchg
insl
leave
andl
xchg
xlat
cmc
push
je
out
ds
decb
push
out
int
mov
or
enter
and
loope
insb
add
adc
fucomip
pop
push
pop
aaa
mov
scas
xor
pop
iret
cs
push
mov
lods
int3
daa
inc
dec
dec
jl
mov
lcall
in
xchg
sub
push
push
jo
and
mov
inc
inc
xlat
jne
aas
dec
cmc
stos
push
movsl
fcmovnb
dec
aam
push
sub
adc
pop
hlt
sbb
movsb
cmp
clc
scas
sbb
jle
add
sar
jbe
fdivp
xorb
jle
test
std
xchg
add
mov
push
xchg
subb
jg
add
insb
add
push
or
das
push
push
sub
jb
inc
cmp
push
nop
daa
adc
sarl
call
and
rcl
mov
mov
push
mov
jb
push
cwtl
ror
loope
pop
xor
nop
mov
loop
sti
aam
add
fstpt
jo
std
stc
cs
scas
inc
xor
fisubrl
idivb
xchg
mov
mov
push
mov
pop
imul
ds
or
adc
add
xchg
xchg
mov
sub
dec
sbb
xor
aaa
fidivrl
lods
fstpl
loope
std
aas
ret
sub
js
dec
or
inc
pmulhuw
movsb
cmp
mov
ja
incb
jmp
pop
and
lds
inc
ret
popf
repz
int
or
and
add
faddl
and
test
xor
push
movsl
pop
cmp
lea
movsl
mov
into
hlt
inc
ljmp
insb
pushl
lods
push
mov
ss
rcl
pop
aad
jae
mov
fisttps
push
jbe
shlb
jnp
lods
xlat
out
hlt
or
and
add
ljmp
and
fiaddl
test
or
jae
mov
iret
sub
pop
jo
mov
adc
and
repnz
or
fadds
mov
into
xchg
xchg
clc
sbb
rol
mov
xor
hlt
dec
mov
repnz
jecxz
cs
jmp
cmp
mov
add
repz
cmp
jp
cwtd
int3
lret
out
dec
pop
inc
inc
dec
bound
xchg
push
adc
dec
xor
jge
mov
ret
ss
push
or
mov
int
outsl
push
jecxz
pusha
adc
dec
sub
jb
mov
mov
sbb
dec
es
arpl
adc
roll
add
ds
push
push
fdivl
jmp
cmc
jecxz
or
add
and
int
fisubs
mov
or
adc
pop
xor
iret
and
test
aam
pop
lods
into
orl
cli
and
test
loopne
push
sbb
cmpsb
dec
push
std
pop
subl
and
pushf
outsl
cltd
inc
gs
pop
cmp
or
push
xchg
dec
sbb
sub
lretw
xlat
sub
and
mov
pop
rcr
xchg
ret
ss
mov
mov
mov
popf
jecxz
sti
xchg
repnz
inc
fcoms
sbb
loope
andl
cmpsl
dec
mov
scas
loopne
inc
into
xchg
out
jns
pop
push
pop
cmc
sub
sbb
hlt
or
test
cmp
xor
fmuls
jb
nop
mov
jo
loop
pop
loop
sbb
iret
imul
outsb
xlat
ja
mov
and
jbe
push
out
sbb
xchg
xchg
jmp
pop
ja
fisttpl
and
fldenv
outsb
sahf
cmc
sbb
bound
sub
lahf
loopne
xor
mov
inc
fs
pop
push
and
xchg
jbe
inc
dec
sahf
divb
pop
push
mov
add
clc
pop
or
mov
loop
sahf
nop
sbb
sub
lock
mov
js
std
dec
push
inc
test
inc
fxch
push
adc
adc
mov
and
cli
loopne
adc
js
pop
xor
and
mov
out
cld
inc
nop
fbld
inc
fmull
or
enter
push
mov
icebp
loope
dec
icebp
mov
pop
add
and
int
mov
pop
test
cmovp
sbb
mov
int3
popf
jge
cli
cmp
cmpsb
pop
mov
fstp
jbe
loop
loopne
inc
test
jns
repnz
loop
inc
popa
jg
movsl
mov
dec
jp
data16
mov
xchg
mov
int3
push
scas
add
daa
xor
mov
out
mov
sub
imul
and
jmp
shlb
faddl
add
pop
jo
inc
mov
es
jno
shrb
fdivs
popl
sahf
and
cmp
aam
add
sbb
sbbb
or
xchg
popa
pop
xchg
cmp
dec
jb
lock
jle
push
sahf
sbb
inc
ja
mulb
jle
cmc
scas
push
add
ljmp
fisubl
popl
cld
aas
loop
icebp
mov
ret
sbb
lds
imul
scas
and
fmuls
sbb
loope
shll
mov
ljmp
add
js
jno
icebp
loop
add
aaa
iret
add
lret
pop
and
lock
and
fistpll
ss
xor
push
pop
xor
movsl
stos
cmpsb
add
rcrb
nop
push
loop
imul
mov
inc
fcomi
scas
addr16
pop
xchg
scas
pop
mov
sbb
out
sbb
test
ss
xlat
pop
fbstp
repnz
movsb
adc
pop
popa
fnstcw
push
cltd
mov
outsl
cltd
sub
stos
pop
mov
and
test
mov
sbb
pop
pop
adc
adc
fbstp
hlt
push
loope
std
push
jecxz
test
mov
jmp
sub
repnz
cmpb
and
cmp
lds
push
sbb
dec
jecxz
and
xchg
push
xor
mov
fcoml
sbb
subl
mov
adcb
jo
cmp
les
inc
sbb
in
notl
mov
mov
in
scas
xchg
mov
cmpb
and
add
add
sub
je
lock
cwtl
icebp
mov
scas
mov
loop
mov
dec
in
andl
into
lock
mov
hlt
mov
xor
xchg
and
or
inc
stos
push
les
out
pushf
mov
mulb
cmp
push
imul
push
pop
xor
out
movsb
loopne
das
fwait
adc
xchg
dec
cli
cld
or
sbb
jp
shrl
or
movsl
push
es
mov
push
in
lods
cli
dec
fdivrl
loope
xchg
lcall
iret
aaa
adc
out
enter
xlat
loopne
lea
or
adc
fistpll
sub
pusha
imul
aad
add
adc
adc
mov
pop
movsl
inc
mov
jno
xchg
mov
mov
and
insl
mov
jb,pn
xor
int3
sub
aad
cmpsl
les
jbe
mov
pusha
push
fadds
sahf
or
imul
mov
push
push
in
ljmp
mov
clc
fsubr
adc
adc
arpl
mov
push
lcall
sub
dec
test
cld
mov
or
imul
push
lock
adc
mov
stos
pop
inc
xlat
dec
lret
push
inc
aaa
in
fs
push
cltd
das
jle
repnz
shll
ja
cli
aam
nopl
xor
cmp
std
mov
add
sub
pop
pop
xchg
or
inc
hlt
loopne
es
in
lock
add
push
int3
testl
sti
insl
ret
pop
movl
loope
lahf
mov
xchg
shlb
out
mov
sti
test
sahf
mov
fs
les
cmp
out
sbb
cmc
cmpsb
lret
mov
sub
rorl
push
stos
scas
inc
fsubl
shll
jno
lcall
sahf
or
push
push
push
pop
mov
test
or
mov
fsubrs
lret
popa
loop
pop
je
mov
cli
cli
xchg
or
or
js
push
aas
push
pop
movsl
push
and
push
mov
push
add
push
ss
fidivl
aad
inc
insb
pop
test
xlat
or
cld
lahf
or
movsb
add
lock
movsl
orl
sub
ds
lods
pop
repnz
lret
subb
or
and
jle
cmc
cmp
mov
test
cmpl
mov
andb
loop
adc
std
repz
fwait
cmpsl
fs
mov
cmpsb
sbb
mov
scas
sbb
xchg
dec
xchg
mov
mov
lds
sbb
push
xchg
lahf
stos
xor
rorb
pop
addr16
cmp
dec
pushf
jno
push
aad
orb
xchg
add
mov
movsb
cmp
xlat
sbb
xor
repnz
fiaddl
push
and
adc
sub
movsl
push
ljmp
insl
push
fiadds
sub
je
and
sbb
push
push
leave
xor
cltd
jo
inc
inc
mov
adc
inc
aaa
lea
outsl
outsl
icebp
adc
enterw
ficoml
enter
fidivl
jns
inc
in
clc
int
sub
push
jb
dec
push
subl
mov
mov
jnp
addb
inc
fs
xor
arpl
test
cltd
jp
mov
mov
xchg
add
jae
adc
sub
icebp
push
insb
mov
jb
pop
cmp
arpl
jmp
mov
mov
iret
icebp
stc
out
insb
adc
push
add
sbb
jno
jmp
sbb
jbe
fcmovb
xor
and
scas
jns
and
sahf
jge
repnz
mov
mov
push
pop
mov
lea
jmp
push
or
xchg
jge
sbb
fs
jle
dec
pop
out
mov
cwtl
or
mov
mov
addr16
lds
xchg
in
cmpb
sub
movsb
pop
js
enter
testb
paddd
push
mov
pop
pop
fnsave
push
sub
cs
inc
fwait
bound
push
ja
aam
jnp
mov
push
ds
into
hlt
out
test
jp
mov
adcl
pop
dec
cmp
in
out
lds
aad
xor
int3
addr16
cltd
outsb
ds
pop
cltd
push
inc
out
push
push
cmp
xor
lds
daa
in
sub
inc
mov
stc
insb
xchg
das
rcrb
cmp
jb
faddl
or
jbe
mov
fisubs
push
push
cwtl
dec
sahf
scas
ljmp
jno
cmpsb
mov
add
cli
jne
dec
leave
test
xchg
ret
sahf
jno
in
bound
sahf
fsubl
pop
cmpsb
dec
stos
mov
stos
and
xor
jb
lods
movsb
cs
into
fnstenv
les
push
push
pop
mov
sarl
xchg
daa
jmp
cmp
jle
sahf
scas
mov
aaa
vpsllq
clc
jae
lods
out
dec
ja
push
fsts
sbb
sub
sbb
cmpsb
insl
fucomp
sahf
enter
or
pusha
dec
pop
leave
push
inc
add
xor
iret
dec
push
mov
push
jmp
adc
push
cmp
dec
xchg
and
ja,pn
out
addr16
lds
das
cmp
fs
outsb
addr16
pop
test
inc
or
inc
and
inc
loopne
and
add
jecxz
pop
sbb
clc
sub
inc
pop
cltd
sbb
inc
fidivrs
mov
pushf
in
test
inc
adc
jmp
in
call
or
xor
int3
fwait
sti
int
xor
inc
dec
je
add
jmp
jo
sbb
repz
scas
sub
mov
out
mov
jp
outsl
fmulp
pop
int3
pop
popa
pop
push
cmpb
scas
push
sarl
lock
and
loopne
add
call
hlt
mov
call
adc
or
pop
out
add
mov
insl
cld
bound
les
adc
mov
lcall
jae
outsl
mov
fwait
push
je
insb
jg
add
adc
aad
inc
adc
sbbb
mov
arpl
lods
aas
icebp
scas
inc
test
pop
push
outsl
mov
sub
popa
adc
loop
sub
xchg
xor
mov
ja
pop
in
je
xor
cmp
add
iret
inc
xor
lods
in
out
enter
cltd
test
xor
das
inc
dec
std
cltd
nop
push
mov
faddl
lret
xor
insl
adc
xchg
or
xchg
lret
bound
out
jmp
into
and
lods
and
add
jb
dec
cwtl
lods
dec
cmp
outsl
ds
scas
ss
loope
hlt
sbb
shll
cmp
movb
pop
std
adc
lret
mov
lods
or
movb
add
jo
mov
gs
add
lahf
push
sub
xchg
inc
adc
out
sbb
xchg
xchg
or
jmp
mov
mov
in
in
daa
mov
push
fcoml
mulb
cmp
nop
dec
or
repz
not
fwait
dec
mov
mov
mov
jmp
scas
inc
mov
xchg
push
jmp
xor
jb
pop
sbbl
test
ss
dec
rcr
mov
or
stc
add
adc
fldenv
push
cmpsb
decb
sub
stc
loope
in
loope
push
enter
test
jle
inc
inc
push
push
mov
xchg
imul
push
clc
aas
mov
jg
addl
scas
lea
cltd
stos
daa
or
inc
das
sub
xchg
xchg
ret
xchg
sub
mov
mov
pop
sub
push
jnp
ret
dec
popf
lods
dec
add
scas
jmp
mov
xor
push
ljmp
jmp
ss
dec
leave
fisttpl
lahf
cs
and
jmp
call
lcall
in
push
and
popf
xor
in
loope
inc
pushf
mov
jl
lcall
cmpsb
mov
bound
push
repnz
xor
xchg
ror
mov
cld
ss
jo
paddb
inc
xor
loopne
dec
mov
shrl
push
clc
dec
pop
loope
jne
lds
lcall
test
mov
loopne
pop
adc
inc
fs
shll
dec
push
push
dec
pop
fidivl
or
pop
mov
pop
mov
sub
mov
ret
inc
js
daa
mov
cmp
jo
cmp
data16
adc
cmp
movsl
jp
pusha
xchg
push
and
sub
xor
mov
dec
clc
arpl
or
sub
xlat
mov
lea
lahf
push
xchg
adc
stos
stc
ds
test
mov
fldcw
or
cmp
or
popa
xor
or
insb
lret
idivl
add
cmc
mov
mov
pop
in
popa
cmp
and
rclb
mov
das
cmp
push
xchg
lock
popa
add
push
data16
xchg
mov
mov
leave
scas
inc
xchg
daa
pop
imul
outsl
cmpsl
scas
mov
sub
adc
sbb
int
stos
jmp
pop
lret
push
stc
cmp
sbb
fdivs
dec
xchg
imul
in
and
push
repnz
out
int
xchg
dec
lret
lahf
inc
jb
push
shlb
mov
rdtsc
inc
adc
push
push
pop
xor
es
cmp
push
sub
popf
xor
sub
xor
xchg
jp
lods
jne
test
push
mov
push
sbbl
repz
repnz
sti
mov
sub
ljmp
sub
test
jne
or
loop
add
mov
lret
sarl
pop
mov
adcb
gs
xor
jb
jge
mov
cli
sahf
ds
cwtl
cwtl
add
mov
cmp
sub
xchg
pop
push
movsl
pop
lock
mov
sub
jmp
xchg
iret
pop
je
mov
xor
push
aas
in
cli
repnz
xor
cmp
xor
fidivrl
mov
pop
adc
sbb
paddb
lds
lcall
into
add
push
rclb
or
add
loop
sub
in
test
jae
mov
stc
out
ja
in
les
les
pop
jns
cmpsl
jecxz
sub
xor
pushf
stos
inc
xlat
sarl
jle
js
lcall
and
push
test
jge
xchg
lret
popa
push
iret
add
cmp
repnz
lret
lret
mov
xchg
mov
push
sbb
ss
ja
mov
repz
add
ja
push
subb
push
pop
mov
pop
adc
jge
mov
adc
lcall
push
or
addb
outsb
popa
clc
popf
je
xchg
lods
jle
or
dec
fcoml
in
or
pop
pop
dec
adc
ss
push
xchg
imul
cmpsl
mov
dec
cmp
sbbl
fistps
cwtl
xchg
shrl
mov
out
cmpsl
faddp
adc
xor
fwait
sti
push
test
addl
adc
push
sbb
mov
or
push
adc
pop
cmpsb
or
shlb
push
out
filds
divb
lock
cld
xchg
gs
movsl
adc
test
cmp
add
sbb
addr16
and
mov
xchg
xchg
movsb
or
jo
sahf
cmpsb
mov
rcrb
mov
jae
lea
movsb
adcb
lock
sub
aad
adc
movsb
cltd
data16
xor
call
int
pop
cmp
jns
andb
fwait
test
mov
add
pop
dec
in
mov
iret
mov
idivb
push
mov
xor
imul
into
dec
in
jmp
call
insb
dec
jno
adc
cltd
xor
xchg
inc
pop
pushf
cli
or
rcll
aam
outsl
es
adc
sub
pusha
add
dec
inc
xlat
cmp
pop
mov
outsb
or
mov
fimull
mov
adc
imul
jno
data16
enter
sub
mov
cltd
lds
rcl
push
movsl
mov
mov
js
sbb
sub
cmp
dec
lods
jmp
push
mov
popa
clc
adc
mov
enter
mov
xchg
data16
lret
out
pop
icebp
and
stc
or
fs
int
sti
imul
add
scas
daa
xor
jne
cli
ja
pusha
push
sbb
inc
xlat
das
sbb
rclb
insl
es
adc
inc
mov
and
sub
stos
push
sbb
cs
sub
aas
loope
sbb
repz
add
lret
adc
pushf
xchg
mov
mulb
push
clc
mov
test
psllq
je
outsb
push
dec
stc
and
mov
mov
mov
nop
mov
pop
pop
out
dec
push
push
pop
iret
add
jne
xchg
pop
dec
insb
mov
push
pop
and
cmpsb
xchg
adc
add
cltd
and
gs
aam
push
xchg
sub
xor
aam
pushf
cwtl
mov
cmp
cmp
add
sbb
cmp
xchg
andl
ja
adc
leave
fisubl
cmp
push
inc
xchg
stos
cmpsl
cltd
or
lret
add
in
push
adc
imul
addr16
outsb
mov
fiadds
cmp
test
mov
movsl
hlt
imul
les
xorb
lret
enter
fabs
loope
push
dec
test
jae
scas
jg
cmpsl
jne
rcr
jno
or
daa
jp
add
jl
leave
jae
mov
push
add
daa
xchg
sub
mov
mov
pop
stos
adc
push
mov
and
xor
loop
ja
or
cs
xor
mov
andb
in
test
mov
push
fwait
or
pop
repnz
sub
scas
shlb
int
fmulp
mov
dec
in
bound
ja
fsubr
imul
push
inc
and
fnclex
adc
inc
pop
xor
popf
lods
push
and
or
sub
or
push
into
movsb
shrb
js
scas
fwait
movsb
repz
inc
xchg
push
out
rcll
outsb
and
mov
dec
iret
push
inc
jl
subl
inc
and
push
mov
jle
daa
jo
adc
arpl
push
jne
pushf
popf
xor
add
mov
dec
push
push
add
jns
push
sub
fsubrs
dec
test
pop
lret
jp
subb
loope
fisubl
sub
push
dec
sbb
jb
xor
add
das
xchg
ss
cmp
adc
pop
in
mov
adc
and
xchg
jo
pop
aad
xchg
push
xchg
ret
jmp
cmpsl
mov
std
paddb
xor
shlb
dec
cltd
ja
inc
data16
scas
jb
sbb
call
je
ss
push
in
cmc
int3
cltd
lock
jnp
add
shlb
lods
push
sahf
sbb
int
and
aad
in
setnp
sbbb
xchg
popf
xor
mov
pop
jb
mov
cmp
lret
into
and
xor
gs
push
fwait
push
xor
mov
loop
jno
into
jb
inc
sbb
xlat
cmc
mov
or
adc
stos
mov
and
or
mov
test
jae
in
xchg
sar
mov
je
test
or
adc
xor
scas
jb
cmp
and
sub
jne
cmp
xchg
sbb
push
lds
jns
fldenv
xchg
xchg
stc
mov
lret
outsb
add
insb
into
enter
inc
test
int3
adc
jae
pop
dec
ja
sti
inc
dec
push
hlt
dec
mov
or
or
in
sbbl
pop
pushf
test
pop
push
and
cmpsl
mov
fcoms
mov
pop
jecxz
pop
add
lds
pop
sub
mov
dec
lods
push
add
les
and
jb
loope
jg
bound
dec
pushf
test
out
xchg
jbe
test
mov
jl
mov
xor
push
adc
push
icebp
mov
pop
adc
push
cmp
push
je
ror
mov
cmp
rcrb
sbb
mov
add
insb
jge
loopne
mov
fisubrl
jne
cmp
pushf
xchg
mov
std
push
adc
mov
inc
jnp
mov
xchg
mov
pop
imul
xchg
repnz
adc
cli
sub
or
mov
pop
addl
add
es
jmp
out
cmp
pushf
push
icebp
in
arpl
arpl
neg
and
sti
mov
subl
jmp
pop
fisttpll
cwtl
ficompl
stos
lcall
por
ja
out
mov
lahf
in
std
xchg
subl
add
pop
push
loope
fisubl
rol
mov
add
cmp
pop
testb
mov
dec
shll
cli
xchg
lret
sbb
nop
outsb
in
loopne
push
daa
cmpsb
hlt
fdivrs
and
enter
mov
loope
mov
jg
push
push
ret
outsb
add
push
jns
jle
push
popf
aam
stc
vcvtsi2sdl
sbb
rcrl
xor
cld
inc
ret
jnp
or
mov
dec
adc
lcall
pop
mov
push
dec
pop
shr
dec
bound
cmc
mov
sub
into
lods
inc
push
sub
cli
movsl
ja
lea
fsts
call
loop
xlat
loop
mov
dec
and
add
or
and
in
cmp
sub
fs
ljmp
sbb
fsubrs
nop
sbb
pop
fcompl
mov
jge
pop
aas
mov
adc
rcrb
inc
sub
das
aad
add
dec
inc
repnz
outsl
lods
pop
dec
sbb
xchg
adc
jbe
data16
cltd
xor
xor
add
leave
push
call
scas
inc
aad
or
sbb
or
mov
int3
push
jmp
inc
jb
scas
push
xor
mov
mov
push
popa
lahf
cmp
rolb
fwait
or
int
stos
sub
int3
arpl
arpl
ljmp
inc
xlat
aas
inc
sbb
xchg
mov
mov
les
inc
cmp
imul
adc
xchg
lds
ret
outsb
xor
cmp
lahf
outsb
add
scas
mov
sub
xor
cs
lods
js
xchg
insb
cs
out
add
cs
enter
cmpsb
std
xor
into
add
les
test
xchg
insl
add
sahf
mov
sbb
hlt
pop
fdivrp
dec
in
fsubs
push
sti
adc
dec
jae
fisubs
xchg
cmc
xor
sub
and
xchg
pop
cld
adc
add
sub
mov
jmp
mov
not
ss
cli
mov
mov
inc
xor
out
dec
xor
ds
sub
jno
ja
jne
cmp
in
sub
in
cmpsb
outsl
idivl
stos
mov
push
xor
xchg
test
inc
test
in
mov
fisubrs
addr16
jae
add
fs
adc
fisubl
popa
cmc
add
jp
sub
pop
dec
bound
aam
shlb
pop
les
cmpsl
push
inc
fldcw
test
push
sahf
or
rolb
inc
aaa
ja
outsb
push
gs
out
test
aad
ss
dec
fidivs
scas
cmp
or
leave
push
or
dec
inc
lret
outsb
jmp
xchg
sbb
push
mov
pop
mov
dec
in
out
inc
loope
mov
lahf
mov
paddusb
sbb
mov
lret
js
lock
movsl
pusha
ss
push
gs
dec
pop
leave
mov
or
push
cmpsb
mov
mov
bnd
and
das
inc
xchg
sbb
or
sub
loope
int3
mov
ljmp
xchg
xor
mov
popf
push
xor
jp
sub
cmp
decb
bound
jns
je
lods
dec
mov
aad
mov
aam
inc
sti
mov
and
push
inc
inc
and
jl
fists
xor
cwtl
out
sub
dec
popa
add
fsubl
adcl
mov
cmp
push
loop
mov
mov
shlb
mov
imul
movsl
fidivl
lret
pop
dec
dec
mov
cmpsb
jge
push
add
aaa
mov
int
cmpxchg
mov
sub
add
scas
bound
icebp
aam
push
sub
push
inc
mov
mov
push
addr16
cmp
test
imul
scas
or
scas
mov
inc
loope
jo
add
loopne
loope
and
in
dec
repz
movq
mov
jo
dec
mov
pusha
sub
adc
mov
imul
jg
or
js
inc
sbb
inc
popa
cmp
push
dec
pushf
xor
sbb
stc
hlt
pusha
popl
pushf
movsl
cmp
push
mov
out
mov
filds
xchg
popf
push
sbb
movsl
fstpt
jno
push
fs
cli
ret
notl
imul
fwait
mov
jg
jbe
cmp
push
cmpsb
cld
inc
sti
push
mov
jne
scas
jl
test
push
sbb
aaa
jne
int
clc
jle
test
jmp
xor
or
aam
and
imul
repnz
push
in
out
inc
icebp
sbb
cmp
mov
mov
mov
das
sahf
mov
cld
cmp
mov
push
cld
outsb
ret
out
push
xor
xchg
dec
enter
aam
cmp
and
pop
xor
cmp
fdiv
add
mov
push
nop
lods
fildl
aad
fildll
xchg
adc
in
loope
mov
clc
cmp
cmc
icebp
stc
adc
cmpsl
ds
pop
mov
nop
clc
cmp
out
mov
jo
shll
mov
mov
xchg
stos
sbb
hlt
mov
es
cltd
dec
sub
inc
jae
lret
pop
leave
popa
lret
sub
lds
mov
movsl
icebp
mov
jge
jmp
lret
call
jecxz
test
sti
mov
imul
inc
test
imull
cmp
mov
shll
sbb
inc
sub
dec
mov
ret
xor
mov
xor
fnstenv
dec
test
test
lcall
jae
add
pop
sbb
aad
lods
xorl
inc
and
or
adc
shlb
dec
cmp
add
pop
pop
sub
loope
jecxz
and
outsb
add
mov
fs
fmuls
lods
psubsw
cmp
or
xor
and
fnsave
and
popa
mov
or
push
bound
rcrl
dec
fldl
imul
jae
sti
push
push
cmp
testb
mov
sbb
mov
ret
push
xchg
cmc
ljmp
sbb
fwait
sti
jge
inc
and
xchg
push
stos
pop
cmp
es
xor
fisttpll
leave
cs
inc
cmpsl
pop
clc
stos
push
adc
pop
xchg
scas
test
mov
fldcw
push
jecxz
dec
jmp
sbb
das
or
mov
mov
repz
pop
cmp
sarb
test
dec
lmsw
pusha
pop
aad
jno
movsb
cmp
cmp
shll
push
mov
popa
jns
ret
sbb
mov
pop
cmpsl
nop
int
stc
jnp
push
push
in
dec
das
sbb
lds
lret
outsb
adc
mov
pop
push
xchg
lods
test
lods
bound
mov
pop
sbb
dec
mov
inc
outsb
insl
ss
xchg
daa
cmp
lods
cmp
shrb
sarl
jnp
xchg
mov
insb
add
iret
fwait
aaa
add
cltd
call
push
cltd
ljmp
scas
outsb
in
adc
xchg
jnp
xchg
sbb
mov
lcall
jp
push
mov
js
fmuls
comiss
test
lcall
inc
ja
ss
mov
push
inc
stos
xor
pusha
nop
dec
pop
cltd
inc
cld
es
fisubrs
lds
insb
xor
push
imul
xchg
cld
xchg
in
out
push
xor
idivl
adc
out
lret
lcall
cmpsb
cli
and
xchg
push
sti
or
cld
shlb
cltd
sbb
cltd
mov
int3
jbe
decb
mov
sbb
test
lock
insb
lods
pop
cmp
push
or
or
mov
mov
pop
into
orb
ja
das
push
call
iret
jle
xor
pop
in
pop
pop
jns
fldcw
scas
xor
das
jge
shrl
daa
repnz
aam
insb
mov
sti
xchg
push
movsl
notl
pop
or
lods
dec
notl
lods
push
lret
fwait
lds
loope
mov
mov
jp
xor
testl
adc
insb
xchg
popa
popf
xor
pop
ja
sbb
lock
sub
das
ret
test
negl
or
sahf
stc
or
dec
dec
lock
pop
nop
xor
lcall
ja
mov
or
imul
paddb
jns
les
subl
or
fstl
xor
adc
inc
push
add
mov
and
mov
xchg
shrl
cmp
aad
aaa
roll
inc
rol
push
and
mov
sbb
sarb
sbb
scas
push
push
xchg
add
and
test
lds
sub
jmp
jnp
insl
cld
xor
push
sbbl
mov
dec
in
mov
mov
push
mov
notb
cmp
aam
push
imul
push
push
and
pop
fwait
push
mov
pop
mov
hlt
mov
lcall
pop
ret
lea
data16
sub
lods
sub
or
sub
inc
push
sub
aad
sbbl
jecxz
flds
cmpsl
clc
cli
in
jl
negl
mov
dec
cmp
mov
mov
mov
lret
pop
cs
or
call
lds
lret
std
icebp
xlat
and
insb
sbb
sahf
xor
or
pop
xor
call
lcall
loop
bound
cmp
and
es
xor
outsl
stos
add
jns
xor
test
negl
cmp
xor
adc
out
cmpsb
lds
pop
jle
xor
push
in
inc
mov
jns
xor
sub
cs
mov
shrl
repz
cmp
adc
fs
adcb
ret
js
lahf
adc
push
sbb
pushf
call
or
push
clc
push
rcr
sbb
call
dec
jno
sahf
inc
mov
mov
mov
push
push
mov
rorb
sahf
in
lret
aaa
pushf
add
cmp
add
cld
xchg
sub
xor
aaa
jle
and
mov
cmp
imul
jle
outsl
push
jg
xchg
mov
outsb
outsb
arpl
out
into
cmpsl
and
shlb
rcrl
cs
push
or
loope
pop
xchg
jns
mov
daa
inc
cmpsb
pop
push
stc
rol
xchg
sub
leave
daa
push
push
ffree
xchg
jo
bound
int3
push
fcompl
loopne
jne
or
add
addr16
pop
repz
mov
daa
call
mov
cmp
fsubrl
sbbl
mov
jno
xchg
dec
pop
scas
ds
cli
lret
mov
popa
cli
inc
cmp
addr16
dec
shrb
test
dec
call
xor
push
decb
xor
xor
jl
leave
push
in
sbb
clc
orb
jae
sti
cmp
mov
push
inc
pop
test
lods
test
or
sub
push
mov
sti
insl
ret
pusha
cltd
hlt
mov
jae
ss
lahf
insl
shl
adc
imul
test
sub
sub
pop
mov
cmp
es
scas
sbb
pop
pop
bound
lods
jl
dec
pop
icebp
insb
into
pop
divl
clc
shll
mov
sbb
cmp
bound
and
xchg
mov
inc
ret
mov
movsl
addr16
jo
sub
add
jbe
sub
inc
jg
cmp
sub
lea
mov
mov
mov
lds
push
jb
dec
dec
loop
idivl
les
fmuls
or
aaa
or
testb
ss
movsb
out
lret
dec
loope
add
pushl
pop
add
fwait
inc
mov
inc
mov
nop
push
sub
jp
popf
gs
adc
mov
fdecstp
jnp
mov
ret
pop
mov
jae
inc
out
call
or
sar
fdivrp
shl
fcmovu
xchg
or
sbb
test
sti
inc
inc
and
aam
rcll
or
cltd
or
sbb
mov
sbb
inc
xchg
aaa
xor
and
adc
outsb
in
push
lods
dec
or
imul
inc
lcall
dec
jbe
imul
add
push
fsubs
test
adc
test
xchg
xor
cmpsb
pop
adc
inc
scas
jl
xor
xor
cmpsb
fldl
mov
xor
sbbb
push
jge
iret
cs
jl
dec
adc
cmp
add
pop
push
repnz
lock
or
or
cmp
mov
lcall
inc
je
sub
jmp
shlb
dec
or
jns
ja
push
test
das
out
push
fadd
inc
ja
push
test
inc
arpl
fists
pop
repz
pop
icebp
mov
dec
cmp
or
out
adc
notb
cmpsl
out
popa
inc
mov
pop
lock
xor
ret
inc
out
inc
rcrb
add
sarl
and
pop
ret
sbb
fcmovbe
inc
lret
mov
mov
jo
stos
stos
xchg
inc
popf
dec
repnz
enter
cmp
popa
ljmp
mov
sbb
fld
dec
stc
add
jns
sbb
adc
lea
pushf
cmp
jnp
imul
test
mov
mov
sbb
cmp
mov
and
arpl
bndstx
mov
pusha
std
test
ljmp
ja
in
shlb
pop
xchg
sub
xchg
mov
stos
loop
jnp
mov
lea
mov
jo
adc
cwtl
push
repnz
add
sbb
cmp
add
outsb
cmc
jmp
and
loop
add
ss
out
pop
pushf
mov
leave
lds
lea
rcll
repnz
cmp
push
add
fistps
fstpt
cli
loop
mov
xor
ljmp
lea
mov
mov
in
lcall
popa
in
jbe
in
adc
jns
xchg
add
iret
mov
ret
xchg
jl
fwait
es
jge
aam
adc
call
lret
aas
mov
xchg
shr
sub
sbb
or
lock
lock
cmp
cmp
into
cmp
cmp
sub
add
xor
push
mov
inc
in
arpl
sbbb
outsl
inc
les
test
xor
addr16
mov
test
pop
and
faddl
xor
cmp
lea
sub
clc
lahf
int3
pop
mov
sbb
ds
nop
inc
ljmp
xor
js
dec
fstps
sbb
lock
dec
addr16
inc
lcall
push
aam
je
xor
sbb
repnz
jns
cs
cmp
stc
sti
xchg
sub
les
ret
lds
dec
xchg
jl
addb
or
idivb
cmp
fldenv
xor
jecxz,pn
lea
jecxz
push
xlat
stc
adc
add
loope
movsb
cmp
add
mov
sti
lcall
lret
mov
cmp
int
or
pop
loop
out
out
xor
lock
lods
scas
xor
lock
sahf
fsub
jmp
scas
in
cmp
pop
outsl
mov
push
in
inc
aaa
xchg
sub
fwait
jne
dec
mov
cmp
adc
ja
mov
or
and
mov
fsubp
aaa
inc
das
fdivp
outsb
mov
std
and
mov
inc
inc
and
outsb
pop
dec
pop
outsb
test
adc
out
bound
lret
out
int
xchg
shrl
add
outsb
xchg
mov
ja
add
lock
std
jecxz
jae
out
cmp
int3
sbb
cmpsl
jp
lahf
les
sbb
rcrb
stos
inc
cmp
xlat
and
mov
aad
fdiv
icebp
xchg
sbb
aam
arpl
gs
xchg
inc
mov
scas
int3
std
rcr
push
xlat
outsb
xchg
fisubrs
jle
add
lock
push
inc
fsubs
jecxz
xchg
punpcklbw
lea
mov
ret
push
out
popf
icebp
imul
loope
mov
addr16
pop
or
ret
xchg
scas
push
popf
fdiv
aad
scas
add
unpckhps
sub
fildll
lret
push
cmp
outsb
movsb
push
sbb
scas
push
mov
or
fwait
lret
ss
loopne
nop
pushf
push
cmpsb
cmp
mov
insl
stos
sub
mov
out
icebp
nop
mov
fistpl
scas
in
inc
dec
cmp
dec
pop
dec
mov
bound
stos
jmp
rcr
or
flds
data16
je
test
sti
pop
mov
inc
aaa
jbe
fwait
insb
add
sub
fsubs
cmp
mov
test
repz
insl
rolb
cld
lcall
and
popf
xchg
fisubl
push
sbb
pop
add
xorb
xlat
mov
jbe
jno
jl
sub
add
mov
sub
pop
fwait
call
in
adc
add
push
mov
fisubs
mov
mov
shrl
andl
or
jo
mov
por
popa
lods
sub
clc
and
adc
fdivr
cmp
xchg
mov
push
mov
pcmpgtb
sbb
and
iret
push
lcall
jecxz
cmc
sbb
mov
sbb
push
and
xchg
lahf
lea
test
hlt
mov
cmpsl
lock
and
inc
ss
jmp
or
cmp
xorl
xor
sub
dec
pop
mov
mov
cmp
sub
push
out
call
les
aam
mov
inc
insl
inc
cmpsl
inc
out
mov
std
repnz
in
jne
iret
cmc
cltd
dec
leave
dec
mov
psrad
out
nop
shlb
in
mov
icebp
or
mov
pop
sarl
adc
into
add
shlb
or
sahf
xor
jle
and
sbb
lods
in
cmp
ja
sbbl
daa
mov
sub
inc
lods
addr16
scas
in
mov
mov
inc
jmp
jo
mov
mov
mov
js
dec
addr16
fcomp
mov
or
movsb
nop
jns
push
add
aas
lahf
mov
mov
ret
adc
and
adc
lret
pop
push
in
mov
lock
inc
fldl
xchg
mov
dec
arpl
xchg
aas
mov
test
icebp
shrl
test
mov
into
hlt
fstl
pop
mov
inc
xchg
mov
mov
push
nop
jb
push
sub
lds
popa
insl
loope
outsl
add
lea
mov
movsl
mov
xchg
inc
bts
cs
sbb
mov
pop
pop
mov
jbe
ja
in
aaa
push
fwait
adc
inc
mov
call
mov
arpl
xor
enter
jmp
pop
mov
or
mov
cs
aad
mov
aam
data16
pop
xorb
mov
cmc
fucom
loope
enter
push
sbb
dec
jp
pop
jne
mov
sbb
sub
dec
popf
roll
push
mov
cltd
leave
pop
lret
cmp
movb
out
or
mov
jnp
cmp
sbbl
lret
xor
push
scas
add
mov
add
mov
shll
dec
add
lods
pushf
xor
adc
leave
push
aas
insl
dec
lock
push
xor
hlt
mov
gs
jbe
cwtl
mov
fwait
mov
loop
add
mov
imul
push
fadd
bswap
mov
sbb
add
lret
js
push
mov
pushf
or
add
xorb
mov
pushl
mov
pusha
inc
in
xor
ds
dec
mov
aaa
mov
and
out
scas
sub
call
mov
test
je
or
gs
sub
sub
loop
cmp
mov
pop
sbbb
mov
xorb
xor
les
test
pop
and
sbbl
sbb
and
aam
sbb
or
pop
inc
push
rorl
pop
loopne
mov
and
xchg
and
in
xchg
push
dec
or
cmp
nop
mov
imul
leave
cmp
rcl
hlt
sbb
dec
jmp
shll
cwtl
mov
push
lods
ljmp
jbe
insb
adcl
pop
aam
cmp
lea
test
mov
imul
sbb
dec
int3
dec
or
or
push
push
int
in
push
in
adc
dec
leave
cmp
aad
filds
jo
xchg
mov
inc
push
pop
ret
lock
scas
mov
add
dec
idiv
jns
sub
arpl
lcall
pop
mov
imul
pop
test
or
cmp
lahf
rcr
and
cmp
xchg
testl
test
pusha
ss
stos
leave
fildl
imul
jmp
mov
data16
lahf
dec
out
inc
repz
add
mov
mov
and
xor
cltd
push
sbb
dec
notl
push
jo
cmp
jmp
cmc
add
pop
fsubl
sahf
add
jne
shlb
cli
movsb
fnsave
add
ja
enter
jnp
mov
cs
mov
hlt
sarl
or
dec
push
jno
jbe
jne
pop
mov
loop
cmp
fwait
js
or
outsb
rcl
movsb
pop
pop
mov
loop
push
lret
jbe
insl
scas
add
pop
addl
mov
push
mov
shl
sub
lea
cmp
imul
test
cli
mov
xchg
clc
or
ror
sbb
ljmp
lods
lea
movsl
inc
mov
push
mov
lock
outsl
arpl
lcall
test
dec
inc
adc
mov
test
lahf
push
add
or
pop
shlb
xchg
lods
cmp
loope
cmp
push
xchg
sahf
scas
cmp
inc
notl
mov
sti
and
test
add
xchg
or
cmp
mov
jb
out
call
daa
jg
sbb
mov
out
inc
pop
mov
in
add
or
jecxz
and
cmpsb
subb
out
push
sbb
mov
and
pop
imul
aas
dec
subb
mov
push
dec
push
add
idivl
dec
js
pop
mov
fdivs
int3
cmpb
loope
arpl
into
and
test
aam
jp
jmp
add
lahf
negl
adc
xchg
cmp
sub
mov
mov
rorb
jle
dec
push
mov
rolb
pop
insb
sbb
roll
je
incb
sarl
sub
cmp
int3
fisubl
out
scas
sbb
outsl
ljmp
cmp
popf
pusha
push
fistps
lock
push
jns
scas
mov
aam
pop
test
dec
data16
outsb
mov
or
je
in
and
loopne
push
inc
or
xor
adc
cli
int3
data16
pop
add
insb
jl
jge
scas
out
clc
repnz
cmpsl
cmc
inc
xor
push
xchg
hlt
and
jbe
cmova
xchg
ret
insb
jge
inc
repz
cmc
jp
jo
push
jle
sbb
mov
std
inc
imul
lret
idivl
inc
fsubs
pop
xlat
aaa
add
imul
ret
aad
cmp
inc
lods
sbb
jmp
inc
out
jb
aam
push
hlt
lods
xor
sbb
mov
xor
push
mov
in
xor
scas
test
push
sahf
pop
sbb
xor
sub
pusha
add
xor
loop
adc
jnp
int
ljmp
xor
andb
dec
pop
pop
icebp
mov
in
stos
xchg
clc
or
or
xchg
xchg
sub
imul
lods
xchg
jnp
ret
mov
das
xchg
insb
jno
jle
insl
sbb
cmp
jmp
test
push
movsl
pop
daa
xor
insb
sub
in
push
mov
scas
call
imul
lea
mov
insb
jnp
ja
mov
inc
cwtl
test
enter
scas
call
popa
test
fdivrs
imul
pushf
js
and
or
cmp
xchg
sub
xchg
lret
push
and
pop
and
ds
in
cmpsb
mov
mov
fldcw
bound
push
sbb
pop
mov
ss
jle
xor
mov
std
xor
outsl
jp
dec
js
mov
aad
or
scas
andl
sti
xor
insb
mov
push
sbb
push
inc
xchg
dec
cmp
sbb
or
inc
pusha
or
jae
mov
popf
dec
dec
or
leave
pop
sub
fwait
data16
out
xorl
lods
push
jecxz
jno
jge
gs
cmp
add
jne
or
lcall
gs
cmpsb
adc
enter
jmp
inc
adc
inc
in
dec
out
cld
and
sbb
scas
xchg
lock
sbb
mov
dec
aam
jnp
lret
sbb
sbb
pop
jecxz
jle
xor
sub
jno
cmp
aam
sahf
cmp
out
rol
ljmp
inc
adc
jnp
mov
shll
ret
insl
add
jp
add
adc
mov
inc
insl
mov
dec
out
adc
sbb
popa
cmp
ljmp
mov
lock
dec
rorb
or
out
ret
pop
inc
jp
cld
xchg
add
dec
rolb
sub
outsl
sbb
lret
xor
add
xchg
loope
sub
stos
ds
lods
jmp
inc
dec
and
test
enter
pop
stos
and
xor
dec
cli
neg
ljmp
ss
aam
lret
xor
stos
fistpll
imul
mov
lcall
imul
sbb
movsb
lods
imul
jno,pt
pop
sbb
push
xchg
movsl
lds
les
sub
mov
in
inc
or
pop
sub
cmpl
or
xchg
pop
popa
clc
dec
fisubrs
std
shlb
sub
popf
xor
cmp
jge
call
lods
lock
lods
orl
sbb
xlat
or
or
nop
sbb
xchg
in
in
xchg
loopne
test
push
mov
sahf
rorl
test
xchg
add
xor
lea
dec
jbe
jbe
mov
mov
fdivrl
out
jl
and
jecxz
or
and
jne
popf
pop
adc
ja
xchg
sub
pop
or
repnz
in
cwtl
bound
loop
mov
mov
mov
xor
cmp
aaa
lcall
adc
cwtl
pop
imul
dec
jne
mov
inc
inc
test
dec
call
fxch
int
and
pop
xchg
aas
or
push
out
scas
data16
fcompl
mov
adc
aam
mov
mov
xchg
pop
or
pusha
in
pop
adc
inc
fisubl
inc
lret
fdivs
xor
mov
mov
add
mov
sbb
adc
out
push
sub
lods
or
test
and
jp
ret
ds
dec
repnz
scas
mov
std
aam
hlt
or
insb
add
pop
jmp
jg
sbb
mov
lahf
imul
mov
inc
add
stos
fldenv
inc
mov
jns
pop
lock
push
movsl
adc
add
lea
loope
dec
sub
rclb
fs
into
cmpsb
cmp
push
mull
or
lea
inc
cmp
and
mov
sbb
ja
cld
bound
adc
mov
jbe
mov
dec
xchg
or
mov
fsubl
inc
stos
cmpsb
sub
in
std
inc
xchg
jle
movsl
mov
inc
push
mov
movsb
push
mov
mov
out
sbb
idivl
iret
mov
repz
lods
fsubr
adc
xor
add
mov
jge
movsl
stc
movsl
imull
loope
add
rcl
test
mov
cwtl
cmp
daa
xchg
pop
mov
xor
xchg
mov
cmpsl
cmp
in
fwait
sbbb
leave
or
test
dec
cmc
or
out
jg
mov
inc
insb
enter
inc
and
adc
sahf
out
pop
sbb
inc
push
push
inc
xlat
inc
leave
xor
push
push
scas
xor
clc
test
inc
xchg
insl
inc
lcall
enter
inc
scas
popf
rcrb
fisubrs
cmp
sub
ret
fbld
in
roll
mov
xlat
jnp
or
loopne
sub
pop
mov
or
lds
in
imul
jge
aam
iret
fisubrs
repz
in
cs
add
dec
jae
cltd
xchg
testl
pop
lret
mov
and
sub
mov
push
dec
pop
pop
sub
xor
lods
mov
fstps
test
leave
cwtl
xor
and
aaa
fdivp
loope
dec
jecxz
mov
jo
in
jle
cld
push
mov
jae
jmp
ljmp
mov
and
loope
js
scas
nop
daa
loope
mov
add
adc
cmpsb
cmp
lret
push
repnz
sbb
adc
fsubs
sbb
int3
cmp
into
outsl
sbb
imul
or
lret
xlat
call
in
stc
outsb
jns
dec
daa
inc
in
mov
xor
ficomps
insb
add
cmpsb
inc
lods
add
pop
mov
stc
and
inc
xor
xchg
rcr
loope
or
adc
xor
mov
imul
mov
mov
jmp
rclb
loope
jmp
and
into
xchg
sub
add
xor
adc
xor
sbb
jg
dec
loop
mov
imul
or
insl
sub
mov
dec
rcrl
pop
jbe
ljmp
sub
inc
scas
scas
enter
sbb
loope
das
mov
sub
int
xchg
pop
pop
cmpb
movsl
mov
pop
fmul
cmp
fs
mov
arpl
pop
add
test
fisttps
jp
pop
imul
cwtl
sbb
cmpsl
push
in
int
inc
jl
into
lock
mov
and
sbbl
inc
fdivrl
cmp
and
leave
dec
sub
mov
dec
aad
xchg
dec
add
es
push
insb
inc
lods
imul
enter
jmp
pop
cmc
sbb
xchg
adc
ljmp
dec
push
scas
xchg
sub
mov
lahf
dec
hlt
nop
jg
test
add
bound
rclb
sbb
mov
fstps
jp
dec
pop
fistpl
adc
call
dec
icebp
enter
inc
fiadds
in
inc
inc
push
inc
and
ficomps
incl
mov
stos
shrl
rcr
stos
mov
lods
and
lret
out
call
sbb
sbb
pop
mov
add
pop
xchg
adc
loop
mov
ss
in
cmp
mov
xor
ja
int
push
lds
and
notb
inc
pop
xor
scas
stos
aad
jne
cltd
stos
dec
xchg
or
mov
mov
lahf
or
clc
and
inc
sub
cmp
xor
xorl
jmp
inc
cli
inc
fnstsw
add
xchg
mov
push
test
mov
xor
cmp
xchg
cmpsl
and
push
inc
sar
fisubl
frstor
icebp
scas
fnstsw
inc
je
mov
xchg
add
js
cmpl
pop
dec
mov
ljmp
dec
mov
fwait
sti
add
nop
pop
mov
mov
in
js
cs
mov
or
rclb
sub
pop
adcl
daa
push
mov
movsb
fdivrl
cmp
sub
je
pusha
iret
cmp
xchg
mov
sahf
nop
dec
in
adc
in
add
fmull
test
mov
inc
in
pusha
enter
xchg
hlt
popa
std
call
out
mov
xlat
xchg
cmc
mov
sarl
xchg
add
pop
fistl
push
and
je
int
adc
ds
pop
rcrl
les
mov
push
mov
jbe
or
dec
in
sbb
push
xor
lock
xor
add
adc
call
or
pop
jle
fisubrs
nop
dec
dec
push
data16
cs
imul
or
jbe
insb
fistps
outsb
and
enter
jno
and
lds
mov
testb
jge
pop
lcall
xor
dec
cmp
aas
loop
stos
inc
sub
repz
lea
cmp
cli
inc
add
mov
cwtl
add
mov
lods
jmp
jecxz
aad
insb
mov
xor
pop
push
adc
add
push
ljmp
es
cmp
adc
call
jmp
into
cmp
cmp
fmull
pop
loopne
mov
sub
adc
mov
into
sub
ds
into
mov
pop
inc
fsubr
xchg
sbb
or
leave
daa
test
fbstp
out
sti
subb
nop
mov
nop
movsl
jge
jbe
or
iret
mov
idivb
shll
jae
ljmp
jno
push
insb
nop
gs
int
fcomps
das
xlat
mov
cmp
mov
or
test
ficoml
les
pop
pop
fwait
adc
or
adc
pop
loopne
mov
sub
jb
push
adc
adc
xchg
or
filds
xor
mov
leave
cs
gs
jae
out
adc
mov
leave
cs
movsb
adc
cmp
mov
cwtl
mov
scas
xor
test
push
add
dec
pop
and
in
movsl
xchg
arpl
aam
out
pop
adc
sbb
xchg
lahf
cmpsl
cli
loope
dec
cmpsl
adc
les
movsl
inc
iretw
sub
cwtl
into
mov
mov
fstpl
mov
stos
and
shlb
int
add
pop
out
jle
sti
cmp
mov
mov
adc
or
jp
xchg
mov
fcomip
mov
mov
xchg
and
cwtl
ret
fldenv
cs
je
push
loope
dec
lods
je
out
lcall
mov
cmpsl
call
fildll
outsl
adc
cli
rcrl
pop
xchg
call
es
out
jmp
lahf
sbb
cmp
xor
out
mov
xchg
pop
into
adc
sub
test
lret
sbb
xchg
insl
dec
dec
les
mov
les
or
sarb
fstp
mov
pop
sub
imul
addl
dec
xchg
pop
jl
or
lock
outsl
testl
cltd
adc
sub
int
and
aaa
adcb
call
ret
pop
icebp
or
out
add
jl
push
pop
push
jne
mov
and
adc
jecxz
in
jg
cli
push
add
and
rorb
cld
lcall
push
sub
sarb
add
pop
and
pusha
pop
or
subl
adc
cmp
adc
cmc
inc
outsl
xchg
mov
data16
imul
pusha
pop
push
jne
cmp
fucom
xchg
jmp
fs
and
mov
stos
inc
mov
in
xchg
pushf
movl
addr16
lock
lcall
mov
push
pop
mov
subl
or
lea
jmp
dec
enter
out
fs
xchg
jl
insl
and
hlt
mov
leave
push
mov
mov
pop
sahf
lcall
sbb
in
dec
cmp
jl
daa
int3
jo
test
rcrb
lea
jne
mov
jp
leave
and
dec
jae
test
les
bound
enter
adc
fucom
mov
test
in
push
mov
jecxz
jno
sub
mov
call
push
in
shr
adc
cmpl
xchg
roll
cld
lcall
push
mov
cmpsl
je
mov
lods
lods
and
js
into
test
jp
not
mov
push
push
in
mov
movsl
insb
mov
xchg
push
inc
pop
fucomip
mov
orb
test
cmp
iret
fldlg2
adcb
scas
cmp
xchg
sub
lret
and
imul
dec
or
and
mov
adc
lods
orl
pop
xor
rolb
xor
mov
movl
arpl
jmp
mov
test
mov
mov
cmp
popf
jb
shll
mov
jg
jle
mov
push
inc
mov
pop
jo
cmpsl
lret
lret
mov
int
scas
cmp
mul
pop
sbb
mov
insl
or
addr16
fiaddl
mov
push
inc
mov
imul
insb
addl
pop
loopne
mov
sub
insl
jns
adc
mov
and
in
sbb
divl
mul
not
in
lret
push
mov
mov
and
inc
inc
ljmp
daa
sub
dec
addr16
lods
mov
imul
xor
add
sarw
scas
pop
inc
insb
mov
mov
dec
comiss
gs
outsb
in
insl
cmc
cld
xor
stc
out
mov
inc
xchg
xor
rcrl
js
xchg
dec
pop
dec
jg
xchg
sub
outsl
xor
fidivrl
lods
push
idivb
fstpt
add
es
je
adcb
or
xchg
cmp
lds
adc
enter
and
add
adc
shlb
lret
mov
mov
scas
and
lods
xor
je
aas
sub
cwtl
mov
dec
out
aaa
cmc
out
push
pop
mov
lret
pop
mov
push
int3
cmp
sbb
jae
adc
push
aaa
lock
or
adc
shlb
and
loope
inc
sbb
int
cmp
pop
pop
dec
and
jl
pushf
xor
inc
jecxz
add
inc
outsl
imul
adc
push
xchg
addb
push
jns
add
mov
out
dec
jne
jle
xchg
sbb
in
imul
popa
mov
mov
sarb
xchg
nop
in
loopne
nop
lock
repz
sbb
jmp
mov
sbb
outsb
sbb
int
add
xor
fcmovbe
rorl
sbb
cltd
dec
pop
out
test
push
int
into
out
xchg
sbb
lret
cmp
cmp
ret
sbb
add
jno
frstor
xor
lock
dec
mov
mov
loope
daa
mov
scas
out
xor
mov
aam
add
add
and
fidivl
cmp
rorb
subl
push
ljmp
jae
ljmp
cmp
push
cwtl
adc
les
jecxz
and
mov
filds
jmp
and
or
sar
cli
jmp
sti
ret
cwtl
adc
lcall
outsb
aas
push
outsl
or
leave
pop
fs
add
test
jge
xlat
cmpsl
jle
pusha
add
lret
xchg
mov
roll
test
push
cmp
js
test
testl
push
fsubp
pop
test
push
mov
pusha
fistpl
xchg
pop
jp
cmp
jp
jecxz
cwtl
mov
aam
add
or
mov
insb
push
dec
dec
or
cmp
inc
pop
add
iret
push
sub
loope
fwait
sbb
xchg
mov
add
xchg
out
notb
mov
ja
stos
jg
imul
ljmp
fadd
pop
push
insb
add
xchg
push
je
mov
outsb
aad
cmp
lcall
xchg
fs
pop
sub
mov
test
into
or
xchg
repz
test
jno
cwtl
stos
fsts
jmp
or
cmp
loope
jle
decl
sub
pop
cmpsb
xor
in
mov
js
and
adc
ljmp
les
iret
andb
mov
out
shrb
or
pop
fwait
add
fmull
lcall
daa
cmp
flds
cmpl
loop
or
mov
jg
dec
push
std
mov
push
imul
ret
pop
jno
mov
pushf
into
jg
or
notb
insl
das
or
pop
sahf
incb
and
lds
mov
pusha
mov
cmp
or
push
addr16
sbbl
jne
iret
lods
pop
mov
fistpl
faddl
pop
ss
and
inc
jge
adc
lods
fnstenv
aas
mov
dec
sti
and
or
cmpsl
jge
cmp
addb
into
mov
push
aaa
xor
push
mov
cmp
sbb
add
in
ds
clc
ljmp
aam
enter
jmp
mov
icebp
movsl
mulb
pop
scas
adc
out
jecxz
fdivrs
out
dec
fcmovu
cli
mov
inc
gs
je
cwtl
xchg
call
pop
or
addl
cwtl
cmp
mov
fistpll
loope
fnstcw
sarl
data16
fisttps
xchg
out
pop
pusha
mov
and
cmc
push
adc
loop
addr16
int3
adc
jne
mov
inc
arpl
out
rcrb
push
neg
insl
aad
pop
ja
push
jbe
mov
lock
sbb
jbe
cltd
das
cmp
loopne
int3
pop
call
inc
sti
cmp
inc
push
lret
pop
adcb
sub
and
pusha
push
xor
test
cli
out
fdivrp
xchg
cmp
and
dec
jae
cmp
hlt
imulb
mov
inc
rcrb
fldenv
mov
add
adc
shlb
xor
dec
xor
pusha
pop
icebp
ja
aaa
jbe
sbb
add
xor
hlt
xchg
adc
mov
imul
jl
std
xchg
lods
cmp
movsb
incl
mov
xchg
mov
fsubl
sbb
cmpsb
push
dec
in
xlat
sub
mov
cmpl
xchg
xchg
daa
testb
inc
call
xchg
mov
mov
xchg
test
mov
sub
aad
mov
push
jno
jle
pusha
clc
mov
fidivrl
stc
scas
cmc
jo
fldt
push
popa
test
xchg
adc
push
into
das
pop
rol
mov
dec
push
or
lea
icebp
xchg
sub
jno
pop
cs
push
test
imul
in
push
in
pop
mov
imul
adc
jecxz
xchg
cli
addr16
loope
or
sbb
inc
dec
or
push
and
frstor
ret
push
xor
shrl
sub
mov
sti
xchg
scas
jnp
sub
flds
in
mov
testb
loope
jmp
or
jae
in
pop
cltd
xor
or
cs
mov
dec
fwait
test
cmpsb
loope
mov
fmuls
movsl
cmp
mov
lahf
scas
pushf
sub
out
jl
or
aaa
jns
add
loop
adc
popa
call
ljmp
jno
fbld
xchg
in
dec
pop
cli
push
mov
outsl
mov
adc
movsl
jle
lods
ret
mov
aad
in
in
xchg
adc
cltd
sahf
mov
push
add
insl
call
mov
out
jo
fldlg2
test
repnz
outsb
cs
adc
sub
movsb
cmp
sbb
movsb
data16
imul
inc
add
lcall
push
sti
and
pop
lods
mov
sahf
cli
push
sub
pop
adc
mov
out
mov
addr16
loope
js
pop
mov
outsb
in
sub
jge
jne
adcl
insl
sub
jnp
sub
mov
and
xor
inc
std
in
pop
fisttps
mov
aaa
pop
into
loope
lods
inc
flds
fdivp
aas
mov
add
xchg
xchg
orb
push
adc
icebp
mov
outsl
push
inc
mov
and
repnz
cmpsl
xlat
outsb
fldcw
mov
insb
shrl
pop
into
leave
push
and
ja
rorl
sbb
gs
or
mov
push
sbb
xchg
jno
ret
sub
aam
cmp
dec
cmp
repz
push
inc
rcrb
fstps
pop
push
jnp
push
pop
jne
sbb
sahf
sub
cli
push
fisubl
xlat
push
mov
pop
sub
loope
mov
ss
out
call
imul
hlt
sbb
jb
mov
fnsave
fcomi
mov
cld
xor
dec
inc
test
mov
sub
test
push
push
mov
mov
xchg
inc
mov
push
pop
fs
add
fs
and
inc
subl
lods
and
ret
inc
jae
jae
iret
push
fstl
pop
sahf
dec
push
movsb
pushf
and
loop
out
test
test
fs
pop
jmp
dec
sbb
cmp
outsb
loope
sbb
aaa
test
jb
sub
pop
mov
mov
mov
mov
je
jns
sbb
scas
adc
jno
mov
mov
rcl
enter
push
xchg
add
xorb
cmp
or
sbb
mov
push
mov
out
dec
sub
jecxz
mov
pop
pop
and
rcrb
or
lds
sbb
fildll
jns
pusha
inc
jl
push
lret
bound
outsl
loop
loopne
push
adc
add
or
adc
cld
sub
adc
pop
lock
cmp
fimull
or
lods
xchg
jo
aaa
cmp
ffreep
add
dec
mov
insl
and
push
cmpsl
std
add
push
in
in
ficompl
fbstp
inc
movsb
inc
sti
or
sbb
sbb
sub
shll
mov
sbb
mov
movsl
dec
cs
or
andnps
fnclex
ja
daa
and
xchg
xchg
sbb
xchg
mov
mov
inc
mov
fmulp
loope
cld
dec
mov
jae
ss
xlat
popa
push
aad
mov
lret
int3
xchg
pop
or
mov
and
and
mov
xor
xor
mov
xor
hlt
pop
daa
outsb
add
jns
je
pop
adc
test
sub
adc
mov
nop
aas
stos
lds
cmp
movsl
push
xchg
test
scas
call
popf
fs
and
sub
fldl
scas
mov
stos
pop
xor
dec
pop
sbb
push
repnz
adc
lret
unpckhps
mov
push
loop,pn
movsb
ret
or
add
mov
push
mov
pop
mov
les
mov
imulb
aam
ds
push
test
dec
dec
pop
out
jns
bound
pop
fcomps
mov
std
sub
or
jnp
xorb
dec
loopne
loope
and
cs
pop
repz
cmp
fsts
in
xorl
fidivrs
in
scas
dec
adc
jg
mov
cmpsl
scas
mov
jp
sub
ss
mov
fpatan
push
or
gs
aaa
sub
aas
xchg
xchg
pusha
inc
pop
lcall
shl
xor
mov
sub
or
arpl
mov
hlt
cmp
xchg
cmc
push
jbe
mov
repnz
sbb
inc
and
and
inc
mov
lret
cwtl
es
mov
jmp
ds
lods
popf
in
dec
cli
sbb
sbb
sar
push
pop
scas
cmp
xor
rcl
cmpsl
into
add
jl
jmp
xchg
movsl
std
push
fstpt
movsb
inc
lret
push
xchg
xchg
in
xchg
ja
dec
sbb
cld
push
push
insb
rol
aaa
jp
in
fbld
adc
mov
call
rcll
cmp
int3
popf
jbe
loope
out
xlat
das
test
cwtl
cmpsb
lds
lods
bound
dec
test
xchg
add
lock
dec
xchg
rolb
pop
js
popf
inc
fcmove
mov
lock
mov
out
stos
hlt
aas
jp
test
jle
xchg
mov
repnz
lods
pushf
test
test
shr
imul
aaa
lahf
push
inc
cltd
daa
mov
arpl
pop
popf
clc
movsb
sub
es
sbb
out
push
popa
ljmp
mov
inc
fisubrs
mov
cs
out
sbb
add
pop
js
lods
mov
nop
dec
aam
flds
ficoml
mov
frstor
inc
psraw
fisubl
dec
fwait
bound
sahf
xchg
sub
aad
xchg
addr16
jl
divl
lods
imul
in
sbb
jecxz
xor
xor
fcomps
cltd
sub
pop
sahf
pop
sub
scas
jmp
mov
add
in
mov
loopne
xchg
icebp
adc
inc
and
in
fsubl
clc
lock
sub
nop
daa
cld
dec
cwtl
std
cltd
cwtl
arpl
imull
dec
out
int3
std
aas
inc
in
insl
sbb
mov
or
jae
xchg
in
pop
pop
negb
mov
daa
stc
jge
cmpsb
cwtl
adc
pop
shlb
add
aam
insl
loope
xor
xor
ds
cltd
mov
ds
or
popf
shl
enter
pop
loop
aas
adc
cmp
sbb
push
mov
pop
fisubs
imul
sub
push
lods
clc
pop
adc
xchg
xor
stc
cwtl
xchg
pop
xor
jno
or
cmp
ret
xchg
dec
fisttps
out
add
test
cmp
xlat
mov
xchg
clc
and
sub
mov
icebp
movsb
pop
xchg
lcall
jge
sub
sbb
mov
inc
mov
mov
outsb
inc
insb
xchg
js
shrl
shrl
xchg
fsubrp
pushf
sub
xchg
mov
lods
push
adc
pop
fwait
adc
ja
mov
inc
leave
push
subl
add
mov
cmp
push
pop
cmc
xchg
jmp
cmc
jecxz
cmp
sub
lret
sahf
jle
std
mov
pushf
dec
in
sbb
pushw
dec
in
je
xchg
mov
iret
sahf
mov
cmp
movsl
imul
pop
inc
mov
ret
lods
out
lods
inc
and
test
mov
std
negb
inc
dec
lods
jo
test
stos
and
jle
dec
pop
xchg
cmp
xchg
inc
and
bound
mov
pop
mov
or
adc
lods
inc
inc
scas
test
in
lock
pop
les
cli
jne
sbb
xchg
hlt
dec
xchg
dec
dec
dec
xchg
popa
aad
cmp
and
and
pushf
stos
mov
xchg
cli
jo
sub
addr16
mov
push
sbbl
sub
mov
out
addr16
sbb
push
xor
mov
movsl
sarl
jbe
xchg
pop
jns
adc
mov
jns
mov
lds
lret
loop
mov
mov
jle
pop
cmp
xchg
cmp
mov
mov
popa
ljmp
pop
or
and
pop
push
inc
ret
fists
jno
imul
dec
inc
xor
mov
inc
test
mov
cmp
arpl
xchg
cmp
and
lods
inc
in
cli
push
or
ret
aaa
lret
fsts
jae
mov
js
and
test
out
js
mov
fnstcw
or
insb
fbld
notb
test
cld
push
lret
xor
lar
sbb
and
mov
mov
ret
xor
cmp
mov
pop
lret
push
or
dec
mov
jmp
and
imul
sbb
sub
pop
add
push
xor
xor
insl
jnp
cld
pop
mov
rol
mov
mov
aas
mov
xlat
stos
and
ret
and
repz
imul
xlat
xchg
lods
mov
out
andb
stc
xor
out
jbe
mov
sbb
add
inc
cs
fdiv
mov
repz
push
filds
cltd
es
faddp
sub
push
inc
flds
mov
cmp
es
sbb
fwait
push
js
int
mov
mov
jnp
cmp
add
pop
lret
or
cs
sbb
aas
dec
movsl
mov
sub
push
jae
fildll
sub
scas
lds
jne
pop
mov
add
push
fidivrl
addb
xchg
pop
rorl
arpl
mov
mov
cmc
pop
not
cmp
sub
imul
xchg
cmp
or
lea
popf
out
inc
and
xchg
cs
mov
push
pop
lock
xchg
addr16
xchg
push
sbb
sub
pop
or
sub
sti
cs
aad
lea
xor
pop
adc
lcall
mov
inc
cmpsl
xchg
jne
sbb
lock
cmp
in
insb
mov
dec
repnz
inc
jnp
int
xchg
je
stos
mov
sahf
mov
dec
adc
cmp
arpl
lahf
cmp
movsl
in
cltd
cltd
xor
fwait
sbb
lock
xlat
loop
rcrl
and
sbb
mov
mov
hlt
jb
arpl
mov
mov
pop
mov
mov
inc
pop
xor
cmp
or
dec
xor
adc
das
or
cmp
ret
popa
cmp
frstor
sbb
jp
into
mov
sbb
orl
cmp
ret
or
jg
lds
cmp
mov
adc
and
xor
xlat
ljmp
lds
sub
ret
hlt
ds
movsl
adc
adc
jecxz
fcmovnbe
hlt
call
xchg
loopne
pop
movsl
push
clc
fcmovnu
push
xchg
andl
mov
dec
loopne
aad
stc
adc
dec
jo
mov
inc
push
cmpsb
adc
pop
xchg
fcoml
aas
jle
push
out
adc
lea
mov
sbb
scas
pop
pop
pop
push
jo
sbb
add
out
not
popa
adcl
in
lret
push
stos
cmc
mov
ja
adc
stos
insl
test
mov
mov
jecxz
mov
shll
push
popf
sbb
xchg
popf
xor
movsl
inc
dec
add
sbb
sub
push
cltd
adc
fmuls
push
subl
cltd
xor
add
test
mov
sub
aad
jo
cmpsb
das
mov
mov
out
test
movsl
stc
adc
inc
inc
xchg
cs
cmpsl
sbb
or
leave
je
xor
push
test
lret
cld
pop
shrl
cli
xchg
shlb
fimull
jecxz
mov
jae
dec
out
call
pusha
push
test
pop
stos
ljmp
sbb
test
or
jl
test
xchg
cmp
push
es
pop
notb
mov
xor
rcrb
dec
dec
sarb
mov
aam
loope
jo
jns
movsb
sysexit
push
xor
push
out
in
test
cltd
add
jg
cmc
add
mov
mov
sub
sahf
add
je
push
lods
pop
xchg
cmp
adc
jecxz
iret
xchg
loopne
jns
push
mov
lods
dec
xlat
call
cwtl
or
pusha
or
adc
mov
xlat
add
cwtl
rclb
out
das
mov
loop
pushf
mov
out
lock
std
xchg
pop
repnz
and
add
xchg
mov
cmpsb
sub
inc
pop
xchg
xchg
cs
scas
push
sub
lahf
movsb
pop
jo
mov
popa
mov
repnz
or
rorl
xchg
mov
out
jp
sbb
movsl
mov
mov
aaa
in
in
mov
shr
popa
iret
xor
in
enter
push
sub
inc
push
daa
mov
subl
inc
pop
dec
mov
in
dec
cmp
stos
shll
pop
mov
insl
mov
mov
out
pcmpeqb
and
mov
fdivr
out
ja
or
mov
push
pop
xchg
pop
xchg
insb
mov
repz
jns
sub
sarl
nop
jg
mov
pop
stos
mov
lahf
jb
icebp
sbb
inc
or
insl
mov
les
cmp
pop
inc
outsb
icebp
xchg
je
pop
lods
mov
inc
jl
add
xchg
add
scas
xchg
sub
sahf
icebp
cmp
cmp
sub
push
mov
loope
add
jbe
dec
fs
adc
int
notb
shr
or
xlat
sbb
cmp
fwait
cmpsl
jle
dec
pop
repz
clc
addr16
dec
ds
mov
pop
shl
in
stc
or
sbb
loop
mov
loopne
jo
sbb
cmpsb
pop
mov
test
mov
inc
addb
xor
test
push
outsl
jne
inc
inc
push
sbb
rorb
sbb
adc
jnp
dec
jl
rcrl
rcrb
xchg
lea
jge
sbb
cmc
popf
inc
imul
out
jp
xor
sarl
pop
adc
dec
outsb
xchg
call
ret
ret
sbb
je
xchg
lods
inc
inc
pop
xor
push
push
pushf
push
mov
pop
mov
push
mov
adc
out
dec
rorb
cli
xchg
sbb
fucom
rcl
inc
rcrb
loope
decb
sub
imul
xor
cmp
mov
out
andl
mov
ret
jl
repz
mov
push
or
mov
int3
cmpsb
sti
mov
jb
cltd
mov
cwtl
jge
xchg
es
or
inc
pop
cmp
pushf
stc
or
adc
dec
dec
xchg
jmp
sbb
rorb
lahf
ss
and
aas
pop
inc
mov
shlb
push
push
stos
pusha
jge
jb
jle
dec
sahf
gs
sbb
adc
mov
aad
iret
add
jle
or
jecxz
cs
add
jge
sbb
or
mov
pop
movsb
cmp
ret
daa
add
test
xorl
sar
mov
add
push
inc
push
mov
inc
and
sti
inc
push
cmp
xchg
push
lcall
enter
jno
arpl
sbb
sti
cli
cwtl
add
dec
adc
sbb
mov
mov
scas
in
aas
or
xor
pop
jne
sbb
imul
mov
push
adcb
andb
jb
std
nop
and
cltd
mov
orb
daa
push
sarb
js
sub
js
into
pop
sub
jecxz
jo
cs
jno
ds
push
jne
mull
mov
fnstsw
rolb
mov
ss
jle
aas
cmp
xor
sbbl
jecxz
js
and
mov
inc
ret
daa
inc
into
cmpsb
dec
popa
xchg
mov
insb
push
mov
mov
leave
fwait
add
push
rclb
bound
push
inc
fimull
imul
inc
outsl
insb
movsb
mov
enter
push
mov
in
xchg
mov
out
repnz
mov
lret
jecxz
js
cli
jne
inc
cmp
insb
pop
sbbb
sub
insl
test
add
and
in
dec
jg
mov
shrb
jg
inc
scas
insl
cwtl
cmp
jne
cmp
adc
mov
sub
inc
and
mov
jne
lahf
cld
pop
push
adc
fcoms
popa
xor
loopne
adc
pop
int
imul
addr16
push
mov
add
fiadds
jne
pushl
adc
outsl
clc
xchg
fbstp
cld
xchg
push
xchg
arpl
add
xor
fs
inc
in
lds
add
fidivs
out
test
in
stos
ja
arpl
mov
iret
stos
push
sub
mov
stos
dec
out
stos
lret
and
or
sbbl
fistpl
mov
mov
aam
testl
inc
andl
in
add
cmc
fidivs
jp
jecxz
lea
mov
sbb
sbb
and
test
inc
pop
out
xor
cmc
mov
dec
cmp
stc
push
sbb
imul
popf
fwait
scas
lea
aam
jle
mov
stos
fucomp
or
popf
aaa
js
repnz
movsl
ds
inc
xor
lock
mov
cmp
jne
xchg
and
lock
out
movsb
sub
test
lea
imul
mov
aaa
dec
loope
shlb
xchg
sbb
xchg
sub
in
insb
xchg
pop
jne
jne
ljmp
pop
jmp
cmc
divl
test
pop
or
and
jae
jno
xor
lods
cld
xchg
inc
loop
test
push
out
je
mov
inc
idivl
inc
add
or
pop
mov
or
popa
imul
cmc
mov
fbld
mov
int
inc
pop
out
xchg
push
jecxz
cmp
add
lcall
and
leave
inc
cmp
xchg
and
push
das
mov
xor
test
and
mov
push
push
aaa
adc
bound
adc
adc
sbb
jnp
rcl
popa
xor
in
push
inc
cs
cmc
mov
pushf
push
lods
inc
les
jno
cmpsb
mov
iret
xchg
xchg
add
mov
inc
jp
add
adc
ret
jl
and
adc
rolb
sbb
or
data16
test
sti
loop
cmp
fdivp
cmp
loope
imul
sbb
mov
xlat
pop
movsl
mov
mov
jle
jp
mov
iret
fildl
mov
sarl
dec
xorl
mov
into
dec
mov
jae
push
mov
inc
mov
cmpsl
push
sbb
popa
inc
mov
mov
inc
jne
add
or
dec
pop
sub
xchg
mov
test
inc
repnz
icebp
sub
inc
nop
jae
mov
add
mov
jmp
xor
mov
adc
xchg
sub
or
jae
push
or
mov
push
imul
mov
mov
insb
cwtl
popf
cmp
fistl
test
pop
mov
pop
cmc
xor
pop
testl
cli
sbb
lods
xor
push
je
test
ror
fsubl
push
sub
mov
dec
mov
jge
mov
push
sahf
fnsave
inc
aas
xor
cmp
push
jmp
add
faddl
xlat
das
ret
jo
push
sub
xchg
or
dec
fisttpl
adc
mov
shrb
jo
mov
iret
dec
cmp
jl
add
ss
jne
js
lods
pop
xchg
xor
int
inc
mov
push
es
adc
mov
insl
mov
dec
movsb
out
cmp
or
clc
sahf
mov
inc
stos
stos
fidivs
lds
push
icebp
mov
cmpl
mov
mov
adcl
xchg
es
cli
and
adc
pop
imul
stos
add
mov
fisubrl
sub
pop
rcl
dec
sahf
sub
mov
lahf
mov
cltd
test
pusha
std
xor
out
rcrl
add
pop
and
out
test
push
add
test
jg
mov
push
add
sbb
and
sti
mov
jp
push
cld
xchg
mov
fnstsw
add
push
sbb
add
inc
cmp
sub
out
cmpsb
loop
push
outsl
or
sub
mov
mov
js
stos
mov
adc
adc
fnstcw
and
sbb
pop
ret
and
fs
fcompl
fucomp
push
push
stos
out
cli
pop
les
daa
cwtl
pusha
js
xlat
and
push
mov
std
data16
ret
lahf
loope
dec
pop
loopne
out
lahf
sub
test
mov
push
ret
pop
jmp
or
inc
out
push
xchg
call
pop
mov
xor
repnz
stos
sub
push
mov
cmpsb
inc
out
je
adc
stos
jge
and
cld
outsb
imul
sbb
imull
mov
cli
ret
push
cs
jno
pop
inc
fcoml
call
int
int
pop
fs
pop
movsl
jae
pop
addr16
mov
jge
inc
movsb
js
dec
pushf
sbb
jo
jg
xor
fistpll
jb
orb
push
movsb
shl
aad
stos
jne
jno
jo
into
pop
xor
dec
push
xorb
jg
out
push
loop
push
test
mov
std
adc
pop
loope
lahf
jecxz
icebp
adc
call
xlat
jno
lret
lret
outsl
add
jecxz
test
mov
jns
mov
xchg
adc
pop
fistpll
mov
ja
sbb
scas
dec
pop
hlt
pop
subb
sub
shll
push
push
dec
push
push
jmp
lock
ret
mov
jbe
push
icebp
test
sub
cmpb
cmpsl
pop
pop
stos
loope
in
mov
sub
movsl
pop
clc
jg
add
lcall
sbb
insl
sbb
std
jg
cmpb
add
das
popa
adc
in
xor
dec
sub
inc
icebp
xchg
sub
rclb
push
sub
sbbb
das
mov
sub
sbb
mov
mov
pop
push
push
lods
push
sarb
fs
je
aas
push
pushf
movsb
lcall
sarl
bound
test
jne
sub
pop
sbb
mov
sti
lds
movsl
adc
sub
movsb
aad
fidivs
cmp
xor
mov
jo
jae
rorb
xchg
sub
enter
cmp
fstpl
dec
movsb
cmp
push
xor
inc
mov
lods
mov
icebp
fidivl
adc
and
es
daa
mov
out
mov
mov
mov
loop
push
pop
mov
popw
shr
jne
mov
aad
adc
bound
movsl
push
aaa
fiaddl
mov
inc
mov
fcmovne
xchg
scas
and
add
loopne
andb
mov
mov
or
ret
xlat
stos
push
sar
mov
popf
rorl
fptan
add
stos
sbbb
dec
inc
jbe
test
inc
add
xor
daa
xchg
sub
loopne
in
in
add
mov
inc
inc
cs
pushf
mov
inc
push
dec
xchg
sbb
add
jae
rcrb
je
dec
data16
jecxz
les
or
jbe
push
jg
adc
popa
add
imul
fwait
test
stos
mov
test
test
pop
inc
mov
mov
clc
loope
imul
mov
popa
add
mov
out
mov
repz
dec
xlat
xor
pop
adc
add
out
add
flds
and
sbbl
dec
lret
mov
lea
xchg
sub
xchg
pop
mov
in
push
inc
test
add
pop
andl
ret
imul
mov
jns
push
pop
mov
nop
mov
movaps
clc
mov
ss
movsl
jmp
xchg
mov
inc
imul
push
stos
sub
mov
cs
fwait
pop
fisttpll
and
xor
mov
jl
sbbl
dec
inc
clc
dec
pusha
js
sbb
insb
fcmovnb
iret
ss
push
jecxz,pt
jo
pusha
add
shrb
inc
cmp
xor
push
add
ja
mov
cmp
xchg
sub
mov
push
add
rsqrtps
aaa
cmp
jle
pop
rorb
test
xchg
mov
sbb
xor
jge
xor
sub
lahf
das
xchg
jge
into
ds
xchg
pop
stos
aaa
lret
pop
xor
fucomip
iret
das
xor
push
push
jne
xchg
push
xorl
and
inc
ret
or
std
ja
loopne
and
out
adc
scas
stos
mov
mov
mov
or
cmp
in
jnp
dec
loop
lea
sbb
insl
xchg
popa
subl
cs
sub
sahf
inc
insb
sub
inc
in
push
inc
in
cmp
xor
mov
mov
adc
inc
outsb
mov
fdivs
jae
inc
push
mov
mov
and
jl
mov
add
lret
sub
bound
push
rol
pop
add
push
mov
les
int
mov
imul
xchg
mov
mov
fstpl
adc
test
addl
or
xchg
mov
movsb
das
outsb
inc
jno
dec
fistpll
xchg
sbb
cmp
xor
mov
mov
sub
aas
push
aad
mov
and
inc
cmc
insb
sbb
cmpsb
inc
inc
lds
add
pop
mov
lcall
mov
int3
out
mov
cmp
sahf
fdivs
xor
std
lods
hlt
inc
inc
push
test
push
lods
or
sbb
and
xor
sub
lret
pop
adc
icebp
and
cmpsb
push
lods
add
jno
xchg
mov
test
adc
mov
cmp
sbb
dec
sub
loopne
aaa
jno
sahf
pop
lods
add
in
xor
sub
push
cmp
cmpsb
cmpsb
es
or
jl
jle
ss
vprotw
dec
enter
inc
cmp
aas
aad
cli
push
inc
testb
shlb
fcompl
lcall
pusha
lods
dec
stos
jo
into
out
bound
lods
ja
jge
lahf
cwtl
xor
cwtl
adc
test
or
dec
movsb
sti
fidivrl
sbb
jecxz
fwait
std
fwait
xor
mov
ljmp
sbbb
mov
gs
loope
lret
loop
rcl
inc
sbbl
andl
pop
and
rcr
xchg
mov
mov
data16
insb
aam
fisttpll
pop
cmp
lcall
dec
or
push
test
sahf
fmuls
or
ret
push
cld
cmpsl
mov
ss
adc
jle
mov
test
push
adc
inc
lds
imul
int
dec
pop
mov
ljmp
jbe
xchg
dec
enter
sbb
mov
push
mov
pop
imul
pop
sub
mov
cmp
in
cld
push
into
mov
bound
out
jp
int3
or
add
out
imul
sub
ffree
pusha
mov
xor
rorl
stc
mov
sub
out
int3
aad
cmp
xor
xlat
mov
lahf
pop
xor
iret
loop
or
loope
mov
push
adc
sbb
add
jbe
mov
test
ljmp
rcrl
push
ret
cwtl
and
jmp
inc
orl
lcall
aas
xchg
ret
mov
push
out
gs
lods
xor
dec
clc
mov
xchg
push
mov
icebp
lds
mov
lret
pop
add
aam
lcall
adc
sahf
out
sbb
cmp
mov
cs
cli
dec
adc
xchg
divl
xchg
add
sub
or
mov
ret
pop
mov
jno
mov
adc
pop
clc
fidivl
bound
mov
mov
jns
xor
and
das
push
inc
es
repnz
fidivl
sahf
mov
in
imul
push
or
aam
add
out
inc
fidivrs
aam
nop
ret
cmp
push
ret
int3
inc
int
cmpsb
mov
xchg
out
push
in
mov
fistps
lods
cli
pushf
inc
movsb
pop
cltd
addr16
or
out
sti
sub
jne
lret
daa
in
mov
push
jbe
mov
and
pop
lods
insl
add
and
push
xchg
mov
data16
int
mov
sbb
aaa
pop
push
les
push
mov
test
or
sbb
data16
fstl
push
dec
inc
cmp
enter
popa
mov
xor
inc
jne
fsubrs
adc
mov
pop
jp
loope,pn
inc
push
dec
inc
inc
fsts
into
xchg
fldt
mov
out
cli
adcl
cs
ds
dec
in
cmc
mov
sub
push
inc
movb
test
fdivrl
std
jecxz
dec
push
popf
jge
call
lahf
mov
add
sbb
or
cli
pop
or
cwtl
mov
cld
int3
test
pop
lods
mov
loope
inc
inc
lret
clc
js
sahf
mov
cltd
pop
in
test
popa
fsubr
xchg
cmp
dec
andl
sbb
xchg
sub
or
js
adc
notl
mov
sarl
mov
push
scas
jge
adc
mov
fists
imul
nop
sub
divb
push
jle
or
pop
pop
dec
or
jl
xchg
outsb
xor
cmovge
xor
cmp
jb,pt
fisttpl
inc
mov
test
jmp
xor
fdiv
lret
mov
lahf
dec
scas
jno
mov
sbb
xor
in
mov
popa
jg
sbb
pop
and
xchg
cmp
xchg
mov
hlt
cmp
out
cmpsb
lock
dec
or
pushf
scas
popf
sbb
push
fidivl
or
fnstenv
pusha
inc
jns
dec
ja
jo
and
nop
mov
insb
push
lods
adc
pop
ret
es
ftst
cli
jbe
mov
es
push
leave
jle
inc
push
out
pop
jp
js
xchg
cld
pop
push
xchg
push
xchg
ret
xor
data16
xlat
sbb
push
mov
sarb
adc
mov
test
dec
push
call
lcall
stc
or
jo
cltd
rcr
jle
and
adc
cmp
cmpsb
int3
aas
xor
test
mov
js
mov
xchg
push
xor
or
sbb
insl
and
sub
mov
mov
inc
fbld
clc
mov
xor
cmc
push
push
lea
js
pop
iret
scas
mov
mov
stos
lret
cli
decl
dec
or
mov
and
xchg
dec
xlat
pusha
mov
fsubrl
push
or
movsb
aam
call
jecxz
cltd
dec
dec
loope
push
xchg
adc
in
add
pop
mov
divb
inc
pop
jb
jl
mov
ja
ds
sbb
leave
pop
or
push
test
das
cltd
mov
shufps
mov
push
ficoms
fs
cwtl
dec
sti
shll
fnstsw
es
xchg
jmp
pop
add
push
pushf
lcall
jae
gs
adc
cmc
xchg
das
push
xchg
jle
test
aaa
push
loopne
mov
cwtl
sbb
sub
push
aas
ret
fbld
adc
mov
sbb
fidivl
sti
call
sub
xchg
arpl
ret
loopne
movsb
lds
xchg
jge
inc
xchg
sub
das
data16
das
test
and
inc
je
aad
and
fistl
scas
mov
lret
dec
jl
rcrb
aaa
sti
pushf
or
shll
xor
mov
addps
sar
dec
loopne
dec
daa
or
cs
je
movzbl
dec
test
jp
xor
xchg
ficoms
rol
icebp
insb
rorl
push
and
or
fisttpl
loopne
incl
pop
cld
push
and
dec
aam
adcb
xchg
scas
inc
xchg
repnz
nop
dec
xor
pop
jg
popa
cmp
sbb
cltd
pop
stos
pop
cmc
fsubl
ret
fistpll
adc
outsb
sbb
std
test
in
bound
lods
aaa
push
mov
jbe
ljmp
loop
pop
cmp
scas
xchg
adc
bnd
xchg
out
out
pop
xor
push
jb
or
out
sarl
pop
fbld
aad
in
add
lahf
inc
and
mov
mov
fcmovb
cmp
testb
mov
xchg
mov
imul
push
testb
dec
gs
jp
xchg
jbe
jae
lods
dec
push
sub
cs
fcompl
sbbl
jmp
or
jge
push
and
cmpsb
icebp
mov
daa
outsl
mov
testl
movsb
aad
add
das
bswap
enter
mov
testb
ficoms
xchg
add
xchg
mov
xorb
xor
mov
cltd
std
mov
mov
adc
push
push
mov
int3
xor
and
lods
imul
and
add
or
es
sub
add
fbstp
mov
push
lret
mov
js
test
addr16
xchg
aas
std
hlt
pop
out
xchg
mov
cwtl
add
sub
pop
xrelease
inc
push
aaa
push
addr16
stc
and
sbb
push
inc
adcb
fldcw
mov
sub
mov
outsb
xchg
lods
lahf
push
fsubr
ret
mov
push
jecxz
jo
lcall
lock
push
fsubrs
or
imul
fldt
push
clc
cltd
pop
out
or
jo
push
stos
jbe
js
push
cmp
and
adcl
push
push
inc
aad
push
jno
icebp
fs
inc
push
jns
and
ja
lea
push
movsl
cs
jmp
or
sub
jae
mov
xchg
aad
jmp
push
pop
call
int
gs
sti
nop
xchg
das
imul
stos
imul
inc
push
icebp
and
mov
sbb
daa
or
adc
jp
mov
dec
lea
in
das
inc
and
push
repnz
jl
out
scas
push
std
jo
inc
jne
inc
out
fildll
mov
inc
xlat
xor
data16
pop
sahf
mov
testb
jge
fucomip
jbe
imul
pop
push
in
sub
dec
jne
test
lret
add
xor
push
jno
inc
arpl
int
dec
loop
adc
repz
imul
outsl
std
ja
xor
jns
add
xor
orb
or
cmp
in
cmp
add
jle
xor
loope
fidivl
sbb
push
aas
sbb
jnp
xchg
stos
mov
out
jle
fadd
psrad
lret
or
sub
adc
inc
imul
cs
xchg
in
push
cmp
aas
adc
sarl
xchg
push
xlat
sbb
insb
sbb
dec
jns
movsb
imul
repz
mov
les
ss
pop
fs
cmpsb
movsb
incb
pop
shr
and
popf
dec
lcall
adc
adc
or
dec
lahf
mov
shrb
nop
lcall
fwait
nop
push
push
dec
mov
iret
pop
lea
or
sbb
push
lods
pop
jp
add
push
xchg
ljmp
pop
pop
shl
es
shrl
into
pop
mov
mov
leave
pusha
jp
pop
movsl
into
dec
out
repnz
enter
scas
mov
fsubr
add
into
fcoms
xchg
adc
dec
std
jmp
cmpsb
je
stos
cs
leave
int3
cmp
popf
push
test
gs
xchg
rcrl
jnp
fidivrs
cltd
je
popa
int
xchg
xlat
mov
pusha
fwait
mov
hlt
aaa
clc
and
push
mov
iret
aaa
gs
lock
pop
push
mov
xchg
stos
xor
in
push
fwait
lods
enter
rorl
rorb
in
sub
mov
push
xchg
icebp
insb
or
push
add
mov
add
mov
pop
cmp
jns
rep
es
mov
inc
mov
push
bound
xlat
push
xchg
xor
rcr
fidivrs
mov
int
push
mov
icebp
xchg
sbb
lret
mov
lret
push
sub
add
outsb
xor
test
inc
jbe
or
inc
mov
scas
adc
cmpsb
lahf
pop
subl
add
call
push
call
jge
into
pop
adc
xor
dec
pop
jle
lret
aad
bound
fdivrl
cmp
adc
sbb
repz
shlb
shrb
jg
mov
nop
mov
pop
dec
dec
xchg
dec
pop
les
in
imul
inc
icebp
jnp
pop
mov
or
sti
insb
mov
push
push
cmp
sub
loopne
xor
in
int
icebp
dec
bound
pop
mov
pop
jge
inc
cmpb
test
shll
ss
hlt
in
test
addb
xchg
push
push
mov
scas
jnp
xor
pop
add
dec
daa
out
test
cmc
out
xor
xchg
adc
call
ret
mov
insl
in
add
out
jge
xchg
jg
popf
and
inc
arpl
movb
xor
or
dec
add
sub
pop
ds
or
sbb
xor
push
inc
or
xchg
or
inc
loop
arpl
push
iret
xor
jmp
mov
outsl
mov
add
xchg
mov
push
dec
sub
out
or
adc
bswap
and
xchg
xchg
data16
pusha
popa
or
sbb
pop
fucomip
mov
xor
imul
test
push
inc
sub
push
std
lret
mov
scas
add
nop
sub
cmp
push
in
insl
out
mov
enter
mov
mov
cltd
les
cmp
mov
sahf
and
inc
or
call
int
xor
xchg
stc
xchg
cltd
and
xchg
xchg
inc
inc
incb
mov
and
sub
and
xchg
repz
out
adc
fadds
aad
movsb
aaa
pop
imulb
lea
movsl
divb
popf
mov
test
adc
ret
jo
and
or
shll
rclb
add
test
cmp
ja
imulb
stc
aam
std
mov
das
enter
popf
jb
xchg
stos
es
flds
jns
sbb
mov
pusha
int
out
cmp
daa
lret
mov
push
jmp
mov
jno
insb
out
mov
inc
push
push
mov
into
filds
push
adc
cmp
test
xchg
cmp
imul
mov
xor
jo
inc
aas
pop
addr16
mov
mov
sbb
jp
js
inc
fs
xor
pop
dec
sbb
scas
mov
arpl
movsb
mov
test
sub
jge
cs
sbb
dec
or
cmp
mov
jmp
sti
jge
xchg
adc
test
pop
outsl
lock
xor
sub
jno
mov
and
fdivl
mov
xchg
pop
call
int
adcl
push
js
jne
lea
cmp
insl
xchg
notl
cmpsl
pop
xchg
sbbl
xor
mov
sub
dec
mov
sbb
add
sti
jg
inc
ds
pop
in
inc
pop
in
cmpsb
fwait
xor
and
mov
inc
fiaddl
xchg
inc
xor
xor
arpl
or
adcl
lock
dec
mov
add
out
push
pop
jnp
test
sub
and
mov
aam
mov
rcll
lods
shrb
jns
add
insb
mov
lret
cmpsl
in
fisubl
shrl
lods
in
push
pop
out
jmp
lcall
dec
pop
ret
rcll
loopne
jge
mov
popf
sbb
fisubs
sbb
sbb
inc
iret
pop
and
sti
jp
cltd
loopne
cmp
pop
cmp
sub
psrlq
cmp
out
sbb
stos
cwtl
pop
inc
pop
stos
fnsave
mov
sub
imull
jnp
jecxz
adc
test
mov
dec
jecxz
sar
repz
in
push
xchg
imul
bound
test
pop
stos
enter
jge
push
and
push
cmp
pop
xchg
mov
push
and
testl
insb
xchg
inc
pop
xchg
cld
dec
test
insb
mov
sbb
add
repnz
mov
push
mov
pop
into
cmp
jecxz
xor
mov
xchg
sbb
andl
xchg
daa
add
loope
sbb
push
add
mov
out
cmp
add
clc
sbb
dec
push
popf
mov
or
or
dec
movsl
daa
lret
orl
sbb
fsubl
and
gs
popa
sahf
faddl
sahf
and
xor
adc
mov
push
repnz
lea
js
imul
cmc
sbb
sub
inc
iret
inc
std
int3
xchg
test
push
daa
inc
adc
mov
add
insb
jbe
lds
xchg
pop
xlat
cmpsl
dec
arpl
push
dec
or
jbe
icebp
ja
xor
aad
mov
pop
outsb
fstpl
cmpsb
mov
test
inc
push
adc
loopne
cmc
push
add
jbe
sbb
xlat
shr
nop
dec
jne
out
cmpsb
jns
pop
pop
imul
loop
rcrl
test
dec
loope
sbb
push
addr16
popf
cmp
outsb
mov
outsb
and
lahf
pusha
pop
mov
das
icebp
arpl
xchg
mov
xor
cmp
ret
sub
mov
sbb
mov
in
xor
je,pt
and
dec
inc
push
cmp
jae
gs
push
jg
test
mov
out
pop
xor
insb
popf
push
xchg
call
dec
icebp
sbb
xchg
pop
cmp
bound
xchg
cmp
jecxz
adc
cltd
xchg
gs
push
cmove
push
dec
push
sub
leave
cli
gs
mov
inc
inc
test
or
in
push
in
sbb
jge
mov
aam
outsl
mov
and
adc
or
xor
pusha
ficoml
jecxz
les
sub
dec
pop
popa
hlt
adc
mov
add
stos
and
push
or
aad
dec
sub
cmp
mov
loopne
and
mov
add
xor
cmc
adc
xchg
sbb
mov
call
mov
inc
push
fsubrs
lret
mov
xlat
cmpsb
jge
loope
sbb
ret
daa
dec
lods
adc
xor
push
inc
stos
cmp
or
test
jmp
popl
das
xor
sti
orl
loop
negl
add
mov
pop
cvttps2pi
aad
mov
out
in
fnstcw
push
or
jg
dec
adc
pop
loopne
jae
push
sub
sub
jb
cmp
jae
out
dec
scas
push
add
enter
jbe
mov
in
push
sub
push
test
xchg
fadd
ds
pop
out
push
aam
mov
into
inc
push
add
sub
sub
arpl
sub
aas
enter
xchg
inc
sub
or
sarl
aaa
adc
cmpsb
fstps
out
add
cmp
push
xor
aas
adc
jns
and
add
jecxz
lods
push
jbe
cld
push
jo
cmp
jbe
mov
xchg
out
out
mov
mov
sarl
mov
add
cmpsl
ret
add
call
mov
scas
sbb
mov
mov
fistpl
insl
cmc
jns
jae
aas
mov
jg
jns
push
mov
cmpsl
fs
lods
jae
xor
sti
popa
sub
ss
xor
xor
data16
mov
sub
pop
xchg
sub
push
mov
push
xlat
mov
pop
and
inc
in
cltd
sub
outsb
push
shll
out
int3
sub
movsb
sti
push
scas
cli
iret
fbstp
mov
push
ljmp
jno
xchg
inc
outsb
sbb
or
dec
roll
insb
and
mov
pop
mov
cmp
lods
sahf
mov
outsb
adc
insl
ucomiss
push
jmp
lods
ficompl
mov
mov
mov
or
jbe
and
test
xchg
aam
pop
je
aad
xlat
push
call
or
jg
and
cmp
hlt
mov
aam
in
adc
inc
cmpsl
addr16
pop
cwtl
shlb
pusha
mov
lret
hlt
stc
scas
call
sbb
and
insb
mov
enter
stos
es
ret
xor
mov
das
into
mov
sub
mov
xor
xor
inc
pop
dec
add
push
cwtl
js
mov
in
addb
loope
repz
fidivrl
scas
dec
mov
lret
out
and
add
js
popa
scas
mov
inc
mov
sbb
notb
jg
das
xor
sahf
xor
cmp
sahf
clc
mov
les
or
cmp
or
fbstp
jl
mov
sbb
or
jle
scas
imul
sbbb
fsubr
icebp
dec
xchg
and
inc
inc
out
clc
xchg
sub
test
sub
cmp
dec
fidivl
out
in
aad
mov
adc
fistpl
into
sbb
pusha
pop
mov
jne
and
pushw
add
js
sbb
jbe
out
aam
xor
push
int3
addl
adc
ljmp
aam
aaa
jbe
adc
mov
and
mov
xchg
imul
add
movsl
in
jnp
jg
xor
bound
sbb
mov
sub
push
scas
in
sub
and
sbb
mov
jb
xor
pop
push
push
adc
and
lea
cmp
flds
pop
ret
repz
xchg
in
xrelease
jmp
loop
sbb
mov
inc
movsb
mov
push
imull
pop
mov
stc
lods
add
cwtl
test
and
and
test
jmp
stc
pushf
nop
pop
xor
mov
aas
adc
sahf
cmpsb
aad
mov
cmc
es
gs
dec
add
mov
dec
jno
or
jnp
movsl
mov
dec
adc
movsl
jae
fnsave
pushf
push
fcoml
loopne
test
repz
mov
xchg
mov
aam
scas
sub
notb
xor
xor
fnstcw
stc
pop
shrb
dec
pop
add
and
mov
adc
and
adc
imul
xchg
mov
push
adc
in
loopne
subb
push
clc
push
int
repnz
mov
push
adc
cmp
adc
popl
cltd
sarb
sub
hlt
or
cmp
scas
rcr
and
rorb
ret
aas
xor
jmp
jg
or
push
fidivrs
adc
and
xchg
sub
enter
outsb
enter
mov
mov
shll
add
sbb
cmpsl
pop
and
cmc
pop
xlat
sub
mov
dec
pop
pop
mov
cltd
add
add
and
notb
push
push
sbb
sub
mov
andb
test
fs
test
sbb
push
mov
frstor
scas
in
test
insl
lock
sbb
movsb
mov
pop
ljmp
imul
add
jo
mov
jb
shlb
pop
je
mov
je
fst
xor
popf
mov
enter
shl
mov
fisubrl
and
pop
sbb
xor
xorl
xbegin
dec
sbb
pop
xchg
mov
repnz
mov
mov
ja
cs
lret
fidivl
push
in
aam
jb
adc
out
mov
mov
out
aam
mov
gs
gs
cmp
lock
jbe
dec
inc
fs
pop
dec
dec
push
les
dec
rol
push
das
cs
decb
lock
enterw
xchg
push
adc
popa
xor
dec
xchg
add
push
stos
adc
popf
adcb
jecxz
push
lds
aas
scas
mov
push
mov
sub
adc
mov
out
pop
jnp
in
lods
adc
outsb
jnp
hlt
jno
test
cmpl
jmp
shlb
mov
xchg
jp
dec
cmp
leave
xchg
ret
in
test
es
aas
fldl
into
xchg
jp
add
ficoml
out
call
call
ljmp
addr16
inc
stos
dec
add
pop
add
data16
fbstp
sbb
std
inc
nop
jnp
enter
sbb
bt
jp
ss
fnsave
or
shrl
iret
mov
cmp
out
xchg
imulb
sub
push
in
testl
loop
cmc
pop
hlt
sbb
adc
cmp
cli
sub
aaa
divb
push
movsb
pop
inc
fimuls
ss
xor
gs
xor
and
or
mov
jne
push
daa
cmc
dec
imul
mov
sbb
lods
pop
stc
nop
xchg
lret
and
movsb
pop
in
add
je
out
jo
dec
pop
movsb
mov
popf
aad
xchg
das
xchg
jno
xor
jnp
iret
jns
pushf
outsl
lods
dec
leave
fs
mov
sbb
daa
xor
xor
cmp
aaa
lods
mov
xchg
std
das
loop
lea
clc
sahf
pushf
iret
push
dec
mov
jge
mov
mov
cmc
push
sub
mov
in
rolb
loope
lods
imul
ret
dec
pop
cmc
cwtl
rcll
mov
fldt
xor
or
push
push
outsb
ds
outsb
test
adcl
pop
mov
mov
dec
cwtl
test
repnz
cld
nop
cmp
test
jb
out
push
call
into
cld
xchg
lret
in
adc
xor
cmp
and
and
movsb
movsb
inc
cmpsl
stc
mov
mov
adc
mov
dec
fs
xchg
imul
dec
divl
dec
fistpll
lds
push
fldcw
lods
pop
loope
cmp
mov
testb
aad
shrl
scas
pop
mov
icebp
ds
sti
xchg
xchg
adc
inc
pop
sbb
sti
scas
mov
test
fidivrl
test
out
cmpsb
jb
mov
shrl
sbb
ljmp
mov
mov
dec
mov
pop
aas
flds
push
dec
mov
cmp
shlb
lods
sti
inc
xlat
push
out
xchg
and
inc
dec
or
sub
inc
dec
and
xchg
daa
ret
xlat
xlat
sub
xchg
push
loope
pop
jnp
movsl
loopne
jnp
scas
dec
push
ljmp
pop
pusha
inc
in
xlat
icebp
xor
aas
mov
jmp
mov
aad
flds
outsb
sbb
and
loopne
mov
mov
addps
es
push
loopne
shl
daa
pop
pusha
mov
dec
mov
mov
movl
xchg
out
push
jne
decb
rorl
jno
int
ror
insl
inc
xchg
add
jg
int
fldcw
add
dec
mov
hlt
dec
lock
out
stos
dec
mov
faddl
mov
std
cmp
cmc
lock
jmp
mov
mov
shll
clc
shll
xchg
mov
push
in
insb
xor
xor
inc
jb
xchg
jp
insl
dec
xor
in
inc
lahf
lret
xorl
add
xchg
fiadds
mov
lret
rcrl
cs
xor
les
adc
xchg
sub
jge
dec
mov
inc
cltd
ret
fs
dec
pushl
xor
aas
nop
leave
call
add
je
cmp
and
call
lods
in
icebp
dec
mov
scas
and
into
pop
push
mov
test
and
mov
cmpsl
ret
jae
and
lds
popf
stc
pop
pop
rcrl
je
mov
mov
outsb
sti
push
cmp
nop
subb
inc
pop
lds
xor
or
test
imul
nop
xchg
ds
repz
add
test
popa
loope
inc
ljmp
fcmove
out
add
xor
inc
pop
insb
dec
test
inc
xchg
jecxz
xlat
adc
ljmp
or
pop
inc
out
les
dec
add
cmp
push
mov
call
dec
dec
scas
mov
mov
test
std
cmpsb
arpl
icebp
lcall
mov
and
popa
insl
push
push
aad
mov
loope
andl
in
mov
mov
dec
popa
jp
out
adc
pop
inc
bound
pop
pop
mov
sarb
and
mov
mov
jmp
mov
mov
adc
adc
cmpl
xchg
xor
subl
adc
dec
cwtl
stos
dec
insb
pusha
cld
and
in
aas
jp
sbbl
mov
leave
inc
std
fcompl
clc
ror
fld
cmpsb
movsl
or
shl
cltd
and
xor
mov
andl
andl
jmp
jmp
aaa
cmpsb
inc
mov
push
adc
insl
loopne
mov
jg
data16
mov
jle
mov
int
mov
call
das
mov
inc
sub
adc
scas
sub
idivb
rorb
jge
jecxz
js
cmp
mov
subl
cvtps2pd
adc
xlat
lds
loope
sbb
shlb
xchg
adc
scas
test
add
adc
and
inc
push
or
ljmp
mov
jb
insb
stc
push
sahf
dec
adc
cmp
cmp
mov
movsb
or
mov
mov
push
mov
dec
xor
in
jecxz
faddl
jo
sbb
jbe
es
mov
push
loope
sbb
push
sub
lock
inc
stos
les
jne
jg
aas
xor
leave
arpl
inc
add
mov
cmc
stos
xchg
jg
out
mov
int
hlt
ljmp
sti
xchg
sub
out
pop
in
dec
pop
in
in
xchg
cs
scas
divb
dec
jecxz
inc
rorw
push
jge
pop
xor
inc
popf
jo
repnz
and
icebp
jecxz
cs
adc
xchg
cld
lcall
push
out
adc
jl
ljmp
or
xchg
push
xlat
jbe
pop
mov
push
add
aas
mov
bound
lods
cltd
cmp
into
pop
mov
jecxz
loopne
push
push
sub
test
aad
dec
add
xchg
mov
xor
int3
mov
add
and
mul
push
fsubl
out
xchg
cmc
sbb
mov
or
daa
mov
std
push
shrb
fs
pop
sub
add
into
cs
dec
lret
pushf
int3
mov
lods
inc
das
jo
pop
inc
jns
ss
sub
sub
mov
mov
lahf
in
xchg
sbb
xchg
lea
sti
stos
sbb
cmpsl
aam
cmp
rol
cmp
inc
out
and
ret
mov
xor
push
pop
jl
mov
sub
iret
jecxz
dec
and
inc
adc
mov
mov
repz
mov
popf
dec
out
fcmovbe
out
ret
hlt
loopne
fistps
add
sub
pushf
inc
push
dec
scas
jns
and
xor
add
insl
sub
xchg
jg
lret
xor
pop
std
xchg
pop
sbb
pop
pop
bound
lcall
pop
outsb
mov
jmp
stc
dec
mov
mov
insl
shrl
xchg
cld
stos
cmpsb
std
or
mov
xchg
dec
cmpsb
fildll
js
jmp
shr
jnp
imul
inc
mov
sti
jb
in
cld
rcll
xchg
dec
mov
out
push
mov
in
inc
scas
mov
push
gs
xchg
pop
jne
outsb
sub
call
movsl
imul
outsb
jmp
push
das
xchg
fs
add
pcmpeqd
je
push
in
mov
push
jbe
mov
xchg
xlat
ret
sbb
stc
cli
mov
or
mov
jne
mov
insb
cltd
mov
mov
ljmp
icebp
pop
cltd
and
xchg
std
add
mov
xor
ja
lds
fsubl
ss
dec
fwait
xchg
and
in
inc
push
mov
ficoml
imul
insl
stos
sub
fisttpl
fistpl
pop
ljmp
push
mov
jp
imul
sbb
rcrb
and
xchg
mov
bnd
into
add
enter
rcr
mov
popa
add
daa
mov
mov
pop
mov
push
cwtl
stos
xchg
into
enter
dec
add
mov
cs
mov
loop
add
nop
mov
fxch
adc
out
icebp
adc
dec
test
dec
in
mov
aam
dec
bound
movsb
cmp
test
push
or
mov
mov
sub
xlat
inc
dec
jl
inc
lock
outsl
pop
xchg
xchg
lcall
ret
fistpl
fwait
gs
pop
fucom
adc
aad
rorl
push
stos
insb
jge
and
cmp
sub
pop
xor
push
repz
gs
pop
lahf
add
add
pop
push
imul
xor
push
jge
je
inc
and
mov
inc
mov
fisttpl
fbld
jecxz
jns
das
dec
repnz
xchg
xchg
pop
cmp
jno
aaa
mov
add
nop
stos
mov
xchg
test
sbb
xor
ficoms
pop
dec
loop
insb
fadds
xchg
in
inc
test
cli
adc
sbb
jno
jbe
dec
cmpsl
push
dec
fistps
call
cmp
loope
insb
jmp
stos
pop
xor
aam
jmp
adc
sbb
cmp
clc
outsb
pop
out
lea
stc
mov
gs
pop
shll
jne
mov
xchg
out
sbb
add
or
jbe
adc
fisttpl
and
pop
jg
data16
push
imul
sbb
pop
inc
sbb
pushl
pusha
sub
jmp
out
repz
sub
nop
xchg
sub
or
mov
arpl
stc
xchg
jo
cmpsb
bound
pop
int
dec
xor
in
xor
sub
adc
sbb
arpl
stos
xchg
bound
mov
loopne
inc
push
rep
movsl
inc
and
mov
dec
lret
xor
into
xchg
sti
cs
aas
fmuls
daa
test
ja
mov
mov
lcall
add
mov
jbe
ffreep
les
or
jmp
jne
and
inc
push
mov
push
cwtl
mov
in
and
std
hlt
or
mov
dec
in
fwait
push
loopne
in
int
loopne
mov
imul
ret
and
inc
insl
jg
stos
dec
ss
inc
lods
aas
cli
fcomip
adc
ljmp
adc
push
pop
and
mov
mov
lret
in
jo
mov
mov
shl
cmp
in
pop
xor
cltd
inc
cmp
xchg
pusha
fistl
or
and
fsubs
daa
cmp
or
cmp
pop
sahf
cmc
xchg
cli
mov
les
shlb
or
and
mov
jg
mov
adc
jmp
jnp
enter
outsb
sub
pop
repz
or
mov
lds
adc
hlt
loop
jge
ret
lretw
loopne
add
cmpsl
mov
cmp
pop
std
pop
ss
or
cs
rcrl
scas
push
mov
test
push
inc
dec
cmp
inc
pop
out
jae
testl
aam
pop
jge
mov
stos
add
aam
xor
lahf
popf
push
push
inc
sbb
xor
push
jp
jge
sub
and
into
les
inc
rcl
xchg
loope
inc
cltd
andl
negb
inc
lea
testl
shrl
shlb
scas
add
sub
outsl
push
fdivrl
and
push
jl
add
mov
sub
lret
lahf
jns
or
or
push
push
scas
push
and
pop
mov
iret
scas
push
or
mov
or
cltd
stos
insb
xchg
add
mov
cmp
les
ret
cs
call
xchg
sub
movsl
fcmovu
or
bound
push
imul
stc
lds
or
sbb
push
out
mov
pop
test
pop
and
fistps
cmp
sbb
xchg
xor
test
or
jbe
fsubrl
fwait
imul
cmp
jecxz
mov
push
stos
cmp
push
testl
mov
cltd
inc
sbb
sub
or
ds
jo
mov
dec
dec
repnz
or
jne
clc
mov
stos
push
adc
and
shrb
dec
aad
lds
or
ss
frstor
popf
lret
shlb
or
fsubr
pop
aaa
or
std
push
cmp
test
jb
lds
pusha
push
rcl
or
push
bnd
fs
lods
add
lea
icebp
das
jbe
mov
mov
pop
jge
mov
inc
bound
bound
add
mov
cmc
add
jle
and
mov
cli
test
ror
push
gs
out
bound
iret
jae
cwtl
pusha
jmp
inc
jmp
shr
in
jge
xor
push
push
mov
xchg
mov
cltd
lcall
pop
imul
push
mov
mov
jno
scas
nop
sbb
mov
addr16
sbb
sar
jns
mov
or
sbb
popa
cmp
add
stos
pop
mov
pop
xchg
push
addr16
push
mov
cmp
icebp
jnp
mov
je
jno
xor
push
jle
mov
push
rorb
xchg
aas
mov
inc
int
sbb
add
inc
inc
pause
aam
mov
jno
push
jae
out
xchg
adcl
mov
ljmp
in
xchg
jge
cmp
cmp
fcmovnb
xor
mov
out
mov
mov
jl
adc
pop
adc
pop
mov
push
sarl
fdivr
jbe
xor
iret
xchg
mulb
out
lcall
sbb
push
sbb
jno
sub
lahf
jmp
popf
jo
fucomip
test
mov
xor
or
ljmp
call
xor
repnz
mov
mov
sub
dec
cld
outsl
cmc
into
sbbb
push
xlat
sub
jno
jno
adc
sbb
cmc
mov
jno
arpl
jg
lods
fsubl
xchg
inc
push
out
mov
lret
and
push
dec
sub
aad
jge
lret
pop
out
xchg
sahf
adc
fldenv
dec
pusha
fildl
pushf
imul
mov
dec
mov
xor
inc
lahf
pop
add
mov
test
mov
mov
fwait
aas
add
push
inc
subb
or
popa
pop
jp
flds
push
cmp
adc
ja
call
outsb
adc
xor
push
mov
daa
jl
xlat
pop
inc
mov
cmp
lds
mov
xor
dec
mov
in
jmp
ds
jno
pop
es
mov
jp
pop
cmp
ja
das
das
in
pop
aaa
adc
push
imul
xlat
movsb
jno
loope
jo
sub
push
cmpsl
cmp
je
dec
dec
icebp
inc
jg
in
xchg
cmp
push
sbb
andb
pop
lock
push
fsubr
ret
xchg
jmp
or
inc
mov
xchg
inc
xor
rorl
xchg
or
test
in
fistl
jo
scas
inc
fidivrs
mulb
pop
jns
xor
in
add
fldl
jl
into
ljmp
or
test
inc
stc
or
mov
fwait
imul
adcl
add
sbb
mov
ret
sbbl
aad
add
bound
jecxz
mov
loop
cwtl
and
or
lret
rorl
lods
jo
sahf
pop
xor
inc
mov
data16
dec
jns
xlat
add
sbb
sti
lea
pop
mov
cwtl
fists
dec
xchg
or
rclb
aas
push
or
mov
push
cwtl
jbe
fnstenv
or
mov
sbb
dec
xchg
pusha
add
mov
xchg
shlb
pop
pusha
cmp
xor
es
imul
repz
inc
jmp
std
jmp
mov
fs
adc
cmp
jns
mov
repz
pop
jns
mov
jns
cmp
cld
or
pushf
cli
cltd
push
pop
shr
stos
inc
sbb
add
push
nop
stos
inc
lret
rorl
dec
daa
test
gs
movsl
cmp
sahf
sahf
fisttpll
dec
xlat
cwtl
cmp
pop
in
pop
in
xchg
push
push
inc
pop
insl
inc
inc
sahf
push
sbb
jl
cmp
mov
scas
loope
xchg
cmp
ret
mov
lcall
pop
adc
sbb
lds
add
not
je
inc
xchg
jnp
jns
sbb
std
dec
pop
mov
jb
jle
ds
push
aad
testb
xchg
cmp
je
or
ss
push
xchg
inc
nop
rorb
les
push
cld
push
xchg
ret
sarl
mov
out
mov
push
cmp
sbb
mov
fst
xor
clc
mov
fsubs
fidivrl
mov
rorl
repnz
push
popf
test
int3
std
test
mov
mov
add
fisubrs
cltd
mov
add
xchg
dec
push
fisttpll
test
add
cmp
inc
xlat
cwtl
or
jge
mov
jge
and
xchg
into
notl
xor
stos
or
movsl
jge
iret
fcoml
push
inc
dec
xor
inc
lcall
mov
add
dec
dec
fsub
inc
or
mov
inc
mov
pop
push
ret
jge
rcrl
sub
or
push
or
je
lds
xchg
xchg
lods
es
cmp
mov
push
cltd
into
mov
push
and
lock
pop
fs
fs
cmp
shlb
or
push
js
dec
adc
rorl
xchg
jnp
in
push
adc
fisttpll
xor
adc
dec
aaa
pop
out
test
scas
repnz
add
iret
std
push
repz
mov
aad
scas
fstpt
mov
cmp
mov
lods
mov
test
out
mov
hlt
adc
xor
and
subb
pusha
or
fstl
test
in
add
xor
lods
pushf
mov
pop
xchg
add
shlb
incb
testl
insl
xchg
push
outsb
sbbl
mov
and
xchg
push
push
sar
insl
sub
test
mov
mov
fs
mov
pop
sub
fwait
iret
jp
sub
add
repnz
xchg
inc
fdivl
popa
rcrb
fs
push
cmpsb
enter
lds
jmp
fs
jl
fs
cltd
sub
stos
push
jbe
adc
push
inc
jne
jbe
fidivl
push
addl
mov
jne
adc
ss
mov
mov
mov
ret
mov
lret
xlat
mov
ds
sub
push
mov
dec
pop
cmpsl
lea
cwtl
xchg
iret
icebp
enter
and
mov
enter
inc
push
pop
sub
int3
imul
leave
jne
insl
aad
xchg
dec
mov
jp
add
testl
test
stos
pop
xor
add
mov
cld
idivl
hlt
test
pop
pop
sahf
aaa
in
inc
ret
movb
jmp
add
mov
dec
es
jne
inc
leave
add
fstl
or
or
add
enter
aad
adcl
dec
in
pop
js
mov
push
popf
leave
fcompl
xor
jns
inc
fscale
xchg
fsubrp
iret
fstp
jae
in
xor
push
cmp
dec
or
mov
loope
lock
aad
into
push
xor
jns
adc
sub
cmp
je
sub
std
rolb
or
add
rclb
xor
out
jmp
xchg
sbbl
filds
aaa
ss
pop
rorb
mov
sarb
lods
sub
jnp
lods
mov
test
into
xchg
push
xor
push
imul
into
loop
cmpsl
ds
scas
cmp
int3
lds
inc
inc
xchg
jecxz
dec
dec
jne
std
imul
dec
and
loop
sbb
push
push
mov
arpl
xchg
adc
mov
or
inc
data16
push
or
mov
pusha
testb
inc
adc
es
test
xchg
shlb
das
adc
sbb
pop
dec
daa
sahf
or
sbb
icebp
dec
movsl
jecxz
jl
or
or
cmpb
or
lods
sbb
shll
cmp
inc
pusha
xorb
jno
sbb
inc
push
fs
adc
xchg
jge
dec
scas
scas
shrb
outsl
into
push
out
imul
shrl
fsubs
push
cmpsb
xchg
mov
cmp
mov
mov
movsb
adc
adc
xchg
fs
cmp
sub
insl
cs
sub
sbb
add
ret
cmpsl
xor
pop
mov
mov
lret
mov
mov
ret
paddd
aad
lret
pop
jecxz
sub
int
push
andb
add
insb
lods
sti
test
adc
sbb
dec
xor
sbb
mov
out
ljmp
shll
fnstsw
inc
sbb
push
sbb
or
rcl
push
add
scas
stos
inc
loopne
sbb
in
adcl
pushf
jmp
rolb
mov
test
and
inc
dec
xor
push
dec
pop
lfs
push
lret
or
xchg
and
inc
push
addr16
xlat
sbb
inc
pop
addb
mov
loopne
adcb
lods
repnz
sub
test
scas
push
cmpsl
leave
pop
in
or
push
cli
mov
pop
negl
add
mov
loopne
push
push
cs
xor
mov
mov
xchg
sarb
add
cltd
dec
iret
mov
es
xchg
pop
mov
into
sub
movsl
pop
inc
xlat
mov
clc
sub
sub
cmp
push
dec
mov
inc
fists
shl
lret
lock
push
montmul
cmpsb
test
mov
rcll
sub
dec
dec
es
mov
lret
xchg
xor
cmp
fisttpl
xchg
inc
stos
mov
call
fnstsw
jecxz
jo
inc
into
aam
imul
repnz
dec
ret
and
cld
xchg
mov
or
orl
sub
inc
mov
push
bnd
fiaddl
cmp
rcl
sbb
fisttps
insb
das
mov
repz
outsl
pop
dec
rol
mov
mulb
daa
jnp
leave
popf
sub
xor
into
es
adc
data16
aad
pop
sti
lret
or
in
sbb
sub
push
shlb
fcoml
enter
jge
arpl
les
adc
daa
or
rcrl
mov
leave
jbe
jae
loop
and
cld
or
cmpsl
xchg
push
jmp
xor
fisubs
loop
adc
dec
dec
cmp
adc
or
push
cmpsl
or
lds
pop
fdivrs
cld
int
imul
mov
xor
add
subl
dec
sub
std
xchg
outsb
popf
inc
fs
push
sbb
iret
cs
out
bnd
outsb
push
jno
push
add
pop
aam
xchg
ja
jbe
insb
ja
test
sbbl
cld
popf
repz
sbb
test
jl
pushf
mov
addl
xchg
scas
inc
adc
mov
out
push
fwait
jb
out
rcl
xchg
mov
inc
push
inc
jbe
mov
into
popa
fstps
mov
jbe
in
mov
addr16
shll
dec
loopne
inc
mov
cmp
arpl
popa
cmpsl
adc
mov
test
mov
or
mov
mov
pop
out
aam
fsubs
shl
sbb
mov
fistps
cmc
sbb
pop
je
jae
dec
dec
mov
mov
jle
jns
aad
hlt
inc
inc
cmpsb
fwait
cmpsl
daa
mov
cltd
je
stc
nop
or
rol
stc
and
jmp
push
cwtl
cmp
xchg
and
mov
xchg
popf
jo
mov
fistl
dec
cmpsb
push
sbb
push
in
sbb
scas
or
and
ret
xchg
or
cmp
mov
dec
adc
notb
push
mov
int3
in
dec
pop
xchg
testb
scas
adc
loope
xor
sub
jb
sub
push
mov
stos
lods
or
push
pop
adc
in
cmovne
inc
jg
adc
push
adc
xchg
sub
outsb
lcall
loopne
in
cli
nop
test
test
fisubrs
out
std
jp
xchg
jmp
and
rorb
mov
aas
xlat
imul
adc
mov
loopne
or
insb
shrb
dec
out
mov
and
hlt
jns
stc
or
add
or
mov
rorl
sub
jne
pop
xchg
shrb
andb
sbb
rcll
adc
push
sub
push
sahf
mov
jge
arpl
les
test
in
xlat
insl
addr16
sbb
shl
and
lock
loop
fsubs
arpl
sub
push
popf
out
sub
pop
fwait
jp
xchg
jle
dec
sub
hlt
js
and
out
sbb
mov
popa
xor
add
or
and
sarb
das
mov
insb
loop
and
push
aas
sbb
sbb
jae
outsb
add
sbbl
jle
mov
rolb
xor
pop
mov
or
mov
or
xor
dec
fs
mov
fcmovnbe
pop
mov
sbbl
nop
in
sti
mov
xor
fisubrs
pushf
lea
and
mov
mov
clc
push
inc
jmp
push
popf
push
ljmp
sub
xchg
jle
loopne
mov
jne
sti
out
repnz
stc
xchg
push
movsl
add
pop
inc
cltd
roll
sbb
cwtl
data16
outsb
xor
cmpl
bswap
cmpb
in
sub
lcall
jbe
xor
loopne
sbb
in
push
ljmp
and
mov
mov
sub
in
cmc
dec
lods
cmp
dec
outsl
adc
cmpsl
ja
jae
pop
sub
and
or
imulb
stos
sub
popf
xor
or
aas
fs
and
adcl
es
popf
cltd
pop
ficomps
jno
cmp
pop
mov
or
mov
cmp
jnp
in
insl
sub
inc
scas
movsb
rolb
xchg
pop
xlat
xchg
cmpsb
cltd
data16
jns
xor
mov
clc
adc
cmpsb
cmp
jno
fildl
mov
loop
xchg
filds
aad
pop
fs
iret
push
sub
outsl
ds
mov
notl
popa
testl
lods
inc
add
rcr
fbstp
ret
add
dec
test
mov
out
div
jns
test
movsbl
pop
outsb
jecxz
jl
pop
inc
ss
js
xchg
mov
adc
add
push
mov
cmp
aam
arpl
lock
gs
aaa
xor
outsl
xor
fstl
lea
and
or
testb
out
clc
lahf
mov
arpl
cmc
ret
and
pop
pop
push
cmp
cmp
mov
lret
adc
repz
into
and
cmp
push
push
push
leave
in
mov
sub
add
sub
or
sahf
cmpsl
vpshuflw
pop
pop
add
lds
add
inc
sbb
fisubrs
leave
pusha
pop
cmp
jb
ljmp
pop
or
jns
dec
addr16
cmp
in
jne
inc
add
sbb
jnp
fwait
inc
mov
jb
xor
daa
adc
inc
mov
dec
je
and
sbb
and
add
mov
ret
loope
push
ds
ds
dec
cmpsl
mov
inc
pop
ret
mov
lock
hlt
repz
and
sbb
test
lret
push
decb
pop
ss
aad
rcll
in
pop
shr
nop
adc
int
dec
jb
repnz
lret
adc
pop
fsubl
push
in
cmpsl
push
dec
shl
loopne
jg
insl
xor
push
pop
ret
lret
leave
add
fdivp
mov
adc
sahf
test
xchg
sub
mov
pop
movsb
call
lcall
cmp
pop
cmpsl
pop
loop
in
test
loope,pn
insb
out
mov
inc
in
jne
mov
ficoml
stc
data16
pop
rcrl
les
neg
imulb
push
xchg
push
xor
imul
fidivrs
jge
mov
testb
std
scas
mov
jge
enter
aad
sbb
insb
cmp
adc
mov
push
sbb
push
repz
pop
aaa
int3
aaa
or
movsl
fadds
mov
jle
and
outsl
cmp
jg
rol
push
dec
je
add
out
fiadds
test
es
in
mov
sbb
lods
fdivl
mov
lock
maskmovq
negl
pusha
loop
sub
addr16
adc
fs
notl
adc
and
test
enter
jne
xorb
xchg
jbe
mov
test
mov
cmp
cmp
loop
mov
lds
out
lahf
jns
repz
movsb
imul
or
xchg
xor
sbb
out
lahf
push
dec
in
cmp
imul
and
jae
scas
rorb
es
xor
mull
push
push
mov
or
inc
xor
adc
sbb
xchg
sub
test
int3
imul
push
push
testb
daa
sbb
mov
adc
add
filds
fwait
xchg
mov
sahf
jp
sti
pop
mov
mov
das
es
jp
push
loopne
enter
push
dec
loope
inc
xchg
icebp
in
add
enter
lock
pop
pushf
mov
cmp
pop
inc
fs
mov
jb
and
inc
adc
insl
cmp
cli
mov
fistps
dec
push
sbb
int3
jg
ja
cld
mov
push
dec
or
xlat
imul
in
fcom
fwait
test
xchg
mov
xchg
mov
ljmp
sbb
ljmp
push
fcmovnu
xchg
jecxz
aam
stos
push
lahf
sbb
adc
jno
loope
mov
inc
sbb
int
mov
jg
dec
cmpsl
inc
mov
pop
int
cmp
mov
mov
or
out
sub
push
jmp
adc
jo
arpl
mov
push
dec
into
aas
mov
ret
ja
insl
mov
movl
jl
jnp
push
xchg
in
out
lds
rorb
inc
loopne
jmp
int3
and
add
mov
jnp
aas
dec
insb
or
aas
arpl
imul
repnz
dec
fstps
add
leave
fs
push
ret
ds
test
dec
outsb
int
mov
cli
in
xor
xor
fwait
push
mov
test
jno
adcb
adc
cmpsb
xchg
inc
out
xor
inc
testb
mov
inc
cmp
xchg
in
sbb
aas
lock
add
dec
iret
push
sub
lods
cld
jg
jle
mov
pop
sti
inc
data16
add
jbe
cmp
sti
push
scas
inc
adc
xor
mov
cmp
icebp
call
xlat
outsb
mov
arpl
mov
mov
je
sbb
pop
lds
jb
and
pop
or
lea
inc
pop
xchg
mov
sbb
jne
test
mov
push
jp
mov
packssdw
fstpl
cmp
mov
js
psadbw
jne
popa
sub
hlt
ds
push
adc
mov
push
sub
hlt
lock
lock
mov
ret
dec
pop
lcall
dec
cmc
dec
pop
call
in
dec
xor
pushf
sub
outsl
jnp
xor
inc
push
lock
add
jbe
mov
cmp
stos
dec
insb
sub
insl
aas
subl
nop
cli
lock
jge
push
cmc
jns
adc
in
cmp
mov
test
sbb
push
push
lret
push
or
mov
pop
loopne
jecxz
dec
pop
add
pushf
jl
cmpsb
xor
xchg
std
xchg
xchg
sbb
aaa
sbb
and
xchg
jmp
xchg
xor
push
rorl
cmp
sub
cli
sub
or
mov
das
mov
inc
lahf
insl
and
xor
pop
xor
push
mov
xchg
cmpsl
icebp
inc
sub
das
or
ret
mov
add
pushf
dec
push
lret
push
and
mov
pop
es
fbstp
inc
gs
dec
mov
out
enter
dec
jp
leave
mov
fsubrs
jbe
shlb
dec
imul
out
sbb
push
jmp
mov
inc
leave
pop
push
inc
or
xchg
les
dec
pop
sbb
xchg
lret
aaa
pop
mov
push
jmp
sbb
out
push
fistl
call
fsubs
mov
aaa
push
into
aam
ret
sub
xchg
out
fnsave
xor
lcall
jb
mov
subb
mov
adc
mov
mov
ret
fnstcw
es
pusha
scas
dec
fsubr
jne
mov
xchg
leave
out
push
jno
pop
sbb
mov
hlt
lret
ret
mov
sbb
sbbb
das
jp
and
aas
dec
gs
imul
push
insl
jns
insb
xor
into
pop
lcall
ret
sub
aas
sbb
dec
out
inc
cmc
sbb
mov
jo
mov
or
je
lock
incb
popf
mov
push
loopne
popf
and
mov
iret
outsl
ficoml
fdivrs
add
out
pop
inc
and
fsubrs
jl
jo
mov
int
push
call
inc
fs
inc
loopne
fldcw
adc
add
out
in
insl
and
fcomip
xor
inc
jae
fwait
xchg
add
xor
dec
and
bound
nop
fldl
jbe
adc
lock
fs
test
inc
xor
jo
cld
ljmp
out
mov
dec
mov
popf
je
sbb
pop
mov
in
sbb
dec
jbe
push
shl
in
add
adc
push
push
insb
inc
adc
lret
jecxz
fisttpll
js
inc
shll
jb
mov
inc
test
je
outsl
and
adc
xor
mov
cmp
inc
in
inc
stc
popf
out
int3
out
mov
rcr
mov
mov
inc
pop
out
mov
enter
jae
fists
cmpl
push
sbb
cmp
jae
out
pop
fdivrs
inc
jmp
mov
xlat
adc
bound
sahf
inc
or
in
subl
into
in
inc
cmpsl
dec
lea
mov
jmp
xchg
xchg
or
outsb
or
pop
push
insl
jnp
jle
rorl
push
lods
leave
cmp
jmp
ja
add
fwait
test
inc
outsb
daa
in
xor
xchg
pop
sub
popa
dec
pop
push
add
stos
jl
inc
cmp
fstpt
or
sarl
jne
mov
ud2
inc
sbb
or
xchg
pop
rclb
jnp
sti
jp
popa
and
rcl
dec
ret
push
adcb
dec
ret
mov
push
or
sti
lock
pop
lods
adc
add
add
movups
jg
dec
add
rcr
sbb
push
add
and
aas
cmc
mov
jb
jb
pop
adc
dec
in
add
pop
mov
test
adc
add
call
sub
mov
jb
mov
xchg
outsl
std
mov
sahf
sbb
jo
adc
call
xchg
jns
imul
add
mov
mov
adc
std
aam
xor
daa
mov
push
xor
iret
or
in
test
stc
or
lds
push
and
jecxz
add
or
jl
sbb
aam
dec
insb
insb
mov
cli
inc
jecxz
jb
addr16
scas
ret
cmp
std
jnp
lods
xor
outsb
fs
mov
cld
xor
inc
mov
jns
fistps
jl
add
xor
out
xchg
add
add
xchg
pop
loope
scas
cmp
sub
out
xchg
add
jno
iret
and
sbb
cs
lret
push
lock
push
and
repnz
mov
mov
pop
lcall
rclb
out
imul
xchg
les
sub
dec
je
jno
out
jns
sbb
ljmp
adc
inc
dec
pop
jb
lea
cmpsl
repz
cli
push
sbbl
sbb
nop
mov
sub
lret
lret
vpcmpgtd
dec
gs
mov
in
mov
inc
repz
addb
mov
sti
sbb
pop
out
mov
inc
outsb
clc
jne
cmp
iret
inc
push
add
jmp
push
add
sub
mov
rcll
dec
push
out
inc
incb
lret
inc
cmc
pop
jbe
xchg
and
pop
mov
std
data16
jno
xchg
repz
insb
decl
outsb
add
dec
stos
and
sbb
mov
testb
andb
and
imul
movsl
das
mov
bnd
stos
mov
sub
mov
xor
imul
loopne
inc
pop
sbb
fs
push
push
movsb
add
jmp
aaa
inc
pop
imul
mov
jno
flds
mov
push
sti
adc
mov
pop
repz
aaa
daa
call
leave
aam
sti
movsb
cmp
loop
aad
push
ret
pop
dec
or
lods
mov
sbb
pop
xchg
cmp
cld
cmp
imul
je
inc
fsubrs
sbb
aas
push
mov
rcrl
add
addr16
jae
xor
stc
scas
andl
fidivl
lret
push
push
sub
insl
pop
mov
fldt
or
adc
aaa
xchg
mov
orb
mov
mov
push
hlt
addr16
cmp
fsubrs
mov
inc
fsubp
test
ds
fdivl
inc
outsl
adc
jge
leave
dec
and
mov
jae
xor
pop
cmp
inc
bound
out
dec
push
jmp
or
orb
mov
add
pop
mov
inc
mov
dec
sub
mov
xlat
push
ds
inc
cmp
dec
jo
adcb
push
dec
lcall
aad
popa
cmp
iret
sub
jnp
les
insl
ljmp
cmpsb
int
ret
out
jle
daa
mov
pop
mov
int
jge
mov
or
out
ja
dec
cmp
sarb
data16
imul
xchg
ja
pop
out
jae
ljmp
dec
fiaddl
or
sbb
in
das
ljmp
fdivrl
movsl
pop
scas
dec
test
xor
loopne
or
xchg
mov
pushf
push
cmpsl
mov
in
andl
int
dec
int
movsl
jl
mul
mov
mov
xor
out
add
adc
mov
jae
test
orl
bound
mov
fdivrl
aad
lds
push
mull
stos
cwtl
dec
mov
add
adcb
mov
sub
mov
cwtl
lret
out
outsb
out
pop
and
jae
inc
and
inc
cmpsl
push
mov
outsb
mov
sbb
and
rolb
js
mov
inc
repnz
jo
data16
jno
mull
loope
ss
mov
sub
fwait
sbb
clc
iret
fnstsw
jl
xor
aam
inc
fs
rorl
and
fcoml
xchg
push
fdivr
cltd
pop
adc
sub
cltd
std
xor
lret
jecxz
adc
outsl
in
or
add
cmp
sahf
pop
rcrl
aam
repnz
sti
pop
fst
dec
leave
mov
jno
icebp
mov
fsubrl
or
jp
jo
inc
fucomip
not
cmp
lret
pop
push
stos
js
fs
cwtl
and
xchg
and
stc
call
or
jmp
out
outsb
addr16
jbe
test
imul
xor
mov
in
data16
ret
data16
in
popf
pushl
das
cmp
adc
stc
lret
aam
add
sbbb
mov
aam
xlat
ds
cs
dec
cmp
dec
jecxz
or
out
sbb
mov
push
jne
sbb
pop
pop
push
fwait
push
inc
sbb
adc
cmp
nop
inc
ds
mov
mov
or
sbbb
add
das
lea
inc
pusha
cmp
inc
loop
mov
js
or
dec
bound
fistpl
js
xchg
jecxz
push
in
xor
pop
imul
sub
outsl
cltd
pop
cmp
fimull
pop
sbb
mov
ds
xor
adc
fs
stos
std
scas
or
cmp
test
dec
int
dec
cmp
fcompl
xchg
jnp
in
repz
xorl
pop
jb
cmp
mov
shlb
dec
daa
push
xchg
mov
rcrb
xchg
imul
lahf
cmp
mov
jecxz
out
scas
sbb
xchg
inc
lds
jno
popa
add
mov
shl
pushf
sub
subl
mov
bound
xor
mov
int
xor
xlat
adc
mov
pop
and
bound
in
sub
mov
int3
aad
add
cltd
jg
jg
xchg
jbe
dec
lock
mov
jg
shlb
jae
repnz
mov
xchg
cs
dec
pop
jo
mov
xchg
add
lods
daa
test
inc
test
cwtl
xor
add
jns
push
and
nop
mov
mov
ror
daa
mov
add
inc
mov
jnp
mov
push
cltd
or
cwtl
pop
push
adc
imul
mov
adc
xchg
sbb
xchg
jo
mov
push
movsb
mov
popf
cmp
fcmovb
sbb
add
loope
fsubs
mov
xor
add
mov
scas
pop
scas
mulb
js
std
and
cmpsb
inc
movsb
xchg
ja
in
std
push
push
pop
sahf
push
outsb
fwait
scas
out
cld
and
dec
int
mov
test
idivb
mov
shlb
fstpl
fistl
add
loopne
dec
popf
aas
mov
sti
dec
and
hlt
and
add
leave
sbb
dec
xchg
out
cmc
and
inc
aas
mov
loopne
jmp
mov
icebp
xor
sub
daa
pop
outsb
dec
mov
dec
xor
icebp
xchg
sub
fdivl
stc
cmp
dec
xchg
mov
lock
test
ffreep
jb
mov
stc
dec
lret
add
insl
loope
call
stos
incl
movsl
mov
xor
inc
int3
mov
jb
mov
mov
into
xchg
and
es
jecxz
pop
test
bound
outsb
push
clc
loopne
je
sub
es
mov
xor
aam
cld
std
or
out
shr
gs
sahf
sbb
jge,pn
and
aas
fbstp
subl
loopne
lret
adc
sub
fcomps
test
sbb
fsubl
imul
push
pop
mov
pop
js
add
imul
xchg
mov
mov
fs
xor
push
push
add
add
data16
lea
fidivrl
sub
mov
pusha
into
mov
sbb
cs
jmp
sub
out
push
repnz
insl
cld
sarb
xor
jne
out
mov
in
ret
jl
fwait
sbb
incl
pop
in
pop
outsb
pop
push
movsb
xchg
subl
jns
pushf
pop
sbb
jo
xor
jge
jmp
cmp
lahf
std
mov
cld
test
mov
movsl
out
mov
mov
test
jbe
inc
test
mov
pusha
stc
sbb
dec
sub
aad
cmp
es
pop
mov
jmp
dec
xchg
xchg
insb
or
xchg
repz
call
cmp
push
jge
jmp
or
mov
jmp
jae
inc
imul
push
mov
pop
data16
jb
xchg
sbb
std
push
shr
add
dec
xlat
mov
clc
mov
rdmsr
lret
cmpsl
ds
push
and
lds
pop
mov
xor
xor
and
and
adc
mov
inc
add
push
push
in
fsubrs
mov
arpl
xor
aaa
pop
add
push
dec
dec
out
xchg
cmpb
jns
inc
out
jp
cmp
pop
outsb
push
sub
xchg
outsl
dec
push
imul
leave
xor
cmp
inc
into
daa
mov
push
out
into
mov
cmp
cld
nop
jl
fwait
outsb
out
andl
sbb
mov
xchg
and
xchg
cmp
nop
cmpsb
push
fldt
loopne
ret
pop
in
rcll
loope
fdivl
cs
cmp
test
pop
mov
rcll
mov
negl
sub
or
ret
sti
fidivs
movsb
sbb
xor
and
aam
cmpb
lods
pushf
mov
std
and
xor
adc
and
inc
jne
jno
icebp
rorb
mov
fidivs
bswap
pop
jnp
inc
outsl
dec
push
mov
mov
or
and
mov
cmp
adc
inc
lret
cmp
cmpsb
out
ljmp
inc
clc
aas
addb
enter
int
ret
sub
cmp
enter
subl
sbb
and
pop
jae
inc
push
mov
and
hlt
aaa
jns
mov
xor
xchg
addb
arpl
subl
into
cmp
ret
cmp
xchg
popf
pop
sahf
or
loop
filds
out
sub
cltd
mov
lret
test
stos
push
or
dec
jne
jle
int3
dec
push
inc
sbb
jns
fsubr
idivb
xor
adc
cs
ss
test
mov
cmp
enter
lods
mov
fidivrs
inc
sahf
fsubp
xchg
xlat
or
in
into
xlat
insl
xchg
mov
xor
xchg
ja
negl
mov
jp
inc
sub
addr16
xchg
leave
mov
sub
mov
pop
sbb
add
cmc
inc
std
mov
nop
pop
mov
xchg
stos
push
add
push
jbe
push
ret
push
sbb
cmp
mov
and
sbb
sub
mov
clc
mov
bound
push
cmp
out
data16
cmpsl
icebp
scas
xchg
icebp
push
das
fbstp
scas
add
loopne
adc
push
lods
add
and
xchg
cmpsl
mov
shll
notb
mov
pop
pushf
pop
xor
sub
jbe
ffree
test
jnp
pop
inc
mov
in
sub
frstor
lcall
jbe
adc
mov
loopne
cmp
lds
and
push
inc
jge
ret
mov
jns
adc
int3
arpl
sahf
bound
xorl
test
fstps
xor
sbb
cmp
cmp
call
mov
inc
icebp
mov
jle
cmp
pop
scas
rol
pop
jae
in
movsb
push
scas
inc
mov
push
in
add
int3
cmp
jle
dec
cli
jge
mov
imul
out
fwait
sbb
daa
bound
out
cld
subl
adc
orl
pop
out
adc
repnz
push
add
ret
jb
cwtl
arpl
adc
arpl
std
dec
subl
or
pushf
outsb
push
clc
test
lods
sub
inc
mov
mov
std
and
gs
and
add
xchg
cmp
inc
fmuls
jle
sub
int
mov
xbegin
ret
imul
xchg
sbb
dec
jne
aaa
int3
mov
mov
scas
fstpl
cmp
mov
cld
ret
cwtl
or
jae
test
or
icebp
fcomip
jnp
and
jns
inc
leave
sbb
stc
in
adc
or
cs
in
push
in
outsl
out
jae
fisttpll
push
lods
das
pop
lock
leave
lret
xor
cmp
inc
lcall
lods
fstl
cli
adc
xor
jg
xchg
jg
iret
dec
jle
aas
sub
sub
les
imul
xor
out
fmulp
push
mov
or
pop
cmp
or
pusha
repz
shl
scas
test
popw
mov
std
xchg
cli
dec
xchg
ja
jp
sub
inc
push
sub
xor
scas
fimuls
xchg
mov
leave
aam
and
mov
pop
sub
fidivs
fnop
addr16
cmpsb
dec
scas
lret
enter
fldenv
jb
mov
jp
mov
cmp
fs
ret
mov
xor
pusha
movsb
repz
or
jb
mov
mov
repnz
dec
push
in
mov
or
lock
fistpll
xchg
sub
dec
inc
xchg
sub
pop
push
aad
sub
divl
filds
fildl
daa
data16
mov
out
hlt
mov
mov
or
mov
out
cmp
test
call
cwtl
movsb
repnz
pusha
scas
inc
cmp
or
cltd
pop
in
je
stos
repnz
mov
lret
xchg
sub
leave
or
add
jp
mov
xor
adc
nop
mov
xchg
lods
mov
xlat
mov
and
sbb
ljmp
xor
sarb
jnp
lods
scas
sahf
mov
cmp
sbb
fnstenv
cvtpi2ps
aam
mov
test
dec
pop
mov
mov
dec
jecxz
stc
ror
pop
out
xor
adc
lret
push
sahf
push
xor
fwait
jl
sbb
xchg
loop
xchg
enter
clc
mov
add
mov
int3
ja
shrb
movb
int
fsubrp
cltd
add
lods
add
jmp
stos
sbb
adc
push
mov
enter
adc
lret
popa
xor
jno
cmpsb
inc
stos
adc
cli
inc
fisttpl
idivb
push
daa
lret
add
mov
into
insl
fwait
pop
out
cmpsl
das
xor
sbb
cmp
xor
mov
cmc
mov
mov
mov
pop
add
mov
nop
or
ret
idivb
popa
and
cmpsb
jge
jbe
mov
and
adc
pushf
out
cld
leave
xlat
outsb
test
inc
xchg
sbb
dec
leave
pop
jge
sahf
ljmp
mov
inc
leave
mov
aam
add
xchg
popf
push
mov
lret
lret
xchg
jnp
cmpsb
icebp
mov
push
jp
ds
rcl
adc
add
test
jl
add
jge
jle
sbb
cltd
inc
mov
fidivs
lcall
cs
adc
and
repnz
addr16
stc
jns
sub
int3
fs
aas
jg
xor
jmp
imul
xchg
jo
daa
lahf
pop
mov
pop
inc
lods
gs
jg
jl
scas
enter
aad
stos
inc
outsb
and
outsb
test
pop
mov
pop
dec
and
es
xchg
pop
cmp
dec
stos
sarb
jg
xchg
xchg
ss
iret
aaa
iret
aam
xlat
pop
push
adc
pop
andl
lods
adc
js
xor
imul
mov
sarl
gs
daa
sub
scas
pop
ja
xor
cmp
pop
mov
and
test
test
gs
add
scas
fld
push
sbb
popf
ror
jo
inc
loopne
sbb
push
fistpl
xchg
adc
xchg
out
cmpsl
inc
push
push
and
iret
lods
mov
lea
sub
push
mov
pop
mulb
add
lcall
and
test
int
gs
xor
aad
jmp
xorb
mov
es
push
jo
ja
aaa
adc
imul
popf
pop
cmpsl
hlt
pop
repz
xchg
in
mov
xorb
sbb
mov
jno
jne
sbb
jg
jo
fs
in
jae
adc
loope
pop
xchg
mov
inc
cli
fisubrl
outsb
push
pop
jp
sti
stos
jns
push
lret
pop
cmp
fs
cmpsl
jp
adc
or
mov
ffreep
out
mov
mov
std
xchg
das
and
cmp
pop
or
dec
sub
call
push
cmpsl
cmp
push
std
es
push
xchg
insb
adc
jle
mov
jle
jmp
ror
imul
xor
inc
sahf
dec
loopne
int
jp
jle
cmp
aad
roll
ss
and
mov
adc
jle
shl
add
out
stos
in
lock
cmpsl
in
lcall
ss
sub
pop
ss
jae
sbb
repz
and
imul
dec
dec
jl
outsl
inc
orl
mov
cmp
and
mov
push
pop
testb
mov
int
jns
pop
and
and
lret
adc
push
hlt
pop
xor
mov
ds
inc
call
rcrb
mov
mov
push
subb
jns
adc
jnp
xchg
call
pop
test
or
pop
fwait
cltd
and
mov
inc
mov
push
pusha
add
mov
xorb
xlat
push
adc
inc
pop
xchg
adc
es
daa
xchg
mov
dec
inc
xchg
movsl
rol
xorb
cmp
xchg
jl
test
pop
popa
int
movsb
mov
addr16
cltd
cs
repnz
lcall
stos
jo
shll
inc
pop
icebp
ja
lea
adc
add
or
inc
das
je
pop
jae
mov
jno
sub
imul
je
jl
ljmp
rcl
xchg
lods
xchg
mulb
cmc
enter
jl
push
dec
mov
popa
or
jne
sbb
xchg
hlt
xorl
sbb
inc
nop
add
iret
stos
inc
jmp
adc
fdivl
jae
lea
in
mov
mov
push
sub
pop
and
xchg
sub
popl
xlat
popf
or
mov
xchg
cmp
mov
inc
push
cmpsb
loope
std
and
lret
mov
add
stc
cmp
xor
adc
or
dec
test
inc
jmp
gs
scas
xor
jno
sbb
add
shll
sub
fiaddl
cmp
xor
movsb
in
dec
into
fistpll
shlb
jno
sti
aas
pushf
and
outsb
outsl
inc
jl
and
fs
mov
test
mov
sarb
adc
xchg
repnz
lret
call
aam
jo
lahf
test
and
xchg
int
fdivs
adc
sarb
fnstcw
cs
xchg
iret
dec
loopne
push
sbb
insl
hlt
fldl
pop
cmp
fwait
lahf
in
or
mov
jge
push
ja
clc
das
sub
jge
xchg
mov
mov
aad
jo
movsb
xchg
or
enter
out
outsl
insl
fwait
ret
cwtl
mov
inc
adc
cmpsl
dec
xor
rclb
push
lods
push
je
test
movsb
outsb
nop
sbb
shl
mov
mov
ds
xchg
movsl
repz
faddl
add
or
mov
ljmp
jno
pop
stos
addb
cld
inc
fistpl
outsb
fnstsw
int
seto
sub
out
mov
mov
fldenv
cmp
and
in
xor
pop
cli
jne
rolb
inc
in
sbbl
icebp
insb
jle
out
mov
ds
jl
sbb
add
testl
ss
or
or
add
js
adcb
inc
push
mov
cltd
xor
and
add
xor
xchg
mov
int
adc
addr16
jp
pop
push
mov
pop
push
and
dec
pop
mov
andl
clc
mov
or
lret
or
pop
loop
push
sti
add
and
cmpsb
lock
xchg
bound
sbb
inc
push
fisttps
xor
add
inc
sbb
adc
lock
push
push
in
inc
mov
cmc
mov
adc
pop
mov
adc
pop
sbb
xchg
add
push
adc
gs
or
jmp
iret
fidivs
push
dec
pop
jl
adc
dec
sub
jno
js
fs
mov
jmp
clc
jne
sbb
jmp
and
lock
subl
sarb
dec
insl
xor
push
sub
pop
in
mov
in
cld
arpl
mov
xchg
adc
xlat
outsb
xchg
mov
insb
mov
popf
dec
and
jp
fadds
pop
mov
mov
test
arpl
stos
pusha
int3
scas
out
stos
cmp
mov
xchg
leavew
hlt
sbbl
sub
movsl
mov
or
pop
and
xchg
repnz
and
inc
pop
xchg
int3
call
call
or
gs
mov
jb
in
nop
test
fnsave
add
mov
lcall
pop
test
dec
loopne
push
test
sbbl
inc
stos
inc
jbe
jl
and
jo
sub
mov
mov
sub
push
push
inc
out
insb
js
loope
or
std
lea
add
nop
xchg
bound
lods
inc
outsl
sub
popa
ret
stc
fwait
mov
jg
ror
jle
push
popf
or
push
push
fadds
mov
sub
popf
push
xor
aam
xor
cmp
cli
shlb
dec
adc
lea
imul
or
arpl
ljmp
ljmp
mov
jo
andl
daa
xchg
ret
xor
shrb
fisubl
add
nop
lret
call
mov
mov
cli
jne
and
push
push
xchg
push
scas
shl
add
ss
imul
pushf
sub
xchg
popf
jp
out
aas
enter
add
xchg
push
out
push
jb
push
cmp
push
push
mov
and
pop
popf
xor
xor
ror
rcrb
xor
movsl
mov
xchg
or
aad
sbb
mov
xor
jnp
imul
in
je
cmp
pop
mov
mov
lret
iret
data16
and
fcmove
cld
xchg
mov
fadd
je
fdivr
mov
sub
stos
pop
out
adc
pop
inc
or
mov
jg
add
lcall
int3
in
in
sub
jg
data16
lret
dec
and
jbe
mov
cmp
movsl
mov
xor
out
arpl
adc
scas
imul
sti
xchg
dec
add
stos
aam
cmp
sub
jno
fnsave
or
sarl
addr16
mov
je
jge
ljmp
pop
mov
insb
in
sahf
dec
cmpsb
loope
ficoms
or
xor
push
add
jne
jecxz
cmpsl
dec
hlt
dec
lds
mov
sti
sub
testl
pop
fstl
out
xchg
lea
xor
fbstp
setb
jecxz
iret
dec
arpl
pop
push
cld
push
push
sbb
subb
aam
movl
xchg
out
sbb
jb
addr16
adc
popf
addr16
mov
jg
invd
cld
cmp
mov
lods
xor
mov
aaa
outsl
loop
loope
call
push
push
mov
jg
sbb
inc
jl
dec
scas
js
sub
mov
and
mov
hlt
dec
fcomip
imul
lret
addr16
fwait
push
inc
insl
mov
push
out
aad
int
mov
inc
sbb
sbb
cmp
testb
in
push
into
mov
mov
and
inc
adc
test
iret
push
push
leave
dec
cmp
push
enter
jb
leave
gs
push
dec
or
int3
stos
scas
inc
fwait
adc
inc
push
insl
xor
sub
subb
jecxz
adc
out
js
jno
xor
cmp
pop
repz
mov
lock
adc
dec
cwtl
das
jl
sbb
icebp
frstor
mov
and
xchg
sahf
or
mov
and
repnz
js
push
add
cmp
pop
dec
rcrb
mov
and
add
les
jae
or
inc
or
insb
jge
push
inc
and
loope
jg
cmpsl
enter
repnz
js
dec
pop
mov
js
cli
sub
sahf
test
cmpb
cmp
push
sbb
sarb
push
inc
mov
xchg
push
add
or
push
imul
adc
push
inc
sbb
jns
jo
jno
aad
push
jae
outsb
and
movsb
mov
jle
gs
pop
jl
idivl
mov
cmc
mov
mov
sub
pop
push
lods
adc
loopne
shl
into
jnp
dec
mov
pop
lret
sbbl
push
mov
mov
out
fwait
or
orb
pop
sbb
inc
dec
push
rcrl
loop
xchg
push
out
stos
cmp
mov
lds
mov
int
and
fldcw
and
int3
inc
sbb
icebp
arpl
rol
mov
shll
push
pushf
and
push
push
xor
xchg
and
enter
aad
stc
xlat
rolb
loope
shrl
inc
mov
test
inc
xchg
sahf
lret
dec
push
jmp
dec
in
sahf
mov
pusha
out
push
push
dec
test
sbb
sbb
push
pop
das
vmaxsd
test
fisubrl
loop
pop
insb
sti
sub
inc
insb
add
dec
int3
sub
mov
pushw
rcpps
sbb
loope
sub
setb
jnp
outsl
repz
imul
icebp
adc
es
mov
pop
stos
push
pop
das
rcl
xchg
mov
or
test
xchg
jno
xor
ss
cmp
std
lods
xchg
mov
sbb
xchg
sub
adc
js
jno
es
pop
mov
cmpsb
icebp
or
sub
xchg
lds
jnp
pop
adc
loope
mov
dec
dec
push
mov
rcrl
lea
mov
add
jo
call
ljmp
call
jne
mov
je
pop
pushf
fimuls
stos
test
je
xor
xchg
jg
out
jecxz
addb
test
lahf
or
leave
cwtl
push
out
pop
xchg
mov
xor
sub
int
push
adc
push
in
sub
mov
inc
pusha
jge
loop
lret
cltd
aas
add
jl
insl
ret
popa
daa
imul
popf
test
mov
or
cmp
adc
cmpsb
mov
lock
ja
inc
aaa
pop
lret
imul
fisttps
mov
pop
out
add
jbe
dec
test
fldenv
nop
shl
rcrl
aas
enter
aad
mov
hlt
xchg
xchg
lea
cmp
in
xor
and
hlt
dec
loopne
stos
xchg
je
repnz
xchg
sub
test
dec
jecxz
dec
inc
aam
dec
stos
cmp
sbb
cmp
cmc
jl
or
sbb
jp
movsl
lds
mulb
mov
push
mov
lea
mov
push
mov
adc
jnp
jno
inc
aaa
xchg
xor
icebp
jnp
in
push
jecxz
fcoms
push
fdivrp
lock
xor
and
mov
lods
push
hlt
pop
in
dec
pop
in
or
xor
lds
cmc
int
aaa
jmp
inc
jge
je
jge
cmp
icebp
and
pushf
or
imul
aam
jns
xor
push
mov
repnz
cli
mov
xor
ljmp
xchg
mov
dec
or
int
mov
add
lods
pusha
scas
mov
daa
sbb
inc
or
mov
ljmp
cwtl
mov
and
push
arpl
je
mov
cmp
cltd
dec
mov
icebp
add
cmpsl
cmp
test
cmp
loop
dec
pop
mov
push
jae
add
shll
xor
scas
das
dec
mov
jg
push
mov
push
jge
pop
arpl
cli
mov
push
cmp
dec
rcrl
mov
repz
pop
jecxz
mov
into
sbb
push
sub
aas
ret
jno
clc
lcall
mov
loop
pop
scas
sbb
add
fs
mov
je
or
push
dec
cmp
mov
xchg
mov
or
pop
or
in
and
fisubrs
pop
jg
pop
fcomps
repz
or
movsl
dec
and
jno
pop
pop
or
or
jmp
mov
mov
mov
ficoml
cmp
aas
arpl
inc
movsb
jns
cli
inc
scas
jp
rorb
mov
jecxz
push
push
out
mov
das
mov
shr
push
in
dec
and
adc
push
jb
xor
sub
push
mov
mov
dec
jmp
lret
cmp
lods
std
sbb
or
pusha
fcmovne
or
mov
lock
add
daa
bound
int
adc
push
mov
adc
jg
ljmp
xor
cltd
popf
inc
fwait
inc
ljmp
jnp
leave
mov
in
ljmp
mov
out
jmp
sub
std
cwtl
mov
adc
cltd
mov
aaa
pushf
lods
in
sti
aas
cmp
fisubs
jle
jmp
aaa
nop
jo
enter
mov
and
dec
cli
xor
popf
mov
inc
and
sti
push
mov
std
xor
push
pushf
cli
pop
push
cs
ret
mov
mov
or
cmovnp
xchg
out
pusha
push
out
movsb
jo
aad
stc
pop
cltd
mov
roll
sub
scas
add
cmp
pop
dec
sbb
pusha
scas
mov
fnsave
leave
or
loope
ficoml
pop
inc
inc
jnp
and
pop
mov
jnp
jl
xchg
xchg
movsl
add
nop
add
mov
xor
sbb
fisttpl
dec
fisubs
loope
movl
sub
sub
xlat
idivl
gs
lock
mov
lahf
push
lods
js
lods
xlat
push
cs
jecxz
scas
lret
sbb
cld
iret
lds
sarb
rol
xchg
cs
and
das
mov
pop
jbe
out
sbb
add
mov
dec
addr16
in
nop
mov
in
sbb
je
sahf
loop
or
push
adc
xchg
ljmp
es
xchg
lahf
sub
ret
jne
andb
push
dec
mov
cmc
setge
cmp
sub
loop
sahf
xchg
cwtl
inc
xchg
inc
add
lock
in
aad
gs
push
cmp
ja
xchg
add
jb
lret
and
cwtl
sub
mov
aam
inc
fsubp
leave
lea
gs
rclb
decl
imul
push
nop
cmpsl
sbb
aad
xlat
arpl
fistpll
push
insb
and
sti
sbb
jnp
mov
aaa
pop
mov
dec
push
and
pop
push
imul
push
movsl
mov
cltd
cmpsl
ds
mov
adc
insb
fisttpll
movsb
xchg
cs
ljmp
movsl
sub
aad
aam
xor
inc
pop
dec
push
cmp
inc
xchg
sub
sub
cltd
mov
out
xchg
sub
cmp
dec
loopne
fucom
pop
fstpt
mov
fistpl
and
pop
mov
pop
sub
adcb
pop
leave
bound
imul
pop
or
mov
lea
pop
jb
inc
cltd
or
push
out
pop
popf
xor
or
pop
adc
loope
test
cmp
cmp
dec
pop
mov
lods
sarb
lods
mov
daa
mov
pusha
mov
in
es
mov
adc
shrb
lods
pop
fucomp
lret
ret
clc
insb
push
mov
rcll
jge
addb
outsl
movsl
cmp
mov
shrl
iret
cmpsb
ffreep
mov
dec
jnp
rol
mov
rcrb
ret
push
mov
pop
fidivrl
and
jae
nop
aas
mov
jmp
sub
mov
popl
pop
in
sbb
movsb
aas
mov
xchg
sbb
outsl
jecxz
xor
es
lahf
ss
jle
lea
lods
out
insl
push
mov
aas
stos
jmp
stos
cmp
imul
mov
repnz
lds
repnz
jg
adc
pop
cmc
push
or
and
cmpsb
test
push
mov
push
cmp
repz
addr16
jle
mov
sahf
bound
out
mov
xchg
inc
xor
call
mov
out
fstpt
in
mov
pop
mov
pop
push
int
xchg
pop
or
orb
iret
loope
stc
popa
pop
lock
inc
add
addr16
lcall
in
mov
adc
push
pop
and
push
cltd
nop
adc
adc
inc
test
inc
leave
cmp
data16
xchg
rclb
or
testl
add
sub
popf
cmp
test
xchg
stc
icebp
int3
arpl
sbb
outsl
add
rorb
adc
jns
mov
mov
ja
fdivrs
loopne
mov
stos
or
ja
dec
xchg
jl
clc
mov
clts
out
nop
push
inc
stc
mov
insb
insb
xor
xchg
jns
adc
mov
std
or
out
call
dec
aam
push
test
pop
jo
lock
and
dec
push
shrb
rcrl
jg
dec
leave
hlt
loope
es
out
adc
js
sbb
test
ja
repnz
push
cld
add
adc
insb
mov
les
push
fsubl
stos
jnp
sbb
lods
cmc
outsl
pushl
shrl
inc
pop
icebp
pusha
into
dec
sbb
fcomi
adc
gs
andl
orl
icebp
adc
dec
jmp
incl
loope
popa
jmp
xchg
inc
fistpll
mov
mov
jae
sub
sbbb
lods
mov
dec
cmp
lcall
pop
dec
fldt
lods
ds
fimuls
cli
inc
fwait
daa
and
inc
arpl
out
pop
jno
out
ljmp
mulb
pop
cmpsl
out
push
int3
mov
daa
pusha
data16
pop
cmp
mov
sub
jmp
je
xchg
cs
sub
mov
fildl
dec
shlb
cwtl
loope
pop
push
ret
adcl
lahf
repnz
leave
pusha
mov
inc
out
shrb
ds
insb
bound
xchg
int
cmc
cmp
cli
jae
dec
or
xchg
scas
outsl
push
sbbb
and
negl
adc
hlt
int3
add
cmp
ss
daa
stc
lret
loop
dec
pop
hlt
jo
bound
pop
cmp
ds
mov
adcb
testl
and
xor
inc
and
adc
push
pop
add
into
icebp
arpl
jg
sahf
jnp
insl
stos
sbbb
outsl
jg
mov
mov
jbe
clc
and
flds
pusha
sub
dec
pop
or
stc
mov
aad
mov
xchg
jl
xorl
scas
sbb
int3
sbb
nop
cmpsb
mov
push
mov
rolb
dec
inc
sbb
push
or
out
shr
xor
push
xchg
sub
dec
pop
lock
outsl
pop
lods
fxch
or
mov
mov
aas
int
ret
lcall
xor
fldl
inc
mov
scas
test
sub
imul
lret
popa
cltd
inc
mov
jns
cli
sbbb
enter
sbb
xchg
std
cmpsb
cmp
add
jmp
push
int
test
xlat
push
cmc
faddl
rcrl
addr16
cmpsl
pop
ret
lock
test
add
popf
ja
mov
mov
sub
inc
or
fs
xor
loopne
xor
or
fidivl
jmp
imul
fadds
mov
jb
dec
jmp
mov
nop
jl
sub
stc
imul
or
inc
pop
nop
or
sbb
notl
divl
cmc
mov
subb
fsubrl
jmp
inc
sub
movsb
and
cmc
cmp
cltd
xchg
sub
or
fcom
scas
mov
mov
mov
inc
unpckhps
hlt
jecxz
ds
lea
sbb
jmp
mov
call
lock
mov
fmull
aam
leave
jno
rcl
xchg
test
into
mov
sbb
fistpl
test
sub
loop
push
mov
fsubrs
les
fdiv
lret
out
aam
leave
ret
btrl
je
out
inc
and
stos
ret
jg
jecxz
shl
cmc
sbb
push
vpblendd
fisttps
dec
dec
test
mov
jbe
xor
xchg
and
jmp
mov
jmp
andl
ja
and
push
ss
rolb
sbb
fcmovnbe
add
test
fidivs
xchg
add
or
cld
in
dec
jge
push
mov
cltd
ja
push
sub
ss
mull
inc
xlat
dec
lahf
movsl
cwtl
jae
rolb
jae
jne
out
jae
inc
cld
pop
imul
sbbl
ja
inc
add
dec
popa
mov
mov
fldt
std
stos
jne
iret
stos
lret
xlat
mov
popa
mov
sbb
push
es
test
ss
sub
xorb
aad
dec
dec
repz
mov
inc
and
les
xchg
pop
sahf
push
rclb
lea
pusha
rol
repnz
push
loope
adc
adc
mulb
xchg
push
jae,pn
cmp
leave
clc
mov
and
fstps
xor
ljmp
push
test
sahf
mov
mov
jle
sbb
lret
nop
in
mov
adc
lods
and
stos
push
mov
dec
ss
push
leave
jo
sub
lock
shlb
dec
dec
add
xchg
and
push
test
push
je
fidivl
and
mov
in
outsb
mov
xchg
mov
cmp
mov
mov
sub
repz
rorl
dec
adc
xlat
out
sub
mov
std
ss
shll
mov
sub
imul
pop
inc
push
xlat
ficompl
xorb
jecxz
adc
dec
cmp
mov
or
ljmp
xor
repz
sub
dec
add
movsl
and
xlat
lods
mov
popa
pop
pop
add
pusha
test
into
pop
push
cmc
lcall
mov
pusha
ret
xchg
cwtl
push
inc
cmpsl
outsb
out
mov
dec
mov
out
aam
dec
push
int3
cld
or
js
rcrb
cltd
outsl
inc
dec
or
sbb
ret
enter
pop
inc
pusha
cmpsl
push
in
sti
jg
mov
sbb
fnstenv
or
jno
mov
jbe
mov
cmp
and
outsl
mov
adc
cwtl
dec
in
cmp
fnstcw
jbe
lds
ret
out
or
pop
out
in
seta
outsl
mov
insb
add
jp
dec
xchg
leave
fldenv
insb
pop
mov
adc
jle
daa
mov
lcall
out
mov
addr16
jne
jmp
outsb
fwait
mov
push
in
adc
bound
popf
daa
push
mov
mov
cmp
stc
les
cmpsb
fidivl
push
leave
arpl
test
dec
test
lea
cmp
loope
ja
orb
mov
inc
inc
std
xchg
testb
test
push
icebp
hlt
aaa
stos
mov
ficoms
dec
mov
nop
lods
fwait
daa
outsl
xchg
je
mov
cld
das
out
pop
mov
jge
and
push
insl
fldenv
stc
popa
mov
push
inc
mov
dec
xchg
cmpsl
daa
pop
mov
xchg
das
data16
mov
sbb
add
mov
jle
xchg
inc
adc
xchg
sub
shlb
xchg
xorl
movsl
or
into
jp
movsb
cmp
lea
xor
shl
mov
sbb
fisubrs
clc
or
std
lea
push
xchg
xor
dec
pop
cmpsl
sti
pop
add
in
roll
frstor
sub
sub
dec
ret
aad
stc
cmp
cmc
sub
push
sarb
mov
ja
jmp
mov
mov
mov
dec
pop
add
add
mov
push
lds
cmc
ja
mov
pop
daa
xor
in
adc
xor
xor
push
xor
shr
sub
and
dec
pop
test
ss
sub
stos
popf
cmp
mov
or
adc
lods
in
lods
outsl
in
fisttpll
xor
inc
sahf
push
xor
outsb
cli
xchg
sahf
jg
add
cmp
scas
insb
dec
pop
and
lahf
xchg
sti
mov
fcmovu
dec
dec
jl
insl
mov
adc
repnz
sub
jp
addr16
xchg
imul
out
push
cmp
aaa
into
pop
pop
pop
jnp
mov
add
pop
int3
outsb
push
jns
out
test
dec
or
jg
movsl
cmp
sub
icebp
mov
sahf
xor
fcmovnb
and
cmp
int3
jbe
arpl
push
pushf
stos
aam
push
and
push
hlt
lods
aas
mov
cltd
inc
into
jl
arpl
and
aad
lcall
and
xchg
notb
in
sbb
cmp
pop
or
call
out
xchg
outsb
xchg
mov
cmpl
add
lock
or
adc
scas
fadds
cmpl
ja
and
sbb
xchg
add
jae
aaa
jb
jbe
out
decb
cmpsl
std
xlat
inc
test
outsb
mov
dec
or
in
inc
aas
ljmp
mov
push
xor
inc
fimull
fucomip
jle
int3
movsl
mov
les
push
xlat
mov
das
jb
push
shll
mov
and
scas
inc
gs
mov
mov
sahf
movsb
and
pop
xchg
dec
jbe
int3
pop
xchg
add
test
lahf
xor
xchg
ljmp
les
mov
lods
jge
jb
fcmovne
or
test
orl
stos
imul
xchg
inc
add
mov
jne
inc
xor
ret
ja
out
addr16
int
mov
cmp
fsts
add
pusha
lret
shll
mov
xchg
push
xchg
add
in
icebp
push
scas
adc
and
popa
data16
push
or
xor
lds
je
push
icebp
lret
cmc
out
add
jecxz
mov
sti
or
gs
jmp
sbb
xor
push
popa
jmp
enter
arpl
mov
frstor
pusha
push
or
pop
push
mov
pop
repz
push
jno
vmovsldup
mov
adc
gs
sbb
cmp
xor
les
cmc
nop
cmp
push
nop
pushf
repz
stos
add
mov
push
in
dec
aad
dec
ret
popa
mov
jo
nop
bound
repnz
xchg
shrb
rorl
inc
daa
jge
mov
xor
clc
in
push
daa
mov
pop
out
adc
sub
xlat
imul
or
or
sbbl
pop
cld
lret
test
mov
fwait
stos
add
ffreep
jle
enter
or
jae
add
rorb
mov
lahf
fidivl
cld
xor
push
sub
xchg
jne
movsb
sti
fcoms
cltd
push
push
jo
bound
iret
fstl
shll
xchg
push
fldenv
sub
adc
or
cmpsb
cmpsl
negb
mov
out
pusha
or
lahf
adc
pop
sar
dec
mov
sbb
cmp
pop
jmp
mov
enter
jae
mov
fiadds
push
cli
push
adc
aas
cltd
sub
dec
adc
cmpsl
add
cmp
dec
imull
mov
jnp
ss
iret
jp
int3
push
loopne
lret
std
std
push
or
popf
shlb
inc
gs
ss
leave
loop
je
insl
jnp
popf
pop
test
loope
add
fidivs
push
cmpsl
shl
and
ljmp
sti
stc
jg
push
sub
ret
int
popf
cli
popa
mov
inc
into
insb
loop
iret
inc
in
lret
fisubrl
std
xor
xor
loopne
imul
jae
inc
push
in
jb
testl
leave
add
jecxz
fucom
jle
mov
cmpsl
imul
jnp
cltd
sti
popf
pop
rcl
orl
cmp
andb
pop
sbb
mov
cwtl
jg
jns
ss
pop
cwtl
out
push
inc
inc
mov
test
inc
fsubl
xchg
cld
cmp
fdivrl
dec
cltd
jno
or
or
addb
mov
sar
imulb
mov
mov
mov
rcll
pushf
or
imul
cs
repnz
sti
cmp
mov
pop
fsubrl
pop
cmc
aaa
ds
mov
or
mov
jbe
jle
or
jo
dec
imul
insl
jno
xchg
je
mov
dec
push
jnp
stos
adc
mov
xchg
fwait
lods
popf
sub
adc
push
scas
addl
dec
pop
cld
or
fsubl
ret
cltd
push
xor
out
push
fcmovne
insl
push
sbb
test
cmc
mov
inc
sbb
pop
sahf
fiadds
ret
ss
out
mov
and
or
out
addr16
sti
pop
repz
shl
int3
hlt
xor
adc
xor
jmp
add
jb
xlat
js
push
stos
clc
aad
out
mov
loopne
dec
jle
fisubs
mov
and
push
adc
out
lret
cld
dec
insl
sub
adc
stos
jmp
in
aas
cmp
push
scas
mov
cmpsb
sub
xor
pusha
out
js
int3
adc
movsb
ficompl
data16
lcall
inc
ljmp
lahf
dec
popf
pop
lods
cmpsl
aam
int3
pop
lret
mov
ljmp
pop
iret
or
mov
mov
jg
shrb
andb
mov
cmp
mov
scas
mov
xor
insl
xor
jno
add
cmp
fldl
cmp
nop
cmpsb
sahf
stos
xlat
mov
push
lret
inc
sub
into
jle
pop
cmp
stos
mov
fmull
and
shr
push
mov
xchg
lods
xchg
ror
loop
mov
lea
sub
pop
push
insl
and
push
shll
xor
inc
dec
mov
mov
mov
mov
mov
enter
inc
outsb
test
sahf
dec
orb
imul
mov
jp
imul
repnz
lcall
lret
cmc
adc
push
mov
lods
inc
ret
sti
mov
cmc
xor
push
mov
dec
xchg
pop
ljmp
add
jo
push
mov
orl
xchg
and
fbstp
rorb
loop
popf
jmp
mov
and
fisttps
shrb
xchg
aam
inc
sbb
cmp
pusha
or
std
hlt
mov
inc
das
mov
pop
xchg
loopne
pop
xor
fiadds
and
sub
xchg
test
xor
and
pop
push
inc
lret
imul
fisubs
adc
stos
ds
jmp
scas
inc
pop
cmp
shrl
dec
mov
mov
cmp
pusha
nop
and
fdivr
or
cwtl
das
jg
popa
fmuls
jmp
pop
mov
inc
or
cmpsl
les
call
sbb
push
rcrb
push
in
orl
pop
sbb
mov
test
notb
push
push
imul
ss
enter
dec
lods
push
jp
mov
outsl
test
cmp
pop
jbe
mov
int3
mov
pop
sarb
pop
cmp
int3
mov
loopne
pop
lea
pop
lock
dec
je
call
pushf
pop
jno
adc
insb
ret
leave
mov
adc
or
out
scas
rcll
dec
aaa
roll
in
insl
shrb
pop
mov
outsl
inc
push
lock
sti
popw
stos
add
xchg
mov
loop
lock
int
cmp
ljmp
push
sub
addl
pop
add
sarl
sub
shll
push
rcll
add
mov
dec
xchg
fwait
xchg
cs
lods
pop
cs
push
fst
lods
xor
stos
or
and
xchg
mov
mov
add
xchg
xor
repz
repnz
dec
loope
sti
test
and
ds
inc
orl
lods
xor
in
xor
xlat
fsts
lds
ljmp
jecxz
lret
adc
mov
adcl
pop
divb
and
xchg
jge
jge
test
shlb
jo
push
mov
or
aad
loope
xchg
sahf
adc
jae
in
aaa
dec
mov
pop
ljmp
pushf
jae
in
inc
out
and
test
addr16
push
das
pop
pop
insl
inc
push
fdivs
shrl
mov
scas
mov
fldenv
rcr
loop
cmp
movsb
cmp
aam
push
jnp
shrl
sarb
xchg
mov
push
icebp
mov
add
into
sub
jns
cmp
mov
jno
insl
fmull
test
push
imul
xor
ret
hlt
pop
es
push
inc
test
pop
rdtsc
enter
and
pop
std
inc
mov
mov
push
hlt
mov
jle
in
sub
divb
gs
add
hlt
cmp
sbb
pop
cmp
inc
dec
push
js
test
andb
xchg
rclb
pop
scas
inc
hlt
push
cmc
add
stos
add
jnp
xchg
cmp
inc
mov
inc
mov
xchg
je
outsb
fwait
add
and
mov
or
dec
loopne
xchg
imulb
cmp
xchg
dec
popf
push
xor
dec
cld
notl
jnp
xor
repnz
xor
jbe
stc
popf
fistl
jp
into
repz
dec
jecxz
mov
fld1
enter
es
pop
xchg
add
pop
mov
and
and
sbbb
dec
test
pop
and
cmp
insb
cmpsl
in
mov
mov
in
dec
scas
pop
jg
imul
cmp
jns
sbb
add
in
lock
xchg
pop
test
jp
pop
addr16
lods
fwait
subl
jecxz
shlb
mov
addr16
pop
sub
jbe
loopne
pop
pop
ror
mov
cwtl
outsl
lret
dec
shlb
and
sub
leave
pop
lret
lock
jl
sti
out
test
add
fwait
jge
mov
mov
cmp
pop
clc
jae
lea
pop
cmpsl
jmp
mov
cwtl
mov
aam
leave
sub
jae
cmp
mov
movsb
cmp
sbb
jp
ret
ret
dec
dec
mov
or
sbb
xor
or
fidivrl
dec
arpl
shlb
adcb
push
and
cmpsl
lock
std
aaa
xchg
mov
les
sub
adc
outsl
mov
mov
sub
cmp
xlat
nop
daa
or
inc
in
out
xor
pop
negb
jb
ret
or
movsb
cmp
xlat
in
cmp
dec
sub
loope
sub
out
rclb
popl
xchg
mov
pushf
sbb
jge
jmp
fisubl
sub
ss
addr16
and
xor
mov
push
jbe
xchg
push
cmp
and
push
push
lret
sar
enter
int3
mov
negb
dec
or
adc
add
cltd
in
cwtl
pop
jg
cmp
mov
cmp
aad
sbb
fidivrl
pop
lret
sbb
lret
mov
inc
mov
sahf
bound
mov
mov
and
lods
xor
aad
aam
je
xor
or
jle
mov
push
jl
inc
stc
pop
xchg
adc
and
pop
enter
in
js
and
pusha
push
sbb
mov
sub
mov
push
adc
pop
xchg
leave
fcomi
bound
dec
mov
ret
jno
int3
loopne
sbb
or
push
xor
add
adc
push
inc
push
jp
jnp
lret
push
mov
xchg
loop
xchg
mov
and
cmpsb
les
je,pn
pop
sahf
and
std
pop
mov
jg
mov
in
cpuid
sbb
lock
lods
xchg
sub
sbb
stos
adc
scas
jns
or
or
loope
inc
and
inc
mov
add
sub
pusha
inc
inc
ficompl
and
cmc
rcll
sbb
lods
cmp
lret
data16
fwait
inc
int3
xor
out
dec
pop
pop
movsl
sub
ss
pusha
cs
cmc
pop
decl
adcb
mov
ret
add
inc
or
daa
cmp
or
push
test
cmp
es
pushf
xor
cmp
imul
stos
ffreep
pop
out
enter
mulb
mov
sub
test
mov
add
dec
mov
jae
and
cmp
in
cwtl
and
inc
pop
pop
cltd
mov
clc
cmp
cmp
ret
xor
stc
dec
dec
cmp
inc
lcall
inc
gs
aas
dec
cmp
xlat
inc
fucomi
mov
pop
data16
mov
mov
cmp
xor
fcom
mov
pusha
das
mov
pop
in
adc
dec
stc
outsl
out
imul
mov
inc
ja
jb
setae
pushf
popf
fs
jno
push
mov
scas
xchg
lret
in
int
push
shrb
sbb
inc
add
mov
in
std
adc
iret
mov
fldcw
scas
jp
and
cld
adc
popa
and
aad
xlat
mov
shrb
push
inc
adc
inc
outsb
in
imul
int3
and
lahf
mov
js
add
scas
fucomp
cs
clc
cltd
inc
out
adc
adc
dec
pusha
mov
fistpll
ror
leave
pusha
scas
jbe
ljmp
push
inc
fcompl
mov
jl
inc
fs
mov
int
and
stc
adc
lcall
jle
inc
pusha
inc
fstl
cmp
gs
mov
ftst
inc
incb
sbb
idiv
push
xchg
inc
es
push
fs
push
shll
rcrb
mov
jbe
in
std
jae
xchg
xor
mov
mov
cmpb
mov
fbld
mov
je
mov
sbbl
popa
aam
lods
inc
xor
outsl
adc
xlat
mov
sbb
push
jo
pop
adc
pop
jg
xor
sbb
ret
inc
push
cmp
shll
paddw
adc
xlat
stos
sbb
sbb
add
mov
jno
cmp
xorb
mov
loope
les
jno
push
nop
or
sbb
sbb
sbb
jecxz
cmp
cmp
fdivrs
lea
outsb
leave
jg
lods
nop
loopne
je
dec
adc
push
int
pop
jne
out
add
ss
hlt
sbb
mov
xor
out
popa
sbb
or
push
inc
enter
mov
daa
movsb
pop
lock
adc
mov
mov
pop
sub
xor
mov
mov
lock
enter
cmpl
insb
popa
int
sbb
or
jge
cmp
imul
mov
pop
mov
rol
bound
cmp
sahf
adc
sti
mov
rorb
sbb
and
push
pusha
andb
xchg
data16
jnp
pop
xor
stc
js
cmp
insl
jmp
and
gs
dec
daa
adc
xchg
push
xor
nop
lods
pop
cs
sub
pop
test
or
dec
testb
imul
cmp
cmp
test
xor
into
jb
or
xor
inc
or
lcall
cmpsl
pop
sbb
xlat
imul
jp
xchg
inc
scas
adc
jle
addr16
lds
add
adc
mov
pop
enter
es
scas
decb
les
sbb
cmp
cmp
inc
push
push
lret
addr16
and
stc
or
aad
xlat
notl
into
int
rclb
sub
out
mov
fcmovne
add
gs
jns
stos
cmp
fldz
cld
or
mov
test
out
xchg
and
fbstp
xchg
scas
into
movsl
pop
pop
iret
sbb
enter
or
jecxz
sahf
clc
xchg
adc
cmp
add
push
push
leave
pusha
int
data16
sub
ljmp
fisttps
sbb
sbbb
repnz
aaa
in
xchg
mov
jl
repnz
cld
hlt
popa
js
or
sti
push
add
addr16
or
mov
test
cltd
mov
shl
push
and
jo
jae
int
cmpsb
mov
xchg
daa
sbb
cmp
add
pop
jne
test
adc
mov
cmc
and
jl
lock
sbb
mov
push
and
mov
cmc
mov
test
fwait
gs
lods
fisttpll
and
stos
or
cmc
test
stos
int
arpl
mov
jg
cs
and
jo
subb
dec
jecxz
jns
cmp
das
lds
mov
or
subb
xchg
jmp
pop
test
test
js
daa
sbb
jo
add
lock
and
inc
sub
jmp
ljmp
mov
xchg
sub
movb
popa
sarl
pop
pusha
mov
pop
xor
inc
pop
out
inc
xor
sbbl
dec
jmp
stc
ja
orl
mov
sbbl
sub
inc
out
adc
xor
add
inc
xchg
adc
aaa
pop
and
mov
cmp
les
shl
aaa
jnp
lret
scas
out
mov
gs
jmp
scas
inc
sahf
xchg
jae
xchg
xor
data16
adc
inc
xchg
and
js
xchg
popf
ret
lahf
xchg
in
or
popa
sahf
xchg
rcrl
cmc
lock
cmp
in
fwait
sbb
xor
imul
cld
lcall
in
scas
je
lret
ljmp
mov
xchg
cld
xchg
leave
xchg
mov
push
daa
jnp
mov
mov
lcall
or
adcb
es
mov
clc
jp
mov
and
mov
bound
sbb
sbb
mov
cli
lods
sub
or
fmulp
js
aaa
mov
mov
pop
test
stos
sbb
addr16
jp,pt
sbb
fwait
pop
and
cmpl
sbb
rsm
je
jmp
adc
sbbb
aam
jmp
pop
out
mov
cld
or
mov
test
call
movsb
data16
sbb
pushf
jg
sbb
mov
xchg
inc
dec
pop
icebp
hlt
mov
add
movsl
xor
inc
incb
xor
mov
mov
inc
inc
repnz
movsb
mov
xlat
stos
les
xor
ret
outsl
insb
add
jbe
jae
popf
xchg
insb
add
fiaddl
and
daa
f2xm1
pop
loop
gs
inc
dec
out
shrb
mov
sub
mov
mov
mov
data16
call
lret
into
jnp
sub
push
and
pop
xchg
cli
inc
adc
loopne
and
scas
and
sub
cmc
jo
jge
cltd
orb
jnp
mulb
inc
stos
jne
jo
out
movsl
test
aam
insb
add
js
cmp
mov
jne
aam
dec
stos
xor
loopne
mov
mov
xor
data16
dec
add
or
pop
addr16
fwait
jb
xor
sarl
lods
cmpsb
mov
fists
mov
add
xor
les
xchg
call
push
jne
cmp
push
mov
dec
addl
push
fchs
data16
push
fsubrl
dec
jp
insl
cs
mov
xchg
push
incl
mov
cwtl
mov
rolb
and
mov
into
adc
int3
and
xchg
pop
mov
outsl
lods
mov
sbb
push
loopne
insb
jmp
mov
ljmp
mov
rol
movsb
mov
enter
jmp
inc
adc
in
mov
add
test
lock
aaa
adc
ret
popf
sub
stos
aas
push
hlt
in
xchg
daa
in
sti
mov
fadd
dec
cmp
outsb
stc
mov
xor
shll
mov
divl
xchg
ret
outsb
loope
ret
repz
pushw
and
into
out
inc
in
test
stos
add
fldcw
or
push
test
shrl
and
push
jecxz
adcb
mov
and
cld
shrl
int3
inc
arpl
mov
outsb
fwait
ljmp
sbb
push
push
leave
xchg
jo
out
push
lods
and
popf
cmp
xchg
dec
add
popa
cld
daa
in
pusha
ds
pusha
sub
or
and
dec
mov
data16
loope
das
jg
mov
sub
cmpsl
lret
rorb
mov
and
xchg
cmp
in
jns
popa
adc
push
scas
cmpsb
xchg
dec
repnz
scas
inc
xor
xlat
insl
loopne
cltd
and
and
enter
popa
leave
adc
sub
in
dec
and
cmp
lahf
add
int3
test
jbe
add
xchg
mov
pop
imul
xchg
mov
vpslld
or
repz
pop
and
mov
dec
daa
ja
mov
and
sub
imul
lcall
push
por
lcall
adc
and
mov
mull
ret
call
adc
inc
aas
push
jmp
arpl
fdivrs
icebp
xchg
fstps
adc
and
sub
les
adcb
shlb
les
mov
out
push
scas
jle
mov
jge
js
addr16
nop
cwtl
pop
inc
inc
ret
xor
jg
inc
inc
sbb
inc
rcrl
fldl2e
push
inc
xor
xchg
xor
mov
push
cltd
dec
aad
xor
insb
cld
sub
dec
std
cwtl
je
in
clc
rorl
das
js
cmp
sbb
inc
push
ret
data16
xchg
cmp
arpl
and
adc
sbb
js
cmp
icebp
in
dec
es
push
nop
ljmp
repnz
lcall
mov
cmp
mov
xlat
inc
aas
adc
mov
pop
out
add
add
or
fs
push
cs
js
mov
mov
lods
mov
mov
xchg
ljmp
pop
lock
jecxz
inc
in
jmp
adc
inc
mov
push
shrl
push
loop
or
mov
nop
cwtl
arpl
xchg
mov
mov
xchg
inc
dec
add
shr
loope
in
ds
cmc
pop
pop
add
movsl
iret
lock
subb
sbb
sbb
mulb
pop
push
ja
nop
or
das
mov
jne
subl
sub
dec
dec
inc
dec
leave
xchg
enter
mov
ljmp
mov
imul
inc
imul
addr16
cmp
xchg
sub
sbb
inc
add
scas
mov
push
je
sub
dec
and
dec
and
arpl
popf
icebp
mov
lock
push
jne
test
mov
add
jg
add
stos
push
and
jg
scas
jbe
pop
in
sub
les
inc
ja
mov
sahf
fidivrl
das
cld
cltd
xor
movsb
popf
push
adc
mov
loope
ljmp
mov
outsl
nop
shrl
add
inc
ret
fistps
adc
mov
jmp
push
jbe
addl
push
fiaddl
xchg
mov
pop
outsb
aam
test
outsl
add
popf
bound
add
nop
loopne
mov
jg
and
scas
call
push
xor
pop
js
aam
push
dec
xchg
sub
cmp
lcall
sbb
sub
mov
lahf
out
pushf
dec
dec
xchg
mov
dec
add
xchg
int
mov
repz
addl
or
and
divl
stos
push
test
jmp
jg
inc
or
out
outsb
out
cli
lahf
fisubrl
mov
xor
adc
and
pop
or
test
fsubr
push
adc
sub
pop
idivb
jg
out
cltd
jle
shr
jo
lock
and
out
mov
sbb
shll
push
sbb
sbb
das
mov
cltd
adc
mov
pop
pop
lods
push
aad
enter
pop
insl
rep
pop
divl
jl
js
or
xchg
stc
lods
pop
and
sbb
inc
sub
or
aam
pushf
out
cmc
frstor
inc
fs
xchg
into
sbb
sbb
ljmp
push
or
addb
dec
arpl
out
in
mov
pop
pusha
and
rcl
mov
testb
mov
inc
sti
dec
movsl
push
rorl
mov
les
pop
test
mov
daa
lcall
sub
stos
inc
dec
or
dec
push
jae
fcmovnbe
addr16
fdivrs
lods
dec
mov
stos
sub
dec
popa
sub
jle
enter
ds
shrl
mov
mov
call
sti
ja
ss
cmc
jp
mov
loopne
js
lds
int
outsl
xchg
sub
sti
outsl
push
rcll
or
mov
popa
cmp
cwtl
je
lret
inc
pop
out
lods
popf
iret
push
mov
sbb
inc
adc
stos
jecxz
sbb
leave
leave
shlb
mov
and
imul
stos
cmp
jge
sub
cmp
inc
mov
notb
flds
add
inc
jle
out
xchg
cmp
and
sti
xchg
stos
icebp
push
mov
mov
aam
or
jae
xchg
sub
lods
lock
ret
repz
divb
mov
inc
stos
xor
push
insb
clc
es
fsubs
or
adc
xchg
sbb
mov
mov
je
inc
fdivrs
pop
push
sub
sti
stos
xor
or
loopne
out
rorb
scas
pop
xor
push
fdiv
out
gs
pusha
int3
xor
stc
call
and
js
popf
adc
cmpsl
jg
fdivs
insl
inc
and
es
testb
cmc
mov
lods
out
mov
jmp
jb
sub
out
clc
je
cmp
fnstenv
rcll
or
xchg
icebp
enter
loope
mov
loopne
out
adc
dec
dec
xchg
mov
lahf
jno
cwtl
mov
adc
fistl
rolb
pushf
cli
sub
pop
cwtl
xchg
push
lahf
out
dec
cmp
dec
adc
test
test
imul
movsl
adc
mov
jno
jp
mov
or
insl
or
and
shrb
xchg
fidivl
adc
push
or
xor
push
aaa
ss
fisttps
add
mov
int3
jae
add
inc
sar
jg
cmpsb
call
cld
or
daa
inc
rclb
repnz
cmp
xor
pop
imul
xchg
mov
fdivl
mov
je
xor
jno
sbb
push
les
sbb
sub
jp
addr16
movsb
add
in
sub
notb
sbb
xor
ss
test
int3
mov
sub
push
ljmp
popf
push
out
je
daa
insb
jle
jns
cmp
mov
lods
inc
out
jge
cmp
add
mov
dec
jecxz
push
mov
insl
mov
dec
js,pt
daa
incb
mov
in
ret
pop
loope
sub
movsb
loopne
gs
or
fidivl
fwait
negb
inc
jmp
insl
sub
ja
push
idivl
fstl
xchg
push
pop
loope
frstor
xor
cmp
lahf
imul
dec
sbb
ds
push
movsl
clc
sbb
ja
dec
cld
cmp
clc
jno
insb
push
push
and
add
add
or
adc
sbb
xorb
popa
and
lods
dec
jno
jae
ss
mov
je
shll
add
sub
sub
jmp
aad
jge
xchg
push
js
xchg
sub
push
out
dec
cmp
in
js
xlat
push
imul
sub
push
loope
rorl
xor
sub
add
sub
cmpsb
mov
repz
cs
lcall
xor
sbb
mov
and
xor
mov
xchg
fcomps
or
or
popa
inc
addr16
subl
push
js
dec
push
and
jnp
sub
enter
adc
push
push
inc
push
popf
stc
fsubr
shrb
cmp
mov
lret
xchg
popf
mov
aas
adc
movl
or
sbb
sahf
clc
ljmp
pop
xchg
jecxz
repz
rcrl
push
adc
xchg
jae
mov
mov
fsubr
sub
add
insl
mov
mov
aad
das
mov
mov
aas
aam
call
cmc
ret
xor
arpl
cmpb
sub
dec
sub
xchg
fs
rcl
jmp
test
aas
int3
fnstenvs
pop
inc
pusha
lea
stos
mov
out
cli
enter
or
orb
or
jp
decl
hlt
std
xor
push
jae
sub
pop
sti
cli
pushf
xor
inc
jge
jae
icebp
adc
fwait
or
push
test
in
jle
xchg
scas
mov
outsl
push
inc
mov
jns
lea
jns
or
leave
dec
or
mov
mov
ficoml
xchg
xchg
mov
shll
jnp
sub
mov
push
xor
je
adc
into
aas
xor
dec
mov
xchg
push
add
and
stos
fimuls
jnp
lahf
out
in
pop
ja
ud2
xchg
jbe
ja
ret
rcrl
inc
ljmp
ljmp
sub
mov
int3
push
or
arpl
dec
stc
je
adc
adc
les
mov
inc
loopne
xchg
mov
leave
lahf
jmp
adc
aaa
add
inc
adc
adc
push
push
int3
pop
stos
cmp
popf
je
ss
lea
pop
scas
in
cmpsb
mov
mov
xchg
inc
not
xchg
mov
movsl
ds
iret
push
scas
or
sub
inc
imul
pop
mov
xchg
data16
adc
push
mov
sbbb
and
sub
jg
xchg
mov
cltd
or
or
les
jnp
sbb
into
fdivp
pop
insb
js
clc
xor
push
xchg
mov
in
in
stos
dec
dec
xchg
dec
xchg
addr16
out
mov
inc
xchg
ja
pop
mov
dec
mov
pop
xor
pop
xchg
test
mov
out
mov
aam
rclb
add
cs
dec
jge
xchg
or
cwtl
mov
mov
sbb
xchg
add
stos
mov
xor
lret
out
test
pop
hlt
in
outsb
rcrl
lret
es
jb
mov
pop
mov
stc
shlb
add
mov
ret
dec
adc
inc
add
pushf
mov
and
out
inc
popa
sbb
mov
jecxz
xchg
xlat
xchg
pop
mov
rolb
mull
inc
sub
add
lea
mov
pop
fsubrp
sbb
in
or
dec
lahf
push
stos
imull
mov
add
push
inc
lods
pop
xor
outsl
mov
shl
sbb
scas
or
mov
stos
test
test
int
aam
inc
ja
inc
add
xor
mov
inc
stos
jle
push
mov
mov
jne
jae
xor
fmul
rorl
xchg
pop
ret
inc
mov
shrb
sub
jo
sub
into
cmp
jg
add
in
push
dec
push
push
xor
sbb
mov
sbb
or
push
sub
mov
jecxz
add
xchg
pop
hlt
push
les
push
adc
push
add
push
add
mov
dec
movsl
out
mov
xchg
jp
fdivrl
mov
in
mov
xchg
out
cmp
outsb
sub
mov
popf
xchg
jl
dec
xchg
xchg
outsb
dec
imul
adc
shrl
imul
dec
inc
shll
cli
add
mov
adc
pop
stc
iret
mov
sarb
hlt
pop
and
jns
mov
stos
jp
fstp
test
adc
push
push
cli
mov
jge
or
sbb
fstpt
mov
pop
sub
insl
add
xor
inc
cli
pushf
fbld
adc
push
push
aad
test
push
pop
movsl
sub
lods
adc
jbe
enter
cmpsl
pop
aam
mov
sub
inc
into
aaa
into
jmp
xchg
jo
loop
mov
push
inc
pushf
mov
adc
pop
lods
je
fstl
cmp
mov
pushf
gs
daa
testb
xchg
out
mov
into
mov
subl
cmc
xchg
daa
and
or
gs
xor
and
add
fisttpl
iret
pushf
shrb
xchg
scas
ret
pop
jb
or
inc
shlb
ss
loope
fisubl
stc
add
jge
mov
cmpl
or
in
dec
sbb
mov
sub
dec
add
cmp
rolb
inc
shr
into
iret
lds
dec
dec
xchg
mov
cmp
push
mov
sahf
adc
and
in
clc
mov
fs
pop
jg
fdivs
jecxz
clc
and
sub
adc
mov
fcoms
fildl
movl
sub
inc
adc
in
cli
jno
or
nop
push
cld
pusha
loope
push
pop
adcb
push
adc
adc
pop
popa
fs
jbe
imul
call
adc
or
jge
mov
pop
loop
or
mov
in
ds
loop
je
dec
ds
popf
jae
jecxz
xchg
or
or
push
push
push
inc
jmp
fcoms
mov
imul
loope
repnz
mov
inc
adc
cmpsb
xchg
ss
loopne
hlt
mov
pop
sbb
jge
test
leave
int
adc
and
inc
push
cli
mov
pop
loopne
aam
cmpsb
lea
or
adc
mov
mov
cs
bound
imul
and
push
mov
xchg
xlat
xchg
movsl
fs
pusha
pushf
addr16
and
and
jne
adc
sbb
scas
setp
lock
lods
cmp
shlb
mov
in
scas
inc
push
andl
and
lret
and
lods
mov
stc
popf
jmp
mov
jno
insl
mov
cld
test
and
test
pusha
lods
out
repz
lret
xchg
arpl
lods
mov
pushf
push
and
fnstsw
dec
cmc
and
shlb
out
shl
sub
lahf
lods
les
jno
adcb
or
imul
xchg
push
jmp
sbb
inc
adc
jb
push
es
popf
fidivrs
aas
cmp
jbe
pop
test
ret
std
jecxz
jbe
outsb
xor
xchg
cmpsb
jge
vprotb
xchg
cld
fldenv
adcb
leave
mov
push
sbb
jns
fwait
shll
stos
popf
add
int3
pop
sub
pop
mov
das
fcoml
cmp
cmpsb
loop
fs
popa
inc
jg
inc
push
xor
mov
pop
sbb
mov
cmp
jp
ficompl
insl
adc
sahf
add
lahf
out
or
push
cs
push
push
cli
test
fsubrl
cmp
pop
sbbl
mov
lcall
loop
dec
insl
fbld
cmp
loopne
mov
push
add
jg
iret
sub
imul
mov
test
xor
cwtl
roll
jae
movsb
movsl
int3
loop
or
ffree
xor
in
mov
push
lcall
in
ret
xchg
aas
dec
test
xchg
ja
add
shrb
cli
sub
add
cmp
and
outsl
xchg
mov
test
add
aam
push
scas
sub
and
pop
inc
add
lea
sub
nop
dec
dec
ljmp
or
aaa
push
out
xchg
inc
mov
out
mov
dec
aam
faddl
sbb
int3
xor
lahf
inc
rol
aam
jmp
inc
or
or
das
outsb
sti
jle
test
lret
es
jl
inc
mov
and
mov
sbb
mov
and
notl
fs
jmp
xchg
xorb
mov
inc
dec
mov
aaa
jnp
popa
pop
inc
stos
inc
ss
add
arpl
mov
mov
arpl
enter
jns
xchg
ljmp
jns
dec
hlt
leave
enter
mov
jle
fidivrs
popa
test
xchg
push
mov
mov
fisubrl
sbb
mov
test
leave
outsl
add
es
imul
mov
es
mov
pop
or
into
xchg
ja
enter
jb
out
idivb
cmp
xchg
leave
xor
cs
dec
hlt
dec
xchg
fnstcw
outsb
cmp
lahf
cs
push
add
popf
fwait
mov
outsb
add
test
repz
sub
mov
add
sub
jl
testl
sub
xor
mov
pop
push
fwait
popl
sub
outsl
xchg
push
repz
sub
mov
mov
out
xor
jmp
sub
mov
ret
jp
mov
push
pop
icebp
sbb
ficomps
jle
or
xchg
mov
scas
test
nop
repz
mulb
ret
inc
lret
push
mov
mov
stos
mov
jns
loope
inc
rorl
dec
dec
dec
adc
pop
xor
mov
cli
test
popa
xor
pushf
xor
xor
gs
mov
jns
int3
mov
mov
iret
xor
movb
inc
fld
jl
and
fnstcw
or
sub
into
arpl
lret
cld
or
pop
ljmp
mov
movsb
addr16
outsb
loope
sbb
xor
push
fwait
mov
nop
xchg
insb
stos
ljmp
or
sbb
nop
in
pushf
jg
out
test
and
pushf
cld
xchg
fidivs
std
sti
jbe
enter
lret
addr16
dec
loop
xchg
bound
mov
lds
out
stc
pop
dec
ret
mov
pop
pop
pop
loop
insl
or
push
sub
add
js
cmc
xor
fildll
push
ss
cmc
inc
aas
std
icebp
push
cmp
or
stos
fcomi
movsb
pop
push
iret
lods
icebp
mov
and
xchg
shl
movl
cld
aam
insl
in
push
jge
push
outsl
repz
lock
leave
ds
xchg
jo
inc
icebp
incl
in
push
add
sarb
cwtl
adc
lods
lahf
test
rorl
insl
insb
mov
pusha
sbbb
out
out
xor
push
int3
mov
into
aas
pop
jbe
test
rcrb
int3
inc
in
test
das
dec
icebp
jbe
lret
xor
xor
dec
xor
dec
sbb
jecxz
and
dec
insl
shl
aas
pop
lahf
pop
outsb
daa
jbe
enter
push
ljmp
sub
dec
or
or
popf
test
mov
scas
cld
jae
xor
push
das
pop
xchg
push
pushf
sti
loopne
jno
mov
sti
mov
sahf
sbbl
jmp
xor
cmp
lods
jae
or
mov
xor
sbb
xlat
xchg
cmp
or
mov
sti
mov
or
aas
hlt
jmp
clc
pop
adc
add
rcr
ljmp
pop
jne
or
xchg
cmp
mov
mov
ret
adc
rolb
push
ret
loop
fbld
movsl
cmp
cmpsl
jb
inc
fimuls
sbb
int3
roll
popf
add
subl
andl
jbe
in
or
jmp
fidivrl
adc
push
mov
push
mov
jae
mov
ja
fldl
mov
sti
pop
mov
sbb
shlb
cmp
cwtl
in
and
outsl
jmp
dec
sub
cmp
cmp
sbb
insb
xchg
xor
mov
scas
jecxz
sbb
sbb
movsb
pop
out
mov
pop
nop
nop
lcall
mov
add
cmp
xchg
das
aas
ret
subl
fisubrs
clc
pop
cmpsl
xchg
cmp
fidivl
testl
add
sbb
cltd
insb
ret
orb
in
mov
aas
into
jg
ja
cmp
and
pop
mov
jecxz
sti
psrlw
imul
lock
dec
loopne
sbb
pop
jo
ljmp
ds
dec
in
cmp
test
idivl
dec
cmpsb
push
inc
and
pushf
popf
mov
pop
sbb
dec
loopne
cmp
mov
mull
adc
mov
sbb
into
cmc
push
mov
sbb
insb
dec
and
addr16
xchg
pushf
shrl
inc
out
ret
cs
outsl
add
mov
pop
in
mov
enter
mov
ret
jns
in
je
dec
sub
mov
sarb
enter
inc
or
cmpb
out
neg
or
enter
sub
jg
cltd
push
inc
cwtl
int3
lret
outsl
jmp
dec
sarl
test
pop
testb
mov
xchg
push
lahf
xchg
add
fiaddl
push
mov
bound
cmpsl
test
dec
cs
cmp
push
lret
sbb
jp
aam
outsl
loope
imul
rcrl
jp
stos
out
push
sti
rorb
aam
xchg
scas
xor
push
jb
loope
clc
vmwrite
pop
test
jge
mov
mov
jl
pop
ror
xor
cld
mov
popa
xor
sbb
push
shrl
lds
shr
mov
mov
ja
sub
out
filds
pop
insb
out
bound
mov
fildl
pop
jmp
or
jns
mov
into
cmp
imul
xchg
dec
call
repz
jecxz
test
ret
inc
cli
shl
sbb
jne
jmp
lods
mov
jge
jb
lea
and
pop
mov
add
inc
cwtl
mov
out
sbb
leave
dec
xchg
jo
aam
stos
out
std
fstpl
cmp
jecxz,pt
scas
or
or
ss
mov
sbb
rcll
mov
adc
fsubl
ret
fstps
jmp
jge
lahf
push
jg
fmull
scas
push
inc
or
jns
add
and
js
in
sub
jns
lea
mov
aam
add
scas
cmp
loope
mov
sbb
test
cmp
cltd
mov
lcall
and
fdivs
pusha
xchg
imul
mov
dec
scas
pushw
dec
aam
pushf
rolb
sti
or
out
pop
js
loopne
push
sbb
addb
sbb
push
mov
pop
mov
pop
push
into
dec
sub
es
sub
adc
insl
leave
shll
jg
das
fnstenv
aam
pushf
arpl
mov
inc
loopne
push
xchg
jmp
popa
adc
sub
repz
mov
dec
mov
jg
test
jge
das
fcmovb
fcomi
jg
stos
out
mov
xchg
mov
push
aas
dec
loop
sub
stc
imul
mov
leave
push
clc
push
jg
lret
sahf
xlat
push
push
outsb
rcrl
aas
data16
jnp
into
and
pushf
or
mov
cld
sub
test
rorl
add
das
shrl
mov
addl
loop
jae
mov
mov
add
push
in
sar
or
movsl
pop
daa
push
dec
lea
xchg
cmp
adc
aaa
stos
cmp
xor
into
mov
sub
sbb
leave
cmp
lods
nop
and
fstpt
ficoml
mov
and
push
outsb
arpl
push
jb
pop
cmc
into
lds
dec
inc
out
lret
inc
daa
mov
dec
in
sub
jge
pop
mov
or
lcall
xchg
jge
stos
lds
in
xchg
add
out
jne
xor
dec
stos
inc
pop
pop
mov
repnz
movsl
mov
jnp
mov
mov
mov
sub
jne
cmp
pop
imul
sub
sahf
scas
jb
xor
mov
jmp
gs
mov
mov
lock
es
or
es
xor
add
hlt
mov
pusha
idiv
outsl
jnp
mov
sub
add
or
scas
cli
xchg
mov
sbb
jmp
fwait
pop
cmc
rolb
outsb
dec
dec
pushf
and
aam
cmp
jle
lds
test
push
in
js
jo
addr16
inc
fldl
pop
ja
fs
mov
lret
jo
aad
test
sbb
sub
jne
movsb
mov
and
pop
pop
or
sub
in
mov
push
stos
inc
push
jecxz
test
int
loop
or
in
mov
dec
inc
std
ds
scas
and
fsubs
mov
dec
fcoms
das
cmp
loope
ja
pop
jo
je
and
cwtl
int
ret
sbb
lods
subb
scas
lea
ss
ret
inc
pop
incb
shlb
and
pop
ss
jae
ret
notl
or
movsb
out
jae
and
test
add
fs
aaa
pop
dec
xchg
mov
jecxz
push
xchg
orb
ja
shlb
mov
test
and
adc
stos
stos
xor
push
jne
push
cmpsl
ss
out
inc
das
je
ljmp
call
imul
mov
pop
or
dec
or
out
inc
fstpl
mov
enter
jmp
xor
adcl
mov
lea
or
fnstcw
shll
pop
mov
fs
dec
mov
inc
rcrl
data16
xchg
test
sbb
push
jmp
loopne
xchg
cmpsl
ret
jmp
pop
add
pop
hlt
push
lods
rorb
fistps
std
cmpsl
push
or
lret
mov
and
mov
and
out
xor
adc
cwtl
out
xchg
jno
addr16
cmc
and
jmp
sub
xchg
arpl
push
xchg
ljmp
xchg
sbb
sbb
adc
popl
mov
cmc
dec
lock
jle
rol
cltd
into
adc
jecxz
ret
insl
xlat
stc
enter
xor
add
xor
lahf
stos
imul
mov
adcb
dec
rcl
add
dec
mov
jge
pop
imul
movsb
int
popa
mov
xor
dec
and
pcmpgtd
push
icebp
mov
lock
cltd
xor
sbb
aad
lret
push
mov
and
inc
mov
mov
mov
cmp
mov
jo
jne
mov
test
sub
aad
sbb
pop
jno
inc
mulb
jno
in
and
test
rorb
sahf
xor
jge
inc
loopne
fisubs
mov
adc
imul
push
mov
inc
or
mov
pop
mov
cmp
and
insl
cli
or
mov
rorb
repz
jns
push
stos
call
mov
aam
pop
insb
mov
mov
or
lods
jns
cmp
daa
mov
pop
les
push
xchg
outsl
ret
nop
mov
lock
mov
add
mov
push
mov
lods
ficomps
or
stos
cmp
mov
lds
xor
sub
mov
movsl
rol
out
and
adc
dec
inc
dec
shrl
jbe
inc
outsb
mov
xor
pop
jo
xor
repz
lret
enter
loopew
sbb
out
dec
flds
idivb
stc
jae
pop
jecxz
jmp
cmp
fbstp
add
dec
or
mov
xchg
pop
sub
jle
cs
cmp
mov
mov
add
pushf
cmp
lods
inc
push
out
pop
mul
mov
mov
or
pushw
jecxz
push
add
popf
dec
inc
lods
inc
ja
scas
es
pushf
dec
sbb
cli
addr16
rcll
mov
loope
mov
pop
cli
pushf
test
icebp
or
rcl
sub
lods
nop
push
movsl
mov
and
push
xchg
adc
ds
xchg
push
mov
mov
mov
adc
daa
mov
out
push
pop
dec
andb
cmp
imull
je
mov
lret
ret
arpl
pop
out
mov
cmpsb
out
mov
adc
mov
es
dec
xchg
jp,pn
fs
cmp
aas
push
jmp
mov
cmp
imul
xchg
and
inc
flds
or
adc
les
jmp
add
mov
add
arpl
sbb
sbbl
add
dec
push
shlb
nop
lahf
cmpsl
dec
or
je
test
shll
jmp
ud0
negl
mov
cld
decl
adcb
sub
lea
mov
xlat
or
scas
cmp
xchg
out
mov
push
in
pop
cltd
push
sbb
or
int
add
push
stos
jg
fnstcw
adc
in
mov
stos
ficoml
xchg
jb
lds
filds
das
or
push
or
adc
rcll
xor
imul
cmpsb
dec
fisttpl
fwait
dec
pop
clc
jg
xchg
push
and
xchg
push
cmc
and
xchg
aaa
mov
dec
lahf
mov
stos
inc
mov
mov
sbb
les
popa
cwtl
mov
pop
out
out
iret
mov
les
or
push
or
out
lods
xchg
out
cmp
xorb
push
fisubl
popa
stc
fs
lea
and
ret
sbb
pop
jl
int
mov
pop
adcb
test
mov
jle
cmp
jnp
imul
pushf
push
nop
add
inc
sbb
scas
ret
shr
pop
jo
push
cmpsb
dec
lahf
stos
jl
pop
rolb
sub
loopne
adc
lahf
sub
mov
inc
push
mov
mov
lcall
adc
cmp
test
ljmp
lea
push
out
mov
les
cmpsl
mov
add
int3
ror
repz
stos
mov
outsl
mov
xchg
xchg
cmp
xchg
cmpsb
push
icebp
jnp
push
in
jl
mov
rcll
nop
stc
shr
sub
sub
nop
push
decb
pusha
dec
movsl
mov
rolb
or
dec
scas
fildll
jbe
add
fwait
inc
push
scas
push
mov
adc
stos
es
les
int3
xchg
jl
movsb
loop
lea
into
insl
ret
hlt
divl
lods
dec
and
scas
dec
cwtl
outsl
les
mov
pop
shl
mov
and
enter
sub
pop
xor
sub
cmp
js
fstps
cmp
das
rorl
clc
pop
push
fwait
sti
pop
popf
adc
out
push
shll
jg
insl
sub
dec
mov
clc
dec
sub
call
cmpsb
push
insl
jecxz
mov
sub
movsb
fiaddl
enter
pop
lret
ret
mov
ja
push
pop
pop
aad
loop
push
adc
ja
nop
daa
jge
fstps
scas
xor
jb
lods
pop
mov
or
dec
and
and
rcl
clc
mov
adc
push
sahf
and
xor
and
xorb
pop
push
aas
xchg
test
bound
dec
inc
sbbl
insb
and
insb
cmpsb
add
out
popf
out
js
pop
loopne
dec
repz
mov
adc
mov
jmp
data16
int3
push
mov
push
jb
out
add
cmp
popa
cmp
or
jns
mov
adc
mov
out
xchg
ja
jp
movsl
xchg
dec
xchg
inc
pushl
cmp
sub
mov
outsl
into
push
ret
adc
cmp
fnstcw
arpl
test
jne
inc
xor
mov
inc
and
stos
loopne
cmp
sub
mov
test
hlt
mov
xchg
push
enter
jmp
xchg
xor
std
js
xor
loop
xor
jnp
push
adc
xchg
aaa
movsb
js
xchg
mov
mov
pop
mov
or
out
xor
outsb
arpl
lcall
pop
mov
aaa
pop
loopne
mov
test
jge
neg
jno
xchg
shlb
mov
and
stos
xchg
sbb
or
out
sbbb
in
cli
aam
push
sti
push
stos
or
fnstenv
inc
stc
cmp
cmpsb
notl
and
cmp
imulb
into
xor
pop
inc
stc
ljmp
push
out
xor
inc
inc
mov
cmp
rcll
inc
jne
ret
shll
or
push
jecxz
or
scas
jg
add
pop
sahf
mov
sbb
dec
jge
mov
mov
repz
cmpsb
cmp
mov
jo
loop
dec
inc
mov
xor
aam
outsb
repz
xchg
mov
sub
cwtl
jg
cs
jl
out
cmp
call
addl
test
mov
and
lcall
std
sbb
loope
clc
std
add
arpl
fidivl
testl
xchg
fisubrs
jb
aad
adc
sbb
mov
mov
out
mov
leave
pop
cwtl
cwtl
das
int3
xchg
aad
lret
dec
and
out
adc
ss
cli
ss
jp
mov
push
out
push
cld
xchg
pop
outsb
icebp
cmc
adc
sbb
scas
ss
sub
mov
insb
xor
arpl
mov
orl
push
mov
sbb
inc
dec
xchg
out
mov
cmp
adc
notl
insb
je
sbb
pop
mov
pop
inc
mov
out
sbb
cmp
mov
call
push
mov
std
shlb
jno
fdivrs
dec
pop
mov
shr
xor
nop
cwtl
and
ja
rcrl
xor
cmp
outsl
cs
loopne
sub
test
xor
lcall
lret
frstor
mov
cmp
fiadds
inc
mov
mov
push
ret
ret
and
enter
cmp
stos
jmp
fwait
mov
dec
xchg
or
outsb
loope
add
add
inc
xor
ds
int3
jg
js
lret
aad
and
gs
out
pop
test
pop
jae
fwait
repnz
int
xchg
jecxz
lock
jns
push
inc
push
lea
fs
or
inc
lods
subl
icebp
mov
pop
adc
leave
int
test
sub
dec
cmp
outsl
fcompl
mov
dec
jbe
pop
and
sbb
mov
lahf
imull
inc
pop
scas
adcb
les
ss
pop
and
pop
aaa
popa
dec
push
mov
sti
cs
push
insl
ljmp
lahf
cmc
js
push
test
jmp
ret
push
sub
mov
pushf
fcmovb
dec
pop
cmp
int3
cwtl
ds
addr16
cmpsl
xor
pop
ret
add
popf
dec
dec
pop
xor
jo
cmpsl
loope
ret
jle
mov
js
outsb
in
sti
lahf
faddl
shl
faddl
cmp
mov
mov
insl
test
test
cmp
mov
setl
mov
mov
mov
push
out
adc
dec
and
jg
stc
and
gs
ret
jl
push
cmp
ja
movsb
lcall
test
mov
pop
jmp
in
jmp
mov
push
icebp
push
ja
andb
dec
mov
adc
pop
push
movb
pop
cmp
stc
mov
int3
inc
lock
stc
cmpl
mov
inc
in
and
hlt
pop
test
jg
sub
clc
shl
cmpsb
test
das
addr16
je
out
sarl
pop
adc
jmp
negb
out
fwait
add
mov
sub
lea
shll
xchg
das
mov
inc
xlat
icebp
adc
and
jae
rcrl
testl
stos
cmp
jne
and
stos
jns
shrl
leave
and
cwtl
push
inc
push
xchg
mov
xchg
inc
int
out
lea
adc
andl
sbb
pop
jmp
sbb
inc
or
fildll
push
es
pushf
loopne
xchg
inc
adc
inc
bound
adc
and
inc
adc
fucom
or
and
lret
sahf
sbb
push
repnz
and
test
mov
ds
outsl
scas
rcrb
dec
mov
xor
iret
data16
push
hlt
lcall
outsl
add
rorb
push
cltd
jbe
mov
shrb
stos
inc
sbb
push
movsb
mov
mov
push
mov
loopne
leave
popf
jnp
xrelease
rcll
outsb
fildll
sbb
dec
adc
stos
loopne
lock
add
js
sub
lret
shrl
arpl
aaa
frstor
cmp
daa
lret
loop
cld
loop
lahf
cwtl
add
pop
sub
sbb
int
cltd
mov
loop
scas
cli
push
aam
jmp
repz
pop
dec
rclb
jp
push
bound
adc
loop
rorl
cli
or
sub
mov
nop
daa
repz
push
sub
xor
gs
mov
aas
cmp
xchg
idivb
scas
daa
notb
sbb
data16
push
adc
push
mov
rorb
adc
repnz
test
scas
loope
orb
cltd
adc
cmp
aam
pop
mov
dec
add
call
mov
jno
lret
out
sbb
cmp
icebp
and
jmp
ja
daa
icebp
dec
inc
movsl
addr16
insl
js
fists
fisubs
mov
push
dec
xorb
in
xchg
nop
push
sahf
test
mov
idivl
ret
pop
js,pt
shll
pop
shrl
sbb
insl
scas
and
pop
dec
dec
pop
nop
pop
mov
shrl
xlat
cmpsb
std
cmpl
sbb
cwtl
dec
xchg
leave
mov
shll
xchg
addb
shl
sub
jmp
je
lods
fcompl
mov
or
adc
je
icebp
pop
mull
cs
shll
and
aam
ljmpw
cmp
cmp
pop
adc
cmc
insl
inc
jne
sarb
in
out
mov
push
lret
pop
xor
loopne
ret
iret
push
inc
fdivrs
cmpsb
cmp
daa
mov
xchg
aaa
popl
jl
lock
cmp
jmp
dec
xor
mov
lret
lret
cmpsb
mov
arpl
dec
inc
hlt
pop
out
cmc
aad
scas
sbb
mov
and
gs
mull
jo
jl
sbb
adc
push
jbe
xchg
pop
dec
push
aaa
pusha
in
cmp
shll
pusha
mov
push
popf
mov
imul
dec
ret
xor
data16
xor
add
xor
lahf
adc
sub
stos
xor
jnp
sbb
es
and
pop
sbb
cltd
test
scas
sbb
sub
jp
lahf
mov
sbb
lahf
xchg
mov
cmp
call
loopne
pop
daa
mov
loop
jecxz
packssdw
orl
add
adc
and
pop
pop
cmpsb
jl
xchg
sub
enter
xor
test
sbb
dec
pop
or
arpl
cltd
push
push
push
popa
add
fsubrs
in
jne
mov
mov
sbb
sbbl
push
sbbl
outsl
fisubrl
cmp
cltd
sub
imul
xchg
jg
mov
loop
push
mov
push
mov
push
mov
mov
pushf
sub
nop
shll
ss
hlt
test
mov
leave
into
or
lcall
dec
push
jp
inc
nop
jae
add
cmp
sbb
add
dec
ljmp
jp
xorb
jp
insb
lea
add
push
add
push
xor
adc
cmp
adc
lret
xchg
jno
shr
jne
push
push
cltd
das
scas
sub
addr16
lods
dec
and
mul
cld
xchg
adc
dec
dec
and
add
cli
stc
sbb
lock
rep
inc
sahf
sbbl
jne
sbb
addb
fildll
cltd
xor
xchg
mov
sub
rcrb
rol
pop
outsb
test
pop
test
mov
hlt
and
mov
divb
data16
loop
mov
inc
sub
dec
int
loop
test
push
mov
cmp
xor
arpl
hlt
mov
into
adc
mov
mov
out
sub
imul
notl
and
test
aam
decb
inc
fidivrl
dec
adc
lcall
xchg
js
int3
jg
pop
repnz
jge
mov
stos
arpl
add
shlw
adc
or
and
sbb
push
lea
lds
test
ljmp
in
mov
or
cmp
add
jl
mov
fimuls
inc
sbb
xchg
and
push
aaa
int3
out
xor
fdivr
xor
out
sub
fwait
push
in
mov
js
pop
push
test
ds
scas
add
sub
fsubl
pop
popf
lock
fistl
mov
dec
xor
loop
sub
outsb
int
push
push
dec
add
add
ds
ret
mov
lahf
iret
xchg
mov
cmp
in
test
mov
cmp
add
and
push
cltd
xchg
push
orl
mov
push
ja
aad
sbbb
and
pop
pop
pop
insl
loopne
jnp
imul
icebp
addr16
dec
fmuls
popf
mov
iret
repz
insl
pop
js
sub
stos
xlat
sahf
out
push
jo
into
pop
scas
add
mov
fs
mov
iret
jnp
jle
jp
sbb
cs
aas
lods
or
cmp
gs
stos
mov
sbb
jp
mov
popf
in
jp
and
in
push
ss
push
aaa
popa
adc
adc
sbb
adc
mov
andb
mov
test
mov
cmp
ljmp
cmp
mov
cmc
std
cli
xor
jmp
adc
sub
outsb
insb
cmp
jno
mov
lret
sub
scas
xchg
hlt
pop
leave
sarb
adc
dec
adc
shrb
repz
stos
out
pop
hlt
in
cmpsb
mov
scas
mov
xchg
nop
dec
in
out
mov
mov
in
loopne
sarb
jmp
ret
dec
test
dec
sbb
icebp
arpl
adc
outsl
movsl
pop
dec
jo
lods
dec
outsb
add
inc
enter
xchg
stc
enter
jl
add
cmp
and
push
jg
stos
pop
sbb
mov
jns
mov
jbe
xor
dec
sbbl
jecxz
aas
dec
add
xlat
push
les
andb
sub
rclb
cmpb
mov
test
rorb
dec
cmc
xor
xor
xorl
test
fimuls
jno
cmpsb
inc
pop
in
xor
in
jmp
xsha1
cmpsb
int3
or
leave
mov
push
push
xchg
mov
leave
or
mov
outsl
aad
xchg
lods
sti
stos
xchg
lds
stos
test
icebp
les
rclb
add
xchg
nop
and
ret
and
xchg
fistpl
fisubrs
hlt
movsl
cmp
lret
inc
xlat
pop
fsubrs
sub
out
push
mov
jge
or
ret
and
pop
sbb
jecxz
sbb
inc
mov
shrb
lods
cmp
int3
lcall
sub
imul
pop
mov
mov
fcompl
mov
mov
fiaddl
rcr
test
xchg
add
std
xor
mov
or
push
sub
pop
sbb
sahf
sub
mov
xor
sti
leave
incl
xchg
sub
lret
lret
negl
sub
cmpsb
lock
and
push
addr16
in
xchg
add
ds
inc
dec
cmp
or
push
pop
adc
push
inc
fiaddl
jmp
dec
andb
pop
adc
es
inc
pop
xor
and
adc
test
stc
nop
aaa
mov
ror
adc
arpl
cmp
sub
mov
add
pop
dec
jne
leave
cmp
cmp
cmpsl
add
leave
add
pop
es
or
mov
les
int3
or
push
test
scas
mov
lds
int
sub
adc
mov
clc
cmp
fadds
testl
cmp
stc
jle
and
shrl
icebp
jo
xchg
inc
push
imul
cmp
jp
pop
mov
sbb
dec
adc
int
and
shl
adc
cmpsl
sbb
lds
fs
loopne
fisttpl
clc
scas
mov
jg
jg
mov
cmp
lret
push
cmpsl
dec
jne
aam
scas
lds
rorb
clc
lds
in
movsl
mov
add
sub
sub
mov
scas
inc
jmp
stc
xchg
out
aaa
pop
rcrl
or
insl
arpl
sbb
pop
test
hlt
pusha
inc
mov
dec
jno
dec
jmp
push
xchg
fldcw
push
gs
cld
and
popa
sub
adc
rorb
push
std
mov
lea
and
inc
push
ss
adc
outsb
ret
xor
sbb
int3
xor
cmp
dec
dec
and
shlb
xchg
test
sub
scas
inc
lds
jp
in
cmp
jbe
fs
clc
adc
jg
gs
xchg
jne
xchg
push
iret
xchg
push
dec
lods
jb
push
ds
jno
aaa
js
out
mov
aas
loope
fidivrl
js
adc
xchg
mov
and
stos
xorl
vmread
cltd
fcomps
or
mov
loope
test
cmp
arpl
sbb
sub
mov
ds
fsubrp
addl
add
mov
mov
mov
add
loope
and
call
dec
or
aam
popa
inc
pusha
xchg
push
popf
cli
xlat
pushf
xor
push
sub
lock
filds
mov
leave
in
addr16
addr16
xchg
sub
or
cmpsb
testb
mov
dec
nop
lods
pop
inc
loopne
mov
push
aaa
into
sub
push
jo
jle
fwait
lahf
push
ret
xchg
cmpsl
hlt
popf
pop
cmp
dec
xchg
push
ds
ljmp
data16
pop
ds
xor
outsl
insb
mov
inc
add
sbb
sbb
sub
jno
xchg
sub
sar
pop
mov
and
xor
daa
pop
push
push
fwait
cmpsl
inc
aad
popf
and
pushf
mov
stos
add
push
subb
fsubrp
jg
inc
scas
inc
jl
mov
mov
dec
leave
sti
pop
lret
fsubl
xchg
mov
arpl
push
in
inc
std
lcall
popf
in
fdivs
loop
pop
clc
ret
repz
popf
push
daa
pusha
or
push
lea
popf
sbb
mov
jnp
mov
sbb
int
mov
mov
lea
mov
add
dec
in
shl
dec
cmp
cmpsb
sub
lcall
loop
or
jae
mov
cli
inc
adc
pushf
or
pushf
lret
mov
xlat
insl
aas
sbb
addr16
addr16
call
push
clc
cmpsl
fsubrs
mov
notb
out
fwait
push
and
leave
hlt
icebp
pop
xchg
mov
mov
xor
mov
rorl
mov
aad
push
sbb
dec
movsb
mov
jp
ds
xor
repz
mov
jge
bound
bound
xor
arpl
adc
jge
jns
push
cmpsb
push
notb
mov
jne
sarb
out
adc
ljmp
pop
fsts
dec
adc
dec
jmp
and
jb
and
scas
test
mov
sbb
pop
or
popa
fs
inc
cld
ja
sub
push
cmpsl
xor
dec
push
pop
mov
jnp
cmp
xor
hlt
add
hlt
pop
les
push
insb
inc
xchg
jno
fsubrs
xchg
mov
lds
stos
mov
mov
ficoml
inc
out
jp
xor
mov
dec
dec
push
cmp
pop
idivb
jae
mov
jne
lock
imul
inc
mov
push
or
pop
adc
test
daa
xchg
adc
sti
fwait
adc
cmpsb
cmp
test
rclb
into
invd
sub
cmp
inc
mov
aaa
mov
jge
lds
mov
dec
mulb
mov
mov
stc
push
push
xor
push
mov
dec
or
sti
xchg
push
mov
push
cmp
mov
push
shl
mov
mov
ffreep
test
movsb
icebp
rcrb
cmpsl
add
inc
aaa
pop
stos
dec
sbb
stos
fldcw
dec
sbb
adc
aad
mov
sbb
push
dec
and
dec
incb
sbb
lret
jl
mov
xorl
repnz
subl
inc
pop
xchg
cmp
inc
js
xchg
inc
lods
ljmp
pushf
pop
sbb
repnz
jae
mull
sahf
mov
or
push
xor
cli
movsl
in
ret
xchg
lret
js
adc
into
sahf
add
mov
outsl
repz
loop
xor
out
mov
les
sub
or
cmp
or
jae
jnp
and
xchg
daa
pushf
pop
sar
into
mov
test
lahf
xchg
inc
xchg
dec
sbb
and
out
jg
imul
or
sahf
aas
add
and
cs
cmpsb
cmp
inc
les
in
adc
fldenv
jne
stos
sbb
xchg
fdivrs
jo
xor
rclb
xchg
fcoms
xchg
mov
adc
fstps
je
inc
pop
xchg
aad
jb
mov
dec
sub
stos
cmp
hlt
xor
aad
dec
pop
and
fnstcw
xchg
adc
sbb
mov
xor
or
jns
inc
scas
push
push
and
int3
incl
add
sbb
inc
psrlq
add
push
push
hlt
inc
stos
inc
jae
faddl
ds
xchg
and
mov
push
jge
fwait
stos
shll
into
dec
and
push
dec
filds
data16
les
lea
mov
in
mov
push
sbb
fcomi
mov
push
es
js
adc
inc
push
push
mov
cmp
mov
imul
mov
push
push
lods
js
mov
jp
jmp
sti
call
cmp
loop
jbe
call
imul
adc
outsl
popa
mov
arpl
testb
pusha
adc
jbe
imul
xchg
mov
cltd
mov
out
lods
std
add
or
jnp
jg
outsb
inc
int
and
pushf
popa
ret
add
adc
and
push
mov
dec
cwtl
idiv
cmp
mov
or
ja
xchg
mov
pop
pop
repz
pushf
jmp
and
and
imul
inc
mov
addl
pop
enter
lahf
xchg
sub
mov
sbb
xlat
gs
pop
pop
popl
sub
mov
idiv
pop
lret
daa
mov
lret
push
mov
push
add
pop
jno
inc
ss
mov
pusha
movsl
inc
push
jmp
sar
xor
adc
xchg
nop
jl
mov
jnp
xrelease
sbbl
cmpsb
test
push
dec
xor
sub
pop
sahf
call
xchg
stos
pop
arpl
dec
loopne
adc
sbb
inc
ds
mov
in
fistpll
mov
pop
in
inc
arpl
jne
xor
pop
sub
aas
jne
cmpsl
test
pop
mov
cmpsl
lret
adc
repz
adc
jmp
sbb
sub
cmp
mov
mov
mov
cmp
push
adc
int
dec
jae
fs
jo
aaa
or
jp
in
mov
inc
xorl
add
rolb
jae
fsts
lret
in
fsts
fcompl
sti
sub
in
and
iret
mov
cmp
adc
pop
sbb
repz
mov
dec
std
mov
leave
cmp
bound
lcall
fdivl
inc
fsubr
jne
cmp
add
sub
or
mov
mov
push
or
and
jmp
inc
sbb
std
out
cmpsl
ficoms
or
and
pushf
xchg
ljmp
mov
icebp
mov
mov
divl
mov
adc
cmpsb
mov
jmp
movsb
icebp
dec
fnsave
or
jbe
movsb
orl
jae
es
std
test
jbe
or
test
inc
push
mov
negl
pop
fildll
sti
enter
fcompl
out
mov
popa
mov
xlat
ljmp
push
or
lahf
push
stc
mov
cmc
adc
mov
popa
sub
mov
subb
js
loop
add
mov
stos
mov
xor
or
push
clc
dec
out
adc
ljmp
insl
jmp
pop
call
out
xlat
inc
test
jns
das
sarb
outsl
gs
adc
push
xor
arpl
sarl
cmp
and
cmp
cs
stos
sarb
mov
or
xor
mov
mov
xor
and
gs
adc
orb
fidivrs
mov
repz
add
ss
out
movsl
sbb
mov
pop
loope
ret
pop
mov
shr
and
push
inc
xchg
or
es
or
add
aad
or
ljmp
sbb
pop
repz
xchg
jp
test
mov
int3
inc
scas
out
jmp
jns
call
or
pop
popa
lods
loopne
sbb
enter
clc
sbb
jp
je
sbb
xor
jo
or
loop
andb
adc
je
adc
xor
xchg
sbb
rorb
cmp
movsb
xchg
pop
enter
mov
xor
mov
dec
xchg
sub
or
or
mov
dec
out
xor
in
popa
cmp
inc
fstpt
fdivrl
push
stos
add
testl
push
jg
adc
fwait
das
mov
xorl
inc
sbb
dec
pushf
ljmp
mov
lahf
xor
daa
xchg
mov
xor
inc
inc
in
inc
hlt
cmp
jbe
pop
pop
call
fsubrs
xchg
jmp
sub
ss
aaa
test
mov
or
cli
jl
hlt
es
test
daa
push
arpl
cli
jae
sub
ljmp
jge
daa
sub
xchg
add
jmp
insb
inc
fiadds
push
jno
lds
and
pop
lcall
lea
mov
data16
mov
xchg
shlb
jge
add
outsb
jo
and
in
cmp
sbb
dec
mov
lods
int
jo
push
jns
fbstp
aad
dec
and
mov
gs
mov
sahf
pop
shlb
movsb
repnz
imul
cmpsl
adc
jge
in
mov
pop
imul
pushl
jle
in
flds
pop
cli
mov
cmp
ja
sub
cmp
or
aaa
es
jns
dec
push
fstps
imul
lds
jmp
cmc
or
pop
fidivl
jno
pop
je
mov
add
aam
dec
or
rcr
in
pop
fstl
sub
cli
jne
sarb
mov
ss
mov
sbb
rcl
xor
push
cwtl
cmpsl
stc
fnstsw
addr16
movsl
xor
push
mov
jmp
inc
sbb
or
sub
jno
loop
daa
push
xchg
lods
jbe
lds
stos
in
push
mov
mov
mov
std
jnp
lock
jb
jno
add
add
popa
insl
add
xchg
divb
xchg
cltd
adc
inc
ret
jns
aaa
mov
int
cmp
inc
adc
mov
push
mov
rcrl
sbb
xor
jg
sbb
test
int3
ficomps
jmp
sbb
ret
leave
sub
addb
push
cmp
outsb
subl
jb
imull
jmp
inc
mov
inc
or
mov
sub
sbbb
andl
mov
pop
lock
mov
cmp
mov
in
cmp
aad
mov
aaa
test
mov
mov
loop
xor
sbb
stc
int3
mov
push
stc
fs
lret
pushf
insl
ds
lods
fstps
xor
mov
jp
push
cmp
ja
cwtl
call
insb
push
in
clc
aaa
pop
out
inc
xor
or
dec
neg
js
push
das
cld
cmp
dec
sahf
pop
cld
dec
add
sub
jb
mov
mov
push
xor
addr16
loope
daa
inc
out
push
inc
stos
data16
xor
inc
test
xchg
dec
in
mov
call
adc
inc
popf
mov
mov
not
rorl
add
cmc
sub
adc
jp
push
mov
test
add
pusha
ret
outsb
jl
cltd
jg
out
sets
dec
jmp
fists
faddl
std
jle
cmpsl
in
push
rcrb
repz
mov
inc
push
or
aam
in
cmc
mov
ds
add
mov
pop
das
fcmove
sub
fwait
mov
movsb
push
cs
jl
ja
push
push
cmpsl
mov
mov
mov
or
mov
push
jne
movsb
mov
out
inc
call
xchg
in
inc
sbb
sbb
push
dec
and
imulb
into
sahf
jecxz
fsubl
std
dec
cmp
insl
loop
mov
push
sbb
sar
adc
leave
out
ret
pushl
xor
and
stc
cmp
sub
fst
mov
fs
add
sub
cltd
fstpl
jg
xchg
test
frstor
or
fs
pop
ja
jg
test
mov
ja
inc
ficompl
cmpl
push
dec
push
push
fisubrl
dec
adc
jbe
add
test
lods
aad
cs
jns
dec
mov
pop
ds
xchg
ds
push
fwait
and
jecxz
pusha
lcall
leave
mov
pop
push
test
pop
scas
das
insl
mov
jmp
cli
dec
push
mov
neg
jb
stc
clc
stos
mov
push
xor
dec
outsl
repz
xchg
sbb
lret
iret
imul
push
mov
mov
fldenv
lock
or
icebp
cmp
ljmp
lds
xor
pop
push
push
adc
imul
sarb
push
mov
adc
push
cli
and
roll
out
das
jno
in
push
dec
add
popa
pop
mov
cmpsl
add
dec
xchg
mov
sbb
jp
sub
ds
aas
addr16
out
inc
dec
cwtl
fdivl
inc
cmp
nop
cmp
ja
out
iret
fmuls
shr
outsb
xor
adc
inc
jns
jmp
scas
inc
pop
enter
fisubrs
aaa
scas
int3
xchg
fsubl
enter
daa
add
nop
mov
sbb
ds
mov
pushf
arpl
int
cmp
int
pop
inc
stos
mov
test
sbb
addr16
out
xchg
mov
enter
lock
sahf
inc
mov
adc
push
test
jns
je
xorb
lahf
cwtl
mov
sti
add
out
je
pop
loop
pop
adc
shlb
jb
cmc
pop
fbstp
adc
std
xchg
js
pop
neg
xor
sbb
xchg
mov
lret
xchg
push
or
cld
in
sti
lret
mov
inc
lret
push
nop
cld
inc
inc
gs
insl
cmc
adc
das
pop
clc
cs
lret
or
out
jge
inc
mov
out
movsl
mov
fsubrs
aam
aaa
scas
shrl
xor
pop
addr16
inc
insl
xor
jg
jbe
add
xchg
sahf
xchg
fistpl
adc
lcall
sbb
sbbl
dec
lcall
aaa
sub
push
imul
movsl
enter
test
jno
ljmp
hlt
out
mov
xchg
dec
dec
lahf
and
mov
sub
repz
xor
push
or
mov
add
pop
jo
inc
pop
adc
jb
pop
xor
icebp
loop
mov
mov
push
lods
cld
popa
pop
adc
xor
push
mov
sbb
xchg
aad
ficomps
loopne
xchg
rclb
xchg
push
pusha
icebp
xchg
stos
push
int
test
lods
mov
push
jb
adc
lds
jle
sbb
mov
adc
fcomp
in
out
mov
cmp
sub
insl
mov
xchg
mov
ret
mov
inc
call
pop
shll
push
xorb
in
js
gs
mov
shr
ljmp
and
sti
fwait
or
xchg
das
inc
add
lcall
pmulhw
outsl
adc
sbb
mov
stc
mov
and
or
cmp
jle
scas
idivb
cs
psrlq
mov
sub
test
push
and
repnz
cmp
jae
cmpsl
push
mov
pop
out
cmpsb
sbbb
sub
cmp
mov
andb
sub
lahf
mov
test
leave
in
xor
mov
call
and
xor
cmpl
pop
or
or
xor
aam
or
mov
out
shrl
cmpl
inc
dec
mov
jle
jmp
jle
rorl
adc
loope
aas
dec
jecxz
mov
pop
adc
fucomip
jl
test
into
in
add
jns
int3
jns
add
test
mov
lahf
sbb
dec
cld
cmp
jecxz
fildl
xlat
lcall
pusha
lret
pop
inc
dec
push
cmpsl
cwtl
and
sar
xchg
mov
or
xor
xor
imul
imul
dec
cmp
es
dec
pop
adc
lods
fdivrl
xchg
xchg
or
xor
sub
sub
and
loopne
out
push
sbb
mov
and
sbb
hlt
lret
jae
jge
jle
xor
mov
and
or
test
fdivl
shl
push
push
mov
xchg
lods
pop
movsl
psllq
js
cmp
mov
ds
clc
cli
scas
xchg
fisttpl
inc
dec
mov
cmp
in
dec
repz
pop
lods
fcmovnu
mov
jge
popa
xor
stos
jo
or
mov
test
aas
and
dec
rcrb
fdivs
adc
loop
stos
mov
icebp
push
sub
pop
outsb
int
mov
cmp
out
sti
mov
fmuls
cmp
push
inc
inc
mov
pop
sbbl
pop
fcomip
fnsave
mov
pop
aas
js
mov
lahf
push
mov
jb
aad
mov
mov
scas
push
lods
xor
lds
dec
flds
and
addb
push
xchg
dec
pop
xchg
add
sbb
xchg
outsb
jnp
push
inc
inc
imul
push
adc
xchg
mov
addr16
xchg
cmp
or
cli
push
aad
js
aas
lods
pop
popf
sub
inc
sub
fisubrs
inc
adc
inc
lods
cmp
fldcw
mov
or
add
cmp
jp
int
lock
out
testl
and
mov
ret
adc
mov
loopne
mov
pushf
pop
cmc
int
mov
lods
pop
and
and
addr16
mov
popa
enter
aam
pop
pop
jae
subb
dec
pusha
std
mov
mov
leave
dec
pop
leave
dec
mov
push
sbb
inc
add
int3
outsl
push
shlb
push
add
insl
cltd
ljmp
and
mov
pop
loopne
mov
pop
add
inc
mov
imul
imulb
repz
inc
outsl
sbb
dec
pop
lods
mov
xchg
and
je
lods
bound
inc
jne
imul
pop
and
test
nop
sub
dec
outsl
leave
scas
popf
add
sub
xor
les
inc
hlt
sbb
arpl
inc
arpl
dec
pop
testb
les
and
pop
and
fisubl
lahf
loop
or
test
shrb
sahf
push
mov
testl
fpatan
lret
xlat
cmp
pop
fisubrl
lds
rcll
mov
shr
sarl
andb
xor
or
popl
cli
xor
rcll
in
mov
insb
add
sbb
mov
cld
inc
imul
jecxz
mov
pushf
sbb
inc
or
fbstp
sub
xchg
sub
ds
fistl
into
outsl
ja
rorl
jns
test
push
jns
cli
je,pt
repz
out
es
add
xchg
gs
frstor
int
push
lds
imul
aad
out
rorb
or
scas
in
adc
and
in
lahf
ds
pop
xor
sub
je
gs
jle
pop
pop
scas
dec
xchg
sub
sub
dec
jae
movsl
xchg
inc
inc
dec
pop
jne
fidivrs
lahf
jg
scas
mov
gs
and
push
fnstenv
sbb
imul
dec
mov
fsts
mov
sarb
mov
sub
inc
mov
shll
in
std
xor
xor
adc
popf
dec
aaa
mov
mov
dec
pushl
testb
lret
ljmp
dec
decb
sub
out
pop
add
call
mov
push
jmp
out
mov
or
fists
lahf
mov
xor
lahf
jg
mov
fstpl
jl
aaa
sbbl
pop
or
out
sbb
mov
mov
ret
jp
mov
or
or
ret
inc
mov
xlat
mov
inc
test
add
roll
sbbb
fidivl
add
mov
fisttps
mov
std
xor
cmpsb
test
aad
sbb
jo
loop
enter
sarl
or
xor
add
cltd
fildl
add
jge
pop
ljmp
cmp
jg
mov
jge
adc
inc
in
clc
jnp
incl
addb
sbb
fildl
decl
push
mov
js
add
inc
lods
pop
jns
mov
mov
adc
mov
fcoml
sub
out
es
jno
or
add
shr
or
push
mov
popa
lea
clc
mov
xlat
mov
addl
mov
adc
sub
push
xor
stc
out
and
mov
fldl
js
mov
mov
mov
pop
xchg
imul
rcr
inc
pop
pop
rcl
lock
mov
adc
in
popa
mov
js
xlat
pop
push
xor
xchg
test
rol
add
push
inc
pop
aaa
cmp
mov
sarb
je
jbe
lret
add
sub
dec
in
div
mov
test
rcrb
xchg
popa
xchg
repnz
add
cmp
add
fmul
and
jbe
cmc
mov
js
xor
pop
push
push
lret
imul
stos
and
sti
adc
std
repnz
mov
js
int
cmp
mov
les
xchg
pop
int
scas
shll
aas
cwtl
pusha
add
adc
push
push
xor
aam
lret
inc
adc
bnd
movsl
outsl
scas
cmp
dec
out
adc
jmp
sti
ror
xchg
and
jg
test
mov
push
add
gs
xor
cltd
jnp
lret
sarb
push
testb
xchg
popf
or
push
and
psubusw
cmp
and
lods
loopne
lret
push
lods
lock
lock
enter
scas
pop
cmpb
loopne
scas
test
cmp
divb
jmp
mov
or
push
pop
into
xchg
push
sub
sti
shrl
ds
mov
adc
inc
mov
mov
fsubrl
and
fldt
fbld
stc
lods
mov
push
lahf
ss
sub
fidivrl
cmp
sbb
stos
sahf
lods
mov
cmc
sbb
cmp
adc
inc
push
jb
ja
jo
js
lea
sarl
mov
sbb
mov
lea
loopne
push
xlat
outsl
iret
sub
cmp
xorb
aaa
lods
xor
iret
lods
test
mull
sbb
xor
adcb
pop
insl
out
pop
ss
xor
push
pop
stos
add
lret
or
mov
std
scas
sbb
test
jne
popa
pop
pop
mov
sub
jno
adc
sbb
xor
inc
mov
xor
ja
ret
jb
shr
jge
in
repnz
sbb
cmpsl
pop
mov
stos
xchg
jo
rclb
ret
fidivs
fldt
xor
subl
adc
shlb
ds
mov
mov
mov
inc
adc
out
xchg
in
sub
mov
rolb
fsubrl
fidivs
adc
pusha
xor
decl
sub
fimuls
in
and
rcr
push
enter
mov
mov
sbb
fnstcw
cs
imul
in
int3
and
aaa
stos
and
lret
pop
mov
lods
xchg
push
iret
enter
in
dec
dec
push
or
adc
imull
clc
leave
and
adc
loop
sbb
iret
mov
lret
icebp
in
sub
int3
cmp
mov
add
arpl
dec
pop
pop
popf
or
xor
shlb
push
sahf
cltd
mov
and
inc
lods
or
sub
xchg
rorl
jle
lcall
jbe
leave
and
sub
shll
pop
push
hlt
mov
movl
call
xchg
fcomi
mov
cmp
mov
inc
test
jno
scas
lcall
pushl
and
xchg
mov
cmp
imul
push
pop
lock
xchg
xchg
and
ds
xor
mov
pop
sub
nop
push
cmpsb
push
faddl
inc
cli
ja
pop
mov
dec
mov
mov
push
xchg
iret
adc
pop
lods
decb
test
jge
adc
xchg
push
add
dec
leave
js
xlat
loop
inc
lahf
lods
inc
cmc
mov
int
jns
mov
mov
int
adc
mov
push
add
push
or
push
jecxz
int
or
das
mov
xlat
jl
jnp
jmp
mov
add
icebp
push
aam
mov
repz
test
cmp
test
loop
mov
out
inc
out
pop
mov
sbb
int3
arpl
sub
stos
mov
stos
sbb
leave
mov
aaa
dec
mov
add
jge
add
xchg
pop
pop
push
call
int3
xchg
scas
add
xor
lea
pop
xchg
mov
jmp
fs
imul
add
icebp
fsubl
pop
clc
push
jb
ljmp
mulb
aam
xchg
lahf
jnp
sbb
or
aam
testl
arpl
mov
gs
popa
mov
push
scas
idiv
jne
outsl
xchg
xor
movsb
xor
mov
test
or
push
dec
pop
push
jmp
push
iret
subb
push
jno
dec
mov
inc
loopne
mov
bound
lods
outsb
add
popa
sbb
faddl
xchg
xchg
mov
sbb
fwait
push
cmp
nop
sub
insb
jne
sbb
xor
repnz
jae
jns
add
sbb
cmc
int3
mov
mov
jbe
xchg
dec
jge
int
dec
fsubl
pop
gs
cld
inc
xor
pop
push
cmp
push
jo
mov
dec
xchg
out
mov
add
ja
insl
add
scas
loop
pop
push
lret
cld
popa
stos
ljmp
mov
add
movsl
mov
cmc
mov
fisubs
mov
movsb
push
pop
aaa
mov
test
jb
popf
aam
pop
mov
js
movsl
icebp
push
lcall
pusha
pop
pop
cmp
push
cmp
int
xchg
aas
in
inc
lcall
xchg
or
xorl
mov
jge
push
in
pop
les
inc
push
push
test
cmp
jmp
and
sbb
push
in
insl
out
jnp
out
stc
sub
cwtl
pop
push
das
inc
in
in
daa
jle
push
xor
mov
sbb
xchg
icebp
dec
ds
xchg
scas
jns
dec
pop
adc
lds
shrl
out
icebp
sbb
sub
imul
or
test
push
mov
xor
jo
shlb
pushf
jno
jo
arpl
cmp
jno
and
pop
push
cmpsb
pop
add
cmp
push
cltd
lret
and
xlat
inc
lock
pop
xchg
fs
lret
test
lcall
adc
mov
xlat
outsb
jl
aad
cmp
cltd
sub
insl
fidivl
imulb
xchg
inc
adc
jbe
cmc
jno
dec
icebp
adc
jo
jnp
out
pushf
and
lahf
push
rorl
sub
fcompl
cmp
and
xlat
jmp
mov
and
pop
je
inc
cwtl
jbe,pn
xchg
sub
mov
das
xlat
dec
inc
js
mov
out
rcl
insl
or
cmpb
hlt
inc
push
popf
add
pop
ljmp
push
mov
std
sbb
add
jns
movsb
cmp
and
call
dec
adcb
adc
mov
arpl
cmp
push
or
xchg
imul
xorb
push
sahf
popf
sub
movsl
inc
gs
and
xor
and
push
outsb
movsb
push
sub
and
test
mov
ss
lock
stos
arpl
adc
and
cmp
push
jecxz
or
out
mov
xchg
in
sbb
loopne
jecxz
stos
insl
xor
rolb
cmpl
pop
or
mov
xor
arpl
mov
or
adc
and
andl
call
aaa
iret
jb
pop
imul
movsb
cld
xchg
icebp
lcall
das
ret
fnstcw
dec
pandn
repz
pop
lret
nop
sub
mov
sub
mov
arpl
adc
jp
sbb
lds
loope
test
fimull
loope
shll
adc
mov
aaa
push
lods
es
leave
mov
out
jmp
jle
or
pop
push
jae
test
out
and
shrl
adc
dec
outsl
call
es
inc
pop
pop
movsb
aas
xchg
pop
aam
mov
loop
pop
repnz
mov
jns
std
leave
xchg
dec
out
xchg
arpl
enter
mov
imul
sub
jmp
mov
add
pushf
pop
cmp
mov
mov
xchg
xchg
pop
fstps
push
mov
and
cld
lret
loope
cld
sbb
daa
ljmp
push
or
test
inc
jb
sbb
pop
enter
icebp
xchg
scas
sub
xor
jmp
sbb
cmp
dec
adc
pushf
cmp
icebp
ret
cmp
mov
insb
add
notl
sub
out
in
loope
std
popf
push
clc
iret
call
or
cmp
frstor
cltd
ljmp
jmp
lock
sbb
adc
pop
push
imul
cmp
fldenv
jae
jae
inc
imul
negb
add
inc
out
mov
lds
hlt
jnp
out
xchg
sub
pop
push
sub
fsubrs
mov
mov
and
stc
dec
push
enter
loope
pop
dec
in
scas
sti
pop
jo
inc
das
sub
sti
adc
inc
mov
cwtl
jp
inc
mov
mov
aas
popa
jl
mov
add
aam
cmpsb
loope
dec
jp
jg
pop
movsb
mov
push
jns
or
addr16
subb
movsb
sub
push
lds
push
and
or
orb
xlat
cmpsb
int3
lret
mov
mov
jecxz
adc
xchg
inc
cld
jno
dec
add
sbb
stos
jle
jmp
mov
ss
mov
js
and
pop
insb
inc
inc
pushfw
lret
into
mov
mov
divl
leave
movsb
insb
jg
outsb
lds
iret
imul
jle
test
std
xchg
cmp
ss
sbb
jo
xchg
test
sbb
ss
test
xchg
leave
test
fstl
sbb
inc
sub
das
pop
push
scas
add
fadds
mov
xchg
sbb
in
mull
leave
fsubr
cli
mov
mov
jle
dec
sub
cmpsl
ds
pop
lret
cmc
fs
imul
mov
shll
out
inc
in
push
nop
xlat
pop
shlb
leave
test
sbb
je
adc
sub
test
mov
loop
push
cmp
lea
adc
je
pop
add
dec
pushf
inc
sbb
push
les
xor
sbb
pop
adc
jne
das
jns
lods
popa
lods
pop
fs
adc
nop
inc
add
pop
movsb
mov
or
loopne
cmp
dec
neg
adc
fnstsw
pop
sbb
je
pop
cmp
sbb
and
in
push
rcl
dec
ret
divb
push
scas
in
mov
test
push
sub
push
popf
dec
bound
jecxz
and
add
add
cmpsl
out
or
mov
xor
fxch
pop
push
xchg
popf
push
ret
cmc
ret
xchg
je
inc
cld
dec
jno
push
cmp
xor
dec
jnp
push
xchg
inc
and
inc
mov
jnp
insl
fiaddl
das
and
adc
rcrb
repnz
enter
pop
dec
negb
sbb
sub
aam
js
mov
ficomps
sub
shrl
mov
fists
sub
cwtl
and
rcrb
repz
pop
jecxz
cltd
jo
inc
fldt
movsl
shr
pop
out
fstpt
iret
mov
in
jp
out
into
enter
jne
in
inc
push
in
mov
or
push
xchg
nop
mov
out
xor
add
addr16
inc
add
pop
out
xchg
hlt
xor
lcall
in
dec
mov
arpl
and
arpl
idivb
push
and
mov
daa
mov
add
cmp
jp
fmul
adc
filds
xchg
adc
cwtl
insb
dec
imul
scas
loope
ret
sbb
outsb
ret
dec
jmp
nop
jnp
ret
xchg
or
cltd
rclb
jae
js
call
pop
add
iret
xor
cmpl
mov
mov
dec
dec
sti
sbb
sub
cmp
shr
inc
mov
out
or
xor
mov
mov
stc
loop
outsl
fs
negl
test
mov
xchg
xor
std
xorl
adc
in
dec
es
fistpl
je
pop
or
pause
scas
addr16
icebp
push
into
cmp
por
pop
outsb
xchg
xchg
loope
ficomps
sub
je
cmpb
lea
pop
push
repnz
std
or
inc
lea
incl
clc
mov
jecxz
mov
add
cmp
fistl
xor
fs
loop
push
enter
je
jne
call
xlat
int3
jg
test
push
or
xor
cltd
xor
inc
push
lret
jl
les
push
data16
in
iret
push
cmc
lahf
or
jno
cs
nop
lds
or
xor
shlb
mov
inc
xor
pop
es
sbb
cltd
cmp
sti
xchg
scas
xor
sub
push
pop
fdivr
mov
mov
xchg
sub
inc
dec
fdivl
shlb
aam
push
fidivl
sbb
repnz
jp
out
imul
jl
outsb
add
xchg
fnstenv
push
aas
dec
mov
fsubrs
scas
sbb
orl
lcall
and
pop
dec
cld
mov
mov
xchg
xchg
jbe
hlt
es
out
es
inc
fisttpl
dec
jne
jge
popa
jb
jp
imull
and
pop
push
imul
stos
jbe
sbb
dec
push
fdivl
addr16
jg
in
clc
loope
and
xor
cmc
dec
ja
ret
pop
dec
mov
loope
pusha
xchg
lea
push
dec
in
shr
outsb
mov
insl
add
shrb
cmp
dec
sbb
testb
mov
iret
out
xchg
or
test
adc
pop
les
jae
fsub
loope
xlat
jmp
dec
pop
push
fwait
testl
mov
ds
dec
pop
adc
or
jb
pop
add
shrl
bound
sbb
test
mov
jae
ficomps
dec
gs
aam
xchg
sbb
in
out
in
loopne
mov
pop
push
inc
mov
inc
adc
int3
lahf
jne
push
jle
mov
push
xorl
fidivl
and
cwtl
stos
cs
fstps
leave
jmp
dec
repnz
add
ljmp
cmp
dec
xor
sub
push
fwait
aas
imul
lock
mov
mov
lods
xchg
mov
jae
fcomps
or
cmc
stos
imul
sarb
xor
lea
mov
pop
cmp
hlt
xor
ret
movsb
sti
pop
inc
mov
sbb
stc
jbe
sub
rclb
jge
dec
scas
pop
sbb
lds
addr16
and
sub
test
out
mov
ret
add
outsl
enter
call
shll
cli
icebp
inc
push
mov
pop
es
mov
pop
pop
cs
pop
fisttpll
jge
or
jp
and
xor
push
outsl
stos
adc
push
scas
mov
mov
out
shll
mov
movsb
orb
mov
notb
mov
cmpl
icebp
inc
and
mov
mov
jle
cmp
mov
imul
fisttpl
pop
add
pop
jg,pt
dec
mov
es
mov
push
adc
hlt
xchg
xor
iret
mov
bound
cltd
inc
loopne
ret
mov
fnsave
rclb
sub
loopne
cld
subl
push
cmpsb
cld
push
hlt
out
push
imul
sahf
call
and
int3
inc
js
cli
lock
in
pushf
jg
fsubl
fwait
clc
or
out
xchg
cmp
clc
idivb
imul
inc
mov
aad
movsl
xchg
or
ret
mov
call
xor
xchg
loopne
dec
jmp
mov
push
out
sbb
ss
mov
fwait
jle
lret
aaa
ror
andb
ffree
sarl
mov
push
dec
xlat
adc
inc
test
mov
push
xchg
testl
sbb
cmp
es
mov
loop
or
daa
xchg
out
mov
cld
lcall
jbe
dec
pusha
xchg
lahf
flds
dec
movsl
test
xchg
in
mov
mov
sub
les
in
pop
std
inc
inc
in
cmc
int
xlat
jns
or
push
sahf
sub
sti
das
lss
int3
and
and
pushl
repz
stc
pop
or
or
nop
iret
jne
or
sbb
lret
aam
int3
pop
lock
arpl
mov
fs
shll
mov
mov
sbb
sub
dec
mov
jle
fisubrl
xor
lock
lahf
xchg
push
mov
sarb
or
adc
adc
pop
loope
jb
scas
or
sbb
xchg
mov
pushf
cmp
popa
jg
sarb
in
and
out
xor
push
scas
test
scas
clc
jnp
cmp
lahf
jne
xor
adc
pop
xchg
cmp
add
mov
mov
or
shr
mov
in
xor
loopw
lret
into
dec
bound
add
shlb
repnz
js
push
test
jbe
dec
in
test
adc
jns
popa
inc
jnp
dec
mov
add
out
push
ret
jle
cltd
outsb
sti
into
lds
adc
aas
mov
sub
push
test
lock
xchg
and
cmp
and
or
ret
sub
cmp
sbb
dec
and
or
sar
push
push
mov
fnstenv
icebp
sbb
fwait
dec
rclb
adc
icebp
adc
movsl
mov
mov
mov
mov
sub
or
imul
jmp
pop
fdivs
outsl
bnd
gs
dec
int3
mov
cmp
icebp
pop
xlat
icebp
mov
cmp
mov
push
jg
xor
jo
pop
cltd
imul
ljmp
inc
bound
iret
fldt
imul
jns
orb
lds
mov
jecxz
adc
stos
std
xor
mov
xchg
push
jp
out
lret
fistl
imul
sbb
and
nop
std
adc
jle
inc
and
mov
push
mov
mov
ljmp
or
and
mov
lods
dec
aaa
es
fistps
pusha
fcomps
idivb
stc
call
mov
mov
push
and
mov
mov
add
xchg
mov
dec
nop
jns
lcall
pop
dec
or
cmpsb
cmp
pop
dec
inc
test
inc
imul
roll
shlb
inc
fwait
std
arpl
pop
push
jg
inc
mov
or
mov
mov
icebp
ljmp
leave
xchg
push
push
sti
sub
xchg
pushf
pop
call
adc
addr16
imul
xlat
pushf
pop
cmp
mov
aaa
nop
adc
sub
in
out
fsubrp
pop
or
dec
and
mov
dec
adc
inc
cmp
scas
mov
inc
push
aam
pop
popa
and
cmp
jge
lahf
in
nop
push
sbb
jg
mov
dec
int3
sahf
icebp
inc
subb
inc
pushl
neg
les
xchg
dec
dec
mov
sbb
movsl
dec
imul
in
ds
addr16
lock
mov
cltd
cmp
jne
cli
bound
aaa
mov
jecxz
inc
sbb
lea
jle
dec
lret
or
out
xor
xor
inc
insl
dec
jb
adc
stos
mov
xor
jle
mov
psadbw
ja
sub
dec
inc
int
gs
pop
inc
fnstenv
mov
jno
jno
mov
adc
jp
dec
outsb
std
testl
data16
xchg
jbe
fs
arpl
cltd
push
fldl
pop
mov
push
xor
jl
cmp
gs
filds
sbb
shlb
add
mov
jp
mov
ljmp
sbb
scas
sub
dec
mov
adc
or
dec
jae
insb
cmp
sbb
lcall
dec
in
cs
insb
cmp
xor
outsb
xchg
jp
jmp
in
mov
lret
dec
cltd
pushf
stc
addl
and
mov
or
lcall
pop
sbb
movsl
lods
and
push
mov
loope
pusha
adc
ja
inc
or
loopne
mov
lds
push
cmp
push
inc
insl
rol
jg
arpl
and
xchg
push
sub
pop
insb
scas
mov
fs
and
push
jae
cmp
loope
je
stc
pushf
jmp
orb
pop
add
mov
xchg
sti
fimuls
leave
push
push
mov
loop
in
push
or
daa
mov
loop
lock
or
pop
insl
subb
push
and
mov
xchg
jge
fldenv
dec
pop
add
push
insl
lcall
adc
clc
inc
push
dec
push
sub
mov
rol
outsb
mov
aad
popa
shll
xor
stc
cs
std
aam
xor
mov
cmpsl
aas
push
loope
aaa
pop
aas
call
or
jbe
push
push
push
cs
pop
lea
mov
arpl
pop
fcoml
jmp
and
lock
push
inc
mov
insl
mov
js
insl
add
gs
jb
int3
jmp
nop
insb
xchg
lock
push
scas
jecxz
mov
and
arpl
shrl
cs
std
and
int3
scas
ljmp
jne
inc
sbbl
loop
add
xchg
sub
push
mov
cs
and
pop
outsb
cwtl
repz
stos
out
or
jmp
ds
push
cmp
dec
dec
in
aaa
inc
adc
int
hlt
arpl
je
push
test
jo
jbe
dec
arpl
jg
and
pop
push
repnz
pop
aas
je
fistl
mov
movsb
xorb
pop
lret
inc
leave
mov
push
call
aas
lret
int3
xor
int
out
insl
cmpsb
scas
insb
jmp
fidivl
inc
insl
fs
ljmp
test
daa
loop
inc
jecxz
add
push
cmp
imul
iret
lea
lock
xchg
cwtl
popf
aaa
lea
imul
pusha
add
fwait
out
push
mov
incb
xor
fdivl
pusha
ret
jp
ljmp
mov
je
cwtl
xchg
sbb
out
mov
arpl
inc
fldenv
int3
fidivl
push
daa
cld
adc
popa
aas
push
test
dec
pusha
jp
fwait
movhlps
jno
or
cmpsb
dec
push
cmpl
nop
gs
push
fsubr
addl
push
shll
dec
shll
jmp
sarl
cwtl
sub
pop
mov
addr16
in
inc
dec
dec
push
hlt
push
inc
outsb
fbld
cmp
leave
mov
jle
fdivrl
clc
cmp
lret
jecxz
push
lcall
aam
xchg
add
cld
or
mov
insl
cld
inc
rcrl
sarb
arpl
hlt
push
gs
out
pushf
cmp
fwait
and
adc
sbbl
mov
sub
xor
cmp
repz
push
jle
mov
adc
jl
in
out
lods
movl
mov
mov
in
sbb
mov
out
xchg
add
pop
cmpsb
sub
push
jnp
pushl
call
xor
in
add
hlt
inc
fsubs
push
in
mov
mov
test
sbb
dec
inc
dec
aaa
repz
leave
shll
xor
mov
out
js
cmp
pop
fisubs
xor
icebp
cmp
mov
pop
sbb
inc
xchg
sub
add
push
cmpsl
push
lods
add
jg
sarl
nop
sbb
lds
popf
loop
sbb
mov
sbb
mov
push
and
cld
lcall
push
int
dec
ret
lcall
jne
adc
js
dec
dec
sbb
sbb
sbb
cs
dec
mov
cmp
cmp
ja
jo
cmp
pop
lcall
cld
mov
pusha
add
mov
dec
or
mov
xchg
fcomp
scas
mov
sub
cmp
insb
cld
add
dec
in
repnz
es
lcall
int
cwtl
decb
adc
outsl
and
rorl
jmp
or
pop
jno
insl
bound
sub
iret
movsb
or
mov
es
ds
insl
add
hlt
or
and
jp
int
xchg
lods
pop
adc
lds
jle
xor
mov
mov
pop
fiadds
aam
cmpsb
cpuid
inc
xchg
ret
repz
mov
sub
or
jg,pt
push
dec
ret
fidivs
nop
mov
pushf
outsl
addr16
stos
out
xchg
rcrb
cmovae
pop
rol
cmpsl
jbe
mov
adc
test
jl
lods
dec
pop
adc
dec
pop
mov
xchg
inc
jb
cwtl
mov
daa
adc
mov
pop
cmovnp
mov
loop
int3
rolb
dec
sahf
xor
inc
push
add
out
cwtl
das
aad
add
mov
pop
cmp
dec
cmc
dec
mov
mov
pop
mov
adc
cmp
sub
movsl
xchg
mov
pop
out
test
sbb
mov
insb
ret
idiv
cmp
shld
mov
enter
inc
push
adc
stos
mov
xor
ret
dec
adc
sarl
mov
mov
and
je
iret
jne
add
je
jb
cli
pop
icebp
ja
shlb
nop
cmp
jmp
xchg
sbb
xchg
sbb
ret
sub
pop
fsubrs
iret
aaa
sahf
popa
dec
inc
jmp
inc
arpl
or
xor
out
mov
fdivrp
in
das
in
cmp
xchg
add
stos
cmp
js
sbb
lret
inc
std
mov
or
push
hlt
rdmsr
js
fcompl
mov
aam
adc
pop
and
cli
subb
or
leave
stos
push
fsubrl
jmp
mov
mov
push
sub
sub
imul
cmp
adc
xor
nop
inc
fidivl
pop
push
test
notl
leave
pop
or
nop
les
and
aam
mov
pop
rcrb
mov
ret
sub
xchg
jp
hlt
xchg
xor
cmp
mov
jbe
mov
es
jl
lds
andl
enter
push
popf
lods
nop
stos
xchg
xor
ljmp
jno
or
inc
out
inc
pusha
in
test
out
inc
xor
ret
sub
push
fidivrl
mov
aas
pop
mov
std
stc
bound
std
je
hlt
xchg
and
push
repz
call
or
sbb
loope
sbb
cmp
ljmp
stos
fs
fadds
pop
jge
fcoms
lds
mov
pop
jbe
out
cwtl
les
adc
pop
add
mov
lret
fisubrs
or
scas
jmp
popf
mov
mov
push
xor
ljmp
mov
and
push
mov
repz
imulb
and
add
sub
adcl
sub
mov
les
or
fwait
pop
in
push
fnsave
mov
or
daa
je
movsl
mov
mov
or
dec
cmp
mov
dec
jno
popa
mov
jl
fwait
mov
and
cmc
push
fsubr
xchg
dec
dec
jl
and
aam
mov
adc
pop
out
pop
add
mov
push
jbe
cmc
jecxz
lret
and
movl
out
mov
outsb
scas
hlt
add
mov
shlb
popa
pusha
dec
pop
xchg
inc
mov
push
inc
mov
mov
pop
and
dec
mov
dec
dec
and
cmp
xor
adc
sbb
xlat
dec
lods
mov
add
pop
popa
icebp
xchg
push
hlt
fucomip
stc
add
popf
fucomi
mov
push
sub
arpl
lds
sbb
mov
inc
inc
jb
sbb
daa
sbb
int
xor
ja
dec
sbb
stos
dec
loope
aas
or
push
fnstsw
out
mov
pop
mov
sbb
mov
xchg
inc
mov
test
pop
pushf
jg
lock
loope
jo
js
in
mov
out
fwait
pop
rolb
in
int3
data16
js
inc
jle
xchg
scas
sbb
rcrl
stc
imul
cmpsb
jbe
add
shlb
imul
test
inc
adc
cmc
lcall
bound
push
call
dec
outsl
loop
call
inc
stc
mov
jge
scas
shll
daa
inc
es
ja
xchg
mov
push
adc
imul
enter
cmp
roll
sar
cmp
dec
mov
or
sub
pop
xchg
aaa
int3
pop
or
xor
xchg
sub
lret
push
cmc
out
adc
pop
fnsave
lahf
es
xchg
push
and
ret
mov
sub
ljmp
push
xor
test
push
aam
dec
cltd
adc
adc
jbe
popf
repnz
or
or
cld
mov
jno
xor
cmp
mov
stos
and
andl
inc
xchg
inc
out
popa
cmp
shll
hlt
test
mov
push
std
jg
fsubl
pop
fsubrs
enter
sti
notb
sub
sub
add
andl
ds
mov
pusha
push
test
xchg
test
ficoms
xchg
pop
add
and
das
in
jnp
sub
outsb
clc
inc
ficomps
adc
jge
lock
xchg
mov
or
or
and
xchg
div
in
fwait
sub
mov
and
je
cmp
aad
hlt
scas
push
stc
pop
sbb
aas
lret
enter
jmp
aaa
jmp
xor
fistpll
push
pmovmskb
jl
adc
mov
mov
stc
or
mov
mov
imul
movsl
sbbl
push
pop
or
or
mov
in
fwait
das
cmp
sbb
xchg
and
sbb
push
loopne
jnp
adc
push
or
mov
or
mov
ret
inc
sbb
aam
shrb
out
nop
cmp
jne
lcall
cltd
jge
dec
or
jmp
adc
in
movd
inc
movsl
push
or
ljmp
sub
xor
cmp
cltd
out
mov
adc
outsb
mov
pop
outsl
lea
xlat
cwtl
ret
jg
or
xchg
fsubs
jecxz
push
test
stos
xchg
aam
pop
xorl
adc
jae
sub
adc
pop
mov
cmpsl
cli
ds
cmp
je
jg
pop
orb
notb
sub
cld
outsl
add
je
and
out
lret
cmp
gs
inc
movsl
add
lods
mov
subb
xor
dec
scas
popf
xchg
out
js
cmp
push
test
lods
add
ds
stos
cmp
leave
ja
mov
pop
ljmp
call
mov
add
aas
clc
std
jg
ljmp
repz
test
into
mov
mov
popa
cmp
jg
or
lcall
pop
jecxz
mov
test
or
fwait
lods
xor
xchg
mov
jb
dec
movsb
mov
imul
out
sbb
repnz
loope
dec
cmp
mov
loop
and
and
xor
add
xchg
and
sub
mov
mov
shrb
ret
adc
sarl
loopne
jns
fstpl
dec
push
xor
shlb
sarl
xchg
lea
sti
xor
dec
fnstenvs
popf
lds
loopne
add
xchg
sub
gs
adc
inc
add
dec
ljmp
adc
repz
cwtl
fidivs
in
out
mov
mov
icebp
js
adc
incb
in
test
cmpsl
cltd
or
out
movsb
inc
cwtl
mov
sbb
iret
lds
mov
pop
stos
int
mov
mov
adc
xchg
arpl
pop
test
cwtl
test
mov
sub
loopne
jge
inc
movsl
push
lahf
jl
add
cld
mov
int
adc
inc
cmpsl
and
jmp
xchg
int3
push
inc
aas
test
jg
sub
jnp
sub
sbb
fucomp
icebp
cmp
pop
imul
adc
addr16
sub
xchg
and
and
pop
out
and
xchg
mov
dec
idivb
xor
xor
inc
fcoml
pop
mov
inc
xchg
mov
sarb
xchg
fstpl
icebp
jge
arpl
lock
jle
fs
mov
mov
jno
inc
shlb
js
or
cltd
xchg
and
test
popa
mov
jbe
cmp
pop
mov
jae
movsb
mov
dec
jo
jmp
and
inc
cmpsl
cmpsb
scas
inc
fadd
xor
repnz
scas
shl
ja
cmp
xor
xor
int
rcr
and
sbb
cld
adc
cwtl
xor
dec
lods
pop
rcrl
mov
jo
jne
sub
push
sub
fwait
pushf
xor
fldenv
fwait
sahf
push
mov
cmp
add
mov
ret
xchg
add
sbb
shll
imul
sbb
in
push
dec
cwtl
adc
cmp
mov
jbe
cmp
push
sub
cli
xchg
arpl
sbb
leave
in
in
mov
or
mov
adc
loopne
out
and
and
sbb
in
pop
test
inc
leave
gs
xchg
and
xor
jmp
adc
lock
sub
aad
jl
and
dec
sbbb
stos
scas
std
xchg
and
inc
sbb
pop
int
mov
call
or
mov
fs
cmp
out
ret
aad
xchg
jg
sti
mov
loop
sbb
fcoml
mov
pop
cli
pop
outsl
nop
add
jnp
adc
out
jae
push
notb
xor
add
mov
adc
imul
cmp
lods
hlt
shrb
icebp
test
lods
shr
pop
fldcw
mov
xchg
sub
xorb
out
rorl
negb
lds
pop
push
sub
add
stos
sahf
test
in
sbb
lcall
pop
or
mov
xor
cmp
clc
push
out
mov
loope
cmp
xchg
pop
push
or
ret
lods
lea
adc
xchg
mov
mov
cs
popf
dec
dec
fs
mov
cld
test
add
cltd
jb
lret
hlt
xchg
adc
pop
xchg
pop
mov
out
inc
sbb
xor
ljmp
movsl
shl
lret
mov
push
pop
lret
add
sub
adc
sti
shlb
mov
out
jge
test
std
or
decb
xchg
push
lret
jae
mov
repz
jmp
movsb
movsb
push
addr16
push
in
jbe
test
call
movsb
dec
mov
mov
sbb
mov
jp
jecxz
add
shlb
mov
repz
les
ljmp
jno
std
rolb
notb
jae
sbb
stc
pop
inc
cmp
repnz
lahf
jae
in
ficoms
outsb
adc
inc
pop
push
cmpsb
xor
sub
sbb
popa
dec
loope
rol
lahf
mov
push
push
sub
cmc
xchg
mov
or
xor
das
push
xchg
mov
inc
cltd
sub
inc
lcall
clc
xor
mov
adcb
lods
inc
xchg
dec
aam
jmp
xchg
add
pop
lret
sub
cmp
mov
sti
sbb
lret
cmp
jno
jbe
fsubs
push
mov
outsb
rclb
pop
cmc
dec
icebp
loopne
lods
outsl
jl
sbb
test
addr16
xlat
and
pop
xor
add
sarb
or
mov
mov
out
xor
gs
aad
add
add
cmp
or
mov
jmp
pop
mov
mov
sub
faddl
dec
in
lods
dec
loope
shl
imul
sbb
jecxz
xor
mov
push
ja
lds
mov
clc
ficoml
cmp
fdivrp
testl
arpl
sbb
xor
and
dec
jno
jns
stos
in
orl
mov
jle
in
sbb
lret
cld
xlat
in
cmpl
or
pop
push
repz
and
outsl
pop
dec
xchg
add
cmpsl
repnz
cs
sbb
into
cwtl
dec
dec
sti
jbe
into
mov
xchg
sub
jg
pop
mov
cwtl
daa
test
jmp
sarl
jmp
dec
dec
jecxz
pop
aas
push
dec
arpl
jge
mov
xor
testb
mov
popf
out
dec
loope
in
adc
in
loop
push
cltd
add
mov
jbe
or
xchg
arpl
jge
fs
nop
pop
or
mov
sub
addl
test
pop
es
xchg
test
fcmove
into
fnstenv
lcall
call
and
dec
lds
xchg
dec
mov
leave
pusha
lahf
xlat
lahf
adcb
sub
ret
pushf
xor
push
cmp
ss
push
xchg
ss
test
es
xchg
data16
scas
dec
dec
leave
lock
daa
jo
inc
jle
mov
std
inc
cmp
sub
popa
ss
xchg
insl
aam
ljmp
cld
hlt
jge
loope
or
int
xorl
push
adc
shlb
push
inc
ds
push
divl
xchg
mov
pop
cmp
pop
test
xchg
xchg
das
les
and
notb
and
fbstp
inc
int3
das
jl
leave
pop
aaa
or
fisttpl
popa
cli
dec
adc
test
shll
adc
fbstp
dec
sub
push
in
dec
push
sbb
lock
dec
gs
and
test
enter
inc
std
lea
add
push
bound
ret
enter
add
jp
stos
jne
pusha
or
popa
cmp
aas
pop
inc
fprem1
inc
adc
sub
push
jmp
fisubs
dec
mov
std
mov
add
xchg
cs
add
and
jmp
inc
mov
repz
inc
stos
fcoms
push
bound
cmpsb
imul
cltd
arpl
lret
xchg
data16
mov
roll
inc
jecxz
cmp
icebp
sahf
and
mov
sub
ficomps
out
lods
pop
xchg
lods
in
jbe
add
fcoms
cs
jle
ret
jle
test
mov
adc
lahf
and
adc
add
sub
push
cld
mov
xor
cmp
push
sbb
xor
repz
push
cmp
je
push
inc
jb
inc
and
sahf
inc
loope
mov
mov
pusha
aaa
lea
out
xchg
enter
shlb
outsl
xchg
lods
push
add
cmc
pop
lods
and
jl
rcrl
ficomps
mov
daa
inc
add
sub
cmpsb
fcmovbe
addr16
pop
aam
mov
in
mov
push
jb
cmpsb
inc
sub
lods
mov
push
xchg
jne
dec
outsl
lods
pop
ja
mov
jp
jmp
je
icebp
sub
and
bnd
cmp
pop
mov
mov
mov
iret
lods
stc
and
push
dec
in
xor
enter
mov
cmpsl
xor
outsl
movsl
pop
sbb
add
xchg
mov
mov
test
pop
cld
jp
imul
pop
arpl
cmp
xchg
or
cmp
mov
pop
mov
dec
fcomip
ja
insl
jnp
in
cs
stos
add
int3
stc
push
out
xor
push
xor
push
lds
xchg
jo
call
test
mov
das
mov
push
pop
iret
mov
pop
int3
mov
sahf
sbbb
and
adc
iret
lret
loopne
sub
push
adc
pop
lods
rcr
sub
mov
ror
push
mov
icebp
mov
rsqrtps
mov
mov
bswap
xor
jecxz
and
adc
sbbb
mov
pushf
xor
mov
mov
mov
pushf
fwait
jb
mov
cmp
andl
mov
lret
imul
ret
call
aas
xchg
mov
in
or
mov
lock
push
mov
xor
dec
lods
insb
add
outsl
fwait
and
and
mov
lods
cs
aad
popa
movsb
inc
mov
idivl
fmuls
xor
insb
in
jbe
add
cmp
popf
icebp
adc
xchg
sub
hlt
jmp
mov
adc
mov
aas
sub
jnp
cwtl
xchg
mov
aas
in
cmp
xlat
or
in
and
jp
scas
mov
shll
mov
jmp
shr
les
clc
jmp
mov
fldl
add
push
shld
lahf
fxch
arpl
insl
xlat
stc
dec
cmp
mov
inc
fidivrs
jo
sub
shll
xor
xchg
inc
or
push
lahf
mov
test
sti
xchg
push
add
mov
sbb
test
rcpps
or
test
enter
imul
in
inc
ret
sar
and
cmp
sahf
outsb
insb
dec
das
nop
adc
cli
pushf
ret
mov
cs
dec
lahf
mov
push
cmc
sub
xor
xchg
mov
ljmp
xor
pop
bswap
xchg
xlat
cmp
imul
loope
repz
mov
pop
adc
fs
arpl
mov
jmp
jl
jecxz
sub
ljmp
inc
mov
inc
out
iret
into
in
out
ljmp
ficomps
repnz
xchg
fcomip
call
push
xchg
sub
push
lahf
cmp
mov
lahf
ja
push
xchg
cmp
jle
mov
outsb
in
in
ja
jno
sahf
outsl
add
pop
into
cmp
dec
das
dec
dec
add
cmpsl
aas
push
pop
dec
inc
flds
aas
fwait
jne
lret
cmp
mull
mov
xchg
stos
cmp
cltd
shrb
jbe
cmpsl
fwait
mov
add
lods
xor
jmp
cli
jmp
dec
daa
push
xchg
fs
movsb
cmp
xlat
outsb
mov
shl
mov
repnz
inc
aas
pop
sbb
adc
cmp
cmp
fcompl
int3
adc
jae
pop
int
outsl
adcl
rol
dec
es
mov
out
shl
adc
and
or
mov
mov
mov
popf
mov
lret
testb
jmp
lea
inc
xor
into
add
and
roll
lcall
adc
mov
inc
xchg
or
mov
sub
xlat
iret
pop
dec
pop
out
cltd
xchg
jns
inc
mov
loop
fildl
lcall
sbb
jo
out
mov
and
fwait
ss
std
mov
pushw
das
mov
xchg
cltd
adc
fstpt
outsl
xchg
sub
inc
lods
and
into
mov
pop
jl
xchg
movsl
cmp
mov
push
lret
int
or
std
ss
fsubs
test
mov
rcll
xchg
push
inc
fnsave
insl
lods
or
jb
cwtl
popa
cmp
lock
loope
rclb
xchg
pop
testb
pop
or
pop
je
sub
orl
xchg
inc
and
and
inc
dec
add
sarb
pop
insb
mov
in
xchg
jno
adc
jbe
scas
cmp
cmpsb
push
cld
inc
test
fisubl
cmp
adc
add
xor
incb
insb
stos
dec
or
call
sub
loope
movsl
inc
add
push
in
push
dec
mov
and
xchg
jo
or
lea
sub
lret
lods
xor
bound
jb
sub
jae
ret
push
je
scas
enter
mov
jo
sbb
mov
dec
adc
popf
dec
rcrb
cli
rcll
pop
sahf
mov
test
push
inc
sbb
scas
insb
xchg
xchg
mov
notb
or
dec
mov
pop
imul
in
sbb
fs
add
inc
pop
ss
scas
add
imulb
lcall
mov
jne
ret
jle
and
push
sahf
fsub
out
push
mov
push
jno
enter
bound
sbbb
aam
mov
push
loope
shl
pop
insb
jmp
pop
inc
mov
fldt
movsb
pop
pop
add
xchg
scas
popa
sbb
mov
cmp
subl
mov
pop
aad
aaa
sbb
xlat
add
xor
call
push
pushf
das
mov
cld
xorb
push
jnp
nop
out
mov
nop
sub
jne
call
ror
inc
daa
lcall
or
and
fsubrp
jge
cmp
mov
dec
mov
stos
adc
divl
jno
mov
ja
imul
fdivrs
imul
pop
js
pop
fidivl
test
das
int
jne
cmp
jmp
dec
mov
fdivs
ja
cmp
fcmovbe
cmp
cmp
and
sahf
pop
in
cmp
ffree
pop
ret
push
add
push
sub
inc
rcrl
fldcw
pop
cmc
cs
cli
movsb
push
jmp
imul
rolb
pop
dec
shrb
repz
inc
loopne
leave
mov
mov
xor
push
aam
lret
adc
test
lret
outsb
rclb
lahf
outsb
inc
std
adc
jne
lock
add
and
cwtl
push
fwait
mov
rorl
cmpsl
cmp
cltd
xchg
push
mov
jb
into
pop
sub
rcrb
mov
jno
out
sbb
sub
in
lcall
adc
xchg
xchg
enter
sub
aas
jmp
out
or
mov
lea
call
sbb
addr16
fistpl
pop
insb
sub
leave
xchg
ljmp
mov
outsb
add
adc
dec
sub
mov
pop
lahf
mov
lea
cli
ljmp
xor
mov
fstpl
imul
mov
mov
popf
xchg
jg
sub
test
push
mov
lock
sti
bswap
mov
xchg
mov
jnp
xlat
mov
aaa
pop
stos
inc
sti
adc
sub
xor
ja
or
mov
sbb
push
mov
ljmp
aaa
out
js
dec
inc
fimull
popa
icebp
cmp
push
ret
popf
sti
pinsrw
out
cmp
or
sbb
sbb
jecxz
push
or
lds
dec
dec
cmpsl
add
ds
and
xchg
popa
pop
cmovg
dec
bound
scas
call
loopne
pop
icebp
push
cmpsl
xchg
jo
add
inc
xchg
sbb
out
xlat
cli
or
sbb
add
gs
mov
rcrb
ds
out
xchg
jp
pop
mov
jbe
out
stos
idivl
fldenv
and
mov
das
mov
push
cmp
jnp
ret
out
sarb
and
inc
pop
mov
sahf
add
xchg
mov
mov
sbb
sbb
sub
rcrl
xchg
fistps
mov
mov
mov
mov
jge
lock
stos
mov
add
mov
push
popa
stc
adc
aaa
stos
inc
dec
inc
xchg
std
outsl
adc
mov
cmpsb
cld
addr16
in
addr16
jecxz
lret
adc
xchg
dec
xchg
inc
pop
add
mov
cwtl
push
mov
lret
repnz
ficoms
pop
jg
lret
mov
mov
and
hlt
in
imul
shlb
cmp
in
lods
inc
xchg
popf
pop
inc
insb
sti
pop
sahf
data16
fs
fisttpl
sbb
jmp
jmp
out
lock
rcrb
aam
movl
jb
in
mov
test
jl
add
inc
fnstcw
mov
arpl
arpl
addr16
xor
incb
or
xchg
sub
xlat
sbb
or
lret
xlat
insl
or
int
in
sub
pop
xchg
push
outsb
jle
jb
xchg
jge
rorb
ss
xor
pop
decb
pop
dec
lds
jge
xor
bound
inc
fnstenv
xorl
adc
bound
and
les
add
repz
je
gs
pop
mov
aas
jne
xor
jo
in
data16
or
in
jp
dec
test
fcoms
sub
es
mov
lods
pop
mov
mov
lahf
movsb
jns
adc
cld
sti
in
lret
enter
sub
pop
imul
int
test
cmp
scas
insl
sub
repz
pop
scas
and
mov
lret
mov
and
adc
loope
sbb
push
stos
add
inc
std
xor
leave
and
pop
jmp
fldt
cmp
ret
imul
dec
outsl
cmp
stos
sar
insb
aas
mov
stos
lcall
mov
das
aas
push
add
inc
gs
das
add
sbb
scas
inc
mov
jae
lahf
push
xchg
cmpsb
mov
sub
fsts
jmp
dec
hlt
jmp
or
aaa
push
jb
push
in
push
dec
xor
sti
inc
mov
jno
push
test
test
push
inc
mov
mov
push
aaa
jl
dec
ja
popf
mov
js
mov
jp
sub
addr16
fisttps
insl
sub
mov
outsl
out
testl
adc
sbb
popf
mov
cmp
fstpt
or
das
aas
and
out
ljmp
push
or
leave
and
cmp
arpl
fisubrl
pusha
imull
enter
push
or
dec
imul
dec
mov
push
je
aam
sbb
push
aam
inc
xor
loopne
mov
call
loopne
sbb
or
mov
or
jno
not
icebp
movsl
pop
xor
jo
cmpsl
ds
fwait
pop
fdivp
cmpl
adc
push
mov
sbb
sub
hlt
xchg
repnz
adc
xchg
movl
pop
test
mov
cmpsl
imul
dec
fdivl
lcall
fnsave
testb
jne
hlt
dec
cmp
xlat
pop
dec
in
cld
leave
and
and
xor
shrl
mov
mov
fstpt
orl
lods
je
or
cli
lods
test
mov
popa
mov
sbb
or
dec
jns
sbb
leave
cmp
test
iret
arpl
testl
push
and
xchg
mov
lahf
stos
outsl
in
repnz
insl
jbe
ja
sti
mov
adc
pop
test
insl
subb
sub
rcr
add
mov
sub
adc
movb
sbb
mov
sub
pop
lcall
or
popf
arpl
es
stos
outsl
addl
cmp
xor
adc
mov
popf
test
std
mov
pop
jbe
mov
add
rolb
cwtl
sarb
cwtl
nop
outsb
inc
das
inc
aam
fwait
mov
movb
stos
mov
xchg
sub
insl
jle
sbb
pop
dec
bound
cmpb
imul
or
cmp
push
xchg
scas
cltd
iret
and
orl
popa
mov
andb
bound
mov
pushf
mov
or
mov
cmc
push
in
adc
xor
in
sti
leave
adc
fldt
inc
or
mov
push
jnp
xchg
lret
leave
lds
sub
fists
bound
xchg
popa
adc
sbb
fld
pop
lret
mov
cmc
cmp
and
lds
cmp
inc
add
push
test
ja
add
pop
and
or
adc
jl
fucomip
inc
xchg
pop
lock
xchg
sbb
xchg
cmp
xchg
sbbb
sbb
dec
dec
lahf
addr16
repnz
pop
jmp
lahf
push
xchg
mov
rcr
add
ret
or
in
or
pop
push
push
sbb
enter
punpckldq
loope
pop
fdivrp
jmp
ror
inc
insb
ret
loop
sub
jne
testb
outsb
dec
popa
mov
xchg
sbb
fucomp
aad
or
pop
adc
movsb
hlt
cs
aad
int3
push
cmpsl
add
pop
jb
jmp
xchg
cmp
and
in
and
push
imull
mov
add
mov
inc
push
cmp
cmp
sbb
cltd
lods
cmp
add
cmp
cld
in
and
or
push
popf
daa
jle
dec
enter
sub
shlb
jne
cmp
pop
jae
in
mov
dec
imul
out
mov
jae
pop
mov
daa
pop
xor
loope
scas
lock
lea
iret
data16
mov
in
mov
fdivr
in
xchg
sarb
sbb
push
pushf
cmp
lret
push
xchg
xor
iret
jge
jge
dec
pop
sbb
cmpsb
dec
jbe
lock
int3
rclb
pop
pop
lcall
sub
mov
add
mov
test
mov
dec
fs
add
cmp
icebp
sbb
sbb
stc
xchg
jns
mov
push
add
mov
shr
jno
sub
je
test
jecxz
daa
sbb
add
mov
xchg
stos
ljmp
leave
dec
in
fstp
loope
stos
cltd
mov
push
push
jns
fiadds
mov
mov
jb
das
sbb
ds
out
mov
xchg
cmpsl
mov
leave
out
sti
cld
push
jmp
and
jnp
xor
stos
push
enter
mull
jns
in
cs
mov
fimuls
int3
dec
pop
in
lret
xor
call
dec
ds
sarb
nop
push
out
rcrl
jecxz
call
inc
jno
gs
test
mov
pop
lret
outsb
clc
in
gs
outsb
adc
daa
jge
andl
pop
mov
inc
addr16
mov
cli
adc
inc
push
mov
push
mov
movsl
push
lds
dec
add
movsl
dec
push
sub
repnz
enter
fidivl
lahf
jne
or
cltd
xchg
aad
xchg
push
adc
mov
fldcw
sub
leave
mov
je
cwtl
test
xorl
test
mov
popf
sub
testb
ret
mov
pop
ds
inc
lea
ljmp
int
data16
sub
pop
xchg
jmp
stos
push
mov
mov
adc
cmp
pop
lds
rcll
lock
adc
mov
bound
pop
sub
jne
sarb
or
repnz
hlt
inc
or
cmp
xor
xor
push
jae
movsb
dec
out
in
popf
or
fimull
xchg
mov
inc
gs
xchg
jns
arpl
mov
in
pop
cmp
xor
ss
cli
cli
addr16
je
add
push
pushf
jbe
into
jne
push
push
rol
push
pop
aad
or
cs
cmp
stc
in
cmp
fdivl
imull
or
ret
out
lds
cmp
xor
dec
pusha
add
or
repz
daa
arpl
mov
loop
popf
sbb
jbe
pushf
jns
mov
fcoml
add
pop
imul
icebp
or
gs
add
incb
mov
dec
imul
xchg
mov
push
mov
mov
test
mov
mov
rcrl
add
fstps
or
lock
cmpb
jl
cmp
insl
xchg
sub
or
add
cli
lahf
pop
test
xlat
mov
push
cld
lret
jmp
leave
or
dec
mov
add
ss
aad
lods
inc
or
pusha
sbbl
insb
push
cmpsl
xchg
lahf
adc
stos
bound
xchg
xchg
add
and
dec
inc
icebp
adc
or
sbb
push
jmp
pop
imul
call
mov
and
dec
push
mov
cmp
inc
lcall
repnz
add
and
jbe
jl
mov
scas
lods
mov
repz
push
jp
mov
std
cltd
push
movsl
jle
into
in
jmp
outsl
int3
lret
mov
mov
pushl
jo
cmp
int
dec
test
lahf
mov
mov
pop
cwtl
loopne
push
xchg
outsl
or
cmpsb
iret
adc
mov
adc
test
lea
mov
mov
stos
lods
push
push
fdivr
int3
arpl
cli
sub
dec
enter
sub
loopne
scas
fstpl
push
sub
fidivrl
jl
add
inc
jecxz
mov
mov
push
fmuls
shlb
push
inc
notb
leave
add
rolb
aaa
mov
out
jns
es
mov
je
pop
push
mov
mov
xor
mov
push
mov
or
ds
addr16
jno
mov
push
jo
pop
sub
ja
rcrl
cmp
push
jp
rorb
into
clc
xchg
add
insl
daa
pusha
movsl
and
pop
rcrl
gs
inc
mov
bound
push
lahf
inc
vpor
gs
mov
fiadds
das
popf
xor
lcall
cli
sub
fmull
jae
xor
inc
fmull
cs
scas
sahf
sti
popf
push
adc
sbb
aaa
out
scas
sub
outsb
test
push
sti
fwait
loopne
add
aas
ja
mov
sub
repnz
aam
pop
pop
lret
and
adc
and
adc
test
dec
push
xor
fsubrs
pop
add
pop
loop
jne
sbb
je
into
ret
pop
mov
and
sbb
xchg
js
mov
jae
fwait
xlat
mov
jecxz
xor
in
std
dec
shlb
mov
addl
adc
xor
data16
dec
mov
rcll
mov
sub
mov
js
cli
and
mov
push
fadds
dec
ljmp
push
stc
jge
ja
push
lahf
dec
js
sub
adc
push
sub
mov
scas
mov
xorl
jmp
xchg
push
fidivrs
movsb
aas
pop
cmc
jo
inc
add
add
pop
jp
cmc
mov
inc
adc
xor
stos
jmp
icebp
push
in
ficomps
je
xor
and
imul
push
insl
aas
add
or
shlb
lret
ror
push
cs
loop
je
jmp
mov
xor
repnz
cli
or
cltd
hlt
sub
mulb
scas
addr16
xchg
sbb
call
push
frstpm(287
les
jnp
popa
xchg
mov
jmp
mov
sub
lock
adc
enter
nop
mov
jnp
icebp
imul
int3
push
ja
add
loope
mov
jle
stos
inc
push
cs
add
std
sub
rcrb
and
insb
xchg
mov
mov
mov
or
inc
adc
cltd
xchg
add
out
sti
in
xchg
jp
push
xor
mov
stc
enter
push
inc
fsts
shrb
pop
pop
in
inc
fldt
mov
add
dec
cs
aam
dec
inc
and
jae
cwtl
mov
inc
pop
mov
cld
ja
inc
mov
inc
addl
jmp
insl
sub
adc
sub
jmp
addb
pop
sbb
xorb
rep
fwait
xor
ss
pop
xchg
mov
jo
mov
bound
pop
xchg
jo
out
sahf
mov
cmp
fwait
data16
stos
inc
cmp
lret
xlat
jnp
int
xlat
adc
inc
test
jmp
sub
add
lcall
es
pop
mov
lds
cmc
mov
int3
adc
test
cmpsb
pop
pushf
fbstp
lds
pusha
dec
jp
clc
shlb
les
jno
popa
clc
dec
xchg
sub
cmp
popa
int3
stos
mov
mov
outsl
pop
and
mov
jge
adc
add
jge
imul
dec
sbb
jle
sbb
ds
imul
adc
fs
mov
sub
leave
pxor
sub
push
aas
xchg
xchg
stos
lods
or
testl
jnp
scas
pop
xlat
cmp
jns
cld
push
mov
pop
mov
enter
loopne
push
lret
or
mov
xor
dec
inc
insl
aam
sahf
shll
loopne
mov
test
sub
out
or
add
pop
mov
sbb
pop
inc
jp
sbb
ds
xor
dec
pop
ss
cmp
cmp
es
outsb
jl
jae
mov
inc
mov
stos
test
and
add
ss
addl
sub
push
mov
xor
push
adc
xor
test
scas
cmp
push
inc
sub
inc
mov
push
add
pop
add
pop
mov
daa
imul
inc
enter
and
orb
mov
sbb
dec
imul
or
mov
mov
sbb
jnp
ss
or
xor
jns
xchg
ss
aas
enter
dec
call
add
ret
dec
adc
sbb
sbb
ss
cmpsb
inc
outsl
fwait
or
push
sbb
shll
imul
cwtl
inc
loopne
or
inc
mov
in
sub
mov
cwtl
cmp
push
xchg
and
push
call
inc
add
mov
sbb
xchg
xlat
insl
xor
push
hlt
aas
movsl
mov
lahf
call
loopne
jb
pop
mov
pop
push
cli
xchg
inc
aas
stc
cmp
adc
rol
shlb
and
mov
enter
mov
mov
push
jo
negl
mov
pushf
mov
mov
std
in
sbb
sub
lock
addr16
in
jae
jo
inc
ficoms
sbb
lret
enter
or
jle
out
rcr
xor
sbb
stc
pop
stc
into
fldt
decl
fadd
stos
inc
cmc
cli
ds
popf
mov
std
loopne
movsb
in
cli
inc
sub
cmp
push
shlb
adc
nop
push
call
add
adcl
xor
dec
outsb
out
sbb
repz
lods
adc
inc
faddl
push
sbb
pop
sahf
ficoms
pop
cmpsb
cmp
inc
mov
shll
data16
pop
push
push
jmp
cmc
xor
inc
pop
jge
mov
add
in
fwait
cld
mov
mov
pop
rcrl
das
cltd
push
popf
inc
push
divl
dec
loopne
loop
sbb
xchg
addr16
sbb
jbe
cmp
fs
fcoms
fwait
xlat
mov
xchg
test
cmp
and
cmp
les
adc
and
jae
xlat
mov
pop
jecxz
mov
sub
pop
stos
or
popa
orl
adc
fiadds
mov
shl
popf
add
cmp
mov
ret
mov
sub
pushf
push
out
into
movb
data16
insb
subb
imul
enter
pop
fcmovb
mov
ja
repnz
cli
adc
aam
and
fwait
cmp
lock
adc
adc
imul
pop
aam
mov
jl
cmc
xlat
mov
test
sbb
push
fwait
push
cmpsl
jge
getsec
inc
in
add
sub
and
push
or
adc
dec
ja
es
ret
inc
fdivp
ret
xchg
pop
cmp
sub
loope
pop
out
test
gs
cmp
fwait
fs
xchg
jmp
mov
es
jno
cmc
mov
jbe
inc
push
add
je
fisubs
test
lcall
dec
sbb
jl
xchg
adc
repnz
mov
shrl
jns
jecxz
jle
or
xchg
pop
mov
je
mov
flds
pop
push
lret
pushf
and
push
movsl
dec
int3
mov
outsl
sub
fs
inc
mov
test
mov
das
nop
dec
jle
cmp
imul
push
pop
mov
clc
pop
aam
inc
xchg
ret
mov
cmp
lods
mov
jge
jno
xchg
jp
popf
mov
pop
or
bound
shr
stos
faddl
cmp
pop
jns
xchg
mov
loopne,pn
stos
scas
imul
bound
loopne
mov
cmpsl
ret
insl
mov
shrb
cltd
push
sbb
mov
mov
add
or
mov
add
push
sbb
inc
lcall
ds
xchg
dec
ljmp
movsb
push
inc
pop
out
xchg
ja
sarb
imul
ret
js
stos
cmp
cltd
pop
into
mov
mov
aad
das
add
cmp
arpl
add
fsubrs
mov
sti
es
stos
loope
push
dec
xchg
sti
sahf
icebp
out
adc
outsb
add
cmp
ror
inc
cmpsb
clc
cmc
mov
test
dec
xchg
adc
lds
xchg
dec
cmp
hlt
ljmp
and
sbb
insb
xchg
iret
cmp
shrb
jne
push
pop
jb
cmp
mov
cwtl
mov
dec
cmp
out
cmpsb
rcll
mov
pop
add
dec
cmp
jnp
or
imul
or
add
sbb
inc
cmp
lock
mul
nop
stos
sbb
popa
clc
cmp
xlat
xchg
fdivrp
dec
adc
dec
dec
gs
rcrl
test
sbb
stos
dec
into
sahf
lods
ljmp
sbb
leave
out
test
mov
or
push
pop
cmc
inc
stos
add
mov
gs
adc
push
loope
dec
fidivs
div
dec
push
movsb
sbb
lds
lcall
sub
in
std
nop
jne
add
dec
mov
mov
testl
dec
dec
lods
das
xchg
imul
pop
repz
xchg
aam
decl
ret
aad
dec
lcall
out
mov
jo
aaa
mov
aas
push
fwait
stos
xor
std
pushf
cli
pop
ds
mov
mov
sbb
adc
roll
cmc
dec
mov
push
mov
outsb
cmpsl
out
mov
test
dec
in
jae
fsubrs
jb
mov
pop
in
and
fs
stos
jne
out
mov
sarw
mov
pop
rol
test
std
push
fwait
fwait
jns
xor
imul
rclb
and
sbb
jge
xor
and
scas
fisubl
addb
lahf
jp
xlat
cmp
ljmp
ja
aas
sbb
aas
sar
add
mov
sub
xchg
dec
movsb
les
mov
in
jnp
inc
popf
xsha1
cmpsb
int
leave
lock
aam
dec
stos
adc
xor
ss
cmp
xor
sub
pop
dec
jecxz
mov
in
fmuls
cltd
fbstp
jl
jle
pop
std
or
ss
adc
push
das
or
xchg
add
in
adc
sbb
xor
cwtl
cmp
xchg
sub
adc
mov
xlat
dec
jbe
push
sbb
add
scas
sub
sbbb
hlt
pop
rcrb
pop
bound
jne
or
dec
es
cmp
pop
push
test
icebp
scas
sbb
dec
inc
jno
aaa
lcall
sub
sbb
and
in
shrl
lret
addr16
jae
push
xor
inc
add
pop
xor
xchg
jbe
fbstp
add
xchg
insl
jbe
dec
add
stos
hlt
mov
inc
in
inc
sub
movsl
cmpsb
test
ret
notl
jl
int3
dec
dec
inc
jge
mov
inc
xchg
ret
mov
fs
xchg
inc
mov
and
insl
mov
add
pushf
call
sub
stos
mov
dec
push
lods
pop
cs
es
xor
clc
out
add
inc
lock
inc
fs
add
out
or
cmc
or
daa
inc
movsl
lock
xchg
mov
movsl
dec
jecxz
push
mov
sarl
ja
mov
ret
hlt
mov
jg
das
aaa
lea
fidivrl
or
or
mov
jmp
daa
adc
sbb
lsl
data16
mov
xor
aas
add
dec
jecxz
lret
adc
jl
or
cmp
lahf
test
mov
jle
jge
sbb
outsl
jb
cmp
insl
sahf
frstor
jge
xchg
pop
fucomp
xor
in
aad
or
cmp
add
repz
xor
dec
ret
xor
xlat
push
xchg
std
push
cmc
adc
rcll
xchg
out
xchg
std
cmp
stos
dec
pop
mov
cmpsl
mov
sub
dec
repz
and
add
push
sahf
mov
dec
dec
jb
jl
sarb
fdivrs
pop
mov
lods
mov
fldt
clc
pop
sub
outsb
or
int
loopne
jno
ds
dec
push
stos
into
pop
fnstsw
shrb
sti
in
cmp
outsl
lock
lock
adc
mov
mov
add
push
aas
xchg
popa
mov
daa
cmp
sbb
pop
inc
out
pop
inc
push
iret
pop
xor
inc
dec
popf
pop
das
adc
xor
nop
in
jae
dec
scas
pop
add
rclb
clc
sub
mov
int3
dec
cmp
push
inc
dec
xchg
jl,pn
clc
sahf
sbb
mov
bound
cltd
push
stos
mov
mov
sti
jle
insl
cmp
jl
sub
ret
hlt
pushf
ja
mov
aas
dec
fdivs
stos
je
and
mov
in
cli
gs
into
push
out
in
imul
fs
mov
dec
in
sbb
outsl
rorl
or
mov
int3
cmp
mov
and
lret
test
fiadds
stc
scas
cs
cmpsl
and
cwtl
adc
or
mov
mov
xchg
insb
stc
cmp
mov
mov
push
in
int3
sub
fwait
pop
enter
adc
repnz
pop
dec
repnz
adc
cmp
xchg
movsl
stos
and
mov
in
adcl
icebp
or
add
xor
add
mov
dec
jb
stos
xchg
js
inc
hlt
stos
mov
xor
outsl
sbbl
inc
loope
push
mov
add
inc
insl
loopne
or
mov
sub
es
xor
pop
insb
std
push
adc
adc
lds
pop
jg
and
xchg
jns
lahf
cmpsl
jne
pop
cmpsl
enter
fbstp
int3
mov
jmp
cltd
je
das
std
adc
outsb
adc
or
emms
insb
shll
repz
xor
add
xor
mov
mov
inc
inc
nop
fwait
pop
imul
dec
dec
daa
jmp
mov
js
addb
jle
adc
and
jp
jmp
cltd
sbb
add
xor
adc
stos
mov
outsl
xor
jns
loope
out
push
mov
test
cli
sbb
ja
test
xchg
dec
cs
dec
bnd
fnstsw
cs
lret
je
ds
xchg
rclb
add
ja
int3
cmp
jg
pushf
rcr
lahf
adc
xchg
inc
mov
cmc
pushf
jnp
sub
jmp
je
scas
scas
cwtl
fwait
jo
xor
dec
mov
mov
sub
mov
scas
test
inc
or
subl
mov
addr16
sub
mov
shlb
push
scas
pop
jnp
jns
xor
mov
inc
xchg
outsb
adcl
push
imul
jb
insl
aad
cmpsb
stos
stc
push
in
mov
xor
adc
xchg
into
xlat
jne
cmp
push
scas
push
loopne
shrb
sbb
or
mov
repz
and
cmp
popa
dec
out
inc
xchg
pop
pop
mov
cmpsb
jnp
pop
fnstenv
jb
add
jg
mov
mov
push
sbb
fdivrl
psadbw
lret
cwtl
dec
xchg
imul
repnz
cs
into
and
sub
jg
push
push
fstpt
jmp
bound
jl
ds
cltd
cli
dec
fisubl
outsl
dec
sahf
sub
aam
dec
sbb
shlb
sbb
cltd
scas
sbb
push
mov
fwait
in
aam
mov
xchg
xor
fisubs
cmp
jmp
pop
jmp
inc
pop
sub
ss
fistpl
mov
imul
adc
loop
dec
repnz
push
sbb
xchg
cwtl
insb
lcall
jns
inc
mov
repz
xchg
ds
fidivl
and
xchg
cmp
cmp
xor
xchg
inc
inc
das
popa
ret
add
ds
pmulhuw
lahf
jno
or
cs
mov
adc
aas
daa
cmc
dec
aaa
bnd
add
aad
dec
push
test
push
pop
xor
mov
adc
popa
iret
nop
imul
fdiv
dec
sub
mov
dec
inc
daa
cld
xchg
into
mov
push
fadds
jmp
int
jo
movsb
push
mov
test
push
adc
addr16
nop
imul
cmp
dec
or
sub
lcall
ja
dec
addl
out
ja
daa
mov
outsb
ret
and
dec
lahf
or
fbld
fsubl
sbb
es
xchg
cmp
fidivs
dec
iret
push
repz
jp
rcll
push
stos
in
jb
iret
test
push
mov
imul
mov
data16
mov
xor
leave
test
orb
sub
in
notb
fistps
jg
pop
ja
adc
jbe
add
fstps
push
rolb
sbb
mov
pop
xor
insb
int3
movsb
inc
or
xor
dec
fstps
fwait
xor
mov
jno
addr16
repnz
or
ljmp
sbb
fcomps
and
stc
push
jp
fldenv
adcl
push
mov
aam
jmp
jae
dec
scas
mov
pop
cmp
movsl
pusha
loopne
pop
jmp
mov
jno
jno
in
xor
iret
gs
imul
int
mov
cltd
sub
mov
les
fldcw
xchg
ja
jge
cmp
fdivl
sahf
les
pop
push
lock
aam
or
mov
mov
js
jl
xor
lock
jns
xchg
sbb
or
and
loope
insb
cmc
shll
sbbb
mov
push
mov
stos
sub
pop
lret
mov
xor
xlat
outsb
mov
cmc
mov
ret
adc
jl
xor
and
cltd
sub
lret
push
clc
call
dec
cmpsl
pop
ja
xor
shlb
and
or
dec
mov
xchg
cmpsl
push
outsl
push
push
and
lcall
loop
dec
cltd
or
loope
mov
pop
in
jb
pop
fnsave
out
add
jb
mov
add
out
lea
or
push
sub
orb
xor
cmpb
push
js
cmpsb
fistpl
in
js
fs
sbbb
popa
or
sbb
hlt
scas
sub
pop
adc
xchg
dec
xchg
out
pop
sahf
and
sahf
xor
push
idivl
hlt
sub
dec
addr16
or
dec
rol
push
stos
por
int3
fdivp
cmc
je
fcoms
js
lcall
movsl
inc
xor
lods
mov
ljmp
xor
lcall
mov
popf
adc
jge
das
adc
ss
xor
hlt
imul
fs
in
das
add
mov
sub
scas
cmp
jo
cmp
ret
movsb
push
out
dec
mov
mov
xchg
stos
cs
fstps
mov
mov
lret
sti
stc
cli
shlb
jl
das
dec
xor
jb
imul
inc
xchg
and
aam
xchg
lcall
lret
inc
das
aad
fucomp
push
ljmp
call
in
adc
inc
xlat
into
mov
jb
movb
shlb
add
arpl
or
dec
loopne
loopne
xchg
cmc
rcrb
push
loopne
into
cld
movsl
mov
les
sahf
adc
loop
insl
xor
jl
push
jns
ret
repz
add
lret
int
sub
mov
and
pop
test
fstl
jle
in
sahf
push
or
mov
ret
negl
add
xor
xchg
cmp
es
repnz
push
sahf
lods
push
out
pop
cmp
and
aaa
or
lahf
jns
lods
daa
mov
leave
pop
stc
pop
mov
fwait
sub
les
pop
adc
addr16
adc
test
test
leave
popa
lods
sub
inc
push
pop
daa
scas
mov
stos
cli
int
movsl
loopne
push
movb
mov
or
or
pop
fimuls
cmpsb
add
loopne
popa
inc
pop
xchg
ss
repz
arpl
in
orb
lds
mov
mov
hlt
push
out
test
enter
mov
or
mov
js
ficoms
xor
icebp
mov
and
fisttpl
mov
jmp
movsb
mov
pop
outsb
sub
fildll
adcl
pop
sbb
shll
rol
adc
ds
negb
in
xor
cmp
in
cltd
lock
cmpsb
mov
or
sti
or
push
pusha
xor
cmp
int
mov
mov
in
decl
fsubrl
fistpll
add
mov
xchg
mov
aam
gs
and
repz
add
xor
sbb
mov
sub
cmp
mov
les
push
push
insl
std
in
das
mov
icebp
ja
les
shlb
mov
sub
pop
dec
in
push
xchg
aaa
push
or
sbb
jp
cmp
cmp
fsts
stos
mov
jae
aam
adc
cmc
cld
mov
cs
mov
clc
cmp
sub
xor
popf
mov
jmp
push
shll
outsb
or
outsb
insl
fwait
cld
adc
mov
mov
lods
jnp
ret
fisubrs
push
sbb
xchg
and
sbb
xor
sahf
jnp
mov
push
movsb
movsb
cmp
cmpsb
xlat
cmp
aam
mov
test
sbb
outsb
pop
mov
and
push
fs
dec
loope
or
mov
jl
push
lods
mov
cmp
dec
data16
cmp
push
sub
mov
mov
bnd
push
sbbl
and
test
push
fs
daa
mov
push
sub
xchg
rolb
cmc
jbe
pushf
mov
fists
adc
sub
dec
lods
and
popf
add
sbb
cmpsb
in
out
repnz
sbb
lock
mov
js
into
pop
mov
in
mov
imul
sarb
sbb
ja
insb
test
punpckhwd
ds
in
or
aas
int3
fadds
ja
sub
xchg
mov
dec
and
psrlw
mov
bound
cmp
push
inc
pop
and
clc
in
aad
popf
or
iret
adc
fs
mov
mov
aam
xorb
mov
ljmp
pop
fbld
mov
test
jbe
mov
cmp
cmp
pop
pop
aam
mov
int
dec
rorl
dec
pop
and
jp
mov
xchg
stos
push
adc
rclb
ret
adc
mov
mov
and
jmp
daa
or
subl
push
mov
nop
adc
movsl
sbb
mov
jno
fwait
sub
orb
sbb
lods
stos
dec
cmp
push
mov
mov
mov
ss
push
int3
out
jns
fsubrs
add
mov
inc
int
jo
fst
jo
cli
leave
xchg
stc
add
pop
ret
inc
fadds
sub
inc
pop
inc
pop
int3
pushf
ret
lock
jle
insl
mov
push
sahf
in
cli
insl
sub
lods
mov
dec
pop
mov
int
lds
lea
pop
sti
adc
enter
cli
rcrb
push
jge
div
cmp
insb
or
jns
aaa
dec
xor
outsb
cld
push
mov
leave
pop
mov
dec
push
hlt
mov
pop
push
fcompp
jo
int3
shll
imul
dec
cld
xor
cmpsl
arpl
fisttps
loopne
and
or
pop
cwtl
stos
dec
ljmp
in
sub
call
fsubrs
test
push
mov
sbb
inc
pushf
mov
fdivs
xlat
inc
jmp
xor
mov
fwait
mov
xlat
in
mov
cmc
and
jmp
mov
pop
dec
xchg
sub
cs
int3
lret
iret
into
out
push
iret
mov
dec
imul
jnp
es
arpl
hlt
adc
out
movsl
mov
jne
test
iret
sbb
leave
xchg
nop
cld
popf
lahf
pop
hlt
jne
mov
add
push
je
orl
aaa
or
cmp
test
fildl
push
cwtl
jne
lret
into
or
rcrb
push
cwtl
mov
into
xor
std
std
fs
and
pop
je
ljmp
notl
hlt
loop
repz
into
and
add
lods
jmp
rcrl
nop
int
test
and
call
mov
pop
sub
je
ja
stos
les
pop
xchg
dec
fadds
pop
das
and
push
mov
mov
clc
push
xlat
push
xchg
out
ret
loop
pop
push
cmpsl
out
ja
clc
mov
adc
adc
push
fnstenv
test
shll
jmp
icebp
rolb
push
push
inc
add
jae
push
jmp
dec
insl
jge
cltd
jb
push
loop
aam
punpckhwd
jecxz
xchg
lcall
pop
jmp
subl
shl
lcall
test
fs
sub
mov
arpl
xchg
jmp
mov
mov
out
popa
adc
jno
shl
pop
adc
mov
std
fidivs
cmpsb
lcall
xchg
cld
push
dec
insb
xchg
dec
dec
jecxz
xchg
ftst
leave
fpatan
push
and
adc
pop
mov
and
in
pop
test
dec
cltd
sub
repnz
pop
mov
scas
push
les
push
jno
mov
or
daa
xchg
insl
or
mov
mov
jne
and
mov
push
pop
push
add
jno
pop
push
mov
lea
mov
jg
ds
outsl
sub
mov
adc
fmull
adc
or
push
mov
add
push
xor
cmp
push
push
xlat
outsb
test
int3
dec
dec
and
inc
addr16
shll
int
cli
nop
mov
imul
shl
jo
sbb
adc
dec
divl
in
in
dec
xor
aaa
iret
in
ret
pop
push
movl
adc
mov
xor
xor
and
jge
cli
mov
push
sub
mov
mov
ljmp
mov
xor
cs
mov
cmp
or
lret
mov
gs
sub
lods
hlt
call
std
addr16
jb
sbbl
xchg
jge
or
push
mov
insb
xchg
or
int
and
pop
movsl
inc
test
fnstcw
or
in
lahf
sub
pop
jo
je
push
mov
in
loop
popf
mov
andb
insb
fsqrt
pop
imulb
cli
jmp
sub
mov
push
stos
dec
cmpsb
in
or
imul
cmc
mov
xlat
cmp
mov
jo
aas
push
jp
rcrl
mov
test
lret
fcompl
cmp
adc
mov
lods
jmp
loopne
cmpl
test
cmp
xor
popa
pop
movsl
cmp
mov
imul
inc
movsb
js
gs
addb
idivb
in
fisubrl
xchg
mov
dec
rclb
sbb
scas
rorb
insb
repnz
xor
dec
lods
push
js
push
dec
xchg
sub
xchg
mov
outsl
adcl
inc
stos
ds
lods
int3
mov
push
rorl
lea
inc
psubsb
nop
mov
mov
test
fwait
cwtl
mov
mov
inc
inc
and
push
mov
out
fwait
pop
and
push
xor
dec
test
lea
lret
or
add
cmp
addr16
lods
jbe
call
outsl
xor
fisttpll
out
in
adc
pop
xchg
jl
test
divl
add
stos
xchg
es
adc
sub
or
sbb
push
add
inc
fnstsw
shll
mov
or
adcb
je
imulb
pop
fildll
push
insb
lcall
ret
in
loope
in
add
adc
mov
cmp
sbb
and
add
or
test
movsb
pop
enter
fadds
pusha
cmpsl
std
xchg
sub
aaa
pop
lods
xchg
sbb
cmp
rorb
pop
jae
lea
stos
mov
sbb
pop
or
adc
fidivrl
lret
inc
mov
test
push
imul
sub
sbb
jbe
xlat
iret
aaa
rolb
stos
and
add
mov
xchg
iret
or
jae
sub
pop
insb
subb
xor
xchg
push
lock
orl
movsb
sarb
loope
sbbb
arpl
sub
cs
arpl
out
xchg
push
iret
mov
push
popf
xchg
mov
push
pop
mov
aad
sbb
mov
popf
ja
movsl
xor
loope
std
ret
repz
fidivs
add
sub
and
cmp
mov
loope
call
pop
xchg
lods
inc
adcl
adc
in
xchg
xchg
stos
mov
or
cs
xchg
in
iret
push
shll
sti
cltd
mov
pop
mov
push
jmp
adc
mov
fsubrp
std
imul
xor
mov
adc
jns
xor
inc
cmpsb
inc
mov
movsl
mov
jge
movlps
xor
sub
xor
xor
mov
mov
add
popa
push
in
cmp
test
scas
sahf
lret
pop
cld
loopne
sub
test
jne
push
lods
stc
loopne
mov
pusha
lods
fcoms
cmp
jbe
dec
add
fdivl
push
jp
xor
pushf
sub
pop
pushf
inc
mov
ljmp
ljmp
xchg
add
jl
xor
push
xchg
dec
xor
ficoml
into
sti
inc
notl
lods
pop
mov
icebp
stc
pop
mov
pop
lds
decl
push
push
or
sahf
aas
idivl
fwait
sbb
jae
movsb
test
stos
inc
mov
jb
cwtl
sub
pop
mov
xor
in
sbb
cmpsb
std
pushf
dec
fisttpl
popf
mov
loop
mov
mov
psadbw
mov
push
or
shl
fstps
incb
call
xor
push
jle
cmp
mov
out
aam
iret
pop
mov
xchg
pop
fwait
inc
fstpl
ss
out
es
ficoms
pusha
std
lret
jmp
stc
jle
mull
push
mov
stos
inc
pop
cmp
mov
insl
shll
add
dec
testl
nop
clc
inc
mov
daa
fidivs
sbb
int
add
aam
pushf
lret
repnz
sub
xor
cmp
rcrl
push
push
imul
adc
add
sbb
shll
frstor
cmp
cmp
jbe
mov
test
add
enter
sub
and
in
lds
xor
stc
ficoml
imul
mov
sarl
jae
insl
in
out
jmp
ds
pop
dec
jmp
dec
sub
cmp
icebp
sub
sbbl
rcrb
mov
mov
es
or
xchg
aaa
xor
outsl
mov
mov
jg
push
mov
or
inc
ficomps
mov
in
jne
adc
clc
es
cmp
fstpl
testl
daa
mov
jp
adc
cmp
mov
fmul
popa
inc
inc
in
jne
call
aad
in
pop
push
std
in
cmpsl
xor
test
inc
mov
dec
fwait
das
adc
xchg
pop
xchg
lret
lcall
mov
mov
lcall
movsb
push
rol
mov
add
gs
sbb
xor
xchg
fbstp
ja
mov
call
push
and
push
gs
outsb
adc
decl
jbe
jo
into
xchg
adc
fiaddl
arpl
sub
push
rcrb
pusha
mov
sub
xor
adc
js
and
pop
loopne
jno
jne
movsb
test
pop
insl
mov
fidivrs
xchg
xchg
stos
out
js
fnstenv
or
test
mov
ret
hlt
negb
lods
enter
push
fiadds
shr
scas
adc
inc
jg
fldlg2
mov
dec
pusha
repz
pusha
add
call
push
std
stos
jnp
xchg
add
xchg
and
nop
sahf
cmp
gs
lock
mov
popa
ds
pop
mov
sub
movsl
push
add
mov
aam
mov
sub
add
mov
dec
pop
xchg
nop
lods
add
mov
jmp
scas
mov
push
xor
in
mov
sbb
jo
aaa
into
mov
cmp
xor
fwait
and
lret
aas
dec
std
mull
je
mov
sti
xchg
movsb
mov
jae
cwtl
hlt
xchg
lret
nop
adc
or
call
push
roll
mov
sub
dec
pusha
inc
add
add
popa
repnz
mov
test
cmp
adc
inc
out
aaa
xor
arpl
into
out
lds
fadds
or
pop
ret
xor
fldln2
in
sbbl
leave
xor
lret
sti
push
adc
fwait
push
es
pusha
push
inc
hlt
jnp
test
ret
bound
mov
push
std
mov
inc
jns
dec
jb
pop
mov
int
rorb
sbb
jae
subb
pop
mov
lahf
and
cs
in
adc
cld
inc
fs
daa
inc
repz
scas
cmp
xor
jecxz
or
lods
sbb
jne
into
sbbb
cmp
loop
pop
sub
lcall
lock
or
xor
std
bound
hlt
jbe
xor
and
jmp
jo
or
iret
xchg
sub
aas
scas
cs
xchg
mov
sahf
xor
inc
in
adcl
aad
cli
lods
add
xor
push
int3
addr16
call
and
js
xchg
negl
pop
jnp
icebp
sub
inc
or
jnp
call
or
clc
mov
addr16
xor
add
in
mov
inc
mov
repnz
xor
je
and
cli
sbb
in
push
xor
cmp
jmp
mov
xchg
fistpll
push
ret
mov
add
adc
jmp
xor
push
and
pop
orb
enter
sahf
or
popf
cmp
and
inc
outsl
mov
mov
sbb
je
icebp
mov
out
sub
xor
out
das
out
lcall
call
and
out
inc
adc
xorb
in
inc
arpl
and
movsb
sahf
lea
jle
mov
mov
jle
dec
sbb
mov
pop
mull
pop
rclb
loopne
cmpsl
imul
out
in
inc
push
je
aaa
push
lahf
pushf
fnstenv
shlb
ds
loope
jmp
jne
out
lret
testl
add
push
in
insl
push
addr16
cmpsl
jae
icebp
xchg
mov
sbb
add
aaa
movsb
sbb
arpl
dec
push
and
dec
popf
sub
inc
stc
jbe
xor
jle
mov
lds
lock
loopne
lret
cmpsl
incb
stos
jne
mov
adc
movsl
sbb
or
add
dec
and
sbb
jno
xchg
fdivs
je
js
shrb
cmp
xor
rcrb
mov
pusha
pushf
sbb
repnz
and
fisttpl
lods
xor
mov
frstor
cmpsl
call
test
mov
pop
ljmp
ljmp
rorl
adc
cli
push
add
imul
rclb
fwait
mov
jp
leave
mov
cld
mov
push
mov
roll
mov
fists
dec
sbb
pop
fidivl
mov
mov
test
mov
xor
xor
mov
mov
fs
cmp
sub
mov
dec
mov
lahf
pushf
lret
std
aaa
adc
imul
daa
jnp
rolb
jecxz
aad
adc
daa
mov
jmp
pop
push
in
inc
sbb
add
jg
lock
sub
aad
jmp
add
gs
test
test
fidivl
or
xchg
push
push
sbb
push
lcall
js
and
dec
movsb
clc
push
cltd
out
inc
hlt
push
dec
mov
sub
dec
xor
mov
lods
add
je
mov
push
xchg
mov
out
aaa
fistpll
xchg
jae
mov
scas
push
xchg
in
or
js
fiaddl
outsb
inc
pop
adc
adc
push
inc
jno
mov
inc
test
repz
xor
out
pop
test
pop
loop
ss
or
jg
push
imul
gs
ds
outsb
dec
outsl
adcl
add
pusha
mov
test
out
insl
add
add
std
inc
pop
fs
pop
jl
push
add
xchg
add
inc
popf
stc
mov
cmpsb
adc
out
insl
inc
leave
lahf
adc
lds
jne
aaa
and
imul
add
inc
or
aaa
fldt
mov
outsl
add
sub
mov
pop
outsb
repz
popf
dec
repnz
lds
mov
jge
push
ficoms
mov
fld
fmul
sti
int
pop
sub
lds
outsb
stc
out
movsb
mov
add
sbb
xchg
movl
loope
sti
push
push
stos
cmp
sub
sbb
sbb
mov
xchg
jecxz
adc
xchg
mov
nop
xor
mov
adc
stc
das
adc
pushf
lea
mov
jl
sbb
arpl
and
and
inc
mov
cmp
call
pop
mov
scas
jae
mov
xchg
pop
int3
jge
pop
mov
xchg
jl
mov
fbld
dec
push
inc
out
adc
mov
mov
mov
aas
sahf
lods
icebp
cmp
mov
and
and
fst
daa
outsl
sub
jns
je
repz
fucomp
dec
mov
ljmp
mov
repz
out
cld
mov
cmpl
jl
cmp
xchg
sub
or
sub
xchg
test
jbe
mov
cld
push
mov
push
popa
test
call
aaa
test
cmpb
mov
mov
push
in
stos
xorb
push
or
or
pop
gs
adc
iret
xor
js
imul
lods
ret
xor
inc
xlat
outsl
inc
mov
xor
pop
mov
or
jle
ljmp
cwtl
shrb
daa
or
dec
dec
and
adc
fwait
jle
nop
daa
mov
mov
mov
inc
fdiv
mov
cmp
mov
or
pop
bound
movsb
jle
daa
mov
mov
jg
xchg
call
into
mov
scas
sbb
push
out
imul
cwtl
push
in
int3
lahf
imul
js
mov
loop
push
or
outsl
adc
inc
xor
std
fidivl
mov
adc
int
ret
push
add
ret
cmpsl
inc
sarb
in
std
and
cs
mov
xor
aad
movsb
or
test
sub
sub
lcall
or
gs
subb
jo
imul
iret
add
aaa
ja
rclb
jp
mov
jae
aam
dec
clc
bound
dec
popa
xor
and
fisubl
fisubl
in
adc
cltd
sub
sub
push
jo
add
int
and
pop
mov
add
xor
icebp
out
and
daa
add
mov
out
test
ljmp
in
or
add
jnp
xlat
push
mov
outsb
loop
inc
repnz
push
or
jnp
add
mov
and
xchg
jbe
fldcw
int
sti
sbb
xchg
xor
fucomip
hlt
fstps
adc
cmp
jbe
jno
xchg
test
xchg
xchg
dec
sbb
sub
mov
cmp
roll
js
dec
lock
and
dec
stc
or
lea
aaa
sbb
jge
inc
inc
in
inc
clc
je
call
jmp
int3
bound
push
dec
sbb
shrb
xor
jns
sub
in
outsl
sbb
adc
push
pop
or
pop
cmp
dec
pop
fdivp
enter
mov
fst
jl
jl
adc
adc
mov
mov
stos
push
in
jp
add
inc
pop
push
popa
pop
ja
inc
and
jmp
sbb
xchg
pop
xor
push
dec
dec
ss
pushf
popf
pop
mov
aam
in
rcrl
repz
or
test
push
fnstsw
and
insb
xchg
xor
outsb
push
arpl
inc
mov
clc
or
jnp
sbb
mov
cmc
add
adc
ret
test
and
lret
ljmp
data16
scas
fs
cmp
push
xchg
loopne
outsl
push
xor
xor
push
push
xchg
jl
sar
test
call
fisubs
push
sub
scas
add
cmp
fld
xchg
jp
sub
lret
testl
sub
jmp
das
dec
inc
xor
dec
nop
mov
push
push
loop
cmp
push
xor
imul
shr
cmpsb
js
add
iret
cmp
rclb
pop
stos
mov
xchg
lods
mov
cmc
mov
rcl
push
lret
fdivrs
mov
insl
sbb
lock
cmpsl
xor
add
jns
fildll
iret
sub
or
jbe
sub
and
fisubrs
xchg
inc
and
xchg
cmp
mov
stos
adcl
mov
subl
ja
push
mov
inc
cld
jnp
outsb
push
pop
sub
adc
data16
or
mov
lcall
mov
or
testl
jmp
inc
jp
in
andb
aas
bound
add
fwait
or
sbb
xor
repnz
mov
sbb
mov
mov
pop
and
cltd
cmp
and
push
test
fistps
sbb
std
and
ffree
ret
push
jg
ss
das
bound
mov
inc
adc
aaa
push
int3
fidivl
jno
adc
push
push
xchg
and
jg
push
incb
rol
outsb
pop
int3
mov
mov
or
imulb
inc
sub
jp
pop
dec
pop
add
and
mov
adc
add
xchg
out
rorl
jne
pop
jb
cmp
jl
sbb
push
cmpsb
dec
sbb
add
mov
outsl
xchg
jecxz
push
and
fisubrl
push
jmp
cmp
in
push
cmc
jmp
push
sub
xchg
push
and
imul
jle
inc
pop
pop
or
jo
lret
sub
icebp
lahf
mov
lcall
cmpsl
out
inc
xchg
sti
in
pop
cmp
adc
pushf
mov
mov
loop
cmp
pop
imul
and
pop
or
pop
cs
cld
shl
ss
fbstp
jb
sub
add
call
jo
fnstenv
dec
ja
xor
jns
loopne
or
ljmp
repz
test
xchg
sub
push
call
out
cmc
sbb
xor
push
lock
popa
add
sbb
push
adcb
jb
aas
sub
push
into
pop
mov
cmp
int3
or
in
jno
imul
mov
out
mov
sbb
icebp
and
fdivrl
js
dec
mov
scas
insl
in
in
into
mov
jne
push
xor
data16
imul
lock
in
dec
push
jbe
sub
daa
xchg
lcall
jmp
lcall
dec
in
xchg
rcrb
imul
sub
jge
shrb
lret
cmpsb
or
mov
aad
jl
pop
imul
mov
mov
or
stos
mov
xor
push
pop
gs
xor
addb
shlb
and
ss
data16
jg
psadbw
sub
xor
jp
fadd
inc
xor
mov
lcall
mov
aas
jl
mov
cmp
cmp
add
dec
mov
jl
lds
lods
loopne
clc
or
or
jb
imul
or
es
sbb
enter
mov
pop
test
mov
push
cld
cmp
repz
fsubrs
or
inc
push
jp
mov
dec
nop
daa
jge
add
adc
dec
inc
fstps
imul
mov
mov
out
lods
jb
cwtl
mov
adc
sub
aaa
stos
inc
mov
dec
leave
int
inc
imul
mov
sti
inc
pop
rcrl
js
sahf
and
lahf
sbb
cld
dec
mov
push
sub
outsl
add
data16
push
xlat
lahf
mov
sar
lods
filds
cld
paddq
mov
jo
push
ficompl
out
repz
insb
addb
call
or
adc
in
push
add
push
inc
pop
xor
daa
imul
stc
cs
jno
ds
iret
and
sub
add
rorl
jnp
mov
enter
and
push
xchg
cmp
icebp
divl
cmpsb
test
push
rolb
cltd
xor
out
lcall
sbbb
and
mov
push
xor
or
jno
stc
sub
jne
or
subb
arpl
outsl
shlb
xchg
push
enter
icebp
pop
jecxz
push
in
stos
adc
inc
leave
and
and
xor
and
add
mov
dec
test
sub
mov
incl
stos
xor
test
mov
dec
sbb
dec
imul
sub
lock
add
push
or
add
outsb
or
mov
cli
repz
bnd
push
lods
inc
aam
xchg
in
jg
sub
adc
xchg
es
push
insb
mov
in
scas
fstpl
mov
push
loop
ror
xor
push
mov
push
flds
push
imul
pop
cltd
mov
add
lret
popf
scas
out
sub
fildl
filds
call
jle
dec
add
jb
jl
sub
lds
lods
stc
out
cmp
mov
roll
popa
inc
negl
sahf
mov
mov
add
imul
adc
enter
lcall
mov
inc
pop
insl
inc
add
cmpb
popf
mov
or
call
mov
mov
xchg
fisttpl
jns
bts
testb
daa
data16
mov
push
mov
xchg
mov
je
rcrb
and
xchg
pop
sub
mov
decl
xor
or
sbb
add
pop
sub
jbe
addr16
sub
add
js
shlb
popa
dec
xchg
xor
xchg
cwtl
into
push
dec
ja
push
xor
mov
pushf
sbb
lahf
mov
jnp
cmpsl
lods
popf
or
xchg
movsl
testb
adc
nop
cmpsb
fidivl
les
iret
aas
or
pushf
or
mov
cmp
pop
jecxz
cmp
adcb
subb
or
stc
sahf
sti
mov
sbb
pop
out
jle
add
xchg
cmp
loop
cmp
imul
fisttpll
pop
jb
add
cmp
pop
in
shll
cwtl
addr16
arpl
lret
xchg
or
in
xlat
jb
ret
push
ficompl
lea
sub
hlt
mov
cmp
in
sbb
sbb
aad
sub
popf
scas
cli
sbb
mov
loopne
or
fs
in
add
frstor
cli
xchg
and
negb
jns
cwtl
out
sbb
xchg
lods
push
mov
shll
and
and
hlt
shll
jnp
xor
popf
jg
sbb
mov
popa
adc
iret
outsb
cmp
cmp
popa
sub
fidivrl
aad
xchg
cmp
xchg
mov
dec
or
pop
mov
mov
pushf
out
pop
dec
mov
inc
cmp
int
push
dec
pop
inc
add
adc
xchg
and
cmpsb
or
cmc
movsl
pop
mov
int3
out
int
cmp
stos
jmp
shlb
xchg
out
jecxz
ret
nop
das
adc
add
push
gs
std
lods
mov
jmp
pop
cwtl
ret
test
clc
cmpsl
cld
iret
add
ret
sub
aad
std
popl
add
mov
push
add
add
or
add
and
dec
loope
data16
xor
mov
stc
inc
psubsb
adc
arpl
mov
sbb
jp
ds
scas
mov
jle
es
test
cmpsl
std
test
adc
in
mov
xchg
out
or
je
fsubl
lds
mov
adc
cmc
xchg
gs
xor
insl
fcmovnu
hlt
mov
xchg
push
sbb
fimull
js
lock
out
inc
inc
sbb
enter
cmp
leave
andl
dec
pop
int3
icebp
pushf
jg
push
jge
cmp
stos
divl
sbb
repnz
shll
inc
xor
pop
jb
xor
psllw
nop
fld
scas
comiss
pusha
stos
leave
xor
es
inc
adc
inc
mov
fcmovb
pop
or
and
jb
out
sub
insb
out
testb
xchg
test
fidivrs
outsl
mov
xchg
add
adc
sub
jns
dec
dec
iret
xchg
push
sbb
std
xchg
push
subl
fcompl
aad
adc
les
dec
jnp
jae
or
pop
das
inc
and
mov
lea
xchg
jo
out
fstpl
xor
sbb
xchg
push
dec
pop
mov
or
push
das
inc
ja
mov
pop
xchg
data16
add
adcl
or
add
mov
pushl
das
mov
adc
cmp
int
fwait
pop
sub
add
and
push
stos
mov
imul
imul
dec
sarb
or
dec
jge
popa
or
adc
mov
mov
xchg
rcll
push
aaa
stc
iret
jb
frstor
sbb
adc
jmp
cltd
lahf
test
push
push
sahf
xchg
dec
inc
enter
out
or
jns
test
push
leave
push
xrelease
mov
lahf
add
dec
fisubl
mov
adc
loope
xchg
dec
and
push
jb
in
mov
sbb
push
lock
pop
testl
outsl
fmuls
or
pop
xchg
pushf
jp
xchg
stos
dec
shll
mov
xchg
cmp
mov
sbb
lock
push
xchg
mov
inc
xor
loope
enter
gs
inc
cmp
dec
je
loop
sbb
sub
repnz
xor
daa
in
pop
movb
lock
es
add
jge
adc
push
mov
mov
popf
das
pop
dec
lds
lret
sub
scas
pop
pop
loopne
adc
xor
xor
add
bound
mov
mov
bound
sarl
xchg
and
mov
ret
ljmp
neg
scas
rolb
xchg
mov
mov
out
mulb
ror
out
ds
xchg
loope
cltd
xor
add
inc
mov
ljmp
xchg
lret
jbe
xchg
daa
push
adc
testb
dec
sbb
cmpsb
mov
xchg
ljmp
and
inc
outsb
imul
test
aas
xchg
push
leave
jnp
cmp
and
fmull
rolb
mov
loope
xor
hlt
push
push
sbb
sahf
lods
add
jbe
fiadds
sbb
ljmp
in
mov
icebp
push
js
sarb
test
sbb
sbb
inc
test
mov
leave
push
jo
mov
data16
lret
mov
push
call
cmp
ret
and
arpl
add
dec
js
rcrl
cwtl
sub
cli
pop
mov
mov
sbb
sub
adc
pop
into
jb
dec
insb
add
call
push
sbb
xchg
ret
stos
dec
je
cmp
jecxz
push
adc
sbb
dec
mov
cmp
subb
lcall
int
rcll
jnp
inc
imull
jmp
aam
jp
lods
fwait
lret
roll
fwait
insl
test
lret
test
add
mov
inc
scas
fisubrl
cmp
pusha
lock
into
repz
ret
repz
shrb
popa
mov
testb
fldenv
lods
push
sub
leave
push
mov
add
lds
add
jne
lods
inc
cmp
adc
sbb
adc
jne
sbb
test
idivl
fs
xchg
pop
les
mov
add
mov
dec
hlt
sbb
cmp
rcrb
imulb
cld
filds
jne
test
sub
push
sub
hlt
pop
in
push
lret
dec
and
scas
push
fstpt
cld
and
mov
sti
push
stos
pusha
adc
mov
lea
mov
test
sub
out
stos
and
xor
lods
xchg
mov
in
mov
lods
lcall
in
test
jge
stos
jns
xor
pop
inc
loop
jno
shll
jmp
add
xlat
lock
jb
ret
call
fsts
jns
mov
aam
add
inc
stc
sub
leave
pusha
mov
mov
xchg
push
push
ljmp
inc
pop
ds
sub
inc
fisttpll
jno
and
inc
push
xor
adc
add
std
cld
decb
popa
lcall
rolb
cmpsl
pop
lock
stos
mov
test
rcrl
pop
ret
loopne
lea
sti
xchg
sbb
bound
cmp
hlt
xlat
mov
rol
popa
adc
jge
es
xchg
xchg
std
je
insl
mov
sbb
adc
fcoms
pushf
aaa
out
fimull
dec
ds
and
dec
movsb
psubsb
pop
pop
dec
movsb
mov
mov
bound
mov
ret
jnp
cmp
iret
scas
xor
out
xor
or
lcall
jo
or
inc
pop
hlt
jne
jmp
idivl
shl
push
lret
adc
cltd
int3
addb
adc
jne
xchg
pop
rcrl
ss
out
or
mov
cs
in
aaa
lahf
jmp
mov
hlt
mov
sahf
pop
outsl
xchg
loope
inc
hlt
add
dec
aas
or
fdivrl
jecxz
ss
mov
ljmp
outsl
inc
lahf
dec
cmp
jmp
ret
sub
mov
cmc
cmp
dec
xchg
sub
stc
test
jmp
sbb
ja
out
mov
ret
pushf
lds
push
jg
adc
dec
dec
ffree
mov
pusha
repnz
pop
sahf
outsb
cwtl
mov
mov
scas
inc
xor
insl
adc
cmp
ret
push
mov
ret
pop
loop
xchg
sub
outsl
pop
lds
mov
and
inc
and
push
push
hlt
fildll
push
sub
pusha
pop
or
out
sbb
jne
es
imul
arpl
fistps
mov
sub
push
loopne
sub
pushf
sub
mov
pop
and
jle
std
scas
pop
mov
adc
inc
push
mov
add
xorb
lds
call
sub
mov
lods
ja
ret
inc
shll
shlb
insb
push
movsb
xor
push
mov
rol
dec
xchg
sub
pop
outsb
pusha
sti
adc
cwtl
das
cwtl
xor
mov
iret
xor
arpl
stos
jmp
stos
cmp
mov
adc
out
cmpl
pushf
jle
lret
add
lret
pop
dec
out
dec
sub
xchg
aas
pop
dec
dec
cmpsb
std
hlt
sub
enter
dec
xchg
lock
stos
xchg
mov
fisubrs
lea
rol
xor
mov
fiaddl
testl
imul
fucomip
lock
jae
jb
hlt
mov
xor
loope
xchg
xchg
addr16
scas
fwait
cmp
xchg
push
lods
mov
shl
jae
xor
jmp
lret
fs
xchg
adc
jmp
or
divl
loopne
add
sub
mov
in
sbb
pop
mov
jl
shl
xchg
out
movsl
xlat
push
ljmp
jno
ret
cmc
pop
push
test
mov
cmpsb
loop
mov
jp
push
jbe
xor
mov
sub
sti
jbe
mov
mov
cmp
sbb
clc
lcall
sbb
xchg
add
shl
xchg
sbb
sbb
sbb
subl
sub
aaa
inc
sub
out
inc
inc
fs
out
fwait
jno
sbbl
mov
lcall
push
adc
mov
daa
xor
int3
inc
sub
push
fldcw
andl
jnp
xchg
aaa
jecxz
repz
outsb
test
and
xchg
dec
add
pop
lods
pop
mov
pop
mov
adc
jb
je
and
gs
dec
ja
xor
data16
dec
aaa
insb
cmc
pop
sahf
cmpsl
stos
mov
movsl
fxch
pop
add
loop
cltd
sub
int3
and
fistl
add
lret
test
out
inc
std
cltd
inc
inc
mov
movsl
loope
xchg
adc
out
popa
mov
dec
pop
push
add
je
add
push
sub
out
roll
jbe
test
addr16
shll
cmp
sahf
xchg
mov
push
mov
push
and
stos
shll
add
mov
push
fiaddl
fbstp
imul
mov
lock
adc
mov
imul
lods
testl
mov
dec
mov
inc
dec
xchg
cmp
adc
in
jnp
dec
mov
sbb
sbb
pop
cwtl
sub
mov
and
ss
inc
fimuls
btr
dec
int3
push
js
or
jb
mov
and
mov
ljmp
push
or
ja
bound
dec
movsb
cmp
cmp
sub
call
sub
jo
push
push
inc
fs
mov
ss
xor
xchg
stos
mov
dec
cmp
dec
pop
sbb
sbb
add
lods
aad
out
cmpsb
mov
subb
and
arpl
sbb
push
mov
fidivrs
cmp
and
push
cmp
adc
les
push
jb
mov
mov
outsb
sbb
dec
xchg
sbbl
push
push
jg
push
call
outsb
add
aam
push
sbb
punpcklbw
push
or
push
popf
ss
push
and
pop
push
xor
pop
fs
push
xchg
lods
sbbl
stos
mov
mov
lret
inc
jge
cmpl
out
mov
outsl
int
jne
xor
ss
or
out
mov
add
cmp
inc
xor
testb
jnp
jns
jge
mov
push
int
cli
cmpsb
push
push
outsb
pop
movl
or
lret
xor
sbb
sbb
fwait
dec
dec
mov
repnz
imul
and
int
xor
dec
sbb
inc
pop
xor
mov
rorl
into
cs
inc
dec
inc
scas
std
xlat
inc
fiaddl
sub
mov
stos
loope
lret
jecxz
repnz
fisttps
into
cmp
sub
in
add
push
cmc
mov
loope
lret
lahf
sbb
push
cltd
iret
pop
push
movsl
jl
in
sub
int3
test
repnz
mov
imul
sbb
in
push
jg
push
insl
subl
cld
js
in
out
jns
and
jmp
xor
xor
ud1
sbb
xchg
xchg
xchg
mov
mov
arpl
jno
into
lret
push
pop
icebp
add
cli
fisubs
xor
jg
dec
andnps
inc
stos
xor
cs
xor
cmp
orb
mov
mov
ljmp
push
push
aas
shrb
shll
imul
sti
mov
leave
das
call
lret
sti
jne
xor
ret
fcomps
or
cmp
adc
cltd
dec
sbb
jle
out
xor
jmp
aaa
fwait
sti
cwtl
ret
fnstenv
mov
icebp
xor
stos
pop
adc
push
dec
sbb
mov
inc
or
insl
inc
call
or
pop
pop
out
inc
call
cmp
add
popf
jg
ret
mov
jmp
pusha
out
dec
push
push
mov
int3
mov
lods
fnsave
pop
and
negb
int
test
adc
mov
out
push
nop
or
xchg
adc
fs
or
fwait
ss
mov
mov
repnz
mov
sub
sti
rclb
subl
cmp
insl
fdiv
test
mov
jmp
lret
ret
push
out
sub
xchg
inc
jle
add
push
cltd
sahf
js
sub
mov
pop
jge
cld
and
pop
pop
imul
mov
cmp
pusha
ljmp
leave
inc
cmp
jae
mov
lahf
imul
inc
stc
out
fcoml
filds
mov
mov
out
fcompl
jg
xor
xlat
je
dec
fs
jb
sub
dec
mov
gs
mov
push
sbb
dec
cwtl
nop
xor
ret
das
xchg
push
sub
popf
xchg
cld
in
dec
pop
daa
cli
jmp
adc
lods
or
leave
ds
mov
jge
mov
push
les
testl
jno
mov
loope
test
sub
mov
iret
pop
inc
adc
mov
lock
cmc
lods
jmp
insl
in
jmp
pop
incl
into
mov
testl
adc
fdivrl
popf
scas
and
lods
addr16
xchg
sub
add
das
lcall
lds
loopne
cmp
xchg
mov
insl
ret
mov
subb
jecxz,pt
ja
pop
rcrl
xlat
add
das
xor
xchg
jbe
aas
xchg
movsb
shl
arpl
aaa
cmpsb
cmp
push
stc
dec
dec
cmp
lcall
xchg
shrb
mov
xor
lods
out
cmpsb
les
mov
xor
cld
cld
xchg
nop
ds
ss
inc
outsl
daa
mul
lods
push
enter
pop
xor
js
push
sub
iret
xchg
jge
enter
mov
les
loopne
rol
sbb
fs
sbb
adc
stos
ljmp
cwtl
adc
sarl
mov
adc
loope
lods
mov
test
popa
add
or
ss
sti
inc
fcoms
aaa
sbb
add
adc
or
and
jl
aam
pop
mov
sti
push
mov
sbbl
adc
mov
jns
inc
sahf
jb
aad
leave
sbb
push
shl
inc
cmp
movsl
mov
jecxz
dec
sbb
jns
dec
popa
mov
jb
mov
aad
pop
push
inc
repz
mov
enter
es
jae
push
movsl
push
cmpsl
stos
sbb
pcmpgtw
int
int3
mov
ret
aaa
loopne
inc
data16
bound
xor
sbb
popa
imul
adc
pop
lds
lcall
dec
in
test
add
mov
stos
sub
mov
adcb
adc
stos
mov
adc
cltd
call
int
test
test
adcl
mov
or
cwtl
pop
arpl
and
cmp
and
aad
daa
mov
pop
filds
jns
ret
rcll
mov
mov
and
inc
pop
shrb
mov
cmp
jns
mov
mov
dec
mov
sub
xchg
adc
jmp
enter
dec
pop
mov
faddl
sub
or
cwtl
loope
sarl
dec
sbb
add
nop
pmullw
out
inc
pop
ja
xchg
inc
test
aam
sub
nop
xchg
pop
dec
add
dec
mov
push
repz
ja
mov
popa
ds
mov
cwtd
pop
push
pop
xor
mov
imul
mov
test
add
je
cltd
xor
in
inc
popw
in
dec
aad
sub
fistpl
js
repz
aad
dec
pop
rorb
jle
mov
cmp
icebp
cmp
mov
loope
push
push
xor
mov
xor
mov
mov
mov
sub
mov
inc
dec
cmpsb
mov
jae
test
or
fbld
add
mov
fabs
filds
incl
and
lods
mov
cmpsb
xchg
push
jmp
orl
sti
fwait
dec
ret
and
push
jmp
push
lret
xor
or
xor
mov
mov
jmp
sahf
xor
and
push
mov
jp
fwait
pop
adc
stos
imul
pop
hlt
call
or
push
insl
add
add
mov
and
out
cmp
xor
aad
loop
mov
sub
addr16
icebp
ficompl
dec
sti
and
insb
aad
mov
test
icebp
sti
addr16
fsubrs
in
jle
pop
mov
fldlg2
sahf
or
scas
movsb
mov
inc
fcoms
or
lock
pop
shl
mov
loope
pop
data16
sahf
sub
adc
rcl
adc
stos
push
das
cmp
addr16
fsubs
les
les
test
test
mov
inc
mov
push
clc
aaa
hlt
aaa
into
loope
addr16
push
mov
and
inc
xor
inc
cmp
jg
sbb
jns
xlat
outsl
das
pop
fnstenv
fsubs
add
xorl
subl
out
adc
inc
mov
pop
pop
imul
push
jne
pop
mov
or
mov
mov
ss
jg
dec
shrb
movb
mov
mov
out
addr16
cmpb
and
mov
sbb
jae
stc
inc
mov
and
adc
outsb
scas
ja
pusha
popf
xor
push
sbb
pop
outsb
sub
pop
and
je
jbe
jg
sti
psadbw
repz
cld
lock
jo
push
cmpsl
pop
jb
jmp
sar
xchg
test
pop
cltd
pop
sbb
jb
in
dec
and
mov
cmp
dec
daa
daa
leave
or
push
jmp
cmp
insb
out
mov
xor
xchg
daa
sub
mov
aam
rolb
imul
insb
add
cmp
pop
rcrl
cmp
mov
sbb
test
rcr
test
jmp
inc
sbb
in
mov
scas
mov
sub
fists
xchg
dec
mov
jmp
mov
add
arpl
cmp
stos
jmp
cmp
cmp
inc
scas
inc
cmp
int3
add
jno
sbb
jge
mov
mov
or
jae
pop
push
call
repnz
hlt
aas
fidivs
dec
out
int3
lods
cmpsl
repz
fidivrl
fcomp
cmpsb
cmp
xor
adc
mov
add
dec
xor
push
push
adc
fstpt
sbb
xchg
int
cltd
fadd
daa
or
clc
cmp
push
aas
push
cmc
sub
cmpsb
inc
repnz
test
pop
dec
dec
add
testb
pop
sahf
cmp
aad
in
out
icebp
mov
sbb
mov
js
push
outsl
cmpsb
jge
sbb
jb
xor
cmp
stc
add
js
and
ror
arpl
fcmovb
jbe
in
cmp
lret
jge
adc
mov
imul
lahf
or
stos
lea
imulb
cmp
mov
movsb
mov
inc
sbb
js
lds
sub
inc
and
pop
sahf
mov
sti
push
or
mov
in
push
scas
call
xor
aaa
fmulp
in
inc
and
and
push
mov
jb
test
ret
pop
leave
cmc
inc
fucomip
xor
jl
mov
or
addr16
and
pop
movsl
fidivrl
inc
xor
mov
mov
dec
cli
push
out
rorb
add
outsb
shll
js
lods
mov
mov
cltd
xor
js
lock
and
fdivrs
mov
mov
adc
adc
clc
jnp
mov
cs
add
jp
je
dec
nop
pusha
stos
mov
test
dec
dec
mov
jnp
dec
mov
cli
sbb
imul
add
testl
loopne
xchg
pop
cmpsb
stos
mov
dec
dec
loop
pop
inc
push
roll
pop
sub
push
inc
push
mov
pop
out
xchg
xor
pop
inc
jmp
fidivs
inc
and
jge
sahf
cmpsl
adc
sub
lock
scas
push
fistps
in
mov
in
fistl
repz
and
ljmp
repnz
les
mov
jae
jle
or
insl
add
inc
push
pop
add
ret
or
daa
or
js
jbe
repz
sub
mov
push
test
sbb
adc
xorb
pushf
mov
mov
add
push
inc
bswap
cmp
fistl
or
fnsave
sbb
pusha
jle
shll
jecxz
push
jge
mov
lret
shl
cld
out
cltd
jne
aaa
and
xor
inc
adc
loope
rorb
push
andl
pop
sbb
sub
aaa
dec
cmp
pop
out
inc
push
adc
push
push
fld
or
lods
ja
int
fcomps
dec
mov
mov
fisubrs
repnz
das
push
mov
call
sub
dec
je
cmp
xchg
jmp
or
addr16
scas
push
pop
pop
sbb
lock
imul
in
orb
aad
nop
push
in
jno
or
jns
rorl
addr16
bound
jle
popa
into
aad
sub
dec
std
cmp
stos
xchg
movsb
mov
jmp
xor
fsubrs
inc
sbb
imull
fs
std
loopne
mov
out
xchg
or
sbb
mul
idivb
pop
cmp
push
and
pop
fimuls
imul
loopne
push
adc
sub
fwait
inc
nop
xchg
add
inc
xchg
aad
push
in
jns
mov
inc
fld1
mov
pop
hlt
test
jge
pop
out
popf
cmp
lock
bound
inc
in
test
jnp
js
lret
xchg
sub
sub
add
pop
cltd
mov
cwtl
jne
mov
jle
push
cmp
jae
or
or
jg
push
lds
lcall
fwait
or
and
mov
push
outsl
in
sbb
cmp
mov
push
jne
mov
rclb
icebp
push
movsb
cmpsl
mov
shr
cwtl
loope
and
mov
pop
xchg
out
andl
dec
data16
cld
idiv
inc
scas
imul
lds
adc
sub
dec
pushf
ffree
data16
mov
mov
inc
popa
and
xchg
jns
adc
xchg
add
jge
cwtl
popf
push
mov
pop
outsb
sbb
xorb
or
scas
sbb
inc
jle
lods
imul
arpl
mov
mov
mov
xchg
jmp
ret
out
jmp
sub
and
pop
pop
fst
popa
inc
popl
mov
adc
int
mov
std
jbe
movsl
rol
dec
popa
inc
ss
or
es
sub
or
and
cmp
das
test
push
add
sub
jno
sub
repz
fstpl
fs
mov
inc
scas
icebp
aad
sbbl
lods
jno
nop
inc
ss
call
inc
push
and
in
dec
pushl
cmc
js
test
test
fstpl
stos
popl
es
je
leave
scas
mov
pop
mov
daa
or
cmp
mov
adc
jp
mov
lahf
test
neg
jo
call
clc
and
dec
sbb
mov
add
push
sbb
push
xchg
cmp
icebp
gs
adc
fcoml
jb
push
out
cmp
jne
mov
xchg
test
in
xor
mov
push
inc
testb
jmp
mov
and
sub
aaa
stos
mov
dec
mov
loopne
inc
addr16
shl
scas
incb
scas
pop
cltd
mov
or
out
xchg
js
or
pop
or
into
aam
dec
fcoml
int
xchg
shrl
lcall
push
sub
in
pop
out
jl
fdivs
push
scas
xchg
movsb
negl
add
mov
std
push
push
pop
pusha
cmp
daa
fcoms
mov
shl
fdivr
daa
repz
pop
and
ret
hlt
mov
clc
jae
movb
mov
cmp
add
push
test
pushl
aad
add
stos
rcrl
imull
movsl
ret
adc
push
ds
in
ret
mov
and
push
push
inc
fcompl
lahf
pop
cmp
cltd
pusha
sub
in
jnp
je
jge
das
mov
into
push
inc
fadds
stc
pop
and
mov
shrl
add
test
sub
mov
cmc
mov
sub
push
and
orl
pop
push
popf
in
iret
xor
outsb
pop
or
mov
mov
sub
adc
pop
push
mov
fistl
xlat
test
inc
pop
out
faddl
in
fsts
jbe
or
sahf
pop
sahf
int3
arpl
pop
cltd
das
and
mov
jb
jle
cmc
push
sbb
inc
es
popw
iret
lret
gs
ja
insb
xchg
cmpsl
mov
xchg
add
shll
pusha
xchg
sub
mov
loopne
in
push
mov
ret
and
add
fidivrl
loopne
enter
jb
mov
push
orb
ss
inc
repnz
mov
pop
push
into
lds
inc
pusha
mov
shlb
fdivr
or
jl
sub
pop
fwait
cmpsl
adc
daa
dec
les
xchg
xor
push
jne
push
sbb
ljmp
or
call
xchg
jo
popa
cmp
cld
mov
lret
mov
fstpt
dec
aaa
xor
nop
sti
or
dec
dec
scas
sbb
sub
sarb
xchg
pop
and
pop
pop
dec
aas
or
repnz
pop
cmp
push
scas
push
or
ret
inc
fbstp
in
jne
xchg
and
dec
fsubr
mov
pop
repnz
mov
mov
scas
xchg
out
imul
push
fsubrl
jp
sbb
xchg
ror
add
std
repz
sbb
cs
cmp
xchg
mov
adc
or
daa
inc
or
test
outsb
jp
adc
pop
sahf
xchg
lds
out
pop
cmp
ja
pop
cmpsl
dec
pop
sub
or
inc
sub
sbbl
in
mov
test
and
arpl
lcall
rcll
ret
rorb
push
movsl
in
ret
loopne
fildl
inc
cmp
pop
fisubrl
push
repz
pop
push
test
push
push
cltd
mov
js
imul
mov
sub
idivl
ja
inc
cs
insb
clc
dec
aad
js
jle
rolb
icebp
xchg
add
ds
push
es
pop
cs
insb
pusha
inc
add
sub
ja
shll
and
shlb
ret
bound
dec
mov
sbb
add
and
es
push
xchg
fiadds
dec
sahf
lahf
fdivrs
sbb
xor
rcl
xchg
js
gs
jg
subb
aaa
mov
outsb
iret
das
fdivrs
mov
inc
fbstp
lea
mov
fbld
das
incb
lock
loop
in
xchg
adc
insl
sbb
das
push
jnp
mov
cwtl
mov
lret
adc
data16
lret
push
push
inc
cltd
adc
enter
shr
and
dec
mov
fnsave
mov
inc
mov
adc
cmpsl
scas
xchg
sbb
jnp
test
movsl
cltd
push
adc
push
mov
fidivs
push
mov
adc
fwait
ret
inc
popf
adcb
xlat
adc
jl
mov
pop
ficoms
push
js
ret
inc
pop
js
or
stc
fstpl
push
mov
mov
shll
inc
aas
fcoms
mov
mov
in
pop
add
loope
in
mov
push
push
xchg
sbbl
out
inc
sahf
orl
sub
movsb
push
gs
push
cmp
sub
sbb
sarl
push
ss
adcb
mov
jns
outsb
xchg
xor
in
and
lods
sub
xlat
scas
sbb
stos
enter
std
pop
mov
mov
xacquire
dec
paddd
inc
popa
testl
jle
push
xor
test
int
mov
subb
mov
mov
fcompl
adc
fcoml
into
inc
jbe
sbb
mov
icebp
adcb
aas
je
cmp
pop
push
mov
pusha
mul
or
aaa
mov
je
xlat
and
mov
rcll
sti
xor
js
lods
icebp
ret
lcall
sbb
cli
movsb
xchg
mov
rcpps
jno
out
popa
mov
outsl
cmp
neg
or
add
sub
mov
cld
or
push
fcoms
es
les
cmc
add
cmc
test
pop
sbb
mov
or
icebp
pop
sub
or
sysexit
outsb
add
hlt
xchg
inc
mov
mov
imul
cmpsb
mov
fldcw
aad
lods
nop
xchg
das
in
and
and
xchg
push
sub
xor
gs
jbe
sti
ja
popa
rcll
fstl
cmp
stos
repz
je
andb
mov
lock
push
jns
iret
push
or
pop
lds
add
pop
aad
cltd
push
mov
fsts
aam
mov
imul
xorb
fistpll
popf
pusha
in
push
int3
sbb
imul
shrl
sbb
repz
push
out
cs
mov
rcrb
or
arpl
adc
ja
outsl
cli
shlb
mov
stos
jo
rorb
std
pushf
bnd
fs
cs
sub
adc
jp
jnp
xchg
es
loope
jns
sbb
cwtl
sbb
mov
mov
jp
test
or
cli
clc
dec
out
jmp
dec
mov
aad
rorb
adc
xchg
dec
aaa
push
mov
jb
loop
test
jno
push
test
testb
cmp
xor
mov
testl
lods
mov
lahf
xor
push
aaa
popf
mov
sbb
pop
test
cmovns
sahf
pop
push
sub
mov
mov
ficomps
les
mov
pop
mov
add
mov
test
and
jae
cmp
dec
jge
ljmp
mov
push
push
outsl
shlb
das
sbb
dec
popa
jg
mov
ljmp
mov
insb
movsl
lds
sub
dec
xchg
adc
outsb
nop
inc
mov
pop
cmpsl
pop
push
jo
shrl
cld
mov
scas
mov
cmp
nop
repz
into
and
dec
iret
es
mov
out
dec
push
xor
push
sub
aam
and
je
mov
loope
pop
insb
fnstsw
mov
test
pop
imul
or
pusha
or
pop
movsb
xor
dec
xchg
jns
mov
mov
or
test
mov
dec
push
ds
in
or
std
dec
iret
cmp
sahf
test
jo
push
popf
push
inc
idivb
cmp
cmp
mov
ret
lret
movsb
mov
pause
and
pop
push
mov
cmp
fistpll
das
add
mov
pop
mov
vphaddubd
cmp
mov
es
aaa
rcr
and
inc
nop
mov
mov
dec
jb
leave
pusha
mov
pop
out
jp
mov
inc
adc
ljmp
jno
roll
es
data16
pop
fisubl
pushf
arpl
dec
bound
sub
mov
ljmp
mov
jl
sub
ss
enter
sti
mov
fidivl
sbb
call
mov
movsb
ss
push
sub
hlt
leave
push
popaw
mov
les
clc
bound
mov
pop
add
ret
out
inc
pop
mov
loopne
fwait
and
push
test
repnz
mov
xchg
outsl
enter
dec
sub
pop
pop
fstpl
movl
xchg
adc
imul
push
pop
fistpll
adc
sub
clc
jnp
cmc
mov
mov
ja
xor
dec
test
js
in
cmp
leave
push
dec
pusha
inc
ljmp
mov
test
dec
jle
push
inc
jmp
out
mov
jno
sub
push
inc
daa
pop
mov
popa
fistl
out
jb
leave
lret
xlat
loopnew
movsl
cmp
mov
dec
mov
lahf
adc
sub
mov
jbe
push
pop
sbb
into
lds
xchg
pop
dec
jno
jle
icebp
insb
mov
push
imul
outsl
cmp
push
insb
scas
call
and
das
mov
ret
mov
sub
mov
int
andl
rorl
fmuls
mov
push
mov
outsl
imulb
push
add
mov
daa
cmp
sbb
jecxz
dec
push
inc
pop
aas
les
sbb
xlat
dec
pop
mov
fldenv
into
pop
push
mov
add
cltd
jmp
iret
xchg
xchg
add
insl
add
les
pop
cmpsb
xchg
cmp
cmc
sbbb
or
jle
pop
imul
les
jge
jmp
rclb
inc
push
sbb
jl
cmp
mov
mov
getsec
sub
jb
das
lret
in
dec
imulb
mov
scas
jl
mov
mov
cs
mov
pop
std
mov
into
sub
repz
xchg
mov
ljmp
dec
aas
mov
cld
stos
sub
fdivs
dec
pop
enter
dec
cmp
jl
adc
adc
cmp
cmp
outsl
loop
add
test
sbb
lcall
mov
push
shlb
or
xor
das
mov
scas
mov
pop
and
and
jmp
dec
dec
imul
jg
sub
push
inc
pusha
mov
es
mov
outsl
out
fxch
mul
stos
mov
sbb
icebp
push
nop
popa
movsl
ss
dec
je
sub
loope
xor
rcrb
add
mov
test
scas
js
mov
fsubp
jns
scas
imul
subl
out
and
and
pop
mov
addr16
xchg
xchg
pop
adc
into
ss
mov
ss
jmp
mov
cmp
std
inc
mov
and
test
or
fcomi
push
sub
mov
mov
out
xlat
push
setno
ds
aas
imul
addb
cmc
repnz
adc
cmp
xchg
sub
sti
inc
add
sbb
lret
je
push
add
and
push
fmull
push
repz
inc
or
mov
push
into
imul
xchg
mov
inc
repz
pop
sahf
cli
mov
dec
movsl
inc
cli
push
stos
icebp
dec
push
cmpsl
addr16
daa
sbb
add
dec
jae
mov
jnp
mov
cmp
cmp
add
add
add
std
xlat
mul
in
sbb
pop
aaa
pop
add
push
cmp
jp
push
inc
jns
add
int3
cs
orb
mov
fisubrl
mov
lods
or
sub
mov
stos
or
and
in
sbb
pop
or
jmp
xchg
mov
xchg
sbb
mov
shll
cmc
mov
jno
out
jbe
lods
rorb
movsl
dec
in
pop
cltd
addr16
and
mov
leave
xor
inc
das
inc
in
test
pop
in
mov
fwait
bnd
sbb
jmp
xor
loope
xlat
push
call
and
adc
sub
movsb
mov
insl
mov
dec
cmp
cmp
daa
lods
in
popf
sub
cmp
cmp
shll
in
mov
rorb
in
lds
es
or
adc
push
push
jb
hlt
call
negl
mov
and
aas
or
jbe
cs
lret
into
xchg
divb
dec
adc
pop
push
cmc
mov
and
and
add
imul
test
rcr
jne
push
push
outsl
pusha
fldt
pop
loope
cmpps
mov
fiadds
dec
dec
sbb
inc
xchg
nop
mov
mov
xor
sub
or
jp
jge
ret
jae
cmc
sub
or
data16
leave
sarb
stos
mov
ds
das
aam
stos
rol
leave
mov
es
gs
pop
lea
dec
or
ja
stos
inc
sbb
xchg
sub
test
mov
test
jbe
dec
movsl
mov
pop
and
std
xchg
stos
add
fdivl
popa
les
push
push
mov
mov
movsb
adc
fsubrp
ret
pop
lret
fmull
push
sahf
mov
iret
das
xlat
mov
std
cmpsb
mov
push
insb
mov
sub
push
mov
inc
pusha
pop
rclb
lock
adc
mov
loop
xchg
pop
xsha1
cmpsb
mov
mov
mov
je
cmp
pop
mov
repz
jnp
xor
fisubrl
jmp
xchg
popa
mov
mov
inc
lahf
dec
arpl
mov
mov
and
iret
mov
xor
push
call
lcall
stos
adcb
mov
push
stc
je
add
push
popf
dec
pop
incl
pop
imul
sbb
pushf
or
xor
jbe
adc
dec
jmp
div
dec
fbld
popf
popa
and
fildll
loopne
and
fimull
test
fdivrs
enter
pop
adc
test
addr16
and
ljmp
das
cmp
xchg
mov
insl
xchg
or
or
xor
cmp
cld
push
dec
dec
andb
fdivl
mov
push
jns
repz
pop
insl
notb
push
pop
xor
cmp
lahf
and
mov
mov
sub
ficompl
and
jbe
push
popf
das
imul
clc
xchg
fprem1
mov
add
jmp
adc
cmp
lret
popw
mov
je
jns
std
cltd
rcr
out
pop
pop
pop
jmp
repz
jb
push
movsb
clc
sarl
or
add
sarl
sbbb
add
adc
xchg
pusha
cmp
shlb
data16
mov
pop
adc
sti
dec
xor
sub
daa
inc
mov
and
or
out
in
sub
sub
dec
psrad
inc
fstps
addb
clc
pop
mov
lea
push
aas
lret
addr16
push
pusha
xchg
jp
cwtl
movsb
mov
dec
into
mov
cld
jg
outsb
gs
imul
jmp
rorb
cmp
daa
data16
xchg
xchg
scas
enter
mov
mov
movsb
loopne
mov
sbb
pushw
dec
jae
decl
cmc
xchg
sub
cli
jne
cmp
in
push
adc
arpl
dec
or
leave
sbb
das
or
add
and
sahf
xlat
push
jo
fdivrl
aaa
cmpsl
leave
call
pop
sti
lahf
adcb
mov
bnd
scas
inc
xlat
clc
jae
shlb
fisubrs
out
bound
fsts
cmp
stos
imul
mov
and
push
pop
inc
push
test
mov
sbb
fbstp
loopne
fadds
inc
sub
mov
cmpsl
in
int3
lahf
mov
sbbb
or
aam
add
lock
sub
mov
mov
out
inc
add
testl
xor
pop
cmp
aas
insl
outsb
adc
jmp
movsb
inc
fstpt
pop
gs
mov
fildl
mov
lock
sti
mov
push
jmp
in
push
jbe
xor
dec
and
dec
lahf
stos
data16
ja
and
cmpb
sbb
dec
scas
xor
ja
jg
sub
insw
mov
insb
or
scas
mov
xchg
push
push
iret
adc
ss
mov
lahf
sbb
es
dec
sub
jecxz
sahf
cli
xchg
adc
frstor
mov
gs
std
ds
outsl
ret
negl
xchg
out
mov
inc
movsl
inc
iret
cwtl
lods
inc
lret
jo
pushl
fists
int
and
scas
mov
pusha
mov
iret
test
daa
cmp
push
xlat
jno
andl
mov
inc
sarl
lods
inc
push
je
out
in
cld
xchg
inc
imul
js
pop
loop
xlat
inc
mov
icebp
aaa
jl
movsl
pop
movsb
das
insl
cli
sbb
daa
mov
enter
xchg
mov
pop
lcall
jmp
aad
xchg
in
imul
stc
addr16
inc
push
notb
iret
xchg
lods
adc
arpl
loop
and
test
inc
scas
out
cld
xor
add
hlt
loopne
sbbl
inc
jae
xchg
mov
ds
mov
dec
sub
loop
and
fwait
xor
lret
fcmovnu
movzwl
cli
fisttpll
movsl
or
movsb
repz
cmc
testb
pop
adc
scas
imul
xor
cwtl
daa
imul
push
push
loope
ds
jp
outsb
stc
pop
lods
fxch
stos
lods
dec
dec
rcrl
fst
jb
jno
mov
push
add
pop
sbb
inc
stos
jae
popa
das
sbb
test
xor
dec
pushf
mov
jo
sarl
fwait
scas
pop
dec
jecxz
mov
adc
mov
jmp
divl
outsb
insb
add
push
mov
pop
cmpsb
adc
enter
lods
mov
cwtl
clc
push
fs
jb
clc
mov
jne
popf
in
shll
inc
sbb
push
or
je
mov
sbb
push
mov
testl
mov
or
pop
xor
and
test
fdiv
test
inc
mov
jne
ror
mov
inc
test
dec
fidivs
adc
jno
push
lods
sbb
andb
mov
aaa
sub
push
aam
push
jp
jno
jle
daa
call
pop
mov
aaa
pop
push
test
in
cmpsb
mov
inc
fwait
xchg
scas
cs
push
iret
imul
push
mov
adc
cmp
sbb
imul
ds
test
popf
push
ret
out
or
fsubrl
inc
adc
outsb
shrb
push
jmp
sbb
daa
stos
out
and
or
cltd
cmpsl
ja
into
fcoml
pop
dec
sahf
xchg
pop
scas
ret
cmp
popf
jne
stos
ljmp
inc
adc
std
sahf
sub
add
xor
mov
cmpsb
popa
fidivl
lds
pop
les
decl
cmp
shll
mov
ret
nop
stos
inc
fisubl
mov
dec
add
shrb
pop
push
mov
cmp
pop
adc
push
mov
xor
les
push
rcl
or
pop
push
or
or
sbb
push
cmpb
dec
jne
mov
fists
and
scas
inc
fwait
cld
pop
cli
lock
push
or
pop
int3
xor
jle
lea
lea
fisubrs
arpl
hlt
movsb
or
adc
push
jbe
subb
xchg
int3
leave
enter
push
popf
push
mov
lret
jo
xchg
and
or
mov
lea
daa
enter
lock
lods
sbb
loop
outsb
mov
jb
cmpb
pop
push
pop
dec
dec
pushf
idivl
ret
inc
xor
icebp
add
rcl
aam
pusha
xacquire
gs
ss
or
xchg
jge
mulb
and
mov
incb
test
test
jbe
mov
inc
and
popa
pop
fiaddl
mov
add
movsl
imul
iret
test
xor
cmp
inc
pop
ficompl
call
movsl
add
fisubs
popa
lcall
pushf
inc
dec
mov
push
jmp
push
movsl
xlat
rorl
jne
inc
cli
xchg
mov
fs
xchg
roll
out
fdiv
rcr
scas
call
lret
add
call
stos
out
notl
cltd
pop
xor
mov
in
std
cwtl
xor
fisubs
js
out
scas
scas
sub
or
scas
adc
push
sbb
push
add
rol
lret
adc
ss
mov
pushf
sub
xchg
mov
or
lds
jmp
jg
fisubrs
sub
fwait
sbb
inc
fstpl
sbb
out
lods
icebp
push
jne
mov
push
repz
aad
outsl
push
or
jecxz
mov
ret
adc
xchg
lods
ror
push
mov
ljmp
aas
in
sbb
cmp
pop
jle
jl
adc
mov
mov
adc
ljmp
or
es
fidivs
sub
fisubrs
lds
push
lcall
inc
sbb
je
add
mov
sahf
inc
arpl
jmp
mov
jge
fwait
cmp
dec
loopne
mov
cmp
sub
mov
mov
shlb
and
add
scas
and
mov
or
pusha
fldt
lea
out
mov
rcrb
movsb
inc
dec
mov
jnp
sub
xchg
call
sbb
pop
sub
fnstcw
and
xchg
cmc
or
sub
scas
insb
fsubrs
mov
test
sbb
sub
mov
jne
cmp
dec
push
in
mov
pop
dec
loop
lret
lret
sub
jmp
mov
cmpsb
iret
cmp
ficomps
inc
dec
lahf
in
rcl
mov
cwtl
test
rcrl
inc
leave
pop
out
push
and
shll
push
call
bound
iret
inc
fadds
jle
xchg
xor
pop
mov
rorb
sarl
pusha
test
lret
lea
mov
int3
and
push
in
xor
and
add
mov
push
xchg
sub
jmp
mov
sbb
push
mov
push
pop
cs
daa
shlb
insl
xchg
add
out
popa
xchg
outsb
adc
ret
mov
clc
xchg
cmpl
xchg
in
dec
push
sub
mov
xor
pop
mov
arpl
push
mov
or
aam
fdivrl
push
sbb
and
inc
flds
mov
loop
ds
cmp
dec
aaa
sub
aad
dec
mov
mov
jl
fmulp
dec
sbb
dec
push
int3
in
cmpsl
in
fsts
and
ds
xor
fbstp
adc
in
in
addl
cmp
xor
les
cmp
inc
movsb
add
lret
push
inc
stos
adc
mov
fisubrl
insl
jmp
leave
pop
or
cmp
pop
cmc
cs
sbb
adc
gs
xor
xchg
sbb
in
or
sahf
into
movsb
pop
mov
pop
insl
lea
mov
cmpsl
pusha
ret
mov
jge
jmp
lret
pop
adc
mov
call
xor
stc
xchg
sub
xor
mov
sub
adcl
sub
pop
dec
add
loope
lock
imul
xor
lret
addr16
das
mov
xchg
sbb
xchg
out
pop
xor
shrb
dec
xchg
addr16
mov
jp
in
and
inc
sti
call
andb
daa
fstp
sbb
test
inc
cld
cmp
xor
adc
sub
insl
mov
movsl
cld
cmp
sbb
mov
cmp
adc
cs
ljmp
idivb
inc
sahf
sbb
jge
and
inc
test
jbe
push
daa
scas
fiadds
ret
loopne
mov
pop
int
adc
xchg
xorb
repz
test
mov
jmp
mov
ret
dec
fucomi
test
sahf
adc
dec
bound
xlat
lea
fidivrl
rcr
ljmp
adc
adc
daa
mov
pop
daa
jae
adc
pop
push
cmpsl
gs
and
lea
insl
mov
mov
mov
dec
shll
lahf
push
xlat
mov
in
mov
fdiv
push
inc
cmp
jo
cmp
inc
lods
mov
xor
xchg
dec
stos
add
sub
out
sub
les
mov
pop
mov
cmp
mov
popf
xchg
bound
push
dec
fcmovnu
pop
or
sbb
dec
sbb
outsb
and
jo
icebp
std
or
sub
int
mov
leave
rclb
fwait
dec
fldenv
stos
push
shrl
push
sub
pop
push
pushf
test
xchg
stos
test
leave
or
insb
leave
gs
mov
fdivrp
fsubl
inc
adc
test
ret
out
sti
ss
imul
subl
fisubs
xchg
dec
mov
mov
xchg
js
jne
pop
mov
pusha
cltd
test
push
xchg
out
test
shl
inc
cmc
sbb
and
xchg
xchg
sbb
adc
sub
ljmp
push
repnz
cmp
fstps
sahf
ret
inc
xorb
test
lahf
cs
popa
insl
add
les
add
data16
popf
mov
mov
test
outsl
enter
adc
sbb
scas
push
cltd
mov
sbb
pop
add
xchg
add
aam
enter
and
push
jne
sbb
jns
mov
cmc
fiadds
pop
int3
sbb
push
rcrl
pusha
lret
cwtl
mov
ret
mov
and
arpl
ret
rclb
movsl
jne
add
fstps
rorb
fcmove
jecxz
add
mov
and
mov
std
xchg
mov
dec
push
cmpb
leave
mov
jnp
xchg
sub
mov
insl
mov
sarl
repnz
cmpsl
cs
sbb
sbb
push
cmpsb
pop
jnp
push
test
push
or
jge
das
out
sbb
or
push
xor
sbb
test
mov
cmpb
push
add
cmpsl
sbb
mov
xor
jnp
in
dec
and
hlt
push
jb
out
mov
arpl
outsl
pop
add
xchg
dec
fs
mov
inc
into
adc
inc
push
out
jp
cwtl
xor
pop
movsl
jb
or
imull
rcrl
mov
mov
in
jno
mov
out
jg
pusha
push
std
lods
or
cmp
or
mov
movsl
mov
test
mov
iret
sub
jo
jl
lret
sub
cmp
int3
add
xor
pushf
fwait
int3
mov
mov
pop
sti
and
mov
mov
inc
les
pushf
ret
in
aam
cwtl
and
sahf
xor
imul
xor
les
mov
or
stos
imul
jmp
sti
into
les
push
inc
jo
push
jb
gs
repz
pushw
loop
cs
add
in
mov
pop
and
pop
je
pop
mov
int
inc
fmul
fsubr
cli
push
ss
aaa
cs
imul
test
popf
dec
mov
mov
aas
popf
sbbb
rorb
repnz
xchg
mov
push
out
push
adc
subb
mov
dec
xchg
aas
rclb
cmp
or
repz
mov
ret
mov
jno
loopne
fldenv
jecxz
fstpt
stos
jbe
sub
push
xchg
in
imul
push
in
popa
clc
rol
ret
int3
addl
scas
mov
push
xor
mov
notb
cmp
push
addr16
inc
pop
mov
jne
js
adc
cmp
addb
imul
arpl
les
jle
loope
mov
jp
sbb
push
sub
pop
lods
or
inc
inc
sub
sbb
dec
pushf
add
aas
dec
sbb
fdivl
clc
mov
sahf
into
cmp
stos
lret
cld
ja
ret
sbbl
fadds
mov
int3
fwait
adc
lods
lea
addl
mov
jl
std
in
cmp
int3
test
ljmp
inc
int
xchg
mov
sub
add
or
jb
mov
stc
fadds
sub
lock
pop
sub
repz
popa
data16
lahf
cmc
jle
sub
subb
das
out
and
jbe
stc
outsl
daa
add
or
pusha
mov
fwait
mov
insb
fistpl
andb
or
mov
mov
int
mov
mov
sbb
jns
pop
push
pop
pop
scas
mov
xor
add
bsr
adc
in
add
push
mov
clc
fsubr
sbb
cwtl
inc
mov
lret
jb
imul
dec
and
xchg
mov
sbb
mov
xchg
fists
add
hlt
mov
orb
fwait
push
ret
ljmp
cs
dec
inc
xchg
mov
imul
icebp
fmull
aaa
ret
sub
sbb
jg
rol
shrb
sub
xlat
jp
mov
inc
mov
rcll
and
cltd
sub
stc
insl
jb
jb
inc
sbb
iret
bound
inc
stc
popf
adc
mov
pop
mov
rcl
nop
sub
xchg
xor
xchg
ljmp
sbb
xchg
inc
insb
adc
xor
repnz
xor
pop
clc
jg
aad
addr16
xchg
inc
lcall
xor
je
call
repnz
lahf
sbb
testl
add
sub
imul
fucomip
movsl
dec
sub
in
inc
mov
push
or
adc
pop
xchg
mov
nop
gs
xchg
rolb
stos
aad
cs
adc
sub
pop
jle
pushf
xchg
xor
pop
mov
les
jmp
pop
lock
pop
lods
mov
inc
push
jbe
in
dec
shrl
cs
bound
insb
xor
lods
dec
mov
pusha
adc
fs
insl
add
ss
xor
adc
lea
push
push
add
test
daa
in
addr16
sub
popf
les
jns
lds
clc
enter
lea
andl
enter
jp
in
cltd
jne
xchg
and
sbb
jp
mov
mov
xchg
adc
push
ret
xor
and
pop
sub
jb
test
stc
lds
push
jge
push
rcrl
cmp
in
or
xor
and
and
sbb
je
fisttpll
cmp
add
mov
fcoms
jge
je
inc
out
lock
xor
push
jle
pop
xchg
sub
mov
int
or
shrl
lret
push
dec
sbb
out
fldl
divl
pushf
clc
sbb
xor
push
mov
adc
lods
mov
and
mov
lcall
in
into
fisubrs
ja
sbb
mov
stc
fstl
cwtl
test
inc
rorl
aad
sub
or
stos
test
pinsrw
xor
sbb
das
push
push
stc
lea
das
std
lea
rep
mov
sbb
xchg
adc
inc
dec
bound
aam
and
scas
add
sbbl
lods
push
loopne
adc
mov
in
ret
aam
enter
mov
mov
mov
jb
add
sub
mov
push
jl
and
and
xlat
hlt
insl
repnz
add
mov
lret
in
xor
shll
dec
mov
in
adc
push
loope
mov
sbb
mov
xor
push
mov
jbe
pop
popf
jbe
mov
jg
or
add
or
push
inc
insb
mov
jmp
pop
jb
or
adc
xchg
imul
in
loop
push
jns
js
lea
sbb
into
fdivl
stos
push
cwtl
adcl
adc
inc
jge
sbb
cltd
rcll
shlb
sub
xchg
dec
negb
add
jl
dec
mov
push
lret
rclb
jne
aas
push
pop
outsb
ds
adc
jo
sahf
testl
jp
mov
pop
jo
data16
jno
xor
lods
sarb
pop
lock
cmpsb
inc
addr16
lea
test
fidivl
incl
mov
xchg
ret
enter
mov
jge
test
adc
dec
lret
sbbb
fstpt
stos
std
xchg
xchg
fbstp
lahf
cmpsb
and
scas
adc
push
inc
int3
ss
int
popf
pop
iret
push
xchg
sub
sarb
push
or
fcmovne
xor
push
cltd
and
sti
sbb
mov
push
or
dec
push
cmp
lret
clc
jmp
test
ja
push
fs
push
xchg
jge
add
jg
jp
dec
adcb
xchg
push
xlat
test
pop
cmc
inc
insl
adc
push
jl
in
push
jo
or
add
mov
push
sbb
mov
loopne
wbinvd
bound
xchg
mov
jae
jl
mov
add
mov
sbb
mov
imul
lcall
mulb
inc
test
jno
out
test
inc
mov
std
sbbb
adc
and
push
adc
push
xchg
dec
hlt
adc
adc
es
inc
gs
mov
fmuls
inc
enter
lret
push
inc
sub
gs
mov
mov
sbb
xchg
push
out
iret
cmpsl
es
jecxz
push
sub
xor
les
cmpsl
rcl
mov
lahf
leave
pop
mov
sub
movsl
fdivrl
push
adc
push
fwait
cmpsl
andl
push
add
sub
jl
pop
sub
inc
pop
cmp
decl
xor
push
jmp
dec
test
mov
imul
xchg
into
lock
push
adc
mov
mov
sub
push
and
mov
push
loope
aaa
xchg
mov
mov
fistpl
outsb
inc
mov
ret
insb
mov
lds
loop
xchg
repnz
fsts
jbe
inc
jb
jns
dec
add
jo
das
xchg
jae
lcall
xchg
rcrb
and
fstps
cmp
cmp
pushf
testb
jp
mov
add
jp
out
ret
out
push
sub
jbe
into
sbb
and
fdivl
push
push
aad
xor
cmp
xor
mov
cld
stc
sahf
in
inc
jns,pn
add
cltd
adcl
fs
cld
adc
pop
cs
and
mov
dec
inc
icebp
hlt
fiaddl
icebp
adcl
lock
cmp
sahf
xor
xor
shl
mov
ret
fdivl
leave
xchg
push
aaa
pop
test
mov
popa
fistps
mov
sub
fnstenv
or
xchg
shrb
jmp
dec
dec
dec
movsb
mov
fsubr
push
mov
outsb
popa
jl
lods
fmull
fadds
dec
push
xchg
pop
mov
sarb
adc
mov
inc
adc
out
pop
test
dec
lods
sub
jp
je
jmp
dec
cmc
fdivrl
mov
les
or
stos
or
addr16
ret
aad
mov
or
leave
insl
cmp
nop
and
xchg
idivb
insl
popa
repz
call
inc
xlat
mov
mov
lahf
adc
xlat
jl
and
sbb
bound
ja
mov
fimull
adc
popa
lock
fdivr
and
and
insb
push
insb
addr16
xchg
adc
jbe
les
sub
pop
cltd
dec
inc
xchg
adc
add
xor
and
add
xor
mov
out
add
fdivs
add
xchg
sub
sti
cmpsl
mov
leave
cmp
movsb
xor
fsubrl
and
data16
rclb
mov
in
or
int3
addr16
fxch
cli
out
mov
and
pop
mov
jno
jo
sub
stc
inc
jmp
add
xchg
dec
in
cs
data16
sbb
lock
sbb
sbb
addr16
sub
sbb
rcrb
mov
adc
sbb
sub
in
subb
or
and
xchg
fisubl
add
subl
mov
sub
call
es
int3
out
xchg
mov
ds
jne
out
stos
pop
inc
push
xlat
js
mov
or
cmp
or
outsl
inc
mov
push
lea
push
mov
test
lods
mov
popa
ss
adc
leave
jmp
xchg
sub
test
xchg
push
fdiv
fisubrl
test
dec
sub
unpcklps
mov
and
xor
mov
xchg
and
loope
push
fidivs
incl
movsb
cmpsl
out
xor
stc
cld
cli
dec
mov
dec
push
inc
cmp
inc
jecxz
lcall
mov
bound
xchg
xchg
into
enter
movsl
cmp
inc
push
test
cmp
cs
fistpl
call
mov
aaa
lods
popa
xor
xchg
push
shlb
adc
jne
fdivrl
push
sbb
cmpsb
mov
call
imul
outsb
adc
fdivrl
pandn
fs
iret
popf
imulb
or
roll
mov
cwtl
scas
out
in
pop
sbb
sbb
pop
mov
rclb
sub
push
sbb
mov
push
push
jne
mov
pop
or
pushf
aaa
cmp
fstp
sbb
ljmp
xor
nop
xlat
jge
pop
cmc
sbb
aaa
repnz
jo
test
push
mov
push
call
stos
cmp
dec
push
jno
inc
jecxz
ficoms
jne
or
inc
dec
aam
out
xchg
int
pop
in
out
or
dec
or
push
jno
jae
cs
jle
arpl
pop
jae
addr16
lods
daa
push
aaa
fs
dec
movsl
inc
stos
xchg
shrb
xchg
jo
movsb
repnz
dec
cltd
outsl
lds
std
dec
dec
fildll
lods
ljmp
es
jns
int
push
lcall
lea
rolb
mov
xor
jge
add
push
fsubl
pop
add
pop
scas
mov
imulb
in
jnp
insb
call
mov
add
mov
popf
cmp
arpl
jl
lret
lods
mov
push
mov
ret
shr
std
rclb
sub
dec
cmp
test
mov
outsl
pop
or
xchg
sbb
dec
jg
inc
divb
pop
cli
mov
sub
pop
popf
cwtl
test
in
movsl
push
sub
shrl
pop
scas
fucom
mov
mov
or
stos
inc
lret
push
add
iret
push
add
jns
inc
mov
add
pop
cmp
adc
sbb
dec
mov
fistpl
mov
ja
adc
mov
or
imul
out
mov
ss
js
jae
mov
data16
aad
test
mov
into
add
cli
adc
ss
xchg
add
push
mov
es
add
mov
movsl
stos
push
mov
push
jbe
sub
test
mov
insl
xor
mov
and
jmp
cmpsl
mov
mov
push
adc
or
inc
cmp
push
mov
inc
in
dec
xchg
gs
fstps
add
jg
mov
sub
inc
int3
mov
jl
mov
pop
orb
jl
in
ljmp
jb
data16
arpl
sub
cmc
mov
mov
or
out
inc
inc
daa
or
jb
fnstenv
xchg
dec
dec
sahf
scas
push
or
scas
pop
push
sahf
mov
pusha
cmp
test
cmp
and
sbb
inc
jge
fnsave
scas
fisubrs
xor
js
lods
push
xchg
out
push
in
push
xor
movsb
mov
xchg
bound
mov
or
mov
jecxz
js
mov
push
nop
adc
aaa
push
into
insb
mov
and
cmpsl
jnp
cmpsb
inc
pop
inc
sahf
lret
mov
in
mov
push
lcall
mov
xor
mov
into
popa
test
fmull
ds
fdivr
es
sbb
stos
je
loop
ss
in
cltd
ljmp
cmp
lds
aas
mov
pop
movsl
push
inc
mov
lahf
mov
and
movsb
loop
pop
imul
outsl
or
pushf
or
dec
jns
ret
lds
inc
push
loop
shl
jp
jb
jnp
ja
and
push
bound
mov
adc
sti
and
data16
aam
cmp
ja
pop
imul
imul
loope
ret
mov
push
sti
push
jmp
adc
jmp
push
lret
fcmovnb
int
or
fnstenv
mov
and
xchg
xchg
aad
repz
mov
adc
mov
aam
arpl
es
adc
cmpsb
ret
pop
mov
add
jno
out
out
cmpsb
out
popf
mov
test
and
cmp
push
pop
sub
pop
lahf
mov
push
lret
xlat
inc
push
lahf
imull
mov
das
fprem1
sub
daa
mov
test
hlt
outsl
xacquire
push
je
test
sub
lods
and
mov
xor
out
lods
inc
ret
movsb
mov
push
scas
pop
fsubrs
mov
push
push
sbb
adc
lods
jge
popa
das
xor
fcoms
sarb
adc
xchg
ja
cltd
push
or
outsl
pushf
jnp
fistps
pushf
xor
lcall
in
ret
and
push
ret
and
pop
jo
or
nop
pop
adc
xchg
xor
shr
movsl
xor
mov
aas
mov
lret
mov
jne
xlat
mov
mov
pop
add
cmpsl
sahf
cmp
hlt
xor
mov
inc
or
jl
push
callw
and
push
outsl
shrl
cmp
add
mov
mov
inc
adc
add
sub
push
push
pop
lds
sub
sbb
js
std
inc
jne
pop
leave
inc
pushf
mov
jbe
inc
jp
xor
push
das
xchg
jnp
lret
adc
out
rorl
adc
or
out
mov
cltd
je
add
mov
hlt
push
jb
adc
mov
ret
pop
xor
pop
xor
fiaddl
dec
js
notl
push
adc
jle
dec
push
rcrl
or
inc
pop
mov
fs
in
xchg
inc
push
jns
xchg
stos
inc
lret
push
and
jp
test
xor
cmp
inc
xor
add
jnp
adc
mov
outsb
mov
dec
shrl
fildl
es
mov
cmp
dec
pop
enter
or
sbb
out
es
mov
lret
in
incl
loop
or
sub
jb
push
lock
mov
mov
sub
lahf
fs
xchg
lretw
jecxz
jmp
dec
sbb
in
and
cmp
jg
mov
cmp
imul
dec
and
addr16
lock
or
or
or
test
stos
stos
xor
cli
xchg
roll
and
aas
sahf
les
fcoms
es
lock
xor
test
aas
stos
mov
inc
insb
push
mov
fmuls
ss
popf
sbb
push
xor
add
pop
imul
das
xchg
jl
jne
mov
xchg
inc
push
or
aaa
jns
test
inc
cs
or
je
lds
cmp
fwait
pop
out
jo
and
adc
cli
addr16
lds
pop
push
xor
adc
mov
int
enter
adcb
jecxz
dec
daa
aad
data16
jmp
stos
pop
das
sbb
cmc
jp
xlat
mov
xchg
adc
pop
cmc
push
inc
mov
imul
adc
or
or
in
inc
loopne
shrb
mov
addr16
nop
and
bound
insl
sar
cmp
adcl
jle
sahf
mov
pop
xchg
lods
cmpb
push
mov
cmc
mov
inc
dec
aad
sub
fs
xor
ret
shrb
add
addr16
mov
inc
test
xor
mov
test
mov
xorl
sub
mov
mov
in
popa
ficoml
test
fwait
push
sub
pop
add
loop
lret
adc
push
test
and
popa
cmp
out
jae
jne
adc
jns
ss
sti
add
pusha
repz
cmpsl
popa
in
shr
pop
loopne
push
ret
rorl
cmpsb
sub
enter
pop
and
clc
add
sub
pusha
cltd
mov
xor
cmpsl
in
push
fldenv
inc
sti
xchg
or
jbe
pushf
ja
jmp
or
xchg
jb
aaa
mov
jle
push
mov
cmp
xchg
and
inc
fcmovnbe
xchg
pop
sbbl
mov
es
dec
lods
pop
sbb
sbb
shl
cmp
in
flds
cmp
dec
and
aaa
call
or
sbb
jnp
adc
mov
xor
aas
jns
icebp
aas
mov
and
mov
fwait
mov
fisubs
je
imul
imul
jecxz
les
imul
sub
icebp
adcb
sbb
dec
repz
push
sarb
clc
xorl
xchg
push
sti
lcall
fsubr
shlb
inc
rcrl
adcb
fs
aam
testb
jp
xor
test
shll
or
call
in
cmp
stc
pop
sub
rcrl
xlat
loope
pop
lock
add
push
inc
xor
gs
xchg
imul
sbb
test
adc
ss
jb
bound
push
or
inc
daa
push
call
push
mov
lods
ljmp
repz
cltd
std
insb
stc
sarl
sub
daa
jecxz
pop
jne
push
jb
cwtl
pop
and
sbbl
aam
negb
in
jmp
push
sub
xchg
sub
lahf
xchg
das
addr16
cmp
rcrl
out
outsb
jl
cmp
adc
pushf
sbb
ret
sub
out
xchg
mov
mov
dec
test
mov
sbb
test
mov
jne
push
push
jns
cmpsl
xor
outsb
mov
cmpsl
mov
jno
cmp
jge
aas
mov
pop
mov
cwtl
lods
jecxz
and
inc
imull
jno
dec
loope
lahf
jne
add
sub
cmp
pop
lods
sub
loopne
fistps
fdivl
or
push
inc
sub
dec
mov
adc
xor
mov
ja
push
stos
setb
or
jmp
mov
push
push
repnz
loope
cmc
jo
xor
popa
jae
jbe
call
in
jno
in
pop
push
cwtl
xor
mov
daa
test
fidivrl
and
cmp
lods
out
subb
and
das
test
aam
adc
outsl
xchg
mov
into
dec
lret
std
xchg
add
fiaddl
xchg
xor
js
fldt
inc
adc
jb
or
xor
imul
mov
ficoms
adc
mov
hlt
rcrl
in
and
dec
in
sbb
test
gs
mov
jmp
call
or
jo
xchg
xchg
sbb
lcall
in
xorl
fldenv
mov
or
ret
pop
es
mov
jns
loop
jmp
mov
ret
leave
jnp
inc
or
push
add
jg
cli
and
test
sub
add
out
cmpb
xor
or
cmpsl
out
test
push
jbe
cs
jge
fsubl
push
fcmovne
pop
or
lcall
adc
cmp
test
mov
push
rorl
lods
mov
cmp
shrl
out
es
out
sbbb
xchg
pop
testb
xor
in
jge
mov
and
or
imulb
mov
lret
mov
push
fidivl
inc
sbb
cmpsl
andl
les
cwtl
int3
in
pop
pop
out
jg
lds
out
std
mov
dec
pop
xchg
dec
jecxz
hlt
shrb
popa
shlb
roll
mov
sbb
mov
pop
lds
enter
xor
push
adc
sub
add
adc
sbb
loopne
sub
jo
loopne
mov
xor
ss
push
dec
dec
xor
push
ja
out
push
stos
mov
dec
out
adc
int
mov
mov
xorl
jmp
aaa
enter
push
in
std
je
push
lods
je
das
mov
sti
mov
cwtl
insl
sahf
or
sbb
sarl
jecxz
sub
xor
xor
cli
sbb
adc
ss
mov
mov
test
scas
mov
popf
repz
loope
or
jp
ficoml
sbb
fbstp
es
mov
rorl
cli
inc
repnz
fsubs
mov
adc
in
inc
lahf
stos
inc
adc
mov
xchg
or
mov
lea
add
lods
js
sub
sti
fwait
push
pop
jecxz
sub
mov
xor
loop
mov
in
fs
or
push
aad
pushf
test
mov
scas
push
jae
fwait
sarl
cmp
mov
mov
fisubs
dec
fldl
jbe
test
into
frstor
insb
sub
in
das
int3
lods
pop
jbe
shll
xor
movsl
loopne
push
cmp
test
arpl
jecxz
mov
loop
insb
add
ret
mov
adcb
pop
insl
lcall
inc
int
test
or
mov
or
mov
push
stos
sbb
rol
jnp
out
adc
mov
ja
scas
jno
xchg
fsubl
negl
xor
cli
inc
adc
jl,pt
sbbb
pop
dec
push
jo
psubsb
cmp
push
adc
xchg
nop
test
push
mov
xor
sub
jbe
dec
push
or
sbb
mov
dec
or
shrb
pop
mov
mov
mov
fdivp
mov
add
fiaddl
jnp
pop
lahf
mov
push
lret
pop
dec
inc
and
out
fsubs
cmp
in
xchg
ret
sub
sbb
jle
mov
insb
insl
ja
or
pusha
mov
es
leave
mov
inc
or
pop
mov
lea
sub
mov
mov
test
pop
fwait
ja
ud2
stos
movsl
inc
ljmp
mov
push
out
xor
or
pop
inc
xor
push
or
data16
in
dec
fcompl
adc
fcompl
sbb
scas
daa
das
iret
dec
sarl
sub
sahf
jo
repnz
dec
fidivs
mov
pop
jmp
stc
pop
sar
xchg
rorl
mov
xlat
xor
add
or
or
cwtl
inc
scas
imul
jne
loop
test
push
mov
mov
fadd
jne
cmc
add
mov
mov
pushf
dec
in
fstl
xchg
scas
shlb
push
xchg
popa
adc
scas
ror
push
sub
orb
or
lods
stos
lret
jns
cld
loope
xor
cwtl
sbb
push
inc
sub
mov
test
or
test
cmpsl
lods
mov
add
push
jnp
mov
ljmp
cmp
mov
and
sub
mov
inc
rorb
jne
or
push
sarl
lret
movb
enter
xor
jae
pop
fldt
rclb
mov
outsb
sub
incb
hlt
lret
mov
clc
ja
lahf
mov
mov
fcoms
adc
psubq
ja
pop
std
fdivrs
jb
leave
sub
adc
negl
jbe
xchg
pop
mov
adc
test
pop
cmp
fistpll
aaa
ret
stos
jno
mov
or
mov
filds
lret
scas
testl
dec
cmpsb
imul
int
jns
push
aad
adc
out
dec
movsl
jl
sub
call
into
rcrb
mov
jecxz
jmp
dec
aam
mov
out
test
sahf
rcr
pop
xlat
jg
andl
sbb
mov
xor
inc
adc
mov
leave
mov
and
or
lcall
icebp
jnp
add
xchg
inc
pop
xor
mov
cmp
fnstsw
nop
ret
jg
lcall
dec
lret
insl
cs
sbb
adc
push
and
clc
cmp
sub
and
lods
jg
lret
addr16
push
sti
aaa
cld
pop
test
xchg
test
test
cmp
dec
arpl
or
int
cmpsl
push
std
stos
inc
mov
mov
adc
xchg
xchg
jbe
in
push
add
mov
lock
aam
pushf
jnp
or
push
jno
orl
cmp
jp
xor
pop
xor
ret
xor
xchg
and
jns
mov
adc
sub
jl
mov
aas
inc
aas
into
push
cmpsl
aam
mov
inc
mov
imul
jge
lock
mov
or
in
mov
add
iret
inc
leave
push
push
ds
dec
pop
pop
stos
mov
pop
lock
jge
ficomps
sub
into
pushf
push
out
sbb
push
cld
cmp
in
pop
icebp
jle
ljmp
les
jno
jp
pop
and
fadd
out
lods
cmp
inc
into
gs
inc
clc
mov
or
cmp
push
inc
adc
ret
shrl
cmpsl
lret
xchg
test
sbb
stos
call
mov
imul
or
out
push
jmp
pop
mov
ja
push
pcmpgtd
mov
orl
dec
jmp
cmp
popf
lahf
lret
fidivl
repz
sbb
loop
fisubs
arpl
repz
mov
js
cld
push
subb
cmc
hlt
inc
filds
lds
arpl
aam
popa
jns
stos
dec
xlat
cltd
ljmp
pop
add
push
mov
pushf
inc
subl
xchg
in
hlt
mov
dec
mov
cmpb
in
xchg
mov
cmc
or
jne
insb
cmpsl
sub
mov
out
xchg
fiadds
or
lret
add
sarb
or
jb
add
out
cmpsb
push
inc
or
lcall
inc
jb
lea
lret
push
and
out
push
rcl
lock
shrb
jecxz
dec
aad
aaa
shrl
jmp
mov
iret
repnz
scas
cmpsl
sbbb
jecxz
jnp
lods
jmp
mov
dec
mov
cld
ds
adc
enter
xor
shrb
stos
das
das
mov
xchg
inc
sub
std
mov
cmpl
nop
cmpsl
add
daa
shrl
ret
test
sbb
xor
mov
jle
jp
xchg
ja
and
inc
push
out
inc
sbb
fucomp
fiadds
lret
bound
mov
sub
nop
call
ret
mov
es
cmp
shl
pop
lret
shlb
test
push
push
sub
sbb
fnstsw
push
jecxz
xor
add
lret
add
xor
mov
into
in
fnsave
or
jb
inc
mov
push
adc
lcall
out
mov
leave
cmpb
filds
rcrl
mov
out
xchg
xchg
hlt
fcmovnb
testb
cmp
pop
xor
pop
push
repz
mulb
lock
cmp
sbb
mov
filds
das
pusha
fistpl
pop
sahf
shll
sbb
push
or
mov
push
mov
jbe
mov
push
sarb
dec
filds
mov
mov
shrl
dec
out
jge
xchg
cmp
dec
into
rclb
push
mov
imul
pushf
jnp
lods
jmp
popa
dec
popf
clc
pop
test
dec
loopne
sub
xchg
cmp
loopw
push
in
push
repnz
insb
out
jg
in
in
jecxz
pushf
loopne
adc
mov
xor
popa
daa
or
and
xor
lods
popl
jnp
test
mov
loopne
test
lods
repz
adc
lcall
mov
jle
int3
xor
dec
pop
xor
cmpsb
les
mov
or
in
mov
jns
fdivp
int3
fisubrs
sbb
xchg
lea
push
add
push
call
xor
out
shr
std
mov
fs
mov
xor
enter
mov
pusha
fiaddl
mov
mov
push
cmpsb
bound
pop
scas
xchg
pop
negb
inc
mov
xchg
xor
shl
fldpi
arpl
cmp
xor
repnz
add
cli
sub
mov
scas
repnz
xorb
in
sub
mov
in
ja
xlat
push
inc
pop
ret
add
fnstcw
add
rclb
pop
mov
cmp
sbb
xor
mov
add
je
into
pop
hlt
push
push
lds
negb
cltd
add
fdivl
mov
and
lret
into
out
ljmp
lahf
aaa
dec
mov
testb
fmuls
inc
lods
push
in
push
shlb
sbb
imul
sahf
add
iret
call
mov
imul
insb
jo
incl
xchg
repz
popf
sahf
push
push
nop
mov
shrl
pop
jnp
mov
jl
mov
popf
mov
cmp
jecxz
sahf
xlat
xchg
xor
jnp
push
mov
cmp
sub
cltd
inc
fidivrs
pop
mov
mov
imul
dec
pop
xor
addr16
inc
sub
cmp
adc
sarl
sbb
sbb
push
sahf
loopne
mov
push
loop
mov
dec
pop
repz
lahf
negl
aas
jmp
std
cli
or
filds
mov
iret
stos
pusha
push
scas
xchg
push
js
nop
pop
and
loope
adc
jecxz
sub
mov
or
outsl
sbbl
aam
add
repz
and
ja
fsubs
mov
loop
std
aam
or
jle
jl
mov
xchg
mov
sbb
inc
and
fsubrs
xchg
push
outsl
mov
testl
outsl
adc
iret
ret
and
rcr
xor
outsb
add
movsl
imul
pop
test
fdivs
lods
mov
sar
and
pop
push
loop
xchg
fdivl
or
jb
dec
cmp
jecxz
push
cmp
pop
adc
rclb
lret
fs
addr16
adc
jno
xor
add
dec
xchg
jo
arpl
cmp
repnz
test
bound
xlat
call
push
sub
jge
insl
sub
add
jp
ljmp
push
sub
mov
or
sbb
mov
mov
xchg
sbb
into
cld
pop
lahf
sbb
imul
insb
pop
pop
jno
or
enter
dec
inc
mov
dec
iret
ljmp
mov
cmc
aad
mov
cmp
inc
in
mov
movsb
ss
aad
xor
andb
cmc
mov
sbb
pop
add
jns
sbb
adc
mov
mov
jae
xchg
adc
mov
xor
ss
adc
sub
test
xor
add
cmp
mov
ret
mov
std
or
mov
enter
sub
push
aad
sbb
xchg
neg
sbb
mov
rclb
movzbl
adc
or
in
pushf
add
push
aas
or
cmp
mov
cmp
mov
hlt
scas
bound
mov
mov
in
sub
test
cli
mov
sbb
mov
rcr
jbe
outsl
sti
sub
or
ret
in
sub
jnp
xor
dec
stos
or
jae
pop
xor
cli
jno
inc
loopne
pop
push
testl
mov
mov
push
mov
out
xchg
repz
enter
inc
jmp
das
pop
mov
or
lods
mov
fsubl
mov
xchg
daa
aam
ss
jl
and
aaa
cli
and
fdivrl
fildl
mov
aam
and
push
divb
lahf
xchg
mov
inc
iret
ret
pop
sub
or
clc
aas
add
adc
xorl
jne
mov
or
xchg
add
inc
pop
aad
cli
dec
sti
push
sub
ja
sub
fstps
daa
inc
je
fld
xlat
adc
or
insb
fists
test
add
sbb
jmp
jge
mov
pop
mov
cmpsb
fwait
popa
fdivs
mov
mov
cmp
lock
bound
push
shl
stos
sbb
cmp
outsb
loope
inc
dec
push
cmc
movl
aas
lea
jmp
ljmp
lock
dec
inc
sbb
test
mov
ret
mov
push
add
push
popa
or
adc
xchg
inc
push
ja
imul
out
ja
rcrb
and
fs
std
xchg
mov
dec
push
imul
popa
cmp
std
cmp
mov
xchg
sub
stos
mov
iret
mov
xchg
xchg
xchg
add
xchg
dec
pop
cwtl
inc
push
sub
dec
push
insb
call
mov
push
and
bound
test
out
cli
stc
popa
sub
sbb
mov
fsubrl
pop
lods
sarb
mov
jp
shlb
jle
jbe
xor
and
add
fcompl
and
int3
pop
out
ret
in
mov
mov
into
cmp
out
xchg
push
or
adc
test
pop
aaa
jnp
pop
xor
dec
mov
fsts
scas
cmc
leave
jo
je
ss
or
xor
inc
movl
add
pop
dec
add
arpl
mov
or
xchg
push
movsb
inc
push
xchg
jne
push
out
xor
mov
nop
sbb
icebp
sbb
inc
les
loope
test
ja
lods
icebp
cld
mov
lcall
jmp
xchg
xor
arpl
fnsave
hlt
adc
or
nop
dec
mov
or
in
insb
sbb
xchg
ja
aas
pop
cmp
mov
scas
scas
sub
cs
ficoml
lret
out
cmp
in
shrl
cs
scas
xor
sub
xchg
inc
fs
jl
jecxz
xchg
repnz
nop
js
hlt
inc
or
ljmp
mov
stc
cwtl
or
fdivrl
mov
sbb
ljmp
aam
fdivs
test
push
test
sub
or
and
mov
sbb
adc
aaa
ja
mov
dec
loop
mov
stos
mov
jl
lods
lret
lret
test
sbb
add
mov
int
nop
aad
clc
xchg
aas
add
test
and
aas
push
jae
sub
sbb
or
cmp
clc
mov
mov
dec
lahf
lock
std
and
and
insb
stos
jbe
fisttpl
add
add
sub
pxor
insl
vmwrite
cwtl
mov
lcall
mov
jg
cmp
lret
sub
arpl
xchg
mov
jge
pushf
daa
adc
lret
mov
bound
push
jmp
pandn
pop
jle
dec
xchg
mov
rcrb
dec
inc
mov
xchg
sbb
loop
push
adc
and
push
and
push
fdivl
dec
xor
jno
fcmovne
pop
into
mov
and
pop
imul
jecxz
jb
and
mov
jmp
lock
xor
notl
test
xchg
rolb
mov
pop
popa
testl
sub
scas
sub
adc
in
in
jae
adc
jp
sub
sbb
mov
jle
out
fiadds
shl
sahf
clc
sbb
mov
xorl
ljmp
in
or
pop
cwtl
stos
push
andl
idiv
sarl
test
mov
push
pop
push
mov
sub
jno
out
outsl
sbb
in
int3
leave
mov
mov
xchg
jle
dec
aaa
idivb
mov
mov
or
scas
pop
nop
sub
iret
inc
sbb
dec
mov
mov
inc
mov
icebp
mov
test
sub
ss
aas
fldenv
pusha
cmpsl
adc
stc
mov
stos
mov
js
cmpsl
shll
jbe
loop
mov
xchg
mov
cmp
adc
scas
cld
mov
or
dec
ds
mov
ret
adc
dec
add
jg
xchg
das
stc
cwtl
mov
cmp
loopne
sub
test
ret
push
fadd
into
xchg
test
xchg
sub
inc
in
sti
xlat
outsb
sub
enter
add
stc
clc
pop
mov
sbb
mov
jge
add
stos
icebp
mov
leave
notb
cmp
cmc
roll
scas
add
mov
xchg
fwait
cmp
cld
movsl
jbe
aas
ret
inc
stc
pop
push
fsub
popa
test
xchg
mov
imul
jo,pt
hlt
mov
push
ret
cmp
out
sahf
push
mov
clc
leave
push
sub
cmpsb
inc
out
ret
popa
cmpl
dec
jmp
fsub
or
mov
fwait
addr16
mov
mov
outsb
push
adc
pop
leave
and
loope
ljmp
push
xor
cli
mov
sub
dec
jge
inc
mov
jae
dec
cld
xchg
sub
lret
shll
push
dec
inc
xor
push
inc
sub
das
mov
icebp
cs
mov
xchg
xchg
sub
mov
scas
inc
loope
test
repnz
cld
sbb
sbb
cwtl
mov
js
inc
adc
inc
mov
insb
test
dec
leave
cmp
jns
cmp
push
mov
adc
movsl
repnz
scas
test
out
ja
inc
stos
mov
leave
popa
xlat
push
fidivs
aaa
mov
imul
addr16
sbb
mov
dec
cmpsl
idivb
and
sub
in
lret
mov
popa
pop
out
add
xchg
pushw
leave
xor
jmp
incl
cmp
out
xor
pop
inc
lret
sbbb
lock
movsl
shlb
cli
aas
mov
xlat
inc
push
test
pop
mov
mov
inc
movsb
hlt
shr
js
sahf
xor
cmpsl
andb
js
dec
push
pushf
mov
xor
add
pop
call
je
outsl
jnp
and
adc
sarl
mov
sub
mov
rorb
add
adc
add
fs
mov
popa
fidivl
imul
fs
sbb
ja
jb
mov
fwait
sahf
rol
dec
mov
dec
add
mov
sub
and
enter
dec
push
adc
sub
call
shr
repnz
pop
mov
das
jno
xlat
clc
sbb
mov
test
jno
add
scas
xchg
sub
test
mov
repz
xor
stc
add
sub
pop
or
sub
fwait
cli
mov
cmp
pop
jmp
pop
xchg
outsb
scas
sbb
xor
push
loopne
imul
les
negl
push
sub
xchg
std
int3
jne
lock
inc
push
lods
inc
xorb
xor
fcompl
push
sahf
pop
xchg
mov
push
int
push
stos
pop
cltd
inc
lret
xor
jmp
nopl
aas
jp
lock
cmpsl
cmp
push
fstps
jmp
jno
pusha
repz
lcall
jne
fildll
imul
mov
xor
out
orl
aam
clc
nop
call
lcall
jbe
ds
jb
ret
loopne
cwtl
cmp
stc
pop
pop
mov
out
lcall
jecxz
dec
adc
dec
dec
lret
test
notb
sub
or
pop
sub
sub
out
cmc
or
cltd
mov
sub
mov
lods
notb
dec
dec
in
add
cs
lock
sub
outsb
xchg
test
out
loope
fldt
xchg
push
adc
xchg
add
insb
push
aaa
outsl
into
and
and
add
jb
pop
inc
scas
cmp
loop
ret
dec
dec
movsb
push
or
vpcmpgtb
push
add
sarl
and
xchg
mov
int
lods
outsl
pop
push
adcl
sbbl
fidivrs
loopne
mov
aam
test
out
subl
mov
or
xor
lea
inc
lret
push
fidivrl
pop
push
stc
push
dec
jns
dec
or
loop
jl
add
pusha
lea
arpl
xor
mov
movsb
loope
push
mov
mov
mov
xor
enter
arpl
xor
push
aaa
push
xchg
addr16
aaa
xchg
lcall
popa
orl
mov
int
ja
insb
sbb
aad
mov
ret
aaa
call
aas
scas
icebp
adc
lret
jb
pop
leave
int
repz
ss
mov
mov
xchg
or
ja
popf
pop
xor
mov
repz
push
mov
xor
jg
mov
dec
adc
adc
xor
adc
adc
pushf
leave
inc
mov
in
mov
adc
pop
mov
push
mov
movsl
les
loopne
and
sbb
sbb
pop
cmp
in
inc
mov
jp
les
inc
idivb
add
adc
sbb
cmp
sarl
out
pop
rorl
mov
mov
in
ss
sbb
mov
mov
push
out
sub
cmpsl
pop
push
mov
cmp
in
loope
push
dec
ds
jnp
mov
hlt
mov
xlat
pop
sahf
or
jb
sar
and
or
in
mov
dec
sub
mov
cmp
aaa
dec
pop
shll
xor
insl
dec
mov
aas
cltd
fidivl
cmp
popf
mov
sub
cmp
pop
lret
shl
mov
xchg
push
mov
mov
and
sub
mov
pop
jecxz
out
xchg
int3
aam
in
std
mov
push
stos
test
test
imul
nop
dec
std
fbstp
pushf
lea
push
or
mov
mov
rolb
stos
shl
in
or
sbb
sbb
push
mov
movsl
iret
and
cmp
out
aas
pop
pop
hlt
ret
cmp
jnp
aad
mov
jle
cltd
outsl
ret
in
sbb
push
fcmovu
mov
bound
ficoms
out
nop
pop
test
pop
ja
test
lcall
incb
dec
sbb
add
mov
sub
sub
ds
pop
int
lret
add
test
xchg
mov
sub
lret
cmp
sahf
cmp
lret
fisubl
mov
in
imul
push
jae
shrb
cmp
add
ljmp
icebp
movsl
nop
pop
push
jb
aad
adc
jno
stc
dec
jnp
xor
xchg
adc
loopne
hlt
cmp
popa
mov
out
jg
xadd
mov
mov
xchg
sub
lock
sub
push
in
pusha
fldl
jl
cmc
inc
adc
fisttpl
sub
pop
lods
cltd
push
fists
int
dec
xor
into
adc
ret
or
jbe
jg
add
ret
adc
call
cld
stos
out
test
cmc
gs
lods
mov
fisubs
dec
and
repnz
loop
lcall
in
push
ljmp
inc
pop
hlt
scas
je
adc
jecxz
adc
pop
cmp
testl
inc
jle
add
dec
sarb
out
test
loopne
mov
leave
loope
addr16
mov
adc
outsb
cmp
xchg
jno
xchg
sbb
fs
mov
test
mov
ja
popl
jae
nop
fadds
xchg
pop
stos
dec
and
or
jae
call
sbb
push
jae
pop
push
jo
xor
fisubs
icebp
xchg
or
fwait
xor
mov
sbb
leave
pushf
imul
xlat
mulb
lret
cmpb
pushf
pop
shr
push
movsl
inc
cli
aad
sbb
loopne
or
inc
arpl
dec
mov
mov
cmp
fcomp
xchg
out
adc
rclb
test
sub
dec
pop
dec
fmull
stos
add
gs
xchg
sub
repnz
mov
shlb
outsb
mov
js
fidivrs
lahf
fcmovnu
add
xor
rclb
pop
in
into
in
inc
popa
mov
imul
xor
addr16
cltd
fstp
xchg
xchg
mov
shrb
xor
jo
push
imul
repnz
xor
cld
add
pop
mov
std
popa
andl
lcall
sub
cmp
xchg
sbb
jne
lahf
mov
mov
clc
xchg
push
imulb
iret
cmp
adcl
push
jnp
jp
outsl
imulb
adc
out
test
insl
orb
jno
inc
out
xor
loopne
push
fs
inc
mov
xlat
mov
mov
push
or
xor
test
push
aas
lods
enter
loopne
fisttps
xlat
fisubrl
out
mov
test
mov
dec
and
jp
in
pop
pop
and
xchg
ss
xchg
and
add
cli
xor
xor
andb
or
or
xor
cmp
dec
or
jbe
push
and
push
xchg
and
mov
xchg
cld
scas
aam
mov
insb
sbb
cmp
push
leave
fcmovbe
dec
mov
ds
cltd
hlt
popa
addl
push
aam
movsb
jbe
adc
hlt
sbb
leave
sbb
sbb
mov
rcrb
mov
cmpsb
jns
xchg
sub
sub
shrb
mov
jp
hlt
in
cltd
adc
cwtl
faddp
ja
xor
movsl
loopne
inc
sti
cli
mov
icebp
jb
pop
adc
mov
das
pop
sub
dec
jl
pop
in
lods
dec
push
mov
scas
dec
in
xchg
jmp
test
and
pop
adc
fdivrs
subl
adc
push
push
aas
fcoms
adc
fadd
pop
leave
or
or
mov
xchg
clc
push
ljmp
or
mov
jp
shrb
mov
cmpsl
inc
test
popa
ss
dec
fists
sti
mov
neg
xchg
in
mov
test
daa
inc
loopne
hlt
inc
aaa
adc
ljmp
arpl
push
pop
cmpsl
mov
fadds
pop
rol
sarl
rorl
loopne
adc
sbb
in
dec
pop
xchg
lods
leave
xor
enter
shrb
js
jno
or
cmp
or
hlt
push
das
sub
xlat
inc
push
push
movsl
jg
push
push
mov
cmpsb
mov
push
sub
xchg
mov
ficoml
xor
lret
enter
into
inc
iret
and
push
xchg
scas
xor
mov
filds
xchg
adc
in
sbb
push
sub
in
mov
outsl
leave
sbb
pop
pop
adc
leave
push
inc
imul
push
out
xchg
jo
and
xchg
dec
sbb
stos
xchg
sub
sbb
pop
lahf
mov
xchg
ret
jnp
push
sbbl
mov
hlt
or
cmpl
cwtl
fdivl
fisubrs
or
cli
fistpl
mov
shrb
mov
and
pop
movb
cltd
stos
push
enter
in
rclb
mov
push
sbb
ds
lods
pop
dec
dec
fistpll
mov
push
data16
addl
ret
pop
lods
js
xlat
pop
into
loope
add
mov
cmpsl
fiaddl
int3
xor
push
inc
cmp
sbbb
repnz
aaa
sti
pop
cwtl
xor
ljmp
imul
rcr
jno
andb
test
xchg
push
loop
cmp
sub
dec
js
loop
sub
mov
fildl
loop
mov
fdivl
lcall
pop
das
pop
or
cs
cmpsb
shll
jge
mov
push
add
jge
pop
pop
sub
ret
push
in
std
fisubrl
inc
fnstcw
pusha
xlat
pop
cmp
popa
clc
scas
fistpl
mov
xchg
jo
lcall
loopne
dec
mov
jp
xchg
jge
test
pop
mov
mov
loopne
push
and
arpl
push
and
cmp
jbe
sub
adc
aad
xor
dec
leave
xchg
mov
loopne
stos
das
cmp
mov
inc
pop
cmp
lds
push
and
xchg
lahf
rolb
scas
xchg
std
addr16
repnz
mov
shl
add
push
in
push
popf
clc
incb
je
movsl
arpl
test
int3
cmp
lcall
int
mov
ficoms
lock
andl
sbb
arpl
xchg
cmpb
or
xor
cli
int3
in
cld
adc
dec
mov
cltd
out
jb
push
fsubs
mov
ja
mov
dec
hlt
ds
stos
data16
gs
lret
sbb
adc
outsl
xchg
repz
push
add
mov
mov
push
lock
in
sub
int
add
dec
pop
add
lods
inc
lcall
outsb
dec
aaa
into
jnp
rorl
daa
push
jne
out
dec
in
sahf
jp
dec
lret
sti
imul
sbb
les
push
push
insl
adcl
pop
adcl
outsl
stos
fcmovb
sbb
and
enter
sub
cmpsb
jg
loope
dec
jg
in
cmpsb
sbb
and
mov
or
add
and
lahf
stos
std
inc
sbb
jbe
push
mov
jbe
pop
test
pop
lock
lods
or
das
arpl
mov
mov
xchg
loop
pop
test
aad
pop
outsl
lds
in
mov
aam
mov
adc
cwtl
push
roll
pop
inc
fistl
xchg
fisubl
popf
mov
xchg
dec
and
mov
cmp
sahf
ja
adc
inc
push
sbb
imul
lods
mov
and
jae
and
ja
inc
cwtl
popa
nop
sub
and
stos
inc
mov
ret
xor
jmp
sbb
scas
sbb
test
das
fcomp
pushf
sbb
cmp
push
jno
mov
insl
mov
int3
mov
fwait
mov
addr16
pop
or
lds
push
xor
cltd
test
cltd
and
jbe
out
notb
push
xorl
out
or
pop
call
hlt
pop
mov
jns
xor
xorb
and
mov
inc
fisubrl
lods
inc
mov
fiaddl
dec
lret
stc
lds
pop
jo
pop
mul
jge
lret
jno
jle
lret
scas
cld
addb
pop
fcmove
rcl
cmp
mov
fisubs
jecxz
scas
repz
insl
jmp
push
hlt
pop
subb
mov
lods
inc
fsubr
dec
xorl
push
cmp
mov
pop
imul
loop
jge
or
mov
or
and
dec
dec
mov
loopne
sub
nop
addr16
fnstenv
dec
loopne
jnp
into
sub
mov
sahf
add
cmp
pop
and
xchg
add
push
jno
dec
sbb
lock
jl
cmpsb
cmp
push
test
cmp
adc
cmc
cmp
addr16
cmp
push
je
clc
dec
pop
lret
clc
or
push
xlat
loop
pushf
dec
dec
push
inc
hlt
jg
mov
icebp
cli
adc
mov
ret
imul
hlt
xchg
scas
push
inc
lcall
mov
xchg
pop
push
lcall
cmp
dec
dec
push
add
mov
lock
xlat
adc
cmp
jns
mov
scas
inc
negl
xchg
jp
mov
mov
dec
push
loope
jo
add
mov
dec
mov
pop
mov
or
cld
mov
sub
fwait
scas
cmp
imul
test
repz
pop
inc
push
push
mov
popa
sbb
sbb
mov
test
mov
shll
movsl
dec
or
cmpsl
popl
ljmp
pop
jbe
int3
push
sub
xorb
push
mov
dec
aaa
cmp
pop
pusha
iret
dec
dec
ror
jno
les
das
in
test
push
add
pushf
xchg
outsb
sbb
push
push
lahf
pop
sbb
push
sbb
frstor
ret
mov
hlt
mov
cli
adc
jge
sti
fdivrs
cmp
push
inc
adc
sbbb
fcomps
movsb
imul
ficoms
aam
or
iret
aam
nop
ret
stos
mov
divb
bound
loop
in
mov
aam
and
push
das
adc
pop
arpl
cmovnp
or
xlat
or
and
ja
subl
fisubl
or
je
sub
ret
lods
mov
lret
cs
ja
jns
daa
rcrl
dec
xor
mov
dec
fwait
jns
mov
int3
mov
shll
mov
sti
movsl
stos
loop
icebp
ret
pop
ss
rcl
out
push
js
mov
sub
jo
sub
shll
jo
frstor
aad
call
cmp
rorb
int3
aam
and
test
ja
cmp
and
mov
pop
lds
adc
sub
adc
fisubs
and
fsubr
stos
xchg
mov
rolb
daa
or
popf
test
mov
rcr
test
push
push
jbe
mov
repnz
cmc
int3
mov
and
mov
out
js
jns
sbb
and
insb
hlt
mov
push
adc
sub
add
and
mov
and
adc
ja
lcall
add
icebp
cmp
xorl
push
movsl
movsl
mull
sub
dec
sub
inc
adc
pusha
inc
xor
test
mov
pop
in
xchg
cmpsl
lds
je
and
fs
fbstp
xor
add
adc
mov
sarl
icebp
adc
cwtl
daa
push
sti
in
in
ss
or
fucomi
sub
sahf
cmp
js
cmp
in
out
decl
pop
fld
test
dec
push
sbb
push
pop
out
test
std
jmp
xchg
sub
cmp
out
xchg
sub
push
mov
mul
movsb
mov
mov
mov
cmp
and
push
aad
push
dec
mov
data16
addr16
out
hlt
int3
inc
int3
stc
lret
pop
call
nop
out
out
lcall
jg
lcall
push
lds
dec
lret
mov
aas
pop
outsb
or
and
or
bound
sbbl
adc
dec
int3
stos
mov
movsb
push
outsl
or
outsb
and
rol
into
cmc
sbb
test
in
inc
in
or
add
dec
dec
aam
mov
push
fisubl
xor
repz
jmp
mov
aaa
ret
or
ja
xorb
sbb
xchg
dec
xchg
push
call
imul
xor
pop
xlat
xchg
mov
cmp
adc
cmp
mov
push
adc
mov
dec
jle
mov
repnz
nop/reserved
inc
dec
js
sbb
int
dec
dec
bound
cmp
jecxz
or
pop
mov
out
ja
sub
dec
xchg
add
sub
mov
andb
xchg
mov
aaa
xor
fists
mov
dec
faddp
pop
icebp
mov
pusha
js
xchg
int
rolb
inc
cli
repz
mov
repnz
mov
inc
lods
insl
sbb
into
sub
push
imul
pop
cmc
jns
idivb
and
sbb
xchg
mov
jnp
inc
sub
push
ret
outsl
aaa
jb
adc
nopl
mov
popa
inc
cmp
cltd
and
inc
xor
push
stos
test
loope
aas
aad
sub
repnz
outsb
loop
pop
inc
sub
dec
stc
popf
loop
xor
aaa
jne
loopne
jno
inc
popf
inc
xchg
lcall
popa
push
stos
sbb
cmpsl
outsl
mov
mov
dec
mov
repnz
jp
mov
sbb
je
aam
xor
xlat
mov
in
das
mov
sbb
cmp
sbb
pop
mov
or
mov
cmpsl
sbb
movb
pop
mov
cltd
cmp
mov
imul
lcall
movsl
mov
test
jge
mov
cltd
std
es
ficoml
rcr
je
jp
int
dec
movsb
repz
sub
pop
in
test
jle
pop
stos
lock
adc
loopne,pt
in
ss
insl
sub
dec
cltd
shlb
stos
test
adc
xchg
cmc
and
xchg
jecxz
inc
dec
fs
mov
stc
clc
or
mov
sbb
subb
notb
aad
mov
gs
xchg
lret
dec
ficoms
shrb
fbld
loop
js
xchg
mov
lods
rcrb
pop
sub
dec
mov
in
sub
in
pop
inc
mov
or
lahf
nop
xor
insb
or
mov
arpl
into
inc
sarl
ljmp
addr16
in
in
in
sbb
out
test
jg
cli
mov
add
popf
ds
sbb
into
inc
iret
xchg
enterw
stos
dec
sub
sub
lcall
je
mov
mov
adc
pop
xor
sub
xor
push
sahf
popf
xor
add
push
mov
inc
sub
out
and
cmp
sti
sbb
lcall
or
cmp
popa
test
les
cld
mov
dec
in
adc
push
mov
test
jp
icebp
rorl
lea
out
jecxz
loop
jmp
aaa
clc
xchg
and
loop
mov
int
mov
dec
into
adc
lret
adc
cli
and
sub
inc
fnsave
mov
repnz
cmp
into
test
or
popf
arpl
dec
cld
test
adc
sahf
or
in
mov
push
dec
lds
in
adc
aad
scas
mov
enter
dec
frstor
cmp
imul
cmpl
jmp
jns
inc
ljmp
jno
insl
xor
inc
icebp
outsb
add
test
call
shrb
and
rorb
pop
out
or
xchg
sbb
mov
dec
adc
shl
cmp
repz
or
aad
iret
stc
jg
cmp
inc
sub
sbb
addr16
std
call
cmc
xor
lock
or
adc
mov
leave
jecxz
fwait
and
mov
fcmovnu
mov
and
shrl
fwait
pushf
pop
test
dec
ss
je
sbb
fstpl
push
add
lahf
inc
push
fdivrl
adc
mov
aad
mov
xlat
cmpsl
insl
fadds
fisttpll
andb
cmp
push
leave
xor
cmp
push
cltd
jge
shll
cltd
cmpsl
ret
imul
sub
pop
add
pop
mov
mov
jnp
fistpll
mov
std
popf
cmpsl
outsb
and
std
outsl
imul
fisttpll
dec
push
imul
xchg
arpl
lds
inc
inc
push
or
cmp
mov
add
push
jg
mov
lock
push
adc
popl
adc
jbe
and
mov
mov
mov
push
cmc
sbb
sbb
or
mov
insl
clc
and
rcll
push
fnclex
adc
testl
es
imull
xor
int
push
fistl
jl
and
sbb
mov
inc
lds
jbe
sbb
or
sub
cltd
push
call
fwait
jle
fldt
rorl
sarb
es
fcompl
lret
arpl
arpl
sub
cmp
mov
jnp
lcall
and
ret
jae
push
in
and
pop
mov
push
sbb
lret
cld
out
cwtl
ljmp
mov
push
or
lods
mov
push
int3
js
push
xchg
cli
dec
dec
sub
sarl
fucomi
jae
pop
stos
loopne
sahf
sub
add
outsb
sbb
sub
add
jge
pop
sub
rorl
cmpsl
pop
aam
mov
sub
mov
loop
daa
or
cmp
pop
jg
adc
push
popa
mov
xchg
imul
dec
mov
push
jb
lods
mov
cltd
pop
int3
xchg
nop
add
pop
jns
fmull
sahf
call
sbb
mov
loope
sub
into
pop
mov
ret
cmp
xor
in
mov
cwtl
sbb
shll
mov
xchg
adc
js
or
cmp
xchg
inc
mov
inc
mov
addl
xor
jl
sbb
push
sbb
clc
popa
cmp
lods
pusha
mov
cli
test
test
dec
lods
or
dec
cmp
pop
dec
fisubrl
dec
cmp
ret
pop
or
jg
aas
push
aas
jne
popf
out
das
pop
jp
in
mov
test
pop
mov
dec
cmp
sti
inc
cmp
mov
jle
cmp
loop
sub
jecxz
lret
sub
cmp
pushf
xor
mov
out
jne
add
popf
mov
sahf
pop
jge
fwait
dec
inc
pop
jmp
or
aas
cmp
das
cmp
cli
adc
push
pop
cmp
dec
testb
cltd
inc
xlat
lret
insl
dec
out
ret
test
dec
push
jne
xchg
adc
pushf
es
je
jge
jno
jl
fimull
popa
out
orl
jge
jle
mov
loope
jo
jmp
je
pop
scas
and
add
push
inc
fstl
stos
iret
ja
fs
fucomi
sub
cmpsl
mov
adc
addl
jl
pop
fdivs
mov
pop
insl
jmp
xchg
cmpsl
nop
fistps
add
cmp
pop
pop
call
xor
or
sub
test
pushf
dec
popa
cwtl
push
dec
jmp
into
jno
movsb
pop
cmp
and
xor
fwait
and
push
fstpl
daa
mov
adc
sub
cmpsl
mov
je
enter
pop
xchg
add
js
shll
repz
mov
pop
adc
sub
jae
inc
jo
mov
lods
fldl
mov
hlt
lret
inc
mov
movsl
ffree
mov
test
xchg
scas
lods
imulb
jb
in
or
scas
mov
mov
sub
xor
or
std
lds
sub
jp
add
daa
inc
dec
cmp
aaa
mov
divb
outsl
call
dec
mov
leave
imul
addr16
lods
lahf
jecxz
pushf
scas
jno
xor
mov
repz
ret
mov
inc
push
mov
push
mov
arpl
push
aaa
lret
and
gs
fs
mov
sub
xchg
std
mov
mov
lret
rcl
mov
mull
mull
hlt
mov
xchg
stos
test
xchg
outsl
jns
into
or
int
inc
push
and
pop
inc
xlat
jne
pop
mov
pop
in
or
cs
scas
pop
rcrb
sarl
adc
mov
dec
lcall
inc
fdivl
add
or
and
jmp
lret
add
scas
out
popf
dec
jae
mov
lds
mov
leave
cmp
fwait
sub
jmp
daa
lcall
adc
cmp
mov
xchg
lret
sub
dec
cld
aad
push
stos
mov
gs
pop
or
sbb
jecxz
mov
hlt
lret
jle
outsl
jnp
fldenv
sbb
js
inc
ss
fnstcw
loopne
int
nop
sbb
mov
and
pop
pop
push
out
jb
pop
insb
popa
jbe
lcall
inc
mov
mov
pop
aam
pop
stos
and
movsb
cmpsb
dec
xor
insl
lret
int3
add
mov
adc
sub
dec
mov
push
add
shrl
mov
add
cmpsb
out
push
pop
inc
mov
jl
or
loope
ds
sub
mov
mov
xchg
fdivp
push
or
stos
sub
ds
lods
inc
pop
inc
dec
dec
inc
sti
addr16
adc
in
inc
xor
popf
xor
mov
xor
mov
inc
pop
lea
gs
cmp
mov
fcompl
jae
push
loopne
jp
aam
inc
out
jp
mov
cmp
call
je
add
mov
push
mov
flds
scas
cld
and
jbe
shl
lods
lods
inc
filds
loopne
insl
inc
dec
loope
ss
push
inc
push
aas
rorb
aam
std
xchg
bound
lret
ljmp
sahf
sbbl
rorl
call
or
cltd
mov
lcall
mov
enter
and
xchg
cs
xor
or
cmc
movsl
mov
subb
or
jl
mov
mov
pop
je
sbb
push
stc
sub
dec
dec
jl
cmp
sub
jbe
cmp
jge
test
orl
stos
or
cmp
mov
mov
into
adc
pop
jne
divl
out
js
xchg
push
imul
je
iret
outsl
inc
popa
mov
dec
xorl
hlt
sub
subb
dec
inc
mov
sbb
nop
repnz
add
mov
jne
xorb
adc
mov
adc
mov
lods
rcrb
and
repnz
aam
jecxz
adc
push
lahf
call
es
nopl
mov
sarl
ss
lret
cld
aam
xchg
mov
mov
and
mov
scas
fdivp
jp
neg
fs
divb
xchg
add
ret
push
add
jo
sbb
shll
pop
jne
rcll
pop
stos
jnp
mov
or
dec
add
repz
mov
jl
jg
mov
mov
aad
cmp
rcll
pusha
inc
push
std
xchg
inc
lds
mov
jno
cli
fs
icebp
vpshlq
int3
sbb
int3
movsb
dec
movsb
pop
mov
cmp
movsb
test
subb
loopne
out
gs
scas
push
leave
mov
lods
sti
es
jnp
js
aaa
nop
add
jae
lods
ret
mov
faddl
and
adcb
mov
mov
pushf
std
jo
sbb
pop
imul
lods
add
int3
inc
or
fcoml
daa
xchg
mov
aaa
mov
jnp
or
es
inc
popa
rorb
into
push
push
into
lods
xchg
fiadds
xchg
aas
mov
mov
add
daa
arpl
repz
push
lahf
pop
adc
lods
andb
out
mov
or
cmpsl
std
xchg
xor
int
das
inc
mov
in
adc
inc
flds
mov
roll
les
adc
rorb
scas
cmp
dec
fs
jns
inc
xlat
movsb
sbb
mov
fstpl
mov
es
jno
js
push
dec
inc
lods
inc
jae
iret
push
lcall
out
xor
jmp
and
add
je
mov
rclb
mov
push
cmp
push
jno
xor
sub
dec
mov
add
sbbl
movsb
fidivl
sub
xchg
mov
xor
data16
inc
adc
scas
dec
test
sahf
jmp
sub
cs
fsubl
mov
std
mov
fildl
sahf
jnp
mov
fdivr
rcrl
scas
ret
xsha1
cmpsb
int3
insl
mov
adc
inc
pop
repz
sub
mov
rorb
push
inc
or
jno
lock
push
inc
push
mov
sbb
ja
mov
fimull
mov
fbstp
cmc
or
jns
decb
loope
dec
fwait
cmp
gs
xchg
jb
js
and
push
loop
mov
repz
jb
push
sbb
mov
jnp
daa
xchg
xor
aas
outsl
mov
leave
jno
dec
add
sbb
push
stc
lret
lahf
lret
sbb
or
test
fwait
cs
push
loope
inc
lods
sarb
in
ficompl
outsb
out
xchg
in
push
ja
pop
mov
ret
mov
out
xchg
xchg
aad
push
fwait
adc
loope
inc
popf
add
mov
fcmovu
fs
pop
cmp
mov
cmp
subl
icebp
sub
hlt
adc
mov
pop
dec
and
push
cwtl
cwtl
mov
mov
jge
inc
mov
push
add
int3
lret
scas
jb
outsb
mov
xchg
loop
lock
sub
pop
cltd
and
add
mov
icebp
call
out
sub
sti
sbb
push
mov
push
mov
out
fdivl
push
xchg
sti
mov
dec
test
in
sbb
sub
adc
mov
inc
repz
sbb
jo
ljmp
fistpl
ss
push
js
stos
je
popf
jne
pop
xor
into
movsl
fwait
add
lds
mov
jbe
inc
mov
or
mov
test
sub
xlat
nop
push
cmp
mov
ss
fs
xor
push
xor
fistpl
push
add
sub
lods
and
mov
xchg
frstor
cmpsb
xchg
test
sub
fisubs
int3
sub
xor
out
pop
xchg
adc
xor
jmp
or
xchg
push
mov
ret
mov
cwtl
shlb
pop
mov
ja,pn
mov
inc
push
lods
jns
jno
adc
jo
jo
or
push
loope
add
add
dec
xchg
xor
adc
jns
sbb
ds
mov
mov
shrb
ljmp
clc
add
outsl
cmp
arpl
sbb
lret
pop
roll
jo
repz
out
sbbb
sub
sbb
inc
fisubrs
test
and
inc
mov
pop
aad
cmp
jbe
call
leave
xchg
in
loopne
mov
popf
add
arpl
and
mov
mov
data16
movsl
mov
decb
lods
test
cmpsl
jg
cld
mov
rcrb
sar
fwait
das
sub
and
xchg
cld
scas
stos
sub
iret
jnp
mov
mov
cld
adcl
jp
lret
das
adc
inc
sar
aam
aaa
dec
inc
cmpsb
clc
push
push
mov
enter
mov
sbb
idivb
inc
fidivrl
sbb
jo
xlat
shll
js
stos
lds
lods
loopne
fstpl
ljmp
popa
sub
cmp
cmp
adc
and
enter
ds
addb
cmpsb
hlt
sti
mov
ljmp
loop
jae
cmpsb
fnstcw
int3
dec
cmp
inc
or
int3
stc
xchg
jge
inc
loope
sub
dec
dec
pandn
ljmp
xchg
cmpsl
sbb
mov
cmpsl
call
dec
lahf
add
jo
mov
jp
popa
sub
bound
es
pop
pop
sub
mov
inc
fisubrl
fcom
daa
pusha
push
mov
cmp
ds
leave
flds
and
dec
adc
hlt
mov
pusha
jp
js
lds
sub
outsl
xchg
xor
popa
adcb
cmp
push
data16
pushf
add
jne,pn
or
iret
pop
cmp
or
mov
mov
jecxz
gs
or
add
sti
mov
cmpsl
mov
popa
lcall
add
inc
pop
adc
and
pop
fmuls
cmp
xchg
testl
push
fmull
lahf
push
cmc
popa
jmp
pop
sbb
pop
adc
cmp
outsl
clc
in
lea
and
or
add
xchg
mov
xchg
mov
push
xor
daa
outsl
or
ja
push
rcrl
enter
and
sbb
stos
sbb
stos
dec
lret
and
outsb
jae
ret
sub
push
pop
sub
cmpl
mov
push
aad
sub
fwait
ds
push
aas
mov
and
and
arpl
jbe
xor
mov
out
jo
pop
and
fisubrs
movsb
mov
mov
mov
subl
adc
mov
mov
ret
pop
or
ror
mov
out
cmpb
push
adc
and
das
fstp
clc
insl
xchg
xchg
adc
jecxz
jo
sti
jns
rol
mov
sbb
mov
std
lock
hlt
fs
and
dec
movsb
sbb
arpl
cmp
sbb
sub
jne
inc
dec
push
jp
add
dec
push
push
dec
xchg
mov
sbb
add
icebp
mov
push
or
roll
xchg
shl
push
pop
mov
enter
sti
pop
std
aad
mov
cmp
jae
lods
jmp
lret
cmp
mov
sub
mov
sub
mov
mov
jecxz
xor
in
cmp
subb
lahf
aaa
shrl
mov
xchg
push
into
sub
shrb
aam
adc
popf
cmp
insl
mov
in
jns
out
xor
pop
mov
out
sti
push
jg
sbb
arpl
jns
call
dec
sti
das
icebp
movsl
push
xchg
cltd
sub
aas
lods
subl
and
lahf
adc
pop
cmp
stos
mov
fcoml
stos
jmp
dec
fistps
xchg
fwait
xor
flds
xchg
push
les
jno
repnz
mov
fs
adc
jl
inc
push
pop
lods
mov
arpl
sbb
lea
sbb
adc
insl
cmp
xchg
ret
xor
adc
and
stos
jg
dec
rol
xchg
mov
out
dec
jmp
int
cli
inc
out
add
jns
add
fs
jmp
icebp
push
jmp
roll
imul
xchg
dec
call
test
fcmovnu
jbe
sub
dec
and
and
cmp
jecxz
dec
cmc
mov
push
sbbb
cmp
mov
insl
into
dec
repnz
jae
push
cmpsb
fcoms
xchg
iret
adcl
mov
xchg
xor
push
mov
mov
cmp
mov
sahf
mov
rorb
dec
mulb
fnstenv
es
jno
push
mov
in
mov
mov
test
xor
lds
cmc
adc
cli
mov
jbe
addr16
negl
add
sub
mov
fcoms
or
mov
mov
lods
or
cmp
outsl
cld
iret
frstor
jbe
mov
decl
xlat
pop
shrl
and
icebp
mov
jbe
insb
sbb
subl
mov
mov
sbb
push
cmp
pushf
mov
pop
push
sub
mov
stos
and
or
adc
adc
xchg
sub
push
or
jne
xor
or
xchg
xor
fidivrs
ljmp
xor
ss
call
dec
jae
or
inc
sub
push
cli
xlat
test
inc
lcall
adc
dec
movsb
jmp
adc
out
mov
dec
dec
xchg
xchg
jp
fadds
cmpsl
jecxz
out
pushf
sub
push
aas
lahf
and
xlat
or
mov
loop
adc
xor
push
cmc
mov
cs
test
jnp
out
lcall
aas
call
cli
mov
cmp
push
xchg
lcall
lret
rorl
inc
cli
pop
mov
mov
scas
adc
lret
push
sbbl
add
or
adc
jmp
and
movsb
push
arpl
add
add
push
xchg
pop
dec
test
push
mov
sti
adc
push
inc
notl
or
sti
rclb
mov
cmp
cmp
fiaddl
or
mov
add
lods
inc
out
mov
ljmp
sti
fwait
je
bound
xchg
add
fs
ror
jg
rep
or
ds
es
pop
out
or
sub
sub
xchg
jl
repnz
decb
pop
jmp
ljmp
stc
jb
or
pop
int3
sbb
fs
sti
xchg
gs
ret
iret
fdivrs
and
xchg
adc
in
dec
xlat
xchg
inc
fnstenv
or
jb
fcomip
xchg
sbb
lock
sarl
fcoms
push
add
loop
xchg
mov
rorb
add
mov
je
pop
popf
test
dec
push
add
aas
pop
inc
sbb
leave
lret
rol
push
mov
js
js
dec
fisubrl
lret
std
insl
sahf
outsl
mov
popl
push
xor
imul
cmp
xchg
loope
dec
cmp
xor
in
test
dec
fstps
es
mov
jno
mov
xchg
scas
mov
jge
inc
loopne
sahf
popa
addb
je
dec
fidivl
ja
aad
jecxz
add
cmpsl
mov
xchg
dec
pushf
dec
call
fsts
sarb
mov
lock
in
movsb
loopne
or
cmp
jmp
push
jmp
or
pushf
test
call
mov
cmpsl
ds
stos
fbstp
cmp
pop
clc
shll
mov
aam
jge
xchg
mov
push
ret
pop
and
cli
roll
andl
xor
cmpb
mov
mov
imul
out
aas
xor
cmp
ret
arpl
loop
fimull
imul
lods
les
add
dec
jae
mov
adc
cltd
dec
hlt
and
inc
mov
lret
sub
std
inc
cltd
xor
dec
loope
fbld
lds
fwait
call
lahf
in
mov
lock
sub
mov
insl
es
jp
pop
outsb
push
mov
rcl
lahf
jge
or
add
cmpsb
movb
iret
fcomp
call
nop
sahf
jge
or
dec
cwtl
jp
xor
mov
movd
dec
add
add
pop
addr16
adcb
es
sub
dec
xor
pop
es
push
lock
lret
lods
out
jl
scas
and
sbb
into
or
jecxz
inc
rol
ljmp
jae
push
or
xor
cmpsb
gs
clc
sub
popa
fnstsw
sbbb
sbb
pop
xchg
int3
xchg
jle
xor
xchg
cwtl
jecxz
xchg
push
xor
mov
daa
fnsave
cli
inc
loop
add
jb
dec
insl
test
adc
xchg
xchg
and
leave
fimull
lcall
inc
call
test
repnz
sbb
mov
orl
popf
fildl
sbb
and
es
sbb
push
jb
pop
sub
loope
cmp
xlat
je
cmp
rorl
loop
or
mov
ret
dec
dec
imul
lret
hlt
push
mov
rcll
cli
xor
outsb
adc
ret
mov
fldcw
jbe
mov
bnd
jns
pop
xchg
cmp
ljmp
or
lret
xor
addb
jae
clc
cs
sbb
sti
xchg
daa
xlat
outsl
data16
pop
pop
jp
in
pop
cmc
mov
inc
jecxz
push
dec
ficompl
loopne
xor
stc
pop
loope
push
sbb
enter
hlt
push
shl
fisubrl
push
test
add
mov
cmp
sub
mov
jge
in
out
or
jmp
lock
add
inc
lock
xchg
das
daa
jbe
leave
mov
xlat
aad
inc
test
in
shl
fdivl
scas
lock
xchg
and
xchg
in
pushf
push
jge
cmpsb
jne
or
addb
xchg
sub
inc
out
aas
sub
dec
dec
pextrw
insb
sbb
out
xor
and
mov
mov
test
repnz
lret
mov
jno
or
mov
pop
mov
pop
rclb
gs
push
mov
stos
bound
lods
xorl
jb
cmp
dec
daa
stc
push
sub
push
cmp
inc
fdivrp
out
jo
dec
cmp
divl
mov
mov
shlb
push
sub
clc
add
lret
mov
pop
sete
sub
call
jno
and
pop
cwtl
inc
xlat
xadd
movsb
scas
pop
jbe
mov
insb
cs
in
ret
shr
lock
scas
cmp
push
or
mov
mov
xchg
dec
outsl
scas
mov
and
sub
cmp
sbbb
mov
mov
sbb
or
and
shlb
lds
insl
sub
mov
fwait
in
popf
xor
pop
test
xchg
inc
xchg
stos
nop
xor
sarb
das
add
hlt
inc
adc
mov
mov
pop
cs
movsl
dec
and
mov
adc
aad
sub
xchg
sub
jp
outsl
xchg
scas
int3
mov
push
lcall
pop
repz
hlt
jp
sub
add
mov
repz
or
lods
in
data16
std
add
std
lea
pop
aam
pop
and
xor
jecxz
xchg
adc
bound
hlt
add
rorb
and
aaa
aas
cmpl
or
pop
es
add
and
rorb
shll
mov
jae
mov
jg
repz
cwtl
and
adc
mov
andb
sub
jo
call
iret
addr16
jo
jns
jne
pop
out
out
mov
cmp
sub
lret
ret
dec
cmp
inc
cmc
dec
lea
xlat
test
inc
push
jno
mov
xor
adc
mov
push
test
popf
outsl
daa
xchg
jno
rcll
pop
adc
mov
lods
adc
pusha
xlat
stos
fidivs
shrb
pop
push
and
jns
pop
out
adc
xchg
sbb
ffree
pop
psraw
fsubs
add
ja
leave
jne
pop
out
popl
fsubrs
in
in
xchg
fnstsw
scas
pushf
lds
xor
mov
pusha
mov
aad
sub
call
std
mov
pop
jmp
dec
repz
fwait
or
movl
fldl
sbbl
jp
out
cmpsl
mov
and
sahf
in
push
or
xor
call
stc
mov
add
roll
xchg
cltd
insl
add
adc
dec
add
dec
mov
xor
mov
jnp
xor
cli
aam
leave
adc
pop
inc
inc
shrl
iret
stos
inc
mov
jb
shll
and
pop
cltd
test
or
add
mov
insl
add
mov
mov
movsb
loop
in
shll
je
inc
xlat
outsb
xor
ljmp
dec
dec
loope
aas
inc
fldt
jle
jge
dec
mov
cs
into
sbb
cmp
stos
inc
scas
ljmp
jo
mov
sbb
cmpsb
cmp
xorb
andl
sbb
jle
xor
sub
push
cmp
add
jl
inc
jo
and
sbb
xchg
jp
loope
sub
shl
add
shll
lret
repz
in
or
mov
ja
dec
stos
inc
aas
mov
inc
fstpt
lods
jp,pt
or
je
fnstsw
cli
xchg
inc
call
jo
test
sbb
cmp
or
sbb
dec
in
rcrb
sbb
icebp
mov
sub
pop
cli
fadd
sub
xchg
sbb
pop
xor
scas
mull
cmp
add
ds
in
dec
jl
ret
lcall
adcl
xchg
jp
fsubl
jns
loop
and
jno
xorb
fs
adc
push
pop
loop
iret
movsl
test
mov
jns
push
mov
jae
fnstcw
pop
pusha
sti
data16
pop
das
test
sub
sub
pop
test
int
scas
stc
lahf
cmp
adc
fdivrl
add
add
and
or
testl
scas
mov
pop
jbe
or
lcall
mov
pop
adc
sub
out
dec
int3
cld
js
xchg
mov
cld
mov
dec
push
outsl
xor
dec
xchg
cmp
jb
xchg
and
push
push
test
int
sbb
shrb
call
cli
sub
cmp
cmpsl
rorl
test
fistl
fisttpl
dec
mov
xor
rcrl
jb
inc
shr
jb
lret
insb
cltd
test
jle
adc
xchg
xchg
out
aam
xor
and
ss
scas
sub
adc
push
popa
shrb
out
xor
or
les
aam
cmp
cmpsl
mov
xor
fidivl
test
adcb
add
jno
pop
jnp
xchg
push
jmp
push
mov
add
repz
mov
into
std
xor
lahf
and
int3
inc
aad
pop
cmpsl
ret
mov
mov
add
mov
add
mov
pop
es
mov
int
shrb
dec
cmpb
lahf
ja
mov
cmp
add
pusha
jle
push
xchg
stc
push
pushf
scas
jne
and
pop
movsl
ficoml
icebp
pop
fidivs
mov
mov
sbb
test
daa
loopne
aad
cmc
adc
xor
xchg
add
lret
add
cmpsb
or
out
addl
sbb
sti
stos
pop
das
inc
call
mov
xchg
inc
out
xor
repnz
push
adc
popf
push
jl
int
sub
sbb
push
xchg
sti
es
imul
cmp
addr16
and
add
scas
push
jg
ljmp
ljmp
xor
test
and
adc
jbe
outsb
dec
imul
jle
inc
mov
les
add
arpl
imul
adc
xlat
xor
pop
arpl
mov
xor
popa
popl
pop
ss
icebp
sbb
jmp
mov
ljmp
insb
fucomip
jo
sub
subl
fnstenv
call
test
roll
adc
mov
sbb
gs
mov
push
adc
mov
lds
push
lock
mov
shrl
daa
lea
loope
xchg
outsb
fwait
pop
fidivrs
adc
ja
pusha
add
mov
mul
std
sub
rorb
jmp
mov
and
and
int
xor
cli
adc
jo
rclb
jnp
sbb
xor
sub
or
jo
lods
rorb
lret
aam
push
cmp
push
dec
inc
xor
xchg
xor
adc
add
mov
xchg
dec
dec
jge
jecxz
lret
sbb
nopl
insl
mov
mov
pop
or
mov
push
je
cmc
jg
sbb
and
fmuls
add
mov
out
jmp
rcrb
and
clc
pop
daa
scas
jb
xor
clc
dec
mov
in
enter
pop
mov
dec
cmp
xor
bound
dec
dec
mov
dec
push
ret
cmpsb
aas
into
shr
jmp
adc
inc
jecxz
out
adc
cs
jmp
cs
jnp
sbb
jl
test
sub
test
fwait
inc
stos
xchg
xchg
xor
repnz
add
fisttps
or
daa
jle
cmpsb
jle
sub
push
sbb
out
sbb
mov
repz
mov
push
mov
push
push
cmp
pop
hlt
aaa
cmp
hlt
sahf
test
add
or
lret
xchg
pop
lock
outsl
mov
ja
ja
mulb
mov
pop
icebp
cmp
adc
jno
xchg
enter
out
push
leave
jae
sub
jg
mov
mov
cld
inc
pop
loop
popa
subl
lret
cltd
sbb
inc
push
mov
es
mov
push
in
adc
cmc
adc
adcb
add
lahf
test
enter
push
shll
jge
test
repnz
js
cmp
mov
flds
arpl
mov
imul
movsl
js
sub
aam
jecxz
push
popf
mov
cli
push
in
mov
jg
mull
fldcw
inc
inc
sbb
pop
cmp
lock
xor
push
cmp
jno
mov
aas
jo
cltd
lock
mov
lahf
pop
dec
test
pop
fiaddl
mov
aad
push
cmp
mov
push
mov
loop
add
popf
xchg
jne
pop
cs
std
loop
xchg
ss
mov
sbb
push
push
dec
xchg
outsb
add
fidivl
dec
cmc
inc
cmpsl
and
push
int
mov
dec
loopne
xchg
and
pusha
aam
push
push
mov
dec
cltd
xor
decl
lock
mov
push
call
xchg
inc
sub
outsb
fs
int3
aas
push
mov
xor
pop
roll
xchg
dec
out
and
daa
jl
mov
add
jne
mov
mov
xlat
cmp
pop
jns
push
loope
jb
push
add
cmp
cli
mov
or
mov
jge
jecxz
cmp
arpl
sbb
loop
rorb
cmpsl
shrb
push
adc
sbb
fsubrs
pop
vaddsubps
mov
jp
leave
mov
adc
pop
mov
push
xchg
sub
xchg
fdivrl
pushf
pop
mov
clc
cmp
sarb
lahf
xor
loopne
or
lcall
lock
mov
pop
pop
and
jne
jns
fsubs
jge
push
xor
or
insl
arpl
mov
inc
adc
push
lret
insb
outsl
add
pop
cmp
mov
stc
popa
shlb
subb
inc
jle
js
push
add
mov
push
rcr
andl
xchg
jl
insb
pop
dec
sbb
fbstp
ror
jbe
cld
xchg
int3
adc
jbe
in
sbb
and
gs
xchg
lds
fisttps
stos
sub
test
mov
or
mov
pop
test
scas
outsb
mov
mov
sahf
rcrl
mov
loopne
or
push
jg
sti
mov
icebp
sbb
mov
dec
jle
mov
and
jg
xlat
pop
fsubrs
adc
mov
insl
dec
cmp
sbb
cmp
dec
jnp
add
mov
fcompl
jmp
lds
imul
xchg
ljmp
popa
or
add
adc
je
arpl
mov
push
loope
pop
les
xchg
popf
clc
pop
mov
sbb
sub
icebp
and
or
nop
jle
fidivrl
bound
sbb
mov
mov
test
cmp
ret
jbe
pop
add
scas
popl
sub
fdivrp
push
sub
cs
mov
rclb
pop
fiaddl
fiadds
lods
ds
rorl
lret
call
jne
sbb
push
shrb
xchg
lret
and
cmp
cwtl
out
dec
stc
and
aad
pushf
xor
cmp
xchg
cmpsb
je
sub
add
or
cmpsl
jne
fnsave
xchg
sub
inc
mov
push
outsl
and
fists
mov
mov
inc
loopne
push
fs
push
pop
and
add
sbb
outsl
sbb
pop
cmp
add
cmc
fistl
arpl
sub
loopne
cmp
outsl
dec
xchg
repnz
ret
shll
add
xchg
push
leave
push
jbe
gs
xchg
lds
divl
adc
icebp
mov
push
lock
adc
push
or
pop
sbb
pop
out
lods
loopne
sub
and
mov
jmp
sti
mov
roll
mov
testl
or
stos
test
pop
push
mov
test
sub
mov
test
xchg
out
int3
adc
jb
aas
push
cmc
mov
jg
aas
push
sbbl
fsubrs
cmp
and
cmc
or
movsl
cli
cmp
sbb
repz
jae
mov
inc
subl
dec
int3
push
shlb
push
mov
pop
out
mov
daa
mov
imul
aaa
into
jp
fnsave
xchg
test
movsb
xor
sbb
cmp
icebp
mov
push
sti
aam
fninit
out
data16
mov
loop
and
inc
stos
jmp
fwait
je
adc
mull
pop
jnp
fsubs
leave
pop
lock
scas
rcrb
in
popa
add
sarl
pop
cltd
hlt
jno
mov
xchg
sbb
cwtl
sbb
adc
adcb
shlb
add
adc
mov
mov
cltd
mov
or
or
aas
mov
push
xor
fdivs
lea
jmp
jns
jno
imul
clc
push
testb
pop
adc
sbb
push
mov
bound
mov
mov
push
cmpsb
clc
jb
pop
rcrl
cli
push
mov
cmpsl
adc
movups
roll
aas
jbe
fistps
adc
cmp
mov
push
mov
fiaddl
es
lods
je
decl
lahf
aas
push
out
fsub
jnp
mov
in
xchg
in
repz
popa
cs
imul
xor
sub
push
inc
lret
das
xchg
push
mov
sti
sbb
jns
pop
insl
push
jo
sbb
fs
sar
aas
mov
mov
and
xor
mov
mov
xor
and
sbb
nop
xchg
loopne
iret
or
fmull
lret
mov
loopne
add
repz
imul
sub
inc
test
rorl
popf
ljmp
mov
add
mov
pushf
xor
lret
sub
dec
jbe
or
aad
out
push
in
sbb
sbb
inc
and
mov
aas
push
inc
lods
mov
xor
sbb
xchg
lret
and
dec
adc
jl
loope
xchg
jo
ja
mov
jnp
out
xchg
xchg
dec
or
fisubrs
shll
out
adc
in
cmp
insb
fisttps
stos
sbb
mov
enter
dec
in
les
movsl
jecxz
cmp
or
scas
out
or
xor
adc
lret
sbbl
leave
jl
jo
fidivs
push
add
add
cmp
cmp
push
jle
mov
test
xor
mov
or
aaa
jmp
jmp
loopne
ss
lret
in
cmp
lods
ja
jbe
outsl
rcr
fidivl
pop
dec
and
in
jbe
jl
mov
dec
pop
xor
cmp
clc
rcrl
or
jle
mov
xor
push
and
dec
jae
stos
movsb
adc
pop
int3
inc
pop
jnp
push
out
and
aad
pop
test
mov
fsubrs
ljmp
push
rorb
imul
jnp
push
pop
cmp
sub
xchg
test
fistpl
cmp
lds
stc
push
call
test
shlb
das
adc
push
inc
out
mov
fidivs
xor
push
inc
out
cld
push
ljmp
ljmp
fidivs
enter
bound
inc
icebp
sub
popf
scas
pusha
dec
push
xorl
loope
or
mov
xchg
arpl
dec
int
dec
mov
or
popf
pop
rcl
repnz
mov
fistl
push
inc
jae
mov
in
nop
imulb
jecxz
fdivp
jns
mov
std
aas
inc
push
pop
fucomip
jae
push
sub
icebp
mov
js
push
mov
jne
rclb
sbb
adcb
aad
push
fistps
loop
notl
push
fnstcw
lret
test
icebp
mov
clc
popf
mov
iret
push
bound
sarl
mov
js
incb
loopne
push
test
cmp
dec
lahf
ffree
rorb
cltd
jp
pusha
nop
fimuls
or
xchg
jmp
push
xchg
mov
loope
cmp
pop
std
cmp
and
jl
jnp
jle
inc
cmp
xor
shl
add
mov
dec
mov
add
call
cmp
movl
aam
lods
cmc
outsb
andb
sti
pop
addr16
sub
mov
and
aad
mov
mov
fsubr
and
test
adc
sbb
cmp
push
sti
sbb
or
mov
dec
int
mov
out
mov
sbb
inc
inc
inc
imulb
loopne
loopne
ret
cmp
push
subl
or
stos
mov
or
dec
push
es
je
fnsave
test
or
xor
xchg
repnz
push
mov
or
int3
mov
jnp
mov
sbb
and
std
mov
xchg
lret
xor
mov
mov
call
cmc
ja
test
sbb
push
mov
scas
inc
xchg
pop
stos
stos
jo
inc
mov
scas
jg
outsb
stc
lods
inc
and
movsb
push
cs
es
cmp
loop
scas
xchg
ja
inc
scas
outsl
push
mov
sub
arpl
jge
cmp
js
cmp
jl
fidivrl
push
pop
in
loope
fcmove
sub
cmp
cli
inc
psubusw
sub
adc
xlat
lret
add
mov
push
or
xlat
sbb
mov
arpl
insl
test
pushf
hlt
or
bound
adc
mov
hlt
sti
outsl
push
dec
and
pop
lret
adc
ljmp
inc
push
xchg
mov
cmpsl
add
inc
out
dec
aas
xchg
sub
jg
fidivrs
xor
test
dec
imulb
mov
dec
lea
int3
pop
xchg
sub
in
inc
mov
pushl
test
inc
js
mov
fstpl
or
pop
stc
add
xor
ljmp
dec
or
push
test
or
dec
cmp
adc
ret
pushf
icebp
mov
jecxz
sub
add
mov
jnp
mov
aaa
test
jmp
jno
icebp
insb
sbb
push
mov
or
movsl
cmc
pop
test
cltd
stos
test
xchg
pop
retw
or
jg
filds
cmc
mov
jle
ficomps
jl
fcompl
push
or
xchg
fwait
push
mov
je
popf
icebp
cmp
hlt
or
inc
sub
aam
dec
pop
out
dec
mov
jecxz
jb
test
adc
testb
testl
pop
addr16
jnp
sarb
orl
cmp
imul
xchg
and
pop
lods
out
js
movsb
scas
addl
pop
ds
ljmp
and
cmpsb
xchg
outsb
adcb
push
dec
int
adc
lock
outsb
mov
xchg
add
insl
scas
sub
out
cli
sahf
jo
fwait
mov
lea
roll
bound
aad
pop
mov
inc
imulb
lds
inc
push
jns
movsl
sar
lret
incb
dec
pop
cmp
idivl
js
xchg
divb
mov
aam
cmp
addr16
dec
sarl
sub
std
shlb
jbe
lret
test
and
mov
xchg
jnp
mov
loope
scas
inc
leave
dec
lahf
sbb
inc
bound
andb
fisubrs
pushf
dec
into
nop
push
lods
dec
jecxz
aaa
in
adc
mov
cli
jge
jmp
mov
push
mov
hlt
loop
shrl
add
out
fisubs
pop
cwtl
stc
ficompl
dec
mov
adc
add
into
dec
das
mov
hlt
mov
mov
xchg
and
sahf
xor
inc
rolb
push
or
push
ret
mov
jge
insl
loopne
mov
jnp
inc
fidivrs
xor
add
iret
aaa
push
int3
push
aam
lds
pop
mov
ret
iret
fidivrl
jg
sub
push
fisubrl
ffreep
rcll
fisttpll
jecxz
lods
jbe
pop
test
pop
cmp
pop
mov
repz
std
daa
adc
mov
lds
mov
cmpsb
adc
mov
mov
test
fnsave
sti
jle
loop
cmpsb
aad
mov
testb
jbe
lods
notl
inc
xchg
push
in
xor
std
lret
rcrl
pop
inc
shll
push
cmpsl
pop
cmp
adc
mov
outsb
jp
or
xchg
popf
mov
push
sbb
cmp
inc
sahf
pop
shll
orl
stos
andb
dec
pop
jmp
loop
hlt
lahf
imul
into
mov
dec
mov
mov
in
fnstenv
dec
pushf
clc
xor
mov
pop
xchg
mov
repz
inc
push
lods
int
and
dec
xor
loope
sub
adc
dec
dec
inc
sbb
mov
xchg
iret
mov
mov
xchg
fldl
mov
pop
enter
push
pop
dec
dec
out
sub
pop
pop
sbb
sti
scas
sub
cli
fsubs
fdivrl
test
fsubr
jb
mov
mov
arpl
test
dec
test
cmpsb
lods
fmuls
dec
fadds
test
sbb
mov
xchg
mov
inc
in
insb
imul
rcl
dec
movsb
jnp
add
ss
add
lods
divb
sub
mov
movd
sub
mov
adc
mov
mov
imul
jbe
ss
xchg
jp
lcall
push
pop
lds
push
movsl
jle
bound
push
es
mov
lea
repz
jmp
ja
test
int
or
cwtl
in
movsl
and
rcrl
add
push
out
cmpsb
mov
dec
jle
or
mov
lret
vpcmpgtb
push
xchg
jns
ficoms
sbb
loopne
jmp
decb
push
and
popf
xor
jo,pn
stos
dec
data16
xchg
push
ret
mov
or
cltd
cmpsl
sahf
dec
push
divl
or
cmp
fisubs
xchg
aad
les
lods
push
hlt
push
bound
insb
dec
xorl
in
test
hlt
icebp
in
nop
inc
adc
sti
fwait
push
mov
jle
pop
xor
scas
dec
ror
nop
jno
mov
daa
clc
jmp
enter
int
dec
aam
jg
and
mov
jle
sbb
sub
hlt
lods
and
inc
dec
and
sub
add
lret
movsl
dec
jno
push
pop
and
xor
push
loopne
xorb
xchg
mov
lods
scas
nop
rclb
xchg
loope
dec
in
mov
scas
mov
mov
scas
mov
push
sbb
cmp
dec
imul
addl
xor
mov
imul
ss
dec
push
inc
mov
jne
add
hlt
fcmovnu
sar
add
clc
mov
sub
fwait
add
loope
mov
sub
mov
cmp
cwtl
cwtl
xchg
aam
mov
adc
je
arpl
xchg
scas
mov
ja
aas
pop
cmp
insb
jae
push
xchg
jne
xorl
fimuls
mov
mov
test
sub
jo
add
aad
jge
bound
out
leave
arpl
jg
pop
xchg
out
or
data16
add
cltd
je
xchg
inc
mov
testb
sub
mov
movsb
movsb
cmp
cmp
jg
into
and
jecxz
notl
cmp
ja
jns
lds
dec
cmp
in
loope
popa
xor
daa
push
and
jo
outsb
fiadds
jp,pn
and
into
insl
mov
xchg
sub
bswap
sub
pop
mov
rcrl
pop
loopne
into
shrl
dec
mov
sub
icebp
inc
inc
rcrl
inc
jb
jmp
stc
int
jmp
js
stos
dec
push
mov
insl
insl
xchg
sub
outsb
add
sbb
inc
scas
push
mov
cmpsl
jo
and
xchg
daa
aam
cs
xor
in
mov
xchg
sub
xchg
mov
enter
push
cmp
push
mov
add
fs
push
int
cmpsl
dec
popa
stc
jo
inc
adcb
lret
test
int3
pusha
movsl
lock
loopne
dec
lret
hlt
pop
add
jns
in
pop
pop
sbb
iret
push
ss
std
insb
sbb
mov
stos
inc
mov
fcmovnb
rclb
mov
fnstsw
iret
lds
call
push
aad
push
popa
adc
lock
inc
jnp
fwait
andb
pop
pop
jmp
mov
clc
cmp
xchg
sbb
and
scas
dec
testl
lods
shr
sbb
fs
adc
aad
and
mov
cmpsb
and
xchg
rcrb
inc
fsubr
clc
add
cld
scas
add
loop
mov
mov
imul
xchg
jecxz
pusha
cmp
xchg
movsb
mov
sbb
sub
push
das
pop
das
fstp
sbb
sbb
loope
cs
jle
mov
repnz
and
push
and
lret
dec
fucomi
add
aad
pop
stos
ds
pop
pusha
lret
lds
ret
aaa
mov
cmc
punpckhdq
rol
shlb
cmp
and
mov
test
test
or
inc
push
out
or
aas
loopne
stc
imul
inc
hlt
dec
and
push
fstpt
subb
and
aaa
dec
nop
insl
dec
daa
adc
sbb
jg
orb
dec
sbb
ja
cmp
cmp
and
dec
push
dec
cld
das
data16
pop
in
mov
mov
jmp
aaa
pop
add
fcomps
mov
dec
xchg
and
sub
movsl
mov
fisubrl
dec
adcl
imul
push
mov
and
xchg
jne
fwait
cmp
adc
mov
mov
lret
jno
das
cmpsl
sbb
pop
jecxz
jns
adc
fs
in
in
dec
sub
sub
mov
subb
cmp
adcb
sbb
lods
add
lahf
push
mov
cltd
cmp
add
sbb
xchg
test
jmp
push
mov
mov
xor
jmp
lret
sbb
rol
xchg
insb
mov
shrl
mov
subb
mov
xchg
cmp
jno
idivl
lret
out
insl
add
xor
aam
mov
push
les
ja
icebp
xchg
pushf
xchg
pop
into
hlt
addr16
std
sub
mov
jp
subl
sbb
sbb
fwait
xor
ret
hlt
mov
mov
outsb
push
leave
int
mov
popa
adc
push
icebp
mov
jns
lock
push
shlb
sti
fmull
loope
inc
add
gs
enter
data16
or
add
ss
leave
outsb
jecxz
dec
pusha
mov
es
cmp
popf
cmpsl
test
shlb
out
pop
out
jmp
dec
dec
push
mov
filds
xchg
cltd
repz
imul
sub
test
imul
adc
dec
shr
mov
xchg
add
xchg
scas
and
dec
testl
xchg
sbb
lods
jg
jle
shlb
pop
mov
adc
push
inc
int3
cmp
and
cld
sbb
and
aad
scas
adc
cmp
pop
bound
popa
das
cmpsl
or
sar
sub
cmc
pop
ret
dec
in
enter
add
bound
mov
xchg
shlb
out
mov
pop
jp
jle
sub
sub
push
push
lret
cmp
cmp
ss
ja
mov
push
ljmp
testb
dec
hlt
pop
add
insb
jae
testl
push
push
stos
jmp
aas
adc
xchg
gs
insl
cltd
lock
imul
or
pop
pop
insl
jg
push
jne
dec
hlt
push
outsb
xchg
ja
loop
xor
push
iret
and
push
cmp
gs
mov
and
insl
xor
adc
push
inc
into
jb
aaa
pusha
imull
lret
into
insl
and
movsl
adc
mov
push
cmp
or
jne
adc
dec
inc
cmp
cmp
dec
push
xchg
cli
test
ret
repz
sbb
or
adc
fildl
add
iret
std
sbbl
mov
shll
xor
dec
inc
mov
icebp
push
xchg
fnstenv
das
lret
dec
jl
jbe
arpl
xchg
xchg
mov
adc
push
lods
and
inc
test
je
scas
push
jp
arpl
xor
rcrl
into
adc
test
test
mov
pusha
and
stos
loope
pop
outsb
or
push
xor
clc
xchg
call
and
xchg
dec
inc
std
js
cs
pop
sub
pop
pop
ds
sub
xor
inc
pusha
jns
jmp
shrl
adc
movsb
sub
push
pop
mov
mov
mov
push
lcall
push
jmp
sbb
out
xchg
dec
ja
jae
imul
dec
pop
fildl
cmc
mov
or
nopl
cwtl
fstpt
push
insl
adc
pop
and
fistpll
aaa
mov
loop
or
inc
push
jns
insl
adc
mov
inc
jmp
fdivs
inc
pop
in
dec
pop
into
mov
push
mov
mov
xchg
cmp
mov
testl
jmp
pop
loopne
add
cli
hlt
pop
sub
xor
dec
push
sub
or
xchg
stos
inc
int3
xchg
inc
xchg
lea
frstor
in
and
fucom
and
stos
inc
xchg
mov
jge
pop
in
push
push
pushf
xchg
out
scas
lea
inc
nop
clc
jmp
adcl
lahf
jmp
loopne
inc
sar
xchg
addr16
mov
fnstsw
and
aaa
lret
arpl
or
jecxz
lods
ljmp
xchg
sahf
loop
or
push
ficoml
popa
js
fisubrl
ja
and
pop
cmpsl
sub
mov
addr16
lret
into
iret
into
xlat
cltd
add
lret
pop
jns
fs
dec
mov
cmp
testl
pusha
ret
jns
andb
addr16
mov
push
pop
stos
xchg
and
daa
push
insl
aam
sarw
dec
jl
xchg
and
pop
push
cmp
fcmovnb
pop
push
or
inc
js
fwait
pop
inc
or
loop
mov
pop
sbbl
test
fwait
xchg
mov
mov
notb
jo
inc
in
pop
aas
clc
ror
pop
xchg
out
xchg
mov
xchg
mov
push
or
sbb
sarl
stc
mov
mov
dec
call
dec
xchg
pop
push
adc
pop
cli
daa
ss
jle
dec
arpl
lods
inc
stos
xchg
dec
movsl
cmc
push
push
xchg
fidivrs
jl
in
inc
out
inc
mov
scas
mov
inc
arpl
adc
lahf
lret
pop
mov
add
mov
mov
les
fdivs
pop
push
loop
adc
nopl
shlb
adc
dec
js
xor
movsb
popf
push
sub
rcrl
ss
jns
fldt
rorb
int3
add
mov
mov
imul
jno
dec
xchg
pop
mov
cs
mov
cmp
cmp
es
cmpsl
rcrl
out
movsb
sti
or
or
or
and
sub
cli
scas
add
jecxz
pop
sahf
gs
or
mov
jle
or
movsl
scas
int
ja
jns
repnz
imul
dec
gs
or
xchg
adc
shl
ss
aam
mov
cmp
cmpb
lret
lea
out
aad
ret
pop
negb
mov
lahf
sbb
cs
inc
inc
ja
xchg
popa
fdivl
pop
in
jp
je
push
xchg
cli
js
mov
insb
pop
sbb
jp
lret
loopne
ja
mov
or
push
xchg
dec
jl
xchg
push
cmpsl
sub
das
call
cmpb
mov
aas
pop
xchg
ljmp
int
mov
xor
sbb
mov
inc
jle
sbb
dec
xchg
jp,pn
adc
popa
and
rclw
test
jno
shlb
daa
xchg
dec
push
movsl
cmp
inc
mov
add
inc
pop
or
rcr
pop
cmp
cmpsb
cmp
mov
imull
lock
lea
mov
das
xor
sub
pusha
xchg
fdivrl
leave
mov
mov
sbb
xchg
or
add
and
adc
shr
jp
loopne
jecxz
je
jp
sbb
das
sbbb
iret
pusha
xchg
xchg
lock
out
lret
push
stc
mov
adcl
js,pt
jo
std
inc
jp
jnp
sub
fwait
xor
inc
loope
and
ret
ljmp
xor
adc
push
aas
dec
or
mov
pop
push
sub
es
fisubs
lds
insl
scas
sub
idivb
fsubrp
mov
ljmp
jp
lods
mov
int3
mov
stc
sbb
mov
push
ja
push
inc
cmp
ja
mov
lret
scas
xchg
pusha
add
or
xor
pop
out
push
stos
and
inc
loope
add
imul
mov
arpl
outsl
mov
arpl
std
pop
pop
mov
xlat
or
popa
sub
test
or
or
push
sub
pop
es
cld
movsl
mov
dec
mov
jmp
dec
xchg
out
and
push
mov
xor
push
xchg
cs
icebp
mulb
add
leave
sbb
sbb
fisttpl
sub
iret
bound
shr
arpl
test
and
or
inc
into
fidivrs
cmp
jbe
loop
mov
repnz
test
and
repnz
inc
xchg
repnz
ljmp
nop
inc
int3
les
mov
outsb
shll
push
push
out
inc
fildll
fstl
neg
andl
add
shll
incl
sub
pop
outsl
sub
push
repnz
inc
mov
sbbb
popa
out
sti
xchg
clc
aaa
jno
pop
sub
mov
push
adc
aad
rol
bound
add
ds
testl
es
jae
fwait
xchg
lods
inc
ret
mov
int
fimuls
inc
in
push
jb
loope
sbbb
sub
sbb
mov
or
shrb
jp
inc
bound
and
push
outsl
mov
shll
jmp
into
xor
jno
and
xchg
cld
push
icebp
sbb
lcall
mov
pop
fdivrp
fdivp
pop
jbe
mov
jo
lods
push
push
xchg
xchg
xor
lahf
outsb
jp
sub
cli
pushf
mov
jmp
pop
nop
inc
pop
push
negl
mov
jb
jl
dec
lcall
sub
repnz
lret
js
sub
shll
scas
mov
ret
testb
imul
int3
lret
mov
mov
dec
stos
inc
mov
test
repnz
leave
int
mov
sbb
or
imul
mov
xor
lahf
sub
xchg
in
loop
dec
shll
push
and
int
sbbl
lock
sbb
mov
jnp
push
pushf
outsl
pop
ret
pop
out
or
pop
popf
push
flds
and
pop
push
fwait
loopne
imul
ja
cmp
leave
mov
xchg
and
push
cmp
out
call
inc
mov
push
cwtl
push
subb
xor
dec
fcmovu
clc
sbb
sbb
jle
decb
pop
fildll
push
daa
aam
mov
dec
jge
addr16
call
in
ss
cmp
fisubs
mov
cmp
add
std
loope
inc
pop
test
orb
pop
dec
sbb
push
jmp
in
sbb
rcll
mov
dec
aaa
scas
bound
mov
flds
mov
jns
jmp
in
pop
icebp
cmc
aad
stos
and
cwtl
out
in
cld
fmull
sbb
cs
jae
dec
scas
sbb
and
xchg
mov
mov
and
ljmp
jno
xchg
sub
cld
inc
scas
loope
or
jp
dec
sahf
jbe
out
sub
shll
enter
and
and
shlb
mov
out
xchg
aad
pop
sub
push
sub
fucomi
call
arpl
xchg
ret
leave
pop
inc
fldenv
cmp
and
cmc
and
aaa
int
in
xor
cwtl
mov
fisubs
push
adc
jbe
mov
test
and
cmp
loop
xchg
pushf
ds
dec
lods
mov
hlt
jae
inc
int3
std
imul
add
pop
push
mov
subb
test
testb
push
sub
loop
push
mov
xchg
aam
pusha
jb
popf
lcall
and
pop
stos
clc
or
in
cmp
mov
shl
movl
mov
orl
call
loopne
or
mov
cmpsb
cmp
push
add
les
jo
cmp
imul
mov
ficomps
repz
dec
inc
xchg
pop
lret
mov
push
push
ja
cli
pop
arpl
std
mov
mov
fwait
push
out
shrl
bound
xchg
loop
insl
push
enter
stc
jb
lahf
push
out
jge
popf
xor
loope
mov
inc
inc
xlat
jae
mov
jo
pop
in
test
xor
pusha
pop
cmpsb
mov
jl
mov
aas
adc
add
cmpsb
clc
jae
sbb
xchg
les
inc
jno
pop
rcrb
ficompl
mov
imul
sub
sub
orl
fwait
test
xchg
mov
dec
test
and
sub
imul
xchg
mov
shl
les
sub
pop
aaa
in
add
pop
push
dec
fcomip
std
xor
adc
push
pop
add
xchg
adc
shrl
xor
cmpsl
cld
and
leave
lds
aaa
inc
or
xchg
xchg
sub
cmp
daa
add
pop
ret
gs
xor
xchg
mov
fldt
push
cmp
test
iret
xchg
sub
scas
or
push
mov
fisttpll
movsl
cmp
mov
fcoms
ret
push
shlb
dec
fcomps
cli
xorl
mov
cli
xchg
xchg
es
pop
or
out
pop
mov
jecxz
scas
xchg
pop
jae
mov
sub
pushf
jno
frstor
dec
sbb
leave
jnp
and
adc
jmp
je
cmpsb
jle
inc
ljmp
mov
sub
mov
gs
xchg
and
flds
cmp
pop
popa
clc
mov
pop
mov
adc
cmp
popa
xchg
cmc
movsl
icebp
push
push
mov
pusha
pop
or
test
mov
movsl
pop
adc
test
push
jp
das
cmp
sbb
leave
fdivs
cmpsl
cmpsl
popa
in
pusha
push
dec
cs
dec
inc
sti
aas
gs
mov
dec
xor
mov
lods
out
fisubrs
movsl
test
and
fidivl
icebp
test
testl
shrb
jno
cmp
lds
cmpsl
cld
hlt
cmp
inc
xor
xlat
pop
stc
in
iret
clc
pop
icebp
sub
add
push
popl
mov
add
lret
sub
nop
pop
scas
push
sub
mov
loopne
or
repz
adc
mov
imul
sbb
pop
rolb
lcall
mov
xor
jle
inc
ficoml
and
loopne
popa
cmp
xor
adc
punpckhbw
lcall
js
imul
inc
call
test
sbb
cltd
leave
pop
hlt
cmpb
out
mov
lret
xor
inc
xchg
scas
push
mov
popf
cmp
cmp
xlat
outsb
sub
cmp
sbb
mov
mov
enter
lods
aas
push
cmp
pop
or
ret
sar
add
test
aam
mov
outsl
adc
std
lret
adc
divb
int
ss
sub
repz
test
mov
popa
xchg
sarb
leave
adc
arpl
mov
dec
into
mov
cmc
pop
sbb
les
xchg
outsb
in
pop
cmp
mov
push
fidivrs
push
js
sbb
gs
xchg
loope
cmp
add
leave
inc
dec
jmp
inc
out
jbe
adc
xchg
xor
jg
jl
cmp
insl
xchg
sbb
iret
fistl
imul
dec
cmc
adc
jnp
mov
pop
loop
aaa
mov
add
push
jbe
mov
mov
lret
sbb
jae
push
mov
fmull
xchg
mov
ret
jg
cmp
divb
inc
jmp
or
adc
fldl
sbb
pushf
iret
adc
inc
lret
lret
xchg
cs
lret
cmpsb
xchg
out
adc
clc
aaa
lret
test
xchg
jp
dec
shll
jo
cmp
or
adc
lret
dec
jge
out
or
or
adc
and
bound
mov
ffree
cmp
add
js
push
mov
push
mov
xor
push
sbb
xchg
sbb
sbb
iret
imul
leave
xor
aad
sub
xor
push
jmp
mov
pop
or
lods
xor
cli
mov
fisubs
xor
xchg
lret
aas
push
push
jo
fsubrs
xchg
sbb
or
out
and
imul
stos
cmp
jne
dec
stos
leave
test
out
pop
in
pop
mov
dec
bound
stos
xchg
push
add
ror
lods
lds
inc
push
push
jmp
lods
jbe
lds
mov
pop
std
sbb
sub
pop
mov
movl
or
mov
das
mov
icebp
push
pop
mov
fsubrp
pusha
stos
mov
lret
jge
lret
out
xor
lcall
or
and
into
mov
or
outsb
ret
lcall
sbb
add
sub
js
je
jnp
pop
in
ds
and
mov
push
jl
imul
cmp
in
inc
pop
mov
outsl
jo
adc
pop
scas
pushf
inc
mov
daa
xor
mov
sub
popa
jp
mov
std
xlat
repz
icebp
sets
ds
sub
imul
sub
adc
scas
pop
jmp
jno
ja
insb
ss
stc
es
and
push
cmp
inc
xchg
sub
fnsave
insl
enter
adc
push
cld
sub
sbbl
xchg
mov
stos
andl
adc
or
add
xchg
stos
push
jbe
mov
inc
jecxz
cwtl
test
sub
cs
push
push
cmpsb
add
sbb
pop
push
jns
jne
xorl
jae
fistpll
push
and
daa
jae
imull
push
fistpll
faddl
mov
incb
xor
mov
insb
push
movsl
in
inc
pop
and
andb
cmp
arpl
dec
gs
jle
mov
fdivl
dec
fucomip
sbb
push
test
movsl
cs
pop
or
mov
pop
xchg
iret
enter
pop
adc
mov
sub
push
sub
ret
icebp
out
dec
loopne
andb
adc
sti
test
xchg
lds
out
cld
scas
xchg
push
shrb
leave
pop
inc
clc
in
push
sbb
or
xchg
sbb
insl
dec
loope
lods
repz
hlt
stc
mov
in
shlb
jge
das
jecxz
inc
cmp
and
cmp
push
inc
adc
lea
and
pop
sti
inc
fidivrs
adc
ja
in
mov
repnz
rcrb
push
loope
or
loopne
mov
sbb
xlat
mov
in
test
jp
pusha
pop
in
pop
out
jne
stc
mov
push
jecxz
push
bound
shrb
jo
ret
mov
push
jecxz
icebp
sbb
cmpsl
ds
cmp
movsb
aas
and
adc
mulb
cmpsl
test
fisttpll
xorl
out
leave
in
ret
cmp
outsl
inc
inc
push
test
push
fldenv
in
adc
cmp
push
xor
xor
negl
jl
pop
lock
or
inc
in
mov
imul
hlt
adc
lock
sbb
sbb
stos
mov
mov
pushf
sbb
clc
xchg
cltd
sbb
mov
dec
cmpsb
inc
sbb
cmpsb
int
sbb
ds
lahf
sbb
negl
push
or
shlb
into
mov
pop
inc
js
lock
adc
imul
add
jae
dec
jne
inc
mov
mov
mov
adc
movsb
cli
fbstp
aad
lret
daa
mov
int3
cltd
out
fcmovu
je
sbb
ret
into
sbb
aas
aas
hlt
jp
cmp
pop
insl
fadds
mov
sub
sbb
jmp
aas
push
mov
mov
into
shrb
dec
sar
jb
lock
hlt
pop
les
fs
jns
mov
mov
add
push
jge
into
ss
or
mov
cmovs
or
dec
popf
imul
fs
hlt
out
xchg
test
cld
stos
loopne
cmc
mov
mov
xchg
and
mov
enter
addb
dec
lret
push
push
xchg
in
xor
push
scas
sub
push
jmp
xchg
xchg
dec
mov
inc
pop
fcoml
out
int
and
fdivrs
imul
lret
cmp
mov
addb
es
xchg
cmpsb
les
mov
movsb
mov
movsb
std
rcrb
cli
inc
mov
outsl
push
lcall
stc
mov
mov
xchg
push
int3
stos
es
push
add
xchg
sbb
jns
inc
mov
stos
iret
jmp
xchg
stos
xor
aas
cmpsb
ret
iret
fsts
push
out
ret
outsl
cmp
xlat
pop
jg
pop
in
add
push
sbb
cmp
push
popl
out
dec
adc
fstpt
inc
popa
pop
data16
sbb
adc
rorl
xlat
addr16
add
sbb
push
cmp
loope
fs
or
inc
dec
jae
jl
fisubl
jb
mov
mov
mov
and
stos
call
cmp
mov
sbb
adc
mov
cmpsb
insb
out
aas
xchg
mov
dec
scas
xchg
into
xchg
sbb
mov
cmpsb
xor
xor
arpl
sbb
lds
and
fs
inc
lods
sahf
fdivl
test
push
cwtl
mov
adc
cld
xchg
adc
and
sbb
xchg
ljmp
jp
imul
data16
stos
fwait
xor
push
inc
push
mov
popa
lods
sub
shlb
dec
fmuls
int3
mov
imul
adc
stos
or
mov
dec
jne
push
cmpsl
imul
pop
dec
or
fldcw
pcmpgtw
mov
les
lds
pop
dec
dec
aaa
test
dec
sbb
lods
jg
and
mov
mov
aam
inc
sbb
push
lods
inc
incb
or
pusha
test
pushf
in
cmp
stc
mov
insb
xchg
add
icebp
f2xm1
adc
xchg
cmpsb
cmp
cltd
dec
or
mov
dec
inc
jmp
xor
xor
jo
lock
cld
test
or
pop
pusha
cmp
add
js
inc
push
lods
inc
incl
dec
cmpsb
mov
out
insl
call
not
outsl
add
movsb
dec
aas
adc
in
and
fstpl
shll
insl
fbld
les
test
es
push
test
push
jne
fistl
inc
jno
addl
add
inc
inc
pop
stos
stc
bound
imul
push
shrl
push
pop
lret
ljmp
pop
idivb
or
je
das
xchg
out
pop
jae
push
in
fs
rorb
mov
lcall
in
pop
mov
sti
push
in
sarl
pop
jecxz
inc
lcall
add
rorl
inc
cmp
xor
lock
cltd
sahf
dec
pop
mov
mov
aaa
push
and
jno
xor
divb
dec
loop
je
iret
xor
nop
ss
jnp
leave
jl
cltd
jnp
lahf
daa
inc
jbe
push
sbb
pushf
push
fsubl
aam
inc
pop
loope
cmp
mov
test
mov
inc
mov
push
sub
aaa
xor
cmp
dec
mov
cmp
sub
je
mov
popf
sahf
into
outsb
aaa
pop
adc
addr16
jb
addr16
cs
add
jns
cs
push
sbb
jl
mov
cmp
push
pop
clc
mov
pop
ja
jp
stc
cltd
fmull
loopne
out
sti
mov
dec
fwait
jl
pop
test
xor
cmp
jecxz
test
pop
mov
push
in
jmp
fiaddl
lret
push
mov
xor
pop
cmpsb
cwtl
or
inc
loope
fucomp
sub
scas
jne
cwtl
into
rolb
popa
push
sti
adc
xchg
daa
in
lahf
mov
pop
scas
inc
jbe
sub
lods
sarl
xchg
xchg
js
push
arpl
and
adc
push
outsl
and
scas
push
shlb
cmp
push
imul
push
pushf
xor
dec
mov
iret
mov
push
addr16
mov
lea
cmc
int3
cmpsl
add
fldcw
pop
lahf
bound
pop
fdivr
stos
lahf
clc
sbb
mov
pushf
imul
bound
in
hlt
ds
addr16
idivb
movsl
jl
mov
add
scas
sub
pop
jb
aaa
mov
out
ficomps
cltd
popl
or
arpl
cmp
in
and
leave
dec
loop
aam
sbb
inc
testb
and
xor
ss
pop
je
dec
dec
loop
and
fnstenv
push
jmp
lret
stos
out
inc
pushf
jecxz
aad
adcb
jecxz
push
sbb
mov
jno
in
jnp
or
rcr
shlb
repnz
fsubrs
and
adc
cli
sarl
xchg
ss
and
fmull
int3
nop
lods
inc
inc
scas
inc
ret
mov
outsb
dec
addb
lods
cli
scas
ret
mov
cltd
in
das
push
hlt
shll
ljmp
insl
aam
mov
sub
dec
cmpsl
sub
dec
iret
inc
fs
xor
adc
inc
inc
in
test
ss
pop
adc
loope
pop
sbb
xchg
popa
into
pop
in
inc
cmpsb
andb
pop
inc
xchg
insl
add
push
xor
jbe
xchg
push
out
mov
pop
lret
inc
or
sahf
sub
scas
sbb
push
jmp
push
cmc
imul
xchg
mov
jae
sbb
xchg
push
fmull
out
jne
cmp
jle
push
mov
int3
scas
dec
je
leave
ja
bound
jp
in
mov
ss
push
pusha
cltd
test
push
sbb
ror
dec
xchg
add
adc
fsubr
or
pop
and
dec
ss
out
scas
and
mov
add
jae
mov
mov
or
outsb
lods
jg
pop
ds
push
popf
xor
dec
movsb
inc
les
ja
data16
int
pop
out
xchg
aam
sbb
lahf
xor
mov
sub
and
pop
imul
shll
xchg
gs
xchg
pushl
xor
xchg
sub
add
dec
fldenv
aam
mov
lock
push
arpl
or
push
mov
sub
inc
fadds
pop
cmpsl
ret
mov
pop
mov
lods
add
mov
nop
mov
dec
pop
test
and
repnz
add
xor
jno
movd
daa
adc
lea
jge
addr16
stc
xchg
out
xchg
mov
add
je
mov
mov
cltd
mov
mov
mov
cmp
jmp
add
xor
in
cltd
cmp
out
icebp
dec
pop
inc
xor
lods
lcall
mov
cmp
int3
cmpsb
into
outsl
dec
shll
or
jle
xchg
mov
mov
jle
push
stc
adc
mov
cmpb
adcb
scas
sarb
shr
iret
inc
lods
hlt
mov
scas
fmull
push
ss
in
push
mov
and
cmp
int3
lea
lcall
xchg
in
lcall
and
test
movsl
pop
gs
int
inc
sub
hlt
mov
jae
mov
or
inc
aad
rcrb
mov
cli
stos
lret
or
jp
xlat
mov
stos
loop
pop
mov
mov
sub
push
pop
popa
loopne
movsb
push
or
mov
cmc
loop
es
mov
fists
movsl
icebp
inc
cmp
sub
les
rorl
sti
fxtract
insb
pop
std
xchg
int
mov
sub
add
mov
jle
loope
or
adc
jne
jns
mov
addr16
jnp
out
push
sbb
lcall
cmpsb
imul
fldenv
iret
outsb
fisubs
jecxz
jnp
mov
mov
test
scas
data16
push
or
mov
jge
or
cli
imul
xchg
pop
invd
imull
repz
jns
scas
mov
mov
dec
cwtl
dec
adc
jns
push
into
or
inc
jno
cmp
pop
sahf
push
inc
jnp
lods
cmp
test
sbb
les
es
addl
insl
and
or
jge
addr16
arpl
dec
mov
mov
insb
iret
push
sahf
loope
mov
shrb
out
loop
dec
clc
lret
scas
call
sub
and
sahf
and
into
fmul
popa
xor
aas
add
test
cmp
roll
mov
push
or
fwait
push
push
aad
sbb
outsb
cli
dec
stos
fcoms
cmp
mov
cltd
mov
xchg
loop,pt
sub
icebp
jne
inc
pop
das
fs
fidivrs
call
adc
mov
hlt
lret
xor
out
stos
iret
arpl
in
mov
sbb
cmp
xchg
xchg
out
or
and
or
or
lods
fidivrl
lods
fisubrs
xchg
mov
or
mov
mov
in
mov
leave
fdiv
adc
scas
arpl
dec
fsubrp
test
ret
scas
and
enter
ds
scas
lods
arpl
mov
outsw
divb
lea
cmp
aad
jo
cmp
mov
jge
dec
fld
fiadds
adc
mov
fldl2t
das
iret
xor
xchg
xchg
inc
and
into
xor
cmp
psubusb
into
test
dec
mov
push
xchg
aas
shll
les
dec
loope
gs
inc
data16
test
fnstenv
outsb
shrb
mov
stos
lds
sbbb
mov
fisttps
sbb
cs
sub
xor
xor
dec
icebp
in
mov
out
out
push
fcmovnu
out
xchg
fs
cmpsb
push
pop
add
aaa
dec
mov
inc
out
sub
cmp
add
je
aas
dec
sub
sbb
jns
xor
inc
and
cmp
xor
push
inc
fildl
pop
inc
and
jl
dec
int
shr
stc
or
and
out
inc
pop
insl
push
inc
les
push
jno
movsb
ds
mov
shr
nop
fmull
dec
ljmp
dec
mov
stc
and
sub
mov
push
push
mov
inc
fdivrp
and
adc
jbe
push
ss
and
je
push
sbb
fwait
mov
movsl
test
mov
mov
and
ljmp
sub
pop
repz
cmc
pop
xlat
cmpsb
adc
or
mov
lret
test
andb
mov
loop
push
out
inc
nop
xor
daa
add
mov
scas
mov
jne
mov
imul
pusha
xchg
movsl
icebp
repz
add
sub
int
lods
sub
push
hlt
lret
xchg
mov
sub
sbb
add
xor
mov
arpl
dec
inc
lea
out
int3
sbb
addr16
scas
or
pop
pop
call
aas
sub
out
push
in
pusha
fmul
push
std
cltd
pop
mov
cltd
stc
cmp
outsl
subl
iret
cmp
roll
cmp
jnp
aam
out
mov
mov
repnz
pusha
mov
xor
int
xor
lcall
xchg
in
cmp
xlat
add
movsb
flds
movl
pushf
pop
lcall
aam
imul
or
test
test
mov
or
mov
jle
aam
inc
fdivs
sbb
pop
aaa
mov
inc
dec
loop
jle
add
or
push
xor
mov
out
push
sbb
cwtl
pop
popf
mov
enter
jo
loop
mov
negb
fs
inc
add
pop
stos
fld
or
mov
insb
hlt
mov
in
mov
xchg
xor
inc
mov
mov
cmp
or
dec
adc
stos
js
fsubl
cmp
cmp
xchg
dec
pop
outsl
test
pop
mov
popf
mov
mov
mov
add
hlt
sbb
xchg
sub
mov
xchg
loop
movsb
stc
test
mov
imul
sbb
mov
xor
mov
sbb
add
xor
arpl
mov
fdivl
xchg
outsl
mov
daa
cmpsb
and
mov
xchg
xlat
jmp
push
popf
xor
movsb
jne
pop
adc
push
mov
pusha
neg
js
mov
push
push
ds
not
mov
ret
adc
add
mov
fldenv
movsb
or
jge
test
inc
mov
mov
lret
fistps
and
sub
xchg
aas
fdivl
roll
jecxz
lcall
adc
stos
test
inc
sbb
sbb
or
ret
call
adcb
or
xorl
xor
scas
call
fwait
sti
push
popf
mov
or
push
jb
xlat
jno
lahf
cmp
jecxz
call
in
mov
pop
insb
out
sub
xchg
pop
mov
mov
mov
test
mov
mov
mov
mov
inc
dec
push
incb
aaa
sahf
sti
stos
test
roll
fucomip
inc
cli
and
lods
testl
push
xchg
call
push
add
scas
lret
loopne
insl
out
xor
sbb
add
in
sbb
and
mov
xlat
and
add
pop
js
pop
popa
adc
inc
xchg
xor
and
dec
in
add
pop
xor
xor
js
lret
std
or
scas
repnz
xchg
xlat
jmp
xchg
lock
and
xor
mov
and
stos
inc
add
jno
sar
push
xchg
dec
loopne
dec
repnz
inc
in
mov
pop
xor
mov
mov
push
aas
loop
push
push
jo
das
mov
mov
inc
jg
xor
push
sub
push
outsl
stc
jl
mov
push
lods
mov
test
sti
inc
cmpsb
in
fs
mov
movsl
loope
fwait
jnp
dec
pop
mov
and
ja
comiss
add
adc
push
scas
stos
mov
insl
clc
rcll
sub
scas
inc
scas
or
pop
ret
pop
push
mov
clc
xchg
mov
out
cwtl
lret
push
dec
cmp
xchg
mov
daa
push
mov
sarb
mov
xlat
popa
test
movsl
repnz
pop
xchg
ja
mov
lcall
shlb
inc
jg
mov
pop
ret
call
into
scas
and
jp
push
pop
loopne
popf
or
pop
cli
mov
xchg
sub
xor
inc
jne
out
mov
test
push
push
adc
ret
mov
call
mov
fistl
cmc
cmp
popf
push
mov
incb
adc
test
push
jne
loopne
mov
sbb
cmp
xchg
jne
add
and
pop
cmpsb
mov
push
cmp
std
or
mov
sub
mov
push
xor
fcmove
or
leave
jo
or
cmp
lds
or
rcrb
or
outsl
inc
add
jl
sub
cmp
or
sbb
mov
add
aas
xchg
es
shll
add
shrb
dec
inc
jb
adc
cmp
sarl
lret
lds
mov
fisubrl
test
in
out
cmpsb
in
jae
das
out
cmp
pop
imul
and
lcall
and
popa
xchg
push
add
push
mov
xor
in
stos
lcall
sub
pop
inc
mov
jmp
out
push
clc
push
push
ss
mov
ret
jle
call
cmp
jge
scas
out
stos
into
fwait
scas
repnz
dec
notl
add
adc
gs
mov
xchg
repz
mov
mov
lahf
mov
test
or
rcll
ja
shll
mov
and
xchg
adc
cmp
clc
imul
adc
mov
sbb
push
filds
dec
push
aad
shl
sub
cld
sbb
push
out
inc
sbb
imul
sbb
cli
jmp
push
lods
aaa
dec
xor
sub
push
cmc
dec
sahf
cmp
in
push
repz
jecxz
jl
iret
sub
bound
mov
insb
je
mov
mov
outsl
push
popf
cltd
xor
jnp
or
imul
push
outsl
jnp
push
jns
hlt
aad
clc
dec
add
inc
shl
adc
mov
inc
push
or
push
icebp
ja
lea
stos
cmp
cs
mov
std
adc
sbb
subb
fstpt
pusha
rorb
mov
cmp
mov
call
push
or
leave
test
icebp
loope
fsubrs
push
jo
scas
pop
pmuludq
mov
test
cmc
sbb
mov
fbld
or
pushf
jb
popf
aaa
mov
movsb
cmp
jns
mov
outsl
cmp
popf
jns
cmpsl
mov
fsubr
pop
pop
xor
cmp
cmp
add
insl
pop
push
loop
loop
insb
ds
xchg
jne
lret
sbb
and
pop
mov
jp
xor
jbe
dec
lea
mov
js
addb
outsb
stos
nop
gs
sub
stos
fsubrp
jmp
or
repz
sub
cltd
std
cltd
xchg
fs
sbb
out
jno
push
sbb
inc
cld
test
iret
cltd
test
mov
xor
adc
das
or
jb
jnp
pop
pop
jnp
in
and
lds
push
sarl
in
insl
adc
dec
xor
sahf
scas
jb
mov
jmp
test
or
xlat
insl
mov
push
ret
sub
jmp
test
push
or
cmc
mov
xor
shr
push
int3
inc
or
bound
or
pop
dec
das
and
fdivrl
add
dec
cmpsl
adc
sub
cli
test
mov
mov
jb
iret
sbb
iret
vpunpcklwd
dec
out
popf
push
jae
mov
inc
idivl
inc
dec
into
gs
arpl
test
mov
mov
movsl
int3
or
jne
inc
push
dec
or
ss
leave
and
in
leave
inc
or
adc
inc
push
or
dec
sti
mov
cs
int3
cmp
shl
and
mov
lret
or
sub
adc
add
xor
mov
imul
dec
jecxz
mov
add
lret
data16
jae
fsubr
test
int
jg
inc
mov
jmp
enter
aad
mov
pusha
lds
fists
ss
cld
mov
test
push
and
paddw
scas
xor
fdivrs
pop
loope
cld
idivb
scas
ret
fwait
push
mov
pop
sar
jbe
testl
add
lea
rcll
mov
and
out
rol
lock
cmc
lahf
es
cwtl
fs
hlt
andl
inc
xchg
mov
sub
sbb
xchg
cmp
sub
mov
push
jle
push
sbb
push
je
cld
push
addr16
mov
cwtl
aas
add
cmp
jmp
bound
repz
inc
sbb
and
adc
push
fsub
adc
lret
fmull
ds
inc
xlat
pop
cmp
psadbw
sbb
sbbb
jl
dec
shlb
jle
push
dec
jl
repnz
cmp
arpl
and
inc
insl
into
ss
dec
aaa
ret
inc
push
loope
sbb
pop
out
pop
inc
ljmp
test
and
sarb
xor
popf
dec
mov
aad
sub
rorl
sub
jmp
jge
add
jae
in
incl
rcrl
add
insl
push
ret
adc
cmp
orb
push
repnz
xor
ret
movsb
pop
call
lods
jecxz
jmp
or
gs
push
mov
call
fisubrl
adc
xchg
jbe
xchg
jno
repnz
popa
imul
es
lock
lahf
lods
jo
rclb
pop
sti
fildl
aaa
and
xor
rclb
pop
sti
xchg
jp
aaa
and
stc
lahf
in
add
dec
inc
jb
push
js
scas
aas
add
xor
mov
pop
mov
xor
push
mov
ficoml
mov
sbb
ret
jo
cmc
aaa
mov
push
bswap
je
jp
pop
inc
mov
adc
sbbb
sbb
or
cs
dec
cmpsb
pusha
cmpsl
push
pop
test
iret
mov
insb
in
in
outsb
nop
shlb
sbb
pop
pop
jns
popf
sub
jmp
jbe
fldenv
sub
fstpt
pop
int
insb
stos
xchg
jp
mov
cmp
add
rcll
cmp
jns
push
mov
imul
dec
and
pop
pop
pop
pop
stos
push
addr16
shll
daa
cli
pop
ret
scas
outsb
adc
hlt
jnp
add
into
cmp
pop
test
cltd
ljmp
iret
test
sbb
ds
mov
or
sub
xchg
pop
int3
mov
cmp
inc
pop
mov
lods
call
ret
xchg
xor
popa
lock
and
jo
mov
sbb
out
jle
and
out
xchg
and
insb
cmpsb
mov
fistl
mov
pop
adc
pusha
mov
dec
fs
mov
pop
out
and
enter
sub
daa
and
data16
cmp
sub
shrl
testb
aaa
add
fwait
cmp
xchg
outsl
pop
xor
hlt
popf
xor
jo
into
mov
dec
push
in
repnz
je
je
daa
lcall
pop
cmp
dec
dec
loopne
out
xchg
es
fdivl
jne
cmpsl
push
jne
jns
inc
and
sbb
pop
hlt
dec
fnsave
adc
loopne
adcl
jns
gs
arpl
out
xchg
aam
repnz
pop
std
pop
jge
test
xor
jmp
and
cmc
mov
jne
loopne
call
iret
adc
push
xor
pop
adc
mov
jns
outsl
sub
pop
jae
mov
jae
and
and
cltd
jno
cli
cld
outsl
rolb
and
sbb
push
jnp
lock
ljmp
daa
adc
popa
pop
push
adc
and
mov
aas
pop
call
inc
negb
xchg
jmp
mov
sub
sahf
and
outsl
inc
scas
fcomps
pop
pop
jg
push
xchg
int
aas
xchg
sub
cli
pop
mov
jno
shrb
aam
mov
sti
add
fadds
popf
shufps
or
cmp
addl
pushf
ficompl
or
daa
mov
xor
bound
fs
jb
popa
mov
jecxz
dec
xor
outsl
xchg
sub
pop
add
ds
loop
sar
fwait
jg
les
mov
fisttps
stos
xchg
xor
shll
lods
dec
loop
out
jne
pushf
mov
pop
call
test
and
mov
adc
sbb
push
dec
xchg
aas
arpl
add
push
iret
orl
xlat
imul
insb
push
ds
sub
jbe
lret
add
adc
sub
inc
inc
mov
pop
repz
sbb
movsb
cs
outsl
icebp
push
mov
std
xchg
lock
call
mov
cltd
pop
cld
cwtl
ret
rcrl
out
negb
xchg
cld
inc
repnz
xor
push
loope
loope
ret
sarb
push
lds
mov
bswap
cmp
sub
mov
adc
cmp
inc
fdivr
pushf
pop
ret
pusha
ds
test
rcr
jne
jne
push
mov
lods
mov
fnstcw
cbtw
leave
mov
push
jne
pushf
mov
mov
aam
push
cmp
mov
dec
lea
lods
ret
pop
sub
jle
mov
adcb
sub
rcrl
inc
dec
shll
fcomps
adc
shlb
mov
arpl
xchg
xor
ret
fwait
pop
jae
fcmovbe
and
xchg
gs
test
add
jecxz
and
mov
jmp
sahf
clc
or
pop
jmp
mov
mov
jo
gs
xor
xor
popa
and
push
lods
xchg
sub
dec
and
mov
pop
inc
mov
sub
test
cltd
mov
call
and
push
jo
in
movsb
jp
es
cmpsb
loop
and
fs
int3
out
add
movsb
push
sahf
shr
lret
cld
xor
std
pop
test
mov
cmp
mov
leave
push
sahf
xchg
mov
pusha
mov
daa
and
dec
mov
xchg
push
iret
add
xorb
outsb
sub
mov
pop
and
sahf
popa
jnp
inc
xor
repnz
inc
mov
lods
xchg
inc
lcall
stc
sub
adc
xor
mov
jmp
inc
jecxz
inc
cmp
stos
subl
jp
jmp
movsb
push
das
mov
jns
mov
pop
shr
mov
push
mov
leave
js
mov
sbb
shlb
imul
popa
pop
mov
push
push
dec
or
push
sub
push
cmp
mov
push
loopne
and
or
loope
cwtl
stos
das
cltd
or
sub
cwtl
add
mov
lret
in
mov
cmp
xor
add
stos
xchg
in
ret
cmp
inc
fucomp
fsts
arpl
gs
mov
aas
push
jp
jo
xor
insb
mov
sub
in
pop
stos
aas
push
sub
push
inc
ja
mov
rcll
pop
stc
leave
mov
jb
dec
movsb
into
cmp
icebp
mov
in
and
test
mov
mov
aas
scas
adc
outsb
mov
fdivs
adcb
inc
out
test
pop
mov
ja
cmpsl
and
fstps
decl
negb
xor
jae
fnstsw
mov
jbe
sub
in
add
sbb
or
rorl
pop
subb
mov
sub
add
enter
aam
cmp
lods
cmc
xchg
stos
cmp
jns
repnz
adc
lret
iret
mov
inc
ds
and
and
aas
push
sbb
add
repz
scas
js
imull
ret
and
push
jp
or
shl
add
push
cmp
mov
arpl
sub
pop
loop
adc
bound
adc
aas
stos
mov
adc
lock
push
xchg
fstps
cmp
test
xor
cmp
jp
push
mov
push
lock
pop
jo
push
movsl
outsb
arpl
lods
fistl
imul
lock
xchg
jae
xor
pop
or
mov
mov
add
mov
push
mov
fidivrs
loope
xchg
push
mov
inc
hlt
mov
add
sbb
insl
les
sub
jo
loope
sub
mov
adc
inc
push
xor
sub
addb
add
dec
mov
push
fiadds
hlt
adc
pop
push
addl
mov
sub
dec
call
cmc
adc
rol
cmc
mov
mov
mov
jb
dec
cmp
mov
out
in
lods
lahf
clc
aad
lea
faddp
or
inc
lds
sahf
fwait
mov
jmp
sbb
imul
push
popa
xor
popa
fidivrs
xchg
int
repnz
int
sbb
cwtl
mov
add
fidivrs
push
or
mov
lock
pop
lods
mov
aaa
fimull
xchg
gs
leave
pop
pop
js
push
pop
and
dec
cpuid
cmpsb
nop
aad
jnp
pop
scas
push
sub
jl
cmp
pop
dec
mov
push
movsl
dec
test
and
jmp
dec
out
xchg
aad
and
lds
adc
jnp
jmp
imul
adc
cmpsb
dec
clc
jae
dec
push
mov
mov
mov
xor
mov
daa
or
jg
sbb
jecxz
mov
mov
xchg
lock
xor
rcrl
dec
lods
inc
push
adc
fcomip
or
jb
insb
mov
cmc
ds
pop
popa
and
dec
fsubl
dec
jae
aam
adc
ret
xchg
rorb
add
jg
movsl
jle
adc
jle
call
inc
fdecstp
lods
inc
dec
xor
inc
and
or
loope
or
out
out
add
lods
fmull
dec
jbe
jecxz
inc
mov
sbb
or
mov
cs
int3
insb
jmp
test
mov
into
addl
nop
js
sub
lods
fstps
cmp
sub
push
in
add
fidivl
out
lock
or
lret
shrl
subb
jo
mov
stos
inc
adc
jbe
cmpps
stos
stc
repz
in
repz
pop
or
and
inc
out
xchg
test
or
fcoms
xchg
dec
mov
sbb
mov
fs
mov
add
xor
inc
pop
or
cmp
xor
lea
jl
scas
jl
fbld
cmp
lret
lcall
xor
ret
pop
xchg
xor
insb
push
loop
cmp
xchg
add
mov
sbb
jg
xchg
rorl
add
push
adc
mov
dec
es
aad
dec
pop
jno
pop
ds
loop
push
jns
hlt
mov
add
pop
in
push
inc
sbb
xorb
pop
push
xchg
xchg
jle
icebp
loop
out
cmc
sbb
test
push
mov
xlat
shll
fcomp
jne
insb
sbb
insl
stos
cld
pop
xchg
fiaddl
enter
mov
mov
push
inc
out
jo
gs
push
into
add
push
xchg
sahf
mov
mov
fldl2t
iret
aam
les
popf
jmp
iret
push
mov
or
into
lret
lahf
inc
and
and
cmp
insb
ret
insl
test
cmp
jg
add
mov
test
sbb
aad
pop
mov
mov
ss
jne
fbld
int
pop
aas
in
mov
mov
imul
push
push
push
jl
imul
scas
ret
mov
addr16
adc
push
add
push
jge
lcall
dec
imul
dec
scas
sti
xchg
imulb
mov
andb
mov
std
outsl
jno
aaa
pop
pop
mov
mov
sti
in
inc
ret
ss
ljmp
inc
in
popf
ret
fldcw
lret
jb
hlt
pop
inc
sbb
dec
cmpsl
cwtl
mov
push
stos
dec
add
pop
sbb
ret
orb
pop
or
jno
loop
jbe
mov
sbb
mov
add
fstps
jbe
rclb
ljmp
cmp
add
aad
in
ret
xchg
adc
lret
hlt
pop
in
lea
sub
hlt
sbb
push
aas
in
das
and
sub
mov
rol
pop
mov
and
inc
mov
idivb
cmp
xchg
into
inc
and
gs
insb
jnp
dec
fucom
notl
sub
in
adc
mov
pop
mov
cmpb
jmp
add
in
dec
std
add
mov
adc
inc
sub
dec
fucomi
fs
inc
inc
ds
jg
mov
jno
imul
mov
xlat
push
push
sub
fsubrl
xor
and
pop
push
movsb
jnp
and
mov
ja
test
lret
daa
ljmp
push
or
lcall
xchg
mov
repz
xchg
gs
std
int3
push
and
pop
in
call
add
xor
push
mov
sub
inc
mov
add
das
inc
das
outsl
add
pushl
out
and
pop
pop
stos
mov
fldl
cmp
out
xlat
cmc
aaa
sub
inc
or
mov
and
xchg
outsl
add
cmp
lcall
adc
movsl
sbb
adc
aaa
pop
mov
dec
rorb
das
shlb
enter
cwtl
mov
lret
aam
jmp
das
pop
scas
nop
scas
jne
iret
mov
imul
push
insl
and
out
std
pop
ficoms
subb
aad
fidivrl
dec
xor
mov
push
xor
or
lcall
lods
fmuls
pop
cs
pop
popf
mov
xor
pop
lock
loop
or
cwtl
cmpsb
lods
mov
sbb
pop
les
dec
mov
mov
cwtl
jge
push
inc
rorb
loope
jae
scas
add
out
mov
pop
in
ret
sub
push
pop
xor
xor
imulb
cmp
ds
out
pop
pop
sahf
inc
roll
or
mov
leave
xor
push
mov
jge
push
inc
imul
aam
mov
sbb
insl
and
ret
leave
jo
stc
imul
push
in
dec
pop
test
xchg
add
fimuls
dec
adc
inc
out
mov
and
cli
xor
loop
mov
jo
int3
shlb
lcall
cwtl
pcmpeqd
scas
inc
addr16
xor
cmp
je
mov
ficoml
xor
jae
mov
test
ja
jmp
push
jmp
popa
xorl
pop
jnp
push
cmp
pop
repnz
lret
push
insl
cwtl
adc
cmp
cmp
add
jno
push
scas
pop
push
fchs
imul
in
stos
les
adc
xor
mov
mov
fs
mov
aaa
sub
or
mov
daa
sub
repz
icebp
mov
add
dec
and
shrl
sub
je
mov
or
jmp
repz
nop
insb
movsb
mov
shrl
scas
jns
inc
sbb
inc
aad
or
add
inc
aam
out
xor
xor
push
mov
mov
lock
insl
cmp
sbb
or
mov
mov
xor
dec
loop
test
adc
fisubs
mov
addb
sahf
mov
pop
sbb
adc
ss
fiadds
xchg
sbb
xor
mov
jno
add
adc
mov
add
fadds
ljmp
push
enter
inc
or
je
je
xchg
or
jae
sbb
dec
mov
xchg
addr16
flds
jae
mov
push
js
xchg
add
fidivrs
nop
arpl
imul
push
stos
jnp
and
sti
inc
fisubrl
scas
xchg
imul
or
jge
outsl
push
mov
loopne
inc
mov
xchg
les
int
mov
and
data16
rorl
test
sbbl
and
movsl
ret
cmp
mov
adcl
fildll
or
jecxz
mov
jp
out
push
push
lods
add
cli
jnp
xor
pushf
xorl
lcall
sbb
sbbl
push
xlat
cltd
and
cmp
jmp
movsl
or
push
fsubrs
iret
lret
fs
pop
lahf
and
pop
scas
les
and
sbb
ret
popa
in
xchg
mov
iret
sti
loop
aaa
loop
cs
stos
mov
push
sub
push
call
mov
lahf
fwait
add
outsl
outsl
inc
fcoml
sub
cwtl
push
jp
sbb
fists
jg
lcall
icebp
out
xor
test
and
mov
outsl
and
adc
mov
mov
jbe
mov
pop
loopne
cld
les
jne
pop
into
push
fidivl
jb
aam
leave
sbb
out
sbb
cs
inc
loope
ret
pop
fwait
add
cmp
fstp
cmp
sbb
jnp
stc
das
cwtl
xchg
add
jp
xor
pop
add
push
and
jge
shll
cld
push
loope
outsb
pushf
addr16
out
lods
int
addr16
mov
lret
in
dec
bound
aad
out
test
cmc
dec
mov
std
out
leave
iret
lock
cmp
adc
jae
xor
fsubrs
mov
xorb
repnz
mov
mov
fmul
pop
pop
or
lea
loop
xor
mov
subb
push
push
xchg
cmp
repz
pop
addr16
les
insl
es
inc
aas
loop
in
push
mov
pop
test
xlat
jb
pop
xor
dec
repz
push
push
das
fdiv
cmp
loop
mov
dec
inc
jg
je
pop
dec
sbb
add
cmp
mov
insb
sahf
cltd
test
xchg
cld
xorb
into
aam
daa
inc
xorb
and
jno
push
std
and
fldenv
subb
fxch
dec
or
daa
rcrb
push
ds
and
pushf
mov
clc
frstor
mov
jae
inc
enter
fs
loop
sbb
inc
int
jne
mov
sbb
sahf
adc
shrb
test
xchg
jnp
pop
inc
xor
out
inc
push
and
lret
xchg
xor
lahf
call
jecxz
jns
stos
inc
out
das
icebp
mov
lds
insb
out
daa
push
insl
dec
push
mov
repz
sahf
xor
sub
lret
cmp
stc
inc
sbb
scas
in
jg
into
das
xorl
lods
rcrb
mov
jo
xlat
mov
cmpsb
or
shl
fldenv
leave
ret
fnsave
mov
fisttpll
mov
je
ret
mov
lods
mov
orl
jge
lods
jns
iret
mov
sub
fadds
sbb
push
imul
xor
lods
inc
sub
cwtl
xor
lret
aaa
xor
push
mov
inc
sbb
daa
sbb
repnz
lods
adc
or
jo
cmc
adc
nop
cmp
sahf
in
and
fwait
sub
lods
and
mov
cld
xchg
daa
sbb
adc
add
lock
repz
sbb
push
aam
mov
jg
mov
jl
shll
in
add
mov
inc
and
mov
mov
xor
mov
out
fs
dec
int
aaa
dec
shrb
push
cmc
nop
hlt
cmp
sbbl
dec
cmp
lcall
divl
xlat
int
or
and
sbb
inc
push
nopl
sbbb
cld
push
popf
xchg
mov
gs
rcl
shrb
outsb
iret
jl
sbb
dec
cltd
sti
add
icebp
lahf
and
cld
fwait
sub
testl
jbe
lds
aad
fcmovb
dec
out
sti
cmc
aas
push
cltd
inc
pop
xchg
pop
mov
dec
or
jg
aaa
xchg
scas
push
mov
cmp
add
cmp
mov
hlt
xchg
fwait
dec
loopne
dec
mov
dec
pusha
add
setnp
pop
enter
jno
jle
and
jp
popa
cld
xchg
sbb
dec
mov
adcb
and
leave
movsb
icebp
adc
sub
cmc
scas
shlb
flds
push
add
push
movsb
pop
mov
adcl
out
andl
cli
fwait
mov
out
sahf
xor
jnp
je
into
leave
lds
mov
and
test
ret
stos
cmp
xchg
decl
lret
out
fwait
mov
and
xor
out
pop
andb
dec
bound
or
sub
dec
and
mov
jnp
push
mov
mov
inc
into
adc
inc
push
cli
arpl
adc
ss
and
cwtl
sub
mov
add
push
rol
add
inc
dec
sbb
lcall
test
inc
push
test
mov
test
add
mull
pop
cmpb
enter
push
popf
stos
mov
pop
mov
data16
or
push
xchg
pop
outsb
dec
and
adc
insb
cld
push
fldt
outsl
out
xor
rcr
dec
push
xchg
idivb
in
lods
and
jo
movsb
mov
mov
sbb
mov
leave
leave
gs
pop
cmp
pop
decl
sti
loopne
xor
mov
fisttps
pop
mov
mov
xor
test
jbe
xor
aam
mov
mov
mov
aas
imul
mov
mov
cmp
mov
adc
mov
and
flds
mov
out
popf
lret
pop
movsw
shr
loop
and
cli
mov
pop
test
adc
jno
sbb
outsb
mov
cli
mov
lret
add
mov
lret
repz
jge
sub
movsb
inc
pop
inc
cld
jge
gs
sbb
sub
xlat
std
adc
cmp
pop
ret
pop
fistps
cmp
clc
ja
fidivrl
rorb
mov
loopne
icebp
gs
pop
xchg
aaa
mov
jae
mov
sahf
adc
pushf
cmc
inc
mov
jno
addr16
cwtl
mov
mov
cwtl
test
cmpsb
adc
mov
dec
push
and
xor
dec
push
cld
add
add
or
dec
and
daa
int
int3
sub
jg
inc
fsubs
popf
out
sbbb
jne
jns
sbb
sub
fistps
sub
mov
int3
dec
shr
mov
imul
mov
ret
xchg
test
xor
shll
imul
pushl
fmull
mov
das
and
loopne
aam
fcom
cs
or
pop
jbe
mov
xchg
test
cmc
cmpsl
and
adc
pop
ret
call
dec
repz
shlb
xlat
dec
aaa
mov
cmp
inc
iret
leave
sarb
pop
add
cli
xor
sub
inc
push
cli
mov
xchg
mov
stc
or
jae
dec
pop
sahf
repnz
pop
imul
mov
xlat
data16
cmp
mov
or
cmpsl
fidivrs
xrelease
and
add
enter
lret
mov
mov
inc
call
clc
push
lea
push
adc
push
xchg
scas
cmp
inc
sub
cmp
fists
inc
inc
add
xor
and
cmp
arpl
mov
cmp
mov
aam
js
pop
cmp
jae
adc
mov
ficoml
lods
les
ljmp
xlat
scas
or
add
or
jnp
push
dec
loope
fiaddl
mov
fdivr
pop
mov
icebp
inc
loopne
std
aam
cmc
lret
inc
cmpsl
fadds
popf
mov
jne,pn
iret
fnsave
xor
mov
sbb
stos
repz
fcompl
mov
aad
lcall
push
ljmp
lock
imul
adc
into
xor
popf
mov
mov
stos
jns
or
imul
sub
inc
adc
inc
pop
loopne
mov
cmp
inc
out
jg
clc
xchg
out
cwtl
or
or
aas
push
mov
fstpt
push
pop
frstor
aaa
pop
scas
fidivrs
fildll
pop
cmp
mov
sub
idivl
xor
push
out
stc
sbb
ljmp
mov
mov
xchg
sub
dec
inc
stc
sahf
cli
out
faddl
es
iret
jns
xchg
bound
push
jns
and
jae
dec
push
lcall
or
mov
imul
jecxz
divl
cmp
movsb
jecxz
cwtl
mov
cltd
rcl
idivb
out
sbb
mov
and
push
repz
xchg
mov
dec
mov
test
out
lock
dec
and
jmp
int
fbstp
jge
jle
mov
addb
cmp
popa
aas
pop
xchg
clc
or
dec
jno
dec
pusha
ret
jb
jl
dec
fstpl
loope
pop
sbb
mov
mov
imul
push
lret
pop
ljmp
mull
dec
cmc
jns
data16
sub
cltd
mov
arpl
aam
jecxz
xorb
sbb
stc
subb
icebp
cli
aad
xor
xchg
push
js
shrl
dec
adc
inc
arpl
movsl
fiadds
dec
mov
stc
push
aad
adc
je
inc
push
add
adc
aas
add
jl
test
push
mov
mov
add
bound
outsl
sbb
nop
push
cmp
aas
or
dec
mov
popf
pop
add
int
mov
roll
mov
cmpsb
cmp
add
dec
jg
rcrl
fimull
adcb
or
movsl
inc
push
mov
test
pop
xchg
add
pop
adc
cmc
or
popf
fisttpl
pusha
add
dec
xor
scas
shrl
shll
sar
mov
dec
mov
loope
jmp
mov
xor
cmp
mov
not
out
cmpsl
pop
das
fpatan
pop
mov
mov
push
out
mov
cmp
testl
les
scas
inc
fsubl
inc
ljmp
or
std
push
inc
dec
xorb
out
sub
cmpsl
mov
in
add
push
cmp
push
popf
and
in
sti
jb
lock
scas
cmp
inc
xchg
jmp
fldl
imul
cmp
inc
push
rolb
enter
or
shll
mov
push
cwtl
adcl
add
outsb
lcall
mov
or
cs
mov
sub
data16
pop
sbbb
clc
jecxz
lods
dec
jmp
sub
stos
or
mov
and
inc
add
xor
int
xchg
mov
xchg
ljmp
and
push
aad
mov
aas
cmp
ds
loope
lods
xchg
adc
push
and
mov
adc
cltd
push
mov
xor
ljmp
pop
into
xor
es
xchg
add
aas
push
push
and
rcl
push
insb
shl
cmp
in
sbb
notl
shr
ja
cmpsl
and
mov
test
inc
jo
frstor
pop
mov
sub
sub
inc
or
fistl
cmpsb
sbb
orl
add
dec
test
daa
pop
sbb
fwait
mov
inc
enter
sbb
push
insb
xchg
add
dec
jno
das
inc
shlb
fidivrl
dec
jp
xchg
sub
jns
loopne
cld
adc
xchg
xchg
pop
das
jmp
sub
pushf
scas
call
addr16
lcall
or
movups
lock
lahf
inc
iret
push
insl
cmp
xchg
jp
jne
in
push
out
push
xchg
rcrl
ret
sbb
push
cld
pop
shlb
test
mov
jg
cwtl
mov
push
rolb
pop
sub
mov
add
push
jo
ja
or
fdivrl
rorb
cmp
mov
lods
push
out
fnsave
mov
cltd
adc
inc
test
add
xor
lods
xchg
inc
jmp
push
arpl
xor
sbb
ret
jno
loop
pop
shr
adc
jmp
rcll
and
fmull
paddsw
add
sub
adc
mov
rcl
add
lods
mov
sub
iret
sbb
loop
adc
adc
lods
jg
sub
push
aad
pop
dec
inc
jg
shll
xchg
fldl2t
fwait
xlat
or
and
test
cmc
jns
mul
stos
mov
and
xor
stc
aad
popa
adc
push
or
es
pop
dec
xor
mov
pop
in
iret
adc
adc
xor
jo
fsubs
pop
lock
inc
dec
mov
mov
imul
sbb
cmp
push
imul
push
xor
nopl
imul
es
mov
ljmp
dec
insl
dec
cli
aaa
test
mov
adc
loop
sub
cli
fsubl
mov
xchg
in
mov
inc
mov
outsl
fimull
cmc
cmp
loope
pop
sub
in
cld
call
aaa
xchg
xchg
stos
in
orb
sub
push
movsl
push
stos
pop
xor
add
aad
orl
add
inc
push
inc
xchg
cli
push
dec
cltd
scas
and
inc
mov
lret
jecxz
push
mov
nop
inc
push
into
test
push
ljmp
mov
lahf
shl
mov
leave
mov
outsb
and
sbb
adc
je,pn
lods
leave
mov
mov
xor
fisttps
out
lret
pop
mov
cmp
mov
mov
inc
sub
xchg
test
ds
push
ds
cmpsl
xchg
hlt
bndstx
mov
cmp
in
mov
int3
cmp
sub
xchg
sbbl
jb
lahf
rcll
je
lret
adc
cmpsb
inc
fisubrs
mov
gs
sub
and
mov
lret
pop
out
jecxz
jno
mov
add
repnz
movsl
fs
adc
cmp
adc
out
xor
jb
bnd
lahf
test
cmp
daa
inc
pusha
pop
dec
sbbb
lods
lods
subl
mov
xchg
adcb
jno
sbb
mov
or
and
mov
dec
xchg
sub
mov
sub
xor
sub
pop
lcall
sub
test
xor
sahf
leave
mov
mov
out
dec
fisttpll
outsb
push
std
adc
and
test
and
mov
push
les
lods
ljmp
int3
cmp
loope
test
fcmovnu
test
inc
cli
mov
xchg
push
es
and
lcall
push
test
int3
movsb
stos
mov
adc
test
mov
push
jns
sti
mov
adc
dec
iret
inc
mov
add
xor
jmp
mov
jnp
sub
sarb
dec
test
add
jno
fmul
jle
push
mov
mov
add
and
sbb
sbb
cmp
jne
add
gs
sbb
out
add
movsl
cmp
or
imul
test
int
dec
push
es
jo
in
dec
pop
xor
out
xchg
and
xchg
xchg
mov
jecxz
push
aad
and
repnz
mov
push
out
jo
dec
out
aas
push
test
add
inc
pop
push
xchg
enter
sub
lods
bound
dec
mov
adc
imul
popa
mov
pop
aas
xor
nop
push
pop
add
push
dec
hlt
sar
sti
movsl
mov
aaa
mov
push
xchg
lock
rorb
mov
sub
push
inc
mov
push
imul
stos
cmp
aas
xchg
xchg
out
aas
pop
xor
and
dec
data16
hlt
nop
out
cmp
arpl
adc
ljmp
mov
push
js
jle
jne
sub
int3
mov
mul
inc
pop
adc
dec
orb
sbb
imul
or
pop
lods
jnp
enter
mov
mov
push
movsb
les
roll
or
dec
adc
scas
lret
push
sbb
js
mov
inc
pop
fwait
add
aam
inc
movsb
ljmp
out
mov
loop
and
lret
push
int3
xchg
imul
jle
push
jo
cmpsl
sahf
out
cmpl
mov
inc
addr16
dec
leave
dec
scas
jae
xchg
sub
inc
fstl
mov
add
jmp
fs
inc
mov
inc
ds
fdivs
aam
sbb
pop
jae
out
iret
loopne
xor
gs
pop
dec
arpl
cmpsl
dec
pop
mov
iret
das
or
jle
jno
jmp
xlat
jecxz
orl
repnz
lret
lahf
pop
push
stos
cmp
pushf
scas
jns
jp
cltd
mov
add
cmpsl
mov
pop
cmp
mov
in
mov
ret
or
hlt
mov
sub
aam
cmp
ret
repz
mov
sub
fdivrp
mov
addr16
lret
pushf
and
xor
cmp
fwait
mov
push
pop
cwtl
push
hlt
pop
sahf
adc
sbb
insb
data16
fwait
lea
mov
and
stos
xlat
mov
cli
mov
movsl
cld
inc
fdivs
mov
mov
add
mov
dec
mov
push
xchg
lods
inc
test
inc
popf
and
iret
fs
add
sub
pop
cltd
dec
insb
rorl
lret
or
adc
mov
sub
cmp
cmp
push
fbstp
mov
test
fnsave
outsb
aad
push
sti
add
in
mov
sti
shll
imul
icebp
ret
cli
shrb
sbb
push
notb
cmp
insb
add
lods
cmc
or
push
loopne
inc
adc
adc
mov
stos
jg
jns
pop
mov
mov
push
fisttpl
sbbl
cld
lret
loop
jmp
xchg
pop
aam
add
jmp
js
lret
imul
xchg
mov
xlat
repz
fbstp
outsb
sub
mov
mov
fildl
addr16
clc
cwtl
mov
jg
jbe
rcrl
repz
jg
fbstp
pop
pushf
sti
or
scas
roll
sbb
push
mov
lret
jnp
push
jae
sub
nop
je
mov
repnz
sub
push
mov
popa
ret
bound
mov
mov
mov
inc
inc
jmp
push
arpl
pop
dec
cmp
jl
or
lea
sub
dec
out
inc
jmp
lret
test
lock
popf
mov
loope
repnz
dec
mov
xchg
or
mov
std
test
jns
iret
xchg
cmp
scas
sbb
inc
and
dec
sub
jne
push
ret
es
jno
mov
jge
cmp
xlat
and
push
arpl
test
stc
inc
test
ret
sbb
loopne
mov
cmp
fnstsw
xchg
mov
mov
stos
push
push
add
cltd
js
mov
sbb
std
push
ljmp
push
pop
dec
adc
test
in
adc
ss
in
xchg
test
mov
inc
push
sbb
aas
aad
mov
dec
sub
lahf
testl
dec
scas
decl
or
aam
pop
sbb
les
add
pop
mov
mov
movsl
cmpsl
sbb
aam
xor
mov
shr
add
adc
gs
push
and
or
sub
sbb
cmc
xor
test
lahf
or
mov
pop
sbb
arpl
cmp
popa
mov
nop
sti
js
mov
and
mov
mov
stc
std
push
imul
nop
xor
xor
shr
push
popa
repz
cmp
arpl
or
mov
pop
in
push
xchg
mov
or
mov
mov
mov
sbb
test
insb
add
in
xor
arpl
inc
mov
sub
sub
mov
or
mov
in
mov
into
mov
bound
shlb
mov
fbstp
mov
scas
push
fwait
sti
inc
mov
xlat
ja
std
lcall
in
push
add
push
jne
daa
dec
sbb
leave
mov
mov
push
lret
mulb
int
repnz
jmp
mov
je
mov
out
test
push
xor
fidivrs
rcrl
das
rorb
lcall
mov
jle
stos
clc
sahf
xchg
dec
shl
lcall
out
mov
push
loopw
adc
mov
fbld
pop
mov
shr
jno
inc
add
lahf
cmp
sti
pop
out
imul
and
cwtl
fcomps
mov
imul
jbe
imul
cmpl
sbb
sub
xor
les
inc
push
mov
dec
fs
lods
test
ss
xor
adc
jge
inc
cmpsl
mov
dec
mov
dec
cwtl
stos
in
cwtl
ret
xchg
idivb
out
jl
fdivrp
scas
int3
pop
cmp
xchg
mov
stos
mov
ljmp
dec
lahf
inc
adc
rcl
xor
mov
xchg
stc
scas
mov
push
jl
ret
add
mov
test
xor
and
aaa
fcmovnb
movd
push
inc
in
mov
dec
data16
xchg
push
movsb
xor
popa
push
and
movsb
jl
addl
loop
mov
mov
test
test
xlat
icebp
out
inc
dec
dec
pop
dec
fst
ret
push
fistps
pop
faddp
sahf
mov
inc
lret
or
dec
pop
mov
movsl
outsl
xchg
mov
ljmp
pushf
cli
and
stos
xor
mov
fs
push
inc
subl
bound
xorl
jnp
es
js
sub
fstl
adcb
clc
inc
push
lcall
sub
inc
pop
popl
jl
xchg
push
out
sahf
fnstsw
pop
xor
stos
or
adc
lahf
nop
int3
sahf
inc
in
and
ds
fisttpll
addb
jbe
sahf
xor
faddl
jbe
lcall
add
xor
push
shr
sbb
jge
mov
ja
xchg
pop
inc
push
xlat
mov
mov
adcb
out
repnz
adc
mov
divb
movsb
push
mov
push
rep
mov
popa
sub
xchg
jmp
imul
mov
roll
fstpl
inc
pushf
mov
ljmp
pushf
arpl
gs
and
in
scas
lock
sahf
lods
xchg
shl
inc
int
and
xchg
mov
data16
jecxz
push
mov
fisttpll
inc
xchg
out
push
push
hlt
xchg
cs
lods
pop
push
divl
imul
shlb
stc
loope
mov
movsl
mov
mov
fbld
shll
cli
or
nop
lds
out
jno
scas
dec
and
sbbl
mov
scas
cmp
mov
and
or
adc
popa
dec
lahf
sbb
andl
mov
and
add
push
jno
jae
or
mov
pop
adc
lods
stos
xor
out
sbb
stc
clc
jb
sub
pop
sub
or
test
insb
roll
pop
je
push
loope
xchg
fimuls
jmp
sub
out
mov
or
fbstp
sub
lret
fcoms
orb
mov
add
nop
cmp
je
fsubs
repnz
negb
ljmp
jbe
cld
xor
imul
and
rcrb
mov
pop
push
lds
insl
sarl
jns
adc
push
dec
nop
repnz
and
decl
pop
sub
cmp
dec
lock
push
ja
scas
mov
pop
mov
push
rdtsc
xchg
mov
sbb
std
jge
jl
test
cmp
and
insl
dec
xor
stc
push
or
mov
cmp
xchg
into
fadd
fldenv
pop
dec
mov
xchg
and
andb
push
loop
fs
xchg
popf
lods
test
xchg
pop
repnz
mov
popf
xchg
adc
or
inc
inc
xchg
fucom
dec
inc
mov
inc
dec
fcomip
js
cmp
mov
nop
cmp
loop
out
rclb
mov
mov
in
xor
mov
inc
data16
lcall
or
shrl
sub
insl
aad
push
div
lea
scas
fstp
imul
jmp
stc
nop
jmp
or
scas
cmp
mov
int
sbbb
notl
sub
push
mov
int
mov
andb
cld
or
xchg
xor
push
scas
inc
test
cmpsl
xchg
pop
int3
add
mov
ds
push
cmp
push
dec
test
pop
fisubrl
sub
repz
sub
in
jne
fsubrl
shrl
shlb
icebp
sub
mov
lcall
out
fsubrp
and
stos
mov
scas
mov
cmp
fchs
incb
int3
fcoml
gs
inc
mov
insb
xchg
xchg
sbbl
outsb
imul
mov
cltd
jb
decl
aad
int
scas
jge
xchg
scas
iret
dec
loop
cmp
sub
jne
das
or
or
notl
cli
push
cs
insb
sti
hlt
xor
dec
lds
dec
mov
sub
pop
div
adc
int
sti
jne
repnz
das
stc
nop
popa
popl
out
mov
and
std
xchg
lcall
xchg
shr
mov
popf
cmp
dec
cmpsl
push
popf
in
mov
mov
ret
stos
outsl
add
mov
xchg
es
and
lock
insl
inc
jecxz
fisubrs
cli
add
push
and
mov
incl
mov
and
mov
jae
push
out
cmp
in
fildll
jb
xor
lea
popf
js
adc
mov
gs
cli
stc
inc
pop
imul
jnp
mov
movsl
jbe
les
cwtl
jmp
jns
mov
pop
mov
stos
test
pop
jb
test
into
sbb
xor
cmp
xor
cmpsb
incb
push
xchg
fsqrt
push
pop
ja
loop
xchg
addr16
fisubl
ss
cmpsl
movsb
push
ss
ret
in
xor
mov
push
jno
jbe
jne
push
mov
stos
insl
rorl
rolb
out
sbb
and
add
negl
negb
fwait
dec
sahf
mov
sbb
movsl
mov
and
sub
adc
scas
mov
pop
cmp
pop
push
gs
adc
jne
call
jbe
and
and
inc
cmpsl
pop
int3
std
mov
hlt
js
scas
dec
inc
int
dec
scas
shll
lahf
fldt
cltd
test
jbe
lret
mov
decb
test
lock
cmpsb
xchg
jecxz
fadd
lahf
stos
repnz
jne
and
or
clc
inc
dec
mov
xchg
mov
adc
cs
out
xor
filds
test
push
jge
xor
inc
dec
incb
jbe
daa
sub
sub
mov
or
xlat
dec
or
inc
dec
sbb
xchg
sub
mov
sbb
pop
insb
stos
xor
divb
ss
push
sti
sbb
or
mov
mov
ficomps
arpl
xchg
js
mov
or
dec
into
daa
jbe
jecxz
jmp
data16
out
inc
sbb
call
sub
repz
xchg
or
xchg
fnstsw
push
int3
jne
xor
jge
pop
and
push
in
or
xor
push
nop
rclb
pushf
push
lcall
xchg
jo
mov
push
dec
pushf
adc
scas
push
mov
mov
sbb
cmp
mov
push
in
jle
fs
cmpsl
imul
jecxz
cs
xchg
js
add
inc
mov
shr
test
sbb
or
jmp
inc
xchg
rorl
cmpsl
cmp
pop
in
sbb
sub
loopne
cmc
mov
add
pushf
jae
lret
sbb
int3
lock
push
push
jmp
inc
cmp
leave
adc
popf
adc
test
cld
mov
xchg
mov
lods
and
ljmp
xor
add
fs
add
je
jmp
cs
jge
int3
mov
mov
imul
pop
xchg
arpl
test
test
imul
push
sub
lret
adc
fisttpll
inc
dec
mov
icebp
xchg
lret
sub
data16
push
outsl
divb
mov
mov
dec
cwtl
pop
test
mov
xchg
mov
fldcw
movsl
sub
dec
jecxz
adc
test
arpl
in
sbb
in
mov
iret
fcoms
mov
leave
pusha
dec
cld
pop
xchg
inc
outsl
adc
mov
mov
dec
mov
popf
lods
mov
mov
loop
cmp
adc
sub
add
sub
mov
nop
push
pushl
out
sti
xchg
and
inc
pop
das
jb
lods
sub
sbb
push
imul
hlt
fistpl
cs
xor
loopne
add
ret
adc
push
out
inc
adc
in
in
inc
or
lods
jne
movsl
inc
sbbl
inc
xor
sbb
imul
cwtl
pop
and
xlat
loope
xor
test
mov
mov
xchg
xchg
push
jnp
int3
mov
xlat
scas
cltd
adc
rcl
sub
fwait
notb
cmpsl
ror
sbb
jns
push
ret
add
les
call
stc
xchg
inc
push
fsubrs
sbb
add
sbb
mov
outsb
mov
add
fisubrl
xchg
iret
add
xor
insl
mov
mov
fistps
fidivrs
aam
js
cwtl
fisubrl
sub
mov
addr16
jl
inc
pop
jle
shll
push
jbe
and
test
popa
mov
adc
add
call
in
add
imul
mov
adc
loope
gs
insl
out
sbb
inc
mov
mov
jne
out
stos
xchg
pop
daa
nop
mov
addr16
cmp
push
lahf
xor
jle
sub
sbbl
jg
sub
pop
stos
ds
mov
or
xchg
jp
fst
inc
push
test
shll
cmp
xlat
mov
scas
cmp
xor
je
loop
inc
and
dec
or
outsl
cmp
pop
xor
pop
cmp
cmp
enter
jmp
arpl
cmp
scas
xlat
outsl
aam
nop
pop
paddq
and
xor
jbe
mov
mov
jo
add
xchg
sub
sbb
mov
jle
ljmp
sub
sbb
xor
mov
mov
push
pop
roll
bound
xchg
cmp
js
sti
push
mov
dec
xor
inc
jg
std
push
mov
push
xchg
aaa
push
das
cmp
add
push
lcall
push
inc
and
adcl
inc
das
cmp
repz
decl
repz
mov
xor
sub
mov
rcrb
fistpl
jecxz
aas
mov
lds
mov
xor
xlat
and
lock
jns
pop
push
xchg
arpl
shrl
push
les
mov
xchg
or
inc
sub
insl
pop
data16
jbe
lock
shrl
jno
mov
ds
test
sbb
xor
mov
jl
jo
push
mov
dec
xlat
repz
daa
sub
iret
jp
dec
mov
push
lods
or
xchg
mov
shll
xor
cli
jmp
out
stc
out
push
call
cld
adc
xchg
cs
jle
sub
adc
add
lea
mov
inc
pop
mov
out
stc
cmp
shll
pop
xchg
add
pushf
dec
add
icebp
sbb
insl
mov
adc
and
movsb
movb
push
push
imul
push
orb
pop
jp
inc
lods
jle
movsl
lcall
xor
pop
xor
test
add
cwtl
ret
dec
inc
ret
divl
out
jg
inc
nop
loopne
test
call
xor
push
ffree
sti
sbb
dec
push
mov
dec
or
insl
push
ljmp
adc
cltd
xor
xchg
jmp
test
xor
push
jo
sahf
xor
lea
add
fs
sbb
cmp
popf
dec
mov
inc
or
cmpsl
lcall
dec
negl
scas
or
jmp
iret
push
aas
mov
sbb
dec
test
cmc
lods
rcr
mov
stc
cmp
andb
push
mov
jl
xor
jp
imulb
inc
jge
scas
pop
iret
mov
mov
movsl
les
fs
mov
xchg
out
and
roll
add
and
mov
cs
add
hlt
scas
ret
fucomp
mov
push
sub
lcall
enter
ljmp
stos
add
fnstenv
mov
jne
mov
pop
lds
jge
ret
iret
pop
mov
add
add
mov
std
scas
es
fnstenv
dec
push
jp
imul
or
ret
rep
stc
push
add
int3
loopne
outsb
pusha
sbbb
dec
and
jle
xchg
inc
mov
sbb
push
inc
mov
scas
imul
push
repnz
jnp
leave
xchg
inc
cmp
mov
aas
call
ljmp
pop
not
hlt
and
in
aaa
divl
cmpsl
mov
pop
cmp
inc
dec
push
stc
dec
jmp
stc
cmp
ss
jb
outsl
cmpsb
xchg
mov
leave
xlat
sahf
clc
pop
leave
pop
out
mov
ret
jbe
rcr
jae
inc
cmp
and
inc
pop
out
xor
testl
push
add
sbb
hlt
dec
rorb
movsl
adc
xchg
xchg
andb
test
and
mov
and
call
mov
sbb
in
in
inc
popa
mov
in
movsb
xor
mov
jecxz
jge
mov
call
pop
or
inc
shrl
test
scas
mov
push
add
mov
fcomps
jmp
mov
in
mov
test
mov
cwtl
scas
adc
pop
mov
arpl
imul
sti
xor
es
dec
in
dec
out
sbb
and
adc
push
and
push
out
mov
mov
add
int
adc
lret
loop
fldt
add
push
outsb
add
mov
mov
jne
popa
sahf
mov
cmp
aaa
es
imul
dec
es
fidivs
dec
pusha
testl
push
fstpl
push
sbb
mov
mov
sub
das
pop
mov
ja
call
add
mov
mov
xchg
xchg
adc
sub
add
or
xchg
sub
add
push
pop
loope
pop
jmp
fsubs
cld
test
xor
lods
dec
aas
mov
xchg
cmp
xchg
mov
sti
jecxz
stos
insb
dec
mov
push
dec
fadds
in
aaa
mov
call
insl
sub
adc
mov
xchg
scas
and
adc
dec
cmp
ds
add
xor
pop
out
ljmp
fwait
mov
and
jne
adc
jnp
mov
or
and
pop
hlt
jns
ja
cmp
sti
add
jl
cmpsb
cmp
jge
fsts
test
jne
pop
sbb
test
cmp
mov
mov
cmc
and
test
fldl
mov
jmp
push
inc
ss
sbbl
add
jae
cli
pop
test
popf
ss
loope
xor
test
or
push
add
in
dec
pushf
adc
or
adcl
and
jae
pop
outsb
pop
cmp
movsl
sbb
and
cltd
mov
rol
jbe
out
pop
sbb
std
or
ss
inc
push
fimuls
adc
push
sbb
sbb
push
or
cmpsl
mov
adc
add
movsl
pop
mov
clc
test
call
sbb
push
jp
cmpsl
shrl
je
mov
test
adc
das
or
out
and
hlt
cmpsl
mov
pop
jb
jae
rolb
aaa
xor
dec
cwtl
fldl
dec
cmpsl
ret
or
into
in
stc
xchg
jle
or
daa
leave
adc
leave
cltd
or
divb
xor
fbld
cld
xor
jbe
cld
xchg
lret
out
aaa
pop
xchg
in
sbb
lret
repnz
push
jo
cmpb
ss
or
ret
cmp
ss
cmpsb
and
sahf
mov
adc
loope
push
adc
cltd
xor
mov
icebp
push
lret
add
mov
mov
inc
mov
adc
iret
push
add
or
xchg
les
add
shrl
mov
dec
mov
dec
mov
lea
imul
out
jae
inc
push
sub
setb
leave
pusha
inc
stos
jne
push
fs
fs
xor
cmp
mov
testb
xor
and
loope
rclb
pop
ret
or
jp
jp
lods
push
int
lea
and
fwait
sahf
ljmp
stos
dec
mov
int
add
test
jbe
or
push
scas
inc
dec
cmp
cmp
dec
mov
push
pusha
push
and
or
mov
mov
sub
int
pushf
lcall
xchg
std
lods
int3
push
push
mov
mov
xchg
fmuls
mulb
cmp
mov
mov
cmp
mov
sub
pop
sbb
aas
mov
loope
pop
stos
cmpsb
addr16
inc
dec
loopne
pop
dec
sbb
addr16
jnp
or
add
int
fldenv
or
cmp
dec
push
cld
stos
mov
aam
cmp
or
fildl
stc
add
xor
outsb
xchg
push
out
in
adc
in
ud2
sbb
dec
sti
dec
stc
jl
jge
xchg
int3
fisubrs
pop
add
pavgb
into
mov
xchg
mov
mov
addb
jl
xchg
pop
loopne
and
and
mov
add
test
bound
movsb
adcb
dec
fsubrs
dec
rolb
ljmp
leave
xchg
sub
sahf
adc
mov
inc
dec
test
into
fmul
shl
jne
adc
imul
mov
fwait
ret
imul
scas
mov
enter
fcomps
xchg
push
jl
cmp
jge
mov
jp
sti
jne
jg
sbb
pushf
mov
mov
dec
in
xchg
dec
repnz
cmc
mov
jmp
mov
jbe
leave
imul
xchg
out
or
sub
in
dec
sub
aaa
or
jecxz
mov
ds
nop
inc
ret
xlat
test
nop
pop
scas
mov
mov
cwtl
mov
mov
shlb
mov
xor
push
jge
out
push
xchg
int
xlat
test
mov
leave
pop
je
out
xchg
addr16
pop
aaa
pop
xor
sub
mov
jmp
xchg
cmp
mov
push
dec
xchg
xchg
push
scas
call
jmp
lods
fisubrs
sbbl
test
lret
push
push
outsl
mov
inc
add
call
pop
fildl
clc
popa
ds
xchg
xor
jle
mov
push
sub
rorb
lahf
ja
xor
loope
icebp
adc
push
clc
or
jge
stos
push
repz
rclb
in
add
scas
sti
push
dec
shll
call
fists
cltd
pop
popf
sbbl
cs
repz
xchg
ds
mov
je,pn
js
setae
loop
inc
fnstcw
fs
mov
pop
sbb
inc
imul
scas
aas
testb
pop
or
out
testl
cmp
loopne
cli
mov
cmpsb
cmp
mov
mov
inc
arpl
jge
or
pop
bound
or
movsb
xor
loope
xor
push
cmp
add
out
test
stos
stos
mov
add
dec
repz
push
stos
adc
rolb
mov
imul
or
or
xor
daa
sbb
pop
popa
orl
test
in
stc
pop
andb
insl
in
xchg
sub
mov
xor
or
pop
mov
mov
lahf
jae
mov
mov
xchg
fstpl
in
dec
pop
mov
mov
testl
js
xchg
push
daa
or
push
mov
outsb
xor
sub
push
int3
ds
cli
mov
insb
mov
mov
pop
repz
call
mov
dec
pop
dec
stos
or
andb
fwait
pop
jnp
cs
xor
adc
es
mov
lcall
lahf
push
jns
ds
sub
mov
and
insb
lcall
out
js
es
or
sub
lret
push
push
addr16
call
rorl
lahf
xorb
inc
outsl
xchg
lret
shrl
es
adc
sbb
popa
mov
sahf
jl
sahf
addr16
dec
cld
pop
ds
xchg
mov
pop
pop
out
jle
lds
test
jbe
jno
cmp
aam
mov
addr16
dec
push
fldl2e
orl
fists
jae
popf
lahf
cmp
mov
ljmp
pop
gs
and
repnz
into
sub
loop
rclb
mov
inc
xor
mov
push
add
ret
and
iret
jnp
idivl
mov
imul
jge
inc
sub
mov
sarl
fs
cli
fwait
imul
mov
gs
insb
gs
xchg
ss
arpl
mov
mov
cmpsb
les
fidivs
xor
mov
inc
mov
iret
or
mov
dec
mov
push
out
mov
cmpsl
mov
dec
rorb
arpl
inc
sbb
lahf
idiv
xchg
ja
sub
add
xor
cmp
cld
mov
sbb
cmpsl
lds
and
or
int3
and
xchg
cmpsl
scas
mov
push
fst
inc
and
cmp
data16
rcrl
insb
sub
sub
or
cmpsl
jae
push
sub
pop
addr16
dec
repz
lahf
pop
cltd
cltd
cmc
lret
cmpsl
stos
lret
cmp
jb
and
gs
dec
cwtl
mov
shl
jmp
dec
in
mov
insb
insb
inc
nop
add
hlt
jo
mov
mov
mov
add
sti
mov
xor
rclb
pop
sub
fsubl
xchg
jle
icebp
ja
stos
addr16
out
imul
lea
or
mov
jge
sbb
cwtl
jne
gs
mov
imul
or
pop
dec
pop
push
ljmp
sbb
jecxz
xor
mov
mov
adc
pop
js
lods
shr
sbb
xlat
stc
test
out
das
sbb
sub
jne
jo
and
loop
fucomi
sub
sbb
push
in
pushf
and
sbb
cli
sub
out
fnstenv
push
adc
mov
dec
adc
xchg
pop
loope
jb
xchg
sub
jno
xchg
dec
jb
aad
out
xor
ret
outsb
sub
cmpl
into
xchg
push
stos
ds
push
lcall
cwtl
or
mov
jns
enter
test
jp
add
in
fildll
mov
in
mov
mov
push
loop
sbb
mov
jl
xor
in
ds
lcall
scas
out
addr16
pop
leave
push
out
testb
out
inc
jmp
inc
adc
adc
mov
in
cmp
add
inc
mov
or
pop
cli
push
lret
fcmovb
scas
sarl
jne
pushf
mov
in
insb
xlat
sbb
sti
mov
push
cmp
xor
lock
mov
xchg
cmp
adc
scas
cs
jmp
adc
xchg
xchg
jb
hlt
ljmp
dec
bound
arpl
and
rcr
push
out
aas
or
adc
push
fisttpl
or
xlat
xor
aad
insb
imull
str
bnd
or
cmpsl
xchg
repnz
jg
ja
adc
pop
cmp
lahf
clc
cmpsl
sbb
pop
and
mov
daa
or
hlt
test
xor
pop
lods
sub
fidivrs
jge
ja
shrl
push
xor
sub
aad
imul
mov
icebp
pop
xchg
test
cli
jmp
add
cmp
adc
lcall
adc
jmp
push
xor
dec
cmp
dec
sub
popf
mov
xchg
addl
xor
pop
cld
mov
xor
inc
int
cmp
or
add
lods
and
pop
loope
loopne
mov
push
push
fistpll
rorb
mov
xchg
sub
fcmovu
and
sub
int
sti
jne
shlb
dec
dec
in
pop
jae
jl
notb
std
outsb
or
std
adc
jl
fs
mov
inc
inc
ljmp
lock
mov
std
mov
movsl
in
push
add
daa
and
fsubrl
dec
arpl
divl
ja
ss
push
sub
inc
ret
add
ljmp
shl
mov
adc
push
int
test
addr16
das
test
xor
test
loope
fwait
mov
push
xlat
inc
jle
mov
loopne
jae
or
insb
stc
inc
mov
jbe
imul
fiaddl
sub
fsubrs
or
push
imul
xchg
jl
mov
test
inc
xchg
pop
dec
in
cmp
sub
insb
add
les
call
xor
in
aaa
cmpsb
sub
daa
dec
loope
jae
jne
jno
push
xchg
dec
mov
mov
xchg
lock
lock
popa
scas
lods
test
jbe
repnz
notb
imul
xor
or
sbbb
mov
sti
dec
insb
ficomps
dec
fmull
mov
mov
adc
je
jbe
cwtl
pop
notb
into
int
jl
cmp
popf
sub
dec
cwtl
xchg
test
jo
sbb
ss
stos
push
mov
sahf
sarb
aam
adc
mov
fucomi
xor
sub
xor
sbb
sub
mov
pop
jns
pop
push
pop
testb
cmp
push
inc
and
arpl
lcall
cwtl
cmp
lock
ror
fisttpl
jp
jmp
jb
mov
icebp
cmp
pop
packssdw
mov
outsl
jb
hlt
gs
push
je
xchg
mov
mov
xlat
jo
pop
mov
xchg
pop
fprem
mov
outsb
fsubr
push
lods
add
lret
cltd
or
mov
adc
inc
or
inc
sub
cltd
xor
inc
mov
test
in
push
call
out
pop
push
push
stos
xor
cltd
test
jbe
inc
scas
xor
arpl
mov
fs
stos
and
jno
sbb
cli
sbb
vunpcklps
inc
in
sbb
rclb
add
lods
xor
loope
xchg
js
push
dec
push
jb
xor
aaa
inc
das
mov
das
jmp
inc
mov
inc
mov
or
jmp
mov
aad
sub
pop
out
popf
lret
xorb
lods
push
sbb
cmpsl
movsl
addr16
movsb
adc
dec
shll
adc
out
push
push
ljmp
fidivs
mov
rcll
das
cmp
lret
and
sahf
in
fs
xor
xor
lcall
js
pcmpeqb
xor
fdivrl
cmp
pop
stos
fsubs
lods
adc
fidivrs
xor
push
in
cmp
or
jecxz
aas
push
cs
jb
add
pop
dec
xchg
stos
cmpsl
adc
add
adc
or
pop
dec
aam
les
rcrl
mov
fldt
mov
insl
xor
mov
mov
mov
fwait
sbb
sbb
xchg
dec
xor
jg
fldenv
push
outsl
out
jbe
pop
stc
mov
mov
ret
fstps
pop
leave
andb
jmp
add
mov
rol
pop
cmp
jl
int
or
in
sbb
imul
mov
lock
test
push
rcrl
out
push
mov
jo
sub
repnz
sti
mov
pop
pop
sbb
out
dec
in
hlt
inc
and
adc
testb
adc
arpl
dec
dec
ficoml
pop
mov
ror
lock
out
pop
dec
inc
lcall
xor
addr16
inc
pop
and
out
xor
cmp
cli
lods
inc
sub
inc
jo
into
lret
pop
add
xchg
inc
or
mov
fisttpl
stos
and
fdiv
or
clc
cmp
xchg
add
sub
lahf
outsl
sub
pop
nop
mov
pop
and
dec
dec
leave
inc
lahf
cs
and
lcall
shrb
inc
fstps
dec
fildl
pusha
div
push
out
fstl
xchg
repnz
popf
cmp
enter
jmp
addr16
xor
test
fxch
sub
lea
lret
or
mov
push
clc
sahf
fisubs
mov
mov
dec
mov
and
pop
mov
out
imul
das
push
dec
subl
mov
add
xchg
out
std
xchg
sti
inc
fldcw
fwait
sti
push
or
addr16
movl
lcall
in
sahf
adcl
lds
andb
fsubr
mov
repz
push
mov
fnsave
push
jnp
shll
mov
and
fimull
scas
inc
loop
cmpsb
push
jmp
daa
icebp
ficomps
cmp
cltd
mov
scas
repz
cmp
outsb
std
xchg
ljmp
xlat
sub
aam
ds
adcb
mov
into
jge
jbe
int
lds
dec
out
repnz
test
jne
adc
inc
pop
jmp
push
push
call
xlat
jmp
test
mov
lret
mov
mov
pushf
sahf
push
jne
xchg
repnz
ds
ja
movsb
repnz
and
push
addr16
pop
inc
cs
ljmp
outsb
enter
imul
sbb
inc
push
stc
ffreep
sbb
nop
push
push
mov
dec
jp
fstps
xchg
insb
cmp
scas
xor
jmp
gs
into
fcmovu
ds
bound
test
dec
adc
aas
gs
sbb
les
hlt
push
int
insb
stos
sbbb
or
pop
lods
mov
dec
push
call
hlt
mov
adc
pop
sub
sub
insb
xchg
sub
outsb
in
dec
pop
icebp
mov
out
lea
add
orl
test
xor
sub
dec
pop
paddw
out
popf
mov
cvtpi2ps
inc
mov
pop
int3
pop
leave
pop
push
push
sbb
je
js
mov
decb
dec
and
sub
mov
xchg
or
movb
dec
pop
fbstp
popf
testb
adcb
test
cmpsl
out
mov
das
inc
stos
cwtl
hlt
push
lds
dec
imull
ds
add
dec
mov
sbb
les
psubusw
iret
sahf
xor
dec
pop
std
das
inc
popf
xlat
and
addr16
ficomps
mov
repnz
xchg
rcrb
fisubrs
lods
mov
int
into
mov
icebp
xor
ljmp
popf
add
cli
inc
in
icebp
cmp
dec
popa
jg
add
dec
mov
pop
mov
bound
sbb
scas
xchg
push
imul
das
xchg
into
lods
lret
add
sbb
rorb
enter
xchg
mov
cmp
pushf
sbb
xor
out
es
jnp
sahf
daa
mov
lcall
aaa
daa
jp
mov
popa
xor
and
push
pop
or
sbb
montmul
cmpsb
test
and
popw
lcall
lahf
arpl
pop
scas
or
scas
iret
push
data16
inc
cwtl
jae
pop
mov
or
cmp
cmp
test
outsb
clc
push
jl
fs
fdivs
xlat
push
lcall
fdivr
cmp
or
clc
add
das
bound
or
xchg
or
xchg
cmpsl
jnp
mov
call
test
mov
nop
pop
shll
cmp
jp,pn
in
jecxz
cs
sbb
jl
jnp
push
movsl
in
jle
sbb
or
stos
ds
fs
or
test
cld
xchg
jnp
adc
xor
popa
jbe
decl
dec
ror
pop
lret
or
imul
jp
stos
out
mov
mulb
sahf
sti
sbb
sub
repz
loope
dec
push
das
mov
push
js
fcomip
mov
ljmp
add
adcl
sbb
imul
dec
mov
dec
sbb
lods
imul
popf
mov
loope
daa
inc
stos
movsl
jl
xor
std
dec
cmp
push
mov
shlb
mov
and
adc
ds
andb
jge
pop
adc
cltd
das
mov
call
jecxz
cmc
sbb
jno
outsl
xor
xchg
push
jbe
sti
xor
test
jnp
xor
outsl
inc
fmulp
mov
pop
cmc
push
mov
xchg
add
and
jae
aam
scas
imul
jne
sub
add
jg
push
xor
add
stos
bound
cli
inc
or
mov
inc
into
jae
pop
adc
insb
push
andl
lods
scas
fbstp
ret
mov
fisttpl
cmp
fildll
orb
outsl
lret
mov
sbb
pop
lret
mov
mov
cmp
cmp
push
xorl
mov
inc
adc
inc
mov
xor
daa
mov
shrb
mov
clc
cmpsl
and
lret
and
xchg
jmp
aam
and
or
or
xor
push
mov
fldt
or
xorb
and
cld
outsl
pop
cmpsb
jnp
mov
inc
test
lock
dec
push
stos
clc
and
mov
lahf
and
mov
jns
sbb
pop
aad
mov
aad
pop
lods
adc
mov
insb
mov
sbb
int3
jnp
or
jecxz
sbb
sarl
imul
cmp
call
adc
inc
in
rcrl
arpl
rorl
mov
push
out
cltd
sub
outsl
inc
xchg
dec
inc
popa
mov
push
xchg
cld
adc
scas
adc
enter
adc
mov
outsb
cmc
mov
insb
fidivs
add
out
cmpl
cmp
xchg
sub
aas
inc
sbb
sbb
sti
push
mov
dec
scas
dec
in
pushf
aam
dec
add
xchg
mov
mov
and
call
pushf
and
pusha
aaa
and
pop
inc
repnz
aas
call
push
repnz
shl
in
sub
pop
cmpsb
jge
add
sahf
adc
xor
push
and
sub
mov
mov
adc
mov
cmp
aam
inc
int
jbe
and
test
fsubr
movsb
ret
scas
pop
test
add
jns
dec
test
jg
pop
add
hlt
xor
cltd
leave
jns
sti
mov
andb
jg
jne
or
out
xor
adc
ja
das
js
lods
in
add
lret
pusha
ljmp
cs
hlt
bound
push
call
xchg
jne
mov
lock
addb
mov
mov
sub
push
out
sti
test
mov
popf
xor
push
jge
repnz
sahf
fidivs
repz
add
ss
in
movsb
jnp
add
jns
and
jno
cld
or
in
lret
mov
cwtl
mov
sbb
jle
bnd
and
add
mov
mull
mov
ficomps
les
clc
popa
push
or
xchg
mov
repnz
iret
pop
mov
cmp
inc
fdivrs
fistpl
loop
jbe
or
stos
ja
xor
mov
push
lahf
decl
sub
push
xchg
insl
sbb
repz
movsl
cmp
sbb
mov
in
mov
push
imul
adc
nop
add
stos
ficompl
fwait
repz
cld
jp
mov
repz
cltd
fdivrs
sbb
outsb
cmpsb
loop
sub
add
icebp
nop
daa
adc
scas
jb
mov
pop
and
add
testl
negl
jo
fsubrl
mov
fmull
outsb
sub
aad
mov
shrb
inc
inc
testb
ficoml
ss
adc
cltd
stos
inc
int
into
bound
or
idivl
pop
into
mov
add
mov
insb
push
pop
pop
cli
rorl
movsl
bound
pop
movsl
out
lods
dec
lcall
sbb
mov
add
in
add
push
jno
jno
stos
mov
leave
fwait
jne
clc
bound
dec
gs
lret
pop
insl
jb
pop
mov
jecxz
test
push
fst
stos
inc
push
xlat
cmp
mov
dec
std
les
jbe
xchg
mov
sub
add
mov
fdivrl
clc
push
xor
mov
arpl
mov
andl
inc
dec
filds
cmpsl
fs
sub
inc
ret
gs
jbe
arpl
shrl
push
mov
stos
inc
adc
mov
and
or
imul
xchg
data16
popf
jp
icebp
gs
mov
ljmp
mov
pop
mov
addb
dec
gs
cmpsl
xlat
add
aas
mov
fdivs
int
adc
mov
shr
push
dec
xchg
mov
mov
inc
lock
es
shll
jp
xchg
jmp
sbb
stos
xchg
fbstp
inc
movsb
add
movsb
or
xchg
enter
int
orb
enter
pop
pushf
repz
out
xor
int
andl
push
mov
mov
or
pop
and
rorl
jl
stc
dec
dec
pop
or
scas
add
sbb
cmp
jae
enter
xchg
out
ss
adc
add
mov
xchg
xor
test
jb
les
cmc
stos
xchg
leave
rcrl
or
jmp
std
mov
cmp
mov
daa
and
xor
xor
test
stc
xchg
push
mov
mov
mov
inc
in
inc
xlat
sbb
dec
dec
sub
pop
add
js
xchg
sub
pop
inc
out
lods
lock
out
ds
movsb
add
cmp
mov
jae
stc
pop
fiaddl
cltd
stos
stc
xchg
and
dec
jbe,pt
stos
roll
and
push
push
fisubrl
sub
mov
fsubl
icebp
sbb
vorps
xor
xchg
mov
into
and
js
ficoms
push
sbb
pop
cmp
popf
scas
cmp
mov
fmull
movsb
cmp
fidivs
stos
insb
ret
int3
testl
dec
fdivl
add
mov
or
fildll
test
lock
lret
test
jbe
icebp
adc
shr
adc
jp
insb
adc
aad
stc
movb
dec
negb
xchg
insl
cmpsb
fdivp
push
pop
adc
mov
movsl
leave
out
inc
leave
inc
lods
and
xchg
pop
cmp
loope
addr16
mov
xor
repnz
cmp
stc
out
mov
push
inc
xor
mov
mov
adc
lods
js
cmp
loop
sub
push
xorb
je
into
pusha
movsl
xchg
dec
in
out
xchg
mov
or
daa
inc
dec
fbstp
ret
das
jecxz
xor
mov
xchg
loope
mov
cltd
addl
in
pop
sahf
inc
push
xchg
mov
mov
jle
test
movsl
pushf
pushf
push
dec
mov
adc
pop
sahf
mov
dec
pop
test
push
or
fimull
dec
jnp
sub
sub
iret
je
in
test
into
xor
lcall
rol
out
add
xor
push
imul
cmp
push
sbb
mov
jnp
mov
lret
mov
shrb
cmpsl
mov
xchg
jecxz
inc
cmpsb
mov
jge
orb
call
outsl
mov
scas
outsl
into
inc
push
in
jge
das
out
sahf
je
ret
mov
rclb
jmp
sbb
out
cmp
xor
and
mov
cmpsl
loop
dec
adc
nop
xor
mov
mov
mov
mov
pop
jo
jecxz
lds
xorb
movb
dec
gs
lods
push
aam
and
repz
and
jns
mov
push
jmp
pop
cltd
out
jnp
outsl
js
in
out
or
in
xchg
mov
stos
jnp
push
mov
sti
in
push
mov
pop
mov
mov
mov
sbb
push
inc
mov
cmp
gs
xchg
xadd
adc
lret
lods
in
adc
mov
call
push
jl
mov
xlat
cwtl
lock
lret
pop
push
ljmp
mov
and
movsb
ja
test
mov
xchg
sub
lret
lds
mov
sti
push
lret
roll
dec
add
jecxz
inc
xchg
popa
adc
lret
jno
sti
jae
sub
sub
add
mov
data16
mov
pop
cmp
rorb
adc
cmpl
in
sets
xchg
adc
mov
stc
hlt
pop
jmp
sbb
nop
in
shl
push
sbb
shlb
push
xchg
rol
iret
int
movsl
aaa
jle
jnp
aad
inc
dec
fistpll
pop
cmp
clc
push
call
daa
mov
adc
fldenv
cs
mov
stos
jmp
mov
push
mov
popf
clc
push
insl
movsb
mov
aad
jb
cs
mov
test
xchg
pop
out
push
outsb
sub
jp
mov
adc
mov
xor
out
cmp
xchg
xor
sbb
mov
pusha
sbb
jmp
sti
sbb
xor
std
movsb
fildll
mov
cld
lcall
in
lods
es
fidivl
xor
stc
or
jbe
mov
sbb
inc
int
add
and
lds
cmp
cmp
ds
outsb
lcall
cmp
jno
je
jg
out
cld
into
xchg
pop
aaa
mov
inc
gs
dec
aaa
call
mov
nop
imul
mov
lea
xchg
loopne
arpl
push
mov
mov
ja
add
rcll
cmp
inc
cwtl
ljmp
sbbb
mov
sbb
dec
xchg
cs
push
daa
inc
popa
cmpsl
js
mov
adc
inc
inc
jp
xchg
int3
xor
xchg
ret
loopne
fwait
and
aad
ficomps
mov
int3
iret
lahf
aad
inc
fstl
pop
adc
shlb
cwtl
mov
fidivrl
rorl
sbb
clc
andb
xchg
mov
xor
in
mov
sbb
xchg
mov
lret
pushf
icebp
and
cltd
pop
inc
push
and
stos
jne
adc
repz
imul
int
inc
xchg
jb
push
mov
mov
int3
adc
or
ds
mov
add
cld
mov
cmpsb
in
in
fidivs
xchg
test
outsb
inc
cmp
ret
nop
push
ss
fs
nop
pop
or
stc
cmc
jge
jecxz
icebp
mov
int3
dec
setle
aaa
cmpsb
mov
ljmp
sub
jb
iret
push
mov
push
inc
push
sahf
adc
arpl
mov
mov
test
jge
adc
or
das
out
mov
in
ret
sbb
dec
xchg
cmp
ret
pop
and
icebp
inc
gs
add
mov
pop
cmpsl
cmc
sahf
dec
xchg
dec
pop
cwtl
lods
dec
pop
sarb
sbb
push
call
cwtl
jmp
outsl
push
mov
cmc
lods
or
dec
mov
mov
dec
and
mov
dec
js
cld
ret
mov
je
loopne
pop
xchg
and
mov
mov
cmp
scas
ja
mov
xor
fists
scas
dec
in
jae
xchg
mov
bound
cmp
jp
loope
mov
ja
pushl
das
push
shrl
adc
and
pop
lock
sub
pop
sbb
jne
cmp
cmpsb
add
inc
dec
adc
fidivs
fsubs
ficomps
push
sub
ret
fisttpl
inc
push
push
jb
push
and
or
sbbl
cmp
popl
pop
inc
pop
fcomps
ljmp
mov
js
lock
xor
pop
and
sub
fwait
adc
data16
mov
lods
xor
inc
lock
or
rcrl
ret
fidivl
inc
lock
pop
ljmp
mov
push
inc
sub
cli
pop
or
mov
lret
lret
call
mov
les
and
xchg
dec
sbb
dec
cmp
mov
inc
inc
inc
pop
int3
and
and
popa
jp
push
xlat
mov
lret
fs
loopne
adcb
testb
push
adc
adc
test
addr16
popf
xchg
test
dec
xchg
ljmp
inc
test
test
xor
or
aad
mov
or
outsl
mov
push
fsubrp
in
mov
adcl
fisubrl
outsb
rcrl
fldenv
mov
inc
mov
push
mov
aaa
es
mov
push
add
jp
pop
lods
lods
adc
int3
leave
scas
cmp
sbb
mov
pushf
mov
add
in
cmpsb
cmp
sbb
rcl
pusha
int
in
out
aaa
int3
insb
notb
inc
xlat
inc
outsl
cmp
gs
outsb
pop
ret
mov
pop
addb
pop
fsubrs
inc
jns
ret
jmp
or
jmp
mov
jo
inc
push
data16
or
ss
cli
mov
push
mov
pop
out
fmul
orl
xchg
mov
js
repz
mov
xchg
cmp
push
inc
pusha
push
jg
pop
jne
loopne
add
mov
jb
and
add
push
xchg
mov
xchg
es
xor
icebp
push
ja
push
jle
inc
fidivrl
roll
pop
inc
sbb
in
mov
sarl
imul
out
mov
jno
out
sub
leave
enter
sti
lahf
dec
and
inc
stc
out
popf
fdivl
dec
jle
mov
mov
enter
les
sbbl
mov
sbb
fcmove
add
mov
stos
popa
add
dec
push
push
adc
xchg
in
push
int
add
mov
movsl
jge
mov
push
fndisi(8087
lahf
or
sahf
xor
mov
and
pop
fidivrl
pop
ret
subb
mov
mov
popf
shrl
ljmp
movsb
xchg
cmpsb
cmp
xchg
fsubs
push
jns
sbbl
inc
push
cmp
enter
dec
mov
pop
fisttps
int
jns
pop
xchg
stc
lcall
sahf
and
xchg
iret
enterw
push
test
or
mov
xchg
mov
or
in
jle
dec
pop
pop
push
xchg
imul
sbb
call
inc
sub
mov
js
ljmp
push
in
pop
movsb
adcl
movsb
imul
inc
sti
mov
cltd
stc
push
repz
rcrb
pop
out
mov
jbe
sub
xchg
dec
fdiv
dec
bound
jne
xchg
out
jno
out
or
mov
int3
dec
jl
jns
dec
cs
adc
test
jb
data16
clc
jecxz
andb
aad
mov
ds
insl
lret
fldenv
cmc
cwtl
enter
lahf
add
sub
jns
es
pop
and
inc
fstpt
xlat
fcmovb
ret
icebp
dec
mov
jg
addr16
clc
push
not
push
sub
in
mov
pop
mov
mov
pop
or
cmp
cmp
pop
pop
jo
jo
insb
sub
sbb
ror
cmpsb
add
mov
sbb
add
adc
fidivs
orb
fdivs
and
sti
push
popa
ljmp
mov
insb
adc
sub
stos
push
cwtl
enter
mov
dec
les
mov
into
fisubrl
mov
fnsave
xchg
jle
push
jne
sub
cmpsl
mov
push
push
mov
mov
movsl
mov
push
loopne
add
cmp
stos
cmp
shrl
sahf
lea
xchg
mov
mov
push
out
inc
xchg
jg,pn
fistpl
fnstenv
test
cmp
dec
sub
je
cld
pop
xor
and
mov
and
sbb
ret
int3
pop
cmc
scas
insb
add
push
in
push
mov
test
jae
and
cmpsb
push
cs
outsb
cmc
aam
or
or
sub
test
sub
jnp
fwait
cmpsl
xor
jno
jmp
cmc
inc
pop
pusha
dec
push
push
icebp
and
jo
clc
mov
lds
outsb
ret
leave
and
mov
inc
push
xor
bswap
add
add
add
je
icebp
dec
or
mov
shll
cld
cmpsl
stc
mov
popf
std
cmpsl
stos
inc
lret
mov
jmp
pop
sbb
dec
cmp
cmp
jmp
add
adc
ja
testl
repz
call
or
xor
mov
push
in
push
mov
testb
jb
xorb
or
xchg
xor
shrb
cs
mov
lock
or
cmpsl
jo
loope
pop
scas
mov
ror
test
cmp
mov
sub
jmp
ficoml
cmp
dec
in
pop
outsb
add
scas
inc
mov
or
test
das
jbe
inc
xchg
mov
xor
cmp
stc
nop
repz
shll
gs
pop
jge
mov
out
pop
push
jecxz
pushf
testl
incl
xorb
test
jg
stc
nop
fldl
pop
xor
inc
call
jbe
mov
mov
push
or
pop
adc
adc
sbb
xor
js
repz
out
test
push
sub
aaa
push
and
fdivrl
push
dec
mov
dec
lock
or
push
add
in
add
push
test
loope
pop
cmp
inc
xor
sub
adc
hlt
xor
ja
dec
lcall
push
xor
add
or
loop
sub
and
dec
add
or
lret
lcall
das
jmp
jbe
mov
data16
cmpsb
inc
and
push
inc
or
xor
ret
mov
jno
jg
fldt
incl
jb
daa
jmp
wbinvd
js
test
inc
popf
mov
sti
dec
pushw
stos
add
sub
lret
dec
dec
loop
mov
cmpsl
mov
aad
hlt
les
dec
cli
sub
sub
or
dec
mov
mov
lea
repnz
jne
dec
xchg
ret
sub
jp
lahf
fs
dec
stos
stos
mov
sbb
and
cmp
repnz
pop
add
cmp
jmp
repz
negb
ss
aam
repnz
sub
sub
mov
pop
ja
add
pushf
mov
fwait
add
xchg
and
div
aaa
mov
imul
sbb
sub
inc
push
add
ficompl
fnsave
xor
popf
lods
pop
jg
xchg
sahf
and
in
clc
sbbb
sbb
rcll
pop
mov
push
pop
xchg
ss
repnz
and
rcll
xchg
sub
and
sbb
sub
adc
dec
fdiv
xchg
repz
xchg
loop
dec
loopne
mov
jg
shrb
hlt
mov
repnz
fisubrs
into
xchg
pop
add
add
mov
cmp
jo
scas
inc
cmpsl
testl
mov
push
sbb
mov
mov
loopne
cmp
subb
cmc
mov
mov
fs
das
mov
lock
cmp
stc
dec
roll
loope
gs
pop
push
xchg
push
notb
mov
sub
out
lods
lret
int
jp
popf
lods
ret
xlat
lods
adcl
jne
lcall
in
mov
cs
push
mov
xlat
mov
mov
jbe
add
mov
mov
fsubs
pop
push
je
xchg
repnz
mov
sbb
mov
fwait
gs
repnz
xchg
aaa
cld
not
popf
cmp
sahf
pop
hlt
pop
cmpsb
add
ljmp
cli
hlt
add
mov
inc
int3
add
dec
in
xor
in
push
shrl
int
fbld
ja
jne
arpl
int
ret
leave
jno
pop
and
ds
pop
lcall
imul
push
mov
ret
aad
cmp
mov
or
mov
pop
dec
sti
pop
fptan
cs
mov
ret
test
lds
sub
add
mov
lahf
and
and
sbbl
pop
mov
jge
dec
sbbb
les
fldcw
pop
sub
idivb
stos
and
inc
subl
fdivrp
mov
mov
adc
mov
jp
and
mov
add
sbb
push
mov
jne
add
xor
pop
ljmp
cmovle
pop
cmc
adcb
adc
push
repnz
pop
ret
sbb
pop
sbb
iret
fbld
mov
lock
xchg
and
cmp
pop
ss
push
test
mov
or
push
mov
in
loop
leave
clc
dec
in
add
insb
repnz
testb
loop
xchg
aam
sub
insb
push
lcall
push
daa
movb
arpl
mov
cli
mov
mov
insl
mov
fcomip
dec
sub
or
mov
mov
push
push
mov
mov
notb
imul
fbld
push
cld
fcmovne
out
xor
mov
scas
push
cmpsb
fwait
iret
add
mov
rorl
or
mov
mov
push
call
push
mov
xchg
jmp
xor
and
test
loop
xor
mov
inc
mov
and
mov
push
arpl
cs
xor
mov
jl
lods
xchg
addr16
sti
rcll
mov
adc
dec
and
push
es
lock
lods
and
dec
push
movsb
testl
int3
jl
inc
outsb
push
fnstenv
scas
inc
fcmove
inc
testl
cmp
in
repnz
sub
repz
arpl
rol
add
cli
mov
jnp
adc
jle
jo
jmp
dec
jge
jmp
negb
xchg
dec
rolb
loope
icebp
xchg
cmp
mov
faddl
mov
imul
sbb
aas
push
lret
mov
xor
daa
sub
dec
insl
and
push
push
pop
sbb
aad
aas
mov
mov
inc
sub
sbb
jae
movsbl
mov
jmp
or
popa
sar
divb
imul
sbb
aaa
jnp
in
mov
inc
pop
lcall
movsl
mov
sub
cs
mov
dec
daa
addb
mov
fistpll
test
xchg
sub
mov
lret
mov
cwtl
fneni(8087
cmpsb
sub
push
js
ret
sbb
sar
and
cmpsb
mov
mov
std
enter
mov
dec
xchg
jl
shrl
seta
xchg
mov
jecxz
lds
ja
mov
mov
and
mov
sub
lods
out
jle
adc
lea
stos
cmpsb
fbstp
inc
dec
loopne
jns
mov
rcll
dec
rorb
daa
lods
lods
pop
data16
idivl
fisttpll
lcall
mov
leave
pusha
dec
scas
xor
out
push
sbb
sbb
in
inc
fidivl
sbb
pop
bound
xchg
mov
add
scas
cli
addr16
sahf
jmp
xor
in
mov
fisttpll
sbb
or
xchg
sbb
jo
imul
xchg
adc
cwtl
push
popf
les
dec
add
mov
outsb
cmp
pop
cli
push
mov
ret
sarl
in
inc
mov
sbb
jbe
or
cmp
sub
mov
sbb
sub
scas
cmp
je
ret
sub
dec
lock
mov
flds
lods
mov
mov
lret
icebp
mov
push
jge
jmp
je
rol
loopne
repnz
insb
adc
pop
test
movsb
cmpsl
ljmp
ja
test
repz
int
and
gs
ljmp
cmp
aam
fidivl
add
lds
pop
push
mov
sub
nop
cltd
fwait
mov
inc
rolb
mov
xor
or
mov
adc
inc
cmpsl
jne
dec
lret
ss
mov
jns
loop
dec
inc
and
sbb
xor
jl
cmp
inc
cmp
mov
xor
fstps
xorb
xor
in
addl
mov
mov
ds
cmpsl
mov
repz
dec
push
outsb
stc
dec
daa
or
arpl
data16
das
sahf
in
test
test
std
xchg
fxam
and
or
push
mov
push
xchg
cmp
mov
pop
cmc
fdivrl
mov
xor
jae
fdivl
in
testb
lahf
nop
inc
xchg
mov
pop
push
das
mov
mov
ret
icebp
xchg
pop
arpl
js
cmpsl
xorb
leave
arpl
or
sub
mov
jle
push
ja
adc
cmc
mov
adc
fisubl
fnstenv
pop
jo
int
push
sti
sub
push
mov
pop
and
push
aas
pop
cmc
inc
movsb
pop
out
aad
test
jmp
pop
push
cmp
inc
cmpsl
cmpsl
dec
loope
inc
test
scas
cwtl
cmp
xor
enter
leave
cmp
sbb
pop
sub
movsl
test
loopne,pn
mov
jnp
sbb
push
stos
xchg
push
loopne
fs
cmp
inc
xchg
jmp
arpl
mov
jbe
andl
stos
outsb
nop
ds
sub
pushf
jg
mov
cltd
shlb
data16
ficoms
cmovae
cmpsl
or
xchg
push
jge
idivl
mov
sbbb
xor
add
pushf
scas
insb
dec
in
mov
cwtl
xchg
testb
sub
scas
or
and
lret
and
dec
decb
iret
icebp
and
fcmove
or
xor
mov
mov
cmpl
cltd
aad
push
pop
cmp
mov
outsb
add
mov
mov
xor
imul
jp
mov
scas
push
int
pusha
cmp
jmp
mov
aas
sub
fiadds
mov
dec
iret
outsl
outsb
mov
in
repz
pop
insb
add
shrl
jo
icebp
loope
out
cmpsb
add
mov
movsl
sub
into
inc
xchg
gs
mov
outsb
cmpsb
fidivl
test
mov
cli
mov
imul
int
mov
ljmp
cmp
mov
jl
lret
loope
jecxz
xor
movsb
aam
sbb
shr
prefetcht1
cwtl
cmp
mov
xor
mov
inc
jp
cli
and
xchg
fwait
cwtl
shrl
xor
dec
cwtl
or
xchg
adc
lcall
jno
and
cltd
mov
lahf
ss
fidivrs
inc
mov
fistpll
cmp
xor
movsl
sub
fldcw
stos
mov
jb
push
movsb
sbb
xlat
xor
jbe
sahf
pop
je
test
xchg
cmpsb
and
or
fcompl
pop
dec
rcrl
dec
loop
lret
pop
call
jb
pop
notb
test
repz
insl
ja,pt
or
push
add
inc
in
mov
mov
aas
into
push
jno
sub
jg
lea
dec
ret
pushf
push
decl
xchg
xchg
mov
push
clc
cmp
xor
setl
inc
mov
add
xchg
mov
xlat
or
cli
sbb
jge
scas
inc
scas
mov
shlb
leave
pop
ss
addr16
add
int3
pop
mov
push
pop
je
mov
sub
pop
add
mov
fisubrs
cmp
popf
adc
iret
push
mov
jnp
inc
movsb
pop
fstps
push
adc
int3
sub
popa
mov
ja
out
xor
mov
imul
and
xchg
ja
into
xchg
clc
sbb
fbld
test
or
rcrl
pushf
das
jns
imul
xchg
mov
stc
ss
nopl
mov
sub
adc
in
test
xor
in
jecxz
out
pop
loopne
enter
xchg
call
push
jmp
sub
or
push
int
push
test
out
sbb
cld
adc
rolb
in
lea
mov
inc
bound
fdivl
cmp
sti
xchg
pop
addr16
xchg
fwait
xlat
xchg
mov
mov
push
les
jb
sarl
dec
pop
ljmp
fs
mov
outsl
adc
mov
jle
sbbl
adc
test
lock
and
push
imul
data16
rol
roll
pop
gs
stos
or
out
push
dec
hlt
sbb
mov
out
mov
aam
mov
ret
fcoms
adc
add
push
loopne
sahf
and
lods
scas
mov
xor
or
xchg
xor
nop
jmp
lahf
adc
pop
inc
shlb
daa
int3
rorl
dec
sub
mov
sti
add
xor
sub
pop
inc
inc
idiv
jno
inc
mov
dec
ja
cwtl
sub
scas
add
fldt
pop
das
imul
fsubr
push
in
xchg
pop
dec
inc
dec
cmp
data16
mov
cmpsb
movsb
outsl
push
shrl
cmp
repz
cmpsl
jno
ja
repz
mov
jle
mov
mov
rcrb
inc
pop
add
loop
fcomps
jne
arpl
ret
fbstp
shll
and
fisubs
fcoml
mov
dec
or
xchg
sbb
psubq
lea
jmp
push
mov
daa
inc
inc
imul
popf
jne
cs
imul
xchg
inc
insb
mov
lock
int
sbb
jp
test
cld
imul
stc
or
xchg
mov
je
xchg
pop
pop
and
aam
mov
jns
test
adc
adc
adc
jmp
xor
out
push
sti
sbb
sub
xchg
mov
xchg
scas
inc
mov
xchg
sub
int
dec
jo
mov
dec
fidivs
fstl
adc
xor
and
pop
cmp
cmpsb
pusha
or
push
insl
xchg
mov
lea
hlt
pop
and
sbb
pop
adc
pop
sahf
xor
lcall
pop
jb
arpl
pop
pop
pop
mov
push
ss
sbb
push
std
outsl
out
cld
mov
insl
or
add
cli
push
inc
outsl
scas
mov
stos
lea
fisubrs
mov
dec
mov
shl
jnp
adc
movsb
cmp
sar
stc
addr16
adc
sbb
loope
adc
std
fadds
mov
pop
push
pop
lcall
inc
bound
or
jns
scas
sub
aam
inc
pop
push
decb
cmpsb
xchg
js
leave
into
fisttpl
mov
iret
fcom
jno
gs
stos
fwait
testl
ficomps
rol
pop
xor
dec
cltd
mov
xchg
sub
aam
fsub
inc
mov
mov
xchg
jbe
adc
ret
and
out
push
js
push
test
mov
jae
popa
stc
bound
xchg
mov
adc
sub
xor
pop
dec
mov
out
lcall
xchg
mov
push
loop
push
and
imul
mov
in
jle
stos
ret
add
ja
push
mov
faddl
sbbl
pop
out
cmpsb
inc
sbb
js
ret
push
test
incl
sbb
xchg
mov
cmpsl
jo
xlat
push
lods
lret
cli
push
mov
shrb
or
fwait
cmc
fcmovnb
setne
mov
push
fs
xchg
insb
adc
and
xchg
xor
aad
jns
cmp
and
and
pop
push
pop
mov
js
int3
std
lea
mov
pusha
push
jp
mov
mov
test
xor
sub
popa
cld
ljmp
cli
in
cmp
pushw
andb
push
push
jo
popa
xor
sbb
jmp
jg
or
inc
or
mov
je
adcb
dec
or
lods
dec
lock
sub
xor
sbb
dec
sub
and
shl
addr16
js
stc
mov
frstor
cmp
xchg
ror
sbb
pushl
gs
and
into
jecxz
mov
shlb
xchg
testl
and
fcoms
in
std
mov
xlat
cmp
hlt
xchg
push
ficomps
into
daa
mov
gs
es
shrl
repnz
into
fildll
fsubrp
aam
xchg
in
mov
lret
incl
andl
shll
adc
lcall
loopne
dec
xchg
loope
cmp
dec
adc
jb
out
inc
add
or
adc
hlt
xor
jnp
scas
enter
iret
mov
or
insl
mov
insb
jno
push
xor
xor
push
jo
imul
adc
repz
inc
and
ret
mov
in
cwtl
mov
fucomp
cli
in
sbb
popl
add
jmp
xchg
sbb
xor
fs
cmp
sbb
cmp
mov
sbb
cmp
leave
int3
shlb
xchg
sbb
movsl
lret
es
pop
test
data16
pop
sahf
stc
adc
pop
xchg
and
fstp
out
adc
pop
bound
push
mov
add
sbb
cwtl
mov
repnz
push
movsl
inc
addb
and
sub
pusha
iret
data16
inc
in
movsl
enter
dec
cs
sub
xchg
mov
addb
jbe
mov
jae
rolb
loopne
add
add
or
imul
and
and
fisubs
ficomps
jle
or
in
and
mov
xor
and
lods
lods
ljmp
test
pop
sub
pop
js
fwait
mov
push
push
jae
cmpsl
loope
jnp
pushf
xchg
cmpsb
push
or
lahf
es
scas
cmp
jmp
or
dec
out
or
xchg
imul
push
add
pop
ja
push
scas
inc
dec
sub
or
ljmp
xchg
inc
hlt
mov
adc
repz
adc
add
mov
add
xchg
aas
xchg
inc
fcmovnb
dec
mov
add
ds
in
das
sub
movsl
cs
rolb
subb
mov
xor
int
fxch
aad
add
push
lock
mov
bound
in
insl
aaa
mov
popf
dec
dec
xchg
jge
pop
hlt
ret
or
and
ja
push
pop
mov
cmp
mov
xchg
or
sub
or
and
and
mov
es
jge
fcoms
push
mov
xorl
or
mov
pusha
in
aad
test
inc
fwait
and
sarl
decb
xchg
xchg
div
je
jl
inc
pop
dec
mov
out
pop
add
jnp
out
arpl
popf
mov
lock
sbb
push
mov
flds
mov
jecxz
xchg
and
lds
sub
ficompl
test
mov
lds
les
jno
int
in
xor
adc
ret
popa
addr16
sub
inc
jae
inc
mov
jno
das
pop
mov
ret
hlt
add
rolb
or
shlb
cmp
movsl
shl
sub
jae
insb
push
mov
addb
pop
aas
subw
add
fst
out
pop
xchg
lds
ds
jge
aam
test
or
or
jne
sub
divb
in
jno
push
loop
neg
aad
mov
sbbb
mov
sbb
mov
daa
outsb
loopne
je
mov
jb
cmpsl
pop
jg
fs
cmp
pop
jmp
jae
push
mov
xchg
mov
je
or
into
or
cli
dec
scas
adc
rcrb
cmp
pop
xor
push
jp
aad
adc
lcall
pop
scas
shll
mov
es
pusha
fcoms
fistl
gs
imul
scas
jo
inc
icebp
into
sub
or
jnp
mov
adc
or
repnz
shrb
fcoml
sbb
push
push
xchg
inc
aad
add
push
fists
fiadds
test
sub
sbb
mov
popf
sub
imul
lret
sub
bound
ret
shrb
dec
sbb
inc
popa
sahf
fdivrp
push
cmpsl
jae
sahf
popa
adc
or
loop
cli
mov
sub
push
dec
imull
jecxz
dec
adc
sbb
loope
fs
xchg
push
loopne
mov
inc
pop
pop
dec
adc
push
imul
inc
icebp
adc
inc
and
ds
loope,pt
sbb
outsb
lds
add
pop
xor
out
xor
stos
adc
adc
mov
out
in
and
mov
imul
stos
adc
ss
inc
repnz
orl
sub
movsb
popa
cmp
mov
push
sub
mov
dec
sbb
sub
std
es
out
lds
cmp
mov
imul
es
testb
mov
mov
mov
arpl
mov
xchg
xor
adc
fsubrs
mov
inc
dec
sbb
mov
daa
or
out
cmp
gs
mov
cmpl
mov
cmp
mov
iret
push
mov
jp
mov
xchg
sbb
dec
mull
test
lret
cmp
insb
aaa
or
loop
subb
mov
sub
test
daa
or
xchg
fildll
out
and
jbe
mov
fsubs
mov
xlat
mov
test
repz
fcom
push
xchg
mov
fisubs
jbe
rorb
movsl
mov
in
cmp
push
sub
jecxz
and
mov
iret
mov
push
mov
sbbb
stc
sbb
mov
test
cmpl
mov
or
xor
mov
adc
jl
fsubrl
sbb
and
mov
int3
idivl
pop
and
xor
imul
inc
push
and
jecxz
pop
mov
ret
or
fstpl
es
jae
out
mov
xorb
mov
test
add
mov
jb
insl
xor
push
xchg
xchg
push
add
mov
push
add
xor
push
cltd
push
icebp
out
pop
in
pop
jns
rorb
add
es
pusha
jb
push
mov
push
mov
stc
popf
mov
push
fldenv
add
mov
jne
pop
loopne
xchg
push
dec
sub
fmull
insl
cmp
xor
stos
or
shll
sub
lods
mov
sarl
pop
int3
bound
xchg
stos
dec
dec
xchg
mov
push
mov
or
mov
popa
inc
mov
lock
dec
pop
ljmp
ss
rcl
ficoms
mov
loopne
jo
sarb
inc
mov
xchg
dec
pusha
fidivl
rolb
out
or
cmpsl
add
push
add
std
fiaddl
inc
loopne
and
movsb
pop
jo
lods
inc
aas
inc
push
inc
xor
ret
in
cmp
push
loop
pop
push
dec
aaa
stc
clc
shrb
mov
and
fcmovnu
ljmp
cmc
mov
rcl
dec
add
imul
icebp
xchg
and
push
mov
push
ss
je
imul
sbb
dec
xchg
or
adc
xchg
add
loope
dec
sbb
push
daa
mov
xlat
decb
jp
pop
mov
pop
loope
shrl
pop
inc
cwtl
cmp
int3
sub
cmp
popf
ja
jecxz
xlat
or
bound
mov
pop
inc
shr
addl
loopne
movsw
lcall
mov
jns
xor
cld
push
scas
inc
mov
cmp
daa
jle
outsl
nop
inc
mov
dec
negb
pop
xor
jge
cmpsb
cltd
inc
scas
inc
enter
popa
inc
fsubs
push
pop
testb
pop
pop
jno
iret
inc
pop
pop
sbb
add
push
inc
data16
stc
fsub
jp
push
pop
icebp
or
cmpl
fsubl
std
cmp
add
mov
sbb
jo
stos
fidivs
sahf
icebp
imul
push
cmp
pop
xlat
mov
test
imul
sarl
shlb
inc
data16
add
xor
jp
cmp
add
add
mov
sti
cmp
leave
or
sbb
fdivl
xlat
fisubl
shll
xor
dec
in
push
jbe
add
jg
jo
jmp
mov
mov
cmp
sahf
and
push
jns
lea
inc
adc
movsb
daa
bound
sbb
ds
mov
mov
pop
xchg
mov
lods
leave
pop
cmpsl
ss
ljmp
aas
hlt
adcl
hlt
pop
ss
mov
xchg
sub
mov
enter
xor
mov
ss
out
jns
xchg
pop
lock
vpsadbw
stos
or
cli
push
fsubp
xchg
cmp
gs
in
pop
js
test
out
xor
mov
push
scas
mov
scas
inc
mov
push
dec
outsb
jl
push
xor
test
or
imul
shl
hlt
jle
popf
pop
in
mov
inc
loope
jmp
and
sbb
outsb
rcr
push
int3
push
in
std
and
repz
mov
cmp
leave
xor
inc
mov
pop
imul
mov
adc
mov
and
mov
fs
out
push
repz
mov
dec
xor
je
js
lea
or
jl
in
xor
jo
je
jge
out
fldenv
addl
pop
dec
loop
fnstcw
es
or
iret
xor
pop
shrl
xorl
scas
notb
pop
dec
fwait
scas
dec
push
cld
fdivrs
insb
out
cmp
mov
dec
xlat
adc
shrb
aaa
into
cld
or
stos
jb
push
je
inc
test
stc
hlt
out
xchg
adc
inc
aaa
ja
pop
jp
imul
cmp
pop
mov
lods
stos
push
sarl
mov
or
xor
les
lock
xchg
sbb
ds
jge
mov
lock
push
mov
imul
mov
sub
rcr
pop
sub
mov
dec
lea
mov
call
in
sti
jae
cmp
push
les
es
lods
aas
mov
bnd
pop
movsb
push
adc
inc
cmp
cmc
cmp
daa
pop
adc
leave
or
inc
repnz
pusha
adc
mov
pop
adc
imul
jp
mov
ror
ret
ret
xlat
cs
cltd
and
outsb
out
mov
xchg
lock
push
adc
and
sbb
lock
mov
fsubr
sbb
dec
push
mov
jmp
jnp
fwait
xor
pop
mov
pop
andb
out
xchg
mov
dec
rorl
in
add
pusha
jne
mov
incb
xchg
lds
in
roll
xor
sub
andb
sub
dec
popa
test
scas
movsl
pop
jbe
test
jo
std
bound
jae
adcb
scas
or
aam
xor
jmp
std
je
cmp
mov
fcoms
or
in
inc
roll
ret
fnsave
add
xor
xchg
xor
sti
or
rcl
je,pn
sarb
pop
pop
xchg
cmp
sub
lds
fimull
subl
aaa
push
addb
pop
repz
sub
lds
addr16
sub
in
and
jp
inc
inc
ret
sub
push
fwait
sub
subb
xor
xchg
outsb
push
into
enter
lods
idivl
scas
sahf
lret
push
inc
inc
fsubr
ja
lahf
outsl
and
hlt
push
aam
pop
push
and
mov
data16
mov
and
imul
ret
cli
loopne
cmpsl
fists
mov
push
dec
arpl
xchg
mov
stos
fs
inc
repz
lret
pop
fisttps
cs
call
popf
and
mov
ljmp
adc
jae
cmp
and
shlb
or
or
add
push
cld
popa
xor
mov
enter
insl
int
push
mov
cltd
repz
xor
push
jb
or
inc
adc
adc
or
into
sti
add
pop
and
popf
mov
lahf
nop
daa
xchg
pop
loop
pop
mov
inc
jle
lea
add
shrl
and
test
incl
lahf
jo
push
mov
mov
in
and
dec
bound
xchg
jle
or
mov
add
insb
cmp
mov
sti
dec
in
mov
push
mov
insb
inc
pop
dec
xchg
mov
lock
xor
dec
and
add
iret
in
cmc
jnp
ret
cld
das
sbbl
or
sbb
push
cmp
incb
push
jb
push
mov
or
pusha
cwtl
fdivl
test
jmp
inc
xlat
jne
test
fwait
movsb
ds
mov
outsl
mov
shrl
cltd
dec
out
mov
imul
jmp
xchg
xchg
jne
push
mov
cmp
stc
xchg
cmp
lahf
sbb
aaa
jp
fldenv
jge
test
mov
iret
pop
out
addr16
inc
add
rcrl
lret
adc
test
lock
mov
gs
dec
inc
cmp
jl
add
lret
push
xchg
outsl
xchg
jle
mov
dec
stos
aas
loop
adc
dec
aaa
out
xor
jmp
ret
mov
cmp
dec
pop
inc
pop
in
and
and
out
aas
add
or
out
jne
dec
push
out
mov
mov
es
ret
sub
dec
push
movsb
jecxz
scas
nop
mov
fstpl
pushf
dec
int
in
outsb
iret
cmpsl
or
lret
and
dec
mov
dec
mov
out
aas
add
nop
pop
mov
ret
cmpsb
or
fwait
mov
shr
test
int3
in
lods
dec
rcrl
into
das
cwtl
or
scas
and
cmpsl
dec
mov
in
sarl
into
push
pop
fcoml
mov
pop
add
pop
xor
xchg
movb
lcall
int
loop
in
xchg
into
ror
push
js
pusha
mov
add
pushf
icebp
cmp
sbb
cli
shrl
ljmp
inc
pop
mov
divl
or
adc
pop
inc
add
out
aas
jge
push
outsb
sub
loope
mov
cmp
cmp
imul
aas
adc
xchg
mov
inc
scas
lea
mov
jmp
mov
lods
into
popa
clc
dec
gs
cmp
adc
into
jnp
daa
aad
jmp
pop
inc
rcrb
in
pop
push
mov
cmp
roll
lods
popf
int3
popf
stos
std
leave
push
jae
sti
pop
je
or
sbb
sub
and
cmp
rcl
push
pop
in
pop
ss
pop
sahf
jp
notl
addb
cs
push
pop
lret
pop
scas
lds
dec
cmp
repnz
inc
in
or
mov
lods
inc
cmp
int
cmc
std
adc
or
sbb
adc
repnz
pop
sub
push
adc
mov
notl
cmp
aad
mov
fidivrs
fistps
xchg
dec
andl
mov
int3
and
lds
and
pop
fldcw
inc
adc
imul
or
inc
xor
cmpsl
mov
mov
nop
sub
dec
push
mov
out
test
sti
loope
jl
add
ret
je
pop
imul
cwtl
and
xchg
mov
call
aam
das
mov
push
movsl
xor
stos
mov
lret
inc
pushl
push
jno
sub
in
std
push
sub
jmp
push
xor
addb
mov
in
xchg
mov
fnstsw
fnsave
pushf
or
xchg
fisubs
mov
insb
inc
inc
or
imul
adc
sbb
adc
sti
inc
lds
insl
add
xchg
dec
in
outsl
mov
mov
ret
lds
mov
inc
dec
mov
leave
mov
fistpll
inc
lock
xor
jo
inc
faddl
mov
inc
xchg
jle
leave
mov
inc
fdivrl
arpl
leave
cltd
addb
xchg
inc
divb
lret
inc
fisttpll
out
push
dec
adc
ret
dec
or
enter
lock
inc
mov
adc
shrl
pop
mov
fs
lods
pop
fadds
aam
pusha
mov
mov
shlb
adc
xlat
daa
mov
add
add
or
or
xor
xchg
shl
stos
sbb
push
ret
fistl
cmpb
in
mov
fcmovu
pop
cs
mov
and
inc
popa
pop
inc
jo
ret
sub
insb
divb
sahf
mov
fbstp
test
or
add
test
pop
push
mov
call
cltd
sarl
push
or
inc
sub
sbb
ds
dec
mov
aam
adc
sbbb
xlat
lds
and
lcall
out
cltd
push
inc
pop
mov
loope
mov
mull
jecxz
dec
mov
pushf
cpuid
dec
jnp
in
ljmp
sub
rorb
adc
push
test
std
lods
pop
mov
out
mov
cmpsl
ds
pop
sbb
pop
rcr
fldcw
jno
inc
test
jg
inc
mov
xchg
jmp
jnp
es
push
jne
mov
lods
add
test
and
out
inc
lock
shlb
cmp
xlat
dec
insb
js
add
push
pop
dec
icebp
int
mov
jne
pop
outsb
in
test
mov
adc
xchg
mov
dec
mov
sbb
and
mov
in
ret
pusha
ja
je
xchg
mov
into
pusha
arpl
xchg
out
dec
adc
repz
rcrb
mov
movsl
inc
xchg
xchg
mov
ret
sbb
mov
mov
incl
jmp
gs
pop
loope
cld
sbb
pushf
ret
push
add
out
decl
jns
xor
lret
fwait
inc
aaa
push
fcmovbe
scas
cwtl
das
dec
jne
push
daa
jo
and
loop
xchg
push
cmpl
outsb
pop
push
out
dec
dec
imulb
loope
pop
sbb
dec
sub
jmp
dec
jne
xchg
cs
sahf
adc
mov
ja
push
stos
adc
lods
inc
lret
dec
out
sub
adc
popf
bound
fnstenv
sbb
sbb
push
pop
and
mov
pop
jbe
les
and
jnp
sahf
dec
pop
js
dec
out
imul
pop
outsl
fidivs
repnz
loop
mov
sub
xchg
cmp
les
push
sub
add
icebp
push
pop
cs
or
adc
orb
pop
dec
jo
andb
pop
pop
ret
pushf
and
jmp
push
rol
and
aad
sub
jp
les
mov
push
ficompl
mov
jmp
cwtl
sbb
sarb
and
sbb
add
dec
pop
dec
lock
add
xchg
adc
cmpsb
inc
add
testb
or
pushf
cmpsb
les
mov
mov
dec
sbb
clc
out
fldt
push
inc
jp
or
sub
pop
insb
lcall
jne
outsl
out
cmp
stos
jg
push
inc
leave
mov
mov
inc
les
and
push
xor
cmpsl
jns
call
push
mov
dec
and
jge
shr
sub
lret
jo
sub
sub
flds
push
mov
int3
movsb
fisubrl
movsb
insb
xchg
push
test
test
xlat
mov
pop
sub
jns
xchg
mov
xor
outsb
jg
leave
lret
or
xchg
popa
mov
gs
push
xchg
jns
xor
mov
pop
mov
jge
xor
cmp
sub
rcr
push
or
je
cwtl
and
xor
pop
pop
outsl
xchg
xchg
mov
cmpsl
movsl
imul
cwtl
inc
popf
repz
and
mov
orl
out
add
shll
loope
pop
scas
or
pop
fwait
loope
jge
cli
lret
mov
xor
pop
fwait
call
sarl
pop
test
pop
or
daa
and
xchg
cs
int
mov
push
and
push
inc
xor
xchg
vpcmov
push
enter
adcb
faddl
jecxz
dec
scas
inc
divl
cmpsb
aas
dec
movsb
call
subl
xor
xchg
push
push
lea
lret
xor
mov
cmp
movsl
mov
or
mov
dec
xor
gs
sti
fidivrl
dec
test
ret
test
shl
pop
hlt
lods
cmp
pop
rorb
inc
fiaddl
shrl
push
mov
fstpt
pop
adc
mov
sub
stc
imul
and
insl
add
stos
and
cmp
jno
xor
xchg
dec
and
cmp
pop
mov
in
push
adc
jae
ds
mov
int3
mov
xchg
sub
sbb
jb
and
adc
ljmp
aad
jl
mov
sbb
or
rcrl
cs
jne
dec
aam
sbb
shll
inc
ficoml
mov
bound
xor
adc
insl
sub
and
mov
dec
xchg
pop
jl
subl
lods
dec
lahf
xchg
sbb
cltd
mov
int
jecxz
and
out
popa
and
lods
sbb
ret
sbb
mov
xchg
jo
add
jp
je
lods
dec
push
subl
pop
addb
cmp
jns
xor
leave
mov
pop
push
xor
in
inc
fldt
pusha
mov
mov
lret
mull
popf
test
jmp
je
mov
ret
push
ja
pop
popa
mov
push
int
cmp
jne
pop
cmpsb
decb
jo
inc
and
cmc
shl
jns
push
pop
cmpl
ja
mov
pop
dec
pop
lea
mov
mov
push
ss
pop
sub
fildl
jg
in
add
lahf
sbb
jns
inc
fwait
mov
mov
or
fldl
inc
xchg
popa
mov
mov
xchg
es
sub
lods
mov
fildll
mov
decl
xor
dec
dec
push
cld
or
loope
outsb
mov
cmc
inc
add
lods
dec
and
or
and
es
mov
mov
add
hlt
dec
imul
lods
jle
jns
fstpl
sbb
das
jle
ljmp
imul
pop
pop
lea
add
jns
shrl
mov
mov
insb
out
dec
push
push
or
push
xor
shrb
push
adc
popa
bound
cmpsb
push
div
jne
jno
pop
cltd
dec
sub
jno
arpl
es
dec
xchg
adc
push
mov
add
sbb
pop
cmpsb
lea
xchg
add
ret
repz
adc
rcpps
mov
stc
scas
out
stos
xlat
jmp
dec
sti
mov
push
lods
test
push
out
mov
aad
repnz
enter
fiadds
cmpsb
shll
jmp
aam
popf
cmpsl
sub
mov
cmp
nop
add
pop
das
dec
cli
arpl
adcb
xchg
mov
dec
mov
iret
call
cmp
or
mov
jb
push
movsb
pop
adc
mov
popa
clc
jae
scas
inc
push
xchg
pop
dec
or
sub
pop
pop
bound
inc
int3
push
sub
test
int3
xor
xor
ljmp
jmp
mov
imul
das
lea
pop
add
lcall
dec
call
lcall
mov
and
mov
stc
nop
mov
nop
and
and
xchg
add
test
lret
jl
jge
cmp
inc
sbb
cmp
dec
sbb
pop
aaa
aam
xor
and
cmpsb
push
testb
enter
add
xchg
mov
pop
xor
or
clc
adc
sti
icebp
sub
mov
mov
xorl
pop
movsb
scas
jecxz
jnp
enter
scas
jl
scas
mov
mov
test
nop
mov
cmpsl
xchg
sbb
push
xor
xchg
ret
sub
int
dec
sahf
repz
cwtl
add
in
pusha
gs
adc
mov
inc
out
dec
mov
imul
std
je
xchg
mov
add
ficomps
call
mov
test
push
sub
adc
dec
sub
xor
dec
or
test
and
or
mov
xor
int3
popa
sub
outsl
pusha
push
dec
mov
rclb
inc
pop
enter
js
dec
xor
mov
pop
or
pop
mov
xchg
mov
cmp
pop
jno
rcrl
add
xchg
jle
gs
movl
mov
xchg
call
outsl
inc
pop
xor
maxps
adc
in
pop
xor
pop
jnp
jl
in
push
dec
enter
push
ret
rorb
jmp
out
mov
mov
pushf
iret
pop
aaa
mov
push
lods
xchg
addr16
lds
outsb
aam
dec
ss
or
xchg
ror
mov
cmp
xchg
dec
pop
fptan
adc
jno
lcall
js
test
out
insb
inc
pop
ret
mov
push
adc
inc
xor
cld
shl
rorl
inc
add
int3
nop
and
sub
cmp
jecxz
xchg
outsl
sbb
xchg
push
lods
test
scas
mov
addr16
adcb
xor
cltd
jl
dec
daa
mov
jo
sti
pop
andl
add
lock
out
lahf
stos
mov
arpl
loop
push
xchg
hlt
xchg
lock
nop
add
outsl
sub
cmp
es
or
and
int3
inc
fs
xor
imul
and
inc
fadds
inc
fcmovnb
icebp
lods
pop
imul
mov
lret
pop
test
push
ficomps
dec
je
jl
shll
shlb
add
in
xchg
aam
in
adc
or
sbb
fsubrs
fisttpll
pop
xor
jle
cmp
mov
inc
into
add
lock
ljmp
rorl
dec
test
shrl
test
and
push
jmp
aaa
arpl
in
dec
rcl
fisttpl
das
jb
push
mov
sbb
or
mov
mov
adc
jb
cmpsl
mov
je
or
jge
cli
ljmp
or
movsb
imul
push
sbb
cmp
out
cld
hlt
jo
aaa
icebp
add
fildl
lret
lock
mov
sub
loopne
nop
add
ljmp
push
inc
es
insb
mov
shr
jno
push
mov
sub
cld
adc
mov
bound
fwait
out
ficompl
or
adc
mov
fldl
lret
mov
iret
cmp
out
enter
test
aas
pop
push
popa
je
adc
cs
insb
fisubl
loope
pusha
jl
mov
inc
in
adc
add
imul
cltd
add
lret
pop
sub
ret
hlt
imul
adc
insl
lret
in
lahf
mov
mov
call
inc
push
out
xchg
xchg
movsb
test
jmp
mov
sub
outsl
nop
std
leave
out
jb
imul
mov
pop
mov
push
pop
hlt
cli
out
ss
push
testl
enter
sarb
dec
scas
mov
cltd
arpl
mov
and
mov
xor
in
and
daa
jp
lds
push
pop
jmp
outsl
jbe
mov
out
pop
pop
loop
aam
jbe
dec
mov
jne
xor
popa
lcall
xor
imul
add
xchg
push
repnz
inc
in
mov
or
push
imul
add
mov
mov
sbb
jbe
and
rolb
cmp
popa
xchg
loop
jne
mov
pushf
add
cmpsb
cmp
cmp
repnz
call
hlt
stos
and
pop
or
add
inc
shl
xchg
add
push
xor
pop
pop
lods
jo
aaa
iret
cmp
jge
outsl
ror
int
or
jne
adc
add
pushl
xor
xor
cmpsb
xchg
jmp
cli
jae
cs
scas
dec
loop,pt
pusha
test
adc
adc
fs
test
iret
enter
loopne
inc
push
pusha
cs
scas
stos
repnz
mov
andl
inc
mov
jo
mov
xchg
dec
mov
fs
lock
add
in
cmpsb
data16
adc
jno
ljmp
das
out
test
push
loop
mov
sub
or
push
or
push
loopne
cli
movsb
jge
pusha
sarl
popf
in
in
negl
or
fwait
cmpsl
ds
mov
fsubrl
into
iret
das
icebp
mov
stc
sti
rcrb
xchg
mov
les
push
cmp
mov
jge
add
fstpl
push
ss
adc
mov
divl
cmp
cmpb
pop
pop
xchg
fwait
aaa
lods
xchg
xor
adc
pop
arpl
cli
mov
adc
dec
xchg
xchg
je
mov
cmp
and
in
inc
lahf
inc
adc
notb
scas
cmp
pop
pusha
ja
sbb
sub
ljmp
cmp
fildl
mov
or
and
cmc
adc
xor
dec
ss
lcall
lcall
and
jnp
sar
sbb
inc
xor
cmp
mov
jo
inc
cmp
inc
popa
stos
in
iret
fnstenv
dec
ljmp
inc
movsb
rcll
add
mov
mov
lods
push
or
xor
push
fstpt
leave
test
mov
and
stos
pop
cwtl
les
psrlq
inc
lcall
pop
in
pushf
sbbl
insl
je
push
sbb
mov
sti
sarb
push
in
adc
push
int3
or
loopne
dec
xchg
or
data16
mov
into
nop
shrb
lods
adc
icebp
cmp
sub
ret
outsl
lret
movsl
in
pusha
out
xchg
lock
mov
rclb
pop
repz
movsb
jp
pusha
stos
jo
popf
sub
popf
clc
stc
sbb
pop
sahf
pop
add
pop
insl
popa
stos
scas
xor
jp
inc
repz
outsl
xchg
add
in
in
clc
into
orb
adc
popa
sub
shlb
xor
sub
leave
push
aas
inc
ficompl
and
or
incb
aam
lods
mov
arpl
mov
dec
or
xchg
jne
pop
mov
adc
adcl
xchg
popf
test
into
jp
push
je
dec
and
lahf
cmpsl
ret
mov
mov
test
fcomps
or
fisubrl
cwtl
loopne
cmpl
jl
jmp
cli
jb
out
decl
shl
dec
dec
test
add
idiv
cmp
hlt
sti
xchg
mov
xor
dec
ret
sbb
int
xor
test
add
push
leave
push
xchg
push
jge
icebp
scas
je
scas
movsl
iret
ja
stc
pop
lods
inc
cmp
adc
stos
das
fcmovne
mov
and
aam
xor
push
call
mov
and
rcr
and
add
mov
sti
ljmp
fs
lcall
sbb
aam
rorl
add
repz
call
lret
push
fdivrs
or
adc
mov
lret
inc
pop
mov
stc
cmpsb
mov
bound
insl
sbb
and
mov
mov
aaa
sub
dec
or
xchg
mov
mov
out
xor
fcmovnbe
pop
pushf
ret
aam
add
and
and
cltd
mov
cmpsl
je
mov
push
loop
outsl
sub
insb
cmpsl
add
mov
mov
jne
lods
mov
jb
and
jp
sub
jle
or
jno
pop
mov
inc
imul
jb
dec
pop
add
mov
mov
call
add
out
push
std
mov
aas
pusha
fcoms
sbb
std
cmpsl
ds
and
vpmulhw
pop
scas
and
into
in
faddl
fxch
cmpsb
aam
add
incl
cmp
xor
popf
lock
push
xor
fwait
cmpsl
repz
adcb
jb
rorl
adc
sbb
jb
mov
mov
mov
lea
mov
mov
cli
int3
mov
into
xchg
xor
xchg
xchg
sbb
sbb
cmp
lret
inc
inc
addr16
shlb
fs
mov
mov
idivb
shl
xchg
mov
rcrb
call
cmpsb
mov
sti
test
add
jbe
in
sbb
sub
lock
mov
push
xor
push
in
in
push
lock
add
inc
popa
xor
sub
testl
rorb
add
popf
mov
inc
jmp
bound
cwtl
jo
push
lcall
sub
scas
repnz
jno,pt
or
loop
xor
mov
fnstsw
ds
adc
jae
lret
sbb
add
clc
sbb
addr16
lock
pushf
dec
mov
jecxz
daa
loopne
dec
popf
subl
ljmp
test
sbb
movsb
call
shlb
xchg
cmp
movsb
clc
jae
push
add
scas
pop
sub
xor
inc
dec
push
add
ds
daa
out
inc
popa
push
outsb
mov
stos
inc
or
mov
pop
fwait
jne
xchg
fisubrs
insl
jnp
sub
xor
push
lret
notb
in
es
inc
and
mov
dec
cmc
mov
jge
and
insb
sub
test
mov
xor
out
stos
push
or
cmp
xor
nop
pop
iret
dec
movsl
mov
popl
call
shll
xor
hlt
lret
cmp
xchg
fsubrp
lcall
push
mov
or
les
mov
mov
loopne
clc
es
xor
mov
jg
or
repnz
into
test
mov
out
push
aam
cmp
ret
loope
xor
mov
iret
mov
xor
add
sbb
mov
lret
mov
push
shlb
scas
xchg
repz
cmpsl
jno
mov
jg
pop
outsl
bound
clc
sahf
mov
shlb
movsb
sbbb
xor
lods
addr16
xchg
lds
pop
mov
lret
sub
mov
sbb
mov
movsl
pop
rcrb
out
or
push
jno
cmp
jae
dec
mov
lds
pop
jg
scas
cmpsb
les
aam
sub
ljmp
mov
mov
ret
stos
cmp
roll
mov
pop
pop
test
xchg
inc
lds
fs
rclb
mov
adc
mov
stc
push
inc
xor
inc
in
jbe
cmp
pop
push
jbe
pop
sahf
xor
sbb
or
or
mov
clc
aas
pop
dec
pop
mov
mov
mov
jno
xor
ds
jmp
dec
test
mov
scas
cli
or
adc
mov
mov
stc
mov
rcll
sahf
dec
pop
xchg
in
dec
shl
out
je
enter
cmpsl
sub
sti
dec
or
cli
loop
mov
int3
mov
shrl
ja
andb
movsl
dec
xchg
push
int3
pop
cmpsl
lret
mov
xchg
push
mov
jmp
stos
pop
or
stos
sti
adc
stc
rclb
lret
cmp
stc
roll
mov
inc
jecxz
popa
clc
stos
add
hlt
sub
add
and
inc
aad
pusha
rcrb
jl
mov
pop
rol
sbb
pop
jbe
popa
es
sbb
mov
stos
aam
xor
mov
stos
pop
movsb
cltd
test
xchg
pop
xor
test
push
add
jl
sti
shll
pusha
and
popf
cmc
repnz
sub
and
mov
mov
insl
push
mov
mov
ja
mov
mov
ret
sbb
and
pop
add
rcrl
add
mov
fisubl
xchg
ja
inc
jmp
mov
and
inc
repz
push
cs
jp
inc
jno
cltd
std
scas
inc
bound
lcall
jns
or
repnz
mov
pop
sbb
xor
xchg
pop
adc
adc
dec
negl
sub
mov
or
mov
call
mov
jbe
and
faddl
pcmpgtb
std
jno
scas
jecxz
stc
push
fstl
in
fcmovnu
pop
or
push
mov
insb
xor
ja
lods
push
mov
mov
mov
lds
and
fdivl
adc
cli
or
scas
mov
xor
xchg
or
lahf
icebp
jp
out
fisubrl
stc
mov
fsubr
add
sbb
rol
lods
adc
mov
mov
sbb
mov
stc
enter
aaa
mov
push
inc
fistps
xor
xor
ja
leave
sbb
jo
jbe
popw
xorl
fwait
and
mov
addr16
jp
jae
mov
sub
dec
mov
negb
xor
ficoml
jno
fbstp
add
addr16
sbb
jge
data16
leave
iret
lcall
jmp
sbb
push
nop
aas
add
jns
pusha
pop
jg
ljmp
inc
pop
loop
mov
pop
iret
xchg
or
scas
mov
sti
xchg
test
ja
mov
push
lods
dec
sub
xchg
pop
outsb
xor
ret
ret
out
xchg
aas
and
std
cltd
push
std
mov
out
clc
lret
nop
and
and
iret
push
lds
adc
fmul
into
pop
cli
je
in
add
jae
shrb
xchg
cwtl
pushf
arpl
lahf
stos
idivb
jo
clc
xor
ljmp
xor
mov
push
jmp
xor
jnp
sarl
ret
add
adc
andb
notb
jmp
into
nop
daa
shll
cmpsl
orb
mov
fnstcw
pusha
push
add
dec
test
mov
ret
pop
orb
xchg
add
mov
jae
push
ljmp
rolb
scas
cmpb
mov
pop
cmp
mov
pusha
push
pop
lock
sbb
ja
adc
push
ret
sub
insl
pop
jle
out
ret
sbb
decb
xchg
adc
inc
push
adc
test
jnp
or
cs
xor
lods
inc
cmpxchg
je
cmp
push
pop
mov
cmp
scas
inc
cwtl
fistps
or
jns,pn
pusha
jmp
daa
mov
fs
sub
mov
xlat
outsb
lods
imul
sets
mov
popa
ljmp
repz
mov
imul
lods
mov
fisubs
imul
jae
sub
out
lods
addr16
ficomps
cltd
xor
cmpsl
mov
aad
in
mul
mov
adc
mov
push
xchg
fsubrs
mov
mov
jbe
add
leave
xchg
call
out
test
xchg
xchg
mov
mov
in
sub
sbb
push
movsl
pop
cmp
fildll
sub
test
fimuls
mov
jg
sub
test
push
jg
mov
push
lea
adc
loopne
test
lret
add
mov
xchg
arpl
ja
push
test
mov
jb
sub
shlb
add
mov
test
rcrl
or
mov
flds
or
pop
out
xor
arpl
pop
push
jbe
test
sbb
insl
xor
lahf
push
lret
test
mov
das
lret
pop
xchg
push
lock
fwait
adc
mov
cmp
lcall
mov
pop
test
lock
pusha
dec
or
les
repz
xchg
mov
enter
fists
call
jbe
adc
fisttps
push
jp
stc
jbe
lahf
ss
jp
loopne
push
in
jle
push
in
push
test
outsl
out
pop
sub
pop
lock
lods
inc
jge
pop
scas
mov
adc
mov
add
jns
dec
out
jg
add
scas
mov
xchg
and
inc
jge
jne
mov
push
les
jo
in
push
lods
sbb
adc
push
ljmp
cmpsb
push
mov
dec
mov
xchg
sub
cmp
push
in
test
repz
les
ss
sub
sahf
pop
rclb
hlt
lret
fnstenv
sub
nop
pop
sub
mov
iret
out
dec
cmp
mov
jge
pop
iret
inc
rcl
outsb
add
adc
fdivrs
aad
sub
in
test
pushf
add
xlat
outsb
or
xchg
inc
pop
testb
fnsave
movhps
stos
inc
sbb
push
or
inc
fimuls
push
add
push
fadd
pop
adc
xchg
aaa
cs
fistps
pop
adc
pop
out
cli
add
pop
repz
loop
sti
adc
xor
stc
add
inc
frstor
push
adc
pushl
inc
and
adc
lret
add
push
cmp
arpl
jmp
push
stos
scas
inc
fimull
pop
out
cmp
cmp
or
push
stos
enter
lods
inc
cmp
out
in
jne
and
push
call
jle
mov
jmp
ljmp
jbe
push
popf
cmp
cmpsb
cmp
jbe
add
inc
fsubr
sbb
xlat
jns
int3
arpl
mov
data16
add
mov
adc
jl
lods
pop
loopne
mov
or
mov
bound
lret
mov
cmp
fisubrs
outsb
pop
out
xchg
cmp
hlt
loopne
movsb
adc
test
push
add
jl
std
jmp
ds
or
fidivs
lock
fs
jge
sub
stos
inc
sub
cmp
imul
push
cmpsb
mov
mov
mov
cld
xchg
xor
stos
inc
jp,pn
shrl
addr16
xchg
push
xsha1
cmpsb
dec
fwait
sbb
leave
ret
repz
js
jbe
ret
pop
jo
sahf
xor
cmc
and
or
mov
cmc
or
cmp
cmp
fdivs
shrl
xchg
addr16
and
inc
push
loop
mov
jns
jb
xor
nop
push
mov
test
bound
jbe
xor
leave
mov
cli
adcl
dec
aad
movb
ret
pop
or
mov
dec
sbb
leave
dec
imul
or
leave
loopne
fdivl
adc
ja
or
adc
inc
fistpl
mov
push
inc
fildl
scas
inc
dec
flds
popf
or
sub
push
pop
xor
inc
sbb
aaa
push
fsts
mov
inc
and
dec
pop
loopne
icebp
adc
into
testl
mov
pop
loop
mov
leave
call
lds
loope
stc
adc
test
ja
lea
jnp
jecxz
xor
push
imul
test
jg
or
js
push
lods
mov
dec
loope
fnsave
es
cmc
outsb
inc
fstps
xchg
shr
outsl
pop
icebp
popf
xor
xchg
imul
cmp
mov
or
test
daa
mov
shrb
inc
mov
les
or
dec
xchg
test
insb
pop
lcall
lret
out
xor
movsl
addr16
mov
cmp
pushf
xor
mov
in
dec
in
add
jl
cmpsl
pop
push
sbb
cli
stos
nop
cmpsl
fcompl
mov
scas
sub
push
mov
rcrl
mulb
data16
dec
cli
mov
sub
push
popf
dec
push
sub
in
popf
mov
lret
push
es
mov
and
testb
mov
ficompl
add
pop
sbb
ds
insb
mov
mov
jmp
adc
cmpb
out
fwait
je
int
sbb
sbb
mov
std
jbe
pop
lock
xchg
xchg
leave
jp
xorb
mov
add
and
outsl
and
push
mov
xchg
mov
or
cs
lods
pop
cmp
mov
movsl
lahf
shll
ds
pop
mov
repz
nop
sub
les
pop
stos
pop
iret
xchg
jne
aas
test
xchg
mov
bound
cwtl
into
mov
decl
stos
jbe
fcompl
test
icebp
rorl
cltd
subl
xlat
sbbl
cmp
loopne
mov
into
cwtl
orb
movsb
xchg
les
negl
push
cltd
addr16
aad
or
pop
nop
nop
pop
scas
in
xor
fs
sub
test
pushaw
cwtl
loop
add
rorl
cltd
jne
and
js
cmp
push
lret
data16
pop
jae
xor
jbe
mov
mov
adc
jle
movsl
cmp
xor
xlat
pusha
in
sub
sub
js
iret
cmp
outsb
lods
fsts
xchg
push
or
mov
rclb
mov
xchg
and
sbb
pop
bound
push
dec
ljmp
pop
enter
xor
sbb
and
and
call
andl
add
push
cmp
jg
inc
out
sbb
inc
xlat
ljmp
in
pop
testb
push
adc
divl
enter
inc
ret
shrb
rorb
loop
mov
ret
fsub
jp
sbb
and
sarl
out
stos
gs
in
or
mov
paddd
in
xor
test
in
add
mov
rcll
negb
mov
add
cmp
in
aam
shl
fnsave
mov
scas
test
bound
mov
dec
mov
sub
lret
mov
pop
sti
jmp
out
sbb
repz
mov
or
pop
inc
xchg
jge
aad
das
movsl
cmp
mov
jo
jp
xchg
test
es
jno
mov
les
push
and
je
fisubrl
push
jl
push
test
jp
arpl
jl
dec
in
push
test
mov
push
mov
push
les
fcomps
test
aam
dec
jo
pop
adc
pop
aad
pop
pop
dec
rcrl
mov
mov
mov
xchg
and
lret
inc
jg
test
mov
es
mov
ret
jecxz
adc
int3
movl
dec
fwait
mov
pop
or
les
test
loope
test
stos
outsl
in
icebp
idivb
hlt
iret
insl
call
or
cmpsb
scas
imul
lods
jl
repnz
into
pop
or
rorb
push
jb
or
popa
stos
sub
fs
loop
pop
out
and
sub
repz
mov
mov
dec
notl
xchg
jnp
mov
fs
fisubrl
faddp
lret
fst
inc
fiaddl
lods
cwtl
arpl
mov
and
icebp
aad
movb
popa
rcl
insb
add
dec
sarb
or
sub
xor
testb
imul
jae
push
pminub
add
lahf
and
ret
repz
out
aam
mov
mov
outsb
mov
testb
lret
jmp
adc
in
xor
iret
leave
int
fcmovb
and
fldt
into
and
icebp
mov
or
inc
pop
lds
loopne
xchg
fsubl
fmull
out
nop
das
adc
mov
icebp
cs
xlat
pop
cmc
and
popa
cmp
inc
pusha
xlat
inc
push
dec
pop
push
js
cmpl
insl
cltd
push
jno
lret
dec
pusha
lcallw
nop
pop
and
push
in
cmp
in
cmpsb
imul
lea
or
dec
pop
push
lahf
lea
pop
mov
mov
cltd
imul
test
lea
adc
ret
pusha
mov
ds
into
dec
lds
or
repz
cld
sub
lret
jns
fistps
add
inc
shl
pop
out
fisttpll
stos
hlt
xor
and
subb
xchg
cmpsb
mov
adc
jnp
ret
xor
cmp
add
xchg
mov
insb
add
push
mov
orb
xchg
xchg
or
sbb
mov
mov
cmc
adcb
mov
push
or
jnp
je
call
mov
xor
cmpsb
pushf
push
add
insl
add
movsl
cmp
mov
ret
cmp
pop
jb
popa
faddp
es
sub
into
cmp
sub
fisttpl
xchg
push
sbb
nop
fildl
in
mov
cmp
cs
mov
iret
push
inc
scas
adcl
jmp
pop
jae
popl
or
inc
mov
pop
jg
repnz
lret
rcrl
xlat
and
lock
cs
or
scas
rolb
add
xor
cwtl
and
sbb
adc
mov
xorb
and
pop
jno
pop
cltd
fisttpll
push
mov
repz
mov
sub
cmp
insl
mov
cmp
testb
or
cmp
out
pop
adc
pop
popf
sbb
outsb
xlat
dec
pop
pop
call
inc
push
mov
dec
adc
pusha
gs
scas
inc
ret
push
lcall
and
adc
rorb
mov
pop
jae
xchg
js
xchg
xor
popa
cwtl
das
ss
out
xor
inc
mov
push
or
mov
sub
inc
sti
out
mov
fldl
stc
in
xchg
cmp
adc
jbe
mov
js
insb
shll
das
bsr
ret
fists
nop
xor
push
ljmp
sub
out
cmp
idivb
inc
into
fidivs
or
jne
inc
xchg
jp
add
js
cmp
pop
dec
rcrb
popa
mov
pop
sub
arpl
stc
jns
sub
test
getsec
icebp
xchg
sahf
pop
mov
in
out
outsl
data16
cmp
push
or
pusha
sub
push
cmpsb
repnz
push
aaa
jmp
lret
out
mov
push
or
lods
xchg
les
out
mov
into
inc
int3
xchg
loop
sbb
lea
mov
fcompl
or
mov
cs
push
cmc
mov
int3
cmp
lret
aas
icebp
cmp
loop
jae
ret
movsb
or
fwait
rcll
push
cld
movsl
ret
sbb
fcoml
mov
mov
lret
mov
mov
les
adc
xchg
mov
jne
pushl
jecxz
ret
call
movsl
xor
push
mov
mov
inc
pushf
mov
sbb
lcall
jbe
out
jnp
rorb
xlat
push
jns
jnp
enter
outsb
mov
fstpl
pop
mov
fstps
add
loop
test
add
icebp
mov
sub
pushf
bound
sbb
add
inc
sbb
arpl
inc
push
lret
sbb
aas
sub
dec
dec
mov
outsl
pop
push
aam
lea
sbb
cltd
jae
sti
xor
in
mov
sbb
popf
add
jmp
xchg
jmp
jnp
mov
pop
iret
ljmp
mov
pop
fisubs
int3
pop
push
movsb
lods
in
insl
ror
jmp
inc
mov
cli
leave
pop
lret
xchg
cs
and
mov
clc
pop
ljmp
or
push
cmp
mov
push
nop
pop
pusha
call
in
sbb
testb
out
imul
jle
push
imul
sub
inc
jnp
add
and
push
pop
cmp
push
call
push
inc
lret
jae
in
mov
cmc
shrb
adc
push
xchg
loop
in
push
add
xchg
jmp
or
mov
ficoms
fdivrp
movlps
lock
xchg
and
into
inc
mov
mov
fidivl
xchg
xchg
fcomps
data16
sub
mov
dec
cwtl
cmpsl
repnz
ljmp
hlt
in
mov
adc
leave
inc
xor
fiaddl
outsl
shll
ss
or
mov
stc
repz
je
inc
fcmovnb
inc
iret
xchg
insb
add
fidivrs
add
out
mov
arpl
xor
jge
sbb
pop
xchg
insb
cmp
mov
mov
lea
lcall
and
aaa
shlb
lods
das
loope
outsl
scas
je
xchg
stc
and
xor
inc
sbbb
sbb
in
sub
stos
xchg
cmp
jbe
xchg
gs
dec
mov
call
and
in
jne
cmp
mov
lcall
loopne
cmc
xlat
ret
shll
fadd
in
or
movsb
das
loopne
sbb
daa
cmpsl
stos
push
maskmovq
ficoml
scas
aam
cmc
faddp
push
loope
rorb
movsl
pop
adc
es
mov
push
int
mov
and
fsts
insl
out
and
test
fdivs
inc
xor
insl
mov
js
dec
inc
add
hlt
cltd
dec
xchg
mov
sub
xchg
test
jecxz
lock
fcompl
mov
in
and
aas
icebp
icebp
lods
dec
shl
sub
rcrb
stos
shlb
call
into
ja
cs
jns
mov
stc
rorl
aas
adc
fildll
sbb
ljmp
push
leave
cmp
jl
shrl
popf
sub
sub
fs
fcoml
mov
es
sub
xchg
jae
flds
sub
pop
xchg
stos
gs
push
jg
daa
rclb
arpl
imul
fwait
adcb
jns
ljmp
inc
repnz
fsts
mov
repnz
xor
dec
mov
add
pop
mov
icebp
nop
jnp
cwtl
repnz
fwait
add
adc
push
lcall
shlb
adc
mov
cmp
or
idiv
out
xor
push
xlat
push
test
adc
mov
add
in
or
pop
pop
pop
lods
pop
inc
mov
frstor
push
mov
fmuls
cld
jns
arpl
sbb
xchg
cs
pop
rorl
out
adc
pop
add
stc
imul
dec
ret
pop
or
cmp
lahf
mov
adc
int
mov
cmpl
sbb
addr16
mov
roll
orb
out
add
fsubl
sub
mov
nop
adc
orl
nop
loopne
ret
xchg
push
loope
pop
ss
test
jne
enter
mov
std
or
sar
loop
shl
jmp
push
mov
popf
sub
mov
ljmp
cmc
fidivs
into
sub
fcmove
test
and
jecxz
popf
ss
add
fwait
xchg
shr
xlat
sbb
jno
icebp
jnp
aam
jg
addr16
data16
dec
xchg
jns
repnz
mov
hlt
mov
jge
sbb
jne
pop
jo
dec
loope
xchg
test
repnz
mov
stos
popa
sub
aas
jmp
sbb
push
or
test
jnp
stc
ss
ja
je
cmp
push
out
ss
push
cmpsl
mov
xchg
stc
clc
mov
in
ja
add
cwtl
das
or
jl
scas
jnp
icebp
and
out
fistpl
dec
xchg
outsb
mov
popa
cmp
xor
push
or
xor
push
dec
fs
es
pop
mov
mov
aas
scas
cmp
lcall
jg
leave
push
das
mov
mov
es
movsb
bound
lcall
imul
js
lret
lret
sub
mov
inc
iret
add
cmp
push
and
leave
mov
push
cmp
dec
shl
test
inc
push
mov
or
xor
mov
outsl
enter
and
cmp
pop
jp
int3
out
inc
rol
and
ret
ret
movsl
fisttps
fcoms
inc
adc
xorb
mov
cld
inc
popf
mov
lea
ret
add
pop
repz
mov
jg
push
aaa
sti
push
lcall
pop
xchg
mov
pop
xchg
jno
sub
arpl
aaa
sub
inc
jae
pop
shll
dec
arpl
adc
jle
pushf
dec
cmp
imul
imul
xchg
push
xorl
xchg
sub
lock
add
cmp
xor
pop
loop
mov
ss
sbb
sti
es
xchg
push
add
cmp
fadds
test
and
pushf
mov
jo
sub
jnp
cmp
sub
mov
loopne
mov
fisubrl
movsl
movsl
xchg
cmpsb
mov
mov
fisubrs
mov
pushl
push
mov
dec
mov
negl
stos
out
mov
dec
mov
add
or
adcb
ss
fs
dec
out
arpl
inc
dec
mov
jge
pop
lds
jae
xchg
imulb
push
in
xlat
sub
add
mov
hlt
js
mov
iret
inc
movsb
jmp
mov
sbb
pop
rcrb
in
pusha
cmpsl
and
push
aam
cmc
xor
or
push
pop
movsl
aas
std
push
les
push
movl
push
mov
out
push
call
sub
jg
mov
mov
stos
gs
mov
add
xlat
pop
out
cs
lods
test
inc
mov
xacquire
and
fstl
pushw
rol
repz
xchg
adc
lret
ja
cmp
cmpsl
aaa
sub
je
cmp
lcall
add
jp
adc
imull
or
xor
pop
ljmp
cmp
mov
in
inc
mov
hlt
cmp
and
inc
xor
data16
jbe
or
cmp
subl
fwait
jne
sub
or
mov
xor
jmp
or
jp
rcrl
arpl
shll
cli
push
movsl
enter
outsb
mov
mov
mov
mov
pop
out
lods
aam
push
fdivr
inc
lret
rorb
test
decb
fistpll
push
aam
fcoms
mov
lock
mov
xor
push
mov
inc
xlat
fs
add
mov
push
rolb
and
mov
sub
add
xchg
adc
xor
pop
addr16
outsb
cmp
fidivrl
sbb
jne
and
cmpb
mov
adc
es
mov
and
or
jo
les
pop
mov
mov
xchg
and
jbe
push
jb
xor
sarl
jge
mov
pop
fadds
sub
mov
lods
xchg
cs
stos
dec
jecxz
mov
push
int
pop
mov
mov
call
push
call
lock
adc
or
add
outsb
outsb
cltd
xor
ret
loopne
std
pop
dec
cmpsb
mov
push
inc
mov
jbe
xchg
mov
xchg
sub
imul
lcall
xchg
daa
lret
lret
arpl
sub
push
add
pop
in
jo
cmc
mov
xchg
dec
and
mov
sbb
nop
ja
inc
outsl
mov
les
mov
mov
popa
movsb
aas
mov
dec
popf
fs
int
out
inc
pusha
test
in
daa
inc
lret
dec
mov
mov
sbbl
cmc
push
adc
xchg
add
jge
repz
into
aaa
cld
xchg
push
mov
or
lock
les
ljmp
or
in
rcll
mov
and
lods
pop
testl
lcall
mov
sub
cmp
dec
lods
or
pop
push
mov
push
and
and
lea
mov
cmp
xchg
js
cmp
push
shrl
push
imul
xchg
les
scas
bound
cmpsb
mov
out
insl
add
lret
fidivrl
mov
cld
loope
ret
fnstsw
push
int3
movsb
mov
inc
and
js
jle
in
jecxz
mov
dec
gs
pop
shr
push
xor
popa
scas
inc
mov
push
mov
xor
xor
sub
movsb
jb
mov
loop
data16
movsb
ret
mov
popf
adc
gs
clc
arpl
mov
push
push
rorb
lock
jb
cld
shlb
nop
popf
xchg
in
mov
outsb
push
cmp
push
out
push
jns
js
aaa
pushl
test
mov
enter
push
sub
lahf
insl
cmp
adc
jle
and
hlt
std
and
pop
lcall
imul
movsb
add
xchg
out
or
sbbb
mov
pop
mov
rclb
test
jge
pop
push
lcall
jl
imul
sar
fstp
push
loope
cmp
and
sarb
and
jb
les
call
movsl
pusha
mov
jb
daa
pop
jl
test
sub
mov
fwait
test
pop
jo
xchg
jmp
pop
rolb
push
xor
mov
mov
mov
adc
xchg
ja
sbb
and
lret
mov
call
lea
cli
inc
push
push
lods
xor
and
adc
jnp
fldl
popa
fwait
insb
cmp
push
imul
and
mov
test
in
jno
or
mov
mov
dec
in
and
add
mov
sarl
cltd
mov
sti
adc
jecxz
movsl
xchg
mov
sarb
fsubrl
dec
in
xchg
cli
or
jb
lret
inc
adc
jecxz
test
push
inc
xchg
arpl
call
bound
loope
dec
mov
rdpmc
gs
orl
dec
orl
xor
dec
cmp
insb
cmp
shrb
or
add
xor
neg
push
mov
dec
mov
xlat
flds
test
cwtl
add
add
jno
adc
enter
sbbl
pop
loope
xorb
xor
fiaddl
popa
inc
lahf
dec
sbb
pop
cmpsl
pop
jbe
nop
pop
mov
xor
pushf
nop
jae
jecxz
sub
addl
dec
dec
sahf
xlat
and
mov
push
cmpl
mov
das
arpl
aaa
bound
xchg
xchg
cmp
ret
inc
stc
mov
jmp
idivl
insl
lcall
jne
fs
in
sbb
xor
pop
int3
inc
xchg
jns
ljmp
aad
sbb
fsubr
xor
mov
fdivl
es
test
int3
push
cltd
mov
push
xchg
push
negl
pop
add
push
or
jge
hlt
pop
cmp
ljmp
or
adc
jl
subb
adc
pushf
push
movntps
xchg
aad
xor
push
rorl
scas
inc
test
pop
cmp
mov
dec
mov
dec
xor
pop
rorb
test
inc
int3
and
or
mov
sub
inc
jnp
pop
aad
sub
mov
das
mov
icebp
or
pop
jo
or
pop
into
mov
lods
inc
cmp
mov
adc
jp
xor
dec
mov
inc
inc
cwtl
inc
cmp
out
and
jne
sbb
lods
ret
leave
push
int3
data16
cmp
mov
sti
cmp
enter
push
rorl
mov
pop
cli
pop
lods
cli
psubb
out
xor
cld
out
faddl
repnz
push
daa
loopne
xchg
test
xchg
test
dec
or
mov
xor
dec
jae
mov
test
stos
gs
sub
and
cli
ja
enter
jmp
or
adc
sbb
and
pop
fnstenv
cmovl
push
call
lret
imul
andl
sub
in
test
into
inc
popa
jo
xor
mov
cmp
aas
xor
push
xor
dec
push
popa
sarl
rclb
fadds
xchg
and
sub
mov
lret
pushw
add
int3
aaa
mov
or
aas
sahf
dec
int3
pop
mov
cwtl
xchg
xchg
stos
mov
cmpsl
sahf
scas
jle
loopne
dec
les
or
add
adc
xchg
inc
aad
push
mov
lea
ret
lcall
jne
pop
fdivrs
or
js
xor
aaa
nop
es
xchg
je
fidivrs
jb
out
xchg
ds
int
sbb
jle
pushf
inc
mov
js
pusha
fwait
sbb
insl
cmc
jp
jle
iret
fwait
jl
int
pushf
xor
out
lcall
inc
mov
outsl
leave
xchg
insl
ljmp
sbb
adc
outsl
cmp
test
rorl
out
loope
in
xor
insb
add
mov
mov
fldt
aas
or
enter
pop
pop
and
mov
in
mov
add
adc
stos
subb
leave
aad
into
gs
cld
lret
push
ljmp
jl
dec
jo
jnp
jo
xor
arpl
xor
jo
test
iret
data16
out
in
lcall
jnp
xor
fs
loop
and
inc
add
jns
push
js
cmpsb
sub
out
cmp
sub
mov
cmp
dec
jge
push
inc
aad
push
call
sub
addr16
daa
dec
loop
jl
or
into
lcall
shr
sbb
cmp
sbb
mov
xor
rclb
mov
sahf
xor
cmp
xchg
lods
pop
mov
mov
sbb
bnd
cmp
ret
rcrl
sarl
mov
fnstenv
out
cmpsl
and
sbb
sub
mov
scas
mov
push
jge
mov
and
jmp
outsb
jb
cmp
mov
jnp
lods
mov
aaa
psadbw
iret
es
popf
lahf
sbb
fucomip
aas
xor
inc
lcall
push
data16
in
jno
iret
cmp
je
das
add
add
mov
sarl
orb
loopne
cwtl
sahf
inc
sbb
imul
cmp
loopne
je,pt
daa
cmp
fildll
mov
mov
add
divb
xor
add
add
and
inc
js
and
enter
jnp
decb
pop
xchg
jb
subl
add
sub
arpl
sarl
mov
and
pslld
add
fistps
stos
pop
sahf
mov
addr16
add
es
and
mov
dec
test
xchg
jnp
cmp
or
jae
inc
call
and
fmul
mov
fs
mov
and
add
jbe
push
mov
cwtl
xchg
rolb
adc
aam
lcall
or
adc
aad
xor
popa
movsl
mov
jge
or
iret
lahf
aaa
pop
sub
jl
or
cmc
stos
leave
push
dec
jb
das
insl
jmp
jp
add
and
fwait
cmpsb
fldenv
jg
mov
push
dec
les
jns
push
jnp
jge
fs
push
hlt
dec
pop
or
aam
je
leave
push
imul
jecxz
jo
mov
repnz
xor
xchg
dec
test
add
pop
xorl
and
roll
hlt
xchg
sub
xor
mov
ljmp
mov
push
aam
add
xchg
fistpl
sarl
insb
adc
cmpsb
lods
add
add
outsl
mov
xorb
cmp
lea
inc
adc
out
pop
inc
movsb
and
in
xchg
sbbl
rcl
xchg
dec
in
sbbl
fucom
mov
adc
adc
sbb
pop
mov
shl
gs
mov
push
xor
insl
add
push
fdivl
xor
test
inc
clc
pop
hlt
ljmp
mov
adc
popa
clc
push
push
ja
nop
scas
and
add
mov
mov
xchg
inc
xlat
xor
sub
imul
sahf
push
lds
loop
jge
pop
scas
add
xor
nop
adc
stos
inc
movsb
mov
andb
inc
fdivl
enter
xlat
push
ljmp
dec
loopne
in
imul
cmp
dec
out
addr16
push
filds
xchg
cmp
adc
pop
out
shrl
inc
adc
xor
fs
outsl
cmc
mov
ret
repz
mov
lret
and
int3
push
add
lret
sbb
dec
jp
push
jmp
mov
mov
sbb
dec
pop
mov
and
scas
daa
flds
dec
or
shl
popa
loopne
mov
addl
cmp
loope
mov
mov
mov
cmc
popa
test
sbb
orb
rcll
or
mov
dec
adc
leave
repnz
lock
scas
ja
add
mov
scas
inc
or
add
cmp
negb
mov
test
fs
mov
stos
pushf
inc
fmuls
push
into
inc
or
sbbb
xlat
fisttpl
sbb
mov
jl
mov
scas
pop
mov
int
mov
popa
sbb
xor
or
aad
pop
pop
sub
je
cmp
fwait
jl
or
shrb
fwait
push
add
ret
mov
cs
dec
push
mov
shl
mov
jge
or
lock
fwait
in
jecxz
inc
jno
xlat
jl
sub
jb
cmp
adc
and
cmpsl
sub
lcall
cmpsl
in
mov
mov
or
sbb
ret
push
lods
pop
lret
inc
push
fs
xchg
xchg
cmp
and
mov
pop
out
fldl
mov
stos
cld
pop
leave
int3
jns
mov
mov
lcall
jne
lods
pushf
jg
xor
int
int3
popf
push
cld
sbbb
jg
xlat
scas
xor
and
test
xor
test
mov
nop
adc
jle
add
fldt
inc
cmova
mov
rorl
das
mov
lds
sub
decl
dec
jmp
aaa
dec
add
or
out
sub
mov
mov
cmp
lret
add
fsub
out
int
inc
push
mov
imul
movsb
and
inc
xor
or
cmp
lock
push
inc
or
ror
mov
push
jg
cltd
cmp
leave
mov
xchg
jmp
adc
imul
dec
popf
cmp
pop
out
insl
aad
daa
mov
cmovns
std
dec
xchg
inc
shl
dec
or
and
cs
jmp
aaa
xchg
outsb
out
fmuls
dec
or
sbb
cmp
outsb
out
scas
and
xlat
mov
ljmp
add
and
pop
inc
cli
mulb
cltd
jb
into
lcall
bound
pop
clc
outsb
sbb
scas
jg
cmp
inc
cltd
jnp
dec
lcall
arpl
mov
jp
clc
out
pop
adcl
mov
rorb
xlat
int3
cwtl
ret
mov
cmpsb
sbb
sbb
jle
lret
xchg
sbb
inc
cltd
dec
push
aas
mov
sbb
sbb
lea
inc
fwait
aaa
fcomps
mov
xor
int
sbb
adcl
lcall
mov
popf
cmp
inc
pop
ret
fdivl
jne
adc
movsl
adcb
adc
adc
dec
add
sarb
mov
push
nop
inc
sub
in
test
inc
adc
add
mov
push
mov
rcrb
mov
ror
xchg
sahf
cmp
leave
or
mov
xchg
mov
jb
rcll
divl
add
adc
xchg
inc
ss
movsl
xor
mov
jb
rcl
xchg
test
push
xchg
push
adc
mov
or
out
mov
sub
rclb
divb
stos
sub
mov
dec
adc
inc
aaa
push
mov
sub
sub
rcl
test
sub
push
sbb
inc
or
lds
test
ss
scas
inc
das
rcll
add
int
mov
mov
outsb
fimull
cmp
aam
adc
dec
jmp
int
div
pop
sbb
pusha
repz
aad
pop
dec
or
sbb
inc
cmp
mov
outsl
cld
push
and
cmp
pushl
scas
sub
stc
rclb
push
inc
adc
cmpsl
cltd
loopne
das
mov
mov
sub
stc
inc
push
cmp
fwait
mov
mov
pusha
imulb
mov
cmp
bound
push
out
sbb
push
xor
movsl
push
xor
dec
mov
in
fwait
push
std
sub
into
bound
adc
and
stos
xor
xlat
or
dec
mov
sbb
popf
mov
iret
jg
fs
mov
jbe
out
fwait
stc
sub
and
aam
xor
lahf
cwtl
pop
int
shl
pop
fidivs
ljmp
aad
inc
fisubl
sbbl
cwtl
inc
in
lea
ret
xchg
arpl
pop
lea
mov
add
jge
mov
scas
sbb
push
mov
inc
sbb
pusha
xchg
jecxz
pusha
jae
and
jae
cwtl
loopne
jge
cmp
add
inc
sub
inc
push
xchg
push
idivl
stos
pop
add
hlt
cmp
jns
jl
enter
dec
sbb
rol
in
jbe
adc
xchg
and
shl
mov
adc
leave
pop
js
xlat
sbb
icebp
dec
sahf
fadds
shl
mov
xchg
jl
enter
loope
xor
pushf
pop
xchg
cmp
cmpsb
cli
adc
mov
mov
aam
pop
xor
stc
movsb
xchg
or
out
mov
call
call
ljmp
mov
orb
adc
bound
xor
push
rcr
es
lret
or
jb
pop
in
jo
out
sub
les
sub
imul
pop
popl
mov
fisubrl
lahf
aas
aas
jge
icebp
sub
int3
stos
jb
or
mov
data16
xor
das
js
fs
nop
inc
dec
jle
fstpl
xchg
inc
push
mov
shlb
xchg
jecxz
lahf
cmp
cli
inc
adc
pop
pop
mov
dec
pop
xchg
hlt
negl
les
cmpsb
pop
popf
loope,pt
pop
aam
cld
adc
insl
sub
lea
dec
daa
mov
add
scas
adc
lock
sub
jg
xor
mov
sbb
inc
adc
inc
dec
pop
addb
inc
fcmovbe
test
pushf
mov
imulb
mov
mov
movsl
nop
inc
inc
pop
mov
push
adcl
lock
and
aas
sub
gs
and
adc
cmp
push
and
nop
pop
aam
jl
andl
push
pop
xor
int3
pop
idivl
xchg
addr16
pop
sub
push
dec
mov
jecxz
fisubl
repz
xorb
or
add
addr16
jbe
jns
cwtl
cmp
jae
fmuls
xchg
or
loopw
mov
hlt
andl
cmp
inc
or
push
movsb
sub
mov
sub
mov
push
sbb
push
xchg
jo
rcrb
aaa
push
mov
enter
mov
in
bound
fs
adc
push
aas
fs
xor
imul
or
inc
leave
xchg
jns
js
divb
lret
pop
std
orl
xorb
mov
sub
or
insb
ljmp
jno
pushf
cmpsl
mov
sub
movsl
fildl
rclb
ds
add
arpl
sub
enter
fistpl
sub
outsl
mov
outsb
lock
pop
push
arpl
loopne
cmp
mov
test
out
or
and
outsb
lahf
pushf
inc
loope
sbb
hlt
icebp
push
into
xor
mov
and
jmp
cltd
inc
jbe
aaa
pushf
insb
gs
mov
stos
jne
lds
jae
das
mov
popa
jecxz
in
push
push
int3
pop
add
and
mov
or
cltd
movsb
in
jo
into
mov
and
cmpsb
fnstsw
sbb
mov
in
push
sbb
jne
sahf
add
mov
les
cli
adc
fwait
sub
in
jb
cmp
bound
icebp
pop
adc
xchg
cmp
mov
imul
fcomps
add
push
push
rcll
mov
fidivrl
xchg
nop
inc
pushf
out
cmpsl
sub
xlat
test
cmp
rcrl
sub
dec
shr
or
sub
sub
cmp
insl
pusha
push
jl
jge
xor
icebp
lret
xchg
push
pop
xchg
inc
push
adc
inc
nop
xchg
pop
mov
int
stos
outsl
bswap
push
mov
popf
clc
mov
stos
push
out
dec
mov
rol
xchg
and
cltd
pop
adcl
enter
sbb
stc
mov
sub
adc
jecxz
inc
pop
add
push
aad
negb
shrb
mov
popf
cmp
test
lahf
jge
outsl
repnz
mov
mov
cmc
std
subb
mov
inc
xor
pop
push
lahf
inc
lret
xor
fstps
push
ja
bswap
andl
popf
aad
push
mov
mov
hlt
gs
mov
mov
nop
js
shrb
repz
cmp
jae
or
arpl
adcb
pop
xor
adcb
lret
pop
cmc
pop
dec
and
add
xchg
inc
and
xor
xchg
ds
sbb
pop
xchg
fwait
inc
push
mov
jbe
pop
int3
aas
adc
dec
call
aad
add
ret
add
push
repnz
inc
or
adc
dec
cli
push
ja
mov
outsb
leave
mov
lret
aaa
movsb
mov
mov
enter
cmp
mov
mov
lods
sub
mov
xchg
mov
push
out
out
cli
fbstp
or
ret
mov
ret
xchg
subl
enter
rorb
or
test
mov
sbb
dec
js
dec
aam
popf
inc
cltd
or
je
negb
popa
out
jno
repz
lret
ss
add
lea
push
or
sarb
xchg
rorb
addr16
int
dec
adcb
jae
pop
into
adc
lret
enter
adc
mov
xchg
outsl
pop
std
sub
enter
in
pop
shrl
add
xchg
push
sbb
cmp
scas
cmp
jbe
mov
xchg
in
icebp
xchg
in
fidivrs
shl
adc
xor
outsb
jle
iret
mov
mov
mov
jl
push
add
bound
rolb
fnstenv
sahf
dec
jecxz
xor
jg
adc
movsl
bnd
pop
mov
int3
stos
fnstsw
mov
in
hlt
test
mov
mov
roll
mov
xlat
ja
mov
insb
mov
lods
enter
mov
test
test
jne
jae
fnstsw
pop
mov
sub
je
lock
push
sbb
ret
xchg
mov
movsb
or
ret
adc
sbb
lret
imul
mov
dec
push
cwtl
bswap
push
pop
sti
outsb
jne
addr16
jno
xchg
cmpsl
cs
push
cs
sbb
outsb
call
xchg
in
bound
movsl
xchg
sub
aaa
adc
push
inc
sub
loopne
inc
or
xorb
movsl
sarl
mov
aad
cld
pop
movsb
add
ret
mov
cmp
int
sub
mov
jo
jno
mov
xor
adc
in
jbe
sbbb
decl
nop
inc
cmpsl
xchg
fwait
cmp
mov
mov
imul
xchg
inc
push
insl
or
sbb
roll
xor
mov
stos
sub
stos
add
aad
test
ja
dec
pop
mov
data16
jecxz
mov
nop
inc
out
insb
out
stos
std
arpl
hlt
mov
inc
adc
mov
jge
stc
pop
cmp
dec
and
rolb
mov
test
pop
sti
and
push
ds
popl
or
lods
jae
push
cli
cmpsb
fs
or
dec
jl
loope
jg
inc
xor
outsl
sbb
ss
dec
dec
sub
lahf
cmp
mov
mov
mov
dec
mov
insl
adc
iret
dec
adc
sub
rclb
scas
daa
sbb
mov
nop
jns
mov
inc
add
mov
subb
pop
fnstcw
sarb
or
test
inc
or
cmp
or
dec
hlt
orl
lahf
inc
ret
jl
ret
out
jb
jge
mov
cs
addr16
push
repz
ja
inc
dec
adc
add
les
push
ljmp
rclb
xor
push
and
jge
adc
xchg
pop
out
or
cs
push
int3
add
int3
push
std
data16
negb
add
push
rolb
sub
dec
lret
pushf
mulb
or
aam
mov
lea
jnp
and
sbb
jmp
pop
lods
sub
or
scas
mov
fcomi
pop
sbb
imul
cmpsb
std
dec
adc
mov
add
sbb
pop
add
hlt
pop
flds
xor
imul
pop
cmpsb
sbb
xchg
mov
out
jb
mov
stos
xor
push
xchg
ss
addb
pop
or
push
lret
sub
in
jb
sub
in
mov
rorb
mov
fistpll
pop
daa
mov
mov
cwtl
nop
add
sub
mov
jns
je
dec
or
push
adc
lret
fsubrp
push
sti
xchg
dec
lods
gs
fisubrs
push
fisttps
movsl
sbb
adc
mov
sbb
dec
movsl
orb
outsb
icebp
cmp
mov
pop
mov
aas
aam
inc
or
add
fstpt
into
push
int
dec
sbb
je
inc
or
cmp
cmc
jb
je
lods
insb
roll
divl
jge
in
out
leave
mov
mov
addl
popa
popf
aaa
lock
cmpsl
xor
lock
cmovno
mov
inc
xchg
sbb
lods
inc
fcmovu
and
mov
push
gs
mov
lods
add
inc
sub
ret
mov
aas
add
jns
push
push
clc
adc
xlat
xchg
inc
mov
in
xchg
sub
rorb
pop
data16
sahf
pop
mull
sbb
xchg
fcom
jg
int
iret
pop
lock
jo
jb
popa
cmpsb
rcr
test
and
aas
mov
ja
or
pop
sub
cwtl
scas
enter
sub
icebp
inc
or
popa
push
clc
mov
xchg
cmp
mov
bswap
inc
lea
aam
xchg
imul
dec
inc
or
push
bswap
test
adcl
popf
mulb
dec
xchg
inc
push
in
xchg
mov
push
stos
mov
scas
sub
cmp
cmp
lods
sub
push
mov
inc
adc
dec
adcb
add
out
out
push
mov
inc
sub
lock
test
out
push
in
inc
repnz
and
test
xor
cmp
dec
std
pop
arpl
rolb
dec
and
lret
cli
movsl
xor
mov
insb
call
or
pop
notl
push
jns
add
pop
in
orl
orb
dec
adc
gs
lds
xchg
pushf
lret
xchg
mov
cmp
inc
cld
ret
mov
xchg
pop
lock
cmpsl
mov
stos
sub
lock
or
arpl
dec
push
int
push
xchg
aaa
movsl
mov
xor
lock
sahf
cmp
shll
mov
add
and
inc
adc
addb
loopne
mov
mov
insb
call
or
mov
mov
inc
or
mov
or
std
mov
inc
or
leave
cmp
dec
fucomip
jno
lcall
ljmp
out
mov
inc
or
ds
and
add
test
push
jb
xor
fbld
std
pop
add
lods
sbbl
iret
cmp
mov
mov
mov
gs
add
xor
mov
jecxz
push
loope
cmp
sub
in
mov
adc
and
test
xlat
fwait
inc
pop
iret
js
lea
out
aad
or
fisttpl
je
movsl
add
movsl
fstpt
roll
popa
and
adc
adc
add
js
pop
and
and
xor
aad
and
ja
jbe
ds
lret
ss
or
push
adc
test
mov
es
mov
aad
xor
push
hlt
pop
mov
mov
js
testl
cmp
orb
inc
adc
mov
add
je
or
xor
test
je
test
mov
push
in
daa
stos
aaa
mull
mov
inc
movsl
daa
test
mov
or
mov
test
hlt
pop
je
cmp
sbb
out
inc
arpl
sbb
inc
int3
mov
cmpsl
rolb
ja
pop
cli
ret
outsl
rcll
sti
lods
daa
pop
and
pop
mov
mov
add
xchg
jo
jmp
add
pop
movsl
and
imul
insb
dec
mov
jmp
pushf
xor
lods
and
push
cli
dec
xor
leave
add
lods
xor
int
or
push
mov
push
clc
lahf
rorb
clc
cmp
in
int3
mov
out
sbb
mov
inc
push
rorb
into
push
adc
movb
loopne
ss
filds
xor
filds
or
pop
push
clc
je
cld
pop
andl
sbb
arpl
fcoms
pop
mov
ja
aaa
lcall
jl
fs
cmp
sahf
popa
jae
jecxz
sbb
or
mov
or
out
movsb
scas
xor
fidivrl
pop
pop
push
mov
jle
xchg
cmp
jne
sahf
inc
insl
popa
aas
mov
pop
das
mov
xor
dec
in
jno
popf
mov
sbb
loopne
push
mov
inc
js
ljmp
movsl
mov
mov
stos
js
xchg
fnsave
add
add
adc
mov
cmpsb
xor
je
arpl
addl
bswap
leave
shrb
push
sub
scas
dec
icebp
gs
and
mov
jge
pop
add
fdiv
mov
jb
loope
pop
jne
lcall
xor
xchg
out
ja
and
mov
jbe
mov
jne
add
xchg
cld
push
fistpll
test
mov
ret
call
mov
scas
add
fists
fdivrs
data16
aaa
shrl
sbb
jecxz
cmpl
je
andb
or
ljmp
mov
inc
jnp
mov
xchg
orl
or
stos
inc
fucomp
jae
xchg
popf
inc
xchg
cltd
cmp
mov
jo
pop
ret
xchg
icebp
pop
scas
push
inc
or
mov
test
arpl
imul
cmc
pop
hlt
push
cmc
pop
stos
in
lret
push
mov
test
mov
imul
cmp
cmc
pop
mov
cmc
pop
frstor
mov
dec
adc
push
sti
or
push
pop
cmc
pop
xor
pop
sbb
orl
jl
es
xchg
xor
push
leave
cmp
mov
and
push
repz
mulb
in
cwtl
mov
cmpsl
jl
movntps
lods
add
xor
enter
hlt
adc
adc
aas
sahf
jnp
inc
adc
gs
push
xor
jmp
adc
pusha
cld
pop
lds
hlt
clc
push
aaa
daa
test
sub
jno
sub
mov
mov
cwtl
das
leave
lret
pop
cmc
cld
ljmp
scas
leave
xchg
cmp
mov
pop
add
arpl
fdivrp
popa
in
push
or
xchg
mov
clc
out
pop
mov
adc
xchg
outsb
add
popf
cmp
into
inc
das
lods
dec
pop
cmp
lahf
std
pop
pop
pop
clc
pusha
mov
cmp
mov
mov
ljmp
aas
cmp
mov
and
enter
ss
xor
test
cmp
lods
inc
sub
xor
xchg
mov
stos
sbb
ror
negb
or
orl
jl
sbb
jp
ljmp
les
mov
loope
jecxz
adc
in
push
dec
test
mov
pop
enter
aam
loop
sti
testb
mov
mov
mov
dec
outsl
hlt
mov
mov
subb
cs
sti
xchg
cmp
stos
adc
stos
jecxz
adc
push
stos
imul
and
repnz
xchg
and
pop
add
aaa
and
fcomps
icebp
pop
xchg
push
jns
push
lds
sub
adc
mov
stos
dec
push
ja
mov
xchg
fs
adc
insb
lock
inc
xchg
ds
int
mov
cld
popa
stc
testl
test
aaa
cmpsb
sub
mov
pop
lock
pop
jge
std
ret
push
or
pop
sbb
popf
loope
leave
xchg
stc
mov
cmp
out
imul
sbb
jne
cmp
scas
ds
xchg
in
lret
iret
mov
jne
and
shl
xchg
mov
dec
lret
mov
sbb
inc
pop
repz
mov
adc
jp
testl
jne
sub
lret
in
jne
faddl
lret
xor
add
xchg
mov
sarb
cmpsl
stc
fs
cwtl
inc
xor
dec
movsl
daa
sub
in
xor
mov
fisubrs
clc
iretw
fldl
enter
clc
push
lret
sbb
mov
bound
mov
jp
or
mov
cmpsl
scas
sub
fbld
inc
lcall
pusha
push
add
xchg
aas
js
out
sub
and
sahf
xor
cmp
mov
rorl
mov
lahf
bswap
and
dec
or
cmp
gs
inc
gs
les
in
inc
jg
jae
insb
add
xchg
std
dec
pop
test
lcall
and
xchg
cmp
lret
inc
or
push
mov
push
pop
insl
icebp
lret
dec
data16
repz
fdivl
dec
or
sub
jo
xor
stc
pop
stos
enter
mov
icebp
inc
insb
adcb
fbstp
in
imul
cwtl
loopne
push
adc
mov
scas
out
cwtl
out
insl
repz
ret
mov
shll
das
xorl
cmp
jl
leave
jnp
xor
roll
pop
mov
dec
or
jo
cltd
dec
adc
xchg
xlat
js
out
pop
add
mov
mov
mov
jge
cmpsb
mulb
icebp
aaa
lock
fdivl
lahf
nop
mov
lea
mov
or
and
pusha
hlt
shl
fstpt
ret
xchg
jno
fstpt
push
lcall
icebp
gs
sbbl
xorl
iret
loopne
pop
adc
mov
shll
into
xchg
loopne
iret
xchg
dec
repnz
adc
push
std
gs
inc
or
cwtl
fs
outsb
repnz
jb
jmp
inc
xchg
lret
xchg
add
rolb
sahf
jecxz
aam
mov
cmpsl
fidivrs
ljmp
jb
stos
mov
test
stos
or
push
adc
cmpsw
mov
in
test
stos
and
adc
mov
mov
mov
xchg
push
inc
leave
xchg
addl
cmpsb
pop
or
stos
xor
push
cli
dec
and
imul
mov
push
loop
fcoms
xchg
push
mov
add
push
add
cmp
push
inc
and
js
ja
push
imul
push
in
xor
mov
dec
adc
mov
movb
adc
jne
or
or
push
xor
xor
push
add
xchg
out
pop
push
sub
xor
stos
sub
cs
lock
loopne
out
loope
and
push
out
loop
cli
mov
mov
call
imulb
xchg
adc
jne
leave
cli
pop
cmp
dec
or
push
adc
dec
popl
push
xchg
or
push
add
mov
mov
xchg
ds
into
pop
mov
enter
lcall
pop
vpshad
xchg
and
lret
jl
cli
pushf
sbb
inc
adc
repnz
hlt
arpl
mov
loope
ret
ljmp
sub
xchg
mov
mov
pop
aad
pop
mov
fwait
sub
call
and
mov
mov
push
fnstcw
jge
sbb
and
sbb
xlat
cmp
fmuls
xor
out
cltd
cmp
std
pop
insb
jmp
push
pop
js
mov
nop
pop
out
insb
adc
dec
or
in
mov
cmpsb
clc
xchg
cs
and
adc
dec
xor
xchg
adc
mov
add
push
mov
pop
sub
jge
cld
push
push
bound
sub
cmp
adc
xchg
fwait
cmp
scas
mov
daa
ss
lods
call
cli
ss
xchg
sub
mov
lahf
pop
mov
les
fisubrl
pause
mov
dec
pop
in
push
add
and
xchg
aas
dec
pop
xchg
sti
mov
iret
lock
lcall
div
lods
insb
out
sub
aaa
inc
adc
data16
mov
fidivrs
repnz
ja
sbb
or
jmp
adc
sub
mov
sub
test
scas
xchg
in
addr16
mov
mov
sahf
push
add
rorb
mov
hlt
popa
testb
bound
nop
inc
hlt
stc
pop
jno
imul
popf
jnp
or
mov
shlb
in
xor
scas
std
and
rcl
in
pop
push
xchg
add
imul
or
clc
mov
dec
adc
aaa
pushf
cli
test
mov
in
jo
cli
ret
mov
fidivrl
cmc
out
jno
out
mov
xor
fsubs
ret
or
out
ficomps
xor
sub
mov
mov
fdivs
cli
data16
ds
jl
xor
push
cld
bound
mov
adc
imul
sub
lret
enter
test
sub
lret
negb
hlt
arpl
mov
adcb
in
pop
les
js
pop
and
std
pop
sub
cmp
xor
ret
pop
mov
mov
int
add
rcrl
dec
cmpsb
sbb
add
mulb
stos
daa
mov
roll
add
loopne
pop
xchg
jnp,pn
lahf
std
sti
pop
push
rcll
mov
xlat
jle
movsl
nop
cmp
stos
negb
dec
out
jbe
mov
out
or
arpl
scas
popa
jmp
repnz
mov
xchg
jp
xor
jbe
xchg
inc
xor
pop
dec
test
jle
adc
cmp
sub
and
loopne
pop
cld
xchg
pop
iret
mov
dec
jecxz
stos
int3
arpl
insb
push
sahf
sti
mov
iret
xchg
cmp
in
xchg
cli
and
dec
sahf
sub
add
sub
lret
pop
cs
lea
stos
scas
sub
ja,pt
push
xlat
mov
mov
adc
add
adc
dec
nop
inc
inc
hlt
mov
cs
adc
imul
xor
lods
mov
mov
scas
imul
cltd
stos
xor
sub
pop
add
iret
ss
sub
jmp
enter
xlat
sbb
faddl
mov
mov
sbb
popf
adcb
int3
or
cltd
sub
jb
shr
jbe
adc
xchg
inc
or
sbb
arpl
or
pop
inc
adc
pop
negl
enter
repz
pop
inc
mov
loope
xchg
in
sbb
cmp
lea
mov
es
inc
dec
adc
pop
add
mov
psrld
sti
sbb
repz
ficoml
jecxz
adc
movsl
pushf
or
jmp
add
mov
scas
jno
jg
lock
sbb
or
movsb
cmp
sub
adc
stos
test
je
int
pop
pop
testb
jmp
outsb
pop
add
xlat
in
jno
add
movsl
mov
frstor
es
push
or
rcrb
movl
add
pop
cmpsb
sub
mov
mov
push
add
ficoms
ret
ja
lds
stc
cmp
repz
addl
push
cltd
xorl
push
scas
push
jno
mov
fcoml
adcl
jno
loop
xlat
xor
ljmp
adc
jb
mov
mulb
stos
add
xchg
inc
pop
stc
ror
xchg
inc
or
test
push
out
cmp
mov
add
mov
insb
add
dec
out
nop
cmpsb
xor
xlat
xchg
mov
mov
pop
sahf
std
push
lret
push
inc
push
push
add
push
jl
and
lret
push
ja
cmp
rol
mov
aam
push
clc
das
mov
xchg
mov
test
jecxz
in
push
push
decl
xlat
es
mov
out
pop
fldt
pushf
cmp
js
cmp
or
shrb
lock
mov
adc
outsl
shrl
outsb
cli
mov
push
std
push
mov
jl
sub
add
movsb
sub
cld
movsb
mov
nop
jp
fs
push
das
notl
or
scas
pop
push
nop
cmp
mov
xchg
mov
stos
and
ret
sbb
mov
dec
and
push
mov
cmp
sub
scas
mov
lods
mov
mov
mov
and
pusha
leave
xchg
mov
test
nop
daa
std
lret
xor
xchg
dec
in
push
cli
es
or
add
mov
scas
pop
add
ret
lret
pop
add
test
lds
push
nop
cmp
aas
sbb
adc
lods
add
xchg
inc
push
sti
push
push
pop
mov
sub
xchg
fnsave
aas
and
sti
xchg
push
inc
pop
hlt
jae
sbb
mov
into
clc
out
xor
sbb
dec
cmp
or
mov
repz
adc
test
iretw
cbtw
test
mov
in
test
xlat
dec
in
or
imul
pop
sub
nop
jl
and
iret
cmpsl
add
xor
push
test
jne
jp
test
add
sbb
mov
dec
fbstp
insl
ds
mov
pop
repz
sbb
inc
inc
cmp
js
cltd
xor
mov
jne
sbb
ds
sub
hlt
mov
mov
test
push
add
in
test
dec
out
mov
mov
fcmovnu
sub
or
das
inc
fisubs
test
cld
mov
pop
aad
sbbl
mul
jl
daa
mov
lcall
and
out
aas
pop
and
xchg
push
inc
pop
hlt
jno
sbb
cmp
mul
cltd
xor
sbb
dec
cmp
or
mov
insb
mov
fdivp
mov
adc
test
shlb
subl
mov
out
test
aad
in
or
movsb
cmp
pop
sub
jp
and
cmpsl
incl
push
pop
push
push
xchg
movsl
cmpsl
movsb
cmp
movb
idiv
ret
sbb
mov
jg
aas
pushf
mov
pop
hlt
out
repz
and
jl
inc
inc
cmp
jbe
lcall
mov
dec
call
or
outsb
cmp
xchg
sub
cmc
mov
mov
stos
loope
shlb
add
leave
xor
out
test
push
out
mov
mov
fisubrl
rorl
mov
sub
dec
stos
inc
cmpb
mov
enter
test
add
out
daa
and
add
jns
rclb
and
std
in
inc
xlat
sbb
ds
cmc
outsl
jb
mov
nop
jl
ret
shl
jecxz
xor
ss
or
mov
fdiv
mov
adc
test
xchg
xorl
xchg
rorl
add
push
movsl
cmp
sub
lea
and
lret
test
std
add
xor
pop
push
push
xchg
test
jl
cmpsb
movsl
cmp
les
lcall
and
jle
inc
xlat
lcall
cmc
in
repnz
adc
inc
cmp
jne
fwait
xor
mov
push
out
ja
sbb
fsubrs
cmp
lea
scas
adc
shrl
add
lret
out
xchg
push
call
mov
fldcw
ret
lea
sub
loopne
dec
stos
inc
jle
addr16
scas
lahf
leave
pusha
rcl
test
repz
and
inc
add
pop
test
lret
cld
ljmp
push
cmp
imulb
sbb
mov
ret
cmp
hlt
loope
xor
push
pop
lock
xor
push
pushw
lcall
sub
mov
mov
inc
sub
shrb
jg
enter
xchg
rorl
add
cmp
insl
add
pop
sub
and
leave
test
add
sbb
xchg
test
jge
movsl
movsl
cmp
ret
add
hlt
clc
ret
pop
sub
and
jge
inc
fcomps
mov
sbb
adc
je
pushf
xor
mov
push
in
ja
sbb
fnstenv
cmp
mov
adc
push
xor
out
xchg
push
jmp
mov
jo
fsubrs
ret
mov
pop
dec
lods
inc
jge
addr16
scas
sahf
lret
iret
test
bnd
cmp
push
popf
jbe
rcrl
and
enter
sti
jmp
xchg
dec
cmp
insb
jo
mov
lea
mov
loopne
xor
adc
mov
push
cltd
xchg
outsl
mov
fdecstp
lea
push
mov
inc
sub
stos
pop
popa
shrb
jle
leave
scas
mov
xchg
rclb
add
cmp
outsb
add
mov
and
enter
imul
dec
push
xchg
subl
mov
ret
repz
mov
jl
inc
fstps
mov
sbb
push
ds
cmp
jae
popf
xor
xchg
pop
lock
ja
sbb
fidivl
cmp
mov
lods
fstp
shrl
pushl
xor
out
xchg
push
jmp
mov
jo
aad
sub
or
mov
pop
dec
lods
inc
jl
addr16
scas
popf
lret
iret
test
icebp
call
cmp
push
popf
jne
rcrl
and
leave
fbstp
call
xchg
dec
cmp
imul
mov
ret
repz
inc
xor
push
cltd
test
outsl
mov
xchg
sub
fdiv
lea
push
mov
inc
sub
pop
popa
shrb
jge
leave
scas
mov
xchg
iret
push
out
or
cmpsb
cmp
outsb
add
mov
cmpsb
lods
dec
loop
stos
inc
stc
imul
dec
push
xchg
subl
mov
roll
sub
mov
jl
inc
fsts
mov
sbb
push
cmp
pop
popf
xor
xchg
pop
lock
ja
sbb
xchg
sub
pop
clc
dec
mov
push
das
xor
xchg
push
jmp
mov
jo
aam
sub
or
mov
pop
dec
lods
inc
jnp
addr16
scas
pushf
lret
iret
test
lock
cmp
push
popf
je
rcrl
and
leave
fbstp
out
fstps
sbb
pusha
imull
sbb
mov
ret
repz
inc
xor
push
cltd
test
outsl
mov
xchg
sub
xlat
testb
sub
pop
popa
shrb
jl
leave
lods
mov
xchg
into
push
out
pop
cmp
outsl
push
push
pop
sub
and
stos
dec
loop
stos
inc
clc
std
imul
dec
push
xchg
subb
lahf
mov
push
popf
icebp
test
sub
and
js
gs
ficoml
mov
clc
call
or
shlb
sahf
xor
les
ja
pop
add
jb
cmp
nop
mov
pop
scas
fcmovnu
shrl
std
xor
xchg
ljmp
jno
rcl
sub
or
es
sub
pop
dec
lods
inc
jp
addr16
lods
fwait
lret
int
test
out
jmp
cmp
sahf
jae
rcrl
and
jbe
out
ficoml
sbb
xchg
dec
cmp
imul
push
mov
fstpl
lock
xor
push
cwtl
sbb
mov
xchg
sub
testl
pop
pusha
shrb
jnp
lret
lock
int
call
aaa
pop
jo
push
pop
sub
and
fcmovnb
lods
inc
idiv
imul
dec
dec
xchg
subl
aam
pop
sahf
lock
ret
pop
daa
adc
mov
jp
inc
fistl
mov
stc
out
sbb
sbb
inc
cmp
jno
lahf
mov
mov
push
push
add
jae
aaa
xchg
sub
push
cli
xchg
mov
sbb
paddb
int
xor
xchg
push
jmp
test
or
sub
pop
hlt
nop
daa
sub
pop
inc
scas
inc
jns
addr16
lods
lcall
in
ljmp
inc
or
cmpsb
xchg
es
stc
in
fistl
ss
stc
outsb
sbb
pop
mov
fistpl
icebp
inc
cs
seta
xchg
sub
push
or
dec
ds
push
lods
pop
pop
shrl
jns
lret
stos
mov
mov
lret
push
jmp
ss
lds
test
lods
inc
cmc
sti
push
sub
dec
mov
subb
pushf
mov
or
adc
mov
jns
inc
fcoml
mov
cli
in
push
mov
pop
sbbb
ds
outsl
pop
mov
icebp
shrl
unpcklps
fnsave
xchg
sub
xchg
sbb
or
das
lock
push
in
jge
push
movsl
mov
jae
rcl
sub
add
daa
dec
loope
inc
scas
inc
ja
push
fs
sbb
sbb
or
movsb
nop
daa
mov
mul
inc
fcoml
sbb
xchg
dec
xor
cli
imul
pushf
xchg
shr
fstps
repnz
sub
push
pop
bound
xchg
jg
jb
mov
cs
stc
nop
add
mov
cmp
aam
mov
int3
test
repnz
leave
push
ljmp
jb
dec
push
das
movb
dec
in
shrl
sub
mov
jge
jmp
lcall
mov
and
sub
jbe
inc
fstl
mov
sti
jecxz
pop
mov
add
cmp
cmp
stos
mov
adc
fnsave
xchg
cs
sti
xchg
test
sbb
or
aaa
into
sub
push
in
jnp
mov
jae
into
shrb
sub
and
scas
inc
jne
imul
enter
cld
jmp
cmpsb
cmp
insl
jno
pop
mov
loopne
fcoml
sbb
cwtl
dec
xor
arpl
mov
test
aam
xlat
lahf
or
pop
repz
sub
adc
mov
das
out
stc
nop
add
mov
cmp
pop
scas
push
pop
aad
lea
int3
cmpsb
scas
repz
push
ljmp
jb
dec
push
xor
test
sahf
movsl
dec
in
mov
insb
add
adc
fs
dec
mov
jl
jmp
cwtl
popf
test
iret
mov
pop
and
mov
jne
inc
fisttpll
mov
sti
loope
and
xor
push
mov
repz
fidivrs
adc
fnsave
cwtl
das
fs
sti
xchg
addb
mov
fcom
imul
aaa
into
daa
sub
mov
push
in
jns
adc
int3
shrl
lds
out
xchg
sub
and
jecxz
inc
scas
inc
jae
push
test
int
leave
mov
sti
out
sbbb
cmpsl
ds
cmp
mov
mov
ret
jecxz
cmc
fiadds
movhps
cltd
dec
xor
popa
imul
sbb
lahf
ss
push
pop
hlt
aas
sub
adc
mov
xor
into
stc
nop
add
mov
scas
push
pop
insl
mov
int3
movsb
lods
hlt
mov
lds
testb
stos
xor
jb
dec
push
xor
subl
pushf
movsb
dec
out
mov
insl
add
adc
fs
dec
mov
jnp
jmp
xchg
pushf
test
mov
and
sub
je
inc
fisttpll
scas
fs
and
xor
aas
push
mov
hlt
mov
fnstsw
psubq
je
xor
xchg
addb
rcl
aad
or
aaa
into
and
inc
push
in
ja
adc
lret
movb
xchg
sub
and
push
aas
scas
inc
jno
imul
xchg
int
enter
in
adcb
test
dec
cmp
mov
mov
ret
hlt
faddl
or
cs
pop
push
sbbl
jmp
lahf
ss
es
adc
mov
xor
int3
stc
nop
incb
sbb
mov
int
stos
cmc
mov
ret
push
jmp
adc
dec
push
xor
subl
out
mov
insl
add
adc
gs
inc
mov
jns
in
adcl
or
pop
or
sarb
in
jb
inc
fimuls
gs
fsubp
and
xor
aas
push
mov
mov
fstpt
or
das
cltd
xor
cld
xchg
jg
mov
mov
sbb
pop
repz
and
repz
push
in
jbe
adc
leave
into
das
ljmp
push
cmp
insb
add
mov
clc
jecxz
adcl
or
lahf
mov
mov
repnz
or
fwait
inc
sub
sti
pop
data16
mov
inc
xlat
jmp
or
cmp
mov
adc
ja
jae
mov
xor
lret
cld
add
mov
push
fsubrs
outsl
aaa
into
mov
rcll
cld
adc
sub
dec
xor
jg
xchg
sub
mov
outsb
add
inc
inc
mov
ja
in
test
mov
mov
sbb
ds
jo
dec
fisttps
stos
data16
fsub
and
xor
inc
xlat
addr16
mov
cmc
mov
fidivrl
clc
fidivs
cs
cmpl
insl
push
icebp
cmp
and
hlt
mov
push
in
je
adc
int
call
dec
out
cmp
add
mov
gs
and
loope
adcl
stos
inc
dec
xor
mov
sahf
xchg
mov
icebp
fadds
or
add
sti
pop
and
scas
mov
fsubr
iret
mov
idivl
and
adc
cmpsl
scas
pushf
xor
enter
add
mov
push
fnstenv
insl
aaa
into
sahf
test
mov
mov
adc
or
lret
xchg
sub
mov
outsl
push
and
ds
lea
pop
in
test
mov
mov
sbb
sub
ss
dec
fisttps
test
and
cs
mov
idivb
fnstcw
or
fidivs
sub
cld
xchg
jnp
mov
mov
rcl
outsb
add
daa
cmc
mov
push
in
jb
adc
enter
sub
pop
push
out
cmp
add
mov
fucomip
adcl
stos
inc
dec
xor
mov
popf
test
mov
lock
inc
fldl
adc
popf
inc
sub
fs
xchg
jp
sbb
mov
clc
cmp
mov
push
mov
je
lods
popf
xor
sti
xchg
clc
add
dec
push
fidivl
imul
pushf
cmpsb
clc
fdivrs
push
lods
sub
jne
inc
dec
xor
jl
xchg
sub
mov
dec
call
or
addr16
mov
xchg
lods
inc
mov
mov
sbb
sub
xor
call
loopne
mov
popf
mov
loopne
mov
sub
inc
fldenv
cmp
pusha
divl
xlat
jle
or
fbstp
sub
jns
mov
mov
rcr
outsl
add
cmp
push
and
push
out
jo
adc
test
lret
sti
in
sub
sbb
mov
imul
mov
and
fucomp
test
push
lods
inc
dec
xor
mov
fwait
subb
mov
call
fiadds
es
push
bound
sbb
lret
mov
stc
aaa
push
rclb
adcb
jno
jne
stos
sahf
xor
idiv
mov
mov
push
fidivl
push
rcrb
mov
push
lods
sub
jbe
inc
dec
xor
jp
xchg
sub
mov
out
jo
pop
or
push
jb
out
xchg
scas
or
popa
sbb
sub
xor
call
loope
mov
popf
mov
fisubs
psubw
fldenv
movsb
cmp
pusha
divl
jle
pop
repz
and
inc
xchg
js
mov
mov
iret
fsubrs
in
cmp
sbb
ds
out
outsl
jbe
stos
cmpsl
nop
jbe
ret
leave
stc
jecxz
sub
ss
push
mov
addr16
fsubr
test
adc
inc
inc
das
or
pusha
addr16
subl
jg
rorl
add
pop
sahf
aas
and
and
sbb
lret
cld
add
stc
xor
push
adcb
jo
jbe
test
std
xchg
cmc
cld
mov
mov
dec
fidivl
imul
aam
pop
out
in
cmc
push
lods
es
ja
inc
inc
xor
js
xchg
sub
cltd
push
jmp
out
jo
sbb
mov
lea
push
movsl
lret
add
jg
push
dec
loop
mov
popf
mov
fsubl
or
das
inc
fldenv
movsl
cmp
andl
rcl
jle
add
daa
pushf
xor
call
lods
cltd
sbb
outsl
jmp
rcrb
testl
mov
jp
adc
out
mov
test
daa
fidivrl
pusha
aaa
jbe
mov
into
mov
aam
pop
cltd
out
pop
dec
fs
cs
add
fstl
loopne
jge
pop
movsl
xlat
mov
inc
pop
inc
xchg
jg
or
stos
js
add
lods
js
ljmp
xchg
cwtl
mov
cmpsl
aam
or
push
pop
cmpsl
xor
cli
jmp
add
jmp
cmp
xchg
mov
sub
adc
fimull
jno
mov
adc
cs
imulb
pop
push
dec
fnstcw
fdivs
pop
iret
repz
pop
stos
push
push
cmp
stos
pop
sbb
xor
inc
std
mov
and
mov
jno
xor
lret
mov
insl
mov
test
outsb
dec
mov
cmp
fidivs
leave
xchg
mov
dec
xlat
loop
jns
out
jo
pop
stc
jp
add
pop
push
dec
mov
nop
dec
in
aas
repz
pop
mov
mov
rolb
cli
xchg
mov
adc
popf
fs
cmp
dec
mov
push
jg
sub
dec
or
lahf
lea
mov
jl
fxtract
inc
mov
mov
mov
mov
mov
std
dec
popa
adc
or
fwait
adc
and
subl
jne
mov
cmp
enter
pop
push
arpl
out
cs
fs
rorb
aas
and
lahf
fbld
xor
sahf
aas
lock
shlb
push
push
cwtl
dec
pop
mov
xchg
sbb
pusha
and
mov
les
mov
add
cld
sub
cld
dec
and
and
cmpsl
repnz
inc
mov
and
mov
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
sub
fcomps
sub
push
fnstenv
mov
jbe
data16
ljmp
pop
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
out
pop
test
inc
lea
add
mov
pop
xchg
das
dec
mov
mov
dec
mov
insl
cmp
lods
inc
push
cmpb
or
pop
cmp
jo
fs
xchg
fisubrl
mov
jne
mov
mov
xchg
cmp
aam
pop
mov
movb
pusha
mov
or
pop
ja
data16
inc
fs
test
push
cmc
add
mov
mov
or
mov
sub
out
in
shl
push
imul
scas
pop
inc
sub
sahf
dec
mov
inc
aas
aam
lock
loop
nop
pusha
and
ds
frstor
or
dec
flds
pop
inc
mov
movsb
jae
xchg
push
imul
jae
mov
jae
xor
dec
aaa
out
sbb
ss
stc
int
xchg
mov
testl
jle
mov
mov
dec
in
and
mov
lods
dec
sub
mov
lods
data16
fcompl
pop
mov
mov
repnz
popl
ds
xchg
mov
test
leave
xor
jge
hlt
inc
in
into
aad
xchg
cmp
fwait
sti
gs
popf
fistl
insb
idivl
xchg
dec
add
jo
outsb
outsb
mov
pop
imul
xor
daa
cmp
shld
mov
daa
push
mov
sub
stc
mov
mov
popa
add
xor
aas
arpl
enter
jmp
aad
mov
loopne
mov
xchg
adcl
inc
cmp
mov
inc
xchg
sub
ja
loopne
scas
cmpb
cmp
fists
xlat
call
jle
jae
cltd
inc
andb
sub
sub
adc
lret
mov
nop
dec
outsl
xchg
adc
pop
xchg
pop
mov
adc
roll
mov
fisubs
add
push
mov
repz
